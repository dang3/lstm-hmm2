add
add
ljmp
pop
or
movaps
push
sahf
pop
orps
adc
adc
push
dec
pop
movw
add
xor
decl
pminub
xchg
movb
push
inc
pop
jg
paddsb
xor
jo
pmulhuw
xor
or
js
jmp
mov
orps
enter
jecxz
movl
sbb
adc
paddusw
add
adc
rol
psubusw
sbb
packuswb
adc
pminsw
xor
add
or
jo
push
xchg
pop
or
push
cld
pop
dec
movb
psllw
rol
punpckldq
jl
je
movl
add
add
jmp
add
push
fwait
lahf
lret
jle
push
sahf
pop
ror
psubusw
add
and
and
push
inc
pop
jp
add
movups
sub
and
jnp
movw
push
cltd
pop
adc
push
xchg
pop
cvtps2pi
rcl
add
push
dec
pop
add
jmp
dec
paddb
and
adc
push
xchg
pop
cvtpi2ps
or
movw
jl
shl
push
cld
pop
and
pcmpgtw
jmp
mov
jmp
inc
add
movb
pmulhuw
je
paddusw
or
and
rcl
jo
jmp
stos
jae
lahf
mov
sub
push
inc
pop
rcr
adc
shl
movl
or
jbe
rcr
adc
dec
movw
jmp
out
sub
xor
jmp
pop
je
stc
scas
push
sbb
pmaxsw
jle
movq
add
jmp
int
or
jmp
cmp
in
jmp
pop
xchg
cmpl
jne
adc
mov
jmp
xor
stos
fcoml
inc
mov
fsts
lea
fprem
pop
add
or
mov
es
mov
es
fdivr
and
push
dec
xor
pop
dec
inc
mov
mov
or
ret
dec
xchg
int
dec
mov
sbb
into
adc
fsts
dec
fistl
dec
mov
sbb
dec
in
push
dec
and
in
mov
sub
repz
fcmovnu
jnp
ret
cltd
adc
xor
adc
jp
push
fldcw
sbb
jns
mov
inc
and
and
fildl
mov
fldcw
icebp
fildl
adc
fistpl
dec
scas
into
xchg
mov
fcoms
scas
fists
dec
push
ret
sub
fisubl
push
cltd
cltd
sub
int3
cltd
adc
mov
add
fisttpl
adc
fwait
mov
js
fnstcw
cmp
adc
fcmovnu
or
or
pop
fcmovnu
inc
icebp
fistpl
adc
or
sub
dec
fcmovnu
lods
jo
cltd
adc
movsl
aaa
inc
pop
push
xor
or
adc
fcmovnu
loopne
jg
cwtl
xor
aad
stos
xor
enter
or
es
mov
es
mov
cltd
sti
dec
fcmovnu
adc
pop
xor
sbb
pop
push
fnstcw
fistpl
ret
ret
sbb
shll
adc
sbb
cwtl
inc
push
or
ret
sbb
dec
push
fnstcw
mov
and
mov
or
sub
rcll
fistl
js
xchg
sbb
rcll
fistl
js
cltd
pop
lret
sbb
cwtl
dec
push
xchg
or
mov
pusha
push
lret
adc
fcmovnu
cwtl
or
push
push
inc
push
mov
adc
lret
ja
jmp
adc
cltd
pop
ret
fwait
aad
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
push
rclb
mov
sbb
rcrb
mov
cmpsl
std
pop
jnp
mov
aam
fcmovnu
adc
lea
inc
dec
mov
fisubl
sub
mov
and
aaa
dec
in
outsl
insb
addr16
pop
sbb
jbe
in
jbe
lods
aaa
inc
xor
sub
jbe
lods
aaa
pop
push
xor
dec
push
fcoml
inc
pop
and
inc
pop
pop
adc
fcmovu
ret
adc
xor
fldenv
push
sbbb
push
mov
or
xchg
mov
mov
cwtl
sbb
fcmovb
pop
push
loopne
mov
jecxz
cmp
mov
loop
push
push
fstpt
cmp
cld
in
mov
flds
stc
fcmovbe
lret
sbb
inc
mov
sbb
mov
cmp
cld
in
mov
flds
fstp
lret
sbb
inc
sbb
dec
adc
addr16
push
fistl
pop
pop
sbb
lret
mov
sbbl
lret
sbb
cwtl
dec
fcomps
nop
mov
mov
lret
sbb
cwtl
dec
fcomps
cwtl
cwtl
ficomps
adc
push
or
and
addr16
push
stos
pop
ret
mov
fsts
dec
pop
sbb
ret
fistpl
push
fists
inc
mov
add
daa
insb
mov
add
sbb
fstps
or
mov
mov
fstpl
dec
mov
add
fisttpl
adc
fstpl
dec
mov
add
fisttpl
adc
fstpl
dec
mov
inc
mov
push
fists
mov
popa
fsts
dec
push
and
int3
cltd
adc
xor
dec
fistl
lret
sbb
mov
and
mov
jp
scas
lods
jb
popf
stos
jbe
fisttpl
jb
lcall
daa
mov
stos
jb
mov
lods
inc
cmp
jbe
test
jge
mov
mov
dec
xchg
lods
inc
es
arpl
mov
fs
mov
mov
fistl
addr16
mov
popa
and
lods
inc
cmp
mov
jl
mov
and
cmp
adc
fsts
dec
fcmovnu
adc
fsts
pop
fcmovnu
adc
fldlg2
insl
fldt
push
dec
fcmovnu
adc
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
add
mov
dec
adc
mov
jns
sarl
subl
or
les
mov
cmp
ja
sbb
sub
inc
dec
aam
mov
int
jl
test
add
add
add
mov
lahf
std
sub
cmpsl
daa
mov
ds
mov
mov
stc
inc
jo
push
cmp
mov
xor
mov
gs
push
ljmp
mov
xchg
adc
ret
and
out
xchg
xchg
push
fwait
je
popf
mov
add
add
add
add
inc
out
aaa
test
add
add
add
add
jns
popa
mov
add
add
add
add
xor
add
add
repz
add
add
cmpsb
add
add
push
add
add
add
adc
add
add
add
add
add
pop
add
add
add
lea
add
add
add
add
add
add
add
add
or
add
add
add
add
or
push
add
add
mov
data16
add
jns
add
add
add
add
add
cltd
add
add
repnz
sbb
add
add
cmpsb
inc
sub
add
add
add
jmp
add
add
add
add
add
add
dec
popf
inc
leave
add
add
add
add
cli
add
inc
add
add
push
add
add
add
sbb
inc
jle
repnz
add
dec
rolb
adc
add
adc
lock
inc
add
movsl
mov
xchg
hlt
xchg
fwait
sbb
sub
mov
sbb
pop
cltd
push
popf
add
and
xor
add
daa
popa
add
insl
lods
pop
iret
out
xor
and
stc
int3
ficoml
lea
test
mov
xor
das
mov
pop
scas
and
addr16
xchg
mov
lods
sbb
call
sarl
pop
jmp
ror
pop
inc
pop
jecxz
mov
insl
dec
push
adc
push
loop
iretw
aam
bnd
out
loopne
outsb
inc
subb
push
jmp
mov
js
ret
xchg
daa
mov
cs
push
lds
or
mov
xchg
dec
jno
cmp
int
push
cmp
and
jmp
cmp
mov
sbb
xchg
mov
fisubl
jl
mov
inc
in
insb
xchg
aas
dec
mov
and
fiadds
loopw
dec
rcrb
dec
jg
sbb
xor
or
xchg
in
xchg
mov
or
and
enter
cs
lods
jne
push
lds
lea
push
enter
sahf
sarl
fadds
pop
fstpl
add
mov
lea
gs
or
insl
adc
xor
nop
and
jl
out
fwait
pop
push
sub
xchg
mov
and
out
or
rorb
call
addr16
roll
mov
add
je
jae
iret
pop
outsl
inc
jb
cld
scas
or
fwait
popa
sbb
mov
mov
notb
and
cmpsb
xchg
mov
or
shll
dec
inc
xchg
jbe
std
scas
ror
dec
xchg
xor
bound
mov
rcll
arpl
sarl
pop
in
loopne
cmp
lds
imul
adc
stos
inc
fisubl
cmp
or
mov
mov
mov
push
xchg
iret
xor
shrl
into
mov
flds
into
inc
xor
fstpl
addb
in
inc
push
imul
add
cmp
insb
xlat
jns
cmp
or
jge
jno
pop
pop
jle
add
decb
cmp
gs
aaa
rcr
shl
adc
movsl
inc
rorb
lock
add
cmc
inc
and
xor
insl
into
add
xor
imul
ja
popl
mov
push
je
push
mov
scas
hlt
mov
cmp
sbb
pop
sbb
je
jns
negb
pusha
adcl
mov
test
mov
xor
push
mov
cmp
sbb
xor
xchg
dec
movsl
andl
aaa
lds
scas
cwtl
aam
push
sbb
and
test
inc
rcrb
or
in
sarb
idivb
scas
mov
cld
fst
jmp
testl
inc
mov
insl
pop
pop
push
xor
push
pop
cld
mull
mov
popa
inc
mov
dec
std
sub
jmp
jp
pop
dec
mov
dec
mov
fsubl
mov
adc
and
pop
cmpsl
and
hlt
minps
out
call
mov
lret
scas
xorb
push
fwait
loop
push
sbb
cli
pop
jmp
out
int
adc
je
mov
fimull
mov
add
xchg
dec
js
imul
outsl
adc
add
or
sbb
fildll
ja
in
xchg
xchg
sahf
jnp
in
lods
test
sub
pop
std
loope
pop
cmp
mov
cmc
or
adc
cld
sbb
inc
jl
shlb
retw
lahf
push
pop
test
subb
mov
mov
mov
cmp
add
pop
adc
sbb
sahf
fadd
inc
or
mov
ret
xchg
pop
xchg
popa
iret
push
mov
in
pop
bound
inc
dec
and
and
xchg
and
icebp
int
fstpt
inc
cmp
adc
pop
adc
lea
mov
dec
out
mov
std
dec
xchg
jns
das
aam
inc
in
xchg
addr16
jne
sbb
cmc
push
icebp
fnstsw
xchg
lret
fadd
imul
mov
adcb
inc
pop
adc
sbb
shll
loop
and
mov
adc
xlat
mov
test
movsl
dec
cwtl
daa
jae
jns
mov
mov
aas
sarl
sbb
xor
mov
or
pop
fsubrs
add
xor
push
shl
cmp
nop
iret
pop
imul
mov
add
shll
push
int3
pop
jg
jmp
inc
sub
outsb
sbb
xor
and
mov
mov
data16
je
loope
pusha
arpl
and
sbb
insl
arpl
outsb
jbe
fnstcw
ja
shl
in
pop
dec
das
loopne
mov
pop
inc
xor
mov
add
adc
pop
lret
sub
sub
movsb
cli
jne
loop
nop
mov
jno
cmp
rol
sbb
push
mov
fisubrl
cmp
fs
dec
sbb
push
cmc
mov
dec
lea
int3
fsubl
aam
cmp
rep
mov
push
dec
cltd
jmp
je
cmp
std
es
sar
mov
dec
mov
mov
in
cwtl
sbb
mov
mov
imul
push
mov
sarb
repnz
xchg
ja,pt
cmp
or
je
push
in
pop
xchg
ret
mov
push
pop
mov
rcrb
pop
sbb
xchg
sub
gs
ds
hlt
loope
pop
dec
fs
cmp
test
xor
inc
jno
add
or
loopw
dec
and
out
stos
jns
pop
add
clc
mov
dec
xor
add
mov
push
mov
sti
dec
loopne
fstl
sub
gs
or
jge
ja
out
jl
pusha
xchg
shlb
jno
pusha
les
lret
xor
pop
leave
sahf
shlb
inc
adc
jo
fmulp
cmpb
jbe
notl
fmull
cmp
sub
cmp
daa
sbb
mov
std
xchg
push
push
imul
ret
jle
insl
test
push
xorb
mov
or
je
cltd
das
enter
xchg
adc
shl
and
push
pop
jne
je
xlat
push
push
cmp
adc
aas
pop
adc
sbb
jle
les
mov
mov
rcrl
dec
pop
xchg
adc
mov
lock
cmp
xchg
and
ja,pn
pop
add
test
cmp
arpl
lahf
inc
cmpl
cli
add
push
aaa
pusha
push
mov
inc
loopne
cmpsl
sti
dec
nop
jmp
xor
mov
loop
xchg
imul
hlt
jecxz
aam
push
neg
jg
out
notb
les
enter
insb
mov
mov
xchg
insb
inc
add
and
add
mov
mov
and
movsl
notl
dec
movsl
arpl
fldenv
xchg
movsb
dec
lcall
jne
sub
xchg
cmp
std
out
lret
aaa
out
ret
pop
mov
push
push
data16
in
pop
add
sarl
adc
movsb
shr
pop
insb
pop
insb
out
push
and
int
pop
adc
scas
fdivl
ds
js
aaa
lds
loope
pop
test
es
pop
mov
in
cs
xor
and
jbe
ljmp
mov
inc
imul
push
mov
jne
jmp
mov
in
mov
andps
inc
sbb
mov
xor
in
cmpsl
jnp
adc
aaa
loopne
jge
and
xchg
fwait
icebp
ret
addr16
pop
and
stc
popa
inc
stos
je
js
push
mov
jg
outsl
and
aas
and
xchg
mov
enter
sar
push
push
ja
adc
mov
shll
repz
ljmp
pop
packuswb
xor
insl
loop
push
push
xor
sti
mov
pop
out
les
fisubrl
mov
adc
push
pop
jbe
jne
ja
xchg
push
push
movsl
push
test
cmp
dec
out
sbb
push
fcmove
dec
push
mov
pusha
xchg
cmp
sbb
pop
inc
es
inc
mov
insb
rep
push
jo
cmp
icebp
and
in
shrl
outsb
clc
insb
inc
mov
mov
rorl
out
mov
add
xor
push
and
iret
sub
lahf
xor
lcall
notb
clc
sbb
js
pop
pop
sbb
jo
cmp
jne
cmpsl
loope
pusha
mov
sarb
test
mov
mov
int
repnz
jae
inc
enter
es
mov
dec
cmp
pop
lods
inc
lea
lds
insb
xchg
and
stos
pop
jb
pop
mov
mov
stos
pop
and
cmp
xchg
push
shl
gs
ja
lcall
mov
mov
stos
xchg
stos
sti
dec
xchg
pop
pop
mov
cmpsl
mov
and
xor
inc
adc
pop
pushf
fnstcw
push
mov
and
popa
and
cmpb
xchg
sub
push
mov
dec
jp
inc
in
push
std
or
sbb
dec
adc
and
aam
je
into
adc
or
mov
xor
mov
ja
jns
pavgb
push
out
adc
shll
stc
sbb
ds
inc
test
cwtl
dec
and
cmp
fcmovnb
pop
sbb
nop
dec
and
in
les
push
cmc
lea
add
leave
push
mov
dec
std
push
movsb
pop
add
add
mov
jp
cli
mov
or
sub
sbb
pusha
cmp
bound
xchg
cltd
jp
js
imul
cmp
sbb
js
inc
sbb
cmpsl
sarb
and
push
arpl
push
sbb
ja
repz
jo
jl
aam
inc
and
in
mov
lret
push
pop
inc
and
jns
decb
and
sub
push
inc
cmpsl
lods
or
pop
nop
or
or
call
in
in
lahf
inc
mov
fildl
add
movsbl
cltd
stc
jg
fwait
lock
insl
push
adc
movsl
or
aaa
dec
std
in
jg
sub
jo
in
lret
fldcw
lahf
jbe
jmp
into
push
jae
mov
dec
inc
pop
ljmp
sub
jnp
enter
jo
mov
pop
aas
dec
push
ficoms
jns
or
push
dec
nop
pop
mov
cmp
sbb
xor
fistl
sahf
jecxz
jle
dec
push
sbb
push
mov
add
insl
imul
divb
push
dec
lods
inc
in
cltd
es
aam
fcom
jae
shl
sbb
lret
mov
jno
mov
sbb
add
cltd
mov
jecxz
pop
fisubs
jp
loop
mov
mov
das
imul
adc
xchg
xchg
or
push
arpl
lea
mov
mov
push
sbb
cmc
xchg
sti
pop
dec
lock
into
inc
push
cmp
or
ficoml
out
adc
pushl
sbb
loope
sarl
test
repz
pop
aam
push
and
pushf
push
inc
in
popa
jbe
mov
xchg
lcall
push
imul
and
out
xlat
mov
pop
mov
and
out
sbb
jne
jno
int
sub
pop
push
jne
inc
popa
out
jmp
ss
or
xchg
fildl
out
and
cmp
pusha
xor
scas
stos
shlb
jmp
mov
ret
xor
mov
fiaddl
xchg
or
dec
pop
ljmp
and
add
sub
xor
in
dec
xchg
sub
sub
imul
add
sub
xchg
xor
xchg
xor
sti
push
inc
cmp
loopne
cmc
or
inc
inc
and
xlat
ret
and
adc
cmp
loop
shr
jmp
ss
sti
sbb
cmp
in
dec
stos
dec
lcall
ror
jo
mov
pop
push
push
ja
xor
movsl
push
xchg
inc
or
imul
xchg
aaa
sbb
push
pop
adc
push
aas
fdivrs
ret
cld
fbstp
mov
sahf
push
ljmp
sub
pop
and
pop
dec
imul
lds
es
adc
shrl
mov
lret
add
inc
lahf
xor
push
in
rorl
pinsrw
aam
cs
int
loope
fnclex
pop
dec
ljmp
jmp
into
imul
testb
arpl
dec
repnz
jnp
mov
inc
jo
mov
jns
in
call
mov
jo
daa
jo
add
push
push
mov
adc
ds
mov
negb
push
nop
aaa
xchg
fcomi
call
adc
mov
rolb
inc
jnp
mov
jp
fs
push
push
repz
xchg
jno
test
xchg
mov
sub
dec
pop
out
fistl
fidivrl
test
loop
int3
jle
fisubrs
pop
jg
jo
xchg
inc
dec
fwait
jb
or
and
xchg
xchg
xchg
leave
mov
mov
cmp
lret
ljmp
mov
or
fildl
push
mov
mov
xchg
rorl
and
stos
iret
sbbb
mov
shlb
scas
jg
call
mov
divb
stc
dec
or
loopne
shlb
jle
add
sahf
jbe
sub
or
sbb
mov
mov
add
mov
add
lods
mov
icebp
fdivrs
jne
call
pop
pop
lock
gs
jae
push
aad
push
sub
shll
mov
pop
or
in
jnp
adc
adc
push
fcom
xchg
mov
inc
ds
imul
sub
cmp
mov
and
jle
fdiv
push
sub
cmp
cmc
pushf
lret
sbb
xlat
jecxz
mov
xlat
and
mov
and
mov
nop
mov
mov
fsubrl
and
sarl
outsl
fldcw
fadds
bound
fadds
jno
test
mov
mov
lcall
and
insl
ss
ja
std
insl
fs
scas
lahf
mov
imul
lret
mov
mov
push
arpl
inc
fidivrs
adc
lret
mov
push
jb
jl
fcomip
scas
sbb
xchg
adc
jo
mov
je
cmp
and
pop
mov
mov
adc
or
mov
pop
rclb
pop
in
pushf
gs
rcl
jae
rorb
test
mov
cmp
push
sub
jbe
aas
out
mov
test
insl
xchg
jnp
sbb
repz
shlb
dec
dec
clc
dec
popa
ljmp
pop
mov
mov
pop
loop
fwait
xor
sub
js
and
adc
outsb
js
mov
sub
xchg
dec
add
cmp
lahf
iret
rcll
in
xor
sub
push
sub
stos
jno
xchg
aaa
adc
jle
in
mov
cmc
xchg
or
stc
lods
cwtl
in
imul
jae
orl
jno
cmp
js
inc
adc
cmp
xchg
sub
ret
scas
cmp
mov
mov
jp
dec
sub
ljmp
push
rcll
shrl
jne
xchg
push
fildl
and
fimull
push
jbe
and
aam
xchg
dec
pop
push
mov
test
add
and
stos
add
sarl
into
enter
negl
and
mov
mov
mov
roll
lcall
out
pop
andb
push
dec
xchg
pop
mov
addb
in
dec
test
test
enter
scas
iret
lahf
insb
sub
notb
cmpsb
sbb
sub
lods
icebp
sbb
scas
scas
adc
pop
movsl
test
mov
xor
mov
pop
sbb
invd
push
aam
push
lods
and
sub
ret
sahf
xlat
and
lcall
jo
pop
sub
push
sub
insb
cwtl
xchg
pop
ror
pop
aas
xchg
out
pop
loop
out
jmp
pop
nop
mov
jmp
fisubl
cmpsl
arpl
pop
jne
in
aad
pop
negb
mov
mov
mov
js
sti
push
add
loope
xchg
mov
out
add
jecxz
and
mov
jnp
shlb
cmp
add
cs
cmpsl
icebp
fnstcw
arpl
pop
shlb
dec
or
repnz
mov
test
jbe
lock
cmpsl
mov
inc
leave
and
cmp
inc
lahf
fcmovne
mov
push
arpl
jns
mov
lds
mov
cmp
push
aaa
xor
ja
push
xlat
fcmovu
cmpsl
repnz
pop
push
pop
dec
jmp
movsl
sbb
lret
data16
dec
xchg
adc
lahf
outsb
shlb
or
notb
test
jl
adc
pushf
xor
iret
insb
movsb
data16
gs
mov
push
lds
sbb
ret
jns
mov
cwtl
fxch
cmp
fcomi
xchg
sbb
je
js
out
mov
mov
pusha
xchg
or
push
cld
outsl
jnp
arpl
cmpsl
inc
ljmp
outsb
add
xchg
mov
loopne
adc
push
adc
out
push
push
inc
dec
sub
scas
and
lods
pushf
cmp
push
push
sub
push
les
shrl
aad
lods
push
pop
add
in
lds
jle
mov
xchg
mov
es
jge
pusha
aad
inc
or
orb
xchg
arpl
shlb
mov
pop
mov
lods
push
cmp
push
movb
xchg
arpl
jbe
les
outsl
sahf
bound
int3
and
and
pop
orl
push
in
dec
sbb
lret
push
jb
jae
and
in
in
mov
mov
adc
pop
cwtl
pop
leave
stos
fwait
lods
aam
pop
call
mov
aad
push
xor
pop
and
push
and
inc
sub
cmp
ret
or
test
pop
int
faddl
ror
out
mov
pop
je
out
mov
adc
out
mov
arpl
add
push
push
out
mov
sahf
aaa
dec
jg
roll
rorb
in
ret
in
fwait
out
cmp
fcoms
add
pop
addr16
test
mov
push
xchg
xor
movsb
loop
gs
sub
sbb
dec
add
fistpll
xor
push
mov
inc
dec
rcr
pop
ret
pop
bnd
pop
imul
sub
out
jo
out
fcomp
push
push
mov
sub
and
pushf
xchg
xor
out
or
jo
lcall
mov
or
pop
rorb
je
data16
ficoms
dec
pop
mov
xchg
adc
mov
lods
jo
ss
fidivrs
xchg
adc
leave
out
clc
or
add
stos
repnz
in
jecxz
call
sbbb
outsb
add
cli
xchg
cmpsl
xor
mov
enter
mov
cs
add
mov
fists
sahf
mov
sub
mov
and
mov
ret
in
sub
cltd
repnz
lods
jp
jb
stc
mov
ret
bound
insb
mov
in
pop
bound
mov
mov
int
jmp
pop
add
loope
jb
ret
push
push
jno
xorl
pop
iret
push
andb
xlat
and
fs
lods
pop
mov
xchg
fwait
mov
imul
enter
in
movsl
pop
sbb
hlt
or
aad
xor
out
mov
sbb
cmp
js
decl
inc
inc
and
push
jmp
sub
in
mov
es
lret
adc
or
pop
jl
mov
inc
ljmp
jno
adc
sub
sub
data16
push
pushf
test
mov
jp
xor
cmp
mov
mov
ret
sti
and
sub
or
push
stc
call
lock
adc
js
iret
jge
jo
sbb
insl
sarb
cmpl
xchg
into
cmp
xchg
jle
in
int3
jge
cwtl
outsb
test
iret
add
nop
shlb
adc
fs
mov
add
xor
pop
mov
ret
cwtl
paddw
mov
std
hlt
loope
aad
ss
and
ss
xor
lret
divl
cmp
xor
mov
leave
cmp
adc
or
repz
xchg
inc
aad
fbld
leave
aad
push
mov
and
stc
adc
pop
in
incb
repz
pop
sbb
push
cmp
lods
jnp
xchg
jns
or
xchg
push
xchg
lods
je
sbb
icebp
aad
add
push
in
xchg
dec
inc
in
into
dec
int
sbb
xor
pop
stos
jg
mov
inc
cmp
push
jecxz
mov
mov
push
es
cmpb
mov
sbb
add
insb
bound
cvtpi2ps
dec
add
repnz
xchg
add
xchg
insb
add
mov
and
jmp
add
lahf
xchg
inc
es
pop
push
stc
jmp
je
fwait
stc
push
and
add
imul
aad
sarb
outsl
lods
jg
mov
enter
add
mov
adc
mov
push
cmc
mov
mov
push
mov
dec
xchg
je
mov
out
out
pusha
int
push
out
pushf
mov
mov
out
cmp
and
inc
add
insb
inc
inc
mov
jno
cmp
loope
nop
cli
and
mov
jb
fidivrl
outsl
nop
mov
add
js
popl
sahf
push
or
push
mov
cmp
and
ds
in
cltd
call
int
scas
xorl
nop
pop
push
push
repnz
lds
test
cmp
pop
cld
sub
nop
xchg
scas
mov
gs
sahf
outsb
mov
movsb
cmp
imul
fs
mov
ljmp
push
push
pop
mov
push
cld
mov
cmpsl
pop
sub
push
cmp
jns
mov
pop
sar
push
enter
jl
or
dec
bound
push
push
mov
fists
aad
loop
jns
push
inc
xchg
jmp
pop
xchg
cmp
in
push
dec
mov
jb
cmp
sahf
cld
ror
lahf
movsl
lock
push
testl
pop
xchg
or
push
jmp
push
lods
sbb
xchg
jg
dec
movsb
mov
sub
and
sbb
scas
daa
push
and
or
adc
mov
ja
movsb
pop
loopne
xchg
loopne
push
jae
mov
lock
pop
cmpsl
imul
in
adc
mov
pop
pop
popf
testl
cld
popf
adc
popa
jg
lods
lret
jae
bound
enter
mov
ret
jg
add
push
cmc
outsl
adc
into
jp
addr16
mov
sbb
push
nop
pop
mov
cltd
jne
mov
mov
sub
andb
adc
out
stos
push
ljmp
dec
bound
push
jnp
fdivl
pop
cmp
addl
movsb
rclb
xor
repnz
or
enter
lret
mov
cltd
xor
movsl
fcmovb
pusha
leave
mov
test
enter
test
stos
sbb
loop
insl
rolb
outsl
push
jmp
jecxz
mov
in
pop
cs
inc
and
sub
mov
push
mov
inc
arpl
xchg
jecxz
lods
ja
sar
cmp
scas
movsl
or
jge
in
popa
cmp
xchg
xor
xor
sub
or
add
mov
inc
icebp
xchg
bound
test
ror
sahf
movsl
test
mov
aad
pop
jmp
inc
mov
fildl
test
leave
jnp
mov
and
push
jge
mov
adc
jge
xor
and
sbb
loope
dec
add
jbe
test
pushf
int
movsl
push
loopne
push
sbb
mov
pop
sti
ss
mov
in
js
incl
adc
lcall
jle
lods
mov
cmp
pusha
adc
mov
or
adc
int
pop
stos
lahf
jno
pusha
stos
push
repz
or
mov
imul
inc
sarl
pop
inc
int3
mov
cmp
or
jg
stos
and
mov
inc
pop
mov
or
xchg
lea
enter
xor
pop
inc
or
hlt
jp
in
pop
xchg
bound
orl
stos
xchg
movsl
xchg
lea
jae
jmp
pop
jg
mov
jmp
insl
pop
mov
fdivrp
and
jmp
sbb
dec
inc
add
scas
imul
cs
push
mov
aam
orl
aas
in
push
mov
in
mov
or
pop
adc
inc
cmp
lret
jecxz
leave
in
mov
gs
loop
mov
js
inc
inc
stos
jmp
adc
push
xchg
aam
adcb
add
or
inc
les
ljmp
outsb
xchg
jns
arpl
ret
jnp
dec
dec
mov
pop
addl
fcmovnbe
mov
pop
dec
int3
mov
fldenv
xlat
and
xchg
jecxz
in
push
push
xor
or
adc
mov
push
mov
sahf
cmp
add
std
pushf
arpl
rcr
scas
addb
xor
mov
lds
sbb
mov
leave
imul
pop
outsl
addr16
dec
ljmp
jns
lock
and
lods
dec
idiv
push
mov
cmpb
iret
mov
add
movsb
aas
in
lods
xor
daa
mov
movsl
imul
cmp
cmpsb
dec
loop
jno
jo
push
mov
push
or
mov
jmp
dec
stos
fistl
and
adc
ret
mov
ret
cmc
int3
fwait
jmp
mov
test
addl
push
pusha
jo
cmp
push
ror
dec
add
push
mov
mov
add
sub
push
arpl
dec
sub
stos
jae
lods
mov
mov
nop
adc
xor
cmpb
aad
or
xchg
mov
pop
inc
or
loopne
sub
cmp
cltd
dec
hlt
xchg
lods
orb
pop
nop
adc
mov
push
movsb
lahf
rcrl
aam
mov
leave
out
outsl
das
lock
nop
sbb
lods
mov
stc
ficoml
sub
mov
dec
pushf
inc
and
js
aas
in
add
outsb
xchg
in
pushf
jae
notl
loopne
mov
cmp
pop
xor
jecxz
imul
out
xchg
mov
xchg
test
add
push
in
aad
jle
cmpsl
insl
lea
scas
pusha
cmc
lret
push
xor
jns
inc
xor
sbb
xor
outsb
outsl
test
cmp
int3
je
xlat
sahf
in
xlat
xor
inc
int
ret
popa
in
mov
jle
cmp
jae
dec
mov
lods
pop
jb
cmp
and
dec
cmp
ljmp
push
shlb
mov
fstpl
test
add
mov
lods
push
xchg
gs
sarl
clc
mov
cmpsl
and
mov
cmpb
fs
out
clc
adc
stc
lods
push
jnp
jns
push
ljmp
cmpsl
adc
cmpb
dec
cmp
addb
xchg
mov
movnti
lods
jmp
xchg
outsb
jo
sbb
rolb
imul
shll
mov
jne
sahf
ret
leave
jns
clc
mov
jge
jbe
call
or
ljmp
or
push
and
ja
sbb
mull
inc
xor
pop
lock
loopne
call
add
push
pop
jge
fs
fstps
loope
push
inc
sbb
mov
cltd
hlt
testb
mov
and
idivb
addr16
mov
dec
push
mov
cli
test
mov
pop
adc
xchg
sub
push
cmpl
and
mov
popf
notb
mov
pop
movl
xchg
bswap
mov
pusha
sub
jbe
scas
lret
lea
cmc
xchg
test
mov
leave
mov
push
mov
mov
pop
cmp
xor
scas
sub
aaa
add
repnz
cmp
into
jb
aas
out
fdivs
fidivs
pop
lcall
jge
iret
out
or
pop
add
pop
mov
gs
out
loopne
add
and
scas
xor
iret
cmc
movsb
cltd
xor
subb
std
sub
inc
xor
push
stc
aam
mov
push
dec
and
gs
push
adc
adc
inc
mov
push
mov
test
jns
jnp
dec
dec
sub
sbb
cwtl
sbb
dec
in
pop
inc
sbb
aam
mov
lret
xchg
xor
fimuls
into
sbb
testb
cpuid
xchg
mov
jno
gs
sbb
aam
in
push
fcmovne
flds
adc
pop
es
dec
xchg
roll
repnz
jle
xor
insb
or
inc
ljmp
sub
pop
xor
pop
orb
mov
pusha
pusha
cmpsl
in
lds
xor
fstpl
mov
int
lahf
jmp
out
sbb
add
out
or
jnp
jno
add
repz
mov
sub
sbb
popa
loopne
push
int3
inc
sub
pop
sbb
shl
dec
mov
das
jg
aam
add
andl
repz
lahf
adc
je
xchg
xchg
adc
daa
popf
icebp
adc
inc
and
das
nop
mov
clc
dec
jmp
inc
lahf
sbb
jmp
jns
inc
cmp
pop
adc
push
lock
sti
lods
mov
ret
sbb
mov
lea
mov
cwtl
mov
movsl
cltd
das
sbb
mov
pop
and
xor
lret
xchg
aam
push
push
mov
xlat
pop
dec
xor
dec
aam
sbb
sub
mov
fisttpl
sbbl
xorl
sbb
stos
and
adc
sbb
test
xchg
loop
mov
adc
testl
lea
mov
sbb
cmp
je
cmp
out
adc
daa
cmp
or
push
mov
pop
xlat
pushf
jne
mov
xor
int
dec
movsb
std
leave
adc
add
loope
xor
push
rolb
inc
mov
xchg
jg
add
xchg
push
aaa
add
mov
loope
repz
cmp
mov
test
fsubp
pop
punpckhwd
mov
jbe
xchg
lcall
lods
leave
mov
jae
xor
mov
call
out
fldt
or
dec
push
mov
and
xor
in
sbb
and
aas
push
negl
mov
xor
jmp
cwtl
ljmp
data16
xlat
or
rol
xchg
test
jle
push
cmpsb
xchg
inc
scas
mov
in
notb
pop
push
sbb
pop
mov
sarl
push
or
fdivr
stos
sbb
jo
push
mov
inc
lea
push
or
sti
xchg
xchg
adc
and
orl
hlt
rcrl
adc
icebp
cmp
stos
test
aas
stc
add
stos
fwait
and
leave
adcb
inc
and
cli
add
fidivrl
push
sbb
jo
fs
cmp
and
mov
hlt
add
fs
jbe
cmpsb
cmc
aaa
sbb
mov
movl
push
or
jo
insl
ret
out
inc
leave
pop
inc
inc
mov
loopne
inc
mov
dec
push
mov
out
xor
cmpsl
push
mov
or
and
data16
sti
sbb
daa
pushf
clc
mov
mov
cmpsl
fisttps
das
test
int3
lods
not
sar
loope
sbb
adc
test
or
mov
cmpsl
inc
mov
call
jl
xchg
in
cmp
fisttps
inc
mov
jno
aaa
push
cli
outsl
pop
cmc
add
dec
jae
and
xchg
lock
sbb
sbb
xchg
xchg
aad
xchg
mov
add
sub
push
adc
dec
xor
loop
inc
push
jo
scas
xor
sub
cmc
xchg
gs
push
cs
gs
xchg
xchg
pop
sbb
ljmp
cmp
mov
sub
hlt
push
push
into
test
xor
mov
mov
mov
lahf
filds
mov
inc
jns
and
arpl
popf
dec
dec
hlt
jmp
mov
mov
sahf
sbb
mov
subb
pop
dec
lret
addl
add
inc
mov
call
rcll
ljmp
int
dec
insl
sub
data16
pop
sahf
jmp
and
cld
push
push
dec
decl
bound
mov
sbb
pop
clc
popa
cmpb
and
sub
not
push
js
and
test
inc
int3
sbb
cld
fcmovnbe
rorb
out
clc
not
stos
aad
adc
pop
jg
lds
pop
add
xor
mov
push
sbb
add
mov
mov
fisubs
jge
inc
int
cmpsb
sub
inc
test
xchg
and
mov
xacquire
lcall
aas
sysenter
xchg
shlb
inc
pop
les
out
push
xchg
xchg
call
sub
test
xor
pop
push
test
mov
adc
mov
dec
shlb
cmp
push
das
enter
stos
test
pop
push
fiaddl
scas
ficoms
push
lahf
adc
test
or
pop
clc
push
and
lcall
rcrl
bound
sahf
push
or
jl
rorb
mov
pop
hlt
xor
sub
enter
lds
loopne
jno
jne
inc
lods
pop
cmpsl
out
mov
xlat
push
iret
push
or
shrb
dec
sahf
arpl
or
sbb
clc
xlat
mov
lock
hlt
mov
sbb
mov
fcmovb
sbb
bound
scas
xor
imul
lods
sti
mov
repnz
pop
call
mov
sbb
lods
jecxz
push
cmpsl
jno
jne
stc
push
mov
push
out
xor
mov
pop
daa
pop
cs
lahf
dec
dec
push
je
pop
stos
mov
pushf
lcall
fwait
adc
mov
outsb
scas
inc
and
in
adc
lock
dec
and
cltd
jb
sub
stos
test
into
pop
add
xchg
iret
outsb
out
lret
jns
aad
inc
sub
fbstp
addr16
inc
dec
sbbl
out
out
mov
push
lods
xchg
ds
mov
test
loope
jns
sti
inc
push
pop
scas
into
mov
repz
stos
mov
dec
cmp
mov
out
jo
cmp
sbbl
ljmp
cli
aam
add
add
call
push
pop
outsb
mov
imul
imul
clc
in
mov
push
jne
lods
add
sub
and
lods
add
inc
mov
mov
mov
cltd
addr16
and
pop
repz
push
aam
in
shrl
icebp
or
lahf
loop
adc
cwtl
aad
cmp
scas
subb
mov
shlb
sub
xchg
adc
popf
adc
jb
in
test
fidivrl
cmp
lods
jns
mov
cmp
add
ret
aam
cltd
insl
mov
lock
jp
inc
sub
pop
jae
mov
inc
cmc
imul
or
cmpsl
mov
in
mov
and
and
in
aaa
mov
icebp
mov
cmpb
pop
pop
roll
sbb
cmp
cs
inc
push
in
jle
lahf
mov
mov
daa
sahf
push
mov
shlb
movsb
ffreep
data16
es
inc
mov
imul
popa
test
jmp
icebp
xor
push
cmp
pushf
xlat
xchg
ds
dec
movsb
mov
jns
jne
arpl
adc
mov
mov
stos
js
or
push
dec
jno
stos
stos
add
jge
sahf
cmp
mov
or
popl
mov
sub
lds
inc
adc
fnstcw
lret
adc
and
jge
fdivp
xchg
jbe
fsubl
movsl
or
pop
orb
xchg
jl
sub
mov
jbe
rcr
push
loop
dec
mov
inc
pop
popa
sbb
pop
ficoms
stos
iret
cmp
and
cwtl
out
jecxz
jno
into
and
mov
fsubs
mov
push
jne
repnz
cmpsb
inc
push
push
notl
mov
mov
push
mov
stc
mov
push
cmpsl
cmp
mov
inc
shr
arpl
fbstp
xchg
push
push
mov
sub
test
into
jb
inc
add
inc
fstl
xlat
pushf
sub
sbb
mov
inc
jmp
mov
repz
xor
push
mov
roll
inc
das
daa
aam
pop
fwait
xor
jb
mov
fsubl
ret
fisubs
lahf
xor
xor
or
adc
outsb
rorl
jns
outsl
mov
nop
sbb
pop
and
daa
mov
cwtl
mov
rorl
sbb
jno
push
xchg
into
inc
and
jnp
testb
mov
aas
sub
cmp
pop
daa
mov
push
insl
jp
inc
mov
bound
sbb
add
mov
adc
in
or
mov
cli
mov
mov
jo
sub
jnp
test
push
imul
std
xor
cmc
mov
mov
aad
pushf
aaa
repz
std
hlt
sbb
cmp
push
fisubs
pop
rclb
jne
addr16
pop
mov
mov
cmpsl
fwait
ss
xchg
int
scas
push
mov
cmp
imul
inc
out
adc
scas
inc
pop
in
jno
xchg
je
inc
push
out
ljmp
inc
movsb
mov
clc
add
imul
push
stc
aad
inc
ror
sbb
movsl
jp
and
movsb
mov
and
aad
and
or
mov
mov
mov
push
pop
insl
mov
ljmp
mov
cmp
into
cmp
add
stc
jb
roll
testb
incb
xchg
jle
subb
loope
lahf
rcrb
and
sarl
and
les
scas
sarb
mov
mov
push
mov
cmc
add
and
jbe
mov
mov
outsl
jg
sbb
rorb
mov
jo
fldt
fistps
test
lret
and
hlt
inc
fsts
movsb
repnz
ret
sbb
mov
leave
inc
in
addr16
jge
scas
jnp
rcll
mov
shlb
ret
ret
pusha
in
fcomps
lds
clc
scas
pop
xchg
inc
ss
imul
xchg
fiaddl
fcmove
insb
in
or
fucomp
out
add
roll
mov
jmp
je
mov
adc
and
push
add
popf
in
repz
cmpsl
xchg
in
xchg
ret
ret
sub
aaa
inc
mov
scas
shlb
sub
fldt
pop
addl
lea
pop
cmpsb
mov
pop
out
jge
lret
jmp
cld
mov
and
clc
sarl
xchg
jmp
cli
cmpsb
add
xor
rcr
jb
mov
mov
test
popf
push
xor
jo
push
push
mov
in
push
sbb
sub
in
lret
push
addl
cmp
daa
fcmovne
dec
loope
sub
out
cmp
ficoms
imul
imul
pop
xchg
sub
rcll
fs
mov
pop
jl
sti
jp
lods
fbstp
jg
out
adc
and
mov
jne
cld
mov
xor
fidivl
add
lods
sub
push
add
addl
jge
out
icebp
xchg
stc
xor
subl
adc
dec
addr16
out
mov
ss
ret
mov
fs
cmp
xor
loope
inc
or
mov
into
jbe
pushl
imul
notl
dec
icebp
mov
or
add
push
sbb
pop
jg
adc
cmpsb
cmpsl
mov
xchg
fidivl
sarl
lods
flds
enter
mov
arpl
xchg
outsl
movb
and
push
inc
mov
stc
call
sbb
in
mov
call
fwait
mov
stos
push
out
outsl
xor
xchg
xchg
nop
sahf
insb
call
dec
aaa
or
negb
xor
stc
lret
and
pop
push
enter
stc
xchg
add
xchg
jge
mov
mov
pop
mov
mov
mov
xor
sub
pop
sti
add
dec
fists
xor
mov
ret
ljmp
xchg
imul
push
ret
pop
outsb
adc
pop
or
dec
or
into
pop
loop
nopl
pop
rcr
jae
scas
adc
push
pop
movsb
mov
cld
rolb
scas
ret
mov
inc
cmpsl
mov
popf
loop
cltd
lea
das
mov
sbb
xor
jmp
mov
and
sar
imul
rorb
pop
mov
in
cld
inc
push
mov
les
inc
mov
pop
lds
jnp
andl
jmp
jg
dec
dec
nop
mov
mov
mov
test
cmp
push
mov
and
std
dec
loopne
mov
leave
sub
bnd
int
in
pop
repz
cmp
scas
imul
fiaddl
ret
xor
ds
insb
inc
ret
adc
pop
in
outsb
std
lcall
fldl
filds
inc
add
sub
jo
imul
cmpsb
jb
mov
imul
push
addb
mov
jl
icebp
js
xor
add
pop
aaa
push
out
cmp
xchg
pushf
xorb
mov
aad
mov
rcll
inc
inc
push
std
test
jbe
cmpsl
xchg
mov
rclb
imul
inc
fnsave
int3
dec
jns
mov
ja
mov
xorb
dec
int
fldcw
ret
lcall
popa
add
adc
xlat
jl
inc
xchg
and
pushf
mov
sbb
pop
das
mov
inc
cmc
fdivr
cmp
shll
ss
mov
pop
int
in
stos
or
or
xor
aam
inc
mov
insb
int3
inc
out
xchg
pushf
lret
repz
sbb
or
cmpsb
pop
repz
movsb
out
cmp
sub
sbb
hlt
add
pop
fistps
repz
add
pop
or
push
inc
rep
cmp
fnstsw
inc
jbe
xchg
pop
scas
movb
adc
sarb
jnp
jg
mov
in
mov
pop
ja
dec
or
push
and
shr
and
lahf
fwait
xchg
mov
cltd
sub
mov
push
scas
decl
rcll
hlt
aam
cmpsl
adc
adc
cli
cs
inc
mov
ss
sahf
cltd
mov
dec
fwait
sub
lea
movsb
jae
push
test
xchg
pushf
sub
xor
loop
outsl
pop
in
popf
test
cmp
xor
sub
ret
push
xor
mov
subb
imul
rcl
cmp
lods
dec
xchg
je
fldl
scas
sti
push
ret
adc
mov
fwait
xlat
in
mov
lock
cmc
push
cwtl
inc
push
mov
push
sub
div
or
lret
in
jns
shl
mov
mov
call
ss
add
int3
roll
jp
cmpsl
mov
mov
call
in
sbb
mov
daa
xchg
movsb
jo
into
in
pop
fsubrp
xchg
adc
fisubl
cmp
cmpsb
push
shlb
fidivl
repnz
mov
lret
lods
ja
rcll
and
cs
pop
cmpsb
cli
insb
fwait
push
lds
sub
subb
xchg
enter
jge
lahf
push
and
add
jle
xchg
sub
adc
lea
xchg
xchg
jae
insl
data16
icebp
mov
cwtl
dec
repz
cmp
mov
cmp
add
cmp
inc
scas
fisubrl
add
sahf
int3
rolb
mov
jge
enter
cld
js
sahf
cmp
xor
lock
sub
xchg
xchg
lahf
mov
stos
push
scas
rclb
xchg
cmp
or
mov
jmp
jno
shl
mov
and
mov
dec
es
jae
xchg
lahf
stc
lret
jp
cmpsl
pushf
je
je
into
mov
ret
in
call
add
cltd
pushf
bswap
ljmp
sbb
fisubl
stos
cwtl
add
scas
loop
sub
xchg
test
popf
int
ja
inc
mov
mov
sahf
push
jle
cmpsl
jno
cli
pop
std
add
jns
hlt
and
test
outsl
xchg
push
xchg
jbe
scas
sbb
sbb
lcall
mov
icebp
fs
jb
dec
gs
dec
lods
push
fwait
mov
xor
pusha
mov
cmp
jecxz
cmp
xor
ja
fsubl
addl
dec
aam
cmc
lcall
push
push
les
sbb
shrl
inc
add
mov
jmp
pop
cs
dec
jae
out
repz
and
and
hlt
mov
mov
stos
mov
arpl
or
je
inc
mov
mov
and
inc
jnp
bswap
jmp
sub
int
xchg
adc
nop
cmp
dec
sub
roll
aaa
pop
push
cmp
fldcw
sarb
jne
aad
popa
and
sbb
mov
and
pop
inc
mov
xchg
aam
pusha
jecxz
arpl
into
adcb
inc
bound
test
jo
jg
cli
arpl
xchg
jge
fsts
les
subb
pop
ret
lcall
cmp
cmp
out
fdivrp
fidivrs
dec
push
jg
lods
fs
repnz
mov
pop
jg
push
aaa
stc
fs
jp
mov
xor
xchg
scas
sbb
sarb
adcl
push
test
icebp
bts
jg
dec
div
push
je
push
sti
scas
addr16
fucomi
add
xchg
jns
adc
add
daa
das
xchg
repz
mov
adc
daa
jb
adcl
mov
pop
test
mov
dec
or
inc
lcall
mov
rol
and
in
mov
pop
out
in
iret
test
add
push
popf
into
mov
add
cmpl
movsl
cmp
mov
sub
in
mov
sarl
jp
fisubs
lcall
sub
cs
push
stos
adc
inc
mov
sbb
arpl
outsl
adcl
mov
shll
cmp
cmpsb
and
clc
adc
and
scas
in
test
mov
int
and
mov
adc
xchg
sarl
xchg
add
loopne
jge
sbb
xor
adcb
mov
hlt
or
incb
cwtl
jb
fdivr
lods
pusha
test
loop
mov
test
fistps
into
mov
inc
mov
add
roll
inc
adc
lea
movsb
pusha
shl
jno
popf
lahf
fcompl
in
mov
mov
mov
stos
push
xor
adc
mov
push
sbb
fcmovbe
pop
icebp
pusha
mov
cmpsb
xlat
pusha
add
inc
and
mov
inc
xchg
imull
xor
and
lea
add
push
insl
je
je
movsl
sub
addr16
imul
sti
adc
pop
cmp
dec
xchg
and
sti
push
sbb
in
push
mov
mov
sub
mov
or
sbb
imul
jns
shll
int
xor
sub
pushf
xchg
js
add
test
xor
out
outsl
repz
xchg
bound
inc
pop
xchg
aad
xlat
jne
out
fildll
shll
rorl
jg
cmp
scas
test
and
sbbb
mov
pop
outsl
fs
int
ret
inc
aam
mov
ret
fidivl
mov
dec
test
inc
sahf
psllq
iret
in
cmc
push
push
xchg
and
aad
lea
lds
test
pusha
sbb
xchg
test
add
ja
cmp
xchg
rorl
stc
fldenv
pusha
imul
pop
in
test
loope
lahf
imul
popa
pop
sbb
dec
push
mov
sub
lock
or
es
sub
mov
es
mov
mov
or
inc
sarb
mov
pushf
dec
test
sbb
cwtl
inc
out
push
repz
inc
mov
bound
dec
or
shll
jp
mov
stos
ret
mov
into
ja
mov
cmp
sbb
decb
or
mov
xchg
test
fiaddl
rorl
mov
cld
std
addb
pop
out
ss
sbb
mov
add
adc
data16
fisubrs
ljmp
ss
fmul
cmpl
push
xor
mov
in
dec
loopne
sahf
dec
and
jbe
mov
sbb
jbe
cmp
lret
rcrb
add
cmc
or
lock
add
mov
or
ljmp
sbb
add
popa
adc
cld
das
inc
and
int
or
xchg
aas
mov
loop
jb
xor
xchg
jnp
cmpsl
or
loope
ljmp
sbb
loope
push
pop
sbb
add
jbe
fnstcw
add
sbb
push
mov
aaa
sahf
nop
movsb
cmpsb
mov
or
icebp
push
stos
pop
call
adcb
les
pusha
mov
ds
jae
mov
iret
pusha
scas
dec
dec
rclb
and
fstl
mov
ror
mov
sbb
mov
mov
arpl
and
das
pop
int3
inc
imul
jmp
sahf
je
fcmovbe
mov
mov
stos
js
cmp
jge
and
push
test
repz
mov
sbbb
bound
data16
jbe
movsb
or
shl
insb
nop
xor
or
hlt
jg
out
xchg
lcall
das
pop
sti
xlat
clc
sbbb
int
jb
xor
movsl
movsb
lret
adc
test
inc
stos
shlb
jmp
and
adc
push
iret
inc
and
adc
cmp
in
ret
out
inc
imul
jbe
pop
jmp
loopne
add
jmp
mov
inc
addr16
sub
iret
and
out
pop
fdivr
push
popa
lret
pop
mov
or
cmp
cs
addr16
enter
xor
das
mov
inc
dec
idivb
cmp
adc
jo
and
mov
jne
push
or
cmp
les
ds
mov
push
push
mov
popf
or
outsb
arpl
hlt
lret
inc
in
push
or
test
inc
add
inc
rcrl
mov
or
add
and
dec
jb
push
sub
mov
out
test
mov
mov
inc
or
mov
sbbb
les
cmpsl
out
cmp
mov
push
dec
xchg
adc
outsb
in
pop
push
adc
stos
xor
fldl
cs
push
cld
insb
out
es
cmpsl
inc
lds
out
adc
jno
pop
lods
inc
shrb
adc
xor
std
adc
dec
in
jg
mov
sub
mov
stos
jl
fnstsw
and
inc
pop
hlt
in
inc
dec
cs
push
xchg
adc
dec
insb
sub
enter
jecxz
ss
and
repz
popf
mov
cmp
mov
push
fidivl
das
and
dec
rcll
inc
dec
jno
xlat
and
cmp
or
addr16
inc
xchg
xchg
cld
inc
bound
push
jl
mov
pop
loope
jb
int3
mov
pop
mov
push
test
lods
cmp
je
mov
call
xor
les
push
inc
cld
xor
pop
xchg
sbb
mov
test
mov
push
pop
dec
cmpsl
dec
add
filds
stos
test
in
lock
pop
into
jb
sbb
mov
popf
sub
push
out
adc
add
mov
fildl
sub
sbb
xor
fs
pop
in
dec
fbld
cmp
aas
fistpll
xchg
ljmp
inc
jle
in
adc
insb
fwait
pop
add
ret
add
dec
mov
ret
das
aad
icebp
into
pop
push
fcom
fcmove
sub
adc
loope
fisttpll
data16
and
pop
mov
xchg
dec
loopne
or
aaa
dec
mov
adc
xchg
mov
or
lcall
cld
sbb
ret
sahf
outsl
jg
cmpsb
sbb
and
stc
mov
mov
mov
icebp
cltd
lods
lods
iret
or
mov
data16
fs
scas
mov
mov
xchg
std
sub
cmp
mov
pushf
cld
clc
dec
inc
nop
jb
jmp
sbb
xor
es
mov
bound
inc
xchg
out
push
sbb
mov
cmpsl
mov
dec
mov
rcll
mov
mov
xor
int3
out
arpl
xor
push
pop
fnstenv
pop
ret
dec
inc
into
lea
mov
mov
out
mov
xor
cmp
adc
fstpt
aas
ss
pusha
cli
ret
enter
dec
jbe
sub
fldt
dec
lret
aaa
dec
xchg
push
movsl
mov
test
repnz
dec
cltd
cltd
outsl
mov
bound
jnp
cmp
bound
fdivp
xchg
mov
push
jmp
lds
dec
and
shl
jmp
sbb
ds
into
out
mov
mov
dec
xor
xor
push
fcmovnbe
out
dec
adc
sbb
pusha
adc
lock
stos
hlt
mov
mov
push
mov
insb
in
cmpsb
xor
dec
inc
das
dec
pop
mov
add
jl
xor
in
jg
pop
and
pop
push
out
cmp
cmp
lahf
xchg
add
xor
mov
pop
sbb
mov
pop
push
mov
dec
popa
jl
fildl
mov
loope
xchg
push
add
pop
pop
push
xchg
xchg
in
mov
ret
rcl
cmp
lret
adc
jmp
inc
dec
mov
out
pushl
rolb
push
jo
dec
fiaddl
sbb
xor
push
jge
sub
jo
cmpb
out
in
pop
data16
jbe
clc
sbb
es
cmpsb
cmpb
movsl
mov
push
ret
icebp
imul
in
pop
inc
push
push
pop
int
cmp
dec
cmpsb
iret
daa
adcl
or
ljmp
cmp
je
mov
test
mov
inc
xlat
push
mov
pop
xchg
and
out
inc
iret
jo
scas
adc
lcall
push
xchg
xlat
mov
add
outsl
add
xchg
test
loope
sarb
push
mov
add
icebp
cltd
add
fmull
call
xor
sub
fdivrl
lds
ds
out
repz
inc
adc
test
mov
sti
xlat
fstps
in
insb
dec
mov
ljmp
cmc
add
mov
fimull
shr
mov
into
inc
cmp
insb
dec
fwait
fwait
rcr
mov
jnp
xor
pop
push
ret
popa
imul
push
jnp
dec
pushf
sub
lods
in
test
fcmovb
aad
push
mov
and
fistpl
pop
inc
pop
dec
lds
movsl
lcall
sub
stos
and
rorb
outsb
cltd
dec
mov
mov
jo
insb
push
mov
or
inc
ja
out
jbe
fadds
push
das
sti
adc
das
adcl
rcl
xlat
popa
push
cld
sarl
test
aam
inc
jno
push
ja
inc
les
lds
shll
mov
rcrb
sub
sbb
imul
mov
adc
int3
mov
pop
mov
push
in
andb
mov
lcall
sbb
and
aad
jecxz
ret
rclb
pop
adcb
add
sub
jb
push
xchg
xor
cmc
cmp
call
push
mov
pop
movsb
test
and
and
xchg
ficompl
xchg
mov
cmc
sbb
sahf
inc
stc
cltd
push
gs
int
mov
or
scas
rol
shlb
inc
add
xor
daa
icebp
add
jb
dec
push
push
cli
jecxz
dec
lret
lds
dec
mov
sub
data16
pminub
push
je
test
xchg
test
push
or
addb
xchg
sbb
sub
shl
lea
xchg
cmpb
lock
dec
shr
xor
aas
lds
sub
int3
mov
fstp
lea
lret
test
adc
loop
rol
repnz
sbb
and
lds
imul
daa
xchg
xchg
jg
add
shrb
add
ret
stc
pop
push
bnd
lcall
je
jns
or
cmp
hlt
les
mov
jmp
in
subb
xchg
or
dec
push
mov
movsb
shrl
mov
sarl
in
movsl
scas
inc
dec
xchg
fs
dec
bound
in
xlat
xchg
mov
adc
insb
jmp
sub
add
add
lods
push
inc
arpl
and
ret
jns
adc
sub
xor
nop
push
dec
jbe
cmp
pop
mov
subb
inc
or
push
xchg
test
adc
sub
push
and
push
push
pop
xor
xlat
adcl
sti
dec
adc
hlt
mov
xor
scas
ret
cmpsb
inc
lahf
sub
mov
sub
cmc
mov
ficompl
scas
adcl
push
push
cmp
push
loopne
cmp
jle
imul
loope
aas
xchg
jns
lret
push
lcall
outsb
je
imul
lahf
or
aas
outsl
sbb
bnd
fdivs
call
subl
xchg
fbstp
or
popa
andl
enter
cli
mov
jl
and
pop
movsl
dec
xchg
js
mov
sub
sub
stc
arpl
ret
xor
das
into
add
aad
fcmovnb
ljmp
adc
fmuls
es
or
mov
mov
loop
xchg
fcomip
xorb
xor
ja
test
pop
sbb
or
xchg
fcomp
or
mov
daa
jle
lahf
push
mov
shlb
and
cmc
push
xor
inc
ja
shll
or
xor
ljmp
ret
idivl
ficompl
sub
xlat
les
adc
dec
aam
lods
into
mov
lds
pop
scas
push
test
sub
leave
neg
sub
pop
out
shrb
xor
pop
int
lcall
adc
cmp
out
mov
dec
push
mov
mov
daa
dec
pop
jecxz
xchg
mov
xor
lods
es
dec
pusha
icebp
jg
cmp
not
push
xor
cmpl
push
dec
movsb
cmpsl
cmp
pop
lock
sbb
cmp
cmp
xor
lods
mov
popa
push
cmp
pop
xor
bound
pop
das
pop
adcb
test
mov
mov
push
jle
fs
push
cmpsl
xor
in
es
cmp
call
aad
lds
push
mov
in
hlt
icebp
lahf
push
jno
push
jmp
in
insb
fcmovnbe
xchg
lods
bound
or
out
iret
fbld
int
enter
add
scas
push
cmp
mov
jb
imul
and
iret
push
mov
test
aam
lock
mov
sbbl
movsb
xor
mov
fwait
sub
inc
rolb
loopne
dec
pop
mov
sarb
mov
test
js
and
lock
sub
push
xchg
and
movsl
adc
xor
sbb
jns
repnz
cmpsl
mov
jmp
test
xchg
subl
mov
das
pop
adc
adcl
inc
mov
ljmp
and
mov
leave
add
push
call
mov
mov
cmpsb
and
ljmp
fucomi
add
cwtl
cmp
pop
js
dec
jo
inc
out
loope
js
mov
jmp
mov
xchg
jnp
arpl
fwait
or
lret
push
mov
shll
push
roll
xor
int
repz
ds
jmp
fwait
addl
xor
mov
ror
rolb
pop
and
push
jecxz
pop
and
movsb
ret
xchg
ret
daa
lret
leave
add
jl
test
sub
loopne
jnp
dec
mov
popa
fwait
push
fdivs
push
rcrb
push
mov
cld
or
pop
push
xor
arpl
xchg
push
and
add
jp,pn
aaa
roll
dec
mov
pop
mov
lds
rcrl
scas
rorb
mov
sbb
cmpsl
loopne
push
popa
inc
dec
fstps
sub
repnz
aad
pusha
dec
mov
xor
cmp
and
orl
push
pop
inc
xchg
imull
sbb
cmp
stos
imul
mov
dec
arpl
sub
xchg
std
jge
daa
pop
jb
stc
push
lret
push
mov
push
or
push
cmpsl
pop
aaa
cmpb
sub
sub
mov
mov
mov
xchg
cmp
xor
mov
lds
aad
cmc
clc
leave
pop
lcall
orb
pop
fsubl
add
push
lahf
cmp
call
fwait
push
inc
insl
outsl
and
mov
jle
pop
cmp
fucomp
fnstcw
dec
int
push
fisubs
pop
testb
cmpsb
cltd
int3
push
adc
cmp
out
push
pop
dec
xor
pop
iret
stos
mov
inc
lahf
out
ljmp
lds
push
fmul
sbb
mov
fistps
dec
jmp
int3
cmp
out
xlat
notb
out
jae
add
cmp
add
jle
loopne
outsl
dec
fsts
les
and
clc
clc
mov
jp
pushf
xchg
inc
mov
jo
fwait
call
pop
sbb
lret
enter
movsl
outsb
xchg
ljmp
mov
out
out
mov
dec
out
mov
mov
mov
pop
jge
insl
mov
mov
mov
inc
insb
repz
dec
ds
lret
adc
sub
out
add
mov
xor
dec
mov
or
sbb
bound
pop
mov
push
add
push
rcrl
xorl
pushf
mov
pop
inc
inc
push
add
sbb
lcall
mov
enter
insb
dec
scas
out
iret
sub
enter
lock
sub
popl
mov
mov
fistpl
test
pop
jle
pop
jns
mov
int
jle
inc
xchg
jae
xchg
xchg
push
mov
imul
aas
fidivrs
jl
mov
cmp
dec
loopne
lcall
xchg
inc
cmp
sbb
out
idivb
in
pop
and
jae
inc
pop
sarl
inc
cmp
mov
pop
mov
xchg
and
cltd
pop
inc
addr16
push
ds
iret
adc
jp
jnp
cmc
pop
dec
and
fistl
lahf
mov
arpl
dec
loop
pop
in
ret
sub
or
inc
test
lods
lods
rcrl
loop
mov
sub
pop
testb
aas
mov
push
sbb
testl
pop
lahf
ljmp
and
xchg
fwait
and
iret
or
out
loopne
lds
idivl
into
sbb
jne
in
xor
shl
xor
xor
jb
popf
in
stos
in
and
cmp
popa
fdivrl
scas
sti
mov
jae
push
push
add
aas
fidivrs
jl
pop
jb
fsubs
ret
sub
dec
mov
jp
dec
or
in
mov
mov
xchg
xchg
in
adc
shr
inc
pop
mov
mov
gs
pop
loope
ret
adc
mov
cmc
sbb
xor
inc
fsts
mov
and
in
jle
dec
mov
ss
adc
xchg
xor
test
sbb
or
xchg
inc
les
inc
mov
aaa
daa
mov
fdivs
lock
pop
test
mov
sahf
int
push
ret
inc
lret
sbb
cmpsb
xchg
cmpsb
mov
jmp
mov
hlt
call
xor
jne
aaa
jp
test
xor
out
adcb
cmc
pop
xchg
iret
lock
sub
in
or
test
inc
adcl
test
rep
inc
xchg
push
jae
lea
push
es
popf
push
xor
jnp
fdivs
xchg
cwtl
ret
and
and
daa
push
std
xor
dec
or
int
movsb
fxch
fnsetpm(287
lea
jae
in
xchg
pop
push
pop
or
sbb
inc
jno
pop
mov
enter
and
std
mov
jle
and
cmpsb
xchg
dec
cmpb
dec
std
sti
cld
adc
sub
cmpsl
les
mov
inc
jge
repnz
in
dec
loop
mov
add
and
mov
stos
lea
data16
dec
fistpl
xchg
xchg
or
adc
push
test
enter
fiaddl
pop
scas
call
sbb
cmpsb
std
out
mov
sbb
xor
xchg
mov
test
jmp
jle
add
bnd
or
and
cmp
dec
mov
adc
enter
rcr
inc
sbb
lret
addr16
out
scas
shlb
xchg
jo
arpl
push
dec
pop
pop
adc
inc
in
rcr
inc
stc
incb
nop
outsl
mov
dec
inc
adc
fmull
sbb
imul
pop
dec
mov
push
mov
push
jmp
ftst
test
sarl
xchg
xchg
jne
mov
pushf
push
xor
or
scas
rclb
mov
mov
mov
popf
push
sbb
dec
mov
xor
out
ds
test
cmp
dec
aam
and
cmpsb
xor
insb
mov
push
insl
pusha
pop
xchg
scas
rcrl
or
xchg
push
sub
sbb
call
mov
cmpsl
xor
aaa
pop
loop
rcll
mov
jmp
pop
sub
stc
jns
es
xor
stc
call
mov
int
popf
jne
psllw
jp
mov
std
ds
jne
cltd
mov
pop
mov
push
stc
and
in
clc
stc
stc
out
cmc
in
mov
sub
imulb
ret
loopne
lods
push
cmp
icebp
imul
inc
push
ds
jmp
call
push
aad
ds
mov
push
enter
mov
jnp
pop
es
pushf
mov
mov
jmp
pop
push
nop
hlt
lret
push
movsl
in
stos
cs
add
mov
loopne
mov
fcoml
ret
dec
ja
xor
add
dec
pop
decb
ficoms
cwtl
adc
insb
movhps
mov
cltd
sbb
popf
sub
mov
xchg
mov
lret
sbb
into
push
stos
mov
loop
lahf
mov
shll
adc
cs
cmp
mov
xchg
imul
insl
push
mov
xchg
fidivl
mov
rclb
sarl
add
ds
mov
ja
pop
inc
adc
jp
or
mov
xchg
movsb
loopne
dec
cmp
push
inc
gs
daa
ret
sub
inc
addr16
fstpt
out
cmp
adc
lahf
cmc
fscale
xchg
push
addr16
jmp
fs
cwtl
mov
lea
push
pop
mov
sub
and
outsl
test
inc
je
gs
cwtl
mov
and
mov
adc
mov
fsts
testb
xor
mov
and
inc
in
movsb
xor
imul
add
cmp
xchg
dec
xchg
ljmp
shll
lcall
mov
jbe
push
into
scas
daa
cmpsb
repnz
push
inc
mov
ret
cmc
jb
je
xchg
loope
jmp
dec
mov
std
lret
ljmp
lds
jg
clc
stc
cli
sub
mov
popf
cld
ret
mov
xchg
das
fisubrl
imul
rcr
popa
pop
inc
push
shrl
fdivs
sbb
test
stos
pop
xchg
outsb
cwtl
dec
leave
test
xchg
lock
test
lock
cmp
lret
sbb
add
mov
fldt
outsb
mov
and
mov
movsb
jno
or
push
cld
rclb
jl
ja
fwait
ret
test
jg
lcall
lock
push
jl
roll
sbb
sub
bound
jmp
out
dec
push
test
adc
std
dec
ljmp
push
repz
das
int3
jo
aaa
aam
jmp
jmp
imul
sbb
xor
loopne
in
stos
ds
dec
lahf
lea
int3
outsl
pop
jb
nop
fldenv
push
outsb
dec
cmpsb
push
pop
imull
xchg
adc
sub
mov
int
and
sbb
ret
imul
testb
iret
jmp
iret
outsb
sbb
sbb
ja
inc
dec
lcall
cmp
scas
sub
cwtl
mov
outsl
sub
int
pop
xchg
les
push
cmc
mov
push
inc
xchg
fnstenv
cli
and
mov
stos
pop
dec
mov
std
mov
bound
call
cld
xchg
ret
loop
les
rcll
jae
adc
nop
and
dec
mov
mov
push
pop
push
mov
lods
in
mov
inc
mov
ret
sub
scas
outsb
add
mov
and
jno
adc
jge
push
jle
dec
sub
pop
clc
sub
jecxz
push
hlt
mov
lods
or
imul
adc
fistpll
mov
jbe
lods
push
icebp
fiadds
and
mov
sbb
sbb
dec
and
stos
pop
sbb
pusha
jge
sbb
data16
inc
or
shll
lcall
sbb
sahf
mov
xchg
and
pop
adc
xchg
fstl
ret
imul
leave
mov
mov
fstpl
enter
add
cs
rcrb
fcom
insb
outsb
pop
stos
mov
xchg
pop
push
loope
jmp
mov
gs
jb
stos
ret
rcrl
out
sbb
cmp
imul
fwait
movsb
aas
imull
sti
in
es
roll
lock
and
lret
cwtl
sbb
pop
int
repnz
sahf
sub
into
das
mov
mov
sub
mov
push
cmc
or
aad
add
daa
aaa
inc
dec
mov
bound
or
mov
rorl
xchg
enter
sbb
pop
std
test
nop
mov
dec
lea
testl
adc
mov
push
aaa
hlt
cs
imul
sbb
xor
int
lcall
fldenv
movsb
out
xor
loop
cli
pop
inc
push
sbb
vcvtss2si
pop
push
adc
test
loopne
add
jl
clc
loopne
pop
iret
mov
add
clc
rcl
mov
aad
sub
movsl
into
mov
mov
icebp
mov
xchg
sbb
cwtl
clc
and
add
scas
mov
lret
inc
sbbb
lods
lret
sbb
xor
ret
pop
scas
push
xchg
jecxz
xlat
subb
out
out
sub
xchg
repz
ret
pop
stos
mov
rcrl
fucom
imul
sub
mov
add
xchg
inc
jg
jg
adc
leave
adc
xchg
xlat
ret
sub
aas
cmp
ficomps
push
and
in
push
or
xchg
adc
test
lods
pop
stc
push
cmp
shlb
test
mov
pop
out
and
ret
push
je
outsl
not
push
inc
and
out
rclb
mov
fsub
mov
cmp
push
addr16
sbb
mov
jne
or
ror
sub
mov
outsb
sarb
xor
and
cmp
dec
push
mov
mov
pop
or
mov
loop
enter
dec
xor
jae
and
cltd
lea
and
jb
rcrl
push
push
cltd
popf
lahf
xor
rcrl
mov
lods
and
popa
mov
and
mov
stos
jg
pop
add
and
mov
xchg
ror
cmc
add
mov
in
lahf
cwtl
inc
jb
je
adc
sbb
sarb
pushf
outsl
sti
js
inc
arpl
rolb
sbb
jmp
mov
lahf
xor
jb
dec
std
inc
minps
stos
mov
fsub
push
add
cmp
fsqrt
xchg
inc
xor
pop
add
hlt
xor
and
push
or
ret
push
push
imul
xchg
push
or
xchg
jg
sub
insl
or
imul
add
xchg
dec
das
ja
and
and
xor
xor
icebp
sbb
and
out
jp
inc
ja
loopne
jne
gs
and
loop
stos
lcall
daa
cmp
pop
dec
xchg
mov
mov
or
repz
mov
adc
daa
popf
jb
aam
and
insb
mov
jg
pop
push
mov
aam
add
pop
jbe
call
popa
sahf
mov
rcrl
cli
cmpsb
mov
xlat
and
pop
sbb
add
mov
pop
pop
test
pop
dec
push
addr16
hlt
out
loopne
hlt
and
pop
adc
mov
jl
xor
in
adc
sbb
scas
xor
xchg
jo
fldt
xchg
xchg
cmp
nop
xorl
cld
mov
xor
das
jbe
jmp
rcrb
loopne
es
imul
das
xchg
int
cmp
lock
sahf
and
jl
cmp
addr16
lahf
fdivl
and
jle
pop
call
ret
pop
mov
cli
pop
xor
mov
xor
pop
pop
xor
mov
pop
jno
pop
aaa
pushl
pushf
mov
addr16
push
push
cli
xorb
xchg
fdiv
or
inc
jl
cmp
push
fdivl
pop
int
imul
or
movsb
cltd
cltd
test
callw
test
jmp
ja
dec
je
lock
js
or
mov
dec
mov
xchg
xchg
adc
push
xchg
je
frstor
das
push
sub
jmp
movsl
mov
ret
jmp
imul
mov
cld
and
sub
mov
mov
fildl
mov
fcmovnb
adc
xor
push
imul
or
or
fcompl
pop
xchg
jne
repnz
outsb
rorl
mov
pop
into
fs
xchg
arpl
mov
pusha
roll
cld
inc
cs
dec
pop
inc
pop
out
push
push
and
popa
loope
scas
aaa
fildll
pop
cld
cs
out
jne
scas
fsub
and
ret
test
dec
pop
cmc
pop
in
idiv
in
cltd
adc
icebp
sbb
jae
cltd
add
push
push
mov
in
jb
sti
cmpsl
or
xchg
add
mov
fmull
sub
jg
xchg
cwtl
mov
icebp
mov
cmpb
leave
sbb
pusha
pop
fidivs
mov
inc
mov
shl
lcall
jmp
dec
jb
test
sbb
adcl
push
cld
sub
sahf
aad
test
in
push
test
add
in
es
dec
popa
mov
mov
mov
mov
jno
inc
add
add
xor
cmpsb
inc
jbe
xlat
loop
mov
adc
mov
pusha
pop
and
rolb
int
pop
or
frstor
cmovb
jne
test
fstps
pop
pop
mov
aaa
inc
call
adc
xchg
jmp
jge
leave
lcall
aas
mov
shll
popf
cmp
inc
repz
lods
out
mov
ss
push
mov
in
pop
mov
add
lcall
arpl
scas
fisttps
test
cmc
xchg
nop
das
nop
adc
popa
shr
lret
pop
ja
xchg
cmpl
aam
imul
cltd
inc
jg
les
xchg
adc
rcl
jmp
sub
pop
push
jo
rorb
pop
sub
push
push
outsl
out
icebp
mov
repz
cli
std
insl
sbb
out
loopne
and
xchg
in
mov
outsl
pop
je
into
imul
sub
mov
es
cld
cmc
nop
mov
out
stos
cmp
loop
cmpsb
inc
xor
addl
jl
aas
mov
lret
lret
add
sbb
adc
ds
push
mov
outsl
and
xorb
inc
xor
add
jno
lock
pop
shl
ret
inc
or
lea
cmp
lret
jne
mov
jo
shll
xchg
jo
test
js
mov
in
mov
mov
jl
mov
into
aam
jmp
cmc
call
push
jnp
and
insb
in
out
lret
sub
fdivl
xor
jne
or
loop
adc
add
pop
mov
inc
adc
sar
scas
fnstcw
sub
fs
inc
lea
in
mov
cmp
and
enter
idivb
repz
and
inc
daa
loope
adc
xor
mov
aaa
sti
popl
pop
ds
jb
leave
in
xor
ljmp
jnp
stos
dec
outsl
mov
pop
std
pop
cmp
inc
test
daa
test
dec
push
inc
push
mov
scas
out
lahf
cmp
pop
dec
in
test
sbb
pop
lcall
pop
mov
push
call
or
call
inc
imul
loop
lcall
cltd
pop
es
mov
stc
jecxz
test
push
sub
push
insb
dec
stos
inc
xlat
cmp
mov
outsb
cmp
sbb
icebp
ret
inc
cmp
into
clc
imul
lret
idivl
xlat
push
mov
jge
shl
jl
mov
push
mov
mov
mov
in
adc
sub
and
test
inc
jae
dec
ds
in
mov
stos
popf
add
lds
mov
cmp
and
lds
sbb
into
mov
bound
out
cmp
insb
adc
sbb
in
aad
or
mov
cmp
sbb
pop
mov
pop
sahf
dec
adc
out
data16
mov
fwait
les
outsl
fldl
or
cmp
aaa
dec
lock
sti
xchg
test
sbb
into
and
aas
clc
test
and
cmc
add
sub
sbb
and
out
movsb
ficomps
movsb
add
mov
xchg
in
push
mov
rcrb
push
cmc
push
mov
adc
push
std
inc
mov
xchg
inc
adc
divb
int
pop
dec
or
mov
ss
nop
or
data16
cld
inc
mov
iret
mov
cmp
in
or
xor
cli
add
mov
xchg
test
or
inc
mov
adc
bound
out
push
subb
std
mov
fimull
push
adc
and
js
or
add
xchg
cmp
pop
fmuls
dec
pop
mov
jnp
cmp
sbb
fiaddl
ret
es
fistl
and
shll
ret
pop
mov
xlat
push
add
xor
pusha
and
jmp
jae
jae
int3
subps
mov
out
xchg
pop
add
repz
jno
fwait
jnp
sahf
mov
jnp
out
and
cmp
pop
mov
adc
imul
adc
lods
push
xchg
push
xor
sahf
cli
into
sbb
mov
adc
cmp
orl
add
jmp
mov
imul
arpl
aas
sub
fnstcw
pop
gs
xchg
add
ret
push
repnz
mov
fiadds
mov
xchg
jp
jmp
test
sbb
sbb
popa
lds
or
push
cltd
cmp
lock
popf
addr16
and
adc
pop
nop
in
inc
stos
fstl
mov
sarb
sbbb
outsb
fildl
mov
cmpsb
cmc
xlat
cmpsl
mov
cmp
add
scas
add
ja
add
lret
or
pushf
ja
int3
mov
add
push
popf
jnp
pushf
sub
and
insb
popf
ss
fwait
sahf
mov
cmp
lret
fnsave
pop
adc
stc
or
pushf
mov
pop
jmp
push
mov
dec
sbb
inc
sub
mov
pop
and
arpl
xchg
pushf
and
ja
andb
clc
xchg
out
push
jmp
cmp
fistpll
pop
lock
push
in
out
xchg
imul
inc
rorl
xchg
ljmp
lea
and
mov
pop
adc
inc
or
mov
fldcw
cwtl
push
loopne
mov
test
mov
inc
shlb
sbbb
addl
and
mov
push
jge
cld
adc
jg
push
ret
mov
bound
mov
sbb
mov
adc
mov
call
sbb
les
xchg
or
mov
ljmp
xor
adc
clc
popa
fwait
sbb
aaa
sub
push
pop
popw
out
loop
scas
pop
cmp
imulb
js
outsl
popf
into
dec
jmp
data16
out
sti
dec
mov
sub
xor
and
mov
mov
sub
je
dec
mov
iret
mov
imul
fadd
push
loop
or
push
into
imul
adc
jecxz
xchg
adc
xchg
cltd
mov
jae
push
inc
addr16
lock
call
icebp
push
or
ror
shr
inc
jg
xor
fnstsw
pop
xchg
xchg
push
dec
dec
aam
je
stos
dec
stos
into
aam
mov
mov
insl
sub
scas
sbb
or
and
add
push
fpatan
jbe
mov
es
out
clc
je
subb
sbb
les
fbstp
cmpsb
xchg
dec
mov
jns
rol
imul
sahf
jge
in
clc
call
addr16
xchg
lretw
stos
push
push
hlt
cmp
daa
in
mov
fstps
pop
xor
lea
jmp
insl
in
xchg
dec
mov
jmp
mov
fildl
jno
mov
dec
xchg
int
scas
fwait
jae
adc
inc
repz
fmuls
cltd
push
fildll
test
sub
pop
push
dec
or
push
sbb
movsb
cmp
out
sti
mov
add
pop
mov
int
jle
lds
pop
in
push
out
xor
sbb
movb
and
les
int3
in
mov
mov
enter
fnstenv
jmp
dec
test
inc
jmp
push
pushf
xorb
xor
decl
push
mull
fnsave
sbbb
xchg
mov
ja
jo
push
and
leave
jns
hlt
lods
push
and
jae
push
adc
loope
xor
clc
or
mov
ja
or
scas
and
pop
cmp
lcall
movsl
sub
push
adc
pop
push
movsl
mov
adc
fildl
test
fcmovnb
mov
xor
or
in
into
push
in
test
push
test
adc
and
mov
cltd
scas
mov
into
adc
lahf
aad
je
scas
inc
jae
sub
imul
test
xchg
stos
add
call
mov
sub
sub
imul
mov
or
leave
sbb
lods
js
mov
pushl
jecxz
jns
lahf
cmp
xchg
sbb
fscale
or
push
xlat
cmp
add
dec
ret
push
xor
mov
sarb
mov
pop
pop
pop
mov
mov
lahf
leave
je
push
sub
mov
or
cmp
xchg
scas
dec
pop
mov
icebp
icebp
scas
icebp
popa
adc
xchg
or
mov
jbe
mov
xor
mov
daa
xchg
pop
push
cmp
pusha
das
add
lahf
xor
xor
sub
sahf
or
aas
sub
mov
xorl
shll
sbb
inc
out
test
adc
shll
xchg
cmp
push
cmp
aam
xchg
mov
std
sarb
inc
fcomi
bound
xor
mov
lcall
sub
inc
mov
stos
mov
js
ds
push
pop
inc
jmp
aaa
incl
mov
dec
xchg
cld
mov
aam
sub
pop
jmp
xchg
test
in
mov
cld
jae
iret
and
nop
stc
push
sub
inc
repnz
cmp
nop
xor
dec
repz
ss
sti
inc
sub
in
cmp
ds
jmp
ja
cmp
mov
rcll
rcl
pop
ret
sub
jb
or
dec
inc
cwtl
mov
mov
leave
cli
bound
mov
cmpsl
xor
dec
jae
push
negl
xlat
jle
lahf
sahf
inc
loopne
popf
mov
push
sub
inc
push
pusha
orb
or
push
andl
sub
cmp
xchg
lret
pop
sub
cltd
sub
dec
jl
add
push
or
aaa
xlat
cmpsl
dec
roll
push
aad
popf
dec
out
adc
cltd
dec
repz
mov
imul
push
pop
dec
and
and
jb
int
jo
repnz
jbe
xchg
inc
xorb
add
stc
cwtl
ret
xor
sbb
cmp
test
push
fldenv
adc
ja
and
outsb
sarb
cmp
iret
outsb
sti
and
enter
test
add
mov
inc
or
pop
cltd
mov
fstps
jno
mov
mov
or
call
jb
pusha
cwtl
jno
jb
pop
hlt
pop
push
jge
nop
push
push
pop
jle
mov
shl
sbb
jmp
push
sbb
or
dec
sbb
mov
jo
inc
scas
icebp
push
sub
es
hlt
ret
sub
ss
loopne
gs
push
sbb
or
or
jae
test
loope
test
mov
sbb
aam
adc
ljmp
fdivr
fsts
shll
data16
int3
jge
mov
nop
out
mov
imul
cmpsl
dec
sub
push
mov
sub
pop
push
push
push
or
rcll
cmpl
pop
pop
push
mov
repz
rcr
adc
push
stc
mov
or
lcall
adc
cmc
dec
lret
cmp
outsl
aam
jo
sub
rorb
insb
mov
cmp
sub
or
add
shrl
lcall
les
sub
lret
and
lods
and
push
xor
pop
push
and
lea
add
aam
sub
cld
inc
cmc
push
jo
dec
cld
jno
mov
stc
dec
das
test
clc
sub
sub
lock
shl
and
rorl
sub
cmp
aas
gs
repz
xor
inc
ror
sbb
xor
sbb
push
sbb
mov
jbe
das
and
aaa
mov
outsl
add
mov
pop
mov
dec
adc
in
negl
shrl
in
pop
mov
pop
sbb
mov
imul
mov
mov
dec
in
push
aad
lret
mov
mov
in
add
xor
aaa
inc
adc
iret
mov
adc
mov
adc
push
test
xchg
xlat
xchg
xor
imul
mov
push
mov
xorl
push
mov
enter
or
cwtl
mov
les
into
movsl
fstl
adc
push
and
aas
or
pop
dec
in
stc
push
out
sub
cmp
dec
mov
iret
push
popa
xchg
loope
mov
xor
pop
sbb
bnd
push
xchg
cmp
push
cmp
loopne
inc
rcrl
mov
dec
sub
imul
in
iret
mulb
push
aas
insl
in
adc
test
lcall
cmp
mov
test
cmpsl
mul
pop
or
cmp
jg
sbb
or
mov
add
and
push
or
sbb
addr16
test
into
in
divl
push
cmpb
icebp
and
push
sbb
sbb
jl
or
rcll
inc
lret
mov
cmp
jbe
push
cmpsl
fcomip
fwait
jp
mov
or
sbb
sub
movsb
sbb
scas
imul
inc
mov
fbstp
in
or
js
jne
or
add
mov
lea
mov
adcl
js
mov
jno
adc
scas
xchg
push
pop
pop
insb
aam
or
clc
sub
push
dec
lcall
cwtl
and
push
dec
in
jnp
pop
call
gs
mov
pop
fisttpl
iret
mov
adc
mov
ja
loope
sbb
loopne
repz
pop
stc
inc
xchg
test
inc
dec
adc
shrl
leave
mov
ss
loop
test
xchg
adc
cld
xchg
lods
mov
jle
sbb
lcall
add
adc
jge
add
and
push
scas
and
push
push
or
sti
data16
sbb
mov
addb
in
cmp
jmp
lea
test
or
push
jmp
push
cmp
sbb
repnz
inc
push
test
out
jp
jp
inc
mov
aam
pop
jl
pop
cmp
or
inc
out
shrl
pop
movsl
fcomp
xlat
repz
adc
stc
in
test
mov
rolb
imul
cmp
cmp
fdivl
jne
ja
pop
pop
je
mov
pop
mov
dec
mov
inc
test
pop
cmp
jg
jno
push
jle
call
stos
sbb
enter
lret
test
hlt
push
cmp
jae
or
add
jp
les
jp
fmul
xchg
xchg
xchg
inc
cltd
lahf
or
or
enter
mov
adc
sub
outsb
mov
xlat
dec
jbe
cmp
push
cmpb
cmp
nop
inc
dec
inc
jbe
cmpsl
testl
adc
xchg
mov
push
mov
loope
sbb
add
fstpt
stos
ror
xor
loop
daa
cmp
mov
cwtl
mov
mov
sub
fidivrs
adc
or
mov
jge
outsb
push
mov
fwait
mov
shr
add
dec
shlb
into
arpl
mov
fdivl
outsb
sbbl
movsl
cmp
cs
int
mov
nop
pop
and
cmp
aas
inc
jp
mov
je
dec
out
adc
lock
pushf
pop
cmp
shll
jl
test
sbb
xchg
mov
lods
ret
stos
ljmp
into
or
cmp
pop
push
fsubrl
push
mov
xchg
sbb
and
inc
fs
or
mov
jnp
ret
push
push
or
mov
sbb
jo
rcll
sbb
ret
sub
je
test
inc
inc
mov
jb
inc
push
aad
lret
jnp
js
sti
push
arpl
js
push
cmp
xor
jl
cmp
xchg
inc
jmp
lods
add
fidivl
movsb
daa
ret
mov
pop
add
xchg
jp
jo
icebp
lock
xchg
scas
pop
inc
xchg
jge
or
out
jle
push
cmp
adc
into
scas
pusha
mov
mov
jg
cmp
cmp
inc
xchg
imul
roll
add
loop
imul
inc
rcrl
jl
mov
adc
iret
shll
jge
incb
dec
or
xchg
cmp
sarb
push
push
adc
lret
sarl
int3
mov
jmp
add
mov
mov
cli
xor
cld
or
push
fdivp
mov
dec
scas
jae
cmp
push
mov
loop
mov
dec
sbb
fdiv
xor
jo
ret
dec
lock
add
test
adc
and
jle
scas
repnz
ds
sbb
lcall
jno
cmp
stc
pushf
pop
es
xchg
xchg
fidivs
dec
sbb
mov
mov
repz
popa
push
rcl
or
shrl
sub
sarb
ds
pop
scas
shll
movsb
add
pop
mov
test
leave
fbstp
dec
add
pop
lcall
mov
mov
cs
addr16
jno
ret
bound
cmp
pop
adc
cltd
sahf
mov
and
in
pop
push
js
cmp
jns
ljmp
nop
jne
nop
gs
mov
push
sub
inc
or
and
shl
dec
movsb
arpl
mov
iret
leave
imul
mov
push
dec
pop
iret
int
test
or
pop
sahf
adc
cli
sub
pop
or
sub
mov
fwait
adc
adc
cmpl
sti
insl
aas
mov
out
stc
nop
add
sbb
sbb
into
aad
in
fs
jge
mov
into
aas
lret
lods
inc
add
xor
sbb
inc
loop
jle
sarb
stos
movsb
not
fdivl
pop
jp
jne
or
mov
and
enter
jbe
rorl
pop
out
xchg
scas
fdivrl
or
negb
cmp
mov
inc
popa
inc
bound
clc
xchg
sub
jne
fidivrl
xchg
insl
sarb
mov
in
loope
hlt
sbb
aaa
sbb
and
sbb
xor
lcall
ficomps
cltd
mov
pop
std
mov
lcall
data16
xlat
or
clc
idivl
icebp
push
push
sub
lcall
push
std
jae
ds
std
inc
or
lock
mov
or
or
neg
lods
lea
jo
and
lahf
into
xor
in
xchg
out
add
mov
sub
pop
mov
dec
inc
pop
addr16
fimull
fisubrl
mov
movsl
or
jl
pop
fcomps
mov
pop
lock
or
jbe
aaa
dec
dec
ljmp
sbb
lahf
daa
xchg
dec
adc
gs
call
test
sahf
mov
or
out
cmp
push
addr16
out
xor
repnz
add
xor
arpl
js
imulb
or
repnz
add
mov
ljmp
cmp
icebp
in
mov
pushf
mov
movsb
xchg
xchg
and
pop
jp
int
and
pop
push
sub
push
jl
sub
xchg
sbbb
xorb
call
out
push
xchg
movsl
pushf
insb
and
push
push
xchg
lea
andl
movntq
ret
fwait
cmpsb
repz
adc
aas
add
cs
push
addr16
fistpl
andb
xchg
pop
scas
mov
arpl
mov
movq
jo
jmp
dec
ja
in
leave
jl
fwait
aaa
or
aas
int3
les
leave
das
inc
adc
movsl
mov
mov
inc
lods
jb
dec
mov
fadd
mov
jl
or
pop
push
xlat
adc
lds
adc
cmp
aad
cmpsl
jne
out
xor
pop
add
dec
cwtl
sub
jmp
cltd
movsl
imul
loope
sbb
jns
test
jb
xchg
xlat
push
mov
push
loopne
int3
into
daa
push
lea
imul
js
pop
pusha
jp
add
sti
aad
xchg
xchg
jb
sub
pop
andl
test
addr16
insl
loope
sbbb
js
ja
sbb
pop
lods
jne
std
pop
pop
cmp
sbb
pushl
and
adc
add
push
jl
sub
je
jne
lcall
or
test
ja
cmp
inc
adc
jg
notb
pop
dec
in
dec
leave
mov
test
jecxz
sub
outsl
fs
inc
movsb
and
xor
and
jle
add
loopne
jp
xchg
js
dec
dec
divl
out
ucomiss
cmpsb
lock
in
test
mov
or
test
pushf
cmp
mov
mov
xchg
test
sbb
mov
jno
xor
pop
cmpsb
push
lcall
pop
subl
cltd
push
add
and
jno
je
and
sub
cwtl
add
cltd
xchg
sbb
cmc
repz
add
sbb
push
dec
mov
pusha
jp
add
mov
pop
into
add
insl
cmp
mov
pushf
in
mov
fisttps
data16
sbb
xor
jno
in
push
jnp
mov
int
jno
or
sub
inc
cmp
loop
repz
aas
xlat
test
cmp
or
push
imul
push
push
sub
push
jmp
cmp
scas
inc
fs
sub
mov
cmp
or
filds
lods
jmp
jge
lock
neg
lds
cmp
xchg
lds
outsb
jnp
insl
xchg
cs
sbb
out
mov
rcrb
test
push
xchg
jmp
out
dec
sahf
je
cmp
dec
sub
or
add
scas
push
mov
adc
jae
add
lcall
cld
mov
adc
jecxz
dec
sub
fstp
aam
icebp
sbb
lahf
sub
imul
in
outsb
jge
cmp
out
sub
jbe
jecxz
fiadds
push
in
lods
inc
fbstp
xor
add
mov
jge
adc
xchg
imul
push
mov
lcall
dec
shr
hlt
jp
add
shl
pop
jae
xchg
xor
jle
jg
rcrb
fldenv
xor
mov
push
ss
mov
cmp
out
dec
mov
pop
imul
xor
jge
adc
imul
mov
sbb
cmc
daa
xchg
dec
mov
pop
sub
jb
js
enter
loop
repnz
adc
andb
jnp
stos
scas
mov
adc
jnp
adc
sub
stos
inc
xlat
stc
dec
cmp
xor
lea
dec
stos
clc
roll
bound
lds
dec
inc
test
bound
and
push
in
push
mov
push
pop
fmull
add
lret
std
inc
xchg
dec
mov
sahf
shll
jns
and
inc
cli
mov
inc
gs
out
cmpl
push
lods
xor
test
cltd
pop
sub
dec
movsl
xor
jns
mov
fimull
jne
imul
jb
mov
pop
call
adc
mov
jp
stos
pop
adc
sub
shll
repz
jl
inc
jbe
sbb
sub
xchg
or
clc
jmp
pop
idivb
add
loop
push
bound
bnd
or
xchg
outsl
repnz
ja
outsl
jge
stos
gs
add
push
xchg
sub
outsl
daa
or
inc
cmp
mov
dec
push
adc
stc
cs
enter
scas
inc
dec
gs
cmp
loopne
inc
pop
dec
push
mov
adc
sahf
lods
ljmp
xor
fdivrl
in
in
pop
js
mov
shlb
js
lea
divl
lahf
lods
cmpl
add
scas
adc
and
ja
repz
stc
sub
push
mov
loop
jle
pop
scas
stc
sub
stc
insb
dec
cmpsb
xchg
cmp
ss
inc
pop
ror
jb
xchg
add
dec
aad
or
sub
and
shl
cmp
aam
jmp
cmp
inc
loop
xchg
jnp
cs
sahf
ljmp
rcrl
ja
aaa
rorl
cli
clc
adc
arpl
aam
lods
xchg
test
in
mov
xchg
jl
and
mov
adc
cli
adc
adc
cltd
mov
lock
repnz
push
sbb
mov
lea
stos
int3
test
adc
and
fcom
aas
js
adc
jecxz
xor
sarl
adc
arpl
repz
rcrb
cmp
mov
addr16
push
inc
ds
mov
or
subl
ja
and
ja
sub
jmp
cmpl
xor
sub
fstp
sub
inc
lods
insl
in
jp
jp
call
lcall
xor
shlb
test
mov
sub
fwait
jae
inc
jge
loopne
jecxz
insl
sub
stc
fildll
daa
mov
imul
fstps
fs
ret
inc
jecxz
push
inc
icebp
enter
push
in
lea
cmp
repnz
or
dec
jl
mov
push
dec
test
adcb
adc
jecxz
xchg
mov
mov
cmp
cmovns
roll
fs
das
std
adc
jle
cmpsb
jle
sahf
movb
shlb
dec
jnp
into
sbb
in
cld
sbb
adc
adc
outsl
rorb
fiaddl
fxam
push
jns
test
pop
adc
fs
movsb
mov
cmp
adc
and
mulb
jnp
jnp
push
xlat
gs
outsb
xchg
jb
ljmp
negb
aad
loope
mov
push
pop
sbb
cltd
fildll
inc
mov
xor
mov
cmpb
loopne
inc
inc
lret
jbe
ja
leave
xor
inc
jns
xchg
jmp
sub
mov
mov
clc
inc
mov
add
fs
pop
sbb
or
mov
adc
jae
out
push
movsl
add
lahf
push
es
and
inc
ss
mov
mov
push
and
adc
test
inc
mov
xchg
loope
pop
push
sti
test
mov
sub
push
rorl
dec
sarb
jnp
repnz
adc
inc
jmp
or
cltd
call
jmp
addl
fs
addr16
jnp
mov
dec
mov
jge
aam
mov
xor
inc
mov
je
sub
sub
push
dec
mov
jl
mov
fisubrs
inc
in
imul
jmp
divb
pop
out
insl
adc
mov
xchg
les
mov
push
add
mov
adc
inc
cmp
push
xchg
cmc
stos
xchg
jno
mov
repnz
sbb
inc
fsubrl
inc
mov
fiaddl
sbb
test
inc
xor
mov
sbbb
pop
push
jmp
cmpsb
jge
xchg
adc
dec
mov
cmp
sbb
push
jo
ss
mov
jae
mov
push
sbbl
fucomip
xor
mov
movsl
in
les
inc
scas
cmp
ficoml
sbb
sahf
mov
ja
aad
inc
call
xor
fildll
gs
imul
lods
hlt
bound
bound
add
or
sub
mov
mov
sti
out
fninit
jno
in
pop
cld
mov
dec
ljmp
out
xor
pop
or
movsb
stos
sbb
sub
es
inc
push
aaa
cmp
jns
jle
adc
dec
dec
cmp
outsl
sub
push
in
or
mov
and
mov
sub
sbb
dec
stos
sbb
nopl
sub
xchg
pop
and
push
adc
jns
or
mov
lcall
dec
cmp
cmp
mov
xor
dec
ret
into
inc
mov
push
cli
push
arpl
sbb
xchg
inc
or
scas
cwtl
jmp
jno
cmc
in
pop
addr16
fstpl
into
sahf
mov
out
imul
loope
xor
insb
gs
cli
and
sarl
mov
div
psubsb
jle
and
hlt
sub
pop
xchg
movb
xor
push
push
out
jl
cmp
inc
sbb
cmp
push
adc
gs
mov
loopne
sbb
aad
adc
popf
dec
sub
mov
mov
mov
ljmp
les
mov
push
sub
sub
jns
cwtl
insb
into
jo
mov
mov
pop
adc
testl
lcall
xchg
movsb
xchg
add
cmp
lahf
aaa
mov
mov
jecxz
fsubs
nop
mov
in
cmp
jne
add
mov
and
and
dec
mov
cmp
jl
dec
fwait
scas
cli
mov
fcomip
cmp
add
jne
lcall
and
xchg
xchg
js
cli
out
stos
sub
or
inc
cmp
in
pop
mov
dec
insl
dec
jns
jo
xor
pop
or
jle
jg
or
dec
and
movsl
mov
jmp
test
and
fisubl
cmp
cltd
mov
mov
push
jb
rorb
andl
mov
sub
mov
and
fldcw
jp
cmpl
test
loop
jnp
jmp
stos
dec
xor
mov
mov
jae
xchg
mov
pop
pop
push
or
sub
insb
fidivrl
pop
clc
dec
mov
inc
jae
aam
xchg
int
insb
xor
insl
xor
xor
ret
mov
add
clc
and
xchg
or
push
add
mov
add
cld
insb
adc
test
ljmp
ret
fmul
loope
push
push
sbbb
and
jno
add
and
daa
pop
dec
icebp
pushf
ja
xor
das
pop
in
lret
ret
out
insl
mov
test
xor
push
call
jno
cmpsb
scas
fdivr
and
in
inc
xor
jne
push
xor
lret
imull
sbb
jge
mov
jmp
rcl
or
cmp
movsb
enterw
mull
ficoms
jne
add
cmp
jl
push
loope
in
lret
std
cwtl
add
mov
adc
add
imul
sub
scas
lods
jle
out
xchg
push
xchg
arpl
push
dec
out
cmpsl
es
jo
movsl
pop
cmp
aaa
lods
cs
and
inc
shlb
jecxz
xor
sahf
arpl
aam
das
shll
je
cmc
push
rcrb
nop
movl
dec
mov
imul
jae
cmpsb
std
popf
mov
push
push
add
mov
pushf
ja
xchg
jl
and
fisubs
inc
lods
inc
inc
xorl
lds
pop
aas
neg
loopne
and
jb
and
sub
pop
mov
jle
xchg
pop
rcrb
clc
fisubs
mov
fs
mov
pop
cmp
adc
xchg
xor
lds
mov
jb
call
pop
cmp
mov
andl
xor
pushw
jo
mov
setnp
jnp
shlb
or
jge
inc
and
cmp
ret
movsl
pop
xchg
divb
scas
fsin
lock
dec
xchg
mov
ss
sub
das
lret
mov
xchg
les
mov
shrl
jbe
sbb
aas
mov
jp
mov
jecxz
gs
icebp
out
xchg
cli
mov
ret
insl
push
stc
out
cltd
dec
lock
add
adc
lock
or
ret
and
enter
sub
jo
mov
xchg
movsb
inc
mov
xchg
dec
cmp
dec
push
inc
clc
call
mov
inc
inc
aad
sbb
insl
pop
or
fidivs
test
or
sub
sbb
inc
pop
sub
enter
cmc
or
xorb
iret
cmp
mov
adc
jl
cmpsb
add
xor
add
jmp
cltd
inc
and
push
adc
ljmp
jle
fistl
adc
push
or
mov
jns
sub
inc
push
int
jno
out
fldl
ret
xchg
jge
dec
fisubl
and
mov
es
or
mov
cmp
and
out
add
inc
pop
test
pop
adc
mov
leave
dec
add
aaa
push
dec
mov
mov
insb
xchg
movsl
andb
xchg
leave
cmpsl
pop
loopne
test
loopne
ret
add
and
stc
stc
sub
bnd
into
mov
pushf
lock
inc
sti
adc
aam
jmp
adc
adc
aaa
xchg
inc
dec
cld
int3
out
mov
fistl
in
mov
push
pop
leave
iret
daa
pop
shl
inc
and
inc
sbb
adc
sub
loop
jmp
dec
push
lock
inc
xor
jge
pop
lret
xchg
dec
lea
xchg
aam
sub
sahf
fs
nop
pop
sub
je
sub
jl
movsl
jge
neg
rclb
xor
in
clc
lret
sbb
sub
cmp
mov
push
and
leave
pop
popa
mov
mulb
mov
pop
add
arpl
xchg
in
sub
push
fcoml
je
fildl
mov
xor
leave
ljmp
fistl
stc
mov
xchg
sub
jle
inc
sbb
clc
andl
push
sbb
inc
xor
aaa
rol
cmp
shlb
xchg
pop
mov
das
adcb
pop
in
stc
dec
test
add
ret
cmp
xor
fidivrs
sbb
scas
mov
cmpsl
pop
ja
xchg
cmp
push
cld
sbb
scas
out
xchg
popa
rorl
xchg
jecxz
mov
add
jle
repnz
add
shll
push
sti
or
mov
aaa
xchg
pop
jle
sarl
dec
nop
in
xchg
dec
and
lods
jecxz
popf
mov
je
fisttps
xor
dec
mov
scas
mov
mov
stos
out
add
test
iret
mov
mov
jne
aas
in
xor
push
in
aam
lods
sti
inc
lea
mov
jl
orb
test
lahf
dec
js
inc
push
jp
ljmp
je
inc
mov
out
mov
in
inc
es
es
add
push
in
xor
leave
lret
push
in
cs
mov
xchg
jo
lds
cwtl
stos
pop
xor
and
sti
mov
mov
jnp
ret
xchg
push
push
cwtl
pop
mov
xchg
cwtl
lret
jbe
pop
fwait
adc
aad
jp
jo
out
sahf
ljmp
sub
aas
lds
or
lahf
subl
out
cld
dec
testb
push
or
dec
movsl
fisttpll
mov
jno
shlb
xchg
fisttps
or
ror
fwait
push
movsb
cmp
pop
mov
inc
sti
pop
mov
enter
xchg
jmp
xor
add
fists
shrb
sbb
icebp
sub
mov
push
fnsave
jne
push
cmpsb
xchg
mov
xchg
xchg
and
jle
xor
pop
cmp
cmp
lret
xor
inc
dec
fs
nop
test
cmp
out
sbb
dec
loopne
inc
jno
push
leave
sub
or
sbb
int3
in
shrl
xchg
mov
lea
pop
stos
filds
orl
mov
aas
push
mov
fcomps
rcll
andl
std
inc
rolb
cmp
jmp
adc
sahf
push
cmp
sbb
gs
dec
lret
insl
push
cmp
xchg
mov
cmp
mov
pop
loopne
dec
inc
adcl
or
ret
xchg
jae
loop
and
jle
mov
lret
ficomps
ljmp
sbb
jne
out
xchg
in
lods
pop
sub
fisttps
test
xor
push
mov
mov
hlt
call
shll
pop
pop
sub
inc
lret
sar
aam
pop
mov
dec
jle
aaa
mov
or
xor
jmp
mov
mov
push
jae
mov
xchg
jecxz
fisttpll
iret
mov
lret
sbb
mov
jmp
out
xchg
mov
or
mov
andb
or
clc
pop
push
aaa
adc
pop
sti
pop
lods
vmovlps
and
dec
fmull
call
mov
loope
add
jp
inc
in
pop
pusha
repz
pop
mov
iret
stos
cmpsl
imul
addr16
test
cld
repnz
mov
mov
movb
push
push
push
dec
cmp
push
push
fwait
or
push
adc
xchg
jp
gs
add
loopne
cmc
sbb
jae
dec
jl
repz
into
mov
arpl
movsb
lahf
dec
arpl
lcall
cmp
jae
xor
test
push
xor
jg
and
sub
in
int
fsubr
xor
xchg
mov
fcomps
and
jnp
stos
inc
shlb
stc
js
aas
ja
int3
push
into
mov
jecxz
push
cmpsl
ror
mov
in
test
sbb
mov
ror
loop
or
pop
lret
out
adc
push
lods
cmp
sub
fiadds
nop
fcomps
sbb
stc
call
xor
lods
in
call
cltd
movsl
xor
inc
xchg
icebp
cmp
xlat
stos
adc
and
inc
xchg
mov
mov
jecxz,pt
mov
jae
cs
js
push
xchg
test
jns
pop
imul
test
cli
ror
fsubs
jne
mov
lods
pop
lcall
ds
sbb
jmp
mov
aaa
ds
fdivrl
xchg
ss
hlt
dec
cmp
call
lods
ja
fstps
xchg
aaa
sub
dec
pop
and
or
fnstenv
xchg
jnp
jbe
mov
imul
movsl
rolb
dec
cmp
inc
xchg
mov
sbb
pushf
lds
rorb
mov
mov
lods
shlb
mov
aaa
imul
stos
or
aas
nop
aas
jl
std
imul
jae
sti
pop
jp
mov
or
jae
xchg
jg
subl
jno
xlat
xor
pop
pop
xor
mov
fists
adc
xor
cli
mov
imull
lods
stc
fsubrl
aas
imul
jns
imul
in
icebp
fcoml
cmpsl
mov
pop
test
inc
loope
lock
test
lods
pop
scas
lds
pop
sbb
ds
ja
cmpsb
dec
out
lahf
mov
icebp
pushw
pop
xor
jbe
jnp
xchg
ss
fcomip
mov
mov
stc
or
pop
daa
xor
fs
push
lret
rorb
cmp
int3
mov
xchg
pushf
fwait
inc
xor
fsubs
push
aad
movsb
cmp
mov
dec
xor
out
push
pop
arpl
inc
scas
aam
adc
sbb
mov
int
push
fildll
and
mov
push
mov
mov
fs
sub
xor
jmp
jmp
loop
out
repz
lcall
xchg
cmp
push
jno
pop
into
inc
jo
mov
cmp
and
push
push
inc
pop
mov
or
ja
lret
fsubrp
xlat
sarl
xor
xor
lret
inc
or
inc
insl
cmc
fmul
pop
xchg
sysexit
fs
jne
mov
iret
cmp
stos
arpl
aam
mov
cltd
push
mov
lcall
dec
and
xchg
mov
fisttpll
out
mov
xchg
add
lret
popa
in
pop
push
xor
cltd
mov
daa
inc
sbb
cmp
leave
mov
pop
cmp
jbe
out
rorl
xor
imul
xchg
and
or
addr16
scas
jecxz
dec
ret
mov
mov
test
xor
outsb
mov
mov
dec
jl
in
sbb
jbe
adc
aam
xchg
les
cmp
mov
lods
mov
cmp
dec
cmp
loop
int
xchg
sub
es
shlb
jnp
inc
rorb
cltd
jno
ljmp
test
jnp
cwtl
or
int3
inc
into
fdivrl
fmul
xor
daa
lock
cwtl
mov
andb
mov
sub
adcl
jns
call
mov
mov
sub
movsb
cld
in
pop
pop
lret
push
in
lock
mov
enter
pop
dec
clc
mov
mov
rolb
aas
je
lahf
iret
pop
jns
ret
std
arpl
cld
add
psrld
nop
leave
jno
lret
popa
pop
ja
enter
call
adc
std
pop
inc
dec
lock
orl
ja
in
ja
lock
xchg
cmp
in
inc
sub
in
cmp
fwait
pop
outsl
sahf
aaa
inc
fwait
inc
dec
fs
xchg
sub
xor
mov
int
dec
fidivl
lcall
pop
adc
out
push
and
in
mov
sub
nop
ja
int
inc
out
cwtl
lahf
adc
inc
nop
iret
dec
mulb
in
stos
cmp
out
lods
push
icebp
jns
test
mov
sub
and
or
mov
repz
pop
jne
push
add
pop
sbb
ret
dec
pop
stos
imul
pop
pop
lret
sbb
pop
adc
call
xchg
in
cmp
inc
and
fcoms
push
and
ljmp
jns
jg
leave
out
inc
add
mov
jge
clc
push
push
sbb
mov
enter
test
lcall
test
dec
js
in
outsl
push
sbb
and
lea
push
pushf
ja
mov
call
subl
inc
jecxz
sub
xlat
test
int
mov
and
cwtl
dec
stos
into
data16
mov
and
ja
pop
test
jnp
sahf
or
in
adc
pop
mov
push
lcall
xor
dec
fdivrs
lcall
mov
xchg
dec
sub
fwait
mov
iret
imul
scas
lret
cmp
add
mov
push
jecxz
cmp
sub
je
insl
pop
pop
mov
xor
xchg
pushf
iret
mov
jbe
lock
cmp
pop
dec
popa
sub
and
jns
ss
into
outsl
cmp
dec
mov
cld
pop
mov
popa
push
aaa
push
and
lods
pmullw
adc
dec
in
enter
adc
sbb
lret
lods
dec
int3
movb
in
push
js
cmpsb
sahf
lea
ljmp
inc
imul
dec
std
adc
xchg
and
or
imulb
xchg
pop
dec
sbbb
stos
or
and
push
pushf
stos
dec
popf
push
mov
sbb
aas
mov
test
ljmp
iret
movsb
test
jecxz
sbb
adc
fmuls
sub
push
sub
push
pushf
push
mov
push
repnz
add
je
sbb
movsb
cmp
arpl
lret
push
ret
push
mov
xor
ret
outsb
xor
cli
mov
insl
lret
mov
sub
mov
fnstsw
push
xor
gs
adc
sub
mov
scas
int
loop
mov
sti
testb
adc
sbb
pop
pusha
out
insl
std
in
popf
test
mov
adc
ja
aas
out
sti
insl
lret
pop
sbb
popf
cmc
mov
jmp
xchg
jmp
fnstenv
lahf
sarb
mov
lods
pop
mov
mov
add
cmpsb
test
sbb
cltd
pusha
dec
loope
mov
jecxz
and
mov
xchg
sbb
leave
ffree
lds
sahf
lods
push
mov
jnp
add
movsl
push
rol
int3
cmpsl
dec
mov
push
push
sbb
sub
lods
insb
js
add
imul
addr16
ffreep
adc
push
add
bound
insl
xchg
adc
sbb
mov
out
aas
jge
inc
and
aam
or
cmp
scas
xor
divl
insb
push
mov
loope
cmp
out
ss
rorl
xchg
daa
adc
cmc
xchg
push
adc
fwait
adcb
jge
sub
dec
test
bound
jns
out
imul
das
insb
leave
repz
xlat
rorl
neg
clc
imul
mov
push
push
hlt
fisttps
pop
in
outsl
adc
pop
inc
js
sub
enter
jo
sti
jbe
xchg
andl
pop
ret
mov
cmp
aas
sti
push
cmp
adc
movsb
popa
push
mov
test
mov
inc
into
stc
add
add
ja
std
and
movl
mov
adc
sar
les
xchg
bound
pop
sbb
fbstp
sub
filds
pop
in
pop
add
mov
aam
mov
mov
dec
rclb
imul
les
faddl
dec
adc
or
shr
dec
add
mov
outsb
push
ja
inc
sub
addr16
nop
movsb
mov
xchg
out
mov
xor
fwait
dec
pop
or
scas
orb
sahf
jae
lret
sti
dec
mov
out
loope
mov
xor
fwait
pop
movsl
mov
xlat
pop
pop
push
mov
add
xchg
ja
mov
mov
nop
sbb
lahf
cmp
xor
pop
xor
push
pushl
cmpsl
dec
and
repz
add
loope
xchg
mov
jl
loop
sbb
shr
lods
fbstp
mov
cmpsb
adc
fmuls
fwait
mov
int
pushf
shll
ret
adc
call
fiaddl
fidivrs
sbb
jg
xlat
xchg
inc
mov
aad
jne
shlb
movsl
and
jg
sub
mov
jle
mov
fnstsw
add
aaa
push
jbe
enter
xlat
xor
aaa
pop
and
mov
pop
mov
mov
lock
movsl
out
movsl
dec
shr
sti
sbb
push
in
fistps
test
xlat
mov
icebp
mov
adc
jle
dec
insb
mov
out
pop
xchg
xchg
outsb
mov
xor
cmp
notb
sahf
movsb
nop
aad
xchg
loope
xchg
mov
push
test
pop
xor
mov
adc
mov
fs
in
bound
loop
adc
in
fisubl
lods
push
xchg
sub
push
sbb
loopne
mov
shll
mov
jae
dec
out
mov
inc
int3
mov
pop
int
inc
jmp
adc
icebp
xlat
pop
lahf
std
popf
xchg
pop
push
jae
jne
push
cmpsb
dec
scas
sbb
jo
lcall
mov
out
js
mov
cmpsb
push
subb
sbb
or
in
dec
and
cli
daa
add
xorb
adc
cmp
pop
mov
int
mov
out
lock
cli
pop
ret
lods
xchg
mov
outsb
pop
setg
and
dec
pop
fs
cmp
mov
cmp
dec
add
fcomps
cmp
or
push
adc
mov
inc
insl
cmp
adc
enter
stc
mov
test
arpl
lret
int3
xor
xchg
and
cmp
insl
jecxz
popf
divl
mov
mov
xchg
out
mov
cmpsl
imul
xchg
dec
cmp
sub
sbb
dec
loope
andl
push
adc
mov
jb
pushf
sbb
ficoms
add
ffree
dec
xlat
mov
mov
rcrl
das
or
loopne
pop
clc
sub
xchg
mov
adc
sbb
push
adcb
jl
in
add
pop
mov
sti
xchg
push
or
movsb
mov
inc
push
mov
jne
loopne
pop
cmc
xchg
sbb
out
dec
mov
cmc
adc
jb
ror
lods
loopne
pop
test
insb
hlt
and
mov
pop
or
jns
and
cli
mov
movsb
fucomi
adc
jmp
fsubs
rep
hlt
sub
cwtl
fists
xchg
dec
scas
fwait
dec
cmp
inc
out
fidivl
ds
lods
mov
mov
sti
and
cmp
jbe
mov
cmp
fstpl
fstps
jecxz
xorl
out
add
jmp
mov
xchg
xchg
lods
inc
jbe
clc
adc
daa
push
sbb
sub
mov
cld
pop
ret
inc
push
push
ret
add
or
push
subb
sar
xor
mov
jo
das
push
sbb
push
inc
div
into
out
pop
xchg
or
outsb
gs
mov
dec
cmp
andb
in
mov
filds
add
xchg
hlt
inc
cmp
gs
pop
adcl
mov
jle
add
arpl
jns
push
aad
mov
dec
mov
js
stos
push
orb
bound
jbe
push
in
push
cmp
jnp
fcoml
and
or
shll
pop
mov
jo
movsb
push
mov
fisubl
repz
imul
int3
int
cmp
jmp
mov
addr16
sub
dec
inc
sarb
mov
push
cwtl
cmp
push
out
ret
push
inc
in
xchg
cmp
pop
xchg
cmp
shl
or
pop
jmp
frstor
cmpsb
dec
es
inc
ss
mov
and
cs
inc
leave
jbe
mov
adc
js
enter
dec
outsb
and
sbb
iret
adc
cmp
cs
mov
loope
lret
fdivs
add
pusha
in
and
clc
sub
pop
lds
imul
addr16
add
out
xchg
call
mov
pop
lret
ljmp
mov
add
xchg
add
xor
aad
push
fnstenv
push
movsb
or
sub
cmc
push
adc
cmp
xchg
outsb
push
and
inc
fistpl
dec
insl
lcall
sbb
data16
hlt
es
adc
mov
cmpsl
insl
and
shr
stos
btr
test
mov
outsl
addr16
rolb
add
test
pop
sub
cmp
mov
cmpl
ljmp
or
or
jne
sub
jp
leave
push
dec
jne
hlt
mov
jns
cli
push
sarb
pop
cltd
fdivr
and
xchg
imul
or
pop
sti
dec
xchg
aas
fisttpl
or
test
jecxz
ret
rolb
push
fwait
ret
push
xor
add
gs
sbb
sbb
movsb
dec
cmc
sbb
xchg
cmpsl
cmp
push
xchg
mov
loopne
xchg
inc
add
lock
hlt
push
pop
sbb
xor
sbb
test
pushf
sbb
or
lret
inc
adc
mov
rcll
loope
decb
jg
loop
pop
imull
sub
push
iret
mov
inc
out
shll
daa
scas
jg
or
fcoml
jl
lods
dec
lods
iret
pop
push
jo
pushw
jl
push
sbb
int
mov
add
loopne
loopne
pop
cmpsl
pop
mov
out
sub
cld
add
dec
nop
mov
add
lods
ss
fdivs
psubsb
inc
inc
rcll
adc
or
addr16
ja
out
fldt
and
shlb
xor
mov
test
out
sbb
mov
xchg
adc
sbb
sbb
outsl
sarl
rcrb
fdivrl
pusha
mov
or
scas
pop
pop
adc
test
sub
inc
fildll
xchg
sub
iret
or
pop
addr16
rorl
nop
aaa
lds
cmp
mov
adc
lea
arpl
mov
es
sub
sahf
test
adc
lcall
popa
and
shll
xchg
add
adc
enter
push
test
sbb
sub
xor
jg
out
xor
cltd
and
icebp
push
inc
loope
aam
mov
gs
iret
subb
aas
mov
mov
sub
jno
mov
adc
pop
sbbl
mov
scas
mov
sbb
sbb
repnz
leave
xchg
xchg
xchg
ret
jp
bound
orb
pop
aaa
add
jbe
pop
pop
ljmp
dec
jle
pop
jl
repnz
repz
out
imul
int3
fistps
call
inc
in
push
cs
push
cwtl
movsb
push
popf
mov
sub
xchg
fcompl
jnp
ja
pop
popa
es
ds
adc
jmp
and
cwtl
int3
mov
ljmp
mov
int
mov
mov
pop
push
mov
sbb
shll
fwait
mov
arpl
daa
aaa
mov
ds
aas
xchg
cmp
stos
scas
in
pop
in
or
dec
outsb
jb
jge
pop
inc
inc
jle
xor
inc
jp
out
scas
xor
nop
dec
inc
sbb
pop
call
pop
dec
pop
dec
mov
roll
loopne
xchg
mov
add
pop
stos
jno
sub
dec
pusha
inc
jo
adc
fucomp
xchg
imul
sub
enter
test
out
cmp
push
pop
out
push
mov
push
sbb
push
jae
or
loopne
sbb
mov
or
mov
mov
jl
jmp
mov
es
subb
jge
pop
jp
inc
mov
sub
clc
xchg
stos
sbbl
ja
sbb
scas
fnsave
clc
or
inc
cmc
cmp
pop
mov
scas
popa
sub
addr16
pop
insl
lock
and
sub
ret
sbb
dec
xor
rcrl
adc
jb
adc
push
stos
xchg
dec
cld
mov
pop
or
jo
pushw
sbb
mov
das
mov
xchg
push
filds
mov
imul
push
shrd
fnop
in
cmp
push
subb
push
jecxz
out
xchg
cmp
jg
cmpsb
ret
xor
push
mov
xchg
imul
aas
adc
inc
mulb
adc
dec
ret
push
cli
cmp
mov
push
int3
in
setp
mov
test
mov
adc
cmp
inc
inc
dec
push
add
pushf
mov
enter
mov
sbb
daa
fucompp
and
dec
cmpl
jne
cld
lret
adc
andl
xor
aaa
cmpsb
jo
mov
push
pop
mov
jmp
cmp
push
nop
cmpsl
mov
mov
xor
cmpsl
dec
repnz
out
stc
imul
pop
sti
bound
test
aaa
mov
test
cmpl
mov
hlt
inc
test
xlat
and
clc
and
lods
add
sub
mov
adc
jo
loope,pt
jp
add
cmp
or
xor
or
pop
clc
rcr
mov
mov
imul
das
xor
cmp
push
sub
mov
and
js
push
push
in
and
test
mov
push
or
or
jb
daa
stc
out
roll
icebp
lcall
pop
ret
repz
notl
jae
cmpsl
and
aaa
test
stos
adc
cli
lods
iret
ja
incb
das
int
or
iret
mov
leave
sbb
outsb
dec
aam
addr16
test
enter
enter
push
sahf
jo
mov
es
inc
pop
or
dec
out
push
in
lret
add
aad
imul
fxam
dec
sub
xor
pop
ud0
loopne
jge
insl
popa
call
mov
mov
jp
inc
sub
in
inc
mov
xchg
sub
adc
sbb
popa
pop
xor
cmp
dec
push
mov
jle
push
dec
mov
inc
fadd
mov
insb
sbb
push
xor
in
adc
test
mov
pop
sbb
negl
out
add
mov
leave
add
dec
add
jp
sar
add
sbb
enter
or
or
fwait
test
inc
mov
jl
cmp
jne
ja
sbb
mov
mov
imul
sbb
cmpsl
xchg
jle
outsl
cmp
inc
icebp
pop
mov
sub
xor
test
insb
ret
data16
sbb
loopne
mov
mov
std
sbb
mov
sbb
in
cmp
or
ds
scas
mov
sub
push
insb
push
int3
xor
jmp
xor
int3
jne
outsl
xchg
xchg
test
xorb
loope
nop
movsb
pop
popa
pop
sub
rcl
int3
mov
adc
test
rcr
sbb
push
sbb
sub
mov
test
cmpsb
dec
fwait
add
popf
in
cld
jns
out
xchg
cmc
push
sbb
adcb
repz
daa
out
arpl
mov
mov
jne
adc
arpl
into
rcll
sub
mov
pop
jg
fidivs
push
adc
adc
jecxz
les
loop
call
cld
cwtl
adc
jp
js
sar
sbb
roll
fnstenv
push
movsl
xor
cmp
cmc
loopne
cmp
cmp
add
arpl
xchg
movsb
xor
scas
and
jmp
sbb
add
cmp
out
mov
sti
sbbb
xor
in
data16
inc
cmpsl
xor
add
and
in
cmp
dec
add
lods
in
jbe
stc
jbe
fcmove
push
dec
fs
cld
pop
mov
mov
popf
dec
popa
lock
mov
mov
insb
cmp
insl
inc
xor
mov
in
out
jno
cwtl
sbb
cmp
push
adc
lret
jl
aas
dec
imul
roll
aam
mov
mov
fmull
ret
inc
pop
popf
cmp
jg
inc
add
aaa
xchg
mov
lock
cmpsb
pop
mov
gs
mov
mov
xchg
ljmp
lods
xchg
sbb
and
sbb
and
mov
ss
imul
or
fidivrl
inc
inc
adc
sbb
movsb
xor
imul
xor
fwait
cmp
sbb
dec
mov
jp
dec
pop
test
orl
cld
leave
std
mov
nop
call
test
mov
out
js
loopne
loop
mov
xchg
and
test
jecxz
push
mov
cs
test
lods
inc
xor
testl
test
in
mov
stos
mov
popf
jns
idivb
fbstp
fwait
xchg
push
sbb
or
hlt
pop
shll
push
dec
mov
add
outsl
push
adc
push
xlat
mov
inc
fwait
les
xchg
insb
xchg
push
adc
mov
mov
dec
int3
xor
push
and
jmp
imul
mov
mov
add
cmpsb
mulb
mov
sub
gs
sub
cmp
fldl
sarl
xor
dec
inc
mov
scas
fisubs
sbb
in
in
insl
pushf
jp
xchg
add
mov
ds
cmpsl
push
push
pop
negb
jb
pop
jo
jl
jge
adc
xlat
jbe
fstp
jecxz
cld
shll
cmp
xchg
pop
inc
ret
inc
cmp
pop
mov
fistpll
mov
out
out
or
dec
data16
js
fiaddl
pop
aam
out
push
jecxz
sahf
sbb
inc
imulb
pop
test
push
inc
add
xchg
mov
xchg
aaa
ret
add
rolb
ret
out
pop
mov
dec
push
hlt
jge
fidivl
adc
xchg
mov
shrl
repz
pop
lods
mov
lock
add
cmc
sub
pop
mov
pop
cmp
rorb
data16
and
out
xor
or
insl
mov
add
sub
into
add
adc
sbb
lock
sti
jmp
push
ss
aad
jnp
fwait
and
or
lods
clc
pop
push
cltd
cs
bound
in
cmpsl
aam
stos
stc
subl
out
mov
les
cmp
out
in
mov
mov
push
inc
es
and
add
cwtl
push
outsb
jl
inc
cld
fsubl
rorb
mov
dec
xchg
dec
xchg
mov
xchg
sti
adc
add
cmp
mov
mov
xor
mov
jg
xchg
pusha
je
sub
xchg
sub
sti
adc
inc
dec
repnz
and
mov
outsb
add
call
call
or
lea
dec
mov
and
adc
jns
sub
and
push
movsl
daa
imul
pop
mov
cltd
mov
lret
test
out
push
ret
lds
inc
push
imul
push
cmp
jnp
loopne
aad
mov
jno
push
popf
cltd
mov
add
and
lea
inc
out
xchg
xor
inc
push
sub
fs
sar
sub
sub
cld
fidivl
ds
arpl
jge
dec
mov
jl
ret
pusha
or
cmp
mov
lods
push
pop
cli
inc
aam
xor
mov
inc
andl
in
cmp
xor
lock
ljmp
ret
pop
int
adc
and
lret
push
std
add
daa
sbb
sub
add
jp
push
rcl
scas
push
repz
dec
fstps
scas
fidivl
ja
mov
add
std
fidivrs
loopne
mov
jbe
sbb
jp
mov
js
pushf
mov
and
es
sarl
jecxz
mov
mov
lret
pop
das
scas
xchg
add
xchg
push
and
jmp
mov
in
sbb
push
xor
cltd
xchg
adc
sub
inc
in
icebp
xchg
cs
dec
fs
mov
les
into
std
sub
pushf
pop
out
cmc
push
cmp
into
sub
aas
sbb
inc
push
sbb
and
stos
cli
cmp
jl
inc
fwait
push
mov
xorl
jo
push
push
ret
testl
cld
shr
dec
push
movsl
shlb
mov
jns
sub
lahf
cmpsl
dec
mov
repz
inc
testb
push
sub
popf
ja
lods
xor
adc
ljmp
jge
mov
andl
and
or
adc
mov
jp
and
sub
outsb
mov
add
inc
filds
sarl
cwtl
sar
orb
xorb
add
push
mov
imul
cld
pusha
xchg
dec
lea
mov
cmp
cwtl
sbb
cwtl
push
subl
fiaddl
push
arpl
push
push
push
or
addr16
lahf
sti
mov
adc
aam
inc
mov
cmpsb
push
jae
mov
int3
cmpsb
mov
int3
push
insl
ja
push
and
jns
loop
cmp
adc
je
or
cmc
cmp
sub
std
push
mov
scas
push
jne
out
loope
adc
push
enter
xor
xor
outsl
cli
pop
push
lods
jmp
mov
out
sbb
cmc
add
adc
sbb
ljmp
add
jno
dec
xor
sub
je
mov
jae
jp
ja
fiaddl
lods
dec
sub
in
cwtl
cld
cmpsl
loope
dec
leave
cmp
orl
cltd
loopne
sbbl
icebp
insl
push
mov
ret
mov
pop
into
mov
lock
xchg
fdivl
and
pop
call
es
add
addr16
xchg
xchg
jg
arpl
into
ljmp
mov
ljmp
jle
out
orb
mov
sbb
add
jp
lret
and
jne
push
popf
xor
or
mov
ja
sahf
popf
sbb
dec
mov
movsl
cwtl
rcl
aad
lcall
mov
xchg
add
jnp
enter
test
popa
outsl
jne
inc
lret
loop
shrl
lret
xchg
aam
nop
sbb
sub
jmp
sbb
mov
aas
rolb
test
fs
inc
sub
mov
jbe
mov
mov
int
sub
xchg
lea
or
or
cmpsl
adc
int3
lcall
test
movsl
jge
xchg
and
in
cmpb
orl
test
jecxz
push
mov
fstpl
push
sahf
outsl
cmp
es
sbb
jnp
mov
daa
leave
jb
lea
mov
add
decl
jns
mov
stos
push
inc
pop
mov
inc
or
stos
test
add
xlat
lea
lret
push
mov
cmp
mov
ffreep
pop
push
push
loop
arpl
sbb
bound
xchg
mov
add
pop
pop
loop
ja
andps
cmc
jl
lods
jge
mov
pop
or
inc
fcompl
xor
dec
mov
jae
cmc
xor
inc
jns
push
ret
ss
cltd
mov
mov
sub
mov
fsubl
cmp
add
stc
pop
dec
mov
xchg
jmp
insb
xchg
mov
pop
inc
or
or
cwtl
mov
add
outsl
cmp
outsl
imul
xor
adc
xchg
lahf
nop
jno
shlb
jb
fmull
sub
cmp
loopne
mov
pusha
mov
cld
and
inc
iret
cld
popl
jl
mov
or
daa
mov
mov
or
xchg
imul
mov
sbbb
ss
test
jae
and
ror
int3
push
jge
pushf
jae
lahf
in
sbb
sbb
or
pushf
aaa
adc
addr16
mov
stos
dec
cmp
imul
adc
inc
pop
lods
mov
mov
xchg
push
inc
push
push
mov
push
mov
fimuls
fsubrl
iret
out
xchg
imul
dec
dec
sub
add
or
inc
in
push
mov
movsl
pop
incw
inc
adc
lods
dec
lea
rcl
fiaddl
icebp
mov
jns
dec
xchg
and
ret
mov
xchg
sbb
lahf
mov
fwait
and
into
jo
cld
mov
lcall
les
test
das
arpl
stc
or
lock
cmp
xor
xor
repz
dec
xchg
pop
aam
cmpb
push
subb
xor
sbb
int
push
sahf
ret
fidivs
sub
nop
mov
arpl
in
jne
push
fmuls
bnd
sbb
test
ss
movsb
cwtl
cmp
mov
xchg
sub
in
clc
rcrl
mov
or
mov
mov
movsb
dec
fsts
jb
mov
mov
sahf
pop
mov
inc
xchg
dec
pop
mov
dec
lods
add
repz
mov
test
sbb
fmul
push
pop
add
add
mov
or
add
jp
test
push
les
push
inc
std
stos
cmp
jns
popf
mov
and
mov
aad
xor
add
xchg
push
jbe
leave
pushf
or
repnz
sti
addb
sbb
repnz
scas
out
mov
roll
add
cmp
jno
pushf
rep
xchg
lds
xchg
or
add
mov
mov
inc
push
lock
mov
in
je
in
sub
iret
push
and
xor
push
hlt
and
popa
lods
ret
pop
scas
or
int
mov
int
mov
out
aad
add
mov
call
jle
lret
dec
adc
adc
xchg
adc
add
es
repz
lods
cmp
inc
and
sbb
lahf
sbb
arpl
push
jecxz
and
mov
dec
pop
jp
xor
fmul
imul
lods
cmp
in
push
mov
sub
cld
cmp
movsl
mov
ja
cmp
adc
jo
or
stc
ret
jno
jp
and
ficompl
xor
push
and
leave
sbb
mov
dec
and
orb
pop
jge
popf
pop
loop
jb
adc
pusha
mov
mulb
pop
repnz
jo
cmc
sti
mov
mov
adc
adc
pop
push
push
cmp
into
mov
lods
mov
stos
ja
icebp
and
loopne
dec
adc
jp
add
bound
jg
mov
mov
inc
push
push
mov
ja
rcll
adc
cmovle
imul
jb
dec
sbb
push
imul
daa
lea
add
xchg
sbb
xor
cmp
subb
mov
divl
sbb
dec
out
mov
or
mov
repnz
and
xchg
lahf
inc
fs
int
call
imul
in
adc
jp
rclb
mov
jmp
and
ss
ss
xchg
sub
fnstsw
pop
hlt
inc
add
xor
sub
fs
pop
jge
sub
inc
push
sbb
notb
pop
aas
jo
shl
jne
sti
mov
adc
test
dec
jbe
in
lcall
cwtl
xor
ficomps
sarb
mov
clc
sub
rcrl
lock
leave
mov
shll
sbb
cmp
dec
or
int
jge
sub
inc
mov
push
cmpsl
incl
ss
cmc
push
enter
pop
mov
loop
nop
dec
and
in
rcrb
mov
xor
cmp
mov
cli
xor
xchg
hlt
pushf
mov
jle
ja
pop
call
mov
sarb
decb
adc
cltd
addr16
push
arpl
adc
sub
sti
adc
mov
fcoms
mov
dec
mov
mov
and
push
xor
cld
cs
sbb
xor
and
lds
sub
jno
mov
xchg
mov
js
cmovae
aaa
mov
pop
add
xchg
push
sbb
ja
mov
jb
mov
and
sbb
add
pop
inc
push
push
stc
inc
mov
push
sti
sub
xchg
jno
jmp
sbb
and
in
int
sbb
push
sbb
inc
cmp
xor
cld
xchg
popf
cmpl
mov
pop
cmpsb
dec
adc
adc
das
xchg
inc
adc
inc
and
bound
adc
pushf
mov
hlt
aaa
aaa
xchg
in
lcall
pop
and
repz
les
mov
das
imul
lret
lods
inc
jle
jp
or
lahf
mov
sbb
jg
scas
mov
pushf
outsl
xchg
cli
aas
jmp
ja
cmp
xor
mov
fdivr
sub
dec
mov
call
fistpl
lock
pop
or
cltd
xorb
add
arpl
jns
mov
push
sti
pushf
aad
mov
sub
xor
sti
stos
xchg
fucomp
incl
add
and
push
leave
sti
mov
dec
movsl
out
sahf
pop
mov
fisubs
mov
dec
or
push
outsl
pop
inc
sub
jnp
or
and
push
in
xor
aaa
xchg
mov
lret
movb
dec
xor
sti
out
test
mov
and
loop
sub
or
lcall
mov
repz
rorl
ja
jbe
stos
cli
fdivrs
and
push
loope
cmpb
jo
aas
jae
repnz
mov
mov
in
sbb
mov
jo
hlt
sub
pop
mov
inc
push
lret
xor
gs
cld
gs
or
movsb
in
loopne
out
xlat
xchg
push
mov
push
xchg
sbb
shrl
sti
push
stc
mov
je
mov
rorl
cmp
popa
xor
cltd
lea
xchg
mov
mov
push
out
inc
lea
js
cltd
sub
sub
int
testb
pop
idivl
adc
pop
xchg
xchg
lret
add
jge
inc
lock
mov
popa
add
es
lcall
es
nop
push
adc
lods
pop
sbb
jmp
out
int
int3
int
mov
loop
jae
xorl
or
and
mov
mov
pop
test
repz
cmp
imul
loope
sub
leave
enter
cld
add
mov
or
sbb
shrl
stos
imul
xchg
cmpb
mov
ljmp
repnz
scas
addl
rcrb
insb
pop
cmp
fidivs
fildl
rolb
mov
out
incb
pusha
xor
cmp
popa
mov
lock
xchg
fadds
test
rclb
push
xor
je
icebp
mov
mov
imul
in
outsl
or
dec
add
pop
inc
push
and
push
dec
rclb
loopne
fisttps
cltd
inc
sti
mov
inc
mov
mov
adc
sbb
fcomp
rcrl
push
icebp
mov
mov
outsl
sbb
xor
xchg
subl
mov
clc
or
das
sahf
xchg
jl
and
arpl
lea
das
mov
in
cmp
test
dec
int
insl
stos
pusha
pop
inc
mov
cmpsb
xor
mov
pop
je
repz
lahf
cmp
pop
mov
es
xchg
dec
clc
xchg
pushf
xor
xor
cmp
shrl
fcmove
ret
jp
xchg
ret
mov
lcall
stos
cld
dec
jne
das
mov
mov
push
rorl
push
and
mov
rcrl
jae
mov
dec
sbb
sub
out
addr16
xchg
repz
cltd
cmp
xchg
cmpsl
loop
mov
ljmp
pop
inc
xchg
ss
inc
mov
jo
xchg
lret
jbe
xchg
lahf
pop
jne
cmpsl
loop
bound
dec
out
mov
sub
in
xchg
imul
xchg
and
jl
xchg
nop
stos
xchg
andb
dec
lcall
cli
mov
jg
and
sbb
cmpb
adcl
dec
dec
cmpsb
out
xlat
cmpsl
mov
or
aam
cmp
mull
out
rorb
cwtl
popf
lea
and
sti
fcomp
test
shr
xor
test
add
push
add
icebp
pop
cltd
jge
mov
dec
pop
cli
js
jno
sarb
call
adc
sub
sub
push
stc
outsb
push
cmp
rep
loope
mov
in
sbb
out
lods
lods
and
outsb
and
sbb
inc
add
repnz
push
cli
ljmp
mov
out
test
mov
mov
sbb
push
in
loopne
cmpl
inc
lock
jmp
xchg
cmpl
sub
imul
and
cmc
pop
fsubs
push
or
lock
cli
test
arpl
cwtl
jmp
xchg
outsb
xchg
mov
cmpb
xchg
lea
adc
into
mov
mov
mov
or
test
and
pop
jmp
add
lods
pop
sbb
dec
psrlq
pop
cmc
gs
fs
adc
pop
repz
jmp
sarl
pop
pop
xor
or
test
push
jle
mov
or
rorb
dec
or
out
pop
orb
andl
loopne
pusha
push
adc
std
or
push
pop
out
test
arpl
mov
push
lcall
stos
sarl
test
or
scas
ud0
push
sti
mov
fcomps
xor
pop
jmp
mov
popf
jge
fsubrs
pop
mov
jecxz
mov
sub
lock
inc
es
dec
mov
xor
pop
pop
xor
and
insb
push
ficomps
mov
and
ja
pushf
dec
repz
lahf
dec
jecxz
in
stos
test
call
jne
adc
incl
add
and
and
ret
rorb
xor
outsb
movsl
push
lahf
push
movsb
xor
dec
bound
int3
sbb
scas
inc
cmp
jo
jecxz
rcrl
ja
jp
jae
adc
out
and
xchg
and
fmuls
inc
pushf
and
bound
jne
ror
ljmp
xchg
mov
dec
lods
push
dec
push
sbb
loopne
mov
loop
mov
sub
inc
mov
sub
jae
mov
or
mov
dec
nop
cmpsb
test
es
jp
mov
out
in
mov
jae
ss
mov
loope
mov
fwait
sub
inc
lock
popf
dec
lods
dec
rorb
mov
push
pop
lcall
lcall
pop
out
rorb
test
push
add
hlt
addb
sub
and
xchg
xchg
fsubrs
andl
add
xchg
xor
cwtl
xor
inc
into
sub
andb
push
lahf
pop
pop
loope
dec
fucom
lret
inc
inc
mull
xchg
xorb
out
rorb
jle
or
imul
add
mov
arpl
inc
scas
lret
push
movsl
inc
gs
cltd
jge
jp
sbb
dec
test
and
pop
out
sbbb
loop
lods
xchg
jb
subl
fsubr
ljmp
jmp
cmc
aam
add
lods
jp
test
std
sbb
pusha
fdivrl
mov
out
jne
sbb
cmpsl
loopne
cmp
cmp
dec
clc
add
xchg
dec
mov
aad
add
mov
pop
enter
sub
aaa
frstor
xchg
shrd
ss
push
outsl
or
sub
aas
sbb
fmull
in
mov
add
scas
xchg
jns
mov
mov
xlat
adc
push
xchg
call
xchg
test
mov
or
test
sbbl
lods
xchg
sbb
test
or
scas
adc
pop
xlat
and
jo
inc
mov
gs
cmp
fists
call
mov
ljmp
push
mov
jae
outsl
cmp
out
lret
sbb
sub
ss
mov
sub
jl
mov
dec
push
mov
mov
adc
mov
pop
lock
jns
bound
aad
jnp
lock
aam
add
and
xorb
int3
stos
jnp
arpl
loope
pop
and
inc
pop
fisubrl
int
cmpsb
daa
push
popa
aaa
jae
lock
mov
sub
dec
push
and
adcb
dec
cltd
or
imul
jmp
mov
fcmovne
popf
jl
sti
adc
cmp
jns
sub
call
lahf
jg
mov
fldcw
fcoms
jns
lods
and
icebp
xor
scas
xchg
lret
pushf
mov
push
or
aas
jnp
inc
xchg
push
adc
inc
xor
cmpsb
std
movsb
call
pop
loop
pusha
dec
bound
pop
push
mov
xchg
mov
add
sbb
cmp
iret
aam
xchg
add
mov
test
insl
les
jmp
add
imull
xchg
push
data16
sbb
scas
aas
xchg
fnstsw
jb
add
mov
mov
icebp
fsts
sbb
repz
xor
adc
lods
mov
inc
test
rorb
mov
push
imul
in
and
mov
in
mov
sub
test
lock
arpl
pop
add
sub
sub
push
push
sbb
sti
xchg
sub
sbb
jbe
inc
xchg
inc
jle
mov
data16
popf
fsts
scas
sub
dec
mov
push
repz
cmp
mov
or
addl
aaa
inc
lret
insb
aad
dec
fs
inc
cmp
xchg
mov
daa
fs
cmp
xor
rorl
mov
mov
pop
jb
pop
stos
xchg
add
dec
mov
insb
inc
xchg
adc
imul
std
sub
divb
insl
push
imul
sbb
xor
aam
xchg
filds
icebp
pop
push
shll
dec
shl
xchg
mov
movsl
adc
cmp
stos
out
test
gs
pop
test
and
mov
stc
pushf
data16
cmp
mov
push
push
nopl
mov
jae
push
adc
inc
std
mov
jne
push
clc
fbld
mov
lahf
rorl
pop
pop
clc
adc
loope
imul
jle
fs
idivl
std
pushf
dec
xchg
aam
add
sbb
jg
push
cmc
mov
int
into
out
shll
loopne,pn
mov
mov
sub
sub
psubsw
push
incl
lods
aas
add
sbb
push
dec
rclb
cmc
dec
dec
sub
and
xor
fisubrs
ja
mov
mov
adc
outsb
shlb
inc
xchg
inc
mov
bound
std
or
ljmp
or
imul
int3
mov
mov
mov
push
arpl
inc
nop
comiss
loope
fisubs
lea
gs
cmc
or
sub
inc
movsl
int
daa
stc
fstpt
xchg
out
add
cmpsb
mov
mov
sub
adc
insl
add
mov
push
push
nop
test
push
mov
clc
scas
aad
adc
ja
sbbb
xchg
aam
jg
jo
add
jb
stc
pop
add
out
idivl
scas
pop
aam
jecxz
jle
pop
stos
mov
mov
cwtl
loopne
and
jnp
add
or
sar
ja
push
add
sub
mov
xor
outsl
in
add
jnp
outsl
outsb
push
sahf
je
mov
jp
roll
outsl
sub
dec
pop
push
adc
int
js
sub
add
adc
notl
push
fs
jo
test
mov
push
pusha
xchg
shll
adc
mov
test
xchg
cmp
adc
jbe
push
rclb
cli
aam
es
lcall
shlb
cld
push
add
push
vandps
mov
xor
not
mov
out
dec
int
and
mov
jge
pop
repz
outsl
mov
rolb
mov
xor
xchg
int
shl
data16
mov
cmp
loopne
push
ja
pop
xacquire
popa
lods
push
inc
int
je
push
test
jnp
xor
sub
arpl
push
dec
fmull
mov
stos
test
jnp
sub
jl
cmpsl
push
xchg
in
mov
mov
mov
add
sbb
sbbl
movsl
inc
ljmp
add
dec
mov
mov
xor
dec
adc
pop
clc
lods
adc
mov
int3
jbe
repnz
lea
nop
scas
ja
lahf
stc
scas
int
in
std
mov
jbe
mull
orb
inc
jnp
cwtl
imul
jo
out
jecxz
movsl
mov
loope
mov
pop
pop
outsb
sti
sub
pop
pop
adc
lods
or
les
push
cmp
or
or
repz
adc
cmp
pop
fnstcw
seta
data16
loope
cmp
push
stc
mov
push
mov
loopne
jge
leave
jmp
jne
push
pop
fnsave
or
xorl
cwtl
mov
xchg
pop
mov
loop
pushf
adc
cli
inc
in
loop
mov
frstpm(287
push
mov
push
dec
adc
mov
stos
dec
inc
dec
mov
aam
xchg
push
call
orb
pop
xchg
shrb
hlt
push
push
push
xchg
lods
dec
lock
sti
test
mov
je
inc
mov
int
cvtps2pd
stc
sahf
jae
std
sarl
lret
add
sub
sbb
cmpsb
mov
insl
lahf
insl
inc
mov
mov
and
push
mov
push
add
es
out
lahf
int
cltd
xor
jbe
and
cmp
push
das
pushf
pop
test
push
dec
pusha
lahf
dec
paddw
popf
out
sbb
faddl
rorb
nop
xor
call
sarb
jno
xor
dec
lds
xchg
or
or
fnstsw
cmp
into
out
fs
loop
shlb
adc
imul
xor
jmp
nop
lods
repnz
leave
pop
xor
jb
inc
aad
js
lods
fimull
jle
or
outsb
insb
xlat
cmp
mov
stos
or
in
gs
cmp
mov
es
mov
or
movsl
lcall
xchg
cmp
icebp
push
es
ja
dec
mul
lahf
sub
cli
aas
sub
cmp
jo
dec
sub
mov
xchg
mov
sarb
mov
daa
xchg
aad
xchg
xlat
stos
pop
push
adc
jne
movsb
enter
ficoml
imul
cmc
sub
mov
ret
inc
andl
ljmp
clc
into
push
and
out
mov
sub
pop
daa
xchg
mov
jno
push
mov
loop
sub
jp
js
xor
push
and
mov
sub
mov
or
fcompl
and
push
inc
push
cmp
mov
push
xchg
stc
imul
push
sub
shr
inc
cmp
ds
repz
sbb
fscale
in
ds
or
add
or
enter
fistl
mov
adc
addr16
jle
aas
fxam
lahf
sub
sub
and
enter
mov
mov
sub
pop
mov
jecxz
fisttpll
cltd
dec
push
push
dec
cmc
jnp
inc
adc
inc
fucom
rclb
sub
popf
shrb
sti
add
sbb
sbb
in
out
cmp
pop
in
sbb
insl
in
insl
jnp
ljmp
xchg
mov
imul
push
lea
int
movsb
mov
cmpsb
insb
cwtl
loop
iret
std
jae
push
xchg
sub
push
and
inc
nop
pop
stos
outsl
xlat
orb
sarl
addr16
sbb
mov
std
aad
fimuls
cli
mov
add
and
sbb
roll
push
jae
mov
inc
pop
push
add
sbb
js
je
fsubr
add
arpl
xor
cmp
jmp
mov
mov
xor
pushl
pop
subb
rcr
aad
push
xor
ret
das
cmp
lret
mov
dec
dec
xchg
in
in
ss
sub
or
loop
inc
adc
mov
das
push
xor
push
test
sbb
loop
xor
test
cmp
inc
add
repz
lcall
mov
imul
js
xor
clc
cld
sahf
inc
sbb
pop
scas
push
mov
mov
leave
adc
mov
pop
push
xorl
lods
pop
add
rcrl
dec
lds
fdiv
into
repnz
fsubs
fnstsw
inc
adc
fdivrl
add
or
push
adc
test
or
cld
xchg
push
fdivrl
aaa
xor
jbe
or
jmp
loopne
sbb
pop
pop
setle
int3
fdiv
mov
daa
cmp
mov
and
cs
mov
mov
ja
shr
imul
repnz
es
mov
pushf
mov
jp
int
in
jl
or
fimull
or
shrd
repz
call
pusha
daa
inc
pop
cwtl
cmp
mov
flds
ficoms
mov
mov
arpl
shlb
fucomp
jo
xor
and
into
in
les
or
out
imul
jnp
jl
stos
inc
fstl
mov
adcb
aas
imul
leave
in
iret
push
in
inc
sbb
mov
or
inc
arpl
mov
xchg
xchg
cmp
sub
fwait
sub
mov
insb
enter
mov
adc
and
stc
mov
sub
pop
or
or
rcl
sub
shll
fildll
mov
mov
pop
mov
in
shll
jle
mov
mov
aas
iret
in
je
stos
call
push
stos
out
bound
push
enter
jae
popa
cmp
adc
lock
jge
ret
icebp
sti
jmp
jl
dec
xchg
repz
push
mov
lds
pop
std
je
dec
cmp
test
cmpsb
and
inc
and
inc
into
mov
idivb
sub
mov
sbb
int3
push
jecxz
push
into
andl
adc
dec
mov
fwait
rol
pop
icebp
or
mov
lss
sbb
inc
adcb
aas
xor
bnd
jg
xlat
cli
adc
mov
xor
cmp
dec
xchg
iret
std
mov
int
sbb
mov
and
in
sarb
dec
int3
lock
mov
mov
xlat
iret
pop
cmpsb
lods
sbb
and
stc
lret
out
push
push
sbb
jle
iret
popf
aas
pop
mov
push
scas
js
into
test
addr16
jl
push
nop
xchg
shll
cltd
enter
and
int
sti
adcb
or
out
int
cmp
sub
lret
scas
inc
mov
sbb
cli
loope
dec
test
xchg
and
cmpsl
xchg
push
or
inc
add
xchg
dec
or
repz
mov
fisubrs
popa
jbe
insl
and
xchg
mov
ja
pop
jo
fistpl
cmp
shl
and
ret
cwtl
ret
jns,pt
ret
sub
pop
lahf
cli
ret
or
cmp
pop
mov
add
pushf
loopne
add
and
cmp
or
hlt
fs
xor
inc
or
roll
and
inc
adc
in
mov
jge
fs
or
adc
lods
cmpsl
pop
xchg
sbb
add
sub
dec
and
mov
repnz
mov
pop
mov
loopne
cmp
or
inc
inc
decb
icebp
xor
ss
sti
inc
clc
or
lods
jns
cmpb
cmp
inc
mov
cwtl
sti
cmpsb
aam
pop
in
sbb
test
cmp
jecxz
fistpl
lds
dec
cs
add
ror
mov
popa
inc
outsb
js
sbb
in
rolb
push
jmp
jle
fnsave
mov
daa
ret
xchg
inc
push
push
fisubrl
in
lret
cmpsl
or
xchg
aas
mov
lds
nop
xor
jo
jnp
mov
sub
fsubrl
mov
fsubrs
clc
sub
cld
mov
inc
cmp
cmc
scas
mov
das
ds
push
lcall
inc
lods
movsb
add
lcall
adc
xchg
loop
lcall
xor
push
xor
shrl
in
or
in
out
gs
adc
dec
loopne
je
aam
dec
scas
test
sbb
enter
cmc
mov
arpl
pop
jmp
dec
test
insb
mov
adc
push
xlat
dec
stos
xor
jbe
lret
sub
jno
decb
cmp
adc
jb
or
mov
shlb
fdivrs
call
cmp
in
mov
fdivl
cmp
les
cmp
inc
lret
inc
sti
leave
movsl
pushf
int
mov
lahf
mov
jmp
movsb
inc
mov
fldl
shrl
cmp
cmp
outsl
std
sub
out
fsqrt
cwtl
jmp
add
dec
and
xchg
cmp
in
scas
test
fsubrl
nop
movsb
stos
leave
jae
mov
aam
xchg
pop
cli
sub
mov
dec
fidivl
test
sub
and
jle
jb
add
pushf
frstor
stc
loopne
js
dec
push
cwtl
fnstsw
icebp
filds
arpl
sub
cmp
cmp
out
jge
xchg
test
mov
hlt
sbb
enter
lret
push
dec
xchg
mov
femms
mov
fisubl
jnp
jno
mov
cmc
dec
mov
in
out
and
pop
fwait
addr16
addr16
rcrl
dec
imul
pop
test
cmp
jp
mov
xor
fcomi
cmp
add
xchg
call
push
negb
rolb
outsb
aam
ljmp
pop
or
negl
loop
or
cwtl
xchg
dec
es
jle
mov
out
add
fwait
dec
or
cmp
insb
push
cwtl
test
mov
rorb
movsb
shrb
test
in
dec
pop
jg
daa
push
dec
pop
dec
pop
or
sub
pop
movsb
inc
shrb
adc
xor
dec
xchg
push
test
movsb
loopne
in
xor
mov
dec
js
fs
test
inc
sbb
out
lcall
fwait
adc
cld
dec
shrl
sbb
aad
mov
cmp
mov
addr16
icebp
int
leave
add
mov
jp,pt
cs
mov
inc
es
adc
ss
and
cmp
pop
mov
adc
js
add
fucom
int
push
lods
dec
repnz
jne
dec
loope
adc
push
pop
dec
sub
int3
mov
mov
fwait
and
mov
lret
jnp
enter
push
hlt
cmp
aad
jno
push
mov
mov
daa
push
lods
cmp
sahf
mov
dec
or
roll
fstpt
adc
inc
cli
add
pop
sarl
pop
mov
enter
mov
sbb
xchg
add
jnp
out
rcr
ds
jmp
fistpll
das
lea
sub
int3
sub
xlat
cmp
adc
or
add
imul
mov
xchg
testl
les
stos
outsb
xchg
mov
into
fs
adc
sbb
mov
mov
jmp
testl
insl
fidivl
sarb
push
jbe
repz
mov
icebp
pop
jae
daa
das
mov
cmp
inc
xor
cs
daa
imul
xchg
fwait
dec
dec
and
xor
cmp
xor
lea
test
and
lea
test
or
movsb
jge,pn
insb
jbe
mov
nop
shll
or
aas
shr
push
shr
into
jae
xor
les
or
jnp
jl
daa
int3
icebp
pop
cwtl
push
sahf
dec
mov
stos
mov
ds
dec
rol
dec
xchg
divb
iret
pop
push
sub
dec
adc
mov
push
sub
adc
roll
fistpl
sti
mov
pusha
push
ds
inc
fucomi
mov
rorb
push
imul
pop
mov
pop
popf
pop
inc
pushf
push
jbe
xor
dec
sbb
xor
or
mov
jle
mov
lods
into
or
cmp
cmp
lds
cld
pop
mov
repnz
insl
mov
sar
cmp
mov
mov
mov
icebp
fcmove
sub
pop
inc
cli
or
in
cld
push
xor
xchg
or
test
mov
addb
cmc
adc
jo
adc
out
mov
fdivrp
push
lods
cmp
and
jns
cmp
gs
xlat
mov
nop
dec
push
shl
pop
xor
sub
movsb
stos
xor
aas
dec
je
sahf
dec
mov
xor
dec
int
mov
or
cmpsb
adc
sbb
jl
arpl
std
and
and
test
pop
dec
icebp
mov
js
mov
push
inc
push
nop
pop
or
pop
enter
int3
xlat
mov
add
ja
std
out
lret
sub
orl
jns
mov
popf
push
cmp
pop
cmpsl
int
dec
inc
mov
sarl
dec
mov
jnp
sub
pop
cmc
push
mov
test
xor
cmpsb
incl
test
mov
mov
std
push
and
dec
add
cld
push
xchg
sarb
dec
stos
push
xlat
adc
daa
sbb
orb
add
xchg
pop
ds
lea
sub
cmp
dec
and
out
sbb
outsb
and
xor
jb
lahf
testb
pop
lea
jle
mov
rorl
xor
sbb
imul
dec
and
adc
cmc
xor
cmpb
addb
add
loopne
lret
sbb
int
dec
sbb
sbb
jnp
lcall
push
xchg
add
sbb
pushf
cli
sbb
jns
pop
dec
jb
insb
ret
adc
pop
mov
repz
push
mov
mov
fcmovnbe
loope
test
mov
das
out
jb
or
mov
cmc
movsb
pop
sahf
cld
int
and
cmpsb
jbe
cli
jae
adc
andb
and
fisttpll
ret
mov
gs
nop
push
js
mov
and
push
fistps
pop
add
mov
rcll
mov
cmp
xchg
jno
cwtl
jp
cwtl
jle
mov
dec
dec
pop
ja
test
pop
sbb
movl
xor
fistps
push
int3
cmp
stc
fimuls
stos
jl
data16
sti
or
or
adc
mov
loop
fs
inc
add
push
in
dec
lcall
outsb
jg
shll
enterw
jecxz
jp
ja
lret
adc
in
push
jp
or
mov
push
sbb
insb
les
and
ljmp
mov
mov
cmp
mov
lods
dec
jbe
les
mov
push
sub
xor
movsl
mov
jno
adc
pop
or
shrb
sbb
dec
mov
dec
sbb
frstor
movsb
call
mov
jmp
push
jl
call
notl
subl
lods
insl
sar
or
pop
inc
pop
mov
aas
fcomp
fcmovnb
clc
add
mov
mov
clc
notb
push
add
into
cmpsl
cmc
ret
js
lds
mov
testl
cltd
cmp
push
cmp
fisttps
frstor
push
cmp
sub
ss
jb
dec
sahf
mov
cld
xchg
ljmp
shr
push
js
or
aas
loop
es
inc
pop
adc
pop
cmp
xlat
mov
bound
jb
push
push
call
mov
push
inc
scas
cmp
xor
mov
mov
cwtl
mov
pop
push
mov
mov
inc
mov
sbb
push
movsl
pop
add
sub
sub
shl
sub
cmpsl
adc
dec
jmp
fucomp
push
adc
pop
push
xor
imul
lcall
adc
insl
adc
add
std
fwait
stos
sub
rolb
mov
je
mov
sbb
xchg
inc
andb
test
jnp
out
xlat
loop
movsb
push
stos
fildl
adc
dec
test
je
mov
mov
sbb
ss
cld
xor
push
sahf
roll
in
sbb
test
lret
pop
insl
cmp
outsb
cmp
imul
es
mov
bound
mov
ficompl
sarb
sahf
and
shll
les
cmp
and
sub
aam
loop
push
mov
fcoms
and
mov
data16
push
punpcklwd
jl
jb
scas
adc
fadds
es
mov
mov
mov
inc
sbb
loope
insl
sub
add
mov
jl
dec
imul
and
enter
xchg
lock
aam
je
add
pusha
pop
inc
pop
jne
push
test
data16
push
mov
loop
jge
pop
and
jb
or
out
push
add
ss
mov
add
addl
popa
xor
xor
jge
fcmovb
ret
mov
enter
fs
xchg
std
hlt
sahf
sbb
dec
xor
mov
push
cmp
dec
jmp
arpl
and
add
xor
lcall
ss
clc
test
das
icebp
mov
and
dec
inc
int
pushf
test
xor
in
and
in
aam
or
shrl
adc
and
pop
xchg
jecxz
fs
sbb
jl
lds
pusha
push
inc
mov
je
dec
mov
pop
dec
pop
in
dec
not
imul
pop
lods
adc
mov
clc
sbb
jmp
shrl
cmc
aas
mov
mov
inc
dec
pop
test
sti
popf
out
pop
fidivs
push
or
sub
and
jo
cmp
outsl
inc
inc
xor
push
aam
or
add
dec
xchg
push
mov
push
mov
xchg
cmpsl
movsb
dec
xor
out
ja
sahf
out
mov
pushf
cmpsb
fcom
xor
dec
mov
outsl
outsl
cmp
mov
test
sbb
mov
and
testl
fdivrl
adc
sbb
cmp
jmp
add
pushf
push
xor
xchg
xchg
dec
pop
sub
mov
jecxz
cmpsl
loope
dec
popa
pop
pop
fisttpll
mov
inc
push
cld
mov
cmp
cs
orb
insl
das
cmp
cwtl
jp
mov
mov
cld
std
movsb
repz
xchg
negb
fstpl
sub
mov
movsl
ja
arpl
dec
repnz
repz
jmp
inc
scas
pop
out
int3
pop
popl
add
mov
push
mov
and
mov
cwtl
das
inc
sbb
lock
sub
mov
nop
or
int
fsubs
xchg
mov
icebp
in
mov
rorb
fdivrp
or
popf
push
fildll
clc
enter
push
xor
in
movsb
into
stos
and
inc
mov
fwait
mov
mov
sbbb
jno
addr16
pop
mov
gs
ds
in
aas
iret
imul
adc
lret
dec
cmpsl
sub
aam
sbb
shl
fldenv
in
mov
mov
ljmp
mov
and
and
xchg
pop
cmp
or
loop
ret
fisubl
and
jbe
inc
push
setge
stos
sub
fidivrl
out
add
gs
enter
decb
push
call
inc
scas
adc
xchg
les
lahf
and
icebp
es
push
mov
push
sbbb
cmp
paddb
movsl
xchg
lea
pop
iret
push
mov
nop
int3
bound
stos
mov
jne
push
xchg
insl
jae
jmp
push
jo
sti
or
lods
cmp
aas
mov
xor
in
jne
nop
out
leave
and
mov
push
inc
mov
pop
out
xchg
imul
jecxz
mov
or
inc
in
mov
mov
imul
ffree
pop
ljmp
leave
cmp
insl
xchg
movsb
notl
ljmp
add
les
xchg
aaa
shrb
roll
outsl
js
adc
inc
push
xchg
jns
movsb
repz
mov
add
mov
inc
test
fisubs
jmp
sbb
dec
dec
out
das
adc
out
fdiv
or
pop
scas
mov
inc
out
enter
dec
loope
sub
and
push
mov
cmp
movsb
lods
int3
testb
icebp
popa
insb
stos
xchg
mov
into
cmp
mov
hlt
daa
inc
push
xchg
aam
jbe
dec
jbe
movsb
rorl
stc
xor
pop
in
int3
out
xchg
test
in
je
nop
lret
int3
push
fnsave
es
or
add
sbb
mov
gs
push
adc
dec
mov
outsl
dec
pop
sub
insb
mov
add
sub
pop
sub
or
xor
pop
shlb
push
and
imul
inc
pop
dec
and
or
push
mov
dec
jbe
fidivrl
pusha
mov
xor
mov
ljmp
pop
mov
popf
sbb
xor
push
mov
leave
pop
push
in
push
je
mov
dec
xchg
add
movsl
stos
clc
mov
js
sar
ja
cli
sub
cmp
xchg
cmp
pop
imul
mov
cld
push
scas
stos
pop
ja
imul
scas
jne
xchg
xchg
test
stos
mov
pop
sbbb
sahf
std
or
cwtl
push
and
cmp
xchg
mov
std
pop
and
inc
jle
xchg
lods
int
clc
or
xchg
stos
jmp
xor
ret
leave
subl
aad
inc
jno
movsl
loop
dec
or
adc
pop
je
int
inc
addr16
mov
mov
jge
js
insb
mov
imul
lahf
jecxz
jmp
cld
push
test
pop
and
aam
fdivr
sub
xchg
fwait
subl
jg
dec
xor
xchg
rcrl
es
jg
or
or
mov
xchg
into
mov
ds
pop
push
hlt
xchg
test
ss
out
fisubrl
or
mov
addl
movsb
sbb
ret
mov
ss
scas
scas
test
jl
popf
in
hlt
jl
push
and
lock
in
les
arpl
jmp
stc
sub
or
pop
mov
cmpsb
mov
loop
cltd
jb
inc
popa
leave
les
mov
addr16
ror
mov
andl
dec
sub
stc
les
lock
fdivs
jg
push
inc
insb
mov
insl
sti
sbb
inc
gs
cmp
lods
popa
cmc
pop
popf
outsl
fcoms
dec
cmp
xor
mov
xchg
pop
sarb
xchg
add
lods
dec
ss
lret
jnp
notb
cmp
fwait
ret
xchg
mov
jnp
ds
sbb
arpl
add
mov
or
cmpsl
xor
int3
sbb
nop
mov
pop
mov
xchg
adc
xchg
gs
sbb
pop
test
push
fdivrs
xchg
mov
pop
in
test
dec
mov
call
sbb
je
aaa
inc
mov
test
icebp
leave
mov
lods
mov
inc
fnstcw
mov
std
lods
cmp
sub
jno
or
push
xchg
pop
mov
xor
pusha
sub
mov
push
neg
test
outsb
daa
repz
push
add
xor
mov
and
jmp
fistps
divb
inc
push
mov
nop
xchg
data16
xchg
hlt
jge
push
sub
test
pop
gs
dec
dec
ljmp
stos
cli
dec
mov
in
push
fs
mov
out
pop
mov
fisttpll
icebp
int
std
pop
dec
cmpsb
xchg
sub
cwtl
mov
and
mov
jmp
jmp
jb
xchg
iret
imul
in
movl
jmp
lret
cwtl
arpl
mov
and
outsb
mov
mov
loop
mov
jne
mov
repz
xchg
cmp
iret
loop
loopne
xchg
inc
jl
push
mov
mov
and
sbb
faddl
add
imul
aaa
mov
adc
aaa
push
or
data16
mov
les
jle
inc
neg
xor
fwait
dec
fdivrs
cmp
cltd
dec
cmp
fistps
cmp
out
imulb
adc
ret
mov
xor
cmp
pop
test
jge,pt
hlt
pop
push
mov
sbb
in
adc
testb
rcr
scas
das
mov
add
dec
stos
enter
leave
or
mov
add
mov
cmp
sahf
ljmp
mov
js
imul
repz
stos
int
shlb
sbb
mov
lret
pop
xchg
call
cmpsb
cmp
sbbl
shlb
lods
jmp
in
loop
or
ss
icebp
nop
addr16
cltd
push
sbb
pop
jge
popf
aad
leave
lds
inc
imul
dec
popa
sub
pop
add
pushf
mov
sub
inc
pop
cmpsb
pop
sti
pop
lret
pusha
pop
inc
daa
cmp
aad
test
daa
inc
dec
pushf
lret
sbb
cmovge
and
push
notl
mov
mov
mov
jp
sahf
and
xor
add
xchg
push
aaa
lods
lods
addl
test
ljmp
sbb
popa
cmpsl
les
decb
sarb
lds
pop
jge
cmp
mov
pusha
sub
xchg
adc
shrb
jmp
mov
push
daa
in
es
xchg
ret
loopne
jp
xlat
mov
dec
fwait
pop
in
cmpsb
aad
lds
mov
sub
iret
mov
mov
mov
cmpsl
add
sub
pop
add
mul
or
mov
cmp
subb
mov
jno
add
lods
or
fistpl
loopne
andb
ret
addr16
lods
imulb
xor
xchg
pop
fstps
shll
repnz
lods
test
pop
or
clc
pushf
dec
cmp
and
and
pusha
subb
insl
push
dec
pop
sbb
adcb
aaa
pcmpgtd
loopne
mov
xchg
imull
xor
cmp
and
mov
push
inc
movsl
dec
movsl
and
dec
sbb
aaa
push
in
test
ds
sbb
lods
dec
sub
imul
mov
nop
cltd
andl
push
loope
inc
jo
adc
cltd
in
ja
pop
xor
push
loope
sti
ljmp
adc
icebp
lods
ja
push
pusha
mov
ljmp
fidivrl
fnstcw
popa
inc
xchg
jmp
jne
push
or
jmp
movsb
mov
cmp
out
repz
and
dec
dec
nop
imul
mov
not
lcall
icebp
rclb
mov
mov
inc
fcoml
imul
add
inc
popf
imul
xor
js
popf
iret
cmpb
pop
jl
aaa
ret
ja
cli
push
dec
mov
sub
xchg
push
shll
or
and
mov
push
mov
mov
inc
std
enter
and
and
adc
je
pop
movsl
fsubrs
cmp
jnp
pop
ret
imul
or
pushf
repnz
xchg
fwait
jl
ret
lock
xor
bound
ret
mov
mov
into
outsl
push
pop
loope
adc
dec
mov
arpl
mov
cli
cmp
cmpsb
adc
and
jle
sahf
fmul
in
xchg
testb
fildl
and
fwait
test
xchg
fwait
pushf
aad
dec
jne
push
push
mov
pusha
ret
out
js
dec
xchg
mov
popa
movsb
cltd
add
add
cmp
mov
js
das
movl
fistpll
pop
sbb
and
sti
pop
mov
sbb
aaa
pop
repnz
cmpsl
movsb
iret
mov
leave
ret
daa
mov
shl
jne
dec
jmp
and
sahf
movsl
aaa
adc
push
and
pushf
nop
cmp
xchg
lahf
fnstsw
pop
and
xor
pop
es
mov
adc
jbe
aas
fnsave
int3
test
xchg
pand
xor
and
dec
sub
add
pop
xor
out
jg
sbb
mov
movsl
fldl
in
pop
sbb
mov
sub
insl
call
adc
iret
rcrl
in
pop
fcoms
xchg
fcomi
jb
out
aam
lea
lea
add
sti
fldenv
lret
lcall
lods
lcall
and
outsb
mov
push
mov
push
inc
mov
jge
les
dec
enter
clc
pop
cli
pop
outsl
in
pop
cltd
cmpsl
pop
dec
xor
movsb
shlb
jg
stos
inc
mov
clc
jns
rcll
pusha
push
jnp
lcall
nop
mov
xchg
sbb
pop
cwtl
or
jns
test
test
lods
lods
enter
and
pusha
hlt
jno
push
test
shlb
jnp
add
sub
pop
test
jbe
mov
out
test
dec
pop
sub
mov
pop
mov
mov
push
mov
icebp
mov
in
dec
js
test
and
sbbb
push
xchg
es
sub
lcall
mov
mov
daa
jmp
lds
in
gs
or
mov
fisttps
mov
subb
lods
lret
sbb
inc
jnp
daa
add
mov
xchg
mov
xlat
cmpsb
fildll
movsb
lret
jl
and
repnz
or
jnp
and
fisttpl
push
aad
dec
xor
ljmp
test
enter
rcr
sahf
xor
je
mov
test
ret
adc
aad
fstps
sarl
cmp
ret
insl
fnstsw
nop
sti
sub
cs
ja
cltd
enter
lods
int3
dec
jle
adc
mov
mov
mov
in
xchg
fs
xor
lret
push
hlt
mov
aad
mov
incb
in
jmp
jecxz
xchg
mov
popf
jp
inc
cltd
xchg
cld
out
pop
pop
lret
cmp
out
aam
repz
data16
pop
inc
push
pusha
in
mov
into
scas
ljmp
mov
xchg
les
xlat
inc
cmp
cmc
pop
push
mov
fidivrl
push
imul
cld
adc
jne
xor
fidivl
stos
fwait
sub
xor
in
repz
popa
and
pop
fbld
or
lock
test
xchg
mov
test
inc
adc
inc
pop
dec
cltd
mov
frstor
andl
adc
out
mov
aad
sub
push
jb
jge
push
mov
sbb
in
std
clc
stc
rdpmc
loope
lods
xor
jmp
sbb
out
push
out
outsl
test
mov
adc
cmp
out
leave
jnp
aad
out
inc
test
pop
mov
push
mov
adc
push
jo
jo
add
fs
scas
xchg
add
xchg
lods
add
push
xchg
outsl
pop
xchg
or
int3
arpl
pop
pop
cmp
fsubrl
ret
mov
repnz
mov
ljmp
rcrl
mov
jb
xlat
add
subl
adc
dec
pop
sub
adc
lock
int3
add
jae
fdivl
sub
nop
add
shll
movsl
cltd
cli
sub
jmp
xchg
cli
xor
mull
out
mov
int
push
std
test
ds
idivb
and
adc
fyl2x
ret
nop
sub
popa
pop
xor
scas
mov
imul
std
iret
inc
push
inc
dec
loopne
faddl
inc
cmp
lods
or
mov
cmp
retw
out
addl
js
jecxz
out
sub
rcl
adc
pop
out
cmp
push
or
adc
addr16
and
add
sarl
loop
pushf
mov
loop,pn
cmp
sub
jmp
mov
mov
ljmp
into
loopne
sti
pop
rcrb
fs
pushf
mov
fsubrs
add
pop
daa
xor
jmp
dec
test
jnp
rorb
jp
dec
in
call
push
sahf
xor
jns
adc
and
inc
ret
inc
decb
inc
xorl
xchg
adc
out
loopne
outsl
xchg
adc
jne
int
inc
add
or
or
jecxz
mov
ds
scas
int
sbb
in
dec
in
pop
xor
pop
mov
push
data16
pop
adc
push
xorl
mov
cmpsb
xchg
outsb
mov
fcmovbe
push
fdivs
dec
das
bound
sbb
add
fnsave
xchg
iret
xchg
add
in
inc
or
repz
cmp
inc
fnstenv
mov
jns
fisubrl
test
popa
sbb
adc
andl
and
mov
sub
ja
inc
dec
jo
xchg
ret
push
sti
leave
test
shl
add
mov
dec
lods
inc
aam
into
hlt
addl
xchg
lahf
xor
fsts
lods
add
cwtl
inc
ret
lret
scas
cmp
adc
inc
adc
repnz
test
sbb
aam
incl
enter
movsb
inc
test
add
mov
sbb
sub
mov
sahf
pop
add
out
out
inc
mov
imul
out
lahf
gs
std
pop
inc
mov
dec
mov
cmp
sub
mov
movsl
xchg
fwait
adc
push
call
in
pop
stc
jge
pusha
std
mov
push
jge
sbb
mov
pop
popf
aaa
adc
xor
dec
xor
sbb
in
xchg
outsb
mov
add
inc
mov
out
add
lods
scas
filds
xchg
dec
push
shll
xchg
dec
test
xlat
test
mov
jb
pop
imul
ljmp
mov
inc
adc
pop
push
mov
cltd
push
mov
andb
in
and
fisubl
les
fnsave
xor
push
xor
inc
add
test
shrl
movsl
pop
stos
ja
inc
hlt
fisubrs
inc
lock
movsb
mov
movb
cld
leave
dec
cmp
ja
xor
dec
loope
cs
sbb
push
xor
xor
mov
aaa
in
inc
push
das
mov
aaa
lea
pop
xchg
fdivp
xchg
push
std
fcmovnbe
hlt
sbb
add
int
sti
jg
cltd
add
mov
sub
mov
pop
or
mov
test
mov
xlat
jl
cltd
aas
jmp
cmpsb
lods
sarb
scas
xor
icebp
test
and
and
nop
xor
ljmp
ja
mov
mov
dec
lret
push
and
or
daa
lret
js
ror
jns
stos
mov
mov
jno
adc
outsb
fiaddl
popa
lret
xchg
outsb
adc
mov
lods
inc
xor
cmp
adc
clc
cmp
xor
mov
pop
sub
packuswb
mov
sbb
mov
cltd
maxps
add
push
push
or
jl
xlat
xor
inc
imul
pop
hlt
pop
or
stc
and
jmp
pandn
mov
into
adc
into
iret
mov
hlt
cmp
add
push
aas
xchg
jo
stos
negb
negb
sbb
pop
push
daa
rcl
pop
sbb
pop
and
pop
pop
arpl
push
ljmp
orl
lcall
pushf
test
push
test
xchg
push
mov
jp
lds
push
sbb
mov
sub
lret
jecxz
insb
jns
jo
xchg
enter
sbb
ljmp
dec
out
add
sub
inc
sbbl
stos
or
xchg
dec
aad
mov
movsl
xchg
or
ja
sbb
sti
fisttpll
or
sub
jecxz
shrb
insb
pushf
push
mov
scas
push
push
insl
adc
fsubrl
fbld
cmc
bound
clc
popa
mov
mov
pop
repz
jns
jl
and
sub
mov
lea
fidivs
call
or
sti
ds
cld
fld
mov
mov
sbb
fs
bound
mov
ret
and
lods
lds
fcoml
xchg
inc
mov
push
cmp
in
xchg
ror
out
fsubrs
add
aad
mov
movsb
cmp
lret
and
roll
aas
and
testl
lret
cmp
mov
inc
das
push
loope
push
sbb
xchg
aaa
test
popa
jge
jne
cmp
icebp
imul
xor
inc
mov
stos
dec
inc
pop
xor
mov
mov
add
xor
les
stos
push
std
shll
mov
dec
enter
sbbl
jp
cmp
adc
das
pop
ja
int3
pop
mov
in
adc
imul
push
aas
push
cld
push
sub
js
cltd
int3
popf
cmp
ja
adc
add
push
mov
cs
in
movsl
pop
dec
pushf
leave
adc
addl
sahf
xor
out
inc
jae
xor
push
push
out
jecxz
je
sbb
cwtl
fisubl
dec
dec
jle
mov
cmpsl
adc
sbb
fiadds
xlat
push
push
jbe
into
in
mov
dec
loope
jae
cltd
sahf
push
mov
mov
test
xchg
mov
add
loopne
jp
pop
cli
sbb
pop
ss
sti
gs
int
aaa
lods
xchg
rcrl
rolb
popa
jg
jb
aas
jge
xor
ds
in
aam
cs
data16
mov
mov
sub
sub
add
mov
jle
lahf
and
dec
jns
sub
fldenv
pop
pop
sbb
push
out
jb
cmpsl
mov
std
cmpsb
clc
xchg
inc
jo
mov
add
fldenv
jl
pop
jp
or
lods
add
lcall
add
or
pop
pop
aam
pop
adc
lock
test
pop
inc
outsb
rcr
jecxz
xor
jl
sbb
sub
stos
andb
scas
aam
push
hlt
push
loopne
dec
lock
push
mov
fs
dec
sarl
sub
sub
ja
fnsave
sar
mov
mov
aas
sub
jmp
or
outsb
dec
dec
sbb
loopne
fldcw
rcl
adc
mov
inc
mov
mov
add
aas
push
xor
leave
ss
out
aaa
inc
loope
mov
push
adc
mov
cmp
cmp
inc
pop
ds
in
lcall
jp
jns
push
cmp
aad
fs
mov
push
mov
pop
adc
xchg
test
xor
and
push
sti
loope
repz
push
jl
and
push
js
push
lcall
add
nop
or
dec
inc
push
push
add
pop
ja
js
outsl
and
ds
cmp
push
push
cmc
or
mov
test
and
sarb
das
cmp
mov
out
mov
add
or
mul
pop
pop
cli
cltd
inc
ret
xor
stc
fstl
out
imul
out
aaa
insl
aad
mov
cld
int
adc
jo
movsl
mov
sub
mov
cmp
stos
xlat
fwait
dec
inc
pop
fsubs
lret
pop
push
xor
mov
xor
and
adc
outsb
xor
sub
fmuls
pushf
cmpsb
pop
gs
popl
xchg
arpl
fmull
iret
test
xchg
adc
or
xchg
pop
push
hlt
in
xchg
pop
push
sbb
aad
lds
xor
ret
imul
inc
shrb
lahf
out
sbb
fwait
rcrb
ret
or
pop
mov
push
clc
adc
adc
test
jp
mov
in
xor
imulb
out
les
dec
xchg
mov
or
jnp
push
xchg
inc
pop
fidivs
daa
jl
repnz
pusha
pop
cmp
in
sub
pop
aaa
cltd
cmp
shlb
mov
inc
push
adc
cmp
movsb
fstpt
inc
call
loopne
add
push
imul
cmp
mulb
adc
icebp
aas
pop
fdivs
xor
fdivp
leave
pushf
adc
gs
mov
pushf
in
or
push
jno
loopne
or
mov
bound
pop
shl
inc
outsb
dec
sub
jns
mov
inc
ret
shrb
pop
jae
dec
mov
or
adc
xchg
inc
jbe
stos
outsb
add
pop
andb
int3
lods
jb
push
nop
jb
fistps
int
mov
shll
sub
scas
jl
cs
aad
popa
cmp
sbb
negl
and
daa
call
mov
gs
push
out
dec
or
aas
adc
stc
xorb
sbb
ds
xchg
xlat
xlat
cmp
imul
fiadds
sub
pop
or
sbb
outsb
sub
test
stos
jmp
adc
add
mov
test
push
mov
xchg
js
inc
in
repz
in
lods
jo
mov
or
jo
adc
cltd
and
jmp
psrlw
add
jo
lret
pop
lock
outsb
sbb
inc
push
sub
cld
fistps
pop
pusha
jnp
adc
dec
repz
rcll
mov
mov
xchg
adc
jmp
sarb
rolb
pusha
fstpl
hlt
cmc
or
mull
aas
jns
cltd
and
bound
outsb
add
popf
pop
imul
int
repz
psllw
popf
stos
or
fmuls
ret
sbb
mov
adc
ja,pt
ja
scas
or
dec
dec
bound
mov
xor
incb
xchg
mov
pusha
nop
cmp
pop
imul
xchg
sbb
push
cmp
xchg
sbb
adc
push
shl
fldenv
insl
jno
mov
ret
ret
adc
push
jecxz
out
and
shl
int
push
enter
incb
aas
xchg
push
subb
jae
mov
pop
mov
push
testb
cmp
push
into
pop
jb
xchg
sbb
sub
into
adc
push
mov
mov
fld
mov
lea
pushf
lods
scas
lcall
or
add
insb
dec
sti
mov
aaa
sub
mov
xchg
ja
add
push
fucomi
stc
mov
lds
daa
das
pop
leave
ds
pusha
imul
sbb
and
subb
xor
pop
lret
lods
adc
sub
or
or
bound
nopl
fimull
jno
jmp
fisubrs
lahf
in
fidivl
call
pop
je
push
scas
addl
pop
pop
fsubs
and
mov
jne
jns
movl
popl
jno
or
jne
fistpl
xor
inc
js
sbb
repz
sysret
mov
loop
lock
movsl
mov
push
pop
dec
aaa
shlb
add
pusha
out
fstpl
cmp
inc
and
nop
test
leave
mov
decl
jns
add
fcompl
out
loopne
cltd
dec
addr16
pop
xor
scas
dec
push
mov
clc
pop
mov
enter
mov
stos
sbb
fsubrl
xor
or
sub
cwtl
jge
mov
xor
adc
movlhps
sub
pop
popf
aas
mov
test
mov
stc
adc
outsl
pop
lret
scas
popf
or
and
insb
loopne
push
jl
scas
and
call
push
enter
loopne
js
jp
push
fwait
cmc
rcr
jno
negb
ficoms
sbb
pop
xor
test
dec
loope
mov
cmc
cmp
ja
syscall
mov
xchg
addr16
mov
repnz
pusha
pop
push
adc
dec
das
and
fildl
dec
mov
lahf
test
std
outsb
dec
push
lock
outsl
pusha
push
push
pop
inc
stc
cmp
add
ret
cmp
inc
mov
xor
cmp
fdivrs
mov
xchg
fnsave
pop
inc
sbb
das
ficoml
nop
cmp
push
sbb
mov
jmp
xchg
mov
daa
cwtl
fstpt
or
bound
or
fmull
lock
mov
inc
lods
lcall
jb
xlat
fldcw
mov
sbb
stc
fwait
mov
cld
loop
out
loop
jno
push
popf
mov
sbb
cmp
out
xchg
or
pop
mov
xchg
push
shr
sub
mov
stos
cmpsl
divb
enter
orl
add
add
cltd
inc
push
into
andb
jle
negl
fstl
cli
push
aam
ds
xchg
sub
std
add
loopne
xor
cmpsl
sbb
pop
jecxz
inc
mov
lods
hlt
int3
sub
mov
nop
mov
lods
mov
inc
ror
cltd
in
or
or
push
pop
roll
jg
jg
mov
xchg
push
pop
mov
iret
enter
je
xor
je
mov
jecxz
and
and
inc
sub
adc
iret
out
add
xchg
movsl
leave
add
mov
or
out
lods
call
xchg
add
pop
pop
sbb
add
icebp
pop
sbb
jp
jmp
cmpsl
popf
or
out
lods
cli
xchg
into
mov
sbb
or
or
xor
lcall
add
push
lret
xchg
jmp
push
or
mov
xchg
ret
sbb
fcmove
xchg
icebp
sarl
jnp
in
sub
jp
pop
repnz
jns
dec
cmp
popa
push
loopne
mov
fcmovnb
dec
and
xor
outsb
sub
aas
cmp
cmp
cmp
rorb
add
cld
call
lods
xor
or
inc
adc
aas
xlat
in
mov
sub
jbe
xor
bound
fwait
mov
clc
push
mov
sbb
and
add
mov
ja
out
pop
hlt
jp
das
adc
cmpsl
push
lcall
mov
push
sub
test
sub
pop
lea
es
jp
in
js
jb
xchg
movsb
divb
mov
inc
cmp
ret
sbb
cmpsl
mov
enter
cmpsb
loope
idivl
adc
push
mov
clc
jge
adc
jo
arpl
fbld
pop
or
loop
mov
in
xchg
pushl
mov
fninit
push
test
icebp
pushf
and
test
jno
or
push
push
addr16
sbb
sub
jo
and
adc
das
aas
xor
in
inc
or
das
aas
dec
sbb
out
xor
jl
xor
dec
frstor
inc
out
arpl
aas
fistpll
sub
cmp
dec
or
das
sti
sbb
or
pop
dec
inc
in
add
dec
cs
mov
in
push
sahf
je
in
jmp
mov
addr16
cld
rol
push
dec
sahf
repz
insl
mov
fisttps
dec
mov
out
fidivrs
mov
pop
dec
loope
mov
fsubrp
shll
sbb
fcoml
adc
add
cld
jae
push
imul
or
js
sub
in
inc
pop
sbb
popa
or
or
insl
xor
mov
xor
inc
xchg
jmp
test
fcmovnu
push
dec
or
lock
or
insl
outsl
inc
pop
xorl
jae
jmp
jb
xor
sub
jbe
mov
inc
insl
ds
int3
jl
or
xchg
mov
lcall
test
mov
rcll
xor
add
data16
sub
daa
jb
cmp
adc
xchg
push
clc
nop
jo
hlt
adc
mov
pushf
f2xm1
imul
xor
icebp
lods
push
movsb
pop
jno
arpl
lcall
xchg
ret
sti
test
popa
mov
pop
dec
loope
mov
pop
imul
pop
popf
mov
xor
push
insl
cmp
hlt
sahf
fcmovnu
cmp
mov
cld
add
repnz
and
mov
xor
ljmp
jp
or
mov
jno
jb
inc
sbb
add
jmp
mov
insb
and
xor
xchg
test
jmp
mov
aas
loopne
xor
add
jae
jmp
cmp
mov
xchg
addr16
adc
cmp
sbb
popf
daa
jp
sub
mov
shlb
pushf
cmp
lret
xor
mov
mov
rolb
xchg
jne
or
loop
xchg
and
pop
xchg
cmp
xchg
jb
xchg
add
std
lods
popa
mov
cs
mov
sub
clc
gs
scas
mov
xor
cld
lods
std
pop
cli
cltd
ficoms
adc
aas
dec
jnp
aaa
aad
jmp
in
roll
inc
scas
in
sub
push
cltd
or
and
fdivr
xchg
jg
or
push
xchg
mov
shlb
subl
bound
mov
mov
adc
inc
aam
and
rcr
iret
add
adc
adc
dec
test
iret
fdivl
and
pusha
jge
or
mov
insl
out
cwtl
out
rorl
jne
jno
pop
xlat
negb
lods
adc
xlat
popa
push
call
push
and
in
pusha
push
mov
xchg
push
add
push
adc
mov
mov
mov
cmpsl
mov
xor
push
cmp
cld
sbb
out
bound
out
push
push
mov
mov
mov
data16
add
bound
jno
jo
xchg
mov
repz
inc
mov
pop
xchg
mov
dec
lods
mov
inc
mov
addl
push
dec
dec
incl
jl
fwait
push
mov
add
movsl
adc
pop
scas
addb
pop
pop
outsl
mov
popa
lods
lea
pop
pop
repnz
jl
xchg
js
lds
nop
lea
sbb
ds
add
test
jne
aaa
jge
hlt
sub
in
jle
add
cli
sub
pop
lcall
aam
mov
jge
xchg
add
dec
scas
mov
and
and
ljmp
push
inc
lds
inc
push
rorl
ja
test
dec
mov
lods
or
xchg
fildl
push
add
roll
mov
std
cltd
jns
mov
fwait
dec
icebp
gs
imul
lock
jns
add
sub
ss
mov
jne
mov
and
cmp
nop
inc
mov
xchg
jmp
test
inc
push
inc
dec
movsb
mov
sti
mov
decl
scas
inc
sbb
jnp
orb
mov
cmp
sbb
popa
sub
inc
sti
out
es
fstpt
shll
out
dec
cmpsl
out
leave
out
movsb
push
and
pop
jno
fsub
cmc
xchg
add
ljmp
xlat
mov
loope
mov
xchg
push
sbb
movsb
sub
icebp
shll
pop
cltd
gs
jg
xchg
and
cld
test
mov
xchg
jmp
sbb
sahf
xor
sub
je
adc
adc
sahf
sub
popf
inc
sahf
repnz
hlt
sarl
xchg
icebp
gs
imul
jle
aaa
dec
daa
psrlw
push
ss
icebp
ljmp
std
js
pop
test
insl
lcall
addr16
pop
cli
adc
jle
mov
sarl
adc
mov
pop
loopne
pop
loope
in
mov
lahf
mov
xchg
jg
mov
sbb
push
shll
gs
inc
jne
dec
pop
in
out
out
mov
lock
cmp
push
mov
mov
ss
and
dec
jl
sbb
dec
jno
lock
lock
cld
movsl
jp
lods
shrb
pop
or
dec
sarb
dec
sub
mov
aaa
mov
jl
adcb
ljmp
rorb
sub
repnz
inc
mov
dec
sarb
shl
push
cwtd
add
out
pop
push
push
pop
movsb
cltd
ds
mov
sti
popf
jle
mov
cmp
sti
out
arpl
push
aad
inc
xchg
mov
sub
dec
jle
leave
movsl
xchg
scas
das
lcall
mov
mov
dec
call
fnstcw
test
bnd
pop
shlb
test
xchg
sbb
xchg
insl
mul
sbb
out
adc
rorl
out
outsb
cwtl
lahf
inc
push
insl
daa
js
add
mov
mov
sbb
xor
mul
push
and
mov
sbb
jmp
jnp
popf
mov
sub
sub
jns
pop
pop
sarl
mov
jae
iret
push
nop
std
inc
movsl
lret
frstor
jns
sub
test
ss
bound
and
rolb
pop
lret
pop
sub
notl
mov
mov
cltd
out
cld
add
cmp
test
sbb
loopw
push
dec
mov
pusha
lahf
lcall
mov
pusha
aas
sub
movsb
cmp
and
iret
and
push
push
dec
mov
pop
push
pop
fidivs
mov
cltd
movsl
inc
jnp
jno
or
xchg
loope
inc
xlat
lahf
jl
mov
adc
jp
xor
scas
sti
sub
pop
or
lods
push
xchg
pop
jnp
and
mov
and
imul
stc
and
in
sahf
imul
mov
inc
loop
xchg
call
jl
mov
push
cmp
dec
aad
cmpsb
das
stc
leave
adcl
inc
jne
sbb
jns
lcall
ja
xor
cwtl
loop
andl
ss
dec
sbb
or
sbb
xchg
cmpsb
pop
jmp
add
cmp
insb
mov
insl
mov
imul
and
jno
lret
jne
fwait
pusha
in
xor
dec
movsb
inc
cmp
sti
hlt
pop
test
and
xchg
shrl
subl
fbstp
mov
adc
push
jl
jno
push
xchg
add
add
loopne
mov
mov
popf
shll
pop
ljmp
or
jb
pop
jp
push
and
push
mov
std
out
je
mov
lret
addb
sub
mov
jmp
xor
adc
popf
inc
and
jns
call
dec
pop
or
outsb
outsl
into
push
pop
xchg
pop
loop
push
into
push
sbb
cld
mov
ret
xchg
lods
mov
or
jle
repz
repz
testb
std
adc
xchg
outsl
xchg
and
in
fidivrs
mov
inc
aas
xchg
pop
enter
jle
or
lock
sbb
cmpsl
dec
push
cmpl
mov
nop
mov
and
xchg
adc
cmp
pushf
insb
mov
mov
inc
jl
imul
jecxz
xor
jl
pushf
jg
jl
cmpsl
pusha
sbb
inc
out
mov
scas
into
pop
ljmp
and
dec
or
test
mov
jae
jle
vcvttpd2dq
pusha
xchg
lock
xchg
shll
mov
ljmp
push
adc
xchg
inc
and
sub
leave
mov
and
je
sbb
jp
sha256msg2
mov
lods
pushf
jecxz
icebp
sbb
call
ljmp
shlb
icebp
mov
js
cmp
jno
xchg
out
inc
outsl
cli
ficoml
mov
out
imul
fdivrl
ficoms
int
jl
mov
dec
lods
mov
push
mov
lods
lahf
mov
jge
pop
aad
int3
ret
xchg
inc
imul
inc
int
loopne
insl
mov
es
inc
pop
cmc
jmp
lea
mov
jg
and
jecxz
insb
jge
in
xabort
push
push
std
insb
mov
cmp
inc
sub
pop
loopne
cld
and
lods
dec
icebp
sti
out
cwtd
in
and
imul
inc
shlb
addb
popf
arpl
add
or
fwait
lods
test
cmp
das
jbe
jae
dec
inc
cmpsb
cltd
sub
je
sahf
lds
inc
shlb
pop
push
shlb
imul
adc
subl
and
jmp
or
mov
insl
mov
cli
ja
in
inc
outsl
pushf
lea
inc
lea
add
bnd
das
xchg
inc
mov
decl
leave
scas
xchg
mov
in
adc
js
sub
clc
add
ret
xchg
lret
xchg
nop
shrb
subb
push
mov
sub
testb
gs
ljmp
in
sub
popf
push
jno
subb
jp
mov
pop
lods
jb
lret
movsb
push
insb
mov
les
cmpsb
cld
pop
cmpsb
jge
mov
mov
repnz
es
sbb
inc
dec
jns
mov
orb
pop
mov
pop
aas
pop
adc
mov
inc
daa
mov
dec
inc
jmp
xchg
neg
add
push
sbb
enter
jmp
push
add
and
es
push
shlb
mov
sbb
daa
bnd
adc
int
sbb
and
mov
add
test
jo
repz
inc
js
pop
dec
repnz
jne
out
jecxz
rcl
es
jno
stc
in
insl
mov
mov
push
shrb
sub
ss
jo
add
test
mov
in
mov
xchg
or
sub
pop
fisttps
shr
adc
nop
in
lahf
addr16
aam
in
push
cwtl
mov
dec
cmp
loope
scas
js
je
test
xor
mov
jae
pop
pushf
ljmp
lds
iret
cmp
xchg
bound
push
jl
pushf
out
inc
shrb
xchg
mov
xor
dec
cli
add
ret
or
shlb
jo
cmp
stos
mov
dec
inc
js
repz
push
jmp
mov
popf
xor
fildll
les
mov
jl
insb
rcll
and
leave
daa
in
in
pop
dec
lret
mov
outsl
lret
sti
rcr
dec
xor
nop
pop
out
popf
pop
xlat
pop
dec
ja
xchg
fsubrs
sahf
out
cld
cwtl
adc
orb
or
push
test
sub
inc
ja
mov
out
stos
push
pop
sbb
xlat
adc
mov
jmp
dec
dec
es
xchg
push
xlat
sbb
mov
sub
mov
out
sahf
aas
jp
insl
out
shr
stos
mov
enter
push
push
insl
test
ret
test
in
push
pusha
mov
inc
cmp
push
pop
aaa
jecxz
movsb
inc
idivl
les
and
pop
add
inc
cli
mov
insb
cli
jno
out
inc
jmp
sbb
xchg
cwtl
iret
into
iret
cmpsb
repz
inc
es
jo
mov
es
sub
fstps
loopne
inc
add
lahf
sahf
pop
push
aaa
inc
pop
mov
mov
push
inc
xchg
add
jnp
push
vxorps
pop
idiv
aaa
fcoms
jae
and
dec
arpl
das
nop
mov
fldln2
add
mov
inc
enter
lret
inc
xchg
xchg
ja
inc
sbb
and
iret
nop
xor
mov
shll
lahf
divb
sub
push
leave
and
addr16
pop
out
pushf
mov
mov
inc
mov
jb
shl
sahf
mov
xchg
xchg
cmp
mov
jbe
imul
movsl
push
test
std
nop
iret
jne
cmp
and
sub
push
data16
fs
outsl
shrb
adc
add
movsl
or
xchg
in
in
push
jbe
add
xchg
and
sbb
shlb
xchg
scas
xchg
mov
pop
sub
dec
clc
mov
xchg
mov
test
dec
pop
inc
pop
sbb
ret
mov
ret
cmp
or
jmp
into
jo
sahf
clc
xor
data16
addr16
lahf
pop
lea
je
dec
sub
cmpsb
outsb
inc
xchg
dec
dec
std
iret
std
cmp
sbb
ret
and
fnstsw
daa
ret
les
cmpsb
mov
out
and
mov
pop
xor
xor
lds
int3
lods
jg
enter
stos
jmp
push
and
dec
push
cld
and
js
mov
in
outsb
pop
imul
in
lcall
sub
sub
inc
jno
fmull
pop
clc
scas
ss
lods
cmp
xor
pop
pop
out
loop
daa
mov
sbb
fsubrs
mov
scas
loopne
shrl
add
mov
cs
and
int3
stos
popa
push
xorl
cltd
jae
sti
shlb
mov
and
xchg
sbb
cmp
in
xor
sbb
cwtl
xchg
cltd
out
fsubs
mov
add
sbb
jmp
lcall
xchg
pop
loope
cmp
dec
or
mov
jle
dec
adc
fists
pop
dec
jp
or
cmp
mov
cmpsb
mov
clc
cmp
and
insl
sub
xlat
int3
mov
adc
lds
xor
and
ljmp
and
pop
adc
lock
xor
leave
loop
jg
gs
ja
push
cmpsb
push
push
inc
call
add
mov
mov
das
int3
xor
lret
movsb
movsb
stos
into
sub
leave
sbb
std
orl
push
or
jae
mov
addb
pop
mov
scas
loope
xor
ljmp
cli
repnz
push
fisubrl
mov
pusha
fadds
aam
sub
orb
clc
insl
test
add
int3
mov
jae
insb
cmp
les
xchg
mov
inc
lods
inc
jne
ds
xchg
loopne
cmp
push
lods
xchg
or
in
add
ljmp
pop
dec
inc
pop
mov
fdivl
xor
sarb
or
fimuls
scas
mov
test
aad
stc
adc
stos
fisubrs
adc
push
mov
ja
test
add
add
icebp
or
and
cmp
inc
es
shll
jnp
jecxz
test
loopne
dec
loop
enter
xchg
dec
mov
sbb
scas
cmova
fdivl
jns
rcrl
inc
stos
push
cmp
outsb
and
je
scas
and
sbb
cmpsl
and
push
fstl
sar
jo
adc
loop
dec
fcomp
out
leave
mov
inc
add
in
xchg
lds
jmp
andl
adc
scas
adc
pop
push
jle
xchg
iret
loopne
cs
scas
leave
stc
cmc
sbbl
pop
js
popa
add
fiadds
outsb
les
test
jle
xchg
xor
roll
pop
rorb
xchg
jg
inc
xchg
dec
adc
xor
cwtl
add
xchg
pop
inc
sarl
add
and
add
lret
cmc
sub
scas
call
and
inc
cli
enter
sub
lods
cld
dec
movsb
pop
fnstsw
dec
shr
xor
and
fisubrs
loopne
pusha
pop
jmp
sarb
loopne
adc
cs
pop
push
sti
and
cmpsl
imul
iret
fisttps
lcall
cmp
pop
fs
fcom
lds
mov
mov
fs
in
or
sub
ret
in
or
outsb
cmp
add
icebp
mov
push
jl
clc
pusha
mov
and
rclb
enter
pop
xchg
icebp
xchg
outsl
or
or
scas
mov
pop
cmp
es
lea
pop
mov
cmpl
aaa
jge
mov
cld
jmp
sbb
push
pop
cmp
jp
inc
pop
in
sub
cs
lods
inc
repz
fbld
inc
mov
xchg
lcall
iret
lcall
jo
in
cmpsl
sub
adc
incb
data16
iret
iret
loopne
sbb
inc
inc
out
dec
or
sbb
std
mov
imulb
mov
ficomps
xchg
shlb
ret
xchg
imul
or
loop
dec
test
jne
in
inc
popf
dec
dec
jp
mov
add
scas
mov
mov
inc
aas
mov
mov
lea
or
pop
shrl
push
inc
dec
enter
insl
jp
lret
cmp
scas
mov
fbld
ljmp
push
push
mov
repnz
push
in
mov
mov
mov
call
mov
loopne
push
dec
add
and
mov
cwtl
sbbl
stos
sti
and
lret
leave
mov
and
pop
scas
into
xor
or
and
gs
pop
push
adc
mov
push
call
adc
xor
sbb
stos
scas
jle
sbb
testl
ljmp
addr16
out
mov
ds
enter
and
inc
ror
sbb
lea
out
sbb
add
adc
int
or
xor
imul
cs
xor
push
out
rcrb
adc
cltd
mov
popf
add
pop
xor
jne
sarl
add
out
jo
sbb
ss
hlt
jo
in
dec
lret
scas
mov
fs
int3
test
xorb
pop
jg
aad
mov
adc
cmp
xor
xchg
xchg
xlat
imul
mov
and
cmpsl
pushf
ret
mov
cmc
mov
cmpsl
ret
sub
add
stc
insl
fildl
sub
add
fwait
cwtl
stos
into
jnp
jge
sub
and
pop
rcrl
adc
sub
lret
cld
jb
push
jl
cltd
mov
or
scas
sub
sbb
mulps
mov
dec
dec
and
dec
in
test
in
xchg
into
sbb
cltd
pop
repnz
dec
jmp
shl
call
or
fwait
pop
pop
dec
test
pop
xchg
ljmp
push
cmp
dec
mov
insb
movsl
push
dec
mov
cmp
mov
lcall
or
sbb
or
xlat
hlt
jne
int3
ljmp
or
dec
xchg
mov
inc
jbe
cmp
add
adc
jle
into
mov
sbbl
rcr
or
pushl
cltd
and
and
test
mov
inc
out
cmc
jnp
add
dec
ljmp
inc
rcr
inc
fldenv
cs
mov
nop
cmpsl
push
test
mov
push
jo
loope
mov
faddl
in
mov
arpl
mov
or
xor
jle
lahf
mov
pop
imul
inc
mov
leave
rorl
jle
int3
ds
out
popa
pop
xchg
ja
pop
shrl
faddl
ss
mov
lods
inc
dec
sahf
mov
sahf
movsl
mov
dec
enter
and
loopne
test
mov
es
loopne
dec
les
arpl
cmp
jo
ds
dec
rcrl
pop
lea
jmp
inc
xchg
jnp
mov
pop
scas
push
mov
xchg
rcr
mov
and
xchg
jne
xor
out
adcb
fwait
cltd
cwtl
fildl
movsb
mov
ja
insb
pmaxub
add
rcll
dec
rep
add
fsubl
jbe
int3
outsl
lock
mov
mov
jmp
sub
lahf
sbb
inc
cmp
add
sbb
fsubrl
cmp
sub
xchg
jo
adc
ja
inc
mov
inc
fnstenv
cli
dec
int
sahf
cmp
lahf
rcl
mov
mov
repz
jg
lret
sub
pop
and
dec
and
js
or
add
js
rcl
sbb
mov
popf
ror
or
mov
pop
dec
jg
aas
pop
in
fwait
cmp
sub
xor
inc
bound
jae
dec
lock
cmpsb
ja
xchg
inc
data16
xlat
inc
xchg
ret
mov
add
cli
push
pushf
add
outsl
pushf
ret
mov
jne
push
js
xlat
movl
cmpsl
adc
lock
add
gs
jmp
das
sbb
aaa
outsl
ljmp
xor
inc
mov
scas
pop
adc
pusha
xchg
les
into
dec
jns
pusha
sbb
mov
xor
jns
subl
add
rcr
lahf
cmp
jp
adc
lods
sbb
out
dec
push
mov
mov
in
rcll
mov
pop
pop
xlat
dec
shll
movsb
rcrb
push
mov
arpl
repz
dec
arpl
mov
xor
push
xor
push
inc
in
sub
popf
ja
xor
lret
lods
jb
fs
push
decb
lret
add
xchg
mov
pusha
cltd
mov
pop
shr
hlt
icebp
fsubrl
ret
xchg
ret
inc
mov
cli
xor
lret
pushf
daa
jne
cmp
or
sti
push
cwtl
rcl
lea
add
push
stos
adc
cmp
xchg
jp
mov
mov
cld
and
int
jno
xchg
add
imul
pop
jg
vpmaddwd
xor
or
out
shl
and
jg
inc
push
fcom
mov
dec
mov
jns
mov
ficoms
bswap
cmp
mov
cmp
and
pop
in
lods
xor
rclb
pop
inc
jbe
fwait
cmp
adc
jb
mov
xor
mov
lds
sti
aad
in
or
jne
add
mov
outsb
inc
inc
mov
jne
repz
xchg
jle
pop
add
clc
fwait
mov
ret
add
cli
and
in
mov
jl
dec
push
or
sbb
aad
ficomps
inc
push
dec
lock
xchg
and
and
lods
daa
out
cmp
scas
std
popa
xor
or
in
jns
xor
fisubs
fnstenv
cmp
sbb
dec
and
fsubr
jb
adc
sub
mov
ficompl
imul
pop
mov
xcrypt-ecb
xchg
pop
mov
and
cmp
and
sahf
cmp
int3
and
xor
jo
fists
or
fdivrl
ds
mov
mov
inc
lds
aaa
and
sub
pop
aad
mov
notb
jne
xchg
iret
inc
jmp
test
add
mov
or
rclb
push
inc
imul
mov
mov
call
mov
sti
pop
fstl
shld
pop
mov
mov
in
pop
jle
mov
test
adc
jae
ror
fstpl
pop
xchg
push
stos
test
daa
ffreep
adc
sar
push
lds
cmp
push
scas
mov
mov
cmp
lods
or
enter
fnsave
ds
mov
sbb
in
pop
ret
ljmp
fistl
imul
dec
push
mov
mov
sub
pop
xchg
sbb
add
inc
xchg
add
sub
add
xor
leave
and
jmp
in
shlb
test
and
pop
ss
adcl
ds
out
sbb
and
into
stos
icebp
das
fs
mov
mov
cmp
hlt
jne
push
inc
clc
xor
cmp
cmpsb
xchg
or
pop
fld
or
aad
push
sti
lea
cwtl
ret
mov
pop
pop
pop
mov
inc
jle
cwtl
xor
inc
push
lcall
leave
stos
leave
ss
cmp
call
pushf
sarb
insb
inc
and
test
dec
cmpsl
hlt
dec
pop
mov
test
sbb
lahf
ss
insb
push
mov
fisubrl
inc
cli
mov
jge
and
sbb
sti
cltd
mov
jmp
jge
add
scas
push
push
jo
pop
mov
mov
fs
jecxz
scas
pop
and
add
adc
cltd
inc
and
lret
lahf
sub
jmp
add
hlt
loop
or
loop
out
pop
lahf
gs
dec
sarl
stc
mov
movsb
movsl
jnp
inc
sub
mov
jae
movsl
movsb
jne
mov
inc
hlt
daa
push
int3
jns
cwtl
mov
cld
mov
pushf
cmpsl
lahf
mov
sub
addb
or
dec
aad
inc
mov
fs
pop
movsl
or
pop
mov
aaa
test
cs
shll
inc
mov
ljmp
and
xor
leave
push
or
mov
stc
sarl
mov
push
popf
adc
pusha
jo
inc
add
fidivl
xlat
sbb
pop
jl
adc
icebp
pop
mov
jle
out
inc
aas
and
rorb
les
dec
xchg
cmp
movsl
lret
pop
fcoml
inc
sbbl
inc
sti
push
mov
cmc
and
xchg
pop
imul
cmpsl
or
xchg
mov
loope
xor
dec
sbb
xor
dec
test
je
mov
lds
lock
int3
xchg
lret
mov
inc
stc
mov
dec
jnp
push
inc
jp
inc
xor
outsb
xchg
or
fldenv
popa
loopne
nop
and
jns
jb
adc
xchg
ja
add
adc
push
repz
out
or
inc
xchg
inc
in
cmp
scas
pop
call
jo
jmp
xor
pop
and
je
push
scas
andb
in
int3
imul
aaa
adcl
call
pop
repz
fsubrl
jg
lds
shl
inc
jmp
ljmp
bound
sbb
je
idiv
mov
sbb
jmp
insl
xor
into
and
int3
push
test
cmpsl
mov
pop
xchg
inc
shll
inc
outsl
nop
pop
lods
sub
cld
adcl
test
popf
fsubrp
stos
mov
or
cli
iret
movsl
inc
pop
dec
je
or
mov
insb
xor
imul
pop
jp
jmp
mov
sub
sub
push
jb
imul
mov
push
ds
jne
imul
iret
mov
jmp
icebp
not
ja
pop
mov
inc
push
mov
insl
xlat
insb
inc
inc
ljmp
dec
mov
aam
xchg
dec
in
xlat
enter
jg
out
lret
popf
gs
jecxz
out
subb
iret
test
push
call
adc
insl
movsl
cmc
pop
dec
sub
cmpb
mov
imul
cli
mov
inc
pop
xchg
xor
push
adc
xor
sbb
sub
dec
outsb
jge
dec
mov
and
dec
mov
dec
mov
and
mov
push
push
cmp
jecxz
or
inc
xlat
pop
sahf
movsl
mov
pop
iret
out
or
roll
scas
jl
adc
loop
ja
insb
scas
hlt
xor
orl
sub
sub
push
jnp
rorb
shl
push
out
add
pop
idiv
rcrb
dec
hlt
data16
fsubr
xchg
test
xlat
add
pop
lods
icebp
es
inc
mov
test
cmp
and
mov
xchg
aad
jne
out
imul
test
lock
stc
add
push
sbb
push
sub
adc
dec
add
in
jmp
push
movl
std
cmp
push
adc
sbb
inc
fsubrs
div
jno
push
das
jle
add
cmpsl
lcall
mov
cmpl
nop
mov
push
mov
dec
cmp
lret
mov
push
lahf
lods
push
mov
ret
push
inc
loope
pop
arpl
xor
rorb
and
outsl
xor
in
aaa
adc
popa
sub
jb
rclb
jb
lods
push
dec
data16
loope
pop
cmpsb
push
clc
pop
out
out
adc
xchg
mov
adc
pop
stc
mov
dec
cmp
or
jecxz
les
push
push
out
cmp
sahf
adc
mov
jb
sub
aad
popa
dec
lods
call
stos
test
icebp
fs
das
dec
leave
loopne
mov
or
ficoml
out
jns
ja
lret
rcl
call
cmp
xchg
fucom
or
dec
aaa
loop
icebp
sub
jae
loop
mov
scas
jae
popf
pop
mov
cmp
enter
push
iret
cmp
xor
movsb
inc
arpl
mov
and
mov
lret
cmpsb
notl
xlat
cmp
scas
or
pop
mov
xlat
jno
call
push
shrb
and
mov
mov
push
xchg
stos
mov
sub
aad
lock
sbb
push
add
push
repnz
out
push
inc
jno
loopne
push
pop
in
jle
pop
jmp
dec
ss
pop
adc
and
out
or
pop
xor
mov
jge
xor
push
pusha
lahf
xlat
push
sub
imul
iret
and
bound
or
lcall
sbb
push
jge
sbb
or
rclb
sub
inc
mov
push
adc
aam
adc
repz
sub
inc
fcomi
mov
xchg
ret
cmpsl
xchg
mov
jne
gs
cmp
aas
xor
shrl
shlb
pushf
sbb
and
push
enter
fcomps
adc
push
lods
mov
push
lock
sub
sub
dec
sub
inc
sbb
jp
sub
call
dec
fiaddl
mov
lods
in
mov
jo
popa
push
inc
int3
xor
inc
jge
rcl
scas
rclb
and
sbb
outsl
inc
jecxz
push
rcrl
fistl
out
cmp
and
test
pop
mov
xlat
push
movsb
lret
cmp
jne
bound
lock
jae
pop
sbb
fidivs
je
iret
jno
rclb
jge
push
rcl
inc
push
or
jl
cltd
loope
add
add
mov
repnz
lahf
add
push
addl
lea
test
sbb
pushf
out
cmp
cmp
jbe
jno
add
and
mov
idivb
dec
push
call
aaa
out
fisubl
cld
sub
scas
mov
into
xor
inc
in
subb
jb
lds
push
sub
and
imull
pop
or
in
xchg
mov
cltd
jbe
out
bound
lcall
shrl
jp
or
scas
add
mov
cmp
jno
ficompl
pop
xor
and
adc
and
enter
ret
scas
sub
outsb
dec
outsb
lock
cwtl
cmp
mov
jl
inc
std
sbb
jmp
arpl
sahf
aam
inc
mov
or
pop
out
dec
push
cmc
aaa
popf
stc
out
aaa
mov
sbb
pusha
in
push
cltd
ljmp
xchg
rorb
sbb
pop
add
icebp
fldenv
dec
int3
and
add
cmpl
movsb
push
mov
xchg
inc
pop
jae
aas
sub
insl
or
icebp
mov
pop
pusha
stc
or
fisubrl
inc
mov
cwtl
insl
insl
pop
xchg
cmp
adc
jmp
test
xchg
ds
out
les
mov
jbe
jle
sbb
jmp
ja
in
or
cmp
jnp
arpl
pop
jg
pop
scas
in
dec
pop
jl
push
xchg
imull
dec
pop
dec
lods
movsl
insl
adc
add
add
mov
push
mov
int
aaa
push
mov
push
inc
sub
int3
data16
mov
cmp
hlt
adc
mov
inc
mov
mov
fstps
cmp
nop
js
dec
shll
sub
jmp
jbe
stos
pop
mov
test
mov
pop
bound
mov
jb
icebp
fdiv
dec
dec
ljmp
sub
push
mov
xor
cld
mov
pop
mov
or
in
dec
nopl
repnz
jmp
insl
sub
cmp
cmpsl
pop
sti
lcall
loope
loop
stos
lahf
rcrl
dec
mov
aam
inc
clc
xor
je
and
test
int3
cmpsl
loopew
push
push
lods
shl
lea
add
xchg
push
scas
out
xor
je
divl
movsl
aam
xor
push
jns
aam
cmp
pop
sub
jne
leave
jge
adc
xor
dec
push
mov
jmp
movsb
jne
mov
fdivrs
inc
outsb
fwait
push
jp
shrl
loop
xlat
lahf
push
add
popa
sub
pop
inc
sarb
sub
jmp
mov
hlt
lcall
fcompl
addr16
mov
and
cmp
rclb
out
push
fsubs
cmp
repnz
ja
out
sbb
push
or
addl
loope
mov
or
arpl
jb
mov
les
shlb
in
ror
sub
push
ss
aas
aam
xchg
sub
sahf
adc
les
or
inc
leave
test
xchg
push
xchg
sbb
push
test
idiv
pushf
xlat
and
xor
sbb
push
jp
mov
mov
push
jle
loope
inc
mov
hlt
cmp
call
nop
mov
insl
inc
mov
xchg
push
sub
call
sub
jne
hlt
sbb
adc
mov
and
xor
fcom
mov
pop
xchg
sarb
call
rorl
jo
es
leave
add
cmp
xchg
push
loopne
popa
jo
add
mov
dec
incb
add
fcmovnu
cld
mov
add
into
int3
add
xlat
in
jle
or
adc
dec
and
pop
gs
sub
add
mov
xchg
add
and
jmp
add
lods
mov
add
inc
add
jo
inc
ret
add
add
add
lcall
add
push
xchg
push
movsl
mov
cltd
push
add
clc
in
xchg
sub
ficompl
push
mov
lds
fcoml
addl
or
sbb
sub
add
inc
rclb
add
repnz
pop
add
push
add
sbb
ljmp
ljmp
add
jmp
icebp
enter
hlt
sub
add
inc
stc
and
or
add
add
and
cmpsb
hlt
in
adc
add
jo
cmc
add
loop
lcall
adc
pop
push
outsl
dec
fdivr
cmp
add
fcoms
xor
scas
lock
pop
sbb
fisubs
add
bound
add
cmc
lret
in
and
idivb
inc
adc
movb
add
sbb
loopne
or
outsb
int3
add
jecxz
cmpsb
enter
cmp
add
dec
enter
outsb
add
inc
xor
popa
and
jmp
cmpsl
pop
add
in
mov
add
dec
adc
dec
mulb
push
inc
xchg
xor
and
xchg
xchg
insb
jnp
scas
icebp
insl
mov
repnz
adc
lcall
mov
fnsave
push
bound
add
popa
rolb
add
inc
xchg
mov
xchg
add
mov
mov
add
ja
in
mov
add
ret
in
imul
sbb
add
jge
add
andb
mov
push
pop
subb
inc
push
pop
push
jl
add
adc
add
jg
push
sub
add
jb
add
ss
add
add
ja
pushf
andl
fs
jp
adc
shll
cli
add
xchg
nop
or
out
das
add
dec
inc
dec
jle
imul
sub
and
test
pop
hlt
fisubl
out
mov
repz
dec
movsl
add
inc
add
pop
add
lds
subl
jmp
add
dec
outsb
stos
xor
mov
int
add
xchg
sbb
xor
sub
cmp
fldlg2
shlb
or
subb
shrl
outsb
outsl
enter
arpl
add
repz
clc
add
xlat
sbb
lea
clc
jno
ret
add
pmulhuw
pop
cld
add
es
add
push
push
mov
dec
pusha
fwait
mov
xor
addb
fldenv
stc
push
pop
pop
add
stos
loop
or
add
push
jo
lea
out
add
andb
push
dec
stos
mov
push
jbe
lods
jle
adc
pop
dec
add
pop
adc
add
dec
popf
add
ljmp
add
add
xchg
sbb
cwtl
xchg
cmp
mov
add
add
add
add
pop
add
icebp
or
sar
dec
sahf
mov
and
imul
add
cmp
xchg
cmp
push
mov
inc
in
adc
outsl
dec
jbe
cmc
sub
add
push
jmp
int
negl
das
sub
add
mov
add
clc
dec
jb
inc
adc
loop
add
rclb
bound
int
add
call
pop
nop
je
in
dec
ljmp
ja
inc
xor
cmp
fldcw
inc
ret
add
add
in
int3
add
sbb
push
or
add
sbb
pop
mov
dec
and
pop
fdivrp
pop
pop
push
pop
add
add
jne
xor
cwtl
test
cmpsl
adc
insl
or
add
push
int3
roll
adc
sti
jb
adc
mov
add
or
add
sbb
push
pop
rorb
jle
pop
or
xchg
mov
xchg
imulb
shll
jb
lea
or
pop
add
add
popf
ss
sub
mov
inc
add
push
jns
adc
ret
mov
mov
fcomps
test
add
and
jp
add
pop
cmpsw
add
pusha
bound
add
mov
idivl
add
sbb
repz
ror
add
shll
movb
jns
add
enter
add
cmp
xor
dec
and
mov
cwtl
inc
or
movsl
fstl
add
addr16
mov
add
testb
fsubs
add
stos
add
add
xchg
add
add
add
addl
mov
add
add
popa
sbb
add
dec
ljmp
add
lret
mov
add
xchg
testl
dec
jbe
outsl
test
add
xchg
js
imul
add
inc
loope
and
addl
push
add
addr16
div
add
scas
popa
adcl
rcll
adc
pop
stos
mov
ffree
aad
fucomip
jnp
add
or
add
jbe
add
call
cld
fwait
cmpsb
inc
add
cmp
pop
add
aaa
clc
push
add
mov
xor
push
add
stos
iret
mov
call
in
in
bound
xorl
addr16
insb
cmp
mov
cmp
add
mov
sbb
dec
mov
jae
xorb
push
sub
cli
jecxz
and
add
adcb
mov
daa
ljmp
xor
pop
cmp
jae
add
xchg
xorb
outsl
xchg
xchg
lods
add
push
mov
scas
inc
repnz
je
mov
add
insl
adc
pop
add
mov
data16
int
add
adc
and
add
add
gs
test
xor
sti
cmp
rol
add
xor
add
add
fisubs
or
cmpsl
cmpsb
push
aad
dec
add
sub
imul
jnp
add
sbb
sub
cmc
ds
pop
lock
insl
arpl
scas
xchg
movl
imul
pop
add
fldl
jle
cmp
jb
mov
mov
push
mov
sbb
add
add
pop
fstpt
sbb
add
enter
test
add
loop
sahf
ds
xchg
cmp
ja
lods
aaa
scas
data16
aad
add
pop
sbb
push
xor
mov
ret
cltd
loop
dec
dec
jne
sti
cmp
fisttps
push
and
ss
jle
inc
popf
fdivl
xlat
mov
fildl
add
call
imul
add
adc
push
dec
sti
filds
mov
adc
add
mov
add
add
lret
sbb
mov
enter
add
add
add
mov
es
add
add
add
rcr
add
add
cwtl
cli
clc
outsb
sub
mov
dec
cmp
std
cmp
adc
lahf
out
cwtl
stos
xchg
sub
or
mov
xor
mov
jns
iret
mov
jae
add
jo
out
add
lods
loope
test
jecxz
cmp
jmp
imul
jne
cmp
adc
popf
cmp
cld
mov
scas
sti
pop
sub
jmp
sbbb
aas
xor
ljmp
xorl
push
divl
push
mov
stc
adc
subl
cmpsl
inc
add
push
les
xchg
fdivp
dec
mov
add
push
or
add
out
insl
xchg
iret
jb
popa
clc
push
mov
ss
jg
mov
int
popa
cs
pusha
aam
add
push
add
test
add
arpl
jo
xchg
insl
into
mov
loopne
add
data16
lcall
xchg
pushf
xchg
enter
out
mov
mov
outsb
lods
mov
add
push
lods
dec
adc
and
into
jns
add
movsl
test
push
test
add
add
add
pop
shrl
fildll
test
add
push
popa
cltd
clc
mov
jns
jb
xchg
add
inc
sbb
hlt
cmp
cmp
inc
jne
mov
add
bswap
fldcw
cmp
adc
dec
fadds
xchg
mov
sub
test
sub
adc
paddusw
jmp
add
in
bound
xlat
cmp
xor
cli
add
mov
sahf
cmp
pop
call
or
and
add
add
jnp
sahf
je
outsb
fdivl
idivl
sbb
push
inc
xchg
mov
scas
das
or
add
add
add
inc
cmp
in
gs
into
das
mov
sbb
and
adc
add
add
testl
in
shrl
shl
in
xchg
pop
test
mov
lret
int3
cmp
cmpsl
out
sub
test
inc
mov
je
fistpl
adc
into
and
data16
enter
mov
and
add
push
xchg
leave
mov
or
inc
cltd
insb
add
jb
pop
lea
bound
testl
mov
or
in
in
pop
pop
xchg
in
xlat
push
add
push
mov
mov
test
ret
xor
je
pop
dec
jnp
test
jp
std
inc
add
lock
mov
insb
xor
mov
pop
in
nop
and
les
xor
adc
push
mov
or
xchg
xor
mov
out
push
jno
lret
xor
pop
jg
sub
adc
cltd
add
sub
cwtl
add
test
add
hlt
push
ret
mov
gs
add
push
scas
add
add
xchg
jne
stc
pop
cwtl
sahf
inc
jecxz
push
fmul
mov
and
cmp
sub
xchg
mov
xchg
jno
rcrl
push
jbe
aas
add
mov
jb
sbb
cltd
lret
lods
leave
add
pop
sub
mov
pop
ja
push
or
insl
test
sub
pop
cmp
fs
das
insl
add
sbb
ja
add
dec
xor
add
int
ds
or
push
jg
xchg
push
and
aas
xor
mov
mov
enter
push
sub
testb
cmp
shlb
xchg
adc
arpl
add
xor
add
sbb
sti
add
pop
movsl
cmp
add
sar
xchg
out
adc
add
jle
cwtl
scas
jb
sbb
ficoml
mov
add
add
popf
inc
push
push
andl
sti
mov
in
xchg
lds
mov
sahf
xor
lcall
lods
dec
lock
leave
sub
push
push
mov
add
sbb
lds
pop
aas
shll
testl
dec
ficompl
rorb
loop
shrb
cwtl
jae
mov
mov
lods
je
mov
sbbl
repnz
push
push
or
mov
add
outsl
sbb
psraw
rorw
stos
cmp
sub
dec
fiadds
add
xchg
sbb
pop
jmp
out
popf
gs
adc
inc
dec
lods
jg
xchg
sbb
push
add
hlt
orl
mov
testl
lods
hlt
das
add
mov
pop
mov
movsl
icebp
jp
and
cmp
int
test
add
xlat
les
ds
out
xchg
add
sub
movsb
push
add
add
xor
mov
add
adc
add
or
inc
pop
insb
and
out
faddl
arpl
ss
and
xor
mov
mov
add
add
mov
loopne
jb
add
jmp
cmp
sub
jae
ds
imul
cmp
add
xchg
xchg
and
jbe
pop
popf
push
add
add
cmp
push
gs
add
pushf
test
jecxz
add
out
dec
rorl
xchg
add
or
cs
jb
add
push
or
pop
test
test
loop
inc
pop
mov
imul
je
je
mov
int3
je
lock
jg
and
dec
les
push
cmp
add
inc
insb
adc
sti
ss
fs
add
data16
dec
xchg
push
mov
or
and
and
pop
bnd
xchg
call
icebp
jp
popa
in
cli
cli
mull
repnz
and
sub
push
stos
jae
add
test
push
add
xchg
insl
loop
adc
add
adc
mov
pop
nop
and
add
std
mov
or
xchg
pop
sub
out
fstl
es
or
cmovle
popl
test
mov
jno
or
lds
lret
ret
pop
add
add
loope
xchg
sub
test
xor
push
imul
mov
or
sub
leave
add
testl
imul
outsb
pop
cmp
jle
jecxz
out
sbb
xor
out
add
imul
add
lds
mov
ds
fistpl
and
mov
add
mov
and
or
fsubs
xchg
loop
pop
pop
adc
push
and
imul
icebp
cmp
add
sub
add
mov
outsl
ds
inc
ss
and
cli
xor
sbb
sub
sub
sub
inc
ljmp
lret
mov
jo
bound
aad
pop
add
cmpl
push
test
add
lods
pop
add
mov
addl
cmp
xchg
mov
push
add
or
sbb
clc
mov
mov
lret
add
push
inc
jno
outsl
add
out
mov
gs
je
jo
leave
lods
std
js
cwtl
stc
fiadds
fmul
pop
xchg
and
dec
jecxz
loopne
or
xchg
dec
imul
in
mov
cmp
mov
andb
xlat
pop
sub
arpl
call
or
cmp
cmpsb
lret
add
into
pusha
xchg
inc
xchg
add
repnz
adc
add
ds
out
dec
mov
xchg
cwtl
add
adc
pushf
add
loop
mov
je
gs
cmp
pop
adc
xchg
loopne
xor
icebp
xor
hlt
inc
xor
push
shlb
ljmp
insb
push
and
loopne
dec
xchg
sbb
mov
popa
test
cld
add
push
rolb
pop
insb
mov
push
cli
inc
add
rolb
shr
or
ljmp
pop
pop
add
out
pop
dec
add
cltd
or
add
fsts
sbb
xlat
testl
out
sti
mov
mov
add
jo
lahf
and
fldl2t
xchg
mov
mov
adc
add
hlt
fs
add
pusha
popf
cmp
rolb
mov
jns
orb
inc
mov
stc
push
add
mov
call
or
cmpsb
fdiv
add
pop
pop
sahf
sbb
mov
add
pop
loop
lods
test
add
add
add
add
push
in
jns
testb
add
out
mov
leave
cld
add
sub
loop
add
and
push
fldl
add
jge
mov
add
bound
sbb
mov
mov
mov
add
xchg
fs
add
clc
dec
insl
sbb
push
stos
push
xchg
add
add
aad
add
mov
inc
sub
or
jns
xchg
test
add
mov
add
pop
pop
add
lret
pop
add
sub
add
lock
xchg
outsb
mov
xchg
insb
pop
add
or
add
pop
push
ror
adc
sbb
jo
add
cmc
jne
lods
and
in
popf
mov
inc
cmp
adc
mov
add
xor
jne
xchg
into
add
es
imul
cmp
push
movsl
lods
fdivr
push
xor
sbb
mov
xchg
mov
mov
outsl
add
inc
es
cld
add
adc
add
xchg
shrb
aas
dec
add
add
xor
and
lods
sub
add
xor
mov
cmc
push
shr
adc
push
cmc
cmp
add
push
xchg
fisubl
add
incb
add
xorb
test
stos
add
decl
lea
add
xchg
lods
add
pop
movsb
add
les
sarb
inc
inc
or
jns
cmc
dec
sbb
sbb
add
lds
mov
xlat
dec
ljmp
mov
jle
out
mov
add
jmp
add
jg
mov
add
pop
jo
hlt
add
aas
jno
xchg
adc
push
xor
decl
cmp
outsl
xchg
ljmp
ss
add
leave
or
add
imul
fildl
add
aaa
pop
int
mov
xchg
pushf
and
call
es
addb
pop
sub
ja
mov
imul
push
les
sti
pop
push
add
sti
jo
arpl
or
fisttpll
adc
add
push
loop
jge
scas
sbb
xor
hlt
out
data16
movsl
xchg
loop
ds
jno
add
add
sarl
and
add
add
add
xor
add
into
lret
pushl
sti
add
inc
add
inc
sub
add
dec
not
or
in
imul
daa
icebp
or
pop
inc
add
mov
pop
add
loopne
and
fmul
in
xor
inc
and
in
in
popa
push
pop
pop
add
pop
add
cmp
jnp
add
add
xor
aas
adc
cmp
and
cmp
sbb
leave
mov
jg
bound
mov
mov
dec
lock
mov
ja
cmc
mov
lods
sbb
cld
test
sbb
ss
mov
mov
int
push
ja
mov
mov
scas
faddl
lods
mov
add
jns
fsub
jno
ret
das
add
add
fld1
xlat
hlt
sti
dec
popf
aas
fistpl
add
dec
mov
jle
lds
add
popl
enter
fisttps
stos
cwtl
sti
push
add
stos
add
insl
sub
add
jge
pop
xor
xor
insb
mov
push
nop
push
add
bound
cvtps2pd
push
rcl
and
rcrb
xlat
push
faddl
sbb
testl
add
clc
int
ret
add
push
cmp
add
jl
mov
shll
sub
add
add
js
jno
xor
fnsave
pop
lcall
add
stos
repz
test
lcall
mov
adc
or
repz
or
fs
add
add
pop
imul
jg
ljmp
dec
jo
movl
ret
push
cld
fcmovnu
test
pop
add
add
mov
add
bound
xor
fucom
fcompl
pop
lcall
movsl
insl
ret
mov
mov
dec
add
in
arpl
idivl
mov
push
xchg
stos
cmp
sarb
dec
loopne
adc
testl
cli
test
shl
xor
ss
add
push
nop
push
data16
push
sub
add
orl
lds
push
push
roll
out
movsl
adc
mov
cltd
test
test
pop
pop
fistps
enter
adc
rolb
ret
or
outsb
or
test
add
ljmp
or
fidivrl
mov
add
add
idivl
mov
jle
insb
ja
add
inc
sbb
add
jno
call
push
sbb
pusha
lahf
bnd
mov
pop
add
imul
and
xor
scas
sti
adc
xor
add
xchg
test
add
lds
jns
inc
inc
add
or
or
and
add
outsl
pop
and
hlt
mov
pop
mov
cmp
pop
push
in
int3
mov
dec
jge
add
cli
or
repnz
jmp
cmp
add
mov
es
add
jo
dec
pop
idiv
and
xchg
fwait
das
adc
dec
out
das
add
xchg
xchg
add
jno
add
mov
add
add
cmp
nop
sub
add
pop
add
outsl
lret
gs
mov
add
lcall
sbb
sub
std
add
sbb
add
pop
push
pop
cmp
lods
inc
or
inc
push
inc
or
add
sbb
mov
or
adcb
divl
fldt
mov
popf
push
bound
add
jmp
jo
pop
pop
call
loop
inc
aaa
xchg
out
addb
jae
pushf
xchg
adc
fimuls
fcompl
xchg
pusha
mov
xchg
movl
test
lahf
pop
xchg
cwtl
add
cwtl
xlat
pop
cmc
cmpb
lret
xchg
xchg
add
insl
sti
lret
push
in
add
add
std
addr16
sbb
pop
sti
popl
add
ja
push
jnp
sbbb
sub
gs
sub
fsubr
call
test
jbe
dec
xchg
add
add
ljmp
cld
inc
fildll
in
lds
add
mov
dec
pop
rcrl
add
or
test
jge
call
mov
or
clc
icebp
jge
in
adc
js
add
bound
xchg
mov
and
addr16
inc
add
cmp
pop
dec
mov
jg
jbe
sub
pop
stos
ljmp
pop
adc
xor
cmc
pop
inc
lods
cmpb
add
add
jg
sbb
mov
lret
fwait
add
mov
cmp
add
mov
xchg
xor
mov
add
outsl
add
push
adc
cmp
add
push
push
mov
lahf
and
mov
add
lss
jg
mov
add
add
add
test
sar
sti
loope
add
loopne
mov
push
mov
dec
xchg
xor
aas
xor
or
in
push
cmp
in
daa
xchg
movsb
sbb
add
add
adc
or
and
xchg
xchg
cmp
xchg
subl
xchg
jb
sbb
or
inc
enter
les
or
xchg
pop
add
rolb
imul
add
cltd
negl
mov
je
adc
loop
add
xor
sti
mov
xchg
out
add
jg
and
cli
lahf
or
xchg
jg
ficompl
jb
pushl
lea
mov
xor
jb
sbb
jb
mov
cmp
push
jecxz
push
xor
add
sub
roll
int
or
mov
mov
in
dec
xchg
jae
arpl
dec
leave
push
pop
popf
adc
adc
mov
mov
add
cmp
mov
cli
mov
pop
xchg
adc
and
mov
and
push
dec
inc
push
mov
call
fiaddl
add
pop
arpl
sbb
je
add
push
idivb
out
aaa
jb
pop
cli
sbb
or
add
test
loope
push
negl
fwait
add
mov
add
jae
xchg
cmp
test
add
dec
push
add
test
inc
jl
mov
mov
cmc
testb
cmp
das
jnp
sbb
mov
lret
sbb
fiaddl
add
pop
mov
adc
add
cmpsl
jns
mov
mov
cmp
pop
mov
movsl
frstor
int3
sub
fstpl
int
mov
inc
lods
lcall
nop
sbb
push
test
jae
fcmove
jo
imul
cld
cwtl
add
nop
call
leave
inc
pop
xor
in
dec
add
pop
add
stos
mov
adc
fmull
inc
daa
js
xor
andl
add
loop
aad
sub
pop
push
sbb
xchg
add
fcoml
das
xchg
lret
add
add
fcomps
cld
xchg
leave
and
add
stos
add
scas
jmp
lds
mov
adc
jno
dec
testb
mov
mov
fmull
xor
ds
sbb
pop
call
int
aam
xchg
mov
xor
jle
in
fwait
icebp
mov
add
js
je
pop
pop
stos
out
lods
xchg
lods
mov
mov
inc
push
push
adc
nop
jmp
mov
sub
std
repnz
leave
add
movsb
or
jns
mov
movsl
stos
add
inc
add
ret
mov
hlt
mov
ja
mov
mov
or
mov
and
std
push
mov
sbb
outsl
push
int3
jecxz
dec
mov
or
cld
lods
dec
mov
mov
mov
inc
sti
or
aad
ret
xor
sbb
xchg
movsl
js
cli
repnz
sub
enterw
mov
sub
jae
jne
sub
sbb
lods
xor
cmpsl
jne
pop
sbb
imul
inc
int
cli
jns
repz
add
out
test
add
jmp
fcos
out
aas
xchg
aaa
inc
loopne
sbb
inc
dec
iret
addr16
rolb
dec
mov
pop
dec
xchg
mov
mov
dec
mov
dec
jge
testl
lock
cld
adc
jbe
arpl
clc
and
sahf
inc
das
jno
mov
aas
divb
add
sahf
mov
loop
ljmp
nop
add
es
loope
push
pop
add
mov
and
add
add
loopne
sub
mov
add
add
xchg
rorl
or
add
add
mov
mov
jnp
add
jecxz
dec
mov
dec
das
gs
jb
out
iret
fnstenv
pop
or
into
add
sti
or
leave
sub
xchg
jmp
inc
fiadds
out
add
cmpb
int
jp
add
add
mov
xor
arpl
xor
loopne
add
es
mov
incb
push
pop
mov
cmp
cmc
xchg
nop
add
add
jo
lds
sbb
xlat
sbb
push
pop
pop
xchg
popa
faddl
jne
push
rolb
mov
or
in
cmp
add
xor
push
ja
mov
sbb
sahf
enter
mov
dec
ficoms
lock
push
test
push
jbe
lods
jmp
fs
add
pushf
mov
jb
pop
mov
add
pop
dec
fnstenv
jp
repnz
adc
scas
adc
orl
jnp
or
mov
mov
pop
hlt
sbb
jge
cmp
adc
xor
mov
outsl
jmp
jbe
ss
fildll
mov
sub
sahf
or
mov
inc
jae
xchg
fmulp
pop
test
and
inc
pop
inc
push
dec
hlt
mov
dec
in
ret
lsl
loope
imul
dec
nop
add
add
inc
xor
xor
sbb
mov
xchg
pop
cmp
xchg
rcrb
mov
out
outsb
out
movsb
cli
push
faddl
ret
dec
dec
add
aad
jge
add
add
add
add
mov
pop
arpl
imul
adc
fbld
add
add
inc
sbb
mov
stos
mov
popf
lret
jmp
idiv
jbe
xrelease
or
mov
fwait
test
lahf
jnp
fstl
fwait
and
mov
pop
in
and
add
roll
in
xchg
int3
add
enter
mov
enter
fiadds
mov
jo
mov
shrb
jns
adc
jns
dec
adc
mov
loop
insl
negl
arpl
incb
add
loop
mov
mov
sbb
test
int
ss
sti
xchg
jo
subl
fiadds
xor
out
ds
push
inc
xor
add
mov
pop
fsubl
sub
xchg
nop
mov
shrl
xor
sti
or
adc
mov
add
sub
jl
scas
cmpsb
lret
add
xchg
into
cwtl
data16
and
xchg
aaa
jns
push
cmp
xor
dec
xchg
or
mov
data16
mov
mov
insl
lea
jl
and
shlb
lret
add
sub
shll
outsl
add
lds
sub
stos
inc
and
jo
popl
sbb
cmp
fstl
add
scas
subl
inc
bound
dec
mov
pop
data16
ljmp
jbe
add
dec
dec
inc
add
int
fistps
xor
lahf
andb
push
xchg
jae
rorl
mov
arpl
cmp
xor
pop
ljmp
aam
fwait
addr16
add
push
pop
sbb
add
and
add
mov
or
mov
sub
daa
leave
dec
cmp
add
sub
mov
cmp
out
jns
push
repnz
add
les
and
bnd
jmp
sti
add
fs
mull
ds
dec
mov
xor
pop
rolb
sbb
sti
mov
pop
rolb
mov
inc
add
dec
dec
xchg
pop
add
xor
adc
out
pop
pop
loope
insb
inc
and
lret
popf
iret
cmp
add
sub
cmp
mov
test
xor
pop
stos
add
sub
mov
cltd
orl
push
add
mov
adc
pop
outsl
xchg
jo
movsb
or
sahf
push
roll
icebp
faddl
dec
mov
jecxz
jle
or
aaa
sbb
out
push
gs
xchg
mov
inc
arpl
add
adc
inc
mov
add
pop
xor
ss
call
divl
mov
pop
in
scas
push
sbb
loopne
std
push
sbb
iret
mov
and
bound
fadds
push
sbb
mov
cs
xchg
popa
xchg
inc
or
in
and
clc
outsl
dec
lods
cwtl
jl
mov
add
sbb
lods
xchg
adc
mov
aad
into
ds
je
cld
sub
addr16
adc
push
int
mov
mov
in
push
mov
es
into
dec
aaa
ja
dec
inc
jnp
and
xchg
jo
rep
lock
test
imul
shlb
loop
and
cs
pusha
jno
lret
xchg
mov
cmp
adc
lea
or
nop
pushf
shl
or
jle
imul
inc
shr
dec
mov
ud0
pop
cltd
mov
movsb
sbb
pop
mov
push
dec
pop
mov
std
shrl
push
mov
mov
jge
hlt
sbb
mov
jmp
lods
scas
cmp
mov
mov
addr16
and
mov
loop
pop
in
fs
insb
int
add
ret
repnz
inc
dec
iret
addr16
xchg
jo
es
push
jns
add
add
jmp
fidivrs
jns
popf
sub
lret
add
lock
add
lods
pusha
sbb
jb
sub
add
add
aaa
mov
sub
cmc
lahf
mov
stos
test
add
lret
cmp
or
or
fisttpll
add
leave
add
push
add
add
stos
test
lods
shll
sub
push
dec
cmc
rclb
adc
dec
fdivs
addl
add
fsubr
mov
inc
mov
enter
js
fwait
inc
xchg
insl
jb
cmp
sbb
out
push
mov
mov
int3
or
sub
rclb
repnz
insl
adc
pop
jg
cmpsb
push
scas
xchg
jne
mov
and
add
popa
jnp
ret
adc
cmp
mov
test
cmp
imul
gs
xchg
mov
in
sub
sahf
lock
push
or
call
jmp
ret
data16
sbb
in
jg
add
add
add
out
jl
or
cmp
lock
lret
sub
movsb
fs
add
std
mov
mov
jbe
xchg
and
pop
mov
les
add
lods
in
pushf
int3
add
int
cli
push
movsb
jp
add
jmp
mov
inc
cmp
add
fildll
gs
add
inc
mov
add
push
mov
mov
pop
and
cmp
dec
pop
inc
cmp
add
xchg
movsl
inc
in
and
fistpll
scas
fisttps
add
cmp
js
leave
jg
xlat
lahf
and
pop
xchg
xchg
dec
repnz
dec
arpl
test
mov
dec
in
psrad
sbb
pop
add
add
push
jne
andb
xlat
push
hlt
inc
xor
cwtl
addr16
ja
pop
add
add
sbb
mov
pop
fmuls
jge
in
add
jne
fnstenv
subb
test
inc
pop
add
popl
adcl
jno
cmp
pop
jge
push
mov
fisubs
cmp
mov
xchg
out
movsb
mov
addl
mov
pop
jo
jmp
push
fcomp
sub
shl
sti
and
push
mov
insl
pop
out
in
pop
stc
adc
into
add
out
aaa
mov
add
xchg
outsl
jmp
arpl
inc
add
jnp
das
add
jbe
mov
sbb
es
les
add
jp
flds
cltd
flds
jb
loop
mov
fiaddl
add
je
add
add
add
xor
mov
xchg
fld
jo
std
std
pop
inc
out
push
cmp
push
dec
test
push
jbe
clc
cmp
and
das
sbb
lret
cmp
in
xchg
rcrb
add
or
mov
add
call
mov
cmp
add
sub
jae
cld
fucomp
sbb
cwtl
pusha
cmpsl
add
mov
inc
add
jge
call
dec
in
ss
movsl
ja
mov
adc
pop
cmp
add
sbb
and
fs
cltd
loope
cmp
ljmp
add
lock
add
ljmp
sarl
jo
mov
pushf
and
imul
mov
xor
cmpsb
xchg
sbb
xchg
stos
clc
ret
outsb
ret
adc
add
add
or
pop
mov
repnz
pusha
pop
push
add
loopne
fsubrl
repnz
lret
jle
aas
inc
dec
daa
or
and
rorl
push
cmp
sub
es
jnp
mov
mov
fnstsw
sbb
inc
ret
arpl
ljmp
inc
cmp
add
pushf
jne
jo
dec
push
shrl
test
add
xor
mov
cmp
jae
sti
or
repnz
add
addl
stos
into
and
jmp
int
cmp
add
and
xchg
nop
jno
cld
add
insl
jmp
mov
push
add
jge
nop
ret
jmp
adc
into
add
sbb
jecxz
sbb
add
push
js
push
add
loop
test
les
dec
enter
sbb
jnp
leave
pop
and
push
data16
push
sub
add
mov
adc
fstpl
les
mov
les
adc
or
cs
clc
adc
inc
jno
fimull
jo
push
add
add
movb
pushf
push
aas
cld
or
and
jmp
mov
fmull
mov
test
call
add
add
call
push
gs
loope
cmp
add
negb
lock
std
popa
out
in
aam
pop
xor
call
hlt
push
outsb
adc
rorl
add
pop
arpl
mov
in
int
in
or
inc
std
pop
pop
xor
push
adc
inc
bound
icebp
dec
xor
sub
data16
jb
imul
repz
xchg
add
add
mov
cmpsl
add
add
lods
jae
pop
mov
xlat
jns
add
jo
push
add
ficoml
add
xchg
xchg
sub
test
ds
adc
les
add
inc
movsb
cmp
lahf
out
fiadds
or
bound
add
gs
arpl
int
xorb
add
loopne
add
push
mov
jbe
or
scas
repz
add
into
mov
add
add
cmp
mov
daa
add
add
and
pop
or
sbb
and
faddp
in
in
add
push
enter
enter
push
cmp
iret
pushf
add
push
out
mov
scas
push
fisubl
sub
ds
push
insl
andl
repz
les
xchg
outsl
jns
add
inc
into
add
pop
enter
jmp
xor
xor
les
xchg
dec
adcl
adc
pop
pop
rolb
fisubrl
push
stos
movsb
je
push
mov
inc
cltd
inc
sub
xchg
test
inc
jno
outsb
mov
add
lds
xorl
inc
sbb
xchg
flds
push
xchg
mov
lods
add
add
pop
and
inc
lods
into
xchg
insl
xlat
je
mov
lret
dec
data16
mov
xchg
stos
arpl
add
xchg
add
bound
cmpsl
add
mov
jnp
pop
xchg
ds
addl
sub
cld
add
mov
sbb
push
mov
js
dec
or
pop
stos
lods
fstpl
data16
int
add
inc
push
in
mov
jmp
add
loopne
add
mov
xor
in
add
add
add
xor
xor
xchg
roll
insb
sbb
fs
pop
push
call
add
leave
pop
inc
jmp
fstps
insb
mov
add
sbb
in
int3
inc
insb
jno
dec
add
add
ja
sbb
mov
loop
add
cmp
push
add
add
inc
cmc
ljmp
add
add
or
fldcw
fs
mov
adc
sub
push
sub
jne
add
jne
sub
mov
pusha
out
call
mov
xchg
mov
out
jmp
leave
add
imul
aad
add
or
mov
add
adc
stos
in
in
add
subl
add
imul
shlb
adc
add
add
or
faddl
out
pop
cltd
add
adc
add
pop
or
sub
lret
bound
push
loop
inc
incb
add
mov
ficomps
sub
xchg
jae
test
push
push
sbb
push
sbbl
movsl
add
xchg
cltd
mov
push
inc
dec
inc
or
mov
add
out
out
clc
leave
add
mov
popf
adc
add
fiadds
jnp
lret
sub
jae
les
adc
add
fwait
cmp
nop
sub
or
cmc
lret
pop
mov
cld
mov
and
lods
sbb
add
add
bound
out
inc
fistpl
sbb
mov
shl
test
mov
and
add
push
daa
jne
and
and
adc
push
fldcw
mov
cmp
jnp
sbb
int3
inc
sbb
arpl
bound
mov
jbe
imul
cmpsl
es
mov
lret
xchg
mov
inc
pop
pop
xchg
add
pop
loopne
ret
add
je
pop
add
push
test
lret
sub
add
inc
add
leave
dec
push
stos
add
ja
ljmp
and
xlat
cld
imul
daa
jns
fiaddl
dec
mov
sub
dec
enter
outsl
fsubl
jge
mov
xchg
add
fsubs
jmp
ret
pushf
out
add
lcall
test
je
ss
push
fidivs
shlb
pop
sbb
rolb
jo
data16
mov
hlt
add
inc
loope
nop
cwtl
jecxz
or
jl
fwait
sub
add
adc
ret
addb
xchg
mov
adc
mov
ja
mov
cltd
imul
jns
lods
pushf
mov
rolb
out
arpl
or
enter
lcall
mulb
add
jno
in
mov
pop
sbb
xchg
pop
roll
bound
add
cmp
lea
or
sbb
insl
adc
cmpsl
sbb
xlat
mov
jb
add
push
sbb
mov
add
pop
outsb
adc
inc
leave
pop
dec
sbb
loop
add
push
push
mov
add
sub
das
add
fidivrl
int
inc
ds
add
xor
add
data16
and
add
push
mov
and
push
out
cli
sbb
add
cmpsb
add
mov
add
cmc
add
mov
inc
stos
sub
js
add
xor
mov
dec
mov
sbb
cs
ret
out
xor
popf
je
mov
cmp
add
push
add
mov
mov
pop
add
or
sub
xchg
arpl
cli
adc
lds
outsl
add
bound
scas
leave
sbb
lret
movsb
in
out
sbb
or
lods
xchg
popa
nop
lock
inc
lret
mov
sbb
out
mov
insl
or
lcall
add
add
enter
dec
push
add
add
add
add
inc
add
fcom
in
adc
hlt
ret
and
inc
dec
pop
cld
mov
xorl
std
shr
mov
loopne
add
mov
sub
cmp
dec
xor
sbb
xchg
stc
outsl
repnz
aad
pop
push
popa
mov
mov
sbb
cmp
fldcw
add
mov
lods
push
scas
in
xor
fisttpl
add
fiadds
popl
sub
cmp
xchg
js
push
inc
add
push
push
sub
add
stos
cmp
es
loop
lods
aam
dec
xor
and
push
std
dec
push
sahf
sti
lret
cmp
sub
add
mov
movb
jnp
insb
sbb
xor
outsb
insb
loopne
sub
pusha
sub
pop
gs
clc
dec
xchg
out
outsl
or
cmc
dec
pop
and
jmp
xor
mov
inc
sti
or
incb
sbb
cltd
add
pop
add
and
gs
sub
cmc
test
add
sti
mov
add
sub
out
in
fwait
ja
lahf
pop
push
sbb
and
dec
or
jo
cs
js
sub
insl
jbe
loopne
lret
jl
in
mov
mov
or
add
add
int
out
movsb
add
add
push
mov
add
into
and
xchg
or
add
sarb
xchg
pop
imulb
pop
pop
push
sub
loope
add
push
inc
arpl
lods
inc
loop
lods
inc
lods
cmp
lcall
cld
and
pop
mov
jl
imul
pop
inc
dec
jo
movl
add
add
cmp
push
or
xor
xor
jmp
add
add
imul
scas
jecxz
or
add
je
nop
add
adc
mov
sahf
mov
cli
push
add
add
cmp
add
inc
mov
add
sbb
add
push
and
xor
mov
cs
add
test
add
add
lea
add
aas
shrl
xor
enter
fwait
pop
pusha
daa
add
add
popl
add
push
dec
call
inc
mov
lds
add
aad
notl
dec
pop
cli
imul
add
lret
cmp
mov
pop
cmp
add
jns
sbb
inc
lods
adc
add
add
xchg
mov
add
add
ret
dec
add
add
test
mov
add
scas
mov
inc
movsb
pop
fs
cmp
je
cmp
inc
scas
add
lret
scas
mov
add
push
imulb
mov
je
sbb
fs
mov
fsubrl
fsubp
jno
lods
and
jmp
push
dec
shrb
mov
ds
lods
adc
arpl
insl
cmp
js
add
loopne
xchg
shrl
mov
add
ljmp
popa
rcrl
dec
fwait
pop
dec
pop
add
add
mov
dec
loop
pop
pop
lahf
and
movsl
adc
inc
pop
jecxz
pop
fwait
add
add
dec
sarb
push
add
test
cmp
xor
cmc
add
xlat
and
sub
stos
in
mov
pop
arpl
or
add
loopne
add
add
mov
mov
jge
jne
lock
or
add
add
adc
aad
add
push
add
add
mov
mov
add
fucomip
sbb
add
add
mov
add
add
jnp
push
push
sbb
add
add
pop
out
inc
add
xor
add
and
pushf
into
xor
mov
nop
ret
dec
jo
mov
pop
add
add
sub
bound
push
test
mov
ss
push
push
push
mov
fstpl
pop
xchg
mov
test
mov
div
cwtl
add
dec
mov
xchg
pusha
cmpsb
pop
jno
jb
loopne
jo
jecxz
add
sbb
rcr
std
fsubrl
stos
push
cltd
add
push
mov
imul
pop
addb
sub
add
xchg
lea
pop
and
and
inc
sahf
les
cld
les
jne
dec
add
sbb
pop
outsl
mov
addb
add
mov
bound
and
sbb
imul
add
pop
add
push
push
jne
xchg
push
cmp
loope
dec
repz
out
add
xchg
inc
stc
jmp
into
jbe
nop
xor
jns
test
sti
into
daa
mov
mov
in
mov
push
or
push
lods
mov
xchg
inc
fwait
jns
add
mov
add
scas
shlb
mov
nop
jg
repnz
dec
mov
add
popf
pop
call
pop
sub
test
pusha
cmp
jae
sbb
xchg
addr16
jb
inc
mov
je
add
add
pop
addr16
jg
sahf
outsb
out
jle
mov
test
arpl
jns
das
push
pop
ljmp
test
fildll
jecxz
add
add
sbb
test
ljmp
mov
fsub
mov
repnz
call
adc
icebp
adc
outsl
into
movsl
sub
mov
adc
mov
punpckldq
and
add
jo
fmuls
cmp
pop
sub
mov
push
or
jmp
lea
imul
fists
pusha
or
ficoms
cmp
adc
out
xchg
pop
pop
sub
ror
fucomi
cmp
lcall
sbb
daa
imul
add
jg
pusha
int
arpl
dec
arpl
mov
jmp
sbb
mov
inc
push
xchg
pop
mov
xchg
inc
sahf
insl
mov
or
mov
add
mov
fadd
fbstp
cli
rorb
dec
lds
and
or
stc
mov
jge
loopne
pop
and
pop
nop
mov
and
cmpsb
ret
arpl
ljmp
aaa
sub
mov
add
add
jl
jne
outsl
lret
lock
aam
pand
pop
add
add
xchg
lock
fistpll
or
dec
push
add
add
xchg
ljmp
inc
in
add
or
cs
mov
insl
inc
mov
push
jp
add
add
stc
lock
add
dec
inc
mov
add
lahf
insb
cmp
insl
add
add
inc
or
enter
sbb
add
mov
mov
cmp
stc
pop
and
add
add
add
in
cmp
and
lods
test
test
or
les
sub
das
pop
add
fistps
sti
adc
decl
add
int3
lods
pushf
ss
daa
orl
ret
xchg
sub
pop
pop
gs
add
stos
add
dec
add
or
sbb
mulb
fbstp
lods
mov
adc
addb
subl
shr
out
loope
movb
and
das
cmp
mov
leave
push
iret
fists
jmp
rclb
js
movsl
add
mov
data16
add
lret
inc
add
cmp
jae
add
xchg
sbb
rclb
xrelease
push
ss
pop
sti
push
jge
cmc
movsb
add
adc
inc
push
cld
or
add
into
sub
lcall
stos
icebp
test
nop
mov
fisubrl
inc
add
inc
stos
add
das
bound
jecxz
or
or
add
mov
pop
pop
add
add
xchg
icebp
add
sub
ja
cmp
inc
das
add
inc
fld
add
pop
pop
inc
cld
jecxz
cmp
insb
shr
add
test
cli
mov
jge
dec
loop
pop
xchg
ljmp
rorl
mov
xchg
incb
sarl
fistpll
mov
rolb
cwtl
je
xor
ja
mov
push
push
faddl
inc
add
scas
xchg
std
outsb
cmc
sbb
add
add
mov
repz
jne
add
in
sbb
in
add
add
rolb
mov
add
repnz
int3
dec
roll
inc
mov
cmp
push
add
lds
imul
sub
scas
pushf
or
push
push
mov
shlb
add
aam
add
xchg
inc
add
pop
add
test
in
mov
sbb
jbe
inc
add
inc
dec
push
out
cmp
jecxz
jne
add
call
add
add
lock
fmull
in
gs
js
std
lods
pop
add
add
lods
and
jp
movsb
xchg
xchg
cmp
in
fnstsw
inc
outsb
imul
es
iret
mov
stos
mov
sarb
pop
test
icebp
mov
jmp
loop
imul
ljmp
inc
mov
mov
pop
xlat
fld
cmp
dec
inc
adc
inc
mov
add
xor
repnz
inc
add
add
push
cmp
nop
push
fmull
dec
aam
dec
test
sub
xor
dec
pop
test
add
movsb
addr16
push
icebp
pop
sub
aas
ljmp
or
insl
dec
add
sub
mov
jge
outsb
jbe
imul
in
mov
aas
add
add
or
mov
and
in
inc
inc
sti
inc
push
sbb
int3
mov
out
dec
push
into
sahf
insl
test
insb
addl
xchg
or
pop
pop
mov
sub
adc
and
addr16
cld
ret
push
add
xchg
jae
lods
mov
scas
aam
push
cwtl
lahf
mov
js
push
ret
ds
pop
nop
sub
mov
int3
mov
push
xchg
js
ja
and
lret
sbb
add
xor
inc
stos
shl
into
pop
xlat
push
addr16
xor
mov
add
mov
bound
cmp
and
pop
jnp
in
cli
call
fisubs
jae
xchg
xchg
out
cmpsl
lea
sbb
add
cmc
mov
jge
add
movsb
sub
sti
or
sti
lea
stc
mov
jno
in
and
repnz
xchg
pop
insl
jo
std
xchg
lahf
dec
sub
mov
mull
cmp
add
enter
mov
cmc
stos
add
into
jae
xchg
xchg
push
icebp
sbb
add
add
jns
das
xchg
mov
out
mov
mov
cld
adc
popa
mov
jb
lea
push
mov
add
add
clc
nop
push
mov
cmp
add
or
addr16
push
imul
cld
in
dec
dec
pop
in
xor
jp
jecxz
scas
test
out
adc
cld
cmp
adc
sbb
xor
stos
sbb
push
popa
in
insl
push
xor
sti
xchg
inc
and
sbb
scas
in
ds
adcl
mov
dec
movsl
insl
sbb
faddp
mov
fcoml
cld
bound
add
fstpt
fsubl
jp
push
add
std
push
sbb
add
jno
stos
les
add
inc
mov
scas
ret
repz
and
add
leave
inc
add
add
mov
in
or
popl
ret
inc
inc
mov
stos
xchg
or
mov
mov
push
pop
jne
pop
das
leave
mov
lcall
cmp
std
popa
mov
adc
jno
add
mov
js
cmp
cs
lea
add
cs
movsl
pop
add
popf
push
mov
orb
les
mov
cmp
in
pop
ret
and
add
hlt
es
iret
decb
adc
fs
sub
rcr
lret
cltd
push
and
loop
mov
dec
lds
push
movsb
xchg
xchg
cmp
mov
mov
jno
xor
sbb
cwtl
mov
push
mov
xor
ja
and
pop
jmp
xchg
aam
mov
add
xchg
fstps
mov
clc
ljmp
xchg
mov
rcrl
scas
cmp
mov
jb
loop
mov
xchg
sbb
outsl
add
add
rclb
mov
or
lds
add
imul
add
mov
xor
int3
cltd
insl
mov
push
mov
je
cltd
add
add
je
repz
mov
jg
std
cmp
add
jmp
adc
fs
jecxz
arpl
add
pop
adc
mov
push
inc
call
ljmp
push
iret
movsb
dec
mov
sbb
sbb
or
int3
xchg
sbb
out
mov
inc
les
add
adc
cmpsl
in
test
xchg
add
data16
outsl
fdivr
loopne
mov
mov
gs
test
cmp
bound
inc
enter
cli
mov
hlt
or
and
das
loope
add
add
popf
or
mov
pop
in
cli
out
clc
dec
repnz
in
mov
add
jne
cmp
and
mov
fwait
xchg
add
es
hlt
xchg
lods
jmp
in
cltd
pop
insb
mov
push
mov
scas
push
mov
mov
mov
fiadds
jne
out
leave
fmull
pop
add
add
dec
mov
jb
adc
dec
pushf
mov
xlat
in
add
stos
add
add
stos
mov
test
xor
xchg
add
add
sbb
add
sbb
cmp
sub
or
add
in
cmp
mov
lcall
cld
ja
pop
or
fidivrs
mov
push
mov
jecxz
pop
pop
xchg
pop
inc
push
lods
repz
push
cmp
add
imul
jnp
or
sbb
add
push
add
outsl
movsl
push
lods
loope
andb
mov
shl
nop
dec
cmp
mov
fistps
add
add
inc
mov
insl
pusha
ror
or
add
add
orl
stos
mov
loopne
sbb
mov
sub
and
mov
adc
add
push
jnp
mov
pusha
dec
add
clc
and
je
add
add
hlt
and
mov
add
xchg
xor
add
add
rolb
adc
outsb
cmp
nop
data16
ljmp
insl
test
insl
lods
pop
jne
xlat
inc
fnstenv
inc
leave
rorb
cmpsl
cmp
mov
inc
cmp
test
imul
add
mov
subb
add
aam
xor
inc
jg
sub
pop
clc
xor
cmpl
cmpsb
in
int3
fisttps
ja
int3
sbb
add
dec
and
xchg
adc
fldl
iret
add
mov
pop
faddl
add
out
or
sbb
call
or
mov
jns
or
sbb
sbb
faddl
sbb
outsl
mov
add
add
mov
into
subps
push
insb
mov
sbb
filds
pop
loope
cmp
and
add
jecxz
add
je
or
out
jbe
shl
fisttps
daa
adc
sti
enter
ss
lahf
jg
clc
cmpsb
jge
test
addr16
dec
mov
mov
lcall
loop
leave
fdivrp
xchg
rcrl
dec
imul
loope
je
or
loope
js
mov
in
int
es
pop
cli
andl
push
jns
xchg
add
add
loop
rcrl
push
movsb
out
inc
pop
sub
test
int3
push
dec
leave
loopne
xor
lret
fisubrl
test
ss
jp
ds
add
jl
add
ja
inc
cmc
mov
and
push
mov
jg
movsb
jmp
repz
xor
push
fistpl
or
cmpsl
leave
push
ljmp
push
cs
push
in
push
cmpsl
pop
mov
mov
ret
in
xchg
out
mov
bound
pop
out
add
add
sub
mov
add
aaa
cmp
pop
add
or
sarb
in
mov
std
notb
or
roll
mov
orb
mov
dec
xor
jl
lea
xchg
pop
sti
stc
pop
fnsetpm(287
imul
into
rolb
shlb
sub
testl
mov
fcoml
pop
and
mov
push
xchg
add
add
add
pop
sbb
loop
cmpsb
iret
jp
popa
sbbb
and
cmc
fdiv
std
test
push
dec
mov
xor
movsl
cmp
jne
pop
mov
inc
call
fcoml
sub
sbbl
xchg
cmc
and
push
ds
sarl
pop
sub
pop
cmp
dec
scas
jb
arpl
xor
inc
sbb
repnz
test
push
and
sbb
rep
ret
cmp
addb
into
lods
cmpsb
cltd
and
jmp
jne
aad
add
movsl
mov
or
stos
cld
scas
cs
popf
xor
xor
lock
add
or
adc
clc
xchg
pop
imul
lcall
mov
pop
lea
add
add
aaa
sbb
push
add
les
fmull
mov
pushf
lock
inc
cltd
negb
lret
or
in
cs
loope
daa
add
outsl
jle
ja
or
add
ja
add
push
clc
scas
imul
pop
sub
popf
ja
test
add
push
out
xchg
pop
out
sbb
xchg
int3
lret
pop
loop
in
add
and
aam
les
scas
sbb
mov
add
stc
popf
push
xchg
xlat
mov
cltd
sbb
add
or
inc
add
aaa
inc
xchg
cmp
dec
iret
add
inc
clc
sbb
add
jecxz
icebp
bound
gs
add
mov
dec
ret
mov
and
and
add
jno
sbb
mov
mov
sub
arpl
add
and
inc
nop
popa
push
xchg
xchg
mov
inc
cwtl
and
in
add
push
sub
mov
add
lods
cld
rcrb
add
pop
mov
add
add
push
jle
jnp
fcoml
sbb
or
xor
shrl
fstpt
add
add
mov
out
mov
sub
or
add
movsb
movsb
xor
add
add
mov
add
push
mov
loop
sbb
pop
push
add
xchg
add
movsb
mov
mov
fwait
int
sahf
cli
add
movsb
faddl
sbb
sbb
add
xchg
push
push
repnz
data16
push
loopne
and
add
mov
jo
fmul
mov
lods
add
enter
pop
push
stos
inc
filds
and
and
bound
cli
add
test
mov
les
push
xor
jbe
std
inc
pop
div
inc
cmp
sub
je
or
rcrl
jmp
and
cmc
test
pop
mov
lea
dec
sbb
mov
fdivl
jns
leave
push
jae
inc
xor
add
ds
jno
dec
jne
out
mov
pop
add
rcll
loopne
test
in
mov
add
add
xchg
ja
and
adc
aad
movsl
neg
add
pusha
popf
jb
cmp
lea
subb
add
dec
lock
inc
ss
pop
pop
add
data16
aaa
sbb
adc
jle
xlat
frstor
dec
negb
outsl
push
loop
das
cmp
shrl
popa
lahf
inc
scas
fstps
xchg
in
mov
sub
xchg
ret
scas
fistl
jp
pop
cli
xchg
xchg
int
push
out
dec
insb
xor
add
popa
outsb
xchg
pop
xlat
js
dec
inc
int
scas
hlt
sti
cld
add
mov
cmp
lea
adc
mov
in
insb
divl
or
gs
add
mov
jo
sbb
add
jle
hlt
mov
popa
out
mov
pop
xchg
add
and
mov
pop
andl
flds
cmp
mov
imul
mov
fcoml
rcrb
bound
loope
mov
push
repz
jb
sbb
leave
sbb
jecxz
dec
mov
dec
das
inc
leave
iret
mov
xor
pushf
loopne
es
sti
cmpsb
xchg
loope
push
mulb
cli
add
push
jmp
add
push
nop
mov
jne
sahf
lret
and
cld
iret
lods
out
loop
mov
mov
cmp
mov
lcall
aaa
add
sbb
dec
adc
jge
std
fsubs
add
sahf
lret
xor
lea
fisubrl
cmp
add
ds
sub
imul
adc
or
mov
adc
cli
add
cmp
lods
ss
mov
addb
add
add
cmp
ds
outsl
out
add
add
cs
mov
sbb
push
push
cwtl
jo
add
test
and
add
dec
jmp
add
stos
jbe
std
test
add
add
scas
xchg
add
int3
pop
sbb
inc
daa
pop
mov
dec
mov
movsb
rorl
mov
jb
mov
xchg
or
frstor
jae
lea
jne
loope
jne,pt
clc
jne
add
and
pop
push
int
loop
scas
inc
scas
les
into
xchg
mov
lods
jo
inc
mov
fsub
mov
adc
aad
sbb
in
clc
shr
lods
test
outsb
sbb
add
dec
call
shlb
and
iret
push
scas
push
shlb
or
popl
add
jle
cltd
jge
negl
leave
xchg
inc
call
cld
fdivp
mov
leave
jne
add
cmp
sarl
mov
loop
cmp
mov
inc
mov
adc
sarl
lock
mov
fistl
xchg
adc
daa
jo
mov
mov
cltd
ret
jp
pop
push
xchg
xchg
sub
loop
mov
adc
add
add
std
addr16
xchg
sbb
inc
mov
lods
or
dec
mov
xchg
insl
push
mov
add
repz
add
and
hlt
pop
ljmp
jns
mov
outsl
add
fldcw
add
xchg
dec
shr
push
and
ja
cmp
cmp
mov
adc
jl,pn
pop
push
std
js
pop
add
add
aas
push
loop
add
mov
mov
add
scas
int
cmp
std
lret
jg
int
sbb
sbb
add
lods
xchg
adc
scas
jmp
test
sar
out
gs
mov
jo
andw
mov
sub
push
mov
nop
and
lea
test
in
inc
add
jnp
pop
pop
add
sub
cltd
cs
ljmp
cmp
add
fmull
mov
adc
out
inc
fistpl
ds
int
nop
jmp
xor
test
out
ja
bound
fsubr
cmp
std
in
into
sub
cmp
jmp
xor
adc
add
pop
pop
imul
and
call
push
or
sbb
aaa
cld
sbb
fs
pop
je
call
lods
movsl
pusha
sbb
mov
mov
in
fldl
cltd
movsl
nop
test
add
add
lods
sbb
sub
addl
sbb
jmp
mov
in
add
loop,pn
xchg
popa
icebp
adc
add
fstp
out
xchg
inc
add
push
push
loopne
or
pop
inc
cmpb
jo
fimuls
adc
push
add
add
outsl
arpl
lods
bound
cmpsb
push
mov
xchg
and
pushl
repz
lods
aad
sbb
inc
cmp
fisubrs
push
push
out
add
test
ja
adc
mov
pop
inc
jbe
dec
mov
add
add
int3
push
out
cmp
inc
and
lods
sarl
in
fs
sbbb
push
add
add
xchg
jae
or
test
bound
jae
pop
imul
fildll
add
adc
enter
xor
sarl
scas
in
add
pop
lret
add
add
pop
std
fsubp
aas
cmp
mov
and
lahf
lcall
pop
pop
lahf
cmp
mov
jne
dec
nop
popa
imulb
add
mov
mov
mov
lret
dec
sahf
les
call
ja
inc
push
ret
popf
adc
jo
fimuls
data16
lret
xchg
test
bound
push
push
sbb
test
stos
xorl
les
or
push
mov
jecxz
ret
mov
inc
xchg
stos
das
cli
push
xor
add
xchg
xchg
pop
flds
ret
lea
movsb
mov
fcmovnu
cld
lods
or
inc
jne
jecxz
sub
or
leave
mov
xchg
add
dec
pop
addl
in
sub
subl
pop
mov
push
push
add
jp
ds
add
push
bound
or
pop
xor
stc
ljmp
aad
cmc
mov
jns
cwtl
repnz
movsb
out
imul
pop
xrelease
jnp
pop
testb
lds
dec
sarl
orb
jmp
sbb
mov
jmp
repnz
add
xor
mov
insl
and
add
jl
push
xchg
add
mov
and
inc
jl
cld
add
mov
in
test
lods
enter
inc
sbb
inc
leave
mov
ss
sbb
cmp
jecxz
add
cmp
test
xor
repz
lahf
imul
addr16
nop
lahf
push
xchg
outsl
call
shlb
fstpt
movsl
cmpsb
int
out
lods
popa
adc
mov
cld
cwtl
js
bound
mov
pop
in
add
add
xchg
sub
dec
repz
out
jg
xchg
cmp
xor
push
or
mov
outsb
ss
aam
cmc
mov
orl
es
pop
shrb
jnp
dec
je
sti
aam
lret
sbb
cmp
setbe
mov
jl
add
push
xor
add
push
sbb
jns
je
push
inc
push
xor
and
dec
add
int3
mov
cmp
imul
mov
mov
and
roll
xchg
push
xor
mov
ja
jbe,pn
fucom
call
mov
cmp
lods
cltd
cmc
cmp
fistpll
mov
dec
outsb
sbb
mov
pop
jo
mov
xchg
push
push
outsb
jne
popf
cli
mov
cli
adc
adc
div
push
mov
je
mov
adc
and
xchg
in
cmpb
outsb
imul
fwait
dec
dec
jnp
mov
pop
ds
sbb
inc
ja
pusha
adc
cmp
mov
xor
mov
ss
jo
push
xlat
cmpsb
shll
jmp
jns
sar
mov
xchg
jmp
sbb
hlt
leave
cld
add
sub
xchg
add
add
and
add
sti
nop
daa
xlat
push
mov
test
xor
loope
and
fs
sbb
pushf
mov
jb
push
insb
push
fists
push
test
out
or
pusha
or
test
pop
jae
lea
add
insb
add
adc
push
loop
je
f2xm1
imul
mov
call
push
test
and
jl
add
stos
and
mov
imul
outsl
insl
testb
mov
test
add
dec
jo
movl
enter
xchg
adc
sub
lds
int
jns
lcall
cmp
or
hlt
hlt
pop
dec
cmp
dec
mov
bound
les
mov
popa
sti
or
jnp
ljmp
mov
fmuls
inc
add
jg
xor
add
lea
sub
xchg
insl
ljmp
cltd
push
cltd
add
lret
pop
fcmovu
sbb
fs
pop
jb
out
or
mov
inc
jmp
into
in
pop
cld
push
push
ds
mov
mov
push
adc
data16
mov
out
shll
cmc
pop
sub
cmp
mov
scas
xchg
mov
cli
lahf
jg
and
mov
push
pop
jg
jmp
xchg
jecxz
mov
mov
mov
fstps
jp
jo
xor
mov
fidivs
out
pop
incl
add
popf
jbe
cmp
add
stc
dec
add
test
mov
add
push
lcall
add
add
inc
xor
sahf
jmp
add
add
push
roll
add
sar
stos
inc
sti
inc
test
add
in
fldcw
add
add
sbb
ds
add
lods
xchg
js
add
add
add
loope
push
push
loop
sbb
add
icebp
ss
rorb
xor
insl
btr
ja
in
nop
adc
dec
xchg
mov
sbb
lahf
push
xchg
mov
mov
jns
cmp
or
cmp
fucomip
push
scas
and
movsb
add
pop
movsl
xor
into
and
popf
mov
mov
lcall
adc
mov
jge
fcmovb
add
mov
stos
in
lock
push
adc
sbb
sti
clc
stc
test
fnstcw
dec
adc
add
insl
sbb
mov
add
out
daa
imul
add
stc
pushf
pop
hlt
xor
mov
icebp
sub
xchg
test
mov
imul
pop
xchg
dec
add
mov
je
xor
cmc
inc
test
jbe
in
push
mov
add
fimull
in
dec
stos
cmpsl
dec
jb
cmp
add
adc
nop
add
cmp
scas
push
sti
out
dec
adc
xchg
or
inc
gs
dec
mov
imul
repnz
add
test
xor
mov
jmp
and
add
mov
mov
or
shrl
pop
fidivrs
jle
in
std
mov
xchg
jecxz
loopne
test
ret
scas
ds
add
add
sub
fidivl
jbe
mov
gs
add
sub
cltd
and
hlt
pop
mov
daa
mov
out
adc
clc
push
and
mov
jnp
mov
dec
mov
fistl
and
lods
bound
rcll
push
or
adc
mov
inc
sahf
imul
dec
movsl
adc
andl
nop
dec
fildl
ja
or
xchg
movsb
rclb
dec
mov
in
cmp
andb
hlt
pusha
push
mov
add
add
cmp
pop
push
mov
push
mul
fsubr
cmpsl
add
dec
jl
mov
out
dec
mov
jno
fidivrs
cwtl
add
add
xchg
adc
jmp
inc
mov
add
add
add
sbbl
mov
add
fld
int
pop
add
cmp
test
pusha
cmp
sarl
jbe
lea
lods
inc
loop
scas
fstp
dec
xor
and
pop
or
stos
out
cmpsl
outsl
inc
pop
testl
add
push
sub
fmuls
movsb
lret
mov
xchg
mov
jmp
jno
filds
test
out
xor
nop
out
or
dec
inc
out
inc
sbb
mov
fldenv
push
add
cmp
add
jle
add
ja
add
sub
cmc
add
std
push
add
mov
add
push
sbb
xchg
daa
mov
loope
jns
add
loop
push
and
mov
out
iret
outsl
pusha
push
clc
lret
jecxz
or
loop
push
add
add
imul
push
js
test
sbb
vunpckhps
nop
std
cld
add
cli
inc
add
lods
inc
sbb
cwtl
imul
xor
xchg
out
inc
pop
incb
sbb
mov
add
in
js
std
lock
popa
or
inc
lods
cmp
lcall
adcl
add
std
mov
and
fwait
js
sub
mov
sbb
pop
add
pusha
jg
mov
jecxz
mov
add
mov
sahf
add
add
cmp
mov
sub
mov
mov
sahf
cwtl
ja
add
mov
mov
add
or
mov
int3
sarb
xor
and
mov
mov
add
fs
push
and
outsl
mov
cmp
and
adc
lcall
stos
cmp
insb
icebp
sbb
psubq
and
xchg
imul
cmpsl
pop
sahf
pop
jno
cwtl
xchg
loope
add
mov
mov
sub
loopne
fisubrl
jae
push
lods
jbe
out
add
bound
jg
xchg
push
jo
jle
push
sbb
mov
pop
inc
add
add
aas
jge
cmc
sbb
push
add
mov
add
test
sahf
subl
fldcw
inc
out
fs
fs
loope
and
jb
sbb
add
cmp
lahf
je
jecxz
mov
cmp
es
leave
sbb
loope
in
add
add
lock
insl
addr16
fdivl
adc
add
mov
or
add
jmp
movsl
xor
fisubrl
and
adc
add
in
dec
add
hlt
dec
cmp
pop
pop
out
and
mov
lods
aam
mov
adc
rcll
dec
lods
xor
push
push
mov
daa
adc
inc
pushf
push
add
int
das
sub
add
add
cmp
add
add
add
ret
aaa
jp
add
iret
add
movsl
hlt
daa
mov
add
clc
lock
add
imul
mov
add
xor
out
xchg
pop
add
inc
add
add
mul
fadds
ljmp
add
pop
or
movsl
and
cmp
add
inc
add
in
icebp
aam
mov
dec
dec
movsb
inc
add
add
dec
pop
mov
add
into
in
push
cmp
rorl
daa
push
xchg
mov
add
clc
rcrb
sbb
push
inc
add
insl
popa
call
loop
leave
pop
mov
and
mov
sub
or
add
jmp
cld
cli
xchg
in
ret
sbb
mov
pop
add
hlt
mov
fstp
add
or
test
jae
add
add
dec
add
ja
jne
mov
add
xchg
dec
dec
pop
push
in
or
mov
add
sbb
add
and
mov
lahf
xchg
adc
ror
pop
mov
mov
push
test
shl
add
add
add
mov
das
pop
pop
lea
add
pop
jp
int3
loopne
popa
fs
lret
lahf
ljmp
add
sbb
outsl
add
lods
insb
inc
jno
add
add
sarb
mov
dec
xchg
loop
mov
int
out
iret
es
jb
jns
dec
push
fldenv
in
data16
xchg
out
add
jge
scas
push
add
adc
inc
outsb
pop
pop
add
add
push
adc
mov
add
add
out
adc
in
es
add
add
xchg
ss
js
dec
repnz
enter
add
js
inc
mull
add
mov
rcll
aad
add
mov
xchg
mov
dec
sub
mov
inc
push
scas
sbb
nop
sahf
mov
jmp
dec
aad
out
test
in
lret
add
mov
xchg
xlat
jp
sbb
xor
add
add
xor
xchg
xorl
mov
sub
push
sub
aam
mov
out
pop
jmp
mov
add
add
dec
sub
mov
int3
or
sub
mov
insb
sbb
jp
adc
push
cmp
jo
sbbl
mov
jecxz
push
add
or
dec
insb
or
jo
out
jl
xor
xorb
or
movsb
xor
mov
pop
jo
lret
and
dec
push
sbbb
mov
lea
xor
sbb
addr16
hlt
adc
leave
lret
call
sub
nop
rolb
add
and
mov
cmpsl
xor
fcom
hlt
sub
inc
adc
add
lds
jae
pop
cwtl
sub
shlb
mov
int3
pop
or
sahf
push
in
ret
or
iret
rolb
add
in
pop
mov
stos
xchg
xor
push
jb
xchg
add
sbb
fucom
in
adc
inc
dec
or
sbb
add
jmp
negl
outsl
lret
jne
clc
lret
xorl
adc
dec
mov
insb
stc
jb
lcall
adc
xchg
icebp
push
dec
gs
fneni(8087
mov
inc
insl
add
jle
cltd
xor
or
sarb
in
or
xor
ret
enter
mov
pop
or
subl
inc
xor
pop
xor
add
inc
sub
xchg
popa
out
mov
fwait
jbe
ja
jb
add
xor
fcomps
in
xchg
xor
add
fidivl
or
xchg
cltd
dec
addr16
add
sub
jge
add
add
jmp
pushf
push
mov
iret
ret
or
js
pop
mov
add
xchg
push
test
push
leave
jne
fldt
xor
lret
xor
mov
add
xchg
adc
inc
aas
popf
xchg
popf
mov
ret
into
inc
mov
adc
cwtl
jne
xor
mov
imul
add
add
mov
repz
lds
lcall
jb
popf
sbb
cs
enter
ds
stc
les
shl
add
fadds
int
aam
test
movsb
or
cmp
dec
jecxz
or
mov
xor
add
sbb
sbb
add
sbbb
push
add
sbb
pop
or
sbb
into
add
mov
in
push
out
cmp
add
jmp
and
cmp
cmp
roll
in
pop
cmpb
pop
xchg
test
rcrl
gs
repz
jle
mov
sbb
hlt
xlat
outsl
mov
adc
dec
in
adc
cmp
movsb
dec
repnz
push
add
and
push
js
int
pop
adc
add
test
stc
ja
inc
loop
push
mov
out
add
es
inc
cmp
push
pop
mov
xchg
out
sbb
nop
sbb
das
push
pop
jecxz
cmp
in
dec
jmp
ret
adc
in
push
js
jnp
mov
mov
push
push
adc
push
jg
pop
int3
inc
mov
mov
pop
inc
pop
sbb
cmpsb
inc
pop
cld
js
add
mov
popf
test
adc
add
into
xchg
inc
inc
addr16
jmp
scas
xchg
outsl
xchg
aad
in
add
lcall
and
add
add
pop
jno
loop
dec
ret
or
in
fnstsw
add
push
imul
add
cld
mov
sbb
loop
fs
aad
aaa
mov
dec
repnz
call
pop
bswap
add
inc
sbbb
shr
add
and
sub
jecxz
add
test
push
push
aaa
xor
inc
xchg
or
in
dec
negl
dec
cs
addr16
fcoml
inc
push
pushf
fnsave
sbb
sub
data16
add
sarl
sbb
repnz
push
jle
pop
add
lock
icebp
popa
out
in
aam
pop
orb
add
mov
mov
lcall
mov
pop
dec
or
mov
cmpsl
jbe
add
adc
add
inc
inc
mov
or
add
pop
iret
loope
or
add
push
outsb
shll
repz
add
add
dec
out
inc
fistl
push
mov
jno
xchg
cmp
jle
ret
xchg
out
ficoml
dec
imul
sbbb
les
add
dec
arpl
lahf
xchg
mov
add
jmp
mov
or
shll
add
pop
push
and
imul
mov
ret
sub
pop
mov
add
and
loop
mov
loope
jmp
bound
and
arpl
jl
add
pusha
js
ds
adc
mov
jmp
mov
fstl
inc
test
add
pusha
pop
xor
push
jb
fcomip
xchg
daa
addr16
push
add
stos
and
insb
add
dec
daa
xlat
lods
add
jmp
sub
lods
add
sahf
push
xchg
ds
sub
fmulp
lret
cmp
pop
push
jnp
inc
add
push
adc
jmp
add
pop
push
stos
jp
incl
dec
push
sbb
jno
decb
loope
pop
add
add
sbb
pusha
lret
adc
dec
cld
aad
cmpsl
jo
in
jne
icebp
add
add
add
test
mov
pop
ds
cld
add
lret
dec
stos
mov
pushf
js
jle
dec
inc
dec
or
mov
popa
pushf
xlat
mov
popa
les
and
in
adc
jns
movsb
shrl
mov
dec
adc
add
dec
cmp
push
js
mov
jecxz
xor
scas
sbb
dec
lods
xchg
jmp
jg
add
mov
add
pushf
add
daa
inc
push
cmpsb
push
dec
aam
scas
scas
inc
fsubs
das
sub
mov
mov
cmp
dec
aaa
fucomip
xor
cmp
lcall
dec
stos
imul
xchg
enter
xlat
movsl
dec
cmpb
fwait
dec
jl
xchg
pop
stc
cmp
xlat
mov
dec
fwait
or
sbb
shlb
mov
jns
cmpsl
es
test
dec
arpl
jp
mov
lret
fstpt
add
jbe
fsubrs
sub
imul
lret
and
add
pop
or
int3
les
add
ja
mov
faddl
out
sahf
xor
imul
pop
xchg
mov
scas
lds
mov
add
push
jae
lods
mov
xlat
mov
cmp
xchg
stos
xchg
mov
lods
imul
cmp
test
movsl
inc
lea
pop
fsubp
push
or
sub
pop
arpl
imull
call
mov
imul
xchg
scas
mov
adc
mov
add
sub
cmpsb
xchg
adc
and
ss
pop
bound
pop
inc
int
pop
fildll
cmc
sbb
add
xor
add
pop
mov
lret
add
add
andb
nop
out
out
repz
movsb
cmpsl
mov
add
cmpsb
inc
xchg
sti
xor
dec
lods
add
add
xchg
pop
divb
lods
sub
popf
rorb
ja
lea
addb
pop
push
imul
jg
lods
pop
clc
add
sbb
out
pop
nop
rorb
xchg
dec
or
cmp
adc
insl
mov
cltd
pop
in
mov
loope
mov
inc
ror
mov
rol
mov
sbb
test
mov
lods
pushl
jp
xchg
sbb
and
mov
cmpsl
subl
add
sbb
add
cmpsl
add
clc
add
xchg
add
sub
add
mov
add
orl
add
pop
add
add
outsb
add
add
mov
add
pop
enter
hlt
add
insb
cmp
in
push
add
jmp
enter
std
add
lods
popa
add
inc
inc
add
sub
add
mov
pushf
adc
add
test
divl
add
and
add
add
aas
test
dec
add
mov
insl
add
leave
repnz
sahf
add
add
bound
cmp
jle
gs
inc
add
test
add
add
add
dec
add
mov
add
adc
fldl
into
mov
or
add
rsqrtps
imul
outsl
add
incb
mov
leave
add
add
add
add
push
sbb
push
add
pop
add
and
mov
cli
xchg
xor
sbb
add
inc
and
pushf
cmc
adcl
add
add
jg
imul
cli
mov
add
hlt
xor
mov
add
int
loope
xchg
mov
cmp
in
in
mov
das
sahf
dec
jb
test
sub
cmc
push
das
cmp
mov
lea
sbb
xchg
sub
mov
lahf
sub
scas
movsl
pop
hlt
cs
adc
leave
or
in
mov
jmp
dec
popa
adc
mov
mov
jno
push
std
inc
xchg
repnz
es
push
cmpsb
push
push
enter
repnz
mov
call
add
add
add
aaa
pmullw
leave
xor
and
mov
cmp
push
stos
pushf
dec
lods
or
dec
xor
and
outsl
bound
and
mov
xchg
mov
sub
gs
sbb
nop
rolb
imul
lahf
xor
shll
sbb
sbb
jne
shlb
pop
or
or
add
test
jmp
lahf
ffreep
leave
xlat
roll
inc
xchg
mov
int
std
repnz
mov
shll
push
leave
and
xchg
dec
imul
ficomps
and
jle
cltd
dec
lods
push
cwtl
iret
outsb
push
test
and
adc
and
xorb
fildl
sub
ja
adc
loope
iret
pop
xor
jmp
inc
pop
inc
leave
fmuls
in
mov
bound
add
inc
pushf
outsb
dec
stc
cli
pop
and
sub
movsl
outsb
add
add
push
repz
iret
xor
mov
sbb
push
mov
mov
ret
shrb
mov
fisubs
rcll
mov
mov
add
push
cmp
jo
jb
sub
add
add
add
add
aad
cmp
mov
push
adc
jno
dec
in
xchg
xchg
int3
addr16
test
xchg
mov
aas
or
aas
fdivs
test
adc
push
xchg
int3
and
into
aam
fcmovnb
fs
jmp
or
push
test
lods
sti
xchg
xchg
mov
mov
clc
call
dec
add
inc
shrl
adc
repnz
mov
fwait
inc
xchg
daa
popf
movsb
js
mov
into
add
imul
cmp
dec
mov
pusha
inc
hlt
test
out
and
sub
jl
sbb
xor
add
add
pop
outsb
add
test
adc
clc
icebp
in
in
jno
paddsb
jae
mov
add
dec
or
movsb
pop
xchg
pop
mov
add
add
int
xor
in
stc
mov
frstor
jmp
ret
push
stos
mov
xchg
addr16
adc
shlb
jae
push
imul
mov
aad
out
jns
incl
add
add
jne
xchg
fs
rcll
mov
fimuls
or
pushf
push
clc
jge
xlat
sti
mov
add
add
push
or
adc
int3
pop
mov
fistps
scas
out
pop
cwtl
clc
push
mov
sbb
sbbb
clc
scas
dec
clc
mov
and
out
add
add
or
adc
shrl
das
aas
xlat
dec
fnstsw
xchg
jbe
lods
jae
xchg
dec
stos
dec
nop
subl
andb
stos
xchg
loop
add
add
sub
push
mov
dec
pusha
lods
and
mov
sarl
xor
sahf
inc
outsl
out
pop
ja
add
add
sbb
fidivs
stos
ljmp
js
repnz
pop
cmp
inc
add
in
mov
hlt
adc
add
add
test
jmp
hlt
les
jg
and
mov
cmp
push
out
icebp
jle
xor
fsubs
cmp
nop
roll
mov
mov
jg
shrb
push
pop
sub
or
xchg
fmul
sub
mov
lea
int3
and
push
rcrb
in
dec
jmp
mov
and
push
sbb
in
and
into
xchg
adcl
or
addl
out
clc
testb
ja
mov
popa
lea
fildl
mov
shll
pop
in
or
xor
imul
mov
popa
mov
push
lods
rolb
in
mov
add
sarl
add
add
sbb
fisttpll
pop
jb
enter
pop
popa
add
fisttpll
mov
stos
stc
push
xchg
jb
xchg
addb
jg
pop
pop
les
dec
enter
mov
push
shlb
daa
pop
mov
jle
and
mov
add
test
xchg
xor
inc
and
push
cmp
jmp
idivl
xchg
sbb
and
push
clc
lcall
add
nop
sarb
xor
shlb
sbbl
lock
mov
pop
jbe
or
les
movsb
add
aaa
xchg
add
add
fstps
cli
pop
cwtl
testb
sbb
mov
add
enter
loope
and
fwait
cmp
les
jo
xchg
ret
push
mov
add
add
dec
add
popf
mov
add
add
add
xor
add
add
add
jg
add
add
add
jb
add
adc
add
add
add
add
add
add
add
testl
add
jg
add
or
add
add
add
rolb
add
add
add
incb
add
cli
add
add
add
add
cmp
add
add
jecxz
and
rol
idivb
xchg
adc
add
std
add
add
add
imul
add
add
add
add
add
add
add
jmp
sbb
inc
or
ficoms
add
cli
testb
in
mov
pop
cmp
add
btl
push
sbb
and
addl
ljmp
mov
mov
xchg
pusha
jg
int3
xlat
and
cwtl
lahf
popa
adc
cmc
push
incb
dec
xor
jo
jae
dec
jo
cld
scas
rcr
mov
add
add
xchg
inc
add
inc
rcrb
pop
test
add
pop
adc
mov
or
sbb
hlt
mov
adc
into
sbb
mov
mov
mov
add
add
mov
add
xchg
dec
fs
mov
xchg
test
divb
or
lods
mov
pusha
xor
jb
or
aad
xchg
jae
stos
push
jp
lea
lds
mulb
mov
xchg
test
sbb
test
aam
adc
pop
scas
cmp
ds
jbe
sbb
jmp
pop
jno
sarl
pushf
int
cmc
out
mov
add
add
dec
add
add
test
add
add
add
enter
pop
add
mov
add
add
add
add
add
add
dec
add
testb
add
add
add
add
add
add
add
jno
int
ss
add
add
add
jne
jbe
add
add
jecxz
pushf
add
add
fiaddl
mov
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
lahf
add
scas
add
add
stos
add
add
lock
mov
push
add
mov
add
add
add
add
adc
mov
jno
sbb
add
les
add
les
out
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
movsb
add
add
movl
jno
pop
add
stos
add
add
add
call
pushf
sbb
out
push
add
enter
jns
popa
sub
push
cltd
dec
repz
outsb
adc
test
pop
aaa
sbb
add
add
ds
daa
imul
mov
repnz
outsl
popf
mov
subl
and
aad
je
inc
das
xor
outsl
push
push
ds
fsub
adc
add
add
add
inc
add
xchg
add
add
add
add
add
inc
add
push
add
add
roll
cmp
add
add
mov
add
pop
add
add
add
aaa
add
push
add
add
add
add
add
int
mov
add
mov
add
bound
loop
jge
pushf
add
push
fcmovbe
out
in
add
in
jo
inc
ljmp
cmpsl
add
pushf
sub
lcall
mov
push
lods
add
lea
inc
adc
pop
cli
and
cli
movsb
mov
dec
pop
mov
iret
sbb
enter
and
cmp
out
or
insl
lret
repz
std
jp
bound
mov
repz
outsb
push
cmpsb
jp
stos
insb
pop
aaa
add
add
popf
or
out
pusha
xor
pop
nop
fdivrp
sbb
push
adc
imul
test
add
fsub
mov
push
clc
popa
pop
test
repnz
or
mov
incb
shrl
mov
xlat
daa
enter
mov
pop
pushw
mull
adc
dec
xorl
dec
out
sub
out
sbbl
push
dec
lods
xchg
mov
xchg
jae
adc
loopne
in
js
stos
insl
ss
jmp
mov
out
test
sbb
nop
orb
mov
lret
test
lret
int3
test
mov
scas
loop
mov
jae
sub
fs
frstor
xlat
inc
xchg
and
push
inc
movsb
mov
pop
push
test
push
stos
xchg
mov
subb
out
shlb
cmp
insb
fiadds
and
adc
fidivs
sti
aam
call
add
adc
stc
pop
imull
hlt
add
stos
xlat
push
into
ret
dec
jb
fnsave
outsb
adcb
ss
dec
mov
pop
mulb
scas
xchg
mov
jae
pop
or
movsb
jne
jnp
inc
sbb
mov
xchg
and
mov
imul
hlt
and
scas
rcll
adc
stc
xchg
pop
jmp
push
dec
lods
xchg
or
or
jmp
fs
clc
mov
in
mov
stos
je
jecxz
shrl
xor
outsb
sub
mov
enter
dec
or
cmp
add
bound
push
repz
test
in
loope
cmp
test
push
test
xchg
ja
xor
sbb
sbb
ficompl
push
or
lahf
in
mov
pop
test
outsl
pop
cmpsb
push
push
xchg
inc
test
movsb
jb
push
add
sbb
and
sub
mov
popf
xchg
jnp
jns
pop
jb
xchg
sub
dec
inc
in
push
inc
iret
cld
push
pop
mov
call
lcall
ds
fnsave
fisubrl
dec
loopne
or
lea
add
jns
orb
xor
jno
in
test
push
jp
aaa
fcompl
push
mov
dec
in
cmp
lods
in
pop
and
andb
lret
xlat
out
lock
or
insl
outsl
push
test
out
fsubl
daa
imul
ret
cmp
filds
and
loopne
xor
and
mov
xlat
es
ds
xor
lock
scas
orl
adc
sub
sbb
pop
push
in
out
in
mov
and
add
xchg
jmp
jo
mov
je
mov
dec
mov
adc
inc
add
add
jns
lret
ss
jae
sub
movsb
fwait
inc
jmp
js
add
les
js
out
add
add
data16
add
and
add
lods
inc
push
test
add
shrl
mov
xchg
push
int
add
add
push
cmc
popl
xor
sub
mov
jmp
add
clc
cmp
dec
add
add
shlb
push
adc
add
lock
addr16
mov
int
scas
xchg
push
push
add
rolb
testb
and
flds
pop
add
add
and
and
mov
sub
data16
fsubrs
add
popa
adc
mov
aaa
lock
lret
add
lahf
aam
xchg
in
add
add
incl
fadds
add
fincstp
hlt
xchg
test
sub
stc
mov
add
fcomip
insl
iret
mov
add
adc
mov
push
nop
rolb
out
es
add
adc
add
aam
add
lds
add
dec
mov
mov
xor
mov
push
add
add
add
xor
sub
jne
xor
pop
inc
jp
lret
xor
dec
lahf
incl
fiadds
add
jge
into
add
add
add
sbb
add
aaa
addb
add
add
add
add
pop
sub
mov
cmp
mov
xchg
test
sbb
add
xlat
hlt
pop
add
add
jnp
arpl
add
add
add
add
cwtl
ja
add
add
je
out
add
add
lret
lcall
stos
inc
sti
or
cmp
nop
faddl
add
add
and
add
add
ds
mov
mov
es
sub
add
add
add
aas
dec
pushf
add
mov
add
add
push
dec
add
add
test
add
add
and
add
add
adc
movsb
add
add
add
sbb
sbb
add
add
mov
pushf
xchg
out
fmul
repz
add
add
sbb
add
push
add
add
xchg
insb
mov
add
sahf
int3
add
add
add
push
add
add
jg
inc
jns
add
add
sub
add
add
add
add
add
add
mov
add
add
int
movsb
add
add
add
std
pop
pop
roll
jge
out
sldt
add
add
add
add
add
add
ss
add
add
cwtl
test
add
add
incl
add
add
adc
sti
add
add
mov
mov
add
aas
inc
add
add
add
add
add
add
add
or
add
add
add
add
pop
xchg
inc
incl
add
add
push
xchg
mov
cli
dec
leave
add
add
add
subb
fsts
add
add
inc
fnstenv
add
add
cld
xchg
into
add
add
add
mov
jbe
add
add
add
popa
ja
mov
add
add
add
add
fcompl
add
mov
add
add
add
add
movl
out
add
add
add
cmp
sbb
add
add
add
add
fs
add
add
dec
mov
xor
add
add
sahf
mov
add
add
mov
leave
jne
add
add
movsb
add
add
add
add
add
add
jecxz
add
add
inc
out
lcall
dec
daa
js
add
add
ds
add
mov
add
in
test
faddl
cmp
cmp
add
lgs
ror
jae
push
lea
mov
jae
add
inc
jo
out
pusha
add
inc
and
add
cmpsb
add
jecxz
cmp
add
push
add
push
mov
inc
ss
xor
add
daa
add
inc
dec
add
add
and
inc
push
movsb
add
jmp
add
leave
dec
add
adc
add
call
add
sbb
add
push
out
add
lods
inc
add
stc
insl
add
pop
out
add
roll
sub
ljmp
cltd
add
pop
add
imull
stos
push
jns
nop
incb
jge
pop
add
mov
add
jl
push
test
ss
mov
add
out
add
lret
jl
sahf
add
pushf
dec
add
les
add
add
cmpsb
and
sub
jl
add
insb
adc
mov
mov
jmp
sub
mov
gs
cmp
pop
loop
jbe
sub
and
fdivs
bound
ds
scas
faddp
add
xchg
xchg
dec
adc
insl
and
nop
ror
insb
and
add
lods
dec
sbb
cltd
sub
mov
pop
jecxz
sub
mov
add
jne
in
push
nop
je
test
add
mov
pusha
movsb
out
dec
add
cltd
sub
xor
cltd
vpavgw
orl
rcr
fwait
dec
call
and
jo
cmp
mov
xor
and
sub
pop
xchg
and
outsb
pushf
dec
mov
push
inc
and
adc
xchg
push
push
push
repnz
cmp
cmp
mov
jno
push
cs
movb
push
jae
cld
es
push
push
mov
jmp
mov
fisttpll
mov
je
cmc
or
test
fs
pushf
cwtl
push
push
jmp
inc
add
imul
and
icebp
aas
cmc
movsl
mov
push
add
pop
dec
loope
cltd
jns
and
add
enter
add
or
addr16
mov
rorl
add
inc
sbb
jne
sub
xchg
ret
int3
push
mov
js
fcoms
push
cmp
subl
mov
addl
loope
outsb
shlb
push
mov
add
repz
sub
ror
jo
add
sub
sub
adcb
stc
lahf
dec
out
repz
mov
xor
add
out
sahf
push
dec
cltd
int3
push
dec
jmp
cmp
add
mov
mov
push
sahf
mov
add
std
out
add
or
popl
pavgw
xor
cs
adc
add
pop
daa
jno
or
std
lcall
sbb
and
es
or
add
int
out
jno
push
in
add
aas
ljmp
scas
dec
adc
pop
stos
pop
xchg
inc
int
add
mov
test
mov
jg
add
mov
stc
mov
sub
inc
fisubl
adc
push
mov
jns
jnp
jmp
ljmp
and
add
add
mov
insb
push
stos
int3
pop
add
aad
cmp
jnp
add
pusha
add
xor
adc
xchg
adc
xor
xchg
repz
ja
out
dec
cmp
sub
mov
incb
add
nop
mov
hlt
iret
clc
mov
enter
add
loope
xchg
dec
arpl
fcompl
sub
and
js
add
and
lea
mov
xorb
sbb
jmp
sbb
sub
add
mov
mov
or
pop
addr16
in
and
inc
add
call
stos
loope
and
ficoml
lcall
add
outsl
and
push
and
add
les
inc
jmp
test
sub
jae
mov
add
sub
in
lock
sub
push
in
mov
test
pcmpgtw
addr16
imul
and
cltd
jmp
scas
xchg
add
out
and
cmp
mov
add
dec
add
test
or
aam
and
mov
addl
or
ss
push
xchg
mov
ljmp
jmp
xchg
fucomp
pop
nop
cmc
or
add
pop
ja
aam
idiv
movsl
cwtl
fbstp
call
inc
iret
jmp
dec
or
cmp
and
add
movsb
arpl
cmp
jp
cmp
mov
jns
add
pusha
jle
fwait
pop
jo
mov
or
add
dec
and
pop
mov
xor
daa
lock
add
add
add
add
add
lret
imul
add
pop
add
cmp
inc
add
add
addr16
add
add
add
add
adc
aad
sub
add
addr16
add
add
jmp
ja
push
add
add
add
add
imull
add
add
add
mov
add
adc
add
push
add
add
add
push
add
add
add
add
add
and
in
add
scas
jp
add
add
add
add
add
add
inc
pop
add
add
add
hlt
daa
add
add
add
add
add
add
add
repnz
add
add
inc
dec
daa
js
loop,pt
add
dec
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
fildl
add
mov
add
add
add
movsb
add
add
add
add
add
movsl
add
add
add
add
add
jp
add
incb
add
jnp
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
add
roll
add
xor
add
pop
add
pop
add
push
mov
add
mov
add
add
in
push
push
jp
mov
jbe
dec
jg
mov
dec
add
add
add
scas
fisttps
test
jb
jae
inc
push
leave
fwait
push
lods
mov
in
and
add
add
pop
and
add
cwtl
movsl
or
pop
test
add
add
add
pop
aad
sub
inc
je
add
inc
repnz
iret
lahf
mov
call
add
es
ss
lods
adc
or
lret
stos
movsb
enter
add
add
add
shrb
push
and
test
push
std
mov
mov
add
add
fistpll
outsl
iret
push
dec
xchg
push
xchg
mov
hlt
xor
add
add
sti
mov
loop
movsb
leave
aad
mov
daa
fimuls
cmp
mov
cld
or
faddl
pop
cs
add
mov
add
les
add
add
add
add
add
add
add
mov
add
add
mov
add
pop
into
mov
adc
add
cmp
xor
add
add
add
add
add
pop
loop
add
add
add
add
add
add
add
add
add
add
fcmove
add
cmp
add
add
push
add
add
add
pop
out
or
add
add
mov
add
mov
jge
add
push
xchg
jae
add
in
push
dec
stos
add
dec
sub
add
lret
add
add
add
add
add
add
mov
add
sahf
cmp
add
add
add
add
movsl
das
add
add
add
add
addb
add
add
add
add
add
cli
test
add
test
push
inc
jae
mov
add
add
xlat
push
add
cmpsl
add
aas
movsb
test
adc
add
adc
mov
lods
lret
add
add
add
mov
daa
add
idiv
add
push
pop
add
aas
lcall
es
add
push
or
iret
add
fldl
sub
dec
pop
testb
test
add
pop
add
or
cmc
add
iret
xor
pop
int3
int
mov
je
add
xor
sahf
mov
movsl
add
and
jb
out
ds
repz
movsb
mov
add
in
add
and
add
sbb
xchg
add
sub
test
push
cli
mov
add
add
int3
cmp
add
add
mov
add
add
inc
sldt
add
add
mov
pop
add
test
popf
and
add
cmp
add
adc
cmp
mov
cltd
sub
call
sub
xor
sbb
mov
add
add
add
pop
add
add
add
add
inc
add
sbb
add
js
lods
addb
add
add
add
out
add
xlat
add
mov
jbe
add
add
add
add
add
add
add
add
leave
mov
add
add
add
cmp
add
mov
add
mov
add
add
add
add
daa
add
add
add
lods
inc
add
mov
add
xchg
xor
add
out
in
add
push
add
add
add
add
add
stos
add
add
add
pushf
add
add
add
add
adc
add
or
add
mov
add
popf
add
add
rcrb
pop
movsl
add
add
add
mov
rolb
sbb
inc
add
add
add
rorl
sub
jge
notl
repz
jb
lcall
mov
dec
mov
and
inc
cmp
mov
pop
sti
cmp
jp
cmp
pop
mov
in
mov
lds
dec
sbbl
mov
lods
xchg
subl
jge
cli
or
cmp
fcoms
jle
xor
addb
inc
push
ret
bound
xcrypt-ctr
cmpsl
sbb
mov
mov
pop
decb
jae
test
outsb
mov
inc
xor
mov
iret
pop
jnp
stos
test
mov
push
dec
gs
loop
mov
sbb
test
cmpsl
outsb
sahf
xchg
cmp
xchg
sbb
mov
push
add
push
pop
sysexit
in
inc
aad
sbb
pop
mov
std
jbe
stos
push
test
lds
inc
add
and
xor
ucomiss
hlt
mov
les
jg
lahf
push
cmpsl
shl
dec
xor
in
pop
xor
mov
loop
sbb
cmp
aas
in
lea
pop
cld
aas
test
movsl
adc
into
rcrb
in
pop
mov
push
in
or
fcomi
in
cltd
sahf
sub
ds
add
mov
gs
jne
imul
rol
and
outsb
mov
pop
mov
push
inc
mov
fdivrs
inc
sarl
inc
outsb
xchg
pop
aaa
mov
insb
mov
inc
xor
mov
leave
pop
jns
movsl
mov
mov
insl
ja
es
mov
sbb
xorb
mov
xchg
pop
sub
mov
add
xor
imul
ljmp
mov
cld
jns
test
scas
sub
inc
add
sub
aaa
or
jns
jmp
xchg
mov
test
cmp
mul
dec
xor
mov
in
sbb
and
out
mov
pop
lcall
mov
xchg
repz
rolb
cmc
pop
sbbl
sbb
xor
in
sahf
arpl
shl
int
push
lods
sbb
fistl
std
imul
nop
xor
out
adc
mov
pop
jecxz
cli
push
push
int3
mov
push
ljmp
mov
iret
cmp
cli
mov
add
testl
int3
inc
inc
mov
lret
pop
pop
ficoms
cmp
pushl
neg
push
mov
sub
loope
insb
popa
mov
ss
mov
add
and
ret
sbb
and
ret
push
jnp
jl
add
pop
cltd
adc
inc
lock
dec
bound
clc
xchg
leave
push
xchg
mov
push
divb
shlb
jge
iret
cwtl
ds
sarl
push
sbb
sbb
stos
mov
jp
sbb
pop
lcall
and
je
mov
adc
lret
xor
sbb
jle
aaa
leave
and
sub
cmpsb
or
loope
mov
scas
dec
pop
or
mov
mul
add
fnstcw
or
icebp
ss
lahf
mov
lods
shll
pop
jb
inc
stos
adc
nop
mov
adc
xorl
xchg
ficoms
inc
fnsave
jnp
add
mov
dec
push
fs
test
inc
mov
fldt
std
ret
test
ss
mov
cmp
sbb
addr16
cmp
lods
in
push
jg
js
or
jmp
daa
fs
std
inc
mov
dec
insl
dec
sbb
xchg
cmc
decl
pop
jno
sbb
mov
aas
lret
dec
fwait
mov
ficomps
das
pushf
add
jne
ljmp
clc
cli
popf
inc
sbb
inc
jae
inc
mov
sub
cmp
clc
pop
shl
cmp
ljmp
pop
push
jb
sub
sub
ret
jecxz
mov
xor
or
hlt
out
test
shrl
jl
pop
or
or
lret
cmpl
push
sbb
test
test
jle
mov
and
cs
outsl
jnp
mov
movsb
push
mov
add
test
outsb
push
jne
cmpsb
adc
cmp
jbe
ret
out
xchg
xor
or
icebp
and
gs
xchg
xchg
jg
jg
xlat
pop
mov
sub
xchg
adc
inc
mov
inc
out
sub
mov
xchg
mov
adc
aam
loopne
push
sub
xchg
xor
xlat
cmp
jle
int
mov
jns
sbb
xchg
movsb
fwait
inc
or
rolb
sub
jae
call
xor
sbb
jle
cmc
es
sub
mov
jmp
xchg
mov
or
ljmp
fistpll
add
ss
mov
andl
fnstcw
pop
dec
mov
xchg
sub
decb
mov
adc
lods
pop
stos
fcoms
inc
daa
insl
add
mov
adc
cwtl
daa
inc
xchg
jl
fbstp
icebp
into
insb
imul
mov
inc
jle
pop
int3
fs
and
cmp
fstl
xorl
and
add
hlt
dec
mov
sbb
mov
loopne
rcrl
movsl
sbb
pop
std
sub
push
loope
adc
loope
sbb
pop
pop
lahf
jb
xchg
mov
push
andb
mov
sbb
xor
and
xchg
jno
or
fucomip
lock
adc
xor
das
icebp
sbb
adc
mov
cli
cmc
mov
mov
andb
cmp
adc
cmp
je
sub
mov
xor
cmpsb
pop
and
cmpsl
mov
dec
mov
and
or
xor
jl
pop
fwait
test
mov
sub
pusha
and
mov
dec
test
inc
popa
xchg
lea
and
xchg
jp
mov
add
mov
adc
scas
xor
or
jge
lock
mov
notl
ja
or
pop
mov
js
dec
cmp
pop
jbe
add
in
mov
adc
rorb
lcall
jo
ret
mov
fcmovnb
and
add
adc
scas
test
andl
shlb
xor
arpl
aam
add
es
inc
add
sub
and
jno
pop
in
mov
mov
test
mov
xor
xor
sarl
pop
in
sub
fcomp
cwtl
jge
mov
sub
sbb
out
arpl
loope
addr16
mov
pop
scas
sahf
cmpsb
push
mov
out
out
adc
and
mov
into
mov
loopne
jnp
lahf
cs
cltd
jne
fdivr
jl
int
push
mov
sbb
xor
or
jnp
shlb
cmp
jno
aaa
aam
jo
psllw
xchg
pop
lods
dec
sub
repnz
mov
inc
lret
in
sbb
fistpll
xchg
fmulp
push
pop
lock
pop
popf
scas
cmp
shll
dec
lret
aaa
imull
movsb
xchg
adcl
scas
lahf
dec
cld
in
cmp
xor
xchg
jp
out
movsl
push
cmc
or
aad
xor
out
jo
add
pop
ljmp
mov
lods
pop
loope
pushf
jg
or
sahf
pop
movsl
mov
and
push
jbe
int
repz
lods
sub
xchg
popf
sti
mov
mov
xchg
subb
mov
push
out
mov
push
lret
push
add
shr
das
insl
dec
enter
jge
arpl
leave
cwtl
mov
push
lcall
negb
inc
loop
aad
mov
hlt
cwtl
in
xor
jp
shrl
rcll
mov
mov
jp
dec
hlt
add
sub
imul
inc
je
mov
inc
adc
fs
imul
popw
lods
fldt
mov
fldln2
sub
icebp
insb
or
pop
push
andl
mov
call
push
loopne
push
xor
pushf
jbe
add
fyl2x
dec
add
or
dec
inc
push
adc
or
gs
sbb
mov
jo
ljmp
mov
cli
pop
mov
push
test
add
leave
and
sbb
sub
mov
pop
adc
cmp
lods
mov
mov
inc
mov
jbe
push
xchg
mov
stos
push
jg
add
addr16
sahf
je
sahf
or
or
jne
jne
push
cltd
dec
inc
call
pop
jl
outsl
jmp
xchg
sub
add
jne
rorb
adc
repnz
test
hlt
jge
pushf
push
test
xor
jne
call
jle
or
aad
xchg
xchg
sub
mov
js
out
int
adc
sub
sbb
in
icebp
xchg
call
fwait
pusha
or
movsb
imul
and
cmp
imul
ss
jne
pop
jmp
hlt
adc
sub
sti
cmp
mov
sarl
test
push
stos
lds
cmp
lret
fisttpl
and
rcrl
sub
loopne
imul
test
pop
cmpsb
push
push
xchg
push
test
mov
add
pop
fimuls
fwait
sub
xchg
push
js
push
mov
xchg
cmp
dec
inc
sub
inc
xor
mov
jmp
stos
cmp
adc
gs
cs
hlt
xchg
mov
ljmp
clc
cmp
pop
xor
xor
stos
inc
inc
jg
push
shll
sahf
mov
js
outsl
std
mov
popa
add
and
aad
daa
in
or
enter
push
inc
pop
popa
gs
or
and
stos
fs
jno
fisttpll
int
xor
daa
push
cmp
nop
jne
lcall
fimuls
dec
and
sysenter
or
jle
and
imul
mov
in
inc
insl
outsl
test
push
mov
lret
or
xor
repz
xor
mov
adc
push
and
xchg
pusha
or
addb
mov
orl
mov
stos
aaa
sbb
sub
push
int
aaa
cmpl
into
add
insl
mov
dec
iret
xor
shrl
pop
ret
sbb
mov
mov
repz
insl
sub
jp
sarb
dec
xchg
testb
xchg
xlat
and
jae
pop
mov
push
cmpsl
fdivl
push
das
lret
jmp
fwait
lret
sub
ret
sub
mov
jno
xor
into
or
jmp
push
pop
lcall
int3
push
test
fsubrs
xor
hlt
mov
add
cmc
pop
ret
fmull
dec
cs
push
cs
mov
std
shlb
imul
mov
out
xor
pop
push
adc
and
rolb
lcall
and
xchg
lods
sahf
lea
outsl
push
lods
jle
mov
loopne
jl
pushf
incl
lods
push
ja
adc
push
pop
arpl
push
lret
lret
inc
jne
outsl
ja
jp
lods
adc
aaa
cmp
in
xor
adc
faddl
push
psubusw
shrl
outsb
dec
lcall
je
add
jl
cwtl
dec
nop
add
sbb
push
loop
scas
insb
push
jl
add
scas
fldln2
mov
adc
lret
mov
jo
mov
imul
ret
add
adc
xchg
adc
pushf
jcxz
fucomip
ret
ja
leave
adc
push
xor
daa
outsb
adc
mov
hlt
push
idivb
cmc
ljmp
cmp
push
sbb
stos
not
push
cmpl
enter
mov
gs
loope
xchg
and
sub
sar
notb
idiv
cmpsb
or
cltd
in
mov
decb
sbb
sbb
test
and
mov
fldcw
aaa
subb
and
mov
cwtl
push
push
dec
cltd
jbe
adc
push
lret
adc
jb
in
jl
ljmp
imul
cmp
xor
jnp
mov
or
subl
jb
mov
sbb
xor
lods
dec
je
add
mov
jb
arpl
rorb
decb
dec
xchg
fsubrl
ror
into
out
jbe
bound
fs
xchg
fwait
sahf
ja
outsb
dec
out
pop
imull
sbb
bound
push
pop
push
not
pop
adc
cmp
mov
adc
mov
mov
mov
scas
and
lcall
dec
mov
jae
pop
aad
add
into
adc
xor
jecxz
ds
pusha
and
xchg
jne
dec
nop
outsl
push
lods
xchg
mov
add
jo
lea
fs
push
outsl
stos
mov
insl
xor
xchg
xor
pop
outsl
jge
push
in
add
push
mov
push
mov
data16
stos
or
sub
or
jecxz
jb
js
and
sti
sub
jle
mov
sub
sub
addl
mov
jnp
sahf
sub
xor
and
jb
movsb
fsubrs
sub
adc
sbb
cmc
mov
jo
jbe
arpl
fwait
es
jl
in
and
sti
xor
push
jnp
inc
sub
xchg
push
xor
adc
xor
inc
jbe
jb
push
dec
imul
lret
xchg
ljmp
dec
mov
pop
xchg
cmp
stc
daa
ret
int3
jae
or
std
popf
push
pop
jmp
loope
xchg
insb
dec
pop
add
or
sbb
lea
cli
xchg
push
sbb
dec
pop
or
jecxz
das
adcb
scas
sbb
jg
cmp
xchg
sub
scas
decl
or
dec
inc
mov
icebp
pop
roll
test
sub
mov
fsubrl
jno
mov
stc
jle
fwait
push
mov
por
inc
pop
jg
ss
xorl
sub
js,pn
push
inc
mov
leave
addr16
shrb
jg
fidivs
sub
pushf
jp
icebp
sahf
out
cmp
jo
jno
lcall
vpaddusb
xor
inc
xorl
add
sbb
or
pop
data16
and
imul
out
icebp
les
imul
push
gs
pop
xor
into
mov
negl
fbld
adc
out
mov
adc
sbb
mov
mov
pop
cltd
out
mov
add
cmpl
sub
mov
push
dec
add
out
or
test
push
iret
dec
push
clc
or
int
daa
out
iret
push
pop
shll
push
xchg
sub
ret
sub
xor
sub
fisubrs
dec
out
imulb
int3
mov
push
inc
rcrb
push
xor
pop
scas
iret
sar
xchg
aam
call
dec
add
xchg
fcmovbe
popf
add
mov
aam
fst
int
sbb
sti
xor
jb
arpl
mov
leave
add
rclb
lahf
pop
xor
or
inc
inc
push
xchg
enter
inc
adc
push
pop
jmp
aas
fwait
jge
xchg
push
repz
stos
sub
inc
loope
cmp
xorl
lahf
and
les
leave
enter
jecxz
mov
sti
push
or
lods
dec
loop
mov
dec
adc
pop
pop
jno
jmp
mov
jl
sub
add
orb
aam
test
adc
xchg
jmp
aaa
dec
mov
adc
pop
dec
jecxz
push
dec
inc
lods
push
adc
add
out
mov
push
pop
in
pop
pop
pop
out
clc
add
inc
mov
ljmp
repz
push
inc
push
pop
push
cmc
icebp
adc
test
mov
cmp
rcrb
in
xor
mov
pop
inc
xchg
lock
js
and
sub
cld
jb
push
fwait
loop
pop
pop
sbb
negl
pop
pusha
sbb
imul
add
dec
lcall
repz
sbb
cmp
cmovle
loop
jbe
push
and
je
and
cmp
aad
jo
xchg
stc
inc
pop
nop
mov
mov
out
adc
rcl
and
or
add
pushf
clc
aas
jl
scas
lahf
js
push
fwait
and
addr16
add
call
lock
push
and
push
imul
jne
stos
adc
dec
lods
inc
xlat
xor
sbb
jae
push
dec
clc
or
xor
jl
inc
lea
call
ret
pop
jbe
nop
mov
stc
or
jo
sub
loopne
call
test
and
jae
inc
rcl
sbb
or
mov
cmp
pop
sbb
fidivs
mov
pusha
stc
js
aam
loop
pop
xchg
mov
pop
pop
jbe
ja
add
int3
in
add
and
push
stos
inc
mov
push
add
mov
sub
cltd
mov
inc
push
pop
push
mov
mov
and
dec
int
and
or
aad
inc
mov
nop
mov
mov
out
pop
dec
push
loope
cmp
sbb
pop
lret
jae
out
fmul
dec
daa
inc
mov
jo
mov
pusha
mov
push
nop
sbb
mov
mov
mov
push
pop
cmp
lods
cmp
mov
dec
cmpsl
inc
out
ds
int3
or
cmpsl
inc
dec
lock
jmp
cld
bound
sarl
cmpsl
add
insb
icebp
in
into
je
das
push
and
shrl
inc
mov
aaa
xchg
jge
inc
mov
outsl
mov
fs
aaa
mov
lds
mov
test
sub
sub
cs
shr
mull
inc
fcomi
sub
je
inc
jecxz
js
cmpsb
jp
jge
fstps
in
cmova
or
loope
inc
cmpsb
dec
subb
push
sub
jecxz
cmp
xor
push
lea
into
and
mov
inc
lods
scas
mov
enter
cmp
and
ljmp
cli
pop
pop
or
add
repnz
mov
insb
dec
mulb
dec
inc
sbb
rorb
cmp
inc
jns
aas
divb
sbb
sub
xchg
dec
rorb
pop
sbb
push
fndisi(8087
dec
shl
ja
sbb
icebp
fcoml
mov
test
addl
int
lcall
ficoms
mov
ds
dec
xor
imul
pop
cmpsb
pop
jnp
mov
push
add
xor
and
or
xchg
not
js
pop
adc
hlt
lret
adc
mov
inc
inc
ja
xor
mov
mov
add
inc
push
dec
mov
and
cmp
xchg
pop
popa
dec
xor
pop
adc
jo
jno
out
xor
dec
sub
xor
fdivs
in
mov
dec
mov
and
sub
dec
in
sbb
sbb
daa
sub
repnz
push
add
lahf
adc
xchg
cmp
gs
pop
arpl
test
mov
fwait
mov
inc
xor
leave
stos
es
mov
dec
stos
inc
shrb
pop
mov
icebp
ds
push
fdivs
std
push
push
scas
lds
jne
fadds
pushf
xchg
pop
jg
call
mov
lret
out
ljmp
or
push
xchg
mov
xor
mov
jns
test
iret
pop
xchg
xchg
sbbb
and
xor
stc
jecxz
repz
inc
insb
jno
mov
mov
fimull
mov
pop
push
add
sub
push
arpl
dec
jae
pop
jmp
cmp
cmp
cmpsb
loope
nop
and
aam
pop
outsb
xchg
out
mov
cmpsb
add
dec
shll
ljmp
in
sbb
xor
in
xor
cmp
add
std
jne
cltd
xchg
dec
xchg
mov
mov
dec
jae
rcrb
or
pop
jle
rcll
jmp
mov
mov
push
jnp
fildll
lea
ficoms
dec
jb
call
sbb
scas
repz
icebp
shrl
aas
jmp
mov
xlat
or
xchg
push
out
cmp
cmp
pusha
inc
cmpl
daa
enter
xor
loopne
push
repz
fucom
in
jge
sub
dec
jae
sarl
jge
enter
stos
add
mov
xchg
cmp
test
lea
pop
pop
pop
jp
jae
push
dec
push
xor
sub
fisubrl
in
dec
cwtl
flds
mov
pop
shl
icebp
and
cli
xor
inc
lds
xor
sbb
xchg
lcall
addr16
mov
push
inc
js
mov
inc
xchg
repnz
nop
lea
jns
dec
adc
clc
cmp
and
push
push
mov
xchg
push
mov
push
out
push
lods
lcall
mov
xchg
pop
in
adc
jmp
inc
xchg
and
imul
push
cmp
outsb
mov
ret
pop
or
jg
out
jbe
and
fistl
xchg
sti
cmp
fisubrl
aad
or
dec
pop
inc
shrl
xchg
sub
fdivs
test
adc
push
mov
lods
inc
repnz
inc
lahf
lods
cmovbe
dec
push
xor
gs
jb
aad
push
mov
xor
fbld
mov
std
add
jnp
sub
or
ljmp
sbb
repnz
or
stc
adc
test
jo
bound
lods
cmp
cmp
bound
push
jp
je
loope
mulb
push
lret
cmp
movd
pop
aad
xor
inc
mov
loopne
sbb
and
push
insl
mov
inc
jae
jmp
sti
stos
mov
adc
dec
lods
xor
call
cltd
arpl
dec
jg
in
jo
push
dec
add
stc
cmp
and
inc
add
cmp
int3
cmp
push
push
hlt
fs
inc
dec
dec
dec
cmc
popf
lods
sbb
jmp
aad
out
sbb
dec
sbb
sbb
addl
bound
xlat
ja
push
jg
jne
mov
pop
mov
js
aaa
in
lea
imul
cmp
pop
xor
add
add
add
dec
mov
dec
in
sub
cmpsl
jno
push
jecxz
or
cmp
sub
add
push
mov
pop
and
mov
stc
mov
add
cmc
push
xor
cmp
pop
xchg
daa
leave
popa
mov
sbb
inc
push
push
pop
dec
add
stos
push
popa
jno
mov
nop
dec
cmp
in
leave
shlb
mov
pop
fs
nop
mov
shll
iret
xchg
push
jbe
pop
outsl
xor
jnp
dec
test
pop
out
mov
mov
pop
stos
jge
lds
popf
push
mov
cmpsb
or
pop
mov
xchg
sub
subl
pop
lea
int3
sar
inc
jnp
pop
mov
inc
in
sbb
push
mov
xor
bound
scas
dec
mov
test
insb
fnstsw
xchg
cmp
jge
out
inc
aad
popa
repnz
lahf
cmp
aas
lret
repz
clc
int
int3
aam
add
call
add
iret
ss
pop
adc
loope
scas
mov
les
mov
ja
lahf
outsl
and
and
or
or
push
pop
push
push
daa
jo
fcoml
shl
fistpll
push
pop
sub
decb
sub
push
cmpl
xchg
sbb
sub
or
mov
push
popa
jl
scas
aaa
movsl
loopne
inc
clc
or
jns
mov
out
test
or
xor
jp
sti
mov
mov
mov
and
xchg
pop
pop
test
es
loope
cmc
jns
mov
mov
loope
fdivrs
and
lock
add
daa
sbb
mov
dec
ficoml
adc
fsubl
mov
push
add
ret
mov
shll
xor
jge
cmc
imull
subl
lods
jmp
dec
pop
and
adc
lods
das
outsl
and
mov
cmp
lahf
jp
pop
cmc
inc
addb
xchg
cmc
lods
jbe
addl
fidivrs
enter
ljmp
or
cmp
lods
jl
lock
rcll
mov
mov
test
iret
sbb
repz
fnstenv
xlat
mov
lock
std
mov
cmp
adc
fadds
ret
fdivs
push
mov
out
scas
mov
stc
add
push
adc
push
push
sub
daa
iret
or
pop
arpl
lcall
xchg
js
xchg
sub
dec
lock
pop
add
push
jg
pop
and
orl
fistl
or
push
arpl
dec
sbb
popa
lods
jmp
and
add
xor
arpl
jno
pop
stc
test
dec
xchg
xchg
push
push
shrb
xchg
in
or
fisubl
jmp
movb
mov
ret
inc
xchg
stc
roll
adc
jns
add
in
jle
mov
andb
xor
cwtl
movsb
or
jae
push
sahf
sahf
jns
enter
pop
push
add
outsb
inc
outsl
xchg
insb
in
xchg
pop
mov
cltd
dec
dec
lret
inc
inc
neg
dec
lock
cmpb
push
inc
add
in
xchg
fadds
xor
ja
pop
sbb
sahf
dec
popf
lea
sti
pop
xchg
inc
fcoml
repz
mov
dec
orl
lret
fldlg2
sub
int3
inc
popa
fwait
inc
or
pop
ficoml
mov
or
xlat
xorb
test
imul
sbb
or
sahf
lock
xchg
adc
stc
xor
out
sbb
lret
sbb
pop
and
mov
mov
sbb
pop
scas
adc
add
mov
cmpsl
je
xor
and
shl
imul
pop
cltd
mov
mov
adc
in
outsl
daa
and
popf
cld
sub
jno
adcl
outsl
test
dec
add
mov
ror
nop
jne
and
out
dec
sti
mov
je
or
cs
ljmp
add
repz
pop
pop
sbb
out
fucomip
imul
leave
fidivl
mov
push
mov
mov
xchg
notl
xor
loope
stos
pop
mov
movsb
aas
adc
jl
dec
addr16
mov
icebp
mov
idiv
mov
nop
in
mov
mov
inc
cmp
jb
jnp
or
or
push
jle
jbe
jne
in
fwait
arpl
mov
push
sub
lret
lock
cmp
ss
test
lea
fs
pop
jo
cmc
lret
cmpsb
imull
insl
repnz
movsb
shl
sbbl
pusha
hlt
sbb
xor
scas
insb
ja
mov
jecxz,pn
out
and
xchg
je
addr16
rcll
xor
imul
cmpb
xchg
aad
add
push
lods
dec
arpl
push
jae
mov
jecxz
lea
mov
in
lock
roll
rcrb
in
and
frstor
cmp
push
xor
mov
jecxz
push
xchg
mov
xorl
fwait
je
sub
jnp
ja
sub
xor
stos
test
lret
cmp
je
scas
push
sahf
jecxz
jecxz
pop
xchg
cmp
test
fstl
dec
ljmp
lahf
mov
mov
in
push
mov
jns
xchg
daa
inc
data16
push
xor
out
ja
aam
xchg
test
movsb
cmpsb
in
lods
xor
addr16
in
popa
stos
es
mov
xor
xchg
jle
pusha
int3
sub
mov
shrl
movsl
mov
loop
inc
xchg
jecxz
push
lock
aam
and
shrl
inc
push
sbb
or
aas
in
mov
fstl
pop
add
pushf
ljmp
repnz
dec
mov
cmp
jae
inc
add
pop
popl
inc
adc
pop
push
pusha
push
jmp
push
or
and
xchg
xor
push
and
mov
xlat
and
jge
pop
stos
and
and
or
cmp
sbb
xchg
push
pop
fs
mov
pop
filds
inc
mov
lock
dec
jg
dec
push
in
push
mov
push
cmp
in
jae
mov
pushf
cmpsb
push
push
int
js
imul
push
mov
sbb
mov
jge
scas
lock
push
push
in
dec
cmp
or
mov
iret
mov
lock
scas
ljmp
push
fdivrl
lods
jmp
pusha
cmp
jmp
pop
xchg
and
xchg
xchg
les
push
mov
add
int3
cmpsb
in
ss
xchg
sub
icebp
test
ret
subb
daa
int3
or
das
fnstsw
into
stos
movsb
push
mov
sub
sbb
adc
push
mov
xchg
jo
gs
mov
inc
rcrb
xor
inc
sub
sub
jmp
sub
sub
dec
or
sahf
test
xchg
cmp
sub
fsubrl
push
sbb
loopne
push
cltd
xchg
je
adc
or
and
decb
addr16
jmp
pop
leave
andb
dec
idivl
scas
cs
or
mov
mov
mulb
and
pop
mov
sarl
popf
movsb
push
xchg
dec
pushf
dec
ss
xor
repz
lock
or
outsb
xchg
xor
daa
ss
pop
add
adc
pushf
imul
xor
cmp
loope
add
cmp
adcb
scas
call
jle
xor
cmc
push
pop
in
cmp
add
cmp
rclb
je
and
mov
mov
mov
int
sub
cmpsb
xlat
mov
clc
mov
clc
sbb
jns
mov
xchg
add
sub
xor
sbb
fs
jmp
cmp
inc
insb
xor
and
insb
je
jmp
lahf
aas
dec
adc
jb
cmp
mov
ret
push
push
lock
mov
jns
or
mov
dec
cmp
sbb
cmc
iret
mov
movsb
test
add
arpl
push
xchg
sbb
out
in
fildll
shlb
mov
jp
lahf
into
les
push
repz
add
mov
popf
cwtl
test
pop
test
dec
dec
pop
int3
add
cmp
jae
sub
and
lock
push
mov
daa
lock
shll
sbb
push
mov
pop
int3
xchg
cmpl
push
mov
adc
jg
dec
pop
fistpll
cmpsl
and
test
jbe
mov
mov
movsl
dec
jo
inc
push
in
nop
jb
cmp
addr16
mov
pop
or
lea
fs
push
fstpt
xor
mov
mov
mov
xchg
sbb
ret
aaa
cld
imul
jno
popa
add
push
mov
ret
inc
leave
sbb
or
cmpsl
xchg
sbb
pop
cmc
lods
test
dec
fs
insl
cmp
cs
pop
add
cmpb
push
outsl
fs
and
jl
inc
pop
dec
imul
cmp
inc
mov
adc
cmp
enter
fsubr
out
jp
movsb
test
dec
mov
and
mov
test
imul
cltd
fcompp
out
xchg
nop
aam
mov
push
cmp
divl
mov
and
out
mov
jo
test
adc
aaa
es
push
dec
jne
cmpsl
mov
adc
adc
outsb
ret
cmpsb
push
inc
xchg
insb
stc
mov
sbb
lcall
mov
aaa
sti
push
arpl
bound
nop
int3
scas
cld
out
cmp
test
jmp
sbb
mov
cmp
ljmp
incb
push
push
rcr
mov
cmpsl
fistpl
inc
inc
fs
fwait
mov
xchg
sub
jbe
xchg
sti
sbb
je
xchg
ret
je
cmpsl
dec
sbb
mov
sub
xor
mov
pop
sti
sbb
mov
xchg
imul
pop
inc
jns
inc
sbb
xchg
sub
push
pop
notb
lods
and
lahf
mov
or
sub
xor
mov
jne
shll
leave
outsl
test
je
jl
insb
out
pop
loope
lods
inc
pop
test
add
inc
xor
pop
push
setl
cmpsl
push
aad
pop
xor
and
cmc
sub
sub
ds
mov
rcl
pop
mov
sub
movsl
inc
jo
jge
cmp
int3
ljmp
icebp
fadds
pop
nop
or
mov
pop
sar
idiv
pop
in
xchg
push
loop
mov
out
stc
adc
ss
and
pop
movsb
popf
jg
popa
iret
sahf
loopne
xor
leave
insb
outsl
fsub
add
xchg
sbb
imul
rcrb
push
mov
nop
mov
mov
scas
gs
cli
pop
inc
aam
sbb
fildl
pop
shll
call
shlb
xchg
jp
test
mov
cli
jo
push
sub
jl
push
cmpsl
lea
xchg
sbb
or
mov
and
in
xor
or
add
push
adc
iret
stos
jne
push
rcr
outsb
dec
add
enter
mov
dec
cs
shlb
and
movsb
jg
push
loope
xchg
jle
jae
push
jg
int
icebp
dec
push
push
fstps
rorb
jmp
loopne
shll
imul
sahf
loop
punpcklbw
mov
adc
stos
stos
dec
push
jo
sbb
int
pop
pop
push
rcl
or
pop
xor
rolb
adc
or
les
and
push
sbb
subl
dec
adc
xchg
ss
pop
mov
lcall
out
icebp
inc
test
mov
sub
jl
daa
dec
lods
push
ja
into
mov
cmp
in
xor
pop
cwtl
sbb
loopne
cmp
sahf
sbb
movsl
fstpt
adc
sub
pop
gs
out
cmp
sbb
sahf
push
xor
lods
push
jp
jg
push
cmp
test
out
mov
xor
shlb
out
mov
in
in
aam
push
mov
call
fsubp
add
dec
std
mov
in
aam
cmpsl
adc
mov
add
