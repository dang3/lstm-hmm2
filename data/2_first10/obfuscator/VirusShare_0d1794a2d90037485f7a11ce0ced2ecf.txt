call
push
nop
jmp
mov
pushf
lea
call
mov
call
pusha
jmp
call
pushf
jmp
jle
mov
bswap
bswap
nop
call
pushf
lea
push
xchg
pusha
pushl
ret
bswap
movsbw
pushf
nop
call
xchg
lea
pusha
mov
call
movw
mov
pop
lea
movsbw
call
mov
pushf
pushf
jmp
pushf
xchg
movb
pusha
xchg
mov
mov
movw
push
call
jmp
xchg
push
movl
pushf
pushl
ret
bswap
lea
movsbl
nop
jmp
push
movl
push
lea
push
call
movzbw
movsbl
bswap
mov
jmp
jmp
jmp
movb
mov
lea
jmp
mov
pushf
pop
nop
not
jl
not
pop
push
xchg
pusha
movb
xchg
pushf
push
movzbw
mov
mov
call
pushf
lea
call
mov
pushl
jmp
lea
call
lea
jmp
pop
inc
into
cmpb
jo
add
jmp
pushl
call
pusha
push
pushf
call
xchg
movw
movb
pushl
ret
jmp
jmp
int3
jecxz
movsl
xchg
pushf
mov
lea
pushl
call
jmp
jmp
xchg
movw
movzbl
movsbw
movzbw
mov
pop
lea
jmp
call
pushf
pushf
movb
mov
pushf
lea
jmp
mov
movb
pushf
lea
push
pushf
call
lea
js
lea
push
pushl
push
xchg
pushf
pushf
pushl
ret
xchg
mov
movb
pushl
ret
jmp
jmp
jmp
call
mov
call
mov
pushl
mov
jmp
mov
mov
mov
call
pushf
mov
movzbl
mov
pusha
lea
je
pusha
lea
call
movzbl
mov
mov
mov
mov
pusha
jmp
jmp
lea
push
xchg
pushf
pushf
mov
mov
pushl
ret
jmp
pusha
lea
jnp
pusha
nop
jmp
lea
pushf
pushf
pushf
xchg
pushf
pushf
pushl
mov
pushl
ret
call
pusha
nop
movsbl
lahf
mov
mov
lea
jno
push
push
xchg
push
call
lea
pushf
call
pusha
not
bswap
push
nop
setg
pusha
pushf
mov
call
mov
mov
setae
lea
mov
jmp
jmp
call
xchg
movl
pushl
ret
mov
call
xchg
pushf
push
pushl
movl
pushl
ret
call
pushf
xchg
pusha
push
pushf
pushl
ret
call
pop
pushf
call
not
cwtl
jmp
jmp
pop
mov
lea
jne
pushf
pusha
pushf
lea
pushl
movw
mov
mov
mov
call
lea
pushf
mov
movsbw
lea
call
movb
pushf
xchg
push
pushl
movl
pushl
ret
mov
jmp
call
push
mov
lea
je
push
pushl
push
lea
pushl
xchg
pushf
pusha
mov
pushl
pushl
ret
or
add
add
movl
lea
jp
pushf
mov
jmp
jmp
xchg
push
mov
call
pop
hlt
push
jo
pop
pusha
sbb
push
xor
xchg
loop
lahf
sub
mov
enter
sub
jl
sbb
sub
xchg
push
inc
and
mov
insb
out
subb
mov
pop
in
sti
fsubp
xchg
mov
jmp
sub
xchg
or
mov
arpl
and
add
jns
iret
filds
insl
addr16
sar
xor
scas
mov
xor
out
jg
pop
xchg
push
imul
loopne
mov
inc
mov
into
inc
xorl
ret
inc
cmc
rep
add
push
mov
cmpsb
or
mov
sub
pop
scas
pop
lret
sub
std
xchg
int3
in
sub
into
dec
jo
fimuls
dec
sbb
add
push
lods
mov
and
fisttps
push
lcall
sub
xor
cmp
bt
jmp
lea
call
pusha
pusha
lea
jmp
pusha
cmp
cmc
cmp
pushl
push
pushl
lea
jne
jmp
movb
lea
call
jmp
sub
nop
lds
in
mov
xchg
cmp
in
push
loopne
lcall
les
cmp
jae
mov
and
outsb
aam
mov
pop
xor
add
stc
mov
sahf
xchg
push
push
mov
lock
mov
icebp
mov
pop
into
inc
ja
jbe
and
push
inc
stos
int
pop
pop
add
add
iret
ss
xor
xchg
aam
jbe
or
mov
or
mov
faddp
pop
sbb
test
and
std
push
jge
int
xchg
in
arpl
or
out
or
in
dec
jge
and
cmpsl
sbb
sub
jecxz
xchg
or
jne
add
notb
mov
xchg
xor
in
cmpsl
sub
sarb
fwait
stos
out
movsl
sub
js
sar
jge
mov
out
xor
movsl
int3
dec
mov
addr16
sbb
outsb
iret
push
sub
ljmp
cmp
add
xor
lahf
jge
in
sbb
sub
fildl
jne
push
mov
je
test
cmp
and
fcompl
mov
mov
insb
pop
push
dec
lock
test
cmp
test
je
sub
es
sub
andl
and
push
repz
push
loopne
push
cmpsl
cmp
xor
mov
cld
mov
sbb
les
fiaddl
or
push
or
mov
movsl
and
pop
cmovb
test
lret
inc
mov
or
mov
cs
dec
movsl
mov
int
in
push
cmp
push
adc
cmpsl
sbb
mov
adc
push
mov
or
test
outsb
rcll
ljmp
or
inc
lcall
pop
inc
scas
pushf
arpl
sub
jp
jg
call
dec
std
shrb
loope
rclb
andb
inc
jp
fwait
xor
sbb
xor
ljmp
mov
xor
push
pop
stos
int
fwait
or
mov
std
gs
loopne
inc
mov
jl
xchg
jle
jge
ds
and
stos
jno
insb
mov
sarl
loopne
jae
fcom
mov
mov
outsl
loopne
jge
pop
lret
xlat
and
inc
dec
subl
mov
jp
mov
add
imul
lods
testl
jno
push
out
lea
lea
dec
mov
mov
rcrb
movsl
mov
in
pop
lock
sbb
cmpsb
dec
xlat
mov
cltd
jecxz
sbb
push
repz
jnp
xor
aam
sub
xchg
or
inc
ds
push
sub
jns
cltd
popf
ja
xor
js
lds
test
repz
pop
popf
cmp
mov
xchg
sub
nop
jmp
and
icebp
mov
push
sub
mov
loope
or
scas
div
fwait
pop
push
and
jp
rcrb
adc
pop
mov
jae
cmp
scas
push
repnz
es
cmp
aam
mov
sbb
jb
clc
pop
cmp
push
push
call
sub
xor
mov
pop
add
mov
jb
or
scas
stc
clc
addr16
add
call
and
inc
mov
jle
jg
fbstp
sub
in
pop
mov
test
lret
push
pop
push
roll
lock
pop
test
adc
insl
mov
out
push
xchg
push
adc
lret
mov
aaa
leave
negb
cltd
inc
cli
fs
xchg
loopne
leave
repz
xchg
cs
shll
cmp
dec
pop
ret
in
bswap
pop
pusha
pushl
pushl
ret
jae
push
mul
ret
xchg
mov
out
pop
cmp
fiadds
int3
cmpb
push
xor
addr16
out
hlt
push
sbb
push
pop
dec
in
or
and
dec
add
jmp
jle
and
loopne
dec
into
loop
mov
cld
or
jmp
jne
sub
mov
pop
adc
mov
adc
sbb
or
add
inc
jo
pop
pop
xchg
testl
cmp
xchg
test
or
loop
sub
cmp
aas
inc
lock
es
sarb
fs
add
cld
jbe
inc
push
es
sub
fdivs
or
xor
pop
xchg
dec
xor
js
loop
push
fistpl
out
das
out
push
push
pop
pop
mov
xor
mov
aas
pop
icebp
fnstcw
jbe
pop
push
jbe
push
mov
push
insl
shlb
xor
cmpsb
cli
icebp
pop
loop
hlt
mov
pop
sub
cmp
adc
cld
add
fs
jae
cmp
cmp
pusha
mov
pushf
lea
ja
jmp
lea
je
call
pushf
movl
jmp
pusha
movl
push
pusha
movb
pushf
lea
jmp
stc
pusha
or
mov
lea
je
pushf
or
push
lea
je
dec
lahf
xor
bswap
bts
bsf
mov
btr
mov
cmc
rol
lea
shr
lea
mov
pushf
cmc
or
pushf
pushl
lea
je
pushf
cmc
movzbw
add
bsf
shr
sete
sub
rcr
stc
stc
xchg
shr
pop
mov
dec
movsbw
add
shl
ror
add
shl
bts
sub
mov
jmp
pusha
lea
jae
push
lea
jne
pusha
jmp
lea
call
jae
push
mov
pushf
lea
jae
not
pusha
pusha
mov
not
inc
jmp
neg
pushf
pushf
mov
xor
clc
test
movw
stc
pushw
popfw
call
decb
fs
sub
jecxz
inc
lret
insl
hlt
mov
mov
push
jg
sbb
test
xchg
xor
pop
lods
push
lret
test
mov
arpl
dec
mov
ret
sti
lret
sbb
inc
cli
ret
cmp
inc
cmp
cmpsb
mov
rorl
test
mov
jecxz
sbb
mov
xlat
loopne
cmp
cmp
adc
scas
push
xlat
cmp
cmp
lret
addl
pop
adc
subb
in
adc
ja
mov
test
std
sbb
in
jl
adc
sbb
stos
sbb
call
mov
cmp
popf
add
xchg
jb
outsb
dec
adc
std
enter
divb
scas
enter
test
fdivs
sub
dec
xlat
adc
data16
ss
dec
inc
cmp
pushf
and
jmp
neg
stc
pushf
stc
rol
jmp
lea
jne
shr
mov
stc
or
pushf
lea
je
movzbl
pushf
movsbw
movzbw
lea
call
pushf
or
pushl
pushf
pushf
lea
je
jmp
pusha
movw
call
pusha
call
and
mov
cmc
pushf
cwtl
mov
jp
lock
les
dec
and
mov
fcmove
mulb
lock
lahf
pop
jp
cmp
mov
sbb
jb
adc
jl
mov
sub
mov
jecxz
push
ficoms
ljmp
push
dec
fwait
lods
jp
jbe
inc
push
mov
dec
fucomi
das
jb
lods
imul
jnp
hlt
adc
fnsave
fwait
jle
pop
ja
movsl
in
aas
sbb
icebp
or
sub
dec
jns
lods
cmp
cli
out
movb
lea
ja
jmp
rcl
rol
or
adc
push
sar
push
xchg
movzbw
pushf
mov
or
shl
ror
push
rcr
inc
xadd
push
and
mov
not
mov
jmp
bsf
cmp
rcl
btr
mov
pusha
and
cmp
pushf
jmp
movl
movb
call
movl
pusha
pushf
pusha
lea
jmp
mov
call
movb
movl
push
lea
jmp
not
not
push
mov
pushf
push
lea
call
jmp
jge
es
imul
bound
and
or
fsubrp
push
sub
adc
cld
dec
clc
jge
dec
out
sub
cmp
jb
repnz
dec
mov
cltd
push
int
in
ss
xchg
scas
adc
js
sbb
clc
movsl
mov
int
or
hlt
and
or
int3
mov
ffree
sbb
ds
leave
add
adc
or
and
mov
and
aam
out
cmp
push
mov
pop
or
mov
icebp
ljmp
adc
sahf
pusha
adc
pushf
pushl
call
add
pushf
lea
jne
jmp
int
mov
lahf
cmp
jae
iret
clc
xchg
adc
and
das
pop
js
pop
inc
out
lea
je
stos
pushl
mov
dec
push
lods
adc
mov
add
or
cmc
add
mov
mov
fiadds
adc
jnp
dec
cli
jg
das
jle
mov
push
xchg
cmp
je
sub
pop
not
pushf
xchg
mov
pushf
mov
call
call
lea
jae
pushf
jmp
push
lock
roll
movsl
mov
xor
sbb
popl
repnz
and
push
pop
sbb
mov
lods
fwait
adc
xor
leave
mov
mov
ret
and
lds
xchg
mov
aam
orl
sub
mov
insl
das
cli
adc
cmp
mov
mov
cmp
dec
outsl
push
cwtl
and
hlt
sbb
lods
movzwl
jae
mov
das
movsb
scas
pop
add
mov
fldenv
adc
leave
je,pt
mov
cmpsl
mov
xchg
dec
lock
outsb
lock
sub
jo
iret
aad
jmp
idiv
arpl
cmp
sahf
cmp
jnp
sbb
pop
push
inc
pop
inc
push
inc
pop
dec
inc
pop
add
inc
and
mov
lea
jmp
mov
not
mov
pushf
mov
pushf
movb
pushl
ret
jb
sub
pop
dec
jae
fsub
rcrl
imul
and
int3
dec
cmpl
mov
adc
les
pop
mov
ja,pn
cmp
push
lret
xchg
xlat
fstps
lock
or
sub
inc
test
fildl
pop
lahf
fwait
mov
mov
xchg
add
dec
lahf
jbe
fmuls
mov
add
jmp
popa
dec
scas
aam
shrl
dec
mov
sub
dec
and
mov
fsub
xor
or
fistps
int3
outsl
out
pop
stc
scas
leave
push
mov
stc
test
adc
enter
pop
inc
pop
jge
scas
xlat
cli
bound
xchg
inc
mov
ja
jle
int
jnp
and
js
mov
ja
test
sub
and
out
dec
pop
push
pop
mov
mov
fnsave
in
dec
jbe
push
roll
push
push
and
pushl
add
pusha
pushf
lea
jmp
outsb
rcr
int3
adc
lods
mov
addr16
xor
cmc
add
mov
loop
repnz
fbstp
mov
sbb
push
in
stos
xor
data16
push
testb
pop
js
pop
mov
cmc
loop
sub
push
ja
jb
jne
inc
lahf
mov
mov
pop
pusha
orb
imul
pop
and
js
lds
dec
je
mov
outsl
popa
fs
imul
add
aad
jmp
pusha
push
lea
jae
cmp
test
pushf
cmp
pushf
movl
lea
jae
pushf
mov
jmp
int3
popf
push
pusha
pushf
movl
jmp
call
jmp
push
lea
call
pusha
lea
jb
pushf
push
pusha
pushl
ret
jmp
lea
movw
movl
lea
js
pushf
pushf
pushl
popl
pusha
pushl
ret
lea
je
jmp
mov
cmp
jmp
cmp
movb
lea
je
push
lea
jmp
movb
lea
call
jmp
mov
adc
push
pushl
ret
call
outsb
mov
sbb
xor
hlt
push
mov
or
mov
sub
in
xchg
int
adc
mov
mov
or
cmp
test
or
cld
xchg
xor
push
jle
xor
push
push
ljmp
jnp
stc
std
cmp
push
test
ds
pop
outsb
pop
pop
ss
outsl
lahf
ffree
jno
mov
xor
repz
fcmove
bound
cmp
das
popa
cmp
mov
jnp
lea
call
jmp
xor
or
mov
jl
adc
or
inc
ret
rclb
sarl
push
mov
fimuls
mov
enter
cmp
das
jae
mov
in
mov
movl
cmpsb
cli
les
pop
popa
push
xor
jae
xchg
je
sbb
xchg
or
bound
pop
sbb
cmp
pop
jbe
sbb
xor
jo
cmp
lea
jo
sbb
jne
push
cld
jp
push
repnz
jns
imul
fwait
jno
imul
arpl
ljmp
jbe
jg
bound
mov
out
out
es
cs
xchg
lods
sub
inc
sub
stos
lea
repnz
dec
mov
cmp
lock
rep
xor
pop
test
xchg
push
push
jnp
arpl
cltd
cld
push
pand
out
pop
xor
inc
int
insb
push
jge
jmp
imul
adc
scas
lret
scas
inc
pop
test
nop
xor
jl
cld
jns
cmc
xor
push
lahf
lock
adc
pushf
pop
nop
fisttpl
mov
push
ret
lods
mov
jge,pn
jl
jnp
jns
js
ja
jbe
dec
je
jl
out
in
roll
les
xor
jns
cmpsl
js
xchg
xor
clc
cli
push
jmp
outsl
or
lods
aas
sub
mov
fs
int3
loopne
rorb
jne
dec
push
jle
stc
xchg
cmp
cltd
cmp
imul
and
jno
sub
cli
jnp
cmc
repz
mov
leave
fstl
int3
pop
scas
lods
ret
mov
xchg
cwtl
mov
das
sbb
adc
gs
sti
xchg
dec
jbe
push
movzbl
scas
or
jmp
and
xor
je
xor
clc
cmp
call
pop
nop
pop
jae
mov
fsubr
lahf
push
test
stos
js,pn
ret
outsb
movsb
xorb
jl
mov
jl
jbe
jnp
jb
jnp
sarl
jl
push
push
add
std
pop
pop
popa
push
outsb
lahf
sub
cmp
sbb
testl
es
in
jae
sub
pop
lods
subb
pop
insl
sbb
out
insl
data16
cwtl
xorb
push
add
je
gs
fs
push
fsubl
iret
addr16
gs
dec
jge
push
int3
push
insl
into
lea
push
inc
pushf
loopne
xor
mov
popa
cmp
dec
jns
xor
push
ljmp
test
sti
xchg
iret
test
movsl
cwtl
jnp
aas
pusha
fcomi
movsl
aas
mov
sub
xor
push
sub
and
pop
cmp
movsb
inc
ficoms
movsb
stc
add
lret
scas
pop
lret
lcall
mov
mov
scas
sbb
jmp
pop
mov
push
xchg
push
int3
fs
imul
bound
shlb
shll
dec
inc
sub
out
jae
or
outsb
mov
imul
lea
adc
push
pop
repnz
xchg
push
fwait
in
pop
inc
xchg
out
loop
mov
jae
fldl
test
mov
mov
bnd
mov
push
pop
insl
loopne
nop
sbb
xchg
out
mov
inc
fildll
mov
test
outsb
jb
cmp
repz
movsl
int
out
jb
cmp
adc
push
leave
jle
insl
or
int3
jmp
scas
mov
cmp
jle
adc
enter
xor
cli
js
jle
jbe
xor
addr16
stos
cmpsl
push
mov
mov
fs
jbe
ljmp
scas
or
cmc
sar
jnp
or
pop
jmp
and
pushf
add
cmp
push
aaa
test
cmpsl
stos
xchg
out
daa
imul
mov
mov
sub
scas
xchg
push
ljmp
jbe
xchg
jecxz
or
jns
xchg
push
dec
test
gs
jns
stc
data16
repz
push
das
movsb
sub
pop
sbb
sub
sti
insb
popa
ret
jmp
imul
getsec
xor
imul
imul
cmpps
jb
leave
cmp
xor
lods
iret
mov
xchg
pop
fistpl
pusha
or
cmp
cwtl
jle
ljmp
push
and
insb
cmp
iret
pop
into
pop
gs
lods
mov
into
jae
xor
jb
pusha
or
cmp
outsl
psrld
insb
js
mov
xor
adc
outsl
aam
sub
jmp
jmp
push
popl
jns
push
aas
outsb
push
dec
pusha
pop
je
jge
outsl
xor
popa
in
xor
pop
adc
rcr
test
out
lods
add
jle
push
test
adc
pop
je
xchg
and
dec
sub
aad
lahf
out
pop
insb
sbb
imul
scas
dec
sbb
aad
dec
push
xor
push
and
pop
jne
outsl
outsb
push
rcrb
icebp
xchg
ds
outsl
les
dec
pmaddwd
in
mov
push
cmpsb
out
out
test
stos
pop
mov
clc
pop
insl
lahf
ret
nop
aas
in
std
push
dec
sub
cli
mov
mov
xor
sub
push
and
mov
outsb
sub
pop
sub
lcall
jg
xor
data16
js
cli
mov
test
adc
jge
outsb
int
dec
addr16
lcall
jbe
sub
mov
and
outsb
jae
inc
fs
stos
or
push
ds
mov
out
ja
xchg
es
xor
adc
jl
addr16
dec
stos
lea
sub
js
jbe
push
ja
mov
stc
stc
sub
push
pop
fisttpll
gs
lret
jmp
dec
jno
out
dec
sub
dec
movsb
sub
das
pop
push
or
stos
movsb
sbb
rorb
adc
cli
and
inc
sub
mov
mov
sbb
sub
clc
cmp
es
xor
fistpl
insb
popa
sarl
xor
xor
lret
jmp
jle
lahf
push
push
jae
sub
inc
or
jb
jg
jno
lcall
out
sub
inc
aad
mov
fisttpll
jne
rcl
push
xchg
push
ja
in
imul
or
into
sti
mov
jge
adc
imul
das
push
jbe
jmp
or
fs
gs
sub
push
cmp
dec
and
xor
jmp
arpl
or
push
sub
lock
dec
fsubs
cmpsb
scas
push
pop
pop
jae
outsl
int
scas
dec
popf
popf
mov
lcall
add
xchg
mov
fldcw
mov
or
jae
pop
call
fadd
pop
lods
sbb
fs
test
sub
loopne
fwait
enter
jnp
xor
jns
jecxz
popa
mov
paddusw
push
sub
pop
cmp
ret
and
cmp
daa
dec
sub
rcrb
xorb
fistps
andb
dec
push
lea
je
dec
test
popf
mov
js,pn
sub
push
xchg
dec
and
in
pushf
and
imul
ljmp
ds
add
jp
aas
popf
testb
das
inc
mov
lcall
out
add
das
cs
testl
jge
psllq
cmp
dec
and
sbb
mov
jno
adc
push
aas
mov
bound
stos
push
es
bound
inc
pop
cwtl
sub
rorb
fsubs
movsl
mov
clc
jbe
outsl
out
arpl
mov
in
jns
mov
dec
daa
je
sbb
leave
je
out
dec
and
daa
das
idivb
lds
clc
push
push
loop
mov
push
pushf
imul
inc
mov
lahf
sbb
loopne
mov
inc
dec
mov
movsb
pop
imul
es
addr16
arpl
ficompl
inc
jb
xchg
jecxz
popf
fisubs
push
out
mov
hlt
cmp
dec
scas
incb
fstpl
sti
or
lret
sbb
je
dec
push
cmc
or
jge
fwait
mov
pop
imul
fildll
hlt
mov
pop
mov
jb
popf
sbb
mov
mov
gs
push
inc
loopne
cs
jg
and
sub
sbb
fcoml
sti
fst
lret
dec
lret
jecxz
in
sbb
loop
arpl
gs
push
popf
add
ds
insb
js
push
test
lea
add
loope
sub
outsl
mov
outsb
ja
jl
fdivrl
pop
mov
cmp
pop
xor
push
dec
xchg
mov
arpl
fcomps
cmpsl
jle
dec
inc
sbb
pop
out
iret
pop
data16
fnstsw
arpl
mov
push
outsb
movsl
icebp
in
int3
dec
adc
push
cmp
mov
jg
sbb
or
imul
jmp
jb
aas
xchg
or
push
mov
push
mov
outsl
sub
out
daa
jge
sub
inc
cmpsb
or
push
imul
cmp
and
pop
pop
or
stc
jbe
mov
push
dec
and
and
dec
es
push
jbe
cli
and
das
xchg
popa
testl
jb
jns
subl
bound
popa
dec
jg
orb
jg
mov
fs
dec
push
cmpsb
popf
pop
dec
and
jbe
jecxz
in
mov
sub
out
pop
fildll
xchg
lret
pop
sbb
mov
stos
add
and
fisttpll
jbe
pop
insb
jne
mov
inc
xor
pop
outsb
sbb
movsl
push
imul
and
fdivr
es
lret
imul
fisttpll
cmp
int
jg
dec
subl
gs
loopne
dec
jge
enter
rcrl
sbb
dec
movsb
movsb
pushf
adc
int
mov
inc
mov
mov
cli
pop
movsl
fwait
out
leave
push
inc
arpl
push
je
lret
inc
cs
xor
imul
sub
out
add
mov
inc
loop
daa
pop
test
daa
jge
ret
aam
dec
inc
loope,pt
aaa
imul
in
mov
sub
bound
sbb
jae
pop
inc
cmp
cmp
out
fcoml
ret
push
mov
dec
push
mov
inc
xchg
pop
sti
cmpsb
pop
loopne
and
daa
outsb
xor
inc
mov
insl
pop
fstp
lret
insb
sbb
cmp
loopne
pop
adc
adc
imul
out
lret
es
add
jp
int3
fs
lret
arpl
sti
jmp
jle
inc
roll
jge
fldt
lea
jg
les
inc
paddusw
adc
mulb
pop
push
jge
push
cmpsl
into
or
test
jns
push
int3
jb
and
insl
xchg
das
lods
jge
xchg
out
sti
xchg
add
xor
jmp
jbe
sbb
in
mov
insb
jne
sbb
push
dec
fstl
mov
mov
std
lea
out
mov
dec
dec
inc
repnz
dec
icebp
cmp
sbb
pop
int3
daa
dec
cld
imul
and
aas
out
mov
push
fisubs
add
pop
imul
scas
cmpsb
add
pop
inc
and
adc
inc
mov
bound
repnz
mov
or
sbbb
mov
stos
pop
xor
shl
dec
std
inc
jge
pop
cltd
aas
aas
aaa
xor
mov
daa
push
ja
pop
adc
jg
outsb
mov
aas
sbb
push
pop
add
cmp
push
push
arpl
popf
fisubrs
out
xor
insb
xchg
dec
mov
or
xchg
push
xor
sub
push
mov
push
or
add
cs
sbb
jns
lods
sub
push
and
test
push
imul
insl
fsubrp
inc
ja
movsl
push
or
insl
repnz
mov
jb
loope
fld
insb
test
jmp
pop
push
jae
and
daa
js
xchg
pop
pop
push
mov
lahf
in
jnp
push
push
scas
lea
or
adc
ds
xchg
xor
in
sysenter
aam
nop
inc
ret
lret
pop
sub
fs
psrld
stos
inc
or
dec
or
mov
mov
sub
mov
pop
jle
outsl
aad
mov
xchg
push
insl
int
ss
sub
mov
outsl
xchg
cmp
and
outsb
shrb
nop
push
subb
scas
sahf
fs
lret
mov
push
and
lea
cmp
and
adc
or
mov
scas
mov
push
outsl
xor
movsb
iret
cmc
sub
fsubr
pop
daa
push
lret
fs
or
ja
shrl
inc
inc
jecxz
cmpsb
jns
gs
dec
scas
lock
subb
decl
js
shr
dec
cmp
fstpt
aas
ja
fmull
test
pop
and
xchg
out
aam
hlt
outsl
inc
js
outsb
unpckhps
mov
call
pop
loope
scas
xor
dec
sbb
xor
pusha
mov
mov
fsubs
push
scas
xor
pop
nop
mov
xchg
ficompl
jns
xchg
or
in
sbb
call
xchg
push
ja
sub
mov
lea
mov
arpl
cmp
xchg
xchg
ljmp
push
sub
insl
sbb
inc
data16
jo
adc
jl
add
ljmp
fisubl
adc
scas
in
insb
ljmp
mov
adc
fsubrl
cmp
mov
push
mov
dec
cmp
jl
push
push
push
cli
addr16
mov
jle
in
sti
mov
ds
pop
sti
add
dec
jg
shlb
pop
popf
mov
mov
push
lods
pop
imul
or
mov
mov
push
add
jmp
outsb
xor
or
add
es
lock
je
jl
push
loop
scas
jo
nop
sbb
push
shrl
dec
mov
incb
out
cs
pushf
mov
and
cmpsl
xchg
imul
xor
cli
andb
jo
imul
jae
inc
dec
jmp
mov
repnz
dec
imull
push
clc
es
or
aad
popa
pusha
sub
and
insl
jae
je
daa
sub
cmp
sub
iret
fisubl
insl
and
mov
cmpsb
test
std
divb
jl
ds
and
xor
mov
loope
xor
in
xor
ficoms
aad
into
push
inc
fs
out
lods
jg
outsb
lea
in
adc
jge,pn
cmp
and
scas
cli
call
jo
in
push
lods
testb
outsl
fwait
sarl
mov
scas
fsubl
pop
pop
push
jle
dec
sbb
lods
push
push
sub
push
ljmp
out
insb
movsl
fiaddl
push
scas
push
outsb
inc
jl
jbe
pushf
shrb
push
aam
dec
dec
push
int
es
sub
repnz
pop
inc
hlt
rclb
outsb
jl
aas
dec
sbb
jns
out
popf
lea
cmp
loopne
inc
xchg
in
add
ljmp
loop
dec
add
fs
push
popa
push
xor
jnp
or
mov
int
lods
in
cli
add
jb
lock
mov
in
cmp
and
jno
sub
xchg
cmp
outsl
out
jae
cs
inc
push
xlat
sub
and
inc
leave
jecxz
cmp
imul
push
aas
lret
fs
cmp
ss
test
fists
imul
fisttpll
push
int
sub
push
int
cmp
out
jp
sahf
and
pop
scas
push
dec
test
push
mov
dec
outsb
cmp
rcr
fidivrs
xchg
clc
jmp
out
push
and
popa
out
dec
setno
cmp
fcmovnb
scas
in
dec
mov
ficomps
lods
idivb
sbb
outsl
idivl
loopne
dec
sub
stc
addr16
je
add
pop
sahf
push
cltd
and
mov
sbb
xchg
jne
mov
clc
mov
add
fnsave
lea
push
jg
mov
pop
fldcw
jecxz
lods
push
push
pop
in
push
mov
add
pop
push
cs
mov
jo
daa
adcb
ror
pop
sti
cmp
in
jl
pop
jl
push
pop
add
jl
es
sub
push
push
mov
lods
or
ds
sbb
lds
jns
dec
ljmp
and
or
dec
arpl
pop
jo
adc
jns
call
xor
dec
out
xchg
in
lret
dec
btc
insl
cmp
push
popa
cmc
ja
cmp
pop
sbb
jb
xchg
lea
in
mov
dec
push
xor
xor
mov
out
push
fildll
gs
and
popf
jl,pt
ret
ja
jnp
jle
je
out
dec
or
inc
lods
adc
ret
cmp
xchg
cmp
lret
jnp
pushf
sti
dec
mov
mov
orb
xor
sub
sub
dec
pop
pop
imul
jle
sub
sub
insw
dec
iret
je
dec
sub
scas
out
roll
outsb
dec
in
xorb
push
shrb
dec
mov
sub
adc
ljmp
pop
cmp
sbb
mov
mov
or
mov
add
and
and
add
sbb
lods
movups
fwait
lret
ds
fidivrs
je
pop
mov
dec
ljmp
push
out
sbb
dec
mov
test
xchg
outsl
roll
bswap
jecxz
jbe
data16
jae
shll
imul
sti
outsb
out
negb
mov
dec
mov
add
add
ficomps
cmp
cli
inc
sub
fnsave
jl
les
outsb
cmpsb
pop
das
bnd
sti
mov
push
jne
std
sub
mov
jp
push
jge
jg
pop
pop
xchg
or
int
jp
test
adc
push
mov
sub
jns
sub
test
das
inc
jecxz
push
cmp
fcompl
jl
in
xor
adc
sti
add
push
orb
outsl
jl
mov
push
aas
jmp
out
push
and
arpl
xor
ja
ljmp
push
aas
xchg
ljmp
or
sbb
sub
movsl
fistps
imul
inc
mov
dec
and
jbe
sub
addb
movsl
out
cli
push
mov
ds
stos
jg
scas
jl
cmp
mull
imul
sbb
int
rcll
mov
inc
shrb
and
ficomps
pop
aad
add
popa
pop
andl
sub
clc
adc
pop
fsubrs
jl
test
jl
mov
jl
inc
jbe
movsb
dec
cmpsl
imul
in
push
or
push
jl
scas
out
lock
add
dec
bound
jae
idivl
mov
pop
sti
lahf
ljmp
push
test
and
dec
jnp
adc
push
xor
data16
jle
push
dec
xor
jo
scas
or
mov
lret
imul
outsl
in
ljmp
int
xor
out
je
mov
outsb
imul
jmp
cmp
mov
push
xlat
outsb
lods
fwait
pop
insb
jp
imull
shrb
lret
insl
movsl
cmp
cs
out
mov
cs
scas
out
imul
push
sub
in
pop
mov
movsb
pusha
dec
add
adc
iret
idivb
stos
or
push
loope
pushf
jg
jns
pop
jecxz
mov
addr16
inc
in
mov
es
clc
ret
cmp
std
or
inc
inc
adc
inc
xchg
mov
js
lods
movsl
and
ret
stos
xor
mov
outsl
or
dec
sbbb
in
cli
jo
sub
scas
cs
out
pop
push
lret
dec
mov
repz
ret
jns
scas
dec
jp
cld
mov
cmp
jbe
insl
lods
in
push
insl
out
jns
sub
out
adc
mov
dec
sub
cmp
out
mov
imul
sub
aaa
sub
dec
stos
mov
push
test
push
lret
mov
sti
stos
outsl
movsl
mov
lahf
and
sbb
fsubrl
or
dec
in
inc
cmc
xor
and
push
mov
xchg
push
jge
sub
fisubrl
push
push
in
jmp
sahf
push
or
or
fildll
sbb
aad
cmp
adc
jne
jg
or
push
xlat
jno
and
lods
scas
rcrl
cmpsl
rolb
loop
xchg
mov
or
add
pushf
in
scas
rcrb
popa
mov
cmpsl
sarl
icebp
imul
popa
dec
subb
lods
test
add
jbe
leave
pushf
mov
cld
adc
fisubs
jb
nop
arpl
or
push
std
fsubs
or
stos
fs
outsb
imul
adc
cmpsl
imul
insb
dec
xor
nop
out
push
xchg
fs
xchg
dec
icebp
dec
pop
dec
sub
jecxz
jle
dec
decb
mov
data16
mov
mov
data16
imul
orb
xorb
orb
jae
lret
dec
dec
push
sub
mov
in
bound
mov
push
icebp
cmpb
out
test
jl
fistl
jge
or
mov
pop
sarb
jnp
aad
or
sbb
enter
outsb
inc
ds
dec
lock
pop
and
in
loop
lret
xor
daa
call
sahf
dec
dec
das
std
push
imul
cmp
dec
insb
cs
lea
mov
xorb
cmp
clc
out
fidivrs
in
cltd
arpl
fisttps
bound
lds
push
fisttps
and
iret
cmp
dec
cmc
inc
sahf
imul
out
mov
inc
adc
or
mov
aad
pop
insb
xchg
fwait
xchg
fnstenv
jae
imul
sub
scas
mov
mov
push
push
and
adc
pop
dec
bound
push
xchg
push
paddusb
push
xchg
push
imul
mov
sub
in
int
in
sahf
mov
js
sbb
and
nop
adc
repz
dec
scas
insb
adc
xor
lahf
pusha
lods
adc
mov
xchg
jge
push
pusha
jecxz
out
or
mov
push
out
loope
bound
adc
fucom
fisubl
and
jg
add
mov
adc
push
adc
push
pushf
fdivrs
ljmp
adc
dec
xchg
mov
inc
sar
cli
jecxz
cmp
rcr
lock
jmp
insb
add
rcll
inc
mov
pop
lea
ja
gs
dec
outsb
jle
arpl
das
sub
jmp
fcmovbe
jg
into
pop
inc
outsl
in
and
mov
repz
adc
in
inc
out
pop
or
inc
adc
dec
fistps
jge
jg
jno
test
jnp
out
pop
lret
adc
cli
inc
pop
cmp
lds
insb
push
out
es
jle
inc
or
xchg
mov
nop
in
insl
in
add
fdivrs
cmc
jle
push
xchg
stos
xor
loop
pusha
outsb
and
push
sub
ret
push
aaa
lea
imull
pop
insl
mov
jg
inc
xor
nop
in
dec
gs
sbb
dec
movntps
outsl
mov
out
outsb
pop
sarb
arpl
mov
or
or
outsl
or
cld
in
insb
out
outsb
iret
lock
inc
pushf
push
sbb
lods
pop
mov
ljmp
js
jmp
frstor
mov
pusha
and
cwtl
int3
ror
sbb
push
pop
push
or
into
xchg
imul
pop
and
pop
jmp
xchg
fdivrp
fsubr
xchg
jge
lret
push
jb
cmpsb
push
jno
enter
mov
cltd
int
test
fwait
inc
inc
fidivrs
hlt
mov
fsubrs
cmpsb
push
cld
xor
push
xchg
rcl
sub
rorl
bnd
insb
push
cmp
call
dec
pop
ds
ss
in
aam
in
jg
jbe
mov
nop
mov
out
insl
mov
daa
jno
mov
add
and
push
cld
in
lret
sbb
xlat
mov
push
imul
lods
arpl
mov
nop
inc
insb
loop
mov
out
fs
pop
push
jbe
add
jg
inc
enter
xor
scas
popa
imul
jmp
adc
mov
push
imul
sub
push
in
sub
jge
xor
push
push
pop
mov
mov
adc
pop
inc
adc
mov
outsb
xchg
mov
mov
jbe
js
ljmp
dec
rclb
popf
jne
xor
jns
das
push
inc
sub
inc
cmp
jg
add
cmp
data16
push
push
int
fs
seto
ja
dec
out
out
and
insl
sti
aas
dec
add
arpl
out
lahf
sti
cld
sub
mov
popa
and
xchg
data16
data16
stos
mov
mov
and
sarl
sub
insl
mov
enter
test
pop
dec
mov
cli
insl
mov
push
ja
test
xchg
aam
fisubrl
sub
gs
lock
push
push
push
mov
and
cmp
fstpl
es
dec
mov
gs
data16
cmpsl
ljmp
mov
mov
and
push
push
in
in
pop
xor
inc
clc
add
jb
mov
dec
arpl
bound
cmpsl
in
mov
mov
jne
in
jb
cs
dec
repz
mov
ljmp
xorb
push
orb
and
into
cmp
sahf
xor
add
aam
adc
inc
subl
es
lods
sub
pop
sub
jae
sbbb
js
pop
repz
int3
in
pop
mov
negl
mov
outsb
rcll
mov
dec
cmpsb
ficoml
mov
ja
xchg
in
xor
sahf
das
subb
and
es
or
insl
lea
loop
jl
inc
imul
push
in
mov
xor
jecxz
ficomps
out
jnp
dec
mov
pop
push
xor
aad
and
jae
jg
loopne
jo
fs
mov
das
leave
dec
push
jecxz
cltd
xor
daa
pop
and
in
rorl
jo
xor
xor
iret
push
cmp
xor
aaa
and
mov
outsb
in
cmpsb
sbb
adcb
pop
jb
inc
popa
mov
jo
cmpsb
lea
fisttps
sahf
aas
in
push
inc
inc
jnp
push
cmp
das
mov
lea
outsb
mov
cmp
add
ljmp
leave
pop
dec
push
dec
fiaddl
inc
inc
cmp
sti
push
iret
lahf
push
and
outsb
stos
add
xor
jae
jns
outsl
es
fisubl
ljmp
scas
jmp
insb
xchg
out
testb
jae
leave
and
in
ss
lahf
std
in
outsl
jmp
inc
mov
das
add
mov
jp
rol
jle
cs
ror
imul
les
scas
fmuls
fs
jg
xchg
lock
push
push
mov
cli
adc
orb
mov
or
mov
xor
xchg
lea
jne
mov
push
movsb
lret
jo
scas
mov
nop
imul
push
dec
jno
and
outsb
cmpsb
repz
ljmp
outsl
lea
dec
ja
icebp
jnp
mov
cmpsl
push
into
imul
daa
dec
jp
clc
fstpl
lods
clc
jmp
shll
inc
jle
jp
js
lock
mov
dec
or
dec
js
pop
pop
jmp
ljmp
hlt
movsb
push
aad
lods
xlat
add
jg
sub
dec
cmp
out
add
shrb
scas
in
outsb
adc
insb
push
add
jmp
ljmp
enter
sbbl
sbb
push
or
int3
les
filds
sub
outsl
je
sub
cmp
dec
or
sti
inc
lahf
repnz
sub
mov
arpl
push
fists
rep
outsl
ljmp
scas
fbstp
imul
xor
dec
pop
sbb
sub
outsl
popf
sub
in
incl
shlb
add
insb
dec
fists
or
stos
adc
pushl
adc
ljmp
push
mov
outsl
jg
xlat
push
fistpll
sub
gs
push
fists
and
adc
movq
xor
es
cmovg
jp
int3
and
cmovg
jp
dec
andb
dec
lcall
hlt
andb
loopne
repz
jge
pushl
aas
outsb
jnp
mov
cmovg
jp
mov
mov
or
push
pushf
xor
dec
call
testl
cmovg
jp
cmp
lods
mov
cwtl
push
out
test
push
rolb
mov
or
ret
orb
push
dec
mov
mov
cld
cmc
sarb
scas
sbb
sti
outsl
mov
and
fs
dec
sbbb
pop
loopne
out
mov
ljmp
push
pop
and
sub
subb
sub
inc
inc
dec
nop
push
push
daa
outsb
push
jnp
dec
je
les
sub
imul
into
mov
xor
ja
ds
pop
ja
std
pop
insb
ja
cs
or
out
jg
rorb
jmp
addr16
jle
dec
in
mov
jg
decb
cmp
ja
mov
iret
or
out
jg
add
sbb
jle
dec
jge,pn
push
cmpsb
jg
aas
push
jnp
mov
repz
or
out
jg
add
pop
jmp
addr16
adc
cmp
jg
jg
mov
jle
or
out
jg
inc
push
popf
jmp
addr16
jle
dec
scas
cld
sub
out
jg
mov
addr16
mov
int3
out
jg
orl
push
jle
inc
push
push
addr16
addr16
jle
or
out
or
js
lea
dec
out
pop
lods
push
iret
enter
and
pop
pop
insl
sbb
das
inc
shrl
and
int
out
scas
mov
cmpsb
mov
adc
and
inc
ja
js
mov
push
xor
jl
cmp
sub
or
jae
ja
insb
js
loop
inc
out
outsl
dec
out
outsl
dec
out
outsl
dec
out
outsl
dec
out
outsl
dec
out
das
dec
gs
mov
push
and
mov
dec
mov
or
pop
jae
dec
pop
out
or
loopne
mov
mov
or
pop
dec
push
dec
repz
ljmp
into
mov
rcll
dec
out
xchg
sbb
jae
or
push
ret
ds
dec
jmp
arpl
hlt
pop
pushl
cmpsb
add
jnp
addr16
sub
insl
out
in
fs
jp
xlat
sub
test
movd
push
dec
pop
or
and
addr16
push
loope
mov
cmp
adc
sub
loop
xor
inc
push
lahf
test
jp
sti
xchg
repz
cmp
insb
dec
pop
and
out
je
in
repz
out
aaa
jmp
xchg
insl
mov
cmc
jae
js
or
movsl
shll
test
and
inc
sahf
and
imul
outsb
pop
cmpsl
scas
xor
mov
jmp
inc
outsl
scas
pop
push
into
ss
fisubrs
inc
imul
dec
dec
cmpsl
insl
lea
dec
ret
or
pop
mov
into
cmpsb
insl
sub
jbe
pop
sbb
inc
cmp
pop
or
ret
jg
fmull
fsubs
jle
dec
sub
sub
out
jg
and
mov
jle
or
out
push
lret
push
enter
ret
je
cld
cmpsb
and
out
sub
out
in
jbe
sub
xor
iret
mov
sbb
push
aad
jmp
out
add
mov
sub
out
inc
pop
mov
inc
loopne
push
sub
or
push
dec
pop
ja
negl
push
push
dec
cli
clc
sub
data16
lea
jae
frstor
sbb
sbbb
test
dec
fildll
jnp
pop
jle
xor
mov
lea
sub
dec
outsb
cld
xor
pop
loopne
loop
pop
sbb
jne
jbe
ja
js
jns
sub
jnp
inc
js
xchg
roll
shrb
repnz
outsb
sbb
or
fisubrl
push
or
jp
jnp
jl
jge
mov
sbbb
arpl
fs
inc
into
out
aad
sub
push
shll
decl
sub
loop
hlt
adc
jle
jbe
sbb
in
and
mov
jg
popa
mov
push
divb
sar
cli
cld
pop
and
sub
mov
push
pop
sbbb
or
in
jne
rolb
ljmp
cmp
jne
insl
das
test
jecxz
cs
and
jle
icebp
mov
push
testl
push
aas
lods
jp
mov
popa
push
cmpl
jge
gs
add
shr
jb
lret
cs
outsl
mov
mov
adc
mov
xchg
test
andl
lahf
or
xor
jmp
addr16
or
out
jg
jp
js
pusha
mov
jmp
daa
xlat
shl
cld
mov
loopne
add
shlb
cmc
push
clc
xchg
mov
adc
mov
inc
test
xor
outsb
int
loopne
cmc
into
lea
fsubrp
dec
or
fsubl
sub
sub
mov
loope
jg
jle
jle
jnp
sti
shll
imul
pop
mov
insl
dec
push
xchg
sti
movsb
repz
xchg
inc
repz
and
pop
std
or
sti
andl
xor
out
jbe
push
aas
lea
xlat
jge
sub
cmp
outsl
xchg
cmpsl
data16
push
cmc
cld
dec
into
in
and
pushf
sti
cld
xor
out
into
jge
pusha
cmpsl
and
sub
or
jle
jae
mull
jno
aas
and
mov
mov
pop
ja
and
arpl
adc
pop
and
xchg
pop
push
lret
jl
out
arpl
insb
leave
or
xchg
xchg
push
movsl
jb
cmpsl
mov
test
dec
push
cmpsl
arpl
push
arpl
push
sub
pop
ja
inc
jbe
or
dec
pushl
cmpsb
mov
clc
or
cmpsb
imul
dec
data16
pop
mov
in
lahf
dec
push
mov
shll
xor
in
addr16
sub
fisubrs
test
in
pop
loopne
fwait
cmpsl
call
out
mov
xlat
outsb
popa
cs
push
mov
dec
sub
call
insl
lods
sbb
call
xor
popa
mov
stos
call
jb
mov
xlat
push
mov
test
sub
call
push
out
cmpsl
xor
popa
mov
cmpsb
call
jb
mov
and
call
jb
mov
xlat
arpl
and
adc
call
jb
mov
xlat
popa
popa
mov
mov
inc
jb
mov
xlat
jg
mov
mov
jb,pt
mov
cmp
call
jb
mov
xlat
jnp
mov
pop
jb
mov
xlat
stc
popa
mov
add
sbb
xlat
sub
mov
cmp
adc
call
jb
mov
xlat
jbe
mov
mov
cmpsl
jne
xor
mov
je
mov
mov
cmpsl
jae
sbb
repnz
mov
xor
cmpsl
icebp
pop
mov
jno
sub
xlat
lock
mov
and
out
lods
sub
adc
in
dec
jnp
dec
sub
mov
pop
jbe
loop
stos
imul
inc
scas
jmp
pop
jmp
inc
xchg
xor
jbe
jmp
pop
push
je
int
repz
aam
out
xchg
and
and
ret
std
das
mov
push
or
mov
sub
mov
daa
jge
int3
out
pop
jae
inc
cmpsb
push
outsb
push
xchg
dec
call
cmpsb
rclb
cli
xchg
pop
cmpb
sbb
subl
jbe
testl
cmp
inc
push
inc
scas
lods
jbe
fbstp
adc
mov
sub
jb
sub
mov
leave
cmp
hlt
insb
insl
dec
pop
inc
xchg
mov
or
bound
xorb
imul
aad
stos
mov
call
jnp
xchg
shlb
jne
add
adc
imul
jmp
js
into
call
test
out
dec
dec
or
dec
dec
subl
push
dec
mov
out
cmc
out
xchg
movsl
jae
jbe
out
hlt
fildll
dec
out
sub
mov
cmp
inc
jmp
sub
cltd
pop
inc
jle
pop
outsb
mov
test
arpl
mov
add
dec
out
lea
adc
sub
inc
cmp
cwtl
nop
mov
inc
sub
sub
mov
inc
pop
mov
into
cmpsl
add
push
aad
mov
pusha
dec
xchg
xchg
push
negl
jle
lods
push
pop
and
xchg
pop
and
outsb
lods
sub
lds
adc
lods
mov
jecxz
test
vmwrite
and
pop
popa
and
cmpsl
add
imul
jbe
cmpsl
pusha
cmc
sarl
lcall
inc
ret
dec
adc
mov
push
sub
in
dec
jno
push
repz
jbe
jecxz
push
jmp
pop
xchg
loope
dec
outsl
xor
xor
or
push
jns
push
push
scas
out
cli
mov
sub
mov
das
adc
adc
ret
stos
add
cmp
js
popa
push
mov
jnp
xor
dec
data16
loopne
push
jbe
mov
insb
cmp
repz
insb
push
es
adc
dec
icebp
pop
loope
inc
push
push
sub
clc
int
add
cwtl
shl
dec
bound
cmpsb
lret
bound
mov
out
xchg
xchg
push
cmp
mov
insb
dec
fwait
jmp
push
inc
outsb
hlt
mov
in
ret
hlt
stos
fildll
stos
xlat
push
stos
xlat
imul
adc
sub
sti
gs
jbe
sarl
fs
pop
insl
mov
out
cltd
push
enter
cmp
jle
dec
sub
cmp
shr
repz
imul
add
dec
es
enter
aas
inc
jl
cmp
out
call
pop
stos
cmpsb
jmp
scas
es
push
inc
pop
incb
jp
pop
test
cli
hlt
and
outsb
mov
inc
pop
mov
das
popa
xor
dec
aas
add
cmpsb
push
and
es
xchg
loop
das
outsb
daa
sbb
imul
dec
outsl
jg
mov
inc
jmp
sub
gs
and
sub
xor
shl
fucom
jg
fcomp
sub
pop
or
outsl
out
pop
repnz
sti
negl
mov
icebp
push
push
xlat
ret
imul
sbb
xchg
jae
insb
or
jbe
cli
xchg
insl
es
push
pop
icebp
ja
inc
aad
jae
push
xchg
fstps
in
or
mov
dec
dec
dec
cmp
aas
cmpsb
iret
pop
and
test
cmc
call
push
dec
xor
xchg
inc
xchg
jl
in
adc
decl
xchg
insb
inc
dec
sbb
out
sub
outsb
push
dec
jmp
shrb
jg
out
sub
outsb
or
pop
sub
jg
out
sub
sub
jno
mov
lods
xor
outsb
test
add
mov
js
push
jg
dec
dec
cs
mov
jg
fsubrs
scas
jge
sbb
scas
movsb
dec
fcoml
scas
data16
scas
scas
sub
je
stos
shll
insl
sub
mov
push
inc
pop
cld
jmp
addr16
out
data16
push
jbe
sar
cltd
ss
aaa
jnp
adc
cmpsl
dec
or
rorl
push
call
ja
jmp
jecxz
cmp
scas
ja
jl
daa
sub
imul
adc
insb
push
jg
push
and
xchg
aad
xorb
outsb
dec
mov
aaa
pop
or
jle
es
xor
adc
xor
dec
and
sub
imul
shr
push
insb
fistpll
addr16
mov
or
sbb
sub
inc
mov
inc
push
cmc
mov
aad
incl
inc
mov
pusha
pop
pop
adc
and
pop
jl
pop
pop
push
adc
and
push
jl
outsl
je
outsb
adc
mov
in
and
mov
fsubl
pushf
fs
pushf
bound
pop
pushf
jle
pushf
jl
pushf
jp
pushf
js
cwtl
nop
mov
adc
nop
insl
dec
adc
adc
adc
adc
adc
adc
outsb
jmp
sbb
incl
fisttpll
mull
jecxz
or
mov
cmc
or
insb
popa
mov
push
pop
jg
fistpll
fwait
mov
sub
pusha
jmp
lock
or
pop
cmp
out
sub
sub
xchg
jae
mov
jp
dec
dec
das
push
daa
addb
inc
out
or
aaa
jge
sbbb
int3
adc
add
jg
fs
ret
test
out
xchg
aam
jns
push
loope
int3
push
test
inc
hlt
pop
je
jnp
jo
addr16
and
or
je
cld
ficompl
mov
push
cs
mov
jmp
ds
dec
mov
in
sahf
das
push
cmc
scas
gs
push
lret
outsl
loop
push
lret
je
add
enter
adc
cli
cmp
push
sbb
push
adc
bound
xchg
fs
mov
jne
mov
std
push
mov
addr16
in
mov
push
je
cli
outsl
jl
test
push
push
push
push
add
insl
push
aas
je
xchg
pop
jb
out
push
push
cmpsb
push
pusha
push
push
inc
xchg
mov
test
add
lock
fs
je
xchg
xchg
pop
adc
or
push
mov
or
imul
xchg
into
pop
xor
and
mov
outsb
ret
push
out
xchg
mov
xor
gs
add
xchg
mulb
mov
sub
cmp
or
fmulp
or
in
xchg
clc
js
outsb
aam
insl
ficoml
cmp
shl
xchg
sub
aad
outsb
aaa
push
js
sub
cmp
cld
pop
ja
inc
mov
imul
and
ret
dec
mov
pop
mov
popa
push
les
mov
dec
mov
fs
test
cmc
mov
je
mov
dec
dec
sahf
mov
lods
pop
jg
dec
dec
out
cmp
mov
stos
ja
cmp
ret
mov
xchg
insb
scas
iret
jb
jle
data16
arpl
sub
inc
scas
cmpsb
popa
cmpsl
bound
aam
repz
dec
cld
push
popa
xor
cmpsb
dec
dec
ja
push
sti
jge
sub
dec
movl
jns
ja
xor
mov
ds
push
mov
jne
pop
out
hlt
jl
sub
int
gs
insb
push
arpl
mov
pop
xchg
push
jae
ljmp
data16
adc
xchg
cmpsl
lea
jb
add
add
mov
push
push
scas
jbe
add
mov
stos
mov
dec
sub
and
lock
pop
push
push
pop
aam
imul
pop
lea
mov
iret
xchg
test
or
lcall
dec
mov
dec
cmp
jecxz
mov
mov
inc
pop
js
mov
xchg
and
dec
push
cmp
and
sub
insb
lret
push
in
or
lcall
cmpb
pop
or
sbb
and
and
push
movsl
adc
jbe
adc
add
push
daa
pop
repnz
lea
icebp
add
lock
inc
aad
bound
lods
bndstx
cmc
stc
jbe
or
lret
push
notl
insb
inc
outsl
outsl
dec
imul
bound
mov
jbe
in
adc
in
inc
dec
mov
mov
jg
scas
cmpsl
sub
outsb
outsb
xor
out
ss
jns
lock
repz
sbb
cmp
and
cs
ss
daa
cmpb
js
jne
jb
dec
or
insb
mov
out
jg
or
xchg
add
or
out
jg
push
push
xchg
jmp
out
mov
lods
jle
or
out
jg
in
and
popa
addr16
out
jg
testb
jmp
addr16
aaa
xor
xlat
jg
push
or
jle
or
out
jg
fwait
push
sbb
xchg
addr16
adc
insb
scas
repz
jg
push
test
out
and
out
jg
jl
mov
jle
dec
outsl
mov
in
out
jg
gs
loop
andb
jnp
clc
out
jg
jno
jmp
addr16
dec
or
out
jg
inc
push
sub
pop
or
out
jg
push
push
xchg
jmp
es
jo
xor
outsb
jmp
jl
adc
sub
adc
daa
insl
mov
mov
sub
mov
fs
lret
sub
adcb
test
push
rclb
idiv
mov
add
outsb
imul
jecxz
je
jecxz
push
jbe
cmp
ljmp
sub
stos
pop
rorb
add
and
inc
nop
outsb
out
jg
sub
adc
jmp
out
sub
sub
outsb
mov
shrb
int
loope
jl
pop
inc
out
add
or
xor
push
sarl
push
loope
imul
idivl
and
outsb
push
cmovl
pop
jns
pop
out
in
imul
js
sbb
adc
outsb
ja
call
out
dec
pop
mov
repz
ja
jecxz
mov
adc
push
loope
imul
and
repz
inc
mov
add
inc
pop
int
dec
sub
jle
inc
push
jg
mov
push
cmp
sti
and
jge
add
frstor
call
jecxz
and
and
sub
xchg
inc
es
sub
sub
ljmp
dec
or
jne
xchg
call
add
sub
jns
dec
push
loope
imul
ja
repz
sub
lods
sub
or
pop
dec
jg
jl
ret
loop
and
inc
sub
lods
sub
or
pop
pusha
aas
mov
dec
cmpl
inc
jecxz
pop
sub
lods
insb
cwtl
orl
jl
insl
cmp
insl
pusha
int3
jg
add
ja
aad
dec
push
mov
mov
mov
movsl
push
inc
sub
mul
cmpsl
pop
inc
push
and
mov
and
pop
repz
sub
imul
loope
imul
ret
out
and
imul
pop
repz
nop
rorl
insb
add
push
jnp
xlat
add
dec
mov
out
ljmp
dec
inc
or
push
push
push
out
ljmp
int
sub
sub
push
push
dec
out
ljmp
dec
and
xchg
add
pop
xchg
dec
incl
neg
add
outsl
xchg
dec
incl
xchg
adc
add
dec
mov
loope
push
pop
mov
or
in
inc
adc
sti
jmp
pop
outsb
dec
cmovl
pop
imul
in
loope
addr16
jae
cmovl
push
inc
notl
or
addr16
sub
inc
sub
pop
arpl
pushf
sub
fldl
or
pop
addb
pop
lret
arpl
call
push
enter
jmp
jg
push
mov
or
pop
ja
into
repz
loope
repz
lods
sub
jg
and
dec
dec
jmp
and
jmp
dec
pop
test
repz
insb
adc
jns
inc
jg
push
dec
sub
decl
pop
pusha
jg
gs
adc
int
subb
jge
loope
aam
dec
xor
movsb
insl
dec
int3
nop
outsb
jns
dec
jmp
ja
push
out
ljmp
outsl
xor
mov
sub
dec
sub
addl
dec
add
push
sub
decl
data16
or
pop
arpl
push
sub
jns
loope
push
jg
push
ljmp
dec
jne
out
dec
int3
jns
mov
and
jecxz
fisubs
sub
xchg
sub
sub
ljmp
sub
push
adc
inc
and
add
pop
and
adc
decl
sub
inc
dec
mov
mov
push
or
sub
loope
int3
lcall
jno
jecxz
pop
mov
mov
pop
dec
jp
inc
dec
mov
daa
pop
cltd
inc
out
and
outsb
add
cmpsl
pop
dec
push
dec
jl
enter
insl
bnd
add
adc
loope
and
sub
ljmp
sub
ja
jecxz
and
jae
dec
in
push
push
jle
mov
int3
jnp
loope
push
test
imul
insb
pop
test
xchg
imul
xchg
and
ja
repz
sub
jns
lret
push
imul
imull
and
sub
imul
or
lea
sub
sub
loope
or
pop
inc
int
mov
pop
sub
insl
push
pop
es
loope
repz
sub
imul
inc
je
push
or
lds
imul
sub
loope
imul
jle
gs
pop
mov
add
pop
mov
mov
dec
cmp
insl
int3
jg
push
mov
loope
fs
mov
stc
mov
pop
arpl
imul
or
push
sub
imul
fwait
incl
cmpsl
orb
sub
ret
jp
jg
add
dec
fcoms
dec
push
mov
mov
mov
push
inc
les
jnp
loope
int3
jns
mov
jecxz
and
cmc
cmovl
push
xor
and
orl
dec
xchg
inc
jg
repz
stos
pop
and
iret
test
fisubrs
call
or
or
and
mov
jb
push
lahf
insb
fildll
jbe
mov
daa
inc
mov
hlt
pop
push
out
jae
aaa
je
or
mov
movsl
dec
sub
loope
cmp
jns
sub
inc
fnsave
sub
cs
cmp
jns
xchg
std
xchg
je
test
dec
fmulp
je
xchg
xchg
ja
push
inc
fwait
cli
xchg
and
push
pop
cmp
pop
jne
inc
je
or
sub
mov
jno
sub
xchg
out
daa
xchg
je
and
xchg
movsl
in
movsl
push
je
scas
push
pop
ret
or
aam
pop
dec
arpl
je
and
mov
or
je
inc
sub
movb
mov
sub
and
aaa
je
cmc
xor
push
movsl
cmp
cmp
jns
std
pop
fnsave
aam
push
fdivrp
pop
fnsave
adc
jnp
sbb
jns
dec
std
pop
fnsave
sub
mov
cli
je
mov
pop
xorl
out
pop
or
je
cmp
pop
stos
pop
inc
je
add
daa
rolb
je
cmpsl
adc
inc
aaa
je
scas
repz
jmp
push
inc
sub
dec
inc
aaa
je
push
xor
mov
movsl
in
movsl
inc
sub
testl
sub
std
inc
fnsave
sub
inc
cli
je
mov
inc
ret
je
bound
popa
xchg
xchg
std
xchg
je
push
xlat
faddl
xchg
xchg
sub
add
cmp
jns
dec
std
xchg
je
and
xlat
mov
cli
je
mov
xchg
je
mov
and
cmc
sub
xchg
push
jle
xchg
push
pop
xchg
movl
fadd
or
je
lods
sub
movl
sub
inc
mov
sub
sub
pop
cmc
movl
daa
jle
mov
aaa
je
out
movsl
in
imul
jnp
sbb
jns
push
std
or
je
ljmp
add
push
jp
test
or
je
pop
sub
lret
or
je
adc
or
je
sub
jp
cli
je
mov
or
mov
ret
je
mov
or
je
out
pop
pop
ds
sub
dec
movsl
in
mov
dec
ret
je
pushf
inc
sub
dec
or
je
ret
sub
lret
dec
ret
je
or
mov
dec
mov
push
xlat
out
cli
je
mov
pop
cmp
pop
push
mov
inc
sub
sub
pushf
std
mov
xchg
sub
mov
inc
cwtl
les
daa
or
xor
jb
movsl
in
movsl
pop
sub
mov
dec
xchg
xchg
je
mov
ljmp
into
or
mov
enter
add
cwtl
cs
je
les
daa
aaa
je
xchg
inc
sub
enter
sub
sub
enter
add
sub
mov
aaa
je
dec
enter
std
leave
je
jb
dec
in
je
mov
cli
je
mov
or
je
sub
sub
outsl
les
daa
rorl
je
xchg
pop
add
or
cli
je
mov
or
je
add
js
ret
je
or
in
je
les
daa
out
aaa
je
mov
movsl
mov
push
xchg
dec
cmp
jns
fisttpll
loop
movsl
xchg
push
sub
add
fnstcw
dec
std
dec
fnsave
push
popa
push
je
dec
fnsave
and
arpl
je
push
inc
sub
dec
or
je
mov
pop
sub
je
inc
out
xchg
mov
je
addr16
jmp
je
scas
jns
add
mov
je
aad
cmp
dec
mov
xchg
push
adc
mov
and
je
dec
sub
decb
hlt
out
addr16
je
cmp
sub
sub
pop
aad
inc
je
stos
les
lcall
rcl
sub
leave
inc
je
sbb
leave
inc
je
add
and
sub
xlat
sbb
ss
outsl
cmp
jmp
xlat
out
lods
leave
aaa
ss
bound
aam
movsl
in
movsl
test
ss
rcrb
cmp
inc
or
sub
mov
cmp
mov
or
sub
daa
or
ss
sbb
out
and
cli
ss
cmc
and
push
cmp
inc
ss
les
daa
dec
aaa
ss
stos
repz
jmp
ss
adc
out
xchg
ss
jns
int
dec
fnsave
int
sub
xor
es
pop
push
xlat
cmp
mov
pop
cmp
pop
in
dec
inc
ss
mov
mov
ss
call
jnp
sbb
jns
cmp
fnsave
xorps
movsl
in
movsl
sahf
sub
xor
cwtl
xchg
mov
ss
int
and
xor
mov
ss
sub
out
mov
ss
mov
xorl
sub
out
cs
ss
cli
fsubrs
jmp
lret
lcall
ss
rcr
jb
lret
ss
and
ss
sub
movsl
js
push
ljmp
sub
std
or
ss
sub
addr16
ss
cs
sub
or
or
in
push
sbb
ffreep
or
ss
pushf
sbb
ss
test
sub
pop
cmp
pop
jle
inc
ss
xor
sub
movsl
or
ss
jp
sub
or
sub
adc
cmp
cmp
jns
pop
dec
or
ss
dec
xorl
cwtl
pop
mov
ret
xchg
pop
idiv
xor
jnp
sbb
jns
jp
dec
fnsave
int
sub
mov
mov
dec
ret
ss
mov
or
or
out
cwtl
mov
push
scas
out
add
mov
imul
adc
mov
cltd
and
ss
sub
movsl
dec
sub
decb
jns
es
mov
ss
sub
insl
mov
ss
and
jmp
lret
ret
ss
imul
in
imul
push
adc
lret
movsl
in
ljmp
dec
pop
cmp
pop
mov
inc
ss
dec
les
daa
cli
lret
aaa
ss
xor
and
movsl
in
movsl
imulb
push
imul
cmp
sbb
sub
xlat
in
inc
push
daa
add
ss
sbb
dec
sub
les
daa
or
ss
inc
xor
testb
push
ds
ss
jns
gs
or
ss
sub
lods
or
ss
popa
sub
rorl
or
repz
xorl
rcll
mov
sub
movsl
pusha
sub
repnz
cmp
cmp
jns
cmp
dec
fnsave
int
sub
popa
dec
cli
ss
ss
test
ret
ss
jge
sub
dec
cli
ss
movsb
xchg
mov
ss
jns
pop
std
mov
psrlq
movsl
in
movsl
sbb
push
lea
sub
std
mov
ss
sub
cmp
cli
ss
lock
arpl
sub
in
jg
xchg
jb
int3
or
sub
pop
fxch
inc
ss
scas
les
daa
add
aaa
ss
ficompl
jo
int3
xorl
pop
inc
out
int3
or
sub
inc
ss
int3
les
mov
or
sub
pop
cmpsb
int3
inc
ss
jnp
ficoml
ss
and
or
stos
sub
ss
rcrl
lea
or
out
int3
or
les
daa
xor
aaa
ss
enter
or
adc
push
mov
ja
xchg
or
xor
rorl
in
movsl
cmpsb
sub
xlat
das
inc
out
dec
or
bound
dec
cmp
cmp
jns
adc
dec
fnsave
int
sub
ja
cli
ss
or
jmp
dec
ret
or
mov
ret
ss
jnp
and
sub
mov
je
cmp
outsl
xor
push
cmp
sub
and
jl
and
loop
imul
inc
outsl
jl
stc
icebp
push
jbe
les
seto
std
push
pop
mov
movsl
adc
stc
popa
out
loop
mov
sub
cmp
outsb
aas
inc
xor
aad
incl
in
xchg
push
incl
loop
xchg
ror
add
cmp
inc
jge
int
xor
into
lcall
insb
test
dec
mov
pop
xlat
xchg
ljmp
ret
push
sub
mov
ja
push
bsf
ja
and
xor
push
hlt
fmull
xchg
clc
out
jne
rorl
xor
inc
jecxz
iret
daa
dec
lahf
imul
xlat
inc
cmp
out
inc
insb
xchg
sub
xor
inc
out
inc
movsl
adc
inc
pop
jg
incl
jns
jb
jge
inc
pop
mov
loop
push
gs
out
push
mov
js
adc
outsb
xchg
cmp
xor
ljmp
fldcw
lods
sub
inc
outsb
mov
pop
inc
inc
dec
mov
push
in
dec
insb
jnp
dec
cmp
dec
dec
jg
dec
into
decl
dec
sub
insl
dec
cmovl
dec
dec
daa
xchg
mov
cmp
jmp
dec
insb
add
pop
cmp
outsb
dec
mov
xor
dec
adc
pop
cmp
out
dec
cli
jge
sub
push
daa
xlat
pop
sub
sti
xor
ljmp
xor
cmc
stos
popa
out
pop
sub
into
invd
pop
or
sub
std
pop
xor
stos
mov
dec
movntps
stos
mov
cmc
divl
sub
dec
pop
jg
jecxz
ljmp
sub
push
insb
adc
int3
mov
push
outsb
pop
mov
mov
les
sub
or
xlat
push
sub
jp
push
into
decl
push
sub
insl
push
cmovl
push
dec
mov
dec
inc
jnp
xchg
push
stos
in
mov
outsb
inc
outsl
outsl
daa
rorl
xlat
pop
xor
cmp
jmp
pop
insb
sub
xor
arpl
jnp
dec
imul
push
push
adc
lods
movsl
pop
out
data16
out
push
inc
out
imul
stos
push
jecxz
ljmp
aad
out
add
clc
out
gs
jg
fs
incl
dec
jmp
jge
jmp
xor
jp
insb
bound
cmp
insl
ja
jg
out
sub
subb
jle
jno
jle
xlat
iret
pop
jg
dec
in
jg
add
jg
gs
movq
iret
outsb
jge
dec
inc
inc
jge
pushl
jns
inc
out
call
dec
js
pusha
inc
out
js
out
xchg
cmc
pushl
dec
movsl
xor
jne
pop
jnp
jne
cltd
adc
cmp
dec
dec
incl
adc
lods
sub
ja
mov
xchg
push
je
cmc
sub
mov
out
jae
jg
add
pop
xor
imul
sub
jp
dec
into
mov
call
push
dec
xor
arpl
ljmp
inc
add
in
dec
inc
incl
xlat
sub
dec
ja
gs
jg
out
sub
xor
jg
out
imul
outsb
stos
into
decl
dec
jnp
dec
insb
or
dec
inc
cmp
insl
fisubs
xchg
add
popf
mov
ret
inc
dec
daa
enter
jg
mov
inc
add
clc
out
inc
cs
mov
rorb
xor
pop
out
pop
sub
jp
pop
into
adc
and
pop
ljmp
insl
pusha
cmovl
pusha
dec
cmpsl
push
lock
pop
pop
push
jnp
pop
stos
pop
lock
pushl
push
filds
enter
or
insl
repnz
inc
out
imul
pop
out
inc
xor
gs
insb
push
int
xor
pop
ret
arpl
insb
pop
dec
scas
cmp
insl
jle
jg
sub
xor
jae
mov
out
push
jg
sub
push
jns
ja
jg
sub
xor
into
adc
xor
push
ljmp
insl
push
cmovl
push
dec
jmp
dec
pop
push
dec
dec
jg
and
outsb
inc
jl
jae
out
outsb
dec
fnstenv
mov
push
es
jno
dec
insl
pop
sbb
shrl
mov
xchg
lods
movsl
inc
mov
xor
lcall
jnp
outsb
mov
pop
daa
adc
outsb
call
outsb
xor
bsf
mov
inc
pop
xor
pop
mov
inc
daa
jmp
add
push
clc
out
bound
mov
imull
loopne
sub
jg
jecxz
inc
daa
jmp
popa
mov
cltd
pushl
sub
mov
xchg
pushf
adcb
adc
outsb
push
icebp
sub
jp
sub
arpl
jp
popf
icebp
dec
jnp
jge
adc
outsb
pop
dec
sub
aaa
jnp
out
dec
cli
mov
sub
jns
js
mov
fs
ja
mov
je
loop
xchg
in
mov
dec
jno
jl
daa
push
clc
xor
std
out
xchg
or
dec
jae
dec
sub
push
pop
ja
cmp
push
jmp
leave
mov
lea
aaa
sub
jae
leave
push
push
jecxz
inc
daa
pop
in
mov
dec
leave
mov
jmp
xor
mov
loop
cmp
push
pop
dec
inc
jnp
in
fdivs
sub
cld
inc
inc
jnp
mov
jp
xor
movq
lret
jb
jns
loope,pn
imul
clc
pop
push
push
hlt
mov
jb
jae
shl
mov
sub
jbe
in
repz
cltd
push
sub
pushl
sub
ljmp
sub
fwait
xchg
pop
pop
jp
mov
xor
insl
data16
insb
inc
dec
lea
xor
inc
out
inc
jmp
mov
outsb
fwait
sbb
call
mov
sbb
push
pop
gs
movsl
jnp
pop
push
sub
sub
dec
jns
js
out
dec
dec
fadd
xor
dec
sub
dec
outsb
push
mov
ja
jb
inc
dec
jnp
xor
cmovl
inc
dec
xchg
in
sub
push
inc
dec
dec
mov
dec
in
dec
imul
lret
inc
hlt
sbb
call
and
inc
movq
sahf
xor
cmovl
dec
dec
daa
or
fwait
aaa
xchg
insb
pop
inc
jae
cli
mov
sub
mov
cli
xor
pop
ret
push
inc
out
outsb
fs
xor
lods
movsl
push
out
pop
out
add
pop
sub
pop
cs
jae
and
dec
mov
test
insb
pop
dec
rolb
or
stos
pop
out
pop
outsb
or
jge
or
pop
daa
adc
outsb
jae
fstps
repz
out
pop
in
xor
pop
pop
jg
lcall
data16
jecxz
sub
scas
hlt
push
ret
ja
insb
push
dec
sbb
push
or
xlat
push
sub
imul
ja
in
push
outsb
lret
mov
push
gs
movq
jne
push
lods
sub
push
outsb
decb
insb
push
pop
inc
jnp
push
sub
inc
sub
jg
xchg
mov
xor
inc
cmp
jmp
sbb
mov
and
outsb
dec
daa
inc
cmp
jnp
sub
jae
jnp
int
push
xchg
ja
xor
insl
pop
test
insb
data16
xor
imul
imul
pop
sub
shll
xchg
xor
mov
pop
push
jl
ljmp
inc
ljmp
add
in
dec
fs
data16
jge
arpl
jp
bound
insl
popa
cmovl
popa
dec
ljmp
xorb
sub
jle
jno
jg
sub
je
jg
dec
dec
inc
jg
cmpsl
dec
je
mov
outsb
mov
jge
inc
jnp
jge
cmp
push
sub
pop
ljmp
pusha
daa
xlat
js
in
sti
xor
ljmp
push
mov
sub
push
pop
in
jne
add
insb
dec
dec
or
push
sub
mov
je
sbb
test
je
cmp
jb
jae
jnp
xor
jbe
adc
dec
dec
ret
inc
out
dec
imul
pop
dec
aaa
arpl
dec
dec
aas
and
pop
repz
sub
or
xorl
incl
mov
dec
jecxz
sub
ja
and
dec
push
movq
shll
dec
dec
insb
xor
xor
sub
pop
dec
test
icebp
mov
aaa
sub
push
xor
inc
aaa
inc
jb
inc
dec
jnp
xor
ud2
pop
out
pop
sub
sti
xor
ljmp
fldt
pop
in
or
cs
jne
gs
jne
mov
insb
pusha
dec
sbb
xor
in
dec
pop
incl
loope
imul
sub
insl
repnz
pop
sub
pop
ret
imul
pop
movsl
loop
insb
push
frstor
adc
outsb
sub
jne
cmp
ja
jb
pop
dec
push
mov
fdiv
dec
xor
jle
push
insb
pop
mov
adc
movq
dec
mov
push
cmovl
push
dec
mov
jl
jb
jnp
push
ja
in
push
insb
movsb
pop
push
cmp
dec
push
jg
and
push
in
cld
mov
sub
xchg
cmc
mov
pop
ja
movsl
xorb
outsb
out
xlat
push
in
movsl
inc
mov
xlat
insl
jno
out
imul
jmp
cmc
adc
fcmovbe
lahf
mov
cmpsb
cmc
pop
xchg
lock
dec
push
imul
outsb
pop
ss
and
cmovnp
out
sub
or
adc
outsb
dec
int
xor
jecxz
inc
daa
jmp
mov
adc
pop
xor
outsb
mov
fs
mov
imul
dec
cli
test
sub
push
rcl
xchg
xchg
mov
xlat
subb
xlat
jp
xchg
pop
pop
cmp
jge
or
xor
test
insb
jnp
push
pop
push
sub
xlat
or
xlat
jns
mov
mov
jns
dec
js
and
into
adc
dec
ja
push
push
sub
loop
shll
pushl
push
dec
out
cli
sbb
imul
subb
hlt
inc
shlb
xor
pop
inc
push
sub
mov
xor
fnstsw
jecxz
inc
daa
call
imul
aad
inc
in
loop
aam
imulb
movl
pop
testb
mov
mov
jns
pop
movq
xor
jns
imul
ljmp
js
push
sub
jecxz
ja
push
bsf
ja
and
xor
aaa
aam
lea
jb
jne
aas
and
pop
outsb
jae
push
sub
inc
ljmp
ret
mov
out
outsb
xor
mov
pop
inc
out
inc
xor
gs
jg
out
sub
cld
mov
sub
divl
sub
daa
sub
cwtl
ja
movsb
push
xor
js
out
dec
incl
sub
dec
xor
jne
decl
mov
inc
ja
in
inc
insb
hlt
pop
inc
cmp
dec
inc
jg
jecxz
ljmp
in
sub
inc
dec
dec
daa
adc
out
cmp
incl
cmp
inc
sub
add
repz
sub
dec
dec
jg
cmp
mov
jae
testb
pusha
lods
cld
mov
sub
mov
jle
push
xor
shrl
sbb
dec
xor
push
out
pop
call
negl
sub
pushf
imul
hlt
xor
xlat
pop
sub
ljmp
adc
outsb
dec
push
xor
lods
sub
pop
outsb
clc
pop
pop
bound
pop
sub
dec
pop
ret
jg
insb
pop
dec
stos
ja
gs
jg
sub
ja
dec
push
lcall
sub
lods
sub
push
outsb
cmp
push
ja
in
push
insb
jno
push
sub
dec
push
jg
jecxz
ljmp
insl
push
cmovl
push
dec
ljmp
inc
jnp
xchg
dec
js
mov
inc
inc
outsl
or
pusha
outsb
sub
inc
outsb
or
leave
imul
jae
jnp
xor
push
or
sub
inc
fnstsw
inc
out
movsw
es
imul
outsb
outsl
mov
xor
mov
fdivrs
mov
out
push
dec
frstor
adc
outsb
mov
cwtl
movsl
jge
xor
outsb
xor
cmp
or
xlat
arpl
jp
into
jp
bound
insl
popa
cmovl
popa
dec
sub
insb
add
sub
sub
pop
jle
jno
sub
add
lock
xchg
sbb
clc
mov
adc
pop
or
xlat
jl
aaa
jp
jge
incl
jge
subb
xchg
jmp
pusha
test
insb
js
push
mov
pop
test
loopne
out
add
xor
pop
in
jne
push
add
insb
push
inc
dec
dec
decl
in
ja
clc
pop
je
xor
pushl
dec
jae
icebp
out
jae
jmp
xor
dec
cld
mov
sub
jns
rcrl
clc
out
dec
insb
sahf
movntps
arpl
decl
push
xor
insl
jg
jg
out
sub
mov
jg
out
sub
mov
jg
out
imul
out
sub
sub
inc
outsb
pop
clc
mov
sub
dec
outsb
mov
xchg
sub
sub
mov
icebp
lret
xchg
mov
aas
jae
xor
cmp
out
inc
sub
xor
pop
aaa
pop
jb
pop
dec
movsb
es
icebp
popa
out
pop
stos
scas
mov
icebp
call
sbb
cltd
enter
push
pusha
insb
inc
stc
dec
lcall
push
jnp
pop
insb
lret
stc
dec
pop
stc
jae
jnp
inc
movsl
jne
insb
pop
pop
insl
bnd
dec
mov
imul
dec
movsb
sub
mov
addr16
push
insb
xchg
cmp
xor
pop
sub
pop
cs
outsb
push
cmovl
push
dec
push
cmp
lods
sub
push
outsb
int
insb
push
pop
ja
call
aaa
dec
jb
inc
jnp
jb
mov
sub
sub
insl
dec
movq
push
jp
outsl
call
xchg
pop
inc
cmp
inc
out
outsb
sub
cmp
out
outsb
sub
imul
adc
outsb
clc
jp
and
xor
mov
fs
cmp
inc
xor
sub
cmp
sub
dec
sub
lock
dec
push
insb
imul
sub
mov
sub
gs
mov
xor
mov
stos
call
cmp
imull
loopne
fs
jmp
imul
arpl
push
xor
lods
movsl
push
push
cli
mov
and
incl
call
bound
movsb
or
mov
popa
out
jnp
mov
insb
jns
jnp
adc
outsb
cld
push
xor
lods
sub
js
data16
pushl
cmp
shrb
push
subl
cmp
sbb
mov
lods
jb
push
dec
incl
sti
sbb
jl
das
clc
jae
cmp
sub
mov
fimull
inc
insb
mov
pusha
loop
pop
jo
mov
push
jno
mov
adc
rorb
adc
popa
cmp
push
in
outsb
lahf
cmp
inc
outsl
xor
sbb
insb
xor
push
push
add
inc
lea
int3
push
loop
aam
stc
insl
push
int
mov
jbe
dec
je
cli
jbe
jne
sbb
mov
jmp
push
andl
push
push
sbb
jo
cmc
in
cli
push
jecxz
or
fdivrs
push
ret
inc
inc
cmp
cli
push
inc
cmpb
insl
xor
cs
pop
data16
pushf
idivb
scas
lahf
cmc
nop
jbe
sub
ja
push
lret
lods
push
jb
xor
cmpsb
mov
mov
or
ja
jecxz
cli
fisttpll
sbb
cmp
cmp
bound
dec
pop
or
lcall
and
out
mov
xor
pand
push
stos
mov
and
jg
popa
divl
lret
ds
push
pop
scas
jecxz
dec
addr16
sti
push
sbb
sbb
popa
cmp
dec
mulb
push
pop
ljmp
loop
addr16
outsb
inc
outsb
sub
pop
movsb
jno
cs
adc
xor
imul
mov
dec
loope
sahf
in
nop
scas
push
inc
js
jp
jecxz
cli
dec
adc
push
sub
ds
out
cmc
pushf
dec
pop
jne
adc
es
push
fs
pop
into
inc
xor
out
push
cltd
cld
fs
xor
mov
fnstenv
push
rorb
push
lds
mov
es
lods
and
int
inc
pop
push
cmp
xor
inc
dec
mov
outsl
jecxz
and
push
dec
repz
into
outsl
popa
push
mov
out
js
lods
or
dec
shr
popf
cmp
adc
mov
pop
pop
push
aas
push
jge
gs
cltd
push
nop
bound
xchg
jae
in
sahf
cmovbe
adc
cmp
jp
cmpsb
mov
pop
movl
pop
jp
ljmp
cli
in
out
aad
movsb
insb
pop
cli
fucom
jecxz
mov
mov
sub
jg
and
push
in
sub
mull
cmpb
test
mov
sbb
insl
or
sub
lret
mov
cmp
stos
jecxz
arpl
jns
sub
push
push
int
inc
outsl
in
and
js
adc
cmp
jno
stos
sti
fldpi
fs
loope
addr16
fucomi
repnz
dec
push
inc
fdivs
xchg
or
jmp
rorb
jp
ss
dec
jns
std
pop
stos
push
je
adc
test
std
in
xor
and
ljmp
out
sub
lahf
jge
mov
sub
add
cmp
hlt
adc
xor
adc
imul
jb
jb
loopne
imul
lods
loopne
adc
lods
insl
xlat
lods
xor
aam
pop
outsb
fisubs
push
lea
jl
addr16
jmp
and
insb
sub
add
jmp
adc
inc
mov
pop
push
out
lea
lret
and
cmp
arpl
cltd
out
pop
sub
adcb
in
out
call
inc
pop
sub
and
imul
and
push
cmp
stos
cmc
jmp
ds
ficomps
psrld
int3
cltd
int3
cld
mov
mov
cli
jbe
mov
sub
cmpsb
data16
sbb
fldl
mov
je
imul
mov
mov
mov
push
pop
insb
pop
and
loopne
cli
dec
push
jbe
out
dec
inc
and
push
dec
aas
pop
imulb
sti
stos
jne
imul
and
repz
aam
push
cmp
je
jmp
jle
cli
andb
push
jle
dec
cmp
test
jl
sub
pop
or
mov
outsl
sbb
jbe
push
mov
cltd
push
insb
and
mov
out
push
jle
data16
imul
mov
pop
sbb
call
cwtl
cmc
dec
pop
cmpsl
imul
aas
mov
and
jle
aam
add
and
mov
cmpsl
fldcw
sbb
mov
es
lahf
fnstcw
ss
test
cmc
fdivrp
push
push
dec
test
outsb
outsl
dec
mov
pop
hlt
push
pop
push
fdivs
jae
jle
leave
jb
pop
jno
adc
mov
iret
jbe
push
lods
inc
lea
cmp
or
lea
push
and
je
aam
andl
mov
nop
xor
in
adc
push
sub
sahf
inc
outsl
test
ja
in
push
cmp
insl
mov
jb
jns
xchg
mov
fidivrs
pusha
in
add
imul
insb
mov
sahf
ljmp
arpl
ljmp
inc
insl
dec
push
or
and
addr16
movsbl
add
lds
pop
mov
push
je
inc
pop
and
repz
jae
and
data16
jae
cmc
scas
sub
jbe
mov
push
jge
add
loopne
fimuls
nop
outsb
jns
pop
pop
jne
cmp
insb
sbb
stos
sub
dec
ret
pop
push
dec
outsb
mov
cwtl
outsl
dec
dec
sahf
cmpsb
jnp
movsb
dec
outsb
mov
push
cs
dec
push
dec
js
sub
mov
outsb
pop
jae
ja
inc
sub
push
int3
in
push
dec
pop
jg
cli
test
and
dec
pop
test
jg
lods
bound
jbe
xchg
jp
aad
push
outsb
inc
mov
stos
insb
push
dec
pop
add
push
je
xor
aad
insb
in
push
inc
call
es
lea
sub
jmp
loopne
daa
mull
mov
inc
stos
mov
pop
frstor
push
dec
fisttpll
dec
jno
aad
out
dec
push
jg
out
popa
stos
mov
jle
sarb
dec
mov
dec
insb
jns
xchg
mov
xchg
outsb
pop
or
jg
jbe
dec
decl
les
cmpsb
jp
mov
dec
decl
push
jg
out
sub
jmp
dec
sti
sbb
outsb
pop
dec
aas
mov
mov
inc
sub
decl
sub
cmpsl
cmc
mov
jae
out
icebp
sub
push
pop
out
dec
stos
push
mov
sahf
daa
pop
outsb
push
aas
xor
movsb
pop
dec
jmp
stc
stos
pop
pop
out
sub
sub
pop
dec
jp
movsl
clc
imul
pop
insb
ja
stos
sbb
jae
es
and
aas
push
bound
cmpsl
sbb
sub
jmp
dec
mov
outsb
pop
dec
mov
adc
push
dec
lcall
je
outsb
xchg
dec
push
dec
cmp
mov
lcall
fsubrs
addr16
imul
bound
loopne
push
mov
pop
inc
movsl
pop
inc
pop
inc
jbe
jg
jns
mov
mov
mov
xor
outsb
dec
dec
jge
push
arpl
sub
call
outsb
scas
into
lret
popa
out
push
jl
push
dec
cmpsl
xchg
mov
sub
sub
call
stos
pop
popa
sub
jmp
arpl
subb
sub
jle
outsb
mov
insb
jg
bound
sti
lea
jge
call
inc
xchg
jb
mov
or
jno
sbb
addr16
incl
dec
je
mov
push
jno
cli
loop
js
jl
stos
mov
dec
insb
data16
iret
movsb
popa
sub
mov
dec
movsb
decl
inc
outsb
adc
mov
xlat
inc
frstor
out
insb
sbb
mov
dec
js
sub
dec
push
mov
push
testb
jno
push
dec
mov
loopne
cmpsl
outsb
xor
in
roll
sbb
sub
imul
dec
sub
ljmp
sub
aad
xor
jl
fwait
dec
inc
jg
out
arpl
dec
sub
pop
fcmovne
stos
pop
sub
ljmp
sub
sub
mov
push
out
sub
cld
mov
dec
clc
push
and
pop
roll
push
inc
mov
inc
popa
inc
dec
lcall
cltd
mov
outsb
pop
xchg
jg
cmp
stc
sbb
popa
cmpsl
je
pop
pop
lods
add
xchg
jg
push
inc
ja
ficomps
imul
pop
aas
outsb
stos
in
sbb
outsb
bound
xchg
jecxz
push
push
cmpsb
jle
jle
push
ss
lret
adc
push
into
or
and
add
dec
jae
lret
push
dec
decl
mov
pop
out
stos
pop
jbe
dec
incl
cmp
pop
out
sub
jmp
dec
cmpsl
xchg
push
push
sar
pop
imul
push
sub
outsb
adc
and
pop
jb
insl
mov
fdivr
in
pop
push
clc
incb
pop
std
xor
outsl
push
sub
mov
stc
inc
mov
outsb
push
add
cld
stos
sub
jg
cmpsl
gs
sarl
sub
in
shlb
daa
jecxz
xchg
dec
stos
ljmp
js
pop
dec
push
add
out
sub
sub
popa
pop
dec
fdivr
pusha
inc
pusha
dec
je
add
dec
dec
mov
mov
gs
mov
gs
push
out
mov
andb
stos
pusha
sub
sub
in
sub
outsb
push
xchg
jg
jbe
dec
call
jg
sub
jmp
in
cmp
push
pop
lcall
mov
out
mov
and
dec
fucomp
jge
push
dec
shl
out
jns
cli
rclb
adc
sub
dec
jle
dec
cmp
cli
cmp
inc
sub
sbb
js
jns
xlat
push
subl
js
in
jae
dec
ja
cmpsl
clc
cmp
jmp
push
sbb
call
arpl
out
push
mov
push
dec
filds
push
dec
gs
sub
inc
dec
je
aam
jg
inc
or
jmp
cmp
pop
out
shll
sbb
inc
adc
push
dec
pop
push
dec
sbb
sub
inc
jno
adc
mov
call
dec
stos
pushl
insl
adc
movsb
dec
ret
je
dec
aam
fdivrl
sub
sub
scas
fldcw
adc
jns
sahf
js
sti
push
imul
ja
push
orl
outsb
dec
xchg
mov
jns
mov
jno
pop
ja
ja
arpl
inc
in
push
mov
sbb
mov
adcb
push
or
ljmp
xchg
pop
dec
mov
cmc
fidivs
sub
cli
nop
fistl
sbb
insb
int
out
pop
jae
jecxz
inc
movsb
or
aam
fstpt
rolb
jmp
push
jp
xchg
call
push
push
popf
pop
imul
cs
mov
fs
imul
sub
jle
or
jge
data16
lahf
inc
jnp
aam
and
jp
jle
jle
arpl
popa
or
aas
jecxz
sub
lea
sub
bound
movsb
mov
cltd
inc
lret
push
dec
clc
push
nop
cmpsb
insl
and
test
loope
mov
mov
loop
imul
mov
pop
push
and
jge
sub
nop
dec
leave
ljmp
jecxz
jle
adc
stos
cmc
imul
dec
dec
and
fistl
fistl
movups
inc
jg
sub
xor
push
in
lods
mov
scas
mov
push
pop
outsb
xor
je
jmp
scas
in
jecxz
iret
mov
ja
hlt
imul
push
stc
imul
cmpsl
popa
enter
cmp
out
xor
cmp
and
cs
sub
stos
aaa
sub
loop
push
es
in
jecxz
push
mov
es
in
ret
push
pop
mov
es
fucomi
adcb
jne
add
in
pushf
push
inc
jl
scas
sbb
xlat
push
cs
xchg
fildll
dec
clc
in
push
mov
jno
in
push
mov
jbe
in
push
mov
jnp
in
push
mov
and
push
mov
pop
daa
out
jge
ja
shrl
sub
in
pop
roll
xchg
loop
sarl
cltd
loop
sarl
sahf
loop
shl
add
das
mov
shll
or
sub
in
sarl
push
loop
sarl
jne
in
sarl
jp
in
sarl
jg
out
and
pop
lea
shrl
sub
sbb
scas
cmp
es
jecxz
xchg
mov
mov
in
fst
cwtl
in
jne
sbb
in
popf
insb
iret
scas
xor
sub
fildll
pop
cs
enter
dec
adc
mov
rorl
ret
ror
mov
rorl
mov
xchg
pop
scas
mov
pop
dec
mov
mov
jbe
rorl
pop
outsb
xor
mov
jnp
push
cmpsl
jg
out
cmp
sbb
mov
sub
adc
ja
and
scas
inc
cmp
scas
dec
inc
push
aaa
inc
sub
scas
inc
in
scas
inc
in
lea
outsb
testl
mov
popa
jp
dec
jge
dec
pop
inc
cmpsl
cmpsb
bound
in
pop
lret
mov
ja
sti
cltd
scas
test
insl
loopne
scas
fisttps
or
sub
loopne
xor
mov
xchg
cltd
jp
xchg
mov
add
jno
insl
or
ljmp
int
push
jg
jl
sbb
pop
lahf
dec
dec
scas
push
insb
shrb
jg
cmc
push
jae
lock
jle
or
out
aas
inc
out
gs
fdivrs
or
out
push
cs
scas
gs
jecxz
jns
mulb
jle
or
out
jg
push
inc
jge
popf
push
sbb
cwtl
addr16
jle
or
insb
scas
out
jecxz
cs
mov
jp,pn
divl
bnd
addr16
dec
dec
enter
or
out
jg
pop
push
xchg
jmp
out
inc
ja
cs
jl
jecxz
andb
jnp
clc
out
jg
repnz
xor
dec
or
jmp
addr16
inc
or
out
jg
pop
push
cltd
jmp
es
sti
mov
notb
stos
mov
out
mov
out
lods
scas
add
xchg
mov
rol
sbb
push
sub
pop
ss
or
lods
inc
lods
and
jne
push
push
bound
ds
mov
lcall
xor
mov
jecxz
push
andl
shrl
shr
jge
adc
dec
xor
and
shl
xor
and
cmp
mov
cmp
gs
mov
dec
test
jp
xor
jg
ljmp
and
jne
gs
xor
jne
push
out
cmp
jmp
mov
pop
and
or
fs
jb
mov
push
mov
cs
jns
mov
push
xor
xchg
pop
imul
mov
pop
inc
lea
into
push
adc
adc
dec
dec
loope
data16
and
ljmp
cs
xor
in
out
jno,pt
fucomp
jae
test
mov
pop
fs
jne
mull
loopne
mov
movb
or
imul
dec
mov
imul
addr16
rcrb
add
sbb
cwtl
aam
stos
psrld
scas
jl
addl
add
lods
andb
out
lds
outsl
daa
sahf
addb
lahf
add
lahf
gs
jge
mov
sbb
data16
cmpsl
insl
push
and
out
xor
push
les
cmpsb
sarb
cmp
insb
lods
dec
mov
subb
jbe
imulb
push
popa
sarb
cld
jae
lods
test
gs
and
or
push
and
in
push
jp
jl
inc
out
fildll
imul
sbbb
push
test
jecxz
jbe
push
cmp
das
add
push
fstl
inc
pminsw
inc
xor
ljmp
out
jne
fimull
jbe
cld
lds
insb
sbb
and
cmc
jge
sbb
sbbb
jmp
pop
and
jle
jg
jb
dec
sub
push
and
and
dec
sub
lahf
lods
sub
push
sbb
mov
imul
in
dec
pop
push
cmpsl
push
push
add
aas
loopne
pop
out
je
fistl
mov
inc
je
and
nop
push
sbb
fcmovne
cwtl
cltd
inc
pop
dec
rclb
movntq
adc
mov
lods
paddusb
and
or
pop
adc
xchg
cmpsl
push
push
push
adc
ja
loope
and
xor
jae
insb
adc
jne
dec
mov
push
xchg
sti
or
outsb
ljmp
mov
cmp
imul
or
ljmp
push
add
insl
dec
push
jno
mov
repnz
shrl
insb
mov
movsl
jmp
repz
sub
movsl
jg
cld
sub
pop
out
int
fnstsw
mov
jp
sub
fimuls
jno
clc
cmpsl
insl
jg
loopne
arpl
adc
popf
dec
loope
inc
adc
lods
repz
sbb
jno
mov
xlat
in
nop
sbb
cmpsl
ret
les
gs
cltd
sub
shlb
dec
dec
sar
pop
dec
scas
cmp
test
lret
hlt
lods
or
add
mov
xchg
and
pop
outsb
das
dec
pop
fwait
lods
lds
pop
mov
sbb
adc
cmp
fisttps
xchg
paddsw
imul
sbb
cmp
fistpll
addr16
add
imul
push
lcall
cmp
fiadds
push
pop
dec
add
xchg
jae
xchg
sbb
cli
push
sub
push
xor
lret
popa
fists
xor
mov
int3
inc
mov
insb
add
idivl
stos
in
inc
dec
sub
orb
push
add
add
scas
vdivpd
lds
mov
inc
lds
mov
push
hlt
or
or
cmp
lock
jnp
ljmp
stos
mov
sbb
pop
movd
xor
mov
decb
xor
sbb
push
iret
mov
scas
inc
scas
lahf
jae
add
das
loopne
adc
jo
sub
imul
jo
fwait
xor
sahf
cmpb
orl
pop
enter
js
dec
jae
adc
imul
out
popf
lea
ljmp
inc
roll
jne
ljmp
or
xor
pop
pop
sbb
insl
pop
dec
jmp
pop
vcvtss2sd
pop
sbb
insl
pop
dec
push
mov
les
jae
stos
insb
cli
pop
fwait
and
scas
shlb
push
sub
insl
and
dec
and
add
sti
jl
hlt
lds
sub
jmp
xor
xchg
fistps
adc
das
daa
arpl
rcll
ret
das
xor
push
sub
sub
pop
lods
ds
jae
out
pop
iret
mov
mov
sarb
shrl
xor
scas
add
dec
adcb
imul
push
cmpsb
lahf
imul
cmpxchg8b
loop
jmp
push
andl
ss
mov
mov
or
fwait
sbb
int
jecxz
cmc
mov
mov
shrl
sub
sub
das
sub
sbb
jno
scas
imul
mov
js
xchg
nop
push
imul
fidivs
add
mov
das
out
sub
cmpsl
dec
or
in
int
addr16
jg
outsb
push
outsl
add
cmc
xorb
repz
dec
lods
pop
scas
cld
jbe
jno
outsl
sub
das
outsb
dec
mov
imul
jae
jno
outsb
es
sbb
outsb
js
aad
cld
sti
outsl
mov
stos
nop
scas
bound
dec
mov
inc
out
add
das
pop
inc
loopne
ret
les
sub
outsl
and
inc
xchg
mov
pop
outsb
sub
sahf
cmp
std
and
jns
and
mov
scas
addr16
movsb
insl
and
imul
dec
jns
lret
pop
arpl
cmpsb
xchg
xor
dec
js
jns
mov
lods
pop
inc
in
sbb
and
das
pop
movsl
jge
pusha
mov
and
pop
pop
sbb
hlt
pop
das
and
stos
mov
cmp
arpl
jecxz
inc
imul
dec
mov
icebp
xchg
add
xchg
or
jmp
push
popf
in
xor
cmp
sti
jl
or
not
xor
xor
add
pop
lea
xor
out
sub
sbb
out
pop
lea
stc
jmp
or
mov
std
movsl
cmpsb
mov
repz
test
and
mov
aas
and
movsl
push
mov
adc
iret
stos
inc
jns
sub
push
pop
and
sub
pusha
mov
dec
and
scas
cmp
mov
cs
mov
ja
ss
lods
xor
mov
jb
leave
pop
or
and
mov
bound
cli
stos
sub
or
push
adcl
mov
iret
imul
jbe
inc
hlt
xchg
sub
add
push
ljmp
fstpt
into
xchg
xor
sbb
cld
aas
scas
daa
mov
xchg
push
cmp
cmpsl
pop
push
pop
imul
add
ss
push
sti
iret
add
xchg
clc
mov
inc
xchg
mov
push
xchg
out
js
dec
xchg
jnp
or
and
mov
addr16
jmp
xchg
cli
stc
idiv
pop
adc
sub
sub
sbb
and
dec
es
jb
into
and
push
lods
es
imul
sub
sub
insl
adc
sub
iret
jae
push
and
sub
mov
dec
ds
imul
jmp
insb
mov
pop
int3
jl
popa
out
push
adc
movl
pop
push
sub
nop
xchg
pop
inc
ja
pop
push
sti
outsb
mov
lds
pop
or
insb
push
outsl
inc
hlt
ljmp
cmp
insb
jle
popa
sub
pop
scas
adc
in
dec
adc
inc
scas
adc
scas
test
inc
scas
xchg
dec
push
sub
lods
dec
outsl
push
repz
xorps
loope
jle
loop
dec
sub
insb
pop
outsl
ja
mov
jbe
sub
out
jb
out
ud0
out
stos
dec
pxor
jbe
sub
adc
test
loope
daa
in
dec
insb
cli
sub
xor
xor
imul
enter
push
fists
negl
fs
imul
in
int3
adc
in
int3
fisubrs
sbb
dec
insb
dec
jle
loopne
xor
dec
cmpsl
in
paddw
bound
sti
std
int3
mov
mov
mov
rsm
xchg
es
and
fildll
shl
xor
sar
mov
or
xor
and
js
xor
push
push
cwtl
sub
push
jle
or
out
jg
test
inc
imul
pusha
mov
movsb
sbb
ljmp
aaa
adc
adc
adc
movsl
xchg
lea
incb
loopne
stos
ljmp
jmp
outsl
movsl
icebp
jbe
adc
popl
lcall
ljmp
lods
insl
pusha
insb
ror
push
pop
push
ja
jb
adc
ds
shl
jmp
js
imul
outsb
sti
push
xchg
dec
dec
aam
cmp
test
mov
mov
cmpsl
into
ja
sub
mov
negl
sub
cli
sub
loop
je
and
jle
xor
clc
addr16
jmp
or
mov
dec
test
lret
sub
iret
test
popa
outsb
cmc
in
daa
ja
sub
add
and
mov
aam
lret
lods
mov
mov
sbb
sbb
icebp
ljmp
add
out
lahf
cmpsb
add
in
andl
rorb
bound
dec
push
loop
cmpsl
sub
dec
iret
int3
or
outsb
dec
sbb
sub
xlat
ja
mov
xchg
pop
mov
pop
loopne
push
call
movsb
loop
push
out
out
dec
sub
call
sbb
dec
sahf
das
fiadds
lea
jbe
movsb
push
addr16
inc
jle
pop
sub
sub
dec
cmc
fiaddl
or
pusha
or
mov
and
inc
push
push
shrb
repnz
testb
cltd
inc
sub
das
mov
lods
push
jo
mov
movsl
xchg
push
mov
or
cli
jns
dec
and
xor
add
outsl
int
inc
movsl
jge
sbb
push
sub
push
or
fs
pop
das
jle
out
insb
daa
jae
xchg
mov
and
jg
pushf
daa
je
dec
pop
mov
xor
sub
pusha
mov
push
lret
push
jge
outsb
push
or
mov
insl
dec
jbe
imul
add
mov
fucomp
xchg
dec
scas
fwait
and
mov
test
inc
rol
movaps
pop
adc
ss
in
sahf
pop
testl
out
cmp
or
push
das
in
in
mov
cli
imul
mov
jl
push
mov
jnp
and
orb
push
push
xor
pusha
jg
sub
insb
pop
dec
jecxz
scas
dec
pop
jg
outsb
outsl
jg
out
outsl
das
out
sub
scas
out
xchg
jb
push
xor
mov
xchg
xor
jae
adc
add
sbb
dec
jmp
out
mov
dec
push
cmp
stos
inc
das
pop
jbe
das
mov
sbb
scas
mov
inc
jnp,pt
addb
orb
sub
or
dec
dec
fiaddl
sub
movntps
sub
ss
dec
inc
and
sub
add
dec
jge
imul
dec
mov
dec
push
sbb
jnp
fcmovnbe
cmp
call
das
out
repnz
jmp
push
ja
int3
movsb
adc
cmp
push
push
data16
movsl
pop
fs
incb
xlat
les
subb
push
or
dec
mov
dec
jp
cmpsb
xchg
dec
mov
xor
movsl
cmpsl
je
das
repz
test
cmp
push
adc
frstor
test
adc
or
adc
lea
mov
xchg
pop
dec
jno
sub
adc
push
mov
aad
inc
jno
sub
outsl
or
adc
inc
push
mov
sub
jecxz
loopne
sub
push
push
mov
sti
out
jecxz
loopne
push
subl
into
mov
outsb
test
cmp
pop
outsb
push
xor
mov
movsl
out
lods
jecxz
loopne
pop
sbb
xchg
sti
sub
sub
in
ja
jno
sub
or
adc
inc
shrb
subb
jle
or
stos
stos
or
push
sub
jp
dec
into
ljmp
push
sahf
fbstp
adc
sub
sub
or
xchg
cmp
sub
push
test
pop
test
xchg
sub
sub
push
sub
addr16
mov
out
dec
test
xor
es
push
test
fistps
int3
in
inc
test
scas
out
ja
jno
sub
pop
xchg
mov
mov
sub
mov
sbb
into
mov
ljmp
push
test
mov
aas
ja
jno
sub
ds
push
cmpl
stos
mov
jecxz
loopne
mov
jp
xchg
sbb
dec
movsl
aad
jecxz
loopne
imul
mov
mov
mov
mov
insb
cwtl
push
pop
jle
test
mov
mov
or
mov
loopne
test
mov
sbb
dec
sarb
scas
sbb
push
push
mov
dec
sbb
mov
dec
popf
jecxz
loopne
stos
loop
pop
dec
push
mov
inc
sbb
mov
imul
xor
adcb
xchg
xchg
sbb
jge
mov
in
dec
push
add
in
out
lods
das
pop
jns
aas
sbb
adc
mov
jp
in
lahf
nop
pop
mov
inc
pop
xor
xor
jbe
sub
out
mov
cld
pop
dec
movsb
dec
or
imul
jmp
arpl
push
fstl
outsl
cmovg
insl
sbb
ja
iret
testl
mov
mov
add
cmp
jg
iret
inc
sub
je
or
mov
ds
fbstp
and
es
popa
jg
idivl
sbb
and
push
sti
sub
insb
mov
shrb
xor
push
push
inc
cmp
sbb
dec
lods
or
loop
jg
js
jge
imul
push
inc
mov
jo
cmpsl
cs
xor
mov
and
cmpsl
daa
xor
xor
jl
pop
imul
hlt
sbb
sahf
push
dec
sbb
jae
andb
stos
insb
in
push
or
xchg
ds
add
ljmp
ret
adc
sub
pop
jns
or
ja
bound
ret
stc
adc
sbb
iret
cmc
xchg
dec
dec
push
xor
test
nop
or
sub
xor
pop
nop
jb
xchg
or
inc
dec
into
js
and
sbb
mov
sub
jle
mov
out
inc
pop
cld
inc
lret
push
ret
movsb
fmuls
sub
add
or
pop
je
into
jmp
add
mov
lahf
dec
iret
jae
mov
jno
sbb
test
int
add
addr16
adc
dec
subb
pushf
jmp
clc
cmp
mulb
mov
push
sbb
loopne
cmp
lods
fwait
gs
sbb
sub
cmp
jmp
negb
add
iret
lea
push
mov
mov
mov
das
jns
in
push
or
in
dec
repz
sub
push
call
fdivrl
scas
push
mov
out
mov
cmpsl
mov
test
cmpsl
sbb
xchg
pop
mov
dec
adc
stos
movsb
mov
icebp
mov
mov
int
mov
in
orb
push
xchg
dec
dec
es
nop
inc
dec
or
push
scas
lods
movsb
mov
sbb
std
mov
adc
imul
filds
cmc
xor
push
pop
push
mov
push
mov
mov
cmp
mov
pop
jb
jl
lret
stos
jno
insb
push
pusha
in
cmc
in
daa
or
jl
mov
ljmp
loopne
leave
and
xlat
mov
add
push
mov
ds
pop
int3
je
shlb
push
or
subb
adc
mov
fcoml
inc
push
js
test
das
and
adcb
mov
cmc
dec
adc
shlb
xchg
fimull
mov
scas
lcall
mov
jp
std
shll
shrb
outsl
and
push
out
dec
add
sub
or
push
xchg
out
push
mov
insb
adcb
xor
aaa
mov
mov
cmp
dec
push
loopne
popf
xchg
sbb
aaa
or
out
push
sub
dec
outsb
leave
adc
test
idivl
out
dec
aas
jmp
nop
shr
and
cmpsl
pushf
or
xchg
scas
mov
lret
scas
imul
aas
es
subl
mov
je
adc
sub
pop
mov
mov
nop
pop
aaa
xor
sub
mov
jnp
sbb
jg
popa
pusha
sub
mov
mov
outsl
popa
inc
sub
mov
adc
fildll
or
mov
jge
jg
cmp
cmp
cmp
scas
adc
pop
insl
dec
mov
data16
mov
ljmp
popa
cmp
and
in
mov
sub
xchg
outsl
outsl
rcrl
push
mov
sub
jne
lods
pop
lods
push
sub
outsb
pop
insl
inc
test
movsb
jae
pop
push
aad
out
jnp
jp
mov
ja
jbe
jne
je
jae
jb
mov
dec
pop
dec
ja
jecxz
sub
dec
into
mov
inc
pop
inc
ja
and
xchg
outsb
inc
push
insl
inc
sti
out
inc
sub
pusha
into
mov
pop
pop
pop
ja
jecxz
sub
pop
into
mov
push
pop
push
ja
jecxz
sub
filds
lock
jle
imul
imul
mov
fs
arpl
jecxz
sub
jle
jge
jl
outsb
ja
jecxz
sub
js
mov
jne
je
jae
jb
jno
push
int
pop
cwtl
test
pop
mov
sub
mov
shrl
jb
dec
cwtl
sub
mov
shrl
dec
cwtl
sub
mov
shrl
out
dec
push
pop
insb
push
dec
outsl
ja
jecxz
test
insl
data16
mov
arpl
ja
jecxz
sub
jle
xchg
notb
jnp
sub
push
out
jp
xchg
jns
js
ja
sahf
das
mov
and
cmc
add
jg
outsl
int
daa
or
jae
or
sub
shlb
test
scas
jns
cmp
cmp
cltd
andb
push
mov
xor
mov
pop
mov
ror
sub
scas
mov
jg
jno
jle
fdivp
in
fidivl
push
stc
aad
imul
fisubs
and
mov
outsb
jg
mov
cwtl
fstpt
cmp
dec
jl
add
and
jnp
xchg
xchg
mov
xlat
lcall
mull
outsl
das
cmp
xor
fwait
out
hlt
xchg
std
sbbl
xchg
xchg
leave
iret
data16
imul
or
xchg
loop
cli
mov
mov
int
cmp
cmp
ds
enter
insl
dec
jmp
mov
fisttpl
adc
out
cmc
ja
inc
push
xor
cmpsl
push
lock
xor
cmp
popf
push
cmp
insb
sbb
out
inc
je
jmp
cwtl
lret
adc
fstpt
xor
mov
dec
xor
scas
gs
aaa
push
sub
inc
jl
stos
xor
pop
sub
jge
or
js
enter
push
sub
push
fmull
xor
outsb
jae
outsl
pushf
push
shrb
jae
mov
lret
outsb
ja
dec
ret
aad
std
scas
mov
decl
movd
pop
das
jecxz
sub
in
mov
sub
or
clc
jl
sbb
sbb
incl
xchg
add
lods
sti
pop
pushf
adc
sub
lret
cmp
out
lcall
sbbb
outsb
pop
cmp
or
out
adc
mov
add
xchg
fsubrl
inc
enter
and
std
pushl
rclb
loope
dec
dec
incl
mov
clc
into
mov
iret
cmp
sbb
jbe
sbb
aad
sbb
ret
fs
xor
push
fbld
jl
sub
adc
sub
clc
filds
jg
xor
dec
aas
stos
sbb
sti
insb
push
sub
sub
sbb
lods
repz
lret
sbb
mov
and
push
sti
mov
push
das
push
mov
push
mov
data16
jae
push
xchg
je
lods
xchg
sahf
data16
cmp
outsl
scas
fimuls
loope
jl
push
jae
pop
pop
push
jecxz
sti
jle
pop
arpl
push
jno
loop
dec
dec
adc
mov
ret
xchg
es
inc
cmp
inc
jb
cli
xorps
mov
push
pusha
cmp
shll
and
bound
inc
outsb
mov
shr
mov
jle
and
pop
clc
movsb
mov
in
and
adc
hlt
inc
adc
out
inc
and
xchg
repz
out
aas
push
inc
orb
mov
insl
mov
or
movsl
ja
jg
push
lahf
lock
jae
push
movsl
push
push
pop
or
stos
mov
push
dec
fs
xor
and
cs
xor
frstor
bound
insb
daa
pusha
mov
icebp
jo
jae
setns
in
dec
mov
jge
sub
dec
lret
dec
cmp
sti
cwtl
push
mov
mov
out
nop
xchg
sub
xor
inc
test
mov
into
mov
pop
out
das
into
jae
loop
mov
push
mov
cmp
pop
fwait
push
std
pop
in
stc
or
stos
movl
mov
jle,pn
pop
push
jmp
sbb
pop
idivl
jge
insb
jle
loopne
inc
cmp
jl
and
lahf
mov
or
add
and
or
cmp
push
mov
mov
ficompl
mov
fnstsw
insb
dec
hlt
sbb
in
ds
pop
inc
dec
rdmsr
push
jg
push
popa
rcll
cmp
outsl
shlb
lahf
js
push
mov
aam
push
lret
in
fmull
shl
stos
sub
mov
pop
movsl
jo
aam
int
jo
push
aad
dec
sub
jo
xor
sarl
fs
or
test
mov
call
daa
cli
pop
pop
ds
or
iret
xchg
cmp
rorl
or
add
inc
fdiv
fstp
cld
fnstcw
cmpsl
xchg
xor
outsl
lods
pop
in
insl
pushf
orb
out
jle
pop
push
cli
jl
js
sub
cmp
test
dec
mov
and
xor
das
js
push
jle
out
sub
insl
div
cld
gs
mov
jnp
inc
jmp
push
inc
xchg
pop
pop
adc
push
lods
iret
xor
mov
pop
aam
sahf
jno
subl
push
push
push
les
stos
movsl
les
mov
xchg
xchg
scas
sahf
cmc
stc
mov
cmc
sbb
aam
movsb
push
mov
jbe
sti
fidivl
jg
out
es
jecxz
sbb
cmp
xorl
out
cld
leave
push
push
imul
nop
jnp
cmpl
pop
push
inc
rep
or
and
lret
in
jae
jbe
and
push
push
sub
outsb
outsb
dec
lods
stos
inc
rcr
xchg
daa
push
jl
sbb
pop
or
pop
jp
out
aaa
mov
cld
decb
movsl
lods
sbb
push
lods
cld
add
fcompl
add
push
sbb
repz
std
movsb
push
jecxz
mov
out
fisubl
cs
mov
xchg
outsl
mov
mov
dec
cmp
cmc
sub
scas
push
push
nop
jne
cld
call
push
mov
out
pop
scas
sub
aam
mov
and
adc
sbb
jae
inc
push
imul
insl
loop
fists
jbe
lods
jno
cmp
movsb
or
test
rcrl
xchg
jle
inc
insb
arpl
jg,pt
or
push
push
loop
rorl
add
mov
into
cmp
popf
lds
push
sub
mov
mov
or
push
push
addb
push
jo
das
shr
xor
or
jno
lock
cli
and
pop
xor
mov
daa
sbb
sbb
stos
int
stos
idivl
cmpsl
addr16
int
mov
es
lahf
arpl
mov
data16
jmp
inc
insb
push
mov
scas
xor
lock
sub
sub
and
xchg
test
leave
cs
pop
outsl
mov
scas
push
aaa
fs
inc
mov
in
inc
iret
push
push
aas
cs
outsl
shl
lahf
mov
adc
popa
ja
dec
mov
sub
and
lock
pop
xor
or
push
push
cmpsl
adc
dec
add
sub
jbe
sub
ja
and
and
testb
cmp
sub
jp
das
jnp
daa
jl
and
das
aas
push
out
lret
jae
outsl
push
jb
or
subb
mov
pusha
ficoml
xor
data16
cltd
jnp
out
jbe
les
imul
js
ret
cvtps2pd
pop
sub
cmpsl
xchg
push
push
xchg
mov
push
call
add
adc
mov
sub
in
shl
subl
jns
test
std
movsb
inc
leave
push
push
lahf
jbe
sbb
and
mov
xchg
push
or
repz
ljmp
ljmp
jle
push
sarl
std
cmp
xchg
mov
ljmp
aam
cmp
loop
cmp
scas
repz
cmp
arpl
mov
and
adc
imul
imul
outsl
out
cmp
pop
mov
dec
mov
cmp
movsb
cli
inc
inc
push
add
ljmp
mov
mov
jnp
mov
inc
ljmp
sub
sahf
inc
xchg
push
dec
xor
and
inc
pop
stc
push
out
mulb
xor
lahf
js
sbb
scas
and
bound
xor
xor
xor
lods
dec
fisttps
fwait
jge
jle
pop
stos
lods
addb
insl
fs
jbe
or
sub
inc
loope
mov
lods
jp
scas
sbb
pusha
push
ficoml
xchg
enter
cmc
shlb
dec
data16
sbb
pop
xchg
dec
outsb
and
hlt
xor
insb
push
push
mov
jmp
in
loope
dec
mov
push
dec
and
jmp
mov
and
xchg
stos
cs
xor
or
outsl
push
xchg
sub
popf
and
pusha
xchg
or
sub
pavgw
push
inc
loopne
pop
inc
add
mov
ret
push
arpl
call
lret
ljmp
push
jne
or
lcall
mov
dec
mov
insb
mov
repz
mov
cmp
xchg
out
insb
fbld
jbe
cmp
pop
pop
sti
push
mov
cmp
ss
push
mov
xorb
std
das
jl
sub
lods
jmp
insb
push
xchg
js
cli
push
push
jl
push
cmp
imul
push
rolb
jbe
adcl
dec
push
pushw
insb
enter
jg
xchg
jmp
xor
xchg
lods
setae
ljmp
push
insb
mov
jmp
cmp
mov
out
test
mov
daa
cs
adc
dec
xor
lods
dec
sbb
pop
ja
out
dec
sti
adc
stos
lods
icebp
sub
sub
lcall
clc
lahf
add
push
daa
pop
sahf
jg
pop
push
imul
mov
sub
mov
push
leave
mov
enter
insl
inc
mov
xchg
imul
push
pop
jl
and
push
pushf
mov
gs
loopne
push
or
idiv
push
in
in
mov
fsubr
loope
loop
in
out
in
mov
or
lods
sub
jl
stos
cld
aam
xchg
std
sbb
dec
js
outsb
loopne
test
int3
out
in
pop
stos
std
and
dec
mov
pusha
repz
xlat
es
imul
insb
dec
lea
inc
lods
insb
dec
int
pop
jbe
or
or
pushf
dec
fistpll
mov
insb
cmp
mov
jae
mov
fcoms
in
aas
sbb
out
inc
sbb
aas
cli
out
xchg
js
out
ljmp
ljmp
imul
shrb
outsb
sub
dec
adc
arpl
insb
lea
test
pop
or
dec
shlb
sub
arpl
pop
test
mov
mov
and
push
popa
outsb
mov
loope
outsb
jp
imul
pop
jecxz
rcrb
cmpsl
mov
addr16
fdivs
pop
or
arpl
je
or
test
or
jecxz
imul
inc
sub
cmpsb
and
cmpsb
fldt
adc
inc
push
inc
in
xor
insb
outsl
or
cs
ljmp
addr16
insl
imul
dec
xchg
fldcw
push
sub
push
pop
lret
push
sub
pop
out
mov
test
andb
aam
cmp
rcr
movsl
jge
test
or
imul
jbe
xor
cmpb
mov
mov
inc
push
pop
fdivrs
jbe
lret
mov
or
ds
insb
sub
push
outsb
aaa
lret
lahf
jg
cmp
cs
insb
jbe
cld
test
ds
xchg
or
in
imull
imul
push
jge
push
xor
or
outsl
jg
cmp
mov
mov
push
ja
aaa
aaa
push
in
mov
jmp
std
stos
push
lret
cmp
push
sub
insb
inc
decl
fs
inc
lea
inc
pop
mov
filds
inc
sub
inc
lret
clc
inc
pop
push
lret
cmp
popf
and
movsl
xor
cmpsl
push
jle
push
ret
jp
cs
mov
in
data16
lea
daa
dec
sub
outsb
loope
jno
and
loop
mov
clc
jnp
cmpsb
aaa
jle
lods
scas
jp
outsb
fdivrs
int
xchg
inc
push
add
sahf
aas
push
out
insl
sbb
addr16
dec
xchg
cmpsb
sub
xor
push
xor
insl
and
test
dec
frstor
fsts
mov
repnz
jp
fisubl
push
adc
ds
add
inc
bound
mov
scas
imul
push
insb
popa
pop
imul
inc
call
ds
popf
sbb
movsb
ret
sbb
addr16
insl
arpl
pop
bound
arpl
in
push
imul
mov
cmp
pop
imul
sbb
mov
insb
lock
fistpll
inc
dec
push
push
imul
sub
imul
sbb
add
mov
sub
outsl
mov
jle
cli
jae
out
xor
jmp
xor
fstpt
fs
cmpsb
jne
sub
out
out
addr16
imul
arpl
push
in
clc
xchg
sti
jmp
in
test
imul
clc
outsb
mov
maskmovq
out
pop
push
shrb
push
mov
mov
movsb
aad
mov
clc
insb
xchg
push
addr16
mov
jnp
bound
jmp
sahf
add
push
popa
sub
xchg
insl
clc
imul
push
mov
push
jae
clc
cmpsl
sub
outsb
sub
movsb
es
incl
fbstp
mov
push
mov
jns
adc
fsubr
jmp
and
in
jmp
pcmpgtb
shrb
popa
sub
mov
mov
push
std
aaa
addps
cs
lods
cmpsb
xchg
imul
out
mov
in
mov
mov
enter
push
push
inc
insl
fsubrl
fsubrl
push
xchg
out
bound
imul
sub
packssdw
pushf
push
mov
lret
fildll
push
lock
lahf
lds
cmp
mov
push
mov
lahf
cli
xchg
ja
addr16
loope
sub
inc
dec
lahf
arpl
and
cmp
or
insl
ds
shll
xlat
ss
bound
iret
stos
sub
push
imul
jle
push
outsl
ret
lahf
cs
push
arpl
cs
iret
push
popa
int3
bound
movb
into
pop
xchg
xchg
frstor
push
outsb
lahf
lods
or
sub
ret
lahf
jmp
movsl
bound
data16
add
popa
sub
lea
push
decl
jae
ljmp
lahf
incb
mov
popa
mov
jp
insl
mov
and
cs
outsb
mov
ss
ds
jnp
pop
or
dec
fldl2e
imul
jecxz
fucomp
push
insl
or
insb
fs
push
fdivs
insb
arpl
mov
gs
imul
push
jg
and
in
popa
push
stc
jl
lods
push
dec
std
pop
mov
cmpsl
addb
sbb
sub
push
or
jne
imul
ret
out
insl
cs
shlb
xchg
add
pop
out
outsl
push
inc
mov
in
push
lret
mov
icebp
mov
dec
push
hlt
pop
push
or
in
pop
sub
inc
jmp
call
call
insb
lret
pop
push
je
jle
mov
imull
test
fmull
inc
lods
pop
jle
test
xchg
fsubs
ljmp
push
jmp
pop
out
pop
dec
in
push
pop
movaps
movsl
in
sub
sub
sub
mov
pop
out
leave
test
jae
push
lods
sbb
outsb
aas
push
pop
sbb
add
or
addr16
and
in
jle
add
stc
xchg
out
lahf
jns
arpl
add
push
mov
sub
xor
or
rcr
xchg
fildl
mov
lret
mov
lahf
movsl
mov
pop
cmp
pop
push
aaa
pop
sti
movsb
push
or
jbe
insb
or
in
mov
inc
add
cld
movsb
push
mov
cmp
pop
or
call
mov
cmp
ljmp
aaa
sti
pop
idiv
out
push
outsb
cmp
cli
pop
jae
adc
repz
and
cs
sbb
xchg
cmp
push
fs
jecxz
sahf
add
loop
rcr
iret
lret
outsb
insb
outsb
pop
mov
cmp
imul
insb
pop
out
outsl
pusha
out
outsl
inc
out
outsl
inc
out
outsl
inc
out
outsl
inc
out
outsl
inc
out
push
dec
inc
dec
mov
insb
mov
les
or
sub
fwait
sbb
arpl
dec
inc
test
data16
sbb
fisttpl
fwait
ja
stos
insl
mov
ret
sbb
xcrypt-cfb
cmpsl
outsb
das
addr16
out
sub
outsb
insb
dec
ljmp
outsb
jecxz
push
outsl
popa
inc
dec
gs
mov
sbb
in
bound
dec
das
jmp
imul
int
mov
pop
outsb
cmp
jb
insb
dec
enter
rorl
insl
push
xor
scas
cmp
rorl
xchg
sti
jmp
fdivs
pop
mov
mov
insl
jnp
jl
imul
mov
pop
adc
dec
jmp
bound
adc
sub
dec
popa
mov
jmp
mov
lea
push
dec
fucomp
cmc
in
imul
int3
and
inc
in
shrl
cli
ljmp
ret
push
or
pop
push
outsl
int
inc
dec
mov
mov
enter
popf
lret
xor
sub
jg
xchg
jge
push
stos
mov
or
mov
aaa
stos
push
call
arpl
jge
jg
push
mov
jmp
cli
loop
imul
push
pop
sub
and
jp
sub
sub
mov
in
movsb
cs
sub
addr16
or
xor
jmp
out
insl
outsb
dec
cld
test
mov
pop
xchg
insl
xchg
fcomip
sbb
sbb
enter
cmpsb
std
scas
pop
unpckhps
dec
lock
out
cmp
jmp
fdivr
push
in
out
out
cli
jecxz
lahf
outsb
lock
or
xchg
inc
jle
pop
fistpll
lea
adc
cs
cmp
sbb
jae
push
or
pop
mulb
adc
stos
std
jo
stc
or
aas
stos
jb
call
inc
std
pop
xchg
icebp
fwait
mov
out
or
sub
call
lret
xchg
in
push
out
stos
cmp
imul
push
or
jle
xor
adc
clc
bound
das
insb
fs
gs
out
sub
outsb
push
ljmp
insb
outsb
or
push
cli
imul
lret
ja
in
or
aas
rorb
mov
insb
sysexit
test
xchg
cli
dec
jae
sbb
fs
cmpsb
mull
arpl
outsl
je
jbe
jmp
out
push
xor
stc
push
scas
xchg
or
test
mov
bound
jl
mov
ds
shrb
sbb
cli
popaw
sahf
cs
and
jge
jge
inc
push
jno
orb
sub
push
jne
sbb
inc
xchg
jno
lods
aad
pop
pusha
rorl
popf
pop
sti
cld
pop
pop
lds
sbb
shrl
xor
inc
mov
sbb
and
jae
push
in
dec
ds
jp
repnz
loopne
icebp
cmp
in
add
bnd
call
jecxz
in
pop
push
fstl
lods
out
insb
or
push
cld
cmp
jo
or
je
and
or
sub
int
lock
push
or
addl
push
cmpsb
cmp
pushf
push
cwtl
push
outsb
dec
add
pop
fists
int3
aaa
push
lahf
adc
mov
mov
fmul
cs
stc
push
push
push
push
cmp
xchg
inc
pop
xchg
arpl
movsl
pop
mov
stos
xchg
jbe
adc
jle
xchg
or
push
xor
fstps
test
fwait
and
out
in
sub
jno
push
pop
sbbb
push
shrl
xchg
cld
add
imul
jno
out
push
and
inc
jnp
xchg
mov
inc
cli
xchg
jg
or
cmp
and
jbe
sub
clc
mov
jo
test
push
lcall
inc
repnz
das
dec
dec
insb
test
push
mov
xchg
and
cmp
mov
dec
push
std
cmp
insl
in
cmp
pop
fsubr
int
xchg
jp
push
mov
imul
push
mov
popf
insl
pop
jp
or
mov
adc
iret
add
cmpsb
pop
scas
push
mov
cld
dec
repnz
push
ret
es
aad
sti
push
cmpsb
pop
push
lock
push
jne
fwait
sbb
imul
lea
ret
cmpsb
push
ret
jmp
outsb
cmp
insb
stos
sbb
out
jns
out
ds
or
and
cmp
das
mov
into
nop
adc
xchg
punpckhwd
sub
push
push
outsl
cmc
nop
gs
in
push
lods
insl
mov
mov
cmp
lods
ja
call
and
ret
addr16
insl
fildl
ret
push
in
in
test
hlt
lcall
repz
sbb
push
or
or
fsubrl
inc
frstor
xor
idivb
sub
xchg
adc
sub
and
adc
inc
ficompl
mov
lock
xor
cmp
mov
loop
jp
ja
sub
repz
outsb
in
jb
insl
xchg
dec
or
lods
outsb
jmp
enter
std
lcall
decb
das
icebp
sub
sbbl
rolb
mov
aas
arpl
dec
push
pop
jae
call
sbb
xchg
in
jecxz
cld
test
mov
in
movsl
cwtl
insl
js
psubb
push
dec
mov
test
mov
xor
mov
fbstp
ss
cltd
jmp
lock
xchg
mov
cmpsl
std
pop
jae
mov
xor
push
out
hlt
pusha
add
insl
in
or
add
cs
call
stos
movl
or
fsubs
imul
sub
imul
xor
decl
fsubl
xchg
ss
mull
stos
pop
insb
jge
push
sti
rorb
mov
sbb
sbb
xchg
mov
movsl
mov
lock
lret
ds
mov
rcr
dec
jno
imul
xchg
das
mov
add
and
cs
push
or
daa
inc
mov
sub
test
pop
test
push
mov
inc
mov
or
jno,pt
jecxz
jl
aam
push
int3
ljmp
subl
daa
pop
imul
push
or
outsl
rol
mov
pop
pop
ljmp
dec
xor
movsb
cmp
and
arpl
out
movsb
cmp
ja
and
jae
cmp
sub
pop
adc
inc
es
fdivrl
jecxz
arpl
adc
jp
ds
jmp
fucomi
cmp
dec
ja
out
out
mov
movsb
cs
outsb
out
add
stc
pop
popa
mov
aaa
sbb
push
andl
jge
mov
imul
add
insb
addl
iret
stc
sub
clc
cmp
insb
es
lret
out
dec
xor
jno
dec
mov
add
cltd
mov
lods
cmpsl
mov
rcll
add
and
out
jle
xchg
jge
mov
cmp
insb
movsl
outsb
adc
mov
and
loope
lods
xchg
sbb
fldl
dec
negb
mov
pushf
adc
lods
fidivs
insb
je
lea
or
into
and
repnz
and
and
pop
test
or
movsl
sti
aas
jg
dec
inc
lock
sbb
out
fdiv
js
stc
push
push
shrl
xor
add
adc
push
lds
cmc
xor
inc
push
and
jecxz
lods
sbb
aas
cmpsb
fstp
mov
cmp
test
push
mov
lock
lods
mov
dec
jno
out
push
cld
jnp
jne
aas
rcll
sahf
insb
shlb
cmp
add
fisubs
lcall
andb
pop
push
cld
adc
es
push
cld
lcall
mov
movsl
push
ljmp
and
std
orb
and
in
cmpsl
out
add
cmp
testl
jmp
push
jns
sti
lock
or
sbbb
xor
mov
jg
test
dec
std
imul
mov
stos
cmpsl
push
bound
imul
in
push
ficoml
fcompl
inc
jnp
out
imul
imul
pushl
aas
test
or
in
popa
xchg
test
inc
sub
sub
dec
xlat
xor
xchg
and
ljmp
or
lds
shr
test
rcr
mov
mov
cvttps2pi
lea
or
xor
repz
pop
ljmp
mov
jnp
xchg
cmp
xchg
imul
push
test
call
pushf
addr16
mov
and
imul
xchg
out
dec
adc
or
push
popf
popa
push
shll
dec
or
out
insw
addr16
sti
gs
popa
ljmp
lahf
inc
int
pop
loop
popa
sub
jecxz
repnz
out
lret
push
stos
jg
add
scas
pusha
nopl
ret
cmp
sbb
seto
fisttps
dec
lods
lods
adc
gs
dec
shlb
call
in
out
mov
popa
pop
arpl
jecxz
sub
push
push
imul
jge
out
bound
mov
movsb
jb
test
mov
adc
cmpsl
mov
inc
jmp
aam
cmp
mov
jg
ds
filds
xchg
sti
pop
cmpl
mov
popa
sbb
outsl
inc
mov
cltd
cs
xor
jge
and
in
movsl
bound
daa
js
insl
cmp
imulb
clc
lcall
fsubl
clc
push
pop
jne
xchg
and
cltd
pushf
xor
mov
push
xchg
iret
out
movsl
cmp
addr16
jle
or
out
test
pop
shlb
fisttpl
mov
shrb
mov
inc
fsubs
dec
repz
or
jcxz
jmp
ds
imul
pop
cwtl
sbb
cwtl
outsl
push
outsl
dec
imul
or
cmpsl
lea
stos
xor
mov
sti
cmp
iret
dec
fstpt
es
jno
stos
daa
mov
outsl
loope
or
ss
insl
stos
add
pop
or
outsb
inc
outsb
test
mov
cmp
mov
cmpsl
jle
insb
xchg
pop
mov
insl
push
cs
push
aad
aam
adc
push
or
cmp
mov
mov
sub
fwait
cvttps2pi
mov
sub
popf
push
fistl
fstl
pop
add
movsb
aaa
lret
adc
jl
je
xchg
add
aad
dec
pop
insb
pop
daa
adc
pop
add
daa
pop
shrl
inc
test
lods
dec
mov
ds
adc
sub
jb
xchg
movsb
or
mov
pop
cmp
test
insb
xor
test
jmp
or
mov
into
xchg
test
push
push
mov
insl
mov
inc
cwtl
mov
dec
lods
rclb
xchg
sbb
movsb
dec
lea
dec
adc
lds
sbb
lock
int3
mov
out
outsb
insb
bound
inc
pop
nop
xchg
adc
mov
aas
dec
loopne
push
scas
and
xchg
add
push
lock
inc
pop
add
data16
jnp
push
mov
lock
lret
push
outsl
leave
push
in
mov
dec
ficoml
xchg
mov
sub
in
sub
fldenv
in
mov
es
mov
and
cmc
es
std
es
adc
std
cltd
outsb
push
mov
jg
add
mov
jecxz
roll
les
outsl
push
cmpsl
aas
push
sub
insl
mov
arpl
outsb
das
push
lea
push
sbb
inc
cmpsb
push
icebp
rclb
add
std
push
ja
push
sbb
add
adc
ss
and
lret
stos
data16
lret
out
sub
push
push
insb
in
push
outsl
int
test
dec
lods
mov
push
and
aas
imul
fincstp
inc
adc
xor
sub
out
insb
add
pop
mov
xchg
loop
mov
adc
fcoml
pop
jne
pop
rorb
mov
cmp
pop
es
jbe
movsb
jmp
das
cmpsb
push
fildl
ds
frstor
lods
jnp
pop
arpl
xchg
mov
inc
jge
dec
je
je
mov
jge
jae
imul
jo
pop
sti
mov
in
popa
or
imul
sub
push
out
js
aaa
push
test
insl
insb
stc
cmp
mov
jno
jmp
push
or
push
pop
int3
sarb
mov
data16
jp
sbb
jnp
or
jl
xchg
insb
mov
sahf
adc
les
pop
out
mov
mov
xchg
repnz
mov
cmp
sti
xchg
push
into
outsb
arpl
adc
jp
popa
iret
out
subb
jg
imul
das
push
pop
aaa
popa
ljmp
cmp
cs
pop
jle
lds
mov
jbe
inc
jg
mov
ja
repz
jle
push
leave
mov
pop
mov
dec
push
push
movb
push
into
cmpb
pop
mov
push
cmpsl
push
dec
push
inc
push
sub
xchg
jb
lret
pop
sub
out
push
ret
cmc
xor
sbb
and
in
imul
insb
push
inc
jge
xlat
mov
adc
out
adc
cmp
pop
pop
jmp
insb
addr16
out
fisubrl
inc
pop
aas
mov
adc
mov
ljmp
sub
out
insl
mov
lea
cmp
out
xor
gs
push
outsb
insl
xchg
imul
pop
push
pop
data16
inc
inc
jge
sub
fstpl
aas
fsubrp
pop
rolb
outsb
out
pop
push
jg
dec
sbb
fnsave
test
imul
mov
push
cmp
dec
cmp
sti
xchg
fimull
jmp
cmp
push
jecxz
sub
mov
pop
insl
mov
jl
mov
cmc
dec
push
rcll
push
outsl
leave
popa
fildll
sbb
pavgb
clc
add
adc
ret
add
mov
inc
into
add
xor
imul
or
iret
push
mov
pop
lahf
inc
js
orb
lock
xor
sub
divb
lock
and
cmp
cmp
cmp
dec
pop
cli
pop
inc
daa
sbb
push
nop
xchg
das
cwtl
rcll
je
mov
stos
push
add
imul
pop
addr16
fidivl
test
add
sub
or
les
das
mov
sub
leave
stos
xchg
test
cmp
xchg
fsubr
mov
dec
ds
rcrb
pop
lea
sub
mov
lahf
in
xor
rep
notb
push
push
cmp
mov
push
out
xor
jmp
aad
jno
push
out
call
insb
scas
mov
xor
xchg
lock
es
sub
xchg
shlb
xchg
sub
jno
addr16
dec
mov
out
xchg
outsb
fcomip
movsb
test
xchg
jae
or
xor
push
cmc
and
add
int
rolb
pop
mov
inc
xchg
pop
push
xchg
cmp
adc
jp
lods
and
subb
daa
cs
aad
cmp
outsb
mov
clc
push
out
push
cmc
outsl
cmp
call
roll
imul
outsb
cli
pop
mov
mov
movsl
aam
jle
mov
mov
lret
push
cmp
inc
mov
cmp
push
ret
cmc
mov
mov
push
pop
jl
xchg
imul
call
sub
mov
and
cmp
inc
mov
addr16
andb
scas
outsb
outsb
pop
enter
mov
push
je
dec
dec
xchg
jl
scas
push
dec
sub
and
data16
outsb
imul
jnp
dec
or
jl
add
push
inc
pop
iret
pop
scas
in
cmpb
jmp
in
fcmovb
scas
call
jp
inc
mov
push
pop
mov
pop
dec
in
xchg
pop
out
lds
jmp
inc
call
out
movsb
jle
jo
inc
jle
cmpl
or
jne
les
subb
or
mov
outsl
and
stos
arpl
dec
jp
pop
aas
outsl
sbb
mov
decl
add
push
mov
ds
shr
jmp
dec
pop
and
je
outsb
jno
inc
shr
shll
jle
js
adc
cmpsl
jno
jle
int
imul
popa
inc
push
push
push
add
js
dec
insb
outsb
dec
ret
pop
mov
lret
shlw
je
stos
xlat
push
sahf
iret
cmpsb
cltd
mov
mov
push
stos
cmp
sti
scas
lock
dec
xchg
movsl
daa
push
out
popf
hlt
stos
push
add
jo
fstl
sbb
bound
ja
mov
add
dec
in
adc
push
test
pop
dec
mov
xchg
dec
out
and
sub
ja
mov
insl
push
xchg
out
inc
jl
or
and
jp
loopne
or
fsubrl
cmpb
outsb
outsb
subb
xor
hlt
inc
imul
jmp
iret
scas
xchg
imul
sbb
outsl
jmp
sub
imul
in
addb
sub
jl
jge
fimuls
jl
inc
scas
jnp
jl
sub
movsl
scas
jns
cli
or
js
pop
push
insb
jbe
fmuls
push
fs
cwtl
dec
in
nop
imul
sbb
dec
and
in
inc
jle
ja
cmp
aas
mov
outsb
imul
in
sub
insb
xlat
dec
dec
dec
pop
pop
dec
dec
mov
xchg
adc
inc
out
xchg
sub
sub
push
outsb
inc
dec
movsb
pushf
dec
jg
jg
adc
dec
lret
jmp
xchg
outsb
inc
push
push
insl
pop
dec
clc
es
jg
scas
ljmp
pop
jg
sbb
out
call
in
sub
lcallw
stos
jmp
jg
repz
jae
inc
xlat
out
sbb
addr16
jmp
outsb
jle
lods
or
dec
enter
adc
dec
daa
fucomp
lahf
test
push
xchg
dec
dec
test
adc
add
inc
in
aaa
jmp
add
xchg
or
xor
pop
out
ljmp
lock
rorl
jmp
mov
out
bound
jecxz
lret
push
mov
and
lahf
in
or
sub
movsb
in
mov
xor
mov
cmp
cmpsb
outsb
push
roll
sbb
out
or
daa
orb
repnz
jae
out
sar
call
xchg
mov
and
xchg
stc
lods
lock
jb
mov
pop
mov
pop
inc
test
adc
outsl
lea
sbb
addb
ja
leave
push
dec
sti
fisttpll
mov
test
aaa
in
push
mov
sub
mov
push
mov
jae,pn
xor
rclb
push
lods
test
jg
ret
cs
jl
es
out
mov
and
das
pop
jns
orb
sbb
scas
in
or
ret
xchg
testb
pushf
cltd
xor
pop
sbb
xor
icebp
stos
push
inc
cltd
int
cmp
ret
insb
out
dec
push
popa
mov
sub
xor
pop
dec
cs
jns
cmp
mov
das
in
insb
xor
push
daa
mov
lods
or
shll
cwtl
outsb
push
fidivl
pop
push
mov
push
jae
jae
sti
cs
jecxz
jb
sub
mov
xchg
dec
or
notl
push
leave
into
sub
mov
jecxz
sub
in
add
insb
xor
xchg
insl
in
cmp
insb
cmp
push
sub
lock
xchg
sub
mov
in
or
addb
pop
addr16
shlb
insl
fst
jns
cmp
stos
pop
cmp
inc
out
xchg
js
cmp
js
cmp
adcb
jge
mov
out
mov
xor
mov
into
pop
mov
popl
mov
cmp
pusha
ds
idiv
fildl
xchg
mov
in
pushf
out
es
idivb
add
cmp
sti
mov
subl
jb
push
pop
dec
push
out
sbb
xlat
or
out
push
dec
out
mov
aaa
shl
bound
dec
inc
xor
lds
inc
cmp
sbb
es
push
jg
imul
pop
ljmpw
cmp
push
cltd
stos
pop
or
jae
adc
ljmp
aam
std
jp
push
out
adc
test
jns
js
push
and
imul
fucomip
sbb
test
out
cmc
inc
sub
insl
jns
jns
inc
nop
mov
xor
incl
and
jg
mov
inc
lcall
test
push
pusha
xorb
jae
out
xchg
and
aam
and
push
cli
or
cmp
mov
addr16
pushf
insb
mov
mov
sbb
sub
sbb
insb
in
fcompl
sbb
fmull
push
adc
cmp
xlat
call
sbbb
enter
mov
push
subb
jb
inc
call
jg
lret
jmp
mov
stos
std
andl
in
ret
dec
pushf
lods
pop
insl
pop
sbb
icebp
adc
test
outsb
push
lods
mov
sti
cmp
test
sbb
and
shll
lods
fs
insb
sub
arpl
pusha
xchg
loop
bound
pop
inc
stos
cmp
insb
leave
xchg
cmp
sahf
jle
cmp
and
pop
mov
or
jp
lods
jl
inc
cmpsb
xchg
cmp
lahf
lea
jp,pn
ljmp
and
scas
and
movsb
push
repnz
jecxz
and
ljmp
das
iret
mov
jge
push
push
das
and
and
insl
insl
imul
into
jns
sub
pop
pop
xchg
jecxz
out
pop
addr16
cmp
lods
mov
add
in
outsl
sbbb
sub
pop
imul
inc
outsb
das
sti
insl
lahf
addb
call
outsl
inc
insl
fucom
outsb
mov
test
js
pop
or
mov
pop
lret
movsl
dec
xchg
repz
out
sbb
push
je
loope
bound
ja
mov
rcl
imul
negb
cld
or
dec
xor
mov
in
es
push
mov
imul
jg
push
cmpsb
in
fsubl
mov
insl
sahf
or
or
mov
cmp
cmp
int3
mov
aaa
and
mov
popf
or
xchg
jmp
mov
fstpl
sub
jns
andb
mov
dec
pop
xor
es
ja
and
jns
sbb
jg
cmpsb
pop
dec
sbb
mov
pop
jecxz
mov
push
jno
jns
adc
and
xchg
pop
insl
jp
adc
fucomi
test
xchg
repz
lods
dec
movsb
pop
jae
or
test
sbb
cmp
lcall
imul
cmp
je
shlb
ja
ljmp
outsb
push
test
mov
ret
hlt
jl
lea
sbb
je
dec
inc
ret
push
outsb
ss
aaa
pop
xchg
sub
inc
cmc
lea
gs
insl
push
shrb
ss
out
and
xchg
outsl
add
pop
fcmovnbe
cmp
or
adc
dec
stc
cmp
jg
orl
pop
xchg
mov
jnp
jmp
adc
and
filds
cmp
xchg
ja
and
push
adc
in
xchg
push
loop
aad
scas
imul
lods
push
andb
adc
mov
add
in
push
sahf
push
imul
push
lods
sub
lea
dec
mov
cmpsb
sub
mov
lods
jp
stos
pop
jge
rorl
xchg
xor
pop
jmp
daa
rcrl
pushf
xchg
jb
aaa
xchg
cs
pop
test
popf
es
addb
andl
test
aam
outsb
sbb
loopne
sbb
sbb
lods
icebp
pop
stc
aaa
mov
xchg
out
stc
aas
imul
cs
sbb
pop
das
push
fildl
cmp
subb
adc
jl
in
sbb
xchg
cli
sub
xor
ficoms
push
aaa
lds
jl
ret
mov
push
fnsave
sub
mov
cmp
xchg
imul
adc
movl
sub
inc
mov
inc
push
mov
dec
add
push
push
jecxz
inc
dec
sbb
enter
mov
movsb
dec
inc
iret
cli
push
mov
fiadds
push
jecxz
nop
in
cmp
cwtl
loopne
push
inc
leave
outsl
add
testl
pusha
cli
mov
out
mov
sbb
clc
int
stos
dec
fnstcw
mov
int
incb
pop
jmp
jbe
dec
rorl
push
and
insb
ljmp
out
cmp
jno
mov
fidivrs
out
or
lret
imul
in
popf
pop
mov
push
push
sub
mov
cli
jbe
cmp
or
inc
jae
subb
pop
call
inc
out
sub
ja
loope
stos
repz
outsl
and
jmp
je
push
cmp
or
lods
ljmp
sbbb
push
ljmp
xchg
cs
insb
sbb
jns
add
xchg
test
divb
sub
movsb
and
dec
jne
xchg
out
ret
push
mov
inc
outsl
std
jns
pop
fcomps
dec
push
mov
or
add
stos
outsb
pop
jbe
ss
mov
mov
jg
ror
jl
push
xor
dec
int3
out
hlt
js
xchg
jle
outsb
andb
enter
jbe
outsl
inc
movsl
jae
mov
subb
fstpl
lcall
imul
hlt
shr
mov
mov
pushf
imulb
lods
dec
imul
daa
add
jnp
aas
pop
dec
cmp
cwtl
out
jmp
mov
xlat
pop
lods
sub
mov
xchg
bound
cli
loop
mov
or
ljmp
jg
sub
ror
xchg
inc
lret
push
push
ret
ficomps
pushf
outsb
nop
je
sarb
pushf
movsb
mov
fsubr
out
jp
lahf
sbb
mov
sti
push
cs
xchg
jecxz
xchg
dec
outsl
ljmp
jmp
fsub
sub
xchg
fldt
adc
fwait
push
jns
push
jg
jl
in
mov
sub
subl
adc
xor
add
popf
rol
lods
jnp
addb
fcoms
shll
movsb
or
push
jae
dec
mov
in
cs
xchg
ljmp
stos
sub
push
xchg
loope
outsb
sub
inc
or
push
sub
pop
adc
fsts
jns
push
sub
dec
icebp
popw
adc
ja
call
jbe
movsb
push
movsb
jae
ss
and
mov
and
cmpsl
pop
add
add
fwait
lds
sbb
insb
and
sbb
and
pop
ja
clc
cmp
repz
fs
push
outsl
fcom
fistps
es
jmp
std
inc
ljmp
jge
pop
dec
stos
out
ret
mov
xchg
mov
stc
lea
fistps
mov
dec
dec
daa
pusha
push
js
dec
fsts
dec
jmp
jp
add
clc
xlat
cmpsl
sar
outsl
cs
and
and
imul
es
adc
sti
test
movsl
ds
stc
mov
mov
out
jmp
pop
jmp
jnp
out
pop
imul
js
loope
sub
sub
out
lcall
cli
push
dec
jl
sbb
and
or
pushf
jg
jle
scas
dec
in
mov
or
jge
test
xor
fldl
sar
cmp
insb
jg
fisubs
popf
mov
stos
in
lret
clc
lret
loopne
or
jbe
ror
sbb
jb
orl
pop
push
sub
jecxz
not
leave
push
outsl
adc
lret
push
sbb
stos
xchg
neg
and
ljmp
push
loope
inc
xor
cs
mov
call
lds
nop
add
sub
xor
std
stos
pusha
mov
pop
scas
shll
xchg
adc
in
cmp
mov
insl
sarb
mov
cwtl
adc
fs
enter
push
mov
mov
cmp
inc
notb
call
outsl
dec
add
jg
lods
mov
add
or
imul
lods
dec
jg
pop
and
or
out
dec
in
jg
dec
stos
imul
and
stos
or
pop
outsl
sub
rorb
cli
std
lods
push
mov
into
add
outsb
fwait
jg
dec
push
imul
fcomps
sbb
add
sti
imulb
fsubs
mov
jge
adc
insl
push
mov
psubsb
push
inc
add
outsb
inc
outsl
imul
enter
dec
dec
sbbb
daa
push
xor
imul
xchg
or
aam
xchg
js
jne
out
and
cmp
gs
xchg
out
mov
push
stos
icebp
imul
mov
das
insb
xchg
or
xchg
fbstp
inc
push
nop
int
call
mov
and
leave
cmp
mov
fdivrl
fcomps
repz
lahf
pop
pop
xchg
scas
sbb
push
insb
icebp
ja
pop
pop
xor
shll
dec
mov
add
bound
push
push
shlb
mov
or
stos
out
cmc
stos
movl
or
fidivrl
aad
es
push
in
pushw
mov
sbb
jg
push
stos
data16
jo
pop
jmp
stc
cmc
inc
sub
jl
mov
mov
jp
fs
pop
mov
lahf
sub
lea
in
js
in
insb
pop
ja
mov
jle
lods
shl
sbb
out
not
mov
xor
mov
std
pop
jg
sub
push
fiadds
pusha
push
xchg
sub
fisubl
inc
pop
pop
adc
hlt
and
fdivr
cmc
sub
sti
xchg
ret
or
pop
iret
sbb
fsubrs
pop
pop
clc
push
mov
mov
jns
retw
stos
out
stc
push
xchg
testl
mov
pop
aas
inc
daa
jmp
daa
dec
jle
lock
frstor
in
adc
std
stos
xchg
insl
test
sahf
push
jp
sub
adc
movsl
xor
out
push
divb
pop
fcompl
mov
testl
sbbl
dec
ret
inc
dec
inc
xor
jae
mov
jmp
cmpsb
cmp
aaa
inc
mov
cmp
fucomi
cmp
jp
or
fucomip
ds
inc
std
push
stos
ja
cmp
scas
jg
outsb
push
aad
push
imul
xchg
or
aam
sti
push
cmpsl
adc
imul
lea
test
icebp
addr16
adc
lret
call
cmpsl
gs
pop
ficoms
fidivs
lods
sti
aas
popa
inc
pop
repnz
call
rorl
loopne
imul
or
stos
stos
insb
mov
rep
cmpsl
and
push
sbb
fsubrp
cmp
in
mov
call
cld
lcall
popf
repnz
xor
sti
cmp
dec
mov
sub
mov
stos
or
fwait
dec
push
dec
js
ret
fildll
and
cmp
lods
fmull
pop
pop
and
imull
insl
inc
or
and
push
dec
andb
push
sub
fsubs
pop
pop
inc
scas
xlat
fsubl
xchg
jmp
sub
adc
daa
xor
add
or
loope
cmp
and
pop
popf
pop
pusha
push
dec
dec
pop
dec
das
pop
sbb
int3
loopne
mov
jp
ja
lods
cld
outsb
xchg
test
dec
mov
lds
push
and
movsb
lods
rorb
cwtl
subb
int
cld
and
es
adcb
int
mov
jo
es
jl
cmp
jle
lea
loopne
push
push
insl
fldl
adc
imul
je
fs
xchg
lahf
cltd
pop
daa
out
rolb
inc
sbb
mov
jns
sub
cmp
jmp
jge
ret
idiv
fwait
dec
es
lds
push
dec
call
dec
push
sub
push
mov
sti
jmp
fnstsw
mov
dec
mov
es
filds
adc
jp
dec
daa
cltd
push
cmp
leave
add
jns
push
xor
and
leave
mov
jns
xchg
pop
or
in
out
mov
enter
mov
jae
and
lret
rolb
fs
and
out
inc
addl
aam
mov
lcall
mov
insb
cmp
jae
inc
inc
push
scas
es
out
jmp
pusha
adc
cmp
test
jb
daa
jns
subb
jle
jno
icebp
xchg
fstpt
jne
ljmp
clc
stc
lcall
pop
test
xor
icebp
xchg
pusha
jae
and
push
out
imul
orl
jg
adc
out
jmp
notl
fs
xor
xchg
push
repnz
jp
imul
dec
stos
cmp
xor
movsb
imul
inc
outsb
fisttpl
ljmp
add
mov
lcall
pop
jmp
lods
sub
cmp
clc
xor
mov
pop
sbb
mov
pop
lea
iret
cmc
sbb
ds
pop
clc
fwait
ja
stc
cmp
and
shlb
out
aam
jo
jl
insb
push
push
pop
cmp
jnp
add
cmpb
movsl
ds
fs
insl
adc
push
js
dec
push
into
sub
add
das
pop
ljmp
cmp
movsb
ja
movsb
stos
jle
dec
lods
xchg
test
outsl
rcr
sub
addr16
sub
or
and
dec
jl
push
fs
out
and
es
stos
lret
pop
push
fnsave
fsubr
insl
jnp
loopne
sti
pop
mov
cltd
imul
add
jnp
vpmadcsswd
mov
iret
outsl
jge
push
sub
or
ljmp
jl
lcall
pop
push
in
jae
cmp
outsl
test
sti
fcomip
add
inc
sbb
mov
xchg
faddl
ljmp
cmpsl
int3
pusha
nop
rcrb
mov
int3
xlat
popa
xchg
loopne
mov
lea
scas
in
sub
sub
sbb
dec
dec
jb
pop
mov
idivl
pop
sub
mov
bound
lahf
pop
icebp
or
pop
xor
jmp
cmp
into
inc
adc
icebp
leave
fisubrl
sti
jmp
rcll
in
sbb
fisttpll
sbb
inc
inc
and
jg
add
mov
rorb
dec
lret
and
movsb
enter
js
push
add
sub
movsb
out
mov
push
cmp
jmp
mov
data16
pusha
int
aaa
movsb
push
jg,pn
adc
movsl
mov
push
lret
shll
cmp
in
mov
dec
jg
in
jo
adc
outsb
jns
addr16
inc
cmpsl
fwait
ds
pop
dec
mov
sub
mull
js
inc
pop
rep
xor
push
sub
jl
in
jp
xchg
push
orb
out
push
cmpsb
push
pop
pop
mov
push
dec
cmp
cltd
iret
push
cld
sbb
mov
in
jmp
or
adc
es
leave
pop
xchg
jno
mov
jl
inc
push
jp
test
push
jp
jl
sahf
ds
xchg
fwait
insb
stc
pushl
jnp
push
and
shrl
sbb
pop
outsb
mov
ljmp
outsb
pop
xor
insb
dec
insl
push
lea
inc
pop
lock
repnz
mov
test
pop
loop,pt
adc
dec
pop
sub
inc
sub
fsin
jnp
adc
pusha
sub
jns
jg
daa
daa
pop
jmp
push
std
js
lods
cltd
gs
ss
xor
mov
jns
iret
nop
or
out
pop
call
icebp
dec
or
repz
iret
or
sbb
push
and
add
outsl
xchg
aam
push
add
cltd
mov
bound
outsb
add
movsb
or
stos
sub
dec
outsl
dec
lea
or
dec
insb
or
inc
jecxz
sarl
movsb
jmp
insl
sub
adc
outsl
fisttpll
or
jb
push
rorl
daa
dec
lea
or
mov
or
ljmp
jp
xchg
and
xlat
imul
jge
push
inc
repz
mov
cmpsb
idiv
popf
mov
icebp
int3
xchg
scas
ret
insb
fsubr
cmpsb
jge
mov
imul
imul
pop
and
insb
insl
fldcw
adc
push
imul
dec
dec
fildll
jne
arpl
pop
mov
cld
dec
and
inc
cmc
adc
sub
movsb
and
pusha
int
sbb
or
pop
add
xchg
mov
clc
lahf
jne
fisubrl
or
enter
popf
jne
xorb
mov
out
sbb
arpl
xchg
jmp
enter
adc
inc
insl
mov
out
xchg
xchg
push
sbb
adc
bound
pop
stos
sub
push
lods
push
sbb
fwait
test
jmp
enter
adc
and
adc
data16
rclb
pop
ss
mov
adc
mov
cmc
in
fbstp
outsb
sti
or
loop
dec
cmp
enter
cmp
sub
dec
xchg
call
mov
arpl
pop
pop
ret
sti
inc
xor
cmp
lahf
mov
and
in
es
ds
or
adc
dec
push
mov
test
push
imul
push
xchg
or
lock
fidivrs
cld
cmp
imul
adc
stos
andb
ret
pop
ret
push
jae
jmp
sti
stos
stos
xchg
add
das
std
pusha
sbb
mov
and
loop
inc
push
loopne
xor
xor
push
das
insb
dec
dec
mov
pushf
pusha
lock
scas
or
pushf
jle
jbe
insb
mov
out
mov
fucomip
lahf
cmp
int3
dec
push
leave
insb
pop
lds
cs
enter
sub
movq
pop
insb
negl
lcall
cltd
jge
dec
outsb
xchg
adc
inc
lock
and
push
shll
jbe
arpl
stc
imull
icebp
outsb
ja
negl
out
nop
jg
xchg
mov
pusha
cmc
xchg
loop
rep
rcrb
xlat
jge
fsubrl
sti
dec
xlat
cli
pop
addr16
sub
xor
pop
xor
arpl
dec
daa
pop
nop
das
push
sub
cmp
cmc
mov
sub
pop
mov
mull
cmc
push
flds
sbb
adc
movsl
not
hlt
data16
subb
push
daa
jo
mov
push
and
popf
dec
push
mov
inc
xor
xchg
outsb
push
adc
jbe
sub
xor
jnp
std
fisttps
mov
push
rep
inc
adc
in
mov
fisttpl
movsl
pushf
enter
fdivr
jno
pop
adc
cmpsl
jae
out
shll
jp
je
aaa
pop
or
add
cltd
pop
addl
sub
es
jb
aaa
pushf
inc
imul
sub
aaa
pop
xchg
and
das
mov
subl
cltd
adc
inc
lea
add
jg
fsubs
rsm
data16
insl
insb
push
addr16
mov
mov
pop
in
sub
lods
out
shrb
ds
cmp
imul
pop
or
insb
xchg
inc
into
cmc
push
out
jle
jo
sahf
dec
mov
push
out
xor
adc
jns
xlat
push
aam
adc
div
mulb
cmpsl
cwtl
jg,pn
push
int
lds
cli
pusha
jp
jmp
clc
pop
les
push
jns
sub
add
bound
imul
sub
xor
push
stos
jnp
mov
inc
aas
fimull
inc
push
daa
mov
icebp
jno
imul
popf
lahf
fwait
ds
jl
lea
mov
ficompl
inc
mov
cwtl
sbb
xchg
xorl
dec
xchg
jmp
das
inc
pop
cmpsl
cs
into
in
mov
sti
jecxz
fisttpll
add
ja
cmp
push
and
and
mov
loop
xchg
pushf
mov
push
negb
sub
lds
out
fs
gs
mov
mov
sub
inc
sbbb
lret
addr16
jecxz
lock
lock
push
test
dec
jge
lock
in
in
jb
in
es
adc
or
jbe
stos
sbb
es
cmp
in
xchg
dec
sahf
push
or
daa
mov
inc
xor
xchg
mov
aam
jbe
inc
mov
push
xchg
test
jne
push
bound
loop
lock
sti
outsl
pop
jl
fs
out
gs
add
rcrb
jmp
stos
cmp
dec
test
push
lret
dec
cs
int
mov
lret
arpl
xchg
lahf
hlt
push
cmp
pop
int
in
or
fs
bound
fwait
push
dec
mov
outsb
jmp
push
sub
cmpsb
andb
push
push
mov
aaa
inc
jmp
push
divl
arpl
mov
ret
jmp
popa
pop
in
in
lret
std
pop
repnz
pop
ja
arpl
push
aaa
sub
xchg
jp
sub
dec
movsl
pop
mov
insl
push
pop
or
cltd
imul
cmp
daa
adc
pop
mov
sbb
push
xor
push
ss
movsb
lea
ret
ljmp
movsl
stos
popa
lret
arpl
js
mov
jbe
stc
add
jae
push
ret
jge
mov
pop
mov
cltd
sub
je
idivl
in
mov
dec
push
dec
and
cmp
enter
xchg
popf
frstor
pop
or
cltd
das
jp
add
mov
repnz
aaa
jnp
add
and
pop
outsl
hlt
stc
outsb
jae
add
sbb
pop
std
insb
or
sub
jge
cmp
cmp
jmp
cmp
int
cmpsb
std
popf
cmpsb
fs
jge
pop
sub
pop
repnz
mov
jnp
pop
pop
cli
leave
pop
std
jl
sbb
xchg
cltd
les
out
icebp
add
push
fbld
fldl
xchg
loop
enter
fwait
and
mov
cld
out
mov
cs
out
jge
movsl
imul
aad
mov
jle
lods
jae
cld
push
xor
xchg
in
inc
out
lods
std
mov
push
shll
cvtdq2ps
push
lret
jne
arpl
or
cmp
and
enter
or
push
adcb
adc
and
std
leave
nop
pop
adc
cs
cltd
jl,pn
lock
stos
dec
in
xor
out
or
insb
mov
daa
leave
ja
popf
jmp
sub
dec
cmc
sub
sub
imul
jmp
cwtl
jecxz
adcb
xlat
test
fdivs
lods
rcr
cwtl
jb
add
and
jnp
addr16
add
addr16
jle
mov
cmc
sub
jg
movsl
dec
dec
lock
dec
mov
movb
dec
inc
lods
lret
outsl
notb
mov
mov
jle
mov
stos
out
and
ja
test
pop
dec
and
dec
jae
jno
pand
mov
adc
outsb
jae
or
jl
fsubl
enter
sub
pusha
es
and
dec
hlt
jmp
xlat
addr16
gs
hlt
jbe
add
xlat
mov
in
dec
daa
js
mov
mov
ret
in
loope
movsl
dec
and
je
jb
insb
insb
xlat
push
pop
je
jb
cmp
adc
sub
jns
movl
dec
insb
cmp
repz
sub
rorl
bound
pop
dec
cmp
inc
imul
shrb
les
sbb
in
cmpsl
sbb
cli
insb
dec
aas
lock
jle
sbb
jmp
ret
andb
lods
sub
aaa
stc
jp
mull
push
adc
sbb
jbe
fisubl
add
jecxz
in
icebp
pop
jbe
lcall
push
sbb
imul
jecxz
xchg
xor
pushf
ret
insl
pop
in
inc
int3
ss
push
jmp
jle
xor
stc
es
inc
std
pop
add
fistpl
out
neg
out
cwtl
push
xchg
daa
popf
and
ja
sub
jae
or
jno
push
sub
or
out
or
jmp
sub
js
mov
insb
sbb
lods
inc
xorb
push
push
push
mov
std
bound
inc
aam
jg
pop
sbb
push
jle
lahf
adcb
mov
jle
js
stos
jp
inc
mov
fsubrl
sbb
data16
jl
jb
pop
sub
mov
gs
dec
aas
idivl
sbb
pop
or
je
lds
repnz
jge
xchg
mov
add
popa
lahf
dec
sub
adc
outsl
jnp
lea
inc
sti
lods
cmc
daa
xchg
sbb
adc
jecxz
frstor
fdiv
push
push
iret
cwtl
lock
fucomip
push
adc
cli
pushf
mov
mov
sub
test
push
in
in
jg
inc
adc
inc
ja
inc
xor
addb
jle
outsb
push
push
jl
pop
jp
data16
test
fidivrs
imul
xor
cmp
pop
sub
stos
jnp
lahf
mov
rorl
clc
fdivrl
mov
flds
insb
xchg
das
dec
pop
mov
jb
push
repnz
sub
fwait
add
cmp
lret
xchg
ja
pop
rcll
sbb
cld
or
int
aas
inc
gs
fstpl
mov
jo
adcb
aas
fs
push
xchg
xlat
imul
push
xchg
mov
mov
sbb
sbb
ds
pop
insb
xchg
mov
mov
pop
loopne
clc
push
pop
sbb
int
fisubs
push
or
aad
je
jg
pop
adc
mov
and
in
push
jmp
pop
cld
outsb
push
idivl
dec
jg
push
pushf
jp
mov
insl
insb
jns
push
or
cld
push
sub
mov
jge
sub
sub
jae
subb
xchg
daa
dec
gs
dec
jle
jp
bound
mov
inc
es
mov
cltd
cld
das
loopw
cmc
data16
mov
sub
push
jbe
xchg
inc
and
in
mov
fnstsw
mov
insb
cmp
xor
outsl
out
insl
pop
and
pop
or
ljmp
data16
xchg
testl
shlb
mov
dec
jl
xor
jbe
loop
mov
inc
out
jl
cmp
hlt
sub
outsl
lret
lds
outsb
pop
inc
int
fildl
sbb
les
lds
jecxz
adc
outsb
pop
pusha
and
dec
ficoml
repnz
cmc
dec
pop
push
add
push
mov
fstl
rclb
jg
insb
test
cmp
mov
xchg
enter
insb
mov
adc
sub
jbe
or
outsb
idivb
es
stos
leave
pop
in
sbb
sbb
repnz
mov
jg
push
pop
imul
dec
fidivs
jmp
or
test
jmp
add
fimull
adc
push
mov
push
pop
push
mov
sub
fcoms
sbb
inc
enter
push
std
int3
cmpsb
stc
rcl
sub
fldt
and
out
aad
das
daa
sub
xchg
nop
loope
xorl
lcall
lret
les
adc
hlt
push
sarl
inc
pop
cwtl
jp
testl
imul
insb
je
fstpt
cmovg
add
or
out
ds
je
aam
orb
adc
push
ss
and
shlb
mov
movsb
lret
cmc
pop
hlt
daa
push
pop
inc
jge
cs
es
sub
push
out
jle
aaa
jge
jno
xorb
shll
pop
ficompl
dec
or
cs
ljmp
mov
int
and
inc
data16
incl
xor
inc
xchg
ja
pop
iret
dec
mov
inc
pop
add
dec
sti
ret
repz
hlt
mov
jp
jno
or
jle
sub
lahf
fcmovnu
mov
jnp
xchg
or
sti
jmp
mov
imul
cmp
ljmp
xor
and
insb
lret
push
sub
adc
sub
addb
xchg
push
sbb
in
push
inc
sub
stos
mov
fldcw
movsl
sti
bound
fimull
cltd
call
andb
insb
int3
pop
push
ja
repz
popa
mov
dec
int
into
cmp
inc
loop
addr16
push
fucomp
jmp
mov
xor
pop
cmpsl
icebp
mov
or
mov
ffreep
mov
sub
outsl
inc
aad
stc
test
stc
add
mov
jp
xorb
jl
js
mov
jp
sub
jb
fwait
xchg
xchg
xor
mov
mov
fimull
or
aaa
ljmp
mov
adcb
jl
push
dec
mov
sbb
loopne
mov
pop
stc
icebp
cmp
aam
stos
xchg
je
out
lret
mov
js
adc
inc
ljmp
arpl
mov
push
push
pop
outsl
dec
inc
bound
popf
and
pop
scas
xchg
loope
mov
jne
jle
popa
ja
jl
and
jno
add
movsb
xchg
jb
loopne
out
jmp
push
hlt
cvtdq2ps
cmp
lods
or
fstpt
mov
psrlw
inc
enter
push
clc
fimull
out
roll
mov
fmuls
cmp
push
sbb
out
arpl
addr16
xchg
shrl
sarb
push
pop
cmp
push
iret
mov
std
imul
jmp
insb
mov
cmp
push
cmpsb
and
aas
push
outsb
cmp
lea
push
jb
aas
outsb
ret
xchg
push
or
sbb
arpl
add
jae
pop
jno
or
dec
and
stc
mov
adc
jae
lret
add
cs
pand
ljmp
sbb
sbb
mov
xor
call
mov
add
and
daa
sub
pop
stos
aad
sub
add
mov
cltd
sar
push
add
ret
mov
les
adc
inc
pop
cmpsb
jae
xchg
push
or
mov
mov
in
mov
subb
outsl
loopw
add
movsl
pop
in
lock
shrl
sub
inc
sub
pop
mull
mov
jp
orb
cmc
nop
sbb
insb
hlt
pop
test
sahf
push
fimull
hlt
dec
mov
add
dec
push
lock
lret
sbb
cltd
jge
pop
out
xchg
sub
push
adc
shlb
ficoms
std
push
cmpsb
sahf
ret
jns
xchg
lcall
jg
cwtl
push
jmp
dec
arpl
dec
cmp
cmc
inc
leave
jnp
nop
mov
fnop
rclb
sarl
daa
push
jl
dec
shll
insl
push
int
out
sub
lcall
xor
in
cmpl
mov
mov
shll
sub
cmc
and
loop
or
inc
stos
mov
imul
jbe
sub
jg
inc
jl
jns
jp
xor
cmp
add
addb
testl
xchg
xchg
rcrl
rcrb
lahf
sbbl
or
pop
or
xchg
sub
int
mov
ror
rorl
pop
or
jecxz
pop
shll
push
pop
in
fwait
leave
outsb
sub
loopne
push
mov
aad
mov
stc
rorb
mov
negl
mov
mov
fstpt
stc
push
or
in
jg
aaa
adc
mov
pop
and
daa
outsb
jae
ficomps
mov
jnp
shlb
rcll
arpl
sub
xchg
pop
xchg
xchg
inc
xchg
in
xchg
inc
xchg
sub
xor
popf
xchg
es
negl
xchg
mov
gs
shrb
xchg
outsl
adc
movsl
jmp
sti
pop
push
ret
in
dec
xchg
insb
pop
push
xor
push
mov
les
out
pop
rcrl
int
movsl
pop
pop
pop
dec
rcpps
lcall
xchg
cltd
adc
pop
cs
mov
cmp
sub
int3
in
lods
repz
popa
or
clc
rorl
ds
push
insb
pop
hlt
lea
lock
xchg
insl
aam
or
insb
hlt
pop
pushw
test
push
or
mov
push
dec
bound
insl
jl
or
mov
add
cmp
fildll
jbe
mov
movsb
mov
pop
dec
mov
push
sbb
xorb
dec
inc
cmp
pop
insl
cmp
ss
xor
xor
aaa
mov
jg
xor
lcall
loope
pop
aad
mov
bound
aad
mov
add
mov
push
popf
mov
or
ljmp
jno
pop
jl
scas
lret
sbb
pop
rcrb
arpl
insb
notl
pop
push
inc
xor
pushf
out
rcll
test
lahf
stos
daa
adc
stos
adc
fsubrs
ret
mov
xlat
lods
xor
in
inc
mov
lahf
mov
xchg
xor
pop
lds
xor
cmp
jo
cmp
cmp
add
dec
rcrl
push
dec
lods
ds
adc
imul
push
gs
insb
cmp
stos
cmp
sub
aas
pop
and
cmp
push
ja
add
adc
gs
dec
imul
jno
in
enter
mov
negl
mov
push
xchg
shll
push
cmp
arpl
lahf
cmp
push
jg
push
dec
in
mov
add
gs
xor
add
clc
xchg
xor
imul
popa
insl
pop
pusha
iret
into
jb
or
jno
or
inc
jmp
or
sbb
mov
fldt
nop
enter
fsubrl
test
push
xchg
stc
int
cmovp
out
cmp
xor
pcmpeqw
sbb
call
shl
pop
fsts
andl
loope
xchg
lods
jo
repnz
push
cli
cs
mov
jbe
or
leave
insb
jno
and
out
jmp
rcl
arpl
add
jns
pop
daa
fcoml
cmp
sahf
lock
xor
sbb
or
daa
push
sbb
mov
movsb
cmpsb
fwait
and
jecxz
adc
mov
out
leave
cmp
push
and
imul
pop
cmp
lea
push
shrb
iret
adc
bound
insl
cs
hlt
jnp
push
push
nop
jno
pushf
lahf
test
dec
aad
xor
add
cs
cmp
ss
sbb
fimull
shll
cmp
fcmovnb
xchg
cmp
fldt
sbbl
jg
int
fildll
fisubrs
es
fs
pop
roll
xchg
sub
jmp
shlb
or
ds
stos
inc
pop
sub
mov
xor
sbb
sub
xor
xchg
jns
dec
jb
xchg
adc
sar
ficomps
xor
mov
mov
adc
enter
inc
add
roll
add
sti
cs
imul
ret
inc
or
sub
outsb
adc
xchg
push
mov
push
pop
fistpl
aaa
repz
rclb
movl
pop
std
push
adc
inc
insb
and
movsb
jecxz
out
push
push
out
stos
sti
sub
imull
in
sti
sub
dec
sahf
cmpsb
push
push
jns
daa
mov
ja
xor
shlb
push
push
dec
das
push
out
sub
outsb
push
dec
lcall
pop
insb
pop
dec
pop
jg
out
sub
adc
push
stos
pop
out
insb
pusha
xchg
sub
xchg
sub
xchg
imul
mov
jl
rcll
lret
xchg
mov
movsl
cmp
repnz
outsb
mov
sub
or
mov
in
sti
test
lcall
xor
push
aaa
cs
aas
rorl
call
jle
mov
das
dec
add
dec
fldt
add
bnd
arpl
push
leave
xor
sbb
cmp
ss
inc
out
inc
jg
pop
push
push
jmp
addr16
jnp
push
rclb
jmp
out
mov
push
and
cli
negl
insb
push
add
inc
dec
mov
sbb
lret
into
jecxz
icebp
outsb
cmp
sub
push
or
aaa
add
testl
enter
sub
xlat
aaa
enter
and
insb
movsb
xlat
das
dec
or
dec
clc
add
mov
jl
pop
and
push
sub
mov
clc
sub
sarl
in
sbb
sbb
sub
sti
fstpt
xchg
cld
sub
mov
dec
rcl
jne
cs
std
leave
jecxz
out
outsl
stc
jl
lret
aas
mov
scas
addr16
out
rcl
repz
pop
jl
sub
std
or
out
jg
add
out
mov
arpl
adc
jge
mov
mov
sbb
jmp
cli
movsl
jg
dec
cmp
rorl
dec
imul
jnp
shrl
out
jg
test
push
sti
cltd
jp
fdivrs
mov
rorb
and
dec
xchg
add
outsb
mov
sbb
sbb
cld
lods
dec
push
imulb
fcmovnu
pop
sbb
and
pop
sub
mov
fistpl
dec
sbb
mov
push
xlat
xor
mov
sub
mov
dec
xchg
pop
ret
xlat
mov
push
or
push
pushf
fists
push
out
push
xor
pop
mov
addr16
int
hlt
dec
jnp
movsl
ja
jp
sbb
dec
pop
stc
loopne
stc
ja
inc
in
aaa
stos
mov
pop
pop
aaa
pusha
fs
sub
das
dec
ds
sbb
ja
xor
movsb
mov
jbe
addb
adc
subl
mov
shlb
add
data16
icebp
bound
inc
out
xchg
cs
mov
push
fldcw
xchg
dec
stc
sbb
and
test
jne
in
jmp
pop
pushf
daa
cmc
pop
xor
sbb
fwait
notl
push
pop
lret
inc
sar
lds
inc
enter
int3
ja
cs
dec
shl
push
inc
addr16
faddl
pop
push
xchg
lea
add
shll
sbb
mov
push
out
mov
sahf
leave
lahf
clc
neg
xchg
lret
jno
add
mov
mov
push
imul
and
outsb
xchg
pop
ret
out
sbb
cld
inc
sbb
jge
pop
in
mov
divl
xchg
sub
xchg
insl
jmp
adc
pop
jb
xchg
addr16
push
adc
mov
test
aaa
mov
std
jp
nop
lret
clc
pop
cli
mov
mov
push
jbe
inc
inc
xchg
movsl
loope
mov
shl
or
mov
sub
mov
fidivl
mov
and
jmp
outsb
cmpl
lret
out
xchg
jne
fwait
pop
ret
fcmovnb
xchg
mov
dec
aas
mov
mov
fwait
lea
cs
sub
sub
xor
inc
divb
leave
mov
dec
sub
and
adc
dec
cmp
sbb
and
jecxz
lahf
in
outsl
xchg
lods
pop
fidivrs
mov
xchg
sbb
mov
imul
adc
add
push
xchg
push
jbe
popa
push
jl
repz
pop
sti
jge
add
or
and
notl
xchg
mov
mov
push
out
cmp
adcb
jecxz
jmp
sbb
and
sbb
scas
xor
xlat
sbb
and
daa
fistps
xchg
lock
shl
push
lret
jle
fiaddl
sarb
lods
pop
mov
data16
or
dec
jno
mul
sub
xchg
xlat
adc
cmp
mov
push
xchg
adc
les
movsb
pop
fcmovb
mov
sbb
loope
adcl
xchg
ds
int
inc
dec
dec
addl
nop
xchg
lret
popf
push
pop
jnp
push
sub
pop
gs
push
push
imul
push
subb
pop
fbld
xlat
mov
in
pop
ljmp
movsl
in
mov
fsubr
cmp
fldt
inc
push
dec
dec
jns
out
sbb
dec
subl
mov
and
adcb
push
mov
xchg
push
jl
sub
stc
lods
icebp
push
movsl
dec
cmpsl
das
js
and
sub
imul
insb
push
outsb
xchg
push
push
pop
es
addr16
cmpsl
scas
mov
sub
scas
adcb
jecxz
cmp
outsb
test
fisubrl
inc
jae
subb
cmc
sbb
cltd
fbld
scas
or
push
addr16
push
cmpsb
outsb
and
subb
mov
aad
jle
ret
enterw
addr16
in
cli
ret
sub
sahf
out
mov
and
mov
incl
mulb
faddl
insl
sub
ds
xchg
pop
pop
cmpsl
pop
and
mov
xchg
pop
aaa
mov
scas
push
std
inc
insb
inc
inc
xchg
dec
adc
outsb
and
push
pushf
sub
mov
outsb
repz
call
xchg
sbb
dec
sub
xchg
mov
ja
sub
out
ja
cmpb
jnp
fildl
adc
xchg
mov
std
insb
aad
insb
cmpsb
pop
pop
nop
dec
add
fs
pushf
xlat
loopne
lahf
jae
sub
insb
add
stos
pop
shrl
imul
inc
pop
jb
mov
jb
push
incb
jb
test
sub
mov
jl
imul
cli
jl
sub
mov
and
mov
inc
in
jno
mov
push
add
sub
ljmp
dec
rorb
dec
lock
popf
pop
enter
sub
jge
jns
sbb
insl
sub
inc
mov
enter
add
sbb
test
leave
push
ljmp
lahf
fiadds
movsb
sahf
lahf
mov
pusha
movsl
and
jbe
xor
cli
shr
adc
aaa
fbld
repz
cwtl
incl
pop
xchg
call
pop
dec
call
mov
cwtl
inc
iret
scas
xor
pop
enter
rcl
jne
jb
lret
repz
test
push
cwtl
adc
sub
leave
xchg
dec
pop
jnp
adc
adc
in
mov
ja
adc
and
cltd
push
lds
sahf
sahf
cmp
negb
pop
push
orb
rol
push
push
mov
adc
mov
in
je
arpl
ret
add
mov
ja
xorl
dec
ja
std
in
jbe
jg
mov
cmp
adc
mov
mov
sbb
cmpsb
xchg
out
scas
pop
lea
das
arpl
sbb
into
cmpsb
test
jle
test
fistps
pushf
jns
mov
or
decl
out
or
xor
pushf
sub
int
pop
sbb
pop
dec
mov
ficoml
jo
dec
inc
cmp
sub
ja
pop
cmp
adc
stos
add
insl
xchg
adc
mul
repnz
rcrl
mov
aaa
shrl
pop
mov
insb
fmulp
jmp
sub
ror
mov
dec
aaa
popa
movb
daa
dec
or
insb
sub
jle
pusha
mov
pop
push
pop
or
sub
test
mov
sbb
imul
lcall
icebp
jle
jo
push
mov
sub
data16
pop
jno
mov
pop
mov
and
inc
jecxz
push
mov
xor
dec
outsb
xchg
cmp
xchg
push
xchg
jbe
mov
insb
outsb
aad
ljmp
ret
addr16
fcmovne
sub
daa
mov
ja
inc
in
andb
sbb
mov
lret
jmp
enter
dec
nop
repz
stos
or
inc
insb
pop
pop
fwait
in
arpl
pop
insl
adc
cwtl
sar
or
adc
mov
lret
ret
jo
cltd
das
inc
lret
lock
push
xchg
push
push
out
rcrl
in
dec
lods
mov
lods
cmpsl
pop
sub
sbb
fwait
jecxz
aaa
out
xor
push
mov
jp
fnsave
das
add
lds
xor
mov
in
mov
mov
jecxz
fbld
push
loopne
decl
xchg
insb
pop
iret
repz
cmp
imul
call
inc
test
pop
loop
push
int3
lock
sbb
jnp
lea
scas
out
xor
arpl
mov
adc
lods
push
fucomip
pusha
xor
push
das
sbb
imul
sub
jmp
jnp
cmp
lock
je
mov
jge
aaa
mov
cs
outsl
mov
cmp
or
pop
dec
adc
iret
imul
dec
lahf
adc
gs
cltd
dec
sub
or
inc
pusha
lret
sahf
sub
push
test
lea
push
icebp
dec
ds
insb
push
and
and
xlat
mov
dec
lret
cmp
push
jae
mov
popf
vpmullw
and
test
cld
push
sbb
jnp
xchg
mov
sub
mov
and
adc
rcr
mov
jnp
jbe
and
outsb
subl
lods
push
adc
insb
dec
lret
hlt
std
fs
xor
mov
cmpsb
gs
jg
inc
push
jle
lock
mov
ds
mov
mov
inc
inc
mov
pop
int
jge
lret
mov
or
adc
sbb
dec
cs
cmp
and
insl
loopne
xchg
in
lret
lahf
sti
aad
dec
sub
lret
bound
leave
insb
addr16
xchg
mov
sub
inc
sarb
jecxz
insl
ljmp
or
and
push
dec
adc
xchg
xlat
sub
cwtl
or
out
xchg
pop
out
pop
sub
lahf
outsb
pop
sub
cmc
sbb
daa
loopne
cli
inc
jbe
ja
xorb
fs
mov
mov
mulw
cmp
pusha
fcompl
sub
inc
jmp
mov
jns
cltd
xor
in
jle
xchg
dec
xor
push
mov
popa
fwait
mov
insb
insl
lret
cmp
popa
icebp
imull
adc
aas
push
push
daa
xchg
jne
ljmp
push
mov
cld
pushl
push
cmp
pop
jo
movsl
pop
test
pop
lea
cli
push
nop
stos
mov
and
dec
nop
cmc
outsl
addr16
and
punpckhdq
adc
int
mov
and
push
add
jae
and
jo
sbb
shrl
add
sub
jecxz
sbb
jp
and
or
in
jae
and
sbb
push
out
cwtl
jno
insb
clc
sbb
push
cld
nop
scas
push
inc
call
insl
or
adc
inc
repnz
pop
into
mov
lret
gs
call
push
xchg
filds
xor
adc
xor
insl
jbe
or
xchg
mov
notb
push
mul
stos
xchg
cmpsl
xchg
into
dec
iret
sbb
in
pop
sub
jecxz
xorb
add
testb
popf
fdivr
and
test
push
push
dec
insl
jp
pop
and
push
scas
stc
movsl
sbb
test
pop
rcl
stc
cmpsb
push
mov
pop
mov
pop
loopne
ss
mov
scas
outsl
jae
push
jns
adc
out
in
jl
ret
push
ja
cmpsb
xchg
aas
mov
jp
pop
imul
dec
int3
mov
cld
pop
mov
scas
push
mov
imul
jno
sub
xor
or
jp
iret
das
xchg
sbb
xchg
inc
bound
and
dec
fsubrs
or
mov
pusha
repz
push
addr16
adc
mov
cmpsb
sub
enter
push
dec
mov
push
mov
or
sub
xchg
addr16
sbb
jbe
add
lods
out
sbb
xchg
or
pop
jbe
jl
dec
push
mov
adc
out
mov
xchg
in
sub
stos
add
pandn
dec
stos
in
sbb
dec
dec
lret
push
xor
mov
cmpb
out
cli
int3
sti
jae
or
js
dec
adc
jle
push
pop
in
popf
cmp
sub
sti
sub
fisubrl
bound
jg
ret
sbbb
enter
repz
push
insl
inc
dec
inc
repnz
sti
jle
or
xor
cli
pop
gs
push
mov
loop
arpl
ljmp
ret
test
xor
insl
push
pandn
daa
push
insl
jne
ret
jg
or
lret
lods
cmpsb
jle
repnz
and
dec
push
popa
jle
push
dec
cmpsb
in
xor
movzbl
mov
movb
pushf
pushl
ret
mov
pushf
sub
cmp
pushl
popl
call
call
movb
pushf
lea
je
xor
cmp
shld
bsf
mov
not
rcr
bt
rol
add
movzbw
push
and
jmp
xchg
and
js
or
mov
adc
inc
mov
js
icebp
add
aam
adc
mov
push
xchg
pop
add
nop
setl
sbb
mov
gs
sbb
call
xor
sub
inc
rcr
movsl
mov
dec
pushf
or
mov
jo
cs
mov
and
sahf
jg
cmpsl
gs
jg
mov
sub
jo
sbb
in
sbb
jae
lcall
pop
ret
dec
dec
fs
jmp
cwtl
lret
and
rclb
fiadds
push
cmp
cmpsl
mov
lea
call
pusha
mov
jmp
mov
stc
and
inc
xor
fsubrp
les
push
adc
sub
mov
mov
rcrb
jne
int
lret
mov
add
cmp
pop
jno
pushl
pushf
movl
call
push
lock
std
std
andb
insl
scas
mov
ret
jg
pop
pop
mov
or
mov
pop
push
xor
lahf
pop
or
jge
imul
aam
pop
lret
add
call
pushf
jbe
test
in
cwtl
shl
ljmp
jbe
in
xchg
push
push
cmpsl
add
test
call
enter
fmuls
add
jmp
movb
mov
pushf
pusha
pushf
lea
jmp
not
pop
pusha
pusha
movw
pushl
ret
movl
jmp
mov
not
lea
jnp
mov
pusha
lea
call
pusha
jmp
jmp
mov
push
lods
sbb
dec
inc
sahf
aas
cld
sub
repz
aas
mov
inc
dec
fdivrl
adc
mov
push
pop
out
call
cmp
xchg
ds
in
dec
lcall
addr16
inc
push
movsl
mov
push
fs
cmp
push
pop
out
mov
lret
daa
or
mov
lods
xor
test
push
adc
ss
cmpsb
dec
ret
push
out
push
pop
adc
adc
leave
fidivrs
xor
cmp
sbb
sub
add
frstor
and
mov
pop
mov
vpminub
test
pop
sarl
jmp
sub
roll
xor
jp
enter
iret
inc
mov
add
xchg
and
and
mov
sbb
adc
cld
adc
addb
jle
test
adcl
les
lods
and
ficoms
shlb
jns
outsb
fs
pop
add
enter
push
movsl
ss
cmp
mov
sbb
dec
mov
dec
outsb
je
jb
gs
gs
fs
imul
insl
imul
xchg
and
cli
cltd
jbe
adc
cs
je
out
mov
fs
dec
int3
outsl
fcompl
mov
out
stos
cmp
cmpsl
jns
pop
sbb
clc
dec
xor
sub
in
aas
push
mov
push
repnz
ficoms
cmpsl
xor
daa
and
push
dec
cltd
dec
add
movsb
push
mov
movsbw
mov
pushl
lea
jmp
pusha
jmp
sbb
je
mov
rcr
xor
aaa
dec
or
jbe
out
lock
cmp
add
pop
push
sub
sti
adc
pop
cmp
sbb
out
lcall
fmull
mov
sarl
dec
cwtl
sub
pop
add
inc
gs
outsl
fs
gs
popa
jae
dec
popa
insl
gs
add
lret
sbb
stc
adc
mov
push
test
pusha
pusha
sub
clc
pushl
popl
clc
cmp
call
es
pop
jb
aam
aam
pop
insl
add
enter
sbb
stc
add
ja
adc
xor
jae
push
shlb
and
in
xor
xor
xchg
stos
push
ficoml
ja
dec
xchg
int
stos
inc
jae
push
jmp
shl
aam
xchg
jbe
and
mov
and
shlb
sub
shr
fcomps
sub
mov
aas
cmp
vmulpd
jne
shrb
add
loopne
adc
push
mov
gs
xchg
mov
dec
lds
sbb
loop
pop
loope
xor
lcall
adc
ss
stos
lods
enter
ljmp
hlt
jns
hlt
inc
xchg
int3
xor
idivl
mov
test
repz
or
std
xor
mov
cmpl
sub
push
mov
in
cltd
daa
jnp
call
arpl
mov
mov
sbb
test
inc
dec
shll
aad
inc
clc
dec
and
cmpl
or
xor
add
dec
pop
ret
inc
int
test
mov
sub
jne
push
test
mov
lret
and
and
cltd
mov
shlb
xchg
jge
insl
add
test
dec
xor
imul
cmp
sbb
pusha
xchg
push
leave
dec
and
repz
adc
dec
xchg
in
movsb
or
add
sarb
cmp
add
in
lahf
hlt
cmp
rcll
aad
mov
daa
and
pop
add
iret
movsb
add
xchg
mov
lcall
cmp
or
sbb
sub
push
mov
out
pop
iret
and
in
mov
jl
inc
pushf
lods
ficoml
and
add
movsb
or
adc
lcall
test
mov
aas
into
pushf
out
sahf
iret
push
jp
call
push
cmpb
push
insl
sarb
jns
dec
xchg
iret
out
or
call
bswap
sub
adc
shr
shl
mov
lea
inc
mov
movsbw
and
add
rcl
push
test
pushf
add
add
pusha
cmp
bswap
sub
mov
pusha
shr
cmc
cmp
mov
movb
jmp
cli
cs
xchg
sahf
popa
lock
fisttps
cltd
fisttps
push
shrl
arpl
lds
dec
loop
jnp
mov
mov
lcall
ds
out
push
clc
inc
jo
rolb
rclb
add
sbb
popf
pop
sbb
addr16
xor
adcl
dec
xchg
add
jmp
mov
xchg
or
xchg
push
pop
hlt
sbb
mov
cli
repnz
loopne
pop
add
and
ret
pop
stos
sar
xor
mov
or
mov
adcb
stc
mov
inc
fwait
inc
and
xchg
cwtl
or
xor
push
inc
cmp
in
sub
jmp
add
aad
mov
xchg
lcall
call
call
mov
cmc
jmp
inc
lods
and
aas
dec
or
ds
xor
mov
xor
or
inc
into
xchg
and
stos
icebp
rolb
js
js
clc
test
faddl
pop
sbb
faddl
cmp
xchg
xchg
arpl
and
popa
sahf
pop
mov
rolb
mov
pop
test
ret
dec
into
jbe
dec
inc
scas
inc
mov
cmp
jbe
rorl
pop
mov
pop
mov
setno
mov
call
sti
cmpsl
stos
arpl
ret
and
div
icebp
sbbb
ss
cltd
scas
sub
cltd
pop
lds
mov
out
mov
dec
sahf
sarb
dec
sbb
cmpsl
hlt
dec
stos
faddl
mov
cs
insb
xchg
into
outsl
aad
test
inc
sti
cmpsb
test
jbe
cmc
lods
or
outsb
adc
lcall
xor
pushf
popa
mov
adc
add
lret
push
ja
mov
inc
mov
jo
adc
dec
xchg
addr16
cmp
push
call
stc
cmc
pushf
sub
jmp
movw
ror
pushf
call
mov
ret
cmpsl
mov
in
pop
subb
cmpsl
push
jbe
leave
lds
push
sub
xchg
jle
clc
test
mov
lcall
inc
dec
cmp
sub
lret
loopne
gs
lcall
sub
icebp
daa
popf
int
xchg
movsl
mov
xchg
mov
add
add
pushf
mov
test
mov
ja
ss
out
rcll
rcrw
cmp
sahf
mov
clc
stc
pushf
shr
clc
stc
pusha
cmc
cmp
pushf
lea
je
stc
push
push
jmp
jae
addb
adcl
and
in
push
cli
stc
or
int3
or
jmp
call
mov
or
scas
dec
sub
mov
mov
lods
xor
inc
sbb
into
xchg
ds
es
bsf
fidivrs
jbe
or
or
dec
xchg
in
jmp
pusha
pushl
stos
movb
pushf
lea
jmp
ret
xchg
mov
pop
mov
pop
push
nop
add
pop
fsubs
movsb
loopne
pushf
cmp
outsl
cltd
testb
scas
mov
inc
adc
inc
filds
push
push
push
adc
xor
or
stos
loop
cmp
sub
and
and
mov
ret
sbb
js
or
les
ret
mov
inc
xchg
pop
pop
inc
imul
das
and
mov
fyl2xp1
cmp
jle
faddp
add
in
lea
jb
pushf
mov
pusha
pushl
ret
jmp
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
cmp
cmp
pop
ja
pop
cmp
aam
enter
push
sahf
call
repnz
sub
int3
in
inc
xchg
call
into
dec
testl
mov
outsl
cmp
jl
or
shrb
stos
out
adc
adc
inc
jo
and
mov
xor
popa
mov
pop
sub
sbb
jno
add
mov
icebp
xchg
adc
sub
mov
pop
inc
jno
lret
cmp
xchg
jge
jge
sub
shl
and
push
pop
adc
pop
add
jle
sub
imul
sahf
ficompl
sub
inc
jo
fs
cmp
shll
aad
fdivr
lds
add
sbb
int
mov
fmul
daa
mov
adc
or
into
shll
push
out
out
movsl
mov
dec
nop
or
mov
mov
jmp
inc
jns
mov
jb
xor
sub
mov
movsb
lock
mov
pushl
mov
faddl
cmp
pop
sbb
pop
int3
lea
jecxz
and
jae
dec
cmp
sahf
les
pushf
mov
lea
ja
jmp
mov
adc
cmp
fisubl
xchg
enter
je
push
jbe
pop
xor
loopne
cmpl
mov
cld
decb
cmpsb
dec
and
push
pop
xor
mov
pop
push
testl
aaa
dec
xchg
jp
inc
and
fwait
sub
out
loop
aas
enter
loope
lods
movsb
sub
movsl
dec
dec
sbb
mov
adc
cli
idivb
jae
push
cwtl
cmc
lcall
shl
cmpsl
cli
daa
cmpl
out
fdivs
jb
jae
insl
into
inc
jecxz
ret
jle
out
test
sldt
xchg
cmp
sbb
sbb
cmpsl
orl
or
scas
fsts
sub
push
add
pop
mov
add
push
push
rol
dec
test
and
neg
lock
cs
inc
in
push
push
stos
inc
enter
jo
cmp
movsb
mov
xor
fs
adc
clc
leave
ds
enter
rolb
pop
lret
mov
dec
dec
mov
push
inc
scas
adc
jnp
xlat
add
and
push
mov
rorl
jno
sarb
push
jp
cmp
aaa
bound
jmp
mov
xor
cmpl
pop
sbb
jne
dec
pop
jecxz
xchg
xorb
outsb
cmp
ja
mov
pop
je
sbb
xchg
pop
mov
sub
sahf
push
jmp
pop
jge
fnsave
aas
hlt
cs
add
mov
push
test
sbb
xor
mov
inc
ret
jmp
fcomps
adc
xchg
push
mull
push
xor
add
das
stos
or
dec
icebp
cmp
pusha
pushf
add
jmp
daa
gs
stc
test
popa
notb
add
pop
jmp
add
enter
dec
xor
lcall
jle
je
jle
dec
jnp
sub
inc
lock
mov
adc
pushf
push
stc
sti
or
mov
push
add
xlat
fcom
cmp
dec
ja
pushf
pusha
inc
pusha
pushf
inc
push
pushl
mov
mov
lea
jmp
fmuls
loop
or
cmc
fcoms
or
and
fists
xor
pop
adc
rorb
adc
mov
out
jmp
cmpsl
sti
inc
inc
pop
inc
out
or
xchg
jae
mov
or
sbb
js
neg
jge
fwait
mov
jb
jl
outsb
add
add
mov
sahf
push
pushf
dec
jnp
fs
xchg
push
icebp
repnz
mov
cmpsl
or
data16
and
or
cmp
pop
mov
shll
in
jge
test
pop
out
jo
cmp
outsl
and
dec
mov
ds
not
mov
lea
call
call
dec
mov
jg
out
and
sub
das
add
or
xchg
add
cmp
pop
or
push
mov
fdivrl
dec
sbb
sbb
push
push
dec
or
add
cmc
nop
cwtl
cmp
sbb
orl
and
push
mov
pushf
mov
pushl
ret
pushf
mov
mov
pusha
jmp
push
pushf
lea
jae
push
mov
dec
inc
seto
not
inc
movb
mov
pusha
mov
pusha
call
mov
mov
push
inc
inc
inc
shr
adc
adc
cmp
xchg
add
mov
jmp
add
add
aam
adc
clc
push
call
cmc
or
push
pusha
pushl
jmp
test
push
lea
je
pushf
test
jmp
and
jmp
mov
test
int
sub
mov
push
nop
out
sub
sub
rol
jb
imul
lret
sahf
sti
mov
or
inc
pop
loop
xor
fs
sbb
add
decl
mov
negb
dec
push
lock
inc
enter
aas
jg
les
ss
jo
das
pop
js
out
dec
inc
push
mov
or
mov
dec
cmp
cmp
pop
adc
stc
jle
addr16
stc
jle
xor
sti
and
outsl
insl
ljmp
nop
loop
subb
roll
andl
js
mov
inc
or
fimull
aad
sub
inc
xchg
mov
rclb
popa
js
call
push
lock
jae
cs
xchg
jmp
pop
scas
rcrl
sbb
test
mov
mov
int3
cmpsl
mov
aas
repnz
aaa
sahf
mov
xlat
inc
inc
mov
inc
jmp
fwait
xor
inc
es
popf
adc
mov
cmc
jno
jne
xor
dec
aad
nop
mov
fwait
inc
push
inc
loop
hlt
xor
enter
rcr
mov
adc
mov
rcr
mov
notl
dec
push
cwtl
leave
sbb
stc
sahf
jg
or
mov
inc
and
cltd
adcl
mov
aam
insb
cltd
cmp
jl
inc
cmp
push
xchg
aad
dec
jg
and
mov
push
mov
xchg
into
push
cli
dec
mov
int3
jg
decl
or
stc
outsb
fsubl
pop
cmp
hlt
or
lcall
leave
pop
jnp
dec
sbbb
out
adc
lcall
push
ja
scas
cmpsb
push
push
adc
push
jne
out
pop
pop
push
dec
shrb
pop
add
cmp
and
mov
push
pop
loop
jne
das
pop
or
inc
push
push
mov
jo
xchg
sub
movsl
in
mov
fisttps
sub
inc
aam
dec
mov
hlt
hlt
das
adc
repz
push
outsb
ljmp
mov
movsb
scas
xor
insl
push
or
jns
out
mov
test
xor
pusha
dec
out
das
stos
lods
or
out
sbb
xor
mov
jae
cwtl
jns
lea
call
test
rorb
out
pop
or
lret
js
mov
mov
loop
cmpsb
testb
enter
and
int3
addr16
dec
call
inc
xchg
push
dec
adc
adc
js
or
mov
loop
dec
sarb
iret
imul
add
lret
ja
jmp
mov
nop
mov
xor
jbe
shrb
cld
fs
and
pop
aas
sub
cmp
stos
pop
add
xchg
pop
addl
jae
inc
jno
sub
icebp
test
test
les
pushf
fistps
add
xor
fcom
lret
enter
cmpsl
bound
or
jb
mov
movb
push
cli
cld
adc
xor
mov
mov
or
fimull
mov
lea
aaa
int3
and
sbbb
gs
xchg
sti
scas
int
or
push
pop
sub
test
jns
test
fucom
xchg
cmp
popf
ljmp
imul
jo
push
cwtl
rcl
push
dec
aad
aad
push
ja
negl
or
jp
mov
sbb
pusha
ljmp
mov
test
out
and
lret
pop
movl
push
mov
lock
in
popf
xor
push
sbb
std
mov
add
ds
xchg
mov
hlt
mov
sbbb
push
adc
jg
xlat
sbb
addb
xor
stc
add
mov
jle
dec
push
aaa
sbb
jp
fistl
mov
jne
pop
push
out
or
out
add
jmp
out
lds
and
cmp
inc
push
sbb
int
xor
pop
hlt
popf
test
dec
leave
loopne
out
and
xchg
xchg
outsb
jbe
mov
push
lret
or
mov
outsb
insb
cmp
enter
les
mov
inc
cmp
mov
daa
nop
call
xchg
insb
pop
xor
ret
jno
adc
loopne
inc
aad
scas
lcall
pusha
dec
inc
adc
sbb
pop
adc
dec
cmpsl
xchg
sbb
aad
sbb
pop
xor
mov
or
mov
sbb
sub
cmc
fisttpl
inc
lret
mov
push
push
out
adc
sbb
and
or
push
push
aas
mov
push
add
adc
sub
jmp
xor
pop
cwtl
fisttpl
mov
cmp
stos
mov
jo
xorl
loop
sbb
jo
pop
test
jns
or
jl
test
cmp
or
mov
jp
movsl
imul
leave
les
xor
mov
cs
xor
fnop
ljmp
mov
ss
stc
ret
rcl
ds
in
pusha
hlt
push
sub
rol
jb
mov
subb
sub
mov
adc
mov
idivl
jnp
mov
or
cld
filds
mov
mov
gs
add
mov
sub
sub
rorb
fxch
cmp
fisubrs
adc
xor
clc
mov
icebp
das
aas
mov
add
sarb
mov
or
int
leave
xchg
sbb
addr16
sarl
lds
stos
jnp
es
mov
aam
ja
orb
push
ljmp
push
inc
popa
ljmp
pushf
ss
movsb
cld
cmp
iret
les
push
mov
inc
jbe
xchg
fwait
add
in
adc
in
bound
or
dec
jecxz
sub
mov
or
cmp
xchg
jns,pt
dec
aad
and
imul
mov
dec
inc
test
mov
sub
bound
in
ret
mov
aad
in
adc
fisttps
add
stos
lret
les
pop
leave
xchg
mov
lods
push
mov
push
mov
mov
test
push
inc
cmp
and
sub
and
and
outsl
cmp
addb
scas
popa
pop
xlat
mov
fisttpl
dec
adc
test
inc
bnd
mov
inc
cmpsb
push
inc
mov
rcrb
cmp
push
xor
int3
push
pop
icebp
jnp
leave
mov
xchg
orb
push
push
add
mov
leave
movsb
adc
mov
shll
inc
inc
sbb
imul
push
mov
push
jle
out
lock
call
lods
push
push
std
add
arpl
int
dec
inc
int
cmpsb
sbb
mov
sub
inc
fwait
jnp
outsb
clc
mov
js
lret
rcll
shl
pop
out
push
adc
sahf
cmp
fidivrs
jmp
cmp
mov
adcl
push
and
dec
mov
push
imul
add
out
movsl
xchg
in
arpl
je
fwait
incb
sahf
sub
sahf
pushf
and
adc
in
mov
mov
enter
pop
add
sahf
repnz
cmpsl
mov
jg
rcr
mov
out
sub
shl
push
mov
push
add
rol
int3
loope
pusha
lret
mov
mov
test
movsl
shlb
xchg
lret
jg
shlb
loope
fcomps
fnop
sbb
pop
mov
lahf
lahf
pop
pop
scas
into
aas
mov
inc
xorb
add
jmp
movsb
inc
jmp
cltd
pushf
sbb
mov
das
or
and
push
scas
sbb
sub
outsl
outsb
mov
lcall
adc
mov
xor
xor
sarl
inc
xor
and
dec
inc
fidivrl
das
adc
jb
fdiv
lock
insb
ss
dec
int
rcll
cmp
faddl
cmpsb
and
test
or
addl
inc
sbb
mov
ss
push
std
dec
sbb
inc
adc
shll
incb
mov
in
pop
cmpsb
inc
addr16
int
ret
leave
push
pop
push
out
push
add
mov
stc
stos
or
sbb
stos
fnop
imul
mov
jle
lret
jl
jmp
and
call
mov
out
mov
inc
sub
insl
cmpsb
cmp
jl
mov
xorl
mov
push
lret
leave
ret
sub
sub
sbb
push
jp
push
push
inc
mov
or
xchg
lds
iret
sbb
test
jno
cmpsb
pop
sbb
xchg
sub
out
das
pop
pop
into
in
and
jns
ss
pop
xchg
je
popf
les
sahf
icebp
xor
hlt
in
ret
xor
mov
jl
cmp
cmc
dec
push
fiaddl
cld
cmc
gs
sahf
push
sub
dec
sub
das
imulb
push
mov
insl
mov
push
adc
push
push
in
mov
cwtl
and
and
fs
push
mov
les
mov
nop
insb
test
sbb
mov
mov
icebp
pushl
cwtl
xor
insl
cld
insb
xor
sub
cwtl
add
pop
lds
push
stc
xchg
nop
test
scas
inc
addb
push
dec
in
add
cmpsl
sbb
mov
rcr
mov
data16
jge
jl
shll
jmp
adc
jne
add
aas
xor
add
fstpt
xchg
fsubs
lret
push
addr16
lock
and
sbbl
sub
shlb
push
or
cwtl
xchg
scas
cmp
je
xor
outsl
push
repz
fwait
push
xor
lcall
xlat
dec
loop
jg
insl
xlat
cld
cltd
xor
add
or
bound
inc
cmp
lock
mov
pop
movsl
popf
ret
outsb
dec
mov
adc
cs
in
in
andl
jmp
pop
cmpsb
inc
fiaddl
and
ret
loop
push
faddp
fsubs
pop
popa
lret
fcmovbe
sbb
fstp
rcll
adcl
arpl
pusha
push
mov
adc
xor
mov
sahf
xchg
int3
mov
loope
cmp
push
sarb
aam
mov
jo
sti
loopne
mov
sarl
inc
and
out
xchg
test
mov
and
test
sub
cwtl
or
sahf
ds
xchg
outsl
insl
ljmp
push
cmp
mov
jmp
pushf
xchg
cmp
sub
push
pushf
push
fwait
mov
sbb
filds
mov
scas
dec
cmc
test
push
mov
lods
push
xor
aad
pushf
fcmovnbe
lahf
lret
lret
and
xchg
add
ljmp
xor
popf
mov
adc
int3
call
mov
jb
xchg
sub
out
je
fisttpll
fs
cmp
add
and
cmp
in
push
rcrb
lahf
xorb
imul
cmp
xchg
inc
aam
sub
or
adc
loopne
lock
mov
lock
jno
push
fwait
and
call
out
inc
push
pop
stos
or
popf
mov
imul
dec
jle
pop
or
mov
mov
push
adc
addr16
mov
or
push
cli
mov
out
dec
je
cmp
rcrb
push
dec
test
mov
cmp
cmp
lea
ret
movl
push
lea
jle
pushl
pusha
mov
push
pusha
pushl
ret
jns
jo
push
ss
ljmp
aad
jae
xor
stos
xor
jp
sub
sbb
lea
mov
fs
cli
and
mov
inc
out
jne
movsb
mov
fcom
push
popa
in
jns
mov
cs
es
jge
stc
lock
into
mov
xor
dec
icebp
and
dec
jge
mov
and
mov
movl
mov
pushf
lea
jmp
jmp
nop
push
scas
popl
repnz
or
shrb
movsb
xchg
push
xchg
lds
ret
push
cmp
inc
xchg
ret
push
call
mov
insb
shlb
gs
mov
push
pop
push
repz
mov
rcrl
ds
mov
scas
cmpsb
sbb
jg
mov
aam
into
and
cmp
add
mov
and
mov
call
xor
and
pushf
bts
mov
lea
shl
add
not
inc
bt
mov
stc
pusha
cmp
test
pushf
lea
je
test
cmp
sub
pushf
cmc
movb
cmp
call
call
pusha
jmp
sti
mov
jns
mov
pop
push
sub
push
les
jb
add
lret
subb
mov
pop
inc
jb
out
lahf
sar
clc
out
enter
mov
push
in
or
mov
inc
movsl
in
pop
outsb
sahf
int
int3
addr16
ja
adc
mov
or
imul
stos
nop
pop
and
lock
les
cmp
inc
hlt
jno
mov
mov
pop
cmpsb
push
je
jbe
cmp
inc
pop
lahf
movsbw
cwtl
mov
bswap
lea
lea
pusha
call
call
inc
jg
pop
sbb
cmp
inc
push
out
sbb
mov
fildl
insl
lea
fldenv
jge
in
or
inc
leave
xchg
sub
mov
aas
in
sub
adc
ja
fcmovnb
cwtl
inc
push
cli
dec
jne
mov
mov
std
in
call
mov
adc
or
adc
lret
inc
stos
sub
pop
popl
xchg
jl
inc
inc
out
sbbl
test
mov
cmp
dec
je
inc
add
into
jmp
mov
xchg
mov
or
ds
mov
stos
sub
repz
jl
inc
push
mov
aaa
sub
jb
arpl
pop
xchg
dec
loope
clc
cs
sub
int3
mov
inc
pushf
add
push
aam
out
testl
adc
push
add
add
xchg
lea
insb
inc
jmp
xchg
movsl
sahf
aad
std
push
movsl
fcomp
enter
iret
add
ret
sarl
pop
jo
scas
inc
xor
xchg
repz
jle
jnp
jmp
cli
mov
fwait
pop
mov
pop
fstpt
or
cmc
mov
sub
pop
cmp
and
in
xor
xor
cmp
push
insb
subb
jae
jmp
cmpsl
mov
and
push
push
mov
into
dec
js
xor
dec
cld
aad
pushf
push
add
mov
aas
enter
pop
xchg
mull
imul
into
inc
xchg
sub
inc
std
cmovo
popf
jb
push
or
pop
sbb
cli
and
sub
mov
or
fists
in
pop
xchg
xor
pop
mov
pavgw
cmp
dec
jp
cmp
push
mov
jmp
fs
cs
dec
bnd
jnp
ret
gs
clc
lds
into
push
pop
mov
or
loop
idivb
fimull
dec
sbb
mov
and
aam
mov
fldenv
data16
je
mov
cltd
mov
adcl
cs
and
ror
mov
test
add
mov
inc
mov
sbb
cwtl
shll
push
pop
repnz
test
das
push
ret
dec
out
ret
add
in
mov
and
addb
mov
inc
jg
pop
or
adc
pop
imul
gs
popa
jno
into
lret
imul
or
jmp
push
in
xlat
inc
outsl
out
mov
add
jmp
and
movsl
sbb
pusha
lods
adcl
enter
push
sbb
jo
cmp
int3
psubusw
ret
xor
and
push
mov
or
jne
push
cmp
xor
dec
jno
adcl
fisubl
dec
or
rorb
mov
push
ror
cwtl
cmp
xor
hlt
sub
cmp
testb
sbb
inc
adc
push
enter
cmp
rcl
cmp
movb
pusha
pushl
ret
movzbw
lea
mov
call
and
cmc
aam
sbb
pop
mov
pop
out
mov
in
pop
fidivs
xchg
add
push
jb
insb
clc
xchg
ljmp
inc
jns
mov
ljmp
and
cmp
add
int
test
fsubp
in
gs
test
orl
outsl
xor
out
push
cmpsb
call
adc
ja
out
lret
jnp
inc
test
es
sbb
mov
out
cmp
adc
xor
and
stos
push
shlb
inc
xor
or
imull
jnp
popf
pop
cltd
sub
insl
enter
push
cmp
fsubr
cwtl
pop
xchg
ret
or
add
dec
sbb
lcall
lea
pop
mov
pop
outsl
daa
push
and
sub
cmp
jne
stos
mov
add
mov
cld
xor
sub
push
pusha
loopne
xor
ja
push
lret
std
iret
hlt
cli
fmull
push
scas
pop
icebp
repnz
jae
dec
mov
dec
lret
adc
daa
sbb
outsl
addr16
push
mov
stos
out
hlt
cmp
dec
mov
xor
mov
sbb
mov
cmp
nop
out
sub
mov
inc
pop
mov
out
ret
imul
mov
push
mov
push
les
insb
imul
and
adc
adc
or
out
push
aam
ret
sub
or
mov
push
mov
sub
mov
dec
idivl
hlt
icebp
xchg
test
adc
sub
pop
jnp
add
in
lahf
repnz
in
aam
mov
or
add
adc
inc
addl
push
aaa
and
push
mov
lret
fs
out
imul
out
rorl
jmp
pop
mov
sbb
xchg
leave
cmpsb
sbb
int
aad
cs
je
stos
sub
dec
rcrl
push
out
xor
dec
mov
sub
add
sbb
dec
inc
ret
and
out
adc
mov
stos
loope
jne
aas
mov
xchg
fsub
xor
jl
cmp
mov
negb
adc
push
mov
jne
mov
test
sbb
mov
push
jo
fwait
xor
jns
mov
sub
inc
sbb
mov
imul
push
jno
subl
xor
add
jge
mov
addr16
or
in
lds
mov
push
jnp
fildl
lods
xchg
mov
and
lds
loop
adc
call
cmp
mov
fdivr
inc
or
mov
imul
push
mov
jl
xchg
cmp
lods
aad
fidivs
stos
sarl
add
sarb
cmp
pop
mov
sti
and
adc
dec
addr16
fistl
pop
imul
cmp
inc
cmp
cmpsl
incb
mov
addr16
pushf
out
cmp
stos
adc
xchg
aas
das
inc
sub
out
jl
sbb
aad
hlt
xchg
sub
outsb
jo
sub
int
fsub
cli
push
sub
jmp
dec
jecxz
scas
fiadds
jg
sbb
dec
xchg
mov
cmc
pop
inc
mov
cmp
push
shl
imul
aaa
mov
sbb
sub
jge,pn
aam
loope
xchg
notl
xchg
jbe
mov
cmp
mov
pop
cwtl
fists
mov
dec
fnstsw
int
jae
js
push
dec
and
pop
xor
xchg
call
cld
iret
insb
out
add
les
les
outsb
pusha
pop
enter
sahf
adc
jecxz
push
mov
in
sbb
dec
loop
aad
mov
repz
pusha
mov
dec
je
addr16
movl
call
pushf
cmpb
pusha
lea
jne
not
inc
sar
bt
mov
stc
add
cmc
movzwl
pusha
shrd
mov
clc
cmp
add
bt
movb
jmp
movl
pusha
push
push
pushf
lea
jmp
push
movw
call
xor
inc
jmp
push
mov
lock
test
push
cltd
out
fs
rcrl
and
loop
jmp
inc
stc
pop
mov
jne
and
lods
fs
sbbl
jbe
das
pop
cmc
inc
cwtl
mov
adc
outsl
pop
adc
inc
notl
daa
inc
xchg
mov
outsl
or
cmpsb
inc
insb
mov
cmp
xor
movw
movl
mov
pushf
mov
push
movl
pushf
lea
jmp
add
call
add
add
xchg
add
add
add
add
cmp
add
push
sbb
add
add
add
add
add
mov
add
aas
add
adc
add
add
add
add
push
pushl
lea
call
jmp
pop
adc
and
pop
popa
jl
jnp,pt
aad
mov
dec
adc
fcoml
pop
jp
xchg
dec
mov
dec
xor
xchg
sub
cmc
dec
inc
inc
pop
mov
cwtl
je
out
out
pop
fs
push
push
mov
jns
dec
ljmp
imul
mov
notb
push
cltd
ret
push
push
add
inc
jbe
jo
pop
lret
jns
daa
push
pop
leave
pop
add
jmp
adc
addr16
sbb
push
sbb
lock
fcmovu
fildl
lret
cmp
lods
push
jno
sub
rclb
mov
push
enter
test
sahf
mov
pop
in
jo
popa
lea
mov
sbb
xorb
jl
jmp
add
jb
xchg
cmp
mov
jmp
xor
jg
push
push
insl
or
push
jo
dec
add
fisttps
push
cli
and
mov
jbe
jle
xchg
cmp
je
adc
add
dec
jmp
lods
mov
jl
add
xchg
cwtl
dec
dec
add
rol
sbb
xor
cmp
rcll
ret
jbe
xchg
cmc
push
push
jle
push
shrl
push
or
loopne
lds
mov
pushf
push
cmc
dec
mov
cmp
xor
rorl
cmpsl
out
dec
inc
push
push
pop
jbe
sbb
lahf
xchg
cmpsb
add
jmp
int3
push
das
sbb
sbb
jecxz
sbb
adc
arpl
push
out
pop
push
nop
add
pop
pusha
mov
jmp
repz
out
inc
cmp
fcomps
lods
aad
jb
out
pop
les
enter
xor
insl
sub
xor
repnz
ljmp
jo
aad
rol
call
call
push
mov
cmp
loope
push
jp
mov
into
addr16
xor
or
jae
movsl
sbb
pop
lods
mov
jl
rcl
push
dec
jne
mov
cltd
adc
pusha
lcall
sbb
vpsllw
and
push
scas
inc
and
jae
jle
and
xor
xor
adc
adc
sub
adc
lret
sbb
repnz
mov
fwait
adc
jl
out
fisttpl
fs
cmp
sbb
call
int3
xor
pop
cvttps2pi
inc
add
shrl
cs
adc
lds
jns
and
arpl
jo
mov
in
out
aaa
dec
inc
cli
inc
pop
clc
dec
cmp
lea
sahf
and
scas
mov
jl
or
jno
xor
cmp
inc
push
ljmp
or
movb
push
lret
fiaddl
pushf
test
lods
clc
jecxz
ss
popf
cli
int
mov
jnp
aaa
xchg
add
xor
and
and
xchg
cmpsb
add
imul
inc
ds
stos
pop
push
pusha
cmpsl
nop
xor
and
movsb
mov
lcall
adc
and
into
das
mov
and
lea
gs
mov
jae
das
outsb
inc
cwtl
xchg
pop
pop
not
cmpsb
imul
xchg
mov
jae
mov
fsubs
mov
dec
outsl
adc
fisubl
push
mov
mov
enter
push
jge
inc
xchg
inc
jmp
loopne
rcll
divb
out
fwait
out
cld
mov
jne
dec
add
or
mov
out
sbb
stos
repnz
xchg
outsb
pusha
enter
rol
sub
scas
jno
lcall
mov
bswap
fistpl
inc
xor
out
or
stc
pop
push
dec
inc
cmp
mov
stc
fdivl
mov
testl
sub
pop
mov
xchg
stos
xor
ds
sub
xlat
test
xchg
mov
int3
es
imul
pop
jae
pop
cltd
hlt
xchg
cmpsb
mov
lock
mov
dec
popf
test
mov
cmp
lds
xchg
mov
push
lcall
cwtl
movl
movzbl
lea
call
call
jb
addr16
outsl
movb
out
std
mov
pop
and
add
sbb
mov
xorl
js
rclb
mov
mov
out
sbb
pop
sub
push
out
mov
shr
dec
cwtl
adcl
aaa
push
rcr
xor
xor
test
xor
iret
mov
sbb
fistpll
ja
push
dec
das
sub
dec
insb
jle
pusha
movb
lea
jbe
add
bswap
cmp
sub
bts
sbb
mov
btr
or
shl
movsbw
mov
shl
movzbw
add
pusha
xor
shr
shl
sbb
inc
mov
sar
rcr
add
pusha
movsbw
mov
lea
pushf
call
dec
fldenv
dec
xlat
jo
dec
ftst
loopne
addr16
inc
jp
sub
xchg
mov
scas
test
into
push
andb
roll
insb
pop
dec
lods
dec
dec
cwtl
adc
and
lret
push
sub
inc
mov
mull
xchg
cwtl
movsb
mov
sti
test
ret
clc
lods
sbb
mov
fildl
adc
push
icebp
inc
lods
adc
or
cmp
test
pushl
inc
stc
rol
stc
clc
mov
pushf
push
call
mov
sub
insb
repz
or
fdivrl
mov
lret
jo
jmp
ret
pop
mov
dec
push
cmp
stos
add
aad
ja
pop
aaa
cmp
sbb
push
outsb
push
in
sarb
fwait
jge
aad
dec
movsl
fld1
loop
jl
rolb
xor
cmp
mull
cwtl
daa
push
sub
fidivrl
jl
mov
lods
fildl
adc
shll
repnz
and
in
sub
movsb
in
int
sbb
inc
in
adc
push
movsl
jmp
das
and
subl
push
negb
je
int3
sbb
lcall
cmp
fdivl
adcb
gs
xchg
lea
add
adc
xor
pop
add
daa
outsb
fildll
cmp
in
mov
insl
sbb
sub
pop
rclb
sub
xchg
adc
cmp
lea
and
call
repz
push
mov
pusha
mov
movl
pushf
movl
push
lea
jmp
cld
repnz
into
scas
sbb
cmp
xor
mov
ds
push
xchg
movsb
out
lock
dec
lock
les
lods
in
jecxz
lcall
cmpsl
frstor
addr16
loopne
out
scas
mov
das
add
lock
jae
cs
dec
loopne
fbstp
and
scas
cmp
add
pushf
lea
je
mov
movzbw
mov
call
adc
mov
lea
jae
jnp
pushf
pushf
pushf
lea
jne
call
cmp
cmp
mov
mov
jg
shrl
nop
fldt
test
lahf
stos
mov
andb
aaa
push
adc
jb
jnp
fcompl
mov
mov
in
out
mov
jne
mov
out
js
sbbb
aas
sub
jns
xlat
lods
dec
ja
icebp
aad
in
pop
test
stos
cmp
mov
aas
xorb
test
add
jmp
sbb
mov
es
repnz
jbe
adc
sbb
jg
mull
cmc
inc
mov
jno
cmp
or
out
sti
bt
xor
mov
test
cmpb
jmp
mov
adc
pusha
pusha
pushf
lea
call
pusha
movb
lea
jb
pusha
movl
mov
pushl
ret
stc
imul
mov
test
add
push
pusha
pushl
lea
jmp
sbb
repz
decl
cmp
loop
jo
sub
cmp
daa
push
add
outsb
movsb
add
cld
xlat
leave
cmc
ficoms
jmp
add
xchg
mov
leave
and
sbb
mov
stos
out
xor
out
mov
out
cmc
mov
insl
in
aas
in
std
sahf
sarb
xor
sbb
xchg
mov
xchg
ficoms
sub
lods
or
out
cmp
arpl
xor
mov
cmp
push
sbb
hlt
call
rcrb
mov
test
shl
call
mov
mov
xor
aam
test
add
sub
fwait
jne
jno
mov
stos
stos
push
nop
push
xchg
jp
fldenv
pop
in
add
jg
div
mov
dec
adc
xchg
test
sarb
pop
and
lea
int3
daa
cmpsl
and
imul
addr16
inc
int3
imul
ret
nop
aaa
lidtl
ljmp
dec
outsb
cmp
dec
bound
mov
adc
jmp
pushl
call
lea
ja
not
jle
inc
inc
inc
pushf
inc
lea
jno
inc
setle
neg
xchg
lea
das
mov
or
mov
jmp
jmp
dec
scas
aad
and
jb
and
cmp
div
lock
push
or
dec
adc
xchg
clc
push
data16
fiaddl
in
sarl
lea
mov
cmpsl
loopne
add
pop
lret
sub
std
fdiv
mov
jmp
aad
repnz
push
xor
mov
sbb
cmp
push
in
jmp
loope
mov
mov
dec
xchg
stos
push
lea
jbe
bts
mov
and
test
btc
add
xadd
mov
rol
btc
add
ror
cmp
movl
sar
mov
cmp
test
call
pusha
call
mulb
loopne
imul
mov
inc
pop
std
push
push
movsl
fs
in
pop
loop
mov
adc
stc
push
add
mov
xchg
pop
aad
add
xor
sub
imul
aam
mov
dec
lret
push
stc
popa
push
jmp
les
gs
das
addr16
sbb
lock
push
and
sbbl
inc
sub
daa
loopne
mov
sub
popf
adc
sbb
xor
mov
add
ret
rcrl
cmp
mov
cmp
jle
mov
mov
mov
lea
jmp
dec
cmp
movl
neg
cmc
jmp
pusha
mov
lods
call
jmp
cmpl
jl
pusha
mov
jno
punpcklbw
out
sbb
dec
movsl
jae
lods
push
lahf
loop
std
ds
mov
mov
aad
test
or
pop
cmpb
sbb
add
sbb
lods
cmp
sbb
pop
das
or
and
inc
xchg
std
cmpsb
sbb
lahf
fisttpl
or
clc
jecxz
lea
xor
imul
add
dec
gs
jns
push
bsf
adc
mov
rcl
sub
rol
lea
ror
shrd
push
shl
push
cwtl
push
shl
setb
push
test
rcl
mov
bt
test
call
pushf
mov
cwtl
pusha
pushl
popl
not
mov
movzbl
not
not
cwtl
movl
cwtl
lea
push
pushf
movl
lea
jae
pusha
pushl
popl
pushf
pushf
pushf
pushf
pushl
ret
mov
movl
call
jbe
cmp
adc
imul
ret
addb
cld
js
shll
orb
jmp
scas
jo
imul
dec
pop
pusha
mov
jo
mov
sbb
popa
add
scas
sbb
jle
outsb
push
and
dec
icebp
jne
cmp
mov
cmp
xchg
rorl
xchg
xor
dec
jo
ret
mov
fs
leave
mov
aaa
mov
adc
cltd
cmp
in
pusha
and
stos
daa
inc
pusha
jo
mov
lahf
fidivl
add
in
jo
ja
cmp
fsubrp
stos
jo
out
xor
xchg
xchg
icebp
scas
popa
sub
loopne
pop
jo
ss
dec
mov
loop
shll
xor
jo
adcl
clc
jo
cmp
mov
in
enter
push
xchg
push
ljmp
inc
dec
sti
push
pushf
imul
push
lret
push
push
jo
sub
je
in
lret
mov
insb
sub
std
popf
jo
mov
das
push
jb
jo
shll
in
sbbl
sub
adc
int
jo
mov
mov
popa
aaa
imul
rcrl
mov
das
pop
stos
push
jo
mulb
jo
adc
mov
sbbb
subl
movsb
js
call
mov
push
scas
in
lahf
movb
mov
or
outsb
repz
shr
sti
das
dec
jo
out
push
jnp
add
insl
and
dec
ljmp
ret
add
test
jo
cmp
sub
stos
pop
lcall
xchg
adc
inc
test
je
scas
or
ficoms
out
insb
ja
jl,pn
je
dec
out
jg
push
lea
pop
mov
add
shll
cmp
adc
pop
add
shll
jle
js,pn
std
cmp
push
cmp
jp
js
pop
mov
mov
mov
mov
jp
std
fs
push
sub
sub
dec
insl
adc
lods
push
loopne
fwait
pop
cs
sub
jo
mov
jae
cmp
aaa
in
jns
ss
test
adc
mov
hlt
xor
add
ja
jecxz
cmp
xchg
xchg
jno
jp
jl
mov
dec
xor
push
mov
shrb
fsubrl
fcoml
fxam
call
nop
fsubr
mov
xchg
pop
aam
sub
dec
lods
mov
push
sbb
js
dec
inc
ja
and
insl
or
pop
pop
cmp
outsl
aaa
bound
xchg
leave
or
loopne
addr16
imul
and
jbe
mov
cmp
mov
jp
data16
mov
xor
push
jl
mov
daa
mov
and
addr16
inc
test
in
and
jg
xchg
fwait
enter
jb
jne
add
cld
data16
int3
loope
gs
in
repnz
aas
sarl
and
imul
mov
jbe
cmp
inc
sbb
fs
mov
push
mov
sbb
cmp
repnz
mov
pop
frstor
hlt
in
jl
pop
pop
lock
aaa
int
jbe
int
ret
xchg
aam
push
mov
cld
lcall
and
bound
xor
mov
sti
mov
inc
lahf
adc
ljmp
lock
cmp
out
aaa
xorb
or
mov
cmp
pop
mov
jle
repz
jb
jg
jg
cmp
imul
dec
push
inc
inc
xchg
sar
adc
pop
fisttpl
push
jo
pop
call
std
adc
lcall
mov
add
addr16
lret
mov
push
repz
pop
push
mov
imul
out
mov
std
push
aas
sub
lret
jge
ja
out
sahf
data16
fld1
das
mov
movsb
jbe
xor
cmpsl
jecxz
mov
bound
pop
arpl
out
jg
fs
mov
idivl
and
arpl
mov
ret
cmp
in
jb
push
mov
rcrb
movsb
or
and
stos
dec
add
shll
xlat
adc
arpl
or
lea
out
stos
pop
add
shll
out
stos
pop
add
shll
xlat
nop
stos
dec
add
shll
out
stos
jb
pop
shlb
out
mov
cmp
and
and
insl
cmp
das
jp
dec
xor
inc
jo
xor
cmpsb
cmp
adc
jmp
outsb
cmp
loop
jle
or
mov
sub
inc
shlb
jecxz
sarl
inc
out
lahf
outsb
mov
cmpsl
outsl
dec
cmp
stos
and
sub
dec
jns
iret
pop
outsb
gs
jge
mov
pushl
jle
mov
fadds
negl
mov
arpl
or
out
dec
imull
mov
xor
jno
pop
mov
add
in
inc
shl
icebp
inc
jle
imul
nop
jo
popf
imul
outsb
push
mov
addr16
popa
cmpsl
stos
and
cmp
jb
cmpsl
pop
xor
nop
sti
insl
ja
movsb
lahf
push
mov
addr16
hlt
jno
jne
bound
addr16
push
outsb
jg
repz
and
ja
jbe
outsb
and
sub
mov
in
mov
sub
jecxz
jecxz,pn
and
sub
dec
leave
fs
js
outsb
push
ja
jle
outsb
push
push
outsb
outsb
mov
dec
lods
imul
mov
push
popa
shll
pusha
imul
xorb
adc
lahf
movsb
pop
mov
ja
jl
dec
lahf
xchg
std
insl
sub
and
cltd
lods
insl
sub
mov
and
arpl
mov
and
lods
jb
and
dec
xchg
pop
mov
and
call
add
rclb
pop
mov
and
popa
mov
and
mov
fstpt
mov
std
je
in
inc
jnp
aad
mov
jp
fs
xor
push
mov
dec
loop
push
es
rep
data16
push
insl
data16
fs
shrb
std
stc
gs
xchg
popa
dec
fnstenv
add
inc
inc
cmp
cmp
sub
mov
mov
mov
in
fistl
xorl
mov
or
outsl
in
mov
cld
sti
clc
jns
mov
pop
jnp
mov
or
ljmp
fsubs
loop
cmpb
pop
out
jmp
mov
in
loopne
imul
push
and
dec
out
out
push
bound
inc
jle
sub
insl
iret
mov
cmp
incl
lea
sahf
mov
add
xchg
mov
jl
aad
insl
hlt
shr
jg
mov
mov
ds
insb
fadds
jne
lds
ds
cltd
ret
stos
mov
sti
cmp
roll
cmp
fdivrl
push
fisubrl
jl,pt
aas
sti
mov
xchg
icebp
decl
fs
imulb
jl
pop
mov
pop
xor
ds
add
inc
std
or
mov
or
dec
insb
push
popa
and
and
jnp,pn
jl
pop
jl
jge
iret
jle
insl
ds
popf
lcall
aas
out
scas
inc
aas
jno
xchg
rorb
push
mov
bound
lock
adc
insb
inc
xchg
aas
subb
test
sub
cwtl
movsw
inc
xorb
mov
lods
cmp
jmp
jecxz
in
lret
add
or
leave
mov
fnstenv
ljmp
lcall
insb
aas
inc
mov
mov
cmc
fidivrl
mov
push
inc
fsubrl
mov
jl
adc
pop
cmp
jge
or
push
push
push
mov
jnp
mov
push
call
aas
shrl
imul
push
pusha
jnp
jns
stc
mov
adc
iret
and
xor
cld
call
dec
es
movb
or
jns
je
sub
mov
xor
mov
std
and
dec
fs
add
jg
mov
sbb
je
mov
out
cmp
inc
push
fldt
jp
jl
jge
dec
jno
and
xor
fs
ja
jmp
lods
sarl
inc
jl
test
pop
daa
test
mov
fs
jg
stc
cmp
jp
and
jecxz
jg
adcb
mov
cmp
ret
jnp
pusha
arpl
int3
int
sysret
mov
loop
pop
xchg
adc
inc
pushf
push
and
and
mov
incl
cmpb
inc
adc
jnp
push
sub
data16
pop
jge
and
dec
repnz
xchg
sbb
data16
pop
dec
pop
pop
inc
xor
imul
adc
test
jne
out
leave
ss
push
sbb
pop
fldt
shrb
aas
es
push
mov
int3
cld
cmp
lret
into
jo
xchg
jae
mov
lea
mov
cmp
jle
pop
jl
push
mov
sbb
in
gs
mov
and
insb
jecxz
mov
cltd
sub
or
test
mov
jo
sub
and
outsb
xchg
xor
add
mov
sub
movsl
subl
imul
aas
mov
mov
test
add
daa
fs
adc
and
inc
andl
and
loop
add
pushf
jle
cmpsl
arpl
mov
sub
or
jbe
in
xchg
sub
fs
out
sub
bound
dec
or
nop
inc
loop
fdivl
cmpsb
and
arpl
push
fldcw
lods
or
dec
pop
sub
in
sbb
dec
cltd
daa
dec
mov
and
leave
out
or
add
push
cmpsl
and
outsb
arpl
inc
sbb
int3
fsts
jns
call
pop
imul
inc
shll
dec
imul
add
xor
data16
repnz
ja
and
int3
sbbl
pop
ja
jecxz
fstpl
out
daa
sbb
cmp
jnp
dec
ljmp
in
xor
push
sbb
sub
push
dec
jmp
imul
int3
outsl
mov
test
dec
outsb
pop
jmp
or
and
and
jge
enter
dec
mov
pop
pop
insb
mov
push
cmp
xor
gs
int
fldcw
cmp
sbb
mov
xchg
movb
pop
xor
out
rorl
jle
ljmp
jl
imul
fcmovnbe
or
jns
jcxz
js
push
daa
dec
ja
call
inc
nop
adc
jmp
je
jmp
out
jp
push
ljmp
dec
pop
imul
testb
push
cltd
insb
xchg
mov
pop
mov
in
bound
imul
fildl
sbbl
fimuls
fwait
xor
dec
dec
inc
sbb
inc
aad
inc
jne
fs
inc
and
jmp
int
ja
sti
or
std
negb
inc
loop
pop
fcoms
jmp
jl
pop
jmp
daa
stos
pop
imul
fldt
jbe
and
mov
push
jmp
int
pop
and
pop
push
cltd
imul
imul
std
push
and
push
in
arpl
call
inc
push
dec
fnsave
jmp
xchg
cld
xor
and
lods
bound
mov
loopne
cld
and
xor
xchg
aad
arpl
jg
sub
pop
and
andl
and
sarb
and
data16
in
aad
mov
in
and
out
pop
mov
fisubrl
jecxz
cld
in
mov
jae
daa
mov
fdivr
lock
jo
cmp
loop
data16
pop
mov
jmp
ds
in
repz
aaa
std
sbb
test
mov
repz
fmuls
mov
and
jae
cmp
add
and
cwtl
in
push
cld
inc
and
loop
dec
mov
lods
cmpsb
fildl
test
das
shlb
int3
mov
and
sub
inc
iret
stos
repz
dec
mov
dec
popa
cltd
jae
jl
mov
mov
or
dec
or
aam
movsl
lds
dec
mov
push
cs
jnp
mov
mov
cmp
jg
in
mov
sahf
mov
insb
sub
and
and
sub
cmp
jp
mov
mov
add
cmp
jne
mov
jnp
push
imul
inc
xor
imul
outsb
bound
inc
jnp
psadbw
cltd
and
push
cs
cmpsb
imul
sub
insl
push
cmp
aas
push
pop
std
push
lods
psubq
push
mov
fs
into
pop
and
in
jae
jo
cmp
sbb
es
imul
jno
in
push
push
sub
and
sub
sub
scas
sub
sub
aas
push
stos
cmp
jne
and
outsb
jle
lods
mov
packsswb
outsb
cmp
push
mov
subb
mov
test
lret
dec
out
imul
int3
push
outsb
mov
insl
inc
dec
fs
mov
jne,pn
fs
les
andl
push
xchg
inc
outsb
pop
sub
insl
lods
sbbb
inc
jl
lea
lods
in
stos
je
inc
insb
push
xor
outsb
mov
outsl
pop
das
push
out
repz
and
cs
mov
insl
pop
sub
and
int3
mov
imul
ljmp
int3
mov
imul
and
leave
sbb
mov
outsb
testl
inc
cmpsl
inc
arpl
jnp
mov
mov
xlat
mov
sub
cmpsl
inc
mov
xlat
mov
sub
cmpsl
inc
mov
xlat
mov
sub
cmpsl
inc
mov
xlat
mov
sub
outsb
sub
movhps
out
mov
daa
ja
push
scas
jp
je
xor
imul
jle
jae
loop
sub
out
or
adc
inc
arpl
adc
mov
pop
andb
jae
mov
inc
xor
lods
jns
sub
das
out
arpl
cmp
jl
dec
xor
or
cmp
addr16
xorl
lea
push
pop
and
inc
xor
cmp
jl
pop
repz
cmp
mov
mov
sub
add
ss
xchg
push
add
push
jmp
and
insl
mov
imul
cmovbe
sub
push
adc
in
jae
jle
ds
jl
add
insb
shrb
repnz
jge
aas
mov
lods
adc
arpl
mov
jl
mov
hlt
and
adc
adc
and
ss
hlt
mov
loopne
jg
pop
in
sbb
mov
out
or
ljmp
dec
hlt
mov
cmp
loopne
mov
xor
mov
sub
outsb
push
mov
jle
and
cli
bound
push
out
xchg
fs
mov
xor
push
test
fs
fsubs
js
pop
loop
bound
into
in
insb
mov
jae
mov
cmp
and
clc
xor
xor
fnstsw
insl
popf
icebp
int3
dec
insl
cmc
sti
inc
dec
push
insb
std
pushl
jle
sbb
dec
loopne
xor
mov
js
ss
pop
imul
repnz
insb
in
addr16
mov
clc
int
in
push
sar
push
lock
loope
insb
insb
cmp
jne
ds
aam
daa
iret
jbe
test
movsb
mov
stos
xor
and
mov
outsb
dec
add
cmp
jno
jo
xor
mov
out
inc
mov
cmp
lods
and
cmpsl
enter
lea
aaa
push
and
fstpt
push
mov
icebp
mov
xchg
xchg
mov
mov
dec
mov
pop
cmp
inc
sub
xor
push
dec
inc
imul
fdivrs
and
jae
insb
in
mov
hlt
or
lds
mov
push
insl
mov
push
mov
dec
jnp
stc
iret
mov
push
xchg
sahf
push
int
mov
jecxz
and
ja
mov
jl
pop
popa
insb
mov
push
jb
push
jle
jge
popf
call
outsb
xchg
jno
inc
jne
in
xor
inc
push
es
ljmp
outsb
in
ss
pop
fs
and
sub
ljmp
jge
fsubs
ja
push
flds
sbb
lea
push
push
cmpsb
inc
mov
push
dec
push
movsb
fcomip
mov
loop
repz
push
xor
cmp
push
dec
out
stos
jbe
or
test
lret
aas
push
scas
pop
xchg
xor
sub
sub
jmp
es
jmp
push
pushf
mov
repz
mov
sub
imul
repnz
jnp
les
push
jg
pop
mov
push
data16
push
outsl
sub
inc
push
iret
pop
mov
mov
mov
insb
fcmovne
and
jle
jns
mov
xchg
jg
repz
loope,pn
cmp
mov
add
pop
sti
jmp
jp
jg
subl
jno
jl
jl
fldenv
lea
xchg
ds
push
jp
jmp
int
test
push
jns
cmp
iret
add
mov
jne
out
cld
aam
mov
cmp
pop
xor
jmp
xchg
mov
pop
cld
test
cli
and
pop
jecxz
mov
fwait
mov
les
cmp
jecxz
pop
pop
or
lahf
daa
data16
insb
ds
popf
xlat
jle
fs
mov
gs
cmp
pushf
icebp
cs
mov
adc
xor
pop
xchg
mov
gs
pushl
adc
ljmp
jl,pt
imul
add
insl
std
jae
ja
ret
sub
mov
daa
lret
insb
lret
jmp
jp
int3
push
dec
xchg
icebp
in
inc
push
test
ljmp
lods
icebp
cs
mov
dec
insb
lret
es
lret
es
pop
andl
jmp
imul
cld
jo
insb
dec
je
insb
popf
imul
lret
insb
scas
stos
mov
push
pop
push
xor
cmc
into
ss
xor
ss
dec
cmp
int
cmp
cmp
icebp
xor
jae
mov
ja
lea
daa
jge
pop
inc
orb
xor
shrb
sub
mov
jnp
mov
enter
mov
xchg
mov
xchg
sub
je
daa
gs
sbb
fadds
test
call
idivb
xlat
cmp
into
insb
pop
outsl
enter
or
imulb
and
mov
rcrl
insb
daa
dec
cwtl
fldt
jno
lret
mov
mov
ss
scas
or
scas
jmp
mov
pop
jp
imul
les
nop
outsl
xchg
cmpsl
sbb
inc
outsl
leave
and
movsb
cmp
xor
jp
xlat
mov
ds
pop
dec
mov
addb
call
mov
iret
insb
mov
inc
ja
imul
lret
dec
sti
mov
sbb
fwait
or
jns
repz
jp
mov
divb
jns
dec
dec
mov
cli
push
jbe
fsub
mov
pop
jb
imul
sub
faddl
inc
mov
dec
cmp
jg
mov
sub
icebp
loope
imul
fwait
shr
imul
mov
test
enter
sub
daa
pop
dec
into
jp
xchg
pusha
movsb
ds
notb
lahf
mov
addr16
pop
sbb
sbb
sub
push
dec
mov
bound
push
test
mov
adc
or
push
ds
daa
shrl
call
mov
dec
daa
nop
xor
leave
inc
stos
insb
adc
mov
popa
mov
dec
loopne
xchg
insb
out
arpl
sub
push
cmp
lahf
mov
popf
jbe
inc
out
jg,pt
pop
outsb
jl
jle
mov
mov
cmp
xor
push
pop
sti
push
xor
test
xorl
add
or
or
cmpsb
loop
rcll
int3
imul
call
mov
je
movsb
adc
cmp
mov
ds
mov
imul
adc
enter
jnp
add
daa
loope
arpl
cmp
or
dec
cmp
imul
data16
call
aaa
out
jl
push
mov
sahf
adc
and
lods
push
ja
adc
inc
or
jno
cltd
cmp
xchg
in
xor
inc
addr16
ja
outsb
mov
xchg
mov
shl
mov
cmc
dec
adc
mov
movsb
dec
lods
push
cld
mov
dec
testl
pop
jp
push
xor
nop
cmp
mov
push
push
mov
pop
aaa
jb
mov
xchg
jo
or
dec
lahf
dec
push
jl
imul
sub
insl
leave
testl
or
xor
dec
mov
mov
dec
pop
or
xor
in
daa
gs
mov
sbb
lcall
cs
aas
fisubl
fs
jns
aaa
stc
mov
pop
jl
repnz
pop
jns
sbb
inc
mov
cmp
js
mov
sub
loope
lret
and
mov
fistpl
ds
addr16
ja
xlat
sub
mov
mov
loopne
dec
dec
jnp
mov
xor
and
jbe
dec
imul
pop
xor
xor
fisttpl
lcall
add
jmp
insb
enter
mov
ds
xbegin
pop
fcomip
mov
gs
popa
mov
cs
add
out
out
repnz
pop
push
mov
push
loop
mov
int3
cmpsl
and
inc
sahf
cmpsl
jecxz
mov
repz
mov
and
fs
and
and
mov
and
imul
mov
xlat
mov
sub
cmpsl
inc
mov
jb
adc
xlat
mov
sub
cmpsl
inc
mov
jb
adc
xlat
mov
adc
cmpsl
inc
mov
jb
adc
xlat
mov
sub
xchg
inc
mov
jb
adc
xlat
mov
sub
cmpsl
rcrb
mov
sub
or
jge
cltd
jns
imul
mov
xor
in
ja
mov
gs
adc
dec
sub
insb
call
nop
cmp
pusha
and
pop
enter
mov
jb
outsl
sti
sub
push
jb
jp
in
xor
aas
sti
pop
mov
mov
std
pop
inc
lea
mov
inc
movsl
in
fs
jne
mov
inc
xchg
fstpl
xor
inc
mov
fsubr
or
cmp
jb
and
mov
jnp
fbstp
xor
loop
pop
shl
std
cmc
out
stos
push
mov
xchg
ds
in
addl
in
jae
mov
push
cld
cmp
mov
ljmp
dec
xor
pop
mov
pop
adcb
cmp
mov
loope
jg
popa
inc
out
gs
insl
push
push
or
pop
cs
jmp
addr16
fs
pop
jp
push
cmpb
cmp
out
jg
roll
jmp
cmpsl
cmp
outsb
dec
dec
aas
add
outsb
pusha
stc
xor
xor
js
addl
inc
jno
pop
dec
dec
mov
in
dec
dec
imulb
mov
lahf
sub
out
mov
addb
fwait
imul
negl
outsb
sub
pop
add
pop
fcoms
jecxz
dec
addr16
jle
or
and
stos
mov
sub
inc
jl
imul
loopne
outsb
addr16
jb
imul
out
aad
cmp
lea
in
inc
and
dec
add
mov
jns
dec
repnz
xor
incl
jns
imul
push
mov
punpcklwd
jae
popa
mov
ja
in
xor
mov
jl
pop
sub
pop
fnstsw
ljmp
sub
cs
pop
test
and
pop
mov
bound
jae
inc
popf
jbe
push
insl
pushf
jnp
pusha
arpl
insb
push
ret
sub
imul
inc
jle
out
push
jae
in
xor
xor
dec
adc
mov
cmpsl
dec
push
push
addb
jle
sub
mov
int
jl
sub
out
and
push
dec
jle
outsl
push
pop
cmp
or
bound
lods
sub
jp
push
lds
test
enter
cltd
imul
jle
out
and
mov
jb
xchg
adc
sbbl
and
lahf
lods
jp
out
das
mov
ja
mov
sub
push
out
cltd
xchg
cmp
fs
adc
popa
into
je
adc
insb
orl
push
addl
shlb
mov
into
xor
das
push
ret
inc
shlb
jmp
pop
aad
stc
cmp
cmpsb
inc
lahf
popa
inc
jo
jns
sub
mov
push
dec
scas
jle
push
lret
xor
scas
mov
icebp
adc
pop
enter
jo
addr16
ret
xor
jmp
xorb
or
sub
fisubrs
popf
sub
gs
insb
push
rorb
aam
pop
pop
push
pusha
jmp
addr16
jle
or
fs
cmp
mov
insb
jl
dec
jecxz
cs
addr16
jle
dec
rorl
out
xchg
jmp
addr16
jle
or
out
jg
in
push
rorl
cmp
xor
mov
jnp
cmc
push
push
leave
jmp
out
js,pt
sub
push
in
std
push
insb
ja
jbe,pn
or
push
or
cli
out
mov
adc
fs
dec
out
icebp
push
loop
lret
push
jg,pn
les
out
dec
and
mov
pop
sub
pop
cs
or
out
jg
push
push
repz
addr16
decb
jecxz
ss
sub
cs
or
out
jg
testb
sub
leave
ret
cmp
push
gs
or
mov
sub
cmp
dec
js
scas
jl
cs
push
push
fdivr
out
rorb
sub
push
out
jp
ja
loope
subl
inc
arpl
jle
jp
push
sbb
jo
dec
cmp
cmp
adc
je
pusha
inc
bound
cmp
sub
scas
popa
xor
xchg
push
loop
jge
jne
sub
in
push
bound
adc
je
jo
es
icebp
lret
inc
and
inc
mov
repnz
add
scas
mov
cmp
mov
sub
test
clc
stc
xor
das
pop
xchg
bound
or
pop
inc
jnp
insb
dec
shll
jo
ja
mov
push
jb
jge
mov
push
adc
test
shlb
call
fcoms
fstl
test
sbb
jo
mov
jnp
jne
jo
pop
xor
fildll
mov
sub
jo
xchg
mov
add
xor
ss
movsl
pop
jmp
xchg
gs
stos
jo
inc
sahf
adc
addl
je,pn
xor
enter
fiadds
sub
cltd
xchg
subb
test
mov
dec
push
mov
in
hlt
pop
xor
push
or
inc
jmp
stos
jl
loopne
in
cld
outsl
xor
in
sbb
and
insb
shll
or
lods
shll
add
pop
cltd
jo
ret
push
repnz
jae
shlb
test
jl
inc
fcomi
ja
movsl
lahf
xor
or
jo
jne
ds
jbe
out
adc
push
xor
adc
stc
test
pop
pusha
movq
out
xchg
pusha
jne
inc
xchg
scas
push
icebp
nop
add
dec
std
pop
pop
bound
cmp
je
stos
jo
in
push
in
cmp
mov
sbb
addr16
inc
frstor
bound
jo
hlt
mov
or
pop
andb
jl
in
cltd
sahf
jo
and
lods
pusha
imul
xor
aam
pop
fs
repz
test
pop
lret
int
ljmp
scas
and
or
mov
je
ret
push
jo
dec
pop
cmpsl
movsl
adc
cltd
mov
mov
sbb
pcmpgtb
mov
shll
pop
jo
sub
stos
test
add
mov
insb
stos
adc
jmp
pop
dec
fs
popa
imul
clc
hlt
xchg
or
cmpsl
mov
sbb
and
fildll
push
bound
stc
mov
ljmp
xlat
xchg
and
subl
dec
jnp
repz
mov
imul
jbe
inc
push
xor
scas
xor
fidivs
and
push
ficompl
jg
arpl
jecxz
imul
xor
mov
inc
mov
ret
call
call
hlt
sub
inc
pop
test
cmpl
cs
mov
xor
inc
movsl
dec
ret
fs
out
inc
pop
lods
xlat
daa
testb
loope
or
cmp
push
in
jae
mov
out
dec
mov
adc
jne
mov
inc
xor
and
adc
test
adc
es
subl
imul
xor
iret
dec
cmc
addb
or
pop
out
sbb
pop
aaa
cs
nop
jo
xchg
pop
mov
das
inc
or
push
add
jg
push
test
pop
push
sub
mov
in
and
mov
and
jo
inc
js
add
ljmp
add
testl
rcr
and
cmp
scas
lret
call
sub
das
leave
incl
jo
mov
sub
jo
es
enter
bound
dec
in
or
xor
mov
push
fdivl
jo
iret
lock
mov
cmp
pop
jl
std
jns
jo
inc
or
fnsave
xor
scas
sbb
add
fidivl
mov
or
aam
insl
xor
imul
add
int3
or
inc
or
adc
out
das
shll
fsts
les
push
pop
icebp
loopne
push
pushf
pop
or
pop
pop
xchg
test
arpl
divb
int
lea
test
add
ja
test
out
ror
xchg
aam
inc
add
push
add
adc
mov
andl
out
push
jl
mov
xlat
sub
jns
mov
fxch
xchg
std
lds
sbb
dec
pusha
dec
das
push
imul
pop
add
jo
popf
jge
mov
push
repnz
jae
cwtl
jo
rcr
push
mov
xorb
js
cltd
movsl
fs
scas
pop
outsb
xor
cmp
fdivp
scas
add
cmp
fistps
xor
jo
insb
and
lret
scas
mov
loope
xor
push
jl
xor
aam
xchg
lods
pop
in
subb
test
gs
jl
pop
mov
jo
xchg
cmp
push
sub
and
jns
loope
jg
xchg
jo
loopne
push
test
aam
add
out
dec
xor
adc
push
negb
repnz
lock
inc
aam
imul
jmp
add
inc
sbb
loopne
lahf
jo
xchg
dec
lods
xor
imul
or
push
push
int
addr16
in
outsb
xchg
cmp
test
out
jge
adc
jne
vandpd
shlb
pusha
adc
addl
ljmp
cmpsb
cld
mov
jo
pop
add
inc
in
lock
dec
mov
jnp
sub
cmp
xor
ja
fs
inc
lea
jb
jo
inc
mov
cltd
andl
stc
xor
sbb
adc
in
jb
or
jo
std
fstl
and
lock
sub
dec
adc
sub
stos
insl
jo
fcomi
pop
loopne
sahf
jno
jge
inc
fs
push
ja
cmp
fsubrl
aaa
in
cmp
xor
pop
andb
pop
push
scas
xchg
lea
sbb
clc
rcrl
jbe
jp
jo,pn
inc
into
stos
adc
iret
shrb
aad
and
mov
pop
nop
test
sub
mov
sbb
ss
mov
insb
cld
rcl
inc
ret
jg
int3
pop
loopne
movsl
scas
popa
subl
cmp
jo
cli
arpl
sbb
ljmp
jbe
dec
push
jo
out
mov
jecxz
dec
xchg
xchg
nop
xor
cmp
jns
inc
ljmp
cmc
testb
gs
mov
iret
push
jo
pop
cmp
cwtl
add
sub
add
jnp
jge
mov
movsl
xchg
dec
test
jns
sub
lock
fsubs
pop
aam
mov
out
fwait
add
loop
add
inc
sub
leave
pop
mov
jo
or
lret
test
mov
xor
ds
bound
cmp
and
subl
lods
xchg
mov
jo
icebp
and
scas
adc
inc
inc
push
jb
lods
add
xlat
popf
push
inc
scas
mov
inc
inc
shrl
inc
std
stos
sbb
ret
dec
lods
das
push
add
cmp
enter
fsubs
sbbl
adc
xchg
push
push
dec
jae
fdivs
loopne
lcall
inc
scas
stc
push
sub
jge
sbb
jecxz
push
mov
or
jo
sub
jns
xor
test
xchg
shll
imul
mov
add
jo
pop
inc
inc
incb
shrb
jmp
mov
cmp
jo
cs
shl
mov
mov
sbb
fsubrp
inc
out
out
push
shlb
cmp
ret
jo
jge
pop
sti
and
jo
filds
stc
push
repnz
cmp
add
sbb
shlb
nop
sub
pop
out
jo
filds
popa
repz
imulb
xchg
sbb
pop
cmp
jo
scas
pusha
fstps
sub
adc
add
mov
sub
jo
push
lahf
das
add
int
scas
aad
fdivr
fwait
push
sbb
loope
dec
push
push
mov
fisubs
dec
push
push
xor
xor
mov
sarl
pop
cmp
lret
push
in
jo
dec
add
adc
sbb
test
cmc
loop
mov
push
fstpt
jo
icebp
jnp
test
lcall
out
lret
inc
xchg
push
mov
mov
jno
imul
mov
sub
jne
inc
scas
js
add
jns
loope
jo,pn
push
nop
mov
jo
cld
inc
dec
mov
repz
out
mov
shll
jmp
js
inc
fwait
adcl
mov
subb
xchg
sbb
cmp
mov
filds
dec
xchg
pop
stos
push
imul
push
inc
sbb
push
push
sub
inc
dec
or
mov
jmp
push
lock
jo
jmp
notl
roll
ret
xlat
jo
xchg
sub
cltd
adc
lret
sbb
scas
out
sub
insb
mov
add
jo
xor
icebp
jo
leave
outsb
test
nop
shrl
push
push
loop
pusha
fldcw
out
jecxz
subl
pshufw
xchg
xor
inc
push
dec
cmpsl
push
iret
sub
xor
add
cltd
inc
rorb
shrb
rorl
pop
std
outsl
and
clc
xor
push
dec
push
mov
xor
add
loopne
push
cmpl
stc
jo
jle
aad
jo
aas
cmp
cmc
xchg
mov
scas
push
lcall
adc
push
outsl
or
mov
je
outsl
incb
pop
push
fldt
jo
cltd
sahf
cli
inc
push
je
test
mov
jbe
popa
lods
stos
lret
or
pop
jo
mov
mov
jae
movsb
adcl
lods
inc
aaa
add
push
scas
adc
shr
jo
xor
push
ret
in
scas
gs
mov
out
cmp
cmp
clc
xor
push
call
push
and
push
sti
sub
jo
push
push
add
adc
in
jo
pop
push
push
mov
pushf
pop
out
adc
mov
stos
push
dec
jno
cmpsb
sbb
xor
dec
fs
sub
add
push
push
into
pop
scas
xchg
sbb
pop
jmp
jbe
pop
xchg
rclb
push
scas
dec
mov
aad
ljmp
int3
and
adcb
inc
loopne
xchg
xchg
pop
cmp
sub
and
jno
xchg
jmp
shrl
sbb
xorl
lds
icebp
insl
outsb
pop
xchg
aad
fnstsw
xchg
fucomp
pusha
mov
and
cli
dec
dec
stos
les
cwtl
in
jno
enter
add
adc
cmp
cli
and
jmp
add
push
pushf
pusha
lea
jne
push
call
popf
shll
dec
insl
fisttpl
mov
addr16
lret
mov
jns
mov
cmp
divb
xor
aad
inc
flds
mov
push
dec
jbe
or
pusha
sbb
add
mov
add
inc
pop
xor
jnp
clc
test
std
leave
xor
pop
jae
ds
cmpsl
aaa
lods
testb
js
xor
js
test
dec
cmp
loopne
mov
jae
loopne
or
pusha
jmp
xor
mov
stos
call
jns
push
xchg
sbb
stc
pop
pop
adc
shlb
xor
fdivrs
repnz
mov
addb
outsb
push
arpl
mov
inc
sti
sbb
or
pop
call
fwait
test
cli
push
mov
xor
xchg
outsl
pop
sbb
ror
sub
dec
pop
fs
dec
cmp
xlat
fisubrs
and
push
mov
aam
cltd
dec
xlat
xchg
adc
cwtl
mov
mov
and
sub
ljmp
mov
fmulp
jns
mov
test
xor
pop
mov
icebp
push
mov
je
push
xor
in
aam
lahf
push
popf
add
dec
xor
repnz
lods
sbb
sub
fldenv
addr16
test
loop
mov
adcb
jb
push
sub
stos
dec
mov
sbb
pushf
cmp
and
imul
xor
call
adc
cltd
push
lea
sahf
aad
mov
jg
out
dec
mov
mov
or
xchg
aam
fisttps
cmc
in
dec
mov
dec
mov
arpl
or
push
in
adc
in
sahf
roll
cmp
scas
je
sub
cmp
and
fs
call
js
pusha
adc
push
movb
jmp
or
jmp
je
nop
xchg
lcall
std
cmp
cmp
pop
xchg
in
dec
xchg
arpl
push
mov
mov
mov
xchg
jne
sbb
mov
cmp
es
clc
nop
jno
rcrb
imul
repz
or
enter
stos
push
pop
mov
inc
adc
rcrl
test
push
scas
scas
jnp
or
pusha
aad
test
sub
push
mov
out
xchg
lret
cmp
sbb
je
inc
push
inc
push
dec
xor
cs
insb
add
test
add
pushf
lea
bswap
lea
lea
not
mov
mov
mov
movzwl
mov
lea
push
push
movsbw
mov
call
pop
cmc
add
ja
add
pop
outsb
jg
cmp
xor
clc
dec
cmp
fsubl
cmpsb
decb
sub
aam
in
pop
loope
notl
lods
adc
or
scas
dec
push
gs
pop
pop
movsl
jbe
call
fisubrs
sub
lea
push
lret
test
pop
cltd
mov
lds
mov
jnp
jg
pop
cmp
fistps
push
test
fwait
std
or
lock
sbb
stc
fisubl
pop
xor
sub
jmp
jle
hlt
mov
push
in
cmp
int
lock
mov
mov
jle
out
hlt
mov
mov
pop
or
mov
jmp
sbb
enter
movsb
subl
dec
jge
pushf
rorl
mov
and
aad
cmpl
add
in
imul
push
push
in
cmc
pop
cmp
mov
xor
test
outsb
add
add
dec
adc
push
dec
je
and
les
push
into
scas
adc
sti
mov
inc
cmp
addr16
xchg
jns
dec
sahf
pop
xchg
or
nop
not
push
subb
sub
in
cmp
testb
rol
dec
mov
sub
bnd
les
mov
adc
mov
andl
and
adc
push
and
mov
pushf
test
pop
push
sub
jae
inc
shl
xchg
dec
jg
cmpsl
jne
jns
mov
cmpl
popf
push
pushf
pushf
pusha
call
lea
mov
push
mov
pushf
call
fwait
jecxz
repz
ror
jne
popa
xchg
into
aaa
push
mov
xchg
movsb
sbb
sti
sbb
scas
add
and
incb
adc
int
pop
js
std
jns
les
jnp
jle
adc
pcmpeqd
push
jno
aaa
std
jb
in
xor
or
sbb
add
pop
loopne
inc
mov
ret
pop
fst
jbe
sbb
mov
add
inc
js
je
jb
arpl
jae
mov
pushf
mov
pusha
lea
jmp
lea
je
js
mov
call
dec
addl
add
add
sbb
add
add
rolb
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
push
add
addl
add
add
sub
push
add
addl
add
add
xor
inc
add
add
inc
add
add
mov
add
sub
lea
push
inc
lea
je
pushf
movl
lea
call
call
call
movl
jmp
jnp
dec
sti
fnstsw
in
mov
pop
mov
lret
lods
aas
faddl
sub
jnp
lea
faddl
in
call
cmpsb
jo
loopne,pt
jae
mov
jmp
loop
out
push
inc
jg
add
sbbl
pop
out
jge
fidivs
pop
popa
out
fnstsw
jge
fwait
lret
sti
jg
je
sub
out
out
fs
dec
inc
push
aam
jnp
imul
orb
sahf
inc
cmp
mov
mov
hlt
stc
pop
iret
pop
test
lcall
bound
pusha
shll
fldcw
and
andl
ret
and
or
mov
jl
push
xor
xchg
mov
mov
inc
shrl
add
fbstp
jae
mul
and
sub
add
jmp
dec
xor
popf
stos
pushf
lea
jmp
pusha
movw
mov
mov
pushl
mov
mov
call
inc
js
mov
jmp
outsl
and
xor
add
mov
arpl
mov
out
or
ss
shlb
cmp
jmp
sub
sbb
std
jae
jmp
test
out
or
cmp
push
pop
xor
fld
inc
and
pushf
lea
jne
push
lea
jg
push
lea
call
pushf
movb
mov
pusha
lea
jmp
mov
push
xchg
movb
pusha
pushl
popl
lea
lea
pushf
mov
mov
movzbw
cwtl
pushf
pushl
movl
push
pushf
not
lea
call
pushfw
shl
inc
rcl
dec
mov
test
pushf
pushf
neg
cmc
call
lea
call
jmp
cmp
cmp
cmp
push
cmp
bt
mov
pusha
sub
push
push
rep
movzbl
mov
push
push
lea
jmp
inc
sti
les
and
mov
sub
mov
or
inc
js
dec
jo
lods
lods
fmull
aam
stc
test
jns
sbb
sbb
cmp
adc
out
shlb
jo
xchg
sbb
push
mov
jl
add
imul
fwait
jmp
sahf
xor
inc
nop
or
hlt
jns
dec
testb
mov
cmp
arpl
jmp
call
add
add
xchg
add
add
add
add
cmp
add
push
sbb
add
add
add
add
add
mov
add
aas
add
adc
add
add
add
add
jl
frstor
add
push
es
pop
loope
mov
or
in
mov
mov
mov
xlat
sbb
xchg
inc
inc
jne
cli
inc
imul
push
inc
pushf
sub
fimull
or
xchg
insl
lret
jg
cli
push
push
test
stos
sub
cmp
jae
cmpsl
flds
pop
xor
aas
clc
adc
and
gs
stos
fiadds
or
cmpsb
push
mov
cld
mov
xchg
loope
pop
test
push
fsincos
cmp
push
push
mov
decl
fwait
rorb
aam
int3
into
lea
jmp
movl
push
lea
jmp
movzbl
sbb
mov
rcl
adc
pusha
shl
mov
lea
rcl
add
xor
sar
mov
stc
mov
push
bt
mov
mov
neg
pusha
not
call
add
aas
pop
dec
outsl
arpl
aas
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
push
inc
inc
pop
pop
pop
add
addr16
jmp
inc
and
fwait
adc
xchg
add
add
in
hlt
add
stc
ror
mov
push
jmp
lods
bt
bt
neg
cmc
rol
pushf
jmp
push
push
inc
push
dec
cs
dec
dec
add
roll
mov
negb
clc
sub
jmp
stos
mov
lea
jmp
cmpsl
aas
mov
inc
iret
xchg
and
add
cmpsb
xor
js
loopne
mov
push
sbb
mov
adc
adc
and
or
int
or
outsb
lock
jbe
loope
xchg
mov
fld
xchg
loopne
pop
jnp
pop
sahf
mov
jg
lock
sbbw
sub
jge
scas
jae
rdtsc
sub
push
test
push
cmp
test
loop
lods
ret
or
push
adc
or
lds
lcall
xor
fsubp
cvtdq2ps
adc
loopne
insb
ret
xor
sub
jae
mov
lahf
inc
adc
inc
mov
shlb
mov
not
mov
xlat
xor
inc
icebp
add
mov
push
push
sub
or
dec
push
mov
in
dec
cmp
cmp
jl
insl
jno
jae
xchg
dec
js
pushf
inc
mov
inc
sti
es
imul
dec
sbb
lahf
outsl
aad
jmp
int
mov
pop
cmp
fsubrl
cld
outsl
mov
aad
add
pop
mov
sbb
fadd
into
dec
jecxz
mov
push
arpl
xorl
lea
jns
and
sub
into
pushf
jle
mov
jecxz
imul
mov
sub
dec
sub
sub
and
inc
mov
sbb
in
js
inc
sbb
jae
adc
and
push
cmp
lcall
in
ret
cltd
rorb
sti
inc
scas
call
leave
mov
mov
pop
iret
subl
cmp
into
bound
xor
into
pop
sbb
popa
mov
xchg
ss
xor
mov
cli
jecxz
or
int
dec
pop
into
popf
sbb
dec
jmp
xor
sbb
dec
sub
push
mov
xchg
cmp
shrl
add
jp
xchg
or
inc
jp
into
popf
dec
push
xchg
jl
scas
mov
cmp
or
mov
cs
dec
fsts
jo
out
cmpsl
sub
adc
xchg
sbb
jb
jne
sub
test
into
pushf
ja
jecxz
sub
cli
cmp
push
jbe
pushf
jmp
pop
mov
jno
mov
jmp
adc
lret
jle
dec
js
inc
adc
jmp
xchg
or
dec
rolb
dec
xor
lret
je
ror
scas
mov
and
mov
sti
jbe
push
fldcw
in
inc
fisubrs
dec
sub
arpl
fld
lods
push
push
push
mov
cmc
int3
or
mov
lods
push
jge
sbbl
mov
pusha
ret
push
jnp
inc
cltd
ss
lds
lods
incl
incb
rcr
arpl
stc
xor
repz
dec
int3
xchg
insl
xorb
sahf
aas
imul
inc
jle
lock
jecxz
mov
cmpsl
sub
xchg
cmp
fwait
sti
dec
push
push
movsb
xchg
or
das
mov
loope,pt
cmp
sbb
sbb
push
push
cmp
cmpsb
rcll
jmp
jmp
push
in
dec
cmp
xor
imul
stc
push
lods
sbb
lcall
dec
rcll
adc
push
les
cs
insb
cmp
jae
jo
std
push
mov
cs
push
shll
out
scas
push
jns
fistpl
lcall
sti
mov
mov
in
mov
inc
cmp
and
mov
out
sub
jecxz
push
fs
dec
rorl
push
test
test
jo
cli
movsl
shrl
cmp
mov
loopne
loop
sub
cmp
cmp
leave
mov
scas
push
lret
fildl
orb
int
push
mov
push
shll
sbb
mov
push
jecxz
test
cmpsl
xor
sbb
and
clc
lahf
fadds
push
lret
inc
dec
cmp
aas
test
pop
fisttpl
rorl
pushf
out
cmp
sahf
sbb
repz
xchg
enter
sub
repnz
inc
dec
xor
cs
insb
add
pushf
lea
jae
push
jmp
add
pusha
call
pusha
adc
pushf
lea
jae
pushf
mov
lea
jne
pusha
jmp
bound
gs
lds
movsl
das
add
loopne
cmpb
psllw
pusha
int
mov
imul
push
loope
pop
cmp
fcomps
pop
unpckhps
cmp
fdiv
mov
pushf
dec
mov
shl
jmp
pushf
jmp
bt
cmc
jmp
push
pushf
pushl
popl
pushf
pusha
movb
movw
pushl
ret
dec
push
push
inc
push
cmp
cs
insb
add
out
adc
mov
bt
and
pushf
clc
add
lea
call
mov
cmpsb
mov
or
and
push
in
subl
insl
sti
loopne
push
fwait
out
cwtl
out
aad
fisttpl
dec
fwait
mov
push
loopne
dec
outsl
testb
jmp
insl
call
jge
js
pop
cwtl
push
cmp
sbb
or
push
push
cs
stos
jae
sti
or
dec
testb
adc
and
sti
lods
cmpsl
sahf
jecxz
das
jle
ss
lds
mov
dec
sub
push
outsl
pushl
stos
pushl
lea
jmp
push
pushl
popl
pusha
pusha
mov
pushl
ret
stos
and
stos
push
fwait
pop
add
add
mov
mov
jb
dec
into
outsl
push
add
lret
sbb
xor
add
cltd
and
xchg
mov
pop
mov
and
xor
xor
nop
xlat
sub
int
cwtl
mov
movsw
fnstsw
dec
sub
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
or
cmp
fsubs
cwtl
xlat
repnz
cli
adc
subb
ja
or
rcrb
lcall
cmp
push
mov
inc
jg
jecxz
in
jae
or
inc
sub
in
sbb
shll
xlat
sub
mov
mov
mov
and
flds
outsl
test
sub
cmp
push
cmpsb
push
mov
loopne
rcll
push
mov
cld
cmp
sets
lods
adc
daa
ret
cmp
stc
clc
cmp
pushf
call
inc
dec
rcl
neg
call
push
pushf
movl
pushf
pusha
movb
movb
movl
push
lea
jmp
test
call
shl
mov
pushf
call
movl
push
mov
pushf
lea
jmp
bt
stc
clc
repnz
push
pushf
pushf
pushf
lea
jne
dec
sub
mov
shrd
bt
bsr
sub
jmp
lea
je
pusha
pushf
or
call
add
inc
jb
popa
je
inc
outsl
outsb
je
add
mov
stc
mov
pushf
push
lea
call
call
pusha
pushf
pushf
movl
movb
lea
jmp
cmp
call
icebp
cmpsl
repnz
mov
sub
bound
pop
mov
pop
lcall
pop
push
dec
cmp
cmpsb
orl
sbb
pushf
gs
lods
dec
jnp
and
outsb
jbe
xchg
mov
ss
out
cmpsl
lcall
mov
fsts
inc
adcl
add
sbb
enter
xchg
js
test
pop
mov
adc
dec
jecxz
popa
pop
add
test
fdivrs
dec
mov
testl
sub
cmp
sbb
outsb
adc
cmp
push
add
jge
add
call
cmpsl
adc
xor
and
stc
aam
call
push
int3
push
mov
push
shll
ljmp
pusha
pop
scas
iret
or
addb
fwait
or
and
push
xor
mov
lods
test
xchg
push
insb
xlat
and
sbb
test
mov
mov
and
mov
xor
in
hlt
mov
mov
out
out
test
test
loope
jnp
mov
dec
push
push
pop
dec
aad
cmc
aad
and
cmp
es
ret
cld
lods
sbb
dec
push
jbe
lds
push
push
dec
cltd
or
shlb
push
mov
cmp
stos
cltd
lods
enter
inc
frndint
dec
xchg
test
xor
loopne
xchg
mov
add
mov
scas
leave
push
sti
jmp
movsl
sub
and
daa
js
mov
and
lret
jbe
add
scas
orb
std
dec
cld
jp
in
cmpsb
or
sbb
jbe
dec
fldl
rcl
add
aad
hlt
push
ljmp
mov
shlb
xlat
mov
or
loopne
push
and
cmp
imul
jmp
xor
sahf
and
cmp
test
and
pushf
mov
mov
shrd
push
btr
mov
jno
push
bsf
btr
adc
push
dec
rcl
push
sub
rol
or
shrd
push
add
push
sar
push
bts
bsr
mov
btr
sub
bt
mov
test
jmp
mov
mov
adc
jns
or
clc
test
in
mov
cwtl
adc
mov
xchg
cmp
lods
cmpsl
test
lret
out
in
lret
add
xchg
jns
cltd
xchg
sub
repz
mov
pop
push
mov
hlt
mov
stos
aad
add
ss
mov
mov
out
mov
cmp
cltd
les
push
pushf
lea
jne
or
test
shl
mov
pushf
stc
cmp
push
lea
ja
pushf
mov
jmp
setge
mov
jmp
pop
pushf
pusha
call
call
jmp
setno
mov
push
pusha
inc
mov
call
pushf
push
mov
lea
jne
pusha
pop
not
mov
push
push
lea
jmp
mov
pushf
lea
call
jmp
jmp
sub
mov
aaa
roll
and
push
insl
inc
jnp
jmp
and
stc
enter
mov
mov
iret
inc
js
add
subl
cmp
sub
repz
or
or
mov
rolb
scas
cmp
outsb
iret
stc
push
ljmp
or
testb
repnz
lods
mov
out
mov
gs
pop
lods
negl
cmp
outsl
insl
and
int3
clc
jmp
fwait
cmp
pop
add
inc
mov
ss
orl
adc
and
mov
loop
dec
sbb
mov
or
aam
jmp
imul
outsl
jmp
add
adcl
and
jle
sub
mov
or
test
mov
jo
shll
add
cmpsl
lds
leave
loopne
dec
in
ret
rdpmc
adc
add
testb
sbb
in
cmc
and
sub
jns
jge
push
or
push
pop
outsl
fisubs
push
popa
jno
into
ljmp
rorb
or
xor
add
pusha
lea
jmp
shlb
push
out
mov
imul
int3
out
mov
ds
loopne
cwtl
mov
pop
adc
ljmp
je
and
xchg
jl
enter
and
shll
aam
mov
xlat
push
lret
imul
adc
fldenv
cmovge
push
sub
popf
cmp
adcl
int3
lcall
sub
dec
add
xchg
scas
mov
xchg
pop
shrl
or
ret
lods
jbe
fbstp
in
fistps
movb
cmpsl
cs
xor
cmp
arpl
incb
loopne
add
or
add
adc
jmp
aad
ficoms
xchg
clc
mov
inc
sub
push
call
mov
rcrl
pusha
lea
mov
mull
push
mov
call
pushf
stos
mov
into
loop
clc
bound
xchg
lret
call
push
lret
rcr
lods
gs
mov
fwait
popa
mov
or
adc
jno
in
cmp
subb
and
test
call
js
cmp
data16
lcall
adc
stos
and
in
sti
aam
in
test
test
testl
jb
js
pop
insb
testl
cmp
adcl
push
mov
addr16
pop
dec
push
sbb
inc
xchg
mov
adc
data16
andl
in
aam
push
xor
call
pop
stos
jmp
lods
mov
idivl
repnz
test
dec
pop
fcomi
fwait
and
jmp
pop
xchg
xchg
int
gs
daa
mov
sub
lcall
enter
mov
repnz
jmp
push
dec
sbb
cmp
jns
pop
pushf
lea
je
movsbw
movzbl
mov
movsbl
lea
call
lea
ret
or
push
mov
jmp
add
stc
rol
dec
mov
jmp
in
jp
inc
jb
jge
cmp
lret
or
sub
dec
push
int
hlt
xchg
adc
jmp
pushf
cmp
cmp
and
arpl
add
push
into
insb
popf
cwtl
xchg
pusha
pop
jg
inc
or
stos
ljmp
mov
inc
in
loop
xchg
cmp
jae
stc
push
daa
jl
xor
cs
cmpsl
inc
roll
inc
jno
outsl
sahf
aaa
stc
cmp
in
fs
int3
sbb
mov
mov
mov
ss
pop
lods
mov
adc
cmp
dec
mov
mov
jb
pop
lcall
mov
cmp
push
sub
sbb
popa
mov
or
cmp
stos
repnz
and
jno
enter
movsl
clc
sbb
dec
push
dec
fs
pushl
popl
mov
pushl
ret
pop
lret
dec
pop
repz
stc
cmc
or
xchg
sbb
out
xchg
aad
mov
mov
mov
and
mov
cmp
cmp
pop
aam
mov
adc
js
addr16
stos
out
xchg
mov
mov
lods
aas
jle
and
enter
mov
js
mov
pop
addb
es
jecxz
sbb
mov
incl
icebp
repz
aad
push
xchg
mov
clc
test
out
cmp
sbb
in
ret
dec
scas
in
call
stos
cmp
xchg
jae
jb
outsb
je
inc
add
sarb
adc
int3
repz
ffree
mov
out
push
and
hlt
mov
adc
push
out
dec
loop
nop
stos
es
das
ficoml
fidivs
or
sbb
adc
leave
inc
mov
pop
std
mov
pop
scas
add
stos
dec
test
xchg
shrb
add
xchg
sub
cmc
mov
xor
inc
ljmp
or
cmp
pop
repz
cmp
push
mov
movb
pushf
push
xchg
movsbw
movl
jmp
mov
lea
inc
je
sarl
jne
pop
xor
add
scas
sub
sbb
or
xchg
hlt
cld
shl
aaa
sbb
in
int3
pop
pop
nop
dec
in
push
pop
sahf
sub
stos
ljmp
rep
jo
mov
clc
dec
mov
dec
pop
push
xchg
mov
sub
andl
dec
sbb
imul
xchg
jg
decl
mov
sub
shl
sbb
movsbw
ror
add
lea
push
ror
neg
mov
xor
shl
neg
call
aad
ret
cmpsl
push
or
jg
and
in
dec
jecxz
mull
in
stos
push
shrb
sub
fsubrl
and
and
xor
cmp
pop
lret
inc
jae
dec
sbb
hlt
stos
outsb
lods
inc
shlb
sub
sub
mov
mov
or
in
xchg
sbb
inc
sbb
push
movb
call
xchg
sbb
and
rcll
outsl
inc
cwtl
outsb
adc
add
dec
push
xlat
jmp
mov
jmp
imul
addr16
jne
cltd
push
push
xchg
dec
xor
stos
mov
xor
lcall
stos
mov
mov
pop
call
cmc
jmp
lock
enter
in
dec
bound
in
push
std
mull
add
xchg
jmp
lea
jae
pushf
pushl
pushf
xor
pushf
pushl
lea
call
jmp
call
lcall
xor
bound
jecxz
scas
inc
sbb
cmpsl
arpl
testl
ret
in
mov
mov
cmp
mov
rcrl
pushf
jbe
jne
rclb
mov
ret
test
xor
shr
dec
add
stc
gs
or
push
out
cmp
mov
cmp
test
bt
push
or
call
mov
adc
mov
sub
clc
add
in
and
daa
push
repz
insb
jl
add
cld
mov
out
add
adc
lods
cmc
inc
jge
hlt
jmp
and
call
arpl
bound
mov
cs
mov
sarb
mov
ds
into
sbb
jae
mov
jmp
mov
fisubl
pushf
fildl
negb
pushf
jle
sub
lea
sbb
adc
lock
mov
push
jmp
jmp
bswap
mov
movsbw
pop
pusha
mov
pusha
mov
pushf
movw
pushl
ret
mov
mov
lret
rcrb
cmp
loopne
dec
inc
dec
jne
xchg
jne
sahf
adc
pop
std
mov
rcrb
int
aaa
mov
es
push
repz
sahf
jecxz
xchg
ss
in
rorb
xchg
cmpsb
inc
jg
loop
sbb
jecxz
in
outsb
add
add
pushf
aam
dec
sbb
mov
pop
pop
loope
sub
jecxz
cmp
push
js
adc
pop
out
cltd
pop
jb
data16
mov
pushf
add
xchg
push
push
nop
dec
sahf
xor
fs
pop
cltd
sbb
push
jp
jmp
popa
clc
movsb
add
xor
movsb
and
cs
or
mov
sbbl
mov
clc
outsl
jg
mov
sbb
pop
sbb
sub
movl
mov
pushf
bsf
rcrb
scas
sbb
or
inc
sbb
jge
call
add
loope
mov
gs
jp
or
pop
shlb
nop
adc
test
adc
mov
xor
or
sti
mov
xor
push
xor
mov
std
leave
cmpsl
sti
mov
adc
or
add
inc
das
shrd
add
les
adc
xchg
fnsave
sbb
cmp
adc
jecxz
pop
cmp
dec
cmp
call
cld
inc
test
and
mov
sub
fmull
or
adc
adc
std
out
iret
int
rcrl
int3
arpl
xchg
sub
jge
push
dec
loop
hlt
push
int3
in
sar
lods
lret
mov
pop
out
cmp
add
xchg
loop
test
jle
pop
inc
in
cli
cmp
xlat
out
inc
scas
ss
push
push
add
pop
ror
push
pop
inc
test
pop
enter
jmp
mov
sbb
fildll
les
iret
sub
pop
je
pushf
jg
insb
and
loope
push
cs
fs
jge
lret
subb
xor
das
xor
mov
into
and
in
pop
xor
js
outsl
icebp
jo
sub
jecxz
cmpsb
mov
push
fimuls
test
and
aaa
mov
mov
dec
pop
inc
pop
in
int3
inc
xor
outsl
ret
cmpsl
ss
mov
jns
and
sbb
pop
iret
das
sub
pop
mov
add
jl
and
add
inc
jle
outsl
add
loop
adc
mov
std
orl
out
fdivr
push
mov
push
aad
mov
push
cmp
mov
bound
lcall
lea
inc
aad
dec
push
mov
movsl
test
pushf
push
call
mov
push
xor
js
jp
sbb
repz
dec
movsb
push
sahf
or
add
sub
ss
fnstcw
inc
js
fs
jmp
cltd
pop
orb
sub
dec
cmp
pop
xchg
repnz
push
push
rorb
and
repnz
xor
pop
mov
pop
out
cs
stos
adc
mov
roll
andl
dec
iret
movsbw
mov
movb
mov
call
icebp
xchg
xchg
fwait
int
cwtl
stc
dec
pop
dec
inc
ljmp
and
repnz
push
mov
loopne
std
push
outsb
jno
mov
sbb
pop
sti
xchg
out
pop
inc
add
push
push
xor
pop
mov
lods
imul
mov
es
dec
call
and
int
sbb
int
addr16
sub
dec
or
cmp
or
cmp
lods
fidivl
push
cmp
mov
decl
sub
jnp
imul
arpl
iret
push
jmp
js
cmp
inc
mov
pusha
lea
mov
aaa
sub
addr16
adc
in
testb
push
dec
pop
lods
test
jno
jb
test
imul
ja
push
and
pushf
in
mov
fimuls
jae
push
adc
loopne
dec
loopne
insl
push
loop
sub
negb
xchg
gs
cmp
rcll
jo
testb
xchg
out
scas
jbe
std
add
push
pusha
fbstp
jne
and
push
jle
push
mov
xor
add
ficomps
js
test
mov
mov
dec
out
iret
mov
das
mov
push
xor
out
js
movsb
mov
popa
scas
testb
jo
jbe
jl
imul
xor
nop
and
jecxz
insb
jl
add
jbe
xchg
pusha
cmc
add
int
dec
fiadds
add
sub
add
and
outsl
mov
popf
scas
lea
or
pop
out
dec
sbb
ror
scas
pop
dec
out
repnz
lods
adc
jb
ror
push
and
fistl
fiaddl
add
scas
int
out
sub
fildll
pop
dec
jmp
fwait
pop
push
jmp
ja
push
sbb
int
clc
push
fwait
dec
mov
xchg
push
cmp
aad
jle
jae
loopne
js
scas
jbe
mov
das
mov
cmpsl
std
jne
hlt
lods
push
loop
outsb
inc
sub
or
in
mov
stos
xchg
pop
mov
movb
xchg
push
xchg
ret
pop
xor
inc
sbb
jmp
xchg
pop
out
js
sbb
or
out
pop
adcb
nop
cmp
rcrb
jo
inc
sub
js
pop
jmp
out
fsubrl
push
daa
dec
addr16
jle
cmp
loope
outsl
mul
jne
push
test
pop
xchg
adc
adc
cmp
jo
bound
and
jno
data16
push
and
js
adc
rcr
out
lahf
inc
lret
movsl
push
int
push
iret
mov
cmpsb
loop
dec
fcomi
scas
das
mov
fcompl
dec
push
dec
jg
repnz
scas
jbe
daa
pop
stc
jl
xor
adc
adc
clc
int
leave
lea
pop
xor
bound
inc
xor
mov
push
bound
add
stos
orb
mov
push
gs
adc
cmp
iret
mov
jmp
out
jg
imul
jl
insl
adc
jnp
daa
repnz
inc
adc
insb
push
js
orb
scas
jbe
jecxz
iret
push
mov
xor
xor
push
adc
jo
arpl
pushl
dec
jle
xor
aas
mov
ficomps
in
lods
push
jnp
insb
in
les
pusha
and
push
xchg
cwtl
jae
and
js
cmp
cs
test
jo
push
out
jecxz
jl
movsl
push
dec
cs
push
into
pop
push
in
shrb
imul
cmp
cmpb
aam
js
dec
shlb
jge
int
xchg
ffreep
push
pop
icebp
or
pop
push
cmp
dec
push
out
cmpb
or
mov
cmp
add
test
push
sub
jg
js
inc
ficomps
push
push
insb
dec
shlb
push
sahf
call
sahf
cmp
call
scas
ret
lret
jmp
outsb
and
mov
das
jge
pop
stos
and
push
les
jl
jp
aas
adc
ljmp
dec
mov
in
rorb
je
iret
and
mov
push
xor
pop
and
jl
pop
and
or
dec
jns
xor
push
mov
pop
daa
inc
pop
in
mov
jno
repnz
nop
xchg
in
insb
daa
mov
inc
mov
mov
add
mulb
sbb
xor
dec
jp
dec
dec
pop
or
test
scas
stc
stos
outsb
sub
and
out
dec
test
inc
push
iret
mov
jnp
imul
jp
xchg
arpl
lcall
sub
gs
shlb
out
test
pop
outsl
fwait
mov
sub
arpl
sub
cld
mov
cmp
shlb
and
test
dec
pop
imul
xchg
pop
or
dec
push
sahf
push
cbtw
in
repnz
and
lret
jo
mov
loopne
jmp
sti
mov
aas
sub
jecxz
insb
and
dec
push
in
dec
push
cmp
js
in
or
jg
insb
insb
jno
xor
cmp
arpl
cwtl
ds
inc
inc
push
subb
mov
pop
out
aad
jo
push
shlb
adc
div
aas
in
rorl
dec
je
push
daa
push
xlat
jo
and
js
add
imul
repnz
sub
lea
xchg
in
fcmovnu
dec
aad
fldcw
scas
sbb
test
cs
in
sub
and
insl
dec
in
ss
lods
mov
push
mov
push
js
pop
int3
loop
aaa
xchg
sbb
cmp
or
subb
jle
or
jmp
out
sub
int3
gs
jbe
mov
imul
dec
fsubl
call
mov
movsl
or
dec
mov
jbe
sbb
mov
xor
cmpl
jmp
addr16
dec
out
push
jne
cmp
imul
aas
or
lahf
insb
and
push
add
and
xchg
and
sbb
add
adc
sub
add
addr16
mov
push
push
lock
pop
jge
imul
mov
dec
push
lahf
mov
jge
adc
jmp
outsl
out
scas
push
enter
lahf
notl
cmp
addr16
adc
push
sbb
fistpl
outsl
arpl
pxor
mov
and
push
xchg
mov
ret
negl
adc
mov
or
xor
std
pushf
dec
adc
aaa
jle
jl
enter
les
sub
jne
jg
scas
test
jne
js
mov
jl
push
push
jmp
jnp
mov
ret
xor
outsl
fistpl
or
insl
cmp
rorl
popw
add
std
pop
jmp
fistl
shrb
jmp
mov
push
dec
aaa
cmp
cld
je
es
sti
xchg
int3
jle
dec
push
ljmp
dec
dec
jecxz
adc
les
call
popa
mov
aaa
outsb
fs
lcall
dec
push
call
mov
aam
dec
gs
js
insb
shll
push
push
test
push
sahf
subb
or
push
push
mov
add
test
es
movsb
ret
les
aad
lahf
jno
sub
xlat
andl
add
sbb
sub
out
pop
add
push
jp
mov
xchg
jmp
insl
adc
push
rep
test
rcrb
pop
or
push
pop
push
inc
lods
jle
add
test
jo
push
hlt
js
sbb
pop
cs
add
insb
imul
aas
push
mov
popa
pop
push
jbe
std
repz
cmpsl
jg
insb
insl
fs
lea
jmp
pop
inc
lcall
dec
sar
mov
mov
inc
push
lret
mov
jbe
lock
test
xchg
cmpsb
cmc
adc
lods
repnz
subb
add
lds
adc
push
xor
adc
dec
jmp
out
adc
pop
push
jns
outsl
adc
jbe
cmc
loopne
stc
inc
loopne
enter
fildll
mov
dec
fldcw
into
push
sbb
dec
cmc
push
jb
out
jl
jo
jbe
xor
fld
mov
mov
stos
call
push
mov
mulb
addr16
inc
mov
mov
pusha
dec
push
xchg
mov
pop
in
fdiv
ljmpw
or
cmpsb
daa
imul
lods
idivb
mov
push
xor
jo
or
push
adc
insl
sub
fstpt
outsl
adc
arpl
fists
inc
movsl
je
int
push
push
imul
pextrw
push
call
push
adcb
cmp
stos
lea
inc
inc
adc
sub
imul
and
cmpl
orb
mov
pop
sbb
jo
subb
push
repz
out
in
in
mov
xchg
adc
outsl
xchg
sub
daa
pop
cli
xor
xchg
mov
dec
std
cmp
xlat
mov
ja
shll
and
movsb
scas
call
xor
adc
out
daa
fwait
mov
jecxz
mov
mov
add
insl
jmp
push
mov
cmp
pop
push
jnp
xchg
mov
aas
mov
mov
fimuls
mov
jmp
push
outsb
xor
xchg
xor
test
scas
sti
mov
inc
jle
es
negb
test
pop
push
mov
leave
pop
mov
js
jg
arpl
cltd
inc
dec
push
ds
pusha
movl
sbb
js
imul
mov
push
das
push
push
andl
push
scas
add
jnp
aas
pushf
call
adc
nop
dec
sub
cs
lcall
dec
mov
jmp
push
dec
je
mov
dec
lea
push
arpl
mov
scas
daa
mov
or
cmpb
push
xchg
std
push
push
inc
movsb
dec
in
mov
in
sub
rcrb
outsl
sbb
fbld
inc
cmc
jmp
subl
lret
popa
dec
dec
jns
mov
jp
xlat
fistl
mov
cmpsb
das
or
dec
or
push
orl
hlt
xlat
lods
sldt
sbb
rcrb
xor
jo
mov
add
gs
add
pusha
inc
cmp
out
mov
ljmp
pop
and
pushf
lock
in
out
mov
out
push
jmp
stos
pop
loope
cli
push
and
pushf
test
mov
adc
lcall
lock
ja
insl
loopne
push
daa
ret
sti
js
pushl
jge
sub
insb
mov
and
cmp
imull
pop
js
fcomps
dec
xor
jbe
push
inc
push
or
mov
into
mov
movlpd
data16
pop
xchg
leave
testb
js
jge
push
add
xor
dec
insl
push
and
or
jbe
in
add
lcall
outsb
add
stos
testb
testl
mov
jnp
dec
inc
pop
dec
in
jbe
cs
add
bnd
mov
ja
testl
arpl
pop
jo
xor
fmull
daa
jle
xor
in
out
lods
ds
jle
sub
scas
lret
callw
sbb
test
xor
push
ret
aaa
outsb
push
sub
lret
inc
out
je
mov
insl
ret
popa
fdivrl
adc
dec
into
ss
test
push
ja
dec
test
outsl
push
sub
jae
subb
jmp
inc
push
lret
mov
lock
jo
xchg
lahf
add
loope
add
adc
adc
xorb
fstpt
dec
cmp
scas
notl
adc
mov
in
lahf
outsb
push
call
xchg
test
dec
shrl
cmp
outsl
gs
test
sub
dec
dec
cld
push
cmp
jg
push
add
psrlq
test
mov
mov
and
mov
lods
fistpll
fmull
sbb
pop
out
push
call
xchg
jo
xchg
ljmp
neg
scas
push
dec
rcl
imul
ljmp
push
lcall
movsb
jle
jecxz
sub
pop
cmp
jmp
les
xchg
and
jmp
mov
cmp
or
aam
push
mov
fs
leave
jnp
iret
aad
mov
mov
adc
leave
ljmp
push
push
and
jne
cmp
shrb
push
push
mov
lea
rcrb
push
scas
and
push
scas
js
out
mov
daa
add
fs
fidivl
sti
xchg
pusha
rolb
dec
jns
je
pop
sbb
and
pop
push
rcll
in
adc
mov
fcompl
xchg
adc
bound
adc
pusha
sahf
das
sub
and
mov
es
add
lea
sarb
imul
push
es
push
shll
add
mov
pop
test
cld
pop
imul
and
xlat
bound
loopne
out
pop
arpl
pop
gs
out
aaa
push
mov
adc
mov
pop
xchg
out
cmp
pop
push
jge
loope
sarb
fidivs
testl
sbb
popf
das
lret
pop
jl
mov
inc
scas
xchg
jle
cs
fisubs
cmpsl
push
js
xchg
lcall
adc
shlb
stos
push
jo
push
pop
and
xchg
push
std
testb
or
pop
shrb
jl
inc
inc
int
jl
cs
rorl
insl
in
push
mov
ljmp
xchg
cmp
sub
js
addr16
imul
sub
imul
outsl
mov
ds
leave
shll
addr16
inc
xchg
pop
pop
xchg
and
arpl
jbe
cli
pop
pop
jno
push
sub
lahf
xchg
rep
adc
aad
inc
arpl
xor
imul
insb
lods
into
cmp
leave
push
lea
rorb
fists
test
sub
and
or
movsl
out
int3
mov
inc
sarl
cmc
ret
ret
cld
outsl
or
cmpsl
dec
aad
cmp
mov
push
lods
jmp
cld
push
sbb
imul
fistpl
nop
int
aad
clc
mov
addr16
rorb
data16
outsl
fbld
and
scas
jnp
add
xor
int
pop
sbb
cmp
aad
lret
cmp
fs
pushf
lahf
mov
andl
sahf
mov
jecxz
xchg
cli
std
xchg
inc
sti
mulb
dec
cmpb
fmuls
pusha
sbb
je
push
shrb
nop
das
or
adc
pop
fisttps
xchg
adc
inc
or
lcall
popa
mov
push
adcb
pop
rorl
enter
xlat
adc
mov
aaa
int3
jmp
dec
cmp
jne
rol
push
dec
aas
cs
adc
inc
cld
in
call
scas
sbb
pop
addb
sarl
xchg
mov
mov
insl
cmp
hlt
ret
dec
hlt
mov
jle
loopne
sub
push
stc
jle
jle
lret
test
roll
lahf
mov
sub
push
jl
arpl
add
inc
sub
and
jecxz,pt
jp
scas
push
cli
push
jns
ja
jno
xchg
push
sbb
ret
lea
xor
cld
aad
cmp
push
lds
fsubr
cmp
out
push
pop
adc
dec
cmp
push
or
xchg
add
daa
dec
mov
xor
gs
cmp
jp
movsb
in
mov
dec
cs
ficoml
out
insb
dec
adc
jno
enter
aaa
pop
outsl
cld
sub
sbb
cld
test
fmull
outsb
or
shll
leave
mov
ljmp
stos
jg
nop
outsl
jg
push
lds
mov
pop
adc
data16
insl
ret
mov
in
fs
iret
dec
xchg
add
inc
hlt
sti
jl
out
movsl
sub
inc
or
rclb
insb
mov
sub
mov
movsl
push
js
fistl
aas
outsb
outsb
mov
popf
jnp
int
jmp
push
jge
sahf
jbe
mov
lret
dec
cmpsb
imul
stos
push
ljmp
jo
sbb
stos
inc
jmp
sbb
adc
sub
outsb
inc
jne
fs
jo
jbe
cmp
scas
insb
hlt
shlb
cs
jbe
or
add
and
outsl
xor
aam
push
in
mov
es
adc
sub
adcb
mov
xor
adc
inc
xchg
loopne
xchg
xor
xor
inc
mov
fs
dec
hlt
addr16
xchg
pop
jge
ret
into
push
mov
or
lcall
data16
ds
ds
lahf
gs
mov
into
adc
lds
cmc
call
je
out
push
push
imul
lods
fwait
subb
movsb
outsl
mov
sbbl
lea
push
imul
out
out
roll
xchg
dec
lods
add
inc
adc
test
rcrl
ds
adc
inc
xorb
mov
sub
jne
pop
fwait
sbb
std
pop
sub
mov
rcrb
push
dec
sbb
or
inc
cmp
mov
and
fsubrl
push
insb
sbb
lahf
xor
dec
or
pop
fsubs
xchg
push
popf
or
pop
sahf
outsb
aaa
out
loope
xor
xchg
arpl
sbb
xorl
rcll
sbb
sbb
cmp
mov
or
ljmp
pusha
int3
outsb
xchg
popa
sbb
insl
push
jb
in
imul
les
cmpsl
inc
movsl
xor
push
aaa
sbb
js
inc
jge
insb
pop
das
xor
adc
sbb
repnz
aad
fcmovnu
adc
sbb
ret
rclb
and
pushf
push
pop
aad
rcl
jge
and
push
fmull
fstpl
pmulhuw
mov
xchg
js
outsb
clc
out
leave
cs
call
decb
push
jno
push
pusha
or
xor
xorl
dec
bound
outsb
dec
xchg
bound
mov
and
push
sbb
daa
adc
and
insl
in
int
xor
and
or
jl
in
xchg
fcmovu
mov
daa
aad
out
in
lahf
sub
mov
loopne
cmp
call
pop
xor
lret
pop
dec
icebp
jo
scas
push
lahf
dec
rcrb
jge
out
or
lret
js
out
or
das
jmp
mov
shll
push
scas
dec
fistpl
push
mov
jmp
stc
or
cwtl
mov
outsl
push
pop
and
push
js
sub
and
dec
and
sbbl
push
sarw
sti
addr16
mov
cltd
jbe
mov
lea
mov
imul
mov
outsl
jbe
dec
sub
pop
push
jge
fistpl
in
sbb
and
mov
pop
scas
adc
or
pusha
adc
lret
push
push
in
jecxz
dec
lods
adc
xchg
out
mov
lret
and
push
jecxz
ss
and
xchg
scas
sti
push
push
clc
scas
movb
les
push
inc
test
adc
movsb
jg
data16
xlat
cmpsb
subb
inc
inc
push
push
dec
outsb
push
xor
ja
fwait
jae
xor
jnp
or
mov
mov
nop
jmp
scas
imul
sti
push
ds
nop
pop
sahf
imul
push
ds
std
imull
adc
repnz
adc
cwtl
sbb
rcrb
adc
testb
es
stos
xchg
cmp
leave
xchg
cmp
jbe
ljmp
lahf
dec
jnp
pop
fimuls
sti
fs
jl
rolb
pop
loopne
cld
mov
sbb
cli
js
push
cmpsl
push
int3
cli
add
mov
clc
jnp
xchg
imul
fcmovu
cs
stc
cli
cld
push
mov
cmp
stos
aas
outsb
push
mov
push
xlat
lods
jbe
mov
js
push
stos
jl
popf
sub
sti
dec
movsb
arpl
rolb
pop
in
adc
sbb
mov
push
out
lahf
push
mov
jge
iret
int3
inc
jl
shl
fs
or
add
or
stos
cmpsb
lahf
daa
std
push
leave
sub
pop
cmp
jnp
sarl
jge
cmpsb
pop
pop
xor
jbe
lods
mov
or
jmp
or
push
in
arpl
jo
clc
cltd
xor
jno
pusha
cs
cmp
push
push
sahf
inc
mov
movsb
test
push
xchg
inc
lods
add
jle
movsb
mov
push
adc
outsb
add
out
xchg
cmp
add
pop
pop
mov
adc
push
dec
dec
addr16
adc
lea
push
jo
shrl
rcrb
out
dec
bound
ljmp
adc
lods
add
out
fildl
xor
lea
pushf
push
dec
leave
movl
leave
daa
xchg
dec
insb
xor
inc
add
imul
insb
xor
cld
cli
sub
popf
jle
pop
pop
shrl
js
xchg
pop
loopw
jo
xchg
fisubrs
les
and
push
sub
and
movsl
push
stc
sti
lret
std
arpl
inc
mov
movsl
push
std
pop
daa
pop
outsl
leave
mov
xchg
push
data16
out
mov
or
mov
fadd
pop
mov
push
stc
and
cmp
jmp
int
jo
outsb
mov
es
xor
xchg
add
lods
push
and
sbb
insl
mov
ds
jmp
pop
imulb
push
or
pop
mov
dec
xchg
loopne
push
movsb
xchg
fneni(8087
jns
pop
inc
stos
jnp
repnz
push
int3
pop
add
xchg
mov
in
addr16
push
mov
mov
add
daa
ret
xchg
adc
adc
pop
test
data16
cmpsb
lds
inc
mov
push
xchg
push
jle
or
js
lret
jmp
jno
out
jg
push
je
or
add
add
out
ret
xchg
lods
sbb
adc
and
jbe
adc
popf
out
movsl
jl
int
sbb
mov
sub
push
aam
pop
mov
lock
fcoms
lods
sbb
fldt
daa
ret
add
lock
stos
ljmp
jbe
inc
loope
decb
daa
movsl
jnp
sbb
enter
xchg
adc
clc
jbe
outsl
mov
out
jne
shrb
mov
sbb
xchg
bound
insb
jmp
imul
dec
cltd
inc
outsl
outsl
subl
outsl
adc
sub
andb
insb
sub
add
cli
sub
inc
scas
jp
or
test
in
sub
sti
add
imul
jg
dec
add
sti
pop
je
icebp
fbld
insb
je
lahf
pop
arpl
popa
enter
gs
sti
add
imul
ds
outsl
inc
ja
insb
inc
jge
pop
jmp
das
jg
arpl
inc
or
in
loope
outsl
inc
pushf
ret
pop
imul
inc
fistps
lds
dec
cmpsl
mov
pop
mov
jb
pusha
sub
sbb
roll
and
push
and
movb
cmpsl
add
push
push
insb
dec
adc
push
cli
add
jl
pop
dec
rcll
sub
pusha
cmp
test
xor
jg
ja
insb
inc
js
add
daa
or
cmp
data16
out
inc
dec
imul
dec
dec
inc
cli
inc
cmp
outsb
je
les
jb
imul
cmp
jns
std
outsb
cmp
sub
inc
int3
je
sti
inc
outsb
imul
push
inc
dec
inc
iret
pop
jmp
outsl
insl
mov
pop
sub
push
xchg
push
daa
sbbl
out
fs
outsl
iret
dec
jmp
pushl
dec
jp
jp
fs
jle
pop
inc
sub
dec
mov
push
dec
imul
jno
inc
ljmp
dec
imul
outsb
and
outsl
sub
inc
xchg
mov
jge
jp
jno
imul
dec
pop
dec
pushl
dec
rcll
push
add
lods
rcl
cmp
push
pop
push
int
enter
jns
cld
cmpsl
push
cmp
dec
push
cli
jbe
sbb
iret
outsb
mov
mov
clc
popa
mov
imul
fistpll
ja
lea
xor
mov
loope
aas
stos
push
fistpll
cld
imul
int
out
outsl
adc
jbe
jmp
call
dec
sub
out
rcrb
adc
dec
loope
fs
push
pop
dec
adc
or
das
add
gs
sti
push
xor
out
das
mov
fadds
outsl
pop
into
hlt
lret
imul
mov
mov
jne
dec
push
sub
dec
jo
jbe
sub
orl
movsb
pop
mov
cmp
movsb
or
mov
lret
sbb
push
test
ljmp
dec
pop
push
jmp
sbb
aad
movsb
push
sahf
cmpb
clc
adc
sub
sbb
sti
xchg
or
inc
add
outsb
imul
test
jecxz
in
cmp
sbb
add
inc
ret
ret
sbb
js
and
cmp
in
pop
mov
dec
imul
jbe
mov
outsl
rcr
shlb
cmpsb
sbb
fnsave
xor
push
or
int3
inc
out
in
and
out
lods
rcll
iret
dec
scas
jns
pop
cmpsl
xchg
mov
adc
or
cwtl
rcrb
dec
cmp
sbb
inc
shl
xchg
adc
pop
popa
iret
pusha
imul
cs
outsb
pop
jmp
inc
dec
mov
test
fldt
sti
jb
fnstenv
xchg
shlb
es
scas
adc
push
xchg
sbb
pop
sub
xlat
daa
shrl
shlb
fsub
add
aam
adc
sbb
jns
and
lods
dec
insb
push
out
inc
gs
scas
movsl
xorb
and
or
js
jp
movsb
xchg
shlb
jmp
sbb
jnp
cs
jmp
add
jmp
scas
dec
push
cli
sbb
out
gs
sbb
or
mov
imul
jg
negl
ret
jmp
dec
xchg
outsl
iret
mov
push
ficompl
fsubl
cmp
push
pusha
adc
push
js
mov
rol
push
lret
cmp
ljmp
stos
test
inc
xchg
mov
loope
out
aad
sub
xor
pop
sub
shrb
push
and
dec
ja,pt
icebp
orps
mov
jno
dec
jge
ja
js
sbb
adcb
adc
aad
ficoms
repnz
jle
jp
ja
iret
sbbl
cmc
fdivs
sub
sahf
mov
jbe
daa
sbb
iret
daa
pop
push
push
mov
jne
dec
loope
push
jp
inc
lea
mov
sbb
scas
sti
mulb
shlb
sub
push
stc
dec
insb
push
stc
xchg
mov
dec
int
out
cld
pop
jnp
lock
inc
jmp
loope
jb
mov
shlb
adc
mov
flds
arpl
popa
pushf
jecxz
mov
insb
cmp
insl
insl
loope
repz
daa
mov
dec
pop
push
sbb
ljmp
pop
mov
push
arpl
adc
popa
push
dec
repnz
rcl
data16
cld
and
xchg
push
cmp
fwait
push
movsb
mov
cmpsb
inc
xchg
pop
dec
sub
lods
ja
push
adc
sbb
sbb
fistl
mov
lea
pop
and
imul
lods
push
pop
roll
push
sub
push
mov
push
and
jge
insb
aad
cli
fs
call
dec
xchg
lea
movsl
dec
insl
inc
and
in
shll
fcomip
insb
dec
sar
rolb
push
xchg
iret
jo
rcrl
xor
sti
xchg
sbb
push
imul
push
ja
pop
xor
push
push
inc
adc
mov
mov
fwait
inc
push
cmp
mov
aaa
push
add
loope
cli
int
sub
enter
sub
pop
mov
daa
test
js
fs
jo
sarb
ret
sbb
psrlw
dec
gs
cmp
out
ljmp
push
push
xchg
jb
lret
add
imul
je
push
out
dec
cli
inc
push
push
cld
jo
xor
rolb
mov
dec
inc
mov
fs
xchg
pop
leave
lock
cmp
push
repnz
lock
in
add
subl
fwait
push
cmp
pop
insb
inc
dec
xchg
lret
jecxz
inc
adc
sub
movsl
into
cmp
sbb
xor
out
jg
test
fs
sbbb
shll
and
mov
lret
push
mov
out
daa
inc
rorl
fistpll
movsl
data16
sub
mov
jbe
insl
cmpsb
test
movsl
xchg
cmp
das
loope
push
lahf
cmp
out
and
daa
insl
in
xchg
fbstp
dec
push
int3
mov
fs
xor
mov
push
push
inc
mov
xchg
subb
in
sbb
ds
mov
mov
in
xchg
mov
push
xlat
or
xchg
hlt
jl
fldt
sub
pop
mov
ret
push
push
rolb
sahf
call
aad
into
lret
xor
mov
lcall
mov
push
sbb
and
inc
mov
nop
sbb
popf
rcrb
ss
jb
inc
add
push
gs
into
dec
dec
jp
addr16
push
sbb
sub
in
push
leave
jbe
out
lahf
orl
movsl
push
or
movsl
ds
mov
dec
push
std
mov
jo
incb
add
mov
mov
xchg
punpcklbw
pop
mov
xchg
cmp
jl
sarb
and
popa
lods
mov
addr16
jge
adcb
out
jle
sbb
lea
inc
hlt
xchg
push
pop
jnp
add
jp
push
and
out
cmpsl
jnp
popa
push
pushl
jmp
iret
sub
fbstp
leave
movsb
jecxz
inc
lds
orb
push
lahf
js
pusha
xchg
push
into
ds
push
daa
js
adc
pop
aaa
icebp
mov
addr16
push
lret
dec
adc
cmc
imul
adc
sbb
cmpsb
mov
xor
mov
mov
repz
or
jmp
outsl
mov
out
lds
cmp
outsb
or
ret
repnz
xor
mov
dec
push
and
and
gs
or
testl
mov
insb
adc
out
inc
inc
mov
roll
arpl
cld
cmpsb
dec
data16
push
insl
add
call
cmp
cs
xchg
mov
xor
fstpt
mov
xchg
out
in
push
imul
clc
cmp
lock
iret
jl
rcl
jecxz
mov
inc
push
das
cmpsb
lret
sub
push
loope
and
mov
aam
push
lock
cs
cmp
sub
data16
popa
cmp
xchg
insl
fsubrs
xor
outsl
jbe
mov
cmp
push
out
data16
push
mov
lahf
jp
push
adc
cmp
and
data16
lea
inc
jl
das
call
push
fdivrl
sub
or
pop
test
out
mov
push
ret
in
in
dec
pop
mov
xor
jbe
lret
subb
es
xlat
jo
mov
scas
add
push
cwtl
imul
push
shll
xor
push
insb
or
mov
outsb
xchg
inc
pop
lea
jbe
adc
das
push
cmp
dec
sub
sahf
mov
jnp
jge
jae
mov
and
out
pop
ljmp
insb
and
outsb
jmp
mov
and
mov
pusha
movsl
pop
cmpsl
jle
lods
popl
xor
jl
clc
adc
das
fimull
cwtl
or
shl
loope
mov
imul
lods
stos
movsb
xor
es
push
int
sti
jge
jle
sbb
jbe
idiv
ja
xor
pop
pusha
sbb
ds
stos
cld
push
outsl
cmp
xchg
addr16
adc
dec
mov
xor
push
jecxz
pop
push
je
sbb
inc
ss
dec
push
push
push
addr16
daa
cmpb
call
std
lds
pop
add
fildl
in
rcrb
lea
outsb
or
jo
ljmp
add
sti
add
cmp
loopne
jo
test
cld
add
pop
push
pop
jo
jmp
shr
mov
dec
stos
cmpl
outsl
pop
pop
popf
fsubs
pusha
sahf
pop
mov
xor
lret
inc
mov
adc
imul
or
pop
push
out
cmpsl
xchg
rcrb
add
rorl
inc
adc
jo
xchg
add
inc
mov
scas
push
fwait
jecxz
pusha
out
mov
sbb
rolb
xchg
sahf
lahf
in
and
scas
aad
cmp
rorb
mov
cltd
jo
xor
repz
lock
in
or
lcall
xor
xor
fdiv
pop
fists
xchg
lods
dec
push
mov
ljmp
or
fstpt
inc
jge
xchg
xchg
mov
push
cmp
dec
add
and
jno
lea
mov
je
adc
cltd
push
popf
add
jl
or
pusha
arpl
in
stos
pop
loope
sub
stos
push
mov
aam
sbb
pusha
mov
jnp
stos
lret
push
push
mov
lret
jp
jbe
mov
cmpsb
inc
mov
cmp
add
lret
mov
push
mov
stos
adc
lods
addr16
idivl
ror
in
aas
jbe
addr16
sarb
outsb
xor
jle
lods
sub
add
shlb
int3
sub
in
mov
xchg
mov
push
lret
cmp
addr16
data16
sbb
adc
xchg
adc
orb
jo
stc
inc
lret
push
mov
jmp
lcall
in
scas
fbld
cmp
mov
dec
jne
sarb
in
idivl
jo
xlat
xor
cmp
flds
adc
pop
aaa
insb
sbb
fnsave
fidivs
cmpsl
inc
pop
add
shr
gs
push
das
jae
sahf
ret
fidivrl
jmp
cmp
pop
lret
insb
negb
mov
jns
loope
repnz
and
mov
jecxz
xor
js
jmp
push
mov
mov
sbb
dec
pushf
outsl
mov
clc
stc
xor
scas
out
sar
dec
pop
movsb
xchg
mov
int
mov
stos
hlt
pop
inc
or
or
ss
outsb
dec
add
rolb
push
mov
inc
in
dec
aad
cs
stos
out
cs
or
daa
cmp
aas
outsb
inc
mov
inc
lods
js
jp
iret
inc
outsb
pusha
dec
push
xor
out
frstor
fs
push
popa
push
stc
jnp
lds
and
add
dec
inc
pop
mov
ret
push
clc
xor
js
sub
cmp
sbbl
pop
stos
pop
aad
sbb
lea
mov
fs
scas
jbe
pop
adc
in
out
stc
roll
aas
cld
gs
addb
cs
push
lds
mov
pushf
pop
jne
stos
add
lret
loope
dec
mov
or
push
mov
fs
add
inc
dec
mov
stos
mov
arpl
pop
push
mov
lret
mov
xchg
sub
add
push
pop
es
inc
sub
sbb
cs
cmp
call
divl
push
icebp
jmp
gs
icebp
mov
jg
nop
cmp
out
leave
out
lcall
aas
cmp
cmp
fists
mov
out
dec
xor
sub
and
xor
sbb
xchg
inc
stos
cmp
inc
mov
push
fstpt
lret
fwait
arpl
push
xlat
shl
add
imul
xor
inc
push
sti
jbe
popf
in
in
fstl
fcomi
popf
loopne
roll
int
outsl
jnp
popf
lock
adc
or
mov
adc
repz
clc
pusha
mov
cld
repz
lds
es
stc
and
ds
and
mov
out
gs
or
add
mov
ret
lahf
fsubr
inc
push
popf
insb
jg
scas
popl
shll
mov
push
sbb
lock
outsl
mov
cmpsl
mov
sti
inc
dec
popl
sbb
and
mov
sbb
ucomiss
push
mov
push
xchg
add
mov
add
lock
inc
mov
jecxz
arpl
jg,pt
addr16
fildll
jo
dec
push
test
or
jb
fsubrs
jmp
add
sub
lods
xchg
outsb
jmp
inc
ret
and
sub
aas
and
fstpt
shll
jmp
sbbb
sbb
pop
sub
adc
jecxz
push
add
ret
cmp
mov
dec
jbe
loopne
shll
sbb
sbb
push
pop
inc
jl
xorl
jg
lods
int
jecxz
mov
icebp
rdpmc
xor
push
mov
sbb
leave
lret
pop
fcmovne
bound
push
stc
adc
or
dec
adcl
rorl
jmp
dec
call
push
imul
popf
jl
icebp
lds
cwtl
jo
sbb
clc
add
ds
insb
ja
or
fildll
test
push
js
cmp
cld
push
shll
push
mov
xchg
movsl
in
inc
mov
cmc
xor
out
mov
pushf
outsb
jg
call
ljmp
inc
je
movsb
cli
sub
jns
push
loop
xlat
sbb
bound
inc
cmp
sbb
pop
or
outsl
lahf
decl
push
sub
push
xor
outsl
into
shl
jp
daa
lret
push
imul
pop
femms
fldenv
adc
outsl
je
lods
xor
std
mov
jle
or
ret
int
cmp
and
or
jbe
push
xchg
call
push
stos
push
outsb
cld
xchg
ret
dec
inc
test
mov
or
mov
int3
shll
pop
xorl
stos
add
addr16
aad
lret
xchg
pop
movsl
movsl
ja
jmp
arpl
inc
rcr
add
mov
into
jno
mov
push
xchg
clc
jmp
pop
subb
fisttps
stos
pop
adc
pushf
outsb
outsl
push
dec
jl
mov
jo
je
jbe
mov
stos
lahf
mov
imul
shrl
addr16
xor
and
cmp
jns
push
gs
mov
ja
pop
sbb
cli
cmpsl
lret
jmp
push
add
push
and
xlat
sub
inc
add
cmpsl
out
daa
and
xchg
and
cmp
or
les
jg
xor
insl
mov
mov
mov
jg
mov
lods
hlt
inc
insl
mov
cmpsl
clc
movsl
lds
sub
jne
imul
jl
lret
out
outsl
aaa
xor
shl
mov
je
sti
imul
fists
and
aam
cmpb
mov
sar
testl
xor
dec
inc
push
js
popa
adc
dec
jle
pop
cmp
lods
pushf
jg
rcrl
into
js
mov
mov
ds
jno
pop
jecxz
stc
int3
xchg
mov
mov
orb
out
rcl
mov
mov
mov
push
jne
pop
add
sub
out
mov
inc
repnz
sub
mov
mov
jg
xor
pop
push
xor
mov
ror
fldt
jns
inc
dec
ja
mov
jl
sahf
add
subb
jb
sbb
test
mov
xor
xchg
sub
jbe
dec
cmp
cmp
arpl
cld
test
pop
adc
lahf
adc
ljmp
stc
dec
inc
xor
shll
cs
pop
cmp
and
stos
jl
push
lds
imul
adc
arpl
mov
mov
or
addr16
cmpl
rcl
adc
jo
push
mov
push
or
mov
cli
dec
clc
jns
loope
push
adc
inc
fnstenv
in
loopne
jmp
jecxz
ja
das
jbe
fcmovbe
sbb
xlat
push
test
dec
adcb
add
pop
xchg
ljmp
out
adc
adc
adc
jmp
jbe
jno
into
inc
push
arpl
mov
call
pop
xor
or
arpl
push
ss
lcall
xor
outsl
fs
jp
rcrl
je
ret
mov
fidivl
or
mov
lods
enter
lea
jno
mov
ret
shll
sbb
addr16
push
ficoms
pop
iret
out
sbb
mov
pop
lret
sub
in
xorl
rorl
adc
inc
jge
jb
popf
xchg
jmp
out
push
pop
ret
ds
dec
push
outsl
jbe
inc
ljmp
fbld
imul
int
mov
mov
inc
test
cmp
fidivrs
insb
fwait
out
jo
cmp
into
loope
sbb
dec
cli
shrb
push
ljmp
inc
ret
cs
aad
jmp
adc
flds
loopne
daa
iret
fimull
lea
or
imul
inc
mov
int
xor
jmp
arpl
out
pop
pop
addr16
rcrb
add
inc
outsb
mov
out
cs
ret
shll
fimuls
jle
add
dec
and
js
addr16
lahf
pop
ds
leave
lret
hlt
call
jno
cli
xor
add
pop
inc
lahf
push
add
inc
mov
push
mov
or
mov
das
lret
call
andb
cmc
insb
add
mov
pavgw
or
adc
jmp
loope
jne
xor
cmp
lea
cmp
jp
push
std
mov
int
mov
popa
lods
inc
ret
das
cs
cmpsl
cmp
test
add
aas
aad
lea
jns
pusha
push
movl
pushf
lea
jmp
pusha
pushf
pushf
pushl
movl
jmp
mov
pushf
pusha
pushf
repnz
pushf
pushf
lea
jne
movzbw
bswap
pusha
movb
lea
movzbw
mov
not
lea
pushl
pushl
pushf
movl
movb
mov
mov
push
pusha
pushf
pushf
pushl
ret
outsb
mov
dec
dec
push
xchg
fbld
add
cmpsb
popf
and
mov
test
inc
lods
es
out
xchg
or
ret
scas
test
roll
pop
push
or
and
mov
adc
inc
icebp
mov
cli
loop
lods
fwait
lds
dec
jge
or
movsb
outsl
mov
inc
xor
hlt
mov
xchg
lea
inc
add
mov
mov
mov
test
test
loopne
or
jle
loop
cld
filds
fisubl
and
sbb
adc
movsb
ds
in
mov
icebp
pop
or
pop
adc
jge
inc
cld
pop
inc
notl
xor
popf
es
std
aaa
clc
xor
pop
fs
cmp
mov
jl
sbb
hlt
cmp
jge
test
add
jle
das
addr16
nop
pushf
or
adc
rol
sub
sub
mov
sbb
jns
sub
push
jg
adc
inc
in
and
rol
or
in
addr16
sahf
jmp
lret
mov
dec
repnz
mov
cmp
fiaddl
cwtl
cs
xchg
rclb
scas
inc
into
push
cmpsb
push
or
push
sbb
inc
daa
mov
sbb
and
pop
xchg
mov
sub
sub
jmp
adc
in
jge
cmp
test
outsl
arpl
inc
insb
insb
outsl
arpl
popa
cmpl
push
sub
sbb
js
pushf
imul
inc
aad
mov
xchg
add
sbb
loop
push
mov
dec
fiadds
es
mov
mov
cltd
test
leave
cmpsl
iret
jnp
or
popa
cmp
push
and
jb
enter
mov
jb
or
les
adc
loope
in
or
aaa
mov
add
adc
and
lcall
fimuls
mov
roll
stc
test
call
jne
daa
stc
call
pusha
push
lea
jne
pusha
pushf
call
push
push
inc
push
xor
cs
insb
add
mov
mov
dec
mov
jae
shll
jae
hlt
jno
clc
arpl
shlb
dec
pop
mov
push
adc
or
imul
inc
cli
cmp
sbb
subb
call
adc
js
es
cmp
sbb
pop
pop
aaa
sub
mov
mov
mov
inc
shlb
sahf
int
iret
fs
jg
iret
xor
and
ret
dec
inc
js
xchg
int3
in
lret
and
or
jle
inc
jecxz
sbb
retw
into
mov
push
jle
into
subl
push
mulb
lds
sti
inc
jl
push
leave
test
repz
fbstp
mov
daa
mov
push
mov
fwait
and
add
xchg
mov
imul
and
in
sbb
xor
xchg
push
pusha
cmp
mov
es
call
cmc
pusha
pusha
cmp
movb
pushf
lea
jae
call
lahf
lahf
lea
movl
jmp
push
jmp
adc
jbe
mov
repnz
lret
jne
mov
cmpsl
sub
xor
es
lds
mov
fsubp
aam
cmp
in
sbb
push
push
lods
lcall
push
into
dec
movsb
pop
cmp
ja
int
test
inc
dec
test
in
fcmovnu
mov
or
adc
adc
jno
shl
ja
cmp
testl
cmp
je
add
fs
jmp
xor
inc
out
and
gs
inc
cmc
push
sub
mov
jnp
lret
int3
jae
jp
xchg
xor
movsb
or
testb
jp
xchg
mov
mov
or
xchg
fwait
int
mov
shrb
xchg
push
jmp
push
addr16
push
cmpsl
jns
imul
sub
xor
add
push
or
inc
fisubrl
je
push
call
cmp
pop
test
fidivrs
outsb
sbbb
ret
ljmp
out
scas
adc
ljmp
push
push
xchg
add
aad
popa
adcb
test
fsubl
jge
imul
loope
inc
mov
ja
pop
pop
mov
not
call
lea
je
pusha
add
pushl
lea
jmp
xchg
mov
movl
sets
bswap
jmp
push
movl
call
sub
out
fwait
loop
and
mov
aaa
inc
inc
xchg
sub
sub
mov
mov
xchg
fnsave
or
pop
inc
sub
out
out
mov
xlat
xorl
out
inc
sbbl
lds
push
push
jnp
pop
fstp
sub
jmp
fwait
cmc
jecxz
xchg
inc
fbld
mov
mov
pop
rcrb
mov
and
push
das
addr16
repnz
arpl
lret
clc
mov
sub
push
mov
cmp
cmp
push
lea
je
ror
daa
sub
ror
mov
inc
not
mov
shr
lea
dec
shr
inc
pushf
inc
shr
mov
pushf
clc
or
movw
movw
lea
je
and
bsr
bts
jmp
movsl
in
inc
pop
ja
fwait
lea
lret
test
sbb
sbb
test
mov
mov
lret
pop
and
das
into
add
sub
subb
test
mov
jne
or
and
dec
pop
push
cmp
mov
into
jle
mov
xor
pop
insl
scas
xchg
inc
xchg
lret
mov
xor
dec
lahf
push
sbb
xrelease
lods
fcompl
and
dec
outsb
push
lods
fwait
mov
insb
jo
lret
or
and
addr16
cs
mov
inc
sahf
mov
in
in
xor
cmpsl
call
xchg
aaa
cmp
adc
mov
lods
sarl
xchg
pop
stc
push
adc
push
push
enter
mov
les
jbe
push
fcomi
push
enter
cmp
mov
sub
les
out
dec
ja
sub
xchg
pop
ja
pop
imul
inc
push
adc
ljmp
mov
in
mov
shll
mov
push
push
jae
xor
pop
inc
mov
in
mov
fcomip
cli
dec
andl
jnp
ret
mov
lcall
clc
jmp
clc
pusha
mov
test
xorb
clc
addl
push
incl
das
jge
pop
xorl
pusha
ret
mov
js
pop
push
xchg
inc
popf
mov
fiadds
ja
pop
popf
rcrl
xchg
inc
push
out
insl
and
xor
popa
test
jns
outsl
sub
inc
fiadds
xor
adc
loope
xor
cltd
push
sub
push
ljmp
ja
cmp
push
fs
sbb
sub
flds
push
ljmp
and
xor
das
leave
bound
jbe
test
dec
mov
sbb
inc
cmp
jg
xchg
daa
inc
repnz
sbb
lds
lock
inc
fnsave
and
jne
dec
ror
rcl
mov
shl
sub
jmp
lea
jb
cmc
jmp
fbld
mov
xchg
push
enter
cmp
dec
mov
lret
mov
fs
outsb
cltd
push
xlat
mov
xor
ljmp
push
inc
mov
int
xchg
outsl
enter
js
mov
cmp
leave
sbb
mov
imul
dec
sub
ror
push
sub
mov
cmp
cmp
push
and
xlat
movzwl
bswap
jmp
lea
call
pushf
pushf
sub
jo
pusha
cmp
mov
call
pushf
pusha
lea
jne
or
mov
jmp
call
inc
andl
lcall
lea
std
mov
ljmp
adc
push
addr16
sti
ss
aam
and
pushf
pop
test
lods
repz
aad
pushf
es
cmp
inc
outsl
pop
xorb
xchg
jno
jp
jle
js
mov
jge
sbb
pop
popa
pop
pop
jbe
mov
push
cmpsl
push
jge
cmp
inc
pop
sbb
jo
addb
xor
lret
outsb
sub
aaa
mov
stos
jns
ret
insb
sub
js
in
testb
xor
inc
cs
dec
sarl
outsb
inc
outsb
jmp
sub
insb
sub
enter
jae
das
repnz
sub
push
hlt
aas
rcll
add
and
xor
xor
insl
bound
mov
sub
icebp
adc
and
ds
sub
push
inc
rol
inc
cli
cmp
mov
in
imul
dec
mov
push
adc
out
jnp
push
repz
lea
lahf
stos
sahf
insb
sub
movntq
clc
aad
negl
cs
out
loopne
das
clc
jge
sbb
daa
imul
push
test
pop
cmp
and
pop
push
adc
sti
push
jb
in
jge
pop
cs
push
jae
fsubs
jle
or
insb
fcmove
jecxz
cs
jle
or
insb
cmpsl
in
inc
aaa
pop
adc
jle
cmp
jae
por
jg
jb
pusha
push
inc
fistpl
clc
xor
inc
rcl
bound
insl
loop
sub
jb
out
test
push
pop
out
lods
jp
outsl
push
or
sub
les
jmp
jp
push
aaa
push
inc
sub
dec
call
jl
hlt
lds
insb
mov
pop
outsl
xor
pop
mov
dec
lret
adc
fldcw
out
scas
push
pop
inc
or
mov
xchg
cmp
outsb
sub
addr16
out
xlat
fsubr
scas
jg
lahf
iret
pop
mov
jle
dec
mov
in
enter
xor
adc
insl
in
sub
jb
out
mov
data16
jg
jnp
mov
xchg
out
popa
dec
leave
imul
call
cmp
ljmp
sahf
nop
mov
cmp
or
pop
shlb
dec
sub
repnz
popa
jae
outsb
lretw
ret
in
es
adcl
cmpsl
lock
pusha
test
push
fimuls
push
push
outsb
dec
jp
pop
dec
mov
scas
dec
or
sub
dec
outsl
cli
fstl
outsb
popa
outsb
nop
js
int
out
mov
or
jo
sub
in
jg
push
jb
icebp
cmp
out
cmp
shlb
mov
jg
fdivs
out
cmpsb
and
push
cvttps2pi
clc
call
adc
jl
xor
mov
dec
sbb
sub
iret
lock
sub
adc
sub
inc
shrl
mov
xchg
adc
pop
lock
or
mov
cmpsl
dec
jno
hlt
sbb
push
jecxz
mov
jb
out
insb
push
xor
adcl
sub
repnz
pop
adc
popa
xor
push
dec
sub
jae
dec
jg
jno
mov
lret
pop
adc
and
sub
xor
xchg
dec
xorb
ficoml
data16
or
outsb
stos
out
insb
xor
scas
outsl
jne
divl
cmc
pop
jb
dec
push
ss
jge
pusha
aad
push
jbe
fdivs
push
jb
sub
rcll
aaa
jns
mov
push
ja
js
stos
push
xchg
adc
push
enter
sbb
lods
mov
scas
jmp
xchg
data16
pop
mov
sub
mov
gs
pop
imul
cmp
sub
jns
pop
push
js
dec
jb
pop
pop
insb
jb
pop
imul
cmp
sub
jp
movsb
sbb
mov
mov
pop
cli
pop
popf
in
push
sub
pop
sbb
scas
and
bound
outsb
loopne
sub
mov
das
jno
outsb
mov
inc
jl
pop
xchg
pop
inc
out
dec
push
mov
sbb
insb
sbb
cmp
dec
je
dec
jbe
pop
pop
popa
dec
jge
ret
xlat
mov
sub
std
out
in
cwtl
outsl
outsl
lods
mov
cld
cmpsl
dec
jle
inc
outsl
stos
pop
push
and
insb
addr16
popa
jb
out
cmpsl
popa
jae
outsb
rcrl
inc
jg
loope
mov
aas
addr16
xchg
inc
dec
or
inc
inc
push
push
sub
adcb
gs
sbb
xchg
fs
pop
sub
loopne
std
call
mov
dec
subb
fldcw
mov
in
push
in
loope
push
sub
and
mov
dec
jl
dec
push
pushf
pop
push
inc
mov
sub
loop
enter
out
leave
xor
dec
and
push
arpl
shl
dec
sub
sub
loop
dec
mov
scas
push
jecxz
mov
outsl
mov
lahf
movsl
je
push
pop
xchg
sbbb
jb
out
pop
popa
inc
movsb
sub
mov
push
or
popa
jae
outsb
adc
into
pop
dec
sub
arpl
cmp
outsb
and
sub
movsl
pop
scas
pop
sbbb
pusha
in
push
mov
imul
pop
fstpt
sub
sub
outsl
pop
cmp
pop
cmpsb
insl
push
call
pop
mov
or
adc
sub
out
mull
daa
dec
sub
pop
lcall
xor
pop
movsl
jne
data16
sub
out
push
sbbb
push
sub
stc
jb
push
push
sub
outsb
xor
fsubrl
pop
test
jle
sub
jge
jg
pop
jp
jb
pop
sub
outsb
push
lods
lea
iret
push
pop
sbb
lret
inc
imul
mov
dec
dec
test
pop
imull
or
jmp
insl
out
cmc
loope
dec
sub
scas
dec
sub
outsb
mov
push
jb
sub
outsb
idivl
dec
jb
out
call
fstpl
sub
insb
cmpb
jb
out
mov
scas
dec
jp
push
mov
push
addr16
insb
iret
or
inc
stos
dec
ja
sub
imul
dec
aam
and
insb
mov
pop
and
jge
es
insb
pop
fsubrl
fcomps
inc
sub
jb
jg
outsl
push
mov
dec
dec
in
push
mov
das
push
fiadds
sub
popa
pop
jg
pop
jns
jecxz
jp
pop
xchg
pop
dec
or
dec
xor
jno
call
in
stos
dec
in
insl
outsb
gs
push
cwtl
rolb
sbb
push
or
push
outsb
and
sub
outsl
pop
data16
outsl
aad
lahf
out
inc
scas
adcb
mov
sub
jae
jg
outsb
push
jecxz
sbb
jge
pop
jecxz
sub
out
sub
out
outsl
inc
push
ja
sub
sub
and
outsb
insb
inc
shlb
jmp
scas
insl
pop
pushf
sub
push
int
dec
pop
out
push
sti
jg
jno
shll
in
sub
xor
sbb
xor
cld
push
stos
insl
bound
sub
push
push
mov
lahf
sub
nop
add
adc
or
push
and
sub
pop
rcrl
adcl
cmp
xchg
rorl
rcl
push
jg
out
adc
lock
fists
inc
popa
not
sub
dec
call
in
inc
xchg
inc
pop
addb
xor
adc
ret
xchg
push
lret
shll
sub
je
jmp
mov
out
dec
and
scas
dec
and
cmc
sub
pop
pop
jae
dec
jmp
adc
fldl
inc
xlat
out
pushl
sub
enter
sub
negb
sarb
inc
popa
cwtl
bound
sub
fsubs
sub
pop
pop
pop
pop
add
jb
out
mov
dec
fldcw
sub
clc
sbb
pushf
add
loope
jl
lock
lcall
pop
pop
pop
addb
pop
out
dec
popa
pop
fwait
sub
and
jb
push
adc
sbb
call
sub
jl
jno
outsb
mov
out
lcall
xchg
mov
stc
pop
dec
pop
test
or
cld
iret
call
mov
loop
inc
popa
and
push
dec
sub
ficoms
mov
clc
pop
outsl
inc
and
jb
repnz
movsb
mov
and
push
out
lret
jle
mov
shrb
mov
mov
add
push
inc
out
outsb
push
sub
xor
sub
sbbl
pushf
sti
mov
sub
add
sub
inc
pop
push
out
dec
adcb
test
ret
dec
call
jnp
in
mov
insb
loop
inc
insb
jecxz
das
insl
call
ret
out
aas
popa
inc
add
shr
jmp
inc
out
jl
push
sbb
insb
lret
lock
popa
cmpsl
into
les
xchg
inc
push
roll
jb
out
xor
divb
insb
dec
xchg
xchg
mov
pop
push
outsl
fbstp
mov
insb
push
scas
dec
fstpl
add
roll
mov
sub
sub
popa
call
rorb
inc
outsb
movsb
pusha
add
sub
sub
sub
outsb
call
popf
inc
outsb
gs
dec
pop
mov
sub
mov
leave
ljmp
xor
daa
aam
pop
or
outsb
sub
mov
out
scas
pop
mov
push
subl
xor
push
jg
or
jecxz
push
popf
or
dec
dec
outsb
cwtl
lret
lea
out
cmpb
cld
xlat
jg
les
insb
out
push
dec
push
repz
mov
pop
dec
push
out
jg
loope
loopne
dec
mov
pop
mov
je
lret
out
cmp
or
mov
dec
push
enter
loop
sub
jmp
jle
push
and
sub
int3
pop
imul
or
or
sub
outsl
divl
inc
dec
inc
ja
sub
outsl
sti
stos
jg
lea
jp
dec
scas
imul
lds
push
xor
dec
outsl
int3
mov
in
sub
jns
push
cltd
mov
jbe
push
sub
mov
jae
clc
call
into
outsb
mov
push
subps
push
call
decb
push
imul
je
or
insb
hlt
ret
dec
pop
iret
or
dec
sub
sub
mov
and
cmpb
xchg
dec
gs
push
push
and
cmc
outsl
xor
jg
mov
push
call
inc
in
subb
mov
xor
jno
ror
out
mov
push
sub
icebp
push
cmpb
ja
jl
mov
push
lret
mov
push
add
sub
repnz
pusha
into
ljmp
sub
jb
out
in
imul
or
mov
pop
fsubr
jp
insl
dec
or
jle
inc
and
sub
je
sarl
fs
inc
outsb
adc
jnp
dec
xorb
jb
out
mov
dec
mov
sub
dec
in
push
sub
ss
jle
mov
data16
out
andb
dec
hlt
dec
sub
mov
fs
in
divb
sub
aaa
push
addr16
gs
dec
fadds
dec
sbbl
dec
sub
jb
out
cmp
jl
cmp
stc
in
popa
dec
js
push
or
mov
sub
outsl
pusha
lea
cmp
dec
cmp
int
pop
jns
ret
sub
xor
xor
fs
sahf
sub
stc
iret
xchg
lret
cmpsl
pop
cmp
mov
inc
inc
out
jp
pop
push
sub
mov
out
outsl
insb
out
sahf
inc
or
mov
sub
cmp
iret
mov
push
jnp
in
push
bound
cmpsb
sub
mov
pop
sti
xchg
pusha
int3
out
gs
out
add
jno
lock
pop
jge
push
out
cmp
push
imul
cld
push
push
insb
jle
cmpsl
jno
and
pop
icebp
push
mov
push
sub
std
push
int
scas
adcb
orb
ds
and
or
xor
mov
inc
mov
imul
je
nop
orb
pop
sub
outsb
inc
lea
into
push
dec
sub
outsb
ljmp
mov
cwtl
out
sub
outsb
adcl
lods
inc
inc
outsl
jbe
jle
outsb
in
add
jb
pop
sub
pop
xchg
out
xor
ds
loopne
dec
shrl
sarl
dec
jge
jb
fmuls
je
insb
cmpw
pop
mov
jge
aam
cmpsl
inc
loope
inc
and
lods
cmpsl
dec
and
xchg
dec
adc
or
sub
bound
dec
push
mov
je
pop
cmp
loop
jmp
mov
dec
pop
and
xchg
mov
jle
insb
icebp
push
loopne
inc
xlat
clc
out
sti
push
outsb
frstor
popa
pop
rclb
lea
arpl
mov
push
outsb
jmp
sub
data16
loopne
dec
pop
andb
das
jne
shl
jbe
outsl
fwait
mov
pop
clc
mov
cld
loop
imul
xor
mov
jle
dec
pusha
outsl
sub
cmp
inc
inc
push
int
outsl
mov
js
sbb
xchg
inc
outsl
push
and
cmpb
adc
jmp
loopne
sub
movsb
loop
adc
mov
lods
push
mov
outsb
popa
ss
mov
outsl
outsb
pop
imul
xchg
cli
and
or
ret
jo
or
fcoml
sub
out
mov
outsl
sub
push
jl
outsl
shrb
dec
imul
mov
dec
imul
mov
sub
pop
or
outsl
inc
ss
call
outsl
dec
push
dec
outsl
push
addr16
and
push
pop
addr16
in
outsl
sti
insb
pop
outsl
and
push
outsl
cmp
outsl
cmp
add
out
dec
pop
or
mov
sbb
jmp
fadds
jbe
stos
sbbb
xchg
sahf
push
outsb
lods
je
dec
mov
jp
lds
mov
shl
xor
daa
aam
in
inc
and
lahf
mov
outsl
push
dec
outsb
add
test
testl
pop
mov
fidivs
dec
push
xorb
mov
outsb
dec
and
push
inc
js
pop
pusha
cmp
sub
dec
add
sti
shlb
stos
addr16
cmc
insl
gs
es
inc
test
dec
rorb
repz
jl
fbstp
and
int3
add
and
fists
xlat
xchg
push
sub
jb
jp
andb
aas
scas
xor
inc
mov
push
fucomip
mov
fdivr
adc
out
adc
out
insb
jecxz
scas
or
jmp
inc
xor
sub
lods
rol
and
in
movl
aas
pop
sub
dec
ljmp
dec
out
outsb
imul
bound
jle
mov
lea
sarl
out
bound
mov
pop
test
addr16
imul
cs
sub
es
mov
imull
jmp
pop
sub
test
imul
out
push
fildll
inc
dec
dec
jnp
outsl
add
xor
mov
or
pop
das
push
out
repz
and
cs
mov
insl
pop
sub
and
int3
mov
imul
ljmp
int3
mov
imul
and
sub
dec
subl
outsl
insb
movsb
scas
out
mov
or
fldt
push
fs
out
and
and
dec
int3
mov
push
testl
mov
jnp
pop
ljmp
jbe
push
imul
cwtl
imul
dec
decl
ds
or
bound
in
ja
dec
popf
ror
pop
je
das
je
loope
movsb
push
mov
in
repnz
fsubl
fs
aaa
aas
movsb
dec
daa
xor
sub
sub
aas
je
pop
cwtl
fidivrs
outsb
pusha
aam
popa
cmp
jg
ljmp
cmc
mov
ss
mov
jae
mov
push
ss
push
jg
pop
push
pop
jmp
addr16
jle
or
out
jg
je
ja
jnp
cmpb
push
push
jbe
push
addr16
jle
or
out
jg
inc
push
dec
jmp
addr16
jle
rcrb
jge
andb
data16
out
jg
outsl
dec
push
mov
add
push
jmp
addr16
jle
or
out
jg
dec
push
jb
jbe
jns
jge
popa
out
jg
push
insl
stos
outsb
dec
push
imulb
pop
push
inc
jmp
addr16
jle
or
out
jg
js
jnp
jle
bound
or
out
jg
push
xorb
push
pop
jmp
addr16
jle
or
out
jg
ja
jnp
jge
cmpb
push
push
ja
push
cs
addr16
jle
or
out
jg
jno
je
push
or
out
jg
pushw
push
outsb
out
mov
push
jle
or
out
jg
dec
push
dec
jmp
addr16
jnp
jg
arpl
insl
dec
push
negl
xor
adc
imul
cmp
and
js
pop
sub
cs
mov
insb
or
out
jg
jb
je
jbe
jns
jge
and
jg
push
insl
jle
dec
push
cmp
push
cs
jmp
addr16
jle
or
out
jg
inc
push
inc
jmp
addr16
jle
or
out
jg
jb
jae
jne
jbe
js
jnp
jle
andb
jmp
addr16
insl
or
insb
push
js
push
jg
push
push
pop
jmp
addr16
jle
or
out
jg
dec
push
dec
jge
dec
push
dec
jmp
addr16
jbe
jns
jnp
jge
push
jmp
or
jmp
insl
jg
mov
out
jg
pusha
push
inc
jmp
addr16
jle
or
out
jg
je
jbe
jns
jl
jg
popa
out
jg
imul
out
jg
pop
push
pop
jmp
addr16
jle
or
out
jg
dec
push
jno
je
ja
jnp
jle
popa
jg
addr16
imul
outsl
jg
cmp
adc
mov
and
jl
xor
aaa
repz
sti
mov
jae
ja
xchg
fmuls
jb
jecxz
aaa
mov
mov
jb
ds
jns
mov
sti
hlt
push
ss
push
jp
mov
jno
cmp
hlt
xor
leave
jae
ss
out
pop
dec
pop
jg,pn
dec
xchg
xchg
popl
sub
imull
addr16
jle
pop
pop
jo
jecxz
dec
out
cs
mov
jg
jnp
jge,pn
jg
popa
jg
gs
addr16
imul
dec
push
jns
push
or
push
out
jg
pusha
push
inc
jmp
data16
dec
or
dec
out
mov
aas
jbe
addr16
jg
bound
gs
imul
push
mov
jno
push
mov
jg
dec
push
dec
jmp
addr16
js
jnp
jle
popa
fs
addr16
insl
jns
dec
imul
insl
push
push
pop
imul
pop
cs
or
out
jg
dec
push
dec
jmp
addr16
jle
nop
push
inc
cmpsl
inc
rep
imul
jb
or
je
leave
bound
ja,pn
js
push
jp
jnp
gs
sub
cs
jmp
or
jmp
movsb
add
push
repz
cmp
jns
jge
push
imul
pop
es
cs
push
pop
jmp
or
or
or
mov
push
jns
pop
popa
mov
addr16
imul
pop
dec
cmp
jo
jnp
pop
jns
mulb
dec
jg,pn
dec
push
push
jmp
addr16
jae
je
jbe
js
andl
sub
dec
data16
push
mov
or
or
or
dec
jle
jg
sub
bound
or
out
jg
addr16
push
imul
pop
outsb
mov
push
jp
push
mov
pop
jmp
daa
pop
jecxz
pop
daa
inc
arpl
pop
inc
jecxz
inc
cs
addr16
jle
int
mov
sub
or
dec
out
jg
jno
jb
jae
je
jne
jbe
ja
js
lea
jnp
jl
jge
jle
push
sub
bound
or
out
jg
addr16
push
jle
add
push
outsb
jmp
in
in
pop
ja
cs
jle
or
out
jg
pop
push
pop
jmp
addr16
jle
or
out
jg
pusha
push
inc
jmp
addr16
jle
or
out
jg
dec
push
dec
jmp
addr16
jle
or
out
jg
push
push
jno
jb
jae
je
pop
pop
jne
or
push
push
jl
insw
push
cmp
pusha
cs
sub
xor
push
ljmp
push
xor
lods
xor
arpl
ja
inc
xor
cld
mov
mov
fcoml
shlb
jae,pn
push
fs
repnz
outsl
ja
ds
pop
iret
sub
pop
adc
dec
cmpb
test
push
add
jnp
xor
stos
push
xchg
hlt
pop
push
xlat
mov
nop
fidivrl
ljmp
js
inc
mov
adc
out
xor
jge
and
mov
push
mov
mov
outsl
inc
xor
out
mov
outsl
or
pop
push
es
outsl
out
outsl
cmp
test
cmc
pop
push
scas
jne
iret
and
mov
popf
pop
sbb
dec
inc
push
jbe
push
sub
sub
outsb
cmp
jb
dec
inc
fsts
outsl
lcall
test
js
outsl
faddl
dec
inc
or
test
sub
int3
jle
inc
pushw
movsl
int
add
inc
fldcw
fildll
mov
jo
ret
lods
xchg
lcall
movzbl
bswap
lea
call
aam
flds
jmp
xchg
pop
imul
leave
adc
dec
enter
ss
cltd
mov
cld
imul
fs
jmp
ret
xor
mov
lods
sbb
jle
popf
jecxz
test
loope
aaa
dec
lahf
rcr
mov
add
pop
rcl
mov
adc
sbb
fwait
test
add
pop
pop
dec
shlb
jae
sbb
pusha
or
dec
cmc
cs
jg
lds
push
notb
int3
inc
ret
in
cmp
inc
pop
sub
cltd
pushl
lea
movsbl
mov
push
call
mov
dec
cmp
test
cmc
cmp
neg
mov
test
jmp
pushl
cmp
call
lea
jb
cmc
stc
cmp
cmp
pushf
pushf
call
jns
add
js
jge
das
lcall
movsl
mov
ss
lds
cmc
outsb
jecxz
add
jl
or
mov
inc
js
cmp
popf
je
sub
bound
cs
inc
dec
jo
mov
lds
mov
adc
outsb
scas
fcoms
jmp
data16
icebp
cmp
xchg
xchg
pusha
mov
aad
imul
ret
lock
movzbw
movw
movzwl
call
mov
cmp
mov
ret
lret
and
push
outsl
mov
dec
sbb
or
and
incl
add
popa
mov
cs
jno
inc
shlb
popa
das
xchg
in
adc
sti
in
dec
in
push
push
xchg
mov
or
into
movsb
outsl
cltd
cmp
pop
aas
jno
mov
hlt
sub
rcrl
in
fldt
dec
sub
cmp
icebp
or
pop
mov
shlb
mov
xor
test
int3
and
jne
call
fs
loope
jae
jle
jp
sahf
dec
andl
mov
mov
cli
sbb
jmp
push
popa
pop
out
mov
xor
and
gs
insl
movl
add
mov
mov
pop
in
popa
jns
sub
gs
out
cmp
lds
xlat
sbb
mov
mov
sbb
repnz
dec
jae
nop
mov
cmpl
add
adc
xchg
lret
mov
fs
mov
out
and
and
sub
fidivrs
insl
les
aam
inc
mov
mov
cmc
loop
popa
mov
shll
in
leave
cltd
mov
imul
test
std
ds
mov
xorb
push
fnstenv
fistpll
add
xchg
repnz
int
iret
push
mov
shlw
cmp
mov
nop
pop
add
sbb
test
jbe
fadds
ja
push
mov
bound
xchg
add
mov
es
jmp
cmc
xor
data16
pop
mov
dec
mov
mov
cltd
jecxz
pushl
dec
in
outsb
xor
pop
lods
lcall
popa
mov
cmp
jge
call
movl
pushf
push
pusha
pushf
lea
jmp
lea
jge
pusha
movw
lea
je
stc
bt
cmc
jno
cmp
pushf
jmp
inc
out
fldt
mov
popf
loopne
mov
or
fstpl
jne
cmp
jle
in
push
mov
xchg
push
push
cli
movsb
push
xchg
leave
mov
mov
adc
pusha
mov
repz
push
aas
xorb
pop
loope
add
sti
sub
lea
add
popa
and
and
push
cmp
push
pop
mov
cld
push
clc
push
pop
or
push
mov
cs
sub
popa
xchg
test
xor
daa
repz
mov
cmp
js
popa
pushl
popl
pushf
movb
push
pushl
ret
lea
jne
jmp
push
rep
not
mov
pop
mov
pop
pushf
lea
jmp
setns
jmp
mov
pushf
not
lea
pusha
jmp
pusha
push
lea
call
pusha
jmp
lea
jne
je
call
mov
pop
push
cs
sti
ficoms
jge
fldenv
adc
pop
mov
xor
jns
sub
or
inc
loop
adc
std
mov
lret
std
xchg
rclb
rorl
das
rorl
add
xchg
pop
mov
in
xor
mov
push
dec
jno
faddp
repz
push
fcmovnbe
xchg
ja
stc
loopne
pop
jb
add
add
fidivrs
inc
jle
rol
fwait
out
shll
je
dec
stos
add
jae
push
lahf
sub
cmp
sbb
fimull
inc
mov
cmp
repnz
popa
daa
aaa
adc
fisubs
test
and
fwait
xchg
lahf
xchg
mov
xchg
ljmp
or
dec
dec
push
push
lods
mov
jp
fistpl
dec
or
outsb
in
fsubl
inc
lods
mov
lds
push
sarb
sub
in
cltd
adc
cmc
mov
mov
inc
and
pusha
call
pop
mov
push
fdiv
mov
xchg
ret
out
mov
inc
in
add
sbb
or
mov
inc
shrd
xchg
sub
cmp
scas
pop
pop
inc
adc
mov
iret
jb
xchg
xchg
xchg
in
mov
loope
cmp
or
or
xchg
xchg
mov
not
fnstenv
cmp
mov
mov
int3
mov
insl
andb
jge
lret
pop
xchg
test
and
mov
in
fcomip
mov
lds
or
int
dec
push
dec
sbb
jo
or
inc
xorl
xlat
fildll
pop
push
lods
lahf
sar
fwait
in
ficoms
mov
movl
roll
adc
mov
inc
loope
xchg
lret
mov
icebp
push
mov
out
add
inc
push
ljmp
and
pushf
lea
je
cmp
call
pushf
call
add
inc
gs
outsl
fs
gs
imul
add
dec
clc
call
pusha
jmp
pushf
pushf
lea
je
stc
cmc
pushf
cmp
pushf
pushf
pusha
push
pushl
ret
mov
mov
stc
rol
mov
bt
cmp
cmp
pushf
jmp
cmp
cmp
pusha
cmc
sub
lea
bt
jmp
data16
push
call
icebp
cld
sbb
loopne
push
cltd
lock
leave
stos
fadds
hlt
gs
ret
xor
out
add
dec
jg
scas
cmp
cmp
fistps
add
dec
sbb
xor
mov
jns
enter
fucomp
inc
add
add
and
int
xchg
add
mov
jge
mov
adc
mov
cmp
stc
mov
aas
push
sbb
daa
aad
push
ss
arpl
mov
push
or
or
into
fwait
repnz
movsb
popf
jnp
add
jae
or
movsl
or
pop
xchg
inc
imul
jg
cltd
in
xlat
cli
cmp
adc
add
push
xor
aad
std
adc
pop
mov
idivl
or
sub
pop
cltd
out
cmp
rcll
sbb
xchg
loope
or
pusha
cmpsl
xchg
pop
pusha
inc
cmp
pop
inc
add
xor
push
into
jae
aaa
and
clc
icebp
pop
mov
les
lahf
push
fstpt
adc
fwait
cld
jno
out
cmovne
ret
pop
dec
push
imul
sub
fistl
outsb
mov
lcall
mov
nop
aam
mov
fwait
mov
xchg
inc
sub
sub
rolb
mov
test
lahf
mov
enter
xor
inc
mov
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
popa
add
ss
jo
lea
push
dec
mov
sub
pop
jmp
xor
push
lock
xor
mov
mov
fadds
loope
and
or
pop
push
std
jp
pop
sbb
add
add
jmp
pop
pop
inc
lahf
jge
cld
dec
call
arpl
push
push
add
xor
adc
pop
dec
push
lods
jecxz
popf
loop
daa
dec
mov
mov
mov
and
inc
mov
outsl
cltd
add
push
pusha
pusha
pushf
pushf
lea
jmp
mov
cmc
stc
test
mov
or
mov
pushf
stc
lea
jnp
sub
push
rep
pusha
pusha
not
mov
pushl
lea
jmp
sbb
inc
stc
in
jg
pop
les
mov
inc
dec
in
adc
lds
add
nop
push
mov
dec
cmp
adc
mov
jmp
in
enter
aad
adc
cmpsb
movsl
push
jne
je
add
outsl
dec
push
push
insl
pop
or
jb
iret
dec
pop
push
std
divb
mov
sahf
cmc
cwtl
sarb
mov
jmp
mov
pop
adc
outsb
stos
jae
mov
test
push
lahf
sahf
xor
pop
cmpsl
popf
les
xchg
fildl
xchg
leave
aas
jo
push
frndint
jbe
pop
and
jmp
jo
fmuls
push
adc
dec
in
int
in
dec
je
stos
lea
jecxz
push
xchg
mov
push
add
jp
iret
jmp
into
or
jne
iret
shll
xchg
pop
loopne
pop
mov
nop
xor
push
xor
les
sbb
aam
in
mov
cmpsb
aaa
inc
cmp
xchg
ret
sahf
cltd
or
sarb
test
inc
jno
and
pop
jl
call
and
sub
push
popa
add
push
inc
sub
xchg
fstpl
and
jg
fldcw
stos
in
adcb
int3
test
adc
fwait
mov
rcrl
xor
sub
imul
shrl
adc
jg
xor
mov
mov
mov
out
pusha
jecxz
cmp
in
mov
sbb
addl
pop
fistpll
repz
mov
cmpb
mov
sub
call
stc
shr
pushf
pushf
pushf
lea
je
pusha
pusha
adc
pushl
movw
lea
jmp
xchg
lret
cmp
pop
gs
loope
ja
xor
xchg
movsl
dec
jmp
cmpsl
aaa
push
jns
add
push
and
add
push
push
inc
jecxz
int3
xchg
cs
out
mov
loope
dec
movzwl
loopne
dec
mov
leave
data16
add
sbb
or
lds
adc
stos
xchg
dec
jle
xchg
scas
pop
or
mov
and
rolb
pushf
aas
mov
mov
sub
cs
dec
ds
jo
insb
xchg
xor
lcall
pop
adc
and
and
cmpsb
int
push
cmpsb
mov
push
cmpsl
mov
outsl
cmp
jg
mov
es
enter
jmp
cltd
test
std
mov
out
xchg
jg
mov
mov
pop
lods
out
sbb
fistpl
int
scas
sbb
jae
fidivrl
adc
inc
pop
nop
mov
push
ret
mov
sarb
cmp
retw
call
call
cmp
sub
sbb
cmp
shrl
or
cmp
cmpsl
dec
fwait
xchg
dec
addr16
dec
push
stos
xchg
dec
icebp
popl
mov
lea
rcr
dec
and
popf
fistps
xor
loopne
aad
mov
loope
xchg
jecxz
jmp
shll
lcall
pop
ljmp
and
mov
lea
or
and
add
fwait
inc
sub
addl
dec
sbb
jb
sub
push
cmp
loope
xchg
js
adc
sub
mov
push
shrd
sub
adc
repnz
xor
xchg
enter
nop
shlb
in
mov
jno
in
cld
imul
lds
xchg
iret
les
aad
aam
mov
adc
jecxz
mov
xor
jl
out
cmp
cmpsb
rcrl
inc
stos
in
and
adc
js
imul
inc
rclb
repz
repnz
and
outsb
push
jne
push
cmp
dec
pop
cmp
pmaxsw
xchg
sahf
push
sarb
mov
inc
mov
sub
je
js
into
xor
inc
fisttps
push
std
push
lds
push
stos
dec
stc
stos
or
sahf
push
sbb
or
push
xchg
sbb
mov
mov
add
hlt
das
push
jae
xor
idivl
into
outsl
scas
scas
mov
cmp
shl
xchg
outsb
repnz
push
adc
inc
dec
test
or
fsubrs
std
repz
ljmp
jne
shl
add
pop
in
adc
mov
cmp
inc
loope
or
cltd
aad
dec
icebp
jnp
leave
es
or
push
and
sub
test
loopne,pn
pushl
sub
ss
xor
out
movsl
dec
shrl
fsubs
stos
das
sub
and
jmp
lock
fabs
jle
les
mov
iret
ss
xor
insb
dec
jp
sbb
fldcw
xchg
sbb
jb
inc
mov
mov
test
rclb
fsubl
rcrl
push
adc
sub
ljmp
lods
jo
and
adc
jo
out
cmp
cmpsl
out
sbb
insb
lahf
adc
push
pop
bnd
cmp
test
inc
xor
xchg
push
fs
jns
or
mov
ret
fildll
lods
lret
adc
xchg
sbb
and
sub
add
sub
addr16
xchg
scas
fsubrl
and
mov
adc
xor
mulb
cmpsb
sub
pop
out
lods
in
aaa
fadds
dec
movsb
div
push
adc
push
cwtl
dec
scas
push
fsubl
or
sbb
and
rorl
pop
ss
clc
shrb
inc
xor
lds
xchg
jle
andl
call
mov
js
lret
mov
fstp
cmpsb
or
in
jb
mov
mov
and
push
dec
add
push
call
loopne
dec
jg
test
jl
lods
mov
pop
xchg
in
sbb
inc
or
enter
stos
in
jl
xor
or
mov
xlat
or
adc
jl
xchg
sub
fwait
out
mov
and
ss
lret
imul
cmp
hlt
and
out
cmp
mov
lods
insl
mov
dec
inc
inc
cmp
sub
inc
mov
enter
add
popl
add
pusha
jmp
cmp
pushf
lea
je
call
stos
push
movb
pushf
movb
lea
jmp
jnp
push
cmp
lods
test
mov
fsub
testb
rcrb
aad
mov
sub
cmp
jle
clc
mov
pop
int3
lret
dec
mov
mul
stos
jbe
push
sub
xchg
in
aad
xchg
out
in
jl
jno
or
push
je
sbb
push
cld
and
mov
inc
fldenv
mov
sbb
cmpsl
dec
add
ss
and
repnz
push
lahf
mov
and
adc
test
mov
mov
add
and
ss
mov
stos
jge
cmpsl
lret
adc
ja
imulb
sbb
jle
sbb
add
mov
idivl
fucomip
js
fwait
add
shrl
adc
xchg
test
lods
mov
xor
lahf
hlt
add
mov
jne
push
in
mov
pop
pop
add
filds
dec
stos
int3
orl
cmp
xor
test
sub
add
mov
and
cmp
lret
pop
shrb
fisubs
cld
mov
cwtl
aaa
lcall
sarb
jl
xor
cmp
sub
jmp
pushf
jmp
add
dec
outsl
arpl
inc
jb
add
test
call
xor
push
lea
jmp
pushf
or
jmp
or
div
js
addr16
in
adc
push
nop
in
sbb
enter
outsl
js
fidivrs
insl
arpl
jle
dec
scas
aas
popa
lods
mov
mov
adc
push
nop
inc
jbe
mov
inc
insl
fildll
lods
outsb
push
dec
out
in
popa
js
dec
mov
jne
cmpb
lods
bound
push
mov
inc
xchg
jno
jns
outsl
push
cli
xor
fistpll
push
fcomps
dec
pop
insl
or
mov
imul
dec
nop
arpl
in
push
call
fistl
xchg
vmread
xor
inc
enter
orb
test
fsubrs
push
jnp
in
repnz
mov
jbe
jmp
insb
call
lods
push
push
aaa
outsb
jnp
cmp
add
gs
fs
add
dec
push
push
pop
add
insl
jmp
mov
push
stos
cmpb
mov
das
lret
jb
push
mov
lods
pop
wrmsr
insb
sub
lds
xchg
mov
insl
addr16
dec
movsl
frstor
fsubrl
xchg
or
insb
pop
popa
roll
jecxz
jl
mov
pop
inc
loop
cmpsl
jb
dec
inc
ljmp
out
dec
push
shl
insl
mov
js
pop
ret
xlat
je
insl
insb
push
test
or
testl
in
insl
leave
push
fists
and
fldt
push
sbb
sub
idivb
lea
push
scas
call
cwtl
adc
mov
outsb
cmpsl
sub
out
insl
mov
jle
dec
xchg
fisttpll
pop
lea
cmovns
or
hlt
push
sbb
iret
dec
mov
mov
mov
dec
inc
das
adc
mov
std
or
sub
push
outsb
stos
in
addr16
add
jecxz
fdivrl
push
lds
or
sahf
cmp
jg
cmp
outsb
adc
popf
jbe
add
scas
frstor
and
xchg
js
or
xchg
jle
shr
outsb
jbe
sbb
into
mov
push
into
push
inc
sarb
ret
in
gs
adc
int3
mov
pop
leave
xor
adc
fwait
and
sti
or
dec
cltd
xchg
push
rorb
add
addl
jo
fninit
add
out
lea
xor
repz
loop
dec
cld
add
cmpsb
stos
into
inc
adc
addr16
rcl
jo
push
mov
ret
mov
add
jo
xchg
pop
sti
pop
xor
daa
jo
cmpsb
add
jns
adc
or
xor
push
addb
pushf
jno
shll
and
cltd
jo
addb
dec
loopne
jecxz
mov
mov
push
dec
jo
push
jb
icebp
pop
fs
cmp
and
jo
sub
cltd
scas
inc
and
inc
popf
xor
in
in
out
stc
jo
sbb
push
add
jnp
xor
inc
fcompl
xchg
push
lret
sub
xchg
push
popf
and
test
xor
xor
fmuls
and
pushw
xchg
dec
sub
out
add
add
shr
mov
jg
xor
gs
fs
jne
movb
out
xchg
ficoml
es
xor
jmp
ljmp
in
popf
lea
mov
ja
outsl
sub
arpl
push
outsl
push
push
sbb
leave
out
xor
add
js
xor
push
dec
add
jge
and
aad
ret
and
pop
and
out
xor
adc
xchg
sbb
xchg
sarl
push
fistpll
imul
test
dec
mov
inc
fildll
jae
out
lahf
pop
jo
xor
outsl
jo
jmp
stos
sbb
and
lods
int
push
xor
jo
or
inc
mov
jo
jp
and
pop
fdivs
sub
fidivrl
add
mov
negb
mov
cli
add
push
xchg
xor
mov
lcall
lea
mov
inc
movsb
xlat
dec
cwtl
out
addb
add
inc
test
cmp
insl
dec
mov
outsb
jmp
addr16
lods
ljmp
mov
fbld
test
push
push
and
scas
lods
lret
lcall
dec
out
jge
out
jl
push
jns
and
jmp
in
mov
adc
cld
negl
xor
aaa
push
mov
jl
test
pop
adc
into
mov
insb
out
push
mov
xchg
stos
jb
jl
dec
int
pop
test
std
mov
pop
mov
in
clc
imul
mov
cmp
jo
lret
cmp
jl
fidivrs
jnp
jbe
lcall
pop
add
pop
pop
dec
dec
lods
cmpl
xor
pop
daa
das
sub
out
jmp
cmp
pop
sub
mov
lret
sbb
js
cs
es
inc
fs
in
ret
call
inc
insb
addr16
inc
pusha
inc
inc
pop
outsl
dec
je
das
cmc
xor
push
push
pop
es
or
xor
sbb
push
orb
arpl
loope
xorb
xchg
iret
inc
mov
into
cltd
cs
loopne
xor
insb
out
outsl
sub
jle
push
imul
sbb
push
mov
xchg
inc
ret
push
push
imul
dec
orb
mov
lret
push
jmp
sbb
pop
outsb
or
ret
ds
sbb
push
pop
sahf
xlat
add
data16
shll
sub
add
push
push
mul
addr16
and
push
mov
jb
mov
jecxz
iret
dec
dec
insl
jbe
movsl
rclb
flds
sbb
mov
push
clc
sbb
jge
outsl
and
stos
dec
xchg
js
sbb
xchg
insb
in
pop
xchg
ror
sub
cmp
lods
mov
sub
cli
repz
mov
jmp
lods
rep
and
loop
xchg
push
fldl
popf
push
lret
mov
dec
jbe
pushf
push
push
dec
insb
iret
pushw
mov
push
push
push
stos
iret
pop
add
push
push
data16
adc
das
andl
push
in
out
nop
jp
ja
call
xchg
inc
mov
cs
mov
ja
jecxz
sti
cmpsl
fs
sub
and
lcall
jnp
mov
lods
insl
ja
push
push
xor
call
repz
outsb
aad
or
mov
int
mov
imul
andb
js
xor
jne
jg
outsl
sarl
ljmp
stos
lea
xchg
ds
dec
sub
cmpsb
dec
mov
dec
into
dec
push
movsl
push
cld
std
sub
mov
inc
daa
pop
inc
push
jo
rcrb
nop
jecxz
push
in
xchg
push
lcall
add
rcll
jmp
push
pusha
mov
lea
dec
imul
sbb
iret
push
pop
push
in
cmp
scas
pop
out
jmp
insb
js
cmp
pop
jo
dec
jbe
in
mov
pop
leave
inc
inc
cmp
les
mov
or
jbe
into
push
lret
xchg
punpcklwd
mov
mov
fidivrl
das
xchg
iret
push
sti
shl
xchg
cs
rcll
xor
jae
xchg
test
movsb
or
loop
xchg
je
push
repnz
sahf
notb
insb
or
subb
daa
jge
xor
mov
out
adc
gs
std
insb
ja
push
push
fists
pop
jbe
xor
rorb
cmp
stos
insl
cmp
jle
fwait
push
outsl
mov
xor
pop
clc
and
aam
js
mov
insl
divb
xchg
loope
dec
js
jmp
lea
clc
jmp
push
repnz
out
cmp
lahf
add
mov
out
enter
pop
jb
inc
mov
sub
xchg
and
and
push
and
daa
clc
adc
repz
jb
jbe
stc
das
xchg
insl
push
sbb
fistpl
pop
dec
shll
out
mov
ds
push
cli
lcall
mov
fcoms
sbb
adcb
jle
jge
mov
out
jg
daa
mov
adc
dec
jo
cmp
mov
inc
cli
fisttps
mov
addb
pop
rcrb
sub
jo
xorb
repz
cmp
jb
sbbl
cmp
insb
xchg
fidivl
mov
stos
dec
xchg
shrl
mov
pop
int3
dec
into
inc
xor
adc
mov
insb
shrl
das
pop
test
repnz
clc
add
jg
xchg
cmp
inc
scas
sbb
pop
cs
das
aad
mov
cmp
mov
xchg
mov
in
cmpsl
add
dec
rcrb
lret
out
push
xchg
ja
dec
inc
xchg
repnz
lods
pop
sbb
insb
mov
add
js
imul
jl
movsb
push
mov
out
les
push
or
aad
push
jecxz
shr
push
in
sbb
or
dec
ficomps
add
mov
into
test
push
push
cmp
and
lods
cmp
jg
ret
mov
pop
in
jbe
and
fisttps
lea
push
cmp
pop
gs
cmp
dec
sbb
cmp
mov
cmc
imul
pop
inc
pusha
lods
or
xor
jp
cmp
or
in
pop
hlt
rclb
ret
aam
daa
subb
xlat
repz
push
cli
cld
inc
mov
mov
ja
sti
fisttpl
sub
mov
mov
lds
gs
fbstp
aad
mov
mov
mov
incl
add
push
push
add
mov
das
dec
sub
jae
test
movsb
lods
push
das
pop
push
fwait
insb
add
femms
sbb
jnp
inc
jge
cwtl
add
incb
rorl
out
xchg
pop
adc
gs
jo
subl
jbe
add
sbb
mov
rorb
popf
ret
sbb
arpl
push
pop
push
sbb
dec
add
push
outsl
jbe
insl
push
cli
and
push
pop
jp
leave
and
inc
adc
mulb
lds
pusha
outsl
push
imul
in
mov
mov
in
sub
push
adc
push
jbe
lods
pop
xor
ror
push
sub
insb
xchg
push
rcr
push
jecxz
mov
or
jbe
mov
mov
push
cmp
add
std
xchg
lret
popa
aas
pop
push
fisttpl
andb
pop
inc
dec
mov
lret
dec
dec
mov
addr16
shlb
insl
dec
push
xor
movsb
jecxz
daa
scas
bound
psubsb
stc
inc
icebp
and
jbe
pusha
outsb
lea
mov
push
out
add
mov
sub
xchg
dec
lea
adc
dec
inc
jg
fstpl
faddp
clc
inc
iret
gs
push
sbb
fcompl
push
and
int
xchg
jmp
cld
popa
out
shrb
cwtl
cmp
ljmp
cmc
jno
cs
jecxz
pop
add
out
or
leave
xor
inc
repz
sbb
pop
test
lods
test
inc
mov
sub
adc
push
outsb
mov
and
and
adc
leave
in
sahf
and
lods
daa
sub
pop
mov
adcb
push
jle
aad
ja
lods
mov
movsl
cld
pop
inc
cmp
outsl
jno
clc
push
mov
dec
adc
negb
jne
and
insl
clc
inc
cmp
daa
rcrl
ret
sub
in
scas
or
stos
lock
jnp
jne
push
orb
js
je
ret
dec
pop
andb
mov
daa
mov
movsl
addr16
push
mov
add
jnp
jbe
daa
xor
or
sbb
sbb
pusha
inc
push
daa
add
daa
test
pop
imul
fnstsw
and
mov
push
cmp
add
xchg
mov
mov
aaa
orb
xor
in
add
test
xor
xchg
popa
sub
cmp
dec
clc
arpl
push
cmp
jle
mov
jno
jo
adc
push
dec
sub
add
loop
cmpl
cmp
mov
pop
cmp
add
cmpsl
cmp
and
mov
push
dec
pop
mov
imul
or
mov
fistpll
mov
aas
pop
pop
xchg
jbe
push
repnz
mov
insb
lods
dec
sub
push
add
xor
jnp
and
mov
jmp
xor
push
fists
pop
cs
test
sbb
pop
mov
dec
insl
lret
outsb
xchg
cs
push
inc
lds
xor
add
inc
lods
dec
pop
pop
pop
rorb
adc
jmp
push
jnp
sbb
into
jge
adc
fisubrl
lret
push
sti
out
and
jl
call
and
add
je
cld
xor
outsb
cwtl
in
testb
inc
adc
into
insb
insl
dec
add
hlt
pop
xlat
jl
ret
je
push
call
fmulp
xchg
mov
add
lret
push
and
loope
lret
cmp
pop
dec
and
insl
push
or
decb
adc
adc
cmp
std
pop
pop
push
cld
sahf
cwtl
lock
mov
xor
dec
test
push
push
pop
inc
push
lret
out
push
insl
fwait
ja
push
mov
icebp
push
adc
fiadds
out
movsb
mov
das
jbe
rclb
outsl
rclb
jmp
js
mov
adc
mov
negb
arpl
insb
aaa
popf
jo
icebp
imul
fcoms
lods
mov
cld
outsl
push
add
dec
jbe
push
mov
inc
or
in
divl
dec
xchg
fcoml
outsb
pop
push
data16
in
shrb
mov
mov
cmpb
adc
scas
stc
jecxz
and
das
jmp
jp
mov
mov
and
push
push
or
mov
ffreep
xchg
jle
int3
popa
insl
dec
jl
add
or
das
jbe
in
adc
gs
cwtl
cs
xchg
int
popl
xchg
stc
outsl
inc
ss
xor
push
xor
fwait
pop
shll
adc
mov
xchg
xor
in
xchg
mov
sub
jo
pop
jle
ds
sbb
push
push
shlb
mov
fwait
push
leave
popf
pop
mov
out
sub
pop
fstpt
inc
cmpsl
jl
mov
sbb
jl
pop
jmp
ret
push
rcrl
insb
scas
cs
test
cmpsl
fisubs
dec
push
call
and
push
lea
jnp
mov
out
fsubr
test
icebp
cmpsb
or
pushw
and
fs
jbe
test
mov
gs
lret
jl
sarb
js
push
movsl
push
mov
mov
push
aaa
popf
lahf
negb
js
xor
test
add
pusha
cmp
iret
shrl
mov
test
fldl
dec
jns
inc
cmp
push
cmp
inc
jge
negl
push
push
pop
sbbb
or
test
cmp
bound
mov
ds
cs
mov
cld
xor
dec
outsb
mov
outsl
rcll
mov
imul
insl
dec
cmp
out
push
dec
fidivs
inc
ret
test
cld
jmp
cmp
aas
or
jbe
stos
sub
imul
lahf
mov
xchg
inc
out
inc
dec
jo
into
jl
rcll
jae
les
ja
cli
popf
stos
bound
inc
ror
outsb
xor
or
loopne
popf
rcll
fs
pop
inc
out
push
add
insb
mov
push
and
sti
mov
jbe
int3
pop
cmp
push
cli
pop
inc
in
mov
adcl
ss
xor
scas
push
popa
iret
orb
mov
push
pusha
stos
andb
push
outsb
inc
mov
sub
aam
mov
push
cmpsb
test
in
gs
lea
outsb
jno
jne
mov
and
out
int3
out
sbb
std
arpl
or
data16
insb
clc
es
orb
and
mov
adc
mov
xchg
mov
jns
xlat
cmp
jmp
xchg
sbb
push
jle
and
dec
mov
adc
test
sti
inc
movsl
into
push
dec
dec
jmp
jp
push
xor
pop
xchg
fs
roll
mov
lods
aam
rcrb
sub
pop
ja
push
fmuls
outsb
push
inc
test
outsl
jnp
dec
add
dec
push
jae
mov
inc
ret
sbb
add
mov
int
aad
lods
lea
dec
dec
push
punpckhbw
or
and
jbe
cmc
jns
xlat
xor
sub
cwtl
insb
mov
mov
fs
xchg
imul
imul
cmp
jne
fildll
or
pop
mov
outsl
or
push
jp
add
or
insb
clc
sub
xchg
data16
cld
lret
scas
jg
jno
in
loopne
mov
sub
imul
inc
push
fisttps
lret
pop
pop
outsb
or
cs
push
push
rcrb
mov
shl
test
in
push
push
cmp
cwtl
js
movsl
data16
push
xchg
scas
dec
xchg
push
dec
fs
data16
push
jmp
leave
cmp
jo
shlb
jle
cmc
outsl
mov
nop
stc
iret
aaa
xchg
jns
push
push
sub
arpl
icebp
pusha
mov
jbe
cmpsl
pop
mov
lods
outsl
jl
je
jp
dec
or
out
fs
add
and
jl
jecxz
pop
fyl2xp1
iret
dec
jmp
rcrb
lea
jnp
popa
xor
and
xlat
js
mov
pop
mov
das
in
std
or
xor
stos
outsl
xor
push
adc
scas
jge
test
jne
mov
jle
jns
push
jnp
loop
outsl
xor
pop
jg
aam
xor
sbb
ds
add
rcl
pushf
mov
push
rcr
std
inc
jle
jbe
jmp
mov
cs
jge
dec
jns
xor
cli
mov
test
pop
mov
jmp
shll
dec
sbbb
movsb
xor
add
mov
sub
out
mov
and
pop
pop
add
enter
add
in
filds
xor
inc
add
lods
iret
neg
sti
dec
jne
cmp
stos
sti
lret
mov
push
jmp
outsb
push
pop
loop
inc
jns
cs
ss
in
mov
dec
xor
js
rclb
test
pop
movsb
popa
push
xor
push
dec
sub
hlt
jge
jns
jge
ja
lea
stos
add
sub
add
std
dec
lods
dec
std
mov
mov
push
out
mov
andb
push
fidivs
add
jge
xor
in
cmpl
int
xlat
stos
and
mov
fwait
dec
ss
stc
lea
sahf
and
and
inc
ljmp
cmp
iret
jno
inc
add
cs
fnsave
push
hlt
cmp
hlt
ja
pusha
jbe
push
mov
inc
jo
and
daa
push
mov
add
punpckhdq
xor
jmp
in
jle
or
pop
jmp
jno
es
fwait
xchg
push
insl
ds
or
stc
dec
popa
mov
dec
arpl
jbe
loopne
cmp
outsb
fildll
divb
mov
mov
sbb
or
pop
js
test
rcrl
push
gs
rolb
mov
insl
daa
add
pop
cmp
out
push
xor
xlat
in
inc
lea
adcl
rclb
out
cs
adc
lret
insb
pop
push
add
push
dec
sbb
sbb
cmp
or
inc
das
lods
dec
pop
push
or
lcall
push
add
outsl
mov
jl
mov
jne
stos
push
leave
scas
fs
lods
out
push
fildll
inc
sub
decl
in
jbe
mov
push
ds
std
outsl
pop
js
sar
jnp
cmpsb
cs
push
push
stc
push
mov
mov
inc
jne
dec
or
jb
insb
aam
pop
outsl
pop
rcrb
clc
adc
mov
sub
stos
push
and
sarl
add
push
clc
mov
adc
hlt
add
add
inc
xchg
or
imul
dec
push
xor
movsb
out
mov
push
fdivrl
fidivrs
jmp
lods
jb
into
cmp
sbb
xchg
push
lcall
push
popa
push
push
push
dec
clc
xchg
mov
mov
test
inc
jbe
ds
inc
fs
out
bound
shr
fsubrs
xor
dec
and
out
stos
or
fimull
fisttps
pop
xor
lahf
jge
insl
pop
add
js
xor
mov
lea
outsb
stc
add
addr16
push
scas
shll
mov
xor
push
outsb
xor
arpl
jnp
mov
fnstsw
es
mov
sbb
data16
aas
ja
sub
imul
xchg
adc
xor
andl
fnstsw
add
jne
xchg
lahf
iret
sbb
push
push
jns
xchg
xlat
sub
sub
xor
sub
cmp
or
cwtl
dec
pop
push
push
and
mov
js
jbe
push
cmp
mov
xor
push
out
fldcw
push
das
filds
sbb
inc
push
dec
xor
int3
inc
sub
xchg
aad
cmp
fisttps
mov
pushf
shlb
jnp
pop
jb
dec
dec
repnz
cmp
or
adc
mov
ffreep
pop
mov
addr16
jmp
xchg
in
add
es
dec
aad
iret
clc
push
aaa
sti
sbbb
mov
insb
or
cmp
bound
ror
and
push
pop
and
ljmp
push
enter
mov
std
gs
push
push
roll
rorb
iret
jecxz
add
leave
outsb
xor
loope
test
notl
sub
pop
dec
lds
js
or
jbe
cmpsl
jl,pt
cmp
fldcw
push
xor
test
lret
adc
adc
push
stc
imul
jg
jl
jbe
xor
or
in
inc
dec
lods
pop
outsl
jmp
js
mov
mov
jl
sbb
jnp
insb
dec
pushf
in
cmp
xchg
lods
shlb
dec
addb
outsb
cmpsb
mov
in
jmp
scas
xor
mov
sbb
aad
call
push
sbb
xchg
push
pop
insb
lods
test
inc
sahf
icebp
js
fdivrs
push
ss
jb
fcomps
mov
cmp
pop
int3
out
cmpsb
or
stos
push
xchg
imul
push
jnp
fwait
daa
jbe
sub
out
add
sub
xchg
leave
dec
movsb
cmp
rcr
jne
sub
mov
pop
push
cmp
pop
lods
dec
lret
dec
clc
insb
out
mov
or
mov
mov
lahf
add
jns
and
push
xlat
stos
xorl
jne
xchg
jo
xor
add
outsb
xchg
pusha
push
mov
sub
insb
xchg
push
mov
inc
mov
push
cmc
addr16
stc
cmp
push
fldt
jl
jo
mov
lret
and
call
loope
dec
mov
dec
sbb
lcall
and
andb
fdivrs
rorb
push
pop
inc
xchg
pusha
dec
inc
lds
dec
hlt
out
test
push
ljmp
fadds
lock
and
movsl
out
inc
mov
mov
mov
popa
add
or
xchg
jge
pop
jo
jbe
in
sub
lea
adc
xor
mov
sub
and
out
jns
fidivrs
sbb
lods
ret
xchg
cs
xor
or
fwait
and
inc
and
loopne
repnz
mov
lds
clc
call
ret
shr
cmpsb
mov
push
inc
sub
sub
or
push
jo
js
sub
jmp
cmp
dec
jns
and
addb
push
cmp
test
pop
lret
sbb
sti
lods
or
ss
ret
push
xchg
push
data16
ja
ss
ret
or
xchg
add
ret
arpl
sbb
push
cs
push
jge
and
push
adc
sub
popa
mov
cs
outsl
inc
movsb
push
adc
cmp
and
call
cmpsl
clc
jmp
add
ret
lea
inc
lahf
jo
pop
adc
js
or
xor
adc
pushl
add
ret
mov
test
jo
and
mov
xlat
dec
out
dec
scas
adc
mov
cmpsl
inc
lea
xchg
js
and
movsb
into
std
adc
fwait
popl
add
stc
mov
jnp
jo
mov
arpl
mov
insb
leave
push
pop
lahf
jo
popa
sbb
mov
outsb
rorb
adc
xlat
loopne
imul
insb
lock
pop
push
lcall
in
xor
mov
xchg
push
ja
in
out
in
jg
or
scas
out
insb
xor
bound
je
dec
enter
pop
mov
ljmp
ret
xlat
pop
stc
mov
std
xchg
fs
xchg
xor
mov
sbb
jbe
push
lea
outsb
mull
cli
scas
cs
mov
or
sti
adc
jp
mov
push
fstpt
add
data16
cmpl
out
rolb
jns
jmp
sti
xchg
xchg
lods
and
mov
cmp
lds
push
dec
test
push
fcomps
lahf
mov
and
mov
fwait
outsb
xchg
iret
push
mov
subl
idivb
or
push
scas
insb
je
lea
adcb
in
mov
icebp
sub
sub
adc
adc
jo
mov
inc
and
jb
jo
xor
inc
pop
addr16
outsb
pop
mov
sbb
sub
mov
xor
jo
scas
je
push
inc
fidivrs
mov
push
push
pop
fisubrl
pop
inc
repz
je
sub
pop
mov
ljmp
sub
dec
jbe
cld
ds
mov
out
test
pop
out
daa
and
lods
pusha
lods
push
rol
cltd
add
mov
jge
vandnps
out
adc
jo
jbe
gs
and
test
or
jbe
imul
cmpsl
testl
xchg
ss
gs
shll
adc
mov
in
push
and
icebp
popf
sahf
dec
and
dec
sub
lret
xor
xor
add
imul
rorl
outsb
ljmp
arpl
and
jno
push
fimuls
jmp
jbe
dec
xor
rolb
jge
jle
dec
push
inc
mov
arpl
outsl
dec
cltd
scas
stos
push
xchg
inc
xchg
push
stos
mov
or
sub
stos
cmp
fs
push
or
ret
pop
push
js
push
sub
mov
loope
mov
mov
dec
push
mov
xchg
test
or
dec
imul
je
dec
mov
test
popf
test
fldcw
pushl
jbe
sub
movsl
push
enter
pop
mov
incl
fs
xchg
divl
test
push
pop
ss
std
mov
daa
testb
pop
call
inc
ljmp
sub
loop
mov
fs
mov
ret
sbb
bnd
push
cmp
jecxz
sub
in
hlt
fmull
dec
adc
pop
mov
push
xor
imul
in
test
test
push
mov
or
movsb
mov
pop
movsl
and
and
sarb
sbb
out
pop
fs
std
push
out
pop
mov
popf
push
cmp
pop
std
dec
movsb
push
je
or
rorb
aad
cwtl
or
cmp
and
mov
gs
pusha
call
pop
jl
or
sahf
push
fsubl
fnstcw
fists
das
xor
jge
into
ds
or
pop
push
dec
mov
mov
out
jle
mov
dec
xor
cmpsb
ja
insl
rclb
push
daa
mov
outsl
sbb
lods
into
jge
add
out
push
sarl
scas
cmp
ljmp
jbe
dec
mov
test
frstor
outsl
fimull
shlb
jmp
sbb
jbe
mov
imul
insb
lock
mov
cld
jle
movsb
cmpsb
arpl
out
cs
and
cld
dec
inc
cmp
or
ja
cmp
dec
outsl
dec
out
test
jle
mov
jbe
and
jmp
adc
mov
adc
mov
ljmp
sub
adc
hlt
jnp
sarb
shlb
jno
mov
insb
mov
inc
cmpsl
jbe
push
adc
xchg
cmp
xor
mov
in
push
jp
test
pushf
or
pop
xchg
sbb
mov
dec
jns
or
adc
out
ret
in
inc
movsl
scas
jecxz
es
jmp
push
ss
dec
inc
push
sbb
or
bound
jo
clc
pop
ret
add
jge
inc
das
jl
push
mov
ljmp
jo
fiaddl
mov
dec
rcll
fnsave
sub
cltd
dec
popf
cmp
loopne
cmp
bound
adc
mov
ljmp
movsl
test
mov
inc
cmp
sbb
setbe
scas
cmp
mov
pop
icebp
mov
adc
mov
inc
jg
cmp
sbb
pusha
mov
mov
cs
push
sar
pushf
outsb
pop
lods
or
popa
sub
push
sbb
adc
push
fstps
das
dec
out
push
mov
in
jp
push
adc
adc
sub
popa
sbb
aaa
jecxz
xchg
or
repnz
inc
and
es
mov
popa
cld
js
fcmovu
jmp
xchg
dec
pop
push
jae
pop
adc
in
loop
inc
bound
orb
xchg
fwait
mov
mov
orps
shlb
xor
dec
daa
movl
jnp
mov
js
fs
daa
xor
test
jmp
loope
lahf
pop
rcr
or
mov
notb
sbb
outsl
int
pushf
sbb
js
cmp
add
out
insb
jnp
sahf
jb
sti
arpl
jg
std
mov
push
sbb
or
jo
and
pop
inc
cmp
push
dec
add
jae
mov
in
push
test
jbe
push
fldt
out
imul
into
rcrl
sub
xchg
adc
data16
jl
mov
push
mov
out
add
ljmp
dec
inc
cli
mov
stos
cwtl
jge
sbb
xor
pop
xor
jle
dec
ds
movsb
bound
mov
sbb
stc
push
mov
inc
out
xor
ljmp
mov
push
jmp
lea
mov
xor
xor
push
in
push
daa
js
shll
test
lea
push
daa
xlat
jmp
lds
cltd
ret
mov
pop
movsb
out
inc
dec
mov
aas
xchg
in
mov
or
push
stos
fdivrl
xor
add
psubw
push
xor
lea
push
outsl
sub
pop
dec
xchg
inc
or
or
arpl
xor
add
jns
fucomip
stos
mov
mov
push
push
out
cmp
inc
mov
push
pop
call
fildll
rcll
les
cmc
jg
mov
cmpsb
xlat
cltd
sub
mov
fistpll
jo
enter
pop
push
xor
pop
lods
inc
test
mov
mov
outsb
imul
pushaw
lahf
or
loope
pop
adc
mov
add
pop
hlt
lea
movsl
xorl
lcall
push
pop
adc
or
dec
loope
lea
arpl
cmp
push
xchg
mull
pop
popa
add
jbe
pop
out
pop
icebp
mov
dec
sub
inc
lcall
dec
icebp
outsb
jbe
out
daa
inc
hlt
sub
popa
in
je
push
push
mov
cwtl
cmp
enter
sub
xlat
lds
add
or
adcl
sahf
dec
fcoms
fwait
jb
push
leave
jg
dec
pop
adc
cmpsb
inc
pop
mov
cmpsb
push
sub
sub
dec
and
dec
push
push
inc
jp
cs
daa
push
mov
inc
cmpsb
mov
scas
sbb
mov
adc
orb
push
movsb
negb
gs
dec
jp
mov
or
cmpsb
mov
subl
jge
jmp
inc
lcall
jg
notl
pop
or
sub
fucomi
aad
mov
and
sub
in
adc
dec
fstl
dec
subb
add
jle
add
xchg
orb
stos
pop
sbb
cmpsb
push
cmp
jbe
lods
inc
sahf
out
mov
ljmp
outsl
lret
out
loopne
mov
fisubrl
push
pop
ja
clc
adc
das
iret
sub
movsb
repnz
jecxz
sub
lods
sub
sbb
pop
pop
xchg
out
mov
xor
jbe
jle
push
adc
ss
push
mov
pop
lds
test
mov
sti
icebp
jp
das
fisttps
imul
shrl
push
push
dec
adc
mov
xchg
xor
jle
xlat
insb
push
and
cmp
mov
testl
insl
les
mov
gs
sti
dec
out
pop
jbe
push
mov
dec
and
js
add
inc
mov
cmpsb
add
mov
xchg
push
mov
adc
push
mov
mov
and
cli
scas
inc
sti
popf
outsb
or
dec
sbb
mov
int
and
dec
daa
push
jns
sbb
pop
sub
and
subb
or
push
ret
jge
dec
outsl
rclb
cmpsb
xchg
mov
cmp
sub
push
fldcw
jo
mov
leave
daa
enter
push
or
pop
push
bound
xchg
aaa
arpl
jmp
pop
clc
mov
mov
into
inc
dec
pop
je
add
adc
push
dec
in
push
inc
lds
sbb
sub
inc
stc
mov
mov
push
ss
mov
js
out
cmp
pop
push
out
jg
fdivr
push
sti
jp
loope
imul
or
adc
subb
push
and
out
cmpsb
sub
push
ret
in
dec
lret
add
jle
add
subb
shll
out
xlat
mov
lret
sbb
push
push
loope
push
int
mov
rcrl
push
and
add
std
pop
out
adcb
imul
mov
cmp
in
mov
adc
js
and
repz
cmp
push
fsubs
xchg
hlt
sub
out
inc
int
pop
sbb
lret
lods
pop
dec
push
dec
rcr
xlat
mov
fwait
push
bound
fdivrs
ljmp
addr16
decl
call
data16
es
mov
adc
jae
pop
dec
add
dec
mov
mov
inc
jbe
pop
outsb
sub
cli
jnp
push
push
adc
sub
mov
push
mov
repz
pop
inc
cmp
xor
pop
dec
push
sbb
das
leave
lret
push
cmp
add
jmp
push
leave
jge
push
in
mov
jo
inc
mov
lods
enter
repz
insl
setle
xchg
sti
cmp
jno
call
inc
test
out
imul
fs
lcall
adc
stos
insl
pop
cli
jle
into
cmp
xor
push
push
shll
outsl
add
jmp
add
fwait
push
mov
movsb
inc
subl
popa
jle
xchg
cli
outsl
sarb
jbe
mov
call
in
dec
lods
dec
pop
dec
dec
jg
mov
jle
jmp
mov
paddd
push
stos
xchg
lods
pop
call
sub
rorb
inc
mov
mov
or
lods
push
xor
jns
lds
shlb
xchg
mov
fisttps
push
fwait
push
out
aaa
pop
jg
andl
sub
xchg
or
mov
jmp
inc
mov
inc
push
adc
push
imul
cmp
sub
sbb
xor
mov
and
cli
xchg
mov
inc
stos
push
das
pop
in
cmp
stc
xchg
add
shrb
mov
and
repnz
cmp
cmpsb
dec
sbb
xlat
test
lods
aas
xchg
jmp
cli
jnp
push
rolb
pop
jbe
pop
fsubs
into
outsl
push
sbbb
cmc
and
insb
ret
sar
faddl
or
cs
jecxz
mov
test
dec
ss
test
sub
mov
popa
push
sub
dec
add
enter
outsl
scas
push
out
scas
push
add
dec
jge
mov
clc
xchg
push
dec
xchg
clc
inc
adc
inc
mov
in
pop
push
movsb
cs
incb
dec
stos
mov
add
scas
pushf
in
pop
xchg
push
mov
dec
notb
and
xchg
repz
push
jae
jecxz
cmc
lea
icebp
and
dec
sub
push
mov
mov
jmp
lahf
bound
and
dec
pop
push
js
addr16
cmp
cmp
dec
inc
insl
cmpsb
sub
xor
outsb
cmpsb
out
and
jo
testl
pop
xchg
cltd
pop
hlt
outsb
jne
shlb
scas
sub
addr16
pop
lret
fildll
sub
push
mov
pop
sti
jg
cmp
jo
cmp
outsl
push
mov
or
push
stos
push
lds
sub
setbe
imul
or
mov
outsl
pushf
cmc
test
repz
mov
aam
xchg
frstor
jo
xchg
popf
lahf
out
mov
enter
mov
imul
jo
xchg
push
mov
pop
stc
sbb
and
pusha
push
adc
repnz
fbstp
push
mov
and
xchg
loop
rep
into
cmc
push
xor
fildl
dec
js
and
lock
jp
adc
inc
mov
jnp
push
add
sub
ss
loope
push
enter
lods
jno
adc
add
cmpsb
xor
fs
jmp
loopne
outsb
cmpsb
adc
scas
into
mov
addr16
lock
ret
shrl
push
fildl
sub
jle
jo
stos
adc
sub
mov
js
daa
lret
adc
scas
mov
fbld
fnstenv
inc
and
sti
movsl
insb
add
mov
xchg
pusha
lcall
jmp
clc
out
xchg
pop
outsl
pop
lret
pop
jo
leave
cmp
out
xor
jae
cmp
lret
push
jle
mov
scas
jo
pop
inc
pop
outsl
popa
mov
sbb
out
rcrl
pop
mov
xchg
rcrl
push
out
mov
push
fildl
sub
sub
out
mov
xchg
mov
mull
cmp
mov
inc
jo
ficoms
push
ja
stos
cmp
ja
cltd
lods
or
fdiv
cmp
mov
inc
xchg
push
daa
scas
or
call
push
sbb
dec
sbb
mov
xchg
sbb
js
jmp
cs
mov
jg
pop
clc
movsb
dec
sti
cmp
xchg
or
inc
std
repz
and
cmp
xor
imul
mov
or
mov
adc
push
jbe
mov
jae
push
andl
mov
imul
fimuls
js
cmp
out
pop
add
test
add
xchg
jae
pop
inc
cmp
xor
lods
dec
call
adc
cs
push
mov
shrb
bnd
dec
add
push
jle
mov
fwait
iret
pop
lret
not
mov
jge
and
push
pop
cmc
and
insl
ss
or
add
lret
ds
int
leave
in
nop
mov
jne
in
iret
and
adc
xlat
push
repnz
popa
aas
movsl
mov
dec
ficompl
hlt
mov
mov
sarb
dec
jbe
imul
lea
mov
push
inc
pop
scas
daa
sbb
sarl
nop
insb
iret
jle
cmp
jo
or
cmp
mov
out
xor
push
lock
dec
jecxz
movsb
imul
in
js
das
lcall
pop
lea
cs
jp
test
es
or
fwait
daa
push
sbb
mov
push
adc
jne
jg
push
cwtl
add
inc
inc
push
adc
cmp
cld
cmpsl
pop
outsl
mov
andl
aaa
jno
dec
mov
shlb
test
scas
xlat
or
iret
cmp
es
add
add
outsb
push
das
int
inc
test
pop
cs
add
in
sbb
test
shl
and
sub
stos
movsb
push
pop
lret
mov
fwait
out
dec
rcrb
ret
pushf
jae
cmpsb
pop
jae
lds
jno,pt
push
dec
xlat
sbb
movups
sbb
jnp
pop
sti
loop
iret
js
shrb
imul
outsb
je
jge
push
idivl
xor
pusha
jnp
add
push
inc
ffree
stos
xacquire
or
dec
addr16
in
pop
cltd
mov
cli
and
jbe
dec
jle
cmpsl
push
adc
gs
or
aaa
mov
and
pusha
push
iret
rcrl
movsb
scas
lahf
ja
in
jl
cmp
dec
leave
mov
pop
cmpb
jne
ret
mov
mov
bound
push
arpl
test
adc
iret
imul
fcoms
cld
cmp
popf
mov
sbb
jae
pop
addr16
jbe
sbb
mov
loopne
mov
cmp
or
sbbb
popa
jp
add
sbb
ret
mov
or
jmp
push
xlat
mov
dec
add
fbstp
or
mov
aam
mov
es
rcll
ss
ljmp
out
test
cld
push
adc
xchg
and
mov
dec
test
cwtl
mov
call
test
lea
sbb
in
out
int
cs
jo
jp
addr16
popa
lret
in
xorps
sub
ret
or
enter
pop
in
cmp
sbb
lods
sbb
mov
rorl
mov
add
pop
in
push
scas
jl
add
cmp
mov
xor
sbb
jecxz
mov
jnp
jmp
es
fdivrl
cmp
bound
xor
test
mov
jo
dec
loop
jb
mov
inc
test
jle
dec
pop
pop
inc
fdiv
xor
mov
xchg
push
and
mov
je
das
jbe
aad
add
les
push
push
dec
inc
movsb
or
inc
pop
sbb
scas
scas
pop
fldcw
jns
push
sahf
fistl
js
jo
inc
lods
or
push
inc
mov
fsub
cs
mov
pop
pop
jnp,pn
add
sbb
sbb
pop
push
sbb
mov
out
cli
cltd
inc
cwtl
loopne
cmp
loop
arpl
dec
cmp
xor
shr
push
push
stos
daa
inc
adc
out
sub
insb
mov
mov
out
in
in
mov
daa
lods
ret
adc
jg
inc
jne
imul
in
and
cmp
inc
jnp
push
lock
loope
std
mov
cmpsl
xchg
in
scas
mov
mov
lock
or
inc
aaa
packssdw
inc
lret
jne
rclb
xchg
pop
test
or
shlb
sub
pop
dec
mov
mov
shll
mov
pop
inc
mov
notl
add
sar
aaa
sti
ja
dec
and
ss
mov
jbe
pusha
movsb
mov
and
lock
inc
inc
mov
mov
sub
inc
adc
and
das
mov
adc
dec
aas
ss
loopne
mov
adc
mov
jbe
push
and
js
adc
fdivr
push
pushf
cmp
cmpsb
mov
stc
xor
add
mov
std
sbbb
inc
xchg
pop
pop
or
cmpsb
lods
mov
jno
cld
fildll
jae
add
lods
push
nop
rolb
cmc
push
stos
pop
sbb
shr
sub
les
push
into
xor
pop
push
mov
mov
jns
pop
mov
jmp
dec
mov
test
loope
push
gs
dec
test
adc
mov
mov
pop
push
cli
out
mov
xor
pop
lret
fwait
jmp
outsb
jbe
xor
mov
mov
aam
test
stos
pushf
aad
push
mov
push
outsl
push
and
daa
pop
lea
pop
mov
jmp
xor
sarl
add
jg
imul
dec
fwait
mov
leave
cmpsb
push
ret
movsl
adc
add
popf
sub
movsl
sub
mov
scas
mov
popa
dec
mov
jp
out
push
inc
outsl
lahf
cltd
icebp
fistpl
or
xor
push
fdivl
arpl
push
movsb
push
mov
mov
fwait
imul
addb
jle
push
adc
popf
gs
out
into
fbld
jae
mov
mov
sahf
jb
mov
adc
aas
ss
mov
cld
and
cmp
imul
adc
adc
push
daa
mov
aam
mov
jnp
sub
outsl
or
loop
repnz
cmc
fcmovnb
outsb
lcall
movb
and
xchg
xor
cmpsb
cli
sub
push
rcr
or
lods
mov
jbe
pop
ss
negl
stos
xor
bound
iret
xchg
shlb
ljmp
dec
mov
addl
xor
test
fwait
addr16
or
mov
jge
adc
stos
inc
or
or
mov
push
lcall
xchg
jp
loop
mov
outsl
insb
js
cmp
xor
in
fwait
jnp
fisttpll
or
imul
nop
repz
jmp
add
mov
dec
dec
add
idivb
pop
cwtl
stos
or
dec
shll
pop
les
in
out
sub
xlat
jne
mov
lds
aad
leave
cwtl
xchg
ficoms
jne
popf
arpl
arpl
insl
aas
movsb
push
lret
std
jns
outsb
jno
mov
ljmp
dec
xor
shl
ds
jb
lcall
ret
sub
aam
out
lods
int3
sub
adc
in
pop
adc
push
xor
pcmpgtb
imul
xchg
sbb
adc
mov
cmp
pop
mov
lea
addr16
jl
in
jl
movsb
cmpl
add
mov
and
out
sti
push
flds
decb
mov
rcll
adc
out
gs
mov
jg
or
imulb
sbb
xchg
cmc
test
inc
sets
iret
bnd
icebp
and
mov
cmpsb
stos
adc
cwtl
jo
xor
or
push
mov
mov
sbbb
lcall
dec
clc
and
dec
cmp
rcl
scas
cmpsb
lods
ljmp
lret
add
dec
pop
push
and
clc
jp
cmp
xor
and
dec
jo
sbb
jbe
adc
addr16
jns
inc
sbb
lret
cmpsb
outsb
sti
xchg
mov
sub
loopne
loop
cli
pop
push
push
std
jae
jnp
xor
jmp
lcall
fcoms
dec
add
jnp
push
jp
lods
mov
add
popf
lods
loope
xor
sub
or
inc
mov
push
xor
pop
js
outsl
pushl
pop
sub
clc
in
push
daa
mov
jl
cmp
push
out
dec
pop
lods
cld
stos
je
dec
push
aaa
xchg
push
push
pop
fiadds
mov
je
push
inc
add
jp
cmp
or
mov
ljmp
xchg
idiv
cmp
pop
pop
sub
mov
adc
dec
adc
sbb
cmp
push
jbe
jg
push
aaa
and
mov
push
pop
jl
in
push
repz
test
dec
outsl
add
test
mov
inc
sbb
daa
fwait
lea
push
sbbl
adc
jg
cld
mov
push
pop
inc
cmpb
lret
daa
mov
push
aam
push
push
fdivrs
add
dec
stos
jp
in
pushf
xchg
fs
fs
inc
jns
mov
inc
cmp
fdivr
ret
outsb
pop
mov
jmp
cmp
leave
lret
stos
xor
ja
push
hlt
pop
in
jnp
outsl
mov
xchg
push
jle
push
fwait
cmpb
and
or
add
push
xchg
sub
sub
sbb
ja
jnp
mov
int3
out
inc
iret
mov
lods
gs
imul
lea
or
push
daa
cmp
or
lea
push
cld
and
daa
in
push
js,pn
push
sbb
xchg
xchg
dec
decl
fimuls
push
jle
in
loope
int
push
sbbb
sub
fildll
les
stc
jae
dec
push
lret
adc
or
dec
add
stos
inc
imul
xor
push
xor
imul
and
dec
xchg
dec
sub
cld
mov
jmp
pop
stos
or
xor
faddp
mov
mov
sbb
jbe
jmp
mov
dec
sahf
jnp
jb
loope
fcompl
xor
es
fwait
mov
mov
dec
orb
pusha
dec
add
fst
push
arpl
xchg
push
mov
dec
jle
jp
lret
shll
mov
dec
sbb
cs
push
sbb
inc
outsl
jbe
dec
popf
xchg
xchg
cli
jo
mov
scas
rol
js
adc
inc
xor
jo
cli
jnp
pop
mov
addr16
in
push
sahf
stos
dec
jo
jl
cwtl
dec
sbb
xlat
push
insb
pop
add
fs
inc
pop
cli
cmp
mov
sub
mov
cmp
sub
movsb
scas
popa
dec
jae
dec
leave
lahf
dec
mov
jo
cmp
dec
sbb
sub
pop
call
pop
iret
js
adc
shrb
pusha
lahf
jp
or
test
add
push
fbstp
jp
shld
or
or
push
into
mov
pop
add
push
ficoms
xchg
push
aas
add
ret
cmp
xchg
jg
dec
movsb
jne
adc
adc
gs
jge
shll
arpl
cmp
adc
pop
lods
jbe
push
sub
lcall
jg
cld
dec
je
jp
xlat
add
sbb
dec
mov
pushf
js
jp
adc
ficoms
daa
flds
dec
cli
pop
insl
cmpsb
imul
jl
pop
stos
ror
mov
push
lods
push
and
imull
and
aam
push
mov
mov
push
stc
push
or
adc
push
fwait
push
ret
jb
scas
and
pop
push
cld
sub
jnp
les
in
jo
imul
push
out
fisttpll
lock
idiv
pusha
sbb
jmp
mov
or
jns
sbb
test
jg
adc
jle
sub
test
rcrl
into
dec
lret
cmp
pop
xlat
adc
subl
in
and
imul
dec
xchg
dec
cmpsl
mov
inc
jbe
popf
mov
xchg
je
sarb
push
shll
lock
je
outsl
pop
push
inc
out
or
clc
dec
mov
push
in
xchg
lret
sbb
add
popa
insb
inc
mov
pop
pop
push
jnp
xchg
xchg
sub
mov
lret
pop
cmp
pop
sub
ja
push
or
pusha
jbe
imull
push
addr16
adc
mov
sbb
sbb
call
leave
inc
dec
push
daa
cwtl
lods
mov
or
ss
add
ficoms
les
adc
js
clc
dec
lret
lds
hlt
add
and
movl
dec
dec
mov
lea
lret
cmp
sti
sub
dec
pop
jo
inc
fstp
sbbb
jmp
pop
pop
mov
cmp
push
mov
lods
mov
xor
data16
inc
ljmp
push
sbb
in
push
or
scas
dec
ret
call
push
add
scas
jno
pop
sub
fsts
jge
dec
popf
pop
mov
gs
cwtl
ds
jmp
enter
adc
and
mov
cs
sub
sbb
push
mov
sbb
insl
ja
cmp
xor
inc
mov
sub
sbb
mov
or
dec
mov
std
iret
cld
js
jmp
dec
rcl
inc
or
cmp
outsb
jnp
insl
push
dec
push
lds
shl
ljmp
movsb
test
push
mov
or
cli
cld
fbld
jnp
test
sbb
cwtl
jg
jbe
adc
push
mov
in
jbe
add
mov
add
test
aaa
inc
inc
jle
cmp
ret
jbe
cmp
lahf
adc
push
stc
fmull
push
and
stc
subb
jbe
jge
fsts
loopne
rcr
jmp
ss
mov
rorl
insl
dec
test
xor
ljmp
lods
pop
jmp
sub
jmp
popa
pushf
xchg
dec
or
scas
outsl
scas
jno
stos
outsl
int3
sti
lods
insb
les
lret
aas
into
xor
mov
cmp
test
or
jo
in
leave
push
ret
or
add
rcr
in
pop
push
add
jbe
lret
xchg
jecxz
dec
js
push
and
mov
xlat
and
or
or
packsswb
sarb
lods
repnz
aad
aaa
cli
fstl
out
rclb
jnp
js
jbe
cmpb
shll
das
push
fimuls
jbe
call
mov
jnp
pop
imul
jp
imul
mov
cltd
cli
cmpl
pop
ds
jb
repz
xchg
idivb
popa
jecxz
mov
arpl
lds
push
syscall
data16
pop
in
push
and
push
adc
xor
lock
and
scas
addr16
lock
jl
fs
lock
pop
pop
dec
cmp
pop
xor
and
rolb
imul
cmpsl
xadd
jle
push
push
push
ret
cmp
cmpsl
inc
xor
outsl
cwtl
lds
add
stos
sub
push
ljmp
aad
or
pop
push
or
push
lret
test
xchg
mov
shlb
mov
shl
jle
mov
cmp
add
jae
jl
out
mov
xor
push
mov
out
insl
out
rcl
test
ja
and
sbb
mov
arpl
mov
subl
adc
dec
jge
or
mov
add
insb
sti
push
push
mov
dec
clc
or
xor
push
loopne
out
dec
inc
outsl
cmp
imul
in
rcr
std
xchg
es
dec
lret
incb
mov
mov
leave
jg
mov
or
push
mov
cmp
notl
bnd
out
into
inc
daa
rcrl
fbstp
push
pushf
fsubrs
cmp
rcrl
sbb
arpl
clc
daa
lods
push
jns
mov
push
adc
daa
sbb
jns
xchg
lods
add
mov
jnp
js
mov
push
jbe
movsb
in
mov
shrb
lcall
aas
jle
push
cs
push
or
push
xchg
pusha
std
push
lret
je
cmp
shll
clc
xorl
in
dec
neg
test
out
ret
ja
sub
dec
stos
pop
pop
ret
and
jl
sub
mov
pop
mov
test
ja
jb
mov
xchg
sar
xchg
push
ja
sbb
push
in
sar
orb
jbe
jmp
clc
sti
sbb
repz
cld
dec
and
in
ss
fsubl
loope
mov
stc
sub
sub
in
aaa
jmp
sarl
adc
cmp
pop
clc
and
adc
scas
daa
sbb
dec
or
pop
movsb
dec
lret
inc
pusha
mov
cmp
and
xchg
push
enter
xchg
jp
dec
jnp
js
dec
inc
aad
push
fists
ret
or
clc
ficoms
inc
and
scas
fsts
add
pop
lods
and
pop
fsubrl
clc
push
and
push
data16
mov
xor
insb
or
ror
iret
xor
movsl
xor
arpl
lea
rolb
lods
cmpsb
push
adc
ja
daa
imul
or
movsb
sbb
lds
rol
andb
cmp
cmp
xchg
in
mov
cmpsb
sbb
and
rorl
les
cmp
xchg
sbb
push
xchg
rcll
aad
notl
sti
jmp
imul
sbb
mov
cmpsb
ss
or
lahf
mov
shlb
out
adc
scas
loopne
stos
pushl
js
lods
jge
xor
push
jo
sub
cld
std
cmp
mov
fwait
cmpsb
jo
out
mov
jo
or
hlt
imul
outsl
jae
out
or
imul
out
out
mov
pop
push
sbb
jno
jmp
inc
mov
and
xchg
cmpsl
icebp
push
dec
jle
cli
xor
inc
push
jmp
jno
test
xchg
jo
push
add
jg
bts
push
jnp
int3
jbe
push
cmp
arpl
mov
shrl
pop
xchg
jae
push
adc
push
loope
fbld
pop
pusha
mov
push
sub
mov
testb
sbb
repnz
dec
cmp
or
push
mov
je
aas
xor
movsl
in
outsl
push
outsb
add
popf
mov
mov
add
cmp
push
gs
nop
add
xorb
jnp
popa
pop
pop
push
in
jbe
mov
pop
js
pop
pop
loope
outsb
lret
iret
sbb
xchg
jle
lret
imul
popf
xorb
lods
dec
pop
xchg
leave
jmp
inc
inc
sbb
dec
jno
arpl
inc
adc
or
test
fdivrs
and
push
mov
loope
sti
in
das
cmp
clc
or
push
in
sbb
pop
test
pop
gs
sbb
mov
movsl
cmpsl
pop
lcall
xor
and
daa
leave
fidivrl
lcall
adc
mov
pop
xor
sahf
pop
mov
or
dec
shlb
int
cs
sbb
mov
push
push
or
int
xchg
test
cmpsl
outsb
pop
stos
popa
mov
dec
push
jg
xor
xchg
sbb
push
xor
push
and
push
sahf
in
movq
or
mov
sub
jmp
shrb
xchg
fwait
shlb
add
mov
out
push
imul
inc
mov
aaa
repnz
xchg
out
mov
sarb
dec
inc
int3
std
jne
pusha
fmulp
pop
int
inc
mov
loope
cs
sbb
out
adc
rcll
mov
mov
stos
sbb
test
dec
pop
stc
push
ret
push
pop
mov
sub
push
mov
cltd
call
shl
mov
lcall
and
jl
aam
iret
jns
ds
pushl
shll
mov
pop
insl
or
mov
fiaddl
stos
mov
pop
scas
fs
rorb
addb
xor
mov
dec
mov
jge
inc
dec
je
or
xchg
nop
out
scas
xor
mov
mov
insb
js
mov
lret
fldl
push
enter
jbe
mov
les
cld
add
outsl
push
out
lock
mov
insl
aad
daa
rcll
jecxz
ds
dec
mov
dec
inc
push
adc
or
jmp
mov
stc
and
cmp
mov
jbe
aas
bound
and
mov
lahf
and
ds
es
aaa
push
jge
and
xchg
rol
mov
jb
push
popa
xor
push
cwtl
mov
xor
cltd
add
and
adc
mov
inc
daa
inc
icebp
fs
pop
roll
ljmp
mov
mov
or
push
pusha
ror
cmp
jno
jns
bound
mov
shrl
ret
in
inc
cmp
dec
or
cmp
mov
add
aam
add
ds
jle
mov
and
jbe
jl
sahf
inc
dec
shlb
mov
jbe
pop
dec
cmp
and
fmuls
adc
icebp
jo
shlb
dec
dec
aad
mov
jl
out
ss
and
xchg
inc
lea
aam
mov
sbb
sti
ret
pop
dec
dec
jge
lea
jmp
scas
adc
inc
xchg
sbb
push
push
sbb
mov
in
ja
jg
popf
stos
dec
rolb
xchg
stos
xchg
xor
fucomip
enter
inc
cmc
cmpsb
insl
ret
or
and
js
cmp
jnp
dec
push
dec
int
push
dec
push
dec
mov
pop
pop
push
lret
rcr
sbb
ficoms
pop
adc
or
lret
dec
test
arpl
das
jbe
add
dec
arpl
mov
push
aaa
push
jmp
incb
repnz
jb
mov
add
mov
and
mov
adc
out
ss
jg
add
lods
lods
push
pop
push
push
push
sbb
std
leave
js
pusha
inc
cmp
insb
data16
jle,pn
push
aas
fisttpl
cmp
xchg
xor
insb
imul
pop
stos
push
dec
inc
inc
stos
sbb
push
mov
push
ss
push
pop
xchg
add
addr16
jecxz
pusha
lea
jbe
add
xchg
pop
cmp
cmp
lret
in
lret
xor
gs
lods
inc
xchg
test
in
cmpsb
cli
push
adc
push
xor
push
pop
fldenv
or
xchg
out
sti
les
jmp
sarb
divl
sar
sahf
popa
outsl
cli
nop
and
inc
and
ja
sti
pop
imul
push
rolb
mov
mov
outsb
mov
fidivrl
into
add
jmp
inc
xlat
push
test
adc
cs
or
push
xchg
pop
dec
cmpsl
lds
je
jmp
jne
add
xor
mov
stos
sbb
jnp
enter
pop
outsl
shll
push
lock
add
gs
outsl
mov
push
clc
ja
push
lods
test
and
dec
orb
jg
xchg
xor
cmpsb
jnp
mov
insb
jbe
xchg
shl
push
stc
dec
jbe
mov
sub
push
das
insl
jp,pt
mov
push
cs
jne
dec
enter
xor
vpshuflw
sub
stos
sti
sarl
mov
int3
aas
icebp
cmp
fdiv
or
sub
or
push
pop
inc
pop
addr16
jl
dec
push
mov
or
mov
jo
mov
dec
pop
cmp
cmpb
xchg
adc
push
addr16
xorl
adc
pop
in
cmp
jo
inc
xor
jns
xchg
orb
loopne
mov
sahf
xchg
pop
cmpb
dec
xchg
jo
outsl
mov
imull
rclb
adc
push
arpl
mov
orb
lods
lcall
cmp
loope
pop
mov
adc
dec
lods
or
out
sub
aad
aad
sbb
js
popa
push
mov
sbbl
mov
test
jp
in
jno
dec
pusha
jbe
adc
ds
push
into
stos
sbb
dec
mov
jnp
mov
and
inc
test
dec
push
push
xor
loopne
mov
dec
mov
cmp
push
push
mov
push
std
inc
test
dec
dec
pop
lea
cmp
pop
imul
jmp
test
mov
sbb
or
jge
dec
xor
int
pop
test
lcall
cli
cld
sbb
js
sahf
scas
aam
repz
lea
pushw
test
ljmp
push
cmc
rcrl
dec
mov
cli
push
repz
pushf
cmpsl
loop
shll
xorl
cwtl
push
inc
adc
stos
test
mov
insl
cmp
jle
rcrl
xor
outsl
push
adc
rcrb
push
addr16
fldt
test
ja
add
outsb
int3
push
std
dec
aad
das
mov
cmp
sti
dec
and
cli
shll
adc
lret
and
dec
pop
sub
mov
mov
and
clc
stos
xchg
dec
xlat
imul
outsl
xchg
cld
pop
xchg
test
push
xlat
sbbb
push
loopne
fs
por
and
jae
rcr
xchg
dec
push
fmull
andb
push
push
lcall
and
inc
popf
add
enter
adc
and
pop
bound
push
in
cli
fwait
aas
add
lods
jmp
push
xchg
lret
or
jl
push
dec
inc
dec
push
or
arpl
inc
pusha
sbb
fstpt
jnp
aad
fs
push
xor
bound
outsl
psubb
xor
push
sbb
cmp
test
jg
insl
adc
out
ret
aam
jl
inc
jbe
mov
inc
pop
cmp
inc
jbe
mov
icebp
push
fwait
inc
fisttpll
pop
and
pop
cld
add
pop
dec
push
jle
xor
sub
data16
mov
inc
out
jbe
jmp
push
push
fisubrl
push
loope
inc
out
ret
shrb
dec
mov
or
sbb
in
sub
jbe
or
insl
addl
fldt
ret
jo
arpl
pop
push
clc
clc
push
inc
cmp
fisttpll
or
movsl
or
mov
pusha
fisttpll
iret
jae
inc
inc
and
add
jg
jecxz
adc
jp
loopne
stc
xchg
jns
outsb
in
push
in
dec
jnp
mov
push
repnz
jmp
or
dec
pop
aam
mov
das
add
data16
cvtps2pi
jge
push
sub
push
inc
cwtl
sbb
xchg
push
mov
loopne
dec
neg
add
dec
dec
cmp
add
and
and
pop
cmp
mov
mov
std
pop
push
popf
int
lret
or
jae
mov
jno
rcrl
or
inc
clc
push
add
lret
mov
push
imul
es
pop
imul
aas
and
push
cwtl
shlb
mov
lods
push
cs
dec
cld
jnp
mov
push
cmpsb
movsl
out
jl
sub
cmc
sbb
call
cmp
jle
push
repnz
dec
adc
fnstsw
mov
cli
jl
pop
in
das
xchg
shll
cmp
dec
sbb
lret
mov
call
cld
test
add
inc
push
js
push
cmp
or
iret
lods
and
in
movhps
push
bound
xchg
sub
or
cmpsl
jecxz
dec
in
mov
mov
push
pop
push
adcb
mov
push
and
loope
push
xor
and
xor
mov
mov
push
and
arpl
out
inc
mov
jae
loope
popa
repz
imul
mov
into
and
icebp
xor
lock
jb
imul
sub
mov
jecxz
cmpsb
insb
mov
mov
xchg
mov
sahf
xchg
ficoml
scas
mov
push
xchg
sahf
pushf
push
sbb
push
sbb
sbb
sbb
adc
adc
adcb
adc
insb
and
cld
jae
cmp
int
rcll
push
sub
mov
icebp
lret
jno
lock
lock
sbb
cwtl
lock
lock
imul
mov
dec
call
popf
mov
mov
mov
call
mov
and
sub
lods
inc
aam
mov
cmpsb
xchg
fldt
xchg
mov
xacquire
sahf
add
pop
sbb
arpl
push
cmp
aaa
sbb
sbb
push
ficoml
push
ljmp
aaa
jnp
dec
push
adc
mov
push
cmp
push
or
pop
push
out
and
cli
popa
repz
sub
nop
xor
add
push
out
and
push
movsl
dec
andnps
push
xor
push
xchg
push
push
loope
loope
mov
shl
rorb
dec
rol
push
push
push
push
adc
push
push
push
push
push
push
push
adc
jl
inc
pop
out
cmp
outsl
push
outsb
sbb
sbb
push
push
imul
data16
mov
mov
jg
jle
jge
jl
jnp
jp
jns
js
ja
jbe
jne
je
jae
jb
jno
push
mov
dec
addr16
dec
mov
dec
mov
inc
mov
inc
mov
mov
inc
mov
pop
mov
pop
lret
pop
mov
pushf
pop
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pop
in
and
cld
outsb
int3
insl
pushf
insb
lods
imul
addr16
pushfw
gs
outsb
test
andb
mov
jp
inc
mov
pop
mov
pop
mov
jecxz
addr16
test
jne
ds
call
mov
adc
adc
adc
adc
add
sbb
lcall
nop
sahf
jns
sub
loopne
std
xchg
pop
ss
push
rcrl
sub
imul
mov
jp
jns
js
in
xchg
jne
je
jae
jb
jno
push
xchg
dec
xchg
dec
xchg
dec
xchg
dec
xchg
dec
xchg
dec
xchg
dec
push
dec
fwait
jle
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
lcall
push
addr16
and
aas
push
mov
mov
xor
push
or
push
pop
push
add
push
pop
push
sbb
adc
insl
push
jmp
jmp
push
jecxz
loope
call
push
sti
push
stc
push
notl
push
lret
shl
or
xchg
lock
lock
push
lock
jle
push
repz
repnz
jb
icebp
mov
lock
dec
lock
lock
inc
xor
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
pop
cmp
loopne
mov
add
mov
in
push
jecxz
or
pushf
xor
int
xchg
pushf
nop
lahf
out
mov
xor
dec
fwait
push
xchg
adcb
mov
jge
ja
repz
dec
push
pop
push
adcl
xchg
push
adc
and
loope
mov
mov
inc
mov
fisubl
scas
and
cld
sub
fs
mov
mov
mov
int
or
pushf
sbb
loopne
mov
movsb
ret
cmp
lock
lock
lock
mov
lock
lock
lock
lock
mov
in
lahf
jge
mov
xchg
dec
xchg
mov
pop
xchg
fwait
xchg
xlat
xchg
adc
sarb
out
pop
es
call
mov
xchg
xchg
lret
fwait
into
lahf
xchg
fcmovnbe
sbb
je
push
in
and
sub
mov
cmp
jbe
mov
into
out
jnp
orl
xchg
pushf
rcrb
xchg
jne
mov
int
or
inc
adc
adc
xchg
push
out
mov
movsb
loopne
cmp
mov
mov
mov
xchg
xchg
pop
rorl
jecxz
jg
decl
adc
adc
adc
adc
push
sub
mov
icebp
dec
jno
lock
cwtl
lock
imul
sub
enter
mov
mov
mov
testl
insb
bound
jb
ds
or
pop
mov
push
pop
in
and
pushf
loope
inc
mov
push
pushf
ret
pushf
pop
pushf
outsl
aam
cld
cli
int3
ja
or
mov
std
mov
lahf
fwait
fwait
sbb
popa
sub
push
and
push
mov
push
dec
push
or
push
rcll
xchg
push
adc
and
in
mov
and
loopne
mov
int3
mov
add
shr
outsb
loopne
cld
sub
movsl
cwtl
push
and
sti
mov
jno
into
daa
dec
scas
inc
inc
xchg
les
pop
xchg
ficoml
push
xchg
rcrb
das
mov
jmp
push
movsb
adc
addr16
jg
mov
push
js
mov
hlt
push
xor
push
dec
push
les
push
xchg
add
mov
push
dec
mov
int
pop
jb
fwait
testb
mov
rcll
xchg
adc
je
and
out
mov
mul
je
icebp
mov
dec
mov
ret
fisttpll
imul
in
push
lods
inc
fsubrl
sub
mov
pushf
popa
pushf
mov
pushf
jp
mov
pushf
setl
mov
lret
xchg
iret
lods
jp
repnz
jb
icebp
mov
cmp
inc
decb
lea
push
or
lret
lock
lock
inc
lock
lock
sbb
pop
loop
mov
xchg
mov
cmpsb
loope
cmp
mov
call
insb
rcll
adc
adc
adc
push
xor
repz
dec
out
bnd
sub
out
mov
adc
jae
andl
gs
mov
int
push
add
pop
dec
push
stos
sub
in
negb
fwait
insl
add
adc
xchg
test
arpl
fistl
push
xchg
push
adc
pusha
and
push
push
push
mov
push
hlt
push
jb
mov
insb
lock
add
fdiv
sarl
outsl
repz
repnz
jno
lock
lock
imul
hlt
mov
dec
cmpsb
fildl
xchg
fists
lods
push
mov
or
push
insl
and
sub
jl
cmp
and
loopne
mov
imul
lea
inc
xchg
gs
fs
arpl
sbbb
jl
jnp
jp
fstpt
ja
jbe
jne
je
jae
jb
push
push
dec
push
dec
push
dec
leave
in
dec
push
mov
mov
inc
mov
mov
pushf
pop
push
pop
pop
sbbb
rcrl
push
shll
mov
push
xchg
push
aam
mov
sti
imul
xchg
imul
adc
bound
popa
adc
in
jl
jnp
jp
jns
mov
jne
je
jae
jb
mov
dec
mov
inc
jae
pop
jmp
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
sahf
push
sbb
and
iret
jle
add
imul
dec
lock
adc
gs
cmpl
xchg
aad
adc
gs
jmp
icebp
mov
cmp
daa
jae
inc
push
xchg
or
mov
inc
lahf
push
popf
push
sbb
lds
out
jecxz
push
imul
dec
mov
int3
jns
ja
ss
mov
dec
into
xchg
dec
xchg
mov
fwait
lret
pusha
rcr
push
je
popa
pop
cmpsb
rorl
outsl
fwait
dec
stos
xchg
andl
cmpsb
jge
jnp
clc
mov
into
popf
int3
xchg
xchg
fwait
dec
pusha
xchg
pop
xchg
sbb
rcl
ss
nop
push
scas
arpl
cmp
jg
cld
adc
adc
arpl
push
lock
mov
jp
lock
sbb
lock
shrl
mov
cmpsb
ret
movsb
mov
fwait
jg
jge
lret
cmp
inc
mov
mov
lret
xchg
xchg
fstl
xchg
xchg
rcll
insl
loop
push
test
es
arpl
push
cmp
cmp
push
repnz
lea
mov
jp
mov
shlb
mov
push
in
xor
call
mov
mov
stc
xor
push
dec
rorb
gs
mov
fisttps
inc
pop
adc
pop
out
imul
iret
je
mov
xchg
jle
mov
je
jb
iret
adc
adc
ja
inc
lret
pushf
mov
sbb
rorb
test
nop
fwait
mov
stc
js
in
inc
movlps
inc
adc
adc
adc
adc
push
xor
rep
jae
bnd
cmp
jp
testl
dec
push
xchg
push
inc
push
sahf
dec
imull
push
mov
out
mov
lahf
fs
lock
lock
cmc
clc
xor
leave
pushf
xchg
pushf
pushf
push
lcall
ror
jbe
sub
ljmp
lock
jl
stc
lock
lock
lock
mov
lock
cld
shrb
push
push
aam
xor
jp
into
jae
test
jno
lock
cld
cmp
ret
mov
lret
ja
inc
push
test
test
mov
pop
mov
mov
scas
loopne
lret
stos
jl
cmp
loopne
cmpsb
aas
scas
repnz
dec
pop
iret
push
int
dec
cld
mov
lahf
dec
sahf
xchg
sbb
cmp
adc
mov
cmc
popa
movsl
daa
mov
jns
xchg
aaa
xchg
xor
ror
push
jle
adc
bound
and
push
adc
dec
push
jns
push
xor
cld
ljmp
stos
lea
cmp
adc
adc
ja
mov
ljmp
pop
push
std
xchg
lods
push
sarb
jmp
push
stos
lds
sahf
aas
xchg
cmp
cmc
ret
jns
mov
mov
inc
test
mov
pop
mov
mov
mov
lret
xchg
push
rclb
stos
push
test
call
mov
mov
pushf
adc
pushf
inc
pushf
inc
pushf
add
push
inc
push
cltd
adc
adc
adc
scas
mov
lods
pop
data16
movsb
and
xchg
notl
mov
dec
xchg
mov
inc
dec
rcr
dec
push
stos
sbb
xchg
scas
arpl
andl
jl
lock
lock
lock
mov
pushf
mov
adc
adc
adc
adc
lock
mov
dec
push
test
mov
mov
xor
jno
dec
mov
lret
or
xchg
add
cltd
xchg
pop
rcll
imul
ljmp
push
mov
test
mov
lock
or
loope
lods
addr16
pushf
lahf
popf
popf
sbb
adc
rcll
adc
mov
repnz
gs
out
mov
pushf
jns
ja
hlt
cmp
adc
adc
adcl
gs
pop
mov
xlat
xchg
adc
sbb
jmp
imul
push
mov
mov
xor
mov
into
mov
xchg
add
pop
cmp
sbb
pop
adc
insl
cmpsb
stos
mov
mov
push
jnp
jno
ret
xor
lret
mov
mov
pop
mov
mov
mov
loope
stos
inc
dec
in
and
stos
mov
lock
mov
cmp
xchg
add
adc
adc
adc
adc
push
scas
mov
lods
iret
movsb
mov
jnp
lods
jecxz
pushf
xor
repnz
push
pushf
lea
popf
inc
cmpsb
jns
push
sbb
push
xchg
cmp
push
imul
cmpsb
sbb
ds
mov
je
mov
gs
mov
mov
or
mov
xchg
mov
outsl
and
lods
loop
jp
jne
mov
push
mov
and
pop
in
ficoml
push
xchg
ret
adc
xchg
ret
and
mov
dec
inc
imul
ret
adc
in
mov
xchg
and
and
stc
jmp
mov
mov
xchg
into
xchg
or
or
xchg
ret
push
popf
ret
sbb
push
push
roll
insb
dec
out
imul
ljmp
xlat
std
jnp
test
lret
mov
ret
or
mov
in
and
ja
cmpsb
push
jecxz
jg
mov
adc
jle
sub
and
adc
mov
inc
or
or
mov
lret
stc
out
mov
in
lods
sbb
ja
repnz
adc
push
aaa
ret
mov
or
mov
std
xchg
sbb
arpl
in
dec
test
cmpsb
mov
sahf
add
mov
rorl
loope
mov
push
loopne
ds
stc
lock
lock
std
lea
roll
lcall
nop
push
scas
loop
sub
imul
and
sar
jns
test
mov
pop
push
pop
lret
stc
test
lret
sahf
lahf
ret
push
xchg
xchg
rcll
dec
mov
mov
xchg
sub
bound
out
ret
mov
adc
mov
mov
push
adc
adc
inc
in
fstpl
pushf
sbb
popf
aad
stc
adc
cld
ljmp
jno
lock
lock
mov
mov
stc
or
roll
cmpsb
sahf
push
fstpt
pushf
push
lahf
out
loope
mov
xchg
fwait
adc
pop
shl
js
mov
mov
xor
dec
stc
mov
ret
lock
mov
xor
int3
fucomip
inc
push
lock
lods
inc
sbb
fnstcw
ret
adc
xchg
xchg
adc
push
insl
sbb
jno
and
loopne
mov
mov
mov
mov
xor
pusha
enter
add
adcb
fwait
push
sbb
push
push
lret
scas
dec
bound
fbld
pop
lock
and
jg
gs
lock
lock
xor
push
lock
pop
xchg
lds
pop
xchg
popf
xchg
pop
xchg
cltd
xchg
pop
xchg
aad
adc
pop
stos
outsl
loopne
lahf
lret
ljmp
mov
cmp
cli
adc
xor
ret
mov
xchg
xchg
add
jp
lock
mov
cmp
ja
adc
and
call
bound
lea
cmpsb
int3
cmp
test
ljmp
ljmp
pushf
pop
popf
fsubl
xchg
aad
push
adcl
and
outsl
sub
das
push
insb
ja
test
out
movsl
push
and
add
mov
aaa
shl
push
dec
repnz
adc
pop
gs
mov
jo
adc
cmpsb
roll
xor
in
jmp
int3
test
mov
pop
mov
jp
mov
xor
ret
inc
lock
cld
lret
jmp
roll
cs
push
cmp
test
mov
or
gs
inc
lret
hlt
es
jo
inc
aas
loope
imul
add
push
push
jl
lock
lock
lock
jp
fistps
cwtl
ja
aad
adc
outsl
push
pop
push
imul
mov
mov
mov
lret
fmull
or
mov
sahf
mov
xchg
adc
bound
fcmove
addr16
ljmp
vphaddubq
dec
arpl
or
xchg
push
push
les
mov
pushf
mov
pop
daa
xchg
aas
subb
sub
enter
mov
dec
clc
jge
jg
push
mulb
lea
xchg
add
jle
adc
mov
mov
push
mov
xor
outsb
and
push
lods
je
push
sbb
mov
mov
xor
dec
jnp
ret
shl
mov
inc
lock
add
add
pushf
fcomps
rcll
outsl
mov
insb
push
dec
cmpsb
push
adc
sarl
dec
stos
js
out
icebp
je
lock
lock
mov
mov
pusha
pusha
fwait
insl
pop
rcrl
dec
test
mov
out
and
loope
mov
loop
loop
and
push
cmp
mov
ljmp
repz
push
je
lock
lock
lods
jae
cmp
push
adc
adc
in
sub
and
sbb
out
out
aas
and
xchg
ja
mov
out
rorl
shrb
data16
fidivs
sbb
rcll
cli
imul
sbb
cmpsb
push
gs
adc
adc
test
lock
iret
lock
lock
dec
lock
inc
loop
andb
mov
xchg
cmpsb
push
cmp
adc
out
jae
in
push
sub
push
dec
leave
test
mov
lret
sarb
cmp
out
hlt
push
jae
push
mov
int
dec
push
or
or
add
add
in
std
mov
or
lods
das
popa
in
pop
out
jb
icebp
in
movsb
lock
mov
cmp
vaddss
or
pop
les
lock
fdivp
sbb
push
push
xchg
push
push
push
out
and
insl
loope
mov
jecxz
mov
jp
inc
test
or
mov
add
xchg
iret
test
mov
mov
fistps
xchg
sbb
xchg
xchg
rcl
scas
repnz
jmp
inc
pop
cmpsl
inc
call
call
cmp
mov
fildll
cli
shrl
pop
test
mov
mov
lret
fldl
or
push
adc
lret
fcmovnu
test
lret
inc
dec
mov
push
cmp
cli
or
xchg
repnz
mov
pop
dec
push
or
dec
icebp
or
mov
fcomip
sbb
cltd
lock
stc
xchg
vprotd
inc
push
push
out
fsubr
subl
cmpsb
pop
int
mov
das
iret
cmp
loopne
jbe
mov
lock
lods
dec
popf
or
push
lock
lock
push
clc
fsubl
pop
jns
nop
dec
cs
pop
aam
inc
jle
in
add
push
mov
inc
sarl
aaa
push
mov
outsl
loopne
push
jo
lea
jl
inc
stc
mov
jg
adc
jb
push
push
jp
lock
adc
sbb
loopne
ljmp
lcall
lock
cmp
jbe
divl
lock
xchg
js
movsl
lods
inc
lahf
pushf
sbb
pushf
fcomps
push
jp
lock
clc
shr
imul
mov
addr16
jb
daa
mov
mov
jbe
mov
jae
mov
jmp
adc
mov
jg
and
cs
fcoml
sbb
sarl
clc
out
in
repnz
mov
pop
cmp
call
xlat
jno
or
cld
or
popa
out
ret
cmp
sahf
adc
adc
sbb
push
adc
and
scas
jae
mov
sbb
mov
dec
cmp
push
clc
cmp
jb
mov
int
rorl
inc
test
lret
dec
add
or
xchg
push
pop
push
pop
dec
adc
and
movsb
in
scas
lret
jmp
inc
push
mov
loope
inc
ret
movsb
imulb
push
into
inc
shlb
addb
mov
popf
ja
mov
jb
lock
cld
scas
fsubr
sub
and
jle
scas
pop
jns
cmp
jb
iret
xchg
mov
inc
and
adc
adc
adc
adc
mov
jnp
bound
ret
daa
repnz
loopne
jp
std
lods
inc
stc
pop
ja
je
xor
jns
push
int
lret
mov
mov
rcrl
ljmp
arpl
push
bound
popa
push
idivb
push
notl
inc
pop
jmp
pop
push
fsubrp
or
add
jb
mov
xlat
dec
je
mov
in
stos
jns
aas
and
jg
cld
enter
lret
mov
jb
outsl
in
push
jae
or
push
add
mov
pop
cmpsb
fmuls
xchg
adc
scas
mov
ljmp
nop
and
cmp
dec
mov
dec
mov
mov
daa
add
ficoms
popf
adc
jb
push
push
sbb
push
mov
into
outsb
popa
jmp
int3
bnd
mov
jle
cmp
stc
ss
xor
dec
lock
roll
mov
fcompl
xchg
aad
push
in
and
cmpsb
stos
mov
daa
inc
outsl
and
adc
push
aaa
sbb
xor
repnz
lods
fisttps
outsl
inc
popa
int3
daa
inc
pop
js
fisubrl
adc
xchg
je
repz
cmp
cmpsb
sub
fstpt
jb
mov
jno
stos
xor
out
xor
dec
stos
lret
lahf
int3
enter
fs
push
push
mov
sbb
aam
repz
cld
lods
pop
xlat
iret
jle
jb
lock
sarl
jle,pt
sbb
push
adc
jae
leave
enter
mov
pop
lock
push
fistl
push
fcoms
push
adc
dec
mov
scas
push
pop
ljmp
stos
jecxz
dec
loopne
sti
adc
adc
hlt
cs
sbb
sub
cmpsb
xchg
dec
test
lahf
pop
cmc
jmp
pop
dec
cwtl
push
push
push
adc
rcll
and
lods
iret
leave
test
dec
lret
and
scas
dec
aas
xchg
jl
stc
pop
mov
mov
cmovge
incb
rol
jns
test
mov
lahf
loopne
xchg
lcall
pop
dec
aas
out
ljmp
aam
inc
xchg
jle
cmp
cmpsb
mov
dec
mov
decb
mov
jo
ret
daa
add
inc
cld
lret
repnz
jl
adc
cs
imul
das
inc
in
push
mov
cmovge
fwait
ss
hlt
shll
pop
int
dec
mov
dec
xlat
insb
cmpsb
rorl
fstps
jg
inc
ror
ds
adc
stos
out
in
jecxz
and
mov
pop
push
lock
xor
divb
pushf
iret
pushf
or
clc
xchg
fcmove
incb
fisubrs
push
xlat
add
aam
xchg
mov
lret
outsb
pop
sub
icebp
and
cmpsl
repz
jns
test
mov
pop
gs
sar
enter
roll
push
mov
push
icebp
mov
lcall
test
push
push
lock
inc
dec
bound
stos
jne
push
sbb
in
pop
dec
mov
mov
mov
sbb
dec
sbb
adc
shl
scas
out
mov
imul
mov
fisttps
push
notl
mov
lods
push
mov
lock
or
adc
in
push
rcrl
pop
push
cld
mov
das
in
lret
sub
ja
fisttps
push
jg
adc
jno
mov
repnz
push
mov
rorl
push
incb
jno
mov
sbb
cltd
and
adc
out
jae
cmp
movsb
out
into
jecxz
lods
outsb
lcall
push
cmp
stos
mov
dec
push
decb
js
xor
test
mov
mov
mov
mov
push
push
outsb
push
sub
out
xchg
std
mov
dec
aaa
fwait
xor
repnz
mov
mov
lret
pop
push
call
lock
xchg
lods
ficoms
mov
xchg
sub
cmp
iret
mov
jne
mov
adc
into
adc
mov
dec
inc
push
pop
adc
pop
adc
adc
shll
popa
in
mov
sub
cmp
mov
arpl
adc
adc
adc
mov
push
adc
popa
dec
in
decb
loop
push
fstl
push
sbb
add
push
inc
loopne
nop
cmovge
fbld
test
lret
aas
push
cmp
cli
push
cmp
push
je
dec
stos
jno
decb
jb
lock
fistps
pop
js
push
cmp
out
cld
sub
mov
pop
jns
mov
int3
stos
clc
ds
repz
inc
lock
mov
jb
mov
rcrl
and
loopne
rcll
jno
add
arpl
sar
jnp
icebp
aaa
push
mov
cmp
popa
int3
mov
out
pop
popa
int3
in
decb
subb
inc
jne
xchg
ds
pop
lahf
adc
repz
sub
pop
sub
out
cmpsb
out
loop
adc
cmp
int3
stos
xor
jne
int3
in
roll
lret
inc
shl
cmpsb
fisttpl
int3
fcomps
jb
mov
clc
jno
stos
es
sbb
mov
add
inc
iret
movsb
int3
and
jle
push
inc
enter
ror
mov
aaa
insl
push
pop
push
jnp
repnz
std
push
dec
pop
push
mov
test
arpl
inc
cmpsb
cmc
outsl
push
sti
movsb
inc
pmaxsw
inc
inc
daa
adc
dec
push
lods
add
daa
divl
enter
push
mov
into
mov
ljmp
lock
ds
adc
and
sbb
in
dec
loop
sti
xchg
sarl
dec
cmp
mov
adc
shrb
jno
gs
ret
dec
push
dec
lret
pop
or
mov
rorl
in
mov
in
test
ljmp
sahf
mov
jbe
cli
mov
dec
int3
ds
inc
outsb
fadd
imul
or
js
lods
popa
push
pop
addr16
jp
cmpsb
pop
daa
ja
out
dec
dec
roll
int
ds
inc
in
mov
je
sbb
jmp
inc
fsubl
inc
mov
push
cmp
jmp
push
mov
push
cli
dec
jmp
ret
into
daa
fidivrs
jb
jne
push
test
hlt
stos
mov
cld
push
jns
sub
mov
jb
xor
int
mov
dec
lock
cmc
xchg
sar
fcomip
fstpt
test
mov
mov
psubusw
and
lock
jne
push
cmp
or
mov
data16
pop
orb
dec
pop
push
lret
jmp
sbb
push
pop
lea
or
jne
push
add
popf
adc
movsl
jnp,pn
inc
pop
xchg
frstors
sub
cmp
es
in
mov
daa
sti
sub
ss
adc
sarw
lods
ret
data16
std
jbe
addr16
adc
push
dec
daa
pop
jmp
jnp
mov
mov
adc
leave
outsl
pop
mov
jecxz
mov
iret
jl
lock
sar
out
insl
test
or
mov
pop
test
xlat
cmpb
daa
cmp
inc
hlt
daa
xchg
xchg
inc
push
push
push
pop
outsl
repz
jae
stc
push
push
jmp
jnp
roll
mov
push
lret
fimull
jnp
fsubs
in
mov
in
mov
mov
cmc
push
mov
jno
adc
push
mov
dec
outsl
or
jl
lock
stc
pop
daa
dec
fwait
jl
shll
cmpsl
push
xor
int
dec
xchg
or
dec
loope
push
add
ja
cld
pop
rcl
xchg
xchg
rcll
mov
call
stc
mov
jmp
ljmp
ljmp
mov
repz
cmp
ljmp
stc
in
in
popa
push
daa
leave
push
shl
lock
or
and
mov
jb
or
pop
sub
and
out
mov
push
jae
lock
mov
jno
fists
adc
js
jge
loope
sub
sarl
dec
rorl
enter
dec
insb
push
bound
lods
inc
dec
test
pop
sarb
push
jmp
or
je
pop
adc
pop
jle
mov
loopne
cld
addr16
addb
lret
dec
push
pop
and
daa
pop
and
pop
sbb
clc
push
push
push
lret
push
add
pushl
push
jo
outsl
clc
outsb
lods
out
insb
imul
je
movsb
data16
in
fs
arpl
jl
adcb
jle
pop
ljmp
pop
js
jns
jbe
jmp
imul
test
lret
dec
pop
testb
mov
jp
lock
ds
lret
movsb
inc
scas
gs
pop
pop
pop
in
mov
pop
lret
dec
pop
mov
push
push
push
push
lret
xbegin
loope
cmp
sbb
loopne
daa
imul
adc
popa
jbe
ret
je
jae
cs
mov
out
mov
cmp
mov
jns
inc
in
and
rclb
or
add
pushf
popf
xlat
jp
lock
push
cmpsb
insb
jp
inc
jge
fs
aam
mov
xor
repz
mov
jmp
inc
leave
push
adc
daa
adc
addr16
stos
sub
mov
daa
push
cmp
xor
sar
mov
add
push
pop
rcrl
jp
push
mov
mov
dec
imul
ret
stc
cmpsl
lods
fiadds
jns
cmc
addr16
mov
mov
dec
push
leave
mov
pop
lahf
adcb
and
scas
shlb
mov
push
adc
sub
jl
inc
lock
adc
fistps
lret
inc
cmpsl
pop
fsubrl
std
jmp
dec
enter
push
dec
inc
jl
fimuls
sub
sub
mov
dec
fisttpl
outsl
sti
imul
in
inc
mov
mov
rorb
adcb
repnz
cmpsl
cmpsb
jne
ja
inc
ljmp
cs
leave
pop
jl
ret
push
jne
ja
fs
pop
call
stc
adc
pop
rcll
les
adc
loope
jmp
std
mov
enter
lahf
dec
add
fwait
push
adcb
push
cmp
scas
in
xchg
push
cli
lahf
push
push
shrb
mov
jno
jb
repnz
loopne
ljmp
test
push
push
xchg
enter
fildll
jb
mov
inc
push
add
push
test
lret
push
push
int
dec
shl
out
mov
push
pusha
movsb
lock
in
pop
pop
ficoml
push
adc
mov
push
icebp
and
cmpsb
sbb
inc
xchg
outsl
dec
lret
push
sub
jge
cmp
jae
stos
xor
push
dec
lea
jl
hlt
imul
cmpsb
pop
and
push
js
jae,pt
cld
inc
shrb
dec
outsb
jmp
push
lret
daa
push
into
stos
jl
in
jp
jns
iret
ljmp
or
inc
int
push
dec
add
or
cltd
push
push
cmpsl
mov
mov
jl
mov
loop
pop
in
arpl
fidivrl
cli
lock
jno
lret
jbe
cli
rep
pop
mov
popf
scas
addr16
daa
push
and
loope
dec
ret
push
in
adc
pop
stc
in
inc
cmpb
addr16
jbe
jecxz
or
enter
les
adcb
adc
xchg
push
roll
or
lods
push
xor
out
pushf
out
std
cld
fdiv
shll
inc
testb
cmpsb
js
push
sahf
inc
pop
mov
pushf
xchg
popf
in
jp
jae
repnz
std
loope
pop
sti
xlat
mov
inc
outsl
mov
inc
jmp
fst
pushf
jnp
mov
jmp
ret
daa
in
dec
ds
loopne
and
mov
xchg
jg
inc
dec
and
mov
test
jecxz
mov
push
jle
lret
push
dec
lds
or
fdivr
int
rorl
fisttpll
pop
or
dec
das
pop
lods
dec
bound
dec
push
mov
fs
dec
mov
dec
rcr
pushf
add
shll
gs
lret
in
sti
popa
jmp
mov
cld
mov
icebp
add
gs
pop
jae
fsubr
out
jecxz
mov
out
mov
mov
mov
lds
push
fists
dec
stc
stos
cwtl
push
daa
in
jb
stc
out
pusha
loope
mov
xor
test
mov
ret
mov
fstl
pushf
ja
xchg
or
idiv
jnp
in
movsb
mov
dec
loope
in
out
dec
into
cld
mov
push
fwait
iret
stos
pop
bound
jl
mov
xchg
xchg
shrl
push
dec
cld
popa
lods
jo
lods
xor
mov
pushf
rcrb
and
fnstenv
test
ljmp
jmp
jbe
mov
in
popf
push
outsb
lock
cmp
movsb
and
push
jp
jb
lea
in
adc
fsts
mov
cmp
scas
push
dec
pop
fcoml
movsb
je
cld
outsl
mov
push
ja
subb
lods
and
int
ficoml
pop
insl
mov
push
lret
in
int
fiadds
lea
mul
mov
rcrl
sub
daa
sub
andb
and
dec
stos
cmp
aaa
loope
pop
xor
scas
push
xor
push
int3
out
lock
jp
lock
rcr
popf
cmp
push
dec
push
push
xchg
push
adc
into
das
xor
fildll
xor
lock
mov
cmp
mov
mov
mov
psrlq
or
adcl
inc
pop
xchg
rcll
aad
scas
inc
js
stos
icebp
test
daa
lahf
push
and
mov
test
mov
push
mov
xor
stc
mov
push
or
or
pop
test
lret
and
rcrb
cwtl
mov
jle
xor
stc
scas
fists
rclb
mov
fldenv
mov
mov
ja
lods
push
mov
aad
xchg
cmpsl
jae
rorl
push
push
or
roll
popa
push
addr16
pop
mov
add
enter
pop
outsl
adc
push
jmp
mov
push
sub
daa
push
movsl
inc
cmpb
dec
cmp
cmp
push
xor
mov
packsswb
or
dec
ljmp
std
add
or
fwait
stos
cwtl
rcll
pop
ljmp
bound
pop
pop
repnz
cmp
in
jp
mov
cmp
call
dec
dec
xor
testl
mov
add
adcb
pushf
push
sbb
stos
sbb
inc
movsb
das
and
xcrypt-ctr
cmpsl
sbb
into
and
inc
jl
mov
cmp
clc
ss
cmc
mov
cs
lret
fisubs
push
stc
mov
dec
data16
pop
pop
cld
mov
ljmp
aam
outsl
andb
cmpsb
mov
inc
push
ror
pop
add
add
inc
daa
sub
cmp
inc
and
pop
adc
out
jbe
cmpsb
cmp
mov
inc
jae
jo
bound
fs
push
push
lds
data16
pop
outsb
bound
fs
push
push
bound
andl
in
movsb
iret
insb
jl
dec
push
cmp
lock
stc
test
lret
jb
or
imul
inc
pop
je
push
push
push
outsl
inc
imul
in
in
loope
daa
ljmp
cmp
jg
cmp
sbb
out
cmp
sbb
in
in
loop
mov
or
xlat
fiadds
inc
mov
pop
jb
ljmp
ja
mov
pop
leave
cmp
pop
loopne
and
jne
popa
xchg
cmpsb
stos
and
sbb
loopne
shr
popf
ja
mov
jno
ljmp
dec
dec
ljmp
insl
ret
dec
je
or
cmp
pop
mov
or
lds
testb
xlat
lods
leave
jecxz
jp
mov
mov
hlt
mov
mov
adc
in
loopne
mov
out
das
loope
jge
sti
push
fnstsw
pop
jmp
ficoms
pop
xor
push
push
dec
jmp
pop
aam
imul
out
stos
test
cmpsb
sbb
jge
lret
or
int
jno
leave
in
mov
fcom
ljmp
sub
or
pop
imul
das
loopne
mov
sub
mov
jecxz
inc
andb
xchg
push
push
shl
call
in
inc
call
cmp
inc
push
popa
jno
into
outsl
clc
pop
xchg
lods
insb
pop
sbb
pop
mov
inc
pop
cs
jnp
scas
mov
mov
dec
jmp
cs
loopne
cmp
lds
mov
push
mov
arpl
and
push
out
sbbb
subb
addl
pop
fwait
out
sbb
gs
bound
arpl
shll
or
push
ror
scas
mov
test
sarl
pavgw
daa
aaa
mov
xor
ret
push
dec
jns
ljmp
out
push
sbb
push
mov
jle
stc
aas
aam
fldt
lods
leave
jae
sub
movsl
mov
and
sar
push
fdivrl
jae
push
xor
jmp
outsl
rorb
addr16
push
inc
shll
insl
fwait
or
cmp
cmpsb
das
and
sub
sbb
xor
test
mov
cli
shrl
mov
aas
pop
push
ret
push
lahf
inc
dec
pop
add
js
xchg
mov
outsl
fwait
imul
mov
cmove
inc
jg
int3
sbb
dec
xchg
adc
loopne
mov
in
nop
outsb
mov
push
mov
inc
jge,pn
cmp
xchg
sbb
popa
pop
mov
arpl
mov
in
out
or
aam
pop
adc
int3
push
lret
ljmp
or
ja
sbb
in
filds
pop
jmp
cmp
jp
fbstp
push
fmuls
push
push
adc
inc
or
jnp
jmp
imul
negl
repnz
lret
rorl
cld
push
movb
push
dec
jl
xor
arpl
cmp
sub
mov
lcall
inc
sub
fs
sbb
loope
out
jae
ljmp
fidivrl
jg
mov
shr
mov
fistps
adc
adc
dec
fs
lret
xchg
cld
or
pop
ficomps
data16
pop
sbb
jb
inc
adc
imul
xlat
xchg
pop
mov
cli
jecxz
fsubrl
mov
int3
xchg
mov
pop
jp
add
mov
xchg
jmp
incb
int
inc
cmpsb
icebp
in
push
jmp
iret
ffreep
pop
in
insb
arpl
stos
or
lret
int
and
inc
out
fld
lods
inc
rcrl
mov
push
shrl
sub
je
dec
fmul
loop
ror
sub
popf
xchg
fsubrp
jne
in
repnz
dec
in
outsb
loope
cmp
dec
mov
jle
cmp
roll
jle
pop
adc
sub
pop
ljmp
repnz
scas
inc
dec
jle
bswap
hlt
dec
testb
loopne
xchg
dec
popa
mov
jcxz
inc
jns
mov
daa
inc
aad
pop
es
mov
dec
shlb
clc
mov
dec
dec
adc
jge
loop
sbb
gs
mov
outsl
and
inc
stc
das
inc
fldl
je
out
jg
pop
mov
leave
shr
push
pop
imul
sub
and
ja
pusha
pop
js
test
sti
mov
lock
notl
push
fs
cmp
int
mov
push
jle
pop
ljmp
je
cmp
pusha
and
push
mov
or
adc
fs
cs
jmp
or
mov
push
popa
mov
xor
sbb
cmp
and
push
pop
cs
loope
shrb
cltd
psrad
icebp
pop
and
test
mov
mov
pop
jmp
hlt
push
dec
pop
jnp
data16
cmp
and
mov
movsb
mov
push
fmul
inc
leave
fs
push
cld
out
push
loopne
js
sarl
bnd
faddl
lea
cmpsb
outsl
xchg
xchg
rclb
test
into
stos
jp
dec
dec
ret
dec
inc
fisubl
inc
scas
aad
push
scas
shl
jecxz
pop
push
mov
in
jp
std
lahf
fbstp
mov
ljmp
fcmove
adc
cmc
or
js
rcr
fs
and
push
lret
jb
cli
sti
test
mov
cltd
fistps
fdivl
repnz
lahf
clc
call
pop
stc
movsl
push
lret
out
ds
out
xor
push
stos
pop
adc
inc
aad
jmp
mov
fbld
jmp
inc
shl
cmpsb
mov
and
test
pop
adc
push
push
push
pop
rcrl
iret
into
cli
jae
ljmp
in
shl
movsb
mov
loope
enter
mov
xchg
lods
fistpl
cs
ljmp
mov
dec
insb
xchg
test
jmp
push
pop
icebp
push
in
lret
sub
jle
and
aas
fld
cs
out
add
lock
inc
pop
imul
iret
pop
enter
in
jno
cmp
mov
dec
add
daa
rorb
cld
in
jl
jg
aad
push
push
push
push
je
icebp
push
jno
cld
push
dec
jnp
mov
cmp
bound
inc
jl
push
lods
aad
enter
mov
shll
popa
pop
sarb
bnd
push
popa
mov
adc
cs
pop
jns
cld
cs
lock
stos
jnp
addr16
imul
pop
jmp
push
je
lods
ja
je
cli
adc
ficoml
shlb
jnp
int3
jns
dec
ja
lods
jl
jp
cld
jae
ljmp
dec
popf
dec
jl
cmp
cmpsb
inc
cmp
inc
arpl
inc
mov
into
inc
mov
inc
cs
pop
pop
fs
cld
pop
sahf
inc
out
inc
out
cmp
callw
ret
into
push
inc
push
pusha
shrb
pop
pop
pop
push
inc
pusha
inc
movsb
pop
das
cmp
lcall
sahf
jle
jge
les
dec
inc
js
lods
in
jbe
jne
push
jae
jb
jno
fbld
mov
outsl
dec
adc
lods
loop
inc
in
inc
movsl
lahf
fiadds
pusha
je
lock
stc
pop
ffreep
pop
rorb
pop
inc
ficoml
dec
jae
pop
jl
rorb
push
xchg
ljmp
ljmp
std
push
inc
stos
fs
bound
sbbb
inc
ljmp
mov
jbe
iret
out
je
xlat
test
lret
jg
rol
test
mov
dec
push
inc
add
les
mov
fs
push
pop
push
out
pop
scas
jl
push
pop
shrl
push
lods
cli
push
pushf
push
popf
push
jp
rep
mov
xor
push
jmp
bound
adc
push
stos
popa
jl
xchg
jle
jge
sbbb
inc
jle
pop
sbb
pop
cmc
lods
cld
pop
push
shl
pop
mov
xchg
push
rcll
stos
push
add
pusha
and
pop
stos
insl
lahf
std
imul
push
jge
push
sbb
js
popa
scas
pop
jg
jle
cli
jl
jnp
jp
test
lret
push
jne
je
das
fnsave
aad
push
dec
mov
dec
rorl
inc
ret
dec
in
je
repnz
jmp
push
jae
inc
jb
cs
jge
int3
sbb
loopne
dec
dec
lock
test
mov
ret
inc
cmp
shrl
jmp
pusha
pop
rcrl
lock
mov
je
mov
pushf
push
popf
push
pop
aam
outsl
clc
outsb
iret
shrl
fisubrs
imul
adc
adc
shll
jle
jge
jl
jnp
fnstsw
outsb
mov
sbb
jae
jb
lods
notl
shrl
dec
and
loope
inc
cmp
aam
dec
int3
insl
push
insb
shr
test
ljmp
push
gs
jno
add
popa
push
orb
iret
jle
jge
lods
jge
jb
std
jns
dec
ja
aad
jne
xorb
jecxz
shrl
dec
adc
shlb
lahf
incb
inc
jno
ljmp
jge
push
mov
data16
lock
test
mov
sbbb
push
jge
jl
das
je
test
stos
jbe
enter
fcomps
jno
push
lret
dec
pop
jno
or
dec
inc
iret
and
xchg
cs
inc
cli
jmp
inc
push
pop
inc
inc
clc
jmp
pop
dec
pop
mov
js
mov
push
das
push
push
inc
push
movsb
push
je
mov
push
outsb
push
insl
push
insb
mov
push
lods
gs
lret
pop
arpl
dec
cmpsb
jg
fistpll
in
test
add
dec
adc
in
inc
aam
dec
movsb
dec
dec
jge
shrb
lock
clc
inc
cs
inc
repnz
test
mov
popa
pop
push
pop
dec
push
stos
pop
dec
ljmp
lods
aad
jp
pop
popa
rep
mov
add
dec
push
in
addr16
fstpt
jnp
inc
in
jb
add
cli
repnz
hlt
sub
shr
pop
jmp
andb
and
cli
jecxz
das
outsl
arpl
inc
in
jae
bound
loope
mov
inc
and
sub
lcall
daa
and
pop
cld
jns
pop
jo
xor
xor
cmp
cmp
ljmp
dec
data16
cmp
out
sti
lret
mov
rolb
jno,pn
je
mov
jmp
dec
pop
and
dec
stc
stos
cmp
sub
inc
dec
fidivl
gs
pop
lret
inc
gs
lock
fistl
pusha
popa
bound
inc
cltd
loope
pop
mov
scas
push
out
and
mov
in
pop
and
inc
cmpsb
and
fwait
mov
stos
iret
cs
lea
hlt
std
push
scas
icebp
mov
insb
in
and
cld
sbb
jb
cmpsl
gs
and
jne
in
dec
std
pop
jecxz
lret
lds
in
jae
or
imul
pop
ja
push
iret
lret
mov
dec
push
ficoms
popa
add
sbb
roll
dec
jp
xchg
in
fs
fwait
ds
enter
mov
loop
push
shr
xor
lds
mov
or
push
rcrb
pop
jle
mov
loopne
pop
jb
sub
scas
push
and
jecxz
dec
mov
sub
xor
adc
cmp
push
arpl
add
cmc
dec
loop
popa
inc
cs
loopne
stos
jbe
outsb
jl
and
pop
cmp
iret
inc
pop
cmp
leave
dec
aam
push
cmpsb
rorb
push
je
dec
and
inc
loope
dec
dec
loope
lret
bound
cli
cs
jge
mov
xchg
push
xor
push
inc
push
or
stos
fs
push
pop
mov
xchg
outsl
and
test
data16
xor
mov
lret
or
int3
pop
sti
loope
jmp
mov
jg
sub
cmpsb
jmp
andb
and
cli
mov
push
imul
js
inc
clc
push
push
jmp
hlt
cmp
pusha
ret
mov
sti
hlt
stc
test
fisubl
adc
es
outsl
mov
test
pop
or
mov
xchg
or
mov
cld
gs
lahf
cmp
and
pop
pop
rcr
jae
pop
adc
out
into
in
pop
pop
pop
outsb
mov
sub
jp
mov
dec
stos
pop
push
mov
sbb
mov
push
ret
push
dec
cmp
sahf
pushf
mov
jmp
shr
fwait
xchg
stos
adc
pop
mov
fdivrl
call
add
and
mov
fwait
cmp
scas
adc
pop
ss
mov
subl
dec
cli
lea
aas
mov
aam
int3
cmpsl
mov
inc
adc
jmp
sbb
lods
push
pop
aam
cmp
cmp
rclb
inc
enter
bnd
sub
sahf
rcrl
test
mov
push
in
test
arpl
shrl
sbb
jle
pop
pop
call
outsb
adc
aam
fdiv
pop
sub
add
jge
sbb
pop
sbb
shrb
stc
lahf
or
lods
inc
jno
pop
les
lods
jne
xor
int3
sub
in
jmp
cwtl
sbb
push
sub
or
jmp
sub
jecxz
andl
pop
lea
pusha
mov
push
mov
jmp
add
cmp
add
add
add
add
add
adc
push
add
test
add
test
add
add
add
add
test
add
jp
icebp
outsl
push
loop
lods
int3
or
mov
jecxz
jmp
fld
fldpi
and
mov
aam
xlat
mov
sbb
stos
adc
mov
pushf
adc
or
lcall
fcompp
sbb
arpl
mov
jg
add
pop
test
iret
fwait
add
je
and
pop
pop
enter
push
mov
ret
out
xchg
inc
bound
stc
aas
scas
cmp
mov
rorl
hlt
mov
inc
push
addl
jge
nop
pop
mov
pop
and
mov
ret
and
push
push
jle
pop
xor
mov
ja
cmc
pop
ds
jge
sub
jecxz
aam
lods
mov
mov
lods
add
cmpb
jns
mov
frstor
scas
hlt
call
and
fnstcw
xor
into
xchg
lock
adc
inc
jecxz
mov
lahf
ret
cmc
pop
orl
test
in
aaa
arpl
add
cmp
jp
js
mov
cmp
jge
push
adc
test
cmp
mov
push
cld
data16
out
sub
push
or
adc
out
adc
dec
outsb
scas
inc
cmpsb
icebp
mov
xchg
stc
lods
xor
imul
xor
push
adc
mov
icebp
mov
cltd
mov
jbe
cmp
or
decl
lock
jg
les
in
inc
xor
cmp
dec
or
call
sahf
xor
pop
dec
ret
repz
adc
inc
loop
push
jo
lret
nop
cs
mov
imul
outsb
lods
xchg
insb
pop
cmp
sbb
push
outsl
inc
mov
shrb
inc
sti
mov
mov
ja
inc
xor
sbb
xor
hlt
into
xchg
sbb
into
mov
aad
mov
das
test
das
hlt
rcrb
and
data16
outsb
std
sti
fwait
lods
scas
push
adc
fsubrs
call
gs
outsl
mov
push
mov
jns
in
push
sbb
aam
mov
jbe
aas
inc
into
lcall
fs
xchg
std
loope
stos
fmul
push
out
rol
cwtl
and
in
repz
jno
bnd
adc
push
call
push
jae
in
adc
mov
mov
shrl
loopne
mov
aaa
ljmp
pop
mov
aas
aas
sub
mov
in
mov
fbstp
jle
inc
push
pusha
les
mull
mull
adc
inc
inc
add
lods
xlat
sub
ds
repz
push
sbb
jmp
es
out
push
mov
push
jecxz
aaa
clc
inc
test
push
mov
adc
push
idivl
jnp
or
and
cld
lods
ss
xor
lea
add
jnp
shll
insl
ret
lods
out
xchg
pop
scas
push
stos
jge
xchg
pop
aaa
iret
jns
icebp
jg
push
lock
in
int
movsl
push
push
cmp
add
ficoms
push
or
cli
jmp
clc
xor
aad
sbb
rol
mov
pusha
bswap
push
jg
in
je
inc
dec
mov
sbb
push
sub
pop
and
test
xor
cld
cmpsl
mov
pop
out
cld
nop
adc
sub
mov
stos
mov
out
or
mov
jmp
test
aas
mov
or
lret
cli
insb
mov
sahf
sub
jno
insl
mov
dec
xchg
cmpsb
repnz
outsb
jae
xor
stos
cmp
and
lea
pop
inc
mov
nop
jp
add
xchg
outsb
mov
ljmp
and
xor
dec
test
mov
fdivrs
movsb
or
xchg
sarl
cwtl
cmp
lret
mov
jae
mov
mov
nop
and
int
add
sbb
pushf
sbb
out
add
outsl
adc
rcll
sub
pop
mov
loope
movsl
xchg
dec
fnstsw
sub
cmp
mov
cmp
dec
sub
repnz
mov
aam
cmpb
aam
sub
outsb
add
cltd
fimuls
in
jmp
loope
icebp
pop
push
pop
jl
inc
push
fsubs
pop
inc
sub
pop
sub
or
cli
add
pop
sub
lret
mov
cmp
bound
out
mov
push
or
xchg
xchg
clc
pusha
loopne
test
xchg
lods
je
jne
fwait
inc
fucomp
and
jo
test
insb
into
adc
outsb
inc
jmp
into
nop
and
xlat
sub
pop
mov
popa
adc
stos
fldenv
js
pop
cmc
add
sub
sbb
push
shlb
fisttpl
push
mov
in
sub
push
roll
sahf
cli
stos
into
fldenv
mov
push
sub
inc
lock
inc
cmp
ljmp
xor
mov
xchg
pop
cmp
in
lret
mov
adc
xchg
and
or
inc
pop
inc
jns
adc
mov
fisttpl
shrb
leave
idivl
jl
sahf
in
es
notb
xlat
mov
rcrb
ret
test
outsl
jmp
jne
inc
fmull
mov
stc
sahf
push
iret
xchg
pop
ss
stc
dec
cmp
fstpt
in
mov
push
push
lods
mov
mov
arpl
add
pushl
js
loopne
and
or
or
xor
into
sbb
mov
mov
dec
add
mov
movhlps
ja
test
or
rcrb
mov
mov
iret
xor
mov
outsl
dec
xchg
lods
pop
lods
cmc
lds
pop
ljmp
loope
sub
inc
pop
and
jecxz
pusha
jo
push
mov
testl
push
cmp
jle
int3
pop
xchg
mov
cmp
fildll
nop
jmp
inc
mov
sbb
xor
cmc
popf
aam
lods
adc
lods
cmp
sub
ja
bound
jp
ret
push
loop
les
push
sub
and
loopne
out
or
in
outsb
cmc
xchg
fs
jl
jo
pop
push
mov
cli
pop
cltd
js
cmp
mov
lods
mov
popf
and
mov
pop
pop
sbb
ljmp
hlt
jge
adc
mov
xor
lret
aad
push
addl
sbb
lahf
mov
xchg
mov
xchg
xchg
sub
shr
sub
xchg
mov
push
mov
imul
cmp
cmp
das
mov
pop
mov
out
mov
cmp
or
xchg
lret
pop
and
and
dec
shll
pop
xor
pop
adc
repz
outsb
test
popa
or
sub
adc
push
ss
ficompl
popa
sbb
negb
jns
push
ds
mov
mov
or
mov
dec
ja
loopne
es
jns
sub
jmp
test
add
mov
out
mov
cmp
iret
mov
lods
addr16
dec
lods
jae
addr16
push
xor
xchg
cs
fwait
es
add
or
dec
cld
pusha
sub
push
push
in
test
lahf
hlt
mov
addl
daa
js
lock
out
jns
xor
lcall
in
repnz
lahf
xchg
mov
mov
cmc
and
pop
outsl
sub
out
jp
push
hlt
cmp
mull
cmpsb
xchg
fs
inc
movsb
or
std
int
jne
push
mov
in
or
bound
cmp
jnp
push
and
outsl
mov
fsts
fisubrs
add
ds
stc
lods
adc
xor
pop
jne
dec
out
sbb
mov
and
popf
sub
pop
mov
in
movsl
and
mov
jmp
xchg
xchg
cmpsb
sbb
xor
cmp
mov
mov
test
sbb
mov
xchg
jae
mov
sub
sti
pop
push
pop
imul
shrl
add
add
mov
or
mov
fcompl
cmp
mov
leave
pop
pushf
lcall
sub
cmp
mov
or
sbb
push
scas
xchg
inc
jmp
adc
jno
lret
and
pop
fdivrs
dec
insb
adc
repz
or
xchg
bndldx
pop
jp
xchg
jae
pop
std
add
cltd
pop
and
mov
sbb
movsb
in
fs
jno
inc
in
inc
jg
fstpl
xor
ret
adc
aaa
popf
das
sub
adc
divb
mov
sbb
fcos
fistl
push
movsb
adc
xor
ja
lock
mov
gs
pop
int
add
mov
loope
scas
mov
push
in
lret
xchg
sbb
sub
mov
test
addr16
jmp
push
shrl
and
ror
hlt
inc
push
sbb
cmp
sahf
stos
lcall
aaa
call
aas
sub
inc
inc
stos
add
cmp
jle
pop
lods
pop
dec
mov
xor
bound
imulb
push
sbb
lock
push
fwait
xor
pop
jl
mov
xor
mov
adcb
faddl
inc
in
pop
cmpb
jae
pop
call
push
imul
or
lds
cld
xchg
add
adc
sbb
xchg
pop
sarl
push
aam
ds
push
std
leave
push
mov
js
inc
into
ret
mov
pop
es
movsb
cmp
cmp
shll
outsl
mov
dec
outsl
movsl
mov
aam
xlat
mov
dec
nop
dec
je
jne
leave
outsb
ljmp
or
mov
dec
addr16
push
bound
call
xchg
mov
testl
mov
testl
aas
dec
sbb
cmp
adc
adc
jbe
sahf
inc
outsb
lods
inc
mov
sub
push
in
push
cld
or
call
test
insb
dec
mov
negl
jb
pop
adc
dec
lods
jns
shll
inc
jmp
lods
adc
mov
es
or
clc
pop
mov
les
sub
jbe
popa
lds
and
xor
out
hlt
pop
add
aam
jmp
mov
rorb
xchg
ljmp
xlat
jb
sbb
nop
popa
sbb
xchg
add
add
pop
movzbw
cwtl
movzbw
lea
lahf
movsbw
mov
pushf
lea
ja
push
lea
jb
bt
jmp
imul
fs
jns
mov
inc
mov
pop
stos
int3
icebp
vfrczss
mov
shl
addl
shrl
sbb
lahf
insl
rcrl
jno
mov
aas
pusha
mov
les
push
sbb
dec
je
js
out
sahf
xor
fwait
cmpsb
pushf
dec
jecxz
pop
jl
jno
insb
ljmp
xchg
jle
sbb
repz
sub
call
cmc
dec
clc
sub
imul
pop
xchg
mov
mov
dec
out
mov
cmp
ja
pop
add
and
adc
add
sbb
add
sub
push
adc
add
add
add
add
ss
add
add
add
pushf
mov
mov
lea
jae
bsr
mov
movsbw
mov
clc
movsbw
mov
bt
pushf
xor
jmp
seta
lods
cmc
call
jmp
movb
lea
jne
pusha
call
push
cmp
pushf
call
cmp
pusha
movb
lea
ja
pushf
add
sub
movsbl
rcl
neg
lea
add
neg
mov
pusha
mov
cmp
repnz
pushl
lea
jne
movzbw
cwtl
bswap
movzbw
movb
call
add
push
insb
gs
xchg
push
movl
call
adc
push
call
lea
jb
test
test
cmp
test
cmp
jmp
cmp
jmp
pushf
call
outsb
lret
call
testl
clc
jns
add
cmp
lret
xchg
sahf
mov
push
mov
mov
push
sbb
dec
jge
outsl
ret
xchg
jae
repz
lock
fisubs
ja
jg
xorl
xchg
in
jmp
dec
cmp
mov
in
sbb
out
inc
jo
jp
jo
pop
jae
and
stos
lret
mov
mov
add
add
cwtl
cmpb
jno
loopne
mov
fcoml
jmp
fstl
jmp
push
pop
pop
mov
dec
outsl
mov
dec
enter
int3
xchg
mov
dec
jmp
mov
sub
ret
rcrb
in
jl
xchg
mov
sub
inc
fucomp
dec
mov
inc
push
or
rcrb
test
pop
cmpsb
out
aaa
mov
cs
rcl
sub
add
jnp
pop
xchg
cmp
dec
test
aaa
scas
sahf
lock
add
ljmp
inc
jae
jo
cmp
xor
inc
jmp
jb
clc
insb
neg
testl
dec
mov
cmp
out
repnz
sti
je
mov
sahf
mov
imul
gs
in
jno
mov
jo
push
in
imul
notb
or
cmp
loope
in
xor
inc
ss
frstor
inc
int3
mov
pop
in
xchg
jl
inc
arpl
push
sahf
push
mov
imul
add
in
das
pop
mov
jmp
cmp
mov
push
mov
outsl
add
popf
lea
cli
add
loop
ss
mov
in
lods
cmp
addb
popf
addb
mov
fsts
hlt
xor
out
add
push
mov
mov
dec
add
mov
shrb
xchg
inc
or
and
jmp
xchg
mov
mov
pop
pop
cmp
aaa
dec
add
stos
and
das
inc
push
into
sti
sub
stos
xor
iret
pop
les
jne
aaa
loopne
pop
repnz
lahf
adc
movsl
in
mov
adc
xchg
or
mov
movsl
xor
add
loopne
dec
xchg
jnp
cmp
mov
adcb
in
jl
cmp
dec
xchg
test
push
test
dec
mov
xlat
xchg
jo
inc
test
lods
xchg
cli
ljmp
mov
push
notb
rcrl
push
xchg
xor
add
imul
jo
jle
fs
pop
add
inc
sbb
xor
jo
sbb
shrb
pop
push
shl
mov
cli
dec
iret
std
xchg
sub
push
sub
push
push
or
sub
lds
enter
int
xor
and
sub
imul
push
insl
jmp
jmp
aam
and
lock
push
arpl
inc
sbb
fadds
mov
out
pcmpgtd
into
xchg
pusha
rcr
cmc
bsf
mov
stc
add
bsr
lea
mov
stc
rol
mov
xchg
adc
sar
xadd
mov
clc
rcr
not
sar
xor
lea
mov
xchg
lods
cmc
shl
neg
rol
pusha
push
seta
rol
not
setb
jmp
push
loopne
sub
fcompl
pop
add
jbe
cs
ljmp
roll
sub
pop
xchg
xchg
sarl
mov
push
sbb
mov
xor
aas
jne
pop
jl
insb
cli
and
and
subb
je
push
mov
cwtl
cmp
cmp
adc
shr
test
pop
int3
xchg
das
out
and
sub
inc
notl
hlt
push
cli
loopne
call
and
cltd
inc
and
jmp
pop
lods
jecxz
jecxz
leave
sub
lret
pop
testb
lahf
lods
inc
es
sbb
xor
loopne
lahf
cmp
cmc
or
cmp
ja
rcrb
lret
sarb
cmc
lock
mov
fcoms
testb
lods
inc
or
stos
dec
repz
and
and
orb
push
push
jle
jo
cs
fwait
pop
popa
add
or
adcl
mov
add
and
incl
cmp
mov
jmp
push
jbe
lods
out
in
jp
int3
dec
jbe
or
fwait
push
nop
sbb
cmp
test
xchg
mov
faddp
push
adcl
mov
stos
aaa
mov
sahf
test
fdivl
inc
inc
mov
dec
sub
aas
loopne
cmp
pushf
rcrb
insb
dec
cltd
mov
inc
sbb
pop
xchg
pushf
push
pusha
lea
je
push
movb
add
cmc
movb
cmp
pusha
pushf
lea
jb
cmc
cmp
pusha
jmp
subl
stos
test
cwtl
jg
pop
test
movsb
jg
je
btc
mov
mov
sub
mov
mov
cld
popa
sub
push
test
adc
push
inc
mov
and
pop
cmp
push
or
in
popa
movsb
inc
pop
xchg
ja
test
in
xchg
dec
pop
int
lret
push
push
pop
mov
fs
imul
sbb
inc
sbb
cmp
mov
xor
mov
sub
in
mov
es
fs
int
mov
sbb
xchg
fcmovb
mov
shlb
mov
cli
xchg
addr16
ja
test
stos
adc
in
inc
mov
cwtl
mov
lods
jecxz
ret
jnp
jnp
xlat
sub
in
jl
rcrb
cmp
out
out
in
push
mov
push
scas
aaa
push
test
or
sbb
addr16
call
and
clc
fwait
std
cli
sub
mov
jnp
jmp
add
or
lds
cld
fisubl
jnp
sub
pop
sub
mov
sbb
call
and
lcall
repz
mov
inc
adc
rcrb
push
nop
dec
movsl
push
pushf
mov
andnps
out
les
and
cld
iret
ljmp
loopne
test
shll
add
les
sbb
repz
mov
sbb
aaa
test
sbb
in
sub
jb
outsl
daa
mov
or
out
stos
into
push
ja
pop
iret
es
fiadds
sub
sub
test
inc
xchg
test
dec
jae
sub
movsb
clc
cs
mov
push
ss
negl
sbb
hlt
cmp
ucomiss
outsb
adc
inc
sbb
add
mov
lcall
and
add
orb
nop
aad
cli
lahf
icebp
enter
lcall
mov
jb
es
test
into
and
fsubrl
mov
ret
outsb
inc
push
addr16
inc
jecxz
in
mov
mov
jge
push
lahf
push
mov
sub
xor
pop
inc
outsb
mov
cmpsb
cmp
jle
and
sbb
aaa
cmpsb
jo
sub
ljmp
push
mov
cmp
and
sbb
aaa
scas
imul
dec
add
enter
idivb
cmp
sbb
and
pop
rcr
xchg
sub
adc
and
fidivl
ret
lds
xorb
repz
cmp
xchg
jge
xor
scas
inc
add
sarl
ret
into
bound
or
mov
iret
pop
into
fcomps
out
push
mov
aas
andb
jp
pop
lret
mov
lods
cmp
and
pop
out
aaa
cmpsl
out
inc
sbb
xchg
jecxz
jno
push
adc
rcll
sarl
inc
sbb
pusha
lea
je
adc
dec
movzbw
add
cmc
mov
call
dec
pusha
cmp
xor
movb
clc
ror
cmp
cmp
cmp
clc
not
stc
neg
jmp
movl
call
sub
shr
lret
push
adc
test
lock
outsl
mov
les
enter
je
pop
mov
imul
jbe
xchg
xor
and
cmp
cmp
inc
or
in
ret
pop
ss
lcall
pop
lahf
fbld
mov
push
jae
push
shl
sub
mov
test
xchg
jmp
pop
inc
fists
pop
gs
pushl
pushf
movl
movb
movl
mov
lea
jmp
mov
pusha
pushl
pushf
pushl
ret
scas
adc
ret
xor
subps
ljmp
cmp
xchg
cld
ds
int
and
lret
hlt
inc
enter
xchg
inc
insl
pop
outsl
push
das
clc
pop
fsubr
xchg
push
push
lret
mov
movsb
aam
stc
les
popa
ss
scas
popf
repnz
das
xchg
sub
cmpsb
shll
push
dec
movsb
gs
push
push
adc
mov
addl
repz
mov
mov
aaa
movsb
xchg
in
fcompl
xchg
loope
flds
scas
xor
lcall
push
lea
jae
test
rol
cmp
btr
mov
bswap
cmp
shrd
bsf
mov
shl
sar
cmc
sar
mov
test
test
sub
cmc
stc
repnz
jmp
movl
pushf
pushf
pusha
lea
jmp
push
call
pushl
cmc
cmp
jmp
xchg
mov
push
inc
lods
test
mov
push
in
push
popl
cmp
imul
push
pop
fdivl
int
mov
mov
jns
and
btc
add
xor
lret
icebp
imul
mov
mov
dec
dec
and
sub
stc
cmp
roll
xchg
cmp
sbb
jmp
movl
movb
movb
pusha
pushf
lea
jmp
jmp
stos
movb
pushf
pusha
pushf
lea
jmp
inc
lock
rcrb
aam
mov
add
rcrb
pop
mov
add
dec
mov
mov
xor
jl
mov
add
cltd
mov
xor
pop
cmp
ss
out
dec
cltd
out
movl
dec
and
cmp
in
xchg
call
dec
lods
ds
add
xchg
push
xchg
lret
mov
dec
cmp
mov
sub
call
fldenv
arpl
jmp
ljmp
push
jo
pop
popf
lret
outsb
ljmp
fs
fiadds
jo
stos
and
inc
scas
fcompl
lahf
cltd
das
pushf
cmp
or
add
mov
lock
mov
jecxz
mov
jl
mov
lods
fistpll
inc
adc
pop
xchg
xor
decl
jns
arpl
loope
cmpsl
outsb
rep
pushf
xor
loopw
shlb
icebp
call
mov
addr16
dec
lods
mov
push
push
rorl
insb
mov
fprem1
pop
aaa
lock
mov
jmp
xor
mov
pop
out
sub
sub
xorb
or
mov
push
clc
or
inc
pop
pop
fs
add
lret
movsl
rcrb
pusha
mov
xor
call
cld
adc
outsb
sub
testl
pop
pop
imul
sub
sbb
inc
and
pop
sbb
ja
jmp
dec
pop
add
add
imul
jmp
jb
imul
imul
dec
sub
sbb
pop
push
xlat
inc
dec
add
sbbb
lock
mov
jmp
bt
stc
jmp
dec
js
xor
mov
push
inc
push
jae
add
testl
cld
mov
fildll
jmp
adc
fcoms
push
mov
mov
mov
iret
mov
cs
mov
dec
pushf
jbe
inc
adc
pusha
data16
pusha
gs
mov
fwait
push
sbb
jl
test
and
jo
push
movsl
push
stc
adc
das
mov
lods
sbb
dec
adc
lock
lea
ja
pushf
pushf
mov
bswap
mov
call
mov
dec
dec
lcall
aad
and
repz
mov
ret
or
out
xchg
mov
mov
jno
sbb
movsb
xchg
aas
loop
rcr
cmp
xor
call
jo
or
inc
insl
imul
stc
adc
jl
cmpsb
fstl
xchg
sub
push
mov
mov
loope
in
sub
cmp
adc
nop
das
xchg
pop
jae
dec
xchg
popf
lcall
imul
add
scas
push
les
inc
sahf
cltd
adc
or
loopne
mov
fisubs
pop
bound
xor
and
inc
adc
and
out
jle
call
je
and
decb
add
scas
inc
sbb
push
lods
test
xchg
or
enter
hlt
inc
stc
jbe
js
cltd
push
xor
mov
xor
mov
push
jns
out
loopne
pop
xchg
addr16
cwtl
scas
pop
cmp
adc
xlat
fistpll
in
filds
clc
cmp
xchg
jno
jg
cli
lret
or
mov
lea
push
pop
push
push
sar
inc
nop
cs
aad
adc
stos
mov
in
aaa
ja
pop
cmp
in
add
jns
outsb
je
and
add
clc
jns
or
mov
ficompl
in
mov
aaa
or
lock
repnz
test
daa
xchg
iret
mov
mov
push
mov
sbb
adc
repnz
or
adc
push
jl
int
sarl
sbb
or
cmp
mov
lahf
jb
lods
repz
ja
sbb
adc
pop
adc
addr16
call
xchg
sti
int
jno
ja
jg
jne
and
mov
adc
test
fcomps
or
icebp
inc
or
pusha
data16
stos
clc
sub
jnp
ds
rorb
lcall
call
inc
out
adcl
cmp
cltd
inc
notl
sub
xlat
jle
xchg
popf
and
jg
jnp
mov
out
aaa
sahf
loop
jmp
sbb
fcmovbe
mov
sbb
imul
mov
pop
pop
inc
add
std
icebp
les
repz
lret
or
jo
push
popa
repnz
mov
adc
xor
inc
push
movsb
adc
std
mov
outsb
and
xchg
out
pusha
repz
fistpl
dec
cmp
push
and
xor
sub
fildll
aad
and
adc
fidivl
int3
je
out
outsb
and
or
xchg
out
cmp
decl
jo
notl
adc
push
mov
pop
popa
or
sahf
repnz
adc
fldt
daa
and
iret
push
in
and
dec
jo
push
sbb
repnz
pop
out
or
stos
mov
mov
in
inc
inc
jb
and
xlat
add
fmul
repz
mov
lcall
xchg
bound
inc
psubw
xlat
dec
out
jg
lods
pop
out
mov
hlt
xor
or
adc
mov
pop
cmp
stos
push
fs
add
pop
push
lahf
push
testl
loopne
xchg
add
jge
adc
lahf
sub
push
pop
push
shlb
pushf
rolb
ret
stc
movsb
or
in
cmp
jb
sbb
data16
cli
stos
cmp
push
dec
std
jb
adc
in
xor
cli
ficoml
xchg
out
sbb
insb
jne
cmpsb
inc
ret
mov
lea
insb
and
adc
add
sbb
fldt
pop
add
data16
mov
jb
clc
aad
cmp
mov
xor
sub
xchg
jmp
or
ret
dec
xchg
cmp
lret
cmpsb
inc
cmp
sbb
xchg
shr
jmp
dec
pop
push
mov
enter
push
out
xchg
mull
cmp
jns
cmp
cmp
insl
in
add
loopne
lock
mov
inc
push
loope
inc
rcl
xor
shr
btc
sub
jmp
mov
cmp
ret
mov
jb
sub
cld
call
sbb
lds
dec
mov
mov
mov
add
clc
mov
or
jne
cmp
jle
negl
push
pop
dec
cmp
popa
lcall
xor
ret
mov
push
push
or
xor
add
addr16
jmp
aaa
fwait
xchg
cld
int
cmp
fadds
jb
pop
dec
pop
insl
aad
cmpsb
cmp
sub
imul
pushf
add
pushf
lea
jmp
pushf
movl
pushl
movb
pushl
movb
movl
pushl
lea
jmp
cltd
jmp
jne
xor
sahf
cmp
push
mov
std
mov
jp
cwtl
and
or
sub
insb
lret
inc
in
nop
ds
push
push
movsl
pop
insb
sbb
xchg
enter
inc
mov
adc
dec
inc
pop
in
in
adc
int3
fwait
mov
dec
jle
arpl
out
jns
jbe
sbb
dec
inc
mov
inc
iret
push
pop
adc
mov
inc
or
movb
pushl
lea
jae
mov
jmp
mov
imul
cli
pop
ss
ja
adc
repz
arpl
sbb
loopne
add
xchg
stos
fwait
adc
in
sbb
push
dec
test
hlt
das
movsb
or
pop
jbe
popf
ret
cli
and
add
gs
aam
sbb
pop
cli
mov
clc
sbb
dec
aam
scas
fcomps
xor
jge
gs
mov
aas
jns
test
loop
jb
cmp
popf
adc
fwait
xchg
lock
mov
cmp
mov
push
out
rorb
mov
xor
jbe
int
aas
js
fwait
lret
jmp
xchg
mov
jecxz
pop
dec
rcrb
aaa
inc
aaa
sub
bnd
mov
in
pop
loopne
popa
incb
sbb
loope
dec
call
mov
mov
inc
or
cltd
in
push
stos
movl
pushf
lea
jmp
clc
or
push
movl
call
popf
rdtsc
nop
call
mov
movsbw
pushf
call
test
jno
xchg
lods
popl
mov
jae
jecxz
cmp
bound
jae
inc
mov
dec
jle
fcmovnbe
and
xchg
xorl
push
rcl
mov
cmp
push
popf
cld
fdivrl
fsubl
dec
cmp
into
in
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
pushf
lea
jae
jne
and
shrd
mov
jmp
inc
inc
inc
neg
xchg
sbb
lahf
mov
shl
mov
clc
cmp
push
cmc
lea
mov
pushf
cmp
call
call
pusha
call
pusha
jmp
push
movl
lea
jbe
push
pushf
pusha
pusha
mov
lea
jmp
loop
mov
pop
cmc
sub
imul
adc
pushf
xchg
fidivs
aam
pusha
test
mov
ja
out
dec
stos
adc
xchg
cwtl
gs
ret
mov
daa
inc
and
lods
and
mov
jge
cmpsl
cltd
punpcklbw
and
mov
cs
mov
push
outsb
sub
mov
mov
mov
add
fistpll
loope
imul
xchg
iret
inc
and
inc
shr
mov
sub
icebp
and
mov
aas
in
fmuls
pop
push
mov
mov
xchg
jbe
aaa
and
push
sbb
sub
jecxz
dec
data16
adc
sahf
faddp
lock
cmp
push
mov
sub
movsl
push
stos
cmp
jmp
mov
add
repz
mov
stos
rol
mov
data16
lds
lahf
testb
clc
ja
xor
daa
aas
fnstcw
inc
or
int
bts
bt
lea
btr
setae
sub
aaa
neg
push
bt
cwtl
push
dec
btr
test
pushf
mov
shld
aam
pusha
btr
xor
pushf
pop
not
pop
lea
call
dec
push
push
inc
push
cmp
cs
insb
add
mov
cmp
mov
js
push
imul
scas
adc
push
cmp
push
daa
adc
jp
dec
mov
adc
adc
xchg
repz
in
sbb
ds
repnz
std
xchg
shll
data16
sub
sub
popf
js
hlt
mov
dec
push
xor
addr16
repz
loope
inc
iret
pop
negb
dec
jecxz
cwtl
decb
out
mov
sbb
inc
or
idivl
adc
pop
mov
call
stc
xor
call
lea
call
jmp
jecxz
mov
push
cmpsb
mov
xchg
fidivrs
punpcklbw
xor
jb
rolb
mov
shl
mov
or
mov
call
jbe
clc
dec
test
adc
das
jae
scas
lods
dec
aam
je
jnp
nop
add
adc
adc
or
jne
inc
subb
leave
pop
aad
mov
inc
or
lret
mov
fcoms
xor
gs
sbb
xor
mov
sub
and
test
pop
push
jnp
push
daa
adc
pusha
fdivrl
sub
push
ja
mov
dec
jp
mov
inc
adc
mov
jle
sbb
js
aas
faddl
std
int3
push
mov
fsts
cmp
pop
jle
inc
pop
aam
dec
pushl
mov
push
mov
setae
movsbw
pop
mov
setne
movsbw
bswap
lea
mov
jmp
pusha
inc
jmp
pusha
pushf
call
push
lock
std
std
xchg
pushf
ret
jnp
std
add
leave
out
int
insl
xor
pop
imul
lret
mov
jge
test
inc
jle
vandnps
add
call
cwtl
cmpsb
movl
cmpsb
inc
test
xor
in
xchg
push
movsl
xor
fdivr
inc
fimull
lods
mov
addl
jnp
and
pop
lock
cmp
push
push
mov
dec
subl
ss
adc
addl
mov
test
add
jmp
lock
sar
test
pop
cmpsb
out
adc
mov
jp
stos
cmp
or
xchg
xchg
sbb
sahf
stos
push
jl
sbb
pop
and
flds
jno
sub
inc
push
mov
pop
lea
js
pusha
pushf
inc
mov
movb
adc
lea
push
pushl
call
cmp
sub
mov
push
adc
jbe
sub
xchg
insb
leave
jge
xchg
inc
push
cmpsl
ja
imul
or
xlat
dec
sub
aam
cli
fdivrs
lcall
cli
stos
xor
sti
mov
cmpsl
dec
fisttpll
stc
xchg
adc
fwait
adc
xchg
jno
ss
cmpsl
xchg
cmpsb
or
shlb
push
js
dec
inc
cmpsb
jb
push
cmpsl
loop
adc
sub
fdivr
in
xor
insl
inc
mov
pop
enter
lahf
or
imul
pop
jge
cmp
outsl
cli
lods
mov
loop
push
jne
cmp
lea
add
xor
fwait
leave
enter
xchg
pop
and
cmp
fwait
mov
cmp
pusha
cmp
jmp
rol
test
jmp
popf
mov
dec
andb
dec
int3
divl
les
push
mov
vpcmpgtb
xor
xchg
mov
popf
in
negb
addl
xchg
push
push
outsb
pop
push
jnp
mov
jbe
pop
cmp
orb
add
xor
stc
add
lcall
lret
adc
adc
pop
xor
xchg
das
in
stc
lret
push
enter
test
push
les
push
fstpl
or
mov
sbb
in
mov
push
inc
mov
jns
inc
add
adc
movw
movl
push
movb
mov
pusha
mov
pushl
ret
pushf
lea
jae
jmp
movl
movb
mov
lea
jmp
jo
xor
mov
mov
push
xor
mov
outsl
hlt
push
push
jp
or
in
bound
or
loopne
addr16
outsl
insb
insl
imul
cwtl
es
mov
pop
inc
xor
out
std
mov
dec
jge
mov
cmc
jns
pushw
insl
cmp
in
dec
or
and
nop
mov
cld
outsl
jbe
outsl
cltd
mov
inc
jl
dec
sarl
mov
jle
stc
sarb
dec
mov
push
jb
cltd
sub
mov
jb
pushf
imul
and
sub
mov
and
outsb
pop
xor
pop
push
lds
jns
outsb
push
outsb
jbe
jle
sub
je
int3
outsb
cvtps2pd
push
jg
xchg
sub
out
outsl
cwtl
xchg
js
cltd
in
addr16
pusha
mov
outsl
and
test
pop
popa
push
outsb
aas
push
xor
mov
mov
adcb
dec
call
xor
call
mov
loopne
outsl
outsl
jbe
inc
and
pop
dec
imul
data16
outsl
insb
orb
mov
jg
outsl
pop
jbe
arpl
jbe
sub
js
mov
jae
lods
add
add
xchg
aad
arpl
jle
aad
shll
mov
pop
dec
jnp
inc
or
fs
mov
shl
pusha
pop
cmp
jnp
dec
std
pop
jnp
je
dec
jnp
pop
sub
jl
or
stc
loop
or
sti
aas
pop
sub
jnp
je
sahf
jo
pop
pusha
push
or
adc
fdivrs
movsl
fs
mov
mov
lcall
pop
dec
xor
jg
add
call
setge
lea
call
scas
fs
mov
sbb
add
fisttpl
sub
cld
xchg
xchg
adc
rcll
pop
add
xchg
lods
fmull
fs
jecxz
push
inc
test
mov
stc
gs
cmp
jmp
cmp
nop
shrb
in
test
pop
mov
les
add
hlt
cmp
inc
orb
pop
jo
sbb
stos
adc
cmp
dec
pop
ljmp
and
pop
inc
jp
mov
adc
cmpsb
ret
je
scas
xor
lahf
clc
lods
nop
or
insb
adc
gs
sbb
stos
in
lret
cmp
loope,pt
out
sbb
mov
add
or
sbb
lret
push
dec
dec
lea
pop
mov
movsb
cmc
mov
das
dec
inc
mov
lret
std
adc
popa
xchg
mov
add
shll
dec
rcr
mov
scas
in
cmp
lods
ret
sbbb
scas
icebp
mov
insb
mov
loopne
xlat
add
xor
inc
mov
test
inc
andl
sub
jbe
inc
jb
enter
pop
mov
push
push
mov
jg
popl
cmpl
lods
xor
test
pop
lea
add
in
mov
pop
lds
out
idiv
cmp
dec
shlw
fimull
syscall
mov
insb
out
inc
movsb
push
pop
shl
bound
sub
mov
inc
ds
pushf
daa
xchg
xchg
cmp
or
pop
movb
nop
das
push
mov
or
sub
push
stc
pop
fists
mov
inc
aad
std
dec
xlat
pop
inc
imul
pop
rorl
cltd
rdpmc
push
ljmp
out
bnd
fsubrs
fimull
imul
test
and
pop
xor
or
out
push
into
xor
dec
jb
and
sub
loopne
mov
pop
jle
ja
lods
xchg
mov
ret
adc
inc
mov
fwait
or
xchg
push
mov
shrb
jge
inc
lods
hlt
push
repnz
push
pop
pop
mov
lods
adc
xchg
mov
fiaddl
xchg
adc
stos
lahf
mov
sub
pop
lret
gs
mov
outsb
push
or
sahf
add
fwait
dec
cltd
clc
test
fmull
xchg
jo
and
pop
in
xchg
cmp
sbb
add
test
push
fs
inc
fwait
dec
in
idivb
mov
fmull
cmp
movsl
mov
repnz
or
rolb
addr16
push
roll
pop
jbe
scas
mov
arpl
adc
orb
inc
fsubr
xor
inc
sar
pusha
cmp
xchg
rol
and
mov
sar
movb
neg
mov
stc
mov
bsr
mov
lea
jo
push
sub
call
push
jmp
lea
jae
cmc
test
clc
add
pushf
mov
push
pushf
pushf
push
lea
jmp
pusha
lea
jne
sbb
mov
call
movb
lea
jae
push
sub
lea
jns
push
lea
call
pushf
pusha
lea
jae
mov
mov
pushf
pushf
call
mov
stc
mov
test
fimull
push
mov
dec
insb
lds
divl
jbe
movsl
sub
arpl
out
and
dec
mov
out
out
iret
insl
popf
ret
lods
cmc
subb
dec
dec
es
gs
arpl
mov
sub
push
push
inc
addr16
scas
sbb
out
inc
jnp
cltd
lock
cmp
mov
sbb
lea
fisubrs
inc
insb
lret
cmp
rcll
popf
dec
enter
inc
subl
xor
add
pop
lahf
in
pop
sahf
or
jb
cmc
fidivrl
push
or
addr16
mov
cltd
sub
js
enter
mov
mov
and
shlb
sbb
outsb
pop
cmc
push
pop
lcall
inc
pop
outsb
mov
xchg
nop
mov
xor
fildll
imul
repz
mov
sbbb
mov
mov
push
jl
inc
incb
sbb
loope
jno
cmp
fwait
lods
sbb
pop
or
push
inc
lods
cmp
dec
xor
push
sub
sub
std
jae
push
je
ret
cmp
or
in
dec
push
popa
adcl
jle
push
pusha
jo
repnz
outsb
fwait
leave
push
cmp
cmpsb
sbb
pop
nop
inc
insl
lods
in
mov
sub
add
sub
aam
cmp
mov
in
pushf
xchg
std
mov
mov
xor
cld
jb
fcomps
sarb
jbe
out
dec
dec
imul
inc
mov
and
add
ja
incl
pop
push
adc
mov
movsb
sahf
imul
cwtl
ljmp
adc
cs
js
jmp
add
jnp
test
push
xchg
out
mov
push
push
popa
loop
adc
sub
mov
stos
subl
xchg
out
and
push
push
inc
jmp
cld
leave
hlt
rcrb
fadds
js
xor
test
lret
inc
in
sub
mov
aad
add
ds
jle
jl
icebp
in
test
sbb
and
dec
xchg
pop
push
in
sub
mov
jns
push
mov
fistpll
mov
inc
cmp
loope
test
andl
cmp
imul
sub
pop
mov
aad
or
mov
mov
mov
sti
mov
int
pop
daa
xchg
cmp
add
shrl
mov
xchg
jmp
lock
mov
dec
fdivs
leave
push
push
in
inc
loopne
xchg
sbb
adc
add
repnz
imul
test
or
adc
fs
bound
lahf
mov
sub
inc
mov
adc
sarl
fsts
cmp
fsubr
cwtl
push
std
or
cmp
jmp
mov
push
xchg
fiaddl
and
repnz
add
add
ds
sbb
fstpl
xchg
cmp
and
add
push
repz
pop
aam
and
jo
testl
pushl
or
outsb
cs
xchg
jb
imul
out
mov
cli
icebp
xor
jns
jnp
or
jbe
xchg
scas
xor
inc
cli
sarb
and
orl
mov
sub
call
mov
push
pushf
movl
push
pushf
mov
lea
jmp
inc
loop
add
gs
outsb
jle
mov
mov
inc
inc
lcall
sbb
fbld
or
lock
jmp
les
inc
jecxz
lods
pop
mov
mov
fimuls
icebp
cld
mov
movsl
sub
pop
dec
movsb
mov
fists
jp
into
mov
push
in
test
ds
jnp
stos
push
out
icebp
insb
lock
test
sbb
push
and
loope
or
outsl
popa
inc
movsl
int3
mov
inc
stc
xchg
stos
xor
pop
lea
mov
pusha
push
pushf
pushf
lea
jmp
mov
into
movsl
mov
jp
or
lock
adc
lock
push
mov
incb
sbb
arpl
push
mov
jecxz
mov
xchg
lahf
mov
pop
xor
hlt
pop
pop
mov
mov
cmp
mov
fcomps
add
sbb
or
mov
inc
cli
push
and
stos
jmp
ss
pop
pop
mov
sub
mov
sbb
pop
pop
repnz
ds
insl
clc
imul
or
add
push
fldt
bound
rcrb
movsl
xchg
es
gs
sbb
lcall
or
add
xchg
out
in
ss
ret
sbb
cmp
lahf
mov
cmp
push
lea
je
jmp
pusha
rep
movzbw
mov
movb
lea
jmp
lea
call
pusha
clc
cmc
call
and
push
in
pop
inc
push
ja
jne
fldt
mov
fs
xor
mov
xor
xor
adc
sbb
dec
jmp
mov
aad
repz
aad
and
lcall
data16
roll
jbe
jl
xor
xor
inc
push
mov
inc
jns
jmp
gs
ja
psubsb
mov
mov
and
mov
inc
lret
push
dec
jge
jmp
mov
push
xchg
ds
jg
adc
inc
pop
je
lcall
js
cmp
add
fwait
and
std
mov
pop
cltd
mov
pop
flds
mov
mov
fdivrs
inc
aas
or
cmp
cmpsb
in
movsb
adc
je
sub
mov
lret
cmc
daa
and
daa
out
and
push
sbb
lods
icebp
std
out
call
xchg
rcrl
fcmovnb
cmp
push
add
push
sbb
xor
dec
adc
pop
movsb
stos
pop
cmp
push
jb
call
clc
sub
lret
shr
sbb
clc
bt
stc
push
or
pusha
jmp
movb
movl
lea
jnp
pusha
movl
pusha
pushf
pushf
pushf
lea
jmp
clc
pushf
add
add
call
call
test
adc
xor
dec
pop
and
mov
adc
push
imul
lcall
inc
adc
xor
lret
add
mov
rcl
sub
jno
inc
xchg
sbb
sbb
repnz
idiv
call
mov
mov
in
movl
daa
loop
loopne
stc
repz
inc
jle
mov
stos
out
push
es
cmp
cmp
das
push
and
das
pop
sub
insl
nop
rcl
mov
dec
in
mov
jecxz
push
fsubr
ret
cmp
xlat
jno
lock
pop
aad
or
xor
iret
out
insl
lods
arpl
cmpsb
lea
loopne
mov
dec
pop
sarb
pop
dec
add
xrelease
iret
add
or
jbe
sub
fldenv
or
mov
int3
xor
inc
mov
outsl
or
jmp
data16
jp
inc
imul
insl
bound
cmp
cltd
cmp
enter
and
pop
stos
adc
and
lods
cmp
sub
fwait
adc
sub
cltd
jae
mov
sub
out
push
scas
pop
mov
cmp
pop
xchg
push
call
call
jmp
pop
mov
mov
mov
sub
dec
in
aaa
sahf
dec
mov
rorl
xchg
gs
dec
sbb
lods
or
sti
add
jnp
sub
cmpsl
sti
cmp
mov
popa
rolb
jmp
insl
out
dec
pop
in
or
or
mov
jb
es
xchg
and
loop
or
mov
fsubrs
push
lds
fdivrs
cmp
nop
mov
inc
setae
mov
lea
jmp
movb
lea
ja
push
pushf
jmp
movb
mov
jmp
add
call
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sub
mov
mov
ljmp
sbb
and
scas
mulb
mov
ja
and
adc
push
mov
add
xchg
jg
mov
xlat
xchg
jl
cli
sub
scas
out
lret
push
popl
pushf
inc
mov
jbe
xor
inc
lods
inc
fiaddl
push
outsl
mov
dec
cltd
add
cwtl
in
fildll
test
pop
cmp
in
int
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sahf
cmp
pushf
cmpb
pusha
lea
jne
lea
xor
not
sub
shl
shl
and
mov
rcr
rcr
or
add
cmc
or
mov
call
mov
not
mov
movzbw
mov
pusha
pushf
mov
lea
movzbw
jmp
pop
xchg
adc
xor
cmp
lcall
adc
inc
rcll
pop
xlat
add
cltd
or
js
movsb
and
xlat
es
cwtl
xchg
jns
lds
xor
jns
rcrl
cltd
in
es
rolb
out
inc
hlt
movsb
mov
into
stc
gs
adc
sub
dec
and
roll
pop
cmp
or
mov
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
push
mov
jmp
jnp
jmp
leave
cld
adcl
sbb
rorb
test
pop
or
and
jo
mov
dec
xlat
ds
loopne
mov
or
notb
mov
dec
and
ret
xchg
jmp
popf
mov
or
dec
push
mov
push
stos
jge
mov
xchg
or
mov
pop
jp
movsb
and
cli
fdiv
mov
jg
cmp
push
lods
neg
sub
lret
or
fsubl
cs
push
or
cmpsl
or
inc
xchg
cmp
jmp
aad
shrb
decb
jmp
sub
int
fisubrl
add
loopne
or
fmull
xchg
fists
sbb
mov
and
pop
ja
ja
ja
jnp
adc
stos
pop
pop
repz
stos
incl
scas
mov
mov
lcall
inc
sbb
jo
lret
addb
in
and
sub
cmp
pop
out
push
bound
jb
sbb
mov
rcr
rcl
mov
lret
mov
lea
or
xchg
cmp
lret
mov
add
sub
jl
aas
movsl
dec
xor
inc
add
cld
dec
stc
out
in
adc
pop
test
subb
jmp
mov
sbb
jo
adc
addr16
cmp
cmp
jmp
pushf
lea
je
jmp
movl
call
push
dec
dec
dec
dec
inc
push
cs
insb
add
inc
jmp
mov
mov
pop
xor
cli
rorl
xor
xchg
shrb
out
xor
sub
add
jecxz
mov
jbe
or
inc
loop
and
xchg
dec
ljmp
mov
mov
jne
dec
popa
arpl
xor
jo
repz
or
lcall
sub
lret
jecxz
out
add
das
aaa
test
clc
ljmp
and
push
aaa
pop
mov
inc
sahf
and
push
mov
iret
shl
dec
popf
fildll
aaa
sbb
popa
addr16
cmp
lods
in
lods
fcomps
xchg
jnp
movsl
aad
fstps
fwait
in
or
adc
mov
es
test
mov
test
mov
lahf
mov
jb
je
lcall
daa
sub
inc
icebp
push
sbb
cmp
test
test
test
or
call
into
jp
inc
movsb
mov
mov
fs
adc
cmc
lea
jg
xchg
cmp
dec
lds
push
loope
add
sbb
jg
popaw
loop
stos
ret
xor
hlt
cltd
repz
mov
cltd
insb
or
lcall
xchg
xchg
push
lea
in
movsb
mov
mov
lea
sbb
mov
inc
jae
xchg
pop
add
adc
cmpsl
dec
pusha
out
aaa
jle
mov
mov
jle
push
dec
divb
cmp
push
push
bt
bt
or
pusha
mov
pushf
call
aaa
mov
sub
std
fisubs
adc
dec
ffree
and
add
hlt
daa
push
lcall
out
aaa
jle
inc
lcall
filds
pop
inc
int
jl
inc
out
sar
out
clc
test
mov
inc
out
ret
and
and
adc
add
testb
pop
mov
add
pop
out
xchg
push
jl
sbb
loope
push
push
pusha
inc
xchg
jb
repnz
dec
jae
inc
lret
cs
fidivl
cmp
mov
jno
lea
ja
pusha
push
lea
jae
setp
push
mov
inc
pushl
inc
inc
not
call
cmc
add
pusha
push
jmp
test
mov
cmp
push
pusha
pushf
jmp
pushf
call
pop
cmp
mov
jl
dec
cmp
enter
or
icebp
lds
idivb
mov
repz
inc
pop
je
hlt
xchg
xor
xchg
gs
inc
cltd
sub
xor
popa
daa
hlt
jl
cli
dec
lcall
pop
sub
pop
xchg
repnz
cmpb
fcoml
sbb
and
cmp
loope
test
aam
out
out
sahf
shlb
popf
out
aaa
jl
mov
ret
xchg
mov
jae
xor
cmp
mov
pop
cmp
loop
and
pop
mov
cs
in
pop
mov
insb
sbb
in
data16
add
jbe
out
lods
xor
or
mov
add
jns
sub
jnp
test
fiadds
xchg
and
int
rcrl
jecxz
sti
cld
xchg
push
jle
testl
in
push
push
pop
leave
js
aaa
adc
mov
or
adc
fs
fnstcw
cmp
sbb
test
lahf
lods
pop
sbb
xlat
sbb
inc
cltd
pop
pop
loopne
lock
insb
add
xchg
lods
mov
fsub
and
cli
int3
fstps
add
mov
rorb
nop
je
push
aad
adc
sub
push
mov
pop
cmp
jns
mov
pusha
scas
dec
push
adc
dec
push
scas
mov
xor
pop
iret
cmp
les
sbb
push
cmp
dec
aaa
pop
lea
call
movb
movl
push
pushl
mov
pushl
popl
movw
movb
movw
push
pushl
ret
bswap
call
mov
ror
nop
loopne
pop
bound
inc
push
call
aaa
mov
loope
add
fsubrs
xchg
dec
pop
int3
cmc
popa
add
jae
mov
pop
xchg
aaa
mov
lods
mov
lcall
lods
arpl
jb
fcmovb
push
lods
jae
mov
cmp
test
push
outsl
cs
push
std
dec
dec
xchg
lock
add
inc
cwtl
stos
cmp
add
jmp
inc
and
cmp
repnz
pushf
lea
jmp
notb
cmpsl
mov
cmp
loop
push
push
and
push
loopne
cli
aas
add
push
icebp
mov
mov
mov
push
cmp
jns
pusha
fistps
cmc
fs
ds
pop
dec
xorb
or
mov
shlb
xor
xchg
into
dec
addr16
outsb
push
push
sbb
insb
ret
pop
bound
loop
lahf
jecxz
loop
dec
insl
xchg
sti
notl
add
xor
push
push
adc
jp
xchg
out
adc
xor
mov
jg
adc
lds
or
aaa
loope
adc
bound
jmp
shld
dec
fnsave
ss
sub
mov
outsl
sar
sub
scas
mov
pushl
adc
aaa
add
lock
test
fs
mov
jb
xchg
and
xor
bound
int3
cld
and
bound
push
daa
push
cmpsb
out
cmp
fdiv
mov
xor
mov
pusha
movw
pushl
ret
push
out
iret
loop
add
test
mov
cmpsb
mov
in
out
xchg
fsubrs
icebp
inc
sahf
cmp
jl
sub
sub
mov
mov
mov
int
jecxz
test
cltd
lcall
and
pop
push
push
in
enter
xor
add
jb
mov
inc
jg
xchg
dec
push
ljmp
jle
je
insl
mov
les
clc
cmp
dec
jns
movl
jmp
movzbw
lea
setno
mov
mov
lea
seto
mov
pop
xchg
pushf
push
mov
pusha
lea
jo
mov
setp
pop
push
mov
jmp
insb
out
cmp
push
inc
cli
mov
imul
int3
pop
pop
push
fcmovbe
push
mov
pop
inc
and
xor
xchg
pop
test
out
xchg
pushl
sahf
or
leave
sti
pop
rcrb
push
cs
xchg
shl
lock
sbb
mov
xor
jb
out
xchg
int3
push
fsubrs
inc
xor
lcall
aaa
aam
lcall
repz
cmp
push
jns
cmp
sub
test
cmp
call
ds
xor
xor
sub
pop
pop
jge
addl
pop
mov
mov
stos
arpl
dec
outsb
pushf
mov
dec
imul
pushf
inc
fwait
and
xor
inc
andl
lcall
fstl
pop
xor
adc
test
fwait
push
and
into
dec
sbb
aas
outsl
cmp
hlt
pop
int3
push
adc
mov
pusha
lea
jae
jmp
mov
mov
jmp
sub
jmp
mov
movb
mov
mov
pushf
call
pushf
movw
mov
pushf
pushf
pushl
mov
lea
jmp
mov
mov
movw
lea
jmp
or
mov
test
mov
pusha
add
pushf
mov
pusha
push
pushl
pushl
lea
jmp
cmc
bt
add
pusha
call
mov
jmp
test
test
push
add
pusha
movl
mov
movb
pushf
lea
jmp
add
mov
push
mov
movw
push
lea
jmp
movb
call
and
jmp
call
movb
mov
jmp
mov
pushf
movw
mov
lea
jmp
jmp
push
pusha
add
pushf
lea
jle
pushf
call
call
mov
jmp
movw
mov
jmp
push
jmp
call
mov
lea
ja
pushf
push
pushf
mov
pusha
pushl
mov
call
aaa
pushf
mov
stc
sub
mov
movw
lea
jb
mov
pushf
push
pushl
lea
jmp
call
pushf
movw
mov
push
pushl
popl
push
mov
mov
pushl
lea
jmp
pushf
call
push
jmp
pushf
mov
call
pushf
call
mov
push
mov
call
pushf
pushl
popl
push
lea
jmp
pushf
pushl
popl
mov
lea
jmp
mov
lea
jnp
pusha
mov
jmp
mov
call
bsf
aad
stc
movzww
stc
cmp
cmc
xchg
jmp
pushl
mov
call
call
push
mov
pushf
pushf
pushf
jmp
rol
cmc
bt
test
jmp
sbb
rcr
sar
rol
mov
cmc
push
clc
sub
sub
je
add
jle
pushf
pusha
pushl
popl
pusha
lea
jmp
call
cmp
call
mov
push
pushf
mov
mov
call
mov
push
pushf
mov
push
mov
jmp
mov
call
mov
push
mov
lea
jmp
jmp
pushf
mov
call
pushf
push
not
call
pushf
movw
mov
mov
mov
pushf
pushl
call
aaa
cbtw
rol
mov
cmp
jmp
mov
mov
jmp
mov
pusha
lea
jmp
pushf
mov
pushf
call
mov
push
push
movl
call
cld
jmp
jmp
mov
pusha
jmp
call
xor
mov
call
pushf
jmp
bt
movsbw
test
rcl
mov
dec
mov
bt
jmp
movb
mov
mov
jmp
mov
mov
call
test
jmp
pushl
popl
push
mov
movw
lea
jmp
mov
bsr
mov
cmc
bt
pushl
popf
mov
lea
jmp
pushf
popl
pushf
mov
pushl
pushl
popl
pushl
mov
mov
pushf
lea
jmp
sub
push
pusha
clc
cmpl
jmp
call
pushl
popl
pusha
lea
jmp
pushf
pushf
call
pushl
mov
pushl
popl
pushl
push
movb
lea
jmp
lea
cpuid
jmp
pusha
das
mov
cmp
shl
mov
jmp
mov
neg
shr
add
jmp
jmp
pushl
mov
jmp
call
mov
pushf
mov
movl
mov
pushl
push
push
mov
mov
pushl
pushf
popl
call
sub
mov
call
xchg
cwtl
aam
bswap
mov
cmc
not
rcr
shl
mov
jmp
movl
mov
push
mov
push
pusha
pusha
pushf
popl
call
push
pusha
mov
pushf
mov
call
pusha
mov
pushf
pusha
push
lea
jmp
pushf
popl
call
mov
push
movw
push
lea
jmp
pusha
sub
cmc
shr
pusha
mov
call
pushl
jmp
call
clc
test
add
aas
notl
shl
mov
pushf
mov
clc
pushf
push
push
sub
jmp
mov
pusha
mov
mov
push
lea
jmp
mov
jmp
bt
xor
pushf
jmp
mov
call
cwtl
pusha
push
movsbw
mov
pusha
call
pushf
popl
pushf
pushf
mov
jmp
neg
mov
pusha
pusha
cmp
jmp
push
push
jmp
lea
pusha
mov
jmp
mov
mov
jmp
xchg
push
stc
add
clc
pusha
clc
add
clc
sub
call
pusha
push
pushf
popl
movb
call
mov
push
add
pushf
pusha
push
movb
mov
push
mov
push
lea
jmp
mov
pushf
mov
mov
movb
movl
call
call
mov
jmp
stc
clc
stc
not
stc
test
sub
bt
and
push
call
jmp
shr
adc
pusha
seta
mov
movb
bt
xor
push
movb
clc
ror
clc
neg
push
stc
rol
stc
xor
call
pushf
popl
pushf
pushl
popl
push
pushl
pushl
pushl
lea
jmp
pushl
popl
pushf
movb
mov
lea
jmp
movw
pushf
jmp
not
movsbw
mov
pusha
lea
pusha
mov
pushf
movw
pushf
lea
jmp
pusha
pushl
popl
movw
push
pusha
lea
jmp
pusha
mov
pushf
pushl
ret
shld
cwtl
mov
pushf
not
cmp
mov
cmp
pusha
stc
pushl
add
jmp
jmp
xchg
pusha
push
push
movl
jmp
mov
jmp
push
push
pushf
mov
push
call
jmp
pushf
call
mov
pusha
movb
mov
pushf
mov
call
jmp
call
call
mov
pushf
lea
jbe
push
jmp
movb
pushf
popl
jmp
pushl
stc
push
add
call
call
pusha
mov
sbb
adc
push
mov
cmc
pushf
sub
clc
shl
pushf
mov
jmp
popl
pushf
pusha
push
pushl
lea
jmp
mov
pusha
pushl
jmp
not
inc
movzbw
not
shrd
dec
and
shld
lea
sar
bt
mov
cmc
js
pushf
sub
jmp
pushf
pusha
pushf
popl
push
pusha
mov
pushl
popl
mov
push
pushf
lea
jmp
call
call
pushf
mov
push
mov
pushf
pushf
mov
pushf
mov
call
bt
sub
pusha
pushf
mov
mov
push
lea
jmp
mov
call
call
call
mov
bswap
cwtl
pusha
jmp
pushl
pushf
pushf
popl
mov
call
push
pushl
popl
movb
lea
jmp
jmp
call
call
movl
dec
mov
call
jmp
pusha
mov
movb
push
lea
jmp
pusha
mov
pusha
jmp
sar
mov
cmc
stc
sub
clc
push
xor
pushf
call
movsbw
movzbl
pushf
dec
call
call
pushf
pushl
popl
pushf
pusha
push
mov
lea
jmp
mov
pushf
popl
jmp
lea
movw
pushf
lea
jmp
pushf
pushf
popl
pushf
pushf
pushf
jmp
mov
jmp
push
push
pushf
popl
pusha
pushl
popl
mov
mov
mov
lea
jmp
mov
pushf
jmp
cmc
sub
call
mov
movl
pushf
movw
lea
jmp
mov
pushf
call
call
mov
movzbw
mov
pushl
mov
cwtl
bswap
lea
movzbw
mov
setns
lea
call
pushf
mov
call
push
inc
setl
not
mov
movsbw
mov
pushf
not
pushf
pushl
mov
call
mov
push
push
push
jmp
ja
adc
shl
mov
bswap
mov
push
jmp
cmc
clc
pushl
neg
push
push
pusha
dec
jmp
pusha
pushl
popf
pushf
pushl
lea
jmp
pushl
pushl
popl
pushf
mov
lea
jmp
pushl
pushf
mov
movb
call
pushf
popl
jmp
mov
movl
pushf
movl
pushf
popl
pushl
mov
movw
mov
call
bt
cmp
add
pushf
mov
pushf
movb
pusha
call
mov
pusha
pushf
call
mov
movb
pushl
mov
call
pushf
stc
and
clc
cmp
call
pushf
pushf
popl
pusha
pushf
movb
mov
call
pushf
popl
push
jmp
mov
push
lea
jmp
shr
xchg
bt
btr
rdtsc
push
sub
push
pushf
mov
jmp
pushf
popl
not
movsbl
push
jmp
mov
jmp
cmc
not
jmp
mov
mov
call
push
cmp
test
push
add
pushl
pushf
popl
pushf
call
call
sub
lea
mov
jmp
pusha
sub
cmp
bt
pushl
pusha
shr
call
pusha
mov
pushf
jmp
mov
pushl
popl
mov
pushl
movw
lea
jmp
jmp
not
bt
and
pushf
pusha
push
mov
call
push
mov
push
push
jmp
pusha
mov
movw
pusha
mov
jmp
pusha
lea
jne
cmp
test
pushf
xor
jmp
mov
jmp
cwtl
bt
sub
push
pushl
mov
movb
movl
push
mov
lea
jmp
stc
shl
push
call
jmp
pushf
jmp
pusha
pushl
popl
mov
movb
lea
jmp
pusha
mov
dec
stc
cmp
pushf
test
cbtw
add
jle
pusha
cwtl
pusha
sub
call
call
pushf
popl
mov
mov
jmp
pusha
pushl
popl
pushl
push
lea
jmp
mov
call
sbb
inc
mov
pushf
cmp
mov
add
mov
mov
movw
mov
movb
pushl
pushf
pushl
lea
jmp
mov
mov
lea
jmp
push
mov
push
jmp
jmp
call
mov
jmp
clc
test
cmp
xor
push
mov
pushl
sub
pushf
mov
push
mov
lea
jmp
sub
pushf
pusha
jmp
rol
test
rcr
neg
cmc
rol
not
btr
xor
bsf
call
jmp
mov
pushf
lea
jmp
call
mov
pusha
jmp
call
pushf
jmp
pushl
mov
pushf
mov
jmp
pushf
jmp
pushl
mov
pusha
jmp
call
call
bswap
neg
and
mov
push
bt
add
pushf
push
lea
jmp
call
pusha
mov
movzbl
pusha
mov
mov
push
pushf
divl
jmp
call
pusha
mov
jmp
mov
pushf
lea
jle
push
mov
mov
jmp
pushf
pushl
mov
movb
jmp
mov
call
jmp
jmp
bts
shr
xor
mov
adc
bsr
btc
xor
mov
call
mov
pushf
movb
movb
push
pushf
popl
push
call
pusha
pushf
popl
jmp
pushl
popl
pushf
movb
movb
mov
lea
jmp
mov
call
jmp
pushf
popl
call
jmp
bswap
lahf
call
cwtl
ror
mov
aas
rcr
seta
pop
cltd
stc
sbb
add
pop
inc
btr
cmp
movzbw
pop
rdtsc
btc
shld
popf
pusha
cltd
mov
movzbl
mov
jmp
mov
pushf
popl
pushl
pushl
popl
mov
lea
jmp
jmp
pushl
call
pushf
lea
jne
call
mov
pushf
popl
pushf
pushf
mov
pushf
pushl
popl
movl
push
lea
jmp
pushl
pushf
pushl
popl
pushf
pusha
lea
jmp
mov
lea
jg
pushf
movw
mov
pushf
jmp
pushf
lea
je
push
jmp
pushl
popl
mov
lea
jmp
movsbw
sbb
mov
setge
shl
add
push
call
mov
mov
mov
pushl
mov
pushf
popl
movl
lea
jle
popl
pusha
pusha
pushf
lea
jmp
pusha
mov
pushf
lea
jmp
clc
cltd
pushf
aaa
mov
mov
bswap
inc
mov
xor
mov
push
pushf
pushf
jmp
xchg
pusha
mov
inc
shr
mov
bt
add
movw
call
stc
bt
add
bt
push
call
add
cmp
cmp
cmp
xor
mov
sub
jmp
pushf
mov
call
pusha
pusha
mov
movb
mov
jmp
call
lea
jne
popl
pushf
pusha
mov
pushf
lea
jmp
lea
ja
setl
movsbw
cltd
bts
mov
movsbl
lea
shl
xor
sub
bsr
push
lea
rcl
and
cmc
sar
stc
btc
sub
not
jmp
call
lea
mov
pusha
mov
jmp
mov
jmp
pusha
pusha
mov
pushf
call
mov
mov
push
pushf
push
pushl
popl
pushf
movb
lea
jmp
pusha
pushf
mov
call
movw
push
movb
mov
jmp
pushf
mov
push
jmp
jmp
jmp
jmp
xchg
bt
cltd
mov
btr
and
dec
mov
cmp
mov
pusha
add
pusha
push
stc
shrd
jmp
btc
mov
shld
movzbw
mov
mov
mov
clc
bt
add
pushl
mov
push
push
pusha
mov
lea
jmp
jmp
call
jmp
call
pushf
popl
lea
jb
pushf
pushl
popl
push
push
pushf
movb
lea
jmp
pushf
pushf
mov
pushf
pushf
mov
pushf
call
test
jmp
mov
movw
mov
pushf
lea
jo
push
mov
mov
push
mov
push
call
mov
call
bswap
jmp
call
lea
jge
pusha
mov
movl
pusha
mov
call
pushf
mov
jmp
not
dec
shl
add
bsf
bsr
jmp
push
pusha
mov
push
mov
movb
pusha
push
mov
call
call
pushf
mov
jmp
pusha
mov
pushf
jmp
jmp
call
mov
pusha
pusha
jmp
pusha
pushl
popl
movb
movw
mov
mov
lea
jmp
push
pushf
mov
pushl
pushf
push
call
call
xchg
pushl
movl
call
push
mov
jmp
mov
pushf
mov
lea
jmp
not
push
clc
xchg
push
push
add
stc
movl
pusha
test
add
clc
sub
test
clc
push
mov
pushf
sub
mov
push
movw
movw
lea
jmp
jmp
jmp
jmp
movb
mov
push
jmp
call
call
movzbl
bsr
bts
add
btr
lea
shld
add
movzbw
dec
mov
stc
test
add
bt
jmp
jmp
mov
pushf
push
pushf
lea
jmp
push
push
movb
pusha
mov
pushf
pushf
lea
jmp
inc
call
mov
movb
mov
jmp
pusha
pushl
popl
pusha
pushf
lea
jmp
call
pushf
lea
je
bt
test
cmp
sub
stc
xchg
jmp
movw
jmp
pushl
mov
pushl
call
mov
pushl
movb
mov
call
jmp
push
jmp
pushf
pushl
pusha
mov
call
pushf
popl
pushf
pushf
lea
jnp
push
jmp
pushf
popl
jmp
not
mov
pushf
movb
sub
cmc
mov
cmc
pushf
xor
stc
add
pushf
test
stc
xor
push
dec
movb
cmp
call
pusha
add
movb
mov
pusha
pushf
mov
pushl
lea
jmp
sar
mov
shld
jmp
pushf
movw
mov
mov
call
cmp
jmp
call
mov
push
jmp
xchg
bswap
push
setno
push
lea
lea
lea
push
pusha
xchg
push
mov
movsbw
xchg
pop
bswap
mov
not
pushf
call
call
push
mov
mov
mov
mov
pushf
pushl
ret
call
pushl
popl
movb
mov
mov
mov
lea
jmp
push
jmp
call
stc
mov
bt
xor
call
add
jmp
mov
jmp
cmp
stc
sub
call
movb
mov
jmp
pusha
jmp
pushl
pushf
popl
call
pushl
pushf
pushl
mov
pushf
mov
mov
push
pushf
pushf
pushf
mov
push
mov
movw
movb
jmp
cmc
aas
xchg
btc
mov
stc
neg
cmc
mov
jmp
pushf
popl
movb
mov
mov
pushl
popl
mov
mov
pushf
lea
jmp
shl
shld
jmp
bts
rcr
btc
ror
movzbw
pusha
inc
stc
rcr
rol
not
shld
shl
sbb
or
and
stc
sbb
movzbw
xor
mov
movw
stc
bt
jmp
mov
mov
pusha
mov
lea
jg
pushf
pushf
mov
mov
pusha
push
mov
jmp
pushl
pushl
popl
pushf
pusha
pushf
lea
jmp
test
mov
bt
test
cmc
xchg
push
pushl
add
cmc
jmp
btr
cmp
mov
sub
movsbw
bts
shld
add
jl
mov
bts
bts
add
btr
rcr
cmp
adc
add
clc
bts
rol
rol
sar
bsf
shl
shl
add
push
add
not
rol
shld
or
movzbl
rol
rol
lea
clc
mov
movb
add
jmp
pushf
jmp
pusha
mov
movw
pushf
lea
jmp
dec
call
jmp
call
pushl
popl
pushf
pushf
movb
pushf
lea
jmp
mov
jmp
dec
cmc
stc
push
sub
call
jmp
mov
push
pushl
popl
mov
mov
pushf
lea
jmp
mov
call
pushf
pushl
popl
mov
push
push
lea
jmp
mov
movb
mov
push
lea
jmp
pushf
pushf
mov
pushf
movb
jmp
mov
push
call
movb
pushl
popl
mov
movw
lea
jmp
mov
mov
call
call
mov
mov
mov
pushl
popl
pushf
mov
pusha
lea
jmp
jmp
mov
pushf
pushf
popl
call
mov
jmp
pushf
popl
call
jmp
cmp
cmc
add
push
mov
mov
pushl
movw
pushf
pushl
ret
mov
pushl
popl
pushl
mov
lea
jmp
call
mov
pushf
pushl
popl
push
lea
jmp
jmp
pushf
pushl
popl
mov
push
lea
jmp
dec
mov
pusha
mov
stc
push
sub
stc
clc
mov
shr
pushl
pushl
mov
lea
jle
pushf
push
jmp
mov
jmp
jmp
jmp
bt
shrd
call
pushf
pusha
mov
pushf
popl
pusha
push
pushl
popl
pushf
pushl
lea
jmp
pushf
popl
jmp
pushf
pusha
movb
mov
call
pushl
popl
pusha
pushf
pushf
movb
lea
jmp
jmp
not
xor
mov
push
pusha
call
push
jle
sti
inc
arpl
sti
rcll
lret
sti
jle
xor
mov
arpl
sti
shlb
mov
push
xor
ret
sti
bound
sti
sbb
sti
dec
jge
sti
ds
xor
xchg
imul
adc
push
xor
or
sti
jne
xor
dec
jge
sti
or
sti
sbb
lret
sti
enter
das
push
xor
pop
insb
xor
ja
xor
inc
arpl
sti
push
pop
xor
or
sti
lret
sti
mov
arpl
sti
or
sti
sbb
lods
pop
xor
ja
xor
mov
arpl
sti
mov
xor
mov
xor
push
jle
sti
lods
pop
xor
cmp
xor
rcll
out
jp
sti
xchg
sti
rcll
jle
xor
mov
jbe
sti
shll
sti
ja
xor
or
sti
mov
insb
xor
shll
sti
dec
jge
sti
ds
xor
jle
xor
sbb
push
pop
xor
push
pop
xor
js
xor
adc
jge
sti
adc
jge
sti
dec
jge
sti
js
xor
or
sti
js
xor
lods
pop
xor
js
xor
ja
xor
js
xor
out
jp
sti
js
xor
inc
jo
sti
js
xor
cli
js
sti
js
xor
or
sti
js
xor
mov
jge
sti
add
jge
sti
sbb
sti
js
xor
das
push
xor
js
xor
dec
jne
sti
js
xor
cmp
sti
push
xor
int
xor
push
xor
out
jp
sti
push
xor
xor
sti
push
xor
sub
insb
xor
xchg
sti
push
xor
sub
insb
xor
pop
push
xor
push
xor
inc
jo
sti
push
xor
outsl
xor
push
xor
xor
sti
push
xor
int
xor
push
xor
adc
insb
xor
inc
jo
sti
push
xor
das
push
xor
push
xor
xor
sti
push
xor
xor
sti
push
jle
sti
ja
xor
sbb
sti
jne
xor
ret
sti
dec
jge
sti
sbb
sti
adc
bound
sti
xor
sti
xchg
push
xor
xchg
sti
dec
jne
sti
int
xor
adc
push
xor
xchg
sti
or
xor
pop
push
xor
ja
xor
mov
pop
xor
adc
jbe
sti
xchg
imul
mov
push
xor
dec
jge
sti
mov
xor
sub
insb
xor
shlb
mov
pop
xor
sbb
sti
pop
xor
cli
js
sti
adc
data16
ret
sti
enter
jbe
xor
cmp
push
sti
cmp
pop
xor
das
push
xor
ja
xor
dec
jge
sti
or
sti
bound
sti
or
sti
push
pop
xor
das
push
xor
push
jle
sti
jle
xor
adc
outsl
xor
push
pop
xor
ret
sti
mov
pop
xor
pop
xor
mov
imul
sbb
sti
or
sti
xchg
push
xor
outsl
xor
mov
jne
sti
inc
arpl
sti
pop
push
xor
mov
xor
xchg
sti
sbb
or
sti
dec
jge
sti
pop
push
xor
pop
push
xor
cmp
push
xor
shll
sti
bound
sti
or
sti
inc
arpl
sti
cmp
jp
sti
xor
sti
pop
xor
ja
xor
ja
xor
inc
jo
sti
lods
pop
xor
xor
sti
mov
jne
sti
dec
jne
sti
outsl
xor
jle
xor
xor
sti
shll
sti
dec
jne
sti
xchg
push
xor
dec
jne
sti
jbe
xor
sub
data16
cli
js
sti
lret
sti
shlb
push
jle
sti
cmp
jne
sti
push
pop
xor
push
pop
xor
or
sti
sub
pop
xor
das
push
xor
cmp
xor
pop
insb
xor
mov
jl
sti
mov
pushf
mov
pushf
mov
push
pusha
pusha
mov
mov
call
call
push
call
mov
lea
jp
push
lea
jne
add
xorb
mov
setnp
pop
pusha
push
pusha
pushf
lea
jmp
call
push
pusha
mov
pusha
pushf
pushf
lea
jmp
pushl
pushf
mov
call
pushf
mov
movl
push
pushf
popl
pusha
pushl
pushf
push
pushl
popl
push
mov
lea
jmp
mov
pusha
pushf
call
pushf
mov
push
call
call
not
call
pushf
popl
mov
pushl
popl
push
mov
lea
jmp
dec
mov
push
clc
add
pusha
push
mov
pushf
lea
jmp
pushf
movl
pushl
popl
mov
lea
jmp
call
push
call
pushf
mov
call
mov
bswap
jmp
call
mov
pusha
movb
lea
jmp
pushf
mov
jmp
pushf
mov
mov
pusha
pushl
ret
pusha
sub
bt
sub
pushf
mov
mov
push
pushf
pushl
lea
jmp
pushl
mov
movb
movw
movb
pushf
lea
jmp
mov
mov
call
pushf
pushl
mov
and
mov
pusha
rol
pushl
popl
sub
bts
pushf
or
bsr
movl
xor
mov
mov
or
add
not
rcr
rol
cmc
xor
movzbw
inc
mov
rcr
bt
jmp
mov
jmp
pushf
pushf
popl
push
jmp
mov
pushf
mov
jmp
cwtl
mov
clc
pushf
add
pushf
pushf
jmp
sar
rcr
mov
sar
stc
mov
mov
cmp
stc
jmp
mov
mov
push
mov
pushf
pushl
mov
call
movb
pushl
popl
pushf
movb
pushf
lea
jmp
mov
mov
pushf
popl
pushf
movw
jmp
pushl
popl
pusha
push
pushf
pushf
lea
jmp
add
cmp
sub
jmp
movl
jmp
add
push
bt
shld
pusha
mov
mov
movb
push
pushf
popl
call
jmp
push
lea
pushf
push
push
cld
xchg
pop
mov
pushf
pusha
movw
cld
pushl
rep
bsr
jmp
pushf
mov
push
pushf
movw
pushf
popl
pushf
pusha
mov
jmp
mov
pusha
lea
jno
push
pusha
pushf
push
call
sbb
lea
jmp
movl
pushf
popl
jmp
pushf
mov
jmp
mov
pusha
pushf
call
mov
call
pushl
popl
movl
lea
jmp
pushf
call
add
xor
shrd
lea
add
movzbw
xor
xor
shrd
sub
bt
shld
movzbl
pusha
push
test
mov
stc
stc
or
lea
jge
pushf
lea
je
clc
bt
sub
clc
bt
pushf
pushf
xchg
test
mov
call
push
mov
mov
mov
jmp
call
jmp
push
pusha
pushl
mov
push
pushl
popl
pushf
lea
jmp
movsbw
shl
add
setle
mov
rcl
inc
rcr
mov
push
cmp
bt
clc
sub
movw
shl
call
jmp
jmp
mov
call
pushl
popl
movl
mov
lea
jmp
pushl
mov
mov
push
call
pusha
mov
push
movb
pushf
popl
jmp
call
mov
push
call
pushf
lea
jne
bswap
inc
shr
xorb
pusha
lea
mov
pushf
push
pushf
movb
lea
jmp
pushf
popl
call
add
mov
jmp
jmp
cmc
pusha
sub
pusha
mov
movb
movb
movb
lea
jmp
pushf
bts
call
pusha
add
call
movb
mov
pushf
pusha
mov
pushf
jmp
call
pushl
popl
mov
mov
mov
lea
jmp
push
pushl
jmp
pushf
pushf
mov
push
push
lea
jp
pushf
pushf
popl
call
pushf
lea
jne
cmc
rol
xorb
lea
pop
pushf
lea
jmp
call
pushf
mov
jmp
lea
mov
pushl
mov
pushf
movl
pushl
ret
inc
pusha
dec
xor
rcr
movb
bt
ror
jmp
add
btr
bsr
and
mov
bt
add
pusha
pushf
lea
jl
pushf
pushf
popl
push
pusha
jmp
pushf
pushf
mov
mov
mov
mov
movb
lea
jmp
rcl
add
movzbl
neg
shld
xor
not
bswap
inc
btr
test
rcl
neg
push
push
dec
shld
btr
xor
rcr
movsbw
setns
mov
stc
call
push
movb
push
pushf
popl
jmp
pushf
popl
jmp
mov
call
bt
cmp
pusha
jmp
movzbw
mov
sets
add
cmp
stc
sar
btc
add
btr
pushf
rol
stc
sub
add
jmp
bswap
stc
add
movw
bt
cmc
add
call
call
mov
call
cwtl
stc
jmp
mov
call
push
mov
push
mov
push
mov
push
pusha
mov
call
jmp
pusha
pushl
popl
cmp
stc
add
jmp
pushf
pusha
pusha
mov
pushf
mov
mov
pushl
lea
jne
pusha
movb
mov
mov
jmp
shrd
dec
movzbl
sub
pusha
rcr
sub
or
inc
xor
call
pusha
pushl
push
mov
push
mov
pusha
mov
mov
mov
pushf
mov
lea
jle
push
push
jmp
mov
pushf
lea
js
push
pushf
popl
jmp
mov
pushf
pushf
pushl
movb
lea
jmp
pushl
popl
mov
lea
jmp
add
add
pushf
pushf
pushf
mov
pushf
pushf
pushl
popl
pusha
lea
jmp
jmp
pushf
call
xadd
or
and
ror
mov
shr
rcr
pusha
mov
cmp
sub
call
mov
pushf
jmp
ror
btc
rol
ror
not
push
pusha
lea
jbe
inc
pusha
inc
not
movzbw
dec
btc
and
sub
shrd
dec
mov
clc
cmc
clc
cmc
sub
pushf
jmp
call
jmp
lea
jne
lea
xor
shrd
mov
pushf
test
sub
jge
and
pusha
cmp
mov
jmp
pusha
mov
pusha
push
pushl
mov
call
call
mov
jmp
pushf
call
