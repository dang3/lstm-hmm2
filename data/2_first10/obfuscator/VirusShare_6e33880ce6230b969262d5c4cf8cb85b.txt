call
in
add
sub
mov
sub
add
movl
mov
ja
mov
mov
icebp
mov
add
mov
sbb
jg
push
push
mov
sub
movzbl
add
mov
add
cs
fucomip
je
sub
mov
add
mov
mov
mov
jbe
mov
sub
mov
daa
jmp
add
fsubrp
rcrb
pop
add
add
and
mov
cmp
pop
xchg
jl
add
sub
fstp
fistpl
add
cmpsb
adc
out
sbb
and
pop
add
mov
lcall
les
fisttps
sbb
mov
pop
fwait
enter
xor
xor
push
add
fwait
shlb
add
push
sbb
incl
mov
push
sbb
incl
mov
pushf
sbbb
shl
lock
mov
jo
or
leave
ret
mov
fisubs
into
sub
inc
dec
enter
adc
fstpl
outsb
mov
sub
fiadds
add
insl
jbe
faddl
adc
xor
xor
out
or
adc
cwtl
repnz
pop
mov
adc
jnp
scas
mov
push
pusha
mov
or
lock
clc
pop
pop
pop
rorl
call
xchg
outsl
and
enter
bound
je
or
repnz
repnz
mov
out
adc
xchg
adc
sub
mov
pop
out
xchg
leave
xor
inc
icebp
outsb
add
div
push
lahf
mov
cmp
sub
pop
mov
mov
mov
mov
pop
pop
push
mov
ret
sub
les
lock
popa
xor
cmp
je
lock
mov
into
inc
hlt
add
scas
jp
lock
popa
ret
sahf
push
add
ret
jbe
movsb
pop
lock
and
out
adc
jmp
jb
mov
setnp
or
jo
sub
mov
lock
xchg
ret
ret
add
pop
test
mov
push
add
loopne
in
enter
jge
jmp
fisttpl
adc
pop
rcrb
in
push
mov
jmp
sbb
adc
mov
jno
jecxz
or
ret
pop
mov
mov
sbb
push
or
mov
stc
and
push
add
rcrl
shrl
or
or
imul
test
les
sbb
or
rcrb
dec
mov
jge
lock
cli
mov
mov
add
es
rcll
add
ds
cmp
mov
sub
pop
dec
cmpsb
out
mov
inc
hlt
jo
mov
push
pop
jge
insb
add
mov
gs
je
shrb
push
je
sub
call
sbb
lods
pop
jle
js
xor
dec
or
push
push
cli
rorl
mov
enter
sbb
je
rorb
ljmp
pop
and
add
shrb
aas
repnz
xchg
cs
mov
daa
out
call
jae
or
jle
sub
push
out
mov
xor
add
stc
add
ret
test
popw
sbb
or
xchg
xchg
pop
inc
shll
fcompl
clc
mov
loopne
mov
push
mov
testb
inc
sbb
add
jmp
imul
lret
push
in
xor
and
std
outsl
add
std
jne
mov
pop
je
mov
sbb
sub
mov
pop
pop
les
cmp
mov
cld
push
dec
ljmp
ret
mov
dec
adc
or
lock
xchg
sbb
push
pop
ret
or
inc
push
lock
sub
push
xchg
sub
add
sub
dec
scas
adc
dec
movsb
push
fs
push
dec
cmpsl
rorl
punpckhbw
mov
pop
js
fstl
push
into
sbb
data16
mov
fsubrs
insl
ss
pop
add
xchg
push
pop
push
pop
push
scas
xchg
mov
jecxz
or
jp
mov
pusha
rorl
xor
mov
jno
out
push
inc
cmpsl
fcompl
fucomip
into
push
sahf
andw
add
push
adc
sbb
mov
cmp
push
icebp
jno
add
rep
sahf
or
enter
imul
mov
loopne
xchg
call
cmpsb
imulb
push
lret
cmp
call
js
loopne
adc
xor
inc
popf
loopne
icebp
dec
push
inc
adc
fstpt
jbe
mov
fs
and
push
push
mov
adc
sarb
add
and
pusha
shl
jb
add
movsb
pop
xchg
pop
xorb
stos
mov
add
repnz
mov
shlb
ljmp
shrb
xchg
adc
inc
push
pusha
sbb
mov
sbb
outsl
or
je
pushw
inc
loopne
pushf
and
dec
addr16
jo
das
or
xor
das
loope
mov
pop
out
push
or
shlb
pusha
cld
jne
cmp
shrb
xorb
jo
or
subb
mov
ss
test
jmp
push
or
push
fstl
add
add
cmpsb
testb
cmp
adc
scas
cmpl
xor
cmp
je
data16
adc
jbe
cmp
sbb
jmp
and
adc
or
insb
xor
test
or
pusha
push
sub
out
sbb
mov
jg
mov
mov
add
or
in
out
cmp
out
aad
mov
add
or
int
dec
lds
sub
mov
shlb
mov
adc
es
test
fmull
ficoms
ret
pop
sub
pop
sub
push
imulb
mov
loopne
cmp
add
loop
xor
popf
test
inc
pop
pushf
rolb
push
push
mov
mov
xchg
test
rcrl
mov
inc
cmp
lods
fistpl
add
test
push
push
out
fiaddl
sub
dec
hlt
imul
outsb
lock
jmp
push
test
jmp
popf
js
loopne
or
sarb
cmp
mov
push
or
sub
cld
add
lock
xchg
adc
and
rorl
call
sbb
je
mov
pop
cmp
push
stos
and
push
lahf
cmpsb
inc
sbb
sbb
add
inc
inc
push
icebp
mov
test
fwait
push
inc
add
sub
mov
push
test
pop
mov
sub
xchg
sbb
pop
int3
and
jo
mov
ret
cmp
in
inc
ret
or
test
jl
shll
push
push
sbbb
out
adc
out
push
fsubr
aas
pop
cs
lds
push
mov
rorb
out
or
adc
outsb
faddl
pop
mov
pop
sbb
shlb
sarb
mov
dec
faddp
or
vmread
add
mov
xchg
inc
sub
push
cmp
xor
sbb
and
imul
aam
sub
test
xchg
jb
adc
mov
add
sbb
sbb
xchg
push
inc
mov
pop
bound
push
xlat
push
jmp
jno
add
adc
call
notl
nop
imulb
push
test
lds
into
std
mov
fstpt
mov
push
aad
pop
orl
rclb
jge
sbb
xor
addb
icebp
jbe
ret
add
rcr
mov
mov
push
ret
cmp
xor
shll
leave
into
fimuls
ds
out
cmp
inc
sbb
movsl
sbb
pop
add
sbb
jg
addr16
loope
je
movsb
add
shl
fwait
sbb
cmp
je
outsl
push
push
jg
std
push
outsl
add
or
fistpll
stos
les
pushw
or
or
inc
push
adc
inc
push
cmp
neg
test
cmp
insb
test
mov
das
or
jns
and
std
call
decb
mov
jno
inc
cmpsb
lds
cwtl
mov
or
jne
xchg
or
xor
push
xor
pop
mov
push
push
loope
fsubl
out
ficoms
inc
push
rol
push
push
rcrb
push
push
imul
mov
and
mov
sbb
inc
xchg
clc
ret
push
icebp
and
icebp
imul
loope
add
imul
shl
push
mov
pop
out
test
push
fstp
sub
xor
out
mov
pop
cs
mov
outsb
xor
push
mov
in
shl
jo
mov
mov
sbb
mov
lahf
imul
push
adc
fmulp
push
ret
dec
call
ret
dec
pop
inc
shr
daa
dec
or
add
js
je
decb
add
inc
mov
popf
sbb
cmp
jo
rol
mov
mov
xor
pop
xchg
mov
cld
ffree
fdivl
xchg
xor
adc
sti
pop
pop
mov
push
or
jno
add
push
sub
fs
leave
pusha
inc
aam
mov
jb
in
xchg
sbb
mov
sub
add
dec
and
push
movb
jo
push
jg
sbb
push
mov
add
stos
inc
pop
js
mov
mov
add
test
leave
rcl
push
cs
push
js
mov
loopne
sti
movsl
and
movsb
sbb
shrb
rcll
mov
mov
test
sub
push
sti
push
setae
push
out
xor
jge
mov
js
repnz
rcrb
int
in
inc
pop
or
std
lods
push
clc
sbb
pusha
sbb
popa
fwait
pop
push
pop
pop
std
and
mov
and
lcall
xor
push
sti
jo
es
fcom
pop
fwait
push
push
sbb
sbb
pushf
add
stos
jmp
ror
sbb
stos
mov
pop
inc
dec
fdivl
mov
lcall
push
jle
xchg
adc
inc
ret
call
push
or
enter
loope
add
sbbb
xchg
add
mov
xor
mov
push
mov
lret
xor
mov
inc
js
and
dec
pop
loop
lods
mov
push
mov
or
jmp
roll
pop
jnp
sub
cmp
cmp
jmp
cli
js
pop
sub
out
mov
roll
inc
jl
add
sbb
jge
pop
dec
or
cmp
shlw
cmp
jnp
adc
cmp
ret
push
xchg
sub
gs
lock
xor
hlt
js
sub
and
repnz
lds
sbb
sub
or
sbb
dec
ret
dec
lcall
addl
xchg
ds
or
adc
push
les
leave
dec
dec
sbb
cmp
sub
cwtl
add
shr
insl
inc
xor
mov
jecxz
int3
pop
mov
or
test
adc
mov
push
push
mov
xchg
shrb
cmp
jo
mov
int3
shlb
push
ja
mov
add
or
rcrb
and
cmp
sbb
int3
xchg
pop
popf
insb
fsubs
and
jl
adc
sar
rcl
xchg
or
adc
pusha
out
mov
mov
adc
outsb
je
out
pop
adc
lret
jo
mov
push
add
leave
callw
inc
mov
adc
dec
sub
je
jl
pop
shrb
imul
inc
xchg
sahf
mov
fcompl
push
push
dec
pop
loopne
adc
adc
test
mov
scas
lcall
leave
or
adc
mov
fcomps
xor
shll
pop
nopl
rolb
or
addb
adc
lods
arpl
mov
xchg
jge
sbb
adc
clc
jo
push
pushf
outsl
mov
lods
inc
cmp
nop
ljmp
rcrb
jb
movhps
xacquire
loopne
scas
and
cmp
lea
pop
mov
pop
ljmp
pop
mov
pusha
xchg
dec
or
jp
mov
adc
push
push
cmp
clc
cli
xor
xor
les
adc
scas
inc
ljmp
mov
sbb
jo
xchg
add
notb
fbstp
lods
and
lcall
add
cmp
ror
rcrl
prefetch
push
jmp
dec
push
push
test
or
sar
aam
loopne
and
xchg
cwtl
cmp
sti
mov
shrl
sahf
rclb
stos
popa
rcl
sbb
sbb
mov
add
nop
adc
cli
call
mov
clc
dec
data16
xchg
cmp
fs
loop
sbb
cmp
into
jge
push
xchg
xlat
lea
or
pop
mov
popf
push
repnz
sub
pop
mov
and
sbb
adc
pushf
inc
xorb
test
je
cmp
mov
fwait
mov
inc
mov
mov
mov
shlb
xor
add
or
fdivrp
cltd
adc
push
jo
mov
lock
adc
adc
mov
add
enter
pop
test
bound
cmpsb
shl
adc
lcall
sysret
jo
enter
insl
adc
xor
add
or
xor
push
cs
mov
push
mov
push
sub
xor
in
js
mov
mov
lcall
inc
adc
sub
inc
xor
add
push
jne
movsl
rolb
mov
adc
addb
or
pop
add
fs
ret
in
push
cmova
in
loop
mov
mov
xchg
sbb
test
xchg
adc
sbb
ljmp
enter
cmpsb
shlb
subl
adc
and
xor
push
sbb
sub
lods
subb
sub
sti
rclb
adc
push
mov
xchg
movsb
daa
sub
dec
dec
mov
push
add
pop
les
push
leave
sahf
push
push
movsl
pop
push
xchg
addl
and
push
add
sbbl
or
add
sbb
enter
mov
cmpsb
rolb
inc
sbb
push
arpl
xchg
adc
push
shlb
add
rorb
or
cld
add
les
push
or
sbb
fnsave
mov
pusha
lcall
pop
test
andl
push
xchg
mov
xor
lret
inc
inc
mov
stc
sbb
mov
sbb
loope
push
push
js
popl
mov
jp
mov
xchg
ds
test
rorb
xchg
ss
stos
addl
stos
jo
mov
lds
mov
dec
rcrb
mov
adc
mov
sarb
mov
jae
add
lock
xor
pop
mov
pop
mov
outsb
push
scas
jmp
lods
aam
in
scas
rorb
pushf
adc
aaa
xchg
sub
jl
mov
sbb
fsubrs
xchg
pop
lahf
xchg
and
push
pop
loopne
lcall
pop
push
jle
cld
cs
mov
add
push
andl
lahf
punpckldq
subl
xchg
ljmp
inc
cli
push
mov
push
cltd
les
dec
loop
das
imul
movsb
sub
pop
arpl
mov
add
or
jmp
sbb
push
and
pop
pushf
into
in
leave
ss
mov
mov
adc
enter
cwtl
rclb
clc
mov
in
out
xor
fstl
sbb
pusha
ffreep
dec
les
orb
cmpsb
or
aas
rclb
repnz
lahf
pop
xor
xor
mov
add
sbb
mov
jl
inc
xchg
arpl
push
lods
sbb
mov
clc
shrl
mov
out
sbb
push
rorb
ret
addb
sub
shr
push
pop
push
add
or
mov
or
bound
push
ss
lods
ret
les
xor
sub
das
cmp
lods
inc
sti
js
popf
ret
aam
andb
stos
pop
inc
lods
repnz
test
call
pop
data16
and
dec
call
adc
push
loopne
mov
push
cli
jno
gs
jp
scas
icebp
ret
lea
pop
or
push
add
nop
mov
les
push
clc
or
jo
aas
hlt
cmp
mov
loopne
pop
repnz
sbb
sub
push
mov
loopne
mov
jns
or
sbb
mov
push
xor
stos
or
int3
mov
inc
lret
adc
shlb
inc
mov
popl
nop
push
scas
mov
adcl
add
push
or
orb
inc
dec
push
mov
adc
mov
sub
cmp
stos
and
lock
sub
cmc
inc
sbb
push
mov
loop
orl
enter
fdivl
mov
push
add
js
mov
adc
adcb
test
xchg
mov
sbb
adc
xchg
sbb
and
loopne
or
cmp
mov
negb
out
lahf
add
pop
xchg
xor
je
pop
lods
idivb
arpl
mov
jb
fsts
xor
shrl
icebp
sub
shlb
lods
mov
mov
push
mov
fdivrp
xchg
into
aaa
jl
shll
pusha
andb
test
mov
orl
adc
hlt
inc
lret
and
dec
setae
push
filds
sub
adc
xlat
mov
jmp
sbb
mov
pop
add
push
cli
stos
mov
into
push
in
jae
and
popf
sub
sub
popf
push
into
sub
and
jl
call
xchg
fdiv
push
jnp
out
or
lcall
or
notb
pop
pop
inc
jmp
mov
jns
nop/reserved
jg
repnz
adc
pop
imul
adc
movsb
inc
cmpsl
inc
jmp
sbb
mov
sub
add
pop
sub
or
rcrb
mov
sbb
or
arpl
cmpps
nop
mov
aaa
shll
push
xchg
dec
pop
mov
sete
icebp
cmp
outsl
leave
xchg
idivb
aam
add
inc
mov
sahf
jmp
jg
lret
adc
gs
push
mov
loop
and
fwait
mov
adc
ret
sti
daa
sbb
mov
jecxz
push
ret
fdivl
mov
xorb
ret
push
pusha
test
jb
push
pop
push
pop
pop
jmp
notb
push
ds
push
pop
push
cmp
pop
jge
ret
cli
add
add
pop
gs
cmpxchg
movsb
lock
cmp
sub
mov
or
movsl
add
fmull
je
adc
icebp
loope
push
scas
lea
dec
roll
data16
and
adc
loop
fidivrs
loopne
cli
or
cmp
or
cwtl
jo
aad
sahf
loopne
cmp
jbe
je
adcb
lods
ljmp
cmpsb
rclb
lret
and
mov
and
dec
push
mov
fnsave
mov
mov
mov
inc
adc
out
sub
push
add
arpl
sahf
cwtl
push
pusha
bound
and
add
addb
xor
outsb
movsb
rcrl
das
repnz
mov
push
pop
sbb
cmp
push
sub
rcll
mov
aad
ljmp
aam
xor
pop
stos
clc
adc
sarb
clc
push
into
arpl
push
stos
mov
js
shlb
test
ljmp
jp
pusha
icebp
add
je
xchg
sbb
push
scas
xor
push
mov
jecxz
pop
in
test
loope
xor
ret
add
push
adc
mov
rorb
lret
add
pop
sub
push
je
fs
pop
jl
dec
clc
or
mov
dec
sub
pop
adc
clc
push
or
mov
dec
push
sub
jno
adc
dec
sub
xchg
push
xchg
pop
mov
stos
sahf
cmp
icebp
dec
mov
loope
mov
sahf
jbe
jmp
cld
dec
rol
pop
scas
and
subb
pop
jle
in
xchg
push
roll
nop
pusha
orl
call
or
sti
in
pop
loop
push
int
sub
jne
ds
fbld
mov
clc
cmpsl
out
push
adc
lcall
stc
in
pop
xor
nop
aad
lret
sub
sar
repnz
das
aad
mov
push
shld
inc
sub
mov
xchg
xchg
aad
das
mov
in
mov
cmp
stc
repnz
jne
jge
sub
add
nop
cld
jnp
xchg
push
inc
sbbl
jl
addr16
fstl
repnz
das
mov
js
sbb
jg
stc
adc
jp
cmp
dec
pop
push
icebp
adc
xchg
inc
jle
in
sub
pop
les
add
outsl
cld
repnz
mov
enterw
mov
repnz
das
mov
gs
test
add
mov
jp
out
test
int
xchg
das
mov
mov
or
in
jle
test
or
adc
jge
stc
in
pop
cmp
insl
test
ljmp
popf
ret
adc
stc
mov
sbb
lcall
mov
imul
jl
in
leave
xorl
sbb
rorl
repnz
mov
sbb
repz
das
jl
xchg
das
mov
sbb
xlat
jle
add
xchg
pop
jle
das
push
push
xorl
pop
ds
mov
in
xchg
xorb
stc
sti
enter
inc
push
mov
or
pop
pop
xchg
sub
pop
in
cmp
fucomi
divb
repnz
das
mov
xchg
daa
dec
shlb
mov
mov
lahf
aas
lret
push
xor
mov
mov
adc
mov
popf
cld
repnz
mov
pop
mov
mov
pop
in
jg
pop
add
lret
pushl
arpl
jle
fs
xchg
popf
pop
in
pop
mov
shll
mov
jne
add
inc
or
ret
lret
das
push
adc
sub
xchg
pop
pop
xor
push
mov
outsb
inc
das
ds
addr16
test
xor
adc
sub
cld
repnz
or
repz
cmp
les
das
dec
push
dec
iret
es
and
das
ds
out
mov
dec
cli
data16
dec
pop
jge
stos
sbb
add
inc
sub
xchg
xor
sub
inc
ds
mov
mov
test
fidivl
jle
test
aad
push
mov
push
mov
cmp
ss
jno
mov
xchg
movsl
test
cld
repnz
das
arpl
or
cmp
repnz
das
mov
add
repnz
filds
cld
cmpsl
mov
push
stos
xorb
aad
jle
in
add
addr16
pop
iret
sbb
imul
dec
enter
leave
xchg
jp
xorb
cmp
pop
mov
push
shlb
add
aam
aad
xchg
adc
xchg
in
pop
jle
cmp
pop
pop
jg
ds
jge
cmpsl
xchg
pop
jle
inc
in
cld
xor
lret
add
push
dec
adc
or
stos
inc
stos
jmp
jle
in
pop
cmp
mov
cmpsb
lods
loope
mov
in
pop
mov
test
rorb
sub
jns
sub
fs
pop
jle
divl
xlat
mov
mov
ja
test
mov
pusha
jle
in
sub
in
jns
out
mov
pop
repnz
or
fstl
enter
jle
xchg
mov
movsl
js
stos
jle
ds
test
and
js
in
jl
cld
repnz
fimuls
push
popa
add
mov
cmp
push
adc
aad
and
sti
mov
lods
adc
or
mov
pop
jle
out
cmp
pop
xor
jae
repnz
and
jl
push
and
lret
mov
jno
push
jp
xor
sub
mov
mov
sbb
pop
sub
cld
jnp
lret
fstpt
pop
adc
pslld
das
mov
inc
cmp
je
das
mov
lahf
mov
pusha
jo
cmp
lahf
sbb
jns
in
int
and
mov
in
call
or
add
orb
adc
cmp
mov
movsl
jge
repnz
pop
push
clc
lahf
dec
mov
jbe
lret
das
ds
mov
fsubrs
cld
repnz
gs
xor
div
inc
into
mov
lret
sub
into
dec
sbb
bound
push
cld
repnz
das
xchg
dec
push
int
movsl
cmp
sub
fbld
mov
popa
flds
ss
bnd
mov
inc
enter
mov
lret
inc
or
adc
cmp
push
mov
repnz
das
mov
xchg
out
xor
mov
pusha
out
adc
popf
sbb
cmp
mov
loop
mov
rclb
xchg
stc
in
lcall
iret
dec
lods
popa
push
stc
in
xor
jbe
daa
popf
jl
fstpl
repnz
das
decl
jl
in
leave
cmp
pop
cmp
sbb
mov
pop
jle
in
push
outsb
sti
mov
pop
call
fwait
sub
in
pop
push
mov
popa
xchg
cli
orl
popf
outsb
lcall
mov
jle
push
and
mov
xchg
pop
jle
pop
addr16
push
xchg
inc
inc
xchg
sahf
push
xor
mov
and
pop
sbb
mov
das
fisubrl
pop
fimuls
fsubs
das
ds
jmp
push
jb
cmp
cld
repnz
push
fucomip
and
cmp
mov
scas
pop
pop
popf
std
clc
sub
aaa
pop
inc
mov
cs
or
or
adc
das
mov
fimull
test
lret
das
mov
imul
inc
shrb
mov
mov
ret
ret
mov
xchg
call
dec
arpl
sub
lret
das
pushw
aaa
mov
push
leave
mov
test
jns
aas
sbb
adc
jmp
or
jno
jge
out
mov
cmp
mov
xchg
cmp
stc
in
pop
div
lock
xchg
rcll
xchg
pop
jle
sti
cmp
xchg
sub
inc
inc
cmpsl
jl
or
push
insl
outsb
mov
xchg
inc
jle
sbb
mul
dec
popa
sub
mov
ret
mov
insl
std
and
jle
in
rol
and
dec
jno
and
in
loope
imul
stos
stc
in
pop
rcrb
adc
add
in
pop
jle
and
jnp
imul
aam
jns
cld
jnp
popa
aam
les
enter
jmp
enter
xorl
jmp
out
xchg
pop
jle
mov
cmp
into
call
inc
das
mov
fcomps
cmpsb
pop
or
dec
inc
sub
cld
repnz
fbstp
loopne
or
cld
repnz
das
fnstenv
xchg
lret
sub
imul
mov
lret
das
mov
mov
cwtl
adc
xor
stc
leave
xchg
sub
pop
jmp
cltd
or
mov
cwtl
sbb
inc
pop
sbb
std
or
xchg
sarl
enter
or
mov
into
xchg
stc
in
pop
push
inc
mov
inc
and
xchg
pop
jle
rcrb
into
fimuls
xchg
in
repnz
scas
nop
mov
jl
sbb
pop
jmp
push
out
inc
fptan
lret
mov
mov
dec
xchg
cmp
andl
ret
sahf
mov
xlat
sbb
push
rclb
inc
ret
stc
in
inc
leave
insl
out
push
inc
mov
lds
sbb
xchg
pop
jle
out
test
cmp
into
mov
pop
jle
arpl
movsl
notl
addb
test
int
jle
in
mov
push
ss
and
xchg
jle
in
xchg
sar
pop
scas
ret
sub
pop
xchg
out
mov
jle
add
jle
lret
sbb
sbb
push
stc
sbb
popl
lods
jne
inc
mov
cmp
mov
mov
test
lods
insl
dec
jo
pop
sbb
les
fxch
mov
jp
xchg
cltd
inc
lds
and
mov
pushf
xchg
in
xlat
xchg
loope
or
mov
rcrb
jne
jns
push
mov
das
push
fst
lods
cli
es
push
repnz
lret
das
mov
scas
mov
mov
inc
mov
cmpsb
cld
push
loope
jg
aaa
pop
loopne
mov
dec
jmp
mov
hlt
mov
mov
incb
sub
movsb
movsb
aas
xchg
mov
mov
jbe
rol
or
insl
repnz
das
mov
jp
aad
push
adc
das
mov
mulb
cs
fbld
mov
lret
sbb
mov
cmc
lret
das
incl
outsl
ficoml
ja
pop
dec
das
mov
mov
dec
enter
pop
cmp
mov
repz
bound
inc
shlb
mov
jnp
cli
pop
mov
pop
imul
jnp
jae
pop
clts
push
out
jo
jle
in
loope
xor
ret
test
lret
out
and
xchg
fdivrs
mov
mov
sbb
pop
pop
into
and
xchg
fdivrp
in
jae
mov
push
adc
imul
pop
jle
roll
jp
push
add
jle
mov
add
aas
insb
push
in
test
push
pop
aad
cmc
jge
ja
rcrl
fdivl
cld
repnz
das
fucomi
aad
pop
mov
mov
popa
test
mov
aam
add
les
mov
cmp
pop
jb
shlb
pop
lcall
cmc
int3
dec
insl
ja
stos
test
adc
xchg
imulb
xchg
and
mov
inc
lock
das
lcall
xor
mov
xchg
push
outsl
pop
das
mov
adc
call
ja
xchg
inc
mov
into
push
in
leave
ret
jmp
and
in
fnstcw
cmp
cs
cmp
dec
repnz
das
mov
or
inc
popf
lret
das
mov
sub
clc
add
mov
dec
stc
addr16
ds
dec
jecxz
mov
inc
nop
clc
mov
push
mov
cld
repnz
das
push
xor
aam
fdivl
jg
or
out
dec
lret
mov
dec
ss
data16
std
xchg
out
xchg
sub
pop
jnp
sbb
pop
sti
das
mov
test
rorl
pop
cmpb
repnz
pop
inc
enter
mov
enter
ret
repnz
das
cmpsl
rcrl
scas
pop
sarl
div
cld
xor
lret
das
mov
cmp
fmul
das
mov
jge
stos
jb
fwait
push
jnp
mov
mov
mov
push
rcrb
repnz
lock
data16
dec
shll
cmp
repnz
das
push
in
pop
and
je
mov
mov
loope
jns
jb
pop
cs
jns
cmp
and
cltd
sub
sub
or
in
push
cmp
movsl
setnp
repnz
push
pop
stos
lcall
enter
jg
pop
jns
sbb
and
fcom
adc
in
pusha
and
jp
mov
stc
in
pop
xor
adc
in
pop
jle
mov
push
xor
repnz
ds
xchg
test
push
lcall
data16
cld
xlat
in
cmp
pop
stc
in
cmp
inc
sar
das
enter
push
lret
mov
ret
ljmp
or
inc
mov
sbb
std
xor
pop
call
call
and
sub
add
push
iret
fwait
nop
jnp
bound
push
scas
mov
insl
inc
popf
dec
imul
mov
or
repz
inc
pop
popf
pop
fidivrs
iret
inc
leave
cltd
adc
test
shrb
sbb
mov
xchg
pop
jle
fistl
xchg
push
adc
mov
stc
pop
jge
jle
in
pop
mov
sti
xchg
pop
xor
mov
out
stc
in
stc
repnz
lret
mov
mov
and
xchg
pop
lahf
cmp
or
inc
lods
mov
mov
xlat
add
das
push
enter
out
adc
push
and
sbb
dec
jae
push
movsb
adc
mov
cld
repnz
das
enter
or
fists
mov
pop
clc
repnz
das
mov
hlt
adc
cli
addr16
stos
lret
das
mov
in
add
xor
add
cld
repnz
add
ret
sub
mov
out
mov
sti
push
add
es
test
cmpsl
repnz
das
mov
clc
xchg
lds
pop
pop
imul
mov
clc
xchg
ficompl
sub
mov
adc
jecxz
lar
lahf
pop
stc
repnz
repz
sub
jmp
sub
fdivr
in
jg
sub
call
stos
inc
lods
jnp
xchg
pop
jle
xor
mov
mov
inc
sahf
cmp
std
mov
scas
fists
xor
pop
inc
fcoms
xchg
push
pop
jns
imul
rcr
das
push
enter
cwtl
mul
mov
inc
fidivs
mov
xchg
mov
sti
rcr
ss
cmpsb
negb
add
cmp
dec
adc
lret
das
mov
insl
mov
inc
loop
outsb
das
mov
imul
js
push
xor
lods
icebp
xchg
cmp
ret
sbb
in
hlt
int3
mov
jno
and
add
insl
cmp
repnz
popf
call
sub
loope
jle
scas
inc
fiaddl
pushl
rcpps
and
add
popa
pop
lret
das
mov
xchg
test
sub
jns
cmp
mov
bound
jnp
in
push
pop
lods
shll
mov
iret
out
cwtl
lahf
pop
pop
jns
xchg
sub
and
aam
add
stc
in
pop
aam
jnp
jb,pn
sub
sub
jle
in
notl
je
sahf
jo
mov
push
xchg
pop
sub
inc
fwait
xor
pop
xor
lret
das
mov
lret
push
aad
and
repnz
outsb
iret
shrb
cli
jnp
scas
mov
scas
lret
mov
mulb
sbb
repnz
das
nop
fimuls
es
loope
enter
insb
inc
and
xor
mov
inc
xchg
and
xor
sub
pushl
cld
xor
cmc
sub
in
sub
sahf
pushf
lods
mov
dec
test
and
jbe
cmp
adc
enter
push
stc
mov
xchg
pop
mov
push
mov
in
jp
sbb
xchg
pop
jle
jmp
lcall
mov
mov
sti
fiadds
jp
xor
stc
in
inc
popf
inc
push
add
add
inc
in
pop
jle
add
xor
lret
ret
in
sbb
fmul
mov
leave
pop
xchg
call
jle
in
mov
in
inc
mov
cwtl
pop
xor
jl
in
lahf
jno
movsb
setp
mull
repnz
mov
inc
pop
icebp
sahf
imul
add
mov
pop
cmp
sahf
sbb
test
sub
jle
in
repz
call
adc
movsl
adc
xchg
aaa
popf
sub
pop
and
sub
stc
dec
repnz
and
cli
jae
fwait
out
mov
push
mov
lret
das
mov
cmp
xchg
pop
mov
adc
repnz
push
sbb
clts
pop
pop
push
xor
out
jle
notl
fs
imul
stc
in
pop
jg
cmp
sub
xchg
out
mov
jle
push
sbb
mov
mov
sbb
inc
adc
inc
shr
stos
popl
or
jmp
aad
add
xchg
jg
sbb
rorl
rolb
mov
repz
jne
mov
pushf
mov
jl
in
shlb
daa
xor
in
and
xor
pop
jnp
jns
xchg
push
xorb
dec
lods
jg
outsl
insb
xor
xchg
xchg
push
pop
cwtl
bound
adc
pop
jle
divl
mov
xchg
fmull
loopne
sarl
xchg
pop
clc
inc
imul
in
pop
icebp
nop
dec
aam
mov
leave
outsb
lret
mov
mov
xchg
pop
out
int
mov
repnz
xchg
int
inc
shlb
lods
repnz
aas
lds
or
nop
cmp
fbld
mov
out
inc
mov
ret
push
adc
stc
in
pusha
cmpsl
aam
sub
popf
jns
jae
stc
in
add
int3
xchg
inc
push
pop
mov
xor
inc
outsb
addl
jbe
mov
mov
es
lods
int3
das
or
das
mov
loope
xchg
idivb
rorb
cld
in
dec
imul
inc
mov
jns
cmp
jg
mov
and
sbb
push
movsl
loope
in
push
pop
repz
jp
fcoml
js
into
dec
das
mov
push
pop
jns
shll
fldt
scas
jle
ja
insb
insl
dec
mov
and
ss
xchg
jmp
xchg
pop
aad
fwait
cltd
sbb
notl
xlat
mov
sbb
stc
imul
sti
push
pop
dec
jmp
jp
xor
lret
jle
in
popl
outsb
bound
outsb
in
ss
in
pop
call
push
push
arpl
inc
in
pop
jle
push
addb
std
mov
pop
jle
mov
cmp
push
inc
jle
in
outsl
mov
std
jno
adc
in
test
mov
and
push
pop
out
xorl
out
mov
or
jns
mov
divl
dec
dec
loop
jle
inc
push
fisubrs
clc
icebp
mov
mov
and
push
psubsw
xchg
xor
cld
repnz
das
out
sbb
not
popa
fbld
mov
sbb
ret
stos
xchg
xchg
pop
jle
pushf
adc
and
adc
jle
in
dec
icebp
jg
pusha
in
inc
xchg
lcall
cmpsl
adc
pop
inc
idivb
fiaddl
lcall
jb
insl
jge
sub
outsb
lds
repnz
push
xor
cmpsl
fidivrl
repnz
sbb
leave
popa
fldl
sahf
cmpsb
sub
fstps
push
jl
push
insb
scas
mov
sarb
add
repnz
pop
loope
and
mov
scas
xor
sbb
lods
mov
jge
mov
call
xor
aaa
ss
xor
stos
mov
dec
adc
mov
jns
xchg
mov
xchg
xchg
mov
imul
pop
or
repnz
enter
cld
repnz
imulb
loope
bswap
leave
jl
in
sub
adc
int3
int
push
insb
repz
add
out
test
ss
repz
int
pop
test
pop
dec
scas
mov
scas
ret
std
mov
cmpb
pop
xchg
inc
lods
mov
mov
xchg
add
or
stos
mov
lods
ljmp
or
pop
jle
test
xchg
fimull
xchg
pop
jle
xchg
and
cmp
test
mov
cltd
and
jecxz
ret
and
sub
les
das
scas
in
jae
scas
mov
imul
aas
imul
and
movsl
add
cld
loopne
outsb
or
mov
or
adc
and
inc
sbb
sti
enter
in
aaa
mov
imul
mov
xchg
je
add
stc
xacquire
int3
es
lahf
adc
out
jns
repnz
subl
inc
ljmp
jg
fsubrl
xchg
ds
pop
jle
inc
mov
sbb
mov
jle
out
daa
test
pushf
movsb
push
mov
inc
pop
in
lods
inc
js
xchg
pop
sar
xchg
jg
shrl
mov
rorl
jle
loope
sbb
or
inc
mov
mov
xchg
pop
jle
xchg
hlt
popf
jg
stc
or
pop
stc
repnz
xchg
stc
mov
gs
fdivrp
in
jg
jecxz
ret
sbb
mov
jp
xchg
pop
jle
iret
shl
sbb
or
stc
lcall
jno
adc
or
mov
or
popf
imul
rep
movb
jb
or
clc
enter
mov
mov
mov
mov
sub
fwait
add
sub
lret
fbstp
inc
arpl
adc
mov
test
stc
fmul
loop
jl
mov
xchg
movsb
pop
jns
popf
popa
xor
pop
pop
notb
mov
jns
xchg
push
lahf
xchg
jp
sub
out
dec
and
pop
jns
sbb
pop
btc
cmpsl
or
cmp
enter
cmc
lods
stos
jge
and
add
sub
jp
in
or
inc
repnz
xchg
ss
push
or
jecxz
add
sub
insb
icebp
cmc
jg
call
scas
cld
mov
jmp
addr16
stc
repnz
cmp
inc
sbb
in
outsl
xchg
or
cltd
cltd
loopne
outsb
in
mov
lret
pop
data16
or
das
aam
xor
das
ds
inc
repz
pop
jbe
mov
dec
dec
fstps
ja
xor
cld
repnz
jl
xlat
xchg
push
pop
push
jne
cli
inc
mov
lret
das
repnz
sbb
rclb
mov
popaw
sub
push
xor
push
dec
xchg
pop
repnz
das
lcall
adc
xor
mov
jge
and
push
mov
movl
int3
inc
sti
mov
jbe
je
repnz
das
mov
movsl
aam
in
or
lret
lret
das
mov
adcb
jnp
add
pop
out
dec
cmp
rol
jmp
pushf
xlat
gs
pop
or
pushf
mov
mov
or
repnz
sbb
bound
aam
add
lret
mov
mov
rcr
sub
outsb
push
test
pop
xchg
sbb
push
je
mov
mov
and
cmp
lret
pop
jo
pop
rorl
add
and
enter
push
and
xlat
xor
mov
out
repnz
xchg
imul
fistps
fdivl
inc
sbb
cmc
xchg
das
mov
out
int
mov
lret
das
jg
pop
aam
mov
inc
sahf
jno
inc
ret
leave
xor
test
stos
mov
adc
sub
sbb
popf
mov
jp
lock
mov
in
pop
incb
xchg
lcall
sti
xchg
push
add
lds
fnstcw
xchg
imul
push
or
xor
js
mov
pop
and
xchg
mov
cmp
xchg
movsl
pushl
inc
mov
notb
sbb
imul
repnz
das
inc
and
pop
ret
inc
and
or
test
ss
xor
loope
pop
fisttps
out
rcrb
lea
or
lret
push
out
xor
and
xor
mov
shlb
adc
cld
repnz
xchg
dec
mov
mov
xor
xchg
jg
cmp
ret
add
mov
mov
sub
lret
mov
xchg
pop
jle
cmp
sub
xor
add
add
adc
adc
sub
rorb
in
repz
lods
push
cli
dec
mov
aad
in
pop
cltd
xchg
mov
lds
or
xchg
aaa
xor
int
call
stos
or
jns
mov
pop
fidivs
and
xor
pusha
fs
xlat
push
dec
out
pop
arpl
outsl
test
lods
call
push
mov
xor
sub
ret
mov
jge
rcll
sub
jns
xchg
ljmp
pop
dec
mov
jb
jns
xchg
push
adc
cmp
adc
ja
roll
pop
sub
push
add
lret
das
mov
mov
cmc
xchg
pop
scas
inc
jmp
das
mov
inc
jl
jno
leave
or
pop
mov
mov
lcall
add
add
jmp
addl
xchg
iret
inc
ficoms
mov
mov
jle
jae
je
data16
pop
sbb
mov
dec
pop
jle
in
xlat
mov
xor
and
add
in
lret
pop
test
out
data16
cmpl
or
imul
xchg
pop
jle
inc
mov
dec
leave
fs
int3
cmp
mov
mov
xor
dec
pop
mov
mov
lret
and
outsl
jns
pop
xchg
cmp
cmpsl
adc
adc
in
jg
pop
fs
xchg
xor
xchg
pop
jle
sar
aas
scas
inc
jae
popf
repz
jbe
mov
sub
mov
and
js
or
mov
jbe
jne
sbb
pop
cli
mov
gs
iret
mov
pop
repnz
ss
dec
xor
test
xchg
jg
cld
cmp
mov
insl
fchs
jl
and
paddb
out
and
testl
hlt
mov
cmp
sbb
pop
out
push
fmull
mov
pop
aam
adc
repnz
das
pushf
sub
shl
insb
jnp
repnz
das
mov
jl
popf
rorl
das
mov
nop
movsb
repnz
mov
cli
sub
popa
jl
notb
or
jns
loope
mov
in
repnz
fs
mov
pop
sub
scas
call
in
add
das
ds
dec
mov
and
pop
sahf
dec
pop
stc
repnz
xchg
sbb
xchg
xor
jns
mov
cmpsl
icebp
xchg
das
int
aad
lret
shll
mov
movsb
pop
mov
scas
test
cmp
xchg
and
push
mov
xchg
push
pop
jns
pop
lcall
inc
lea
in
inc
pop
adc
popf
jb
push
addr16
or
adc
and
out
fisubrs
mov
inc
les
push
js
jno
mov
in
add
jae
adc
mov
and
shrb
or
push
adc
mov
lods
arpl
push
inc
ret
mov
notl
push
and
fcoms
inc
movsb
inc
jle
in
pop
xchg
sub
jns
inc
fwait
pop
les
adc
js
enter
in
out
adc
das
cwtl
or
outsl
stc
test
inc
dec
jecxz
mov
lret
mov
mov
xor
das
mov
insb
xor
pop
aad
inc
ds
pop
push
cld
cmp
insl
mov
dec
sti
or
inc
repnz
mov
fisttps
jno
or
lret
das
mov
lret
push
mov
xor
and
mov
sti
hlt
dec
xchg
sub
xchg
dec
out
aaa
daa
outsb
cmpsb
jns
ror
das
lcall
test
jmp
inc
mov
jge
call
lds
pop
lahf
nop
xchg
sub
and
xchg
cmpsl
cmp
fldl
lods
mov
cltd
dec
js
xorb
repz
xor
mov
sub
sub
xor
xchg
mov
dec
scas
mov
fstps
scas
inc
scas
loope
mov
repnz
popf
dec
pushf
pop
in
in
dec
in
dec
add
lret
inc
loope
pop
cltd
inc
test
scas
mov
xchg
add
sub
in
or
imul
cltd
mov
inc
mov
add
rorl
scas
lret
pop
jle
adc
add
jns
mov
call
xor
jns
lods
sub
movsb
jno
cs
xchg
xchg
push
loope
push
jae
sbb
mov
xchg
xchg
push
pop
mov
xor
insb
push
or
sti
in
mov
lds
test
int3
daa
or
pop
sti
jge
lret
das
add
pop
and
sub
add
ja
out
outsl
cltd
mov
jg
cmpb
jecxz
or
cmp
add
lahf
cld
repnz
das
dec
add
dec
and
das
mov
sbb
sub
mov
adc
dec
sbb
jns
cmp
scas
lods
lret
sub
xor
arpl
xchg
pop
sbb
xchg
push
ds
push
mov
xor
cmp
mov
mov
cld
repnz
das
mov
negl
outsl
sbb
mov
int3
aam
ret
xchg
lods
lret
das
mov
mov
lret
pop
das
mov
mov
dec
mov
lcall
mov
sub
int
inc
dec
sub
fucomp
or
daa
cld
repnz
das
dec
or
add
ljmp
das
mov
pop
stc
out
in
adc
and
das
mov
inc
sub
ja
xor
mov
sub
or
ds
arpl
mov
inc
push
sub
aas
icebp
js
mov
sub
dec
sbb
test
sub
das
repz
jbe
mov
cmpsb
xchg
repnz
das
mov
pushf
movsl
dec
fnstsw
pop
adc
shll
aaa
cmp
xchg
xor
cld
repnz
mov
mov
xor
test
push
stos
inc
stc
in
jg
ret
mov
aas
fimull
xchg
xor
sarl
les
xlat
sub
sbb
mov
out
lahf
repnz
stc
pusha
shlb
mov
arpl
fistpl
incb
rorl
stos
shrl
xchg
xor
mov
lret
das
cli
push
jl
mov
es
rol
in
lret
and
jmp
ficomps
js
mov
fistpl
mov
mov
repnz
push
dec
popa
adc
loopne
push
popa
xor
repnz
das
pop
and
cltd
out
jne
pop
jl
mov
dec
xchg
dec
je
push
xor
push
mov
add
lods
jns
xchg
mov
lret
jne
testb
in
push
pop
std
and
dec
out
jl
cmp
jns
lds
movsl
cmp
movsb
gs
pop
jns
sbb
in
pop
mov
je
pop
jns
xchg
movsl
mov
xchg
pop
mov
jo
jns
xchg
push
or
stc
jnp
xchg
dec
clc
sub
fnstsw
jge
outsl
adc
and
pop
jle
notl
sahf
mov
sti
cmc
loope
rcl
sbb
jle
in
mov
dec
cwtl
arpl
sbb
imul
pop
scas
add
rcll
in
sub
jge
cmp
dec
pop
and
in
insl
pop
and
lret
pop
xor
pop
repnz
xchg
jg
xor
pop
imulb
gs
mov
stc
pop
pop
mov
sahf
lcall
jns
popf
mov
rol
jmp
jg
testb
lds
enter
out
clc
xchg
pop
jle
xor
dec
mov
inc
push
lods
or
stc
in
dec
xchg
lret
movd
xchg
sarl
fiadds
in
test
insb
mov
pop
sti
cmpsl
mov
fwait
push
mov
jle
fstps
pop
adc
bound
dec
jl
in
std
pop
mov
lcall
lret
mov
popf
adc
lods
sahf
dec
lret
and
ret
in
xor
ret
mov
mov
inc
xor
psubusw
sub
neg
loop
les
cmp
out
xor
add
gs
mov
pop
mov
sub
inc
sarl
cmp
idiv
xor
ds
mov
sar
repnz
das
xor
jne
hlt
and
push
or
in
mov
add
or
push
lcall
repz
jns
xchg
push
test
push
ljmp
jo
xchg
push
pop
and
fsubr
or
mov
jb
jno
lds
outsl
jge
mov
in
repnz
das
pop
int
mov
jp
in
inc
mov
mov
dec
pop
mov
pop
jle
xchg
jecxz
mov
mov
sub
add
hlt
add
push
mov
das
inc
cmc
mov
adc
dec
pop
push
pop
jns
pop
addr16
mov
push
mov
push
jle
jns
xchg
dec
nop
or
into
mov
lret
and
aaa
or
cmp
lods
mov
inc
sbb
hlt
cmp
jle
add
sub
jbe
icebp
cmp
and
inc
mov
push
scas
inc
or
jge
xchg
ja
ss
or
mov
sahf
cmp
fnstsw
hlt
pop
jbe
jge
test
mov
mov
xlat
cmp
les
mov
cmp
jle
test
fidivrs
andl
cltd
fdivrp
mov
repnz
out
pop
stos
in
mov
sub
jge
lret
das
pusha
add
loopne
inc
nop
mov
and
lds
sub
movsl
clc
or
mov
test
inc
push
loope
stc
push
jbe
icebp
lret
mov
push
into
sbb
data16
das
mov
jbe
rol
mov
in
jle
notl
insl
jmp
mov
loopne
pop
adc
ljmp
push
pop
jns
into
pop
cmp
test
push
imul
in
lahf
stos
inc
enter
cwtl
ljmp
in
outsb
add
mov
and
das
sub
lods
push
in
mov
in
push
pop
lcall
cld
add
xchg
xchg
push
pop
jns
subb
adc
adc
in
cld
test
push
dec
inc
lds
fwait
sub
int
icebp
enter
lahf
push
jl
pop
sbb
stos
inc
mov
stc
fstpt
fbstp
jmp
and
inc
jb
add
inc
das
jmp
inc
cs
mov
inc
jmp
lret
mov
mov
shll
cmp
or
scas
orb
pop
jge
and
xor
lds
pop
jle
sub
mov
xchg
dec
pop
in
movsb
add
stos
rcrl
stc
in
lds
sbb
jo
loopne
lods
jle
in
adc
hlt
mov
add
out
and
in
and
xchg
imul
stos
lret
das
mov
ss
add
das
mov
or
lods
mov
stos
adc
mov
mov
cmp
xor
lret
incl
mov
and
scas
mov
mov
lods
pop
push
and
mov
push
push
cmp
mov
cmp
cld
repnz
das
popa
mov
lds
xchg
das
mov
push
push
out
das
call
lahf
cmp
int3
imul
xor
stc
in
pcmpgtw
inc
sbb
push
xchg
pop
push
pop
hlt
sbb
iret
mov
cmp
xchg
ret
pop
jle
sti
mov
sbb
cmp
xchg
pop
jle
insb
insl
jne
fwait
pusha
test
adc
stc
in
scas
or
jno
pop
insl
icebp
insb
inc
mov
inc
jns
add
hlt
and
stc
imul
test
xor
bound
testl
in
mov
ret
push
cmp
xor
push
adc
repnz
mov
aam
adc
add
mov
jecxz
dec
xor
mov
mov
jg
popa
pop
int
movsb
rorb
lret
dec
xchg
rcll
inc
aam
es
mov
lret
das
pop
push
mov
loopne
and
test
das
mov
or
sbb
das
mov
mov
xchg
decb
das
mov
mov
jne
push
and
fwait
lret
mov
xchg
cmp
stc
cmp
push
and
add
enter
mov
add
mov
pop
xor
inc
sub
xor
xchg
test
dec
outsl
scas
sub
lret
inc
cmp
cwtl
push
nop
xor
filds
mov
cmc
scas
jno
mov
jno
xchg
pop
jle
or
sti
add
inc
mov
test
pop
lods
add
jl
jns
xchg
mov
jne
adc
clc
aas
xor
jnp
pop
pop
popf
pop
rorl
jae
cmp
xchg
test
es
add
cmpsl
pop
jns
loope
sbb
loope
aam
sbb
xchg
push
or
rclb
enter
aam
dec
mov
jp
pop
jle
notl
iret
jge
stos
loopne
ljmp
xchg
sbb
cltd
rcll
scas
xor
xchg
jg
rclb
mov
dec
jle
mov
rdtsc
fsubrl
inc
fcoml
and
int
cld
repnz
aas
pop
jno
fwait
pop
xor
xchg
lret
das
nop
sarl
sub
mov
in
jg
lcall
cmp
repnz
shrb
lahf
fnsave
pop
sbb
adc
dec
bound
leave
into
xchg
jle
in
jno
jge
call
ljmp
lahf
icebp
enter
jbe
jmp
jbe
enter
cmpl
sub
sub
in
aam
ds
fstpl
lahf
adc
sub
and
lret
lret
das
mov
sahf
daa
aaa
movsb
sub
hlt
movsl
add
and
nop
leave
xchg
adc
jns
xchg
scas
and
cmp
mov
dec
jge
ret
imul
or
stc
in
pop
imul
and
jnp
xlat
in
pop
jle
fcmovnb
jne
and
fnsave
jle
cs
sahf
mov
xchg
fs
ficoms
jmp
inc
mov
sub
mov
push
sub
cmp
or
popf
inc
pusha
sbb
in
adc
in
mov
scas
mov
cmp
push
jecxz
mov
push
adc
jae
aam
lret
mov
or
orb
outsb
mov
cmp
ljmp
sub
stc
in
movsb
js
dec
fidivrl
sbb
sub
fldt
push
sbb
dec
jb
and
jl
pusha
inc
jg
mov
mov
repnz
mov
adc
jno
adc
das
mov
mov
add
dec
lret
das
mov
xchg
add
mov
adc
cmp
arpl
mov
movsb
push
loope
scas
es
faddl
cmp
pop
pop
test
xchg
or
jns
cmp
jb
jmp
imul
scas
cld
mov
dec
pop
roll
repnz
sub
mov
aad
adc
mov
repz
jle
aam
mov
stc
mov
pop
jns
jecxz
sahf
pop
scas
out
sbb
jns
xchg
push
add
pop
std
fisubs
rorl
xchg
push
pop
loop
jp
sub
pop
icebp
lahf
adc
adc
test
or
adc
or
sti
stos
cmp
in
int3
mov
lret
add
shlb
aaa
push
faddp
cmp
and
cmp
test
cmp
cmp
dec
fdivl
lds
xchg
jbe
push
arpl
jg
ds
xor
push
and
filds
adc
mov
pop
loope
jno
stos
sbb
das
cwtl
jg
dec
sbb
in
and
cmp
mul
rcll
idiv
test
dec
xlat
mov
adc
add
xchg
aaa
xchg
jecxz
xor
arpl
iret
pop
push
pop
jns
push
test
std
jne
bound
xor
js
fists
pop
pop
in
mov
fiadds
add
adc
jns
test
cmp
and
mov
cli
enter
js
enter
sbb
arpl
add
pop
sbb
cmp
int
push
pop
jns
cmc
in
and
in
push
mov
lock
clc
enter
sbb
in
mov
mov
dec
dec
insb
jo
sbb
repnz
and
jne
jo
decl
nop
lret
add
adc
xor
sub
add
out
outsl
lret
popa
mov
repnz
mov
adc
pop
into
stos
arpl
inc
les
jmp
sub
xchg
mov
mov
sbb
sti
xor
jnp
cmp
int3
fstpt
jmp
jne
push
stos
in
repnz
mov
sti
jp
rcrl
mov
add
in
xor
mov
bound
in
sub
in
sbb
push
mov
lret
push
aad
xlat
xlat
movsbl
inc
and
adc
dec
xchg
dec
imul
cmp
daa
divb
mov
adc
jle
push
xchg
imul
and
cmp
fwait
mov
std
mov
cs
lahf
inc
dec
cmp
gs
xchg
pop
inc
lods
xor
in
in
pop
and
mov
enter
adc
pop
xchg
xchg
pop
jle
stc
sub
lock
mov
xchg
icebp
dec
pop
jle
in
shl
pop
adc
mov
mov
in
push
lds
pop
mov
adc
xchg
pop
adcb
cmc
gs
dec
add
test
jbe
or
dec
test
jns
xchg
in
ret
mov
fmuls
jns
xchg
or
cld
sub
lret
fnstsw
xchg
aaa
and
jge
mov
jmp
pop
mov
cmp
or
scas
sub
dec
mov
jnp
and
inc
lret
das
scas
mov
cmc
dec
mov
push
cmp
in
mov
hlt
mov
push
insl
jnp
pop
jne
xchg
scas
push
scas
mov
sub
pop
adc
sub
je
jg
mov
cmp
or
stc
in
inc
js
xchg
inc
nop
sub
sbb
or
pop
jle
test
fcomps
pop
xchg
call
movb
les
gs
das
mov
movsb
rolb
repnz
mov
imul
or
jne
pop
into
lret
das
mov
pop
les
imul
mov
and
and
aaa
jo
leave
mov
or
sbb
jle
ss
xchg
not
inc
inc
les
xchg
popa
inc
cld
sti
enter
xlat
mov
std
lds
push
push
fiadds
cmpsl
sti
js
jnp
inc
xor
and
or
lretw
das
mov
pop
xchg
sbb
pop
das
mov
in
fadds
or
mov
insb
pop
stc
repnz
adc
add
mov
adc
outsl
dec
imul
jge
out
fsts
mov
push
inc
mov
js
dec
enter
mov
push
pop
inc
repz
sub
in
cli
and
fstpl
dec
fdivrs
jno
jne
xchg
push
pop
fdivrl
sub
inc
jg
pop
jns
mov
gs
pop
jo
xchg
mov
cli
enter
scas
add
jns
sub
jp
es
in
pop
pop
pusha
rolb
mov
in
pop
dec
dec
ja
incb
dec
loop
rcrb
imul
push
aad
fdivr
xchg
pop
jle
les
add
mov
cwtl
or
stc
in
push
sti
enter
sbb
lds
mov
sbb
mov
add
push
xchg
pop
fidivrs
in
push
fidivs
push
add
fs
add
xchg
push
pop
jns
repz
lret
xchg
outsl
adc
leave
lahf
push
in
pop
jns
xlat
clc
xor
add
xlat
rclb
jge
sarl
jnp
inc
lret
lahf
xor
mov
sub
sub
cmp
adc
movsl
sub
sarb
cmp
mov
mov
sub
loopne
into
or
mov
mov
lret
cmp
loop
dec
cmp
mov
ds
inc
fwait
sbb
inc
js
push
rorl
add
iret
cld
pusha
xor
jmp
das
movsb
cli
inc
shll
enter
jle
mov
cmp
mov
pop
jns
pop
push
fsub
je
sbb
cmp
pop
scas
ret
ja
inc
lods
dec
shl
pop
push
dec
jmp
das
mov
dec
test
ret
sbb
push
pop
jns
imul
push
xchg
popa
xor
pop
jns
xchg
xchg
mov
sysret
clc
int
sarl
xchg
push
sahf
cmp
adc
scas
out
xor
sbb
jb
ja
mov
jns
popa
and
mov
xchg
mov
inc
xchg
inc
xchg
or
cmp
xchg
movsl
mov
jl
cwtl
loopne
lahf
sub
pop
jns
sub
in
pop
fists
movsb
mov
mov
push
inc
shrl
jne
push
pop
das
mov
adc
mov
push
arpl
mov
repnz
pop
dec
inc
lret
pop
push
xor
lret
shll
mov
pusha
sahf
jp
insb
xorb
scas
mov
or
mov
daa
xchg
aas
jp
js
rcrb
jnp
and
je
rolb
leave
mov
pop
jns
xchg
or
sub
push
ds
clc
push
enter
ficompl
dec
sub
mov
xorps
sar
pop
aas
jcxz
jne
sbb
repnz
and
xchg
pop
sbbb
mov
scas
aas
lcall
scas
mov
mov
test
nop
aad
lahf
scas
mov
jp
stc
jns
repz
xchg
cmp
mov
leave
cmp
mov
outsl
bswap
repnz
dec
insb
add
lahf
cld
xchg
jp
popf
adc
jge
inc
mov
mov
jb
clc
daa
bound
nop
push
das
cmp
xchg
mov
dec
xor
mov
in
lock
mov
repnz
jo
fstpt
push
pop
inc
cmp
insb
cmc
lods
enter
mov
stc
and
xchg
insb
mov
or
xchg
bound
dec
push
add
inc
jge
mov
push
inc
es
jnp
lret
jg
xchg
sbb
lds
inc
pop
push
out
outsb
xchg
pusha
ds
sub
das
mov
stos
fldl
mov
das
mov
pop
faddp
dec
notl
test
jbe
movsb
mov
add
sbbl
repnz
das
or
mov
mov
nop
lods
mov
es
mov
fs
and
outsb
into
pop
dec
cmp
les
mov
jns
aaa
jp
push
and
jle
scas
jno
jb
or
repz
sbb
xchg
or
jns
sahf
dec
dec
xchg
jmp
jg
arpl
lds
pop
jl
loopne
cmp
add
pop
jle
ja
jle
scas
repnz
mov
das
and
jl
in
repnz
or
sub
cli
mov
out
xchg
popf
jge
jnp
mov
movsl
or
mov
dec
cs
pop
insb
fdiv
jb
das
mov
jecxz
add
imul
dec
pop
movb
repnz
scas
pop
or
shlb
test
hlt
add
add
repnz
das
mov
mov
pushf
mov
pop
pop
pop
loope
cwtl
or
jno
mov
push
loopne
repnz
lds
out
int
int3
nop
mov
aaa
pop
mull
bound
enter
inc
mov
jne
shrb
in
adc
jle
in
adc
imul
ret
inc
cmpsl
loope
mov
stc
in
pop
mov
jae
insb
insl
pop
dec
in
pop
jle
lock
mov
pushf
movsb
cltd
daa
movsb
add
stos
pop
test
pop
xor
jmp
or
mov
xlat
pop
adc
in
push
fbstp
sub
in
push
pop
test
mov
and
addr16
xchg
push
pop
jns
inc
xor
push
mov
inc
bound
xchg
mov
hlt
mov
ja
mov
repnz
arpl
fnstcw
sub
xlat
and
test
lods
mov
test
cwtl
inc
jne
jp
pop
addr16
lds
or
out
lret
das
lcall
adc
push
lds
inc
pop
stc
repnz
jl
loope
cmp
xchg
push
fidivs
adc
sub
fwait
mov
jns
push
pushf
imul
push
pop
jns
daa
outsb
add
pop
out
mov
out
jns
xchg
xchg
and
inc
aad
adc
mov
adc
pushf
icebp
pop
xorb
pop
mov
pop
mov
lock
xlat
sarb
dec
scas
mov
stc
in
mov
lahf
pop
jecxz
sub
movsb
jno
aaa
idiv
in
pop
mov
ret
cmp
fs
mov
sbb
jle
scas
loope
mov
and
mov
sub
loop
pop
sub
imul
lret
and
repz
orb
aam
test
scas
mov
mov
and
repnz
js
push
lcall
movsl
mov
dec
fucomi
das
ljmp
and
divl
inc
das
stc
xor
fcoml
movsl
and
pop
cmp
mull
in
push
add
in
scas
jmp
pop
jns
xchg
into
call
inc
xor
mov
sbb
rep
inc
or
mov
mov
test
pop
pop
es
jle
cld
repnz
das
mov
xchg
in
mov
gs
pop
ja
inc
mov
adc
jle
mov
xchg
xchg
out
xor
mov
scas
mov
or
mov
arpl
roll
push
or
pop
cld
repnz
das
mov
mov
cmp
movb
inc
aaa
fcomps
scas
mov
xchg
cmp
add
jno
xchg
cld
repnz
enter
insb
sti
cltd
jge
mov
adc
das
mov
push
icebp
mov
leave
enter
aaa
stos
push
movsl
inc
adc
push
jle
imul
jb
outsl
adc
jne
jmp
cld
repnz
das
ret
daa
push
xchg
in
jge
test
mov
pop
xchg
or
js
mov
mov
inc
dec
sbb
mov
pop
movsb
mov
repnz
xchg
popa
xchg
xchg
and
sub
cmp
repnz
das
mov
inc
fistpl
or
int3
xchg
scas
int3
repnz
das
mov
and
ror
imul
push
xor
pop
int3
mov
das
mov
add
sbb
and
dec
mov
cld
repnz
out
or
or
adcl
dec
cld
repnz
das
in
aam
mov
dec
int
clc
addr16
lret
das
mov
ret
jmp
stos
xor
js
cli
in
dec
xchg
mov
sub
sbb
mov
mov
notb
cmp
mov
cmp
fbld
mov
mov
cmp
aaa
xlat
sub
sbbb
pop
jns
sub
fbstp
outsl
jmp
in
out
mov
xchg
and
lret
mov
vpsrad
mov
push
dec
inc
xor
jne
loope
inc
pushl
fst
jo
mov
jnp
xor
jl
lret
das
xchg
shll
cmp
jbe
pop
lret
gs
inc
repz
push
je
inc
add
add
enter
int
and
idivl
xchg
push
daa
jbe
ret
push
or
aaa
push
xchg
push
pop
xchg
add
or
cmp
clc
bound
inc
loopne
pop
loope
outsl
lock
adcl
mov
sub
lret
mov
lcall
xchg
pop
jge
jg
mov
lods
jge
addr16
jmp
stc
in
iret
dec
xchg
mov
stos
test
inc
jp
dec
clc
enter
sub
imul
rcr
nop
jecxz
popf
xor
adc
cltd
jle
in
shlb
dec
adc
jmp
jge
in
pop
sub
xchg
imul
xchg
pop
jle
dec
xor
fstcw
mov
lahf
push
stc
xchg
xor
jg
mov
insb
mov
cmp
push
push
rclb
lret
sub
adc
ficompl
add
sbb
ds
sahf
cltd
mov
xchg
mov
repnz
divl
in
push
fdivp
nop
jns
xor
cmp
and
pushf
das
xchg
push
pop
jns
loopne
ret
lock
repnz
jp
push
imul
cmovle
jecxz
inc
shr
pusha
stos
xchg
pop
jle
and
cmp
pop
pop
cmc
pop
jle
in
pusha
stc
bound
push
out
insb
repz
int
xchg
or
xor
and
inc
outsb
push
mov
mov
pop
push
pop
test
cmp
in
jns
xchg
push
icebp
mov
out
xchg
add
in
push
pop
xorl
out
cmpl
cmp
ror
adc
xchg
es
or
bnd
in
or
cmp
fcoml
jecxz
enter
pop
mov
dec
lock
xchg
imul
mov
faddl
pop
cmp
das
mov
and
scas
jne
je
filds
pop
cwtl
mov
scas
mov
jno
inc
test
sar
lret
das
mov
cld
fcmovnbe
and
mov
mov
cmpsl
mov
lods
or
das
mov
sbb
dec
hlt
fsubrl
mov
paddq
mov
and
mov
mov
xchg
push
push
jecxz
dec
clc
enter
cld
pop
loopne
data16
push
xchg
push
aad
push
pop
mov
inc
pop
sbb
in
je
adc
je
xchg
pop
out
mov
call
lcall
and
lcall
pop
jo
out
dec
mov
lret
xchg
mov
mov
dec
pop
cld
repnz
das
mov
cmp
add
lret
das
mov
fisubrl
fs
inc
lret
das
mov
nop
and
mov
jns
jl
ss
sbb
gs
inc
in
push
pop
mulb
sbb
jns
les
cmp
adc
or
xchg
push
pop
jne
js
pmuludq
imul
push
pop
jns
scas
xorl
outsl
xor
in
je
xchg
xor
sahf
push
adc
pop
jns
xchg
aad
jo
loopne
pop
or
mov
in
push
pop
xor
ss
inc
or
in
push
pop
jo
fs
xchg
mov
mov
mov
pop
nop
xchg
jle
pop
mov
enter
fwait
or
ret
aad
out
int
ds
in
pop
jnp
mov
mov
in
pop
jle
adc
and
shlb
pop
xchg
pop
jle
xchg
push
cmp
sti
hlt
cmp
ds
call
hlt
test
jg
fdivrl
dec
push
push
jge
aas
add
rcl
lret
sub
jb
or
aam
lahf
icebp
sub
and
or
lcall
cmp
cmp
lret
aad
add
fnsave
pop
jle
leave
cmp
xchg
das
mov
and
cmc
mov
xchg
imul
cli
mov
xchg
adc
jmp
test
lcall
std
jno
stc
in
pop
clc
push
mov
pop
xor
fidivl
xchg
pop
jle
sahf
adc
pop
leave
fisttps
pop
jle
fcmovne
pusha
neg
test
jg
sbb
jns
call
js
or
xchg
pop
daa
and
sub
xor
xor
mov
pop
ret
stos
clc
xchg
jg
pop
out
adc
es
cltd
push
fldcw
lea
stc
in
pop
and
sub
xchg
les
jp
repnz
and
cmp
call
mov
xchg
cmpl
cld
loop
sub
pop
mov
inc
inc
addr16
adc
push
cltd
xchg
cld
repnz
das
pop
bound
jb
icebp
iret
notl
out
pop
mov
and
mov
xchg
pop
jle
into
lea
rorl
xchg
ds
inc
pop
jle
in
mov
ss
iret
aas
sub
dec
push
jns
xchg
lock
push
sub
test
lret
das
jmp
sbb
pop
mov
mov
xor
sub
cmp
fists
adc
adc
scas
mov
fdiv
dec
arpl
or
cwtl
jne
adc
shll
xchg
and
mov
mul
lcall
in
inc
xchg
psubw
std
xchg
adc
repnz
pop
decl
cwtl
imul
test
and
push
jns
push
ljmp
jb
fidivs
ljmp
pop
and
std
xor
push
push
les
sti
test
f2xm1
insl
jo
pop
push
pop
jns
inc
repnz
mov
xchg
into
pop
jns
xchg
dec
xchg
pop
cltd
jnp
xchg
test
enter
imul
es
adc
les
fldt
pop
or
dec
sub
cld
sti
enter
ljmp
insb
ljmp
jmp
ljmp
lret
sbb
push
jne
rolb
push
jne
repnz
push
pusha
clc
in
mov
adc
scas
mov
lods
cs
lds
jle
cmpl
movsl
push
fidivrs
test
and
sbb
cwtl
movsl
aas
stc
in
pop
les
cmpsb
sub
test
in
pop
jle
pusha
or
pop
jns
mov
lods
jl
popf
push
sahf
js
jae
insl
fcmovb
mov
jns
or
call
out
and
push
loopne
pop
pop
mov
inc
movb
jb
mov
adc
mov
in
pop
cmp
jecxz
inc
jno
lea
jl
rorb
in
fmull
cmpsb
or
xchg
jg
jns
mov
in
andl
dec
scas
mov
rol
mov
jae
jle
add
das
pop
pop
adc
cmp
cmpsl
cmp
repnz
das
mov
jle
pusha
lcall
cld
mov
sub
or
dec
shlb
repz
ds
sbb
add
repnz
psubsw
loop
or
mov
iret
ja
xlat
adc
or
pop
jns
fwait
cmc
lods
loope
jnp
out
cmc
test
dec
sti
push
add
scas
inc
mov
enter
sbb
jl
pop
bound
mov
stc
test
fiadds
scas
mov
push
mov
mov
mov
aam
loope
push
int3
adc
adc
icebp
cmp
in
and
mov
in
cmpsb
xor
sub
popf
out
jns
pop
add
xor
jnp
movsb
xorl
lcall
jge
popa
mov
push
mov
cld
repnz
out
test
leave
jl
lock
sbb
dec
cmp
lret
daa
lock
sbb
add
pop
insb
inc
xchg
dec
mov
cmovg
push
jg
mov
repz
sub
popf
test
lods
mov
mov
mov
inc
in
iret
cmpsl
pop
jo
mov
xor
jge
outsl
aaa
adc
pop
cmpsl
rcll
mov
daa
pop
aad
inc
inc
xchg
into
inc
jle
in
xchg
mov
adc
mov
dec
mov
push
scas
aam
stc
test
enter
mov
dec
jecxz
sbb
and
pop
int
inc
test
mov
xor
inc
mov
daa
call
xor
loopne
ja
xchg
pop
sbb
clc
mov
mov
in
add
stos
add
lcall
icebp
jle
in
mov
test
jmp
lods
fcoms
in
pop
mov
fidivl
inc
push
mov
les
in
sub
mov
repnz
xchg
es
js
and
jns
mov
mov
in
fdivs
adcb
aaa
in
test
andl
push
aas
and
testb
inc
add
xchg
push
pop
stos
lds
dec
sbb
push
out
fidivl
sub
xchg
scas
movsb
scas
mov
and
incb
stc
js
adc
cmp
outsl
xor
xlat
cmp
lret
mov
xchg
adc
jo
lods
in
cmp
imul
pop
sub
cmp
mov
inc
loopne
cmp
out
jp
xor
sub
push
scas
subb
sbb
mov
lret
out
data16
daa
lret
adc
push
push
faddp
cmp
mov
cmp
enter
frstor
xor
jae
out
movsb
inc
jle
test
xor
mov
repnz
lds
fsubs
test
sub
jb
outsb
lret
addr16
sahf
jmp
xchg
inc
pop
mov
xlat
cltd
dec
test
xchg
aaa
adc
push
insb
outsl
sub
sbb
inc
pop
movsl
jnp
test
adc
inc
decb
fdivl
xor
xchg
pop
jle
loopne
dec
push
aas
push
es
and
stc
in
shlb
es
mov
cs
jo
or
in
test
mov
shl
add
stc
in
pop
test
int
jne
add
bound
and
cltd
inc
rcll
rorl
outsl
or
repnz
test
jae
dec
insb
pusha
fcmovu
mov
lcall
mov
lret
xor
jmp
outsb
xchg
fistl
lret
mov
into
cmpsb
sbb
add
outsb
sub
cmp
mov
pusha
dec
jmp
push
pop
jmp
adc
notb
lea
mov
sub
imul
push
xlat
mov
inc
sbb
jge
leave
cmpsl
lds
stc
adc
jle
jge
subb
loop
pop
xor
insl
mov
dec
cmp
fdivrl
adc
fwait
sti
mov
xchg
and
inc
test
cmp
lods
call
sbb
movsb
rcrb
lret
pop
lds
inc
stc
in
pop
inc
scas
neg
and
cltd
adc
in
pop
jle
cs
sbb
mov
pop
mov
stc
sub
jecxz
and
or
repnz
iret
repnz
mov
inc
out
xchg
lret
mov
insl
aaa
sbb
sub
jb
or
test
mov
mov
lret
cmpsb
outsl
inc
pop
pop
call
mov
mov
inc
mov
scas
mov
leave
cld
mov
into
pop
xorl
in
out
in
icebp
push
inc
fwait
mov
mov
pop
mov
imul
push
pop
jns
sub
adc
into
push
xacquire
iret
pop
jns
insb
popa
cmp
xchg
scas
call
jnp
in
add
ja
rcrb
std
fsubs
xchg
imul
movsl
daa
xor
or
scas
mov
cs
mov
jae
add
sub
xchg
inc
and
shll
xchg
ds
arpl
mov
fs
pop
jns
push
test
pop
ret
inc
pop
pop
ret
mov
push
jns
cmp
lcall
sub
cmc
imul
push
cmp
repnz
jmp
addr16
jne
xor
xchg
jg
mov
xchg
psubq
cmp
and
xor
xchg
adc
jne
and
jle
in
or
inc
sbb
lock
in
pop
pushf
movsb
adc
jmp
loop
add
ss
and
or
jae
icebp
mov
mov
jp
jmp
xchg
les
fiadds
cmp
xor
rcr
push
mov
cmp
clc
inc
daa
mov
xchg
divl
bound
pop
jns
shlb
lret
cwtl
fistl
jns
ret
xor
mov
push
aas
scas
nopl
xchg
mov
sub
mov
mov
jge
out
insb
jb
jno
pop
jl
in
aaa
and
stc
add
xchg
pop
cmp
repnz
xchg
out
and
iret
lea
repnz
das
mov
mov
mov
repnz
das
mov
cld
fs
mov
ja
inc
mov
iret
scas
cli
in
sub
cld
repnz
mov
decb
inc
insl
add
in
test
imul
sahf
repz
push
pop
jns
push
movsb
gs
mov
xchg
data16
inc
push
pop
jns
addr16
xchg
mov
cmp
push
xchg
and
loope
dec
in
test
mov
leave
es
fcoml
stc
notl
cltd
mov
adc
push
aaa
out
mov
icebp
fdivl
roll
cld
sti
mov
or
inc
mov
int3
push
stc
in
push
jns
divl
adc
mov
mov
shlb
ljmp
loope
jecxz
mov
jnp
in
test
jo
push
xchg
and
fsubrl
pop
pop
lret
daa
pop
jle
pusha
les
repnz
xchg
mov
xor
ret
sub
aam
repnz
in
jp
mov
sti
loop
repnz
aam
outsl
xor
insl
mov
inc
scas
mov
push
outsl
dec
pop
aaa
mov
mov
jnp
inc
dec
int3
pop
push
push
rcrl
scas
test
cmp
int
jmp
jl
in
repnz
dec
arpl
lret
pop
lret
lret
mov
mov
pop
ja
es
shrb
inc
mov
push
xor
jge
pop
and
push
daa
popl
cmp
in
xchg
pop
sarb
xchg
hlt
faddl
mov
xchg
das
inc
or
sbb
imul
dec
sub
or
into
and
enter
pusha
xor
pop
lock
and
mov
pop
or
push
jae
mov
jge
cmp
mov
dec
das
rcrl
push
xchg
loop
jbe
mov
lods
lahf
icebp
sbb
dec
in
aaa
test
push
jnp
or
and
pop
jns
sbb
insl
or
jle
in
fs
cmpsl
stc
call
loopne
or
inc
hlt
fsts
lds
xlat
xor
xor
inc
scas
mov
mov
push
scas
cld
repnz
mov
fstpt
pop
popf
dec
test
lock
das
mov
cmp
cs
lret
das
mov
mov
pusha
mov
movsl
das
mov
push
ja
xor
jecxz
dec
fstps
lock
sub
push
add
jp
cld
repnz
das
push
and
sbb
cmc
in
xchg
das
mov
ret
mov
dec
cld
sub
scas
arpl
fsts
xchg
hlt
addr16
xchg
push
xchg
cmpsl
pop
xor
sub
pop
mov
je
pop
out
jp
jp
jle
in
sbb
stc
mov
sbb
stc
in
sub
inc
mov
dec
pop
aad
imul
xchg
pop
loop
jbe
xor
push
test
lret
roll
mov
movsl
mov
jge
rorl
out
in
pop
or
and
repnz
mov
rcrl
lret
mov
sub
jg
push
pop
stc
repnz
fwait
jl
inc
lahf
lea
adc
mov
lods
push
mov
sub
jns
xchg
push
ja
in
enter
je
jmp
pop
pop
pop
inc
cmp
out
jno
add
cmp
mov
stos
stc
inc
gs
cli
push
adc
cld
repnz
cmp
cmp
or
gs
pop
scas
imul
shll
xchg
repnz
or
dec
dec
idivl
and
sub
stc
in
add
pop
daa
mov
out
cs
mov
sbb
xchg
pop
adc
cwtl
jae
movsl
mov
jns
les
sbb
lahf
jno
fcoml
inc
xchg
push
pop
jns
xchg
cmp
pop
bound
add
inc
mov
cmp
aam
lcall
shrl
or
add
mov
xor
pop
stc
jnp
lea
out
setne
and
jmp
in
jle
in
insl
xchg
test
mov
jge
clc
stc
in
pop
dec
push
dec
mov
clc
mov
in
pop
jle
ret
imul
stc
inc
sbb
fsubr
cmp
cmpsb
rcrl
push
cs
inc
adcb
fbstp
aad
push
clc
jg
add
inc
sub
das
lcall
lea
js
fsts
repnz
push
dec
dec
in
push
notl
and
and
sbb
enter
pop
sbb
xor
test
repnz
shl
in
fidivl
or
stc
in
jmp
xor
ss
cmpsl
inc
inc
fisubl
stc
in
pop
inc
sbb
ljmp
ds
pop
jle
stos
hlt
stos
lret
imul
inc
sbb
in
xchg
cltd
xlat
lahf
xchg
in
push
pop
add
pop
subb
fsubrl
pop
insb
and
int3
mov
movsb
xlat
mov
in
test
leave
sub
cmp
xchg
push
pop
jns
rolb
jno
jbe
sti
inc
push
lods
call
mov
sti
jl
fstl
jmp
mov
cmp
in
pop
cli
xchg
int3
pop
enter
add
mov
lods
gs
sbb
stc
in
pop
jle
out
mov
sbbb
in
pop
jle
pop
or
jp
mov
xchg
pop
jle
mov
adc
xchg
inc
ljmp
fists
inc
pop
out
and
jmp
dec
lock
inc
das
mov
loopne
stos
fcmove
out
sbb
test
xchg
test
imul
jp
xchg
pop
dec
cli
push
mov
lock
js
xor
push
ficomps
adc
xchg
mov
mov
push
dec
sahf
adc
mov
stos
push
cmp
mov
push
stc
test
cmp
push
testl
das
call
and
mov
fisubrl
add
in
lea
hlt
roll
dec
cld
repnz
das
insl
push
stc
mov
lds
outsb
sub
lret
das
mov
cld
lahf
addr16
xchg
mov
iret
xchg
pop
cmp
add
mov
jnp
jle
in
roll
xchg
inc
loope
stos
stos
mov
inc
jle
in
and
mov
and
and
pushf
xor
cmp
fildl
pop
int
push
pop
sub
pop
cs
movsl
bound
xchg
xchg
pop
adc
shrl
mov
pop
outsl
push
push
dec
out
nop
cli
divb
pop
jle
bound
mov
std
in
and
ss
stc
xor
sbb
jl
in
cmpsb
dec
lret
shll
sub
or
arpl
add
push
mov
js
pop
call
in
ja
lods
dec
aaa
data16
push
orl
mov
pop
and
int
ret
dec
mov
pop
jns
inc
mov
test
cmp
or
cmc
call
in
vaddsd
mov
aaa
pop
xor
sub
or
push
ljmp
repnz
das
sbb
cmc
xchg
mov
repnz
imul
enter
ja
mov
xor
mov
pop
inc
or
filds
xor
inc
sbb
xchg
push
fidivs
fs
pop
dec
sbb
fcmovu
jg
pop
jns
dec
pushf
inc
out
sub
ja
lds
push
stc
in
outsl
ret
cld
cmp
std
sub
jb
repnz
pop
push
nop
je
jge
or
and
or
rcll
pop
jns
lods
iret
enter
leave
fisubrl
adc
cmp
cmpsb
mov
mov
dec
pop
cwtl
and
sahf
aam
sbb
imull
outsl
aad
lret
das
mov
cmp
push
stos
xlat
jnp
inc
int3
fmulp
jp
fisttpl
test
mov
or
test
repz
add
mov
pop
sub
lcall
sbb
repnz
das
xor
adc
enter
pusha
addr16
lcall
or
into
sub
das
mov
data16
stos
add
adc
adc
idiv
cwtl
loopne
scas
fsubl
dec
stc
in
pop
pop
xor
sub
pop
adc
jle
pop
je
adc
adc
das
mov
ljmp
and
xor
addr16
lret
mov
pushf
push
int
lea
repnz
ja
mov
jns
loope
lods
inc
fiadds
popf
lret
arpl
sarl
das
lcall
neg
mov
es
fbstp
cmc
jp
das
mov
pusha
pop
mov
out
dec
add
lods
insl
cmp
lret
push
or
sbb
sub
mov
xor
xchg
cli
enter
repz
pop
dec
das
add
inc
cmpsb
xor
mov
or
fldt
mov
mov
dec
mov
iret
test
or
enter
add
shrl
and
shl
jbe
cmp
test
out
in
push
fisubrs
jb
ds
ret
inc
mov
jns
out
dec
in
and
rclb
push
stc
in
int
pop
in
push
popf
in
adc
mov
ljmp
aas
cmpsl
pop
leave
les
push
adc
jns
pop
out
push
stos
jbe
mov
and
inc
mov
testb
popaw
lahf
ss
jle
mov
fsubp
dec
push
xor
in
sbb
repnz
das
adc
outsl
leave
cltd
mov
test
sbb
xchg
dec
ljmp
and
pusha
xor
mov
and
jo
jge
lret
push
paddsw
out
lea
fisubrl
mov
shlb
sbb
pop
adc
jle
notl
push
xlat
sahf
and
jo
enter
xchg
pop
in
mov
or
cli
and
mov
mov
jl
dec
mov
pop
cmp
add
shll
adc
pop
hlt
jnp
cmp
mov
and
test
xchg
push
pop
jns
subb
mov
push
dec
or
in
lock
test
xlat
out
inc
pop
pop
jns
mulb
cld
sbb
insb
in
mov
mov
psrlq
repnz
cld
mov
lret
sub
divb
fisubrs
lcall
mov
fsubp
das
jp
inc
in
mov
mov
sub
sub
fstl
aam
cmp
jns
mov
cmp
push
cmp
int3
outsb
xchg
sub
in
lahf
add
fs
push
push
mov
sub
jns
xchg
push
pusha
int3
push
outsb
pop
rorl
sub
sbb
into
fimuls
mov
mov
push
sbb
loop
jp
stc
xchg
mov
mov
das
lcall
sub
adc
pop
push
data16
inc
scas
mov
das
sub
out
mov
jb
xlat
add
push
dec
sahf
sub
jo
in
lcall
in
jg
sbb
cmp
cmpsb
mov
xchg
call
fbstp
in
sbb
cmp
inc
lods
add
roll
xchg
pop
ds
fdivl
testb
out
popf
xchg
and
xor
fwait
cmp
in
jbe
cmpsb
add
les
ljmp
sub
mov
in
jo
stc
in
pop
in
xor
cmp
xchg
push
in
ja
lea
mov
pop
shrl
jg
pop
jns
jmp
inc
cmp
or
test
in
inc
stc
fnsave
es
sbb
mov
or
adc
cmp
pop
enter
pop
jle
and
push
inc
in
xlat
test
cld
repnz
movsb
lds
scas
in
fcomps
icebp
enter
ret
loop
pop
and
neg
jge
stos
lock
inc
mov
pushf
mov
adc
ret
and
add
mov
inc
insl
mov
push
and
in
pop
call
pop
cmpsl
mov
or
lret
jg
adc
in
jg
xchg
arpl
and
in
lock
jmp
mov
ds
pop
fsubrl
sti
cs
cmp
in
cmpsb
and
mov
clc
jge
xchg
push
ds
jge
adc
mov
pop
sti
pushf
nop
inc
add
mov
dec
pop
mov
mov
nop
sbb
pop
add
xchg
test
leave
out
js
sbb
loopw
pop
fst
scas
insb
sub
pop
jns
les
mov
mov
jns
dec
pusha
dec
sub
push
div
stos
pop
jns
xchg
push
lods
sahf
stc
pop
dec
or
lret
sub
dec
jne
and
in
scas
mov
fldcw
xchg
and
dec
addb
jle
and
lret
imul
outsl
and
mov
lea
pop
mov
fistps
cld
xor
lret
mov
or
and
sub
loop
test
dec
push
sub
subb
mov
adc
lods
mov
xchg
icebp
fsts
mov
and
cmpsl
lret
mov
cmp
imul
or
pop
mov
in
testl
or
xchg
aam
xchg
push
pop
popa
das
jmp
cmp
pop
sbb
or
cltd
xor
jbe
outsl
jle
in
push
hlt
sarb
dec
lret
jl
in
pop
mov
outsb
fistps
orb
xchg
pop
jle
dec
popa
pop
push
xor
push
pop
jns
addr16
repnz
jmp
lahf
stc
in
inc
mov
adc
shlb
pop
jle
sbb
out
push
mov
cmp
outsb
mov
insl
cmp
fists
sbb
in
pop
fs
cmp
mov
in
mov
xchg
pop
jle
pop
addl
mov
repz
pusha
inc
push
jge
lods
in
mov
daa
mov
and
mov
push
cs
inc
sub
cld
repnz
das
pop
jg
xor
aaa
adc
repnz
das
mov
mov
inc
sub
das
mov
bound
int3
inc
xchg
mov
xchg
stc
imul
pushf
sar
hlt
pop
std
mov
sub
pop
cld
repnz
and
movsb
rolb
pop
pushf
push
mov
mov
clc
imul
inc
pop
stc
mov
jp
xchg
rcll
jl
scas
mov
lds
stos
lods
fstps
pop
cmp
lret
rcll
mov
xor
stc
dec
lds
mov
jns
xchg
push
xchg
arpl
ja
push
repnz
add
push
pop
jle
cmp
dec
arpl
push
and
jns
jg
inc
cmc
push
add
mov
decl
push
fsubl
xchg
aaa
adc
fisubs
push
jno
push
pop
jns
jmp
repz
dec
popf
es
stc
or
pop
jns
xchg
push
adc
mov
and
in
xchg
push
fcmovnu
pop
push
pop
imul
xchg
inc
jle
cmpsb
fadds
xchg
or
xor
popf
push
insl
in
aaa
imul
xor
xchg
in
test
push
test
loope
insl
ds
xchg
push
pop
jns
movsb
mov
push
mov
jns
ja
decl
mov
movsb
ficompl
mov
pop
vmaskmovdqu
xchg
cmp
andl
xor
in
pop
jle
ficomps
add
pop
jle
aaa
push
stos
aaa
add
and
jle
in
pop
sbb
cmc
mov
mov
repnz
ds
mov
imul
mov
and
push
jbe
xchg
push
pop
jns
in
adc
pusha
inc
sub
movsl
push
pop
jns
outsl
dec
ss
loopne
aam
pop
or
in
ret
add
jbe
rcrb
popf
movzwl
xchg
rclb
mov
mov
repnz
push
pop
movsl
and
inc
or
mov
scas
push
cmp
lret
adc
push
push
xlat
daa
into
inc
hlt
jle
in
fwait
cmp
xchg
dec
inc
push
imul
adc
xchg
pop
lret
add
iret
push
xchg
push
jbe
into
jne
xchg
pop
jle
rorl
xchg
push
or
mov
lock
jmp
mov
outsl
movsl
nop
jmp
sbb
xchg
je
adc
enter
lock
jmp
mov
push
mov
cld
repnz
das
push
mov
mov
in
xchg
das
mov
rcl
nop
jp
lods
sti
in
mov
fs
xchg
xlat
fidivl
xor
call
pop
xchg
lcall
or
sbb
xlat
faddl
stos
and
mov
pop
test
or
push
dec
fsubr
and
cmp
fisubrs
sti
pop
jle
imul
dec
xchg
repz
mov
mov
out
and
jmp
inc
sti
mov
pusha
cmp
mov
xchg
das
mov
push
movsl
aad
xchg
sub
push
jp
pop
add
outsl
pop
out
adc
xor
jnp
adc
ret
lds
loop
pop
jle
or
lods
mov
in
inc
push
pop
jns
cmp
imul
mov
notl
and
fcom
divb
or
xchg
pop
jle
popf
mov
add
jmp
repnz
xchg
pop
xchg
pop
jle
dec
pushf
dec
arpl
cmp
adc
pop
ljmp
cmp
or
push
mov
add
fwait
sarb
int
add
mov
jp
xchg
pop
push
test
sbb
repz
dec
and
iret
push
fsts
xchg
mov
cld
repnz
mov
xchg
call
mov
jne
lret
das
mov
adc
sub
jg
ja
shll
jo
gs
jmp
lds
sbb
fwait
pop
and
stc
notl
js
and
outsl
adcb
xchg
pop
xchg
pop
popa
jno
out
add
aas
add
js
sbb
loope
sbb
inc
jle
sub
dec
dec
dec
mov
inc
inc
jge
sahf
les
pop
ret
mov
repnz
stos
test
imul
loop
push
cmp
repnz
cmp
aaa
rcrl
xor
in
sub
dec
jle
inc
add
mov
in
movsl
lahf
imul
jne
and
int3
xchg
adc
repnz
das
dec
data16
dec
js
push
aad
lahf
cmp
pop
mov
xchg
push
ficomps
lea
or
ja
fistpll
lret
into
inc
push
pop
jns
pop
or
pushf
rcrl
repnz
nop
ret
mov
insl
in
cwtl
insl
cwtl
sub
jg
mov
add
push
aad
test
push
stc
add
inc
push
rcrb
lods
movsl
cmp
icebp
hlt
jmp
cmp
jns
xchg
push
push
mov
cwtl
cld
adc
jo
shlb
pop
xor
mov
mov
loope
pop
jg
xor
mov
lret
das
call
fldl
test
sub
fisttpl
lret
das
mov
inc
in
stos
mov
jecxz
jecxz
cld
repnz
insb
cmp
loop
mov
arpl
fbstp
inc
xor
push
push
rcll
ss
adc
lock
pop
les
pop
jns
xchg
mov
mov
mov
cltd
in
xchg
xchg
push
adc
in
js
and
ret
xchg
dec
lock
stc
in
and
inc
push
dec
sub
push
sbb
shll
mov
out
imul
dec
sahf
stc
repnz
das
cltd
js
lock
add
pop
filds
pop
sbb
mov
jnp,pt
inc
add
push
mov
jl
in
dec
cmc
jle
add
push
mov
pop
test
inc
lahf
push
pusha
and
or
stc
in
push
mov
nop
add
out
call
xchg
pop
lret
jp
orb
xor
pop
jle
mov
fwait
push
cmp
jle
inc
sub
loop
jnp
leave
jmp
push
or
jle
in
push
je
scas
loope
push
push
loop
stos
adc
xchg
inc
push
cltd
inc
adc
push
fdivp
dec
mov
mov
hlt
fldl
pop
push
in
bound
rolb
lds
push
jge
mov
loopne
in
js
inc
xor
xchg
dec
cltd
lret
jg
call
in
jg
sbb
xchg
inc
pop
call
dec
mov
xlat
sbb
roll
xchg
pop
jle
dec
push
cmp
and
adc
xchg
mov
add
mov
push
mov
sbb
xchg
sbb
xchg
and
jg
mov
int3
sub
test
mov
pop
mov
mov
gs
pop
fists
in
push
stc
out
inc
out
test
dec
adc
int3
add
xchg
push
pop
jg
inc
cli
push
adc
sbb
mov
pop
jns
sub
daa
mov
push
mov
mov
fisttpll
jp
push
sub
xchg
lret
testl
jge
sbb
mov
mov
scas
or
inc
or
pop
and
jle
in
add
loop
pop
or
stc
in
and
adc
test
setp
sub
push
inc
repnz
pop
loope
les
pop
dec
int3
push
ret
mov
sbb
mov
cld
frstor
popf
int
es
pop
fistpll
orl
push
imul
push
shll
mov
in
sarb
adc
lock
mov
js
xchg
mov
mov
cmpsb
cmp
pop
fsts
insb
dec
push
add
scas
mov
inc
or
push
push
cmp
popa
adc
aam
popf
adc
xchg
repnz
sub
mov
mov
das
sbb
mov
imul
ja
lock
cmp
dec
js
and
sbb
out
xchg
cmpsb
mov
mov
cmp
fsubrs
inc
mov
aaa
mov
xor
adc
ds
xchg
jp
push
push
out
pop
cmp
leave
in
push
fisubrs
sbb
xlat
push
add
inc
and
scas
in
push
dec
pushf
mov
lret
das
jmp
adc
jno
pop
or
cli
les
mov
mov
and
daa
pop
jns
pop
flds
mov
mov
mov
push
pop
dec
jge
aam
flds
mov
mov
cmp
lahf
inc
inc
jmp
and
dec
xchg
push
pop
jns
in
jg
gs
outsb
insb
dec
int3
or
inc
clc
in
enter
sti
fimuls
out
xchg
jg
ficoms
nop
push
mov
cli
pop
jle
in
mov
inc
inc
lret
mov
fs
in
mov
jmp
test
pop
fldcw
enter
jecxz
leave
dec
push
divb
or
pop
mov
or
lret
push
stos
xchg
loop
push
shlb
ja
mov
fisttpll
pop
jns
pop
insb
add
sbb
inc
mov
inc
pop
jns
xchg
and
and
push
xor
enter
push
xchg
ret
imul
or
in
push
aas
adc
inc
jno
mov
lds
sub
neg
push
mov
scas
mov
add
xchg
sub
jbe
mov
xor
sahf
mov
add
mov
flds
shlb
xchg
aaa
xor
mov
mov
and
popa
sub
sub
mov
inc
scas
xor
mov
xchg
adc
cmp
lret
lods
jo
xor
xchg
push
ficoms
add
repz
and
pop
xchg
divl
in
mov
rorb
test
clc
mov
jg
mov
and
add
mov
pop
dec
mov
cmp
jl
xchg
mov
aas
and
jle
inc
and
lods
jl
adc
leave
dec
mov
nop
in
clc
repnz
xchg
roll
in
aaa
mov
cmp
mov
mov
xchg
ja
jge
in
push
test
push
push
nop
sub
mov
cld
imul
iret
fsubl
and
pop
jle
in
imul
sub
mov
sarb
mov
dec
test
mov
sub
dec
add
jge
mov
mov
jge
dec
xchg
and
push
aas
push
inc
xchg
pop
jle
stos
imul
mov
in
push
insb
lahf
out
fstpt
sub
test
popf
addb
std
movsl
sub
iret
aad
fimuls
es
idivl
enter
std
popf
sarl
out
dec
lods
mov
jo
add
jmp
repnz
stos
dec
push
xorb
mov
in
cmp
out
inc
and
pop
inc
popa
jo
je
sahf
and
pusha
mov
scas
cmp
or
pop
jecxz
inc
pop
mov
ja
rorl
das
lcall
mov
jb
sar
xchg
adc
jle
cld
repnz
mov
gs
mov
pop
ljmp
jg
pop
adc
iret
cltd
pop
and
adc
lea
jne
js
jns
push
stos
iret
fcomi
jp
add
pop
imul
in
pop
adc
push
stos
aaa
dec
shlb
push
dec
in
pop
jle
sbb
inc
lret
enter
xchg
jge
mov
aas
loop
fisttps
xchg
jmp
loopne
sub
leave
mov
push
pop
jns
in
ret
jl
mov
in
aam
fucomip
into
xchg
cmpl
das
mov
pop
jns
xchg
les
in
mov
jae
jb
xchg
push
mov
mov
add
cmp
inc
ss
dec
lret
mov
xor
stc
in
negl
or
mov
fisubrl
ds
mov
xchg
mov
std
rclb
das
jno
andl
sti
arpl
cmp
test
enter
xchg
or
pop
mov
mov
popf
idivl
add
jns
sbb
push
push
inc
cmp
stos
mov
mov
lea
add
jns
mov
sete
fbld
fsubrl
or
fisttps
add
in
push
inc
inc
push
push
mov
rcr
fs
pop
je
mov
das
cmpsb
scas
mov
enter
jl
mov
push
repz
jnp
lret
add
jle
iret
insb
jle
mov
lret
das
mov
idiv
sub
fisubrl
mov
ljmp
jae
jo
scas
mov
and
pusha
scas
mov
mov
or
dec
pop
or
out
pop
jns
movsl
sbb
mov
inc
mov
jns
xchg
loopne
cmc
into
ljmp
test
out
in
xor
push
add
out
xchg
cmp
add
fidivrs
lret
das
mov
loope
cmp
std
inc
mov
nop
jecxz
mov
sbb
cld
shrl
sub
sub
outsl
jb
sub
mov
mov
bound
cld
jecxz
mov
mov
add
popf
mov
subb
xchg
test
jp
push
lods
cs
and
jnp,pn
pop
fsts
cmp
dec
dec
test
mov
aas
jne
adc
gs
jnp
lret
leave
push
mov
pushf
pop
adc
das
mov
inc
into
bound
sbb
repnz
push
xchg
jmp
add
aad
stc
in
sbb
scas
dec
xor
in
pop
sbb
mov
mov
jae
and
mov
lcall
das
mov
fcoms
stos
mov
es
mov
shlb
hlt
xor
or
es
repnz
das
inc
lods
mov
mov
lret
inc
and
pop
sbb
inc
or
jmp
push
stc
sub
mov
mov
mov
cld
repnz
clc
divb
sbb
cmp
inc
xchg
dec
stc
in
and
add
das
xchg
or
pop
jle
ja
jmp
int3
jl
lcall
add
mov
ficomps
mov
sub
ss
or
aaa
xor
mov
imull
ss
and
stc
in
xchg
mov
clc
pop
stos
dec
aad
aas
in
pop
jle
lea
leave
faddp
rcll
jle
xor
add
int
pop
jle
in
or
hlt
sub
ds
testb
xor
rcll
rolb
jge
jb
int3
repz
repnz
outsb
dec
mov
xchg
mov
xor
jle
repnz
jmp
pop
jns
ret
test
inc
mov
xchg
imul
xor
mov
pop
jle
in
jmp
cmc
daa
xchg
inc
icebp
pop
add
sbb
pop
sub
movsb
adc
mov
movsb
imul
nop
fldenv
pop
rorb
sbb
mov
adc
jb
jl
sub
repnz
rcl
daa
cmp
stos
add
loopne
stos
aaa
xor
mov
inc
fwait
sub
xlat
popa
mov
jl
push
xchg
ss
scas
lods
test
loop
sub
mov
pushf
pop
imul
aaa
nop
mov
mov
xor
inc
das
dec
push
pop
jns
subb
outsb
notl
stos
inc
mov
sahf
scas
mov
enter
mov
movsl
mov
pop
inc
xchg
lahf
nop
cld
ja
daa
sbb
stc
repnz
lcall
pushf
repz
ret
es
jb
cld
roll
xor
jns
push
pop
sbb
cld
add
lahf
sub
mov
sub
jae
xchg
and
xchg
or
repnz
jbe
imul
mov
mov
mov
adc
pop
push
mov
scas
int
push
stos
cld
repnz
das
xor
pop
lods
int3
mov
daa
movsl
rcl
push
shlb
mov
test
out
test
mov
fwait
or
xchg
push
fiadds
call
iret
pop
arpl
sub
jns
add
cli
imul
mov
cltd
jl
in
lret
jg
push
push
inc
and
pop
add
out
or
sub
adc
mov
cld
leave
pop
gs
cmp
xchg
push
out
loopne
sbb
repnz
jg
jnp
enter
in
aaa
inc
test
xchg
das
mov
push
xor
pop
dec
sub
add
ss
icebp
jae
repnz
add
xor
cld
sbb
pop
jns
xchg
dec
notl
push
xor
cmp
imul
and
in
pop
jle
jg
cs
push
std
mov
xchg
pop
jle
mov
push
data16
daa
jno
push
push
lahf
pop
jle
in
mov
in
stc
rolb
subb
push
clc
enter
xchg
in
push
lahf
cwtl
xor
scas
mov
or
sti
sub
outsl
push
scas
mov
call
rolb
sub
gs
add
sub
les
or
mov
das
xchg
pop
ss
les
cmp
movsb
aaa
pop
cli
mov
xchg
pop
jge
sbb
sub
mov
lret
sbb
jle
in
cmpsl
lcall
add
xorl
stc
in
push
mov
pop
push
arpl
pushl
mov
mov
jmp
sahf
xor
dec
outsb
pop
notl
add
inc
testb
add
adc
jae
dec
add
lret
loope
std
cli
pop
std
cmp
mov
stc
push
mov
adc
mov
sub
adc
ret
push
scas
mov
mov
cltd
icebp
xchg
data16
push
pop
mov
sbb
sti
mov
sti
repnz
imul
icebp
add
jecxz
mov
mov
adc
pop
stc
packuswb
adc
inc
xchg
jle
stc
test
das
in
dec
popf
and
stos
aam
in
pop
jle
mov
pop
imul
mov
cli
in
inc
divb
lret
imul
cmpsb
les
out
gs
repz
lods
mov
xor
lret
das
pushf
dec
add
jp
sahf
mov
and
mov
mov
xchg
pop
fwait
test
xor
scas
ja
pop
sbb
jnp
sub
and
popa
loop
pop
jle
in
lret
fbld
test
and
loopne
lret
loope
xchg
mov
mov
cld
push
jmp
in
out
adc
adc
push
stc
in
rorl
push
aaa
inc
outsl
xorl
xchg
mov
mov
in
pop
jle
lods
popa
pop
push
pop
cmc
push
cwtl
sarl
mov
pop
jle
divl
fwait
loopne
jl
das
cmp
jnp
bound
pop
and
js
push
jle
mov
loope
pop
filds
push
adc
lret
das
mov
pop
out
sbb
outsl
imul
pop
stc
repnz
mov
es
inc
adc
xlat
jns
push
jbe
jecxz
cltd
cmp
das
sti
jg
stc
jnp
pushf
mov
add
icebp
pop
jge
push
xchg
adc
push
scas
dec
pushf
lods
or
or
xchg
pop
int
or
mov
enter
and
fiadds
loopne
movsl
pop
push
ss
aas
fwait
xchg
test
xchg
in
push
pop
bound
int3
mov
xchg
push
pop
jns
iret
idiv
addr16
dec
jecxz
push
lahf
repz
pop
jns
and
outsb
cmp
mov
lock
xchg
repnz
push
mov
test
mov
lods
cmp
push
mov
cmp
push
out
xor
push
stc
in
int3
or
dec
push
gs
jns
daa
in
das
incl
push
pop
call
xchg
ja
movsl
inc
jge
adc
sub
mov
int3
test
and
cmp
in
mov
out
mov
cmc
dec
mov
jle
nop
addr16
mov
arpl
xchg
cld
mov
fsubs
pop
lea
fiaddl
pusha
adc
repnz
das
sub
xchg
or
jge
fbld
lret
das
mov
mov
inc
ljmp
shrb
icebp
repnz
inc
push
stc
repnz
push
mov
or
push
ret
xchg
jle
xchg
in
pop
scas
fs
or
cmp
shr
push
pop
jns
out
pushf
leave
stos
test
dec
jae
add
push
pop
jns
in
mov
sbb
in
add
push
repnz
shlb
fs
scas
lock
in
lret
neg
int3
cmp
repnz
pop
roll
mov
imul
mov
sti
cmp
and
lea
xchg
pop
jge
subl
dec
icebp
dec
pop
jle
in
sbb
out
lret
vhaddps
in
fadd
mov
xchg
popa
cli
test
imul
fisttps
sbb
leave
lock
mov
in
ja
cmp
mov
in
xchg
push
ficoms
cmp
sbb
xchg
sahf
cmc
in
leave
pop
jnp,pt
in
add
aas
mov
push
pop
jb
scas
mov
data16
je
fwait
add
enter
xchg
pop
lods
push
mov
imul
stos
repz
rcll
mov
xchg
add
loopne
cs
enter
in
sub
add
sbb
jno
fbld
mov
fisubrl
add
movsl
pop
xchg
adc
jae
jle
in
push
push
or
addr16
mov
dec
jne
xchg
xchg
test
aas
testb
jne
pop
xchg
mov
das
pushf
mov
xchg
js
xchg
xor
lock
je
and
scas
mov
flds
inc
cmp
pop
dec
shlb
aas
add
jl
rorl
repz
outsl
int3
fdivs
mov
lret
fadds
test
scas
mov
push
cmp
shrl
mov
xchg
cmp
scas
out
sub
jo
mov
mov
jge
pop
in
scas
mov
sbb
push
cmpl
nop
ds
or
push
pop
jns
mov
pusha
in
testw
and
lret
cmp
ljmp
xchg
in
sub
je
out
cs
inc
data16
bound
das
mov
test
lock
test
dec
jle
test
fwait
sti
jbe
push
mov
push
lahf
ss
cmp
jb
iret
mov
cmpl
mov
pop
leave
ljmp
ss
sub
imul
ds
aas
cld
stos
cltd
movsl
cmpsb
pop
jns
xchg
jg
mov
lds
jae
lods
repnz
push
or
cwtl
jg
lret
mov
outsb
pop
or
sahf
jle
scas
mov
cwtl
idivb
xchg
test
scas
mov
or
es
fadd
cmpsl
cmpsb
and
lcall
xchg
aas
inc
jo
in
scas
or
push
popl
mov
out
lahf
iret
cmp
adc
lret
add
lds
mov
pop
and
scas
mov
sbb
ficoml
in
cmc
fldenv
jle
rclb
imul
add
pop
jns
imul
sub
add
stos
sub
and
jo
nop
jae
andb
lds
jb
mov
in
cltd
or
ds
ds
pop
fistpll
and
lahf
shl
das
jmp
ja
mov
and
popf
lea
push
dec
das
pop
stos
sti
shl
enter
imul
adc
push
pop
stc
mov
lds
repnz
repnz
outsb
nop
push
adcb
ret
das
lcall
stc
sbb
call
push
dec
mov
xor
push
mov
mov
aas
jl
lret
das
fs
std
fcoms
cmpb
outsl
dec
repz
clc
in
pop
pop
inc
and
mov
adc
imul
mov
add
ret
popf
lea
mov
add
ljmp
mov
xor
leave
pop
pop
sub
pop
jns
mov
repnz
icebp
push
push
push
add
mov
sub
cld
loop
and
dec
inc
pop
push
inc
test
sar
aaa
scas
mov
aaa
xor
clc
cmp
sbb
ljmp
jbe
ds
jb
out
sub
fisubl
leave
jnp
enter
popf
hlt
enter
adc
jmp
sbb
jns
popf
psrld
mov
jmp
mov
and
xlat
add
cmp
lock
jle
in
scas
insb
mov
fidivs
inc
xchg
dec
jle
in
and
ret
ja
movsl
or
pop
mov
popl
repnz
pop
and
das
mov
push
iret
jnp
cmpsb
pop
xchg
inc
lret
das
jg
adc
sbb
push
addl
repnz
fucom
jae
stos
fsubl
sbb
jge
loopne
mov
cld
lret
in
dec
nop
mov
stos
push
repz
jle
in
sbb
cmpsb
adc
dec
pop
stos
pop
pinsrw
jmp
andb
stc
in
pop
xchg
jl
push
or
adc
push
aam
lahf
dec
jb
leave
fs
jg
xchg
call
pop
and
fidivrl
mov
out
push
mov
mov
sbb
cld
repnz
das
mov
mov
cmp
in
xchg
das
mov
or
sti
jns
sbb
test
outsb
std
in
push
pop
cltd
jbe
sti
mov
fdivrs
movsl
scas
mov
pop
rolb
push
orb
sbb
in
scas
test
sbb
out
mov
shll
cmp
sbb
sbb
imul
lret
mov
divl
fucom
lods
mov
push
jae
dec
shrb
jns
or
ret
daa
mov
in
push
pop
jne
xchg
and
xchg
push
pop
jns
xor
push
das
add
lds
das
mov
and
xor
ljmp
pop
lock
test
cltd
adc
lret
das
jecxz
xorb
fucomp
inc
pop
jns
mov
lods
mov
loope
xor
inc
shl
imul
bnd
and
aaa
pop
popf
xchg
push
je
cld
repnz
mov
pop
test
mov
push
sbb
lret
das
mov
shrb
std
insb
enter
das
mov
jge
test
lret
arpl
pop
stc
bnd
in
jl
jl
add
mov
jge
cmpsl
xchg
xor
mov
pop
dec
lds
jle
add
add
icebp
shrl
lcall
jns
push
sbb
push
inc
repz
mov
push
int
arpl
xchg
mov
pop
lds
mov
lret
xchg
push
lret
mov
pop
mov
and
cmp
repnz
loope
daa
push
ret
negb
pop
mov
sbb
ds
jne
fs
dec
pop
stc
ret
jo
es
stc
repnz
das
lea
push
cmp
xchg
jge
or
fistpll
xchg
sub
and
sub
iret
cs
or
mov
rolb
in
dec
fnstenv
mov
sahf
ljmp
mov
mov
out
lret
dec
outsb
fstpl
cmp
lret
push
ja
and
sub
pop
jge
jno
fildl
int3
loopne
xchg
pop
jle
leave
jnp
test
and
add
into
ds
int
jae
inc
in
dec
xlat
adc
and
repnz
mov
ja
sbb
call
push
in
das
mov
add
cmova
jge
rorb
jmp
fs
jmp
inc
jle
in
lret
inc
xorb
xchg
mov
stc
in
inc
call
push
in
imull
sub
aam
inc
fidivrl
pop
lret
mov
icebp
and
or
insb
out
pop
inc
mov
in
inc
or
test
xchg
mov
lock
cmp
lcall
mov
bound
rcrl
subl
cld
repnz
mov
lock
push
cmp
pop
or
repnz
lret
dec
xor
imul
pop
enter
push
sahf
lcall
subb
pop
jle
neg
push
fwait
dec
mov
les
sbb
in
cwtl
add
push
stos
sbb
js
popf
loopne
shrl
in
jg
dec
mov
cwtl
push
cmp
flds
clc
das
ds
jns
xor
inc
je
or
cld
repnz
aaa
sub
lds
add
lret
or
cmp
pop
and
mov
sbb
inc
ljmp
mov
in
jno
add
pop
jns
xchg
testl
fs
clc
call
in
push
pop
pop
pop
int
and
ja
les
jns
loopne
dec
dec
cmp
and
out
jge
in
stc
inc
movsl
lock
popf
fnstsw
pop
sub
pop
loope
mov
cmc
notb
imul
add
jns
sub
jne
xchg
aad
aas
inc
sbb
jns
xchg
sub
inc
push
cmp
lods
repnz
leave
xor
mov
cld
repnz
xor
out
xor
pop
sbb
popa
inc
daa
repnz
das
mov
imul
cld
repz
add
int
jae
bound
push
xchg
pop
mov
loop
jge
or
jle
inc
ljmp
jp
das
mov
shll
into
or
loop
jge
xor
mov
adc
repnz
adc
es
repnz
das
iret
inc
test
imul
stos
imul
mov
push
sub
or
stc
in
push
out
xor
mov
cmp
stc
in
lods
jecxz
repnz
scas
cmp
fbstp
and
cli
jp
add
xor
sub
mov
mov
in
mov
outsl
jge
mov
les
aam
lea
dec
loopne
push
sti
fisubs
in
mov
jne
loop
cli
fisubrl
push
in
jge
mov
mov
stos
push
sub
xchg
xchg
sbb
lds
aaa
inc
lahf
push
lods
inc
push
out
inc
mov
push
lcall
mov
scas
mov
iret
int3
sub
jg
dec
mull
sbb
inc
xchg
sbb
lock
push
pop
dec
test
sub
xor
into
repnz
iret
int3
in
adc
sub
repz
mov
bound
or
or
add
dec
dec
and
out
repnz
mov
mov
data16
clc
out
repnz
das
mov
lock
movsl
mov
xchg
iret
and
stc
repnz
pop
add
jmp
addr16
and
cmpsb
and
dec
addr16
dec
sti
mov
jl
cld
repnz
mov
cmp
pop
add
add
mov
repnz
das
mov
xchg
out
mov
xchg
pop
cmp
adc
inc
dec
add
pop
jle
in
dec
xor
pshufw
mov
xchg
cs
inc
cmp
test
clc
mov
movsb
jae
pop
mov
jmp
mov
xchg
repnz
iret
dec
in
adc
shr
sub
mov
lret
je
jne
stc
ja
mov
jnp
rorl
loope
in
lods
adc
pop
aad
popf
movsb
jg
pop
jns
cmp
out
and
jle
in
insb
pop
sbb
jge
cwtl
mov
jl
in
pop
stos
aam
ljmp
xchg
arpl
jle,pt
fnstcw
ds
xor
shll
repnz
lds
adcl
in
aam
leave
incl
int3
stc
in
std
jecxz
mov
cmp
cmp
out
rclb
xchg
mov
sbb
leave
mov
sahf
je
cmp
loopne
or
adc
das
cltd
push
pop
jns
mov
jle
lret
repz
pop
jns
xchg
jns
add
lret
and
in
sub
xchg
push
push
dec
aad
mov
testb
mov
or
jbe
pop
and
arpl
and
jns
push
xor
test
mov
cmp
in
jnp
repnz
int
daa
fistpll
leave
inc
mov
push
jmp
sbb
adc
insl
jae
rorl
push
aas
xchg
pop
jle
mov
mov
adc
add
in
gs
and
lret
mov
test
cld
cmp
push
dec
rolb
cld
repnz
repnz
fbld
outsb
ficomps
fwait
sbb
dec
or
push
push
add
aaa
popl
add
rcll
cmp
scas
mov
lods
fs
pop
in
loop
dec
dec
daa
out
repnz
mov
cmc
xchg
fdivs
les
cld
push
sbb
sub
mov
pop
aam
xchg
shlb
mov
pop
push
cmp
les
mov
push
inc
add
les
inc
pop
adc
add
fwait
data16
enter
jmp
pop
mov
sub
jnp
xchg
jg
pop
shl
push
inc
cmc
sahf
ds
fisttpl
jge
jl
in
in
sub
push
test
test
and
enter
push
adc
xor
aad
test
fstpt
push
movsb
pop
jns
cmp
add
xchg
cmp
jns
xchg
push
movsl
imul
orb
push
push
pop
dec
ret
push
test
push
in
icebp
dec
sti
cld
sti
enter
pusha
inc
xchg
adc
add
xchg
push
ficoms
inc
sub
pop
fcoml
jns
int
cmc
xor
xor
stos
and
jno
sbb
jg
in
xchg
jno
xchg
in
lret
das
adc
mov
add
sub
aaa
dec
test
inc
lock
pop
jns
sar
inc
dec
pop
in
sub
pushf
ja
stc
popf
stc
in
jg
sbb
das
fwait
cs
addr16
int3
sub
jmp
pop
jle
and
xchg
outsb
add
lret
pop
daa
jbe
pop
jns
mov
mull
rclb
out
stos
fidivl
addb
ds
movsb
nop
mov
pop
iret
push
in
lret
fists
pop
add
pop
mov
xchg
daa
stc
movsb
inc
scas
mov
fcompl
dec
movsl
shrb
jns
cmp
fldt
int
jecxz
jns
adc
cld
jo
dec
push
dec
mov
push
fnstsw
dec
dec
mov
movsb
jns
jmp
fldcw
pop
push
mov
scas
in
push
pop
mov
aaa
adc
mov
jns
cmp
push
pop
jae
mov
xchg
push
pop
std
sub
push
lds
mov
xchg
push
pop
jns
xor
sbb
repnz
aam
mov
movsl
fs
inc
fisubrs
shrb
push
pop
jns
int3
jge
sub
inc
rcr
and
inc
add
xchg
xchg
add
xor
sti
mov
xchg
pop
jle
adc
mov
out
xchg
pop
jle
or
sbb
sti
push
dec
fnstcw
out
test
mov
fistl
pslld
xchg
jg
outsl
push
mov
dec
inc
vmread
mov
sbb
jge
mov
mov
enter
mov
test
imul
xchg
sub
lret
aam
lock
jle
test
lods
fimull
stc
push
incl
stc
in
leave
xchg
mov
outsl
inc
xchg
mov
jle
in
mov
push
inc
add
stc
in
pop
lods
xchg
xchg
pop
inc
adc
fwait
mov
enter
out
repz
jae
mov
inc
push
ficomps
cli
es
cmp
xorl
repnz
rolb
or
push
fmul
sub
ljmp
popa
or
sub
sbb
fsubl
cmp
push
cld
repnz
das
hlt
cld
jnp,pn
jns
ja
outsb
in
mov
shlb
fisttpll
mov
cmp
and
in
jbe
fcomp
cltd
imul
mov
xor
pop
jns
xchg
rcll
movsb
cmc
lds
sbb
in
xchg
push
or
and
jl
aas
outsb
test
inc
push
xchg
jne
or
cmp
gs
mov
jae
adc
cwtl
push
sbbl
lock
rep
fwait
lods
sbb
adcb
jl
aam
adc
std
pushf
loope
mov
adc
jae
ret
pop
pop
jle
in
or
loopne
stos
add
xchg
data16
cwtl
sub
mov
stc
in
pop
or
cmpsl
cmpsb
adc
sbb
xchg
pop
jle
and
movsl
xorb
bound
shll
dec
ret
pop
jae
jbe
das
ds
lock
mov
xchg
fbld
fsubrl
mov
call
lods
jecxz
mov
mov
cld
repnz
in
push
ror
daa
popf
push
fiaddl
outsl
jge
push
stc
in
and
insb
loopne
xlat
out
cs
das
lcall
cmpsl
mov
mov
inc
sub
push
das
mov
negl
mov
push
sub
icebp
mov
inc
inc
sbb
loope
push
and
xchg
mov
and
and
jno
pop
jns
push
movsb
jecxz
out
sub
xbegin
push
sbb
sarl
mov
lret
das
add
rcrl
scas
add
dec
sub
inc
pop
loope
into
scas
iret
jnp
sti
das
mov
pop
xor
inc
mov
mov
aad
jg
in
push
inc
rcrb
insb
leave
mov
jns
jmp
sub
ds
adc
mov
lock
out
lds
mov
inc
pushf
xor
outsl
xchg
sti
imul
push
pusha
mov
inc
mov
repz
and
test
in
push
or
icebp
push
pop
cld
jnp
pop
mov
jl
test
push
fiadds
roll
cmp
ljmp
adc
std
lahf
pop
scas
and
hlt
out
and
xchg
pop
dec
fmuls
insb
stos
sub
jb
in
pop
jle
cwtl
jp
cmc
sbbl
es
jg
pop
jle
dec
or
std
rorb
fmuls
ds
mov
sub
or
orb
inc
cs
in
insb
fnstenv
push
lds
movsb
ret
clc
mov
cld
repnz
das
xlat
jecxz
push
mov
xchg
mov
sbb
filds
mov
jae
or
xchg
pop
jle
dec
std
push
rcrb
out
hlt
mov
pop
pusha
fs
jecxz
or
add
test
pop
jns
mov
cmp
xchg
xchg
push
dec
fidivrs
fwait
notl
les
xchg
pop
jle
xor
xchg
sbbl
fidivl
es
add
stc
in
xor
sbb
mov
or
xchg
stos
scas
and
xchg
push
xchg
stos
movsl
jg
jae
fsts
jns
adc
push
xchg
mov
sti
test
shlb
jle
in
lcall
sarb
push
or
stos
enter
nop
movsb
pop
jp
mov
in
in
jns
mov
lea
jl
int
push
jp
xchg
lret
stos
xor
push
push
je
jl
imul
xchg
add
fld
fmuls
lret
fs
push
jne
sbb
inc
xchg
in
clc
enter
in
fs
icebp
sahf
fs
cld
jnp
sbb
and
lock
mov
cmp
fldcw
int3
movsb
jmp
enter
or
fadds
out
in
aam
cmp
adc
jg
sub
jns
popf
addl
push
xchg
loope
pop
pop
jns
xchg
sarl
imul
pop
sti
lds
pop
jle
in
movsl
cmc
add
mov
mov
in
pop
add
xchg
sahf
cmp
icebp
xchg
add
xchg
pop
jle
xor
push
mov
mov
xchg
pop
jle
jae
in
inc
pusha
lds
aam
enter
xor
and
cld
sti
mov
adc
inc
adc
pop
loopne
dec
cmc
push
pushf
lret
pop
insb
xchg
hlt
mov
push
or
repnz
imul
push
pop
adc
push
mov
sbb
cmpsl
cmc
pushf
lds
cld
repnz
or
aam
xchg
dec
shrl
adc
sbb
adc
in
pop
and
mov
icebp
jnp
mov
and
stc
inc
jns
jmp
scas
dec
and
in
xchg
sub
and
mov
fimuls
lahf
jmp
sub
push
and
in
push
xorl
push
clc
dec
shl
xchg
push
pop
cmp
sarb
sbb
push
xchg
push
pop
jns
lahf
movsl
repz
adc
outsb
push
les
sub
pop
lods
arpl
clc
pushl
js
lods
dec
jl
mov
push
cld
repnz
das
das
inc
sbb
adc
or
out
push
inc
mov
push
cltd
jmp
jb
jmp
rorb
insl
hlt
jmp
xchg
testl
nop
test
mov
and
push
lret
lahf
xlat
jle
test
loopne
mov
mov
out
mov
and
mov
xchg
out
insl
xchg
ja
sahf
int
sarl
pop
xchg
arpl
jns
add
push
in
sub
and
adc
adc
in
xchg
xlat
fisttpl
jge
int
pop
outsb
fisubs
push
jbe
inc
jnp
stos
repz
sub
dec
and
lret
inc
cwtl
push
insb
sub
les
lahf
int3
mov
pop
adc
adc
mov
push
sti
sub
les
mov
filds
mov
dec
jmp
scas
mov
xchg
and
push
mov
mov
jmp
xchg
cmp
leave
sub
scas
pop
push
movsb
xlat
shlb
mov
dec
outsl
adc
xchg
sti
ss
fbstp
out
push
cmp
test
mov
mov
icebp
pop
stc
repnz
das
fldl
xor
inc
pop
add
fistpll
xor
repnz
mov
data16
out
jo
fs
je
or
xchg
push
xchg
adc
in
push
pop
jo
outsl
mov
mov
jns
das
faddl
lea
sub
inc
lods
call
jl
push
xor
mov
cs
mov
add
dec
popf
inc
sub
push
popa
cwtl
mov
inc
push
fidivs
cmpsl
fnstcw
mov
repnz
and
mov
mov
xchg
sbb
imul
jle
in
lahf
inc
das
test
or
stc
in
dec
jbe
ja
aad
outsl
mov
inc
pop
jge
jmp
pop
inc
das
sub
daa
sub
jns
xchg
movsb
stos
icebp
jne
stc
mov
in
jne
imul
cmc
inc
inc
lea
sbb
jne
adc
cmc
and
pop
jns
jno
xor
ljmp
inc
inc
fbld
sub
xor
in
in
rorb
jge
outsb
mov
stc
test
mov
xchg
icebp
call
repnz
xchg
pop
rcrb
add
jp
dec
cmpsl
pop
pusha
xchg
mov
pusha
mov
pop
inc
stos
outsb
pop
push
xchg
pop
jle
lea
mov
insl
cld
aas
xor
cmc
mov
and
cwtl
fsubl
push
test
lods
jecxz
ljmp
lcall
pop
dec
xor
inc
xchg
lret
call
enter
inc
cmpb
rcr
adc
inc
pop
jle
notl
fnsave
add
rcrb
stc
in
xor
pop
clc
jmp
idiv
lock
in
pop
mov
xor
aad
mov
lret
mov
adc
imul
jge
mov
lahf
sarb
aam
pop
je
mov
cld
repnz
xchg
jge
mov
dec
mov
lret
sbb
mov
in
dec
push
ja
cli
lods
stos
lret
das
mov
sbb
xchg
ds
aad
inc
daa
mov
inc
lock
mov
pop
daa
jl
lret
mov
push
push
inc
hlt
xchg
mov
popa
sub
xorb
loopne
ret
push
ss
adc
stc
push
setnp
lret
jno
sti
cmpsb
repnz
xchg
in
and
and
and
pusha
scas
mov
in
ljmp
repnz
mov
mov
xlat
push
fwait
mov
fmul
repnz
cmp
movsl
adc
dec
aam
jbe
cwtl
aaa
and
mov
dec
adc
sub
out
fisttpl
xchg
xchg
mov
lea
sub
sarl
cmc
ret
fiadds
repnz
lret
mov
xchg
sbb
mov
xor
push
ret
push
push
cmp
cs
lea
in
jle
and
aaa
insl
sbb
xor
stc
in
pop
movsl
jb
inc
or
push
mov
pop
jle
je
sbb
inc
sub
push
iret
aas
imul
push
nop
int
fwait
pop
das
jnp
push
pop
jns
sub
mov
adc
popa
mov
push
jns
jnp
dec
cmp
inc
jle
sti
das
mov
gs
das
mov
cmp
sbb
das
mov
mov
aaa
addl
adc
stc
ja
jp
cmp
and
daa
mov
jp
js
xchg
pop
ss
add
in
push
fimuls
enter
std
cli
push
arpl
sahf
xchg
push
pop
jns
xchg
aas
stc
call
cli
jns
and
flds
pop
jb
jae
xor
dec
loopne
clc
mov
jb
or
fs
push
or
movsl
stc
adc
lahf
enter
and
push
ficoms
push
mov
lock
cld
or
jb
push
lods
push
inc
dec
xchg
xchg
inc
cmp
xor
aam
cmc
cmp
sub
mov
lahf
fwait
clc
cs
test
out
sub
jno
loop
and
pop
jnp
jl
jno
fcomps
mov
and
jnp
lret
pop
loopne
pop
mov
jo
adc
mov
or
cld
repnz
rcl
gs
push
and
out
dec
jmp
pop
adc
sub
xor
xchg
push
pop
jns
mov
cli
sbb
dec
mov
jle
imul
stc
and
adc
pop
pushf
cmp
je
adc
mov
xor
jle
in
clc
lea
xchg
inc
mov
jo
mov
stc
in
pop
jno
rcr
xor
fildll
in
out
or
movsl
addr16
stos
push
daa
and
cmp
lcall
loope
jns
xchg
aaa
inc
dec
or
hlt
mov
mov
loop
jno
add
xor
add
lcall
movsl
sahf
out
cmc
enter
mull
leave
aad
je
je
and
sub
call
xchg
mov
mov
inc
or
pop
mov
jo
pop
jns
sub
xchg
jge
iret
adc
or
xchg
xchg
xchg
fadds
lahf
enter
xorps
inc
leave
out
push
aam
xchg
cmc
pushf
inc
jne
fidivrl
xchg
cmp
push
test
lahf
aaa
lret
inc
dec
test
dec
scas
xchg
jae
add
push
mov
xchg
inc
lds
sarb
das
mov
cmp
mov
movsb
jge
sbb
jle
xor
push
lret
fsubr
cld
xchg
dec
scas
lretw
test
mov
lret
das
in
pop
icebp
pop
js
or
inc
mov
dec
imul
pop
jmp
insb
pop
fldt
lods
test
fistps
xchg
adc
lea
fisttps
lea
cmp
ficoms
in
pop
adc
scas
xchg
and
jns
xchg
push
mov
loopne
mov
lods
jl
push
xchg
push
pop
pop
cli
dec
dec
sbb
push
mov
call
xchg
mov
adc
lret
das
mov
xchg
daa
sub
cld
repnz
pop
out
and
cmp
lahf
cmp
adc
sub
adc
in
pop
decb
cld
fwait
aaa
xor
ds
mov
dec
sahf
mov
into
arpl
sub
sar
repnz
das
mov
jno
fcoml
ret
add
lret
das
mov
push
popf
pop
and
das
mov
rcrb
pusha
jnp
or
stc
repnz
scas
mov
dec
imul
xchg
lret
push
mov
subb
jbe
stc
in
pop
inc
cwtl
sub
gs
lds
xchg
pop
jle
xchg
enter
aad
lock
jle
add
mov
xor
jle
in
adc
xor
add
adc
xchg
mov
jl
in
pop
enter
mov
js
loop
sub
sub
push
iret
jle
pop
pop
xchg
push
pop
jns
and
lods
fistpll
mov
adc
jns
popf
ds
lods
sub
iret
cmp
jns
xchg
nop
shll
insb
imul
xchg
pop
jge
xchg
xlat
cmp
push
mov
fwait
inc
divl
repnz
fwait
int3
xchg
sub
insl
inc
insl
ja
sbb
in
mov
mov
into
enter
pop
outsl
and
inc
xor
stos
stos
mov
in
jne
and
add
in
and
daa
popf
mov
sbb
pop
jle
xor
xchg
fdivp
cmp
insl
mov
pushf
push
jge
outsl
inc
pop
jns
inc
mov
adc
sub
push
in
scas
das
mov
sub
jge
enter
leave
xchg
in
lock
adc
sub
bound
xchg
push
pop
jns
add
pushf
pop
inc
daa
sahf
les
push
pop
jns
stos
add
mov
xchg
mov
xchg
add
mul
lods
sti
sub
das
sbbb
mov
insb
int
das
mov
xchg
into
getsec
icebp
insb
pop
jp
lret
push
sarl
sbb
fsubs
lret
dec
shr
scas
xchg
fldl
mov
jp
xchg
xchg
mov
add
lcall
sub
iret
fsubl
out
and
pop
cld
jl
or
cli
jl
int3
mov
pop
gs
push
push
jno
push
xchg
popa
lret
xchg
jg
fsubl
mov
mov
stc
in
mov
inc
test
shll
jle
in
cmpsl
xchg
mov
out
ret
xchg
in
pop
xchg
std
loop
cmp
stos
out
out
xchg
pop
jle
adc
ds
das
mov
out
cmp
imul
imul
in
loop
adc
add
test
scas
inc
mov
into
sbb
stos
dec
pop
stc
in
pop
cmc
test
mov
imul
sbb
clc
dec
scas
sarb
insl
mov
int
or
addr16
dec
iret
in
pop
and
fsubl
ds
inc
inc
jns
lods
and
stc
push
cmp
and
dec
jmp
int3
sbbb
xchg
xchg
je
in
push
rcll
or
insl
out
add
mov
mov
xor
in
or
popf
clc
bnd
ja
dec
fnstcw
in
lea
xchg
movsb
ficomps
xlat
outsl
clc
enter
fsubrl
es
jns
pusha
xchg
push
fiadds
std
push
adc
sbb
mov
jns
lods
jae
and
inc
aaa
mov
push
jns
xchg
shl
ret
fimuls
aaa
jp
in
push
inc
dec
in
out
cli
pop
call
xchg
in
push
pop
in
inc
cltd
jl
jno
shrl
xchg
push
pop
jns
fwait
mov
sbb
hlt
inc
test
pop
jns
scas
pop
lods
ljmp
cmp
std
or
in
jmp
fs
xor
push
into
jp
jnp
inc
mov
gs
scas
mov
roll
int3
dec
cmc
sbb
xchg
cmp
pop
cmp
lret
in
jg
mov
and
in
sahf
lds
mov
ljmp
mov
movsl
mov
sbb
in
enter
stc
inc
lock
test
idivb
mov
das
cmpsb
push
and
xchg
sub
dec
repz
xchg
or
sub
inc
fcomi
cmp
cmp
mov
pop
ljmp
sub
sub
mov
xor
and
pop
add
cld
repnz
mov
cmp
adc
dec
ret
ret
addr16
das
mov
mov
inc
push
and
inc
mov
fnstsw
inc
mov
js
push
lock
add
pop
shlb
push
add
or
scas
mov
push
rolb
mov
lret
inc
push
pop
out
fidivs
or
jae
mov
jecxz
mov
mov
lea
adc
sub
lods
sub
pop
jns
aam
jle
dec
notl
mov
in
push
repz
cltd
repz
ret
hlt
fsub
xchg
pop
sahf
jge
out
sbb
add
sub
or
pop
dec
iret
or
dec
push
push
pop
iret
mov
in
cltd
mov
mov
in
pop
mov
adc
pop
push
cmp
xchg
pop
jle
insb
sub
push
ret
sbbl
adc
mov
pop
imulb
icebp
fwait
mov
jg
push
jo
scas
je
xor
mov
cmpb
inc
jle
mov
out
dec
in
mov
das
mov
sub
dec
dec
aaa
jge
jle
notl
movsb
inc
jmp
sub
mov
in
pop
enter
mov
aam
cmc
bound
les
cmpsb
jno
sub
js
fbld
mov
mov
ja
push
jecxz
and
mov
jb
je
shrl
pushf
sub
das
mov
adc
arpl
iret
clc
jno
pop
cmp
sarb
add
xor
out
jle
in
adc
mov
out
mov
in
pop
jo
pop
dec
push
in
mov
mov
cmpsb
int
and
dec
sahf
out
and
in
jnp
or
stos
repnz
cvtps2pd
nop
ret
cld
mov
into
jle
sub
hlt
out
dec
faddl
std
jnp
pop
stc
repnz
repnz
cwtl
sbb
jb
fidivrl
out
scas
cld
inc
and
nop
cs
mov
mov
shlb
sub
stos
or
scas
push
or
inc
jnp
xor
ds
lret
xchg
pop
jle
mov
jge
adc
insb
jno
fwait
repnz
jp
cmp
into
shll
jp
cmpsl
pusha
pop
repnz
mov
xchg
std
lcall
lods
mov
push
mov
je
icebp
mov
inc
sarl
xor
scas
mov
enter
stos
mov
cmp
lret
cltd
jg
bound
sub
xor
mov
in
das
shrl
sbb
dec
outsl
int
rolb
repnz
das
call
ljmp
dec
xor
pop
stc
adc
jg
test
xchg
xor
repnz
ja
jge
xor
test
inc
sahf
aam
push
cmp
std
sub
and
out
pusha
and
mov
cld
repnz
xchg
addl
call
and
xor
vpunpckhqdq
int
jl
cmp
aam
inc
mov
divb
cmp
pop
jecxz
push
or
enter
fldenv
mov
jb
cmp
inc
add
sub
dec
ret
int3
xlat
push
xchg
push
pop
jns
xor
jp
mov
jge
loop
pop
jns
or
filds
popa
sbb
mov
arpl
cld
repnz
loope
dec
repz
or
fbld
lds
cld
scas
push
pushl
mov
cmp
pop
incb
les
mov
and
std
sbb
lahf
leave
cmp
iret
xor
repnz
mov
jg
push
mov
rorl
lret
das
mov
mov
xchg
mov
mov
ret
repnz
idiv
mov
inc
aaa
lock
dec
into
add
jmp
sub
push
xchg
and
sti
repz
cld
call
std
shr
nop
lods
or
mov
loopne
inc
mov
sub
jae
cld
repnz
enter
lods
sub
pop
fcom
enter
jp
jmp
inc
push
sti
push
gs
sahf
inc
outsb
jae
mov
imul
imul
outsl
xchg
dec
pop
test
not
sub
push
mov
out
es
insl
leave
scas
mov
dec
pop
lods
in
in
mov
jo
pushf
ljmp
push
mov
cs
push
ficomps
subl
in
movsl
push
pop
jns
add
sbb
dec
js
push
mov
in
xor
mov
xchg
movsb
jg
or
addr16
pop
into
pop
jle
in
les
mov
sub
and
fmuls
ljmp
pop
jns
pushf
in
cmc
or
jo
icebp
inc
push
in
shrb
dec
cmp
and
stc
data16
repnz
and
out
out
jl
add
jmp
lret
das
mov
adc
dec
cmp
pusha
mov
mov
lret
ja
push
mov
aaa
test
sbb
das
lcall
mov
lea
add
cld
repnz
mov
scas
gs
dec
push
sbb
cli
push
sub
ss
ret
repnz
jae
idivl
fs
mov
cmpsl
lret
mov
fwait
outsl
jmp
cmp
push
mov
scas
mov
mov
ljmp
pop
mov
or
les
or
mov
sub
jl
mov
and
lods
mov
cli
jnp
cwtl
test
add
dec
lock
mov
mov
sbb
dec
arpl
das
mov
fldt
push
mov
das
mov
int
xor
mov
jge
std
xor
call
ficomps
sti
mov
or
mov
mov
lret
das
jnp
stos
pxor
jo
cmpsl
out
or
out
and
dec
out
repnz
xchg
sbb
mov
fsubrs
adc
data16
in
lea
stc
push
dec
std
xlat
mov
faddl
ss
negb
in
cmp
xor
add
and
add
and
add
cli
cwtl
pusha
cwtl
cmp
iret
test
sub
ljmp
pop
loope
mov
repnz
dec
in
mov
repnz
nop
pop
jns
lret
ret
xorl
scas
or
xchg
push
jo
pop
push
inc
cltd
or
sub
sbb
xchg
aas
sbb
pop
das
mov
dec
adc
or
add
gs
dec
mov
mov
aaa
push
ds
sbb
dec
lret
das
ds
fcmove
mov
inc
inc
outsl
out
sub
xor
or
clc
xor
lret
das
jg
mov
mov
xchg
out
fisttpl
sub
pause
stc
movsl
flds
test
mov
cltd
adc
lea
add
clc
jge
push
pop
dec
ljmp
out
adc
cld
jnp
or
mov
hlt
mov
insl
popa
mov
cmp
scas
jbe
push
inc
out
inc
sub
rcrb
nop
sub
jmp
sbb
sbb
mov
mov
adc
stos
add
loope
push
loopne
lret
pavgw
lock
stos
xchg
insl
prefetchwt1
pop
mov
lret
push
in
negl
adc
outsb
inc
neg
push
ficomps
cmp
sahf
pop
adc
sub
in
mov
dec
aam
leave
jmp
in
inc
push
and
cli
cmp
and
jge
scas
mov
mov
idivl
mov
nop
ja
mov
jle
jg
repnz
das
inc
or
ljmp
pop
adc
inc
mov
bound
out
pop
pop
pop
adc
inc
mov
mov
lods
dec
add
test
jle
in
push
sub
subl
cltd
outsl
add
repz
sahf
in
test
cmp
ljmp
jns
jp
test
xlat
dec
jl
dec
pop
pop
jns
cmc
and
js
cmp
or
cld
sti
adc
and
cmpsl
pop
and
adc
or
lret
das
mov
xchg
mov
mov
and
mov
lret
sti
fisttpll
ffree
test
out
bound
push
mov
addr16
and
xchg
sub
cwtl
push
pop
jns
test
xchg
mov
pop
cmp
adc
leave
scas
mov
lret
mov
loope
pop
mov
ficomps
cmp
adc
mov
cs
fidivrs
add
sarb
cmp
xchg
push
fiadds
lahf
rcl
jbe
out
fwait
cmc
adc
cmp
push
pop
jns
call
inc
cmpsb
stc
jbe
imul
leave
imull
ss
mov
mov
loope
inc
shl
sahf
aaa
shrl
push
cmpsl
clc
orl
add
xchg
rcr
inc
and
les
in
pop
mov
and
fwait
mov
in
pop
jle
sbb
xchg
add
sub
xchg
push
stc
in
lods
or
xor
scas
nop
mov
loope
pop
out
cmp
jbe
pusha
jge
adc
and
in
paddd
jge
cwtl
enter
jb
repz
nop
jp
cmp
hlt
jns
lret
or
jnp
inc
fsts
in
mov
sub
pop
mov
or
sbb
fbstp
xor
mov
fcompp
stos
pop
and
repz
inc
pop
jns
push
adc
cmp
enter
jns
jp
mov
jns
addl
cs
sbb
scas
inc
insl
stos
aad
push
lds
sub
popf
pop
sbb
outsl
sub
stc
sbb
cmc
cltd
push
xor
push
mov
nop
loope
orl
inc
loop
sub
xor
mov
stc
ja
test
lret
jl
adc
pop
and
xor
push
xor
xchg
pop
jle
pop
pop
lock
dec
lock
sub
cld
sti
andl
cld
sub
divl
fsubrl
aas
enter
xchg
pop
jge
adc
mov
mov
outsb
int3
lods
lahf
sbb
pop
push
leave
mov
stc
and
cmp
add
and
mov
push
push
adc
ja
xor
mov
and
sar
fs
andl
xor
sti
bound
lret
mov
cmp
cmp
mov
mov
rcr
stos
add
ja
dec
jg
cld
repnz
cmpsl
scas
xchg
sbbb
mov
loope
push
mov
cmp
pop
jmp
mov
and
mov
jns
jl
adc
xor
out
fcomi
psubq
cmp
mov
and
shrb
push
dec
pop
pop
pop
xchg
mov
cmc
sub
in
jno
mov
sub
inc
mov
cmp
cmp
lret
repnz
shlb
insl
movsw
mov
das
mov
stos
out
enter
es
mov
jmp
lahf
inc
mov
stc
in
jbe
sti
mov
insb
sbb
xchg
jno
outsb
stc
in
pop
cld
and
mov
push
sbb
jle
xchg
mov
push
push
repz
ret
fs
outsl
sbbb
gs
cmp
lret
bound
dec
leave
xor
jne
stc
in
jg
mov
lock
xchg
pop
jle
xchg
int
leave
dec
lock
stc
in
test
jecxz
fbstp
icebp
in
addr16
lcall
jle
ja
fidivrs
mov
mov
mov
les
in
insb
fnsave
sbbl
fwait
push
sbb
in
pop
scas
sbb
in
cmpsl
loopne
idivb
push
inc
out
xchg
pop
jle
inc
and
mov
inc
test
mov
je
ret
and
jne
lret
insb
cmp
or
cmpps
lret
inc
std
push
lock
bound
enter
xor
fwait
push
ljmp
jge
out
adc
pop
push
jecxz
dec
pushf
and
out
out
jbe
loope
pop
sbb
rol
idivl
mov
cwtl
dec
scas
mov
mov
sbb
rol
enter
and
jle
jnp
add
jns
adc
lods
push
arpl
sbb
fimull
in
je
and
aad
or
adc
jns
push
add
mov
jecxz
sahf
out
stc
xchg
push
pop
jns
es
sbb
repz
and
xchg
push
out
pop
and
mov
fwait
mov
xchg
and
ss
sti
push
inc
mov
sar
mov
jbe
xchg
xor
mov
pop
orb
arpl
sub
cltd
cmp
cmpsb
pop
jns
loop
popa
ja
imul
cmp
notl
inc
xor
es
cli
movsl
iret
mov
pop
jle
mov
jb,pt
inc
out
inc
dec
fstps
stc
in
cmc
mov
insb
jp
jae
cmpsb
sbb
mov
cmp
sub
imul
pop
pop
xchg
mov
clc
out
dec
add
xchg
pop
jle
arpl
mov
sahf
fsub
jecxz
sbb
stc
enter
push
cmp
ja
dec
jmp
xchg
sub
movsb
loope
outsb
clc
push
xchg
xchg
das
sti
cli
lea
fisubs
aam
xchg
pop
jle
add
sub
ja
in
mov
inc
inc
and
jg
adc
lcall
lcall
aaa
cld
pop
push
push
stc
in
pop
jg
out
adc
lock
add
mov
aad
icebp
inc
mov
mov
test
divl
in
stc
das
lock
dec
dec
sub
xchg
inc
inc
dec
loop
je
sbb
mov
imul
push
sahf
dec
movsb
ficomps
cmp
xchg
pop
mov
cmp
xchg
push
iret
cltd
stc
out
mov
loop
dec
mov
pop
inc
mov
add
xlat
out
enter
dec
pop
mov
sub
add
xor
sbb
aas
mov
mov
mov
je
jle
in
int
sub
iret
and
mov
jle
in
test
ds
and
inc
aad
in
pop
jecxz
jmp
lock
sbb
xor
jae
inc
je
mov
repnz
les
add
jno
rcr
xor
mov
lret
das
cld
adc
inc
adc
sub
ret
pop
push
mov
mov
xor
and
repnz
rolb
rclb
std
cmp
lret
mov
push
ja
push
fnstsw
bnd
aam
outsl
in
inc
jle
and
andl
pop
rcrb
sbb
into
in
jne
pop
push
das
cmp
outsb
xor
jbe
sbb
push
and
jns
cwtl
stc
int3
lret
mov
sarb
add
or
addr16
das
mov
dec
ljmp
shlb
hlt
xchg
dec
mov
cmp
lret
cs
pop
xchg
lds
fmulp
sub
fwait
in
push
loope
fidivrs
mov
mov
addr16
or
jbe,pn
lock
stc
jle
in
push
sub
inc
notl
xchg
insl
filds
mov
lcall
iret
mov
xchg
or
jge
repnz
in
sub
andl
inc
inc
gs
adc
sub
test
divb
lret
rorl
je
mov
repnz
mov
push
mov
cwtl
in
inc
scas
mov
cwtl
bnd
xchg
shll
sbb
pop
les
or
inc
pop
testl
pop
lock
pop
pop
jns
loope
stc
jle
add
add
scas
fisubrs
adc
iret
and
pop
shll
iret
popf
in
push
pop
cltd
dec
js
adcl
pop
jns
dec
mov
add
pop
lcall
popa
pop
cmp
fisubrs
cwtl
shl
lret
ja
pop
frstor
inc
inc
jnp
pop
cmp
fadd
cmp
sub
pop
cmc
jle
repnz
jbe
xlat
out
mov
jae
mov
push
or
or
jecxz
xor
cld
jge
in
das
stos
insl
xor
add
jge
mov
in
test
sti
jbe
ret
fwait
push
xchg
push
pop
jns
lahf
jge
call
sarl
mov
imul
rolb
and
cmova
mov
outsb
push
pop
jns
stos
sbb
movsl
bound
pop
jns
xchg
push
popf
push
je
dec
push
jmp
jmp
in
push
mull
xor
sub
sbbb
pop
xchg
clc
jnp
mov
in
subb
jmp
cli
jp
scas
push
rclb
lcall
repnz
or
mov
neg
and
or
or
pop
out
sub
pop
push
mov
pop
jns
in
out
int
push
bswap
sbb
mov
enter
sub
and
stos
imul
daa
mov
mov
pop
fcmovu
clc
mov
jle
ja
sub
push
fidivrl
mov
add
jmp
pop
jl
loopne
mov
outsb
xor
insl
sub
dec
fisubrl
into
xchg
sbb
cli
xor
pop
lahf
jbe
lret
loop
adc
add
lods
daa
rcr
lret
mov
fs
jnp
inc
mov
sub
xor
jl
jo
mov
lret
faddl
negl
rcl
das
push
xor
enter
call
rcrl
ret
cld
bound
pop
mov
in
mov
mov
pop
imul
repnz
aas
jl
push
cli
in
iret
xor
je
push
push
xchg
das
mov
jp
jno
mov
jae
in
test
scas
bnd
xchg
push
pop
jns
test
lock
lock
enter
cmp
xlat
push
jae
cs
push
xchg
enter
pop
push
loope
xchg
cltd
outsb
shrb
push
add
xchg
pop
jle
inc
mov
loope
dec
dec
inc
faddp
clc
ss
mov
jnp
push
movsb
out
movsl
xor
pop
shll
int
mov
sub
lds
mov
ja
inc
pop
repnz
pop
sub
lret
fwait
inc
cmp
jne
sub
call
adc
mov
popf
jecxz
test
loope
sub
mov
xchg
mov
in
leave
or
sbb
push
cmp
mov
in
push
ficomps
add
pop
mov
scas
fstl
mov
mov
test
sub
mov
iret
adc
out
lods
lods
test
or
add
jp
lret
std
lcall
mov
push
ficoms
fldcw
cli
pusha
pop
cmp
in
mov
lods
aam
inc
in
mov
cmp
pusha
inc
push
xlat
cmp
pop
rorl
das
je
add
mov
jge
das
mov
xlat
xchg
sti
cmpsl
pop
jle
testl
cmpsl
repnz
inc
hlt
cld
repnz
and
xchg
mov
sti
cwtl
jmp
les
aas
orb
lret
das
mov
xchg
pop
and
cld
mov
jecxz
pop
test
icebp
fxch
dec
ja
xlat
rclb
cltd
ss
sub
addr16
or
lock
sbb
sub
inc
das
ret
cmp
int3
stos
aam
rorl
repnz
stos
jl
je
gs
push
insl
notl
sbb
rolb
popa
fdivrl
lds
adc
imul
xchg
cli
xchg
pop
jle
in
mov
xor
xchg
fstpt
in
out
dec
mov
loopne
pop
sub
mov
repnz
pop
fisubl
pop
sbb
scas
and
cmp
lahf
std
lret
jl
or
sub
or
leave
pop
daa
call
cld
repnz
das
mov
cmpsl
ljmp
movsb
repnz
das
mov
xor
aad
cs
aaa
xchg
das
mov
and
jle
mov
cld
repnz
sbb
pop
les
es
jp
xchg
sti
push
dec
arpl
daa
xor
in
push
fisubs
int
loopne
popf
xor
xchg
dec
into
cli
xchg
push
pop
jns
mov
mull
aam
add
test
push
lahf
vpsubw
pop
cmp
stos
js
repnz
and
jecxz
pop
enter
enter
xor
jae
jmp
mov
cltd
int
fldcw
xor
xchg
in
or
pop
stc
repnz
pop
out
out
xor
bnd
pop
pop
sub
add
jg
out
imul
scas
mov
lds
fdivr
jne
lret
add
xor
sahf
decl
push
sbb
jl
lret
das
xchg
inc
or
or
lret
sub
pop
jno
pop
sub
xchg
cmc
popf
cltd
push
leave
sbb
cld
repnz
enter
xchg
mov
shlb
test
mov
repnz
mov
cltd
outsl
jp
loop
in
lods
loope
mov
inc
shl
xchg
push
pop
mov
mov
imul
mov
in
xor
pop
jns
dec
push
mov
sbb
call
movnti
enter
in
loopne
repz
adc
inc
push
jge
adc
pop
in
push
xchg
dec
push
or
pop
std
jns
out
lock
mov
sbb
int
rcrb
stc
in
dec
jb
int
sub
cmpsb
iret
push
lods
push
sbb
in
sub
or
sarb
scas
adc
jecxz
pop
roll
fbld
ljmp
xor
mov
inc
jmp
cld
repnz
das
push
ss
inc
test
ficomps
dec
stc
xlat
inc
mov
clc
cmp
popf
sti
cld
sbb
xchg
pop
jle
sub
test
inc
xor
xchg
pop
jle
xor
lock
jmp
xchg
mov
cld
sti
enter
rclb
push
sti
pop
sbb
test
aas
stc
test
repnz
mov
scas
icebp
scas
fldt
mov
push
ja
and
addr16
loopne
jle
in
push
je
mov
lahf
testb
in
pushl
mov
popf
cmpsl
dec
mov
out
fmull
dec
add
cmpsb
repnz
mov
in
pop
jle
pmulhuw
loope
popl
sarl
cld
outsl
sbbb
push
add
push
stc
in
add
icebp
jecxz
shl
add
mov
repnz
das
xchg
cmp
adc
sub
push
or
xchg
mov
insl
pop
mov
or
add
jmp
shlb
movsl
dec
xor
inc
sbb
ds
xor
jnp
sbb
xlat
xorl
das
pop
adc
sub
pop
ret
mov
out
pusha
aam
inc
shll
mov
pop
push
imul
mov
mov
xchg
fcomps
pusha
ds
ds
inc
loopne
pop
scas
and
mov
das
pop
pop
xchg
rcl
lret
shrb
mov
arpl
lods
outsl
and
call
cld
xchg
sbb
and
mov
xchg
add
adc
jl
out
lret
mov
jne
outsb
mov
jg
mov
xor
ret
rolb
inc
mov
fcompl
mov
mov
outsl
sbb
xchg
jg
adc
imull
enter
dec
scas
mov
dec
sti
movsl
dec
repz
lock
lret
ljmp
pop
jge
sar
fs
inc
in
cwtl
test
jp
xchg
and
push
mov
fcompl
mov
mov
inc
iret
xchg
out
jnp
sbb
xchg
mov
xor
cltd
push
movsl
insb
notb
lods
mov
xchg
sub
imul
mov
jecxz
mov
sbb
cld
fbstp
push
push
popa
adc
jns
xchg
aaa
pop
cmp
xchg
xchg
cmp
insl
stc
lea
dec
mov
pop
and
mov
dec
loopne
pop
jle
in
mov
sub
cmp
fistps
sub
loopne
cmp
lahf
lret
xchg
pop
int3
pop
cmp
pushf
xchg
lods
inc
mov
jle
js
or
test
int3
cmc
push
mov
jnp
sti
arpl
fwait
leave
addr16
scas
andl
sbb
in
cmp
int
sbb
stc
in
pop
sub
test
sbb
xchg
jb
ljmp
fcomip
push
add
push
loopne
das
jmp
jge
sbb
repnz
xchg
push
pop
jns
mov
mov
ret
das
push
pop
jns
xor
xchg
fs
dec
ja
test
sub
xchg
xchg
inc
xchg
and
lds
inc
mov
dec
or
sub
sbb
imul
jb
lret
lahf
sbb
scas
mov
inc
in
sub
enter
arpl
lret
lret
dec
outsl
mov
fst
push
sub
xchg
repnz
push
fistl
lods
mov
outsb
inc
mov
pop
dec
mov
sbb
cmp
loopne
bnd
xor
ret
push
sbb
mov
inc
mov
rdmsr
cltd
loopne
imul
scas
mov
dec
mov
shll
repnz
xchg
cmp
and
cmpsb
lret
pusha
add
enter
mov
ljmp
and
mov
mov
imul
aam
fidivrl
sub
lret
mov
inc
hlt
dec
push
ja
or
in
jg
pushf
add
lcall
roll
int
sbbb
into
pop
clc
mov
into
ds
pushf
and
mov
lds
cmpsl
add
mov
stos
enter
ret
dec
out
nop
jecxz
xchg
jno
dec
sub
dec
jo
daa
ljmp
jge
or
xchg
pop
xor
push
jp
loope
jns
loopne
and
orb
in
sub
pop
stc
in
daa
and
into
pusha
or
idivb
jle
mov
cmp
gs
xor
das
mov
dec
test
cli
comiss
adc
sbb
repnz
icebp
cmp
add
das
lcall
jge
sub
fcoml
stc
not
inc
in
imul
mov
cld
repnz
and
in
popf
pop
push
test
das
mov
xlat
or
clc
fistpl
cld
test
and
je
je
pushf
pop
dec
das
mov
fs
adc
lret
fcompl
mov
mov
xchg
jae
jg
inc
jl
or
out
stc
test
decl
pop
popa
add
adc
xchg
pop
jle
or
insl
sbb
inc
pusha
mov
pop
jle
mov
or
iret
cmpl
addr16
outsl
jecxz
mov
xchg
test
fwait
inc
pop
jns
insl
lea
mov
lret
das
jmp
dec
mov
mov
rorl
push
lock
insb
les
jns
xchg
push
fmul
sub
adc
mov
pop
jno
into
pop
and
call
jns
mov
movsl
cmp
push
pop
jns
scas
sub
xor
inc
ret
dec
sbbl
loop
xchg
cmp
push
shrd
push
xor
jns
pop
jne
enter
xor
mov
pop
jns
xchg
outsl
or
pop
sbb
and
jecxz
or
repz
or
repnz
xor
xchg
lods
cmc
push
scas
mov
add
sub
ja
rorb
dec
pop
jmp
test
cmp
filds
mov
pop
aad
mov
jae
aad
adc
mov
imul
pop
jns
in
jns
jno
jle
ljmp
pop
jns
xchg
imul
push
sbb
aam
ret
xchg
lret
sbb
sub
mov
test
xchg
adc
xor
mov
dec
subb
scas
in
cmpsb
test
sub
mov
loop
fcoml
ds
jne
xor
xchg
jmp
push
xor
adc
in
das
rcrb
add
dec
xchg
aaa
sbb
lret
sub
mov
cld
jnp
xchg
push
f2xm1
out
jl
jge
in
icebp
sub
das
xchg
scas
or
adc
push
pop
jns
pop
or
fs
clc
pusha
xor
jns
xchg
sbb
adc
xchg
mov
in
push
nop
aaa
mov
mov
sub
sub
cmp
nop
fistpll
lret
adc
cmp
lret
mov
lods
idivb
sbb
pop
inc
mov
mov
add
mov
das
lcall
pusha
cmp
mov
in
and
inc
inc
mov
lret
xchg
ss
pop
gs
notl
std
inc
neg
or
jns
jmp
add
test
push
inc
pop
out
out
imul
mov
push
pop
inc
fdecstp
cld
cmp
clc
lock
das
mov
imul
aas
add
repnz
push
fldenv
cmp
dec
int3
dec
jns
jmp
rolb
dec
iret
icebp
add
xchg
push
pop
nop
cmp
add
xchg
push
pop
jns
ja
ja
xchg
pop
sbb
push
pop
jns
aad
mov
mov
enter
jns
xchg
leave
add
andl
xchg
push
xlat
mov
imul
xchg
sti
pop
fs
sti
mov
fdivs
lds
sbb
jns
out
mov
push
mov
xor
sbbb
lret
das
cwtl
inc
xchg
sub
arpl
repnz
das
mov
cltd
mov
popa
pop
maskmovq
filds
cld
loop
sti
push
lcall
jmp
in
push
cmp
or
or
sbbl
push
or
xor
inc
or
je
and
jno
scas
add
mov
stc
jb
hlt
in
subl
xchg
and
xor
jns
loop
mov
cs
and
js
cmp
lret
fwait
push
or
outsb
jmp
jne
inc
scas
mov
sub
xor
or
jns
cmp
mov
mov
in
push
in
cmp
push
je
sub
xchg
pop
jle
push
xchg
add
mov
pop
jle
in
shll
inc
outsl
imul
jle
in
or
bnd
popf
in
dec
xor
in
pop
jecxz
in
xor
ja
ret
mov
xchg
ja
ds
mov
fcmovu
jg
pop
jns
jne
insb
inc
into
pop
xor
aam
loopne
jg
pop
mov
ljmp
mov
jg
fildl
ja
or
notl
sbb
enter
push
iret
add
scas
mov
pop
das
xor
lret
jb,pn
repnz
mov
ret
fs
push
ficomps
and
stos
and
in
mov
stc
std
shlb
pop
clc
inc
pop
jns
xchg
pusha
loopne
push
pop
cmpsb
and
in
iret
push
pop
jge
lds
mov
imul
insl
sahf
sub
pop
sbb
mov
ds
push
pusha
rcrb
in
mov
xor
aaa
addb
mov
xchg
push
pop
test
push
xor
out
fcoms
rorl
sub
ja
in
and
push
cmp
lret
mov
fcompl
jecxz
ret
out
ret
out
imul
out
adc
lea
mov
orb
repnz
das
or
cltd
out
rolb
je
mov
test
mov
bound
sti
test
mov
mov
repnz
das
lds
inc
insl
ret
mov
into
aam
mov
ja
cld
jnp
sub
mov
add
push
repnz
pop
mov
sarb
mov
pop
pusha
jmp
pop
cli
push
sub
pop
inc
mov
xor
sbb
and
xchg
call
mov
mov
cmc
or
and
push
mov
adc
enter
or
jge
lret
sbb
sbb
push
mov
sbb
das
xor
or
jge
pop
jns
andb
mov
jmp
xchg
popf
mov
mov
cmpl
dec
out
testl
xchg
push
pop
mov
je
clc
in
xchg
add
lahf
loop
mov
and
mov
mov
jle
aas
lock
push
lahf
and
std
and
xor
imul
cld
pop
imul
aaa
push
jo
or
mov
cmpsb
popa
lahf
flds
js
bnd
repnz
std
addr16
jp
push
ss
inc
pop
mov
lret
das
dec
in
xchg
jo
imul
stos
test
mov
jge
out
and
pop
lret
das
mov
dec
dec
enter
testl
cs
pop
mov
push
pop
jns
cli
jp
inc
inc
add
js
jno
push
sbb
or
in
scas
inc
lock
push
pop
jns
addl
lcall
mov
jns
ret
iret
push
cmpsb
jns
repnz
push
xchg
popa
insb
adc
pop
jns
xchg
dec
or
shlb
mov
adc
push
push
sbb
shll
in
and
in
push
pop
adc
in
hlt
xorb
or
sub
lret
rclb
test
dec
lahf
mov
or
imul
repnz
std
scas
jmp
xlat
and
inc
fxch
sub
push
aaa
out
leave
pushf
nop
cs
sub
aas
in
pop
hlt
push
push
hlt
rclb
test
enter
jno
arpl
in
push
fidivrs
sub
imul
clc
xchg
push
pop
jns
jge
jnp
out
xor
cmp
ja
pop
and
jne
xor
push
inc
pop
mov
aas
adc
xchg
mull
xchg
pop
jle
jns
loopne
xchg
inc
int3
inc
pop
mov
jle
in
adc
add
ret
fs
fptan
fdivrl
repnz
in
xchg
jbe
and
test
stc
es
mov
and
xchg
xchg
push
fimuls
imul
jb
xlat
sbb
jns
pop
xor
xor
adc
dec
pop
lret
movsb
sub
cld
repnz
mov
mov
xor
cmp
mov
push
pop
jns
loop
out
scas
rcrl
test
add
xchg
xchg
push
push
jo
test
outsl
out
push
sub
or
sub
jmp
dec
add
or
aaa
jmp
inc
in
aaa
xor
cmp
dec
pop
cmp
jno
inc
xlat
sub
addl
cld
repnz
and
sub
cmpsl
jge
mull
and
mov
fiadds
sbb
inc
icebp
cmp
cmp
and
or
cmpl
call
or
sub
imul
popf
loope
xor
xchg
push
pop
jns
dec
std
repnz
test
mov
loopne
xor
xchg
mov
and
mov
fidivs
jnp
and
faddp
popf
mov
or
gs
jns
andb
sub
push
fs
xor
dec
adc
jns
popa
lock
sub
cmp
addr16
lods
xchg
jg
loop
mov
iret
and
jge
add
in
xchg
xchg
jns
adc
and
inc
mov
sub
loopne
sar
lret
mov
fistpll
ljmp
xchg
xor
mov
cld
repnz
das
or
stos
and
jl
lds
fistl
out
loope
mov
adcb
mov
popf
push
icebp
mov
call
xchg
pop
jg
stc
repnz
adc
mov
xchg
jb,pt
ljmp
add
sahf
xchg
cmp
jae
or
push
repnz
jl
pusha
or
ret
fwait
xchg
mov
ds
pop
sahf
inc
xor
push
shl
pop
xor
test
dec
add
jp
dec
imul
lods
stc
repnz
mov
divb
nop
and
xchg
jg
dec
sub
test
or
lret
or
push
mov
xor
scas
lahf
test
addl
inc
mov
pop
lcall
or
push
push
cs
jl
outsl
mov
mov
inc
cwtl
adc
scas
xor
js
cltd
test
icebp
das
mov
cwtl
ja
sbb
or
mov
mov
adcl
fnstenv
enter
in
das
test
or
adc
cmp
and
fidivs
push
or
stc
aad
jne
movsl
add
dec
jb
stos
mov
mov
mov
loopne
movsb
dec
popf
test
or
jne
lock
scas
lcall
lret
das
incl
fldt
dec
push
das
mov
mov
mov
push
mov
adc
out
and
cld
repnz
das
popf
sbb
rorl
fbld
mov
cmc
hlt
xchg
shrb
addr16
lock
mov
fsts
jae
mov
xchg
sub
jl
in
out
inc
lds
out
sub
nop
mov
jae
sbb
repnz
cmp
inc
popa
les
add
jp
xor
fcompl
xchg
push
fimuls
dec
mov
cmp
movsb
jnp
insb
mov
das
mov
daa
in
mov
mov
es
xchg
push
pop
jns
cmc
adc
sbb
inc
push
stc
in
xchg
xchg
mov
outsb
cmp
jb
data16
shlb
lcall
pop
aad
xchg
push
dec
and
cmp
das
jge
mov
adcb
adc
push
movsl
imul
das
sub
loopne
mov
loop
mov
aaa
sub
movsl
fsubrp
pop
jecxz
cmp
das
or
xchg
mov
fistps
xchg
push
pop
adc
cld
xlat
mov
xchg
inc
dec
lret
das
pushl
loope
xor
mov
imul
push
bound
cltd
fxch
xchg
idivl
negl
add
ss
iret
sti
cmp
jo
push
enter
mov
fldl
mov
fucomi
or
rorb
test
push
pushf
xchg
push
cld
repnz
das
pusha
xchg
dec
add
movsl
jmp
filds
sahf
adc
pop
flds
or
pop
jle
in
pop
in
jbe
not
xchg
pop
mov
psraw
lods
jge
sub
lock
push
pop
leave
fildl
or
jb
adc
xor
sub
bound
in
loope,pt
in
inc
mov
test
stc
in
pop
popf
pusha
mov
and
in
push
loop
sbb
jle
mov
jae
push
xor
out
orl
cmp
outsb
repnz
mov
mov
lcall
lret
das
mov
fadd
lods
add
mov
stc
rcrl
cmc
inc
testb
movsl
rcrl
stc
repnz
push
mov
xchg
into
sbb
sti
rorb
js
pop
jns
mov
push
cltd
mov
add
in
repnz
std
jmp
ret
jle
in
push
jecxz
jbe
push
gs
push
loope
pop
std
in
push
pop
push
cmp
mov
xchg
push
pop
jns
jns
push
popa
stc
sbb
jle
test
inc
xlat
scas
ret
sub
repnz
mov
and
sub
sahf
mov
lret
das
mov
xchg
push
sub
and
cld
repnz
pop
idiv
or
adc
pop
push
mov
fs
das
push
xchg
pop
mov
jg
sub
imul
lret
popf
inc
inc
sub
cmpsl
cmp
jmp
rcr
imul
das
sahf
xor
mov
repnz
pop
sbb
repnz
push
mov
imulb
jmp
add
jge
lret
scas
lds
jo
cmc
cmp
sbb
sub
mov
pop
jns
inc
xchg
in
xchg
dec
repnz
and
mov
adc
decl
dec
pop
pop
ss
xchg
mov
sbb
xchg
sub
pop
fisubl
xchg
jg
cld
in
shll
sub
sti
clc
push
fsubrl
enter
mov
dec
mov
addr16
pusha
int
pop
out
lds
les
sbb
xchg
shrl
pop
sub
mov
lret
mov
invd
jae
adc
xlat
sbb
scas
mov
jb
sub
adc
lret
test
lea
dec
xor
mov
cmp
push
xlat
lcall
jo
mov
fwait
imul
leave
leave
xchg
push
pop
jns
sarl
or
xor
push
push
pop
jns
fisubl
or
cmp
inc
mov
pop
jns
xchg
cmp
jbe
out
fdivl
xchg
jg
xchg
add
cmp
xchg
call
stc
in
pop
push
dec
fstpl
rorl
mov
xchg
bnd
jle
sbb
adc
and
inc
loopne
cmp
xor
stos
decb
idivl
in
inc
push
push
stos
jecxz
inc
jmp
sub
arpl
in
inc
leave
dec
pop
ds
mov
mov
int
dec
inc
pushf
out
mov
stc
in
out
std
sbb
lcall
in
pop
shrl
fidivrs
mov
lea
ja
mov
lahf
jl
enter
loope
not
movsb
fmulp
fdivr
in
mov
mov
add
addr16
aad
sbb
xchg
pop
jle
rorb
mov
negb
jl
bound
movsl
mov
fdivrl
pop
jns
mov
ret
dec
sub
xchg
std
sub
je
xchg
push
xor
rorl
in
sahf
cmp
mov
ja
fwait
pop
pop
jns
mov
ret
adc
inc
xlat
jb
lret
dec
mov
mov
lcall
mov
xchg
in
xchg
in
pop
jecxz
repnz
xchg
adcl
inc
xor
push
sti
scas
or
in
mov
in
and
cmp
or
das
lcall
adc
lcall
negl
push
leave
das
mov
out
fwait
into
stos
mov
insl
adc
add
lret
int3
xchg
and
mov
stc
in
inc
insb
push
jne
imul
call
enter
fsub
es
mov
aas
mov
das
mov
and
enter
mov
mov
mov
fmuls
cmp
movb
lock
das
sub
xchg
pop
sbb
pop
cmp
fwait
ljmp
scas
mov
shll
scas
imul
cld
cmp
lret
ret
cmp
cs
repnz
das
mov
pop
and
gs
cmp
xor
cld
outsb
insb
es
sub
or
stos
mov
out
mov
scas
mov
inc
scas
add
xor
xor
outsl
and
xchg
sbb
pusha
jle
in
repnz
jge
dec
sbb
jbe
incl
in
pop
cmp
adcb
inc
or
mov
sub
mov
mov
and
cmp
pop
jns
lea
sbbl
pushf
movsl
jp
in
xchg
xchg
loop
inc
rolb
push
mov
ret
add
stc
repnz
xor
jl
arpl
jge
xchg
popf
rcr
in
jg
cld
xchg
adc
pushf
xlat
pop
test
jle
or
sub
add
call
jae
lods
popa
adc
lret
repz
outsb
and
xchg
pop
dec
xor
sub
gs
repz
imul
or
or
fwait
sbb
inc
xlat
js
in
push
mov
cmp
push
cmp
xchg
push
pop
js
notb
mov
adc
fstps
ret
addr16
pop
jns
sar
or
add
push
dec
mov
dec
jns
sub
pusha
sarl
jmp
xchg
push
pop
test
lods
pop
xchg
fwait
adc
aas
ss
cld
sti
or
pop
pop
mov
aad
sti
repnz
das
mov
dec
fdivr
sbb
lret
das
mov
test
test
add
inc
pop
stc
repnz
pop
mov
jecxz
dec
in
push
fiadds
stos
mov
dec
clc
xchg
push
pop
jns
cmp
and
lret
mov
jl
in
rcr
pop
lret
fldenv
fdivrl
lea
push
pop
ficoms
pop
jns
call
and
in
xor
jns
movsb
xor
and
sub
aam
pop
sub
cld
sub
push
push
xchg
push
pop
jns
ds
jge
mov
cmp
rorb
stos
cmp
dec
daa
lcall
mov
xchg
pop
dec
xlat
inc
mov
push
pop
jns
fstl
nop
sbb
cmpsl
out
pop
jns
and
daa
mov
mov
pop
pop
jns
xchg
inc
rol
insb
mov
jno
fadd
hlt
push
dec
jns
xchg
push
cwtl
jp
mov
mov
clc
jl
adc
movsl
daa
push
pop
hlt
mov
xor
enter
or
call
dec
arpl
repnz
das
adc
pop
inc
or
xchg
fmuls
pushl
sbb
dec
jle
cmpsl
mov
jne
into
sub
adc
jle
test
xor
lods
repnz
cs
xchg
pop
mov
ficompl
xlat
fimull
mov
cmp
cmpsb
out
jmp
ss
das
mov
pop
test
sti
pusha
mov
sbb
fimull
jbe
pop
inc
iret
ss
xchg
lds
mov
cmp
sti
scas
mov
push
xor
mov
repnz
int
xchg
clc
je
ret
pop
adc
and
movsl
aaa
loope
stc
in
mov
xlat
std
shr
cmpsl
add
es
in
pop
enter
fists
ficoml
in
pop
jle
rcrl
test
aam
shll
stc
scas
sub
clc
jae
mov
sub
imul
orb
jmp
in
cmp
push
and
jg
leave
adc
lock
pop
jle
idivl
insl
and
dec
lret
rcr
mov
inc
mov
pop
push
or
testl
inc
loope
loope
pop
ljmp
scas
sbb
jns
dec
rorl
mov
add
enter
movsb
jge
mov
lcall
ret
sub
xor
in
das
mov
test
insl
sub
cmp
jae
loope
xor
jns
call
adc
push
iret
pop
jb
xchg
push
jmp
int3
pop
pop
dec
ja
push
mov
and
cmp
cltd
push
imul
loopne
dec
dec
sub
mov
nop
dec
out
jns
repnz
das
lahf
outsb
xor
xor
das
mov
aas
cmp
add
inc
mov
popf
or
add
xor
idivb
xchg
ja
or
sti
cmpsl
roll
xlat
loop
mov
enter
mov
fcmovne
mov
in
icebp
jle
xor
pop
clc
adc
sbb
cmp
in
icebp
gs
lcall
jl
test
mov
pop
xor
adc
cmp
loop
inc
cld
repnz
das
xchg
js
loope
jmp
mov
lret
das
mov
mov
xchg
jp
pop
dec
lret
das
mov
ret
int3
mov
ds
repnz
adc
xor
sub
minps
mov
je
jmp
addr16
stc
repnz
out
dec
dec
jle,pt
sub
outsl
mov
dec
jmp
sub
cmp
jle
fisubl
pop
jo
cmp
lret
cs
inc
es
pop
lret
push
stc
in
mov
xchg
leave
lods
fstp
sbb
enter
test
loopne
pop
jle
neg
imul
jecxz
rcl
ljmp
lods
arpl
movsb
mov
push
stc
daa
shlb
mov
inc
jbe
nop
push
jle
pop
lret
pop
in
and
aaa
push
fidivrl
out
in
xlat
mov
aaa
nop
js
fistpll
pop
lds
push
fisubs
sahf
cs
and
jns
jbe
inc
xchg
aas
je
jnp
imul
xchg
shl
addb
cld
ret
dec
cmp
cmp
pop
int3
xchg
sub
out
arpl
in
ss
test
les
pop
pop
jns
test
pop
add
insb
sub
addr16
mov
sub
mov
out
jae
in
pop
orb
xlat
das
mov
jae
mov
sub
in
dec
and
iret
nop
repnz
jno
mov
leave
xchg
mov
sar
sub
jge
xchg
pop
movsb
pop
bnd
push
clc
enter
das
cmc
jne
lea
repnz
bound
adc
adc
leave
ds
pop
lods
sub
sub
aaa
mov
repnz
or
idiv
repnz
daa
push
pop
je
sbb
repnz
das
mov
inc
mov
data16
xchg
das
mov
jle
mov
xchg
pop
jle
mul
or
imul
jecxz
cs
hlt
jle
in
popf
repz
xor
les
stc
in
pop
inc
lea
dec
push
shrl
cmp
jge
xchg
pop
jle
outsb
mov
sub
jge
inc
xor
add
sub
sub
push
int
lret
repnz
or
push
pop
pop
hlt
test
out
ret
xor
clc
adc
inc
and
sti
mov
fadd
push
mov
mov
cwtl
mov
cmp
repnz
das
mov
enter
cwtl
out
sbb
dec
or
mov
add
lods
stc
dec
lahf
push
in
push
pop
nop
push
jbe
repz
fnsave
pop
jns
test
dec
mov
inc
jne
xchg
fdivl
cld
stos
lds
in
stc
notl
lods
aas
out
mov
add
xchg
pop
jle
addb
mov
ds
sub
loopne
arpl
jp
hlt
and
mov
int3
mov
aaa
mov
out
repnz
and
pop
jb
fsubp
fbstp
mov
xor
jp
sbb
leave
sti
outsl
xor
repnz
loop
jle
in
and
or
pop
sbb
and
jae
mov
fs
in
pop
clc
mov
adc
das
sbb
xchg
aaa
mov
mov
adc
cmc
xchg
cli
pop
xlat
sub
dec
and
sub
scas
enter
jbe
insb
mov
lret
das
jg
or
pushf
xchg
cmp
cmc
icebp
rcrl
mov
stos
mov
in
push
push
roll
mov
fldenv
push
rcll
jp
in
xlat
or
mov
jge
xchg
call
lret
push
xor
sti
jp
das
loope
int
std
pop
inc
aam
dec
in
push
pop
and
outsb
ret
xchg
ja
sbb
jns
xlat
cltd
mov
inc
out
imul
jns
shl
fdivrl
cmp
shrl
aas
in
push
pop
push
sub
lret
xchg
xor
popf
mov
pop
jns
xor
daa
mov
push
inc
pop
jns
std
jecxz
sbb
das
aaa
test
xchg
push
ficoms
or
lcall
pop
pop
jns
mov
push
jge
adc
repnz
xchg
pop
pop
cwtl
out
aad
pop
push
faddp
cmp
sbbl
in
jg
cmpsb
push
outsb
pop
xchg
or
ja
xchg
push
ret
int3
je
push
int3
imul
jmpw
sbb
sbbl
jns
mov
sub
or
outsb
or
pop
jns
xchg
setno
scas
out
inc
xorb
pop
loop
jns
xchg
push
xchg
add
frndint
inc
lods
pop
mov
xchg
push
pop
add
jbe
rorl
test
sbb
or
int
dec
jb
xchg
mov
cltd
mov
negl
out
jmp
sub
cmp
sbbl
mov
xor
mov
inc
daa
cli
enter
xchg
add
lret
sbb
jg
fiadds
mov
and
cld
das
pusha
jle
in
bound
fcmovnu
mov
and
dec
stc
in
pop
cmp
jno
dec
outsl
lods
shl
and
mov
inc
repz
popf
and
xchg
sahf
enter
sbb
inc
call
mov
sbb
cmp
out
mov
repnz
mov
or
xchg
shrb
jle
in
out
lds
jo
neg
mov
pop
stc
in
pop
mov
je
jnp
mov
aaa
xor
pop
jle
push
mov
dec
sbb
lcall
stc
xchg
cmpsl
icebp
xor
repnz
cs
xchg
lret
bswap
sahf
rep
mov
fists
outsl
pop
jb
sbb
repnz
das
lcall
mov
repnz
das
mov
push
and
pusha
xlat
in
or
das
mov
add
sub
loop
add
add
mov
movsl
push
pop
add
or
jge
lret
mov
or
popf
jmp
adc
and
inc
push
mov
ljmp
movsl
adc
fmuls
cmpsb
and
in
jae
mov
cmp
add
push
fiadds
enter
push
push
adc
das
paddq
filds
rol
adc
mov
inc
fsubl
in
movsb
sahf
jge
jl
xlat
jle
cmc
add
xchg
jg
roll
outsl
stc
add
mov
add
call
inc
pop
cmp
lret
mov
xchg
add
outsb
cmp
in
rorl
frstor
mov
and
stc
repnz
dec
stos
and
and
test
jecxz
add
in
arpl
dec
scas
int
rolb
mov
lret
das
mov
stos
shll
sbb
lret
das
mov
int3
js
notb
jg
cld
repnz
shl
repnz
dec
dec
cld
sti
enter
cld
jmp
in
test
xor
in
das
mov
out
sahf
mov
push
leave
fsubrs
out
popa
jge
test
adc
out
mov
out
addl
pop
out
push
adc
xor
filds
pop
divl
scas
sub
xchg
vmaxps
in
pop
cmpsl
pop
cmp
sbbl
push
mov
xorb
ret
out
repz
mov
pop
mov
cmp
test
mov
lds
mov
ja
lcall
sub
rclb
fucomp
into
inc
test
xchg
push
pop
loop
faddl
je
lds
push
aam
xchg
xchg
push
pop
jns
mov
xlat
sbbl
pop
jns
xchg
fistl
xchg
adc
mov
cltd
adc
in
stc
notl
jno
jg
cmp
fimuls
bnd
adc
das
mov
xchg
jp
push
adc
xchg
mov
leave
incb
xor
mov
mov
cld
repnz
das
mov
mov
inc
fdivl
adcb
sahf
in
das
mov
std
pop
xchg
mov
jge
imul
or
mov
jae
pop
push
cltd
adc
out
and
inc
and
lahf
lods
xor
lock
repnz
das
mov
jge
xor
mov
mov
cmp
lahf
nop
jmp
and
xchg
mov
cltd
mov
mov
rcrl
dec
push
jo
push
adc
loope
gs
mov
adc
enter
in
popa
mov
inc
inc
sbb
cld
repnz
jo
and
hlt
mov
add
jno
jmp
inc
dec
arpl
pop
add
sub
pop
clc
scas
mov
jnp
ror
push
mov
xchg
sub
ljmp
sahf
xchg
ret
ficoml
stc
sub
pop
scas
mov
fidivrs
test
sbb
jmp
xchg
div
stos
xor
jnp
iret
mov
xchg
das
ljmp
ror
je
and
lret
dec
test
pop
mov
into
js
dec
xchg
stos
fldl
sbb
add
inc
lods
es
sub
test
xchg
or
aaa
pop
dec
pop
outsb
repz
dec
fsub
adc
imul
adc
into
cmpsb
movsl
push
pop
jns
adc
daa
clc
cwtl
into
fmull
xchg
adc
in
cltd
stos
xchg
inc
mov
adcl
sbb
fnstsw
lods
mov
stc
inc
mov
xchg
cld
repnz
mov
add
add
xchg
gs
rorl
lret
das
mov
sbb
and
loop
cmp
pop
xchg
mov
lret
test
ds
push
call
in
jg
aaa
iret
jae
push
mov
mov
fisttps
jle
fcmove
loopne
dec
stos
sub
xchg
ds
sub
or
out
adc
xchg
pop
scas
mov
cwtl
cmpsl
outsl
aad
jecxz
and
fs
inc
sti
inc
xchg
cmp
in
push
cld
repnz
push
cmp
inc
repnz
enter
mov
idivl
mov
dec
repnz
das
mov
pop
aam
ja
mov
dec
lret
das
mov
in
or
mov
inc
sbb
repnz
add
jle
in
out
jge
es
and
rcrl
sti
jmp
cmp
stc
push
pop
in
pop
jle
pop
mov
jecxz
inc
cmp
das
lcall
stc
and
shrb
sbb
sbb
jecxz
cld
repnz
lods
jl
outsl
mov
sti
cmpsb
jecxz
fucomi
sbb
outsb
out
pop
jns
pop
pop
pusha
inc
cmp
imul
daa
xor
xchg
mov
xor
jno
popf
stos
add
mov
inc
aas
fdivs
or
push
in
das
in
cmc
test
stos
mov
or
xor
outsb
pushf
jp
addr16
aam
sbb
por
shrb
fmull
addr16
fs
push
pop
jae
inc
imul
sahf
cmpl
das
pop
mov
scas
push
stc
in
inc
add
leave
rcll
sub
mov
jle
xor
xor
fisttpll
jle
push
sbb
inc
adc
and
test
ja
push
inc
jge
push
inc
icebp
cld
repnz
das
js
or
mov
orl
dec
lock
lahf
imul
push
outsb
jns
cmp
sbb
rcl
daa
pop
scas
mov
rolb
dec
jmp
out
fidivl
aam
inc
sub
mov
enter
int3
inc
lahf
pop
inc
stos
fs
adc
fsts
jns
enter
fldenv
mov
mov
and
mov
sbb
in
xchg
push
pop
jns
pop
mov
cld
rcll
das
push
pop
jns
aad
jo
arpl
adcl
or
in
movsl
xor
out
mov
scas
fidivrs
hlt
enter
sbb
lret
xor
pop
testb
cmp
mov
cli
lret
inc
push
outsl
mov
fs
stc
in
das
push
push
ret
testl
in
loopne
and
adc
aam
sub
mov
mov
out
xchg
xchg
test
cmp
loope
test
adc
lret
das
mov
add
mov
sbb
mov
or
adc
mov
or
pop
imull
cs
imul
ds
jb
cli
mov
or
jge
lret
or
dec
scas
mov
stc
in
pop
into
inc
clc
sbb
mov
out
in
pop
jle
filds
cwtl
and
outsl
push
cmc
fsubrl
mov
add
inc
js
mov
dec
mov
sbb
das
sbb
repz
repnz
das
lods
mov
scas
mov
popa
in
cld
repnz
cmp
cld
fstpl
int
shll
repnz
das
mov
jecxz
loope
int
test
das
mov
or
gs
pop
das
mov
xchg
iret
rorl
lahf
cmpsl
loop
jge
in
push
cmp
mov
je
dec
movsl
in
lret
add
mov
and
and
mov
in
aaa
stc
call
divb
out
push
dec
in
push
pop
sbb
jbe
sbb
mov
push
pop
jns
mov
or
xchg
in
test
cs
cmp
dec
in
negb
inc
add
scas
inc
addr16
imul
cld
repnz
xor
in
stos
aaa
rcrb
jge
lret
lds
pusha
outsb
xor
add
push
pop
sti
cmp
das
jmp
repnz
mov
lcall
xor
shl
xchg
mov
xchg
push
inc
sub
sbb
xor
sbb
or
add
and
cld
sti
enter
mov
xor
es
add
cmp
enter
xor
cmp
aas
ds
push
add
dec
sub
xor
dec
shrl
pop
cli
int
scas
cld
mov
sbbl
in
jg
das
push
xor
scas
lret
lods
in
pop
jle
stc
std
cmp
adc
data16
and
stc
dec
aas
add
cmp
test
mov
xor
mov
neg
and
scas
pop
pop
push
mov
lds
jo
outsl
jno
imul
ret
jmp
push
cwtl
out
sarl
mov
jp
lret
das
jg
sti
in
test
cmp
mov
fdivrl
imul
in
mov
xchg
xor
jecxz
push
sub
mov
jne
cmpsb
sbb
scas
mov
movsb
loop
scas
cmpsb
xor
mov
jl
in
pop
cmpsl
push
imulb
lret
insb
dec
mov
movsl
rclb
push
fwait
icebp
cmpsl
fldt
in
pop
ja
lret
cltd
inc
mov
lcall
mov
mul
pop
and
add
movsb
jge
mov
icebp
lret
fdiv
into
shll
cld
repnz
sti
add
sbb
icebp
pop
mov
ja
cld
repnz
pop
movsl
mov
fisubrl
jbe
mov
fld1
xchg
repz
adc
scas
mov
jns
mov
mov
fdivr
dec
jmp
push
ja
pop
subb
imul
rcrl
imul
std
aam
xor
enter
pop
mov
repnz
mov
stos
scas
inc
pusha
or
sub
mov
adc
xchg
mov
pop
and
sahf
sub
test
test
sbb
inc
adc
repnz
das
dec
rorb
pop
lahf
fsubs
test
push
push
mov
and
mov
mov
jle
in
fisubs
mov
lret
repnz
mov
pusha
cmpsl
addr16
xchg
jl
fs
das
mov
fsubrp
and
movsb
inc
fdivr
movb
imul
call
scas
mov
pop
pusha
xor
rolb
decl
adc
mov
lock
ja
or
xchg
sub
dec
fwait
mov
push
imul
negb
sub
rorl
xchg
sub
into
fwait
jg
add
inc
mov
or
cld
repnz
iret
test
push
xchg
mov
out
int3
or
outsl
test
pop
in
xor
cld
repnz
enter
and
mov
in
dec
enter
pop
aas
mov
or
fstps
sar
mov
cmp
pop
stc
in
jg
cmpsb
stc
push
dec
push
push
mov
mov
xchg
pop
jle
rcll
fiaddl
loopne
pop
push
ja
ds
jg
pop
or
das
xor
inc
pop
jns
xchg
imul
and
mov
jns
xchg
push
js
adcl
xchg
pop
sbb
push
pop
aad
mov
xor
pop
jnp
jl
inc
fwait
in
jle
xchg
lret
das
imul
imul
pop
incb
dec
xchg
insb
add
rcl
pop
jae
push
ficoms
clc
sarb
loop
jecxz
fisttpl
dec
cmpsb
cmp
test
rcrb
xchg
lret
add
push
es
into
dec
sub
push
lock
push
loope
sub
mov
pop
test
jb
xor
mov
sub
and
rcll
push
mov
std
jbe
scas
mov
push
cld
sti
enter
pop
test
iret
imul
mov
das
mov
dec
cmp
mov
add
jge
pop
and
or
mov
xor
mov
pusha
aas
jnp
lret
adc
adc
popf
xchg
lods
pop
filds
cld
sbb
call
lods
jmp
in
hlt
je
loop
sub
adc
xchg
jnp
push
push
xor
cmp
das
jg
fists
movsb
outsl
xor
cmpsb
mov
repnz
lcall
repnz
es
fs
cmp
mov
into
js
jo
in
lds
das
pop
dec
cmp
jge
sub
mov
xor
cmc
sub
xchg
jg
repnz
push
shl
push
popa
mov
fisttpl
pop
jle
in
cmp
cmp
mov
cmpsb
scas
movsb
int
jle
in
shlb
lock
sub
in
pop
aas
sub
pusha
lds
lret
lods
in
pop
jle
pop
gs
lahf
mov
cmp
jne
jnp
daa
js
mov
neg
cmp
int3
sub
addr16
loope
mov
sahf
lds
sbb
shll
jl
lock
ds
hlt
enter
xor
dec
out
push
or
stc
sti
xor
ret
lds
dec
sti
enter
std
xchg
cli
icebp
mov
xor
adc
fdivl
loop
hlt
js
add
xor
dec
out
add
repnz
mov
nop
jae
mov
mov
andb
mov
fwait
outsl
xchg
push
pop
jns
mov
imul
in
sub
idivl
dec
pop
dec
inc
ds
and
xchg
dec
inc
cmp
pop
imul
call
xchg
ljmp
scas
mov
enter
test
xor
mov
cmpsl
push
and
dec
shrb
sub
outsl
scas
loope
and
out
mov
mov
add
insl
jge
in
xor
rcr
fnstenv
dec
and
lret
movhps
mov
inc
out
sarb
stos
sub
sub
xchg
sub
mov
cwtl
stos
jmp
cmp
sbb
sbb
push
xchg
mov
mov
jb
mov
jb
cli
repnz
leave
das
pop
rol
mov
mov
mov
aaa
mov
mov
sti
leave
jecxz
jle
testl
cmp
dec
fld
aad
jl
in
clc
movsl
mov
jge
in
hlt
repnz
mov
or
pop
cltd
inc
sbb
roll
cld
aas
cmp
shrb
jns
mov
mov
pusha
mov
xchg
push
pop
push
mov
aad
push
ret
mov
shlb
inc
dec
dec
in
add
add
xchg
mov
repnz
inc
add
nop
xor
jmp
jg
cmp
or
mov
sahf
xorl
xchg
ror
test
in
ss
clc
jecxz
sub
mov
icebp
mov
pop
ds
inc
cmp
cmpsb
movb
mov
xchg
out
cmp
adc
scas
mov
inc
dec
fstl
js
scas
mov
sti
xor
inc
lea
gs
loopne
sub
std
xchg
popf
enter
push
shrb
lcall
adcl
mov
xor
mov
push
cwtl
adc
ret
test
pop
leave
and
push
repnz
mov
mov
mov
lret
mov
jno
fiaddl
fwait
incl
add
cltd
or
ret
stos
scas
mov
mov
or
inc
and
adc
mov
shrl
sbb
xor
in
repnz
xchg
shrb
test
adc
dec
xor
sub
sub
jnp
and
mov
push
lret
inc
sub
addr16
scas
mov
cld
push
sbb
in
aad
movb
dec
mov
add
push
mov
xor
repnz
fstpl
shll
lcall
ret
in
xlat
adc
test
arpl
fs
pop
jmp
dec
jno
lret
out
outsb
sub
jnp
lret
mov
jbe
iret
jo
in
jg
in
ret
stc
cmpsb
pop
mov
cmp
jle
cmpsb
hlt
sub
shrl
dec
mov
pop
jle
in
add
cmc
out
outsb
lcall
jle
in
and
or
mov
jbe
xchg
pop
sub
adc
jne
ret
mov
enter
xor
fidivl
pop
mov
leave
scas
fdivs
inc
xor
repnz
repnz
pop
mov
test
mov
aas
clc
xchg
lret
mov
pop
xchg
fadds
sub
fldcw
test
xchg
jmp
push
dec
scas
mov
push
push
data16
jnp
pusha
mov
sub
jmp
sub
imul
lret
jge
push
pop
jns
ret
outsl
push
cmp
push
mov
adc
jle
in
adc
mov
into
test
adc
in
pop
incb
mov
sbb
xchg
inc
cld
adc
xchg
pop
jle
sbb
lods
sub
inc
aas
mov
push
cmpsb
pop
add
push
mov
hlt
mov
dec
sub
aad
inc
int3
push
or
mov
pop
cld
repnz
mov
mov
mov
aad
enter
push
xor
and
jns
das
mov
jo
pop
fs
iret
fdivrs
push
jle
notl
add
data16
stc
in
pop
jg
sub
cmp
out
xchg
pop
jle
popf
add
mov
into
push
mov
cld
repnz
inc
xor
outsl
xchg
iret
add
hlt
enter
cltd
adc
clc
enter
aas
pop
out
cltd
in
push
fidivrs
add
addr16
cmpsb
pusha
add
inc
xor
out
testb
loopne
bound
mov
pop
jns
push
xchg
and
mov
aam
cmp
in
jg
sbb
push
mov
and
cmp
pop
jle
mov
ljmp
aam
js
mov
xchg
loope
lret
mov
inc
fpatan
mov
inc
scas
mov
cmp
js
cmp
cld
repnz
mov
push
scas
mov
addr16
test
dec
xchg
out
aam
cwtl
decb
cld
jge
in
and
add
mov
mov
push
and
sub
mov
jmp
lods
loope
jns
xchg
ja
jno
mov
ret
push
inc
or
dec
or
xchg
push
pop
sbb
ret
mov
sti
in
inc
pop
jns
add
push
dec
les
xchg
push
fiadds
fisttpl
jmp
repz
and
jns
popf
add
adc
jecxz
and
out
cmp
jmp
sub
or
outsb
lahf
xchg
cmp
imul
cmp
jb
and
cmp
mov
insb
mov
dec
and
sub
sub
call
xchg
pop
jns
xchg
pop
ficoml
sahf
orl
lods
jl
in
nop
xlat
add
inc
dec
cltd
test
aad
loope
ja
mov
int3
fimull
mov
mov
bound
xchg
pop
jle
lods
iret
cmp
inc
add
das
lcall
stc
shll
test
xor
mov
mov
in
ds
aaa
test
add
lret
das
pop
mov
mov
push
jl
lret
insl
cmc
or
xlat
sub
fstl
ss
enter
inc
xor
pop
icebp
fidivrl
lret
das
scas
clc
lods
movsb
xchg
aad
push
mov
das
ficoml
add
dec
xchg
push
in
jle
in
push
sub
jge
mov
sbb
loop
fbld
in
pop
sbb
push
mov
or
xor
adc
lret
pop
fs
inc
sub
sti
enter
and
mov
imul
into
repnz
das
mov
jmp
js
or
cmp
nop
push
insl
mov
mov
repnz
imul
mov
jno
aam
mov
mov
jge
jle
mov
repnz
das
andb
push
aad
mov
lods
cli
jge
dec
cwtl
or
loop
inc
xchg
pop
jle
test
hlt
arpl
jae
add
in
pushf
in
clc
or
add
scas
daa
pop
or
or
enter
xor
clc
cmp
jns
leave
cmp
iret
xlat
or
sbb
mov
out
outsl
lret
call
enter
andl
inc
or
push
mov
mov
inc
adc
jns
std
nop
or
add
add
jb
insb
add
inc
xor
adc
or
js
push
mov
pop
pop
jns
cmc
pusha
push
int
jns
or
aaa
dec
and
lret
inc
sub
sub
das
decl
sub
jp
cmpsb
in
cld
repnz
mov
push
lods
das
jbe
mov
adc
lock
or
jne
mov
es
cmc
xchg
scas
mov
xchg
sub
push
pop
jns
jge
ljmp
mov
jns
pop
push
inc
int
dec
sbb
mov
aam
jns
xchg
inc
popa
shrb
cmp
sub
call
jns
xchg
push
push
popf
push
sub
xlat
rcrl
xchg
push
pop
loopne
outsl
mov
xchg
jb
xchg
xchg
push
pop
jns
push
dec
jne
sbb
jb
mov
popf
fwait
into
cltd
jbe
ret
insb
xchg
mov
mov
mov
in
test
sub
xor
pushl
cltd
stc
notl
call
mov
add
xchg
pop
jle
out
pop
pop
push
ljmp
pop
jle
ret
idiv
mov
inc
scas
mov
mov
dec
cwtl
lock
fnstsw
dec
or
mov
mov
mov
mov
sub
adc
aaa
mov
cmpsl
andl
pop
dec
into
insl
push
mov
btc
add
test
repnz
cmp
or
arpl
adc
lret
mov
js
dec
or
fiaddl
sub
int
lods
pop
test
adc
push
leave
xor
dec
dec
inc
mov
jnp
or
cmc
xchg
add
daa
movupd
lret
fistps
mov
ret
mov
fbld
rclb
pusha
int3
jns
jmp
adc
bound
add
pop
push
lret
xor
pop
jns
or
mov
pop
lcall
and
lock
mov
cmpsb
and
repz
dec
add
int3
inc
mov
shr
jae
push
das
adcb
repnz
das
cmpsb
xor
fisttpll
jecxz
mov
jg
iret
cmpsl
fstl
orb
add
and
notl
call
test
es
shrl
stc
in
cwtl
hlt
mov
cs
xchg
xchg
inc
or
pop
mov
jp
iret
lods
inc
mov
pop
jne
leave
iret
cmp
mov
lds
mov
mov
call
das
mov
pop
dec
mov
sub
int
bound
jecxz
les
int
mov
lret
fnstenv
lods
add
aas
inc
jb
rorb
aas
fists
mov
ja
xchg
mov
xchg
mov
add
ret
xchg
pop
jle
pushf
ficompl
and
pop
out
xchg
pop
jle
ret
mov
adc
push
mov
xchg
mov
repnz
clc
enter
int3
dec
ljmp
lcall
mov
and
int
lcall
mov
and
inc
jns
push
repnz
repnz
das
pop
sbb
xor
popl
sahf
popf
lret
aas
xchg
repnz
das
mov
jmp
stos
cmpsl
pop
lret
das
mov
pop
xor
jno
iret
pop
test
mov
adc
mov
mov
mov
push
push
and
mov
xchg
sub
cld
repnz
das
xor
lods
mov
in
push
shlb
into
add
ret
sub
cs
push
sbb
xor
cmp
cltd
repz
mov
fcmovnbe
sbbb
test
pusha
xchg
out
xchg
sub
inc
add
add
lret
das
mov
sub
mov
xchg
pop
or
cld
repnz
mov
jg
nop
mov
outsl
lcall
inc
xchg
push
pop
jns
mov
xchg
sti
das
pop
and
jnp
in
sbb
mov
in
in
das
jmp
in
xlat
js
or
dec
push
xor
jl
cmp
dec
insl
pop
fstps
dec
jns
loop
or
stc
mov
xor
xchg
push
pop
cmp
xchg
push
and
pop
jns
loope
cmp
mov
pop
and
imul
inc
gs
cld
adc
int3
clc
dec
pop
pop
pop
loope
roll
int3
outsb
pop
jge
sbb
lea
out
mov
xchg
jmp
cmp
xchg
ds
dec
cld
repnz
das
mov
mulb
test
notl
jno
ljmp
lds
sbb
lret
mov
lret
fisttpl
jle
in
mov
sub
push
push
and
push
scas
jle
in
pop
xor
addr16
out
sbb
out
and
mov
cmpsb
sbb
pop
xor
popf
ret
jp
sub
jno
xchg
jle
in
pop
sbb
movsl
outsb
push
aaa
push
mov
cs
in
pop
jle
shl
fimuls
sbb
jle
inc
mov
sub
repz
js
push
pusha
jmp
fbld
pusha
sbbl
jecxz,pt
cmp
lret
sub
movsl
clc
lea
inc
rorb
mov
cltd
stos
mov
or
lret
inc
shll
in
sub
adc
jg
popa
xor
sub
and
mov
mov
sahf
jecxz
imul
cmp
les
loope
jne
in
xchg
call
mov
add
cli
fmulp
sub
xchg
pop
mov
and
mov
and
sarb
fcom
dec
lea
adc
mov
enter
lods
or
lods
inc
push
push
lahf
test
jbe
lods
xchg
push
fimuls
inc
in
and
inc
pop
jns
inc
dec
rolb
or
out
jae
jns
pushf
add
sbbl
in
push
pop
fs
pop
inc
mov
or
push
pop
jns
ja
cmc
loop
mov
jl
in
inc
es
lahf
popa
imul
aad
in
enter
mov
cmp
fcomi
in
push
ficomps
mov
adc
mov
xchg
lcall
repnz
popa
jmp
inc
add
test
xchg
push
cmp
dec
sub
lea
or
cli
mov
xor
mov
mov
dec
xor
ficompl
in
mov
push
cmp
and
scas
addr16
pop
xchg
xor
mov
inc
call
jnp
sbb
call
push
jae
pop
jle
in
aaa
jle
adcb
sbb
out
and
jg
and
addr16
stc
push
int3
repnz
jle
in
std
dec
jno
inc
or
lret
jns
stc
in
adc
ljmp
clc
fisttpl
in
mov
and
push
ljmp
js
icebp
xchg
xchg
or
paddb
lret
das
out
xchg
shl
pop
cmp
inc
repnz
das
mov
fistps
dec
negb
pop
cld
push
outsl
ja
add
test
mov
insb
pop
adc
shll
repz
jl
lret
das
mov
xchg
imul
stc
pop
je
lret
das
mov
and
or
jp
sub
cld
repnz
outsl
add
iret
xchg
clc
inc
clc
les
fidivrs
jmp
scas
jl
jne
iret
call
das
rcl
sub
sbb
call
int
test
popa
jae
scas
mov
daa
cmp
xor
xchg
pop
jle
mov
repnz
or
pop
pop
jle
in
sti
stc
cmp
inc
std
enter
stos
shl
jle
in
jmp
dec
jp
push
inc
movsb
xchg
orb
in
pop
dec
enter
aad
xchg
in
xchg
jle
xchg
in
loopne
je
mov
pop
jle
jecxz
jg
aam
pop
ror
cmc
xorb
pop
jmp
and
or
test
pop
jle
in
movsl
and
mov
sub
sub
les
jle
in
sub
jge
test
in
pop
ret
mov
sub
in
mov
dec
jle
mov
xchg
mov
in
mov
sbb
mov
mov
pop
pop
imul
jp
inc
movsl
stc
repnz
das
out
lods
pop
movsb
or
loope
inc
in
jg
mov
sbb
jg
inc
xor
stos
mov
pop
jle
dec
fdivr
pop
bnd
je
sub
mov
in
mov
and
lock
stc
in
dec
push
bound
stos
sbb
data16
cmpsl
xchg
stc
in
pop
mov
jmp
frstor
addl
test
dec
call
js
xor
sti
jns
mov
cs
jmp
stc
fdivr
lret
and
rclb
pop
inc
dec
jle
in
sbb
or
push
jmp
aad
arpl
xchg
jg
or
sbb
inc
push
pop
jns
lods
mov
cmpsl
jl
xchg
repnz
lret
fnstcw
sub
test
dec
push
dec
imul
popf
mov
pop
mov
push
cld
lret
das
lcall
sti
ja
fsubs
rolb
das
mov
out
mov
out
push
xor
sahf
jge
lret
andb
iret
mov
in
mov
sti
jle
test
lea
iret
pushf
imul
and
fs
inc
ret
shr
lret
lcall
lock
scas
mov
jno
sub
mov
jl
lea
push
enter
loopne
and
dec
out
mov
adc
mov
lret
das
stos
stos
movsb
jge
mov
pop
push
push
or
or
cmp
cmp
adc
push
imul
lea
int3
test
scas
pop
jns
push
fnsave
mov
repnz
jae
push
jns
cmp
sub
sub
fisubs
push
lahf
xchg
dec
mov
push
mov
repnz
in
idiv
aad
inc
sub
dec
or
ret
in
push
pop
push
scas
in
pushf
incb
lds
pop
jns
in
std
jo
prefetch
jl
repnz
and
add
mulb
push
mov
xor
lret
das
mov
push
cbtw
imul
aaa
je
fcmove
and
lock
xchg
aaa
or
mov
std
cmp
or
pop
pop
negb
cmpl
pushf
ss
pop
jns
sbb
mov
sti
pop
daa
mov
jmp
jns
xchg
push
adc
stos
inc
or
sahf
into
in
push
pop
and
push
jecxz
xchg
and
nop
std
stos
icebp
xchg
push
pop
jns
sub
in
ds
and
push
pop
jns
pop
mov
sbb
sub
xchg
xchg
push
leave
loope
mov
sbb
pop
sbb
lea
pop
push
pop
jle
lahf
mov
cmpsb
pop
jp
in
out
or
icebp
leave
xchg
or
mov
test
xor
das
ds
fwait
or
xor
mov
cld
repnz
push
mulps
sbb
inc
repz
and
enter
lcall
sub
cmp
mov
or
xchg
push
pop
hlt
call
lcall
ret
cmp
mov
jle
ret
sub
xchg
pop
mov
inc
icebp
test
and
movsl
and
stc
add
inc
jne
daa
adc
arpl
or
ljmp
mov
jns
xchg
push
push
mov
jbe
xor
xchg
shl
push
pop
loopne
fldenv
clc
fsin
pop
stos
in
adc
imul
enter
cmp
addl
jns
popf
hlt
cmp
or
and
adc
xor
nop
xchg
mov
dec
xchg
push
pop
jns
sub
adc
cmp
das
jg
enter
xlat
adc
lock
cmp
mov
arpl
xchg
mov
je
xor
sti
pop
cld
repnz
das
arpl
shlb
movsl
lahf
mov
add
aaa
in
aaa
ret
adc
xlat
or
xchg
rcll
jp
aad
push
adc
xlat
mov
mov
jmp
in
mov
sbb
loope
in
das
pop
mov
mov
mov
pop
jmp
jo
loopne
aas
lahf
scas
mov
stc
pop
sub
rolb
pop
repnz
xchg
sub
cltd
fdivs
pop
push
jmp
xchg
jg
cld
int3
push
mov
jge
jnp
pop
pusha
pop
leave
js
mov
pop
leave
and
mov
jnp
mov
sub
in
call
sbb
push
sub
ljmp
popa
lea
lret
or
inc
dec
pushf
std
mov
gs
sub
loopne
jge
movsl
jno
out
push
pop
stc
repnz
mov
ss
lahf
xor
in
popa
loop
loop
jge
int
andl
push
xchg
lds
jbe
xor
push
in
jg
mov
mov
and
cmpsl
jae
das
lcall
add
sti
cmp
shlb
jge
sub
xor
popf
lret
je
jle
in
std
add
and
lret
stc
in
pop
fnstcw
cmp
xchg
call
orb
mov
sbb
outsl
sub
ss
mov
iret
aam
repnz
lea
mov
or
or
lret
mov
faddl
cmpsl
in
mov
ja
mov
sbb
push
imulb
push
repnz
xor
jne
mov
xor
in
aaa
mov
xchg
out
lcall
insb
lcall
push
or
stc
in
mov
and
dec
icebp
stc
in
pop
arpl
inc
addr16
sti
sbb
test
and
mov
scas
and
es
pop
int
scas
adc
pop
mov
cld
and
arpl
cmp
push
popf
jns
mov
pushf
stos
fstpt
xor
mull
in
mov
cld
nop
mov
in
sub
add
movsb
imul
in
scas
mov
iret
gs
lahf
xor
lret
out
xchg
xchg
xchg
adc
jne
jle
and
mov
mov
aas
add
mov
scas
loope
mov
pop
jle
test
bnd
daa
dec
cmp
xchg
pop
jae
cvtps2pi
push
push
popf
cmp
imul
jle
lcall
adc
cld
repnz
sub
repz
cmp
lret
lock
insb
mov
xor
and
pop
movsl
mov
mov
les
mov
sub
scas
jmp
in
arpl
inc
xchg
or
stc
in
ljmp
jmp
pop
jne
repnz
das
decl
shlb
push
insb
add
pop
out
das
mov
mov
nop
xchg
or
sub
pusha
inc
and
mov
adc
mov
jg
mov
lock
xor
ficoml
cmpsl
mov
jnp
xchg
or
sub
add
cmp
sbb
mov
xor
inc
push
das
mov
xor
mov
mov
and
push
mov
sahf
pop
out
xchg
mov
rorb
arpl
cmp
xchg
mov
mov
sub
clc
fwait
rep
js
in
mov
imulb
in
push
imul
call
inc
push
pop
ljmp
or
inc
scas
mov
fsts
mov
ret
mov
mov
or
xor
adc
das
decl
imul
mov
dec
mov
inc
push
mov
mov
lret
test
data16
or
xor
or
lret
adc
add
lea
ss
bound
in
daa
add
test
into
xor
les
movsb
adc
push
push
dec
mov
in
mov
shl
nop
pop
sbb
or
pop
jns
out
js
mov
or
in
jg
add
lea
jne
cmp
loope
jl
push
jmp
movb
jns
push
pop
stos
adc
xor
and
xchg
sub
inc
or
scas
jge
inc
leave
cwtl
sarb
loope
das
mov
in
jg
or
lock
jle
neg
test
jmp
std
mov
lea
repnz
test
push
inc
push
repnz
das
decl
push
jne
leave
nop
fstpl
cmp
mov
jae
dec
add
stc
in
arpl
repnz
add
in
sbb
shlb
pop
jle
in
mov
mov
lret
stc
in
pop
dec
fnstcw
adc
sbb
xchg
pop
jle
cmp
jbe
push
ret
and
mov
test
imul
jge
out
pop
xchg
nop
insl
lds
enter
xchg
jle
push
sub
and
cld
repnz
sub
jmp
bound
sar
enter
in
das
fistpl
adc
pushf
mov
xchg
pop
inc
sbb
inc
insb
mov
sbb
mov
pop
lds
js
sbb
flds
jge
lahf
in
lock
into
movsl
gs
movsl
fstl
cmpsb
xchg
xchg
jg
jb
mov
xor
inc
and
stc
in
outsb
stos
jmp
in
mov
shl
frstor
and
in
push
pop
lea
lret
icebp
lcall
pop
jle
ja
test
mov
mov
sti
enter
push
loopne
jecxz
fidivl
in
das
mov
pop
cwtl
pop
in
add
stc
push
xchg
jge
sub
jns
adcb
addr16
sub
dec
xor
pop
insl
jmp
stc
notl
repz
sub
lahf
scas
stc
in
pop
jno
sub
adc
lods
lods
inc
jle
and
das
flds
cmp
in
cld
cmpsl
push
jo
inc
inc
pop
xlat
enter
jle
pop
ds
dec
daa
sub
pop
sub
dec
outsl
js
test
jbe
jns
lods
lea
clc
cmpsl
in
push
pop
fwait
dec
mov
imul
cmp
lods
inc
repz
adc
push
fdivrp
xchg
dec
xor
loopne
insl
mov
push
pop
jns
int
sahf
jbe
fbld
jg
xor
jne
imul
mov
pop
stc
in
inc
cmpsb
xchg
or
add
sub
jmp
xchg
pop
jle
sub
mov
cmp
jle
pop
jle
or
xor
mov
fwait
pop
jle
in
xchg
adc
adc
outsb
push
pop
mov
stc
in
test
repz
mov
adc
jnp
xchg
pop
inc
rcr
mov
or
push
cmp
jmp
inc
leave
inc
aas
pop
push
xlat
jmp
out
test
pop
and
cmc
mov
repnz
repz
or
cmp
inc
idivl
aaa
pop
sbb
in
jl
lret
repnz
das
in
jne
cwtl
stos
dec
movsl
xlat
pop
push
repnz
das
mov
pop
popa
test
cwtl
ret
lret
das
mov
mov
arpl
inc
das
mov
aaa
or
ret
imul
roll
cmp
in
push
fisubrs
jno
push
inc
xor
test
inc
inc
pop
jns
fs
inc
enter
lret
mov
jmp
push
jmp
mov
fnsave
in
xchg
rclb
mov
les
push
movsb
mov
mov
mov
loope
mov
jno
mov
lret
add
mov
add
jnp
bound
jmp
lret
das
data16
ficoml
push
push
cmpsl
mov
ds
lret
mov
and
lock
sub
adc
mov
ret
mov
repnz
add
xchg
push
ficoms
xchg
lock
outsl
jbe
lret
push
pop
jns
pop
mov
mov
repnz
push
push
pop
jns
cmp
dec
int3
scas
ret
adc
xor
ds
stc
test
sbb
out
inc
iret
testl
mov
pop
sbb
jl
jo
xorl
popa
inc
jb
adc
cld
repnz
pop
sbb
jo
add
aaa
xor
enter
add
arpl
addr16
lret
mov
sbb
sbb
jnp
scas
mov
xchg
xchg
dec
cld
or
test
sbb
mov
lret
sub
lcall
or
lret
das
decl
push
fcomps
mov
add
bnd
and
dec
scas
mov
insl
jge
adc
pop
incb
lret
or
mov
push
sbb
sbb
push
cmpsl
jb
sub
scas
mov
orl
jp
and
insb
mov
lret
sub
repz
inc
stc
in
jge,pt
xchg
push
xchg
push
leave
and
insb
inc
in
pop
jle
xchg
sub
arpl
mov
mov
dec
int
mov
fsub
xchg
push
pop
and
mov
rcll
jmp
mov
xor
lock
mov
push
pop
jns
pop
repz
into
lds
pop
jns
xchg
mov
je
push
fisttps
jno
addr16
push
aad
dec
jno
int
add
or
xor
insl
mov
push
in
cld
mov
into
les
sbb
iret
lret
das
mov
push
nop
push
frstor
inc
dec
jae
cld
repnz
sub
pushf
cld
fimuls
push
lock
das
adc
adc
xchg
and
mov
das
mov
inc
add
inc
sub
mov
imul
jne
repnz
adc
pop
loopne
jmp
add
das
lcall
mov
addr16
vandps
loope
mov
ret
test
cmp
cmpl
cld
repnz
das
aas
adc
mov
mov
mov
repnz
das
mov
fistl
std
add
out
mov
das
mov
aas
inc
movsb
rcrb
adc
cmp
lahf
pop
testb
repnz
fwait
add
repnz
xorl
or
sbb
inc
mov
dec
fimuls
loope
orl
stos
fistps
stc
in
cwtl
inc
outsb
push
sub
or
test
jmp
cltd
inc
push
pop
xor
push
push
ret
jg
imul
xor
dec
and
stos
cli
lcall
in
inc
xchg
scas
sarl
int
test
sub
jns
dec
pop
push
mov
inc
test
stc
in
and
in
lods
sub
pop
jle
rcrb
sbb
mov
and
stc
enter
andl
pop
dec
in
mov
pop
leave
and
leave
data16
repnz
das
test
mov
pushf
repnz
das
mov
pop
inc
mov
xchg
das
mov
push
push
fs
mov
jae
push
bound
loopne
sub
or
dec
insb
inc
jge
loop
mov
add
test
das
ret
inc
and
push
pop
sub
sahf
fbld
or
in
testl
int3
sub
ret
repnz
pop
sbb
pop
xorl
push
dec
adc
mov
sbb
inc
lret
cmpsb
add
pop
add
jmp
or
shrb
mov
sub
pusha
mov
cmp
daa
pusha
stc
in
daa
jg
loope
xchg
mov
pop
shrb
shrb
rorb
jmp
cwtl
xchg
xchg
pop
jle
std
mov
pop
dec
jno
js
mov
pusha
inc
jle
in
push
adc
out
xchg
cmp
clc
popf
icebp
xchg
lds
pushf
and
push
aaa
notb
into
mov
xchg
jg
cmp
js
or
cmp
add
cld
sti
enter
sbb
fiadds
jnp
aad
loopne
lahf
cld
repnz
das
stc
repz
inc
div
inc
push
in
jle
xchg
das
mov
icebp
jmp
xchg
daa
sub
adc
mov
pop
call
cmpsb
insb
lcall
mov
js
shrl
int
and
cld
repnz
das
xor
pop
in
pop
cmp
cmp
outsb
mov
imull
mov
dec
xchg
push
push
enter
xchg
xchg
aaa
adc
filds
fildl
push
pop
jns
into
adc
pop
int
nop
fwait
xor
adc
push
mov
in
jg
or
or
xchg
in
push
xchg
sub
xor
enter
jne
xlat
in
push
pop
loopne
bound
pop
jg
xchg
int
iret
mov
add
mov
push
mov
addb
gs
xor
and
cmp
aas
ljmp
jbe
pop
fisubrs
je
scas
inc
jl
in
xor
fcmovne
xor
mov
sbb
pop
mov
dec
sbb
pop
test
das
mov
inc
lods
fldcw
mov
pop
fistl
mov
sti
mov
lret
js
mov
sbb
bndldx
xor
stos
into
mov
sti
loope
repnz
addr16
aas
fiaddl
fiadds
mov
mov
outsb
adc
or
lock
xor
dec
pop
stc
xchg
ljmp
jle
stc
jnp
lret
jnp
sbb
dec
ja
push
mov
push
jmp
push
mov
pop
mov
add
push
push
add
push
scas
mov
fisubrl
out
sub
jmp
mov
imul
inc
test
rolb
mov
mov
or
lret
lahf
scas
mov
sbb
mov
sarl
aam
adc
mov
jns
test
ljmp
fimuls
fmull
inc
incl
mov
xchg
pop
lock
inc
out
sbb
cmp
xor
xchg
pop
jle
pop
pushf
jp
mov
addr16
in
sti
enter
lcall
loope
test
negb
fwait
aam
loopne
in
rol
das
mov
inc
jae
xchg
adc
xchg
add
lea
mov
cmp
and
dec
or
enter
xor
frstor
or
mov
insl
xchg
jno
sbb
xchg
dec
ror
or
in
pop
adc
and
scas
xor
jmp
stc
jb
inc
dec
mov
mov
add
sbb
test
mov
add
dec
into
dec
stos
xchg
enter
out
test
jp
das
icebp
push
dec
mov
jle
sti
cmp
push
pop
jns
or
jle
cmpl
jne
pop
jns
xchg
es
add
lods
adc
cmp
enter
jmp
pop
add
in
sbb
jg
xor
push
mov
sahf
jnp
xlat
jl
jg
ficomps
sahf
xchg
add
mov
jl
in
cmp
sbb
push
pop
sarb
xor
lret
mov
cmp
jns
sarb
xchg
pop
cmp
add
push
pop
pop
jle
in
mov
or
pop
es
add
mov
out
push
stc
in
ret
sti
or
inc
repnz
das
call
sbb
fistpll
sub
mov
pop
jne
xor
scas
mov
mov
and
mov
dec
lods
es
mov
out
dec
xor
enter
lret
test
scas
je
in
inc
adc
xor
rcrb
imull
dec
subb
stc
sub
enter
addr16
inc
lock
xchg
push
pop
jns
adc
xorl
or
data16
cmc
divb
xchg
push
pop
jns
andb
jmp
jb
xor
push
pop
jns
jae
cmp
sbb
notl
and
loopne
xor
in
pop
jle
cmc
cs
cltd
sbb
sar
inc
mov
stc
hlt
adc
mov
stos
sub
cltd
sahf
pop
aas
mov
fwait
pop
ror
dec
leave
jge
or
ds
add
nop
mov
popa
in
xchg
imull
jne
sbb
mov
adc
and
repnz
mov
in
stc
dec
sub
xor
ficoms
mov
in
jo
je
nop
movsl
mov
sub
lret
das
mov
mov
clc
shl
inc
mov
lds
pop
sbb
in
cmp
and
dec
inc
in
movsb
push
stc
in
enter
outsl
cwtl
pop
dec
clc
insl
push
xchg
pop
adc
insb
sbb
add
xchg
push
ficoms
ds
out
pusha
pop
jl
in
ror
mov
mov
adc
jb
nop
notb
cmpsl
mov
rorl
sbbl
adc
imul
pop
stc
in
cltd
ret
xchg
lods
xlat
dec
mov
push
or
push
and
test
sub
in
add
inc
or
mov
lret
rcr
cmp
in
mov
fdivrs
lret
sub
mov
push
insl
fs
mov
mov
or
into
stos
push
xlat
adc
mov
cmpsb
xor
jno
test
adc
out
fwait
jnp
cmpsb
pop
pop
jns
mov
jp
arpl
lret
mov
lahf
and
stc
int
xchg
das
mov
adc
rcr
dec
jge
ficomps
js
adcl
repnz
insl
sub
xchg
push
push
xorl
jnp
xlat
in
push
pop
jb
andb
vpunpckhwd
cli
mov
repz
int3
mov
xchg
sbb
jle
cld
jnp
enter
shlb
pop
add
sbb
in
jg
dec
jae
xor
push
fsubrs
stc
fldl
push
dec
adc
pop
push
push
daa
flds
add
push
jge
jbe
cmp
dec
xchg
xchg
testl
jo
aas
jnp
addl
cmp
adc
hlt
xchg
xchg
sub
cmp
xor
test
les
pop
popf
scas
dec
jle
in
mov
mov
out
pop
and
pop
in
mov
pop
insl
mov
add
xchg
adc
mov
fnstsw
and
out
mov
lret
das
ficoml
push
cli
dec
js
pop
test
mov
sbb
push
and
mov
mov
add
cmp
adc
push
scas
mov
ret
dec
sub
mov
std
push
mov
je
cmp
xchg
xor
dec
ret
fsubrp
jne
inc
out
scas
loopne
sti
mov
mov
enter
push
dec
mov
push
adc
popa
nop
adc
faddp
das
out
out
int
ret
mov
sub
adc
shlb
loope
fs
inc
mov
xchg
outsb
push
movsl
mov
xchg
test
mov
lret
mov
imull
push
fdivrs
xor
hlt
xchg
push
stc
notl
movb
cmp
adc
repnz
das
sti
stos
aas
js
push
aas
inc
icebp
lock
daa
lret
das
mov
fcoml
mov
xchg
dec
inc
mov
clc
mov
dec
movsb
push
pop
jecxz
push
or
into
push
lds
push
into
rorb
les
xchg
pop
mov
sar
cmp
lret
das
mov
cld
mov
xchg
int
daa
jp
mov
or
lahf
popa
xchg
fsubp
xchg
divl
dec
xchg
nop
dec
pop
jns
add
js
xchg
test
adc
jp
lret
mov
mov
movsl
dec
out
cmpl
lods
mov
pop
inc
inc
cld
repnz
and
jb
mov
push
jle
adc
lret
das
mov
dec
icebp
jne
out
mov
dec
push
vpaddb
mov
jnp
jp
out
dec
xor
rolb
adc
movsb
repnz
addr16
jb
push
and
and
sub
shll
out
cld
add
xchg
pop
jecxz
push
mov
out
xchg
adc
in
sub
add
pop
inc
lods
rcll
dec
imul
insb
lcall
stc
enter
sbb
hlt
bndstx
lods
xchg
rcrb
fbld
inc
dec
outsl
mov
dec
outsb
pop
and
stc
aaa
shll
enter
add
outsb
lcall
adc
dec
test
and
dec
xchg
mov
xchg
ficoms
sarl
pop
sarl
xchg
test
sbb
push
in
dec
jno
repnz
movl
sbb
pop
int3
icebp
fdivrs
adc
jnp
loopne
xchg
cmpsl
enter
add
adc
aad
shr
push
clc
push
test
xlat
fbstp
jns
xchg
stos
cmp
jg
push
jne
xchg
pop
imul
push
xor
sub
pop
lret
pop
jle
or
push
ret
pop
adc
repnz
fwait
xchg
pop
adc
push
andl
jg
pop
xor
aam
les
stc
in
aas
ret
into
sarl
fwait
cmp
in
pop
jle
mov
lea
xor
out
inc
adc
stc
aad
cltd
mov
push
jb
pop
mov
jno
ret
lods
insb
add
test
fistpll
in
sbb
mov
popa
pop
push
sahf
aam
pop
fwait
sbb
sbb
repnz
outsl
push
stos
mov
dec
stc
mov
scas
mov
jp
insb
das
mov
int3
push
cmp
lret
insb
jae
cmc
loope
rcrl
mov
dec
arpl
imul
cld
repnz
insb
push
repz
scas
mov
stc
add
lret
faddp
cmp
mov
lock
hlt
xchg
sbb
jns
scas
jbe
loope
popa
movd
jge
in
inc
js
jg
jecxz
cld
jg
daa
enter
mov
push
je
and
cmp
xlat
mov
adc
daa
sbb
sbb
hlt
iret
jns
or
jns
or
mov
in
push
pop
push
cld
xchg
xchg
push
outsb
sub
xchg
push
pop
jns
addr16
jae
daa
pop
insb
mov
pop
aam
mov
mov
sub
push
stc
dec
sar
jb
xchg
mov
and
outsb
dec
push
icebp
adc
adc
ds
rclb
imul
enter
sti
outsb
shrl
sub
call
adc
popl
mov
fldl2e
and
pop
aam
or
inc
adc
ljmp
xchg
mov
lret
xchg
testl
push
inc
fdiv
and
stos
jl
add
imul
or
xchg
jl
imull
jmp
mov
in
orb
sahf
mov
pop
inc
xor
xor
dec
xchg
push
pop
jns
test
sbb
pushw
arpl
in
lds
stos
mov
dec
dec
add
xchg
cmpsl
icebp
xchg
xchg
and
mov
inc
cs
mov
test
push
pop
loop
jae
pop
jmp
adc
inc
mov
lret
sub
jns
inc
xchg
mov
or
cmp
xchg
xlat
or
clc
cltd
push
sbb
adc
cld
pop
push
or
mov
pop
xchg
into
ds
cltd
mov
cmpsl
in
addr16
lods
jge
xor
cld
repnz
das
jge
mulb
mov
sub
xchg
das
mov
cmp
or
js
push
bound
cmpsl
pop
or
add
inc
inc
sub
andb
repnz
push
jo
cmc
in
and
jno
adc
mov
push
mov
push
mov
lcall
mov
sbb
icebp
addr16
add
mov
xchg
xchg
push
jmp
mov
mov
out
dec
testb
arpl
xchg
mov
sbb
ljmp
cmpsb
sbb
das
mov
popf
test
imul
cmp
mov
les
xor
scas
mov
rep
pop
xor
shrb
pop
cs
add
cmc
fistl
std
jl
xchg
das
lcall
mov
divl
popf
cltd
cmp
adc
cltd
sbb
xchg
sub
or
in
pop
push
and
mov
or
loop,pt
push
lds
fisttps
je
insl
dec
sti
jae
pop
or
mov
jbe
pushf
outsb
test
stc
notl
cld
aas
sti
jg
in
out
movsb
cs
test
xchg
lock
bound
xor
stc
in
pop
aad
andb
cmp
pop
cmp
lcall
repnz
insl
ja
push
test
fs
pop
jns
sub
sbb
sub
jns
xchg
in
sub
scas
jp
ret
mov
and
in
sub
pop
mov
mov
xchg
push
pop
test
dec
xor
gs
jle
notl
bound
mov
ss
xchg
push
inc
xchg
pop
rcrl
dec
ficompl
and
notl
js
test
push
xchg
pop
jle
mov
inc
call
in
mov
jne
fldcw
sub
sarb
mov
call
adc
push
popf
mov
jo
adc
lret
jge
adc
adc
and
xchg
in
pop
push
inc
pop
jns
popf
push
mulb
test
andb
repnz
inc
leave
mov
dec
jge
sub
jp
movntps
je
outsb
cld
sti
enter
ret
sbb
jmp
iret
stc
in
jg
add
mov
fmuls
adc
aad
test
adc
hlt
sbb
push
pop
xor
dec
sbbb
stc
sti
enter
cmp
shlb
lret
adc
mov
scas
mov
jl
testl
sub
in
push
shl
jns
and
sti
pop
cmp
sbb
xor
pop
mov
leave
lods
or
movsb
dec
repnz
mov
aam
mov
mov
fistpl
cmpsl
ds
mov
lods
push
outsl
insb
xchg
ja
add
add
sbb
pop
jns
xchg
movsb
mov
or
push
adc
in
jg
jge
nop
and
mov
dec
push
jl
call
ljmp
fbstp
xor
stc
lds
inc
cmp
xor
xchg
pop
jle
cmp
ljmp
add
xchg
pop
jle
dec
adc
inc
sti
aaa
in
aad
ds
lea
jbe
mov
and
mov
loopne
dec
and
jne
pop
jns
mov
into
ret
fimull
mov
in
dec
mov
adc
pop
and
in
push
fiaddl
adc
push
push
fwait
out
shlb
and
or
into
sbb
punpcklwd
movsb
das
mov
lret
dec
cwtl
nop
jbe
rcrl
inc
fisubs
rcrl
add
out
jge
cs
mov
mov
dec
pop
and
or
and
adc
outsl
pop
cmp
push
inc
and
insb
cltd
mov
call
cmp
jg
cld
sub
fs
insb
xchg
push
ret
and
sarl
and
pusha
dec
cmpsl
mov
in
push
pop
hlt
mov
jge
mov
rolb
push
inc
pop
pop
jns
lret
in
cmp
and
xor
mov
jmp
push
fldl
pop
cmp
jl
popa
push
pop
ja
enter
fnstcw
in
cmpsb
invd
cwtl
cmc
dec
sub
or
mov
dec
inc
scas
mov
dec
mov
sub
lods
enter
push
pop
mov
mov
in
clc
cli
jmp
fcomi
dec
cmpsb
jns
cmp
dec
sbb
in
push
pop
cltd
sub
lods
pop
push
xor
fmull
xor
scas
cld
jb
dec
icebp
pop
sbb
adc
and
call
stos
stc
iret
jp
add
cmp
jle
in
and
out
pop
jns
mov
stc
in
pop
fdivl
cli
inc
adcl
jle
xchg
mov
cltd
loop
dec
push
jb
rcll
ret
aam
shl
inc
mov
rcrb
in
push
stc
pop
mov
mov
pusha
jns
stc
mul
xchg
and
pop
adc
xchg
pop
jle
call
fstpt
inc
ljmp
inc
testl
pop
push
pop
repnz
std
stos
adc
dec
jbe
clc
inc
push
lahf
popa
pop
mov
in
push
es
jp
xchg
jl
ror
jnp
dec
add
test
xchg
mov
xchg
xor
sti
jl
in
fcoms
imul
inc
pop
das
push
test
lahf
or
mov
mov
std
jmp
icebp
jecxz
insb
stc
test
xchg
add
sbb
dec
fildl
rol
fs
xchg
sbb
sub
xchg
cmp
cmc
sub
lds
repnz
das
decl
push
jns
push
pop
int3
xor
mov
jmp
pop
push
mov
mov
add
add
lahf
pop
pop
jno
andb
push
mov
sbb
std
mov
adc
jge
lea
pop
pop
cltd
out
mov
repz
or
mov
and
adc
xchg
mov
pusha
or
xchg
push
xchg
cmp
xor
scas
sub
pushf
les
inc
pop
pop
jle
in
mov
shl
lcall
stc
in
sub
sub
rolb
mov
lock
insb
ds
pop
pop
test
aad
ret
scas
xor
out
ret
jecxz
out
or
scas
mov
pushl
dec
mov
test
xchg
sahf
add
aad
cmp
mov
repz
imul
pop
das
mov
movsl
sub
add
dec
shll
cld
repnz
rcll
jno
xchg
jnp
stc
cltd
inc
lods
stc
in
jg
mov
out
or
push
mov
jle
xor
or
or
mov
repnz
mov
pop
jno
pop
jmp
push
xor
dec
mov
or
pop
jns
pop
ret
inc
push
fnstsw
inc
ret
cmp
lods
mov
in
pop
pop
mov
dec
push
stos
lea
and
ficompl
pop
jns
cmpb
fildll
xchg
in
repnz
aad
ljmp
lret
mov
jge
mov
cmp
scas
mov
jo
rcrl
ss
jne
mov
inc
sub
lcall
sbb
ja
outsl
icebp
iret
les
sbb
xchg
xor
lret
add
jbe
unpckhps
cmpsw
cltd
sbb
sub
push
jge
mov
out
subb
mov
fwait
cmp
push
out
adc
mov
sbb
rorb
dec
xlat
mov
or
and
fs
cs
sub
jo
xorb
jl
das
mov
sub
sub
add
lahf
xchg
repz
mov
gs
icebp
xchg
pop
push
das
sub
fnstenv
movsl
jnp
mov
pop
jns
cmpsl
pop
std
push
push
rcrb
enter
jns
xchg
or
dec
sub
fs
dec
jns
xchg
push
and
lea
or
in
fs
push
pop
cmp
xchg
imul
sub
pop
sbb
mov
cmp
in
pop
arpl
in
imul
jge
lea
sub
sub
loop
inc
movsl
sbb
sub
inc
pusha
mov
sbb
lods
mov
out
fcoml
arpl
pop
sub
sub
lds
mov
fidivrl
jge
sub
dec
insb
and
adc
repnz
mov
mov
out
xchg
jns
sbb
scas
mov
fidivs
jecxz
dec
inc
sbb
sub
sub
mov
mov
repnz
mov
pop
lret
sti
lret
mov
push
adc
sub
mov
fs
mul
mov
mov
xlat
push
pop
xchg
push
imul
push
sub
movsb
int3
mov
pusha
stos
lret
stc
in
pop
push
out
rolb
push
outsl
mov
in
pop
jle
pop
inc
nop
fdiv
cmp
dec
outsb
lret
mov
aas
ljmp
xchg
mov
and
inc
fcompl
jmp
jno
xor
adc
into
es
xor
jecxz
dec
or
sub
pop
mov
sub
sbb
mul
jmp
push
jmp
cs
aam
pop
cmp
dec
push
mov
sti
loope
xchg
cmp
xchg
cmp
imul
arpl
or
stc
call
lods
mov
not
stc
in
pop
mov
xchg
adc
jns
js
int
cmpl
enter
adc
stos
fidivrs
sbb
in
leave
je
push
add
sbb
or
cld
jle
push
idivl
stc
in
imul
push
jg
clc
enter
push
ljmp
lahf
int
in
aas
addr16
mov
mov
in
pop
jle
mov
arpl
jns
lods
cmc
les
jmp
xor
ja
xchg
push
pop
xor
push
inc
inc
flds
jg
pop
jns
mov
mov
xchg
and
aam
stc
in
aaa
mov
sbb
stos
push
mov
stc
in
pop
sbbb
push
cmp
pop
lods
inc
dec
mov
aaa
out
repz
push
jge
nop
inc
and
mov
inc
xchg
addl
out
test
repnz
push
jne
pop
shrb
inc
jnp
nop
push
ja
push
mov
ffree
popf
ja
in
jns
xchg
orb
pop
add
rcll
push
mov
sub
mov
adc
cmp
inc
pushf
sbb
mov
xchg
mov
add
call
mov
in
test
test
cmp
fbld
xchg
dec
mov
and
dec
outsb
ss
pop
jle
ret
pop
add
test
xchg
movsb
lea
cmpsb
mov
xchg
bound
lret
aad
jno
lea
adc
pusha
lret
mov
std
inc
jo
aaa
stos
cli
sub
add
cmp
xor
repnz
xlat
or
adc
loop
mov
and
scas
mov
in
cmp
aaa
push
pop
sbb
call
out
addb
int3
inc
lods
mov
notl
mov
jo
inc
stos
push
ret
pop
mov
iret
lea
sub
jne
in
lea
xor
ds
lret
mov
cmp
ficoml
xchg
test
sbb
in
mov
out
out
xchg
outsl
leave
insb
jle
in
xchg
pop
ficoml
repnz
inc
inc
cmp
dec
stc
in
pop
sbb
test
and
push
or
push
xlat
loopne
pop
orb
xchg
pop
jle
dec
jg
cmp
adc
fs
pop
jns
jmp
lock
js
jns
xchg
push
out
ret
mov
fists
out
dec
sbb
imull
lcall
in
xchg
lods
and
inc
imul
out
sub
add
adc
leave
fidivrl
es
or
iret
dec
jp
test
xchg
aaa
adc
add
pop
lret
adc
repnz
xchg
push
dec
sub
push
or
enter
pop
jp
addb
pop
xchg
sub
dec
clc
retw
test
cmp
jmp
loopne
jle
outsl
fmull
pop
shlb
inc
test
adc
shl
mov
mov
ja
sahf
mov
sub
les
cmpb
lock
mov
mov
jmp
mov
inc
hlt
movsl
mov
shrl
fiaddl
repnz
imul
mov
xchg
das
scas
mov
lret
dec
pop
jecxz
xor
fmulp
aam
and
pop
xchg
movsb
mov
popa
ss
jns
xchg
in
arpl
pop
popf
mov
xchg
xchg
push
xchg
xor
stos
add
lret
repnz
aas
inc
add
push
pop
xor
sub
inc
lret
test
loope
jo
push
sub
fisttpl
dec
movsl
adc
repnz
sti
adc
roll
lret
das
jle
dec
or
sahf
jnp
fmul
inc
mov
jecxz
xchg
add
outsl
jle
in
movsl
mov
sub
push
fwait
imul
xchg
pop
push
mov
ret
scas
mov
cwtl
sub
loopne
cmc
jnp
lret
aaa
push
repz
test
sub
sub
int3
pop
icebp
push
inc
sub
lret
mov
or
mov
lret
adc
nop
call
cmp
lahf
cmp
mov
xchg
mov
mov
lret
adc
pop
ret
in
mov
inc
in
idivb
cmp
stc
fiaddl
xor
ja
jmp
xchg
push
in
pop
jle
jno
push
pop
push
push
stc
ljmp
push
lret
mov
mov
sbb
and
popf
scas
sub
sti
jge
roll
repnz
inc
pop
ds
fstpt
ja
pop
add
and
jns
xor
or
push
hlt
jbe
stc
in
sahf
in
dec
sbbb
push
jne
cld
push
xchg
pop
push
jecxz
pop
cmp
out
cmp
rclb
lret
das
lcall
xor
cmc
test
lcall
jnp
mov
xchg
popf
sbb
in
and
and
mov
into
fsts
mov
loopne
pop
aad
inc
lock
in
pop
fiadds
or
arpl
xchg
pop
jns
xchg
inc
mov
imul
cs
mov
sub
aad
outsb
fsub
xchg
push
pop
pop
cmpsb
xchg
movsb
ljmp
loope
sbb
sbb
pop
sub
cltd
mov
pop
out
sub
add
mov
cmp
arpl
and
adc
fs
cmc
mov
xchg
push
pop
jns
adc
push
sti
aam
cld
fdivr
mov
jb
xchg
std
fs
mov
mov
or
or
mov
inc
mov
rorl
lock
jle
in
lods
loope
ss
dec
fisubrs
mov
rcrl
jmp
faddp
loopne
mov
xchg
push
pop
jns
jp
mov
ret
pop
xchg
sub
in
sub
in
hlt
enter
call
inc
loop
jmp
inc
push
pop
jns
adc
mov
jns
pop
jge
stc
in
cld
out
aam
lahf
inc
adc
jbe
mov
in
pop
mov
jp
mov
loope
aam
and
addr16
ror
add
and
lret
mov
sti
mov
jp
push
das
mov
repnz
mov
push
jbe
lret
das
mov
pop
cwtl
sbbb
clc
idivl
daa
les
jmp
mov
mov
cmp
cld
repnz
das
outsb
lret
xchg
rcrb
mov
and
mov
push
dec
enter
lds
imul
cmp
stc
in
jo
xor
push
push
pushf
mov
push
jle
in
mov
sub
fnstenv
movb
in
pop
mov
cmpsl
enter
mov
lret
das
mov
repz
js
ja
loope
jg
stc
repnz
mov
dec
jb
insb
jmp
stc
in
lret
add
mov
cmp
add
popf
test
daa
std
sub
push
add
push
mov
and
cmp
push
fwait
mov
xlat
pusha
leave
lret
lods
inc
xor
fdivrl
aad
jp
loop
fcomi
xlat
hlt
lods
in
push
fisubrs
outsl
rcr
movsb
or
aad
je
jle
push
pop
jns
or
sbb
or
rolb
lret
and
mov
xchg
push
pop
jns
sbb
dec
stc
xchg
addr16
gs
notb
jns
jae
call
jbe
cmpsl
cltd
lea
jl
in
sub
xor
aam
add
sbb
mov
data16
inc
sbb
lret
das
pushl
sbb
mov
mov
in
shrl
dec
jns,pt
xchg
mov
leave
out
inc
dec
iret
dec
stos
jno
int3
imul
cmp
lds
call
mov
xchg
or
scas
int
outsl
test
out
jmp
in
mov
loop
push
lds
pushf
icebp
xchg
lret
sub
pop
dec
pop
pop
stc
test
sbb
xor
sub
jecxz
pop
jle
adc
pop
adc
inc
pop
jns
add
xchg
jns
cmp
stc
in
jg
push
pop
push
pop
ds
or
in
pop
jle
mov
test
inc
icebp
lea
fwait
sub
ja
ds
in
mov
xchg
pop
jle
mov
stos
leave
ljmp
adc
xor
ss
fldt
mov
xchg
jg
xchg
mov
loop
outsl
and
jle
in
inc
add
push
addr16
mov
jns
ljmp
jno
cmp
aam
push
pop
test
sub
test
repnz
sbb
outsl
sarb
ja
mov
mov
icebp
cmp
lret
xor
sub
mov
push
fiadds
test
dec
jo
rcrb
pop
jns
or
aad
xchg
mov
jmp
xchg
repnz
push
lea
cmp
inc
imul
shl
lret
adcl
mov
jp
and
scas
mov
data16
cmp
jo
popf
or
xor
dec
aaa
std
inc
pop
mov
pop
jns
xchg
dec
cltd
inc
outsl
js
rorb
stc
notl
in
stc
jmp
enter
xchg
jmp
in
lret
jne
push
faddp
cli
and
dec
or
icebp
enter
sbb
inc
dec
push
adc
sti
iret
cli
pop
jnp
fsts
fadd
popl
movsl
mov
xchg
and
push
inc
cld
aas
jns
jge
in
pushf
gs
js
enter
add
pushf
rclb
mov
jl
adc
lahf
sbbb
push
das
mov
dec
jle
pop
adc
fdivr
inc
lcall
cld
stos
push
add
xor
ret
lret
das
popa
mov
cmp
or
adc
lret
das
mov
dec
lods
pushf
int
scas
inc
lret
das
mov
ret
js
lods
sub
mov
pop
cmp
mov
lods
or
pop
hlt
nop
pop
ds
xorb
incl
mov
xor
ja
and
outsl
jns
jmp
in
out
sti
pop
xor
xchg
push
pop
divb
repz
add
xchg
push
pop
jns
mov
pushf
adc
or
dec
jne
fstpt
test
lods
lds
sahf
lcall
das
pop
jl
mov
scas
mov
mov
push
ret
and
dec
cltd
jnp
lret
adc
aas
cmc
std
call
lret
das
mov
cwtl
push
lds
pushl
sub
mov
xchg
jne
mov
js
mov
repnz
mov
lea
test
shll
ja
repnz
das
ret
adc
aas
inc
fstpt
ret
sbb
fcmovne
jne
mov
scas
mov
shll
cmp
in
jge
vmwrite
ljmp
push
mov
pop
dec
add
mov
test
sahf
cmpsl
pop
mov
pop
jns
sbb
sbb
xchg
aaa
popa
sbb
outsb
mov
imul
jno
in
movsb
inc
mulb
loopne
inc
push
pop
jns
push
imulb
mov
xor
repnz
aam
sbb
in
repnz
mov
mov
in
mov
cmpsl
movsb
stc
in
fwait
in
rcll
xchg
mov
xchg
pop
jle
outsb
mov
mov
rclb
pop
jle
lods
in
test
mov
and
pop
pop
jle
in
mov
dec
add
add
jmp
fidivrs
in
and
dec
aas
shlb
stc
in
pop
dec
int
pop
sbb
xchg
jae
lret
mov
xchg
xchg
and
and
mov
nop
adc
sub
ret
popa
cmp
mov
inc
sbb
js
xchg
pop
inc
jp
mov
clc
outsl
xchg
push
faddp
rcrl
add
mov
xor
push
pop
jns
mov
mov
mov
out
dec
bound
lock
xchg
dec
sub
jo
fcoml
leave
jle
notl
movsb
xlat
and
jnp
pop
and
in
pop
mov
cmc
adcb
enter
in
pop
jle
sti
xorl
sbb
stc
push
into
mov
fsubrl
jmp
loopne
rcll
fs
insl
lea
push
add
xlat
pop
lcall
fs
out
icebp
lret
mov
in
xchg
sti
add
cmp
cmp
mov
xchg
aam
cmpps
cld
roll
dec
sub
mov
sub
cld
repnz
js
and
mov
lret
das
mov
call
or
ss
mov
mov
int3
xchg
hlt
insb
push
in
push
adc
hlt
jmp
mov
mov
fstps
bswap
lods
mov
divb
pop
adc
in
lea
sub
jnp
and
and
andnps
xchg
scas
mov
and
ljmp
iret
into
hlt
jns
lret
sub
xor
push
and
jmp
xchg
push
pop
fstpl
sbb
jl
mov
ja
or
or
inc
inc
inc
push
or
xor
xchg
cmp
adc
ja
mov
mov
push
jmp
mov
pop
xor
and
iret
adc
xchg
push
push
lret
xor
dec
dec
popa
jecxz
xchg
push
pop
or
mov
jne
inc
cmp
jl
ljmp
subb
sub
cld
repnz
mov
in
push
sbb
jmp
das
mov
cmp
and
pop
jbe
xchg
fbld
mov
repnz
lret
dec
and
pop
popf
pop
jle
in
inc
mov
fimuls
jne
data16
cmpsl
cld
repnz
and
dec
test
ror
lods
iret
or
push
repnz
popa
in
sub
xchg
popf
call
je
repz
xchg
push
pop
jns
sub
inc
cs
pop
jns
push
sbb
push
repnz
roll
xchg
mov
mov
lcall
push
mov
cld
repnz
or
sub
testl
fbld
mov
stc
popa
sub
out
xchg
pop
jle
fcmovu
push
or
shlb
adcb
pusha
aas
int3
ljmp
lret
fcmovbe
mov
adc
or
or
xor
jle
mov
jb
fidivs
outsb
fisubs
jp
dec
pop
adc
add
lret
mov
jp
out
jnp,pn
inc
mov
das
mov
in
push
lods
mov
and
jno
outsl
pusha
cmp
xchg
jb
jg
lock
pop
push
adc
jae,pn
mov
xlat
icebp
repnz
imul
ljmp
ds
cmp
xchg
mov
pop
jnp
in
or
mov
sub
ds
push
mov
push
mov
jns
fidivl
daa
ret
fldl
in
xchg
fmull
pop
mov
sub
test
or
out
in
mov
aas
xor
lahf
mov
sbb
or
dec
jno
std
add
and
enter
rcll
cld
into
inc
popf
add
in
pop
inc
mov
or
ja
clc
sub
mov
rclb
cli
pop
in
das
mov
lret
sbb
mov
cmp
fwait
scas
xchg
inc
jge
sbb
sbb
and
sub
orl
xchg
cmp
xor
sub
aad
pop
mov
cld
repnz
das
call
enter
cmp
cs
loopne
mov
decl
sti
mov
lcall
push
push
push
mov
mov
sbb
repnz
das
les
ljmp
cltd
daa
push
aam
mov
mov
xor
scas
mov
cmp
inc
loop
push
mov
rcr
nop
enter
inc
and
in
ja
mov
sti
aas
mov
push
clc
pop
sbb
scas
jae
xchg
jge
push
mov
scas
mov
leave
mov
and
scas
mov
add
dec
lahf
and
lahf
ljmp
imul
pusha
das
lea
jmp
fwait
mov
cmc
test
repnz
lret
push
inc
inc
xchg
rorb
andb
sub
xchg
mov
xchg
sub
repnz
adc
lods
mov
js
jns
jmp
pop
pusha
cmp
push
fists
int3
jecxz
xchg
mov
lcall
stc
in
lock
imulb
stos
and
in
shr
cld
repnz
das
jae
sbb
out
cwtl
lea
sti
fs
out
mov
js
pop
rcrb
jg
cmpsb
gs
cmp
icebp
clc
cltd
xor
or
ja
in
and
aam
xlat
mov
xchg
pop
sti
shlb
movb
faddp
xchg
pop
jle
xor
and
cwtl
and
inc
call
stc
clc
sbb
aas
add
gs
mov
outsl
or
push
push
pop
lret
call
andb
and
push
dec
test
pcmpeqw
push
pop
jns
and
mov
cmc
xchg
adc
mov
lret
mov
push
lods
xchg
lock
mov
out
mov
adc
jge
fwait
sarb
xchg
sub
sti
cld
repnz
das
fsubl
mov
insl
in
adc
lret
das
mov
mov
insl
dec
test
inc
mov
adc
insl
inc
dec
add
mov
jne
jnp
sbb
gs
repnz
enter
sub
jmp
lret
das
mov
mov
sub
push
dec
jo
das
mov
mov
sbb
scas
cmpsb
inc
mov
mov
loope
in
test
lret
and
push
das
cld
repnz
das
dec
repnz
or
lcall
iret
ret
sub
jge
mov
insb
xchg
icebp
mov
lret
jecxz
push
pop
push
imul
dec
movsb
cli
cmp
in
jnp
aas
xor
in
fimuls
cmpsl
repnz
pop
nop
mov
adc
inc
jle
fsubl
sbb
and
out
mov
and
and
sub
cld
repnz
mov
hlt
test
enter
sti
in
add
inc
and
lret
pop
fmuls
mov
sub
mov
adc
int3
lods
mov
sbb
inc
push
xlat
lcall
int
push
repnz
popf
push
je
pop
stc
jl
jo
and
dec
loope
sub
sahf
aad
push
pop
jns
push
or
push
push
inc
add
xor
jns
push
cmp
loop
out
mov
adc
sub
in
testl
das
dec
rorl
int
fsubrp
fwait
loopnew
test
cmp
outsl
insb
sbb
dec
movsl
jnp
sub
sbb
jecxz
cmp
lret
mov
add
add
add
mov
lret
imul
popa
subb
cmc
xchg
sbb
or
push
xchg
mov
push
inc
xchg
jg
aas
pop
adc
xchg
mov
sub
sub
dec
stc
in
pop
add
mov
or
xchg
pop
jle
push
jo
insl
jmp
arpl
in
sahf
es
lds
imul
cltd
and
pop
jle
push
bswap
sub
sbb
gs
fsubs
sbb
or
pop
rcrl
cld
sti
enter
cmpsl
mov
ret
in
inc
das
out
push
ret
pop
jp
adc
stc
repnz
test
sub
lret
sbb
mov
in
sbb
repnz
add
test
jl
xlat
mov
lret
mov
lahf
int3
ja
enter
sub
test
cmp
push
ror
lret
push
negl
popf
scas
mov
fildl
fstps
jo
fisttpl
repnz
xchg
sub
test
sub
sub
das
mov
jl
jle
fnsave
cmp
dec
cmp
jae
loopne
mov
jb
cmp
pop
or
dec
mov
xchg
pop
cmp
mov
dec
pop
and
mov
in
mov
inc
shlb
sub
jns
or
sbb
fnop
in
push
pop
popa
lcall
aas
inc
sub
aad
push
fcoms
pop
movsb
cs
add
mov
push
in
cwtl
adc
sbb
ds
repnz
sbb
xchg
and
lods
iret
inc
xor
push
pop
jns
or
addr16
mov
sbb
in
or
or
into
pop
cs
xor
mov
mov
mov
xor
mov
nop
sbb
xchg
push
fidivs
xor
sub
dec
mov
ds
cmc
ror
std
mov
jg
je
in
ja
mov
aaa
jbe
test
add
jae
test
pop
xor
andl
pop
jns
cmp
imul
cld
aaa
jne
mov
in
hlt
xchg
scas
or
and
cmpsb
push
in
xchg
push
and
scas
pcmpgtb
enter
aad
out
repnz
testl
outsl
lods
cmpsl
in
xchg
fs
int
mov
lret
fistpl
sub
in
pop
and
mov
int3
subb
mov
lret
das
mov
scas
jecxz
hlt
jecxz
cmp
and
cld
je
test
sahf
cmp
push
lret
and
push
jno
dec
push
test
aas
aad
sbb
or
outsb
pop
cmp
lret
dec
popa
mov
shll
cld
repnz
mov
pop
lods
mov
add
mov
inc
dec
dec
stos
mov
gs
mov
push
insl
roll
es
repnz
pop
lahf
dec
and
das
fnstcw
inc
rcr
lret
dec
into
pop
mov
add
push
mov
in
jg
icebp
jge
jns
xchg
add
xchg
mov
inc
add
in
jg
repz
mov
add
or
notl
sub
mov
fwait
pop
jle
in
mov
arpl
xor
and
inc
jp
pop
cld
jnp
in
xchg
fadds
mov
xor
filds
xchg
push
daa
in
jg
imul
cmc
and
or
cmpsl
bound
pop
jle
in
out
gs
and
neg
xchg
mov
push
mov
mov
add
pop
jle
popa
and
stos
dec
sbb
testl
add
push
jmp
pop
insl
hlt
pop
fucomip
pop
cmp
push
mov
shlb
mov
movsl
inc
fidivrl
xlat
outsb
sub
or
sbb
mov
xchg
push
mov
add
cmpsl
into
andl
das
dec
mov
mov
leave
cmc
xchg
das
mov
inc
mov
scas
sub
iret
ljmp
add
xchg
sub
cli
scas
inc
and
jp
fcomps
sub
lds
push
pop
jns
lock
loopne
jbe
je
mov
or
imul
addr16
mov
pop
lret
mov
sahf
repz
adc
fmull
pop
cld
repnz
push
or
jecxz,pn
repnz
enter
sbbb
xchg
adc
lret
das
mov
insl
pop
mov
aam
and
dec
and
push
lods
cmp
pop
ds
mov
mov
add
les
sub
repnz
sbb
loopne
in
push
fidivs
mov
fs
push
mov
inc
inc
pop
jns
mov
out
add
add
mov
jnp
loop
push
in
mov
mov
mov
push
mov
mov
repnz
das
jns
into
pop
adcb
dec
stc
addr16
mov
lret
insl
imul
lea
cmpsb
mov
sub
in
xor
in
jno
in
push
adc
pop
jns
xchg
sub
sti
int
and
mov
xchg
push
cmpsl
jbe
rdmsr
jb
rcrl
cmp
jmp
and
pop
jns
jecxz
sub
jge
xchg
stos
mov
in
push
jb
jns
inc
and
adc
jmp
in
pop
mov
inc
add
jb
out
shld
jp
lods
fildl
test
test
subl
loop
shlb
push
push
xchg
xor
js
xchg
xchg
jo
xor
mov
sbb
pop
sti
mov
sub
das
mov
pop
ret
fmuls
xor
push
adc
out
aas
lea
or
cmp
pop
loopne
imul
mov
scas
addr16
and
xchg
xor
fcompl
fdiv
lret
sbb
add
adc
pop
imul
mov
sub
jbe
and
sub
cwtl
pop
inc
andb
insb
and
sti
enter
testb
add
imul
push
repnz
das
mov
ss
pop
jbe
jno
or
das
mov
lods
inc
sub
inc
je
adc
xchg
push
push
lahf
mov
mov
xor
stc
in
sbb
dec
outsb
dec
sub
in
jmp
or
stc
neg
and
push
jge
xchg
mov
sub
inc
in
pop
jle
jo
add
dec
add
mov
sub
ret
ss
jl
in
jmp
sbb
insb
outsl
sub
loopne
ret
mov
and
push
outsl
inc
aaa
cmp
repz
push
pop
mov
mov
and
push
mov
sbb
xchg
push
pop
jns
cld
add
inc
fwait
ucomiss
in
push
xchg
clc
pop
dec
mov
inc
pop
jns
xchg
mov
fildl
dec
fs
pushf
ret
xchg
mov
push
push
stos
adc
jecxz
add
push
jae
xchg
xor
stc
adc
sbb
pop
jle
in
pop
jl
insb
outsl
lds
jmp
xchg
repz
jle
in
sbb
xchg
shlb
sbbb
jp
in
pop
push
sbbb
cmpsl
mov
das
ds
imul
inc
rorl
mov
sub
nop
dec
aam
nop
lret
cs
sbb
ja
lods
push
in
addr16
test
add
test
lock
and
pop
icebp
fisubrs
dec
lret
xchg
ret
push
pop
jns
pop
mov
pop
cmp
das
cld
repnz
rolb
mov
int
movsb
ret
adc
js
pop
enter
xlat
dec
int
and
mov
or
inc
enter
fbld
imull
xor
jmp
xchg
pop
jle
pop
mov
fstpl
in
jnp
ficomps
in
xchg
push
lods
mov
daa
aam
mov
inc
mov
out
sub
mov
test
sbb
inc
cmp
aaa
inc
adc
aaa
cmpb
xchg
adc
inc
mov
dec
dec
aam
ja
mov
adc
and
inc
shr
sub
jno
cmc
and
xchg
mov
dec
cmpsb
mov
into
xor
stos
mov
xchg
cld
repnz
das
mov
lods
ss
mov
fs
jmp
stos
lock
addr16
sti
and
jae
sub
xlat
add
aaa
out
lret
daa
xchg
jp
lret
xchg
push
cli
in
mov
flds
adc
push
jnp
sysret
lds
lret
mov
or
test
icebp
in
and
push
pop
jno
in
and
xchg
pop
jle
jnp
dec
out
cmpsl
dec
stos
jno
sub
enter
out
jae
dec
enter
imul
mov
jg
out
inc
icebp
repnz
int3
cli
pop
and
jmp
and
das
mov
test
in
fwait
inc
rorb
mov
adc
insl
setno
repnz
imul
test
and
push
repnz
mov
cmp
test
xchg
mov
sub
and
sti
sub
inc
icebp
mov
xor
dec
movsl
pop
or
divb
dec
and
pop
adc
scas
xlat
cmpsl
mov
sbb
stc
cwtl
sub
sbb
add
push
jp
in
jg
aas
popa
jmp
orb
xchg
pop
jle
mov
jp
insl
and
jl
in
mov
aad
pop
pop
lret
xor
inc
pop
stos
jae
mov
rcl
shlb
ja
mov
call
hlt
xor
jbe
das
mov
mov
mov
shll
fnstcw
cld
sub
mov
pop
dec
adc
test
lods
pop
ret
xchg
jg
cmp
shrl
repnz
pop
jle
in
xor
add
lahf
sub
push
or
xchg
jp
mov
xchg
int3
out
fcmovb
aaa
sub
pop
mov
mov
sub
stos
ss
xchg
lret
das
mov
stc
sbb
inc
jbe
mov
pop
push
or
pop
push
sti
jo
cld
repnz
add
test
pop
push
jmp
cld
repnz
das
movsl
repnz
push
repnz
das
mov
dec
push
fs
dec
or
inc
mov
data16
xor
ss
in
ja
sahf
and
add
enter
mov
int
sub
scas
bound
scas
shll
inc
jge
dec
ljmp
push
sti
repz
in
pop
adc
gs
push
hlt
aad
pop
inc
loopne
ficomps
jp
fucom
pop
adc
je
adc
cmp
mov
aad
mov
add
xchg
jg
pop
adc
mov
sub
mov
add
lds
lret
mov
in
jb
arpl
xlat
mov
das
mov
movsl
bswap
dec
adc
jb
mov
nop
jl
notb
add
movb
fbld
ds
sub
movsl
mov
filds
cld
lret
pop
decl
subb
cmc
lds
and
and
add
popa
repnz
lods
fdivrs
in
sbb
pop
sbb
cli
mov
xchg
pop
jge
mov
inc
xchg
sub
jle
mov
popa
stc
sub
into
push
outsl
push
in
and
ljmp
mov
roll
stos
movsb
push
cmpsl
scas
mov
sti
cmpsb
jo
lcall
ja
andb
test
jns
xchg
lods
mov
fisttpll
sub
xchg
push
std
je
jbe
mov
addr16
pop
jns
fstp
mov
and
xchg
xchg
out
or
and
mov
das
mov
mov
cmp
scas
das
mov
xor
fdivrl
sub
jno
divl
cli
cld
repnz
das
sub
inc
jmp
sti
popf
fistpll
int
xchg
jp
lods
cmp
inc
mov
mov
xor
jne
jne
mov
negl
fisttpl
repnz
mov
cltd
movsb
subb
imul
pop
cmpsl
ja
sbb
sbb
ds
mov
and
imul
mov
das
push
in
dec
add
jb
jmp
sti
repnz
scas
and
xchg
xchg
js
repnz
das
mov
sub
or
jnp
pop
stc
xchg
jbe
cwtl
rolb
sub
xchg
scas
mov
rol
call
cmp
mov
lret
pushf
lods
icebp
xor
push
xchg
sub
faddl
repnz
enter
push
neg
and
lret
mov
outsb
outsl
in
fisttpl
sub
inc
scas
mov
mov
xchg
fstpl
lret
mov
or
adc
pusha
fistpll
sbb
mov
jns,pn
pop
add
cld
repnz
mov
xlat
cld
decb
jge
daa
fisubrl
das
aaa
jmp
pop
xor
mov
sti
mov
ja
and
sbb
mov
add
rorl
or
fistpll
or
lret
xor
xor
stc
in
pop
es
insb
out
cmp
add
enter
pop
jle
xor
loope
std
xchg
es
mov
mov
les
or
xor
inc
popf
jge
lret
xor
mov
dec
mov
xchg
jg
xor
and
pop
out
inc
bnd
sub
sti
sub
imul
stc
in
call
cld
or
adc
adc
out
xchg
pop
pop
pusha
lahf
leave
jnp
cwtl
aad
cmpsb
and
das
mov
or
mov
pop
jge
icebp
push
movb
mov
sbb
jmp
or
push
inc
mov
in
push
pop
popf
mov
js
ss
dec
cld
scas
outsl
xchg
push
pop
jns
popf
fs
cs
jge
int
xchg
icebp
mov
jns
mov
sub
fdivrp
jl
fwait
testb
add
xchg
inc
rcrb
jbe
inc
mov
out
and
out
dec
pop
mov
inc
push
xlat
mov
test
mov
shrl
pushf
dec
les
or
cld
repnz
das
lcall
push
and
dec
or
enter
pusha
cmp
and
add
in
xchg
cmp
insl
out
fists
pop
jge
out
jecxz
pusha
lret
es
ret
lods
xchg
pop
jle
add
test
addl
repz
stc
in
push
sub
pop
lcall
inc
ds
cli
sarb
sahf
fldt
push
mov
in
aaa
mov
popf
cmpsb
mov
push
pop
jns
bound
mov
mov
or
in
push
mov
push
lcall
stos
test
and
enter
mov
inc
dec
mov
pop
jle
and
fbld
arpl
stc
outsl
popa
mov
mov
pop
jle
in
push
xchg
or
popa
add
and
xchg
jmp
rcrl
daa
xchg
mov
mov
in
pop
loope
fs
std
dec
out
jle
aaa
push
imul
jmp
in
push
xor
shll
push
pop
or
negl
clc
lcall
cmp
push
add
hlt
ret
cmp
xchg
das
or
mov
lea
fsubrs
sbb
mov
inc
shlb
dec
mov
repnz
das
gs
shrd
sub
adc
mov
je
xchg
aad
adc
lret
das
mov
ds
cld
jb
mov
cld
repnz
popa
dec
xchg
loopne
push
jnp
push
in
shll
mov
push
pop
jns
sbb
cmc
add
jo
mov
in
and
or
lret
sbb
or
jns
xchg
push
push
cmp
fwait
scas
cltd
push
movsb
add
mov
mov
cmp
fiadds
enter
or
push
pop
push
scas
add
jns
xchg
push
add
inc
pop
arpl
dec
jnp
pop
mov
push
mov
xor
cmp
lret
or
popl
jge
dec
push
mov
nop
inc
pop
mov
dec
cmp
mov
enter
inc
xchg
mov
xor
repnz
clc
mov
push
lcall
ds
xor
jle
jb
cwtl
inc
das
mov
mov
sti
pop
test
daa
or
cld
repnz
mov
pop
mov
dec
adc
xor
je
repnz
das
xchg
int3
adc
mov
pushl
jbe
inc
adc
pop
stc
jnp
dec
and
push
xor
shl
stos
jle
in
loopne
adc
fnstcw
hlt
fcoms
xchg
pop
mov
fcomps
icebp
inc
adc
mov
aaa
aad
hlt
outsb
mov
cli
push
sbb
mov
dec
nop
incb
and
cmp
notl
lret
jmp
repnz
in
pop
mov
and
je
testb
xchg
pop
jle
test
imul
loope
push
pop
jns
adc
cld
sbbb
in
adc
and
mov
in
aas
cmp
into
mov
lret
jno
pop
jle
xor
adc
sub
mov
enter
cmc
mull
pop
std
add
jge
arpl
imull
outsl
insl
sbb
insl
mov
pop
mov
push
aad
dec
in
pop
aaa
pushf
and
les
sub
jge
mov
inc
jmp
scas
vpslld
push
subb
fbstp
add
push
scas
mov
scas
mov
dec
mov
and
enter
mov
xchg
push
pop
jns
sti
sbb
inc
or
loope
jo
cs
enter
ret
outsb
lahf
lods
pop
lret
mov
test
cli
push
jmp
das
mov
fs
aaa
xchg
push
out
lods
loope
testl
and
ja
lcall
das
cmp
mov
out
inc
mov
in
das
mov
cmpl
in
and
add
lahf
mov
xchg
push
pop
jns
xchg
pop
cmp
clc
jns
add
jns
fdivp
pop
mov
dec
xchg
mov
cli
fs
popf
jl
decl
ficomps
pop
rcll
cltd
xor
imul
mov
cmpl
enter
pop
mov
lahf
repnz
das
mov
mov
jo
xchg
das
mov
dec
inc
inc
cmp
inc
and
stc
mull
test
push
sti
jl
mov
adc
xlat
lock
in
mov
dec
xchg
push
inc
mov
xlat
xabort
xchg
pop
cmc
push
mov
xchg
fwait
pop
push
inc
lahf
into
jle
in
jo
mov
lahf
pop
push
sub
std
lahf
stc
in
pop
lcall
subb
dec
out
test
out
mov
push
mov
enter
mov
jne
cmc
mov
loope
ret
icebp
xchg
outsl
cmpb
adc
lods
xchg
mov
xchg
jg
fmuls
popa
ret
ficomps
pop
repz
push
int
mov
fs
aam
insb
cmp
cmp
shl
mov
loop
scas
pop
xchg
cmp
cmp
loopne,pn
fnstenv
lods
mov
lock
das
out
lods
icebp
mov
and
cmp
jmp
dec
inc
ljmp
jp
or
repnz
jbe
xchg
cmpsb
daa
xchg
cld
dec
loop
mov
xchg
or
xor
pop
int
test
jae
inc
xchg
outsl
mov
imulb
inc
fnsave
notl
ljmp
cmp
in
pop
popf
push
sbb
or
mov
sub
mov
icebp
pop
iret
push
imul
and
adcb
sbb
mov
inc
add
jns
cwtl
dec
mul
sbb
or
in
pop
jle
adc
cmp
xor
repnz
test
push
pop
sbb
push
loopne
cld
repnz
das
into
and
pcmpeqw
js
repnz
das
mov
mov
add
lret
das
mov
icebp
or
xor
das
mov
aam
xchg
std
or
lcall
popa
in
adc
pop
movsl
sub
data16
mov
sub
cmp
xchg
js
push
enter
jns
mov
hlt
sub
lea
sbb
push
add
pop
jns
xchg
rcrb
xor
dec
pop
mov
fildll
inc
les
xlat
xchg
pop
jle
cmpsl
cmpsb
mov
sub
add
dec
push
push
scas
push
ds
incb
movsl
jne
lds
repnz
das
clc
jae
inc
and
add
xchg
lret
das
mov
in
ss
sub
cld
andl
or
adc
test
ret
mov
stos
lret
rcr
ret
mov
out
cld
repnz
or
jg
ja
mov
cld
repnz
das
enter
xchg
js
xchg
repz
mov
out
icebp
call
jge
fcompl
jp
jns
sbb
or
adc
jecxz
sbb
imul
mov
in
inc
push
mov
sti
stos
inc
mov
xchg
adc
cmp
xchg
subb
and
decl
xchg
scas
cltd
lods
mov
movsb
pop
aam
imul
out
test
clc
push
and
and
mov
mov
repnz
sub
lret
lods
and
testb
int3
dec
or
lret
jle
jno
adc
loope
aam
jnp
cmp
mov
adc
notb
dec
outsl
push
ds
mov
sbb
icebp
mov
and
mov
or
or
inc
push
xlat
cs
push
inc
aad
bound
mov
int
jns
jmp
or
push
outsl
int3
popa
cwtl
fsub
xchg
push
pop
in
mov
sahf
inc
clc
sbb
pop
test
bound
imul
mov
xor
repnz
mov
pop
mov
test
iret
sub
das
mov
push
inc
ja
scas
mov
or
jle
and
sar
jge
in
cli
sub
loope
jae
mov
in
pop
xor
or
push
jmp
xor
repnz
push
mov
jmp
or
dec
fbld
je
arpl
lret
imul
daa
shrl
lret
pop
sub
stos
vcomiss
mov
pop
push
cmp
jl
idivl
maxps
or
aam
or
sbb
shll
mov
jp
cmpsb
mov
jp
jns
sub
cli
enter
and
adc
push
fimuls
jns
dec
sub
insl
pop
mov
scas
mov
leave
aas
sub
adc
sub
mov
popa
push
fs
mov
outsl
and
push
pop
jns
fnstsw
jmp
movsl
xchg
mov
lea
pushf
ja
inc
adc
repnz
sub
into
rol
mov
xor
and
stc
cmp
movd
mov
sahf
pop
in
pop
jle
jmp
out
mov
hlt
jbe
xchg
pop
jle
fwait
fs
push
push
pop
lcall
jae
hlt
dec
shlb
xor
in
leave
sti
lret
stc
in
lods
mov
ja
in
adc
pop
test
jp
in
sbb
or
mov
sub
in
add
xor
xchg
pop
jle
and
js
fisubrl
jnp
insl
outsb
inc
icebp
dec
test
xchg
in
cmp
jmp
and
jnp
imul
pushf
jle
cmpsl
dec
adc
les
jl
imull
dec
cld
sti
int3
pop
jge
lods
push
mov
mov
repnz
das
mov
xor
cli
and
enter
call
cmpsl
pop
lea
insb
aaa
pop
jp
in
jo
xlat
cmp
sbb
in
push
test
mov
or
scas
ret
pop
insb
inc
sbb
mov
outsb
scas
mov
daa
mov
mov
ds
push
cmp
repnz
testb
das
mov
enter
jnp
inc
pop
loope
or
dec
jge
inc
push
aaa
jmp
setge
pop
xor
stc
inc
add
enter
inc
dec
pop
and
lcall
sub
jnp
test
xchg
test
cmp
inc
imul
jle
inc
lds
mov
lcall
orl
fldcw
pop
xor
add
pop
ss
ds
fcompl
add
jns
xchg
mov
and
daa
jnp
enter
fs
push
pop
mov
incb
jae
mov
push
pop
jns
popa
cwtl
sbb
cmp
dec
jge
xchg
nop
xor
stc
test
rol
iret
cmp
xchg
aaa
nop
jg
cli
in
es
xor
jl
xor
lods
push
pop
inc
push
mov
mov
add
imul
mov
add
mov
xlat
xchg
out
shll
aas
push
lret
mov
daa
pushf
pop
add
sub
lods
xchg
in
sub
mov
mov
push
jp
das
xor
or
push
xchg
xor
adc
les
xchg
push
xor
hlt
xchg
mov
jge
addr16
sbb
or
shl
sub
sbb
cmp
cmp
nop
jmp
sub
mov
pop
je
xor
ds
loopne
rcr
mov
in
xchg
ja
jne
xchg
mov
xchg
and
stc
jbe
xor
push
mov
adc
cld
repnz
pop
lock
insb
or
idiv
in
jg
adc
adc
imul
mov
dec
and
mov
xchg
ds
call
adc
lahf
xor
in
fsts
add
sub
cmp
lods
je
add
imul
repnz
das
push
insb
shl
add
sub
repnz
test
sub
push
xor
jnp
nop
and
scas
mov
add
dec
ret
mov
sbb
loopew
push
sub
jp
xor
jg
push
push
sbb
ret
pop
mov
xchg
std
pop
mov
aaa
sub
and
mov
and
mov
mov
add
pop
jns
xchg
adc
fcomip
ret
xor
push
fidivrs
adc
inc
fisttps
mov
jl
xchg
push
pop
inc
adc
fs
add
aaa
xchg
inc
pop
jns
mov
stc
movsl
jno
mov
lret
mov
nop
sbb
test
ja
inc
roll
das
mov
in
push
dec
cmp
inc
das
mov
or
lret
xor
addr16
or
xor
push
push
inc
mov
xchg
push
fiadds
sbb
and
pop
jns
out
mov
nop
lret
xchg
jne
push
js
fists
sar
xor
fistpll
fmull
pop
into
lret
jmp
data16
sti
enter
xchg
loopne
inc
loope
lds
int
lret
mov
inc
xor
mov
sbb
xor
mov
stc
mov
rol
adc
fstps
stc
mov
in
insb
popf
xchg
aam
notl
mov
filds
in
mov
std
fmulp
mov
in
pop
jle
cmp
out
mov
rorl
xchg
pop
jle
orl
pop
test
jle
in
leave
mov
add
inc
sub
fdivp
movsb
gs
in
imul
scas
mov
inc
scas
gs
mov
add
xchg
push
pop
jns
bound
int
fwait
sbb
jb
mov
dec
xchg
enter
xchg
sub
scas
es
pop
jns
fistps
repz
pop
aaa
ljmp
inc
in
jns
xchg
icebp
ja
cltd
add
push
or
add
dec
outsb
in
jecxz,pn
outsl
mov
pop
fcoml
xchg
lods
cmp
add
in
and
es
xlat
int
sub
lea
in
cmp
pushf
push
pop
jns
js
mov
pop
pop
lea
dec
and
xchg
sbb
jecxz
mov
push
cltd
filds
enter
repz
iret
repz
lds
popf
dec
in
add
lcall
stc
in
sub
and
xchg
sub
addr16
test
repnz
das
xorl
mov
xor
orl
push
pop
jns
lods
mov
jo
mov
xchg
daa
jns
xchg
push
movsb
lea
xchg
xor
test
in
push
pop
cld
dec
cmp
aam
out
inc
lods
push
cmpb
inc
cmp
das
sbb
sub
and
jns
adc
adc
adc
mov
jb
xchg
adc
jno
jl
js
inc
stos
dec
cmp
sub
push
jno
add
into
sub
jmp
xchg
mov
dec
jb
sub
repnz
mov
sbb
and
adc
jae
stc
repnz
das
mov
stos
insl
jecxz
enter
pop
stc
in
push
mov
into
mov
push
mov
dec
in
pop
jle
dec
mov
cmp
sbb
mov
in
test
add
inc
ss
pop
sub
insb
pusha
bound
test
sbb
repnz
pop
pop
fwait
shr
or
dec
neg
cmpb
stos
inc
mov
mov
xchg
push
iret
movsl
pop
inc
shll
aaa
in
push
pop
rolb
xlat
cli
sahf
aaa
pushf
xor
mov
jb
jmp
pop
dec
pop
pop
test
xchg
push
inc
lods
dec
mov
mov
das
mov
mov
popf
mov
mov
mov
js
dec
bound
push
shlb
and
xchg
repnz
ja
in
cld
cmpsb
fildll
js
scas
lret
mov
icebp
arpl
dec
mov
shrl
jge
jmp
shrl
in
repnz
dec
je
jecxz
sbb
xor
ret
cmpsl
jae
inc
test
xchg
ja
mov
fidivl
notl
and
inc
push
ficomps
jecxz
dec
add
mov
into
comiss
fidivrs
sti
enter
xor
test
ja
lret
das
mov
addr16
icebp
push
mov
xchg
cmp
mov
gs
sbb
and
sti
cmp
stc
repnz
out
popf
xlat
daa
outsl
pop
stc
sub
sti
leave
inc
jnp
mov
adc
sub
in
pop
sti
mov
push
adc
cmp
sub
inc
pop
or
sbb
fdivr
loop
arpl
ds
shrl
push
and
mov
mov
repnz
das
xchg
test
xchg
xor
jge
filds
cli
push
mov
xchg
in
adc
adcb
sti
dec
enter
xchg
fs
es
jns
jmp
stos
jbe
adc
push
outsb
gs
in
and
sbb
fisttps
add
int
xchg
pop
jle
xchg
pop
sarl
out
pop
dec
push
jmp
jnp
loope
pop
bound
xor
adc
or
in
sbb
in
mov
jno
push
aaa
ds
or
adc
sbb
stc
adc
mov
cmpsl
push
inc
notl
jge
xor
adc
repnz
pop
mov
lods
xlat
push
stos
lcall
xchg
aas
aas
xchg
and
mov
push
sbb
scas
mov
outsl
cmpsb
mov
jp
scas
mov
sbb
mov
mov
xor
clc
enter
ja
dec
enter
lret
jnp
fcmovb
mov
mov
xchg
lret
ret
aaa
outsb
shrl
cmp
add
mov
push
movsb
mov
jns
lods
je
mov
inc
jg
and
jns
xchg
inc
dec
jbe
stos
lret
daa
mov
inc
push
push
push
push
adc
push
inc
cs
xor
iret
ds
pop
mov
popf
mov
sbb
cmp
aaa
mov
mov
pusha
mov
cli
es
sbbb
sub
mov
or
repz
xchg
cmpsl
roll
sbbb
dec
icebp
movb
pop
mov
cld
sti
push
jb
xor
popf
notl
lret
dec
add
aas
sti
and
mov
xchg
push
ficomps
cmc
lahf
or
mov
in
rolb
sti
jecxz
adc
ss
pop
scas
shl
cmpsb
mov
js
adc
mov
aad
jne
mov
enter
jle
mull
or
jo
ret
cwtl
jns
jmp
mov
cmp
xchg
push
pop
add
popf
jl
inc
pop
jns
ljmp
pushf
sub
notb
add
movsl
cmp
dec
inc
pop
mull
xchg
inc
inc
inc
enter
jnp
xchg
pop
mov
mov
clc
dec
jmp
and
cld
xor
push
divl
push
scas
mov
mov
inc
stos
cwtl
jb
cmpsb
dec
cmc
in
and
dec
cmc
cli
lods
jmp
pop
negb
repnz
das
fistpl
and
push
scas
pop
and
push
pop
hlt
arpl
jp
repnz
push
jge
out
cwtl
mov
lea
das
mov
dec
jae
pusha
cs
mov
repnz
ret
adc
pop
mov
pusha
js
adc
jg
xchg
xor
mov
jmp
cmp
xchg
pop
jns
dec
sub
aas
ss
xchg
or
pop
pusha
call
daa
in
loop
es
stc
ljmp
sbb
or
pop
movsl
lret
mov
or
imul
scas
mov
out
jge
scas
insl
inc
repnz
and
sarl
dec
xor
lock
xchg
iret
mov
cmp
sarb
mov
iret
jne
scas
xchg
repnz
xchg
xor
add
popf
arpl
and
adc
sub
cmp
jne
or
jnp,pn
add
xor
shr
sub
pop
mov
jmp
rorl
jmp
bound
inc
add
out
xlat
dec
fsubs
leave
je
fidivs
cld
repnz
sub
movsl
jns
sbb
or
in
dec
xor
xchg
shll
xchg
sub
xor
call
inc
imul
repnz
sbb
pop
sti
out
push
jne
jle
in
mov
xor
in
push
int3
imul
mov
insb
jno
scas
mov
mov
out
shlb
and
mov
lret
ja
js
es
and
push
mov
inc
daa
or
pop
push
ja
das
mov
push
in
js
mov
xchg
jg
in
sub
stc
scas
addr16
jl
in
sbb
mov
mov
add
pop
lret
adc
fdivr
imul
cld
repnz
pushf
inc
cmp
push
and
out
pop
pop
stc
repnz
das
test
pop
and
sbb
xchg
pushf
sub
repz
scas
mov
adc
loop
jmp
lret
mov
adc
aam
rcll
lock
into
or
mov
lds
outsl
push
mov
or
and
stc
in
cmpsl
div
jns
cmp
aad
pop
insl
fwait
outsl
call
lods
andl
lret
jg
mov
sbb
out
and
int
ror
das
mov
xchg
jnp
dec
enter
loope
insb
inc
in
es
test
imul
jecxz
stc
in
jge
sub
xchg
aad
mov
xchg
jg
rcl
fucompp
push
and
adc
xchg
pop
jle
xorl
mov
inc
out
leave
push
shlb
xorl
outsb
sub
xor
sub
fstpt
xchg
sti
imul
cmp
and
jnp
xor
int3
ss
leave
lret
das
mov
lea
cmp
and
stc
repnz
xor
mov
js
lret
das
decl
mov
sti
push
out
ds
enter
cmp
int3
xlat
or
cmp
pop
jle
in
or
not
jecxz
xor
inc
push
dec
lea
sar
or
scas
mov
and
xchg
xchg
aas
std
xchg
lret
mov
mov
sahf
repnz
lret
lcall
notb
scas
mov
iret
pop
clc
leave
cmp
jecxz
data16
faddl
hlt
xchg
testb
js
cs
cmp
xchg
testl
out
imul
inc
inc
pop
jns
mov
push
sub
fdivp
dec
seta
call
xlat
std
xchg
push
pop
jns
mov
mov
mov
in
in
je
cmp
rorl
pop
inc
adc
repnz
pop
push
add
sub
cmp
int3
arpl
pop
hlt
jp
jnp
lret
in
mov
mov
lret
das
mov
sub
scas
in
retw
inc
mov
inc
inc
repz
scas
mov
inc
enter
hlt
mov
jnp
lret
push
enter
mov
jge
and
sbb
sbb
mov
add
mov
mov
incb
inc
and
inc
in
outsl
inc
bnd
cmp
mov
mov
ficompl
movsb
rolb
enter
pushf
sub
gs
sub
das
mov
push
jecxz
add
add
cld
repnz
inc
fwait
mov
ja
add
jno
xchg
and
outsb
scas
outsl
or
js
filds
lret
das
mov
fmuls
test
rolb
movsb
outsb
add
or
mov
in
aas
inc
iret
pop
adc
sbb
mov
xchg
pop
jge
mov
jge
int
daa
arpl
jne
pop
jle
in
inc
mov
int3
int3
test
cltd
push
das
sbb
xchg
lock
push
dec
out
fnstcw
sub
in
pop
cmovs
or
punpckhwd
ds
pop
sti
xchg
mov
subb
aas
jle
fnsave
test
mov
popf
sbb
push
add
repnz
movsl
pop
es
inc
pop
dec
pop
arpl
addb
mov
ss
fbld
mov
cmc
mov
ds
mov
jns
xchg
jmp
mov
inc
cmp
lret
jge
in
adc
pop
fbstp
lret
das
decl
sbb
imul
loope
iret
cmovno
mov
jns
push
or
test
mov
test
sub
sbb
xchg
hlt
enter
dec
popf
xchg
gs
sub
cltd
jg
mov
mov
pusha
sub
sub
dec
adc
sub
lret
xchg
aam
adc
adc
enter
jno
mov
dec
xlat
and
cld
and
inc
ja
sbb
inc
testl
pop
loope
inc
mov
daa
out
adc
xchg
mov
fiaddl
adc
cmc
mov
jge
xchg
icebp
enter
out
loope
add
das
lcall
inc
adc
dec
mov
sbb
xor
das
mov
incb
sub
sub
stc
test
sti
xor
pop
ficoms
inc
xchg
inc
aaa
das
jno
mov
adcl
pop
repnz
and
push
pop
jns
jecxz
dec
jns
lock
les
fsubs
xchg
xor
fxch
lcall
jle
inc
mov
ja
pop
jb
das
mov
add
test
fildl
push
enter
and
jae
mov
sub
inc
shrl
xor
cld
add
mov
lret
add
and
cmp
xor
pop
or
rolb
notb
enter
xchg
mov
popf
data16
sub
test
xchg
mov
dec
loopne
mov
out
add
mov
aad
enter
pop
jns
repnz
das
fcompl
jmp
lret
das
mov
loop
or
jnp
mov
cmp
cld
mov
in
lock
clc
into
nop
repnz
jmp
dec
xor
mov
sbb
imul
lsl
xor
jmp
mov
push
mov
or
mov
in
notl
test
rcrb
fwait
cmp
xchg
push
pop
mov
cmc
es
pop
dec
push
jl
pop
jle
ja
mov
test
jne
sub
stc
inc
dec
mov
xchg
std
mov
shll
inc
adc
inc
iret
and
mov
or
repnz
mov
jno
push
dec
xor
mov
sub
push
in
and
jb
std
sub
sbb
outsl
xlat
sub
rclb
stc
sbb
push
xchg
jg
es
inc
mov
insl
fimuls
xchg
xchg
push
imul
push
sar
or
or
or
xchg
push
pop
adc
xchg
pop
jae
inc
pop
jle
imull
sbb
adc
push
inc
mov
mov
js
jle
in
enter
into
sub
shrb
es
and
in
pop
add
sti
dec
mov
popa
dec
jecxz
hlt
mov
xchg
pop
jle
push
push
adc
ss
mov
stc
repnz
adc
push
push
and
dec
imul
arpl
lret
in
daa
icebp
shr
mov
push
in
push
ficomps
inc
and
xchg
and
jns
lods
add
lcallw
inc
les
loopne
dec
stc
in
jg
in
jp
into
jl
divb
or
jl
xor
in
and
das
lock
stc
cmp
in
xor
add
das
mov
iret
inc
add
stos
shlb
adc
lock
xchg
pop
jmp
rcrb
jne
shll
sub
pop
add
call
dec
cmp
mov
jns
xchg
push
out
and
mov
inc
mov
xchg
jg
pop
rcrl
sub
je
xor
cld
jnp
ss
in
shlw
mov
repnz
das
adc
inc
pop
jp
int
leave
cld
xlat
inc
mov
push
sbb
lret
fs
repnz
das
mov
imul
scas
cli
enter
adc
push
insb
inc
mov
orb
or
or
jge
in
fdivrs
cli
adc
xchg
lret
in
pop
lds
in
ficoml
jecxz
mov
xchg
pop
jle
inc
es
loope
add
pop
mov
fiadds
negl
xchg
dec
nop
xchg
pop
repnz
xchg
inc
xchg
shl
inc
xchg
mov
xchg
aaa
and
push
mov
fwait
add
das
cltd
sbb
sarl
mov
sub
ss
fcompl
stc
test
mov
jns
rorl
test
mov
jp
std
lcall
stos
stc
in
pop
bound
inc
in
xor
pop
jle
outsb
xchg
jo
pop
out
fistl
xchg
cli
xor
mov
setbe
sbb
in
adc
loop
mov
ret
rcrl
ds
mov
es
std
adc
jg
iret
pop
add
mov
pop
jle
and
and
faddp
clc
mov
or
mov
enter
jg
ss
jge
adc
xchg
pop
jle
cmpsb
or
jae
fwait
aas
sub
or
cmp
popa
jle
sub
pop
jle
in
jnp
jno
in
lods
fcoms
iret
pop
xor
xchg
mov
cli
cmc
mov
xchg
cmpsl
loopne
stc
in
pop
lock
out
mov
out
or
mov
ds
xchg
lret
outsl
sbb
repnz
nop
loope
push
icebp
inc
out
jae
mov
cld
repnz
mov
movsb
repz
fistl
lret
inc
mov
ds
xor
mov
xchg
das
mov
rcpps
mov
sbb
push
mov
xlat
sub
mov
loop
mov
orb
xor
push
pop
out
mov
cwtl
inc
out
repnz
ret
inc
lds
push
mov
mov
dec
sbb
xchg
mov
outsl
sahf
inc
aaa
inc
jl
popa
or
adc
rcrb
call
mov
cld
repnz
mov
andb
xchg
jo
xor
jmp
xor
xchg
pop
jle
mov
push
lcall
mov
jge
in
out
adc
push
mov
repnz
xchg
sarb
scas
push
inc
or
inc
ret
imul
cmp
popl
stc
test
and
scas
rcrb
dec
je
stc
in
pop
mov
and
sub
push
add
pop
jle
pop
fisubl
notl
jle
adc
cmp
mov
lds
inc
call
fs
shl
push
sar
xor
xchg
push
in
adc
dec
cld
jle
stc
xchg
pop
jle
sarb
sub
insb
jp
in
in
sub
cs
jle
in
xor
pop
cmp
inc
scas
jmp
stc
in
in
xor
adc
mov
je
repnz
and
mov
and
lret
das
mov
aad
arpl
ss
int
add
mov
mov
push
mov
movups
xchg
push
lret
in
rclb
rolb
das
inc
shlb
imul
pop
in
jg
bound
daa
sti
mov
jg
add
jg
out
cmc
movsb
ljmp
cld
jnp
push
lcall
and
cmp
push
iret
sub
mov
sub
push
shlb
rcl
sub
data16
sub
jbe
mov
ljmp
out
in
xchg
push
and
ret
nop
sbb
hlt
jge
jmp
push
sbb
mov
stc
in
push
insb
push
popa
lret
inc
mov
jle
in
cs
scas
bound
adc
jo
jbe
and
sbb
popa
push
xchg
pop
jle
xor
test
iret
push
pop
pop
dec
iret
repnz
xor
pop
lcall
or
es
cmp
push
cld
stc
imul
jae
add
dec
mov
es
stos
lahf
lret
das
lcall
nop
xor
imul
xor
adc
das
mov
dec
and
and
fstpt
sbb
shrl
cld
scas
mov
or
into
inc
sbb
inc
xlat
faddp
and
test
insl
imul
repnz
addr16
adc
loop
or
inc
mov
popf
rcl
repz
mov
scas
jmp
mov
mov
mov
push
repnz
and
jecxz
xchg
in
imul
ror
das
mov
pusha
mov
ss
lret
mov
lods
inc
pop
stc
repnz
push
iret
xchg
fistl
fsub
js
lret
pop
cmc
xchg
cmp
inc
call
shrl
jb
fdiv
xchg
sub
mov
or
ljmp
sti
enter
jno
mov
dec
sub
sub
mov
ss
scas
adc
pop
push
repnz
inc
xlat
dec
xchg
nop
daa
ret
in
ja
stc
in
ljmp
xchg
push
pop
jns
push
dec
leave
mov
pop
inc
jge
ljmp
mov
jnp
dec
das
cmp
pop
jns
xchg
xchg
inc
cs
mov
aas
pop
jmp
filds
mov
cld
enter
addr16
cmp
xor
xchg
loope
mov
pop
jle
in
mov
mov
mov
inc
jg
xchg
cld
jnp
xchg
mov
pop
xchg
int3
out
mov
repnz
das
mov
cmp
in
in
insl
xchg
pop
sbb
stc
or
jmp
inc
loope
scas
mov
adc
inc
pop
fdivrs
icebp
mov
push
mov
or
inc
aas
and
inc
jmp
sub
sbb
gs
jle
adc
jl
sbb
test
cmp
in
dec
arpl
sarb
jecxz
cld
repnz
aas
add
sbb
push
in
inc
mov
aaa
mov
inc
lret
pop
jle
pcmpeqd
adc
test
pop
jns
loopne
fs
cmp
lock
push
mov
into
dec
mov
inc
sub
in
sub
ret
ret
xchg
fdivrp
js
aad
js
loopne
mov
sub
mov
into
icebp
cmp
scas
mov
fsts
cmpb
popa
leave
pop
sub
test
sbb
fiadds
pop
enter
lret
adc
mov
and
das
lcall
cli
icebp
inc
ss
inc
rcrl
mov
std
cmpsl
mov
sub
mov
jns
xchg
in
ljmp
jecxz
xchg
out
in
sub
inc
sbb
outsl
imul
js
and
into
mov
mov
fdivr
jae
inc
popa
push
repnz
sub
mov
sub
ret
adc
jge
ret
cwtl
je
xor
mov
imul
stc
repnz
cmp
mov
ljmp
lahf
sbb
sub
lea
outsl
and
cmp
xor
cli
jo
les
out
mov
cmp
scas
mov
loope
test
ret
loop
mov
lret
addr16
pop
pop
in
mov
scas
push
mov
movsl
adc
push
push
mov
mov
push
inc
mov
sub
jmp
pushf
adc
ds
test
xlat
adc
add
xchg
pop
jle
jno
jecxz
test
or
in
mov
pop
in
and
insb
mov
lret
lahf
int3
out
sub
mov
ret
xchg
das
scas
mov
mov
aad
incl
jns
cmp
jmp
aas
int
jb
daa
loope
jg
sbb
aad
fstpl
jns
adc
inc
popf
leave
in
ds
test
cmp
in
bound
cmpsb
mov
dec
daa
sub
mov
mov
sbb
cmp
lret
mov
movsl
call
add
enter
pop
test
test
test
sbb
mov
lock
or
aas
jae
mov
xor
lret
das
and
pop
fwait
loopne
pop
int
ds
imul
ljmp
xchg
js
stos
les
mov
push
pop
jns
popa
push
and
mov
push
pop
jns
mov
movsb
lahf
pop
inc
jne
ret
pop
jns
xchg
or
cmp
and
imulb
int
jns
xchg
push
xlat
xchg
pop
add
lea
mov
jg
pop
pushf
sbb
mov
adc
pop
mov
inc
ss
test
xchg
add
orb
cmpl
jecxz
pusha
xchg
push
sar
xchg
pop
add
jo
push
pop
ja
loopne
pop
jle
sbb
inc
inc
js
xchg
jg
cld
rcll
lds
jns
loopne
push
negb
jmp
cmp
jecxz
in
push
xchg
pop
ret
pop
sbb
push
dec
mov
mov
mov
daa
jbe
sti
mov
push
jg
cwtl
nop
scas
mov
sbb
gs
lret
or
inc
sti
enter
iret
fldt
inc
add
icebp
pop
inc
int3
fwait
and
mov
mov
cli
pop
and
xchg
and
scas
sub
xchg
stos
jns
mov
sbb
rolb
adc
jle
in
jp
ret
mov
add
jae
mov
inc
jbe
fdivl
mov
inc
scas
pop
sahf
pop
lea
addr16
orb
pop
cmpsl
cmp
pop
aam
mov
cld
repnz
das
cmp
mov
mov
cwtl
xor
sbb
cld
adc
nop
lret
das
mov
ljmp
pop
pop
das
mov
sti
xchg
iret
dec
lret
pop
ss
push
mov
dec
stc
cmp
push
pop
daa
pop
sbb
cld
repnz
das
xor
jmp
hlt
adc
xchg
das
mov
fldt
into
inc
cmpsb
cmp
jle
aas
xor
out
cmpsl
xchg
pop
jle
in
mov
enter
xchg
xchg
push
stos
fnstcw
cmp
clc
sub
push
jae
in
pop
scas
xchg
jle
test
mov
lret
and
ds
lods
push
xchg
das
mov
aas
es
mov
xorl
mov
xchg
dec
movsl
in
test
xchg
aaa
rolb
jne
rolb
cmpsb
mov
mov
sub
xor
lret
sub
jmp
xchg
sub
std
lods
mov
add
addr16
fildl
test
test
fistps
fbstp
mov
stc
notl
adc
and
xor
shlb
jle
xchg
es
or
adc
and
mov
loope
or
push
push
pop
jg
cmp
inc
mov
cld
sti
enter
jne
stc
xor
jge
lods
push
repnz
das
mov
loopne
iret
fisttps
adc
das
mov
fmull
stc
xlat
xor
jge
mov
sub
jg
mul
xchg
js
cld
repnz
loope
pop
cmc
sub
adc
xor
stc
in
inc
fwait
aam
xchg
sti
arpl
mov
in
pop
jle
push
push
sbb
dec
or
xchg
pop
jle
xor
ret
or
push
into
adc
jns
jle
in
int3
mov
mov
xor
xchg
ds
jmp
ljmp
mov
pusha
jnp
int
inc
mov
fnstsw
push
dec
jecxz
sbb
mov
cltd
cmp
lahf
xor
push
mov
adc
mov
dec
dec
clc
loope
das
xchg
push
outsl
jle
sub
ret
adc
in
pop
ficompl
movsb
mov
andb
and
outsb
movsl
in
lea
fildll
mov
data16
jns
pop
push
add
lret
daa
and
xchg
pop
pop
ljmp
jnp
stos
ror
out
call
cmp
repnz
rolb
inc
stc
mov
test
pop
jbe
xchg
enter
pop
add
inc
push
xchg
jae,pt
cld
sti
in
fidivs
push
cmp
dec
bound
iret
dec
sub
mov
pop
jg
adc
inc
les
push
pop
jns
scas
dec
leave
jns
nop
jl
mov
mov
repnz
shl
jge
sbb
fs
ds
das
decl
icebp
fisubrs
push
dec
das
mov
fbld
push
sbb
pop
pusha
and
push
aaa
push
mov
popa
mov
inc
inc
addl
xchg
push
js
jnp
push
mov
sub
fstpl
inc
dec
sbb
or
repnz
cltd
sahf
push
mov
inc
clc
adc
jns
lea
dec
mov
inc
push
pop
sbb
or
xor
ds
xchg
popf
sbb
jmp
out
jle
rclb
mov
pop
stc
in
fwait
data16
loope
sbb
outsb
cmpl
mov
jmp
sahf
or
add
push
pop
sti
outsb
test
mov
enter
out
jne
pop
mov
dec
and
out
mov
xlat
and
jg
lret
cmp
jecxz
lods
xor
aas
pushl
and
mov
sahf
mov
ljmp
lods
test
pop
xchg
testb
push
stc
mov
bnd
xor
jns
fstpt
imul
lret
sahf
xor
xchg
test
in
insl
outsb
pop
add
mov
push
and
cmp
in
sub
addr16
popf
ret
in
adc
cmp
lds
outsb
and
xchg
jg
jmp
idivb
cmpsb
or
stc
ja
mov
lods
sbb
dec
pusha
orb
repnz
push
imul
sub
xchg
cli
in
divl
mov
movsl
stos
inc
and
aad
push
pop
jns
jle
mov
out
and
out
pop
pop
jns
xchg
inc
mov
sbb
cli
mov
repnz
cmc
adc
lea
fs
lret
mov
pop
push
into
push
clc
fisubl
ds
jmp
movsl
cltd
and
xchg
adc
sbb
repnz
das
ficoml
xchg
in
or
sub
lret
das
mov
jg
xor
fwait
lret
das
mov
repz
inc
mov
mov
ss
pop
cmp
push
mov
jge
lret
cmp
lods
aas
cmp
pop
rcl
add
imul
pop
les
jle
clc
lahf
or
pop
jle
cmp
xlat
push
sbb
mov
lret
xor
bnd
mov
jbe
sub
cmp
in
sub
je
out
pop
cmpsb
inc
add
sub
or
push
adc
dec
sub
cltd
or
push
mov
push
sti
fs
mov
movl
test
dec
lret
out
xchg
sub
jae
jns
xlat
cmp
das
mov
daa
jmp
lea
ret
das
mov
mov
bnd
cmp
cwtl
cld
repnz
xor
ret
icebp
nop
jbe
popl
add
fwait
cld
repnz
das
or
leave
movsl
mov
jo
dec
in
add
mov
and
jge
mov
leave
cli
jns
shld
jmp
xor
push
fstps
mov
and
loopne
outsb
inc
lods
fstp
and
jge
lret
inc
inc
push
push
outsl
pop
xor
sbb
mov
in
pop
mov
das
aam
out
jge
and
in
lods
inc
jle
aad
sbb
hlt
insl
cltd
fs
sub
push
dec
mov
test
mov
insb
jp
push
lret
xchg
mul
xor
sti
out
jmp
or
xchg
pushf
in
push
pop
mov
aas
test
cld
sti
insb
les
sti
fcomi
lcall
filds
push
cmp
inc
pop
inc
and
sub
cmp
outsl
pop
jno
mov
mov
dec
mov
das
je
in
and
or
inc
xchg
imul
or
pop
jns
and
cli
mov
mov
or
fsubl
dec
jo
pop
mov
mov
and
ds
push
mov
jno
jae
jne
imul
rclb
das
cmc
push
dec
adc
scas
mov
loop
xchg
sub
pop
ljmp
popl
cmp
test
scas
insb
ja
repnz
mov
sub
sub
mov
outsb
jle
mov
pop
stc
in
mov
rclb
es
jbe
jb
iret
cmpsl
pop
jns
xchg
mov
and
push
in
or
pop
dec
cmp
push
mov
leave
adc
lahf
shll
scas
and
loop
lret
das
dec
push
xchg
imul
std
int3
lea
adc
jge
add
jge
cmc
jae
pop
push
sub
lcall
dec
add
xchg
test
xchg
dec
or
fwait
mov
aam
mov
add
out
mov
adc
repnz
cmp
inc
push
sbb
loopne
daa
or
and
or
sti
pop
sti
icebp
or
mov
fnstcw
mov
and
pop
std
shrl
in
rcrl
jne
sub
add
xchg
push
pop
ljmp
mov
add
mov
pop
jns
inc
add
mov
mov
iret
pushf
mov
pop
jns
xchg
fmulp
push
xor
add
xchg
sbb
xchg
push
frstor
movsb
pop
in
pop
sbb
xchg
push
pop
rep
jno
out
mov
fcoml
lcall
or
mov
mov
repz
shrb
lret
jg
cmp
cmc
shrb
cli
int
mov
cltd
adc
ret
jns
xchg
xchg
sbb
divl
xchg
push
cs
inc
aad
xor
icebp
out
inc
in
push
pop
cmp
arpl
or
js
bound
addr16
push
pop
jns
out
fs
in
bound
arpl
pop
jns
mov
dec
call
scas
fdiv
lret
mov
lods
iret
or
xchg
push
mov
mov
movsb
loope
jbe
ljmp
mov
pop
jb
and
or
data16
xchg
fldt
in
cmp
mull
movsb
test
jl
notl
and
cmpsl
inc
shrl
or
xchg
enter
movsb
xchg
ret
jne
into
test
dec
mov
mov
les
mov
mov
cli
ret
add
repnz
jp
jmp
lret
mov
pop
sub
lret
das
decl
jle
das
int
andl
or
xchg
mov
ror
mov
outsb
insl
jecxz
loopne
imul
notb
stos
mov
ret
push
fmulp
jno
mov
js
inc
clc
cld
add
and
cs
sub
das
lods
inc
xor
inc
in
cmp
or
dec
jge
jns
jmp
pop
mov
mov
in
push
pop
xorl
mov
sub
je
or
mov
into
enter
xor
xor
mov
mov
sub
cwtl
leave
or
lods
mov
mov
push
cld
repnz
das
push
push
iret
fadds
dec
push
enter
or
xchg
jp
movsb
jne
pop
sarl
and
or
xchg
push
insl
ds
xor
rcl
ljmp
aad
fldcw
mov
push
ficoms
stos
pushl
das
mov
sbbl
in
sub
adc
or
mov
test
js
push
ja
xchg
mov
sub
pop
cmp
add
jle
cmp
mov
push
rcl
cwtl
pop
fldt
jmp
add
mov
inc
xorl
lods
dec
pop
stc
repnz
bound
mov
std
repnz
jmp
xchg
test
lret
mov
xor
push
leave
in
add
scas
mov
and
mov
addb
scas
mov
mov
add
mov
mov
repnz
mov
xlat
pop
rcrb
cmp
das
mov
cld
jne
inc
ss
xor
je
pop
stc
repnz
and
jecxz
cmp
orb
lret
scas
outsb
pop
inc
enter
cmp
cld
sti
enter
sbb
or
loopne
fisttpl
das
cmc
jmp
add
push
push
in
inc
mov
rorl
scas
mov
mov
mov
aaa
add
add
rolb
repnz
inc
out
in
mov
jbe
cld
xchg
repnz
das
or
sti
and
sub
filds
scas
out
sti
sub
mov
xchg
mov
inc
jmp
pop
jle
in
pop
out
imul
sbb
mov
xchg
out
jle
in
aaa
xchg
shl
and
aaa
andb
jmp
jo
fisubs
mov
xchg
mov
adc
xchg
pop
jle
push
leave
lds
push
gs
push
daa
orl
cmc
jae
cli
jb
mov
xor
dec
jmp
stos
sbb
cmp
dec
push
lret
add
and
das
sub
je
xchg
jg
mov
sbb
incl
fmull
out
and
ficomps
ja
mov
shr
pop
jns
xchg
out
cld
std
iret
test
mov
mov
jns
xchg
push
mov
pop
in
pop
mov
pop
sub
sbb
jbe
dec
xchg
xchg
enter
shll
mov
xchg
lods
je
scas
pushf
outsl
scas
push
cli
cmp
xchg
pop
push
in
test
in
adcb
cmp
pop
mov
jmp
mov
xchg
pop
and
imull
mov
pop
in
pop
jle
scas
ds
cmp
cmp
nop
or
cmpsl
and
stc
in
orb
inc
movsl
dec
push
xchg
popf
sbb
loope
inc
xor
lret
sub
mov
jp
or
mov
push
mov
sub
cmp
sbb
pop
stc
in
inc
pop
push
clc
add
jne
fmull
enter
sub
loope
pop
mov
arpl
and
add
sbb
sub
xor
pop
jns
mov
pop
xor
outsb
push
loop
mov
fwait
loope
cwtl
shl
push
inc
inc
inc
lcall
ja
cmp
xor
xor
mov
xchg
cltd
scas
add
dec
loopne
lret
xchg
divl
and
shlb
clc
enter
and
sahf
out
push
pop
inc
push
in
lcall
mov
sbb
clc
call
mov
lret
cmpb
in
or
or
inc
bound
lret
in
push
loope
xchg
sub
decl
negb
add
cmp
int3
inc
sub
xchg
jg
fmulp
sbb
fstl
xchg
pop
pop
xchg
add
js
jle
in
insb
inc
xchg
lret
outsl
jno
pop
imul
movsb
insl
sar
dec
data16
push
repnz
mov
mov
cmp
mov
adcl
not
das
mov
xchg
jb
dec
fcompl
lds
push
jmp
lock
sub
or
xchg
jg
and
cmp
mov
push
outsb
in
pop
jle
mov
ss
push
jle
mov
xchg
lock
negb
or
pushf
pop
jle
in
leave
xor
jnp
pusha
sub
enter
and
in
push
xor
xchg
stos
out
adc
push
dec
movsl
push
jnp
xchg
xchg
pop
pop
testl
mov
rorl
xchg
addr16
xchg
and
sahf
sti
inc
ds
loop
cld
sti
enter
imul
mov
mov
gs
pop
jp
daa
and
outsb
push
pop
and
js
mov
iret
jo
scas
rorl
adc
push
repnz
and
add
jo
dec
adc
xor
adc
test
xlat
cld
mov
dec
mov
cmp
pop
jecxz
std
mov
jl
in
outsl
hlt
pushf
js
cmp
push
enter
mov
popa
inc
adc
mov
jg
xor
sbb
in
push
aas
jns
mov
adc
sub
inc
push
fisubs
scas
lret
jno
jae
push
imul
mov
fs
push
clc
mov
outsl
push
mov
lret
mov
sub
repnz
jl
sbb
cmc
les
mov
push
ret
cs
das
ljmp
inc
scas
cmp
xor
mov
lret
ja
arpl
pop
addr16
mov
out
xor
shl
mov
inc
imull
sub
ja
or
add
mov
dec
add
out
gs
rclb
lret
int
cld
repnz
jge
cmc
pushf
int3
in
data16
push
test
stos
sar
lret
das
xchg
fcomps
rolb
mov
mov
fbld
icebp
lds
out
pop
lret
das
mov
lcall
outsl
in
mov
and
out
dec
out
pop
push
sbb
mov
add
pop
and
add
js
hlt
je
in
mov
aas
dec
ja
les
cld
sti
pop
jg
and
cmp
add
imul
in
das
sbb
icebp
rcll
cld
jge
add
mov
setnp
in
mov
jecxz
into
push
mov
filds
mov
inc
es
daa
cmp
push
stos
int3
mov
jmp
dec
aaa
mov
ret
outsl
ss
stos
test
lret
lock
push
stc
push
int3
mov
sti
enter
inc
xlat
daa
pop
add
dec
and
enter
cmp
pop
lea
popa
jbe
and
lret
das
mov
xchg
add
popf
in
mov
std
scas
add
or
stc
stc
sub
sbb
cmc
daa
jb
cmp
in
pop
mov
lds
mov
pop
jle
jl
mov
xchg
loope
pop
push
push
fmulp
clc
faddp
scas
ss
lods
cli
sbb
jns
xchg
rol
nop
sub
or
fisubl
jns
xchg
push
pop
lahf
inc
cmpsl
lret
iret
pop
inc
stos
inc
jbe
xchg
pop
sbb
sahf
jp
sbb
and
enter
push
data16
test
pop
loope
repnz
das
xchg
or
scas
outsb
inc
xlat
xor
hlt
enter
dec
add
cs
enter
loope
jmp
jae
dec
xchg
mov
out
pusha
dec
insb
test
xor
out
add
pop
jle
dec
dec
fmulp
test
xchg
fidivrl
add
cld
repnz
pop
mov
mov
ljmp
and
sahf
mov
inc
sbb
mov
cmc
cltd
push
dec
pop
jle
and
movsb
outsb
sbb
test
repnz
aam
adc
mov
sarb
nop
or
ret
dec
xchg
stos
inc
and
pushf
lret
das
mov
cli
mov
ds
hlt
das
mov
flds
xchg
sub
mov
mov
mov
jmp
add
push
xlat
push
nop
nop
cld
repnz
das
mov
addr16
fs
scas
int
pop
lret
mov
xor
daa
sub
lret
das
mov
pushl
addr16
int
leave
jnp,pt
lret
xchg
jl
add
xor
adc
mov
adcb
aas
lea
jle
xchg
xchg
int3
add
add
push
pop
jns
addr16
mov
dec
inc
xchg
pop
jns
xchg
sbb
rclb
xor
push
jge
xor
cmp
test
cmp
and
mov
xchg
mov
fs
int
pop
jns
mov
shll
inc
les
in
cmp
mov
adc
je
sbb
xchg
push
adc
inc
xrelease
xchg
push
pop
sbb
into
xchg
jl
inc
push
ficomps
dec
testb
das
ljmp
or
popa
push
push
das
mov
mov
movsb
jno
mov
lret
xchg
mov
inc
jecxz
ja
dec
mov
and
or
aaa
mov
sbb
nop
mov
xlat
lcall
out
mov
push
es
xchg
pop
jle
jbe
popa
pop
lds
imul
nop
xchg
cmp
add
push
aaa
aaa
mov
push
das
add
jns
pop
aad
mov
sahf
shrd
xchg
push
pop
clc
cmp
jnp
push
jns
dec
inc
push
xchg
push
pop
jns
vmovntpd
mov
gs
loop
fadds
fwait
inc
pop
jmp
repnz
das
mov
pop
loop
stos
push
cmpb
das
mov
imul
push
rorb
aas
pop
jge
mov
outsl
aaa
inc
dec
sti
stos
mov
cli
aam
stc
in
je
xor
loop
xor
xchg
cmpsb
jp
push
xchg
add
fisubrs
adc
imul
jo
jmp
dec
bound
sbb
mov
ret
dec
inc
pop
std
mull
addr16
xchg
pop
lods
ss
adc
nop
push
inc
mov
enter
pop
push
jge
jg
dec
jmp
in
mov
outsl
daa
push
loope
mov
test
pop
cmp
cltd
push
xor
xlat
repnz
pop
jl
mov
ja
pop
mov
pop
loope
das
mov
mov
stos
insl
cmpsb
gs
xor
fs
and
movsl
pop
mov
fs
repnz
aad
out
shll
pusha
clc
enter
sti
dec
cmpsb
mov
pop
push
gs
mov
popf
imul
inc
cmp
xchg
sub
jecxz
or
ret
pop
jge
fildll
fisubs
scas
jns
fdivr
adc
ds
sub
fbstp
xchg
lahf
imul
inc
or
push
lock
in
fstl
in
scas
mov
jmp
mov
mov
xchg
sub
sub
repnz
ret
pop
jge
pushf
shll
mov
iret
or
mov
lret
push
ret
stos
add
xchg
cli
mov
dec
and
push
hlt
ja
jbe
das
push
fsubp
and
and
jbe
jb
loopne
out
jno
mov
repnz
mov
xlat
icebp
into
adcl
lret
das
mov
ds
stos
imul
js
jmp
out
imul
int
lahf
loope
sbb
loopne
lock
and
jno
or
and
add
andl
cmp
mov
lods
inc
out
cwtl
enter
js
in
jmp
xlat
xchg
sub
pop
jmp
nop
mov
cmpsb
or
jle
in
out
stos
sub
mov
in
leave
xchg
pop
mov
std
xor
mov
xchg
push
fimuls
adc
pop
movsl
outsl
sbb
dec
push
in
ljmp
imul
pop
sahf
adc
and
jns
gs
out
rcr
lods
xor
in
mov
shll
ret
mov
jns
jp
lcall
out
out
add
jb
cli
sbb
cmp
xlat
ljmp
in
movsb
jle
aad
add
cmp
push
in
mov
fldt
mov
xchg
adc
mov
arpl
and
dec
push
sub
push
pop
lds
mov
daa
pop
xor
std
repnz
adc
imul
or
nop
push
sbb
lret
mov
pop
iret
ja
andl
sti
scas
xchg
mov
sub
xor
xor
mov
add
pop
repnz
das
mov
insb
mov
arpl
rol
inc
mov
cmp
xchg
scas
mov
xchg
xchg
mov
scas
subb
sbb
gs
bound
inc
pop
pop
jns
les
std
fwait
orl
jl
das
je
xchg
push
fisubs
test
aad
in
fsubl
js
xchg
push
pop
jns
mov
jae
mov
cmp
cmp
cmc
xchg
add
jb
xor
cmc
in
leave
shl
dec
fucomp
cmpsb
notl
or
sub
outsb
test
or
movsl
sub
sbb
push
push
stos
xor
inc
add
sbb
push
inc
jp
and
xchg
and
imul
pushf
imul
xchg
shrb
pop
fmull
outsl
lods
icebp
jns
jmp
xor
xor
xchg
push
pop
sbb
scas
adc
lods
movsb
xchg
sub
scas
mov
movsl
js
sbb
pop
mov
test
mov
test
xchg
mov
lds
js
rolb
jle
negl
xor
and
pop
jle
in
xor
cmp
dec
add
das
xor
repnz
pop
test
lret
adc
cs
aaa
mov
adc
fcompl
sub
sub
push
xchg
mov
cmp
ja
pop
jns
xchg
push
adc
pop
pop
xchg
dec
in
clc
xor
xlat
and
insb
mov
test
pop
jle
ss
add
clc
jmp
and
cmpsb
ds
dec
add
jle
inc
repnz
adc
movsb
lret
mov
mov
cmc
cld
out
lods
mov
test
xor
cld
repnz
mov
mov
sub
lods
jmp
dec
mov
hlt
enter
popa
rcrb
in
out
adc
jns
popf
cmpsl
mov
mov
add
dec
in
and
rorb
orb
pop
cli
data16
xchg
pop
jle
mov
lods
negl
sbb
aaa
push
cmp
stos
adc
push
faddp
rcll
jp
xchg
pop
pop
mov
push
cltd
cmc
arpl
inc
sub
dec
or
xlat
cld
repnz
and
mov
sti
in
cli
mov
xlat
repnz
and
push
hlt
cwtl
or
mov
das
mov
je
jmp
xor
mov
jno
mov
push
or
in
idivb
pop
bnd
fstpt
repnz
imul
fsts
test
lods
mov
push
cmp
push
mov
repnz
aam
popa
mov
mov
pop
shlb
mov
es
xor
int3
mov
icebp
xchg
sub
pop
aaa
push
pop
fs
sbb
ja
rcrl
xchg
ds
jo
mov
fdivl
js
xchg
das
xchg
ds
jg
scas
mov
pop
loopne
cmp
dec
adc
repnz
push
adc
repz
enter
out
xchg
sub
inc
test
jge
mov
push
hlt
cld
push
sbb
xchg
xchg
ja
es
in
sbbb
mov
push
leave
jecxz
mov
loop
sub
in
inc
div
nop
lods
xlat
adc
mov
lret
mov
add
pop
lock
aaa
repz
jnp,pt
roll
and
psubusw
aaa
repnz
das
dec
sti
mov
int3
xor
mov
and
jge
dec
add
and
stc
pop
aad
cwtl
loopne
test
or
push
js
aam
mov
je
dec
mov
push
das
cld
jne
fldl
and
repnz
imul
js
lcall
ja
stos
shll
push
add
jle
ja
in
xlat
jae
dec
sub
std
push
lds
repnz
xor
sub
aad
repnz
hlt
and
stos
cmovae
or
mov
jge
jbe
lret
mov
adc
sbb
pop
cld
repnz
faddl
mov
xor
test
mov
mov
jns
add
shl
dec
push
call
int
daa
mov
mov
lods
stc
xor
inc
sub
and
or
imul
xorl
aas
shlb
inc
pop
rcrl
fimull
inc
pop
ret
add
dec
jne
out
sub
jnp
push
repz
fucomip
and
scas
sbb
stos
jnp
fwait
out
mov
cld
repnz
gs
cmp
stc
dec
and
cmp
sbb
ret
sbb
sub
sub
mov
cli
or
xchg
lock
pop
inc
dec
xor
ret
lret
mov
sub
ret
and
sbb
insb
sbb
fdivl
in
test
mov
add
sbb
adc
or
inc
aad
xchg
lret
sub
mov
push
mov
add
out
mov
lock
cmpsb
adc
push
stc
in
inc
popa
cmp
or
clc
sub
lods
in
pop
jle
addr16
dec
cld
out
jne
out
out
sbb
and
push
fld
inc
xchg
pop
test
repnz
sub
gs
and
xor
jge
in
add
and
jo
add
or
in
pop
jb
mov
mov
fnstenv
shlb
sbb
mov
add
cmp
mov
scas
mov
shll
cmp
lods
mov
dec
xor
jns
stc
push
call
sub
mov
xchg
push
es
adc
test
rorl
pop
push
pop
push
xor
or
lcall
jge
data16
jmp
fmull
cld
repnz
shll
mov
sbb
filds
lods
or
sti
out
daa
in
cmp
shl
xchg
pop
jle
push
loop
dec
adc
or
xor
bound
mov
xlat
dec
in
out
pop
jns
xchg
jmp
js
int
rcr
sbb
in
pop
and
cmpsl
pop
ret
popa
pop
stc
sti
enter
ret
repnz
xor
xor
scas
stc
repnz
das
sbb
pop
fistps
cmp
loop
jg
out
jmp
ja
ds
mov
jecxz
xor
xor
idivl
pop
cmp
in
pop
xchg
in
enter
fsubs
xchg
pop
jle
ror
xchg
pop
jecxz
enter
addb
ret
das
fsts
or
aaa
adc
sub
in
fs
pop
outsb
mov
repnz
mov
add
out
int
in
repnz
imul
inc
ret
cmp
mov
scas
fs
dec
add
mov
xchg
ret
clc
enter
nop
repnz
xor
in
xchg
aas
popf
xor
mov
add
sbb
nop
pop
push
pop
push
scas
mov
repz
inc
push
test
iret
mov
lds
mov
inc
xchg
cmp
fs
lret
or
mov
or
add
lret
mov
pop
push
fwait
out
inc
jae
sub
xchg
mov
out
test
outsl
in
adc
repnz
idiv
repz
ficomps
aas
imulb
push
subl
lret
das
mov
jle
or
scas
subl
cld
repnz
lret
cltd
push
test
xor
pop
pop
lods
inc
pop
xchg
fcompl
xor
xchg
pop
push
daa
and
mov
sub
popa
jno
sub
cs
je
in
sub
add
xor
add
dec
jp
lret
xor
mov
lea
pop
popf
sbb
int
hlt
mov
jle
enter
jge
xchg
mov
cld
jnp
xchg
lods
test
jmp
sti
gs
popf
in
and
sbb
dec
and
adc
stc
in
rcrl
mov
cld
popf
sarl
jle
in
lods
add
ljmp
jle
in
or
pop
orb
jmp
add
xchg
lret
and
loop
pop
mulb
mov
cmp
pop
stc
in
pop
and
in
loopne
loop
fdivs
ds
pop
jle
mov
pop
in
je
xchg
ljmp
push
and
cmp
in
mov
jle
in
mov
pop
imul
addr16
jg
and
test
ds
mov
fisubs
lods
mov
cld
mov
xor
mov
push
aam
faddl
xchg
int
mull
adc
jecxz
cmp
jnp
jle
nop
cli
rcll
pop
jmp
sub
sbb
out
inc
pop
jno
push
mov
das
push
xchg
jb
loopne
and
push
repnz
loop
pop
pop
and
adc
pop
jns
adc
pop
stc
stos
adc
xchg
push
fiadds
fimull
sbb
into
pop
cmp
push
frstor
mov
add
or
fs
jle
daa
jns
cmc
stc
in
pop
pop
xor
mov
ror
lods
notb
xchg
pop
jle
inc
mov
repnz
xchg
pop
jle
jns
std
cmpsb
imul
lock
nop
loope
lock
sub
ja
xchg
in
xlat
aam
aam
xlat
loope
sbb
jle
sbb
jp
adc
push
fimuls
cli
int3
je
test
adc
mov
pop
jns
xchg
fnstcw
sbb
dec
cli
insb
fwait
sbb
mov
jns
xchg
push
mov
cmp
ret
roll
ljmp
sbb
cmpsl
sahf
jb
lret
xchg
push
fiadds
cmpsb
mov
popa
arpl
fmulp
cmp
andl
insb
push
sub
inc
ljmp
dec
mov
out
pusha
push
in
push
pop
pop
pusha
ret
aam
push
sub
mov
jns
pop
push
jecxz
stos
lds
push
ljmp
xchg
cmp
imul
push
sub
clc
enter
loope
fidivrs
mov
push
rcll
jp
jg
imul
ljmp
xor
xchg
das
mov
in
lods
mov
xchg
dec
sarl
inc
mov
in
cli
sbb
jecxz
das
decl
cli
shlb
es
ljmp
nop
sarb
test
aaa
inc
jecxz
pop
arpl
fldcw
sbb
push
pop
jns
in
fdivrl
push
test
ja
imul
push
mov
mov
add
jb
in
pop
jecxz
pushf
insb
movsb
clc
ja
mov
mov
add
sub
cmp
cmp
inc
in
fwait
and
stc
lods
cmp
pop
ds
inc
push
xchg
push
cmp
fwait
stc
cltd
pop
jecxz
jge
push
push
pop
or
stc
in
rclb
lahf
fldl
pop
inc
sarb
xchg
ds
adc
cli
in
int3
sub
and
mov
in
pop
aaa
xor
out
cmp
das
jmp
cmp
imul
pop
or
mov
lret
mov
test
ljmp
pushf
fs
repnz
das
push
add
mov
jo
jae
repnz
das
mov
std
imul
xor
shlb
ficoms
rorl
popa
clc
inc
xchg
xor
sbb
sti
push
mov
je
xor
xchg
push
adc
subl
adc
add
pop
fistl
stc
jmp
movsl
lods
test
inc
rol
mov
push
mov
xorl
mov
xchg
ja
jmp
pop
mov
and
cmp
mov
es
pop
add
imull
mov
and
mov
test
pop
push
xor
pop
jle
imul
sbb
leave
lcall
inc
xor
or
adc
push
outsl
xchg
rclb
inc
sub
rolb
jb
repnz
mov
dec
insl
cmp
xchg
aaa
xchg
xorb
jns
daa
out
cmc
pop
aam
les
lcallw
in
adc
jo
push
movsl
xor
jge
in
jg
mov
push
push
xchg
divb
sub
add
pop
push
je
imul
mov
cmp
ss
dec
lret
sbb
or
add
lahf
mov
add
cmpsb
xchg
fidivrl
jge
fldenv
sub
pop
inc
mov
mov
fiadds
jle
negl
pop
lret
das
loope
push
lods
push
sbb
jle
in
inc
jo
mov
add
scas
jp
repnz
pop
sub
ja
jnp
jo
enter
call
in
cs
pop
jge
std
clc
pop
jle
negl
push
inc
je
mov
xchg
loopne
cld
mov
xchg
cmc
add
rcll
add
sub
lret
mov
mov
daa
repz
dec
jnp
pop
stc
nop
pushf
testb
sbb
dec
imul
lret
jno
jl
add
repnz
inc
push
push
mov
loope
add
lret
stos
iret
mov
gs
addr16
js
sub
and
add
mov
das
mov
loop
in
movsl
pop
cmp
pop
jle
in
add
fldenv
pop
sub
mov
fisttps
sbb
dec
jge
adc
fcoml
mov
sbb
or
les
fstps
dec
push
jnp
das
jle
dec
cmp
adc
lods
sbb
mov
cmp
xor
mov
lret
add
dec
sub
jp
lds
dec
stc
in
and
in
xlat
dec
lret
insb
inc
mov
test
xchg
pop
jle
or
dec
je
bound
add
pop
push
and
stc
movsb
inc
movsb
aas
cmp
hlt
mov
jmp
and
sbb
or
push
sub
test
lcall
in
in
xchg
pop
sub
cmp
push
mov
pop
adc
icebp
std
xchg
pop
jge
add
adc
or
stc
in
jmp
pop
cmc
mov
ret
fimuls
dec
ficomps
jg
jle
test
xchg
xlat
rorb
inc
vpmulhw
sbb
fisubs
in
pop
jle
xchg
int3
ds
mov
mov
stc
fwait
lds
mov
insb
and
xchg
jge
enter
pusha
sbb
nop
mov
mov
in
enter
stc
shll
cmp
popa
pop
repnz
das
sti
aas
into
mov
cmp
add
lret
das
mov
jl
and
lahf
push
mov
fwait
inc
mov
test
adc
mov
mov
mov
stc
xchg
daa
sarb
in
push
ficomps
popa
sbb
mov
inc
push
pop
jns
scas
and
in
jno
mov
push
jmp
push
sbb
imul
sub
cli
xor
sub
mov
xor
inc
sbb
scas
mov
loopne
scas
ret
sahf
pop
cmp
repnz
mov
xor
mov
popa
mov
xor
fldl2e
cwtl
in
hlt
and
mov
test
cmp
stc
imull
mov
cmc
in
adc
int
pusha
shll
in
pop
cmp
imul
lret
pop
loope
inc
loopne
or
pop
cmp
push
push
pushf
cmp
stc
in
xor
dec
add
shlb
shl
xchg
pop
movsb
es
inc
sahf
xchg
dec
push
pop
lods
test
mov
fdivl
je
jmp
jle
test
and
adc
xchg
push
inc
cmp
and
xchg
into
sbb
inc
pushf
in
jg
fdivrs
dec
dec
out
sbb
dec
inc
sub
cmpsl
repz
mov
out
push
stc
in
push
in
aam
xchg
repz
and
pop
jbe
push
jae
adc
xor
mov
add
enter
or
jns
in
dec
out
lds
mov
gs
xchg
ja
jle
sub
sbbl
sbb
mov
push
push
push
js
jns
xchg
xchg
mov
add
int3
jns
xchg
push
push
nop
fcomps
in
cmc
add
xchg
push
pop
sub
scas
push
push
pop
movsb
mov
push
dec
or
lods
cmp
jb
xchg
repz
push
lods
lock
lea
sbb
cmp
mov
inc
scas
mov
push
lcall
mov
cmp
pop
jg
sbb
icebp
or
ljmp
sub
enter
sub
dec
in
enter
cltd
add
cmpb
into
sti
fildll
jae
mov
fisubrs
inc
fisubrs
push
mov
pop
pop
sarb
xchg
jmp
xchg
pop
jle
repnz
in
mov
outsl
xchg
push
xchg
stc
in
call
or
xor
fidivl
lahf
inc
cld
sti
enter
in
push
cmp
sbb
lods
sub
xlat
dec
clc
ljmp
and
in
xor
jb
or
and
and
mov
xchg
aaa
es
cwtl
les
push
pop
jns
cltd
cmp
lods
xor
push
push
sub
xchg
jg
pop
or
push
pop
jns
mov
inc
mov
dec
push
pop
jns
and
mov
dec
and
sbb
idivl
cmp
sub
lret
and
and
push
mov
rorl
loope
sub
aas
rcl
iret
iret
push
xchg
jmp
repz
sti
lret
mov
or
jnp
pop
dec
xor
enter
sbbl
sbb
mov
mov
mov
stos
pop
jns
xchg
mov
fdivs
or
jns
xchg
push
lods
jecxz
mov
jnp
dec
lods
dec
push
pop
stos
pop
mov
push
cmp
mov
or
push
mov
adcb
push
push
in
loopne
mov
mov
repnz
das
sbb
mov
mov
and
cmc
into
ss
sub
jmp
jmp
smsw
ljmp
out
mov
cmp
mov
push
aas
and
jle
jae
push
pop
jns
mov
fwait
mov
pushf
xor
jns
xchg
popf
push
or
in
idivb
ja
lret
push
daa
pop
xchg
mov
arpl
scas
mov
lret
mov
cmp
sbb
shrb
scas
mov
daa
shrb
or
repnz
cmp
xchg
sbb
cmp
sub
popf
cmp
ficoms
hlt
shll
lret
jg
lret
jo
jecxz
imul
scas
mov
adcb
mov
or
aas
leave
push
adc
mov
and
mov
push
popl
in
mulb
scas
mov
subl
or
cmp
jns
orl
repnz
push
push
or
outsl
mov
ljmp
lahf
push
mov
cmp
in
popa
jecxz
cmp
jnp
and
orb
loop
jmp
push
fbld
test
loope
stos
call
int
adc
and
cmc
stc
in
jg
inc
shlb
int
into
pop
ficoms
leave
repz
pop
jle
mov
mov
and
das
repnz
xchg
push
inc
pusha
subl
cld
repnz
iret
xor
out
cld
mov
push
cmp
repnz
das
ret
test
shl
inc
jnp
repnz
das
mov
movsl
fdivs
sbb
add
pop
jae
cmpsl
fdivl
mov
push
push
mov
inc
or
mov
xlat
loopne
lcall
icebp
xchg
jg
pop
push
push
cld
sub
mov
xor
lret
jne
loope
jge
sub
in
xchg
repnz
jae
popf
bound
out
jmp
cmp
imul
mov
in
pop
mov
les
push
stc
jle
es
insb
jo
inc
inc
imull
lret
xorl
jecxz
pushf
mov
lret
mov
sbb
aad
dec
sub
lea
setg
movsb
and
sahf
cmp
push
les
out
sbb
sahf
in
mov
sbb
push
stos
jmp
outsb
imul
jne
popa
movsl
jnp
cs
sbb
in
rcr
fsubrs
jge
lret
mov
fcmovu
pop
cmp
shlb
sbb
xchg
sub
sbb
mov
and
pop
pop
stc
repnz
lcall
repnz
mov
inc
sub
in
jg
cmp
cli
push
adc
add
xchg
pop
jle
int
call
jge
inc
or
fistl
jae
jmp
es
xchg
dec
add
jle
in
mov
adc
shr
outsl
pop
test
xor
lret
jns
mov
jp
and
xchg
pop
cli
and
push
cmc
cs
dec
add
jo
push
ljmp
das
adc
mov
xchg
hlt
lods
cmpsb
es
xlat
xchg
mov
push
std
leave
mov
fs
repnz
das
mov
or
push
test
scas
notl
mov
cmp
adc
jmp
icebp
and
lock
js
clc
cmpsb
jecxz
adc
fs
lcall
lret
inc
push
mov
outsb
imul
movsl
jae
pop
jle
les
and
filds
xor
pop
jle
in
add
mov
xchg
add
jle
in
aad
mov
icebp
pop
pop
cltd
dec
lret
sti
enter
cmp
sbb
sbb
mov
lock
subl
das
mov
popa
mov
ret
fistl
sub
cltd
cmp
insb
test
mov
cmp
int
fidivl
hlt
xchg
das
xor
sub
cmp
mov
adc
adc
push
cwtl
insl
hlt
sub
mov
push
mov
std
pop
scas
decb
lods
cld
repnz
das
aam
fldcw
pusha
add
in
jg
push
bound
xchg
xor
mov
jl
jns
push
xor
aam
in
jns
jp
enter
adc
and
xor
push
fcompp
dec
lea
mov
jecxz
pop
pop
jns
adc
dec
into
lds
pop
and
stc
in
jg
inc
fldt
mov
imul
sub
mov
out
mov
xchg
adc
sub
mov
aaa
rorl
adc
cmc
sub
pop
stc
repnz
leave
ss
ss
and
lret
fistps
jmp
outsb
mov
scas
mov
and
jae
pop
jnp
xchg
rcl
call
sti
or
and
pop
dec
pop
stc
xlat
dec
test
pop
push
mov
xchg
cmp
mov
lods
jnp
mov
xchg
fdivrl
mov
repnz
in
mov
xor
mov
cmp
scas
pop
dec
push
ljmp
lods
in
sub
xor
adc
fadd
mov
ljmp
dec
cwtl
pop
sub
imul
adc
sti
inc
inc
inc
add
cmpsl
incb
xchg
cmp
aad
jns
xchg
push
jl
gs
push
and
inc
fs
mov
inc
push
pop
dec
or
cli
fwait
dec
imul
jle
in
mov
push
adc
into
sub
insb
in
xor
fwait
push
pop
test
repnz
das
jmp
jmp
xor
push
adcl
sbb
pop
jns
lea
or
cmp
push
mov
in
push
rorl
push
jp
ret
es
or
pop
icebp
inc
aas
stc
ljmp
mov
cmp
add
adc
pop
jns
ds
sbb
xor
cmp
adc
dec
pop
mov
pop
ja
cltd
fcomip
stc
in
pop
mov
cli
movntps
adc
popf
mov
aad
add
out
sarl
rolb
test
fwait
cltd
test
out
pop
jns
xchg
ss
cmc
pushf
popa
pusha
sbb
push
das
lret
pop
push
in
fcoms
mov
aad
scas
mov
pop
rclb
sbbb
testb
mov
or
pop
popf
aam
cli
xchg
repnz
das
inc
cmpsb
fs
jle
into
push
daa
dec
lret
das
mov
or
mov
or
pop
pop
stc
repnz
cld
add
mov
in
das
mov
insb
or
into
shrb
repz
repnz
mov
add
jne
in
div
lret
das
jmp
push
cwtl
repnz
insb
cmpl
cmp
pop
xor
fisubrs
jnp
repnz
mov
cmp
pop
fadd
inc
push
adc
lret
and
xlat
les
hlt
jg
scas
mov
fnstsw
inc
push
jno
in
in
enter
adc
push
test
sub
dec
adc
inc
lea
pushf
leave
cmp
xchg
lds
addb
lret
inc
ja
iret
jge
das
ja
inc
lods
mov
cmp
aam
lock
cmp
repnz
mov
xchg
cmp
ret
hlt
jge
icebp
xchg
das
mov
movsl
xchg
cmp
cmp
mov
decb
jge
rcrb
repnz
ds
sbbb
jle
scas
xchg
xchg
mov
adc
push
cmp
fcmovu
addr16
cli
pusha
lahf
pop
sbb
sbb
ja
ds
in
movsb
mov
xchg
sahf
loope
xchg
jo
pop
mov
imul
jmp
mov
and
inc
mov
xchg
jmp
lret
dec
xchg
jp
jno
inc
mov
mov
mov
sbb
cmp
adc
in
jg
mov
or
in
pop
popf
orl
jge
push
pop
jns
sbb
and
insb
lret
test
repnz
inc
jno
repz
mov
xchg
sub
sbb
and
adc
fistpll
mov
test
scas
mov
xchg
ja
std
loop
mov
ds
sti
movsl
pop
sub
jno
adc
lret
enter
sub
fldenv
into
stos
dec
cmp
movsl
andl
mov
lret
jmp
ds
sub
cli
enter
dec
or
mov
mov
push
ficomps
mov
xchg
ja
out
les
jbe
lds
daa
cmp
xchg
pop
scas
dec
ss
mull
fs
pushf
sbb
in
pop
jle
jg
jno
pop
cmpsb
fwait
jp
xchg
push
dec
adc
hlt
sarb
clc
in
flds
imul
loope
in
push
fimuls
pusha
arpl
lcall
jns
mov
xor
xchg
inc
adc
aad
mov
jb
fimuls
adc
pop
icebp
hlt
inc
enter
pop
jns
xchg
mov
add
lock
sbb
lret
fs
sbb
push
cwtl
adc
sub
cmc
xchg
fistpll
aaa
jl
iret
pop
out
scas
mov
bound
adcb
jbe
push
jnp
lret
es
dec
sbb
mov
pop
cld
call
loopne
lods
loopne
and
repnz
mov
test
xchg
pop
cmp
mov
or
and
jle
in
scas
pop
rcll
cli
lcall
repnz
mov
ror
in
xchg
adc
lret
das
mov
add
mov
jge
pusha
cmpsl
xchg
aad
sbb
pop
lret
das
mov
lret
push
outsb
pop
pop
ret
ja
mov
and
in
ret
test
push
cmp
push
add
sbb
jmp
stc
in
pop
lea
aas
jmp
push
jle
in
pop
jle
arpl
sub
xchg
pop
jle
inc
add
cmp
mov
cmp
test
jg
ficompl
lret
das
mov
rclb
fisttpll
adc
outsl
push
inc
push
pop
sub
xchg
inc
dec
fidivrl
js
sub
sub
mov
xchg
sub
cld
or
repnz
mov
jge
mov
out
add
out
lret
das
mov
adc
daa
pop
fwait
das
mov
fists
mov
sbb
shrl
or
insb
out
cmpsb
cmpsb
mov
mov
clc
lcall
lret
das
xor
popf
stos
adc
daa
lret
sub
aam
cmpsl
sub
scas
mov
xchg
icebp
sbb
ja
fs
lods
pop
sti
shrl
repnz
jg
pop
ds
jb
dec
add
roll
movsl
test
lret
das
mov
test
rclb
and
xor
sub
js
insb
dec
ficoml
test
mov
pop
jns
das
pop
rcr
pusha
into
enter
mov
xor
imull
jle
and
in
and
pop
adc
cmpsb
int3
cld
xchg
pop
jle
dec
cs
imul
loope
jle
in
jle
mov
outsb
push
shll
test
stc
in
fmull
insl
call
dec
mov
inc
in
in
pop
mov
mov
cs
insb
mov
pusha
mov
or
repnz
das
and
pop
imull
push
jnp
repnz
das
mov
arpl
imul
les
das
ror
sub
sar
lret
xor
cmp
fidivrs
and
in
sbb
mov
push
pop
jns
dec
stos
lret
nop
add
ret
xor
mov
pop
pop
jns
pop
popf
imul
xchg
jg
jne
std
dec
insl
cmp
int
in
xchg
pop
jle
jne
mov
sbb
nop
and
fsqrt
in
add
icebp
ja
dec
pop
rol
shlb
xchg
push
daa
scas
out
cs
jl
ja
in
das
jmp
adc
dec
adc
outsb
cmp
mov
lock
cmp
inc
fsubrs
icebp
int
pop
jle
push
inc
sbb
int3
fisttpll
xchg
pop
jle
in
sub
xor
into
jmp
iret
jle
in
ret
cmp
mov
repnz
xchg
pop
jp
sub
jecxz
outsl
dec
mov
mov
xor
cmp
or
repnz
das
fistl
jp
nop
jae
xor
push
lret
das
ds
hlt
cmp
sub
lods
sbb
pop
testb
xchg
shll
fiaddl
push
rol
sub
lret
das
push
fs
fld
pop
popf
sahf
fdivrs
lahf
mov
sub
mov
jns
or
sbb
stc
into
lahf
add
in
push
pop
sarb
in
cmpsb
mov
cmp
pop
call
mov
dec
jge
in
repz
adc
mov
xchg
pop
adc
repnz
push
mov
shl
xchg
pop
jle
sbb
aad
add
fiaddl
inc
xchg
pop
jle
pusha
push
outsl
and
pop
jle
in
movsb
add
dec
jl
pop
mov
dec
cmp
in
sbb
jp
addb
inc
push
cmp
not
and
lds
or
je
jmp
jns
xchg
and
lcall
ds
repz
xchg
push
outsb
sub
jne
mov
in
push
pop
and
cmpsb
sub
push
leave
lret
pop
cmp
nop
test
aad
mov
ficoms
ljmp
shrl
js
mov
or
jno
mov
mov
jns
cltd
test
add
sbb
jp
sarl
adc
mov
inc
lret
test
adc
jl
push
xchg
or
sub
dec
dec
and
repz
mov
fbld
insb
loope
pop
pop
jns
xchg
push
or
rcll
push
cmpsb
aas
mov
jns
sub
ja
jle
imul
ds
push
sbb
pop
stc
mov
jecxz
lret
imul
divl
inc
in
mov
lret
das
mov
jmp
and
xchg
pop
cmp
imul
adc
jle
in
test
lods
scas
sti
loope
jl
jle
in
sbb
or
fst
rclb
stc
in
pop
dec
aas
data16
in
xchg
inc
insb
jae
ja
das
lcall
in
movsl
imul
mov
xor
xchg
mov
jge
sub
pushf
mov
addl
sub
inc
xor
cmp
add
xor
xor
xchg
mov
sub
std
movsb
repnz
cltd
fcompl
sub
xchg
push
pop
jns
aas
call
fwait
cld
pushf
stos
or
in
mov
imul
test
ja
xor
push
mov
js
pop
inc
in
pop
jle
or
add
ret
mov
pop
jle
jb
ss
aam
gs
xor
adc
in
sbb
mov
cli
xor
xor
addr16
jle
rorl
dec
xchg
xor
stc
test
aas
and
or
std
in
movsb
popa
fnstcw
test
sahf
adc
fs
lock
stc
in
popa
das
mov
cmpsb
test
xchg
xor
adc
fimuls
jno
sub
notb
pop
sbb
in
jb
imul
dec
gs
repnz
jmp
fwait
js
mov
mov
sub
jg
cli
dec
scas
xchg
xchg
ja
jge
push
insl
mov
xchg
inc
lods
daa
ret
inc
adcl
in
popw
cmp
xor
cmp
add
in
pop
out
pop
mov
arpl
aad
jne
xchg
pop
jle
mov
or
mov
xchg
pop
jle
dec
jecxz
es
aas
sbb
in
cmp
dec
adc
mov
push
jge
push
stc
in
sub
lret
or
maxps
jns
xchg
mov
cmpsl
iret
jb
cwtl
mov
test
or
in
push
pop
push
test
stos
dec
in
test
fs
push
push
xchg
popa
cmc
or
lret
push
dec
or
ret
push
insb
repnz
mov
jb
sub
adc
and
scas
mov
adc
imul
sub
jno
sbbb
data16
enter
aaa
repz
mov
lods
test
xchg
push
mov
inc
in
repz
mov
dec
mov
repnz
das
in
pop
in
xlat
inc
insl
ds
scas
pop
in
das
mov
adc
sub
loope
stc
ja
jge
outsb
rorl
inc
sahf
sti
movsl
mov
jl
in
pop
mov
inc
pop
jns
jle
xchg
fldt
add
cli
loopne
cmpsb
push
adc
stc
in
pusha
sbb
ja
js
mov
jp
push
stc
in
pop
aas
mov
mov
inc
in
pop
jle
js
in
pop
xchg
jno
or
jne
pop
jle
mov
sbb
dec
mov
in
js
andl
jns
in
pop
je
pop
das
aad
iret
ja
jno
and
sub
jl
repnz
xchg
mov
jae
lahf
mov
inc
add
das
adc
sbb
mov
pop
stc
repnz
and
push
sahf
add
in
push
fiadds
fcomp
daa
lret
push
jl
xchg
push
pop
jns
dec
arpl
dec
xchg
inc
stc
sti
in
xchg
mov
test
divb
fimuls
pop
dec
imul
ja
mov
out
stc
notl
cmc
xchg
cmpsb
adc
ljmp
ret
aas
or
add
xor
jmp
sub
mov
ss
je
or
xchg
pop
lcall
jmp
popa
mov
lock
std
in
lcall
fnstenv
in
push
pop
xchg
mov
xor
dec
xchg
push
stos
sbbl
dec
test
int3
sahf
in
out
xchg
pop
std
fdivl
cmpsl
xor
hlt
les
imul
movsl
inc
leave
xchg
jnp
push
lds
shl
jmp
outsb
jmp
cmp
lods
test
mov
addl
jl
mov
roll
fs
in
push
pop
cmp
jne
lcall
push
pop
jns
push
xchg
or
into
outsl
into
sbb
les
in
pop
fst
je
iret
jp
or
lret
not
dec
ja
addr16
in
xor
rorb
sbb
jns
xchg
cmp
loop
push
adc
mov
stos
push
sub
or
jnp
call
arpl
or
push
lret
das
mov
add
repnz
jb
out
or
loopne
pop
fistpl
xlat
mov
daa
cltd
lods
add
ja
mov
repnz
das
iret
sti
cmc
call
shlb
mov
cmpsl
inc
xlat
jecxz
adc
pop
sub
outsl
add
xor
pop
scas
pushf
in
or
notl
and
pop
pop
ss
ja
mov
jnp
jl
loopne
xor
int
das
mov
jbe
cmp
mov
fs
mov
pushf
and
cmp
imul
das
or
pop
push
call
lret
das
mov
add
idivl
lret
das
mov
cmp
adc
cwtl
das
mov
pop
cmp
and
ret
js
cs
jge
lret
pop
in
and
incl
fists
push
cmp
xchg
pop
add
push
mov
and
add
gs
jae
iret
les
je
push
pop
jns
test
std
repnz
mov
mov
push
call
stc
insb
shrb
pop
jns
xchg
out
pop
aad
jbe
es
adc
aam
push
push
fistps
xor
scas
mov
sub
std
xor
inc
pop
mov
js
repnz
pop
imul
in
xchg
pop
adc
jb
pop
mov
mov
aad
lret
ja
icebp
ss
mov
pop
jne
in
pop
loop
lea
inc
or
pop
sti
pop
lcall
push
enter
and
cmpsl
xchg
jbe
inc
in
dec
xchg
pop
push
faddp
cli
jle
add
mov
or
xor
push
pop
jns
xchg
adc
ret
das
add
and
xchg
push
xor
iret
inc
push
push
popa
sub
push
ror
add
stos
inc
and
out
scas
mov
sbb
popl
xchg
cmpsl
xchg
and
scas
enter
xchg
ja
cmp
push
xor
movsb
ret
mov
push
mov
movsl
js
repnz
repnz
mov
mov
sbb
loop
inc
xchg
repnz
das
mov
inc
sub
stos
arpl
std
adc
das
mov
imul
int
inc
mov
addr16
aad
shr
mov
jle
in
rcll
mov
or
fsubr
mov
aaa
loop
in
pop
push
adc
imul
pop
add
sbb
subb
pop
js
and
jmp
sub
stos
lods
sbb
inc
push
stos
push
xor
scas
mov
pop
cs
or
scas
push
mov
bound
jnp
mov
lods
pop
mov
leave
push
sbbb
sbb
lret
stos
int
push
mov
lahf
jecxz
stc
out
mov
cmc
mov
xlat
aas
imul
int
fwait
mov
scas
clc
cwtl
and
stc
arpl
jmp
pop
loop
xchg
pop
jns
ljmp
push
inc
mov
jg
mov
jb
pop
mov
xchg
add
pop
jle
iret
inc
hlt
inc
pushl
dec
mov
in
add
xchg
fmuls
and
sahf
sub
lret
das
je
dec
fdivrs
cmp
xchg
mov
sti
mov
xchg
lds
xor
stos
mov
push
push
arpl
movsl
ret
call
test
pop
pop
jns
xchg
mov
jg
jno
lahf
adc
inc
push
dec
outsl
rolb
fimuls
insl
rorl
call
bound
aad
mov
mov
push
pop
jns
or
ljmp
pop
jns
push
icebp
les
inc
or
mov
push
mov
in
sub
rcr
pop
jae
lcall
aas
push
cwtl
stc
dec
addr16
inc
ds
jne
call
repnz
cmp
and
mov
mov
sub
add
lret
dec
lods
mov
mov
in
adc
test
cmp
push
sub
addr16
sbb
in
push
pop
pop
rcll
cwtl
sbb
das
enter
jg
pop
jns
iret
adc
out
movl
cmp
popa
adc
mov
test
hlt
imul
out
pop
call
cmpsb
xor
out
mov
jl
add
sarb
call
cmp
jae
cmp
push
lahf
ds
cmpsl
inc
bound
mov
test
and
mov
cmp
pop
leave
faddl
nop
shll
mov
and
pop
imull
ja
xor
jecxz
sub
sub
loop
add
into
mov
in
push
pop
jno
mov
or
loopne
in
jae
push
pop
jns
rclb
aad
mov
stc
and
into
aam
enter
and
xchg
lret
ret
mov
push
xor
push
push
push
mov
pop
adc
mov
xchg
lret
mov
icebp
sbb
and
fdivr
repnz
das
inc
addb
lds
mov
or
ja
cld
movsl
push
pop
lcall
add
aas
mov
pop
dec
pop
aas
fsts
cltd
xchg
imul
gs
fcompl
inc
scas
mov
in
mov
leave
sbb
cs
xchg
xor
cltd
outsl
push
pop
jns
xchg
je
xchg
xor
pop
int3
adc
in
push
out
and
push
rcll
xchg
pop
jge
jnp
jmp
decb
jns
loopne
dec
xor
test
sub
mov
es
sbb
xchg
push
pop
xchg
mov
stos
or
das
incb
xor
jo
ja
dec
xor
xor
mov
xchg
rclb
in
pop
xchg
sub
xor
dec
pop
clc
mov
cmp
mov
sub
int
xchg
popf
dec
push
adc
lret
mov
notrack
mov
sbb
fldenv
mov
insb
pusha
jmp
inc
pop
jns
stc
pop
test
and
push
sub
scas
mov
cmp
push
ds
push
push
mov
sub
shl
or
repnz
add
jmp
lods
in
mov
cmp
ret
mov
xchg
pop
jle
mov
xor
mov
sub
stc
in
jno
or
pop
inc
shlb
pop
jns
push
pop
icebp
mov
sbb
mov
in
sbb
cwtl
sbb
ljmp
pop
jle
nop
lret
or
inc
xlat
aas
add
sub
pop
cmc
aam
add
or
push
stc
in
push
push
pop
sbb
pop
stos
xlat
inc
mov
inc
sbb
jle
adc
jecxz
mov
inc
jle
pop
movsb
add
sub
stos
imul
out
or
lret
push
xor
movsb
popa
jg
pop
jns
adc
mov
ret
jge
and
jle
in
add
push
loop
out
imul
jnp
and
mov
xchg
lods
xor
mov
mov
jns,pn
dec
aaa
faddl
mov
jecxz
pusha
mov
rcrl
or
jbe
ret
sub
mov
or
insb
sahf
sub
mov
xorb
mov
scas
mov
retw
in
xor
pop
sub
insl
fucom
jnp
mov
lret
das
sti
imul
fcompl
add
sbb
ja
repnz
aas
fisubrl
xchg
push
xchg
rcll
popf
lret
mov
cwtl
out
cmpsl
imulb
test
xchg
sbb
xchg
pop
dec
repnz
das
pop
push
icebp
daa
cli
mov
aaa
jmp
das
mov
repz
lods
push
jno
push
mov
inc
pop
mov
push
or
and
push
cli
int3
rolb
insl
xor
mov
std
cmpb
loope
jecxz
add
xchg
jg
jge
and
dec
loope
sub
stc
es
cwtl
out
ljmp
inc
loop
push
jp
addr16
jae
aas
rcrl
dec
repnz
inc
aas
cmp
cli
sub
lahf
jo
or
lret
pop
je
inc
sbb
cld
sti
enter
add
adc
lret
das
mov
push
test
outsb
xlat
sbb
jnp
pop
stc
mov
in
loop
pop
out
repnz
xchg
fisubl
jbe
lds
out
push
repnz
das
mov
xchg
and
rcll
test
mov
js
fs
inc
push
sbb
repnz
jp
popf
push
mov
jl
dec
inc
jge
aas
xchg
scas
and
sahf
pop
sub
mov
mov
and
xor
mov
cmp
inc
test
in
icebp
xchg
push
mov
aad
add
inc
pop
jns
out
mov
pop
subb
lret
arpl
std
xor
jb
add
int3
pop
lret
mov
pop
fstpl
mov
pop
lret
inc
movsl
pop
cmp
cwtl
shlb
sti
sbb
push
out
fsubl
cmp
and
fistpl
into
sub
data16
pop
sahf
adc
jg
enter
mov
fndisi(8087
mov
jl
in
mov
shld
jne
mov
mov
mov
aad
jb
jmp
rcrb
xor
adc
cmp
adc
xchg
imul
sarb
adc
pop
lock
sub
aad
sub
push
das
arpl
out
fistpll
out
repz
test
outsb
sahf
mov
in
aam
loopne
repnz
das
mov
fcmovnu
fcompl
lret
das
mov
jl
xchg
cmp
test
lret
and
lods
ret
test
jg
fadd
aad
pop
pop
fdivp
push
fiadds
inc
test
in
cmp
xchg
push
xchg
push
push
data16
and
pop
sbb
adc
nop
xchg
push
pop
jns
sbb
imul
push
pop
jns
leave
xchg
sahf
loop
test
jno
adc
add
inc
jns
add
sahf
lds
movhlps
and
clc
das
mov
rolb
jecxz
mov
and
mov
mov
push
aad
ret
cmp
repnz
das
fisttps
cmp
les
lret
mov
scas
and
adc
out
movsl
sbb
ds
fwait
aam
mov
das
mov
push
das
es
push
inc
xchg
adc
cld
repnz
jae
aad
pusha
ljmp
pop
push
cld
repnz
das
rclb
fsubr
stos
clc
fdecstp
cltd
jb
xchg
sbb
stos
xor
imul
into
gs
notb
in
pop
gs
hlt
lds
dec
dec
hlt
rorb
xor
jbe
scas
lds
outsl
insl
cmp
ret
ret
mov
lret
jle
or
adc
adc
ja
das
fldt
cmp
or
negl
mov
call
cmp
jp
stos
enter
pop
mov
ret
dec
mov
int
ficomps
cli
jno
addb
add
mov
in
adc
inc
sbb
sti
call
out
add
es
ret
push
nop
aas
xchg
pop
jecxz
fnstenv
adc
arpl
or
mov
leave
sub
pop
adc
xchg
repnz
mov
jp
jne
insl
lods
sub
scas
mov
leavew
add
sub
xor
in
jle
out
and
and
pop
stos
cmp
and
or
shrb
xorb
sbb
push
pop
jns
in
shl
movsb
mov
mov
in
xor
xchg
icebp
lea
imul
movsl
sti
stc
test
dec
inc
pop
mov
icebp
in
pop
jle
outsl
xchg
enter
and
fnsave
xchg
pop
jle
jns
fwait
jg
xchg
jae
sbb
push
rcrl
in
vpxor
imul
testb
stc
in
movsb
push
xchg
jns
push
or
stc
in
pop
outsb
sbb
fisubrs
dec
fsts
inc
pop
leave
cwtl
aas
lds
in
sub
mov
scas
sub
pop
es
loopne
cmp
jmp
in
pop
jle
fdivp
packssdw
or
xchg
je
pop
jle
jp
loop
dec
sbb
inc
out
dec
clc
enter
lea
test
test
lods
pusha
cmp
lods
mov
into
pop
int3
pop
inc
push
sahf
pop
xchg
push
fidivrs
xchg
mov
mov
xor
pop
sbb
mov
stos
sbb
jne
mov
in
into
iret
cli
jns
jmp
arpl
add
loope
sub
filds
pop
lock
daa
dec
mov
jge
lahf
sbb
sbb
pop
adc
in
popa
repnz
xor
pusha
xchg
or
scas
mov
test
mov
pop
das
scas
pusha
sub
scas
repnz
pop
fs
loop
push
outsl
or
repnz
and
cs
pop
fimull
mov
inc
shlb
mov
in
rcrl
mov
mov
aaa
mov
mov
push
lods
mov
dec
dec
jb
leave
inc
push
mov
repnz
mov
test
pushf
in
jns
xchg
das
mov
stos
cmp
test
dec
mov
mov
stos
test
mov
xchg
xor
arpl
inc
faddp
shll
mov
xorl
loopne
cmp
jo
xchg
sbb
lock
lock
sub
rcrl
das
jmp
push
inc
mov
xchg
adc
lret
das
mov
ja
sbbl
repnz
sbb
mov
ss
das
mov
mov
jo
and
jbe
pop
xchg
repnz
das
and
adc
cwtl
push
add
cmp
jbe
push
addb
dec
add
mov
mov
mov
movsb
mov
cmpsb
rcrb
loopne
jle
popf
push
mov
jp
inc
ja
mov
lcall
sub
dec
pop
jge
cmp
pop
imulb
jno
cmpsb
ret
in
xchg
push
pop
sbb
or
in
pop
int3
pop
repz
dec
xor
jmp
mov
mov
ret
inc
mov
das
mov
xchg
lcall
daa
dec
xchg
dec
aaa
mov
enter
repnz
dec
cwtl
pop
jns
xchg
push
mov
inc
jae
adc
icebp
out
leave
xchg
push
shlb
cli
imul
lods
movsb
push
mov
mov
in
cmovb
xchg
sub
pop
fidivrs
in
pop
or
cmp
cltd
and
pop
enter
jns
cmp
outsl
testl
je
jns
xchg
adc
and
jp
push
icebp
adc
repnz
leave
std
cmc
imul
aad
mov
sub
lret
das
mov
loop
adc
enter
add
push
or
add
xchg
xor
dec
cld
repnz
sti
sbb
and
mov
imul
les
repnz
stos
push
mov
sbb
mov
lret
mov
xlat
cmpsb
test
out
cmp
repnz
xor
out
and
adc
out
push
cmp
fxam
inc
jg
dec
shl
and
loopne
imul
stos
mov
pop
ret
enter
leave
push
out
pop
push
inc
jns
inc
cli
enter
xchg
iret
aam
cld
pop
jp
out
flds
subb
and
inc
mov
sub
rcl
add
dec
pop
stc
repnz
in
stc
out
xorl
xchg
jg
loop
mov
and
outsl
mov
lods
movsb
inc
jle
fsubrl
mul
push
pop
jns
cmp
loope
in
push
test
xchg
out
push
push
add
stos
sub
sub
mov
xchg
push
movntq
out
xor
daa
or
pop
and
ds
pop
mov
negb
cwtd
popa
jmp
stc
xlat
pop
incb
cmp
pop
int3
pop
lds
cmp
push
mov
xchg
pop
int3
nop
adc
xor
out
enter
pushf
mov
mov
xchg
xchg
fs
jb
dec
lret
inc
sbb
lret
inc
sbb
xor
andl
scas
mov
inc
add
jnp
fcomps
scas
mov
push
adc
lcall
push
jl
loop
sub
mov
pop
pop
call
xor
in
pop
fbstp
sub
mov
xchg
pop
jle
test
aas
jnp
movl
xor
clc
push
xchg
je
lds
fbld
dec
repnz
push
repnz
out
or
push
inc
and
mov
in
fsts
int3
in
pushf
xlat
adc
aam
push
jl
cmp
repnz
das
lcall
leave
dec
mov
loope
jecxz
das
mov
out
fists
mov
jns
popf
icebp
decb
jmp
clc
mov
pop
in
push
pop
stc
aad
xor
and
xor
jno,pt
test
mov
sbb
push
pop
jns
xor
add
sbb
enter
jns
xchg
inc
or
sarb
adc
xchg
push
xor
cmpsb
lods
mov
ficoms
mov
inc
pushf
test
sub
test
insb
cmpsl
adc
push
pop
repz
aaa
insl
adc
in
out
jo
repz
push
cmp
outsl
pop
sub
loop
jecxz
pop
push
xchg
inc
cmpsb
jne
sub
push
pop
jns
cmp
movsb
mov
adc
jns
push
lret
scas
daa
in
xor
jbe
inc
clc
enter
imul
sbb
cwtl
popa
out
sbb
incl
jnp
mov
repnz
movsl
or
adc
or
enter
jns
and
mov
flds
orb
jecxz
add
sub
sbb
pop
push
cld
xor
dec
and
jne
pop
pop
jl
cmp
push
xor
xor
aas
xlat
jnp
adc
sub
ljmp
cmpsl
xor
xor
das
sub
inc
stc
insl
push
inc
pop
inc
fstpt
cmpsl
cmp
cmp
int
cmc
jns
dec
mov
sahf
adc
clc
fucomi
pop
pusha
mov
scas
mov
xchg
mov
cmpsl
loope
inc
loop
sub
jmp
test
jbe
push
fistl
insl
inc
enter
stc
in
enter
push
lret
dec
mov
add
in
pop
or
cmp
add
sbb
lahf
pop
cmp
sbb
mov
mov
pop
sbb
les
push
sub
lret
das
decl
imull
rcll
jge
inc
mov
repz
fwait
mov
xchg
ret
lods
cmp
rorb
adc
jne
lods
pusha
stc
in
jg
mov
adc
sahf
xlat
sub
fsub
xchg
pop
jle
shrl
sbb
mov
jg
sbb
mov
imul
cmp
jle
enter
xchg
xor
loop
mov
cmpsb
out
enter
push
xchg
popf
add
int
or
mov
mov
push
add
mov
mov
call
shrb
into
fimull
xchg
lret
cmp
pop
je
cmp
cltd
inc
lea
outsl
icebp
or
pop
dec
std
jmp
sub
lret
mov
dec
cs
sub
xchg
jg
in
jne
lods
lods
mov
addl
mov
mov
mov
xchg
addr16
aas
push
mov
jns
cmp
lret
das
leave
sub
sub
je
jge
in
jnp,pt
sbb
inc
cmpsl
dec
fwait
mov
pop
jle
dec
lea
pop
ret
xchg
pop
jle
imul
sub
sub
stc
test
movsl
jmp
cmp
mov
lds
jbe
das
and
jp
das
mov
aaa
mov
jbe
mov
cld
jnp
mov
call
dec
inc
pop
jae
jp
xchg
das
pop
daa
jmp
stc
repnz
cmp
int3
cmpsb
das
cltd
jl
mov
shl
pop
jns
inc
outsb
movsb
lea
hlt
repnz
sub
mov
jg
loopne
and
scas
mov
loopne
mov
xor
repnz
mov
aaa
add
jecxz
mov
push
add
and
xchg
ss
mov
scas
in
pop
jle
mov
aad
inc
test
lahf
mov
stc
push
jl
aad
repz
clc
or
push
mov
cltd
hlt
xchg
in
gs
popf
dec
xchg
pusha
jge
ljmp
clc
icebp
or
cmp
iret
mov
mov
cld
repnz
add
lcall
stc
test
into
xor
cli
lea
pop
fs
std
jnp
imul
iret
push
cmpsl
pop
pop
adc
test
push
ficoms
sub
in
ja
xchg
and
ljmp
lret
mov
aaa
loope
arpl
and
iret
subb
cld
repnz
inc
gs
orl
leave
lret
jl
out
xor
xchg
cmp
push
std
mov
cmpsb
ja
jns
xchg
push
mov
rcll
mov
push
fucom
xchg
push
pop
xchg
add
mov
add
icebp
lret
adcb
std
pop
pop
jns
sub
outsl
add
push
pop
cmp
xchg
adc
pop
aas
cld
repnz
das
sbb
int
jg
or
lret
das
lcall
cmpl
add
jo
or
fwait
push
mov
mov
stc
test
mov
ss
out
mov
xchg
pop
inc
push
fbld
inc
je
or
fadds
mov
test
js
jae
and
stc
repnz
je
fistl
cmp
aaa
das
mov
jecxz
notl
add
sti
leave
lret
int
fdivr
lods
add
mov
in
pop
mov
popf
jge
aad
and
outsb
mov
jl
xchg
scas
sub
enter
mov
cmp
mov
push
fiadds
fcmovb
dec
lcall
jb
or
mov
xor
fwait
lret
in
punpckhwd
mov
stos
lret
sub
lahf
gs
push
mov
sbb
nop
sub
xchg
mov
sbb
ss
out
pop
fptan
push
pop
pop
fsubrs
jns
ljmp
cld
pop
adc
xchg
xlat
adc
int3
and
dec
lock
das
mov
insb
pusha
aaa
jns
lahf
pop
xchg
mov
and
jns
sub
mov
pop
inc
pushf
inc
insl
in
push
pop
mov
mov
movsl
inc
pop
ja
sbb
rcll
hlt
dec
cmpsl
cld
repnz
mov
pop
inc
sub
inc
add
das
mov
push
and
hlt
std
add
popa
lcall
test
loop
aad
pop
scas
mov
dec
sbb
test
sti
enter
push
clc
cmp
jmp
cld
cwtl
mov
inc
adc
lret
movsl
inc
inc
addl
repnz
push
mov
ret
inc
stc
in
push
fwait
pop
push
dec
out
adc
mov
pop
jle
inc
in
pop
ret
sbb
push
ficomps
sbb
mov
rcl
pop
cmp
xchg
jns
mov
adc
xchg
add
adc
popa
mov
inc
inc
ret
or
mov
sub
dec
ret
popa
hlt
inc
mov
mov
dec
clc
xor
mov
pop
cmp
lret
mov
test
add
and
and
out
addb
mov
mov
cmp
push
lods
and
lret
das
mov
addr16
int3
cltd
or
lret
fs
lret
pop
cltd
into
iret
dec
jns
xchg
aaa
subl
dec
jp
in
push
pop
pop
int
stos
fnsave
xchg
sub
cmp
add
pop
mov
or
ljmp
lret
das
mov
test
loope
pop
or
imul
repnz
sub
in
enter
push
or
pop
mov
pop
fsts
xor
xchg
dec
pop
jle
in
add
arpl
fidivrl
aaa
orl
stc
repnz
and
clc
je
mov
pop
add
cmovb
mov
movsl
shrb
inc
sub
addr16
cmp
cmc
and
mov
mov
xchg
in
dec
jge
cmpsl
pop
aas
popf
xor
pop
jns
lret
or
mov
iret
pop
clc
jo
pop
jns
lds
mov
mov
sub
pop
jns
xchg
jecxz
enter
add
inc
out
cmp
xchg
push
jl
mov
lcall
push
pop
add
push
cli
or
stc
xor
scas
mov
cmpsl
lea
jmp
sbb
bound
mov
cmp
popf
mov
jl
xchg
jnp,pt
insb
dec
xor
lds
xchg
adc
pop
ljmp
add
push
xor
cmc
add
inc
dec
ficomps
pop
dec
test
mov
lret
xchg
push
push
and
aam
xor
int
into
inc
insb
cs
xor
sub
jl
or
jns
stc
jp
mov
jb
loop
imul
es
in
enter
fistpl
lds
mov
inc
and
sub
xchg
push
pop
adc
clc
out
clc
imul
sbb
out
xor
cs
jle
ja
sub
imul
out
jg
cmp
xchg
pop
clc
and
fwait
ja
bound
xchg
pop
jle
mov
cltd
mov
or
xchg
pop
jle
xor
push
sbb
popf
and
cmpsb
xchg
cmp
imul
inc
dec
scas
mov
push
in
int
jp
dec
rol
cwtl
leave
mov
lret
sub
insb
das
and
nop
ds
ja
cmpsb
int
pop
push
push
pop
jns
jp,pn
in
jne,pt
pushl
xlat
pop
jns
xchg
inc
outsl
mulb
imul
loop
jns
inc
adc
repz
push
pop
notl
loop
icebp
enter
sarb
push
jge
jmp
cltd
out
pop
scas
mov
es
sti
sbb
inc
fstpl
xchg
mov
shll
jno
ljmp
inc
sub
loopne
in
stc
mov
xchg
das
mov
xor
enter
dec
pusha
iret
lret
dec
sbb
ds
lret
pusha
hlt
jns
and
adc
scas
in
aaa
xchg
pop
ja
push
jg
pop
jns
imull
xor
xchg
or
cld
repnz
and
shll
mov
xor
jmp
repnz
das
mov
pop
dec
in
add
sub
push
lret
das
mov
sub
imul
repnz
push
call
lret
add
cmpsb
popf
cmp
subl
mov
fcmovnbe
adc
push
ficomps
sti
lods
jns
nop
insl
aas
xchg
add
fs
jns
xchg
xlat
push
stos
mov
inc
std
repnz
jg
or
js
sbb
addr16
pop
jle
or
lods
stos
jne
adc
xchg
add
stc
in
dec
or
xadd
sbb
enter
inc
iret
mov
xchg
push
fmulp
imul
cmc
mov
add
adc
push
sub
mov
adc
ds
lret
dec
gs
and
and
in
jle
in
pop
dec
inc
dec
or
pop
pop
mov
in
pop
popa
je
jl
orl
in
pop
jle
imul
and
jg
pop
jle
lret
test
in
cli
cmp
das
xchg
jle
in
add
call
fisttpl
cwtl
lahf
mov
xor
in
push
add
js
in
test
out
dec
sbb
inc
xor
movsl
imul
push
pop
xor
xchg
mov
cmp
jecxz
push
pop
jns
cli
sub
mov
jg
lret
mov
pop
jns
push
aam
pushf
cld
xlat
mov
cwtl
cmp
sbb
jg
out
movsb
push
out
push
pop
jns
addr16
rcr
ja
rorb
pop
jns
xchg
int
lcall
or
fwait
into
ja
xchg
push
dec
lea
nop
test
lds
push
xchg
adc
fnstsw
rep
notb
imul
loope
repnz
js
or
mov
push
sbb
mov
push
add
hlt
adc
hlt
pop
fcomps
add
pop
add
push
add
and
inc
icebp
and
adc
jmp
cld
repnz
jne
jle
dec
jecxz
es
dec
popf
xchg
aad
mov
testl
pop
jns
mov
xchg
push
pop
addr16
in
out
out
mov
pop
lock
adc
iret
pushf
imul
call
or
or
ja
gs
lods
dec
mov
cmpsb
out
sub
jns
cmp
mov
mov
mov
inc
push
subl
mov
test
pop
xor
out
insb
sub
cmp
repnz
das
adc
xchg
rolb
outsb
jp
mov
aas
or
sarb
enter
and
das
mov
or
add
clc
lret
das
mov
pop
mov
fwait
cs
data16
or
mov
insl
shrl
fwait
arpl
pop
call
cmp
jno
sub
adc
xchg
ja
or
sbb
jae
or
lods
jl
int
sub
scas
mov
sub
aas
sbb
ljmp
enter
orb
repnz
loope
xlat
sub
add
repnz
lahf
imul
nop
and
lcall
ss
lea
jg
xchg
inc
adc
cli
loope
sbb
xchg
shlb
mov
js
testb
mov
fsubrp
adc
std
pop
scas
mov
dec
ja
sti
out
imul
call
repnz
lods
jne
ret
nop
pop
jnp
out
outsb
xchg
das
lcall
cmp
out
js
inc
add
sbbb
cmp
aam
movsb
pop
jns
xchg
jecxz
fsubrs
hlt
and
sub
fiadds
mov
sub
imul
les
add
sub
or
mov
jae
mov
xchg
pop
loope
clc
hlt
cmp
stos
out
dec
cmp
por
test
pop
repz
cld
lret
sub
imul
xchg
fildll
pop
cmp
mov
fistpll
pop
cmp
or
fbld
aaa
test
or
and
in
jg
push
cmp
sti
iret
pop
adc
add
add
stc
push
mov
adc
xor
pop
jle
in
fs
clc
lods
push
out
push
pop
mov
fucomp
xchg
jg
and
push
js
pop
pop
jle
in
xlat
pop
subb
bound
xchg
jns
fwait
mov
jl
in
pusha
popa
cltd
aad
mov
in
xchg
xchg
mov
out
xchg
xor
pop
je
cmp
popf
mov
xchg
pop
mov
mov
cwtl
jg
mov
sub
cmp
adc
out
lods
mov
cmpsl
ja
aad
cmp
scas
xor
repnz
mov
into
sbb
mov
in
enter
sahf
lock
loopne
cli
and
pop
das
repnz
lods
and
sahf
adc
in
aaa
fwait
outsl
mov
push
ljmp
inc
lds
jmp
cmp
lret
das
push
add
adc
stc
jecxz
pusha
scas
mov
dec
pushf
mov
and
sub
mov
sbb
lret
mov
mov
sahf
sbb
aam
sub
mov
les
pop
leave
and
mov
repnz
jp
js
push
mov
in
sub
daa
jp
shrl
sub
jae
aad
adc
mov
mov
mov
sbbb
lock
fs
imul
sbbb
imul
sub
adc
fbld
mov
mov
mov
stc
sub
cmp
mov
jp
push
xchg
sub
ret
addb
test
lret
test
and
jge
iret
add
jno
sub
sbbb
outsl
loope
les
lret
loope
dec
aad
out
push
repz
pop
mov
inc
lods
mov
fisttpll
fmulp
mov
sbb
xor
in
mov
mov
mov
bound
pop
sbb
cmp
jp
data16
push
jns
lret
outsl
subb
cmc
adc
fimuls
fistps
mov
aad
mov
xchg
inc
dec
xchg
out
mov
and
push
jg
jns
outsb
sub
mov
push
pop
xor
test
sbb
xchg
push
pop
jns
sub
xchg
mov
mov
cmp
in
pop
jns
js
cvttps2pi
ljmp
in
mov
inc
add
inc
inc
adc
mov
xchg
push
sbb
or
fdiv
mov
inc
add
pop
icebp
icebp
add
repnz
mov
adc
cld
pop
dec
push
hlt
lahf
pop
adc
sub
int3
scas
jmp
test
icebp
imul
aad
push
inc
stc
in
pop
js
jae
femms
adc
test
out
xchg
pop
jle
icebp
or
lret
in
xchg
mov
lcall
push
xchg
push
pop
jns
add
adc
test
in
inc
push
insb
sub
dec
or
adc
rclb
ljmp
jns
xchg
xchg
xchg
outsl
jp
and
cmp
sbb
jmp
pop
imul
and
and
push
or
jbe
cmp
add
dec
outsb
int
sahf
inc
mov
popl
aas
mov
pop
arpl
add
mov
jle
mov
or
in
xor
iret
dec
fisubrs
in
daa
pop
xchg
pop
jle
jmp
std
sbb
dec
shlb
pop
jecxz
ljmp
mov
add
xlat
adc
and
fwait
lahf
pop
push
test
scas
dec
pop
lret
stos
mov
sbb
mov
repnz
mov
scas
shrl
sbb
or
fimuls
inc
scas
mov
pushf
shl
push
cmp
mov
repnz
mov
xorl
inc
dec
and
dec
pop
xchg
cltd
sti
pop
inc
push
adc
stc
inc
add
lahf
pop
out
dec
lock
jle
in
cmp
in
std
mov
pop
jns
sub
push
pop
aad
cs
loope
lea
adc
jge
loopne
mov
xchg
testb
add
gs
repz
jle
fbstp
rclb
sahf
das
pop
out
or
rsqrtps
dec
les
insb
push
repnz
xchg
sub
xchg
out
andl
jl
lock
cmp
push
jne
inc
or
idivl
in
mov
push
popa
cmp
imul
sbb
fsubl
xor
imul
xlat
cwtl
cld
pop
xchg
push
ficoms
adc
dec
xorl
xchg
push
pop
jns
fdivrl
add
sbb
jl
ficoms
ret
iret
xor
movsb
jns
xchg
push
sbb
aas
inc
leave
std
sbb
push
pop
scas
mov
push
jge
insl
xchg
sahf
pop
jns
das
adc
jle
iret
cmp
lret
das
bound
push
dec
jmp
push
pop
jns
ja
inc
test
dec
loope
pop
xor
fadd
cld
inc
cli
push
jo
ja
xchg
lahf
jb
in
push
ss
adc
add
xor
xchg
push
pop
pop
adc
movb
cmp
sbb
adc
test
idivl
in
in
push
dec
dec
clc
and
push
leave
cld
lcall
mov
push
cmpsb
loop
int3
outsb
sbb
xor
fwait
jl
enter
test
and
mov
pop
jl
or
mov
sbb
inc
adc
jbe
shl
jns
xchg
mull
hlt
lock
jns
mov
mov
popa
insl
cltd
call
in
lock
cltd
jg
sahf
int
push
xchg
fstpt
in
xor
mov
xlat
push
pop
sub
stc
in
pop
insb
push
xor
push
jle
in
pop
jle
cmp
paddsw
xchg
mov
cld
jnp
imulb
jmp
pop
aad
stos
jp
sahf
jge
lret
xor
inc
xchg
cmc
mov
xchg
aaa
cmpsb
stc
mov
js
and
andb
aaa
jne
jns
cltd
repnz
mov
xlat
push
push
out
jns
push
push
lret
das
mov
cltd
scas
out
movsb
and
cld
repnz
lock
sbb
jp
lret
popa
mov
mov
add
inc
popf
adc
arpl
xor
addr16
fwait
xor
sti
mov
push
ret
sbb
cld
push
cmp
fdivrp
test
aas
test
scas
mov
jae
jo
jbe
int3
xchg
jnp
mov
out
enter
or
iret
sbb
lret
das
mov
ds
push
pop
repz
cli
jns
das
mov
cmp
outsl
pop
in
bound
push
jl
ss
cmp
enter
lret
das
cli
sub
ja
test
iret
xchg
lcall
jmp
sub
and
pop
jns
xchg
mov
test
mov
push
movsl
sub
adc
lods
adc
xor
movsb
push
add
aas
aaa
sub
repnz
mov
pop
and
mov
outsb
sub
mov
aaa
inc
jo
and
sar
ror
adc
lds
push
faddp
xchg
or
mov
sub
xchg
repnz
pop
dec
or
in
cwtl
or
adc
mov
mov
xchg
push
popa
mov
mov
stos
xchg
push
pop
jns
aam
and
cwtl
std
test
repnz
push
or
xchg
xor
inc
pop
in
aaa
nop
jmp
cmpb
push
or
add
inc
xor
or
sti
pop
jl
push
pop
jns
add
push
cmp
outsb
mov
xchg
fs
sbb
lods
lcall
sti
adc
push
scas
mov
push
pop
ss
stc
popf
xor
or
stos
out
xchg
std
negb
or
mov
lret
mov
mov
imul
push
ds
jb
sub
in
push
loope
bound
clc
xlat
lret
jg
sti
xchg
sti
ret
loope
jp
addb
fsubrl
mov
xchg
xor
sti
xchg
int3
loop
add
add
dec
or
mov
in
mov
jbe
and
jnp
xchg
dec
jns
inc
cld
test
mov
aam
lock
pop
stc
repnz
cld
xchg
sbb
out
fwait
mov
repnz
lock
test
or
inc
sub
lret
push
insl
ss
push
jle
orb
mov
lret
sub
enter
xor
repz
aam
arpl
add
ljmp
lods
shl
inc
stc
in
jg
pop
mov
xor
scas
stos
lods
mov
pop
jle
xor
enter
clc
aas
push
pop
test
sarb
adc
push
or
inc
inc
scas
pop
inc
mov
or
aas
jmp
jae
inc
push
add
push
pop
inc
mov
and
aaa
loope
mov
cmovnp
cmp
sub
mov
or
cmp
roll
adc
fld
cld
xor
ja
mov
push
cmp
ss
sub
or
loope
add
lds
mov
jbe
imul
stos
mov
in
cwtl
jle
in
leave
nop
pop
xchg
stos
call
out
mov
and
lea
outsl
pop
jae
jle
push
pop
jns
xchg
ret
jnp
jo
xor
repnz
mov
jmp
xlat
test
stc
lret
inc
in
push
psllq
daa
adc
faddp
clc
enter
pop
sbb
sarl
inc
pop
repnz
push
enter
mov
push
mov
and
add
jns
lods
mov
clc
sbb
xchg
inc
outsl
test
pop
mov
push
mov
or
les
adc
icebp
dec
xchg
jo
xchg
cmp
mov
lret
add
fninit
jl
mov
add
int
or
popa
fmuls
jnp
bound
adc
adc
jb
pop
mov
sbb
in
xlat
lret
gs
push
enter
or
xchg
ds
rcll
cmp
imul
cmp
outsb
popf
pop
jge
lock
sti
dec
popf
dec
fbstp
adc
fcmovbe
stos
mov
dec
cld
sbb
pop
xor
mov
lret
sbb
clc
pop
pop
fisubrl
jge
in
das
sti
movsl
add
mov
xchg
or
in
popa
jl
clc
mov
push
bound
mov
jns
dec
movsb
icebp
or
push
fmulp
mov
bound
hlt
cmpsl
iret
inc
jle
in
cld
add
adc
dec
jbe
xor
stc
in
pop
lret
aam
jge
mov
in
pop
jle
xchg
pop
xchg
aas
push
add
mov
push
stc
mov
dec
out
adc
pop
jns
xchg
repnz
jl
xlat
loope
ja
fbld
push
fwait
ret
and
or
mov
cmp
mov
stc
in
sub
push
in
xchg
jns
pop
test
mov
jns
jecxz
mov
push
mov
aas
sbb
fldenv
push
pop
pusha
or
mov
sbb
daa
loop
push
shl
lret
lods
sub
xchg
push
or
pop
jno
jle
nop
mov
push
pop
dec
test
add
mov
jns
cld
repnz
mov
or
ret
movsl
test
dec
ret
cld
repnz
das
mov
cmp
fs
enter
lds
js
cwtl
mov
scas
mov
push
outsl
rorl
dec
in
int
sbb
cltd
and
das
inc
jne
sbbl
pop
jmp
jl
loope
jg
jae
push
pop
jns
adc
cld
lock
pop
jns
push
test
fwait
ja
sbbb
jmp
stc
or
in
in
and
cli
js
ror
sbb
inc
jns
xchg
push
xor
lock
dec
xor
mov
mov
mov
pushf
movsl
lods
mov
sbb
jb
into
pop
out
decb
std
push
and
sub
in
fdivrp
enter
fwait
jle
aam
insl
add
scas
mov
add
mov
scas
mov
loopne
xchg
loope
pop
cltd
arpl
and
pop
sti
enter
mov
xor
or
and
dec
out
ret
jmp
data16
mov
sbb
mov
pop
cmp
dec
rorb
lods
add
adc
in
jg
add
inc
sub
scas
subb
xchg
pop
jle
mov
dec
rol
sub
jge
insl
inc
mov
sub
and
mov
dec
mov
repnz
mov
cld
jp
mov
ret
lds
xor
repnz
std
stc
fadds
push
sbb
mov
sub
mov
pushf
inc
mov
adc
sub
jae
mov
pop
sbb
jle
in
add
add
add
jge
fnsetpm(287
out
xchg
pop
dec
add
inc
fwait
sti
in
mov
add
aaa
aam
in
xor
jb
std
jno
idiv
cmp
addr16
lcall
lret
mov
adc
fiaddl
dec
xchg
lret
das
mov
jne
std
add
mov
fsubs
iret
daa
inc
popf
ja
out
fwait
mov
les
pop
pop
xchg
pop
repnz
adc
filds
imulb
mov
cmp
rcll
cmp
jmp
jp
or
xor
inc
inc
xchg
repz
pop
dec
pop
sub
xchg
pusha
fidivrs
lahf
pop
rorl
and
pop
ds
or
add
cmp
jb
jno
jne
int3
add
fwait
aad
xlat
pop
mov
inc
test
xchg
pop
jle
jg
mov
sub
xchg
dec
out
fistpll
imul
adc
jl
repnz
and
js
push
dec
cmp
sub
imul
pushf
dec
stos
fs
into
popl
mov
jge
inc
cld
or
and
pushf
xchg
push
fimuls
test
mov
cmpsb
stos
push
pop
jns
xor
mov
pop
leave
cmp
movsl
icebp
xchg
xchg
sbb
sahf
test
mov
mov
jnp
pop
jns
or
pop
jecxz
sarb
repnz
pop
pop
hlt
shrb
sub
testb
inc
ds
and
mov
xlat
stos
cmp
push
movb
adc
or
pop
cmp
leave
inc
and
daa
sbb
mov
bound
outsl
xchg
rcrb
xor
cmp
dec
shlb
stos
fldt
ja
sub
rorl
lret
mov
scas
mov
and
pop
shlb
imul
and
movsb
jmp
cmc
mov
and
or
and
pop
mov
push
scas
sbb
push
xchg
mov
mov
pop
fstps
sbb
in
cmpsb
fsubrl
nop
cmp
outsb
sbb
sbb
scas
push
sub
cwtl
testb
xor
and
into
sahf
sbbb
test
jle
in
xor
imulb
orl
xchg
pop
stc
fs
stos
inc
xchg
cmp
les
pop
jle
inc
mov
data16
shlb
ds
lret
dec
jge
mov
arpl
sbb
mov
pop
hlt
cmp
xlat
ret
mov
jp
jle
inc
fsubrl
movsb
add
stos
repnz
das
mov
jbe
cmp
in
add
lea
cmp
lret
mov
jbe
pop
sbb
jns
stos
jns
pop
push
dec
adc
ds
gs
jne
add
mov
bound
inc
mov
rorb
jg
inc
push
add
movsb
pop
in
into
jns
rclb
lods
mov
xor
add
adcl
pop
inc
xor
repnz
es
mov
ds
sbb
cmp
aam
sub
sub
and
xchg
pop
mov
cmp
mov
jge
movsb
push
mov
jle
in
pop
add
cli
enter
push
jle
in
js
jle
sbb
inc
dec
aaa
stc
in
pop
cli
mov
pop
imul
aaa
fsubl
pushf
lds
ficoml
cmp
jg
xchg
inc
cmc
cltd
adc
or
xchg
pop
jle
push
pop
daa
addr16
dec
cmp
inc
jmp
mov
cmp
xlat
stos
sbbl
push
mov
jl
mov
mov
test
ret
test
js
imul
ds
sbb
sub
sub
ds
loop
lea
addr16
jg
mov
pushf
jl
push
stc
in
or
div
mov
xchg
ja
add
ret
cwtl
mov
enter
pop
mov
ret
cmpsb
add
xor
sub
xchg
loop
xlat
jno
dec
or
cmp
mov
cmp
call
mov
dec
ret
dec
or
scas
repnz
das
jmp
iret
jp
mov
test
cwtl
lret
das
mov
mov
pop
xchg
mov
lahf
popf
cmp
jno
icebp
cmp
movsb
int
popf
fucomp
mov
enter
push
movsb
ret
mov
cmp
das
mov
inc
test
sbb
orl
push
pop
cmc
xlat
popa
adc
cs
testl
cmp
pusha
inc
jge
pop
mov
mov
in
das
inc
adc
icebp
rcr
das
push
mov
das
inc
outsb
and
lods
movsb
cmpsl
cli
lret
jl
xor
and
sbb
repnz
das
mov
lods
push
das
pop
pusha
push
loope
das
mov
movsl
adc
pop
push
lahf
jl
xor
cld
repnz
popa
jns
xchg
jmp
add
xchg
arpl
cmp
das
mov
jge
jno
mov
lock
mov
mov
sahf
xorl
push
pop
repnz
sub
stc
repnz
das
imul
pop
mov
mov
jbe
and
sbb
inc
jl
fldenv
add
popa
jge
in
xorl
in
movl
mov
aaa
outsl
xor
sub
sti
addr16
dec
cmovnp
scas
mov
cmp
addr16
lods
les
mov
lret
fwait
in
push
lds
sahf
stc
mov
mov
or
jns
xchg
idivl
inc
es
test
aam
fists
mov
mov
jecxz
ljmp
enter
fadds
lods
dec
inc
stc
in
inc
mov
test
call
xchg
pop
jle
add
cld
test
pushf
das
ds
mov
pop
adc
xchg
repnz
int3
ret
and
mov
lret
das
mov
es
pop
xor
push
testl
fstpt
sub
repz
jns
or
lret
arpl
fcmove
push
push
add
nop
xchg
data16
cld
repnz
das
enter
push
jg
jnp
enter
icebp
sub
pop
lods
rclb
jmp
stos
jmp
inc
out
gs
jns
xchg
push
sub
inc
sub
xchg
xchg
push
pop
cmpsl
pop
mov
sahf
pop
inc
xor
popf
mov
or
jge
in
test
and
dec
mov
sub
lcall
or
lret
mov
fsubr
sbb
sti
mov
mov
and
cmp
adc
stos
mov
cld
repnz
mov
dec
imul
sarb
cmp
lret
testb
inc
sbb
cmp
and
and
aas
test
imul
cld
repnz
mov
and
lock
mov
sbb
lret
mov
out
fdivs
lcall
sub
add
aaa
push
add
repnz
stos
lods
lret
or
sbb
add
jbe
mov
scas
cmc
hlt
and
xchg
dec
inc
xorl
sub
mov
jmp
mov
and
lods
fmull
dec
nop
jno
xor
in
pop
sbb
dec
js
add
and
pop
jle
pop
aaa
add
push
sbb
mov
push
adc
orl
sbb
sub
popa
ficomps
sti
dec
or
dec
mov
in
push
add
push
aam
push
pop
in
dec
xor
adc
stc
add
push
fs
repnz
out
addb
mov
jne
lret
mov
dec
jns
xchg
addl
mov
adc
sub
adc
repnz
xchg
ja
sbb
xlat
jbe
mov
jmp
dec
nop
cs
inc
imul
or
jle
out
add
inc
cmp
and
call
adcb
pop
jge
push
jge
xlat
push
mov
scas
dec
fadds
stc
in
sub
adc
stos
push
popf
sar
repnz
mov
dec
imul
push
or
or
in
das
mov
pop
lods
inc
negb
pop
mov
cwtl
je
push
mov
or
cld
adc
mov
cltd
lods
dec
xchg
fimuls
out
sbb
repnz
push
scas
adc
mov
push
nopl
xchg
push
insl
sbb
lret
leave
enter
adc
insl
lock
and
lcall
sbb
ret
das
mov
or
push
pop
leave
repz
fsubrl
call
xchg
adc
dec
xchg
pop
jge
lods
adc
inc
add
xchg
int3
mov
pop
jle
in
clc
xchg
fwait
pop
xchg
mov
push
bnd
repnz
push
popa
push
sbbl
lret
das
ljmp
sbb
mov
insb
cmpsb
lret
mov
hlt
nop
insb
xor
scas
mov
sbb
xor
cmp
mov
lret
js
mov
dec
fsubrs
sahf
mov
push
cmpsl
shrl
mov
xor
xchg
mov
mov
repnz
mov
dec
fisubrs
aaa
mov
insl
js
das
mov
push
inc
out
cltd
imul
ds
mov
dec
lods
jno
push
add
movsl
add
daa
fstpt
daa
faddl
es
jl
pop
repnz
inc
hlt
sahf
mov
movsl
mov
fimuls
cmp
xchg
adc
je
repnz
and
push
testb
adc
mov
sub
icebp
in
sub
mov
xchg
es
lret
fildll
andl
ds
repz
enter
movsl
iret
pop
pusha
mov
fsts
jg
pop
jns
mov
outsl
movsb
popa
pop
and
jecxz
jle
in
xchg
xor
cmp
lea
sahf
cmpsb
repz
enter
pop
je
mov
fnstenv
cmp
stc
in
lcall
lock
and
jns
mov
add
xchg
pop
jle
mov
mov
and
mov
stc
popf
add
mov
nop
rcl
imul
cld
repnz
jne
iret
rorl
sbb
xchg
dec
out
jp
rolb
mov
in
or
sbb
jo
bound
jb
in
xchg
cmp
mov
fldt
in
mull
jae
and
into
popa
cmp
pushf
movsb
xchg
mov
inc
inc
pop
hlt
push
cmpsl
jb
imul
add
rclb
mov
xchg
sbb
xchg
enter
jle
in
ja
sbb
lcall
stc
add
repnz
jae
aaa
sub
pushf
mov
mov
out
int
lret
das
pushl
insl
sbb
movsb
enter
and
cmp
pop
sub
stc
divl
or
xchg
adc
xchg
mov
movsl
cmpsl
std
popf
lock
enter
repnz
inc
xacquire
cli
pop
fldcw
ja
ja
dec
aaa
adc
in
push
scas
lods
out
add
movsb
mov
xchg
pop
jle
sbb
sbb
gs
ja
jle
in
cltd
pusha
xor
cmp
and
and
rclb
jg
scas
mov
or
repnz
mov
icebp
scas
mov
pop
pop
jnp
or
scas
cli
movsl
cmp
mov
dec
xchg
or
mov
loopne
repnz
sarb
cmp
call
push
jmp
or
subl
mov
mov
dec
pusha
jecxz
xchg
mul
or
pushw
mov
mov
divl
inc
sbb
stc
in
inc
push
nop
enter
or
xor
subb
push
xlat
mov
jl
notl
jno
push
int3
into
not
les
icebp
enter
pushf
lcall
mov
mov
pop
movsl
test
aas
cmp
push
shr
ja
mov
mov
loopne
cmc
jb
out
sub
cli
push
je
pop
cmp
lret
mov
lods
les
inc
cmp
jno
insl
orb
jae
cmpsl
xor
in
daa
roll
pop
sbb
stc
ret
lods
lods
inc
jle
les
mov
hlt
push
inc
push
pop
jns
or
mov
inc
cmpsb
xchg
lret
xchg
xchg
or
adc
in
pop
jle
popa
in
push
cmpl
sarl
xchg
jnp
movsb
pop
mulb
pop
jle
in
mov
mov
pusha
push
push
pushf
jle
in
mov
arpl
fbld
jo
xchg
pop
pop
mov
cmp
cld
cmp
pushf
mov
outsl
stc
in
addr16
out
mov
mov
sbb
test
repz
ljmp
je
repnz
clc
les
jl
mov
das
call
scas
lcall
scas
pusha
dec
das
mov
pop
sub
inc
andb
mov
stos
dec
cmp
mov
fcmove
bound
adc
inc
xchg
pavgb
enter
dec
int
fdivl
and
xchg
lock
das
mov
jnp
mov
cmp
imul
xor
cli
add
jns
lret
aas
neg
push
pop
jge
popa
inc
adc
in
pop
mov
dec
popa
adcl
in
or
add
xor
dec
icebp
xchg
xchg
push
pop
jecxz
mov
jbe,pt
scas
mov
sbb
sub
xchg
mov
lret
mov
sub
dec
outsl
ds
sub
insl
fwait
pop
push
insb
sbb
dec
jmp
out
filds
pop
out
in
pop
jge
fdivrs
scas
sub
addr16
rcl
xchg
pop
pop
fdivrl
jmp
cmp
ds
adc
mov
imul
das
ret
and
fxch
stc
arpl
lret
inc
mov
mov
mov
dec
jle
cld
mov
dec
leave
mov
in
jo
jle
in
sub
xor
or
add
xchg
pop
sbb
ffree
sub
notl
insb
enter
rorl
iret
icebp
push
bnd
sbb
pop
dec
fnsave
and
enter
repnz
rolb
aad
sub
jno
pop
lods
lret
mov
mov
cmp
mov
test
adc
cmc
sbb
adc
mov
sub
je
mov
test
repnz
and
lock
fldenv
inc
iret
outsl
mov
aad
xchg
jg
js
repz
cmpsl
or
mov
jae
mov
cmpsl
jb
stos
inc
repnz
dec
xchg
pop
fpatan
bound
xchg
pop
fistpll
icebp
push
scas
mov
jne,pt
scas
xor
imul
repnz
xchg
xchg
or
push
ljmp
mov
mov
inc
cmpsb
test
test
lret
cmp
push
jl
maskmovq
sub
xlat
or
pop
inc
sub
lea
push
inc
out
shrl
mov
inc
sub
daa
test
out
pop
ds
jmp
cmp
enter
add
mov
scas
mov
jp
and
sub
vpshlw
in
xchg
sub
mov
sbb
dec
adc
fldenv
add
int
test
xchg
push
arpl
push
mov
mov
pushf
icebp
shrb
pop
jns
xchg
push
cmpsl
add
idiv
test
aaa
addr16
pop
pop
aad
push
xchg
mov
dec
nop
ds
push
lods
imul
sbb
add
psubq
imull
into
sbb
enter
test
and
lds
jnp
or
sbb
or
and
cs
mov
bound
mov
mov
repnz
iret
jo
cmc
xlat
ret
fucompp
jne
stc
rorl
rclb
mov
das
mov
mov
sub
xor
mov
popf
dec
les
leave
jecxz
sub
jo
cld
repnz
das
fadd
popa
pop
pop
stos
daa
sbb
faddp
inc
mov
lahf
movsl
mov
sub
fsubrp
xor
sub
mov
loop
push
pxor
leave
in
push
pop
inc
fildll
add
lds
xchg
push
pop
jns
add
es
mov
mov
ret
out
or
or
sbb
fnstsw
sub
push
fcomps
stc
in
repnz
add
xchg
stos
mov
jo
sbb
pop
js
xchg
pop
sub
outsb
out
in
mov
push
ficomps
inc
pop
movsb
push
dec
shrb
pushf
stc
inc
pop
jns
iret
int
fcoml
cld
xor
aad
stc
in
jg
leave
inc
clc
movsl
repnz
push
in
adc
cli
iret
es
xor
fisttpl
jb
add
and
push
shlb
test
inc
cmpsl
jne
jle
jl
jmp
enter
adcl
jmp
xor
cs
and
pop
jle
outsb
pop
and
push
jecxz
decl
cwtl
pop
cmp
jne
hlt
add
lods
jle
jg
mov
xchg
mov
mov
dec
push
in
das
sub
inc
out
and
xor
inc
and
push
fwait
jp
insl
xor
lret
push
adc
imul
movsl
fdivr
pop
stc
repnz
adc
in
adc
mov
dec
xorl
and
in
adc
daa
sahf
sub
dec
xchg
cs
mov
lods
ror
sarl
outsl
dec
or
lahf
hlt
fcomps
sub
test
fidivl
loop
sub
scas
int
call
into
sbb
dec
mov
aam
cmp
mov
repnz
ret
jmp
add
add
or
cmp
dec
stc
in
ds
xchg
call
and
jecxz
ret
mov
aaa
xchg
push
pop
jns
dec
pop
rcrl
adc
pop
cs
cmp
in
dec
out
rorb
out
in
cld
or
mov
lods
ja
aam
mov
stos
mov
sahf
fisubrs
loopne
repnz
das
pop
repz
cltd
jb
aas
mov
rolb
add
and
shr
imul
pop
jns
xchg
add
loope
test
inc
hlt
movsb
xchg
jns
xchg
push
das
stos
mov
scas
sub
ja
in
push
pop
fcmovnbe
inc
into
inc
xor
popf
repz
push
pop
jns
cli
xor
cmp
lea
lods
sbb
in
jb
lods
repz
adc
hlt
repnz
mov
sbb
test
das
mov
jnp
scas
pop
in
arpl
push
jns
jge
jne
jo
mov
dec
aas
lcall
and
pop
dec
repnz
daa
rorl
push
call
int
lret
mov
sbbl
leave
add
sbb
push
out
push
pop
jns
inc
ficompl
cmp
maxps
in
cmp
cmc
jbe
jge
pop
shll
mov
xor
adc
jle
out
mov
repnz
das
ret
mov
xchg
sahf
mov
mov
xchg
addr16
jge
jmp
rol
or
stc
in
sbb
in
or
mov
lea
xor
dec
test
nop
adc
pop
or
mov
push
mov
inc
mov
in
cwtl
lret
cmpsl
jnp
clc
popa
leave
mov
repnz
jno
cltd
lret
aam
inc
cmpsl
dec
outsb
inc
test
xchg
dec
and
jge
out
mov
mov
repnz
das
pop
xor
mov
xor
or
das
mov
sti
xor
out
enter
ds
jae
mov
test
lock
clc
and
in
xor
sahf
mov
mov
mov
cmpsl
sub
enter
pop
fcoms
aas
scas
mov
inc
test
imul
sub
mov
pusha
dec
shlb
sub
out
cmpl
inc
aas
stc
loope
jb
push
sub
cmp
mov
cltd
js
jns
push
push
shlb
repnz
les
xor
lret
mov
cmp
lea
lods
mov
test
push
out
imul
repnz
mov
pop
scas
leave
cmp
clc
pop
aaa
lret
mov
sbb
and
loopne
push
loope
mov
or
fstpt
mov
cs
aad
dec
or
rclb
add
inc
enter
mov
sub
repnz
adc
cs
cmp
push
xor
jbe
mov
or
jge
out
and
loope
xchg
dec
in
fwait
inc
fs
pop
jns
mov
test
aas
mov
pop
pop
jns
xchg
jns
loope
xchg
inc
jno
loop
mov
push
inc
in
jge
outsb
dec
pop
cmp
jge
and
repnz
jl
test
jae
adc
repnz
inc
xchg
pop
mov
or
mull
push
dec
mov
xlat
fucomip
enter
and
adc
inc
jmp
xchg
andb
xchg
push
pop
jns
adc
enter
mov
imul
and
push
sub
and
out
inc
jge
dec
test
mov
popf
inc
pop
fwait
jbe
mov
insl
mov
fsubrs
adc
mov
pop
imul
lods
aam
and
lret
rol
rcll
cli
push
sbb
cmpb
mov
xchg
daa
sub
mov
and
scas
mov
fs
sar
push
lret
repnz
sub
push
mov
pop
js
aaa
dec
or
lock
sarl
push
push
pop
jns
xlat
popf
cltd
mov
jle
inc
mov
test
xchg
push
jnp
repnz
mov
js
jmp
ret
repnz
movsb
mov
bound
gs
xchg
lret
mov
stos
js
jne
and
out
lods
mov
stc
movsl
scas
dec
insb
icebp
jb
mov
mov
packsswb
notb
aam
loopne
pop
in
das
mov
fisttps
and
jge
out
jno
jge
movsb
inc
lods
adc
repnz
mov
int
pop
loop
pop
mov
enter
repnz
mov
clc
mov
and
pop
ret
sti
push
dec
stos
cmp
jle
inc
fidivrl
insb
out
outsb
sbb
aad
push
jp
xchg
xchg
lods
ja
repnz
or
cmp
lcall
jle
cmpsl
cmp
lret
lods
rorl
iret
push
mov
aas
out
into
dec
cltd
and
rcrl
popa
cmp
cmpsb
es
stos
jg
fists
rolb
rcll
push
stc
in
ret
jae
lock
in
sti
ss
fmuls
das
mov
xchg
cld
xor
xchg
pusha
test
sahf
aad
ds
addr16
and
jbe
xchg
xchg
ja
inc
loopne
out
pop
jbe
notl
popf
xchg
mov
pop
lret
in
jo
mov
or
jnp
insl
cmp
movb
mov
mov
mov
repnz
das
dec
adc
lret
out
sbbl
or
xchg
mov
xor
out
xchg
jmp
jo
notl
mov
out
and
insb
gs
orl
pop
mov
stos
das
lea
push
fildl
xlat
mov
scas
fwait
push
push
gs
inc
int
cwtl
pushf
lret
mov
adc
les
lods
mov
movsl
sub
adc
into
jns
or
movsl
in
mov
xchg
push
pop
nop
jmp
push
imul
adc
setg
fwait
js
add
mov
pop
das
push
pop
jge
out
mov
pop
sahf
jg
adc
and
xchg
pop
aam
mov
mov
mov
or
sub
add
xlat
xchg
jno
mov
psubsb
adc
ja
je
aaa
repnz
icebp
and
pop
and
scas
negl
cmpsl
test
cmp
or
repnz
jbe
adc
mov
sub
lock
fmul
sub
daa
cmp
jmp
add
scas
mov
add
call
sub
repnz
inc
out
lds
mov
xchg
aaa
and
ja
push
lea
shll
pop
jns
pop
repnz
ror
addr16
iret
dec
push
mov
in
jge
and
or
rolb
stos
lahf
in
mov
lret
push
fwait
inc
filds
push
push
movsb
dec
xlat
ret
inc
mov
scas
pop
jle
in
cmp
rcrb
or
jno
ljmp
sub
in
dec
daa
std
fldt
stc
in
pop
into
outsl
or
not
mov
in
pop
jle
aaa
and
enter
jle
mov
xchg
pop
jle
mov
cmp
pop
idivl
jg
enter
shrb
cmp
mov
out
popf
xchg
sbb
sbb
js
cmp
cld
repnz
das
lods
mov
rcrl
test
in
das
mov
sub
int
in
insl
jl
loop
lea
jne
xlat
lods
jns
lods
movsl
rcl
xchg
aaa
lret
leave
fnstsw
inc
push
pop
cmpsl
lahf
pop
ret
ret
sub
inc
jle
in
dec
jno
cmp
or
xor
adc
shll
mov
lret
mov
inc
gs
cmp
xchg
mov
lret
mov
lock
and
pop
cmp
add
push
test
jecxz
mov
pop
clc
xor
stc
in
push
sub
in
mov
fs
sbb
scas
and
mov
outsb
mov
inc
mov
xchg
imul
je
psubusb
fs
rorl
mov
xor
or
lret
das
imul
jp
xchg
mov
repnz
das
mov
xor
in
aad
xor
cld
xor
movsb
jae
mov
bound
and
sbb
jae
inc
push
lods
push
test
sti
mov
xor
mov
dec
dec
lret
mov
cmp
or
cmp
fsubp
in
pop
jmp
test
pop
adc
cmp
dec
test
jl
jne
jne
out
xor
enter
xchg
lea
pop
fwait
and
push
pop
jns
mov
dec
pop
stc
pop
push
adc
aaa
sbb
xchg
xchg
jnp
pop
cltd
dec
mov
aaa
xchg
aaa
add
inc
add
cli
mov
push
pop
jns
test
in
popa
mov
jno
add
mov
xchg
mov
push
sub
push
lret
add
dec
enter
pop
jns
xchg
je
mov
ficoms
jnp
and
loop
lock
movsb
xchg
xchg
xchg
mov
jle
in
xlat
rcl
cmp
ret
jno
or
adc
sbb
pop
lea
je
inc
popf
dec
pop
fld
push
mov
jg
sahf
and
pushf
repz
in
mov
jmp
fwait
mov
jnp
or
mov
insl
lret
inc
xchg
scas
push
cld
repnz
das
mov
cmp
scas
or
test
jp
sbb
pop
lods
push
lods
xor
movsb
xchg
pop
jmp
das
lock
push
mov
cmp
cmp
in
adc
push
xchg
out
es
xor
cmp
test
xchg
pop
pop
mull
pop
jle
orb
cmpsb
xorl
inc
add
test
fstpl
arpl
pop
jge
or
inc
cmpsl
inc
adc
adc
andb
pop
mov
js
lret
lret
repnz
jo
daa
cmp
dec
adc
in
mov
jns
push
inc
cmp
mov
lret
xchg
cmc
aas
ret
stc
ja
xchg
arpl
notl
or
mov
in
pop
jle
adc
ja
sbbb
push
pop
mov
pop
lret
lcall
aam
repnz
jp
or
xor
cmpsb
jge
sub
push
mov
fbstp
pop
jns
call
xchg
and
xchg
and
aaa
cmpsl
out
es
add
lock
dec
test
enter
and
pop
push
test
in
cmp
popa
ret
in
push
pop
cmp
mov
adc
xchg
push
pop
shl
and
out
enter
les
sbb
or
leave
mov
mov
in
push
add
int
insl
jg
int3
mov
jge
and
jg
scas
insl
and
popa
outsl
fbld
add
pop
mov
or
cmp
mov
fisubrs
mov
fisubl
xor
inc
mov
adc
stos
xchg
dec
fs
fs
imul
aas
test
mov
call
cld
repnz
add
aad
cmp
out
das
divb
jecxz
inc
sub
or
lcall
jno
ret
test
dec
xchg
push
pop
jns
mov
sub
mov
or
xchg
push
mov
in
jmp
sahf
shll
mov
push
scas
out
add
enter
sub
aaa
fsts
mov
aad
sub
imul
add
jp
mov
mov
mov
bound
cmp
xchg
sub
das
xchg
jl
daa
jbe
xchg
idivb
popf
jnp
xor
lret
mov
xor
jl
jl
aaa
cmpsb
ds
jmp
outsl
xchg
in
mov
std
jmp
push
dec
sbb
mov
adc
jns
xchg
push
leave
xor
call
sbb
in
push
pop
dec
dec
push
mov
push
pop
jns
loop
leave
incb
aam
sbb
jns
xchg
shll
js
mov
pop
jns
xchg
imul
ss
xchg
xchg
jg
stc
and
mov
pop
rcr
adc
stc
ficoml
jmp
bound
sti
enter
sbb
cwtl
jge
movsl
mov
mov
gs
lods
scas
sbb
sub
and
arpl
mov
ljmp
sti
lds
sahf
pop
js
inc
jns
addr16
jns
xchg
mov
lock
jb
pop
nop
mov
in
push
pop
sub
and
loop
push
push
ljmp
jns
jnp
sub
mov
xor
and
xor
push
jg
movl
xchg
dec
mov
xchg
loop
sub
inc
mov
sub
ret
jns
repz
rolb
mov
and
sbb
pop
ror
sub
aaa
mov
sahf
pop
js
ds
scas
mov
jbe
rcll
sub
lret
testl
inc
pop
stc
repnz
fdiv
mov
fs
inc
movsb
mov
xchg
jg
cs
xrelease
jno
cmpsl
hlt
jge
push
mov
cltd
push
sbb
popf
in
aaa
mov
stos
push
es
out
jmp
xchg
push
pop
jns
xchg
dec
lods
adc
mov
mov
jns
cltd
adc
mov
xor
sbb
sub
cmp
and
cmp
clc
repnz
adc
dec
xor
mov
fisttpl
or
test
xor
pop
mov
adc
stc
notl
cwtl
adc
jne
in
stc
in
pop
inc
imul
or
je
mov
xor
imul
or
mov
dec
inc
pop
push
ss
mov
sahf
add
int
sub
xchg
cld
repnz
das
inc
push
arpl
cwtl
sub
xchg
and
in
nop
movb
movsl
call
in
push
fdivrp
mov
mov
push
shl
shll
or
faddl
dec
int
decl
test
xlat
je
xchg
jg
xchg
sti
mov
test
jle
sub
mov
ret
dec
dec
add
pop
jns
jmp
jg
ret
shlb
in
push
in
xor
add
mov
pop
dec
jecxz
push
cld
clc
std
adc
inc
pop
jns
xchg
mov
cs
out
enter
lret
call
cmc
repnz
jg
lret
inc
and
xor
and
outsb
pop
xchg
das
mov
xor
jo
dec
lret
mov
pop
imul
pop
mov
mov
out
mov
mov
adc
mov
adc
mov
repnz
bound
cld
out
jmp
jge
adc
xchg
xchg
and
shll
xor
scas
mov
hlt
fsubl
mov
lods
cld
repnz
and
xlat
xchg
movb
jno
repnz
das
mov
sbb
mov
mov
jmp
hlt
sub
scas
mov
adc
mov
fiaddl
enter
pop
fmulp
xor
jns
loopne
test
dec
adc
or
cmc
xchg
add
mov
call
repnz
out
sbb
adc
and
lock
lcall
pop
inc
sub
pop
xchg
add
in
into
call
cld
jnp
lret
cmc
sbb
push
pop
pop
notl
xor
lret
das
mov
jg
icebp
jg
jmp
sahf
fimuls
stc
dec
cmpl
movl
xchg
push
xchg
jne
push
add
imul
jnp
xchg
pop
jle
and
shll
mov
stos
roll
stc
in
xchg
or
decb
dec
stc
repnz
mov
repnz
pop
iret
lods
jp
xor
imul
cmp
mov
push
imul
xor
cmp
sbb
scas
mov
das
movsl
nop
pop
and
mov
sub
adc
mov
outsb
mov
movsl
psrad
daa
xchg
mov
daa
sarb
jns
call
into
xchg
sbbl
jns
test
lds
mov
mov
into
in
jns
xchg
push
insl
int
test
mov
xchg
popa
incb
shlb
push
loope
sub
loopne
add
lahf
mov
push
aad
pusha
pop
cli
fdivrl
xchg
aaa
push
or
adc
add
pop
mov
adc
cmpl
lods
mov
pusha
fs
movsl
mov
inc
fldt
jmp
call
xchg
jg
inc
push
lods
dec
insl
test
mov
xor
in
pop
jle
shr
inc
inc
pop
jbe
cmpb
insb
mov
aad
insl
xchg
pusha
sub
lahf
arpl
les
or
push
repnz
test
sbb
loope
inc
add
jmp
repnz
test
fistl
insb
mov
xchg
push
mov
cmp
jmp
pop
sbb
or
sbb
sahf
push
lds
jg
fisubs
aad
or
out
andb
mov
arpl
repnz
scas
test
scas
mov
and
adc
in
insl
and
add
cmp
dec
sbb
push
or
ja
pop
cld
xchg
pop
jge
or
popf
lds
inc
or
stc
in
rcrl
lret
rol
xor
mov
sub
hlt
sub
cwtl
js
lret
mov
mov
xchg
pop
push
push
daa
xor
xorl
xchg
ficoms
in
das
pop
mov
xor
jns
mov
xchg
inc
sub
jns
xchg
push
addr16
or
jns
into
cli
scas
add
xchg
push
pop
mov
xor
jg
xchg
push
pop
jns
mov
dec
pop
ja
add
enter
iret
pop
sti
test
hlt
cli
inc
and
adc
mov
jmp
xchg
pop
jle
arpl
cmpsl
jge
or
cltd
inc
ss
jle
in
cs
push
sub
dec
jns
stc
in
leave
xchg
dec
pop
bound
mov
xchg
pop
jbe
cmpsb
push
scas
int
and
mov
pop
jle
cmp
sub
push
adc
and
ud2
mov
call
sub
std
dec
sbbb
loope
push
mov
movsb
sbb
sub
cwtl
lock
stc
fimuls
pop
jns
loop
shlb
int
xlat
and
in
push
jns
xchg
push
dec
inc
outsl
dec
lret
sub
in
push
pop
push
jno
mov
push
mov
lret
aas
sbb
in
into
and
adc
ljmp
mov
outsb
sub
add
mov
sub
movsl
icebp
mov
xchg
das
dec
xchg
dec
sub
adc
inc
cmpl
in
ja
repz
rorb
lock
scas
mov
test
mov
dec
mov
out
xchg
sub
push
loope
das
lds
das
mov
push
cmp
lcall
mov
lahf
iret
mov
dec
out
dec
shrb
jo
cld
repnz
cmpsb
pop
cmpsl
rorl
mov
cli
mov
das
inc
cmp
sti
jae
das
mov
jo
add
jne
scas
sti
mov
filds
aas
add
out
dec
repnz
call
imul
xchg
lret
mov
or
outsb
adc
adc
push
cmp
cmp
test
jno
je
lret
xchg
push
cld
loop
sbb
pop
ja
scas
jno
lret
mov
cmpsb
and
pop
jne
mov
repnz
xor
dec
lcall
jnp
and
jecxz
clc
das
mov
repz
sub
lcall
jg
cld
repnz
jle
mov
int
xchg
xlat
jl
popf
andb
xchg
dec
mov
jmp
jae
fmull
pop
inc
mov
add
and
sbb
cli
js
jae
scas
mov
sbb
push
mov
repnz
pop
out
cmp
push
mov
lahf
cmp
je
push
jbe,pn
sbb
mov
pop
int3
out
sub
mov
jnp
stc
repnz
loopew
jnp
adc
jecxz
insb
or
jg
test
pusha
stos
test
shl
xchg
pop
jle
aaa
dec
cmp
xchg
and
das
mov
adc
cmp
or
dec
cld
repnz
jo
lret
fidivs
es
out
mov
test
and
es
shlb
lret
das
adc
divl
cmp
cmp
and
stos
add
sbb
and
cwtl
or
mov
sarb
inc
inc
mov
mov
lock
lock
jne
fistpll
xor
in
stc
jo
ss
ja
jmp
outsl
and
sbb
sbb
repnz
enter
and
inc
scas
mov
add
test
in
aaa
or
bound
add
lahf
loopne
in
push
sub
mov
mov
xchg
in
push
pop
ss
adc
sbb
jo
xchg
jnp
xchg
push
pop
jns
push
or
jne
out
fucom
sbb
cmp
repnz
mov
stc
in
pop
aad
mov
push
sub
dec
fdivl
ret
icebp
cltd
push
pop
jns
cmpsl
sbb
add
pop
rcrb
xchg
lcall
stc
iret
aas
leave
je
xchg
icebp
dec
popf
jns
xchg
push
in
pop
fldl
adc
push
mov
lods
push
mov
cmc
inc
pop
fwait
jge
cmp
repnz
rolb
ljmp
mov
xor
repnz
push
stc
in
pop
push
jns
das
push
mov
pop
mov
jne
cltd
pavgw
mov
jg
pop
loope
pop
jle
mov
jnp
shr
and
negb
stc
in
fistps
jmp
les
hlt
mov
xor
in
cld
addl
jo
js
leave
xor
xchg
push
ficomps
imul
sub
lods
shrb
es
in
and
jae
mov
mov
mov
clc
cmp
in
push
push
cmp
xchg
mov
scas
xor
in
je
pop
mov
popa
lods
mov
loopne
mov
dec
leave
cs
xchg
mov
mov
ljmp
arpl
mov
inc
fmuls
sbbb
xchg
xor
fadd
lcall
push
scas
mov
aaa
jmp
push
cmp
inc
test
adc
mov
cwtl
jp
js
and
sub
shll
push
pop
js
lret
sub
sbb
sbb
xchg
push
fdivp
stos
fdivrs
lcall
and
jns
mov
into
call
mov
cs
subl
sarb
lret
and
mov
scas
in
add
sub
and
loopne
sbb
popf
mov
repnz
shll
lahf
hlt
and
push
out
adc
addr16
mov
pop
js
inc
lcall
rcrl
xchg
jg
pusha
mov
or
push
in
mov
cs
xchg
fstp
cmp
in
mov
cmp
out
fsubp
xchg
pop
sti
mov
mov
mov
jnp
lock
stc
dec
stos
jo
adc
repz
pop
mov
bound
popa
sbb
ja
jl
fyl2xp1
repnz
das
push
fldl
push
in
xchg
adc
pop
jge
mov
cli
rcrl
ja
xchg
xor
mov
jge
enter
push
mov
test
xor
ds
lret
das
jg
in
sub
inc
jp
push
loop
imul
js
cltd
jno
adc
sub
xchg
push
or
aad
int
out
in
cmp
in
push
pop
xchg
gs
rorb
jns
popa
push
push
cmp
jmp
lret
mov
es
call
lret
das
mov
mov
mov
gs
test
mov
cld
xchg
sub
jp
inc
mov
popa
mov
out
or
repnz
rcrb
xchg
les
jb
loopne
and
inc
out
hlt
jnp
xchg
icebp
sbb
pop
les
cmp
inc
and
xchg
inc
arpl
jmp
sbb
repnz
daa
push
in
mov
stos
outsl
pusha
popa
loope
mov
lret
das
mov
rcrb
cmp
lret
das
mov
incl
lcall
inc
fidivrs
adc
enter
xchg
add
inc
mov
std
aam
outsb
xchg
movsb
sbb
sti
cld
repnz
das
fadd
data16
insl
adc
outsb
and
and
mov
lret
jmp
ds
leave
jl
mov
les
aas
pop
xchg
int
lock
ds
lret
mov
inc
lods
lahf
dec
sub
mov
jg
cmp
mov
stc
in
jnp
sub
dec
inc
call
in
xchg
jo
sub
in
and
pop
push
popa
add
sub
pop
jns
mov
aad
cmp
jns
insl
repnz
and
inc
sbb
scas
mov
lret
mov
pop
xor
mov
xchg
push
sub
addr16
mov
hlt
scas
mov
popf
pop
inc
out
mov
and
adc
imul
scas
cmpsb
inc
pop
or
cmpsl
push
mov
mov
clc
xchg
and
mov
mov
pop
stc
repnz
ja
shll
dec
pop
les
in
jg
pop
nop
push
fcomip
fstl
repnz
in
pop
jle
dec
or
stc
add
test
ds
cs
jne
std
adc
popl
inc
pop
or
enter
mov
adc
loope
stc
notl
push
dec
into
cwtl
adc
jle
in
pop
jle
or
stos
add
push
sti
mov
stc
pop
scas
jl
pusha
dec
push
sub
aad
adc
lods
xor
mov
mov
push
jle
in
pop
add
cmc
imul
xchg
pop
fstps
jnp
sti
xor
ss
xchg
pop
jge
inc
test
adc
push
pop
fcomps
es
enter
jnp
dec
xlat
push
scas
sbb
cld
repnz
das
shl
cmpsb
xchg
mov
test
inc
adc
lret
das
mov
rol
outsl
adcl
xor
xor
push
sub
stc
repnz
mov
cmp
dec
mov
bnd
cmp
fiadds
leave
scas
inc
sbb
iret
out
inc
rolb
inc
push
rep
and
jmp
in
jo
xchg
sub
push
inc
inc
push
pop
mov
jmp
xchg
lcall
repnz
cwtl
out
and
das
ss
sbb
lret
mov
ror
repnz
push
mov
nop
sbb
ljmp
sti
inc
popf
aaa
xchg
aam
cmp
es
adc
add
push
sub
pop
mov
adc
push
push
or
xchg
lods
imul
cmc
lret
mov
scas
pop
aad
sbb
push
xchg
mov
sbb
xchg
adc
arpl
nop
cmp
lret
das
lods
popf
dec
xchg
cld
lods
ret
mov
sub
sub
dec
test
sub
scas
mov
sub
shlb
movsl
stc
in
outsl
mov
leave
xchg
pop
dec
adc
dec
bound
xchg
pop
jle
mov
call
mov
stc
int
cmp
fsubs
lret
scas
mov
inc
mov
inc
clc
xchg
or
xchg
int
stos
ja
scas
mov
jmp
scas
out
test
inc
filds
mov
lds
rcll
or
pop
jle
in
addl
push
mov
repz
in
xchg
push
mov
in
sti
enter
hlt
push
xlat
push
push
ret
and
inc
xchg
jg
cld
inc
in
cs
int
jge
pop
jle
in
lds
insl
or
leave
pop
push
je
js
and
in
repnz
fstps
aad
aaa
cmp
in
pop
hlt
mov
lods
dec
mov
cmc
sub
xchg
inc
jle
mov
fsts
sbb
cwtl
imul
bound
pop
sbb
xchg
jp
jne
adc
pop
lcall
ljmp
jbe
cmp
mov
repnz
cltd
xchg
push
fiadds
add
or
lods
and
and
lock
cltd
stos
iret
xchg
sbb
lret
adc
out
shlb
and
add
pop
scas
mov
dec
mov
ljmp
repnz
jo
lds
mov
movsl
sbb
mov
filds
orb
fldcw
in
pop
sahf
dec
push
fiadds
enter
xor
stc
in
inc
in
xchg
adc
pop
loop
loope
jbe
jecxz
xchg
pop
jle
sbb
lea
sub
hlt
popa
js
bound
mov
fs
jle
in
jecxz
xor
leave
inc
pushf
movsb
sub
repnz
mov
popa
mov
push
and
repnz
das
mov
repz
lret
and
das
mov
fwait
pop
lret
lcall
add
push
pop
in
imul
mov
sbb
pop
push
xchg
sbb
repnz
jbe
sub
jnp
mov
sub
movsl
inc
and
push
mov
stc
bnd
mov
insb
and
rcrl
nop
jns
jns
xchg
scas
ja
push
and
adc
loop
cld
lds
push
mov
jbe
push
mov
inc
xor
das
mov
inc
ror
adcl
and
pushf
lret
insb
inc
pop
dec
cld
repnz
aas
mov
add
cmpb
mov
stc
inc
mov
cwtl
mov
cmp
xor
sub
lret
subb
dec
mov
cmpsl
or
inc
in
jg
add
sahf
mov
xor
mov
outsl
fs
in
pushl
pop
xchg
xchg
out
loop
xor
dec
sbb
mov
gs
mov
mov
arpl
fimuls
in
push
mov
gs
pop
out
in
cld
ret
and
xchg
sbb
and
repnz
das
mov
mov
and
js
int3
ja
das
mov
mov
int3
and
arpl
add
das
mov
xor
test
sub
adc
test
repnz
fwait
mov
jno
cld
imul
movsb
xlat
mov
in
das
mov
fcoms
xor
xor
in
dec
add
fidivl
sti
dec
xchg
xor
or
jmp
repnz
mov
and
cli
out
jle
push
ror
das
mov
xor
mov
inc
addr16
pop
jle
testl
sub
addr16
stos
cmp
or
cld
jnp
xchg
push
imul
std
fwait
jno
jb
push
mov
push
mov
adcl
dec
lret
in
inc
jnp
mov
xor
arpl
xor
fsubl
and
add
push
leave
ret
adc
inc
or
xlat
push
mov
xchg
ljmp
cmp
xchg
jbe
ret
nop
stc
in
pop
sarl
push
xchg
mov
xor
jle
sarb
jo
inc
xchg
or
lret
das
call
push
dec
testl
daa
jg
imul
repnz
arpl
xchg
mov
push
pop
pushf
cltd
push
sub
cmp
jl
mov
repnz
test
sbb
jnp
repnz
sbb
xchg
cmpsb
push
fs
mov
ds
mov
dec
dec
maskmovq
notl
mov
std
int3
scas
mov
xchg
pop
jle
push
jmp
pop
sahf
fisubs
cld
jmp
jle
in
pop
fisubrl
dec
push
leave
xchg
push
jb
shrl
mov
lea
inc
jle
pop
rcr
rorb
jbe
cmp
test
mov
gs
cmp
scas
mov
orl
cmp
fistps
mov
lret
lock
notb
sub
push
and
ds
add
inc
dec
push
cli
or
mov
lea
sub
andb
and
jns
outsl
mov
stos
jg
fnstsw
addr16
icebp
in
xchg
adc
adc
lea
test
jge
dec
push
and
icebp
pusha
mov
xchg
pop
jle
dec
jl
loop
inc
loopne
pop
jle
in
push
stos
out
or
orb
cmp
nop
and
adc
jno
or
dec
push
sub
je
add
test
repnz
mov
fmulp
das
hlt
sub
and
aad
fstpt
scas
mov
sbb
inc
jge
loope
in
mov
cmp
or
mov
repnz
pop
sbb
jae
int3
add
mov
iret
in
aad
daa
pop
pop
clc
ficoms
adc
dec
ljmp
push
popa
push
jo
cld
xchg
enter
pop
jns
jge
mov
lea
in
dec
add
xchg
push
sub
sbb
cs
xor
outsl
dec
ficomps
inc
pop
xchg
sbb
dec
xor
mov
sbb
in
xchg
push
dec
push
xchg
pop
in
and
jmp
jle
addr16
jmp
fsubl
ljmp
test
pop
mov
push
xor
imul
stc
in
jbe
into
je
and
bound
or
in
pop
scas
xchg
jno
inc
inc
add
outsl
mov
daa
mov
cmp
fdivrs
mov
ljmp
arpl
push
add
mov
or
sub
xchg
sub
ljmp
sahf
leave
sub
pop
in
pop
mov
lods
mov
arpl
sti
pusha
jg
cld
repnz
adc
xchg
aad
cld
repnz
das
pusha
daa
mov
movsl
addr16
xor
hlt
enter
aam
push
aas
in
stos
and
lret
mov
dec
mov
dec
das
in
inc
inc
push
sub
push
mov
sub
sub
xchg
xchg
cli
cld
repnz
das
dec
push
inc
inc
mov
cmp
repnz
das
mov
and
mov
and
push
or
das
mov
popa
sbbb
out
inc
mov
jecxz
outsl
or
push
pop
adc
repnz
call
fdiv
sbb
test
lock
mov
out
mov
mov
sbb
lods
enter
fstp
xor
mov
cmp
imul
in
add
cld
gs
jp
in
inc
mov
and
xor
inc
bnd
jge
es
pop
sti
adc
shr
cmp
push
insb
insl
pop
in
mov
jb
mov
xchg
xchg
xor
cs
cld
repnz
das
test
cmp
fldenv
stc
mov
mov
adcl
fistl
sbb
mov
stos
add
push
pop
jns
push
cmp
mov
mov
jbe
std
add
in
scas
mov
xor
imul
clc
adcb
xchg
fidivs
pop
jns
xchg
sub
rcr
mov
jb
xchg
push
sub
or
lahf
cld
add
pop
and
adcb
imul
cmp
add
outsl
and
or
repnz
and
fsubrl
inc
stos
shlb
jp
in
enter
jecxz
int3
jmp
cmp
mov
stos
cltd
add
test
push
push
repnz
pop
out
in
xchg
rcl
sti
data16
mov
sub
mov
lcall
mov
repnz
repnz
js
lret
das
mov
push
lret
in
xchg
xchg
rcll
das
mov
lock
sub
testb
ljmp
fsubrp
fstps
pop
inc
jmp
cld
repnz
das
aaa
mov
and
lcall
mov
sti
lret
add
or
inc
mov
out
loope
and
notb
out
lds
jle
in
stc
pop
push
adc
xor
imul
movsl
or
repnz
inc
add
mov
jbe
repnz
imul
jge
shlb
es
popa
push
sahf
sti
rclb
roll
jb
pop
rol
shrl
mov
leave
and
lock
xchg
xor
jmp
repnz
mov
lock
outsl
xchg
xchg
sub
mov
pop
pop
das
mov
adc
ss
xlat
mov
dec
cld
repnz
or
push
push
and
mov
jcxz
jg
adc
or
cwtl
mov
pop
jns
xchg
sbb
dec
cmpsb
arpl
movb
dec
int
sbb
mov
out
arpl
xchg
aam
hlt
in
mov
test
outsl
push
mov
push
insb
xor
idivb
lret
mov
push
mov
outsl
shrl
scas
mov
and
mov
push
adc
scas
mov
stos
add
data16
jae
neg
mov
mov
leave
sahf
mov
add
mov
inc
scas
cs
or
mov
stc
notl
loopne
jae
jge
sahf
add
add
sbb
dec
adc
scas
mov
sub
cmpsb
fisttpl
test
sub
pop
push
lods
ds
mov
mov
js
lret
mov
or
stc
in
test
xchg
dec
push
xlat
daa
dec
shlb
ret
xchg
dec
push
jae
jle
in
hlt
and
pop
mov
call
cmp
push
lds
lret
sbb
imul
mov
ss
jmp
sbb
pop
jge
imull
push
push
cld
xchg
and
or
jns
call
mov
mov
es
in
push
pop
sub
and
arpl
addr16
pop
sbb
es
xlat
testb
sub
pushf
ds
cmpl
jmp
jle
inc
roll
fists
push
and
mov
pop
jle
in
mov
dec
iret
movsb
lret
cs
inc
mov
jmp
adc
sbb
imul
inc
adc
xchg
in
lock
lock
inc
jecxz
dec
mov
cmp
leave
mov
ds
mov
stc
out
xor
lret
mov
rolb
repnz
jp
push
hlt
cli
cmp
jns
test
push
jmp
scas
push
push
jno
sahf
out
push
lea
test
insb
sbb
lods
xchg
and
dec
fcoms
dec
nop
add
xchg
push
test
test
dec
sbb
nop
fwait
mov
sub
sbb
sub
jp
ret
dec
xor
jno
aaa
xchg
cmpsb
cmp
push
dec
jl
mov
into
outsb
push
in
xchg
push
push
scas
loopne
imul
ret
movsb
inc
jle
aad
ret
xor
lds
pop
pop
jns
cmp
in
out
decb
jg
les
push
lret
aaa
cmc
addr16
repnz
or
and
or
mov
in
das
or
push
fisttps
repnz
sub
fsubr
jae
push
es
fnstcw
push
in
jno
adc
xchg
pop
inc
jmp
cmp
aaa
xchg
sub
je
mov
test
imul
test
daa
lret
ret
das
pusha
aam
dec
inc
pushf
mov
popf
jo
mov
push
pop
jns
adc
jb
in
mov
mov
push
pop
jns
pop
nop
iret
jl
mov
xor
mov
xchg
jg
das
loopne
add
or
and
sbb
jns
push
inc
scas
mov
fsts
mov
daa
and
cmc
enter
cmpsl
loope
dec
cmp
cmp
in
cli
pop
repnz
ds
popf
pop
repnz
mov
dec
pop
dec
dec
xor
mov
mov
mov
dec
repnz
sub
add
andl
sarb
stc
or
push
pop
mov
gs
repnz
rolb
stc
in
or
mov
inc
out
and
outsl
pop
ss
cmpsb
nop
in
fsts
cld
repnz
push
ja
push
xchg
jns
clc
push
stos
cmp
mov
sub
cmpsl
int
sbb
rorb
mov
adc
cmc
cmp
lretw
call
adc
stos
jb
shrb
mov
mov
mov
cli
xchg
in
xchg
iret
das
scas
inc
std
add
fwait
bound
lret
inc
or
ljmp
repnz
cmp
sub
scas
mov
out
mov
sub
sbb
hlt
pop
movsl
out
dec
inc
scas
mov
adc
loope
inc
and
jns
sub
push
fcompl
xchg
push
pop
leave
ret
mov
pop
mov
fs
jmp
jo
andl
push
mov
lds
cmp
repnz
inc
cmpsb
sbb
sub
roll
into
inc
sub
xchg
jg
jns
or
test
and
stc
fistpll
xchg
pop
imul
mov
adc
xlat
dec
int
xchg
sarl
jb
mov
xchg
adc
out
cmp
repnz
das
mov
xchg
sub
xchg
lret
das
mov
push
push
aas
adc
ss
and
das
mov
iret
xchg
sub
inc
fldenv
adc
out
ljmp
dec
stc
xchg
push
pop
jns
call
clc
jno
shll
in
jle
cmp
jp
adc
xor
lret
imul
fsubrs
mov
jge
lea
mov
in
cli
filds
ficompl
mov
jmp
stc
in
pop
lea
mov
jo
or
popf
push
mov
jle
and
lret
sbb
and
inc
cmp
divl
mov
and
push
fiadds
pop
in
mov
push
pushf
add
add
and
in
jae
incb
and
jne
rcll
iret
jns
xchg
push
or
jg
bound
in
push
pop
daa
add
stc
test
xchg
xchg
push
pop
jns
mov
outsb
cmp
pushf
mov
enter
divl
jge
fcoml
push
stc
stos
inc
jns
push
mov
outsl
cmpsb
sub
cmc
in
pop
cmc
scas
cmp
inc
dec
outsb
jmp
repnz
das
jg
mov
sbb
out
sbb
and
mov
push
mov
jns
mov
cmp
jne
jge,pn
sub
jle
in
dec
sub
jp
mov
xchg
pop
inc
sub
es
sub
imul
add
mov
repnz
lock
test
sti
cltd
mov
aaa
cmpb
cld
repnz
sub
ret
sbb
add
pop
xchg
arpl
mov
cltd
aas
out
int3
dec
aas
sub
cmc
mov
fsts
jbe
outsl
scas
add
das
mov
adc
add
sbb
in
dec
sbb
inc
out
lret
adc
add
and
sub
and
push
popa
xchg
pop
xor
pop
stc
in
xlat
sbb
or
push
cmp
mov
shlb
xlat
xor
sbb
mov
hlt
shrb
xor
mov
xchg
das
pushl
lods
push
and
sub
xlat
in
push
stc
mov
cmp
das
rclb
stc
fisttps
sub
inc
fcompl
stc
in
sahf
and
cmpsl
jns
push
mov
sub
in
rorb
js
mov
dec
scas
mov
cmp
jno
loope
xchg
ss
pop
stos
rolb
adc
xchg
push
jle
insl
adc
add
inc
adc
pop
jns
mov
movsb
out
push
sub
ret
fbld
in
xlat
test
lret
jl
add
cmp
jno
fsubs
das
lcall
mov
sti
mov
shl
fstpt
notl
fwait
jmp
add
mov
pop
jecxz
xchg
stos
dec
nop
mov
inc
mov
jns
xchg
ja
iret
xor
cli
ds
xchg
push
pop
pop
mov
mov
int
mov
lahf
pop
sbb
push
pop
jns
sbb
loopne
jp
int3
cmp
in
movsb
jnp
mov
addr16
xchg
cmp
in
mov
jge
add
dec
fmuls
insb
jns
xchg
push
mov
or
outsl
sbb
xchg
push
pop
pop
call
adc
ja
or
cmp
loopne
test
in
mov
in
mov
test
jecxz
jle
lahf
stc
in
pop
mov
jp
hlt
cmpsl
dec
ds
pop
jle
xchg
mov
int3
jno
add
pop
jle
and
ret
jbe
call
ret
das
in
enter
enter
insb
dec
adc
enter
adc
jo
xchg
mov
ds
add
arpl
inc
arpl
push
dec
push
pop
jns
in
mov
sbb
shl
or
xchg
mov
cmp
aam
and
mov
pop
hlt
pop
jns
cmp
jecxz
and
roll
inc
push
imul
aaa
adc
das
mov
inc
repnz
jno
repz
jge
xchg
xchg
loope
test
inc
pop
loop
inc
mov
or
xchg
mov
mov
cmp
cld
repnz
lahf
fwait
xor
or
in
mov
push
leave
lret
das
mov
insl
and
mov
sti
adc
out
add
xor
testl
push
mov
dec
push
dec
gs
push
lret
pop
pop
inc
jnp
and
imul
adc
cmp
jns
jne
or
mov
pop
out
or
and
pop
mov
xor
mov
pop
jns
call
dec
decl
loopne
in
push
xor
lret
xor
out
sub
pop
pop
iret
cmpsb
and
and
cmp
adc
jle
in
daa
jmp
in
rol
sub
xor
scas
jecxz
jp
ss
push
in
pop
jle
inc
in
add
cltd
aad
mov
stc
fs
pop
insb
pop
aaa
mov
je
pop
jns
mov
std
push
pop
dec
and
fstps
mov
sub
pop
jle
adc
addr16
pushf
sbb
xor
sub
adc
xchg
rcl
or
in
inc
dec
ss
sti
pop
jns
loopne
cltd
imul
jle
jne
lret
cmp
pop
std
fbld
fisubrl
inc
js
lret
jle
test
das
push
fsubrp
adc
cmp
scas
mov
xchg
outsb
popf
add
fs
enter
pop
js
in
jg
push
sbb
ljmp
gs
stc
mov
push
xor
rcr
repz
stc
in
mov
cmp
testb
in
scas
xchg
xor
test
lret
xlat
cmc
jl
xchg
pop
jle
push
fsubs
cltd
dec
xor
cmp
jle
enter
xor
add
jle
in
inc
std
jbe
xchg
lock
and
in
pop
mov
fs
pop
fstpt
sub
push
rcrb
pop
arpl
pushf
gs
jecxz
out
mull
mov
addr16
push
call
fists
and
into
xchg
push
fiadds
fcmovnbe
cs
sub
test
jo
scas
into
int
popa
xorl
fiaddl
adc
ret
jp
aad
arpl
sbb
popf
inc
sti
arpl
cld
mov
fs
jg
ds
das
shlb
mov
push
xchg
and
cmp
cli
push
fimull
xrelease
hlt
cs
fsts
incl
inc
cmovb
sub
aas
dec
or
insb
xchg
pop
loopne
lret
and
dec
cmp
pop
push
sbb
repnz
ja
jnp
fwait
adc
jne
test
xchg
into
shlb
sbb
dec
int
mov
pop
dec
sbb
jl
ljmp
inc
xrelease
jge
lret
adc
push
jg
rol
add
jb
rol
add
leave
popa
addl
fs
jae
repnz
sub
outsl
jae
mov
sub
xchg
sub
jle
inc
arpl
inc
adc
jb
adc
cmc
push
popl
inc
jp
lock
pop
jns
cltd
pop
cmc
mov
loopne
cmp
cmp
ror
sarl
mov
lret
dec
sarl
or
push
pop
push
ficomps
js
pusha
jl
xor
xor
sti
hlt
pop
jns
xchg
outsl
and
dec
loop
in
aas
xchg
pop
mov
mov
cld
fisttpl
fcmovne
jmp
pop
in
push
pop
pushf
dec
inc
push
mov
xor
mov
fisttps
leave
xchg
sub
mov
mov
es
stos
xlat
mov
adc
fnsave
inc
outsb
in
inc
push
jle
mov
cld
push
mov
neg
mov
xlat
aam
pop
mov
leave
nop
enter
test
pushf
xchg
cmp
push
je
outsl
mov
rorl
imul
fwait
cmp
push
shr
cmp
ret
hlt
mov
aad
in
add
fists
xchg
jecxz
lahf
add
stc
adcb
jl
dec
lret
ds
enter
push
mov
inc
or
cmpsb
fbld
mov
inc
mov
sbb
adc
stc
in
cmp
mov
push
jl
fldl
xchg
push
pop
pop
outsb
xlat
and
push
pop
adc
movsl
ffreep
movsl
xor
ret
pop
xchg
pop
jle
pop
jmp
mov
cmp
stc
dec
rcrl
stc
in
sub
jp
sbb
gs
in
jbe
addr16
fisubrs
or
dec
repnz
and
dec
dec
push
std
mov
sti
aas
daa
sub
adc
add
out
call
icebp
cmp
jmp
jns
xchg
push
ret
inc
sbb
in
mov
inc
ffree
and
xor
lock
inc
loopne
fs
ja
push
mov
pop
xlat
add
jl
inc
xchg
xor
clc
or
push
and
mov
push
and
stos
inc
scas
jg
cld
repnz
push
pushf
addr16
fsub
rorw
loope
cltd
cmp
ss
inc
adc
dec
insl
inc
jne
add
je
in
das
scas
rcl
dec
cwtl
cmpsl
mov
mov
cld
mov
cli
jl
call
lahf
pop
testb
dec
pop
jle
in
into
add
aam
loop
out
in
aad
stc
in
jge
test
scas
push
jle
sub
sbb
jp
insl
inc
or
or
stc
ja
out
out
imul
xor
push
or
ja
jecxz
stc
mov
jnp
xchg
pop
jle
ja
jg
push
xchg
or
pop
jns
loop
js
pop
dec
sub
mov
in
push
pop
sbb
mov
sub
mull
push
pop
add
dec
jg
icebp
out
lahf
mov
mov
cld
cmp
cli
inc
adc
dec
shll
iret
in
add
push
or
cli
jnp
cld
shll
lret
jbe
cltd
or
fcompl
repnz
das
mov
icebp
jne
sbb
das
mov
mov
dec
xchg
cltd
cmc
mov
in
lahf
mov
jp
in
mov
inc
not
jns
loopne
cmpsl
and
sbb
cwtl
pop
jle
in
divl
arpl
out
xchg
and
fstl
xor
jle
in
inc
push
pop
cmp
mov
repnz
pop
fwait
dec
test
xor
aam
lret
das
xchg
mov
dec
adc
ret
push
je
mov
bound
pop
sahf
mov
lret
sarb
fistps
rcl
cmp
std
dec
jbe
cmp
and
sahf
pop
pop
xor
cmpsl
jo
sub
xchg
insb
repnz
int
sbb
test
push
lret
mov
add
jmp
cmpsb
push
mov
mov
push
fsubs
mov
dec
aaa
pop
repz
cltd
or
lret
aas
jge
jle
inc
push
xchg
outsb
cs
insl
mov
das
mov
das
lds
mov
add
push
imulb
mov
pop
enter
mov
enter
repnz
sbb
push
jno
cmpsb
and
ret
cmp
push
cld
repnz
das
mov
sub
xor
lret
das
mov
cmp
inc
fwait
sbb
imulb
and
xchg
push
pop
jbe
out
inc
fsubs
and
mov
and
loopne
push
loop
xor
std
mov
lret
fbld
dec
push
fldl
repnz
and
mov
ror
negl
cmp
add
in
pop
push
xchg
rcrl
pop
jns
xchg
test
dec
test
sub
cli
dec
jns
xchg
push
pushf
and
cmp
negb
push
pop
jge
xor
mov
mov
push
gs
pop
jle
in
call
ds
or
jle
in
incb
int3
mov
jl
jo
repnz
pop
out
inc
pop
xchg
pop
mov
mov
rcrb
mov
repnz
das
jmp
decl
int
enter
das
mov
add
jns
fisttps
das
mov
sbb
arpl
imul
mov
lret
cmp
std
fs
repnz
adc
rcrb
orl
scas
mov
pop
adc
sete
cld
repnz
cmp
mov
ss
mov
cld
jnp
pop
movsl
fbld
lret
xlat
cmpsb
rcl
add
lret
das
mov
int3
pcmpeqb
das
mov
sbb
scas
cmp
mulb
js
cmp
or
scas
mov
pushf
jnp
pop
add
repnz
sahf
stos
jl
imul
in
mov
into
mov
pop
scas
pop
jns
xchg
mov
mov
push
out
sti
add
push
pop
xor
xor
sti
test
cmp
sub
fimull
in
pop
mov
movsl
dec
cmp
jns
js
aaa
and
stc
cmp
sub
mov
fstps
repnz
fsts
dec
insl
cli
and
jns
arpl
das
mov
aaa
leave
add
aam
dec
cld
repnz
fsts
xor
icebp
push
pop
iret
mov
or
arpl
push
dec
clc
in
lea
ja
adc
in
sub
popf
inc
lea
in
mov
andl
movsl
lods
in
push
pop
aam
push
insl
lret
dec
mov
jns
nop
xchg
xor
out
mov
shrb
dec
inc
out
cmp
imul
mov
xchg
sti
mov
sarl
pop
jns
or
fwait
fcmovbe
lss
enter
rorl
pop
inc
or
push
or
test
mov
mov
xchg
xchg
push
pop
jns
sti
fistps
xchg
lret
daa
xor
add
ja
dec
fstl
dec
mov
imul
xchg
pop
out
pop
je
push
push
loop
mov
lret
das
lcall
pop
add
xchg
adc
test
repnz
jp
ficompl
cmp
cld
repnz
hlt
mov
es
jmp
jne
in
and
mov
outsl
test
repnz
cltd
sbb
xor
or
repnz
das
mov
ror
xor
mov
and
push
inc
cmpsl
orb
lock
fld
daa
pop
pop
mov
ss
cmp
jns
daa
jge
or
enter
push
or
stc
js
jns
mov
cmc
push
xchg
ficompl
pop
xchg
push
ds
xchg
fimull
add
jnp
dec
in
shll
pop
dec
adc
jns
sbb
push
cmp
push
pop
add
cmp
in
xchg
sbb
push
pop
jns
sub
insb
js
mov
fimuls
lea
ret
xchg
lds
jns
xchg
push
sti
mov
test
and
xchg
push
pop
dec
popa
jnp
inc
xchg
loope
test
adc
pop
cmp
pop
ret
adc
push
movsb
xchg
jle
in
and
add
xor
imulb
or
stc
in
pop
xor
sbb
cwtl
pop
mov
pop
jle
xchg
xchg
orb
and
stc
aad
popa
xchg
ja
nop
rolb
in
mov
cmp
mov
cmp
fisttps
int3
cmc
es
cld
repnz
leave
pushf
divb
stc
mov
pop
cli
rorl
mov
sbb
test
repnz
pop
adc
mov
stc
idivl
fidivrs
cmp
fstl
das
cmp
push
in
fdivrs
push
pop
jns
dec
lahf
pushf
pop
in
scas
aas
push
jno
andl
push
jns
xchg
lods
insb
arpl
out
out
mov
stc
daa
js
jl
mov
jle
sub
sti
jns
stc
in
pop
inc
pop
clc
add
sub
cmp
mov
ds
push
mulb
repz
insb
stos
and
lds
mov
insl
mov
out
inc
mov
cmc
push
jne
jge
ret
cmp
jne
test
adc
gs
or
adc
adc
xor
mov
xchg
dec
mov
leave
mov
out
daa
or
sti
mov
mov
out
add
nop
push
xor
insl
cmp
sub
adc
cmp
andb
popa
stos
xchg
out
test
pop
jns
sbb
push
jp
pop
test
in
push
xchg
std
xor
jle
xchg
push
pop
push
mov
cmpsl
aad
inc
pop
push
ficoml
jne
push
sti
xchg
sub
jmp
jo
mov
and
lret
call
lret
rcl
addr16
xchg
sbb
lcall
mov
pusha
adc
imul
mov
xlat
xchg
std
fcoml
loope
jle
and
stc
repnz
das
les
or
mov
xchg
adc
jmp
das
xlat
jnp
xor
push
mov
loopne
test
xchg
push
fisubrs
and
je
fsubrs
jns
popf
jo
orb
in
add
xchg
push
pop
sub
xchg
out
pop
aaa
movsb
pop
loope
inc
push
pop
jns
xchg
jno
push
stc
sub
fsubrp
ljmp
adcl
into
aad
pop
shll
lahf
xchg
popf
adc
je
int
or
jnp
sub
sub
lcall
repnz
mov
jno
fidivrl
xchg
push
mov
ss
sub
xchg
push
pop
lods
ret
sbb
sbb
leave
js
or
jg
pop
jns
inc
jbe
pusha
lods
negb
jmp
stc
in
aaa
subl
test
pop
lds
push
xchg
xor
adc
push
fimuls
xchg
add
repnz
shlb
repz
push
xor
loop
repnz
outsb
jae
iret
bound
push
pop
lret
mov
lods
testl
repnz
lcall
in
test
mov
jne
hlt
mov
adc
insl
popa
fmuls
mov
and
cmp
sbb
dec
inc
testb
lret
fldl
dec
cmp
inc
lret
mov
insb
loopne
mov
push
mov
in
fcoml
into
fcompl
or
aam
rolb
ds
mov
insl
js
mov
inc
fldcw
clc
pop
dec
ljmp
int
lods
pop
gs
lret
push
pop
jns
and
cmpsl
imul
aam
sar
in
cld
sub
in
bound
push
scas
lds
push
lret
sbb
test
jns
xchg
push
mov
pop
cltd
jo
and
cmpsl
leave
and
mov
push
pop
call
adc
mov
push
cld
repnz
jo
std
inc
mov
xchg
push
addr16
shll
adc
cld
repnz
das
jge
adc
pop
inc
xor
scas
stos
aaa
pop
xchg
out
inc
jnp
sbb
scas
mov
or
hlt
dec
jns
jmp
sbb
sbb
pop
xchg
mov
dec
adc
mov
adc
and
push
jb
popa
mov
sti
jnp
lret
aaa
or
out
outsl
pop
pop
inc
cld
inc
xor
movsb
lds
repnz
enter
outsb
sti
andl
das
mov
lret
adc
cltd
sbb
cmp
pop
pop
stc
and
xorl
repnz
cmp
jmp
adc
fisttpl
aad
xor
ret
xchg
fwait
xchg
push
pop
jns
sbb
insb
mov
dec
mov
fs
popa
and
notl
in
pop
test
rcrl
dec
stos
ljmp
das
mov
call
fstps
cld
repnz
ret
sub
cmp
pushf
out
jnp
js
fisttps
push
xor
inc
fidivs
push
mov
stc
in
aam
bnd
lock
xchg
mov
movsl
dec
gs
in
pop
and
dec
test
adc
sbb
xchg
pop
jle
mov
adc
pop
jle
stos
repz
subl
jle
in
and
sbb
push
inc
ret
pop
je
xor
dec
jmp
jnp
enter
addr16
mov
mov
lret
cld
jmp
adc
test
lods
dec
cmp
imul
mov
repz
js
in
mov
mov
repnz
arpl
jno
loopne
out
lcall
jge
arpl
push
add
lret
data16
das
sbb
inc
inc
leave
xor
xchg
test
inc
loope
rclb
lret
das
inc
or
test
pop
mov
cld
in
mov
adc
movsl
scas
out
fs
xor
in
xchg
fldt
jne
repnz
fistl
mov
pop
mov
sub
sbb
sub
push
mov
add
and
jno
ss
sarb
mov
fisttpl
lods
mov
xor
xor
inc
test
das
dec
sub
push
add
xlat
jno
leave
sbb
xchg
pop
jle
lods
in
cwtl
mov
push
incb
repnz
stc
hlt
stc
int3
imul
pop
xor
cld
xor
push
adc
jbe
mov
fucomp
cmpsl
scas
jne
mov
pop
jns
ljmp
nop
int
and
in
pop
jns
cmp
insl
and
pop
stc
loope
sub
fists
sbb
sub
push
pop
outsb
and
stc
shrb
mov
cmpsl
icebp
sub
and
lret
mov
subl
jo
inc
insb
ficomps
pop
mov
cmp
and
push
popf
ja
xchg
push
pop
adc
movb
cmp
pop
jle
sub
xlat
adc
mov
out
add
not
stos
jo
xchg
push
lods
sub
push
jg
in
push
stc
notl
push
lcall
loope
xchg
pop
jle
lods
jnp
fmull
icebp
in
lods
jae
push
mov
xchg
push
pop
jns
or
push
stos
push
out
add
jns
dec
inc
aas
push
test
loopne
out
sub
pop
pop
jns
xchg
inc
fbstp
into
stc
mov
clc
sbb
in
push
pop
popf
movsb
push
or
sub
movsl
sahf
and
icebp
xor
lods
daa
std
in
sahf
stos
xchg
jmp
in
sub
outsb
pop
pop
aaa
mov
lret
das
mov
and
lock
jns
cmp
ret
movsl
xchg
xchg
and
or
sti
add
ficoms
inc
mov
jecxz
cld
xor
clc
ljmp
xchg
leave
inc
inc
jno
lds
jbe
xchg
jg
pop
pushf
adc
pop
lea
push
pop
jle
in
ficompl
adc
icebp
or
xchg
inc
stos
push
jns
sbb
pop
fdivr
mov
repnz
xchg
pop
ja
sarb
aas
arpl
test
inc
mov
mov
imul
xchg
sub
sub
cmpsl
pop
adc
inc
xchg
fs
movsl
xchg
mov
rclb
stc
mov
fisttpll
inc
inc
out
mov
or
lds
mov
cmc
push
pop
das
dec
pop
cli
leave
int
sub
js
pop
lds
stc
in
addr16
pop
cmp
iret
scas
cmp
push
outsb
fstps
aad
mov
and
scas
push
aaa
and
pop
mov
adc
mov
ljmp
lods
mov
xor
lret
insb
jmp
ss
push
fidivrs
and
dec
dec
jl
mov
pop
mov
iret
jge
dec
mov
pop
aas
das
push
cld
repnz
das
add
imul
popl
jge
lret
das
mov
inc
inc
pop
cmp
xchg
xchg
iret
sub
stc
mov
in
ret
repnz
fnstenv
xor
or
scas
xor
lret
das
mov
adc
adc
jae
aas
das
mov
idivl
fsubrl
add
stc
repnz
inc
out
and
cwtl
push
jecxz
jns
fsubl
mov
lds
add
xchg
pop
pop
shlb
jp
popa
mov
sahf
mov
repnz
das
mov
mov
mov
mov
imul
jge
das
mov
outsl
stos
xchg
add
lea
imul
test
loope
call
sti
leave
lret
das
adc
pushf
and
add
repnz
pop
stc
mov
setns
lret
das
mov
sub
shrb
sbb
pop
ret
hlt
adc
das
mov
sub
out
sub
xchg
stc
xor
push
sti
je
adc
mov
xchg
inc
dec
or
sbb
and
xor
xchg
lret
mov
mov
push
imull
scas
mov
stc
inc
shll
popa
in
and
inc
test
push
stos
push
adc
sti
bound
inc
sub
push
dec
pop
sub
jg
divb
rcrl
fdivs
cmp
test
and
in
jg
sti
ret
or
push
push
xchg
mov
lret
das
mov
mov
ret
cmp
enter
mov
add
lahf
jecxz
xchg
mov
and
in
adc
push
lea
inc
gs
mov
xchg
fsubrl
mov
mov
push
xchg
cmp
stos
addr16
scas
xor
inc
pop
xor
scas
sti
repz
lret
mov
test
mov
sub
sub
pop
mov
scas
mov
cltd
add
loope
inc
and
sub
mov
pop
aad
das
ds
aam
jge
add
push
das
mov
bound
xor
jge
lret
push
xchg
mov
pusha
icebp
je
xchg
jbe
xchg
pop
mov
pusha
icebp
mov
jle
xchg
pop
jge
jbe
inc
mov
xchg
mov
push
jecxz
bound
ds
fsubs
add
enter
xchg
ja
gs
sub
and
jb
in
push
pop
or
ret
lea
clc
cltd
xchg
push
pop
jns
mov
sbb
les
cmp
push
pop
jns
pushf
lods
inc
sub
push
lea
and
sub
es
inc
push
xchg
and
enter
das
mov
rorl
jge
cmp
xor
add
inc
scas
imulb
frstpm(287
fbstp
mov
jmp
xchg
pop
jle
adc
les
inc
inc
ljmp
clc
enter
xchg
xchg
into
jp
jns
xchg
push
cmp
mov
xor
xor
in
push
pop
xor
pop
push
adc
xchg
push
pop
jns
fdiv
fists
push
pop
pop
lret
push
pop
jns
lods
and
push
repnz
dec
inc
data16
inc
dec
jnp
aad
pop
mov
jmp
test
jge
fwait
add
sbb
ds
arpl
mov
ss
ficompl
call
pop
or
mov
sbb
add
push
mov
lret
mov
cmp
popf
mov
mov
arpl
std
sub
pop
jb
cld
repnz
out
add
in
mov
mov
idiv
repnz
das
inc
fistpll
sub
das
mov
xchg
dec
aaa
pushf
xor
and
adc
loopne
lahf
ljmp
sub
xor
in
std
mov
dec
xchg
push
mov
fisttpl
jne
insl
push
ds
jns
or
mov
fbld
sub
xchg
push
int
ja
int3
data16
into
jo
shlb
xchg
push
pop
je
ds
leave
jge
push
xchg
push
pop
jns
imul
xor
and
mov
and
loop
dec
aaa
adc
jmp
jns
jne
pop
icebp
stc
push
and
notl
cmpsl
sub
jmp
xchg
push
pop
test
packssdw
dec
mov
push
pop
jns
imul
push
cld
fistpll
repnz
mov
sti
mov
int
std
pop
mov
repnz
das
jmp
cmp
dec
out
and
cmp
mov
cld
mov
int3
push
jg
cmp
mov
and
lahf
pop
mov
stc
icebp
push
push
pop
call
lret
mov
mul
ss
test
sub
dec
xchg
pop
subl
cmp
out
out
cmp
aam
inc
ss
cmpsl
mov
gs
xchg
les
enter
jp
mulb
shll
mov
sarl
push
stc
push
dec
call
inc
mov
push
stc
in
jnp
cmc
adc
mov
enter
int
ds
adc
inc
scas
mov
fisttpl
sbb
sbb
push
push
subb
xlat
pop
lds
lods
cmpsl
mov
mov
roll
das
mov
mov
cmp
mov
hlt
in
sub
cld
repnz
push
mov
pop
mov
pop
mov
push
shlb
lret
pop
xor
lods
mov
test
mov
fadd
repnz
sti
jb
arpl
dec
stc
and
scas
mov
inc
sub
and
mov
out
lds
add
lret
sub
sub
ds
lret
mov
push
cli
cmp
add
cmp
cld
sti
enter
add
mov
add
adc
mov
xor
mov
xor
in
nopl
pop
imul
mov
sti
imul
ja
cli
sub
mov
mov
cmp
sbb
repnz
sbbb
test
xchg
dec
sub
mov
push
jge
jns
popf
mov
xor
ret
pop
push
mov
jbe
mov
scas
mov
sbb
mov
stos
mov
lret
out
dec
sub
lret
test
repnz
das
test
popa
jbe
dec
add
sub
push
inc
pop
push
and
cli
mov
repnz
ja
inc
mov
fstps
dec
dec
jge
and
scas
icebp
addr16
out
lret
cltd
loop
push
and
sbb
aaa
lret
mov
shll
rorl
imul
lcall
es
aas
loope
sub
shll
scas
push
sbb
inc
scas
and
enter
lds
or
andl
shlb
mov
mov
push
jns
xchg
aaa
mov
insb
mov
mov
cwtl
movb
mov
fwait
mov
repnz
mov
orl
out
fldenv
and
pop
lock
sbb
fimuls
mov
repnz
inc
jg
lret
cli
ss
or
lret
lea
xchg
mov
jnp
cmpsb
ds
outsb
push
and
pop
jns
xchg
push
scas
jae
and
je
mov
cwtl
jge
das
pop
stc
repnz
fldenv
arpl
pop
xor
push
rcll
lret
shll
lahf
jns
fcomps
pop
jge
and
mov
sub
test
inc
call
in
mov
lret
add
xchg
stc
in
pop
add
cmp
lcall
jle
bound
mov
xchg
add
mov
push
jle
in
inc
sbb
or
adc
repnz
scas
sbb
or
mov
sbb
dec
cld
repnz
das
test
adc
jmp
insb
add
lret
das
mov
ret
ljmp
dec
cmp
mov
add
in
xor
xchg
jns
pop
push
mov
and
sub
mov
lret
mov
test
insb
xlat
subb
mov
sub
sbb
xchg
xchg
push
mov
mov
leave
das
jg
pop
ljmp
fdivs
cld
repnz
sbb
loope
les
jge
repnz
das
nop
outsl
dec
mov
ss
adc
repnz
das
mov
mov
mov
dec
and
push
jnp
movsb
dec
inc
inc
jae
mov
pop
ss
ljmp
and
arpl
and
and
scas
enter
adc
mov
bnd
lahf
mov
jnp
into
sarb
xchg
ja
or
es
jge
sar
dec
lods
cmc
mov
repz
cld
jnp
xchg
pop
call
mov
mov
adc
lret
das
mov
notl
and
movsb
mov
mov
ret
pop
xor
inc
je
add
pop
xchg
pop
jmp
hlt
mov
daa
and
inc
pop
jle
in
insb
sub
push
pop
test
cmp
mov
xchg
int
cld
jb
cmpsl
pop
hlt
push
cld
fnstenv
filds
lret
das
pushl
and
jg
in
das
mov
sub
ja
out
inc
fdivr
in
or
fdivrp
inc
arpl
cltd
pop
xchg
push
pop
jns
in
pop
xchg
shlb
js
adc
pop
jns
stos
jle
iret
loop
jno
and
jns
xchg
jne
leave
add
clc
test
scas
pop
jecxz
mov
push
fdivrl
jmp
stc
in
pop
test
xorb
in
push
jae
xchg
pop
jle
vdivpd
pop
imul
stc
ret
sbb
adc
push
ds
xor
shlb
outsl
push
sti
push
sti
mov
daa
lock
dec
fstpt
inc
scas
mov
cmp
adc
in
sbb
or
aaa
xor
les
lret
inc
inc
jecxz
pop
adc
dec
sub
pusha
pop
xchg
push
mov
cld
addr16
scas
mov
cmpsl
push
scas
mov
mov
in
enter
imul
sub
repnz
ds
xchg
or
shrb
repnz
inc
add
repnz
int3
inc
les
movsl
xchg
push
pop
jns
inc
cmp
mov
mov
push
mov
enter
jmp
ss
mov
lods
xchg
arpl
cli
cmpsl
mov
jbe
repnz
mov
fdiv
sub
fsubrp
adc
test
or
addr16
js
lret
and
push
fcoml
push
ficomps
stos
aam
push
mov
pop
jecxz
ret
push
pop
jns
xchg
sbb
mov
dec
mov
pop
and
pop
jns
xchg
push
shlb
ljmp
xchg
push
addb
sub
popf
addr16
psrad
movsl
inc
mov
mov
jne
push
pop
sbbl
pushf
sub
scas
mov
xchg
fdivrl
enter
inc
call
cmp
pop
out
and
notl
adc
notb
cld
out
cmp
sbb
ljmp
out
add
aad
jns
in
dec
pop
cmp
xor
aas
mov
xor
lret
xor
add
pop
jns
stos
jb
inc
push
xor
in
popf
roll
push
ljmp
add
aad
push
cmp
pop
xchg
inc
gs
sti
enter
arpl
repnz
lret
das
mov
nop
out
sbb
and
lret
das
mov
push
sub
sbb
fdivl
in
jb,pt
sub
cmpsb
sti
imul
and
or
test
mov
inc
sub
loopne
mov
clc
enter
in
xor
leave
pop
xchg
push
ficomps
int3
mov
movsl
cmp
pop
jns
jae
rcrb
test
adc
xchg
in
mov
xchg
inc
jno
xchg
push
cmp
add
xchg
pop
xchg
mov
lea
jg
mov
cli
sub
jno
in
push
xchg
retw
repz
pop
inc
stos
and
jge
imulb
xor
xchg
push
push
mov
shrb
or
int3
lret
mov
mov
jb
test
adc
and
push
inc
loop
xchg
add
cmp
cld
mov
lcall
in
jecxz
icebp
sub
testl
repnz
stos
outsb
in
int3
inc
int
mov
mov
je
repnz
das
sbb
xor
subl
sahf
movl
inc
les
shrb
lret
das
mov
call
mov
mov
jnp
cmpsb
in
outsb
jo
in
scas
les
movsl
sbb
and
cltd
cwtl
imul
iret
loop
xor
lret
mov
ds
dec
test
sbb
fnstenv
rcr
mov
daa
push
popa
scas
scas
mov
pop
imul
aaa
push
jmp
mov
repnz
xchg
scas
pushf
loope
push
push
xchg
push
xchg
insb
repnz
mov
xor
dec
inc
mov
lds
jno
mov
imul
icebp
mov
and
dec
jns
dec
push
or
dec
in
repnz
sahf
add
mov
pop
out
fwait
repnz
jns
decl
inc
lret
sub
mov
ja
gs
ret
lcall
cld
repnz
test
out
inc
sbb
addr16
jge
xor
repnz
das
sbb
push
mov
addr16
aad
idivb
ja
fstpt
mov
fwait
in
jg
repnz
jbe
repz
inc
pusha
jo
mov
jle
xchg
xchg
inc
and
sbb
xlat
pop
xchg
mov
dec
xchg
pop
jg
clc
or
clc
repnz
rolb
pusha
pushf
mov
das
decl
ret
jge
mov
cld
repnz
mov
sbb
sub
scas
cmc
repnz
inc
arpl
sbb
sarl
scas
mov
leave
jmp
pop
test
dec
jmp
sub
push
mov
push
sti
push
enter
in
test
mov
jle
in
loope
mov
mov
rcrl
mov
jle
in
mov
xor
and
mov
push
lods
jne
jl
pop
jns
or
push
pop
xor
jns
xchg
push
jns
jge
idivb
out
aaa
mov
inc
pop
mov
orl
mov
hlt
and
aaa
mov
inc
hlt
jnp
inc
push
pop
add
mov
dec
xchg
fsubrl
jl
out
sbb
test
mov
cs
sbb
imul
in
push
push
out
inc
stos
daa
cmp
ja
inc
push
cmp
ja
inc
pop
jns
mull
push
out
and
mov
loope
jg
dec
add
cmp
lret
pop
xchg
inc
xchg
xchg
testb
pop
lret
mov
or
cli
sbb
ror
mov
xchg
ss
pop
mov
mov
mov
subb
sub
jecxz
repnz
lea
shll
dec
pop
mov
add
scas
mov
mov
lahf
mov
xchg
ds
dec
fsubrl
and
cmp
push
rolb
xor
hlt
into
scas
mov
rclb
push
scas
inc
pop
mov
out
xchg
add
leave
and
adcl
cmp
popl
jecxz
arpl
test
pop
jns
loope
gs
loope
shrb
lock
in
push
out
es
repz
jmp
add
loop
aaa
push
in
push
mov
mov
repnz
out
xor
inc
mov
insl
rcll
test
mov
mov
push
popf
xchg
cli
pop
xor
repnz
clc
and
sbb
jo
push
mov
dec
adc
cld
repnz
das
mov
aam
sahf
push
xor
cmc
enter
dec
xchg
rcll
pop
jns
cmp
lea
xchg
lea
jge
sbb
xchg
stc
popa
xlat
and
repnz
mov
rclb
cmpsb
shll
lret
mov
jg
divl
push
mov
jb
rol
sahf
imul
and
lret
das
cmp
add
call
inc
or
fistps
stc
addr16
out
mov
mov
jle
push
cmpsl
add
and
aas
std
test
lock
push
clc
pop
jle
in
adc
hlt
orl
stc
in
or
mov
inc
repnz
pop
test
nop
and
cmpsl
mov
pop
jle
inc
in
sbb
xchg
shr
pop
jle
in
cmp
fiadds
push
xchg
xchg
inc
dec
ljmp
sbb
xchg
icebp
enter
ret
pop
push
sbb
scas
mov
jle
lea
mov
xchg
push
mov
mov
idiv
xor
outsb
mov
cld
repnz
iret
push
aam
sub
sub
push
mov
insl
movsl
inc
cmpl
mov
xchg
das
xchg
out
ucomiss
jp
fwait
pop
dec
fbld
jge
cmc
jg
fstps
dec
test
rclb
imul
in
jl
in
push
pusha
lret
iret
add
std
inc
out
lea
jecxz
lcall
mov
cltd
lock
repz
in
and
mov
sbb
ds
jo
fisubrs
cmp
xor
sbb
jg
insl
lret
mov
imul
dec
cmp
sbb
lods
cmp
xchg
inc
pop
xchg
inc
and
jo
les
mov
mov
sub
inc
or
push
xchg
pop
jge
outsb
out
xor
mov
rolb
in
lods
adc
lds
loopne
lahf
adc
push
xor
jle
in
dec
ds
add
jle
cmpsb
call
stc
in
pop
or
mov
xchg
outsb
lret
das
lcall
loopne
call
jecxz
cmp
mov
jno
cmp
rcrb
xlat
das
mov
adc
sbb
pop
fdivs
aaa
pop
pushf
dec
gs
or
mov
mov
das
in
mov
je
pop
cwtl
mov
bound
adc
lods
loopne
adc
sub
clc
mov
ds
cmp
subb
testb
sub
or
add
pop
mov
mov
sub
mov
sub
jle
in
push
std
pop
xor
pop
pop
hlt
xor
bound
fs
clc
xchg
or
pop
test
mov
jp
ret
jno
xchg
pop
jle
xor
ret
out
cli
imul
xor
push
push
imul
mov
enter
fmul
arpl
jl
inc
adc
insb
pushf
fcomi
push
jne
enter
inc
pop
aam
sbb
jne
xor
xchg
jg
add
xchg
imul
stc
mull
fxch
mov
adc
xor
xor
movsb
dec
or
push
addr16
jno
inc
jnp
pusha
popa
inc
sub
outsl
add
imul
cld
dec
mov
xor
in
inc
jge
add
inc
xchg
cmp
mov
adcl
dec
xchg
testb
pop
jns
pop
jg
pop
jne
sbb
sub
in
inc
aam
in
and
xchg
mov
xchg
pop
jle
cltd
fcmovne
xchg
shrb
cmc
xchg
pop
jle
xchg
das
dec
rcrb
outsb
pop
mov
cmpsb
fstl
mov
aad
addr16
ret
outsl
sbb
in
jp
cmpsb
iret
xchg
add
adc
stc
in
pop
rcl
lock
std
pop
cs
xchg
pop
jle
mov
and
mov
xchg
pop
jle
cmp
shll
fwait
push
mov
sub
xchg
ds
dec
int3
fst
inc
ret
cld
mov
xchg
mov
and
lcall
popf
sub
movl
push
in
xchg
subb
std
inc
loope
inc
lret
lahf
xchg
subl
sub
ret
rcrb
repz
mov
jo
imul
sbb
xchg
pop
fsubrl
scas
mov
xchg
sarb
jle
repnz
into
pop
stc
repnz
pop
cs
push
lods
push
inc
mov
lret
insl
and
popf
cs
out
push
pop
and
lods
mov
push
out
dec
repnz
mov
and
mov
add
mov
mov
mov
das
loopne
mov
sbb
sbb
or
xchg
jg
cmp
outsb
jbe
jge
lret
push
pop
xchg
inc
jbe
loop
imul
pop
mov
sub
std
aas
push
cli
cld
inc
inc
pop
cmc
adc
add
dec
sti
xor
xchg
mov
xchg
pop
push
mov
mov
fstpl
imul
pop
xchg
push
mov
mov
daa
pusha
sub
jbe
repnz
push
pop
xchg
sub
push
and
mov
out
jp
dec
in
dec
popa
mov
mov
jnp
pop
in
adc
in
and
movl
in
pop
jle
subl
or
xlat
xchg
pop
jle
data16
test
push
inc
aad
jge
pusha
in
pop
loop
xchg
loop
leave
fwait
push
pop
jns
or
sub
sarl
je
xchg
pop
sbb
dec
adc
enter
mov
or
xlat
pop
xlat
cld
stc
in
pop
push
fisttpl
stos
jne
cmpb
jle
pop
rolb
scas
cmp
mov
or
lods
jge
inc
das
mov
lea
pop
movsb
mov
pushf
stos
scas
pop
sbb
mov
arpl
mov
pop
xchg
jge
lret
das
sbb
pop
movsb
adcb
push
pop
jns
rcll
and
icebp
leave
xor
jg
pop
jns
xchg
stos
push
fcmovnbe
rorb
pusha
fstps
sub
in
push
pop
pop
ljmp
lahf
and
fbld
push
pop
jnp
sti
cld
or
aad
jns
ja
jl
in
leave
daa
jne
jmp
pop
daa
scas
cmp
fbstp
popf
mov
sti
out
ja
jge
xchg
pop
cmp
ret
rolb
sbb
enter
pop
cmc
inc
and
in
push
ficoms
std
adc
out
dec
mulb
stc
push
cmp
cmp
lahf
pop
jle
in
cmc
in
and
adc
adc
xchg
insb
cmp
gs
je
pop
in
ja
rorl
es
adc
clc
rcll
mov
push
xchg
negb
repnz
sbb
cmp
bound
pop
adc
jg
icebp
pop
sti
pushf
jecxz
jae
jg
faddl
gs
mov
jmp
stc
in
pop
jp
rcll
dec
cmp
imul
pop
sbb
aam
insl
rorl
jns
fsubrl
imul
and
enter
and
addr16
push
ficomps
pop
out
xor
jmp
repz
rclb
dec
stc
sub
mov
mov
repnz
mov
fcmove
sbb
jl
adc
int
lret
das
mov
out
xchg
jp
mov
mov
pushl
adc
dec
inc
lea
mov
out
sti
outsb
test
rcll
das
mov
out
cmp
insb
xor
lret
das
mov
dec
push
sbb
aaa
lret
jg
bnd
inc
fdivrp
fistps
std
das
mov
xchg
adc
punpckhbw
lret
mov
mov
add
xlat
lock
out
push
or
test
scas
adc
je
rclb
cmpsb
push
movsb
add
lret
das
mov
shlb
enter
push
lret
das
mov
pop
cmp
insl
aad
push
mov
popf
fdivp
es
jecxz
shl
daa
mov
cltd
js
add
lcall
and
push
repnz
cmp
xor
jle
call
out
jecxz
push
push
loopne
shll
cld
in
les
mov
inc
jmp
mov
ret
negb
in
jns
xchg
push
mov
xor
jns
int
in
push
pop
lock
das
push
sub
fs
push
pop
jns
xor
mov
sub
jns
jne
lea
mov
out
dec
jnp
shr
jae
xchg
mov
mov
das
mov
int
movsl
bound
popa
and
lcall
lock
jno
test
cmp
mov
lret
sti
addl
cmc
sbb
sub
inc
divb
inc
add
out
sub
xchg
mov
pop
jmp
scas
mov
mov
das
std
movsl
sub
sub
cmpb
arpl
jp
lret
lcall
fstl
subl
mov
in
inc
xchg
and
pop
mov
stc
repnz
movsb
or
mov
pushf
repnz
mov
daa
sti
nop
les
inc
jno
lods
cmp
cld
ljmp
test
out
ds
lret
push
sub
test
movsl
inc
adc
lret
das
pushl
call
sahf
js
xchg
das
mov
xchg
adc
dec
dec
pop
jle
not
call
push
pop
jmp
rorb
xor
or
rcr
mov
stc
in
pop
js
cmpsl
adc
iret
cmp
movsb
xchg
xor
xchg
pop
jle
xor
fstl
and
mov
out
sub
mov
das
mov
pop
data16
shr
out
addr16
mov
lods
ja
fcomi
xchg
push
std
popf
imul
jp
mov
ds
aas
rolb
jbe
jmp
fwait
pop
jle
in
stc
ljmp
jg
pushf
push
jnp
fisttps
jns
cld
xor
or
in
mov
cld
cltd
push
pop
jne
adc
ret
int
ds
popa
mov
dec
inc
jo
xchg
mov
lcall
jp
sub
scas
mov
or
inc
push
xchg
ja
scas
mov
mov
adcl
in
cmp
mov
outsl
dec
jge
cmp
dec
and
inc
mov
repnz
in
and
arpl
ss
repnz
lret
mov
fisubl
loopne
pop
and
mov
xchg
cmpsb
adc
cli
enter
roll
mov
cmp
lahf
sahf
push
mov
das
mov
jge
jnp
stc
jns
out
leave
pop
mov
je
test
push
and
mov
bnd
aam
sub
mov
mull
inc
mov
xchg
mov
fdiv
mov
mov
sbb
dec
dec
mov
jge
inc
push
adc
lret
push
aaa
lret
test
dec
cli
mov
and
in
pop
sbb
or
sub
in
pop
jle
stos
sbb
or
insb
jns
test
jle
jnp
cmpsl
lock
push
scas
push
mov
iret
xchg
stc
in
loope
mov
xchg
pusha
inc
cli
add
xchg
lea
sbb
test
in
rcrl
sbb
cltd
sub
jno
ret
or
xchg
push
fs
je
idivl
and
xchg
push
pop
je
mov
sub
sbb
fnstsw
aad
xchg
push
pop
jns
sub
xor
lea
pop
int3
sbb
sbb
xchg
popf
hlt
movl
scas
stc
in
pop
stos
sbb
in
popa
insb
inc
fimull
fbld
jl
adc
pop
add
mov
xchg
xor
pop
jle
in
xchg
mov
lret
add
mov
xor
in
fmull
ret
pop
mov
mov
repnz
xchg
pop
dec
xor
fsincos
mov
lret
pop
cmp
imul
mov
out
adc
pop
mov
bnd
dec
jge
fs
xor
cmpsb
push
aam
jbe
mov
jl
inc
scas
mov
imul
inc
push
cmp
scas
ds
jecxz
cmp
sbb
fcoml
jns
cmpsl
inc
sbb
scas
mov
cli
fwait
ss
sub
inc
orl
push
pop
jns
into
icebp
in
leave
neg
jmp
mov
in
insb
cmp
sbb
push
jb
xchg
push
jae
push
repnz
xchg
lret
aas
cmp
ds
or
aam
add
test
outsl
aaa
leave
sarl
outsl
fcmovnb
mov
fildll
insl
add
push
pop
jns
adc
mov
rorb
jns
xchg
lea
or
push
cmpsl
cmp
fs
push
mov
int3
test
pop
jge
push
jbe
imul
ss
lahf
bound
out
test
enter
enter
dec
test
pop
les
adc
inc
adc
xor
sub
adc
push
sahf
insb
hlt
bound
or
jns
lock
adc
sub
ret
jmp
cmc
lods
or
scas
mov
int3
gs
in
in
mov
mov
ss
sbb
and
sti
dec
movsb
jne
mov
cld
push
pcmpgtb
bnd
cmp
jno
mov
bnd
rcl
pushf
mov
lret
insl
dec
lds
lret
mov
lret
das
decl
mov
insb
inc
das
mov
mov
push
sbb
aas
xchg
dec
jle
notl
pop
adc
add
adc
aam
stc
in
pop
xchg
inc
mov
int
iret
aad
xchg
pop
jle
test
or
push
pop
jns
int
adc
inc
inc
mov
pop
jns
xchg
int3
cmpb
mull
out
and
xor
in
jg
jg
es
test
je
imul
sbb
insl
sbb
and
iret
jnp
in
icebp
xchg
mov
xor
fsubp
fldl
ja
jns
lret
fwait
inc
je
dec
push
sbb
mov
xchg
mov
xorb
add
cmp
inc
in
add
lds
int3
cmp
sbb
adc
xor
test
scas
mov
out
push
subb
mov
paddsb
push
lahf
imul
adc
cli
inc
sub
and
icebp
in
sub
xchg
in
sbb
cs
inc
inc
adc
lret
mov
in
popa
push
cmp
xchg
xchg
repnz
das
mov
sbb
stos
or
inc
jecxz
or
sub
movsl
inc
mov
repz
and
pop
jle
in
cmp
and
inc
fbld
and
out
stc
in
pop
jge
sbb
hlt
in
add
jns
xchg
inc
jnp
pop
outsl
orb
ret
mov
mov
and
lret
in
cmp
xor
mov
gs
lret
mov
ss
aam
mov
cmp
lret
stc
daa
xor
sahf
jnp
mov
xchg
push
int3
inc
jecxz
test
inc
sbb
out
fisttps
dec
jno
test
sbb
mov
mov
and
repnz
jp
sub
inc
sbb
push
stos
mov
scas
mov
aam
add
mov
mov
cmp
in
test
mov
imul
repnz
or
push
and
in
xchg
mov
and
pop
scas
mov
iret
aam
mov
je
jg
jmp
cltd
or
insb
cmpb
adc
jmp
jge
repnz
inc
mov
xchg
adc
sub
pop
sbb
enter
cld
sti
enter
add
hlt
sti
call
cmp
stc
in
inc
push
imul
out
std
lret
mov
insb
call
clc
das
mov
loope
xchg
cmp
ja
fs
out
jp
lret
inc
dec
cmp
stos
ret
xchg
sahf
pop
xchg
repz
mov
mov
mov
xor
xchg
push
pop
jns
scas
lret
or
mov
ds
pop
jns
push
in
nop
inc
popa
inc
cmp
or
xchg
aaa
das
xor
pushf
in
addl
das
inc
out
inc
pop
jns
into
cld
xor
sub
les
stc
in
jg
pop
push
loope
mov
fbld
jle
push
xlat
and
jo
push
jae
je
xchg
pop
jle
js
jle
movsl
fidivl
pop
mov
repnz
pop
mov
icebp
jecxz
js
shrl
push
inc
mov
das
mov
adc
jo
cli
testl
pop
clc
int
and
and
std
sar
repnz
das
xchg
sub
std
mov
addr16
xchg
jg
data16
imul
pop
nop
xchg
pop
jle
movsl
push
jle
out
add
xor
js
inc
inc
jle
in
pop
add
movsb
jne
je
mov
pop
jns
lea
insb
mov
pop
and
xchg
push
pop
fwait
out
in
mov
stc
out
mov
popf
or
and
jns
add
scas
sbbl
mov
pop
jns
xchg
clc
jg
out
ljmp
jb
sub
outsb
faddl
jl
repnz
pop
jns
sub
fsubrl
and
cmp
ja
repnz
das
mov
cmp
xchg
cmpsb
cmp
in
sub
jg
shll
lock
xchg
pop
adc
mov
test
pop
jle
dec
push
imul
scas
popf
xor
in
adcb
mov
fwait
mov
in
shrb
test
lahf
cmp
adc
jbe,pt
loope
xchg
fcoms
lret
das
outsb
je
movsl
and
and
mov
cwtl
lock
push
mov
ljmp
lock
push
xchg
int3
leave
jg
and
rorb
xor
stc
in
mov
cltd
jg
insl
fsubr
shl
mov
movsl
jmp
and
xchg
scas
mov
sbb
push
push
int3
mov
movsb
mov
mov
pop
and
loope
sub
nop
cmp
jns
pop
mov
bound
icebp
xchg
xchg
mov
or
xchg
rcrl
pop
jns
xchg
pushl
mov
adcb
mov
mov
out
push
pop
jns
add
dec
jo
out
in
sbb
repnz
ret
out
mov
arpl
stc
lods
mov
xchg
fwait
or
in
sub
or
sub
pop
jno
adc
xchg
push
das
or
les
xor
sbb
add
xchg
ja
xor
clc
sub
sbb
scas
add
mov
xchg
push
pop
fnstcw
cli
lahf
ror
cmp
andb
fdivl
or
in
jge
xchg
jbe
ljmp
and
in
dec
aaa
das
push
push
pop
out
xchg
jge
lds
test
dec
enter
std
mov
pop
enter
ds
mov
andl
lcall
repnz
sarb
lret
jbe
mov
icebp
pop
inc
fwait
mov
sbb
dec
ret
jns
xchg
push
xchg
and
add
fnsave
jns
xchg
push
mov
inc
stc
movsb
es
daa
pop
dec
lahf
paddb
sbb
inc
popa
xchg
pushf
shr
mov
movb
mov
jb
or
dec
cmpsl
lock
xchg
inc
fwait
ss
gs
in
ja
shll
gs
mov
jne
xchg
aas
fcmovnu
les
sub
cmp
pop
cmp
cmpsl
xor
xor
inc
arpl
push
iret
fs
lods
pop
cld
repnz
mov
dec
sbb
dec
pop
out
sub
mov
sub
mov
test
sub
xchg
adc
xlat
lret
mov
add
cmp
mov
mov
push
jg
mov
cmp
enter
in
lock
stc
pop
test
inc
hlt
fnstenv
or
push
lahf
lds
das
jg
cmp
ljmp
das
mov
push
sbb
add
das
mov
cmp
insb
std
xchg
lret
mov
lret
mov
jp
fcoms
cld
repnz
das
shlb
icebp
dec
xchg
jg
in
das
mov
rol
lds
jnp
in
inc
ds
sub
mov
lea
in
pop
inc
incl
js
mov
inc
mov
mov
in
xor
push
ret
add
ret
in
push
xchg
pop
insb
es
cwtl
fistl
call
push
cmp
pushf
mov
mov
icebp
jne
jg
data16
fs
loope
into
ja
cmp
mov
jge
jl
mov
das
jb
push
shrb
cmc
enter
mov
fistps
jae
push
sbb
in
dec
insl
out
mov
addr16
inc
insb
lret
dec
or
sub
out
inc
cmp
mov
mov
jbe
insl
sbb
ljmp
jne
jecxz
jp
mov
gs
xchg
fists
mov
sub
mov
pop
enter
mov
rolb
pop
jle
imull
cmp
xchg
ljmp
stc
in
mov
xlat
jle
in
mov
gs
sbb
jbe
xchg
pop
xchg
adc
sub
add
dec
rorb
adc
imulb
jge
adc
adc
jae
mov
sti
enter
shlb
sbb
xchg
pop
cmp
adc
cmp
enter
mov
cltd
xchg
mov
dec
adc
imul
or
arpl
xor
int3
inc
mov
aas
xchg
xchg
jg
cld
out
push
bound
mov
and
fcmovnbe
insb
jno
xor
pop
notb
mov
pop
subb
pop
push
sbb
das
std
and
mov
lahf
std
jae
out
xchg
das
mov
push
movsb
jae
xchg
inc
inc
pop
jge
mov
jg
mov
or
sbb
xchg
loop
cmc
jb
push
sbb
mov
aam
loop
stc
jnp
push
hlt
dec
cld
cmp
lret
pop
nop
pop
imul
repnz
xchg
es
cld
repnz
inc
push
js
in
popw
arpl
lret
das
mov
mov
data16
mov
adc
mov
add
and
popf
mov
push
ret
popa
adc
in
das
rcll
jmp
testb
mov
bound
jnp
jns
xchg
pop
mov
adc
insl
out
repnz
xor
dec
cli
cmp
mov
sub
dec
sbb
pop
inc
cmpsb
sub
repnz
dec
in
fldl
inc
mov
push
out
enter
movsb
iret
push
cmp
ss
mov
cld
repnz
imul
push
fwait
aas
aam
jp
lret
mov
adc
stos
jbe
leave
das
mov
cmp
les
fisubrs
test
mov
addr16
ds
dec
psubw
xchg
das
movsb
jo
shll
push
cld
pop
dec
lret
das
lcall
ret
or
adc
pop
xor
daa
add
cld
repnz
mov
adc
scas
and
jmp
cs
push
sub
das
mov
cmp
inc
out
mov
xor
in
pop
mov
je
pusha
jmp
popa
dec
mov
loope
sub
pushf
dec
xchg
push
pop
jns
jg
adc
loopne
push
pop
call
mov
in
mov
cmpsb
push
dec
fdiv
lret
mov
lret
repz
fisttpl
mov
mulb
mov
pop
cmp
out
jbe
cmp
pop
xor
cmp
sbb
mov
pushf
push
daa
cmp
jge
cmpsb
lcall
dec
in
mov
js
pop
xor
mov
xchg
and
jge
dec
mov
movsl
sub
repnz
mov
jle
jo
adc
loop
mov
mov
xor
jb
fs
lret
das
mov
fst
cwtl
dec
adc
sub
icebp
test
cmc
lea
push
pop
jns
jb
sarl
cmp
cmp
pop
jns
xchg
xor
scas
cmpsb
xchg
dec
adc
jns
xchg
push
cmp
or
in
sub
pop
in
push
pop
push
iret
xlat
int3
push
popa
scas
or
inc
push
pop
jns
out
pop
adc
xchg
in
xchg
jg
sbb
xor
push
gs
stc
ja
call
mov
stos
xchg
bound
aaa
nop
push
cmp
xchg
sbb
fs
inc
push
and
xchg
jg
popf
popf
mov
sar
sti
xlat
scas
push
sahf
sbb
dec
jp
push
mov
dec
cltd
or
out
add
lds
adc
ds
xor
dec
pop
push
xchg
in
sub
popa
popf
mov
pop
in
repnz
push
adcb
cmp
cmp
das
ds
fsubrp
cld
mov
pop
adc
dec
out
xor
ja
and
aaa
jmp
cmc
enter
sbb
cmpsl
and
jo
pop
xchg
sub
movsl
xlat
jne
lahf
mov
scas
cmpl
repnz
icebp
jmp
pop
cmpsb
lock
sub
fcompl
push
js
cli
mov
inc
mov
cld
lds
push
xor
les
inc
daa
or
push
jb
or
adc
sub
jns
xchg
push
sahf
outsb
mov
popa
and
repz
in
push
pop
mov
sub
and
sar
sbb
popa
dec
xlat
mov
pusha
sti
das
jnp
enter
add
in
fdivrs
lret
das
mov
push
mov
cld
repnz
xor
inc
dec
push
inc
sti
pop
pop
or
mov
inc
sahf
es
xchg
push
pop
push
add
es
repnz
jne
inc
xchg
push
pop
jns
enter
xor
mov
jb
call
enter
add
dec
inc
push
insl
adc
sar
imul
dec
mov
lock
add
imul
sarb
or
fcmovnu
jae
xchg
in
lret
cld
repnz
das
and
mov
adc
rorl
mov
cltd
arpl
in
mov
add
and
ficomps
jns
or
or
pop
jns
dec
mov
inc
shl
sub
pop
pop
jns
sub
jp
inc
fcomps
xlat
mov
outsb
lea
stc
in
jg
enter
or
test
in
pop
jle
or
test
add
rclb
dec
pop
xchg
pop
jle
add
add
mov
push
dec
addr16
jle
in
enter
jo
loope
mov
orb
repnz
and
subl
pop
sbb
das
mov
notl
leave
jge
pop
jle
aad
inc
ss
pop
mov
xchg
mov
pop
repnz
sbb
sbb
out
out
lret
mov
sub
js
cmp
lret
das
cld
aaa
clc
cmpsb
data16
leave
mov
das
mov
pop
cs
movsb
jg
xor
inc
or
cmp
lret
lea
fdivrl
repnz
mov
jns
pushf
bound
stc
mov
cld
in
dec
sub
xchg
into
das
mov
outsb
jmp
aad
jbe
pop
or
lret
fistl
dec
into
out
or
cmc
sub
outsb
fistpl
add
mov
jle
in
dec
jne
iret
and
xchg
xlat
pop
mov
stc
in
pop
adc
mov
and
mov
in
pop
jle
scas
iret
ret
movsb
mov
pop
xchg
pop
jle
cmp
int
xchg
xor
jp
jle
in
mov
scas
dec
dec
sbb
jnp
xchg
adc
dec
test
movsb
xor
mov
or
or
cmpsl
cmp
das
mov
push
mov
ja
shrl
mov
inc
push
call
imul
cmp
xor
in
fxch
fnstsw
repnz
das
dec
ja
nop
lret
add
xchg
call
in
aam
stos
pop
mov
sbb
add
jae
mov
or
lock
das
jbe
add
sbb
mov
or
popf
test
sahf
movsb
push
popa
mov
fcmovnb
jg
pop
jns
clc
push
push
shrl
or
in
ljmp
out
push
xor
stc
in
pop
inc
repnz
push
xchg
jo
lret
das
lcall
into
sahf
and
xchg
insl
rorb
cld
repnz
and
pop
xchg
popf
xchg
xchg
push
ficoms
sub
pusha
enter
jle
mull
sar
dec
lds
mov
sub
addr16
in
test
rcl
gs
xchg
sbbb
in
pop
xorb
cmpsl
test
insl
mov
test
je
push
cmpsb
jg
pop
jns
aam
inc
dec
jbe
pop
mov
gs
cmp
lret
add
cld
repnz
or
aaa
mov
inc
test
push
adc
mov
rcll
jns
sbb
mov
iret
lea
test
cmp
in
rolb
arpl
jo
xchg
or
cltd
lret
das
mov
mov
lcall
mov
out
sub
cmp
lea
xor
leave
mov
push
mov
jae
lret
das
mov
clc
ss
imull
cld
dec
jnp
lds
jle
xchg
or
loop
sar
imul
pop
adc
out
push
jecxz
aam
hlt
ds
lods
mov
dec
fistpl
lea
add
ret
fists
pop
lock
and
add
mov
aam
and
rolb
andb
jle
in
dec
push
cld
sbb
xchg
sbb
xchg
fs
scas
in
mov
int3
out
imul
add
repnz
mov
mov
shll
sbb
loope
mov
pop
xor
dec
lcall
stc
in
xor
dec
push
jno
addl
push
cmpsb
xor
jecxz
jae
xorl
das
decl
stos
mov
xor
mov
lret
arpl
mov
adc
in
ja
lahf
pop
mov
mov
jns
mov
push
lea
adc
lods
mov
leave
adc
rclb
mov
popf
hlt
adc
jbe
in
ja
or
add
and
subps
pop
jns
lea
mov
cwtl
inc
push
mov
push
cmc
mov
in
sar
or
neg
xchg
jg
pop
lods
lret
adc
ffreep
xchg
and
cmp
outsb
xor
int3
xchg
mov
in
mov
das
ds
mov
call
subb
cmp
das
enter
insb
pop
xchg
xchg
aaa
ss
je
mov
xchg
xor
cmp
mov
rclb
sub
mov
sub
push
sbbb
aas
test
inc
xor
nop
mov
je
fsts
mov
inc
jp
add
repnz
push
sub
out
mov
in
dec
ficomps
pop
inc
or
inc
xor
cld
repnz
das
cli
cs
mov
out
sbb
cwtl
mov
data16
or
cmc
jmp
scas
mov
pop
and
jnp
fwait
jno
jb
ljmp
xlat
mov
xor
xchg
out
mov
repnz
cmpsl
pop
scas
out
adc
dec
addl
xchg
xchg
mov
cmovo
gs
push
pop
jns
sub
shll
cltd
inc
sub
xor
pop
ds
jns
xchg
lret
icebp
cmpsb
das
mov
loope
jns
xchg
push
xor
repz
inc
imulb
xor
outsb
pusha
sbb
and
popa
cld
inc
and
sbb
xchg
cmp
add
xchg
push
mov
out
adc
inc
cli
out
lret
das
and
fsubs
push
push
mov
inc
jno
inc
xlat
inc
and
cld
repnz
cs
inc
mov
mov
mov
sti
shrb
mov
xchg
stc
in
inc
cmp
xchg
fistps
inc
sbbl
adc
dec
pop
repz
iret
hlt
mov
rcl
mov
push
aaa
push
mov
jg
jle
js
addr16
push
xchg
dec
pop
lcall
jmp
sub
fs
in
adc
mov
sbb
sub
xchg
pop
mov
jp
dec
push
pop
aaa
sahf
xchg
stc
lds
lret
mov
insl
push
test
pop
js
notl
stos
out
out
and
xor
add
xchg
ljmp
mov
cmp
adc
inc
jmp
mov
dec
pop
mov
ret
push
mov
sub
das
shl
lods
stos
jno
lret
mov
jo
clc
jle
jo
cmp
scas
mov
test
insb
int
dec
cltd
dec
mov
enter
mov
out
xchg
push
fdivrp
lcall
cmp
repnz
mov
adcl
add
inc
xrelease
push
and
push
xor
jl
aad
testb
sub
scas
mov
pushw
push
jb
lds
repnz
les
lret
loop
loopne
pop
scas
mov
mov
xchg
mov
push
pop
jns
jne
adc
imull
sub
lcall
xchg
jo
aas
mov
and
insl
xchg
pop
sub
push
pop
out
mov
push
pop
jns
fldt
pop
mov
xchg
xchg
insb
test
xchg
cmp
pop
xchg
int
mov
bswap
imul
hlt
mov
ds
inc
mov
jne
nop
lahf
mov
sub
inc
sbb
sbb
xor
cmp
and
shlb
and
sbb
lods
lods
xchg
jns
xchg
lea
call
mov
pop
sti
subl
pop
mov
mov
xchg
pop
jle
hlt
sub
outsl
arpl
dec
or
and
cmp
cmpsl
repnz
add
mov
jecxz
jns
mov
mov
rcl
int
jnp
fs
movsb
push
test
cs
pop
jge
add
aam
mov
add
js
pop
lea
push
cli
aas
lock
xchg
push
dec
or
mov
in
mov
dec
into
ja
add
icebp
inc
push
or
pop
pop
jns
repnz
xor
xchg
jmp
in
add
enter
ret
sub
mov
add
scas
lods
mov
enter
in
push
cld
inc
mov
stc
in
addr16
mov
jge
loope
mov
mov
mov
stos
mov
inc
jnp
or
in
jmp
jae
nop
mov
or
aaa
mov
je
scas
mov
jns
test
fsts
out
sbb
ret
sub
mov
lds
fs
mov
cmc
add
fbld
push
mov
inc
cwtl
fmuls
xchg
mov
and
popf
pop
push
clc
out
mov
in
push
dec
adc
and
hlt
and
xchg
sbb
clc
enter
je
mov
xchg
ds
scas
jecxz
in
sub
add
test
mov
mov
xchg
pop
jle
mov
pop
or
cs
lahf
out
dec
test
repnz
ficompl
cmp
mov
mov
lret
loope
je
pusha
arpl
cmc
push
xchg
xchg
xchg
or
cld
sti
enter
xchg
jb
xchg
xchg
mov
popf
cmp
rcl
mov
mov
inc
in
push
fidivrs
fdivrp
into
xchg
push
pop
jns
rorb
push
cmp
xlat
aam
xchg
aas
rcll
and
lahf
sahf
pop
jle
negl
stos
out
jmp
jne
cmp
movsb
and
in
add
jb
mov
cltd
stc
in
pop
push
jmp
dec
adc
movb
jle
icebp
cmpsb
cmc
pop
push
repnz
mov
xchg
push
iret
push
stc
dec
pop
sbb
ret
lahf
outsb
fildll
mov
in
sub
sbb
icebp
sbb
lret
nop
pop
das
daa
pop
mov
in
das
lcall
sti
cmp
sbb
mov
mov
adc
adc
lret
inc
mov
in
jecxz
mov
outsl
cmc
or
sti
ret
psubsb
faddl
insb
mov
mov
mov
dec
inc
pop
cmp
pop
mov
jns
mov
jo
cmp
mov
fsubp
aas
loop
outsl
popa
mov
inc
repnz
test
stos
test
and
xor
or
sub
test
mov
pop
mov
in
ds
scas
push
flds
jmp
mov
fadd
bound
scas
mov
lret
rolb
lcall
lret
ja
repz
stc
test
xchg
repnz
xchg
lods
cmp
dec
jne
mov
mov
mov
sub
testl
mov
add
fld
js
lahf
cmpsb
push
mov
pop
mov
jle
stos
inc
out
int3
lods
int3
loopne
pop
repnz
pop
xchg
sub
dec
inc
sbbl
shll
push
pop
notb
xor
test
pop
into
loope
sbbl
xchg
pop
jle
sti
dec
test
int
adc
sub
in
cmp
pop
dec
pop
arpl
sub
pop
sbb
dec
jnp
dec
sub
push
push
mov
loopne
adc
fs
mov
clc
outsl
jns
sbb
and
push
clc
imul
mov
mov
in
das
stc
push
xchg
mov
mov
imul
pop
hlt
enter
mov
enter
daa
dec
shlb
jb
jle
imul
and
mov
in
fwait
or
iret
ds
cmpsb
pop
call
jmp
jb
inc
mov
inc
cmp
je
xchg
adc
mov
nop
jns
pop
xor
sti
iret
icebp
xchg
cmp
movl
fbld
mov
xchg
or
mov
pop
adc
stc
in
lcall
dec
clc
aad
sub
and
ljmp
sub
aad
sub
xchg
push
aad
imul
cli
jecxz
mov
xor
and
pop
aam
ret
adc
push
pop
jne
jle
in
gs
jmp
pop
pop
aas
cmc
sub
xchg
add
repnz
adc
and
pusha
sti
enter
outsb
out
mov
xor
imul
mov
push
push
cmp
repnz
mov
pop
aad
dec
sub
add
fildll
cmp
mov
sub
jge
jnp
xchg
pop
mov
mov
int
add
pusha
and
das
mov
shl
pop
mov
inc
mov
cli
cltd
sub
lock
cld
mov
mov
lods
mov
stc
sti
jae
popa
test
das
mov
lock
dec
cmpsb
jns
fcmovbe
mov
cld
repnz
or
fcoms
or
lock
bound
repnz
das
mov
push
mov
mov
lret
das
mov
pusha
lods
pop
stos
pop
fsub
xchg
lret
das
mov
mov
xchg
mov
cld
repnz
mov
aaa
pop
lcall
rol
jns
sub
js
xchg
push
jmp
rcrb
subl
mov
mov
faddl
jge
cmp
lret
test
andb
adc
push
push
or
pop
shrl
inc
imul
sahf
cmp
sub
pop
pop
cmp
repnz
mov
mov
xlat
and
push
js
cs
cmp
mov
mov
cwtl
sub
jno
mov
out
mov
test
mov
arpl
jae
pop
xchg
jg
stc
ret
add
xchg
xchg
xchg
jle
in
imul
and
fnstenv
popa
mov
clc
enter
bsf
jg
jno
jecxz
or
inc
cmp
les
cmp
out
and
shlb
dec
or
jns
mov
pop
adc
divb
sbbl
xchg
fs
or
inc
stc
cmp
push
adc
xlat
test
sub
jle
orb
inc
fsubrs
rclb
push
les
pushf
xchg
pop
imul
inc
iret
adc
pop
xchg
pop
jle
into
shlb
fdivrp
stos
test
pop
jle
in
shl
mov
repnz
and
movsb
add
lcall
pop
aam
xor
bound
rorb
divb
in
and
popf
jne
jg
aaa
je
lret
das
out
adc
inc
outsl
adc
notl
cmc
popf
mov
add
adc
lods
pop
lret
mov
nop
insl
hlt
icebp
jp
outsb
dec
fimuls
js
test
or
rolb
insl
enter
push
xchg
aaa
cmp
pop
jns
arpl
jo
mov
mov
das
sarl
sbb
sbb
cld
repnz
push
cmp
adc
xlat
in
je
in
das
sbb
fs
cmc
cld
stc
jnp
xchg
push
mov
sti
inc
call
pop
jmp
or
jno
jl
mov
mov
repz
jmp
jg
fisubl
lcall
sub
xor
jp
ja
pop
pop
jns
xchg
es
xor
mov
clc
add
jnp
popl
fiadds
sub
bound
int
fists
stos
insl
adc
loope
cmp
out
push
in
jns
sbb
cs
stos
jl
sti
ja
xchg
push
scas
mov
push
out
and
mov
in
addr16
cwtl
jp
jbe
pop
sub
jl
arpl
mov
int3
sti
in
jne
loope
inc
mov
lahf
ljmp
cmp
sub
pushf
mov
push
push
ficomps
js
mov
inc
in
inc
jecxz
jb
xchg
jecxz
jecxz
leave
arpl
pop
xchg
mov
pop
push
sti
adc
lret
stos
in
fimuls
xchg
mov
icebp
xor
jb
adc
hlt
out
popf
jmp
push
mov
jnp
addb
jb
jecxz
lret
mov
arpl
xlat
sub
repnz
and
pop
xor
push
sbb
dec
jmp
subb
ficomps
xchg
pop
ret
sub
jle
in
dec
push
mov
xchg
jl
jge
call
addb
insb
divl
dec
adc
aam
test
lret
out
cmp
scas
mov
dec
std
shll
dec
iret
mov
xchg
stos
shll
divb
in
mov
push
andb
fs
pop
outsl
or
fstpl
fwait
mov
xor
inc
sar
or
loop
inc
movsb
in
push
pop
xchg
push
pop
jns
jb
cmp
sbbl
or
stc
ja
shrl
scas
lds
adc
stc
in
pop
adc
sbbb
xchg
test
dec
enter
xor
pusha
aad
pop
sarb
clc
cli
ret
dec
enter
mov
repnz
push
stc
lcall
push
mov
lret
bnd
mov
fwait
mov
xchg
fdivs
ljmp
and
or
xchg
pop
pop
add
add
subl
inc
jl
dec
jns
aas
mov
jge
cmp
adc
adc
cld
sub
repz
adc
push
pop
repz
notl
lods
xlat
ror
mov
aaa
sub
mov
in
pop
adc
cs
ds
push
in
pop
jle
pop
jae
mov
push
sahf
xor
arpl
add
cltd
and
mov
lods
pop
jns
xchg
cmp
jno
stc
pop
mov
lods
mov
in
push
jns
loope
xor
repnz
add
leave
xchg
subb
jnp
mov
xchg
pop
jle
fstpt
adc
mov
pop
cs
push
pop
jle
in
and
into
bound
ret
lcall
cmpl
xchg
das
lcall
push
ret
and
pop
mov
and
mov
fildll
popa
ret
xchg
and
out
inc
ret
mov
xor
cmp
shll
out
in
pop
jne
xchg
cs
push
cmp
fsts
mov
pusha
pushf
test
jge
in
and
and
imul
pop
out
adc
add
jp
inc
movsl
das
in
pop
jle
sbb
dec
mov
push
decb
stc
int
rcrl
cmp
jge
aad
lods
jo
loope
stos
fcmove
add
enter
clc
sub
shlb
stc
in
pop
mov
outsl
dec
out
pop
xchg
and
mov
push
hlt
mov
mov
mov
addr16
cmp
adc
push
clc
and
lret
in
adc
rclb
or
xchg
dec
aaa
add
and
jl
jns
xchg
mov
cmpl
test
in
push
into
cmp
and
xchg
push
pop
out
dec
cwtl
mov
push
pop
scas
jae
stos
jg
pop
jns
and
stos
cmp
pop
xchg
xor
stc
in
pop
out
roll
and
int3
clc
enter
xchg
dec
popf
test
leave
xor
fwait
pop
push
or
popa
aad
jl
mov
mov
xchg
nop
js
jbe
rol
ret
shrl
andb
insb
add
stos
in
jg
mov
sti
test
or
xchg
pop
jle
dec
das
jle
mov
aas
pushf
inc
mov
jle
in
js
icebp
push
mov
arpl
and
test
adc
sub
test
cmpsb
jl
test
lret
je
in
pop
jle
xchg
cmc
sbb
repz
pop
mov
stc
and
in
mov
inc
sti
mov
mov
and
in
sub
ljmp
dec
cld
repnz
das
cmpsl
bound
cmp
fidivrl
repnz
das
mov
in
pop
jno
test
adc
lock
sub
ret
jge
sti
mov
inc
push
mov
insl
push
jge
in
dec
fmuls
mov
sbb
stc
in
pop
cmpl
xchg
stos
gs
inc
testb
les
test
inc
loope
sub
arpl
pop
cltd
in
and
pop
cmp
outsl
rcr
mov
cmp
pop
jns
and
leave
pop
insb
cmc
xor
outsb
push
cwtl
dec
dec
xchg
das
ds
insl
push
sbb
fimuls
loopne
inc
or
lahf
int3
fnstenv
cld
xor
push
and
jne
cmpsb
icebp
repnz
stc
scas
lret
jge
xlat
lret
mov
rclb
imul
lods
mov
adc
push
clc
mov
pop
pop
jle
popl
test
cmpsb
insl
inc
cmc
ljmp
mov
jp
jb
push
into
stc
in
pop
arpl
mov
outsl
push
mov
xor
xchg
pop
jle
jl,pt
xchg
mov
shrl
sti
aad
and
or
orb
jo
leave
xchg
flds
pop
es
xchg
xchg
push
fdivp
sbb
aas
mov
incl
out
ss
fstps
mov
loop
sub
push
inc
jo
jnp
lret
and
insb
inc
insb
mov
out
xchg
das
mov
add
cltd
sbb
daa
pop
xor
cmp
imul
pop
stc
in
jg
and
mov
and
push
in
out
lret
or
in
pop
pop
pop
into
push
movl
filds
push
mov
or
sbb
rclb
jns
sbb
or
and
gs
fmuls
inc
add
mov
dec
pop
xchg
jns
lods
mov
fistps
mov
inc
pop
sbb
fwait
dec
jge
xor
mov
cld
repnz
les
mov
std
fcomip
out
es
repnz
das
cmp
cmp
xor
mov
mov
mov
in
cltd
push
pop
jns
mov
scas
negl
push
in
jns
jl
in
lret
pop
dec
mov
sub
in
enter
sets
jmp
adc
stc
testl
imul
stc
in
fsubrs
and
cmp
loope
pop
mov
mov
arpl
pop
ljmp
sub
jg
mov
adc
scas
add
sub
xor
sbb
lret
mov
scas
jns
mov
sbb
repnz
jecxz
mov
enter
jp
lock
push
pop
jns
test
dec
mov
cmp
mov
in
jb
cli
cmp
movsb
sbb
aas
lcall
sahf
leave
adc
scas
loope
mov
fadds
test
cmp
pop
mov
xor
sub
leave
xor
sbb
pop
pop
rclb
cmp
push
xor
fdivrl
rcl
mov
xchg
push
fimuls
notl
hlt
jbe
repnz
adc
imul
mov
in
inc
idiv
shll
and
inc
test
in
test
sub
jbe
outsb
js
enter
adc
enter
cld
repnz
push
std
and
scas
and
mov
fdivrp
repnz
das
arpl
inc
ret
cmp
mov
mov
dec
sbb
fpatan
pushf
ljmp
in
pop
sub
sbb
push
mov
jecxz
test
repnz
adc
sahf
pop
pop
jns
mov
or
push
sub
sar
cmpsl
stc
in
jg
mov
dec
adc
inc
movsb
and
push
in
pop
jle
sarl
and
pop
and
jle
popa
cmpsb
or
cmp
aas
gs
pop
jle
in
mov
push
repz
bound
mov
enter
inc
sub
aaa
insb
mov
test
cwtl
enter
sub
add
xor
push
jp
iret
daa
jl
loopne
add
scas
out
and
sarb
push
xchg
jg
adc
mov
enter
in
lret
iret
into
sbb
sbb
js
in
mov
and
dec
adc
mov
pop
pop
and
out
repz
sub
mov
mov
sub
outsb
je
stc
in
pop
jl
dec
fs
dec
or
in
pop
jle
es
pushf
jp
aam
xchg
xchg
pop
jle
cld
mov
aad
xchg
jecxz
mov
stos
sub
mov
push
jge
std
dec
test
mov
sub
or
push
pop
jns
jmp
aaa
push
icebp
sahf
clc
or
push
pop
jns
push
repnz
dec
int
movsl
out
inc
mov
fs
jns
xchg
fiadds
fistpl
rcr
mov
pop
push
pop
insb
cs
push
mov
pop
jle
idivb
adc
and
repnz
movsb
jne
jne
jge
pop
inc
enter
jmp
outsl
sti
addr16
aas
divb
xchg
xchg
pop
fldl
adc
mov
sahf
cmp
sub
stos
cmp
push
fimuls
add
pop
loop
in
aaa
aam
into
sbb
mov
int
xchg
push
pop
jns
pop
imul
mov
stc
notl
test
jns
adc
stc
in
pop
in
sub
xor
daa
pop
or
jo
popa
push
push
pop
jns
std
dec
dec
fwait
call
ja
fdivl
and
and
inc
jo
les
jmp
pop
jle
mov
push
sub
push
cld
cmp
pop
dec
dec
xor
ljmp
mov
scas
loopne
pop
loopne
lahf
sbb
jb
inc
mov
xchg
outsb
sub
in
dec
mov
not
imul
shlb
jge
push
je
loop
adc
mov
das
jle
in
and
jp
iret
jnp
pop
out
pusha
or
aam
jmp
inc
adc
mov
xchg
pop
jle
push
dec
mov
dec
leave
mov
pop
jle
lahf
pusha
es
pop
sbb
clc
pop
sub
lock
cmpsb
cmpsb
sbb
push
xchg
mov
repnz
scas
insl
push
jmp
aam
sub
ja
lret
dec
and
mov
or
or
push
cli
popf
scas
mov
jg
mov
out
aas
stos
fmuls
and
or
sahf
cmp
fwait
sbb
jns
push
inc
pusha
in
jb
xchg
mov
cld
xor
aad
fs
jb
dec
xchg
lret
mov
or
imul
repnz
arpl
adcl
sbb
jl
pop
mov
mov
das
hlt
mov
pop
cs
iret
inc
cli
cli
repnz
das
mov
add
lods
pop
lret
das
mov
pop
adc
pop
fwait
les
jo
mov
jns
cmp
mov
add
cld
repnz
pop
jmp
popa
dec
neg
sbb
enter
mov
cmpsl
hlt
add
in
push
fmulp
fwait
sub
gs
pop
jns
test
std
inc
cmp
ds
mov
add
mov
inc
punpckhbw
outsl
mov
shlb
sbb
xor
lcall
lods
mov
lret
das
in
push
xchg
and
adc
lret
das
mov
xchg
pop
loope
mov
jge
das
mov
mov
inc
jo
and
mov
xlat
adc
leave
jno
jmp
inc
out
mov
popa
jmp
or
sub
movsl
loopne
dec
jl
cwtl
in
pop
incb
lods
push
sar
fisttpll
addr16
jle
stos
cld
mov
mov
mov
and
imul
sub
or
pop
xchg
iret
lcall
les
lret
into
lea
add
pop
jle
mov
sub
mov
xchg
inc
jg
jl
in
loop
jg
dec
fistpl
jae
pop
in
xchg
ja
cmpl
in
jg
mov
loop
call
jns
xchg
mov
sbbl
xor
in
push
scas
jecxz
and
lds
in
cmp
push
pop
jno
pop
jle
ja
mov
and
push
xchg
adc
adc
mov
es
mov
popf
pop
adcb
and
sbb
fwait
enter
jmp
imul
push
push
ficomps
mov
stos
les
adc
xchg
stc
movsl
jge
add
and
gs
hlt
sub
gs
push
sub
xchg
bound
dec
lahf
pop
pop
jns
or
scas
mov
add
int
fsubs
nop
in
xchg
repz
lret
scas
jne
xor
dec
adc
pop
dec
outsb
lods
es
xlat
or
sub
ror
sub
shrb
dec
sub
scas
mov
mov
imul
jmp
ret
adc
inc
sarl
mov
imul
int
sahf
divb
stc
test
sbb
jne
adc
jg
loop
xchg
pop
jle
or
mov
mov
xorps
inc
leave
scas
inc
sbb
outsb
dec
push
push
cmp
stc
test
cld
movsl
es
je
dec
lretw
mov
test
ret
push
and
icebp
cld
loopne
push
or
lods
fnstsw
xchg
not
in
cli
mov
xchg
xchg
push
pop
jns
mov
mov
push
das
push
pop
jns
mov
fdivrs
sbb
inc
xchg
sbbl
in
and
loop
test
jb
xchg
push
xor
jno
mov
mov
dec
popa
cmp
mov
and
testl
sti
andb
arpl
mov
or
out
es
addb
lock
mov
popf
cmp
popf
xchg
int3
rcrl
out
insl
lods
dec
and
xchg
lods
cmp
cmp
test
in
pop
jns
fwait
adc
scas
repz
fidivrs
pop
mov
in
popa
sti
jge
in
test
cltd
or
inc
jle
xor
xor
push
popl
pop
stc
repnz
rolb
xor
xorb
pop
mov
call
xchg
rdtsc
jecxz
enter
pop
ret
aas
mov
cmpsl
nop
movsl
movsl
fcoml
movsl
sbb
or
inc
jge
in
adc
negb
add
pop
repnz
lret
inc
lea
imul
into
das
mov
inc
adc
mov
aam
imul
loope
mov
xchg
xchg
ja
cmp
push
cmp
push
test
in
inc
imul
pushf
mov
in
pop
jle
pop
loopne
movsl
das
xorl
ret
and
jmp
int
lock
xor
outsl
scas
mov
and
push
ss
scas
pop
mov
mov
nop
lods
dec
push
xor
aad
sbbl
xchg
pop
scas
sub
test
mov
lret
jno
jmp
pop
jns
js
cmp
mov
and
add
loope
push
test
movsb
xor
sbb
jns
and
mov
in
add
repnz
cmp
xchg
push
pop
sbb
ret
jmp
cmpsl
hlt
xchg
fmuls
push
mov
pop
xor
mov
test
repz
sar
enter
push
mov
fnstenv
in
push
faddp
sbb
xchg
imul
push
pop
jns
mov
leave
and
push
mov
std
fstl
jns
fistps
fisttpll
mov
sub
test
in
push
repz
sub
loopne
xchg
in
push
in
cmp
mov
add
in
push
pop
ljmp
insl
inc
into
pop
or
xchg
cs
in
adc
sub
in
sbb
ja
mov
xchg
loopne
in
pop
call
lret
pop
or
xchg
aaa
xor
xor
insl
iret
mov
adc
into
imul
bound
cmp
pop
das
push
pop
jns
sub
or
je
cli
scas
mov
and
mov
or
repnz
gs
pop
testb
lret
xor
jecxz
mov
cmpsb
js
cmpsl
inc
mov
sub
test
pop
nop
jge
in
jge
imul
and
jl
sub
ja
push
leave
cmpsb
lock
lods
mov
fisubrl
fsts
inc
xchg
mull
icebp
sbb
push
pop
jns
push
mov
fwait
stos
inc
push
mov
xchg
xor
imul
jg,pn
mov
and
and
clc
inc
mov
repnz
sub
ss
push
out
outsb
ss
mov
stc
in
cs
rep
sbb
pusha
stc
mov
fwait
adc
in
pop
jns
xchg
mov
or
insb
inc
scas
mov
aaa
jbe
div
repnz
sub
mov
movswl
mov
stos
movsl
mov
cmc
rol
loopne
mov
lret
dec
fdiv
fs
in
out
loope
scas
mov
or
scas
mov
sarl
mov
jbe
movsl
lea
lahf
push
rclb
clc
dec
jo
xchg
sub
jge
push
push
xchg
push
mov
je
xchg
enter
jl
stc
ja
mov
and
ficoml
in
pop
mov
add
xor
les
orb
lds
mov
xchg
ja
insl
in
in
and
or
xchg
push
pop
jns
dec
cmp
push
scas
out
shrb
test
xor
jb
nop
and
sbb
incb
push
aam
mov
xchg
pop
jle
inc
sbb
sbb
push
outsl
leave
xchg
xchg
pop
jle
in
dec
shrl
and
in
clc
or
std
push
ret
xlat
jb
fisubl
out
xchg
mov
lods
adc
adc
lret
das
mov
test
inc
or
rcrl
cld
pop
xchg
cmp
pop
cmpsb
fstpt
mov
mov
xor
dec
movsb
mov
je
mov
jg
jmp
repnz
stos
mov
pop
jns
cmp
mov
mov
in
add
pop
sbb
leave
mov
mov
lret
enter
stc
jnp
loopne
xor
jl
push
pop
jns
xor
out
push
inc
sub
sub
in
ds
stc
aam
in
call
in
push
cmc
mov
int
data16
test
xchg
push
pop
cmp
add
pop
das
jmp
mov
imul
xchg
push
pop
jns
movsl
fadds
je
dec
imul
pop
jns
adc
inc
xchg
jge
dec
adc
inc
jnp
in
test
rcrl
cmp
sub
cmp
bound
pop
fisubrs
mov
lret
sarb
cld
repnz
and
sti
mov
cmp
mov
andb
mov
jl
jmp
add
stc
pop
outsl
inc
stos
iret
adc
sub
inc
sbb
mov
jle
in
xchg
push
repnz
subb
lret
jl
in
in
call
bound
lret
mov
out
sub
outsb
adc
and
add
mov
mov
sahf
push
ljmp
pop
or
jge
pop
push
mov
lret
das
mov
dec
pop
lcall
das
mov
pop
pop
sub
inc
test
push
repnz
or
stc
repnz
iret
adc
loopne
dec
out
cltd
ljmp
xor
movsl
cmpsb
sbb
adc
jns
fnstcw
cwtl
popf
fidivrs
repnz
add
pop
mov
mov
mov
push
faddp
adc
cmp
fdiv
and
push
mov
xchg
lret
scas
and
sub
jne
push
add
in
test
push
frstor
lret
in
push
adcl
std
adc
lds
inc
js
xor
enter
sub
cmc
sbb
dec
and
xchg
pop
stos
imul
push
mov
or
xchg
pop
jle
and
xchg
fcomps
scas
inc
cs
fsts
jmp
jle
in
lcall
jnp
add
in
xchg
xchg
inc
cmp
sub
out
int3
ror
adc
cmp
in
mov
mov
fisttps
xor
dec
sbb
loopne
cmpsl
add
or
enter
mov
loope
push
sti
xchg
scas
jo
jge
pop
jle
shll
addr16
mov
cmpsb
cmp
pop
jle
in
xchg
mov
bnd
dec
jle
in
mov
lods
cmp
mov
enter
repnz
sub
loope
movsl
out
mov
xchg
das
mov
test
mov
icebp
outsl
or
lods
sar
cs
xchg
iret
cmc
mov
xor
sub
add
sub
mov
inc
out
dec
mov
and
popf
pusha
jno
in
or
repnz
inc
inc
int3
xor
loop
lea
lods
mov
jne
or
pop
mov
in
lea
dec
xchg
imul
sub
fldt
out
fucomp
lods
jo
movsl
lods
mov
mov
sub
pop
sub
dec
push
adc
lock
mov
and
or
adc
stc
mov
pusha
ds
and
dec
cwtl
jns
repnz
movsl
lret
and
xchg
ljmp
scas
mov
sbb
movsb
fildl
and
mov
jb
popf
dec
xor
leave
loopne
xchg
out
or
out
push
mov
xor
adc
int3
insb
repnz
xor
pop
cwtl
cmpsb
jne
popa
xchg
lret
mov
movsl
cmp
scas
xchg
pop
sahf
ljmp
loope
push
mov
ss
ds
mov
mov
jno
cld
repnz
add
add
dec
jecxz
pop
orb
jg
cmc
and
sbb
jmp
xor
or
daa
incb
data16
in
pop
jle
ret
inc
mov
faddl
sbb
inc
jmp
fldenv
stc
in
mov
rcl
test
jl
in
cmp
jecxz
add
sbb
and
push
or
dec
das
jg
scas
or
inc
call
jge
in
push
jp
psubusb
outsl
xor
out
xchg
pop
sbb
repz
clc
loope
sub
roll
das
mov
dec
push
push
and
pop
insb
out
pop
stc
repnz
or
and
in
cmp
leave
sbb
pop
loopne
sub
inc
xor
mov
mov
mov
or
inc
in
push
pop
sbb
pop
aaa
push
pop
sahf
and
loop
ret
xchg
push
pop
jns
sbb
sbb
adc
pop
sbb
jns
testb
xchg
cwtl
inc
and
add
in
mov
outsb
std
loop
fcomi
mov
jns
xchg
push
pop
pusha
mov
lret
call
jo
in
push
pop
sub
in
fildl
push
pop
jns
and
lret
pop
call
popf
movsl
jl
rorl
pop
pop
pop
pop
xchg
pop
aam
int3
push
aad
bound
mov
lret
push
loopne
mov
mov
punpckldq
popa
test
rcll
mov
adc
push
mov
rcrb
in
cmpsl
mov
jp
lret
sub
xchg
push
jmp
cwtl
jb
int
mov
pop
loope
adc
popf
xor
rclb
icebp
jg
mov
cltd
mov
and
push
in
push
pop
or
gs
inc
cli
fnstsw
mov
lock
repnz
pop
int3
sbb
mov
adc
dec
repnz
ds
iret
mov
push
jge
ds
stos
mov
push
mov
and
es
ja
xchg
xchg
jmp
mov
add
xchg
inc
jle
push
pop
into
out
cmpsb
scas
fbstp
jnp
std
mov
cld
lods
dec
cmp
stc
in
sarb
mov
push
ss
inc
jmp
push
and
inc
xchg
cmpsl
pop
das
mov
push
out
mov
xor
repnz
add
es
int3
imul
pushl
sub
addr16
adc
das
mov
loope
lock
mov
stc
sti
in
stos
fcmove
pop
jae
mov
sbb
jge
enter
xor
stos
in
pop
jle
testl
stos
mov
lea
fisttps
xchg
lret
in
push
add
pop
xor
mov
pop
inc
lahf
lea
push
mov
daa
xchg
out
or
cmp
aad
mov
scas
addr16
in
aaa
es
jbe
mov
rcll
cmpsb
lods
or
jecxz
pop
sarl
jge
in
imul
test
fs
mov
xchg
adc
mov
call
add
jl
ja
std
and
pop
xchg
mov
fs
lods
jb
test
bound
xchg
pop
jge
loopne
xchg
adc
mov
jae
call
push
stc
in
mov
sub
pop
loope
mov
adc
push
je
sar
xchg
clc
adc
repz
or
xor
adc
arpl
sti
or
cmp
das
mov
outsl
inc
lea
push
mov
cmp
int
mov
fucom
xchg
pop
jle
stos
pop
fadd
outsl
sbb
add
jle
sti
loop
and
int3
into
testb
pop
pop
jl
in
xor
xchg
divl
lret
rolb
jge
lret
mov
inc
xchg
pop
out
sub
fistpll
jns
mov
xchg
xchg
dec
sub
xchg
push
pop
insb
rorl
aad
stc
shlb
sahf
sub
pop
jns
xor
jmp
xchg
das
mov
inc
adc
adc
das
jg
jecxz
lea
imul
scas
adc
pop
jmp
mov
adc
arpl
jns
xchg
push
andl
aad
cmpsb
jnp
in
push
pop
repnz
in
aam
xchg
push
jne
arpl
test
push
pop
jns
rorb
repnz
loop
sub
push
pop
jns
cmpb
cmp
popf
jg
std
ss
in
push
sbb
movsl
icebp
jns
and
les
dec
mov
sub
daa
lock
in
mov
jmp
sbbl
jns
mov
mov
mov
mov
notb
mov
mov
ffree
inc
push
pop
cmp
in
sub
dec
push
scas
test
jg
and
lea
and
pop
in
inc
pop
jns
pusha
jne
adc
mov
pop
sub
pop
and
gs
std
jg
jnp
addr16
pop
jns
xchg
js
out
popf
inc
insl
mov
rcrl
lds
imul
rol
out
add
add
imul
mov
scas
mov
and
cmpsb
lock
test
enter
adc
insl
stos
imul
lahf
xchg
sub
cmp
hlt
je
out
inc
repnz
loopne
sub
pop
add
xchg
mov
sarl
xchg
in
or
dec
stos
fdivrs
mov
mov
roll
test
jae
in
sub
xchg
jg
jnp
jge
add
jbe
pop
jle
sahf
ljmp
xlat
mov
rcrb
stc
in
xchg
hlt
push
or
nop
mov
push
ds
popf
js
scas
lcall
jg
and
popa
dec
inc
sahf
adc
iret
test
insb
and
imul
and
in
dec
aam
gs
push
mov
sub
xor
add
repz
add
stc
ja
xlat
fnsave
stc
fimuls
enter
dec
and
push
mov
fcompl
leave
mov
negb
cmp
jle
in
scas
loop
or
inc
pop
inc
cmp
pop
sbb
dec
pusha
pop
mov
mov
lret
outsb
frstor
cmp
sbb
sbb
repnz
lahf
lds
xlat
inc
add
sub
xor
outsl
lret
jle
and
xor
ficoml
mov
repnz
pop
andl
push
xchg
dec
adc
repnz
das
aaa
cmp
push
mov
xchg
aad
repnz
das
mov
cmp
xchg
mov
sub
cld
icebp
mov
das
mov
cltd
push
test
xchg
and
ret
xor
mov
stos
pop
mov
insb
adcl
orl
ficoms
jns
mov
inc
mov
push
jmp
inc
mov
xchg
cmp
sub
xchg
stos
add
cmp
lea
imul
enter
push
into
fstl
mov
adc
jns
repnz
cmp
sub
xchg
push
lods
mov
repnz
repnz
pop
flds
mov
push
lock
movsb
in
mov
in
pop
jmp
jge
xor
mov
ror
jmp
das
mov
inc
adc
pop
cwtl
repnz
mov
bound
and
mov
fsts
arpl
dec
or
enter
jmp
test
or
pop
sub
mov
dec
outsl
hlt
mov
das
mov
in
push
into
mov
das
mov
sub
xor
jb
mov
repnz
pop
xor
int
aas
and
imul
sbb
add
push
xor
pop
outsl
jbe
and
scas
mov
dec
inc
xchg
lods
icebp
inc
xchg
pop
loopne
jae
mov
mov
std
sbb
sti
in
in
jmp
mov
iret
sub
lret
das
incl
test
insl
dec
cmp
lret
das
mov
adc
imul
repnz
nop
clc
jge
lea
repnz
pop
gs
jecxz
lea
mov
hlt
frstor
les
fwait
lds
in
inc
or
adc
pop
pushf
lcall
stc
in
pop
jne
outsb
inc
and
outsb
iret
fsubr
xchg
pop
jle
push
fs
fbstp
cld
repnz
scas
push
or
in
pop
je
xor
lret
mov
fidivrs
push
adc
cmc
xchg
das
outsl
sub
xchg
movsb
push
stos
mov
mov
fcmovbe
lock
outsl
xlat
mov
js
in
mov
scas
mov
cmp
lock
mov
fwait
jbe
mov
lea
imul
and
mov
inc
cmc
xchg
das
mov
sbb
mov
stc
inc
cmp
sbb
jne
dec
das
mov
pushf
jae
int3
sbb
aaa
ljmp
in
dec
xor
xchg
sbb
sbb
lods
scas
enter
xlat
cld
dec
outsb
jl
in
mov
dec
jb
dec
dec
adc
jb
jg
mov
out
xchg
sub
icebp
out
or
subl
sub
jg
das
mov
mov
dec
push
lret
out
jl
movsb
cld
jnp
enter
imul
mov
shlb
jecxz
das
loope
and
movsl
mov
in
and
icebp
mov
inc
out
pusha
in
pop
jle
shl
loopne
mov
lret
mov
cmp
mov
sbb
rclb
push
fsts
xchg
ja
divb
loop
sub
add
les
jns
or
xchg
test
dec
sbb
xchg
push
pop
sub
pusha
pop
call
adc
pop
and
jns
fs
imul
mov
mov
dec
outsl
bound
add
ficomps
inc
fsin
std
lret
add
repnz
das
inc
popa
pushf
mov
push
cwtl
aaa
repz
adc
pop
nop
sbb
clc
jns
lret
das
mov
xchg
or
mov
in
roll
dec
inc
cmp
jg
jns
xor
mov
repnz
das
roll
addr16
movsl
dec
jnp
push
dec
push
sub
repz
sub
or
popa
test
test
out
in
stc
scas
mov
lahf
and
int3
outsl
mov
enter
push
enter
stc
push
inc
push
pop
jns
cmp
dec
daa
dec
pop
mov
gs
xchg
push
mov
and
xchg
repnz
pop
push
pop
aam
jns
jno
pop
movsb
iret
lea
inc
sub
dec
imul
jns
or
shlb
xor
mov
filds
jge
fs
dec
push
lds
orl
pop
jle
lods
lock
hlt
jae
xor
xor
inc
pop
jle
in
in
push
or
into
pop
ljmp
push
stc
in
cld
repz
inc
xor
ficomps
repnz
das
call
push
dec
pop
cmpb
mov
xchg
mov
imul
das
mov
and
out
loope
popf
and
pop
mov
bound
int
notl
sub
push
lds
adc
call
mov
sbb
xor
idiv
enter
leave
jae
pushf
into
cmp
adc
pop
lret
das
mov
out
sub
xchg
mov
orb
cmp
adc
dec
outsb
sub
movsl
rolb
lret
mov
int
inc
add
sbb
jns,pt
mov
cld
xchg
sbb
pop
ss
stc
mov
pushf
cmp
movsb
jb
hlt
mov
sbb
popa
stc
in
pop
mov
cmp
imul
ja
xchg
pop
jle
aaa
mov
xor
push
hlt
int3
insl
sbb
scas
mov
stc
mov
rcr
adcl
xchg
in
mov
arpl
in
dec
sub
rolb
jbe
fnsave
ds
cld
fbstp
push
cmp
lcall
mov
dec
sbb
xor
jmp
stc
repnz
das
sbb
ljmp
xchg
inc
pop
pop
shll
pusha
imul
outsb
shll
sbbl
imull
imul
pop
jns
fs
addr16
lods
in
test
fsubrs
test
lret
sbb
inc
lret
inc
jg
stc
repnz
sbb
jmp
mov
or
jle
in
xchg
cmp
cmpsb
in
pop
cwtl
xchg
fisttpll
stc
in
pop
pop
es
or
sbb
xchg
pop
jle
mov
push
jnp
loope
xchg
pop
jle
sbb
sbb
mov
fiadds
enter
or
scas
jg
mov
xchg
push
pop
sub
iret
bound
xchg
push
pop
pop
push
test
iret
jnp
lret
pop
addb
jecxz
jae
ds
mov
and
jnp
xlat
xor
pop
imul
cmpsb
inc
idivb
enter
mov
and
jns
cmp
push
mov
adc
and
sbb
sub
sub
call
pop
pop
loop
inc
leave
dec
ret
cmp
stc
in
mov
imul
xchg
and
xchg
out
push
pop
cmp
cmpsl
cmp
outsb
pop
mov
dec
cmpsb
mov
pop
cltd
das
bound
call
adc
pop
jle
inc
mov
pushf
lods
cmpsb
xchg
mov
test
cmp
xchg
jecxz
in
xchg
xchg
push
push
dec
cmp
cwtl
adc
or
icebp
push
xchg
cltd
hlt
scas
inc
mov
xchg
cltd
stc
sub
xor
arpl
add
iret
into
ds
push
cmp
jmp
stc
in
inc
rorl
das
or
jg
fildl
loopne
outsl
sbb
adc
or
pop
jle
mov
int
mov
imul
cld
repnz
push
lcall
loop
adc
shrb
shlb
mov
into
push
lret
mov
pop
imul
sub
add
pop
and
subb
inc
jnp
mov
les
sub
std
dec
and
mov
pop
aas
leave
add
in
push
fidivs
mov
xlat
fldl
arpl
xchg
push
pop
jns
lcall
stos
repnz
sub
sti
fcoml
fnsave
mov
mov
data16
test
cld
repnz
sbb
dec
out
mov
cld
repnz
lock
dec
jno
test
add
mov
push
xchg
das
sub
push
mov
into
mov
inc
in
das
and
or
repnz
fcoms
mov
xchg
sub
call
dec
pop
cltd
mov
inc
imul
sbb
scas
add
int3
clc
adc
pop
inc
fnstsw
scas
mov
cmp
adc
mov
or
and
push
ss
in
sub
pop
cli
aam
jge
fldt
scas
mov
add
jp
add
mov
jne
enter
adc
cs
lds
jns
inc
mov
lcall
xchg
push
aas
adcl
test
pop
cmp
dec
pop
movsl
cmpsb
cmpsl
data16
es
loopne
mov
repnz
repnz
int
lds
mov
fldenv
das
mov
sub
sub
lret
push
dec
inc
add
adc
in
xor
cld
pop
popf
or
jb
mov
dec
js
stc
jle
in
and
loope
es
das
ds
cwtl
mov
mov
jne
cmpsb
dec
das
mov
jns
rorl
jl
aam
insl
xor
mov
aas
sahf
das
notl
pop
mov
test
cld
repnz
das
adc
adc
aaa
push
scas
repnz
das
mov
int
sti
je
movsb
out
dec
enter
fprem
shrb
sub
jg
fs
out
test
xor
jecxz
pop
jle
push
sub
pop
jns
and
std
out
mov
fldl
pop
jns
xchg
push
adc
mov
dec
ja
xchg
jg
fisubrl
test
loope
out
dec
xchg
pop
jle
jmp
pop
xchg
dec
in
sbb
js
lahf
add
jle
in
sub
push
dec
fstl
xchg
ds
lock
dec
push
stc
xchg
cld
mov
inc
daa
and
clc
xchg
lret
hlt
out
mov
aam
sbb
pop
dec
and
push
pop
jns
mov
iret
and
fwait
cmp
jns
scas
mov
cwtl
xchg
or
or
jns
xchg
pop
shlb
push
popf
add
inc
push
mov
jne
inc
mov
xchg
pop
jle
sub
insl
mov
inc
jb
mov
mov
dec
lods
inc
outsb
adc
addr16
call
ficomps
in
and
jp
xchg
jle
cld
cmpsb
enter
push
mov
es
or
clc
push
rsm
and
orl
fidivrl
repnz
in
pop
jle
push
mov
nop
lret
pop
das
mov
repnz
add
and
in
repnz
cli
mov
mull
or
and
repnz
adc
xlat
jle
in
xchg
mov
or
fadd
jle
sti
enter
inc
mov
sub
shll
std
fbld
push
nop
mov
cli
and
cld
bnd
sbb
push
jecxz
xchg
mov
cld
repnz
push
dec
cmp
ss
inc
bound
jns
mov
push
inc
addr16
pop
bound
in
jne
cmp
repnz
dec
dec
jle
in
rcl
orl
nop
dec
stos
in
push
aam
das
call
pop
orl
mov
inc
mov
pop
jns
add
cmc
sbb
inc
push
pop
and
push
pop
mov
xchg
cli
and
mov
sahf
push
sub
repnz
das
sti
mov
mov
addl
repnz
das
mov
adc
ret
fildll
adc
lret
das
mov
or
cmp
sbbb
cld
repnz
test
push
mov
mov
addr16
vpmadcsswd
adc
or
icebp
sbbb
dec
mov
pop
hlt
xchg
je
in
jg
xlat
mov
enter
add
mov
cmp
mov
pusha
xchg
pop
sub
mov
lds
mov
out
leave
fst
leave
xchg
dec
mov
popf
xchg
xchg
stc
test
push
stc
mov
test
lods
mov
arpl
lods
pushf
dec
imul
mov
arpl
notl
outsb
ja
movsb
and
jl
sti
lret
mov
dec
push
xor
jge
outsl
add
out
dec
jl
push
add
ja
pop
insb
lods
sub
mov
in
mov
and
jl
out
enter
ss
mov
ds
das
mov
and
pop
repnz
in
das
mov
or
lcall
idivb
cltd
mov
call
adc
cld
repnz
mov
arpl
mov
add
push
push
ficomps
cmpsl
out
xchg
push
adc
daa
dec
jne
pop
jns
xchg
lods
jne
pushf
push
inc
fmuls
fimuls
push
sarl
sbb
mov
sbb
xchg
mov
rol
dec
ja
inc
in
enter
jge
nop
lock
mov
je
push
cwtl
fbld
inc
ret
out
xchg
sub
push
loopne
outsb
out
fld
das
mov
push
addr16
push
inc
jge
lret
movsl
mov
cli
popf
inc
sbb
inc
pop
jns
icebp
mov
adc
stos
and
and
mov
in
stc
xchg
push
pop
jns
decl
test
inc
shll
jge
xor
test
sahf
ss
into
sahf
cmc
pop
cmp
mov
xor
fstps
arpl
sub
fnsave
in
rclb
mov
repnz
xchg
push
pop
jmp
xchg
insb
lahf
rorl
inc
mov
lret
out
ljmp
add
cmp
adc
in
mov
repz
push
inc
insb
lock
lret
aas
jp
lret
cmp
bound
jl
xor
test
push
aad
inc
pop
jle
in
pop
les
lahf
cmpsb
and
xchg
xchg
mov
lods
push
add
lock
in
pop
jle
cwtl
cmp
and
xor
xor
push
insb
mov
lcall
xchg
pop
jle
fdivs
int
in
out
in
aas
jns
in
mov
addl
add
mov
sti
mov
lret
add
push
lock
jb
hlt
jns
push
out
insb
pop
hlt
or
xchg
sub
mov
xchg
pop
jns
call
mov
mov
or
lret
pop
test
add
sub
pop
lret
mov
jmp
pop
scas
fldt
scas
mov
loopne
ds
mov
lcallw
mov
es
sbb
push
fists
sub
adc
jns
in
vpcmpeqb
andb
xor
inc
fmul
scas
xor
pop
and
cmp
fldcw
jnp
ss
jg
cmpsl
push
ret
scas
add
sbb
inc
pcmpgtw
inc
in
test
dec
insb
xchg
fldl
pop
jns
add
and
dec
lods
sti
sub
inc
rorb
in
cmp
mov
scas
lcall
push
or
mov
xor
push
cs
shll
repnz
mov
sub
test
scas
mov
inc
popl
mov
xlat
mov
lahf
fildll
ss
cmp
ds
jb
push
loopne
cmp
stc
notl
jge
xchg
push
mov
in
pop
jle
push
lea
and
stc
imull
add
sub
jle
push
loope
sti
mov
mov
inc
xchg
inc
mov
xor
lret
ljmp
scas
xchg
mov
xchg
push
pop
jns
cs
inc
cmp
xchg
mov
mov
cwtl
out
inc
xchg
lods
or
lods
and
jmp
pop
jns
push
and
pushf
xchg
cmpsl
daa
lret
add
divps
xchg
js
in
rcrb
int3
mov
jns
xchg
push
mov
sbb
push
stos
ss
push
pop
in
xchg
mov
pop
jns
imul
daa
mov
jns
pusha
out
cmp
fldcw
xchg
jns
xchg
scas
in
cmp
dec
imulb
mov
in
push
outsb
lahf
adc
mov
arpl
inc
in
push
pop
pop
adc
sub
pop
cltd
cld
xchg
push
pop
jns
arpl
add
ja
mov
mov
push
pop
jns
mov
push
lcall
and
jge
xor
mov
dec
lret
mov
xchg
add
cli
pop
sub
aaa
aad
repnz
shll
repnz
adc
sub
in
lcall
lret
scas
fadds
pop
fs
xchg
sub
addr16
jl
pop
jns
call
push
aas
fcoms
cwtl
pop
movsb
jns
xchg
push
lods
mov
loop
mov
mov
test
pop
dec
inc
cmp
add
call
aaa
xchg
push
pop
jns
testb
dec
mov
cmp
stc
in
cmc
popa
adc
xchg
dec
sahf
daa
dec
pop
add
ret
in
pop
je
mov
sub
bound
addb
mov
popf
xlat
pusha
movsl
mov
add
shll
insl
xlat
and
das
mov
cmp
out
jnp
mov
clc
das
mov
cmp
push
or
add
jl
cld
repnz
test
add
es
fwait
mov
in
and
and
mov
pop
xchg
dec
pop
shrl
xor
add
data16
nop
jnp,pt
in
and
je
addr16
jecxz
mov
xchg
mov
imul
xchg
mov
pop
jns
sahf
sub
mov
lret
icebp
add
sub
cmp
inc
repnz
lcall
inc
push
pop
js
lea
mov
pusha
cmpb
xchg
mov
mov
xchg
push
pop
jns
sbb
jae
sub
cwtl
mov
push
pop
jns
xchg
imul
xchg
fiaddl
in
rcll
popa
into
mov
data16
xchg
push
out
movsb
negl
scas
cmpsl
fcmovne
sub
sub
mov
sub
pusha
jmp
sbb
mov
mov
mov
dec
loop
mov
adc
xchg
pop
xlat
mov
cmp
test
stc
jle
fmuls
lret
outsb
aaa
xor
pop
jns
popf
sub
call
lret
add
outsl
fadds
in
push
inc
enter
pop
xlat
outsl
sbb
inc
push
pop
xlat
dec
dec
fidivs
loopne
mov
repnz
cmpsl
xchg
mov
int
leave
insl
inc
sub
scas
mov
push
dec
into
pop
mov
xchg
lret
cmp
lret
sub
sti
in
push
mov
dec
push
shlb
ficoml
hlt
mov
in
dec
addr16
jle
sarl
and
cmc
xchg
das
mov
add
lds
jnp
pop
jns
lea
popa
out
inc
dec
jns
sub
in
push
xor
and
sarb
xchg
push
pop
cs
and
shr
outsl
sbb
out
mov
add
scas
add
mov
into
ficoml
pop
inc
lds
sub
mov
sub
ja
mov
lret
arpl
cli
fbstp
add
movsb
scas
repnz
enter
sbb
in
and
xchg
cld
pop
mov
inc
pop
adc
inc
cld
outsl
jns
sub
mov
gs
popa
int3
push
shl
xchg
push
pop
mov
jmp
icebp
movsl
sahf
inc
cmp
hlt
cmpsl
jle
inc
jle
jecxz
stc
in
stc
push
ret
xor
test
pop
fsub
stc
in
pop
inc
dec
call
je
imul
nop
ret
ss
xchg
ds
push
sub
fisttpll
stos
fs
das
fldt
add
or
lret
and
pushf
mov
scas
mov
bound
sbb
lods
add
shlb
xchg
pop
jle
std
adc
popf
jnp
inc
push
aad
jmp
adc
ss
mov
scas
mov
jmp
mov
or
ds
xchg
sub
bound
dec
dec
inc
mov
cmp
jl
in
out
jl
inc
int
fbstp
jle
mov
dec
loopne
loop
repnz
mov
not
dec
pop
and
in
lcall
ja
and
aaa
bound
in
push
ljmp
lds
jle
in
shrb
arpl
mov
and
dec
iret
daa
stc
in
pop
push
mov
inc
xchg
dec
je
xchg
pop
jle
dec
pop
jns
push
and
adc
in
mov
fucomip
sub
xor
in
int3
pop
jns
jge
inc
pop
scas
inc
mov
pop
dec
in
jg
stos
mov
and
sbb
js
dec
and
shl
lret
jne
mov
inc
sbb
sub
mov
dec
sub
jns
call
push
in
jle
mov
enter
add
sbb
repnz
cmp
repz
push
jnp
dec
jecxz
lret
mov
jae
aad
jb
jo
sub
xor
jnp
sbb
or
cld
scas
mov
lcall
and
ljmp
adc
pop
stc
in
in
mov
push
jg
push
icebp
mov
cmp
jns
xchg
push
dec
pop
ds
iret
cld
xchg
fwait
mov
cmp
xchg
push
pop
cmpsb
ret
std
popf
push
aas
push
scas
mov
pop
movsl
add
fistps
in
sub
gs
hlt
enter
add
inc
dec
rol
into
or
dec
jecxz
sbb
f2xm1
lods
sub
repnz
leave
inc
push
jnp
xchg
pop
out
sbb
sub
cmpsl
sbb
mov
cmpsb
enter
pop
and
sbb
std
js
orb
cmpsl
mov
shll
int
jmp
repnz
outsl
xor
stc
jnp
dec
mov
xchg
mov
incb
pop
mov
mov
mov
fnstcw
dec
inc
stc
in
pop
daa
mov
stos
and
mov
push
icebp
mov
lret
dec
jae
iret
test
test
jns
popf
mov
mov
or
call
inc
xchg
mov
jp
scas
mov
adc
add
jmp
loope
adc
sub
aam
or
or
in
pop
and
xchg
sub
adc
into
lock
jns
cmp
dec
ret
cmp
sub
lock
xchg
push
mov
je
inc
cmpsb
imul
shrl
mov
es
popf
imul
jg
cld
cmp
lret
data16
jbe
pop
and
lret
das
mov
xor
push
and
orb
lods
add
mov
inc
push
push
js
fbstp
dec
and
dec
sub
in
jg
or
ljmp
in
or
in
pop
jle
xor
clc
in
inc
sbb
mov
adc
xor
push
pop
in
arpl
movsb
popf
pop
xchg
inc
sti
ficomps
shrl
mov
sub
movsl
jo
dec
add
fcomip
mov
inc
outsl
and
ljmp
sarb
es
repnz
in
int
jnp
and
std
xor
out
push
nop
push
mov
xchg
push
jmp
pop
sti
mov
jp
iret
es
pusha
jle
pop
jns
xchg
xchg
cmp
js
inc
sub
pop
fisttpl
dec
lods
js
sbb
lahf
adc
pop
jle
addr16
loop
or
mov
mov
adc
nop
adc
sarl
in
jbe
mov
adc
mov
lret
mov
adc
push
call
cld
cmp
xchg
jmp
data16
pop
jge
sti
fnsave
cwtl
aad
fmull
out
maskmovq
jle
in
fidivl
inc
cmp
xor
lods
sar
xchg
pop
or
outsl
dec
cmp
jg
and
sti
sub
mov
jmp
repnz
and
iret
fucomi
jmp
cmpsl
cmp
inc
mov
das
pop
mov
xlat
scas
push
pop
jns
xchg
repnz
mov
ljmp
jbe
test
aas
inc
push
and
and
stc
cmpsl
xor
sub
mov
test
pop
test
and
mov
into
cld
repnz
das
movb
adc
in
das
mov
into
out
sbb
test
sub
jge
movsl
out
xor
jg
mov
cwtl
pop
insl
push
icebp
or
ja
add
mov
scas
sub
push
push
lahf
lea
mov
gs
fmulp
das
mov
mov
in
xchg
or
repnz
xor
mov
je
pop
push
lock
xchg
das
mov
into
cmpsb
cmp
popa
inc
jle
idiv
gs
je
adc
jle
inc
pop
sti
repnz
push
vhaddps
xor
mov
test
dec
das
lea
pusha
in
subb
test
lret
das
mov
fucomip
mov
data16
lcall
add
out
scas
fwait
adc
lret
mov
lret
fsin
cmpsb
call
xchg
imul
jmp
or
insb
push
cmp
lods
mov
mov
dec
hlt
mov
xchg
push
pop
jns
fiadds
mov
fs
add
std
push
pop
jns
mov
enter
mov
pop
jns
xchg
aad
rcr
inc
xor
cmpsb
dec
lods
jb
xchg
push
mov
mov
mov
outsl
or
arpl
out
add
cmp
mov
lds
imul
icebp
call
mov
out
dec
sub
xor
test
js
push
repnz
mov
int
push
or
jge
das
mov
lds
adc
and
or
cld
repnz
push
fcmovnbe
call
pop
pushf
imul
inc
js
out
pop
cld
imul
dec
pop
lds
xchg
out
sbb
pop
jle
ret
dec
sub
dec
xor
push
ficomps
clc
cld
push
xchg
sub
mov
rcrb
jns
xchg
dec
ljmp
dec
aas
clc
or
push
pop
dec
mull
adc
repnz
stos
push
mov
inc
test
in
sbb
xchg
xor
movl
ror
loopne
add
mov
in
xchg
and
cmp
pop
enter
popf
jp
lock
add
stc
sti
sbb
ret
ret
arpl
pop
jns
pop
mov
jno
push
scas
xchg
sbb
in
les
add
dec
mov
dec
mov
aad
mov
push
mov
cmpsb
setg
sahf
pop
fildll
dec
pop
lcall
lret
or
loop
xchg
cltd
lret
mov
out
adc
add
scas
mov
cmp
aaa
jbe
lds
scas
mov
in
sub
mov
cmp
mov
add
pop
stc
pushf
ja
sbbl
lret
mov
and
or
cld
cmp
adc
into
sbb
fadd
leave
decb
enter
adc
sub
in
ds
lret
clc
and
pop
imulb
sub
lret
das
pushl
xchg
jnp
lock
dec
stos
adcl
testb
movsl
hlt
les
jp
push
ja
jmp
incl
stos
jg
pop
jns
out
adc
popf
fwait
xlat
xchg
xor
jns
ljmp
or
xchg
push
pop
cwtl
add
pop
int3
pop
clc
into
push
and
xchg
push
pop
jns
cltd
jne
adc
mov
add
sbb
fnstsw
dec
dec
sbb
andb
scas
mov
lock
jmp
mov
out
dec
int3
dec
lcall
mov
push
jecxz
into
fld
rorl
lret
adc
aam
adc
jge
add
das
mov
xchg
lds
ja
out
andl
lock
repnz
jp
mov
int3
sub
addr16
repnz
das
cmp
sahf
or
mov
mov
lds
popa
push
lds
pop
lods
cmp
add
sub
mov
sub
in
scas
xchg
lret
mov
jbe
daa
inc
xchg
dec
jne
push
push
mov
push
ja
xor
in
ja
popf
dec
in
adc
xchg
inc
cwtl
push
clc
inc
xchg
push
pop
xchg
out
int3
sbb
jmp
dec
pop
insb
cmp
and
lahf
xor
xor
sub
xchg
mov
sub
mov
fcomi
adc
lret
sbb
cmp
adc
out
mov
addr16
nop
adc
in
repnz
lods
xchg
gs
not
fidivrs
lret
mov
mov
sarb
scas
mov
popa
sbb
lret
mov
lret
xchg
andl
scas
dec
repnz
ss
sbb
lret
iret
inc
jg
out
jnp
cmp
repnz
sbb
das
je
loop
cmp
pop
sbb
inc
mov
push
cs
stc
in
mov
jmp
es
add
pop
out
pusha
in
ret
sub
repnz
adc
clc
fsts
dec
cltd
pop
cmp
add
jge
fistl
cmpsb
sub
leave
jle
in
std
lods
aam
lcall
xor
imul
and
xchg
mov
jmp
or
ds
and
xor
pushf
mov
xchg
out
test
add
xor
xchg
mov
and
jecxz
sub
scas
mov
push
lods
cwtl
stc
mov
xchg
xor
push
in
sub
sbb
jbe
dec
mov
jecxz
push
stos
xor
lret
cwtl
inc
pop
cmpsl
xchg
pop
sbb
cmpsb
cmp
aas
clc
jno
jnp
mov
bound
sbb
cmpsl
movsb
lret
mov
xlat
cwtl
pop
fnstenv
stc
in
jp
repz
inc
or
cmp
and
and
mov
repz
clc
js
das
ds
mov
lret
xchg
jns
mov
repnz
xchg
loope
add
dec
jge
lret
das
ja,pt
dec
jb
dec
jne
dec
mov
jne
push
sub
out
inc
cmp
cwtl
push
test
mov
xor
inc
movsb
fists
xor
push
pop
mov
sbb
iret
inc
pop
bnd
int
xlat
cltd
movsl
push
ja
push
jle
in
fwait
lret
cmp
mov
xchg
cmpsl
repnz
pop
movsb
mov
daa
sbb
dec
inc
lea
addr16
cmp
pop
daa
xchg
jge
insl
push
mov
jl
in
fdivrs
inc
pop
sub
sbb
in
and
mov
lret
mov
pop
xor
inc
or
cld
add
dec
mov
mov
cmp
hlt
jmp
lods
not
push
mov
mov
aad
inc
outsl
adc
cmp
scas
push
lahf
in
outsl
stc
in
leave
mov
jne
clc
sub
xchg
pop
jle
dec
add
out
inc
dec
insb
inc
xchg
negl
or
sbb
jp
jl
in
arpl
js
mov
icebp
adc
xchg
ret
dec
pop
cmp
insl
dec
push
push
cmp
sub
out
xor
xchg
pushf
int
outsb
and
clc
enter
or
add
nop
push
cmp
xchg
jg
mov
in
mov
adc
pop
jle
movsl
std
arpl
push
push
imul
pop
jmp
xchg
repnz
xchg
pop
pop
mov
stos
mov
pop
or
stc
cmp
scas
mov
xchg
out
mov
dec
faddl
repnz
popf
les
xchg
pop
xor
xchg
addr16
mov
lods
imul
add
sbb
aad
gs
lret
lea
jb
jge
push
mov
sub
popa
loop
lods
pop
ret
dec
pushf
leave
cli
enter
loop
rol
imul
stos
mov
mov
xchg
jo
aam
jg
cld
int3
stc
fs
mov
into
add
push
or
and
lret
pop
jge
shll
pop
lea
jle
repnz
popf
loopne
mov
rclw
ja
cmp
insb
jge
lret
aas
jge
mov
stc
mov
mov
jmp
adcb
jle
outsl
das
mov
sahf
lds
sub
xor
xor
and
lret
or
nop
xchg
jb
lret
mov
jg
xor
cwtl
sbb
pushf
lret
das
mov
popa
xor
sub
inc
xchg
lret
cld
repnz
cld
push
mov
imul
mov
out
ds
gs
imul
xchg
pop
push
in
mov
out
push
adc
cld
mov
or
add
icebp
int
mov
mov
imul
insb
outsb
aaa
jle
add
out
int3
aam
inc
das
xor
imul
pop
mov
mov
sub
pop
ret
pop
jns
or
add
fwait
int
notl
or
or
jle
std
pop
ficomps
popf
andl
jo
fimull
shll
test
jns
xchg
push
adc
dec
adc
xchg
xchg
push
pop
cmp
pushf
jp
adcb
into
xorb
out
push
inc
out
test
cmp
inc
addr16
mov
and
push
jmp
jl
aaa
mov
push
fidivl
add
inc
sahf
jg
mov
jnp
mov
xchg
push
or
pop
loopne
push
xor
rclb
mov
movsb
lods
mov
sarl
fcmovnb
in
test
mov
pop
lcall
lcall
push
ret
mov
in
and
ja
mov
xchg
mov
leave
lods
sbb
pop
stos
jno,pt
fs
push
xchg
mov
sub
dec
mov
adc
stc
pop
add
jnp
test
dec
test
in
sbb
fcoms
sub
int3
int
enter
test
xchg
jl
mov
stc
addr16
cwtl
imul
mov
inc
push
or
in
pop
je
xlat
adc
cmp
ret
sub
in
pop
jle
push
xchg
mov
das
add
std
mov
push
stc
lods
insb
push
xor
add
xchg
pop
jle
in
test
leave
jmp
dec
imul
jle
in
mov
pop
jns
sbb
lods
add
cmp
inc
jmp
xor
call
daa
pop
add
fwait
sub
add
mov
mov
pop
cmpsl
mov
ds
cmpsl
inc
jle
in
arpl
cli
jp
xchg
push
jnp
xchg
mov
mov
imul
adc
inc
mov
push
jne
cmp
push
mov
stos
inc
test
loope
and
in
in
mov
mov
adc
and
jge
dec
xor
add
movsl
sti
lea
fcmovbe
cmp
xchg
pop
xchg
xchg
jg
fsub
popa
pop
ret
sbb
xchg
xor
jle
in
pop
test
mov
mov
mov
js
xchg
stc
push
jno
sbb
fcoml
addr16
stos
sti
xchg
xchg
ja
add
popa
fs
test
mov
or
fcompl
cwtl
xor
das
jmp
push
sbb
imul
pop
jns
outsl
mov
fiaddl
ja
mov
test
les
repnz
push
pushf
mov
pop
scas
inc
jl
add
jg
cld
cmp
and
lret
jle
in
int
xor
stc
cmp
in
pop
dec
lahf
or
inc
lods
inc
repnz
es
jo
adcl
scas
mov
stos
movsl
cmpsl
mov
lds
xlat
push
cs
mov
out
arpl
pop
adc
mov
cmp
adc
pop
stc
repnz
xlat
add
ja
sbb
push
or
repnz
ret
push
xor
jl
and
scas
dec
xchg
popf
xlat
push
pop
fsubrs
xor
test
inc
test
sub
inc
test
push
pop
jns
repz
pop
outsb
xchg
jge
inc
es
pop
jns
lcall
push
jp
insl
cld
xor
pop
jns
xchg
testl
cmp
adc
or
sbb
mov
xchg
das
enter
dec
in
es
pop
imul
in
jmp
in
stc
inc
hlt
popa
loope
sbb
mov
ds
sahf
ss
std
xlat
out
push
pop
jns
cli
jne
cli
dec
lods
test
scas
mov
pop
jns
xchg
mov
xchg
jp
mov
addl
stos
and
mov
inc
push
in
xchg
sahf
int3
xor
lds
outsl
out
jns
xchg
and
xchg
sbb
cmc
xor
cli
sbb
lock
pop
repnz
jecxz
xchg
pop
jle
sub
loop
cmp
pusha
loope
lods
pop
jle
in
xchg
xchg
movb
mov
xchg
mov
neg
xchg
out
fnstenv
ror
pusha
or
jle
aam
inc
in
ret
jno
fsts
fldl
xchg
cmpsl
pusha
out
mov
pop
jle
in
ljmp
in
mov
cld
jnp
xchg
or
mov
adc
das
dec
repnz
das
mov
sbb
std
add
fbld
mov
out
mov
mov
stc
mov
stc
in
cmp
mov
mov
pusha
shll
cld
repnz
and
int
mov
repnz
das
mov
jg
mov
lret
das
mov
dec
cmp
sub
mov
mov
or
test
inc
pop
iret
loope
mov
dec
repnz
pop
cmp
lcall
sub
sub
xchg
push
or
adc
mov
mov
adc
cmp
cmp
cwtl
adc
cmpsw
imul
xchg
pop
jge
push
je
push
mov
jecxz
push
ja
repnz
mov
int
clc
repnz
lret
das
mov
and
cmp
pop
cld
bnd
outsb
iret
pop
rorl
mov
inc
in
push
fisubs
mov
mov
loopne
testl
inc
xchg
dec
and
addr16
or
jns
fcmove
sarb
mov
js
xchg
xchg
cwtl
mov
push
mov
xor
stc
in
daa
mov
dec
cmpsl
gs
rcll
aam
mov
jle
std
add
lahf
outsb
inc
lahf
adc
stc
into
data16
xchg
inc
addl
out
sbb
sub
loope
aas
lret
das
mov
jp
out
pop
push
aam
hlt
das
mov
mov
mov
bound
pop
stc
mov
or
shr
pop
nop
test
sbb
repnz
das
adc
inc
movsb
mov
in
pop
jo
lret
das
mov
stos
sub
cmp
sub
jbe
push
cwtl
jns,pt
iret
and
jns
xchg
push
push
jns
push
xor
pop
sarb
mov
adc
inc
pop
jns
out
sbb
insl
adc
xchg
das
mov
movsb
xchg
or
dec
xchg
nop
adc
ds
shlb
add
das
cli
fadd
repnz
daa
das
cmp
andb
jmp
xchg
pop
cmp
popf
adc
jmp
sbb
stc
in
lock
mov
addr16
imul
dec
lods
das
repz
sbb
idivb
xor
xlat
jns
inc
jp
cmp
cld
repnz
das
pushf
lods
mov
or
cmp
das
mov
arpl
adc
sbb
scas
ficompl
cs
mov
dec
sahf
dec
and
dec
sub
mov
and
and
in
aam
inc
out
mov
jmp
mov
inc
sbb
in
lods
ficomps
pop
cmp
jae
lret
push
pusha
das
rorl
mov
stc
in
sub
jae
mov
xor
in
cld
repnz
xchg
and
inc
jmp
push
mov
test
call
push
xchg
sti
ret
imul
movsl
test
les
lds
pop
xor
mov
fcompl
jle
popf
cmpsl
mov
xchg
in
or
push
stc
hlt
push
pop
pop
sbb
movsl
jge
js
push
fsubrl
mov
dec
out
dec
movsb
in
and
mov
add
xor
ja
ja
insb
testl
push
pop
jns
mov
sbb
xlat
std
aaa
push
pop
jns
adc
js
rolb
add
daa
sub
jo
std
das
mov
ds
fs
jnp
jbe
dec
das
mov
push
adc
push
test
insb
xchg
lret
sbb
repnz
rcll
out
adc
lcall
inc
jp
push
jbe
lea
ljmp
movsl
and
pop
cmpsb
sbbb
imul
imul
daa
das
mov
push
mov
add
psadbw
mov
repnz
mov
xor
in
adc
ja
xchg
mov
jnp
aas
test
in
cltd
das
ds
pop
jns
mov
test
sbb
sbb
xchg
mov
aad
mov
pop
jns
xchg
push
nop
jo
in
push
push
jl
mov
xchg
push
pop
xchg
jmp
sbb
xor
push
pop
jns
xlat
inc
sbb
dec
add
add
jge
in
jb
inc
add
hlt
notl
lret
das
jmp
cs
loope
bnd
pop
inc
sbb
std
xchg
mov
xchg
ror
aas
cltd
and
xchg
pop
jle
das
sbb
inc
or
jle
lods
jg
stc
in
out
push
cmp
call
mov
cli
leave
lret
mov
cltd
or
fmulp
jmp
xor
dec
test
maxps
in
out
xchg
into
lahf
cmp
daa
pop
test
xchg
sub
movsl
vmovsd
in
pop
inc
loop
inc
imulb
push
xor
addl
in
pop
jle
scas
fistps
repnz
aas
rol
xchg
pop
jle
or
inc
mov
mov
pop
jle
in
dec
dec
mov
mov
invd
js
xchg
pusha
or
adc
mov
lds
jno
iret
add
enter
mov
cmp
je
add
loope
fistl
loopne
xlat
jns
xchg
push
lahf
cmc
mov
xor
mov
sbb
pop
in
xchg
mov
imul
ljmp
popf
xorl
mov
pop
and
cmpsl
sub
out
and
daa
pop
sub
insb
dec
dec
and
cld
cmp
leave
push
insb
in
mov
fnstenv
and
xchg
jg
jno
pop
jne
ficompl
aas
mov
push
push
and
sti
mov
lret
lcall
push
popf
or
pop
inc
mov
inc
pop
or
mov
ds
fdiv
dec
hlt
sub
xchg
sbb
arpl
das
ljmp
add
push
pop
jecxz
adcl
xor
fistl
pop
jns
jle
push
jmp
std
adc
aaa
nop
jle
in
mov
adc
clc
scas
enter
aam
jo
in
pop
xchg
sti
push
mov
int3
jae
mov
pop
jle
lea
inc
jb
jecxz
loop
ds
lret
loop
jmp
sbb
mov
roll
sub
ret
add
negl
jno
adc
push
jmp
xchg
pop
ljmp
jge
pop
into
cmpsb
xchg
ja
push
lret
ret
cmp
enter
sbb
popa
xorps
or
pop
pop
jns
sahf
mov
lret
jne
lret
movntq
and
cmp
inc
xchg
inc
add
jle
in
frstor
and
and
lret
je
enter
sub
repz
enter
stc
in
aas
jnp
push
shlb
sbb
popf
or
xchg
pop
jle
es
int
inc
je
arpl
daa
pop
jle
lods
mov
test
adc
cmp
sar
enter
mov
ljmp
xchg
push
fisubrs
xchg
dec
pusha
inc
and
fstp
or
and
test
cld
aaa
shlb
mov
add
fneni(8087
sbb
xchg
ret
add
in
lcall
and
in
pop
jle
xor
rcll
int
outsl
dec
cmp
pop
push
ljmp
out
enter
scas
clc
mov
xchg
inc
cmp
mov
mov
sbb
imul
stc
test
add
and
dec
addr16
in
pop
ja
jmp
mov
les
repz
enter
pop
jle
mov
jl
pop
inc
fwait
repnz
stc
or
pop
or
outsb
adc
stc
in
test
add
xchg
pop
jle
clc
sti
xlat
retw
push
jnp
xchg
pop
jle
rol
mov
es
adc
enter
push
cmp
int
test
cmp
icebp
bound
stc
adc
sub
mov
or
adc
jge
out
imul
test
lret
mov
push
mov
shll
daa
repnz
mov
stos
pop
imul
inc
xchg
push
mov
xor
dec
dec
pop
arpl
in
jle
leave
stos
pushf
or
jmp
push
icebp
das
decl
loope
xor
cmpxchg
jnp
mov
jp
lret
sub
mov
xor
xchg
push
pop
sqrtps
adc
inc
inc
jle
mull
jo
push
cmp
mov
outsb
popa
sub
and
out
fbstp
mov
jg
pop
or
pop
xlat
cmp
lret
cmp
dec
icebp
sbb
scas
fstpt
dec
lret
or
jge
sbb
scas
mov
lret
push
push
nop
aam
fnsave
scas
mov
mov
lds
ja
je
rorb
mov
dec
ljmp
push
stos
bswap
das
mov
mov
dec
das
mov
repnz
inc
sub
mov
xchg
jae
rcl
cltd
sti
push
lret
mov
adc
pop
dec
add
sti
push
aam
notb
or
lret
sbb
lret
clc
xor
out
popa
lret
sar
xchg
jno
repnz
das
ret
push
pop
int
push
pop
outsl
cwtl
jns
filds
jmp
std
dec
lahf
cmpb
loope
ja
push
stc
movsl
pushf
cmpb
pushf
pop
cmc
xchg
xchg
mov
mov
push
lret
mov
sbb
jb
xor
sti
enter
push
push
int3
pop
add
dec
movsl
xchg
ja
out
int
in
mov
in
mov
adc
mov
test
stc
xor
jnp
lret
das
cmp
pop
or
setge
ja
lret
das
mov
cltd
jnp
mov
xchg
mov
cmp
push
adc
xchg
xlat
mov
xchg
lcall
dec
movsb
push
dec
ret
outsl
push
repnz
outsl
and
mov
icebp
in
and
insb
dec
enter
orb
repnz
or
jo
std
add
or
icebp
mov
loope
jb
iret
es
xchg
pop
jmp
mov
jp
jb
imul
dec
in
ds
pop
add
xlat
push
cmp
xchg
pusha
sbb
jle
jne
test
mov
sub
in
dec
lds
lea
xor
lcall
jbe
push
xlat
push
ss
mov
lret
aad
adc
test
lods
test
sub
adc
cmp
xchg
push
pop
jns
jle
test
mov
jns
cmc
xchg
xchg
jecxz
dec
jmp
lods
mov
xchg
stos
mov
sar
mov
fwait
shl
lret
das
jg
stos
push
push
lock
cmp
add
mov
or
divl
stos
push
das
mov
push
adc
dec
aam
adc
lods
push
leave
mov
mov
mov
lds
push
mov
sbb
outsb
rolb
lret
lods
sbb
xor
bound
lock
lcall
stc
aam
pusha
es
movsl
sub
add
std
in
sub
jo
sub
pop
stc
in
pop
add
les
mov
loope
and
shrl
inc
movsb
pop
xchg
mov
insb
jl
daa
mov
aaa
test
mov
xchg
testl
in
sbb
in
mov
push
cmpb
xchg
pop
jle
mov
pop
mulb
mov
mov
jmp
or
int
inc
xlat
ret
cld
repnz
jmp
rorl
adc
aad
push
cld
repnz
das
addr16
dec
mov
mov
push
mov
rolb
aad
fcomip
lret
insb
dec
std
sub
hlt
cmp
cmp
repnz
xor
out
and
mov
arpl
xchg
sub
fs
pop
jns
jg
dec
clc
sub
push
mov
ds
loopne
fwait
xlat
pop
mov
cmpb
aaa
cmpsb
lea
xor
pop
jns
movsl
dec
xchg
pusha
jmp
data16
push
pop
jns
cmp
adc
movsl
push
add
ja
xchg
add
ljmp
call
mov
jle
in
insl
enter
gs
jns
or
lcall
stc
adcl
hlt
xor
mov
mov
insb
mov
jp
ds
mov
push
leave
push
add
dec
orl
or
xlat
mov
ss
mov
lret
sub
push
mov
hlt
js
cld
repnz
das
cmp
jnp
stc
pop
cmp
das
mov
adc
in
mov
es
xchg
mov
pop
xor
cld
repnz
aaa
adc
pusha
std
pop
cmp
mov
cmp
lret
cwtl
loop
pop
dec
test
add
addl
mov
xchg
aaa
fwait
xchg
mov
dec
jae
add
xchg
push
pop
cmp
aas
mov
xchg
push
pop
jns
sti
mov
fstl
push
pop
jns
xor
fcomip
adc
pop
out
inc
mov
inc
push
adc
xchg
mov
cmp
jns
mov
and
add
jns
xchg
aas
jbe
pop
mov
adc
imul
in
push
testb
mov
push
sbb
jnp
pop
es
sahf
aam
and
repnz
movsl
es
push
dec
sub
adc
adc
mov
iret
mov
xchg
add
cmp
lret
mov
fdivl
sbb
mov
mov
push
scas
and
mov
and
fists
mov
jae
sbb
test
pop
push
push
jge
in
push
fcoml
sub
inc
lret
popa
loope
xchg
fcomps
sti
xor
scas
mov
out
out
mov
mov
repnz
int
bound
outsl
in
aaa
es
test
xor
cmp
push
push
xchg
push
pop
jns
gs
pusha
icebp
xchg
int
ljmp
in
or
ds
ss
out
adc
push
pcmpeqb
jb
xchg
xchg
xchg
pusha
pop
fs
fimuls
sub
loope
xor
adc
xchg
push
ret
ljmp
fwait
adc
popa
imul
shrb
xchg
push
dec
jb
and
or
dec
cmc
mov
push
pop
jns
xor
ret
xor
xchg
jns
test
out
push
adc
pop
jns
xchg
sbb
cmp
outsb
jb
xchg
push
clc
sub
and
mov
and
pop
xchg
pop
cmp
testb
jno
pop
jle
in
rcll
jb
cmp
idivl
in
jge
xchg
xchg
dec
xlat
idiv
inc
loop
xor
pop
mov
outsb
aas
xchg
or
mov
ja
fwait
xlat
std
sti
stc
sub
or
in
movsl
imul
sub
dec
cmp
repnz
repnz
lret
fdivs
shl
mov
cld
faddl
in
test
sbb
loope,pt
cli
xchg
push
pop
jns
jmp
jbe
adc
lods
push
cltd
dec
push
pop
jns
sub
push
stos
mov
jg
repz
in
and
and
mov
mov
icebp
xchg
scas
or
mov
add
repnz
enter
xchg
out
cmpsb
fmuls
xchg
push
pushf
mov
movsl
das
mov
subb
in
pop
jmp
imul
xchg
xor
push
xchg
test
scas
inc
dec
rorl
lret
fsubrl
aaa
imul
movsl
inc
scas
test
xor
lret
jbe
arpl
and
mov
fstpt
pop
jns
addb
or
inc
loopne
sti
push
dec
mov
repnz
fsubl
cmp
js
gs
dec
les
mov
popa
sti
cmp
pusha
imul
repnz
repz
mov
in
aaa
mov
insb
imul
addr16
pop
jns
into
mov
rorl
jb
pop
jle
xorl
lods
jg
jns
data16
sub
and
sarl
xchg
push
fidivrs
inc
jecxz
add
outsb
jge
push
jbe
pop
cmp
fcoms
or
pop
stos
sti
stos
sbb
mov
inc
in
xlat
repz
es
mov
adc
inc
lret
cmpsl
push
adc
aaa
scas
bound
pop
xchg
pop
leave
xor
push
pop
pop
xchg
test
loopne
xchg
jnp
inc
add
cwtl
pop
scas
hlt
fiaddl
cmp
and
into
sbb
repnz
das
push
ret
sbb
es
xchg
aas
cmp
jns
jmp
in
insb
test
ds
cmpsb
loop
shr
xchg
iret
pop
jns
sub
dec
xor
or
jmp
cmp
scas
jno
sub
or
push
pop
in
popf
mov
mov
outsb
aam
pop
pop
jns
dec
and
insl
or
and
xchg
pop
xlat
adc
aad
clc
imul
pop
pop
in
adc
push
pop
repnz
das
jge
daa
sbb
nop
aaa
ficoms
das
mov
inc
pop
push
add
xlat
xchg
popf
fldt
pop
stc
repnz
mov
addr16
xor
push
pop
pop
stc
repnz
xchg
nop
mov
pop
mov
repnz
movsl
cmpsb
les
pop
dec
sbb
insb
mov
je
inc
lret
mov
xchg
sub
out
lds
mov
cwtl
cld
push
sbb
ret
lock
cmp
lret
dec
sbbb
fadds
int
enter
pop
aam
fldz
lcall
fimuls
sahf
jae
mov
xchg
pop
aad
jns
xchg
loop
in
cmc
pop
push
xor
mov
push
sub
ja
lahf
insb
repz
out
mov
jmp
jge
mov
repnz
mov
cld
repnz
das
dec
fdiv
push
mov
decl
repnz
das
mov
push
mov
mov
cld
mov
xchg
xchg
lcall
pop
jle
in
dec
fimull
decb
push
pop
jle
in
push
lret
add
aaa
xchg
sahf
stc
in
pop
out
lock
ret
fildl
in
pop
jle
adc
mov
ja
aas
dec
xchg
pop
jle
sti
and
in
leave
es
cmp
cmc
mov
in
sbb
push
sub
leave
cmp
repnz
das
jmp
enter
mov
stos
repnz
das
mov
imul
jb
xchg
pop
cmp
fwait
inc
test
xchg
pop
jle
in
push
loopne
ret
push
dec
dec
test
imul
loope
pusha
and
popf
xor
add
in
pop
cmp
mov
js
lods
jl
xchg
mov
xor
sub
mov
iret
outsb
fldt
adc
repnz
test
lahf
lret
incb
and
push
lret
sbb
jecxz
in
sub
push
rcl
test
push
cmp
in
fidivrl
push
pop
sbb
dec
push
mov
pop
jle
push
int3
mov
inc
enter
jg
std
cmp
add
in
pop
jle
sub
lahf
fmull
pop
jle
shll
out
sbb
cmp
xchg
cmp
hlt
cmc
inc
mov
stc
lahf
outsl
mov
xchg
push
stc
in
gs
sbb
mov
lock
enter
add
xchg
sbb
rcr
ds
cltd
or
mov
jns
xchg
mov
jbe
sbb
imul
push
fbld
push
pop
cli
sbb
xor
test
pop
jp
jne
pop
in
push
arpl
pop
inc
loope
sti
cmp
arpl
repnz
fldcw
in
push
pop
jae
jmp
cmp
lcall
jne
and
mov
mov
in
pop
in
push
mov
and
jmp
ja,pt
pop
cmp
popf
sub
xor
mov
xor
xor
jle
in
inc
into
sti
pushf
outsl
mov
jmp
fcmovnbe
jg
in
pop
add
ficoml
lret
dec
mov
xchg
pop
jle
add
int
push
out
jl
xchg
call
pop
or
arpl
daa
bound
jle
in
mov
pop
enter
pop
pop
adc
in
mov
dec
or
xchg
sar
in
pop
roll
pop
clc
pop
aas
push
enter
jns
mov
cmc
int
inc
mov
push
pop
pop
push
stc
notl
mov
mov
in
aaa
out
call
adcl
lret
fmuls
inc
jo
pavgw
pop
inc
xchg
fisubs
mov
push
pop
jns
sbb
xchg
fucom
dec
mov
jns
xor
pushf
or
scas
dec
aas
jecxz
fmul
sub
in
enter
iret
add
pop
mov
pop
lret
das
mov
repz
xor
mov
adc
mov
mov
cltd
and
arpl
mov
and
iret
leave
xchg
and
pop
inc
mov
lret
sbb
adc
inc
popa
cmc
and
lret
das
in
cmp
mov
push
cld
xchg
pusha
jnp
jnp
cmc
icebp
cmp
adc
push
insb
mov
movsl
lahf
add
pushf
adc
mov
gs
pop
adc
cmp
aad
leave
ljmp
dec
push
test
scas
mov
out
insl
xchg
scas
bound
sub
roll
test
das
mov
shll
in
xor
and
adc
adc
lret
rcll
rolb
sti
stos
jnp
inc
repz
lret
and
fistl
lea
inc
push
pop
sahf
mov
outsb
sbb
subl
jnp
in
pop
xor
xchg
push
or
test
sbb
pop
in
push
fsubrp
mov
adc
testb
loope
xchg
push
pop
jns
adc
cmp
xchg
ds
stc
jnp
xchg
sbb
test
iret
stc
pop
stos
add
pop
cwtl
mov
xor
add
adc
mov
sti
fbld
jno
movsl
jns
xchg
push
gs
test
or
ja
popa
sbb
mov
pop
jle
dec
sbb
adc
add
add
test
pop
mov
pop
mov
push
in
inc
lock
test
push
pop
add
jecxz
dec
test
into
xchg
push
pop
jns
lret
jg
stos
inc
xor
in
xor
std
leave
jle
test
fidivrl
lods
daa
push
lock
mov
pop
sub
cmp
pushf
add
sbb
stc
call
jg
jg
lods
cld
repnz
enter
push
sbb
nop
repnz
das
mov
pop
pop
loope
movsb
lret
mov
jnp
dec
mov
fdivs
jns
cmp
jae
mov
jg
sub
pop
or
fimull
xchg
push
pop
jns
push
add
notb
xchg
dec
push
and
xchg
push
pop
jns
xchg
and
mov
add
jns
xchg
lds
addr16
jne
push
jns
xchg
push
aad
movsl
or
pop
jbe
lahf
and
pop
dec
aas
adc
in
test
mov
push
pop
jns
loop
adc
xchg
sarl
clc
pop
aas
push
mov
push
mull
jle
test
inc
xor
add
inc
shll
mov
mov
iret
fisttpl
and
sub
push
cmp
insb
mov
mov
push
jle
jo
insl
xor
push
xor
daa
jle
repnz
sbb
jno
cwtl
enter
sub
jnp
lret
mov
dec
cltd
sti
repnz
pop
mov
sub
mov
lods
dec
xor
mov
jecxz
ljmp
inc
stc
cld
jmp
sub
mov
sub
or
cmpsl
fsubrs
push
inc
dec
ds
jmp
mov
mov
popf
mov
lret
das
inc
jle
dec
in
xor
inc
xchg
das
mov
or
inc
mov
scas
mov
jae
xchg
add
das
xor
mov
pop
mov
adc
jmp
mov
les
lahf
xchg
je
cmpsb
das
mov
mov
sahf
push
and
jnp
xchg
xchg
test
mov
sti
loop
imul
sbb
in
shr
sti
jp
inc
shr
sbb
jmp
popa
addr16
push
pop
jns
lods
aad
es
mov
adc
sbb
in
scas
sahf
lahf
dec
inc
sub
pop
or
or
mov
clc
aas
jle
pop
loopne
xlat
lods
addr16
xchg
xchg
mov
dec
xchg
repnz
xchg
and
in
pop
stc
sti
test
adc
imul
addr16
push
xchg
xor
sbb
into
lret
das
mov
adc
adc
mov
cld
repnz
jnp
dec
xor
das
popa
fstpl
mov
mov
mov
rol
fdivs
push
push
js
fbld
fdivl
xlat
adc
pop
cld
add
mov
jno
cmp
fimull
push
daa
xchg
mov
insb
jmp
les
xor
pop
scas
dec
jnp
add
das
xchg
cld
pop
inc
push
pop
pop
emms
jns
inc
add
int
inc
shrl
pop
jo
or
pop
arpl
cmpsl
bound
inc
mov
dec
aad
popa
mov
xchg
testb
lret
das
mov
in
aas
aas
loope
les
jg
cld
ljmp
inc
mov
adc
inc
pop
jle
in
mov
adc
sub
fs
stc
in
ja
push
lock
ret
test
leave
iret
mov
sub
sub
outsb
stc
repnz
mov
test
pushf
or
pop
in
movsb
cwtl
imul
dec
setae
xchg
pop
jle
sbb
push
fidivrs
movsl
int3
adc
pop
jle
in
mov
xchg
cmpsb
cmp
mov
hlt
out
pop
ja
loope
daa
sub
cld
xlat
xchg
pop
jle
imul
iret
mov
adc
in
ljmp
or
cmpsl
out
and
ret
jno
mov
mov
pop
mov
ds
div
lret
popa
sub
pop
dec
pop
out
mov
inc
scas
mov
fsts
pop
jns
sbb
mov
adc
push
scas
lret
loopne
and
mov
lods
insl
dec
outsb
scas
mov
movsb
sbb
xor
loop
sbb
outsl
pusha
sbb
push
lahf
lds
in
leave
sub
xchg
stos
xchg
push
pop
jle
fwait
mov
pop
sti
test
scas
ja
pop
jle
in
aas
les
add
adc
sbb
cltd
jecxz
push
stc
in
push
mov
cmp
adcb
imul
stc
in
pop
bound
dec
push
in
sbb
pushf
in
pop
jle
push
fidivs
push
dec
cmp
fs
cld
sbb
push
mov
in
xor
xchg
sbb
ds
xor
xchg
sti
push
ret
subb
cld
repnz
sahf
je
pop
mov
imul
inc
stos
into
jg
lods
test
sub
outsl
dec
fucomi
mov
dec
add
stc
mov
ror
ds
jns
mov
test
aas
hlt
xchg
das
pushl
push
inc
xor
jns
sub
pop
xchg
fidivs
dec
xchg
in
jnp
jle
mov
stc
sub
jb
into
xor
cli
and
mov
lahf
movsl
popa
in
adc
repnz
das
mov
or
jecxz
cmp
das
mov
ljmp
cmpsb
addb
jg
sahf
cmpl
scas
cmpsb
dec
movsb
cmc
jg
adc
cmp
and
sbb
in
dec
icebp
inc
xchg
aam
ljmp
aad
mov
nop
ficoms
lcall
aas
xchg
outsl
lock
dec
pop
movsb
xchg
stc
repnz
mov
xchg
jno
inc
lret
sub
pop
or
sbb
xchg
inc
sub
cmp
dec
and
stos
cs
popa
jne
bound
pusha
arpl
jae
push
call
mov
frstor
pop
add
inc
sub
iret
mov
jno
xor
ds
lret
mov
jnp
repz
cld
cmp
or
stc
scas
pop
daa
sub
movsb
and
mov
add
mov
lea
rcll
sub
in
nop
cmp
notb
imul
push
mov
out
xchg
pop
inc
push
scas
mov
inc
jge
xor
push
pop
stc
enter
mulb
sbb
fbld
push
in
jecxz
cmpl
stc
jmp
mov
jl
or
mov
insl
mov
mov
xlat
loope
sbb
repnz
das
xor
out
out
test
cli
aas
mov
in
das
mov
rcrb
xchg
pop
jge
push
scas
inc
xor
addr16
jl
ds
pusha
stc
lods
es
jae
cmp
mov
xor
add
icebp
mov
mov
icebp
mov
lret
das
mov
sub
mov
cld
push
out
xchg
jg
out
imul
cld
bnd
cmp
rolb
and
mov
test
and
xchg
cmpsl
xor
negl
jne
sbb
in
push
xor
jbe
or
pop
in
push
pop
mov
sbb
je
cli
pop
int3
and
cwtl
pop
push
mov
xchg
fstl
fs
mov
mov
and
fwait
test
daa
loope
cs
adc
inc
cld
mov
in
push
pop
or
jg
sahf
pop
xchg
xchg
push
pop
cmpsl
into
je
outsb
test
loop
pop
mov
jns
adc
sub
in
lea
xor
jns
jl
dec
lret
push
push
fucomi
popf
dec
test
repnz
dec
icebp
dec
mov
arpl
scas
add
enter
or
aad
lock
mov
dec
push
jns
cmp
lea
xchg
jne
lret
mov
and
jge
mov
nop
jo
mov
insl
mov
sbb
adc
adc
xchg
or
dec
in
jle
in
je
and
out
pop
in
xchg
outsl
movsb
pop
stc
in
pop
cmp
out
jbe
es
in
pop
jle
repz
or
or
push
pop
je
jae
jge
xchg
lds
scas
jg
pop
cmp
pop
sahf
cmpsl
enter
mov
nop
adc
aas
jns
mov
imul
mov
pop
lods
or
sub
dec
mov
cmpsb
sahf
movl
lret
mov
mov
out
adc
mov
inc
and
jnp
xor
pop
mulb
pop
shl
mov
out
and
aas
add
xor
push
cld
repnz
and
fsubp
mov
xor
lret
das
mov
push
cmp
sub
imul
adcb
jno
lods
retw
das
mov
sub
out
mov
cmp
cmc
enter
mov
cmpsl
push
mov
sub
mov
repz
lret
clc
leave
dec
lret
jb
mov
repnz
int
mov
movsb
int3
xor
sahf
leave
xor
out
xor
xchg
mov
jne
and
sbb
ret
xchg
push
pop
push
enter
mov
xchg
aaa
sub
jge
mov
bound
imul
sbb
and
jns
pop
rorl
push
repnz
das
mov
jb
inc
jmp
lret
das
mov
cltd
jp
daa
sub
sahf
cld
repnz
jno
mov
lods
inc
repnz
stc
in
sarb
ja
inc
pop
mov
repnz
das
lcall
out
jne
movsl
jle
dec
push
sti
lret
das
mov
dec
shr
imul
adc
int
inc
cmp
sbb
push
or
sahf
outsb
xor
enter
lods
lret
jnp
fwait
popa
stc
in
pop
sub
cmp
add
sbb
mov
stos
stos
xchg
jg
jns
std
movsb
lock
adcl
fidivs
adc
pop
adc
out
jle
in
test
xor
mov
add
sbb
loopne
in
and
loopne
ja
xorb
dec
dec
mov
sahf
jge
leave
adc
mov
mov
sub
out
mov
pop
mov
jle
mov
arpl
lret
das
mov
jp
adc
push
xchg
orl
mov
jg
inc
mov
lret
das
jmp
sbb
or
pop
jge
sbb
movsl
xor
cmpsl
nop
das
out
jle
in
xchg
pop
lcall
push
xchg
jl
in
in
sar
sahf
xchg
rcrb
mov
ljmp
push
data16
jnp,pt
test
pop
mov
jmp
push
pop
jns
xchg
mov
rorl
out
adc
enter
mov
pop
jo
lret
add
fldt
insl
mov
insb
push
das
test
xchg
sbb
cwtl
lods
jo
test
push
inc
popa
outsl
jge
cwtl
rclb
xor
frstor
and
add
imul
and
in
rcrb
push
jp
sub
fs
push
call
xor
gs
mov
fwait
cmc
ds
sub
adc
sub
adc
into
dec
lret
mov
pop
cmp
dec
mov
jp
sti
mov
enter
mov
push
js
pop
pop
ds
cmp
sub
sub
loope
out
lods
pop
jns
loopne
sub
mov
pop
std
and
sahf
pop
pop
pop
jno
mov
xor
sub
push
test
in
cmpsb
stos
xchg
popa
jb
inc
aad
test
call
dec
jns
push
lret
cmp
repnz
xchg
jle
inc
jecxz
xchg
sbb
iret
jnp
sarb
in
icebp
fxam
mov
cmp
add
adc
cld
aam
push
adc
jbe
pop
jns
out
jecxz
pop
push
jnp
repnz
push
ficomps
rclb
inc
xor
xchg
push
mov
pop
pop
mov
outsb
addl
loope
pop
add
inc
jo
xchg
push
pop
jns
jo
push
pop
xchg
and
jbe
push
pop
jns
test
inc
mov
cmpsb
out
subb
ljmp
and
int3
testb
es
testl
xchg
push
fiadds
push
push
pop
mov
or
sub
stc
push
pop
jns
mov
gs
xchg
fcmovnu
mov
push
call
xchg
in
sub
jle
pop
jae
dec
push
ficomps
inc
mov
fwait
pop
imul
adc
inc
mov
cmp
popa
loop
ret
mov
and
bound
pop
jns
xchg
fucom
sub
dec
rcrl
movsl
push
push
ja
jns
xchg
push
cmp
push
shrl
cmc
clc
in
push
pop
mov
inc
xchg
pop
arpl
xchg
push
pop
jns
push
xchg
jp
std
push
inc
out
jo
push
pop
jns
orl
push
add
pop
jns
xchg
lret
mov
in
xchg
push
sub
or
push
cli
xlat
scas
jno
lret
enter
add
and
pop
mov
and
lahf
sub
enter
cmp
pop
and
in
pop
bound
xchg
test
in
jg
mov
pop
pop
leave
cs
out
adc
jnp
push
js
mov
rorl
xchg
pop
xchg
das
mov
rcl
mov
into
rol
mov
mov
jmp
repnz
mov
pop
sbb
jae
das
ljmp
call
rcll
jns
sbb
mov
out
sbb
mov
inc
scas
inc
das
mov
into
sbb
xchg
ds
cmp
les
cmp
es
movsb
mov
fbld
jp
and
mov
mov
sub
test
add
inc
sub
scas
mov
add
adcb
fwait
ds
pop
cmp
jnp
mov
inc
adc
lret
ret
inc
xor
inc
ror
in
dec
cld
repnz
das
lea
arpl
jmp
mov
cwtl
decl
repnz
into
leave
mov
pop
stc
movsl
aam
call
cltd
fstpt
jae
sbb
xchg
or
fmuls
loope
cmpsl
jnp
rclb
rol
sub
and
ret
das
mov
bound
mov
adc
mov
xchg
jmp
outsb
pop
hlt
inc
sbb
dec
das
mov
call
xor
out
pop
insb
ss
out
in
stc
repnz
cmp
into
into
dec
adc
jbe
fcmovu
sar
dec
inc
loop
je
push
and
xchg
push
test
mov
mov
jle
mov
gs
lock
sbb
stc
in
jns
xchg
xor
popf
jnp
fists
pop
icebp
jle
in
lods
cmp
jle
iret
jne
ss
test
pop
push
push
pop
xor
cmpsl
inc
xchg
pop
jge
jb
data16
cltd
addr16
cmp
dec
addr16
ds
enter
std
fldl
jmp
or
repnz
das
sbb
jb
mov
xchg
js
lret
das
mov
pusha
mov
pop
sub
pop
cmp
je
lret
push
xchg
inc
rcrl
in
xchg
dec
imul
pop
icebp
inc
and
xchg
push
xor
xchg
les
cmpsl
repnz
xchg
pop
mov
leave
or
cmp
das
mov
pop
shll
mov
inc
xlat
sbb
cld
repnz
fldcw
mov
jle
in
shll
rcll
int3
loop
or
sbb
sahf
pop
mov
arpl
mov
pop
jle
xchg
sbb
inc
dec
das
mov
xchg
push
stc
neg
jl
jmp
popf
jns
adc
aas
mov
imul
xor
stc
idivl
fwait
xchg
call
mov
sbb
pop
sub
hlt
enter
push
orl
xor
in
jno
jmp
stos
frstor
jecxz
inc
fimuls
inc
imul
mov
jmp
jecxz
outsb
push
lret
push
mov
jg
rorb
dec
out
mov
mov
or
hlt
fsts
cltd
rorl
lea
jmp
test
and
pop
jle
idivl
adc
sub
and
jo
andl
loop
xorb
shrl
leave
in
jg
test
aas
scas
ja
mov
xchg
pop
jle
sub
pop
into
adc
out
es
mov
and
xor
xchg
lahf
push
cmpsb
ficompl
cmp
cld
inc
dec
xor
int
enter
xchg
ljmp
pop
or
sti
in
mov
pop
dec
stc
dec
xor
fcoml
das
mov
rcr
adc
aaa
pop
jle
testl
rcl
enter
cld
jnp
xchg
pop
stos
int3
cmp
movsl
mov
add
bound
cwtl
jp
cmp
lea
jne
xchg
pop
cmp
lahf
jge
mov
push
pop
jle
in
sarl
dec
repnz
insl
dec
jle
in
ss
push
sub
mov
insl
mov
xchg
pop
or
clc
push
bound
cmp
in
pop
jle
jno
xchg
aad
xchg
es
cmp
stc
push
dec
scas
mov
cmc
sbb
mov
push
sub
daa
scas
xchg
xor
das
push
loope
jo
enter
inc
sub
lret
das
mov
jo
mov
cmc
lret
das
mov
push
lods
lret
enter
inc
mov
ret
jmp
inc
or
repnz
or
stos
and
push
repnz
das
mov
cld
fwait
lahf
lock
cmp
lahf
sub
mov
scas
call
and
mov
stc
repnz
lahf
scas
jae
sub
cmpsb
push
jp
cmp
lret
sti
js
jbe
inc
mov
scas
mov
out
sub
mov
cmp
mov
adc
sbb
aad
pop
or
popf
stc
cmp
shll
xor
dec
sbb
xchg
ja
lods
xchg
scas
in
adc
das
push
pop
dec
and
aas
pop
out
push
dec
adc
hlt
pop
jns
jmp
ret
add
call
in
push
ja
xor
loopne
and
jge
out
jmp
add
insl
cld
repnz
mov
mov
sahf
sbb
adc
lret
das
mov
sti
inc
lods
push
dec
lahf
push
repnz
jg
shll
jb
leave
into
xlat
pop
mov
mov
jle
pop
push
push
push
jge
jmp
xor
mov
sbb
dec
aam
add
cld
repnz
das
jnp
push
stos
mov
mov
in
jg
pop
mov
jmp
loopne
loope
xchg
pop
jle
stos
add
ror
ljmp
lods
pop
jle
in
push
inc
out
dec
xor
cmp
mov
stc
in
add
or
dec
cmpsl
inc
jbe
fdiv
in
pop
dec
loope
and
push
test
or
orl
sub
repnz
stos
insb
out
sub
fisttps
inc
scas
lea
dec
loop
sti
cmpsl
cli
sbb
sbb
pop
add
fwait
insb
jns
gs
sbb
dec
dec
aaa
test
add
lods
mov
mov
mov
lret
test
out
mov
mov
scas
mov
push
pushf
xchg
mov
fdivl
xchg
push
cmp
shll
pop
xlat
adc
je
incl
out
sbb
push
jecxz
sqrtps
adc
jle
in
popa
xchg
cmpsb
sbb
imul
rcll
test
xor
jge
adc
sti
pop
sbb
lcall
adc
mov
ficomps
cli
adc
imul
pop
jns
xchg
mov
push
xchg
leave
sub
ja
adc
leave
pop
push
insb
sbb
mov
pop
jmp
in
xchg
or
push
iret
sti
fisttpll
lret
das
mov
push
push
dec
or
test
pusha
das
mov
mov
mov
cmp
fldl
lds
scas
xlat
dec
sbbl
das
frstor
mov
repnz
das
mov
out
fldcw
jo
pop
dec
popa
pop
pop
stc
mov
fwait
pop
mov
out
jbe
outsb
decl
stos
nop
or
test
mov
in
lea
lods
sti
mov
fnstcw
in
xchg
jl
xor
add
pop
pop
mov
in
pop
pop
add
ror
xchg
out
inc
divb
push
jg
int3
stc
jg
jl
adc
mov
jb
sub
int
xchg
test
enter
jge
shrl
out
dec
mov
lret
out
jnp
inc
and
fmuls
push
sbb
jns
sub
in
jg
cmp
xchg
or
movb
pop
jle
push
fsub
in
scas
pop
loope
ja,pt
ds
jo
cmp
lods
mov
fists
test
pop
int
xchg
pop
jle
lods
in
cmpsl
mov
dec
inc
mov
imul
push
dec
mov
sbb
pushf
mov
lds
stos
inc
push
push
pop
aaa
xchg
push
stc
xor
cwtl
popf
das
and
xchg
out
ds
pop
hlt
mov
pusha
rcrb
xchg
pop
xchg
push
add
xor
scas
mov
leave
std
and
in
pusha
repz
mov
jle
pushf
inc
das
repnz
mov
insb
mov
mov
push
cli
mov
enter
repz
lret
movsl
jo
xchg
push
out
enter
js
and
pop
jns
lods
mov
and
dec
dec
loop
add
dec
sbb
add
movsb
mov
mov
mov
inc
repz
push
stc
in
jg
inc
pop
ret
mov
mov
test
xchg
test
jae
xor
jns
xchg
ja
in
push
xchg
add
fwait
xchg
das
mov
mov
imul
insl
add
test
pop
xlat
mov
and
pop
mov
in
repnz
sbb
jecxz
or
cld
cs
stos
dec
repnz
sub
sub
lret
das
jmp
xor
scas
gs
adc
mov
movsb
sbb
xor
test
jbe
mov
mov
push
xchg
push
fwait
movsl
xor
inc
pop
jp
push
cmp
movsb
xlat
cwtl
push
pop
jns
dec
call
iret
pop
jb
cwtl
std
daa
sar
in
xchg
repnz
jge
mov
lahf
and
pop
jle
pop
pop
in
inc
enter
outsb
in
xchg
pop
jle
or
fsubrs
pop
lds
push
pop
jle
in
sbb
dec
mov
mov
jp
xchg
pop
pop
mov
jecxz
and
dec
inc
xchg
or
mov
lret
mov
cmp
cmpsl
cltd
xor
xor
out
mov
movsb
xor
out
xlat
ret
xchg
jg
fdivr
push
xchg
hlt
aad
add
sub
ljmp
xchg
leave
mov
and
lods
out
jae
add
xchg
das
mov
sub
and
pusha
push
sub
outsl
sub
inc
mov
outsb
filds
test
pushfw
mov
adc
aas
push
xchg
mov
pop
shlb
scas
mov
xor
adc
xorb
mov
dec
scas
mov
loopne
dec
subl
inc
sbb
cmp
lret
jle
fs
fisubl
and
sbb
pop
stc
mov
fildl
test
testl
mov
stc
pusha
jnp
fdiv
inc
mov
inc
xchg
mov
sahf
test
jae
outsb
mov
or
repnz
das
pop
jle
mov
loope
jp
ss
mov
mov
dec
aas
xchg
lret
das
mov
jbe
test
in
das
mov
dec
dec
add
mov
stc
notl
mov
mov
int
adc
enter
mov
ret
add
hlt
popa
pop
daa
iret
push
flds
popa
test
repnz
xchg
mov
stos
inc
ja
jge
sbb
xchg
ja
ds
add
leave
mov
adc
sbbb
in
dec
rcr
in
shrb
push
scas
repz
cmp
fists
xchg
insl
jb
sbb
fstl
sarb
jbe
and
pop
push
inc
jle
in
pop
loop
scas
btr
jl
hlt
jg
in
mov
sbb
test
xchg
xchg
push
pop
inc
sarb
jns
ja
mov
and
jbe
xor
pop
lcall
scas
cmp
lds
test
mov
mov
js
cmp
mov
pop
insb
hlt
jl
mov
sahf
mov
pop
fwait
outsl
push
nop
xor
daa
lock
fs
mov
cmc
mov
jns
adc
sub
dec
test
xchg
push
sbb
in
fwait
and
mov
andl
lret
or
mov
shr
sub
pop
test
and
cmp
lret
ljmp
adc
pop
pushl
mov
lea
imul
shll
lds
loopne
mov
inc
rcll
aam
pop
insb
lret
inc
cmp
dec
mov
das
mov
cmc
pop
rolb
jne
jg
pop
jae
jp
lret
inc
shrb
mov
dec
out
mov
jne
adc
jae
inc
fisttpll
jg
mov
mov
cld
repnz
das
in
or
lods
call
das
mov
cmp
int
dec
ds
jge
pop
jle
pusha
insl
xor
icebp
arpl
mov
mov
out
notrack
fistpl
jle
in
sarl
insb
daa
pop
xchg
sub
icebp
xchg
mov
aam
mov
mov
hlt
cwtl
stc
sar
xor
jns
call
adc
shrl
push
mov
cmp
outsb
inc
sbb
xchg
stc
stc
in
push
pop
in
xor
lods
xor
pop
cmp
aaa
test
dec
mov
test
stc
in
repnz
xlat
in
fnstcw
jae
inc
loopne
stc
in
pop
nop
mov
addr16
mov
inc
push
stos
dec
filds
push
rol
je
lret
sbb
inc
and
jb
jle
in
xchg
and
add
push
xchg
xor
sti
outsl
xchg
xchg
lcall
inc
outsb
jno
mov
xchg
push
pop
jns
add
push
loop
adc
in
pop
mov
or
adc
sub
nop
push
cmp
mov
iret
ljmp
andb
in
cs
add
adc
push
inc
out
dec
loop
fmulp
in
pop
xlat
inc
push
lret
scas
or
lret
dec
mov
bound
sub
sub
repnz
adc
jo
xchg
jb
inc
cmpb
scas
mov
int3
mov
enter
loop
test
mov
xchg
sbb
filds
out
mov
push
mov
xlat
pop
inc
add
pslld
das
pushl
into
pop
dec
mov
das
mov
inc
fisttps
adc
mov
jmp
loop
and
icebp
data16
insl
lds
cmpsb
or
scas
mov
mov
push
bound
push
jle
stos
xchg
sub
and
cld
repnz
and
ret
sbbl
jge
add
out
sbb
clc
gs
xchg
pop
jle
lock
xor
xchg
out
mov
stc
in
dec
sub
pusha
pushf
je
fs
push
pop
jle
in
inc
xor
sbb
int
cmp
in
test
fstl
ror
xchg
pop
mov
jo
mov
imul
push
jne
out
xchg
push
pop
jns
and
pop
dec
movsl
mov
icebp
jnp
out
call
mov
lret
lret
das
mov
or
lock
nop
and
repnz
or
mov
mov
idivl
lret
das
pop
sub
sbbl
push
jo
lret
das
mov
xchg
ja
gs
jp
in
inc
cmp
inc
imul
fnstcw
in
mov
mov
scas
rclb
call
xchg
pop
jle
icebp
mov
add
fisttpll
inc
jmp
lret
aas
jl
sarb
push
lods
mov
stc
repnz
rcrb
pop
stc
negl
test
mov
ss
in
pop
jle
and
and
bound
jecxz
jl
jg
xor
insb
je
push
hlt
into
pop
pop
jns
popf
rorl
sub
mov
mov
in
push
mov
std
subl
xchg
push
pop
dec
jae
mov
fs
outsl
sub
jb
jne
xchg
aad
filds
pop
pop
in
and
inc
into
inc
xor
jge
xchg
daa
xchg
pop
jge
pushf
shrb
mov
mov
mov
or
insb
xor
jle
in
mov
or
xlat
fwait
int3
push
in
movsb
inc
lea
inc
cmpsb
jns
cmp
xchg
repnz
popa
xor
in
sbb
adc
fsubrl
xchg
bound
idivl
xchg
push
mov
and
sub
adc
pop
out
add
jo
loopne
out
mov
mull
cmp
lret
mov
adc
pop
aam
jbe
repnz
in
sub
in
cmc
ljmp
sub
enter
cmp
scas
mov
push
les
gs
in
arpl
imul
and
mov
mov
hlt
lds
dec
out
sub
jge
cli
in
cmc
xchg
sbb
inc
jmp
inc
ds
je
ret
pop
js
mov
sti
mov
and
mov
ja
dec
lret
mov
push
or
xchg
inc
push
pop
push
jmp
mov
cmpsb
loope
jb
lds
sbb
mov
fsubp
stos
lret
popf
jle
in
fisubrl
and
cmc
push
inc
sbb
xchg
pop
fildll
arpl
aam
aam
dec
and
das
mov
daa
sub
movb
out
test
mov
shrb
test
cmp
jbe
std
sbb
mov
sub
das
and
lods
push
xchg
int
sti
mov
pop
lret
das
mov
cld
push
aad
xlat
mov
fcmovnu
scas
jnp,pt
imul
adc
push
mov
enter
mov
scas
sub
xchg
jp
mov
jecxz
movsw
jns
in
and
flds
out
xor
xchg
pop
jle
sub
cld
nop
inc
push
lea
leave
pop
jle
in
cs
xlat
hlt
sbb
mov
sbb
jle
in
stos
cmp
mov
scas
and
cmp
in
in
pop
pop
pusha
in
fisttpll
scas
daa
movsl
adc
pop
jle
into
mov
int3
hlt
push
out
fs
popf
das
mov
adc
filds
sarl
add
inc
daa
xchg
outsl
mov
lret
pop
xlat
cwtl
iret
bound
xor
lock
fwait
cli
xor
sbb
mov
jo
inc
insl
aaa
lcall
cmp
jne
pop
mov
sbb
fisttpl
add
fdivrl
dec
loopne
inc
test
stos
fldenv
jne,pt
and
in
rorb
mov
dec
movb
imul
push
mov
ljmp
and
pop
jns
cmp
sahf
push
sbb
cmp
xor
sbb
stc
daa
cmp
inc
inc
xchg
das
les
xchg
pop
jle
push
jg
imul
sbb
int
test
jns
test
pop
and
dec
fcmovne
ret
or
jle
in
ljmp
sub
pop
or
in
gs
fsubl
dec
jg
or
sbb
and
lock
fcoms
inc
xchg
push
pop
jns
inc
mov
jae
mov
ret
inc
pop
jns
push
imul
into
cmpsb
jne
sbb
push
fimuls
in
pop
movsl
inc
sub
jae
jle
in
xor
in
mov
push
inc
call
lcall
push
pop
jns
cmp
insb
sbb
xchg
aam
or
push
in
in
or
sub
adc
adc
fists
clc
cmp
shrb
mov
ret
sbb
into
mov
jns
in
inc
xor
stc
in
pop
out
lret
mov
das
fwait
in
pop
jle
sub
mov
xor
dec
sbb
xchg
stos
sti
daa
rorb
or
push
xchg
xchg
sbb
pop
mov
lret
pop
pop
add
cmp
in
ds
hlt
inc
int
or
jns
hlt
shll
dec
lods
or
mov
mov
jmp
xor
pop
in
push
pop
inc
xchg
push
mov
mov
pop
jns
push
push
push
push
mov
int
push
jmp
stc
in
fwait
test
mov
push
xor
mov
in
pop
mov
xchg
rorl
inc
sbb
add
sti
hlt
inc
cmp
stc
in
push
mov
fistl
insb
mov
pop
repnz
das
jge
xor
outsb
loopne
pop
pop
stc
cmp
das
pop
stc
inc
inc
call
jae
mov
repnz
jb
subl
subb
jnp
fists
mov
mov
imul
dec
push
mov
mov
xlat
loopne
das
mov
nop
pop
lret
lods
lret
xchg
cmpsb
das
mov
jne
mov
cmp
movsl
pop
mov
in
test
lret
cmp
sub
repnz
das
cmp
fisubl
cmp
lea
movsl
insl
shl
das
mov
cltd
xor
sub
fs
scas
xor
lea
push
pop
jne
push
repz
dec
push
stc
and
mov
mov
inc
sub
and
lret
jnp
out
std
movsb
out
sub
lret
das
mov
inc
jl
jnp
mov
cmp
xchg
pop
stc
mov
dec
sbb
push
jnp
jns
call
xchg
in
push
pop
dec
xchg
or
push
popf
sub
xchg
push
pop
jns
outsl
cmp
fwait
sbb
pop
push
jno
cld
jnp
enter
daa
mov
in
repnz
das
mov
sti
cmp
xchg
pop
pop
sub
iret
addr16
mov
mov
incb
das
mov
frstor
sub
inc
add
mov
subl
jg
cs
cmp
insb
lods
and
in
push
sbb
xchg
pop
xor
adc
arpl
cmp
sbb
test
dec
int
mov
cli
lods
lds
jge
lret
or
push
mov
sub
insl
outsb
jecxz
sbb
in
pop
dec
in
adc
xchg
subb
fists
iret
in
pop
jle
dec
mov
into
jge
test
shll
ljmp
sbb
cli
in
in
cmpxchg8b
xor
imul
ret
mov
enter
test
and
pop
popa
nop
jno
fisttps
jle
inc
sub
rclb
dec
mov
dec
mov
mov
out
movsb
cld
repnz
mov
inc
dec
fdivrl
push
lods
repnz
das
mov
push
ret
nop
mov
out
das
mov
cmpb
adc
dec
in
test
cmp
outsl
int3
loop
push
xchg
popa
mov
in
pop
mov
fnstsw
je
xchg
push
pop
std
les
mov
mov
lret
das
push
jae
push
push
adc
push
xchg
jg
repnz
mov
sub
xor
mov
pop
jle
in
icebp
divb
sarl
popa
fdivrs
pop
mov
push
pop
or
jmp
or
jns
inc
mov
mov
sub
lcall
cld
test
outsl
lods
and
roll
push
xor
ret
push
nop
mov
lret
push
xor
xchg
mov
xchg
ja
push
sbb
adc
xchg
push
pop
es
sbb
nop
inc
and
stos
loope
inc
shrl
xchg
notl
push
int
ficompl
or
sub
xchg
push
pop
xchg
jp
repz
sar
sub
imul
push
pop
jns
fimull
aaa
in
jb
addr16
mov
outsl
lea
movsl
insl
inc
sahf
test
mulb
mov
lods
mov
dec
sbbl
sbb
and
stc
in
dec
loop
gs
sub
dec
pop
out
arpl
xchg
mov
jle
or
outsb
subb
and
jae
in
fwait
fcmovnb
adc
fcoml
fnstcw
lret
outsb
loopne
push
push
movsb
js
test
shlb
stc
notl
xchg
cmp
in
mov
pop
adc
popf
orb
push
mov
cmp
jns
clc
xlat
lret
fnstcw
mov
popf
jmp
mov
cs
jns
xchg
call
loopne
popa
loope
adcb
in
push
loop
fisttpl
jb
gs
popa
cmp
dec
pop
out
stos
xor
or
int3
cmp
fwait
rcll
es
mov
and
pop
dec
xchg
aad
xor
lret
pop
add
and
push
inc
adc
sub
sub
ret
in
xor
inc
repnz
enter
pop
int3
loope
jne
into
and
push
or
fimull
lea
sub
mov
jns
xchg
push
cmp
loop
fs
sub
filds
pop
aam
jg
int3
cmpsb
cmp
jl
cmp
fisttps
cmp
stc
in
pop
sahf
xchg
xor
loop
fsub
and
repz
pop
jle
clc
jmp
notb
sub
and
mov
pop
adc
dec
out
mov
in
imul
mov
in
das
sub
lods
mov
ljmp
repz
xor
es
push
sbb
and
fidivrs
sub
sti
das
mov
imul
iret
adc
mov
daa
pop
int3
movsl
fcom
push
pop
jns
push
bound
enterw
xchg
in
fsubrl
in
push
push
ja
jae
adc
adc
test
jp
in
push
and
cmp
cmp
push
faddp
clc
out
stos
popa
xlat
mov
pop
jns
xchg
mov
scas
cmp
inc
push
lds
and
push
mov
aas
nop
and
mov
loopne
lds
jns
xchg
ja
push
outsl
inc
add
and
fcmovnu
xchg
pop
sbb
or
scas
xor
out
arpl
dec
enter
xlat
sbb
lea
or
pop
test
xchg
push
pop
jns
stc
dec
xlat
add
cmc
adc
cmp
pop
mov
sbb
fs
rcr
xor
xchg
xor
popf
mov
into
mov
stc
imull
mov
andb
hlt
and
jmp
jl
in
mov
and
imul
rorb
cmc
mov
fcmovnbe
cld
jge
es
fs
cmp
call
jns
sub
mov
fxch
adc
test
je
mov
pusha
mov
out
imul
pop
gs
cmp
lret
jns
pop
push
aas
outsl
popf
mulb
lret
das
mov
adc
sbb
cwtl
and
fcompl
mov
jmp
jmp
adc
mov
arpl
push
mull
or
mov
pop
pop
push
pop
jns
xchg
mov
inc
pop
jns
cwtl
test
fwait
clc
xor
gs
jns
xchg
push
movsl
scas
push
pop
jnp
sub
fistpll
ds
and
adc
jle
notl
push
and
xacquire
xchg
pop
or
enter
cmp
mov
sbb
dec
mov
lret
pop
jge
mov
adc
xchg
fcomps
dec
test
scas
sub
call
inc
nop
xchg
sti
lcall
mov
push
mov
xchg
aaa
add
rorb
dec
addr16
mov
dec
xor
pushf
mov
mov
dec
mov
inc
pop
out
pop
mov
cmp
bound
bound
loope
push
lcall
dec
in
push
pop
xchg
scas
xor
aad
out
out
xchg
push
pop
jns
mov
aaa
nop
subl
ja
cld
inc
jge
in
leave
adcl
pop
jns
pushf
mov
dec
mov
push
lock
adc
mov
les
lods
iret
test
or
aad
pop
push
pop
jns
xlat
sahf
pop
pop
sbb
loope
out
fistpll
shlb
cmpsb
sbb
sbb
lret
lcall
outsl
mov
mov
gs
cld
jge
sub
fwait
mov
adc
xchg
enter
adc
sbbl
mov
lea
insl
inc
mov
lret
movsl
jae
jp
or
mov
shll
fdivs
out
and
lret
in
cmp
mov
dec
arpl
cmp
dec
stc
in
ret
and
and
mov
xchg
notl
push
add
mov
push
push
pop
jns
scas
sbb
pop
or
test
test
or
leave
xchg
shll
mov
jae
cld
mov
mov
setno
pop
fcomps
mov
lods
xchg
stc
cltd
jg
jnp
test
mov
nop
into
sbb
cmp
lret
sub
and
pusha
pop
stos
inc
outsl
lret
mov
jmp
rclb
sub
mov
out
lcall
repnz
xor
in
in
xchg
inc
jl
push
icebp
leave
lret
fxtract
repnz
mov
sub
add
fdivs
sbb
in
dec
sbb
and
ja
stos
pop
xor
lea
sub
arpl
in
cmc
je
lahf
fiadds
out
mov
xor
push
cmp
dec
gs
sbb
lret
sub
inc
cmpsb
sarb
out
jecxz
xor
add
adc
lds
jns
xchg
jns
xchg
dec
add
cmpsl
cmp
jns
xchg
push
lea
gs
jle
bnd
sahf
sbb
ret
mov
pop
jns
xchg
and
jecxz
adc
push
clc
out
faddl
loope
int3
or
pop
mov
jge
jns
lock
xchg
push
pop
imul
add
fadds
ljmp
lret
popa
je
push
push
das
xchg
ss
push
sub
xor
cmpsl
push
mov
sub
jbe
mov
push
cmp
pop
ja
mov
lcall
mov
insb
js
lret
cmc
dec
lret
addr16
into
xchg
push
mov
xor
inc
int3
and
cmp
stc
in
jb
inc
cmp
sbb
repz
arpl
in
pop
popf
push
add
xor
in
pop
jle
jmp
pop
push
aaa
cld
loope
cmp
stc
mov
lods
cmc
arpl
mov
cmp
aaa
pushf
fs
add
test
int
mov
pop
jle
mov
cltd
movsb
daa
mov
cli
insl
clc
dec
ja
sahf
jne
push
faddp
sti
dec
xor
je
sbb
dec
popa
arpl
outsb
stos
mov
and
into
jae
jns
xchg
mov
jae
add
xchg
jg
push
scas
and
inc
bound
cld
sti
imul
mov
lods
xchg
mov
pop
daa
iret
xchg
push
div
lret
rcrl
inc
and
insl
jge
fiadds
call
jecxz
lcall
pop
sahf
jle
cs
sahf
push
sbb
in
push
not
lods
fisubs
fnstsw
push
sbb
xchg
push
pop
xchg
mov
ds
das
xor
dec
mov
mov
jle
in
push
pop
mov
cs
psadbw
xchg
sbb
pxor
cmp
je
cld
test
cmp
enter
xorl
lret
shr
and
in
push
ficoms
fcmovne
std
dec
stos
push
lahf
mov
mov
pop
jns
cmp
or
fdivrs
push
pop
jns
rorb
mov
daa
pusha
pop
xchg
je
xchg
fwait
pusha
mov
dec
movsl
lods
mov
inc
cmp
inc
jle
stc
in
test
cmp
xor
in
pop
jle
add
es
jo
sbb
pop
jle
aam
add
mov
fisttps
scas
dec
sub
fcoml
cli
insb
in
cltd
add
pop
mov
xchg
push
fisubrs
je
add
push
xchg
mov
xchg
push
pop
jns
sub
ja
fs
pusha
jle
test
adc
xchg
je
pop
mov
inc
cmp
shlb
cmp
into
xchg
pop
sbb
xchg
jg
pop
test
in
sti
sub
inc
mov
jbe
and
stc
jg
or
and
test
cli
mov
out
mov
add
mov
lret
mov
cmc
fldenv
repz
sbb
repnz
mov
and
gs
sub
repnz
das
mov
int3
in
pop
adc
stos
fbld
mov
shlb
jmp
stc
in
xchg
jl
call
inc
popl
jl
cmp
lret
das
fisttpll
pop
pop
xlat
and
notl
lahf
into
push
icebp
fimull
adc
xor
daa
mov
jns
inc
and
fbld
shlb
repnz
cmpb
inc
scas
mov
lcall
mov
lret
cmp
leave
aad
xchg
cwtl
pop
cld
repnz
das
sti
sbb
pop
and
jbe
xor
lret
das
mov
adc
add
enter
lret
das
mov
sub
faddl
xor
repnz
cmpl
andl
into
sub
jl
xor
sbb
inc
mov
lret
das
sub
shl
cmpl
mov
add
fimull
xchg
jb
outsl
cmovge
add
xchg
and
jns
sub
cmpsl
lods
inc
rorl
mov
aam
fbld
aaa
jecxz
push
das
mov
cmc
mov
pop
xor
mov
mov
add
sti
mov
faddl
lret
xor
mov
gs
jne
sub
test
dec
mov
scas
mov
loop
jnp
xor
sbb
cmp
jnp
lret
xchg
mov
imul
dec
ds
jg
lods
jmp
faddp
and
mov
xchg
pop
jle
sbb
sub
out
sub
sbbl
sbb
sbb
push
jl
in
loop
xchg
cli
je
insb
pop
and
and
mov
mov
stc
notl
mov
jbe
aam
inc
sub
xchg
pop
jle
add
cmp
push
pop
or
jle
add
jle
addl
lods
mov
sub
clc
or
in
xchg
xchg
mul
xchg
and
fisubs
in
jecxz
mov
mov
sbb
repz
add
cld
repnz
sub
lret
xchg
dec
jmp
dec
pop
mov
sbb
arpl
ds
pop
jle
sti
push
mov
fwait
add
outsb
cmc
cmp
mov
scas
mov
dec
mov
add
inc
push
jmp
or
xchg
jns
repnz
das
ffree
pop
push
arpl
add
push
push
and
mov
and
scas
mov
pop
fisubl
pop
data16
scas
mov
loopne
cmp
fcom
cmp
lds
sub
pusha
cmc
mov
outsl
add
mov
stc
leave
pop
cmp
or
mov
xor
popf
and
mov
pop
lock
in
adc
and
ss
push
mov
xchg
pop
sub
cli
jnp
mov
ds
lahf
add
dec
mov
ret
test
loope
sub
call
fldenv
jns
jg
ret
hlt
into
out
cmp
ljmp
pusha
mov
mov
inc
aam
cmp
ja
and
push
test
or
sarb
repnz
out
mov
pop
xchg
daa
xor
out
imul
pusha
xchg
enter
repnz
das
mov
shl
stos
push
mov
or
push
or
sti
cltd
cwtl
inc
shrb
xchg
jmp
push
bound
cwtl
arpl
sub
sub
pop
inc
fnsave
mov
lret
lock
mov
cli
call
enter
push
mov
ret
sahf
jge
flds
filds
sahf
aas
icebp
mov
ja
push
jns
dec
pop
lret
test
repnz
imul
dec
rclb
ret
fistpll
scas
jnp
imul
sbb
les
inc
or
mov
stos
rdtsc
imul
in
xor
sahf
ss
jge
add
mov
fnstsw
dec
or
jl
rolb
xchg
xchg
sbb
je
in
imul
fnstenv
lahf
bound
xor
pop
xchg
push
adc
pop
jle
in
push
lods
hlt
inc
out
dec
pop
sub
and
dec
adc
gs
push
pop
jns
lcall
mov
nop
lea
push
pop
jns
loope
mov
test
add
jg
and
mov
mov
push
stos
and
lret
pop
in
pop
inc
xchg
push
mov
dec
xchg
xor
inc
fsubrs
sbb
in
pop
daa
jmp
imul
jg
andps
pop
aad
jns
sub
out
jmp
rcl
jae
scas
inc
sti
push
pop
jns
mov
int3
or
test
aam
sub
pusha
stos
enter
add
adc
iret
adcb
stos
testl
lret
dec
jmp
sub
sahf
int
stc
in
jnp
mov
lock
sbb
pop
scas
adc
imul
xchg
adc
sbb
mov
xchg
mov
repnz
jae
sbb
xchg
in
jg
loope
aaa
out
stos
lds
xchg
xchg
pop
jle
push
xchg
mov
leave
js
int3
and
pop
call
les
add
lret
mov
push
in
inc
ds
cs
leave
xchg
das
push
iret
xor
cld
repnz
das
jmp
sbb
push
pop
and
mov
push
jno
xlat
push
cld
add
dec
push
test
scas
sbb
sub
sbb
xchg
push
pop
jns
ret
imul
jp
jmp
and
jns
stc
pop
sbb
fcmovnb
dec
push
or
xchg
inc
movsl
int
mul
push
cli
ret
inc
scas
mov
imul
mov
cld
sti
enter
jge
push
xor
les
test
and
repnz
das
mov
jg
andb
aam
lret
das
mov
inc
sub
out
push
stc
xor
das
mov
sub
cld
or
sub
mov
out
or
fidivrs
dec
fnstcw
das
mov
scas
movsl
test
mov
ret
movsb
mov
jge
add
pop
mov
clc
add
mov
in
push
mov
sti
push
sbbb
jge
lret
insl
mul
mov
js
mov
in
pop
jne
pop
dec
loope
hlt
lods
lds
jl
in
pop
jle
bound
pop
xlat
cmp
out
pop
jle
into
outsb
aaa
ss
cmp
and
cmp
cli
enter
xchg
or
cld
pop
xchg
lock
lret
jnp
jns,pn
test
pop
pop
inc
push
xor
dec
xchg
mov
insl
mov
xor
jne
pushf
xor
inc
dec
dec
arpl
sbb
mull
in
notb
cmp
in
pushf
jnp
mov
out
test
outsl
ja
mov
loopne
fs
mov
jl
jle
sahf
mov
jmp
cmc
push
rcpps
sbb
fists
mov
mov
inc
filds
stc
in
cmpsl
ss
out
ret
test
pop
outsb
mov
fucomp
mov
in
push
cmp
iret
push
mov
fwait
pop
call
bound
cli
inc
inc
mov
das
mov
mov
jne
outsb
or
repnz
xchg
leave
jmp
xor
cmp
movsl
and
sub
xchg
pop
lds
jmp
lock
imul
dec
sub
xchg
pop
jle
mov
cmp
adc
popl
repnz
movsb
sti
jbe
push
call
repnz
inc
scas
out
popf
loopne
scas
aam
adc
cld
repnz
das
xor
cwtl
cmpsb
cmp
repz
hlt
pop
xor
xchg
das
mov
adc
lods
add
std
fisubrl
and
repnz
push
jg
int
adc
in
or
popf
push
mov
mov
jns
xchg
push
movsl
sarl
aaa
sahf
inc
dec
mov
fwait
dec
jnp
inc
pop
jne
pop
fwait
mov
cld
jnp
lret
cli
or
fsts
mov
testb
call
cmc
lea
sbb
adc
inc
cmc
push
and
xor
loop
inc
mov
cmp
lea
test
dec
js
or
in
pop
mov
push
mov
mov
cmpsl
jge
addr16
jl
sub
fs
adc
inc
jmp
pop
les
icebp
xor
mov
push
pop
adc
stc
ja
fmull
inc
cmc
fstpl
lea
adc
in
mov
in
xchg
adc
adc
xchg
push
ficomps
test
ljmp
inc
pop
jns
fwait
sbb
push
adc
inc
fimuls
inc
cmpsb
loop
leave
xlat
xlat
or
jns
cmp
aaa
jno
xchg
es
in
push
mov
sbb
mov
test
xchg
push
pop
dec
pop
inc
dec
ret
push
in
pop
inc
push
pop
jns
dec
lds
inc
inc
push
fistpll
add
shrb
adc
mov
in
mov
stc
push
xchg
mulb
gs
enter
jae
ljmp
fidivrl
or
cwtl
ljmp
push
pop
cs
pop
add
add
in
lea
scas
cld
jb
jmp
bound
clc
scas
mov
gs
cmp
ljmp
cmc
mov
and
push
dec
dec
cmp
std
cmc
xchg
jne
add
rcrb
inc
aaa
xchg
ds
pop
and
mov
jo
jns
xchg
sbb
aas
es
popf
fs
sbb
add
adc
jge
test
addr16
int3
push
imul
inc
jle
out
shl
fwait
sub
and
je
fwait
sub
leave
sbb
mov
lret
rol
mov
xchg
shl
lret
das
ds
mov
add
ret
arpl
and
mov
bound
mov
fists
fidivrl
adc
cmpsb
mov
lods
push
das
mov
sub
pop
jle
in
pop
shll
and
stc
in
popa
test
xchg
fmull
xchg
xchg
pop
fcomps
fnsave
aam
push
ficomps
jmp
icebp
imul
leave
jno
cwtl
dec
sbb
stc
fnstenv
push
lds
mov
xchg
ret
mov
dec
add
addl
xlat
aas
cmp
data16
mov
push
pushf
sbb
xchg
ja
icebp
icebp
and
adc
xchg
push
pop
cs
decl
imulb
pop
cmp
dec
cmp
add
aad
jle
in
inc
loopne
mov
push
inc
lcallw
repnz
pop
xchg
pop
call
imull
add
dec
sub
gs
test
cltd
mov
enter
pop
mov
mov
sahf
or
jmp
mov
lret
xchg
cmp
andl
xlat
cmp
sub
subl
repz
scas
mov
mov
cwtl
dec
or
dec
xchg
es
scas
mov
or
pop
jecxz
lods
dec
pop
xchg
push
add
xchg
sbb
shrb
mov
repz
je
cmpb
icebp
enter
cmp
jno
fdivrs
jg
cld
in
adc
cmp
jmp
mov
stc
mov
cs
push
jl
adc
imul
cld
repnz
das
adc
dec
mov
not
push
andl
enter
inc
cmp
and
xor
loopne
inc
cmp
or
in
pop
xlat
mov
jns
repnz
mov
rcr
icebp
hlt
out
inc
rol
sub
ja
ja
pop
scas
mov
add
cld
sti
dec
adc
mov
pop
mov
outsl
mov
xchg
lret
dec
add
cmp
add
lea
sub
sub
lock
xchg
fldcw
and
lahf
and
lock
adc
lret
int
sbb
mov
and
or
call
sub
inc
scas
jp
sti
lea
fldt
push
leave
mov
push
sub
mov
cld
repnz
hlt
mov
add
sub
clc
sbb
xor
cmc
mov
mov
inc
div
lret
das
mov
jns
gs
ret
lret
das
mov
inc
pop
popf
out
add
adc
repnz
cmp
jns
shl
mov
testl
add
pop
pop
jns
dec
sub
repz
xor
fsubl
jp
mov
push
pop
pushf
pop
cli
mov
sub
ret
out
xchg
jne
jnp
push
pop
jns
sub
sub
and
addb
jnp
fbld
push
cltd
mov
mov
jg
cld
cmpsl
push
jecxz
jb
inc
frstor
js
push
pop
fnstcw
stos
aad
push
in
pop
aaa
inc
roll
adc
and
pand
inc
clc
enter
jge
inc
xchg
push
and
pop
popf
add
call
dec
or
cwtl
pop
faddl
scas
mov
pusha
dec
jb
imul
cli
mov
nop
into
xchg
pusha
test
jno
repnz
into
test
push
or
xchg
sub
cmpb
shl
xor
cmp
in
mov
je
inc
stc
in
pop
xchg
cmp
jmp
inc
aam
mov
jl
push
sub
ds
fwait
or
cmp
or
mov
cmc
ds
das
iret
mov
xorl
lret
das
mov
mov
jmpw
jle
mov
mov
test
mov
shll
outsl
lds
repnz
ficoms
adc
sbbl
lret
int3
sarl
adc
and
or
dec
mov
mov
enter
xchg
push
xor
push
pop
xor
ss
repnz
xchg
popa
mov
xchg
js
sbb
and
xchg
insb
fadds
sub
mov
stc
movsb
in
sbb
stc
in
je
and
mov
and
cltd
pop
scas
stc
in
pop
xchg
int3
stc
out
jbe
push
mov
pop
jle
ret
jmp
loop
fdivr
mov
iret
push
stc
test
mov
ret
fcompl
adc
outsl
data16
in
mov
daa
add
dec
fwait
jbe
xchg
aaa
fs
in
pop
test
movsl
divb
in
pop
jle
adc
mov
sbb
xchg
pop
jle
mov
adc
pop
dec
inc
js
cmpl
pop
cmp
es
int3
testl
lret
das
jnp
adc
ds
negb
jno
or
pop
push
mov
add
pop
rorb
dec
cmp
nop
das
mov
and
add
mov
stc
mov
sarb
out
and
call
mov
scas
imul
inc
ljmp
rol
cmp
pop
push
push
sub
jge
pop
stc
in
ds
sbb
cmpsl
add
addr16
call
jl
jl
mov
arpl
repnz
and
and
sub
fdivl
xchg
jg
cld
fcomps
jne
ss
jle
in
xchg
push
or
mov
push
jns
loope
inc
jmp
mov
data16
push
pop
fdivrl
xorb
jmp
lods
imul
ds
dec
or
dec
cmp
sub
or
cld
jnp
test
xor
pop
rclb
and
cmp
cmpsb
repnz
das
mov
sbb
mov
xchg
jg
stc
push
setge
or
inc
adc
pop
clc
enter
jb
cmp
loopne
sub
mov
sub
repnz
mov
ss
and
dec
adc
cli
xchg
pop
cld
repnz
das
test
jle
cmpsb
jl
int3
into
and
dec
repnz
das
mov
pop
fadds
xchg
pop
cmp
mov
in
jl
cwtl
sbb
jl
in
in
mov
fdivs
hlt
in
xchg
xor
push
dec
and
icebp
lret
aaa
add
lahf
lret
add
xchg
jbe
fdivrp
xor
test
pop
test
mov
shll
ds
int3
cmp
adc
add
pop
inc
das
push
xchg
mov
adc
in
aas
inc
jns
loope
push
jo
mov
in
add
and
xor
xchg
pop
xchg
push
pop
jns
iret
add
enter
inc
movsl
sti
push
pop
jns
pushl
out
and
jnp
inc
ret
or
hlt
push
mov
jmp
and
mov
or
pop
jns
cld
daa
icebp
adc
jg
popaw
icebp
mov
inc
lods
and
xor
pop
cmpsl
pop
enter
add
mov
push
aam
jge
divb
sub
fmul
xlat
jmp
stc
in
pop
pusha
ficoms
mull
push
loop
pop
jle
or
push
xchg
mov
repnz
adc
lcall
loop
inc
decb
movsb
cmp
mov
pop
jle
in
jb
mov
adc
mov
xchg
inc
stc
repnz
xchg
outsb
icebp
push
jg
aam
add
test
and
pop
jl
psubusb
lret
and
data16
sti
inc
xchg
mov
lret
mov
stc
in
or
repz
int3
stc
in
pop
sbb
call
pop
lds
push
dec
jecxz
pop
jle
add
shlb
sbb
mov
gs
test
push
push
cli
pop
mov
rcll
aad
jns
xchg
push
in
mov
push
pushf
fs
daa
in
push
pop
cmc
aaa
pop
or
js
cmp
jg,pn
pop
jns
sub
add
cld
ret
sar
sbb
push
pop
loopne
cmpl
shll
nop
movsl
xchg
test
xchg
push
jge
mov
pop
mov
dec
aad
lea
popf
lods
jnp
enter
sbb
mov
pop
aaa
xchg
jns
pop
cli
add
inc
hlt
bound
test
sbb
mov
xchg
shlb
sub
std
sub
and
sub
test
adc
mov
jno
jae
notl
and
out
sahf
test
cmp
jo
ljmp
das
ds
and
push
mov
sbb
das
mov
orb
imul
sbb
cld
repnz
or
jmp
cld
addr16
mov
leave
inc
cmp
fsubr
jle
mov
dec
enter
lds
or
repz
imull
fwait
push
das
mov
xchg
cmp
loop
pop
je
cmp
pop
jge
lret
inc
adc
cmp
gs
in
pop
and
test
mov
xlat
jb
in
pop
jle
mov
add
iret
xchg
pop
jle
sub
sub
repz
int3
add
cs
pop
jle
in
lea
add
push
push
fadds
cld
sti
enter
push
pop
pop
push
jne
sti
lretw
cmc
enter
sbb
div
sti
mov
sub
jle
hlt
xor
cld
stos
or
push
xor
decl
push
fidivrs
add
cli
js
loopne
inc
jae
push
pop
jns
test
push
cmc
dec
test
lea
jns
ja
pop
leave
add
adc
mov
into
ret
inc
inc
cmp
popf
dec
js
add
xor
sub
and
sub
sahf
loop
xchg
push
pop
jns
dec
pop
and
inc
movsb
or
inc
push
pop
jns
fs
loope,pt
mov
mov
fs
dec
xor
gs
dec
jge
xchg
or
sahf
lods
fmull
add
aaa
mov
mov
push
and
or
test
sbb
imul
sarb
lret
lock
lret
in
pop
jb
fs
lret
das
jg
push
stos
jecxz
lret
test
fisttpl
cld
ja
jne
push
in
or
int3
mov
imul
es
mov
das
mov
inc
and
lods
mov
cmp
or
push
sbb
adc
mov
int3
sahf
push
cmc
fsts
mov
in
ja
fsubl
dec
adc
xchg
xchg
jg
pop
dec
mov
lds
jmp
in
jp
aas
or
pop
scas
imul
stc
in
fmull
pusha
sbbl
das
adc
repnz
pop
add
inc
or
test
enter
cmc
add
mov
sahf
mov
enter
add
in
mov
es
out
add
mov
mov
pop
pop
mov
sub
scas
mov
lret
inc
daa
aas
dec
ljmp
mov
or
leave
and
sub
push
repnz
xchg
sub
or
cltd
andb
sbb
push
lret
das
mov
push
int
jnp
out
sub
cld
repnz
aam
xchg
or
mov
mov
incb
cmp
jmp
mov
mov
addr16
pop
jns
roll
nop
cs
outsb
orl
jns
xchg
push
lret
pusha
stc
cmc
cmp
ljmp
dec
xchg
popa
pop
es
jno
scas
mov
data16
pop
xchg
ja
addr16
push
cli
enter
xchg
in
sub
inc
fmull
cmpsb
xchg
dec
dec
mov
imul
mov
icebp
aas
dec
mov
test
mov
adc
outsl
in
pop
jle
popa
cli
or
rorl
scas
ss
jl
aad
inc
clc
pop
push
jbe
sub
mov
sbb
loopne
daa
push
nop
enter
xor
and
inc
adc
cmp
mov
xor
fnstenv
insb
outsb
lds
popf
xor
push
mov
cmpsb
fcmove
popa
fs
push
push
jmp
or
jl
stc
test
gs
cmp
push
jns
xchg
push
dec
cli
fbstp
in
push
pop
xor
mov
cmp
add
add
loopne
dec
imul
lret
ret
or
sahf
popf
pop
popa
cld
push
mov
xchg
cwtl
mov
lcall
xor
sub
outsl
sub
fnsave
repnz
int3
int3
popa
dec
scas
add
outsl
jns
lea
shr
int
sbb
sbb
jne
out
sub
icebp
aas
cmc
inc
pop
orb
sub
vprotw
cmpsl
inc
fists
repnz
sbb
push
inc
lret
lret
mov
out
aam
and
jne
cmc
add
mov
sbb
mov
xchg
aaa
mov
cmp
mov
push
pop
jns
mov
ret
cmp
or
rcrl
ja
xchg
jae
xlat
iret
jne
sbb
xor
mov
jl
or
inc
outsb
testl
mov
rorl
jle
ja
iret
xor
dec
in
jnp
lret
stc
in
dec
out
movb
and
mov
and
loopne
outsb
outsl
xchg
stos
mov
test
mov
stc
pop
add
dec
sub
cli
enter
sbb
sbb
fimuls
arpl
xor
repnz
sub
push
pop
jns
cli
mov
in
movsl
lock
in
push
pop
or
popf
sbb
push
stc
negl
roll
push
adc
add
xchg
jg
xor
sub
lea
xor
xchg
xchg
pop
jle
mov
pop
nop
mov
jge
enter
fwait
xor
call
icebp
adc
xchg
pop
cmp
sbb
cmpsb
outsb
and
inc
push
pop
aaa
mov
orb
cld
repnz
mov
push
and
xchg
cmp
cld
repnz
das
popf
dec
jp
cs
mov
pop
add
das
mov
out
iret
test
arpl
fstpt
pop
enter
in
pop
sbb
pop
jle
movsb
inc
in
scas
cmp
jb
pop
adc
push
bound
stc
fstps
dec
push
movl
scas
pushf
mov
call
mov
mov
pop
jns
jp
xor
shl
xchg
xchg
aaa
lret
jecxz
std
push
rclb
and
adc
jnp
stos
cs
lret
add
push
imul
dec
sub
fwait
and
out
xchg
notl
outsl
fwait
icebp
xchg
jnp
lret
pop
cli
insb
fldcw
movsb
ds
and
aaa
mov
sarb
inc
pslld
inc
movsb
aas
int3
jp
scas
or
sarb
push
fcmovne
inc
movsl
shl
das
dec
push
in
jbe
out
mov
sti
jb
cmc
fidivrs
pop
mov
push
push
repz
jl
mov
dec
sub
ss
push
dec
mov
rclb
pop
aaa
add
aad
xchg
push
inc
shlb
mov
sub
xor
inc
lods
in
lock
jl
adc
adc
jae
inc
cld
in
cmpsl
xorb
ret
adc
mov
lret
cld
jb
aas
mov
mov
mov
jle
repnz
shlb
sub
inc
lahf
repnz
adc
enter
sub
test
scas
mov
jle
pop
ret
repnz
test
mov
lock
scas
test
stos
inc
mov
repnz
pop
mov
int3
push
call
or
stc
cmp
addr16
stos
mov
mov
shlb
cld
inc
mov
in
lret
cmp
into
outsl
ss
aam
xlat
sbb
rcll
xchg
das
mov
sub
loop
or
mov
cmp
dec
out
pop
rolb
lret
mov
test
jne
rcrb
or
push
xchg
das
mov
mov
push
scas
and
jns
test
mov
in
and
stc
notl
scas
movb
ds
nop
xchg
pop
jle
mov
adc
or
shlb
add
jne
inc
push
hlt
cltd
push
xchg
lock
sbb
pusha
cld
repz
jns
xchg
push
dec
adc
rorb
jbe,pn
or
pop
mov
movsb
out
xor
enter
mov
jns
stos
je
testb
sub
and
out
imul
sti
int
aam
js
pop
jns
ljmp
aam
insl
pop
enter
xchg
push
into
pop
pop
lds
bound
mov
and
adc
xchg
adc
pop
jle
testl
lcall
push
jmp
stc
in
loopne
sub
sub
mov
je
in
pop
push
test
sub
daa
imul
das
lcall
test
xchg
scas
and
loopne
jg
nop
mov
push
jle
in
sbb
or
mov
stc
in
pop
aam
rcll
pop
lret
push
push
mov
jle
push
cmc
push
loope
aad
mov
loope
xchg
pop
jle
mov
fs
loopne
and
lcall
add
pusha
loopne
mov
push
out
je
adc
in
mov
jmp
cmpl
ret
sahf
mov
and
pop
arpl
adc
mov
mov
xchg
sub
inc
je
mov
lret
ljmp
test
inc
aam
jmp
jae
pusha
sbb
nop
sub
mov
xchg
scas
mov
cmp
lods
lds
jae
repnz
sbb
xchg
mov
dec
cmc
call
sbb
and
lret
mov
in
dec
adc
jmp
shlb
imulb
mov
movsb
dec
ljmp
ss
jmp
into
insl
insb
inc
repnz
das
mov
add
ljmp
sbb
cmp
popf
pop
sti
mov
bnd
mov
xchg
jbe
fwait
pop
inc
sbb
cld
repnz
clc
mov
or
in
lea
std
int3
hlt
popa
fisubs
in
and
jns
dec
push
sub
andb
push
push
cli
enter
imul
loop
nop
das
frstor
je
rol
jno
mov
repnz
mov
and
gs
add
add
cmp
sub
pop
ds
xor
out
pop
cmp
sub
rol
mov
pop
cmp
pop
lods
js
xchg
add
jbe
xchg
pop
loope
adc
insb
xor
mov
movsl
xor
stos
repnz
adc
lds
ljmp
mov
and
sub
jg
repnz
daa
jge
sub
aam
das
call
jno
xchg
ja
clc
cmp
add
lds
push
mov
xchg
icebp
fnstenv
adc
loopne
pop
jns
lods
jnp
mov
jne
cwtl
aad
push
test
repnz
xchg
das
add
pop
jle
jb
icebp
xchg
dec
mov
lock
sar
enter
push
gs
and
sarl
push
loop
roll
and
push
pop
mov
out
mov
js
jge
in
aaa
hlt
cld
mov
cmp
cmp
xchg
pop
jge
mov
repz
and
inc
jle
lahf
cltd
out
outsl
bound
and
sub
mov
out
jp
jnp
xchg
into
pusha
mov
sbb
pop
test
out
xchg
mov
mov
stc
shr
cmp
in
and
sbb
rorb
data16
pop
jns
xchg
xchg
inc
cmp
dec
hlt
pop
sub
in
and
mov
mov
mov
mov
pop
jle
cld
xchg
add
ss
sub
negb
stc
in
xchg
cmpsl
jb
stos
xchg
imul
stc
in
inc
das
jmp
orb
stc
in
pop
movsl
sarb
jecxz
inc
pop
push
jae
sahf
mov
pop
jae
andl
pop
jle
mov
xchg
lret
mov
out
mov
push
iret
jae
and
scas
lret
sub
mov
testl
test
lods
xchg
cmp
cmp
sub
das
push
int3
inc
das
mov
fdivrl
push
or
dec
jl
cld
repnz
mov
fidivs
in
mov
cltd
sbb
jmp
mov
mov
repnz
jg
in
test
lods
fprem1
mov
lret
das
mov
fmuls
jge
push
inc
fcomps
dec
mov
fisubrl
fcoms
sbb
mov
daa
int3
push
cmp
int
cs
jg
enter
mov
cs
pop
add
cld
repnz
das
jl
xor
dec
data16
sbb
repnz
das
mov
adc
cmpsb
jp
adc
das
ds
rcll
sbb
pop
mov
adc
cmp
pop
stc
repnz
cmp
push
sbb
js
filds
call
add
ja
in
dec
ret
push
cmp
icebp
scas
add
sub
mov
pusha
jnp
out
shr
mov
sub
or
fstl
adc
lret
pop
dec
mov
lret
sub
lret
xchg
hlt
and
scas
mov
add
repnz
and
jb
imul
mov
inc
js
push
out
cmpsl
sub
inc
add
mov
lret
sub
repnz
in
jle
xor
jb
pop
or
push
dec
andl
xchg
ds
xchg
gs
jle
in
inc
xchg
iret
and
xchg
icebp
loope
pop
cmp
adc
xor
xor
add
jle
in
or
cs
loop
and
mov
fldl
xchg
pop
enter
mov
fs
into
pop
jnp
and
mov
sbb
aas
std
mov
out
and
scas
inc
lea
addr16
out
addr16
mov
add
dec
aad
sub
repz
lret
pop
xchg
and
mov
sti
mov
xchg
js
jno
and
jl
ds
jl
in
push
daa
sbb
inc
ret
xchg
js
stc
in
dec
push
xchg
repnz
push
in
in
out
stc
in
pop
insl
or
lret
inc
mov
mov
add
inc
jle
mov
fimuls
pop
in
repz
add
jmp
stc
in
pop
mov
jmp
mov
sub
fsub
xchg
pop
jle
xorl
xchg
xchg
ja
inc
xchg
pop
jle
js
inc
cmp
test
ss
in
lods
jg
mov
movsb
fisttpll
cld
repnz
mov
clc
mov
add
adc
mov
das
mov
mov
bswap
jge
sbb
filds
cld
fistl
insb
dec
lret
mov
jl
in
xor
jo
insl
pop
adc
outsl
cld
repnz
mov
shrb
xchg
dec
stos
icebp
xchg
das
mov
lcall
lcall
mov
dec
cmpsl
les
jl
repnz
das
outsl
xchg
test
adc
cs
push
lods
hlt
cmp
lret
das
mov
and
inc
sub
das
mov
shll
sti
fisubs
mov
jnp
imul
push
sub
lret
jae
stc
repnz
sti
jmp
pushf
ss
sti
enter
sub
mov
xor
or
xchg
je
mov
cld
repnz
dec
pop
insb
cwtl
xchg
scas
mov
das
mov
sbb
cmp
fdivrs
pop
stc
dec
xchg
out
je
add
ja
outsl
scas
mov
daa
iret
xchg
and
mov
ret
enter
sbb
inc
aas
pop
js
mov
pop
bound
push
sub
pop
js
mov
mov
mov
in
in
mov
inc
add
in
aaa
add
ja
iret
imul
fs
clc
adc
hlt
xchg
das
dec
sub
ja
daa
dec
jge
in
loop
xchg
popf
fcoml
sub
int
jo
les
rolb
popf
ficoms
pop
jns
cmp
cmc
das
inc
mov
push
jns
xchg
push
pop
popa
cmp
leave
out
aas
xchg
jg
pop
adc
lods
jge
inc
inc
idivl
imul
repnz
in
mov
xchg
mov
jns
xchg
aaa
xor
xchg
rorl
or
enter
cmp
in
push
pop
jecxz
jecxz
js
cmc
lret
and
pop
jns
jae
fnsave
xabort
aam
sub
out
cmp
pop
mulb
pop
popf
inc
mov
popa
pop
jns
jge
jp
jbe
daa
out
fwait
sub
in
push
das
sub
pushf
cmc
fbld
ds
pop
pop
in
adcl
aaa
das
dec
insb
in
aaa
loop
mov
repz
movsl
pop
push
adc
dec
outsl
cmpsl
mov
mov
inc
scas
sbb
xor
mov
jge
adc
xchg
repnz
cmp
lret
fwait
push
adc
movsl
pop
jns
and
lock
lahf
test
push
icebp
hlt
popf
push
lock
mov
xchg
fiaddl
add
mov
pop
imul
ljmp
dec
mov
pop
mov
add
xchg
sub
lds
add
jle
ja
inc
xor
mov
div
sbb
fs
dec
movsb
inc
ror
fs
in
xor
sbb
stc
push
in
mov
pop
jns
movsb
or
pop
sub
fidivrl
movsb
ret
and
and
xchg
and
outsl
dec
in
and
push
insl
loope
xchg
sbb
jbe
push
pop
jns
nop
in
cmp
adc
clc
dec
in
dec
incl
push
dec
xchg
enter
pop
push
cli
xlat
test
test
loopne
shrl
mov
ja
cs
mov
lret
shlb
out
adc
adc
daa
xchg
aaa
mov
test
dec
sarb
jge
in
add
adc
lds
out
xchg
pop
in
movsb
ret
push
cltd
mov
imul
das
mov
xchg
add
sahf
inc
ljmp
mov
jno
inc
push
loope
ds
ret
sbb
sub
popf
mov
aam
dec
inc
lcall
repnz
das
jbe
cli
scas
lret
lds
jb
lret
das
mov
call
decb
and
mov
cltd
pop
or
push
push
stc
in
pop
in
inc
dec
dec
cs
and
jg
push
dec
int
imul
es
sub
das
lcall
stc
mov
ss
adc
aam
dec
leave
xchg
mov
clc
dec
nop
mov
mov
pop
xor
mov
in
and
or
repnz
jg
movsb
movsl
movsb
lods
ds
jp
xchg
mov
push
mov
ss
add
std
cld
jae
add
xchg
sahf
and
inc
push
scas
outsb
fldenv
mov
cmp
push
pop
enter
lods
mov
mov
arpl
dec
aam
xlat
or
xchg
in
outsb
sub
jo
cs
and
xchg
jg
std
xor
das
jge
mov
dec
pop
cmp
and
add
imul
pop
aad
inc
pop
jle
in
incb
xor
sub
pop
ds
fs
fldl
inc
fcompl
bound
jge
out
test
pop
add
and
inc
cmp
sub
cmp
pop
mov
push
lods
xor
fdivrp
test
xlat
fadds
movsl
sarl
lock
cmp
sub
jmp
ss
sbb
in
pop
sbb
dec
mov
fisttpl
inc
pusha
sbb
mov
fistps
cmp
dec
lret
das
ds
or
ds
movsb
fisttpll
cmp
fptan
repnz
das
jge
dec
shr
rorb
sbb
fs
cmp
jl,pn
daa
adc
int
mov
in
pop
test
es
jns
inc
hlt
subl
into
fld
mov
lret
mov
dec
popa
enter
ja
ds
aam
pop
jne
sti
imul
adc
sarl
fists
aas
pop
jns
xchg
pusha
int
inc
mov
ss
xchg
push
popf
fdivp
mov
nop
pop
cwtl
in
push
pop
out
add
sbb
shrb
jns
adc
inc
outsl
or
xlat
xor
xchg
add
sbb
jg
fbld
in
add
lods
pop
xchg
jg
stc
adc
dec
mov
pop
inc
xchg
fwait
dec
jbe
jl
in
jns
cmp
fisttpl
pop
into
andl
xchg
aas
stos
popf
clc
ficomps
xor
daa
pop
jle
mov
test
push
clc
enter
jge
mov
add
addb
mov
jg
js
das
stos
and
enter
cmpsb
mov
jns
loope
clc
fistps
sti
int
in
inc
push
jb
inc
mov
add
ret
lret
iret
repnz
dec
rcrb
scas
in
mov
rorb
testl
cmp
icebp
pop
clc
dec
cwtl
mov
lret
add
jb
aaa
jbe
mov
lret
sbb
add
adc
adc
lahf
push
fiadds
js
in
mov
outsb
jecxz
pop
jns
xchg
in
cmp
cwtl
imul
xor
xchg
push
ss
out
into
jno
lahf
fbld
arpl
mov
pop
and
sub
pop
cmpsb
inc
pop
jns
mov
lea
js
add
lods
lods
out
addr16
xsaveopt
xlat
sti
xchg
push
pop
jns
cmp
and
mov
outsb
pavgw
xchg
fsubr
xchg
aas
xchg
stos
fbld
das
mov
and
push
stos
repz
xor
inc
mov
bswap
idiv
cmp
add
xchg
ja
mov
xor
pop
xchg
push
pop
jns
popf
pusha
ret
push
std
lock
jns
movsl
xor
xor
push
popa
popf
shr
stc
notl
add
clc
dec
xor
enter
mov
xor
aad
xor
inc
clc
movsb
fisubs
icebp
test
jns
xchg
aad
xchg
sahf
mov
fmul
mov
rol
xchg
push
add
xchg
push
ficoms
and
sbb
jae
pop
jle
divl
loope
jl
movsb
fldl
push
repz
gs
jns
jecxz
jnp
out
imul
js
repnz
pop
stc
mov
cmp
data16
adc
call
xor
cs
push
in
movsb
addr16
mov
incb
outsl
mov
push
adc
pop
js
mov
iret
into
push
inc
jne
popa
xchg
and
mov
jg
pop
jns
cmpsb
sahf
in
mov
mov
pop
inc
test
mov
ret
dec
xchg
out
dec
jl
sbb
xor
in
pop
test
push
sbb
add
aam
mov
xchg
jl
jp
jbe
insb
mov
lods
jns
xchg
push
xchg
pop
jne
xor
cmp
push
pop
pushf
adcb
aad
daa
mov
xchg
push
pop
jns
xor
xchg
jae
lods
in
mov
cmp
pop
jns
and
enter
xlat
out
sbb
and
stc
in
jg
jle
aas
sbb
shll
or
jle
pop
loopne
mov
outsb
cltd
jl
sbb
or
and
xor
lods
pop
jle
in
test
pop
psubusb
inc
push
mov
jno
xor
je
cmp
sar
push
rorb
decb
test
cltd
fldl
scas
mov
outsl
std
cmp
sbb
lret
test
mov
xor
jge
sub
pop
dec
and
ds
jge
pop
mov
repnz
arpl
jns
loopne
lret
aas
not
cld
push
mov
mov
mov
cmp
jge
vsqrtpd
das
pop
jp
or
push
pop
jns
inc
out
rcll
xchg
in
negb
enter
into
movb
xchg
push
lods
in
data16
dec
insl
lea
push
pop
jns
xchg
and
lret
or
cmp
xchg
out
int
mov
fs
stos
pusha
xchg
lods
mov
stos
sbb
or
decl
mov
xchg
pop
jle
ret
push
pop
hlt
cmc
lods
jns
push
ror
je
or
mov
cmp
inc
jo
sbb
push
roll
or
sub
lock
loope
pop
add
stc
in
sbbl
xor
sub
in
hlt
mov
divl
jbe
jl
in
test
pusha
dec
testl
push
pop
jns
inc
scas
xorl
dec
sarl
sub
jg
pusha
xor
cwtl
in
mov
jge
in
pop
jo
add
inc
or
pop
sti
lods
idivb
push
leave
xchg
pop
jle
adc
out
lds
mov
notl
mov
mov
pop
inc
in
push
movsb
jge
lret
mov
mov
jmp
pop
fbld
insl
mov
fists
lods
fsubrl
cmp
lret
mov
cwtl
jle
pop
or
jp
iret
shll
cld
dec
movb
jns
xchg
insb
fimuls
inc
sub
std
sub
xchg
push
icebp
dec
imulb
shll
insb
lret
xchg
gs
shlb
sub
lret
pop
arpl
fwait
sarb
scas
xchg
push
adc
push
aaa
nop
push
pop
jns
add
mov
aaa
mov
pop
jns
xchg
and
mov
or
popf
daa
fs
push
cld
mov
out
and
push
movsl
cmpsb
jo
in
xor
shlb
lcall
or
dec
or
gs
ds
out
mov
push
mov
mov
push
ficomps
add
sub
dec
push
push
jns
xchg
imul
lock
out
lret
das
jle
mov
out
xor
stos
das
mov
test
xchg
inc
add
test
jno
imul
fldenv
push
fisubrs
orl
jecxz
imul
sbb
adc
loope
arpl
pop
loop
dec
loop
lret
mov
lock
dec
push
fcoml
cmp
lods
sbb
and
mov
mov
lea
scas
mov
lcall
leave
scas
mov
mov
xchg
jle
add
xchg
mov
cld
scas
mov
xor
test
add
dec
adc
test
inc
scas
and
scas
adc
push
sub
push
mov
cmpb
jge
sarl
stos
xor
enter
aas
subb
ja
lds
xchg
hlt
movaps
xlat
sub
imul
ljmp
in
mov
push
jns
inc
jle
or
stc
into
imul
cld
repnz
mov
mov
mov
and
inc
test
mov
lret
movsl
dec
dec
or
out
cli
push
adc
in
jae
test
mov
jg
stc
repnz
data16
add
jle
jmp
clc
enter
xlat
pop
ret
int3
filds
fimuls
cmp
inc
add
inc
outsb
scas
jge
cmp
popa
push
pop
dec
imull
mov
lahf
nop
dec
imul
aad
push
ficoms
shrb
ljmp
pop
jns
in
mov
mov
xor
jge
in
and
cltd
dec
inc
mov
pop
jmp
jle
arpl
daa
mov
push
stc
mov
insb
mov
mov
dec
jl
lret
outsb
rcrl
pop
shl
sbb
lret
dec
in
fisubl
dec
cwtl
mov
mov
decb
fcom
mov
scas
inc
pop
inc
sbb
inc
sub
cmp
pop
push
or
inc
push
clc
sbb
outsb
and
lods
mov
cmpsb
xlat
pusha
push
xor
xor
repnz
mov
fwait
jge
pop
mov
pop
xchg
and
sub
inc
call
cmpsb
fs
jle
in
inc
jl
push
jecxz
or
pop
repz
xor
jb
jae
lcall
jg
stc
in
leave
arpl
test
pop
outsb
popf
scas
mov
xchg
pop
lods
mov
sub
inc
adc
adc
jmp
in
push
jo
stc
in
jg
mov
pop
std
incl
ss
lret
mov
sahf
ret
or
jp
xchg
cld
repnz
jmp
fimuls
popa
mov
repnz
xchg
test
ss
jg
das
mov
in
inc
inc
loop
stos
pop
sub
mov
movsl
cs
sbb
xchg
pop
jle
cmc
jb
mov
sbb
push
xchg
pop
jle
bound
mov
pop
and
stc
in
pop
pop
add
mov
xchg
pop
fistpl
out
mov
out
dec
gs
lods
push
mov
shlb
ljmp
and
or
aad
fucomi
jle
in
in
add
test
mov
sbb
iret
mov
arpl
in
pop
jle
test
aam
imul
jg
xor
jae
jno
xchg
xchg
or
sub
adc
xchg
pop
jle
and
jo
rep
jl
jne
addr16
jl
xor
popf
out
imul
int
jns
sub
dec
movsl
sub
inc
decb
xchg
push
and
push
sti
pop
xor
xor
mov
push
pop
push
pop
into
pop
dec
sub
pop
mov
stc
in
push
xchg
in
pop
dec
dec
cwtl
aas
lock
cmp
in
and
ljmp
in
addr16
dec
cld
mov
sti
into
jns
inc
das
ds
ficoml
dec
inc
mov
movsb
mov
fsubl
and
sbb
sbb
repnz
inc
bound
sub
xchg
adc
and
adc
fdivp
fsts
aas
sahf
mov
sub
repnz
les
jae
mov
das
ds
xchg
loopne
in
xor
stos
movsl
sbb
stc
notl
in
cmp
and
js
movsb
jle
in
or
sahf
adc
aam
std
lret
stc
in
pop
mov
dec
sub
cmp
mov
or
jnp
xor
lock
std
stos
cmpsl
idivl
aam
add
insl
mov
test
cli
jle
jge
cmpsb
dec
dec
mov
icebp
jbe
mov
in
add
xchg
ja
push
push
sub
mov
inc
sbb
in
pop
and
loope
repnz
sbb
std
scas
pusha
xlat
jo
add
sub
push
dec
push
scas
fdiv
xchg
and
inc
scas
mov
mov
mov
pop
pop
pop
data16
jns
sbb
mov
sub
in
push
pop
fucomi
in
jns
lret
insb
adc
jns
pop
repz
and
pop
sahf
lock
mov
jnp
xchg
mov
je
je
jnp
aaa
fdivp
lret
das
mov
mul
sub
mov
cld
pop
mov
xor
imul
idivl
pop
jle
in
cmp
sarb
add
leave
or
in
mov
js
cmp
stc
in
pop
mov
jmp
addr16
insl
rolb
xchg
pop
jle
cmpsb
call
lret
cmp
je
mov
lahf
inc
xor
repz
lds
lret
cmp
push
mov
pop
nop
sbbb
stc
repnz
das
outsl
sbb
push
lret
ret
fisubl
in
jg
fistpll
push
lds
pop
lahf
sahf
xchg
pop
jle
lock
sarb
scas
filds
jl
in
or
jne,pt
or
xor
out
mov
cwtl
xchg
cmp
loop
mov
jns
mov
xlat
push
jp
aam
ja
jg
push
pop
jns
xchg
gs
nop
mov
push
sbb
push
dec
ret
cmpl
in
push
pop
mov
push
mov
mov
pop
jns
sub
xor
xor
insl
outsl
jge
in
mov
hlt
xor
pop
jmp
pop
popa
mov
out
movl
lea
mov
insb
push
and
mov
cltd
xor
sbb
fistpll
stc
repnz
rcll
push
lods
push
dec
sub
cld
jnp
xchg
leave
jnp
adc
stos
jge
xchg
xor
repnz
int3
lret
mov
mov
cmp
mov
cmp
pop
ror
das
mov
or
test
aam
inc
cmp
mov
jmp
mov
cmp
adc
pop
out
ds
xchg
fdivr
lds
loop
cmp
fwait
sbb
mov
les
or
inc
in
sub
lret
mov
insl
push
fmulp
jp
iret
daa
mov
fistps
xchg
ds
cmp
mov
xchg
push
in
push
es
testl
and
dec
in
push
pop
je
jl
jns
fmull
and
jns
les
add
popa
mov
movsl
aad
jo
rcll
movsb
inc
scas
pop
fidivrl
push
pop
jns
push
sbb
int
test
es
jns
xchg
mov
add
xor
or
clc
addr16
xlat
fs
push
mov
jmp
adc
movsb
lds
xchg
fnstsw
lock
jno
daa
push
je
in
das
scas
jge
xor
imul
sub
arpl
test
jle
adc
mov
or
cmp
je
gs
call
pop
and
pushl
jbe
leave
insb
in
push
pop
pushf
aad
sub
mov
inc
sbb
fcmovb
aad
sub
or
xor
scas
test
mov
lahf
int3
inc
or
js
lret
and
fsts
int3
pop
xchg
imul
jo
movsl
and
xchg
aaa
xchg
fnstsw
repnz
repnz
mov
mull
faddl
enter
push
imul
fmulp
xchg
mov
nop
out
jbe
mov
cld
repnz
pop
mull
es
sub
cs
sbb
repnz
das
mov
mov
cmp
mov
inc
test
fistps
rorl
push
jge
push
test
dec
xor
jl
jno
and
cld
repnz
scas
cmpsl
add
sbb
jp
cmp
lret
scas
movsb
push
inc
aas
ljmp
lods
iret
imul
pop
stc
sti
enter
inc
shrb
push
or
inc
pop
adcl
xor
xor
rclb
in
xchg
outsl
or
lods
cmpsb
mov
push
pop
mov
and
adc
aam
repz
fwait
xor
lret
add
pop
std
cli
jmp
dec
frstor
mov
inc
les
scas
mov
sarb
mov
push
push
mov
repnz
das
insl
lcall
cmp
repnz
das
pop
mov
cmp
adc
sbb
xchg
das
mov
clc
push
test
sub
jae
jle
idivl
fs
mov
aam
xor
or
mov
imul
mov
pop
jge
shrb
inc
or
enter
popf
outsl
pop
jle
in
push
xchg
shll
insl
xor
fdivl
loope
xor
sub
loope
in
xor
in
inc
add
enter
fsubrl
divl
mov
loop
mov
stc
in
and
sub
mov
movsb
mov
jle
ds
jo
jecxz
mov
jle
cli
mov
mov
add
in
adc
repnz
xor
mov
cmp
in
xchg
outsb
rcll
cmp
pop
es
jnp
aas
jns
and
add
jle
into
clc
mov
aam
or
adc
or
xchg
aaa
mov
and
popf
jo
sbb
int3
addr16
test
ret
push
xchg
mov
rolb
and
mov
push
pop
jns
sub
fiadds
add
mov
stc
fadds
mov
pop
pop
dec
ret
fcos
repnz
lret
aaa
shlb
test
cmpl
movsl
lods
mov
jmp
dec
pop
jns
sub
xchg
adcl
test
jns
xchg
push
cmp
cmp
pop
mov
loopne
xchg
push
pop
dec
out
imul
scas
mov
sarl
popf
adc
test
xchg
mov
repz
repnz
mov
inc
loopne,pt
sarb
sbb
cmc
inc
and
loope
inc
out
mov
inc
jns
loopne
cmpsb
inc
in
push
jg
call
das
int
scas
arpl
enter
sbb
daa
and
lret
mov
sub
inc
jecxz
and
pop
lahf
lods
mov
in
in
and
in
orl
dec
xchg
push
pop
jns
fwait
xor
bound
jo
movsl
ss
in
fdivs
into
xlat
cs
icebp
inc
stc
in
pop
test
std
divl
push
lcall
xchg
pop
jle
jecxz
cmc
gs
sbb
inc
inc
mov
pop
cwtl
pop
jno
fidivrl
movsb
mov
adc
icebp
cmp
imul
lret
inc
in
push
shll
pop
lahf
test
sub
push
out
xlat
dec
fstl
jne
sub
lods
jecxz
in
adc
sbb
mov
fisubs
cltd
cld
mov
pusha
fistl
outsb
stc
ja
mov
adc
inc
jge
jmp
add
cmpsb
cld
in
fimuls
jns
icebp
inc
sarb
aam
cmp
in
pop
inc
or
movsb
push
xchg
popa
jg
das
mov
test
dec
pop
shl
cmp
in
out
int
cmp
lods
repz
popl
leave
push
test
pop
mov
clc
ljmp
cmpl
out
dec
pop
jle
in
push
cmpsb
mov
add
jb
sarb
xchg
pushl
ud2
f2xm1
loope
cmp
call
xor
push
dec
push
test
fnsetpm(287
stc
in
pop
dec
ds
movsb
sbb
out
xchg
pop
jle
and
push
inc
adc
add
lret
inc
add
ret
test
sub
loopne
icebp
and
add
adc
adc
outsl
or
mov
pop
adc
imul
fdivrs
es
cltd
lock
inc
test
lea
outsl
mov
push
pop
jns
mov
hlt
xchg
jg
leave
push
pop
jns
std
movsl
popa
std
fstl
es
mov
jns
xchg
mov
or
test
ja
ds
jb
dec
aaa
dec
pop
jns
xchg
stos
repnz
xchg
pop
das
xchg
lods
sarb
lret
add
or
fnstsw
mov
cmp
mov
stc
fnstenv
push
cld
jge
lret
dec
cmpsl
pop
gs
cmp
add
mov
out
rolb
adcl
xchg
decl
fsubs
dec
call
mov
lods
repnz
adc
addr16
aaa
lcall
cmp
stc
repnz
xchg
popa
imul
enter
sbb
pop
dec
out
movsl
jmp
push
jns
lods
cmc
add
movsl
out
in
push
pop
subl
inc
icebp
and
mov
and
clc
inc
mov
cmp
repnz
in
ds
cmpsl
movsl
lret
frstor
adc
sub
push
mov
inc
push
and
scas
mov
xor
test
in
jg
jmp
sti
xchg
push
rolb
xor
sub
fsub
mov
push
adc
movsb
repnz
dec
pop
loop
jbe
add
ficoml
fwait
lcall
rorl
xchg
push
pop
enter
or
movsl
je
in
rcrl
pop
jns
sbb
icebp
data16
rcl
push
dec
cld
repnz
mov
or
ja
push
lods
add
lret
das
mov
subb
pop
loop
or
mov
inc
push
cmc
and
add
push
ret
push
outsb
adc
or
xchg
sub
mov
cld
sti
in
iret
bound
jge
jmp
in
cmp
push
insb
jp
sub
cwtl
mul
repnz
das
mov
pop
mov
mov
cld
popa
mov
loopne
insb
push
or
loop
mov
add
cmp
stc
in
and
jmp
aas
ljmp
xchg
ja
mov
test
out
xchg
mov
jns
dec
xchg
ret
scas
enter
imul
cmpl
lahf
aad
add
ds
xchg
in
lock
and
xorl
in
xor
idivb
mov
mov
jg
and
lcall
in
jl
push
jno
lods
inc
xor
jle
in
pop
push
add
jns
stos
dec
out
ss
in
pop
test
jae
repnz
mov
in
pop
jle
mov
and
icebp
jp
xchg
pop
jle
push
and
inc
and
jg
mov
cli
enter
nop
mov
push
adc
pop
jle
in
xor
adc
clc
and
and
in
mov
int
jl
fs
lret
pop
subl
xor
inc
nop
shrl
xor
inc
pop
mov
jecxz
and
lret
mov
sti
bound
mov
lret
das
mov
std
lds
push
inc
mov
in
mov
mov
jb
xchg
jo
cmpb
lds
test
stc
in
mov
mov
cmpsb
data16
in
pop
sbb
sbbl
stc
popl
jmp
outsl
sbb
sbb
std
lret
mul
xchg
pop
jle
jb
cltd
fwait
inc
jge
dec
jge
push
std
or
repz
xchg
jg
pop
lods
scas
pop
pop
hlt
mov
mov
stc
in
push
mov
jg
lods
repnz
lods
pop
jle
cmpsl
inc
jecxz
outsb
fnsave
cmpsb
jmp
push
insb
jnp
push
sbb
cmp
sub
out
adc
or
mov
addr16
repnz
dec
stos
jne
pop
sbb
scas
mov
mov
data16
push
cmp
dec
loopne
sub
pop
insl
xchg
push
pop
dec
outsb
mov
and
push
or
loop
or
mov
cmpb
jle
xor
sbb
xchg
push
push
mov
pop
jns
xchg
add
pop
mov
in
jg
mov
cmpsl
and
dec
movsl
cmp
sbb
cmpb
fwait
cli
sbb
gs
test
sbb
in
aaa
mov
imul
mov
in
inc
push
jo
sarl
pop
in
popa
xchg
pop
jle
mov
ljmp
sub
xor
jge
popf
sbb
icebp
lea
out
or
xchg
mov
mov
sub
leave
stos
add
xchg
xchg
mov
repz
repnz
mov
jle
sti
inc
ljmp
and
gs
inc
adc
repnz
pop
jns
cli
jnp
push
xor
lahf
loope
repnz
das
mov
adc
and
cld
mov
in
out
mov
cld
repnz
clc
testl
xchg
pop
decb
pusha
rolb
insb
fisubrl
in
xor
mov
rcrb
dec
jae
repnz
and
xchg
push
lea
les
push
sbb
stos
xor
ficompl
in
mov
inc
mov
int3
xchg
jns
xchg
push
cmc
cmp
aaa
cwtl
cmp
and
xchg
push
pop
aad
lcall
mov
xlat
imul
push
pop
xchg
sub
cli
enter
out
push
xchg
pushf
and
in
dec
mov
mov
add
stos
lods
mov
jns
leave
dec
add
inc
and
in
jle
in
dec
mov
jecxz
fsubl
addb
idivb
sar
inc
mov
in
divl
lea
dec
or
sbb
sarb
sbb
arpl
fmul
mov
scas
fnstcw
in
push
pop
dec
stos
adc
daa
cmpsl
imul
jns
shll
lret
xor
jb
cmpsl
lea
dec
xlat
andb
es
pop
jecxz
pop
push
xchg
inc
sbb
inc
dec
push
cmpsb
jno
subb
pop
pop
xor
fisttps
cmpsl
inc
fnstenv
aad
jecxz
lret
mov
mov
push
nop
push
mov
push
and
sub
xchg
mov
xchg
sbb
shrl
dec
sub
jb
pop
xor
ds
lret
jp
fildl
cmp
lret
das
incl
sbb
arpl
or
lret
das
mov
out
push
dec
dec
jns
ror
das
mov
popw
stos
mov
mov
mov
mov
pop
rorb
scas
jge
lcall
cld
repnz
das
addr16
sub
das
mov
sbb
lret
das
mov
jo
cmp
in
mov
inc
mov
jo
sbb
imul
aam
cmp
sub
in
cmp
imul
cmp
jmp
sub
mov
mov
stc
in
pop
movsb
mov
sub
add
jle
mov
jnp
notl
fidivrl
mov
in
movsl
dec
addb
mov
fistps
jns
xchg
jecxz
push
into
xorl
pop
pushf
loope
scas
imul
push
in
xchg
inc
mov
stc
xchg
sub
jmp
xchg
leave
lret
das
jg
and
adc
jmp
pop
or
ficoms
clc
clc
sti
std
push
lcall
jne
sbb
repz
mov
jecxz
lret
int
dec
stc
in
xor
dec
sub
mov
xor
cmp
sbb
in
pop
jle
inc
push
test
and
dec
insl
mov
lea
fisubs
push
jmp
imul
jle
sbb
add
inc
jns
push
daa
push
push
jl
in
aas
movsb
fsubr
inc
xor
mov
mov
inc
out
and
sbb
push
movsb
pop
dec
imul
repnz
pop
ljmp
scas
push
add
cmp
xchg
mov
repnz
xchg
pop
mov
adc
das
mov
aaa
test
inc
add
add
pop
jle
imull
aad
popa
scas
outsl
xchg
pushf
jg,pt
mov
out
xchg
sub
adc
stc
push
push
es
add
inc
lea
jmp
mov
or
test
cmp
jmp
push
jmp
mov
test
pop
into
int
jge
in
mov
xor
stc
andl
ja
xchg
cmp
or
pop
jle
test
xchg
insl
xchg
push
jp
pop
jle
fdivs
sarb
jmp
jge
in
cmp
fldlg2
jnp
sahf
sub
inc
sti
enter
es
sbb
cwtl
xchg
cld
fisttps
std
xor
mov
pop
in
rolb
push
stc
in
cmpsb
or
cmp
enter
jmp
and
roll
jg
stc
sti
pop
xor
mov
pushf
clc
lds
inc
rcrb
jle
in
loop
popa
ret
xchg
call
leave
mov
pop
out
and
pop
xor
loopne
pop
jle
mov
mov
cmp
mov
repnz
pop
loope
icebp
pop
rolb
jp
push
in
sbb
lret
das
mov
mov
dec
orl
sahf
cld
sub
push
mov
jp
cld
repnz
dec
push
lret
add
pop
dec
and
jno
and
enter
leave
cmpsb
mov
jge
mov
cltd
push
and
add
ljmp
push
jne
icebp
pop
dec
stc
sbbl
fisttpll
jno
daa
pop
jle
jne
fistpll
pop
xchg
pop
jle
in
adc
stos
xor
xor
in
daa
cmpsl
mov
out
sahf
ds
das
jmp
stos
jl
insb
xchg
sahf
nop
jbe
das
mov
sub
nop
aas
mov
jle
mull
aad
xlat
sub
mov
mov
das
cmpsb
lcall
inc
ss
dec
mov
inc
cld
sub
xchg
pop
push
sbb
repnz
xchg
adc
inc
mov
and
scas
mov
mov
add
orl
repnz
pop
dec
cli
jp
or
mov
in
adc
lds
icebp
push
cmp
leave
das
fnsetpm(287
in
dec
fs
scas
mov
ret
movq
cmp
ret
lea
inc
js
lret
pop
or
in
xchg
push
fmulp
jnp
fmulp
sahf
xchg
clc
xchg
lret
mov
mov
clc
mov
arpl
pop
jns
das
decl
pop
sub
mov
stc
repnz
stc
stc
jmp
sub
jns
cmp
xor
sbb
jbe
sarl
push
push
pop
push
xchg
shll
in
push
pop
ja
leave
mov
lods
enter
pusha
gs
or
cmpl
xchg
ja
xchg
mov
or
repz
pop
jns
sahf
mov
add
jl
popa
mov
xchg
cmp
lea
aas
sub
in
mov
dec
pushf
mov
xchg
pop
jle
ljmp
stos
xor
jle
xor
lret
inc
cmc
rorl
fists
and
cltd
mov
enter
and
push
fwait
jb
pop
subb
cld
stc
in
shrl
andb
pop
mov
xchg
lret
mov
dec
mov
ss
jmp
das
mov
out
mov
jb
aad
mov
stos
or
aam
decl
cli
cltd
dec
or
insb
xchg
push
faddp
jns
push
notb
leave
adc
in
lret
enter
sub
out
jle
pop
stc
adc
imul
mov
add
fldenv
jle
stos
repnz
push
or
mov
or
inc
and
in
jg
bnd
bnd
xchg
pop
out
pusha
jge
push
sub
push
and
or
lret
mov
dec
daa
es
call
sub
sbb
jns
stos
call
lahf
dec
inc
push
xchg
push
ret
cmp
mov
and
inc
stc
ror
vandps
jmp
pop
js
pop
pop
jns
inc
inc
faddl
sub
mov
jle
in
andl
cmp
jno
sbb
cli
enter
cwtl
xchg
lock
cli
pop
pop
jns
xchg
or
pop
lret
and
jns
xchg
push
sub
jge
enter
leave
andb
pop
sbb
mov
rorl
pop
mov
add
mov
mov
or
xchg
push
movsb
dec
cmc
mov
pop
in
mov
outsl
mov
lock
push
ja
and
dec
cmpsb
mov
repnz
aam
aaa
lea
cmp
inc
mov
sub
mov
outsb
je
scas
xchg
mov
rol
das
xchg
cmp
jg
inc
pop
aas
les
hlt
jmp
outsb
mov
ret
loopne
ds
jns
movsb
xchg
jns
lods
mov
loopne
jae
repnz
das
adcb
cmp
lret
das
mov
int3
push
push
mov
xchg
and
test
sub
out
pop
jle
notl
inc
js
lds
push
xlat
stos
stc
pushw
stc
in
jbe
popf
and
mov
xchg
ja
lea
xor
pop
jns
fidivrl
rcrl
movsb
mov
repnz
adc
in
xchg
fldt
out
gs
filds
lret
ja
mov
or
sidtl
cmp
xor
cltd
cmpsl
sub
cmp
jmp
bound
mov
push
pop
dec
cmp
flds
out
repnz
xchg
mov
sub
and
push
cmp
sub
jg
outsb
inc
std
xor
cmp
imul
aam
mov
and
mov
aam
mov
jb
mov
out
mov
xlat
add
scas
imul
xor
jno
xor
add
jg
jp
push
xor
mov
lahf
mov
xchg
sahf
ss
sbb
mov
sub
das
decl
imul
hlt
lea
push
das
mov
addps
pop
dec
xor
mov
cld
repnz
ljmp
jle
inc
sub
stc
in
jg
pop
ds
rclb
leave
mov
jle
mov
xchg
aam
xor
mov
imul
lods
dec
mov
scas
mov
adc
lahf
dec
nop
pop
imul
pop
jo
hlt
enter
scas
pop
jne
adc
xchg
aaa
ret
dec
stos
loope
cwtl
cmp
sti
cltd
xchg
push
pop
jns
jo
iret
xchg
dec
cmp
mov
cmc
xchg
loop
or
jne
repz
lret
das
lcall
je
jge
inc
icebp
test
pop
jns
cmp
cmpsl
hlt
scas
inc
adc
xchg
pop
aad
jno
xchg
push
pop
dec
push
call
inc
sti
in
mov
push
pop
jns
jb
int3
cmp
xor
aad
mov
icebp
stos
mov
dec
lods
lret
lret
stc
in
jg
sbb
pusha
push
sub
push
mov
jg
dec
sbb
iret
sub
push
and
in
inc
pop
adc
cmp
insl
repnz
enter
pop
sbb
fstl
adc
jns
cmp
pushf
stc
adc
cmc
xchg
mov
outsb
adc
cs
xor
xchg
add
aad
call
lods
mov
mov
testb
and
lds
inc
mov
notb
push
cli
in
int3
fcomp
xor
pop
ljmp
adc
pop
mov
fsubrs
pop
inc
or
push
test
movsb
xchg
out
mov
cld
jns
xchg
aaa
sub
les
sbb
mov
sarl
popa
popf
and
xchg
mov
dec
mov
cmp
push
cwtl
push
xchg
pop
jns
test
lahf
mov
loop
in
jg
push
out
sti
xlat
inc
fwait
cli
or
mov
cld
jnp
adc
pop
ficoms
sbb
jecxz
cld
repnz
mov
sar
xchg
aad
mov
xchg
jg
or
sbb
sbb
mov
push
pop
xchg
mov
add
pop
setp
push
loopne
and
stc
mul
das
mov
int3
stos
mov
push
inc
js
xchg
pop
jle
lcall
loope
jg
xchg
pop
jle
push
add
jg
fldt
dec
es
push
stc
in
test
push
popf
pop
inc
pop
stc
rorl
push
ficomps
mov
xchg
ret
std
hlt
aam
adc
jnp,pt
in
and
or
and
repnz
das
inc
in
ja
movsl
xchg
and
mov
mov
inc
pop
dec
dec
cmpsl
fs
imul
sti
enter
xchg
add
cmpsb
filds
enter
dec
pop
mov
xor
lods
mov
scas
stos
jg
scas
mov
ror
xor
into
mov
aaa
push
mov
lret
jns
push
sbb
sbb
movsb
or
je
idivl
lods
mov
cmc
adc
movsl
adc
mov
fistps
pop
add
fidivrs
orb
mov
dec
xor
ret
aas
test
inc
out
and
aaa
aas
es
leave
xchg
jle
pop
mov
xlat
das
mov
test
sarl
ret
sbb
lcall
cmp
dec
xchg
mov
lret
jne
cld
repnz
das
shrl
outsb
pop
jg
xchg
sti
repnz
das
mov
or
out
push
sbb
sbb
fldl
dec
and
stc
repnz
fimull
xor
stos
inc
jns
lret
push
fimuls
xchg
iret
push
xlat
jp
pop
jns
scas
aaa
stos
cmp
nop
lods
push
inc
jp
je
and
nop
push
pop
jns
sbb
into
ret
jb
ficomps
adc
das
cmp
notl
sbbl
pop
jns
ficompl
cmp
out
pop
jo
iret
stc
ja
xchg
cmp
jle
in
rol
mov
mov
add
dec
mov
mov
das
mov
cmp
js
mov
mov
repnz
pop
jno
and
lea
icebp
enter
mov
push
mov
cmp
mov
inc
scas
mov
push
cli
insb
push
in
sbbl
xchg
loope
lret
insb
insl
sbb
popa
mov
sub
das
sbb
dec
adc
data16
mov
jns
loop
dec
or
or
outsl
repnz
das
jmp
aaa
lret
lods
js
gs
inc
mov
imul
xchg
mov
or
jmp
gs
mov
inc
adc
pop
jns
mov
xchg
adc
inc
jno
cmp
scas
fiaddl
repz
xchg
pop
imul
gs
or
in
mov
push
stc
idivl
xor
xor
pop
or
cld
repnz
das
xchg
test
add
repnz
das
mov
imul
icebp
jge
test
cld
mov
sbb
adc
inc
cmp
repnz
xchg
imul
int
decl
and
sub
dec
dec
mov
imul
sub
aam
sbb
fbld
mov
addr16
pop
jge
push
mov
mov
stc
data16
into
inc
mulb
jle
dec
pop
jns
xchg
divb
pop
jbe
push
shr
cmp
push
imul
jne
sti
sub
mov
xor
ljmp
lret
pop
push
or
xchg
out
add
aad
fnstenv
pop
pop
jns
mov
xchg
jnp
adc
dec
lahf
push
cs
jp
enter
mov
int
in
mov
push
mov
mov
pop
add
adc
push
mov
mov
mov
and
push
and
in
push
pop
dec
mov
jg
inc
gs
int
mov
insl
cmp
xor
lret
push
fidivrs
jbe
mov
pop
dec
xchg
mov
fiaddl
enter
test
push
int3
sub
pop
aas
or
xchg
out
repnz
mov
ja
mov
sbb
repnz
in
xchg
push
loopne
rcrl
sub
addr16
lods
or
daa
outsb
jae
in
ja
or
loopne
jbe
jne
in
push
pop
sahf
mov
push
hlt
sbb
inc
ljmp
ja
xlat
inc
inc
dec
xchg
mov
xlat
lret
adc
xchg
into
adc
cld
repnz
lret
mov
inc
das
xor
push
push
mov
mov
xchg
das
cmp
inc
fimuls
pusha
stos
ja
inc
mov
xor
sbb
fsts
pop
mov
into
shlb
scas
pop
inc
ficoml
in
lods
lret
das
ds
push
push
jmp
ret
test
cld
repnz
sbbl
mov
lret
sub
xchg
adc
lret
das
mov
les
fiaddl
cld
repnz
cmp
idivl
movsb
enter
and
or
pop
or
lods
lods
adc
xor
sub
imul
cmp
or
or
jnp,pt
xchg
shl
sti
add
inc
pop
aam
testb
aad
or
mov
sbb
sub
hlt
lds
les
dec
out
mov
scas
mov
inc
inc
push
repnz
rolb
fisttpl
repnz
xchg
sti
add
mov
xor
lret
das
mov
mov
push
pop
movsb
lret
das
mov
repz
dec
subl
jge
gs
xchg
mov
imul
repnz
mov
les
xlat
jle
outsb
xor
inc
repnz
das
mov
inc
ret
xor
or
enter
insl
sbb
sbb
scas
mov
mov
imul
pop
mov
rcrb
pop
dec
jge
clc
mov
scas
mov
lcall
mov
repnz
mov
and
or
repnz
mov
pusha
sbb
or
scas
mov
add
bound
pop
jp
or
loop
pushf
cmc
outsl
mov
xchg
push
imul
in
xor
leave
test
or
in
push
pop
mov
stos
test
cs
insl
out
sub
and
dec
xchg
shrl
repnz
insl
mul
std
mov
stc
repnz
and
add
fmul
sub
jl
gs
pop
mov
fcmovu
ljmp
jnp
jno
ret
cld
repnz
das
xchg
push
or
mov
sbb
xor
repnz
das
mov
sahf
pop
sbb
out
and
pop
stc
pop
loop
js
lods
mov
cmpsl
inc
pop
addr16
lret
mov
pop
xor
adc
jns
cmp
add
push
daa
push
ss
push
pop
add
mov
mov
enter
sub
aam
cmpsl
jl
mov
mov
fwait
mov
push
loop
xchg
scas
mov
divl
sub
mov
lret
dec
fnsave
cmc
inc
xchg
cltd
cmp
addl
rcrl
dec
xorl
adc
sub
cmp
jae
cld
mov
pop
adc
or
scas
mov
mov
leave
add
xor
test
sti
and
lret
inc
add
mov
mov
mov
jo
loope
dec
cmp
into
out
xchg
and
dec
pop
mov
sbb
lock
sti
scas
ja
enter
fmull
fiaddl
push
cmpsl
jle
stos
bound
dec
dec
xchg
sahf
push
pop
jns
arpl
cwtl
data16
cmp
pop
jns
xchg
sub
pushf
leave
insb
sahf
mov
push
data16
int
and
sbb
xchg
jns
xchg
push
pop
jecxz
xchg
mov
xchg
mov
mov
pop
jns
xor
push
es
stos
fmuls
jle
in
push
stc
pop
out
in
stos
sarb
sub
inc
ss
sbb
insb
mov
mov
rclb
jae
jmp
or
sub
cmp
ds
in
pusha
pop
int
or
lret
lcall
and
scas
mov
fcmove
repnz
and
mov
insb
icebp
xlat
mov
aam
and
out
xor
pusha
adc
jae
movb
jns
lret
sub
hlt
mov
repnz
popf
dec
bound
xchg
push
pop
jp
aas
xchg
and
test
inc
push
pop
jns
adc
lea
push
inc
adc
xor
push
mov
add
push
enter
adc
and
pushf
imul
cld
repnz
pusha
es
es
sub
outsl
pop
stc
repnz
push
cld
data16
enter
xchg
jg
shll
pop
inc
push
bound
shl
pop
mov
test
in
fwait
cli
std
cmc
scas
lret
mov
fwait
mov
jne
add
push
mov
mov
dec
inc
ret
dec
aam
mov
lret
das
ljmp
aaa
decl
xchg
dec
icebp
call
in
pop
dec
outsb
inc
daa
test
xchg
das
lcall
jb
rcr
scas
into
cli
pop
shlb
insl
xchg
sbb
in
es
xchg
fstp
clc
popf
lret
scas
mov
jne
xchg
addl
jnp
repnz
inc
or
lahf
out
aam
lahf
adc
ja
mov
xchg
mov
not
cltd
sbb
daa
movzbl
mov
xchg
push
pop
jns
xchg
cmp
lret
stos
mov
push
pop
jns
xor
or
adc
lods
stc
in
and
mov
scas
jo
imul
pop
jle
aaa
dec
mov
rolb
outsb
jmp
ret
cwtl
or
test
xor
inc
in
push
fmulp
pop
cmp
jo
dec
in
call
pop
jns
imul
xchg
or
sub
in
mov
mov
stos
jnp
xbegin
xchg
pop
adc
lock
lds
xor
lret
jp
add
mov
xor
jb
push
popf
test
cmp
mov
icebp
hlt
push
or
repnz
xchg
sti
jnp
subl
fstpt
and
jge
repz
xchg
dec
lds
mov
dec
in
push
pop
xchg
cmp
clc
sub
popa
mov
jns
and
in
sti
mov
popf
pop
xor
and
mov
inc
in
jg
mov
icebp
pop
in
sti
mov
cmp
lds
xchg
pop
jle
xchg
sub
jbe
stc
incl
inc
or
jl
in
push
test
or
or
repnz
mov
push
rclb
inc
sub
in
das
mov
in
leave
pop
je
or
push
call
dec
dec
inc
mov
xchg
ucomiss
jp
jo
xor
lods
test
add
push
cld
leave
sub
pop
jns
call
sbb
mov
repnz
add
dec
mov
loopne
sub
mov
dec
xchg
pop
sub
lods
sub
pop
bnd
mov
scas
mov
or
cmpsl
mov
leave
mov
test
mov
jge
ds
xchg
mov
repnz
lea
or
popf
inc
lret
fcmovbe
mov
enter
test
lret
das
lcall
jl
cld
mov
push
cld
repnz
sti
js
outsb
dec
jecxz
sbb
cmpsb
sahf
sbb
in
icebp
rorl
pop
push
and
lret
jg
ds
sub
mov
sub
enter
mov
outsl
dec
loope
into
add
insb
xchg
mov
pop
jns
jecxz
addr16
xchg
out
push
xchg
adc
jns
xchg
push
xor
setl
loope
int3
insl
dec
pop
fcomp
inc
pop
pop
cmp
into
pushf
mov
xchg
lock
jno
xchg
push
push
and
shlb
dec
and
movsb
and
mov
and
pop
mov
push
add
xchg
pop
jns
xchg
jne
jle
add
xchg
in
inc
push
or
pop
mov
int3
sbb
cmpsl
test
rclb
push
or
or
in
int
das
jecxz
out
sbb
movb
push
adc
pushf
mov
mov
xor
add
or
test
sti
into
and
and
pop
jle
jne
jns
testl
cld
cmp
scas
ljmp
sbb
aad
or
out
cs
inc
cld
repnz
aas
xor
jp
lea
and
in
out
xchg
jg
es
inc
push
pop
mov
imul
cld
repnz
mov
loopne
or
add
in
mov
cmp
in
or
pop
out
bound
mov
or
loop
xchg
rclb
mov
pop
xor
mov
mov
and
scas
popf
loop
popa
iret
push
push
fcomps
pop
jns
add
icebp
aas
ret
insb
jns
repnz
mov
sbb
mov
xchg
dec
mov
pop
lds
mov
mov
insl
daa
rcl
sub
repnz
rolb
sbb
mov
mov
daa
jnp
xchg
sahf
pop
jns
sub
push
push
out
jns
mov
sar
lds
ffree
mov
pop
inc
and
mov
xchg
aas
adc
xor
repnz
pop
cmp
les
inc
push
push
aam
out
and
hlt
mov
jge
inc
xchg
leave
filds
cld
stos
pusha
cmpsl
cltd
dec
insb
imulb
jle
xlat
pop
jle
in
lds
fmull
jge
pop
pop
testl
in
mov
mov
repnz
imul
ss
jp
add
mov
enter
dec
hlt
pop
xor
and
push
ja
mov
mov
icebp
dec
insl
clc
cmp
add
mov
dec
into
mov
test
dec
outsl
lret
aas
stos
addl
out
scas
mov
movsb
flds
xor
js
scas
mov
cmp
sbb
sub
jl
xchg
lret
test
loop
repnz
mov
lret
ja
je
push
shll
fsubs
sub
dec
push
inc
adc
pop
jns
jecxz
add
pop
pushf
mov
xchg
push
arpl
mov
push
ja
aaa
int
jnp,pn
xchg
push
pop
xchg
push
cmp
add
repnz
pop
xchg
push
pop
jns
xchg
jbe
movsl
add
inc
aas
push
push
pop
jns
aam
xor
repz
xor
lcall
push
or
maxps
push
ljmp
inc
jo
adc
push
out
cmp
mov
shll
xchg
xchg
push
adc
cmp
aaa
and
xchg
pop
jle
push
arpl
hlt
mov
push
pop
ljmp
xchg
or
leave
xchg
push
aad
int
popa
inc
popf
inc
jle
in
jle
mov
insl
movsb
out
in
push
leave
push
mov
xor
cwtl
mov
inc
xchg
push
jo
lret
jg
jbe
orb
inc
daa
lret
inc
dec
iret
mov
sub
xchg
nop
xchg
push
test
clc
repnz
das
ljmp
adc
jge
xchg
pop
or
cmp
jnp
pop
stc
decl
lock
add
xor
lret
pop
outsl
fstpl
out
mov
icebp
xchg
mov
leave
adc
jl
repnz
das
inc
cmp
test
das
xchg
mov
movb
stc
and
jge
adc
aad
mov
mov
dec
lock
mov
shlb
cs
div
push
fsts
out
sahf
das
sub
mulb
push
fimuls
add
jns
cmp
push
pusha
or
inc
lret
inc
push
pop
or
sar
aaa
lds
js
mov
es
pop
les
stc
in
mov
adc
xchg
cmp
inc
dec
stc
in
pop
mov
pop
imul
xchg
pop
jle
out
iret
bound
fstpl
push
faddp
clc
aam
mov
daa
xchg
push
in
lds
jns
xchg
imul
push
sub
push
int3
fldt
mov
in
push
pop
add
fists
jg
pop
jns
mov
sub
test
ds
push
das
out
ja
jecxz
fwait
enter
stos
popa
cmp
test
mov
or
fsts
lret
mov
xchg
dec
push
adc
out
xchg
sub
out
xchg
inc
or
and
mov
aaa
aam
mov
lds
jg
mov
pop
sahf
inc
fimuls
jbe
xlat
cld
repnz
das
orb
push
sbb
pop
and
mov
jge
inc
mov
ret
add
jns
stos
pop
les
cld
repnz
das
pusha
sub
inc
hlt
repnz
psubusw
push
movb
xchg
push
rolb
mov
dec
ljmp
pop
int
jns
or
movsl
push
jl
jg
mov
push
pop
cld
hlt
jg
cmp
ljmp
pop
jns
sub
std
sub
and
das
call
fildll
push
pop
pop
fdivr
and
push
jno,pt
mov
lods
rorl
cli
enter
xlat
das
cmpsl
push
enter
in
push
fisubrs
push
mov
xchg
xchg
and
jns
xchg
lahf
bound
out
mov
scas
cmovg
cmp
sub
div
jne
cmp
xchg
testb
gs
lret
dec
inc
xchg
mov
inc
mov
jae
xchg
pop
stc
mov
in
cmp
jne
int
sti
add
out
in
scas
pop
jns
rcrl
sub
xsaves
loopne
loope
sbb
lret
sub
or
gs
popf
inc
jp
or
sti
dec
ja
mov
in
xchg
pop
pusha
mov
aas
xor
scas
mov
insl
pop
inc
mov
scas
mov
jmp
inc
jp
test
jle
repnz
and
adcb
push
xchg
jge
movsb
fs
inc
mov
popa
xchg
push
adc
pop
jle
in
into
add
aam
and
movsb
xchg
jp
in
stc
in
lahf
hlt
jo
sub
dec
les
xchg
pop
xchg
jge
fwait
and
sub
inc
das
mov
cwtl
shll
jg
sub
jae
nop
push
stc
repnz
pop
adc
mov
cltd
cmp
popf
hlt
add
je
inc
sub
fbld
lret
jmp
mov
repnz
cli
xchg
into
ja
pop
adc
add
adc
lret
repnz
dec
or
insb
mov
push
js
cli
and
add
fwait
movsl
dec
ret
sbb
in
mov
pop
es
out
mov
mov
add
and
out
enter
or
add
pop
rcrl
inc
or
jnp
in
inc
pop
push
cltd
mov
insb
ljmp
jecxz
push
and
lea
lcall
lods
iret
mov
or
sti
in
enter
movsl
lds
dec
jmp
repnz
das
mov
das
dec
loopne
or
pop
mov
incl
out
dec
cmp
scas
jne
pushf
xchg
das
jle
mov
push
test
push
loop
in
pop
xchg
shrb
jecxz
sub
pop
push
cmp
repnz
or
cli
push
fs
and
divb
push
add
loop
loopne
das
mov
jle
subl
mov
jmp
jge
dec
imull
xchg
xor
mov
xor
xor
mov
repnz
push
mov
ror
add
fists
dec
inc
cld
repnz
das
fdivr
js
cs
xchg
mov
push
negl
lret
das
mov
jno
jne
imulb
cld
adc
dec
cmp
mov
gs
jb
enter
into
mov
es
jge
push
xchg
jmp
scas
mov
lcall
jl
jae
push
or
jne
repnz
das
pushl
shrb
push
xchg
das
mov
push
in
push
mov
mov
jns
and
xchg
lods
lods
mov
cvttps2pi
fists
out
mov
jmp
push
data16
jnp
repnz
in
xchg
pop
jns
cmp
push
int3
outsl
mov
jl
lret
jbe
cmp
or
sub
clc
push
lret
mov
stc
jge
pop
jle
or
inc
scas
mov
insb
scas
sbb
push
fdivr
repnz
mov
cmpsl
ret
cs
shlb
sbb
and
mov
sbb
sub
out
nop
outsl
andb
scas
mov
js
fisubrl
cvtps2pi
scas
mov
ljmp
in
cmp
repnz
rolb
adc
mov
adc
stc
cmp
push
xchg
enter
inc
mov
sbb
int3
xor
in
or
push
divl
push
sub
aas
and
xlat
pop
in
andl
imul
sbbb
pop
lret
popf
cmp
test
add
cmpsb
js
jl
lret
or
add
test
sub
dec
or
insb
fwait
inc
subb
mov
cwtl
fstp
out
and
jns
imul
xchg
jecxz
lods
mov
insb
fs
fs
cmp
arpl
mov
mov
cmp
xlat
inc
loopne
cld
repnz
test
fisubrs
roll
and
repnz
das
mov
pushl
push
cli
mov
or
or
lret
fs
mov
andl
js
mov
and
sbb
test
and
cmp
xor
push
inc
sahf
jecxz
pop
fscale
jbe
in
lods
in
jg
pop
ja
rcrb
xor
cmp
push
iret
insl
cmp
mov
lahf
out
jae
stc
in
jg
mov
jne
lods
fwait
mov
pop
jle
add
push
inc
sbb
cmp
repnz
dec
xchg
dec
stc
in
jg
clc
sub
inc
in
push
sub
xchg
pop
jle
roll
sub
dec
push
movsl
fwait
pop
jge
adc
lock
xor
xchg
mov
xchg
or
mov
or
gs
pop
repnz
das
call
and
stc
out
negb
cmpsl
xor
mov
mov
testl
idiv
data16
neg
mov
mov
dec
or
pop
sbb
test
ret
fdivrp
in
pop
push
xchg
imul
mov
and
shll
add
sub
repnz
ficompl
cltd
je
shl
ljmp
ret
and
sub
inc
xchg
sub
dec
test
or
xchg
scas
test
lds
movsl
in
xor
xchg
repnz
lahf
xchg
xchg
sub
or
div
enter
xchg
outsl
dec
mov
adc
fistps
repnz
cmp
mov
leave
xor
scas
mov
dec
push
inc
pushf
sbb
repnz
imul
insb
push
sub
lret
mov
and
mov
mov
into
in
sub
pop
mov
or
sbb
jo
push
test
xchg
pop
jge
xor
aas
mov
sbb
movsb
pop
dec
inc
jle
in
xor
or
or
jbe
and
sbb
call
xor
push
pop
jns
imul
movups
dec
mov
in
xchg
adc
scas
in
xlat
dec
int3
jne
das
mov
jmp
and
push
jecxz
data16
shlb
test
rorl
mov
enter
jbe
fistpll
mov
enter
pushf
xchg
inc
popf
xchg
ss
aas
xor
mov
xor
and
in
push
pop
push
and
imul
jo
std
push
jge
out
cmc
add
pushf
rclb
or
xchg
imul
call
jns
out
jmp
addb
mov
pop
jns
xchg
mov
ds
xor
xchg
sbb
in
and
rolb
sahf
xor
mov
stc
cwtl
loopne
add
pop
mov
pop
jns
sub
adc
outsl
fdivr
and
push
iret
jb
xchg
push
movsb
stc
leave
and
popa
out
or
pop
cmp
fmul
mov
jne
xchg
ffree
or
xlat
cmp
and
mov
repnz
das
ret
pop
dec
test
call
in
jg
jl
ja
mov
or
and
stc
repz
sub
and
punpckhdq
cld
repnz
pushf
push
iret
and
mov
and
lds
jg
jae
ja
or
out
hlt
jne
sbb
xchg
pop
jle
add
jg
rolb
jecxz
rcll
addr16
xchg
and
mov
div
into
fcoml
xchg
ds
push
imul
push
shlb
or
xchg
push
dec
jno
minps
hlt
testl
push
pop
cmc
addr16
xorb
mov
inc
popf
or
mov
sti
xor
std
imul
push
lret
das
lcall
repnz
cld
xlat
sbb
leave
dec
test
lret
mov
sub
dec
dec
fwait
scas
mov
mov
sbb
pop
xchg
xor
inc
cmp
lret
das
insb
cmpsl
push
imul
loope
mov
cmp
lcall
out
or
repnz
out
cltd
imul
xchg
mov
scas
add
mov
lods
sub
stc
in
ja
dec
aaa
lds
jge
in
pop
mov
mov
out
ljmp
and
jle
in
cmp
sahf
xor
insb
enter
lret
dec
sbb
imul
mov
scas
mov
clc
pushf
jg
subl
bnd
pop
sarb
out
mov
jno
rcll
fsub
lret
jne
push
mov
adc
sbb
mov
js
aam
pop
shrb
jg
mov
jns
xchg
nop
xchg
add
pop
std
mov
in
push
test
les
sbb
sbb
lds
imul
in
jle
mull
xchg
out
xlat
out
xor
hlt
mov
lret
xchg
das
push
xchg
test
xchg
xchg
pop
popf
cmc
mov
imul
arpl
rcl
jle
in
mov
les
jbe
jle,pt
jle
in
xchg
mov
test
movsl
movsl
stc
in
pop
nop
pop
notl
arpl
pop
jle
sbb
mov
aam
test
push
outsl
xchg
pop
jle
iret
lea
roll
daa
mov
stc
in
in
lahf
fbld
xchg
jnp
fnstcw
enter
into
jecxz
loopne
pop
lds
aaa
push
push
pop
jns
shrl
fdivrs
in
out
hlt
xchg
xchg
push
cmc
mov
mov
mov
and
mov
cmp
sub
mov
dec
dec
inc
sub
stos
nop
stc
in
and
sbb
pop
adc
stc
pop
insl
dec
xlat
push
mov
xorl
mov
xchg
out
and
xor
xor
cmpsb
shrb
outsb
cmp
and
loop
pop
lock
fmul
jecxz
add
cli
xor
in
mov
inc
mov
repnz
cmc
pop
jecxz
jae
out
fwait
xchg
inc
push
ror
scas
mov
mov
rcrl
scas
mov
sbb
leave
pop
add
sub
loope
mov
imul
testl
mov
jbe
mov
in
push
fadds
mov
inc
cltd
inc
add
das
xchg
mov
mov
es
es
cmp
xorb
pop
mov
xchg
lds
cld
mov
jmp
pop
loop
pop
pop
inc
dec
loop
in
outsl
mov
pop
adc
ret
int
orl
cmp
lret
lcall
popf
and
mov
scas
cld
jb
push
test
or
pop
fisubrl
shll
fs
jp
enter
cld
or
xchg
sub
test
scas
or
mov
in
xchg
aas
sarb
mov
mov
and
jns
stc
in
pop
imul
sahf
sahf
into
dec
mov
das
lcall
call
xor
xchg
mov
clc
ja
sti
cltd
sbb
bound
in
mov
jmp
sbb
cmpsl
rcrb
sub
in
pop
cmp
outsb
lret
adc
adc
sub
psubq
sti
mov
and
stc
inc
jmp
dec
or
push
ja
pop
jle
in
stos
or
cltd
loope
repz
pop
push
loop
xchg
out
repnz
repnz
shlb
wbinvd
cmp
scas
mov
sub
test
aaa
sti
mov
stc
neg
js
xlat
xchg
add
icebp
lds
dec
int3
mov
inc
stc
in
pop
jmp
cld
outsb
mov
rorl
stos
ss
and
in
mov
mov
fwait
stc
cmpsb
out
adc
test
aad
fisttps
sub
call
jae
mov
adc
scas
lret
mov
rorl
sbb
in
imul
in
cmc
movd
push
push
pop
cmpsb
out
xchg
push
pop
jns
push
xchg
aaa
pushf
push
pop
add
scas
mov
pop
jns
int
test
or
insl
lret
xchg
pusha
or
xlat
loopne
mov
inc
test
inc
mov
xor
mov
mov
dec
cld
repnz
xchg
xor
shlb
stc
ret
negb
or
insb
mov
adc
mov
fstp
pushf
fstpl
das
mov
jle
mov
xcrypt-ecb
cmpsl
or
jno
cld
repnz
jno
loopne
pop
jecxz
adc
fdivl
les
mov
mov
rol
repnz
das
mov
jge
inc
es
das
mov
xchg
mov
rolb
mov
mov
xchg
lods
sbb
xor
dec
inc
or
div
mov
icebp
ficompl
xor
rep
shlb
pop
jle
mov
jl
ds
aad
dec
inc
fstpt
dec
int
loope
mov
xchg
push
pop
xchg
fs
addb
xor
sbb
roll
in
inc
inc
leave
dec
sub
iret
loope
cmp
cmpl
mov
orb
icebp
in
pop
sti
xor
sub
cltd
jnp
add
cmp
repnz
or
ss
mov
in
in
fxam
test
and
pushf
in
xchg
push
jge
pop
hlt
sub
imul
stc
dec
bound
in
inc
fwait
pop
inc
lret
mov
bound
sub
mov
pop
stc
repnz
pop
sub
in
pop
add
imul
outsb
sbb
fsts
jne
xor
xchg
sbb
ds
sub
pop
lea
lret
imul
mov
sub
repnz
das
add
shll
jl
pop
in
inc
mov
mov
xchg
xor
xchg
pop
jle
or
xor
les
lods
adc
stc
in
cmpsl
mov
pop
mov
rcr
shlb
jo
push
cmpsb
iret
dec
js
xchg
pop
shlb
repnz
add
or
in
mov
repnz
sti
stc
imul
cmc
in
sub
repnz
xchg
popa
ror
ret
sub
daa
sti
ficompl
push
mov
jl
mov
cmpsl
pop
insb
imul
cmp
cmpsl
int3
pop
xlat
jo
sub
stc
repnz
das
mov
pop
out
pushf
adc
ret
fcomp
cld
repnz
pop
xchg
adc
inc
or
mov
jg
repnz
das
mov
loop
xchg
cld
xor
dec
lret
das
mov
pop
adc
jo
addb
das
mov
and
and
jae
les
cld
repnz
es
mov
xor
lods
lods
mov
adc
loopne
outsb
cmp
push
pop
push
es
repnz
jns
xchg
mov
adc
push
insl
pusha
mov
inc
nop
sbb
mov
cld
cmp
scas
add
add
xchg
aad
int
sbb
enter
pop
pop
mov
or
in
or
pop
aas
test
jge
or
lds
daa
xor
and
adc
dec
lret
mov
ss
inc
fiadds
enter
jbe
xchg
jns
xchg
push
cmp
jne
das
ja
in
push
pop
movsl
stos
adc
fdivr
iret
dec
pop
leave
out
and
out
mov
mov
mull
scas
mov
inc
jg
jg
jns
or
stos
fstl
jmp
add
outsl
or
or
mov
mov
lods
inc
xorl
scas
or
cmp
dec
cmpsb
dec
dec
mov
orb
repz
out
dec
cmp
adc
clc
out
scas
mov
clc
mov
pop
test
mov
repnz
mov
cli
pushf
loope
repnz
sti
mov
dec
sbb
xchg
scas
add
push
enter
mov
stc
movsb
dec
not
jb
repnz
sbb
pop
jbe
in
pop
and
mov
dec
rclb
cld
cltd
aas
repnz
mov
mov
in
add
enter
sub
stos
sub
les
scas
mov
roll
es
mov
rol
inc
push
push
in
enter
xchg
add
mov
and
jle
pop
cmp
stc
xorl
push
fsubrp
movsb
cmp
adc
xchg
or
push
pop
jns
faddl
mov
ss
jne
jmp
jns
call
es
out
xchg
jg
pop
out
jp
pop
xor
jl
cmp
fwait
insb
cmpsl
and
add
popa
bound
stc
in
cmp
stos
out
cwtl
add
filds
xchg
rcrl
sbb
and
pop
jle
in
mov
pop
adc
jnp
fdivl
ljmp
inc
xchg
mov
push
mov
movsb
imul
cmpb
cld
repnz
xor
mov
xlat
scas
mov
cld
repnz
das
push
xor
mov
enter
in
das
mov
jns
jl
ljmp
outsl
inc
jl
ficomps
aad
pop
jle
sbbl
mov
out
jg
repnz
dec
popf
dec
in
adc
add
lods
xchg
mov
xchg
pop
ds
jo
test
pop
stos
mov
pop
jle
xlat
add
inc
sbb
fsts
enter
dec
inc
inc
add
adc
pop
pop
xor
test
jg
and
mov
imul
jl
rcl
jl
xchg
pop
jge
popa
add
rcll
aaa
imul
jns,pt
loop
sti
scas
and
dec
xchg
jg
pop
sub
xchg
pop
xchg
arpl
inc
inc
mov
cmp
incb
dec
imul
fildl
pop
aam
pop
arpl
inc
sub
and
fwait
fs
enter
jns
incl
jp
xchg
push
pop
push
inc
lods
sub
dec
jns
xchg
aam
mov
sub
pop
jns
adc
mov
or
fildll
mov
shl
or
outsl
mov
pop
cmp
pop
loop
cmp
cmpsb
jle
push
lahf
mov
pop
repnz
les
push
adc
push
fimuls
popa
adc
xor
jns
xchg
test
inc
in
movsb
push
jns
xchg
push
or
sbb
bound
pop
pop
cmpsl
and
or
jmp
fiadds
inc
add
fidivl
xchg
in
xchg
movsl
inc
xchg
lahf
ret
insb
fidivl
in
jg
or
ljmp
pop
jle
or
xchg
mov
adc
mov
jns
loope
aas
stos
int
lret
pop
rorb
push
xchg
push
adc
push
adc
xorl
sbb
dec
cltd
sti
mov
add
dec
inc
sub
jecxz,pn
xor
adcl
in
mov
lret
shrl
jmp
add
pop
jge
out
xor
stc
in
aad
arpl
xor
sub
sbb
in
pop
mov
ficomps
pop
testl
sti
push
stos
mov
cmp
jle
outsb
adc
rcrb
mov
test
cld
ret
xor
sahf
outsl
das
arpl
jg
shrl
repnz
das
xchg
aas
mov
cli
cld
repnz
fs
in
push
add
and
jmp
adc
cmp
jae
add
repnz
mov
jp
xchg
xchg
push
mov
rol
xchg
out
lret
cld
out
xchg
xor
jo
sub
stc
in
pusha
cmp
inc
xor
inc
pop
lods
pop
jns
xchg
fdivs
add
cld
repnz
pop
pop
imul
xchg
push
test
inc
test
mov
bound
sub
sub
aam
push
or
outsl
mov
mov
sub
push
mov
scas
inc
jns
pushf
mov
in
mov
out
imul
xchg
test
repnz
ljmp
scas
sbb
cli
fisubrl
mov
sub
in
xchg
push
sub
repnz
hlt
jge
rcrl
cmp
mov
mov
mov
and
dec
pop
bound
fists
jne
mov
pop
jle
in
stc
lret
push
mov
xchg
ja
dec
loope
jle
in
jo
mov
cmp
insl
shll
je
xchg
pop
push
push
pop
pushl
repnz
pop
push
sbb
sbb
lods
mov
stc
mov
dec
idivb
sahf
jecxz
jmp
xchg
shlb
hlt
push
jb
lods
or
stc
in
pop
jecxz
movsl
jno
aam
push
xor
pop
jle
xor
lfence
cltd
test
pop
jle
adc
out
cmp
pop
sbb
jecxz
sub
fwait
and
mov
aad
negl
push
mov
jmp
sahf
add
lea
in
mov
cmpsb
sti
mov
mov
in
pop
jle
sub
dec
jmp
cmpl
inc
jle
inc
loop
bound
and
les
in
aas
pop
xchg
aas
inc
mov
roll
push
mov
adc
mov
shll
addb
push
xchg
push
stc
mul
push
pop
jae
ss
imul
in
pop
jle
xor
inc
int3
sti
mov
jae
pop
jle
lea
sub
repnz
jns
jecxz
dec
subl
mov
jns
xchg
push
adcb
aad
dec
pop
mov
ljmp
out
imul
xor
repnz
or
mov
pusha
cwtl
pop
rclb
fldl
leave
push
mov
push
jnp
cmpb
in
mov
add
xor
mov
jns
sbb
sbb
hlt
ret
lods
inc
mov
pop
jns
add
or
mov
mov
mov
idivl
je
dec
cmpsb
sarb
lret
mov
fsub
aam
sbb
mov
jecxz
lahf
mov
daa
sub
and
enter
xchg
lret
sbb
push
pop
jns
adc
sar
jecxz
into
notl
leave
pop
jns
mov
push
adc
push
popf
mov
call
or
into
sub
inc
pop
jns
cmp
xor
pop
xor
dec
repz
lret
sbb
ficompl
mov
mov
pop
push
jg
cmpsl
out
sub
shrl
mov
addr16
packsswb
out
add
and
fnsave
xchg
add
dec
jb
ret
mov
pop
jns
xchg
pop
xchg
inc
xchg
pop
jae
pop
repnz
xlat
adc
dec
mov
popf
mov
mov
int3
mov
in
push
push
std
mov
outsb
dec
pop
jle
loopne
stc
in
pop
xlat
cmp
dec
in
ljmp
jle
std
shrb
jecxz
mov
pop
jns
stc
out
add
out
insb
lahf
jge
in
out
cmp
push
mov
pop
and
xor
cs
jae
inc
jle
and
jmp
cmp
jns
popf
ja
pop
mov
adc
xchg
ja
jmp
test
inc
mov
pusha
push
pop
jns
sub
popa
aad
enter
orl
jge
mov
mov
pop
xor
aam
add
insl
sub
fnstenv
clc
hlt
shlb
sub
sbb
das
decl
push
lret
scas
xchg
mov
ja
inc
xchg
inc
repz
popf
sub
cmp
fsubrl
lret
mov
mov
mov
and
xchg
sbb
test
ss
enter
inc
bound
dec
inc
repz
jp
mov
out
mov
repnz
lahf
or
lret
jle
in
jp
mov
push
cmp
jbe
repnz
mov
imul
test
lret
das
mov
leave
mov
cmp
push
pop
stc
repnz
lock
daa
les
cmp
lret
icebp
cli
lcall
sub
xchg
jg
cld
imul
push
jecxz
outsl
imul
mov
xorb
add
jle
in
push
addl
xor
aas
xor
repnz
inc
jle
cwtl
loopne
insl
jns
cmp
repnz
arpl
xchg
push
pop
xor
rcrl
sbb
or
jns
sbb
fs
inc
sub
mov
jae
xchg
add
arpl
nop
push
stc
add
movsl
xchg
adc
iret
xlat
das
mov
out
lds
mov
xchg
test
fildl
cmpsl
pusha
rcrl
xchg
jg
iret
lahf
dec
test
xor
dec
cmp
in
mov
loop
gs
add
xor
sub
inc
sbb
es
popf
push
adc
subb
in
and
gs
aad
add
aam
pop
jle
fs
or
imul
pop
jle
in
adc
aad
pusha
sub
imul
xchg
xor
push
mov
cmp
mov
cld
or
stos
stos
fisttpl
outsb
inc
xor
test
std
xor
xor
pop
jg
int
in
add
repnz
mov
pop
mov
push
out
loopne
push
addr16
aam
mov
sub
sub
xchg
data16
mov
subl
push
jo
cltd
movsl
dec
lret
inc
pop
sbb
sub
out
sub
cld
repnz
enter
pop
and
push
cmpsl
dec
pop
cmp
push
aam
mov
fucomip
or
lods
mov
inc
cmp
dec
pusha
jne
mov
aad
in
lods
and
mov
xchg
push
pop
iret
hlt
jae
pop
xlat
repz
mov
out
imul
push
jg
pop
jns
mov
dec
lods
repz
sub
iret
pop
loopne
sub
xlat
pop
inc
inc
and
lret
sbb
xchg
and
mov
cld
repnz
das
pushf
out
pop
push
pop
test
jb
repnz
das
mov
fs
repnz
hlt
jno
lret
das
mov
push
lds
shrl
cld
repnz
xchg
push
mov
shr
int
insl
sbb
mov
dec
lods
push
mov
iret
int
addr16
lret
das
jmp
call
mov
call
adc
sbb
sbb
in
lret
or
stc
pop
cli
test
ficomps
scas
mov
pop
outsb
fwait
push
xchg
mov
dec
mov
lods
mov
mov
xchg
push
push
jnp
repnz
mov
xchg
jbe
test
push
imul
fs
movsb
sahf
or
cmp
pop
lock
push
mov
js
push
cmp
enter
xor
jg
mov
scas
jns
mov
mov
pop
dec
xlat
adc
push
pop
movsl
mov
dec
test
in
sub
mov
das
sbb
and
and
ret
shrl
mov
pop
adcl
sub
mov
mov
xchg
xchg
fcmovbe
nop
push
pop
jns
sbb
push
add
sbb
stc
ja
xchg
lock
sbb
mov
sub
ljmp
mov
mov
out
add
or
push
fstpt
out
mov
repnz
ja
lea
inc
lcall
push
into
jns
xor
jmp
mov
jle
negl
push
enter
inc
mov
push
outsb
ljmp
in
fwait
mov
cltd
mov
stc
in
pop
add
push
fcomps
jo
jecxz
pop
jle
addr16
and
sbbb
mov
loope
lds
jl
loopne
mov
das
pop
mov
dec
stos
sub
nop
clc
xchg
pop
jge
adc
scas
pop
call
rcr
pop
stc
repnz
icebp
jbe
xor
mov
in
scas
ljmp
pop
sbb
add
jns
inc
lret
das
mov
adc
add
jmp
repnz
cmp
add
mov
mov
repnz
test
adc
loopne
mov
psubw
xchg
jg
xchg
test
leave
mov
clc
cmp
in
push
lret
out
or
inc
leave
test
ret
jle
dec
iret
mov
lret
mov
cld
add
cmpsb
xor
js
lret
lock
sbb
push
inc
push
fiadds
ret
xchg
popa
iret
push
mov
enter
xorb
or
pop
jns
mov
adc
push
js
lret
jns
xchg
loopne
stos
addr16
push
int
cltd
sbb
decb
nop
shl
js
lahf
int
mov
in
pop
in
das
icebp
jne
fs
pop
jle
add
in
pop
jle
shrl
int
cmpsb
add
cmp
or
mov
adc
iret
mov
in
mov
outsl
fldt
adc
xchg
push
stc
in
ret
push
adc
pushf
ds
mov
and
popf
dec
sahf
dec
mov
and
push
jae
in
inc
xor
push
jae
mov
dec
push
cli
mov
clc
mov
aaa
push
add
loopne
int
inc
mov
pop
popa
repnz
test
or
xor
cld
cltd
and
roll
imul
mov
cmpsb
out
sti
push
jmp
mov
mov
cmp
fistpll
out
push
movsl
mov
sbb
repnz
enter
mov
pop
mov
xchg
das
mov
dec
mov
mov
repnz
inc
xchg
pop
jle
test
dec
cmpsb
inc
arpl
jl
dec
clc
enter
push
jl
popf
mov
in
cmpsl
jno
xchg
push
mov
inc
mov
jns
sub
cmp
jbe
cmpsb
add
jle
in
push
and
out
jge
sbb
in
push
pop
cmp
jb
or
dec
sbb
xor
jns
inc
lea
imul
lods
pop
or
cld
repnz
popl
pop
sbb
sub
sbb
mov
scas
jp
cmpsb
inc
jecxz
pop
shll
cld
mov
daa
add
jmp
mov
xchg
or
jbe
cwtl
xchg
cmp
jg
cld
repnz
mov
xor
insb
sub
lods
cld
sti
enter
lcall
add
lret
das
mov
sub
jecxz
pop
jbe
lret
das
mov
mov
push
adc
adc
mov
push
xchg
iret
pmulhw
clc
dec
mov
mov
inc
pop
jns
pop
inc
and
ret
in
xor
call
sub
adc
push
jbe
jl
mov
out
loop
xor
aas
push
push
and
or
adc
mov
push
repnz
add
xor
and
mov
scas
mov
mov
movsb
in
scas
mov
pop
ja
fstps
das
imul
arpl
aaa
test
imul
jo
jmp
mov
ljmp
xor
inc
cmp
lods
int3
push
repnz
and
sub
outsb
aaa
mov
mov
push
cld
frstor
cmpsb
mov
out
aas
test
cwtl
sbb
iret
into
jg
scas
mov
loopne
xor
cltd
and
pop
test
or
sbb
mov
inc
in
pop
loope
in
test
jmp
lret
mov
pop
cmp
inc
iret
cmp
fmuls
rcll
jecxz
jnp
xchg
inc
and
mov
xchg
jg
sahf
mov
movsl
adc
inc
out
out
rorl
mov
add
repnz
ret
xor
out
adc
adc
aam
pop
push
lret
mov
pop
pop
scas
mov
mov
mov
adc
mov
das
cwtl
gs
fdiv
add
jmp
fisubrs
xchg
pop
sti
stc
add
fidivs
push
stc
lahf
ljmp
adc
sbb
stc
in
mov
mov
inc
mov
fsubr
faddl
and
sbb
mov
jg
mov
add
leave
push
enter
lret
adcl
test
lret
das
insb
and
iret
xchg
cld
repnz
mov
sub
adc
lret
das
mov
jecxz
pop
lock
mov
cld
fs
cmp
testl
fidivrl
loop
jb
jb
pop
push
cld
sti
enter
adcl
mov
imul
fdivrl
inc
mov
inc
cmp
mov
testl
repnz
orb
ds
cltd
mov
lret
lods
xchg
addr16
lret
dec
jne
dec
shrl
scas
mov
jb
inc
rcll
pop
out
push
fildll
mov
js
ror
mov
repnz
and
fsubs
in
ret
loope
lret
icebp
push
or
lcall
lods
mov
pushf
pop
mov
cmp
in
hlt
mov
xchg
nop
inc
mov
popa
stc
in
pop
or
imul
into
out
xchg
pop
jle
jne
or
push
jns
movsb
hlt
sub
and
jg
lret
in
aas
test
lahf
fdivrl
loopne
movsl
inc
xor
addr16
sbb
ror
adc
out
enter
xlat
rol
inc
sahf
cld
xor
lods
mov
push
faddp
clc
mov
mov
shl
in
push
jge
push
in
mov
enter
adc
inc
outsl
shll
ds
call
pop
cwtl
cmpsb
cmp
jns
xchg
arpl
adc
insb
lods
rcll
fsts
xor
xor
testl
aaa
lods
notb
cwtl
repnz
mov
pusha
adc
mov
jmp
cld
dec
jae
xchg
loopne
test
stc
repnz
test
cmpsl
js
insb
lds
dec
xchg
jle
in
pop
push
lcall
fidivl
xchg
pop
cltd
push
xorb
mov
pop
cmp
sbb
movsl
lcall
mov
add
jmp
jns
mov
test
adcl
xlat
xor
xchg
bound
push
jecxz
rolb
mov
cmpsb
xor
mov
mov
cld
repnz
pop
push
out
lss
dec
fwait
test
stc
test
cmpsb
imul
jge
dec
ficoms
sbb
test
sub
ret
cld
repnz
cmpsl
lret
mov
dec
dec
fstpt
scas
cld
dec
lds
and
andl
repnz
sub
or
rcl
fsubs
and
lret
fstl
call
in
mov
ret
ret
in
push
pop
aam
sbb
mov
push
adc
lea
push
pop
jns
test
xor
pop
push
mov
stc
in
and
xchg
jge
jle
lds
dec
repnz
das
call
in
xchg
aam
push
int
and
das
mov
sub
or
cld
repnz
fidivs
jo
rcrl
inc
inc
std
adcl
in
test
adc
in
mov
pop
sbb
jae
stc
inc
pop
divl
scas
mov
dec
outsb
call
scas
mov
jle
mov
ret
mov
adc
filds
jecxz
dec
mov
jle
in
inc
jmp
repnz
cmp
cltd
pop
rcr
pop
adc
or
mov
lods
mov
mov
mov
nop
xchg
hlt
xchg
das
stos
adc
add
sbb
mov
jp
ret
mov
test
xchg
lds
adc
xchg
pop
jle
ja
fistpl
sbb
mov
movsb
faddl
adc
gs
enter
pop
mov
xor
sbb
repnz
mov
fstps
dec
or
nop
popa
mov
ret
cld
sahf
xor
mov
jns
xchg
mov
pop
nop
xchg
jo
cmp
in
push
mul
xchg
push
pop
mov
clc
dec
cmp
jg
andl
or
inc
sarl
pop
jns
int
test
or
dec
mov
cmp
lods
mov
xor
xchg
adc
cmp
jg
lret
das
mov
rorb
fimuls
repnz
push
cmp
out
mov
lods
jnp
mov
andl
or
and
repnz
das
mov
scas
push
in
dec
sti
out
and
pop
lods
repnz
pop
sub
sarl
and
mov
shrl
xchg
xchg
jne
mov
repz
movsb
repnz
mov
sbb
stos
addr16
adc
pusha
jmp
filds
pop
cli
pushf
test
in
das
mov
movsl
popa
sub
icebp
fiadds
arpl
in
pop
jg
sub
push
pop
jno
mov
mov
call
enter
out
dec
or
iret
lret
mov
popa
sbb
hlt
push
adc
mov
push
stc
cli
inc
add
xor
fmull
or
jnp
filds
insl
in
xlat
inc
mov
addr16
notl
loopne
imul
fidivrs
xchg
pop
jle
lods
cld
or
in
mov
inc
or
add
repnz
loope
lea
lret
adcb
mov
cmp
mov
in
out
incl
pop
mov
xchg
pop
jle
sbb
add
mov
shrl
jp
das
dec
dec
sbb
nop
jmp
mov
and
scas
mov
jne
sbb
sub
inc
cltd
hlt
jp
scas
mov
out
cmp
pop
inc
rcr
repnz
and
repnz
test
jae
mov
pop
stc
add
sarl
mov
jl
pop
lock
jns
loopne
lahf
mov
rcr
test
daa
and
cmpsl
xchg
mov
xor
xchg
negl
in
xchg
shrl
mov
xchg
push
jge
xor
dec
mov
cwtl
js
xchg
push
pop
mov
mov
das
repz
mov
clc
xchg
push
pop
jns
dec
mov
stos
mov
clc
in
enter
movsb
mov
fstpt
in
push
int
push
jo
pop
sbb
inc
push
pop
jns
inc
fiadds
je
jns
fwait
sub
push
in
mov
mov
dec
mov
pop
orb
fbld
stos
cmpsl
xchg
notb
dec
cmp
into
lods
es
pushl
stc
in
pop
addr16
sub
push
or
xchg
pop
jle
xor
mov
inc
or
pusha
xchg
pop
jle
ret
pop
cmpsb
add
sbb
in
fnstenv
pop
movsl
in
inc
cmp
sti
stos
rorl
in
jl
adc
jns
int3
cmp
jp
push
shr
and
or
fists
movswl
sbb
jecxz
or
leave
pop
cmp
imul
and
dec
push
adcl
adc
jle
jecxz
jbe
push
sub
in
push
aad
push
sbb
loop
push
pop
fwait
enter
cmp
outsb
add
xchg
cltd
jb
inc
popf
sbb
xor
jnp
fs
mov
mov
in
pop
jmp
xchg
outsl
jae
in
cmc
lods
mov
stc
ljmp
mov
jns
or
orb
push
pop
push
in
push
pop
mov
test
in
push
pop
and
sti
test
outsb
sbb
cli
xchg
push
pop
jns
rcrb
stc
add
loope
lret
pusha
mov
dec
add
repnz
int
cmp
std
and
mov
int3
test
pop
aad
push
es
xchg
ret
out
popw
movsb
repnz
out
movsl
jae
mov
mov
scas
mov
ss
or
mov
dec
xor
xor
jg
notl
cltd
and
pop
push
pop
jns
jb
call
sub
jnp
into
pop
pop
jns
xchg
push
movsb
and
loopne
push
movsl
add
jae
fsts
mov
add
scas
jne
push
pop
jns
mov
jge
push
subl
cmpsl
imul
adc
push
push
in
pop
and
test
stos
mov
push
mov
xchg
ds
es
push
mov
jmp
in
fwait
pop
testl
xchg
pop
decb
and
cmp
push
es
repz
push
ret
pop
ds
fdiv
in
push
and
inc
scas
push
in
or
das
mov
mov
outsl
xor
mov
lret
sub
jle
ja
inc
out
inc
jge
adc
ja
ret
lods
sbbl
out
add
pop
out
in
ret
add
test
repnz
int
xor
aaa
ret
inc
xlat
ficomps
xor
movsb
pop
dec
insl
in
lock
xchg
push
and
stos
dec
decb
sub
cmp
pop
fsubrs
sti
loope
movsl
mov
pop
lahf
in
jmp
stc
in
scas
push
xor
cmp
add
daa
add
push
sub
mov
ficomps
jmp
jmp
pop
outsl
push
pop
jns
test
mov
bound
gs
in
sub
jnp
arpl
xchg
pop
inc
and
pop
xchg
lds
add
rcrl
and
inc
fcompl
pop
cltd
sub
mov
fistps
imul
mov
stc
in
pop
incb
test
movsb
and
mov
push
neg
xchg
sarl
movsb
daa
push
in
jg
mov
shlb
or
in
inc
pop
lcall
popf
mov
pop
xor
jle
in
loopne
gs
cmp
jmp
orl
ljmp
cmpsl
scas
mov
inc
call
xchg
pop
jge
or
sti
cmpb
loope
xorl
pop
jle
in
adc
sub
jl
cmpsb
mov
push
jl
in
mov
pop
lods
lea
jb
inc
ret
push
fidivrl
pop
popf
int3
pop
xchg
push
ficoms
jns
jno
and
test
push
pop
jns
in
les
sub
repnz
and
sub
sbb
mov
scas
mov
stos
loopne
pop
xchg
cmp
aas
repnz
push
or
pusha
ljmp
mov
pushf
ljmp
fsubl
lcall
test
xor
test
rcr
lods
sub
repz
jmp
jb
hlt
fstpl
pop
pop
jns
ljmp
lret
push
mov
out
repnz
xchg
add
test
in
pop
repz
pop
push
repnz
mov
cli
out
iret
sbb
push
inc
iret
push
mov
xchg
or
mov
xchg
cmp
pop
fs
mov
pop
jns
hlt
sbb
cwtl
int3
xchg
push
lock
in
mov
sub
out
bnd
inc
test
pop
jns
fs
data16
mov
fidivl
jmp
test
cld
or
sbb
mov
mov
or
jl
lret
or
mov
xor
mov
mov
lret
jle
mov
jmp
pop
repnz
sub
in
imull
stc
mov
loopne
jle
push
jg
and
cmc
mov
add
test
cmp
and
cmpsb
pop
inc
xlat
movsb
or
sub
mov
sbb
pop
lds
test
xor
push
xchg
jnp
pop
out
addl
std
jecxz
jl
scas
mov
sub
and
pushf
das
xchg
outsl
mov
aam
bound
data16
into
icebp
xchg
repnz
dec
xchg
aam
xor
add
clc
ja
push
mov
add
sti
sbb
xchg
hlt
cld
pop
mov
fimuls
mov
pop
imul
lret
mov
push
sub
scas
movb
fldcw
pop
outsl
dec
jbe
lret
or
mov
ficomps
and
and
mov
pop
sub
loop
fistl
je
loopne
sbb
enter
mov
and
sbbl
pop
jmp
mov
in
push
es
jle
in
mov
or
cmp
fwait
sbb
les
cs
in
cmpsl
fistpll
rol
push
adc
and
fsubp
xchg
pop
jle
dec
pop
xor
sbb
jle
ficoml
inc
mov
and
jl
in
and
pop
mov
in
addr16
pop
std
mov
rolb
and
loop
in
pop
jle
pop
xchg
adc
pop
and
mov
xorb
insl
mov
pop
sarl
repnz
mov
arpl
pop
int
lods
lock
fadd
inc
mov
loope
pop
stc
mov
test
and
scas
mov
repnz
xchg
add
sub
ret
mov
scas
push
insl
dec
out
adc
jg
scas
mov
popfw
fadd
cmpsb
orl
repnz
cmpsl
adc
inc
xchg
call
sbb
jecxz
lcall
jns
sbb
addr16
hlt
and
sub
pop
jns
xchg
addb
sub
push
xor
push
iret
dec
push
mov
repz
mov
pop
sub
xchg
push
scas
mov
out
repnz
mov
imul
jno
icebp
and
lret
das
mov
cld
inc
bound
inc
das
mov
mov
lahf
pop
pop
setge
cld
repnz
xlat
mov
adc
addb
aaa
outsl
mov
and
mov
jl
out
mov
fists
mov
dec
rcrl
xchg
inc
pushf
repnz
das
call
nop
dec
dec
inc
pushf
mov
push
add
arpl
inc
mov
out
xor
cli
xor
jne
jle
in
pop
fwait
push
dec
sub
frndint
repnz
and
inc
or
add
mov
mov
xor
xchg
gs
pop
inc
pop
stc
lahf
pusha
xor
xchg
int3
aas
scas
mov
bound
jp
mov
icebp
enter
inc
gs
xor
or
dec
sub
das
mov
push
mov
jnp
jl
mov
das
imul
andb
stc
mov
or
sbb
in
scas
mov
mov
scas
adc
cmp
pop
sbb
push
fimuls
lahf
jnp
jbe,pt
dec
cltd
add
fcomps
in
negb
xchg
sti
push
push
push
in
test
imul
in
push
das
pushf
scas
nop
pop
mov
mov
pop
mov
loop
ret
scas
jns
xchg
aaa
cltd
jle
fwait
in
pop
ret
setl
in
push
pop
popa
fs
stos
stos
shrb
push
test
push
pop
jns
cmp
pop
arpl
dec
roll
jns
adc
mov
mov
fisubl
outsl
mov
pop
xor
popf
or
lret
test
orl
out
jae
lret
je
fnsave
push
enter
cwtl
add
out
cmp
sub
mov
stc
std
add
imul
cmp
decl
sub
mov
dec
jnp
mov
lods
aas
out
cmp
and
xchg
outsl
aas
test
jg
pop
jns
rorb
aam
cs
push
imul
in
lods
fidivs
inc
nop
mov
xchg
xchg
jg
stc
in
pop
cs
mov
pop
xlat
in
push
jmp
mov
xchg
mull
imul
mov
jne
inc
pop
stos
cmp
xchg
lret
inc
jo
mov
jmp
into
stc
enter
mov
inc
outsl
ljmp
push
jge
out
push
mov
cmpsl
std
sbb
nop
addr16
stc
in
pop
and
repz
xor
es
in
pop
jle
into
cld
lods
or
popf
xchg
pop
jle
jb
push
or
add
stc
in
mov
fucomp
pop
into
add
loopne
jns
jmp
lock
std
das
in
push
pop
xor
push
pop
out
xchg
xchg
push
pop
jns
and
into
hlt
xchg
cwtl
xor
repnz
xor
das
lret
mov
push
rcll
mov
push
push
jne
sti
adc
in
xchg
divb
rcrb
inc
lock
repnz
dec
out
or
and
sbb
pop
in
ja
rcrl
test
xchg
jo
lods
je
stos
sub
xlat
mov
mov
dec
std
xchg
and
lret
mov
cmpsb
pop
loop
inc
mov
sbb
ror
popf
pop
push
xchg
pop
std
add
lock
mov
pop
negl
add
lods
mov
or
fs
movsl
lahf
in
imul
popa
sahf
xchg
pop
jge
bswap
std
xlat
xor
add
push
rorl
jnp
mov
daa
inc
fsubrl
loope
repnz
das
xchg
cltd
push
dec
fsubrl
enter
imul
inc
mov
mov
sti
mov
es
stos
lahf
cmc
mov
mov
mov
mov
inc
fwait
es
push
cmp
mov
ss
aas
loopne
das
cld
repnz
or
add
xor
sahf
cmp
stos
gs
jge
pop
dec
sub
or
ja
shlb
repnz
lock
mov
or
jne
sbb
or
push
std
cmp
pusha
test
mov
dec
or
decl
sbb
aaa
in
adc
push
cld
repnz
jmp
add
adc
sbb
or
inc
cmp
xchg
jge
repnz
scas
mov
and
stos
xor
addl
pop
aad
jo
sub
add
repnz
fs
xor
inc
pusha
xchg
pop
scas
push
jns
ss
test
in
jb
into
pop
insl
adc
sti
in
xor
cmc
bound
xchg
ret
xchg
lahf
lea
sbb
mov
repnz
das
dec
cmpsl
jl
ret
repz
inc
lods
jns
push
lret
das
mov
scas
cmp
sbb
das
mov
mov
scas
out
inc
jge
xchg
jnp
push
push
cmp
sub
push
jmp
mov
dec
sub
scas
sbb
mov
jb
pop
ret
mov
enter
shlb
vpmacsdqh
sub
and
xchg
pop
jg
push
ds
lret
aaa
aas
fidivrl
add
xchg
aaa
adc
mov
inc
imul
jle
in
lods
out
and
mov
mov
mov
imul
jge
add
lret
in
mov
rorb
push
xchg
sub
fs
pop
lret
push
jmp
sub
push
dec
test
mov
lds
mov
adc
pop
push
fwait
mov
sbb
jmp
pop
sub
or
jecxz
repnz
das
or
hlt
jl
mov
dec
xchg
lret
das
mov
cmp
mov
mov
mov
repnz
cld
jbe
mov
das
mov
dec
xchg
stc
mov
aas
xor
mov
push
outsl
mov
xorb
jns
xor
dec
stc
repnz
mov
ljmp
push
les
stc
jge
xchg
sub
lret
das
pop
jecxz
clc
insl
xor
rcr
xchg
add
dec
or
mov
shrl
cld
xlat
lock
lcall
fsubrs
mov
cs
mov
xor
push
repnz
loope
enter
adc
cld
mov
adc
cld
repnz
das
sbb
jbe
inc
mov
icebp
repnz
das
mov
test
imul
das
mov
stc
loopne
pop
cmp
add
repnz
push
js
dec
inc
mov
cmc
sbb
lret
or
adc
lods
fiadds
in
shrb
xchg
arpl
xor
xchg
push
push
pop
add
inc
xor
xchg
js
jmp
mov
jmp
ss
pop
jle
in
inc
ljmp
or
stc
in
stc
in
fmuls
sbb
xchg
loope
jnp
sar
xchg
pop
lods
sbb
ds
sub
testb
mov
and
std
mov
arpl
fwait
mov
cld
cmp
lods
mov
sbb
push
neg
push
mov
scas
incb
pop
daa
mov
mov
call
jns
notl
add
pusha
xchg
mov
adc
and
ds
repnz
ss
jg
mov
aad
sub
dec
nop
std
sub
and
inc
fcmovne
pmuludq
mov
sub
repnz
out
hlt
sub
sbb
jnp
repnz
mov
ror
es
popf
and
add
and
and
lods
repnz
pop
sbb
stos
xor
mov
inc
mov
imul
mov
nop
in
pop
scas
pop
jle
in
inc
shll
jl
test
mov
jle
in
les
out
lea
test
imul
in
pop
xlat
or
cmpsb
aaa
push
aas
mul
xchg
pop
jle
mov
test
out
imul
cmpsb
bnd
jle
testb
pop
sbb
push
scas
dec
mov
mov
adc
sti
inc
arpl
scas
mov
pop
add
fwait
sbbl
cld
repnz
and
dec
adc
ja
dec
xchg
mov
mov
add
adc
pop
stc
repnz
pop
push
loopne
pop
or
inc
sub
cmpsl
das
mov
imul
dec
push
stos
xor
mov
rcrl
jb
push
mov
cld
repnz
imul
scas
out
cld
daa
daa
stos
sahf
cld
repnz
das
scas
mov
mov
mov
sbb
loope
push
and
sti
xchg
pop
jle
arpl
scas
and
jb
sub
pop
mov
cmpsb
fiadds
sub
push
outsb
jns
xchg
push
push
call
xor
fists
or
mov
and
mov
pop
cli
enter
add
inc
adc
in
push
cmc
shlb
push
bound
push
or
push
pop
fs
cmc
adc
push
int
or
aam
shlb
mov
fwait
push
pop
jns
mov
popa
pop
scas
xchg
dec
das
fsts
rolb
mov
cmpsb
jo
cmp
xor
in
and
clc
iret
and
xchg
cmp
jle
in
inc
enter
std
xor
cld
imul
pop
popa
adc
add
mov
push
sub
ds
decb
cmp
lds
adc
enter
negb
adc
sub
sahf
sbb
int
mov
push
mov
adc
arpl
jnp
lret
or
das
mov
xor
jns
pop
jns
push
ss
mov
mov
stos
nop
hlt
stc
jb
xchg
inc
jge
imul
push
sti
xchg
in
add
ret
mov
ds
in
add
jo
ds
push
ljmp
cmpsb
jmp
lods
adcl
ficomps
sbb
xchg
in
pop
pop
jns
xchg
outsl
mov
dec
push
jp
xchg
int
jns
xchg
push
mov
sbb
mov
test
shll
xor
repnz
adc
aaa
push
xlat
mov
nop
pop
das
push
repnz
repnz
das
mov
rorb
rcr
pop
stc
fcmovnu
int3
add
mov
in
push
test
push
mov
ljmp
mov
movsb
mov
aam
sbb
sub
sub
aas
repnz
data16
faddp
inc
sub
dec
cmpsl
pushf
push
inc
repz
push
stc
in
xchg
xchg
or
ljmp
fildl
xor
in
fs
mov
arpl
xchg
pop
adc
add
sub
dec
dec
pop
in
pop
jle
std
test
push
inc
pop
outsl
or
pop
jle
in
and
cmp
imul
xchg
pop
call
in
xor
jp
add
stc
in
adc
xchg
mov
mov
into
cmp
sub
or
pop
ret
cld
pop
cmp
xor
mov
mov
push
popf
inc
pushf
jge
sub
adcb
mov
push
xor
sahf
lcall
xor
mov
push
xchg
mov
inc
mov
iret
inc
in
in
lret
mov
cwtl
mov
pop
subl
sub
repz
aas
push
or
xchg
pop
jle
sbb
setbe
ds
int
das
cmp
push
cmp
popa
mov
sbb
mov
and
mov
loope
test
scas
jg
push
stos
mov
push
jg
lret
mov
push
ret
imul
ret
xchg
mov
mov
cmpsl
jns
xchg
mov
shlb
shll
push
fisubl
xchg
push
pop
ret
andb
rclb
repnz
jne
fcomip
and
sbb
pusha
in
xchg
cmp
xlat
test
das
ds
andl
into
test
mov
leave
mov
stc
repnz
stos
jmp
push
test
mov
xchg
rorl
push
movsl
inc
cmp
repnz
das
jns
idivl
push
or
std
push
sahf
cld
repnz
cmc
jle
mov
push
push
sahf
inc
out
in
aaa
xchg
sub
std
and
xchg
push
pop
jns
mov
lcall
pop
xor
push
pop
jns
dec
jg
jo
std
pusha
out
push
lret
test
mov
cli
nop
orl
pushf
mov
insb
in
push
jmp
iret
repnz
dec
adc
popf
dec
cli
lret
mov
scas
mov
add
mov
xchg
pop
outsb
out
xlat
rorb
aas
les
rorl
cltd
lcall
movsl
daa
push
sahf
mov
ja
pop
insb
adc
pop
jns
mov
loop
xor
je
in
addr16
pop
insb
loopne
jg
push
in
mov
mov
xor
cmp
inc
scas
xor
or
jge
sub
shl
addr16
sbb
test
mov
fsubrl
insl
cmp
and
repnz
fisubs
call
repnz
sbb
fwait
and
enter
and
dec
out
sti
daa
cmp
das
out
sub
pop
jns
push
fmuls
fs
pusha
fs
adc
add
mov
mov
fwait
js
mov
mov
pop
aam
ja
xchg
ficoml
and
enter
cwtl
add
rorb
in
hlt
cmpsl
fxch
jmp
fmul
cmp
stc
sbb
add
jl
fdivr
dec
jge
enter
stc
in
popf
add
mov
pushf
ja
aad
cmp
jnp
xchg
rcr
push
pop
inc
mov
cmp
mov
movsb
enter
adc
mov
sub
push
ret
clc
cmp
fimuls
aam
ficompl
xchg
cld
or
cli
dec
in
imul
or
mov
lds
sub
aas
rorl
and
movsb
pop
add
sbb
sbb
push
sub
sahf
shlb
adc
adc
sub
sbb
mov
sbb
pop
cmp
xchg
jg
jns
push
pop
jge
jg
hlt
adc
out
sub
jl
push
lods
and
adc
imul
pop
stc
repnz
push
shlb
xchg
push
ficomps
and
cli
ret
jp
add
jns
icebp
ja
cmp
sbb
sbb
push
push
pop
sbb
stc
lret
mov
icebp
mov
rorl
mov
add
push
bound
mov
popa
inc
out
cld
repnz
das
cmp
add
add
mov
sahf
fcoml
mov
mov
mov
add
mov
cwtl
cs
and
cld
repnz
push
loope
pop
stos
andl
mov
sub
jecxz
jge
fistpl
push
cmp
jl
lcall
shll
xchg
das
mov
rep
inc
cmpsb
dec
xor
flds
sub
insl
mov
xchg
and
jns
jo
mov
mov
out
loop
int
push
insb
xchg
jbe
xchg
das
and
cmpsb
sbb
jne
lret
and
sub
outsl
mov
cld
jnp
lret
leave
ficompl
call
repz
sbb
lret
das
adc
jo
es
movsb
mov
adc
dec
dec
clc
mov
in
mov
lds
mov
bound
in
test
push
inc
push
inc
addr16
push
out
push
mov
mov
in
xchg
pop
xchg
fwait
insl
loopne
aaa
xor
mov
enter
mov
lods
ret
aas
push
add
jle
in
aam
push
mov
movsl
or
pop
cld
mov
push
ds
sub
aad
adc
cmp
addb
jns
xchg
daa
inc
pop
dec
lret
mov
pop
test
in
push
je
fs
push
mov
pop
enter
xchg
mov
mov
rorl
push
pop
stc
repnz
add
andb
push
ficoms
mov
int3
mov
cwtl
lahf
cmp
add
jge
in
andl
pop
jns
sub
clc
adc
into
jmp
sbb
test
jno
inc
adc
cld
stos
sbb
test
nop
sbb
add
iret
fwait
js
inc
fsubs
lret
das
mov
sbb
stc
cmp
sti
sahf
mov
fstps
mov
jl
fbld
ja
sbb
push
in
sarb
add
testb
push
aam
sarl
xchg
das
nop
call
mov
pop
lret
mov
push
cwtl
into
les
cmpl
sbb
out
adc
aaa
lret
inc
push
pop
mov
cmc
jns
rolb
stc
in
push
inc
mov
mov
in
add
xchg
scas
fistl
pop
inc
mov
shlb
mov
cld
adc
popa
inc
scas
mov
jnp
ret
sbbl
lea
mov
xchg
das
lcall
loope
jae
test
pusha
push
inc
mov
enter
out
xchg
andb
dec
sarb
pop
dec
fldl
stc
in
jl
lock
and
insb
and
enter
bnd
mov
aad
lret
das
mov
loopne
call
jg
rcrb
xchg
das
mov
daa
lret
cmp
in
xor
dec
out
cltd
inc
or
or
ret
jnp
add
push
repnz
and
dec
jne
enter
sub
out
dec
add
or
dec
push
sub
imul
jle
pop
xchg
nop
scas
mov
cmp
repz
into
in
dec
test
lock
mov
push
mov
lds
scas
mov
imul
fisubrl
xchg
or
dec
mov
mov
mov
out
lea
cmp
mov
repnz
lods
dec
mov
mov
das
call
test
int
fcoml
shlb
mov
pop
loop
push
mov
repnz
pushl
cli
cmp
cmpsb
scas
outsl
lods
inc
repnz
das
pushl
ds
and
das
mov
xchg
into
ret
scas
or
inc
das
mov
fbstp
shl
shrl
pop
rolb
lret
adc
sti
imul
cli
jno
les
mov
lea
emms
addr16
notl
dec
imul
push
out
mov
popf
test
adc
cld
jnp
lcall
jmp
je
mov
das
ljmp
insl
fisttpl
add
pop
jge
sbb
pushf
popf
mov
jnp
lret
mov
and
pop
cmp
push
mov
out
aas
or
stc
in
rolb
cmp
xchg
mov
andb
cmp
push
js
mov
repnz
das
add
stos
loope
popa
sub
repnz
das
mov
into
or
xor
stc
jl
lret
das
mov
sub
bound
jbe
sbb
repnz
lret
xchg
imul
pop
add
jge
lret
adc
mov
push
pop
cmpsb
addl
repz
xorl
adc
das
adcl
aaa
cmp
loopne
jle
negl
add
lds
pop
adc
in
pop
sbb
xchg
fs
and
sbb
adc
cwtl
sti
xor
inc
adc
push
popa
cvtpi2ps
xor
in
xchg
imul
and
xchg
dec
sahf
adc
in
in
push
xchg
add
sub
xchg
jl
in
push
pop
in
fildll
inc
dec
andb
jns
lahf
dec
ds
xchg
je
cmpsb
rorl
sarl
in
in
ret
inc
into
mov
xchg
push
fdivp
movsb
cltd
cmpsl
add
insl
mov
push
pop
jns
mov
sbb
in
pop
adc
xchg
push
pop
jns
lcall
lret
orb
cld
jb
xchg
sub
into
je
mov
mov
enter
stos
xorl
sti
out
or
nop
xchg
mov
mov
or
and
lret
sub
pop
pop
sahf
push
xor
iret
mov
or
mov
pop
addr16
lahf
cltd
sahf
dec
add
lret
das
mov
stos
repz
jo
add
repnz
je
fnsave
pop
xor
jo
mov
xchg
adc
xchg
and
sbb
cld
repnz
das
aaa
mov
mov
jns
in
xchg
xchg
das
mov
cmpsb
sbb
pop
jmp
fstpl
sub
mov
bound
add
dec
aas
stc
add
mov
cmp
xchg
pop
push
ret
lahf
out
ficomps
push
test
jge
and
mov
sbb
xchg
lods
das
mov
fidivl
inc
je
adc
repnz
mov
movsl
punpckhwd
sub
loopne
and
jo
inc
iret
fsub
mov
or
jns
sbb
sarb
pop
and
rcll
sahf
lock
jns
jge
mov
mov
add
in
pop
in
fbld
push
pop
add
mov
pop
loopne
sbb
xlat
movsb
add
repnz
aas
aam
pop
xor
jns
xchg
ja
xchg
scas
lret
push
repnz
enter
xchg
pop
dec
mov
push
mov
lret
xlat
push
jmp
or
fs
jns
xchg
push
shrl
push
cmp
jno
in
push
pop
in
push
inc
lea
outsb
ficompl
sub
pop
jns
xchg
jg
arpl
or
incb
in
mov
mov
mov
repnz
das
jmp
aam
or
pop
ret
decb
xchg
pop
jle
std
mov
dec
cld
int3
sub
jle
in
xchg
sub
adc
or
jle
in
inc
imul
inc
inc
fnstsw
adc
in
pop
cmovno
and
int3
nop
fwait
in
pop
jle
dec
xchg
mov
lret
add
dec
fstpt
mov
enter
jle
in
inc
into
shrl
les
mov
xor
xchg
test
hlt
add
jg
lret
call
sub
add
push
test
mov
in
pop
xor
in
scas
in
das
in
pop
jle
faddl
arpl
ret
scas
ja
inc
jle
mov
pop
test
ret
inc
adc
gs
leave
sbb
push
pop
jns
xchg
es
mov
enter
jns
xchg
daa
pop
xor
popf
mov
and
xor
iret
inc
pop
lcall
pop
jns
mov
gs
mov
hlt
adc
in
lret
cwtl
rorl
pop
adc
jns
xchg
push
in
mov
scas
rclb
in
push
pop
fwait
out
lods
add
add
mov
jns
sub
iret
push
jnp
pop
xor
jg
xchg
and
xchg
or
push
data16
jnp
lret
test
cmp
jmp
in
jg
mov
mov
xchg
pop
jle
ja
mov
stos
jg
ljmp
jle
in
pop
mov
insl
pop
out
ret
jle
in
jl
sub
pushf
cld
fimuls
push
sbb
jg
xchg
pop
notb
data16
or
and
pop
jmp
fdivrl
sbb
stc
in
jne
scas
mov
cmp
aad
cmpsb
stc
in
pop
repz
decl
and
push
push
pop
fildll
pusha
stc
jns
xchg
push
jnp
ror
pop
loopne
mov
xchg
push
pop
test
js
hlt
add
into
daa
lds
xlat
rcll
ss
mov
je
inc
mov
mov
int
das
mov
sti
sub
mov
sbb
mov
out
mov
aad
mov
jo
out
xchg
xor
pop
aas
and
or
cs
imul
add
cmp
push
push
lds
lret
xchg
cmp
jns
movsb
adc
rolb
dec
cs
sbb
push
sbb
cmp
pop
js
lcall
pop
push
ja
mov
xchg
and
mov
ds
dec
or
fisttpll
sub
int3
xor
mov
xor
repnz
sti
cmc
jp
aaa
dec
pop
and
sub
push
push
cli
sbb
pop
sbb
out
fwait
shll
and
adc
femms
jmp
pop
fs
fdivr
aas
adc
daa
mov
in
pop
inc
dec
in
xchg
sub
inc
outsb
lock
jle
xchg
pop
jle
and
lret
repnz
daa
das
in
mov
push
mov
mov
gs
jnp
pushf
and
notl
push
jns
cmpxchg
mov
mov
jle
inc
cs
sbb
cmp
adc
pop
jle
lock
cmp
ja
rolb
lods
imul
mov
xchg
or
daa
jmp
and
cmp
in
push
pop
loop
sub
jnp
fnstenv
push
pop
jns
out
out
aaa
add
dec
subb
jecxz
lods
ljmp
pop
fidivl
and
rcrl
xchg
fistpll
std
or
mov
scas
orb
sub
xor
fsts
dec
in
mov
lds
mov
sti
dec
bound
jmp
dec
vunpcklps
and
inc
idiv
in
pop
loop
ss
insl
stos
lcall
xchg
pop
jle
gs
out
fldl
xchg
pop
jle
dec
in
pop
and
es
jp
cmp
in
ds
xor
inc
jnp
mov
sbb
push
cmc
mov
cmp
mov
icebp
enter
jnp
and
das
ds
push
mov
sub
cld
repnz
ljmp
mov
cwtl
cli
in
xchg
mov
push
les
cs
mov
xor
lret
sahf
xor
push
sti
add
test
pop
dec
in
mov
int3
cmp
das
mov
stos
xlat
insb
loope
in
jb
lea
ficoml
mov
lret
mov
pop
orb
sub
ja
rcll
pop
gs
in
mov
ret
sarb
push
fiadds
jp
adc
stos
testl
inc
js
fmuls
sti
inc
sbb
jge
in
int
sbb
push
xor
mov
pop
cmp
leave
and
xchg
mov
pop
inc
pushf
cltd
orl
repnz
test
outsl
mov
dec
cltd
sbb
leave
rolb
jns
scas
mov
push
mov
mov
fildll
push
mov
jecxz
cwtl
ret
nop
lds
and
in
imul
stos
sbb
js
cli
les
dec
push
jbe
hlt
lahf
jo
jns
xchg
push
jae
test
mov
bound
xchg
jg
pop
fbld
pop
divl
jmp
scas
pop
jle
in
mov
aaa
movsb
and
pop
mov
out
xchg
cmp
movsb
xlat
ss
jg
lock
dec
repnz
das
mov
int
pop
ljmp
mov
inc
lods
add
push
das
mov
decb
sub
popf
push
mov
cld
repnz
fldenv
push
push
sbb
insb
outsl
sub
jg
and
dec
stos
aam
loop
jnp
dec
add
scas
scas
xchg
aaa
jno
sub
xchg
adc
pop
jle
hlt
orb
pushf
rorl
inc
jle
in
fwait
xor
mov
stos
mov
daa
sub
addb
mov
xchg
loopne
and
test
mov
adc
xchg
xchg
lods
test
cmc
mov
xchg
xchg
ja
fnstenv
lods
cmp
insb
cltd
sub
dec
ljmp
and
dec
xchg
scas
mov
adc
jle
jo
mov
mov
sarl
mov
and
in
fsubrs
or
enter
adc
in
push
cld
lret
test
mov
sub
subb
shrb
mov
push
loopne
mov
das
sbb
pop
lcall
adc
repnz
jne
scas
shll
push
imul
sbb
repnz
das
mov
gs
mov
les
mov
add
int3
test
adc
insl
std
movsb
repnz
mov
xchg
mov
jge
lds
pop
subb
sbb
test
and
xor
fmul
stc
outsb
enter
xchg
in
je
andl
repnz
and
mov
lret
sub
icebp
hlt
sub
loopne
push
outsl
xor
je
cwtl
or
das
ds
out
and
inc
mov
stc
repnz
jl
mov
lods
dec
sbb
mov
orl
adc
lea
xor
lret
das
stos
test
mov
cld
repnz
mov
into
adc
dec
fldz
mov
shll
adcb
mov
jns
cmp
jnp
inc
xchg
pushf
mov
test
push
cld
push
sbb
adc
pop
jns
inc
lods
inc
sbb
loop
add
pop
cmpsl
xor
stc
in
jg
cmpl
adc
xchg
pop
jle
lods
inc
jg
out
out
lea
sti
inc
ss
sbb
jecxz
fs
xor
leave
test
mov
inc
or
fs
repnz
das
mov
in
pop
push
adc
jle
lret
das
mov
jb
into
push
rolb
ret
loope
test
fsts
scas
mov
mov
lds
lea
sub
out
enter
mov
mov
pop
stc
jecxz
jb
outsl
stos
ljmp
inc
jle
in
insl
jb
jae
push
retw
mov
stc
jl
lret
mov
into
push
shr
lods
and
add
jne
das
mov
mov
out
test
mov
adc
cld
mov
dec
sti
cmp
shll
loope
jmp
outsl
loopne
pop
push
jbe
inc
adcl
jns
or
outsb
dec
cltd
or
enter
std
iret
adc
pop
jg
cli
cmpsl
xor
xchg
pop
jl
lea
dec
sbb
dec
and
inc
adc
lret
sbb
rcll
lahf
xchg
lods
jp
pop
pop
cmpsb
mov
mov
leave
out
jp
mov
mov
out
push
popf
dec
xchg
adc
negl
sub
mov
repnz
lahf
dec
xor
cmpb
out
push
ret
dec
jmp
cltd
or
push
xchg
and
xor
cli
xchg
lds
lret
lods
nop
jg
pusha
not
stos
inc
mov
shrl
mov
jb
xchg
push
aaa
nop
mov
jns
lock
cmp
mov
inc
xor
lret
fwait
cmp
test
and
fnstenv
mov
sar
cmp
bound
in
xor
mov
push
sub
pop
gs
in
mov
mov
ljmp
orl
mov
test
scas
mov
addr16
stc
out
mov
popa
jmp
fs
inc
pop
stos
in
pop
xor
lret
das
lcall
sti
sbb
cmpsb
das
mov
xchg
lods
cli
mov
repnz
popf
cmp
jae
cld
repnz
inc
push
sub
stc
cld
sbb
mov
stc
repnz
das
xchg
leave
and
sub
pop
or
pop
movsb
jmp
xlat
xor
cld
repnz
mov
arpl
lret
adc
xor
in
jg
push
loop
jle
push
pop
cld
cli
shrb
xchg
pop
jle
test
adc
repnz
cmpsb
insl
test
jge
loope
scas
mov
mov
rolb
xchg
sbb
js
stc
in
fsubs
mov
inc
sbb
mov
sti
jg
imul
movb
pop
fwait
and
dec
insl
jge
lods
dec
lret
das
ds
mov
jge
movsb
loop
popa
lea
repnz
fistl
xchg
mov
mov
inc
pop
jnp
lods
xlat
cwtl
clc
push
and
mov
repnz
and
mov
or
mov
mov
pop
aam
movsb
movsb
pop
daa
pop
pop
cmp
xor
mov
fisubrl
loop
jp
inc
or
es
lret
divl
je
cli
in
clc
repnz
or
lret
or
mov
jecxz
lret
mov
xorl
mov
xchg
mov
imul
mov
mov
pop
push
xorb
lods
loope
push
loop
leave
lret
mov
or
std
sub
inc
push
lret
pusha
cli
mov
enter
pop
add
sub
mov
mov
cs
jns
out
mov
push
gs
push
mov
test
sahf
adc
imul
mov
pop
jns
cmp
mull
adcl
roll
outsl
xor
pop
xor
cmpsl
xchg
push
jb
dec
adc
sub
jbe
and
adc
insl
add
mov
mov
repnz
ja
mov
jbe
imul
test
scas
mov
fimull
fbld
jge
jle
mul
mov
lds
pop
xchg
leave
shll
adc
imul
lahf
add
push
fcomp
mov
dec
scas
mov
dec
andnps
jo
mov
repnz
enter
repz
push
mov
gs
or
das
mov
mov
fdivrs
dec
scas
mov
pop
movsl
mov
fs
xchg
mov
and
jns
pushf
cmpsb
jb
or
leave
xchg
lods
mov
int3
and
lret
aas
xchg
jg
sub
dec
aas
bound
ret
scas
mov
frstor
sbb
jo
repnz
ljmp
mov
mov
sub
lea
scas
iret
in
dec
cmp
and
js
stos
cmp
and
ds
imul
pop
jns
xchg
push
pushf
jno
jae
xor
cmp
adc
ljmp
jbe
mov
sahf
rclb
mov
jl
mov
xor
cltd
cmp
adcb
or
in
neg
xchg
and
or
mov
and
in
push
iret
and
mov
enter
pop
pop
mul
add
fldcw
fsts
ret
lock
nop
mov
pop
mov
cmc
enter
sub
ss
popa
sbb
pop
inc
fsubrs
repnz
mov
lock
or
push
stc
mov
dec
pop
sti
mov
jae
test
xchg
mov
cmp
cmp
out
stos
lahf
movsb
repnz
inc
loop
mov
xor
enter
pop
and
mov
test
adc
sub
sar
xchg
cmp
cli
stos
push
hlt
mov
in
pop
jle
cmpb
mov
lea
add
repnz
sarl
pusha
scas
es
in
jle
jb
pop
sub
ftst
xchg
pop
mov
ljmp
add
fmulp
jp
cmp
test
push
ret
movsl
inc
xchg
mov
dec
fiadds
sti
das
mov
adc
mov
jnp
mov
mov
repnz
or
nop
xchg
inc
cmp
pop
jl
in
ljmp
add
or
fcmovnb
enter
stos
in
pop
iret
xlat
adcl
mov
fisubrs
xor
xor
dec
cmp
push
jl
adc
repnz
movq
mov
aam
cmp
faddl
lds
mov
add
insb
mov
stc
in
jg
popa
aas
lods
nop
mov
push
clc
push
in
pop
jle
sbb
scas
adc
aaa
dec
insl
dec
out
dec
jl
xchg
out
xor
jns
cmp
add
lods
cmc
in
jno
pop
icebp
insl
push
inc
filds
mov
les
shr
adc
repnz
enter
roll
sub
lret
mov
push
sti
hlt
pop
sub
mov
enter
cld
xchg
inc
xor
jns
cmp
push
loopne
or
inc
mov
mov
xchg
shrb
cld
repnz
jno
daa
cmpsb
imul
sbb
push
push
xor
jno
pop
shlb
jns
popf
std
push
bnd
lcall
pop
or
jmp
push
cmp
lret
pop
cmp
mov
adcb
pop
and
mov
pop
dec
int
xchg
fdivrs
pop
fildll
mov
pop
addb
mov
mov
xor
sbb
jge
push
test
pop
xor
jg
inc
adc
lret
bound
repnz
sub
sbb
pop
push
sarb
xor
add
lods
repnz
ret
daa
push
lods
sbb
ds
sub
mov
lock
inc
das
mov
mov
repnz
fidivrs
frstor
mov
enter
test
adc
jmp
jle
aaa
in
dec
imul
lea
aaa
xchg
jl
inc
scas
xor
sub
push
mov
pop
ds
adc
stc
pop
lret
or
rcrl
into
sti
in
sahf
sub
scas
xchg
mov
mov
inc
dec
decl
leave
mov
jmp
xchg
ja
xlat
mov
rorl
cld
repnz
insl
mov
mulb
xchg
ss
je
hlt
xchg
lods
andb
mov
scas
mov
pop
cwtl
pop
mov
jle
loopne
jno
lret
adc
lods
jge
sbb
cmp
dec
xor
cmpsl
mov
lret
das
mov
outsb
xor
xchg
js
mov
cld
repnz
gs
jo
out
enter
mov
repnz
jo
mov
xchg
mov
icebp
enter
push
scas
or
enter
cmp
mov
adcl
ds
out
xor
jmp
mov
cmp
mov
mov
and
cli
loop
cld
repnz
das
jae
dec
outsl
sub
jnp
xchg
jg
roll
xlat
inc
adc
and
stc
lock
insl
push
fsubrl
pop
jle
in
cmpsb
sahf
xchg
std
nop
repz
sbb
call
dec
incl
mov
cmovs
pop
and
xor
repnz
test
and
das
jp
xchg
das
ds
notl
data16
jmp
cli
dec
cld
repnz
es
jb
and
movsl
push
xchg
push
fiadds
or
xor
aam
push
pop
jns
pop
les
xchg
mov
pop
mov
in
lahf
xchg
arpl
mov
dec
inc
and
jnp
pop
fs
mov
mov
mov
adc
fiadds
mov
cmpsb
imul
sarl
cmc
xchg
xchg
and
lret
mov
or
leave
push
out
fmuls
and
sub
xlat
push
cmp
lea
or
jle
xchg
push
pop
in
cltd
mov
push
add
push
pop
jns
int3
loope
std
cli
ljmp
stc
in
in
imul
in
cmp
pop
into
stc
in
pop
mov
mov
push
sti
in
pop
jle
or
pop
sbb
mov
mov
and
push
pop
jns
dec
dec
popa
push
push
adc
sbb
xor
in
addr16
jbe
lea
mov
pop
dec
pop
cmc
dec
or
popf
inc
push
jg
out
adc
ds
and
out
xor
in
mov
and
xchg
and
adc
xchg
push
pop
push
mov
and
inc
or
gs
jle
ja
mov
push
int
lock
cmp
jle
in
inc
add
pop
mov
jge
cli
enter
sub
test
adc
ret
or
scas
xchg
loop
sub
rol
xor
hlt
cmp
in
stc
in
inc
nop
bound
add
fldenv
dec
fnsetpm(287
xchg
pop
jle
in
cmp
cmpsb
or
add
test
lret
lahf
shlb
in
push
sbb
fwait
cmp
inc
xchg
cmp
sahf
dec
sbb
mov
add
mov
add
lods
jbe
push
in
inc
xchg
fimuls
mov
pop
arpl
or
ds
pop
in
and
cmp
dec
cmpsb
notl
in
ret
add
stc
div
xor
ss
jge
inc
pop
jns
jecxz
push
daa
xor
cltd
dec
jl
xchg
jg
aaa
jne
and
push
lods
rolb
jl
rcl
cmp
push
in
jns
lea
xchg
lods
adc
in
ret
pop
cmc
mov
sub
popf
push
xchg
sub
pop
mov
imul
xchg
outsl
ds
clc
aad
frstor
inc
jle
fnsave
js
jecxz
inc
jge
in
or
nop
inc
outsl
inc
sub
mov
in
pop
adc
mov
cli
cmp
lods
push
inc
mov
sbb
lret
daa
pop
adc
inc
cmp
xchg
gs
xchg
in
repnz
sbb
jmp
xor
icebp
pushf
nop
stc
mov
mov
adc
lods
das
mov
ucomiss
sub
jle
ja
adc
orb
xchg
pop
xor
je
push
repnz
adc
cld
imul
fnstenv
shll
add
mov
or
xchg
notl
inc
cwtl
jge
rcll
std
sbb
dec
ficoms
adc
jns
pop
lods
push
lcall
pop
mov
pop
jns
xchg
addr16
xor
mov
and
lock
sub
push
ret
rcl
push
es
xchg
jns
ret
fidivs
in
push
pop
iret
lahf
push
ljmp
push
xchg
push
pop
jns
or
cld
sbb
call
jns
mov
or
xor
mov
out
cltd
movsb
inc
lock
pop
sahf
mov
das
repnz
jg
fadds
outsb
sarb
push
lds
sub
sub
lret
das
and
inc
stos
testl
mov
mov
aas
xor
mov
pop
jle
dec
imul
cmp
stc
in
mov
pop
js
dec
pop
jge
xor
push
mov
insl
mov
fucomp
dec
sub
mov
sub
es
in
cmp
cmp
shrb
xchg
pop
jle
fdivl
mov
int
pop
xchg
pop
jle
das
movsb
loopne
push
cmp
std
pop
pop
jle
in
stos
and
sbb
sahf
stos
hlt
mov
in
imul
ss
clc
aam
sub
in
pop
and
adc
mov
jl
jg
push
xchg
and
es
sub
mov
push
xchg
lods
enter
push
pop
ds
lcall
pop
shrb
xchg
sub
icebp
mov
add
out
jbe
dec
inc
xchg
stc
into
enter
and
dec
mov
xchg
das
cmc
jg
xchg
mov
and
ja
dec
mov
loop
sub
lock
mov
nop
mov
xchg
pop
mov
or
repnz
mov
scas
ds
mull
repnz
data16
or
push
cmpsl
enter
fistpl
cmp
call
clc
mov
sub
in
aam
into
mov
pop
jns
xchg
and
sbb
sbb
lods
push
xor
jns
xchg
push
mov
cmp
push
push
mov
xchg
push
pop
push
adc
jnp
je
adc
pop
jns
pop
push
mov
pop
lret
and
cmpsl
lods
sub
stos
inc
sub
dec
xor
outsl
inc
add
mov
popf
mov
mov
popa
cli
cmpsl
mov
jmp
sub
roll
jns
xchg
mov
xchg
adc
repz
in
jg
int
jg
xor
loope
lods
mov
cmp
inc
leave
pop
je
ss
mov
das
inc
pop
add
jl
in
pop
pop
repnz
jo
rcrb
jp
mov
pop
jle
bound
cli
cmpsl
add
arpl
std
xor
out
jmp
enter
mov
ficompl
std
scas
jle
inc
jle
inc
pop
push
int
pop
pop
xchg
popa
leave
jns
xchg
mov
dec
jo
testb
jmp
hlt
sbb
pop
les
ret
sbb
push
xchg
push
mov
mov
sarl
jnp
addr16
and
sub
push
pop
ljmp
shll
outsl
and
scas
mov
push
repz
cmp
int
inc
mov
inc
imul
lret
andb
jp
push
ja
mov
lret
mov
mov
xlat
push
push
sub
imul
outsb
les
cmc
mov
scas
mov
dec
pop
pop
hlt
lahf
lret
inc
lcall
cmp
gs
aaa
adc
and
mulb
jmp
lret
mov
sahf
mov
fdivl
dec
sub
xor
pop
push
loop
in
out
in
xchg
mov
add
fwait
push
and
push
ror
xchg
outsl
insb
dec
mov
sti
inc
and
leave
sub
jmp
test
jb
mov
cmp
sti
dec
dec
aaa
mov
and
add
je
movsl
lret
pop
and
mov
inc
cltd
and
mov
mov
sbb
pop
ja
sub
stc
test
adc
js
mov
add
inc
in
pop
jle
mov
jp
xchg
pop
jle
dec
arpl
adc
adc
imul
mov
lcall
cmp
jl
in
imul
cli
lahf
xchg
jo
daa
leave
sarl
xchg
imul
aaa
lock
xor
in
pop
jle
mov
prefetcht1
xor
pop
jle
jnp
in
xor
lret
mov
inc
inc
jge
insb
xor
mov
mov
pop
shll
das
pop
dec
mov
scas
mov
test
pop
adcl
repnz
cwtl
ljmp
in
mov
lret
sub
lea
jge
out
pop
and
stc
data16
xchg
xchg
mov
mov
dec
addr16
push
dec
xchg
repnz
lods
mov
in
cltd
insb
sahf
cmpsb
call
out
lock
out
insl
mov
js
and
inc
je
cld
repnz
jle
out
jge
mov
sbb
es
repnz
das
add
stos
pusha
in
mov
cld
notl
dec
push
pop
cli
std
in
cmp
xor
push
xchg
int
sbb
dec
mov
stc
in
jo
fwait
xorl
sub
ljmp
mov
jl
in
push
pop
stos
xor
jb
pushf
and
sbb
test
mov
pusha
mov
cli
lcall
mov
and
scas
bound
xchg
push
scas
mov
push
sti
std
pandn
cmc
data16
dec
std
movsb
repnz
add
sub
sub
jbe
xchg
pop
imul
mov
imul
pop
loopne
ficoms
loopne
shll
dec
and
lds
std
or
jmp
inc
scas
mov
xchg
ss
xchg
xchg
sarb
lods
lods
mov
clc
dec
std
and
xchg
push
pop
sub
stos
insb
jb
jno
repz
pop
std
adc
test
mov
sbb
in
dec
adc
xor
nop
cmp
xlat
cmp
fdivp
cwtl
pop
outsb
imul
scas
mov
jns
movsl
mov
nop
pop
cmp
insb
or
cmp
lret
mov
adc
test
push
scas
sub
cmp
test
mov
test
xchg
and
out
xchg
repz
sub
test
push
mov
lret
das
mov
mov
lcall
into
xchg
in
mov
icebp
mov
repnz
pop
into
mov
mov
inc
in
das
call
jge
cmp
mov
push
sbb
stc
dec
pop
test
cmp
sbb
loopne
lret
ljmp
cmc
mov
scas
mov
bound
jecxz
sbb
or
pop
push
mov
icebp
pop
imul
and
xrelease
stc
in
in
add
dec
jg
clc
mov
lret
aas
xor
das
ret
pop
lahf
mov
stos
in
mov
mov
xor
das
lcall
and
sbb
cmp
mov
aam
mov
lea
icebp
push
aaa
xchg
push
pop
jns
xor
push
insl
in
add
inc
sar
sti
in
xchg
lahf
cmpb
xor
jge
pop
pop
jle
lret
das
mov
stos
push
lret
push
mov
xchg
jg
cld
adc
dec
cmp
aam
mov
pop
shlb
ret
aam
pusha
stos
int
aas
ficomps
movsb
xchg
xchg
push
sbb
stos
cmpb
sub
push
test
aam
and
cmc
loop
jbe
lret
sbb
cld
aam
addr16
repnz
pop
ret
jb
sbb
add
repnz
das
mov
stos
add
jl
stc
jge
sbb
into
adcb
mov
stc
repnz
pop
out
scas
out
dec
ret
sub
sub
xchg
mov
jl,pt
ljmp
push
pop
jns
cmp
mov
push
fadd
jg
enter
jno
dec
mov
bound
repnz
das
push
jno
testb
fnstcw
pushf
jo
enter
xchg
push
fidivrs
push
jns
lods
test
jle
ja
int3
xor
cmpsb
mov
fs
ds
cmp
ret
sbb
add
lods
cmp
fstpt
push
hlt
aas
imul
inc
ja
ret
jmp
xchg
inc
mov
bnd
push
clc
movaps
popf
xchg
in
and
ljmp
in
push
movsl
in
pop
jle
sub
popf
adc
jbe
xchg
pop
jle
sbb
cmp
addr16
cltd
jp
lret
dec
or
movsl
pushf
mov
xchg
mov
push
std
fucomp
or
sub
mov
fwait
popf
push
filds
pop
fisttps
push
and
ljmp
sbb
mov
jbe
test
xchg
sti
imul
cmp
or
loopne
aaa
lahf
cmp
jg
pop
jns
subl
sarb
sbb
in
jns
inc
jnp
cli
push
das
mov
jmp
xchg
pop
pop
jbe
insl
ds
adc
pusha
jge
jge
mov
lock
jns
xchg
pop
fcompl
jle
push
cld
push
adc
das
lcall
xchg
loop
ret
cld
repnz
pop
negl
jge
nop
cmp
outsl
cmpsl
xor
repnz
das
mov
sbb
movsb
arpl
push
test
xor
neg
dec
or
out
lret
das
mov
jns
fisubl
sarl
cmp
daa
push
jmpw
dec
or
das
mov
mov
jle
dec
push
or
mov
dec
dec
xor
lret
xchg
or
mulb
repnz
stos
jno
dec
fwait
aad
loope
sbb
mov
lret
enter
xchg
push
js
int
mov
xchg
orl
adc
jmp
nop
in
push
mov
ret
dec
dec
aaa
xchg
and
jns
in
pop
outsb
gs
sarb
jnp
repnz
test
out
jge
lods
idivb
fbld
mov
push
and
or
jle
in
test
inc
fs
and
popf
mov
adc
pusha
jle
insl
in
push
pop
mov
sar
mov
push
pop
jns
std
push
mov
scas
stos
in
loopne
std
scas
mov
test
in
inc
push
and
inc
jmp
push
pop
jns
xchg
jno
pop
jmp
sbb
jns
out
cwtl
sub
sbb
mulb
and
xchg
xchg
xchg
adc
stos
mov
mov
cld
push
xchg
fistpll
dec
xchg
sub
out
mov
movsl
xorl
repnz
and
cmp
call
sub
inc
sbb
fisubs
call
mov
cwtl
mov
bound
jge
lret
jns
mov
stos
movsb
mov
mov
adc
xchg
mov
mov
arpl
sbb
xor
test
cmpsl
ret
push
lahf
push
shll
shll
pop
out
mov
jne
mov
das
mov
xchg
push
testl
mov
jmp
sub
push
adc
std
mov
pop
rorl
jle
or
repnz
das
in
cltd
gs
mov
lock
push
adc
sub
xchg
lret
mov
lahf
arpl
lret
add
sahf
pop
jle
in
movsb
sbb
sub
add
ja
stc
in
sbb
mov
mov
scas
sarl
outsb
push
lods
xchg
into
lahf
imul
pop
jle
sbb
mov
call
jl
push
add
xor
std
jp
or
and
and
test
scas
pop
or
pop
jns
lods
mov
xor
roll
cs
push
mov
scas
imul
nop
cmp
test
stc
mov
lret
dec
daa
cli
aaa
rorb
enter
push
mov
add
sbb
and
imul
das
daa
cmc
dec
xchg
neg
jno
mov
decb
sub
mov
lea
push
outsl
xchg
push
pop
jns
cmp
cmp
test
fstl
fs
test
sti
nop
sub
fistl
xchg
pop
call
xchg
ror
push
ds
in
pop
jle
insl
cmp
cmpsl
or
mov
fimuls
js
into
inc
jns
aaa
in
cltd
ja
pop
jns
xchg
lcall
xor
icebp
js
jnp
pop
push
mov
paddusb
jle
repnz
out
mov
mov
pop
xchg
pop
jns
xchg
cmp
inc
inc
cmp
int
arpl
in
push
and
repnz
ret
cmpsl
sbb
jg
pop
popf
lret
sbb
jge
pop
in
adc
icebp
add
cld
fwait
mov
inc
jecxz
xchg
call
or
in
push
pop
mov
xchg
xchg
test
cmp
fs
sub
push
push
mov
mov
jle
in
cmp
repz
cmp
sar
in
pop
stos
pop
jne
lret
or
rcll
xchg
push
pop
pop
or
outsl
xor
and
scas
dec
stos
jae
mov
sbb
jns
imull
adc
lret
das
inc
mov
fwait
push
cmpsl
xchg
and
inc
bound
lods
iret
mov
mov
shld
jo
fcoms
in
cmc
mov
sub
rcll
in
push
mov
pop
pop
xchg
call
add
inc
ret
out
jnp
dec
scas
mov
jo
mov
inc
lods
lahf
pusha
call
inc
and
pop
sbb
add
js
sub
lret
adc
sbb
rol
fdivrs
sub
mov
pop
push
push
mov
test
scas
mov
lret
and
in
ja
pop
jle
in
pop
dec
cmp
push
fs
xchg
dec
lahf
cmpsb
sti
jno
ror
in
roll
ds
mov
mov
repz
xchg
test
mov
mov
loope
js
adc
repz
scas
mov
insb
cmp
jmp
fwait
xor
jg
inc
sub
ret
cld
daa
dec
std
lds
scas
bound
sub
pop
push
push
ss
in
mov
or
or
pop
jns
lods
sbb
insl
sub
push
mov
push
pop
mov
xor
inc
inc
cmp
ret
mov
stc
test
mov
push
lods
adc
addl
lds
jns
out
test
push
mov
mov
push
pop
jns
push
lds
ja
ss
and
ss
jns
xchg
xchg
js
mov
dec
leave
test
enter
or
ds
adc
jle
pop
xor
stos
aaa
out
inc
in
mov
sarl
std
aad
fsubr
mov
repnz
and
outsl
jge
jae
fs
sub
shll
aam
push
jmp
sar
insb
cmp
out
dec
jnp
lock
inc
cmpsl
jmp
out
cmpsl
stos
ss
sub
sbb
mov
scas
mov
dec
mov
mov
sub
adc
push
push
data16
repnz
and
aam
daa
testl
fstpl
loopne
sbb
cld
loop
dec
mov
add
das
mov
add
jl
cmpsl
mov
sub
dec
xchg
pusha
mov
pop
enter
pusha
int
mov
movb
push
js
mov
mov
pop
jns
add
clc
xor
inc
test
loop
pop
jns
xchg
inc
dec
cmp
or
pop
fidivrs
xchg
push
and
mov
jo
jp
movsb
in
mov
push
in
lock
fstps
in
pop
in
outsl
loope
insb
mov
dec
cld
lds
push
loope
je
push
mov
das
mov
mov
sub
lret
sbb
mov
jmp
in
sub
adc
call
jecxz
dec
lods
sub
stc
or
pop
jns
xchg
sti
in
ja
jl
iret
mov
or
add
dec
fbld
fs
dec
in
cmp
imul
jns
shrb
xor
add
lret
mov
adc
vpsubsb
repnz
xchg
loope
dec
mov
cmp
push
dec
cmc
and
repz
jns
ljmp
pop
sbb
xchg
jg
pop
pushf
sbb
outsl
mov
push
stc
in
dec
and
imul
in
mov
mov
or
dec
and
lods
jns
cs
daa
sbb
push
test
xor
and
mov
mov
in
mov
arpl
ds
mov
xchg
imul
push
pop
add
loopne
and
pop
jns
pop
push
xor
lea
xchg
jle
ja
jb
cltd
mov
daa
movsl
and
sarb
xchg
pop
or
inc
jmp
mov
fcmovb
and
in
pop
jle
cld
mov
cmp
sub
pop
jle
aaa
push
dec
xor
fnstsw
jle
in
test
mov
negl
sub
xchg
lret
lea
sub
xor
cmpl
ds
lret
sbb
xchg
jns
push
mov
xor
jle
mov
pop
pop
pop
inc
xchg
mov
test
push
xchg
pushf
repnz
mov
pop
jp
rep
xrelease
sub
cmc
push
adc
fnsave
stc
in
sub
inc
bound
mov
mov
xor
repnz
and
inc
test
gs
ss
or
push
cmp
push
pop
scas
lret
das
mov
ds
andl
cld
repnz
sbb
cs
notl
fdiv
out
xchg
jg
out
xchg
xor
xchg
jle
cmp
inc
mov
ret
cmpsl
push
pop
add
imul
mov
sahf
imul
fcomps
sub
sub
repnz
fmul
cmp
cmp
mov
nop
jnp
das
adc
sbb
or
nop
or
inc
scas
mov
sbb
sbb
mov
jns
mov
movsb
movsb
xor
xchg
push
pop
xchg
push
mov
sahf
mov
arpl
pop
jns
hlt
jge
into
pop
stos
fldt
ret
movsl
ja
lds
pusha
addl
rcrl
and
lret
sbb
dec
pop
jle
in
scas
jbe
and
sarl
xchg
pop
or
mov
jge
cmpsb
cmp
lret
das
mov
aad
xchg
mov
jmp
xchg
das
mov
loop
ss
push
ret
fidivrs
mov
lret
aam
testl
dec
xchg
repnz
and
sahf
pop
xlat
mulb
mov
xchg
mov
ds
out
out
mov
imulb
cmp
mov
inc
xchg
aad
xchg
pop
jge
mov
push
sarb
ljmp
in
inc
dec
dec
test
enter
mov
jbe
mov
test
mov
or
out
sub
repnz
xchg
sub
mov
xchg
jg
stc
test
mov
adc
inc
and
imul
enter
cltd
aas
and
int3
sub
xchg
call
jns
es
sti
fadds
pop
sub
nop
mov
call
js
cmpsb
test
add
xchg
push
xor
sub
repz
inc
and
stos
mov
pop
push
repnz
pushf
les
imul
neg
push
xchg
outsb
push
xchg
shl
in
pop
jle
xchg
xchg
or
jle
pop
mov
inc
mov
pop
push
jl
int
pop
jle
in
pushf
xchg
lock
insl
adc
adc
sti
enter
or
xor
imul
mov
pusha
adc
pop
bound
mov
test
fcompl
sub
mov
sub
xlat
mov
or
sahf
xchg
test
sbb
cli
inc
cmpl
xor
mov
jo
into
imull
and
into
add
or
and
mov
ljmp
dec
movl
mov
lea
fstl
pop
jle
in
push
cwtl
or
cmp
mov
pop
aaa
dec
mov
add
int3
pop
jns
lods
push
nop
dec
mov
push
or
rclb
leave
xchg
pop
sub
mov
sbb
mov
pop
dec
in
aaa
cmc
enter
add
sub
cmp
pop
mov
ds
lret
and
push
and
gs
mov
push
cmp
data16
mov
pop
sub
scas
jecxz
mov
ja
jecxz
daa
inc
mov
cli
add
jo
das
lcall
stc
inc
lahf
lea
popa
xchg
pop
imul
enter
jge
lret
adc
pop
and
nop
push
mov
mov
in
pop
inc
es
aad
jb
push
push
mov
jle
js
loopne
outsb
sti
test
and
xchg
pop
jle
in
mov
aam
clc
mov
mov
enter
insb
mov
pop
add
sub
dec
mov
gs
inc
scas
mov
pusha
in
repnz
cmpsl
mov
xchg
sti
mov
mov
dec
lcall
pop
jns
push
or
rcrl
icebp
fisubrl
pop
jns
sbb
xchg
hlt
cmp
sub
push
cmp
mov
inc
inc
pop
popf
sti
jmp
sbb
out
sbb
fldt
scas
push
push
pop
jns
mov
adc
mov
pop
jns
xchg
xchg
jo
mov
fimuls
data16
mov
in
push
xor
insb
push
xchg
and
add
jg
pop
out
movsl
add
or
lock
xchg
mov
jle
in
mov
cmovae
adc
mov
jle,pt
in
xor
inc
mov
pop
mov
push
and
pop
push
ljmp
mov
inc
jl
mov
pushf
call
lret
mov
cmpsb
push
add
sbb
lret
das
mov
lods
cmp
xchg
pop
jge
xor
mov
movnti
shr
les
inc
test
jmp
enter
mov
call
push
fiadds
test
jo
xchg
push
pop
jns
cmpsl
pushf
sti
and
aam
sbb
jns
lods
rcrb
jns
int3
push
push
pop
jns
xchg
and
push
xor
jb
in
push
out
cmc
mov
in
pushf
hlt
test
int3
test
loopne
in
ja
ret
jae
xchg
shlb
les
iret
sahf
pop
jns
xchg
stc
insl
sbb
jmp
in
jg
es
xor
icebp
push
mov
aad
lahf
mov
lcall
adc
cwtl
or
cld
repnz
lods
mov
xlat
adc
movsb
icebp
lods
imul
push
jge
mov
pusha
inc
xchg
das
mov
jbe
add
cmp
inc
mov
pop
inc
clc
std
jp
mov
mov
in
imul
insb
jecxz
fisubs
jns
sub
repnz
mov
mov
mov
or
cmpsl
push
mov
pop
mov
push
pop
repnz
std
pop
pop
fs
mov
push
shll
scas
mov
out
xchg
mov
aas
xor
dec
jp
sidtl
cmp
repnz
push
jb
mov
addr16
jnp
sub
pop
mov
sbb
mov
test
ret
es
adc
lret
cwtl
jmp
aas
cmc
fldcw
mov
xchg
mov
cmp
loop
stos
and
insb
xchg
das
decl
mov
lret
das
mov
insb
int
push
xchg
and
xchg
ret
imul
cmc
xchg
ja
dec
cmpsb
cld
pop
mov
mov
out
enter
into
inc
push
and
or
out
xchg
fnstcw
out
sub
mov
out
gs
jno
cli
pop
sbb
sti
enter
or
jmp
repnz
das
mov
nop
cmpsl
mov
filds
cld
mov
fdivr
push
std
dec
int3
inc
sub
fdivrs
data16
mov
adc
test
pop
hlt
enter
xor
jae
jno
mov
mov
insl
cmp
cmc
enter
fistps
inc
in
hlt
xchg
ret
or
subb
push
test
push
scas
movl
and
push
lahf
ja
xchg
enter
repz
dec
push
es
mov
mov
clc
or
pop
mov
mov
and
enter
jb
mov
push
imul
sub
gs
xorb
shr
or
stc
push
and
into
mov
out
jnp
xchg
push
fsubrp
mov
add
loope
repnz
aas
fsincos
stos
out
ja
sahf
les
lret
das
mov
pop
or
cwtl
pop
or
inc
stos
repnz
and
xor
push
xchg
and
nop
adc
test
push
stc
lea
and
jmp
pop
jns
lods
dec
std
mov
jne
ret
icebp
xor
ja
xchg
push
add
iret
xchg
int
or
ds
sbb
xchg
nop
mov
xor
in
add
imul
and
stc
in
pop
push
cmpsb
jb
mov
fcmovnu
sub
xchg
pop
jle
not
fld
add
ss
xchg
mov
cwtl
mov
cmc
and
lods
sub
mov
jns
fmuls
mov
dec
fcmovb
mov
add
sbb
repnz
daa
loopne
mov
pop
sbbb
lods
sub
inc
clc
xchg
int3
add
sbb
gs
or
mov
mov
sub
sbb
pop
mov
or
rcrl
in
enter
cwtl
imul
dec
pop
jns
jecxz
leave
cmc
sbb
push
cld
xchg
push
int
cltd
inc
ljmp
repnz
das
mov
imul
pop
dec
lret
das
mov
inc
cmp
rorl
mov
repnz
stos
xor
inc
xchg
dec
aam
shlb
mov
scas
lods
repz
in
ja
fstps
in
mov
inc
stc
or
jg
jae
xor
sarb
fnsave
das
mov
dec
mov
cs
loop
sub
jge
lret
mov
xchg
fldt
cwtl
push
test
out
leave
jle
stos
lret
das
push
mov
addr16
push
and
in
sbb
sbb
repnz
ds
aaa
int3
inc
imul
aas
xchg
cmp
jecxz
cld
adc
das
add
xchg
mov
mov
lock
enter
xchg
push
mov
in
adc
aaa
pop
jns
or
pop
jo
daa
or
lods
lret
pop
fldenv
sbb
inc
sub
inc
pop
adc
leave
out
stos
fisubl
repnz
xchg
lret
xchg
push
fisubrs
or
js
add
scas
mov
push
mov
pop
incl
add
outsb
out
nop
mov
lods
jl
adc
negl
add
lret
push
nop
je
mov
lcall
xor
or
xchg
or
in
xchg
fisubrl
mov
mov
fidivs
in
dec
add
cs
test
ss
jne
mov
dec
jp
mov
popa
in
mull
pop
into
push
xlat
movb
pop
jns
xchg
add
mov
stc
mov
out
leave
je
mov
inc
arpl
and
xchg
push
xor
in
and
cld
in
jnp
test
clc
xchg
push
pop
jns
xlat
ja
js
in
ss
jl
adcl
popf
neg
gs
pop
jno
pop
addr16
xchg
test
cmp
xchg
sbb
inc
cli
adc
mov
pusha
arpl
jg
stc
repnz
sub
hlt
aam
imul
outsl
cld
sti
enter
dec
mov
inc
xchg
pop
lret
filds
xchg
loopne
std
jle
dec
mov
das
lcall
stc
cmp
jge
adc
fucomip
jno
cli
fcmovbe
mov
addr16
jb
fldenv
add
stc
int
jge
lret
das
mov
xor
cmp
stos
in
pop
mov
dec
ret
inc
cmp
ja
ljmp
repnz
loopne
and
adc
jnp
in
mov
sti
dec
or
das
mov
and
movsl
popa
clc
or
cld
repnz
cmp
and
pop
jae
mov
cmp
test
mov
adcb
adc
lret
in
pop
test
outsl
mov
pop
and
stc
test
push
lahf
lret
insb
hlt
and
pushf
cli
fisttpll
push
scas
adc
mov
or
loope
sbb
loop
xchg
lea
and
arpl
rcrb
loope
cltd
nop
js
and
repnz
mov
pop
xlat
mov
mov
andb
push
pop
xor
lret
pusha
test
enter
cmp
stc
fs
mov
mov
or
in
sub
pusha
fdiv
and
fistpl
pop
pop
xchg
shlb
mov
jge
aad
mov
fimuls
repz
and
ljmp
scas
mov
push
and
sbb
mov
inc
call
cmp
in
push
mov
xor
mov
in
cmp
inc
scas
xor
bnd
xchg
push
mov
lods
fsts
adcl
lret
mov
dec
decb
cmp
dec
fildll
cmp
imul
into
jmp
stc
lea
mov
xchg
pop
jle
mov
cvtps2pd
adc
jle
xadd
cmpb
fmull
jg
cld
repnz
fs
enter
adc
out
and
das
iret
cltd
movsl
arpl
out
inc
jge
pop
sbb
xchg
push
inc
addl
lret
call
ret
loopne
pop
in
sub
mov
jge
push
ficomps
jae
mov
push
arpl
xchg
xchg
inc
cmp
mov
or
lret
push
adc
push
loopne
loope
das
or
sbb
in
pop
scas
scas
and
push
xchg
pop
jle
lcall
mov
jmp
adc
loope
loop
je
ja
lock
mov
push
or
scas
mov
inc
faddl
ljmp
mov
mov
jnp
fistps
clc
in
jge
in
adc
jo
lret
jns
pop
jle
loopne
ljmp
dec
mov
test
das
dec
xlat
cmpb
in
mov
jno
iret
push
ds
or
pop
pop
iret
in
lds
sub
shll
cmp
jns
jmp
add
mov
loope
inc
outsb
add
sbb
repnz
repz
cmp
insb
xchg
add
cld
cmp
popf
inc
sub
mov
ja
dec
ja
mov
imul
lret
popf
adc
in
cmp
gs
sti
cld
sub
hlt
in
cmc
push
jnp
repnz
das
mov
jmp
xlat
adc
dec
push
push
sbb
push
stc
out
js
hlt
add
jne
jle
divl
shlb
xor
ds
imul
lret
add
xor
in
aaa
leave
add
inc
out
std
sbb
dec
ffree
adcl
xchg
in
jg
jl
cli
and
add
insl
or
mov
push
and
and
and
mov
lods
lods
mov
or
pop
jns
lea
call
jecxz
sti
jns
xchg
push
rorl
ljmp
and
in
movsb
inc
dec
dec
push
dec
mov
fimuls
fmull
loope
cmp
cld
jle
in
and
pop
imul
mov
push
sub
gs
leavew
mov
aaa
jo
mov
push
adc
mov
insl
shlb
mov
push
or
or
ret
xchg
xor
lcall
cmp
enter
jno
outsl
mov
adc
les
xor
aad
pop
mov
adc
test
inc
insb
sub
repnz
and
push
dec
cmp
jo
pop
jnp
xchg
lret
das
mov
mov
cltd
divb
and
sbbb
push
sarl
call
sub
mov
into
sub
jecxz
out
repnz
das
ljmp
in
test
jae
pop
push
lret
int
inc
mov
cmp
push
das
scas
mov
push
xchg
jo
jns
stos
push
fincstp
jns
repnz
and
inc
in
aas
clc
out
pop
sbb
fs
sti
dec
aam
jb
popf
and
add
ret
in
pop
imul
mov
pop
sti
adc
test
icebp
mov
and
jmp
jno
xor
fidivl
mov
xchg
push
pop
fildll
pop
jns
jmp
xchg
xor
in
push
mov
mov
add
negb
pop
stos
filds
pop
mov
addl
imul
stc
in
aas
mov
cmpsl
inc
notl
xchg
sbbb
or
mov
stc
in
pop
dec
std
cld
es
std
push
push
lods
jl
int3
inc
imull
repnz
cld
push
xchg
popf
test
xchg
mov
xchg
pop
jmp
cltd
adc
pushf
loope
repnz
mov
pop
je
fisttpl
outsb
mov
jne
out
outsl
dec
pop
xchg
out
and
jno
mov
in
jo
orb
lret
mov
or
arpl
mov
scas
sbb
cmp
mov
cld
repnz
lock
sub
jnp
pop
loopne
mov
push
stos
shlb
xchg
xchg
mov
dec
jmp
lret
das
scas
jge
cmp
inc
jecxz
in
and
push
popf
aad
insb
sbb
das
lcall
stc
add
adc
cmp
xor
int3
cmp
jge
lret
pop
jbe
mov
sti
and
fnstsw
pop
pop
nop
dec
cmp
test
or
aaa
in
pop
jle
xchg
and
iret
push
xchg
xchg
pop
jle
popa
dec
pusha
in
dec
inc
jno
in
shl
pushf
mov
lcall
inc
lods
imul
jecxz
repnz
das
push
lret
mov
or
push
aam
mov
das
mov
ret
ljmp
mov
xchg
cwtl
clc
scas
add
jecxz
scas
mov
cmovnp
and
or
aaa
jnp
lret
in
mov
adc
pop
inc
lret
das
mov
push
add
pop
fs
mov
xchg
sbb
add
sbb
push
ds
mov
push
ret
shrl
mov
pop
sub
inc
adc
fwait
testl
cld
repnz
das
mov
mov
movsl
sbb
in
das
mov
xchg
pop
mov
stos
ljmp
shrl
ret
outsb
fwait
aam
lret
das
mov
dec
sub
fwait
je
enter
movsb
ds
mov
in
lret
mov
or
lahf
movsb
sub
stc
stos
and
in
leave
adcl
das
dec
fwait
xor
push
xor
jo
xchg
pop
jle
jno
ss
sbb
and
stc
inc
add
pop
shr
roll
adc
push
in
arpl
xor
and
repnz
add
in
mov
loope
repnz
das
xchg
xlat
clc
mov
dec
xor
test
mov
in
nop
add
jmp
jl
cmpb
cld
ds
jns
xchg
xor
sub
sub
lret
das
loop,pt
test
mov
and
aad
cld
bnd
sbb
pushf
or
shlb
enter
xchg
jns
xchg
push
daa
lret
add
cmpsb
and
jle
or
jp
or
mov
mov
out
lods
rcrl
add
jns
jb
sbb
dec
mov
out
fdiv
lret
add
push
mov
sbb
mov
iret
shrl
in
scas
pop
sbb
jae
inc
mov
jns
xchg
push
call
jbe
lcall
push
pop
and
jg
in
cli
icebp
mov
into
and
lcall
repnz
das
incl
daa
mov
push
aas
pop
fdiv
lret
das
mov
sub
xchg
adc
repz
outsl
outsl
and
sti
arpl
jnp
mov
lret
xor
xor
fidivrl
mov
push
cmp
outsl
xchg
cwtl
mov
test
cmp
pop
jns
loopne
push
xor
scas
add
sub
push
les
arpl
stos
icebp
sub
cli
jae
pop
lods
xlat
nop
cmp
mov
and
mov
lods
jl
ja
sbb
inc
gs
stos
test
sub
sbb
xor
aas
mov
and
mov
xchg
gs
in
pushf
add
je
and
and
cmp
fisubl
mov
mov
ret
test
icebp
lds
mov
adc
in
and
adc
mov
cmc
jmp
pop
jle
dec
cltd
or
push
pop
jns
pop
mov
cmp
inc
lret
ljmp
sub
cli
call
in
push
fstpt
test
pop
sbb
fmuls
jo
xchg
xchg
xchg
mov
ss
ret
jns
lods
mov
lods
and
push
inc
mov
and
out
pop
test
mov
fists
cld
pop
icebp
fdivl
or
movsl
jg
mov
stc
stc
orl
test
pop
in
test
xchg
pop
jle
sbb
mov
cs
xorb
pop
jle
cmc
cmpsl
mov
les
fwait
push
ljmp
das
pop
imul
mov
out
jecxz
pop
js
int3
push
daa
scas
mov
dec
adc
std
bound
sub
shll
jnp
shl
xor
test
add
insb
ja
lret
push
pop
jns
data16
adc
push
popa
sbb
mov
pop
jns
xchg
cmp
pushl
pushf
sbb
addr16
and
and
xchg
jge
fcompl
in
jg
mov
addb
mov
cmp
sub
les
sub
mov
mov
inc
insl
sub
xchg
jmp
mulb
xchg
fildl
lea
into
imul
repnz
mov
sub
dec
ja
xchg
imull
inc
scas
imul
jge
push
pop
jns
rorb
int
mov
pop
jns
xchg
loopne
or
sbb
mov
lret
loop
mov
pop
jne
inc
push
xchg
push
mov
mov
jge
scas
pop
je
cmpl
sti
jns
jnp
repnz
pop
fs
jp
or
jo
insl
scas
enter
mov
fidivrl
push
mov
xchg
cld
sti
xor
push
cmpsl
inc
pop
repnz
sub
stc
mov
repnz
mov
cmp
in
pop
jbe
es
or
lock
xchg
pop
jle
popf
adc
push
sub
mov
and
imul
jl
nop
sti
add
ljmp
sub
xchg
xor
das
fwait
mov
repnz
insl
sub
add
mov
add
jecxz
sbb
cmc
hlt
xchg
xchg
push
pop
adc
cmc
jbe
sahf
jns
push
or
or
inc
nop
lahf
dec
mov
in
std
lcall
mov
xor
enter
mov
sti
ds
jge
lret
adc
push
enter
lds
in
addr16
cmp
add
xchg
pop
jge
push
scas
cmp
into
aas
push
cmp
xor
rcr
sar
enter
out
or
jns
sahf
jp
xchg
xchg
push
dec
pop
out
in
test
and
jmp
in
aad
out
clc
sub
jmp
int3
inc
jle
in
test
push
loope
fs
call
mov
lea
arpl
pop
jns
pop
daa
testb
shlb
dec
aas
mull
mov
dec
in
ret
dec
push
aas
mov
filds
cld
push
fistpll
into
xchg
or
in
jle
in
jecxz
jne
mov
sti
bound
fdivrl
cmc
or
xchg
bound
sbb
push
pop
jns
cmpsl
xorl
mov
in
daa
mov
xchg
in
aad
xchg
jg
dec
sti
sbb
stos
sbb
jle
in
xchg
sub
jp
xor
and
stos
mov
ss
mov
in
jg
je
dec
pop
adc
into
rol
stos
dec
xchg
pop
jle
sbb
mov
das
stc
xor
mov
stc
in
fs
pop
ja
test
into
ljmp
jmp
pop
jge
aam
dec
add
js
out
mov
in
sub
add
pop
popf
xor
hlt
jp
stc
jo
lock
dec
loopne
in
push
pop
popa
xor
adc
lahf
xchg
push
pop
jns
adc
or
mov
or
xchg
mov
andl
push
adc
das
mov
loop
ror
xchg
imul
repnz
std
out
lea
fiadds
mov
cld
repnz
std
pop
xchg
cwtl
subl
xchg
push
mov
hlt
xchg
das
mov
add
mov
in
pop
pop
mov
mov
cli
jae
insb
jge
test
mov
pushf
xor
lret
mov
scas
add
or
cmc
cmc
push
jmp
imul
enter
jmp
inc
stc
mov
jmp
xchg
fs
inc
stos
push
mov
dec
jno
mov
test
jnp
iret
xlat
sbb
xchg
and
add
pop
fwait
jp
hlt
pop
xchg
jmp
fs
mov
and
inc
cltd
jg
out
jg
xchg
sub
scas
adc
pop
inc
aas
sub
loope
xchg
ret
cwtl
sub
xchg
sub
jge
cmp
sbb
je
cld
repnz
and
int3
xchg
ja
fwait
cmp
xchg
sbb
or
test
mov
cmp
add
cmp
xchg
cmpsl
mov
mov
lods
add
jns
or
adc
movsl
sbb
lahf
enter
insb
xchg
test
addr16
das
push
dec
jae
mov
mov
scas
jbe
sbb
cld
repnz
jg
mov
add
enter
cmp
lret
das
test
cli
or
fisubrs
and
pop
push
in
pop
add
pop
xchg
popa
into
repnz
cmc
mov
or
xor
mov
ds
mov
test
jns
xchg
repz
daa
test
adc
jg
xchg
hlt
in
inc
mov
outsb
mov
mov
ret
jbe
pop
xchg
xchg
test
xchg
pop
lock
es
push
cld
repnz
das
roll
lods
int3
push
mov
out
outsl
xchg
in
jbe
and
roll
pop
insb
repnz
inc
pop
test
lret
inc
push
adc
add
push
fstl
mov
sti
stos
xor
int
xchg
fstpl
jp
fisttpll
shll
cwtl
outsl
sub
jg
sub
or
inc
adc
dec
loopne
xor
jecxz
addr16
pushf
sbb
jns
xchg
push
iret
into
in
and
mov
mov
jg
pop
sub
test
inc
test
jb
out
pop
jle
in
adc
jnp
out
mov
in
xchg
gs
clc
sub
xchg
testl
test
pop
or
xchg
push
pop
jns
push
cmp
ret
pop
adc
imul
jns
adc
arpl
mov
lret
lret
jae
outsl
cli
lcall
stos
dec
in
push
mov
sbb
test
pop
lahf
jl
movsl
iret
fnstenv
pop
push
scas
inc
insb
mov
pop
jns
fwait
int3
std
repz
jmp
aas
ljmp
cmpsb
ss
pop
dec
sub
insl
sbb
mov
cmc
test
in
popa
aaa
add
shl
fisubs
lods
mov
lret
das
sbbb
xchg
test
movsb
inc
out
dec
popf
imul
ljmp
fcmovne
mov
dec
jle
pop
cmc
adc
add
sbb
aas
push
mov
jge
in
pextrw
fcoms
dec
adc
sub
sub
ret
or
mov
lret
es
dec
and
cld
repnz
das
ffree
outsb
dec
adcb
add
rolb
pop
inc
out
loopne
jge
sub
arpl
mov
add
sar
scas
mov
sbb
stos
imul
adc
lret
jl
add
ret
repnz
cs
out
add
xorl
sub
jns
pushf
xor
jl
jg
repnz
in
cmpsl
mov
iret
push
mov
jle
in
cmc
insl
push
pop
shll
jmp
cmp
xchg
xor
jno
std
rol
pop
flds
inc
stc
in
ja
fs
sbb
xchg
inc
jle
roll
daa
add
xchg
pop
jle
inc
xchg
test
pop
pop
mov
add
adc
cmp
nop
and
sbb
andb
enter
lcall
jnp
sub
aad
cmp
out
add
sub
adc
scas
lods
in
jnp
jg
mov
mov
xchg
sub
pop
lds
enter
adcl
bound
and
xor
mov
push
iret
mov
ja
mov
pop
push
inc
gs
das
mov
cmp
outsb
push
xor
xchg
das
mov
pop
jl
cwtl
stos
cmp
cs
sbb
fcomp
shll
lahf
cmpsl
mov
and
sbb
imul
and
push
ds
xchg
aas
clc
enter
ja
and
shrb
cmp
in
pop
fisubrl
lcall
push
mov
mov
adc
and
js
push
incl
pop
mov
repnz
fldl
inc
movb
repnz
inc
jo
cltd
cwtd
fs
jecxz
sahf
dec
pop
mov
sahf
push
pop
repnz
out
dec
push
ret
call
mov
or
add
scas
mov
icebp
and
dec
cld
addl
mov
dec
mov
dec
ret
lock
in
and
adc
pop
out
cld
repnz
das
in
lds
cmp
mov
or
je
push
fimuls
lret
leave
and
mov
out
or
les
dec
test
repnz
and
outsb
shrl
scas
mov
movsb
cli
dec
stc
pop
push
jns
xchg
js
lahf
lea
loope
je
js,pn
and
in
sbb
cmp
outsb
scas
cmp
in
push
mov
xchg
push
es
add
xchg
push
pop
aad
xor
xor
mov
jno
loopne
cmp
lea
pop
jns
lret
add
mov
mov
cmp
cmpsb
pop
jns
xchg
cmp
mov
dec
pop
into
das
pop
jno
xchg
xchg
push
out
sbb
add
dec
lds
cmp
inc
mov
fiadds
jle
in
mov
in
mov
repnz
mov
jmp
adc
push
pop
stc
in
aas
xor
xor
das
lret
sbb
sbb
inc
jne
cmp
jo
ljmp
lret
and
mov
lods
imul
mov
cmpl
push
mov
test
popa
fwait
cmpsl
addb
stc
push
or
movsl
cmp
dec
pop
jle
in
adc
in
mov
adc
adc
enter
xor
out
into
sbb
pop
fs
xchg
pop
in
mov
xchg
mov
xchg
fistpll
adc
inc
fmulp
mov
mov
xchg
sub
cmp
dec
loope
sub
out
jmp
test
mov
stos
hlt
inc
mov
mov
test
loopne
push
fwait
cld
repnz
daa
out
add
jl
mov
sub
movsb
mov
repnz
das
mov
and
bound
push
stc
shrb
push
call
sarb
jnp
roll
cli
pushw
jns
xchg
push
cmp
aaa
fidivrl
jmp
int3
popl
movsl
cmp
mov
inc
dec
push
stc
idiv
or
jb
mov
cld
gs
pop
loopne
cwtl
cmp
in
jg
xor
xchg
ljmp
movb
xor
push
lret
push
aas
pop
jle
in
cmp
inc
scas
imul
jmp
adc
cld
repnz
xchg
add
sub
xchg
lret
das
mov
xchg
int3
fcoml
lret
das
mov
adc
imull
das
mov
cmp
pusha
mov
lcall
cld
repnz
jl
xor
cmp
jge
cmp
lret
das
push
daa
hlt
popa
icebp
and
cmpsb
inc
in
xchg
sahf
dec
jne
das
daa
inc
push
sti
lret
das
mov
lcall
jne
das
mov
ret
pop
testb
sbb
sbb
xor
jnp
mov
xchg
mov
inc
jb
or
lea
mov
jns
push
dec
adc
das
and
pop
jns
xchg
stos
push
push
loope
mov
int3
pop
inc
mov
inc
push
sbb
xor
repnz
pop
jns
xchg
ret
sbb
stos
adc
rclb
xchg
in
pop
and
xchg
fildl
mov
sbb
leave
cmpsb
in
pop
push
xor
loop
dec
aas
dec
insb
adc
jle
mov
lds
addr16
mov
xchg
add
repnz
push
lods
jmp
daa
cli
enter
lahf
push
dec
jmp
or
das
mov
mov
inc
std
bound
shrl
cld
repnz
xor
mov
cmpsl
lea
xlat
and
inc
je
adc
pop
pop
jle
addr16
lds
mulb
aad
incl
iret
sarl
mov
and
int
lcall
mov
fsts
call
pop
fistpll
pop
adc
fistps
add
shrl
xchg
pop
jle
jmp
or
dec
pushf
sbb
fisubrl
inc
cli
enter
lods
inc
jp
inc
push
scas
mov
push
jne
out
push
mov
adc
repnz
daa
dec
push
mov
inc
xor
cld
xor
jmp
das
mov
lret
mov
sub
and
das
mov
notl
outsl
sub
push
cld
repnz
push
subb
push
lds
xlat
iret
jle
in
dec
add
cwtl
add
mov
pop
cmp
sbb
dec
in
add
push
pop
jns
mov
mov
out
notb
jno
pop
cli
lods
inc
loop
sbb
jl
mov
in
outsb
sti
cli
pop
mov
xor
and
bound
lea
daa
les
outsl
add
fadds
inc
dec
insl
call
add
cs
repnz
rcr
stc
mov
test
mov
mov
jno
out
mov
adc
bnd
arpl
inc
sbb
jle
in
lret
arpl
pushf
fs
mov
lcall
push
adc
ds
lahf
adc
mov
sub
jae
fimuls
and
push
scas
in
inc
adc
and
sbb
pushl
pop
or
cmpsb
sub
loope
insl
fs
pop
jns
imul
sub
jns
mov
orb
xchg
sbb
dec
lods
cwtl
insl
pop
sbb
pop
mov
and
stos
lock
and
insb
sub
mov
cmp
xchg
push
cmp
push
add
int3
cmp
xchg
xchg
push
pop
jne
and
xor
mov
push
stos
cmpsl
fldcw
mov
cmpsb
sub
cmp
aaa
pop
jle
in
cmp
int
dec
or
cwtl
popf
lock
jle
in
jno
out
jge
or
roll
xchg
pop
out
fcoml
lds
mov
std
imul
mov
sti
subb
inc
mov
xchg
adc
xor
jle
in
sub
popl
movsl
ljmp
push
test
sbb
cmc
aaa
sbb
in
add
cmp
and
and
dec
imul
lds
push
add
das
decl
arpl
fistpll
adc
mov
dec
sbb
adc
repnz
mov
jecxz
cltd
jmp
and
data16
out
insl
cmp
imul
lret
test
pop
mov
fmulp
adc
rolb
and
repnz
lret
leave
cmc
push
push
adc
incl
les
movsb
stc
repnz
and
lea
jne
xchg
jg
xchg
fadd
test
lcall
stc
je
int3
pop
dec
int
jmp
adc
cld
repnz
in
push
cmpsb
stos
aas
xchg
cld
lahf
push
inc
aas
and
cmp
xchg
ja
push
hlt
cmpsl
jno
push
dec
gs
mov
jge
dec
inc
in
loope
mov
push
cli
cmp
movsb
mov
and
enter
imul
or
lret
push
test
xchg
mov
xor
sti
mov
and
test
lret
and
push
adcl
xor
cmp
sarb
pop
insb
popf
mov
xchg
in
test
adc
fmul
sub
icebp
outsl
ljmp
lods
mov
sahf
push
mov
fwait
out
inc
adcb
inc
das
and
js
scas
adc
inc
jmp
pop
add
inc
dec
fidivs
imul
pop
cld
leave
int3
sub
jp
jns
or
push
scas
mov
test
loop
in
push
xor
cmpsl
sub
in
jmp
xchg
push
pop
mov
jbe
pop
popa
pop
pushf
mov
lods
imul
adc
vpcomuq
loopne
push
jne
std
push
xchg
stc
in
daa
sub
cli
sub
xor
xchg
xor
cmp
repnz
dec
add
sahf
xor
adc
xor
pop
iret
and
addr16
push
pop
jns
filds
inc
js
and
lods
mov
movl
cli
push
loopne
ret
shl
lret
jo
lods
leave
es
adc
xchg
loopne
cmpsl
sarl
xchg
cltd
inc
ret
push
dec
push
adc
push
jns
xchg
push
in
aam
mov
dec
shrl
mov
in
push
pop
nop
bound
pop
sahf
js
stos
push
fisttpl
push
cmp
lock
xchg
and
xchg
push
ficoms
sbbl
aas
push
out
jle
pop
jns
mov
lahf
and
fcompp
mov
cmp
jnp
clc
dec
mov
clc
mov
and
push
jbe
or
adc
std
in
xor
xor
loop
sbb
out
push
or
incb
in
dec
ljmp
fs
push
pop
mov
and
pop
mov
push
jmp
adc
mov
add
mov
xor
loope
mov
mov
xchg
mov
mov
pop
nop
mov
out
mov
jb
je
das
mov
push
fstpl
lods
dec
and
mov
xchg
das
insl
xchg
jno
jmp
in
mov
sub
add
fists
sub
xchg
inc
lcall
pop
repnz
xchg
add
xor
cmp
mov
xchg
sub
pop
scas
mov
movsb
sar
adc
repnz
add
inc
pop
cmpsb
dec
pop
jns
mov
mov
sbb
dec
das
into
and
in
enter
push
and
scas
inc
mov
popf
add
dec
lahf
mov
dec
jge
sub
cmp
jl
adc
mov
test
mov
pop
and
scas
sahf
sub
ljmp
shll
push
pop
jns
sbb
jg
sahf
mov
in
push
jge
cmc
movsl
cld
mov
shlb
sahf
imul
xlat
jge
inc
and
insl
ljmp
xchg
outsb
aad
adc
dec
lcall
xor
or
jo
push
rcrl
daa
pop
jns
xchg
cld
cmp
mov
imulb
and
xchg
push
dec
xor
jle
popa
ja,pn
outsl
xor
inc
inc
pop
mov
xchg
sti
outsb
call
in
push
fidivl
jg
dec
in
xchg
jg
pop
and
mov
inc
sbb
jns
cld
repnz
jo
fidivrl
in
repnz
or
lahf
stc
notl
mulb
dec
pop
js
inc
inc
in
pop
jle
pop
xor
or
xlat
xchg
pop
jle
push
dec
jmp
mov
pop
xchg
lcall
stc
in
jb
jge
xchg
mov
sub
xlat
outsb
sub
enter
iret
cmc
mov
lcall
lds
xlat
fcomps
and
push
add
outsb
ljmp
pop
mov
inc
rcr
scas
cwtl
mov
fimuls
fs
push
cmp
test
xchg
cli
sahf
xchg
lock
sub
das
jb
repnz
lret
mov
mov
inc
getsec
mov
repnz
das
leave
inc
iret
inc
sub
inc
jl
lods
mov
pop
inc
outsl
mov
adc
lret
std
in
dec
fmuls
add
cs
jbe
pop
xor
idivb
popa
push
mov
aas
mov
pop
pop
jne
sbb
lret
das
shlb
nop
movb
hlt
xchg
das
mov
scas
mov
aas
xor
mov
enter
push
shr
scas
mov
test
test
jge
pop
decb
inc
fadd
imul
stos
test
xchg
bound
mov
lahf
jle
in
stc
dec
fistpl
rol
rcrb
stc
in
pop
addr16
pop
mov
ret
or
in
and
cmp
cwtl
imul
icebp
bound
xchg
pop
jle
sti
jno
sahf
shrl
xor
or
ss
jle
in
repnz
xchg
mov
stc
in
int
out
push
out
xchg
subb
jbe
repnz
push
or
push
xchg
jge
test
lret
ljmp
cmp
leave
inc
pusha
das
decl
popa
subb
popa
jmp
inc
mov
subl
int3
mov
das
cmp
mov
sub
mov
pop
and
mov
dec
dec
dec
jge
das
lcall
stc
push
js
les
cmp
sbb
jne
xchg
leave
int3
repnz
mov
dec
stc
rcll
in
idivw
fsts
aam
push
pop
jns
xchg
mov
icebp
dec
sub
push
dec
pop
in
xchg
push
scas
xchg
scas
pop
jo
xlat
test
jle
cmc
mov
push
movsl
cmp
mov
jp
int
jl
in
or
jecxz
jmp
cmp
mov
lods
daa
dec
dec
addr16
jle
test
mov
les
mov
pop
lods
xchg
das
mov
sbb
sahf
mov
daa
push
or
int3
and
sub
loope
xlat
inc
pop
pop
fcmovnbe
cli
enter
xchg
in
rcrl
push
sti
enter
outsb
xchg
insl
lds
add
rorl
sub
inc
cmp
and
or
jns
loop
pop
sub
mov
cmc
in
push
pop
xchg
push
lea
mov
mov
sub
cmpsb
pop
or
cmp
bound
rorl
ljmp
outsb
dec
jg
in
pop
xchg
jmp
ds
xchg
pop
jle
jecxz
inc
mov
aaa
int
pop
jle
std
pop
push
xor
xor
sarl
add
xchg
das
mov
das
fs
out
fidivrs
int
push
aaa
dec
jmp
push
gs
inc
mov
test
dec
sub
xor
jae
ret
jnp
jns
jmp
cmpsl
pop
leave
xchg
or
inc
push
pop
dec
xchg
insb
bound
mov
repnz
mov
mov
push
cmp
leave
orb
imul
and
repnz
ss
sub
mov
imul
scas
mov
adc
add
mov
mov
jae
inc
testl
repnz
mov
cmp
jge
pop
inc
aad
mov
push
fldl
xchg
sub
data16
in
pop
mov
lahf
xchg
cmp
pop
jle
ret
pop
adc
mov
mov
mov
sbb
scas
mov
mov
and
imul
jae
add
inc
sahf
jge
inc
jle
enter
ss
nop
mov
pop
stc
repnz
jae
fnstcw
aas
sbb
add
in
jg
inc
mov
sarl
in
pop
jle
das
leave
repnz
xorl
cmpsb
ds
enter
inc
std
fwait
in
or
in
mov
popf
sahf
adc
repz
dec
cmpsb
jecxz
in
push
mov
aam
leave
cmp
jl
and
mov
push
xchg
push
lcall
stc
in
js
lea
mov
movl
inc
mov
jg
jle
test
repnz
das
mov
aas
xor
repz
xchg
shll
mov
push
loop
or
cmp
mov
mov
ljmp
sbb
daa
sbb
sub
insb
lret
lret
add
xchg
pop
xor
xlat
jb
mov
ror
scas
mov
movsl
inc
fidivs
and
cmp
sti
and
sbb
cmp
lret
mov
scas
jnp
xor
and
aas
push
jecxz
scas
ss
sarb
adc
cltd
sahf
sarl
addr16
loope
inc
movups
adc
insb
push
loope,pn
stc
sti
fs
fnstsw
push
dec
mov
and
push
sbb
outsb
loop
aaa
xchg
stc
repnz
mov
push
mov
inc
out
mov
int3
mov
cld
inc
jns
lods
add
loope
addb
jmp
pop
cmp
xorb
ficoml
ret
sbb
loopne
testl
mov
ja
pop
ds
in
cmp
fs
loope
push
cmp
repnz
cld
in
mov
das
pop
decb
out
push
ljmp
icebp
stc
pop
imulb
cmp
lret
jb
arpl
jge
in
push
fimuls
outsl
sti
or
lods
mov
mov
daa
popa
mov
lret
xchg
cli
ror
lret
mov
in
cmp
popf
hlt
sbb
lret
push
loope
shrb
mov
push
push
xor
mov
movsb
and
jg
sbb
sub
int3
insl
xor
xlat
shlb
repnz
enter
cmp
xchg
mov
das
mov
dec
lods
xchg
mov
shrl
das
xchg
into
push
mov
lahf
rcr
mov
repnz
push
fsubp
sbb
and
add
or
sub
lods
mov
loope
enter
pop
addr16
inc
sarb
inc
pop
mov
repnz
jp
pop
scas
mov
repz
rolb
repnz
das
adcb
ret
mov
jp
ficoms
mov
stc
inc
inc
xchg
ja
xchg
push
pop
gs
xchg
inc
sbb
stc
xlat
xor
das
push
enter
imul
out
in
pop
jle
pop
cld
pop
js
mov
mov
or
add
test
test
pop
fcoml
cs
es
sahf
dec
sub
ficoms
pop
mov
adc
pop
jle
in
sub
int3
jbe
lea
subb
mov
das
dec
insl
stc
push
clc
fimuls
leave
cmp
lret
clc
js
add
in
push
fisubrs
mov
enter
inc
cmp
sahf
jge
cmpsl
jp
rep
xlat
jmp
pop
jge
jecxz
pop
inc
data16
push
loop
inc
repnz
lahf
cld
add
nop
xchg
iret
sahf
idiv
adc
cld
int
fcompl
and
lret
jl
repnz
les
lods
or
mov
sub
arpl
xchg
mov
enter
sub
daa
mov
in
aaa
xchg
mov
aad
adc
js
cmp
lret
jge
push
push
push
pop
jns
jmp
loop
lahf
jae
and
xchg
push
popf
xchg
pop
jns
xchg
jo
xlat
ret
lock
sub
add
push
push
das
dec
mov
aaa
in
push
test
or
xchg
push
pop
sti
dec
andl
mov
jns
arpl
sub
and
pop
repnz
and
stos
mov
push
push
xlat
negb
sub
pop
stc
mov
xchg
cmp
mov
adc
push
jp
aaa
in
aaa
xchg
jno
inc
imul
lea
jb
dec
sti
into
mov
sbb
pop
jns
mov
jg
xchg
pushf
and
pop
jns
xchg
and
xorb
and
out
popf
aam
das
lcall
cwtl
flds
pop
inc
out
insb
jl
ja
jle
call
cmp
sub
jl
mov
and
sub
add
xchg
mov
dec
mov
mov
jnp
rorl
addb
idivb
out
stc
enter
fabs
mov
sub
or
cmp
mov
jnp
or
stc
ja
test
sarl
jge
pop
in
aaa
push
in
mov
andl
pop
jns
push
das
dec
jg
insb
cmp
insl
inc
jl
in
push
stos
icebp
dec
cmp
iret
aad
aaa
push
into
ja
outsl
shrl
scas
nop
push
pop
jns
pop
popa
hlt
pop
addr16
lock
inc
gs
jb
xchg
and
push
js
push
sti
in
inc
pop
in
pop
jge
sar
les
mov
xchg
pop
jle
pop
ret
sbb
popf
sub
pop
jle
in
xor
test
jbe
icebp
push
xor
shr
xchg
arpl
cld
ja
enter
or
inc
mov
adc
push
fmulp
flds
test
push
pop
jns
and
mov
rcrb
pop
jns
xchg
mov
dec
gs
lahf
mov
push
sbb
stc
jbe
mov
sub
push
mov
mov
push
stc
cmp
lret
mov
pop
fisubs
pop
out
cmp
jge
dec
mov
call
enter
stos
ret
cli
adc
xor
and
cmpsl
inc
jl
faddp
cmp
cmp
dec
xchg
xchg
push
or
sbb
jmp
es
sti
dec
mov
ss
jle
in
inc
dec
pop
call
mov
mov
out
and
xchg
ror
xor
jmp
add
test
pop
jle
push
and
je
mov
add
sub
into
ds
scas
imul
jbe
lds
repnz
mov
jns
jmp
aas
repnz
adcb
add
xchg
jge
arpl
sub
jl
in
sbb
imul
imull
pop
xchg
es
lods
xor
mov
loop
mov
mov
xchg
mov
or
jae
jne
in
arpl
out
mov
mov
dec
cmc
shrb
inc
jge
faddp
mov
sti
scas
mov
ret
enter
jecxz
sub
icebp
loop
xchg
xor
mov
cld
sti
fwait
xchg
negl
xor
mov
testl
xchg
movsb
incl
int3
shrl
das
shlb
imul
sub
ret
jno
mov
or
adc
sbb
repnz
pop
jmp
mov
sahf
xlat
shlb
cld
pop
pop
pushf
mov
adc
scas
mov
mov
pop
xchg
loop
or
stos
jp
repnz
jo
lock
lea
repnz
enter
xor
pop
jns
fidivs
enter
cs
pop
mov
sbb
jp
jge
jns
loop
enter
mov
adc
aas
inc
jns
xchg
push
add
mov
es
js
xchg
push
pop
push
jle
cld
movsb
cld
sbb
mov
push
pop
jns
xor
aam
sbb
mov
and
mov
push
or
inc
mov
mov
and
mov
std
mov
out
jp
xlat
push
inc
jle
in
adc
mov
jmp
or
cld
jnp
xchg
lahf
or
stc
insl
dec
pushf
fbstp
repnz
das
mov
xchg
ljmp
add
mov
xor
and
ljmp
test
push
stc
in
daa
mov
mov
mov
loopne
pop
jle
fsub
and
mov
mov
jns
in
cmp
add
or
pop
jns
xchg
test
sbb
inc
lds
fs
push
mov
mov
dec
mov
jl
adc
sbb
daa
ds
hlt
repnz
cmp
mov
int3
inc
lret
mov
mov
fwait
out
adc
fiadds
clc
enter
xchg
nop
aas
orl
icebp
push
repz
ljmp
divl
cmp
das
mov
insl
xor
or
xchg
out
mov
lret
mov
stos
jbe
div
cld
repnz
das
clc
pop
scas
mov
aad
push
jl
lret
das
mov
xchg
or
cs
mov
das
mov
xorb
jl
das
mov
push
mov
pop
fwait
outsl
das
and
cld
repnz
push
or
ds
sbb
and
mov
std
mov
test
mov
jle
in
in
mov
and
sahf
or
fadds
pop
lods
push
cs
in
pop
jle
mov
ss
icebp
lret
sub
cmpsb
ds
xchg
jg
or
scas
lahf
movsb
out
es
sub
aad
iret
mov
xchg
mov
push
faddl
aaa
xor
js
push
cld
repnz
mov
inc
push
jno
and
sarb
cltd
pushf
adc
repnz
das
mov
js
lds
lret
das
mov
call
xchg
cwtl
in
lea
mov
mov
sbb
mov
jg
cmp
jmp
aas
popa
enterw
movsl
mov
pop
cwtl
scas
jl
repz
sar
pop
mov
sbb
int
xor
call
xchg
sbb
addr16
cld
add
dec
cmp
pop
jns
xchg
call
out
loope
ljmp
mov
lods
inc
testl
xor
cmp
inc
scas
push
mov
test
stc
in
fisubs
std
pop
test
push
mov
notl
repz
mov
push
loopne
sti
sbb
pop
add
add
xchg
mov
push
leave
lahf
add
push
xchg
jle
mov
cmp
enter
daa
movsb
mov
and
js
sti
loop
mov
lret
and
mov
pop
mov
ds
sub
lock
movsl
push
push
popf
cmpsl
or
scas
mov
inc
sub
roll
lea
rcrb
scas
mov
jnp
jno
adc
aaa
xchg
push
in
and
repnz
cmpl
or
mov
cmp
jb
sbb
mov
xor
stc
testl
sub
fiaddl
rclb
sub
mov
xchg
pop
nop
adc
mov
mov
push
les
push
into
scas
shlb
push
push
sub
ss
push
fs
jns
push
mov
fnstcw
cs
pop
test
inc
shl
ja
imul
test
xchg
push
pop
jns
xorl
add
mov
add
ret
or
scas
call
xchg
push
xchg
inc
icebp
pop
xorb
aaa
jmp
mov
pop
dec
and
stc
rorb
insb
in
out
mov
fistps
sub
dec
and
lcall
scas
mov
sub
or
push
adc
xchg
cmp
jns
add
fs
daa
out
aas
pop
or
lds
js
cld
repnz
jecxz
shll
lods
dec
inc
clc
and
push
rolb
aam
fldenv
adc
cmp
or
test
inc
sub
or
cmp
pop
aad
mov
jmp
shrl
in
or
cmp
aaa
nop
out
movsb
arpl
pop
jns
xchg
ret
push
stc
cmp
lods
outsl
sub
hlt
xchg
inc
ret
mov
hlt
jae
popf
rclb
pop
ljmp
jb
stc
dec
testb
xchg
jp
dec
lret
mov
sarl
pop
mov
cmp
scas
mov
movsb
outsl
mov
mov
or
in
and
sbb
daa
and
jns
xchg
push
outsl
dec
loop
xchg
wbinvd
jecxz
fimuls
push
pop
mov
ss
add
pop
aaa
mov
test
push
loop
cwtl
lods
je
cld
repnz
das
out
jnp
pop
fsubrp
or
test
xchg
jg
inc
sub
adc
es
add
push
or
mull
repnz
cmp
push
mov
enter
outsl
mov
inc
mov
jl
jne
mov
push
and
mov
test
cs
jg
push
mov
adc
dec
mov
js
test
int3
cmpsb
sahf
nop
sub
in
insl
lock
movb
jmp
push
mov
enter
jae
cwtl
scas
mov
dec
imul
jo
movsl
jno
fwait
push
jb
repnz
push
lahf
sbb
sbb
mov
sub
ds
jno
and
inc
pusha
mov
call
fstpl
cmc
cmpb
sub
test
xchg
stc
jmp
subb
jns
nop
js
lods
daa
pop
mov
mov
arpl
jo
repnz
xchg
sbb
enter
divl
mov
and
pop
jns
xchg
adc
ret
jae
adc
xor
nop
icebp
enter
add
lret
scas
add
mov
and
test
inc
mov
pop
outsl
cld
cmp
lret
xchg
enter
inc
inc
fstl
shl
das
mov
clc
cmp
dec
mov
mov
mov
or
lahf
jae
int3
xor
xor
mov
repnz
sti
xor
fmull
adc
add
sbb
xchg
push
cltd
sub
and
mov
popf
pop
insb
push
or
aas
cmp
mov
dec
pop
mov
pop
imul
push
mov
ljmp
jae
pop
pop
inc
inc
pop
mov
in
movsl
mov
xor
test
add
xchg
push
pop
movsl
push
add
xchg
fistpl
push
pop
jns
and
inc
dec
rcl
mov
pop
push
pop
jns
fbstp
test
cmp
fisttpll
inc
add
in
adc
dec
outsb
repnz
out
mov
push
repnz
fbstp
enter
ret
insb
xchg
jg
pop
cmp
fwait
and
dec
test
stc
in
mull
add
cmp
incl
jl
in
popf
cmp
xor
fisubrl
repnz
mov
dec
adc
int
xchg
lret
das
mov
or
orl
das
mov
imul
adc
dec
pop
mov
lret
adc
out
dec
jp
ret
out
test
loop
repnz
das
scas
call
das
jo
push
arpl
imul
xlat
push
push
fidivrs
repnz
pop
cmp
pop
mov
add
sub
repnz
cmp
add
mov
push
xchg
mov
mov
jl
ret
sahf
xchg
popf
cmc
enter
shrb
pop
jle
testl
lretw
sahf
rcrl
cmpl
cmpb
les
in
inc
lcall
in
push
dec
add
cmc
mov
pop
in
ja
sub
pop
imul
cld
push
das
xchg
push
pop
jns
xchg
mov
add
jnp
pop
sub
pop
jns
jo
and
js
cmp
stos
jle
xor
xchg
pop
jns
xchg
mov
das
shll
hlt
test
js
jbe
les
inc
nop
in
push
pop
xor
sub
pop
and
out
jne
fidivrl
pop
jns
inc
inc
and
inc
popa
sbb
jge
js
cld
sti
enter
testb
add
pop
repnz
das
mov
rcr
inc
pop
sahf
adc
stc
cmp
lock
and
lret
mov
mov
js
outsl
xor
mov
loop
cmpsb
adcl
cmp
mov
dec
lds
push
movd
notl
leave
and
push
ret
fdivl
arpl
jb
in
pop
and
pusha
das
loopne
shrb
xchg
pop
jle
dec
cltd
dec
push
scas
fistpll
inc
push
pop
jns
mov
push
je
pop
mov
in
inc
movl
xchg
mov
or
push
roll
sahf
pop
jns
push
repnz
stc
adc
addr16
mov
mov
or
xchg
push
fimuls
fsubrl
cs
adc
push
pop
jns
lret
loope
xor
jp,pt
add
in
test
xchg
xchg
push
pop
jns
ret
push
adc
mov
xor
jns
sbbl
test
fsub
in
mov
fs
das
push
sub
dec
or
cmc
mov
jge
push
or
repnz
mov
jle
mov
adc
imul
jle
in
imul
adc
pop
push
lds
stos
jle
in
or
jge
stos
filds
dec
test
in
pop
push
mov
rcrb
jl
xchg
lahf
add
jle
in
adc
jle
cmp
sbb
xchg
sbb
imul
pop
out
jg
cmpsl
popf
std
in
outsl
nop
dec
mov
xchg
lret
xor
cs
in
pop
fists
ljmp
jge
insb
movsl
inc
jle
cli
xor
push
xlat
ss
xchg
cwtl
into
shlb
aam
or
mov
jmp
aad
lret
sub
sbbb
cld
sti
enter
push
cmp
pop
pop
xor
inc
mov
lret
das
mov
daa
jb
xor
inc
mov
lahf
repnz
xchg
adc
outsl
rorb
and
call
cmp
cmpl
lock
mov
lret
mov
mov
dec
sbb
push
mov
pop
mov
stc
xchg
jp
add
leave
lret
jno
xchg
adc
inc
pop
jle
divl
lods
sti
mov
sub
push
stos
mov
testl
xchg
pop
jle
cmp
add
gs
rcrl
pop
xchg
pop
data16
and
push
push
imul
mov
cmp
sbb
inc
imul
sbb
inc
pop
xor
jle
mov
xchg
and
cmp
pop
jle
cli
jle
in
lock
in
xchg
sbbl
or
mov
test
dec
mov
cmp
mov
adc
pop
bswap
das
fidivl
cmpsl
aad
push
mov
repnz
dec
pop
jle
mov
mov
push
xor
mov
cmp
pusha
mov
rcl
das
add
stc
notl
insb
js
inc
imul
mov
mov
or
lret
gs
dec
cmp
outsl
mov
and
lcall
dec
popa
sbb
fistl
or
and
repnz
fwait
pop
jnp
pop
adc
mov
repnz
jnp
fwait
pop
pusha
stos
into
or
shlb
jl
cmp
in
or
jne
add
cmpsl
add
xchg
pop
jle
add
ret
mov
cmpsb
push
stc
in
push
rcll
xor
ljmp
xor
jecxz
outsb
add
or
push
mov
int3
insb
int3
sbb
lods
push
or
xorb
push
sti
icebp
cltd
or
and
push
and
inc
add
shll
add
jl
rcrb
mov
dec
in
mov
fmul
into
sub
cmp
xor
fcoms
lds
sub
mov
cmp
out
popf
sbb
mov
sbb
mov
inc
les
cmp
jns
les
loope
loope
cld
and
out
push
repnz
ja
mov
mov
push
std
jecxz
ret
cmp
sub
mov
test
add
in
in
cmp
sbb
out
sahf
xchg
xchg
xchg
push
lret
repz
sub
mov
dec
in
push
pop
push
lret
inc
inc
mov
xchg
push
pop
jns
clc
outsl
in
loopne
lods
dec
sub
sbb
mov
mov
enter
ljmp
mov
pop
inc
jmp
mov
dec
test
xchg
sub
mov
mov
call
fnsave
out
push
pop
fsubr
and
jo
jmp
add
imul
cli
cmc
jb
inc
mov
xchg
add
inc
xchg
sbb
pop
lret
ja
push
mov
scas
mov
lea
dec
mov
pop
shlb
push
scas
mov
test
neg
xor
mov
ret
lret
std
jbe
call
lods
xchg
mull
pop
imul
repnz
ret
xchg
rclb
mov
lcall
fcom
arpl
sub
in
fnstcw
xchg
mov
sub
xor
das
jg
fsubs
popf
add
jo
das
mov
cmp
mov
and
cld
repnz
out
mov
inc
stos
inc
jbe
ljmp
dec
cmp
inc
les
push
fisttpl
shll
out
dec
ret
lahf
notl
loope
iret
jmp
mov
xchg
pop
jle
adc
popf
push
outsl
push
inc
xor
pop
pop
jle
in
xchg
mov
les
mov
stc
in
sub
sbb
push
mov
fdivrl
adc
and
mov
ja
enter
xor
jg
stc
repnz
jno
jbe
lret
cmpsl
mov
jl
stc
sti
enter
xor
mov
hlt
and
adc
test
jo
sub
inc
adc
popa
lret
push
inc
push
sub
dec
push
cmp
cmp
adc
mov
and
add
push
in
mov
mov
test
gs
sub
add
lret
out
test
cld
shrb
or
mov
es
cli
mov
adc
pop
sub
sub
push
xchg
pop
js
loop
jg
repnz
cld
ret
jo
test
xchg
mov
add
push
cmp
imul
xchg
jmp
add
pusha
dec
jns
in
pop
mov
xchg
jl
sarl
inc
testb
movsl
std
out
movsl
sub
mov
outsb
jmp
cmp
add
mov
fisubl
cmp
das
mov
pop
push
lods
pop
xor
das
mov
inc
imul
mov
repnz
aad
insl
jecxz
inc
and
cmp
sahf
cld
repnz
nop
es
and
push
clc
mov
mov
dec
xor
bound
ja
popf
stos
dec
in
inc
cmpsl
neg
das
into
test
repnz
das
lods
add
filds
gs
pop
sub
inc
inc
repnz
das
mov
and
fdivrl
das
mov
loop
ljmp
das
mov
das
sbb
mov
jmp
out
lret
pop
insb
dec
test
aad
jl
fs
adc
clc
pop
jl
ficoms
jns
in
lds
add
pop
push
pop
jns
xchg
fsubr
pop
add
jns
lahf
int
hlt
enter
xor
divl
mov
xchg
xor
pushf
es
jb
jnp
daa
scas
call
cmpsl
inc
lds
sub
lret
or
mov
pop
jl
dec
push
mov
data16
imul
xchg
xchg
mov
jecxz
or
pop
dec
or
dec
and
xor
insb
push
jl
mov
sbb
sbb
lods
call
xor
jb
repnz
pop
lock
jl
mov
dec
mov
push
data16
jg
push
imul
fwait
push
sbb
xchg
fidivl
sub
lods
addl
lret
mov
js
or
sub
jbe
pop
stc
ds
dec
inc
outsl
mov
lret
xchg
push
mov
addb
mov
inc
lds
xor
mov
xlat
fs
das
mov
mov
inc
es
and
shl
das
mov
adc
push
lods
xchg
sub
outsl
mov
cld
repnz
pop
cmp
loope
xchg
ja
inc
cld
repnz
das
fmul
pusha
iret
dec
fsubs
out
mov
mov
dec
mov
adc
out
inc
jge
movl
dec
int
es
mov
popf
mov
inc
call
fdiv
lret
das
decl
cmp
xchg
icebp
jecxz
lock
lret
das
mov
das
int3
lods
xor
and
mov
sahf
jnp
insl
mov
and
push
into
and
repnz
aaa
xchg
fmul
push
negb
movsb
fucomp
xchg
sub
sub
mov
add
xor
cmpsl
loop
xor
push
fwait
inc
and
jo
jns
xchg
push
imul
call
std
adc
repnz
pop
pop
bound
stos
insb
add
ljmp
sti
or
xchg
leave
push
inc
or
sbb
push
and
out
push
or
lret
inc
mov
or
xchg
mov
stc
push
mov
sbb
lret
das
mov
jle
call
xchg
gs
mov
mov
lods
adc
and
in
ret
aam
or
and
jns
rcrb
nop
ficomps
gs
cmp
jbe
mov
mov
arpl
out
repnz
repz
inc
sub
mov
mov
out
and
addr16
xchg
outsb
mov
in
cmp
jp
fbstp
mov
jmp
mov
push
fiadds
icebp
sbb
aas
jne
and
sub
es
xor
enter
outsl
insl
jle
cli
mov
jb
inc
jb
xchg
lret
mov
bound
es
scas
mov
lds
and
mov
in
psrld
adc
sti
inc
sbb
lret
loop
mov
sahf
or
repnz
js
test
xor
mov
mov
lret
mov
sub
daa
xorl
movsb
dec
cmpsl
into
adc
lcall
int3
mov
jg
fistpll
pop
jg
popf
aam
scas
push
and
stc
negl
dec
jecxz
and
mov
fisubrl
dec
push
jle
in
outsl
sbb
cmp
movsl
enter
xchg
pop
into
fstpt
xchg
into
add
xchg
push
ficomps
popf
or
cwtl
inc
pop
jns
sub
les
dec
mov
mov
repnz
cltd
loope
out
in
add
and
sub
and
loop
mov
sbb
outsl
loop
mov
sub
enter
out
mov
rcrb
cld
repnz
out
jmp
inc
ljmp
stc
in
and
lahf
les
jne
sbb
out
out
test
jl
sub
mov
jle
fbld
repnz
pop
mov
in
xchg
push
fxtract
mov
sub
test
into
inc
das
mov
push
jge
mov
xchg
inc
gs
inc
out
or
test
mov
pop
mov
hlt
stc
in
pop
sbb
jb
xlat
xchg
push
test
xchg
pop
jle
xchg
pop
cwtl
sub
jns
out
jmp
ds
pop
jle
pop
xor
cmp
sub
pop
fbld
gs
and
stc
in
xchg
jl
pop
imul
lock
ljmp
cmc
adc
mov
cmpsl
jecxz
das
pushl
dec
sbb
mov
cmp
nop
js
out
sub
lret
cmp
fs
jno
jns
xchg
pop
xlat
out
out
ret
arpl
inc
ss
dec
mov
cmp
mov
xchg
mov
stc
in
fs
js
js
aaa
or
cmp
int3
mov
xchg
fwait
push
mov
mov
xchg
push
fimuls
mov
mov
jbe
mov
pop
jns
cltd
push
int
std
lret
ss
push
inc
pop
jns
inc
rol
insb
xor
das
adc
sub
loope
loop
jg
xchg
in
mov
mov
dec
cwtl
mov
lcall
sarb
les
rcll
ja
push
xor
sbb
sub
xchg
xchg
int3
pop
pop
mov
iret
sahf
sbb
ret
sti
sti
jne
xchg
lds
lret
mov
and
push
mov
cmp
and
lret
das
mov
jecxz
and
xchg
push
dec
rolb
cld
ret
aam
stos
pop
shll
scas
mov
pop
fs
sub
dec
xor
xchg
fxtract
xchg
mov
mov
jg
mov
mov
xchg
enter
arpl
mov
xchg
js
push
or
mov
jmp
popf
inc
pop
dec
mov
jns
popf
sub
jns
cmp
jecxz
ds
out
add
xor
fcomps
push
xchg
adc
scas
popf
aas
mov
dec
mov
sbb
cld
repnz
das
in
cmpsl
mov
cmp
xor
out
sbbb
out
outsb
mov
and
cmp
lret
and
cmp
push
fnstenv
and
adc
pop
inc
out
push
pop
das
rcr
pop
cmc
adc
jne
xchg
cmp
add
leave
inc
jecxz
stc
adc
ss
xor
sti
jb
xor
in
jg
sub
dec
jmp
and
cmp
in
pop
jle
out
int
xor
ds
add
ljmp
test
pop
ja
data16
nop
sbb
imul
and
adc
dec
gs
mov
lsl
mov
or
movsb
aam
jg
xchg
inc
pop
push
pop
rcrb
or
jecxz
mov
ficompl
std
rcrb
sahf
adc
mov
xchg
imull
pusha
jno
inc
add
pop
hlt
insb
std
iret
in
push
pop
pop
outsb
mov
pop
pop
stos
sbb
inc
pop
jns
or
rcrb
out
mov
lds
xor
xchg
push
bound
jns
enter
stc
in
pop
pushf
xlat
adc
mov
pusha
cmpsl
repnz
pop
loope
pop
jle
or
jmp
stc
xchg
pop
jns
sbb
xor
mov
test
sbb
int3
push
lock
pop
jns
adc
push
clc
addr16
outsl
jp
stos
mov
jns
xchg
movsl
outsb
int
pop
repz
pop
cwtl
jbe
jns
xchg
push
dec
push
imul
in
push
pop
insl
filds
add
test
cld
xchg
push
pop
jns
mov
mov
jb
mov
loope
rol
sbbb
mov
xchg
pop
out
push
mov
jecxz
dec
and
enter
in
pop
inc
inc
pop
xchg
lea
decl
jbe
xchg
sbb
xchg
ret
out
aaa
pop
adc
loopne
jns
fldt
sub
aam
in
push
popf
mov
movsl
jmp
and
dec
jmp
mov
loop
shl
into
cli
dec
iret
jo
scas
outsl
or
sub
jl
cli
jae
jg
aam
sub
mov
loope
jns
or
cld
repnz
enter
and
xor
dec
repnz
das
mov
dec
xor
test
ret
pop
mov
or
sub
repnz
jnp
int
dec
add
mov
or
test
gs
dec
or
mov
pop
lds
xor
outsb
xchg
push
cld
sti
enter
dec
mov
cmpb
rcl
lret
das
mov
rol
xchg
hlt
push
lret
das
mov
jge
adc
int3
pop
cwtl
add
mov
inc
lahf
jbe
repnz
cltd
shr
push
jns
cld
repnz
test
jne
xor
pop
push
sbb
lret
add
fisubrl
ret
das
lcall
mov
movsb
dec
clc
mov
jle
test
not
xor
pop
popf
mov
sbb
insl
in
adc
push
pop
jns
jbe
push
mov
aam
in
push
pop
jns
or
bound
cmp
cmpsl
xchg
jbe
pop
out
cmp
lret
xchg
push
in
mov
das
mov
pop
inc
pusha
pusha
insl
aam
jmp
leave
das
push
dec
mov
cmpsb
add
jo
sub
and
push
pop
inc
gs
add
pop
popf
sub
mov
xchg
mov
jmp
inc
add
mov
cld
repnz
mov
jmp
shll
ja
inc
insb
sbb
fs
ja
int3
and
test
fistpl
mov
pop
jns
xchg
int
scas
mov
push
pop
inc
push
sub
pop
inc
scas
mov
ja
push
loope
cs
push
sbbb
jb,pn
adc
xchg
divl
jo
das
clc
xchg
imul
enter
mov
mov
pop
pop
or
jge
dec
mov
clc
sub
mov
and
iret
scas
mov
int3
mov
mov
std
imul
pop
dec
in
bound
cld
jp
movsb
xor
push
aas
test
or
je
push
mov
shlb
push
gs
inc
loopne
stc
in
dec
mov
mov
jnp
stc
in
pop
push
inc
xchg
rol
xor
push
mov
jle
sub
icebp
rcrb
inc
mov
out
in
xchg
xchg
push
fdivp
jne
sub
gs
pop
jle
neg
inc
add
pop
in
inc
loope
in
inc
jg
shll
mov
fimuls
and
mov
pop
mov
loope
das
js
popa
or
in
xchg
scas
das
or
repnz
sub
mov
int
outsl
mov
lret
pop
mov
jae
fists
lret
push
dec
push
fwait
sub
cmp
fstps
imul
or
pusha
cmp
bound
out
ljmp
push
sahf
jmp
dec
repz
pop
push
inc
push
ret
push
mov
push
xchg
stc
in
cmp
dec
or
in
repnz
pop
cld
push
stc
pop
pop
sub
add
or
das
add
data16
adc
loop
push
das
mov
dec
xlat
jmp
push
cmc
fcoms
add
stos
or
cld
repnz
xchg
jns
insl
jge
or
jle
mov
das
and
inc
test
pushf
stc
in
mov
ror
mov
dec
sbb
or
inc
jle
repz
andnps
jnp
inc
ficomps
sub
popa
xchg
xor
clc
mov
int
pop
adc
repnz
icebp
filds
into
lcall
mov
aas
ror
mov
xchg
push
pop
jns
test
inc
jnp
dec
jnp
mov
cmp
fldl
imul
lret
xor
test
inc
and
xchg
icebp
enter
pop
sti
out
xchg
push
aas
lret
jae
je
lock
scas
or
jge
jno
adc
adc
std
push
popa
inc
scas
mov
ja
adc
add
repnz
mov
mov
in
scas
out
jecxz
pushf
movsl
test
filds
mov
lds
cwtl
jb
and
pop
and
stc
inc
pushf
cmp
pop
shl
aam
inc
sub
inc
jmp
and
int3
push
inc
jmp
push
movsl
or
ficomps
dec
in
inc
sti
and
pop
clc
popf
pop
inc
jmp
mov
es
pop
lret
loop
repnz
pushf
dec
dec
jbe
shrb
jp
push
dec
jg
cmp
add
lds
jnp,pn
jno
add
xchg
mov
sysexit
mov
fbld
xchg
mov
nop
jmp
in
scas
dec
icebp
movsb
incl
jmp
das
fistpl
stc
in
mov
cltd
ss
sbb
int3
repnz
das
call
mov
ja
or
mov
push
lock
scas
cmp
jl
add
sub
in
lcall
and
data16
movsb
lods
and
sbb
pop
jns
xchg
dec
aas
pop
and
mov
sbb
aad
test
leave
xchg
push
das
lods
mov
subl
jge
mov
mov
shl
popa
jl
dec
xor
pushf
jbe
int3
leave
add
shrb
mov
lret
das
dec
in
jne
cld
movsl
int3
push
cmp
repnz
das
mov
jmp
and
pop
lret
das
mov
and
mov
int
das
mov
sub
xlat
repnz
mov
lret
cld
repnz
sti
mov
in
test
mov
test
cld
repnz
das
inc
dec
push
ret
sahf
arpl
std
pop
repnz
das
mov
add
aad
outsl
dec
fs
push
aas
xchg
scas
pcmpeqb
cld
jnp
jge
insl
sub
into
inc
and
xchg
shlb
popf
ret
dec
push
enter
push
les
sbb
mov
inc
icebp
shrb
lret
das
icebp
jnp
sti
adc
cmp
inc
mov
loopne
xchg
mov
sahf
and
nop
dec
jno
lock
cmp
cmp
int
dec
mov
enter
jb
fdivr
in
pop
das
aas
std
xchg
mov
pop
xor
aad
out
xchg
pop
jle
fsubr
or
adc
fisttpll
pop
enter
add
pop
jo
push
arpl
cmc
sti
pop
mov
dec
clc
enter
dec
enter
inc
imulb
das
cmp
inc
push
fiadds
das
sbb
arpl
jle
in
jle
pop
push
mov
dec
xchg
in
pop
cmc
pop
xor
push
hlt
push
fcmovu
sbb
in
pop
jle
outsl
add
jne
cmp
adc
pop
jle
add
sbbl
and
js
sti
mov
ficoml
lret
lahf
insb
sub
imul
or
mov
adc
pop
inc
test
stos
jmp
lret
inc
push
test
ss
lret
mov
inc
cmp
jmp
pop
jge
out
daa
clc
ljmp
stc
push
fcomps
jl
in
mov
jns
or
in
add
mov
mov
sbb
or
imul
adc
lahf
adc
cld
repnz
cld
lcall
ja
inc
mov
add
cltd
and
je
push
pop
jns
outsl
cmc
into
test
data16
or
push
popf
mov
xchg
scas
inc
mov
std
mov
add
popa
stos
xchg
inc
inc
xchg
leave
push
in
xchg
int3
jg
pop
jns
mov
xor
in
ret
out
mov
in
jg
push
jae
mov
mov
inc
jge
mov
cmp
mov
jnp
mov
stc
xlat
movsb
pop
jge
lods
jl
sbb
insb
pop
sbb
dec
in
popf
dec
inc
mov
cld
repnz
pop
ss
push
iret
ja
push
insl
repnz
adc
jp
cmp
xchg
lods
pusha
cmp
push
mov
repnz
mov
dec
cmpsb
sbb
xchg
scas
mov
xor
mov
cli
int3
jp
mov
out
fmuls
mov
call
lret
fcmovu
push
daa
iret
in
xor
lods
mov
mov
popa
xchg
out
xchg
aaa
sub
pop
push
lds
int
enter
lret
xchg
dec
sbb
lcall
mov
pop
inc
mov
daa
in
ja
lret
mov
jp
imul
in
add
jl
jno
jmp
push
xlat
popa
repnz
cmp
mov
xchg
mov
lret
xlat
out
pop
aaa
shll
outsb
out
je
lret
mov
pop
mov
fwait
sbb
push
mov
dec
sub
jg
bound
xchg
cmc
enter
add
sub
shlb
adc
mov
xor
in
push
fidivrs
or
push
loop
icebp
leave
sbb
fldt
cmp
xlat
sub
push
sub
repnz
das
arpl
inc
dec
sub
mov
js
outsl
pop
hlt
pop
ja
xchg
das
mov
out
push
inc
daa
enter
cmp
hlt
jne
mov
jge
mov
pslld
inc
mov
or
dec
jge
sub
das
mov
adc
loop
cmp
xchg
mov
mov
mov
sbbl
mov
jp
jns
mov
lcall
push
mov
mov
filds
scas
adcl
and
and
jae
test
sub
bound
pop
fmull
mov
ds
add
and
out
and
rorl
ss
subb
sub
scas
mov
or
pusha
out
out
mov
nop
lds
or
les
mov
inc
xor
ret
push
imul
cld
bnd
pop
inc
and
loop
or
cld
repnz
outsb
cmpsl
loopne
int3
cltd
jae
mov
stc
in
jg
dec
xor
mov
jmp
jno
arpl
xchg
int
outsl
and
outsl
add
mov
sbb
loopne
dec
cmpsb
int
lods
inc
inc
inc
jg
dec
cmp
mov
inc
cmc
divl
stc
in
or
sub
loop
mov
xchg
pop
aas
mov
icebp
aam
sahf
jle
and
sub
insl
cmc
ja
out
inc
jle
enter
push
lock
add
enter
xchg
repnz
cltd
add
call
pop
jle
negl
push
sub
dec
popf
psubusw
cmc
stc
imul
xchg
stos
push
push
cmp
mov
push
adc
mov
sbb
cmp
iret
fildl
popa
mov
jmp
in
pop
inc
pop
pop
sahf
mov
cwtl
inc
jo
mov
fdivrs
push
inc
sub
in
addr16
jle
divl
push
icebp
inc
pushf
in
test
leave
stc
test
pop
mov
mov
insl
jge
mov
lcall
inc
jae
adc
loopne
lret
mov
sub
daa
in
inc
or
sub
notl
xchg
fdivr
jg
scas
es
cmp
in
pop
mov
clc
dec
sub
fimuls
push
in
pop
stc
inc
cmp
xchg
lock
iret
xchg
not
jns
xchg
push
push
xchg
adc
roll
sub
and
shlb
add
mov
add
out
add
xchg
das
jge
ds
popa
mov
adc
mulb
xchg
xchg
xchg
je
push
xlat
setae
adc
jg
sbbb
sbb
in
lods
inc
pop
push
in
or
sub
sub
cmp
mov
dec
sahf
and
js
mov
iret
sub
inc
int
jns
popf
test
jmp
or
in
push
pop
mov
mov
jns
stos
notb
adc
mov
or
pop
pop
jns
fwait
mov
arpl
es
push
ficomps
fwait
mov
sbb
cmc
enter
and
adc
jge
gs
sub
mov
pop
ret
jns
popf
and
insl
add
xchg
push
pop
dec
stc
hlt
pop
push
push
dec
xchg
push
pop
jns
loopne
mov
fsubrl
das
add
jns
mov
ja
and
das
ljmp
pop
rcrl
sbb
into
inc
and
addr16
in
inc
push
ds
and
ss
fadd
cmp
mov
std
and
addr16
jl
lret
pushf
xor
sub
xchg
and
shl
pop
mulb
lret
mov
cmp
mov
das
mov
cmp
leave
outsb
icebp
pusha
into
out
add
xlat
cmpb
mov
ret
inc
in
and
std
jb
les
jne
inc
mov
jno
orb
addr16
test
in
inc
mov
dec
cld
repnz
xchg
push
fadd
clc
scas
aas
xor
repnz
mov
or
jp
jnp
or
adc
stc
into
ficomps
popa
mov
adc
dec
cmp
jno
popf
xchg
lahf
jle
in
sar
adc
std
push
lret
stc
in
pop
sbb
je
inc
and
imul
jle
sti
push
jns
aas
xchg
dec
xchg
add
enter
mov
cmp
ja
add
iret
mov
test
in
mov
insl
fsubl
jge
in
pop
adc
adc
jecxz
mov
enter
sbbb
into
xor
in
push
stc
decl
or
jb
imul
ja
icebp
scas
dec
lahf
sbb
push
pop
jns
sub
shrl
xchg
pop
jns
xchg
cld
xor
leave
xor
insl
inc
in
xchg
xchg
push
cmpsb
pop
sub
xchg
icebp
popa
xchg
inc
pop
jle
notl
stos
aad
push
aam
fisubrl
add
imul
xchg
inc
mov
jo
fsts
adc
pop
pop
adc
mov
dec
xchg
pop
in
pop
jle
cli
cld
test
xchg
inc
movsl
inc
and
jle
in
aas
add
iret
js
ja
mov
jns
loopne
aad
push
jecxz
into
mov
add
iret
inc
xlat
repnz
hlt
dec
dec
jae
jl
lret
sbb
cld
add
xor
mov
mov
jecxz
iret
mov
scas
test
inc
lea
insb
mov
mov
fsubr
xchg
sub
stos
icebp
stc
call
jns
push
sti
xlat
pop
xchg
mov
pop
jns
xchg
pop
cmp
add
popl
fbld
push
imulb
js
sbb
fwait
adc
pop
jle
jecxz
jae
cmp
or
jb
sbb
pop
jle
in
sbb
sub
pop
shrl
test
leave
xchg
out
and
ffreep
cwtl
inc
test
outsl
pop
nop
or
repz
enter
jge
mov
pop
mov
push
clc
inc
lea
push
pushl
stc
in
jg
dec
cmp
arpl
jmp
push
in
pop
jle
adc
mov
sbb
ret
sub
sbb
gs
mov
repnz
jns
lods
std
and
clc
inc
mov
inc
rclb
fistl
pop
js
movsl
push
gs
mull
scas
mov
mov
mov
in
call
ljmp
sbb
xchg
add
fimuls
into
push
dec
jl
fistl
jle
ja
imulb
mov
arpl
mov
xchg
sbb
insb
xor
jp
mov
mov
mov
pop
mov
pop
jns
sub
cld
fadds
add
jns
xchg
sbb
and
std
imul
in
push
shr
decl
stos
in
add
xchg
push
pop
inc
pushf
dec
test
outsl
xor
sbb
push
ret
or
mov
inc
push
mov
xlat
mov
dec
and
xchg
pop
jle
testb
xchg
lret
in
dec
sahf
mov
sbb
inc
jae
adc
scas
fcmovu
ds
mov
outsl
cmp
jmp
xlat
mov
je
cmp
addr16
pop
xchg
jg
stc
outsb
or
push
test
imull
sbb
in
fmuls
jmp
xchg
jg
ret
cmp
xchg
pop
popl
das
xchg
es
and
jl
push
lods
or
ja
insl
sbb
or
cld
repnz
call
mov
ja
mov
jmp
stos
sub
fwait
in
das
lcall
xor
hlt
int3
dec
rolb
cld
repnz
mov
jmp
cld
rcll
call
mov
int
mov
mov
adc
adc
and
dec
in
jl
lret
das
and
inc
sbb
and
movsb
cli
repnz
das
mov
xor
pop
pop
mov
add
cmp
pop
dec
sub
push
sarl
or
out
and
daa
aaa
out
inc
dec
adc
in
call
jg
xchg
and
jge
cmp
js
mov
and
jnp
sub
dec
dec
lea
scas
mov
cmp
xor
mov
sub
mov
jmp
cli
xchg
enter
enter
jge
out
nop
add
cs
nop
lock
push
push
pop
ds
imul
movsl
xor
in
push
fisubrs
jmp
jmp
dec
aam
pop
scas
data16
pop
jns
push
test
jecxz
inc
ljmp
in
fsub
stos
xchg
push
pop
jns
fwait
dec
mov
in
icebp
xor
repnz
fnstcw
xchg
xor
mov
jle
mov
jg
scas
gs
xor
or
and
sbbb
daa
pop
test
das
inc
pop
dec
xchg
push
lret
mov
pushf
aam
popf
adc
imul
fsubrl
js
stos
pop
lret
cs
cld
repnz
jl
xlat
test
xchg
hlt
std
and
enter
mov
cltd
adc
add
mov
cmp
sub
cmp
stos
and
adc
mov
out
iret
or
inc
jl
jo
es
leave
mov
pop
out
in
js
shlb
mov
and
es
movsl
insb
sti
xchg
jne
mov
jne
push
popa
ss
mov
sti
cltd
mov
mov
adc
repnz
inc
das
outsb
dec
arpl
loopne
dec
xchg
sub
in
pushf
das
lahf
loopne
pop
stc
repnz
pop
jle
xlat
xorl
out
xchg
push
ficoms
out
pop
jge
orb
push
pop
jns
and
and
mov
cmpsb
ret
pop
jns
xchg
aaa
std
mov
movl
jbe
scas
jo
xchg
push
cmp
lret
cmp
cli
lods
daa
aaa
and
adcb
das
nop
in
sub
push
pop
push
dec
xchg
aaa
pop
push
or
push
fimuls
js
and
ja
pop
jns
xchg
fwait
mov
rolb
xlat
ljmp
popf
inc
mov
or
sub
in
push
pop
int
xchg
fiadds
jle
test
dec
push
mov
scas
cld
jb
push
test
mov
mov
push
push
imul
arpl
sub
in
ds
jns
lods
paddusb
push
loopne
adc
inc
pop
pop
pop
mov
insl
sbb
dec
cmp
popa
shlb
xchg
mov
repnz
aaa
dec
push
cltd
inc
int3
mov
and
scas
jg
and
out
adc
or
sbb
jg
fmull
push
jmp
int3
jl
shrl
mov
and
mov
movl
lret
cs
adc
mov
and
jbe
shrl
pop
iret
aam
movsl
stc
nop
hlt
xor
in
addr16
jg
vandnps
ljmp
or
insb
in
inc
fstps
stc
in
addr16
rcll
imul
out
jle
in
inc
ljmp
ljmp
stos
inc
das
sub
bound
scas
repnz
pop
mov
dec
aas
mov
mov
lods
mov
pop
fisubl
gs
pop
dec
push
pop
pop
pop
jns
hlt
cmp
push
mov
cmp
pop
cld
cmp
mov
xchg
push
jmp
sbb
push
pop
jns
pop
inc
xchg
outsl
frstpm(287
daa
int
lods
inc
js
sub
in
jecxz
mov
cli
or
icebp
popf
xor
fbld
push
loope
movsb
int3
cmp
or
stc
out
and
inc
ficompl
fnstsw
js
fbld
dec
rorb
xchg
imul
adc
adc
inc
pushl
push
bound
jmp
sbb
mov
inc
inc
dec
sub
sti
int
jge
pop
jle
lret
mov
icebp
sahf
je
inc
jne
sub
xor
jp
xor
mov
ficoms
mov
xchg
cmp
aas
adc
pop
jns
xchg
clc
aam
jbe
fwait
mov
in
or
addr16
popf
xor
movsb
sti
mov
repnz
daa
dec
fldenv
stos
cmp
jg
cmpsb
mov
add
push
and
or
mov
das
shll
fldenv
pop
pop
jg
push
pop
xchg
mov
mov
sbb
mov
sub
flds
jl
adc
jp
repnz
das
mov
lret
mov
push
lret
das
mov
and
icebp
cmpsl
inc
jg
stc
repnz
inc
gs
mov
jle
in
punpckhwd
hlt
xchg
hlt
rolb
stc
in
pop
mov
aad
xor
xchg
pop
jle
mov
jg
add
mov
pop
jle
jae
xor
sahf
mov
in
jg
fcomps
jge
scas
mov
jp
sbb
jnp
xor
inc
nop
cmp
int
dec
lea
cmc
in
jae
call
in
xchg
iret
push
mov
cwtl
ds
shll
andl
sub
adcb
idivb
jbe
mov
jecxz
inc
push
adc
lcall
pop
push
std
mov
adc
inc
xchg
or
inc
or
daa
leave
sub
lcall
xchg
ja
push
stc
cmp
imul
xor
mov
mov
jbe
scas
cmp
scas
mov
xchg
mov
into
or
mov
lret
shl
dec
push
mov
in
popa
scas
sbb
mov
dec
adc
push
pop
popa
lcall
leave
mov
sub
in
scas
xchg
cltd
inc
rolb
pop
cmp
das
inc
cmpb
mov
cmp
jb
gs
inc
bound
sahf
popa
jns
cld
mov
xchg
sub
inc
outsl
rorl
mov
jnp
inc
and
add
add
pop
movsl
mov
repnz
das
mov
cld
cmp
adc
xchg
jg
stc
or
and
add
popl
aam
addr16
jle
in
pop
add
jp
add
scas
mov
shlb
pop
or
scas
enter
push
cltd
adc
pop
mov
jg
jmp
sub
repnz
adc
cwtl
mov
lock
mov
xor
mov
lea
jo
xchg
cmc
push
mov
lret
mov
push
in
adc
movsb
mov
pop
push
push
xchg
sbb
das
inc
cwtl
jns
enter
mov
mov
inc
sti
in
dec
je
pop
add
rol
insl
icebp
repnz
pop
das
jmp
xchg
push
cmpl
push
fidivs
out
pusha
and
jp
xchg
sub
sti
and
and
jp
push
adc
jae
pop
rcrb
push
stc
int
mov
cmpsl
rorl
jle
imul
out
mov
jb
or
jb
xchg
jns
xchg
push
mov
adc
outsl
lret
pop
sub
test
sub
push
sbb
mov
xchg
imul
mov
mov
jle
imull
iret
and
sbb
lock
jo
jp
dec
test
in
popa
imul
lds
dec
cmp
xchg
pop
jle
sbb
das
dec
xor
xor
cmpsl
daa
enter
jnp
inc
push
mov
adc
into
cmp
jecxz
mov
lret
das
inc
pop
mov
push
fwait
in
adc
lret
das
mov
test
int
out
lret
das
mov
jb
mov
subb
cld
repnz
out
or
call
or
cld
repnz
addr16
cmova
sbb
sarl
in
das
cli
add
lods
outsb
dec
inc
stc
xchg
aaa
jge
mov
sbb
lret
and
mov
cmp
cmp
rolb
test
cld
xchg
cld
repnz
das
shrl
push
inc
jbe
enter
mov
lret
das
mov
hlt
add
clc
add
adc
outsl
add
mov
mov
push
scas
mov
pop
push
scas
pop
inc
in
push
aaa
dec
dec
insb
inc
cs
xchg
sub
pop
xchg
mov
cmpsl
add
and
jns
lods
imull
xlat
out
xchg
lret
pop
pop
repnz
enter
xor
mov
inc
or
and
inc
push
pushf
rorl
mov
jns
pop
dec
push
sbb
xchg
mov
jecxz
in
mov
repz
xchg
stos
aad
xchg
xchg
push
pop
jns
loopne
ljmp
or
enter
inc
xor
fisubrl
or
loope
sbb
lock
lahf
std
jg
jns
xor
and
mov
stc
in
sbbb
fwait
nop
adc
imul
inc
mov
pop
sub
xchg
repnz
gs
mov
cmc
call
sbb
ficoms
stos
out
add
inc
addr16
xlat
icebp
in
out
mov
fcmovnb
dec
adc
pop
inc
or
fld
sub
dec
in
sbb
out
jns
adcl
cld
repnz
xchg
inc
xchg
enter
pop
mov
mov
flds
xchg
lcall
push
cmp
test
int3
jmp
inc
into
out
and
pop
in
insl
cltd
cltd
lret
sahf
sti
inc
mov
movsl
dec
cmp
sbb
push
jg
ret
shlb
mov
and
in
testl
push
aaa
xor
enter
mov
add
add
test
lds
cmp
inc
pop
aas
pop
inc
lahf
std
jno
dec
add
ficoml
xor
pop
scas
mov
push
push
out
pop
or
das
push
int3
pop
pop
fs
jge
rcll
outsw
test
cwtl
cld
repnz
pop
pop
xchg
inc
gs
xchg
jg
rolb
cmpsb
jle
push
lds
icebp
ja
sti
xor
stc
in
and
jp
sbb
lahf
and
xor
stos
stos
mov
cmp
mov
mov
rorb
and
and
dec
ret
sub
je
lret
das
mov
cmp
sahf
lods
test
mov
jge
sbb
push
sbb
mov
clc
push
cmc
jno
add
inc
sbb
jl
lret
in
lods
or
mull
pop
lds
addr16
outsb
add
scas
mov
dec
mov
or
daa
inc
xchg
dec
pop
jns
popf
jne
push
adc
or
inc
push
in
xchg
push
lods
jb
mov
add
mov
enter
xchg
mov
sub
repnz
int
add
jo
dec
xor
sub
adc
xchg
test
call
repnz
daa
pop
cs
push
call
mov
lret
push
stos
pusha
aaa
adc
repnz
das
jmp
idivb
or
lret
das
mov
xor
lds
je
lahf
mov
daa
out
cmpsb
mov
icebp
inc
xchg
addr16
mov
mov
in
sub
xor
outsl
icebp
movsl
repnz
aam
and
ja
xchg
fcomi
lret
mov
dec
push
sbb
push
push
stc
sti
enter
decb
pop
push
pop
stc
bndstx
xlat
cmpsl
scas
xor
ss
adc
out
lds
pop
jnp
lds
mov
add
dec
into
pop
out
ret
cld
jnp
fistps
adc
std
scas
adc
inc
stc
mov
notl
out
push
insb
dec
in
add
and
dec
iret
call
dec
dec
shrl
stos
scas
mov
test
aas
or
xor
gs
add
pop
clc
inc
lods
dec
jns
or
arpl
mov
add
push
pop
jns
lods
or
lods
pop
dec
sub
pop
sbb
out
sub
xchg
push
out
push
stos
add
aad
add
sbb
pop
imul
and
and
mov
inc
pop
nop
shll
push
ja
shl
das
sti
lods
pushf
jno
stc
mov
sti
xchg
das
mov
pop
jle
jmp
cmpsb
xor
ljmp
insb
push
dec
mov
inc
pop
nop
inc
jge
and
mov
and
pop
mov
fidivrs
xchg
rorl
es
call
push
mov
jns
xchg
das
mov
adc
sub
xor
out
nop
or
clc
jmp
sbb
repnz
push
cmp
sbb
push
testl
decl
pop
sub
mov
cld
repnz
lret
add
jmp
out
inc
dec
stc
subl
das
pop
loop
pop
xor
orb
cld
mov
inc
sub
pop
pop
push
mov
mov
out
adcl
sbb
ds
jnp
mov
rolb
mov
pop
test
lret
mov
pop
sbb
das
cmp
scas
mov
aad
aam
pop
push
in
sbb
in
and
xor
imul
in
and
into
stos
xchg
jg
out
pop
aam
push
pop
dec
push
loope
mov
scas
mov
notl
ss
pusha
cld
mov
push
jecxz
sub
fwait
imul
jns
ret
gs
xchg
es
mov
fs
pop
jns
dec
mov
test
mov
mov
lock
jg
sbb
xor
inc
call
fdivr
jle
in
cmp
aas
test
aad
stc
in
pop
mov
adc
inc
mov
push
inc
jle
fiaddl
jge
jae
cld
in
sar
xchg
pop
fsts
xchg
inc
mov
pop
sbb
xchg
pop
jle
pop
hlt
lcall
pop
das
mov
jo
pop
add
pop
and
in
bound
repnz
mov
and
test
adc
dec
xchg
aaa
es
cmpsl
mov
fnstenv
das
jg
xchg
jnp
lahf
imul
clc
jb
push
ret
sti
leave
lret
repnz
jmp
pop
mov
mov
mov
cmp
das
lahf
cmp
lds
cltd
cmp
lret
dec
xor
sbb
out
dec
adc
cli
movsb
movl
and
inc
cltd
cli
fwait
repnz
sub
aam
mov
mov
dec
pop
std
das
mov
xlat
xlat
sub
stc
mov
adc
stos
jl
dec
aas
mov
mov
enter
sub
xchg
call
push
rcll
int3
xchg
popa
xchg
test
lock
inc
xchg
movsb
or
xor
xor
xchg
insb
mov
cld
repnz
das
incl
mov
and
bound
fbld
mov
cs
cld
pop
frstor
jle
nop
xlat
sbb
stos
cmc
adc
pop
dec
fstl
xchg
out
enter
repnz
pop
adc
pop
out
cmp
mov
jge
or
or
jge
in
cmp
and
out
pusha
mov
mov
mov
outsb
sti
push
inc
xor
stos
aam
mov
xlat
loopne
xor
mov
jle
in
xchg
jno
push
repnz
sub
fnstenv
pop
fwait
or
mov
mov
mov
xchg
pop
jle
or
cli
jg
jecxz
out
jg
xchg
pop
jle
sub
mov
adc
in
and
stos
arpl
cmp
sub
shl
aad
inc
sub
ds
xchg
in
cli
mov
xchg
cmp
push
mov
or
xchg
mov
sbb
shr
enter
sarb
aas
sti
pop
icebp
jnp
and
mov
push
sub
in
mov
pop
stc
repnz
push
mov
cmc
cli
jne
insl
mov
dec
mov
push
repnz
aam
fadds
mov
lret
mov
inc
ljmp
pop
stc
jnp
mov
jbe
add
mov
in
jg
loop
aas
xor
add
sahf
cmp
or
push
test
das
mov
iret
add
xchg
test
repnz
fcoms
dec
rol
dec
pop
add
jl
in
xchg
aas
and
jp
push
add
ret
mov
test
cld
inc
or
or
jge
xchg
adc
xor
imul
in
les
mov
sub
in
das
cmpsb
cmp
and
ljmp
iret
jl
fbld
mov
insb
js
adc
pop
jle
divl
push
js
mov
pop
jns
ljmp
dec
mov
or
and
fbld
push
cld
int3
jge
ja
cmp
jne
xchg
pop
jle
insl
mov
jg
mov
lock
jg
and
stc
in
sub
push
push
js,pt
out
xchg
sub
jb
cmp
in
sahf
add
adc
jle
mov
mov
popf
jae
ret
cs
fists
pop
jle
in
enter
xor
lods
dec
inc
ss
xor
les
lods
sub
aam
mov
lret
add
aad
xor
sbb
xchg
icebp
stos
inc
scas
mov
ret
jno
pop
fisttps
xchg
mov
or
push
push
dec
inc
lock
dec
in
out
inc
stc
jnp
int3
sbb
iret
fstpt
iret
jns,pt
mov
aad
es
cld
cmpl
imul
push
scas
xchg
mov
in
and
pop
loope
loop
dec
mov
lret
mov
pop
mov
in
mov
mov
dec
sub
xchg
jg
icebp
pusha
scas
mov
repnz
xchg
stos
insl
cltd
cmp
enter
das
push
out
sub
int3
jns
xchg
mov
call
jmp
pop
mov
sbb
mov
out
adc
cmpl
fs
push
hlt
sahf
push
pop
jns
jmp
lret
dec
xchg
jp
inc
out
add
fs
push
rcl
sbb
fidivrl
sub
add
imul
cmp
lret
rol
xchg
sahf
das
inc
repnz
das
mov
stos
int
cmovge
lret
das
mov
add
mov
jmp
cmp
mov
scas
test
shrb
sbb
xlat
sub
das
mov
jnp
or
jo
pop
xor
repnz
daa
loopne
cld
and
enter
popf
jmp
das
mov
nop
lock
sbb
jle
cmpsl
cmpsl
lret
mov
pop
addr16
fadds
stc
in
sarl
mov
or
and
mov
out
xlat
andl
stos
inc
mov
pushf
lret
mov
dec
ret
or
enter
scas
mov
sub
out
adc
xchg
mov
orl
pop
pop
inc
sbb
mov
sahf
dec
or
aas
fs
push
pop
jns
or
sti
rorb
xchg
out
out
cli
jle
ja
cmp
add
and
mov
stc
in
pop
pop
jb
sbb
jb
inc
ja
clc
test
lods
mull
in
addr16
xchg
pop
jle
mov
cmp
xchg
and
and
fiadds
pop
js
adc
in
jg
jne
lds
and
xchg
pop
jle
jecxz
aad
hlt
cmpsl
mov
pop
out
xor
ds
mov
out
xor
ja
inc
rcll
mov
enter
cmp
and
sub
rcll
sbb
fisubrs
cmovns
sub
std
inc
xor
es
das
inc
push
dec
cmp
scas
mov
sahf
mov
sub
cmpsb
cmp
sub
xchg
mov
xorb
adc
adc
in
lods
and
push
in
lcall
pop
les
movsb
jae
jp
dec
in
lret
jl
das
das
in
mov
jmp
scas
mov
mov
fsubs
repnz
daa
mov
cmpsl
cltd
add
dec
repnz
mov
mov
enter
inc
pop
outsl
xlat
xchg
das
mov
lcall
pop
mov
icebp
mov
push
and
cmp
imul
jae
lahf
lret
mov
je
pop
jle
jne
and
sbb
roll
jo
jl
in
push
imul
jb
mov
mov
mov
sahf
sarb
jge
popf
lods
ret
jle
lock
push
das
mov
dec
cmpsl
pop
mov
repz
or
sbb
loop
cld
repnz
and
xchg
lods
mov
roll
jl
in
das
and
xchg
inc
push
and
fdivs
divb
test
cmpsl
mov
scas
mov
sub
ret
dec
mov
loopne
stc
scas
mov
sarb
test
pusha
pop
pop
jecxz
repnz
lods
mov
or
and
std
loop
daa
jo
push
xlat
sbb
aaa
inc
fistpll
inc
mov
sti
push
enter
mov
xchg
pop
inc
dec
mov
lcall
fimuls
mov
dec
jle
enter
ficompl
dec
lret
mov
in
pushf
mov
fildl
inc
fadd
bound
mov
xor
dec
test
lds
popf
xchg
loope
sbb
sahf
adc
enter
xchg
fabs
lahf
jmp
sti
pop
and
sbb
add
fcoml
jp
jecxz
jnp
inc
inc
xchg
add
xor
repz
jle
xchg
push
pushf
xchg
and
adc
scas
mov
or
rcl
xchg
out
sar
repnz
enter
xlat
jmp
inc
int
cmp
xchg
das
mov
xchg
adc
int3
push
js
repz
mov
movsl
movsb
pop
dec
in
enter
push
or
cmp
sub
mov
das
mov
popf
jg
roll
cld
repnz
cmp
and
into
mov
fs
xlat
adc
out
cmp
repnz
das
sub
gs
rorl
into
sub
inc
mov
in
push
and
jbe
test
mov
imul
data16
dec
int
shr
add
mov
mov
repnz
and
push
stos
sbb
push
cs
lret
mov
mov
pushf
mov
aam
ss
scas
mov
dec
movl
or
js
xchg
jg
add
dec
cmp
inc
repnz
aad
or
iret
fcmove
sub
leave
push
jae
sti
lods
mov
mov
cmp
mov
or
das
lcall
stc
cmc
sbb
push
stos
sbb
xor
or
inc
cmp
xchg
mov
or
sub
scas
mov
add
lods
xchg
fdivl
into
movsl
sti
insb
repnz
stos
sbb
jge
lret
das
mov
cltd
or
in
pushf
mov
pop
stc
repnz
xchg
cmp
sub
mov
aas
stc
add
pop
out
repnz
jmp
out
repnz
lods
pop
mov
fistpl
fsubs
stos
jl
movsb
repnz
movsb
int
shrl
insl
cs
xchg
pop
std
pusha
push
sub
mov
mov
inc
mov
pop
jle
in
mov
sbb
mov
cmpsl
stos
js
ds
xchg
pop
into
outsb
jb
loop
das
pop
data16
in
aad
jnp
cld
mov
push
repnz
pop
xchg
les
popf
jo
xchg
in
push
xor
xor
xchg
xchg
push
pop
jns
movsb
fwait
dec
inc
fadds
lds
pop
jns
and
xor
lods
sbb
pop
jns
xchg
jo
cld
push
loope
push
ljmp
pop
pop
fiadds
mov
push
stc
mov
repnz
push
jle
mov
cltd
scas
sarb
stos
xchg
pop
jns
xchg
or
xor
repnz
arpl
in
push
jno
or
fs
xchg
push
pop
push
or
ja
sub
aad
aaa
xchg
push
pop
jns
in
dec
mov
pop
movsb
add
push
adc
mov
pop
jns
jmp
adc
in
jns
xchg
push
out
arpl
cmp
not
aas
jp
pop
push
fiadds
pop
jle
dec
jae
roll
jns
xchg
push
and
jecxz
pop
push
aam
push
fwait
fs
adc
pop
lret
loopne
cs
mov
and
jns
sub
outsb
iret
lret
cmpl
cmpsb
popa
xor
scas
mov
or
mov
ds
adc
xchg
cmp
aaa
xchg
pushf
or
in
inc
cmp
imul
sbb
and
out
in
lock
mov
mov
xor
mov
cmpsl
lds
mov
lods
mov
pop
sub
xor
clc
testl
enter
pop
movsb
jg
inc
push
lcall
clc
shl
sbb
mov
addr16
push
jo
mov
sub
mov
ljmp
jge
scas
mov
sub
and
nop
push
cli
cmpsb
jcxz
sub
add
leave
outsb
add
jns
inc
mov
in
xlat
add
xor
pop
jns
ja
fs
outsl
mov
inc
in
lock
sub
fs
icebp
das
fwait
mov
stc
inc
loopne
fistps
inc
xchg
pop
jge
das
pusha
jge
insl
dec
pop
addb
dec
lcall
rorl
outsb
or
jmp
repnz
das
les
push
outsb
add
loope
int3
in
pop
decb
add
in
cmp
stc
or
push
mov
or
inc
frstor
jle
in
shlb
outsl
mov
imul
or
stc
in
fimull
xor
jle
pushf
jb
cmpsl
out
jmp
jp
xchg
pop
pop
xchg
xchg
pop
mov
mov
push
imul
ret
dec
rolb
cmp
dec
inc
cmp
arpl
repnz
pop
lret
add
test
dec
jmp
mov
push
divb
inc
sub
cmp
into
lods
lods
xor
mov
adc
inc
stc
repnz
xchg
movsb
sbb
in
pop
mov
sahf
pop
insl
test
cmp
pop
inc
cmp
xchg
and
sahf
das
fcoms
int
fwait
push
mov
in
mov
inc
test
cmc
xchg
hlt
fists
filds
data16
jp
ja
push
stc
in
xchg
cmpsl
and
test
jns
xchg
ja
and
inc
xor
and
sbb
jecxz
jle
xor
stos
cld
repnz
mov
sub
dec
js
jbe
lods
data16
xchg
das
mov
mov
sub
mov
jnp
cmpsl
scas
bound
jns
popf
test
popa
push
mov
iret
mov
push
fsubl
pop
negb
dec
loope
icebp
dec
mov
shll
and
pop
hlt
test
mov
add
into
repnz
shl
daa
cmp
cmp
scas
mov
inc
mov
stc
in
enter
mov
es
popf
outsb
in
pop
jle
cmp
push
scas
js
clc
in
push
stc
push
dec
ret
mov
sbb
xchg
sub
jnp
int
cmp
jnp
shl
ds
andl
ljmp
pop
push
inc
movsb
cld
repnz
das
popa
dec
xchg
jb
jl
cmpb
jae
fmull
adc
jns
mov
stos
out
push
fs
scas
cli
outsb
insl
arpl
int3
pop
xor
pop
enter
xchg
mov
adc
mov
lret
and
sti
cmp
lret
ljmp
adc
mov
cmp
jb
adc
pop
pop
dec
clc
std
stc
in
jg
dec
cmp
fldenv
nop
mov
insl
insb
in
pop
jle
test
repz
imul
inc
jle
push
push
and
adc
test
push
mov
repnz
adc
mov
ret
or
icebp
mov
loopne
jmp
cmp
mov
lea
pop
jmp
loop
ds
stos
sub
lahf
je
xchg
lods
inc
enter
mov
or
xchg
fistpll
sbb
repnz
and
es
loope
in
pop
jle
test
mov
mov
ds
mov
imul
in
cmc
xchg
pop
das
mov
jge
sarb
sbb
fbstp
xchg
shrl
xchg
push
pop
pop
rclb
je
push
lods
sarl
pop
jns
adc
inc
cmp
mov
jns
xchg
lods
sti
or
cmpsb
cwtl
inc
les
lret
mov
inc
pop
adc
pop
les
xchg
xchg
jg
cld
xchg
add
pop
xchg
dec
jge
and
arpl
stc
in
scas
sbbl
adc
jle
in
add
or
pop
loope
mov
xor
push
sbb
jmp
push
mov
mov
or
sbb
loope
inc
inc
mov
cld
roll
jp
or
jle
in
adc
adc
inc
ljmp
in
fdivr
in
pop
lds
jle
mov
xchg
pop
jle
push
cmp
push
jne
jge
pop
stc
repnz
pop
sbb
sbb
dec
inc
mov
sbb
xchg
sarl
pop
inc
out
lods
sub
popa
add
cld
mov
pop
pop
jns
push
cmp
test
sub
adc
pop
bound
xchg
sbb
into
adc
sbb
lret
mov
mov
xchg
pop
int3
jns
pop
xor
ret
mov
mov
mov
push
cmp
les
pushl
rcll
addb
jecxz
mov
in
idiv
mov
or
jge
adc
inc
adc
lret
pop
and
fs
mov
jp
sub
arpl
jno
orl
fldenv
mov
mov
mov
pop
sarl
lret
das
sti
push
sub
outsl
cld
push
fmuls
das
mov
addr16
lcall
mov
stc
jl
adc
cmp
mov
leave
inc
mov
fwait
int3
add
mov
jmp
das
jo
fstl
inc
cli
or
xchg
jg
xchg
xor
inc
insb
or
mov
sbb
not
cwtl
cld
cmpsb
vandnps
cld
repnz
sbb
into
adc
data16
leave
cld
repnz
das
inc
test
sti
in
mov
and
lret
das
mov
and
xchg
es
lret
aas
jl
imul
jbe
ss
pop
lret
das
mov
stos
pop
dec
mov
repnz
repnz
sub
dec
mov
test
gs
das
lcall
sti
arpl
repnz
mov
shlb
ds
repz
jg
pop
daa
aam
les
stc
and
push
stc
mov
push
xchg
adc
mov
sarl
sbb
mov
inc
outsb
lods
repnz
mov
mov
mov
lret
mov
mov
add
repnz
std
mov
enter
push
sti
mov
pop
int
repnz
das
insl
sub
sti
test
pop
jne
test
jg
stos
jl
jl
jae
and
and
adc
cmpsl
dec
and
stc
in
xchg
movsb
add
fldcw
jle
in
insl
xchg
pusha
pop
addr16
or
es
mov
stc
in
pop
jp
mov
fisttps
jbe
in
pop
jle
mov
icebp
push
imul
das
mov
repnz
push
lods
pushf
fistpll
mov
flds
repnz
movb
popf
xor
mov
scas
mov
adc
pop
add
in
pop
jns
jecxz
push
shlb
ja
jns
xchg
push
ret
pop
sub
pushf
out
in
push
pop
in
and
pop
mov
std
xchg
push
pop
jns
fisttpll
push
invd
push
fidivrs
fimuls
and
inc
mov
mov
or
xchg
mov
push
pop
inc
adc
scas
mov
cli
or
out
sahf
xlat
jno
out
and
cs
xor
xchg
inc
sti
stc
jne
ret
mov
scas
aaa
je
outsb
jmp
icebp
pusha
mov
dec
nop
add
ds
pop
jns
add
mov
lahf
in
test
inc
cltd
pop
aaa
or
sub
xlat
pop
jle
in
sbb
cmpsl
push
int
out
int3
stc
repnz
xchg
ja
shl
sbb
out
sbb
mov
sub
shrb
in
divl
movsl
into
inc
nop
xchg
push
pop
jns
fistpll
int
loop
repnz
les
in
cmc
or
aas
or
cmp
push
mov
imul
push
pusha
rorl
ficoms
outsl
cmpsb
ret
sarl
pop
jns
loop
pop
jle
movsl
mov
or
in
fcmovnbe
enter
hlt
out
xchg
ja
mov
jne
or
mov
in
in
jge
add
push
int
cmp
in
dec
adc
or
and
cs
and
pop
adc
jo
or
icebp
add
rorl
and
mov
ret
mov
test
scas
stc
mov
mov
mov
xlat
add
loope
js
repnz
and
lock
shlb
lret
mov
fs
jg
popf
cs
repnz
pop
clc
mov
or
dec
loopne
stc
mov
mov
mov
pop
stc
imul
bswap
sub
xor
jnp
stc
in
pop
insb
adc
xchg
das
mov
sbb
gs
mov
push
sbb
orl
jge
push
pop
jns
mov
scas
or
sub
in
out
push
call
mov
in
jg
mov
je
xlat
jae
addl
mov
xchg
push
pop
out
push
lea
jb
iret
ds
add
lret
pop
dec
mov
bound
cld
repnz
das
cmpsl
cmpsb
sub
jl
int
icebp
enter
pop
and
aam
and
sub
test
popf
sub
jl
mov
call
dec
scas
xor
mov
scas
mov
flds
jnp
pusha
cmp
lret
bound
sbb
stos
mov
lret
das
pushl
hlt
add
lret
xor
sub
xchg
mov
push
xchg
les
jl
shl
int3
push
cmp
mov
in
push
pop
dec
outsl
or
fucomi
pop
fnstenv
jns
dec
sbb
mov
xchg
pusha
adc
cmp
hlt
xchg
int
mov
add
cld
xlat
mov
inc
jns
icebp
scas
mov
pop
dec
mov
dec
fldenv
push
jp
lret
sub
sbb
inc
popf
rorl
xor
mov
pop
and
in
movsl
mov
xchg
xchg
test
int
xchg
push
pop
sub
cltd
sbb
add
jg
pop
jns
es
jno
sahf
dec
sbb
and
in
or
cld
icebp
sub
mov
mov
sbb
cmp
aad
sbb
push
fiadds
fs
arpl
pushl
xchg
imul
scas
mov
jmp
fsts
fbld
imul
cmp
lea
push
mov
gs
int
sbb
fwait
nop
loop
mov
bound
jno
push
or
mov
dec
fdiv
add
ja
loope
lret
jg
mov
push
ret
cli
nop
fmulp
cmc
clc
es
mov
mov
pop
fimull
call
enter
inc
lods
jl
or
fdivrp
fsubl
jbe
mov
inc
icebp
push
inc
xchg
aaa
es
mov
fnstcw
cld
mov
push
pop
jns
in
jnp
iret
lret
jge
mov
push
cmp
cmpsb
lret
xor
mov
sti
insb
cmp
pop
xor
and
xor
mov
popa
sub
mov
lret
loope
enter
insl
cli
ds
mov
sti
inc
mov
xlat
stc
mov
out
push
sahf
mov
jg
rcr
aad
lods
out
loopne
sub
xchg
movsb
rcr
fwait
out
mov
dec
nop
repnz
sbb
sbb
scas
lods
jecxz
jns
call
fcmovnu
cmpsb
sbb
add
xchg
xchg
push
cmpsl
hlt
ljmp
movsb
sub
das
test
lods
jae
ss
lds
lret
inc
sbb
or
sub
lret
movsl
scas
lret
das
mov
out
dec
adc
xor
jge
test
adc
imul
stc
mov
mov
push
pop
jns
add
xchg
popa
mov
leave
adc
sti
fbstp
dec
daa
xor
repz
jle
in
and
mov
xchg
jecxz
outsl
test
xchg
inc
adc
mov
sti
inc
out
lret
pop
adc
cmp
jo
push
xchg
in
sub
xchg
mov
mull
bound
cld
jnp
out
xor
dec
rcrb
outsl
call
mov
in
push
pop
sub
loop
mov
push
cmp
adc
popf
lea
daa
rclb
jns
xor
mov
int3
inc
inc
pop
test
push
add
in
movsl
mov
pop
test
jge
dec
dec
or
ret
std
lock
pusha
sbb
or
xchg
mov
dec
insl
xor
shrl
mov
ja
xchg
mov
jne
xchg
jo
loope
dec
and
lahf
cmpb
cwtl
arpl
jbe
dec
xlat
ret
add
stc
in
out
rolb
xor
sub
in
test
fwait
jnp
xchg
rclb
test
inc
icebp
insb
jg
repz
clc
jo
es
mov
xlat
sbb
push
stc
in
lea
int
or
xchg
lret
mov
outsl
test
xor
shl
xchg
mov
fstps
push
scas
mov
push
ds
shll
imul
mov
jge
lret
rolb
insb
int
mov
fwait
lret
mov
mov
lods
ss
iret
mov
ja
mov
cli
adcb
lret
xchg
je
push
sahf
aad
jne
fldl
and
cmp
sub
mov
dec
add
xchg
push
pop
xchg
cs
sub
jg
add
jns
mov
imul
sbb
mov
popa
rorl
pop
sbb
jge
cmp
adc
adc
mov
in
and
cmp
jl
pushf
fs
jle
in
loopne
pop
dec
xor
lahf
sbb
inc
pop
addr16
dec
stc
in
pop
dec
shl
mov
sub
pop
push
std
test
xchg
jb
inc
inc
rclb
lahf
mov
stc
and
adc
sbbb
xchg
enter
ret
adc
test
js
push
fcompp
cli
out
or
jae
clc
pop
movsb
pop
jns
xchg
adc
sbb
push
outsb
push
jns
xchg
push
test
inc
lahf
mov
int3
in
push
pop
inc
cmp
add
cmp
fcomps
jns
push
add
push
cmp
dec
in
sbb
jns
cmpb
jmp
mov
push
push
rcrl
stc
imull
xchg
jl
aad
out
ret
loope
repz
js
xchg
movb
sarb
rcrl
in
push
fdivrp
or
and
mov
xchg
sub
aaa
div
xchg
push
pop
jns
andb
imul
jns
xchg
mov
push
test
repnz
xchg
jg
cmp
pop
lods
mov
notb
cld
jl
mov
sti
mov
ret
pop
jle
in
out
inc
fldcw
mov
jns
call
lahf
rorl
mov
in
push
pop
pop
dec
test
and
clc
movsb
iret
pop
daa
js
dec
pusha
sub
es
repnz
jnp
xor
call
cltd
mov
dec
addr16
xchg
push
cli
xchg
subl
scas
mov
sbb
push
pop
jns
mov
adc
push
int3
xorl
xor
xchg
xor
frstor
mov
pop
xor
addb
loopne
ds
stc
in
jne
mov
scas
fiadds
sub
jp
dec
and
outsl
int
mov
and
cli
enter
shrl
shlb
push
fisubs
std
insb
pop
psraw
mov
sbb
mov
mov
in
enter
mov
nop
out
mov
xor
scas
cmp
sbb
insl
sub
mov
in
adc
stc
in
sub
mov
in
lods
push
hlt
sub
das
mov
in
pop
cmc
xchg
push
push
jg
or
fdivrl
iret
cmp
cmpsb
sbb
jmp
das
lret
mov
jp
sahf
lods
lcall
cmpsb
pusha
loope
cmp
mov
das
mov
and
ljmp
std
mov
mov
jae
jns
sub
clc
mov
ja
lcall
lret
das
aas
in
jge
fmuls
sbb
inc
mov
xor
lea
ret
xchg
out
jbe
scas
cltd
notl
jns
outsl
int
pop
inc
imul
dec
ret
xor
popl
pop
stc
repnz
stos
mov
sub
or
das
mov
inc
lret
pusha
mov
outsb
or
mov
loop
dec
ljmp
pop
outsl
scas
sub
dec
sub
repnz
pop
call
adc
add
pop
jns
fisubs
cmp
out
call
xchg
xorl
lods
pushf
lcall
xchg
push
fwait
data16
sbb
sbb
mov
icebp
add
jecxz
das
jmp
fisubs
mov
popf
pop
mov
lods
jne
aam
xchg
push
mov
cmp
lea
mov
arpl
popa
mov
repz
lret
or
add
or
jmp
cmp
push
pop
stc
in
sti
inc
jp
pop
mov
pop
push
or
ret
outsl
repnz
mov
sbb
xor
mov
cmp
filds
cld
dec
sti
jbe
iret
jge
push
cli
add
in
inc
jp
sbb
lret
jl
add
dec
push
xchg
jnp
ds
dec
adc
call
std
cmp
and
repnz
das
xchg
aad
insl
cld
stos
cmp
mov
cmp
push
sahf
in
and
fwait
cmp
mov
faddp
jne
xchg
push
xchg
sub
cld
jb
test
xor
sbb
sbb
lret
sbb
jge
mov
leave
lret
out
pushf
repnz
push
sub
xor
rcll
mov
add
loop
cmpsl
sub
push
test
scas
test
inc
lret
mov
ds
cltd
or
push
and
sub
ret
adc
push
jg
cmp
dec
ja
loop
adc
test
stc
mov
jecxz
outsb
push
cmp
aad
test
cmpb
push
add
mov
jmp
enter
decb
jl
mov
int
sub
or
rcrl
xchg
cmp
popa
push
clc
enter
xor
inc
cmp
into
cmc
decl
sbb
jge
cmpsb
shll
stc
notl
jmp
push
mov
pop
jle
push
sub
mov
pusha
mov
lds
std
adc
das
mov
mov
mov
mov
mov
cld
cmpsl
js
lock
jle
cld
repnz
das
pushf
pop
not
cmp
jg
lcall
arpl
adc
pop
divl
and
xchg
jnp
notl
neg
sbb
xor
cmc
mov
ror
mov
xor
call
dec
cli
or
inc
push
iret
jne
nop
dec
and
lcall
push
fcom
addr16
jl
and
pusha
inc
inc
in
jbe
repnz
cltd
inc
sub
xchg
pop
jg
xchg
mov
xor
xor
call
sbb
sub
call
xor
nop
jns
out
ret
cmp
pop
stc
push
xor
add
and
jne
pop
clc
or
sbb
xor
hlt
push
pop
jns
clc
cmp
loopne
negb
push
jb
cmp
lds
popf
mov
add
jae
es
xchg
mov
mov
mov
lret
mov
imul
and
pushf
fisttps
sub
lret
das
mov
adc
movsl
sbbl
add
lds
and
xor
mov
mov
mov
lahf
jl
js
cs
std
mov
adc
adc
repnz
loopne
popf
fwait
jbe
int
aaa
push
loopne
push
ret
mul
sbb
pop
clc
enter
jno
cmpsl
xchg
ljmp
mov
cmc
xchg
mov
inc
sub
aas
sbb
nop
in
sub
cwtl
mov
sbb
xchg
push
xchg
sub
inc
and
and
insb
jl
gs
mov
sub
lret
xorb
loop,pn
dec
push
adc
lret
das
ljmp
fcoml
pop
sub
outsl
adc
pop
stc
call
mov
mov
loop
add
imul
jge
bound
inc
xchg
mov
and
ds
pop
sub
pop
aaa
mov
mov
mov
adcl
adcl
movb
adc
pop
jns
stc
lret
mov
fisubrl
add
sub
ljmp
out
push
inc
call
sbb
repnz
aas
jl
dec
and
sub
das
mov
cmpsb
imul
pop
xchg
inc
cmc
mov
cmp
repnz
inc
xchg
test
xchg
mov
ljmp
and
and
push
inc
in
jae
mov
in
cmc
out
cwtl
sarb
mov
push
mov
sub
jb
addr16
jl
lret
das
js
je
lcall
call
xorb
jns
repnz
das
add
and
cmp
lret
das
mov
cmp
into
and
xchg
das
mov
or
mov
pop
stc
repnz
sbb
imul
pop
add
sbb
jle
in
int
mov
mov
add
mov
add
xchg
pop
scas
add
xchg
mov
addr16
es
out
sbb
cld
subl
xchg
xor
orb
in
sub
jo
cmp
shrl
scas
mov
mov
ret
inc
les
repz
out
xchg
cli
scas
pop
pop
xchg
sbb
or
movsl
cld
sti
aas
lcall
roll
jl
mov
mov
mov
mov
movsb
aad
shrb
mov
stc
in
and
adc
xlat
int
mov
xchg
jle
in
pop
mov
dec
xor
jbe
je
in
pop
aad
rclb
xchg
scas
roll
fcoml
add
xchg
jge
in
jnp
aas
jmp
das
lret
push
xlat
push
and
sub
dec
and
sbb
mov
xor
push
add
dec
inc
mov
jae
ret
js
lret
inc
add
jecxz
pop
jmp
push
fimuls
arpl
mov
cltd
jne
push
addr16
pop
jns
or
pushf
mov
addr16
add
cmp
in
push
sti
pop
filds
mov
loope
cli
addl
test
jns
popf
mov
cwtl
fdivrl
cmp
push
xchg
aaa
xor
scas
cmp
sbb
and
mov
stos
pop
jmp
xor
mov
xchg
cmpsb
mov
mov
sub
xchg
jp
cli
int
stc
in
fadd
mov
andb
add
into
jmp
pop
mov
stos
ds
push
jne
jb
in
pop
xchg
rorb
jae
mov
jnp
add
mov
mov
mov
mov
cmp
popa
ljmp
pop
adc
cmp
cmp
out
mov
loopne
addr16
shrb
fbld
sbb
cli
not
mov
out
xor
xchg
dec
push
adc
mov
push
pminub
outsl
mov
pop
inc
and
mov
jbe
pop
xchg
xchg
push
les
push
or
xchg
push
pop
or
adc
int
pop
into
xchg
push
pop
jns
mov
cmpsl
out
fwait
xchg
sahf
lret
jns
push
inc
and
cli
xchg
cmp
pop
jns
xchg
repz
push
add
mov
cmpsl
adc
inc
fnstcw
mov
xor
sub
mov
in
daa
gs
adc
aas
movsl
sbb
fsubp
loopne
pop
jle
inc
mov
jecxz
pop
cmp
or
mov
mov
outsl
cltd
cmp
cli
lahf
push
mov
mov
imul
ds
sub
push
sbb
mov
cld
repnz
jl
insl
mov
stos
popa
lock
out
test
push
xchg
out
dec
fdivrl
sub
cmp
lret
fcomi
push
ss
push
idivb
cld
pop
add
subl
test
aad
clc
imul
xor
out
lods
lds
mov
mov
mov
or
loope
movsl
add
jmp
ja
loope
rorb
out
gs
pop
das
idivb
mov
pushl
and
scas
mov
xor
cmpsb
xchg
jo
in
jle
neg
outsl
outsl
mov
inc
mov
inc
in
das
jmp
pop
inc
sbb
fists
mov
popf
inc
push
push
dec
mov
inc
movsl
push
pop
jns
inc
add
pushf
xor
in
int
pop
jns
xchg
loope
mov
and
nop
mov
jns
xchg
push
sbb
inc
fld
add
rolb
push
pop
or
lods
xor
add
fdiv
mov
dec
mov
icebp
repnz
and
dec
sbb
imul
sbb
xchg
pop
ds
cmpsl
dec
pop
inc
xor
imul
loope
mov
mull
cmp
lret
mov
cmpsl
js
je
cmp
xchg
add
push
fldt
ret
es
outsl
cld
cmp
std
mov
or
lret
mov
sbb
xchg
movsl
and
adc
or
pop
dec
and
sub
mov
cmp
mov
jge
cs
rcll
inc
adc
jbe
repnz
das
imul
mov
fsubl
test
iret
mov
imul
push
pop
outsl
or
pop
aaa
fwait
in
lock
enter
and
jb
push
ret
sbb
jl
fcoml
lds
std
adc
addb
inc
pop
insl
jp
jp
sbb
dec
xor
jns
xchg
push
or
pop
punpckldq
insl
xchg
jg
pop
and
add
arpl
mov
jp
ds
insl
idivb
dec
iret
push
das
decl
cmpb
pop
mov
dec
lock
jecxz
xchg
hlt
xchg
scas
test
aaa
push
popa
mov
xchg
push
xor
stc
repnz
pushf
inc
push
mov
and
mov
in
jg
test
out
mov
cmp
lock
and
fisttpl
pop
jle
in
outsl
mov
inc
sub
adc
notl
mov
push
ret
mov
and
jecxz
ret
adc
pusha
aam
cs
pop
jle
in
cmp
aas
mov
pop
loop
jl
in
inc
push
push
push
in
mov
mov
int3
add
pop
divl
inc
in
imul
pop
sbb
lock
xchg
jno
jns
add
mul
cmpsb
and
ljmp
dec
pop
sarb
xchg
pop
stc
enter
mov
pop
daa
es
inc
sub
insl
push
pop
sbb
inc
mov
scas
mov
hlt
xor
test
cmp
repnz
cmp
fwait
mov
and
scas
jle
jno
cmp
stos
lret
mov
cmp
mul
insb
xchg
sub
leave
pop
fisubrs
pop
aad
jb
push
mov
push
stc
or
jle
jmp
xlat
fcmovne
and
ljmp
xor
and
dec
notl
push
pop
jns
push
clc
mov
lods
xchg
push
stos
jl
push
pop
jns
cmp
daa
cmp
jecxz
pop
mov
xchg
add
imul
sbb
mov
push
mov
lcall
in
push
pop
shrb
pop
call
pop
cmp
dec
cmp
push
aam
loope,pn
shrl
jns
xchg
push
xor
mov
pop
nop
out
mov
in
push
pop
loope
outsb
xor
rorb
pop
mov
gs
mov
sahf
movq
lret
shrb
js
aas
inc
stos
call
xchg
rclb
lret
and
xor
mov
movsl
flds
in
push
in
test
fdivrl
jg
lcall
shlb
mov
sahf
pop
nop
shr
xor
das
mov
fucomp
ljmp
inc
int3
or
jns
mov
outsl
repnz
lret
das
lcall
xor
and
pop
fwait
iret
cmp
cld
repnz
push
cltd
shlb
scas
movsl
repnz
jnp
fdivrs
out
shll
popa
mov
sahf
cld
repnz
das
push
push
imul
pop
mov
ds
mov
cwtl
pop
in
jns
cmp
insb
mov
in
or
scas
notl
pop
and
inc
xchg
adc
jle
mov
sub
add
imul
mov
in
lret
dec
into
mov
ficoms
lahf
mov
or
scas
mov
xchg
stos
sub
gs
fsubrp
aas
mov
mov
inc
push
mov
cmc
xchg
orl
aas
sub
out
xchg
push
pop
jns
push
jp
outsl
jmp
xchg
sbb
cmp
push
pop
jns
sti
inc
ds
ret
jnp
ret
pop
jns
xchg
xchg
addb
xchg
mov
and
dec
fdivrs
popf
out
pop
sbb
lea
sub
cwtl
pop
xchg
mov
xchg
loope
stos
or
and
in
iret
push
and
jmp
jae
mov
sti
sub
xchg
pop
mov
add
imulb
jns
stos
movsb
imul
sahf
mov
cmp
jns
mulb
test
ret
cmpsb
aaa
and
xchg
push
pop
or
mov
icebp
in
and
filds
add
jb
fdivs
xchg
pop
jle
xlat
add
push
and
and
pop
loopne
cmp
lods
add
decb
dec
les
push
jns
jne
sub
lods
add
dec
mov
jae
dec
data16
xchg
aaa
lea
push
scas
movsl
ret
les
in
pop
jg
xchg
fsub
mov
fsubrs
push
stos
pop
sbb
jns
shrb
repnz
aam
inc
add
xchg
xchg
sbb
in
push
pop
jns
fs
cmp
add
pop
adc
push
pop
jns
xchg
repnz
pusha
mov
sbb
add
ret
pop
xor
lahf
push
scas
repnz
aas
xlat
mov
scas
in
mov
cmp
loopne
das
mov
pop
lret
inc
mov
or
mov
jne
pop
mov
movsb
cmp
cmp
or
cmc
sarb
xchg
add
add
test
enter
cli
rclb
aaa
les
push
adc
pop
jns
decb
and
test
fcmovbe
insb
loopne
int
jns
xchg
sbb
sbb
cltd
push
sub
das
lcall
and
rcrl
mov
pop
stc
repnz
jg
aas
imul
mov
cmp
mov
in
mov
and
scas
push
mov
and
pop
jns
or
scas
or
inc
jnp
pop
jns
xchg
shrb
movsb
aaa
dec
jne
outsl
push
inc
push
jb
xchg
push
test
insb
xchg
fstpt
adc
dec
inc
stos
aad
scas
aad
sub
in
dec
xor
enter
adc
lock
xchg
mov
cltd
add
scas
std
xchg
mov
jge,pt
rorb
cmp
in
cmpb
dec
pop
into
outsb
jge
lret
adc
lahf
mov
or
scas
mov
adc
push
mov
sub
and
jecxz
popl
hlt
push
sub
pop
int3
sti
or
mov
jp
fldl
in
mov
shlb
loop
lret
repz
movsb
sbb
and
jge
lds
dec
filds
jae
sub
push
lods
cmp
lods
xchg
loop
rolb
imul
xlat
push
pop
into
and
aas
jnp
cmp
xchg
inc
pop
cmp
mov
push
cmpsl
aam
lret
das
decl
mov
jb
cmpsb
test
bound
push
pop
add
mov
add
orb
jmp
movsb
dec
lods
fidivs
mov
mov
lods
mov
in
popf
das
xor
sbb
fcompl
popl
mov
push
sbb
ja
jns
dec
fsubl
sbb
in
jns
pop
jo
fs
xchg
inc
ss
flds
cli
mov
xchg
lret
ret
out
adc
sub
pop
pop
je
or
fidivs
sub
das
sbb
jecxz
popfw
subb
sub
mov
pop
ljmp
xor
iret
rclb
stc
in
xchg
mov
mov
test
xchg
jg
and
mov
pop
push
pusha
leave
push
scas
lock
repnz
push
daa
sub
xor
xor
lret
mov
jl
xor
frstpm(287
add
sub
jecxz
out
fnstenv
out
jb
dec
inc
jl
out
xchg
lahf
adc
cmp
adc
inc
inc
out
sub
mov
aam
sahf
daa
xchg
or
push
or
repnz
imul
mov
sub
mov
jnp
and
das
or
ljmp
das
mov
cltd
lahf
test
int
cmp
lret
sti
pop
adcl
push
mov
sbb
in
jg
jmp
or
or
cltd
push
add
pop
shll
jle
bound
adc
xor
nop
and
jg
enter
daa
mov
data16
dec
inc
mov
movsl
je
xor
ss
xchg
or
dec
mov
lods
mov
insb
sti
jne
aas
pop
je
fsub
xchg
jg
xchg
xchg
add
popl
mov
stc
in
int3
push
inc
divb
aad
das
pop
pop
jle
in
xor
daa
sbb
xor
mov
repnz
sub
ds
dec
or
xchg
repnz
inc
pop
iret
int3
mov
ja
in
add
das
mov
mov
xor
inc
dec
rcl
into
fs
pop
sub
and
jg
orl
dec
jbe
outsl
es
inc
insb
in
ja
aaa
repnz
pop
mov
xchg
push
pop
jns
pop
aas
inc
and
cwtl
cli
add
jae
push
pop
jns
lods
jb
mov
mov
outsb
js
xor
fs
xor
cld
push
jns
insb
das
lret
and
ja
push
fdivl
pusha
in
das
lahf
repnz
xchg
movsl
cmp
xor
inc
repnz
cmp
imul
mov
push
and
popf
movntps
popa
xchg
adc
sti
imulb
ds
inc
loopne
cmp
and
insb
ret
jge
fsts
shl
lret
lret
and
jae
push
filds
cs
sub
or
in
cmpl
pop
call
push
xor
xchg
push
mov
gs
xor
shrl
cmp
and
xchg
loop
movsl
jns
jge
adc
dec
out
stos
out
and
push
pop
aad
cmp
mov
sub
pop
jle
ja
or
cmpsl
shll
jns
loopne
lea
outsl
cmc
test
push
pop
repz
pop
jne
mov
or
jle
in
push
pop
jp
mov
andb
xchg
push
mov
jbe
ret
movsl
inc
outsb
and
mov
dec
das
incb
lret
mov
mov
push
adc
sbb
lret
das
mov
test
aad
stos
aam
lret
das
mov
movsb
jno
lret
pushf
push
pop
stc
repnz
stos
xchg
mov
lret
lret
cmp
in
push
xor
test
lock
ja
xchg
mov
ja
ja
xor
sahf
sub
shrl
stc
in
pop
pop
xchg
inc
movb
jo
repnz
and
cli
xor
ja
pop
adc
fisubrs
pop
pop
jle
in
icebp
xor
icebp
cs
outsb
cmc
int3
sbb
jg
movsl
jg
dec
cmc
push
lahf
enter
xlat
xlat
dec
fbstp
mov
jmp
pop
lret
addr16
pop
adc
xchg
push
std
aad
sbb
or
mov
in
push
daa
push
sub
icebp
xlat
push
repnz
jp
dec
call
es
inc
adc
and
scas
mov
adcb
gs
out
repnz
and
and
lahf
xchg
addr16
lods
xor
testl
cld
insl
std
push
add
mov
sub
in
jmp
or
mov
add
xlat
mov
jl
dec
jne
daa
jne
loope
into
bound
nop
jle
in
sub
xchg
xchg
push
or
mov
adc
xchg
pop
mov
xor
dec
cmc
xchg
push
ficoms
fcmovu
fisubrl
jb
test
push
sub
mov
daa
test
rorb
inc
shlb
pop
daa
mov
sub
out
sub
adc
les
je
insl
lahf
test
fidivrl
mov
dec
int
sbb
or
dec
or
lret
out
cmp
lcall
lret
jbe
insl
or
dec
push
sti
ja
cmpsb
xchg
sub
xor
pop
cmp
mov
pop
es
in
jnp
inc
adc
scas
mov
pop
fcoml
add
inc
addr16
daa
xchg
and
stc
frstor
sub
hlt
rolb
cmp
lret
sub
push
cmp
cmovbe
repnz
pop
mov
push
adc
push
mov
stos
repz
cmp
sub
fldenv
mov
leave
lret
insl
xchg
push
inc
jmp
xchg
ja
push
and
add
mov
inc
jecxz
mov
push
and
sti
pop
lret
dec
mov
and
jns
inc
adc
nop
fisttpl
cld
repnz
mov
lcall
cmpsb
out
scas
les
pop
ds
enter
out
dec
xchg
add
dec
addr16
mov
sub
testb
jb
dec
xor
dec
push
pop
jns
dec
arpl
loop
pop
and
lock
jp
cmpsb
loopne
and
jns
outsl
xlat
inc
mov
jmp
jns
xchg
xor
adc
xor
xchg
jg
outsb
inc
mov
mov
data16
xchg
pop
jle
inc
mov
aam
cli
and
add
leave
mov
xor
pop
xor
fiaddl
sbb
clc
enter
repnz
add
iret
push
enter
cmp
int3
adc
mov
xor
pusha
and
push
mov
test
jns
xchg
push
call
lret
imul
xchg
push
inc
sub
add
imul
sub
jae
scas
loopne
imul
sbb
and
add
popf
stos
push
sub
repnz
repnz
fstl
cmp
fwait
negl
and
das
mov
movsl
fsubrl
mov
das
mov
stc
int
inc
xor
dec
test
cld
repnz
push
xor
cld
int
shlb
stc
in
jg
dec
sbb
insl
gs
fcoml
xchg
pop
jle
inc
adc
dec
enter
ficoms
jecxz
sahf
jb
dec
iret
adc
mov
sub
cwtl
sar
insb
in
inc
xchg
test
pop
jns
xchg
cmp
and
shlb
out
mov
pusha
mov
push
stos
test
dec
and
aas
test
xchg
sti
fs
sti
jo
sbb
loop
push
push
stos
jmp
sbb
or
mov
cmpsl
push
out
sub
cmp
push
in
sub
mov
daa
pop
or
jg
jnp
dec
orps
push
fucomip
movsl
mov
das
mov
adc
mov
xor
das
mov
aaa
sub
int
add
add
das
mov
iret
lahf
imul
mov
jmp
lret
cmp
sbb
sbbl
rcrl
push
xor
sub
pushl
lahf
arpl
in
pop
jle
sbb
cmp
inc
xchg
jo
jl
or
mov
in
pusha
add
xchg
mov
mov
jae
in
push
stc
inc
mov
mov
xor
pop
jle
pop
aaa
adc
and
mov
mov
push
les
or
cmp
push
inc
xor
in
enter
xorl
hlt
enter
popl
call
bound
repnz
das
jg
movsb
lea
mov
and
xchg
das
mov
push
jle
push
push
and
in
or
push
push
insl
dec
or
jns
push
push
fmull
cltd
aas
dec
je
das
mov
push
call
inc
mov
push
push
mov
lret
jb
add
xor
scas
idivl
dec
inc
mov
pop
pop
repz
shll
xor
push
fidivrs
and
add
add
test
scas
push
sahf
jge
cmp
cld
popa
sbb
imul
mov
mov
fnsave
push
push
xor
inc
dec
and
xchg
das
mov
in
mov
cwtl
pmuludq
test
push
in
insb
in
pop
decb
in
jbe
mov
ljmp
pusha
push
inc
loop
orb
xchg
aaa
mov
pop
jle
in
pusha
xor
xchg
add
xor
cmp
push
sti
xchg
jmp
sbb
lret
aas
jecxz
cmp
jmp
mov
repnz
mov
add
int3
mov
int3
imul
mov
cmp
adcl
dec
lret
das
mov
xchg
fcmovnu
sub
addr16
sub
in
adc
mov
push
xchg
sub
inc
xor
push
repnz
ret
loop
xchg
push
mov
lret
mov
and
testl
stos
xor
sub
sarl
xchg
dec
push
test
mov
xchg
notl
hlt
fmull
sub
jns
in
jo
mov
notb
sub
jle
addr16
lds
enter
repnz
pop
lods
and
inc
stos
dec
push
cmp
idivb
repnz
mov
cmpb
adc
mov
movsb
scas
mov
in
lea
insb
adc
jg
in
push
pop
jl
jmp
xor
push
pop
jns
xchg
sahf
xchg
and
outsl
inc
rorb
icebp
adc
push
pop
enter
and
sti
stos
jmp
rol
push
pop
jns
jo
inc
cmp
push
scas
cmc
xor
fdivs
jle
popa
add
lods
adc
adc
in
jb
mov
ds
xchg
das
mov
call
inc
lods
lret
ss
sahf
mov
sahf
jae
or
stc
in
inc
fbld
adc
shl
test
in
pop
jle
rolb
call
mov
inc
jle
inc
cli
mov
pop
dec
jp
cltd
aad
xor
xchg
mov
xchg
and
sbb
repnz
repz
decl
mov
push
enter
ljmp
inc
pop
arpl
pop
jns
jmp
jle
icebp
sbb
stc
test
mov
or
pop
jge
mull
loopne
add
and
stc
jg
ja
cmp
jnp
and
jns
loope
jp
adc
loope
movsb
lret
notl
add
adcb
pop
jle
pop
stos
sub
lret
popa
xchg
bound
mov
sbb
lret
inc
icebp
and
or
push
and
mov
imul
ja
xor
pop
stc
mov
shrl
dec
pop
call
cs
notl
or
lea
jp
xlat
mov
stos
xlat
into
hlt
adc
lock
mov
mov
cmp
push
cmp
push
or
outsl
jge
xor
enter
icebp
and
fiaddl
sbb
aas
inc
mov
int
pop
xchg
push
cmpsb
mov
push
das
mov
inc
pop
test
les
enter
call
sub
mov
arpl
hlt
cs
negb
das
mov
pop
jmp
mov
sub
repnz
inc
mov
aad
stos
hlt
fsts
stc
in
test
dec
jge
push
out
repnz
dec
popa
mov
lds
xchg
jp
sub
dec
fildl
lret
in
push
pop
fsubl
dec
in
ret
cmpsl
xor
jns
pop
ja,pn
jl
mov
mov
ja
mov
scas
mov
jb
iret
push
jo
adc
xchg
push
lock
loopne
sbb
mov
adc
ficomps
inc
pop
mov
inc
add
dec
jb
xchg
push
push
sbb
sub
fcmovbe
scas
push
mov
jle
out
roll
lret
fmuls
dec
dec
xchg
or
and
dec
adc
mov
inc
jmp
in
hlt
inc
adc
repz
lea
outsb
test
adc
mulb
push
cmp
movsb
inc
or
imulb
outsl
gs
pushl
inc
jecxz
dec
push
ss
cmp
mov
cmpsl
in
mov
xchg
and
sti
mov
mov
adc
pop
sub
repnz
add
or
mov
clc
popf
adc
jp
loop
jmp
or
push
pop
jns
sahf
shl
lea
cli
enter
and
xchg
xchg
test
fiadds
popf
lret
push
add
inc
sbb
in
stc
lret
ss
mov
ss
cmp
in
adc
in
insb
inc
pusha
add
xchg
leave
xchg
jl
mov
iret
jae
dec
push
sbb
lea
shll
outsb
jmp
lcall
xchg
imul
pop
jbe
sbb
leave
scas
inc
mov
lods
xor
sub
lret
jecxz
mov
movsb
pop
add
xchg
cli
movsb
div
lret
out
adc
es
sub
mov
mov
cmp
mov
das
scas
in
cmpsl
stc
in
jg
xorb
mov
ja
loopne
xchg
pop
jle
push
pop
addr16
adc
push
pop
and
lcall
stc
les
mov
jmp
test
cld
repnz
mov
push
sub
pusha
adc
jge
xchg
das
into
bound
lock
sub
add
negl
xchg
outsl
test
mov
std
out
mov
sbb
out
xchg
or
adc
xor
ljmp
xchg
mov
test
sub
sti
xchg
jmp
inc
pop
cmp
aad
mov
iret
sbb
jle
enter
pop
cmp
fucom
notl
lret
lock
mov
out
inc
mov
add
mov
and
cmp
dec
push
jb
mov
dec
pop
fistpll
dec
leave
das
shr
jle
repnz
enter
addr16
shlb
and
cmp
out
or
shr
gs
in
jg
mov
shl
repz
cld
push
fisttpll
pop
jle
xchg
push
fmull
dec
sub
xchg
sub
scas
repnz
jl
test
xchg
mov
adc
push
sti
sub
jmp
mov
movsl
pop
xor
repnz
lods
lahf
inc
scas
movsb
fs
insb
jg
pop
ds
movsb
adc
ljmp
cld
repnz
xchg
sbb
mov
jmp
sub
xchg
jg
rcr
lds
jp
xchg
jl
xlat
xchg
pop
jle
rcll
cltd
sub
and
xor
lds
sub
mov
lods
imul
in
cli
stc
in
and
sub
jle
xchg
sbb
mov
lcall
iret
xchg
insb
cmp
sti
push
mov
mov
jecxz
sub
and
adc
push
insl
ficomps
clc
repnz
test
loope
out
push
ret
push
sub
and
cld
sti
dec
fildl
push
mov
push
mov
mov
repnz
das
push
leave
push
ljmp
int
lret
das
mov
jg
mov
or
lret
das
mov
pop
loop
mov
mov
das
mov
lods
insb
sbb
add
lret
lods
adc
insl
pop
and
enter
mov
xchg
sbb
mov
inc
jle
push
mov
jbe
pusha
xchg
aaa
movsb
les
pop
xchg
pop
cmp
lock
sbb
inc
aaa
mov
filds
cld
mov
ret
test
adc
in
pusha
cmc
push
sbb
ret
jl
out
and
adc
fdivs
adc
mov
imul
or
mov
ja
mov
mov
bound
filds
and
fistl
js
mov
jg
stc
fs
enter
add
aad
lret
mov
pusha
jo
pusha
sub
movsl
dec
sub
hlt
add
cmp
cli
insb
int3
or
cmp
mov
add
in
scas
pop
jmp
mov
lret
cmp
mov
loope
xlat
cmpsb
das
mov
jge
add
xor
fs
out
inc
mov
jle
js
pmulhuw
pop
jb
out
xchg
sub
mov
xor
or
jmp
xchg
add
ljmp
xchg
cs
push
or
push
mov
mov
outsl
push
outsl
dec
sbb
xchg
push
pop
in
bound
stc
or
es
push
pop
jns
rcrl
pop
stos
jbe
outsb
sub
rclb
jns
dec
mov
ds
adc
repnz
ret
lahf
dec
sub
jle
lret
mov
repnz
sti
xor
jge
lahf
cmp
mov
and
das
sbb
mov
cltd
imul
lahf
mov
les
xchg
hlt
add
mov
repnz
pop
add
insl
addr16
adc
ss
fsubr
sub
jle
scas
mov
xchg
jns
cli
sarl
scas
ds
mov
les
push
mov
mov
daa
jmp
inc
add
in
stc
das
mov
and
pusha
mov
push
pop
adc
cltd
inc
mov
fcmovbe
xchg
in
jle
in
dec
pop
mov
sahf
fisubrl
mov
in
out
fisubrl
filds
faddp
roll
cmpsb
mov
ss
cmp
stc
in
ret
add
and
xchg
jl
in
add
mov
jle
jns
repnz
mov
sbb
xchg
movsb
mov
movsl
lret
das
mov
insl
jl
stc
and
jl,pt
pop
stc
bnd
addr16
insb
mov
inc
adc
xor
stc
in
sti
lock
scas
sbb
push
repnz
pop
pop
lret
or
iret
mov
test
adc
cltd
or
adcb
in
push
cmpl
sub
jns
xchg
stos
cmc
pop
ret
mov
jo
jns
xchg
push
aad
cmp
scas
mov
push
pop
xlat
mov
clc
inc
andl
int
xor
popa
aaa
loope
xchg
cs
pop
jns
or
in
and
movsb
adc
xchg
add
mov
out
inc
xor
pop
loope
cmpl
push
test
adc
aaa
mov
jg
adc
cwtl
add
cmp
pop
jle
jbe
xchg
sbb
and
fnstenv
in
aad
rolb
push
outsb
lahf
cltd
jle
in
pop
lock
or
lahf
repnz
pop
or
add
xchg
ja
ds
xchg
jecxz
xor
xchg
imul
xchg
lret
inc
jae
push
test
mov
jmp
pusha
xchg
jns
xchg
notl
mov
outsb
inc
inc
ret
pop
fsubrl
jo
pcmpgtb
mov
enter
gs
or
fimull
cmpsl
hlt
xchg
and
fwait
dec
adc
sub
add
xchg
and
xchg
push
jle
cwtl
push
cli
imul
jnp
and
stc
test
fldenv
mov
mov
push
adc
or
mov
imul
mov
cmp
fists
mov
repnz
das
fwait
je
pop
lock
daa
je
leave
mov
test
mov
jno
std
jb
xchg
jmp
data16
jl
dec
cli
shrb
outsl
or
push
sbb
jp
push
inc
imul
inc
aam
nop
xchg
psllw
das
je
cmp
mov
pop
jns
lea
mov
out
mov
push
clc
dec
mov
mov
add
xchg
xchg
das
mov
mov
js
add
nop
xor
jge
repnz
stos
cmp
hlt
mov
pop
pop
xor
jp
fs
jne
repnz
push
fiadds
cli
incl
xchg
or
sub
pop
jns
xchg
cmp
push
pop
push
test
pop
pop
aam
arpl
jno
xchg
push
lock
dec
xorl
push
popf
movsl
dec
jle
cmp
sbb
pop
jns
ss
sbb
jns
cmp
in
jg
rcrb
cmpsl
aaa
aaa
aaa
hlt
inc
in
sahf
sbb
icebp
sbb
enter
out
inc
push
pop
jns
jns
enter
lock
add
jle
in
dec
cmp
mov
shr
cmp
fdivl
stc
in
pop
aas
cmp
fiaddl
lar
jmp
sub
je
pop
cmp
and
jb
push
xchg
push
lret
inc
push
mov
pop
mov
xor
das
mov
push
jns
icebp
pop
aam
jmp
pop
stc
repnz
inc
fistps
ss
jmp
mov
pop
imul
jmp
enter
cmpl
test
add
xchg
pop
jle
js
jg
jmp
inc
stos
xor
xchg
and
stc
jae
int
sbbb
movsb
cld
sti
in
in
int3
jmp
sti
out
movsl
adc
js
hlt
xchg
das
mov
or
hlt
push
push
lea
scas
mov
ret
jle,pt
dec
cmp
sti
enter
loope
fisubl
cmc
xor
sahf
push
pop
xor
add
jbe
das
lcall
popl
dec
pop
js
inc
mov
repnz
dec
xor
jae
xchg
cmpsb
insl
mov
push
jg
ret
xlat
mov
sbb
lret
mov
fsts
and
mov
cld
repnz
cmp
in
and
les
test
or
aaa
mov
ja
invd
xchg
stos
sbb
xchg
push
pop
jns
pop
rorl
arpl
xchg
jge
in
mov
aaa
sti
xchg
call
repnz
enter
xchg
test
outsl
mov
xlat
mov
jns
or
and
mov
repnz
mov
js
push
scas
sbb
sbb
cld
repnz
das
imul
inc
std
inc
sub
repnz
das
mov
pop
sub
lret
dec
ret
enter
mov
xor
xchg
imul
stc
negl
fwait
pop
inc
add
mov
inc
cmpsb
jle
in
imul
lock
jnp
jmp
inc
jmp
rcll
adc
push
pop
jns
and
iret
mov
inc
mov
repnz
lods
nop
xor
lret
lea
pushf
and
mov
das
movaps
and
pop
xorl
sbb
xor
xchg
pop
jle
std
mov
lods
and
mov
mov
repnz
inc
aaa
push
xchg
mov
lret
mov
jae
inc
arpl
out
sub
fildl
ret
ljmp
xchg
imul
rorb
repz
or
sbb
mov
jae
gs
repnz
int
add
mov
dec
decl
push
cmc
adc
aaa
stos
sbb
jns
xchg
inc
in
mov
jae
lods
inc
mov
in
push
int3
xor
lret
test
mov
sbb
fdiv
jmp
pop
jle
in
fists
out
xor
insl
pop
in
xor
xchg
stc
adc
cmpsl
int
cld
gs
mov
bnd
and
sub
in
stos
pushf
test
mov
mov
lret
dec
xchg
jb
out
pusha
stc
loopne
repnz
and
rcrb
repnz
das
mov
orb
fstl
in
pop
jns
cmp
mov
ficoms
xchg
jns
xchg
push
daa
dec
cmpsb
loopne
or
pop
jne
xchg
push
pop
mov
cmp
jecxz
and
stc
js
xchg
push
pop
jns
jge
ffreep
imul
jns
aam
stos
mov
imul
dec
push
pop
jns
xchg
sbb
aam
pop
cmpsl
push
fwait
icebp
jns
xchg
push
pop
icebp
xchg
mov
adc
notl
xchg
push
pop
push
xchg
lret
or
lods
mov
fists
cmp
repnz
mov
popf
jmp
cmc
inc
mov
cld
mov
les
loope
sar
setg
scas
mov
mov
inc
push
pop
jp
mov
adc
movsb
clc
xor
lea
icebp
repnz
mov
cmp
dec
jg
imul
movsb
mov
cmpsl
sub
pop
and
and
push
fimuls
fists
or
mov
in
mov
nop
hlt
rcrl
scas
loope
jns
xchg
push
fsubs
jnp
lcall
in
push
pop
lea
sub
dec
aad
pop
xchg
push
pop
jns
inc
sub
xchg
lods
xchg
rcrl
inc
or
jns
sbb
sub
cmp
xor
and
inc
mov
xchg
lret
mov
cmp
rorl
scas
mov
inc
xor
jge
imul
cwtl
dec
cld
repnz
mov
inc
cwtl
cmp
adc
sbb
in
das
mov
lahf
inc
mov
sbb
jge
jne
mov
leave
mov
aas
enter
mov
arpl
xchg
mov
xor
and
daa
ficoms
push
jns
xchg
pop
cmpsl
jne
dec
pusha
loope
clc
stc
adc
adc
in
push
jmp
insb
cmp
outsl
popa
cmp
arpl
ja
add
lret
push
sbb
inc
dec
sbb
fisubrs
mov
arpl
lret
mov
rcrl
adc
outsb
cmp
mov
xchg
fs
sub
jnp
or
push
lret
mov
xor
pop
adc
and
fimuls
enter
imul
data16
das
push
daa
mov
cmp
jmp
aad
or
fcmovne
mov
lret
xor
lods
sub
sub
inc
in
cmpsl
cmp
cld
out
sub
sbb
das
ljmp
push
int
rorl
or
push
xchg
and
insl
sub
loopne
clc
jae
inc
popf
mov
inc
jp
lret
dec
mov
xchg
movsb
ret
in
push
fsubp
inc
dec
xor
push
popf
mov
inc
inc
push
pop
jns
xchg
movsb
push
jne
lods
push
pop
xlat
enter
mov
sub
loop
xor
jns
xchg
aaa
sbb
pop
loop
inc
mov
in
push
pop
enter
mov
xchg
pop
mov
popa
mov
ret
sub
xchg
inc
cld
repnz
das
or
pop
mov
daa
int3
pushf
into
shlb
mov
push
mov
cmp
mov
adc
cmp
lea
xchg
push
mov
push
lahf
mov
lock
mov
push
pop
in
je
jbe
mov
pop
jns
loope
adc
outsb
jns
mov
pop
addr16
test
and
nop
imul
cld
repnz
cmpsb
loop
sti
jmp
adc
and
notl
sbb
sbb
dec
mov
cmp
loop
dec
and
cld
bnd
mov
xchg
mov
sbb
cmpsl
push
jecxz
push
loopne
pop
test
lret
out
and
push
out
sarl
test
lret
mov
int
insb
dec
jae
insl
push
fcompl
cli
enter
je
and
loop
push
fbstp
mov
ja
ficomps
clc
xchg
jge
pop
jle
in
outsl
xorb
test
xor
jle
in
je
sub
test
jae
xlat
dec
mov
in
mov
push
sahf
mov
push
in
jg
roll
mov
cs
add
das
enter
jle
out
mov
scas
jno
xor
cwtl
aas
jp
pop
jle
cmp
movsb
jge
adc
insl
mov
stc
in
js
imul
test
xchg
pop
sub
mov
cmp
repnz
pop
jb
inc
fdivr
loop
push
je
in
das
ds
inc
mov
cmpsb
repz
cld
repnz
mov
mov
cmp
and
scas
or
test
dec
mov
cltd
and
aaa
xchg
adc
mov
arpl
and
add
repnz
ljmp
mov
loope
repnz
jns
ss
cmp
sub
mov
push
cmp
into
mov
jb
mov
inc
mov
shrb
mov
and
fiaddl
xchg
xchg
push
pop
push
mov
push
push
loop
sbb
mov
mov
sbb
fwait
and
mov
ds
mov
outsb
test
mov
xchg
cld
repnz
das
dec
add
nop
inc
ss
cld
and
adc
insb
loope
pop
jecxz
jge
lahf
push
xorps
inc
or
adc
jns
xchg
lcall
jmp
jmp
in
push
and
dec
push
mov
push
enter
inc
inc
js,pt
ror
insl
jo
repnz
mov
mov
mov
movl
mov
xchg
aad
andb
pop
jbe
repnz
cli
nop
test
jnp
mov
std
mov
std
cmc
xchg
inc
ds
scas
xor
push
sti
daa
xor
lret
sub
lods
inc
and
pop
xor
mov
mov
decb
jge
xchg
in
movsb
push
fidivs
cld
repnz
das
test
addr16
movsb
sub
cmc
enter
sub
inc
mov
daa
inc
sub
in
scas
add
dec
hlt
scas
cli
fistps
pop
cmc
mov
mov
stc
in
pop
stos
sbb
scas
sbb
cs
sbb
pop
jle
fsubs
push
add
pop
mov
mov
push
inc
sbb
mov
fisubs
jns
icebp
xor
push
jno
ret
out
outsl
xlat
mov
jns
xchg
mov
inc
mov
sub
fimuls
dec
mov
and
icebp
mov
aam
dec
push
xchg
inc
shl
adc
jg
sahf
xor
xchg
fdiv
lret
int3
or
shll
adc
mov
loop
pop
push
sub
movsl
xor
repnz
jno
push
mov
shll
in
pop
clc
xor
or
or
dec
pusha
out
and
jbe
repz
jmp
mov
das
mov
or
pop
push
mov
dec
jmp
mov
pop
sbb
mov
adc
add
lret
das
xchg
xor
pop
xchg
shll
mov
test
hlt
add
mov
das
inc
insl
mov
data16
jg
mov
fidivrs
fldt
jmp
dec
mov
repnz
jbe
mov
les
lret
and
imul
mov
mov
inc
into
pop
push
adc
scas
mov
inc
rcr
jg
xchg
sub
xchg
push
scas
mov
fistpl
cmp
lock
jmp
stos
addr16
fbld
pop
adc
jmp
inc
test
jbe
in
pop
mov
adc
cmp
scas
clc
pop
mov
iret
inc
enter
mov
fisubrs
xchg
jmp
das
mov
push
cwtl
sti
mov
add
test
pusha
cmp
lret
mov
cltd
ret
pop
xor
sub
sub
push
or
in
insb
lret
mov
jae
push
leave
sbb
cmc
inc
pop
stc
repnz
into
or
test
cltd
jecxz
popa
push
je
stc
in
in
addr16
rorb
adc
cmp
sar
in
pop
mov
pmuludq
in
pop
jle
lea
adc
popl
lcall
pop
add
fistpll
sarl
stc
in
and
movsb
push
add
mov
or
and
stos
xlat
enter
push
pop
mov
fstps
push
pop
jns
push
stos
jg
push
xchg
lret
popa
dec
or
lahf
pop
pop
jns
ss
adc
out
jmp
push
mov
xchg
jg
jo
mov
subps
jle
pushf
sbb
and
repnz
mov
inc
mov
push
push
cmp
dec
jnp
and
xor
lret
das
push
mov
hlt
das
xor
loope
jns
cld
sti
leave
pop
pop
xchg
jmp
mov
sbb
outsb
xchg
shr
fldenv
lret
das
mov
or
arpl
inc
mov
adc
pop
test
and
jns
ljmp
push
fimuls
test
add
pushf
int3
mov
pop
cli
jb
xchg
pop
xchg
jle
arpl
mov
push
fiadds
shl
inc
call
aad
scas
mov
ds
cs
xor
cmp
insb
repnz
mov
xlat
jnp
mov
xchg
cltd
push
lcall
jno
sbb
xor
sub
scas
mov
or
hlt
pop
popa
jmp
test
int
cmc
xchg
push
pop
jns
push
adc
lret
sub
and
movsb
xor
hlt
adc
lret
xchg
nop
jl
jno
adc
iret
adc
mov
test
or
repnz
jmp
or
jns
xchg
push
xchg
dec
bound
xchg
push
pop
stos
cmpsl
inc
loop,pn
adc
adc
xchg
jg
fs
loop
push
or
add
jge
mov
dec
repz
pop
xor
mov
in
fistpll
mov
popa
dec
and
mov
popl
adc
lock
lret
pop
jns
sbb
pusha
in
jnp
aas
xchg
pop
iret
xor
xchg
push
icebp
incl
mov
sbbb
cmc
lds
adc
pop
jns
lods
xchg
lods
movb
les
in
push
test
mov
push
cmp
das
aad
sbb
pop
pop
adc
std
and
mov
pop
add
shrl
xchg
ja
mov
cmp
push
pop
jns
jg
je
sub
in
mov
jle
notl
mov
xchg
repz
ljmp
nop
inc
jle
fnsave
and
jle
xor
cs
xor
mov
pop
jle
nop
inc
shl
in
in
lahf
arpl
pop
push
xchg
push
stc
in
daa
decb
push
arpl
push
in
inc
mov
mov
in
mov
icebp
std
jae
in
aam
dec
dec
in
pop
and
jecxz
cmp
ja
rcl
ja
dec
and
stc
test
and
leave
push
push
and
imul
shll
xchg
sub
loopne
mov
xchg
push
adc
sub
xchg
xchg
push
pop
scas
ja
mov
add
pushf
mov
mov
ret
adc
pop
call
lds
inc
mov
test
inc
mov
das
mov
movsb
scas
pushf
pop
cltd
jle
out
xchg
das
mov
in
cmp
pop
repnz
jl
div
push
push
sahf
jmp
test
pop
cmc
mov
cld
sti
enter
ljmp
or
pushf
enter
jb
sub
cmpsb
mov
sbb
in
pop
inc
jns
cmp
or
jg
stc
jnp
adc
repnz
mov
jae
stc
in
lahf
popa
loopne
enter
gs
mov
mov
sub
push
cmp
xchg
pop
jle
and
cwtl
loope
xchg
iret
sub
pop
sbb
and
mov
enter
lods
mov
and
push
fimuls
mov
jle
in
lea
xor
pop
dec
test
cmpsb
stc
in
pop
mov
mov
jnp
test
imul
dec
or
xchg
pop
jle
jae
loope
cld
fisubs
pop
jle
int
pop
or
mov
add
cld
repnz
mov
xchg
fdivp
test
hlt
inc
cmpsl
push
cli
stc
in
jg
dec
fwait
inc
aam
inc
movsl
sub
stc
in
pop
jle
mov
test
in
imul
fists
xchg
pop
jle
stos
mov
push
mov
pop
mov
pop
jle
in
inc
cmpb
out
mov
push
mov
stc
sti
enter
inc
push
xchg
shl
mov
adc
mov
push
xor
into
adc
push
ficoms
test
aaa
dec
push
addr16
cmp
and
int
frstor
xor
jns,pn
lods
or
cli
mov
in
push
pop
push
in
fs
sahf
mov
jmp
pop
jns
and
jmp
test
xor
aas
mov
jg
lret
cmp
loop
jl
out
jle
in
or
mov
sbb
xchg
ja
adc
je
push
jp
xchg
aas
das
rcl
xor
sub
fistpl
pop
push
jp
push
mov
gs
je
inc
mov
lret
das
ljmp
mov
sub
mov
stc
and
push
pop
ret
sti
int
mov
jnp,pt
lret
cwtl
inc
std
add
dec
push
ljmp
pop
roll
pop
mov
jle
in
inc
mov
test
enter
daa
pop
mov
xor
test
jbe
xlat
in
pop
jle
mov
mov
enter
lcall
stc
or
fnstcw
mov
cmpsb
inc
mov
jmp
fucomp
loop
je
outsb
repnz
and
mov
push
adc
lahf
out
xor
dec
pop
jns
xchg
ds
pop
cmp
xchg
ja
jns
xchg
push
repnz
push
xor
pop
dec
or
push
xor
xchg
push
pop
int
clc
pop
clc
and
shrb
pop
jns
cmp
lahf
sbb
fistl
mov
push
pop
jns
repz
test
das
lahf
sbb
fbld
dec
int3
jmp
aaa
push
out
and
imul
mov
mov
cmp
insb
push
aaa
xor
lds
mov
jle
in
inc
idivb
gs
bound
stc
in
sbbl
add
pop
pop
movsl
mov
adc
outsb
push
mov
aaa
rolb
dec
mov
or
and
dec
mov
pop
int
xchg
loop
mov
repnz
arpl
sub
sbb
sub
in
insl
xor
jnp
jge
sub
fcoms
fcom
lock
lcall
mov
aad
cli
push
fcmovb
repnz
das
decl
push
aad
jmp
outsb
inc
fmulp
das
mov
mov
mov
sti
push
jg
cld
repnz
fwait
hlt
cli
shll
or
hlt
adc
jle
in
mov
inc
int
popf
loopne
pop
dec
repnz
pop
cmpsl
xor
in
jecxz
ja
sub
sub
repz
cltd
or
sbb
movl
sub
loope
mov
popa
sub
iret
in
xchg
push
pop
jns
mov
adc
aam
jb
fidivrl
mov
jge
in
and
je
xor
push
sti
or
mov
pop
data16
lods
js
insl
stc
cmpsl
push
mov
das
lcall
lock
inc
icebp
inc
lcall
lret
and
inc
pop
jo
pop
push
outsl
in
sbb
dec
jae
jg
mov
xchg
aaa
add
and
rcrb
jns
es
jo
in
cmp
lahf
test
and
popa
ljmp
mov
mov
sub
jno
or
popf
nop
imul
jp
lret
mov
dec
ret
fidivs
lods
cld
daa
jmp
int
push
fimuls
inc
mov
imul
lods
xlat
ja
jns
call
jl
jg
mov
pop
mov
and
lods
fmuls
mov
mov
popa
mov
sub
mov
cmp
pop
inc
inc
ficomps
xor
adc
jecxz
mov
cwtl
mov
fs
mov
enter
mov
movq
insb
jo
add
or
je
cmp
xor
or
jecxz
dec
sbb
cmp
pusha
sbb
repnz
dec
or
repnz
xchg
pop
ja
es
cld
cmc
daa
int3
sub
or
xchg
pop
jle
rcrl
inc
sbb
push
pop
jns
fnstsw
and
enter
xor
pop
jns
xchg
hlt
cs
mov
fs
push
adc
add
lahf
scas
call
or
pop
imul
jne
bndstx
xor
mov
sub
pop
loop
and
xchg
pop
jle
iret
ljmp
in
or
rcll
jl
in
sub
jge
xchg
push
dec
int
jle
rcrl
arpl
and
in
dec
mov
or
inc
xlat
rclb
pop
push
std
lods
mov
lcall
cmpsl
add
das
mov
xor
push
pop
jns
push
pusha
xor
repnz
shlb
pop
mov
in
stos
sub
and
jle
outsb
sub
mov
cwtl
shll
sub
pop
jns
cmc
je
insl
inc
mov
dec
test
fdivrs
notb
push
adc
add
jmp
jg
jmp
shlb
mov
bnd
push
pop
jns
push
frstor
scas
cmpb
bound
jns
enter
ret
sbb
ds
jns
xchg
cmp
mov
loope
add
lahf
push
mov
xchg
push
xor
je
push
push
jbe
in
push
pop
push
insb
push
out
les
xchg
push
pop
jns
out
pop
push
mov
inc
push
push
imul
inc
xchg
data16
mov
in
pop
jns
xchg
push
pop
cwtl
push
mov
cmp
xchg
push
or
add
push
and
or
lds
repnz
decl
rorl
outsb
cmp
jp
lret
adc
sub
or
xchg
push
fiadds
add
std
shlb
sbb
pop
dec
or
lock
in
jg
cmp
ds
adc
pop
jle
lcall
add
mov
lret
pop
cmp
pop
das
cmp
xchg
das
mov
sahf
rorl
mov
cs
mov
mov
fwait
pop
inc
jmp
lods
aaa
subb
xchg
das
fistps
xlat
cmp
pop
jle
movsb
jecxz
push
pop
inc
xchg
push
dec
mov
push
adc
mov
push
ljmp
mov
and
rclb
lret
cmp
leave
sub
out
adc
pop
jns
adc
test
xor
jne
jns
xchg
push
sub
xchg
daa
pop
test
in
push
pop
mov
inc
arpl
in
inc
push
pop
jns
xchg
cli
repnz
out
xor
xchg
lahf
fcom
lods
shll
mov
mov
icebp
in
ret
inc
fwait
movsb
sbb
jle
in
outsl
ret
and
js
stos
sub
incb
mov
pop
cmp
inc
xor
xlat
xchg
jno
xchg
pop
jle
push
mov
jne
push
std
add
jmp
add
mov
lret
inc
aas
cmp
sub
push
add
cmp
leave
fcoml
dec
add
mov
leave
add
dec
out
jo
xchg
ja
sahf
mov
mov
scas
mov
sbb
in
xor
jb
sti
enter
xor
xlat
mov
jg
sbb
xor
cmp
lds
repnz
sbb
jns
xchg
ja
xchg
add
jae
fisttpll
push
pop
inc
lret
rcl
addr16
jg
xor
pop
jns
arpl
ret
stos
adc
test
xor
mov
cmp
repz
pop
and
inc
pop
out
in
push
mov
ljmp
sti
push
jnp
xchg
push
pop
cmp
adc
outsb
adc
insl
jg
pop
jns
dec
jle
stos
xor
aad
xlat
pop
pop
enter
xchg
inc
jnp
jecxz
and
add
mov
sar
in
das
mov
int
jns
es
jl
jge
xchg
js
sub
push
mov
jl
shl
push
std
adc
in
push
mov
mov
cld
repnz
jns
fs
insb
out
popf
xor
into
push
scas
mov
jp
test
in
dec
aaa
mov
orb
das
aas
push
lods
test
iret
push
ficoms
pop
jg
fwait
test
mov
xor
xchg
ficoml
inc
mov
ret
push
mov
mov
cmp
xchg
push
fimuls
cmp
loopne
mov
push
pop
jns
repnz
js
add
daa
jbe
mov
push
pop
jns
pop
xchg
clc
mov
sbb
in
enter
add
xchg
jmp
cmp
jnp
ror
push
fcompp
js
dec
cmpb
clc
push
mov
add
or
and
das
xchg
push
pop
jns
mov
push
jge
dec
outsl
aas
mov
jns
adcb
and
rcll
jmp
jb
lods
sti
enter
inc
sbb
inc
xchg
fbld
mov
leave
imull
dec
xlat
push
mov
in
stos
push
and
fdivrp
fwait
cmp
cli
enter
sbb
cmpb
mov
push
fidivs
mov
mov
fs
push
sbbb
pop
mov
je
out
and
outsl
xchg
scas
mov
call
enter
pop
call
clc
in
add
sub
lods
test
xchg
lea
loopne
and
jo
xlat
shll
xchg
jg
pop
mov
popa
jmp
out
jle
in
jge
fdivrl
dec
mov
rol
pop
ljmp
test
stos
sub
push
pop
rcrb
pop
shll
lret
adc
push
std
fwait
adc
add
jp
repnz
out
add
mov
addr16
xchg
int
jmp
adc
xchg
mov
push
lods
inc
scas
mov
ret
or
insb
popf
lods
daa
shl
xchg
insb
xchg
xor
pop
cmp
and
push
loopne
or
inc
mov
stc
in
scas
fwait
inc
movsl
lret
into
mov
in
pop
out
das
sti
mov
add
test
cmc
pop
movhps
pusha
mov
jle
dec
cmc
cld
loopne
sahf
rorl
jecxz
in
mov
mov
lock
lret
in
pop
jle
in
xchg
sub
xchg
sbb
call
xchg
cli
ret
pop
movsl
sbb
loope
push
in
out
out
push
push
pop
jns
mov
popf
and
or
adc
call
jbe
popf
mov
or
and
fidivrl
in
pop
dec
pop
lahf
ret
loope
outsl
sarb
cld
repnz
pop
inc
and
fsub
jecxz
ret
jl
lret
das
inc
lret
cmp
lock
das
mov
test
jge
nop
pop
mov
pop
adc
stc
dec
pop
fstps
shll
sbb
mov
cmc
and
and
repnz
pop
mov
jb
fadd
scas
pop
repnz
fldt
add
lods
es
rclb
add
xor
xchg
ja
es
jns
ljmp
rcrl
in
push
cmpb
dec
cmp
in
mov
dec
jae
mov
dec
in
fs
push
and
pop
enter
lods
xorps
mov
inc
aam
pop
out
test
mov
daa
cwtl
sbb
bound
xchg
fidivrs
repnz
pop
jno
sbb
fdivs
pushf
enter
cld
stc
repnz
das
fimull
lret
ljmp
hlt
xchg
aaa
adc
adcl
int3
mov
jg
stos
loopne
xchg
pop
test
lods
mov
enter
sti
scas
scas
loopne
lret
mov
jmp
jmp
lahf
jg
idivl
subl
mov
jp
mov
test
sub
cld
nop
lds
jle
and
jge
insb
lcall
push
push
mov
mov
pop
lea
adcl
mov
xchg
sub
leave
lods
mov
pop
mov
xchg
lret
mov
fnstcw
test
jle
notl
lahf
adc
pop
adc
stc
in
pop
dec
scas
aam
jl
push
rorb
inc
or
jle
lret
lahf
fstl
les
add
call
push
int
lcall
clc
enter
add
test
pop
aas
jmp
out
jnp
push
scas
mov
push
loope
scas
movsl
mov
std
in
inc
cmp
cmpsl
cmp
ss
sub
sub
fwait
xor
mov
mov
leave
and
sbb
js
sbb
fs
mov
aam
mov
dec
sub
mov
xchg
xlat
sbb
iret
xor
sub
mov
movsl
lret
sub
xor
adc
cld
cmp
addr16
out
or
adc
jecxz
stc
in
and
repnz
or
iret
scas
add
sub
popa
inc
jle
repz
ds
mov
jle
adc
and
cmpxchg
sarl
xor
push
ficomps
inc
mov
push
pop
jns
stos
jp
xor
enter
xchg
in
dec
and
ficomps
ja
cs
cltd
adc
in
mov
push
por
pop
and
jmp
loop
dec
sti
push
mov
fcmovu
ds
or
xorb
pop
push
xor
lret
dec
pop
pop
mov
inc
xchg
jg
repnz
es
add
insl
fsubrl
in
cmpsw
push
test
mov
xor
stc
testl
in
jg
mov
mov
inc
scas
xchg
adc
mov
jns
xchg
ja
lock
lea
xchg
mov
in
push
pop
jle
les
or
call
lds
in
and
mov
push
pop
jns
inc
shl
mov
outsl
jb
mov
xchg
sub
xor
addr16
lcall
sbb
sub
push
pop
jns
mov
adc
punpckhdq
jge
in
je
and
adc
subl
jge
sahf
or
and
shr
pusha
les
pop
jle
adc
mov
cmp
mov
popf
imul
cmp
test
stc
in
jae
mov
scas
and
xlat
idivl
in
cs
dec
cmpsl
in
and
add
insl
add
pop
scas
test
pop
inc
mov
mov
repnz
xchg
inc
inc
cmp
add
cmpsb
in
add
mov
jb
cmp
jg
das
mov
les
mov
adc
cld
repnz
mov
push
fsubp
mov
dec
ret
cld
repnz
das
imul
aam
rorl
push
enter
pop
fmuls
lahf
and
adc
movsl
cmc
xchg
xor
push
sub
and
jge
arpl
repnz
mov
or
ja
out
mov
es
shll
push
fistps
rorl
mov
pop
sub
stos
lahf
push
mov
or
sub
or
jne
insl
pop
das
mov
mov
mov
push
insb
jno
inc
les
mov
shr
mov
dec
outsl
inc
into
and
add
xchg
das
sbbb
repnz
adc
decb
cmc
and
push
sbb
add
in
push
ret
outsl
add
and
lret
js
arpl
fs
dec
inc
mov
sahf
shrb
dec
mov
xor
jns
xchg
and
adc
sbb
xor
hlt
push
jns
xchg
push
and
jno
xor
pop
ds
mov
cmp
jp
xchg
es
fsubr
adc
imul
aaa
mov
scas
mov
inc
sbbl
mov
in
sbb
test
fcomip
lret
clc
sub
leave
imul
mov
sahf
adc
push
scas
roll
sub
je
pusha
iret
xchg
rolb
movlps
lds
xor
das
jle
pusha
stos
loop
mov
or
cmp
cld
repnz
mov
leave
icebp
js
xchg
pop
clc
dec
pop
xor
inc
imul
xchg
cld
repnz
das
xchg
xchg
jnp
inc
popf
xchg
mov
repnz
das
mov
rorb
cmp
adc
mov
rol
add
push
fisubrl
inc
cld
repnz
stc
adc
push
mov
and
loopne
lock
call
fiadds
and
push
sbb
push
pop
jns
xor
fsub
lahf
imul
cmc
fldl
loope
jns
xchg
inc
xor
jb
cmpsb
cmpsl
imul
into
xchg
fiadds
divl
test
int
or
jns
xchg
cli
cs
lcall
sbb
test
push
stc
notl
jle
mull
sbb
mov
mov
stc
in
jno
push
xchg
xchg
xlat
mov
stos
pop
pop
xor
daa
jecxz
pop
add
add
push
pop
jns
pop
cmp
test
sbb
loope
push
mov
cltd
push
orb
loopne
xchg
push
stc
pusha
clc
jb
push
mov
jge
pop
shlb
xchg
mov
xchg
divl
push
xchg
es
cmpsb
mov
jl
ja
arpl
adcb
repnz
mov
rcr
inc
aas
sub
notl
outsb
lea
faddl
inc
jle
roll
push
and
std
loopne
sbb
and
fisubl
xchg
ljmp
sbb
jmp
push
out
cmp
pop
jle
in
mov
xchg
mov
mov
adc
in
daa
jg
or
scas
mov
jg
push
xchg
cmp
mov
pusha
loop
pushf
sub
xchg
popa
adc
dec
enter
mov
jbe
and
add
fs
aaa
sub
out
mov
popf
inc
loopne
jnp
outsb
mov
fsubr
pop
mov
inc
pop
jns
add
addl
scas
imul
outsb
lods
sbb
stos
cmp
das
add
push
ret
cmp
ficoms
mov
jb
mov
dec
push
movsl
aam
aaa
cmc
mov
ds
clc
or
andl
nop
out
pop
mov
repnz
jecxz
and
inc
sbb
inc
in
sub
fmuls
mov
ljmp
inc
mov
lret
movsl
fcomi
cmpsb
inc
xor
cmp
mov
mov
and
mov
repz
notl
lds
push
jno
inc
mov
lea
stos
roll
jnp
scas
mov
inc
and
cli
jge
xor
loopne
mov
loop
sbb
out
call
or
sub
sbb
stc
in
scas
jo
sbb
leave
loopne
xor
loop
ja
jg
ret
fiadds
pop
jge
pushf
les
mov
pop
imul
stc
in
xchg
icebp
push
push
jae
lret
test
into
repz
jle
in
enter
je
jo
xchg
add
pop
cmp
enter
enter
fildll
xor
pop
stc
bound
add
push
pop
jae
pop
xchg
push
fiadds
test
int
fwait
icebp
add
jns
xchg
sbb
ja
mov
sbbb
jg
nop
push
std
cs
jge
push
cmovge
loop
cmp
in
mov
jp
ja
sbb
cmp
xchg
pop
dec
xor
add
clc
jg
fcompl
hlt
jb
jmp
add
xchg
mov
pop
sub
in
push
pop
jle
sti
repnz
or
lret
aad
push
pop
jns
add
push
mov
mov
pop
jns
sub
adc
lea
loopne
inc
and
and
push
int
pop
jns
in
stc
mov
ret
imul
insb
mov
jns
xchg
shl
mov
mov
sub
inc
xchg
push
fildll
push
sbb
mov
push
dec
jmp
mov
and
and
push
repz
cli
in
push
pop
jns
adcl
fiaddl
mov
stc
in
inc
stos
and
xor
mov
fmul
maxps
repnz
das
jmp
jnp
or
das
mov
push
cmc
ret
repnz
inc
mov
das
mov
popa
xchg
into
sub
or
lret
jbe
sarl
jmp
out
aaa
nop
addl
cmp
jne
popf
push
loop
repnz
aas
jl
stc
insb
iret
mov
pop
jae
ror
mov
xor
push
fstpl
sbb
repnz
lods
cmp
lods
mov
cld
repnz
mov
xchg
xchg
lods
es
mov
cld
repnz
das
lods
sbb
into
inc
pop
stos
xchg
imul
mov
sbb
lret
fistpl
mov
or
jb
lret
sub
lea
xchg
xchg
adcl
leave
sub
or
jne
push
sbb
decl
mov
rcll
add
icebp
jae
fisttps
loope
sub
test
shlb
rcll
add
lea
pop
fmuls
mov
stos
aas
xor
rcr
stc
in
jg
imul
xchg
es
ljmp
mov
cmp
mov
mov
mov
lahf
popf
sahf
cmp
stc
in
xchg
push
movsl
fdivrl
mov
and
out
and
pop
js
xchg
dec
pop
sub
sbb
sti
das
pop
stc
bnd
xor
dec
xor
cld
repnz
dec
inc
xchg
push
jmp
int3
jp
sub
fsubs
repnz
inc
and
fwait
pop
ret
dec
adc
lea
jmp
das
mov
adc
inc
inc
test
repnz
std
sbb
lds
pop
lret
mov
cmc
test
jo
mov
sbbb
cmp
ss
test
dec
xlat
dec
inc
loop
ja
mov
lret
jno
jg
pop
das
pop
lahf
repz
and
lcall
enter
pusha
stos
out
jg
jbe
in
cld
add
mov
repz
sub
inc
shld
daa
loopne
clc
addr16
mov
sub
xchg
push
pop
mov
cmpl
or
adc
sahf
mov
pop
xor
imul
pop
jns
dec
inc
pop
fstl
outsl
jg
xor
lret
popa
pop
popf
decl
sti
les
mov
rcrl
das
mov
xlat
inc
sahf
popf
push
pop
mov
repz
mov
lcall
push
ds
sbb
xor
push
xchg
test
das
test
lret
das
incl
adc
inc
addr16
test
dec
gs
lret
das
mov
mov
adc
adc
mov
pop
inc
sbb
cmp
lret
inc
and
mov
sub
aad
push
fimuls
push
sbb
scas
pop
and
sbb
jo
aam
lock
jne
mov
mov
add
xor
dec
cltd
int3
sbb
inc
in
das
fwait
adc
movsl
cmp
pop
jns
arpl
xchg
jno
sub
jle
jnp
in
push
mov
add
xchg
pop
or
mov
sub
mov
sub
popf
pop
cli
push
adc
lcall
outsl
fldcw
dec
xchg
and
cltd
dec
adc
sub
or
or
inc
frstor
mov
jmp
mov
cmp
lret
mov
mov
ret
dec
aam
ljmp
cmp
int3
jge
cld
rorl
lods
mov
rolb
fsts
sbb
jb
repnz
mov
push
dec
jno
stc
scas
sbb
dec
out
icebp
cmpsl
dec
nop
daa
xchg
add
ja
and
clc
in
sub
ljmp
jne
dec
adc
mov
xor
filds
and
inc
pop
sti
je
push
lret
mov
adc
xor
js
inc
mov
push
test
jmp
push
aas
mov
imul
lret
insl
fs
mov
movsb
enter
ficoms
imul
push
or
daa
ljmp
test
aaa
xchg
mov
lret
mov
hlt
jle
frstor
mov
mov
fs
xor
sbb
cli
dec
and
mov
sub
fsts
popl
cmp
fcmovbe
jmp
pop
jle
testl
and
fnsave
xchg
pop
dec
test
cli
pop
mov
lret
das
mov
mov
lret
jle
pop
jns
jge
sbb
mov
sbb
xchg
les
in
push
stos
sub
jge
push
add
mov
repz
push
pop
into
fisttpl
or
adc
int3
pop
testl
gs
xchg
pop
jle
popf
fldl2t
mov
mov
in
ss
pop
mov
nop
andl
outsb
add
jecxz
cmp
jmp
scas
jns
xchg
push
fwait
pop
cmp
lods
cs
test
shl
lret
push
pushf
mov
aad
lret
sbb
inc
scas
mov
or
xor
hlt
xchg
cwtl
leave
inc
xchg
mov
ds
xchg
mov
cmp
cmp
sbb
jnp
or
jno
jbe
xlat
xchg
outsb
frndint
add
xorb
clc
daa
jns
lret
mov
lea
sbb
xlat
dec
xchg
das
mov
loop
sub
jns
mov
mov
add
add
push
sub
cld
ret
and
or
mov
cmpsl
cld
mov
repnz
das
add
push
pop
test
or
pop
sahf
xchg
xchg
das
call
into
cli
in
cmp
jno
stos
sti
xchg
pop
jle
stc
lret
mov
sub
cld
sti
enter
sbb
mov
mov
cmp
es
ss
adc
mov
aam
push
mov
push
jecxz
jge
lret
mov
imul
or
movsb
jnp
stc
in
pop
mov
popf
into
mov
in
pop
jle
scas
pushf
jle
icebp
stc
cmpxchg
dec
test
sub
daa
xor
ds
mov
daa
dec
popf
push
ds
dec
jns
xchg
mov
jle
xor
pop
ficoms
xchg
jg
pop
ret
jnp
iret
and
sub
sbb
jle
in
nop
xchg
fstp
adc
aas
fnstenvs
out
fstpl
and
fisttpll
popa
jmp
ja
dec
push
clc
outsb
add
lret
aas
ljmp
movsb
fmull
ret
pop
dec
das
shrb
pop
jle
in
stos
or
lret
inc
fcmovnu
cmp
repnz
dec
jnp
out
imul
clc
popf
call
pop
cmp
add
sti
push
xor
cwtl
cli
enter
stos
adcb
inc
mul
xchg
push
ficomps
mov
movsl
or
xchg
push
pop
jns
call
inc
pop
into
mov
sbb
mov
mov
fisttps
jns
sub
ret
cmp
lods
xchg
pop
das
pop
mov
pop
negl
fildl
inc
pop
jns
repnz
popf
lods
jno
xchg
mov
add
xor
scas
mov
pop
add
les
mov
mov
in
sbb
mov
fabs
and
inc
pop
insb
iret
rorl
inc
push
pop
jns
dec
mov
pop
mov
in
sahf
in
pop
in
sbb
sahf
inc
ja
call
insb
les
mov
outsb
scas
subb
or
out
pushf
repnz
lret
fs
lods
loope
jbe
xchg
xchg
js
lret
mov
xor
mov
xchg
hlt
movsb
sub
add
and
sbbb
push
push
mov
cmp
lahf
sub
jbe
inc
inc
out
int3
sub
in
mov
and
sahf
jl
push
inc
pop
and
xchg
sub
scas
testl
mov
cmpsb
pop
jge
and
jl
sbb
pop
push
inc
mov
sarl
ja
in
mov
xchg
jg
out
inc
jbe
stc
dec
scas
fwait
insb
clc
mov
jle
add
aam
addb
sub
jle
cs
js
and
jp
cmp
inc
jle
in
cmp
in
jo
lods
je
in
dec
jo
lea
cmc
mov
enter
adc
scas
mov
mov
popa
pop
iret
jns
loop
jp
fdivl
lds
das
sbb
lret
cmp
pop
sub
push
shll
sub
push
pop
xor
out
lret
xchg
push
pop
push
movsl
and
push
xor
repnz
in
mov
and
les
jb
xchg
push
pop
insb
cmp
inc
mov
pop
jns
jge
adc
adc
ficoms
pop
dec
mov
xlat
ss
in
cld
jns
xchg
push
sbb
rolb
jns
jb
out
in
push
pop
out
push
mov
sarl
pop
jns
push
ror
fwait
sahf
fwait
jl
mov
pop
jns
inc
roll
cwtl
inc
out
aad
js
cmp
pop
jns
xchg
sbb
xchg
and
fdivl
in
push
sbbl
test
stos
jl
aam
push
pop
push
mov
inc
loopne
cld
sti
enter
dec
xchg
scas
out
pop
pop
push
leave
into
shl
lret
das
mov
lock
rol
add
das
mov
or
xchg
sub
js
or
pop
inc
loopnew
out
mov
mov
mov
inc
jg
dec
out
ds
outsl
lods
lret
das
decl
fdivrp
dec
and
pop
jae
mov
repnz
push
mov
jmp
es
fnsave
adc
cld
repnz
loop
cwtl
and
sbb
cmp
sub
into
pop
dec
jl
mov
pminsw
fistpll
jle
cmp
sub
fwait
push
lret
dec
push
shlb
lds
xchg
fs
sub
jne
das
pop
push
out
orl
mov
xchg
mov
out
fs
add
or
scas
mov
rcr
push
cli
or
or
mov
ret
shrb
sbb
in
sbb
mul
xchg
mov
jp
imul
sahf
out
xchg
pop
jle
movsl
fsubs
sub
mov
popf
cmpsl
int
rolb
ss
adc
jp
lret
ljmp
insb
sbb
out
jge
out
add
aas
ds
cmp
subl
and
mov
mov
xchg
or
dec
mov
xchg
mov
scas
cmp
xlat
stos
and
enter
jns
mov
shll
iret
xchg
fmull
push
inc
push
pop
jns
pop
mov
mov
rsqrtps
in
xchg
pop
jmp
jle
lret
int
adc
jbe
jge
inc
pusha
icebp
jns
lods
leave
jne
mov
ja,pn
enter
out
push
scas
mov
outsb
and
imull
cmp
ds
clc
enter
sub
push
inc
gs
repnz
pushf
sbb
sub
movsb
and
sub
das
pop
repnz
das
mov
add
inc
and
mov
arpl
jne
push
enter
mov
imul
jle
in
stos
das
cmp
cmp
pushl
icebp
jl
in
pop
cmpsb
out
pushw
pop
push
into
clc
in
in
movsl
scas
repz
imul
jmp
out
sub
in
xchg
dec
pop
sti
sbb
daa
xchg
add
aaa
push
fnstsw
mov
fisttps
popf
in
fcmove
xchg
pop
xor
cmp
pop
ljmpw
cmp
mov
pop
sbb
fsubs
lcall
js
fwait
dec
dec
scas
stc
xchg
lret
and
pop
mov
ds
hlt
leave
cmp
fwait
dec
in
xchg
out
cli
inc
jo
mov
inc
mov
mov
into
in
fs
mov
jge
je
stc
in
pop
inc
pushf
loopne
mov
mov
loopne
or
mov
hlt
aaa
jg
mull
lret
imul
es
pop
enter
iret
mov
gs
cwtl
repnz
in
xchg
cltd
mov
cmp
cmp
je
and
sub
xor
pop
jae
mov
inc
in
sub
jne
push
mov
fiadds
sub
cmc
out
ffree
xlat
pop
jns
xchg
push
int
aad
in
cmp
and
jns
xchg
push
popa
sbb
cmp
jg
popa
and
imul
jno
adc
mov
and
loop
dec
pop
lds
std
repnz
xchg
sub
add
test
adc
lret
das
mov
inc
testb
sbb
das
mov
mov
dec
cmp
je
fildl
mov
repnz
push
dec
cmp
sbb
negb
cmp
das
mov
inc
cmp
cmp
lds
cli
inc
rclb
sbb
ret
daa
movsl
fs
pop
js
xchg
pop
sub
out
push
fnstenv
mov
dec
mov
fcmovne
xchg
mov
lret
cs
xor
dec
jl
faddp
dec
sub
sbb
mov
push
or
in
imul
and
mov
test
test
sbb
push
sub
jmp
sub
divl
or
inc
jecxz
ret
shl
adc
inc
in
jb
push
cltd
xor
xchg
pop
jle
insl
fimull
sti
mov
shlb
sbb
ds
cmp
jbe
cmpsb
jle
push
popa
xor
loop
mov
rorb
mov
adc
or
and
jle
popa
fbstp
mov
sbb
leave
std
fimull
sub
cwtl
add
pop
xchg
pop
jns
in
andb
or
xchg
jg
lahf
js
lock
bound
jne
dec
lret
or
ljmp
test
repnz
pop
jle
addr16
fwait
adc
fcmovu
cwtl
in
cmp
sbb
or
das
mov
push
xor
sub
sbb
stc
test
push
jge
inc
ret
out
dec
enter
cmpsb
jnp
cs
jl
es
cmp
inc
xchg
xor
insb
out
xlat
sub
loopne
xchg
mov
mov
and
lret
rol
dec
je
jl
lods
add
inc
adc
aaa
add
je
jmp
sub
jle
in
jmp
xor
lahf
jo
stos
mov
mov
sbb
xchg
pop
push
out
mov
cmp
inc
scas
mov
aad
jne
xchg
push
jns
call
and
test
sub
jae
movsb
inc
jle
mov
lea
fisubs
jnp
xchg
mov
dec
add
push
push
repnz
clc
dec
jge
sbb
push
sbb
cmp
lret
mov
test
ret
jno
mov
mov
ret
cmp
jmp
xchg
jmp
mov
cld
repnz
mov
xchg
ficompl
or
pop
repnz
das
mov
cwtl
sbb
push
or
mov
mov
enter
das
mov
xchg
sbb
xchg
cli
mov
lahf
pop
mov
in
mov
and
cmp
jns
repnz
das
pushf
mov
adc
cmpb
flds
xchg
insb
rcll
jo
sbb
mov
popf
imul
mov
repnz
mov
sbb
aaa
sbb
insl
aam
mov
ja
sub
xchg
xchg
add
pop
xchg
sub
arpl
movsl
or
lods
mov
xchg
jo
insl
imul
or
in
sub
mov
rcl
add
mov
lret
es
mov
arpl
push
loopne
std
or
push
push
mov
cs
add
negl
inc
in
imul
xor
jno
repnz
mov
data16
cld
jle
mov
push
pusha
cmc
enter
test
cld
fs
lahf
or
aas
pop
jns
cmp
fstl
jecxz
faddp
inc
push
int
and
sar
cld
sti
enter
shrl
scas
das
int3
test
push
shlb
jle
decl
mov
lahf
inc
std
aam
sub
xchg
das
mov
aas
mov
mov
jbe
pop
fistpl
lret
das
in
cmp
cmp
xchg
pop
decb
arpl
nop
out
outsb
mov
jl
dec
push
in
lcall
icebp
inc
lods
and
and
decb
mov
mov
jle
scas
sbb
jbe
enter
adc
push
lret
push
into
adc
in
mov
fwait
loope
fcmovnb
lahf
inc
xchg
jne
mov
xchg
push
pop
insl
pop
mov
pop
mov
in
icebp
ja
or
out
ret
and
and
mov
lret
bound
stc
in
jp
cmp
aam
lods
ret
pop
flds
repnz
les
fdivrs
rorl
mov
in
xchg
iret
popa
or
sub
out
shl
inc
testl
mov
or
xchg
dec
nop
stos
jmp
fs
push
repnz
sbb
add
sbb
das
ds
andb
push
je
rcl
cld
repnz
pop
scas
lea
imul
lock
mov
fisttpll
and
scas
mov
sbb
pop
mov
xchg
mov
call
sub
inc
dec
sbb
lret
xchg
out
addb
sbb
scas
mov
loopne
clc
cmp
clc
jp
mull
inc
add
lahf
cmp
jns
xchg
dec
cli
addr16
aam
adc
ja
xchg
push
or
cmp
and
stc
xchg
or
shlb
in
pop
pop
stc
repnz
mov
and
pop
or
loopne
jnp
xchg
jg
inc
fistpll
imul
and
xlat
js
lret
das
mov
sbb
sbb
mov
lea
dec
lret
push
cs
add
and
std
pushf
sub
insb
xlat
icebp
addb
lret
das
repnz
pop
imul
enter
les
jae
and
ds
popa
shrl
cmp
push
sub
enter
xor
sbb
mov
clc
enter
in
jo
hlt
jg
mov
jae
outsl
pop
ss
lahf
jl
add
aaa
pop
imul
adc
add
fnstcw
sbb
xchg
testl
jmp
mov
dec
in
push
pop
fcoml
bound
stos
sbb
enter
xchg
and
cmp
xchg
aaa
pop
jle
notl
lds
ja
pop
rcr
inc
xchg
lea
lret
pop
loopne
cmpsb
jle
dec
mov
dec
int
lret
das
lcall
ret
sbb
mov
scas
fisttpll
fbld
notl
push
jle
in
push
mulb
xchg
and
bound
or
inc
in
pop
push
mov
stc
in
xchg
mov
and
arpl
mov
in
pop
fidivrl
jecxz
xor
test
xchg
pop
jle
pop
xor
repnz
xor
js
repnz
js
stos
lea
xlat
sbbl
in
jne
outsb
loopne
in
push
add
mov
js
cmpsl
jne
xchg
push
pop
sub
sub
std
repnz
jns
loopne
dec
aad
imul
pop
test
stos
jmp
pop
push
adc
cld
test
lahf
in
push
pop
test
repz
movsl
ja
and
jns
mov
lods
dec
sbb
lods
jle
in
inc
pop
aas
dec
push
test
fnstenv
fists
fdivl
lret
mov
jge
cmp
aam
das
mov
ficoms
inc
cmp
dec
loope
outsl
or
bnd
pop
sti
xchg
popa
mov
mov
btc
and
lods
lods
js
shll
pop
jns
enter
inc
les
lret
jge
in
enter
inc
xchg
leave
cmp
test
roll
filds
fisubs
cmp
jns
push
jle
in
aas
pop
int3
push
sub
pop
jnp
sbb
xchg
pop
call
xor
sbb
xchg
mov
mov
xchg
in
or
push
pop
jns
pop
insl
dec
inc
in
inc
fadds
fdivl
in
inc
imul
fs
sbb
push
push
in
pop
jle
in
xchg
dec
dec
jns
add
xchg
pop
jle
cwtl
xchg
xchg
int3
mov
ss
fistpl
stc
in
adc
fsub
movsl
push
outsl
or
or
rcrl
les
scas
mov
mov
jno
sbb
dec
mov
inc
inc
xchg
stos
jmp
notl
mov
sub
xchg
pop
jle
repz
ficoml
mov
jmp
mov
add
fcomp
popa
cwtl
xchg
pop
jle
adc
or
nop
out
push
fidivrl
cmp
cmp
jnp
jo
add
cld
repnz
xchg
out
adc
das
xchg
cld
repnz
das
xor
mov
bound
xchg
das
mov
mov
inc
pop
jns
popf
pop
in
push
push
jbe
xchg
push
sti
mov
push
xor
push
push
dec
push
aad
shrl
ds
sbb
push
fbstp
jmp
jl
lret
das
or
push
gs
into
ficoml
imul
test
lods
mov
aam
adc
lods
scas
adc
out
test
dec
adc
scas
cli
push
pop
jns
test
rorb
lret
jo
in
movsl
hlt
enter
rorb
jp
lret
mov
pop
int3
sbb
sub
adc
dec
fcmove
push
popf
pop
out
mov
cmc
nop
xchg
xchg
and
xor
mov
sub
xchg
imul
dec
and
test
mov
cmpsl
sub
jns
loope
out
xor
pop
dec
flds
pop
pop
enter
xor
repnz
and
lods
add
cli
aas
jmp
mov
mov
data16
jge
std
cmp
aaa
rol
pusha
push
cld
cmp
lret
lret
sbb
in
mov
lret
das
mov
jbe
cmp
addb
mov
mov
add
das
mov
and
adc
dec
jb
fdivs
sub
xchg
sbb
jns
aad
ljmp
xchg
stc
in
pop
insb
mov
jmp
inc
les
jle
imul
in
mov
dec
popf
cmp
out
lods
insl
cmpsl
repnz
mov
sar
adcl
mov
enter
das
xor
repnz
fisubrl
sbb
stc
not
cltd
data16
stos
inc
cmpsb
push
or
daa
stos
insl
or
mov
xchg
push
movb
repnz
sarl
xchg
push
or
lcall
push
scas
mov
sbb
shll
sti
xor
mov
inc
repz
and
xor
pop
hlt
lock
pusha
clc
aas
loope
sub
call
mov
mov
mov
pop
mov
test
sar
lret
mov
out
xchg
push
faddp
data16
lret
jmp
daa
adc
sbb
dec
xchg
push
pop
jns
mov
or
pop
xlat
pop
push
data16
dec
push
pop
jns
inc
adc
dec
aam
imul
mov
cs
notb
sbb
pop
cmp
in
and
sub
mov
xacquire
popf
in
shl
mov
testl
push
mov
test
push
dec
ja
xchg
mov
mov
push
cmp
xchg
sbbb
jns
xchg
movsl
jg
or
out
subb
xchg
xchg
push
jo
stc
push
je
rcl
cmp
xchg
sti
sbb
mov
ja
xor
pop
xchg
push
pop
jns
ret
xor
repnz
mov
in
cld
cmpl
dec
push
repnz
pop
iret
cli
imul
pop
adc
fwait
lret
scas
mov
mov
jp
inc
sub
movl
sbb
stc
repnz
jb
push
inc
ljmp
lret
aas
das
sub
sti
mov
repnz
das
mov
movb
ljmp
fadds
repnz
iret
xchg
dec
std
sbb
aas
mov
outsl
daa
testb
add
xchg
mov
dec
push
imul
mov
mov
jnp
sub
repnz
arpl
dec
mov
xchg
mull
push
fwait
in
in
stos
jg
pop
ret
push
pop
jns
data16
fisttpll
loope
das
add
pop
jns
xchg
shlb
fcompl
clc
lret
arpl
notl
nop
into
sbb
push
or
pop
jle
mov
mov
or
push
aam
jp
ds
mov
adc
xchg
mov
cmp
jns
fisubl
pop
mov
adc
arpl
inc
jns
popf
lock
test
ret
enter
pusha
sbb
pop
inc
insl
das
jae
inc
dec
push
dec
dec
testb
movsb
cmpsb
iret
call
in
cmp
push
pop
jns
pop
dec
add
inc
sbb
stos
sar
notl
out
jnp
outsb
and
hlt
ror
xchg
pop
jle
pop
jecxz
repnz
in
rcll
shl
mov
xor
inc
scas
pop
jle
in
sbb
outsb
mov
movsl
push
dec
aas
fidivrs
jecxz
pop
adc
push
pop
jns
cmp
insl
icebp
stc
test
add
out
jb
in
ds
jl
repnz
and
faddl
and
jmp
ds
jbe
je
add
stc
mov
push
fists
xchg
cld
out
xor
push
in
es
mov
add
fwait
sub
xchg
push
sub
les
subl
sub
lret
fwait
push
add
jp
pop
dec
and
jge
sub
lds
cmp
inc
popf
mov
outsb
and
div
in
mov
imul
xlat
xor
aam
scas
cld
mov
mov
sarb
mov
movsb
inc
mov
mov
sbb
xor
loope
dec
cmp
or
in
addr16
or
js
mov
out
sub
and
das
pop
xor
push
cmp
lock
inc
mov
inc
lds
movb
in
js
mov
push
mov
addr16
cmpsb
push
push
movsl
or
pushl
push
push
popa
dec
add
sti
inc
mov
aam
cmp
or
lahf
pop
jbe
out
add
and
mov
repnz
popf
ret
addr16
push
and
adc
js
fsubrp
enter
pop
les
fsts
aaa
and
xchg
mov
xchg
ret
or
mov
push
bound
lock
stc
in
push
push
imul
in
pop
jle
lods
cmp
mov
sub
add
mov
push
mov
mov
sahf
mov
add
pop
jle
aas
outsl
mov
mov
adc
bound
jle
in
and
inc
xor
mov
stos
inc
jl
in
inc
in
stos
mov
out
aad
cld
repnz
mov
xor
lock
repnz
das
mov
lods
sbb
imul
cld
rol
inc
into
push
test
mov
pop
es
sbb
and
mov
pop
cmpl
push
or
lret
cwtl
or
or
sbb
mov
mov
lret
iret
dec
je
xchg
int3
lahf
mov
jle
in
ds
add
fwait
xchg
mov
std
es
dec
mov
xor
stc
ja
pop
sti
fcom
sbb
movsb
mov
bnd
in
mov
loop
in
dec
jecxz
mov
stc
in
pop
pop
jno
out
sbb
cmpsb
mov
jle
dec
xor
add
inc
jne
repnz
or
stc
fcmovnu
insb
pop
in
pop
pop
movsl
pop
cmp
into
sbb
stos
jbe
mov
mov
cmp
fcmovnb
jg
daa
das
sub
inc
mov
shlb
test
mov
inc
push
cmp
repnz
out
or
loopne
xor
shll
lods
jmp
gs
add
push
lret
imulb
add
leave
mov
jp
sub
cmp
add
and
add
out
iret
dec
push
out
add
in
xchg
das
pop
je
sub
mov
cltd
pusha
int
sbbl
les
ss
in
pop
repnz
inc
sub
pop
in
in
inc
jle
scas
xlat
rol
add
xchg
pop
jle
faddl
lds
jnp
out
cmc
push
xor
hlt
scas
xchg
test
jl
mov
mov
xor
dec
arpl
jecxz
xor
mov
xor
mov
mov
arpl
cmp
lret
xor
mov
enter
hlt
mov
sub
loope
mov
std
lcall
repnz
mov
andb
ss
cmpsl
sub
jg
push
ficomps
jmp
push
aad
xchg
insb
rcll
add
push
push
gs
xchg
jg
pop
leave
inc
lods
jae
push
inc
pop
add
test
fimuls
xchg
push
push
lcall
in
push
mov
bound
inc
mov
mov
push
mov
push
adc
lds
mov
nop
jl
jno
loop
iret
pop
repnz
lret
push
les
jno
sarl
lret
sub
xlat
stc
add
adc
pop
jns
ret
push
popf
jbe
mull
scas
sar
in
jg
push
lock
pusha
scas
out
pop
je
imul
xchg
pop
jle
cwtl
outsb
bound
out
sbb
sub
mov
cmpsl
lahf
getsec
jle
cltd
sbb
jl
clc
enter
cmp
mov
xchg
push
cmp
sub
test
lods
dec
adc
jns
outsb
fs
stc
jne
push
scas
lock
fwait
jp
int3
aam
xchg
jl
fwait
lea
add
fbld
cmpsl
xchg
xchg
aaa
mov
fisubrl
dec
or
in
pop
inc
jp
push
pop
popa
xchg
jg
cmp
test
push
mov
mov
in
sbb
jb
pop
shll
add
in
push
pop
xchg
orb
movsl
in
xchg
stc
in
pop
stos
mov
cmp
and
pop
jle
mov
and
lahf
int
pop
jns
push
cmpsl
adc
fdiv
xorb
std
pop
jns
xchg
cld
jle
push
add
jo
adcb
aaa
out
mov
mov
sub
popf
sbb
out
mov
repnz
pop
js
xchg
fcompl
push
or
lret
jg
insl
dec
inc
push
sbb
sbb
mov
sub
pop
pop
and
nop
mov
je
aas
and
jae
jns
xchg
mov
fwait
jnp
xor
adc
fists
pushf
sub
fs
stos
or
imul
ds
xchg
push
cmp
cwtl
loope
sbb
xor
cld
repnz
das
sbb
or
lret
das
enter
lret
cmp
jg
int
cwtl
inc
scas
mov
mov
test
xchg
pop
jle
or
lahf
mov
out
sbb
lods
in
jns
test
pop
jns
cmp
jne
lret
mov
cmp
aaa
pop
jns
xchg
xchg
popa
jo
and
sbbl
insb
dec
jl
pop
aaa
sbb
lret
mov
xor
stos
lods
std
sub
ljmp
out
push
adc
popa
mov
je
or
in
movsb
dec
jl
ret
dec
mov
jno
cmp
jno
push
inc
dec
sbb
lahf
mov
xchg
inc
lods
push
inc
loop
int
daa
scas
out
xlat
stc
in
pop
cld
clc
outsl
mov
sub
jl
ret
adc
pop
jns
ljmp
rcrl
xor
gs
or
rclb
lret
cmc
nop
cmp
clc
jl
xchg
dec
and
and
dec
or
and
jno
in
adc
mov
stos
xor
sbb
das
mov
or
loopne
fildl
fnstcw
pop
stc
repnz
lock
insb
xchg
pop
loope
mov
outsl
mov
jnp
xchg
jg
mov
add
test
push
adc
imul
sub
aad
push
jns
mov
mov
das
sbb
stc
in
jle
addr16
call
mov
push
pop
jle
xor
daa
push
addb
aam
stc
in
jg
in
or
jno
push
jae
in
pop
jle
fdivr
push
adc
push
daa
pop
jle
ret
pop
pop
jmp
rcl
je
sbb
or
ja
or
inc
sbb
mov
inc
out
mov
ret
addr16
out
into
mov
xchg
xchg
aaa
jno
gs
sarb
cmc
and
inc
jle
and
outsl
push
adc
arpl
ja
test
or
lret
jecxz
mov
pop
cltd
jno
sbb
mov
repnz
fsts
xchg
push
jl
sub
inc
dec
bound
stc
in
or
lock
jno
jge
cmp
push
dec
repnz
xchg
pop
mov
and
pop
in
das
mov
aas
loope
pop
subps
cld
repnz
aas
pushf
jno
dec
jle
push
ds
mov
jb
call
enter
cld
repnz
das
sbb
cli
sbb
shll
lret
das
mov
fs
repz
inc
out
fs
das
mov
insl
sbbl
stc
repnz
movsb
jno
std
outsb
fldcw
push
fdivrp
jecxz
nop
aas
int
movsb
subb
push
scas
test
int
repnz
popa
and
fsubl
push
stos
push
lret
mov
arpl
shr
adc
jl
push
nop
cld
nop
gs
mov
mov
push
insl
test
pop
les
in
xor
enter
xchg
aaa
add
ret
jo
or
pop
repnz
mov
cmp
in
adc
inc
outsl
jge
xchg
cmp
jno
push
mov
mov
scas
pop
scas
pop
mov
inc
lea
in
dec
in
jge
fisubrl
mov
movsl
test
loopne
mov
mov
sbb
cmp
adc
cli
stc
in
inc
and
sbb
shl
mov
in
pop
jle
addr16
pmaxsw
push
std
xchg
pop
jle
mov
xchg
sbb
cmp
pop
in
inc
loop
fsubl
cmp
xor
daa
push
pop
jns
sbb
dec
pop
mov
in
mov
repnz
mov
xchg
sub
into
iret
aas
push
xchg
xchg
jmp
or
lret
mov
push
orl
jl
cmp
scas
mov
insb
jp
pop
adc
nop
push
aad
out
ds
lret
inc
ja
pop
stos
cmp
adc
in
mull
icebp
mov
pop
sub
push
mov
cmc
mov
and
scas
mov
mov
dec
or
repnz
push
push
leave
nop
and
jbe
adc
ret
in
repnz
adc
cmp
cmc
lret
mov
ljmp
shrb
mov
sub
mov
sbb
fisubl
nop
test
and
sbb
inc
sub
push
sub
mov
and
test
push
stc
sub
stc
sarb
into
fnstenv
mov
ds
cltd
jmp
mov
lret
mov
fistl
sub
adc
sub
adc
addb
shll
repnz
pop
je
or
call
mov
mov
mov
mov
out
daa
ret
cmpsl
jmp
jae
scas
test
rolb
sub
push
mov
fsubrs
xchg
pop
and
pop
aaa
cmp
es
pop
jle
xchg
loop
imul
mov
jl
push
stc
in
lock
mov
adcb
push
push
pop
jns
or
mov
rorb
xchg
int
insb
aas
aad
pusha
mov
xchg
push
lods
insb
fwait
push
decb
mov
ficoms
test
add
lret
stc
in
xchg
push
cmp
and
ret
in
jl
jbe
cmp
mov
ret
pop
jle
cmp
push
and
xor
sub
pop
xchg
inc
jle
in
xor
shll
pop
mov
imul
fldt
hlt
jns
jne
loope
inc
scas
mov
scas
push
and
inc
lods
lret
jge
das
in
aad
inc
mov
and
mov
loopne
cltd
mov
sti
pop
bound
rcll
js
add
mov
out
int3
or
es
xor
sub
xor
fldenv
pop
push
ss
jo
test
pop
jle
not
dec
mov
xchg
jmp
imul
lahf
rclb
stc
popf
stos
mov
repnz
das
mov
loopne
lods
flds
mov
or
repz
mov
mov
and
loop
fdivs
push
out
push
cmpsl
push
mov
fisubs
sarl
sbb
inc
repnz
bound
push
inc
cmc
mov
xchg
lret
mov
dec
mov
mov
sub
fdivl
imul
mov
cmc
cmp
dec
testl
pushf
test
mov
push
movsb
adc
adcb
inc
mov
jg
in
and
inc
mov
ss
das
ds
test
test
shlb
test
repnz
pop
jno
lret
adc
repnz
movsl
mov
clc
push
dec
ja
into
int
leave
mov
dec
mov
repnz
das
pop
decl
addr16
xor
arpl
je
addb
je
xchg
insl
pop
and
fwait
jbe
xchg
mov
jecxz
jns
xchg
xor
int
add
mov
sti
jns
xchg
push
ljmp
stos
or
aad
in
push
pop
mov
shrb
pop
sahf
push
pop
jns
daa
pop
and
xchg
mov
adc
pop
dec
ret
xchg
mov
shlb
jns
xchg
aaa
sub
mov
jo
call
sti
mov
push
inc
pop
mov
sbb
inc
in
in
inc
enter
sub
jns
push
and
pop
pusha
cmp
icebp
test
adc
mov
enter
sbb
in
jae
cmpl
pop
jge
cmp
dec
push
push
mov
or
xor
dec
xchg
aaa
pop
xchg
sarl
and
jmp
mov
mov
inc
jns
xchg
push
or
std
cmpsl
push
into
popf
je
fwait
mov
xchg
push
pop
and
in
in
sahf
repz
in
mov
cmp
xchg
mov
add
in
sub
pop
call
data16
and
arpl
les
push
das
lods
scas
mov
aas
mov
cmp
jae
icebp
and
lret
sub
add
xor
in
mov
mov
test
xorl
out
aas
push
cmp
inc
jle
in
rol
out
test
aam
pop
pusha
jns
sbb
pop
mov
mov
mov
call
xor
and
mov
lods
mov
mov
mov
dec
sbb
or
push
xchg
sub
push
pop
scas
in
in
insb
fcompl
stc
xlat
xchg
out
jge
adc
insb
pop
outsb
scas
sbb
clc
enter
loop
out
addr16
stos
lret
sub
sub
pop
aaa
dec
in
inc
adc
jo
push
outsl
or
xchg
pop
gs
pop
mov
inc
sub
and
mov
sbb
sub
xchg
in
cmp
outsb
lds
inc
push
das
faddl
movsl
pop
icebp
xor
addl
pop
bound
fsts
jns
cmp
push
dec
adc
lcall
in
pop
jns
xchg
jno
mov
mov
jecxz
inc
enter
push
sbb
cmc
lret
enter
xor
shl
xchg
sahf
int
inc
das
mov
cmp
popa
mov
pop
xor
mov
mov
mov
sbb
mov
das
xor
sub
arpl
pop
jne
outsl
es
test
push
or
xchg
pop
jle
dec
pop
xchg
push
ljmp
shrb
jle
in
sub
cld
dec
icebp
sbb
sub
lods
je
dec
jle
in
and
inc
cmpsb
jmp
xor
enter
adc
dec
jp
fucompp
and
push
sti
fbld
mov
add
lcall
xor
rcrl
inc
xlat
mov
xchg
push
or
dec
lds
cmp
adc
out
incl
xor
subl
ror
xlat
das
mov
mov
sub
popf
gs
aad
jle
jge
xor
out
test
xor
xchg
pop
lahf
and
repnz
push
pop
pushf
dec
push
lea
dec
ja
repnz
leave
jmp
and
mov
mov
pop
pop
mov
movsb
inc
or
cld
repnz
jp
inc
mov
stos
cmp
pop
sbb
jg
mov
mov
jno
xor
or
iret
lds
mov
icebp
leave
lret
lcall
jge
in
int
ja
xor
sbb
gs
xchg
pop
jle
loop
call
fbld
xchg
pop
jle
jecxz
pop
or
call
stc
in
jne
mov
pop
ja
jmp
mov
in
xchg
pop
and
or
stc
in
pop
mov
imul
jle
inc
in
pop
jle
jo
stos
shlb
push
in
ja
bswap
inc
inc
clc
jp
xchg
push
pop
jns
pushf
sbb
push
mov
mov
in
xchg
jmp
arpl
pop
jl
cwtl
outsl
repnz
mov
mov
pop
sbb
jl
ret
mov
pop
jmp
comiss
pop
cmc
inc
xor
ret
mov
sar
jge
lret
rorb
mov
mov
out
xchg
addr16
in
pop
ret
inc
push
nop
xlat
negb
inc
pushf
out
in
pop
jle
je
mov
add
fwait
add
jle
cld
repz
addb
mov
stc
in
test
int
jecxz
or
das
jle
in
js
inc
fisubl
or
in
pop
mov
lods
xorl
sub
out
movsb
jo
or
lods
test
xchg
cmp
es
cmpsl
push
test
xchg
jg
sbb
xlat
dec
and
mov
jno
xchg
pop
jle
inc
aaa
mov
xchg
pop
repz
xor
mov
jle
inc
int3
cmpsb
shlb
jbe
sbb
lods
jle
in
pusha
dec
fdivrs
jp
fdivl
repnz
pop
divl
das
test
movsb
ds
fidivs
jno
jle
in
add
pop
int3
and
xor
vpmulhw
nop
xchg
xor
fsts
and
mov
mov
sub
sub
sbb
fstpt
repnz
cmp
imul
icebp
rcl
mov
sub
lds
mov
popf
sarl
ret
sbb
jmp
repnz
nop
andb
xor
pop
data16
jo
lods
ljmp
je
pop
mov
jge
jge
loope
jecxz
shl
inc
lcall
repnz
mov
push
mov
sbb
out
sbb
add
mov
loope
pop
mov
or
push
stc
repnz
push
stos
cmp
sbb
adc
adc
call
mov
xor
push
mov
mov
jecxz
push
mov
sub
jl
data16
add
aam
cld
repnz
and
sahf
xor
pop
mov
fstl
repnz
das
mov
or
xchg
sub
repz
mov
das
mov
pop
hlt
mov
push
xchg
divl
adc
sti
mov
cltd
sub
xchg
lret
dec
repnz
mov
lods
insl
mov
add
lret
sbb
inc
loop
bound
stc
in
aas
ret
mov
cmp
cs
mov
inc
and
cmp
jl
enter
add
or
xchg
aaa
test
xchg
add
dec
sbb
scas
push
pop
jns
cmp
sbb
mov
cmpsb
les
in
jge
dec
jp
jmp
xchg
mov
jg
popf
or
bound
pushf
jle
in
xchg
rcr
jno
xor
mov
xchg
pop
pop
jae
lahf
sbb
adc
jle
popa
cmp
clc
pop
outsb
rclb
xor
adc
adc
mov
push
pop
jle
in
imul
jns
jae
stc
arpl
enter
push
fidivrs
mov
outsl
and
jmp
mov
lret
sbb
inc
mov
testl
fwait
sub
mov
and
lret
dec
xor
mov
outsb
xor
jg
sbb
pop
push
mov
gs
xchg
and
push
add
or
shll
in
pop
sub
aam
icebp
push
add
or
mov
sar
in
pop
fwait
dec
mov
leave
cmp
dec
aad
mov
aaa
stc
mov
xor
out
gs
test
nop
xor
test
sbb
loop
mov
cmp
out
pop
int3
outsb
mov
lret
lcall
push
sub
jge
mov
ds
pop
mov
pop
sti
clc
or
jl
in
jmp
add
pop
ss
repnz
jg
sub
bound
dec
and
push
test
adc
lods
lret
insl
leave
aam
jb
inc
add
nop
sub
jmp
adc
fisttps
adc
inc
inc
fcmovnu
scas
xchg
jo
repnz
and
adc
fucomp
mov
inc
cmp
roll
add
out
push
and
lret
lret
das
jle
sub
pushf
adc
jle
sti
loope
dec
das
mov
lret
orl
cld
repnz
cld
fstpl
push
lea
paddb
lret
das
and
inc
push
rcrb
jmp
outsl
imul
cmp
ret
xor
das
mov
jnp
xchg
fstpt
in
lock
fisubrs
idiv
out
mov
adcl
mov
cld
repnz
das
push
in
in
cltd
mov
repnz
das
mov
icebp
jecxz
xchg
mov
das
mov
pop
les
pop
frstor
lods
add
xchg
loopne
outsl
adc
mov
arpl
cli
outsb
test
or
fsubrp
xchg
sub
jae
testb
or
repnz
int
neg
sbb
pop
lret
das
mov
cmpsb
je
into
ss
gs
xchg
sbb
dec
mov
and
cmp
sub
dec
mov
ja
inc
cli
xor
xor
mov
lahf
and
mov
cld
sbb
cmpl
push
into
hlt
aad
push
pop
in
ja
xor
insb
mov
sub
stc
cmp
inc
je
lods
jne
cmp
lret
popf
mov
mov
sub
xor
sbb
cmpsb
push
dec
add
sub
sbb
movsb
lds
push
xchg
stos
mov
mov
imul
cwtl
out
cld
repnz
das
add
jle
out
xor
adc
outsb
lods
enter
add
pop
test
sub
aaa
movsl
add
scas
int
xor
outsb
pop
mov
inc
enter
adc
gs
ds
xchg
pop
loope
outsl
loope
pop
stos
xchg
lahf
ficompl
jle
in
xor
out
lds
stc
notl
and
push
repz
xchg
mov
push
in
xchg
mov
adc
mov
mov
sub
loop
xor
sub
mov
and
hlt
fcmovb
jge
lcall
stc
in
or
cmp
pop
dec
mov
lea
rcrb
mov
rcll
lret
sti
enter
sbb
sahf
cmp
inc
lds
test
cmp
jns
sub
sbb
inc
jp
sub
ret
cmp
int
or
scas
mov
inc
pop
xlat
and
sahf
dec
jns
mov
pop
inc
xor
mov
mov
orl
lret
dec
fstpl
scas
arpl
out
lret
mov
cs
lock
mov
mov
dec
addl
into
or
cmp
cmp
or
out
push
mov
lds
or
mov
ret
ja
jnp
and
inc
push
ja
dec
sbb
hlt
adc
sbb
in
pop
shrb
mov
loop
lds
inc
scas
testb
cmp
ljmp
in
stos
xchg
mov
lret
fistpl
push
enter
ret
pop
out
push
mov
stos
lea
out
leave
das
cs
jge
jne
push
loope
xor
pmullw
xrelease
xchg
push
loopne
das
inc
or
push
imul
pop
pop
pusha
popa
push
repz
fisubl
sahf
xchg
push
pop
jns
push
xchg
int
mov
mov
cmp
notl
inc
fidivl
cmc
stc
in
or
jo
rol
jge
das
jg
or
jg
arpl
test
je
adc
xchg
test
add
popa
fwait
xchg
negl
rclb
mov
xchg
push
fimuls
add
push
or
jmp
aas
into
aad
bnd
out
repnz
decl
rclb
notb
test
sbb
shlb
iret
pop
jns
loope
fcomps
cmp
xor
mov
inc
jns
cmp
mov
mov
xlat
ret
and
jae
push
pop
mov
cmpsb
scas
mov
jb
pop
sahf
sub
notl
jmp
hlt
xchg
aad
es
mov
or
dec
jnp
push
mov
lret
fimuls
in
out
test
cmp
and
add
dec
mov
in
pop
jle
add
add
xchg
and
xor
out
jne
fiadds
and
xchg
scas
lods
lcall
pop
or
js
scas
cli
mov
mov
repz
faddl
pop
in
in
daa
sub
out
add
mov
ds
and
stc
iret
cmpb
dec
mov
stc
in
mov
lret
pushf
imul
cltd
inc
andb
in
jle
sbb
fists
adc
xchg
lock
je
or
mov
sub
lea
insl
inc
scas
mov
mov
jmp
jns
setle
ljmp
movsl
jae
in
in
pop
imul
push
xor
push
lret
add
xchg
pop
jle
push
sbb
mov
pop
jle
and
fcomps
jge
cmp
in
or
jge,pt
adc
xchg
popf
clc
fstp
mov
xor
int3
xchg
pop
jbe
xor
mov
loope
outsb
sbbb
in
xchg
cld
pop
dec
jo
stos
out
dec
mov
subl
dec
pusha
push
xchg
or
xchg
push
pop
inc
inc
movsb
mov
jmp
movsb
ret
xchg
push
pop
jns
jg
ss
popa
jo
inc
stos
dec
and
jns
push
inc
movsl
lods
xor
popf
ljmp
jo
xchg
cmpsl
dec
fistl
das
mov
jmp
stc
ljmp
lock
cmp
stc
mov
jp
movsb
and
fstl
jns
dec
jae
outsb
or
out
loop
imul
int3
aad
pop
inc
add
movsb
add
pop
jns
cmp
aad
xchg
int
mov
mov
call
fdivrs
fucomp
leave
xchg
push
jmp
in
lcall
in
dec
mov
data16
mov
bound
cmp
adc
cmc
mov
popf
and
das
lahf
ss
movsb
pushf
jmp
repnz
das
lea
pop
jnp
inc
jecxz
and
in
pop
sti
lahf
xor
fcoml
push
add
push
cmp
movsb
push
in
jg
push
mov
pop
test
mov
inc
inc
cld
mov
xchg
in
push
pop
push
xor
xchg
aad
xchg
xchg
push
pop
jns
sub
xor
movsb
insb
xchg
in
dec
sar
mov
repnz
add
daa
addr16
xchg
mov
cmpsl
xor
mov
adc
push
mov
ret
scas
mov
pop
mov
mov
xchg
mov
mov
jmp
sub
je
xchg
sbb
jecxz
in
push
psubsw
add
data16
into
cld
repnz
and
cmc
aad
inc
xor
adc
repnz
das
mov
xor
aaa
mov
cld
arpl
aaa
int
dec
lea
add
in
jbe
daa
mov
xchg
and
mov
lds
mov
pop
sub
gs
push
push
push
inc
scas
mov
push
lret
cmp
out
and
in
pop
push
mov
ret
jmp
lret
das
mov
push
shlb
fstpl
cld
bnd
cmp
or
rcl
pop
or
xlat
sbb
jle
test
sub
ja
xchg
sub
loop
and
sbb
xchg
mov
jge
icebp
imul
js
fldl
lahf
fmuls
in
dec
je
subb
mov
out
and
insl
mov
dec
mov
sbb
push
sub
out
lahf
ljmp
cmpl
scas
mov
xor
pop
jns
cmp
ljmp
mov
outsl
test
inc
outsl
mov
lods
dec
jmp
sub
push
call
in
add
sub
mov
sub
add
movl
mov
ja
mov
mov
icebp
mov
add
mov
sbb
jg
push
push
mov
sub
movzbl
add
mov
add
cs
fucomip
je
sub
mov
add
mov
mov
mov
jbe
mov
sub
mov
daa
jmp
add
fsubrp
rcrb
pop
add
add
and
mov
cmp
pop
xchg
jl
add
sub
fstp
fistpl
add
cmpsb
adc
out
sbb
and
pop
add
mov
lcall
les
fisttps
sbb
mov
pop
fwait
enter
xor
xor
push
add
fwait
shlb
add
push
sbb
incl
mov
push
sbb
incl
mov
pushf
sbbb
shl
lock
mov
jo
or
leave
ret
mov
fisubs
into
sub
inc
dec
enter
adc
fstpl
outsb
mov
sub
fiadds
add
insl
jbe
faddl
adc
xor
xor
out
or
adc
cwtl
repnz
pop
mov
adc
jnp
scas
mov
push
pusha
mov
or
lock
clc
pop
pop
pop
rorl
call
xchg
outsl
and
enter
bound
je
or
repnz
repnz
mov
out
adc
xchg
adc
sub
mov
pop
out
xchg
leave
xor
inc
icebp
outsb
add
div
push
lahf
mov
cmp
sub
pop
mov
mov
mov
mov
pop
pop
push
mov
ret
sub
les
lock
popa
xor
cmp
je
lock
mov
into
inc
hlt
add
scas
jp
lock
popa
ret
sahf
push
add
ret
jbe
movsb
pop
lock
and
out
adc
jmp
jb
mov
setnp
or
jo
sub
mov
lock
xchg
ret
ret
add
pop
test
mov
push
add
loopne
in
enter
jge
jmp
fisttpl
adc
pop
rcrb
in
push
mov
jmp
sbb
adc
mov
jno
jecxz
or
ret
pop
mov
mov
sbb
push
or
mov
stc
and
push
add
rcrl
shrl
or
or
imul
test
les
sbb
or
rcrb
dec
mov
jge
lock
cli
mov
mov
add
es
rcll
add
ds
cmp
mov
sub
pop
dec
cmpsb
out
mov
inc
hlt
jo
mov
push
pop
jge
insb
add
mov
gs
je
shrb
push
je
sub
call
sbb
lods
pop
jle
js
xor
dec
or
push
push
cli
rorl
mov
enter
sbb
je
rorb
ljmp
pop
and
add
shrb
aas
repnz
xchg
cs
mov
daa
out
call
jae
or
jle
sub
push
out
mov
xor
add
stc
add
ret
test
popw
sbb
or
xchg
xchg
pop
inc
shll
fcompl
clc
mov
loopne
mov
push
mov
testb
inc
sbb
add
jmp
imul
lret
push
in
xor
and
std
outsl
add
std
jne
mov
pop
je
mov
sbb
sub
mov
pop
pop
les
cmp
mov
cld
push
dec
ljmp
ret
mov
dec
adc
or
lock
xchg
sbb
push
pop
ret
or
inc
push
lock
sub
push
xchg
sub
add
sub
dec
scas
adc
dec
movsb
push
fs
push
dec
cmpsl
rorl
punpckhbw
mov
pop
js
fstl
push
into
sbb
data16
mov
fsubrs
insl
ss
pop
add
xchg
push
pop
push
pop
push
scas
xchg
mov
jecxz
or
jp
mov
pusha
rorl
xor
mov
jno
out
push
inc
cmpsl
fcompl
fucomip
into
push
sahf
andw
add
push
adc
sbb
mov
cmp
push
icebp
jno
add
rep
sahf
or
enter
imul
mov
loopne
xchg
call
cmpsb
imulb
push
lret
cmp
call
js
loopne
adc
xor
inc
popf
loopne
icebp
dec
push
inc
adc
fstpt
jbe
mov
fs
and
push
push
mov
adc
sarb
add
and
pusha
shl
jb
add
movsb
pop
xchg
pop
xorb
stos
mov
add
repnz
mov
shlb
ljmp
shrb
xchg
adc
inc
push
pusha
sbb
mov
sbb
outsl
or
je
pushw
inc
loopne
pushf
and
dec
addr16
jo
das
or
xor
das
loope
mov
pop
out
push
or
shlb
pusha
cld
jne
cmp
shrb
xorb
jo
or
subb
mov
ss
test
jmp
push
or
push
fstl
add
add
cmpsb
testb
cmp
adc
scas
cmpl
xor
cmp
je
data16
adc
jbe
cmp
sbb
jmp
and
adc
or
insb
xor
test
or
pusha
push
sub
out
sbb
mov
jg
mov
mov
add
or
in
out
cmp
out
aad
mov
add
or
int
dec
lds
sub
mov
shlb
mov
adc
es
test
fmull
ficoms
ret
pop
sub
pop
sub
push
imulb
mov
loopne
cmp
add
loop
xor
popf
test
inc
pop
pushf
rolb
push
push
mov
mov
xchg
test
rcrl
mov
inc
cmp
lods
fistpl
add
test
push
push
out
fiaddl
sub
dec
hlt
imul
outsb
lock
jmp
push
test
jmp
popf
js
loopne
or
sarb
cmp
mov
push
or
sub
cld
add
lock
xchg
adc
and
rorl
call
sbb
je
mov
pop
cmp
push
stos
and
push
lahf
cmpsb
inc
sbb
sbb
add
inc
inc
push
icebp
mov
test
fwait
push
inc
add
sub
mov
push
test
pop
mov
sub
xchg
sbb
pop
int3
and
jo
mov
ret
cmp
in
inc
ret
or
test
jl
shll
push
push
sbbb
out
adc
out
push
fsubr
aas
pop
cs
lds
push
mov
rorb
out
or
adc
outsb
faddl
pop
mov
pop
sbb
shlb
sarb
mov
dec
faddp
or
vmread
add
mov
xchg
inc
sub
push
cmp
xor
sbb
and
imul
aam
sub
test
xchg
jb
adc
mov
add
sbb
sbb
xchg
push
inc
mov
pop
bound
push
xlat
push
jmp
jno
add
adc
call
notl
nop
imulb
push
test
lds
into
std
mov
fstpt
mov
push
aad
pop
orl
rclb
jge
sbb
xor
addb
icebp
jbe
ret
add
rcr
mov
mov
push
ret
cmp
xor
shll
leave
into
fimuls
ds
out
cmp
inc
sbb
movsl
sbb
pop
add
sbb
jg
addr16
loope
je
movsb
add
shl
fwait
sbb
cmp
je
outsl
push
push
jg
std
push
outsl
add
or
fistpll
stos
les
pushw
or
or
inc
push
adc
inc
push
cmp
neg
test
cmp
insb
test
mov
das
or
jns
and
std
call
decb
mov
jno
inc
cmpsb
lds
cwtl
mov
or
jne
xchg
or
xor
push
xor
pop
mov
push
push
loope
fsubl
out
ficoms
inc
push
rol
push
push
rcrb
push
push
imul
mov
and
mov
sbb
inc
xchg
clc
ret
push
icebp
and
icebp
imul
loope
add
imul
shl
push
mov
pop
out
test
push
fstp
sub
xor
out
mov
pop
cs
mov
outsb
xor
push
mov
in
shl
jo
mov
mov
sbb
mov
lahf
imul
push
adc
fmulp
push
ret
dec
call
ret
dec
pop
inc
shr
daa
dec
or
add
js
je
decb
add
inc
mov
popf
sbb
cmp
jo
rol
mov
mov
xor
pop
xchg
mov
cld
ffree
fdivl
xchg
xor
adc
sti
pop
pop
mov
push
or
jno
add
push
sub
fs
leave
pusha
inc
aam
mov
jb
in
xchg
sbb
mov
sub
add
dec
and
push
movb
jo
push
jg
sbb
push
mov
add
stos
inc
pop
js
mov
mov
add
test
leave
rcl
push
cs
push
js
mov
loopne
sti
movsl
and
movsb
sbb
shrb
rcll
mov
mov
test
sub
push
sti
push
setae
push
out
xor
jge
mov
js
repnz
rcrb
int
in
inc
pop
or
std
lods
push
clc
sbb
pusha
sbb
popa
fwait
pop
push
pop
pop
std
and
mov
and
lcall
xor
push
sti
jo
es
fcom
pop
fwait
push
push
sbb
sbb
pushf
add
stos
jmp
ror
sbb
stos
mov
pop
inc
dec
fdivl
mov
lcall
push
jle
xchg
adc
inc
ret
call
push
or
enter
loope
add
sbbb
xchg
add
mov
xor
mov
push
mov
lret
xor
mov
inc
js
and
dec
pop
loop
lods
mov
push
mov
or
jmp
roll
pop
jnp
sub
cmp
cmp
jmp
cli
js
pop
sub
out
mov
roll
inc
jl
add
sbb
jge
pop
dec
or
cmp
shlw
cmp
jnp
adc
cmp
ret
push
xchg
sub
gs
lock
xor
hlt
js
sub
and
repnz
lds
sbb
sub
or
sbb
dec
ret
dec
lcall
addl
xchg
ds
or
adc
push
les
leave
dec
dec
sbb
cmp
sub
cwtl
add
shr
insl
inc
xor
mov
jecxz
int3
pop
mov
or
test
adc
mov
push
push
mov
xchg
shrb
cmp
jo
mov
int3
shlb
push
ja
mov
add
or
rcrb
and
cmp
sbb
int3
xchg
pop
popf
insb
fsubs
and
jl
adc
sar
rcl
xchg
or
adc
pusha
out
mov
mov
adc
outsb
je
out
pop
adc
lret
jo
mov
push
add
leave
callw
inc
mov
adc
dec
sub
je
jl
pop
shrb
imul
inc
xchg
sahf
mov
fcompl
push
push
dec
pop
loopne
adc
adc
test
mov
scas
lcall
leave
or
adc
mov
fcomps
xor
shll
pop
nopl
rolb
or
addb
adc
lods
arpl
mov
xchg
jge
sbb
adc
clc
jo
push
pushf
outsl
mov
lods
inc
cmp
nop
ljmp
rcrb
jb
movhps
xacquire
loopne
scas
and
cmp
lea
pop
mov
pop
ljmp
pop
mov
pusha
xchg
dec
or
jp
mov
adc
push
push
cmp
clc
cli
xor
xor
les
adc
scas
inc
ljmp
mov
sbb
jo
xchg
add
notb
fbstp
lods
and
lcall
add
cmp
ror
rcrl
prefetch
push
jmp
dec
push
push
test
or
sar
aam
loopne
and
xchg
cwtl
cmp
sti
mov
shrl
sahf
rclb
stos
popa
rcl
sbb
sbb
mov
add
nop
adc
cli
call
mov
clc
dec
data16
xchg
cmp
fs
loop
sbb
cmp
into
jge
push
xchg
xlat
lea
or
pop
mov
popf
push
repnz
sub
pop
mov
and
sbb
adc
pushf
inc
xorb
test
je
cmp
mov
fwait
mov
inc
mov
mov
mov
shlb
xor
add
or
fdivrp
cltd
adc
push
jo
mov
lock
adc
adc
mov
add
enter
pop
test
bound
cmpsb
shl
adc
lcall
sysret
jo
enter
insl
adc
xor
add
or
xor
push
cs
mov
push
mov
push
sub
xor
in
js
mov
mov
lcall
inc
adc
sub
inc
xor
add
push
jne
movsl
rolb
mov
adc
addb
or
pop
add
fs
ret
in
push
cmova
in
loop
mov
mov
xchg
sbb
test
xchg
adc
sbb
ljmp
enter
cmpsb
shlb
subl
adc
and
xor
push
sbb
sub
lods
subb
sub
sti
rclb
adc
push
mov
xchg
movsb
daa
sub
dec
dec
mov
push
add
pop
les
push
leave
sahf
push
push
movsl
pop
push
xchg
addl
and
push
add
sbbl
or
add
sbb
enter
mov
cmpsb
rolb
inc
sbb
push
arpl
xchg
adc
push
shlb
add
rorb
or
cld
add
les
push
or
sbb
fnsave
mov
pusha
lcall
pop
test
andl
push
xchg
mov
xor
lret
inc
inc
mov
stc
sbb
mov
sbb
loope
push
push
js
popl
mov
jp
mov
xchg
ds
test
rorb
xchg
ss
stos
addl
stos
jo
mov
lds
mov
dec
rcrb
mov
adc
mov
sarb
mov
jae
add
lock
xor
pop
mov
pop
mov
outsb
push
scas
jmp
lods
aam
in
scas
rorb
pushf
adc
aaa
xchg
sub
jl
mov
sbb
fsubrs
xchg
pop
lahf
xchg
and
push
pop
loopne
lcall
pop
push
jle
cld
cs
mov
add
push
andl
lahf
punpckldq
subl
xchg
ljmp
inc
cli
push
mov
push
cltd
les
dec
loop
das
imul
movsb
sub
pop
arpl
mov
add
or
jmp
sbb
push
and
pop
pushf
into
in
leave
ss
mov
mov
adc
enter
cwtl
rclb
clc
mov
in
out
xor
fstl
sbb
pusha
ffreep
dec
les
orb
cmpsb
or
aas
rclb
repnz
lahf
pop
xor
xor
mov
add
sbb
mov
jl
inc
xchg
arpl
push
lods
sbb
mov
clc
shrl
mov
out
sbb
push
rorb
ret
addb
sub
shr
push
pop
push
add
or
mov
or
bound
push
ss
lods
ret
les
xor
sub
das
cmp
lods
inc
sti
js
popf
ret
aam
andb
stos
pop
inc
lods
repnz
test
call
pop
data16
and
dec
call
adc
push
loopne
mov
push
cli
jno
gs
jp
scas
icebp
ret
lea
pop
or
push
add
nop
mov
les
push
clc
or
jo
aas
hlt
cmp
mov
loopne
pop
repnz
sbb
sub
push
mov
loopne
mov
jns
or
sbb
mov
push
xor
stos
or
int3
mov
inc
lret
adc
shlb
inc
mov
popl
nop
push
scas
mov
adcl
add
push
or
orb
inc
dec
push
mov
adc
mov
sub
cmp
stos
and
lock
sub
cmc
inc
sbb
push
mov
loop
orl
enter
fdivl
mov
push
add
js
mov
adc
adcb
test
xchg
mov
sbb
adc
xchg
sbb
and
loopne
or
cmp
mov
negb
out
lahf
add
pop
xchg
xor
je
pop
lods
idivb
arpl
mov
jb
fsts
xor
shrl
icebp
sub
shlb
lods
mov
mov
push
mov
fdivrp
xchg
into
aaa
jl
shll
pusha
andb
test
mov
orl
adc
hlt
inc
lret
and
dec
setae
push
filds
sub
adc
xlat
mov
jmp
sbb
mov
pop
add
push
cli
stos
mov
into
push
in
jae
and
popf
sub
sub
popf
push
into
sub
and
jl
call
xchg
fdiv
push
jnp
out
or
lcall
or
notb
pop
pop
inc
jmp
mov
jns
nop/reserved
jg
repnz
adc
pop
imul
adc
movsb
inc
cmpsl
inc
jmp
sbb
mov
sub
add
pop
sub
or
rcrb
mov
sbb
or
arpl
cmpps
nop
mov
aaa
shll
push
xchg
dec
pop
mov
sete
icebp
cmp
outsl
leave
xchg
idivb
aam
add
inc
mov
sahf
jmp
jg
lret
adc
gs
push
mov
loop
and
fwait
mov
adc
ret
sti
daa
sbb
mov
jecxz
push
ret
fdivl
mov
xorb
ret
push
pusha
test
jb
push
pop
push
pop
pop
jmp
notb
push
ds
push
pop
push
cmp
pop
jge
ret
cli
add
add
pop
gs
cmpxchg
movsb
lock
cmp
sub
mov
or
movsl
add
fmull
je
adc
icebp
loope
push
scas
lea
dec
roll
data16
and
adc
loop
fidivrs
loopne
cli
or
cmp
or
cwtl
jo
aad
sahf
loopne
cmp
jbe
je
adcb
lods
ljmp
cmpsb
rclb
lret
and
mov
and
dec
push
mov
fnsave
mov
mov
mov
inc
adc
out
sub
push
add
arpl
sahf
cwtl
push
pusha
bound
and
add
addb
xor
outsb
movsb
rcrl
das
repnz
mov
push
pop
sbb
cmp
push
sub
rcll
mov
aad
ljmp
aam
xor
pop
stos
clc
adc
sarb
clc
push
into
arpl
push
stos
mov
js
shlb
test
ljmp
jp
pusha
icebp
add
je
xchg
sbb
push
scas
xor
push
mov
jecxz
pop
in
test
loope
xor
ret
add
push
adc
mov
rorb
lret
add
pop
sub
push
je
fs
pop
jl
dec
clc
or
mov
dec
sub
pop
adc
clc
push
or
mov
dec
push
sub
jno
adc
dec
sub
xchg
push
xchg
pop
mov
stos
sahf
cmp
icebp
dec
mov
loope
mov
sahf
jbe
jmp
cld
dec
rol
pop
scas
and
subb
pop
jle
in
xchg
push
roll
nop
pusha
orl
call
or
sti
in
pop
loop
push
int
sub
jne
ds
fbld
mov
clc
cmpsl
out
push
adc
lcall
stc
in
pop
xor
nop
aad
lret
sub
sar
repnz
das
aad
mov
push
shld
inc
sub
mov
xchg
xchg
aad
das
mov
in
mov
cmp
stc
repnz
jne
jge
sub
add
nop
cld
jnp
xchg
push
inc
sbbl
jl
addr16
fstl
repnz
das
mov
js
sbb
jg
stc
adc
jp
cmp
dec
pop
push
icebp
adc
xchg
inc
jle
in
sub
pop
les
add
outsl
cld
repnz
mov
enterw
mov
repnz
das
mov
gs
test
add
mov
jp
out
test
int
xchg
das
mov
mov
or
in
jle
test
or
adc
jge
stc
in
pop
cmp
insl
test
ljmp
popf
ret
adc
stc
mov
sbb
lcall
mov
imul
jl
in
leave
xorl
sbb
rorl
repnz
mov
sbb
repz
das
jl
xchg
das
mov
sbb
xlat
jle
add
xchg
pop
jle
das
push
push
xorl
pop
ds
mov
in
xchg
xorb
stc
sti
enter
inc
push
mov
or
pop
pop
xchg
sub
pop
in
cmp
fucomi
divb
repnz
das
mov
xchg
daa
dec
shlb
mov
mov
lahf
aas
lret
push
xor
mov
mov
adc
mov
popf
cld
repnz
mov
pop
mov
mov
pop
in
jg
pop
add
lret
pushl
arpl
jle
fs
xchg
popf
pop
in
pop
mov
shll
mov
jne
add
inc
or
ret
lret
das
push
adc
sub
xchg
pop
pop
xor
push
mov
outsb
inc
das
ds
addr16
test
xor
adc
sub
cld
repnz
or
repz
cmp
les
das
dec
push
dec
iret
es
and
das
ds
out
mov
dec
cli
data16
dec
pop
jge
stos
sbb
add
inc
sub
xchg
xor
sub
inc
ds
mov
mov
test
fidivl
jle
test
aad
push
mov
push
mov
cmp
ss
jno
mov
xchg
movsl
test
cld
repnz
das
arpl
or
cmp
repnz
das
mov
add
repnz
filds
cld
cmpsl
mov
push
stos
xorb
aad
jle
in
add
addr16
pop
iret
sbb
imul
dec
enter
leave
xchg
jp
xorb
cmp
pop
mov
push
shlb
add
aam
aad
xchg
adc
xchg
in
pop
jle
cmp
pop
pop
jg
ds
jge
cmpsl
xchg
pop
jle
inc
in
cld
xor
lret
add
push
dec
adc
or
stos
inc
stos
jmp
jle
in
pop
cmp
mov
cmpsb
lods
loope
mov
in
pop
mov
test
rorb
sub
jns
sub
fs
pop
jle
divl
xlat
mov
mov
ja
test
mov
pusha
jle
in
sub
in
jns
out
mov
pop
repnz
or
fstl
enter
jle
xchg
mov
movsl
js
stos
jle
ds
test
and
js
in
jl
cld
repnz
fimuls
push
popa
add
mov
cmp
push
adc
aad
and
sti
mov
lods
adc
or
mov
pop
jle
out
cmp
pop
xor
jae
repnz
and
jl
push
and
lret
mov
jno
push
jp
xor
sub
mov
mov
sbb
pop
sub
cld
jnp
lret
fstpt
pop
adc
pslld
das
mov
inc
cmp
je
das
mov
lahf
mov
pusha
jo
cmp
lahf
sbb
jns
in
int
and
mov
in
call
or
add
orb
adc
cmp
mov
movsl
jge
repnz
pop
push
clc
lahf
dec
mov
jbe
lret
das
ds
mov
fsubrs
cld
repnz
gs
xor
div
inc
into
mov
lret
sub
into
dec
sbb
bound
push
cld
repnz
das
xchg
dec
push
int
movsl
cmp
sub
fbld
mov
popa
flds
ss
bnd
mov
inc
enter
mov
lret
inc
or
adc
cmp
push
mov
repnz
das
mov
xchg
out
xor
mov
pusha
out
adc
popf
sbb
cmp
mov
loop
mov
rclb
xchg
stc
in
lcall
iret
dec
lods
popa
push
stc
in
xor
jbe
daa
popf
jl
fstpl
repnz
das
decl
jl
in
leave
cmp
pop
cmp
sbb
mov
pop
jle
in
push
outsb
sti
mov
pop
call
fwait
sub
in
pop
push
mov
popa
xchg
cli
orl
popf
outsb
lcall
mov
jle
push
and
mov
xchg
pop
jle
pop
addr16
push
xchg
inc
inc
xchg
sahf
push
xor
mov
and
pop
sbb
mov
das
fisubrl
pop
fimuls
fsubs
das
ds
jmp
push
jb
cmp
cld
repnz
push
fucomip
and
cmp
mov
scas
pop
pop
popf
std
clc
sub
aaa
pop
inc
mov
cs
or
or
adc
das
mov
fimull
test
lret
das
mov
imul
inc
shrb
mov
mov
ret
ret
mov
xchg
call
dec
arpl
sub
lret
das
pushw
aaa
mov
push
leave
mov
test
jns
aas
sbb
adc
jmp
or
jno
jge
out
mov
cmp
mov
xchg
cmp
stc
in
pop
div
lock
xchg
rcll
xchg
pop
jle
sti
cmp
xchg
sub
inc
inc
cmpsl
jl
or
push
insl
outsb
mov
xchg
inc
jle
sbb
mul
dec
popa
sub
mov
ret
mov
insl
std
and
jle
in
rol
and
dec
jno
and
in
loope
imul
stos
stc
in
pop
rcrb
adc
add
in
pop
jle
and
jnp
imul
aam
jns
cld
jnp
popa
aam
les
enter
jmp
enter
xorl
jmp
out
xchg
pop
jle
mov
cmp
into
call
inc
das
mov
fcomps
cmpsb
pop
or
dec
inc
sub
cld
repnz
fbstp
loopne
or
cld
repnz
das
fnstenv
xchg
lret
sub
imul
mov
lret
das
mov
mov
cwtl
adc
xor
stc
leave
xchg
sub
pop
jmp
cltd
or
mov
cwtl
sbb
inc
pop
sbb
std
or
xchg
sarl
enter
or
mov
into
xchg
stc
in
pop
push
inc
mov
inc
and
xchg
pop
jle
rcrb
into
fimuls
xchg
in
repnz
scas
nop
mov
jl
sbb
pop
jmp
push
out
inc
fptan
lret
mov
mov
dec
xchg
cmp
andl
ret
sahf
mov
xlat
sbb
push
rclb
inc
ret
stc
in
inc
leave
insl
out
push
inc
mov
lds
sbb
xchg
pop
jle
out
test
cmp
into
mov
pop
jle
arpl
movsl
notl
addb
test
int
jle
in
mov
push
ss
and
xchg
jle
in
xchg
sar
pop
scas
ret
sub
pop
xchg
out
mov
jle
add
jle
lret
sbb
sbb
push
stc
sbb
popl
lods
jne
inc
mov
cmp
mov
mov
test
lods
insl
dec
jo
pop
sbb
les
fxch
mov
jp
xchg
cltd
inc
lds
and
mov
pushf
xchg
in
xlat
xchg
loope
or
mov
rcrb
jne
jns
push
mov
das
push
fst
lods
cli
es
push
repnz
lret
das
mov
scas
mov
mov
inc
mov
cmpsb
cld
push
loope
jg
aaa
pop
loopne
mov
dec
jmp
mov
hlt
mov
mov
incb
sub
movsb
movsb
aas
xchg
mov
mov
jbe
rol
or
insl
repnz
das
mov
jp
aad
push
adc
das
mov
mulb
cs
fbld
mov
lret
sbb
mov
cmc
lret
das
incl
outsl
ficoml
ja
pop
dec
das
mov
mov
dec
enter
pop
cmp
mov
repz
bound
inc
shlb
mov
jnp
cli
pop
mov
pop
imul
jnp
jae
pop
clts
push
out
jo
jle
in
loope
xor
ret
test
lret
out
and
xchg
fdivrs
mov
mov
sbb
pop
pop
into
and
xchg
fdivrp
in
jae
mov
push
adc
imul
pop
jle
roll
jp
push
add
jle
mov
add
aas
insb
push
in
test
push
pop
aad
cmc
jge
ja
rcrl
fdivl
cld
repnz
das
fucomi
aad
pop
mov
mov
popa
test
mov
aam
add
les
mov
cmp
pop
jb
shlb
pop
lcall
cmc
int3
dec
insl
ja
stos
test
adc
xchg
imulb
xchg
and
mov
inc
lock
das
lcall
xor
mov
xchg
push
outsl
pop
das
mov
adc
call
ja
xchg
inc
mov
into
push
in
leave
ret
jmp
and
in
fnstcw
cmp
cs
cmp
dec
repnz
das
mov
or
inc
popf
lret
das
mov
sub
clc
add
mov
dec
stc
addr16
ds
dec
jecxz
mov
inc
nop
clc
mov
push
mov
cld
repnz
das
push
xor
aam
fdivl
jg
or
out
dec
lret
mov
dec
ss
data16
std
xchg
out
xchg
sub
pop
jnp
sbb
pop
sti
das
mov
test
rorl
pop
cmpb
repnz
pop
inc
enter
mov
enter
ret
repnz
das
cmpsl
rcrl
scas
pop
sarl
div
cld
xor
lret
das
mov
cmp
fmul
das
mov
jge
stos
jb
fwait
push
jnp
mov
mov
mov
push
rcrb
repnz
lock
data16
dec
shll
cmp
repnz
das
push
in
pop
and
je
mov
mov
loope
jns
jb
pop
cs
jns
cmp
and
cltd
sub
sub
or
in
push
cmp
movsl
setnp
repnz
push
pop
stos
lcall
enter
jg
pop
jns
sbb
and
fcom
adc
in
pusha
and
jp
mov
stc
in
pop
xor
adc
in
pop
jle
mov
push
xor
repnz
ds
xchg
test
push
lcall
data16
cld
xlat
in
cmp
pop
stc
in
cmp
inc
sar
das
enter
push
lret
mov
ret
ljmp
or
inc
mov
sbb
std
xor
pop
call
call
and
sub
add
push
iret
fwait
nop
jnp
bound
push
scas
mov
insl
inc
popf
dec
imul
mov
or
repz
inc
pop
popf
pop
fidivrs
iret
inc
leave
cltd
adc
test
shrb
sbb
mov
xchg
pop
jle
fistl
xchg
push
adc
mov
stc
pop
jge
jle
in
pop
mov
sti
xchg
pop
xor
mov
out
stc
in
stc
repnz
lret
mov
mov
and
xchg
pop
lahf
cmp
or
inc
lods
mov
mov
xlat
add
das
push
enter
out
adc
push
and
sbb
dec
jae
push
movsb
adc
mov
cld
repnz
das
enter
or
fists
mov
pop
clc
repnz
das
mov
hlt
adc
cli
addr16
stos
lret
das
mov
in
add
xor
add
cld
repnz
add
ret
sub
mov
out
mov
sti
push
add
es
test
cmpsl
repnz
das
mov
clc
xchg
lds
pop
pop
imul
mov
clc
xchg
ficompl
sub
mov
adc
jecxz
lar
lahf
pop
stc
repnz
repz
sub
jmp
sub
fdivr
in
jg
sub
call
stos
inc
lods
jnp
xchg
pop
jle
xor
mov
mov
inc
sahf
cmp
std
mov
scas
fists
xor
pop
inc
fcoms
xchg
push
pop
jns
imul
rcr
das
push
enter
cwtl
mul
mov
inc
fidivs
mov
xchg
mov
sti
rcr
ss
cmpsb
negb
add
cmp
dec
adc
lret
das
mov
insl
mov
inc
loop
outsb
das
mov
imul
js
push
xor
lods
icebp
xchg
cmp
ret
sbb
in
hlt
int3
mov
jno
and
add
insl
cmp
repnz
popf
call
sub
loope
jle
scas
inc
fiaddl
pushl
rcpps
and
add
popa
pop
lret
das
mov
xchg
test
sub
jns
cmp
mov
bound
jnp
in
push
pop
lods
shll
mov
iret
out
cwtl
lahf
pop
pop
jns
xchg
sub
and
aam
add
stc
in
pop
aam
jnp
jb,pn
sub
sub
jle
in
notl
je
sahf
jo
mov
push
xchg
pop
sub
inc
fwait
xor
pop
xor
lret
das
mov
lret
push
aad
and
repnz
outsb
iret
shrb
cli
jnp
scas
mov
scas
lret
mov
mulb
sbb
repnz
das
nop
fimuls
es
loope
enter
insb
inc
and
xor
mov
inc
xchg
and
xor
sub
pushl
cld
xor
cmc
sub
in
sub
sahf
pushf
lods
mov
dec
test
and
jbe
cmp
adc
enter
push
stc
mov
xchg
pop
mov
push
mov
in
jp
sbb
xchg
pop
jle
jmp
lcall
mov
mov
sti
fiadds
jp
xor
stc
in
inc
popf
inc
push
add
add
inc
in
pop
jle
add
xor
lret
ret
in
sbb
fmul
mov
leave
pop
xchg
call
jle
in
mov
in
inc
mov
cwtl
pop
xor
jl
in
lahf
jno
movsb
setp
mull
repnz
mov
inc
pop
icebp
sahf
imul
add
mov
pop
cmp
sahf
sbb
test
sub
jle
in
repz
call
adc
movsl
adc
xchg
aaa
popf
sub
pop
and
sub
stc
dec
repnz
and
cli
jae
fwait
out
mov
push
mov
lret
das
mov
cmp
xchg
pop
mov
adc
repnz
push
sbb
clts
pop
pop
push
xor
out
jle
notl
fs
imul
stc
in
pop
jg
cmp
sub
xchg
out
mov
jle
push
sbb
mov
mov
sbb
inc
adc
inc
shr
stos
popl
or
jmp
aad
add
xchg
jg
sbb
rorl
rolb
mov
repz
jne
mov
pushf
mov
jl
in
shlb
daa
xor
in
and
xor
pop
jnp
jns
xchg
push
xorb
dec
lods
jg
outsl
insb
xor
xchg
xchg
push
pop
cwtl
bound
adc
pop
jle
divl
mov
xchg
fmull
loopne
sarl
xchg
pop
clc
inc
imul
in
pop
icebp
nop
dec
aam
mov
leave
outsb
lret
mov
mov
xchg
pop
out
int
mov
repnz
xchg
int
inc
shlb
lods
repnz
aas
lds
or
nop
cmp
fbld
mov
out
inc
mov
ret
push
adc
stc
in
pusha
cmpsl
aam
sub
popf
jns
jae
stc
in
add
int3
xchg
inc
push
pop
mov
xor
inc
outsb
addl
jbe
mov
mov
es
lods
int3
das
or
das
mov
loope
xchg
idivb
rorb
cld
in
dec
imul
inc
mov
jns
cmp
jg
mov
and
sbb
push
movsl
loope
in
push
pop
repz
jp
fcoml
js
into
dec
das
mov
push
pop
jns
shll
fldt
scas
jle
ja
insb
insl
dec
mov
and
ss
xchg
jmp
xchg
pop
aad
fwait
cltd
sbb
notl
xlat
mov
sbb
stc
imul
sti
push
pop
dec
jmp
jp
xor
lret
jle
in
popl
outsb
bound
outsb
in
ss
in
pop
call
push
push
arpl
inc
in
pop
jle
push
addb
std
mov
pop
jle
mov
cmp
push
inc
jle
in
outsl
mov
std
jno
adc
in
test
mov
and
push
pop
out
xorl
out
mov
or
jns
mov
divl
dec
dec
loop
jle
inc
push
fisubrs
clc
icebp
mov
mov
and
push
psubsw
xchg
xor
cld
repnz
das
out
sbb
not
popa
fbld
mov
sbb
ret
stos
xchg
xchg
pop
jle
pushf
adc
and
adc
jle
in
dec
icebp
jg
pusha
in
inc
xchg
lcall
cmpsl
adc
pop
inc
idivb
fiaddl
lcall
jb
insl
jge
sub
outsb
lds
repnz
push
xor
cmpsl
fidivrl
repnz
sbb
leave
popa
fldl
sahf
cmpsb
sub
fstps
push
jl
push
insb
scas
mov
sarb
add
repnz
pop
loope
and
mov
scas
xor
sbb
lods
mov
jge
mov
call
xor
aaa
ss
xor
stos
mov
dec
adc
mov
jns
xchg
mov
xchg
xchg
mov
imul
pop
or
repnz
enter
cld
repnz
imulb
loope
bswap
leave
jl
in
sub
adc
int3
int
push
insb
repz
add
out
test
ss
repz
int
pop
test
pop
dec
scas
mov
scas
ret
std
mov
cmpb
pop
xchg
inc
lods
mov
mov
xchg
add
or
stos
mov
lods
ljmp
or
pop
jle
test
xchg
fimull
xchg
pop
jle
xchg
and
cmp
test
mov
cltd
and
jecxz
ret
and
sub
les
das
scas
in
jae
scas
mov
imul
aas
imul
and
movsl
add
cld
loopne
outsb
or
mov
or
adc
and
inc
sbb
sti
enter
in
aaa
mov
imul
mov
xchg
je
add
stc
xacquire
int3
es
lahf
adc
out
jns
repnz
subl
inc
ljmp
jg
fsubrl
xchg
ds
pop
jle
inc
mov
sbb
mov
jle
out
daa
test
pushf
movsb
push
mov
inc
pop
in
lods
inc
js
xchg
pop
sar
xchg
jg
shrl
mov
rorl
jle
loope
sbb
or
inc
mov
mov
xchg
pop
jle
xchg
hlt
popf
jg
stc
or
pop
stc
repnz
xchg
stc
mov
gs
fdivrp
in
jg
jecxz
ret
sbb
mov
jp
xchg
pop
jle
iret
shl
sbb
or
stc
lcall
jno
adc
or
mov
or
popf
imul
rep
movb
jb
or
clc
enter
mov
mov
mov
mov
sub
fwait
add
sub
lret
fbstp
inc
arpl
adc
mov
test
stc
fmul
loop
jl
mov
xchg
movsb
pop
jns
popf
popa
xor
pop
pop
notb
mov
jns
xchg
push
lahf
xchg
jp
sub
out
dec
and
pop
jns
sbb
pop
btc
cmpsl
or
cmp
enter
cmc
lods
stos
jge
and
add
sub
jp
in
or
inc
repnz
xchg
ss
push
or
jecxz
add
sub
insb
icebp
cmc
jg
call
scas
cld
mov
jmp
addr16
stc
repnz
cmp
inc
sbb
in
outsl
xchg
or
cltd
cltd
loopne
outsb
in
mov
lret
pop
data16
or
das
aam
xor
das
ds
inc
repz
pop
jbe
mov
dec
dec
fstps
ja
xor
cld
repnz
jl
xlat
xchg
push
pop
push
jne
cli
inc
mov
lret
das
repnz
sbb
rclb
mov
popaw
sub
push
xor
push
dec
xchg
pop
repnz
das
lcall
adc
xor
mov
jge
and
push
mov
movl
int3
inc
sti
mov
jbe
je
repnz
das
mov
movsl
aam
in
or
lret
lret
das
mov
adcb
jnp
add
pop
out
dec
cmp
rol
jmp
pushf
xlat
gs
pop
or
pushf
mov
mov
or
repnz
sbb
bound
aam
add
lret
mov
mov
rcr
sub
outsb
push
test
pop
xchg
sbb
push
je
mov
mov
and
cmp
lret
pop
jo
pop
rorl
add
and
enter
push
and
xlat
xor
mov
out
repnz
xchg
imul
fistps
fdivl
inc
sbb
cmc
xchg
das
mov
out
int
mov
lret
das
jg
pop
aam
mov
inc
sahf
jno
inc
ret
leave
xor
test
stos
mov
adc
sub
sbb
popf
mov
jp
lock
mov
in
pop
incb
xchg
lcall
sti
xchg
push
add
lds
fnstcw
xchg
imul
push
or
xor
js
mov
pop
and
xchg
mov
cmp
xchg
movsl
pushl
inc
mov
notb
sbb
imul
repnz
das
inc
and
pop
ret
inc
and
or
test
ss
xor
loope
pop
fisttps
out
rcrb
lea
or
lret
push
out
xor
and
xor
mov
shlb
adc
cld
repnz
xchg
dec
mov
mov
xor
xchg
jg
cmp
ret
add
mov
mov
sub
lret
mov
xchg
pop
jle
cmp
sub
xor
add
add
adc
adc
sub
rorb
in
repz
lods
push
cli
dec
mov
aad
in
pop
cltd
xchg
mov
lds
or
xchg
aaa
xor
int
call
stos
or
jns
mov
pop
fidivs
and
xor
pusha
fs
xlat
push
dec
out
pop
arpl
outsl
test
lods
call
push
mov
xor
sub
ret
mov
jge
rcll
sub
jns
xchg
ljmp
pop
dec
mov
jb
jns
xchg
push
adc
cmp
adc
ja
roll
pop
sub
push
add
lret
das
mov
mov
cmc
xchg
pop
scas
inc
jmp
das
mov
inc
jl
jno
leave
or
pop
mov
mov
lcall
add
add
jmp
addl
xchg
iret
inc
ficoms
mov
mov
jle
jae
je
data16
pop
sbb
mov
dec
pop
jle
in
xlat
mov
xor
and
add
in
lret
pop
test
out
data16
cmpl
or
imul
xchg
pop
jle
inc
mov
dec
leave
fs
int3
cmp
mov
mov
xor
dec
pop
mov
mov
lret
and
outsl
jns
pop
xchg
cmp
cmpsl
adc
adc
in
jg
pop
fs
xchg
xor
xchg
pop
jle
sar
aas
scas
inc
jae
popf
repz
jbe
mov
sub
mov
and
js
or
mov
jbe
jne
sbb
pop
cli
mov
gs
iret
mov
pop
repnz
ss
dec
xor
test
xchg
jg
cld
cmp
mov
insl
fchs
jl
and
paddb
out
and
testl
hlt
mov
cmp
sbb
pop
out
push
fmull
mov
pop
aam
adc
repnz
das
pushf
sub
shl
insb
jnp
repnz
das
mov
jl
popf
rorl
das
mov
nop
movsb
repnz
mov
cli
sub
popa
jl
notb
or
jns
loope
mov
in
repnz
fs
mov
pop
sub
scas
call
in
add
das
ds
dec
mov
and
pop
sahf
dec
pop
stc
repnz
xchg
sbb
xchg
xor
jns
mov
cmpsl
icebp
xchg
das
int
aad
lret
shll
mov
movsb
pop
mov
scas
test
cmp
xchg
and
push
mov
xchg
push
pop
jns
pop
lcall
inc
lea
in
inc
pop
adc
popf
jb
push
addr16
or
adc
and
out
fisubrs
mov
inc
les
push
js
jno
mov
in
add
jae
adc
mov
and
shrb
or
push
adc
mov
lods
arpl
push
inc
ret
mov
notl
push
and
fcoms
inc
movsb
inc
jle
in
pop
xchg
sub
jns
inc
fwait
pop
les
adc
js
enter
in
out
adc
das
cwtl
or
outsl
stc
test
inc
dec
jecxz
mov
lret
mov
mov
xor
das
mov
insb
xor
pop
aad
inc
ds
pop
push
cld
cmp
insl
mov
dec
sti
or
inc
repnz
mov
fisttps
jno
or
lret
das
mov
lret
push
mov
xor
and
mov
sti
hlt
dec
xchg
sub
xchg
dec
out
aaa
daa
outsb
cmpsb
jns
ror
das
lcall
test
jmp
inc
mov
jge
call
lds
pop
lahf
nop
xchg
sub
and
xchg
cmpsl
cmp
fldl
lods
mov
cltd
dec
js
xorb
repz
xor
mov
sub
sub
xor
xchg
mov
dec
scas
mov
fstps
scas
inc
scas
loope
mov
repnz
popf
dec
pushf
pop
in
in
dec
in
dec
add
lret
inc
loope
pop
cltd
inc
test
scas
mov
xchg
add
sub
in
or
imul
cltd
mov
inc
mov
add
rorl
scas
lret
pop
jle
adc
add
jns
mov
call
xor
jns
lods
sub
movsb
jno
cs
xchg
xchg
push
loope
push
jae
sbb
mov
xchg
xchg
push
pop
mov
xor
insb
push
or
sti
in
mov
lds
test
int3
daa
or
pop
sti
jge
lret
das
add
pop
and
sub
add
ja
out
outsl
cltd
mov
jg
cmpb
jecxz
or
cmp
add
lahf
cld
repnz
das
dec
add
dec
and
das
mov
sbb
sub
mov
adc
dec
sbb
jns
cmp
scas
lods
lret
sub
xor
arpl
xchg
pop
sbb
xchg
push
ds
push
mov
xor
cmp
mov
mov
cld
repnz
das
mov
negl
outsl
sbb
mov
int3
aam
ret
xchg
lods
lret
das
mov
mov
lret
pop
das
mov
mov
dec
mov
lcall
mov
sub
int
inc
dec
sub
fucomp
or
daa
cld
repnz
das
dec
or
add
ljmp
das
mov
pop
stc
out
in
adc
and
das
mov
inc
sub
ja
xor
mov
sub
or
ds
arpl
mov
inc
push
sub
aas
icebp
js
mov
sub
dec
sbb
test
sub
das
repz
jbe
mov
cmpsb
xchg
repnz
das
mov
pushf
movsl
dec
fnstsw
pop
adc
shll
aaa
cmp
xchg
xor
cld
repnz
mov
mov
xor
test
push
stos
inc
stc
in
jg
ret
mov
aas
fimull
xchg
xor
sarl
les
xlat
sub
sbb
mov
out
lahf
repnz
stc
pusha
shlb
mov
arpl
fistpl
incb
rorl
stos
shrl
xchg
xor
mov
lret
das
cli
push
jl
mov
es
rol
in
lret
and
jmp
ficomps
js
mov
fistpl
mov
mov
repnz
push
dec
popa
adc
loopne
push
popa
xor
repnz
das
pop
and
cltd
out
jne
pop
jl
mov
dec
xchg
dec
je
push
xor
push
mov
add
lods
jns
xchg
mov
lret
jne
testb
in
push
pop
std
and
dec
out
jl
cmp
jns
lds
movsl
cmp
movsb
gs
pop
jns
sbb
in
pop
mov
je
pop
jns
xchg
movsl
mov
xchg
pop
mov
jo
jns
xchg
push
or
stc
jnp
xchg
dec
clc
sub
fnstsw
jge
outsl
adc
and
pop
jle
notl
sahf
mov
sti
cmc
loope
rcl
sbb
jle
in
mov
dec
cwtl
arpl
sbb
imul
pop
scas
add
rcll
in
sub
jge
cmp
dec
pop
and
in
insl
pop
and
lret
pop
xor
pop
repnz
xchg
jg
xor
pop
imulb
gs
mov
stc
pop
pop
mov
sahf
lcall
jns
popf
mov
rol
jmp
jg
testb
lds
enter
out
clc
xchg
pop
jle
xor
dec
mov
inc
push
lods
or
stc
in
dec
xchg
lret
movd
xchg
sarl
fiadds
in
test
insb
mov
pop
sti
cmpsl
mov
fwait
push
mov
jle
fstps
pop
adc
bound
dec
jl
in
std
pop
mov
lcall
lret
mov
popf
adc
lods
sahf
dec
lret
and
ret
in
xor
ret
mov
mov
inc
xor
psubusw
sub
neg
loop
les
cmp
out
xor
add
gs
mov
pop
mov
sub
inc
sarl
cmp
idiv
xor
ds
mov
sar
repnz
das
xor
jne
hlt
and
push
or
in
mov
add
or
push
lcall
repz
jns
xchg
push
test
push
ljmp
jo
xchg
push
pop
and
fsubr
or
mov
jb
jno
lds
outsl
jge
mov
in
repnz
das
pop
int
mov
jp
in
inc
mov
mov
dec
pop
mov
pop
jle
xchg
jecxz
mov
mov
sub
add
hlt
add
push
mov
das
inc
cmc
mov
adc
dec
pop
push
pop
jns
pop
addr16
mov
push
mov
push
jle
jns
xchg
dec
nop
or
into
mov
lret
and
aaa
or
cmp
lods
mov
inc
sbb
hlt
cmp
jle
add
sub
jbe
icebp
cmp
and
inc
mov
push
scas
inc
or
jge
xchg
ja
ss
or
mov
sahf
cmp
fnstsw
hlt
pop
jbe
jge
test
mov
mov
xlat
cmp
les
mov
cmp
jle
test
fidivrs
andl
cltd
fdivrp
mov
repnz
out
pop
stos
in
mov
sub
jge
lret
das
pusha
add
loopne
inc
nop
mov
and
lds
sub
movsl
clc
or
mov
test
inc
push
loope
stc
push
jbe
icebp
lret
mov
push
into
sbb
data16
das
mov
jbe
rol
mov
in
jle
notl
insl
jmp
mov
loopne
pop
adc
ljmp
push
pop
jns
into
pop
cmp
test
push
imul
in
lahf
stos
inc
enter
cwtl
ljmp
in
outsb
add
mov
and
das
sub
lods
push
in
mov
in
push
pop
lcall
cld
add
xchg
xchg
push
pop
jns
subb
adc
adc
in
cld
test
push
dec
inc
lds
fwait
sub
int
icebp
enter
lahf
push
jl
pop
sbb
stos
inc
mov
stc
fstpt
fbstp
jmp
and
inc
jb
add
inc
das
jmp
inc
cs
mov
inc
jmp
lret
mov
mov
shll
cmp
or
scas
orb
pop
jge
and
xor
lds
pop
jle
sub
mov
xchg
dec
pop
in
movsb
add
stos
rcrl
stc
in
lds
sbb
jo
loopne
lods
jle
in
adc
hlt
mov
add
out
and
in
and
xchg
imul
stos
lret
das
mov
ss
add
das
mov
or
lods
mov
stos
adc
mov
mov
cmp
xor
lret
incl
mov
and
scas
mov
mov
lods
pop
push
and
mov
push
push
cmp
mov
cmp
cld
repnz
das
popa
mov
lds
xchg
das
mov
push
push
out
das
call
lahf
cmp
int3
imul
xor
stc
in
pcmpgtw
inc
sbb
push
xchg
pop
push
pop
hlt
sbb
iret
mov
cmp
xchg
ret
pop
jle
sti
mov
sbb
cmp
xchg
pop
jle
insb
insl
jne
fwait
pusha
test
adc
stc
in
scas
or
jno
pop
insl
icebp
insb
inc
mov
inc
jns
add
hlt
and
stc
imul
test
xor
bound
testl
in
mov
ret
push
cmp
xor
push
adc
repnz
mov
aam
adc
add
mov
jecxz
dec
xor
mov
mov
jg
popa
pop
int
movsb
rorb
lret
dec
xchg
rcll
inc
aam
es
mov
lret
das
pop
push
mov
loopne
and
test
das
mov
or
sbb
das
mov
mov
xchg
decb
das
mov
mov
jne
push
and
fwait
lret
mov
xchg
cmp
stc
cmp
push
and
add
enter
mov
add
mov
pop
xor
inc
sub
xor
xchg
test
dec
outsl
scas
sub
lret
inc
cmp
cwtl
push
nop
xor
filds
mov
cmc
scas
jno
mov
jno
xchg
pop
jle
or
sti
add
inc
mov
test
pop
lods
add
jl
jns
xchg
mov
jne
adc
clc
aas
xor
jnp
pop
pop
popf
pop
rorl
jae
cmp
xchg
test
es
add
cmpsl
pop
jns
loope
sbb
loope
aam
sbb
xchg
push
or
rclb
enter
aam
dec
mov
jp
pop
jle
notl
iret
jge
stos
loopne
ljmp
xchg
sbb
cltd
rcll
scas
xor
xchg
jg
rclb
mov
dec
jle
mov
rdtsc
fsubrl
inc
fcoml
and
int
cld
repnz
aas
pop
jno
fwait
pop
xor
xchg
lret
das
nop
sarl
sub
mov
in
jg
lcall
cmp
repnz
shrb
lahf
fnsave
pop
sbb
adc
dec
bound
leave
into
xchg
jle
in
jno
jge
call
ljmp
lahf
icebp
enter
jbe
jmp
jbe
enter
cmpl
sub
sub
in
aam
ds
fstpl
lahf
adc
sub
and
lret
lret
das
mov
sahf
daa
aaa
movsb
sub
hlt
movsl
add
and
nop
leave
xchg
adc
jns
xchg
scas
and
cmp
mov
dec
jge
ret
imul
or
stc
in
pop
imul
and
jnp
xlat
in
pop
jle
fcmovnb
jne
and
fnsave
jle
cs
sahf
mov
xchg
fs
ficoms
jmp
inc
mov
sub
mov
push
sub
cmp
or
popf
inc
pusha
sbb
in
adc
in
mov
scas
mov
cmp
push
jecxz
mov
push
adc
jae
aam
lret
mov
or
orb
outsb
mov
cmp
ljmp
sub
stc
in
movsb
js
dec
fidivrl
sbb
sub
fldt
push
sbb
dec
jb
and
jl
pusha
inc
jg
mov
mov
repnz
mov
adc
jno
adc
das
mov
mov
add
dec
lret
das
mov
xchg
add
mov
adc
cmp
arpl
mov
movsb
push
loope
scas
es
faddl
cmp
pop
pop
test
xchg
or
jns
cmp
jb
jmp
imul
scas
cld
mov
dec
pop
roll
repnz
sub
mov
aad
adc
mov
repz
jle
aam
mov
stc
mov
pop
jns
jecxz
sahf
pop
scas
out
sbb
jns
xchg
push
add
pop
std
fisubs
rorl
xchg
push
pop
loop
jp
sub
pop
icebp
lahf
adc
adc
test
or
adc
or
sti
stos
cmp
in
int3
mov
lret
add
shlb
aaa
push
faddp
cmp
and
cmp
test
cmp
cmp
dec
fdivl
lds
xchg
jbe
push
arpl
jg
ds
xor
push
and
filds
adc
mov
pop
loope
jno
stos
sbb
das
cwtl
jg
dec
sbb
in
and
cmp
mul
rcll
idiv
test
dec
xlat
mov
adc
add
xchg
aaa
xchg
jecxz
xor
arpl
iret
pop
push
pop
jns
push
test
std
jne
bound
xor
js
fists
pop
pop
in
mov
fiadds
add
adc
jns
test
cmp
and
mov
cli
enter
js
enter
sbb
arpl
add
pop
sbb
cmp
int
push
pop
jns
cmc
in
and
in
push
mov
lock
clc
enter
sbb
in
mov
mov
dec
dec
insb
jo
sbb
repnz
and
jne
jo
decl
nop
lret
add
adc
xor
sub
add
out
outsl
lret
popa
mov
repnz
mov
adc
pop
into
stos
arpl
inc
les
jmp
sub
xchg
mov
mov
sbb
sti
xor
jnp
cmp
int3
fstpt
jmp
jne
push
stos
in
repnz
mov
sti
jp
rcrl
mov
add
in
xor
mov
bound
in
sub
in
sbb
push
mov
lret
push
aad
xlat
xlat
movsbl
inc
and
adc
dec
xchg
dec
imul
cmp
daa
divb
mov
adc
jle
push
xchg
imul
and
cmp
fwait
mov
std
mov
cs
lahf
inc
dec
cmp
gs
xchg
pop
inc
lods
xor
in
in
pop
and
mov
enter
adc
pop
xchg
xchg
pop
jle
stc
sub
lock
mov
xchg
icebp
dec
pop
jle
in
shl
pop
adc
mov
mov
in
push
lds
pop
mov
adc
xchg
pop
adcb
cmc
gs
dec
add
test
jbe
or
dec
test
jns
xchg
in
ret
mov
fmuls
jns
xchg
or
cld
sub
lret
fnstsw
xchg
aaa
and
jge
mov
jmp
pop
mov
cmp
or
scas
sub
dec
mov
jnp
and
inc
lret
das
scas
mov
cmc
dec
mov
push
cmp
in
mov
hlt
mov
push
insl
jnp
pop
jne
xchg
scas
push
scas
mov
sub
pop
adc
sub
je
jg
mov
cmp
or
stc
in
inc
js
xchg
inc
nop
sub
sbb
or
pop
jle
test
fcomps
pop
xchg
call
movb
les
gs
das
mov
movsb
rolb
repnz
mov
imul
or
jne
pop
into
lret
das
mov
pop
les
imul
mov
and
and
aaa
jo
leave
mov
or
sbb
jle
ss
xchg
not
inc
inc
les
xchg
popa
inc
cld
sti
enter
xlat
mov
std
lds
push
push
fiadds
cmpsl
sti
js
jnp
inc
xor
and
or
lretw
das
mov
pop
xchg
sbb
pop
das
mov
in
fadds
or
mov
insb
pop
stc
repnz
adc
add
mov
adc
outsl
dec
imul
jge
out
fsts
mov
push
inc
mov
js
dec
enter
mov
push
pop
inc
repz
sub
in
cli
and
fstpl
dec
fdivrs
jno
jne
xchg
push
pop
fdivrl
sub
inc
jg
pop
jns
mov
gs
pop
jo
xchg
mov
cli
enter
scas
add
jns
sub
jp
es
in
pop
pop
pusha
rolb
mov
in
pop
dec
dec
ja
incb
dec
loop
rcrb
imul
push
aad
fdivr
xchg
pop
jle
les
add
mov
cwtl
or
stc
in
push
sti
enter
sbb
lds
mov
sbb
mov
add
push
xchg
pop
fidivrs
in
push
fidivs
push
add
fs
add
xchg
push
pop
jns
repz
lret
xchg
outsl
adc
leave
lahf
push
in
pop
jns
xlat
clc
xor
add
xlat
rclb
jge
sarl
jnp
inc
lret
lahf
xor
mov
sub
sub
cmp
adc
movsl
sub
sarb
cmp
mov
mov
sub
loopne
into
or
mov
mov
lret
cmp
loop
dec
cmp
mov
ds
inc
fwait
sbb
inc
js
push
rorl
add
iret
cld
pusha
xor
jmp
das
movsb
cli
inc
shll
enter
jle
mov
cmp
mov
pop
jns
pop
push
fsub
je
sbb
cmp
pop
scas
ret
ja
inc
lods
dec
shl
pop
push
dec
jmp
das
mov
dec
test
ret
sbb
push
pop
jns
imul
push
xchg
popa
xor
pop
jns
xchg
xchg
mov
sysret
clc
int
sarl
xchg
push
sahf
cmp
adc
scas
out
xor
sbb
jb
ja
mov
jns
popa
and
mov
xchg
mov
inc
xchg
inc
xchg
or
cmp
xchg
movsl
mov
jl
cwtl
loopne
lahf
sub
pop
jns
sub
in
pop
fists
movsb
mov
mov
push
inc
shrl
jne
push
pop
das
mov
adc
mov
push
arpl
mov
repnz
pop
dec
inc
lret
pop
push
xor
lret
shll
mov
pusha
sahf
jp
insb
xorb
scas
mov
or
mov
daa
xchg
aas
jp
js
rcrb
jnp
and
je
rolb
leave
mov
pop
jns
xchg
or
sub
push
ds
clc
push
enter
ficompl
dec
sub
mov
xorps
sar
pop
aas
jcxz
jne
sbb
repnz
and
xchg
pop
sbbb
mov
scas
aas
lcall
scas
mov
mov
test
nop
aad
lahf
scas
mov
jp
stc
jns
repz
xchg
cmp
mov
leave
cmp
mov
outsl
bswap
repnz
dec
insb
add
lahf
cld
xchg
jp
popf
adc
jge
inc
mov
mov
jb
clc
daa
bound
nop
push
das
cmp
xchg
mov
dec
xor
mov
in
lock
mov
repnz
jo
fstpt
push
pop
inc
cmp
insb
cmc
lods
enter
mov
stc
and
xchg
insb
mov
or
xchg
bound
dec
push
add
inc
jge
mov
push
inc
es
jnp
lret
jg
xchg
sbb
lds
inc
pop
push
out
outsb
xchg
pusha
ds
sub
das
mov
stos
fldl
mov
das
mov
pop
faddp
dec
notl
test
jbe
movsb
mov
add
sbbl
repnz
das
or
mov
mov
nop
lods
mov
es
mov
fs
and
outsb
into
pop
dec
cmp
les
mov
jns
aaa
jp
push
and
jle
scas
jno
jb
or
repz
sbb
xchg
or
jns
sahf
dec
dec
xchg
jmp
jg
arpl
lds
pop
jl
loopne
cmp
add
pop
jle
ja
jle
scas
repnz
mov
das
and
jl
in
repnz
or
sub
cli
mov
out
xchg
popf
jge
jnp
mov
movsl
or
mov
dec
cs
pop
insb
fdiv
jb
das
mov
jecxz
add
imul
dec
pop
movb
repnz
scas
pop
or
shlb
test
hlt
add
add
repnz
das
mov
mov
pushf
mov
pop
pop
pop
loope
cwtl
or
jno
mov
push
loopne
repnz
lds
out
int
int3
nop
mov
aaa
pop
mull
bound
enter
inc
mov
jne
shrb
in
adc
jle
in
adc
imul
ret
inc
cmpsl
loope
mov
stc
in
pop
mov
jae
insb
insl
pop
dec
in
pop
jle
lock
mov
pushf
movsb
cltd
daa
movsb
add
stos
pop
test
pop
xor
jmp
or
mov
xlat
pop
adc
in
push
fbstp
sub
in
push
pop
test
mov
and
addr16
xchg
push
pop
jns
inc
xor
push
mov
inc
bound
xchg
mov
hlt
mov
ja
mov
repnz
arpl
fnstcw
sub
xlat
and
test
lods
mov
test
cwtl
inc
jne
jp
pop
addr16
lds
or
out
lret
das
lcall
adc
push
lds
inc
pop
stc
repnz
jl
loope
cmp
xchg
push
fidivs
adc
sub
fwait
mov
jns
push
pushf
imul
push
pop
jns
daa
outsb
add
pop
out
mov
out
jns
xchg
xchg
and
inc
aad
adc
mov
adc
pushf
icebp
pop
xorb
pop
mov
pop
mov
lock
xlat
sarb
dec
scas
mov
stc
in
mov
lahf
pop
jecxz
sub
movsb
jno
aaa
idiv
in
pop
mov
ret
cmp
fs
mov
sbb
jle
scas
loope
mov
and
mov
sub
loop
pop
sub
imul
lret
and
repz
orb
aam
test
scas
mov
mov
and
repnz
js
push
lcall
movsl
mov
dec
fucomi
das
ljmp
and
divl
inc
das
stc
xor
fcoml
movsl
and
pop
cmp
mull
in
push
add
in
scas
jmp
pop
jns
xchg
into
call
inc
xor
mov
sbb
rep
inc
or
mov
mov
test
pop
pop
es
jle
cld
repnz
das
mov
xchg
in
mov
gs
pop
ja
inc
mov
adc
jle
mov
xchg
xchg
out
xor
mov
scas
mov
or
mov
arpl
roll
push
or
pop
cld
repnz
das
mov
mov
cmp
movb
inc
aaa
fcomps
scas
mov
xchg
cmp
add
jno
xchg
cld
repnz
enter
insb
sti
cltd
jge
mov
adc
das
mov
push
icebp
mov
leave
enter
aaa
stos
push
movsl
inc
adc
push
jle
imul
jb
outsl
adc
jne
jmp
cld
repnz
das
ret
daa
push
xchg
in
jge
test
mov
pop
xchg
or
js
mov
mov
inc
dec
sbb
mov
pop
movsb
mov
repnz
xchg
popa
xchg
xchg
and
sub
cmp
repnz
das
mov
inc
fistpl
or
int3
xchg
scas
int3
repnz
das
mov
and
ror
imul
push
xor
pop
int3
mov
das
mov
add
sbb
and
dec
mov
cld
repnz
out
or
or
adcl
dec
cld
repnz
das
in
aam
mov
dec
int
clc
addr16
lret
das
mov
ret
jmp
stos
xor
js
cli
in
dec
xchg
mov
sub
sbb
mov
mov
notb
cmp
mov
cmp
fbld
mov
mov
cmp
aaa
xlat
sub
sbbb
pop
jns
sub
fbstp
outsl
jmp
in
out
mov
xchg
and
lret
mov
vpsrad
mov
push
dec
inc
xor
jne
loope
inc
pushl
fst
jo
mov
jnp
xor
jl
lret
das
xchg
shll
cmp
jbe
pop
lret
gs
inc
repz
push
je
inc
add
add
enter
int
and
idivl
xchg
push
daa
jbe
ret
push
or
aaa
push
xchg
push
pop
xchg
add
or
cmp
clc
bound
inc
loopne
pop
loope
outsl
lock
adcl
mov
sub
lret
mov
lcall
xchg
pop
jge
jg
mov
lods
jge
addr16
jmp
stc
in
iret
dec
xchg
mov
stos
test
inc
jp
dec
clc
enter
sub
imul
rcr
nop
jecxz
popf
xor
adc
cltd
jle
in
shlb
dec
adc
jmp
jge
in
pop
sub
xchg
imul
xchg
pop
jle
dec
xor
fstcw
mov
lahf
push
stc
xchg
xor
jg
mov
insb
mov
cmp
push
push
rclb
lret
sub
adc
ficompl
add
sbb
ds
sahf
cltd
mov
xchg
mov
repnz
divl
in
push
fdivp
nop
jns
xor
cmp
and
pushf
das
xchg
push
pop
jns
loopne
ret
lock
repnz
jp
push
imul
cmovle
jecxz
inc
shr
pusha
stos
xchg
pop
jle
and
cmp
pop
pop
cmc
pop
jle
in
pusha
stc
bound
push
out
insb
repz
int
xchg
or
xor
and
inc
outsb
push
mov
mov
pop
push
pop
test
cmp
in
jns
xchg
push
icebp
mov
out
xchg
add
in
push
pop
xorl
out
cmpl
cmp
ror
adc
xchg
es
or
bnd
in
or
cmp
fcoml
jecxz
enter
pop
mov
dec
lock
xchg
imul
mov
faddl
pop
cmp
das
mov
and
scas
jne
je
filds
pop
cwtl
mov
scas
mov
jno
inc
test
sar
lret
das
mov
cld
fcmovnbe
and
mov
mov
cmpsl
mov
lods
or
das
mov
sbb
dec
hlt
fsubrl
mov
paddq
mov
and
mov
mov
xchg
push
push
jecxz
dec
clc
enter
cld
pop
loopne
data16
push
xchg
push
aad
push
pop
mov
inc
pop
sbb
in
je
adc
je
xchg
pop
out
mov
call
lcall
and
lcall
pop
jo
out
dec
mov
lret
xchg
mov
mov
dec
pop
cld
repnz
das
mov
cmp
add
lret
das
mov
fisubrl
fs
inc
lret
das
mov
nop
and
mov
jns
jl
ss
sbb
gs
inc
in
push
pop
mulb
sbb
jns
les
cmp
adc
or
xchg
push
pop
jne
js
pmuludq
imul
push
pop
jns
scas
xorl
outsl
xor
in
je
xchg
xor
sahf
push
adc
pop
jns
xchg
aad
jo
loopne
pop
or
mov
in
push
pop
xor
ss
inc
or
in
push
pop
jo
fs
xchg
mov
mov
mov
pop
nop
xchg
jle
pop
mov
enter
fwait
or
ret
aad
out
int
ds
in
pop
jnp
mov
mov
in
pop
jle
adc
and
shlb
pop
xchg
pop
jle
xchg
push
cmp
sti
hlt
cmp
ds
call
hlt
test
jg
fdivrl
dec
push
push
jge
aas
add
rcl
lret
sub
jb
or
aam
lahf
icebp
sub
and
or
lcall
cmp
cmp
lret
aad
add
fnsave
pop
jle
leave
cmp
xchg
das
mov
and
cmc
mov
xchg
imul
cli
mov
xchg
adc
jmp
test
lcall
std
jno
stc
in
pop
clc
push
mov
pop
xor
fidivl
xchg
pop
jle
sahf
adc
pop
leave
fisttps
pop
jle
fcmovne
pusha
neg
test
jg
sbb
jns
call
js
or
xchg
pop
daa
and
sub
xor
xor
mov
pop
ret
stos
clc
xchg
jg
pop
out
adc
es
cltd
push
fldcw
lea
stc
in
pop
and
sub
xchg
les
jp
repnz
and
cmp
call
mov
xchg
cmpl
cld
loop
sub
pop
mov
inc
inc
addr16
adc
push
cltd
xchg
cld
repnz
das
pop
bound
jb
icebp
iret
notl
out
pop
mov
and
mov
xchg
pop
jle
into
lea
rorl
xchg
ds
inc
pop
jle
in
mov
ss
iret
aas
sub
dec
push
jns
xchg
lock
push
sub
test
lret
das
jmp
sbb
pop
mov
mov
xor
sub
cmp
fists
adc
adc
scas
mov
fdiv
dec
arpl
or
cwtl
jne
adc
shll
xchg
and
mov
mul
lcall
in
inc
xchg
psubw
std
xchg
adc
repnz
pop
decl
cwtl
imul
test
and
push
jns
push
ljmp
jb
fidivs
ljmp
pop
and
std
xor
push
push
les
sti
test
f2xm1
insl
jo
pop
push
pop
jns
inc
repnz
mov
xchg
into
pop
jns
xchg
dec
xchg
pop
cltd
jnp
xchg
test
enter
imul
es
adc
les
fldt
pop
or
dec
sub
cld
sti
enter
ljmp
insb
ljmp
jmp
ljmp
lret
sbb
push
jne
rolb
push
jne
repnz
push
pusha
clc
in
mov
adc
scas
mov
lods
cs
lds
jle
cmpl
movsl
push
fidivrs
test
and
sbb
cwtl
movsl
aas
stc
in
pop
les
cmpsb
sub
test
in
pop
jle
pusha
or
pop
jns
mov
lods
jl
popf
push
sahf
js
jae
insl
fcmovb
mov
jns
or
call
out
and
push
loopne
pop
pop
mov
inc
movb
jb
mov
adc
mov
in
pop
cmp
jecxz
inc
jno
lea
jl
rorb
in
fmull
cmpsb
or
xchg
jg
jns
mov
in
andl
dec
scas
mov
rol
mov
jae
jle
add
das
pop
pop
adc
cmp
cmpsl
cmp
repnz
das
mov
jle
pusha
lcall
cld
mov
sub
or
dec
shlb
repz
ds
sbb
add
repnz
psubsw
loop
or
mov
iret
ja
xlat
adc
or
pop
jns
fwait
cmc
lods
loope
jnp
out
cmc
test
dec
sti
push
add
scas
inc
mov
enter
sbb
jl
pop
bound
mov
stc
test
fiadds
scas
mov
push
mov
mov
mov
aam
loope
push
int3
adc
adc
icebp
cmp
in
and
mov
in
cmpsb
xor
sub
popf
out
jns
pop
add
xor
jnp
movsb
xorl
lcall
jge
popa
mov
push
mov
cld
repnz
out
test
leave
jl
lock
sbb
dec
cmp
lret
daa
lock
sbb
add
pop
insb
inc
xchg
dec
mov
cmovg
push
jg
mov
repz
sub
popf
test
lods
mov
mov
mov
inc
in
iret
cmpsl
pop
jo
mov
xor
jge
outsl
aaa
adc
pop
cmpsl
rcll
mov
daa
pop
aad
inc
inc
xchg
into
inc
jle
in
xchg
mov
adc
mov
dec
mov
push
scas
aam
stc
test
enter
mov
dec
jecxz
sbb
and
pop
int
inc
test
mov
xor
inc
mov
daa
call
xor
loopne
ja
xchg
pop
sbb
clc
mov
mov
in
add
stos
add
lcall
icebp
jle
in
mov
test
jmp
lods
fcoms
in
pop
mov
fidivl
inc
push
mov
les
in
sub
mov
repnz
xchg
es
js
and
jns
mov
mov
in
fdivs
adcb
aaa
in
test
andl
push
aas
and
testb
inc
add
xchg
push
pop
stos
lds
dec
sbb
push
out
fidivl
sub
xchg
scas
movsb
scas
mov
and
incb
stc
js
adc
cmp
outsl
xor
xlat
cmp
lret
mov
xchg
adc
jo
lods
in
cmp
imul
pop
sub
cmp
mov
inc
loopne
cmp
out
jp
xor
sub
push
scas
subb
sbb
mov
lret
out
data16
daa
lret
adc
push
push
faddp
cmp
mov
cmp
enter
frstor
xor
jae
out
movsb
inc
jle
test
xor
mov
repnz
lds
fsubs
test
sub
jb
outsb
lret
addr16
sahf
jmp
xchg
inc
pop
mov
xlat
cltd
dec
test
xchg
aaa
adc
push
insb
outsl
sub
sbb
inc
pop
movsl
jnp
test
adc
inc
decb
fdivl
xor
xchg
pop
jle
loopne
dec
push
aas
push
es
and
stc
in
shlb
es
mov
cs
jo
or
in
test
mov
shl
add
stc
in
pop
test
int
jne
add
bound
and
cltd
inc
rcll
rorl
outsl
or
repnz
test
jae
dec
insb
pusha
fcmovu
mov
lcall
mov
lret
xor
jmp
outsb
xchg
fistl
lret
mov
into
cmpsb
sbb
add
outsb
sub
cmp
mov
pusha
dec
jmp
push
pop
jmp
adc
notb
lea
mov
sub
imul
push
xlat
mov
inc
sbb
jge
leave
cmpsl
lds
stc
adc
jle
jge
subb
loop
pop
xor
insl
mov
dec
cmp
fdivrl
adc
fwait
sti
mov
xchg
and
inc
test
cmp
lods
call
sbb
movsb
rcrb
lret
pop
lds
inc
stc
in
pop
inc
scas
neg
and
cltd
adc
in
pop
jle
cs
sbb
mov
pop
mov
stc
sub
jecxz
and
or
repnz
iret
repnz
mov
inc
out
xchg
lret
mov
insl
aaa
sbb
sub
jb
or
test
mov
mov
lret
cmpsb
outsl
inc
pop
pop
call
mov
mov
inc
mov
scas
mov
leave
cld
mov
into
pop
xorl
in
out
in
icebp
push
inc
fwait
mov
mov
pop
mov
imul
push
pop
jns
sub
adc
into
push
xacquire
iret
pop
jns
insb
popa
cmp
xchg
scas
call
jnp
in
add
ja
rcrb
std
fsubs
xchg
imul
movsl
daa
xor
or
scas
mov
cs
mov
jae
add
sub
xchg
inc
and
shll
xchg
ds
arpl
mov
fs
pop
jns
push
test
pop
ret
inc
pop
pop
ret
mov
push
jns
cmp
lcall
sub
cmc
imul
push
cmp
repnz
jmp
addr16
jne
xor
xchg
jg
mov
xchg
psubq
cmp
and
xor
xchg
adc
jne
and
jle
in
or
inc
sbb
lock
in
pop
pushf
movsb
adc
jmp
loop
add
ss
and
or
jae
icebp
mov
mov
jp
jmp
xchg
les
fiadds
cmp
xor
rcr
push
mov
cmp
clc
inc
daa
mov
xchg
divl
bound
pop
jns
shlb
lret
cwtl
fistl
jns
ret
xor
mov
push
aas
scas
nopl
xchg
mov
sub
mov
mov
jge
out
insb
jb
jno
pop
jl
in
aaa
and
stc
add
xchg
pop
cmp
repnz
xchg
out
and
iret
lea
repnz
das
mov
mov
mov
repnz
das
mov
cld
fs
mov
ja
inc
mov
iret
scas
cli
in
sub
cld
repnz
mov
decb
inc
insl
add
in
test
imul
sahf
repz
push
pop
jns
push
movsb
gs
mov
xchg
data16
inc
push
pop
jns
addr16
xchg
mov
cmp
push
xchg
and
loope
dec
in
test
mov
leave
es
fcoml
stc
notl
cltd
mov
adc
push
aaa
out
mov
icebp
fdivl
roll
cld
sti
mov
or
inc
mov
int3
push
stc
in
push
jns
divl
adc
mov
mov
shlb
ljmp
loope
jecxz
mov
jnp
in
test
jo
push
xchg
and
fsubrl
pop
pop
lret
daa
pop
jle
pusha
les
repnz
xchg
mov
xor
ret
sub
aam
repnz
in
jp
mov
sti
loop
repnz
aam
outsl
xor
insl
mov
inc
scas
mov
push
outsl
dec
pop
aaa
mov
mov
jnp
inc
dec
int3
pop
push
push
rcrl
scas
test
cmp
int
jmp
jl
in
repnz
dec
arpl
lret
pop
lret
lret
mov
mov
pop
ja
es
shrb
inc
mov
push
xor
jge
pop
and
push
daa
popl
cmp
in
xchg
pop
sarb
xchg
hlt
faddl
mov
xchg
das
inc
or
sbb
imul
dec
sub
or
into
and
enter
pusha
xor
pop
lock
and
mov
pop
or
push
jae
mov
jge
cmp
mov
dec
das
rcrl
push
xchg
loop
jbe
mov
lods
lahf
icebp
sbb
dec
in
aaa
test
push
jnp
or
and
pop
jns
sbb
insl
or
jle
in
fs
cmpsl
stc
call
loopne
or
inc
hlt
fsts
lds
xlat
xor
xor
inc
scas
mov
mov
push
scas
cld
repnz
mov
fstpt
pop
popf
dec
test
lock
das
mov
cmp
cs
lret
das
mov
mov
pusha
mov
movsl
das
mov
push
ja
xor
jecxz
dec
fstps
lock
sub
push
add
jp
cld
repnz
das
push
and
sbb
cmc
in
xchg
das
mov
ret
mov
dec
cld
sub
scas
arpl
fsts
xchg
hlt
addr16
xchg
push
xchg
cmpsl
pop
xor
sub
pop
mov
je
pop
out
jp
jp
jle
in
sbb
stc
mov
sbb
stc
in
sub
inc
mov
dec
pop
aad
imul
xchg
pop
loop
jbe
xor
push
test
lret
roll
mov
movsl
mov
jge
rorl
out
in
pop
or
and
repnz
mov
rcrl
lret
mov
sub
jg
push
pop
stc
repnz
fwait
jl
inc
lahf
lea
adc
mov
lods
push
mov
sub
jns
xchg
push
ja
in
enter
je
jmp
pop
pop
pop
inc
cmp
out
jno
add
cmp
mov
stos
stc
inc
gs
cli
push
adc
cld
repnz
cmp
cmp
or
gs
pop
scas
imul
shll
xchg
repnz
or
dec
dec
idivl
and
sub
stc
in
add
pop
daa
mov
out
cs
mov
sbb
xchg
pop
adc
cwtl
jae
movsl
mov
jns
les
sbb
lahf
jno
fcoml
inc
xchg
push
pop
jns
xchg
cmp
pop
bound
add
inc
mov
cmp
aam
lcall
shrl
or
add
mov
xor
pop
stc
jnp
lea
out
setne
and
jmp
in
jle
in
insl
xchg
test
mov
jge
clc
stc
in
pop
dec
push
dec
mov
clc
mov
in
pop
jle
ret
imul
stc
inc
sbb
fsubr
cmp
cmpsb
rcrl
push
cs
inc
adcb
fbstp
aad
push
clc
jg
add
inc
sub
das
lcall
lea
js
fsts
repnz
push
dec
dec
in
push
notl
and
and
sbb
enter
pop
sbb
xor
test
repnz
shl
in
fidivl
or
stc
in
jmp
xor
ss
cmpsl
inc
inc
fisubl
stc
in
pop
inc
sbb
ljmp
ds
pop
jle
stos
hlt
stos
lret
imul
inc
sbb
in
xchg
cltd
xlat
lahf
xchg
in
push
pop
add
pop
subb
fsubrl
pop
insb
and
int3
mov
movsb
xlat
mov
in
test
leave
sub
cmp
xchg
push
pop
jns
rolb
jno
jbe
sti
inc
push
lods
call
mov
sti
jl
fstl
jmp
mov
cmp
in
pop
cli
xchg
int3
pop
enter
add
mov
lods
gs
sbb
stc
in
pop
jle
out
mov
sbbb
in
pop
jle
pop
or
jp
mov
xchg
pop
jle
mov
adc
xchg
inc
ljmp
fists
inc
pop
out
and
jmp
dec
lock
inc
das
mov
loopne
stos
fcmove
out
sbb
test
xchg
test
imul
jp
xchg
pop
dec
cli
push
mov
lock
js
xor
push
ficomps
adc
xchg
mov
mov
push
dec
sahf
adc
mov
stos
push
cmp
mov
push
stc
test
cmp
push
testl
das
call
and
mov
fisubrl
add
in
lea
hlt
roll
dec
cld
repnz
das
insl
push
stc
mov
lds
outsb
sub
lret
das
mov
cld
lahf
addr16
xchg
mov
iret
xchg
pop
cmp
add
mov
jnp
jle
in
roll
xchg
inc
loope
stos
stos
mov
inc
jle
in
and
mov
and
and
pushf
xor
cmp
fildl
pop
int
push
pop
sub
pop
cs
movsl
bound
xchg
xchg
pop
adc
shrl
mov
pop
outsl
push
push
dec
out
nop
cli
divb
pop
jle
bound
mov
std
in
and
ss
stc
xor
sbb
jl
in
cmpsb
dec
lret
shll
sub
or
arpl
add
push
mov
js
pop
call
in
ja
lods
dec
aaa
data16
push
orl
mov
pop
and
int
ret
dec
mov
pop
jns
inc
mov
test
cmp
or
cmc
call
in
vaddsd
mov
aaa
pop
xor
sub
or
push
ljmp
repnz
das
sbb
cmc
xchg
mov
repnz
imul
enter
ja
mov
xor
mov
pop
inc
or
filds
xor
inc
sbb
xchg
push
fidivs
fs
pop
dec
sbb
fcmovu
jg
pop
jns
dec
pushf
inc
out
sub
ja
lds
push
stc
in
outsl
ret
cld
cmp
std
sub
jb
repnz
pop
push
nop
je
jge
or
and
or
rcll
pop
jns
lods
iret
enter
leave
fisubrl
adc
cmp
cmpsb
mov
mov
dec
pop
cwtl
and
sahf
aam
sbb
imull
outsl
aad
lret
das
mov
cmp
push
stos
xlat
jnp
inc
int3
fmulp
jp
fisttpl
test
mov
or
test
repz
add
mov
pop
sub
lcall
sbb
repnz
das
xor
adc
enter
pusha
addr16
lcall
or
into
sub
das
mov
data16
stos
add
adc
adc
idiv
cwtl
loopne
scas
fsubl
dec
stc
in
pop
pop
xor
sub
pop
adc
jle
pop
je
adc
adc
das
mov
ljmp
and
xor
addr16
lret
mov
pushf
push
int
lea
repnz
ja
mov
jns
loope
lods
inc
fiadds
popf
lret
arpl
sarl
das
lcall
neg
mov
es
fbstp
cmc
jp
das
mov
pusha
pop
mov
out
dec
add
lods
insl
cmp
lret
push
or
sbb
sub
mov
xor
xchg
cli
enter
repz
pop
dec
das
add
inc
cmpsb
xor
mov
or
fldt
mov
mov
dec
mov
iret
test
or
enter
add
shrl
and
shl
jbe
cmp
test
out
in
push
fisubrs
jb
ds
ret
inc
mov
jns
out
dec
in
and
rclb
push
stc
in
int
pop
in
push
popf
in
adc
mov
ljmp
aas
cmpsl
pop
leave
les
push
adc
jns
pop
out
push
stos
jbe
mov
and
inc
mov
testb
popaw
lahf
ss
jle
mov
fsubp
dec
push
xor
in
sbb
repnz
das
adc
outsl
leave
cltd
mov
test
sbb
xchg
dec
ljmp
and
pusha
xor
mov
and
jo
jge
lret
push
paddsw
out
lea
fisubrl
mov
shlb
sbb
pop
adc
jle
notl
push
xlat
sahf
and
jo
enter
xchg
pop
in
mov
or
cli
and
mov
mov
jl
dec
mov
pop
cmp
add
shll
adc
pop
hlt
jnp
cmp
mov
and
test
xchg
push
pop
jns
subb
mov
push
dec
or
in
lock
test
xlat
out
inc
pop
pop
jns
mulb
cld
sbb
insb
in
mov
mov
psrlq
repnz
cld
mov
lret
sub
divb
fisubrs
lcall
mov
fsubp
das
jp
inc
in
mov
mov
sub
sub
fstl
aam
cmp
jns
mov
cmp
push
cmp
int3
outsb
xchg
sub
in
lahf
add
fs
push
push
mov
sub
jns
xchg
push
pusha
int3
push
outsb
pop
rorl
sub
sbb
into
fimuls
mov
mov
push
sbb
loop
jp
stc
xchg
mov
mov
das
lcall
sub
adc
pop
push
data16
inc
scas
mov
das
sub
out
mov
jb
xlat
add
push
dec
sahf
sub
jo
in
lcall
in
jg
sbb
cmp
cmpsb
mov
xchg
call
fbstp
in
sbb
cmp
inc
lods
add
roll
xchg
pop
ds
fdivl
testb
out
popf
xchg
and
xor
fwait
cmp
in
jbe
cmpsb
add
les
ljmp
sub
mov
in
jo
stc
in
pop
in
xor
cmp
xchg
push
in
ja
lea
mov
pop
shrl
jg
pop
jns
jmp
inc
cmp
or
test
in
inc
stc
fnsave
es
sbb
mov
or
adc
cmp
pop
enter
pop
jle
and
push
inc
in
xlat
test
cld
repnz
movsb
lds
scas
in
fcomps
icebp
enter
ret
loop
pop
and
neg
jge
stos
lock
inc
mov
pushf
mov
adc
ret
and
add
mov
inc
insl
mov
push
and
in
pop
call
pop
cmpsl
mov
or
lret
jg
adc
in
jg
xchg
arpl
and
in
lock
jmp
mov
ds
pop
fsubrl
sti
cs
cmp
in
cmpsb
and
mov
clc
jge
xchg
push
ds
jge
adc
mov
pop
sti
pushf
nop
inc
add
mov
dec
pop
mov
mov
nop
sbb
pop
add
xchg
test
leave
out
js
sbb
loopw
pop
fst
scas
insb
sub
pop
jns
les
mov
mov
jns
dec
pusha
dec
sub
push
div
stos
pop
jns
xchg
push
lods
sahf
stc
pop
dec
or
lret
sub
dec
jne
and
in
scas
mov
fldcw
xchg
and
dec
addb
jle
and
lret
imul
outsl
and
mov
lea
pop
mov
fistps
cld
xor
lret
mov
or
and
sub
loop
test
dec
push
sub
subb
mov
adc
lods
mov
xchg
icebp
fsts
mov
and
cmpsl
lret
mov
cmp
imul
or
pop
mov
in
testl
or
xchg
aam
xchg
push
pop
popa
das
jmp
cmp
pop
sbb
or
cltd
xor
jbe
outsl
jle
in
push
hlt
sarb
dec
lret
jl
in
pop
mov
outsb
fistps
orb
xchg
pop
jle
dec
popa
pop
push
xor
push
pop
jns
addr16
repnz
jmp
lahf
stc
in
inc
mov
adc
shlb
pop
jle
sbb
out
push
mov
cmp
outsb
mov
insl
cmp
fists
sbb
in
pop
fs
cmp
mov
in
mov
xchg
pop
jle
pop
addl
mov
repz
pusha
inc
push
jge
lods
in
mov
daa
mov
and
mov
push
cs
inc
sub
cld
repnz
das
pop
jg
xor
aaa
adc
repnz
das
mov
mov
inc
sub
das
mov
bound
int3
inc
xchg
mov
xchg
stc
imul
pushf
sar
hlt
pop
std
mov
sub
pop
cld
repnz
and
movsb
rolb
pop
pushf
push
mov
mov
clc
imul
inc
pop
stc
mov
jp
xchg
rcll
jl
scas
mov
lds
stos
lods
fstps
pop
cmp
lret
rcll
mov
xor
stc
dec
lds
mov
jns
xchg
push
xchg
arpl
ja
push
repnz
add
push
pop
jle
cmp
dec
arpl
push
and
jns
jg
inc
cmc
push
add
mov
decl
push
fsubl
xchg
aaa
adc
fisubs
push
jno
push
pop
jns
jmp
repz
dec
popf
es
stc
or
pop
jns
xchg
push
adc
mov
and
in
xchg
push
fcmovnu
pop
push
pop
imul
xchg
inc
jle
cmpsb
fadds
xchg
or
xor
popf
push
insl
in
aaa
imul
xor
xchg
in
test
push
test
loope
insl
ds
xchg
push
pop
jns
movsb
mov
push
mov
jns
ja
decl
mov
movsb
ficompl
mov
pop
vmaskmovdqu
xchg
cmp
andl
xor
in
pop
jle
ficomps
add
pop
jle
aaa
push
stos
aaa
add
and
jle
in
pop
sbb
cmc
mov
mov
repnz
ds
mov
imul
mov
and
push
jbe
xchg
push
pop
jns
in
adc
pusha
inc
sub
movsl
push
pop
jns
outsl
dec
ss
loopne
aam
pop
or
in
ret
add
jbe
rcrb
popf
movzwl
xchg
rclb
mov
mov
repnz
push
pop
movsl
and
inc
or
mov
scas
push
cmp
lret
adc
push
push
xlat
daa
into
inc
hlt
jle
in
fwait
cmp
xchg
dec
inc
push
imul
adc
xchg
pop
lret
add
iret
push
xchg
push
jbe
into
jne
xchg
pop
jle
rorl
xchg
push
or
mov
lock
jmp
mov
outsl
movsl
nop
jmp
sbb
xchg
je
adc
enter
lock
jmp
mov
push
mov
cld
repnz
das
push
mov
mov
in
xchg
das
mov
rcl
nop
jp
lods
sti
in
mov
fs
xchg
xlat
fidivl
xor
call
pop
xchg
lcall
or
sbb
xlat
faddl
stos
and
mov
pop
test
or
push
dec
fsubr
and
cmp
fisubrs
sti
pop
jle
imul
dec
xchg
repz
mov
mov
out
and
jmp
inc
sti
mov
pusha
cmp
mov
xchg
das
mov
push
movsl
aad
xchg
sub
push
jp
pop
add
outsl
pop
out
adc
xor
jnp
adc
ret
lds
loop
pop
jle
or
lods
mov
in
inc
push
pop
jns
cmp
imul
mov
notl
and
fcom
divb
or
xchg
pop
jle
popf
mov
add
jmp
repnz
xchg
pop
xchg
pop
jle
dec
pushf
dec
arpl
cmp
adc
pop
ljmp
cmp
or
push
mov
add
fwait
sarb
int
add
mov
jp
xchg
pop
push
test
sbb
repz
dec
and
iret
push
fsts
xchg
mov
cld
repnz
mov
xchg
call
mov
jne
lret
das
mov
adc
sub
jg
ja
shll
jo
gs
jmp
lds
sbb
fwait
pop
and
stc
notl
js
and
outsl
adcb
xchg
pop
xchg
pop
popa
jno
out
add
aas
add
js
sbb
loope
sbb
inc
jle
sub
dec
dec
dec
mov
inc
inc
jge
sahf
les
pop
ret
mov
repnz
stos
test
imul
loop
push
cmp
repnz
cmp
aaa
rcrl
xor
in
sub
dec
jle
inc
add
mov
in
movsl
lahf
imul
jne
and
int3
xchg
adc
repnz
das
dec
data16
dec
js
push
aad
lahf
cmp
pop
mov
xchg
push
ficomps
lea
or
ja
fistpll
lret
into
inc
push
pop
jns
pop
or
pushf
rcrl
repnz
nop
ret
mov
insl
in
cwtl
insl
cwtl
sub
jg
mov
add
push
aad
test
push
stc
add
inc
push
rcrb
lods
movsl
cmp
icebp
hlt
jmp
cmp
jns
xchg
push
push
mov
cwtl
cld
adc
jo
shlb
pop
xor
mov
mov
loope
pop
jg
xor
mov
lret
das
call
fldl
test
sub
fisttpl
lret
das
mov
inc
in
stos
mov
jecxz
jecxz
cld
repnz
insb
cmp
loop
mov
arpl
fbstp
inc
xor
push
push
rcll
ss
adc
lock
pop
les
pop
jns
xchg
mov
mov
mov
cltd
in
xchg
xchg
push
adc
in
js
and
ret
xchg
dec
lock
stc
in
and
inc
push
dec
sub
push
sbb
shll
mov
out
imul
dec
sahf
stc
repnz
das
cltd
js
lock
add
pop
filds
pop
sbb
mov
jnp,pt
inc
add
push
mov
jl
in
dec
cmc
jle
add
push
mov
pop
test
inc
lahf
push
pusha
and
or
stc
in
push
mov
nop
add
out
call
xchg
pop
lret
jp
orb
xor
pop
jle
mov
fwait
push
cmp
jle
inc
sub
loop
jnp
leave
jmp
push
or
jle
in
push
je
scas
loope
push
push
loop
stos
adc
xchg
inc
push
cltd
inc
adc
push
fdivp
dec
mov
mov
hlt
fldl
pop
push
in
bound
rolb
lds
push
jge
mov
loopne
in
js
inc
xor
xchg
dec
cltd
lret
jg
call
in
jg
sbb
xchg
inc
pop
call
dec
mov
xlat
sbb
roll
xchg
pop
jle
dec
push
cmp
and
adc
xchg
mov
add
mov
push
mov
sbb
xchg
sbb
xchg
and
jg
mov
int3
sub
test
mov
pop
mov
mov
gs
pop
fists
in
push
stc
out
inc
out
test
dec
adc
int3
add
xchg
push
pop
jg
inc
cli
push
adc
sbb
mov
pop
jns
sub
daa
mov
push
mov
mov
fisttpll
jp
push
sub
xchg
lret
testl
jge
sbb
mov
mov
scas
or
inc
or
pop
and
jle
in
add
loop
pop
or
stc
in
and
adc
test
setp
sub
push
inc
repnz
pop
loope
les
pop
dec
int3
push
ret
mov
sbb
mov
cld
frstor
popf
int
es
pop
fistpll
orl
push
imul
push
shll
mov
in
sarb
adc
lock
mov
js
xchg
mov
mov
cmpsb
cmp
pop
fsts
insb
dec
push
add
scas
mov
inc
or
push
push
cmp
popa
adc
aam
popf
adc
xchg
repnz
sub
mov
mov
das
sbb
mov
imul
ja
lock
cmp
dec
js
and
sbb
out
xchg
cmpsb
mov
mov
cmp
fsubrs
inc
mov
aaa
mov
xor
adc
ds
xchg
jp
push
push
out
pop
cmp
leave
in
push
fisubrs
sbb
xlat
push
add
inc
and
scas
in
push
dec
pushf
mov
lret
das
jmp
adc
jno
pop
or
cli
les
mov
mov
and
daa
pop
jns
pop
flds
mov
mov
mov
push
pop
dec
jge
aam
flds
mov
mov
cmp
lahf
inc
inc
jmp
and
dec
xchg
push
pop
jns
in
jg
gs
outsb
insb
dec
int3
or
inc
clc
in
enter
sti
fimuls
out
xchg
jg
ficoms
nop
push
mov
cli
pop
jle
in
mov
inc
inc
lret
mov
fs
in
mov
jmp
test
pop
fldcw
enter
jecxz
leave
dec
push
divb
or
pop
mov
or
lret
push
stos
xchg
loop
push
shlb
ja
mov
fisttpll
pop
jns
pop
insb
add
sbb
inc
mov
inc
pop
jns
xchg
and
and
push
xor
enter
push
xchg
ret
imul
or
in
push
aas
adc
inc
jno
mov
lds
sub
neg
push
mov
scas
mov
add
xchg
sub
jbe
mov
xor
sahf
mov
add
mov
flds
shlb
xchg
aaa
xor
mov
mov
and
popa
sub
sub
mov
inc
scas
xor
mov
xchg
adc
cmp
lret
lods
jo
xor
xchg
push
ficoms
add
repz
and
pop
xchg
divl
in
mov
rorb
test
clc
mov
jg
mov
and
add
mov
pop
dec
mov
cmp
jl
xchg
mov
aas
and
jle
inc
and
lods
jl
adc
leave
dec
mov
nop
in
clc
repnz
xchg
roll
in
aaa
mov
cmp
mov
mov
xchg
ja
jge
in
push
test
push
push
nop
sub
mov
cld
imul
iret
fsubl
and
pop
jle
in
imul
sub
mov
sarb
mov
dec
test
mov
sub
dec
add
jge
mov
mov
jge
dec
xchg
and
push
aas
push
inc
xchg
pop
jle
stos
imul
mov
in
push
insb
lahf
out
fstpt
sub
test
popf
addb
std
movsl
sub
iret
aad
fimuls
es
idivl
enter
std
popf
sarl
out
dec
lods
mov
jo
add
jmp
repnz
stos
dec
push
xorb
mov
in
cmp
out
inc
and
pop
inc
popa
jo
je
sahf
and
pusha
mov
scas
cmp
or
pop
jecxz
inc
pop
mov
ja
rorl
das
lcall
mov
jb
sar
xchg
adc
jle
cld
repnz
mov
gs
mov
pop
ljmp
jg
pop
adc
iret
cltd
pop
and
adc
lea
jne
js
jns
push
stos
iret
fcomi
jp
add
pop
imul
in
pop
adc
push
stos
aaa
dec
shlb
push
dec
in
pop
jle
sbb
inc
lret
enter
xchg
jge
mov
aas
loop
fisttps
xchg
jmp
loopne
sub
leave
mov
push
pop
jns
in
ret
jl
mov
in
aam
fucomip
into
xchg
cmpl
das
mov
pop
jns
xchg
les
in
mov
jae
jb
xchg
push
mov
mov
add
cmp
inc
ss
dec
lret
mov
xor
stc
in
negl
or
mov
fisubrl
ds
mov
xchg
mov
std
rclb
das
jno
andl
sti
arpl
cmp
test
enter
xchg
or
pop
mov
mov
popf
idivl
add
jns
sbb
push
push
inc
cmp
stos
mov
mov
lea
add
jns
mov
sete
fbld
fsubrl
or
fisttps
add
in
push
inc
inc
push
push
mov
rcr
fs
pop
je
mov
das
cmpsb
scas
mov
enter
jl
mov
push
repz
jnp
lret
add
jle
iret
insb
jle
mov
lret
das
mov
idiv
sub
fisubrl
mov
ljmp
jae
jo
scas
mov
and
pusha
scas
mov
mov
or
dec
pop
or
out
pop
jns
movsl
sbb
mov
inc
mov
jns
xchg
loopne
cmc
into
ljmp
test
out
in
xor
push
add
out
xchg
cmp
add
fidivrs
lret
das
mov
loope
cmp
std
inc
mov
nop
jecxz
mov
sbb
cld
shrl
sub
sub
outsl
jb
sub
mov
mov
bound
cld
jecxz
mov
mov
add
popf
mov
subb
xchg
test
jp
push
lods
cs
and
jnp,pn
pop
fsts
cmp
dec
dec
test
mov
aas
jne
adc
gs
jnp
lret
leave
push
mov
pushf
pop
adc
das
mov
inc
into
bound
sbb
repnz
push
xchg
jmp
add
aad
stc
in
sbb
scas
dec
xor
in
pop
sbb
mov
mov
jae
and
mov
lcall
das
mov
fcoms
stos
mov
es
mov
shlb
hlt
xor
or
es
repnz
das
inc
lods
mov
mov
lret
inc
and
pop
sbb
inc
or
jmp
push
stc
sub
mov
mov
mov
cld
repnz
clc
divb
sbb
cmp
inc
xchg
dec
stc
in
and
add
das
xchg
or
pop
jle
ja
jmp
int3
jl
lcall
add
mov
ficomps
mov
sub
ss
or
aaa
xor
mov
imull
ss
and
stc
in
xchg
mov
clc
pop
stos
dec
aad
aas
in
pop
jle
lea
leave
faddp
rcll
jle
xor
add
int
pop
jle
in
or
hlt
sub
ds
testb
xor
rcll
rolb
jge
jb
int3
repz
repnz
outsb
dec
mov
xchg
mov
xor
jle
repnz
jmp
pop
jns
ret
test
inc
mov
xchg
imul
xor
mov
pop
jle
in
jmp
cmc
daa
xchg
inc
icebp
pop
add
sbb
pop
sub
movsb
adc
mov
movsb
imul
nop
fldenv
pop
rorb
sbb
mov
adc
jb
jl
sub
repnz
rcl
daa
cmp
stos
add
loopne
stos
aaa
xor
mov
inc
fwait
sub
xlat
popa
mov
jl
push
xchg
ss
scas
lods
test
loop
sub
mov
pushf
pop
imul
aaa
nop
mov
mov
xor
inc
das
dec
push
pop
jns
subb
outsb
notl
stos
inc
mov
sahf
scas
mov
enter
mov
movsl
mov
pop
inc
xchg
lahf
nop
cld
ja
daa
sbb
stc
repnz
lcall
pushf
repz
ret
es
jb
cld
roll
xor
jns
push
pop
sbb
cld
add
lahf
sub
mov
sub
jae
xchg
and
xchg
or
repnz
jbe
imul
mov
mov
mov
adc
pop
push
mov
scas
int
push
stos
cld
repnz
das
xor
pop
lods
int3
mov
daa
movsl
rcl
push
shlb
mov
test
out
test
mov
fwait
or
xchg
push
fiadds
call
iret
pop
arpl
sub
jns
add
cli
imul
mov
cltd
jl
in
lret
jg
push
push
inc
and
pop
add
out
or
sub
adc
mov
cld
leave
pop
gs
cmp
xchg
push
out
loopne
sbb
repnz
jg
jnp
enter
in
aaa
inc
test
xchg
das
mov
push
xor
pop
dec
sub
add
ss
icebp
jae
repnz
add
xor
cld
sbb
pop
jns
xchg
dec
notl
push
xor
cmp
imul
and
in
pop
jle
jg
cs
push
std
mov
xchg
pop
jle
mov
push
data16
daa
jno
push
push
lahf
pop
jle
in
mov
in
stc
rolb
subb
push
clc
enter
xchg
in
push
lahf
cwtl
xor
scas
mov
or
sti
sub
outsl
push
scas
mov
call
rolb
sub
gs
add
sub
les
or
mov
das
xchg
pop
ss
les
cmp
movsb
aaa
pop
cli
mov
xchg
pop
jge
sbb
sub
mov
lret
sbb
jle
in
cmpsl
lcall
add
xorl
stc
in
push
mov
pop
push
arpl
pushl
mov
mov
jmp
sahf
xor
dec
outsb
pop
notl
add
inc
testb
add
adc
jae
dec
add
lret
loope
std
cli
pop
std
cmp
mov
stc
push
mov
adc
mov
sub
adc
ret
push
scas
mov
mov
cltd
icebp
xchg
data16
push
pop
mov
sbb
sti
mov
sti
repnz
imul
icebp
add
jecxz
mov
mov
adc
pop
stc
packuswb
adc
inc
xchg
jle
stc
test
das
in
dec
popf
and
stos
aam
in
pop
jle
mov
pop
imul
mov
cli
in
inc
divb
lret
imul
cmpsb
les
out
gs
repz
lods
mov
xor
lret
das
pushf
dec
add
jp
sahf
mov
and
mov
mov
xchg
pop
fwait
test
xor
scas
ja
pop
sbb
jnp
sub
and
popa
loop
pop
jle
in
lret
fbld
test
and
loopne
lret
loope
xchg
mov
mov
cld
push
jmp
in
out
adc
adc
push
stc
in
rorl
push
aaa
inc
outsl
xorl
xchg
mov
mov
in
pop
jle
lods
popa
pop
push
pop
cmc
push
cwtl
sarl
mov
pop
jle
divl
fwait
loopne
jl
das
cmp
jnp
bound
pop
and
js
push
jle
mov
loope
pop
filds
push
adc
lret
das
mov
pop
out
sbb
outsl
imul
pop
stc
repnz
mov
es
inc
adc
xlat
jns
push
jbe
jecxz
cltd
cmp
das
sti
jg
stc
jnp
pushf
mov
add
icebp
pop
jge
push
xchg
adc
push
scas
dec
pushf
lods
or
or
xchg
pop
int
or
mov
enter
and
fiadds
loopne
movsl
pop
push
ss
aas
fwait
xchg
test
xchg
in
push
pop
bound
int3
mov
xchg
push
pop
jns
iret
idiv
addr16
dec
jecxz
push
lahf
repz
pop
jns
and
outsb
cmp
mov
lock
xchg
repnz
push
mov
test
mov
lods
cmp
push
mov
cmp
push
out
xor
push
stc
in
int3
or
dec
push
gs
jns
daa
in
das
incl
push
pop
call
xchg
ja
movsl
inc
jge
adc
sub
mov
int3
test
and
cmp
in
mov
out
mov
cmc
dec
mov
jle
nop
addr16
mov
arpl
xchg
cld
mov
fsubs
pop
lea
fiaddl
pusha
adc
repnz
das
sub
xchg
or
jge
fbld
lret
das
mov
mov
inc
ljmp
shrb
icebp
repnz
inc
push
stc
repnz
push
mov
or
push
ret
xchg
jle
xchg
in
pop
scas
fs
or
cmp
shr
push
pop
jns
out
pushf
leave
stos
test
dec
jae
add
push
pop
jns
in
mov
sbb
in
add
push
repnz
shlb
fs
scas
lock
in
lret
neg
int3
cmp
repnz
pop
roll
mov
imul
mov
sti
cmp
and
lea
xchg
pop
jge
subl
dec
icebp
dec
pop
jle
in
sbb
out
lret
vhaddps
in
fadd
mov
xchg
popa
cli
test
imul
fisttps
sbb
leave
lock
mov
in
ja
cmp
mov
in
xchg
push
ficoms
cmp
sbb
xchg
sahf
cmc
in
leave
pop
jnp,pt
in
add
aas
mov
push
pop
jb
scas
mov
data16
je
fwait
add
enter
xchg
pop
lods
push
mov
imul
stos
repz
rcll
mov
xchg
add
loopne
cs
enter
in
sub
add
sbb
jno
fbld
mov
fisubrl
add
movsl
pop
xchg
adc
jae
jle
in
push
push
or
addr16
mov
dec
jne
xchg
xchg
test
aas
testb
jne
pop
xchg
mov
das
pushf
mov
xchg
js
xchg
xor
lock
je
and
scas
mov
flds
inc
cmp
pop
dec
shlb
aas
add
jl
rorl
repz
outsl
int3
fdivs
mov
lret
fadds
test
scas
mov
push
cmp
shrl
mov
xchg
cmp
scas
out
sub
jo
mov
mov
jge
pop
in
scas
mov
sbb
push
cmpl
nop
ds
or
push
pop
jns
mov
pusha
in
testw
and
lret
cmp
ljmp
xchg
in
sub
je
out
cs
inc
data16
bound
das
mov
test
lock
test
dec
jle
test
fwait
sti
jbe
push
mov
push
lahf
ss
cmp
jb
iret
mov
cmpl
mov
pop
leave
ljmp
ss
sub
imul
ds
aas
cld
stos
cltd
movsl
cmpsb
pop
jns
xchg
jg
mov
lds
jae
lods
repnz
push
or
cwtl
jg
lret
mov
outsb
pop
or
sahf
jle
scas
mov
cwtl
idivb
xchg
test
scas
mov
or
es
fadd
cmpsl
cmpsb
and
lcall
xchg
aas
inc
jo
in
scas
or
push
popl
mov
out
lahf
iret
cmp
adc
lret
add
lds
mov
pop
and
scas
mov
sbb
ficoml
in
cmc
fldenv
jle
rclb
imul
add
pop
jns
imul
sub
add
stos
sub
and
jo
nop
jae
andb
lds
jb
mov
in
cltd
or
ds
ds
pop
fistpll
and
lahf
shl
das
jmp
ja
mov
and
popf
lea
push
dec
das
pop
stos
sti
shl
enter
imul
adc
push
pop
stc
mov
lds
repnz
repnz
outsb
nop
push
adcb
ret
das
lcall
stc
sbb
call
push
dec
mov
xor
push
mov
mov
aas
jl
lret
das
fs
std
fcoms
cmpb
outsl
dec
repz
clc
in
pop
pop
inc
and
mov
adc
imul
mov
add
ret
popf
lea
mov
add
ljmp
mov
xor
leave
pop
pop
sub
pop
jns
mov
repnz
icebp
push
push
push
add
mov
sub
cld
loop
and
dec
inc
pop
push
inc
test
sar
aaa
scas
mov
aaa
xor
clc
cmp
sbb
ljmp
jbe
ds
jb
out
sub
fisubl
leave
jnp
enter
popf
hlt
enter
adc
jmp
sbb
jns
popf
psrld
mov
jmp
mov
and
xlat
add
cmp
lock
jle
in
scas
insb
mov
fidivs
inc
xchg
dec
jle
in
and
ret
ja
movsl
or
pop
mov
popl
repnz
pop
and
das
mov
push
iret
jnp
cmpsb
pop
xchg
inc
lret
das
jg
adc
sbb
push
addl
repnz
fucom
jae
stos
fsubl
sbb
jge
loopne
mov
cld
lret
in
dec
nop
mov
stos
push
repz
jle
in
sbb
cmpsb
adc
dec
pop
stos
pop
pinsrw
jmp
andb
stc
in
pop
xchg
jl
push
or
adc
push
aam
lahf
dec
jb
leave
fs
jg
xchg
call
pop
and
fidivrl
mov
out
push
mov
mov
sbb
cld
repnz
das
mov
mov
cmp
in
xchg
das
mov
or
sti
jns
sbb
test
outsb
std
in
push
pop
cltd
jbe
sti
mov
fdivrs
movsl
scas
mov
pop
rolb
push
orb
sbb
in
scas
test
sbb
out
mov
shll
cmp
sbb
sbb
imul
lret
mov
divl
fucom
lods
mov
push
jae
dec
shrb
jns
or
ret
daa
mov
in
push
pop
jne
xchg
and
xchg
push
pop
jns
xor
push
das
add
lds
das
mov
and
xor
ljmp
pop
lock
test
cltd
adc
lret
das
jecxz
xorb
fucomp
inc
pop
jns
mov
lods
mov
loope
xor
inc
shl
imul
bnd
and
aaa
pop
popf
xchg
push
je
cld
repnz
mov
pop
test
mov
push
sbb
lret
das
mov
shrb
std
insb
enter
das
mov
jge
test
lret
arpl
pop
stc
bnd
in
jl
jl
add
mov
jge
cmpsl
xchg
xor
mov
pop
dec
lds
jle
add
add
icebp
shrl
lcall
jns
push
sbb
push
inc
repz
mov
push
int
arpl
xchg
mov
pop
lds
mov
lret
xchg
push
lret
mov
pop
mov
and
cmp
repnz
loope
daa
push
ret
negb
pop
mov
sbb
ds
jne
fs
dec
pop
stc
ret
jo
es
stc
repnz
das
lea
push
cmp
xchg
jge
or
fistpll
xchg
sub
and
sub
iret
cs
or
mov
rolb
in
dec
fnstenv
mov
sahf
ljmp
mov
mov
out
lret
dec
outsb
fstpl
cmp
lret
push
ja
and
sub
pop
jge
jno
fildl
int3
loopne
xchg
pop
jle
leave
jnp
test
and
add
into
ds
int
jae
inc
in
dec
xlat
adc
and
repnz
mov
ja
sbb
call
push
in
das
mov
add
cmova
jge
rorb
jmp
fs
jmp
inc
jle
in
lret
inc
xorb
xchg
mov
stc
in
inc
call
push
in
imull
sub
aam
inc
fidivrl
pop
lret
mov
icebp
and
or
insb
out
pop
inc
mov
in
inc
or
test
xchg
mov
lock
cmp
lcall
mov
bound
rcrl
subl
cld
repnz
mov
lock
push
cmp
pop
or
repnz
lret
dec
xor
imul
pop
enter
push
sahf
lcall
subb
pop
jle
neg
push
fwait
dec
mov
les
sbb
in
cwtl
add
push
stos
sbb
js
popf
loopne
shrl
in
jg
dec
mov
cwtl
push
cmp
flds
clc
das
ds
jns
xor
inc
je
or
cld
repnz
aaa
sub
lds
add
lret
or
cmp
pop
and
mov
sbb
inc
ljmp
mov
in
jno
add
pop
jns
xchg
testl
fs
clc
call
in
push
pop
pop
pop
int
and
ja
les
jns
loopne
dec
dec
cmp
and
out
jge
in
stc
inc
movsl
lock
popf
fnstsw
pop
sub
pop
loope
mov
cmc
notb
imul
add
jns
sub
jne
xchg
aad
aas
inc
sbb
jns
xchg
sub
inc
push
cmp
lods
repnz
leave
xor
mov
cld
repnz
xor
out
xor
pop
sbb
popa
inc
daa
repnz
das
mov
imul
cld
repz
add
int
jae
bound
push
xchg
pop
mov
loop
jge
or
jle
inc
ljmp
jp
das
mov
shll
into
or
loop
jge
xor
mov
adc
repnz
adc
es
repnz
das
iret
inc
test
imul
stos
imul
mov
push
sub
or
stc
in
push
out
xor
mov
cmp
stc
in
lods
jecxz
repnz
scas
cmp
fbstp
and
cli
jp
add
xor
sub
mov
mov
in
mov
outsl
jge
mov
les
aam
lea
dec
loopne
push
sti
fisubs
in
mov
jne
loop
cli
fisubrl
push
in
jge
mov
mov
stos
push
sub
xchg
xchg
sbb
lds
aaa
inc
lahf
push
lods
inc
push
out
inc
mov
push
lcall
mov
scas
mov
iret
int3
sub
jg
dec
mull
sbb
inc
xchg
sbb
lock
push
pop
dec
test
sub
xor
into
repnz
iret
int3
in
adc
sub
repz
mov
bound
or
or
add
dec
dec
and
out
repnz
mov
mov
data16
clc
out
repnz
das
mov
lock
movsl
mov
xchg
iret
and
stc
repnz
pop
add
jmp
addr16
and
cmpsb
and
dec
addr16
dec
sti
mov
jl
cld
repnz
mov
cmp
pop
add
add
mov
repnz
das
mov
xchg
out
mov
xchg
pop
cmp
adc
inc
dec
add
pop
jle
in
dec
xor
pshufw
mov
xchg
cs
inc
cmp
test
clc
mov
movsb
jae
pop
mov
jmp
mov
xchg
repnz
iret
dec
in
adc
shr
sub
mov
lret
je
jne
stc
ja
mov
jnp
rorl
loope
in
lods
adc
pop
aad
popf
movsb
jg
pop
jns
cmp
out
and
jle
in
insb
pop
sbb
jge
cwtl
mov
jl
in
pop
stos
aam
ljmp
xchg
arpl
jle,pt
fnstcw
ds
xor
shll
repnz
lds
adcl
in
aam
leave
incl
int3
stc
in
std
jecxz
mov
cmp
cmp
out
rclb
xchg
mov
sbb
leave
mov
sahf
je
cmp
loopne
or
adc
das
cltd
push
pop
jns
mov
jle
lret
repz
pop
jns
xchg
jns
add
lret
and
in
sub
xchg
push
push
dec
aad
mov
testb
mov
or
jbe
pop
and
arpl
and
jns
push
xor
test
mov
cmp
in
jnp
repnz
int
daa
fistpll
leave
inc
mov
push
jmp
sbb
adc
insl
jae
rorl
push
aas
xchg
pop
jle
mov
mov
adc
add
in
gs
and
lret
mov
test
cld
cmp
push
dec
rolb
cld
repnz
repnz
fbld
outsb
ficomps
fwait
sbb
dec
or
push
push
add
aaa
popl
add
rcll
cmp
scas
mov
lods
fs
pop
in
loop
dec
dec
daa
out
repnz
mov
cmc
xchg
fdivs
les
cld
push
sbb
sub
mov
pop
aam
xchg
shlb
mov
pop
push
cmp
les
mov
push
inc
add
les
inc
pop
adc
add
fwait
data16
enter
jmp
pop
mov
sub
jnp
xchg
jg
pop
shl
push
inc
cmc
sahf
ds
fisttpl
jge
jl
in
in
sub
push
test
test
and
enter
push
adc
xor
aad
test
fstpt
push
movsb
pop
jns
cmp
add
xchg
cmp
jns
xchg
push
movsl
imul
orb
push
push
pop
dec
ret
push
test
push
in
icebp
dec
sti
cld
sti
enter
pusha
inc
xchg
adc
add
xchg
push
ficoms
inc
sub
pop
fcoml
jns
int
cmc
xor
xor
stos
and
jno
sbb
jg
in
xchg
jno
xchg
in
lret
das
adc
mov
add
sub
aaa
dec
test
inc
lock
pop
jns
sar
inc
dec
pop
in
sub
pushf
ja
stc
popf
stc
in
jg
sbb
das
fwait
cs
addr16
int3
sub
jmp
pop
jle
and
xchg
outsb
add
lret
pop
daa
jbe
pop
jns
mov
mull
rclb
out
stos
fidivl
addb
ds
movsb
nop
mov
pop
iret
push
in
lret
fists
pop
add
pop
mov
xchg
daa
stc
movsb
inc
scas
mov
fcompl
dec
movsl
shrb
jns
cmp
fldt
int
jecxz
jns
adc
cld
jo
dec
push
dec
mov
push
fnstsw
dec
dec
mov
movsb
jns
jmp
fldcw
pop
push
mov
scas
in
push
pop
mov
aaa
adc
mov
jns
cmp
push
pop
jae
mov
xchg
push
pop
std
sub
push
lds
mov
xchg
push
pop
jns
xor
sbb
repnz
aam
mov
movsl
fs
inc
fisubrs
shrb
push
pop
jns
int3
jge
sub
inc
rcr
and
inc
add
xchg
xchg
add
xor
sti
mov
xchg
pop
jle
adc
mov
out
xchg
pop
jle
or
sbb
sti
push
dec
fnstcw
out
test
mov
fistl
pslld
xchg
jg
outsl
push
mov
dec
inc
vmread
mov
sbb
jge
mov
mov
enter
mov
test
imul
xchg
sub
lret
aam
lock
jle
test
lods
fimull
stc
push
incl
stc
in
leave
xchg
mov
outsl
inc
xchg
mov
jle
in
mov
push
inc
add
stc
in
pop
lods
xchg
xchg
pop
inc
adc
fwait
mov
enter
out
repz
jae
mov
inc
push
ficomps
cli
es
cmp
xorl
repnz
rolb
or
push
fmul
sub
ljmp
popa
or
sub
sbb
fsubl
cmp
push
cld
repnz
das
hlt
cld
jnp,pn
jns
ja
outsb
in
mov
shlb
fisttpll
mov
cmp
and
in
jbe
fcomp
cltd
imul
mov
xor
pop
jns
xchg
rcll
movsb
cmc
lds
sbb
in
xchg
push
or
and
jl
aas
outsb
test
inc
push
xchg
jne
or
cmp
gs
mov
jae
adc
cwtl
push
sbbl
lock
rep
fwait
lods
sbb
adcb
jl
aam
adc
std
pushf
loope
mov
adc
jae
ret
pop
pop
jle
in
or
loopne
stos
add
xchg
data16
cwtl
sub
mov
stc
in
pop
or
cmpsl
cmpsb
adc
sbb
xchg
pop
jle
and
movsl
xorb
bound
shll
dec
ret
pop
jae
jbe
das
ds
lock
mov
xchg
fbld
fsubrl
mov
call
lods
jecxz
mov
mov
cld
repnz
in
push
ror
daa
popf
push
fiaddl
outsl
jge
push
stc
in
and
insb
loopne
xlat
out
cs
das
lcall
cmpsl
mov
mov
inc
sub
push
das
mov
negl
mov
push
sub
icebp
mov
inc
inc
sbb
loope
push
and
xchg
mov
and
and
jno
pop
jns
push
movsb
jecxz
out
sub
xbegin
push
sbb
sarl
mov
lret
das
add
rcrl
scas
add
dec
sub
inc
pop
loope
into
scas
iret
jnp
sti
das
mov
pop
xor
inc
mov
mov
aad
jg
in
push
inc
rcrb
insb
leave
mov
jns
jmp
sub
ds
adc
mov
lock
out
lds
mov
inc
pushf
xor
outsl
xchg
sti
imul
push
pusha
mov
inc
mov
repz
and
test
in
push
or
icebp
push
pop
cld
jnp
pop
mov
jl
test
push
fiadds
roll
cmp
ljmp
adc
std
lahf
pop
scas
and
hlt
out
and
xchg
pop
dec
fmuls
insb
stos
sub
jb
in
pop
jle
cwtl
jp
cmc
sbbl
es
jg
pop
jle
dec
or
std
rorb
fmuls
ds
mov
sub
or
orb
inc
cs
in
insb
fnstenv
push
lds
movsb
ret
clc
mov
cld
repnz
das
xlat
jecxz
push
mov
xchg
mov
sbb
filds
mov
jae
or
xchg
pop
jle
dec
std
push
rcrb
out
hlt
mov
pop
pusha
fs
jecxz
or
add
test
pop
jns
mov
cmp
xchg
xchg
push
dec
fidivrs
fwait
notl
les
xchg
pop
jle
xor
xchg
sbbl
fidivl
es
add
stc
in
xor
sbb
mov
or
xchg
stos
scas
and
xchg
push
xchg
stos
movsl
jg
jae
fsts
jns
adc
push
xchg
mov
sti
test
shlb
jle
in
lcall
sarb
push
or
stos
enter
nop
movsb
pop
jp
mov
in
in
jns
mov
lea
jl
int
push
jp
xchg
lret
stos
xor
push
push
je
jl
imul
xchg
add
fld
fmuls
lret
fs
push
jne
sbb
inc
xchg
in
clc
enter
in
fs
icebp
sahf
fs
cld
jnp
sbb
and
lock
mov
cmp
fldcw
int3
movsb
jmp
enter
or
fadds
out
in
aam
cmp
adc
jg
sub
jns
popf
addl
push
xchg
loope
pop
pop
jns
xchg
sarl
imul
pop
sti
lds
pop
jle
in
movsl
cmc
add
mov
mov
in
pop
add
xchg
sahf
cmp
icebp
xchg
add
xchg
pop
jle
xor
push
mov
mov
xchg
pop
jle
jae
in
inc
pusha
lds
aam
enter
xor
and
cld
sti
mov
adc
inc
adc
pop
loopne
dec
cmc
push
pushf
lret
pop
insb
xchg
hlt
mov
push
or
repnz
imul
push
pop
adc
push
mov
sbb
cmpsl
cmc
pushf
lds
cld
repnz
or
aam
xchg
dec
shrl
adc
sbb
adc
in
pop
and
mov
icebp
jnp
mov
and
stc
inc
jns
jmp
scas
dec
and
in
xchg
sub
and
mov
fimuls
lahf
jmp
sub
push
and
in
push
xorl
push
clc
dec
shl
xchg
push
pop
cmp
sarb
sbb
push
xchg
push
pop
jns
lahf
movsl
repz
adc
outsb
push
les
sub
pop
lods
arpl
clc
pushl
js
lods
dec
jl
mov
push
cld
repnz
das
das
inc
sbb
adc
or
out
push
inc
mov
push
cltd
jmp
jb
jmp
rorb
insl
hlt
jmp
xchg
testl
nop
test
mov
and
push
lret
lahf
xlat
jle
test
loopne
mov
mov
out
mov
and
mov
xchg
out
insl
xchg
ja
sahf
int
sarl
pop
xchg
arpl
jns
add
push
in
sub
and
adc
adc
in
xchg
xlat
fisttpl
jge
int
pop
outsb
fisubs
push
jbe
inc
jnp
stos
repz
sub
dec
and
lret
inc
cwtl
push
insb
sub
les
lahf
int3
mov
pop
adc
adc
mov
push
sti
sub
les
mov
filds
mov
dec
jmp
scas
mov
xchg
and
push
mov
mov
jmp
xchg
cmp
leave
sub
scas
pop
push
movsb
xlat
shlb
mov
dec
outsl
adc
xchg
sti
ss
fbstp
out
push
cmp
test
mov
mov
icebp
pop
stc
repnz
das
fldl
xor
inc
pop
add
fistpll
xor
repnz
mov
data16
out
jo
fs
je
or
xchg
push
xchg
adc
in
push
pop
jo
outsl
mov
mov
jns
das
faddl
lea
sub
inc
lods
call
jl
push
xor
mov
cs
mov
add
dec
popf
inc
sub
push
popa
cwtl
mov
inc
push
fidivs
cmpsl
fnstcw
mov
repnz
and
mov
mov
xchg
sbb
imul
jle
in
lahf
inc
das
test
or
stc
in
dec
jbe
ja
aad
outsl
mov
inc
pop
jge
jmp
pop
inc
das
sub
daa
sub
jns
xchg
movsb
stos
icebp
jne
stc
mov
in
jne
imul
cmc
inc
inc
lea
sbb
jne
adc
cmc
and
pop
jns
jno
xor
ljmp
inc
inc
fbld
sub
xor
in
in
rorb
jge
outsb
mov
stc
test
mov
xchg
icebp
call
repnz
xchg
pop
rcrb
add
jp
dec
cmpsl
pop
pusha
xchg
mov
pusha
mov
pop
inc
stos
outsb
pop
push
xchg
pop
jle
lea
mov
insl
cld
aas
xor
cmc
mov
and
cwtl
fsubl
push
test
lods
jecxz
ljmp
lcall
pop
dec
xor
inc
xchg
lret
call
enter
inc
cmpb
rcr
adc
inc
pop
jle
notl
fnsave
add
rcrb
stc
in
xor
pop
clc
jmp
idiv
lock
in
pop
mov
xor
aad
mov
lret
mov
adc
imul
jge
mov
lahf
sarb
aam
pop
je
mov
cld
repnz
xchg
jge
mov
dec
mov
lret
sbb
mov
in
dec
push
ja
cli
lods
stos
lret
das
mov
sbb
xchg
ds
aad
inc
daa
mov
inc
lock
mov
pop
daa
jl
lret
mov
push
push
inc
hlt
xchg
mov
popa
sub
xorb
loopne
ret
push
ss
adc
stc
push
setnp
lret
jno
sti
cmpsb
repnz
xchg
in
and
and
and
pusha
scas
mov
in
ljmp
repnz
mov
mov
xlat
push
fwait
mov
fmul
repnz
cmp
movsl
adc
dec
aam
jbe
cwtl
aaa
and
mov
dec
adc
sub
out
fisttpl
xchg
xchg
mov
lea
sub
sarl
cmc
ret
fiadds
repnz
lret
mov
xchg
sbb
mov
xor
push
ret
push
push
cmp
cs
lea
in
jle
and
aaa
insl
sbb
xor
stc
in
pop
movsl
jb
inc
or
push
mov
pop
jle
je
sbb
inc
sub
push
iret
aas
imul
push
nop
int
fwait
pop
das
jnp
push
pop
jns
sub
mov
adc
popa
mov
push
jns
jnp
dec
cmp
inc
jle
sti
das
mov
gs
das
mov
cmp
sbb
das
mov
mov
aaa
addl
adc
stc
ja
jp
cmp
and
daa
mov
jp
js
xchg
pop
ss
add
in
push
fimuls
enter
std
cli
push
arpl
sahf
xchg
push
pop
jns
xchg
aas
stc
call
cli
jns
and
flds
pop
jb
jae
xor
dec
loopne
clc
mov
jb
or
fs
push
or
movsl
stc
adc
lahf
enter
and
push
ficoms
push
mov
lock
cld
or
jb
push
lods
push
inc
dec
xchg
xchg
inc
cmp
xor
aam
cmc
cmp
sub
mov
lahf
fwait
clc
cs
test
out
sub
jno
loop
and
pop
jnp
jl
jno
fcomps
mov
and
jnp
lret
pop
loopne
pop
mov
jo
adc
mov
or
cld
repnz
rcl
gs
push
and
out
dec
jmp
pop
adc
sub
xor
xchg
push
pop
jns
mov
cli
sbb
dec
mov
jle
imul
stc
and
adc
pop
pushf
cmp
je
adc
mov
xor
jle
in
clc
lea
xchg
inc
mov
jo
mov
stc
in
pop
jno
rcr
xor
fildll
in
out
or
movsl
addr16
stos
push
daa
and
cmp
lcall
loope
jns
xchg
aaa
inc
dec
or
hlt
mov
mov
loop
jno
add
xor
add
lcall
movsl
sahf
out
cmc
enter
mull
leave
aad
je
je
and
sub
call
xchg
mov
mov
inc
or
pop
mov
jo
pop
jns
sub
xchg
jge
iret
adc
or
xchg
xchg
xchg
fadds
lahf
enter
xorps
inc
leave
out
push
aam
xchg
cmc
pushf
inc
jne
fidivrl
xchg
cmp
push
test
lahf
aaa
lret
inc
dec
test
dec
scas
xchg
jae
add
push
mov
xchg
inc
lds
sarb
das
mov
cmp
mov
movsb
jge
sbb
jle
xor
push
lret
fsubr
cld
xchg
dec
scas
lretw
test
mov
lret
das
in
pop
icebp
pop
js
or
inc
mov
dec
imul
pop
jmp
insb
pop
fldt
lods
test
fistps
xchg
adc
lea
fisttps
lea
cmp
ficoms
in
pop
adc
scas
xchg
and
jns
xchg
push
mov
loopne
mov
lods
jl
push
xchg
push
pop
pop
cli
dec
dec
sbb
push
mov
call
xchg
mov
adc
lret
das
mov
xchg
daa
sub
cld
repnz
pop
out
and
cmp
lahf
cmp
adc
sub
adc
in
pop
decb
cld
fwait
aaa
xor
ds
mov
dec
sahf
mov
into
arpl
sub
sar
repnz
das
mov
jno
fcoml
ret
add
lret
das
mov
push
popf
pop
and
das
mov
rcrb
pusha
jnp
or
stc
repnz
scas
mov
dec
imul
xchg
lret
push
mov
subb
jbe
stc
in
pop
inc
cwtl
sub
gs
lds
xchg
pop
jle
xchg
enter
aad
lock
jle
add
mov
xor
jle
in
adc
xor
add
adc
xchg
mov
jl
in
pop
enter
mov
js
loop
sub
sub
push
iret
jle
pop
pop
xchg
push
pop
jns
and
lods
fistpll
mov
adc
jns
popf
ds
lods
sub
iret
cmp
jns
xchg
nop
shll
insb
imul
xchg
pop
jge
xchg
xlat
cmp
push
mov
fwait
inc
divl
repnz
fwait
int3
xchg
sub
insl
inc
insl
ja
sbb
in
mov
mov
into
enter
pop
outsl
and
inc
xor
stos
stos
mov
in
jne
and
add
in
and
daa
popf
mov
sbb
pop
jle
xor
xchg
fdivp
cmp
insl
mov
pushf
push
jge
outsl
inc
pop
jns
inc
mov
adc
sub
push
in
scas
das
mov
sub
jge
enter
leave
xchg
in
lock
adc
sub
bound
xchg
push
pop
jns
add
pushf
pop
inc
daa
sahf
les
push
pop
jns
stos
add
mov
xchg
mov
xchg
add
mul
lods
sti
sub
das
sbbb
mov
insb
int
das
mov
xchg
into
getsec
icebp
insb
pop
jp
lret
push
sarl
sbb
fsubs
lret
dec
shr
scas
xchg
fldl
mov
jp
xchg
xchg
mov
add
lcall
sub
iret
fsubl
out
and
pop
cld
jl
or
cli
jl
int3
mov
pop
gs
push
push
jno
push
xchg
popa
lret
xchg
jg
fsubl
mov
mov
stc
in
mov
inc
test
shll
jle
in
cmpsl
xchg
mov
out
ret
xchg
in
pop
xchg
std
loop
cmp
stos
out
out
xchg
pop
jle
adc
ds
das
mov
out
cmp
imul
imul
in
loop
adc
add
test
scas
inc
mov
into
sbb
stos
dec
pop
stc
in
pop
cmc
test
mov
imul
sbb
clc
dec
scas
sarb
insl
mov
int
or
addr16
dec
iret
in
pop
and
fsubl
ds
inc
inc
jns
lods
and
stc
push
cmp
and
dec
jmp
int3
sbbb
xchg
xchg
je
in
push
rcll
or
insl
out
add
mov
mov
xor
in
or
popf
clc
bnd
ja
dec
fnstcw
in
lea
xchg
movsb
ficomps
xlat
outsl
clc
enter
fsubrl
es
jns
pusha
xchg
push
fiadds
std
push
adc
sbb
mov
jns
lods
jae
and
inc
aaa
mov
push
jns
xchg
shl
ret
fimuls
aaa
jp
in
push
inc
dec
in
out
cli
pop
call
xchg
in
push
pop
in
inc
cltd
jl
jno
shrl
xchg
push
pop
jns
fwait
mov
sbb
hlt
inc
test
pop
jns
scas
pop
lods
ljmp
cmp
std
or
in
jmp
fs
xor
push
into
jp
jnp
inc
mov
gs
scas
mov
roll
int3
dec
cmc
sbb
xchg
cmp
pop
cmp
lret
in
jg
mov
and
in
sahf
lds
mov
ljmp
mov
movsl
mov
sbb
in
enter
stc
inc
lock
test
idivb
mov
das
cmpsb
push
and
xchg
sub
dec
repz
xchg
or
sub
inc
fcomi
cmp
cmp
mov
pop
ljmp
sub
sub
mov
xor
and
pop
add
cld
repnz
mov
cmp
adc
dec
ret
ret
addr16
das
mov
mov
inc
push
and
inc
mov
fnstsw
inc
mov
js
push
lock
add
pop
shlb
push
add
or
scas
mov
push
rolb
mov
lret
inc
push
pop
out
fidivs
or
jae
mov
jecxz
mov
mov
lea
adc
sub
lods
sub
pop
jns
aam
jle
dec
notl
mov
in
push
repz
cltd
repz
ret
hlt
fsub
xchg
pop
sahf
jge
out
sbb
add
sub
or
pop
dec
iret
or
dec
push
push
pop
iret
mov
in
cltd
mov
mov
in
pop
mov
adc
pop
push
cmp
xchg
pop
jle
insb
sub
push
ret
sbbl
adc
mov
pop
imulb
icebp
fwait
mov
jg
push
jo
scas
je
xor
mov
cmpb
inc
jle
mov
out
dec
in
mov
das
mov
sub
dec
dec
aaa
jge
jle
notl
movsb
inc
jmp
sub
mov
in
pop
enter
mov
aam
cmc
bound
les
cmpsb
jno
sub
js
fbld
mov
mov
ja
push
jecxz
and
mov
jb
je
shrl
pushf
sub
das
mov
adc
arpl
iret
clc
jno
pop
cmp
sarb
add
xor
out
jle
in
adc
mov
out
mov
in
pop
jo
pop
dec
push
in
mov
mov
cmpsb
int
and
dec
sahf
out
and
in
jnp
or
stos
repnz
cvtps2pd
nop
ret
cld
mov
into
jle
sub
hlt
out
dec
faddl
std
jnp
pop
stc
repnz
repnz
cwtl
sbb
jb
fidivrl
out
scas
cld
inc
and
nop
cs
mov
mov
shlb
sub
stos
or
scas
push
or
inc
jnp
xor
ds
lret
xchg
pop
jle
mov
jge
adc
insb
jno
fwait
repnz
jp
cmp
into
shll
jp
cmpsl
pusha
pop
repnz
mov
xchg
std
lcall
lods
mov
push
mov
je
icebp
mov
inc
sarl
xor
scas
mov
enter
stos
mov
cmp
lret
cltd
jg
bound
sub
xor
mov
in
das
shrl
sbb
dec
outsl
int
rolb
repnz
das
call
ljmp
dec
xor
pop
stc
adc
jg
test
xchg
xor
repnz
ja
jge
xor
test
inc
sahf
aam
push
cmp
std
sub
and
out
pusha
and
mov
cld
repnz
xchg
addl
call
and
xor
vpunpckhqdq
int
jl
cmp
aam
inc
mov
divb
cmp
pop
jecxz
push
or
enter
fldenv
mov
jb
cmp
inc
add
sub
dec
ret
int3
xlat
push
xchg
push
pop
jns
xor
jp
mov
jge
loop
pop
jns
or
filds
popa
sbb
mov
arpl
cld
repnz
loope
dec
repz
or
fbld
lds
cld
scas
push
pushl
mov
cmp
pop
incb
les
mov
and
std
sbb
lahf
leave
cmp
iret
xor
repnz
mov
jg
push
mov
rorl
lret
das
mov
mov
xchg
mov
mov
ret
repnz
idiv
mov
inc
aaa
lock
dec
into
add
jmp
sub
push
xchg
and
sti
repz
cld
call
std
shr
nop
lods
or
mov
loopne
inc
mov
sub
jae
cld
repnz
enter
lods
sub
pop
fcom
enter
jp
jmp
inc
push
sti
push
gs
sahf
inc
outsb
jae
mov
imul
imul
outsl
xchg
dec
pop
test
not
sub
push
mov
out
es
insl
leave
scas
mov
dec
pop
lods
in
in
mov
jo
pushf
ljmp
push
mov
cs
push
ficomps
subl
in
movsl
push
pop
jns
add
sbb
dec
js
push
mov
in
xor
mov
xchg
movsb
jg
or
addr16
pop
into
pop
jle
in
les
mov
sub
and
fmuls
ljmp
pop
jns
pushf
in
cmc
or
jo
icebp
inc
push
in
shrb
dec
cmp
and
stc
data16
repnz
and
out
out
jl
add
jmp
lret
das
mov
adc
dec
cmp
pusha
mov
mov
lret
ja
push
mov
aaa
test
sbb
das
lcall
mov
lea
add
cld
repnz
mov
scas
gs
dec
push
sbb
cli
push
sub
ss
ret
repnz
jae
idivl
fs
mov
cmpsl
lret
mov
fwait
outsl
jmp
cmp
push
mov
scas
mov
mov
ljmp
pop
mov
or
les
or
mov
sub
jl
mov
and
lods
mov
cli
jnp
cwtl
test
add
dec
lock
mov
mov
sbb
dec
arpl
das
mov
fldt
push
mov
das
mov
int
xor
mov
jge
std
xor
call
ficomps
sti
mov
or
mov
mov
lret
das
jnp
stos
pxor
jo
cmpsl
out
or
out
and
dec
out
repnz
xchg
sbb
mov
fsubrs
adc
data16
in
lea
stc
push
dec
std
xlat
mov
faddl
ss
negb
in
cmp
xor
add
and
add
and
add
cli
cwtl
pusha
cwtl
cmp
iret
test
sub
ljmp
pop
loope
mov
repnz
dec
in
mov
repnz
nop
pop
jns
lret
ret
xorl
scas
or
xchg
push
jo
pop
push
inc
cltd
or
sub
sbb
xchg
aas
sbb
pop
das
mov
dec
adc
or
add
gs
dec
mov
mov
aaa
push
ds
sbb
dec
lret
das
ds
fcmove
mov
inc
inc
outsl
out
sub
xor
or
clc
xor
lret
das
jg
mov
mov
xchg
out
fisttpl
sub
pause
stc
movsl
flds
test
mov
cltd
adc
lea
add
clc
jge
push
pop
dec
ljmp
out
adc
cld
jnp
or
mov
hlt
mov
insl
popa
mov
cmp
scas
jbe
push
inc
out
inc
sub
rcrb
nop
sub
jmp
sbb
sbb
mov
mov
adc
stos
add
loope
push
loopne
lret
pavgw
lock
stos
xchg
insl
prefetchwt1
pop
mov
lret
push
in
negl
adc
outsb
inc
neg
push
ficomps
cmp
sahf
pop
adc
sub
in
mov
dec
aam
leave
jmp
in
inc
push
and
cli
cmp
and
jge
scas
mov
mov
idivl
mov
nop
ja
mov
jle
jg
repnz
das
inc
or
ljmp
pop
adc
inc
mov
bound
out
pop
pop
pop
adc
inc
mov
mov
lods
dec
add
test
jle
in
push
sub
subl
cltd
outsl
add
repz
sahf
in
test
cmp
ljmp
jns
jp
test
xlat
dec
jl
dec
pop
pop
jns
cmc
and
js
cmp
or
cld
sti
adc
and
cmpsl
pop
and
adc
or
lret
das
mov
xchg
mov
mov
and
mov
lret
sti
fisttpll
ffree
test
out
bound
push
mov
addr16
and
xchg
sub
cwtl
push
pop
jns
test
xchg
mov
pop
cmp
adc
leave
scas
mov
lret
mov
loope
pop
mov
ficomps
cmp
adc
mov
cs
fidivrs
add
sarb
cmp
xchg
push
fiadds
lahf
rcl
jbe
out
fwait
cmc
adc
cmp
push
pop
jns
call
inc
cmpsb
stc
jbe
imul
leave
imull
ss
mov
mov
loope
inc
shl
sahf
aaa
shrl
push
cmpsl
clc
orl
add
xchg
rcr
inc
and
les
in
pop
mov
and
fwait
mov
in
pop
jle
sbb
xchg
add
sub
xchg
push
stc
in
lods
or
xor
scas
nop
mov
loope
pop
out
cmp
jbe
pusha
jge
adc
and
in
paddd
jge
cwtl
enter
jb
repz
nop
jp
cmp
hlt
jns
lret
or
jnp
inc
fsts
in
mov
sub
pop
mov
or
sbb
fbstp
xor
mov
fcompp
stos
pop
and
repz
inc
pop
jns
push
adc
cmp
enter
jns
jp
mov
jns
addl
cs
sbb
scas
inc
insl
stos
aad
push
lds
sub
popf
pop
sbb
outsl
sub
stc
sbb
cmc
cltd
push
xor
push
mov
nop
loope
orl
inc
loop
sub
xor
mov
stc
ja
test
lret
jl
adc
pop
and
xor
push
xor
xchg
pop
jle
pop
pop
lock
dec
lock
sub
cld
sti
andl
cld
sub
divl
fsubrl
aas
enter
xchg
pop
jge
adc
mov
mov
outsb
int3
lods
lahf
sbb
pop
push
leave
mov
stc
and
cmp
add
and
mov
push
push
adc
ja
xor
mov
and
sar
fs
andl
xor
sti
bound
lret
mov
cmp
cmp
mov
mov
rcr
stos
add
ja
dec
jg
cld
repnz
cmpsl
scas
xchg
sbbb
mov
loope
push
mov
cmp
pop
jmp
mov
and
mov
jns
jl
adc
xor
out
fcomi
psubq
cmp
mov
and
shrb
push
dec
pop
pop
pop
xchg
mov
cmc
sub
in
jno
mov
sub
inc
mov
cmp
cmp
lret
repnz
shlb
insl
movsw
mov
das
mov
stos
out
enter
es
mov
jmp
lahf
inc
mov
stc
in
jbe
sti
mov
insb
sbb
xchg
jno
outsb
stc
in
pop
cld
and
mov
push
sbb
jle
xchg
mov
push
push
repz
ret
fs
outsl
sbbb
gs
cmp
lret
bound
dec
leave
xor
jne
stc
in
jg
mov
lock
xchg
pop
jle
xchg
int
leave
dec
lock
stc
in
test
jecxz
fbstp
icebp
in
addr16
lcall
jle
ja
fidivrs
mov
mov
mov
les
in
insb
fnsave
sbbl
fwait
push
sbb
in
pop
scas
sbb
in
cmpsl
loopne
idivb
push
inc
out
xchg
pop
jle
inc
and
mov
inc
test
mov
je
ret
and
jne
lret
insb
cmp
or
cmpps
lret
inc
std
push
lock
bound
enter
xor
fwait
push
ljmp
jge
out
adc
pop
push
jecxz
dec
pushf
and
out
out
jbe
loope
pop
sbb
rol
idivl
mov
cwtl
dec
scas
mov
mov
sbb
rol
enter
and
jle
jnp
add
jns
adc
lods
push
arpl
sbb
fimull
in
je
and
aad
or
adc
jns
push
add
mov
jecxz
sahf
out
stc
xchg
push
pop
jns
es
sbb
repz
and
xchg
push
out
pop
and
mov
fwait
mov
xchg
and
ss
sti
push
inc
mov
sar
mov
jbe
xchg
xor
mov
pop
orb
arpl
sub
cltd
cmp
cmpsb
pop
jns
loop
popa
ja
imul
cmp
notl
inc
xor
es
cli
movsl
iret
mov
pop
jle
mov
jb,pt
inc
out
inc
dec
fstps
stc
in
cmc
mov
insb
jp
jae
cmpsb
sbb
mov
cmp
sub
imul
pop
pop
xchg
mov
clc
out
dec
add
xchg
pop
jle
arpl
mov
sahf
fsub
jecxz
sbb
stc
enter
push
cmp
ja
dec
jmp
xchg
sub
movsb
loope
outsb
clc
push
xchg
xchg
das
sti
cli
lea
fisubs
aam
xchg
pop
jle
add
sub
ja
in
mov
inc
inc
and
jg
adc
lcall
lcall
aaa
cld
pop
push
push
stc
in
pop
jg
out
adc
lock
add
mov
aad
icebp
inc
mov
mov
test
divl
in
stc
das
lock
dec
dec
sub
xchg
inc
inc
dec
loop
je
sbb
mov
imul
push
sahf
dec
movsb
ficomps
cmp
xchg
pop
mov
cmp
xchg
push
iret
cltd
stc
out
mov
loop
dec
mov
pop
inc
mov
add
xlat
out
enter
dec
pop
mov
sub
add
xor
sbb
aas
mov
mov
mov
je
jle
in
int
sub
iret
and
mov
jle
in
test
ds
and
inc
aad
in
pop
jecxz
jmp
lock
sbb
xor
jae
inc
je
mov
repnz
les
add
jno
rcr
xor
mov
lret
das
cld
adc
inc
adc
sub
ret
pop
push
mov
mov
xor
and
repnz
rolb
rclb
std
cmp
lret
mov
push
ja
push
fnstsw
bnd
aam
outsl
in
inc
jle
and
andl
pop
rcrb
sbb
into
in
jne
pop
push
das
cmp
outsb
xor
jbe
sbb
push
and
jns
cwtl
stc
int3
lret
mov
sarb
add
or
addr16
das
mov
dec
ljmp
shlb
hlt
xchg
dec
mov
cmp
lret
cs
pop
xchg
lds
fmulp
sub
fwait
in
push
loope
fidivrs
mov
mov
addr16
or
jbe,pn
lock
stc
jle
in
push
sub
inc
notl
xchg
insl
filds
mov
lcall
iret
mov
xchg
or
jge
repnz
in
sub
andl
inc
inc
gs
adc
sub
test
divb
lret
rorl
je
mov
repnz
mov
push
mov
cwtl
in
inc
scas
mov
cwtl
bnd
xchg
shll
sbb
pop
les
or
inc
pop
testl
pop
lock
pop
pop
jns
loope
stc
jle
add
add
scas
fisubrs
adc
iret
and
pop
shll
iret
popf
in
push
pop
cltd
dec
js
adcl
pop
jns
dec
mov
add
pop
lcall
popa
pop
cmp
fisubrs
cwtl
shl
lret
ja
pop
frstor
inc
inc
jnp
pop
cmp
fadd
cmp
sub
pop
cmc
jle
repnz
jbe
xlat
out
mov
jae
mov
push
or
or
jecxz
xor
cld
jge
in
das
stos
insl
xor
add
jge
mov
in
test
sti
jbe
ret
fwait
push
xchg
push
pop
jns
lahf
jge
call
sarl
mov
imul
rolb
and
cmova
mov
outsb
push
pop
jns
stos
sbb
movsl
bound
pop
jns
xchg
push
popf
push
je
dec
push
jmp
jmp
in
push
mull
xor
sub
sbbb
pop
xchg
clc
jnp
mov
in
subb
jmp
cli
jp
scas
push
rclb
lcall
repnz
or
mov
neg
and
or
or
pop
out
sub
pop
push
mov
pop
jns
in
out
int
push
bswap
sbb
mov
enter
sub
and
stos
imul
daa
mov
mov
pop
fcmovu
clc
mov
jle
ja
sub
push
fidivrl
mov
add
jmp
pop
jl
loopne
mov
outsb
xor
insl
sub
dec
fisubrl
into
xchg
sbb
cli
xor
pop
lahf
jbe
lret
loop
adc
add
lods
daa
rcr
lret
mov
fs
jnp
inc
mov
sub
xor
jl
jo
mov
lret
faddl
negl
rcl
das
push
xor
enter
call
rcrl
ret
cld
bound
pop
mov
in
mov
mov
pop
imul
repnz
aas
jl
push
cli
in
iret
xor
je
push
push
xchg
das
mov
jp
jno
mov
jae
in
test
scas
bnd
xchg
push
pop
jns
test
lock
lock
enter
cmp
xlat
push
jae
cs
push
xchg
enter
pop
push
loope
xchg
cltd
outsb
shrb
push
add
xchg
pop
jle
inc
mov
loope
dec
dec
inc
faddp
clc
ss
mov
jnp
push
movsb
out
movsl
xor
pop
shll
int
mov
sub
lds
mov
ja
inc
pop
repnz
pop
sub
lret
fwait
inc
cmp
jne
sub
call
adc
mov
popf
jecxz
test
loope
sub
mov
xchg
mov
in
leave
or
sbb
push
cmp
mov
in
push
ficomps
add
pop
mov
scas
fstl
mov
mov
test
sub
mov
iret
adc
out
lods
lods
test
or
add
jp
lret
std
lcall
mov
push
ficoms
fldcw
cli
pusha
pop
cmp
in
mov
lods
aam
inc
in
mov
cmp
pusha
inc
push
xlat
cmp
pop
rorl
das
je
add
mov
jge
das
mov
xlat
xchg
sti
cmpsl
pop
jle
testl
cmpsl
repnz
inc
hlt
cld
repnz
and
xchg
mov
sti
cwtl
jmp
les
aas
orb
lret
das
mov
xchg
pop
and
cld
mov
jecxz
pop
test
icebp
fxch
dec
ja
xlat
rclb
cltd
ss
sub
addr16
or
lock
sbb
sub
inc
das
ret
cmp
int3
stos
aam
rorl
repnz
stos
jl
je
gs
push
insl
notl
sbb
rolb
popa
fdivrl
lds
adc
imul
xchg
cli
xchg
pop
jle
in
mov
xor
xchg
fstpt
in
out
dec
mov
loopne
pop
sub
mov
repnz
pop
fisubl
pop
sbb
scas
and
cmp
lahf
std
lret
jl
or
sub
or
leave
pop
daa
call
cld
repnz
das
mov
cmpsl
ljmp
movsb
repnz
das
mov
xor
aad
cs
aaa
xchg
das
mov
and
jle
mov
cld
repnz
sbb
pop
les
es
jp
xchg
sti
push
dec
arpl
daa
xor
in
push
fisubs
int
loopne
popf
xor
xchg
dec
into
cli
xchg
push
pop
jns
mov
mull
aam
add
test
push
lahf
vpsubw
pop
cmp
stos
js
repnz
and
jecxz
pop
enter
enter
xor
jae
jmp
mov
cltd
int
fldcw
xor
xchg
in
or
pop
stc
repnz
pop
out
out
xor
bnd
pop
pop
sub
add
jg
out
imul
scas
mov
lds
fdivr
jne
lret
add
xor
sahf
decl
push
sbb
jl
lret
das
xchg
inc
or
or
lret
sub
pop
jno
pop
sub
xchg
cmc
popf
cltd
push
leave
sbb
cld
repnz
enter
xchg
mov
shlb
test
mov
repnz
mov
cltd
outsl
jp
loop
in
lods
loope
mov
inc
shl
xchg
push
pop
mov
mov
imul
mov
in
xor
pop
jns
dec
push
mov
sbb
call
movnti
enter
in
loopne
repz
adc
inc
push
jge
adc
pop
in
push
xchg
dec
push
or
pop
std
jns
out
lock
mov
sbb
int
rcrb
stc
in
dec
jb
int
sub
cmpsb
iret
push
lods
push
sbb
in
sub
or
sarb
scas
adc
jecxz
pop
roll
fbld
ljmp
xor
mov
inc
jmp
cld
repnz
das
push
ss
inc
test
ficomps
dec
stc
xlat
inc
mov
clc
cmp
popf
sti
cld
sbb
xchg
pop
jle
sub
test
inc
xor
xchg
pop
jle
xor
lock
jmp
xchg
mov
cld
sti
enter
rclb
push
sti
pop
sbb
test
aas
stc
test
repnz
mov
scas
icebp
scas
fldt
mov
push
ja
and
addr16
loopne
jle
in
push
je
mov
lahf
testb
in
pushl
mov
popf
cmpsl
dec
mov
out
fmull
dec
add
cmpsb
repnz
mov
in
pop
jle
pmulhuw
loope
popl
sarl
cld
outsl
sbbb
push
add
push
stc
in
add
icebp
jecxz
shl
add
mov
repnz
das
xchg
cmp
adc
sub
push
or
xchg
mov
insl
pop
mov
or
add
jmp
shlb
movsl
dec
xor
inc
sbb
ds
xor
jnp
sbb
xlat
xorl
das
pop
adc
sub
pop
ret
mov
out
pusha
aam
inc
shll
mov
pop
push
imul
mov
mov
xchg
fcomps
pusha
ds
ds
inc
loopne
pop
scas
and
mov
das
pop
pop
xchg
rcl
lret
shrb
mov
arpl
lods
outsl
and
call
cld
xchg
sbb
and
mov
xchg
add
adc
jl
out
lret
mov
jne
outsb
mov
jg
mov
xor
ret
rolb
inc
mov
fcompl
mov
mov
outsl
sbb
xchg
jg
adc
imull
enter
dec
scas
mov
dec
sti
movsl
dec
repz
lock
lret
ljmp
pop
jge
sar
fs
inc
in
cwtl
test
jp
xchg
and
push
mov
fcompl
mov
mov
inc
iret
xchg
out
jnp
sbb
xchg
mov
xor
cltd
push
movsl
insb
notb
lods
mov
xchg
sub
imul
mov
jecxz
mov
sbb
cld
fbstp
push
push
popa
adc
jns
xchg
aaa
pop
cmp
xchg
xchg
cmp
insl
stc
lea
dec
mov
pop
and
mov
dec
loopne
pop
jle
in
mov
sub
cmp
fistps
sub
loopne
cmp
lahf
lret
xchg
pop
int3
pop
cmp
pushf
xchg
lods
inc
mov
jle
js
or
test
int3
cmc
push
mov
jnp
sti
arpl
fwait
leave
addr16
scas
andl
sbb
in
cmp
int
sbb
stc
in
pop
sub
test
sbb
xchg
jb
ljmp
fcomip
push
add
push
loopne
das
jmp
jge
sbb
repnz
xchg
push
pop
jns
mov
mov
ret
das
push
pop
jns
xor
xchg
fs
dec
ja
test
sub
xchg
xchg
inc
xchg
and
lds
inc
mov
dec
or
sub
sbb
imul
jb
lret
lahf
sbb
scas
mov
inc
in
sub
enter
arpl
lret
lret
dec
outsl
mov
fst
push
sub
xchg
repnz
push
fistl
lods
mov
outsb
inc
mov
pop
dec
mov
sbb
cmp
loopne
bnd
xor
ret
push
sbb
mov
inc
mov
rdmsr
cltd
loopne
imul
scas
mov
dec
mov
shll
repnz
xchg
cmp
and
cmpsb
lret
pusha
add
enter
mov
ljmp
and
mov
mov
imul
aam
fidivrl
sub
lret
mov
inc
hlt
dec
push
ja
or
in
jg
pushf
add
lcall
roll
int
sbbb
into
pop
clc
mov
into
ds
pushf
and
mov
lds
cmpsl
add
mov
stos
enter
ret
dec
out
nop
jecxz
xchg
jno
dec
sub
dec
jo
daa
ljmp
jge
or
xchg
pop
xor
push
jp
loope
jns
loopne
and
orb
in
sub
pop
stc
in
daa
and
into
pusha
or
idivb
jle
mov
cmp
gs
xor
das
mov
dec
test
cli
comiss
adc
sbb
repnz
icebp
cmp
add
das
lcall
jge
sub
fcoml
stc
not
inc
in
imul
mov
cld
repnz
and
in
popf
pop
push
test
das
mov
xlat
or
clc
fistpl
cld
test
and
je
je
pushf
pop
dec
das
mov
fs
adc
lret
fcompl
mov
mov
xchg
jae
jg
inc
jl
or
out
stc
test
decl
pop
popa
add
adc
xchg
pop
jle
or
insl
sbb
inc
pusha
mov
pop
jle
mov
or
iret
cmpl
addr16
outsl
jecxz
mov
xchg
test
fwait
inc
pop
jns
insl
lea
mov
lret
das
jmp
dec
mov
mov
rorl
push
lock
insb
les
jns
xchg
push
fmul
sub
adc
mov
pop
jno
into
pop
and
call
jns
mov
movsl
cmp
push
pop
jns
scas
sub
xor
inc
ret
dec
sbbl
loop
xchg
cmp
push
shrd
push
xor
jns
pop
jne
enter
xor
mov
pop
jns
xchg
outsl
or
pop
sbb
and
jecxz
or
repz
or
repnz
xor
xchg
lods
cmc
push
scas
mov
add
sub
ja
rorb
dec
pop
jmp
test
cmp
filds
mov
pop
aad
mov
jae
aad
adc
mov
imul
pop
jns
in
jns
jno
jle
ljmp
pop
jns
xchg
imul
push
sbb
aam
ret
xchg
lret
sbb
sub
mov
test
xchg
adc
xor
mov
dec
subb
scas
in
cmpsb
test
sub
mov
loop
fcoml
ds
jne
xor
xchg
jmp
push
xor
adc
in
das
rcrb
add
dec
xchg
aaa
sbb
lret
sub
mov
cld
jnp
xchg
push
f2xm1
out
jl
jge
in
icebp
sub
das
xchg
scas
or
adc
push
pop
jns
pop
or
fs
clc
pusha
xor
jns
xchg
sbb
adc
xchg
mov
in
push
nop
aaa
mov
mov
sub
sub
cmp
nop
fistpll
lret
adc
cmp
lret
mov
lods
idivb
sbb
pop
inc
mov
mov
add
mov
das
lcall
pusha
cmp
mov
in
and
inc
inc
mov
lret
xchg
ss
pop
gs
notl
std
inc
neg
or
jns
jmp
add
test
push
inc
pop
out
out
imul
mov
push
pop
inc
fdecstp
cld
cmp
clc
lock
das
mov
imul
aas
add
repnz
push
fldenv
cmp
dec
int3
dec
jns
jmp
rolb
dec
iret
icebp
add
xchg
push
pop
nop
cmp
add
xchg
push
pop
jns
ja
ja
xchg
pop
sbb
push
pop
jns
aad
mov
mov
enter
jns
xchg
leave
add
andl
xchg
push
xlat
mov
imul
xchg
sti
pop
fs
sti
mov
fdivs
lds
sbb
jns
out
mov
push
mov
xor
sbbb
lret
das
cwtl
inc
xchg
sub
arpl
repnz
das
mov
cltd
mov
popa
pop
maskmovq
filds
cld
loop
sti
push
lcall
jmp
in
push
cmp
or
or
sbbl
push
or
xor
inc
or
je
and
jno
scas
add
mov
stc
jb
hlt
in
subl
xchg
and
xor
jns
loop
mov
cs
and
js
cmp
lret
fwait
push
or
outsb
jmp
jne
inc
scas
mov
sub
xor
or
jns
cmp
mov
mov
in
push
in
cmp
push
je
sub
xchg
pop
jle
push
xchg
add
mov
pop
jle
in
shll
inc
outsl
imul
jle
in
or
bnd
popf
in
dec
xor
in
pop
jecxz
in
xor
ja
ret
mov
xchg
ja
ds
mov
fcmovu
jg
pop
jns
jne
insb
inc
into
pop
xor
aam
loopne
jg
pop
mov
ljmp
mov
jg
fildl
ja
or
notl
sbb
enter
push
iret
add
scas
mov
pop
das
xor
lret
jb,pn
repnz
mov
ret
fs
push
ficomps
and
stos
and
in
mov
stc
std
shlb
pop
clc
inc
pop
jns
xchg
pusha
loopne
push
pop
cmpsb
and
in
iret
push
pop
jge
lds
mov
imul
insl
sahf
sub
pop
sbb
mov
ds
push
pusha
rcrb
in
mov
xor
aaa
addb
mov
xchg
push
pop
test
push
xor
out
fcoms
rorl
sub
ja
in
and
push
cmp
lret
mov
fcompl
jecxz
ret
out
ret
out
imul
out
adc
lea
mov
orb
repnz
das
or
cltd
out
rolb
je
mov
test
mov
bound
sti
test
mov
mov
repnz
das
lds
inc
insl
ret
mov
into
aam
mov
ja
cld
jnp
sub
mov
add
push
repnz
pop
mov
sarb
mov
pop
pusha
jmp
pop
cli
push
sub
pop
inc
mov
xor
sbb
and
xchg
call
mov
mov
cmc
or
and
push
mov
adc
enter
or
jge
lret
sbb
sbb
push
mov
sbb
das
xor
or
jge
pop
jns
andb
mov
jmp
xchg
popf
mov
mov
cmpl
dec
out
testl
xchg
push
pop
mov
je
clc
in
xchg
add
lahf
loop
mov
and
mov
mov
jle
aas
lock
push
lahf
and
std
and
xor
imul
cld
pop
imul
aaa
push
jo
or
mov
cmpsb
popa
lahf
flds
js
bnd
repnz
std
addr16
jp
push
ss
inc
pop
mov
lret
das
dec
in
xchg
jo
imul
stos
test
mov
jge
out
and
pop
lret
das
mov
dec
dec
enter
testl
cs
pop
mov
push
pop
jns
cli
jp
inc
inc
add
js
jno
push
sbb
or
in
scas
inc
lock
push
pop
jns
addl
lcall
mov
jns
ret
iret
push
cmpsb
jns
repnz
push
xchg
popa
insb
adc
pop
jns
xchg
dec
or
shlb
mov
adc
push
push
sbb
shll
in
and
in
push
pop
adc
in
hlt
xorb
or
sub
lret
rclb
test
dec
lahf
mov
or
imul
repnz
std
scas
jmp
xlat
and
inc
fxch
sub
push
aaa
out
leave
pushf
nop
cs
sub
aas
in
pop
hlt
push
push
hlt
rclb
test
enter
jno
arpl
in
push
fidivrs
sub
imul
clc
xchg
push
pop
jns
jge
jnp
out
xor
cmp
ja
pop
and
jne
xor
push
inc
pop
mov
aas
adc
xchg
mull
xchg
pop
jle
jns
loopne
xchg
inc
int3
inc
pop
mov
jle
in
adc
add
ret
fs
fptan
fdivrl
repnz
in
xchg
jbe
and
test
stc
es
mov
and
xchg
xchg
push
fimuls
imul
jb
xlat
sbb
jns
pop
xor
xor
adc
dec
pop
lret
movsb
sub
cld
repnz
mov
mov
xor
cmp
mov
push
pop
jns
loop
out
scas
rcrl
test
add
xchg
xchg
push
push
jo
test
outsl
out
push
sub
or
sub
jmp
dec
add
or
aaa
jmp
inc
in
aaa
xor
cmp
dec
pop
cmp
jno
inc
xlat
sub
addl
cld
repnz
and
sub
cmpsl
jge
mull
and
mov
fiadds
sbb
inc
icebp
cmp
cmp
and
or
cmpl
call
or
sub
imul
popf
loope
xor
xchg
push
pop
jns
dec
std
repnz
test
mov
loopne
xor
xchg
mov
and
mov
fidivs
jnp
and
faddp
popf
mov
or
gs
jns
andb
sub
push
fs
xor
dec
adc
jns
popa
lock
sub
cmp
addr16
lods
xchg
jg
loop
mov
iret
and
jge
add
in
xchg
xchg
jns
adc
and
inc
mov
sub
loopne
sar
lret
mov
fistpll
ljmp
xchg
xor
mov
cld
repnz
das
or
stos
and
jl
lds
fistl
out
loope
mov
adcb
mov
popf
push
icebp
mov
call
xchg
pop
jg
stc
repnz
adc
mov
xchg
jb,pt
ljmp
add
sahf
xchg
cmp
jae
or
push
repnz
jl
pusha
or
ret
fwait
xchg
mov
ds
pop
sahf
inc
xor
push
shl
pop
xor
test
dec
add
jp
dec
imul
lods
stc
repnz
mov
divb
nop
and
xchg
jg
dec
sub
test
or
lret
or
push
mov
xor
scas
lahf
test
addl
inc
mov
pop
lcall
or
push
push
cs
jl
outsl
mov
mov
inc
cwtl
adc
scas
xor
js
cltd
test
icebp
das
mov
cwtl
ja
sbb
or
mov
mov
adcl
fnstenv
enter
in
das
test
or
adc
cmp
and
fidivs
push
or
stc
aad
jne
movsl
add
dec
jb
stos
mov
mov
mov
loopne
movsb
dec
popf
test
or
jne
lock
scas
lcall
lret
das
incl
fldt
dec
push
das
mov
mov
mov
push
mov
adc
out
and
cld
repnz
das
popf
sbb
rorl
fbld
mov
cmc
hlt
xchg
shrb
addr16
lock
mov
fsts
jae
mov
xchg
sub
jl
in
out
inc
lds
out
sub
nop
mov
jae
sbb
repnz
cmp
inc
popa
les
add
jp
xor
fcompl
xchg
push
fimuls
dec
mov
cmp
movsb
jnp
insb
mov
das
mov
daa
in
mov
mov
es
xchg
push
pop
jns
cmc
adc
sbb
inc
push
stc
in
xchg
xchg
mov
outsb
cmp
jb
data16
shlb
lcall
pop
aad
xchg
push
dec
and
cmp
das
jge
mov
adcb
adc
push
movsl
imul
das
sub
loopne
mov
loop
mov
aaa
sub
movsl
fsubrp
pop
jecxz
cmp
das
or
xchg
mov
fistps
xchg
push
pop
adc
cld
xlat
mov
xchg
inc
dec
lret
das
pushl
loope
xor
mov
imul
push
bound
cltd
fxch
xchg
idivl
negl
add
ss
iret
sti
cmp
jo
push
enter
mov
fldl
mov
fucomi
or
rorb
test
push
pushf
xchg
push
cld
repnz
das
pusha
xchg
dec
add
movsl
jmp
filds
sahf
adc
pop
flds
or
pop
jle
in
pop
in
jbe
not
xchg
pop
mov
psraw
lods
jge
sub
lock
push
pop
leave
fildl
or
jb
adc
xor
sub
bound
in
loope,pt
in
inc
mov
test
stc
in
pop
popf
pusha
mov
and
in
push
loop
sbb
jle
mov
jae
push
xor
out
orl
cmp
outsb
repnz
mov
mov
lcall
lret
das
mov
fadd
lods
add
mov
stc
rcrl
cmc
inc
testb
movsl
rcrl
stc
repnz
push
mov
xchg
into
sbb
sti
rorb
js
pop
jns
mov
push
cltd
mov
add
in
repnz
std
jmp
ret
jle
in
push
jecxz
jbe
push
gs
push
loope
pop
std
in
push
pop
push
cmp
mov
xchg
push
pop
jns
jns
push
popa
stc
sbb
jle
test
inc
xlat
scas
ret
sub
repnz
mov
and
sub
sahf
mov
lret
das
mov
xchg
push
sub
and
cld
repnz
pop
idiv
or
adc
pop
push
mov
fs
das
push
xchg
pop
mov
jg
sub
imul
lret
popf
inc
inc
sub
cmpsl
cmp
jmp
rcr
imul
das
sahf
xor
mov
repnz
pop
sbb
repnz
push
mov
imulb
jmp
add
jge
lret
scas
lds
jo
cmc
cmp
sbb
sub
mov
pop
jns
inc
xchg
in
xchg
dec
repnz
and
mov
adc
decl
dec
pop
pop
ss
xchg
mov
sbb
xchg
sub
pop
fisubl
xchg
jg
cld
in
shll
sub
sti
clc
push
fsubrl
enter
mov
dec
mov
addr16
pusha
int
pop
out
lds
les
sbb
xchg
shrl
pop
sub
mov
lret
mov
invd
jae
adc
xlat
sbb
scas
mov
jb
sub
adc
lret
test
lea
dec
xor
mov
cmp
push
xlat
lcall
jo
mov
fwait
imul
leave
leave
xchg
push
pop
jns
sarl
or
xor
push
push
pop
jns
fisubl
or
cmp
inc
mov
pop
jns
xchg
cmp
jbe
out
fdivl
xchg
jg
xchg
add
cmp
xchg
call
stc
in
pop
push
dec
fstpl
rorl
mov
xchg
bnd
jle
sbb
adc
and
inc
loopne
cmp
xor
stos
decb
idivl
in
inc
push
push
stos
jecxz
inc
jmp
sub
arpl
in
inc
leave
dec
pop
ds
mov
mov
int
dec
inc
pushf
out
mov
stc
in
out
std
sbb
lcall
in
pop
shrl
fidivrs
mov
lea
ja
mov
lahf
jl
enter
loope
not
movsb
fmulp
fdivr
in
mov
mov
add
addr16
aad
sbb
xchg
pop
jle
rorb
mov
negb
jl
bound
movsl
mov
fdivrl
pop
jns
mov
ret
dec
sub
xchg
std
sub
je
xchg
push
xor
rorl
in
sahf
cmp
mov
ja
fwait
pop
pop
jns
mov
ret
adc
inc
xlat
jb
lret
dec
mov
mov
lcall
mov
xchg
in
xchg
in
pop
jecxz
repnz
xchg
adcl
inc
xor
push
sti
scas
or
in
mov
in
and
cmp
or
das
lcall
adc
lcall
negl
push
leave
das
mov
out
fwait
into
stos
mov
insl
adc
add
lret
int3
xchg
and
mov
stc
in
inc
insb
push
jne
imul
call
enter
fsub
es
mov
aas
mov
das
mov
and
enter
mov
mov
mov
fmuls
cmp
movb
lock
das
sub
xchg
pop
sbb
pop
cmp
fwait
ljmp
scas
mov
shll
scas
imul
cld
cmp
lret
ret
cmp
cs
repnz
das
mov
pop
and
gs
cmp
xor
cld
outsb
insb
es
sub
or
stos
mov
out
mov
scas
mov
inc
scas
add
xor
xor
outsl
and
xchg
sbb
pusha
jle
in
repnz
jge
dec
sbb
jbe
incl
in
pop
cmp
adcb
inc
or
mov
sub
mov
mov
and
cmp
pop
jns
lea
sbbl
pushf
movsl
jp
in
xchg
xchg
loop
inc
rolb
push
mov
ret
add
stc
repnz
xor
jl
arpl
jge
xchg
popf
rcr
in
jg
cld
xchg
adc
pushf
xlat
pop
test
jle
or
sub
add
call
jae
lods
popa
adc
lret
repz
outsb
and
xchg
pop
dec
xor
sub
gs
repz
imul
or
or
fwait
sbb
inc
xlat
js
in
push
mov
cmp
push
cmp
xchg
push
pop
js
notb
mov
adc
fstps
ret
addr16
pop
jns
sar
or
add
push
dec
mov
dec
jns
sub
pusha
sarl
jmp
xchg
push
pop
test
lods
pop
xchg
fwait
adc
aas
ss
cld
sti
or
pop
pop
mov
aad
sti
repnz
das
mov
dec
fdivr
sbb
lret
das
mov
test
test
add
inc
pop
stc
repnz
pop
mov
jecxz
dec
in
push
fiadds
stos
mov
dec
clc
xchg
push
pop
jns
cmp
and
lret
mov
jl
in
rcr
pop
lret
fldenv
fdivrl
lea
push
pop
ficoms
pop
jns
call
and
in
xor
jns
movsb
xor
and
sub
aam
pop
sub
cld
sub
push
push
xchg
push
pop
jns
ds
jge
mov
cmp
rorb
stos
cmp
dec
daa
lcall
mov
xchg
pop
dec
xlat
inc
mov
push
pop
jns
fstl
nop
sbb
cmpsl
out
pop
jns
and
daa
mov
mov
pop
pop
jns
xchg
inc
rol
insb
mov
jno
fadd
hlt
push
dec
jns
xchg
push
cwtl
jp
mov
mov
clc
jl
adc
movsl
daa
push
pop
hlt
mov
xor
enter
or
call
dec
arpl
repnz
das
adc
pop
inc
or
xchg
fmuls
pushl
sbb
dec
jle
cmpsl
mov
jne
into
sub
adc
jle
test
xor
lods
repnz
cs
xchg
pop
mov
ficompl
xlat
fimull
mov
cmp
cmpsb
out
jmp
ss
das
mov
pop
test
sti
pusha
mov
sbb
fimull
jbe
pop
inc
iret
ss
xchg
lds
mov
cmp
sti
scas
mov
push
xor
mov
repnz
int
xchg
clc
je
ret
pop
adc
and
movsl
aaa
loope
stc
in
mov
xlat
std
shr
cmpsl
add
es
in
pop
enter
fists
ficoml
in
pop
jle
rcrl
test
aam
shll
stc
scas
sub
clc
jae
mov
sub
imul
orb
jmp
in
cmp
push
and
jg
leave
adc
lock
pop
jle
idivl
insl
and
dec
lret
rcr
mov
inc
mov
pop
push
or
testl
inc
loope
loope
pop
ljmp
scas
sbb
jns
dec
rorl
mov
add
enter
movsb
jge
mov
lcall
ret
sub
xor
in
das
mov
test
insl
sub
cmp
jae
loope
xor
jns
call
adc
push
iret
pop
jb
xchg
push
jmp
int3
pop
pop
dec
ja
push
mov
and
cmp
cltd
push
imul
loopne
dec
dec
sub
mov
nop
dec
out
jns
repnz
das
lahf
outsb
xor
xor
das
mov
aas
cmp
add
inc
mov
popf
or
add
xor
idivb
xchg
ja
or
sti
cmpsl
roll
xlat
loop
mov
enter
mov
fcmovne
mov
in
icebp
jle
xor
pop
clc
adc
sbb
cmp
in
icebp
gs
lcall
jl
test
mov
pop
xor
adc
cmp
loop
inc
cld
repnz
das
xchg
js
loope
jmp
mov
lret
das
mov
mov
xchg
jp
pop
dec
lret
das
mov
ret
int3
mov
ds
repnz
adc
xor
sub
minps
mov
je
jmp
addr16
stc
repnz
out
dec
dec
jle,pt
sub
outsl
mov
dec
jmp
sub
cmp
jle
fisubl
pop
jo
cmp
lret
cs
inc
es
pop
lret
push
stc
in
mov
xchg
leave
lods
fstp
sbb
enter
test
loopne
pop
jle
neg
imul
jecxz
rcl
ljmp
lods
arpl
movsb
mov
push
stc
daa
shlb
mov
inc
jbe
nop
push
jle
pop
lret
pop
in
and
aaa
push
fidivrl
out
in
xlat
mov
aaa
nop
js
fistpll
pop
lds
push
fisubs
sahf
cs
and
jns
jbe
inc
xchg
aas
je
jnp
imul
xchg
shl
addb
cld
ret
dec
cmp
cmp
pop
int3
xchg
sub
out
arpl
in
ss
test
les
pop
pop
jns
test
pop
add
insb
sub
addr16
mov
sub
mov
out
jae
in
pop
orb
xlat
das
mov
jae
mov
sub
in
dec
and
iret
nop
repnz
jno
mov
leave
xchg
mov
sar
sub
jge
xchg
pop
movsb
pop
bnd
push
clc
enter
das
cmc
jne
lea
repnz
bound
adc
adc
leave
ds
pop
lods
sub
sub
aaa
mov
repnz
or
idiv
repnz
daa
push
pop
je
sbb
repnz
das
mov
inc
mov
data16
xchg
das
mov
jle
mov
xchg
pop
jle
mul
or
imul
jecxz
cs
hlt
jle
in
popf
repz
xor
les
stc
in
pop
inc
lea
dec
push
shrl
cmp
jge
xchg
pop
jle
outsb
mov
sub
jge
inc
xor
add
sub
sub
push
int
lret
repnz
or
push
pop
pop
hlt
test
out
ret
xor
clc
adc
inc
and
sti
mov
fadd
push
mov
mov
cwtl
mov
cmp
repnz
das
mov
enter
cwtl
out
sbb
dec
or
mov
add
lods
stc
dec
lahf
push
in
push
pop
nop
push
jbe
repz
fnsave
pop
jns
test
dec
mov
inc
jne
xchg
fdivl
cld
stos
lds
in
stc
notl
lods
aas
out
mov
add
xchg
pop
jle
addb
mov
ds
sub
loopne
arpl
jp
hlt
and
mov
int3
mov
aaa
mov
out
repnz
and
pop
jb
fsubp
fbstp
mov
xor
jp
sbb
leave
sti
outsl
xor
repnz
loop
jle
in
and
or
pop
sbb
and
jae
mov
fs
in
pop
clc
mov
adc
das
sbb
xchg
aaa
mov
mov
adc
cmc
xchg
cli
pop
xlat
sub
dec
and
sub
scas
enter
jbe
insb
mov
lret
das
jg
or
pushf
xchg
cmp
cmc
icebp
rcrl
mov
stos
mov
in
push
push
roll
mov
fldenv
push
rcll
jp
in
xlat
or
mov
jge
xchg
call
lret
push
xor
sti
jp
das
loope
int
std
pop
inc
aam
dec
in
push
pop
and
outsb
ret
xchg
ja
sbb
jns
xlat
cltd
mov
inc
out
imul
jns
shl
fdivrl
cmp
shrl
aas
in
push
pop
push
sub
lret
xchg
xor
popf
mov
pop
jns
xor
daa
mov
push
inc
pop
jns
std
jecxz
sbb
das
aaa
test
xchg
push
ficoms
or
lcall
pop
pop
jns
mov
push
jge
adc
repnz
xchg
pop
pop
cwtl
out
aad
pop
push
faddp
cmp
sbbl
in
jg
cmpsb
push
outsb
pop
xchg
or
ja
xchg
push
ret
int3
je
push
int3
imul
jmpw
sbb
sbbl
jns
mov
sub
or
outsb
or
pop
jns
xchg
setno
scas
out
inc
xorb
pop
loop
jns
xchg
push
xchg
add
frndint
inc
lods
pop
mov
xchg
push
pop
add
jbe
rorl
test
sbb
or
int
dec
jb
xchg
mov
cltd
mov
negl
out
jmp
sub
cmp
sbbl
mov
xor
mov
inc
daa
cli
enter
xchg
add
lret
sbb
jg
fiadds
mov
and
cld
das
pusha
jle
in
bound
fcmovnu
mov
and
dec
stc
in
pop
cmp
jno
dec
outsl
lods
shl
and
mov
inc
repz
popf
and
xchg
sahf
enter
sbb
inc
call
mov
sbb
cmp
out
mov
repnz
mov
or
xchg
shrb
jle
in
out
lds
jo
neg
mov
pop
stc
in
pop
mov
je
jnp
mov
aaa
xor
pop
jle
push
mov
dec
sbb
lcall
stc
xchg
cmpsl
icebp
xor
repnz
cs
xchg
lret
bswap
sahf
rep
mov
fists
outsl
pop
jb
sbb
repnz
das
lcall
mov
repnz
das
mov
push
and
pusha
xlat
in
or
das
mov
add
sub
loop
add
add
mov
movsl
push
pop
add
or
jge
lret
mov
or
popf
jmp
adc
and
inc
push
mov
ljmp
movsl
adc
fmuls
cmpsb
and
in
jae
mov
cmp
add
push
fiadds
enter
push
push
adc
das
paddq
filds
rol
adc
mov
inc
fsubl
in
movsb
sahf
jge
jl
xlat
jle
cmc
add
xchg
jg
roll
outsl
stc
add
mov
add
call
inc
pop
cmp
lret
mov
xchg
add
outsb
cmp
in
rorl
frstor
mov
and
stc
repnz
dec
stos
and
and
test
jecxz
add
in
arpl
dec
scas
int
rolb
mov
lret
das
mov
stos
shll
sbb
lret
das
mov
int3
js
notb
jg
cld
repnz
shl
repnz
dec
dec
cld
sti
enter
cld
jmp
in
test
xor
in
das
mov
out
sahf
mov
push
leave
fsubrs
out
popa
jge
test
adc
out
mov
out
addl
pop
out
push
adc
xor
filds
pop
divl
scas
sub
xchg
vmaxps
in
pop
cmpsl
pop
cmp
sbbl
push
mov
xorb
ret
out
repz
mov
pop
mov
cmp
test
mov
lds
mov
ja
lcall
sub
rclb
fucomp
into
inc
test
xchg
push
pop
loop
faddl
je
lds
push
aam
xchg
xchg
push
pop
jns
mov
xlat
sbbl
pop
jns
xchg
fistl
xchg
adc
mov
cltd
adc
in
stc
notl
jno
jg
cmp
fimuls
bnd
adc
das
mov
xchg
jp
push
adc
xchg
mov
leave
incb
xor
mov
mov
cld
repnz
das
mov
mov
inc
fdivl
adcb
sahf
in
das
mov
std
pop
xchg
mov
jge
imul
or
mov
jae
pop
push
cltd
adc
out
and
inc
and
lahf
lods
xor
lock
repnz
das
mov
jge
xor
mov
mov
cmp
lahf
nop
jmp
and
xchg
mov
cltd
mov
mov
rcrl
dec
push
jo
push
adc
loope
gs
mov
adc
enter
in
popa
mov
inc
inc
sbb
cld
repnz
jo
and
hlt
mov
add
jno
jmp
inc
dec
arpl
pop
add
sub
pop
clc
scas
mov
jnp
ror
push
mov
xchg
sub
ljmp
sahf
xchg
ret
ficoml
stc
sub
pop
scas
mov
fidivrs
test
sbb
jmp
xchg
div
stos
xor
jnp
iret
mov
xchg
das
ljmp
ror
je
and
lret
dec
test
pop
mov
into
js
dec
xchg
stos
fldl
sbb
add
inc
lods
es
sub
test
xchg
or
aaa
pop
dec
pop
outsb
repz
dec
fsub
adc
imul
adc
into
cmpsb
movsl
push
pop
jns
adc
daa
clc
cwtl
into
fmull
xchg
adc
in
cltd
stos
xchg
inc
mov
adcl
sbb
fnstsw
lods
mov
stc
inc
mov
xchg
cld
repnz
mov
add
add
xchg
gs
rorl
lret
das
mov
sbb
and
loop
cmp
pop
xchg
mov
lret
test
ds
push
call
in
jg
aaa
iret
jae
push
mov
mov
fisttps
jle
fcmove
loopne
dec
stos
sub
xchg
ds
sub
or
out
adc
xchg
pop
scas
mov
cwtl
cmpsl
outsl
aad
jecxz
and
fs
inc
sti
inc
xchg
cmp
in
push
cld
repnz
push
cmp
inc
repnz
enter
mov
idivl
mov
dec
repnz
das
mov
pop
aam
ja
mov
dec
lret
das
mov
in
or
mov
inc
sbb
repnz
add
jle
in
out
jge
es
and
rcrl
sti
jmp
cmp
stc
push
pop
in
pop
jle
pop
mov
jecxz
inc
cmp
das
lcall
stc
and
shrb
sbb
sbb
jecxz
cld
repnz
lods
jl
outsl
mov
sti
cmpsb
jecxz
fucomi
sbb
outsb
out
pop
jns
pop
pop
pusha
inc
cmp
imul
daa
xor
xchg
mov
xor
jno
popf
stos
add
mov
inc
aas
fdivs
or
push
in
das
in
cmc
test
stos
mov
or
xor
outsb
pushf
jp
addr16
aam
sbb
por
shrb
fmull
addr16
fs
push
pop
jae
inc
imul
sahf
cmpl
das
pop
mov
scas
push
stc
in
inc
add
leave
rcll
sub
mov
jle
xor
xor
fisttpll
jle
push
sbb
inc
adc
and
test
ja
push
inc
jge
push
inc
icebp
cld
repnz
das
js
or
mov
orl
dec
lock
lahf
imul
push
outsb
jns
cmp
sbb
rcl
daa
pop
scas
mov
rolb
dec
jmp
out
fidivl
aam
inc
sub
mov
enter
int3
inc
lahf
pop
inc
stos
fs
adc
fsts
jns
enter
fldenv
mov
mov
and
mov
sbb
in
xchg
push
pop
jns
pop
mov
cld
rcll
das
push
pop
jns
aad
jo
arpl
adcl
or
in
movsl
xor
out
mov
scas
fidivrs
hlt
enter
sbb
lret
xor
pop
testb
cmp
mov
cli
lret
inc
push
outsl
mov
fs
stc
in
das
push
push
ret
testl
in
loopne
and
adc
aam
sub
mov
mov
out
xchg
xchg
test
cmp
loope
test
adc
lret
das
mov
add
mov
sbb
mov
or
adc
mov
or
pop
imull
cs
imul
ds
jb
cli
mov
or
jge
lret
or
dec
scas
mov
stc
in
pop
into
inc
clc
sbb
mov
out
in
pop
jle
filds
cwtl
and
outsl
push
cmc
fsubrl
mov
add
inc
js
mov
dec
mov
sbb
das
sbb
repz
repnz
das
lods
mov
scas
mov
popa
in
cld
repnz
cmp
cld
fstpl
int
shll
repnz
das
mov
jecxz
loope
int
test
das
mov
or
gs
pop
das
mov
xchg
iret
rorl
lahf
cmpsl
loop
jge
in
push
cmp
mov
je
dec
movsl
in
lret
add
mov
and
and
mov
in
aaa
stc
call
divb
out
push
dec
in
push
pop
sbb
jbe
sbb
mov
push
pop
jns
mov
or
xchg
in
test
cs
cmp
dec
in
negb
inc
add
scas
inc
addr16
imul
cld
repnz
xor
in
stos
aaa
rcrb
jge
lret
lds
pusha
outsb
xor
add
push
pop
sti
cmp
das
jmp
repnz
mov
lcall
xor
shl
xchg
mov
xchg
push
inc
sub
sbb
xor
sbb
or
add
and
cld
sti
enter
mov
xor
es
add
cmp
enter
xor
cmp
aas
ds
push
add
dec
sub
xor
dec
shrl
pop
cli
int
scas
cld
mov
sbbl
in
jg
das
push
xor
scas
lret
lods
in
pop
jle
stc
std
cmp
adc
data16
and
stc
dec
aas
add
cmp
test
mov
xor
mov
neg
and
scas
pop
pop
push
mov
lds
jo
outsl
jno
imul
ret
jmp
push
cwtl
out
sarl
mov
jp
lret
das
jg
sti
in
test
cmp
mov
fdivrl
imul
in
mov
xchg
xor
jecxz
push
sub
mov
jne
cmpsb
sbb
scas
mov
movsb
loop
scas
cmpsb
xor
mov
jl
in
pop
cmpsl
push
imulb
lret
insb
dec
mov
movsl
rclb
push
fwait
icebp
cmpsl
fldt
in
pop
ja
lret
cltd
inc
mov
lcall
mov
mul
pop
and
add
movsb
jge
mov
icebp
lret
fdiv
into
shll
cld
repnz
sti
add
sbb
icebp
pop
mov
ja
cld
repnz
pop
movsl
mov
fisubrl
jbe
mov
fld1
xchg
repz
adc
scas
mov
jns
mov
mov
fdivr
dec
jmp
push
ja
pop
subb
imul
rcrl
imul
std
aam
xor
enter
pop
mov
repnz
mov
stos
scas
inc
pusha
or
sub
mov
adc
xchg
mov
pop
and
sahf
sub
test
test
sbb
inc
adc
repnz
das
dec
rorb
pop
lahf
fsubs
test
push
push
mov
and
mov
mov
jle
in
fisubs
mov
lret
repnz
mov
pusha
cmpsl
addr16
xchg
jl
fs
das
mov
fsubrp
and
movsb
inc
fdivr
movb
imul
call
scas
mov
pop
pusha
xor
rolb
decl
adc
mov
lock
ja
or
xchg
sub
dec
fwait
mov
push
imul
negb
sub
rorl
xchg
sub
into
fwait
jg
add
inc
mov
or
cld
repnz
iret
test
push
xchg
mov
out
int3
or
outsl
test
pop
in
xor
cld
repnz
enter
and
mov
in
dec
enter
pop
aas
mov
or
fstps
sar
mov
cmp
pop
stc
in
jg
cmpsb
stc
push
dec
push
push
mov
mov
xchg
pop
jle
rcll
fiaddl
loopne
pop
push
ja
ds
jg
pop
or
das
xor
inc
pop
jns
xchg
imul
and
mov
jns
xchg
push
js
adcl
xchg
pop
sbb
push
pop
aad
mov
xor
pop
jnp
jl
inc
fwait
in
jle
xchg
lret
das
imul
imul
pop
incb
dec
xchg
insb
add
rcl
pop
jae
push
ficoms
clc
sarb
loop
jecxz
fisttpl
dec
cmpsb
cmp
test
rcrb
xchg
lret
add
push
es
into
dec
sub
push
lock
push
loope
sub
mov
pop
test
jb
xor
mov
sub
and
rcll
push
mov
std
jbe
scas
mov
push
cld
sti
enter
pop
test
iret
imul
mov
das
mov
dec
cmp
mov
add
jge
pop
and
or
mov
xor
mov
pusha
aas
jnp
lret
adc
adc
popf
xchg
lods
pop
filds
cld
sbb
call
lods
jmp
in
hlt
je
loop
sub
adc
xchg
jnp
push
push
xor
cmp
das
jg
fists
movsb
outsl
xor
cmpsb
mov
repnz
lcall
repnz
es
fs
cmp
mov
into
js
jo
in
lds
das
pop
dec
cmp
jge
sub
mov
xor
cmc
sub
xchg
jg
repnz
push
shl
push
popa
mov
fisttpl
pop
jle
in
cmp
cmp
mov
cmpsb
scas
movsb
int
jle
in
shlb
lock
sub
in
pop
aas
sub
pusha
lds
lret
lods
in
pop
jle
pop
gs
lahf
mov
cmp
jne
jnp
daa
js
mov
neg
cmp
int3
sub
addr16
loope
mov
sahf
lds
sbb
shll
jl
lock
ds
hlt
enter
xor
dec
out
push
or
stc
sti
xor
ret
lds
dec
sti
enter
std
xchg
cli
icebp
mov
xor
adc
fdivl
loop
hlt
js
add
xor
dec
out
add
repnz
mov
nop
jae
mov
mov
andb
mov
fwait
outsl
xchg
push
pop
jns
mov
imul
in
sub
idivl
dec
pop
dec
inc
ds
and
xchg
dec
inc
cmp
pop
imul
call
xchg
ljmp
scas
mov
enter
test
xor
mov
cmpsl
push
and
dec
shrb
sub
outsl
scas
loope
and
out
mov
mov
add
insl
jge
in
xor
rcr
fnstenv
dec
and
lret
movhps
mov
inc
out
sarb
stos
sub
sub
xchg
sub
mov
cwtl
stos
jmp
cmp
sbb
sbb
push
xchg
mov
mov
jb
mov
jb
cli
repnz
leave
das
pop
rol
mov
mov
mov
aaa
mov
mov
sti
leave
jecxz
jle
testl
cmp
dec
fld
aad
jl
in
clc
movsl
mov
jge
in
hlt
repnz
mov
or
pop
cltd
inc
sbb
roll
cld
aas
cmp
shrb
jns
mov
mov
pusha
mov
xchg
push
pop
push
mov
aad
push
ret
mov
shlb
inc
dec
dec
in
add
add
xchg
mov
repnz
inc
add
nop
xor
jmp
jg
cmp
or
mov
sahf
xorl
xchg
ror
test
in
ss
clc
jecxz
sub
mov
icebp
mov
pop
ds
inc
cmp
cmpsb
movb
mov
xchg
out
cmp
adc
scas
mov
inc
dec
fstl
js
scas
mov
sti
xor
inc
lea
gs
loopne
sub
std
xchg
popf
enter
push
shrb
lcall
adcl
mov
xor
mov
push
cwtl
adc
ret
test
pop
leave
and
push
repnz
mov
mov
mov
lret
mov
jno
fiaddl
fwait
incl
add
cltd
or
ret
stos
scas
mov
mov
or
inc
and
adc
mov
shrl
sbb
xor
in
repnz
xchg
shrb
test
adc
dec
xor
sub
sub
jnp
and
mov
push
lret
inc
sub
addr16
scas
mov
cld
push
sbb
in
aad
movb
dec
mov
add
push
mov
xor
repnz
fstpl
shll
lcall
ret
in
xlat
adc
test
arpl
fs
pop
jmp
dec
jno
lret
out
outsb
sub
jnp
lret
mov
jbe
iret
jo
in
jg
in
ret
stc
cmpsb
pop
mov
cmp
jle
cmpsb
hlt
sub
shrl
dec
mov
pop
jle
in
add
cmc
out
outsb
lcall
jle
in
and
or
mov
jbe
xchg
pop
sub
adc
jne
ret
mov
enter
xor
fidivl
pop
mov
leave
scas
fdivs
inc
xor
repnz
repnz
pop
mov
test
mov
aas
clc
xchg
lret
mov
pop
xchg
fadds
sub
fldcw
test
xchg
jmp
push
dec
scas
mov
push
push
data16
jnp
pusha
mov
sub
jmp
sub
imul
lret
jge
push
pop
jns
ret
outsl
push
cmp
push
mov
adc
jle
in
adc
mov
into
test
adc
in
pop
incb
mov
sbb
xchg
inc
cld
adc
xchg
pop
jle
sbb
lods
sub
inc
aas
mov
push
cmpsb
pop
add
push
mov
hlt
mov
dec
sub
aad
inc
int3
push
or
mov
pop
cld
repnz
mov
mov
mov
aad
enter
push
xor
and
jns
das
mov
jo
pop
fs
iret
fdivrs
push
jle
notl
add
data16
stc
in
pop
jg
sub
cmp
out
xchg
pop
jle
popf
add
mov
into
push
mov
cld
repnz
inc
xor
outsl
xchg
iret
add
hlt
enter
cltd
adc
clc
enter
aas
pop
out
cltd
in
push
fidivrs
add
addr16
cmpsb
pusha
add
inc
xor
out
testb
loopne
bound
mov
pop
jns
push
xchg
and
mov
aam
cmp
in
jg
sbb
push
mov
and
cmp
pop
jle
mov
ljmp
aam
js
mov
xchg
loope
lret
mov
inc
fpatan
mov
inc
scas
mov
cmp
js
cmp
cld
repnz
mov
push
scas
mov
addr16
test
dec
xchg
out
aam
cwtl
decb
cld
jge
in
and
add
mov
mov
push
and
sub
mov
jmp
lods
loope
jns
xchg
ja
jno
mov
ret
push
inc
or
dec
or
xchg
push
pop
sbb
ret
mov
sti
in
inc
pop
jns
add
push
dec
les
xchg
push
fiadds
fisttpl
jmp
repz
and
jns
popf
add
adc
jecxz
and
out
cmp
jmp
sub
or
outsb
lahf
xchg
cmp
imul
cmp
jb
and
cmp
mov
insb
mov
dec
and
sub
sub
call
xchg
pop
jns
xchg
pop
ficoml
sahf
orl
lods
jl
in
nop
xlat
add
inc
dec
cltd
test
aad
loope
ja
mov
int3
fimull
mov
mov
bound
xchg
pop
jle
lods
iret
cmp
inc
add
das
lcall
stc
shll
test
xor
mov
mov
in
ds
aaa
test
add
lret
das
pop
mov
mov
push
jl
lret
insl
cmc
or
xlat
sub
fstl
ss
enter
inc
xor
pop
icebp
fidivrl
lret
das
scas
clc
lods
movsb
xchg
aad
push
mov
das
ficoml
add
dec
xchg
push
in
jle
in
push
sub
jge
mov
sbb
loop
fbld
in
pop
sbb
push
mov
or
xor
adc
lret
pop
fs
inc
sub
sti
enter
and
mov
imul
into
repnz
das
mov
jmp
js
or
cmp
nop
push
insl
mov
mov
repnz
imul
mov
jno
aam
mov
mov
jge
jle
mov
repnz
das
andb
push
aad
mov
lods
cli
jge
dec
cwtl
or
loop
inc
xchg
pop
jle
test
hlt
arpl
jae
add
in
pushf
in
clc
or
add
scas
daa
pop
or
or
enter
xor
clc
cmp
jns
leave
cmp
iret
xlat
or
sbb
mov
out
outsl
lret
call
enter
andl
inc
or
push
mov
mov
inc
adc
jns
std
nop
or
add
add
jb
insb
add
inc
xor
adc
or
js
push
mov
pop
pop
jns
cmc
pusha
push
int
jns
or
aaa
dec
and
lret
inc
sub
sub
das
decl
sub
jp
cmpsb
in
cld
repnz
mov
push
lods
das
jbe
mov
adc
lock
or
jne
mov
es
cmc
xchg
scas
mov
xchg
sub
push
pop
jns
jge
ljmp
mov
jns
pop
push
inc
int
dec
sbb
mov
aam
jns
xchg
inc
popa
shrb
cmp
sub
call
jns
xchg
push
push
popf
push
sub
xlat
rcrl
xchg
push
pop
loopne
outsl
mov
xchg
jb
xchg
xchg
push
pop
jns
push
dec
jne
sbb
jb
mov
popf
fwait
into
cltd
jbe
ret
insb
xchg
mov
mov
mov
in
test
sub
xor
pushl
cltd
stc
notl
call
mov
add
xchg
pop
jle
out
pop
pop
push
ljmp
pop
jle
ret
idiv
mov
inc
scas
mov
mov
dec
cwtl
lock
fnstsw
dec
or
mov
mov
mov
mov
sub
adc
aaa
mov
cmpsl
andl
pop
dec
into
insl
push
mov
btc
add
test
repnz
cmp
or
arpl
adc
lret
mov
js
dec
or
fiaddl
sub
int
lods
pop
test
adc
push
leave
xor
dec
dec
inc
mov
jnp
or
cmc
xchg
add
daa
movupd
lret
fistps
mov
ret
mov
fbld
rclb
pusha
int3
jns
jmp
adc
bound
add
pop
push
lret
xor
pop
jns
or
mov
pop
lcall
and
lock
mov
cmpsb
and
repz
dec
add
int3
inc
mov
shr
jae
push
das
adcb
repnz
das
cmpsb
xor
fisttpll
jecxz
mov
jg
iret
cmpsl
fstl
orb
add
and
notl
call
test
es
shrl
stc
in
cwtl
hlt
mov
cs
xchg
xchg
inc
or
pop
mov
jp
iret
lods
inc
mov
pop
jne
leave
iret
cmp
mov
lds
mov
mov
call
das
mov
pop
dec
mov
sub
int
bound
jecxz
les
int
mov
lret
fnstenv
lods
add
aas
inc
jb
rorb
aas
fists
mov
ja
xchg
mov
xchg
mov
add
ret
xchg
pop
jle
pushf
ficompl
and
pop
out
xchg
pop
jle
ret
mov
adc
push
mov
xchg
mov
repnz
clc
enter
int3
dec
ljmp
lcall
mov
and
int
lcall
mov
and
inc
jns
push
repnz
repnz
das
pop
sbb
xor
popl
sahf
popf
lret
aas
xchg
repnz
das
mov
jmp
stos
cmpsl
pop
lret
das
mov
pop
xor
jno
iret
pop
test
mov
adc
mov
mov
mov
push
push
and
mov
xchg
sub
cld
repnz
das
xor
lods
mov
in
push
shlb
into
add
ret
sub
cs
push
sbb
xor
cmp
cltd
repz
mov
fcmovnbe
sbbb
test
pusha
xchg
out
xchg
sub
inc
add
add
lret
das
mov
sub
mov
xchg
pop
or
cld
repnz
mov
jg
nop
mov
outsl
lcall
inc
xchg
push
pop
jns
mov
xchg
sti
das
pop
and
jnp
in
sbb
mov
in
in
das
jmp
in
xlat
js
or
dec
push
xor
jl
cmp
dec
insl
pop
fstps
dec
jns
loop
or
stc
mov
xor
xchg
push
pop
cmp
xchg
push
and
pop
jns
loope
cmp
mov
pop
and
imul
inc
gs
cld
adc
int3
clc
dec
pop
pop
pop
loope
roll
int3
outsb
pop
jge
sbb
lea
out
mov
xchg
jmp
cmp
xchg
ds
dec
cld
repnz
das
mov
mulb
test
notl
jno
ljmp
lds
sbb
lret
mov
lret
fisttpl
jle
in
mov
sub
push
push
and
push
scas
jle
in
pop
xor
addr16
out
sbb
out
and
mov
cmpsb
sbb
pop
xor
popf
ret
jp
sub
jno
xchg
jle
in
pop
sbb
movsl
outsb
push
aaa
push
mov
cs
in
pop
jle
shl
fimuls
sbb
jle
inc
mov
sub
repz
js
push
pusha
jmp
fbld
pusha
sbbl
jecxz,pt
cmp
lret
sub
movsl
clc
lea
inc
rorb
mov
cltd
stos
mov
or
lret
inc
shll
in
sub
adc
jg
popa
xor
sub
and
mov
mov
sahf
jecxz
imul
cmp
les
loope
jne
in
xchg
call
mov
add
cli
fmulp
sub
xchg
pop
mov
and
mov
and
sarb
fcom
dec
lea
adc
mov
enter
lods
or
lods
inc
push
push
lahf
test
jbe
lods
xchg
push
fimuls
inc
in
and
inc
pop
jns
inc
dec
rolb
or
out
jae
jns
pushf
add
sbbl
in
push
pop
fs
pop
inc
mov
or
push
pop
jns
ja
cmc
loop
mov
jl
in
inc
es
lahf
popa
imul
aad
in
enter
mov
cmp
fcomi
in
push
ficomps
mov
adc
mov
xchg
lcall
repnz
popa
jmp
inc
add
test
xchg
push
cmp
dec
sub
lea
or
cli
mov
xor
mov
mov
dec
xor
ficompl
in
mov
push
cmp
and
scas
addr16
pop
xchg
xor
mov
inc
call
jnp
sbb
call
push
jae
pop
jle
in
aaa
jle
adcb
sbb
out
and
jg
and
addr16
stc
push
int3
repnz
jle
in
std
dec
jno
inc
or
lret
jns
stc
in
adc
ljmp
clc
fisttpl
in
mov
and
push
ljmp
js
icebp
xchg
xchg
or
paddb
lret
das
out
xchg
shl
pop
cmp
inc
repnz
das
mov
fistps
dec
negb
pop
cld
push
outsl
ja
add
test
mov
insb
pop
adc
shll
repz
jl
lret
das
mov
xchg
imul
stc
pop
je
lret
das
mov
and
or
jp
sub
cld
repnz
outsl
add
iret
xchg
clc
inc
clc
les
fidivrs
jmp
scas
jl
jne
iret
call
das
rcl
sub
sbb
call
int
test
popa
jae
scas
mov
daa
cmp
xor
xchg
pop
jle
mov
repnz
or
pop
pop
jle
in
sti
stc
cmp
inc
std
enter
stos
shl
jle
in
jmp
dec
jp
push
inc
movsb
xchg
orb
in
pop
dec
enter
aad
xchg
in
xchg
jle
xchg
in
loopne
je
mov
pop
jle
jecxz
jg
aam
pop
ror
cmc
xorb
pop
jmp
and
or
test
pop
jle
in
movsl
and
mov
sub
sub
les
jle
in
sub
jge
test
in
pop
ret
mov
sub
in
mov
dec
jle
mov
xchg
mov
in
mov
sbb
mov
mov
pop
pop
imul
jp
inc
movsl
stc
repnz
das
out
lods
pop
movsb
or
loope
inc
in
jg
mov
sbb
jg
inc
xor
stos
mov
pop
jle
dec
fdivr
pop
bnd
je
sub
mov
in
mov
and
lock
stc
in
dec
push
bound
stos
sbb
data16
cmpsl
xchg
stc
in
pop
mov
jmp
frstor
addl
test
dec
call
js
xor
sti
jns
mov
cs
jmp
stc
fdivr
lret
and
rclb
pop
inc
dec
jle
in
sbb
or
push
jmp
aad
arpl
xchg
jg
or
sbb
inc
push
pop
jns
lods
mov
cmpsl
jl
xchg
repnz
lret
fnstcw
sub
test
dec
push
dec
imul
popf
mov
pop
mov
push
cld
lret
das
lcall
sti
ja
fsubs
rolb
das
mov
out
mov
out
push
xor
sahf
jge
lret
andb
iret
mov
in
mov
sti
jle
test
lea
iret
pushf
imul
and
fs
inc
ret
shr
lret
lcall
lock
scas
mov
jno
sub
mov
jl
lea
push
enter
loopne
and
dec
out
mov
adc
mov
lret
das
stos
stos
movsb
jge
mov
pop
push
push
or
or
cmp
cmp
adc
push
imul
lea
int3
test
scas
pop
jns
push
fnsave
mov
repnz
jae
push
jns
cmp
sub
sub
fisubs
push
lahf
xchg
dec
mov
push
mov
repnz
in
idiv
aad
inc
sub
dec
or
ret
in
push
pop
push
scas
in
pushf
incb
lds
pop
jns
in
std
jo
prefetch
jl
repnz
and
add
mulb
push
mov
xor
lret
das
mov
push
cbtw
imul
aaa
je
fcmove
and
lock
xchg
aaa
or
mov
std
cmp
or
pop
pop
negb
cmpl
pushf
ss
pop
jns
sbb
mov
sti
pop
daa
mov
jmp
jns
xchg
push
adc
stos
inc
or
sahf
into
in
push
pop
and
push
jecxz
xchg
and
nop
std
stos
icebp
xchg
push
pop
jns
sub
in
ds
and
push
pop
jns
pop
mov
sbb
sub
xchg
xchg
push
leave
loope
mov
sbb
pop
sbb
lea
pop
push
pop
jle
lahf
mov
cmpsb
pop
jp
in
out
or
icebp
leave
xchg
or
mov
test
xor
das
ds
fwait
or
xor
mov
cld
repnz
push
mulps
sbb
inc
repz
and
enter
lcall
sub
cmp
mov
or
xchg
push
pop
hlt
call
lcall
ret
cmp
mov
jle
ret
sub
xchg
pop
mov
inc
icebp
test
and
movsl
and
stc
add
inc
jne
daa
adc
arpl
or
ljmp
mov
jns
xchg
push
push
mov
jbe
xor
xchg
shl
push
pop
loopne
fldenv
clc
fsin
pop
stos
in
adc
imul
enter
cmp
addl
jns
popf
hlt
cmp
or
and
adc
xor
nop
xchg
mov
dec
xchg
push
pop
jns
sub
adc
cmp
das
jg
enter
xlat
adc
lock
cmp
mov
arpl
xchg
mov
je
xor
sti
pop
cld
repnz
das
arpl
shlb
movsl
lahf
mov
add
aaa
in
aaa
ret
adc
xlat
or
xchg
rcll
jp
aad
push
adc
xlat
mov
mov
jmp
in
mov
sbb
loope
in
das
pop
mov
mov
mov
pop
jmp
jo
loopne
aas
lahf
scas
mov
stc
pop
sub
rolb
pop
repnz
xchg
sub
cltd
fdivs
pop
push
jmp
xchg
jg
cld
int3
push
mov
jge
jnp
pop
pusha
pop
leave
js
mov
pop
leave
and
mov
jnp
mov
sub
in
call
sbb
push
sub
ljmp
popa
lea
lret
or
inc
dec
pushf
std
mov
gs
sub
loopne
jge
movsl
jno
out
push
pop
stc
repnz
mov
ss
lahf
xor
in
popa
loop
loop
jge
int
andl
push
xchg
lds
jbe
xor
push
in
jg
mov
mov
and
cmpsl
jae
das
lcall
add
sti
cmp
shlb
jge
sub
xor
popf
lret
je
jle
in
std
add
and
lret
stc
in
pop
fnstcw
cmp
xchg
call
orb
mov
sbb
outsl
sub
ss
mov
iret
aam
repnz
lea
mov
or
or
lret
mov
faddl
cmpsl
in
mov
ja
mov
sbb
push
imulb
push
repnz
xor
jne
mov
xor
in
aaa
mov
xchg
out
lcall
insb
lcall
push
or
stc
in
mov
and
dec
icebp
stc
in
pop
arpl
inc
addr16
sti
sbb
test
and
mov
scas
and
es
pop
int
scas
adc
pop
mov
cld
and
arpl
cmp
push
popf
jns
mov
pushf
stos
fstpt
xor
mull
in
mov
cld
nop
mov
in
sub
add
movsb
imul
in
scas
mov
iret
gs
lahf
xor
lret
out
xchg
xchg
xchg
adc
jne
jle
and
mov
mov
aas
add
mov
scas
loope
mov
pop
jle
test
bnd
daa
dec
cmp
xchg
pop
jae
cvtps2pi
push
push
popf
cmp
imul
jle
lcall
adc
cld
repnz
sub
repz
cmp
lret
lock
insb
mov
xor
and
pop
movsl
mov
mov
les
mov
sub
scas
jmp
in
arpl
inc
xchg
or
stc
in
ljmp
jmp
pop
jne
repnz
das
decl
shlb
push
insb
add
pop
out
das
mov
mov
nop
xchg
or
sub
pusha
inc
and
mov
adc
mov
jg
mov
lock
xor
ficoml
cmpsl
mov
jnp
xchg
or
sub
add
cmp
sbb
mov
xor
inc
push
das
mov
xor
mov
mov
and
push
mov
sahf
pop
out
xchg
mov
rorb
arpl
cmp
xchg
mov
mov
sub
clc
fwait
rep
js
in
mov
imulb
in
push
imul
call
inc
push
pop
ljmp
or
inc
scas
mov
fsts
mov
ret
mov
mov
or
xor
adc
das
decl
imul
mov
dec
mov
inc
push
mov
mov
lret
test
data16
or
xor
or
lret
adc
add
lea
ss
bound
in
daa
add
test
into
xor
les
movsb
adc
push
push
dec
mov
in
mov
shl
nop
pop
sbb
or
pop
jns
out
js
mov
or
in
jg
add
lea
jne
cmp
loope
jl
push
jmp
movb
jns
push
pop
stos
adc
xor
and
xchg
sub
inc
or
scas
jge
inc
leave
cwtl
sarb
loope
das
mov
in
jg
or
lock
jle
neg
test
jmp
std
mov
lea
repnz
test
push
inc
push
repnz
das
decl
push
jne
leave
nop
fstpl
cmp
mov
jae
dec
add
stc
in
arpl
repnz
add
in
sbb
shlb
pop
jle
in
mov
mov
lret
stc
in
pop
dec
fnstcw
adc
sbb
xchg
pop
jle
cmp
jbe
push
ret
and
mov
test
imul
jge
out
pop
xchg
nop
insl
lds
enter
xchg
jle
push
sub
and
cld
repnz
sub
jmp
bound
sar
enter
in
das
fistpl
adc
pushf
mov
xchg
pop
inc
sbb
inc
insb
mov
sbb
mov
pop
lds
js
sbb
flds
jge
lahf
in
lock
into
movsl
gs
movsl
fstl
cmpsb
xchg
xchg
jg
jb
mov
xor
inc
and
stc
in
outsb
stos
jmp
in
mov
shl
frstor
and
in
push
pop
lea
lret
icebp
lcall
pop
jle
ja
test
mov
mov
sti
enter
push
loopne
jecxz
fidivl
in
das
mov
pop
cwtl
pop
in
add
stc
push
xchg
jge
sub
jns
adcb
addr16
sub
dec
xor
pop
insl
jmp
stc
notl
repz
sub
lahf
scas
stc
in
pop
jno
sub
adc
lods
lods
inc
jle
and
das
flds
cmp
in
cld
cmpsl
push
jo
inc
inc
pop
xlat
enter
jle
pop
ds
dec
daa
sub
pop
sub
dec
outsl
js
test
jbe
jns
lods
lea
clc
cmpsl
in
push
pop
fwait
dec
mov
imul
cmp
lods
inc
repz
adc
push
fdivrp
xchg
dec
xor
loopne
insl
mov
push
pop
jns
int
sahf
jbe
fbld
jg
xor
jne
imul
mov
pop
stc
in
inc
cmpsb
xchg
or
add
sub
jmp
xchg
pop
jle
sub
mov
cmp
jle
pop
jle
or
xor
mov
fwait
pop
jle
in
xchg
adc
adc
outsb
push
pop
mov
stc
in
test
repz
mov
adc
jnp
xchg
pop
inc
rcr
mov
or
push
cmp
jmp
inc
leave
inc
aas
pop
push
xlat
jmp
out
test
pop
and
cmc
mov
repnz
repz
or
cmp
inc
idivl
aaa
pop
sbb
in
jl
lret
repnz
das
in
jne
cwtl
stos
dec
movsl
xlat
pop
push
repnz
das
mov
pop
popa
test
cwtl
ret
lret
das
mov
mov
arpl
inc
das
mov
aaa
or
ret
imul
roll
cmp
in
push
fisubrs
jno
push
inc
xor
test
inc
inc
pop
jns
fs
inc
enter
lret
mov
jmp
push
jmp
mov
fnsave
in
xchg
rclb
mov
les
push
movsb
mov
mov
mov
loope
mov
jno
mov
lret
add
mov
add
jnp
bound
jmp
lret
das
data16
ficoml
push
push
cmpsl
mov
ds
lret
mov
and
lock
sub
adc
mov
ret
mov
repnz
add
xchg
push
ficoms
xchg
lock
outsl
jbe
lret
push
pop
jns
pop
mov
mov
repnz
push
push
pop
jns
cmp
dec
int3
scas
ret
adc
xor
ds
stc
test
sbb
out
inc
iret
testl
mov
pop
sbb
jl
jo
xorl
popa
inc
jb
adc
cld
repnz
pop
sbb
jo
add
aaa
xor
enter
add
arpl
addr16
lret
mov
sbb
sbb
jnp
scas
mov
xchg
xchg
dec
cld
or
test
sbb
mov
lret
sub
lcall
or
lret
das
decl
push
fcomps
mov
add
bnd
and
dec
scas
mov
insl
jge
adc
pop
incb
lret
or
mov
push
sbb
sbb
push
cmpsl
jb
sub
scas
mov
orl
jp
and
insb
mov
lret
sub
repz
inc
stc
in
jge,pt
xchg
push
xchg
push
leave
and
insb
inc
in
pop
jle
xchg
sub
arpl
mov
mov
dec
int
mov
fsub
xchg
push
pop
and
mov
rcll
jmp
mov
xor
lock
mov
push
pop
jns
pop
repz
into
lds
pop
jns
xchg
mov
je
push
fisttps
jno
addr16
push
aad
dec
jno
int
add
or
xor
insl
mov
push
in
cld
mov
into
les
sbb
iret
lret
das
mov
push
nop
push
frstor
inc
dec
jae
cld
repnz
sub
pushf
cld
fimuls
push
lock
das
adc
adc
xchg
and
mov
das
mov
inc
add
inc
sub
mov
imul
jne
repnz
adc
pop
loopne
jmp
add
das
lcall
mov
addr16
vandps
loope
mov
ret
test
cmp
cmpl
cld
repnz
das
aas
adc
mov
mov
mov
repnz
das
mov
fistl
std
add
out
mov
das
mov
aas
inc
movsb
rcrb
adc
cmp
lahf
pop
testb
repnz
fwait
add
repnz
xorl
or
sbb
inc
mov
dec
fimuls
loope
orl
stos
fistps
stc
in
cwtl
inc
outsb
push
sub
or
test
jmp
cltd
inc
push
pop
xor
push
push
ret
jg
imul
xor
dec
and
stos
cli
lcall
in
inc
xchg
scas
sarl
int
test
sub
jns
dec
pop
push
mov
inc
test
stc
in
and
in
lods
sub
pop
jle
rcrb
sbb
mov
and
stc
enter
andl
pop
dec
in
mov
pop
leave
and
leave
data16
repnz
das
test
mov
pushf
repnz
das
mov
pop
inc
mov
xchg
das
mov
push
push
fs
mov
jae
push
bound
loopne
sub
or
dec
insb
inc
jge
loop
mov
add
test
das
ret
inc
and
push
pop
sub
sahf
fbld
or
in
testl
int3
sub
ret
repnz
pop
sbb
pop
xorl
push
dec
adc
mov
sbb
inc
lret
cmpsb
add
pop
add
jmp
or
shrb
mov
sub
pusha
mov
cmp
daa
pusha
stc
in
daa
jg
loope
xchg
mov
pop
shrb
shrb
rorb
jmp
cwtl
xchg
xchg
pop
jle
std
mov
pop
dec
jno
js
mov
pusha
inc
jle
in
push
adc
out
xchg
cmp
clc
popf
icebp
xchg
lds
pushf
and
push
aaa
notb
into
mov
xchg
jg
cmp
js
or
cmp
add
cld
sti
enter
sbb
fiadds
jnp
aad
loopne
lahf
cld
repnz
das
stc
repz
inc
div
inc
push
in
jle
xchg
das
mov
icebp
jmp
xchg
daa
sub
adc
mov
pop
call
cmpsb
insb
lcall
mov
js
shrl
int
and
cld
repnz
das
xor
pop
in
pop
cmp
cmp
outsb
mov
imull
mov
dec
xchg
push
push
enter
xchg
xchg
aaa
adc
filds
fildl
push
pop
jns
into
adc
pop
int
nop
fwait
xor
adc
push
mov
in
jg
or
or
xchg
in
push
xchg
sub
xor
enter
jne
xlat
in
push
pop
loopne
bound
pop
jg
xchg
int
iret
mov
add
mov
push
mov
addb
gs
xor
and
cmp
aas
ljmp
jbe
pop
fisubrs
je
scas
inc
jl
in
xor
fcmovne
xor
mov
sbb
pop
mov
dec
sbb
pop
test
das
mov
inc
lods
fldcw
mov
pop
fistl
mov
sti
mov
lret
js
mov
sbb
bndldx
xor
stos
into
mov
sti
loope
repnz
addr16
aas
fiaddl
fiadds
mov
mov
outsb
adc
or
lock
xor
dec
pop
stc
xchg
ljmp
jle
stc
jnp
lret
jnp
sbb
dec
ja
push
mov
push
jmp
push
mov
pop
mov
add
push
push
add
push
scas
mov
fisubrl
out
sub
jmp
mov
imul
inc
test
rolb
mov
mov
or
lret
lahf
scas
mov
sbb
mov
sarl
aam
adc
mov
jns
test
ljmp
fimuls
fmull
inc
incl
mov
xchg
pop
lock
inc
out
sbb
cmp
xor
xchg
pop
jle
pop
pushf
jp
mov
addr16
in
sti
enter
lcall
loope
test
negb
fwait
aam
loopne
in
rol
das
mov
inc
jae
xchg
adc
xchg
add
lea
mov
cmp
and
dec
or
enter
xor
frstor
or
mov
insl
xchg
jno
sbb
xchg
dec
ror
or
in
pop
adc
and
scas
xor
jmp
stc
jb
inc
dec
mov
mov
add
sbb
test
mov
add
dec
into
dec
stos
xchg
enter
out
test
jp
das
icebp
push
dec
mov
jle
sti
cmp
push
pop
jns
or
jle
cmpl
jne
pop
jns
xchg
es
add
lods
adc
cmp
enter
jmp
pop
add
in
sbb
jg
xor
push
mov
sahf
jnp
xlat
jl
jg
ficomps
sahf
xchg
add
mov
jl
in
cmp
sbb
push
pop
sarb
xor
lret
mov
cmp
jns
sarb
xchg
pop
cmp
add
push
pop
pop
jle
in
mov
or
pop
es
add
mov
out
push
stc
in
ret
sti
or
inc
repnz
das
call
sbb
fistpll
sub
mov
pop
jne
xor
scas
mov
mov
and
mov
dec
lods
es
mov
out
dec
xor
enter
lret
test
scas
je
in
inc
adc
xor
rcrb
imull
dec
subb
stc
sub
enter
addr16
inc
lock
xchg
push
pop
jns
adc
xorl
or
data16
cmc
divb
xchg
push
pop
jns
andb
jmp
jb
xor
push
pop
jns
jae
cmp
sbb
notl
and
loopne
xor
in
pop
jle
cmc
cs
cltd
sbb
sar
inc
mov
stc
hlt
adc
mov
stos
sub
cltd
sahf
pop
aas
mov
fwait
pop
ror
dec
leave
jge
or
ds
add
nop
mov
popa
in
xchg
imull
jne
sbb
mov
adc
and
repnz
mov
in
stc
dec
sub
xor
ficoms
mov
in
jo
je
nop
movsl
mov
sub
lret
das
mov
mov
clc
shl
inc
mov
lds
pop
sbb
in
cmp
and
dec
inc
in
movsb
push
stc
in
enter
outsl
cwtl
pop
dec
clc
insl
push
xchg
pop
adc
insb
sbb
add
xchg
push
ficoms
ds
out
pusha
pop
jl
in
ror
mov
mov
adc
jb
nop
notb
cmpsl
mov
rorl
sbbl
adc
imul
pop
stc
in
cltd
ret
xchg
lods
xlat
dec
mov
push
or
push
and
test
sub
in
add
inc
or
mov
lret
rcr
cmp
in
mov
fdivrs
lret
sub
mov
push
insl
fs
mov
mov
or
into
stos
push
xlat
adc
mov
cmpsb
xor
jno
test
adc
out
fwait
jnp
cmpsb
pop
pop
jns
mov
jp
arpl
lret
mov
lahf
and
stc
int
xchg
das
mov
adc
rcr
dec
jge
ficomps
js
adcl
repnz
insl
sub
xchg
push
push
xorl
jnp
xlat
in
push
pop
jb
andb
vpunpckhwd
cli
mov
repz
int3
mov
xchg
sbb
jle
cld
jnp
enter
shlb
pop
add
sbb
in
jg
dec
jae
xor
push
fsubrs
stc
fldl
push
dec
adc
pop
push
push
daa
flds
add
push
jge
jbe
cmp
dec
xchg
xchg
testl
jo
aas
jnp
addl
cmp
adc
hlt
xchg
xchg
sub
cmp
xor
test
les
pop
popf
scas
dec
jle
in
mov
mov
out
pop
and
pop
in
mov
pop
insl
mov
add
xchg
adc
mov
fnstsw
and
out
mov
lret
das
ficoml
push
cli
dec
js
pop
test
mov
sbb
push
and
mov
mov
add
cmp
adc
push
scas
mov
ret
dec
sub
mov
std
push
mov
je
cmp
xchg
xor
dec
ret
fsubrp
jne
inc
out
scas
loopne
sti
mov
mov
enter
push
dec
mov
push
adc
popa
nop
adc
faddp
das
out
out
int
ret
mov
sub
adc
shlb
loope
fs
inc
mov
xchg
outsb
push
movsl
mov
xchg
test
mov
lret
mov
imull
push
fdivrs
xor
hlt
xchg
push
stc
notl
movb
cmp
adc
repnz
das
sti
stos
aas
js
push
aas
inc
icebp
lock
daa
lret
das
mov
fcoml
mov
xchg
dec
inc
mov
clc
mov
dec
movsb
push
pop
jecxz
push
or
into
push
lds
push
into
rorb
les
xchg
pop
mov
sar
cmp
lret
das
mov
cld
mov
xchg
int
daa
jp
mov
or
lahf
popa
xchg
fsubp
xchg
divl
dec
xchg
nop
dec
pop
jns
add
js
xchg
test
adc
jp
lret
mov
mov
movsl
dec
out
cmpl
lods
mov
pop
inc
inc
cld
repnz
and
jb
mov
push
jle
adc
lret
das
mov
dec
icebp
jne
out
mov
dec
push
vpaddb
mov
jnp
jp
out
dec
xor
rolb
adc
movsb
repnz
addr16
jb
push
and
and
sub
shll
out
cld
add
xchg
pop
jecxz
push
mov
out
xchg
adc
in
sub
add
pop
inc
lods
rcll
dec
imul
insb
lcall
stc
enter
sbb
hlt
bndstx
lods
xchg
rcrb
fbld
inc
dec
outsl
mov
dec
outsb
pop
and
stc
aaa
shll
enter
add
outsb
lcall
adc
dec
test
and
dec
xchg
mov
xchg
ficoms
sarl
pop
sarl
xchg
test
sbb
push
in
dec
jno
repnz
movl
sbb
pop
int3
icebp
fdivrs
adc
jnp
loopne
xchg
cmpsl
enter
add
adc
aad
shr
push
clc
push
test
xlat
fbstp
jns
xchg
stos
cmp
jg
push
jne
xchg
pop
imul
push
xor
sub
pop
lret
pop
jle
or
push
ret
pop
adc
repnz
fwait
xchg
pop
adc
push
andl
jg
pop
xor
aam
les
stc
in
aas
ret
into
sarl
fwait
cmp
in
pop
jle
mov
lea
xor
out
inc
adc
stc
aad
cltd
mov
push
jb
pop
mov
jno
ret
lods
insb
add
test
fistpll
in
sbb
mov
popa
pop
push
sahf
aam
pop
fwait
sbb
sbb
repnz
outsl
push
stos
mov
dec
stc
mov
scas
mov
jp
insb
das
mov
int3
push
cmp
lret
insb
jae
cmc
loope
rcrl
mov
dec
arpl
imul
cld
repnz
insb
push
repz
scas
mov
stc
add
lret
faddp
cmp
mov
lock
hlt
xchg
sbb
jns
scas
jbe
loope
popa
movd
jge
in
inc
js
jg
jecxz
cld
jg
daa
enter
mov
push
je
and
cmp
xlat
mov
adc
daa
sbb
sbb
hlt
iret
jns
or
jns
or
mov
in
push
pop
push
cld
xchg
xchg
push
outsb
sub
xchg
push
pop
jns
addr16
jae
daa
pop
insb
mov
pop
aam
mov
mov
sub
push
stc
dec
sar
jb
xchg
mov
and
outsb
dec
push
icebp
adc
adc
ds
rclb
imul
enter
sti
outsb
shrl
sub
call
adc
popl
mov
fldl2e
and
pop
aam
or
inc
adc
ljmp
xchg
mov
lret
xchg
testl
push
inc
fdiv
and
stos
jl
add
imul
or
xchg
jl
imull
jmp
mov
in
orb
sahf
mov
pop
inc
xor
xor
dec
xchg
push
pop
jns
test
sbb
pushw
arpl
in
lds
stos
mov
dec
dec
add
xchg
cmpsl
icebp
xchg
xchg
and
mov
inc
cs
mov
test
push
pop
loop
jae
pop
jmp
adc
inc
mov
lret
sub
jns
inc
xchg
mov
or
cmp
xchg
xlat
or
clc
cltd
push
sbb
adc
cld
pop
push
or
mov
pop
xchg
into
ds
cltd
mov
cmpsl
in
addr16
lods
jge
xor
cld
repnz
das
jge
mulb
mov
sub
xchg
das
mov
cmp
or
js
push
bound
cmpsl
pop
or
add
inc
inc
sub
andb
repnz
push
jo
cmc
in
and
jno
adc
mov
push
mov
push
mov
lcall
mov
sbb
icebp
addr16
add
mov
xchg
xchg
push
jmp
mov
mov
out
dec
testb
arpl
xchg
mov
sbb
ljmp
cmpsb
sbb
das
mov
popf
test
imul
cmp
mov
les
xor
scas
mov
rep
pop
xor
shrb
pop
cs
add
cmc
fistl
std
jl
xchg
das
lcall
mov
divl
popf
cltd
cmp
adc
cltd
sbb
xchg
sub
or
in
pop
push
and
mov
or
loop,pt
push
lds
fisttps
je
insl
dec
sti
jae
pop
or
mov
jbe
pushf
outsb
test
stc
notl
cld
aas
sti
jg
in
out
movsb
cs
test
xchg
lock
bound
xor
stc
in
pop
aad
andb
cmp
pop
cmp
lcall
repnz
insl
ja
push
test
fs
pop
jns
sub
sbb
sub
jns
xchg
in
sub
scas
jp
ret
mov
and
in
sub
pop
mov
mov
xchg
push
pop
test
dec
xor
gs
jle
notl
bound
mov
ss
xchg
push
inc
xchg
pop
rcrl
dec
ficompl
and
notl
js
test
push
xchg
pop
jle
mov
inc
call
in
mov
jne
fldcw
sub
sarb
mov
call
adc
push
popf
mov
jo
adc
lret
jge
adc
adc
and
xchg
in
pop
push
inc
pop
jns
popf
push
mulb
test
andb
repnz
inc
leave
mov
dec
jge
sub
jp
movntps
je
outsb
cld
sti
enter
ret
sbb
jmp
iret
stc
in
jg
add
mov
fmuls
adc
aad
test
adc
hlt
sbb
push
pop
xor
dec
sbbb
stc
sti
enter
cmp
shlb
lret
adc
mov
scas
mov
jl
testl
sub
in
push
shl
jns
and
sti
pop
cmp
sbb
xor
pop
mov
leave
lods
or
movsb
dec
repnz
mov
aam
mov
mov
fistpl
cmpsl
ds
mov
lods
push
outsl
insb
xchg
ja
add
add
sbb
pop
jns
xchg
movsb
mov
or
push
adc
in
jg
jge
nop
and
mov
dec
push
jl
call
ljmp
fbstp
xor
stc
lds
inc
cmp
xor
xchg
pop
jle
cmp
ljmp
add
xchg
pop
jle
dec
adc
inc
sti
aaa
in
aad
ds
lea
jbe
mov
and
mov
loopne
dec
and
jne
pop
jns
mov
into
ret
fimull
mov
in
dec
mov
adc
pop
and
in
push
fiaddl
adc
push
push
fwait
out
shlb
and
or
into
sbb
punpcklwd
movsb
das
mov
lret
dec
cwtl
nop
jbe
rcrl
inc
fisubs
rcrl
add
out
jge
cs
mov
mov
dec
pop
and
or
and
adc
outsl
pop
cmp
push
inc
and
insb
cltd
mov
call
cmp
jg
cld
sub
fs
insb
xchg
push
ret
and
sarl
and
pusha
dec
cmpsl
mov
in
push
pop
hlt
mov
jge
mov
rolb
push
inc
pop
pop
jns
lret
in
cmp
and
xor
mov
jmp
push
fldl
pop
cmp
jl
popa
push
pop
ja
enter
fnstcw
in
cmpsb
invd
cwtl
cmc
dec
sub
or
mov
dec
inc
scas
mov
dec
mov
sub
lods
enter
push
pop
mov
mov
in
clc
cli
jmp
fcomi
dec
cmpsb
jns
cmp
dec
sbb
in
push
pop
cltd
sub
lods
pop
push
xor
fmull
xor
scas
cld
jb
dec
icebp
pop
sbb
adc
and
call
stos
stc
iret
jp
add
cmp
jle
in
and
out
pop
jns
mov
stc
in
pop
fdivl
cli
inc
adcl
jle
xchg
mov
cltd
loop
dec
push
jb
rcll
ret
aam
shl
inc
mov
rcrb
in
push
stc
pop
mov
mov
pusha
jns
stc
mul
xchg
and
pop
adc
xchg
pop
jle
call
fstpt
inc
ljmp
inc
testl
pop
push
pop
repnz
std
stos
adc
dec
jbe
clc
inc
push
lahf
popa
pop
mov
in
push
es
jp
xchg
jl
ror
jnp
dec
add
test
xchg
mov
xchg
xor
sti
jl
in
fcoms
imul
inc
pop
das
push
test
lahf
or
mov
mov
std
jmp
icebp
jecxz
insb
stc
test
xchg
add
sbb
dec
fildl
rol
fs
xchg
sbb
sub
xchg
cmp
cmc
sub
lds
repnz
das
decl
push
jns
push
pop
int3
xor
mov
jmp
pop
push
mov
mov
add
add
lahf
pop
pop
jno
andb
push
mov
sbb
std
mov
adc
jge
lea
pop
pop
cltd
out
mov
repz
or
mov
and
adc
xchg
mov
pusha
or
xchg
push
xchg
cmp
xor
scas
sub
pushf
les
inc
pop
pop
jle
in
mov
shl
lcall
stc
in
sub
sub
rolb
mov
lock
insb
ds
pop
pop
test
aad
ret
scas
xor
out
ret
jecxz
out
or
scas
mov
pushl
dec
mov
test
xchg
sahf
add
aad
cmp
mov
repz
imul
pop
das
mov
movsl
sub
add
dec
shll
cld
repnz
rcll
jno
xchg
jnp
stc
cltd
inc
lods
stc
in
jg
mov
out
or
push
mov
jle
xor
or
or
mov
repnz
mov
pop
jno
pop
jmp
push
xor
dec
mov
or
pop
jns
pop
ret
inc
push
fnstsw
inc
ret
cmp
lods
mov
in
pop
pop
mov
dec
push
stos
lea
and
ficompl
pop
jns
cmpb
fildll
xchg
in
repnz
aad
ljmp
lret
mov
jge
mov
cmp
scas
mov
jo
rcrl
ss
jne
mov
inc
sub
lcall
sbb
ja
outsl
icebp
iret
les
sbb
xchg
xor
lret
add
jbe
unpckhps
cmpsw
cltd
sbb
sub
push
jge
mov
out
subb
mov
fwait
cmp
push
out
adc
mov
sbb
rorb
dec
xlat
mov
or
and
fs
cs
sub
jo
xorb
jl
das
mov
sub
sub
add
lahf
xchg
repz
mov
gs
icebp
xchg
pop
push
das
sub
fnstenv
movsl
jnp
mov
pop
jns
cmpsl
pop
std
push
push
rcrb
enter
jns
xchg
or
dec
sub
fs
dec
jns
xchg
push
and
lea
or
in
fs
push
pop
cmp
xchg
imul
sub
pop
sbb
mov
cmp
in
pop
arpl
in
imul
jge
lea
sub
sub
loop
inc
movsl
sbb
sub
inc
pusha
mov
sbb
lods
mov
out
fcoml
arpl
pop
sub
sub
lds
mov
fidivrl
jge
sub
dec
insb
and
adc
repnz
mov
mov
out
xchg
jns
sbb
scas
mov
fidivs
jecxz
dec
inc
sbb
sub
sub
mov
mov
repnz
mov
pop
lret
sti
lret
mov
push
adc
sub
mov
fs
mul
mov
mov
xlat
push
pop
xchg
push
imul
push
sub
movsb
int3
mov
pusha
stos
lret
stc
in
pop
push
out
rolb
push
outsl
mov
in
pop
jle
pop
inc
nop
fdiv
cmp
dec
outsb
lret
mov
aas
ljmp
xchg
mov
and
inc
fcompl
jmp
jno
xor
adc
into
es
xor
jecxz
dec
or
sub
pop
mov
sub
sbb
mul
jmp
push
jmp
cs
aam
pop
cmp
dec
push
mov
sti
loope
xchg
cmp
xchg
cmp
imul
arpl
or
stc
call
lods
mov
not
stc
in
pop
mov
xchg
adc
jns
js
int
cmpl
enter
adc
stos
fidivrs
sbb
in
leave
je
push
add
sbb
or
cld
jle
push
idivl
stc
in
imul
push
jg
clc
enter
push
ljmp
lahf
int
in
aas
addr16
mov
mov
in
pop
jle
mov
arpl
jns
lods
cmc
les
jmp
xor
ja
xchg
push
pop
xor
push
inc
inc
flds
jg
pop
jns
mov
mov
xchg
and
aam
stc
in
aaa
mov
sbb
stos
push
mov
stc
in
pop
sbbb
push
cmp
pop
lods
inc
dec
mov
aaa
out
repz
push
jge
nop
inc
and
mov
inc
xchg
addl
out
test
repnz
push
jne
pop
shrb
inc
jnp
nop
push
ja
push
mov
ffree
popf
ja
in
jns
xchg
orb
pop
add
rcll
push
mov
sub
mov
adc
cmp
inc
pushf
sbb
mov
xchg
mov
add
call
mov
in
test
test
cmp
fbld
xchg
dec
mov
and
dec
outsb
ss
pop
jle
ret
pop
add
test
xchg
movsb
lea
cmpsb
mov
xchg
bound
lret
aad
jno
lea
adc
pusha
lret
mov
std
inc
jo
aaa
stos
cli
sub
add
cmp
xor
repnz
xlat
or
adc
loop
mov
and
scas
mov
in
cmp
aaa
push
pop
sbb
call
out
addb
int3
inc
lods
mov
notl
mov
jo
inc
stos
push
ret
pop
mov
iret
lea
sub
jne
in
lea
xor
ds
lret
mov
cmp
ficoml
xchg
test
sbb
in
mov
out
out
xchg
outsl
leave
insb
jle
in
xchg
pop
ficoml
repnz
inc
inc
cmp
dec
stc
in
pop
sbb
test
and
push
or
push
xlat
loopne
pop
orb
xchg
pop
jle
dec
jg
cmp
adc
fs
pop
jns
jmp
lock
js
jns
xchg
push
out
ret
mov
fists
out
dec
sbb
imull
lcall
in
xchg
lods
and
inc
imul
out
sub
add
adc
leave
fidivrl
es
or
iret
dec
jp
test
xchg
aaa
adc
add
pop
lret
adc
repnz
xchg
push
dec
sub
push
or
enter
pop
jp
addb
pop
xchg
sub
dec
clc
retw
test
cmp
jmp
loopne
jle
outsl
fmull
pop
shlb
inc
test
adc
shl
mov
mov
ja
sahf
mov
sub
les
cmpb
lock
mov
mov
jmp
mov
inc
hlt
movsl
mov
shrl
fiaddl
repnz
imul
mov
xchg
das
scas
mov
lret
dec
pop
jecxz
xor
fmulp
aam
and
pop
xchg
movsb
mov
popa
ss
jns
xchg
in
arpl
pop
popf
mov
xchg
xchg
push
xchg
xor
stos
add
lret
repnz
aas
inc
add
push
pop
xor
sub
inc
lret
test
loope
jo
push
sub
fisttpl
dec
movsl
adc
repnz
sti
adc
roll
lret
das
jle
dec
or
sahf
jnp
fmul
inc
mov
jecxz
xchg
add
outsl
jle
in
movsl
mov
sub
push
fwait
imul
xchg
pop
push
mov
ret
scas
mov
cwtl
sub
loopne
cmc
jnp
lret
aaa
push
repz
test
sub
sub
int3
pop
icebp
push
inc
sub
lret
mov
or
mov
lret
adc
nop
call
cmp
lahf
cmp
mov
xchg
mov
mov
lret
adc
pop
ret
in
mov
inc
in
idivb
cmp
stc
fiaddl
xor
ja
jmp
xchg
push
in
pop
jle
jno
push
pop
push
push
stc
ljmp
push
lret
mov
mov
sbb
and
popf
scas
sub
sti
jge
roll
repnz
inc
pop
ds
fstpt
ja
pop
add
and
jns
xor
or
push
hlt
jbe
stc
in
sahf
in
dec
sbbb
push
jne
cld
push
xchg
pop
push
jecxz
pop
cmp
out
cmp
rclb
lret
das
lcall
xor
cmc
test
lcall
jnp
mov
xchg
popf
sbb
in
and
and
mov
into
fsts
mov
loopne
pop
aad
inc
lock
in
pop
fiadds
or
arpl
xchg
pop
jns
xchg
inc
mov
imul
cs
mov
sub
aad
outsb
fsub
xchg
push
pop
pop
cmpsb
xchg
movsb
ljmp
loope
sbb
sbb
pop
sub
cltd
mov
pop
out
sub
add
mov
cmp
arpl
and
adc
fs
cmc
mov
xchg
push
pop
jns
adc
push
sti
aam
cld
fdivr
mov
jb
xchg
std
fs
mov
mov
or
or
mov
inc
mov
rorl
lock
jle
in
lods
loope
ss
dec
fisubrs
mov
rcrl
jmp
faddp
loopne
mov
xchg
push
pop
jns
jp
mov
ret
pop
xchg
sub
in
sub
in
hlt
enter
call
inc
loop
jmp
inc
push
pop
jns
adc
mov
jns
pop
jge
stc
in
cld
out
aam
lahf
inc
adc
jbe
mov
in
pop
mov
jp
mov
loope
aam
and
addr16
ror
add
and
lret
mov
sti
mov
jp
push
das
mov
repnz
mov
push
jbe
lret
das
mov
pop
cwtl
sbbb
clc
idivl
daa
les
jmp
mov
mov
cmp
cld
repnz
das
outsb
lret
xchg
rcrb
mov
and
mov
push
dec
enter
lds
imul
cmp
stc
in
jo
xor
push
push
pushf
mov
push
jle
in
mov
sub
fnstenv
movb
in
pop
mov
cmpsl
enter
mov
lret
das
mov
repz
js
ja
loope
jg
stc
repnz
mov
dec
jb
insb
jmp
stc
in
lret
add
mov
cmp
add
popf
test
daa
std
sub
push
add
push
mov
and
cmp
push
fwait
mov
xlat
pusha
leave
lret
lods
inc
xor
fdivrl
aad
jp
loop
fcomi
xlat
hlt
lods
in
push
fisubrs
outsl
rcr
movsb
or
aad
je
jle
push
pop
jns
or
sbb
or
rolb
lret
and
mov
xchg
push
pop
jns
sbb
dec
stc
xchg
addr16
gs
notb
jns
jae
call
jbe
cmpsl
cltd
lea
jl
in
sub
xor
aam
add
sbb
mov
data16
inc
sbb
lret
das
pushl
sbb
mov
mov
in
shrl
dec
jns,pt
xchg
mov
leave
out
inc
dec
iret
dec
stos
jno
int3
imul
cmp
lds
call
mov
xchg
or
scas
int
outsl
test
out
jmp
in
mov
loop
push
lds
pushf
icebp
xchg
lret
sub
pop
dec
pop
pop
stc
test
sbb
xor
sub
jecxz
pop
jle
adc
pop
adc
inc
pop
jns
add
xchg
jns
cmp
stc
in
jg
push
pop
push
pop
ds
or
in
pop
jle
mov
test
inc
icebp
lea
fwait
sub
ja
ds
in
mov
xchg
pop
jle
mov
stos
leave
ljmp
adc
xor
ss
fldt
mov
xchg
jg
xchg
mov
loop
outsl
and
jle
in
inc
add
push
addr16
mov
jns
ljmp
jno
cmp
aam
push
pop
test
sub
test
repnz
sbb
outsl
sarb
ja
mov
mov
icebp
cmp
lret
xor
sub
mov
push
fiadds
test
dec
jo
rcrb
pop
jns
or
aad
xchg
mov
jmp
xchg
repnz
push
lea
cmp
inc
imul
shl
lret
adcl
mov
jp
and
scas
mov
data16
cmp
jo
popf
or
xor
dec
aaa
std
inc
pop
mov
pop
jns
xchg
dec
cltd
inc
outsl
js
rorb
stc
notl
in
stc
jmp
enter
xchg
jmp
in
lret
jne
push
faddp
cli
and
dec
or
icebp
enter
sbb
inc
dec
push
adc
sti
iret
cli
pop
jnp
fsts
fadd
popl
movsl
mov
xchg
and
push
inc
cld
aas
jns
jge
in
pushf
gs
js
enter
add
pushf
rclb
mov
jl
adc
lahf
sbbb
push
das
mov
dec
jle
pop
adc
fdivr
inc
lcall
cld
stos
push
add
xor
ret
lret
das
popa
mov
cmp
or
adc
lret
das
mov
dec
lods
pushf
int
scas
inc
lret
das
mov
ret
js
lods
sub
mov
pop
cmp
mov
lods
or
pop
hlt
nop
pop
ds
xorb
incl
mov
xor
ja
and
outsl
jns
jmp
in
out
sti
pop
xor
xchg
push
pop
divb
repz
add
xchg
push
pop
jns
mov
pushf
adc
or
dec
jne
fstpt
test
lods
lds
sahf
lcall
das
pop
jl
mov
scas
mov
mov
push
ret
and
dec
cltd
jnp
lret
adc
aas
cmc
std
call
lret
das
mov
cwtl
push
lds
pushl
sub
mov
xchg
jne
mov
js
mov
repnz
mov
lea
test
shll
ja
repnz
das
ret
adc
aas
inc
fstpt
ret
sbb
fcmovne
jne
mov
scas
mov
shll
cmp
in
jge
vmwrite
ljmp
push
mov
pop
dec
add
mov
test
sahf
cmpsl
pop
mov
pop
jns
sbb
sbb
xchg
aaa
popa
sbb
outsb
mov
imul
jno
in
movsb
inc
mulb
loopne
inc
push
pop
jns
push
imulb
mov
xor
repnz
aam
sbb
in
repnz
mov
mov
in
mov
cmpsl
movsb
stc
in
fwait
in
rcll
xchg
mov
xchg
pop
jle
outsb
mov
mov
rclb
pop
jle
lods
in
test
mov
and
pop
pop
jle
in
mov
dec
add
add
jmp
fidivrs
in
and
dec
aas
shlb
stc
in
pop
dec
int
pop
sbb
xchg
jae
lret
mov
xchg
xchg
and
and
mov
nop
adc
sub
ret
popa
cmp
mov
inc
sbb
js
xchg
pop
inc
jp
mov
clc
outsl
xchg
push
faddp
rcrl
add
mov
xor
push
pop
jns
mov
mov
mov
out
dec
bound
lock
xchg
dec
sub
jo
fcoml
leave
jle
notl
movsb
xlat
and
jnp
pop
and
in
pop
mov
cmc
adcb
enter
in
pop
jle
sti
xorl
sbb
stc
push
into
mov
fsubrl
jmp
loopne
rcll
fs
insl
lea
push
add
xlat
pop
lcall
fs
out
icebp
lret
mov
in
xchg
sti
add
cmp
cmp
mov
xchg
aam
cmpps
cld
roll
dec
sub
mov
sub
cld
repnz
js
and
mov
lret
das
mov
call
or
ss
mov
mov
int3
xchg
hlt
insb
push
in
push
adc
hlt
jmp
mov
mov
fstps
bswap
lods
mov
divb
pop
adc
in
lea
sub
jnp
and
and
andnps
xchg
scas
mov
and
ljmp
iret
into
hlt
jns
lret
sub
xor
push
and
jmp
xchg
push
pop
fstpl
sbb
jl
mov
ja
or
or
inc
inc
inc
push
or
xor
xchg
cmp
adc
ja
mov
mov
push
jmp
mov
pop
xor
and
iret
adc
xchg
push
push
lret
xor
dec
dec
popa
jecxz
xchg
push
pop
or
mov
jne
inc
cmp
jl
ljmp
subb
sub
cld
repnz
mov
in
push
sbb
jmp
das
mov
cmp
and
pop
jbe
xchg
fbld
mov
repnz
lret
dec
and
pop
popf
pop
jle
in
inc
mov
fimuls
jne
data16
cmpsl
cld
repnz
and
dec
test
ror
lods
iret
or
push
repnz
popa
in
sub
xchg
popf
call
je
repz
xchg
push
pop
jns
sub
inc
cs
pop
jns
push
sbb
push
repnz
roll
xchg
mov
mov
lcall
push
mov
cld
repnz
or
sub
testl
fbld
mov
stc
popa
sub
out
xchg
pop
jle
fcmovu
push
or
shlb
adcb
pusha
aas
int3
ljmp
lret
fcmovbe
mov
adc
or
or
xor
jle
mov
jb
fidivs
outsb
fisubs
jp
dec
pop
adc
add
lret
mov
jp
out
jnp,pn
inc
mov
das
mov
in
push
lods
mov
and
jno
outsl
pusha
cmp
xchg
jb
jg
lock
pop
push
adc
jae,pn
mov
xlat
icebp
repnz
imul
ljmp
ds
cmp
xchg
mov
pop
jnp
in
or
mov
sub
ds
push
mov
push
mov
jns
fidivl
daa
ret
fldl
in
xchg
fmull
pop
mov
sub
test
or
out
in
mov
aas
xor
lahf
mov
sbb
or
dec
jno
std
add
and
enter
rcll
cld
into
inc
popf
add
in
pop
inc
mov
or
ja
clc
sub
mov
rclb
cli
pop
in
das
mov
lret
sbb
mov
cmp
fwait
scas
xchg
inc
jge
sbb
sbb
and
sub
orl
xchg
cmp
xor
sub
aad
pop
mov
cld
repnz
das
call
enter
cmp
cs
loopne
mov
decl
sti
mov
lcall
push
push
push
mov
mov
sbb
repnz
das
les
ljmp
cltd
daa
push
aam
mov
mov
xor
scas
mov
cmp
inc
loop
push
mov
rcr
nop
enter
inc
and
in
ja
mov
sti
aas
mov
push
clc
pop
sbb
scas
jae
xchg
jge
push
mov
scas
mov
leave
mov
and
scas
mov
add
dec
lahf
and
lahf
ljmp
imul
pusha
das
lea
jmp
fwait
mov
cmc
test
repnz
lret
push
inc
inc
xchg
rorb
andb
sub
xchg
mov
xchg
sub
repnz
adc
lods
mov
js
jns
jmp
pop
pusha
cmp
push
fists
int3
jecxz
xchg
mov
lcall
stc
in
lock
imulb
stos
and
in
shr
cld
repnz
das
jae
sbb
out
cwtl
lea
sti
fs
out
mov
js
pop
rcrb
jg
cmpsb
gs
cmp
icebp
clc
cltd
xor
or
ja
in
and
aam
xlat
mov
xchg
pop
sti
shlb
movb
faddp
xchg
pop
jle
xor
and
cwtl
and
inc
call
stc
clc
sbb
aas
add
gs
mov
outsl
or
push
push
pop
lret
call
andb
and
push
dec
test
pcmpeqw
push
pop
jns
and
mov
cmc
xchg
adc
mov
lret
mov
push
lods
xchg
lock
mov
out
mov
adc
jge
fwait
sarb
xchg
sub
sti
cld
repnz
das
fsubl
mov
insl
in
adc
lret
das
mov
mov
insl
dec
test
inc
mov
adc
insl
inc
dec
add
mov
jne
jnp
sbb
gs
repnz
enter
sub
jmp
lret
das
mov
mov
sub
push
dec
jo
das
mov
mov
sbb
scas
cmpsb
inc
mov
mov
loope
in
test
lret
and
push
das
cld
repnz
das
dec
repnz
or
lcall
iret
ret
sub
jge
mov
insb
xchg
icebp
mov
lret
jecxz
push
pop
push
imul
dec
movsb
cli
cmp
in
jnp
aas
xor
in
fimuls
cmpsl
repnz
pop
nop
mov
adc
inc
jle
fsubl
sbb
and
out
mov
and
and
sub
cld
repnz
mov
hlt
test
enter
sti
in
add
inc
and
lret
pop
fmuls
mov
sub
mov
adc
int3
lods
mov
sbb
inc
push
xlat
lcall
int
push
repnz
popf
push
je
pop
stc
jl
jo
and
dec
loope
sub
sahf
aad
push
pop
jns
push
or
push
push
inc
add
xor
jns
push
cmp
loop
out
mov
adc
sub
in
testl
das
dec
rorl
int
fsubrp
fwait
loopnew
test
cmp
outsl
insb
sbb
dec
movsl
jnp
sub
sbb
jecxz
cmp
lret
mov
add
add
add
mov
lret
imul
popa
subb
cmc
xchg
sbb
or
push
xchg
mov
push
inc
xchg
jg
aas
pop
adc
xchg
mov
sub
sub
dec
stc
in
pop
add
mov
or
xchg
pop
jle
push
jo
insl
jmp
arpl
in
sahf
es
lds
imul
cltd
and
pop
jle
push
bswap
sub
sbb
gs
fsubs
sbb
or
pop
rcrl
cld
sti
enter
cmpsl
mov
ret
in
inc
das
out
push
ret
pop
jp
adc
stc
repnz
test
sub
lret
sbb
mov
in
sbb
repnz
add
test
jl
xlat
mov
lret
mov
lahf
int3
ja
enter
sub
test
cmp
push
ror
lret
push
negl
popf
scas
mov
fildl
fstps
jo
fisttpl
repnz
xchg
sub
test
sub
sub
das
mov
jl
jle
fnsave
cmp
dec
cmp
jae
loopne
mov
jb
cmp
pop
or
dec
mov
xchg
pop
cmp
mov
dec
pop
and
mov
in
mov
inc
shlb
sub
jns
or
sbb
fnop
in
push
pop
popa
lcall
aas
inc
sub
aad
push
fcoms
pop
movsb
cs
add
mov
push
in
cwtl
adc
sbb
ds
repnz
sbb
xchg
and
lods
iret
inc
xor
push
pop
jns
or
addr16
mov
sbb
in
or
or
into
pop
cs
xor
mov
mov
mov
xor
mov
nop
sbb
xchg
push
fidivs
xor
sub
dec
mov
ds
cmc
ror
std
mov
jg
je
in
ja
mov
aaa
jbe
test
add
jae
test
pop
xor
andl
pop
jns
cmp
imul
cld
aaa
jne
mov
in
hlt
xchg
scas
or
and
cmpsb
push
in
xchg
push
and
scas
pcmpgtb
enter
aad
out
repnz
testl
outsl
lods
cmpsl
in
xchg
fs
int
mov
lret
fistpl
sub
in
pop
and
mov
int3
subb
mov
lret
das
mov
scas
jecxz
hlt
jecxz
cmp
and
cld
je
test
sahf
cmp
push
lret
and
push
jno
dec
push
test
aas
aad
sbb
or
outsb
pop
cmp
lret
dec
popa
mov
shll
cld
repnz
mov
pop
lods
mov
add
mov
inc
dec
dec
stos
mov
gs
mov
push
insl
roll
es
repnz
pop
lahf
dec
and
das
fnstcw
inc
rcr
lret
dec
into
pop
mov
add
push
mov
in
jg
icebp
jge
jns
xchg
add
xchg
mov
inc
add
in
jg
repz
mov
add
or
notl
sub
mov
fwait
pop
jle
in
mov
arpl
xor
and
inc
jp
pop
cld
jnp
in
xchg
fadds
mov
xor
filds
xchg
push
daa
in
jg
imul
cmc
and
or
cmpsl
bound
pop
jle
in
out
gs
and
neg
xchg
mov
push
mov
mov
add
pop
jle
popa
and
stos
dec
sbb
testl
add
push
jmp
pop
insl
hlt
pop
fucomip
pop
cmp
push
mov
shlb
mov
movsl
inc
fidivrl
xlat
outsb
sub
or
sbb
mov
xchg
push
mov
add
cmpsl
into
andl
das
dec
mov
mov
leave
cmc
xchg
das
mov
inc
mov
scas
sub
iret
ljmp
add
xchg
sub
cli
scas
inc
and
jp
fcomps
sub
lds
push
pop
jns
lock
loopne
jbe
je
mov
or
imul
addr16
mov
pop
lret
mov
sahf
repz
adc
fmull
pop
cld
repnz
push
or
jecxz,pn
repnz
enter
sbbb
xchg
adc
lret
das
mov
insl
pop
mov
aam
and
dec
and
push
lods
cmp
pop
ds
mov
mov
add
les
sub
repnz
sbb
loopne
in
push
fidivs
mov
fs
push
mov
inc
inc
pop
jns
mov
out
add
add
mov
jnp
loop
push
in
mov
mov
mov
push
mov
mov
repnz
das
jns
into
pop
adcb
dec
stc
addr16
mov
lret
insl
imul
lea
cmpsb
mov
sub
in
xor
in
jno
in
push
adc
pop
jns
xchg
sub
sti
int
and
mov
xchg
push
cmpsl
jbe
rdmsr
jb
rcrl
cmp
jmp
and
pop
jns
jecxz
sub
jge
xchg
stos
mov
in
push
jb
jns
inc
and
adc
jmp
in
pop
mov
inc
add
jb
out
shld
jp
lods
fildl
test
test
subl
loop
shlb
push
push
xchg
xor
js
xchg
xchg
jo
xor
mov
sbb
pop
sti
mov
sub
das
mov
pop
ret
fmuls
xor
push
adc
out
aas
lea
or
cmp
pop
loopne
imul
mov
scas
addr16
and
xchg
xor
fcompl
fdiv
lret
sbb
add
adc
pop
imul
mov
sub
jbe
and
sub
cwtl
pop
inc
andb
insb
and
sti
enter
testb
add
imul
push
repnz
das
mov
ss
pop
jbe
jno
or
das
mov
lods
inc
sub
inc
je
adc
xchg
push
push
lahf
mov
mov
xor
stc
in
sbb
dec
outsb
dec
sub
in
jmp
or
stc
neg
and
push
jge
xchg
mov
sub
inc
in
pop
jle
jo
add
dec
add
mov
sub
ret
ss
jl
in
jmp
sbb
insb
outsl
sub
loopne
ret
mov
and
push
outsl
inc
aaa
cmp
repz
push
pop
mov
mov
and
push
mov
sbb
xchg
push
pop
jns
cld
add
inc
fwait
ucomiss
in
push
xchg
clc
pop
dec
mov
inc
pop
jns
xchg
mov
fildl
dec
fs
pushf
ret
xchg
mov
push
push
stos
adc
jecxz
add
push
jae
xchg
xor
stc
adc
sbb
pop
jle
in
pop
jl
insb
outsl
lds
jmp
xchg
repz
jle
in
sbb
xchg
shlb
sbbb
jp
in
pop
push
sbbb
cmpsl
mov
das
ds
imul
inc
rorl
mov
sub
nop
dec
aam
nop
lret
cs
sbb
ja
lods
push
in
addr16
test
add
test
lock
and
pop
icebp
fisubrs
dec
lret
xchg
ret
push
pop
jns
pop
mov
pop
cmp
das
cld
repnz
rolb
mov
int
movsb
ret
adc
js
pop
enter
xlat
dec
int
and
mov
or
inc
enter
fbld
imull
xor
jmp
xchg
pop
jle
pop
mov
fstpl
in
jnp
ficomps
in
xchg
push
lods
mov
daa
aam
mov
inc
mov
out
sub
mov
test
sbb
inc
cmp
aaa
inc
adc
aaa
cmpb
xchg
adc
inc
mov
dec
dec
aam
ja
mov
adc
and
inc
shr
sub
jno
cmc
and
xchg
mov
dec
cmpsb
mov
into
xor
stos
mov
xchg
cld
repnz
das
mov
lods
ss
mov
fs
jmp
stos
lock
addr16
sti
and
jae
sub
xlat
add
aaa
out
lret
daa
xchg
jp
lret
xchg
push
cli
in
mov
flds
adc
push
jnp
sysret
lds
lret
mov
or
test
icebp
in
and
push
pop
jno
in
and
xchg
pop
jle
jnp
dec
out
cmpsl
dec
stos
jno
sub
enter
out
jae
dec
enter
imul
mov
jg
out
inc
icebp
repnz
int3
cli
pop
and
jmp
and
das
mov
test
in
fwait
inc
rorb
mov
adc
insl
setno
repnz
imul
test
and
push
repnz
mov
cmp
test
xchg
mov
sub
and
sti
sub
inc
icebp
mov
xor
dec
movsl
pop
or
divb
dec
and
pop
adc
scas
xlat
cmpsl
mov
sbb
stc
cwtl
sub
sbb
add
push
jp
in
jg
aas
popa
jmp
orb
xchg
pop
jle
mov
jp
insl
and
jl
in
mov
aad
pop
pop
lret
xor
inc
pop
stos
jae
mov
rcl
shlb
ja
mov
call
hlt
xor
jbe
das
mov
mov
mov
shll
fnstcw
cld
sub
mov
pop
dec
adc
test
lods
pop
ret
xchg
jg
cmp
shrl
repnz
pop
jle
in
xor
add
lahf
sub
push
or
xchg
jp
mov
xchg
int3
out
fcmovb
aaa
sub
pop
mov
mov
sub
stos
ss
xchg
lret
das
mov
stc
sbb
inc
jbe
mov
pop
push
or
pop
push
sti
jo
cld
repnz
add
test
pop
push
jmp
cld
repnz
das
movsl
repnz
push
repnz
das
mov
dec
push
fs
dec
or
inc
mov
data16
xor
ss
in
ja
sahf
and
add
enter
mov
int
sub
scas
bound
scas
shll
inc
jge
dec
ljmp
push
sti
repz
in
pop
adc
gs
push
hlt
aad
pop
inc
loopne
ficomps
jp
fucom
pop
adc
je
adc
cmp
mov
aad
mov
add
xchg
jg
pop
adc
mov
sub
mov
add
lds
lret
mov
in
jb
arpl
xlat
mov
das
mov
movsl
bswap
dec
adc
jb
mov
nop
jl
notb
add
movb
fbld
ds
sub
movsl
mov
filds
cld
lret
pop
decl
subb
cmc
lds
and
and
add
popa
repnz
lods
fdivrs
in
sbb
pop
sbb
cli
mov
xchg
pop
jge
mov
inc
xchg
sub
jle
mov
popa
stc
sub
into
push
outsl
push
in
and
ljmp
mov
roll
stos
movsb
push
cmpsl
scas
mov
sti
cmpsb
jo
lcall
ja
andb
test
jns
xchg
lods
mov
fisttpll
sub
xchg
push
std
je
jbe
mov
addr16
pop
jns
fstp
mov
and
xchg
xchg
out
or
and
mov
das
mov
mov
cmp
scas
das
mov
xor
fdivrl
sub
jno
divl
cli
cld
repnz
das
sub
inc
jmp
sti
popf
fistpll
int
xchg
jp
lods
cmp
inc
mov
mov
xor
jne
jne
mov
negl
fisttpl
repnz
mov
cltd
movsb
subb
imul
pop
cmpsl
ja
sbb
sbb
ds
mov
and
imul
mov
das
push
in
dec
add
jb
jmp
sti
repnz
scas
and
xchg
xchg
js
repnz
das
mov
sub
or
jnp
pop
stc
xchg
jbe
cwtl
rolb
sub
xchg
scas
mov
rol
call
cmp
mov
lret
pushf
lods
icebp
xor
push
xchg
sub
faddl
repnz
enter
push
neg
and
lret
mov
outsb
outsl
in
fisttpl
sub
inc
scas
mov
mov
xchg
fstpl
lret
mov
or
adc
pusha
fistpll
sbb
mov
jns,pn
pop
add
cld
repnz
mov
xlat
cld
decb
jge
daa
fisubrl
das
aaa
jmp
pop
xor
mov
sti
mov
ja
and
sbb
mov
add
rorl
or
fistpll
or
lret
xor
xor
stc
in
pop
es
insb
out
cmp
add
enter
pop
jle
xor
loope
std
xchg
es
mov
mov
les
or
xor
inc
popf
jge
lret
xor
mov
dec
mov
xchg
jg
xor
and
pop
out
inc
bnd
sub
sti
sub
imul
stc
in
call
cld
or
adc
adc
out
xchg
pop
pop
pusha
lahf
leave
jnp
cwtl
aad
cmpsb
and
das
mov
or
mov
pop
jge
icebp
push
movb
mov
sbb
jmp
or
push
inc
mov
in
push
pop
popf
mov
js
ss
dec
cld
scas
outsl
xchg
push
pop
jns
popf
fs
cs
jge
int
xchg
icebp
mov
jns
mov
sub
fdivrp
jl
fwait
testb
add
xchg
inc
rcrb
jbe
inc
mov
out
and
out
dec
pop
mov
inc
push
xlat
mov
test
mov
shrl
pushf
dec
les
or
cld
repnz
das
lcall
push
and
dec
or
enter
pusha
cmp
and
add
in
xchg
cmp
insl
out
fists
pop
jge
out
jecxz
pusha
lret
es
ret
lods
xchg
pop
jle
add
test
addl
repz
stc
in
push
sub
pop
lcall
inc
ds
cli
sarb
sahf
fldt
push
mov
in
aaa
mov
popf
cmpsb
mov
push
pop
jns
bound
mov
mov
or
in
push
mov
push
lcall
stos
test
and
enter
mov
inc
dec
mov
pop
jle
and
fbld
arpl
stc
outsl
popa
mov
mov
pop
jle
in
push
xchg
or
popa
add
and
xchg
jmp
rcrl
daa
xchg
mov
mov
in
pop
loope
fs
std
dec
out
jle
aaa
push
imul
jmp
in
push
xor
shll
push
pop
or
negl
clc
lcall
cmp
push
add
hlt
ret
cmp
xchg
das
or
mov
lea
fsubrs
sbb
mov
inc
shlb
dec
mov
repnz
das
gs
shrd
sub
adc
mov
je
xchg
aad
adc
lret
das
mov
ds
cld
jb
mov
cld
repnz
popa
dec
xchg
loopne
push
jnp
push
in
shll
mov
push
pop
jns
sbb
cmc
add
jo
mov
in
and
or
lret
sbb
or
jns
xchg
push
push
cmp
fwait
scas
cltd
push
movsb
add
mov
mov
cmp
fiadds
enter
or
push
pop
push
scas
add
jns
xchg
push
add
inc
pop
arpl
dec
jnp
pop
mov
push
mov
xor
cmp
lret
or
popl
jge
dec
push
mov
nop
inc
pop
mov
dec
cmp
mov
enter
inc
xchg
mov
xor
repnz
clc
mov
push
lcall
ds
xor
jle
jb
cwtl
inc
das
mov
mov
sti
pop
test
daa
or
cld
repnz
mov
pop
mov
dec
adc
xor
je
repnz
das
xchg
int3
adc
mov
pushl
jbe
inc
adc
pop
stc
jnp
dec
and
push
xor
shl
stos
jle
in
loopne
adc
fnstcw
hlt
fcoms
xchg
pop
mov
fcomps
icebp
inc
adc
mov
aaa
aad
hlt
outsb
mov
cli
push
sbb
mov
dec
nop
incb
and
cmp
notl
lret
jmp
repnz
in
pop
mov
and
je
testb
xchg
pop
jle
test
imul
loope
push
pop
jns
adc
cld
sbbb
in
adc
and
mov
in
aas
cmp
into
mov
lret
jno
pop
jle
xor
adc
sub
mov
enter
cmc
mull
pop
std
add
jge
arpl
imull
outsl
insl
sbb
insl
mov
pop
mov
push
aad
dec
in
pop
aaa
pushf
and
les
sub
jge
mov
inc
jmp
scas
vpslld
push
subb
fbstp
add
push
scas
mov
scas
mov
dec
mov
and
enter
mov
xchg
push
pop
jns
sti
sbb
inc
or
loope
jo
cs
enter
ret
outsb
lahf
lods
pop
lret
mov
test
cli
push
jmp
das
mov
fs
aaa
xchg
push
out
lods
loope
testl
and
ja
lcall
das
cmp
mov
out
inc
mov
in
das
mov
cmpl
in
and
add
lahf
mov
xchg
push
pop
jns
xchg
pop
cmp
clc
jns
add
jns
fdivp
pop
mov
dec
xchg
mov
cli
fs
popf
jl
decl
ficomps
pop
rcll
cltd
xor
imul
mov
cmpl
enter
pop
mov
lahf
repnz
das
mov
mov
jo
xchg
das
mov
dec
inc
inc
cmp
inc
and
stc
mull
test
push
sti
jl
mov
adc
xlat
lock
in
mov
dec
xchg
push
inc
mov
xlat
xabort
xchg
pop
cmc
push
mov
xchg
fwait
pop
push
inc
lahf
into
jle
in
jo
mov
lahf
pop
push
sub
std
lahf
stc
in
pop
lcall
subb
dec
out
test
out
mov
push
mov
enter
mov
jne
cmc
mov
loope
ret
icebp
xchg
outsl
cmpb
adc
lods
xchg
mov
xchg
jg
fmuls
popa
ret
ficomps
pop
repz
push
int
mov
fs
aam
insb
cmp
cmp
shl
mov
loop
scas
pop
xchg
cmp
cmp
loopne,pn
fnstenv
lods
mov
lock
das
out
lods
icebp
mov
and
cmp
jmp
dec
inc
ljmp
jp
or
repnz
jbe
xchg
cmpsb
daa
xchg
cld
dec
loop
mov
xchg
or
xor
pop
int
test
jae
inc
xchg
outsl
mov
imulb
inc
fnsave
notl
ljmp
cmp
in
pop
popf
push
sbb
or
mov
sub
mov
icebp
pop
iret
push
imul
and
adcb
sbb
mov
inc
add
jns
cwtl
dec
mul
sbb
or
in
pop
jle
adc
cmp
xor
repnz
test
push
pop
sbb
push
loopne
cld
repnz
das
into
and
pcmpeqw
js
repnz
das
mov
mov
add
lret
das
mov
icebp
or
xor
das
mov
aam
xchg
std
or
lcall
popa
in
adc
pop
movsl
sub
data16
mov
sub
cmp
xchg
js
push
enter
jns
mov
hlt
sub
lea
sbb
push
add
pop
jns
xchg
rcrb
xor
dec
pop
mov
fildll
inc
les
xlat
xchg
pop
jle
cmpsl
cmpsb
mov
sub
add
dec
push
push
scas
push
ds
incb
movsl
jne
lds
repnz
das
clc
jae
inc
and
add
xchg
lret
das
mov
in
ss
sub
cld
andl
or
adc
test
ret
mov
stos
lret
rcr
ret
mov
out
cld
repnz
or
jg
ja
mov
cld
repnz
das
enter
xchg
js
xchg
repz
mov
out
icebp
call
jge
fcompl
jp
jns
sbb
or
adc
jecxz
sbb
imul
mov
in
inc
push
mov
sti
stos
inc
mov
xchg
adc
cmp
xchg
subb
and
decl
xchg
scas
cltd
lods
mov
movsb
pop
aam
imul
out
test
clc
push
and
and
mov
mov
repnz
sub
lret
lods
and
testb
int3
dec
or
lret
jle
jno
adc
loope
aam
jnp
cmp
mov
adc
notb
dec
outsl
push
ds
mov
sbb
icebp
mov
and
mov
or
or
inc
push
xlat
cs
push
inc
aad
bound
mov
int
jns
jmp
or
push
outsl
int3
popa
cwtl
fsub
xchg
push
pop
in
mov
sahf
inc
clc
sbb
pop
test
bound
imul
mov
xor
repnz
mov
pop
mov
test
iret
sub
das
mov
push
inc
ja
scas
mov
or
jle
and
sar
jge
in
cli
sub
loope
jae
mov
in
pop
xor
or
push
jmp
xor
repnz
push
mov
jmp
or
dec
fbld
je
arpl
lret
imul
daa
shrl
lret
pop
sub
stos
vcomiss
mov
pop
push
cmp
jl
idivl
maxps
or
aam
or
sbb
shll
mov
jp
cmpsb
mov
jp
jns
sub
cli
enter
and
adc
push
fimuls
jns
dec
sub
insl
pop
mov
scas
mov
leave
aas
sub
adc
sub
mov
popa
push
fs
mov
outsl
and
push
pop
jns
fnstsw
jmp
movsl
xchg
mov
lea
pushf
ja
inc
adc
repnz
sub
into
rol
mov
xor
and
stc
cmp
movd
mov
sahf
pop
in
pop
jle
jmp
out
mov
hlt
jbe
xchg
pop
jle
fwait
fs
push
push
pop
lcall
jae
hlt
dec
shlb
xor
in
leave
sti
lret
stc
in
lods
mov
ja
in
adc
pop
test
jp
in
sbb
or
mov
sub
in
add
xor
xchg
pop
jle
and
js
fisubrl
jnp
insl
outsb
inc
icebp
dec
test
xchg
in
cmp
jmp
and
jnp
imul
pushf
jle
cmpsl
dec
adc
les
jl
imull
dec
cld
sti
int3
pop
jge
lods
push
mov
mov
repnz
das
mov
xor
cli
and
enter
call
cmpsl
pop
lea
insb
aaa
pop
jp
in
jo
xlat
cmp
sbb
in
push
test
mov
or
scas
ret
pop
insb
inc
sbb
mov
outsb
scas
mov
daa
mov
mov
ds
push
cmp
repnz
testb
das
mov
enter
jnp
inc
pop
loope
or
dec
jge
inc
push
aaa
jmp
setge
pop
xor
stc
inc
add
enter
inc
dec
pop
and
lcall
sub
jnp
test
xchg
test
cmp
inc
imul
jle
inc
lds
mov
lcall
orl
fldcw
pop
xor
add
pop
ss
ds
fcompl
add
jns
xchg
mov
and
daa
jnp
enter
fs
push
pop
mov
incb
jae
mov
push
pop
jns
popa
cwtl
sbb
cmp
dec
jge
xchg
nop
xor
stc
test
rol
iret
cmp
xchg
aaa
nop
jg
cli
in
es
xor
jl
xor
lods
push
pop
inc
push
mov
mov
add
imul
mov
add
mov
xlat
xchg
out
shll
aas
push
lret
mov
daa
pushf
pop
add
sub
lods
xchg
in
sub
mov
mov
push
jp
das
xor
or
push
xchg
xor
adc
les
xchg
push
xor
hlt
xchg
mov
jge
addr16
sbb
or
shl
sub
sbb
cmp
cmp
nop
jmp
sub
mov
pop
je
xor
ds
loopne
rcr
mov
in
xchg
ja
jne
xchg
mov
xchg
and
stc
jbe
xor
push
mov
adc
cld
repnz
pop
lock
insb
or
idiv
in
jg
adc
adc
imul
mov
dec
and
mov
xchg
ds
call
adc
lahf
xor
in
fsts
add
sub
cmp
lods
je
add
imul
repnz
das
push
insb
shl
add
sub
repnz
test
sub
push
xor
jnp
nop
and
scas
mov
add
dec
ret
mov
sbb
loopew
push
sub
jp
xor
jg
push
push
sbb
ret
pop
mov
xchg
std
pop
mov
aaa
sub
and
mov
and
mov
mov
add
pop
jns
xchg
adc
fcomip
ret
xor
push
fidivrs
adc
inc
fisttps
mov
jl
xchg
push
pop
inc
adc
fs
add
aaa
xchg
inc
pop
jns
mov
stc
movsl
jno
mov
lret
mov
nop
sbb
test
ja
inc
roll
das
mov
in
push
dec
cmp
inc
das
mov
or
lret
xor
addr16
or
xor
push
push
inc
mov
xchg
push
fiadds
sbb
and
pop
jns
out
mov
nop
lret
xchg
jne
push
js
fists
sar
xor
fistpll
fmull
pop
into
lret
jmp
data16
sti
enter
xchg
loopne
inc
loope
lds
int
lret
mov
inc
xor
mov
sbb
xor
mov
stc
mov
rol
adc
fstps
stc
mov
in
insb
popf
xchg
aam
notl
mov
filds
in
mov
std
fmulp
mov
in
pop
jle
cmp
out
mov
rorl
xchg
pop
jle
orl
pop
test
jle
in
leave
mov
add
inc
sub
fdivp
movsb
gs
in
imul
scas
mov
inc
scas
gs
mov
add
xchg
push
pop
jns
bound
int
fwait
sbb
jb
mov
dec
xchg
enter
xchg
sub
scas
es
pop
jns
fistps
repz
pop
aaa
ljmp
inc
in
jns
xchg
icebp
ja
cltd
add
push
or
add
dec
outsb
in
jecxz,pn
outsl
mov
pop
fcoml
xchg
lods
cmp
add
in
and
es
xlat
int
sub
lea
in
cmp
pushf
push
pop
jns
js
mov
pop
pop
lea
dec
and
xchg
sbb
jecxz
mov
push
cltd
filds
enter
repz
iret
repz
lds
popf
dec
in
add
lcall
stc
in
sub
and
xchg
sub
addr16
test
repnz
das
xorl
mov
xor
orl
push
pop
jns
lods
mov
jo
mov
xchg
daa
jns
xchg
push
movsb
lea
xchg
xor
test
in
push
pop
cld
dec
cmp
aam
out
inc
lods
push
cmpb
inc
cmp
das
sbb
sub
and
jns
adc
adc
adc
mov
jb
xchg
adc
jno
jl
js
inc
stos
dec
cmp
sub
push
jno
add
into
sub
jmp
xchg
mov
dec
jb
sub
repnz
mov
sbb
and
adc
jae
stc
repnz
das
mov
stos
insl
jecxz
enter
pop
stc
in
push
mov
into
mov
push
mov
dec
in
pop
jle
dec
mov
cmp
sbb
mov
in
test
add
inc
ss
pop
sub
insb
pusha
bound
test
sbb
repnz
pop
pop
fwait
shr
or
dec
neg
cmpb
stos
inc
mov
mov
xchg
push
iret
movsl
pop
inc
shll
aaa
in
push
pop
rolb
xlat
cli
sahf
aaa
pushf
xor
mov
jb
jmp
pop
dec
pop
pop
test
xchg
push
inc
lods
dec
mov
mov
das
mov
mov
popf
mov
mov
mov
js
dec
bound
push
shlb
and
xchg
repnz
ja
in
cld
cmpsb
fildll
js
scas
lret
mov
icebp
arpl
dec
mov
shrl
jge
jmp
shrl
in
repnz
dec
je
jecxz
sbb
xor
ret
cmpsl
jae
inc
test
xchg
ja
mov
fidivl
notl
and
inc
push
ficomps
jecxz
dec
add
mov
into
comiss
fidivrs
sti
enter
xor
test
ja
lret
das
mov
addr16
icebp
push
mov
xchg
cmp
mov
gs
sbb
and
sti
cmp
stc
repnz
out
popf
xlat
daa
outsl
pop
stc
sub
sti
leave
inc
jnp
mov
adc
sub
in
pop
sti
mov
push
adc
cmp
sub
inc
pop
or
sbb
fdivr
loop
arpl
ds
shrl
push
and
mov
mov
repnz
das
xchg
test
xchg
xor
jge
filds
cli
push
mov
xchg
in
adc
adcb
sti
dec
enter
xchg
fs
es
jns
jmp
stos
jbe
adc
push
outsb
gs
in
and
sbb
fisttps
add
int
xchg
pop
jle
xchg
pop
sarl
out
pop
dec
push
jmp
jnp
loope
pop
bound
xor
adc
or
in
sbb
in
mov
jno
push
aaa
ds
or
adc
sbb
stc
adc
mov
cmpsl
push
inc
notl
jge
xor
adc
repnz
pop
mov
lods
xlat
push
stos
lcall
xchg
aas
aas
xchg
and
mov
push
sbb
scas
mov
outsl
cmpsb
mov
jp
scas
mov
sbb
mov
mov
xor
clc
enter
ja
dec
enter
lret
jnp
fcmovb
mov
mov
xchg
lret
ret
aaa
outsb
shrl
cmp
add
mov
push
movsb
mov
jns
lods
je
mov
inc
jg
and
jns
xchg
inc
dec
jbe
stos
lret
daa
mov
inc
push
push
push
push
adc
push
inc
cs
xor
iret
ds
pop
mov
popf
mov
sbb
cmp
aaa
mov
mov
pusha
mov
cli
es
sbbb
sub
mov
or
repz
xchg
cmpsl
roll
sbbb
dec
icebp
movb
pop
mov
cld
sti
push
jb
xor
popf
notl
lret
dec
add
aas
sti
and
mov
xchg
push
ficomps
cmc
lahf
or
mov
in
rolb
sti
jecxz
adc
ss
pop
scas
shl
cmpsb
mov
js
adc
mov
aad
jne
mov
enter
jle
mull
or
jo
ret
cwtl
jns
jmp
mov
cmp
xchg
push
pop
add
popf
jl
inc
pop
jns
ljmp
pushf
sub
notb
add
movsl
cmp
dec
inc
pop
mull
xchg
inc
inc
inc
enter
jnp
xchg
pop
mov
mov
clc
dec
jmp
and
cld
xor
push
divl
push
scas
mov
mov
inc
stos
cwtl
jb
cmpsb
dec
cmc
in
and
dec
cmc
cli
lods
jmp
pop
negb
repnz
das
fistpl
and
push
scas
pop
and
push
pop
hlt
arpl
jp
repnz
push
jge
out
cwtl
mov
lea
das
mov
dec
jae
pusha
cs
mov
repnz
ret
adc
pop
mov
pusha
js
adc
jg
xchg
xor
mov
jmp
cmp
xchg
pop
jns
dec
sub
aas
ss
xchg
or
pop
pusha
call
daa
in
loop
es
stc
ljmp
sbb
or
pop
movsl
lret
mov
or
imul
scas
mov
out
jge
scas
insl
inc
repnz
and
sarl
dec
xor
lock
xchg
iret
mov
cmp
sarb
mov
iret
jne
scas
xchg
repnz
xchg
xor
add
popf
arpl
and
adc
sub
cmp
jne
or
jnp,pn
add
xor
shr
sub
pop
mov
jmp
rorl
jmp
bound
inc
add
out
xlat
dec
fsubs
leave
je
fidivs
cld
repnz
sub
movsl
jns
sbb
or
in
dec
xor
xchg
shll
xchg
sub
xor
call
inc
imul
repnz
sbb
pop
sti
out
push
jne
jle
in
mov
xor
in
push
int3
imul
mov
insb
jno
scas
mov
mov
out
shlb
and
mov
lret
ja
js
es
and
push
mov
inc
daa
or
pop
push
ja
das
mov
push
in
js
mov
xchg
jg
in
sub
stc
scas
addr16
jl
in
sbb
mov
mov
add
pop
lret
adc
fdivr
imul
cld
repnz
pushf
inc
cmp
push
and
out
pop
pop
stc
repnz
das
test
pop
and
sbb
xchg
pushf
sub
repz
scas
mov
adc
loop
jmp
lret
mov
adc
aam
rcll
lock
into
or
mov
lds
outsl
push
mov
or
and
stc
in
cmpsl
div
jns
cmp
aad
pop
insl
fwait
outsl
call
lods
andl
lret
jg
mov
sbb
out
and
int
ror
das
mov
xchg
jnp
dec
enter
loope
insb
inc
in
es
test
imul
jecxz
stc
in
jge
sub
xchg
aad
mov
xchg
jg
rcl
fucompp
push
and
adc
xchg
pop
jle
xorl
mov
inc
out
leave
push
shlb
xorl
outsb
sub
xor
sub
fstpt
xchg
sti
imul
cmp
and
jnp
xor
int3
ss
leave
lret
das
mov
lea
cmp
and
stc
repnz
xor
mov
js
lret
das
decl
mov
sti
push
out
ds
enter
cmp
int3
xlat
or
cmp
pop
jle
in
or
not
jecxz
xor
inc
push
dec
lea
sar
or
scas
mov
and
xchg
xchg
aas
std
xchg
lret
mov
mov
sahf
repnz
lret
lcall
notb
scas
mov
iret
pop
clc
leave
cmp
jecxz
data16
faddl
hlt
xchg
testb
js
cs
cmp
xchg
testl
out
imul
inc
inc
pop
jns
mov
push
sub
fdivp
dec
seta
call
xlat
std
xchg
push
pop
jns
mov
mov
mov
in
in
je
cmp
rorl
pop
inc
adc
repnz
pop
push
add
sub
cmp
int3
arpl
pop
hlt
jp
jnp
lret
in
mov
mov
lret
das
mov
sub
scas
in
retw
inc
mov
inc
inc
repz
scas
mov
inc
enter
hlt
mov
jnp
lret
push
enter
mov
jge
and
sbb
sbb
mov
add
mov
mov
incb
inc
and
inc
in
outsl
inc
bnd
cmp
mov
mov
ficompl
movsb
rolb
enter
pushf
sub
gs
sub
das
mov
push
jecxz
add
add
cld
repnz
inc
fwait
mov
ja
add
jno
xchg
and
outsb
scas
outsl
or
js
filds
lret
das
mov
fmuls
test
rolb
movsb
outsb
add
or
mov
in
aas
inc
iret
pop
adc
sbb
mov
xchg
pop
jge
mov
jge
int
daa
arpl
jne
pop
jle
in
inc
mov
int3
int3
test
cltd
push
das
sbb
xchg
lock
push
dec
out
fnstcw
sub
in
pop
cmovs
or
punpckhwd
ds
pop
sti
xchg
mov
subb
aas
jle
fnsave
test
mov
popf
sbb
push
add
repnz
movsl
pop
es
inc
pop
dec
pop
arpl
addb
mov
ss
fbld
mov
cmc
mov
ds
mov
jns
xchg
jmp
mov
inc
cmp
lret
jge
in
adc
pop
fbstp
lret
das
decl
sbb
imul
loope
iret
cmovno
mov
jns
push
or
test
mov
test
sub
sbb
xchg
hlt
enter
dec
popf
xchg
gs
sub
cltd
jg
mov
mov
pusha
sub
sub
dec
adc
sub
lret
xchg
aam
adc
adc
enter
jno
mov
dec
xlat
and
cld
and
inc
ja
sbb
inc
testl
pop
loope
inc
mov
daa
out
adc
xchg
mov
fiaddl
adc
cmc
mov
jge
xchg
icebp
enter
out
loope
add
das
lcall
inc
adc
dec
mov
sbb
xor
das
mov
incb
sub
sub
stc
test
sti
xor
pop
ficoms
inc
xchg
inc
aaa
das
jno
mov
adcl
pop
repnz
and
push
pop
jns
jecxz
dec
jns
lock
les
fsubs
xchg
xor
fxch
lcall
jle
inc
mov
ja
pop
jb
das
mov
add
test
fildl
push
enter
and
jae
mov
sub
inc
shrl
xor
cld
add
mov
lret
add
and
cmp
xor
pop
or
rolb
notb
enter
xchg
mov
popf
data16
sub
test
xchg
mov
dec
loopne
mov
out
add
mov
aad
enter
pop
jns
repnz
das
fcompl
jmp
lret
das
mov
loop
or
jnp
mov
cmp
cld
mov
in
lock
clc
into
nop
repnz
jmp
dec
xor
mov
sbb
imul
lsl
xor
jmp
mov
push
mov
or
mov
in
notl
test
rcrb
fwait
cmp
xchg
push
pop
mov
cmc
es
pop
dec
push
jl
pop
jle
ja
mov
test
jne
sub
stc
inc
dec
mov
xchg
std
mov
shll
inc
adc
inc
iret
and
mov
or
repnz
mov
jno
push
dec
xor
mov
sub
push
in
and
jb
std
sub
sbb
outsl
xlat
sub
rclb
stc
sbb
push
xchg
jg
es
inc
mov
insl
fimuls
xchg
xchg
push
imul
push
sar
or
or
or
xchg
push
pop
adc
xchg
pop
jae
inc
pop
jle
imull
sbb
adc
push
inc
mov
mov
js
jle
in
enter
into
sub
shrb
es
and
in
pop
add
sti
dec
mov
popa
dec
jecxz
hlt
mov
xchg
pop
jle
push
push
adc
ss
mov
stc
repnz
adc
push
push
and
dec
imul
arpl
lret
in
daa
icebp
shr
mov
push
in
push
ficomps
inc
and
xchg
and
jns
lods
add
lcallw
inc
les
loopne
dec
stc
in
jg
in
jp
into
jl
divb
or
jl
xor
in
and
das
lock
stc
cmp
in
xor
add
das
mov
iret
inc
add
stos
shlb
adc
lock
xchg
pop
jmp
rcrb
jne
shll
sub
pop
add
call
dec
cmp
mov
jns
xchg
push
out
and
mov
inc
mov
xchg
jg
pop
rcrl
sub
je
xor
cld
jnp
ss
in
shlw
mov
repnz
das
adc
inc
pop
jp
int
leave
cld
xlat
inc
mov
push
sbb
lret
fs
repnz
das
mov
imul
scas
cli
enter
adc
push
insb
inc
mov
orb
or
or
jge
in
fdivrs
cli
adc
xchg
lret
in
pop
lds
in
ficoml
jecxz
mov
xchg
pop
jle
inc
es
loope
add
pop
mov
fiadds
negl
xchg
dec
nop
xchg
pop
repnz
xchg
inc
xchg
shl
inc
xchg
mov
xchg
aaa
and
push
mov
fwait
add
das
cltd
sbb
sarl
mov
sub
ss
fcompl
stc
test
mov
jns
rorl
test
mov
jp
std
lcall
stos
stc
in
pop
bound
inc
in
xor
pop
jle
outsb
xchg
jo
pop
out
fistl
xchg
cli
xor
mov
setbe
sbb
in
adc
loop
mov
ret
rcrl
ds
mov
es
std
adc
jg
iret
pop
add
mov
pop
jle
and
and
faddp
clc
mov
or
mov
enter
jg
ss
jge
adc
xchg
pop
jle
cmpsb
or
jae
fwait
aas
sub
or
cmp
popa
jle
sub
pop
jle
in
jnp
jno
in
lods
fcoms
iret
pop
xor
xchg
mov
cli
cmc
mov
xchg
cmpsl
loopne
stc
in
pop
lock
out
mov
out
or
mov
ds
xchg
lret
outsl
sbb
repnz
nop
loope
push
icebp
inc
out
jae
mov
cld
repnz
mov
movsb
repz
fistl
lret
inc
mov
ds
xor
mov
xchg
das
mov
rcpps
mov
sbb
push
mov
xlat
sub
mov
loop
mov
orb
xor
push
pop
out
mov
cwtl
inc
out
repnz
ret
inc
lds
push
mov
mov
dec
sbb
xchg
mov
outsl
sahf
inc
aaa
inc
jl
popa
or
adc
rcrb
call
mov
cld
repnz
mov
andb
xchg
jo
xor
jmp
xor
xchg
pop
jle
mov
push
lcall
mov
jge
in
out
adc
push
mov
repnz
xchg
sarb
scas
push
inc
or
inc
ret
imul
cmp
popl
stc
test
and
scas
rcrb
dec
je
stc
in
pop
mov
and
sub
push
add
pop
jle
pop
fisubl
notl
jle
adc
cmp
mov
lds
inc
call
fs
shl
push
sar
xor
xchg
push
in
adc
dec
cld
jle
stc
xchg
pop
jle
sarb
sub
insb
jp
in
in
sub
cs
jle
in
xor
pop
cmp
inc
scas
jmp
stc
in
in
xor
adc
mov
je
repnz
and
mov
and
lret
das
mov
aad
arpl
ss
int
add
mov
mov
push
mov
movups
xchg
push
lret
in
rclb
rolb
das
inc
shlb
imul
pop
in
jg
bound
daa
sti
mov
jg
add
jg
out
cmc
movsb
ljmp
cld
jnp
push
lcall
and
cmp
push
iret
sub
mov
sub
push
shlb
rcl
sub
data16
sub
jbe
mov
ljmp
out
in
xchg
push
and
ret
nop
sbb
hlt
jge
jmp
push
sbb
mov
stc
in
push
insb
push
popa
lret
inc
mov
jle
in
cs
scas
bound
adc
jo
jbe
and
sbb
popa
push
xchg
pop
jle
xor
test
iret
push
pop
pop
dec
iret
repnz
xor
pop
lcall
or
es
cmp
push
cld
stc
imul
jae
add
dec
mov
es
stos
lahf
lret
das
lcall
nop
xor
imul
xor
adc
das
mov
dec
and
and
fstpt
sbb
shrl
cld
scas
mov
or
into
inc
sbb
inc
xlat
faddp
and
test
insl
imul
repnz
addr16
adc
loop
or
inc
mov
popf
rcl
repz
mov
scas
jmp
mov
mov
mov
push
repnz
and
jecxz
xchg
in
imul
ror
das
mov
pusha
mov
ss
lret
mov
lods
inc
pop
stc
repnz
push
iret
xchg
fistl
fsub
js
lret
pop
cmc
xchg
cmp
inc
call
shrl
jb
fdiv
xchg
sub
mov
or
ljmp
sti
enter
jno
mov
dec
sub
sub
mov
ss
scas
adc
pop
push
repnz
inc
xlat
dec
xchg
nop
daa
ret
in
ja
stc
in
ljmp
xchg
push
pop
jns
push
dec
leave
mov
pop
inc
jge
ljmp
mov
jnp
dec
das
cmp
pop
jns
xchg
xchg
inc
cs
mov
aas
pop
jmp
filds
mov
cld
enter
addr16
cmp
xor
xchg
loope
mov
pop
jle
in
mov
mov
mov
inc
jg
xchg
cld
jnp
xchg
mov
pop
xchg
int3
out
mov
repnz
das
mov
cmp
in
in
insl
xchg
pop
sbb
stc
or
jmp
inc
loope
scas
mov
adc
inc
pop
fdivrs
icebp
mov
push
mov
or
inc
aas
and
inc
jmp
sub
sbb
gs
jle
adc
jl
sbb
test
cmp
in
dec
arpl
sarb
jecxz
cld
repnz
aas
add
sbb
push
in
inc
mov
aaa
mov
inc
lret
pop
jle
pcmpeqd
adc
test
pop
jns
loopne
fs
cmp
lock
push
mov
into
dec
mov
inc
sub
in
sub
ret
ret
xchg
fdivrp
js
aad
js
loopne
mov
sub
mov
into
icebp
cmp
scas
mov
fsts
cmpb
popa
leave
pop
sub
test
sbb
fiadds
pop
enter
lret
adc
mov
and
das
lcall
cli
icebp
inc
ss
inc
rcrl
mov
std
cmpsl
mov
sub
mov
jns
xchg
in
ljmp
jecxz
xchg
out
in
sub
inc
sbb
outsl
imul
js
and
into
mov
mov
fdivr
jae
inc
popa
push
repnz
sub
mov
sub
ret
adc
jge
ret
cwtl
je
xor
mov
imul
stc
repnz
cmp
mov
ljmp
lahf
sbb
sub
lea
outsl
and
cmp
xor
cli
jo
les
out
mov
cmp
scas
mov
loope
test
ret
loop
mov
lret
addr16
pop
pop
in
mov
scas
push
mov
movsl
adc
push
push
mov
mov
push
inc
mov
sub
jmp
pushf
adc
ds
test
xlat
adc
add
xchg
pop
jle
jno
jecxz
test
or
in
mov
pop
in
and
insb
mov
lret
lahf
int3
out
sub
mov
ret
xchg
das
scas
mov
mov
aad
incl
jns
cmp
jmp
aas
int
jb
daa
loope
jg
sbb
aad
fstpl
jns
adc
inc
popf
leave
in
ds
test
cmp
in
bound
cmpsb
mov
dec
daa
sub
mov
mov
sbb
cmp
lret
mov
movsl
call
add
enter
pop
test
test
test
sbb
mov
lock
or
aas
jae
mov
xor
lret
das
and
pop
fwait
loopne
pop
int
ds
imul
ljmp
xchg
js
stos
les
mov
push
pop
jns
popa
push
and
mov
push
pop
jns
mov
movsb
lahf
pop
inc
jne
ret
pop
jns
xchg
or
cmp
and
imulb
int
jns
xchg
push
xlat
xchg
pop
add
lea
mov
jg
pop
pushf
sbb
mov
adc
pop
mov
inc
ss
test
xchg
add
orb
cmpl
jecxz
pusha
xchg
push
sar
xchg
pop
add
jo
push
pop
ja
loopne
pop
jle
sbb
inc
inc
js
xchg
jg
cld
rcll
lds
jns
loopne
push
negb
jmp
cmp
jecxz
in
push
xchg
pop
ret
pop
sbb
push
dec
mov
mov
mov
daa
jbe
sti
mov
push
jg
cwtl
nop
scas
mov
sbb
gs
lret
or
inc
sti
enter
iret
fldt
inc
add
icebp
pop
inc
int3
fwait
and
mov
mov
cli
pop
and
xchg
and
scas
sub
xchg
stos
jns
mov
sbb
rolb
adc
jle
in
jp
ret
mov
add
jae
mov
inc
jbe
fdivl
mov
inc
scas
pop
sahf
pop
lea
addr16
orb
pop
cmpsl
cmp
pop
aam
mov
cld
repnz
das
cmp
mov
mov
cwtl
xor
sbb
cld
adc
nop
lret
das
mov
ljmp
pop
pop
das
mov
sti
xchg
iret
dec
lret
pop
ss
push
mov
dec
stc
cmp
push
pop
daa
pop
sbb
cld
repnz
das
xor
jmp
hlt
adc
xchg
das
mov
fldt
into
inc
cmpsb
cmp
jle
aas
xor
out
cmpsl
xchg
pop
jle
in
mov
enter
xchg
xchg
push
stos
fnstcw
cmp
clc
sub
push
jae
in
pop
scas
xchg
jle
test
mov
lret
and
ds
lods
push
xchg
das
mov
aas
es
mov
xorl
mov
xchg
dec
movsl
in
test
xchg
aaa
rolb
jne
rolb
cmpsb
mov
mov
sub
xor
lret
sub
jmp
xchg
sub
std
lods
mov
add
addr16
fildl
test
test
fistps
fbstp
mov
stc
notl
adc
and
xor
shlb
jle
xchg
es
or
adc
and
mov
loope
or
push
push
pop
jg
cmp
inc
mov
cld
sti
enter
jne
stc
xor
jge
lods
push
repnz
das
mov
loopne
iret
fisttps
adc
das
mov
fmull
stc
xlat
xor
jge
mov
sub
jg
mul
xchg
js
cld
repnz
loope
pop
cmc
sub
adc
xor
stc
in
inc
fwait
aam
xchg
sti
arpl
mov
in
pop
jle
push
push
sbb
dec
or
xchg
pop
jle
xor
ret
or
push
into
adc
jns
jle
in
int3
mov
mov
xor
xchg
ds
jmp
ljmp
mov
pusha
jnp
int
inc
mov
fnstsw
push
dec
jecxz
sbb
mov
cltd
cmp
lahf
xor
push
mov
adc
mov
dec
dec
clc
loope
das
xchg
push
outsl
jle
sub
ret
adc
in
pop
ficompl
movsb
mov
andb
and
outsb
movsl
in
lea
fildll
mov
data16
jns
pop
push
add
lret
daa
and
xchg
pop
pop
ljmp
jnp
stos
ror
out
call
cmp
repnz
rolb
inc
stc
mov
test
pop
jbe
xchg
enter
pop
add
inc
push
xchg
jae,pt
cld
sti
in
fidivs
push
cmp
dec
bound
iret
dec
sub
mov
pop
jg
adc
inc
les
push
pop
jns
scas
dec
leave
jns
nop
jl
mov
mov
repnz
shl
jge
sbb
fs
ds
das
decl
icebp
fisubrs
push
dec
das
mov
fbld
push
sbb
pop
pusha
and
push
aaa
push
mov
popa
mov
inc
inc
addl
xchg
push
js
jnp
push
mov
sub
fstpl
inc
dec
sbb
or
repnz
cltd
sahf
push
mov
inc
clc
adc
jns
lea
dec
mov
inc
push
pop
sbb
or
xor
ds
xchg
popf
sbb
jmp
out
jle
rclb
mov
pop
stc
in
fwait
data16
loope
sbb
outsb
cmpl
mov
jmp
sahf
or
add
push
pop
sti
outsb
test
mov
enter
out
jne
pop
mov
dec
and
out
mov
xlat
and
jg
lret
cmp
jecxz
lods
xor
aas
pushl
and
mov
sahf
mov
ljmp
lods
test
pop
xchg
testb
push
stc
mov
bnd
xor
jns
fstpt
imul
lret
sahf
xor
xchg
test
in
insl
outsb
pop
add
mov
push
and
cmp
in
sub
addr16
popf
ret
in
adc
cmp
lds
outsb
and
xchg
jg
jmp
idivb
cmpsb
or
stc
ja
mov
lods
sbb
dec
pusha
orb
repnz
push
imul
sub
xchg
cli
in
divl
mov
movsl
stos
inc
and
aad
push
pop
jns
jle
mov
out
and
out
pop
pop
jns
xchg
inc
mov
sbb
cli
mov
repnz
cmc
adc
lea
fs
lret
mov
pop
push
into
push
clc
fisubl
ds
jmp
movsl
cltd
and
xchg
adc
sbb
repnz
das
ficoml
xchg
in
or
sub
lret
das
mov
jg
xor
fwait
lret
das
mov
repz
inc
mov
mov
ss
pop
cmp
push
mov
jge
lret
cmp
lods
aas
cmp
pop
rcl
add
imul
pop
les
jle
clc
lahf
or
pop
jle
cmp
xlat
push
sbb
mov
lret
xor
bnd
mov
jbe
sub
cmp
in
sub
je
out
pop
cmpsb
inc
add
sub
or
push
adc
dec
sub
cltd
or
push
mov
push
sti
fs
mov
movl
test
dec
lret
out
xchg
sub
jae
jns
xlat
cmp
das
mov
daa
jmp
lea
ret
das
mov
mov
bnd
cmp
cwtl
cld
repnz
xor
ret
icebp
nop
jbe
popl
add
fwait
cld
repnz
das
or
leave
movsl
mov
jo
dec
in
add
mov
and
jge
mov
leave
cli
jns
shld
jmp
xor
push
fstps
mov
and
loopne
outsb
inc
lods
fstp
and
jge
lret
inc
inc
push
push
outsl
pop
xor
sbb
mov
in
pop
mov
das
aam
out
jge
and
in
lods
inc
jle
aad
sbb
hlt
insl
cltd
fs
sub
push
dec
mov
test
mov
insb
jp
push
lret
xchg
mul
xor
sti
out
jmp
or
xchg
pushf
in
push
pop
mov
aas
test
cld
sti
insb
les
sti
fcomi
lcall
filds
push
cmp
inc
pop
inc
and
sub
cmp
outsl
pop
jno
mov
mov
dec
mov
das
je
in
and
or
inc
xchg
imul
or
pop
jns
and
cli
mov
mov
or
fsubl
dec
jo
pop
mov
mov
and
ds
push
mov
jno
jae
jne
imul
rclb
das
cmc
push
dec
adc
scas
mov
loop
xchg
sub
pop
ljmp
popl
cmp
test
scas
insb
ja
repnz
mov
sub
sub
mov
outsb
jle
mov
pop
stc
in
mov
rclb
es
jbe
jb
iret
cmpsl
pop
jns
xchg
mov
and
push
in
or
pop
dec
cmp
push
mov
leave
adc
lahf
shll
scas
and
loop
lret
das
dec
push
xchg
imul
std
int3
lea
adc
jge
add
jge
cmc
jae
pop
push
sub
lcall
dec
add
xchg
test
xchg
dec
or
fwait
mov
aam
mov
add
out
mov
adc
repnz
cmp
inc
push
sbb
loopne
daa
or
and
or
sti
pop
sti
icebp
or
mov
fnstcw
mov
and
pop
std
shrl
in
rcrl
jne
sub
add
xchg
push
pop
ljmp
mov
add
mov
pop
jns
inc
add
mov
mov
iret
pushf
mov
pop
jns
xchg
fmulp
push
xor
add
xchg
sbb
xchg
push
frstor
movsb
pop
in
pop
sbb
xchg
push
pop
rep
jno
out
mov
fcoml
lcall
or
mov
mov
repz
shrb
lret
jg
cmp
cmc
shrb
cli
int
mov
cltd
adc
ret
jns
xchg
xchg
sbb
divl
xchg
push
cs
inc
aad
xor
icebp
out
inc
in
push
pop
cmp
arpl
or
js
bound
addr16
push
pop
jns
out
fs
in
bound
arpl
pop
jns
mov
dec
call
scas
fdiv
lret
mov
lods
iret
or
xchg
push
mov
mov
movsb
loope
jbe
ljmp
mov
pop
jb
and
or
data16
xchg
fldt
in
cmp
mull
movsb
test
jl
notl
and
cmpsl
inc
shrl
or
xchg
enter
movsb
xchg
ret
jne
into
test
dec
mov
mov
les
mov
mov
cli
ret
add
repnz
jp
jmp
lret
mov
pop
sub
lret
das
decl
jle
das
int
andl
or
xchg
mov
ror
mov
outsb
insl
jecxz
loopne
imul
notb
stos
mov
ret
push
fmulp
jno
mov
js
inc
clc
cld
add
and
cs
sub
das
lods
inc
xor
inc
in
cmp
or
dec
jge
jns
jmp
pop
mov
mov
in
push
pop
xorl
mov
sub
je
or
mov
into
enter
xor
xor
mov
mov
sub
cwtl
leave
or
lods
mov
mov
push
cld
repnz
das
push
push
iret
fadds
dec
push
enter
or
xchg
jp
movsb
jne
pop
sarl
and
or
xchg
push
insl
ds
xor
rcl
ljmp
aad
fldcw
mov
push
ficoms
stos
pushl
das
mov
sbbl
in
sub
adc
or
mov
test
js
push
ja
xchg
mov
sub
pop
cmp
add
jle
cmp
mov
push
rcl
cwtl
pop
fldt
jmp
add
mov
inc
xorl
lods
dec
pop
stc
repnz
bound
mov
std
repnz
jmp
xchg
test
lret
mov
xor
push
leave
in
add
scas
mov
and
mov
addb
scas
mov
mov
add
mov
mov
repnz
mov
xlat
pop
rcrb
cmp
das
mov
cld
jne
inc
ss
xor
je
pop
stc
repnz
and
jecxz
cmp
orb
lret
scas
outsb
pop
inc
enter
cmp
cld
sti
enter
sbb
or
loopne
fisttpl
das
cmc
jmp
add
push
push
in
inc
mov
rorl
scas
mov
mov
mov
aaa
add
add
rolb
repnz
inc
out
in
mov
jbe
cld
xchg
repnz
das
or
sti
and
sub
filds
scas
out
sti
sub
mov
xchg
mov
inc
jmp
pop
jle
in
pop
out
imul
sbb
mov
xchg
out
jle
in
aaa
xchg
shl
and
aaa
andb
jmp
jo
fisubs
mov
xchg
mov
adc
xchg
pop
jle
push
leave
lds
push
gs
push
daa
orl
cmc
jae
cli
jb
mov
xor
dec
jmp
stos
sbb
cmp
dec
push
lret
add
and
das
sub
je
xchg
jg
mov
sbb
incl
fmull
out
and
ficomps
ja
mov
shr
pop
jns
xchg
out
cld
std
iret
test
mov
mov
jns
xchg
push
mov
pop
in
pop
mov
pop
sub
sbb
jbe
dec
xchg
xchg
enter
shll
mov
xchg
lods
je
scas
pushf
outsl
scas
push
cli
cmp
xchg
pop
push
in
test
in
adcb
cmp
pop
mov
jmp
mov
xchg
pop
and
imull
mov
pop
in
pop
jle
scas
ds
cmp
cmp
nop
or
cmpsl
and
stc
in
orb
inc
movsl
dec
push
xchg
popf
sbb
loope
inc
xor
lret
sub
mov
jp
or
mov
push
mov
sub
cmp
sbb
pop
stc
in
inc
pop
push
clc
add
jne
fmull
enter
sub
loope
pop
mov
arpl
and
add
sbb
sub
xor
pop
jns
mov
pop
xor
outsb
push
loop
mov
fwait
loope
cwtl
shl
push
inc
inc
inc
lcall
ja
cmp
xor
xor
mov
xchg
cltd
scas
add
dec
loopne
lret
xchg
divl
and
shlb
clc
enter
and
sahf
out
push
pop
inc
push
in
lcall
mov
sbb
clc
call
mov
lret
cmpb
in
or
or
inc
bound
lret
in
push
loope
xchg
sub
decl
negb
add
cmp
int3
inc
sub
xchg
jg
fmulp
sbb
fstl
xchg
pop
pop
xchg
add
js
jle
in
insb
inc
xchg
lret
outsl
jno
pop
imul
movsb
insl
sar
dec
data16
push
repnz
mov
mov
cmp
mov
adcl
not
das
mov
xchg
jb
dec
fcompl
lds
push
jmp
lock
sub
or
xchg
jg
and
cmp
mov
push
outsb
in
pop
jle
mov
ss
push
jle
mov
xchg
lock
negb
or
pushf
pop
jle
in
leave
xor
jnp
pusha
sub
enter
and
in
push
xor
xchg
stos
out
adc
push
dec
movsl
push
jnp
xchg
xchg
pop
pop
testl
mov
rorl
xchg
addr16
xchg
and
sahf
sti
inc
ds
loop
cld
sti
enter
imul
mov
mov
gs
pop
jp
daa
and
outsb
push
pop
and
js
mov
iret
jo
scas
rorl
adc
push
repnz
and
add
jo
dec
adc
xor
adc
test
xlat
cld
mov
dec
mov
cmp
pop
jecxz
std
mov
jl
in
outsl
hlt
pushf
js
cmp
push
enter
mov
popa
inc
adc
mov
jg
xor
sbb
in
push
aas
jns
mov
adc
sub
inc
push
fisubs
scas
lret
jno
jae
push
imul
mov
fs
push
clc
mov
outsl
push
mov
lret
mov
sub
repnz
jl
sbb
cmc
les
mov
push
ret
cs
das
ljmp
inc
scas
cmp
xor
mov
lret
ja
arpl
pop
addr16
mov
out
xor
shl
mov
inc
imull
sub
ja
or
add
mov
dec
add
out
gs
rclb
lret
int
cld
repnz
jge
cmc
pushf
int3
in
data16
push
test
stos
sar
lret
das
xchg
fcomps
rolb
mov
mov
fbld
icebp
lds
out
pop
lret
das
mov
lcall
outsl
in
mov
and
out
dec
out
pop
push
sbb
mov
add
pop
and
add
js
hlt
je
in
mov
aas
dec
ja
les
cld
sti
pop
jg
and
cmp
add
imul
in
das
sbb
icebp
rcll
cld
jge
add
mov
setnp
in
mov
jecxz
into
push
mov
filds
mov
inc
es
daa
cmp
push
stos
int3
mov
jmp
dec
aaa
mov
ret
outsl
ss
stos
test
lret
lock
push
stc
push
int3
mov
sti
enter
inc
xlat
daa
pop
add
dec
and
enter
cmp
pop
lea
popa
jbe
and
lret
das
mov
xchg
add
popf
in
mov
std
scas
add
or
stc
stc
sub
sbb
cmc
daa
jb
cmp
in
pop
mov
lds
mov
pop
jle
jl
mov
xchg
loope
pop
push
push
fmulp
clc
faddp
scas
ss
lods
cli
sbb
jns
xchg
rol
nop
sub
or
fisubl
jns
xchg
push
pop
lahf
inc
cmpsl
lret
iret
pop
inc
stos
inc
jbe
xchg
pop
sbb
sahf
jp
sbb
and
enter
push
data16
test
pop
loope
repnz
das
xchg
or
scas
outsb
inc
xlat
xor
hlt
enter
dec
add
cs
enter
loope
jmp
jae
dec
xchg
mov
out
pusha
dec
insb
test
xor
out
add
pop
jle
dec
dec
fmulp
test
xchg
fidivrl
add
cld
repnz
pop
mov
mov
ljmp
and
sahf
mov
inc
sbb
mov
cmc
cltd
push
dec
pop
jle
and
movsb
outsb
sbb
test
repnz
aam
adc
mov
sarb
nop
or
ret
dec
xchg
stos
inc
and
pushf
lret
das
mov
cli
mov
ds
hlt
das
mov
flds
xchg
sub
mov
mov
mov
jmp
add
push
xlat
push
nop
nop
cld
repnz
das
mov
addr16
fs
scas
int
pop
lret
mov
xor
daa
sub
lret
das
mov
pushl
addr16
int
leave
jnp,pt
lret
xchg
jl
add
xor
adc
mov
adcb
aas
lea
jle
xchg
xchg
int3
add
add
push
pop
jns
addr16
mov
dec
inc
xchg
pop
jns
xchg
sbb
rclb
xor
push
jge
xor
cmp
test
cmp
and
mov
xchg
mov
fs
int
pop
jns
mov
shll
inc
les
in
cmp
mov
adc
je
sbb
xchg
push
adc
inc
xrelease
xchg
push
pop
sbb
into
xchg
jl
inc
push
ficomps
dec
testb
das
ljmp
or
popa
push
push
das
mov
mov
movsb
jno
mov
lret
xchg
mov
inc
jecxz
ja
dec
mov
and
or
aaa
mov
sbb
nop
mov
xlat
lcall
out
mov
push
es
xchg
pop
jle
jbe
popa
pop
lds
imul
nop
xchg
cmp
add
push
aaa
aaa
mov
push
das
add
jns
pop
aad
mov
sahf
shrd
xchg
push
pop
clc
cmp
jnp
push
jns
dec
inc
push
xchg
push
pop
jns
vmovntpd
mov
gs
loop
fadds
fwait
inc
pop
jmp
repnz
das
mov
pop
loop
stos
push
cmpb
das
mov
imul
push
rorb
aas
pop
jge
mov
outsl
aaa
inc
dec
sti
stos
mov
cli
aam
stc
in
je
xor
loop
xor
xchg
cmpsb
jp
push
xchg
add
fisubrs
adc
imul
jo
jmp
dec
bound
sbb
mov
ret
dec
inc
pop
std
mull
addr16
xchg
pop
lods
ss
adc
nop
push
inc
mov
enter
pop
push
jge
jg
dec
jmp
in
mov
outsl
daa
push
loope
mov
test
pop
cmp
cltd
push
xor
xlat
repnz
pop
jl
mov
ja
pop
mov
pop
loope
das
mov
mov
stos
insl
cmpsb
gs
xor
fs
and
movsl
pop
mov
fs
repnz
aad
out
shll
pusha
clc
enter
sti
dec
cmpsb
mov
pop
push
gs
mov
popf
imul
inc
cmp
xchg
sub
jecxz
or
ret
pop
jge
fildll
fisubs
scas
jns
fdivr
adc
ds
sub
fbstp
xchg
lahf
imul
inc
or
push
lock
in
fstl
in
scas
mov
jmp
mov
mov
xchg
sub
sub
repnz
ret
pop
jge
pushf
shll
mov
iret
or
mov
lret
push
ret
stos
add
xchg
cli
mov
dec
and
push
hlt
ja
jbe
das
push
fsubp
and
and
jbe
jb
loopne
out
jno
mov
repnz
mov
xlat
icebp
into
adcl
lret
das
mov
ds
stos
imul
js
jmp
out
imul
int
lahf
loope
sbb
loopne
lock
and
jno
or
and
add
andl
cmp
mov
lods
inc
out
cwtl
enter
js
in
jmp
xlat
xchg
sub
pop
jmp
nop
mov
cmpsb
or
jle
in
out
stos
sub
mov
in
leave
xchg
pop
mov
std
xor
mov
xchg
push
fimuls
adc
pop
movsl
outsl
sbb
dec
push
in
ljmp
imul
pop
sahf
adc
and
jns
gs
out
rcr
lods
xor
in
mov
shll
ret
mov
jns
jp
lcall
out
out
add
jb
cli
sbb
cmp
xlat
ljmp
in
movsb
jle
aad
add
cmp
push
in
mov
fldt
mov
xchg
adc
mov
arpl
and
dec
push
sub
push
pop
lds
mov
daa
pop
xor
std
repnz
adc
imul
or
nop
push
sbb
lret
mov
pop
iret
ja
andl
sti
scas
xchg
mov
sub
xor
xor
mov
add
pop
repnz
das
mov
insb
mov
arpl
rol
inc
mov
cmp
xchg
scas
mov
xchg
xchg
mov
scas
subb
sbb
gs
bound
inc
pop
pop
jns
les
std
fwait
orl
jl
das
je
xchg
push
fisubs
test
aad
in
fsubl
js
xchg
push
pop
jns
mov
jae
mov
cmp
cmp
cmc
xchg
add
jb
xor
cmc
in
leave
shl
dec
fucomp
cmpsb
notl
or
sub
outsb
test
or
movsl
sub
sbb
push
push
stos
xor
inc
add
sbb
push
inc
jp
and
xchg
and
imul
pushf
imul
xchg
shrb
pop
fmull
outsl
lods
icebp
jns
jmp
xor
xor
xchg
push
pop
sbb
scas
adc
lods
movsb
xchg
sub
scas
mov
movsl
js
sbb
pop
mov
test
mov
test
xchg
mov
lds
js
rolb
jle
negl
xor
and
pop
jle
in
xor
cmp
dec
add
das
xor
repnz
pop
test
lret
adc
cs
aaa
mov
adc
fcompl
sub
sub
push
xchg
mov
cmp
ja
pop
jns
xchg
push
adc
pop
pop
xchg
dec
in
clc
xor
xlat
and
insb
mov
test
pop
jle
ss
add
clc
jmp
and
cmpsb
ds
dec
add
jle
inc
repnz
adc
movsb
lret
mov
mov
cmc
cld
out
lods
mov
test
xor
cld
repnz
mov
mov
sub
lods
jmp
dec
mov
hlt
enter
popa
rcrb
in
out
adc
jns
popf
cmpsl
mov
mov
add
dec
in
and
rorb
orb
pop
cli
data16
xchg
pop
jle
mov
lods
negl
sbb
aaa
push
cmp
stos
adc
push
faddp
rcll
jp
xchg
pop
pop
mov
push
cltd
cmc
arpl
inc
sub
dec
or
xlat
cld
repnz
and
mov
sti
in
cli
mov
xlat
repnz
and
push
hlt
cwtl
or
mov
das
mov
je
jmp
xor
mov
jno
mov
push
or
in
idivb
pop
bnd
fstpt
repnz
imul
fsts
test
lods
mov
push
cmp
push
mov
repnz
aam
popa
mov
mov
pop
shlb
mov
es
xor
int3
mov
icebp
xchg
sub
pop
aaa
push
pop
fs
sbb
ja
rcrl
xchg
ds
jo
mov
fdivl
js
xchg
das
xchg
ds
jg
scas
mov
pop
loopne
cmp
dec
adc
repnz
push
adc
repz
enter
out
xchg
sub
inc
test
jge
mov
push
hlt
cld
push
sbb
xchg
xchg
ja
es
in
sbbb
mov
push
leave
jecxz
mov
loop
sub
in
inc
div
nop
lods
xlat
adc
mov
lret
mov
add
pop
lock
aaa
repz
jnp,pt
roll
and
psubusw
aaa
repnz
das
dec
sti
mov
int3
xor
mov
and
jge
dec
add
and
stc
pop
aad
cwtl
loopne
test
or
push
js
aam
mov
je
dec
mov
push
das
cld
jne
fldl
and
repnz
imul
js
lcall
ja
stos
shll
push
add
jle
ja
in
xlat
jae
dec
sub
std
push
lds
repnz
xor
sub
aad
repnz
hlt
and
stos
cmovae
or
mov
jge
jbe
lret
mov
adc
sbb
pop
cld
repnz
faddl
mov
xor
test
mov
mov
jns
add
shl
dec
push
call
int
daa
mov
mov
lods
stc
xor
inc
sub
and
or
imul
xorl
aas
shlb
inc
pop
rcrl
fimull
inc
pop
ret
add
dec
jne
out
sub
jnp
push
repz
fucomip
and
scas
sbb
stos
jnp
fwait
out
mov
cld
repnz
gs
cmp
stc
dec
and
cmp
sbb
ret
sbb
sub
sub
mov
cli
or
xchg
lock
pop
inc
dec
xor
ret
lret
mov
sub
ret
and
sbb
insb
sbb
fdivl
in
test
mov
add
sbb
adc
or
inc
aad
xchg
lret
sub
mov
push
mov
add
out
mov
lock
cmpsb
adc
push
stc
in
inc
popa
cmp
or
clc
sub
lods
in
pop
jle
addr16
dec
cld
out
jne
out
out
sbb
and
push
fld
inc
xchg
pop
test
repnz
sub
gs
and
xor
jge
in
add
and
jo
add
or
in
pop
jb
mov
mov
fnstenv
shlb
sbb
mov
add
cmp
mov
scas
mov
shll
cmp
lods
mov
dec
xor
jns
stc
push
call
sub
mov
xchg
push
es
adc
test
rorl
pop
push
pop
push
xor
or
lcall
jge
data16
jmp
fmull
cld
repnz
shll
mov
sbb
filds
lods
or
sti
out
daa
in
cmp
shl
xchg
pop
jle
push
loop
dec
adc
or
xor
bound
mov
xlat
dec
in
out
pop
jns
xchg
jmp
js
int
rcr
sbb
in
pop
and
cmpsl
pop
ret
popa
pop
stc
sti
enter
ret
repnz
xor
xor
scas
stc
repnz
das
sbb
pop
fistps
cmp
loop
jg
out
jmp
ja
ds
mov
jecxz
xor
xor
idivl
pop
cmp
in
pop
xchg
in
enter
fsubs
xchg
pop
jle
ror
xchg
pop
jecxz
enter
addb
ret
das
fsts
or
aaa
adc
sub
in
fs
pop
outsb
mov
repnz
mov
add
out
int
in
repnz
imul
inc
ret
cmp
mov
scas
fs
dec
add
mov
xchg
ret
clc
enter
nop
repnz
xor
in
xchg
aas
popf
xor
mov
add
sbb
nop
pop
push
pop
push
scas
mov
repz
inc
push
test
iret
mov
lds
mov
inc
xchg
cmp
fs
lret
or
mov
or
add
lret
mov
pop
push
fwait
out
inc
jae
sub
xchg
mov
out
test
outsl
in
adc
repnz
idiv
repz
ficomps
aas
imulb
push
subl
lret
das
mov
jle
or
scas
subl
cld
repnz
lret
cltd
push
test
xor
pop
pop
lods
inc
pop
xchg
fcompl
xor
xchg
pop
push
daa
and
mov
sub
popa
jno
sub
cs
je
in
sub
add
xor
add
dec
jp
lret
xor
mov
lea
pop
popf
sbb
int
hlt
mov
jle
enter
jge
xchg
mov
cld
jnp
xchg
lods
test
jmp
sti
gs
popf
in
and
sbb
dec
and
adc
stc
in
rcrl
mov
cld
popf
sarl
jle
in
lods
add
ljmp
jle
in
or
pop
orb
jmp
add
xchg
lret
and
loop
pop
mulb
mov
cmp
pop
stc
in
pop
and
in
loopne
loop
fdivs
ds
pop
jle
mov
pop
in
je
xchg
ljmp
push
and
cmp
in
mov
jle
in
mov
pop
imul
addr16
jg
and
test
ds
mov
fisubs
lods
mov
cld
mov
xor
mov
push
aam
faddl
xchg
int
mull
adc
jecxz
cmp
jnp
jle
nop
cli
rcll
pop
jmp
sub
sbb
out
inc
pop
jno
push
mov
das
push
xchg
jb
loopne
and
push
repnz
loop
pop
pop
and
adc
pop
jns
adc
pop
stc
stos
adc
xchg
push
fiadds
fimull
sbb
into
pop
cmp
push
frstor
mov
add
or
fs
jle
daa
jns
cmc
stc
in
pop
pop
xor
mov
ror
lods
notb
xchg
pop
jle
inc
mov
repnz
xchg
pop
jle
jns
std
cmpsb
imul
lock
nop
loope
lock
sub
ja
xchg
in
xlat
aam
aam
xlat
loope
sbb
jle
sbb
jp
adc
push
fimuls
cli
int3
je
test
adc
mov
pop
jns
xchg
fnstcw
sbb
dec
cli
insb
fwait
sbb
mov
jns
xchg
push
mov
cmp
ret
roll
ljmp
sbb
cmpsl
sahf
jb
lret
xchg
push
fiadds
cmpsb
mov
popa
arpl
fmulp
cmp
andl
insb
push
sub
inc
ljmp
dec
mov
out
pusha
push
in
push
pop
pop
pusha
ret
aam
push
sub
mov
jns
pop
push
jecxz
stos
lds
push
ljmp
xchg
cmp
imul
push
sub
clc
enter
loope
fidivrs
mov
push
rcll
jp
jg
imul
ljmp
xor
xchg
das
mov
in
lods
mov
xchg
dec
sarl
inc
mov
in
cli
sbb
jecxz
das
decl
cli
shlb
es
ljmp
nop
sarb
test
aaa
inc
jecxz
pop
arpl
fldcw
sbb
push
pop
jns
in
fdivrl
push
test
ja
imul
push
mov
mov
add
jb
in
pop
jecxz
pushf
insb
movsb
clc
ja
mov
mov
add
sub
cmp
cmp
inc
in
fwait
and
stc
lods
cmp
pop
ds
inc
push
xchg
push
cmp
fwait
stc
cltd
pop
jecxz
jge
push
push
pop
or
stc
in
rclb
lahf
fldl
pop
inc
sarb
xchg
ds
adc
cli
in
int3
sub
and
mov
in
pop
aaa
xor
out
cmp
das
jmp
cmp
imul
pop
or
mov
lret
mov
test
ljmp
pushf
fs
repnz
das
push
add
mov
jo
jae
repnz
das
mov
std
imul
xor
shlb
ficoms
rorl
popa
clc
inc
xchg
xor
sbb
sti
push
mov
je
xor
xchg
push
adc
subl
adc
add
pop
fistl
stc
jmp
movsl
lods
test
inc
rol
mov
push
mov
xorl
mov
xchg
ja
jmp
pop
mov
and
cmp
mov
es
pop
add
imull
mov
and
mov
test
pop
push
xor
pop
jle
imul
sbb
leave
lcall
inc
xor
or
adc
push
outsl
xchg
rclb
inc
sub
rolb
jb
repnz
mov
dec
insl
cmp
xchg
aaa
xchg
xorb
jns
daa
out
cmc
pop
aam
les
lcallw
in
adc
jo
push
movsl
xor
jge
in
jg
mov
push
push
xchg
divb
sub
add
pop
push
je
imul
mov
cmp
ss
dec
lret
sbb
or
add
lahf
mov
add
cmpsb
xchg
fidivrl
jge
fldenv
sub
pop
inc
mov
mov
fiadds
jle
negl
pop
lret
das
loope
push
lods
push
sbb
jle
in
inc
jo
mov
add
scas
jp
repnz
pop
sub
ja
jnp
jo
enter
call
in
cs
pop
jge
std
clc
pop
jle
negl
push
inc
je
mov
xchg
loopne
cld
mov
xchg
cmc
add
rcll
add
sub
lret
mov
mov
daa
repz
dec
jnp
pop
stc
nop
pushf
testb
sbb
dec
imul
lret
jno
jl
add
repnz
inc
push
push
mov
loope
add
lret
stos
iret
mov
gs
addr16
js
sub
and
add
mov
das
mov
loop
in
movsl
pop
cmp
pop
jle
in
add
fldenv
pop
sub
mov
fisttps
sbb
dec
jge
adc
fcoml
mov
sbb
or
les
fstps
dec
push
jnp
das
jle
dec
cmp
adc
lods
sbb
mov
cmp
xor
mov
lret
add
dec
sub
jp
lds
dec
stc
in
and
in
xlat
dec
lret
insb
inc
mov
test
xchg
pop
jle
or
dec
je
bound
add
pop
push
and
stc
movsb
inc
movsb
aas
cmp
hlt
mov
jmp
and
sbb
or
push
sub
test
lcall
in
in
xchg
pop
sub
cmp
push
mov
pop
adc
icebp
std
xchg
pop
jge
add
adc
or
stc
in
jmp
pop
cmc
mov
ret
fimuls
dec
ficomps
jg
jle
test
xchg
xlat
rorb
inc
vpmulhw
sbb
fisubs
in
pop
jle
xchg
int3
ds
mov
mov
stc
fwait
lds
mov
insb
and
xchg
jge
enter
pusha
sbb
nop
mov
mov
in
enter
stc
shll
cmp
popa
pop
repnz
das
sti
aas
into
mov
cmp
add
lret
das
mov
jl
and
lahf
push
mov
fwait
inc
mov
test
adc
mov
mov
mov
stc
xchg
daa
sarb
in
push
ficomps
popa
sbb
mov
inc
push
pop
jns
scas
and
in
jno
mov
push
jmp
push
sbb
imul
sub
cli
xor
sub
mov
xor
inc
sbb
scas
mov
loopne
scas
ret
sahf
pop
cmp
repnz
mov
xor
mov
popa
mov
xor
fldl2e
cwtl
in
hlt
and
mov
test
cmp
stc
imull
mov
cmc
in
adc
int
pusha
shll
in
pop
cmp
imul
lret
pop
loope
inc
loopne
or
pop
cmp
push
push
pushf
cmp
stc
in
xor
dec
add
shlb
shl
xchg
pop
movsb
es
inc
sahf
xchg
dec
push
pop
lods
test
mov
fdivl
je
jmp
jle
test
and
adc
xchg
push
inc
cmp
and
xchg
into
sbb
inc
pushf
in
jg
fdivrs
dec
dec
out
sbb
dec
inc
sub
cmpsl
repz
mov
out
push
stc
in
push
in
aam
xchg
repz
and
pop
jbe
push
jae
adc
xor
mov
add
enter
or
jns
in
dec
out
lds
mov
gs
xchg
ja
jle
sub
sbbl
sbb
mov
push
push
push
js
jns
xchg
xchg
mov
add
int3
jns
xchg
push
push
nop
fcomps
in
cmc
add
xchg
push
pop
sub
scas
push
push
pop
movsb
mov
push
dec
or
lods
cmp
jb
xchg
repz
push
lods
lock
lea
sbb
cmp
mov
inc
scas
mov
push
lcall
mov
cmp
pop
jg
sbb
icebp
or
ljmp
sub
enter
sub
dec
in
enter
cltd
add
cmpb
into
sti
fildll
jae
mov
fisubrs
inc
fisubrs
push
mov
pop
pop
sarb
xchg
jmp
xchg
pop
jle
repnz
in
mov
outsl
xchg
push
xchg
stc
in
call
or
xor
fidivl
lahf
inc
cld
sti
enter
in
push
cmp
sbb
lods
sub
xlat
dec
clc
ljmp
and
in
xor
jb
or
and
and
mov
xchg
aaa
es
cwtl
les
push
pop
jns
cltd
cmp
lods
xor
push
push
sub
xchg
jg
pop
or
push
pop
jns
mov
inc
mov
dec
push
pop
jns
and
mov
dec
and
sbb
idivl
cmp
sub
lret
and
and
push
mov
rorl
loope
sub
aas
rcl
iret
iret
push
xchg
jmp
repz
sti
lret
mov
or
jnp
pop
dec
xor
enter
sbbl
sbb
mov
mov
mov
stos
pop
jns
xchg
mov
fdivs
or
jns
xchg
push
lods
jecxz
mov
jnp
dec
lods
dec
push
pop
stos
pop
mov
push
cmp
mov
or
push
mov
adcb
push
push
in
loopne
mov
mov
repnz
das
sbb
mov
mov
and
cmc
into
ss
sub
jmp
jmp
smsw
ljmp
out
mov
cmp
mov
push
aas
and
jle
jae
push
pop
jns
mov
fwait
mov
pushf
xor
jns
xchg
popf
push
or
in
idivb
ja
lret
push
daa
pop
xchg
mov
arpl
scas
mov
lret
mov
cmp
sbb
shrb
scas
mov
daa
shrb
or
repnz
cmp
xchg
sbb
cmp
sub
popf
cmp
ficoms
hlt
shll
lret
jg
lret
jo
jecxz
imul
scas
mov
adcb
mov
or
aas
leave
push
adc
mov
and
mov
push
popl
in
mulb
scas
mov
subl
or
cmp
jns
orl
repnz
push
push
or
outsl
mov
ljmp
lahf
push
mov
cmp
in
popa
jecxz
cmp
jnp
and
orb
loop
jmp
push
fbld
test
loope
stos
call
int
adc
and
cmc
stc
in
jg
inc
shlb
int
into
pop
ficoms
leave
repz
pop
jle
mov
mov
and
das
repnz
xchg
push
inc
pusha
subl
cld
repnz
iret
xor
out
cld
mov
push
cmp
repnz
das
ret
test
shl
inc
jnp
repnz
das
mov
movsl
fdivs
sbb
add
pop
jae
cmpsl
fdivl
mov
push
push
mov
inc
or
mov
xlat
loopne
lcall
icebp
xchg
jg
pop
push
push
cld
sub
mov
xor
lret
jne
loope
jge
sub
in
xchg
repnz
jae
popf
bound
out
jmp
cmp
imul
mov
in
pop
mov
les
push
stc
jle
es
insb
jo
inc
inc
imull
lret
xorl
jecxz
pushf
mov
lret
mov
sbb
aad
dec
sub
lea
setg
movsb
and
sahf
cmp
push
les
out
sbb
sahf
in
mov
sbb
push
stos
jmp
outsb
imul
jne
popa
movsl
jnp
cs
sbb
in
rcr
fsubrs
jge
lret
mov
fcmovu
pop
cmp
shlb
sbb
xchg
sub
sbb
mov
and
pop
pop
stc
repnz
lcall
repnz
mov
inc
sub
in
jg
cmp
cli
push
adc
add
xchg
pop
jle
int
call
jge
inc
or
fistl
jae
jmp
es
xchg
dec
add
jle
in
mov
adc
shr
outsl
pop
test
xor
lret
jns
mov
jp
and
xchg
pop
cli
and
push
cmc
cs
dec
add
jo
push
ljmp
das
adc
mov
xchg
hlt
lods
cmpsb
es
xlat
xchg
mov
push
std
leave
mov
fs
repnz
das
mov
or
push
test
scas
notl
mov
cmp
adc
jmp
icebp
and
lock
js
clc
cmpsb
jecxz
adc
fs
lcall
lret
inc
push
mov
outsb
imul
movsl
jae
pop
jle
les
and
filds
xor
pop
jle
in
add
mov
xchg
add
jle
in
aad
mov
icebp
pop
pop
cltd
dec
lret
sti
enter
cmp
sbb
sbb
mov
lock
subl
das
mov
popa
mov
ret
fistl
sub
cltd
cmp
insb
test
mov
cmp
int
fidivl
hlt
xchg
das
xor
sub
cmp
mov
adc
adc
push
cwtl
insl
hlt
sub
mov
push
mov
std
pop
scas
decb
lods
cld
repnz
das
aam
fldcw
pusha
add
in
jg
push
bound
xchg
xor
mov
jl
jns
push
xor
aam
in
jns
jp
enter
adc
and
xor
push
fcompp
dec
lea
mov
jecxz
pop
pop
jns
adc
dec
into
lds
pop
and
stc
in
jg
inc
fldt
mov
imul
sub
mov
out
mov
xchg
adc
sub
mov
aaa
rorl
adc
cmc
sub
pop
stc
repnz
leave
ss
ss
and
lret
fistps
jmp
outsb
mov
scas
mov
and
jae
pop
jnp
xchg
rcl
call
sti
or
and
pop
dec
pop
stc
xlat
dec
test
pop
push
mov
xchg
cmp
mov
lods
jnp
mov
xchg
fdivrl
mov
repnz
in
mov
xor
mov
cmp
scas
pop
dec
push
ljmp
lods
in
sub
xor
adc
fadd
mov
ljmp
dec
cwtl
pop
sub
imul
adc
sti
inc
inc
inc
add
cmpsl
incb
xchg
cmp
aad
jns
xchg
push
jl
gs
push
and
inc
fs
mov
inc
push
pop
dec
or
cli
fwait
dec
imul
jle
in
mov
push
adc
into
sub
insb
in
xor
fwait
push
pop
test
repnz
das
jmp
jmp
xor
push
adcl
sbb
pop
jns
lea
or
cmp
push
mov
in
push
rorl
push
jp
ret
es
or
pop
icebp
inc
aas
stc
ljmp
mov
cmp
add
adc
pop
jns
ds
sbb
xor
cmp
adc
dec
pop
mov
pop
ja
cltd
fcomip
stc
in
pop
mov
cli
movntps
adc
popf
mov
aad
add
out
sarl
rolb
test
fwait
cltd
test
out
pop
jns
xchg
ss
cmc
pushf
popa
pusha
sbb
push
das
lret
pop
push
in
fcoms
mov
aad
scas
mov
pop
rclb
sbbb
testb
mov
or
pop
popf
aam
cli
xchg
repnz
das
inc
cmpsb
fs
jle
into
push
daa
dec
lret
das
mov
or
mov
or
pop
pop
stc
repnz
cld
add
mov
in
das
mov
insb
or
into
shrb
repz
repnz
mov
add
jne
in
div
lret
das
jmp
push
cwtl
repnz
insb
cmpl
cmp
pop
xor
fisubrs
jnp
repnz
mov
cmp
pop
fadd
inc
push
adc
lret
and
xlat
les
hlt
jg
scas
mov
fnstsw
inc
push
jno
in
in
enter
adc
push
test
sub
dec
adc
inc
lea
pushf
leave
cmp
xchg
lds
addb
lret
inc
ja
iret
jge
das
ja
inc
lods
mov
cmp
aam
lock
cmp
repnz
mov
xchg
cmp
ret
hlt
jge
icebp
xchg
das
mov
movsl
xchg
cmp
cmp
mov
decb
jge
rcrb
repnz
ds
sbbb
jle
scas
xchg
xchg
mov
adc
push
cmp
fcmovu
addr16
cli
pusha
lahf
pop
sbb
sbb
ja
ds
in
movsb
mov
xchg
sahf
loope
xchg
jo
pop
mov
imul
jmp
mov
and
inc
mov
xchg
jmp
lret
dec
xchg
jp
jno
inc
mov
mov
mov
sbb
cmp
adc
in
jg
mov
or
in
pop
popf
orl
jge
push
pop
jns
sbb
and
insb
lret
test
repnz
inc
jno
repz
mov
xchg
sub
sbb
and
adc
fistpll
mov
test
scas
mov
xchg
ja
std
loop
mov
ds
sti
movsl
pop
sub
jno
adc
lret
enter
sub
fldenv
into
stos
dec
cmp
movsl
andl
mov
lret
jmp
ds
sub
cli
enter
dec
or
mov
mov
push
ficomps
mov
xchg
ja
out
les
jbe
lds
daa
cmp
xchg
pop
scas
dec
ss
mull
fs
pushf
sbb
in
pop
jle
jg
jno
pop
cmpsb
fwait
jp
xchg
push
dec
adc
hlt
sarb
clc
in
flds
imul
loope
in
push
fimuls
pusha
arpl
lcall
jns
mov
xor
xchg
inc
adc
aad
mov
jb
fimuls
adc
pop
icebp
hlt
inc
enter
pop
jns
xchg
mov
add
lock
sbb
lret
fs
sbb
push
cwtl
adc
sub
cmc
xchg
fistpll
aaa
jl
iret
pop
out
scas
mov
bound
adcb
jbe
push
jnp
lret
es
dec
sbb
mov
pop
cld
call
loopne
lods
loopne
and
repnz
mov
test
xchg
pop
cmp
mov
or
and
jle
in
scas
pop
rcll
cli
lcall
repnz
mov
ror
in
xchg
adc
lret
das
mov
add
mov
jge
pusha
cmpsl
xchg
aad
sbb
pop
lret
das
mov
lret
push
outsb
pop
pop
ret
ja
mov
and
in
ret
test
push
cmp
push
add
sbb
jmp
stc
in
pop
lea
aas
jmp
push
jle
in
pop
jle
arpl
sub
xchg
pop
jle
inc
add
cmp
mov
cmp
test
jg
ficompl
lret
das
mov
rclb
fisttpll
adc
outsl
push
inc
push
pop
sub
xchg
inc
dec
fidivrl
js
sub
sub
mov
xchg
sub
cld
or
repnz
mov
jge
mov
out
add
out
lret
das
mov
adc
daa
pop
fwait
das
mov
fists
mov
sbb
shrl
or
insb
out
cmpsb
cmpsb
mov
mov
clc
lcall
lret
das
xor
popf
stos
adc
daa
lret
sub
aam
cmpsl
sub
scas
mov
xchg
icebp
sbb
ja
fs
lods
pop
sti
shrl
repnz
jg
pop
ds
jb
dec
add
roll
movsl
test
lret
das
mov
test
rclb
and
xor
sub
js
insb
dec
ficoml
test
mov
pop
jns
das
pop
rcr
pusha
into
enter
mov
xor
imull
jle
and
in
and
pop
adc
cmpsb
int3
cld
xchg
pop
jle
dec
cs
imul
loope
jle
in
jle
mov
outsb
push
shll
test
stc
in
fmull
insl
call
dec
mov
inc
in
in
pop
mov
mov
cs
insb
mov
pusha
mov
or
repnz
das
and
pop
imull
push
jnp
repnz
das
mov
arpl
imul
les
das
ror
sub
sar
lret
xor
cmp
fidivrs
and
in
sbb
mov
push
pop
jns
dec
stos
lret
nop
add
ret
xor
mov
pop
pop
jns
pop
popf
imul
xchg
jg
jne
std
dec
insl
cmp
int
in
xchg
pop
jle
jne
mov
sbb
nop
and
fsqrt
in
add
icebp
ja
dec
pop
rol
shlb
xchg
push
daa
scas
out
cs
jl
ja
in
das
jmp
adc
dec
adc
outsb
cmp
mov
lock
cmp
inc
fsubrs
icebp
int
pop
jle
push
inc
sbb
int3
fisttpll
xchg
pop
jle
in
sub
xor
into
jmp
iret
jle
in
ret
cmp
mov
repnz
xchg
pop
jp
sub
jecxz
outsl
dec
mov
mov
xor
cmp
or
repnz
das
fistl
jp
nop
jae
xor
push
lret
das
ds
hlt
cmp
sub
lods
sbb
pop
testb
xchg
shll
fiaddl
push
rol
sub
lret
das
push
fs
fld
pop
popf
sahf
fdivrs
lahf
mov
sub
mov
jns
or
sbb
stc
into
lahf
add
in
push
pop
sarb
in
cmpsb
mov
cmp
pop
call
mov
dec
jge
in
repz
adc
mov
xchg
pop
adc
repnz
push
mov
shl
xchg
pop
jle
sbb
aad
add
fiaddl
inc
xchg
pop
jle
pusha
push
outsl
and
pop
jle
in
movsb
add
dec
jl
pop
mov
dec
cmp
in
sbb
jp
addb
inc
push
cmp
not
and
lds
or
je
jmp
jns
xchg
and
lcall
ds
repz
xchg
push
outsb
sub
jne
mov
in
push
pop
and
cmpsb
sub
push
leave
lret
pop
cmp
nop
test
aad
mov
ficoms
ljmp
shrl
js
mov
or
jno
mov
mov
jns
cltd
test
add
sbb
jp
sarl
adc
mov
inc
lret
test
adc
jl
push
xchg
or
sub
dec
dec
and
repz
mov
fbld
insb
loope
pop
pop
jns
xchg
push
or
rcll
push
cmpsb
aas
mov
jns
sub
ja
jle
imul
ds
push
sbb
pop
stc
mov
jecxz
lret
imul
divl
inc
in
mov
lret
das
mov
jmp
and
xchg
pop
cmp
imul
adc
jle
in
test
lods
scas
sti
loope
jl
jle
in
sbb
or
fst
rclb
stc
in
pop
dec
aas
data16
in
xchg
inc
insb
jae
ja
das
lcall
in
movsl
imul
mov
xor
xchg
mov
jge
sub
pushf
mov
addl
sub
inc
xor
cmp
add
xor
xor
xchg
mov
sub
std
movsb
repnz
cltd
fcompl
sub
xchg
push
pop
jns
aas
call
fwait
cld
pushf
stos
or
in
mov
imul
test
ja
xor
push
mov
js
pop
inc
in
pop
jle
or
add
ret
mov
pop
jle
jb
ss
aam
gs
xor
adc
in
sbb
mov
cli
xor
xor
addr16
jle
rorl
dec
xchg
xor
stc
test
aas
and
or
std
in
movsb
popa
fnstcw
test
sahf
adc
fs
lock
stc
in
popa
das
mov
cmpsb
test
xchg
xor
adc
fimuls
jno
sub
notb
pop
sbb
in
jb
imul
dec
gs
repnz
jmp
fwait
js
mov
mov
sub
jg
cli
dec
scas
xchg
xchg
ja
jge
push
insl
mov
xchg
inc
lods
daa
ret
inc
adcl
in
popw
cmp
xor
cmp
add
in
pop
out
pop
mov
arpl
aad
jne
xchg
pop
jle
mov
or
mov
xchg
pop
jle
dec
jecxz
es
aas
sbb
in
cmp
dec
adc
mov
push
jge
push
stc
in
sub
lret
or
maxps
jns
xchg
mov
cmpsl
iret
jb
cwtl
mov
test
or
in
push
pop
push
test
stos
dec
in
test
fs
push
push
xchg
popa
cmc
or
lret
push
dec
or
ret
push
insb
repnz
mov
jb
sub
adc
and
scas
mov
adc
imul
sub
jno
sbbb
data16
enter
aaa
repz
mov
lods
test
xchg
push
mov
inc
in
repz
mov
dec
mov
repnz
das
in
pop
in
xlat
inc
insl
ds
scas
pop
in
das
mov
adc
sub
loope
stc
ja
jge
outsb
rorl
inc
sahf
sti
movsl
mov
jl
in
pop
mov
inc
pop
jns
jle
xchg
fldt
add
cli
loopne
cmpsb
push
adc
stc
in
pusha
sbb
ja
js
mov
jp
push
stc
in
pop
aas
mov
mov
inc
in
pop
jle
js
in
pop
xchg
jno
or
jne
pop
jle
mov
sbb
dec
mov
in
js
andl
jns
in
pop
je
pop
das
aad
iret
ja
jno
and
sub
jl
repnz
xchg
mov
jae
lahf
mov
inc
add
das
adc
sbb
mov
pop
stc
repnz
and
push
sahf
add
in
push
fiadds
fcomp
daa
lret
push
jl
xchg
push
pop
jns
dec
arpl
dec
xchg
inc
stc
sti
in
xchg
mov
test
divb
fimuls
pop
dec
imul
ja
mov
out
stc
notl
cmc
xchg
cmpsb
adc
ljmp
ret
aas
or
add
xor
jmp
sub
mov
ss
je
or
xchg
pop
lcall
jmp
popa
mov
lock
std
in
lcall
fnstenv
in
push
pop
xchg
mov
xor
dec
xchg
push
stos
sbbl
dec
test
int3
sahf
in
out
xchg
pop
std
fdivl
cmpsl
xor
hlt
les
imul
movsl
inc
leave
xchg
jnp
push
lds
shl
jmp
outsb
jmp
cmp
lods
test
mov
addl
jl
mov
roll
fs
in
push
pop
cmp
jne
lcall
push
pop
jns
push
xchg
or
into
outsl
into
sbb
les
in
pop
fst
je
iret
jp
or
lret
not
dec
ja
addr16
in
xor
rorb
sbb
jns
xchg
cmp
loop
push
adc
mov
stos
push
sub
or
jnp
call
arpl
or
push
lret
das
mov
add
repnz
jb
out
or
loopne
pop
fistpl
xlat
mov
daa
cltd
lods
add
ja
mov
repnz
das
iret
sti
cmc
call
shlb
mov
cmpsl
inc
xlat
jecxz
adc
pop
sub
outsl
add
xor
pop
scas
pushf
in
or
notl
and
pop
pop
ss
ja
mov
jnp
jl
loopne
xor
int
das
mov
jbe
cmp
mov
fs
mov
pushf
and
cmp
imul
das
or
pop
push
call
lret
das
mov
add
idivl
lret
das
mov
cmp
adc
cwtl
das
mov
pop
cmp
and
ret
js
cs
jge
lret
pop
in
and
incl
fists
push
cmp
xchg
pop
add
push
mov
and
add
gs
jae
iret
les
je
push
pop
jns
test
std
repnz
mov
mov
push
call
stc
insb
shrb
pop
jns
xchg
out
pop
aad
jbe
es
adc
aam
push
push
fistps
xor
scas
mov
sub
std
xor
inc
pop
mov
js
repnz
pop
imul
in
xchg
pop
adc
jb
pop
mov
mov
aad
lret
ja
icebp
ss
mov
pop
jne
in
pop
loop
lea
inc
or
pop
sti
pop
lcall
push
enter
and
cmpsl
xchg
jbe
inc
in
dec
xchg
pop
push
faddp
cli
jle
add
mov
or
xor
push
pop
jns
xchg
adc
ret
das
add
and
xchg
push
xor
iret
inc
push
push
popa
sub
push
ror
add
stos
inc
and
out
scas
mov
sbb
popl
xchg
cmpsl
xchg
and
scas
enter
xchg
ja
cmp
push
xor
movsb
ret
mov
push
mov
movsl
js
repnz
repnz
mov
mov
sbb
loop
inc
xchg
repnz
das
mov
inc
sub
stos
arpl
std
adc
das
mov
imul
int
inc
mov
addr16
aad
shr
mov
jle
in
rcll
mov
or
fsubr
mov
aaa
loop
in
pop
push
adc
imul
pop
add
sbb
subb
pop
js
and
jmp
sub
stos
lods
sbb
inc
push
stos
push
xor
scas
mov
pop
cs
or
scas
push
mov
bound
jnp
mov
lods
pop
mov
leave
push
sbbb
sbb
lret
stos
int
push
mov
lahf
jecxz
stc
out
mov
cmc
mov
xlat
aas
imul
int
fwait
mov
scas
clc
cwtl
and
stc
arpl
jmp
pop
loop
xchg
pop
jns
ljmp
push
inc
mov
jg
mov
jb
pop
mov
xchg
add
pop
jle
iret
inc
hlt
inc
pushl
dec
mov
in
add
xchg
fmuls
and
sahf
sub
lret
das
je
dec
fdivrs
cmp
xchg
mov
sti
mov
xchg
lds
xor
stos
mov
push
push
arpl
movsl
ret
call
test
pop
pop
jns
xchg
mov
jg
jno
lahf
adc
inc
push
dec
outsl
rolb
fimuls
insl
rorl
call
bound
aad
mov
mov
push
pop
jns
or
ljmp
pop
jns
push
icebp
les
inc
or
mov
push
mov
in
sub
rcr
pop
jae
lcall
aas
push
cwtl
stc
dec
addr16
inc
ds
jne
call
repnz
cmp
and
mov
mov
sub
add
lret
dec
lods
mov
mov
in
adc
test
cmp
push
sub
addr16
sbb
in
push
pop
pop
rcll
cwtl
sbb
das
enter
jg
pop
jns
iret
adc
out
movl
cmp
popa
adc
mov
test
hlt
imul
out
pop
call
cmpsb
xor
out
mov
jl
add
sarb
call
cmp
jae
cmp
push
lahf
ds
cmpsl
inc
bound
mov
test
and
mov
cmp
pop
leave
faddl
nop
shll
mov
and
pop
imull
ja
xor
jecxz
sub
sub
loop
add
into
mov
in
push
pop
jno
mov
or
loopne
in
jae
push
pop
jns
rclb
aad
mov
stc
and
into
aam
enter
and
xchg
lret
ret
mov
push
xor
push
push
push
mov
pop
adc
mov
xchg
lret
mov
icebp
sbb
and
fdivr
repnz
das
inc
addb
lds
mov
or
ja
cld
movsl
push
pop
lcall
add
aas
mov
pop
dec
pop
aas
fsts
cltd
xchg
imul
gs
fcompl
inc
scas
mov
in
mov
leave
sbb
cs
xchg
xor
cltd
outsl
push
pop
jns
xchg
je
xchg
xor
pop
int3
adc
in
push
out
and
push
rcll
xchg
pop
jge
jnp
jmp
decb
jns
loopne
dec
xor
test
sub
mov
es
sbb
xchg
push
pop
xchg
mov
stos
or
das
incb
xor
jo
ja
dec
xor
xor
mov
xchg
rclb
in
pop
xchg
sub
xor
dec
pop
clc
mov
cmp
mov
sub
int
xchg
popf
dec
push
adc
lret
mov
notrack
mov
sbb
fldenv
mov
insb
pusha
jmp
inc
pop
jns
stc
pop
test
and
push
sub
scas
mov
cmp
push
ds
push
push
mov
sub
shl
or
repnz
add
jmp
lods
in
mov
cmp
ret
mov
xchg
pop
jle
mov
xor
mov
sub
stc
in
jno
or
pop
inc
shlb
pop
jns
push
pop
icebp
mov
sbb
mov
in
sbb
cwtl
sbb
ljmp
pop
jle
nop
lret
or
inc
xlat
aas
add
sub
pop
cmc
aam
add
or
push
stc
in
push
push
pop
sbb
pop
stos
xlat
inc
mov
inc
sbb
jle
adc
jecxz
mov
inc
jle
pop
movsb
add
sub
stos
imul
out
or
lret
push
xor
movsb
popa
jg
pop
jns
adc
mov
ret
jge
and
jle
in
add
push
loop
out
imul
jnp
and
mov
xchg
lods
xor
mov
mov
jns,pn
dec
aaa
faddl
mov
jecxz
pusha
mov
rcrl
or
jbe
ret
sub
mov
or
insb
sahf
sub
mov
xorb
mov
scas
mov
retw
in
xor
pop
sub
insl
fucom
jnp
mov
lret
das
sti
imul
fcompl
add
sbb
ja
repnz
aas
fisubrl
xchg
push
xchg
rcll
popf
lret
mov
cwtl
out
cmpsl
imulb
test
xchg
sbb
xchg
pop
dec
repnz
das
pop
push
icebp
daa
cli
mov
aaa
jmp
das
mov
repz
lods
push
jno
push
mov
inc
pop
mov
push
or
and
push
cli
int3
rolb
insl
xor
mov
std
cmpb
loope
jecxz
add
xchg
jg
jge
and
dec
loope
sub
stc
es
cwtl
out
ljmp
inc
loop
push
jp
addr16
jae
aas
rcrl
dec
repnz
inc
aas
cmp
cli
sub
lahf
jo
or
lret
pop
je
inc
sbb
cld
sti
enter
add
adc
lret
das
mov
push
test
outsb
xlat
sbb
jnp
pop
stc
mov
in
loop
pop
out
repnz
xchg
fisubl
jbe
lds
out
push
repnz
das
mov
xchg
and
rcll
test
mov
js
fs
inc
push
sbb
repnz
jp
popf
push
mov
jl
dec
inc
jge
aas
xchg
scas
and
sahf
pop
sub
mov
mov
and
xor
mov
cmp
inc
test
in
icebp
xchg
push
mov
aad
add
inc
pop
jns
out
mov
pop
subb
lret
arpl
std
xor
jb
add
int3
pop
lret
mov
pop
fstpl
mov
pop
lret
inc
movsl
pop
cmp
cwtl
shlb
sti
sbb
push
out
fsubl
cmp
and
fistpl
into
sub
data16
pop
sahf
adc
jg
enter
mov
fndisi(8087
mov
jl
in
mov
shld
jne
mov
mov
mov
aad
jb
jmp
rcrb
xor
adc
cmp
adc
xchg
imul
sarb
adc
pop
lock
sub
aad
sub
push
das
arpl
out
fistpll
out
repz
test
outsb
sahf
mov
in
aam
loopne
repnz
das
mov
fcmovnu
fcompl
lret
das
mov
jl
xchg
cmp
test
lret
and
lods
ret
test
jg
fadd
aad
pop
pop
fdivp
push
fiadds
inc
test
in
cmp
xchg
push
xchg
push
push
data16
and
pop
sbb
adc
nop
xchg
push
pop
jns
sbb
imul
push
pop
jns
leave
xchg
sahf
loop
test
jno
adc
add
inc
jns
add
sahf
lds
movhlps
and
clc
das
mov
rolb
jecxz
mov
and
mov
mov
push
aad
ret
cmp
repnz
das
fisttps
cmp
les
lret
mov
scas
and
adc
out
movsl
sbb
ds
fwait
aam
mov
das
mov
push
das
es
push
inc
xchg
adc
cld
repnz
jae
aad
pusha
ljmp
pop
push
cld
repnz
das
rclb
fsubr
stos
clc
fdecstp
cltd
jb
xchg
sbb
stos
xor
imul
into
gs
notb
in
pop
gs
hlt
lds
dec
dec
hlt
rorb
xor
jbe
scas
lds
outsl
insl
cmp
ret
ret
mov
lret
jle
or
adc
adc
ja
das
fldt
cmp
or
negl
mov
call
cmp
jp
stos
enter
pop
mov
ret
dec
mov
int
ficomps
cli
jno
addb
add
mov
in
adc
inc
sbb
sti
call
out
add
es
ret
push
nop
aas
xchg
pop
jecxz
fnstenv
adc
arpl
or
mov
leave
sub
pop
adc
xchg
repnz
mov
jp
jne
insl
lods
sub
scas
mov
leavew
add
sub
xor
in
jle
out
and
and
pop
stos
cmp
and
or
shrb
xorb
sbb
push
pop
jns
in
shl
movsb
mov
mov
in
xor
xchg
icebp
lea
imul
movsl
sti
stc
test
dec
inc
pop
mov
icebp
in
pop
jle
outsl
xchg
enter
and
fnsave
xchg
pop
jle
jns
fwait
jg
xchg
jae
sbb
push
rcrl
in
vpxor
imul
testb
stc
in
movsb
push
xchg
jns
push
or
stc
in
pop
outsb
sbb
fisubrs
dec
fsts
inc
pop
leave
cwtl
aas
lds
in
sub
mov
scas
sub
pop
es
loopne
cmp
jmp
in
pop
jle
fdivp
packssdw
or
xchg
je
pop
jle
jp
loop
dec
sbb
inc
out
dec
clc
enter
lea
test
test
lods
pusha
cmp
lods
mov
into
pop
int3
pop
inc
push
sahf
pop
xchg
push
fidivrs
xchg
mov
mov
xor
pop
sbb
mov
stos
sbb
jne
mov
in
into
iret
cli
jns
jmp
arpl
add
loope
sub
filds
pop
lock
daa
dec
mov
jge
lahf
sbb
sbb
pop
adc
in
popa
repnz
xor
pusha
xchg
or
scas
mov
test
mov
pop
das
scas
pusha
sub
scas
repnz
pop
fs
loop
push
outsl
or
repnz
and
cs
pop
fimull
mov
inc
shlb
mov
in
rcrl
mov
mov
aaa
mov
mov
push
lods
mov
dec
dec
jb
leave
inc
push
mov
repnz
mov
test
pushf
in
jns
xchg
das
mov
stos
cmp
test
dec
mov
mov
stos
test
mov
xchg
xor
arpl
inc
faddp
shll
mov
xorl
loopne
cmp
jo
xchg
sbb
lock
lock
sub
rcrl
das
jmp
push
inc
mov
xchg
adc
lret
das
mov
ja
sbbl
repnz
sbb
mov
ss
das
mov
mov
jo
and
jbe
pop
xchg
repnz
das
and
adc
cwtl
push
add
cmp
jbe
push
addb
dec
add
mov
mov
mov
movsb
mov
cmpsb
rcrb
loopne
jle
popf
push
mov
jp
inc
ja
mov
lcall
sub
dec
pop
jge
cmp
pop
imulb
jno
cmpsb
ret
in
xchg
push
pop
sbb
or
in
pop
int3
pop
repz
dec
xor
jmp
mov
mov
ret
inc
mov
das
mov
xchg
lcall
daa
dec
xchg
dec
aaa
mov
enter
repnz
dec
cwtl
pop
jns
xchg
push
mov
inc
jae
adc
icebp
out
leave
xchg
push
shlb
cli
imul
lods
movsb
push
mov
mov
in
cmovb
xchg
sub
pop
fidivrs
in
pop
or
cmp
cltd
and
pop
enter
jns
cmp
outsl
testl
je
jns
xchg
adc
and
jp
push
icebp
adc
repnz
leave
std
cmc
imul
aad
mov
sub
lret
das
mov
loop
adc
enter
add
push
or
add
xchg
xor
dec
cld
repnz
sti
sbb
and
mov
imul
les
repnz
stos
push
mov
sbb
mov
lret
mov
xlat
cmpsb
test
out
cmp
repnz
xor
out
and
adc
out
push
cmp
fxam
inc
jg
dec
shl
and
loopne
imul
stos
mov
pop
ret
enter
leave
push
out
pop
push
inc
jns
inc
cli
enter
xchg
iret
aam
cld
pop
jp
out
flds
subb
and
inc
mov
sub
rcl
add
dec
pop
stc
repnz
in
stc
out
xorl
xchg
jg
loop
mov
and
outsl
mov
lods
movsb
inc
jle
fsubrl
mul
push
pop
jns
cmp
loope
in
push
test
xchg
out
push
push
add
stos
sub
sub
mov
xchg
push
movntq
out
xor
daa
or
pop
and
ds
pop
mov
negb
cwtd
popa
jmp
stc
xlat
pop
incb
cmp
pop
int3
pop
lds
cmp
push
mov
xchg
pop
int3
nop
adc
xor
out
enter
pushf
mov
mov
xchg
xchg
fs
jb
dec
lret
inc
sbb
lret
inc
sbb
xor
andl
scas
mov
inc
add
jnp
fcomps
scas
mov
push
adc
lcall
push
jl
loop
sub
mov
pop
pop
call
xor
in
pop
fbstp
sub
mov
xchg
pop
jle
test
aas
jnp
movl
xor
clc
push
xchg
je
lds
fbld
dec
repnz
push
repnz
out
or
push
inc
and
mov
in
fsts
int3
in
pushf
xlat
adc
aam
push
jl
cmp
repnz
das
lcall
leave
dec
mov
loope
jecxz
das
mov
out
fists
mov
jns
popf
icebp
decb
jmp
clc
mov
pop
in
push
pop
stc
aad
xor
and
xor
jno,pt
test
mov
sbb
push
pop
jns
xor
add
sbb
enter
jns
xchg
inc
or
sarb
adc
xchg
push
xor
cmpsb
lods
mov
ficoms
mov
inc
pushf
test
sub
test
insb
cmpsl
adc
push
pop
repz
aaa
insl
adc
in
out
jo
repz
push
cmp
outsl
pop
sub
loop
jecxz
pop
push
xchg
inc
cmpsb
jne
sub
push
pop
jns
cmp
movsb
mov
adc
jns
push
lret
scas
daa
in
xor
jbe
inc
clc
enter
imul
sbb
cwtl
popa
out
sbb
incl
jnp
mov
repnz
movsl
or
adc
or
enter
jns
and
mov
flds
orb
jecxz
add
sub
sbb
pop
push
cld
xor
dec
and
jne
pop
pop
jl
cmp
push
xor
xor
aas
xlat
jnp
adc
sub
ljmp
cmpsl
xor
xor
das
sub
inc
stc
insl
push
inc
pop
inc
fstpt
cmpsl
cmp
cmp
int
cmc
jns
dec
mov
sahf
adc
clc
fucomi
pop
pusha
mov
scas
mov
xchg
mov
cmpsl
loope
inc
loop
sub
jmp
test
jbe
push
fistl
insl
inc
enter
stc
in
enter
push
lret
dec
mov
add
in
pop
or
cmp
add
sbb
lahf
pop
cmp
sbb
mov
mov
pop
sbb
les
push
sub
lret
das
decl
imull
rcll
jge
inc
mov
repz
fwait
mov
xchg
ret
lods
cmp
rorb
adc
jne
lods
pusha
stc
in
jg
mov
adc
sahf
xlat
sub
fsub
xchg
pop
jle
shrl
sbb
mov
jg
sbb
mov
imul
cmp
jle
enter
xchg
xor
loop
mov
cmpsb
out
enter
push
xchg
popf
add
int
or
mov
mov
push
add
mov
mov
call
shrb
into
fimull
xchg
lret
cmp
pop
je
cmp
cltd
inc
lea
outsl
icebp
or
pop
dec
std
jmp
sub
lret
mov
dec
cs
sub
xchg
jg
in
jne
lods
lods
mov
addl
mov
mov
mov
xchg
addr16
aas
push
mov
jns
cmp
lret
das
leave
sub
sub
je
jge
in
jnp,pt
sbb
inc
cmpsl
dec
fwait
mov
pop
jle
dec
lea
pop
ret
xchg
pop
jle
imul
sub
sub
stc
test
movsl
jmp
cmp
mov
lds
jbe
das
and
jp
das
mov
aaa
mov
jbe
mov
cld
jnp
mov
call
dec
inc
pop
jae
jp
xchg
das
pop
daa
jmp
stc
repnz
cmp
int3
cmpsb
das
cltd
jl
mov
shl
pop
jns
inc
outsb
movsb
lea
hlt
repnz
sub
mov
jg
loopne
and
scas
mov
loopne
mov
xor
repnz
mov
aaa
add
jecxz
mov
push
add
and
xchg
ss
mov
scas
in
pop
jle
mov
aad
inc
test
lahf
mov
stc
push
jl
aad
repz
clc
or
push
mov
cltd
hlt
xchg
in
gs
popf
dec
xchg
pusha
jge
ljmp
clc
icebp
or
cmp
iret
mov
mov
cld
repnz
add
lcall
stc
test
into
xor
cli
lea
pop
fs
std
jnp
imul
iret
push
cmpsl
pop
pop
adc
test
push
ficoms
sub
in
ja
xchg
and
ljmp
lret
mov
aaa
loope
arpl
and
iret
subb
cld
repnz
inc
gs
orl
leave
lret
jl
out
xor
xchg
cmp
push
std
mov
cmpsb
ja
jns
xchg
push
mov
rcll
mov
push
fucom
xchg
push
pop
xchg
add
mov
add
icebp
lret
adcb
std
pop
pop
jns
sub
outsl
add
push
pop
cmp
xchg
adc
pop
aas
cld
repnz
das
sbb
int
jg
or
lret
das
lcall
cmpl
add
jo
or
fwait
push
mov
mov
stc
test
mov
ss
out
mov
xchg
pop
inc
push
fbld
inc
je
or
fadds
mov
test
js
jae
and
stc
repnz
je
fistl
cmp
aaa
das
mov
jecxz
notl
add
sti
leave
lret
int
fdivr
lods
add
mov
in
pop
mov
popf
jge
aad
and
outsb
mov
jl
xchg
scas
sub
enter
mov
cmp
mov
push
fiadds
fcmovb
dec
lcall
jb
or
mov
xor
fwait
lret
in
punpckhwd
mov
stos
lret
sub
lahf
gs
push
mov
sbb
nop
sub
xchg
mov
sbb
ss
out
pop
fptan
push
pop
pop
fsubrs
jns
ljmp
cld
pop
adc
xchg
xlat
adc
int3
and
dec
lock
das
mov
insb
pusha
aaa
jns
lahf
pop
xchg
mov
and
jns
sub
mov
pop
inc
pushf
inc
insl
in
push
pop
mov
mov
movsl
inc
pop
ja
sbb
rcll
hlt
dec
cmpsl
cld
repnz
mov
pop
inc
sub
inc
add
das
mov
push
and
hlt
std
add
popa
lcall
test
loop
aad
pop
scas
mov
dec
sbb
test
sti
enter
push
clc
cmp
jmp
cld
cwtl
mov
inc
adc
lret
movsl
inc
inc
addl
repnz
push
mov
ret
inc
stc
in
push
fwait
pop
push
dec
out
adc
mov
pop
jle
inc
in
pop
ret
sbb
push
ficomps
sbb
mov
rcl
pop
cmp
xchg
jns
mov
adc
xchg
add
adc
popa
mov
inc
inc
ret
or
mov
sub
dec
ret
popa
hlt
inc
mov
mov
dec
clc
xor
mov
pop
cmp
lret
mov
test
add
and
and
out
addb
mov
mov
cmp
push
lods
and
lret
das
mov
addr16
int3
cltd
or
lret
fs
lret
pop
cltd
into
iret
dec
jns
xchg
aaa
subl
dec
jp
in
push
pop
pop
int
stos
fnsave
xchg
sub
cmp
add
pop
mov
or
ljmp
lret
das
mov
test
loope
pop
or
imul
repnz
sub
in
enter
push
or
pop
mov
pop
fsts
xor
xchg
dec
pop
jle
in
add
arpl
fidivrl
aaa
orl
stc
repnz
and
clc
je
mov
pop
add
cmovb
mov
movsl
shrb
inc
sub
addr16
cmp
cmc
and
mov
mov
xchg
in
dec
jge
cmpsl
pop
aas
popf
xor
pop
jns
lret
or
mov
iret
pop
clc
jo
pop
jns
lds
mov
mov
sub
pop
jns
xchg
jecxz
enter
add
inc
out
cmp
xchg
push
jl
mov
lcall
push
pop
add
push
cli
or
stc
xor
scas
mov
cmpsl
lea
jmp
sbb
bound
mov
cmp
popf
mov
jl
xchg
jnp,pt
insb
dec
xor
lds
xchg
adc
pop
ljmp
add
push
xor
cmc
add
inc
dec
ficomps
pop
dec
test
mov
lret
xchg
push
push
and
aam
xor
int
into
inc
insb
cs
xor
sub
jl
or
jns
stc
jp
mov
jb
loop
imul
es
in
enter
fistpl
lds
mov
inc
and
sub
xchg
push
pop
adc
clc
out
clc
imul
sbb
out
xor
cs
jle
ja
sub
imul
out
jg
cmp
xchg
pop
clc
and
fwait
ja
bound
xchg
pop
jle
mov
cltd
mov
or
xchg
pop
jle
xor
push
sbb
popf
and
cmpsb
xchg
cmp
imul
inc
dec
scas
mov
push
in
int
jp
dec
rol
cwtl
leave
mov
lret
sub
insb
das
and
nop
ds
ja
cmpsb
int
pop
push
push
pop
jns
jp,pn
in
jne,pt
pushl
xlat
pop
jns
xchg
inc
outsl
mulb
imul
loop
jns
inc
adc
repz
push
pop
notl
loop
icebp
enter
sarb
push
jge
jmp
cltd
out
pop
scas
mov
es
sti
sbb
inc
fstpl
xchg
mov
shll
jno
ljmp
inc
sub
loopne
in
stc
mov
xchg
das
mov
xor
enter
dec
pusha
iret
lret
dec
sbb
ds
lret
pusha
hlt
jns
and
adc
scas
in
aaa
xchg
pop
ja
push
jg
pop
jns
imull
xor
xchg
or
cld
repnz
and
shll
mov
xor
jmp
repnz
das
mov
pop
dec
in
add
sub
push
lret
das
mov
sub
imul
repnz
push
call
lret
add
cmpsb
popf
cmp
subl
mov
fcmovnbe
adc
push
ficomps
sti
lods
jns
nop
insl
aas
xchg
add
fs
jns
xchg
xlat
push
stos
mov
inc
std
repnz
jg
or
js
sbb
addr16
pop
jle
or
lods
stos
jne
adc
xchg
add
stc
in
dec
or
xadd
sbb
enter
inc
iret
mov
xchg
push
fmulp
imul
cmc
mov
add
adc
push
sub
mov
adc
ds
lret
dec
gs
and
and
in
jle
in
pop
dec
inc
dec
or
pop
pop
mov
in
pop
popa
je
jl
orl
in
pop
jle
imul
and
jg
pop
jle
lret
test
in
cli
cmp
das
xchg
jle
in
add
call
fisttpl
cwtl
lahf
mov
xor
in
push
add
js
in
test
out
dec
sbb
inc
xor
movsl
imul
push
pop
xor
xchg
mov
cmp
jecxz
push
pop
jns
cli
sub
mov
jg
lret
mov
pop
jns
push
aam
pushf
cld
xlat
mov
cwtl
cmp
sbb
jg
out
movsb
push
out
push
pop
jns
addr16
rcr
ja
rorb
pop
jns
xchg
int
lcall
or
fwait
into
ja
xchg
push
dec
lea
nop
test
lds
push
xchg
adc
fnstsw
rep
notb
imul
loope
repnz
js
or
mov
push
sbb
mov
push
add
hlt
adc
hlt
pop
fcomps
add
pop
add
push
add
and
inc
icebp
and
adc
jmp
cld
repnz
jne
jle
dec
jecxz
es
dec
popf
xchg
aad
mov
testl
pop
jns
mov
xchg
push
pop
addr16
in
out
out
mov
pop
lock
adc
iret
pushf
imul
call
or
or
ja
gs
lods
dec
mov
cmpsb
out
sub
jns
cmp
mov
mov
mov
inc
push
subl
mov
test
pop
xor
out
insb
sub
cmp
repnz
das
adc
xchg
rolb
outsb
jp
mov
aas
or
sarb
enter
and
das
mov
or
add
clc
lret
das
mov
pop
mov
fwait
cs
data16
or
mov
insl
shrl
fwait
arpl
pop
call
cmp
jno
sub
adc
xchg
ja
or
sbb
jae
or
lods
jl
int
sub
scas
mov
sub
aas
sbb
ljmp
enter
orb
repnz
loope
xlat
sub
add
repnz
lahf
imul
nop
and
lcall
ss
lea
jg
xchg
inc
adc
cli
loope
sbb
xchg
shlb
mov
js
testb
mov
fsubrp
adc
std
pop
scas
mov
dec
ja
sti
out
imul
call
repnz
lods
jne
ret
nop
pop
jnp
out
outsb
xchg
das
lcall
cmp
out
js
inc
add
sbbb
cmp
aam
movsb
pop
jns
xchg
jecxz
fsubrs
hlt
and
sub
fiadds
mov
sub
imul
les
add
sub
or
mov
jae
mov
xchg
pop
loope
clc
hlt
cmp
stos
out
dec
cmp
por
test
pop
repz
cld
lret
sub
imul
xchg
fildll
pop
cmp
mov
fistpll
pop
cmp
or
fbld
aaa
test
or
and
in
jg
push
cmp
sti
iret
pop
adc
add
add
stc
push
mov
adc
xor
pop
jle
in
fs
clc
lods
push
out
push
pop
mov
fucomp
xchg
jg
and
push
js
pop
pop
jle
in
xlat
pop
subb
bound
xchg
jns
fwait
mov
jl
in
pusha
popa
cltd
aad
mov
in
xchg
xchg
mov
out
xchg
xor
pop
je
cmp
popf
mov
xchg
pop
mov
mov
cwtl
jg
mov
sub
cmp
adc
out
lods
mov
cmpsl
ja
aad
cmp
scas
xor
repnz
mov
into
sbb
mov
in
enter
sahf
lock
loopne
cli
and
pop
das
repnz
lods
and
sahf
adc
in
aaa
fwait
outsl
mov
push
ljmp
inc
lds
jmp
cmp
lret
das
push
add
adc
stc
jecxz
pusha
scas
mov
dec
pushf
mov
and
sub
mov
sbb
lret
mov
mov
sahf
sbb
aam
sub
mov
les
pop
leave
and
mov
repnz
jp
js
push
mov
in
sub
daa
jp
shrl
sub
jae
aad
adc
mov
mov
mov
sbbb
lock
fs
imul
sbbb
imul
sub
adc
fbld
mov
mov
mov
stc
sub
cmp
mov
jp
push
xchg
sub
ret
addb
test
lret
test
and
jge
iret
add
jno
sub
sbbb
outsl
loope
les
lret
loope
dec
aad
out
push
repz
pop
mov
inc
lods
mov
fisttpll
fmulp
mov
sbb
xor
in
mov
mov
mov
bound
pop
sbb
cmp
jp
data16
push
jns
lret
outsl
subb
cmc
adc
fimuls
fistps
mov
aad
mov
xchg
inc
dec
xchg
out
mov
and
push
jg
jns
outsb
sub
mov
push
pop
xor
test
sbb
xchg
push
pop
jns
sub
xchg
mov
mov
cmp
in
pop
jns
js
cvttps2pi
ljmp
in
mov
inc
add
inc
inc
adc
mov
xchg
push
sbb
or
fdiv
mov
inc
add
pop
icebp
icebp
add
repnz
mov
adc
cld
pop
dec
push
hlt
lahf
pop
adc
sub
int3
scas
jmp
test
icebp
imul
aad
push
inc
stc
in
pop
js
jae
femms
adc
test
out
xchg
pop
jle
icebp
or
lret
in
xchg
mov
lcall
push
xchg
push
pop
jns
add
adc
test
in
inc
push
insb
sub
dec
or
adc
rclb
ljmp
jns
xchg
xchg
xchg
outsl
jp
and
cmp
sbb
jmp
pop
imul
and
and
push
or
jbe
cmp
add
dec
outsb
int
sahf
inc
mov
popl
aas
mov
pop
arpl
add
mov
jle
mov
or
in
xor
iret
dec
fisubrs
in
daa
pop
xchg
pop
jle
jmp
std
sbb
dec
shlb
pop
jecxz
ljmp
mov
add
xlat
adc
and
fwait
lahf
pop
push
test
scas
dec
pop
lret
stos
mov
sbb
mov
repnz
mov
scas
shrl
sbb
or
fimuls
inc
scas
mov
pushf
shl
push
cmp
mov
repnz
mov
xorl
inc
dec
and
dec
pop
xchg
cltd
sti
pop
inc
push
adc
stc
inc
add
lahf
pop
out
dec
lock
jle
in
cmp
in
std
mov
pop
jns
sub
push
pop
aad
cs
loope
lea
adc
jge
loopne
mov
xchg
testb
add
gs
repz
jle
fbstp
rclb
sahf
das
pop
out
or
rsqrtps
dec
les
insb
push
repnz
xchg
sub
xchg
out
andl
jl
lock
cmp
push
jne
inc
or
idivl
in
mov
push
popa
cmp
imul
sbb
fsubl
xor
imul
xlat
cwtl
cld
pop
xchg
push
ficoms
adc
dec
xorl
xchg
push
pop
jns
fdivrl
add
sbb
jl
ficoms
ret
iret
xor
movsb
jns
xchg
push
sbb
aas
inc
leave
std
sbb
push
pop
scas
mov
push
jge
insl
xchg
sahf
pop
jns
das
adc
jle
iret
cmp
lret
das
bound
push
dec
jmp
push
pop
jns
ja
inc
test
dec
loope
pop
xor
fadd
cld
inc
cli
push
jo
ja
xchg
lahf
jb
in
push
ss
adc
add
xor
xchg
push
pop
pop
adc
movb
cmp
sbb
adc
test
idivl
in
in
push
dec
dec
clc
and
push
leave
cld
lcall
mov
push
cmpsb
loop
int3
outsb
sbb
xor
fwait
jl
enter
test
and
mov
pop
jl
or
mov
sbb
inc
adc
jbe
shl
jns
xchg
mull
hlt
lock
jns
mov
mov
popa
insl
cltd
call
in
lock
cltd
jg
sahf
int
push
xchg
fstpt
in
xor
mov
xlat
push
pop
sub
stc
in
pop
insb
push
xor
push
jle
in
pop
jle
cmp
paddsw
xchg
mov
cld
jnp
imulb
jmp
pop
aad
stos
jp
sahf
jge
lret
xor
inc
xchg
cmc
mov
xchg
aaa
cmpsb
stc
mov
js
and
andb
aaa
jne
jns
cltd
repnz
mov
xlat
push
push
out
jns
push
push
lret
das
mov
cltd
scas
out
movsb
and
cld
repnz
lock
sbb
jp
lret
popa
mov
mov
add
inc
popf
adc
arpl
xor
addr16
fwait
xor
sti
mov
push
ret
sbb
cld
push
cmp
fdivrp
test
aas
test
scas
mov
jae
jo
jbe
int3
xchg
jnp
mov
out
enter
or
iret
sbb
lret
das
mov
ds
push
pop
repz
cli
jns
das
mov
cmp
outsl
pop
in
bound
push
jl
ss
cmp
enter
lret
das
cli
sub
ja
test
iret
xchg
lcall
jmp
sub
and
pop
jns
xchg
mov
test
mov
push
movsl
sub
adc
lods
adc
xor
movsb
push
add
aas
aaa
sub
repnz
mov
pop
and
mov
outsb
sub
mov
aaa
inc
jo
and
sar
ror
adc
lds
push
faddp
xchg
or
mov
sub
xchg
repnz
pop
dec
or
in
cwtl
or
adc
mov
mov
xchg
push
popa
mov
mov
stos
xchg
push
pop
jns
aam
and
cwtl
std
test
repnz
push
or
xchg
xor
inc
pop
in
aaa
nop
jmp
cmpb
push
or
add
inc
xor
or
sti
pop
jl
push
pop
jns
add
push
cmp
outsb
mov
xchg
fs
sbb
lods
lcall
sti
adc
push
scas
mov
push
pop
ss
stc
popf
xor
or
stos
out
xchg
std
negb
or
mov
lret
mov
mov
imul
push
ds
jb
sub
in
push
loope
bound
clc
xlat
lret
jg
sti
xchg
sti
ret
loope
jp
addb
fsubrl
mov
xchg
xor
sti
xchg
int3
loop
add
add
dec
or
mov
in
mov
jbe
and
jnp
xchg
dec
jns
inc
cld
test
mov
aam
lock
pop
stc
repnz
cld
xchg
sbb
out
fwait
mov
repnz
lock
test
or
inc
sub
lret
push
insl
ss
push
jle
orb
mov
lret
sub
enter
xor
repz
aam
arpl
add
ljmp
lods
shl
inc
stc
in
jg
pop
mov
xor
scas
stos
lods
mov
pop
jle
xor
enter
clc
aas
push
pop
test
sarb
adc
push
or
inc
inc
scas
pop
inc
mov
or
aas
jmp
jae
inc
push
add
push
pop
inc
mov
and
aaa
loope
mov
cmovnp
cmp
sub
mov
or
cmp
roll
adc
fld
cld
xor
ja
mov
push
cmp
ss
sub
or
loope
add
lds
mov
jbe
imul
stos
mov
in
cwtl
jle
in
leave
nop
pop
xchg
stos
call
out
mov
and
lea
outsl
pop
jae
jle
push
pop
jns
xchg
ret
jnp
jo
xor
repnz
mov
jmp
xlat
test
stc
lret
inc
in
push
psllq
daa
adc
faddp
clc
enter
pop
sbb
sarl
inc
pop
repnz
push
enter
mov
push
mov
and
add
jns
lods
mov
clc
sbb
xchg
inc
outsl
test
pop
mov
push
mov
or
les
adc
icebp
dec
xchg
jo
xchg
cmp
mov
lret
add
fninit
jl
mov
add
int
or
popa
fmuls
jnp
bound
adc
adc
jb
pop
mov
sbb
in
xlat
lret
gs
push
enter
or
xchg
ds
rcll
cmp
imul
cmp
outsb
popf
pop
jge
lock
sti
dec
popf
dec
fbstp
adc
fcmovbe
stos
mov
dec
cld
sbb
pop
xor
mov
lret
sbb
clc
pop
pop
fisubrl
jge
in
das
sti
movsl
add
mov
xchg
or
in
popa
jl
clc
mov
push
bound
mov
jns
dec
movsb
icebp
or
push
fmulp
mov
bound
hlt
cmpsl
iret
inc
jle
in
cld
add
adc
dec
jbe
xor
stc
in
pop
lret
aam
jge
mov
in
pop
jle
xchg
pop
xchg
aas
push
add
mov
push
stc
mov
dec
out
adc
pop
jns
xchg
repnz
jl
xlat
loope
ja
fbld
push
fwait
ret
and
or
mov
cmp
mov
stc
in
sub
push
in
xchg
jns
pop
test
mov
jns
jecxz
mov
push
mov
aas
sbb
fldenv
push
pop
pusha
or
mov
sbb
daa
loop
push
shl
lret
lods
sub
xchg
push
or
pop
jno
jle
nop
mov
push
pop
dec
test
add
mov
jns
cld
repnz
mov
or
ret
movsl
test
dec
ret
cld
repnz
das
mov
cmp
fs
enter
lds
js
cwtl
mov
scas
mov
push
outsl
rorl
dec
in
int
sbb
cltd
and
das
inc
jne
sbbl
pop
jmp
jl
loope
jg
jae
push
pop
jns
adc
cld
lock
pop
jns
push
test
fwait
ja
sbbb
jmp
stc
or
in
in
and
cli
js
ror
sbb
inc
jns
xchg
push
xor
lock
dec
xor
mov
mov
mov
pushf
movsl
lods
mov
sbb
jb
into
pop
out
decb
std
push
and
sub
in
fdivrp
enter
fwait
jle
aam
insl
add
scas
mov
add
mov
scas
mov
loopne
xchg
loope
pop
cltd
arpl
and
pop
sti
enter
mov
xor
or
and
dec
out
ret
jmp
data16
mov
sbb
mov
pop
cmp
dec
rorb
lods
add
adc
in
jg
add
inc
sub
scas
subb
xchg
pop
jle
mov
dec
rol
sub
jge
insl
inc
mov
sub
and
mov
dec
mov
repnz
mov
cld
jp
mov
ret
lds
xor
repnz
std
stc
fadds
push
sbb
mov
sub
mov
pushf
inc
mov
adc
sub
jae
mov
pop
sbb
jle
in
add
add
add
jge
fnsetpm(287
out
xchg
pop
dec
add
inc
fwait
sti
in
mov
add
aaa
aam
in
xor
jb
std
jno
idiv
cmp
addr16
lcall
lret
mov
adc
fiaddl
dec
xchg
lret
das
mov
jne
std
add
mov
fsubs
iret
daa
inc
popf
ja
out
fwait
mov
les
pop
pop
xchg
pop
repnz
adc
filds
imulb
mov
cmp
rcll
cmp
jmp
jp
or
xor
inc
inc
xchg
repz
pop
dec
pop
sub
xchg
pusha
fidivrs
lahf
pop
rorl
and
pop
ds
or
add
cmp
jb
jno
jne
int3
add
fwait
aad
xlat
pop
mov
inc
test
xchg
pop
jle
jg
mov
sub
xchg
dec
out
fistpll
imul
adc
jl
repnz
and
js
push
dec
cmp
sub
imul
pushf
dec
stos
fs
into
popl
mov
jge
inc
cld
or
and
pushf
xchg
push
fimuls
test
mov
cmpsb
stos
push
pop
jns
xor
mov
pop
leave
cmp
movsl
icebp
xchg
xchg
sbb
sahf
test
mov
mov
jnp
pop
jns
or
pop
jecxz
sarb
repnz
pop
pop
hlt
shrb
sub
testb
inc
ds
and
mov
xlat
stos
cmp
push
movb
adc
or
pop
cmp
leave
inc
and
daa
sbb
mov
bound
outsl
xchg
rcrb
xor
cmp
dec
shlb
stos
fldt
ja
sub
rorl
lret
mov
scas
mov
and
pop
shlb
imul
and
movsb
jmp
cmc
mov
and
or
and
pop
mov
push
scas
sbb
push
xchg
mov
mov
pop
fstps
sbb
in
cmpsb
fsubrl
nop
cmp
outsb
sbb
sbb
scas
push
sub
cwtl
testb
xor
and
into
sahf
sbbb
test
jle
in
xor
imulb
orl
xchg
pop
stc
fs
stos
inc
xchg
cmp
les
pop
jle
inc
mov
data16
shlb
ds
lret
dec
jge
mov
arpl
sbb
mov
pop
hlt
cmp
xlat
ret
mov
jp
jle
inc
fsubrl
movsb
add
stos
repnz
das
mov
jbe
cmp
in
add
lea
cmp
lret
mov
jbe
pop
sbb
jns
stos
jns
pop
push
dec
adc
ds
gs
jne
add
mov
bound
inc
mov
rorb
jg
inc
push
add
movsb
pop
in
into
jns
rclb
lods
mov
xor
add
adcl
pop
inc
xor
repnz
es
mov
ds
sbb
cmp
aam
sub
sub
and
xchg
pop
mov
cmp
mov
jge
movsb
push
mov
jle
in
pop
add
cli
enter
push
jle
in
js
jle
sbb
inc
dec
aaa
stc
in
pop
cli
mov
pop
imul
aaa
fsubl
pushf
lds
ficoml
cmp
jg
xchg
inc
cmc
cltd
adc
or
xchg
pop
jle
push
pop
daa
addr16
dec
cmp
inc
jmp
mov
cmp
xlat
stos
sbbl
push
mov
jl
mov
mov
test
ret
test
js
imul
ds
sbb
sub
sub
ds
loop
lea
addr16
jg
mov
pushf
jl
push
stc
in
or
div
mov
xchg
ja
add
ret
cwtl
mov
enter
pop
mov
ret
cmpsb
add
xor
sub
xchg
loop
xlat
jno
dec
or
cmp
mov
cmp
call
mov
dec
ret
dec
or
scas
repnz
das
jmp
iret
jp
mov
test
cwtl
lret
das
mov
mov
pop
xchg
mov
lahf
popf
cmp
jno
icebp
cmp
movsb
int
popf
fucomp
mov
enter
push
movsb
ret
mov
cmp
das
mov
inc
test
sbb
orl
push
pop
cmc
xlat
popa
adc
cs
testl
cmp
pusha
inc
jge
pop
mov
mov
in
das
inc
adc
icebp
rcr
das
push
mov
das
inc
outsb
and
lods
movsb
cmpsl
cli
lret
jl
xor
and
sbb
repnz
das
mov
lods
push
das
pop
pusha
push
loope
das
mov
movsl
adc
pop
push
lahf
jl
xor
cld
repnz
popa
jns
xchg
jmp
add
xchg
arpl
cmp
das
mov
jge
jno
mov
lock
mov
mov
sahf
xorl
push
pop
repnz
sub
stc
repnz
das
imul
pop
mov
mov
jbe
and
sbb
inc
jl
fldenv
add
popa
jge
in
xorl
in
movl
mov
aaa
outsl
xor
sub
sti
addr16
dec
cmovnp
scas
mov
cmp
addr16
lods
les
mov
lret
fwait
in
push
lds
sahf
stc
mov
mov
or
jns
xchg
idivl
inc
es
test
aam
fists
mov
mov
jecxz
ljmp
enter
fadds
lods
dec
inc
stc
in
inc
mov
test
call
xchg
pop
jle
add
cld
test
pushf
das
ds
mov
pop
adc
xchg
repnz
int3
ret
and
mov
lret
das
mov
es
pop
xor
push
testl
fstpt
sub
repz
jns
or
lret
arpl
fcmove
push
push
add
nop
xchg
data16
cld
repnz
das
enter
push
jg
jnp
enter
icebp
sub
pop
lods
rclb
jmp
stos
jmp
inc
out
gs
jns
xchg
push
sub
inc
sub
xchg
xchg
push
pop
cmpsl
pop
mov
sahf
pop
inc
xor
popf
mov
or
jge
in
test
and
dec
mov
sub
lcall
or
lret
mov
fsubr
sbb
sti
mov
mov
and
cmp
adc
stos
mov
cld
repnz
mov
dec
imul
sarb
cmp
lret
testb
inc
sbb
cmp
and
and
aas
test
imul
cld
repnz
mov
and
lock
mov
sbb
lret
mov
out
fdivs
lcall
sub
add
aaa
push
add
repnz
stos
lods
lret
or
sbb
add
jbe
mov
scas
cmc
hlt
and
xchg
dec
inc
xorl
sub
mov
jmp
mov
and
lods
fmull
dec
nop
jno
xor
in
pop
sbb
dec
js
add
and
pop
jle
pop
aaa
add
push
sbb
mov
push
adc
orl
sbb
sub
popa
ficomps
sti
dec
or
dec
mov
in
push
add
push
aam
push
pop
in
dec
xor
adc
stc
add
push
fs
repnz
out
addb
mov
jne
lret
mov
dec
jns
xchg
addl
mov
adc
sub
adc
repnz
xchg
ja
sbb
xlat
jbe
mov
jmp
dec
nop
cs
inc
imul
or
jle
out
add
inc
cmp
and
call
adcb
pop
jge
push
jge
xlat
push
mov
scas
dec
fadds
stc
in
sub
adc
stos
push
popf
sar
repnz
mov
dec
imul
push
or
or
in
das
mov
pop
lods
inc
negb
pop
mov
cwtl
je
push
mov
or
cld
adc
mov
cltd
lods
dec
xchg
fimuls
out
sbb
repnz
push
scas
adc
mov
push
nopl
xchg
push
insl
sbb
lret
leave
enter
adc
insl
lock
and
lcall
sbb
ret
das
mov
or
push
pop
leave
repz
fsubrl
call
xchg
adc
dec
xchg
pop
jge
lods
adc
inc
add
xchg
int3
mov
pop
jle
in
clc
xchg
fwait
pop
xchg
mov
push
bnd
repnz
push
popa
push
sbbl
lret
das
ljmp
sbb
mov
insb
cmpsb
lret
mov
hlt
nop
insb
xor
scas
mov
sbb
xor
cmp
mov
lret
js
mov
dec
fsubrs
sahf
mov
push
cmpsl
shrl
mov
xor
xchg
mov
mov
repnz
mov
dec
fisubrs
aaa
mov
insl
js
das
mov
push
inc
out
cltd
imul
ds
mov
dec
lods
jno
push
add
movsl
add
daa
fstpt
daa
faddl
es
jl
pop
repnz
inc
hlt
sahf
mov
movsl
mov
fimuls
cmp
xchg
adc
je
repnz
and
push
testb
adc
mov
sub
icebp
in
sub
mov
xchg
es
lret
fildll
andl
ds
repz
enter
movsl
iret
pop
pusha
mov
fsts
jg
pop
jns
mov
outsl
movsb
popa
pop
and
jecxz
jle
in
xchg
xor
cmp
lea
sahf
cmpsb
repz
enter
pop
je
mov
fnstenv
cmp
stc
in
lcall
lock
and
jns
mov
add
xchg
pop
jle
mov
mov
and
mov
stc
popf
add
mov
nop
rcl
imul
cld
repnz
jne
iret
rorl
sbb
xchg
dec
out
jp
rolb
mov
in
or
sbb
jo
bound
jb
in
xchg
cmp
mov
fldt
in
mull
jae
and
into
popa
cmp
pushf
movsb
xchg
mov
inc
inc
pop
hlt
push
cmpsl
jb
imul
add
rclb
mov
xchg
sbb
xchg
enter
jle
in
ja
sbb
lcall
stc
add
repnz
jae
aaa
sub
pushf
mov
mov
out
int
lret
das
pushl
insl
sbb
movsb
enter
and
cmp
pop
sub
stc
divl
or
xchg
adc
xchg
mov
movsl
cmpsl
std
popf
lock
enter
repnz
inc
xacquire
cli
pop
fldcw
ja
ja
dec
aaa
adc
in
push
scas
lods
out
add
movsb
mov
xchg
pop
jle
sbb
sbb
gs
ja
jle
in
cltd
pusha
xor
cmp
and
and
rclb
jg
scas
mov
or
repnz
mov
icebp
scas
mov
pop
pop
jnp
or
scas
cli
movsl
cmp
mov
dec
xchg
or
mov
loopne
repnz
sarb
cmp
call
push
jmp
or
subl
mov
mov
dec
pusha
jecxz
xchg
mul
or
pushw
mov
mov
divl
inc
sbb
stc
in
inc
push
nop
enter
or
xor
subb
push
xlat
mov
jl
notl
jno
push
int3
into
not
les
icebp
enter
pushf
lcall
mov
mov
pop
movsl
test
aas
cmp
push
shr
ja
mov
mov
loopne
cmc
jb
out
sub
cli
push
je
pop
cmp
lret
mov
lods
les
inc
cmp
jno
insl
orb
jae
cmpsl
xor
in
daa
roll
pop
sbb
stc
ret
lods
lods
inc
jle
les
mov
hlt
push
inc
push
pop
jns
or
mov
inc
cmpsb
xchg
lret
xchg
xchg
or
adc
in
pop
jle
popa
in
push
cmpl
sarl
xchg
jnp
movsb
pop
mulb
pop
jle
in
mov
mov
pusha
push
push
pushf
jle
in
mov
arpl
fbld
jo
xchg
pop
pop
mov
cmp
cld
cmp
pushf
mov
outsl
stc
in
addr16
out
mov
mov
sbb
test
repz
ljmp
je
repnz
clc
les
jl
mov
das
call
scas
lcall
scas
pusha
dec
das
mov
pop
sub
inc
andb
mov
stos
dec
cmp
mov
fcmove
bound
adc
inc
xchg
pavgb
enter
dec
int
fdivl
and
xchg
lock
das
mov
jnp
mov
cmp
imul
xor
cli
add
jns
lret
aas
neg
push
pop
jge
popa
inc
adc
in
pop
mov
dec
popa
adcl
in
or
add
xor
dec
icebp
xchg
xchg
push
pop
jecxz
mov
jbe,pt
scas
mov
sbb
sub
xchg
mov
lret
mov
sub
dec
outsl
ds
sub
insl
fwait
pop
push
insb
sbb
dec
jmp
out
filds
pop
out
in
pop
jge
fdivrs
scas
sub
addr16
rcl
xchg
pop
pop
fdivrl
jmp
cmp
ds
adc
mov
imul
das
ret
and
fxch
stc
arpl
lret
inc
mov
mov
mov
dec
jle
cld
mov
dec
leave
mov
in
jo
jle
in
sub
xor
or
add
xchg
pop
sbb
ffree
sub
notl
insb
enter
rorl
iret
icebp
push
bnd
sbb
pop
dec
fnsave
and
enter
repnz
rolb
aad
sub
jno
pop
lods
lret
mov
mov
cmp
mov
test
adc
cmc
sbb
adc
mov
sub
je
mov
test
repnz
and
lock
fldenv
inc
iret
outsl
mov
aad
xchg
jg
js
repz
cmpsl
or
mov
jae
mov
cmpsl
jb
stos
inc
repnz
dec
xchg
pop
fpatan
bound
xchg
pop
fistpll
icebp
push
scas
mov
jne,pt
scas
xor
imul
repnz
xchg
xchg
or
push
ljmp
mov
mov
inc
cmpsb
test
test
lret
cmp
push
jl
maskmovq
sub
xlat
or
pop
inc
sub
lea
push
inc
out
shrl
mov
inc
sub
daa
test
out
pop
ds
jmp
cmp
enter
add
mov
scas
mov
jp
and
sub
vpshlw
in
xchg
sub
mov
sbb
dec
adc
fldenv
add
int
test
xchg
push
arpl
push
mov
mov
pushf
icebp
shrb
pop
jns
xchg
push
cmpsl
add
idiv
test
aaa
addr16
pop
pop
aad
push
xchg
mov
dec
nop
ds
push
lods
imul
sbb
add
psubq
imull
into
sbb
enter
test
and
lds
jnp
or
sbb
or
and
cs
mov
bound
mov
mov
repnz
iret
jo
cmc
xlat
ret
fucompp
jne
stc
rorl
rclb
mov
das
mov
mov
sub
xor
mov
popf
dec
les
leave
jecxz
sub
jo
cld
repnz
das
fadd
popa
pop
pop
stos
daa
sbb
faddp
inc
mov
lahf
movsl
mov
sub
fsubrp
xor
sub
mov
loop
push
pxor
leave
in
push
pop
inc
fildll
add
lds
xchg
push
pop
jns
add
es
mov
mov
ret
out
or
or
sbb
fnstsw
sub
push
fcomps
stc
in
repnz
add
xchg
stos
mov
jo
sbb
pop
js
xchg
pop
sub
outsb
out
in
mov
push
ficomps
inc
pop
movsb
push
dec
shrb
pushf
stc
inc
pop
jns
iret
int
fcoml
cld
xor
aad
stc
in
jg
leave
inc
clc
movsl
repnz
push
in
adc
cli
iret
es
xor
fisttpl
jb
add
and
push
shlb
test
inc
cmpsl
jne
jle
jl
jmp
enter
adcl
jmp
xor
cs
and
pop
jle
outsb
pop
and
push
jecxz
decl
cwtl
pop
cmp
jne
hlt
add
lods
jle
jg
mov
xchg
mov
mov
dec
push
in
das
sub
inc
out
and
xor
inc
and
push
fwait
jp
insl
xor
lret
push
adc
imul
movsl
fdivr
pop
stc
repnz
adc
in
adc
mov
dec
xorl
and
in
adc
daa
sahf
sub
dec
xchg
cs
mov
lods
ror
sarl
outsl
dec
or
lahf
hlt
fcomps
sub
test
fidivl
loop
sub
scas
int
call
into
sbb
dec
mov
aam
cmp
mov
repnz
ret
jmp
add
add
or
cmp
dec
stc
in
ds
xchg
call
and
jecxz
ret
mov
aaa
xchg
push
pop
jns
dec
pop
rcrl
adc
pop
cs
cmp
in
dec
out
rorb
out
in
cld
or
mov
lods
ja
aam
mov
stos
mov
sahf
fisubrs
loopne
repnz
das
pop
repz
cltd
jb
aas
mov
rolb
add
and
shr
imul
pop
jns
xchg
add
loope
test
inc
hlt
movsb
xchg
jns
xchg
push
das
stos
mov
scas
sub
ja
in
push
pop
fcmovnbe
inc
into
inc
xor
popf
repz
push
pop
jns
cli
xor
cmp
lea
lods
sbb
in
jb
lods
repz
adc
hlt
repnz
mov
sbb
test
das
mov
jnp
scas
pop
in
arpl
push
jns
jge
jne
jo
mov
dec
aas
lcall
and
pop
dec
repnz
daa
rorl
push
call
int
lret
mov
sbbl
leave
add
sbb
push
out
push
pop
jns
inc
ficompl
cmp
maxps
in
cmp
cmc
jbe
jge
pop
shll
mov
xor
adc
jle
out
mov
repnz
das
ret
mov
xchg
sahf
mov
mov
xchg
addr16
jge
jmp
rol
or
stc
in
sbb
in
or
mov
lea
xor
dec
test
nop
adc
pop
or
mov
push
mov
inc
mov
in
cwtl
lret
cmpsl
jnp
clc
popa
leave
mov
repnz
jno
cltd
lret
aam
inc
cmpsl
dec
outsb
inc
test
xchg
dec
and
jge
out
mov
mov
repnz
das
pop
xor
mov
xor
or
das
mov
sti
xor
out
enter
ds
jae
mov
test
lock
clc
and
in
xor
sahf
mov
mov
mov
cmpsl
sub
enter
pop
fcoms
aas
scas
mov
inc
test
imul
sub
mov
pusha
dec
shlb
sub
out
cmpl
inc
aas
stc
loope
jb
push
sub
cmp
mov
cltd
js
jns
push
push
shlb
repnz
les
xor
lret
mov
cmp
lea
lods
mov
test
push
out
imul
repnz
mov
pop
scas
leave
cmp
clc
pop
aaa
lret
mov
sbb
and
loopne
push
loope
mov
or
fstpt
mov
cs
aad
dec
or
rclb
add
inc
enter
mov
sub
repnz
adc
cs
cmp
push
xor
jbe
mov
or
jge
out
and
loope
xchg
dec
in
fwait
inc
fs
pop
jns
mov
test
aas
mov
pop
pop
jns
xchg
jns
loope
xchg
inc
jno
loop
mov
push
inc
in
jge
outsb
dec
pop
cmp
jge
and
repnz
jl
test
jae
adc
repnz
inc
xchg
pop
mov
or
mull
push
dec
mov
xlat
fucomip
enter
and
adc
inc
jmp
xchg
andb
xchg
push
pop
jns
adc
enter
mov
imul
and
push
sub
and
out
inc
jge
dec
test
mov
popf
inc
pop
fwait
jbe
mov
insl
mov
fsubrs
adc
mov
pop
imul
lods
aam
and
lret
rol
rcll
cli
push
sbb
cmpb
mov
xchg
daa
sub
mov
and
scas
mov
fs
sar
push
lret
repnz
sub
push
mov
pop
js
aaa
dec
or
lock
sarl
push
push
pop
jns
xlat
popf
cltd
mov
jle
inc
mov
test
xchg
push
jnp
repnz
mov
js
jmp
ret
repnz
movsb
mov
bound
gs
xchg
lret
mov
stos
js
jne
and
out
lods
mov
stc
movsl
scas
dec
insb
icebp
jb
mov
mov
packsswb
notb
aam
loopne
pop
in
das
mov
fisttps
and
jge
out
jno
jge
movsb
inc
lods
adc
repnz
mov
int
pop
loop
pop
mov
enter
repnz
mov
clc
mov
and
pop
ret
sti
push
dec
stos
cmp
jle
inc
fidivrl
insb
out
outsb
sbb
aad
push
jp
xchg
xchg
lods
ja
repnz
or
cmp
lcall
jle
cmpsl
cmp
lret
lods
rorl
iret
push
mov
aas
out
into
dec
cltd
and
rcrl
popa
cmp
cmpsb
es
stos
jg
fists
rolb
rcll
push
stc
in
ret
jae
lock
in
sti
ss
fmuls
das
mov
xchg
cld
xor
xchg
pusha
test
sahf
aad
ds
addr16
and
jbe
xchg
xchg
ja
inc
loopne
out
pop
jbe
notl
popf
xchg
mov
pop
lret
in
jo
mov
or
jnp
insl
cmp
movb
mov
mov
mov
repnz
das
dec
adc
lret
out
sbbl
or
xchg
mov
xor
out
xchg
jmp
jo
notl
mov
out
and
insb
gs
orl
pop
mov
stos
das
lea
push
fildl
xlat
mov
scas
fwait
push
push
gs
inc
int
cwtl
pushf
lret
mov
adc
les
lods
mov
movsl
sub
adc
into
jns
or
movsl
in
mov
xchg
push
pop
nop
jmp
push
imul
adc
setg
fwait
js
add
mov
pop
das
push
pop
jge
out
mov
pop
sahf
jg
adc
and
xchg
pop
aam
mov
mov
mov
or
sub
add
xlat
xchg
jno
mov
psubsb
adc
ja
je
aaa
repnz
icebp
and
pop
and
scas
negl
cmpsl
test
cmp
or
repnz
jbe
adc
mov
sub
lock
fmul
sub
daa
cmp
jmp
add
scas
mov
add
call
sub
repnz
inc
out
lds
mov
xchg
aaa
and
ja
push
lea
shll
pop
jns
pop
repnz
ror
addr16
iret
dec
push
mov
in
jge
and
or
rolb
stos
lahf
in
mov
lret
push
fwait
inc
filds
push
push
movsb
dec
xlat
ret
inc
mov
scas
pop
jle
in
cmp
rcrb
or
jno
ljmp
sub
in
dec
daa
std
fldt
stc
in
pop
into
outsl
or
not
mov
in
pop
jle
aaa
and
enter
jle
mov
xchg
pop
jle
mov
cmp
pop
idivl
jg
enter
shrb
cmp
mov
out
popf
xchg
sbb
sbb
js
cmp
cld
repnz
das
lods
mov
rcrl
test
in
das
mov
sub
int
in
insl
jl
loop
lea
jne
xlat
lods
jns
lods
movsl
rcl
xchg
aaa
lret
leave
fnstsw
inc
push
pop
cmpsl
lahf
pop
ret
ret
sub
inc
jle
in
dec
jno
cmp
or
xor
adc
shll
mov
lret
mov
inc
gs
cmp
xchg
mov
lret
mov
lock
and
pop
cmp
add
push
test
jecxz
mov
pop
clc
xor
stc
in
push
sub
in
mov
fs
sbb
scas
and
mov
outsb
mov
inc
mov
xchg
imul
je
psubusb
fs
rorl
mov
xor
or
lret
das
imul
jp
xchg
mov
repnz
das
mov
xor
in
aad
xor
cld
xor
movsb
jae
mov
bound
and
sbb
jae
inc
push
lods
push
test
sti
mov
xor
mov
dec
dec
lret
mov
cmp
or
cmp
fsubp
in
pop
jmp
test
pop
adc
cmp
dec
test
jl
jne
jne
out
xor
enter
xchg
lea
pop
fwait
and
push
pop
jns
mov
dec
pop
stc
pop
push
adc
aaa
sbb
xchg
xchg
jnp
pop
cltd
dec
mov
aaa
xchg
aaa
add
inc
add
cli
mov
push
pop
jns
test
in
popa
mov
jno
add
mov
xchg
mov
push
sub
push
lret
add
dec
enter
pop
jns
xchg
je
mov
ficoms
jnp
and
loop
lock
movsb
xchg
xchg
xchg
mov
jle
in
xlat
rcl
cmp
ret
jno
or
adc
sbb
pop
lea
je
inc
popf
dec
pop
fld
push
mov
jg
sahf
and
pushf
repz
in
mov
jmp
fwait
mov
jnp
or
mov
insl
lret
inc
xchg
scas
push
cld
repnz
das
mov
cmp
scas
or
test
jp
sbb
pop
lods
push
lods
xor
movsb
xchg
pop
jmp
das
lock
push
mov
cmp
cmp
in
adc
push
xchg
out
es
xor
cmp
test
xchg
pop
pop
mull
pop
jle
orb
cmpsb
xorl
inc
add
test
fstpl
arpl
pop
jge
or
inc
cmpsl
inc
adc
adc
andb
pop
mov
js
lret
lret
repnz
jo
daa
cmp
dec
adc
in
mov
jns
push
inc
cmp
mov
lret
xchg
cmc
aas
ret
stc
ja
xchg
arpl
notl
or
mov
in
pop
jle
adc
ja
sbbb
push
pop
mov
pop
lret
lcall
aam
repnz
jp
or
xor
cmpsb
jge
sub
push
mov
fbstp
pop
jns
call
xchg
and
xchg
and
aaa
cmpsl
out
es
add
lock
dec
test
enter
and
pop
push
test
in
cmp
popa
ret
in
push
pop
cmp
mov
adc
xchg
push
pop
shl
and
out
enter
les
sbb
or
leave
mov
mov
in
push
add
int
insl
jg
int3
mov
jge
and
jg
scas
insl
and
popa
outsl
fbld
add
pop
mov
or
cmp
mov
fisubrs
mov
fisubl
xor
inc
mov
adc
stos
xchg
dec
fs
fs
imul
aas
test
mov
call
cld
repnz
add
aad
cmp
out
das
divb
jecxz
inc
sub
or
lcall
jno
ret
test
dec
xchg
push
pop
jns
mov
sub
mov
or
xchg
push
mov
in
jmp
sahf
shll
mov
push
scas
out
add
enter
sub
aaa
fsts
mov
aad
sub
imul
add
jp
mov
mov
mov
bound
cmp
xchg
sub
das
xchg
jl
daa
jbe
xchg
idivb
popf
jnp
xor
lret
mov
xor
jl
jl
aaa
cmpsb
ds
jmp
outsl
xchg
in
mov
std
jmp
push
dec
sbb
mov
adc
jns
xchg
push
leave
xor
call
sbb
in
push
pop
dec
dec
push
mov
push
pop
jns
loop
leave
incb
aam
sbb
jns
xchg
shll
js
mov
pop
jns
xchg
imul
ss
xchg
xchg
jg
stc
and
mov
pop
rcr
adc
stc
ficoml
jmp
bound
sti
enter
sbb
cwtl
jge
movsl
mov
mov
gs
lods
scas
sbb
sub
and
arpl
mov
ljmp
sti
lds
sahf
pop
js
inc
jns
addr16
jns
xchg
mov
lock
jb
pop
nop
mov
in
push
pop
sub
and
loop
push
push
ljmp
jns
jnp
sub
mov
xor
and
xor
push
jg
movl
xchg
dec
mov
xchg
loop
sub
inc
mov
sub
ret
jns
repz
rolb
mov
and
sbb
pop
ror
sub
aaa
mov
sahf
pop
js
ds
scas
mov
jbe
rcll
sub
lret
testl
inc
pop
stc
repnz
fdiv
mov
fs
inc
movsb
mov
xchg
jg
cs
xrelease
jno
cmpsl
hlt
jge
push
mov
cltd
push
sbb
popf
in
aaa
mov
stos
push
es
out
jmp
xchg
push
pop
jns
xchg
dec
lods
adc
mov
mov
jns
cltd
adc
mov
xor
sbb
sub
cmp
and
cmp
clc
repnz
adc
dec
xor
mov
fisttpl
or
test
xor
pop
mov
adc
stc
notl
cwtl
adc
jne
in
stc
in
pop
inc
imul
or
je
mov
xor
imul
or
mov
dec
inc
pop
push
ss
mov
sahf
add
int
sub
xchg
cld
repnz
das
inc
push
arpl
cwtl
sub
xchg
and
in
nop
movb
movsl
call
in
push
fdivrp
mov
mov
push
shl
shll
or
faddl
dec
int
decl
test
xlat
je
xchg
jg
xchg
sti
mov
test
jle
sub
mov
ret
dec
dec
add
pop
jns
jmp
jg
ret
shlb
in
push
in
xor
add
mov
pop
dec
jecxz
push
cld
clc
std
adc
inc
pop
jns
xchg
mov
cs
out
enter
lret
call
cmc
repnz
jg
lret
inc
and
xor
and
outsb
pop
xchg
das
mov
xor
jo
dec
lret
mov
pop
imul
pop
mov
mov
out
mov
mov
adc
mov
adc
mov
repnz
bound
cld
out
jmp
jge
adc
xchg
xchg
and
shll
xor
scas
mov
hlt
fsubl
mov
lods
cld
repnz
and
xlat
xchg
movb
jno
repnz
das
mov
sbb
mov
mov
jmp
hlt
sub
scas
mov
adc
mov
fiaddl
enter
pop
fmulp
xor
jns
loopne
test
dec
adc
or
cmc
xchg
add
mov
call
repnz
out
sbb
adc
and
lock
lcall
pop
inc
sub
pop
xchg
add
in
into
call
cld
jnp
lret
cmc
sbb
push
pop
pop
notl
xor
lret
das
mov
jg
icebp
jg
jmp
sahf
fimuls
stc
dec
cmpl
movl
xchg
push
xchg
jne
push
add
imul
jnp
xchg
pop
jle
and
shll
mov
stos
roll
stc
in
xchg
or
decb
dec
stc
repnz
mov
repnz
pop
iret
lods
jp
xor
imul
cmp
mov
push
imul
xor
cmp
sbb
scas
mov
das
movsl
nop
pop
and
mov
sub
adc
mov
outsb
mov
movsl
psrad
daa
xchg
mov
daa
sarb
jns
call
into
xchg
sbbl
jns
test
lds
mov
mov
into
in
jns
xchg
push
insl
int
test
mov
xchg
popa
incb
shlb
push
loope
sub
loopne
add
lahf
mov
push
aad
pusha
pop
cli
fdivrl
xchg
aaa
push
or
adc
add
pop
mov
adc
cmpl
lods
mov
pusha
fs
movsl
mov
inc
fldt
jmp
call
xchg
jg
inc
push
lods
dec
insl
test
mov
xor
in
pop
jle
shr
inc
inc
pop
jbe
cmpb
insb
mov
aad
insl
xchg
pusha
sub
lahf
arpl
les
or
push
repnz
test
sbb
loope
inc
add
jmp
repnz
test
fistl
insb
mov
xchg
push
mov
cmp
jmp
pop
sbb
or
sbb
sahf
push
lds
jg
fisubs
aad
or
out
andb
mov
arpl
repnz
scas
test
scas
mov
and
adc
in
insl
and
add
cmp
dec
sbb
push
or
ja
pop
cld
xchg
pop
jge
or
popf
lds
inc
or
stc
in
rcrl
lret
rol
xor
mov
sub
hlt
sub
cwtl
js
lret
mov
mov
xchg
pop
push
push
daa
xor
xorl
xchg
ficoms
in
das
pop
mov
xor
jns
mov
xchg
inc
sub
jns
xchg
push
addr16
or
jns
into
cli
scas
add
xchg
push
pop
mov
xor
jg
xchg
push
pop
jns
mov
dec
pop
ja
add
enter
iret
pop
sti
test
hlt
cli
inc
and
adc
mov
jmp
xchg
pop
jle
arpl
cmpsl
jge
or
cltd
inc
ss
jle
in
cs
push
sub
dec
jns
stc
in
leave
xchg
dec
pop
bound
mov
xchg
pop
jbe
cmpsb
push
scas
int
and
mov
pop
jle
cmp
sub
push
adc
and
ud2
mov
call
sub
std
dec
sbbb
loope
push
mov
movsb
sbb
sub
cwtl
lock
stc
fimuls
pop
jns
loop
shlb
int
xlat
and
in
push
jns
xchg
push
dec
inc
outsl
dec
lret
sub
in
push
pop
push
jno
mov
push
mov
lret
aas
sbb
in
into
and
adc
ljmp
mov
outsb
sub
add
mov
sub
movsl
icebp
mov
xchg
das
dec
xchg
dec
sub
adc
inc
cmpl
in
ja
repz
rorb
lock
scas
mov
test
mov
dec
mov
out
xchg
sub
push
loope
das
lds
das
mov
push
cmp
lcall
mov
lahf
iret
mov
dec
out
dec
shrb
jo
cld
repnz
cmpsb
pop
cmpsl
rorl
mov
cli
mov
das
inc
cmp
sti
jae
das
mov
jo
add
jne
scas
sti
mov
filds
aas
add
out
dec
repnz
call
imul
xchg
lret
mov
or
outsb
adc
adc
push
cmp
cmp
test
jno
je
lret
xchg
push
cld
loop
sbb
pop
ja
scas
jno
lret
mov
cmpsb
and
pop
jne
mov
repnz
xor
dec
lcall
jnp
and
jecxz
clc
das
mov
repz
sub
lcall
jg
cld
repnz
jle
mov
int
xchg
xlat
jl
popf
andb
xchg
dec
mov
jmp
jae
fmull
pop
inc
mov
add
and
sbb
cli
js
jae
scas
mov
sbb
push
mov
repnz
pop
out
cmp
push
mov
lahf
cmp
je
push
jbe,pn
sbb
mov
pop
int3
out
sub
mov
jnp
stc
repnz
loopew
jnp
adc
jecxz
insb
or
jg
test
pusha
stos
test
shl
xchg
pop
jle
aaa
dec
cmp
xchg
and
das
mov
adc
cmp
or
dec
cld
repnz
jo
lret
fidivs
es
out
mov
test
and
es
shlb
lret
das
adc
divl
cmp
cmp
and
stos
add
sbb
and
cwtl
or
mov
sarb
inc
inc
mov
mov
lock
lock
jne
fistpll
xor
in
stc
jo
ss
ja
jmp
outsl
and
sbb
sbb
repnz
enter
and
inc
scas
mov
add
test
in
aaa
or
bound
add
lahf
loopne
in
push
sub
mov
mov
xchg
in
push
pop
ss
adc
sbb
jo
xchg
jnp
xchg
push
pop
jns
push
or
jne
out
fucom
sbb
cmp
repnz
mov
stc
in
pop
aad
mov
push
sub
dec
fdivl
ret
icebp
cltd
push
pop
jns
cmpsl
sbb
add
pop
rcrb
xchg
lcall
stc
iret
aas
leave
je
xchg
icebp
dec
popf
jns
xchg
push
in
pop
fldl
adc
push
mov
lods
push
mov
cmc
inc
pop
fwait
jge
cmp
repnz
rolb
ljmp
mov
xor
repnz
push
stc
in
pop
push
jns
das
push
mov
pop
mov
jne
cltd
pavgw
mov
jg
pop
loope
pop
jle
mov
jnp
shr
and
negb
stc
in
fistps
jmp
les
hlt
mov
xor
in
cld
addl
jo
js
leave
xor
xchg
push
ficomps
imul
sub
lods
shrb
es
in
and
jae
mov
mov
mov
clc
cmp
in
push
push
cmp
xchg
mov
scas
xor
in
je
pop
mov
popa
lods
mov
loopne
mov
dec
leave
cs
xchg
mov
mov
ljmp
arpl
mov
inc
fmuls
sbbb
xchg
xor
fadd
lcall
push
scas
mov
aaa
jmp
push
cmp
inc
test
adc
mov
cwtl
jp
js
and
sub
shll
push
pop
js
lret
sub
sbb
sbb
xchg
push
fdivp
stos
fdivrs
lcall
and
jns
mov
into
call
mov
cs
subl
sarb
lret
and
mov
scas
in
add
sub
and
loopne
sbb
popf
mov
repnz
shll
lahf
hlt
and
push
out
adc
addr16
mov
pop
js
inc
lcall
rcrl
xchg
jg
pusha
mov
or
push
in
mov
cs
xchg
fstp
cmp
in
mov
cmp
out
fsubp
xchg
pop
sti
mov
mov
mov
jnp
lock
stc
dec
stos
jo
adc
repz
pop
mov
bound
popa
sbb
ja
jl
fyl2xp1
repnz
das
push
fldl
push
in
xchg
adc
pop
jge
mov
cli
rcrl
ja
xchg
xor
mov
jge
enter
push
mov
test
xor
ds
lret
das
jg
in
sub
inc
jp
push
loop
imul
js
cltd
jno
adc
sub
xchg
push
or
aad
int
out
in
cmp
in
push
pop
xchg
gs
rorb
jns
popa
push
push
cmp
jmp
lret
mov
es
call
lret
das
mov
mov
mov
gs
test
mov
cld
xchg
sub
jp
inc
mov
popa
mov
out
or
repnz
rcrb
xchg
les
jb
loopne
and
inc
out
hlt
jnp
xchg
icebp
sbb
pop
les
cmp
inc
and
xchg
inc
arpl
jmp
sbb
repnz
daa
push
in
mov
stos
outsl
pusha
popa
loope
mov
lret
das
mov
rcrb
cmp
lret
das
mov
incl
lcall
inc
fidivrs
adc
enter
xchg
add
inc
mov
std
aam
outsb
xchg
movsb
sbb
sti
cld
repnz
das
fadd
data16
insl
adc
outsb
and
and
mov
lret
jmp
ds
leave
jl
mov
les
aas
pop
xchg
int
lock
ds
lret
mov
inc
lods
lahf
dec
sub
mov
jg
cmp
mov
stc
in
jnp
sub
dec
inc
call
in
xchg
jo
sub
in
and
pop
push
popa
add
sub
pop
jns
mov
aad
cmp
jns
insl
repnz
and
inc
sbb
scas
mov
lret
mov
pop
xor
mov
xchg
push
sub
addr16
mov
hlt
scas
mov
popf
pop
inc
out
mov
and
adc
imul
scas
cmpsb
inc
pop
or
cmpsl
push
mov
mov
clc
xchg
and
mov
mov
pop
stc
repnz
ja
shll
dec
pop
les
in
jg
pop
nop
push
fcomip
fstl
repnz
in
pop
jle
dec
or
stc
add
test
ds
cs
jne
std
adc
popl
inc
pop
or
enter
mov
adc
loope
stc
notl
push
dec
into
cwtl
adc
jle
in
pop
jle
or
stos
add
push
sti
mov
stc
pop
scas
jl
pusha
dec
push
sub
aad
adc
lods
xor
mov
mov
push
jle
in
pop
add
cmc
imul
xchg
pop
fstps
jnp
sti
xor
ss
xchg
pop
jge
inc
test
adc
push
pop
fcomps
es
enter
jnp
dec
xlat
push
scas
sbb
cld
repnz
das
shl
cmpsb
xchg
mov
test
inc
adc
lret
das
mov
rol
outsl
adcl
xor
xor
push
sub
stc
repnz
mov
cmp
dec
mov
bnd
cmp
fiadds
leave
scas
inc
sbb
iret
out
inc
rolb
inc
push
rep
and
jmp
in
jo
xchg
sub
push
inc
inc
push
pop
mov
jmp
xchg
lcall
repnz
cwtl
out
and
das
ss
sbb
lret
mov
ror
repnz
push
mov
nop
sbb
ljmp
sti
inc
popf
aaa
xchg
aam
cmp
es
adc
add
push
sub
pop
mov
adc
push
push
or
xchg
lods
imul
cmc
lret
mov
scas
pop
aad
sbb
push
xchg
mov
sbb
xchg
adc
arpl
nop
cmp
lret
das
lods
popf
dec
xchg
cld
lods
ret
mov
sub
sub
dec
test
sub
scas
mov
sub
shlb
movsl
stc
in
outsl
mov
leave
xchg
pop
dec
adc
dec
bound
xchg
pop
jle
mov
call
mov
stc
int
cmp
fsubs
lret
scas
mov
inc
mov
inc
clc
xchg
or
xchg
int
stos
ja
scas
mov
jmp
scas
out
test
inc
filds
mov
lds
rcll
or
pop
jle
in
addl
push
mov
repz
in
xchg
push
mov
in
sti
enter
hlt
push
xlat
push
push
ret
and
inc
xchg
jg
cld
inc
in
cs
int
jge
pop
jle
in
lds
insl
or
leave
pop
push
je
js
and
in
repnz
fstps
aad
aaa
cmp
in
pop
hlt
mov
lods
dec
mov
cmc
sub
xchg
inc
jle
mov
fsts
sbb
cwtl
imul
bound
pop
sbb
xchg
jp
jne
adc
pop
lcall
ljmp
jbe
cmp
mov
repnz
cltd
xchg
push
fiadds
add
or
lods
and
and
lock
cltd
stos
iret
xchg
sbb
lret
adc
out
shlb
and
add
pop
scas
mov
dec
mov
ljmp
repnz
jo
lds
mov
movsl
sbb
mov
filds
orb
fldcw
in
pop
sahf
dec
push
fiadds
enter
xor
stc
in
inc
in
xchg
adc
pop
loop
loope
jbe
jecxz
xchg
pop
jle
sbb
lea
sub
hlt
popa
js
bound
mov
fs
jle
in
jecxz
xor
leave
inc
pushf
movsb
sub
repnz
mov
popa
mov
push
and
repnz
das
mov
repz
lret
and
das
mov
fwait
pop
lret
lcall
add
push
pop
in
imul
mov
sbb
pop
push
xchg
sbb
repnz
jbe
sub
jnp
mov
sub
movsl
inc
and
push
mov
stc
bnd
mov
insb
and
rcrl
nop
jns
jns
xchg
scas
ja
push
and
adc
loop
cld
lds
push
mov
jbe
push
mov
inc
xor
das
mov
inc
ror
adcl
and
pushf
lret
insb
inc
pop
dec
cld
repnz
aas
mov
add
cmpb
mov
stc
inc
mov
cwtl
mov
cmp
xor
sub
lret
subb
dec
mov
cmpsl
or
inc
in
jg
add
sahf
mov
xor
mov
outsl
fs
in
pushl
pop
xchg
xchg
out
loop
xor
dec
sbb
mov
gs
mov
mov
arpl
fimuls
in
push
mov
gs
pop
out
in
cld
ret
and
xchg
sbb
and
repnz
das
mov
mov
and
js
int3
ja
das
mov
mov
int3
and
arpl
add
das
mov
xor
test
sub
adc
test
repnz
fwait
mov
jno
cld
imul
movsb
xlat
mov
in
das
mov
fcoms
xor
xor
in
dec
add
fidivl
sti
dec
xchg
xor
or
jmp
repnz
mov
and
cli
out
jle
push
ror
das
mov
xor
mov
inc
addr16
pop
jle
testl
sub
addr16
stos
cmp
or
cld
jnp
xchg
push
imul
std
fwait
jno
jb
push
mov
push
mov
adcl
dec
lret
in
inc
jnp
mov
xor
arpl
xor
fsubl
and
add
push
leave
ret
adc
inc
or
xlat
push
mov
xchg
ljmp
cmp
xchg
jbe
ret
nop
stc
in
pop
sarl
push
xchg
mov
xor
jle
sarb
jo
inc
xchg
or
lret
das
call
push
dec
testl
daa
jg
imul
repnz
arpl
xchg
mov
push
pop
pushf
cltd
push
sub
cmp
jl
mov
repnz
test
sbb
jnp
repnz
sbb
xchg
cmpsb
push
fs
mov
ds
mov
dec
dec
maskmovq
notl
mov
std
int3
scas
mov
xchg
pop
jle
push
jmp
pop
sahf
fisubs
cld
jmp
jle
in
pop
fisubrl
dec
push
leave
xchg
push
jb
shrl
mov
lea
inc
jle
pop
rcr
rorb
jbe
cmp
test
mov
gs
cmp
scas
mov
orl
cmp
fistps
mov
lret
lock
notb
sub
push
and
ds
add
inc
dec
push
cli
or
mov
lea
sub
andb
and
jns
outsl
mov
stos
jg
fnstsw
addr16
icebp
in
xchg
adc
adc
lea
test
jge
dec
push
and
icebp
pusha
mov
xchg
pop
jle
dec
jl
loop
inc
loopne
pop
jle
in
push
stos
out
or
orb
cmp
nop
and
adc
jno
or
dec
push
sub
je
add
test
repnz
mov
fmulp
das
hlt
sub
and
aad
fstpt
scas
mov
sbb
inc
jge
loope
in
mov
cmp
or
mov
repnz
pop
sbb
jae
int3
add
mov
iret
in
aad
daa
pop
pop
clc
ficoms
adc
dec
ljmp
push
popa
push
jo
cld
xchg
enter
pop
jns
jge
mov
lea
in
dec
add
xchg
push
sub
sbb
cs
xor
outsl
dec
ficomps
inc
pop
xchg
sbb
dec
xor
mov
sbb
in
xchg
push
dec
push
xchg
pop
in
and
jmp
jle
addr16
jmp
fsubl
ljmp
test
pop
mov
push
xor
imul
stc
in
jbe
into
je
and
bound
or
in
pop
scas
xchg
jno
inc
inc
add
outsl
mov
daa
mov
cmp
fdivrs
mov
ljmp
arpl
push
add
mov
or
sub
xchg
sub
ljmp
sahf
leave
sub
pop
in
pop
mov
lods
mov
arpl
sti
pusha
jg
cld
repnz
adc
xchg
aad
cld
repnz
das
pusha
daa
mov
movsl
addr16
xor
hlt
enter
aam
push
aas
in
stos
and
lret
mov
dec
mov
dec
das
in
inc
inc
push
sub
push
mov
sub
sub
xchg
xchg
cli
cld
repnz
das
dec
push
inc
inc
mov
cmp
repnz
das
mov
and
mov
and
push
or
das
mov
popa
sbbb
out
inc
mov
jecxz
outsl
or
push
pop
adc
repnz
call
fdiv
sbb
test
lock
mov
out
mov
mov
sbb
lods
enter
fstp
xor
mov
cmp
imul
in
add
cld
gs
jp
in
inc
mov
and
xor
inc
bnd
jge
es
pop
sti
adc
shr
cmp
push
insb
insl
pop
in
mov
jb
mov
xchg
xchg
xor
cs
cld
repnz
das
test
cmp
fldenv
stc
mov
mov
adcl
fistl
sbb
mov
stos
add
push
pop
jns
push
cmp
mov
mov
jbe
std
add
in
scas
mov
xor
imul
clc
adcb
xchg
fidivs
pop
jns
xchg
sub
rcr
mov
jb
xchg
push
sub
or
lahf
cld
add
pop
and
adcb
imul
cmp
add
outsl
and
or
repnz
and
fsubrl
inc
stos
shlb
jp
in
enter
jecxz
int3
jmp
cmp
mov
stos
cltd
add
test
push
push
repnz
pop
out
in
xchg
rcl
sti
data16
mov
sub
mov
lcall
mov
repnz
repnz
js
lret
das
mov
push
lret
in
xchg
xchg
rcll
das
mov
lock
sub
testb
ljmp
fsubrp
fstps
pop
inc
jmp
cld
repnz
das
aaa
mov
and
lcall
mov
sti
lret
add
or
inc
mov
out
loope
and
notb
out
lds
jle
in
stc
pop
push
adc
xor
imul
movsl
or
repnz
inc
add
mov
jbe
repnz
imul
jge
shlb
es
popa
push
sahf
sti
rclb
roll
jb
pop
rol
shrl
mov
leave
and
lock
xchg
xor
jmp
repnz
mov
lock
outsl
xchg
xchg
sub
mov
pop
pop
das
mov
adc
ss
xlat
mov
dec
cld
repnz
or
push
push
and
mov
jcxz
jg
adc
or
cwtl
mov
pop
jns
xchg
sbb
dec
cmpsb
arpl
movb
dec
int
sbb
mov
out
arpl
xchg
aam
hlt
in
mov
test
outsl
push
mov
push
insb
xor
idivb
lret
mov
push
mov
outsl
shrl
scas
mov
and
mov
push
adc
scas
mov
stos
add
data16
jae
neg
mov
mov
leave
sahf
mov
add
mov
inc
scas
cs
or
mov
stc
notl
loopne
jae
jge
sahf
add
add
sbb
dec
adc
scas
mov
sub
cmpsb
fisttpl
test
sub
pop
push
lods
ds
mov
mov
js
lret
mov
or
stc
in
test
xchg
dec
push
xlat
daa
dec
shlb
ret
xchg
dec
push
jae
jle
in
hlt
and
pop
mov
call
cmp
push
lds
lret
sbb
imul
mov
ss
jmp
sbb
pop
jge
imull
push
push
cld
xchg
and
or
jns
call
mov
mov
es
in
push
pop
sub
and
arpl
addr16
pop
sbb
es
xlat
testb
sub
pushf
ds
cmpl
jmp
jle
inc
roll
fists
push
and
mov
pop
jle
in
mov
dec
iret
movsb
lret
cs
inc
mov
jmp
adc
sbb
imul
inc
adc
xchg
in
lock
lock
inc
jecxz
dec
mov
cmp
leave
mov
ds
mov
stc
out
xor
lret
mov
rolb
repnz
jp
push
hlt
cli
cmp
jns
test
push
jmp
scas
push
push
jno
sahf
out
push
lea
test
insb
sbb
lods
xchg
and
dec
fcoms
dec
nop
add
xchg
push
test
test
dec
sbb
nop
fwait
mov
sub
sbb
sub
jp
ret
dec
xor
jno
aaa
xchg
cmpsb
cmp
push
dec
jl
mov
into
outsb
push
in
xchg
push
push
scas
loopne
imul
ret
movsb
inc
jle
aad
ret
xor
lds
pop
pop
jns
cmp
in
out
decb
jg
les
push
lret
aaa
cmc
addr16
repnz
or
and
or
mov
in
das
or
push
fisttps
repnz
sub
fsubr
jae
push
es
fnstcw
push
in
jno
adc
xchg
pop
inc
jmp
cmp
aaa
xchg
sub
je
mov
test
imul
test
daa
lret
ret
das
pusha
aam
dec
inc
pushf
mov
popf
jo
mov
push
pop
jns
adc
jb
in
mov
mov
push
pop
jns
pop
nop
iret
jl
mov
xor
mov
xchg
jg
das
loopne
add
or
and
sbb
jns
push
inc
scas
mov
fsts
mov
daa
and
cmc
enter
cmpsl
loope
dec
cmp
cmp
in
cli
pop
repnz
ds
popf
pop
repnz
mov
dec
pop
dec
dec
xor
mov
mov
mov
dec
repnz
sub
add
andl
sarb
stc
or
push
pop
mov
gs
repnz
rolb
stc
in
or
mov
inc
out
and
outsl
pop
ss
cmpsb
nop
in
fsts
cld
repnz
push
ja
push
xchg
jns
clc
push
stos
cmp
mov
sub
cmpsl
int
sbb
rorb
mov
adc
cmc
cmp
lretw
call
adc
stos
jb
shrb
mov
mov
mov
cli
xchg
in
xchg
iret
das
scas
inc
std
add
fwait
bound
lret
inc
or
ljmp
repnz
cmp
sub
scas
mov
out
mov
sub
sbb
hlt
pop
movsl
out
dec
inc
scas
mov
adc
loope
inc
and
jns
sub
push
fcompl
xchg
push
pop
leave
ret
mov
pop
mov
fs
jmp
jo
andl
push
mov
lds
cmp
repnz
inc
cmpsb
sbb
sub
roll
into
inc
sub
xchg
jg
jns
or
test
and
stc
fistpll
xchg
pop
imul
mov
adc
xlat
dec
int
xchg
sarl
jb
mov
xchg
adc
out
cmp
repnz
das
mov
xchg
sub
xchg
lret
das
mov
push
push
aas
adc
ss
and
das
mov
iret
xchg
sub
inc
fldenv
adc
out
ljmp
dec
stc
xchg
push
pop
jns
call
clc
jno
shll
in
jle
cmp
jp
adc
xor
lret
imul
fsubrs
mov
jge
lea
mov
in
cli
filds
ficompl
mov
jmp
stc
in
pop
lea
mov
jo
or
popf
push
mov
jle
and
lret
sbb
and
inc
cmp
divl
mov
and
push
fiadds
pop
in
mov
push
pushf
add
add
and
in
jae
incb
and
jne
rcll
iret
jns
xchg
push
or
jg
bound
in
push
pop
daa
add
stc
test
xchg
xchg
push
pop
jns
mov
outsb
cmp
pushf
mov
enter
divl
jge
fcoml
push
stc
stos
inc
jns
push
mov
outsl
cmpsb
sub
cmc
in
pop
cmc
scas
cmp
inc
dec
outsb
jmp
repnz
das
jg
mov
sbb
out
sbb
and
mov
push
mov
jns
mov
cmp
jne
jge,pn
sub
jle
in
dec
sub
jp
mov
xchg
pop
inc
sub
es
sub
imul
add
mov
repnz
lock
test
sti
cltd
mov
aaa
cmpb
cld
repnz
sub
ret
sbb
add
pop
xchg
arpl
mov
cltd
aas
out
int3
dec
aas
sub
cmc
mov
fsts
jbe
outsl
scas
add
das
mov
adc
add
sbb
in
dec
sbb
inc
out
lret
adc
add
and
sub
and
push
popa
xchg
pop
xor
pop
stc
in
xlat
sbb
or
push
cmp
mov
shlb
xlat
xor
sbb
mov
hlt
shrb
xor
mov
xchg
das
pushl
lods
push
and
sub
xlat
in
push
stc
mov
cmp
das
rclb
stc
fisttps
sub
inc
fcompl
stc
in
sahf
and
cmpsl
jns
push
mov
sub
in
rorb
js
mov
dec
scas
mov
cmp
jno
loope
xchg
ss
pop
stos
rolb
adc
xchg
push
jle
insl
adc
add
inc
adc
pop
jns
mov
movsb
out
push
sub
ret
fbld
in
xlat
test
lret
jl
add
cmp
jno
fsubs
das
lcall
mov
sti
mov
shl
fstpt
notl
fwait
jmp
add
mov
pop
jecxz
xchg
stos
dec
nop
mov
inc
mov
jns
xchg
ja
iret
xor
cli
ds
xchg
push
pop
pop
mov
mov
int
mov
lahf
pop
sbb
push
pop
jns
sbb
loopne
jp
int3
cmp
in
movsb
jnp
mov
addr16
xchg
cmp
in
mov
jge
add
dec
fmuls
insb
jns
xchg
push
mov
or
outsl
sbb
xchg
push
pop
pop
call
adc
ja
or
cmp
loopne
test
in
mov
in
mov
test
jecxz
jle
lahf
stc
in
pop
mov
jp
hlt
cmpsl
dec
ds
pop
jle
xchg
mov
int3
jno
add
pop
jle
and
ret
jbe
call
ret
das
in
enter
enter
insb
dec
adc
enter
adc
jo
xchg
mov
ds
add
arpl
inc
arpl
push
dec
push
pop
jns
in
mov
sbb
shl
or
xchg
mov
cmp
aam
and
mov
pop
hlt
pop
jns
cmp
jecxz
and
roll
inc
push
imul
aaa
adc
das
mov
inc
repnz
jno
repz
jge
xchg
xchg
loope
test
inc
pop
loop
inc
mov
or
xchg
mov
mov
cmp
cld
repnz
lahf
fwait
xor
or
in
mov
push
leave
lret
das
mov
insl
and
mov
sti
adc
out
add
xor
testl
push
mov
dec
push
dec
gs
push
lret
pop
pop
inc
jnp
and
imul
adc
cmp
jns
jne
or
mov
pop
out
or
and
pop
mov
xor
mov
pop
jns
call
dec
decl
loopne
in
push
xor
lret
xor
out
sub
pop
pop
iret
cmpsb
and
and
cmp
adc
jle
in
daa
jmp
in
rol
sub
xor
scas
jecxz
jp
ss
push
in
pop
jle
inc
in
add
cltd
aad
mov
stc
fs
pop
insb
pop
aaa
mov
je
pop
jns
mov
std
push
pop
dec
and
fstps
mov
sub
pop
jle
adc
addr16
pushf
sbb
xor
sub
adc
xchg
rcl
or
in
inc
dec
ss
sti
pop
jns
loopne
cltd
imul
jle
jne
lret
cmp
pop
std
fbld
fisubrl
inc
js
lret
jle
test
das
push
fsubrp
adc
cmp
scas
mov
xchg
outsb
popf
add
fs
enter
pop
js
in
jg
push
sbb
ljmp
gs
stc
mov
push
xor
rcr
repz
stc
in
mov
cmp
testb
in
scas
xchg
xor
test
lret
xlat
cmc
jl
xchg
pop
jle
push
fsubs
cltd
dec
xor
cmp
jle
enter
xor
add
jle
in
inc
std
jbe
xchg
lock
and
in
pop
mov
fs
pop
fstpt
sub
push
rcrb
pop
arpl
pushf
gs
jecxz
out
mull
mov
addr16
push
call
fists
and
into
xchg
push
fiadds
fcmovnbe
cs
sub
test
jo
scas
into
int
popa
xorl
fiaddl
adc
ret
jp
aad
arpl
sbb
popf
inc
sti
arpl
cld
mov
fs
jg
ds
das
shlb
mov
push
xchg
and
cmp
cli
push
fimull
xrelease
hlt
cs
fsts
incl
inc
cmovb
sub
aas
dec
or
insb
xchg
pop
loopne
lret
and
dec
cmp
pop
push
sbb
repnz
ja
jnp
fwait
adc
jne
test
xchg
into
shlb
sbb
dec
int
mov
pop
dec
sbb
jl
ljmp
inc
xrelease
jge
lret
adc
push
jg
rol
add
jb
rol
add
leave
popa
addl
fs
jae
repnz
sub
outsl
jae
mov
sub
xchg
sub
jle
inc
arpl
inc
adc
jb
adc
cmc
push
popl
inc
jp
lock
pop
jns
cltd
pop
cmc
mov
loopne
cmp
cmp
ror
sarl
mov
lret
dec
sarl
or
push
pop
push
ficomps
js
pusha
jl
xor
xor
sti
hlt
pop
jns
xchg
outsl
and
dec
loop
in
aas
xchg
pop
mov
mov
cld
fisttpl
fcmovne
jmp
pop
in
push
pop
pushf
dec
inc
push
mov
xor
mov
fisttps
leave
xchg
sub
mov
mov
es
stos
xlat
mov
adc
fnsave
inc
outsb
in
inc
push
jle
mov
cld
push
mov
neg
mov
xlat
aam
pop
mov
leave
nop
enter
test
pushf
xchg
cmp
push
je
outsl
mov
rorl
imul
fwait
cmp
push
shr
cmp
ret
hlt
mov
aad
in
add
fists
xchg
jecxz
lahf
add
stc
adcb
jl
dec
lret
ds
enter
push
mov
inc
or
cmpsb
fbld
mov
inc
mov
sbb
adc
stc
in
cmp
mov
push
jl
fldl
xchg
push
pop
pop
outsb
xlat
and
push
pop
adc
movsl
ffreep
movsl
xor
ret
pop
xchg
pop
jle
pop
jmp
mov
cmp
stc
dec
rcrl
stc
in
sub
jp
sbb
gs
in
jbe
addr16
fisubrs
or
dec
repnz
and
dec
dec
push
std
mov
sti
aas
daa
sub
adc
add
out
call
icebp
cmp
jmp
jns
xchg
push
ret
inc
sbb
in
mov
inc
ffree
and
xor
lock
inc
loopne
fs
ja
push
mov
pop
xlat
add
jl
inc
xchg
xor
clc
or
push
and
mov
push
and
stos
inc
scas
jg
cld
repnz
push
pushf
addr16
fsub
rorw
loope
cltd
cmp
ss
inc
adc
dec
insl
inc
jne
add
je
in
das
scas
rcl
dec
cwtl
cmpsl
mov
mov
cld
mov
cli
jl
call
lahf
pop
testb
dec
pop
jle
in
into
add
aam
loop
out
in
aad
stc
in
jge
test
scas
push
jle
sub
sbb
jp
insl
inc
or
or
stc
ja
out
out
imul
xor
push
or
ja
jecxz
stc
mov
jnp
xchg
pop
jle
ja
jg
push
xchg
or
pop
jns
loop
js
pop
dec
sub
mov
in
push
pop
sbb
mov
sub
mull
push
pop
add
dec
jg
icebp
out
lahf
mov
mov
cld
cmp
cli
inc
adc
dec
shll
iret
in
add
push
or
cli
jnp
cld
shll
lret
jbe
cltd
or
fcompl
repnz
das
mov
icebp
jne
sbb
das
mov
mov
dec
xchg
cltd
cmc
mov
in
lahf
mov
jp
in
mov
inc
not
jns
loopne
cmpsl
and
sbb
cwtl
pop
jle
in
divl
arpl
out
xchg
and
fstl
xor
jle
in
inc
push
pop
cmp
mov
repnz
pop
fwait
dec
test
xor
aam
lret
das
xchg
mov
dec
adc
ret
push
je
mov
bound
pop
sahf
mov
lret
sarb
fistps
rcl
cmp
std
dec
jbe
cmp
and
sahf
pop
pop
xor
cmpsl
jo
sub
xchg
insb
repnz
int
sbb
test
push
lret
mov
add
jmp
cmpsb
push
mov
mov
push
fsubs
mov
dec
aaa
pop
repz
cltd
or
lret
aas
jge
jle
inc
push
xchg
outsb
cs
insl
mov
das
mov
das
lds
mov
add
push
imulb
mov
pop
enter
mov
enter
repnz
sbb
push
jno
cmpsb
and
ret
cmp
push
cld
repnz
das
mov
sub
xor
lret
das
mov
cmp
inc
fwait
sbb
imulb
and
xchg
push
pop
jbe
out
inc
fsubs
and
mov
and
loopne
push
loop
xor
std
mov
lret
fbld
dec
push
fldl
repnz
and
mov
ror
negl
cmp
add
in
pop
push
xchg
rcrl
pop
jns
xchg
test
dec
test
sub
cli
dec
jns
xchg
push
pushf
and
cmp
negb
push
pop
jge
xor
mov
mov
push
gs
pop
jle
in
call
ds
or
jle
in
incb
int3
mov
jl
jo
repnz
pop
out
inc
pop
xchg
pop
mov
mov
rcrb
mov
repnz
das
jmp
decl
int
enter
das
mov
add
jns
fisttps
das
mov
sbb
arpl
imul
mov
lret
cmp
std
fs
repnz
adc
rcrb
orl
scas
mov
pop
adc
sete
cld
repnz
cmp
mov
ss
mov
cld
jnp
pop
movsl
fbld
lret
xlat
cmpsb
rcl
add
lret
das
mov
int3
pcmpeqb
das
mov
sbb
scas
cmp
mulb
js
cmp
or
scas
mov
pushf
jnp
pop
add
repnz
sahf
stos
jl
imul
in
mov
into
mov
pop
scas
pop
jns
xchg
mov
mov
push
out
sti
add
push
pop
xor
xor
sti
test
cmp
sub
fimull
in
pop
mov
movsl
dec
cmp
jns
js
aaa
and
stc
cmp
sub
mov
fstps
repnz
fsts
dec
insl
cli
and
jns
arpl
das
mov
aaa
leave
add
aam
dec
cld
repnz
fsts
xor
icebp
push
pop
iret
mov
or
arpl
push
dec
clc
in
lea
ja
adc
in
sub
popf
inc
lea
in
mov
andl
movsl
lods
in
push
pop
aam
push
insl
lret
dec
mov
jns
nop
xchg
xor
out
mov
shrb
dec
inc
out
cmp
imul
mov
xchg
sti
mov
sarl
pop
jns
or
fwait
fcmovbe
lss
enter
rorl
pop
inc
or
push
or
test
mov
mov
xchg
xchg
push
pop
jns
sti
fistps
xchg
lret
daa
xor
add
ja
dec
fstl
dec
mov
imul
xchg
pop
out
pop
je
push
push
loop
mov
lret
das
lcall
pop
add
xchg
adc
test
repnz
jp
ficompl
cmp
cld
repnz
hlt
mov
es
jmp
jne
in
and
mov
outsl
test
repnz
cltd
sbb
xor
or
repnz
das
mov
ror
xor
mov
and
push
inc
cmpsl
orb
lock
fld
daa
pop
pop
mov
ss
cmp
jns
daa
jge
or
enter
push
or
stc
js
jns
mov
cmc
push
xchg
ficompl
pop
xchg
push
ds
xchg
fimull
add
jnp
dec
in
shll
pop
dec
adc
jns
sbb
push
cmp
push
pop
add
cmp
in
xchg
sbb
push
pop
jns
sub
insb
js
mov
fimuls
lea
ret
xchg
lds
jns
xchg
push
sti
mov
test
and
xchg
push
pop
dec
popa
jnp
inc
xchg
loope
test
adc
pop
cmp
pop
ret
adc
push
movsb
xchg
jle
in
and
add
xor
imulb
or
stc
in
pop
xor
sbb
cwtl
pop
mov
pop
jle
xchg
xchg
orb
and
stc
aad
popa
xchg
ja
nop
rolb
in
mov
cmp
mov
cmp
fisttps
int3
cmc
es
cld
repnz
leave
pushf
divb
stc
mov
pop
cli
rorl
mov
sbb
test
repnz
pop
adc
mov
stc
idivl
fidivrs
cmp
fstl
das
cmp
push
in
fdivrs
push
pop
jns
dec
lahf
pushf
pop
in
scas
aas
push
jno
andl
push
jns
xchg
lods
insb
arpl
out
out
mov
stc
daa
js
jl
mov
jle
sub
sti
jns
stc
in
pop
inc
pop
clc
add
sub
cmp
mov
ds
push
mulb
repz
insb
stos
and
lds
mov
insl
mov
out
inc
mov
cmc
push
jne
jge
ret
cmp
jne
test
adc
gs
or
adc
adc
xor
mov
xchg
dec
mov
leave
mov
out
daa
or
sti
mov
mov
out
add
nop
push
xor
insl
cmp
sub
adc
cmp
andb
popa
stos
xchg
out
test
pop
jns
sbb
push
jp
pop
test
in
push
xchg
std
xor
jle
xchg
push
pop
push
mov
cmpsl
aad
inc
pop
push
ficoml
jne
push
sti
xchg
sub
jmp
jo
mov
and
lret
call
lret
rcl
addr16
xchg
sbb
lcall
mov
pusha
adc
imul
mov
xlat
xchg
std
fcoml
loope
jle
and
stc
repnz
das
les
or
mov
xchg
adc
jmp
das
xlat
jnp
xor
push
mov
loopne
test
xchg
push
fisubrs
and
je
fsubrs
jns
popf
jo
orb
in
add
xchg
push
pop
sub
xchg
out
pop
aaa
movsb
pop
loope
inc
push
pop
jns
xchg
jno
push
stc
sub
fsubrp
ljmp
adcl
into
aad
pop
shll
lahf
xchg
popf
adc
je
int
or
jnp
sub
sub
lcall
repnz
mov
jno
fidivrl
xchg
push
mov
ss
sub
xchg
push
pop
lods
ret
sbb
sbb
leave
js
or
jg
pop
jns
inc
jbe
pusha
lods
negb
jmp
stc
in
aaa
subl
test
pop
lds
push
xchg
xor
adc
push
fimuls
xchg
add
repnz
shlb
repz
push
xor
loop
repnz
outsb
jae
iret
bound
push
pop
lret
mov
lods
testl
repnz
lcall
in
test
mov
jne
hlt
mov
adc
insl
popa
fmuls
mov
and
cmp
sbb
dec
inc
testb
lret
fldl
dec
cmp
inc
lret
mov
insb
loopne
mov
push
mov
in
fcoml
into
fcompl
or
aam
rolb
ds
mov
insl
js
mov
inc
fldcw
clc
pop
dec
ljmp
int
lods
pop
gs
lret
push
pop
jns
and
cmpsl
imul
aam
sar
in
cld
sub
in
bound
push
scas
lds
push
lret
sbb
test
jns
xchg
push
mov
pop
cltd
jo
and
cmpsl
leave
and
mov
push
pop
call
adc
mov
push
cld
repnz
jo
std
inc
mov
xchg
push
addr16
shll
adc
cld
repnz
das
jge
adc
pop
inc
xor
scas
stos
aaa
pop
xchg
out
inc
jnp
sbb
scas
mov
or
hlt
dec
jns
jmp
sbb
sbb
pop
xchg
mov
dec
adc
mov
adc
and
push
jb
popa
mov
sti
jnp
lret
aaa
or
out
outsl
pop
pop
inc
cld
inc
xor
movsb
lds
repnz
enter
outsb
sti
andl
das
mov
lret
adc
cltd
sbb
cmp
pop
pop
stc
and
xorl
repnz
cmp
jmp
adc
fisttpl
aad
xor
ret
xchg
fwait
xchg
push
pop
jns
sbb
insb
mov
dec
mov
fs
popa
and
notl
in
pop
test
rcrl
dec
stos
ljmp
das
mov
call
fstps
cld
repnz
ret
sub
cmp
pushf
out
jnp
js
fisttps
push
xor
inc
fidivs
push
mov
stc
in
aam
bnd
lock
xchg
mov
movsl
dec
gs
in
pop
and
dec
test
adc
sbb
xchg
pop
jle
mov
adc
pop
jle
stos
repz
subl
jle
in
and
sbb
push
inc
ret
pop
je
xor
dec
jmp
jnp
enter
addr16
mov
mov
lret
cld
jmp
adc
test
lods
dec
cmp
imul
mov
repz
js
in
mov
mov
repnz
arpl
jno
loopne
out
lcall
jge
arpl
push
add
lret
data16
das
sbb
inc
inc
leave
xor
xchg
test
inc
loope
rclb
lret
das
inc
or
test
pop
mov
cld
in
mov
adc
movsl
scas
out
fs
xor
in
xchg
fldt
jne
repnz
fistl
mov
pop
mov
sub
sbb
sub
push
mov
add
and
jno
ss
sarb
mov
fisttpl
lods
mov
xor
xor
inc
test
das
dec
sub
push
add
xlat
jno
leave
sbb
xchg
pop
jle
lods
in
cwtl
mov
push
incb
repnz
stc
hlt
stc
int3
imul
pop
xor
cld
xor
push
adc
jbe
mov
fucomp
cmpsl
scas
jne
mov
pop
jns
ljmp
nop
int
and
in
pop
jns
cmp
insl
and
pop
stc
loope
sub
fists
sbb
sub
push
pop
outsb
and
stc
shrb
mov
cmpsl
icebp
sub
and
lret
mov
subl
jo
inc
insb
ficomps
pop
mov
cmp
and
push
popf
ja
xchg
push
pop
adc
movb
cmp
pop
jle
sub
xlat
adc
mov
out
add
not
stos
jo
xchg
push
lods
sub
push
jg
in
push
stc
notl
push
lcall
loope
xchg
pop
jle
lods
jnp
fmull
icebp
in
lods
jae
push
mov
xchg
push
pop
jns
or
push
stos
push
out
add
jns
dec
inc
aas
push
test
loopne
out
sub
pop
pop
jns
xchg
inc
fbstp
into
stc
mov
clc
sbb
in
push
pop
popf
movsb
push
or
sub
movsl
sahf
and
icebp
xor
lods
daa
std
in
sahf
stos
xchg
jmp
in
sub
outsb
pop
pop
aaa
mov
lret
das
mov
and
lock
jns
cmp
ret
movsl
xchg
xchg
and
or
sti
add
ficoms
inc
mov
jecxz
cld
xor
clc
ljmp
xchg
leave
inc
inc
jno
lds
jbe
xchg
jg
pop
pushf
adc
pop
lea
push
pop
jle
in
ficompl
adc
icebp
or
xchg
inc
stos
push
jns
sbb
pop
fdivr
mov
repnz
xchg
pop
ja
sarb
aas
arpl
test
inc
mov
mov
imul
xchg
sub
sub
cmpsl
pop
adc
inc
xchg
fs
movsl
xchg
mov
rclb
stc
mov
fisttpll
inc
inc
out
mov
or
lds
mov
cmc
push
pop
das
dec
pop
cli
leave
int
sub
js
pop
lds
stc
in
addr16
pop
cmp
iret
scas
cmp
push
outsb
fstps
aad
mov
and
scas
push
aaa
and
pop
mov
adc
mov
ljmp
lods
mov
xor
lret
insb
jmp
ss
push
fidivrs
and
dec
dec
jl
mov
pop
mov
iret
jge
dec
mov
pop
aas
das
push
cld
repnz
das
add
imul
popl
jge
lret
das
mov
inc
inc
pop
cmp
xchg
xchg
iret
sub
stc
mov
in
ret
repnz
fnstenv
xor
or
scas
xor
lret
das
mov
adc
adc
jae
aas
das
mov
idivl
fsubrl
add
stc
repnz
inc
out
and
cwtl
push
jecxz
jns
fsubl
mov
lds
add
xchg
pop
pop
shlb
jp
popa
mov
sahf
mov
repnz
das
mov
mov
mov
mov
imul
jge
das
mov
outsl
stos
xchg
add
lea
imul
test
loope
call
sti
leave
lret
das
adc
pushf
and
add
repnz
pop
stc
mov
setns
lret
das
mov
sub
shrb
sbb
pop
ret
hlt
adc
das
mov
sub
out
sub
xchg
stc
xor
push
sti
je
adc
mov
xchg
inc
dec
or
sbb
and
xor
xchg
lret
mov
mov
push
imull
scas
mov
stc
inc
shll
popa
in
and
inc
test
push
stos
push
adc
sti
bound
inc
sub
push
dec
pop
sub
jg
divb
rcrl
fdivs
cmp
test
and
in
jg
sti
ret
or
push
push
xchg
mov
lret
das
mov
mov
ret
cmp
enter
mov
add
lahf
jecxz
xchg
mov
and
in
adc
push
lea
inc
gs
mov
xchg
fsubrl
mov
mov
push
xchg
cmp
stos
addr16
scas
xor
inc
pop
xor
scas
sti
repz
lret
mov
test
mov
sub
sub
pop
mov
scas
mov
cltd
add
loope
inc
and
sub
mov
pop
aad
das
ds
aam
jge
add
push
das
mov
bound
xor
jge
lret
push
xchg
mov
pusha
icebp
je
xchg
jbe
xchg
pop
mov
pusha
icebp
mov
jle
xchg
pop
jge
jbe
inc
mov
xchg
mov
push
jecxz
bound
ds
fsubs
add
enter
xchg
ja
gs
sub
and
jb
in
push
pop
or
ret
lea
clc
cltd
xchg
push
pop
jns
mov
sbb
les
cmp
push
pop
jns
pushf
lods
inc
sub
push
lea
and
sub
es
inc
push
xchg
and
enter
das
mov
rorl
jge
cmp
xor
add
inc
scas
imulb
frstpm(287
fbstp
mov
jmp
xchg
pop
jle
adc
les
inc
inc
ljmp
clc
enter
xchg
xchg
into
jp
jns
xchg
push
cmp
mov
xor
xor
in
push
pop
xor
pop
push
adc
xchg
push
pop
jns
fdiv
fists
push
pop
pop
lret
push
pop
jns
lods
and
push
repnz
dec
inc
data16
inc
dec
jnp
aad
pop
mov
jmp
test
jge
fwait
add
sbb
ds
arpl
mov
ss
ficompl
call
pop
or
mov
sbb
add
push
mov
lret
mov
cmp
popf
mov
mov
arpl
std
sub
pop
jb
cld
repnz
out
add
in
mov
mov
idiv
repnz
das
inc
fistpll
sub
das
mov
xchg
dec
aaa
pushf
xor
and
adc
loopne
lahf
ljmp
sub
xor
in
std
mov
dec
xchg
push
mov
fisttpl
jne
insl
push
ds
jns
or
mov
fbld
sub
xchg
push
int
ja
int3
data16
into
jo
shlb
xchg
push
pop
je
ds
leave
jge
push
xchg
push
pop
jns
imul
xor
and
mov
and
loop
dec
aaa
adc
jmp
jns
jne
pop
icebp
stc
push
and
notl
cmpsl
sub
jmp
xchg
push
pop
test
packssdw
dec
mov
push
pop
jns
imul
push
cld
fistpll
repnz
mov
sti
mov
int
std
pop
mov
repnz
das
jmp
cmp
dec
out
and
cmp
mov
cld
mov
int3
push
jg
cmp
mov
and
lahf
pop
mov
stc
icebp
push
push
pop
call
lret
mov
mul
ss
test
sub
dec
xchg
pop
subl
cmp
out
out
cmp
aam
inc
ss
cmpsl
mov
gs
xchg
les
enter
jp
mulb
shll
mov
sarl
push
stc
push
dec
call
inc
mov
push
stc
in
jnp
cmc
adc
mov
enter
int
ds
adc
inc
scas
mov
fisttpl
sbb
sbb
push
push
subb
xlat
pop
lds
lods
cmpsl
mov
mov
roll
das
mov
mov
cmp
mov
hlt
in
sub
cld
repnz
push
mov
pop
mov
pop
mov
push
shlb
lret
pop
xor
lods
mov
test
mov
fadd
repnz
sti
jb
arpl
dec
stc
and
scas
mov
inc
sub
and
mov
out
lds
add
lret
sub
sub
ds
lret
mov
push
cli
cmp
add
cmp
cld
sti
enter
add
mov
add
adc
mov
xor
mov
xor
in
nopl
pop
imul
mov
sti
imul
ja
cli
sub
mov
mov
cmp
sbb
repnz
sbbb
test
xchg
dec
sub
mov
push
jge
jns
popf
mov
xor
ret
pop
push
mov
jbe
mov
scas
mov
sbb
mov
stos
mov
lret
out
dec
sub
lret
test
repnz
das
test
popa
jbe
dec
add
sub
push
inc
pop
push
and
cli
mov
repnz
ja
inc
mov
fstps
dec
dec
jge
and
scas
icebp
addr16
out
lret
cltd
loop
push
and
sbb
aaa
lret
mov
shll
rorl
imul
lcall
es
aas
loope
sub
shll
scas
push
sbb
inc
scas
and
enter
lds
or
andl
shlb
mov
mov
push
jns
xchg
aaa
mov
insb
mov
mov
cwtl
movb
mov
fwait
mov
repnz
mov
orl
out
fldenv
and
pop
lock
sbb
fimuls
mov
repnz
inc
jg
lret
cli
ss
or
lret
lea
xchg
mov
jnp
cmpsb
ds
outsb
push
and
pop
jns
xchg
push
scas
jae
and
je
mov
cwtl
jge
das
pop
stc
repnz
fldenv
arpl
pop
xor
push
rcll
lret
shll
lahf
jns
fcomps
pop
jge
and
mov
sub
test
inc
call
in
mov
lret
add
xchg
stc
in
pop
add
cmp
lcall
jle
bound
mov
xchg
add
mov
push
jle
in
inc
sbb
or
adc
repnz
scas
sbb
or
mov
sbb
dec
cld
repnz
das
test
adc
jmp
insb
add
lret
das
mov
ret
ljmp
dec
cmp
mov
add
in
xor
xchg
jns
pop
push
mov
and
sub
mov
lret
mov
test
insb
xlat
subb
mov
sub
sbb
xchg
xchg
push
mov
mov
leave
das
jg
pop
ljmp
fdivs
cld
repnz
sbb
loope
les
jge
repnz
das
nop
outsl
dec
mov
ss
adc
repnz
das
mov
mov
mov
dec
and
push
jnp
movsb
dec
inc
inc
jae
mov
pop
ss
ljmp
and
arpl
and
and
scas
enter
adc
mov
bnd
lahf
mov
jnp
into
sarb
xchg
ja
or
es
jge
sar
dec
lods
cmc
mov
repz
cld
jnp
xchg
pop
call
mov
mov
adc
lret
das
mov
notl
and
movsb
mov
mov
ret
pop
xor
inc
je
add
pop
xchg
pop
jmp
hlt
mov
daa
and
inc
pop
jle
in
insb
sub
push
pop
test
cmp
mov
xchg
int
cld
jb
cmpsl
pop
hlt
push
cld
fnstenv
filds
lret
das
pushl
and
jg
in
das
mov
sub
ja
out
inc
fdivr
in
or
fdivrp
inc
arpl
cltd
pop
xchg
push
pop
jns
in
pop
xchg
shlb
js
adc
pop
jns
stos
jle
iret
loop
jno
and
jns
xchg
jne
leave
add
clc
test
scas
pop
jecxz
mov
push
fdivrl
jmp
stc
in
pop
test
xorb
in
push
jae
xchg
pop
jle
vdivpd
pop
imul
stc
ret
sbb
adc
push
ds
xor
shlb
outsl
push
sti
push
sti
mov
daa
lock
dec
fstpt
inc
scas
mov
cmp
adc
in
sbb
or
aaa
xor
les
lret
inc
inc
jecxz
pop
adc
dec
sub
pusha
pop
xchg
push
mov
cld
addr16
scas
mov
cmpsl
push
scas
mov
mov
in
enter
imul
sub
repnz
ds
xchg
or
shrb
repnz
inc
add
repnz
int3
inc
les
movsl
xchg
push
pop
jns
inc
cmp
mov
mov
push
mov
enter
jmp
ss
mov
lods
xchg
arpl
cli
cmpsl
mov
jbe
repnz
mov
fdiv
sub
fsubrp
adc
test
or
addr16
js
lret
and
push
fcoml
push
ficomps
stos
aam
push
mov
pop
jecxz
ret
push
pop
jns
xchg
sbb
mov
dec
mov
pop
and
pop
jns
xchg
push
shlb
ljmp
xchg
push
addb
sub
popf
addr16
psrad
movsl
inc
mov
mov
jne
push
pop
sbbl
pushf
sub
scas
mov
xchg
fdivrl
enter
inc
call
cmp
pop
out
and
notl
adc
notb
cld
out
cmp
sbb
ljmp
out
add
aad
jns
in
dec
pop
cmp
xor
aas
mov
xor
lret
xor
add
pop
jns
stos
jb
inc
push
xor
in
popf
roll
push
ljmp
add
aad
push
cmp
pop
xchg
inc
gs
sti
enter
arpl
repnz
lret
das
mov
nop
out
sbb
and
lret
das
mov
push
sub
sbb
fdivl
in
jb,pt
sub
cmpsb
sti
imul
and
or
test
mov
inc
sub
loopne
mov
clc
enter
in
xor
leave
pop
xchg
push
ficomps
int3
mov
movsl
cmp
pop
jns
jae
rcrb
test
adc
xchg
in
mov
xchg
inc
jno
xchg
push
cmp
add
xchg
pop
xchg
mov
lea
jg
mov
cli
sub
jno
in
push
xchg
retw
repz
pop
inc
stos
and
jge
imulb
xor
xchg
push
push
mov
shrb
or
int3
lret
mov
mov
jb
test
adc
and
push
inc
loop
xchg
add
cmp
cld
mov
lcall
in
jecxz
icebp
sub
testl
repnz
stos
outsb
in
int3
inc
int
mov
mov
je
repnz
das
sbb
xor
subl
sahf
movl
inc
les
shrb
lret
das
mov
call
mov
mov
jnp
cmpsb
in
outsb
jo
in
scas
les
movsl
sbb
and
cltd
cwtl
imul
iret
loop
xor
lret
mov
ds
dec
test
sbb
fnstenv
rcr
mov
daa
push
popa
scas
scas
mov
pop
imul
aaa
push
jmp
mov
repnz
xchg
scas
pushf
loope
push
push
xchg
push
xchg
insb
repnz
mov
xor
dec
inc
mov
lds
jno
mov
imul
icebp
mov
and
dec
jns
dec
push
or
dec
in
repnz
sahf
add
mov
pop
out
fwait
repnz
jns
decl
inc
lret
sub
mov
ja
gs
ret
lcall
cld
repnz
test
out
inc
sbb
addr16
jge
xor
repnz
das
sbb
push
mov
addr16
aad
idivb
ja
fstpt
mov
fwait
in
jg
repnz
jbe
repz
inc
pusha
jo
mov
jle
xchg
xchg
inc
and
sbb
xlat
pop
xchg
mov
dec
xchg
pop
jg
clc
or
clc
repnz
rolb
pusha
pushf
mov
das
decl
ret
jge
mov
cld
repnz
mov
sbb
sub
scas
cmc
repnz
inc
arpl
sbb
sarl
scas
mov
leave
jmp
pop
test
dec
jmp
sub
push
mov
push
sti
push
enter
in
test
mov
jle
in
loope
mov
mov
rcrl
mov
jle
in
mov
xor
and
mov
push
lods
jne
jl
pop
jns
or
push
pop
xor
jns
xchg
push
jns
jge
idivb
out
aaa
mov
inc
pop
mov
orl
mov
hlt
and
aaa
mov
inc
hlt
jnp
inc
push
pop
add
mov
dec
xchg
fsubrl
jl
out
sbb
test
mov
cs
sbb
imul
in
push
push
out
inc
stos
daa
cmp
ja
inc
push
cmp
ja
inc
pop
jns
mull
push
out
and
mov
loope
jg
dec
add
cmp
lret
pop
xchg
inc
xchg
xchg
testb
pop
lret
mov
or
cli
sbb
ror
mov
xchg
ss
pop
mov
mov
mov
subb
sub
jecxz
repnz
lea
shll
dec
pop
mov
add
scas
mov
mov
lahf
mov
xchg
ds
dec
fsubrl
and
cmp
push
rolb
xor
hlt
into
scas
mov
rclb
push
scas
inc
pop
mov
out
xchg
add
leave
and
adcl
cmp
popl
jecxz
arpl
test
pop
jns
loope
gs
loope
shrb
lock
in
push
out
es
repz
jmp
add
loop
aaa
push
in
push
mov
mov
repnz
out
xor
inc
mov
insl
rcll
test
mov
mov
push
popf
xchg
cli
pop
xor
repnz
clc
and
sbb
jo
push
mov
dec
adc
cld
repnz
das
mov
aam
sahf
push
xor
cmc
enter
dec
xchg
rcll
pop
jns
cmp
lea
xchg
lea
jge
sbb
xchg
stc
popa
xlat
and
repnz
mov
rclb
cmpsb
shll
lret
mov
jg
divl
push
mov
jb
rol
sahf
imul
and
lret
das
cmp
add
call
inc
or
fistps
stc
addr16
out
mov
mov
jle
push
cmpsl
add
and
aas
std
test
lock
push
clc
pop
jle
in
adc
hlt
orl
stc
in
or
mov
inc
repnz
pop
test
nop
and
cmpsl
mov
pop
jle
inc
in
sbb
xchg
shr
pop
jle
in
cmp
fiadds
push
xchg
xchg
inc
dec
ljmp
sbb
xchg
icebp
enter
ret
pop
push
sbb
scas
mov
jle
lea
mov
xchg
push
mov
mov
idiv
xor
outsb
mov
cld
repnz
iret
push
aam
sub
sub
push
mov
insl
movsl
inc
cmpl
mov
xchg
das
xchg
out
ucomiss
jp
fwait
pop
dec
fbld
jge
cmc
jg
fstps
dec
test
rclb
imul
in
jl
in
push
pusha
lret
iret
add
std
inc
out
lea
jecxz
lcall
mov
cltd
lock
repz
in
and
mov
sbb
ds
jo
fisubrs
cmp
xor
sbb
jg
insl
lret
mov
imul
dec
cmp
sbb
lods
cmp
xchg
inc
pop
xchg
inc
and
jo
les
mov
mov
sub
inc
or
push
xchg
pop
jge
outsb
out
xor
mov
rolb
in
lods
adc
lds
loopne
lahf
adc
push
xor
jle
in
dec
ds
add
jle
cmpsb
call
stc
in
pop
or
mov
xchg
outsb
lret
das
lcall
loopne
call
jecxz
cmp
mov
jno
cmp
rcrb
xlat
das
mov
adc
sbb
pop
fdivs
aaa
pop
pushf
dec
gs
or
mov
mov
das
in
mov
je
pop
cwtl
mov
bound
adc
lods
loopne
adc
sub
clc
mov
ds
cmp
subb
testb
sub
or
add
pop
mov
mov
sub
mov
sub
jle
in
push
std
pop
xor
pop
pop
hlt
xor
bound
fs
clc
xchg
or
pop
test
mov
jp
ret
jno
xchg
pop
jle
xor
ret
out
cli
imul
xor
push
push
imul
mov
enter
fmul
arpl
jl
inc
adc
insb
pushf
fcomi
push
jne
enter
inc
pop
aam
sbb
jne
xor
xchg
jg
add
xchg
imul
stc
mull
fxch
mov
adc
xor
xor
movsb
dec
or
push
addr16
jno
inc
jnp
pusha
popa
inc
sub
outsl
add
imul
cld
dec
mov
xor
in
inc
jge
add
inc
xchg
cmp
mov
adcl
dec
xchg
testb
pop
jns
pop
jg
pop
jne
sbb
sub
in
inc
aam
in
and
xchg
mov
xchg
pop
jle
cltd
fcmovne
xchg
shrb
cmc
xchg
pop
jle
xchg
das
dec
rcrb
outsb
pop
mov
cmpsb
fstl
mov
aad
addr16
ret
outsl
sbb
in
jp
cmpsb
iret
xchg
add
adc
stc
in
pop
rcl
lock
std
pop
cs
xchg
pop
jle
mov
and
mov
xchg
pop
jle
cmp
shll
fwait
push
mov
sub
xchg
ds
dec
int3
fst
inc
ret
cld
mov
xchg
mov
and
lcall
popf
sub
movl
push
in
xchg
subb
std
inc
loope
inc
lret
lahf
xchg
subl
sub
ret
rcrb
repz
mov
jo
imul
sbb
xchg
pop
fsubrl
scas
mov
xchg
sarb
jle
repnz
into
pop
stc
repnz
pop
cs
push
lods
push
inc
mov
lret
insl
and
popf
cs
out
push
pop
and
lods
mov
push
out
dec
repnz
mov
and
mov
add
mov
mov
mov
das
loopne
mov
sbb
sbb
or
xchg
jg
cmp
outsb
jbe
jge
lret
push
pop
xchg
inc
jbe
loop
imul
pop
mov
sub
std
aas
push
cli
cld
inc
inc
pop
cmc
adc
add
dec
sti
xor
xchg
mov
xchg
pop
push
mov
mov
fstpl
imul
pop
xchg
push
mov
mov
daa
pusha
sub
jbe
repnz
push
pop
xchg
sub
push
and
mov
out
jp
dec
in
dec
popa
mov
mov
jnp
pop
in
adc
in
and
movl
in
pop
jle
subl
or
xlat
xchg
pop
jle
data16
test
push
inc
aad
jge
pusha
in
pop
loop
xchg
loop
leave
fwait
push
pop
jns
or
sub
sarl
je
xchg
pop
sbb
dec
adc
enter
mov
or
xlat
pop
xlat
cld
stc
in
pop
push
fisttpl
stos
jne
cmpb
jle
pop
rolb
scas
cmp
mov
or
lods
jge
inc
das
mov
lea
pop
movsb
mov
pushf
stos
scas
pop
sbb
mov
arpl
mov
pop
xchg
jge
lret
das
sbb
pop
movsb
adcb
push
pop
jns
rcll
and
icebp
leave
xor
jg
pop
jns
xchg
stos
push
fcmovnbe
rorb
pusha
fstps
sub
in
push
pop
pop
ljmp
lahf
and
fbld
push
pop
jnp
sti
cld
or
aad
jns
ja
jl
in
leave
daa
jne
jmp
pop
daa
scas
cmp
fbstp
popf
mov
sti
out
ja
jge
xchg
pop
cmp
ret
rolb
sbb
enter
pop
cmc
inc
and
in
push
ficoms
std
adc
out
dec
mulb
stc
push
cmp
cmp
lahf
pop
jle
in
cmc
in
and
adc
adc
xchg
insb
cmp
gs
je
pop
in
ja
rorl
es
adc
clc
rcll
mov
push
xchg
negb
repnz
sbb
cmp
bound
pop
adc
jg
icebp
pop
sti
pushf
jecxz
jae
jg
faddl
gs
mov
jmp
stc
in
pop
jp
rcll
dec
cmp
imul
pop
sbb
aam
insl
rorl
jns
fsubrl
imul
and
enter
and
addr16
push
ficomps
pop
out
xor
jmp
repz
rclb
dec
stc
sub
mov
mov
repnz
mov
fcmove
sbb
jl
adc
int
lret
das
mov
out
xchg
jp
mov
mov
pushl
adc
dec
inc
lea
mov
out
sti
outsb
test
rcll
das
mov
out
cmp
insb
xor
lret
das
mov
dec
push
sbb
aaa
lret
jg
bnd
inc
fdivrp
fistps
std
das
mov
xchg
adc
punpckhbw
lret
mov
mov
add
xlat
lock
out
push
or
test
scas
adc
je
rclb
cmpsb
push
movsb
add
lret
das
mov
shlb
enter
push
lret
das
mov
pop
cmp
insl
aad
push
mov
popf
fdivp
es
jecxz
shl
daa
mov
cltd
js
add
lcall
and
push
repnz
cmp
xor
jle
call
out
jecxz
push
push
loopne
shll
cld
in
les
mov
inc
jmp
mov
ret
negb
in
jns
xchg
push
mov
xor
jns
int
in
push
pop
lock
das
push
sub
fs
push
pop
jns
xor
mov
sub
jns
jne
lea
mov
out
dec
jnp
shr
jae
xchg
mov
mov
das
mov
int
movsl
bound
popa
and
lcall
lock
jno
test
cmp
mov
lret
sti
addl
cmc
sbb
sub
inc
divb
inc
add
out
sub
xchg
mov
pop
jmp
scas
mov
mov
das
std
movsl
sub
sub
cmpb
arpl
jp
lret
lcall
fstl
subl
mov
in
inc
xchg
and
pop
mov
stc
repnz
movsb
or
mov
pushf
repnz
mov
daa
sti
nop
les
inc
jno
lods
cmp
cld
ljmp
test
out
ds
lret
push
sub
test
movsl
inc
adc
lret
das
pushl
call
sahf
js
xchg
das
mov
xchg
adc
dec
dec
pop
jle
not
call
push
pop
jmp
rorb
xor
or
rcr
mov
stc
in
pop
js
cmpsl
adc
iret
cmp
movsb
xchg
xor
xchg
pop
jle
xor
fstl
and
mov
out
sub
mov
das
mov
pop
data16
shr
out
addr16
mov
lods
ja
fcomi
xchg
push
std
popf
imul
jp
mov
ds
aas
rolb
jbe
jmp
fwait
pop
jle
in
stc
ljmp
jg
pushf
push
jnp
fisttps
jns
cld
xor
or
in
mov
cld
cltd
push
pop
jne
adc
ret
int
ds
popa
mov
dec
inc
jo
xchg
mov
lcall
jp
sub
scas
mov
or
inc
push
xchg
ja
scas
mov
mov
adcl
in
cmp
mov
outsl
dec
jge
cmp
dec
and
inc
mov
repnz
in
and
arpl
ss
repnz
lret
mov
fisubl
loopne
pop
and
mov
xchg
cmpsb
adc
cli
enter
roll
mov
cmp
lahf
sahf
push
mov
das
mov
jge
jnp
stc
jns
out
leave
pop
mov
je
test
push
and
mov
bnd
aam
sub
mov
mull
inc
mov
xchg
mov
fdiv
mov
mov
sbb
dec
dec
mov
jge
inc
push
adc
lret
push
aaa
lret
test
dec
cli
mov
and
in
pop
sbb
or
sub
in
pop
jle
stos
sbb
or
insb
jns
test
jle
jnp
cmpsl
lock
push
scas
push
mov
iret
xchg
stc
in
loope
mov
xchg
pusha
inc
cli
add
xchg
lea
sbb
test
in
rcrl
sbb
cltd
sub
jno
ret
or
xchg
push
fs
je
idivl
and
xchg
push
pop
je
mov
sub
sbb
fnstsw
aad
xchg
push
pop
jns
sub
xor
lea
pop
int3
sbb
sbb
xchg
popf
hlt
movl
scas
stc
in
pop
stos
sbb
in
popa
insb
inc
fimull
fbld
jl
adc
pop
add
mov
xchg
xor
pop
jle
in
xchg
mov
lret
add
mov
xor
in
fmull
ret
pop
mov
mov
repnz
xchg
pop
dec
xor
fsincos
mov
lret
pop
cmp
imul
mov
out
adc
pop
mov
bnd
dec
jge
fs
xor
cmpsb
push
aam
jbe
mov
jl
inc
scas
mov
imul
inc
push
cmp
scas
ds
jecxz
cmp
sbb
fcoml
jns
cmpsl
inc
sbb
scas
mov
cli
fwait
ss
sub
inc
orl
push
pop
jns
into
icebp
in
leave
neg
jmp
mov
in
insb
cmp
sbb
push
jb
xchg
push
jae
push
repnz
xchg
lret
aas
cmp
ds
or
aam
add
test
outsl
aaa
leave
sarl
outsl
fcmovnb
mov
fildll
insl
add
push
pop
jns
adc
mov
rorb
jns
xchg
lea
or
push
cmpsl
cmp
fs
push
mov
int3
test
pop
jge
push
jbe
imul
ss
lahf
bound
out
test
enter
enter
dec
test
pop
les
adc
inc
adc
xor
sub
adc
push
sahf
insb
hlt
bound
or
jns
lock
adc
sub
ret
jmp
cmc
lods
or
scas
mov
int3
gs
in
in
mov
mov
ss
sbb
and
sti
dec
movsb
jne
mov
cld
push
pcmpgtb
bnd
cmp
jno
mov
bnd
rcl
pushf
mov
lret
insl
dec
lds
lret
mov
lret
das
decl
mov
insb
inc
das
mov
mov
push
sbb
aas
xchg
dec
jle
notl
pop
adc
add
adc
aam
stc
in
pop
xchg
inc
mov
int
iret
aad
xchg
pop
jle
test
or
push
pop
jns
int
adc
inc
inc
mov
pop
jns
xchg
int3
cmpb
mull
out
and
xor
in
jg
jg
es
test
je
imul
sbb
insl
sbb
and
iret
jnp
in
icebp
xchg
mov
xor
fsubp
fldl
ja
jns
lret
fwait
inc
je
dec
push
sbb
mov
xchg
mov
xorb
add
cmp
inc
in
add
lds
int3
cmp
sbb
adc
xor
test
scas
mov
out
push
subb
mov
paddsb
push
lahf
imul
adc
cli
inc
sub
and
icebp
in
sub
xchg
in
sbb
cs
inc
inc
adc
lret
mov
in
popa
push
cmp
xchg
xchg
repnz
das
mov
sbb
stos
or
inc
jecxz
or
sub
movsl
inc
mov
repz
and
pop
jle
in
cmp
and
inc
fbld
and
out
stc
in
pop
jge
sbb
hlt
in
add
jns
xchg
inc
jnp
pop
outsl
orb
ret
mov
mov
and
lret
in
cmp
xor
mov
gs
lret
mov
ss
aam
mov
cmp
lret
stc
daa
xor
sahf
jnp
mov
xchg
push
int3
inc
jecxz
test
inc
sbb
out
fisttps
dec
jno
test
sbb
mov
mov
and
repnz
jp
sub
inc
sbb
push
stos
mov
scas
mov
aam
add
mov
mov
cmp
in
test
mov
imul
repnz
or
push
and
in
xchg
mov
and
pop
scas
mov
iret
aam
mov
je
jg
jmp
cltd
or
insb
cmpb
adc
jmp
jge
repnz
inc
mov
xchg
adc
sub
pop
sbb
enter
cld
sti
enter
add
hlt
sti
call
cmp
stc
in
inc
push
imul
out
std
lret
mov
insb
call
clc
das
mov
loope
xchg
cmp
ja
fs
out
jp
lret
inc
dec
cmp
stos
ret
xchg
sahf
pop
xchg
repz
mov
mov
mov
xor
xchg
push
pop
jns
scas
lret
or
mov
ds
pop
jns
push
in
nop
inc
popa
inc
cmp
or
xchg
aaa
das
xor
pushf
in
addl
das
inc
out
inc
pop
jns
into
cld
xor
sub
les
stc
in
jg
pop
push
loope
mov
fbld
jle
push
xlat
and
jo
push
jae
je
xchg
pop
jle
js
jle
movsl
fidivl
pop
mov
repnz
pop
mov
icebp
jecxz
js
shrl
push
inc
mov
das
mov
adc
jo
cli
testl
pop
clc
int
and
and
std
sar
repnz
das
xchg
sub
std
mov
addr16
xchg
jg
data16
imul
pop
nop
xchg
pop
jle
movsl
push
jle
out
add
xor
js
inc
inc
jle
in
pop
add
movsb
jne
je
mov
pop
jns
lea
insb
mov
pop
and
xchg
push
pop
fwait
out
in
mov
stc
out
mov
popf
or
and
jns
add
scas
sbbl
mov
pop
jns
xchg
clc
jg
out
ljmp
jb
sub
outsb
faddl
jl
repnz
pop
jns
sub
fsubrl
and
cmp
ja
repnz
das
mov
cmp
xchg
cmpsb
cmp
in
sub
jg
shll
lock
xchg
pop
adc
mov
test
pop
jle
dec
push
imul
scas
popf
xor
in
adcb
mov
fwait
mov
in
shrb
test
lahf
cmp
adc
jbe,pt
loope
xchg
fcoms
lret
das
outsb
je
movsl
and
and
mov
cwtl
lock
push
mov
ljmp
lock
push
xchg
int3
leave
jg
and
rorb
xor
stc
in
mov
cltd
jg
insl
fsubr
shl
mov
movsl
jmp
and
xchg
scas
mov
sbb
push
push
int3
mov
movsb
mov
mov
pop
and
loope
sub
nop
cmp
jns
pop
mov
bound
icebp
xchg
xchg
mov
or
xchg
rcrl
pop
jns
xchg
pushl
mov
adcb
mov
mov
out
push
pop
jns
add
dec
jo
out
in
sbb
repnz
ret
out
mov
arpl
stc
lods
mov
xchg
fwait
or
in
sub
or
sub
pop
jno
adc
xchg
push
das
or
les
xor
sbb
add
xchg
ja
xor
clc
sub
sbb
scas
add
mov
xchg
push
pop
fnstcw
cli
lahf
ror
cmp
andb
fdivl
or
in
jge
xchg
jbe
ljmp
and
in
dec
aaa
das
push
push
pop
out
xchg
jge
lds
test
dec
enter
std
mov
pop
enter
ds
mov
andl
lcall
repnz
sarb
lret
jbe
mov
icebp
pop
inc
fwait
mov
sbb
dec
ret
jns
xchg
push
xchg
and
add
fnsave
jns
xchg
push
mov
inc
stc
movsb
es
daa
pop
dec
lahf
paddb
sbb
inc
popa
xchg
pushf
shr
mov
movb
mov
jb
or
dec
cmpsl
lock
xchg
inc
fwait
ss
gs
in
ja
shll
gs
mov
jne
xchg
aas
fcmovnu
les
sub
cmp
pop
cmp
cmpsl
xor
xor
inc
arpl
push
iret
fs
lods
pop
cld
repnz
mov
dec
sbb
dec
pop
out
sub
mov
sub
mov
test
sub
xchg
adc
xlat
lret
mov
add
cmp
mov
mov
push
jg
mov
cmp
enter
in
lock
stc
pop
test
inc
hlt
fnstenv
or
push
lahf
lds
das
jg
cmp
ljmp
das
mov
push
sbb
add
das
mov
cmp
insb
std
xchg
lret
mov
lret
mov
jp
fcoms
cld
repnz
das
shlb
icebp
dec
xchg
jg
in
das
mov
rol
lds
jnp
in
inc
ds
sub
mov
lea
in
pop
inc
incl
js
mov
inc
mov
mov
in
xor
push
ret
add
ret
in
push
xchg
pop
insb
es
cwtl
fistl
call
push
cmp
pushf
mov
mov
icebp
jne
jg
data16
fs
loope
into
ja
cmp
mov
jge
jl
mov
das
jb
push
shrb
cmc
enter
mov
fistps
jae
push
sbb
in
dec
insl
out
mov
addr16
inc
insb
lret
dec
or
sub
out
inc
cmp
mov
mov
jbe
insl
sbb
ljmp
jne
jecxz
jp
mov
gs
xchg
fists
mov
sub
mov
pop
enter
mov
rolb
pop
jle
imull
cmp
xchg
ljmp
stc
in
mov
xlat
jle
in
mov
gs
sbb
jbe
xchg
pop
xchg
adc
sub
add
dec
rorb
adc
imulb
jge
adc
adc
jae
mov
sti
enter
shlb
sbb
xchg
pop
cmp
adc
cmp
enter
mov
cltd
xchg
mov
dec
adc
imul
or
arpl
xor
int3
inc
mov
aas
xchg
xchg
jg
cld
out
push
bound
mov
and
fcmovnbe
insb
jno
xor
pop
notb
mov
pop
subb
pop
push
sbb
das
std
and
mov
lahf
std
jae
out
xchg
das
mov
push
movsb
jae
xchg
inc
inc
pop
jge
mov
jg
mov
or
sbb
xchg
loop
cmc
jb
push
sbb
mov
aam
loop
stc
jnp
push
hlt
dec
cld
cmp
lret
pop
nop
pop
imul
repnz
xchg
es
cld
repnz
inc
push
js
in
popw
arpl
lret
das
mov
mov
data16
mov
adc
mov
add
and
popf
mov
push
ret
popa
adc
in
das
rcll
jmp
testb
mov
bound
jnp
jns
xchg
pop
mov
adc
insl
out
repnz
xor
dec
cli
cmp
mov
sub
dec
sbb
pop
inc
cmpsb
sub
repnz
dec
in
fldl
inc
mov
push
out
enter
movsb
iret
push
cmp
ss
mov
cld
repnz
imul
push
fwait
aas
aam
jp
lret
mov
adc
stos
jbe
leave
das
mov
cmp
les
fisubrs
test
mov
addr16
ds
dec
psubw
xchg
das
movsb
jo
shll
push
cld
pop
dec
lret
das
lcall
ret
or
adc
pop
xor
daa
add
cld
repnz
mov
adc
scas
and
jmp
cs
push
sub
das
mov
cmp
inc
out
mov
xor
in
pop
mov
je
pusha
jmp
popa
dec
mov
loope
sub
pushf
dec
xchg
push
pop
jns
jg
adc
loopne
push
pop
call
mov
in
mov
cmpsb
push
dec
fdiv
lret
mov
lret
repz
fisttpl
mov
mulb
mov
pop
cmp
out
jbe
cmp
pop
xor
cmp
sbb
mov
pushf
push
daa
cmp
jge
cmpsb
lcall
dec
in
mov
js
pop
xor
mov
xchg
and
jge
dec
mov
movsl
sub
repnz
mov
jle
jo
adc
loop
mov
mov
xor
jb
fs
lret
das
mov
fst
cwtl
dec
adc
sub
icebp
test
cmc
lea
push
pop
jns
jb
sarl
cmp
cmp
pop
jns
xchg
xor
scas
cmpsb
xchg
dec
adc
jns
xchg
push
cmp
or
in
sub
pop
in
push
pop
push
iret
xlat
int3
push
popa
scas
or
inc
push
pop
jns
out
pop
adc
xchg
in
xchg
jg
sbb
xor
push
gs
stc
ja
call
mov
stos
xchg
bound
aaa
nop
push
cmp
xchg
sbb
fs
inc
push
and
xchg
jg
popf
popf
mov
sar
sti
xlat
scas
push
sahf
sbb
dec
jp
push
mov
dec
cltd
or
out
add
lds
adc
ds
xor
dec
pop
push
xchg
in
sub
popa
popf
mov
pop
in
repnz
push
adcb
cmp
cmp
das
ds
fsubrp
cld
mov
pop
adc
dec
out
xor
ja
and
aaa
jmp
cmc
enter
sbb
cmpsl
and
jo
pop
xchg
sub
movsl
xlat
jne
lahf
mov
scas
cmpl
repnz
icebp
jmp
pop
cmpsb
lock
sub
fcompl
push
js
cli
mov
inc
mov
cld
lds
push
xor
les
inc
daa
or
push
jb
or
adc
sub
jns
xchg
push
sahf
outsb
mov
popa
and
repz
in
push
pop
mov
sub
and
sar
sbb
popa
dec
xlat
mov
pusha
sti
das
jnp
enter
add
in
fdivrs
lret
das
mov
push
mov
cld
repnz
xor
inc
dec
push
inc
sti
pop
pop
or
mov
inc
sahf
es
xchg
push
pop
push
add
es
repnz
jne
inc
xchg
push
pop
jns
enter
xor
mov
jb
call
enter
add
dec
inc
push
insl
adc
sar
imul
dec
mov
lock
add
imul
sarb
or
fcmovnu
jae
xchg
in
lret
cld
repnz
das
and
mov
adc
rorl
mov
cltd
arpl
in
mov
add
and
ficomps
jns
or
or
pop
jns
dec
mov
inc
shl
sub
pop
pop
jns
sub
jp
inc
fcomps
xlat
mov
outsb
lea
stc
in
jg
enter
or
test
in
pop
jle
or
test
add
rclb
dec
pop
xchg
pop
jle
add
add
mov
push
dec
addr16
jle
in
enter
jo
loope
mov
orb
repnz
and
subl
pop
sbb
das
mov
notl
leave
jge
pop
jle
aad
inc
ss
pop
mov
xchg
mov
pop
repnz
sbb
sbb
out
out
lret
mov
sub
js
cmp
lret
das
cld
aaa
clc
cmpsb
data16
leave
mov
das
mov
pop
cs
movsb
jg
xor
inc
or
cmp
lret
lea
fdivrl
repnz
mov
jns
pushf
bound
stc
mov
cld
in
dec
sub
xchg
into
das
mov
outsb
jmp
aad
jbe
pop
or
lret
fistl
dec
into
out
or
cmc
sub
outsb
fistpl
add
mov
jle
in
dec
jne
iret
and
xchg
xlat
pop
mov
stc
in
pop
adc
mov
and
mov
in
pop
jle
scas
iret
ret
movsb
mov
pop
xchg
pop
jle
cmp
int
xchg
xor
jp
jle
in
mov
scas
dec
dec
sbb
jnp
xchg
adc
dec
test
movsb
xor
mov
or
or
cmpsl
cmp
das
mov
push
mov
ja
shrl
mov
inc
push
call
imul
cmp
xor
in
fxch
fnstsw
repnz
das
dec
ja
nop
lret
add
xchg
call
in
aam
stos
pop
mov
sbb
add
jae
mov
or
lock
das
jbe
add
sbb
mov
or
popf
test
sahf
movsb
push
popa
mov
fcmovnb
jg
pop
jns
clc
push
push
shrl
or
in
ljmp
out
push
xor
stc
in
pop
inc
repnz
push
xchg
jo
lret
das
lcall
into
sahf
and
xchg
insl
rorb
cld
repnz
and
pop
xchg
popf
xchg
xchg
push
ficoms
sub
pusha
enter
jle
mull
sar
dec
lds
mov
sub
addr16
in
test
rcl
gs
xchg
sbbb
in
pop
xorb
cmpsl
test
insl
mov
test
je
push
cmpsb
jg
pop
jns
aam
inc
dec
jbe
pop
mov
gs
cmp
lret
add
cld
repnz
or
aaa
mov
inc
test
push
adc
mov
rcll
jns
sbb
mov
iret
lea
test
cmp
in
rolb
arpl
jo
xchg
or
cltd
lret
das
mov
mov
lcall
mov
out
sub
cmp
lea
xor
leave
mov
push
mov
jae
lret
das
mov
clc
ss
imull
cld
dec
jnp
lds
jle
xchg
or
loop
sar
imul
pop
adc
out
push
jecxz
aam
hlt
ds
lods
mov
dec
fistpl
lea
add
ret
fists
pop
lock
and
add
mov
aam
and
rolb
andb
jle
in
dec
push
cld
sbb
xchg
sbb
xchg
fs
scas
in
mov
int3
out
imul
add
repnz
mov
mov
shll
sbb
loope
mov
pop
xor
dec
lcall
stc
in
xor
dec
push
jno
addl
push
cmpsb
xor
jecxz
jae
xorl
das
decl
stos
mov
xor
mov
lret
arpl
mov
adc
in
ja
lahf
pop
mov
mov
jns
mov
push
lea
adc
lods
mov
leave
adc
rclb
mov
popf
hlt
adc
jbe
in
ja
or
add
and
subps
pop
jns
lea
mov
cwtl
inc
push
mov
push
cmc
mov
in
sar
or
neg
xchg
jg
pop
lods
lret
adc
ffreep
xchg
and
cmp
outsb
xor
int3
xchg
mov
in
mov
das
ds
mov
call
subb
cmp
das
enter
insb
pop
xchg
xchg
aaa
ss
je
mov
xchg
xor
cmp
mov
rclb
sub
mov
sub
push
sbbb
aas
test
inc
xor
nop
mov
je
fsts
mov
inc
jp
add
repnz
push
sub
out
mov
in
dec
ficomps
pop
inc
or
inc
xor
cld
repnz
das
cli
cs
mov
out
sbb
cwtl
mov
data16
or
cmc
jmp
scas
mov
pop
and
jnp
fwait
jno
jb
ljmp
xlat
mov
xor
xchg
out
mov
repnz
cmpsl
pop
scas
out
adc
dec
addl
xchg
xchg
mov
cmovo
gs
push
pop
jns
sub
shll
cltd
inc
sub
xor
pop
ds
jns
xchg
lret
icebp
cmpsb
das
mov
loope
jns
xchg
push
xor
repz
inc
imulb
xor
outsb
pusha
sbb
and
popa
cld
inc
and
sbb
xchg
cmp
add
xchg
push
mov
out
adc
inc
cli
out
lret
das
and
fsubs
push
push
mov
inc
jno
inc
xlat
inc
and
cld
repnz
cs
inc
mov
mov
mov
sti
shrb
mov
xchg
stc
in
inc
cmp
xchg
fistps
inc
sbbl
adc
dec
pop
repz
iret
hlt
mov
rcl
mov
push
aaa
push
mov
jg
jle
js
addr16
push
xchg
dec
pop
lcall
jmp
sub
fs
in
adc
mov
sbb
sub
xchg
pop
mov
jp
dec
push
pop
aaa
sahf
xchg
stc
lds
lret
mov
insl
push
test
pop
js
notl
stos
out
out
and
xor
add
xchg
ljmp
mov
cmp
adc
inc
jmp
mov
dec
pop
mov
ret
push
mov
sub
das
shl
lods
stos
jno
lret
mov
jo
clc
jle
jo
cmp
scas
mov
test
insb
int
dec
cltd
dec
mov
enter
mov
out
xchg
push
fdivrp
lcall
cmp
repnz
mov
adcl
add
inc
xrelease
push
and
push
xor
jl
aad
testb
sub
scas
mov
pushw
push
jb
lds
repnz
les
lret
loop
loopne
pop
scas
mov
mov
xchg
mov
push
pop
jns
jne
adc
imull
sub
lcall
xchg
jo
aas
mov
and
insl
xchg
pop
sub
push
pop
out
mov
push
pop
jns
fldt
pop
mov
xchg
xchg
insb
test
xchg
cmp
pop
xchg
int
mov
bswap
imul
hlt
mov
ds
inc
mov
jne
nop
lahf
mov
sub
inc
sbb
sbb
xor
cmp
and
shlb
and
sbb
lods
lods
xchg
jns
xchg
lea
call
mov
pop
sti
subl
pop
mov
mov
xchg
pop
jle
hlt
sub
outsl
arpl
dec
or
and
cmp
cmpsl
repnz
add
mov
jecxz
jns
mov
mov
rcl
int
jnp
fs
movsb
push
test
cs
pop
jge
add
aam
mov
add
js
pop
lea
push
cli
aas
lock
xchg
push
dec
or
mov
in
mov
dec
into
ja
add
icebp
inc
push
or
pop
pop
jns
repnz
xor
xchg
jmp
in
add
enter
ret
sub
mov
add
scas
lods
mov
enter
in
push
cld
inc
mov
stc
in
addr16
mov
jge
loope
mov
mov
mov
stos
mov
inc
jnp
or
in
jmp
jae
nop
mov
or
aaa
mov
je
scas
mov
jns
test
fsts
out
sbb
ret
sub
mov
lds
fs
mov
cmc
add
fbld
push
mov
inc
cwtl
fmuls
xchg
mov
and
popf
pop
push
clc
out
mov
in
push
dec
adc
and
hlt
and
xchg
sbb
clc
enter
je
mov
xchg
ds
scas
jecxz
in
sub
add
test
mov
mov
xchg
pop
jle
mov
pop
or
cs
lahf
out
dec
test
repnz
ficompl
cmp
mov
mov
lret
loope
je
pusha
arpl
cmc
push
xchg
xchg
xchg
or
cld
sti
enter
xchg
jb
xchg
xchg
mov
popf
cmp
rcl
mov
mov
inc
in
push
fidivrs
fdivrp
into
xchg
push
pop
jns
rorb
push
cmp
xlat
aam
xchg
aas
rcll
and
lahf
sahf
pop
jle
negl
stos
out
jmp
jne
cmp
movsb
and
in
add
jb
mov
cltd
stc
in
pop
push
jmp
dec
adc
movb
jle
icebp
cmpsb
cmc
pop
push
repnz
mov
xchg
push
iret
push
stc
dec
pop
sbb
ret
lahf
outsb
fildll
mov
in
sub
sbb
icebp
sbb
lret
nop
pop
das
daa
pop
mov
in
das
lcall
sti
cmp
sbb
mov
mov
adc
adc
lret
inc
mov
in
jecxz
mov
outsl
cmc
or
sti
ret
psubsb
faddl
insb
mov
mov
mov
dec
inc
pop
cmp
pop
mov
jns
mov
jo
cmp
mov
fsubp
aas
loop
outsl
popa
mov
inc
repnz
test
stos
test
and
xor
or
sub
test
mov
pop
mov
in
ds
scas
push
flds
jmp
mov
fadd
bound
scas
mov
lret
rolb
lcall
lret
ja
repz
stc
test
xchg
repnz
xchg
lods
cmp
dec
jne
mov
mov
mov
sub
testl
mov
add
fld
js
lahf
cmpsb
push
mov
pop
mov
jle
stos
inc
out
int3
lods
int3
loopne
pop
repnz
pop
xchg
sub
dec
inc
sbbl
shll
push
pop
notb
xor
test
pop
into
loope
sbbl
xchg
pop
jle
sti
dec
test
int
adc
sub
in
cmp
pop
dec
pop
arpl
sub
pop
sbb
dec
jnp
dec
sub
push
push
mov
loopne
adc
fs
mov
clc
outsl
jns
sbb
and
push
clc
imul
mov
mov
in
das
stc
push
xchg
mov
mov
imul
pop
hlt
enter
mov
enter
daa
dec
shlb
jb
jle
imul
and
mov
in
fwait
or
iret
ds
cmpsb
pop
call
jmp
jb
inc
mov
inc
cmp
je
xchg
adc
mov
nop
jns
pop
xor
sti
iret
icebp
xchg
cmp
movl
fbld
mov
xchg
or
mov
pop
adc
stc
in
lcall
dec
clc
aad
sub
and
ljmp
sub
aad
sub
xchg
push
aad
imul
cli
jecxz
mov
xor
and
pop
aam
ret
adc
push
pop
jne
jle
in
gs
jmp
pop
pop
aas
cmc
sub
xchg
add
repnz
adc
and
pusha
sti
enter
outsb
out
mov
xor
imul
mov
push
push
cmp
repnz
mov
pop
aad
dec
sub
add
fildll
cmp
mov
sub
jge
jnp
xchg
pop
mov
mov
int
add
pusha
and
das
mov
shl
pop
mov
inc
mov
cli
cltd
sub
lock
cld
mov
mov
lods
mov
stc
sti
jae
popa
test
das
mov
lock
dec
cmpsb
jns
fcmovbe
mov
cld
repnz
or
fcoms
or
lock
bound
repnz
das
mov
push
mov
mov
lret
das
mov
pusha
lods
pop
stos
pop
fsub
xchg
lret
das
mov
mov
xchg
mov
cld
repnz
mov
aaa
pop
lcall
rol
jns
sub
js
xchg
push
jmp
rcrb
subl
mov
mov
faddl
jge
cmp
lret
test
andb
adc
push
push
or
pop
shrl
inc
imul
sahf
cmp
sub
pop
pop
cmp
repnz
mov
mov
xlat
and
push
js
cs
cmp
mov
mov
cwtl
sub
jno
mov
out
mov
test
mov
arpl
jae
pop
xchg
jg
stc
ret
add
xchg
xchg
xchg
jle
in
imul
and
fnstenv
popa
mov
clc
enter
bsf
jg
jno
jecxz
or
inc
cmp
les
cmp
out
and
shlb
dec
or
jns
mov
pop
adc
divb
sbbl
xchg
fs
or
inc
stc
cmp
push
adc
xlat
test
sub
jle
orb
inc
fsubrs
rclb
push
les
pushf
xchg
pop
imul
inc
iret
adc
pop
xchg
pop
jle
into
shlb
fdivrp
stos
test
pop
jle
in
shl
mov
repnz
and
movsb
add
lcall
pop
aam
xor
bound
rorb
divb
in
and
popf
jne
jg
aaa
je
lret
das
out
adc
inc
outsl
adc
notl
cmc
popf
mov
add
adc
lods
pop
lret
mov
nop
insl
hlt
icebp
jp
outsb
dec
fimuls
js
test
or
rolb
insl
enter
push
xchg
aaa
cmp
pop
jns
arpl
jo
mov
mov
das
sarl
sbb
sbb
cld
repnz
push
cmp
adc
xlat
in
je
in
das
sbb
fs
cmc
cld
stc
jnp
xchg
push
mov
sti
inc
call
pop
jmp
or
jno
jl
mov
mov
repz
jmp
jg
fisubl
lcall
sub
xor
jp
ja
pop
pop
jns
xchg
es
xor
mov
clc
add
jnp
popl
fiadds
sub
bound
int
fists
stos
insl
adc
loope
cmp
out
push
in
jns
sbb
cs
stos
jl
sti
ja
xchg
push
scas
mov
push
out
and
mov
in
addr16
cwtl
jp
jbe
pop
sub
jl
arpl
mov
int3
sti
in
jne
loope
inc
mov
lahf
ljmp
cmp
sub
pushf
mov
push
push
ficomps
js
mov
inc
in
inc
jecxz
jb
xchg
jecxz
jecxz
leave
arpl
pop
xchg
mov
pop
push
sti
adc
lret
stos
in
fimuls
xchg
mov
icebp
xor
jb
adc
hlt
out
popf
jmp
push
mov
jnp
addb
jb
jecxz
lret
mov
arpl
xlat
sub
repnz
and
pop
xor
push
sbb
dec
jmp
subb
ficomps
xchg
pop
ret
sub
jle
in
dec
push
mov
xchg
jl
jge
call
addb
insb
divl
dec
adc
aam
test
lret
out
cmp
scas
mov
dec
std
shll
dec
iret
mov
xchg
stos
shll
divb
in
mov
push
andb
fs
pop
outsl
or
fstpl
fwait
mov
xor
inc
sar
or
loop
inc
movsb
in
push
pop
xchg
push
pop
jns
jb
cmp
sbbl
or
stc
ja
shrl
scas
lds
adc
stc
in
pop
adc
sbbb
xchg
test
dec
enter
xor
pusha
aad
pop
sarb
clc
cli
ret
dec
enter
mov
repnz
push
stc
lcall
push
mov
lret
bnd
mov
fwait
mov
xchg
fdivs
ljmp
and
or
xchg
pop
pop
add
add
subl
inc
jl
dec
jns
aas
mov
jge
cmp
adc
adc
cld
sub
repz
adc
push
pop
repz
notl
lods
xlat
ror
mov
aaa
sub
mov
in
pop
adc
cs
ds
push
in
pop
jle
pop
jae
mov
push
sahf
xor
arpl
add
cltd
and
mov
lods
pop
jns
xchg
cmp
jno
stc
pop
mov
lods
mov
in
push
jns
loope
xor
repnz
add
leave
xchg
subb
jnp
mov
xchg
pop
jle
fstpt
adc
mov
pop
cs
push
pop
jle
in
and
into
bound
ret
lcall
cmpl
xchg
das
lcall
push
ret
and
pop
mov
and
mov
fildll
popa
ret
xchg
and
out
inc
ret
mov
xor
cmp
shll
out
in
pop
jne
xchg
cs
push
cmp
fsts
mov
pusha
pushf
test
jge
in
and
and
imul
pop
out
adc
add
jp
inc
movsl
das
in
pop
jle
sbb
dec
mov
push
decb
stc
int
rcrl
cmp
jge
aad
lods
jo
loope
stos
fcmove
add
enter
clc
sub
shlb
stc
in
pop
mov
outsl
dec
out
pop
xchg
and
mov
push
hlt
mov
mov
mov
addr16
cmp
adc
push
clc
and
lret
in
adc
rclb
or
xchg
dec
aaa
add
and
jl
jns
xchg
mov
cmpl
test
in
push
into
cmp
and
xchg
push
pop
out
dec
cwtl
mov
push
pop
scas
jae
stos
jg
pop
jns
and
stos
cmp
pop
xchg
xor
stc
in
pop
out
roll
and
int3
clc
enter
xchg
dec
popf
test
leave
xor
fwait
pop
push
or
popa
aad
jl
mov
mov
xchg
nop
js
jbe
rol
ret
shrl
andb
insb
add
stos
in
jg
mov
sti
test
or
xchg
pop
jle
dec
das
jle
mov
aas
pushf
inc
mov
jle
in
js
icebp
push
mov
arpl
and
test
adc
sub
test
cmpsb
jl
test
lret
je
in
pop
jle
xchg
cmc
sbb
repz
pop
mov
stc
and
in
mov
inc
sti
mov
mov
and
in
sub
ljmp
dec
cld
repnz
das
cmpsl
bound
cmp
fidivrl
repnz
das
mov
in
pop
jno
test
adc
lock
sub
ret
jge
sti
mov
inc
push
mov
insl
push
jge
in
dec
fmuls
mov
sbb
stc
in
pop
cmpl
xchg
stos
gs
inc
testb
les
test
inc
loope
sub
arpl
pop
cltd
in
and
pop
cmp
outsl
rcr
mov
cmp
pop
jns
and
leave
pop
insb
cmc
xor
outsb
push
cwtl
dec
dec
xchg
das
ds
insl
push
sbb
fimuls
loopne
inc
or
lahf
int3
fnstenv
cld
xor
push
and
jne
cmpsb
icebp
repnz
stc
scas
lret
jge
xlat
lret
mov
rclb
imul
lods
mov
adc
push
clc
mov
pop
pop
jle
popl
test
cmpsb
insl
inc
cmc
ljmp
mov
jp
jb
push
into
stc
in
pop
arpl
mov
outsl
push
mov
xor
xchg
pop
jle
jl,pt
xchg
mov
shrl
sti
aad
and
or
orb
jo
leave
xchg
flds
pop
es
xchg
xchg
push
fdivp
sbb
aas
mov
incl
out
ss
fstps
mov
loop
sub
push
inc
jo
jnp
lret
and
insb
inc
insb
mov
out
xchg
das
mov
add
cltd
sbb
daa
pop
xor
cmp
imul
pop
stc
in
jg
and
mov
and
push
in
out
lret
or
in
pop
pop
pop
into
push
movl
filds
push
mov
or
sbb
rclb
jns
sbb
or
and
gs
fmuls
inc
add
mov
dec
pop
xchg
jns
lods
mov
fistps
mov
inc
pop
sbb
fwait
dec
jge
xor
mov
cld
repnz
les
mov
std
fcomip
out
es
repnz
das
cmp
cmp
xor
mov
mov
mov
in
cltd
push
pop
jns
mov
scas
negl
push
in
jns
jl
in
lret
pop
dec
mov
sub
in
enter
sets
jmp
adc
stc
testl
imul
stc
in
fsubrs
and
cmp
loope
pop
mov
mov
arpl
pop
ljmp
sub
jg
mov
adc
scas
add
sub
xor
sbb
lret
mov
scas
jns
mov
sbb
repnz
jecxz
mov
enter
jp
lock
push
pop
jns
test
dec
mov
cmp
mov
in
jb
cli
cmp
movsb
sbb
aas
lcall
sahf
leave
adc
scas
loope
mov
fadds
test
cmp
pop
mov
xor
sub
leave
xor
sbb
pop
pop
rclb
cmp
push
xor
fdivrl
rcl
mov
xchg
push
fimuls
notl
hlt
jbe
repnz
adc
imul
mov
in
inc
idiv
shll
and
inc
test
in
test
sub
jbe
outsb
js
enter
adc
enter
cld
repnz
push
std
and
scas
and
mov
fdivrp
repnz
das
arpl
inc
ret
cmp
mov
mov
dec
sbb
fpatan
pushf
ljmp
in
pop
sub
sbb
push
mov
jecxz
test
repnz
adc
sahf
pop
pop
jns
mov
or
push
sub
sar
cmpsl
stc
in
jg
mov
dec
adc
inc
movsb
and
push
in
pop
jle
sarl
and
pop
and
jle
popa
cmpsb
or
cmp
aas
gs
pop
jle
in
mov
push
repz
bound
mov
enter
inc
sub
aaa
insb
mov
test
cwtl
enter
sub
add
xor
push
jp
iret
daa
jl
loopne
add
scas
out
and
sarb
push
xchg
jg
adc
mov
enter
in
lret
iret
into
sbb
sbb
js
in
mov
and
dec
adc
mov
pop
pop
and
out
repz
sub
mov
mov
sub
outsb
je
stc
in
pop
jl
dec
fs
dec
or
in
pop
jle
es
pushf
jp
aam
xchg
xchg
pop
jle
cld
mov
aad
xchg
jecxz
mov
stos
sub
mov
push
jge
std
dec
test
mov
sub
or
push
pop
jns
jmp
aaa
push
icebp
sahf
clc
or
push
pop
jns
push
repnz
dec
int
movsl
out
inc
mov
fs
jns
xchg
fiadds
fistpl
rcr
mov
pop
push
pop
insb
cs
push
mov
pop
jle
idivb
adc
and
repnz
movsb
jne
jne
jge
pop
inc
enter
jmp
outsl
sti
addr16
aas
divb
xchg
xchg
pop
fldl
adc
mov
sahf
cmp
sub
stos
cmp
push
fimuls
add
pop
loop
in
aaa
aam
into
sbb
mov
int
xchg
push
pop
jns
pop
imul
mov
stc
notl
test
jns
adc
stc
in
pop
in
sub
xor
daa
pop
or
jo
popa
push
push
pop
jns
std
dec
dec
fwait
call
ja
fdivl
and
and
inc
jo
les
jmp
pop
jle
mov
push
sub
push
cld
cmp
pop
dec
dec
xor
ljmp
mov
scas
loopne
pop
loopne
lahf
sbb
jb
inc
mov
xchg
outsb
sub
in
dec
mov
not
imul
shlb
jge
push
je
loop
adc
mov
das
jle
in
and
jp
iret
jnp
pop
out
pusha
or
aam
jmp
inc
adc
mov
xchg
pop
jle
push
dec
mov
dec
leave
mov
pop
jle
lahf
pusha
es
pop
sbb
clc
pop
sub
lock
cmpsb
cmpsb
sbb
push
xchg
mov
repnz
scas
insl
push
jmp
aam
sub
ja
lret
dec
and
mov
or
or
push
cli
popf
scas
mov
jg
mov
out
aas
stos
fmuls
and
or
sahf
cmp
fwait
sbb
jns
push
inc
pusha
in
jb
xchg
mov
cld
xor
aad
fs
jb
dec
xchg
lret
mov
or
imul
repnz
arpl
adcl
sbb
jl
pop
mov
mov
das
hlt
mov
pop
cs
iret
inc
cli
cli
repnz
das
mov
add
lods
pop
lret
das
mov
pop
adc
pop
fwait
les
jo
mov
jns
cmp
mov
add
cld
repnz
pop
jmp
popa
dec
neg
sbb
enter
mov
cmpsl
hlt
add
in
push
fmulp
fwait
sub
gs
pop
jns
test
std
inc
cmp
ds
mov
add
mov
inc
punpckhbw
outsl
mov
shlb
sbb
xor
lcall
lods
mov
lret
das
in
push
xchg
and
adc
lret
das
mov
xchg
pop
loope
mov
jge
das
mov
mov
inc
jo
and
mov
xlat
adc
leave
jno
jmp
inc
out
mov
popa
jmp
or
sub
movsl
loopne
dec
jl
cwtl
in
pop
incb
lods
push
sar
fisttpll
addr16
jle
stos
cld
mov
mov
mov
and
imul
sub
or
pop
xchg
iret
lcall
les
lret
into
lea
add
pop
jle
mov
sub
mov
xchg
inc
jg
jl
in
loop
jg
dec
fistpl
jae
pop
in
xchg
ja
cmpl
in
jg
mov
loop
call
jns
xchg
mov
sbbl
xor
in
push
scas
jecxz
and
lds
in
cmp
push
pop
jno
pop
jle
ja
mov
and
push
xchg
adc
adc
mov
es
mov
popf
pop
adcb
and
sbb
fwait
enter
jmp
imul
push
push
ficomps
mov
stos
les
adc
xchg
stc
movsl
jge
add
and
gs
hlt
sub
gs
push
sub
xchg
bound
dec
lahf
pop
pop
jns
or
scas
mov
add
int
fsubs
nop
in
xchg
repz
lret
scas
jne
xor
dec
adc
pop
dec
outsb
lods
es
xlat
or
sub
ror
sub
shrb
dec
sub
scas
mov
mov
imul
jmp
ret
adc
inc
sarl
mov
imul
int
sahf
divb
stc
test
sbb
jne
adc
jg
loop
xchg
pop
jle
or
mov
mov
xorps
inc
leave
scas
inc
sbb
outsb
dec
push
push
cmp
stc
test
cld
movsl
es
je
dec
lretw
mov
test
ret
push
and
icebp
cld
loopne
push
or
lods
fnstsw
xchg
not
in
cli
mov
xchg
xchg
push
pop
jns
mov
mov
push
das
push
pop
jns
mov
fdivrs
sbb
inc
xchg
sbbl
in
and
loop
test
jb
xchg
push
xor
jno
mov
mov
dec
popa
cmp
mov
and
testl
sti
andb
arpl
mov
or
out
es
addb
lock
mov
popf
cmp
popf
xchg
int3
rcrl
out
insl
lods
dec
and
xchg
lods
cmp
cmp
test
in
pop
jns
fwait
adc
scas
repz
fidivrs
pop
mov
in
popa
sti
jge
in
test
cltd
or
inc
jle
xor
xor
push
popl
pop
stc
repnz
rolb
xor
xorb
pop
mov
call
xchg
rdtsc
jecxz
enter
pop
ret
aas
mov
cmpsl
nop
movsl
movsl
fcoml
movsl
sbb
or
inc
jge
in
adc
negb
add
pop
repnz
lret
inc
lea
imul
into
das
mov
inc
adc
mov
aam
imul
loope
mov
xchg
xchg
ja
cmp
push
cmp
push
test
in
inc
imul
pushf
mov
in
pop
jle
pop
loopne
movsl
das
xorl
ret
and
jmp
int
lock
xor
outsl
scas
mov
and
push
ss
scas
pop
mov
mov
nop
lods
dec
push
xor
aad
sbbl
xchg
pop
scas
sub
test
mov
lret
jno
jmp
pop
jns
js
cmp
mov
and
add
loope
push
test
movsb
xor
sbb
jns
and
mov
in
add
repnz
cmp
xchg
push
pop
sbb
ret
jmp
cmpsl
hlt
xchg
fmuls
push
mov
pop
xor
mov
test
repz
sar
enter
push
mov
fnstenv
in
push
faddp
sbb
xchg
imul
push
pop
jns
mov
leave
and
push
mov
std
fstl
jns
fistps
fisttpll
mov
sub
test
in
push
repz
sub
loopne
xchg
in
push
in
cmp
mov
add
in
push
pop
ljmp
insl
inc
into
pop
or
xchg
cs
in
adc
sub
in
sbb
ja
mov
xchg
loopne
in
pop
call
lret
pop
or
xchg
aaa
xor
xor
insl
iret
mov
adc
into
imul
bound
cmp
pop
das
push
pop
jns
sub
or
je
cli
scas
mov
and
mov
or
repnz
gs
pop
testb
lret
xor
jecxz
mov
cmpsb
js
cmpsl
inc
mov
sub
test
pop
nop
jge
in
jge
imul
and
jl
sub
ja
push
leave
cmpsb
lock
lods
mov
fisubrl
fsts
inc
xchg
mull
icebp
sbb
push
pop
jns
push
mov
fwait
stos
inc
push
mov
xchg
xor
imul
jg,pn
mov
and
and
clc
inc
mov
repnz
sub
ss
push
out
outsb
ss
mov
stc
in
cs
rep
sbb
pusha
stc
mov
fwait
adc
in
pop
jns
xchg
mov
or
insb
inc
scas
mov
aaa
jbe
div
repnz
sub
mov
movswl
mov
stos
movsl
mov
cmc
rol
loopne
mov
lret
dec
fdiv
fs
in
out
loope
scas
mov
or
scas
mov
sarl
mov
jbe
movsl
lea
lahf
push
rclb
clc
dec
jo
xchg
sub
jge
push
push
xchg
push
mov
je
xchg
enter
jl
stc
ja
mov
and
ficoml
in
pop
mov
add
xor
les
orb
lds
mov
xchg
ja
insl
in
in
and
or
xchg
push
pop
jns
dec
cmp
push
scas
out
shrb
test
xor
jb
nop
and
sbb
incb
push
aam
mov
xchg
pop
jle
inc
sbb
sbb
push
outsl
leave
xchg
xchg
pop
jle
in
dec
shrl
and
in
clc
or
std
push
ret
xlat
jb
fisubl
out
xchg
mov
lods
adc
adc
lret
das
mov
test
inc
or
rcrl
cld
pop
xchg
cmp
pop
cmpsb
fstpt
mov
mov
xor
dec
movsb
mov
je
mov
jg
jmp
repnz
stos
mov
pop
jns
cmp
mov
mov
in
add
pop
sbb
leave
mov
mov
lret
enter
stc
jnp
loopne
xor
jl
push
pop
jns
xor
out
push
inc
sub
sub
in
ds
stc
aam
in
call
in
push
cmc
mov
int
data16
test
xchg
push
pop
cmp
add
pop
das
jmp
mov
imul
xchg
push
pop
jns
movsl
fadds
je
dec
imul
pop
jns
adc
inc
xchg
jge
dec
adc
inc
jnp
in
test
rcrl
cmp
sub
cmp
bound
pop
fisubrs
mov
lret
sarb
cld
repnz
and
sti
mov
cmp
mov
andb
mov
jl
jmp
add
stc
pop
outsl
inc
stos
iret
adc
sub
inc
sbb
mov
jle
in
xchg
push
repnz
subb
lret
jl
in
in
call
bound
lret
mov
out
sub
outsb
adc
and
add
mov
mov
sahf
push
ljmp
pop
or
jge
pop
push
mov
lret
das
mov
dec
pop
lcall
das
mov
pop
pop
sub
inc
test
push
repnz
or
stc
repnz
iret
adc
loopne
dec
out
cltd
ljmp
xor
movsl
cmpsb
sbb
adc
jns
fnstcw
cwtl
popf
fidivrs
repnz
add
pop
mov
mov
mov
push
faddp
adc
cmp
fdiv
and
push
mov
xchg
lret
scas
and
sub
jne
push
add
in
test
push
frstor
lret
in
push
adcl
std
adc
lds
inc
js
xor
enter
sub
cmc
sbb
dec
and
xchg
pop
stos
imul
push
mov
or
xchg
pop
jle
and
xchg
fcomps
scas
inc
cs
fsts
jmp
jle
in
lcall
jnp
add
in
xchg
xchg
inc
cmp
sub
out
int3
ror
adc
cmp
in
mov
mov
fisttps
xor
dec
sbb
loopne
cmpsl
add
or
enter
mov
loope
push
sti
xchg
scas
jo
jge
pop
jle
shll
addr16
mov
cmpsb
cmp
pop
jle
in
xchg
mov
bnd
dec
jle
in
mov
lods
cmp
mov
enter
repnz
sub
loope
movsl
out
mov
xchg
das
mov
test
mov
icebp
outsl
or
lods
sar
cs
xchg
iret
cmc
mov
xor
sub
add
sub
mov
inc
out
dec
mov
and
popf
pusha
jno
in
or
repnz
inc
inc
int3
xor
loop
lea
lods
mov
jne
or
pop
mov
in
lea
dec
xchg
imul
sub
fldt
out
fucomp
lods
jo
movsl
lods
mov
mov
sub
pop
sub
dec
push
adc
lock
mov
and
or
adc
stc
mov
pusha
ds
and
dec
cwtl
jns
repnz
movsl
lret
and
xchg
ljmp
scas
mov
sbb
movsb
fildl
and
mov
jb
popf
dec
xor
leave
loopne
xchg
out
or
out
push
mov
xor
adc
int3
insb
repnz
xor
pop
cwtl
cmpsb
jne
popa
xchg
lret
mov
movsl
cmp
scas
xchg
pop
sahf
ljmp
loope
push
mov
ss
ds
mov
mov
jno
cld
repnz
add
add
dec
jecxz
pop
orb
jg
cmc
and
sbb
jmp
xor
or
daa
incb
data16
in
pop
jle
ret
inc
mov
faddl
sbb
inc
jmp
fldenv
stc
in
mov
rcl
test
jl
in
cmp
jecxz
add
sbb
and
push
or
dec
das
jg
scas
or
inc
call
jge
in
push
jp
psubusb
outsl
xor
out
xchg
pop
sbb
repz
clc
loope
sub
roll
das
mov
dec
push
push
and
pop
insb
out
pop
stc
repnz
or
and
in
cmp
leave
sbb
pop
loopne
sub
inc
xor
mov
mov
mov
or
inc
in
push
pop
sbb
pop
aaa
push
pop
sahf
and
loop
ret
xchg
push
pop
jns
sbb
sbb
adc
pop
sbb
jns
testb
xchg
cwtl
inc
and
add
in
mov
outsb
std
loop
fcomi
mov
jns
xchg
push
pop
pusha
mov
lret
call
jo
in
push
pop
sub
in
fildl
push
pop
jns
and
lret
pop
call
popf
movsl
jl
rorl
pop
pop
pop
pop
xchg
pop
aam
int3
push
aad
bound
mov
lret
push
loopne
mov
mov
punpckldq
popa
test
rcll
mov
adc
push
mov
rcrb
in
cmpsl
mov
jp
lret
sub
xchg
push
jmp
cwtl
jb
int
mov
pop
loope
adc
popf
xor
rclb
icebp
jg
mov
cltd
mov
and
push
in
push
pop
or
gs
inc
cli
fnstsw
mov
lock
repnz
pop
int3
sbb
mov
adc
dec
repnz
ds
iret
mov
push
jge
ds
stos
mov
push
mov
and
es
ja
xchg
xchg
jmp
mov
add
xchg
inc
jle
push
pop
into
out
cmpsb
scas
fbstp
jnp
std
mov
cld
lods
dec
cmp
stc
in
sarb
mov
push
ss
inc
jmp
push
and
inc
xchg
cmpsl
pop
das
mov
push
out
mov
xor
repnz
add
es
int3
imul
pushl
sub
addr16
adc
das
mov
loope
lock
mov
stc
sti
in
stos
fcmove
pop
jae
mov
sbb
jge
enter
xor
stos
in
pop
jle
testl
stos
mov
lea
fisttps
xchg
lret
in
push
add
pop
xor
mov
pop
inc
lahf
lea
push
mov
daa
xchg
out
or
cmp
aad
mov
scas
addr16
in
aaa
es
jbe
mov
rcll
cmpsb
lods
or
jecxz
pop
sarl
jge
in
imul
test
fs
mov
xchg
adc
mov
call
add
jl
ja
std
and
pop
xchg
mov
fs
lods
jb
test
bound
xchg
pop
jge
loopne
xchg
adc
mov
jae
call
push
stc
in
mov
sub
pop
loope
mov
adc
push
je
sar
xchg
clc
adc
repz
or
xor
adc
arpl
sti
or
cmp
das
mov
outsl
inc
lea
push
mov
cmp
int
mov
fucom
xchg
pop
jle
stos
pop
fadd
outsl
sbb
add
jle
sti
loop
and
int3
into
testb
pop
pop
jl
in
xor
xchg
divl
lret
rolb
jge
lret
mov
inc
xchg
pop
out
sub
fistpll
jns
mov
xchg
xchg
dec
sub
xchg
push
pop
insb
rorl
aad
stc
shlb
sahf
sub
pop
jns
xor
jmp
xchg
das
mov
inc
adc
adc
das
jg
jecxz
lea
imul
scas
adc
pop
jmp
mov
adc
arpl
jns
xchg
push
andl
aad
cmpsb
jnp
in
push
pop
repnz
in
aam
xchg
push
jne
arpl
test
push
pop
jns
rorb
repnz
loop
sub
push
pop
jns
cmpb
cmp
popf
jg
std
ss
in
push
sbb
movsl
icebp
jns
and
les
dec
mov
sub
daa
lock
in
mov
jmp
sbbl
jns
mov
mov
mov
mov
notb
mov
mov
ffree
inc
push
pop
cmp
in
sub
dec
push
scas
test
jg
and
lea
and
pop
in
inc
pop
jns
pusha
jne
adc
mov
pop
sub
pop
and
gs
std
jg
jnp
addr16
pop
jns
xchg
js
out
popf
inc
insl
mov
rcrl
lds
imul
rol
out
add
add
imul
mov
scas
mov
and
cmpsb
lock
test
enter
adc
insl
stos
imul
lahf
xchg
sub
cmp
hlt
je
out
inc
repnz
loopne
sub
pop
add
xchg
mov
sarl
xchg
in
or
dec
stos
fdivrs
mov
mov
roll
test
jae
in
sub
xchg
jg
jnp
jge
add
jbe
pop
jle
sahf
ljmp
xlat
mov
rcrb
stc
in
xchg
hlt
push
or
nop
mov
push
ds
popf
js
scas
lcall
jg
and
popa
dec
inc
sahf
adc
iret
test
insb
and
imul
and
in
dec
aam
gs
push
mov
sub
xor
add
repz
add
stc
ja
xlat
fnsave
stc
fimuls
enter
dec
and
push
mov
fcompl
leave
mov
negb
cmp
jle
in
scas
loop
or
inc
pop
inc
cmp
pop
sbb
dec
pusha
pop
mov
mov
lret
outsb
frstor
cmp
sbb
sbb
repnz
lahf
lds
xlat
inc
add
sub
xor
outsl
lret
jle
and
xor
ficoml
mov
repnz
pop
andl
push
xchg
dec
adc
repnz
das
aaa
cmp
push
mov
xchg
aad
repnz
das
mov
cmp
xchg
mov
sub
cld
icebp
mov
das
mov
cltd
push
test
xchg
and
ret
xor
mov
stos
pop
mov
insb
adcl
orl
ficoms
jns
mov
inc
mov
push
jmp
inc
mov
xchg
cmp
sub
xchg
stos
add
cmp
lea
imul
enter
push
into
fstl
mov
adc
jns
repnz
cmp
sub
xchg
push
lods
mov
repnz
repnz
pop
flds
mov
push
lock
movsb
in
mov
in
pop
jmp
jge
xor
mov
ror
jmp
das
mov
inc
adc
pop
cwtl
repnz
mov
bound
and
mov
fsts
arpl
dec
or
enter
jmp
test
or
pop
sub
mov
dec
outsl
hlt
mov
das
mov
in
push
into
mov
das
mov
sub
xor
jb
mov
repnz
pop
xor
int
aas
and
imul
sbb
add
push
xor
pop
outsl
jbe
and
scas
mov
dec
inc
xchg
lods
icebp
inc
xchg
pop
loopne
jae
mov
mov
std
sbb
sti
in
in
jmp
mov
iret
sub
lret
das
incl
test
insl
dec
cmp
lret
das
mov
adc
imul
repnz
nop
clc
jge
lea
repnz
pop
gs
jecxz
lea
mov
hlt
frstor
les
fwait
lds
in
inc
or
adc
pop
pushf
lcall
stc
in
pop
jne
outsb
inc
and
outsb
iret
fsubr
xchg
pop
jle
push
fs
fbstp
cld
repnz
scas
push
or
in
pop
je
xor
lret
mov
fidivrs
push
adc
cmc
xchg
das
outsl
sub
xchg
movsb
push
stos
mov
mov
fcmovbe
lock
outsl
xlat
mov
js
in
mov
scas
mov
cmp
lock
mov
fwait
jbe
mov
lea
imul
and
mov
inc
cmc
xchg
das
mov
sbb
mov
stc
inc
cmp
sbb
jne
dec
das
mov
pushf
jae
int3
sbb
aaa
ljmp
in
dec
xor
xchg
sbb
sbb
lods
scas
enter
xlat
cld
dec
outsb
jl
in
mov
dec
jb
dec
dec
adc
jb
jg
mov
out
xchg
sub
icebp
out
or
subl
sub
jg
das
mov
mov
dec
push
lret
out
jl
movsb
cld
jnp
enter
imul
mov
shlb
jecxz
das
loope
and
movsl
mov
in
and
icebp
mov
inc
out
pusha
in
pop
jle
shl
loopne
mov
lret
mov
cmp
mov
sbb
rclb
push
fsts
xchg
ja
divb
loop
sub
add
les
jns
or
xchg
test
dec
sbb
xchg
push
pop
sub
pusha
pop
call
adc
pop
and
jns
fs
imul
mov
mov
dec
outsl
bound
add
ficomps
inc
fsin
std
lret
add
repnz
das
inc
popa
pushf
mov
push
cwtl
aaa
repz
adc
pop
nop
sbb
clc
jns
lret
das
mov
xchg
or
mov
in
roll
dec
inc
cmp
jg
jns
xor
mov
repnz
das
roll
addr16
movsl
dec
jnp
push
dec
push
sub
repz
sub
or
popa
test
test
out
in
stc
scas
mov
lahf
and
int3
outsl
mov
enter
push
enter
stc
push
inc
push
pop
jns
cmp
dec
daa
dec
pop
mov
gs
xchg
push
mov
and
xchg
repnz
pop
push
pop
aam
jns
jno
pop
movsb
iret
lea
inc
sub
dec
imul
jns
or
shlb
xor
mov
filds
jge
fs
dec
push
lds
orl
pop
jle
lods
lock
hlt
jae
xor
xor
inc
pop
jle
in
in
push
or
into
pop
ljmp
push
stc
in
cld
repz
inc
xor
ficomps
repnz
das
call
push
dec
pop
cmpb
mov
xchg
mov
imul
das
mov
and
out
loope
popf
and
pop
mov
bound
int
notl
sub
push
lds
adc
call
mov
sbb
xor
idiv
enter
leave
jae
pushf
into
cmp
adc
pop
lret
das
mov
out
sub
xchg
mov
orb
cmp
adc
dec
outsb
sub
movsl
rolb
lret
mov
int
inc
add
sbb
jns,pt
mov
cld
xchg
sbb
pop
ss
stc
mov
pushf
cmp
movsb
jb
hlt
mov
sbb
popa
stc
in
pop
mov
cmp
imul
ja
xchg
pop
jle
aaa
mov
xor
push
hlt
int3
insl
sbb
scas
mov
stc
mov
rcr
adcl
xchg
in
mov
arpl
in
dec
sub
rolb
jbe
fnsave
ds
cld
fbstp
push
cmp
lcall
mov
dec
sbb
xor
jmp
stc
repnz
das
sbb
ljmp
xchg
inc
pop
pop
shll
pusha
imul
outsb
shll
sbbl
imull
imul
pop
jns
fs
addr16
lods
in
test
fsubrs
test
lret
sbb
inc
lret
inc
jg
stc
repnz
sbb
jmp
mov
or
jle
in
xchg
cmp
cmpsb
in
pop
cwtl
xchg
fisttpll
stc
in
pop
pop
es
or
sbb
xchg
pop
jle
mov
push
jnp
loope
xchg
pop
jle
sbb
sbb
mov
fiadds
enter
or
scas
jg
mov
xchg
push
pop
sub
iret
bound
xchg
push
pop
pop
push
test
iret
jnp
lret
pop
addb
jecxz
jae
ds
mov
and
jnp
xlat
xor
pop
imul
cmpsb
inc
idivb
enter
mov
and
jns
cmp
push
mov
adc
and
sbb
sub
sub
call
pop
pop
loop
inc
leave
dec
ret
cmp
stc
in
mov
imul
xchg
and
xchg
out
push
pop
cmp
cmpsl
cmp
outsb
pop
mov
dec
cmpsb
mov
pop
cltd
das
bound
call
adc
pop
jle
inc
mov
pushf
lods
cmpsb
xchg
mov
test
cmp
xchg
jecxz
in
xchg
xchg
push
push
dec
cmp
cwtl
adc
or
icebp
push
xchg
cltd
hlt
scas
inc
mov
xchg
cltd
stc
sub
xor
arpl
add
iret
into
ds
push
cmp
jmp
stc
in
inc
rorl
das
or
jg
fildl
loopne
outsl
sbb
adc
or
pop
jle
mov
int
mov
imul
cld
repnz
push
lcall
loop
adc
shrb
shlb
mov
into
push
lret
mov
pop
imul
sub
add
pop
and
subb
inc
jnp
mov
les
sub
std
dec
and
mov
pop
aas
leave
add
in
push
fidivs
mov
xlat
fldl
arpl
xchg
push
pop
jns
lcall
stos
repnz
sub
sti
fcoml
fnsave
mov
mov
data16
test
cld
repnz
sbb
dec
out
mov
cld
repnz
lock
dec
jno
test
add
mov
push
xchg
das
sub
push
mov
into
mov
inc
in
das
and
or
repnz
fcoms
mov
xchg
sub
call
dec
pop
cltd
mov
inc
imul
sbb
scas
add
int3
clc
adc
pop
inc
fnstsw
scas
mov
cmp
adc
mov
or
and
push
ss
in
sub
pop
cli
aam
jge
fldt
scas
mov
add
jp
add
mov
jne
enter
adc
cs
lds
jns
inc
mov
lcall
xchg
push
aas
adcl
test
pop
cmp
dec
pop
movsl
cmpsb
cmpsl
data16
es
loopne
mov
repnz
repnz
int
lds
mov
fldenv
das
mov
sub
sub
lret
push
dec
inc
add
adc
in
xor
cld
pop
popf
or
jb
mov
dec
js
stc
jle
in
and
loope
es
das
ds
cwtl
mov
mov
jne
cmpsb
dec
das
mov
jns
rorl
jl
aam
insl
xor
mov
aas
sahf
das
notl
pop
mov
test
cld
repnz
das
adc
adc
aaa
push
scas
repnz
das
mov
int
sti
je
movsb
out
dec
enter
fprem
shrb
sub
jg
fs
out
test
xor
jecxz
pop
jle
push
sub
pop
jns
and
std
out
mov
fldl
pop
jns
xchg
push
adc
mov
dec
ja
xchg
jg
fisubrl
test
loope
out
dec
xchg
pop
jle
jmp
pop
xchg
dec
in
sbb
js
lahf
add
jle
in
sub
push
dec
fstl
xchg
ds
lock
dec
push
stc
xchg
cld
mov
inc
daa
and
clc
xchg
lret
hlt
out
mov
aam
sbb
pop
dec
and
push
pop
jns
mov
iret
and
fwait
cmp
jns
scas
mov
cwtl
xchg
or
or
jns
xchg
pop
shlb
push
popf
add
inc
push
mov
jne
inc
mov
xchg
pop
jle
sub
insl
mov
inc
jb
mov
mov
dec
lods
inc
outsb
adc
addr16
call
ficomps
in
and
jp
xchg
jle
cld
cmpsb
enter
push
mov
es
or
clc
push
rsm
and
orl
fidivrl
repnz
in
pop
jle
push
mov
nop
lret
pop
das
mov
repnz
add
and
in
repnz
cli
mov
mull
or
and
repnz
adc
xlat
jle
in
xchg
mov
or
fadd
jle
sti
enter
inc
mov
sub
shll
std
fbld
push
nop
mov
cli
and
cld
bnd
sbb
push
jecxz
xchg
mov
cld
repnz
push
dec
cmp
ss
inc
bound
jns
mov
push
inc
addr16
pop
bound
in
jne
cmp
repnz
dec
dec
jle
in
rcl
orl
nop
dec
stos
in
push
aam
das
call
pop
orl
mov
inc
mov
pop
jns
add
cmc
sbb
inc
push
pop
and
push
pop
mov
xchg
cli
and
mov
sahf
push
sub
repnz
das
sti
mov
mov
addl
repnz
das
mov
adc
ret
fildll
adc
lret
das
mov
or
cmp
sbbb
cld
repnz
test
push
mov
mov
addr16
vpmadcsswd
adc
or
icebp
sbbb
dec
mov
pop
hlt
xchg
je
in
jg
xlat
mov
enter
add
mov
cmp
mov
pusha
xchg
pop
sub
mov
lds
mov
out
leave
fst
leave
xchg
dec
mov
popf
xchg
xchg
stc
test
push
stc
mov
test
lods
mov
arpl
lods
pushf
dec
imul
mov
arpl
notl
outsb
ja
movsb
and
jl
sti
lret
mov
dec
push
xor
jge
outsl
add
out
dec
jl
push
add
ja
pop
insb
lods
sub
mov
in
mov
and
jl
out
enter
ss
mov
ds
das
mov
and
pop
repnz
in
das
mov
or
lcall
idivb
cltd
mov
call
adc
cld
repnz
mov
arpl
mov
add
push
push
ficomps
cmpsl
out
xchg
push
adc
daa
dec
jne
pop
jns
xchg
lods
jne
pushf
push
inc
fmuls
fimuls
push
sarl
sbb
mov
sbb
xchg
mov
rol
dec
ja
inc
in
enter
jge
nop
lock
mov
je
push
cwtl
fbld
inc
ret
out
xchg
sub
push
loopne
outsb
out
fld
das
mov
push
addr16
push
inc
jge
lret
movsl
mov
cli
popf
inc
sbb
inc
pop
jns
icebp
mov
adc
stos
and
and
mov
in
stc
xchg
push
pop
jns
decl
test
inc
shll
jge
xor
test
sahf
ss
into
sahf
cmc
pop
cmp
mov
xor
fstps
arpl
sub
fnsave
in
rclb
mov
repnz
xchg
push
pop
jmp
xchg
insb
lahf
rorl
inc
mov
lret
out
ljmp
add
cmp
adc
in
mov
repz
push
inc
insb
lock
lret
aas
jp
lret
cmp
bound
jl
xor
test
push
aad
inc
pop
jle
in
pop
les
lahf
cmpsb
and
xchg
xchg
mov
lods
push
add
lock
in
pop
jle
cwtl
cmp
and
xor
xor
push
insb
mov
lcall
xchg
pop
jle
fdivs
int
in
out
in
aas
jns
in
mov
addl
add
mov
sti
mov
lret
add
push
lock
jb
hlt
jns
push
out
insb
pop
hlt
or
xchg
sub
mov
xchg
pop
jns
call
mov
mov
or
lret
pop
test
add
sub
pop
lret
mov
jmp
pop
scas
fldt
scas
mov
loopne
ds
mov
lcallw
mov
es
sbb
push
fists
sub
adc
jns
in
vpcmpeqb
andb
xor
inc
fmul
scas
xor
pop
and
cmp
fldcw
jnp
ss
jg
cmpsl
push
ret
scas
add
sbb
inc
pcmpgtw
inc
in
test
dec
insb
xchg
fldl
pop
jns
add
and
dec
lods
sti
sub
inc
rorb
in
cmp
mov
scas
lcall
push
or
mov
xor
push
cs
shll
repnz
mov
sub
test
scas
mov
inc
popl
mov
xlat
mov
lahf
fildll
ss
cmp
ds
jb
push
loopne
cmp
stc
notl
jge
xchg
push
mov
in
pop
jle
push
lea
and
stc
imull
add
sub
jle
push
loope
sti
mov
mov
inc
xchg
inc
mov
xor
lret
ljmp
scas
xchg
mov
xchg
push
pop
jns
cs
inc
cmp
xchg
mov
mov
cwtl
out
inc
xchg
lods
or
lods
and
jmp
pop
jns
push
and
pushf
xchg
cmpsl
daa
lret
add
divps
xchg
js
in
rcrb
int3
mov
jns
xchg
push
mov
sbb
push
stos
ss
push
pop
in
xchg
mov
pop
jns
imul
daa
mov
jns
pusha
out
cmp
fldcw
xchg
jns
xchg
scas
in
cmp
dec
imulb
mov
in
push
outsb
lahf
adc
mov
arpl
inc
in
push
pop
pop
adc
sub
pop
cltd
cld
xchg
push
pop
jns
arpl
add
ja
mov
mov
push
pop
jns
mov
push
lcall
and
jge
xor
mov
dec
lret
mov
xchg
add
cli
pop
sub
aaa
aad
repnz
shll
repnz
adc
sub
in
lcall
lret
scas
fadds
pop
fs
xchg
sub
addr16
jl
pop
jns
call
push
aas
fcoms
cwtl
pop
movsb
jns
xchg
push
lods
mov
loop
mov
mov
test
pop
dec
inc
cmp
add
call
aaa
xchg
push
pop
jns
testb
dec
mov
cmp
stc
in
cmc
popa
adc
xchg
dec
sahf
daa
dec
pop
add
ret
in
pop
je
mov
sub
bound
addb
mov
popf
xlat
pusha
movsl
mov
add
shll
insl
xlat
and
das
mov
cmp
out
jnp
mov
clc
das
mov
cmp
push
or
add
jl
cld
repnz
test
add
es
fwait
mov
in
and
and
mov
pop
xchg
dec
pop
shrl
xor
add
data16
nop
jnp,pt
in
and
je
addr16
jecxz
mov
xchg
mov
imul
xchg
mov
pop
jns
sahf
sub
mov
lret
icebp
add
sub
cmp
inc
repnz
lcall
inc
push
pop
js
lea
mov
pusha
cmpb
xchg
mov
mov
xchg
push
pop
jns
sbb
jae
sub
cwtl
mov
push
pop
jns
xchg
imul
xchg
fiaddl
in
rcll
popa
into
mov
data16
xchg
push
out
movsb
negl
scas
cmpsl
fcmovne
sub
sub
mov
sub
pusha
jmp
sbb
mov
mov
mov
dec
loop
mov
adc
xchg
pop
xlat
mov
cmp
test
stc
jle
fmuls
lret
outsb
aaa
xor
pop
jns
popf
sub
call
lret
add
outsl
fadds
in
push
inc
enter
pop
xlat
outsl
sbb
inc
push
pop
xlat
dec
dec
fidivs
loopne
mov
repnz
cmpsl
xchg
mov
int
leave
insl
inc
sub
scas
mov
push
dec
into
pop
mov
xchg
lret
cmp
lret
sub
sti
in
push
mov
dec
push
shlb
ficoml
hlt
mov
in
dec
addr16
jle
sarl
and
cmc
xchg
das
mov
add
lds
jnp
pop
jns
lea
popa
out
inc
dec
jns
sub
in
push
xor
and
sarb
xchg
push
pop
cs
and
shr
outsl
sbb
out
mov
add
scas
add
mov
into
ficoml
pop
inc
lds
sub
mov
sub
ja
mov
lret
arpl
cli
fbstp
add
movsb
scas
repnz
enter
sbb
in
and
xchg
cld
pop
mov
inc
pop
adc
inc
cld
outsl
jns
sub
mov
gs
popa
int3
push
shl
xchg
push
pop
mov
jmp
icebp
movsl
sahf
inc
cmp
hlt
cmpsl
jle
inc
jle
jecxz
stc
in
stc
push
ret
xor
test
pop
fsub
stc
in
pop
inc
dec
call
je
imul
nop
ret
ss
xchg
ds
push
sub
fisttpll
stos
fs
das
fldt
add
or
lret
and
pushf
mov
scas
mov
bound
sbb
lods
add
shlb
xchg
pop
jle
std
adc
popf
jnp
inc
push
aad
jmp
adc
ss
mov
scas
mov
jmp
mov
or
ds
xchg
sub
bound
dec
dec
inc
mov
cmp
jl
in
out
jl
inc
int
fbstp
jle
mov
dec
loopne
loop
repnz
mov
not
dec
pop
and
in
lcall
ja
and
aaa
bound
in
push
ljmp
lds
jle
in
shrb
arpl
mov
and
dec
iret
daa
stc
in
pop
push
mov
inc
xchg
dec
je
xchg
pop
jle
dec
pop
jns
push
and
adc
in
mov
fucomip
sub
xor
in
int3
pop
jns
jge
inc
pop
scas
inc
mov
pop
dec
in
jg
stos
mov
and
sbb
js
dec
and
shl
lret
jne
mov
inc
sbb
sub
mov
dec
sub
jns
call
push
in
jle
mov
enter
add
sbb
repnz
cmp
repz
push
jnp
dec
jecxz
lret
mov
jae
aad
jb
jo
sub
xor
jnp
sbb
or
cld
scas
mov
lcall
and
ljmp
adc
pop
stc
in
in
mov
push
jg
push
icebp
mov
cmp
jns
xchg
push
dec
pop
ds
iret
cld
xchg
fwait
mov
cmp
xchg
push
pop
cmpsb
ret
std
popf
push
aas
push
scas
mov
pop
movsl
add
fistps
in
sub
gs
hlt
enter
add
inc
dec
rol
into
or
dec
jecxz
sbb
f2xm1
lods
sub
repnz
leave
inc
push
jnp
xchg
pop
out
sbb
sub
cmpsl
sbb
mov
cmpsb
enter
pop
and
sbb
std
js
orb
cmpsl
mov
shll
int
jmp
repnz
outsl
xor
stc
jnp
dec
mov
xchg
mov
incb
pop
mov
mov
mov
fnstcw
dec
inc
stc
in
pop
daa
mov
stos
and
mov
push
icebp
mov
lret
dec
jae
iret
test
test
jns
popf
mov
mov
or
call
inc
xchg
mov
jp
scas
mov
adc
add
jmp
loope
adc
sub
aam
or
or
in
pop
and
xchg
sub
adc
into
lock
jns
cmp
dec
ret
cmp
sub
lock
xchg
push
mov
je
inc
cmpsb
imul
shrl
mov
es
popf
imul
jg
cld
cmp
lret
data16
jbe
pop
and
lret
das
mov
xor
push
and
orb
lods
add
mov
inc
push
push
js
fbstp
dec
and
dec
sub
in
jg
or
ljmp
in
or
in
pop
jle
xor
clc
in
inc
sbb
mov
adc
xor
push
pop
in
arpl
movsb
popf
pop
xchg
inc
sti
ficomps
shrl
mov
sub
movsl
jo
dec
add
fcomip
mov
inc
outsl
and
ljmp
sarb
es
repnz
in
int
jnp
and
std
xor
out
push
nop
push
mov
xchg
push
jmp
pop
sti
mov
jp
iret
es
pusha
jle
pop
jns
xchg
xchg
cmp
js
inc
sub
pop
fisttpl
dec
lods
js
sbb
lahf
adc
pop
jle
addr16
loop
or
mov
mov
adc
nop
adc
sarl
in
jbe
mov
adc
mov
lret
mov
adc
push
call
cld
cmp
xchg
jmp
data16
pop
jge
sti
fnsave
cwtl
aad
fmull
out
maskmovq
jle
in
fidivl
inc
cmp
xor
lods
sar
xchg
pop
or
outsl
dec
cmp
jg
and
sti
sub
mov
jmp
repnz
and
iret
fucomi
jmp
cmpsl
cmp
inc
mov
das
pop
mov
xlat
scas
push
pop
jns
xchg
repnz
mov
ljmp
jbe
test
aas
inc
push
and
and
stc
cmpsl
xor
sub
mov
test
pop
test
and
mov
into
cld
repnz
das
movb
adc
in
das
mov
into
out
sbb
test
sub
jge
movsl
out
xor
jg
mov
cwtl
pop
insl
push
icebp
or
ja
add
mov
scas
sub
push
push
lahf
lea
mov
gs
fmulp
das
mov
mov
in
xchg
or
repnz
xor
mov
je
pop
push
lock
xchg
das
mov
into
cmpsb
cmp
popa
inc
jle
idiv
gs
je
adc
jle
inc
pop
sti
repnz
push
vhaddps
xor
mov
test
dec
das
lea
pusha
in
subb
test
lret
das
mov
fucomip
mov
data16
lcall
add
out
scas
fwait
adc
lret
mov
lret
fsin
cmpsb
call
xchg
imul
jmp
or
insb
push
cmp
lods
mov
mov
dec
hlt
mov
xchg
push
pop
jns
fiadds
mov
fs
add
std
push
pop
jns
mov
enter
mov
pop
jns
xchg
aad
rcr
inc
xor
cmpsb
dec
lods
jb
xchg
push
mov
mov
mov
outsl
or
arpl
out
add
cmp
mov
lds
imul
icebp
call
mov
out
dec
sub
xor
test
js
push
repnz
mov
int
push
or
jge
das
mov
lds
adc
and
or
cld
repnz
push
fcmovnbe
call
pop
pushf
imul
inc
js
out
pop
cld
imul
dec
pop
lds
xchg
out
sbb
pop
jle
ret
dec
sub
dec
xor
push
ficomps
clc
cld
push
xchg
sub
mov
rcrb
jns
xchg
dec
ljmp
dec
aas
clc
or
push
pop
dec
mull
adc
repnz
stos
push
mov
inc
test
in
sbb
xchg
xor
movl
ror
loopne
add
mov
in
xchg
and
cmp
pop
enter
popf
jp
lock
add
stc
sti
sbb
ret
ret
arpl
pop
jns
pop
mov
jno
push
scas
xchg
sbb
in
les
add
dec
mov
dec
mov
aad
mov
push
mov
cmpsb
setg
sahf
pop
fildll
dec
pop
lcall
lret
or
loop
xchg
cltd
lret
mov
out
adc
add
scas
mov
cmp
aaa
jbe
lds
scas
mov
in
sub
mov
cmp
mov
add
pop
stc
pushf
ja
sbbl
lret
mov
and
or
cld
cmp
adc
into
sbb
fadd
leave
decb
enter
adc
sub
in
ds
lret
clc
and
pop
imulb
sub
lret
das
pushl
xchg
jnp
lock
dec
stos
adcl
testb
movsl
hlt
les
jp
push
ja
jmp
incl
stos
jg
pop
jns
out
adc
popf
fwait
xlat
xchg
xor
jns
ljmp
or
xchg
push
pop
cwtl
add
pop
int3
pop
clc
into
push
and
xchg
push
pop
jns
cltd
jne
adc
mov
add
sbb
fnstsw
dec
dec
sbb
andb
scas
mov
lock
jmp
mov
out
dec
int3
dec
lcall
mov
push
jecxz
into
fld
rorl
lret
adc
aam
adc
jge
add
das
mov
xchg
lds
ja
out
andl
lock
repnz
jp
mov
int3
sub
addr16
repnz
das
cmp
sahf
or
mov
mov
lds
popa
push
lds
pop
lods
cmp
add
sub
mov
sub
in
scas
xchg
lret
mov
jbe
daa
inc
xchg
dec
jne
push
push
mov
push
ja
xor
in
ja
popf
dec
in
adc
xchg
inc
cwtl
push
clc
inc
xchg
push
pop
xchg
out
int3
sbb
jmp
dec
pop
insb
cmp
and
lahf
xor
xor
sub
xchg
mov
sub
mov
fcomi
adc
lret
sbb
cmp
adc
out
mov
addr16
nop
adc
in
repnz
lods
xchg
gs
not
fidivrs
lret
mov
mov
sarb
scas
mov
popa
sbb
lret
mov
lret
xchg
andl
scas
dec
repnz
ss
sbb
lret
iret
inc
jg
out
jnp
cmp
repnz
sbb
das
je
loop
cmp
pop
sbb
inc
mov
push
cs
stc
in
mov
jmp
es
add
pop
out
pusha
in
ret
sub
repnz
adc
clc
fsts
dec
cltd
pop
cmp
add
jge
fistl
cmpsb
sub
leave
jle
in
std
lods
aam
lcall
xor
imul
and
xchg
mov
jmp
or
ds
and
xor
pushf
mov
xchg
out
test
add
xor
xchg
mov
and
jecxz
sub
scas
mov
push
lods
cwtl
stc
mov
xchg
xor
push
in
sub
sbb
jbe
dec
mov
jecxz
push
stos
xor
lret
cwtl
inc
pop
cmpsl
xchg
pop
sbb
cmpsb
cmp
aas
clc
jno
jnp
mov
bound
sbb
cmpsl
movsb
lret
mov
xlat
cwtl
pop
fnstenv
stc
in
jp
repz
inc
or
cmp
and
and
mov
repz
clc
js
das
ds
mov
lret
xchg
jns
mov
repnz
xchg
loope
add
dec
jge
lret
das
ja,pt
dec
jb
dec
jne
dec
mov
jne
push
sub
out
inc
cmp
cwtl
push
test
mov
xor
inc
movsb
fists
xor
push
pop
mov
sbb
iret
inc
pop
bnd
int
xlat
cltd
movsl
push
ja
push
jle
in
fwait
lret
cmp
mov
xchg
cmpsl
repnz
pop
movsb
mov
daa
sbb
dec
inc
lea
addr16
cmp
pop
daa
xchg
jge
insl
push
mov
jl
in
fdivrs
inc
pop
sub
sbb
in
and
mov
lret
mov
pop
xor
inc
or
cld
add
dec
mov
mov
cmp
hlt
jmp
lods
not
push
mov
mov
aad
inc
outsl
adc
cmp
scas
push
lahf
in
outsl
stc
in
leave
mov
jne
clc
sub
xchg
pop
jle
dec
add
out
inc
dec
insb
inc
xchg
negl
or
sbb
jp
jl
in
arpl
js
mov
icebp
adc
xchg
ret
dec
pop
cmp
insl
dec
push
push
cmp
sub
out
xor
xchg
pushf
int
outsb
and
clc
enter
or
add
nop
push
cmp
xchg
jg
mov
in
mov
adc
pop
jle
movsl
std
arpl
push
push
imul
pop
jmp
xchg
repnz
xchg
pop
pop
mov
stos
mov
pop
or
stc
cmp
scas
mov
xchg
out
mov
dec
faddl
repnz
popf
les
xchg
pop
xor
xchg
addr16
mov
lods
imul
add
sbb
aad
gs
lret
lea
jb
jge
push
mov
sub
popa
loop
lods
pop
ret
dec
pushf
leave
cli
enter
loop
rol
imul
stos
mov
mov
xchg
jo
aam
jg
cld
int3
stc
fs
mov
into
add
push
or
and
lret
pop
jge
shll
pop
lea
jle
repnz
popf
loopne
mov
rclw
ja
cmp
insb
jge
lret
aas
jge
mov
stc
mov
mov
jmp
adcb
jle
outsl
das
mov
sahf
lds
sub
xor
xor
and
lret
or
nop
xchg
jb
lret
mov
jg
xor
cwtl
sbb
pushf
lret
das
mov
popa
xor
sub
inc
xchg
lret
cld
repnz
cld
push
mov
imul
mov
out
ds
gs
imul
xchg
pop
push
in
mov
out
push
adc
cld
mov
or
add
icebp
int
mov
mov
imul
insb
outsb
aaa
jle
add
out
int3
aam
inc
das
xor
imul
pop
mov
mov
sub
pop
ret
pop
jns
or
add
fwait
int
notl
or
or
jle
std
pop
ficomps
popf
andl
jo
fimull
shll
test
jns
xchg
push
adc
dec
adc
xchg
xchg
push
pop
cmp
pushf
jp
adcb
into
xorb
out
push
inc
out
test
cmp
inc
addr16
mov
and
push
jmp
jl
aaa
mov
push
fidivl
add
inc
sahf
jg
mov
jnp
mov
xchg
push
or
pop
loopne
push
xor
rclb
mov
movsb
lods
mov
sarl
fcmovnb
in
test
mov
pop
lcall
lcall
push
ret
mov
in
and
ja
mov
xchg
mov
leave
lods
sbb
pop
stos
jno,pt
fs
push
xchg
mov
sub
dec
mov
adc
stc
pop
add
jnp
test
dec
test
in
sbb
fcoms
sub
int3
int
enter
test
xchg
jl
mov
stc
addr16
cwtl
imul
mov
inc
push
or
in
pop
je
xlat
adc
cmp
ret
sub
in
pop
jle
push
xchg
mov
das
add
std
mov
push
stc
lods
insb
push
xor
add
xchg
pop
jle
in
test
leave
jmp
dec
imul
jle
in
mov
pop
jns
sbb
lods
add
cmp
inc
jmp
xor
call
daa
pop
add
fwait
sub
add
mov
mov
pop
cmpsl
mov
ds
cmpsl
inc
jle
in
arpl
cli
jp
xchg
push
jnp
xchg
mov
mov
imul
adc
inc
mov
push
jne
cmp
push
mov
stos
inc
test
loope
and
in
in
mov
mov
adc
and
jge
dec
xor
add
movsl
sti
lea
fcmovbe
cmp
xchg
pop
xchg
xchg
jg
fsub
popa
pop
ret
sbb
xchg
xor
jle
in
pop
test
mov
mov
mov
js
xchg
stc
push
jno
sbb
fcoml
addr16
stos
sti
xchg
xchg
ja
add
popa
fs
test
mov
or
fcompl
cwtl
xor
das
jmp
push
sbb
imul
pop
jns
outsl
mov
fiaddl
ja
mov
test
les
repnz
push
pushf
mov
pop
scas
inc
jl
add
jg
cld
cmp
and
lret
jle
in
int
xor
stc
cmp
in
pop
dec
lahf
or
inc
lods
inc
repnz
es
jo
adcl
scas
mov
stos
movsl
cmpsl
mov
lds
xlat
push
cs
mov
out
arpl
pop
adc
mov
cmp
adc
pop
stc
repnz
xlat
add
ja
sbb
push
or
repnz
ret
push
xor
jl
and
scas
dec
xchg
popf
xlat
push
pop
fsubrs
xor
test
inc
test
sub
inc
test
push
pop
jns
repz
pop
outsb
xchg
jge
inc
es
pop
jns
lcall
push
jp
insl
cld
xor
pop
jns
xchg
testl
cmp
adc
or
sbb
mov
xchg
das
enter
dec
in
es
pop
imul
in
jmp
in
stc
inc
hlt
popa
loope
sbb
mov
ds
sahf
ss
std
xlat
out
push
pop
jns
cli
jne
cli
dec
lods
test
scas
mov
pop
jns
xchg
mov
xchg
jp
mov
addl
stos
and
mov
inc
push
in
xchg
sahf
int3
xor
lds
outsl
out
jns
xchg
and
xchg
sbb
cmc
xor
cli
sbb
lock
pop
repnz
jecxz
xchg
pop
jle
sub
loop
cmp
pusha
loope
lods
pop
jle
in
xchg
xchg
movb
mov
xchg
mov
neg
xchg
out
fnstenv
ror
pusha
or
jle
aam
inc
in
ret
jno
fsts
fldl
xchg
cmpsl
pusha
out
mov
pop
jle
in
ljmp
in
mov
cld
jnp
xchg
or
mov
adc
das
dec
repnz
das
mov
sbb
std
add
fbld
mov
out
mov
mov
stc
mov
stc
in
cmp
mov
mov
pusha
shll
cld
repnz
and
int
mov
repnz
das
mov
jg
mov
lret
das
mov
dec
cmp
sub
mov
mov
or
test
inc
pop
iret
loope
mov
dec
repnz
pop
cmp
lcall
sub
sub
xchg
push
or
adc
mov
mov
adc
cmp
cmp
cwtl
adc
cmpsw
imul
xchg
pop
jge
push
je
push
mov
jecxz
push
ja
repnz
mov
int
clc
repnz
lret
das
mov
and
cmp
pop
cld
bnd
outsb
iret
pop
rorl
mov
inc
in
push
fisubs
mov
mov
loopne
testl
inc
xchg
dec
and
addr16
or
jns
fcmove
sarb
mov
js
xchg
xchg
cwtl
mov
push
mov
xor
stc
in
daa
mov
dec
cmpsl
gs
rcll
aam
mov
jle
std
add
lahf
outsb
inc
lahf
adc
stc
into
data16
xchg
inc
addl
out
sbb
sub
loope
aas
lret
das
mov
jp
out
pop
push
aam
hlt
das
mov
mov
mov
bound
pop
stc
mov
or
shr
pop
nop
test
sbb
repnz
das
adc
inc
movsb
mov
in
pop
jo
lret
das
mov
stos
sub
cmp
sub
jbe
push
cwtl
jns,pt
iret
and
jns
xchg
push
push
jns
push
xor
pop
sarb
mov
adc
inc
pop
jns
out
sbb
insl
adc
xchg
das
mov
movsb
xchg
or
dec
xchg
nop
adc
ds
shlb
add
das
cli
fadd
repnz
daa
das
cmp
andb
jmp
xchg
pop
cmp
popf
adc
jmp
sbb
stc
in
lock
mov
addr16
imul
dec
lods
das
repz
sbb
idivb
xor
xlat
jns
inc
jp
cmp
cld
repnz
das
pushf
lods
mov
or
cmp
das
mov
arpl
adc
sbb
scas
ficompl
cs
mov
dec
sahf
dec
and
dec
sub
mov
and
and
in
aam
inc
out
mov
jmp
mov
inc
sbb
in
lods
ficomps
pop
cmp
jae
lret
push
pusha
das
rorl
mov
stc
in
sub
jae
mov
xor
in
cld
repnz
xchg
and
inc
jmp
push
mov
test
call
push
xchg
sti
ret
imul
movsl
test
les
lds
pop
xor
mov
fcompl
jle
popf
cmpsl
mov
xchg
in
or
push
stc
hlt
push
pop
pop
sbb
movsl
jge
js
push
fsubrl
mov
dec
out
dec
movsb
in
and
mov
add
xor
ja
ja
insb
testl
push
pop
jns
mov
sbb
xlat
std
aaa
push
pop
jns
adc
js
rolb
add
daa
sub
jo
std
das
mov
ds
fs
jnp
jbe
dec
das
mov
push
adc
push
test
insb
xchg
lret
sbb
repnz
rcll
out
adc
lcall
inc
jp
push
jbe
lea
ljmp
movsl
and
pop
cmpsb
sbbb
imul
imul
daa
das
mov
push
mov
add
psadbw
mov
repnz
mov
xor
in
adc
ja
xchg
mov
jnp
aas
test
in
cltd
das
ds
pop
jns
mov
test
sbb
sbb
xchg
mov
aad
mov
pop
jns
xchg
push
nop
jo
in
push
push
jl
mov
xchg
push
pop
xchg
jmp
sbb
xor
push
pop
jns
xlat
inc
sbb
dec
add
add
jge
in
jb
inc
add
hlt
notl
lret
das
jmp
cs
loope
bnd
pop
inc
sbb
std
xchg
mov
xchg
ror
aas
cltd
and
xchg
pop
jle
das
sbb
inc
or
jle
lods
jg
stc
in
out
push
cmp
call
mov
cli
leave
lret
mov
cltd
or
fmulp
jmp
xor
dec
test
maxps
in
out
xchg
into
lahf
cmp
daa
pop
test
xchg
sub
movsl
vmovsd
in
pop
inc
loop
inc
imulb
push
xor
addl
in
pop
jle
scas
fistps
repnz
aas
rol
xchg
pop
jle
or
inc
mov
mov
pop
jle
in
dec
dec
mov
mov
invd
js
xchg
pusha
or
adc
mov
lds
jno
iret
add
enter
mov
cmp
je
add
loope
fistl
loopne
xlat
jns
xchg
push
lahf
cmc
mov
xor
mov
sbb
pop
in
xchg
mov
imul
ljmp
popf
xorl
mov
pop
and
cmpsl
sub
out
and
daa
pop
sub
insb
dec
dec
and
cld
cmp
leave
push
insb
in
mov
fnstenv
and
xchg
jg
jno
pop
jne
ficompl
aas
mov
push
push
and
sti
mov
lret
lcall
push
popf
or
pop
inc
mov
inc
pop
or
mov
ds
fdiv
dec
hlt
sub
xchg
sbb
arpl
das
ljmp
add
push
pop
jecxz
adcl
xor
fistl
pop
jns
jle
push
jmp
std
adc
aaa
nop
jle
in
mov
adc
clc
scas
enter
aam
jo
in
pop
xchg
sti
push
mov
int3
jae
mov
pop
jle
lea
inc
jb
jecxz
loop
ds
lret
loop
jmp
sbb
mov
roll
sub
ret
add
negl
jno
adc
push
jmp
xchg
pop
ljmp
jge
pop
into
cmpsb
xchg
ja
push
lret
ret
cmp
enter
sbb
popa
xorps
or
pop
pop
jns
sahf
mov
lret
jne
lret
movntq
and
cmp
inc
xchg
inc
add
jle
in
frstor
and
and
lret
je
enter
sub
repz
enter
stc
in
aas
jnp
push
shlb
sbb
popf
or
xchg
pop
jle
es
int
inc
je
arpl
daa
pop
jle
lods
mov
test
adc
cmp
sar
enter
mov
ljmp
xchg
push
fisubrs
xchg
dec
pusha
inc
and
fstp
or
and
test
cld
aaa
shlb
mov
add
fneni(8087
sbb
xchg
ret
add
in
lcall
and
in
pop
jle
xor
rcll
int
outsl
dec
cmp
pop
push
ljmp
out
enter
scas
clc
mov
xchg
inc
cmp
mov
mov
sbb
imul
stc
test
add
and
dec
addr16
in
pop
ja
jmp
mov
les
repz
enter
pop
jle
mov
jl
pop
inc
fwait
repnz
stc
or
pop
or
outsb
adc
stc
in
test
add
xchg
pop
jle
clc
sti
xlat
retw
push
jnp
xchg
pop
jle
rol
mov
es
adc
enter
push
cmp
int
test
cmp
icebp
bound
stc
adc
sub
mov
or
adc
jge
out
imul
test
lret
mov
push
mov
shll
daa
repnz
mov
stos
pop
imul
inc
xchg
push
mov
xor
dec
dec
pop
arpl
in
jle
leave
stos
pushf
or
jmp
push
icebp
das
decl
loope
xor
cmpxchg
jnp
mov
jp
lret
sub
mov
xor
xchg
push
pop
sqrtps
adc
inc
inc
jle
mull
jo
push
cmp
mov
outsb
popa
sub
and
out
fbstp
mov
jg
pop
or
pop
xlat
cmp
lret
cmp
dec
icebp
sbb
scas
fstpt
dec
lret
or
jge
sbb
scas
mov
lret
push
push
nop
aam
fnsave
scas
mov
mov
lds
ja
je
rorb
mov
dec
ljmp
push
stos
bswap
das
mov
mov
dec
das
mov
repnz
inc
sub
mov
xchg
jae
rcl
cltd
sti
push
lret
mov
adc
pop
dec
add
sti
push
aam
notb
or
lret
sbb
lret
clc
xor
out
popa
lret
sar
xchg
jno
repnz
das
ret
push
pop
int
push
pop
outsl
cwtl
jns
filds
jmp
std
dec
lahf
cmpb
loope
ja
push
stc
movsl
pushf
cmpb
pushf
pop
cmc
xchg
xchg
mov
mov
push
lret
mov
sbb
jb
xor
sti
enter
push
push
int3
pop
add
dec
movsl
xchg
ja
out
int
in
mov
in
mov
adc
mov
test
stc
xor
jnp
lret
das
cmp
pop
or
setge
ja
lret
das
mov
cltd
jnp
mov
xchg
mov
cmp
push
adc
xchg
xlat
mov
xchg
lcall
dec
movsb
push
dec
ret
outsl
push
repnz
outsl
and
mov
icebp
in
and
insb
dec
enter
orb
repnz
or
jo
std
add
or
icebp
mov
loope
jb
iret
es
xchg
pop
jmp
mov
jp
jb
imul
dec
in
ds
pop
add
xlat
push
cmp
xchg
pusha
sbb
jle
jne
test
mov
sub
in
dec
lds
lea
xor
lcall
jbe
push
xlat
push
ss
mov
lret
aad
adc
test
lods
test
sub
adc
cmp
xchg
push
pop
jns
jle
test
mov
jns
cmc
xchg
xchg
jecxz
dec
jmp
lods
mov
xchg
stos
mov
sar
mov
fwait
shl
lret
das
jg
stos
push
push
lock
cmp
add
mov
or
divl
stos
push
das
mov
push
adc
dec
aam
adc
lods
push
leave
mov
mov
mov
lds
push
mov
sbb
outsb
rolb
lret
lods
sbb
xor
bound
lock
lcall
stc
aam
pusha
es
movsl
sub
add
std
in
sub
jo
sub
pop
stc
in
pop
add
les
mov
loope
and
shrl
inc
movsb
pop
xchg
mov
insb
jl
daa
mov
aaa
test
mov
xchg
testl
in
sbb
in
mov
push
cmpb
xchg
pop
jle
mov
pop
mulb
mov
mov
jmp
or
int
inc
xlat
ret
cld
repnz
jmp
rorl
adc
aad
push
cld
repnz
das
addr16
dec
mov
mov
push
mov
rolb
aad
fcomip
lret
insb
dec
std
sub
hlt
cmp
cmp
repnz
xor
out
and
mov
arpl
xchg
sub
fs
pop
jns
jg
dec
clc
sub
push
mov
ds
loopne
fwait
xlat
pop
mov
cmpb
aaa
cmpsb
lea
xor
pop
jns
movsl
dec
xchg
pusha
jmp
data16
push
pop
jns
cmp
adc
movsl
push
add
ja
xchg
add
ljmp
call
mov
jle
in
insl
enter
gs
jns
or
lcall
stc
adcl
hlt
xor
mov
mov
insb
mov
jp
ds
mov
push
leave
push
add
dec
orl
or
xlat
mov
ss
mov
lret
sub
push
mov
hlt
js
cld
repnz
das
cmp
jnp
stc
pop
cmp
das
mov
adc
in
mov
es
xchg
mov
pop
xor
cld
repnz
aaa
adc
pusha
std
pop
cmp
mov
cmp
lret
cwtl
loop
pop
dec
test
add
addl
mov
xchg
aaa
fwait
xchg
mov
dec
jae
add
xchg
push
pop
cmp
aas
mov
xchg
push
pop
jns
sti
mov
fstl
push
pop
jns
xor
fcomip
adc
pop
out
inc
mov
inc
push
adc
xchg
mov
cmp
jns
mov
and
add
jns
xchg
aas
jbe
pop
mov
adc
imul
in
push
testb
mov
push
sbb
jnp
pop
es
sahf
aam
and
repnz
movsl
es
push
dec
sub
adc
adc
mov
iret
mov
xchg
add
cmp
lret
mov
fdivl
sbb
mov
mov
push
scas
and
mov
and
fists
mov
jae
sbb
test
pop
push
push
jge
in
push
fcoml
sub
inc
lret
popa
loope
xchg
fcomps
sti
xor
scas
mov
out
out
mov
mov
repnz
int
bound
outsl
in
aaa
es
test
xor
cmp
push
push
xchg
push
pop
jns
gs
pusha
icebp
xchg
int
ljmp
in
or
ds
ss
out
adc
push
pcmpeqb
jb
xchg
xchg
xchg
pusha
pop
fs
fimuls
sub
loope
xor
adc
xchg
push
ret
ljmp
fwait
adc
popa
imul
shrb
xchg
push
dec
jb
and
or
dec
cmc
mov
push
pop
jns
xor
ret
xor
xchg
jns
test
out
push
adc
pop
jns
xchg
sbb
cmp
outsb
jb
xchg
push
clc
sub
and
mov
and
pop
xchg
pop
cmp
testb
jno
pop
jle
in
rcll
jb
cmp
idivl
in
jge
xchg
xchg
dec
xlat
idiv
inc
loop
xor
pop
mov
outsb
aas
xchg
or
mov
ja
fwait
xlat
std
sti
stc
sub
or
in
movsl
imul
sub
dec
cmp
repnz
repnz
lret
fdivs
shl
mov
cld
faddl
in
test
sbb
loope,pt
cli
xchg
push
pop
jns
jmp
jbe
adc
lods
push
cltd
dec
push
pop
jns
sub
push
stos
mov
jg
repz
in
and
and
mov
mov
icebp
xchg
scas
or
mov
add
repnz
enter
xchg
out
cmpsb
fmuls
xchg
push
pushf
mov
movsl
das
mov
subb
in
pop
jmp
imul
xchg
xor
push
xchg
test
scas
inc
dec
rorl
lret
fsubrl
aaa
imul
movsl
inc
scas
test
xor
lret
jbe
arpl
and
mov
fstpt
pop
jns
addb
or
inc
loopne
sti
push
dec
mov
repnz
fsubl
cmp
js
gs
dec
les
mov
popa
sti
cmp
pusha
imul
repnz
repz
mov
in
aaa
mov
insb
imul
addr16
pop
jns
into
mov
rorl
jb
pop
jle
xorl
lods
jg
jns
data16
sub
and
sarl
xchg
push
fidivrs
inc
jecxz
add
outsb
jge
push
jbe
pop
cmp
fcoms
or
pop
stos
sti
stos
sbb
mov
inc
in
xlat
repz
es
mov
adc
inc
lret
cmpsl
push
adc
aaa
scas
bound
pop
xchg
pop
leave
xor
push
pop
pop
xchg
test
loopne
xchg
jnp
inc
add
cwtl
pop
scas
hlt
fiaddl
cmp
and
into
sbb
repnz
das
push
ret
sbb
es
xchg
aas
cmp
jns
jmp
in
insb
test
ds
cmpsb
loop
shr
xchg
iret
pop
jns
sub
dec
xor
or
jmp
cmp
scas
jno
sub
or
push
pop
in
popf
mov
mov
outsb
aam
pop
pop
jns
dec
and
insl
or
and
xchg
pop
xlat
adc
aad
clc
imul
pop
pop
in
adc
push
pop
repnz
das
jge
daa
sbb
nop
aaa
ficoms
das
mov
inc
pop
push
add
xlat
xchg
popf
fldt
pop
stc
repnz
mov
addr16
xor
push
pop
pop
stc
repnz
xchg
nop
mov
pop
mov
repnz
movsl
cmpsb
les
pop
dec
sbb
insb
mov
je
inc
lret
mov
xchg
sub
out
lds
mov
cwtl
cld
push
sbb
ret
lock
cmp
lret
dec
sbbb
fadds
int
enter
pop
aam
fldz
lcall
fimuls
sahf
jae
mov
xchg
pop
aad
jns
xchg
loop
in
cmc
pop
push
xor
mov
push
sub
ja
lahf
insb
repz
out
mov
jmp
jge
mov
repnz
mov
cld
repnz
das
dec
fdiv
push
mov
decl
repnz
das
mov
push
mov
mov
cld
mov
xchg
xchg
lcall
pop
jle
in
dec
fimull
decb
push
pop
jle
in
push
lret
add
aaa
xchg
sahf
stc
in
pop
out
lock
ret
fildl
in
pop
jle
adc
mov
ja
aas
dec
xchg
pop
jle
sti
and
in
leave
es
cmp
cmc
mov
in
sbb
push
sub
leave
cmp
repnz
das
jmp
enter
mov
stos
repnz
das
mov
imul
jb
xchg
pop
cmp
fwait
inc
test
xchg
pop
jle
in
push
loopne
ret
push
dec
dec
test
imul
loope
pusha
and
popf
xor
add
in
pop
cmp
mov
js
lods
jl
xchg
mov
xor
sub
mov
iret
outsb
fldt
adc
repnz
test
lahf
lret
incb
and
push
lret
sbb
jecxz
in
sub
push
rcl
test
push
cmp
in
fidivrl
push
pop
sbb
dec
push
mov
pop
jle
push
int3
mov
inc
enter
jg
std
cmp
add
in
pop
jle
sub
lahf
fmull
pop
jle
shll
out
sbb
cmp
xchg
cmp
hlt
cmc
inc
mov
stc
lahf
outsl
mov
xchg
push
stc
in
gs
sbb
mov
lock
enter
add
xchg
sbb
rcr
ds
cltd
or
mov
jns
xchg
mov
jbe
sbb
imul
push
fbld
push
pop
cli
sbb
xor
test
pop
jp
jne
pop
in
push
arpl
pop
inc
loope
sti
cmp
arpl
repnz
fldcw
in
push
pop
jae
jmp
cmp
lcall
jne
and
mov
mov
in
pop
in
push
mov
and
jmp
ja,pt
pop
cmp
popf
sub
xor
mov
xor
xor
jle
in
inc
into
sti
pushf
outsl
mov
jmp
fcmovnbe
jg
in
pop
add
ficoml
lret
dec
mov
xchg
pop
jle
add
int
push
out
jl
xchg
call
pop
or
arpl
daa
bound
jle
in
mov
pop
enter
pop
pop
adc
in
mov
dec
or
xchg
sar
in
pop
roll
pop
clc
pop
aas
push
enter
jns
mov
cmc
int
inc
mov
push
pop
pop
push
stc
notl
mov
mov
in
aaa
out
call
adcl
lret
fmuls
inc
jo
pavgw
pop
inc
xchg
fisubs
mov
push
pop
jns
sbb
xchg
fucom
dec
mov
jns
xor
pushf
or
scas
dec
aas
jecxz
fmul
sub
in
enter
iret
add
pop
mov
pop
lret
das
mov
repz
xor
mov
adc
mov
mov
cltd
and
arpl
mov
and
iret
leave
xchg
and
pop
inc
mov
lret
sbb
adc
inc
popa
cmc
and
lret
das
in
cmp
mov
push
cld
xchg
pusha
jnp
jnp
cmc
icebp
cmp
adc
push
insb
mov
movsl
lahf
add
pushf
adc
mov
gs
pop
adc
cmp
aad
leave
ljmp
dec
push
test
scas
mov
out
insl
xchg
scas
bound
sub
roll
test
das
mov
shll
in
xor
and
adc
adc
lret
rcll
rolb
sti
stos
jnp
inc
repz
lret
and
fistl
lea
inc
push
pop
sahf
mov
outsb
sbb
subl
jnp
in
pop
xor
xchg
push
or
test
sbb
pop
in
push
fsubrp
mov
adc
testb
loope
xchg
push
pop
jns
adc
cmp
xchg
ds
stc
jnp
xchg
sbb
test
iret
stc
pop
stos
add
pop
cwtl
mov
xor
add
adc
mov
sti
fbld
jno
movsl
jns
xchg
push
gs
test
or
ja
popa
sbb
mov
pop
jle
dec
sbb
adc
add
add
test
pop
mov
pop
mov
push
in
inc
lock
test
push
pop
add
jecxz
dec
test
into
xchg
push
pop
jns
lret
jg
stos
inc
xor
in
xor
std
leave
jle
test
fidivrl
lods
daa
push
lock
mov
pop
sub
cmp
pushf
add
sbb
stc
call
jg
jg
lods
cld
repnz
enter
push
sbb
nop
repnz
das
mov
pop
pop
loope
movsb
lret
mov
jnp
dec
mov
fdivs
jns
cmp
jae
mov
jg
sub
pop
or
fimull
xchg
push
pop
jns
push
add
notb
xchg
dec
push
and
xchg
push
pop
jns
xchg
and
mov
add
jns
xchg
lds
addr16
jne
push
jns
xchg
push
aad
movsl
or
pop
jbe
lahf
and
pop
dec
aas
adc
in
test
mov
push
pop
jns
loop
adc
xchg
sarl
clc
pop
aas
push
mov
push
mull
jle
test
inc
xor
add
inc
shll
mov
mov
iret
fisttpl
and
sub
push
cmp
insb
mov
mov
push
jle
jo
insl
xor
push
xor
daa
jle
repnz
sbb
jno
cwtl
enter
sub
jnp
lret
mov
dec
cltd
sti
repnz
pop
mov
sub
mov
lods
dec
xor
mov
jecxz
ljmp
inc
stc
cld
jmp
sub
mov
sub
or
cmpsl
fsubrs
push
inc
dec
ds
jmp
mov
mov
popf
mov
lret
das
inc
jle
dec
in
xor
inc
xchg
das
mov
or
inc
mov
scas
mov
jae
xchg
add
das
xor
mov
pop
mov
adc
jmp
mov
les
lahf
xchg
je
cmpsb
das
mov
mov
sahf
push
and
jnp
xchg
xchg
test
mov
sti
loop
imul
sbb
in
shr
sti
jp
inc
shr
sbb
jmp
popa
addr16
push
pop
jns
lods
aad
es
mov
adc
sbb
in
scas
sahf
lahf
dec
inc
sub
pop
or
or
mov
clc
aas
jle
pop
loopne
xlat
lods
addr16
xchg
xchg
mov
dec
xchg
repnz
xchg
and
in
pop
stc
sti
test
adc
imul
addr16
push
xchg
xor
sbb
into
lret
das
mov
adc
adc
mov
cld
repnz
jnp
dec
xor
das
popa
fstpl
mov
mov
mov
rol
fdivs
push
push
js
fbld
fdivl
xlat
adc
pop
cld
add
mov
jno
cmp
fimull
push
daa
xchg
mov
insb
jmp
les
xor
pop
scas
dec
jnp
add
das
xchg
cld
pop
inc
push
pop
pop
emms
jns
inc
add
int
inc
shrl
pop
jo
or
pop
arpl
cmpsl
bound
inc
mov
dec
aad
popa
mov
xchg
testb
lret
das
mov
in
aas
aas
loope
les
jg
cld
ljmp
inc
mov
adc
inc
pop
jle
in
mov
adc
sub
fs
stc
in
ja
push
lock
ret
test
leave
iret
mov
sub
sub
outsb
stc
repnz
mov
test
pushf
or
pop
in
movsb
cwtl
imul
dec
setae
xchg
pop
jle
sbb
push
fidivrs
movsl
int3
adc
pop
jle
in
mov
xchg
cmpsb
cmp
mov
hlt
out
pop
ja
loope
daa
sub
cld
xlat
xchg
pop
jle
imul
iret
mov
adc
in
ljmp
or
cmpsl
out
and
ret
jno
mov
mov
pop
mov
ds
div
lret
popa
sub
pop
dec
pop
out
mov
inc
scas
mov
fsts
pop
jns
sbb
mov
adc
push
scas
lret
loopne
and
mov
lods
insl
dec
outsb
scas
mov
movsb
sbb
xor
loop
sbb
outsl
pusha
sbb
push
lahf
lds
in
leave
sub
xchg
stos
xchg
push
pop
jle
fwait
mov
pop
sti
test
scas
ja
pop
jle
in
aas
les
add
adc
sbb
cltd
jecxz
push
stc
in
push
mov
cmp
adcb
imul
stc
in
pop
bound
dec
push
in
sbb
pushf
in
pop
jle
push
fidivs
push
dec
cmp
fs
cld
sbb
push
mov
in
xor
xchg
sbb
ds
xor
xchg
sti
push
ret
subb
cld
repnz
sahf
je
pop
mov
imul
inc
stos
into
jg
lods
test
sub
outsl
dec
fucomi
mov
dec
add
stc
mov
ror
ds
jns
mov
test
aas
hlt
xchg
das
pushl
push
inc
xor
jns
sub
pop
xchg
fidivs
dec
xchg
in
jnp
jle
mov
stc
sub
jb
into
xor
cli
and
mov
lahf
movsl
popa
in
adc
repnz
das
mov
or
jecxz
cmp
das
mov
ljmp
cmpsb
addb
jg
sahf
cmpl
scas
cmpsb
dec
movsb
cmc
jg
adc
cmp
and
sbb
in
dec
icebp
inc
xchg
aam
ljmp
aad
mov
nop
ficoms
lcall
aas
xchg
outsl
lock
dec
pop
movsb
xchg
stc
repnz
mov
xchg
jno
inc
lret
sub
pop
or
sbb
xchg
inc
sub
cmp
dec
and
stos
cs
popa
jne
bound
pusha
arpl
jae
push
call
mov
frstor
pop
add
inc
sub
iret
mov
jno
xor
ds
lret
mov
jnp
repz
cld
cmp
or
stc
scas
pop
daa
sub
movsb
and
mov
add
mov
lea
rcll
sub
in
nop
cmp
notb
imul
push
mov
out
xchg
pop
inc
push
scas
mov
inc
jge
xor
push
pop
stc
enter
mulb
sbb
fbld
push
in
jecxz
cmpl
stc
jmp
mov
jl
or
mov
insl
mov
mov
xlat
loope
sbb
repnz
das
xor
out
out
test
cli
aas
mov
in
das
mov
rcrb
xchg
pop
jge
push
scas
inc
xor
addr16
jl
ds
pusha
stc
lods
es
jae
cmp
mov
xor
add
icebp
mov
mov
icebp
mov
lret
das
mov
sub
mov
cld
push
out
xchg
jg
out
imul
cld
bnd
cmp
rolb
and
mov
test
and
xchg
cmpsl
xor
negl
jne
sbb
in
push
xor
jbe
or
pop
in
push
pop
mov
sbb
je
cli
pop
int3
and
cwtl
pop
push
mov
xchg
fstl
fs
mov
mov
and
fwait
test
daa
loope
cs
adc
inc
cld
mov
in
push
pop
or
jg
sahf
pop
xchg
xchg
push
pop
cmpsl
into
je
outsb
test
loop
pop
mov
jns
adc
sub
in
lea
xor
jns
jl
dec
lret
push
push
fucomi
popf
dec
test
repnz
dec
icebp
dec
mov
arpl
scas
add
enter
or
aad
lock
mov
dec
push
jns
cmp
lea
xchg
jne
lret
mov
and
jge
mov
nop
jo
mov
insl
mov
sbb
adc
adc
xchg
or
dec
in
jle
in
je
and
out
pop
in
xchg
outsl
movsb
pop
stc
in
pop
cmp
out
jbe
es
in
pop
jle
repz
or
or
push
pop
je
jae
jge
xchg
lds
scas
jg
pop
cmp
pop
sahf
cmpsl
enter
mov
nop
adc
aas
jns
mov
imul
mov
pop
lods
or
sub
dec
mov
cmpsb
sahf
movl
lret
mov
mov
out
adc
mov
inc
and
jnp
xor
pop
mulb
pop
shl
mov
out
and
aas
add
xor
push
cld
repnz
and
fsubp
mov
xor
lret
das
mov
push
cmp
sub
imul
adcb
jno
lods
retw
das
mov
sub
out
mov
cmp
cmc
enter
mov
cmpsl
push
mov
sub
mov
repz
lret
clc
leave
dec
lret
jb
mov
repnz
int
mov
movsb
int3
xor
sahf
leave
xor
out
xor
xchg
mov
jne
and
sbb
ret
xchg
push
pop
push
enter
mov
xchg
aaa
sub
jge
mov
bound
imul
sbb
and
jns
pop
rorl
push
repnz
das
mov
jb
inc
jmp
lret
das
mov
cltd
jp
daa
sub
sahf
cld
repnz
jno
mov
lods
inc
repnz
stc
in
sarb
ja
inc
pop
mov
repnz
das
lcall
out
jne
movsl
jle
dec
push
sti
lret
das
mov
dec
shr
imul
adc
int
inc
cmp
sbb
push
or
sahf
outsb
xor
enter
lods
lret
jnp
fwait
popa
stc
in
pop
sub
cmp
add
sbb
mov
stos
stos
xchg
jg
jns
std
movsb
lock
adcl
fidivs
adc
pop
adc
out
jle
in
test
xor
mov
add
sbb
loopne
in
and
loopne
ja
xorb
dec
dec
mov
sahf
jge
leave
adc
mov
mov
sub
out
mov
pop
mov
jle
mov
arpl
lret
das
mov
jp
adc
push
xchg
orl
mov
jg
inc
mov
lret
das
jmp
sbb
or
pop
jge
sbb
movsl
xor
cmpsl
nop
das
out
jle
in
xchg
pop
lcall
push
xchg
jl
in
in
sar
sahf
xchg
rcrb
mov
ljmp
push
data16
jnp,pt
test
pop
mov
jmp
push
pop
jns
xchg
mov
rorl
out
adc
enter
mov
pop
jo
lret
add
fldt
insl
mov
insb
push
das
test
xchg
sbb
cwtl
lods
jo
test
push
inc
popa
outsl
jge
cwtl
rclb
xor
frstor
and
add
imul
and
in
rcrb
push
jp
sub
fs
push
call
xor
gs
mov
fwait
cmc
ds
sub
adc
sub
adc
into
dec
lret
mov
pop
cmp
dec
mov
jp
sti
mov
enter
mov
push
js
pop
pop
ds
cmp
sub
sub
loope
out
lods
pop
jns
loopne
sub
mov
pop
std
and
sahf
pop
pop
pop
jno
mov
xor
sub
push
test
in
cmpsb
stos
xchg
popa
jb
inc
aad
test
call
dec
jns
push
lret
cmp
repnz
xchg
jle
inc
jecxz
xchg
sbb
iret
jnp
sarb
in
icebp
fxam
mov
cmp
add
adc
cld
aam
push
adc
jbe
pop
jns
out
jecxz
pop
push
jnp
repnz
push
ficomps
rclb
inc
xor
xchg
push
mov
pop
pop
mov
outsb
addl
loope
pop
add
inc
jo
xchg
push
pop
jns
jo
push
pop
xchg
and
jbe
push
pop
jns
test
inc
mov
cmpsb
out
subb
ljmp
and
int3
testb
es
testl
xchg
push
fiadds
push
push
pop
mov
or
sub
stc
push
pop
jns
mov
gs
xchg
fcmovnu
mov
push
call
xchg
in
sub
jle
pop
jae
dec
push
ficomps
inc
mov
fwait
pop
imul
adc
inc
mov
cmp
popa
loop
ret
mov
and
bound
pop
jns
xchg
fucom
sub
dec
rcrl
movsl
push
push
ja
jns
xchg
push
cmp
push
shrl
cmc
clc
in
push
pop
mov
inc
xchg
pop
arpl
xchg
push
pop
jns
push
xchg
jp
std
push
inc
out
jo
push
pop
jns
orl
push
add
pop
jns
xchg
lret
mov
in
xchg
push
sub
or
push
cli
xlat
scas
jno
lret
enter
add
and
pop
mov
and
lahf
sub
enter
cmp
pop
and
in
pop
bound
xchg
test
in
jg
mov
pop
pop
leave
cs
out
adc
jnp
push
js
mov
rorl
xchg
pop
xchg
das
mov
rcl
mov
into
rol
mov
mov
jmp
repnz
mov
pop
sbb
jae
das
ljmp
call
rcll
jns
sbb
mov
out
sbb
mov
inc
scas
inc
das
mov
into
sbb
xchg
ds
cmp
les
cmp
es
movsb
mov
fbld
jp
and
mov
mov
sub
test
add
inc
sub
scas
mov
add
adcb
fwait
ds
pop
cmp
jnp
mov
inc
adc
lret
ret
inc
xor
inc
ror
in
dec
cld
repnz
das
lea
arpl
jmp
mov
cwtl
decl
repnz
into
leave
mov
pop
stc
movsl
aam
call
cltd
fstpt
jae
sbb
xchg
or
fmuls
loope
cmpsl
jnp
rclb
rol
sub
and
ret
das
mov
bound
mov
adc
mov
xchg
jmp
outsb
pop
hlt
inc
sbb
dec
das
mov
call
xor
out
pop
insb
ss
out
in
stc
repnz
cmp
into
into
dec
adc
jbe
fcmovu
sar
dec
inc
loop
je
push
and
xchg
push
test
mov
mov
jle
mov
gs
lock
sbb
stc
in
jns
xchg
xor
popf
jnp
fists
pop
icebp
jle
in
lods
cmp
jle
iret
jne
ss
test
pop
push
push
pop
xor
cmpsl
inc
xchg
pop
jge
jb
data16
cltd
addr16
cmp
dec
addr16
ds
enter
std
fldl
jmp
or
repnz
das
sbb
jb
mov
xchg
js
lret
das
mov
pusha
mov
pop
sub
pop
cmp
je
lret
push
xchg
inc
rcrl
in
xchg
dec
imul
pop
icebp
inc
and
xchg
push
xor
xchg
les
cmpsl
repnz
xchg
pop
mov
leave
or
cmp
das
mov
pop
shll
mov
inc
xlat
sbb
cld
repnz
fldcw
mov
jle
in
shll
rcll
int3
loop
or
sbb
sahf
pop
mov
arpl
mov
pop
jle
xchg
sbb
inc
dec
das
mov
xchg
push
stc
neg
jl
jmp
popf
jns
adc
aas
mov
imul
xor
stc
idivl
fwait
xchg
call
mov
sbb
pop
sub
hlt
enter
push
orl
xor
in
jno
jmp
stos
frstor
jecxz
inc
fimuls
inc
imul
mov
jmp
jecxz
outsb
push
lret
push
mov
jg
rorb
dec
out
mov
mov
or
hlt
fsts
cltd
rorl
lea
jmp
test
and
pop
jle
idivl
adc
sub
and
jo
andl
loop
xorb
shrl
leave
in
jg
test
aas
scas
ja
mov
xchg
pop
jle
sub
pop
into
adc
out
es
mov
and
xor
xchg
lahf
push
cmpsb
ficompl
cmp
cld
inc
dec
xor
int
enter
xchg
ljmp
pop
or
sti
in
mov
pop
dec
stc
dec
xor
fcoml
das
mov
rcr
adc
aaa
pop
jle
testl
rcl
enter
cld
jnp
xchg
pop
stos
int3
cmp
movsl
mov
add
bound
cwtl
jp
cmp
lea
jne
xchg
pop
cmp
lahf
jge
mov
push
pop
jle
in
sarl
dec
repnz
insl
dec
jle
in
ss
push
sub
mov
insl
mov
xchg
pop
or
clc
push
bound
cmp
in
pop
jle
jno
xchg
aad
xchg
es
cmp
stc
push
dec
scas
mov
cmc
sbb
mov
push
sub
daa
scas
xchg
xor
das
push
loope
jo
enter
inc
sub
lret
das
mov
jo
mov
cmc
lret
das
mov
push
lods
lret
enter
inc
mov
ret
jmp
inc
or
repnz
or
stos
and
push
repnz
das
mov
cld
fwait
lahf
lock
cmp
lahf
sub
mov
scas
call
and
mov
stc
repnz
lahf
scas
jae
sub
cmpsb
push
jp
cmp
lret
sti
js
jbe
inc
mov
scas
mov
out
sub
mov
cmp
mov
adc
sbb
aad
pop
or
popf
stc
cmp
shll
xor
dec
sbb
xchg
ja
lods
xchg
scas
in
adc
das
push
pop
dec
and
aas
pop
out
push
dec
adc
hlt
pop
jns
jmp
ret
add
call
in
push
ja
xor
loopne
and
jge
out
jmp
add
insl
cld
repnz
mov
mov
sahf
sbb
adc
lret
das
mov
sti
inc
lods
push
dec
lahf
push
repnz
jg
shll
jb
leave
into
xlat
pop
mov
mov
jle
pop
push
push
push
jge
jmp
xor
mov
sbb
dec
aam
add
cld
repnz
das
jnp
push
stos
mov
mov
in
jg
pop
mov
jmp
loopne
loope
xchg
pop
jle
stos
add
ror
ljmp
lods
pop
jle
in
push
inc
out
dec
xor
cmp
mov
stc
in
add
or
dec
cmpsl
inc
jbe
fdiv
in
pop
dec
loope
and
push
test
or
orl
sub
repnz
stos
insb
out
sub
fisttps
inc
scas
lea
dec
loop
sti
cmpsl
cli
sbb
sbb
pop
add
fwait
insb
jns
gs
sbb
dec
dec
aaa
test
add
lods
mov
mov
mov
lret
test
out
mov
mov
scas
mov
push
pushf
xchg
mov
fdivl
xchg
push
cmp
shll
pop
xlat
adc
je
incl
out
sbb
push
jecxz
sqrtps
adc
jle
in
popa
xchg
cmpsb
sbb
imul
rcll
test
xor
jge
adc
sti
pop
sbb
lcall
adc
mov
ficomps
cli
adc
imul
pop
jns
xchg
mov
push
xchg
leave
sub
ja
adc
leave
pop
push
insb
sbb
mov
pop
jmp
in
xchg
or
push
iret
sti
fisttpll
lret
das
mov
push
push
dec
or
test
pusha
das
mov
mov
mov
cmp
fldl
lds
scas
xlat
dec
sbbl
das
frstor
mov
repnz
das
mov
out
fldcw
jo
pop
dec
popa
pop
pop
stc
mov
fwait
pop
mov
out
jbe
outsb
decl
stos
nop
or
test
mov
in
lea
lods
sti
mov
fnstcw
in
xchg
jl
xor
add
pop
pop
mov
in
pop
pop
add
ror
xchg
out
inc
divb
push
jg
int3
stc
jg
jl
adc
mov
jb
sub
int
xchg
test
enter
jge
shrl
out
dec
mov
lret
out
jnp
inc
and
fmuls
push
sbb
jns
sub
in
jg
cmp
xchg
or
movb
pop
jle
push
fsub
in
scas
pop
loope
ja,pt
ds
jo
cmp
lods
mov
fists
test
pop
int
xchg
pop
jle
lods
in
cmpsl
mov
dec
inc
mov
imul
push
dec
mov
sbb
pushf
mov
lds
stos
inc
push
push
pop
aaa
xchg
push
stc
xor
cwtl
popf
das
and
xchg
out
ds
pop
hlt
mov
pusha
rcrb
xchg
pop
xchg
push
add
xor
scas
mov
leave
std
and
in
pusha
repz
mov
jle
pushf
inc
das
repnz
mov
insb
mov
mov
push
cli
mov
enter
repz
lret
movsl
jo
xchg
push
out
enter
js
and
pop
jns
lods
mov
and
dec
dec
loop
add
dec
sbb
add
movsb
mov
mov
mov
inc
repz
push
stc
in
jg
inc
pop
ret
mov
mov
test
xchg
test
jae
xor
jns
xchg
ja
in
push
xchg
add
fwait
xchg
das
mov
mov
imul
insl
add
test
pop
xlat
mov
and
pop
mov
in
repnz
sbb
jecxz
or
cld
cs
stos
dec
repnz
sub
sub
lret
das
jmp
xor
scas
gs
adc
mov
movsb
sbb
xor
test
jbe
mov
mov
push
xchg
push
fwait
movsl
xor
inc
pop
jp
push
cmp
movsb
xlat
cwtl
push
pop
jns
dec
call
iret
pop
jb
cwtl
std
daa
sar
in
xchg
repnz
jge
mov
lahf
and
pop
jle
pop
pop
in
inc
enter
outsb
in
xchg
pop
jle
or
fsubrs
pop
lds
push
pop
jle
in
sbb
dec
mov
mov
jp
xchg
pop
pop
mov
jecxz
and
dec
inc
xchg
or
mov
lret
mov
cmp
cmpsl
cltd
xor
xor
out
mov
movsb
xor
out
xlat
ret
xchg
jg
fdivr
push
xchg
hlt
aad
add
sub
ljmp
xchg
leave
mov
and
lods
out
jae
add
xchg
das
mov
sub
and
pusha
push
sub
outsl
sub
inc
mov
outsb
filds
test
pushfw
mov
adc
aas
push
xchg
mov
pop
shlb
scas
mov
xor
adc
xorb
mov
dec
scas
mov
loopne
dec
subl
inc
sbb
cmp
lret
jle
fs
fisubl
and
sbb
pop
stc
mov
fildl
test
testl
mov
stc
pusha
jnp
fdiv
inc
mov
inc
xchg
mov
sahf
test
jae
outsb
mov
or
repnz
das
pop
jle
mov
loope
jp
ss
mov
mov
dec
aas
xchg
lret
das
mov
jbe
test
in
das
mov
dec
dec
add
mov
stc
notl
mov
mov
int
adc
enter
mov
ret
add
hlt
popa
pop
daa
iret
push
flds
popa
test
repnz
xchg
mov
stos
inc
ja
jge
sbb
xchg
ja
ds
add
leave
mov
adc
sbbb
in
dec
rcr
in
shrb
push
scas
repz
cmp
fists
xchg
insl
jb
sbb
fstl
sarb
jbe
and
pop
push
inc
jle
in
pop
loop
scas
btr
jl
hlt
jg
in
mov
sbb
test
xchg
xchg
push
pop
inc
sarb
jns
ja
mov
and
jbe
xor
pop
lcall
scas
cmp
lds
test
mov
mov
js
cmp
mov
pop
insb
hlt
jl
mov
sahf
mov
pop
fwait
outsl
push
nop
xor
daa
lock
fs
mov
cmc
mov
jns
adc
sub
dec
test
xchg
push
sbb
in
fwait
and
mov
andl
lret
or
mov
shr
sub
pop
test
and
cmp
lret
ljmp
adc
pop
pushl
mov
lea
imul
shll
lds
loopne
mov
inc
rcll
aam
pop
insb
lret
inc
cmp
dec
mov
das
mov
cmc
pop
rolb
jne
jg
pop
jae
jp
lret
inc
shrb
mov
dec
out
mov
jne
adc
jae
inc
fisttpll
jg
mov
mov
cld
repnz
das
in
or
lods
call
das
mov
cmp
int
dec
ds
jge
pop
jle
pusha
insl
xor
icebp
arpl
mov
mov
out
notrack
fistpl
jle
in
sarl
insb
daa
pop
xchg
sub
icebp
xchg
mov
aam
mov
mov
hlt
cwtl
stc
sar
xor
jns
call
adc
shrl
push
mov
cmp
outsb
inc
sbb
xchg
stc
stc
in
push
pop
in
xor
lods
xor
pop
cmp
aaa
test
dec
mov
test
stc
in
repnz
xlat
in
fnstcw
jae
inc
loopne
stc
in
pop
nop
mov
addr16
mov
inc
push
stos
dec
filds
push
rol
je
lret
sbb
inc
and
jb
jle
in
xchg
and
add
push
xchg
xor
sti
outsl
xchg
xchg
lcall
inc
outsb
jno
mov
xchg
push
pop
jns
add
push
loop
adc
in
pop
mov
or
adc
sub
nop
push
cmp
mov
iret
ljmp
andb
in
cs
add
adc
push
inc
out
dec
loop
fmulp
in
pop
xlat
inc
push
lret
scas
or
lret
dec
mov
bound
sub
sub
repnz
adc
jo
xchg
jb
inc
cmpb
scas
mov
int3
mov
enter
loop
test
mov
xchg
sbb
filds
out
mov
push
mov
xlat
pop
inc
add
pslld
das
pushl
into
pop
dec
mov
das
mov
inc
fisttps
adc
mov
jmp
loop
and
icebp
data16
insl
lds
cmpsb
or
scas
mov
mov
push
bound
push
jle
stos
xchg
sub
and
cld
repnz
and
ret
sbbl
jge
add
out
sbb
clc
gs
xchg
pop
jle
lock
xor
xchg
out
mov
stc
in
dec
sub
pusha
pushf
je
fs
push
pop
jle
in
inc
xor
sbb
int
cmp
in
test
fstl
ror
xchg
pop
mov
jo
mov
imul
push
jne
out
xchg
push
pop
jns
and
pop
dec
movsl
mov
icebp
jnp
out
call
mov
lret
lret
das
mov
or
lock
nop
and
repnz
or
mov
mov
idivl
lret
das
pop
sub
sbbl
push
jo
lret
das
mov
xchg
ja
gs
jp
in
inc
cmp
inc
imul
fnstcw
in
mov
mov
scas
rclb
call
xchg
pop
jle
icebp
mov
add
fisttpll
inc
jmp
lret
aas
jl
sarb
push
lods
mov
stc
repnz
rcrb
pop
stc
negl
test
mov
ss
in
pop
jle
and
and
bound
jecxz
jl
jg
xor
insb
je
push
hlt
into
pop
pop
jns
popf
rorl
sub
mov
mov
in
push
mov
std
subl
xchg
push
pop
dec
jae
mov
fs
outsl
sub
jb
jne
xchg
aad
filds
pop
pop
in
and
inc
into
inc
xor
jge
xchg
daa
xchg
pop
jge
pushf
shrb
mov
mov
mov
or
insb
xor
jle
in
mov
or
xlat
fwait
int3
push
in
movsb
inc
lea
inc
cmpsb
jns
cmp
xchg
repnz
popa
xor
in
sbb
adc
fsubrl
xchg
bound
idivl
xchg
push
mov
and
sub
adc
pop
out
add
jo
loopne
out
mov
mull
cmp
lret
mov
adc
pop
aam
jbe
repnz
in
sub
in
cmc
ljmp
sub
enter
cmp
scas
mov
push
les
gs
in
arpl
imul
and
mov
mov
hlt
lds
dec
out
sub
jge
cli
in
cmc
xchg
sbb
inc
jmp
inc
ds
je
ret
pop
js
mov
sti
mov
and
mov
ja
dec
lret
mov
push
or
xchg
inc
push
pop
push
jmp
mov
cmpsb
loope
jb
lds
sbb
mov
fsubp
stos
lret
popf
jle
in
fisubrl
and
cmc
push
inc
sbb
xchg
pop
fildll
arpl
aam
aam
dec
and
das
mov
daa
sub
movb
out
test
mov
shrb
test
cmp
jbe
std
sbb
mov
sub
das
and
lods
push
xchg
int
sti
mov
pop
lret
das
mov
cld
push
aad
xlat
mov
fcmovnu
scas
jnp,pt
imul
adc
push
mov
enter
mov
scas
sub
xchg
jp
mov
jecxz
movsw
jns
in
and
flds
out
xor
xchg
pop
jle
sub
cld
nop
inc
push
lea
leave
pop
jle
in
cs
xlat
hlt
sbb
mov
sbb
jle
in
stos
cmp
mov
scas
and
cmp
in
in
pop
pop
pusha
in
fisttpll
scas
daa
movsl
adc
pop
jle
into
mov
int3
hlt
push
out
fs
popf
das
mov
adc
filds
sarl
add
inc
daa
xchg
outsl
mov
lret
pop
xlat
cwtl
iret
bound
xor
lock
fwait
cli
xor
sbb
mov
jo
inc
insl
aaa
lcall
cmp
jne
pop
mov
sbb
fisttpl
add
fdivrl
dec
loopne
inc
test
stos
fldenv
jne,pt
and
in
rorb
mov
dec
movb
imul
push
mov
ljmp
and
pop
jns
cmp
sahf
push
sbb
cmp
xor
sbb
stc
daa
cmp
inc
inc
xchg
das
les
xchg
pop
jle
push
jg
imul
sbb
int
test
jns
test
pop
and
dec
fcmovne
ret
or
jle
in
ljmp
sub
pop
or
in
gs
fsubl
dec
jg
or
sbb
and
lock
fcoms
inc
xchg
push
pop
jns
inc
mov
jae
mov
ret
inc
pop
jns
push
imul
into
cmpsb
jne
sbb
push
fimuls
in
pop
movsl
inc
sub
jae
jle
in
xor
in
mov
push
inc
call
lcall
push
pop
jns
cmp
insb
sbb
xchg
aam
or
push
in
in
or
sub
adc
adc
fists
clc
cmp
shrb
mov
ret
sbb
into
mov
jns
in
inc
xor
stc
in
pop
out
lret
mov
das
fwait
in
pop
jle
sub
mov
xor
dec
sbb
xchg
stos
sti
daa
rorb
or
push
xchg
xchg
sbb
pop
mov
lret
pop
pop
add
cmp
in
ds
hlt
inc
int
or
jns
hlt
shll
dec
lods
or
mov
mov
jmp
xor
pop
in
push
pop
inc
xchg
push
mov
mov
pop
jns
push
push
push
push
mov
int
push
jmp
stc
in
fwait
test
mov
push
xor
mov
in
pop
mov
xchg
rorl
inc
sbb
add
sti
hlt
inc
cmp
stc
in
push
mov
fistl
insb
mov
pop
repnz
das
jge
xor
outsb
loopne
pop
pop
stc
cmp
das
pop
stc
inc
inc
call
jae
mov
repnz
jb
subl
subb
jnp
fists
mov
mov
imul
dec
push
mov
mov
xlat
loopne
das
mov
nop
pop
lret
lods
lret
xchg
cmpsb
das
mov
jne
mov
cmp
movsl
pop
mov
in
test
lret
cmp
sub
repnz
das
cmp
fisubl
cmp
lea
movsl
insl
shl
das
mov
cltd
xor
sub
fs
scas
xor
lea
push
pop
jne
push
repz
dec
push
stc
and
mov
mov
inc
sub
and
lret
jnp
out
std
movsb
out
sub
lret
das
mov
inc
jl
jnp
mov
cmp
xchg
pop
stc
mov
dec
sbb
push
jnp
jns
call
xchg
in
push
pop
dec
xchg
or
push
popf
sub
xchg
push
pop
jns
outsl
cmp
fwait
sbb
pop
push
jno
cld
jnp
enter
daa
mov
in
repnz
das
mov
sti
cmp
xchg
pop
pop
sub
iret
addr16
mov
mov
incb
das
mov
frstor
sub
inc
add
mov
subl
jg
cs
cmp
insb
lods
and
in
push
sbb
xchg
pop
xor
adc
arpl
cmp
sbb
test
dec
int
mov
cli
lods
lds
jge
lret
or
push
mov
sub
insl
outsb
jecxz
sbb
in
pop
dec
in
adc
xchg
subb
fists
iret
in
pop
jle
dec
mov
into
jge
test
shll
ljmp
sbb
cli
in
in
cmpxchg8b
xor
imul
ret
mov
enter
test
and
pop
popa
nop
jno
fisttps
jle
inc
sub
rclb
dec
mov
dec
mov
mov
out
movsb
cld
repnz
mov
inc
dec
fdivrl
push
lods
repnz
das
mov
push
ret
nop
mov
out
das
mov
cmpb
adc
dec
in
test
cmp
outsl
int3
loop
push
xchg
popa
mov
in
pop
mov
fnstsw
je
xchg
push
pop
std
les
mov
mov
lret
das
push
jae
push
push
adc
push
xchg
jg
repnz
mov
sub
xor
mov
pop
jle
in
icebp
divb
sarl
popa
fdivrs
pop
mov
push
pop
or
jmp
or
jns
inc
mov
mov
sub
lcall
cld
test
outsl
lods
and
roll
push
xor
ret
push
nop
mov
lret
push
xor
xchg
mov
xchg
ja
push
sbb
adc
xchg
push
pop
es
sbb
nop
inc
and
stos
loope
inc
shrl
xchg
notl
push
int
ficompl
or
sub
xchg
push
pop
xchg
jp
repz
sar
sub
imul
push
pop
jns
fimull
aaa
in
jb
addr16
mov
outsl
lea
movsl
insl
inc
sahf
test
mulb
mov
lods
mov
dec
sbbl
sbb
and
stc
in
dec
loop
gs
sub
dec
pop
out
arpl
xchg
mov
jle
or
outsb
subb
and
jae
in
fwait
fcmovnb
adc
fcoml
fnstcw
lret
outsb
loopne
push
push
movsb
js
test
shlb
stc
notl
xchg
cmp
in
mov
pop
adc
popf
orb
push
mov
cmp
jns
clc
xlat
lret
fnstcw
mov
popf
jmp
mov
cs
jns
xchg
call
loopne
popa
loope
adcb
in
push
loop
fisttpl
jb
gs
popa
cmp
dec
pop
out
stos
xor
or
int3
cmp
fwait
rcll
es
mov
and
pop
dec
xchg
aad
xor
lret
pop
add
and
push
inc
adc
sub
sub
ret
in
xor
inc
repnz
enter
pop
int3
loope
jne
into
and
push
or
fimull
lea
sub
mov
jns
xchg
push
cmp
loop
fs
sub
filds
pop
aam
jg
int3
cmpsb
cmp
jl
cmp
fisttps
cmp
stc
in
pop
sahf
xchg
xor
loop
fsub
and
repz
pop
jle
clc
jmp
notb
sub
and
mov
pop
adc
dec
out
mov
in
imul
mov
in
das
sub
lods
mov
ljmp
repz
xor
es
push
sbb
and
fidivrs
sub
sti
das
mov
imul
iret
adc
mov
daa
pop
int3
movsl
fcom
push
pop
jns
push
bound
enterw
xchg
in
fsubrl
in
push
push
ja
jae
adc
adc
test
jp
in
push
and
cmp
cmp
push
faddp
clc
out
stos
popa
xlat
mov
pop
jns
xchg
mov
scas
cmp
inc
push
lds
and
push
mov
aas
nop
and
mov
loopne
lds
jns
xchg
ja
push
outsl
inc
add
and
fcmovnu
xchg
pop
sbb
or
scas
xor
out
arpl
dec
enter
xlat
sbb
lea
or
pop
test
xchg
push
pop
jns
stc
dec
xlat
add
cmc
adc
cmp
pop
mov
sbb
fs
rcr
xor
xchg
xor
popf
mov
into
mov
stc
imull
mov
andb
hlt
and
jmp
jl
in
mov
and
imul
rorb
cmc
mov
fcmovnbe
cld
jge
es
fs
cmp
call
jns
sub
mov
fxch
adc
test
je
mov
pusha
mov
out
imul
pop
gs
cmp
lret
jns
pop
push
aas
outsl
popf
mulb
lret
das
mov
adc
sbb
cwtl
and
fcompl
mov
jmp
jmp
adc
mov
arpl
push
mull
or
mov
pop
pop
push
pop
jns
xchg
mov
inc
pop
jns
cwtl
test
fwait
clc
xor
gs
jns
xchg
push
movsl
scas
push
pop
jnp
sub
fistpll
ds
and
adc
jle
notl
push
and
xacquire
xchg
pop
or
enter
cmp
mov
sbb
dec
mov
lret
pop
jge
mov
adc
xchg
fcomps
dec
test
scas
sub
call
inc
nop
xchg
sti
lcall
mov
push
mov
xchg
aaa
add
rorb
dec
addr16
mov
dec
xor
pushf
mov
mov
dec
mov
inc
pop
out
pop
mov
cmp
bound
bound
loope
push
lcall
dec
in
push
pop
xchg
scas
xor
aad
out
out
xchg
push
pop
jns
mov
aaa
nop
subl
ja
cld
inc
jge
in
leave
adcl
pop
jns
pushf
mov
dec
mov
push
lock
adc
mov
les
lods
iret
test
or
aad
pop
push
pop
jns
xlat
sahf
pop
pop
sbb
loope
out
fistpll
shlb
cmpsb
sbb
sbb
lret
lcall
outsl
mov
mov
gs
cld
jge
sub
fwait
mov
adc
xchg
enter
adc
sbbl
mov
lea
insl
inc
mov
lret
movsl
jae
jp
or
mov
shll
fdivs
out
and
lret
in
cmp
mov
dec
arpl
cmp
dec
stc
in
ret
and
and
mov
xchg
notl
push
add
mov
push
push
pop
jns
scas
sbb
pop
or
test
test
or
leave
xchg
shll
mov
jae
cld
mov
mov
setno
pop
fcomps
mov
lods
xchg
stc
cltd
jg
jnp
test
mov
nop
into
sbb
cmp
lret
sub
and
pusha
pop
stos
inc
outsl
lret
mov
jmp
rclb
sub
mov
out
lcall
repnz
xor
in
in
xchg
inc
jl
push
icebp
leave
lret
fxtract
repnz
mov
sub
add
fdivs
sbb
in
dec
sbb
and
ja
stos
pop
xor
lea
sub
arpl
in
cmc
je
lahf
fiadds
out
mov
xor
push
cmp
dec
gs
sbb
lret
sub
inc
cmpsb
sarb
out
jecxz
xor
add
adc
lds
jns
xchg
jns
xchg
dec
add
cmpsl
cmp
jns
xchg
push
lea
gs
jle
bnd
sahf
sbb
ret
mov
pop
jns
xchg
and
jecxz
adc
push
clc
out
faddl
loope
int3
or
pop
mov
jge
jns
lock
xchg
push
pop
imul
add
fadds
ljmp
lret
popa
je
push
push
das
xchg
ss
push
sub
xor
cmpsl
push
mov
sub
jbe
mov
push
cmp
pop
ja
mov
lcall
mov
insb
js
lret
cmc
dec
lret
addr16
into
xchg
push
mov
xor
inc
int3
and
cmp
stc
in
jb
inc
cmp
sbb
repz
arpl
in
pop
popf
push
add
xor
in
pop
jle
jmp
pop
push
aaa
cld
loope
cmp
stc
mov
lods
cmc
arpl
mov
cmp
aaa
pushf
fs
add
test
int
mov
pop
jle
mov
cltd
movsb
daa
mov
cli
insl
clc
dec
ja
sahf
jne
push
faddp
sti
dec
xor
je
sbb
dec
popa
arpl
outsb
stos
mov
and
into
jae
jns
xchg
mov
jae
add
xchg
jg
push
scas
and
inc
bound
cld
sti
imul
mov
lods
xchg
mov
pop
daa
iret
xchg
push
div
lret
rcrl
inc
and
insl
jge
fiadds
call
jecxz
lcall
pop
sahf
jle
cs
sahf
push
sbb
in
push
not
lods
fisubs
fnstsw
push
sbb
xchg
push
pop
xchg
mov
ds
das
xor
dec
mov
mov
jle
in
push
pop
mov
cs
psadbw
xchg
sbb
pxor
cmp
je
cld
test
cmp
enter
xorl
lret
shr
and
in
push
ficoms
fcmovne
std
dec
stos
push
lahf
mov
mov
pop
jns
cmp
or
fdivrs
push
pop
jns
rorb
mov
daa
pusha
pop
xchg
je
xchg
fwait
pusha
mov
dec
movsl
lods
mov
inc
cmp
inc
jle
stc
in
test
cmp
xor
in
pop
jle
add
es
jo
sbb
pop
jle
aam
add
mov
fisttps
scas
dec
sub
fcoml
cli
insb
in
cltd
add
pop
mov
xchg
push
fisubrs
je
add
push
xchg
mov
xchg
push
pop
jns
sub
ja
fs
pusha
jle
test
adc
xchg
je
pop
mov
inc
cmp
shlb
cmp
into
xchg
pop
sbb
xchg
jg
pop
test
in
sti
sub
inc
mov
jbe
and
stc
jg
or
and
test
cli
mov
out
mov
add
mov
lret
mov
cmc
fldenv
repz
sbb
repnz
mov
and
gs
sub
repnz
das
mov
int3
in
pop
adc
stos
fbld
mov
shlb
jmp
stc
in
xchg
jl
call
inc
popl
jl
cmp
lret
das
fisttpll
pop
pop
xlat
and
notl
lahf
into
push
icebp
fimull
adc
xor
daa
mov
jns
inc
and
fbld
shlb
repnz
cmpb
inc
scas
mov
lcall
mov
lret
cmp
leave
aad
xchg
cwtl
pop
cld
repnz
das
sti
sbb
pop
and
jbe
xor
lret
das
mov
adc
add
enter
lret
das
mov
sub
faddl
xor
repnz
cmpl
andl
into
sub
jl
xor
sbb
inc
mov
lret
das
sub
shl
cmpl
mov
add
fimull
xchg
jb
outsl
cmovge
add
xchg
and
jns
sub
cmpsl
lods
inc
rorl
mov
aam
fbld
aaa
jecxz
push
das
mov
cmc
mov
pop
xor
mov
mov
add
sti
mov
faddl
lret
xor
mov
gs
jne
sub
test
dec
mov
scas
mov
loop
jnp
xor
sbb
cmp
jnp
lret
xchg
mov
imul
dec
ds
jg
lods
jmp
faddp
and
mov
xchg
pop
jle
sbb
sub
out
sub
sbbl
sbb
sbb
push
jl
in
loop
xchg
cli
je
insb
pop
and
and
mov
mov
stc
notl
mov
jbe
aam
inc
sub
xchg
pop
jle
add
cmp
push
pop
or
jle
add
jle
addl
lods
mov
sub
clc
or
in
xchg
xchg
mul
xchg
and
fisubs
in
jecxz
mov
mov
sbb
repz
add
cld
repnz
sub
lret
xchg
dec
jmp
dec
pop
mov
sbb
arpl
ds
pop
jle
sti
push
mov
fwait
add
outsb
cmc
cmp
mov
scas
mov
dec
mov
add
inc
push
jmp
or
xchg
jns
repnz
das
ffree
pop
push
arpl
add
push
push
and
mov
and
scas
mov
pop
fisubl
pop
data16
scas
mov
loopne
cmp
fcom
cmp
lds
sub
pusha
cmc
mov
outsl
add
mov
stc
leave
pop
cmp
or
mov
xor
popf
and
mov
pop
lock
in
adc
and
ss
push
mov
xchg
pop
sub
cli
jnp
mov
ds
lahf
add
dec
mov
ret
test
loope
sub
call
fldenv
jns
jg
ret
hlt
into
out
cmp
ljmp
pusha
mov
mov
inc
aam
cmp
ja
and
push
test
or
sarb
repnz
out
mov
pop
xchg
daa
xor
out
imul
pusha
xchg
enter
repnz
das
mov
shl
stos
push
mov
or
push
or
sti
cltd
cwtl
inc
shrb
xchg
jmp
push
bound
cwtl
arpl
sub
sub
pop
inc
fnsave
mov
lret
lock
mov
cli
call
enter
push
mov
ret
sahf
jge
flds
filds
sahf
aas
icebp
mov
ja
push
jns
dec
pop
lret
test
repnz
imul
dec
rclb
ret
fistpll
scas
jnp
imul
sbb
les
inc
or
mov
stos
rdtsc
imul
in
xor
sahf
ss
jge
add
mov
fnstsw
dec
or
jl
rolb
xchg
xchg
sbb
je
in
imul
fnstenv
lahf
bound
xor
pop
xchg
push
adc
pop
jle
in
push
lods
hlt
inc
out
dec
pop
sub
and
dec
adc
gs
push
pop
jns
lcall
mov
nop
lea
push
pop
jns
loope
mov
test
add
jg
and
mov
mov
push
stos
and
lret
pop
in
pop
inc
xchg
push
mov
dec
xchg
xor
inc
fsubrs
sbb
in
pop
daa
jmp
imul
jg
andps
pop
aad
jns
sub
out
jmp
rcl
jae
scas
inc
sti
push
pop
jns
mov
int3
or
test
aam
sub
pusha
stos
enter
add
adc
iret
adcb
stos
testl
lret
dec
jmp
sub
sahf
int
stc
in
jnp
mov
lock
sbb
pop
scas
adc
imul
xchg
adc
sbb
mov
xchg
mov
repnz
jae
sbb
xchg
in
jg
loope
aaa
out
stos
lds
xchg
xchg
pop
jle
push
xchg
mov
leave
js
int3
and
pop
call
les
add
lret
mov
push
in
inc
ds
cs
leave
xchg
das
push
iret
xor
cld
repnz
das
jmp
sbb
push
pop
and
mov
push
jno
xlat
push
cld
add
dec
push
test
scas
sbb
sub
sbb
xchg
push
pop
jns
ret
imul
jp
jmp
and
jns
stc
pop
sbb
fcmovnb
dec
push
or
xchg
inc
movsl
int
mul
push
cli
ret
inc
scas
mov
imul
mov
cld
sti
enter
jge
push
xor
les
test
and
repnz
das
mov
jg
andb
aam
lret
das
mov
inc
sub
out
push
stc
xor
das
mov
sub
cld
or
sub
mov
out
or
fidivrs
dec
fnstcw
das
mov
scas
movsl
test
mov
ret
movsb
mov
jge
add
pop
mov
clc
add
mov
in
push
mov
sti
push
sbbb
jge
lret
insl
mul
mov
js
mov
in
pop
jne
pop
dec
loope
hlt
lods
lds
jl
in
pop
jle
bound
pop
xlat
cmp
out
pop
jle
into
outsb
aaa
ss
cmp
and
cmp
cli
enter
xchg
or
cld
pop
xchg
lock
lret
jnp
jns,pn
test
pop
pop
inc
push
xor
dec
xchg
mov
insl
mov
xor
jne
pushf
xor
inc
dec
dec
arpl
sbb
mull
in
notb
cmp
in
pushf
jnp
mov
out
test
outsl
ja
mov
loopne
fs
mov
jl
jle
sahf
mov
jmp
cmc
push
rcpps
sbb
fists
mov
mov
inc
filds
stc
in
cmpsl
ss
out
ret
test
pop
outsb
mov
fucomp
mov
in
push
cmp
iret
push
mov
fwait
pop
call
bound
cli
inc
inc
mov
das
mov
mov
jne
outsb
or
repnz
xchg
leave
jmp
xor
cmp
movsl
and
sub
xchg
pop
lds
jmp
lock
imul
dec
sub
xchg
pop
jle
mov
cmp
adc
popl
repnz
movsb
sti
jbe
push
call
repnz
inc
scas
out
popf
loopne
scas
aam
adc
cld
repnz
das
xor
cwtl
cmpsb
cmp
repz
hlt
pop
xor
xchg
das
mov
adc
lods
add
std
fisubrl
and
repnz
push
jg
int
adc
in
or
popf
push
mov
mov
jns
xchg
push
movsl
sarl
aaa
sahf
inc
dec
mov
fwait
dec
jnp
inc
pop
jne
pop
fwait
mov
cld
jnp
lret
cli
or
fsts
mov
testb
call
cmc
lea
sbb
adc
inc
cmc
push
and
xor
loop
inc
mov
cmp
lea
test
dec
js
or
in
pop
mov
push
mov
mov
cmpsl
jge
addr16
jl
sub
fs
adc
inc
jmp
pop
les
icebp
xor
mov
push
pop
adc
stc
ja
fmull
inc
cmc
fstpl
lea
adc
in
mov
in
xchg
adc
adc
xchg
push
ficomps
test
ljmp
inc
pop
jns
fwait
sbb
push
adc
inc
fimuls
inc
cmpsb
loop
leave
xlat
xlat
or
jns
cmp
aaa
jno
xchg
es
in
push
mov
sbb
mov
test
xchg
push
pop
dec
pop
inc
dec
ret
push
in
pop
inc
push
pop
jns
dec
lds
inc
inc
push
fistpll
add
shrb
adc
mov
in
mov
stc
push
xchg
mulb
gs
enter
jae
ljmp
fidivrl
or
cwtl
ljmp
push
pop
cs
pop
add
add
in
lea
scas
cld
jb
jmp
bound
clc
scas
mov
gs
cmp
ljmp
cmc
mov
and
push
dec
dec
cmp
std
cmc
xchg
jne
add
rcrb
inc
aaa
xchg
ds
pop
and
mov
jo
jns
xchg
sbb
aas
es
popf
fs
sbb
add
adc
jge
test
addr16
int3
push
imul
inc
jle
out
shl
fwait
sub
and
je
fwait
sub
leave
sbb
mov
lret
rol
mov
xchg
shl
lret
das
ds
mov
add
ret
arpl
and
mov
bound
mov
fists
fidivrl
adc
cmpsb
mov
lods
push
das
mov
sub
pop
jle
in
pop
shll
and
stc
in
popa
test
xchg
fmull
xchg
xchg
pop
fcomps
fnsave
aam
push
ficomps
jmp
icebp
imul
leave
jno
cwtl
dec
sbb
stc
fnstenv
push
lds
mov
xchg
ret
mov
dec
add
addl
xlat
aas
cmp
data16
mov
push
pushf
sbb
xchg
ja
icebp
icebp
and
adc
xchg
push
pop
cs
decl
imulb
pop
cmp
dec
cmp
add
aad
jle
in
inc
loopne
mov
push
inc
lcallw
repnz
pop
xchg
pop
call
imull
add
dec
sub
gs
test
cltd
mov
enter
pop
mov
mov
sahf
or
jmp
mov
lret
xchg
cmp
andl
xlat
cmp
sub
subl
repz
scas
mov
mov
cwtl
dec
or
dec
xchg
es
scas
mov
or
pop
jecxz
lods
dec
pop
xchg
push
add
xchg
sbb
shrb
mov
repz
je
cmpb
icebp
enter
cmp
jno
fdivrs
jg
cld
in
adc
cmp
jmp
mov
stc
mov
cs
push
jl
adc
imul
cld
repnz
das
adc
dec
mov
not
push
andl
enter
inc
cmp
and
xor
loopne
inc
cmp
or
in
pop
xlat
mov
jns
repnz
mov
rcr
icebp
hlt
out
inc
rol
sub
ja
ja
pop
scas
mov
add
cld
sti
dec
adc
mov
pop
mov
outsl
mov
xchg
lret
dec
add
cmp
add
lea
sub
sub
lock
xchg
fldcw
and
lahf
and
lock
adc
lret
int
sbb
mov
and
or
call
sub
inc
scas
jp
sti
lea
fldt
push
leave
mov
push
sub
mov
cld
repnz
hlt
mov
add
sub
clc
sbb
xor
cmc
mov
mov
inc
div
lret
das
mov
jns
gs
ret
lret
das
mov
inc
pop
popf
out
add
adc
repnz
cmp
jns
shl
mov
testl
add
pop
pop
jns
dec
sub
repz
xor
fsubl
jp
mov
push
pop
pushf
pop
cli
mov
sub
ret
out
xchg
jne
jnp
push
pop
jns
sub
sub
and
addb
jnp
fbld
push
cltd
mov
mov
jg
cld
cmpsl
push
jecxz
jb
inc
frstor
js
push
pop
fnstcw
stos
aad
push
in
pop
aaa
inc
roll
adc
and
pand
inc
clc
enter
jge
inc
xchg
push
and
pop
popf
add
call
dec
or
cwtl
pop
faddl
scas
mov
pusha
dec
jb
imul
cli
mov
nop
into
xchg
pusha
test
jno
repnz
into
test
push
or
xchg
sub
cmpb
shl
xor
cmp
in
mov
je
inc
stc
in
pop
xchg
cmp
jmp
inc
aam
mov
jl
push
sub
ds
fwait
or
cmp
or
mov
cmc
ds
das
iret
mov
xorl
lret
das
mov
mov
jmpw
jle
mov
mov
test
mov
shll
outsl
lds
repnz
ficoms
adc
sbbl
lret
int3
sarl
adc
and
or
dec
mov
mov
enter
xchg
push
xor
push
pop
xor
ss
repnz
xchg
popa
mov
xchg
js
sbb
and
xchg
insb
fadds
sub
mov
stc
movsb
in
sbb
stc
in
je
and
mov
and
cltd
pop
scas
stc
in
pop
xchg
int3
stc
out
jbe
push
mov
pop
jle
ret
jmp
loop
fdivr
mov
iret
push
stc
test
mov
ret
fcompl
adc
outsl
data16
in
mov
daa
add
dec
fwait
jbe
xchg
aaa
fs
in
pop
test
movsl
divb
in
pop
jle
adc
mov
sbb
xchg
pop
jle
mov
adc
pop
dec
inc
js
cmpl
pop
cmp
es
int3
testl
lret
das
jnp
adc
ds
negb
jno
or
pop
push
mov
add
pop
rorb
dec
cmp
nop
das
mov
and
add
mov
stc
mov
sarb
out
and
call
mov
scas
imul
inc
ljmp
rol
cmp
pop
push
push
sub
jge
pop
stc
in
ds
sbb
cmpsl
add
addr16
call
jl
jl
mov
arpl
repnz
and
and
sub
fdivl
xchg
jg
cld
fcomps
jne
ss
jle
in
xchg
push
or
mov
push
jns
loope
inc
jmp
mov
data16
push
pop
fdivrl
xorb
jmp
lods
imul
ds
dec
or
dec
cmp
sub
or
cld
jnp
test
xor
pop
rclb
and
cmp
cmpsb
repnz
das
mov
sbb
mov
xchg
jg
stc
push
setge
or
inc
adc
pop
clc
enter
jb
cmp
loopne
sub
mov
sub
repnz
mov
ss
and
dec
adc
cli
xchg
pop
cld
repnz
das
test
jle
cmpsb
jl
int3
into
and
dec
repnz
das
mov
pop
fadds
xchg
pop
cmp
mov
in
jl
cwtl
sbb
jl
in
in
mov
fdivs
hlt
in
xchg
xor
push
dec
and
icebp
lret
aaa
add
lahf
lret
add
xchg
jbe
fdivrp
xor
test
pop
test
mov
shll
ds
int3
cmp
adc
add
pop
inc
das
push
xchg
mov
adc
in
aas
inc
jns
loope
push
jo
mov
in
add
and
xor
xchg
pop
xchg
push
pop
jns
iret
add
enter
inc
movsl
sti
push
pop
jns
pushl
out
and
jnp
inc
ret
or
hlt
push
mov
jmp
and
mov
or
pop
jns
cld
daa
icebp
adc
jg
popaw
icebp
mov
inc
lods
and
xor
pop
cmpsl
pop
enter
add
mov
push
aam
jge
divb
sub
fmul
xlat
jmp
stc
in
pop
pusha
ficoms
mull
push
loop
pop
jle
or
push
xchg
mov
repnz
adc
lcall
loop
inc
decb
movsb
cmp
mov
pop
jle
in
jb
mov
adc
mov
xchg
inc
stc
repnz
xchg
outsb
icebp
push
jg
aam
add
test
and
pop
jl
psubusb
lret
and
data16
sti
inc
xchg
mov
lret
mov
stc
in
or
repz
int3
stc
in
pop
sbb
call
pop
lds
push
dec
jecxz
pop
jle
add
shlb
sbb
mov
gs
test
push
push
cli
pop
mov
rcll
aad
jns
xchg
push
in
mov
push
pushf
fs
daa
in
push
pop
cmc
aaa
pop
or
js
cmp
jg,pn
pop
jns
sub
add
cld
ret
sar
sbb
push
pop
loopne
cmpl
shll
nop
movsl
xchg
test
xchg
push
jge
mov
pop
mov
dec
aad
lea
popf
lods
jnp
enter
sbb
mov
pop
aaa
xchg
jns
pop
cli
add
inc
hlt
bound
test
sbb
mov
xchg
shlb
sub
std
sub
and
sub
test
adc
mov
jno
jae
notl
and
out
sahf
test
cmp
jo
ljmp
das
ds
and
push
mov
sbb
das
mov
orb
imul
sbb
cld
repnz
or
jmp
cld
addr16
mov
leave
inc
cmp
fsubr
jle
mov
dec
enter
lds
or
repz
imull
fwait
push
das
mov
xchg
cmp
loop
pop
je
cmp
pop
jge
lret
inc
adc
cmp
gs
in
pop
and
test
mov
xlat
jb
in
pop
jle
mov
add
iret
xchg
pop
jle
sub
sub
repz
int3
add
cs
pop
jle
in
lea
add
push
push
fadds
cld
sti
enter
push
pop
pop
push
jne
sti
lretw
cmc
enter
sbb
div
sti
mov
sub
jle
hlt
xor
cld
stos
or
push
xor
decl
push
fidivrs
add
cli
js
loopne
inc
jae
push
pop
jns
test
push
cmc
dec
test
lea
jns
ja
pop
leave
add
adc
mov
into
ret
inc
inc
cmp
popf
dec
js
add
xor
sub
and
sub
sahf
loop
xchg
push
pop
jns
dec
pop
and
inc
movsb
or
inc
push
pop
jns
fs
loope,pt
mov
mov
fs
dec
xor
gs
dec
jge
xchg
or
sahf
lods
fmull
add
aaa
mov
mov
push
and
or
test
sbb
imul
sarb
lret
lock
lret
in
pop
jb
fs
lret
das
jg
push
stos
jecxz
lret
test
fisttpl
cld
ja
jne
push
in
or
int3
mov
imul
es
mov
das
mov
inc
and
lods
mov
cmp
or
push
sbb
adc
mov
int3
sahf
push
cmc
fsts
mov
in
ja
fsubl
dec
adc
xchg
xchg
jg
pop
dec
mov
lds
jmp
in
jp
aas
or
pop
scas
imul
stc
in
fmull
pusha
sbbl
das
adc
repnz
pop
add
inc
or
test
enter
cmc
add
mov
sahf
mov
enter
add
in
mov
es
out
add
mov
mov
pop
pop
mov
sub
scas
mov
lret
inc
daa
aas
dec
ljmp
mov
or
leave
and
sub
push
repnz
xchg
sub
or
cltd
andb
sbb
push
lret
das
mov
push
int
jnp
out
sub
cld
repnz
aam
xchg
or
mov
mov
incb
cmp
jmp
mov
mov
addr16
pop
jns
roll
nop
cs
outsb
orl
jns
xchg
push
lret
pusha
stc
cmc
cmp
ljmp
dec
xchg
popa
pop
es
jno
scas
mov
data16
pop
xchg
ja
addr16
push
cli
enter
xchg
in
sub
inc
fmull
cmpsb
xchg
dec
dec
mov
imul
mov
icebp
aas
dec
mov
test
mov
adc
outsl
in
pop
jle
popa
cli
or
rorl
scas
ss
jl
aad
inc
clc
pop
push
jbe
sub
mov
sbb
loopne
daa
push
nop
enter
xor
and
inc
adc
cmp
mov
xor
fnstenv
insb
outsb
lds
popf
xor
push
mov
cmpsb
fcmove
popa
fs
push
push
jmp
or
jl
stc
test
gs
cmp
push
jns
xchg
push
dec
cli
fbstp
in
push
pop
xor
mov
cmp
add
add
loopne
dec
imul
lret
ret
or
sahf
popf
pop
popa
cld
push
mov
xchg
cwtl
mov
lcall
xor
sub
outsl
sub
fnsave
repnz
int3
int3
popa
dec
scas
add
outsl
jns
lea
shr
int
sbb
sbb
jne
out
sub
icebp
aas
cmc
inc
pop
orb
sub
vprotw
cmpsl
inc
fists
repnz
sbb
push
inc
lret
lret
mov
out
aam
and
jne
cmc
add
mov
sbb
mov
xchg
aaa
mov
cmp
mov
push
pop
jns
mov
ret
cmp
or
rcrl
ja
xchg
jae
xlat
iret
jne
sbb
xor
mov
jl
or
inc
outsb
testl
mov
rorl
jle
ja
iret
xor
dec
in
jnp
lret
stc
in
dec
out
movb
and
mov
and
loopne
outsb
outsl
xchg
stos
mov
test
mov
stc
pop
add
dec
sub
cli
enter
sbb
sbb
fimuls
arpl
xor
repnz
sub
push
pop
jns
cli
mov
in
movsl
lock
in
push
pop
or
popf
sbb
push
stc
negl
roll
push
adc
add
xchg
jg
xor
sub
lea
xor
xchg
xchg
pop
jle
mov
pop
nop
mov
jge
enter
fwait
xor
call
icebp
adc
xchg
pop
cmp
sbb
cmpsb
outsb
and
inc
push
pop
aaa
mov
orb
cld
repnz
mov
push
and
xchg
cmp
cld
repnz
das
popf
dec
jp
cs
mov
pop
add
das
mov
out
iret
test
arpl
fstpt
pop
enter
in
pop
sbb
pop
jle
movsb
inc
in
scas
cmp
jb
pop
adc
push
bound
stc
fstps
dec
push
movl
scas
pushf
mov
call
mov
mov
pop
jns
jp
xor
shl
xchg
xchg
aaa
lret
jecxz
std
push
rclb
and
adc
jnp
stos
cs
lret
add
push
imul
dec
sub
fwait
and
out
xchg
notl
outsl
fwait
icebp
xchg
jnp
lret
pop
cli
insb
fldcw
movsb
ds
and
aaa
mov
sarb
inc
pslld
inc
movsb
aas
int3
jp
scas
or
sarb
push
fcmovne
inc
movsl
shl
das
dec
push
in
jbe
out
mov
sti
jb
cmc
fidivrs
pop
mov
push
push
repz
jl
mov
dec
sub
ss
push
dec
mov
rclb
pop
aaa
add
aad
xchg
push
inc
shlb
mov
sub
xor
inc
lods
in
lock
jl
adc
adc
jae
inc
cld
in
cmpsl
xorb
ret
adc
mov
lret
cld
jb
aas
mov
mov
mov
jle
repnz
shlb
sub
inc
lahf
repnz
adc
enter
sub
test
scas
mov
jle
pop
ret
repnz
test
mov
lock
scas
test
stos
inc
mov
repnz
pop
mov
int3
push
call
or
stc
cmp
addr16
stos
mov
mov
shlb
cld
inc
mov
in
lret
cmp
into
outsl
ss
aam
xlat
sbb
rcll
xchg
das
mov
sub
loop
or
mov
cmp
dec
out
pop
rolb
lret
mov
test
jne
rcrb
or
push
xchg
das
mov
mov
push
scas
and
jns
test
mov
in
and
stc
notl
scas
movb
ds
nop
xchg
pop
jle
mov
adc
or
shlb
add
jne
inc
push
hlt
cltd
push
xchg
lock
sbb
pusha
cld
repz
jns
xchg
push
dec
adc
rorb
jbe,pn
or
pop
mov
movsb
out
xor
enter
mov
jns
stos
je
testb
sub
and
out
imul
sti
int
aam
js
pop
jns
ljmp
aam
insl
pop
enter
xchg
push
into
pop
pop
lds
bound
mov
and
adc
xchg
adc
pop
jle
testl
lcall
push
jmp
stc
in
loopne
sub
sub
mov
je
in
pop
push
test
sub
daa
imul
das
lcall
test
xchg
scas
and
loopne
jg
nop
mov
push
jle
in
sbb
or
mov
stc
in
pop
aam
rcll
pop
lret
push
push
mov
jle
push
cmc
push
loope
aad
mov
loope
xchg
pop
jle
mov
fs
loopne
and
lcall
add
pusha
loopne
mov
push
out
je
adc
in
mov
jmp
cmpl
ret
sahf
mov
and
pop
arpl
adc
mov
mov
xchg
sub
inc
je
mov
lret
ljmp
test
inc
aam
jmp
jae
pusha
sbb
nop
sub
mov
xchg
scas
mov
cmp
lods
lds
jae
repnz
sbb
xchg
mov
dec
cmc
call
sbb
and
lret
mov
in
dec
adc
jmp
shlb
imulb
mov
movsb
dec
ljmp
ss
jmp
into
insl
insb
inc
repnz
das
mov
add
ljmp
sbb
cmp
popf
pop
sti
mov
bnd
mov
xchg
jbe
fwait
pop
inc
sbb
cld
repnz
clc
mov
or
in
lea
std
int3
hlt
popa
fisubs
in
and
jns
dec
push
sub
andb
push
push
cli
enter
imul
loop
nop
das
frstor
je
rol
jno
mov
repnz
mov
and
gs
add
add
cmp
sub
pop
ds
xor
out
pop
cmp
sub
rol
mov
pop
cmp
pop
lods
js
xchg
add
jbe
xchg
pop
loope
adc
insb
xor
mov
movsl
xor
stos
repnz
adc
lds
ljmp
mov
and
sub
jg
repnz
daa
jge
sub
aam
das
call
jno
xchg
ja
clc
cmp
add
lds
push
mov
xchg
icebp
fnstenv
adc
loopne
pop
jns
lods
jnp
mov
jne
cwtl
aad
push
test
repnz
xchg
das
add
pop
jle
jb
icebp
xchg
dec
mov
lock
sar
enter
push
gs
and
sarl
push
loop
roll
and
push
pop
mov
out
mov
js
jge
in
aaa
hlt
cld
mov
cmp
cmp
xchg
pop
jge
mov
repz
and
inc
jle
lahf
cltd
out
outsl
bound
and
sub
mov
out
jp
jnp
xchg
into
pusha
mov
sbb
pop
test
out
xchg
mov
mov
stc
shr
cmp
in
and
sbb
rorb
data16
pop
jns
xchg
xchg
inc
cmp
dec
hlt
pop
sub
in
and
mov
mov
mov
mov
pop
jle
cld
xchg
add
ss
sub
negb
stc
in
xchg
cmpsl
jb
stos
xchg
imul
stc
in
inc
das
jmp
orb
stc
in
pop
movsl
sarb
jecxz
inc
pop
push
jae
sahf
mov
pop
jae
andl
pop
jle
mov
xchg
lret
mov
out
mov
push
iret
jae
and
scas
lret
sub
mov
testl
test
lods
xchg
cmp
cmp
sub
das
push
int3
inc
das
mov
fdivrl
push
or
dec
jl
cld
repnz
mov
fidivs
in
mov
cltd
sbb
jmp
mov
mov
repnz
jg
in
test
lods
fprem1
mov
lret
das
mov
fmuls
jge
push
inc
fcomps
dec
mov
fisubrl
fcoms
sbb
mov
daa
int3
push
cmp
int
cs
jg
enter
mov
cs
pop
add
cld
repnz
das
jl
xor
dec
data16
sbb
repnz
das
mov
adc
cmpsb
jp
adc
das
ds
rcll
sbb
pop
mov
adc
cmp
pop
stc
repnz
cmp
push
sbb
js
filds
call
add
ja
in
dec
ret
push
cmp
icebp
scas
add
sub
mov
pusha
jnp
out
shr
mov
sub
or
fstl
adc
lret
pop
dec
mov
lret
sub
lret
xchg
hlt
and
scas
mov
add
repnz
and
jb
imul
mov
inc
js
push
out
cmpsl
sub
inc
add
mov
lret
sub
repnz
in
jle
xor
jb
pop
or
push
dec
andl
xchg
ds
xchg
gs
jle
in
inc
xchg
iret
and
xchg
icebp
loope
pop
cmp
adc
xor
xor
add
jle
in
or
cs
loop
and
mov
fldl
xchg
pop
enter
mov
fs
into
pop
jnp
and
mov
sbb
aas
std
mov
out
and
scas
inc
lea
addr16
out
addr16
mov
add
dec
aad
sub
repz
lret
pop
xchg
and
mov
sti
mov
xchg
js
jno
and
jl
ds
jl
in
push
daa
sbb
inc
ret
xchg
js
stc
in
dec
push
xchg
repnz
push
in
in
out
stc
in
pop
insl
or
lret
inc
mov
mov
add
inc
jle
mov
fimuls
pop
in
repz
add
jmp
stc
in
pop
mov
jmp
mov
sub
fsub
xchg
pop
jle
xorl
xchg
xchg
ja
inc
xchg
pop
jle
js
inc
cmp
test
ss
in
lods
jg
mov
movsb
fisttpll
cld
repnz
mov
clc
mov
add
adc
mov
das
mov
mov
bswap
jge
sbb
filds
cld
fistl
insb
dec
lret
mov
jl
in
xor
jo
insl
pop
adc
outsl
cld
repnz
mov
shrb
xchg
dec
stos
icebp
xchg
das
mov
lcall
lcall
mov
dec
cmpsl
les
jl
repnz
das
outsl
xchg
test
adc
cs
push
lods
hlt
cmp
lret
das
mov
and
inc
sub
das
mov
shll
sti
fisubs
mov
jnp
imul
push
sub
lret
jae
stc
repnz
sti
jmp
pushf
ss
sti
enter
sub
mov
xor
or
xchg
je
mov
cld
repnz
dec
pop
insb
cwtl
xchg
scas
mov
das
mov
sbb
cmp
fdivrs
pop
stc
dec
xchg
out
je
add
ja
outsl
scas
mov
daa
iret
xchg
and
mov
ret
enter
sbb
inc
aas
pop
js
mov
pop
bound
push
sub
pop
js
mov
mov
mov
in
in
mov
inc
add
in
aaa
add
ja
iret
imul
fs
clc
adc
hlt
xchg
das
dec
sub
ja
daa
dec
jge
in
loop
xchg
popf
fcoml
sub
int
jo
les
rolb
popf
ficoms
pop
jns
cmp
cmc
das
inc
mov
push
jns
xchg
push
pop
popa
cmp
leave
out
aas
xchg
jg
pop
adc
lods
jge
inc
inc
idivl
imul
repnz
in
mov
xchg
mov
jns
xchg
aaa
xor
xchg
rorl
or
enter
cmp
in
push
pop
jecxz
jecxz
js
cmc
lret
and
pop
jns
jae
fnsave
xabort
aam
sub
out
cmp
pop
mulb
pop
popf
inc
mov
popa
pop
jns
jge
jp
jbe
daa
out
fwait
sub
in
push
das
sub
pushf
cmc
fbld
ds
pop
pop
in
adcl
aaa
das
dec
insb
in
aaa
loop
mov
repz
movsl
pop
push
adc
dec
outsl
cmpsl
mov
mov
inc
scas
sbb
xor
mov
jge
adc
xchg
repnz
cmp
lret
fwait
push
adc
movsl
pop
jns
and
lock
lahf
test
push
icebp
hlt
popf
push
lock
mov
xchg
fiaddl
add
mov
pop
imul
ljmp
dec
mov
pop
mov
add
xchg
sub
lds
add
jle
ja
inc
xor
mov
div
sbb
fs
dec
movsb
inc
ror
fs
in
xor
sbb
stc
push
in
mov
pop
jns
movsb
or
pop
sub
fidivrl
movsb
ret
and
and
xchg
and
outsl
dec
in
and
push
insl
loope
xchg
sbb
jbe
push
pop
jns
nop
in
cmp
adc
clc
dec
in
dec
incl
push
dec
xchg
enter
pop
push
cli
xlat
test
test
loopne
shrl
mov
ja
cs
mov
lret
shlb
out
adc
adc
daa
xchg
aaa
mov
test
dec
sarb
jge
in
add
adc
lds
out
xchg
pop
in
movsb
ret
push
cltd
mov
imul
das
mov
xchg
add
sahf
inc
ljmp
mov
jno
inc
push
loope
ds
ret
sbb
sub
popf
mov
aam
dec
inc
lcall
repnz
das
jbe
cli
scas
lret
lds
jb
lret
das
mov
call
decb
and
mov
cltd
pop
or
push
push
stc
in
pop
in
inc
dec
dec
cs
and
jg
push
dec
int
imul
es
sub
das
lcall
stc
mov
ss
adc
aam
dec
leave
xchg
mov
clc
dec
nop
mov
mov
pop
xor
mov
in
and
or
repnz
jg
movsb
movsl
movsb
lods
ds
jp
xchg
mov
push
mov
ss
add
std
cld
jae
add
xchg
sahf
and
inc
push
scas
outsb
fldenv
mov
cmp
push
pop
enter
lods
mov
mov
arpl
dec
aam
xlat
or
xchg
in
outsb
sub
jo
cs
and
xchg
jg
std
xor
das
jge
mov
dec
pop
cmp
and
add
imul
pop
aad
inc
pop
jle
in
incb
xor
sub
pop
ds
fs
fldl
inc
fcompl
bound
jge
out
test
pop
add
and
inc
cmp
sub
cmp
pop
mov
push
lods
xor
fdivrp
test
xlat
fadds
movsl
sarl
lock
cmp
sub
jmp
ss
sbb
in
pop
sbb
dec
mov
fisttpl
inc
pusha
sbb
mov
fistps
cmp
dec
lret
das
ds
or
ds
movsb
fisttpll
cmp
fptan
repnz
das
jge
dec
shr
rorb
sbb
fs
cmp
jl,pn
daa
adc
int
mov
in
pop
test
es
jns
inc
hlt
subl
into
fld
mov
lret
mov
dec
popa
enter
ja
ds
aam
pop
jne
sti
imul
adc
sarl
fists
aas
pop
jns
xchg
pusha
int
inc
mov
ss
xchg
push
popf
fdivp
mov
nop
pop
cwtl
in
push
pop
out
add
sbb
shrb
jns
adc
inc
outsl
or
xlat
xor
xchg
add
sbb
jg
fbld
in
add
lods
pop
xchg
jg
stc
adc
dec
mov
pop
inc
xchg
fwait
dec
jbe
jl
in
jns
cmp
fisttpl
pop
into
andl
xchg
aas
stos
popf
clc
ficomps
xor
daa
pop
jle
mov
test
push
clc
enter
jge
mov
add
addb
mov
jg
js
das
stos
and
enter
cmpsb
mov
jns
loope
clc
fistps
sti
int
in
inc
push
jb
inc
mov
add
ret
lret
iret
repnz
dec
rcrb
scas
in
mov
rorb
testl
cmp
icebp
pop
clc
dec
cwtl
mov
lret
add
jb
aaa
jbe
mov
lret
sbb
add
adc
adc
lahf
push
fiadds
js
in
mov
outsb
jecxz
pop
jns
xchg
in
cmp
cwtl
imul
xor
xchg
push
ss
out
into
jno
lahf
fbld
arpl
mov
pop
and
sub
pop
cmpsb
inc
pop
jns
mov
lea
js
add
lods
lods
out
addr16
xsaveopt
xlat
sti
xchg
push
pop
jns
cmp
and
mov
outsb
pavgw
xchg
fsubr
xchg
aas
xchg
stos
fbld
das
mov
and
push
stos
repz
xor
inc
mov
bswap
idiv
cmp
add
xchg
ja
mov
xor
pop
xchg
push
pop
jns
popf
pusha
ret
push
std
lock
jns
movsl
xor
xor
push
popa
popf
shr
stc
notl
add
clc
dec
xor
enter
mov
xor
aad
xor
inc
clc
movsb
fisubs
icebp
test
jns
xchg
aad
xchg
sahf
mov
fmul
mov
rol
xchg
push
add
xchg
push
ficoms
and
sbb
jae
pop
jle
divl
loope
jl
movsb
fldl
push
repz
gs
jns
jecxz
jnp
out
imul
js
repnz
pop
stc
mov
cmp
data16
adc
call
xor
cs
push
in
movsb
addr16
mov
incb
outsl
mov
push
adc
pop
js
mov
iret
into
push
inc
jne
popa
xchg
and
mov
jg
pop
jns
cmpsb
sahf
in
mov
mov
pop
inc
test
mov
ret
dec
xchg
out
dec
jl
sbb
xor
in
pop
test
push
sbb
add
aam
mov
xchg
jl
jp
jbe
insb
mov
lods
jns
xchg
push
xchg
pop
jne
xor
cmp
push
pop
pushf
adcb
aad
daa
mov
xchg
push
pop
jns
xor
xchg
jae
lods
in
mov
cmp
pop
jns
and
enter
xlat
out
sbb
and
stc
in
jg
jle
aas
sbb
shll
or
jle
pop
loopne
mov
outsb
cltd
jl
sbb
or
and
xor
lods
pop
jle
in
test
pop
psubusb
inc
push
mov
jno
xor
je
cmp
sar
push
rorb
decb
test
cltd
fldl
scas
mov
outsl
std
cmp
sbb
lret
test
mov
xor
jge
sub
pop
dec
and
ds
jge
pop
mov
repnz
arpl
jns
loopne
lret
aas
not
cld
push
mov
mov
mov
cmp
jge
vsqrtpd
das
pop
jp
or
push
pop
jns
inc
out
rcll
xchg
in
negb
enter
into
movb
xchg
push
lods
in
data16
dec
insl
lea
push
pop
jns
xchg
and
lret
or
cmp
xchg
out
int
mov
fs
stos
pusha
xchg
lods
mov
stos
sbb
or
decl
mov
xchg
pop
jle
ret
push
pop
hlt
cmc
lods
jns
push
ror
je
or
mov
cmp
inc
jo
sbb
push
roll
or
sub
lock
loope
pop
add
stc
in
sbbl
xor
sub
in
hlt
mov
divl
jbe
jl
in
test
pusha
dec
testl
push
pop
jns
inc
scas
xorl
dec
sarl
sub
jg
pusha
xor
cwtl
in
mov
jge
in
pop
jo
add
inc
or
pop
sti
lods
idivb
push
leave
xchg
pop
jle
adc
out
lds
mov
notl
mov
mov
pop
inc
in
push
movsb
jge
lret
mov
mov
jmp
pop
fbld
insl
mov
fists
lods
fsubrl
cmp
lret
mov
cwtl
jle
pop
or
jp
iret
shll
cld
dec
movb
jns
xchg
insb
fimuls
inc
sub
std
sub
xchg
push
icebp
dec
imulb
shll
insb
lret
xchg
gs
shlb
sub
lret
pop
arpl
fwait
sarb
scas
xchg
push
adc
push
aaa
nop
push
pop
jns
add
mov
aaa
mov
pop
jns
xchg
and
mov
or
popf
daa
fs
push
cld
mov
out
and
push
movsl
cmpsb
jo
in
xor
shlb
lcall
or
dec
or
gs
ds
out
mov
push
mov
mov
push
ficomps
add
sub
dec
push
push
jns
xchg
imul
lock
out
lret
das
jle
mov
out
xor
stos
das
mov
test
xchg
inc
add
test
jno
imul
fldenv
push
fisubrs
orl
jecxz
imul
sbb
adc
loope
arpl
pop
loop
dec
loop
lret
mov
lock
dec
push
fcoml
cmp
lods
sbb
and
mov
mov
lea
scas
mov
lcall
leave
scas
mov
mov
xchg
jle
add
xchg
mov
cld
scas
mov
xor
test
add
dec
adc
test
inc
scas
and
scas
adc
push
sub
push
mov
cmpb
jge
sarl
stos
xor
enter
aas
subb
ja
lds
xchg
hlt
movaps
xlat
sub
imul
ljmp
in
mov
push
jns
inc
jle
or
stc
into
imul
cld
repnz
mov
mov
mov
and
inc
test
mov
lret
movsl
dec
dec
or
out
cli
push
adc
in
jae
test
mov
jg
stc
repnz
data16
add
jle
jmp
clc
enter
xlat
pop
ret
int3
filds
fimuls
cmp
inc
add
inc
outsb
scas
jge
cmp
popa
push
pop
dec
imull
mov
lahf
nop
dec
imul
aad
push
ficoms
shrb
ljmp
pop
jns
in
mov
mov
xor
jge
in
and
cltd
dec
inc
mov
pop
jmp
jle
arpl
daa
mov
push
stc
mov
insb
mov
mov
dec
jl
lret
outsb
rcrl
pop
shl
sbb
lret
dec
in
fisubl
dec
cwtl
mov
mov
decb
fcom
mov
scas
inc
pop
inc
sbb
inc
sub
cmp
pop
push
or
inc
push
clc
sbb
outsb
and
lods
mov
cmpsb
xlat
pusha
push
xor
xor
repnz
mov
fwait
jge
pop
mov
pop
xchg
and
sub
inc
call
cmpsb
fs
jle
in
inc
jl
push
jecxz
or
pop
repz
xor
jb
jae
lcall
jg
stc
in
leave
arpl
test
pop
outsb
popf
scas
mov
xchg
pop
lods
mov
sub
inc
adc
adc
jmp
in
push
jo
stc
in
jg
mov
pop
std
incl
ss
lret
mov
sahf
ret
or
jp
xchg
cld
repnz
jmp
fimuls
popa
mov
repnz
xchg
test
ss
jg
das
mov
in
inc
inc
loop
stos
pop
sub
mov
movsl
cs
sbb
xchg
pop
jle
cmc
jb
mov
sbb
push
xchg
pop
jle
bound
mov
pop
and
stc
in
pop
pop
add
mov
xchg
pop
fistpl
out
mov
out
dec
gs
lods
push
mov
shlb
ljmp
and
or
aad
fucomi
jle
in
in
add
test
mov
sbb
iret
mov
arpl
in
pop
jle
test
aam
imul
jg
xor
jae
jno
xchg
xchg
or
sub
adc
xchg
pop
jle
and
jo
rep
jl
jne
addr16
jl
xor
popf
out
imul
int
jns
sub
dec
movsl
sub
inc
decb
xchg
push
and
push
sti
pop
xor
xor
mov
push
pop
push
pop
into
pop
dec
sub
pop
mov
stc
in
push
xchg
in
pop
dec
dec
cwtl
aas
lock
cmp
in
and
ljmp
in
addr16
dec
cld
mov
sti
into
jns
inc
das
ds
ficoml
dec
inc
mov
movsb
mov
fsubl
and
sbb
sbb
repnz
inc
bound
sub
xchg
adc
and
adc
fdivp
fsts
aas
sahf
mov
sub
repnz
les
jae
mov
das
ds
xchg
loopne
in
xor
stos
movsl
sbb
stc
notl
in
cmp
and
js
movsb
jle
in
or
sahf
adc
aam
std
lret
stc
in
pop
mov
dec
sub
cmp
mov
or
jnp
xor
lock
std
stos
cmpsl
idivl
aam
add
insl
mov
test
cli
jle
jge
cmpsb
dec
dec
mov
icebp
jbe
mov
in
add
xchg
ja
push
push
sub
mov
inc
sbb
in
pop
and
loope
repnz
sbb
std
scas
pusha
xlat
jo
add
sub
push
dec
push
scas
fdiv
xchg
and
inc
scas
mov
mov
mov
pop
pop
pop
data16
jns
sbb
mov
sub
in
push
pop
fucomi
in
jns
lret
insb
adc
jns
pop
repz
and
pop
sahf
lock
mov
jnp
xchg
mov
je
je
jnp
aaa
fdivp
lret
das
mov
mul
sub
mov
cld
pop
mov
xor
imul
idivl
pop
jle
in
cmp
sarb
add
leave
or
in
mov
js
cmp
stc
in
pop
mov
jmp
addr16
insl
rolb
xchg
pop
jle
cmpsb
call
lret
cmp
je
mov
lahf
inc
xor
repz
lds
lret
cmp
push
mov
pop
nop
sbbb
stc
repnz
das
outsl
sbb
push
lret
ret
fisubl
in
jg
fistpll
push
lds
pop
lahf
sahf
xchg
pop
jle
lock
sarb
scas
filds
jl
in
or
jne,pt
or
xor
out
mov
cwtl
xchg
cmp
loop
mov
jns
mov
xlat
push
jp
aam
ja
jg
push
pop
jns
xchg
gs
nop
mov
push
sbb
push
dec
ret
cmpl
in
push
pop
mov
push
mov
mov
pop
jns
sub
xor
xor
insl
outsl
jge
in
mov
hlt
xor
pop
jmp
pop
popa
mov
out
movl
lea
mov
insb
push
and
mov
cltd
xor
sbb
fistpll
stc
repnz
rcll
push
lods
push
dec
sub
cld
jnp
xchg
leave
jnp
adc
stos
jge
xchg
xor
repnz
int3
lret
mov
mov
cmp
mov
cmp
pop
ror
das
mov
or
test
aam
inc
cmp
mov
jmp
mov
cmp
adc
pop
out
ds
xchg
fdivr
lds
loop
cmp
fwait
sbb
mov
les
or
inc
in
sub
lret
mov
insl
push
fmulp
jp
iret
daa
mov
fistps
xchg
ds
cmp
mov
xchg
push
in
push
es
testl
and
dec
in
push
pop
je
jl
jns
fmull
and
jns
les
add
popa
mov
movsl
aad
jo
rcll
movsb
inc
scas
pop
fidivrl
push
pop
jns
push
sbb
int
test
es
jns
xchg
mov
add
xor
or
clc
addr16
xlat
fs
push
mov
jmp
adc
movsb
lds
xchg
fnstsw
lock
jno
daa
push
je
in
das
scas
jge
xor
imul
sub
arpl
test
jle
adc
mov
or
cmp
je
gs
call
pop
and
pushl
jbe
leave
insb
in
push
pop
pushf
aad
sub
mov
inc
sbb
fcmovb
aad
sub
or
xor
scas
test
mov
lahf
int3
inc
or
js
lret
and
fsts
int3
pop
xchg
imul
jo
movsl
and
xchg
aaa
xchg
fnstsw
repnz
repnz
mov
mull
faddl
enter
push
imul
fmulp
xchg
mov
nop
out
jbe
mov
cld
repnz
pop
mull
es
sub
cs
sbb
repnz
das
mov
mov
cmp
mov
inc
test
fistps
rorl
push
jge
push
test
dec
xor
jl
jno
and
cld
repnz
scas
cmpsl
add
sbb
jp
cmp
lret
scas
movsb
push
inc
aas
ljmp
lods
iret
imul
pop
stc
sti
enter
inc
shrb
push
or
inc
pop
adcl
xor
xor
rclb
in
xchg
outsl
or
lods
cmpsb
mov
push
pop
mov
and
adc
aam
repz
fwait
xor
lret
add
pop
std
cli
jmp
dec
frstor
mov
inc
les
scas
mov
sarb
mov
push
push
mov
repnz
das
insl
lcall
cmp
repnz
das
pop
mov
cmp
adc
sbb
xchg
das
mov
clc
push
test
sub
jae
jle
idivl
fs
mov
aam
xor
or
mov
imul
mov
pop
jge
shrb
inc
or
enter
popf
outsl
pop
jle
in
push
xchg
shll
insl
xor
fdivl
loope
xor
sub
loope
in
xor
in
inc
add
enter
fsubrl
divl
mov
loop
mov
stc
in
and
sub
mov
movsb
mov
jle
ds
jo
jecxz
mov
jle
cli
mov
mov
add
in
adc
repnz
xor
mov
cmp
in
xchg
outsb
rcll
cmp
pop
es
jnp
aas
jns
and
add
jle
into
clc
mov
aam
or
adc
or
xchg
aaa
mov
and
popf
jo
sbb
int3
addr16
test
ret
push
xchg
mov
rolb
and
mov
push
pop
jns
sub
fiadds
add
mov
stc
fadds
mov
pop
pop
dec
ret
fcos
repnz
lret
aaa
shlb
test
cmpl
movsl
lods
mov
jmp
dec
pop
jns
sub
xchg
adcl
test
jns
xchg
push
cmp
cmp
pop
mov
loopne
xchg
push
pop
dec
out
imul
scas
mov
sarl
popf
adc
test
xchg
mov
repz
repnz
mov
inc
loopne,pt
sarb
sbb
cmc
inc
and
loope
inc
out
mov
inc
jns
loopne
cmpsb
inc
in
push
jg
call
das
int
scas
arpl
enter
sbb
daa
and
lret
mov
sub
inc
jecxz
and
pop
lahf
lods
mov
in
in
and
in
orl
dec
xchg
push
pop
jns
fwait
xor
bound
jo
movsl
ss
in
fdivs
into
xlat
cs
icebp
inc
stc
in
pop
test
std
divl
push
lcall
xchg
pop
jle
jecxz
cmc
gs
sbb
inc
inc
mov
pop
cwtl
pop
jno
fidivrl
movsb
mov
adc
icebp
cmp
imul
lret
inc
in
push
shll
pop
lahf
test
sub
push
out
xlat
dec
fstl
jne
sub
lods
jecxz
in
adc
sbb
mov
fisubs
cltd
cld
mov
pusha
fistl
outsb
stc
ja
mov
adc
inc
jge
jmp
add
cmpsb
cld
in
fimuls
jns
icebp
inc
sarb
aam
cmp
in
pop
inc
or
movsb
push
xchg
popa
jg
das
mov
test
dec
pop
shl
cmp
in
out
int
cmp
lods
repz
popl
leave
push
test
pop
mov
clc
ljmp
cmpl
out
dec
pop
jle
in
push
cmpsb
mov
add
jb
sarb
xchg
pushl
ud2
f2xm1
loope
cmp
call
xor
push
dec
push
test
fnsetpm(287
stc
in
pop
dec
ds
movsb
sbb
out
xchg
pop
jle
and
push
inc
adc
add
lret
inc
add
ret
test
sub
loopne
icebp
and
add
adc
adc
outsl
or
mov
pop
adc
imul
fdivrs
es
cltd
lock
inc
test
lea
outsl
mov
push
pop
jns
mov
hlt
xchg
jg
leave
push
pop
jns
std
movsl
popa
std
fstl
es
mov
jns
xchg
mov
or
test
ja
ds
jb
dec
aaa
dec
pop
jns
xchg
stos
repnz
xchg
pop
das
xchg
lods
sarb
lret
add
or
fnstsw
mov
cmp
mov
stc
fnstenv
push
cld
jge
lret
dec
cmpsl
pop
gs
cmp
add
mov
out
rolb
adcl
xchg
decl
fsubs
dec
call
mov
lods
repnz
adc
addr16
aaa
lcall
cmp
stc
repnz
xchg
popa
imul
enter
sbb
pop
dec
out
movsl
jmp
push
jns
lods
cmc
add
movsl
out
in
push
pop
subl
inc
icebp
and
mov
and
clc
inc
mov
cmp
repnz
in
ds
cmpsl
movsl
lret
frstor
adc
sub
push
mov
inc
push
and
scas
mov
xor
test
in
jg
jmp
sti
xchg
push
rolb
xor
sub
fsub
mov
push
adc
movsb
repnz
dec
pop
loop
jbe
add
ficoml
fwait
lcall
rorl
xchg
push
pop
enter
or
movsl
je
in
rcrl
pop
jns
sbb
icebp
data16
rcl
push
dec
cld
repnz
mov
or
ja
push
lods
add
lret
das
mov
subb
pop
loop
or
mov
inc
push
cmc
and
add
push
ret
push
outsb
adc
or
xchg
sub
mov
cld
sti
in
iret
bound
jge
jmp
in
cmp
push
insb
jp
sub
cwtl
mul
repnz
das
mov
pop
mov
mov
cld
popa
mov
loopne
insb
push
or
loop
mov
add
cmp
stc
in
and
jmp
aas
ljmp
xchg
ja
mov
test
out
xchg
mov
jns
dec
xchg
ret
scas
enter
imul
cmpl
lahf
aad
add
ds
xchg
in
lock
and
xorl
in
xor
idivb
mov
mov
jg
and
lcall
in
jl
push
jno
lods
inc
xor
jle
in
pop
push
add
jns
stos
dec
out
ss
in
pop
test
jae
repnz
mov
in
pop
jle
mov
and
icebp
jp
xchg
pop
jle
push
and
inc
and
jg
mov
cli
enter
nop
mov
push
adc
pop
jle
in
xor
adc
clc
and
and
in
mov
int
jl
fs
lret
pop
subl
xor
inc
nop
shrl
xor
inc
pop
mov
jecxz
and
lret
mov
sti
bound
mov
lret
das
mov
std
lds
push
inc
mov
in
mov
mov
jb
xchg
jo
cmpb
lds
test
stc
in
mov
mov
cmpsb
data16
in
pop
sbb
sbbl
stc
popl
jmp
outsl
sbb
sbb
std
lret
mul
xchg
pop
jle
jb
cltd
fwait
inc
jge
dec
jge
push
std
or
repz
xchg
jg
pop
lods
scas
pop
pop
hlt
mov
mov
stc
in
push
mov
jg
lods
repnz
lods
pop
jle
cmpsl
inc
jecxz
outsb
fnsave
cmpsb
jmp
push
insb
jnp
push
sbb
cmp
sub
out
adc
or
mov
addr16
repnz
dec
stos
jne
pop
sbb
scas
mov
mov
data16
push
cmp
dec
loopne
sub
pop
insl
xchg
push
pop
dec
outsb
mov
and
push
or
loop
or
mov
cmpb
jle
xor
sbb
xchg
push
push
mov
pop
jns
xchg
add
pop
mov
in
jg
mov
cmpsl
and
dec
movsl
cmp
sbb
cmpb
fwait
cli
sbb
gs
test
sbb
in
aaa
mov
imul
mov
in
inc
push
jo
sarl
pop
in
popa
xchg
pop
jle
mov
ljmp
sub
xor
jge
popf
sbb
icebp
lea
out
or
xchg
mov
mov
sub
leave
stos
add
xchg
xchg
mov
repz
repnz
mov
jle
sti
inc
ljmp
and
gs
inc
adc
repnz
pop
jns
cli
jnp
push
xor
lahf
loope
repnz
das
mov
adc
and
cld
mov
in
out
mov
cld
repnz
clc
testl
xchg
pop
decb
pusha
rolb
insb
fisubrl
in
xor
mov
rcrb
dec
jae
repnz
and
xchg
push
lea
les
push
sbb
stos
xor
ficompl
in
mov
inc
mov
int3
xchg
jns
xchg
push
cmc
cmp
aaa
cwtl
cmp
and
xchg
push
pop
aad
lcall
mov
xlat
imul
push
pop
xchg
sub
cli
enter
out
push
xchg
pushf
and
in
dec
mov
mov
add
stos
lods
mov
jns
leave
dec
add
inc
and
in
jle
in
dec
mov
jecxz
fsubl
addb
idivb
sar
inc
mov
in
divl
lea
dec
or
sbb
sarb
sbb
arpl
fmul
mov
scas
fnstcw
in
push
pop
dec
stos
adc
daa
cmpsl
imul
jns
shll
lret
xor
jb
cmpsl
lea
dec
xlat
andb
es
pop
jecxz
pop
push
xchg
inc
sbb
inc
dec
push
cmpsb
jno
subb
pop
pop
xor
fisttps
cmpsl
inc
fnstenv
aad
jecxz
lret
mov
mov
push
nop
push
mov
push
and
sub
xchg
mov
xchg
sbb
shrl
dec
sub
jb
pop
xor
ds
lret
jp
fildl
cmp
lret
das
incl
sbb
arpl
or
lret
das
mov
out
push
dec
dec
jns
ror
das
mov
popw
stos
mov
mov
mov
mov
pop
rorb
scas
jge
lcall
cld
repnz
das
addr16
sub
das
mov
sbb
lret
das
mov
jo
cmp
in
mov
inc
mov
jo
sbb
imul
aam
cmp
sub
in
cmp
imul
cmp
jmp
sub
mov
mov
stc
in
pop
movsb
mov
sub
add
jle
mov
jnp
notl
fidivrl
mov
in
movsl
dec
addb
mov
fistps
jns
xchg
jecxz
push
into
xorl
pop
pushf
loope
scas
imul
push
in
xchg
inc
mov
stc
xchg
sub
jmp
xchg
leave
lret
das
jg
and
adc
jmp
pop
or
ficoms
clc
clc
sti
std
push
lcall
jne
sbb
repz
mov
jecxz
lret
int
dec
stc
in
xor
dec
sub
mov
xor
cmp
sbb
in
pop
jle
inc
push
test
and
dec
insl
mov
lea
fisubs
push
jmp
imul
jle
sbb
add
inc
jns
push
daa
push
push
jl
in
aas
movsb
fsubr
inc
xor
mov
mov
inc
out
and
sbb
push
movsb
pop
dec
imul
repnz
pop
ljmp
scas
push
add
cmp
xchg
mov
repnz
xchg
pop
mov
adc
das
mov
aaa
test
inc
add
add
pop
jle
imull
aad
popa
scas
outsl
xchg
pushf
jg,pt
mov
out
xchg
sub
adc
stc
push
push
es
add
inc
lea
jmp
mov
or
test
cmp
jmp
push
jmp
mov
test
pop
into
int
jge
in
mov
xor
stc
andl
ja
xchg
cmp
or
pop
jle
test
xchg
insl
xchg
push
jp
pop
jle
fdivs
sarb
jmp
jge
in
cmp
fldlg2
jnp
sahf
sub
inc
sti
enter
es
sbb
cwtl
xchg
cld
fisttps
std
xor
mov
pop
in
rolb
push
stc
in
cmpsb
or
cmp
enter
jmp
and
roll
jg
stc
sti
pop
xor
mov
pushf
clc
lds
inc
rcrb
jle
in
loop
popa
ret
xchg
call
leave
mov
pop
out
and
pop
xor
loopne
pop
jle
mov
mov
cmp
mov
repnz
pop
loope
icebp
pop
rolb
jp
push
in
sbb
lret
das
mov
mov
dec
orl
sahf
cld
sub
push
mov
jp
cld
repnz
dec
push
lret
add
pop
dec
and
jno
and
enter
leave
cmpsb
mov
jge
mov
cltd
push
and
add
ljmp
push
jne
icebp
pop
dec
stc
sbbl
fisttpll
jno
daa
pop
jle
jne
fistpll
pop
xchg
pop
jle
in
adc
stos
xor
xor
in
daa
cmpsl
mov
out
sahf
ds
das
jmp
stos
jl
insb
xchg
sahf
nop
jbe
das
mov
sub
nop
aas
mov
jle
mull
aad
xlat
sub
mov
mov
das
cmpsb
lcall
inc
ss
dec
mov
inc
cld
sub
xchg
pop
push
sbb
repnz
xchg
adc
inc
mov
and
scas
mov
mov
add
orl
repnz
pop
dec
cli
jp
or
mov
in
adc
lds
icebp
push
cmp
leave
das
fnsetpm(287
in
dec
fs
scas
mov
ret
movq
cmp
ret
lea
inc
js
lret
pop
or
in
xchg
push
fmulp
jnp
fmulp
sahf
xchg
clc
xchg
lret
mov
mov
clc
mov
arpl
pop
jns
das
decl
pop
sub
mov
stc
repnz
stc
stc
jmp
sub
jns
cmp
xor
sbb
jbe
sarl
push
push
pop
push
xchg
shll
in
push
pop
ja
leave
mov
lods
enter
pusha
gs
or
cmpl
xchg
ja
xchg
mov
or
repz
pop
jns
sahf
mov
add
jl
popa
mov
xchg
cmp
lea
aas
sub
in
mov
dec
pushf
mov
xchg
pop
jle
ljmp
stos
xor
jle
xor
lret
inc
cmc
rorl
fists
and
cltd
mov
enter
and
push
fwait
jb
pop
subb
cld
stc
in
shrl
andb
pop
mov
xchg
lret
mov
dec
mov
ss
jmp
das
mov
out
mov
jb
aad
mov
stos
or
aam
decl
cli
cltd
dec
or
insb
xchg
push
faddp
jns
push
notb
leave
adc
in
lret
enter
sub
out
jle
pop
stc
adc
imul
mov
add
fldenv
jle
stos
repnz
push
or
mov
or
inc
and
in
jg
bnd
bnd
xchg
pop
out
pusha
jge
push
sub
push
and
or
lret
mov
dec
daa
es
call
sub
sbb
jns
stos
call
lahf
dec
inc
push
xchg
push
ret
cmp
mov
and
inc
stc
ror
vandps
jmp
pop
js
pop
pop
jns
inc
inc
faddl
sub
mov
jle
in
andl
cmp
jno
sbb
cli
enter
cwtl
xchg
lock
cli
pop
pop
jns
xchg
or
pop
lret
and
jns
xchg
push
sub
jge
enter
leave
andb
pop
sbb
mov
rorl
pop
mov
add
mov
mov
or
xchg
push
movsb
dec
cmc
mov
pop
in
mov
outsl
mov
lock
push
ja
and
dec
cmpsb
mov
repnz
aam
aaa
lea
cmp
inc
mov
sub
mov
outsb
je
scas
xchg
mov
rol
das
xchg
cmp
jg
inc
pop
aas
les
hlt
jmp
outsb
mov
ret
loopne
ds
jns
movsb
xchg
jns
lods
mov
loopne
jae
repnz
das
adcb
cmp
lret
das
mov
int3
push
push
mov
xchg
and
test
sub
out
pop
jle
notl
inc
js
lds
push
xlat
stos
stc
pushw
stc
in
jbe
popf
and
mov
xchg
ja
lea
xor
pop
jns
fidivrl
rcrl
movsb
mov
repnz
adc
in
xchg
fldt
out
gs
filds
lret
ja
mov
or
sidtl
cmp
xor
cltd
cmpsl
sub
cmp
jmp
bound
mov
push
pop
dec
cmp
flds
out
repnz
xchg
mov
sub
and
push
cmp
sub
jg
outsb
inc
std
xor
cmp
imul
aam
mov
and
mov
aam
mov
jb
mov
out
mov
xlat
add
scas
imul
xor
jno
xor
add
jg
jp
push
xor
mov
lahf
mov
xchg
sahf
ss
sbb
mov
sub
das
decl
imul
hlt
lea
push
das
mov
addps
pop
dec
xor
mov
cld
repnz
ljmp
jle
inc
sub
stc
in
jg
pop
ds
rclb
leave
mov
jle
mov
xchg
aam
xor
mov
imul
lods
dec
mov
scas
mov
adc
lahf
dec
nop
pop
imul
pop
jo
hlt
enter
scas
pop
jne
adc
xchg
aaa
ret
dec
stos
loope
cwtl
cmp
sti
cltd
xchg
push
pop
jns
jo
iret
xchg
dec
cmp
mov
cmc
xchg
loop
or
jne
repz
lret
das
lcall
je
jge
inc
icebp
test
pop
jns
cmp
cmpsl
hlt
scas
inc
adc
xchg
pop
aad
jno
xchg
push
pop
dec
push
call
inc
sti
in
mov
push
pop
jns
jb
int3
cmp
xor
aad
mov
icebp
stos
mov
dec
lods
lret
lret
stc
in
jg
sbb
pusha
push
sub
push
mov
jg
dec
sbb
iret
sub
push
and
in
inc
pop
adc
cmp
insl
repnz
enter
pop
sbb
fstl
adc
jns
cmp
pushf
stc
adc
cmc
xchg
mov
outsb
adc
cs
xor
xchg
add
aad
call
lods
mov
mov
testb
and
lds
inc
mov
notb
push
cli
in
int3
fcomp
xor
pop
ljmp
adc
pop
mov
fsubrs
pop
inc
or
push
test
movsb
xchg
out
mov
cld
jns
xchg
aaa
sub
les
sbb
mov
sarl
popa
popf
and
xchg
mov
dec
mov
cmp
push
cwtl
push
xchg
pop
jns
test
lahf
mov
loop
in
jg
push
out
sti
xlat
inc
fwait
cli
or
mov
cld
jnp
adc
pop
ficoms
sbb
jecxz
cld
repnz
mov
sar
xchg
aad
mov
xchg
jg
or
sbb
sbb
mov
push
pop
xchg
mov
add
pop
setp
push
loopne
and
stc
mul
das
mov
int3
stos
mov
push
inc
js
xchg
pop
jle
lcall
loope
jg
xchg
pop
jle
push
add
jg
fldt
dec
es
push
stc
in
test
push
popf
pop
inc
pop
stc
rorl
push
ficomps
mov
xchg
ret
std
hlt
aam
adc
jnp,pt
in
and
or
and
repnz
das
inc
in
ja
movsl
xchg
and
mov
mov
inc
pop
dec
dec
cmpsl
fs
imul
sti
enter
xchg
add
cmpsb
filds
enter
dec
pop
mov
xor
lods
mov
scas
stos
jg
scas
mov
ror
xor
into
mov
aaa
push
mov
lret
jns
push
sbb
sbb
movsb
or
je
idivl
lods
mov
cmc
adc
movsl
adc
mov
fistps
pop
add
fidivrs
orb
mov
dec
xor
ret
aas
test
inc
out
and
aaa
aas
es
leave
xchg
jle
pop
mov
xlat
das
mov
test
sarl
ret
sbb
lcall
cmp
dec
xchg
mov
lret
jne
cld
repnz
das
shrl
outsb
pop
jg
xchg
sti
repnz
das
mov
or
out
push
sbb
sbb
fldl
dec
and
stc
repnz
fimull
xor
stos
inc
jns
lret
push
fimuls
xchg
iret
push
xlat
jp
pop
jns
scas
aaa
stos
cmp
nop
lods
push
inc
jp
je
and
nop
push
pop
jns
sbb
into
ret
jb
ficomps
adc
das
cmp
notl
sbbl
pop
jns
ficompl
cmp
out
pop
jo
iret
stc
ja
xchg
cmp
jle
in
rol
mov
mov
add
dec
mov
mov
das
mov
cmp
js
mov
mov
repnz
pop
jno
and
lea
icebp
enter
mov
push
mov
cmp
mov
inc
scas
mov
push
cli
insb
push
in
sbbl
xchg
loope
lret
insb
insl
sbb
popa
mov
sub
das
sbb
dec
adc
data16
mov
jns
loop
dec
or
or
outsl
repnz
das
jmp
aaa
lret
lods
js
gs
inc
mov
imul
xchg
mov
or
jmp
gs
mov
inc
adc
pop
jns
mov
xchg
adc
inc
jno
cmp
scas
fiaddl
repz
xchg
pop
imul
gs
or
in
mov
push
stc
idivl
xor
xor
pop
or
cld
repnz
das
xchg
test
add
repnz
das
mov
imul
icebp
jge
test
cld
mov
sbb
adc
inc
cmp
repnz
xchg
imul
int
decl
and
sub
dec
dec
mov
imul
sub
aam
sbb
fbld
mov
addr16
pop
jge
push
mov
mov
stc
data16
into
inc
mulb
jle
dec
pop
jns
xchg
divb
pop
jbe
push
shr
cmp
push
imul
jne
sti
sub
mov
xor
ljmp
lret
pop
push
or
xchg
out
add
aad
fnstenv
pop
pop
jns
mov
xchg
jnp
adc
dec
lahf
push
cs
jp
enter
mov
int
in
mov
push
mov
mov
pop
add
adc
push
mov
mov
mov
and
push
and
in
push
pop
dec
mov
jg
inc
gs
int
mov
insl
cmp
xor
lret
push
fidivrs
jbe
mov
pop
dec
xchg
mov
fiaddl
enter
test
push
int3
sub
pop
aas
or
xchg
out
repnz
mov
ja
mov
sbb
repnz
in
xchg
push
loopne
rcrl
sub
addr16
lods
or
daa
outsb
jae
in
ja
or
loopne
jbe
jne
in
push
pop
sahf
mov
push
hlt
sbb
inc
ljmp
ja
xlat
inc
inc
dec
xchg
mov
xlat
lret
adc
xchg
into
adc
cld
repnz
lret
mov
inc
das
xor
push
push
mov
mov
xchg
das
cmp
inc
fimuls
pusha
stos
ja
inc
mov
xor
sbb
fsts
pop
mov
into
shlb
scas
pop
inc
ficoml
in
lods
lret
das
ds
push
push
jmp
ret
test
cld
repnz
sbbl
mov
lret
sub
xchg
adc
lret
das
mov
les
fiaddl
cld
repnz
cmp
idivl
movsb
enter
and
or
pop
or
lods
lods
adc
xor
sub
imul
cmp
or
or
jnp,pt
xchg
shl
sti
add
inc
pop
aam
testb
aad
or
mov
sbb
sub
hlt
lds
les
dec
out
mov
scas
mov
inc
inc
push
repnz
rolb
fisttpl
repnz
xchg
sti
add
mov
xor
lret
das
mov
mov
push
pop
movsb
lret
das
mov
repz
dec
subl
jge
gs
xchg
mov
imul
repnz
mov
les
xlat
jle
outsb
xor
inc
repnz
das
mov
inc
ret
xor
or
enter
insl
sbb
sbb
scas
mov
mov
imul
pop
mov
rcrb
pop
dec
jge
clc
mov
scas
mov
lcall
mov
repnz
mov
and
or
repnz
mov
pusha
sbb
or
scas
mov
add
bound
pop
jp
or
loop
pushf
cmc
outsl
mov
xchg
push
imul
in
xor
leave
test
or
in
push
pop
mov
stos
test
cs
insl
out
sub
and
dec
xchg
shrl
repnz
insl
mul
std
mov
stc
repnz
and
add
fmul
sub
jl
gs
pop
mov
fcmovu
ljmp
jnp
jno
ret
cld
repnz
das
xchg
push
or
mov
sbb
xor
repnz
das
mov
sahf
pop
sbb
out
and
pop
stc
pop
loop
js
lods
mov
cmpsl
inc
pop
addr16
lret
mov
pop
xor
adc
jns
cmp
add
push
daa
push
ss
push
pop
add
mov
mov
enter
sub
aam
cmpsl
jl
mov
mov
fwait
mov
push
loop
xchg
scas
mov
divl
sub
mov
lret
dec
fnsave
cmc
inc
xchg
cltd
cmp
addl
rcrl
dec
xorl
adc
sub
cmp
jae
cld
mov
pop
adc
or
scas
mov
mov
leave
add
xor
test
sti
and
lret
inc
add
mov
mov
mov
jo
loope
dec
cmp
into
out
xchg
and
dec
pop
mov
sbb
lock
sti
scas
ja
enter
fmull
fiaddl
push
cmpsl
jle
stos
bound
dec
dec
xchg
sahf
push
pop
jns
arpl
cwtl
data16
cmp
pop
jns
xchg
sub
pushf
leave
insb
sahf
mov
push
data16
int
and
sbb
xchg
jns
xchg
push
pop
jecxz
xchg
mov
xchg
mov
mov
pop
jns
xor
push
es
stos
fmuls
jle
in
push
stc
pop
out
in
stos
sarb
sub
inc
ss
sbb
insb
mov
mov
rclb
jae
jmp
or
sub
cmp
ds
in
pusha
pop
int
or
lret
lcall
and
scas
mov
fcmove
repnz
and
mov
insb
icebp
xlat
mov
aam
and
out
xor
pusha
adc
jae
movb
jns
lret
sub
hlt
mov
repnz
popf
dec
bound
xchg
push
pop
jp
aas
xchg
and
test
inc
push
pop
jns
adc
lea
push
inc
adc
xor
push
mov
add
push
enter
adc
and
pushf
imul
cld
repnz
pusha
es
es
sub
outsl
pop
stc
repnz
push
cld
data16
enter
xchg
jg
shll
pop
inc
push
bound
shl
pop
mov
test
in
fwait
cli
std
cmc
scas
lret
mov
fwait
mov
jne
add
push
mov
mov
dec
inc
ret
dec
aam
mov
lret
das
ljmp
aaa
decl
xchg
dec
icebp
call
in
pop
dec
outsb
inc
daa
test
xchg
das
lcall
jb
rcr
scas
into
cli
pop
shlb
insl
xchg
sbb
in
es
xchg
fstp
clc
popf
lret
scas
mov
jne
xchg
addl
jnp
repnz
inc
or
lahf
out
aam
lahf
adc
ja
mov
xchg
mov
not
cltd
sbb
daa
movzbl
mov
xchg
push
pop
jns
xchg
cmp
lret
stos
mov
push
pop
jns
xor
or
adc
lods
stc
in
and
mov
scas
jo
imul
pop
jle
aaa
dec
mov
rolb
outsb
jmp
ret
cwtl
or
test
xor
inc
in
push
fmulp
pop
cmp
jo
dec
in
call
pop
jns
imul
xchg
or
sub
in
mov
mov
stos
jnp
xbegin
xchg
pop
adc
lock
lds
xor
lret
jp
add
mov
xor
jb
push
popf
test
cmp
mov
icebp
hlt
push
or
repnz
xchg
sti
jnp
subl
fstpt
and
jge
repz
xchg
dec
lds
mov
dec
in
push
pop
xchg
cmp
clc
sub
popa
mov
jns
and
in
sti
mov
popf
pop
xor
and
mov
inc
in
jg
mov
icebp
pop
in
sti
mov
cmp
lds
xchg
pop
jle
xchg
sub
jbe
stc
incl
inc
or
jl
in
push
test
or
or
repnz
mov
push
rclb
inc
sub
in
das
mov
in
leave
pop
je
or
push
call
dec
dec
inc
mov
xchg
ucomiss
jp
jo
xor
lods
test
add
push
cld
leave
sub
pop
jns
call
sbb
mov
repnz
add
dec
mov
loopne
sub
mov
dec
xchg
pop
sub
lods
sub
pop
bnd
mov
scas
mov
or
cmpsl
mov
leave
mov
test
mov
jge
ds
xchg
mov
repnz
lea
or
popf
inc
lret
fcmovbe
mov
enter
test
lret
das
lcall
jl
cld
mov
push
cld
repnz
sti
js
outsb
dec
jecxz
sbb
cmpsb
sahf
sbb
in
icebp
rorl
pop
push
and
lret
jg
ds
sub
mov
sub
enter
mov
outsl
dec
loope
into
add
insb
xchg
mov
pop
jns
jecxz
addr16
xchg
out
push
xchg
adc
jns
xchg
push
xor
setl
loope
int3
insl
dec
pop
fcomp
inc
pop
pop
cmp
into
pushf
mov
xchg
lock
jno
xchg
push
push
and
shlb
dec
and
movsb
and
mov
and
pop
mov
push
add
xchg
pop
jns
xchg
jne
jle
add
xchg
in
inc
push
or
pop
mov
int3
sbb
cmpsl
test
rclb
push
or
or
in
int
das
jecxz
out
sbb
movb
push
adc
pushf
mov
mov
xor
add
or
test
sti
into
and
and
pop
jle
jne
jns
testl
cld
cmp
scas
ljmp
sbb
aad
or
out
cs
inc
cld
repnz
aas
xor
jp
lea
and
in
out
xchg
jg
es
inc
push
pop
mov
imul
cld
repnz
mov
loopne
or
add
in
mov
cmp
in
or
pop
out
bound
mov
or
loop
xchg
rclb
mov
pop
xor
mov
mov
and
scas
popf
loop
popa
iret
push
push
fcomps
pop
jns
add
icebp
aas
ret
insb
jns
repnz
mov
sbb
mov
xchg
dec
mov
pop
lds
mov
mov
insl
daa
rcl
sub
repnz
rolb
sbb
mov
mov
daa
jnp
xchg
sahf
pop
jns
sub
push
push
out
jns
mov
sar
lds
ffree
mov
pop
inc
and
mov
xchg
aas
adc
xor
repnz
pop
cmp
les
inc
push
push
aam
out
and
hlt
mov
jge
inc
xchg
leave
filds
cld
stos
pusha
cmpsl
cltd
dec
insb
imulb
jle
xlat
pop
jle
in
lds
fmull
jge
pop
pop
testl
in
mov
mov
repnz
imul
ss
jp
add
mov
enter
dec
hlt
pop
xor
and
push
ja
mov
mov
icebp
dec
insl
clc
cmp
add
mov
dec
into
mov
test
dec
outsl
lret
aas
stos
addl
out
scas
mov
movsb
flds
xor
js
scas
mov
cmp
sbb
sub
jl
xchg
lret
test
loop
repnz
mov
lret
ja
je
push
shll
fsubs
sub
dec
push
inc
adc
pop
jns
jecxz
add
pop
pushf
mov
xchg
push
arpl
mov
push
ja
aaa
int
jnp,pn
xchg
push
pop
xchg
push
cmp
add
repnz
pop
xchg
push
pop
jns
xchg
jbe
movsl
add
inc
aas
push
push
pop
jns
aam
xor
repz
xor
lcall
push
or
maxps
push
ljmp
inc
jo
adc
push
out
cmp
mov
shll
xchg
xchg
push
adc
cmp
aaa
and
xchg
pop
jle
push
arpl
hlt
mov
push
pop
ljmp
xchg
or
leave
xchg
push
aad
int
popa
inc
popf
inc
jle
in
jle
mov
insl
movsb
out
in
push
leave
push
mov
xor
cwtl
mov
inc
xchg
push
jo
lret
jg
jbe
orb
inc
daa
lret
inc
dec
iret
mov
sub
xchg
nop
xchg
push
test
clc
repnz
das
ljmp
adc
jge
xchg
pop
or
cmp
jnp
pop
stc
decl
lock
add
xor
lret
pop
outsl
fstpl
out
mov
icebp
xchg
mov
leave
adc
jl
repnz
das
inc
cmp
test
das
xchg
mov
movb
stc
and
jge
adc
aad
mov
mov
dec
lock
mov
shlb
cs
div
push
fsts
out
sahf
das
sub
mulb
push
fimuls
add
jns
cmp
push
pusha
or
inc
lret
inc
push
pop
or
sar
aaa
lds
js
mov
es
pop
les
stc
in
mov
adc
xchg
cmp
inc
dec
stc
in
pop
mov
pop
imul
xchg
pop
jle
out
iret
bound
fstpl
push
faddp
clc
aam
mov
daa
xchg
push
in
lds
jns
xchg
imul
push
sub
push
int3
fldt
mov
in
push
pop
add
fists
jg
pop
jns
mov
sub
test
ds
push
das
out
ja
jecxz
fwait
enter
stos
popa
cmp
test
mov
or
fsts
lret
mov
xchg
dec
push
adc
out
xchg
sub
out
xchg
inc
or
and
mov
aaa
aam
mov
lds
jg
mov
pop
sahf
inc
fimuls
jbe
xlat
cld
repnz
das
orb
push
sbb
pop
and
mov
jge
inc
mov
ret
add
jns
stos
pop
les
cld
repnz
das
pusha
sub
inc
hlt
repnz
psubusw
push
movb
xchg
push
rolb
mov
dec
ljmp
pop
int
jns
or
movsl
push
jl
jg
mov
push
pop
cld
hlt
jg
cmp
ljmp
pop
jns
sub
std
sub
and
das
call
fildll
push
pop
pop
fdivr
and
push
jno,pt
mov
lods
rorl
cli
enter
xlat
das
cmpsl
push
enter
in
push
fisubrs
push
mov
xchg
xchg
and
jns
xchg
lahf
bound
out
mov
scas
cmovg
cmp
sub
div
jne
cmp
xchg
testb
gs
lret
dec
inc
xchg
mov
inc
mov
jae
xchg
pop
stc
mov
in
cmp
jne
int
sti
add
out
in
scas
pop
jns
rcrl
sub
xsaves
loopne
loope
sbb
lret
sub
or
gs
popf
inc
jp
or
sti
dec
ja
mov
in
xchg
pop
pusha
mov
aas
xor
scas
mov
insl
pop
inc
mov
scas
mov
jmp
inc
jp
test
jle
repnz
and
adcb
push
xchg
jge
movsb
fs
inc
mov
popa
xchg
push
adc
pop
jle
in
into
add
aam
and
movsb
xchg
jp
in
stc
in
lahf
hlt
jo
sub
dec
les
xchg
pop
xchg
jge
fwait
and
sub
inc
das
mov
cwtl
shll
jg
sub
jae
nop
push
stc
repnz
pop
adc
mov
cltd
cmp
popf
hlt
add
je
inc
sub
fbld
lret
jmp
mov
repnz
cli
xchg
into
ja
pop
adc
add
adc
lret
repnz
dec
or
insb
mov
push
js
cli
and
add
fwait
movsl
dec
ret
sbb
in
mov
pop
es
out
mov
mov
add
and
out
enter
or
add
pop
rcrl
inc
or
jnp
in
inc
pop
push
cltd
mov
insb
ljmp
jecxz
push
and
lea
lcall
lods
iret
mov
or
sti
in
enter
movsl
lds
dec
jmp
repnz
das
mov
das
dec
loopne
or
pop
mov
incl
out
dec
cmp
scas
jne
pushf
xchg
das
jle
mov
push
test
push
loop
in
pop
xchg
shrb
jecxz
sub
pop
push
cmp
repnz
or
cli
push
fs
and
divb
push
add
loop
loopne
das
mov
jle
subl
mov
jmp
jge
dec
imull
xchg
xor
mov
xor
xor
mov
repnz
push
mov
ror
add
fists
dec
inc
cld
repnz
das
fdivr
js
cs
xchg
mov
push
negl
lret
das
mov
jno
jne
imulb
cld
adc
dec
cmp
mov
gs
jb
enter
into
mov
es
jge
push
xchg
jmp
scas
mov
lcall
jl
jae
push
or
jne
repnz
das
pushl
shrb
push
xchg
das
mov
push
in
push
mov
mov
jns
and
xchg
lods
lods
mov
cvttps2pi
fists
out
mov
jmp
push
data16
jnp
repnz
in
xchg
pop
jns
cmp
push
int3
outsl
mov
jl
lret
jbe
cmp
or
sub
clc
push
lret
mov
stc
jge
pop
jle
or
inc
scas
mov
insb
scas
sbb
push
fdivr
repnz
mov
cmpsl
ret
cs
shlb
sbb
and
mov
sbb
sub
out
nop
outsl
andb
scas
mov
js
fisubrl
cvtps2pi
scas
mov
ljmp
in
cmp
repnz
rolb
adc
mov
adc
stc
cmp
push
xchg
enter
inc
mov
sbb
int3
xor
in
or
push
divl
push
sub
aas
and
xlat
pop
in
andl
imul
sbbb
pop
lret
popf
cmp
test
add
cmpsb
js
jl
lret
or
add
test
sub
dec
or
insb
fwait
inc
subb
mov
cwtl
fstp
out
and
jns
imul
xchg
jecxz
lods
mov
insb
fs
fs
cmp
arpl
mov
mov
cmp
xlat
inc
loopne
cld
repnz
test
fisubrs
roll
and
repnz
das
mov
pushl
push
cli
mov
or
or
lret
fs
mov
andl
js
mov
and
sbb
test
and
cmp
xor
push
inc
sahf
jecxz
pop
fscale
jbe
in
lods
in
jg
pop
ja
rcrb
xor
cmp
push
iret
insl
cmp
mov
lahf
out
jae
stc
in
jg
mov
jne
lods
fwait
mov
pop
jle
add
push
inc
sbb
cmp
repnz
dec
xchg
dec
stc
in
jg
clc
sub
inc
in
push
sub
xchg
pop
jle
roll
sub
dec
push
movsl
fwait
pop
jge
adc
lock
xor
xchg
mov
xchg
or
mov
or
gs
pop
repnz
das
call
and
stc
out
negb
cmpsl
xor
mov
mov
testl
idiv
data16
neg
mov
mov
dec
or
pop
sbb
test
ret
fdivrp
in
pop
push
xchg
imul
mov
and
shll
add
sub
repnz
ficompl
cltd
je
shl
ljmp
ret
and
sub
inc
xchg
sub
dec
test
or
xchg
scas
test
lds
movsl
in
xor
xchg
repnz
lahf
xchg
xchg
sub
or
div
enter
xchg
outsl
dec
mov
adc
fistps
repnz
cmp
mov
leave
xor
scas
mov
dec
push
inc
pushf
sbb
repnz
imul
insb
push
sub
lret
mov
and
mov
mov
into
in
sub
pop
mov
or
sbb
jo
push
test
xchg
pop
jge
xor
aas
mov
sbb
movsb
pop
dec
inc
jle
in
xor
or
or
jbe
and
sbb
call
xor
push
pop
jns
imul
movups
dec
mov
in
xchg
adc
scas
in
xlat
dec
int3
jne
das
mov
jmp
and
push
jecxz
data16
shlb
test
rorl
mov
enter
jbe
fistpll
mov
enter
pushf
xchg
inc
popf
xchg
ss
aas
xor
mov
xor
and
in
push
pop
push
and
imul
jo
std
push
jge
out
cmc
add
pushf
rclb
or
xchg
imul
call
jns
out
jmp
addb
mov
pop
jns
xchg
mov
ds
xor
xchg
sbb
in
and
rolb
sahf
xor
mov
stc
cwtl
loopne
add
pop
mov
pop
jns
sub
adc
outsl
fdivr
and
push
iret
jb
xchg
push
movsb
stc
leave
and
popa
out
or
pop
cmp
fmul
mov
jne
xchg
ffree
or
xlat
cmp
and
mov
repnz
das
ret
pop
dec
test
call
in
jg
jl
ja
mov
or
and
stc
repz
sub
and
punpckhdq
cld
repnz
pushf
push
iret
and
mov
and
lds
jg
jae
ja
or
out
hlt
jne
sbb
xchg
pop
jle
add
jg
rolb
jecxz
rcll
addr16
xchg
and
mov
div
into
fcoml
xchg
ds
push
imul
push
shlb
or
xchg
push
dec
jno
minps
hlt
testl
push
pop
cmc
addr16
xorb
mov
inc
popf
or
mov
sti
xor
std
imul
push
lret
das
lcall
repnz
cld
xlat
sbb
leave
dec
test
lret
mov
sub
dec
dec
fwait
scas
mov
mov
sbb
pop
xchg
xor
inc
cmp
lret
das
insb
cmpsl
push
imul
loope
mov
cmp
lcall
out
or
repnz
out
cltd
imul
xchg
mov
scas
add
mov
lods
sub
stc
in
ja
dec
aaa
lds
jge
in
pop
mov
mov
out
ljmp
and
jle
in
cmp
sahf
xor
insb
enter
lret
dec
sbb
imul
mov
scas
mov
clc
pushf
jg
subl
bnd
pop
sarb
out
mov
jno
rcll
fsub
lret
jne
push
mov
adc
sbb
mov
js
aam
pop
shrb
jg
mov
jns
xchg
nop
xchg
add
pop
std
mov
in
push
test
les
sbb
sbb
lds
imul
in
jle
mull
xchg
out
xlat
out
xor
hlt
mov
lret
xchg
das
push
xchg
test
xchg
xchg
pop
popf
cmc
mov
imul
arpl
rcl
jle
in
mov
les
jbe
jle,pt
jle
in
xchg
mov
test
movsl
movsl
stc
in
pop
nop
pop
notl
arpl
pop
jle
sbb
mov
aam
test
push
outsl
xchg
pop
jle
iret
lea
roll
daa
mov
stc
in
in
lahf
fbld
xchg
jnp
fnstcw
enter
into
jecxz
loopne
pop
lds
aaa
push
push
pop
jns
shrl
fdivrs
in
out
hlt
xchg
xchg
push
cmc
mov
mov
mov
and
mov
cmp
sub
mov
dec
dec
inc
sub
stos
nop
stc
in
and
sbb
pop
adc
stc
pop
insl
dec
xlat
push
mov
xorl
mov
xchg
out
and
xor
xor
cmpsb
shrb
outsb
cmp
and
loop
pop
lock
fmul
jecxz
add
cli
xor
in
mov
inc
mov
repnz
cmc
pop
jecxz
jae
out
fwait
xchg
inc
push
ror
scas
mov
mov
rcrl
scas
mov
sbb
leave
pop
add
sub
loope
mov
imul
testl
mov
jbe
mov
in
push
fadds
mov
inc
cltd
inc
add
das
xchg
mov
mov
es
es
cmp
xorb
pop
mov
xchg
lds
cld
mov
jmp
pop
loop
pop
pop
inc
dec
loop
in
outsl
mov
pop
adc
ret
int
orl
cmp
lret
lcall
popf
and
mov
scas
cld
jb
push
test
or
pop
fisubrl
shll
fs
jp
enter
cld
or
xchg
sub
test
scas
or
mov
in
xchg
aas
sarb
mov
mov
and
jns
stc
in
pop
imul
sahf
sahf
into
dec
mov
das
lcall
call
xor
xchg
mov
clc
ja
sti
cltd
sbb
bound
in
mov
jmp
sbb
cmpsl
rcrb
sub
in
pop
cmp
outsb
lret
adc
adc
sub
psubq
sti
mov
and
stc
inc
jmp
dec
or
push
ja
pop
jle
in
stos
or
cltd
loope
repz
pop
push
loop
xchg
out
repnz
repnz
shlb
wbinvd
cmp
scas
mov
sub
test
aaa
sti
mov
stc
neg
js
xlat
xchg
add
icebp
lds
dec
int3
mov
inc
stc
in
pop
jmp
cld
outsb
mov
rorl
stos
ss
and
in
mov
mov
fwait
stc
cmpsb
out
adc
test
aad
fisttps
sub
call
jae
mov
adc
scas
lret
mov
rorl
sbb
in
imul
in
cmc
movd
push
push
pop
cmpsb
out
xchg
push
pop
jns
push
xchg
aaa
pushf
push
pop
add
scas
mov
pop
jns
int
test
or
insl
lret
xchg
pusha
or
xlat
loopne
mov
inc
test
inc
mov
xor
mov
mov
dec
cld
repnz
xchg
xor
shlb
stc
ret
negb
or
insb
mov
adc
mov
fstp
pushf
fstpl
das
mov
jle
mov
xcrypt-ecb
cmpsl
or
jno
cld
repnz
jno
loopne
pop
jecxz
adc
fdivl
les
mov
mov
rol
repnz
das
mov
jge
inc
es
das
mov
xchg
mov
rolb
mov
mov
xchg
lods
sbb
xor
dec
inc
or
div
mov
icebp
ficompl
xor
rep
shlb
pop
jle
mov
jl
ds
aad
dec
inc
fstpt
dec
int
loope
mov
xchg
push
pop
xchg
fs
addb
xor
sbb
roll
in
inc
inc
leave
dec
sub
iret
loope
cmp
cmpl
mov
orb
icebp
in
pop
sti
xor
sub
cltd
jnp
add
cmp
repnz
or
ss
mov
in
in
fxam
test
and
pushf
in
xchg
push
jge
pop
hlt
sub
imul
stc
dec
bound
in
inc
fwait
pop
inc
lret
mov
bound
sub
mov
pop
stc
repnz
pop
sub
in
pop
add
imul
outsb
sbb
fsts
jne
xor
xchg
sbb
ds
sub
pop
lea
lret
imul
mov
sub
repnz
das
add
shll
jl
pop
in
inc
mov
mov
xchg
xor
xchg
pop
jle
or
xor
les
lods
adc
stc
in
cmpsl
mov
pop
mov
rcr
shlb
jo
push
cmpsb
iret
dec
js
xchg
pop
shlb
repnz
add
or
in
mov
repnz
sti
stc
imul
cmc
in
sub
repnz
xchg
popa
ror
ret
sub
daa
sti
ficompl
push
mov
jl
mov
cmpsl
pop
insb
imul
cmp
cmpsl
int3
pop
xlat
jo
sub
stc
repnz
das
mov
pop
out
pushf
adc
ret
fcomp
cld
repnz
pop
xchg
adc
inc
or
mov
jg
repnz
das
mov
loop
xchg
cld
xor
dec
lret
das
mov
pop
adc
jo
addb
das
mov
and
and
jae
les
cld
repnz
es
mov
xor
lods
lods
mov
adc
loopne
outsb
cmp
push
pop
push
es
repnz
jns
xchg
mov
adc
push
insl
pusha
mov
inc
nop
sbb
mov
cld
cmp
scas
add
add
xchg
aad
int
sbb
enter
pop
pop
mov
or
in
or
pop
aas
test
jge
or
lds
daa
xor
and
adc
dec
lret
mov
ss
inc
fiadds
enter
jbe
xchg
jns
xchg
push
cmp
jne
das
ja
in
push
pop
movsl
stos
adc
fdivr
iret
dec
pop
leave
out
and
out
mov
mov
mull
scas
mov
inc
jg
jg
jns
or
stos
fstl
jmp
add
outsl
or
or
mov
mov
lods
inc
xorl
scas
or
cmp
dec
cmpsb
dec
dec
mov
orb
repz
out
dec
cmp
adc
clc
out
scas
mov
clc
mov
pop
test
mov
repnz
mov
cli
pushf
loope
repnz
sti
mov
dec
sbb
xchg
scas
add
push
enter
mov
stc
movsb
dec
not
jb
repnz
sbb
pop
jbe
in
pop
and
mov
dec
rclb
cld
cltd
aas
repnz
mov
mov
in
add
enter
sub
stos
sub
les
scas
mov
roll
es
mov
rol
inc
push
push
in
enter
xchg
add
mov
and
jle
pop
cmp
stc
xorl
push
fsubrp
movsb
cmp
adc
xchg
or
push
pop
jns
faddl
mov
ss
jne
jmp
jns
call
es
out
xchg
jg
pop
out
jp
pop
xor
jl
cmp
fwait
insb
cmpsl
and
add
popa
bound
stc
in
cmp
stos
out
cwtl
add
filds
xchg
rcrl
sbb
and
pop
jle
in
mov
pop
adc
jnp
fdivl
ljmp
inc
xchg
mov
push
mov
movsb
imul
cmpb
cld
repnz
xor
mov
xlat
scas
mov
cld
repnz
das
push
xor
mov
enter
in
das
mov
jns
jl
ljmp
outsl
inc
jl
ficomps
aad
pop
jle
sbbl
mov
out
jg
repnz
dec
popf
dec
in
adc
add
lods
xchg
mov
xchg
pop
ds
jo
test
pop
stos
mov
pop
jle
xlat
add
inc
sbb
fsts
enter
dec
inc
inc
add
adc
pop
pop
xor
test
jg
and
mov
imul
jl
rcl
jl
xchg
pop
jge
popa
add
rcll
aaa
imul
jns,pt
loop
sti
scas
and
dec
xchg
jg
pop
sub
xchg
pop
xchg
arpl
inc
inc
mov
cmp
incb
dec
imul
fildl
pop
aam
pop
arpl
inc
sub
and
fwait
fs
enter
jns
incl
jp
xchg
push
pop
push
inc
lods
sub
dec
jns
xchg
aam
mov
sub
pop
jns
adc
mov
or
fildll
mov
shl
or
outsl
mov
pop
cmp
pop
loop
cmp
cmpsb
jle
push
lahf
mov
pop
repnz
les
push
adc
push
fimuls
popa
adc
xor
jns
xchg
test
inc
in
movsb
push
jns
xchg
push
or
sbb
bound
pop
pop
cmpsl
and
or
jmp
fiadds
inc
add
fidivl
xchg
in
xchg
movsl
inc
xchg
lahf
ret
insb
fidivl
in
jg
or
ljmp
pop
jle
or
xchg
mov
adc
mov
jns
loope
aas
stos
int
lret
pop
rorb
push
xchg
push
adc
push
adc
xorl
sbb
dec
cltd
sti
mov
add
dec
inc
sub
jecxz,pn
xor
adcl
in
mov
lret
shrl
jmp
add
pop
jge
out
xor
stc
in
aad
arpl
xor
sub
sbb
in
pop
mov
ficomps
pop
testl
sti
push
stos
mov
cmp
jle
outsb
adc
rcrb
mov
test
cld
ret
xor
sahf
outsl
das
arpl
jg
shrl
repnz
das
xchg
aas
mov
cli
cld
repnz
fs
in
push
add
and
jmp
adc
cmp
jae
add
repnz
mov
jp
xchg
xchg
push
mov
rol
xchg
out
lret
cld
out
xchg
xor
jo
sub
stc
in
pusha
cmp
inc
xor
inc
pop
lods
pop
jns
xchg
fdivs
add
cld
repnz
pop
pop
imul
xchg
push
test
inc
test
mov
bound
sub
sub
aam
push
or
outsl
mov
mov
sub
push
mov
scas
inc
jns
pushf
mov
in
mov
out
imul
xchg
test
repnz
ljmp
scas
sbb
cli
fisubrl
mov
sub
in
xchg
push
sub
repnz
hlt
jge
rcrl
cmp
mov
mov
mov
and
dec
pop
bound
fists
jne
mov
pop
jle
in
stc
lret
push
mov
xchg
ja
dec
loope
jle
in
jo
mov
cmp
insl
shll
je
xchg
pop
push
push
pop
pushl
repnz
pop
push
sbb
sbb
lods
mov
stc
mov
dec
idivb
sahf
jecxz
jmp
xchg
shlb
hlt
push
jb
lods
or
stc
in
pop
jecxz
movsl
jno
aam
push
xor
pop
jle
xor
lfence
cltd
test
pop
jle
adc
out
cmp
pop
sbb
jecxz
sub
fwait
and
mov
aad
negl
push
mov
jmp
sahf
add
lea
in
mov
cmpsb
sti
mov
mov
in
pop
jle
sub
dec
jmp
cmpl
inc
jle
inc
loop
bound
and
les
in
aas
pop
xchg
aas
inc
mov
roll
push
mov
adc
mov
shll
addb
push
xchg
push
stc
mul
push
pop
jae
ss
imul
in
pop
jle
xor
inc
int3
sti
mov
jae
pop
jle
lea
sub
repnz
jns
jecxz
dec
subl
mov
jns
xchg
push
adcb
aad
dec
pop
mov
ljmp
out
imul
xor
repnz
or
mov
pusha
cwtl
pop
rclb
fldl
leave
push
mov
push
jnp
cmpb
in
mov
add
xor
mov
jns
sbb
sbb
hlt
ret
lods
inc
mov
pop
jns
add
or
mov
mov
mov
idivl
je
dec
cmpsb
sarb
lret
mov
fsub
aam
sbb
mov
jecxz
lahf
mov
daa
sub
and
enter
xchg
lret
sbb
push
pop
jns
adc
sar
jecxz
into
notl
leave
pop
jns
mov
push
adc
push
popf
mov
call
or
into
sub
inc
pop
jns
cmp
xor
pop
xor
dec
repz
lret
sbb
ficompl
mov
mov
pop
push
jg
cmpsl
out
sub
shrl
mov
addr16
packsswb
out
add
and
fnsave
xchg
add
dec
jb
ret
mov
pop
jns
xchg
pop
xchg
inc
xchg
pop
jae
pop
repnz
xlat
adc
dec
mov
popf
mov
mov
int3
mov
in
push
push
std
mov
outsb
dec
pop
jle
loopne
stc
in
pop
xlat
cmp
dec
in
ljmp
jle
std
shrb
jecxz
mov
pop
jns
stc
out
add
out
insb
lahf
jge
in
out
cmp
push
mov
pop
and
xor
cs
jae
inc
jle
and
jmp
cmp
jns
popf
ja
pop
mov
adc
xchg
ja
jmp
test
inc
mov
pusha
push
pop
jns
sub
popa
aad
enter
orl
jge
mov
mov
pop
xor
aam
add
insl
sub
fnstenv
clc
hlt
shlb
sub
sbb
das
decl
push
lret
scas
xchg
mov
ja
inc
xchg
inc
repz
popf
sub
cmp
fsubrl
lret
mov
mov
mov
and
xchg
sbb
test
ss
enter
inc
bound
dec
inc
repz
jp
mov
out
mov
repnz
lahf
or
lret
jle
in
jp
mov
push
cmp
jbe
repnz
mov
imul
test
lret
das
mov
leave
mov
cmp
push
pop
stc
repnz
lock
daa
les
cmp
lret
icebp
cli
lcall
sub
xchg
jg
cld
imul
push
jecxz
outsl
imul
mov
xorb
add
jle
in
push
addl
xor
aas
xor
repnz
inc
jle
cwtl
loopne
insl
jns
cmp
repnz
arpl
xchg
push
pop
xor
rcrl
sbb
or
jns
sbb
fs
inc
sub
mov
jae
xchg
add
arpl
nop
push
stc
add
movsl
xchg
adc
iret
xlat
das
mov
out
lds
mov
xchg
test
fildl
cmpsl
pusha
rcrl
xchg
jg
iret
lahf
dec
test
xor
dec
cmp
in
mov
loop
gs
add
xor
sub
inc
sbb
es
popf
push
adc
subb
in
and
gs
aad
add
aam
pop
jle
fs
or
imul
pop
jle
in
adc
aad
pusha
sub
imul
xchg
xor
push
mov
cmp
mov
cld
or
stos
stos
fisttpl
outsb
inc
xor
test
std
xor
xor
pop
jg
int
in
add
repnz
mov
pop
mov
push
out
loopne
push
addr16
aam
mov
sub
sub
xchg
data16
mov
subl
push
jo
cltd
movsl
dec
lret
inc
pop
sbb
sub
out
sub
cld
repnz
enter
pop
and
push
cmpsl
dec
pop
cmp
push
aam
mov
fucomip
or
lods
mov
inc
cmp
dec
pusha
jne
mov
aad
in
lods
and
mov
xchg
push
pop
iret
hlt
jae
pop
xlat
repz
mov
out
imul
push
jg
pop
jns
mov
dec
lods
repz
sub
iret
pop
loopne
sub
xlat
pop
inc
inc
and
lret
sbb
xchg
and
mov
cld
repnz
das
pushf
out
pop
push
pop
test
jb
repnz
das
mov
fs
repnz
hlt
jno
lret
das
mov
push
lds
shrl
cld
repnz
xchg
push
mov
shr
int
insl
sbb
mov
dec
lods
push
mov
iret
int
addr16
lret
das
jmp
call
mov
call
adc
sbb
sbb
in
lret
or
stc
pop
cli
test
ficomps
scas
mov
pop
outsb
fwait
push
xchg
mov
dec
mov
lods
mov
mov
xchg
push
push
jnp
repnz
mov
xchg
jbe
test
push
imul
fs
movsb
sahf
or
cmp
pop
lock
push
mov
js
push
cmp
enter
xor
jg
mov
scas
jns
mov
mov
pop
dec
xlat
adc
push
pop
movsl
mov
dec
test
in
sub
mov
das
sbb
and
and
ret
shrl
mov
pop
adcl
sub
mov
mov
xchg
xchg
fcmovbe
nop
push
pop
jns
sbb
push
add
sbb
stc
ja
xchg
lock
sbb
mov
sub
ljmp
mov
mov
out
add
or
push
fstpt
out
mov
repnz
ja
lea
inc
lcall
push
into
jns
xor
jmp
mov
jle
negl
push
enter
inc
mov
push
outsb
ljmp
in
fwait
mov
cltd
mov
stc
in
pop
add
push
fcomps
jo
jecxz
pop
jle
addr16
and
sbbb
mov
loope
lds
jl
loopne
mov
das
pop
mov
dec
stos
sub
nop
clc
xchg
pop
jge
adc
scas
pop
call
rcr
pop
stc
repnz
icebp
jbe
xor
mov
in
scas
ljmp
pop
sbb
add
jns
inc
lret
das
mov
adc
add
jmp
repnz
cmp
add
mov
mov
repnz
test
adc
loopne
mov
psubw
xchg
jg
xchg
test
leave
mov
clc
cmp
in
push
lret
out
or
inc
leave
test
ret
jle
dec
iret
mov
lret
mov
cld
add
cmpsb
xor
js
lret
lock
sbb
push
inc
push
fiadds
ret
xchg
popa
iret
push
mov
enter
xorb
or
pop
jns
mov
adc
push
js
lret
jns
xchg
loopne
stos
addr16
push
int
cltd
sbb
decb
nop
shl
js
lahf
int
mov
in
pop
in
das
icebp
jne
fs
pop
jle
add
in
pop
jle
shrl
int
cmpsb
add
cmp
or
mov
adc
iret
mov
in
mov
outsl
fldt
adc
xchg
push
stc
in
ret
push
adc
pushf
ds
mov
and
popf
dec
sahf
dec
mov
and
push
jae
in
inc
xor
push
jae
mov
dec
push
cli
mov
clc
mov
aaa
push
add
loopne
int
inc
mov
pop
popa
repnz
test
or
xor
cld
cltd
and
roll
imul
mov
cmpsb
out
sti
push
jmp
mov
mov
cmp
fistpll
out
push
movsl
mov
sbb
repnz
enter
mov
pop
mov
xchg
das
mov
dec
mov
mov
repnz
inc
xchg
pop
jle
test
dec
cmpsb
inc
arpl
jl
dec
clc
enter
push
jl
popf
mov
in
cmpsl
jno
xchg
push
mov
inc
mov
jns
sub
cmp
jbe
cmpsb
add
jle
in
push
and
out
jge
sbb
in
push
pop
cmp
jb
or
dec
sbb
xor
jns
inc
lea
imul
lods
pop
or
cld
repnz
popl
pop
sbb
sub
sbb
mov
scas
jp
cmpsb
inc
jecxz
pop
shll
cld
mov
daa
add
jmp
mov
xchg
or
jbe
cwtl
xchg
cmp
jg
cld
repnz
mov
xor
insb
sub
lods
cld
sti
enter
lcall
add
lret
das
mov
sub
jecxz
pop
jbe
lret
das
mov
mov
push
adc
adc
mov
push
xchg
iret
pmulhw
clc
dec
mov
mov
inc
pop
jns
pop
inc
and
ret
in
xor
call
sub
adc
push
jbe
jl
mov
out
loop
xor
aas
push
push
and
or
adc
mov
push
repnz
add
xor
and
mov
scas
mov
mov
movsb
in
scas
mov
pop
ja
fstps
das
imul
arpl
aaa
test
imul
jo
jmp
mov
ljmp
xor
inc
cmp
lods
int3
push
repnz
and
sub
outsb
aaa
mov
mov
push
cld
frstor
cmpsb
mov
out
aas
test
cwtl
sbb
iret
into
jg
scas
mov
loopne
xor
cltd
and
pop
test
or
sbb
mov
inc
in
pop
loope
in
test
jmp
lret
mov
pop
cmp
inc
iret
cmp
fmuls
rcll
jecxz
jnp
xchg
inc
and
mov
xchg
jg
sahf
mov
movsl
adc
inc
out
out
rorl
mov
add
repnz
ret
xor
out
adc
adc
aam
pop
push
lret
mov
pop
pop
scas
mov
mov
mov
adc
mov
das
cwtl
gs
fdiv
add
jmp
fisubrs
xchg
pop
sti
stc
add
fidivs
push
stc
lahf
ljmp
adc
sbb
stc
in
mov
mov
inc
mov
fsubr
faddl
and
sbb
mov
jg
mov
add
leave
push
enter
lret
adcl
test
lret
das
insb
and
iret
xchg
cld
repnz
mov
sub
adc
lret
das
mov
jecxz
pop
lock
mov
cld
fs
cmp
testl
fidivrl
loop
jb
jb
pop
push
cld
sti
enter
adcl
mov
imul
fdivrl
inc
mov
inc
cmp
mov
testl
repnz
orb
ds
cltd
mov
lret
lods
xchg
addr16
lret
dec
jne
dec
shrl
scas
mov
jb
inc
rcll
pop
out
push
fildll
mov
js
ror
mov
repnz
and
fsubs
in
ret
loope
lret
icebp
push
or
lcall
lods
mov
pushf
pop
mov
cmp
in
hlt
mov
xchg
nop
inc
mov
popa
stc
in
pop
or
imul
into
out
xchg
pop
jle
jne
or
push
jns
movsb
hlt
sub
and
jg
lret
in
aas
test
lahf
fdivrl
loopne
movsl
inc
xor
addr16
sbb
ror
adc
out
enter
xlat
rol
inc
sahf
cld
xor
lods
mov
push
faddp
clc
mov
mov
shl
in
push
jge
push
in
mov
enter
adc
inc
outsl
shll
ds
call
pop
cwtl
cmpsb
cmp
jns
xchg
arpl
adc
insb
lods
rcll
fsts
xor
xor
testl
aaa
lods
notb
cwtl
repnz
mov
pusha
adc
mov
jmp
cld
dec
jae
xchg
loopne
test
stc
repnz
test
cmpsl
js
insb
lds
dec
xchg
jle
in
pop
push
lcall
fidivl
xchg
pop
cltd
push
xorb
mov
pop
cmp
sbb
movsl
lcall
mov
add
jmp
jns
mov
test
adcl
xlat
xor
xchg
bound
push
jecxz
rolb
mov
cmpsb
xor
mov
mov
cld
repnz
pop
push
out
lss
dec
fwait
test
stc
test
cmpsb
imul
jge
dec
ficoms
sbb
test
sub
ret
cld
repnz
cmpsl
lret
mov
dec
dec
fstpt
scas
cld
dec
lds
and
andl
repnz
sub
or
rcl
fsubs
and
lret
fstl
call
in
mov
ret
ret
in
push
pop
aam
sbb
mov
push
adc
lea
push
pop
jns
test
xor
pop
push
mov
stc
in
and
xchg
jge
jle
lds
dec
repnz
das
call
in
xchg
aam
push
int
and
das
mov
sub
or
cld
repnz
fidivs
jo
rcrl
inc
inc
std
adcl
in
test
adc
in
mov
pop
sbb
jae
stc
inc
pop
divl
scas
mov
dec
outsb
call
scas
mov
jle
mov
ret
mov
adc
filds
jecxz
dec
mov
jle
in
inc
jmp
repnz
cmp
cltd
pop
rcr
pop
adc
or
mov
lods
mov
mov
mov
nop
xchg
hlt
xchg
das
stos
adc
add
sbb
mov
jp
ret
mov
test
xchg
lds
adc
xchg
pop
jle
ja
fistpl
sbb
mov
movsb
faddl
adc
gs
enter
pop
mov
xor
sbb
repnz
mov
fstps
dec
or
nop
popa
mov
ret
cld
sahf
xor
mov
jns
xchg
mov
pop
nop
xchg
jo
cmp
in
push
mul
xchg
push
pop
mov
clc
dec
cmp
jg
andl
or
inc
sarl
pop
jns
int
test
or
dec
mov
cmp
lods
mov
xor
xchg
adc
cmp
jg
lret
das
mov
rorb
fimuls
repnz
push
cmp
out
mov
lods
jnp
mov
andl
or
and
repnz
das
mov
scas
push
in
dec
sti
out
and
pop
lods
repnz
pop
sub
sarl
and
mov
shrl
xchg
xchg
jne
mov
repz
movsb
repnz
mov
sbb
stos
addr16
adc
pusha
jmp
filds
pop
cli
pushf
test
in
das
mov
movsl
popa
sub
icebp
fiadds
arpl
in
pop
jg
sub
push
pop
jno
mov
mov
call
enter
out
dec
or
iret
lret
mov
popa
sbb
hlt
push
adc
mov
push
stc
cli
inc
add
xor
fmull
or
jnp
filds
insl
in
xlat
inc
mov
addr16
notl
loopne
imul
fidivrs
xchg
pop
jle
lods
cld
or
in
mov
inc
or
add
repnz
loope
lea
lret
adcb
mov
cmp
mov
in
out
incl
pop
mov
xchg
pop
jle
sbb
add
mov
shrl
jp
das
dec
dec
sbb
nop
jmp
mov
and
scas
mov
jne
sbb
sub
inc
cltd
hlt
jp
scas
mov
out
cmp
pop
inc
rcr
repnz
and
repnz
test
jae
mov
pop
stc
add
sarl
mov
jl
pop
lock
jns
loopne
lahf
mov
rcr
test
daa
and
cmpsl
xchg
mov
xor
xchg
negl
in
xchg
shrl
mov
xchg
push
jge
xor
dec
mov
cwtl
js
xchg
push
pop
mov
mov
das
repz
mov
clc
xchg
push
pop
jns
dec
mov
stos
mov
clc
in
enter
movsb
mov
fstpt
in
push
int
push
jo
pop
sbb
inc
push
pop
jns
inc
fiadds
je
jns
fwait
sub
push
in
mov
mov
dec
mov
pop
orb
fbld
stos
cmpsl
xchg
notb
dec
cmp
into
lods
es
pushl
stc
in
pop
addr16
sub
push
or
xchg
pop
jle
xor
mov
inc
or
pusha
xchg
pop
jle
ret
pop
cmpsb
add
sbb
in
fnstenv
pop
movsl
in
inc
cmp
sti
stos
rorl
in
jl
adc
jns
int3
cmp
jp
push
shr
and
or
fists
movswl
sbb
jecxz
or
leave
pop
cmp
imul
and
dec
push
adcl
adc
jle
jecxz
jbe
push
sub
in
push
aad
push
sbb
loop
push
pop
fwait
enter
cmp
outsb
add
xchg
cltd
jb
inc
popf
sbb
xor
jnp
fs
mov
mov
in
pop
jmp
xchg
outsl
jae
in
cmc
lods
mov
stc
ljmp
mov
jns
or
orb
push
pop
push
in
push
pop
mov
test
in
push
pop
and
sti
test
outsb
sbb
cli
xchg
push
pop
jns
rcrb
stc
add
loope
lret
pusha
mov
dec
add
repnz
int
cmp
std
and
mov
int3
test
pop
aad
push
es
xchg
ret
out
popw
movsb
repnz
out
movsl
jae
mov
mov
scas
mov
ss
or
mov
dec
xor
xor
jg
notl
cltd
and
pop
push
pop
jns
jb
call
sub
jnp
into
pop
pop
jns
xchg
push
movsb
and
loopne
push
movsl
add
jae
fsts
mov
add
scas
jne
push
pop
jns
mov
jge
push
subl
cmpsl
imul
adc
push
push
in
pop
and
test
stos
mov
push
mov
xchg
ds
es
push
mov
jmp
in
fwait
pop
testl
xchg
pop
decb
and
cmp
push
es
repz
push
ret
pop
ds
fdiv
in
push
and
inc
scas
push
in
or
das
mov
mov
outsl
xor
mov
lret
sub
jle
ja
inc
out
inc
jge
adc
ja
ret
lods
sbbl
out
add
pop
out
in
ret
add
test
repnz
int
xor
aaa
ret
inc
xlat
ficomps
xor
movsb
pop
dec
insl
in
lock
xchg
push
and
stos
dec
decb
sub
cmp
pop
fsubrs
sti
loope
movsl
mov
pop
lahf
in
jmp
stc
in
scas
push
xor
cmp
add
daa
add
push
sub
mov
ficomps
jmp
jmp
pop
outsl
push
pop
jns
test
mov
bound
gs
in
sub
jnp
arpl
xchg
pop
inc
and
pop
xchg
lds
add
rcrl
and
inc
fcompl
pop
cltd
sub
mov
fistps
imul
mov
stc
in
pop
incb
test
movsb
and
mov
push
neg
xchg
sarl
movsb
daa
push
in
jg
mov
shlb
or
in
inc
pop
lcall
popf
mov
pop
xor
jle
in
loopne
gs
cmp
jmp
orl
ljmp
cmpsl
scas
mov
inc
call
xchg
pop
jge
or
sti
cmpb
loope
xorl
pop
jle
in
adc
sub
jl
cmpsb
mov
push
jl
in
mov
pop
lods
lea
jb
inc
ret
push
fidivrl
pop
popf
int3
pop
xchg
push
ficoms
jns
jno
and
test
push
pop
jns
in
les
sub
repnz
and
sub
sbb
mov
scas
mov
stos
loopne
pop
xchg
cmp
aas
repnz
push
or
pusha
ljmp
mov
pushf
ljmp
fsubl
lcall
test
xor
test
rcr
lods
sub
repz
jmp
jb
hlt
fstpl
pop
pop
jns
ljmp
lret
push
mov
out
repnz
xchg
add
test
in
pop
repz
pop
push
repnz
mov
cli
out
iret
sbb
push
inc
iret
push
mov
xchg
or
mov
xchg
cmp
pop
fs
mov
pop
jns
hlt
sbb
cwtl
int3
xchg
push
lock
in
mov
sub
out
bnd
inc
test
pop
jns
fs
data16
mov
fidivl
jmp
test
cld
or
sbb
mov
mov
or
jl
lret
or
mov
xor
mov
mov
lret
jle
mov
jmp
pop
repnz
sub
in
imull
stc
mov
loopne
jle
push
jg
and
cmc
mov
add
test
cmp
and
cmpsb
pop
inc
xlat
movsb
or
sub
mov
sbb
pop
lds
test
xor
push
xchg
jnp
pop
out
addl
std
jecxz
jl
scas
mov
sub
and
pushf
das
xchg
outsl
mov
aam
bound
data16
into
icebp
xchg
repnz
dec
xchg
aam
xor
add
clc
ja
push
mov
add
sti
sbb
xchg
hlt
cld
pop
mov
fimuls
mov
pop
imul
lret
mov
push
sub
scas
movb
fldcw
pop
outsl
dec
jbe
lret
or
mov
ficomps
and
and
mov
pop
sub
loop
fistl
je
loopne
sbb
enter
mov
and
sbbl
pop
jmp
mov
in
push
es
jle
in
mov
or
cmp
fwait
sbb
les
cs
in
cmpsl
fistpll
rol
push
adc
and
fsubp
xchg
pop
jle
dec
pop
xor
sbb
jle
ficoml
inc
mov
and
jl
in
and
pop
mov
in
addr16
pop
std
mov
rolb
and
loop
in
pop
jle
pop
xchg
adc
pop
and
mov
xorb
insl
mov
pop
sarl
repnz
mov
arpl
pop
int
lods
lock
fadd
inc
mov
loope
pop
stc
mov
test
and
scas
mov
repnz
xchg
add
sub
ret
mov
scas
push
insl
dec
out
adc
jg
scas
mov
popfw
fadd
cmpsb
orl
repnz
cmpsl
adc
inc
xchg
call
sbb
jecxz
lcall
jns
sbb
addr16
hlt
and
sub
pop
jns
xchg
addb
sub
push
xor
push
iret
dec
push
mov
repz
mov
pop
sub
xchg
push
scas
mov
out
repnz
mov
imul
jno
icebp
and
lret
das
mov
cld
inc
bound
inc
das
mov
mov
lahf
pop
pop
setge
cld
repnz
xlat
mov
adc
addb
aaa
outsl
mov
and
mov
jl
out
mov
fists
mov
dec
rcrl
xchg
inc
pushf
repnz
das
call
nop
dec
dec
inc
pushf
mov
push
add
arpl
inc
mov
out
xor
cli
xor
jne
jle
in
pop
fwait
push
dec
sub
frndint
repnz
and
inc
or
add
mov
mov
xor
xchg
gs
pop
inc
pop
stc
lahf
pusha
xor
xchg
int3
aas
scas
mov
bound
jp
mov
icebp
enter
inc
gs
xor
or
dec
sub
das
mov
push
mov
jnp
jl
mov
das
imul
andb
stc
mov
or
sbb
in
scas
mov
mov
scas
adc
cmp
pop
sbb
push
fimuls
lahf
jnp
jbe,pt
dec
cltd
add
fcomps
in
negb
xchg
sti
push
push
push
in
test
imul
in
push
das
pushf
scas
nop
pop
mov
mov
pop
mov
loop
ret
scas
jns
xchg
aaa
cltd
jle
fwait
in
pop
ret
setl
in
push
pop
popa
fs
stos
stos
shrb
push
test
push
pop
jns
cmp
pop
arpl
dec
roll
jns
adc
mov
mov
fisubl
outsl
mov
pop
xor
popf
or
lret
test
orl
out
jae
lret
je
fnsave
push
enter
cwtl
add
out
cmp
sub
mov
stc
std
add
imul
cmp
decl
sub
mov
dec
jnp
mov
lods
aas
out
cmp
and
xchg
outsl
aas
test
jg
pop
jns
rorb
aam
cs
push
imul
in
lods
fidivs
inc
nop
mov
xchg
xchg
jg
stc
in
pop
cs
mov
pop
xlat
in
push
jmp
mov
xchg
mull
imul
mov
jne
inc
pop
stos
cmp
xchg
lret
inc
jo
mov
jmp
into
stc
enter
mov
inc
outsl
ljmp
push
jge
out
push
mov
cmpsl
std
sbb
nop
addr16
stc
in
pop
and
repz
xor
es
in
pop
jle
into
cld
lods
or
popf
xchg
pop
jle
jb
push
or
add
stc
in
mov
fucomp
pop
into
add
loopne
jns
jmp
lock
std
das
in
push
pop
xor
push
pop
out
xchg
xchg
push
pop
jns
and
into
hlt
xchg
cwtl
xor
repnz
xor
das
lret
mov
push
rcll
mov
push
push
jne
sti
adc
in
xchg
divb
rcrb
inc
lock
repnz
dec
out
or
and
sbb
pop
in
ja
rcrl
test
xchg
jo
lods
je
stos
sub
xlat
mov
mov
dec
std
xchg
and
lret
mov
cmpsb
pop
loop
inc
mov
sbb
ror
popf
pop
push
xchg
pop
std
add
lock
mov
pop
negl
add
lods
mov
or
fs
movsl
lahf
in
imul
popa
sahf
xchg
pop
jge
bswap
std
xlat
xor
add
push
rorl
jnp
mov
daa
inc
fsubrl
loope
repnz
das
xchg
cltd
push
dec
fsubrl
enter
imul
inc
mov
mov
sti
mov
es
stos
lahf
cmc
mov
mov
mov
mov
inc
fwait
es
push
cmp
mov
ss
aas
loopne
das
cld
repnz
or
add
xor
sahf
cmp
stos
gs
jge
pop
dec
sub
or
ja
shlb
repnz
lock
mov
or
jne
sbb
or
push
std
cmp
pusha
test
mov
dec
or
decl
sbb
aaa
in
adc
push
cld
repnz
jmp
add
adc
sbb
or
inc
cmp
xchg
jge
repnz
scas
mov
and
stos
xor
addl
pop
aad
jo
sub
add
repnz
fs
xor
inc
pusha
xchg
pop
scas
push
jns
ss
test
in
jb
into
pop
insl
adc
sti
in
xor
cmc
bound
xchg
ret
xchg
lahf
lea
sbb
mov
repnz
das
dec
cmpsl
jl
ret
repz
inc
lods
jns
push
lret
das
mov
scas
cmp
sbb
das
mov
mov
scas
out
inc
jge
xchg
jnp
push
push
cmp
sub
push
jmp
mov
dec
sub
scas
sbb
mov
jb
pop
ret
mov
enter
shlb
vpmacsdqh
sub
and
xchg
pop
jg
push
ds
lret
aaa
aas
fidivrl
add
xchg
aaa
adc
mov
inc
imul
jle
in
lods
out
and
mov
mov
mov
imul
jge
add
lret
in
mov
rorb
push
xchg
sub
fs
pop
lret
push
jmp
sub
push
dec
test
mov
lds
mov
adc
pop
push
fwait
mov
sbb
jmp
pop
sub
or
jecxz
repnz
das
or
hlt
jl
mov
dec
xchg
lret
das
mov
cmp
mov
mov
mov
repnz
cld
jbe
mov
das
mov
dec
xchg
stc
mov
aas
xor
mov
push
outsl
mov
xorb
jns
xor
dec
stc
repnz
mov
ljmp
push
les
stc
jge
xchg
sub
lret
das
pop
jecxz
clc
insl
xor
rcr
xchg
add
dec
or
mov
shrl
cld
xlat
lock
lcall
fsubrs
mov
cs
mov
xor
push
repnz
loope
enter
adc
cld
mov
adc
cld
repnz
das
sbb
jbe
inc
mov
icebp
repnz
das
mov
test
imul
das
mov
stc
loopne
pop
cmp
add
repnz
push
js
dec
inc
mov
cmc
sbb
lret
or
adc
lods
fiadds
in
shrb
xchg
arpl
xor
xchg
push
push
pop
add
inc
xor
xchg
js
jmp
mov
jmp
ss
pop
jle
in
inc
ljmp
or
stc
in
stc
in
fmuls
sbb
xchg
loope
jnp
sar
xchg
pop
lods
sbb
ds
sub
testb
mov
and
std
mov
arpl
fwait
mov
cld
cmp
lods
mov
sbb
push
neg
push
mov
scas
incb
pop
daa
mov
mov
call
jns
notl
add
pusha
xchg
mov
adc
and
ds
repnz
ss
jg
mov
aad
sub
dec
nop
std
sub
and
inc
fcmovne
pmuludq
mov
sub
repnz
out
hlt
sub
sbb
jnp
repnz
mov
ror
es
popf
and
add
and
and
lods
repnz
pop
sbb
stos
xor
mov
inc
mov
imul
mov
nop
in
pop
scas
pop
jle
in
inc
shll
jl
test
mov
jle
in
les
out
lea
test
imul
in
pop
xlat
or
cmpsb
aaa
push
aas
mul
xchg
pop
jle
mov
test
out
imul
cmpsb
bnd
jle
testb
pop
sbb
push
scas
dec
mov
mov
adc
sti
inc
arpl
scas
mov
pop
add
fwait
sbbl
cld
repnz
and
dec
adc
ja
dec
xchg
mov
mov
add
adc
pop
stc
repnz
pop
push
loopne
pop
or
inc
sub
cmpsl
das
mov
imul
dec
push
stos
xor
mov
rcrl
jb
push
mov
cld
repnz
imul
scas
out
cld
daa
daa
stos
sahf
cld
repnz
das
scas
mov
mov
mov
sbb
loope
push
and
sti
xchg
pop
jle
arpl
scas
and
jb
sub
pop
mov
cmpsb
fiadds
sub
push
outsb
jns
xchg
push
push
call
xor
fists
or
mov
and
mov
pop
cli
enter
add
inc
adc
in
push
cmc
shlb
push
bound
push
or
push
pop
fs
cmc
adc
push
int
or
aam
shlb
mov
fwait
push
pop
jns
mov
popa
pop
scas
xchg
dec
das
fsts
rolb
mov
cmpsb
jo
cmp
xor
in
and
clc
iret
and
xchg
cmp
jle
in
inc
enter
std
xor
cld
imul
pop
popa
adc
add
mov
push
sub
ds
decb
cmp
lds
adc
enter
negb
adc
sub
sahf
sbb
int
mov
push
mov
adc
arpl
jnp
lret
or
das
mov
xor
jns
pop
jns
push
ss
mov
mov
stos
nop
hlt
stc
jb
xchg
inc
jge
imul
push
sti
xchg
in
add
ret
mov
ds
in
add
jo
ds
push
ljmp
cmpsb
jmp
lods
adcl
ficomps
sbb
xchg
in
pop
pop
jns
xchg
outsl
mov
dec
push
jp
xchg
int
jns
xchg
push
mov
sbb
mov
test
shll
xor
repnz
adc
aaa
push
xlat
mov
nop
pop
das
push
repnz
repnz
das
mov
rorb
rcr
pop
stc
fcmovnu
int3
add
mov
in
push
test
push
mov
ljmp
mov
movsb
mov
aam
sbb
sub
sub
aas
repnz
data16
faddp
inc
sub
dec
cmpsl
pushf
push
inc
repz
push
stc
in
xchg
xchg
or
ljmp
fildl
xor
in
fs
mov
arpl
xchg
pop
adc
add
sub
dec
dec
pop
in
pop
jle
std
test
push
inc
pop
outsl
or
pop
jle
in
and
cmp
imul
xchg
pop
call
in
xor
jp
add
stc
in
adc
xchg
mov
mov
into
cmp
sub
or
pop
ret
cld
pop
cmp
xor
mov
mov
push
popf
inc
pushf
jge
sub
adcb
mov
push
xor
sahf
lcall
xor
mov
push
xchg
mov
inc
mov
iret
inc
in
in
lret
mov
cwtl
mov
pop
subl
sub
repz
aas
push
or
xchg
pop
jle
sbb
setbe
ds
int
das
cmp
push
cmp
popa
mov
sbb
mov
and
mov
loope
test
scas
jg
push
stos
mov
push
jg
lret
mov
push
ret
imul
ret
xchg
mov
mov
cmpsl
jns
xchg
mov
shlb
shll
push
fisubl
xchg
push
pop
ret
andb
rclb
repnz
jne
fcomip
and
sbb
pusha
in
xchg
cmp
xlat
test
das
ds
andl
into
test
mov
leave
mov
stc
repnz
stos
jmp
push
test
mov
xchg
rorl
push
movsl
inc
cmp
repnz
das
jns
idivl
push
or
std
push
sahf
cld
repnz
cmc
jle
mov
push
push
sahf
inc
out
in
aaa
xchg
sub
std
and
xchg
push
pop
jns
mov
lcall
pop
xor
push
pop
jns
dec
jg
jo
std
pusha
out
push
lret
test
mov
cli
nop
orl
pushf
mov
insb
in
push
jmp
iret
repnz
dec
adc
popf
dec
cli
lret
mov
scas
mov
add
mov
xchg
pop
outsb
out
xlat
rorb
aas
les
rorl
cltd
lcall
movsl
daa
push
sahf
mov
ja
pop
insb
adc
pop
jns
mov
loop
xor
je
in
addr16
pop
insb
loopne
jg
push
in
mov
mov
xor
cmp
inc
scas
xor
or
jge
sub
shl
addr16
sbb
test
mov
fsubrl
insl
cmp
and
repnz
fisubs
call
repnz
sbb
fwait
and
enter
and
dec
out
sti
daa
cmp
das
out
sub
pop
jns
push
fmuls
fs
pusha
fs
adc
add
mov
mov
fwait
js
mov
mov
pop
aam
ja
xchg
ficoml
and
enter
cwtl
add
rorb
in
hlt
cmpsl
fxch
jmp
fmul
cmp
stc
sbb
add
jl
fdivr
dec
jge
enter
stc
in
popf
add
mov
pushf
ja
aad
cmp
jnp
xchg
rcr
push
pop
inc
mov
cmp
mov
movsb
enter
adc
mov
sub
push
ret
clc
cmp
fimuls
aam
ficompl
xchg
cld
or
cli
dec
in
imul
or
mov
lds
sub
aas
rorl
and
movsb
pop
add
sbb
sbb
push
sub
sahf
shlb
adc
adc
sub
sbb
mov
sbb
pop
cmp
xchg
jg
jns
push
pop
jge
jg
hlt
adc
out
sub
jl
push
lods
and
adc
imul
pop
stc
repnz
push
shlb
xchg
push
ficomps
and
cli
ret
jp
add
jns
icebp
ja
cmp
sbb
sbb
push
push
pop
sbb
stc
lret
mov
icebp
mov
rorl
mov
add
push
bound
mov
popa
inc
out
cld
repnz
das
cmp
add
add
mov
sahf
fcoml
mov
mov
mov
add
mov
cwtl
cs
and
cld
repnz
push
loope
pop
stos
andl
mov
sub
jecxz
jge
fistpl
push
cmp
jl
lcall
shll
xchg
das
mov
rep
inc
cmpsb
dec
xor
flds
sub
insl
mov
xchg
and
jns
jo
mov
mov
out
loop
int
push
insb
xchg
jbe
xchg
das
and
cmpsb
sbb
jne
lret
and
sub
outsl
mov
cld
jnp
lret
leave
ficompl
call
repz
sbb
lret
das
adc
jo
es
movsb
mov
adc
dec
dec
clc
mov
in
mov
lds
mov
bound
in
test
push
inc
push
inc
addr16
push
out
push
mov
mov
in
xchg
pop
xchg
fwait
insl
loopne
aaa
xor
mov
enter
mov
lods
ret
aas
push
add
jle
in
aam
push
mov
movsl
or
pop
cld
mov
push
ds
sub
aad
adc
cmp
addb
jns
xchg
daa
inc
pop
dec
lret
mov
pop
test
in
push
je
fs
push
mov
pop
enter
xchg
mov
mov
rorl
push
pop
stc
repnz
add
andb
push
ficoms
mov
int3
mov
cwtl
lahf
cmp
add
jge
in
andl
pop
jns
sub
clc
adc
into
jmp
sbb
test
jno
inc
adc
cld
stos
sbb
test
nop
sbb
add
iret
fwait
js
inc
fsubs
lret
das
mov
sbb
stc
cmp
sti
sahf
mov
fstps
mov
jl
fbld
ja
sbb
push
in
sarb
add
testb
push
aam
sarl
xchg
das
nop
call
mov
pop
lret
mov
push
cwtl
into
les
cmpl
sbb
out
adc
aaa
lret
inc
push
pop
mov
cmc
jns
rolb
stc
in
push
inc
mov
mov
in
add
xchg
scas
fistl
pop
inc
mov
shlb
mov
cld
adc
popa
inc
scas
mov
jnp
ret
sbbl
lea
mov
xchg
das
lcall
loope
jae
test
pusha
push
inc
mov
enter
out
xchg
andb
dec
sarb
pop
dec
fldl
stc
in
jl
lock
and
insb
and
enter
bnd
mov
aad
lret
das
mov
loopne
call
jg
rcrb
xchg
das
mov
daa
lret
cmp
in
xor
dec
out
cltd
inc
or
or
ret
jnp
add
push
repnz
and
dec
jne
enter
sub
out
dec
add
or
dec
push
sub
imul
jle
pop
xchg
nop
scas
mov
cmp
repz
into
in
dec
test
lock
mov
push
mov
lds
scas
mov
imul
fisubrl
xchg
or
dec
mov
mov
mov
out
lea
cmp
mov
repnz
lods
dec
mov
mov
das
call
test
int
fcoml
shlb
mov
pop
loop
push
mov
repnz
pushl
cli
cmp
cmpsb
scas
outsl
lods
inc
repnz
das
pushl
ds
and
das
mov
xchg
into
ret
scas
or
inc
das
mov
fbstp
shl
shrl
pop
rolb
lret
adc
sti
imul
cli
jno
les
mov
lea
emms
addr16
notl
dec
imul
push
out
mov
popf
test
adc
cld
jnp
lcall
jmp
je
mov
das
ljmp
insl
fisttpl
add
pop
jge
sbb
pushf
popf
mov
jnp
lret
mov
and
pop
cmp
push
mov
out
aas
or
stc
in
rolb
cmp
xchg
mov
andb
cmp
push
js
mov
repnz
das
add
stos
loope
popa
sub
repnz
das
mov
into
or
xor
stc
jl
lret
das
mov
sub
bound
jbe
sbb
repnz
lret
xchg
imul
pop
add
jge
lret
adc
mov
push
pop
cmpsb
addl
repz
xorl
adc
das
adcl
aaa
cmp
loopne
jle
negl
add
lds
pop
adc
in
pop
sbb
xchg
fs
and
sbb
adc
cwtl
sti
xor
inc
adc
push
popa
cvtpi2ps
xor
in
xchg
imul
and
xchg
dec
sahf
adc
in
in
push
xchg
add
sub
xchg
jl
in
push
pop
in
fildll
inc
dec
andb
jns
lahf
dec
ds
xchg
je
cmpsb
rorl
sarl
in
in
ret
inc
into
mov
xchg
push
fdivp
movsb
cltd
cmpsl
add
insl
mov
push
pop
jns
mov
sbb
in
pop
adc
xchg
push
pop
jns
lcall
lret
orb
cld
jb
xchg
sub
into
je
mov
mov
enter
stos
xorl
sti
out
or
nop
xchg
mov
mov
or
and
lret
sub
pop
pop
sahf
push
xor
iret
mov
or
mov
pop
addr16
lahf
cltd
sahf
dec
add
lret
das
mov
stos
repz
jo
add
repnz
je
fnsave
pop
xor
jo
mov
xchg
adc
xchg
and
sbb
cld
repnz
das
aaa
mov
mov
jns
in
xchg
xchg
das
mov
cmpsb
sbb
pop
jmp
fstpl
sub
mov
bound
add
dec
aas
stc
add
mov
cmp
xchg
pop
push
ret
lahf
out
ficomps
push
test
jge
and
mov
sbb
xchg
lods
das
mov
fidivl
inc
je
adc
repnz
mov
movsl
punpckhwd
sub
loopne
and
jo
inc
iret
fsub
mov
or
jns
sbb
sarb
pop
and
rcll
sahf
lock
jns
jge
mov
mov
add
in
pop
in
fbld
push
pop
add
mov
pop
loopne
sbb
xlat
movsb
add
repnz
aas
aam
pop
xor
jns
xchg
ja
xchg
scas
lret
push
repnz
enter
xchg
pop
dec
mov
push
mov
lret
xlat
push
jmp
or
fs
jns
xchg
push
shrl
push
cmp
jno
in
push
pop
in
push
inc
lea
outsb
ficompl
sub
pop
jns
xchg
jg
arpl
or
incb
in
mov
mov
mov
repnz
das
jmp
aam
or
pop
ret
decb
xchg
pop
jle
std
mov
dec
cld
int3
sub
jle
in
xchg
sub
adc
or
jle
in
inc
imul
inc
inc
fnstsw
adc
in
pop
cmovno
and
int3
nop
fwait
in
pop
jle
dec
xchg
mov
lret
add
dec
fstpt
mov
enter
jle
in
inc
into
shrl
les
mov
xor
xchg
test
hlt
add
jg
lret
call
sub
add
push
test
mov
in
pop
xor
in
scas
in
das
in
pop
jle
faddl
arpl
ret
scas
ja
inc
jle
mov
pop
test
ret
inc
adc
gs
leave
sbb
push
pop
jns
xchg
es
mov
enter
jns
xchg
daa
pop
xor
popf
mov
and
xor
iret
inc
pop
lcall
pop
jns
mov
gs
mov
hlt
adc
in
lret
cwtl
rorl
pop
adc
jns
xchg
push
in
mov
scas
rclb
in
push
pop
fwait
out
lods
add
add
mov
jns
sub
iret
push
jnp
pop
xor
jg
xchg
and
xchg
or
push
data16
jnp
lret
test
cmp
jmp
in
jg
mov
mov
xchg
pop
jle
ja
mov
stos
jg
ljmp
jle
in
pop
mov
insl
pop
out
ret
jle
in
jl
sub
pushf
cld
fimuls
push
sbb
jg
xchg
pop
notb
data16
or
and
pop
jmp
fdivrl
sbb
stc
in
jne
scas
mov
cmp
aad
cmpsb
stc
in
pop
repz
decl
and
push
push
pop
fildll
pusha
stc
jns
xchg
push
jnp
ror
pop
loopne
mov
xchg
push
pop
test
js
hlt
add
into
daa
lds
xlat
rcll
ss
mov
je
inc
mov
mov
int
das
mov
sti
sub
mov
sbb
mov
out
mov
aad
mov
jo
out
xchg
xor
pop
aas
and
or
cs
imul
add
cmp
push
push
lds
lret
xchg
cmp
jns
movsb
adc
rolb
dec
cs
sbb
push
sbb
cmp
pop
js
lcall
pop
push
ja
mov
xchg
and
mov
ds
dec
or
fisttpll
sub
int3
xor
mov
xor
repnz
sti
cmc
jp
aaa
dec
pop
and
sub
push
push
cli
sbb
pop
sbb
out
fwait
shll
and
adc
femms
jmp
pop
fs
fdivr
aas
adc
daa
mov
in
pop
inc
dec
in
xchg
sub
inc
outsb
lock
jle
xchg
pop
jle
and
lret
repnz
daa
das
in
mov
push
mov
mov
gs
jnp
pushf
and
notl
push
jns
cmpxchg
mov
mov
jle
inc
cs
sbb
cmp
adc
pop
jle
lock
cmp
ja
rolb
lods
imul
mov
xchg
or
daa
jmp
and
cmp
in
push
pop
loop
sub
jnp
fnstenv
push
pop
jns
out
out
aaa
add
dec
subb
jecxz
lods
ljmp
pop
fidivl
and
rcrl
xchg
fistpll
std
or
mov
scas
orb
sub
xor
fsts
dec
in
mov
lds
mov
sti
dec
bound
jmp
dec
vunpcklps
and
inc
idiv
in
pop
loop
ss
insl
stos
lcall
xchg
pop
jle
gs
out
fldl
xchg
pop
jle
dec
in
pop
and
es
jp
cmp
in
ds
xor
inc
jnp
mov
sbb
push
cmc
mov
cmp
mov
icebp
enter
jnp
and
das
ds
push
mov
sub
cld
repnz
ljmp
mov
cwtl
cli
in
xchg
mov
push
les
cs
mov
xor
lret
sahf
xor
push
sti
add
test
pop
dec
in
mov
int3
cmp
das
mov
stos
xlat
insb
loope
in
jb
lea
ficoml
mov
lret
mov
pop
orb
sub
ja
rcll
pop
gs
in
mov
ret
sarb
push
fiadds
jp
adc
stos
testl
inc
js
fmuls
sti
inc
sbb
jge
in
int
sbb
push
xor
mov
pop
cmp
leave
and
xchg
mov
pop
inc
pushf
cltd
orl
repnz
test
outsl
mov
dec
cltd
sbb
leave
rolb
jns
scas
mov
push
mov
mov
fildll
push
mov
jecxz
cwtl
ret
nop
lds
and
in
imul
stos
sbb
js
cli
les
dec
push
jbe
hlt
lahf
jo
jns
xchg
push
jae
test
mov
bound
xchg
jg
pop
fbld
pop
divl
jmp
scas
pop
jle
in
mov
aaa
movsb
and
pop
mov
out
xchg
cmp
movsb
xlat
ss
jg
lock
dec
repnz
das
mov
int
pop
ljmp
mov
inc
lods
add
push
das
mov
decb
sub
popf
push
mov
cld
repnz
fldenv
push
push
sbb
insb
outsl
sub
jg
and
dec
stos
aam
loop
jnp
dec
add
scas
scas
xchg
aaa
jno
sub
xchg
adc
pop
jle
hlt
orb
pushf
rorl
inc
jle
in
fwait
xor
mov
stos
mov
daa
sub
addb
mov
xchg
loopne
and
test
mov
adc
xchg
xchg
lods
test
cmc
mov
xchg
xchg
ja
fnstenv
lods
cmp
insb
cltd
sub
dec
ljmp
and
dec
xchg
scas
mov
adc
jle
jo
mov
mov
sarl
mov
and
in
fsubrs
or
enter
adc
in
push
cld
lret
test
mov
sub
subb
shrb
mov
push
loopne
mov
das
sbb
pop
lcall
adc
repnz
jne
scas
shll
push
imul
sbb
repnz
das
mov
gs
mov
les
mov
add
int3
test
adc
insl
std
movsb
repnz
mov
xchg
mov
jge
lds
pop
subb
sbb
test
and
xor
fmul
stc
outsb
enter
xchg
in
je
andl
repnz
and
mov
lret
sub
icebp
hlt
sub
loopne
push
outsl
xor
je
cwtl
or
das
ds
out
and
inc
mov
stc
repnz
jl
mov
lods
dec
sbb
mov
orl
adc
lea
xor
lret
das
stos
test
mov
cld
repnz
mov
into
adc
dec
fldz
mov
shll
adcb
mov
jns
cmp
jnp
inc
xchg
pushf
mov
test
push
cld
push
sbb
adc
pop
jns
inc
lods
inc
sbb
loop
add
pop
cmpsl
xor
stc
in
jg
cmpl
adc
xchg
pop
jle
lods
inc
jg
out
out
lea
sti
inc
ss
sbb
jecxz
fs
xor
leave
test
mov
inc
or
fs
repnz
das
mov
in
pop
push
adc
jle
lret
das
mov
jb
into
push
rolb
ret
loope
test
fsts
scas
mov
mov
lds
lea
sub
out
enter
mov
mov
pop
stc
jecxz
jb
outsl
stos
ljmp
inc
jle
in
insl
jb
jae
push
retw
mov
stc
jl
lret
mov
into
push
shr
lods
and
add
jne
das
mov
mov
out
test
mov
adc
cld
mov
dec
sti
cmp
shll
loope
jmp
outsl
loopne
pop
push
jbe
inc
adcl
jns
or
outsb
dec
cltd
or
enter
std
iret
adc
pop
jg
cli
cmpsl
xor
xchg
pop
jl
lea
dec
sbb
dec
and
inc
adc
lret
sbb
rcll
lahf
xchg
lods
jp
pop
pop
cmpsb
mov
mov
leave
out
jp
mov
mov
out
push
popf
dec
xchg
adc
negl
sub
mov
repnz
lahf
dec
xor
cmpb
out
push
ret
dec
jmp
cltd
or
push
xchg
and
xor
cli
xchg
lds
lret
lods
nop
jg
pusha
not
stos
inc
mov
shrl
mov
jb
xchg
push
aaa
nop
mov
jns
lock
cmp
mov
inc
xor
lret
fwait
cmp
test
and
fnstenv
mov
sar
cmp
bound
in
xor
mov
push
sub
pop
gs
in
mov
mov
ljmp
orl
mov
test
scas
mov
addr16
stc
out
mov
popa
jmp
fs
inc
pop
stos
in
pop
xor
lret
das
lcall
sti
sbb
cmpsb
das
mov
xchg
lods
cli
mov
repnz
popf
cmp
jae
cld
repnz
inc
push
sub
stc
cld
sbb
mov
stc
repnz
das
xchg
leave
and
sub
pop
or
pop
movsb
jmp
xlat
xor
cld
repnz
mov
arpl
lret
adc
xor
in
jg
push
loop
jle
push
pop
cld
cli
shrb
xchg
pop
jle
test
adc
repnz
cmpsb
insl
test
jge
loope
scas
mov
mov
rolb
xchg
sbb
js
stc
in
fsubs
mov
inc
sbb
mov
sti
jg
imul
movb
pop
fwait
and
dec
insl
jge
lods
dec
lret
das
ds
mov
jge
movsb
loop
popa
lea
repnz
fistl
xchg
mov
mov
inc
pop
jnp
lods
xlat
cwtl
clc
push
and
mov
repnz
and
mov
or
mov
mov
pop
aam
movsb
movsb
pop
daa
pop
pop
cmp
xor
mov
fisubrl
loop
jp
inc
or
es
lret
divl
je
cli
in
clc
repnz
or
lret
or
mov
jecxz
lret
mov
xorl
mov
xchg
mov
imul
mov
mov
pop
push
xorb
lods
loope
push
loop
leave
lret
mov
or
std
sub
inc
push
lret
pusha
cli
mov
enter
pop
add
sub
mov
mov
cs
jns
out
mov
push
gs
push
mov
test
sahf
adc
imul
mov
pop
jns
cmp
mull
adcl
roll
outsl
xor
pop
xor
cmpsl
xchg
push
jb
dec
adc
sub
jbe
and
adc
insl
add
mov
mov
repnz
ja
mov
jbe
imul
test
scas
mov
fimull
fbld
jge
jle
mul
mov
lds
pop
xchg
leave
shll
adc
imul
lahf
add
push
fcomp
mov
dec
scas
mov
dec
andnps
jo
mov
repnz
enter
repz
push
mov
gs
or
das
mov
mov
fdivrs
dec
scas
mov
pop
movsl
mov
fs
xchg
mov
and
jns
pushf
cmpsb
jb
or
leave
xchg
lods
mov
int3
and
lret
aas
xchg
jg
sub
dec
aas
bound
ret
scas
mov
frstor
sbb
jo
repnz
ljmp
mov
mov
sub
lea
scas
iret
in
dec
cmp
and
js
stos
cmp
and
ds
imul
pop
jns
xchg
push
pushf
jno
jae
xor
cmp
adc
ljmp
jbe
mov
sahf
rclb
mov
jl
mov
xor
cltd
cmp
adcb
or
in
neg
xchg
and
or
mov
and
in
push
iret
and
mov
enter
pop
pop
mul
add
fldcw
fsts
ret
lock
nop
mov
pop
mov
cmc
enter
sub
ss
popa
sbb
pop
inc
fsubrs
repnz
mov
lock
or
push
stc
mov
dec
pop
sti
mov
jae
test
xchg
mov
cmp
cmp
out
stos
lahf
movsb
repnz
inc
loop
mov
xor
enter
pop
and
mov
test
adc
sub
sar
xchg
cmp
cli
stos
push
hlt
mov
in
pop
jle
cmpb
mov
lea
add
repnz
sarl
pusha
scas
es
in
jle
jb
pop
sub
ftst
xchg
pop
mov
ljmp
add
fmulp
jp
cmp
test
push
ret
movsl
inc
xchg
mov
dec
fiadds
sti
das
mov
adc
mov
jnp
mov
mov
repnz
or
nop
xchg
inc
cmp
pop
jl
in
ljmp
add
or
fcmovnb
enter
stos
in
pop
iret
xlat
adcl
mov
fisubrs
xor
xor
dec
cmp
push
jl
adc
repnz
movq
mov
aam
cmp
faddl
lds
mov
add
insb
mov
stc
in
jg
popa
aas
lods
nop
mov
push
clc
push
in
pop
jle
sbb
scas
adc
aaa
dec
insl
dec
out
dec
jl
xchg
out
xor
jns
cmp
add
lods
cmc
in
jno
pop
icebp
insl
push
inc
filds
mov
les
shr
adc
repnz
enter
roll
sub
lret
mov
push
sti
hlt
pop
sub
mov
enter
cld
xchg
inc
xor
jns
cmp
push
loopne
or
inc
mov
mov
xchg
shrb
cld
repnz
jno
daa
cmpsb
imul
sbb
push
push
xor
jno
pop
shlb
jns
popf
std
push
bnd
lcall
pop
or
jmp
push
cmp
lret
pop
cmp
mov
adcb
pop
and
mov
pop
dec
int
xchg
fdivrs
pop
fildll
mov
pop
addb
mov
mov
xor
sbb
jge
push
test
pop
xor
jg
inc
adc
lret
bound
repnz
sub
sbb
pop
push
sarb
xor
add
lods
repnz
ret
daa
push
lods
sbb
ds
sub
mov
lock
inc
das
mov
mov
repnz
fidivrs
frstor
mov
enter
test
adc
jmp
jle
aaa
in
dec
imul
lea
aaa
xchg
jl
inc
scas
xor
sub
push
mov
pop
ds
adc
stc
pop
lret
or
rcrl
into
sti
in
sahf
sub
scas
xchg
mov
mov
inc
dec
decl
leave
mov
jmp
xchg
ja
xlat
mov
rorl
cld
repnz
insl
mov
mulb
xchg
ss
je
hlt
xchg
lods
andb
mov
scas
mov
pop
cwtl
pop
mov
jle
loopne
jno
lret
adc
lods
jge
sbb
cmp
dec
xor
cmpsl
mov
lret
das
mov
outsb
xor
xchg
js
mov
cld
repnz
gs
jo
out
enter
mov
repnz
jo
mov
xchg
mov
icebp
enter
push
scas
or
enter
cmp
mov
adcl
ds
out
xor
jmp
mov
cmp
mov
mov
and
cli
loop
cld
repnz
das
jae
dec
outsl
sub
jnp
xchg
jg
roll
xlat
inc
adc
and
stc
lock
insl
push
fsubrl
pop
jle
in
cmpsb
sahf
xchg
std
nop
repz
sbb
call
dec
incl
mov
cmovs
pop
and
xor
repnz
test
and
das
jp
xchg
das
ds
notl
data16
jmp
cli
dec
cld
repnz
es
jb
and
movsl
push
xchg
push
fiadds
or
xor
aam
push
pop
jns
pop
les
xchg
mov
pop
mov
in
lahf
xchg
arpl
mov
dec
inc
and
jnp
pop
fs
mov
mov
mov
adc
fiadds
mov
cmpsb
imul
sarl
cmc
xchg
xchg
and
lret
mov
or
leave
push
out
fmuls
and
sub
xlat
push
cmp
lea
or
jle
xchg
push
pop
in
cltd
mov
push
add
push
pop
jns
int3
loope
std
cli
ljmp
stc
in
in
imul
in
cmp
pop
into
stc
in
pop
mov
mov
push
sti
in
pop
jle
or
pop
sbb
mov
mov
and
push
pop
jns
dec
dec
popa
push
push
adc
sbb
xor
in
addr16
jbe
lea
mov
pop
dec
pop
cmc
dec
or
popf
inc
push
jg
out
adc
ds
and
out
xor
in
mov
and
xchg
and
adc
xchg
push
pop
push
mov
and
inc
or
gs
jle
ja
mov
push
int
lock
cmp
jle
in
inc
add
pop
mov
jge
cli
enter
sub
test
adc
ret
or
scas
xchg
loop
sub
rol
xor
hlt
cmp
in
stc
in
inc
nop
bound
add
fldenv
dec
fnsetpm(287
xchg
pop
jle
in
cmp
cmpsb
or
add
test
lret
lahf
shlb
in
push
sbb
fwait
cmp
inc
xchg
cmp
sahf
dec
sbb
mov
add
mov
add
lods
jbe
push
in
inc
xchg
fimuls
mov
pop
arpl
or
ds
pop
in
and
cmp
dec
cmpsb
notl
in
ret
add
stc
div
xor
ss
jge
inc
pop
jns
jecxz
push
daa
xor
cltd
dec
jl
xchg
jg
aaa
jne
and
push
lods
rolb
jl
rcl
cmp
push
in
jns
lea
xchg
lods
adc
in
ret
pop
cmc
mov
sub
popf
push
xchg
sub
pop
mov
imul
xchg
outsl
ds
clc
aad
frstor
inc
jle
fnsave
js
jecxz
inc
jge
in
or
nop
inc
outsl
inc
sub
mov
in
pop
adc
mov
cli
cmp
lods
push
inc
mov
sbb
lret
daa
pop
adc
inc
cmp
xchg
gs
xchg
in
repnz
sbb
jmp
xor
icebp
pushf
nop
stc
mov
mov
adc
lods
das
mov
ucomiss
sub
jle
ja
adc
orb
xchg
pop
xor
je
push
repnz
adc
cld
imul
fnstenv
shll
add
mov
or
xchg
notl
inc
cwtl
jge
rcll
std
sbb
dec
ficoms
adc
jns
pop
lods
push
lcall
pop
mov
pop
jns
xchg
addr16
xor
mov
and
lock
sub
push
ret
rcl
push
es
xchg
jns
ret
fidivs
in
push
pop
iret
lahf
push
ljmp
push
xchg
push
pop
jns
or
cld
sbb
call
jns
mov
or
xor
mov
out
cltd
movsb
inc
lock
pop
sahf
mov
das
repnz
jg
fadds
outsb
sarb
push
lds
sub
sub
lret
das
and
inc
stos
testl
mov
mov
aas
xor
mov
pop
jle
dec
imul
cmp
stc
in
mov
pop
js
dec
pop
jge
xor
push
mov
insl
mov
fucomp
dec
sub
mov
sub
es
in
cmp
cmp
shrb
xchg
pop
jle
fdivl
mov
int
pop
xchg
pop
jle
das
movsb
loopne
push
cmp
std
pop
pop
jle
in
stos
and
sbb
sahf
stos
hlt
mov
in
imul
ss
clc
aam
sub
in
pop
and
adc
mov
jl
jg
push
xchg
and
es
sub
mov
push
xchg
lods
enter
push
pop
ds
lcall
pop
shrb
xchg
sub
icebp
mov
add
out
jbe
dec
inc
xchg
stc
into
enter
and
dec
mov
xchg
das
cmc
jg
xchg
mov
and
ja
dec
mov
loop
sub
lock
mov
nop
mov
xchg
pop
mov
or
repnz
mov
scas
ds
mull
repnz
data16
or
push
cmpsl
enter
fistpl
cmp
call
clc
mov
sub
in
aam
into
mov
pop
jns
xchg
and
sbb
sbb
lods
push
xor
jns
xchg
push
mov
cmp
push
push
mov
xchg
push
pop
push
adc
jnp
je
adc
pop
jns
pop
push
mov
pop
lret
and
cmpsl
lods
sub
stos
inc
sub
dec
xor
outsl
inc
add
mov
popf
mov
mov
popa
cli
cmpsl
mov
jmp
sub
roll
jns
xchg
mov
xchg
adc
repz
in
jg
int
jg
xor
loope
lods
mov
cmp
inc
leave
pop
je
ss
mov
das
inc
pop
add
jl
in
pop
pop
repnz
jo
rcrb
jp
mov
pop
jle
bound
cli
cmpsl
add
arpl
std
xor
out
jmp
enter
mov
ficompl
std
scas
jle
inc
jle
inc
pop
push
int
pop
pop
xchg
popa
leave
jns
xchg
mov
dec
jo
testb
jmp
hlt
sbb
pop
les
ret
sbb
push
xchg
push
mov
mov
sarl
jnp
addr16
and
sub
push
pop
ljmp
shll
outsl
and
scas
mov
push
repz
cmp
int
inc
mov
inc
imul
lret
andb
jp
push
ja
mov
lret
mov
mov
xlat
push
push
sub
imul
outsb
les
cmc
mov
scas
mov
dec
pop
pop
hlt
lahf
lret
inc
lcall
cmp
gs
aaa
adc
and
mulb
jmp
lret
mov
sahf
mov
fdivl
dec
sub
xor
pop
push
loop
in
out
in
xchg
mov
add
fwait
push
and
push
ror
xchg
outsl
insb
dec
mov
sti
inc
and
leave
sub
jmp
test
jb
mov
cmp
sti
dec
dec
aaa
mov
and
add
je
movsl
lret
pop
and
mov
inc
cltd
and
mov
mov
sbb
pop
ja
sub
stc
test
adc
js
mov
add
inc
in
pop
jle
mov
jp
xchg
pop
jle
dec
arpl
adc
adc
imul
mov
lcall
cmp
jl
in
imul
cli
lahf
xchg
jo
daa
leave
sarl
xchg
imul
aaa
lock
xor
in
pop
jle
mov
prefetcht1
xor
pop
jle
jnp
in
xor
lret
mov
inc
inc
jge
insb
xor
mov
mov
pop
shll
das
pop
dec
mov
scas
mov
test
pop
adcl
repnz
cwtl
ljmp
in
mov
lret
sub
lea
jge
out
pop
and
stc
data16
xchg
xchg
mov
mov
dec
addr16
push
dec
xchg
repnz
lods
mov
in
cltd
insb
sahf
cmpsb
call
out
lock
out
insl
mov
js
and
inc
je
cld
repnz
jle
out
jge
mov
sbb
es
repnz
das
add
stos
pusha
in
mov
cld
notl
dec
push
pop
cli
std
in
cmp
xor
push
xchg
int
sbb
dec
mov
stc
in
jo
fwait
xorl
sub
ljmp
mov
jl
in
push
pop
stos
xor
jb
pushf
and
sbb
test
mov
pusha
mov
cli
lcall
mov
and
scas
bound
xchg
push
scas
mov
push
sti
std
pandn
cmc
data16
dec
std
movsb
repnz
add
sub
sub
jbe
xchg
pop
imul
mov
imul
pop
loopne
ficoms
loopne
shll
dec
and
lds
std
or
jmp
inc
scas
mov
xchg
ss
xchg
xchg
sarb
lods
lods
mov
clc
dec
std
and
xchg
push
pop
sub
stos
insb
jb
jno
repz
pop
std
adc
test
mov
sbb
in
dec
adc
xor
nop
cmp
xlat
cmp
fdivp
cwtl
pop
outsb
imul
scas
mov
jns
movsl
mov
nop
pop
cmp
insb
or
cmp
lret
mov
adc
test
push
scas
sub
cmp
test
mov
test
xchg
and
out
xchg
repz
sub
test
push
mov
lret
das
mov
mov
lcall
into
xchg
in
mov
icebp
mov
repnz
pop
into
mov
mov
inc
in
das
call
jge
cmp
mov
push
sbb
stc
dec
pop
test
cmp
sbb
loopne
lret
ljmp
cmc
mov
scas
mov
bound
jecxz
sbb
or
pop
push
mov
icebp
pop
imul
and
xrelease
stc
in
in
add
dec
jg
clc
mov
lret
aas
xor
das
ret
pop
lahf
mov
stos
in
mov
mov
xor
das
lcall
and
sbb
cmp
mov
aam
mov
lea
icebp
push
aaa
xchg
push
pop
jns
xor
push
insl
in
add
inc
sar
sti
in
xchg
lahf
cmpb
xor
jge
pop
pop
jle
lret
das
mov
stos
push
lret
push
mov
xchg
jg
cld
adc
dec
cmp
aam
mov
pop
shlb
ret
aam
pusha
stos
int
aas
ficomps
movsb
xchg
xchg
push
sbb
stos
cmpb
sub
push
test
aam
and
cmc
loop
jbe
lret
sbb
cld
aam
addr16
repnz
pop
ret
jb
sbb
add
repnz
das
mov
stos
add
jl
stc
jge
sbb
into
adcb
mov
stc
repnz
pop
out
scas
out
dec
ret
sub
sub
xchg
mov
jl,pt
ljmp
push
pop
jns
cmp
mov
push
fadd
jg
enter
jno
dec
mov
bound
repnz
das
push
jno
testb
fnstcw
pushf
jo
enter
xchg
push
fidivrs
push
jns
lods
test
jle
ja
int3
xor
cmpsb
mov
fs
ds
cmp
ret
sbb
add
lods
cmp
fstpt
push
hlt
aas
imul
inc
ja
ret
jmp
xchg
inc
mov
bnd
push
clc
movaps
popf
xchg
in
and
ljmp
in
push
movsl
in
pop
jle
sub
popf
adc
jbe
xchg
pop
jle
sbb
cmp
addr16
cltd
jp
lret
dec
or
movsl
pushf
mov
xchg
mov
push
std
fucomp
or
sub
mov
fwait
popf
push
filds
pop
fisttps
push
and
ljmp
sbb
mov
jbe
test
xchg
sti
imul
cmp
or
loopne
aaa
lahf
cmp
jg
pop
jns
subl
sarb
sbb
in
jns
inc
jnp
cli
push
das
mov
jmp
xchg
pop
pop
jbe
insl
ds
adc
pusha
jge
jge
mov
lock
jns
xchg
pop
fcompl
jle
push
cld
push
adc
das
lcall
xchg
loop
ret
cld
repnz
pop
negl
jge
nop
cmp
outsl
cmpsl
xor
repnz
das
mov
sbb
movsb
arpl
push
test
xor
neg
dec
or
out
lret
das
mov
jns
fisubl
sarl
cmp
daa
push
jmpw
dec
or
das
mov
mov
jle
dec
push
or
mov
dec
dec
xor
lret
xchg
or
mulb
repnz
stos
jno
dec
fwait
aad
loope
sbb
mov
lret
enter
xchg
push
js
int
mov
xchg
orl
adc
jmp
nop
in
push
mov
ret
dec
dec
aaa
xchg
and
jns
in
pop
outsb
gs
sarb
jnp
repnz
test
out
jge
lods
idivb
fbld
mov
push
and
or
jle
in
test
inc
fs
and
popf
mov
adc
pusha
jle
insl
in
push
pop
mov
sar
mov
push
pop
jns
std
push
mov
scas
stos
in
loopne
std
scas
mov
test
in
inc
push
and
inc
jmp
push
pop
jns
xchg
jno
pop
jmp
sbb
jns
out
cwtl
sub
sbb
mulb
and
xchg
xchg
xchg
adc
stos
mov
mov
cld
push
xchg
fistpll
dec
xchg
sub
out
mov
movsl
xorl
repnz
and
cmp
call
sub
inc
sbb
fisubs
call
mov
cwtl
mov
bound
jge
lret
jns
mov
stos
movsb
mov
mov
adc
xchg
mov
mov
arpl
sbb
xor
test
cmpsl
ret
push
lahf
push
shll
shll
pop
out
mov
jne
mov
das
mov
xchg
push
testl
mov
jmp
sub
push
adc
std
mov
pop
rorl
jle
or
repnz
das
in
cltd
gs
mov
lock
push
adc
sub
xchg
lret
mov
lahf
arpl
lret
add
sahf
pop
jle
in
movsb
sbb
sub
add
ja
stc
in
sbb
mov
mov
scas
sarl
outsb
push
lods
xchg
into
lahf
imul
pop
jle
sbb
mov
call
jl
push
add
xor
std
jp
or
and
and
test
scas
pop
or
pop
jns
lods
mov
xor
roll
cs
push
mov
scas
imul
nop
cmp
test
stc
mov
lret
dec
daa
cli
aaa
rorb
enter
push
mov
add
sbb
and
imul
das
daa
cmc
dec
xchg
neg
jno
mov
decb
sub
mov
lea
push
outsl
xchg
push
pop
jns
cmp
cmp
test
fstl
fs
test
sti
nop
sub
fistl
xchg
pop
call
xchg
ror
push
ds
in
pop
jle
insl
cmp
cmpsl
or
mov
fimuls
js
into
inc
jns
aaa
in
cltd
ja
pop
jns
xchg
lcall
xor
icebp
js
jnp
pop
push
mov
paddusb
jle
repnz
out
mov
mov
pop
xchg
pop
jns
xchg
cmp
inc
inc
cmp
int
arpl
in
push
and
repnz
ret
cmpsl
sbb
jg
pop
popf
lret
sbb
jge
pop
in
adc
icebp
add
cld
fwait
mov
inc
jecxz
xchg
call
or
in
push
pop
mov
xchg
xchg
test
cmp
fs
sub
push
push
mov
mov
jle
in
cmp
repz
cmp
sar
in
pop
stos
pop
jne
lret
or
rcll
xchg
push
pop
pop
or
outsl
xor
and
scas
dec
stos
jae
mov
sbb
jns
imull
adc
lret
das
inc
mov
fwait
push
cmpsl
xchg
and
inc
bound
lods
iret
mov
mov
shld
jo
fcoms
in
cmc
mov
sub
rcll
in
push
mov
pop
pop
xchg
call
add
inc
ret
out
jnp
dec
scas
mov
jo
mov
inc
lods
lahf
pusha
call
inc
and
pop
sbb
add
js
sub
lret
adc
sbb
rol
fdivrs
sub
mov
pop
push
push
mov
test
scas
mov
lret
and
in
ja
pop
jle
in
pop
dec
cmp
push
fs
xchg
dec
lahf
cmpsb
sti
jno
ror
in
roll
ds
mov
mov
repz
xchg
test
mov
mov
loope
js
adc
repz
scas
mov
insb
cmp
jmp
fwait
xor
jg
inc
sub
ret
cld
daa
dec
std
lds
scas
bound
sub
pop
push
push
ss
in
mov
or
or
pop
jns
lods
sbb
insl
sub
push
mov
push
pop
mov
xor
inc
inc
cmp
ret
mov
stc
test
mov
push
lods
adc
addl
lds
jns
out
test
push
mov
mov
push
pop
jns
push
lds
ja
ss
and
ss
jns
xchg
xchg
js
mov
dec
leave
test
enter
or
ds
adc
jle
pop
xor
stos
aaa
out
inc
in
mov
sarl
std
aad
fsubr
mov
repnz
and
outsl
jge
jae
fs
sub
shll
aam
push
jmp
sar
insb
cmp
out
dec
jnp
lock
inc
cmpsl
jmp
out
cmpsl
stos
ss
sub
sbb
mov
scas
mov
dec
mov
mov
sub
adc
push
push
data16
repnz
and
aam
daa
testl
fstpl
loopne
sbb
cld
loop
dec
mov
add
das
mov
add
jl
cmpsl
mov
sub
dec
xchg
pusha
mov
pop
enter
pusha
int
mov
movb
push
js
mov
mov
pop
jns
add
clc
xor
inc
test
loop
pop
jns
xchg
inc
dec
cmp
or
pop
fidivrs
xchg
push
and
mov
jo
jp
movsb
in
mov
push
in
lock
fstps
in
pop
in
outsl
loope
insb
mov
dec
cld
lds
push
loope
je
push
mov
das
mov
mov
sub
lret
sbb
mov
jmp
in
sub
adc
call
jecxz
dec
lods
sub
stc
or
pop
jns
xchg
sti
in
ja
jl
iret
mov
or
add
dec
fbld
fs
dec
in
cmp
imul
jns
shrb
xor
add
lret
mov
adc
vpsubsb
repnz
xchg
loope
dec
mov
cmp
push
dec
cmc
and
repz
jns
ljmp
pop
sbb
xchg
jg
pop
pushf
sbb
outsl
mov
push
stc
in
dec
and
imul
in
mov
mov
or
dec
and
lods
jns
cs
daa
sbb
push
test
xor
and
mov
mov
in
mov
arpl
ds
mov
xchg
imul
push
pop
add
loopne
and
pop
jns
pop
push
xor
lea
xchg
jle
ja
jb
cltd
mov
daa
movsl
and
sarb
xchg
pop
or
inc
jmp
mov
fcmovb
and
in
pop
jle
cld
mov
cmp
sub
pop
jle
aaa
push
dec
xor
fnstsw
jle
in
test
mov
negl
sub
xchg
lret
lea
sub
xor
cmpl
ds
lret
sbb
xchg
jns
push
mov
xor
jle
mov
pop
pop
pop
inc
xchg
mov
test
push
xchg
pushf
repnz
mov
pop
jp
rep
xrelease
sub
cmc
push
adc
fnsave
stc
in
sub
inc
bound
mov
mov
xor
repnz
and
inc
test
gs
ss
or
push
cmp
push
pop
scas
lret
das
mov
ds
andl
cld
repnz
sbb
cs
notl
fdiv
out
xchg
jg
out
xchg
xor
xchg
jle
cmp
inc
mov
ret
cmpsl
push
pop
add
imul
mov
sahf
imul
fcomps
sub
sub
repnz
fmul
cmp
cmp
mov
nop
jnp
das
adc
sbb
or
nop
or
inc
scas
mov
sbb
sbb
mov
jns
mov
movsb
movsb
xor
xchg
push
pop
xchg
push
mov
sahf
mov
arpl
pop
jns
hlt
jge
into
pop
stos
fldt
ret
movsl
ja
lds
pusha
addl
rcrl
and
lret
sbb
dec
pop
jle
in
scas
jbe
and
sarl
xchg
pop
or
mov
jge
cmpsb
cmp
lret
das
mov
aad
xchg
mov
jmp
xchg
das
mov
loop
ss
push
ret
fidivrs
mov
lret
aam
testl
dec
xchg
repnz
and
sahf
pop
xlat
mulb
mov
xchg
mov
ds
out
out
mov
imulb
cmp
mov
inc
xchg
aad
xchg
pop
jge
mov
push
sarb
ljmp
in
inc
dec
dec
test
enter
mov
jbe
mov
test
mov
or
out
sub
repnz
xchg
sub
mov
xchg
jg
stc
test
mov
adc
inc
and
imul
enter
cltd
aas
and
int3
sub
xchg
call
jns
es
sti
fadds
pop
sub
nop
mov
call
js
cmpsb
test
add
xchg
push
xor
sub
repz
inc
and
stos
mov
pop
push
repnz
pushf
les
imul
neg
push
xchg
outsb
push
xchg
shl
in
pop
jle
xchg
xchg
or
jle
pop
mov
inc
mov
pop
push
jl
int
pop
jle
in
pushf
xchg
lock
insl
adc
adc
sti
enter
or
xor
imul
mov
pusha
adc
pop
bound
mov
test
fcompl
sub
mov
sub
xlat
mov
or
sahf
xchg
test
sbb
cli
inc
cmpl
xor
mov
jo
into
imull
and
into
add
or
and
mov
ljmp
dec
movl
mov
lea
fstl
pop
jle
in
push
cwtl
or
cmp
mov
pop
aaa
dec
mov
add
int3
pop
jns
lods
push
nop
dec
mov
push
or
rclb
leave
xchg
pop
sub
mov
sbb
mov
pop
dec
in
aaa
cmc
enter
add
sub
cmp
pop
mov
ds
lret
and
push
and
gs
mov
push
cmp
data16
mov
pop
sub
scas
jecxz
mov
ja
jecxz
daa
inc
mov
cli
add
jo
das
lcall
stc
inc
lahf
lea
popa
xchg
pop
imul
enter
jge
lret
adc
pop
and
nop
push
mov
mov
in
pop
inc
es
aad
jb
push
push
mov
jle
js
loopne
outsb
sti
test
and
xchg
pop
jle
in
mov
aam
clc
mov
mov
enter
insb
mov
pop
add
sub
dec
mov
gs
inc
scas
mov
pusha
in
repnz
cmpsl
mov
xchg
sti
mov
mov
dec
lcall
pop
jns
push
or
rcrl
icebp
fisubrl
pop
jns
sbb
xchg
hlt
cmp
sub
push
cmp
mov
inc
inc
pop
popf
sti
jmp
sbb
out
sbb
fldt
scas
push
push
pop
jns
mov
adc
mov
pop
jns
xchg
xchg
jo
mov
fimuls
data16
mov
in
push
xor
insb
push
xchg
and
add
jg
pop
out
movsl
add
or
lock
xchg
mov
jle
in
mov
cmovae
adc
mov
jle,pt
in
xor
inc
mov
pop
mov
push
and
pop
push
ljmp
mov
inc
jl
mov
pushf
call
lret
mov
cmpsb
push
add
sbb
lret
das
mov
lods
cmp
xchg
pop
jge
xor
mov
movnti
shr
les
inc
test
jmp
enter
mov
call
push
fiadds
test
jo
xchg
push
pop
jns
cmpsl
pushf
sti
and
aam
sbb
jns
lods
rcrb
jns
int3
push
push
pop
jns
xchg
and
push
xor
jb
in
push
out
cmc
mov
in
pushf
hlt
test
int3
test
loopne
in
ja
ret
jae
xchg
shlb
les
iret
sahf
pop
jns
xchg
stc
insl
sbb
jmp
in
jg
es
xor
icebp
push
mov
aad
lahf
mov
lcall
adc
cwtl
or
cld
repnz
lods
mov
xlat
adc
movsb
icebp
lods
imul
push
jge
mov
pusha
inc
xchg
das
mov
jbe
add
cmp
inc
mov
pop
inc
clc
std
jp
mov
mov
in
imul
insb
jecxz
fisubs
jns
sub
repnz
mov
mov
mov
or
cmpsl
push
mov
pop
mov
push
pop
repnz
std
pop
pop
fs
mov
push
shll
scas
mov
out
xchg
mov
aas
xor
dec
jp
sidtl
cmp
repnz
push
jb
mov
addr16
jnp
sub
pop
mov
sbb
mov
test
ret
es
adc
lret
cwtl
jmp
aas
cmc
fldcw
mov
xchg
mov
cmp
loop
stos
and
insb
xchg
das
decl
mov
lret
das
mov
insb
int
push
xchg
and
xchg
ret
imul
cmc
xchg
ja
dec
cmpsb
cld
pop
mov
mov
out
enter
into
inc
push
and
or
out
xchg
fnstcw
out
sub
mov
out
gs
jno
cli
pop
sbb
sti
enter
or
jmp
repnz
das
mov
nop
cmpsl
mov
filds
cld
mov
fdivr
push
std
dec
int3
inc
sub
fdivrs
data16
mov
adc
test
pop
hlt
enter
xor
jae
jno
mov
mov
insl
cmp
cmc
enter
fistps
inc
in
hlt
xchg
ret
or
subb
push
test
push
scas
movl
and
push
lahf
ja
xchg
enter
repz
dec
push
es
mov
mov
clc
or
pop
mov
mov
and
enter
jb
mov
push
imul
sub
gs
xorb
shr
or
stc
push
and
into
mov
out
jnp
xchg
push
fsubrp
mov
add
loope
repnz
aas
fsincos
stos
out
ja
sahf
les
lret
das
mov
pop
or
cwtl
pop
or
inc
stos
repnz
and
xor
push
xchg
and
nop
adc
test
push
stc
lea
and
jmp
pop
jns
lods
dec
std
mov
jne
ret
icebp
xor
ja
xchg
push
add
iret
xchg
int
or
ds
sbb
xchg
nop
mov
xor
in
add
imul
and
stc
in
pop
push
cmpsb
jb
mov
fcmovnu
sub
xchg
pop
jle
not
fld
add
ss
xchg
mov
cwtl
mov
cmc
and
lods
sub
mov
jns
fmuls
mov
dec
fcmovb
mov
add
sbb
repnz
daa
loopne
mov
pop
sbbb
lods
sub
inc
clc
xchg
int3
add
sbb
gs
or
mov
mov
sub
sbb
pop
mov
or
rcrl
in
enter
cwtl
imul
dec
pop
jns
jecxz
leave
cmc
sbb
push
cld
xchg
push
int
cltd
inc
ljmp
repnz
das
mov
imul
pop
dec
lret
das
mov
inc
cmp
rorl
mov
repnz
stos
xor
inc
xchg
dec
aam
shlb
mov
scas
lods
repz
in
ja
fstps
in
mov
inc
stc
or
jg
jae
xor
sarb
fnsave
das
mov
dec
mov
cs
loop
sub
jge
lret
mov
xchg
fldt
cwtl
push
test
out
leave
jle
stos
lret
das
push
mov
addr16
push
and
in
sbb
sbb
repnz
ds
aaa
int3
inc
imul
aas
xchg
cmp
jecxz
cld
adc
das
add
xchg
mov
mov
lock
enter
xchg
push
mov
in
adc
aaa
pop
jns
or
pop
jo
daa
or
lods
lret
pop
fldenv
sbb
inc
sub
inc
pop
adc
leave
out
stos
fisubl
repnz
xchg
lret
xchg
push
fisubrs
or
js
add
scas
mov
push
mov
pop
incl
add
outsb
out
nop
mov
lods
jl
adc
negl
add
lret
push
nop
je
mov
lcall
xor
or
xchg
or
in
xchg
fisubrl
mov
mov
fidivs
in
dec
add
cs
test
ss
jne
mov
dec
jp
mov
popa
in
mull
pop
into
push
xlat
movb
pop
jns
xchg
add
mov
stc
mov
out
leave
je
mov
inc
arpl
and
xchg
push
xor
in
and
cld
in
jnp
test
clc
xchg
push
pop
jns
xlat
ja
js
in
ss
jl
adcl
popf
neg
gs
pop
jno
pop
addr16
xchg
test
cmp
xchg
sbb
inc
cli
adc
mov
pusha
arpl
jg
stc
repnz
sub
hlt
aam
imul
outsl
cld
sti
enter
dec
mov
inc
xchg
pop
lret
filds
xchg
loopne
std
jle
dec
mov
das
lcall
stc
cmp
jge
adc
fucomip
jno
cli
fcmovbe
mov
addr16
jb
fldenv
add
stc
int
jge
lret
das
mov
xor
cmp
stos
in
pop
mov
dec
ret
inc
cmp
ja
ljmp
repnz
loopne
and
adc
jnp
in
mov
sti
dec
or
das
mov
and
movsl
popa
clc
or
cld
repnz
cmp
and
pop
jae
mov
cmp
test
mov
adcb
adc
lret
in
pop
test
outsl
mov
pop
and
stc
test
push
lahf
lret
insb
hlt
and
pushf
cli
fisttpll
push
scas
adc
mov
or
loope
sbb
loop
xchg
lea
and
arpl
rcrb
loope
cltd
nop
js
and
repnz
mov
pop
xlat
mov
mov
andb
push
pop
xor
lret
pusha
test
enter
cmp
stc
fs
mov
mov
or
in
sub
pusha
fdiv
and
fistpl
pop
pop
xchg
shlb
mov
jge
aad
mov
fimuls
repz
and
ljmp
scas
mov
push
and
sbb
mov
inc
call
cmp
in
push
mov
xor
mov
in
cmp
inc
scas
xor
bnd
xchg
push
mov
lods
fsts
adcl
lret
mov
dec
decb
cmp
dec
fildll
cmp
imul
into
jmp
stc
lea
mov
xchg
pop
jle
mov
cvtps2pd
adc
jle
xadd
cmpb
fmull
jg
cld
repnz
fs
enter
adc
out
and
das
iret
cltd
movsl
arpl
out
inc
jge
pop
sbb
xchg
push
inc
addl
lret
call
ret
loopne
pop
in
sub
mov
jge
push
ficomps
jae
mov
push
arpl
xchg
xchg
inc
cmp
mov
or
lret
push
adc
push
loopne
loope
das
or
sbb
in
pop
scas
scas
and
push
xchg
pop
jle
lcall
mov
jmp
adc
loope
loop
je
ja
lock
mov
push
or
scas
mov
inc
faddl
ljmp
mov
mov
jnp
fistps
clc
in
jge
in
adc
jo
lret
jns
pop
jle
loopne
ljmp
dec
mov
test
das
dec
xlat
cmpb
in
mov
jno
iret
push
ds
or
pop
pop
iret
in
lds
sub
shll
cmp
jns
jmp
add
mov
loope
inc
outsb
add
sbb
repnz
repz
cmp
insb
xchg
add
cld
cmp
popf
inc
sub
mov
ja
dec
ja
mov
imul
lret
popf
adc
in
cmp
gs
sti
cld
sub
hlt
in
cmc
push
jnp
repnz
das
mov
jmp
xlat
adc
dec
push
push
sbb
push
stc
out
js
hlt
add
jne
jle
divl
shlb
xor
ds
imul
lret
add
xor
in
aaa
leave
add
inc
out
std
sbb
dec
ffree
adcl
xchg
in
jg
jl
cli
and
add
insl
or
mov
push
and
and
and
mov
lods
lods
mov
or
pop
jns
lea
call
jecxz
sti
jns
xchg
push
rorl
ljmp
and
in
movsb
inc
dec
dec
push
dec
mov
fimuls
fmull
loope
cmp
cld
jle
in
and
pop
imul
mov
push
sub
gs
leavew
mov
aaa
jo
mov
push
adc
mov
insl
shlb
mov
push
or
or
ret
xchg
xor
lcall
cmp
enter
jno
outsl
mov
adc
les
xor
aad
pop
mov
adc
test
inc
insb
sub
repnz
and
push
dec
cmp
jo
pop
jnp
xchg
lret
das
mov
mov
cltd
divb
and
sbbb
push
sarl
call
sub
mov
into
sub
jecxz
out
repnz
das
ljmp
in
test
jae
pop
push
lret
int
inc
mov
cmp
push
das
scas
mov
push
xchg
jo
jns
stos
push
fincstp
jns
repnz
and
inc
in
aas
clc
out
pop
sbb
fs
sti
dec
aam
jb
popf
and
add
ret
in
pop
imul
mov
pop
sti
adc
test
icebp
mov
and
jmp
jno
xor
fidivl
mov
xchg
push
pop
fildll
pop
jns
jmp
xchg
xor
in
push
mov
mov
add
negb
pop
stos
filds
pop
mov
addl
imul
stc
in
aas
mov
cmpsl
inc
notl
xchg
sbbb
or
mov
stc
in
pop
dec
std
cld
es
std
push
push
lods
jl
int3
inc
imull
repnz
cld
push
xchg
popf
test
xchg
mov
xchg
pop
jmp
cltd
adc
pushf
loope
repnz
mov
pop
je
fisttpl
outsb
mov
jne
out
outsl
dec
pop
xchg
out
and
jno
mov
in
jo
orb
lret
mov
or
arpl
mov
scas
sbb
cmp
mov
cld
repnz
lock
sub
jnp
pop
loopne
mov
push
stos
shlb
xchg
xchg
mov
dec
jmp
lret
das
scas
jge
cmp
inc
jecxz
in
and
push
popf
aad
insb
sbb
das
lcall
stc
add
adc
cmp
xor
int3
cmp
jge
lret
pop
jbe
mov
sti
and
fnstsw
pop
pop
nop
dec
cmp
test
or
aaa
in
pop
jle
xchg
and
iret
push
xchg
xchg
pop
jle
popa
dec
pusha
in
dec
inc
jno
in
shl
pushf
mov
lcall
inc
lods
imul
jecxz
repnz
das
push
lret
mov
or
push
aam
mov
das
mov
ret
ljmp
mov
xchg
cwtl
clc
scas
add
jecxz
scas
mov
cmovnp
and
or
aaa
jnp
lret
in
mov
adc
pop
inc
lret
das
mov
push
add
pop
fs
mov
xchg
sbb
add
sbb
push
ds
mov
push
ret
shrl
mov
pop
sub
inc
adc
fwait
testl
cld
repnz
das
mov
mov
movsl
sbb
in
das
mov
xchg
pop
mov
stos
ljmp
shrl
ret
outsb
fwait
aam
lret
das
mov
dec
sub
fwait
je
enter
movsb
ds
mov
in
lret
mov
or
lahf
movsb
sub
stc
stos
and
in
leave
adcl
das
dec
fwait
xor
push
xor
jo
xchg
pop
jle
jno
ss
sbb
and
stc
inc
add
pop
shr
roll
adc
push
in
arpl
xor
and
repnz
add
in
mov
loope
repnz
das
xchg
xlat
clc
mov
dec
xor
test
mov
in
nop
add
jmp
jl
cmpb
cld
ds
jns
xchg
xor
sub
sub
lret
das
loop,pt
test
mov
and
aad
cld
bnd
sbb
pushf
or
shlb
enter
xchg
jns
xchg
push
daa
lret
add
cmpsb
and
jle
or
jp
or
mov
mov
out
lods
rcrl
add
jns
jb
sbb
dec
mov
out
fdiv
lret
add
push
mov
sbb
mov
iret
shrl
in
scas
pop
sbb
jae
inc
mov
jns
xchg
push
call
jbe
lcall
push
pop
and
jg
in
cli
icebp
mov
into
and
lcall
repnz
das
incl
daa
mov
push
aas
pop
fdiv
lret
das
mov
sub
xchg
adc
repz
outsl
outsl
and
sti
arpl
jnp
mov
lret
xor
xor
fidivrl
mov
push
cmp
outsl
xchg
cwtl
mov
test
cmp
pop
jns
loopne
push
xor
scas
add
sub
push
les
arpl
stos
icebp
sub
cli
jae
pop
lods
xlat
nop
cmp
mov
and
mov
lods
jl
ja
sbb
inc
gs
stos
test
sub
sbb
xor
aas
mov
and
mov
xchg
gs
in
pushf
add
je
and
and
cmp
fisubl
mov
mov
ret
test
icebp
lds
mov
adc
in
and
adc
mov
cmc
jmp
pop
jle
dec
cltd
or
push
pop
jns
pop
mov
cmp
inc
lret
ljmp
sub
cli
call
in
push
fstpt
test
pop
sbb
fmuls
jo
xchg
xchg
xchg
mov
ss
ret
jns
lods
mov
lods
and
push
inc
mov
and
out
pop
test
mov
fists
cld
pop
icebp
fdivl
or
movsl
jg
mov
stc
stc
orl
test
pop
in
test
xchg
pop
jle
sbb
mov
cs
xorb
pop
jle
cmc
cmpsl
mov
les
fwait
push
ljmp
das
pop
imul
mov
out
jecxz
pop
js
int3
push
daa
scas
mov
dec
adc
std
bound
sub
shll
jnp
shl
xor
test
add
insb
ja
lret
push
pop
jns
data16
adc
push
popa
sbb
mov
pop
jns
xchg
cmp
pushl
pushf
sbb
addr16
and
and
xchg
jge
fcompl
in
jg
mov
addb
mov
cmp
sub
les
sub
mov
mov
inc
insl
sub
xchg
jmp
mulb
xchg
fildl
lea
into
imul
repnz
mov
sub
dec
ja
xchg
imull
inc
scas
imul
jge
push
pop
jns
rorb
int
mov
pop
jns
xchg
loopne
or
sbb
mov
lret
loop
mov
pop
jne
inc
push
xchg
push
mov
mov
jge
scas
pop
je
cmpl
sti
jns
jnp
repnz
pop
fs
jp
or
jo
insl
scas
enter
mov
fidivrl
push
mov
xchg
cld
sti
xor
push
cmpsl
inc
pop
repnz
sub
stc
mov
repnz
mov
cmp
in
pop
jbe
es
or
lock
xchg
pop
jle
popf
adc
push
sub
mov
and
imul
jl
nop
sti
add
ljmp
sub
xchg
xor
das
fwait
mov
repnz
insl
sub
add
mov
add
jecxz
sbb
cmc
hlt
xchg
xchg
push
pop
adc
cmc
jbe
sahf
jns
push
or
or
inc
nop
lahf
dec
mov
in
std
lcall
mov
xor
enter
mov
sti
ds
jge
lret
adc
push
enter
lds
in
addr16
cmp
add
xchg
pop
jge
push
scas
cmp
into
aas
push
cmp
xor
rcr
sar
enter
out
or
jns
sahf
jp
xchg
xchg
push
dec
pop
out
in
test
and
jmp
in
aad
out
clc
sub
jmp
int3
inc
jle
in
test
push
loope
fs
call
mov
lea
arpl
pop
jns
pop
daa
testb
shlb
dec
aas
mull
mov
dec
in
ret
dec
push
aas
mov
filds
cld
push
fistpll
into
xchg
or
in
jle
in
jecxz
jne
mov
sti
bound
fdivrl
cmc
or
xchg
bound
sbb
push
pop
jns
cmpsl
xorl
mov
in
daa
mov
xchg
in
aad
xchg
jg
dec
sti
sbb
stos
sbb
jle
in
xchg
sub
jp
xor
and
stos
mov
ss
mov
in
jg
je
dec
pop
adc
into
rol
stos
dec
xchg
pop
jle
sbb
mov
das
stc
xor
mov
stc
in
fs
pop
ja
test
into
ljmp
jmp
pop
jge
aam
dec
add
js
out
mov
in
sub
add
pop
popf
xor
hlt
jp
stc
jo
lock
dec
loopne
in
push
pop
popa
xor
adc
lahf
xchg
push
pop
jns
adc
or
mov
or
xchg
mov
andl
push
adc
das
mov
loop
ror
xchg
imul
repnz
std
out
lea
fiadds
mov
cld
repnz
std
pop
xchg
cwtl
subl
xchg
push
mov
hlt
xchg
das
mov
add
mov
in
pop
pop
mov
mov
cli
jae
insb
jge
test
mov
pushf
xor
lret
mov
scas
add
or
cmc
cmc
push
jmp
imul
enter
jmp
inc
stc
mov
jmp
xchg
fs
inc
stos
push
mov
dec
jno
mov
test
jnp
iret
xlat
sbb
xchg
and
add
pop
fwait
jp
hlt
pop
xchg
jmp
fs
mov
and
inc
cltd
jg
out
jg
xchg
sub
scas
adc
pop
inc
aas
sub
loope
xchg
ret
cwtl
sub
xchg
sub
jge
cmp
sbb
je
cld
repnz
and
int3
xchg
ja
fwait
cmp
xchg
sbb
or
test
mov
cmp
add
cmp
xchg
cmpsl
mov
mov
lods
add
jns
or
adc
movsl
sbb
lahf
enter
insb
xchg
test
addr16
das
push
dec
jae
mov
mov
scas
jbe
sbb
cld
repnz
jg
mov
add
enter
cmp
lret
das
test
cli
or
fisubrs
and
pop
push
in
pop
add
pop
xchg
popa
into
repnz
cmc
mov
or
xor
mov
ds
mov
test
jns
xchg
repz
daa
test
adc
jg
xchg
hlt
in
inc
mov
outsb
mov
mov
ret
jbe
pop
xchg
xchg
test
xchg
pop
lock
es
push
cld
repnz
das
roll
lods
int3
push
mov
out
outsl
xchg
in
jbe
and
roll
pop
insb
repnz
inc
pop
test
lret
inc
push
adc
add
push
fstl
mov
sti
stos
xor
int
xchg
fstpl
jp
fisttpll
shll
cwtl
outsl
sub
jg
sub
or
inc
adc
dec
loopne
xor
jecxz
addr16
pushf
sbb
jns
xchg
push
iret
into
in
and
mov
mov
jg
pop
sub
test
inc
test
jb
out
pop
jle
in
adc
jnp
out
mov
in
xchg
gs
clc
sub
xchg
testl
test
pop
or
xchg
push
pop
jns
push
cmp
ret
pop
adc
imul
jns
adc
arpl
mov
lret
lret
jae
outsl
cli
lcall
stos
dec
in
push
mov
sbb
test
pop
lahf
jl
movsl
iret
fnstenv
pop
push
scas
inc
insb
mov
pop
jns
fwait
int3
std
repz
jmp
aas
ljmp
cmpsb
ss
pop
dec
sub
insl
sbb
mov
cmc
test
in
popa
aaa
add
shl
fisubs
lods
mov
lret
das
sbbb
xchg
test
movsb
inc
out
dec
popf
imul
ljmp
fcmovne
mov
dec
jle
pop
cmc
adc
add
sbb
aas
push
mov
jge
in
pextrw
fcoms
dec
adc
sub
sub
ret
or
mov
lret
es
dec
and
cld
repnz
das
ffree
outsb
dec
adcb
add
rolb
pop
inc
out
loopne
jge
sub
arpl
mov
add
sar
scas
mov
sbb
stos
imul
adc
lret
jl
add
ret
repnz
cs
out
add
xorl
sub
jns
pushf
xor
jl
jg
repnz
in
cmpsl
mov
iret
push
mov
jle
in
cmc
insl
push
pop
shll
jmp
cmp
xchg
xor
jno
std
rol
pop
flds
inc
stc
in
ja
fs
sbb
xchg
inc
jle
roll
daa
add
xchg
pop
jle
inc
xchg
test
pop
pop
mov
add
adc
cmp
nop
and
sbb
andb
enter
lcall
jnp
sub
aad
cmp
out
add
sub
adc
scas
lods
in
jnp
jg
mov
mov
xchg
sub
pop
lds
enter
adcl
bound
and
xor
mov
push
iret
mov
ja
mov
pop
push
inc
gs
das
mov
cmp
outsb
push
xor
xchg
das
mov
pop
jl
cwtl
stos
cmp
cs
sbb
fcomp
shll
lahf
cmpsl
mov
and
sbb
imul
and
push
ds
xchg
aas
clc
enter
ja
and
shrb
cmp
in
pop
fisubrl
lcall
push
mov
mov
adc
and
js
push
incl
pop
mov
repnz
fldl
inc
movb
repnz
inc
jo
cltd
cwtd
fs
jecxz
sahf
dec
pop
mov
sahf
push
pop
repnz
out
dec
push
ret
call
mov
or
add
scas
mov
icebp
and
dec
cld
addl
mov
dec
mov
dec
ret
lock
in
and
adc
pop
out
cld
repnz
das
in
lds
cmp
mov
or
je
push
fimuls
lret
leave
and
mov
out
or
les
dec
test
repnz
and
outsb
shrl
scas
mov
movsb
cli
dec
stc
pop
push
jns
xchg
js
lahf
lea
loope
je
js,pn
and
in
sbb
cmp
outsb
scas
cmp
in
push
mov
xchg
push
es
add
xchg
push
pop
aad
xor
xor
mov
jno
loopne
cmp
lea
pop
jns
lret
add
mov
mov
cmp
cmpsb
pop
jns
xchg
cmp
mov
dec
pop
into
das
pop
jno
xchg
xchg
push
out
sbb
add
dec
lds
cmp
inc
mov
fiadds
jle
in
mov
in
mov
repnz
mov
jmp
adc
push
pop
stc
in
aas
xor
xor
das
lret
sbb
sbb
inc
jne
cmp
jo
ljmp
lret
and
mov
lods
imul
mov
cmpl
push
mov
test
popa
fwait
cmpsl
addb
stc
push
or
movsl
cmp
dec
pop
jle
in
adc
in
mov
adc
adc
enter
xor
out
into
sbb
pop
fs
xchg
pop
in
mov
xchg
mov
xchg
fistpll
adc
inc
fmulp
mov
mov
xchg
sub
cmp
dec
loope
sub
out
jmp
test
mov
stos
hlt
inc
mov
mov
test
loopne
push
fwait
cld
repnz
daa
out
add
jl
mov
sub
movsb
mov
repnz
das
mov
and
bound
push
stc
shrb
push
call
sarb
jnp
roll
cli
pushw
jns
xchg
push
cmp
aaa
fidivrl
jmp
int3
popl
movsl
cmp
mov
inc
dec
push
stc
idiv
or
jb
mov
cld
gs
pop
loopne
cwtl
cmp
in
jg
xor
xchg
ljmp
movb
xor
push
lret
push
aas
pop
jle
in
cmp
inc
scas
imul
jmp
adc
cld
repnz
xchg
add
sub
xchg
lret
das
mov
xchg
int3
fcoml
lret
das
mov
adc
imull
das
mov
cmp
pusha
mov
lcall
cld
repnz
jl
xor
cmp
jge
cmp
lret
das
push
daa
hlt
popa
icebp
and
cmpsb
inc
in
xchg
sahf
dec
jne
das
daa
inc
push
sti
lret
das
mov
lcall
jne
das
mov
ret
pop
testb
sbb
sbb
xor
jnp
mov
xchg
mov
inc
jb
or
lea
mov
jns
push
dec
adc
das
and
pop
jns
xchg
stos
push
push
loope
mov
int3
pop
inc
mov
inc
push
sbb
xor
repnz
pop
jns
xchg
ret
sbb
stos
adc
rclb
xchg
in
pop
and
xchg
fildl
mov
sbb
leave
cmpsb
in
pop
push
xor
loop
dec
aas
dec
insb
adc
jle
mov
lds
addr16
mov
xchg
add
repnz
push
lods
jmp
daa
cli
enter
lahf
push
dec
jmp
or
das
mov
mov
inc
std
bound
shrl
cld
repnz
xor
mov
cmpsl
lea
xlat
and
inc
je
adc
pop
pop
jle
addr16
lds
mulb
aad
incl
iret
sarl
mov
and
int
lcall
mov
fsts
call
pop
fistpll
pop
adc
fistps
add
shrl
xchg
pop
jle
jmp
or
dec
pushf
sbb
fisubrl
inc
cli
enter
lods
inc
jp
inc
push
scas
mov
push
jne
out
push
mov
adc
repnz
daa
dec
push
mov
inc
xor
cld
xor
jmp
das
mov
lret
mov
sub
and
das
mov
notl
outsl
sub
push
cld
repnz
push
subb
push
lds
xlat
iret
jle
in
dec
add
cwtl
add
mov
pop
cmp
sbb
dec
in
add
push
pop
jns
mov
mov
out
notb
jno
pop
cli
lods
inc
loop
sbb
jl
mov
in
outsb
sti
cli
pop
mov
xor
and
bound
lea
daa
les
outsl
add
fadds
inc
dec
insl
call
add
cs
repnz
rcr
stc
mov
test
mov
mov
jno
out
mov
adc
bnd
arpl
inc
sbb
jle
in
lret
arpl
pushf
fs
mov
lcall
push
adc
ds
lahf
adc
mov
sub
jae
fimuls
and
push
scas
in
inc
adc
and
sbb
pushl
pop
or
cmpsb
sub
loope
insl
fs
pop
jns
imul
sub
jns
mov
orb
xchg
sbb
dec
lods
cwtl
insl
pop
sbb
pop
mov
and
stos
lock
and
insb
sub
mov
cmp
xchg
push
cmp
push
add
int3
cmp
xchg
xchg
push
pop
jne
and
xor
mov
push
stos
cmpsl
fldcw
mov
cmpsb
sub
cmp
aaa
pop
jle
in
cmp
int
dec
or
cwtl
popf
lock
jle
in
jno
out
jge
or
roll
xchg
pop
out
fcoml
lds
mov
std
imul
mov
sti
subb
inc
mov
xchg
adc
xor
jle
in
sub
popl
movsl
ljmp
push
test
sbb
cmc
aaa
sbb
in
add
cmp
and
and
dec
imul
lds
push
add
das
decl
arpl
fistpll
adc
mov
dec
sbb
adc
repnz
mov
jecxz
cltd
jmp
and
data16
out
insl
cmp
imul
lret
test
pop
mov
fmulp
adc
rolb
and
repnz
lret
leave
cmc
push
push
adc
incl
les
movsb
stc
repnz
and
lea
jne
xchg
jg
xchg
fadd
test
lcall
stc
je
int3
pop
dec
int
jmp
adc
cld
repnz
in
push
cmpsb
stos
aas
xchg
cld
lahf
push
inc
aas
and
cmp
xchg
ja
push
hlt
cmpsl
jno
push
dec
gs
mov
jge
dec
inc
in
loope
mov
push
cli
cmp
movsb
mov
and
enter
imul
or
lret
push
test
xchg
mov
xor
sti
mov
and
test
lret
and
push
adcl
xor
cmp
sarb
pop
insb
popf
mov
xchg
in
test
adc
fmul
sub
icebp
outsl
ljmp
lods
mov
sahf
push
mov
fwait
out
inc
adcb
inc
das
and
js
scas
adc
inc
jmp
pop
add
inc
dec
fidivs
imul
pop
cld
leave
int3
sub
jp
jns
or
push
scas
mov
test
loop
in
push
xor
cmpsl
sub
in
jmp
xchg
push
pop
mov
jbe
pop
popa
pop
pushf
mov
lods
imul
adc
vpcomuq
loopne
push
jne
std
push
xchg
stc
in
daa
sub
cli
sub
xor
xchg
xor
cmp
repnz
dec
add
sahf
xor
adc
xor
pop
iret
and
addr16
push
pop
jns
filds
inc
js
and
lods
mov
movl
cli
push
loopne
ret
shl
lret
jo
lods
leave
es
adc
xchg
loopne
cmpsl
sarl
xchg
cltd
inc
ret
push
dec
push
adc
push
jns
xchg
push
in
aam
mov
dec
shrl
mov
in
push
pop
nop
bound
pop
sahf
js
stos
push
fisttpl
push
cmp
lock
xchg
and
xchg
push
ficoms
sbbl
aas
push
out
jle
pop
jns
mov
lahf
and
fcompp
mov
cmp
jnp
clc
dec
mov
clc
mov
and
push
jbe
or
adc
std
in
xor
xor
loop
sbb
out
push
or
incb
in
dec
ljmp
fs
push
pop
mov
and
pop
mov
push
jmp
adc
mov
add
mov
xor
loope
mov
mov
xchg
mov
mov
pop
nop
mov
out
mov
jb
je
das
mov
push
fstpl
lods
dec
and
mov
xchg
das
insl
xchg
jno
jmp
in
mov
sub
add
fists
sub
xchg
inc
lcall
pop
repnz
xchg
add
xor
cmp
mov
xchg
sub
pop
scas
mov
movsb
sar
adc
repnz
add
inc
pop
cmpsb
dec
pop
jns
mov
mov
sbb
dec
das
into
and
in
enter
push
and
scas
inc
mov
popf
add
dec
lahf
mov
dec
jge
sub
cmp
jl
adc
mov
test
mov
pop
and
scas
sahf
sub
ljmp
shll
push
pop
jns
sbb
jg
sahf
mov
in
push
jge
cmc
movsl
cld
mov
shlb
sahf
imul
xlat
jge
inc
and
insl
ljmp
xchg
outsb
aad
adc
dec
lcall
xor
or
jo
push
rcrl
daa
pop
jns
xchg
cld
cmp
mov
imulb
and
xchg
push
dec
xor
jle
popa
ja,pn
outsl
xor
inc
inc
pop
mov
xchg
sti
outsb
call
in
push
fidivl
jg
dec
in
xchg
jg
pop
and
mov
inc
sbb
jns
cld
repnz
jo
fidivrl
in
repnz
or
lahf
stc
notl
mulb
dec
pop
js
inc
inc
in
pop
jle
pop
xor
or
xlat
xchg
pop
jle
push
dec
jmp
mov
pop
xchg
lcall
stc
in
jb
jge
xchg
mov
sub
xlat
outsb
sub
enter
iret
cmc
mov
lcall
lds
xlat
fcomps
and
push
add
outsb
ljmp
pop
mov
inc
rcr
scas
cwtl
mov
fimuls
fs
push
cmp
test
xchg
cli
sahf
xchg
lock
sub
das
jb
repnz
lret
mov
mov
inc
getsec
mov
repnz
das
leave
inc
iret
inc
sub
inc
jl
lods
mov
pop
inc
outsl
mov
adc
lret
std
in
dec
fmuls
add
cs
jbe
pop
xor
idivb
popa
push
mov
aas
mov
pop
pop
jne
sbb
lret
das
shlb
nop
movb
hlt
xchg
das
mov
scas
mov
aas
xor
mov
enter
push
shr
scas
mov
test
test
jge
pop
decb
inc
fadd
imul
stos
test
xchg
bound
mov
lahf
jle
in
stc
dec
fistpl
rol
rcrb
stc
in
pop
addr16
pop
mov
ret
or
in
and
cmp
cwtl
imul
icebp
bound
xchg
pop
jle
sti
jno
sahf
shrl
xor
or
ss
jle
in
repnz
xchg
mov
stc
in
int
out
push
out
xchg
subb
jbe
repnz
push
or
push
xchg
jge
test
lret
ljmp
cmp
leave
inc
pusha
das
decl
popa
subb
popa
jmp
inc
mov
subl
int3
mov
das
cmp
mov
sub
mov
pop
and
mov
dec
dec
dec
jge
das
lcall
stc
push
js
les
cmp
sbb
jne
xchg
leave
int3
repnz
mov
dec
stc
rcll
in
idivw
fsts
aam
push
pop
jns
xchg
mov
icebp
dec
sub
push
dec
pop
in
xchg
push
scas
xchg
scas
pop
jo
xlat
test
jle
cmc
mov
push
movsl
cmp
mov
jp
int
jl
in
or
jecxz
jmp
cmp
mov
lods
daa
dec
dec
addr16
jle
test
mov
les
mov
pop
lods
xchg
das
mov
sbb
sahf
mov
daa
push
or
int3
and
sub
loope
xlat
inc
pop
pop
fcmovnbe
cli
enter
xchg
in
rcrl
push
sti
enter
outsb
xchg
insl
lds
add
rorl
sub
inc
cmp
and
or
jns
loop
pop
sub
mov
cmc
in
push
pop
xchg
push
lea
mov
mov
sub
cmpsb
pop
or
cmp
bound
rorl
ljmp
outsb
dec
jg
in
pop
xchg
jmp
ds
xchg
pop
jle
jecxz
inc
mov
aaa
int
pop
jle
std
pop
push
xor
xor
sarl
add
xchg
das
mov
das
fs
out
fidivrs
int
push
aaa
dec
jmp
push
gs
inc
mov
test
dec
sub
xor
jae
ret
jnp
jns
jmp
cmpsl
pop
leave
xchg
or
inc
push
pop
dec
xchg
insb
bound
mov
repnz
mov
mov
push
cmp
leave
orb
imul
and
repnz
ss
sub
mov
imul
scas
mov
adc
add
mov
mov
jae
inc
testl
repnz
mov
cmp
jge
pop
inc
aad
mov
push
fldl
xchg
sub
data16
in
pop
mov
lahf
xchg
cmp
pop
jle
ret
pop
adc
mov
mov
mov
sbb
scas
mov
mov
and
imul
jae
add
inc
sahf
jge
inc
jle
enter
ss
nop
mov
pop
stc
repnz
jae
fnstcw
aas
sbb
add
in
jg
inc
mov
sarl
in
pop
jle
das
leave
repnz
xorl
cmpsb
ds
enter
inc
std
fwait
in
or
in
mov
popf
sahf
adc
repz
dec
cmpsb
jecxz
in
push
mov
aam
leave
cmp
jl
and
mov
push
xchg
push
lcall
stc
in
js
lea
mov
movl
inc
mov
jg
jle
test
repnz
das
mov
aas
xor
repz
xchg
shll
mov
push
loop
or
cmp
mov
mov
ljmp
sbb
daa
sbb
sub
insb
lret
lret
add
xchg
pop
xor
xlat
jb
mov
ror
scas
mov
movsl
inc
fidivs
and
cmp
sti
and
sbb
cmp
lret
mov
scas
jnp
xor
and
aas
push
jecxz
scas
ss
sarb
adc
cltd
sahf
sarl
addr16
loope
inc
movups
adc
insb
push
loope,pn
stc
sti
fs
fnstsw
push
dec
mov
and
push
sbb
outsb
loop
aaa
xchg
stc
repnz
mov
push
mov
inc
out
mov
int3
mov
cld
inc
jns
lods
add
loope
addb
jmp
pop
cmp
xorb
ficoml
ret
sbb
loopne
testl
mov
ja
pop
ds
in
cmp
fs
loope
push
cmp
repnz
cld
in
mov
das
pop
decb
out
push
ljmp
icebp
stc
pop
imulb
cmp
lret
jb
arpl
jge
in
push
fimuls
outsl
sti
or
lods
mov
mov
daa
popa
mov
lret
xchg
cli
ror
lret
mov
in
cmp
popf
hlt
sbb
lret
push
loope
shrb
mov
push
push
xor
mov
movsb
and
jg
sbb
sub
int3
insl
xor
xlat
shlb
repnz
enter
cmp
xchg
mov
das
mov
dec
lods
xchg
mov
shrl
das
xchg
into
push
mov
lahf
rcr
mov
repnz
push
fsubp
sbb
and
add
or
sub
lods
mov
loope
enter
pop
addr16
inc
sarb
inc
pop
mov
repnz
jp
pop
scas
mov
repz
rolb
repnz
das
adcb
ret
mov
jp
ficoms
mov
stc
inc
inc
xchg
ja
xchg
push
pop
gs
xchg
inc
sbb
stc
xlat
xor
das
push
enter
imul
out
in
pop
jle
pop
cld
pop
js
mov
mov
or
add
test
test
pop
fcoml
cs
es
sahf
dec
sub
ficoms
pop
mov
adc
pop
jle
in
sub
int3
jbe
lea
subb
mov
das
dec
insl
stc
push
clc
fimuls
leave
cmp
lret
clc
js
add
in
push
fisubrs
mov
enter
inc
cmp
sahf
jge
cmpsl
jp
rep
xlat
jmp
pop
jge
jecxz
pop
inc
data16
push
loop
inc
repnz
lahf
cld
add
nop
xchg
iret
sahf
idiv
adc
cld
int
fcompl
and
lret
jl
repnz
les
lods
or
mov
sub
arpl
xchg
mov
enter
sub
daa
mov
in
aaa
xchg
mov
aad
adc
js
cmp
lret
jge
push
push
push
pop
jns
jmp
loop
lahf
jae
and
xchg
push
popf
xchg
pop
jns
xchg
jo
xlat
ret
lock
sub
add
push
push
das
dec
mov
aaa
in
push
test
or
xchg
push
pop
sti
dec
andl
mov
jns
arpl
sub
and
pop
repnz
and
stos
mov
push
push
xlat
negb
sub
pop
stc
mov
xchg
cmp
mov
adc
push
jp
aaa
in
aaa
xchg
jno
inc
imul
lea
jb
dec
sti
into
mov
sbb
pop
jns
mov
jg
xchg
pushf
and
pop
jns
xchg
and
xorb
and
out
popf
aam
das
lcall
cwtl
flds
pop
inc
out
insb
jl
ja
jle
call
cmp
sub
jl
mov
and
sub
add
xchg
mov
dec
mov
mov
jnp
rorl
addb
idivb
out
stc
enter
fabs
mov
sub
or
cmp
mov
jnp
or
stc
ja
test
sarl
jge
pop
in
aaa
push
in
mov
andl
pop
jns
push
das
dec
jg
insb
cmp
insl
inc
jl
in
push
stos
icebp
dec
cmp
iret
aad
aaa
push
into
ja
outsl
shrl
scas
nop
push
pop
jns
pop
popa
hlt
pop
addr16
lock
inc
gs
jb
xchg
and
push
js
push
sti
in
inc
pop
in
pop
jge
sar
les
mov
xchg
pop
jle
pop
ret
sbb
popf
sub
pop
jle
in
xor
test
jbe
icebp
push
xor
shr
xchg
arpl
cld
ja
enter
or
inc
mov
adc
push
fmulp
flds
test
push
pop
jns
and
mov
rcrb
pop
jns
xchg
mov
dec
gs
lahf
mov
push
sbb
stc
jbe
mov
sub
push
mov
mov
push
stc
cmp
lret
mov
pop
fisubs
pop
out
cmp
jge
dec
mov
call
enter
stos
ret
cli
adc
xor
and
cmpsl
inc
jl
faddp
cmp
cmp
dec
xchg
xchg
push
or
sbb
jmp
es
sti
dec
mov
ss
jle
in
inc
dec
pop
call
mov
mov
out
and
xchg
ror
xor
jmp
add
test
pop
jle
push
and
je
mov
add
sub
into
ds
scas
imul
jbe
lds
repnz
mov
jns
jmp
aas
repnz
adcb
add
xchg
jge
arpl
sub
jl
in
sbb
imul
imull
pop
xchg
es
lods
xor
mov
loop
mov
mov
xchg
mov
or
jae
jne
in
arpl
out
mov
mov
dec
cmc
shrb
inc
jge
faddp
mov
sti
scas
mov
ret
enter
jecxz
sub
icebp
loop
xchg
xor
mov
cld
sti
fwait
xchg
negl
xor
mov
testl
xchg
movsb
incl
int3
shrl
das
shlb
imul
sub
ret
jno
mov
or
adc
sbb
repnz
pop
jmp
mov
sahf
xlat
shlb
cld
pop
pop
pushf
mov
adc
scas
mov
mov
pop
xchg
loop
or
stos
jp
repnz
jo
lock
lea
repnz
enter
xor
pop
jns
fidivs
enter
cs
pop
mov
sbb
jp
jge
jns
loop
enter
mov
adc
aas
inc
jns
xchg
push
add
mov
es
js
xchg
push
pop
push
jle
cld
movsb
cld
sbb
mov
push
pop
jns
xor
aam
sbb
mov
and
mov
push
or
inc
mov
mov
and
mov
std
mov
out
jp
xlat
push
inc
jle
in
adc
mov
jmp
or
cld
jnp
xchg
lahf
or
stc
insl
dec
pushf
fbstp
repnz
das
mov
xchg
ljmp
add
mov
xor
and
ljmp
test
push
stc
in
daa
mov
mov
mov
loopne
pop
jle
fsub
and
mov
mov
jns
in
cmp
add
or
pop
jns
xchg
test
sbb
inc
lds
fs
push
mov
mov
dec
mov
jl
adc
sbb
daa
ds
hlt
repnz
cmp
mov
int3
inc
lret
mov
mov
fwait
out
adc
fiadds
clc
enter
xchg
nop
aas
orl
icebp
push
repz
ljmp
divl
cmp
das
mov
insl
xor
or
xchg
out
mov
lret
mov
stos
jbe
div
cld
repnz
das
clc
pop
scas
mov
aad
push
jl
lret
das
mov
xchg
or
cs
mov
das
mov
xorb
jl
das
mov
push
mov
pop
fwait
outsl
das
and
cld
repnz
push
or
ds
sbb
and
mov
std
mov
test
mov
jle
in
in
mov
and
sahf
or
fadds
pop
lods
push
cs
in
pop
jle
mov
ss
icebp
lret
sub
cmpsb
ds
xchg
jg
or
scas
lahf
movsb
out
es
sub
aad
iret
mov
xchg
mov
push
faddl
aaa
xor
js
push
cld
repnz
mov
inc
push
jno
and
sarb
cltd
pushf
adc
repnz
das
mov
js
lds
lret
das
mov
call
xchg
cwtl
in
lea
mov
mov
sbb
mov
jg
cmp
jmp
aas
popa
enterw
movsl
mov
pop
cwtl
scas
jl
repz
sar
pop
mov
sbb
int
xor
call
xchg
sbb
addr16
cld
add
dec
cmp
pop
jns
xchg
call
out
loope
ljmp
mov
lods
inc
testl
xor
cmp
inc
scas
push
mov
test
stc
in
fisubs
std
pop
test
push
mov
notl
repz
mov
push
loopne
sti
sbb
pop
add
add
xchg
mov
push
leave
lahf
add
push
xchg
jle
mov
cmp
enter
daa
movsb
mov
and
js
sti
loop
mov
lret
and
mov
pop
mov
ds
sub
lock
movsl
push
push
popf
cmpsl
or
scas
mov
inc
sub
roll
lea
rcrb
scas
mov
jnp
jno
adc
aaa
xchg
push
in
and
repnz
cmpl
or
mov
cmp
jb
sbb
mov
xor
stc
testl
sub
fiaddl
rclb
sub
mov
xchg
pop
nop
adc
mov
mov
push
les
push
into
scas
shlb
push
push
sub
ss
push
fs
jns
push
mov
fnstcw
cs
pop
test
inc
shl
ja
imul
test
xchg
push
pop
jns
xorl
add
mov
add
ret
or
scas
call
xchg
push
xchg
inc
icebp
pop
xorb
aaa
jmp
mov
pop
dec
and
stc
rorb
insb
in
out
mov
fistps
sub
dec
and
lcall
scas
mov
sub
or
push
adc
xchg
cmp
jns
add
fs
daa
out
aas
pop
or
lds
js
cld
repnz
jecxz
shll
lods
dec
inc
clc
and
push
rolb
aam
fldenv
adc
cmp
or
test
inc
sub
or
cmp
pop
aad
mov
jmp
shrl
in
or
cmp
aaa
nop
out
movsb
arpl
pop
jns
xchg
ret
push
stc
cmp
lods
outsl
sub
hlt
xchg
inc
ret
mov
hlt
jae
popf
rclb
pop
ljmp
jb
stc
dec
testb
xchg
jp
dec
lret
mov
sarl
pop
mov
cmp
scas
mov
movsb
outsl
mov
mov
or
in
and
sbb
daa
and
jns
xchg
push
outsl
dec
loop
xchg
wbinvd
jecxz
fimuls
push
pop
mov
ss
add
pop
aaa
mov
test
push
loop
cwtl
lods
je
cld
repnz
das
out
jnp
pop
fsubrp
or
test
xchg
jg
inc
sub
adc
es
add
push
or
mull
repnz
cmp
push
mov
enter
outsl
mov
inc
mov
jl
jne
mov
push
and
mov
test
cs
jg
push
mov
adc
dec
mov
js
test
int3
cmpsb
sahf
nop
sub
in
insl
lock
movb
jmp
push
mov
enter
jae
cwtl
scas
mov
dec
imul
jo
movsl
jno
fwait
push
jb
repnz
push
lahf
sbb
sbb
mov
sub
ds
jno
and
inc
pusha
mov
call
fstpl
cmc
cmpb
sub
test
xchg
stc
jmp
subb
jns
nop
js
lods
daa
pop
mov
mov
arpl
jo
repnz
xchg
sbb
enter
divl
mov
and
pop
jns
xchg
adc
ret
jae
adc
xor
nop
icebp
enter
add
lret
scas
add
mov
and
test
inc
mov
pop
outsl
cld
cmp
lret
xchg
enter
inc
inc
fstl
shl
das
mov
clc
cmp
dec
mov
mov
mov
or
lahf
jae
int3
xor
xor
mov
repnz
sti
xor
fmull
adc
add
sbb
xchg
push
cltd
sub
and
mov
popf
pop
insb
push
or
aas
cmp
mov
dec
pop
mov
pop
imul
push
mov
ljmp
jae
pop
pop
inc
inc
pop
mov
in
movsl
mov
xor
test
add
xchg
push
pop
movsl
push
add
xchg
fistpl
push
pop
jns
and
inc
dec
rcl
mov
pop
push
pop
jns
fbstp
test
cmp
fisttpll
inc
add
in
adc
dec
outsb
repnz
out
mov
push
repnz
fbstp
enter
ret
insb
xchg
jg
pop
cmp
fwait
and
dec
test
stc
in
mull
add
cmp
incl
jl
in
popf
cmp
xor
fisubrl
repnz
mov
dec
adc
int
xchg
lret
das
mov
or
orl
das
mov
imul
adc
dec
pop
mov
lret
adc
out
dec
jp
ret
out
test
loop
repnz
das
scas
call
das
jo
push
arpl
imul
xlat
push
push
fidivrs
repnz
pop
cmp
pop
mov
add
sub
repnz
cmp
add
mov
push
xchg
mov
mov
jl
ret
sahf
xchg
popf
cmc
enter
shrb
pop
jle
testl
lretw
sahf
rcrl
cmpl
cmpb
les
in
inc
lcall
in
push
dec
add
cmc
mov
pop
in
ja
sub
pop
imul
cld
push
das
xchg
push
pop
jns
xchg
mov
add
jnp
pop
sub
pop
jns
jo
and
js
cmp
stos
jle
xor
xchg
pop
jns
xchg
mov
das
shll
hlt
test
js
jbe
les
inc
nop
in
push
pop
xor
sub
pop
and
out
jne
fidivrl
pop
jns
inc
inc
and
inc
popa
sbb
jge
js
cld
sti
enter
testb
add
pop
repnz
das
mov
rcr
inc
pop
sahf
adc
stc
cmp
lock
and
lret
mov
mov
js
outsl
xor
mov
loop
cmpsb
adcl
cmp
mov
dec
lds
push
movd
notl
leave
and
push
ret
fdivl
arpl
jb
in
pop
and
pusha
das
loopne
shrb
xchg
pop
jle
dec
cltd
dec
push
scas
fistpll
inc
push
pop
jns
mov
push
je
pop
mov
in
inc
movl
xchg
mov
or
push
roll
sahf
pop
jns
push
repnz
stc
adc
addr16
mov
mov
or
xchg
push
fimuls
fsubrl
cs
adc
push
pop
jns
lret
loope
xor
jp,pt
add
in
test
xchg
xchg
push
pop
jns
ret
push
adc
mov
xor
jns
sbbl
test
fsub
in
mov
fs
das
push
sub
dec
or
cmc
mov
jge
push
or
repnz
mov
jle
mov
adc
imul
jle
in
imul
adc
pop
push
lds
stos
jle
in
or
jge
stos
filds
dec
test
in
pop
push
mov
rcrb
jl
xchg
lahf
add
jle
in
adc
jle
cmp
sbb
xchg
sbb
imul
pop
out
jg
cmpsl
popf
std
in
outsl
nop
dec
mov
xchg
lret
xor
cs
in
pop
fists
ljmp
jge
insb
movsl
inc
jle
cli
xor
push
xlat
ss
xchg
cwtl
into
shlb
aam
or
mov
jmp
aad
lret
sub
sbbb
cld
sti
enter
push
cmp
pop
pop
xor
inc
mov
lret
das
mov
daa
jb
xor
inc
mov
lahf
repnz
xchg
adc
outsl
rorb
and
call
cmp
cmpl
lock
mov
lret
mov
mov
dec
sbb
push
mov
pop
mov
stc
xchg
jp
add
leave
lret
jno
xchg
adc
inc
pop
jle
divl
lods
sti
mov
sub
push
stos
mov
testl
xchg
pop
jle
cmp
add
gs
rcrl
pop
xchg
pop
data16
and
push
push
imul
mov
cmp
sbb
inc
imul
sbb
inc
pop
xor
jle
mov
xchg
and
cmp
pop
jle
cli
jle
in
lock
in
xchg
sbbl
or
mov
test
dec
mov
cmp
mov
adc
pop
bswap
das
fidivl
cmpsl
aad
push
mov
repnz
dec
pop
jle
mov
mov
push
xor
mov
cmp
pusha
mov
rcl
das
add
stc
notl
insb
js
inc
imul
mov
mov
or
lret
gs
dec
cmp
outsl
mov
and
lcall
dec
popa
sbb
fistl
or
and
repnz
fwait
pop
jnp
pop
adc
mov
repnz
jnp
fwait
pop
pusha
stos
into
or
shlb
jl
cmp
in
or
jne
add
cmpsl
add
xchg
pop
jle
add
ret
mov
cmpsb
push
stc
in
push
rcll
xor
ljmp
xor
jecxz
outsb
add
or
push
mov
int3
insb
int3
sbb
lods
push
or
xorb
push
sti
icebp
cltd
or
and
push
and
inc
add
shll
add
jl
rcrb
mov
dec
in
mov
fmul
into
sub
cmp
xor
fcoms
lds
sub
mov
cmp
out
popf
sbb
mov
sbb
mov
inc
les
cmp
jns
les
loope
loope
cld
and
out
push
repnz
ja
mov
mov
push
std
jecxz
ret
cmp
sub
mov
test
add
in
in
cmp
sbb
out
sahf
xchg
xchg
xchg
push
lret
repz
sub
mov
dec
in
push
pop
push
lret
inc
inc
mov
xchg
push
pop
jns
clc
outsl
in
loopne
lods
dec
sub
sbb
mov
mov
enter
ljmp
mov
pop
inc
jmp
mov
dec
test
xchg
sub
mov
mov
call
fnsave
out
push
pop
fsubr
and
jo
jmp
add
imul
cli
cmc
jb
inc
mov
xchg
add
inc
xchg
sbb
pop
lret
ja
push
mov
scas
mov
lea
dec
mov
pop
shlb
push
scas
mov
test
neg
xor
mov
ret
lret
std
jbe
call
lods
xchg
mull
pop
imul
repnz
ret
xchg
rclb
mov
lcall
fcom
arpl
sub
in
fnstcw
xchg
mov
sub
xor
das
jg
fsubs
popf
add
jo
das
mov
cmp
mov
and
cld
repnz
out
mov
inc
stos
inc
jbe
ljmp
dec
cmp
inc
les
push
fisttpl
shll
out
dec
ret
lahf
notl
loope
iret
jmp
mov
xchg
pop
jle
adc
popf
push
outsl
push
inc
xor
pop
pop
jle
in
xchg
mov
les
mov
stc
in
sub
sbb
push
mov
fdivrl
adc
and
mov
ja
enter
xor
jg
stc
repnz
jno
jbe
lret
cmpsl
mov
jl
stc
sti
enter
xor
mov
hlt
and
adc
test
jo
sub
inc
adc
popa
lret
push
inc
push
sub
dec
push
cmp
cmp
adc
mov
and
add
push
in
mov
mov
test
gs
sub
add
lret
out
test
cld
shrb
or
mov
es
cli
mov
adc
pop
sub
sub
push
xchg
pop
js
loop
jg
repnz
cld
ret
jo
test
xchg
mov
add
push
cmp
imul
xchg
jmp
add
pusha
dec
jns
in
pop
mov
xchg
jl
sarl
inc
testb
movsl
std
out
movsl
sub
mov
outsb
jmp
cmp
add
mov
fisubl
cmp
das
mov
pop
push
lods
pop
xor
das
mov
inc
imul
mov
repnz
aad
insl
jecxz
inc
and
cmp
sahf
cld
repnz
nop
es
and
push
clc
mov
mov
dec
xor
bound
ja
popf
stos
dec
in
inc
cmpsl
neg
das
into
test
repnz
das
lods
add
filds
gs
pop
sub
inc
inc
repnz
das
mov
and
fdivrl
das
mov
loop
ljmp
das
mov
das
sbb
mov
jmp
out
lret
pop
insb
dec
test
aad
jl
fs
adc
clc
pop
jl
ficoms
jns
in
lds
add
pop
push
pop
jns
xchg
fsubr
pop
add
jns
lahf
int
hlt
enter
xor
divl
mov
xchg
xor
pushf
es
jb
jnp
daa
scas
call
cmpsl
inc
lds
sub
lret
or
mov
pop
jl
dec
push
mov
data16
imul
xchg
xchg
mov
jecxz
or
pop
dec
or
dec
and
xor
insb
push
jl
mov
sbb
sbb
lods
call
xor
jb
repnz
pop
lock
jl
mov
dec
mov
push
data16
jg
push
imul
fwait
push
sbb
xchg
fidivl
sub
lods
addl
lret
mov
js
or
sub
jbe
pop
stc
ds
dec
inc
outsl
mov
lret
xchg
push
mov
addb
mov
inc
lds
xor
mov
xlat
fs
das
mov
mov
inc
es
and
shl
das
mov
adc
push
lods
xchg
sub
outsl
mov
cld
repnz
pop
cmp
loope
xchg
ja
inc
cld
repnz
das
fmul
pusha
iret
dec
fsubs
out
mov
mov
dec
mov
adc
out
inc
jge
movl
dec
int
es
mov
popf
mov
inc
call
fdiv
lret
das
decl
cmp
xchg
icebp
jecxz
lock
lret
das
mov
das
int3
lods
xor
and
mov
sahf
jnp
insl
mov
and
push
into
and
repnz
aaa
xchg
fmul
push
negb
movsb
fucomp
xchg
sub
sub
mov
add
xor
cmpsl
loop
xor
push
fwait
inc
and
jo
jns
xchg
push
imul
call
std
adc
repnz
pop
pop
bound
stos
insb
add
ljmp
sti
or
xchg
leave
push
inc
or
sbb
push
and
out
push
or
lret
inc
mov
or
xchg
mov
stc
push
mov
sbb
lret
das
mov
jle
call
xchg
gs
mov
mov
lods
adc
and
in
ret
aam
or
and
jns
rcrb
nop
ficomps
gs
cmp
jbe
mov
mov
arpl
out
repnz
repz
inc
sub
mov
mov
out
and
addr16
xchg
outsb
mov
in
cmp
jp
fbstp
mov
jmp
mov
push
fiadds
icebp
sbb
aas
jne
and
sub
es
xor
enter
outsl
insl
jle
cli
mov
jb
inc
jb
xchg
lret
mov
bound
es
scas
mov
lds
and
mov
in
psrld
adc
sti
inc
sbb
lret
loop
mov
sahf
or
repnz
js
test
xor
mov
mov
lret
mov
sub
daa
xorl
movsb
dec
cmpsl
into
adc
lcall
int3
mov
jg
fistpll
pop
jg
popf
aam
scas
push
and
stc
negl
dec
jecxz
and
mov
fisubrl
dec
push
jle
in
outsl
sbb
cmp
movsl
enter
xchg
pop
into
fstpt
xchg
into
add
xchg
push
ficomps
popf
or
cwtl
inc
pop
jns
sub
les
dec
mov
mov
repnz
cltd
loope
out
in
add
and
sub
and
loop
mov
sbb
outsl
loop
mov
sub
enter
out
mov
rcrb
cld
repnz
out
jmp
inc
ljmp
stc
in
and
lahf
les
jne
sbb
out
out
test
jl
sub
mov
jle
fbld
repnz
pop
mov
in
xchg
push
fxtract
mov
sub
test
into
inc
das
mov
push
jge
mov
xchg
inc
gs
inc
out
or
test
mov
pop
mov
hlt
stc
in
pop
sbb
jb
xlat
xchg
push
test
xchg
pop
jle
xchg
pop
cwtl
sub
jns
out
jmp
ds
pop
jle
pop
xor
cmp
sub
pop
fbld
gs
and
stc
in
xchg
jl
pop
imul
lock
ljmp
cmc
adc
mov
cmpsl
jecxz
das
pushl
dec
sbb
mov
cmp
nop
js
out
sub
lret
cmp
fs
jno
jns
xchg
pop
xlat
out
out
ret
arpl
inc
ss
dec
mov
cmp
mov
xchg
mov
stc
in
fs
js
js
aaa
or
cmp
int3
mov
xchg
fwait
push
mov
mov
xchg
push
fimuls
mov
mov
jbe
mov
pop
jns
cltd
push
int
std
lret
ss
push
inc
pop
jns
inc
rol
insb
xor
das
adc
sub
loope
loop
jg
xchg
in
mov
mov
dec
cwtl
mov
lcall
sarb
les
rcll
ja
push
xor
sbb
sub
xchg
xchg
int3
pop
pop
mov
iret
sahf
sbb
ret
sti
sti
jne
xchg
lds
lret
mov
and
push
mov
cmp
and
lret
das
mov
jecxz
and
xchg
push
dec
rolb
cld
ret
aam
stos
pop
shll
scas
mov
pop
fs
sub
dec
xor
xchg
fxtract
xchg
mov
mov
jg
mov
mov
xchg
enter
arpl
mov
xchg
js
push
or
mov
jmp
popf
inc
pop
dec
mov
jns
popf
sub
jns
cmp
jecxz
ds
out
add
xor
fcomps
push
xchg
adc
scas
popf
aas
mov
dec
mov
sbb
cld
repnz
das
in
cmpsl
mov
cmp
xor
out
sbbb
out
outsb
mov
and
cmp
lret
and
cmp
push
fnstenv
and
adc
pop
inc
out
push
pop
das
rcr
pop
cmc
adc
jne
xchg
cmp
add
leave
inc
jecxz
stc
adc
ss
xor
sti
jb
xor
in
jg
sub
dec
jmp
and
cmp
in
pop
jle
out
int
xor
ds
add
ljmp
test
pop
ja
data16
nop
sbb
imul
and
adc
dec
gs
mov
lsl
mov
or
movsb
aam
jg
xchg
inc
pop
push
pop
rcrb
or
jecxz
mov
ficompl
std
rcrb
sahf
adc
mov
xchg
imull
pusha
jno
inc
add
pop
hlt
insb
std
iret
in
push
pop
pop
outsb
mov
pop
pop
stos
sbb
inc
pop
jns
or
rcrb
out
mov
lds
xor
xchg
push
bound
jns
enter
stc
in
pop
pushf
xlat
adc
mov
pusha
cmpsl
repnz
pop
loope
pop
jle
or
jmp
stc
xchg
pop
jns
sbb
xor
mov
test
sbb
int3
push
lock
pop
jns
adc
push
clc
addr16
outsl
jp
stos
mov
jns
xchg
movsl
outsb
int
pop
repz
pop
cwtl
jbe
jns
xchg
push
dec
push
imul
in
push
pop
insl
filds
add
test
cld
xchg
push
pop
jns
mov
mov
jb
mov
loope
rol
sbbb
mov
xchg
pop
out
push
mov
jecxz
dec
and
enter
in
pop
inc
inc
pop
xchg
lea
decl
jbe
xchg
sbb
xchg
ret
out
aaa
pop
adc
loopne
jns
fldt
sub
aam
in
push
popf
mov
movsl
jmp
and
dec
jmp
mov
loop
shl
into
cli
dec
iret
jo
scas
outsl
or
sub
jl
cli
jae
jg
aam
sub
mov
loope
jns
or
cld
repnz
enter
and
xor
dec
repnz
das
mov
dec
xor
test
ret
pop
mov
or
sub
repnz
jnp
int
dec
add
mov
or
test
gs
dec
or
mov
pop
lds
xor
outsb
xchg
push
cld
sti
enter
dec
mov
cmpb
rcl
lret
das
mov
rol
xchg
hlt
push
lret
das
mov
jge
adc
int3
pop
cwtl
add
mov
inc
lahf
jbe
repnz
cltd
shr
push
jns
cld
repnz
test
jne
xor
pop
push
sbb
lret
add
fisubrl
ret
das
lcall
mov
movsb
dec
clc
mov
jle
test
not
xor
pop
popf
mov
sbb
insl
in
adc
push
pop
jns
jbe
push
mov
aam
in
push
pop
jns
or
bound
cmp
cmpsl
xchg
jbe
pop
out
cmp
lret
xchg
push
in
mov
das
mov
pop
inc
pusha
pusha
insl
aam
jmp
leave
das
push
dec
mov
cmpsb
add
jo
sub
and
push
pop
inc
gs
add
pop
popf
sub
mov
xchg
mov
jmp
inc
add
mov
cld
repnz
mov
jmp
shll
ja
inc
insb
sbb
fs
ja
int3
and
test
fistpl
mov
pop
jns
xchg
int
scas
mov
push
pop
inc
push
sub
pop
inc
scas
mov
ja
push
loope
cs
push
sbbb
jb,pn
adc
xchg
divl
jo
das
clc
xchg
imul
enter
mov
mov
pop
pop
or
jge
dec
mov
clc
sub
mov
and
iret
scas
mov
int3
mov
mov
std
imul
pop
dec
in
bound
cld
jp
movsb
xor
push
aas
test
or
je
push
mov
shlb
push
gs
inc
loopne
stc
in
dec
mov
mov
jnp
stc
in
pop
push
inc
xchg
rol
xor
push
mov
jle
sub
icebp
rcrb
inc
mov
out
in
xchg
xchg
push
fdivp
jne
sub
gs
pop
jle
neg
inc
add
pop
in
inc
loope
in
inc
jg
shll
mov
fimuls
and
mov
pop
mov
loope
das
js
popa
or
in
xchg
scas
das
or
repnz
sub
mov
int
outsl
mov
lret
pop
mov
jae
fists
lret
push
dec
push
fwait
sub
cmp
fstps
imul
or
pusha
cmp
bound
out
ljmp
push
sahf
jmp
dec
repz
pop
push
inc
push
ret
push
mov
push
xchg
stc
in
cmp
dec
or
in
repnz
pop
cld
push
stc
pop
pop
sub
add
or
das
add
data16
adc
loop
push
das
mov
dec
xlat
jmp
push
cmc
fcoms
add
stos
or
cld
repnz
xchg
jns
insl
jge
or
jle
mov
das
and
inc
test
pushf
stc
in
mov
ror
mov
dec
sbb
or
inc
jle
repz
andnps
jnp
inc
ficomps
sub
popa
xchg
xor
clc
mov
int
pop
adc
repnz
icebp
filds
into
lcall
mov
aas
ror
mov
xchg
push
pop
jns
test
inc
jnp
dec
jnp
mov
cmp
fldl
imul
lret
xor
test
inc
and
xchg
icebp
enter
pop
sti
out
xchg
push
aas
lret
jae
je
lock
scas
or
jge
jno
adc
adc
std
push
popa
inc
scas
mov
ja
adc
add
repnz
mov
mov
in
scas
out
jecxz
pushf
movsl
test
filds
mov
lds
cwtl
jb
and
pop
and
stc
inc
pushf
cmp
pop
shl
aam
inc
sub
inc
jmp
and
int3
push
inc
jmp
push
movsl
or
ficomps
dec
in
inc
sti
and
pop
clc
popf
pop
inc
jmp
mov
es
pop
lret
loop
repnz
pushf
dec
dec
jbe
shrb
jp
push
dec
jg
cmp
add
lds
jnp,pn
jno
add
xchg
mov
sysexit
mov
fbld
xchg
mov
nop
jmp
in
scas
dec
icebp
movsb
incl
jmp
das
fistpl
stc
in
mov
cltd
ss
sbb
int3
repnz
das
call
mov
ja
or
mov
push
lock
scas
cmp
jl
add
sub
in
lcall
and
data16
movsb
lods
and
sbb
pop
jns
xchg
dec
aas
pop
and
mov
sbb
aad
test
leave
xchg
push
das
lods
mov
subl
jge
mov
mov
shl
popa
jl
dec
xor
pushf
jbe
int3
leave
add
shrb
mov
lret
das
dec
in
jne
cld
movsl
int3
push
cmp
repnz
das
mov
jmp
and
pop
lret
das
mov
and
mov
int
das
mov
sub
xlat
repnz
mov
lret
cld
repnz
sti
mov
in
test
mov
test
cld
repnz
das
inc
dec
push
ret
sahf
arpl
std
pop
repnz
das
mov
add
aad
outsl
dec
fs
push
aas
xchg
scas
pcmpeqb
cld
jnp
jge
insl
sub
into
inc
and
xchg
shlb
popf
ret
dec
push
enter
push
les
sbb
mov
inc
icebp
shrb
lret
das
icebp
jnp
sti
adc
cmp
inc
mov
loopne
xchg
mov
sahf
and
nop
dec
jno
lock
cmp
cmp
int
dec
mov
enter
jb
fdivr
in
pop
das
aas
std
xchg
mov
pop
xor
aad
out
xchg
pop
jle
fsubr
or
adc
fisttpll
pop
enter
add
pop
jo
push
arpl
cmc
sti
pop
mov
dec
clc
enter
dec
enter
inc
imulb
das
cmp
inc
push
fiadds
das
sbb
arpl
jle
in
jle
pop
push
mov
dec
xchg
in
pop
cmc
pop
xor
push
hlt
push
fcmovu
sbb
in
pop
jle
outsl
add
jne
cmp
adc
pop
jle
add
sbbl
and
js
sti
mov
ficoml
lret
lahf
insb
sub
imul
or
mov
adc
pop
inc
test
stos
jmp
lret
inc
push
test
ss
lret
mov
inc
cmp
jmp
pop
jge
out
daa
clc
ljmp
stc
push
fcomps
jl
in
mov
jns
or
in
add
mov
mov
sbb
or
imul
adc
lahf
adc
cld
repnz
cld
lcall
ja
inc
mov
add
cltd
and
je
push
pop
jns
outsl
cmc
into
test
data16
or
push
popf
mov
xchg
scas
inc
mov
std
mov
add
popa
stos
xchg
inc
inc
xchg
leave
push
in
xchg
int3
jg
pop
jns
mov
xor
in
ret
out
mov
in
jg
push
jae
mov
mov
inc
jge
mov
cmp
mov
jnp
mov
stc
xlat
movsb
pop
jge
lods
jl
sbb
insb
pop
sbb
dec
in
popf
dec
inc
mov
cld
repnz
pop
ss
push
iret
ja
push
insl
repnz
adc
jp
cmp
xchg
lods
pusha
cmp
push
mov
repnz
mov
dec
cmpsb
sbb
xchg
scas
mov
xor
mov
cli
int3
jp
mov
out
fmuls
mov
call
lret
fcmovu
push
daa
iret
in
xor
lods
mov
mov
popa
xchg
out
xchg
aaa
sub
pop
push
lds
int
enter
lret
xchg
dec
sbb
lcall
mov
pop
inc
mov
daa
in
ja
lret
mov
jp
imul
in
add
jl
jno
jmp
push
xlat
popa
repnz
cmp
mov
xchg
mov
lret
xlat
out
pop
aaa
shll
outsb
out
je
lret
mov
pop
mov
fwait
sbb
push
mov
dec
sub
jg
bound
xchg
cmc
enter
add
sub
shlb
adc
mov
xor
in
push
fidivrs
or
push
loop
icebp
leave
sbb
fldt
cmp
xlat
sub
push
sub
repnz
das
arpl
inc
dec
sub
mov
js
outsl
pop
hlt
pop
ja
xchg
das
mov
out
push
inc
daa
enter
cmp
hlt
jne
mov
jge
mov
pslld
inc
mov
or
dec
jge
sub
das
mov
adc
loop
cmp
xchg
mov
mov
mov
sbbl
mov
jp
jns
mov
lcall
push
mov
mov
filds
scas
adcl
and
and
jae
test
sub
bound
pop
fmull
mov
ds
add
and
out
and
rorl
ss
subb
sub
scas
mov
or
pusha
out
out
mov
nop
lds
or
les
mov
inc
xor
ret
push
imul
cld
bnd
pop
inc
and
loop
or
cld
repnz
outsb
cmpsl
loopne
int3
cltd
jae
mov
stc
in
jg
dec
xor
mov
jmp
jno
arpl
xchg
int
outsl
and
outsl
add
mov
sbb
loopne
dec
cmpsb
int
lods
inc
inc
inc
jg
dec
cmp
mov
inc
cmc
divl
stc
in
or
sub
loop
mov
xchg
pop
aas
mov
icebp
aam
sahf
jle
and
sub
insl
cmc
ja
out
inc
jle
enter
push
lock
add
enter
xchg
repnz
cltd
add
call
pop
jle
negl
push
sub
dec
popf
psubusw
cmc
stc
imul
xchg
stos
push
push
cmp
mov
push
adc
mov
sbb
cmp
iret
fildl
popa
mov
jmp
in
pop
inc
pop
pop
sahf
mov
cwtl
inc
jo
mov
fdivrs
push
inc
sub
in
addr16
jle
divl
push
icebp
inc
pushf
in
test
leave
stc
test
pop
mov
mov
insl
jge
mov
lcall
inc
jae
adc
loopne
lret
mov
sub
daa
in
inc
or
sub
notl
xchg
fdivr
jg
scas
es
cmp
in
pop
mov
clc
dec
sub
fimuls
push
in
pop
stc
inc
cmp
xchg
lock
iret
xchg
not
jns
xchg
push
push
xchg
adc
roll
sub
and
shlb
add
mov
add
out
add
xchg
das
jge
ds
popa
mov
adc
mulb
xchg
xchg
xchg
je
push
xlat
setae
adc
jg
sbbb
sbb
in
lods
inc
pop
push
in
or
sub
sub
cmp
mov
dec
sahf
and
js
mov
iret
sub
inc
int
jns
popf
test
jmp
or
in
push
pop
mov
mov
jns
stos
notb
adc
mov
or
pop
pop
jns
fwait
mov
arpl
es
push
ficomps
fwait
mov
sbb
cmc
enter
and
adc
jge
gs
sub
mov
pop
ret
jns
popf
and
insl
add
xchg
push
pop
dec
stc
hlt
pop
push
push
dec
xchg
push
pop
jns
loopne
mov
fsubrl
das
add
jns
mov
ja
and
das
ljmp
pop
rcrl
sbb
into
inc
and
addr16
in
inc
push
ds
and
ss
fadd
cmp
mov
std
and
addr16
jl
lret
pushf
xor
sub
xchg
and
shl
pop
mulb
lret
mov
cmp
mov
das
mov
cmp
leave
outsb
icebp
pusha
into
out
add
xlat
cmpb
mov
ret
inc
in
and
std
jb
les
jne
inc
mov
jno
orb
addr16
test
in
inc
mov
dec
cld
repnz
xchg
push
fadd
clc
scas
aas
xor
repnz
mov
or
jp
jnp
or
adc
stc
into
ficomps
popa
mov
adc
dec
cmp
jno
popf
xchg
lahf
jle
in
sar
adc
std
push
lret
stc
in
pop
sbb
je
inc
and
imul
jle
sti
push
jns
aas
xchg
dec
xchg
add
enter
mov
cmp
ja
add
iret
mov
test
in
mov
insl
fsubl
jge
in
pop
adc
adc
jecxz
mov
enter
sbbb
into
xor
in
push
stc
decl
or
jb
imul
ja
icebp
scas
dec
lahf
sbb
push
pop
jns
sub
shrl
xchg
pop
jns
xchg
cld
xor
leave
xor
insl
inc
in
xchg
xchg
push
cmpsb
pop
sub
xchg
icebp
popa
xchg
inc
pop
jle
notl
stos
aad
push
aam
fisubrl
add
imul
xchg
inc
mov
jo
fsts
adc
pop
pop
adc
mov
dec
xchg
pop
in
pop
jle
cli
cld
test
xchg
inc
movsl
inc
and
jle
in
aas
add
iret
js
ja
mov
jns
loopne
aad
push
jecxz
into
mov
add
iret
inc
xlat
repnz
hlt
dec
dec
jae
jl
lret
sbb
cld
add
xor
mov
mov
jecxz
iret
mov
scas
test
inc
lea
insb
mov
mov
fsubr
xchg
sub
stos
icebp
stc
call
jns
push
sti
xlat
pop
xchg
mov
pop
jns
xchg
pop
cmp
add
popl
fbld
push
imulb
js
sbb
fwait
adc
pop
jle
jecxz
jae
cmp
or
jb
sbb
pop
jle
in
sbb
sub
pop
shrl
test
leave
xchg
out
and
ffreep
cwtl
inc
test
outsl
pop
nop
or
repz
enter
jge
mov
pop
mov
push
clc
inc
lea
push
pushl
stc
in
jg
dec
cmp
arpl
jmp
push
in
pop
jle
adc
mov
sbb
ret
sub
sbb
gs
mov
repnz
jns
lods
std
and
clc
inc
mov
inc
rclb
fistl
pop
js
movsl
push
gs
mull
scas
mov
mov
mov
in
call
ljmp
sbb
xchg
add
fimuls
into
push
dec
jl
fistl
jle
ja
imulb
mov
arpl
mov
xchg
sbb
insb
xor
jp
mov
mov
mov
pop
mov
pop
jns
sub
cld
fadds
add
jns
xchg
sbb
and
std
imul
in
push
shr
decl
stos
in
add
xchg
push
pop
inc
pushf
dec
test
outsl
xor
sbb
push
ret
or
mov
inc
push
mov
xlat
mov
dec
and
xchg
pop
jle
testb
xchg
lret
in
dec
sahf
mov
sbb
inc
jae
adc
scas
fcmovu
ds
mov
outsl
cmp
jmp
xlat
mov
je
cmp
addr16
pop
xchg
jg
stc
outsb
or
push
test
imull
sbb
in
fmuls
jmp
xchg
jg
ret
cmp
xchg
pop
popl
das
xchg
es
and
jl
push
lods
or
ja
insl
sbb
or
cld
repnz
call
mov
ja
mov
jmp
stos
sub
fwait
in
das
lcall
xor
hlt
int3
dec
rolb
cld
repnz
mov
jmp
cld
rcll
call
mov
int
mov
mov
adc
adc
and
dec
in
jl
lret
das
and
inc
sbb
and
movsb
cli
repnz
das
mov
xor
pop
pop
mov
add
cmp
pop
dec
sub
push
sarl
or
out
and
daa
aaa
out
inc
dec
adc
in
call
jg
xchg
and
jge
cmp
js
mov
and
jnp
sub
dec
dec
lea
scas
mov
cmp
xor
mov
sub
mov
jmp
cli
xchg
enter
enter
jge
out
nop
add
cs
nop
lock
push
push
pop
ds
imul
movsl
xor
in
push
fisubrs
jmp
jmp
dec
aam
pop
scas
data16
pop
jns
push
test
jecxz
inc
ljmp
in
fsub
stos
xchg
push
pop
jns
fwait
dec
mov
in
icebp
xor
repnz
fnstcw
xchg
xor
mov
jle
mov
jg
scas
gs
xor
or
and
sbbb
daa
pop
test
das
inc
pop
dec
xchg
push
lret
mov
pushf
aam
popf
adc
imul
fsubrl
js
stos
pop
lret
cs
cld
repnz
jl
xlat
test
xchg
hlt
std
and
enter
mov
cltd
adc
add
mov
cmp
sub
cmp
stos
and
adc
mov
out
iret
or
inc
jl
jo
es
leave
mov
pop
out
in
js
shlb
mov
and
es
movsl
insb
sti
xchg
jne
mov
jne
push
popa
ss
mov
sti
cltd
mov
mov
adc
repnz
inc
das
outsb
dec
arpl
loopne
dec
xchg
sub
in
pushf
das
lahf
loopne
pop
stc
repnz
pop
jle
xlat
xorl
out
xchg
push
ficoms
out
pop
jge
orb
push
pop
jns
and
and
mov
cmpsb
ret
pop
jns
xchg
aaa
std
mov
movl
jbe
scas
jo
xchg
push
cmp
lret
cmp
cli
lods
daa
aaa
and
adcb
das
nop
in
sub
push
pop
push
dec
xchg
aaa
pop
push
or
push
fimuls
js
and
ja
pop
jns
xchg
fwait
mov
rolb
xlat
ljmp
popf
inc
mov
or
sub
in
push
pop
int
xchg
fiadds
jle
test
dec
push
mov
scas
cld
jb
push
test
mov
mov
push
push
imul
arpl
sub
in
ds
jns
lods
paddusb
push
loopne
adc
inc
pop
pop
pop
mov
insl
sbb
dec
cmp
popa
shlb
xchg
mov
repnz
aaa
dec
push
cltd
inc
int3
mov
and
scas
jg
and
out
adc
or
sbb
jg
fmull
push
jmp
int3
jl
shrl
mov
and
mov
movl
lret
cs
adc
mov
and
jbe
shrl
pop
iret
aam
movsl
stc
nop
hlt
xor
in
addr16
jg
vandnps
ljmp
or
insb
in
inc
fstps
stc
in
addr16
rcll
imul
out
jle
in
inc
ljmp
ljmp
stos
inc
das
sub
bound
scas
repnz
pop
mov
dec
aas
mov
mov
lods
mov
pop
fisubl
gs
pop
dec
push
pop
pop
pop
jns
hlt
cmp
push
mov
cmp
pop
cld
cmp
mov
xchg
push
jmp
sbb
push
pop
jns
pop
inc
xchg
outsl
frstpm(287
daa
int
lods
inc
js
sub
in
jecxz
mov
cli
or
icebp
popf
xor
fbld
push
loope
movsb
int3
cmp
or
stc
out
and
inc
ficompl
fnstsw
js
fbld
dec
rorb
xchg
imul
adc
adc
inc
pushl
push
bound
jmp
sbb
mov
inc
inc
dec
sub
sti
int
jge
pop
jle
lret
mov
icebp
sahf
je
inc
jne
sub
xor
jp
xor
mov
ficoms
mov
xchg
cmp
aas
adc
pop
jns
xchg
clc
aam
jbe
fwait
mov
in
or
addr16
popf
xor
movsb
sti
mov
repnz
daa
dec
fldenv
stos
cmp
jg
cmpsb
mov
add
push
and
or
mov
das
shll
fldenv
pop
pop
jg
push
pop
xchg
mov
mov
sbb
mov
sub
flds
jl
adc
jp
repnz
das
mov
lret
mov
push
lret
das
mov
and
icebp
cmpsl
inc
jg
stc
repnz
inc
gs
mov
jle
in
punpckhwd
hlt
xchg
hlt
rolb
stc
in
pop
mov
aad
xor
xchg
pop
jle
mov
jg
add
mov
pop
jle
jae
xor
sahf
mov
in
jg
fcomps
jge
scas
mov
jp
sbb
jnp
xor
inc
nop
cmp
int
dec
lea
cmc
in
jae
call
in
xchg
iret
push
mov
cwtl
ds
shll
andl
sub
adcb
idivb
jbe
mov
jecxz
inc
push
adc
lcall
pop
push
std
mov
adc
inc
xchg
or
inc
or
daa
leave
sub
lcall
xchg
ja
push
stc
cmp
imul
xor
mov
mov
jbe
scas
cmp
scas
mov
xchg
mov
into
or
mov
lret
shl
dec
push
mov
in
popa
scas
sbb
mov
dec
adc
push
pop
popa
lcall
leave
mov
sub
in
scas
xchg
cltd
inc
rolb
pop
cmp
das
inc
cmpb
mov
cmp
jb
gs
inc
bound
sahf
popa
jns
cld
mov
xchg
sub
inc
outsl
rorl
mov
jnp
inc
and
add
add
pop
movsl
mov
repnz
das
mov
cld
cmp
adc
xchg
jg
stc
or
and
add
popl
aam
addr16
jle
in
pop
add
jp
add
scas
mov
shlb
pop
or
scas
enter
push
cltd
adc
pop
mov
jg
jmp
sub
repnz
adc
cwtl
mov
lock
mov
xor
mov
lea
jo
xchg
cmc
push
mov
lret
mov
push
in
adc
movsb
mov
pop
push
push
xchg
sbb
das
inc
cwtl
jns
enter
mov
mov
inc
sti
in
dec
je
pop
add
rol
insl
icebp
repnz
pop
das
jmp
xchg
push
cmpl
push
fidivs
out
pusha
and
jp
xchg
sub
sti
and
and
jp
push
adc
jae
pop
rcrb
push
stc
int
mov
cmpsl
rorl
jle
imul
out
mov
jb
or
jb
xchg
jns
xchg
push
mov
adc
outsl
lret
pop
sub
test
sub
push
sbb
mov
xchg
imul
mov
mov
jle
imull
iret
and
sbb
lock
jo
jp
dec
test
in
popa
imul
lds
dec
cmp
xchg
pop
jle
sbb
das
dec
xor
xor
cmpsl
daa
enter
jnp
inc
push
mov
adc
into
cmp
jecxz
mov
lret
das
inc
pop
mov
push
fwait
in
adc
lret
das
mov
test
int
out
lret
das
mov
jb
mov
subb
cld
repnz
out
or
call
or
cld
repnz
addr16
cmova
sbb
sarl
in
das
cli
add
lods
outsb
dec
inc
stc
xchg
aaa
jge
mov
sbb
lret
and
mov
cmp
cmp
rolb
test
cld
xchg
cld
repnz
das
shrl
push
inc
jbe
enter
mov
lret
das
mov
hlt
add
clc
add
adc
outsl
add
mov
mov
push
scas
mov
pop
push
scas
pop
inc
in
push
aaa
dec
dec
insb
inc
cs
xchg
sub
pop
xchg
mov
cmpsl
add
and
jns
lods
imull
xlat
out
xchg
lret
pop
pop
repnz
enter
xor
mov
inc
or
and
inc
push
pushf
rorl
mov
jns
pop
dec
push
sbb
xchg
mov
jecxz
in
mov
repz
xchg
stos
aad
xchg
xchg
push
pop
jns
loopne
ljmp
or
enter
inc
xor
fisubrl
or
loope
sbb
lock
lahf
std
jg
jns
xor
and
mov
stc
in
sbbb
fwait
nop
adc
imul
inc
mov
pop
sub
xchg
repnz
gs
mov
cmc
call
sbb
ficoms
stos
out
add
inc
addr16
xlat
icebp
in
out
mov
fcmovnb
dec
adc
pop
inc
or
fld
sub
dec
in
sbb
out
jns
adcl
cld
repnz
xchg
inc
xchg
enter
pop
mov
mov
flds
xchg
lcall
push
cmp
test
int3
jmp
inc
into
out
and
pop
in
insl
cltd
cltd
lret
sahf
sti
inc
mov
movsl
dec
cmp
sbb
push
jg
ret
shlb
mov
and
in
testl
push
aaa
xor
enter
mov
add
add
test
lds
cmp
inc
pop
aas
pop
inc
lahf
std
jno
dec
add
ficoml
xor
pop
scas
mov
push
push
out
pop
or
das
push
int3
pop
pop
fs
jge
rcll
outsw
test
cwtl
cld
repnz
pop
pop
xchg
inc
gs
xchg
jg
rolb
cmpsb
jle
push
lds
icebp
ja
sti
xor
stc
in
and
jp
sbb
lahf
and
xor
stos
stos
mov
cmp
mov
mov
rorb
and
and
dec
ret
sub
je
lret
das
mov
cmp
sahf
lods
test
mov
jge
sbb
push
sbb
mov
clc
push
cmc
jno
add
inc
sbb
jl
lret
in
lods
or
mull
pop
lds
addr16
outsb
add
scas
mov
dec
mov
or
daa
inc
xchg
dec
pop
jns
popf
jne
push
adc
or
inc
push
in
xchg
push
lods
jb
mov
add
mov
enter
xchg
mov
sub
repnz
int
add
jo
dec
xor
sub
adc
xchg
test
call
repnz
daa
pop
cs
push
call
mov
lret
push
stos
pusha
aaa
adc
repnz
das
jmp
idivb
or
lret
das
mov
xor
lds
je
lahf
mov
daa
out
cmpsb
mov
icebp
inc
xchg
addr16
mov
mov
in
sub
xor
outsl
icebp
movsl
repnz
aam
and
ja
xchg
fcomi
lret
mov
dec
push
sbb
push
push
stc
sti
enter
decb
pop
push
pop
stc
bndstx
xlat
cmpsl
scas
xor
ss
adc
out
lds
pop
jnp
lds
mov
add
dec
into
pop
out
ret
cld
jnp
fistps
adc
std
scas
adc
inc
stc
mov
notl
out
push
insb
dec
in
add
and
dec
iret
call
dec
dec
shrl
stos
scas
mov
test
aas
or
xor
gs
add
pop
clc
inc
lods
dec
jns
or
arpl
mov
add
push
pop
jns
lods
or
lods
pop
dec
sub
pop
sbb
out
sub
xchg
push
out
push
stos
add
aad
add
sbb
pop
imul
and
and
mov
inc
pop
nop
shll
push
ja
shl
das
sti
lods
pushf
jno
stc
mov
sti
xchg
das
mov
pop
jle
jmp
cmpsb
xor
ljmp
insb
push
dec
mov
inc
pop
nop
inc
jge
and
mov
and
pop
mov
fidivrs
xchg
rorl
es
call
push
mov
jns
xchg
das
mov
adc
sub
xor
out
nop
or
clc
jmp
sbb
repnz
push
cmp
sbb
push
testl
decl
pop
sub
mov
cld
repnz
lret
add
jmp
out
inc
dec
stc
subl
das
pop
loop
pop
xor
orb
cld
mov
inc
sub
pop
pop
push
mov
mov
out
adcl
sbb
ds
jnp
mov
rolb
mov
pop
test
lret
mov
pop
sbb
das
cmp
scas
mov
aad
aam
pop
push
in
sbb
in
and
xor
imul
in
and
into
stos
xchg
jg
out
pop
aam
push
pop
dec
push
loope
mov
scas
mov
notl
ss
pusha
cld
mov
push
jecxz
sub
fwait
imul
jns
ret
gs
xchg
es
mov
fs
pop
jns
dec
mov
test
mov
mov
lock
jg
sbb
xor
inc
call
fdivr
jle
in
cmp
aas
test
aad
stc
in
pop
mov
adc
inc
mov
push
inc
jle
fiaddl
jge
jae
cld
in
sar
xchg
pop
fsts
xchg
inc
mov
pop
sbb
xchg
pop
jle
pop
hlt
lcall
pop
das
mov
jo
pop
add
pop
and
in
bound
repnz
mov
and
test
adc
dec
xchg
aaa
es
cmpsl
mov
fnstenv
das
jg
xchg
jnp
lahf
imul
clc
jb
push
ret
sti
leave
lret
repnz
jmp
pop
mov
mov
mov
cmp
das
lahf
cmp
lds
cltd
cmp
lret
dec
xor
sbb
out
dec
adc
cli
movsb
movl
and
inc
cltd
cli
fwait
repnz
sub
aam
mov
mov
dec
pop
std
das
mov
xlat
xlat
sub
stc
mov
adc
stos
jl
dec
aas
mov
mov
enter
sub
xchg
call
push
rcll
int3
xchg
popa
xchg
test
lock
inc
xchg
movsb
or
xor
xor
xchg
insb
mov
cld
repnz
das
incl
mov
and
bound
fbld
mov
cs
cld
pop
frstor
jle
nop
xlat
sbb
stos
cmc
adc
pop
dec
fstl
xchg
out
enter
repnz
pop
adc
pop
out
cmp
mov
jge
or
or
jge
in
cmp
and
out
pusha
mov
mov
mov
outsb
sti
push
inc
xor
stos
aam
mov
xlat
loopne
xor
mov
jle
in
xchg
jno
push
repnz
sub
fnstenv
pop
fwait
or
mov
mov
mov
xchg
pop
jle
or
cli
jg
jecxz
out
jg
xchg
pop
jle
sub
mov
adc
in
and
stos
arpl
cmp
sub
shl
aad
inc
sub
ds
xchg
in
cli
mov
xchg
cmp
push
mov
or
xchg
mov
sbb
shr
enter
sarb
aas
sti
pop
icebp
jnp
and
mov
push
sub
in
mov
pop
stc
repnz
push
mov
cmc
cli
jne
insl
mov
dec
mov
push
repnz
aam
fadds
mov
lret
mov
inc
ljmp
pop
stc
jnp
mov
jbe
add
mov
in
jg
loop
aas
xor
add
sahf
cmp
or
push
test
das
mov
iret
add
xchg
test
repnz
fcoms
dec
rol
dec
pop
add
jl
in
xchg
aas
and
jp
push
add
ret
mov
test
cld
inc
or
or
jge
xchg
adc
xor
imul
in
les
mov
sub
in
das
cmpsb
cmp
and
ljmp
iret
jl
fbld
mov
insb
js
adc
pop
jle
divl
push
js
mov
pop
jns
ljmp
dec
mov
or
and
fbld
push
cld
int3
jge
ja
cmp
jne
xchg
pop
jle
insl
mov
jg
mov
lock
jg
and
stc
in
sub
push
push
js,pt
out
xchg
sub
jb
cmp
in
sahf
add
adc
jle
mov
mov
popf
jae
ret
cs
fists
pop
jle
in
enter
xor
lods
dec
inc
ss
xor
les
lods
sub
aam
mov
lret
add
aad
xor
sbb
xchg
icebp
stos
inc
scas
mov
ret
jno
pop
fisttps
xchg
mov
or
push
push
dec
inc
lock
dec
in
out
inc
stc
jnp
int3
sbb
iret
fstpt
iret
jns,pt
mov
aad
es
cld
cmpl
imul
push
scas
xchg
mov
in
and
pop
loope
loop
dec
mov
lret
mov
pop
mov
in
mov
mov
dec
sub
xchg
jg
icebp
pusha
scas
mov
repnz
xchg
stos
insl
cltd
cmp
enter
das
push
out
sub
int3
jns
xchg
mov
call
jmp
pop
mov
sbb
mov
out
adc
cmpl
fs
push
hlt
sahf
push
pop
jns
jmp
lret
dec
xchg
jp
inc
out
add
fs
push
rcl
sbb
fidivrl
sub
add
imul
cmp
lret
rol
xchg
sahf
das
inc
repnz
das
mov
stos
int
cmovge
lret
das
mov
add
mov
jmp
cmp
mov
scas
test
shrb
sbb
xlat
sub
das
mov
jnp
or
jo
pop
xor
repnz
daa
loopne
cld
and
enter
popf
jmp
das
mov
nop
lock
sbb
jle
cmpsl
cmpsl
lret
mov
pop
addr16
fadds
stc
in
sarl
mov
or
and
mov
out
xlat
andl
stos
inc
mov
pushf
lret
mov
dec
ret
or
enter
scas
mov
sub
out
adc
xchg
mov
orl
pop
pop
inc
sbb
mov
sahf
dec
or
aas
fs
push
pop
jns
or
sti
rorb
xchg
out
out
cli
jle
ja
cmp
add
and
mov
stc
in
pop
pop
jb
sbb
jb
inc
ja
clc
test
lods
mull
in
addr16
xchg
pop
jle
mov
cmp
xchg
and
and
fiadds
pop
js
adc
in
jg
jne
lds
and
xchg
pop
jle
jecxz
aad
hlt
cmpsl
mov
pop
out
xor
ds
mov
out
xor
ja
inc
rcll
mov
enter
cmp
and
sub
rcll
sbb
fisubrs
cmovns
sub
std
inc
xor
es
das
inc
push
dec
cmp
scas
mov
sahf
mov
sub
cmpsb
cmp
sub
xchg
mov
xorb
adc
adc
in
lods
and
push
in
lcall
pop
les
movsb
jae
jp
dec
in
lret
jl
das
das
in
mov
jmp
scas
mov
mov
fsubs
repnz
daa
mov
cmpsl
cltd
add
dec
repnz
mov
mov
enter
inc
pop
outsl
xlat
xchg
das
mov
lcall
pop
mov
icebp
mov
push
and
cmp
imul
jae
lahf
lret
mov
je
pop
jle
jne
and
sbb
roll
jo
jl
in
push
imul
jb
mov
mov
mov
sahf
sarb
jge
popf
lods
ret
jle
lock
push
das
mov
dec
cmpsl
pop
mov
repz
or
sbb
loop
cld
repnz
and
xchg
lods
mov
roll
jl
in
das
and
xchg
inc
push
and
fdivs
divb
test
cmpsl
mov
scas
mov
sub
ret
dec
mov
loopne
stc
scas
mov
sarb
test
pusha
pop
pop
jecxz
repnz
lods
mov
or
and
std
loop
daa
jo
push
xlat
sbb
aaa
inc
fistpll
inc
mov
sti
push
enter
mov
xchg
pop
inc
dec
mov
lcall
fimuls
mov
dec
jle
enter
ficompl
dec
lret
mov
in
pushf
mov
fildl
inc
fadd
bound
mov
xor
dec
test
lds
popf
xchg
loope
sbb
sahf
adc
enter
xchg
fabs
lahf
jmp
sti
pop
and
sbb
add
fcoml
jp
jecxz
jnp
inc
inc
xchg
add
xor
repz
jle
xchg
push
pushf
xchg
and
adc
scas
mov
or
rcl
xchg
out
sar
repnz
enter
xlat
jmp
inc
int
cmp
xchg
das
mov
xchg
adc
int3
push
js
repz
mov
movsl
movsb
pop
dec
in
enter
push
or
cmp
sub
mov
das
mov
popf
jg
roll
cld
repnz
cmp
and
into
mov
fs
xlat
adc
out
cmp
repnz
das
sub
gs
rorl
into
sub
inc
mov
in
push
and
jbe
test
mov
imul
data16
dec
int
shr
add
mov
mov
repnz
and
push
stos
sbb
push
cs
lret
mov
mov
pushf
mov
aam
ss
scas
mov
dec
movl
or
js
xchg
jg
add
dec
cmp
inc
repnz
aad
or
iret
fcmove
sub
leave
push
jae
sti
lods
mov
mov
cmp
mov
or
das
lcall
stc
cmc
sbb
push
stos
sbb
xor
or
inc
cmp
xchg
mov
or
sub
scas
mov
add
lods
xchg
fdivl
into
movsl
sti
insb
repnz
stos
sbb
jge
lret
das
mov
cltd
or
in
pushf
mov
pop
stc
repnz
xchg
cmp
sub
mov
aas
stc
add
pop
out
repnz
jmp
out
repnz
lods
pop
mov
fistpl
fsubs
stos
jl
movsb
repnz
movsb
int
shrl
insl
cs
xchg
pop
std
pusha
push
sub
mov
mov
inc
mov
pop
jle
in
mov
sbb
mov
cmpsl
stos
js
ds
xchg
pop
into
outsb
jb
loop
das
pop
data16
in
aad
jnp
cld
mov
push
repnz
pop
xchg
les
popf
jo
xchg
in
push
xor
xor
xchg
xchg
push
pop
jns
movsb
fwait
dec
inc
fadds
lds
pop
jns
and
xor
lods
sbb
pop
jns
xchg
jo
cld
push
loope
push
ljmp
pop
pop
fiadds
mov
push
stc
mov
repnz
push
jle
mov
cltd
scas
sarb
stos
xchg
pop
jns
xchg
or
xor
repnz
arpl
in
push
jno
or
fs
xchg
push
pop
push
or
ja
sub
aad
aaa
xchg
push
pop
jns
in
dec
mov
pop
movsb
add
push
adc
mov
pop
jns
jmp
adc
in
jns
xchg
push
out
arpl
cmp
not
aas
jp
pop
push
fiadds
pop
jle
dec
jae
roll
jns
xchg
push
and
jecxz
pop
push
aam
push
fwait
fs
adc
pop
lret
loopne
cs
mov
and
jns
sub
outsb
iret
lret
cmpl
cmpsb
popa
xor
scas
mov
or
mov
ds
adc
xchg
cmp
aaa
xchg
pushf
or
in
inc
cmp
imul
sbb
and
out
in
lock
mov
mov
xor
mov
cmpsl
lds
mov
lods
mov
pop
sub
xor
clc
testl
enter
pop
movsb
jg
inc
push
lcall
clc
shl
sbb
mov
addr16
push
jo
mov
sub
mov
ljmp
jge
scas
mov
sub
and
nop
push
cli
cmpsb
jcxz
sub
add
leave
outsb
add
jns
inc
mov
in
xlat
add
xor
pop
jns
ja
fs
outsl
mov
inc
in
lock
sub
fs
icebp
das
fwait
mov
stc
inc
loopne
fistps
inc
xchg
pop
jge
das
pusha
jge
insl
dec
pop
addb
dec
lcall
rorl
outsb
or
jmp
repnz
das
les
push
outsb
add
loope
int3
in
pop
decb
add
in
cmp
stc
or
push
mov
or
inc
frstor
jle
in
shlb
outsl
mov
imul
or
stc
in
fimull
xor
jle
pushf
jb
cmpsl
out
jmp
jp
xchg
pop
pop
xchg
xchg
pop
mov
mov
push
imul
ret
dec
rolb
cmp
dec
inc
cmp
arpl
repnz
pop
lret
add
test
dec
jmp
mov
push
divb
inc
sub
cmp
into
lods
lods
xor
mov
adc
inc
stc
repnz
xchg
movsb
sbb
in
pop
mov
sahf
pop
insl
test
cmp
pop
inc
cmp
xchg
and
sahf
das
fcoms
int
fwait
push
mov
in
mov
inc
test
cmc
xchg
hlt
fists
filds
data16
jp
ja
push
stc
in
xchg
cmpsl
and
test
jns
xchg
ja
and
inc
xor
and
sbb
jecxz
jle
xor
stos
cld
repnz
mov
sub
dec
js
jbe
lods
data16
xchg
das
mov
mov
sub
mov
jnp
cmpsl
scas
bound
jns
popf
test
popa
push
mov
iret
mov
push
fsubl
pop
negb
dec
loope
icebp
dec
mov
shll
and
pop
hlt
test
mov
add
into
repnz
shl
daa
cmp
cmp
scas
mov
inc
mov
stc
in
enter
mov
es
popf
outsb
in
pop
jle
cmp
push
scas
js
clc
in
push
stc
push
dec
ret
mov
sbb
xchg
sub
jnp
int
cmp
jnp
shl
ds
andl
ljmp
pop
push
inc
movsb
cld
repnz
das
popa
dec
xchg
jb
jl
cmpb
jae
fmull
adc
jns
mov
stos
out
push
fs
scas
cli
outsb
insl
arpl
int3
pop
xor
pop
enter
xchg
mov
adc
mov
lret
and
sti
cmp
lret
ljmp
adc
mov
cmp
jb
adc
pop
pop
dec
clc
std
stc
in
jg
dec
cmp
fldenv
nop
mov
insl
insb
in
pop
jle
test
repz
imul
inc
jle
push
push
and
adc
test
push
mov
repnz
adc
mov
ret
or
icebp
mov
loopne
jmp
cmp
mov
lea
pop
jmp
loop
ds
stos
sub
lahf
je
xchg
lods
inc
enter
mov
or
xchg
fistpll
sbb
repnz
and
es
loope
in
pop
jle
test
mov
mov
ds
mov
imul
in
cmc
xchg
pop
das
mov
jge
sarb
sbb
fbstp
xchg
shrl
xchg
push
pop
pop
rclb
je
push
lods
sarl
pop
jns
adc
inc
cmp
mov
jns
xchg
lods
sti
or
cmpsb
cwtl
inc
les
lret
mov
inc
pop
adc
pop
les
xchg
xchg
jg
cld
xchg
add
pop
xchg
dec
jge
and
arpl
stc
in
scas
sbbl
adc
jle
in
add
or
pop
loope
mov
xor
push
sbb
jmp
push
mov
mov
or
sbb
loope
inc
inc
mov
cld
roll
jp
or
jle
in
adc
adc
inc
ljmp
in
fdivr
in
pop
lds
jle
mov
xchg
pop
jle
push
cmp
push
jne
jge
pop
stc
repnz
pop
sbb
sbb
dec
inc
mov
sbb
xchg
sarl
pop
inc
out
lods
sub
popa
add
cld
mov
pop
pop
jns
push
cmp
test
sub
adc
pop
bound
xchg
sbb
into
adc
sbb
lret
mov
mov
xchg
pop
int3
jns
pop
xor
ret
mov
mov
mov
push
cmp
les
pushl
rcll
addb
jecxz
mov
in
idiv
mov
or
jge
adc
inc
adc
lret
pop
and
fs
mov
jp
sub
arpl
jno
orl
fldenv
mov
mov
mov
pop
sarl
lret
das
sti
push
sub
outsl
cld
push
fmuls
das
mov
addr16
lcall
mov
stc
jl
adc
cmp
mov
leave
inc
mov
fwait
int3
add
mov
jmp
das
jo
fstl
inc
cli
or
xchg
jg
xchg
xor
inc
insb
or
mov
sbb
not
cwtl
cld
cmpsb
vandnps
cld
repnz
sbb
into
adc
data16
leave
cld
repnz
das
inc
test
sti
in
mov
and
lret
das
mov
and
xchg
es
lret
aas
jl
imul
jbe
ss
pop
lret
das
mov
stos
pop
dec
mov
repnz
repnz
sub
dec
mov
test
gs
das
lcall
sti
arpl
repnz
mov
shlb
ds
repz
jg
pop
daa
aam
les
stc
and
push
stc
mov
push
xchg
adc
mov
sarl
sbb
mov
inc
outsb
lods
repnz
mov
mov
mov
lret
mov
mov
add
repnz
std
mov
enter
push
sti
mov
pop
int
repnz
das
insl
sub
sti
test
pop
jne
test
jg
stos
jl
jl
jae
and
and
adc
cmpsl
dec
and
stc
in
xchg
movsb
add
fldcw
jle
in
insl
xchg
pusha
pop
addr16
or
es
mov
stc
in
pop
jp
mov
fisttps
jbe
in
pop
jle
mov
icebp
push
imul
das
mov
repnz
push
lods
pushf
fistpll
mov
flds
repnz
movb
popf
xor
mov
scas
mov
adc
pop
add
in
pop
jns
jecxz
push
shlb
ja
jns
xchg
push
ret
pop
sub
pushf
out
in
push
pop
in
and
pop
mov
std
xchg
push
pop
jns
fisttpll
push
invd
push
fidivrs
fimuls
and
inc
mov
mov
or
xchg
mov
push
pop
inc
adc
scas
mov
cli
or
out
sahf
xlat
jno
out
and
cs
xor
xchg
inc
sti
stc
jne
ret
mov
scas
aaa
je
outsb
jmp
icebp
pusha
mov
dec
nop
add
ds
pop
jns
add
mov
lahf
in
test
inc
cltd
pop
aaa
or
sub
xlat
pop
jle
in
sbb
cmpsl
push
int
out
int3
stc
repnz
xchg
ja
shl
sbb
out
sbb
mov
sub
shrb
in
divl
movsl
into
inc
nop
xchg
push
pop
jns
fistpll
int
loop
repnz
les
in
cmc
or
aas
or
cmp
push
mov
imul
push
pusha
rorl
ficoms
outsl
cmpsb
ret
sarl
pop
jns
loop
pop
jle
movsl
mov
or
in
fcmovnbe
enter
hlt
out
xchg
ja
mov
jne
or
mov
in
in
jge
add
push
int
cmp
in
dec
adc
or
and
cs
and
pop
adc
jo
or
icebp
add
rorl
and
mov
ret
mov
test
scas
stc
mov
mov
mov
xlat
add
loope
js
repnz
and
lock
shlb
lret
mov
fs
jg
popf
cs
repnz
pop
clc
mov
or
dec
loopne
stc
mov
mov
mov
pop
stc
imul
bswap
sub
xor
jnp
stc
in
pop
insb
adc
xchg
das
mov
sbb
gs
mov
push
sbb
orl
jge
push
pop
jns
mov
scas
or
sub
in
out
push
call
mov
in
jg
mov
je
xlat
jae
addl
mov
xchg
push
pop
out
push
lea
jb
iret
ds
add
lret
pop
dec
mov
bound
cld
repnz
das
cmpsl
cmpsb
sub
jl
int
icebp
enter
pop
and
aam
and
sub
test
popf
sub
jl
mov
call
dec
scas
xor
mov
scas
mov
flds
jnp
pusha
cmp
lret
bound
sbb
stos
mov
lret
das
pushl
hlt
add
lret
xor
sub
xchg
mov
push
xchg
les
jl
shl
int3
push
cmp
mov
in
push
pop
dec
outsl
or
fucomi
pop
fnstenv
jns
dec
sbb
mov
xchg
pusha
adc
cmp
hlt
xchg
int
mov
add
cld
xlat
mov
inc
jns
icebp
scas
mov
pop
dec
mov
dec
fldenv
push
jp
lret
sub
sbb
inc
popf
rorl
xor
mov
pop
and
in
movsl
mov
xchg
xchg
test
int
xchg
push
pop
sub
cltd
sbb
add
jg
pop
jns
es
jno
sahf
dec
sbb
and
in
or
cld
icebp
sub
mov
mov
sbb
cmp
aad
sbb
push
fiadds
fs
arpl
pushl
xchg
imul
scas
mov
jmp
fsts
fbld
imul
cmp
lea
push
mov
gs
int
sbb
fwait
nop
loop
mov
bound
jno
push
or
mov
dec
fdiv
add
ja
loope
lret
jg
mov
push
ret
cli
nop
fmulp
cmc
clc
es
mov
mov
pop
fimull
call
enter
inc
lods
jl
or
fdivrp
fsubl
jbe
mov
inc
icebp
push
inc
xchg
aaa
es
mov
fnstcw
cld
mov
push
pop
jns
in
jnp
iret
lret
jge
mov
push
cmp
cmpsb
lret
xor
mov
sti
insb
cmp
pop
xor
and
xor
mov
popa
sub
mov
lret
loope
enter
insl
cli
ds
mov
sti
inc
mov
xlat
stc
mov
out
push
sahf
mov
jg
rcr
aad
lods
out
loopne
sub
xchg
movsb
rcr
fwait
out
mov
dec
nop
repnz
sbb
sbb
scas
lods
jecxz
jns
call
fcmovnu
cmpsb
sbb
add
xchg
xchg
push
cmpsl
hlt
ljmp
movsb
sub
das
test
lods
jae
ss
lds
lret
inc
sbb
or
sub
lret
movsl
scas
lret
das
mov
out
dec
adc
xor
jge
test
adc
imul
stc
mov
mov
push
pop
jns
add
xchg
popa
mov
leave
adc
sti
fbstp
dec
daa
xor
repz
jle
in
and
mov
xchg
jecxz
outsl
test
xchg
inc
adc
mov
sti
inc
out
lret
pop
adc
cmp
jo
push
xchg
in
sub
xchg
mov
mull
bound
cld
jnp
out
xor
dec
rcrb
outsl
call
mov
in
push
pop
sub
loop
mov
push
cmp
adc
popf
lea
daa
rclb
jns
xor
mov
int3
inc
inc
pop
test
push
add
in
movsl
mov
pop
test
jge
dec
dec
or
ret
std
lock
pusha
sbb
or
xchg
mov
dec
insl
xor
shrl
mov
ja
xchg
mov
jne
xchg
jo
loope
dec
and
lahf
cmpb
cwtl
arpl
jbe
dec
xlat
ret
add
stc
in
out
rolb
xor
sub
in
test
fwait
jnp
xchg
rclb
test
inc
icebp
insb
jg
repz
clc
jo
es
mov
xlat
sbb
push
stc
in
lea
int
or
xchg
lret
mov
outsl
test
xor
shl
xchg
mov
fstps
push
scas
mov
push
ds
shll
imul
mov
jge
lret
rolb
insb
int
mov
fwait
lret
mov
mov
lods
ss
iret
mov
ja
mov
cli
adcb
lret
xchg
je
push
sahf
aad
jne
fldl
and
cmp
sub
mov
dec
add
xchg
push
pop
xchg
cs
sub
jg
add
jns
mov
imul
sbb
mov
popa
rorl
pop
sbb
jge
cmp
adc
adc
mov
in
and
cmp
jl
pushf
fs
jle
in
loopne
pop
dec
xor
lahf
sbb
inc
pop
addr16
dec
stc
in
pop
dec
shl
mov
sub
pop
push
std
test
xchg
jb
inc
inc
rclb
lahf
mov
stc
and
adc
sbbb
xchg
enter
ret
adc
test
js
push
fcompp
cli
out
or
jae
clc
pop
movsb
pop
jns
xchg
adc
sbb
push
outsb
push
jns
xchg
push
test
inc
lahf
mov
int3
in
push
pop
inc
cmp
add
cmp
fcomps
jns
push
add
push
cmp
dec
in
sbb
jns
cmpb
jmp
mov
push
push
rcrl
stc
imull
xchg
jl
aad
out
ret
loope
repz
js
xchg
movb
sarb
rcrl
in
push
fdivrp
or
and
mov
xchg
sub
aaa
div
xchg
push
pop
jns
andb
imul
jns
xchg
mov
push
test
repnz
xchg
jg
cmp
pop
lods
mov
notb
cld
jl
mov
sti
mov
ret
pop
jle
in
out
inc
fldcw
mov
jns
call
lahf
rorl
mov
in
push
pop
pop
dec
test
and
clc
movsb
iret
pop
daa
js
dec
pusha
sub
es
repnz
jnp
xor
call
cltd
mov
dec
addr16
xchg
push
cli
xchg
subl
scas
mov
sbb
push
pop
jns
mov
adc
push
int3
xorl
xor
xchg
xor
frstor
mov
pop
xor
addb
loopne
ds
stc
in
jne
mov
scas
fiadds
sub
jp
dec
and
outsl
int
mov
and
cli
enter
shrl
shlb
push
fisubs
std
insb
pop
psraw
mov
sbb
mov
mov
in
enter
mov
nop
out
mov
xor
scas
cmp
sbb
insl
sub
mov
in
adc
stc
in
sub
mov
in
lods
push
hlt
sub
das
mov
in
pop
cmc
xchg
push
push
jg
or
fdivrl
iret
cmp
cmpsb
sbb
jmp
das
lret
mov
jp
sahf
lods
lcall
cmpsb
pusha
loope
cmp
mov
das
mov
and
ljmp
std
mov
mov
jae
jns
sub
clc
mov
ja
lcall
lret
das
aas
in
jge
fmuls
sbb
inc
mov
xor
lea
ret
xchg
out
jbe
scas
cltd
notl
jns
outsl
int
pop
inc
imul
dec
ret
xor
popl
pop
stc
repnz
stos
mov
sub
or
das
mov
inc
lret
pusha
mov
outsb
or
mov
loop
dec
ljmp
pop
outsl
scas
sub
dec
sub
repnz
pop
call
adc
add
pop
jns
fisubs
cmp
out
call
xchg
xorl
lods
pushf
lcall
xchg
push
fwait
data16
sbb
sbb
mov
icebp
add
jecxz
das
jmp
fisubs
mov
popf
pop
mov
lods
jne
aam
xchg
push
mov
cmp
lea
mov
arpl
popa
mov
repz
lret
or
add
or
jmp
cmp
push
pop
stc
in
sti
inc
jp
pop
mov
pop
push
or
ret
outsl
repnz
mov
sbb
xor
mov
cmp
filds
cld
dec
sti
jbe
iret
jge
push
cli
add
in
inc
jp
sbb
lret
jl
add
dec
push
xchg
jnp
ds
dec
adc
call
std
cmp
and
repnz
das
xchg
aad
insl
cld
stos
cmp
mov
cmp
push
sahf
in
and
fwait
cmp
mov
faddp
jne
xchg
push
xchg
sub
cld
jb
test
xor
sbb
sbb
lret
sbb
jge
mov
leave
lret
out
pushf
repnz
push
sub
xor
rcll
mov
add
loop
cmpsl
sub
push
test
scas
test
inc
lret
mov
ds
cltd
or
push
and
sub
ret
adc
push
jg
cmp
dec
ja
loop
adc
test
stc
mov
jecxz
outsb
push
cmp
aad
test
cmpb
push
add
mov
jmp
enter
decb
jl
mov
int
sub
or
rcrl
xchg
cmp
popa
push
clc
enter
xor
inc
cmp
into
cmc
decl
sbb
jge
cmpsb
shll
stc
notl
jmp
push
mov
pop
jle
push
sub
mov
pusha
mov
lds
std
adc
das
mov
mov
mov
mov
mov
cld
cmpsl
js
lock
jle
cld
repnz
das
pushf
pop
not
cmp
jg
lcall
arpl
adc
pop
divl
and
xchg
jnp
notl
neg
sbb
xor
cmc
mov
ror
mov
xor
call
dec
cli
or
inc
push
iret
jne
nop
dec
and
lcall
push
fcom
addr16
jl
and
pusha
inc
inc
in
jbe
repnz
cltd
inc
sub
xchg
pop
jg
xchg
mov
xor
xor
call
sbb
sub
call
xor
nop
jns
out
ret
cmp
pop
stc
push
xor
add
and
jne
pop
clc
or
sbb
xor
hlt
push
pop
jns
clc
cmp
loopne
negb
push
jb
cmp
lds
popf
mov
add
jae
es
xchg
mov
mov
mov
lret
mov
imul
and
pushf
fisttps
sub
lret
das
mov
adc
movsl
sbbl
add
lds
and
xor
mov
mov
mov
lahf
jl
js
cs
std
mov
adc
adc
repnz
loopne
popf
fwait
jbe
int
aaa
push
loopne
push
ret
mul
sbb
pop
clc
enter
jno
cmpsl
xchg
ljmp
mov
cmc
xchg
mov
inc
sub
aas
sbb
nop
in
sub
cwtl
mov
sbb
xchg
push
xchg
sub
inc
and
and
insb
jl
gs
mov
sub
lret
xorb
loop,pn
dec
push
adc
lret
das
ljmp
fcoml
pop
sub
outsl
adc
pop
stc
call
mov
mov
loop
add
imul
jge
bound
inc
xchg
mov
and
ds
pop
sub
pop
aaa
mov
mov
mov
adcl
adcl
movb
adc
pop
jns
stc
lret
mov
fisubrl
add
sub
ljmp
out
push
inc
call
sbb
repnz
aas
jl
dec
and
sub
das
mov
cmpsb
imul
pop
xchg
inc
cmc
mov
cmp
repnz
inc
xchg
test
xchg
mov
ljmp
and
and
push
inc
in
jae
mov
in
cmc
out
cwtl
sarb
mov
push
mov
sub
jb
addr16
jl
lret
das
js
je
lcall
call
xorb
jns
repnz
das
add
and
cmp
lret
das
mov
cmp
into
and
xchg
das
mov
or
mov
pop
stc
repnz
sbb
imul
pop
add
sbb
jle
in
int
mov
mov
add
mov
add
xchg
pop
scas
add
xchg
mov
addr16
es
out
sbb
cld
subl
xchg
xor
orb
in
sub
jo
cmp
shrl
scas
mov
mov
ret
inc
les
repz
out
xchg
cli
scas
pop
pop
xchg
sbb
or
movsl
cld
sti
aas
lcall
roll
jl
mov
mov
mov
mov
movsb
aad
shrb
mov
stc
in
and
adc
xlat
int
mov
xchg
jle
in
pop
mov
dec
xor
jbe
je
in
pop
aad
rclb
xchg
scas
roll
fcoml
add
xchg
jge
in
jnp
aas
jmp
das
lret
push
xlat
push
and
sub
dec
and
sbb
mov
xor
push
add
dec
inc
mov
jae
ret
js
lret
inc
add
jecxz
pop
jmp
push
fimuls
arpl
mov
cltd
jne
push
addr16
pop
jns
or
pushf
mov
addr16
add
cmp
in
push
sti
pop
filds
mov
loope
cli
addl
test
jns
popf
mov
cwtl
fdivrl
cmp
push
xchg
aaa
xor
scas
cmp
sbb
and
mov
stos
pop
jmp
xor
mov
xchg
cmpsb
mov
mov
sub
xchg
jp
cli
int
stc
in
fadd
mov
andb
add
into
jmp
pop
mov
stos
ds
push
jne
jb
in
pop
xchg
rorb
jae
mov
jnp
add
mov
mov
mov
mov
cmp
popa
ljmp
pop
adc
cmp
cmp
out
mov
loopne
addr16
shrb
fbld
sbb
cli
not
mov
out
xor
xchg
dec
push
adc
mov
push
pminub
outsl
mov
pop
inc
and
mov
jbe
pop
xchg
xchg
push
les
push
or
xchg
push
pop
or
adc
int
pop
into
xchg
push
pop
jns
mov
cmpsl
out
fwait
xchg
sahf
lret
jns
push
inc
and
cli
xchg
cmp
pop
jns
xchg
repz
push
add
mov
cmpsl
adc
inc
fnstcw
mov
xor
sub
mov
in
daa
gs
adc
aas
movsl
sbb
fsubp
loopne
pop
jle
inc
mov
jecxz
pop
cmp
or
mov
mov
outsl
cltd
cmp
cli
lahf
push
mov
mov
imul
ds
sub
push
sbb
mov
cld
repnz
jl
insl
mov
stos
popa
lock
out
test
push
xchg
out
dec
fdivrl
sub
cmp
lret
fcomi
push
ss
push
idivb
cld
pop
add
subl
test
aad
clc
imul
xor
out
lods
lds
mov
mov
mov
or
loope
movsl
add
jmp
ja
loope
rorb
out
gs
pop
das
idivb
mov
pushl
and
scas
mov
xor
cmpsb
xchg
jo
in
jle
neg
outsl
outsl
mov
inc
mov
inc
in
das
jmp
pop
inc
sbb
fists
mov
popf
inc
push
push
dec
mov
inc
movsl
push
pop
jns
inc
add
pushf
xor
in
int
pop
jns
xchg
loope
mov
and
nop
mov
jns
xchg
push
sbb
inc
fld
add
rolb
push
pop
or
lods
xor
add
fdiv
mov
dec
mov
icebp
repnz
and
dec
sbb
imul
sbb
xchg
pop
ds
cmpsl
dec
pop
inc
xor
imul
loope
mov
mull
cmp
lret
mov
cmpsl
js
je
cmp
xchg
add
push
fldt
ret
es
outsl
cld
cmp
std
mov
or
lret
mov
sbb
xchg
movsl
and
adc
or
pop
dec
and
sub
mov
cmp
mov
jge
cs
rcll
inc
adc
jbe
repnz
das
imul
mov
fsubl
test
iret
mov
imul
push
pop
outsl
or
pop
aaa
fwait
in
lock
enter
and
jb
push
ret
sbb
jl
fcoml
lds
std
adc
addb
inc
pop
insl
jp
jp
sbb
dec
xor
jns
xchg
push
or
pop
punpckldq
insl
xchg
jg
pop
and
add
arpl
mov
jp
ds
insl
idivb
dec
iret
push
das
decl
cmpb
pop
mov
dec
lock
jecxz
xchg
hlt
xchg
scas
test
aaa
push
popa
mov
xchg
push
xor
stc
repnz
pushf
inc
push
mov
and
mov
in
jg
test
out
mov
cmp
lock
and
fisttpl
pop
jle
in
outsl
mov
inc
sub
adc
notl
mov
push
ret
mov
and
jecxz
ret
adc
pusha
aam
cs
pop
jle
in
cmp
aas
mov
pop
loop
jl
in
inc
push
push
push
in
mov
mov
int3
add
pop
divl
inc
in
imul
pop
sbb
lock
xchg
jno
jns
add
mul
cmpsb
and
ljmp
dec
pop
sarb
xchg
pop
stc
enter
mov
pop
daa
es
inc
sub
insl
push
pop
sbb
inc
mov
scas
mov
hlt
xor
test
cmp
repnz
cmp
fwait
mov
and
scas
jle
jno
cmp
stos
lret
mov
cmp
mul
insb
xchg
sub
leave
pop
fisubrs
pop
aad
jb
push
mov
push
stc
or
jle
jmp
xlat
fcmovne
and
ljmp
xor
and
dec
notl
push
pop
jns
push
clc
mov
lods
xchg
push
stos
jl
push
pop
jns
cmp
daa
cmp
jecxz
pop
mov
xchg
add
imul
sbb
mov
push
mov
lcall
in
push
pop
shrb
pop
call
pop
cmp
dec
cmp
push
aam
loope,pn
shrl
jns
xchg
push
xor
mov
pop
nop
out
mov
in
push
pop
loope
outsb
xor
rorb
pop
mov
gs
mov
sahf
movq
lret
shrb
js
aas
inc
stos
call
xchg
rclb
lret
and
xor
mov
movsl
flds
in
push
in
test
fdivrl
jg
lcall
shlb
mov
sahf
pop
nop
shr
xor
das
mov
fucomp
ljmp
inc
int3
or
jns
mov
outsl
repnz
lret
das
lcall
xor
and
pop
fwait
iret
cmp
cld
repnz
push
cltd
shlb
scas
movsl
repnz
jnp
fdivrs
out
shll
popa
mov
sahf
cld
repnz
das
push
push
imul
pop
mov
ds
mov
cwtl
pop
in
jns
cmp
insb
mov
in
or
scas
notl
pop
and
inc
xchg
adc
jle
mov
sub
add
imul
mov
in
lret
dec
into
mov
ficoms
lahf
mov
or
scas
mov
xchg
stos
sub
gs
fsubrp
aas
mov
mov
inc
push
mov
cmc
xchg
orl
aas
sub
out
xchg
push
pop
jns
push
jp
outsl
jmp
xchg
sbb
cmp
push
pop
jns
sti
inc
ds
ret
jnp
ret
pop
jns
xchg
xchg
addb
xchg
mov
and
dec
fdivrs
popf
out
pop
sbb
lea
sub
cwtl
pop
xchg
mov
xchg
loope
stos
or
and
in
iret
push
and
jmp
jae
mov
sti
sub
xchg
pop
mov
add
imulb
jns
stos
movsb
imul
sahf
mov
cmp
jns
mulb
test
ret
cmpsb
aaa
and
xchg
push
pop
or
mov
icebp
in
and
filds
add
jb
fdivs
xchg
pop
jle
xlat
add
push
and
and
pop
loopne
cmp
lods
add
decb
dec
les
push
jns
jne
sub
lods
add
dec
mov
jae
dec
data16
xchg
aaa
lea
push
scas
movsl
ret
les
in
pop
jg
xchg
fsub
mov
fsubrs
push
stos
pop
sbb
jns
shrb
repnz
aam
inc
add
xchg
xchg
sbb
in
push
pop
jns
fs
cmp
add
pop
adc
push
pop
jns
xchg
repnz
pusha
mov
sbb
add
ret
pop
xor
lahf
push
scas
repnz
aas
xlat
mov
scas
in
mov
cmp
loopne
das
mov
pop
lret
inc
mov
or
mov
jne
pop
mov
movsb
cmp
cmp
or
cmc
sarb
xchg
add
add
test
enter
cli
rclb
aaa
les
push
adc
pop
jns
decb
and
test
fcmovbe
insb
loopne
int
jns
xchg
sbb
sbb
cltd
push
sub
das
lcall
and
rcrl
mov
pop
stc
repnz
jg
aas
imul
mov
cmp
mov
in
mov
and
scas
push
mov
and
pop
jns
or
scas
or
inc
jnp
pop
jns
xchg
shrb
movsb
aaa
dec
jne
outsl
push
inc
push
jb
xchg
push
test
insb
xchg
fstpt
adc
dec
inc
stos
aad
scas
aad
sub
in
dec
xor
enter
adc
lock
xchg
mov
cltd
add
scas
std
xchg
mov
jge,pt
rorb
cmp
in
cmpb
dec
pop
into
outsb
jge
lret
adc
lahf
mov
or
scas
mov
adc
push
mov
sub
and
jecxz
popl
hlt
push
sub
pop
int3
sti
or
mov
jp
fldl
in
mov
shlb
loop
lret
repz
movsb
sbb
and
jge
lds
dec
filds
jae
sub
push
lods
cmp
lods
xchg
loop
rolb
imul
xlat
push
pop
into
and
aas
jnp
cmp
xchg
inc
pop
cmp
mov
push
cmpsl
aam
lret
das
decl
mov
jb
cmpsb
test
bound
push
pop
add
mov
add
orb
jmp
movsb
dec
lods
fidivs
mov
mov
lods
mov
in
popf
das
xor
sbb
fcompl
popl
mov
push
sbb
ja
jns
dec
fsubl
sbb
in
jns
pop
jo
fs
xchg
inc
ss
flds
cli
mov
xchg
lret
ret
out
adc
sub
pop
pop
je
or
fidivs
sub
das
sbb
jecxz
popfw
subb
sub
mov
pop
ljmp
xor
iret
rclb
stc
in
xchg
mov
mov
test
xchg
jg
and
mov
pop
push
pusha
leave
push
scas
lock
repnz
push
daa
sub
xor
xor
lret
mov
jl
xor
frstpm(287
add
sub
jecxz
out
fnstenv
out
jb
dec
inc
jl
out
xchg
lahf
adc
cmp
adc
inc
inc
out
sub
mov
aam
sahf
daa
xchg
or
push
or
repnz
imul
mov
sub
mov
jnp
and
das
or
ljmp
das
mov
cltd
lahf
test
int
cmp
lret
sti
pop
adcl
push
mov
sbb
in
jg
jmp
or
or
cltd
push
add
pop
shll
jle
bound
adc
xor
nop
and
jg
enter
daa
mov
data16
dec
inc
mov
movsl
je
xor
ss
xchg
or
dec
mov
lods
mov
insb
sti
jne
aas
pop
je
fsub
xchg
jg
xchg
xchg
add
popl
mov
stc
in
int3
push
inc
divb
aad
das
pop
pop
jle
in
xor
daa
sbb
xor
mov
repnz
sub
ds
dec
or
xchg
repnz
inc
pop
iret
int3
mov
ja
in
add
das
mov
mov
xor
inc
dec
rcl
into
fs
pop
sub
and
jg
orl
dec
jbe
outsl
es
inc
insb
in
ja
aaa
repnz
pop
mov
xchg
push
pop
jns
pop
aas
inc
and
cwtl
cli
add
jae
push
pop
jns
lods
jb
mov
mov
outsb
js
xor
fs
xor
cld
push
jns
insb
das
lret
and
ja
push
fdivl
pusha
in
das
lahf
repnz
xchg
movsl
cmp
xor
inc
repnz
cmp
imul
mov
push
and
popf
movntps
popa
xchg
adc
sti
imulb
ds
inc
loopne
cmp
and
insb
ret
jge
fsts
shl
lret
lret
and
jae
push
filds
cs
sub
or
in
cmpl
pop
call
push
xor
xchg
push
mov
gs
xor
shrl
cmp
and
xchg
loop
movsl
jns
jge
adc
dec
out
stos
out
and
push
pop
aad
cmp
mov
sub
pop
jle
ja
or
cmpsl
shll
jns
loopne
lea
outsl
cmc
test
push
pop
repz
pop
jne
mov
or
jle
in
push
pop
jp
mov
andb
xchg
push
mov
jbe
ret
movsl
inc
outsb
and
mov
dec
das
incb
lret
mov
mov
push
adc
sbb
lret
das
mov
test
aad
stos
aam
lret
das
mov
movsb
jno
lret
pushf
push
pop
stc
repnz
stos
xchg
mov
lret
lret
cmp
in
push
xor
test
lock
ja
xchg
mov
ja
ja
xor
sahf
sub
shrl
stc
in
pop
pop
xchg
inc
movb
jo
repnz
and
cli
xor
ja
pop
adc
fisubrs
pop
pop
jle
in
icebp
xor
icebp
cs
outsb
cmc
int3
sbb
jg
movsl
jg
dec
cmc
push
lahf
enter
xlat
xlat
dec
fbstp
mov
jmp
pop
lret
addr16
pop
adc
xchg
push
std
aad
sbb
or
mov
in
push
daa
push
sub
icebp
xlat
push
repnz
jp
dec
call
es
inc
adc
and
scas
mov
adcb
gs
out
repnz
and
and
lahf
xchg
addr16
lods
xor
testl
cld
insl
std
push
add
mov
sub
in
jmp
or
mov
add
xlat
mov
jl
dec
jne
daa
jne
loope
into
bound
nop
jle
in
sub
xchg
xchg
push
or
mov
adc
xchg
pop
mov
xor
dec
cmc
xchg
push
ficoms
fcmovu
fisubrl
jb
test
push
sub
mov
daa
test
rorb
inc
shlb
pop
daa
mov
sub
out
sub
adc
les
je
insl
lahf
test
fidivrl
mov
dec
int
sbb
or
dec
or
lret
out
cmp
lcall
lret
jbe
insl
or
dec
push
sti
ja
cmpsb
xchg
sub
xor
pop
cmp
mov
pop
es
in
jnp
inc
adc
scas
mov
pop
fcoml
add
inc
addr16
daa
xchg
and
stc
frstor
sub
hlt
rolb
cmp
lret
sub
push
cmp
cmovbe
repnz
pop
mov
push
adc
push
mov
stos
repz
cmp
sub
fldenv
mov
leave
lret
insl
xchg
push
inc
jmp
xchg
ja
push
and
add
mov
inc
jecxz
mov
push
and
sti
pop
lret
dec
mov
and
jns
inc
adc
nop
fisttpl
cld
repnz
mov
lcall
cmpsb
out
scas
les
pop
ds
enter
out
dec
xchg
add
dec
addr16
mov
sub
testb
jb
dec
xor
dec
push
pop
jns
dec
arpl
loop
pop
and
lock
jp
cmpsb
loopne
and
jns
outsl
xlat
inc
mov
jmp
jns
xchg
xor
adc
xor
xchg
jg
outsb
inc
mov
mov
data16
xchg
pop
jle
inc
mov
aam
cli
and
add
leave
mov
xor
pop
xor
fiaddl
sbb
clc
enter
repnz
add
iret
push
enter
cmp
int3
adc
mov
xor
pusha
and
push
mov
test
jns
xchg
push
call
lret
imul
xchg
push
inc
sub
add
imul
sub
jae
scas
loopne
imul
sbb
and
add
popf
stos
push
sub
repnz
repnz
fstl
cmp
fwait
negl
and
das
mov
movsl
fsubrl
mov
das
mov
stc
int
inc
xor
dec
test
cld
repnz
push
xor
cld
int
shlb
stc
in
jg
dec
sbb
insl
gs
fcoml
xchg
pop
jle
inc
adc
dec
enter
ficoms
jecxz
sahf
jb
dec
iret
adc
mov
sub
cwtl
sar
insb
in
inc
xchg
test
pop
jns
xchg
cmp
and
shlb
out
mov
pusha
mov
push
stos
test
dec
and
aas
test
xchg
sti
fs
sti
jo
sbb
loop
push
push
stos
jmp
sbb
or
mov
cmpsl
push
out
sub
cmp
push
in
sub
mov
daa
pop
or
jg
jnp
dec
orps
push
fucomip
movsl
mov
das
mov
adc
mov
xor
das
mov
aaa
sub
int
add
add
das
mov
iret
lahf
imul
mov
jmp
lret
cmp
sbb
sbbl
rcrl
push
xor
sub
pushl
lahf
arpl
in
pop
jle
sbb
cmp
inc
xchg
jo
jl
or
mov
in
pusha
add
xchg
mov
mov
jae
in
push
stc
inc
mov
mov
xor
pop
jle
pop
aaa
adc
and
mov
mov
push
les
or
cmp
push
inc
xor
in
enter
xorl
hlt
enter
popl
call
bound
repnz
das
jg
movsb
lea
mov
and
xchg
das
mov
push
jle
push
push
and
in
or
push
push
insl
dec
or
jns
push
push
fmull
cltd
aas
dec
je
das
mov
push
call
inc
mov
push
push
mov
lret
jb
add
xor
scas
idivl
dec
inc
mov
pop
pop
repz
shll
xor
push
fidivrs
and
add
add
test
scas
push
sahf
jge
cmp
cld
popa
sbb
imul
mov
mov
fnsave
push
push
xor
inc
dec
and
xchg
das
mov
in
mov
cwtl
pmuludq
test
push
in
insb
in
pop
decb
in
jbe
mov
ljmp
pusha
push
inc
loop
orb
xchg
aaa
mov
pop
jle
in
pusha
xor
xchg
add
xor
cmp
push
sti
xchg
jmp
sbb
lret
aas
jecxz
cmp
jmp
mov
repnz
mov
add
int3
mov
int3
imul
mov
cmp
adcl
dec
lret
das
mov
xchg
fcmovnu
sub
addr16
sub
in
adc
mov
push
xchg
sub
inc
xor
push
repnz
ret
loop
xchg
push
mov
lret
mov
and
testl
stos
xor
sub
sarl
xchg
dec
push
test
mov
xchg
notl
hlt
fmull
sub
jns
in
jo
mov
notb
sub
jle
addr16
lds
enter
repnz
pop
lods
and
inc
stos
dec
push
cmp
idivb
repnz
mov
cmpb
adc
mov
movsb
scas
mov
in
lea
insb
adc
jg
in
push
pop
jl
jmp
xor
push
pop
jns
xchg
sahf
xchg
and
outsl
inc
rorb
icebp
adc
push
pop
enter
and
sti
stos
jmp
rol
push
pop
jns
jo
inc
cmp
push
scas
cmc
xor
fdivs
jle
popa
add
lods
adc
adc
in
jb
mov
ds
xchg
das
mov
call
inc
lods
lret
ss
sahf
mov
sahf
jae
or
stc
in
inc
fbld
adc
shl
test
in
pop
jle
rolb
call
mov
inc
jle
inc
cli
mov
pop
dec
jp
cltd
aad
xor
xchg
mov
xchg
and
sbb
repnz
repz
decl
mov
push
enter
ljmp
inc
pop
arpl
pop
jns
jmp
jle
icebp
sbb
stc
test
mov
or
pop
jge
mull
loopne
add
and
stc
jg
ja
cmp
jnp
and
jns
loope
jp
adc
loope
movsb
lret
notl
add
adcb
pop
jle
pop
stos
sub
lret
popa
xchg
bound
mov
sbb
lret
inc
icebp
and
or
push
and
mov
imul
ja
xor
pop
stc
mov
shrl
dec
pop
call
cs
notl
or
lea
jp
xlat
mov
stos
xlat
into
hlt
adc
lock
mov
mov
cmp
push
cmp
push
or
outsl
jge
xor
enter
icebp
and
fiaddl
sbb
aas
inc
mov
int
pop
xchg
push
cmpsb
mov
push
das
mov
inc
pop
test
les
enter
call
sub
mov
arpl
hlt
cs
negb
das
mov
pop
jmp
mov
sub
repnz
inc
mov
aad
stos
hlt
fsts
stc
in
test
dec
jge
push
out
repnz
dec
popa
mov
lds
xchg
jp
sub
dec
fildl
lret
in
push
pop
fsubl
dec
in
ret
cmpsl
xor
jns
pop
ja,pn
jl
mov
mov
ja
mov
scas
mov
jb
iret
push
jo
adc
xchg
push
lock
loopne
sbb
mov
adc
ficomps
inc
pop
mov
inc
add
dec
jb
xchg
push
push
sbb
sub
fcmovbe
scas
push
mov
jle
out
roll
lret
fmuls
dec
dec
xchg
or
and
dec
adc
mov
inc
jmp
in
hlt
inc
adc
repz
lea
outsb
test
adc
mulb
push
cmp
movsb
inc
or
imulb
outsl
gs
pushl
inc
jecxz
dec
push
ss
cmp
mov
cmpsl
in
mov
xchg
and
sti
mov
mov
adc
pop
sub
repnz
add
or
mov
clc
popf
adc
jp
loop
jmp
or
push
pop
jns
sahf
shl
lea
cli
enter
and
xchg
xchg
test
fiadds
popf
lret
push
add
inc
sbb
in
stc
lret
ss
mov
ss
cmp
in
adc
in
insb
inc
pusha
add
xchg
leave
xchg
jl
mov
iret
jae
dec
push
sbb
lea
shll
outsb
jmp
lcall
xchg
imul
pop
jbe
sbb
leave
scas
inc
mov
lods
xor
sub
lret
jecxz
mov
movsb
pop
add
xchg
cli
movsb
div
lret
out
adc
es
sub
mov
mov
cmp
mov
das
scas
in
cmpsl
stc
in
jg
xorb
mov
ja
loopne
xchg
pop
jle
push
pop
addr16
adc
push
pop
and
lcall
stc
les
mov
jmp
test
cld
repnz
mov
push
sub
pusha
adc
jge
xchg
das
into
bound
lock
sub
add
negl
xchg
outsl
test
mov
std
out
mov
sbb
out
xchg
or
adc
xor
ljmp
xchg
mov
test
sub
sti
xchg
jmp
inc
pop
cmp
aad
mov
iret
sbb
jle
enter
pop
cmp
fucom
notl
lret
lock
mov
out
inc
mov
add
mov
and
cmp
dec
push
jb
mov
dec
pop
fistpll
dec
leave
das
shr
jle
repnz
enter
addr16
shlb
and
cmp
out
or
shr
gs
in
jg
mov
shl
repz
cld
push
fisttpll
pop
jle
xchg
push
fmull
dec
sub
xchg
sub
scas
repnz
jl
test
xchg
mov
adc
push
sti
sub
jmp
mov
movsl
pop
xor
repnz
lods
lahf
inc
scas
movsb
fs
insb
jg
pop
ds
movsb
adc
ljmp
cld
repnz
xchg
sbb
mov
jmp
sub
xchg
jg
rcr
lds
jp
xchg
jl
xlat
xchg
pop
jle
rcll
cltd
sub
and
xor
lds
sub
mov
lods
imul
in
cli
stc
in
and
sub
jle
xchg
sbb
mov
lcall
iret
xchg
insb
cmp
sti
push
mov
mov
jecxz
sub
and
adc
push
insl
ficomps
clc
repnz
test
loope
out
push
ret
push
sub
and
cld
sti
dec
fildl
push
mov
push
mov
mov
repnz
das
push
leave
push
ljmp
int
lret
das
mov
jg
mov
or
lret
das
mov
pop
loop
mov
mov
das
mov
lods
insb
sbb
add
lret
lods
adc
insl
pop
and
enter
mov
xchg
sbb
mov
inc
jle
push
mov
jbe
pusha
xchg
aaa
movsb
les
pop
xchg
pop
cmp
lock
sbb
inc
aaa
mov
filds
cld
mov
ret
test
adc
in
pusha
cmc
push
sbb
ret
jl
out
and
adc
fdivs
adc
mov
imul
or
mov
ja
mov
mov
bound
filds
and
fistl
js
mov
jg
stc
fs
enter
add
aad
lret
mov
pusha
jo
pusha
sub
movsl
dec
sub
hlt
add
cmp
cli
insb
int3
or
cmp
mov
add
in
scas
pop
jmp
mov
lret
cmp
mov
loope
xlat
cmpsb
das
mov
jge
add
xor
fs
out
inc
mov
jle
js
pmulhuw
pop
jb
out
xchg
sub
mov
xor
or
jmp
xchg
add
ljmp
xchg
cs
push
or
push
mov
mov
outsl
push
outsl
dec
sbb
xchg
push
pop
in
bound
stc
or
es
push
pop
jns
rcrl
pop
stos
jbe
outsb
sub
rclb
jns
dec
mov
ds
adc
repnz
ret
lahf
dec
sub
jle
lret
mov
repnz
sti
xor
jge
lahf
cmp
mov
and
das
sbb
mov
cltd
imul
lahf
mov
les
xchg
hlt
add
mov
repnz
pop
add
insl
addr16
adc
ss
fsubr
sub
jle
scas
mov
xchg
jns
cli
sarl
scas
ds
mov
les
push
mov
mov
daa
jmp
inc
add
in
stc
das
mov
and
pusha
mov
push
pop
adc
cltd
inc
mov
fcmovbe
xchg
in
jle
in
dec
pop
mov
sahf
fisubrl
mov
in
out
fisubrl
filds
faddp
roll
cmpsb
mov
ss
cmp
stc
in
ret
add
and
xchg
jl
in
add
mov
jle
jns
repnz
mov
sbb
xchg
movsb
mov
movsl
lret
das
mov
insl
jl
stc
and
jl,pt
pop
stc
bnd
addr16
insb
mov
inc
adc
xor
stc
in
sti
lock
scas
sbb
push
repnz
pop
pop
lret
or
iret
mov
test
adc
cltd
or
adcb
in
push
cmpl
sub
jns
xchg
stos
cmc
pop
ret
mov
jo
jns
xchg
push
aad
cmp
scas
mov
push
pop
xlat
mov
clc
inc
andl
int
xor
popa
aaa
loope
xchg
cs
pop
jns
or
in
and
movsb
adc
xchg
add
mov
out
inc
xor
pop
loope
cmpl
push
test
adc
aaa
mov
jg
adc
cwtl
add
cmp
pop
jle
jbe
xchg
sbb
and
fnstenv
in
aad
rolb
push
outsb
lahf
cltd
jle
in
pop
lock
or
lahf
repnz
pop
or
add
xchg
ja
ds
xchg
jecxz
xor
xchg
imul
xchg
lret
inc
jae
push
test
mov
jmp
pusha
xchg
jns
xchg
notl
mov
outsb
inc
inc
ret
pop
fsubrl
jo
pcmpgtb
mov
enter
gs
or
fimull
cmpsl
hlt
xchg
and
fwait
dec
adc
sub
add
xchg
and
xchg
push
jle
cwtl
push
cli
imul
jnp
and
stc
test
fldenv
mov
mov
push
adc
or
mov
imul
mov
cmp
fists
mov
repnz
das
fwait
je
pop
lock
daa
je
leave
mov
test
mov
jno
std
jb
xchg
jmp
data16
jl
dec
cli
shrb
outsl
or
push
sbb
jp
push
inc
imul
inc
aam
nop
xchg
psllw
das
je
cmp
mov
pop
jns
lea
mov
out
mov
push
clc
dec
mov
mov
add
xchg
xchg
das
mov
mov
js
add
nop
xor
jge
repnz
stos
cmp
hlt
mov
pop
pop
xor
jp
fs
jne
repnz
push
fiadds
cli
incl
xchg
or
sub
pop
jns
xchg
cmp
push
pop
push
test
pop
pop
aam
arpl
jno
xchg
push
lock
dec
xorl
push
popf
movsl
dec
jle
cmp
sbb
pop
jns
ss
sbb
jns
cmp
in
jg
rcrb
cmpsl
aaa
aaa
aaa
hlt
inc
in
sahf
sbb
icebp
sbb
enter
out
inc
push
pop
jns
jns
enter
lock
add
jle
in
dec
cmp
mov
shr
cmp
fdivl
stc
in
pop
aas
cmp
fiaddl
lar
jmp
sub
je
pop
cmp
and
jb
push
xchg
push
lret
inc
push
mov
pop
mov
xor
das
mov
push
jns
icebp
pop
aam
jmp
pop
stc
repnz
inc
fistps
ss
jmp
mov
pop
imul
jmp
enter
cmpl
test
add
xchg
pop
jle
js
jg
jmp
inc
stos
xor
xchg
and
stc
jae
int
sbbb
movsb
cld
sti
in
in
int3
jmp
sti
out
movsl
adc
js
hlt
xchg
das
mov
or
hlt
push
push
lea
scas
mov
ret
jle,pt
dec
cmp
sti
enter
loope
fisubl
cmc
xor
sahf
push
pop
xor
add
jbe
das
lcall
popl
dec
pop
js
inc
mov
repnz
dec
xor
jae
xchg
cmpsb
insl
mov
push
jg
ret
xlat
mov
sbb
lret
mov
fsts
and
mov
cld
repnz
cmp
in
and
les
test
or
aaa
mov
ja
invd
xchg
stos
sbb
xchg
push
pop
jns
pop
rorl
arpl
xchg
jge
in
mov
aaa
sti
xchg
call
repnz
enter
xchg
test
outsl
mov
xlat
mov
jns
or
and
mov
repnz
mov
js
push
scas
sbb
sbb
cld
repnz
das
imul
inc
std
inc
sub
repnz
das
mov
pop
sub
lret
dec
ret
enter
mov
xor
xchg
imul
stc
negl
fwait
pop
inc
add
mov
inc
cmpsb
jle
in
imul
lock
jnp
jmp
inc
jmp
rcll
adc
push
pop
jns
and
iret
mov
inc
mov
repnz
lods
nop
xor
lret
lea
pushf
and
mov
das
movaps
and
pop
xorl
sbb
xor
xchg
pop
jle
std
mov
lods
and
mov
mov
repnz
inc
aaa
push
xchg
mov
lret
mov
jae
inc
arpl
out
sub
fildl
ret
ljmp
xchg
imul
rorb
repz
or
sbb
mov
jae
gs
repnz
int
add
mov
dec
decl
push
cmc
adc
aaa
stos
sbb
jns
xchg
inc
in
mov
jae
lods
inc
mov
in
push
int3
xor
lret
test
mov
sbb
fdiv
jmp
pop
jle
in
fists
out
xor
insl
pop
in
xor
xchg
stc
adc
cmpsl
int
cld
gs
mov
bnd
and
sub
in
stos
pushf
test
mov
mov
lret
dec
xchg
jb
out
pusha
stc
loopne
repnz
and
rcrb
repnz
das
mov
orb
fstl
in
pop
jns
cmp
mov
ficoms
xchg
jns
xchg
push
daa
dec
cmpsb
loopne
or
pop
jne
xchg
push
pop
mov
cmp
jecxz
and
stc
js
xchg
push
pop
jns
jge
ffreep
imul
jns
aam
stos
mov
imul
dec
push
pop
jns
xchg
sbb
aam
pop
cmpsl
push
fwait
icebp
jns
xchg
push
pop
icebp
xchg
mov
adc
notl
xchg
push
pop
push
xchg
lret
or
lods
mov
fists
cmp
repnz
mov
popf
jmp
cmc
inc
mov
cld
mov
les
loope
sar
setg
scas
mov
mov
inc
push
pop
jp
mov
adc
movsb
clc
xor
lea
icebp
repnz
mov
cmp
dec
jg
imul
movsb
mov
cmpsl
sub
pop
and
and
push
fimuls
fists
or
mov
in
mov
nop
hlt
rcrl
scas
loope
jns
xchg
push
fsubs
jnp
lcall
in
push
pop
lea
sub
dec
aad
pop
xchg
push
pop
jns
inc
sub
xchg
lods
xchg
rcrl
inc
or
jns
sbb
sub
cmp
xor
and
inc
mov
xchg
lret
mov
cmp
rorl
scas
mov
inc
xor
jge
imul
cwtl
dec
cld
repnz
mov
inc
cwtl
cmp
adc
sbb
in
das
mov
lahf
inc
mov
sbb
jge
jne
mov
leave
mov
aas
enter
mov
arpl
xchg
mov
xor
and
daa
ficoms
push
jns
xchg
pop
cmpsl
jne
dec
pusha
loope
clc
stc
adc
adc
in
push
jmp
insb
cmp
outsl
popa
cmp
arpl
ja
add
lret
push
sbb
inc
dec
sbb
fisubrs
mov
arpl
lret
mov
rcrl
adc
outsb
cmp
mov
xchg
fs
sub
jnp
or
push
lret
mov
xor
pop
adc
and
fimuls
enter
imul
data16
das
push
daa
mov
cmp
jmp
aad
or
fcmovne
mov
lret
xor
lods
sub
sub
inc
in
cmpsl
cmp
cld
out
sub
sbb
das
ljmp
push
int
rorl
or
push
xchg
and
insl
sub
loopne
clc
jae
inc
popf
mov
inc
jp
lret
dec
mov
xchg
movsb
ret
in
push
fsubp
inc
dec
xor
push
popf
mov
inc
inc
push
pop
jns
xchg
movsb
push
jne
lods
push
pop
xlat
enter
mov
sub
loop
xor
jns
xchg
aaa
sbb
pop
loop
inc
mov
in
push
pop
enter
mov
xchg
pop
mov
popa
mov
ret
sub
xchg
inc
cld
repnz
das
or
pop
mov
daa
int3
pushf
into
shlb
mov
push
mov
cmp
mov
adc
cmp
lea
xchg
push
mov
push
lahf
mov
lock
mov
push
pop
in
je
jbe
mov
pop
jns
loope
adc
outsb
jns
mov
pop
addr16
test
and
nop
imul
cld
repnz
cmpsb
loop
sti
jmp
adc
and
notl
sbb
sbb
dec
mov
cmp
loop
dec
and
cld
bnd
mov
xchg
mov
sbb
cmpsl
push
jecxz
push
loopne
pop
test
lret
out
and
push
out
sarl
test
lret
mov
int
insb
dec
jae
insl
push
fcompl
cli
enter
je
and
loop
push
fbstp
mov
ja
ficomps
clc
xchg
jge
pop
jle
in
outsl
xorb
test
xor
jle
in
je
sub
test
jae
xlat
dec
mov
in
mov
push
sahf
mov
push
in
jg
roll
mov
cs
add
das
enter
jle
out
mov
scas
jno
xor
cwtl
aas
jp
pop
jle
cmp
movsb
jge
adc
insl
mov
stc
in
js
imul
test
xchg
pop
sub
mov
cmp
repnz
pop
jb
inc
fdivr
loop
push
je
in
das
ds
inc
mov
cmpsb
repz
cld
repnz
mov
mov
cmp
and
scas
or
test
dec
mov
cltd
and
aaa
xchg
adc
mov
arpl
and
add
repnz
ljmp
mov
loope
repnz
jns
ss
cmp
sub
mov
push
cmp
into
mov
jb
mov
inc
mov
shrb
mov
and
fiaddl
xchg
xchg
push
pop
push
mov
push
push
loop
sbb
mov
mov
sbb
fwait
and
mov
ds
mov
outsb
test
mov
xchg
cld
repnz
das
dec
add
nop
inc
ss
cld
and
adc
insb
loope
pop
jecxz
jge
lahf
push
xorps
inc
or
adc
jns
xchg
lcall
jmp
jmp
in
push
and
dec
push
mov
push
enter
inc
inc
js,pt
ror
insl
jo
repnz
mov
mov
mov
movl
mov
xchg
aad
andb
pop
jbe
repnz
cli
nop
test
jnp
mov
std
mov
std
cmc
xchg
inc
ds
scas
xor
push
sti
daa
xor
lret
sub
lods
inc
and
pop
xor
mov
mov
decb
jge
xchg
in
movsb
push
fidivs
cld
repnz
das
test
addr16
movsb
sub
cmc
enter
sub
inc
mov
daa
inc
sub
in
scas
add
dec
hlt
scas
cli
fistps
pop
cmc
mov
mov
stc
in
pop
stos
sbb
scas
sbb
cs
sbb
pop
jle
fsubs
push
add
pop
mov
mov
push
inc
sbb
mov
fisubs
jns
icebp
xor
push
jno
ret
out
outsl
xlat
mov
jns
xchg
mov
inc
mov
sub
fimuls
dec
mov
and
icebp
mov
aam
dec
push
xchg
inc
shl
adc
jg
sahf
xor
xchg
fdiv
lret
int3
or
shll
adc
mov
loop
pop
push
sub
movsl
xor
repnz
jno
push
mov
shll
in
pop
clc
xor
or
or
dec
pusha
out
and
jbe
repz
jmp
mov
das
mov
or
pop
push
mov
dec
jmp
mov
pop
sbb
mov
adc
add
lret
das
xchg
xor
pop
xchg
shll
mov
test
hlt
add
mov
das
inc
insl
mov
data16
jg
mov
fidivrs
fldt
jmp
dec
mov
repnz
jbe
mov
les
lret
and
imul
mov
mov
inc
into
pop
push
adc
scas
mov
inc
rcr
jg
xchg
sub
xchg
push
scas
mov
fistpl
cmp
lock
jmp
stos
addr16
fbld
pop
adc
jmp
inc
test
jbe
in
pop
mov
adc
cmp
scas
clc
pop
mov
iret
inc
enter
mov
fisubrs
xchg
jmp
das
mov
push
cwtl
sti
mov
add
test
pusha
cmp
lret
mov
cltd
ret
pop
xor
sub
sub
push
or
in
insb
lret
mov
jae
push
leave
sbb
cmc
inc
pop
stc
repnz
into
or
test
cltd
jecxz
popa
push
je
stc
in
in
addr16
rorb
adc
cmp
sar
in
pop
mov
pmuludq
in
pop
jle
lea
adc
popl
lcall
pop
add
fistpll
sarl
stc
in
and
movsb
push
add
mov
or
and
stos
xlat
enter
push
pop
mov
fstps
push
pop
jns
push
stos
jg
push
xchg
lret
popa
dec
or
lahf
pop
pop
jns
ss
adc
out
jmp
push
mov
xchg
jg
jo
mov
subps
jle
pushf
sbb
and
repnz
mov
inc
mov
push
push
cmp
dec
jnp
and
xor
lret
das
push
mov
hlt
das
xor
loope
jns
cld
sti
leave
pop
pop
xchg
jmp
mov
sbb
outsb
xchg
shr
fldenv
lret
das
mov
or
arpl
inc
mov
adc
pop
test
and
jns
ljmp
push
fimuls
test
add
pushf
int3
mov
pop
cli
jb
xchg
pop
xchg
jle
arpl
mov
push
fiadds
shl
inc
call
aad
scas
mov
ds
cs
xor
cmp
insb
repnz
mov
xlat
jnp
mov
xchg
cltd
push
lcall
jno
sbb
xor
sub
scas
mov
or
hlt
pop
popa
jmp
test
int
cmc
xchg
push
pop
jns
push
adc
lret
sub
and
movsb
xor
hlt
adc
lret
xchg
nop
jl
jno
adc
iret
adc
mov
test
or
repnz
jmp
or
jns
xchg
push
xchg
dec
bound
xchg
push
pop
stos
cmpsl
inc
loop,pn
adc
adc
xchg
jg
fs
loop
push
or
add
jge
mov
dec
repz
pop
xor
mov
in
fistpll
mov
popa
dec
and
mov
popl
adc
lock
lret
pop
jns
sbb
pusha
in
jnp
aas
xchg
pop
iret
xor
xchg
push
icebp
incl
mov
sbbb
cmc
lds
adc
pop
jns
lods
xchg
lods
movb
les
in
push
test
mov
push
cmp
das
aad
sbb
pop
pop
adc
std
and
mov
pop
add
shrl
xchg
ja
mov
cmp
push
pop
jns
jg
je
sub
in
mov
jle
notl
mov
xchg
repz
ljmp
nop
inc
jle
fnsave
and
jle
xor
cs
xor
mov
pop
jle
nop
inc
shl
in
in
lahf
arpl
pop
push
xchg
push
stc
in
daa
decb
push
arpl
push
in
inc
mov
mov
in
mov
icebp
std
jae
in
aam
dec
dec
in
pop
and
jecxz
cmp
ja
rcl
ja
dec
and
stc
test
and
leave
push
push
and
imul
shll
xchg
sub
loopne
mov
xchg
push
adc
sub
xchg
xchg
push
pop
scas
ja
mov
add
pushf
mov
mov
ret
adc
pop
call
lds
inc
mov
test
inc
mov
das
mov
movsb
scas
pushf
pop
cltd
jle
out
xchg
das
mov
in
cmp
pop
repnz
jl
div
push
push
sahf
jmp
test
pop
cmc
mov
cld
sti
enter
ljmp
or
pushf
enter
jb
sub
cmpsb
mov
sbb
in
pop
inc
jns
cmp
or
jg
stc
jnp
adc
repnz
mov
jae
stc
in
lahf
popa
loopne
enter
gs
mov
mov
sub
push
cmp
xchg
pop
jle
and
cwtl
loope
xchg
iret
sub
pop
sbb
and
mov
enter
lods
mov
and
push
fimuls
mov
jle
in
lea
xor
pop
dec
test
cmpsb
stc
in
pop
mov
mov
jnp
test
imul
dec
or
xchg
pop
jle
jae
loope
cld
fisubs
pop
jle
int
pop
or
mov
add
cld
repnz
mov
xchg
fdivp
test
hlt
inc
cmpsl
push
cli
stc
in
jg
dec
fwait
inc
aam
inc
movsl
sub
stc
in
pop
jle
mov
test
in
imul
fists
xchg
pop
jle
stos
mov
push
mov
pop
mov
pop
jle
in
inc
cmpb
out
mov
push
mov
stc
sti
enter
inc
push
xchg
shl
mov
adc
mov
push
xor
into
adc
push
ficoms
test
aaa
dec
push
addr16
cmp
and
int
frstor
xor
jns,pn
lods
or
cli
mov
in
push
pop
push
in
fs
sahf
mov
jmp
pop
jns
and
jmp
test
xor
aas
mov
jg
lret
cmp
loop
jl
out
jle
in
or
mov
sbb
xchg
ja
adc
je
push
jp
xchg
aas
das
rcl
xor
sub
fistpl
pop
push
jp
push
mov
gs
je
inc
mov
lret
das
ljmp
mov
sub
mov
stc
and
push
pop
ret
sti
int
mov
jnp,pt
lret
cwtl
inc
std
add
dec
push
ljmp
pop
roll
pop
mov
jle
in
inc
mov
test
enter
daa
pop
mov
xor
test
jbe
xlat
in
pop
jle
mov
mov
enter
lcall
stc
or
fnstcw
mov
cmpsb
inc
mov
jmp
fucomp
loop
je
outsb
repnz
and
mov
push
adc
lahf
out
xor
dec
pop
jns
xchg
ds
pop
cmp
xchg
ja
jns
xchg
push
repnz
push
xor
pop
dec
or
push
xor
xchg
push
pop
int
clc
pop
clc
and
shrb
pop
jns
cmp
lahf
sbb
fistl
mov
push
pop
jns
repz
test
das
lahf
sbb
fbld
dec
int3
jmp
aaa
push
out
and
imul
mov
mov
cmp
insb
push
aaa
xor
lds
mov
jle
in
inc
idivb
gs
bound
stc
in
sbbl
add
pop
pop
movsl
mov
adc
outsb
push
mov
aaa
rolb
dec
mov
or
and
dec
mov
pop
int
xchg
loop
mov
repnz
arpl
sub
sbb
sub
in
insl
xor
jnp
jge
sub
fcoms
fcom
lock
lcall
mov
aad
cli
push
fcmovb
repnz
das
decl
push
aad
jmp
outsb
inc
fmulp
das
mov
mov
mov
sti
push
jg
cld
repnz
fwait
hlt
cli
shll
or
hlt
adc
jle
in
mov
inc
int
popf
loopne
pop
dec
repnz
pop
cmpsl
xor
in
jecxz
ja
sub
sub
repz
cltd
or
sbb
movl
sub
loope
mov
popa
sub
iret
in
xchg
push
pop
jns
mov
adc
aam
jb
fidivrl
mov
jge
in
and
je
xor
push
sti
or
mov
pop
data16
lods
js
insl
stc
cmpsl
push
mov
das
lcall
lock
inc
icebp
inc
lcall
lret
and
inc
pop
jo
pop
push
outsl
in
sbb
dec
jae
jg
mov
xchg
aaa
add
and
rcrb
jns
es
jo
in
cmp
lahf
test
and
popa
ljmp
mov
mov
sub
jno
or
popf
nop
imul
jp
lret
mov
dec
ret
fidivs
lods
cld
daa
jmp
int
push
fimuls
inc
mov
imul
lods
xlat
ja
jns
call
jl
jg
mov
pop
mov
and
lods
fmuls
mov
mov
popa
mov
sub
mov
cmp
pop
inc
inc
ficomps
xor
adc
jecxz
mov
cwtl
mov
fs
mov
enter
mov
movq
insb
jo
add
or
je
cmp
xor
or
jecxz
dec
sbb
cmp
pusha
sbb
repnz
dec
or
repnz
xchg
pop
ja
es
cld
cmc
daa
int3
sub
or
xchg
pop
jle
rcrl
inc
sbb
push
pop
jns
fnstsw
and
enter
xor
pop
jns
xchg
hlt
cs
mov
fs
push
adc
add
lahf
scas
call
or
pop
imul
jne
bndstx
xor
mov
sub
pop
loop
and
xchg
pop
jle
iret
ljmp
in
or
rcll
jl
in
sub
jge
xchg
push
dec
int
jle
rcrl
arpl
and
in
dec
mov
or
inc
xlat
rclb
pop
push
std
lods
mov
lcall
cmpsl
add
das
mov
xor
push
pop
jns
push
pusha
xor
repnz
shlb
pop
mov
in
stos
sub
and
jle
outsb
sub
mov
cwtl
shll
sub
pop
jns
cmc
je
insl
inc
mov
dec
test
fdivrs
notb
push
adc
add
jmp
jg
jmp
shlb
mov
bnd
push
pop
jns
push
frstor
scas
cmpb
bound
jns
enter
ret
sbb
ds
jns
xchg
cmp
mov
loope
add
lahf
push
mov
xchg
push
xor
je
push
push
jbe
in
push
pop
push
insb
push
out
les
xchg
push
pop
jns
out
pop
push
mov
inc
push
push
imul
inc
xchg
data16
mov
in
pop
jns
xchg
push
pop
cwtl
push
mov
cmp
xchg
push
or
add
push
and
or
lds
repnz
decl
rorl
outsb
cmp
jp
lret
adc
sub
or
xchg
push
fiadds
add
std
shlb
sbb
pop
dec
or
lock
in
jg
cmp
ds
adc
pop
jle
lcall
add
mov
lret
pop
cmp
pop
das
cmp
xchg
das
mov
sahf
rorl
mov
cs
mov
mov
fwait
pop
inc
jmp
lods
aaa
subb
xchg
das
fistps
xlat
cmp
pop
jle
movsb
jecxz
push
pop
inc
xchg
push
dec
mov
push
adc
mov
push
ljmp
mov
and
rclb
lret
cmp
leave
sub
out
adc
pop
jns
adc
test
xor
jne
jns
xchg
push
sub
xchg
daa
pop
test
in
push
pop
mov
inc
arpl
in
inc
push
pop
jns
xchg
cli
repnz
out
xor
xchg
lahf
fcom
lods
shll
mov
mov
icebp
in
ret
inc
fwait
movsb
sbb
jle
in
outsl
ret
and
js
stos
sub
incb
mov
pop
cmp
inc
xor
xlat
xchg
jno
xchg
pop
jle
push
mov
jne
push
std
add
jmp
add
mov
lret
inc
aas
cmp
sub
push
add
cmp
leave
fcoml
dec
add
mov
leave
add
dec
out
jo
xchg
ja
sahf
mov
mov
scas
mov
sbb
in
xor
jb
sti
enter
xor
xlat
mov
jg
sbb
xor
cmp
lds
repnz
sbb
jns
xchg
ja
xchg
add
jae
fisttpll
push
pop
inc
lret
rcl
addr16
jg
xor
pop
jns
arpl
ret
stos
adc
test
xor
mov
cmp
repz
pop
and
inc
pop
out
in
push
mov
ljmp
sti
push
jnp
xchg
push
pop
cmp
adc
outsb
adc
insl
jg
pop
jns
dec
jle
stos
xor
aad
xlat
pop
pop
enter
xchg
inc
jnp
jecxz
and
add
mov
sar
in
das
mov
int
jns
es
jl
jge
xchg
js
sub
push
mov
jl
shl
push
std
adc
in
push
mov
mov
cld
repnz
jns
fs
insb
out
popf
xor
into
push
scas
mov
jp
test
in
dec
aaa
mov
orb
das
aas
push
lods
test
iret
push
ficoms
pop
jg
fwait
test
mov
xor
xchg
ficoml
inc
mov
ret
push
mov
mov
cmp
xchg
push
fimuls
cmp
loopne
mov
push
pop
jns
repnz
js
add
daa
jbe
mov
push
pop
jns
pop
xchg
clc
mov
sbb
in
enter
add
xchg
jmp
cmp
jnp
ror
push
fcompp
js
dec
cmpb
clc
push
mov
add
or
and
das
xchg
push
pop
jns
mov
push
jge
dec
outsl
aas
mov
jns
adcb
and
rcll
jmp
jb
lods
sti
enter
inc
sbb
inc
xchg
fbld
mov
leave
imull
dec
xlat
push
mov
in
stos
push
and
fdivrp
fwait
cmp
cli
enter
sbb
cmpb
mov
push
fidivs
mov
mov
fs
push
sbbb
pop
mov
je
out
and
outsl
xchg
scas
mov
call
enter
pop
call
clc
in
add
sub
lods
test
xchg
lea
loopne
and
jo
xlat
shll
xchg
jg
pop
mov
popa
jmp
out
jle
in
jge
fdivrl
dec
mov
rol
pop
ljmp
test
stos
sub
push
pop
rcrb
pop
shll
lret
adc
push
std
fwait
adc
add
jp
repnz
out
add
mov
addr16
xchg
int
jmp
adc
xchg
mov
push
lods
inc
scas
mov
ret
or
insb
popf
lods
daa
shl
xchg
insb
xchg
xor
pop
cmp
and
push
loopne
or
inc
mov
stc
in
scas
fwait
inc
movsl
lret
into
mov
in
pop
out
das
sti
mov
add
test
cmc
pop
movhps
pusha
mov
jle
dec
cmc
cld
loopne
sahf
rorl
jecxz
in
mov
mov
lock
lret
in
pop
jle
in
xchg
sub
xchg
sbb
call
xchg
cli
ret
pop
movsl
sbb
loope
push
in
out
out
push
push
pop
jns
mov
popf
and
or
adc
call
jbe
popf
mov
or
and
fidivrl
in
pop
dec
pop
lahf
ret
loope
outsl
sarb
cld
repnz
pop
inc
and
fsub
jecxz
ret
jl
lret
das
inc
lret
cmp
lock
das
mov
test
jge
nop
pop
mov
pop
adc
stc
dec
pop
fstps
shll
sbb
mov
cmc
and
and
repnz
pop
mov
jb
fadd
scas
pop
repnz
fldt
add
lods
es
rclb
add
xor
xchg
ja
es
jns
ljmp
rcrl
in
push
cmpb
dec
cmp
in
mov
dec
jae
mov
dec
in
fs
push
and
pop
enter
lods
xorps
mov
inc
aam
pop
out
test
mov
daa
cwtl
sbb
bound
xchg
fidivrs
repnz
pop
jno
sbb
fdivs
pushf
enter
cld
stc
repnz
das
fimull
lret
ljmp
hlt
xchg
aaa
adc
adcl
int3
mov
jg
stos
loopne
xchg
pop
test
lods
mov
enter
sti
scas
scas
loopne
lret
mov
jmp
jmp
lahf
jg
idivl
subl
mov
jp
mov
test
sub
cld
nop
lds
jle
and
jge
insb
lcall
push
push
mov
mov
pop
lea
adcl
mov
xchg
sub
leave
lods
mov
pop
mov
xchg
lret
mov
fnstcw
test
jle
notl
lahf
adc
pop
adc
stc
in
pop
dec
scas
aam
jl
push
rorb
inc
or
jle
lret
lahf
fstl
les
add
call
push
int
lcall
clc
enter
add
test
pop
aas
jmp
out
jnp
push
scas
mov
push
loope
scas
movsl
mov
std
in
inc
cmp
cmpsl
cmp
ss
sub
sub
fwait
xor
mov
mov
leave
and
sbb
js
sbb
fs
mov
aam
mov
dec
sub
mov
xchg
xlat
sbb
iret
xor
sub
mov
movsl
lret
sub
xor
adc
cld
cmp
addr16
out
or
adc
jecxz
stc
in
and
repnz
or
iret
scas
add
sub
popa
inc
jle
repz
ds
mov
jle
adc
and
cmpxchg
sarl
xor
push
ficomps
inc
mov
push
pop
jns
stos
jp
xor
enter
xchg
in
dec
and
ficomps
ja
cs
cltd
adc
in
mov
push
por
pop
and
jmp
loop
dec
sti
push
mov
fcmovu
ds
or
xorb
pop
push
xor
lret
dec
pop
pop
mov
inc
xchg
jg
repnz
es
add
insl
fsubrl
in
cmpsw
push
test
mov
xor
stc
testl
in
jg
mov
mov
inc
scas
xchg
adc
mov
jns
xchg
ja
lock
lea
xchg
mov
in
push
pop
jle
les
or
call
lds
in
and
mov
push
pop
jns
inc
shl
mov
outsl
jb
mov
xchg
sub
xor
addr16
lcall
sbb
sub
push
pop
jns
mov
adc
punpckhdq
jge
in
je
and
adc
subl
jge
sahf
or
and
shr
pusha
les
pop
jle
adc
mov
cmp
mov
popf
imul
cmp
test
stc
in
jae
mov
scas
and
xlat
idivl
in
cs
dec
cmpsl
in
and
add
insl
add
pop
scas
test
pop
inc
mov
mov
repnz
xchg
inc
inc
cmp
add
cmpsb
in
add
mov
jb
cmp
jg
das
mov
les
mov
adc
cld
repnz
mov
push
fsubp
mov
dec
ret
cld
repnz
das
imul
aam
rorl
push
enter
pop
fmuls
lahf
and
adc
movsl
cmc
xchg
xor
push
sub
and
jge
arpl
repnz
mov
or
ja
out
mov
es
shll
push
fistps
rorl
mov
pop
sub
stos
lahf
push
mov
or
sub
or
jne
insl
pop
das
mov
mov
mov
push
insb
jno
inc
les
mov
shr
mov
dec
outsl
inc
into
and
add
xchg
das
sbbb
repnz
adc
decb
cmc
and
push
sbb
add
in
push
ret
outsl
add
and
lret
js
arpl
fs
dec
inc
mov
sahf
shrb
dec
mov
xor
jns
xchg
and
adc
sbb
xor
hlt
push
jns
xchg
push
and
jno
xor
pop
ds
mov
cmp
jp
xchg
es
fsubr
adc
imul
aaa
mov
scas
mov
inc
sbbl
mov
in
sbb
test
fcomip
lret
clc
sub
leave
imul
mov
sahf
adc
push
scas
roll
sub
je
pusha
iret
xchg
rolb
movlps
lds
xor
das
jle
pusha
stos
loop
mov
or
cmp
cld
repnz
mov
leave
icebp
js
xchg
pop
clc
dec
pop
xor
inc
imul
xchg
cld
repnz
das
xchg
xchg
jnp
inc
popf
xchg
mov
repnz
das
mov
rorb
cmp
adc
mov
rol
add
push
fisubrl
inc
cld
repnz
stc
adc
push
mov
and
loopne
lock
call
fiadds
and
push
sbb
push
pop
jns
xor
fsub
lahf
imul
cmc
fldl
loope
jns
xchg
inc
xor
jb
cmpsb
cmpsl
imul
into
xchg
fiadds
divl
test
int
or
jns
xchg
cli
cs
lcall
sbb
test
push
stc
notl
jle
mull
sbb
mov
mov
stc
in
jno
push
xchg
xchg
xlat
mov
stos
pop
pop
xor
daa
jecxz
pop
add
add
push
pop
jns
pop
cmp
test
sbb
loope
push
mov
cltd
push
orb
loopne
xchg
push
stc
pusha
clc
jb
push
mov
jge
pop
shlb
xchg
mov
xchg
divl
push
xchg
es
cmpsb
mov
jl
ja
arpl
adcb
repnz
mov
rcr
inc
aas
sub
notl
outsb
lea
faddl
inc
jle
roll
push
and
std
loopne
sbb
and
fisubl
xchg
ljmp
sbb
jmp
push
out
cmp
pop
jle
in
mov
xchg
mov
mov
adc
in
daa
jg
or
scas
mov
jg
push
xchg
cmp
mov
pusha
loop
pushf
sub
xchg
popa
adc
dec
enter
mov
jbe
and
add
fs
aaa
sub
out
mov
popf
inc
loopne
jnp
outsb
mov
fsubr
pop
mov
inc
pop
jns
add
addl
scas
imul
outsb
lods
sbb
stos
cmp
das
add
push
ret
cmp
ficoms
mov
jb
mov
dec
push
movsl
aam
aaa
cmc
mov
ds
clc
or
andl
nop
out
pop
mov
repnz
jecxz
and
inc
sbb
inc
in
sub
fmuls
mov
ljmp
inc
mov
lret
movsl
fcomi
cmpsb
inc
xor
cmp
mov
mov
and
mov
repz
notl
lds
push
jno
inc
mov
lea
stos
roll
jnp
scas
mov
inc
and
cli
jge
xor
loopne
mov
loop
sbb
out
call
or
sub
sbb
stc
in
scas
jo
sbb
leave
loopne
xor
loop
ja
jg
ret
fiadds
pop
jge
pushf
les
mov
pop
imul
stc
in
xchg
icebp
push
push
jae
lret
test
into
repz
jle
in
enter
je
jo
xchg
add
pop
cmp
enter
enter
fildll
xor
pop
stc
bound
add
push
pop
jae
pop
xchg
push
fiadds
test
int
fwait
icebp
add
jns
xchg
sbb
ja
mov
sbbb
jg
nop
push
std
cs
jge
push
cmovge
loop
cmp
in
mov
jp
ja
sbb
cmp
xchg
pop
dec
xor
add
clc
jg
fcompl
hlt
jb
jmp
add
xchg
mov
pop
sub
in
push
pop
jle
sti
repnz
or
lret
aad
push
pop
jns
add
push
mov
mov
pop
jns
sub
adc
lea
loopne
inc
and
and
push
int
pop
jns
in
stc
mov
ret
imul
insb
mov
jns
xchg
shl
mov
mov
sub
inc
xchg
push
fildll
push
sbb
mov
push
dec
jmp
mov
and
and
push
repz
cli
in
push
pop
jns
adcl
fiaddl
mov
stc
in
inc
stos
and
xor
mov
fmul
maxps
repnz
das
jmp
jnp
or
das
mov
push
cmc
ret
repnz
inc
mov
das
mov
popa
xchg
into
sub
or
lret
jbe
sarl
jmp
out
aaa
nop
addl
cmp
jne
popf
push
loop
repnz
aas
jl
stc
insb
iret
mov
pop
jae
ror
mov
xor
push
fstpl
sbb
repnz
lods
cmp
lods
mov
cld
repnz
mov
xchg
xchg
lods
es
mov
cld
repnz
das
lods
sbb
into
inc
pop
stos
xchg
imul
mov
sbb
lret
fistpl
mov
or
jb
lret
sub
lea
xchg
xchg
adcl
leave
sub
or
jne
push
sbb
decl
mov
rcll
add
icebp
jae
fisttps
loope
sub
test
shlb
rcll
add
lea
pop
fmuls
mov
stos
aas
xor
rcr
stc
in
jg
imul
xchg
es
ljmp
mov
cmp
mov
mov
mov
lahf
popf
sahf
cmp
stc
in
xchg
push
movsl
fdivrl
mov
and
out
and
pop
js
xchg
dec
pop
sub
sbb
sti
das
pop
stc
bnd
xor
dec
xor
cld
repnz
dec
inc
xchg
push
jmp
int3
jp
sub
fsubs
repnz
inc
and
fwait
pop
ret
dec
adc
lea
jmp
das
mov
adc
inc
inc
test
repnz
std
sbb
lds
pop
lret
mov
cmc
test
jo
mov
sbbb
cmp
ss
test
dec
xlat
dec
inc
loop
ja
mov
lret
jno
jg
pop
das
pop
lahf
repz
and
lcall
enter
pusha
stos
out
jg
jbe
in
cld
add
mov
repz
sub
inc
shld
daa
loopne
clc
addr16
mov
sub
xchg
push
pop
mov
cmpl
or
adc
sahf
mov
pop
xor
imul
pop
jns
dec
inc
pop
fstl
outsl
jg
xor
lret
popa
pop
popf
decl
sti
les
mov
rcrl
das
mov
xlat
inc
sahf
popf
push
pop
mov
repz
mov
lcall
push
ds
sbb
xor
push
xchg
test
das
test
lret
das
incl
adc
inc
addr16
test
dec
gs
lret
das
mov
mov
adc
adc
mov
pop
inc
sbb
cmp
lret
inc
and
mov
sub
aad
push
fimuls
push
sbb
scas
pop
and
sbb
jo
aam
lock
jne
mov
mov
add
xor
dec
cltd
int3
sbb
inc
in
das
fwait
adc
movsl
cmp
pop
jns
arpl
xchg
jno
sub
jle
jnp
in
push
mov
add
xchg
pop
or
mov
sub
mov
sub
popf
pop
cli
push
adc
lcall
outsl
fldcw
dec
xchg
and
cltd
dec
adc
sub
or
or
inc
frstor
mov
jmp
mov
cmp
lret
mov
mov
ret
dec
aam
ljmp
cmp
int3
jge
cld
rorl
lods
mov
rolb
fsts
sbb
jb
repnz
mov
push
dec
jno
stc
scas
sbb
dec
out
icebp
cmpsl
dec
nop
daa
xchg
add
ja
and
clc
in
sub
ljmp
jne
dec
adc
mov
xor
filds
and
inc
pop
sti
je
push
lret
mov
adc
xor
js
inc
mov
push
test
jmp
push
aas
mov
imul
lret
insl
fs
mov
movsb
enter
ficoms
imul
push
or
daa
ljmp
test
aaa
xchg
mov
lret
mov
hlt
jle
frstor
mov
mov
fs
xor
sbb
cli
dec
and
mov
sub
fsts
popl
cmp
fcmovbe
jmp
pop
jle
testl
and
fnsave
xchg
pop
dec
test
cli
pop
mov
lret
das
mov
mov
lret
jle
pop
jns
jge
sbb
mov
sbb
xchg
les
in
push
stos
sub
jge
push
add
mov
repz
push
pop
into
fisttpl
or
adc
int3
pop
testl
gs
xchg
pop
jle
popf
fldl2t
mov
mov
in
ss
pop
mov
nop
andl
outsb
add
jecxz
cmp
jmp
scas
jns
xchg
push
fwait
pop
cmp
lods
cs
test
shl
lret
push
pushf
mov
aad
lret
sbb
inc
scas
mov
or
xor
hlt
xchg
cwtl
leave
inc
xchg
mov
ds
xchg
mov
cmp
cmp
sbb
jnp
or
jno
jbe
xlat
xchg
outsb
frndint
add
xorb
clc
daa
jns
lret
mov
lea
sbb
xlat
dec
xchg
das
mov
loop
sub
jns
mov
mov
add
add
push
sub
cld
ret
and
or
mov
cmpsl
cld
mov
repnz
das
add
push
pop
test
or
pop
sahf
xchg
xchg
das
call
into
cli
in
cmp
jno
stos
sti
xchg
pop
jle
stc
lret
mov
sub
cld
sti
enter
sbb
mov
mov
cmp
es
ss
adc
mov
aam
push
mov
push
jecxz
jge
lret
mov
imul
or
movsb
jnp
stc
in
pop
mov
popf
into
mov
in
pop
jle
scas
pushf
jle
icebp
stc
cmpxchg
dec
test
sub
daa
xor
ds
mov
daa
dec
popf
push
ds
dec
jns
xchg
mov
jle
xor
pop
ficoms
xchg
jg
pop
ret
jnp
iret
and
sub
sbb
jle
in
nop
xchg
fstp
adc
aas
fnstenvs
out
fstpl
and
fisttpll
popa
jmp
ja
dec
push
clc
outsb
add
lret
aas
ljmp
movsb
fmull
ret
pop
dec
das
shrb
pop
jle
in
stos
or
lret
inc
fcmovnu
cmp
repnz
dec
jnp
out
imul
clc
popf
call
pop
cmp
add
sti
push
xor
cwtl
cli
enter
stos
adcb
inc
mul
xchg
push
ficomps
mov
movsl
or
xchg
push
pop
jns
call
inc
pop
into
mov
sbb
mov
mov
fisttps
jns
sub
ret
cmp
lods
xchg
pop
das
pop
mov
pop
negl
fildl
inc
pop
jns
repnz
popf
lods
jno
xchg
mov
add
xor
scas
mov
pop
add
les
mov
mov
in
sbb
mov
fabs
and
inc
pop
insb
iret
rorl
inc
push
pop
jns
dec
mov
pop
mov
in
sahf
in
pop
in
sbb
sahf
inc
ja
call
insb
les
mov
outsb
scas
subb
or
out
pushf
repnz
lret
fs
lods
loope
jbe
xchg
xchg
js
lret
mov
xor
mov
xchg
hlt
movsb
sub
add
and
sbbb
push
push
mov
cmp
lahf
sub
jbe
inc
inc
out
int3
sub
in
mov
and
sahf
jl
push
inc
pop
and
xchg
sub
scas
testl
mov
cmpsb
pop
jge
and
jl
sbb
pop
push
inc
mov
sarl
ja
in
mov
xchg
jg
out
inc
jbe
stc
dec
scas
fwait
insb
clc
mov
jle
add
aam
addb
sub
jle
cs
js
and
jp
cmp
inc
jle
in
cmp
in
jo
lods
je
in
dec
jo
lea
cmc
mov
enter
adc
scas
mov
mov
popa
pop
iret
jns
loop
jp
fdivl
lds
das
sbb
lret
cmp
pop
sub
push
shll
sub
push
pop
xor
out
lret
xchg
push
pop
push
movsl
and
push
xor
repnz
in
mov
and
les
jb
xchg
push
pop
insb
cmp
inc
mov
pop
jns
jge
adc
adc
ficoms
pop
dec
mov
xlat
ss
in
cld
jns
xchg
push
sbb
rolb
jns
jb
out
in
push
pop
out
push
mov
sarl
pop
jns
push
ror
fwait
sahf
fwait
jl
mov
pop
jns
inc
roll
cwtl
inc
out
aad
js
cmp
pop
jns
xchg
sbb
xchg
and
fdivl
in
push
sbbl
test
stos
jl
aam
push
pop
push
mov
inc
loopne
cld
sti
enter
dec
xchg
scas
out
pop
pop
push
leave
into
shl
lret
das
mov
lock
rol
add
das
mov
or
xchg
sub
js
or
pop
inc
loopnew
out
mov
mov
mov
inc
jg
dec
out
ds
outsl
lods
lret
das
decl
fdivrp
dec
and
pop
jae
mov
repnz
push
mov
jmp
es
fnsave
adc
cld
repnz
loop
cwtl
and
sbb
cmp
sub
into
pop
dec
jl
mov
pminsw
fistpll
jle
cmp
sub
fwait
push
lret
dec
push
shlb
lds
xchg
fs
sub
jne
das
pop
push
out
orl
mov
xchg
mov
out
fs
add
or
scas
mov
rcr
push
cli
or
or
mov
ret
shrb
sbb
in
sbb
mul
xchg
mov
jp
imul
sahf
out
xchg
pop
jle
movsl
fsubs
sub
mov
popf
cmpsl
int
rolb
ss
adc
jp
lret
ljmp
insb
sbb
out
jge
out
add
aas
ds
cmp
subl
and
mov
mov
xchg
or
dec
mov
xchg
mov
scas
cmp
xlat
stos
and
enter
jns
mov
shll
iret
xchg
fmull
push
inc
push
pop
jns
pop
mov
mov
rsqrtps
in
xchg
pop
jmp
jle
lret
int
adc
jbe
jge
inc
pusha
icebp
jns
lods
leave
jne
mov
ja,pn
enter
out
push
scas
mov
outsb
and
imull
cmp
ds
clc
enter
sub
push
inc
gs
repnz
pushf
sbb
sub
movsb
and
sub
das
pop
repnz
das
mov
add
inc
and
mov
arpl
jne
push
enter
mov
imul
jle
in
stos
das
cmp
cmp
pushl
icebp
jl
in
pop
cmpsb
out
pushw
pop
push
into
clc
in
in
movsl
scas
repz
imul
jmp
out
sub
in
xchg
dec
pop
sti
sbb
daa
xchg
add
aaa
push
fnstsw
mov
fisttps
popf
in
fcmove
xchg
pop
xor
cmp
pop
ljmpw
cmp
mov
pop
sbb
fsubs
lcall
js
fwait
dec
dec
scas
stc
xchg
lret
and
pop
mov
ds
hlt
leave
cmp
fwait
dec
in
xchg
out
cli
inc
jo
mov
inc
mov
mov
into
in
fs
mov
jge
je
stc
in
pop
inc
pushf
loopne
mov
mov
loopne
or
mov
hlt
aaa
jg
mull
lret
imul
es
pop
enter
iret
mov
gs
cwtl
repnz
in
xchg
cltd
mov
cmp
cmp
je
and
sub
xor
pop
jae
mov
inc
in
sub
jne
push
mov
fiadds
sub
cmc
out
ffree
xlat
pop
jns
xchg
push
int
aad
in
cmp
and
jns
xchg
push
popa
sbb
cmp
jg
popa
and
imul
jno
adc
mov
and
loop
dec
pop
lds
std
repnz
xchg
sub
add
test
adc
lret
das
mov
inc
testb
sbb
das
mov
mov
dec
cmp
je
fildl
mov
repnz
push
dec
cmp
sbb
negb
cmp
das
mov
inc
cmp
cmp
lds
cli
inc
rclb
sbb
ret
daa
movsl
fs
pop
js
xchg
pop
sub
out
push
fnstenv
mov
dec
mov
fcmovne
xchg
mov
lret
cs
xor
dec
jl
faddp
dec
sub
sbb
mov
push
or
in
imul
and
mov
test
test
sbb
push
sub
jmp
sub
divl
or
inc
jecxz
ret
shl
adc
inc
in
jb
push
cltd
xor
xchg
pop
jle
insl
fimull
sti
mov
shlb
sbb
ds
cmp
jbe
cmpsb
jle
push
popa
xor
loop
mov
rorb
mov
adc
or
and
jle
popa
fbstp
mov
sbb
leave
std
fimull
sub
cwtl
add
pop
xchg
pop
jns
in
andb
or
xchg
jg
lahf
js
lock
bound
jne
dec
lret
or
ljmp
test
repnz
pop
jle
addr16
fwait
adc
fcmovu
cwtl
in
cmp
sbb
or
das
mov
push
xor
sub
sbb
stc
test
push
jge
inc
ret
out
dec
enter
cmpsb
jnp
cs
jl
es
cmp
inc
xchg
xor
insb
out
xlat
sub
loopne
xchg
mov
mov
and
lret
rol
dec
je
jl
lods
add
inc
adc
aaa
add
je
jmp
sub
jle
in
jmp
xor
lahf
jo
stos
mov
mov
sbb
xchg
pop
push
out
mov
cmp
inc
scas
mov
aad
jne
xchg
push
jns
call
and
test
sub
jae
movsb
inc
jle
mov
lea
fisubs
jnp
xchg
mov
dec
add
push
push
repnz
clc
dec
jge
sbb
push
sbb
cmp
lret
mov
test
ret
jno
mov
mov
ret
cmp
jmp
xchg
jmp
mov
cld
repnz
mov
xchg
ficompl
or
pop
repnz
das
mov
cwtl
sbb
push
or
mov
mov
enter
das
mov
xchg
sbb
xchg
cli
mov
lahf
pop
mov
in
mov
and
cmp
jns
repnz
das
pushf
mov
adc
cmpb
flds
xchg
insb
rcll
jo
sbb
mov
popf
imul
mov
repnz
mov
sbb
aaa
sbb
insl
aam
mov
ja
sub
xchg
xchg
add
pop
xchg
sub
arpl
movsl
or
lods
mov
xchg
jo
insl
imul
or
in
sub
mov
rcl
add
mov
lret
es
mov
arpl
push
loopne
std
or
push
push
mov
cs
add
negl
inc
in
imul
xor
jno
repnz
mov
data16
cld
jle
mov
push
pusha
cmc
enter
test
cld
fs
lahf
or
aas
pop
jns
cmp
fstl
jecxz
faddp
inc
push
int
and
sar
cld
sti
enter
shrl
scas
das
int3
test
push
shlb
jle
decl
mov
lahf
inc
std
aam
sub
xchg
das
mov
aas
mov
mov
jbe
pop
fistpl
lret
das
in
cmp
cmp
xchg
pop
decb
arpl
nop
out
outsb
mov
jl
dec
push
in
lcall
icebp
inc
lods
and
and
decb
mov
mov
jle
scas
sbb
jbe
enter
adc
push
lret
push
into
adc
in
mov
fwait
loope
fcmovnb
lahf
inc
xchg
jne
mov
xchg
push
pop
insl
pop
mov
pop
mov
in
icebp
ja
or
out
ret
and
and
mov
lret
bound
stc
in
jp
cmp
aam
lods
ret
pop
flds
repnz
les
fdivrs
rorl
mov
in
xchg
iret
popa
or
sub
out
shl
inc
testl
mov
or
xchg
dec
nop
stos
jmp
fs
push
repnz
sbb
add
sbb
das
ds
andb
push
je
rcl
cld
repnz
pop
scas
lea
imul
lock
mov
fisttpll
and
scas
mov
sbb
pop
mov
xchg
mov
call
sub
inc
dec
sbb
lret
xchg
out
addb
sbb
scas
mov
loopne
clc
cmp
clc
jp
mull
inc
add
lahf
cmp
jns
xchg
dec
cli
addr16
aam
adc
ja
xchg
push
or
cmp
and
stc
xchg
or
shlb
in
pop
pop
stc
repnz
mov
and
pop
or
loopne
jnp
xchg
jg
inc
fistpll
imul
and
xlat
js
lret
das
mov
sbb
sbb
mov
lea
dec
lret
push
cs
add
and
std
pushf
sub
insb
xlat
icebp
addb
lret
das
repnz
pop
imul
enter
les
jae
and
ds
popa
shrl
cmp
push
sub
enter
xor
sbb
mov
clc
enter
in
jo
hlt
jg
mov
jae
outsl
pop
ss
lahf
jl
add
aaa
pop
imul
adc
add
fnstcw
sbb
xchg
testl
jmp
mov
dec
in
push
pop
fcoml
bound
stos
sbb
enter
xchg
and
cmp
xchg
aaa
pop
jle
notl
lds
ja
pop
rcr
inc
xchg
lea
lret
pop
loopne
cmpsb
jle
dec
mov
dec
int
lret
das
lcall
ret
sbb
mov
scas
fisttpll
fbld
notl
push
jle
in
push
mulb
xchg
and
bound
or
inc
in
pop
push
mov
stc
in
xchg
mov
and
arpl
mov
in
pop
fidivrl
jecxz
xor
test
xchg
pop
jle
pop
xor
repnz
xor
js
repnz
js
stos
lea
xlat
sbbl
in
jne
outsb
loopne
in
push
add
mov
js
cmpsl
jne
xchg
push
pop
sub
sub
std
repnz
jns
loopne
dec
aad
imul
pop
test
stos
jmp
pop
push
adc
cld
test
lahf
in
push
pop
test
repz
movsl
ja
and
jns
mov
lods
dec
sbb
lods
jle
in
inc
pop
aas
dec
push
test
fnstenv
fists
fdivl
lret
mov
jge
cmp
aam
das
mov
ficoms
inc
cmp
dec
loope
outsl
or
bnd
pop
sti
xchg
popa
mov
mov
btc
and
lods
lods
js
shll
pop
jns
enter
inc
les
lret
jge
in
enter
inc
xchg
leave
cmp
test
roll
filds
fisubs
cmp
jns
push
jle
in
aas
pop
int3
push
sub
pop
jnp
sbb
xchg
pop
call
xor
sbb
xchg
mov
mov
xchg
in
or
push
pop
jns
pop
insl
dec
inc
in
inc
fadds
fdivl
in
inc
imul
fs
sbb
push
push
in
pop
jle
in
xchg
dec
dec
jns
add
xchg
pop
jle
cwtl
xchg
xchg
int3
mov
ss
fistpl
stc
in
adc
fsub
movsl
push
outsl
or
or
rcrl
les
scas
mov
mov
jno
sbb
dec
mov
inc
inc
xchg
stos
jmp
notl
mov
sub
xchg
pop
jle
repz
ficoml
mov
jmp
mov
add
fcomp
popa
cwtl
xchg
pop
jle
adc
or
nop
out
push
fidivrl
cmp
cmp
jnp
jo
add
cld
repnz
xchg
out
adc
das
xchg
cld
repnz
das
xor
mov
bound
xchg
das
mov
mov
inc
pop
jns
popf
pop
in
push
push
jbe
xchg
push
sti
mov
push
xor
push
push
dec
push
aad
shrl
ds
sbb
push
fbstp
jmp
jl
lret
das
or
push
gs
into
ficoml
imul
test
lods
mov
aam
adc
lods
scas
adc
out
test
dec
adc
scas
cli
push
pop
jns
test
rorb
lret
jo
in
movsl
hlt
enter
rorb
jp
lret
mov
pop
int3
sbb
sub
adc
dec
fcmove
push
popf
pop
out
mov
cmc
nop
xchg
xchg
and
xor
mov
sub
xchg
imul
dec
and
test
mov
cmpsl
sub
jns
loope
out
xor
pop
dec
flds
pop
pop
enter
xor
repnz
and
lods
add
cli
aas
jmp
mov
mov
data16
jge
std
cmp
aaa
rol
pusha
push
cld
cmp
lret
lret
sbb
in
mov
lret
das
mov
jbe
cmp
addb
mov
mov
add
das
mov
and
adc
dec
jb
fdivs
sub
xchg
sbb
jns
aad
ljmp
xchg
stc
in
pop
insb
mov
jmp
inc
les
jle
imul
in
mov
dec
popf
cmp
out
lods
insl
cmpsl
repnz
mov
sar
adcl
mov
enter
das
xor
repnz
fisubrl
sbb
stc
not
cltd
data16
stos
inc
cmpsb
push
or
daa
stos
insl
or
mov
xchg
push
movb
repnz
sarl
xchg
push
or
lcall
push
scas
mov
sbb
shll
sti
xor
mov
inc
repz
and
xor
pop
hlt
lock
pusha
clc
aas
loope
sub
call
mov
mov
mov
pop
mov
test
sar
lret
mov
out
xchg
push
faddp
data16
lret
jmp
daa
adc
sbb
dec
xchg
push
pop
jns
mov
or
pop
xlat
pop
push
data16
dec
push
pop
jns
inc
adc
dec
aam
imul
mov
cs
notb
sbb
pop
cmp
in
and
sub
mov
xacquire
popf
in
shl
mov
testl
push
mov
test
push
dec
ja
xchg
mov
mov
push
cmp
xchg
sbbb
jns
xchg
movsl
jg
or
out
subb
xchg
xchg
push
jo
stc
push
je
rcl
cmp
xchg
sti
sbb
mov
ja
xor
pop
xchg
push
pop
jns
ret
xor
repnz
mov
in
cld
cmpl
dec
push
repnz
pop
iret
cli
imul
pop
adc
fwait
lret
scas
mov
mov
jp
inc
sub
movl
sbb
stc
repnz
jb
push
inc
ljmp
lret
aas
das
sub
sti
mov
repnz
das
mov
movb
ljmp
fadds
repnz
iret
xchg
dec
std
sbb
aas
mov
outsl
daa
testb
add
xchg
mov
dec
push
imul
mov
mov
jnp
sub
repnz
arpl
dec
mov
xchg
mull
push
fwait
in
in
stos
jg
pop
ret
push
pop
jns
data16
fisttpll
loope
das
add
pop
jns
xchg
shlb
fcompl
clc
lret
arpl
notl
nop
into
sbb
push
or
pop
jle
mov
mov
or
push
aam
jp
ds
mov
adc
xchg
mov
cmp
jns
fisubl
pop
mov
adc
arpl
inc
jns
popf
lock
test
ret
enter
pusha
sbb
pop
inc
insl
das
jae
inc
dec
push
dec
dec
testb
movsb
cmpsb
iret
call
in
cmp
push
pop
jns
pop
dec
add
inc
sbb
stos
sar
notl
out
jnp
outsb
and
hlt
ror
xchg
pop
jle
pop
jecxz
repnz
in
rcll
shl
mov
xor
inc
scas
pop
jle
in
sbb
outsb
mov
movsl
push
dec
aas
fidivrs
jecxz
pop
adc
push
pop
jns
cmp
insl
icebp
stc
test
add
out
jb
in
ds
jl
repnz
and
faddl
and
jmp
ds
jbe
je
add
stc
mov
push
fists
xchg
cld
out
xor
push
in
es
mov
add
fwait
sub
xchg
push
sub
les
subl
sub
lret
fwait
push
add
jp
pop
dec
and
jge
sub
lds
cmp
inc
popf
mov
outsb
and
div
in
mov
imul
xlat
xor
aam
scas
cld
mov
mov
sarb
mov
movsb
inc
mov
mov
sbb
xor
loope
dec
cmp
or
in
addr16
or
js
mov
out
sub
and
das
pop
xor
push
cmp
lock
inc
mov
inc
lds
movb
in
js
mov
push
mov
addr16
cmpsb
push
push
movsl
or
pushl
push
push
popa
dec
add
sti
inc
mov
aam
cmp
or
lahf
pop
jbe
out
add
and
mov
repnz
popf
ret
addr16
push
and
adc
js
fsubrp
enter
pop
les
fsts
aaa
and
xchg
mov
xchg
ret
or
mov
push
bound
lock
stc
in
push
push
imul
in
pop
jle
lods
cmp
mov
sub
add
mov
push
mov
mov
sahf
mov
add
pop
jle
aas
outsl
mov
mov
adc
bound
jle
in
and
inc
xor
mov
stos
inc
jl
in
inc
in
stos
mov
out
aad
cld
repnz
mov
xor
lock
repnz
das
mov
lods
sbb
imul
cld
rol
inc
into
push
test
mov
pop
es
sbb
and
mov
pop
cmpl
push
or
lret
cwtl
or
or
sbb
mov
mov
lret
iret
dec
je
xchg
int3
lahf
mov
jle
in
ds
add
fwait
xchg
mov
std
es
dec
mov
xor
stc
ja
pop
sti
fcom
sbb
movsb
mov
bnd
in
mov
loop
in
dec
jecxz
mov
stc
in
pop
pop
jno
out
sbb
cmpsb
mov
jle
dec
xor
add
inc
jne
repnz
or
stc
fcmovnu
insb
pop
in
pop
pop
movsl
pop
cmp
into
sbb
stos
jbe
mov
mov
cmp
fcmovnb
jg
daa
das
sub
inc
mov
shlb
test
mov
inc
push
cmp
repnz
out
or
loopne
xor
shll
lods
jmp
gs
add
push
lret
imulb
add
leave
mov
jp
sub
cmp
add
and
add
out
iret
dec
push
out
add
in
xchg
das
pop
je
sub
mov
cltd
pusha
int
sbbl
les
ss
in
pop
repnz
inc
sub
pop
in
in
inc
jle
scas
xlat
rol
add
xchg
pop
jle
faddl
lds
jnp
out
cmc
push
xor
hlt
scas
xchg
test
jl
mov
mov
xor
dec
arpl
jecxz
xor
mov
xor
mov
mov
arpl
cmp
lret
xor
mov
enter
hlt
mov
sub
loope
mov
std
lcall
repnz
mov
andb
ss
cmpsl
sub
jg
push
ficomps
jmp
push
aad
xchg
insb
rcll
add
push
push
gs
xchg
jg
pop
leave
inc
lods
jae
push
inc
pop
add
test
fimuls
xchg
push
push
lcall
in
push
mov
bound
inc
mov
mov
push
mov
push
adc
lds
mov
nop
jl
jno
loop
iret
pop
repnz
lret
push
les
jno
sarl
lret
sub
xlat
stc
add
adc
pop
jns
ret
push
popf
jbe
mull
scas
sar
in
jg
push
lock
pusha
scas
out
pop
je
imul
xchg
pop
jle
cwtl
outsb
bound
out
sbb
sub
mov
cmpsl
lahf
getsec
jle
cltd
sbb
jl
clc
enter
cmp
mov
xchg
push
cmp
sub
test
lods
dec
adc
jns
outsb
fs
stc
jne
push
scas
lock
fwait
jp
int3
aam
xchg
jl
fwait
lea
add
fbld
cmpsl
xchg
xchg
aaa
mov
fisubrl
dec
or
in
pop
inc
jp
push
pop
popa
xchg
jg
cmp
test
push
mov
mov
in
sbb
jb
pop
shll
add
in
push
pop
xchg
orb
movsl
in
xchg
stc
in
pop
stos
mov
cmp
and
pop
jle
mov
and
lahf
int
pop
jns
push
cmpsl
adc
fdiv
xorb
std
pop
jns
xchg
cld
jle
push
add
jo
adcb
aaa
out
mov
mov
sub
popf
sbb
out
mov
repnz
pop
js
xchg
fcompl
push
or
lret
jg
insl
dec
inc
push
sbb
sbb
mov
sub
pop
pop
and
nop
mov
je
aas
and
jae
jns
xchg
mov
fwait
jnp
xor
adc
fists
pushf
sub
fs
stos
or
imul
ds
xchg
push
cmp
cwtl
loope
sbb
xor
cld
repnz
das
sbb
or
lret
das
enter
lret
cmp
jg
int
cwtl
inc
scas
mov
mov
test
xchg
pop
jle
or
lahf
mov
out
sbb
lods
in
jns
test
pop
jns
cmp
jne
lret
mov
cmp
aaa
pop
jns
xchg
xchg
popa
jo
and
sbbl
insb
dec
jl
pop
aaa
sbb
lret
mov
xor
stos
lods
std
sub
ljmp
out
push
adc
popa
mov
je
or
in
movsb
dec
jl
ret
dec
mov
jno
cmp
jno
push
inc
dec
sbb
lahf
mov
xchg
inc
lods
push
inc
loop
int
daa
scas
out
xlat
stc
in
pop
cld
clc
outsl
mov
sub
jl
ret
adc
pop
jns
ljmp
rcrl
xor
gs
or
rclb
lret
cmc
nop
cmp
clc
jl
xchg
dec
and
and
dec
or
and
jno
in
adc
mov
stos
xor
sbb
das
mov
or
loopne
fildl
fnstcw
pop
stc
repnz
lock
insb
xchg
pop
loope
mov
outsl
mov
jnp
xchg
jg
mov
add
test
push
adc
imul
sub
aad
push
jns
mov
mov
das
sbb
stc
in
jle
addr16
call
mov
push
pop
jle
xor
daa
push
addb
aam
stc
in
jg
in
or
jno
push
jae
in
pop
jle
fdivr
push
adc
push
daa
pop
jle
ret
pop
pop
jmp
rcl
je
sbb
or
ja
or
inc
sbb
mov
inc
out
mov
ret
addr16
out
into
mov
xchg
xchg
aaa
jno
gs
sarb
cmc
and
inc
jle
and
outsl
push
adc
arpl
ja
test
or
lret
jecxz
mov
pop
cltd
jno
sbb
mov
repnz
fsts
xchg
push
jl
sub
inc
dec
bound
stc
in
or
lock
jno
jge
cmp
push
dec
repnz
xchg
pop
mov
and
pop
in
das
mov
aas
loope
pop
subps
cld
repnz
aas
pushf
jno
dec
jle
push
ds
mov
jb
call
enter
cld
repnz
das
sbb
cli
sbb
shll
lret
das
mov
fs
repz
inc
out
fs
das
mov
insl
sbbl
stc
repnz
movsb
jno
std
outsb
fldcw
push
fdivrp
jecxz
nop
aas
int
movsb
subb
push
scas
test
int
repnz
popa
and
fsubl
push
stos
push
lret
mov
arpl
shr
adc
jl
push
nop
cld
nop
gs
mov
mov
push
insl
test
pop
les
in
xor
enter
xchg
aaa
add
ret
jo
or
pop
repnz
mov
cmp
in
adc
inc
outsl
jge
xchg
cmp
jno
push
mov
mov
scas
pop
scas
pop
mov
inc
lea
in
dec
in
jge
fisubrl
mov
movsl
test
loopne
mov
mov
sbb
cmp
adc
cli
stc
in
inc
and
sbb
shl
mov
in
pop
jle
addr16
pmaxsw
push
std
xchg
pop
jle
mov
xchg
sbb
cmp
pop
in
inc
loop
fsubl
cmp
xor
daa
push
pop
jns
sbb
dec
pop
mov
in
mov
repnz
mov
xchg
sub
into
iret
aas
push
xchg
xchg
jmp
or
lret
mov
push
orl
jl
cmp
scas
mov
insb
jp
pop
adc
nop
push
aad
out
ds
lret
inc
ja
pop
stos
cmp
adc
in
mull
icebp
mov
pop
sub
push
mov
cmc
mov
and
scas
mov
mov
dec
or
repnz
push
push
leave
nop
and
jbe
adc
ret
in
repnz
adc
cmp
cmc
lret
mov
ljmp
shrb
mov
sub
mov
sbb
fisubl
nop
test
and
sbb
inc
sub
push
sub
mov
and
test
push
stc
sub
stc
sarb
into
fnstenv
mov
ds
cltd
jmp
mov
lret
mov
fistl
sub
adc
sub
adc
addb
shll
repnz
pop
je
or
call
mov
mov
mov
mov
out
daa
ret
cmpsl
jmp
jae
scas
test
rolb
sub
push
mov
fsubrs
xchg
pop
and
pop
aaa
cmp
es
pop
jle
xchg
loop
imul
mov
jl
push
stc
in
lock
mov
adcb
push
push
pop
jns
or
mov
rorb
xchg
int
insb
aas
aad
pusha
mov
xchg
push
lods
insb
fwait
push
decb
mov
ficoms
test
add
lret
stc
in
xchg
push
cmp
and
ret
in
jl
jbe
cmp
mov
ret
pop
jle
cmp
push
and
xor
sub
pop
xchg
inc
jle
in
xor
shll
pop
mov
imul
fldt
hlt
jns
jne
loope
inc
scas
mov
scas
push
and
inc
lods
lret
jge
das
in
aad
inc
mov
and
mov
loopne
cltd
mov
sti
pop
bound
rcll
js
add
mov
out
int3
or
es
xor
sub
xor
fldenv
pop
push
ss
jo
test
pop
jle
not
dec
mov
xchg
jmp
imul
lahf
rclb
stc
popf
stos
mov
repnz
das
mov
loopne
lods
flds
mov
or
repz
mov
mov
and
loop
fdivs
push
out
push
cmpsl
push
mov
fisubs
sarl
sbb
inc
repnz
bound
push
inc
cmc
mov
xchg
lret
mov
dec
mov
mov
sub
fdivl
imul
mov
cmc
cmp
dec
testl
pushf
test
mov
push
movsb
adc
adcb
inc
mov
jg
in
and
inc
mov
ss
das
ds
test
test
shlb
test
repnz
pop
jno
lret
adc
repnz
movsl
mov
clc
push
dec
ja
into
int
leave
mov
dec
mov
repnz
das
pop
decl
addr16
xor
arpl
je
addb
je
xchg
insl
pop
and
fwait
jbe
xchg
mov
jecxz
jns
xchg
xor
int
add
mov
sti
jns
xchg
push
ljmp
stos
or
aad
in
push
pop
mov
shrb
pop
sahf
push
pop
jns
daa
pop
and
xchg
mov
adc
pop
dec
ret
xchg
mov
shlb
jns
xchg
aaa
sub
mov
jo
call
sti
mov
push
inc
pop
mov
sbb
inc
in
in
inc
enter
sub
jns
push
and
pop
pusha
cmp
icebp
test
adc
mov
enter
sbb
in
jae
cmpl
pop
jge
cmp
dec
push
push
mov
or
xor
dec
xchg
aaa
pop
xchg
sarl
and
jmp
mov
mov
inc
jns
xchg
push
or
std
cmpsl
push
into
popf
je
fwait
mov
xchg
push
pop
and
in
in
sahf
repz
in
mov
cmp
xchg
mov
add
in
sub
pop
call
data16
and
arpl
les
push
das
lods
scas
mov
aas
mov
cmp
jae
icebp
and
lret
sub
add
xor
in
mov
mov
test
xorl
out
aas
push
cmp
inc
jle
in
rol
out
test
aam
pop
pusha
jns
sbb
pop
mov
mov
mov
call
xor
and
mov
lods
mov
mov
mov
dec
sbb
or
push
xchg
sub
push
pop
scas
in
in
insb
fcompl
stc
xlat
xchg
out
jge
adc
insb
pop
outsb
scas
sbb
clc
enter
loop
out
addr16
stos
lret
sub
sub
pop
aaa
dec
in
inc
adc
jo
push
outsl
or
xchg
pop
gs
pop
mov
inc
sub
and
mov
sbb
sub
xchg
in
cmp
outsb
lds
inc
push
das
faddl
movsl
pop
icebp
xor
addl
pop
bound
fsts
jns
cmp
push
dec
adc
lcall
in
pop
jns
xchg
jno
mov
mov
jecxz
inc
enter
push
sbb
cmc
lret
enter
xor
shl
xchg
sahf
int
inc
das
mov
cmp
popa
mov
pop
xor
mov
mov
mov
sbb
mov
das
xor
sub
arpl
pop
jne
outsl
es
test
push
or
xchg
pop
jle
dec
pop
xchg
push
ljmp
shrb
jle
in
sub
cld
dec
icebp
sbb
sub
lods
je
dec
jle
in
and
inc
cmpsb
jmp
xor
enter
adc
dec
jp
fucompp
and
push
sti
fbld
mov
add
lcall
xor
rcrl
inc
xlat
mov
xchg
push
or
dec
lds
cmp
adc
out
incl
xor
subl
ror
xlat
das
mov
mov
sub
popf
gs
aad
jle
jge
xor
out
test
xor
xchg
pop
lahf
and
repnz
push
pop
pushf
dec
push
lea
dec
ja
repnz
leave
jmp
and
mov
mov
pop
pop
mov
movsb
inc
or
cld
repnz
jp
inc
mov
stos
cmp
pop
sbb
jg
mov
mov
jno
xor
or
iret
lds
mov
icebp
leave
lret
lcall
jge
in
int
ja
xor
sbb
gs
xchg
pop
jle
loop
call
fbld
xchg
pop
jle
jecxz
pop
or
call
stc
in
jne
mov
pop
ja
jmp
mov
in
xchg
pop
and
or
stc
in
pop
mov
imul
jle
inc
in
pop
jle
jo
stos
shlb
push
in
ja
bswap
inc
inc
clc
jp
xchg
push
pop
jns
pushf
sbb
push
mov
mov
in
xchg
jmp
arpl
pop
jl
cwtl
outsl
repnz
mov
mov
pop
sbb
jl
ret
mov
pop
jmp
comiss
pop
cmc
inc
xor
ret
mov
sar
jge
lret
rorb
mov
mov
out
xchg
addr16
in
pop
ret
inc
push
nop
xlat
negb
inc
pushf
out
in
pop
jle
je
mov
add
fwait
add
jle
cld
repz
addb
mov
stc
in
test
int
jecxz
or
das
jle
in
js
inc
fisubl
or
in
pop
mov
lods
xorl
sub
out
movsb
jo
or
lods
test
xchg
cmp
es
cmpsl
push
test
xchg
jg
sbb
xlat
dec
and
mov
jno
xchg
pop
jle
inc
aaa
mov
xchg
pop
repz
xor
mov
jle
inc
int3
cmpsb
shlb
jbe
sbb
lods
jle
in
pusha
dec
fdivrs
jp
fdivl
repnz
pop
divl
das
test
movsb
ds
fidivs
jno
jle
in
add
pop
int3
and
xor
vpmulhw
nop
xchg
xor
fsts
and
mov
mov
sub
sub
sbb
fstpt
repnz
cmp
imul
icebp
rcl
mov
sub
lds
mov
popf
sarl
ret
sbb
jmp
repnz
nop
andb
xor
pop
data16
jo
lods
ljmp
je
pop
mov
jge
jge
loope
jecxz
shl
inc
lcall
repnz
mov
push
mov
sbb
out
sbb
add
mov
loope
pop
mov
or
push
stc
repnz
push
stos
cmp
sbb
adc
adc
call
mov
xor
push
mov
mov
jecxz
push
mov
sub
jl
data16
add
aam
cld
repnz
and
sahf
xor
pop
mov
fstl
repnz
das
mov
or
xchg
sub
repz
mov
das
mov
pop
hlt
mov
push
xchg
divl
adc
sti
mov
cltd
sub
xchg
lret
dec
repnz
mov
lods
insl
mov
add
lret
sbb
inc
loop
bound
stc
in
aas
ret
mov
cmp
cs
mov
inc
and
cmp
jl
enter
add
or
xchg
aaa
test
xchg
add
dec
sbb
scas
push
pop
jns
cmp
sbb
mov
cmpsb
les
in
jge
dec
jp
jmp
xchg
mov
jg
popf
or
bound
pushf
jle
in
xchg
rcr
jno
xor
mov
xchg
pop
pop
jae
lahf
sbb
adc
jle
popa
cmp
clc
pop
outsb
rclb
xor
adc
adc
mov
push
pop
jle
in
imul
jns
jae
stc
arpl
enter
push
fidivrs
mov
outsl
and
jmp
mov
lret
sbb
inc
mov
testl
fwait
sub
mov
and
lret
dec
xor
mov
outsb
xor
jg
sbb
pop
push
mov
gs
xchg
and
push
add
or
shll
in
pop
sub
aam
icebp
push
add
or
mov
sar
in
pop
fwait
dec
mov
leave
cmp
dec
aad
mov
aaa
stc
mov
xor
out
gs
test
nop
xor
test
sbb
loop
mov
cmp
out
pop
int3
outsb
mov
lret
lcall
push
sub
jge
mov
ds
pop
mov
pop
sti
clc
or
jl
in
jmp
add
pop
ss
repnz
jg
sub
bound
dec
and
push
test
adc
lods
lret
insl
leave
aam
jb
inc
add
nop
sub
jmp
adc
fisttps
adc
inc
inc
fcmovnu
scas
xchg
jo
repnz
and
adc
fucomp
mov
inc
cmp
roll
add
out
push
and
lret
lret
das
jle
sub
pushf
adc
jle
sti
loope
dec
das
mov
lret
orl
cld
repnz
cld
fstpl
push
lea
paddb
lret
das
and
inc
push
rcrb
jmp
outsl
imul
cmp
ret
xor
das
mov
jnp
xchg
fstpt
in
lock
fisubrs
idiv
out
mov
adcl
mov
cld
repnz
das
push
in
in
cltd
mov
repnz
das
mov
icebp
jecxz
xchg
mov
das
mov
pop
les
pop
frstor
lods
add
xchg
loopne
outsl
adc
mov
arpl
cli
outsb
test
or
fsubrp
xchg
sub
jae
testb
or
repnz
int
neg
sbb
pop
lret
das
mov
cmpsb
je
into
ss
gs
xchg
sbb
dec
mov
and
cmp
sub
dec
mov
ja
inc
cli
xor
xor
mov
lahf
and
mov
cld
sbb
cmpl
push
into
hlt
aad
push
pop
in
ja
xor
insb
mov
sub
stc
cmp
inc
je
lods
jne
cmp
lret
popf
mov
mov
sub
xor
sbb
cmpsb
push
dec
add
sub
sbb
movsb
lds
push
xchg
stos
mov
mov
imul
cwtl
out
cld
repnz
das
add
jle
out
xor
adc
outsb
lods
enter
add
pop
test
sub
aaa
movsl
add
scas
int
xor
outsb
pop
mov
inc
enter
adc
gs
ds
xchg
pop
loope
outsl
loope
pop
stos
xchg
lahf
ficompl
jle
in
xor
out
lds
stc
notl
and
push
repz
xchg
mov
push
in
xchg
mov
adc
mov
mov
sub
loop
xor
sub
mov
and
hlt
fcmovb
jge
lcall
stc
in
or
cmp
pop
dec
mov
lea
rcrb
mov
rcll
lret
sti
enter
sbb
sahf
cmp
inc
lds
test
cmp
jns
sub
sbb
inc
jp
sub
ret
cmp
int
or
scas
mov
inc
pop
xlat
and
sahf
dec
jns
mov
pop
inc
xor
mov
mov
orl
lret
dec
fstpl
scas
arpl
out
lret
mov
cs
lock
mov
mov
dec
addl
into
or
cmp
cmp
or
out
push
mov
lds
or
mov
ret
ja
jnp
and
inc
push
ja
dec
sbb
hlt
adc
sbb
in
pop
shrb
mov
loop
lds
inc
scas
testb
cmp
ljmp
in
stos
xchg
mov
lret
fistpl
push
enter
ret
pop
out
push
mov
stos
lea
out
leave
das
cs
jge
jne
push
loope
xor
pmullw
xrelease
xchg
push
loopne
das
inc
or
push
imul
pop
pop
pusha
popa
push
repz
fisubl
sahf
xchg
push
pop
jns
push
xchg
int
mov
mov
cmp
notl
inc
fidivl
cmc
stc
in
or
jo
rol
jge
das
jg
or
jg
arpl
test
je
adc
xchg
test
add
popa
fwait
xchg
negl
rclb
mov
xchg
push
fimuls
add
push
or
jmp
aas
into
aad
bnd
out
repnz
decl
rclb
notb
test
sbb
shlb
iret
pop
jns
loope
fcomps
cmp
xor
mov
inc
jns
cmp
mov
mov
xlat
ret
and
jae
push
pop
mov
cmpsb
scas
mov
jb
pop
sahf
sub
notl
jmp
hlt
xchg
aad
es
mov
or
dec
jnp
push
mov
lret
fimuls
in
out
test
cmp
and
add
dec
mov
in
pop
jle
add
add
xchg
and
xor
out
jne
fiadds
and
xchg
scas
lods
lcall
pop
or
js
scas
cli
mov
mov
repz
faddl
pop
in
in
daa
sub
out
add
mov
ds
and
stc
iret
cmpb
dec
mov
stc
in
mov
lret
pushf
imul
cltd
inc
andb
in
jle
sbb
fists
adc
xchg
lock
je
or
mov
sub
lea
insl
inc
scas
mov
mov
jmp
jns
setle
ljmp
movsl
jae
in
in
pop
imul
push
xor
push
lret
add
xchg
pop
jle
push
sbb
mov
pop
jle
and
fcomps
jge
cmp
in
or
jge,pt
adc
xchg
popf
clc
fstp
mov
xor
int3
xchg
pop
jbe
xor
mov
loope
outsb
sbbb
in
xchg
cld
pop
dec
jo
stos
out
dec
mov
subl
dec
pusha
push
xchg
or
xchg
push
pop
inc
inc
movsb
mov
jmp
movsb
ret
xchg
push
pop
jns
jg
ss
popa
jo
inc
stos
dec
and
jns
push
inc
movsl
lods
xor
popf
ljmp
jo
xchg
cmpsl
dec
fistl
das
mov
jmp
stc
ljmp
lock
cmp
stc
mov
jp
movsb
and
fstl
jns
dec
jae
outsb
or
out
loop
imul
int3
aad
pop
inc
add
movsb
add
pop
jns
cmp
aad
xchg
int
mov
mov
call
fdivrs
fucomp
leave
xchg
push
jmp
in
lcall
in
dec
mov
data16
mov
bound
cmp
adc
cmc
mov
popf
and
das
lahf
ss
movsb
pushf
jmp
repnz
das
lea
pop
jnp
inc
jecxz
and
in
pop
sti
lahf
xor
fcoml
push
add
push
cmp
movsb
push
in
jg
push
mov
pop
test
mov
inc
inc
cld
mov
xchg
in
push
pop
push
xor
xchg
aad
xchg
xchg
push
pop
jns
sub
xor
movsb
insb
xchg
in
dec
sar
mov
repnz
add
daa
addr16
xchg
mov
cmpsl
xor
mov
adc
push
mov
ret
scas
mov
pop
mov
mov
xchg
mov
mov
jmp
sub
je
xchg
sbb
jecxz
in
push
psubsw
add
data16
into
cld
repnz
and
cmc
aad
inc
xor
adc
repnz
das
mov
xor
aaa
mov
cld
arpl
aaa
int
dec
lea
add
in
jbe
daa
mov
xchg
and
mov
lds
mov
pop
sub
gs
push
push
push
inc
scas
mov
push
lret
cmp
out
and
in
pop
push
mov
ret
jmp
lret
das
mov
push
shlb
fstpl
cld
bnd
cmp
or
rcl
pop
or
xlat
sbb
jle
test
sub
ja
xchg
sub
loop
and
sbb
xchg
mov
jge
icebp
imul
js
fldl
lahf
fmuls
in
dec
je
subb
mov
out
and
insl
mov
dec
mov
sbb
push
sub
out
lahf
ljmp
cmpl
scas
mov
xor
pop
jns
cmp
ljmp
mov
outsl
test
inc
outsl
mov
lods
dec
jmp
sub
push
dec
out
jmp
scas
and
add
add
scas
push
mov
xor
cs
sub
clc
xchg
jno
pop
vorps
repnz
lea
lcall
mov
adc
inc
sti
sbbl
mov
loope
cli
mov
scas
repnz
das
mov
mov
repz
mov
cmp
push
ds
mov
cltd
and
pop
loop
dec
cmp
jle
mov
jnp
and
pop
fdivrl
movsl
stc
notl
ja
mov
inc
jmp
xchg
pop
jle
jle
mov
mov
sbb
xchg
pop
jle
adc
push
cwtl
ljmp
dec
movsl
ret
mov
popf
xchg
or
pop
fs
pop
mov
out
xchg
jno
fists
xchg
rcr
mov
push
lahf
jl
sub
add
out
in
mov
jno
incl
das
pop
clc
in
sub
xchg
mov
mov
int3
inc
jge
jmp
imul
je
and
insb
push
mov
in
cmpb
ret
sbb
out
lods
and
ret
jae
mov
lods
jge
arpl
xlat
jae
mov
and
xchg
pop
adc
clc
jg
mov
jl
mov
push
jb
xchg
sub
push
loope
adc
and
imul
cmp
les
inc
and
cld
repnz
mov
cmp
mull
or
mov
or
xchg
lret
das
mov
mov
aas
sbb
dec
cld
repnz
ds
addr16
fsubrl
aaa
sub
nop
sbb
pop
jle
in
push
mov
inc
lcall
xchg
mov
stc
in
lods
pushf
mov
adc
sbb
mov
cwtl
adc
cwtl
xchg
jg
add
ja
fldenv
xchg
mov
inc
push
pop
dec
xchg
push
mov
aam
enter
mov
in
pop
jns
xchg
imul
fistl
outsl
lea
pop
xor
dec
jno
scas
ret
cmp
rcr
repnz
ficomps
push
test
jge
stc
stos
pop
mov
dec
push
add
mov
enter
sbbl
sub
mov
mov
jne
pop
insl
jae
jg
scas
sbb
and
test
stos
xchg
pop
jle
in
leave
jb
cmpsl
xchg
xchg
mov
fwait
add
shr
movsl
clc
movsl
mov
mov
cli
adc
repnz
test
mov
sbb
push
pusha
xchg
bswap
pop
pop
jns
xchg
int3
std
jg
mov
lea
mov
pop
mov
and
enter
sub
scas
mov
sub
jmp
and
repnz
int
les
cmp
ds
adc
imul
and
cwtl
nop
cli
mov
sbb
xor
cmp
xor
lahf
mov
push
je
decl
clc
inc
xlat
cmp
icebp
rclb
jmp
repnz
das
cs
adc
shl
jg
sub
fcomip
lret
das
mov
mov
inc
pop
dec
das
mov
shll
dec
incl
adc
repnz
negb
sbb
pop
nop
cmp
hlt
xchg
xlat
mov
cmpsl
scas
mov
sub
mov
sti
lret
mov
mov
clc
std
out
sub
fiadds
sahf
mov
xchg
lret
inc
mov
cmp
mov
pop
out
adc
adc
mov
fbld
sahf
bound
daa
ret
jnp
cwtl
sub
jne
clc
aas
mov
je
das
mov
add
iret
ja
xor
xchg
rclb
mov
or
lret
push
inc
pop
test
lret
repnz
das
mov
lods
and
jle
lret
das
pop
stc
sub
cs
hlt
cmpsl
lahf
mov
mov
sti
or
repnz
mov
dec
stos
cmp
sbb
clc
jno
repnz
das
mov
or
sbb
arpl
sub
mov
push
pop
test
and
data16
jne
test
cmp
in
sbb
lret
fs
jo
add
daa
pop
lcall
xchg
aaa
nop
pop
imul
pop
sahf
jge
repnz
sarl
mov
xchg
aaa
cmpsb
ja
mov
pop
jns
jmp
xor
popf
scas
mov
dec
test
mov
push
into
out
push
cmp
clc
ss
outsl
mov
lahf
jnp
in
scas
mov
push
cmpl
repnz
lret
push
fidivrl
js
dec
cld
repnz
gs
jae
push
pop
daa
inc
and
mov
jne
mov
xchg
scas
mov
repnz
testl
sub
push
mov
in
das
pop
frstor
inc
lahf
fdivs
rcll
sahf
sti
lea
jae
lahf
cmpsb
and
mov
push
mov
jl
repnz
pop
out
les
cmp
call
sub
mov
les
sub
mov
pushf
sub
mov
test
jnp
das
int
in
jmp
mov
mov
sbb
jmp
sub
in
push
in
inc
push
cmp
ja
jecxz
inc
add
inc
daa
mov
mov
insb
sbb
inc
shlb
cld
repnz
std
and
sbb
push
rcrl
or
lret
xchg
push
aad
or
pop
jns
mov
lods
mov
xchg
push
in
jg
pop
call
dec
push
jp
leave
lret
das
shll
sub
popf
rcll
pop
jge
clc
mov
fidivs
jl
inc
cmc
daa
popf
repnz
lahf
sarb
sti
enter
lcall
test
in
cmp
in
vpaddsw
test
repnz
jbe
rolb
je
sub
jge
lret
das
add
lock
gs
rcrl
xlat
add
stc
in
jg
adc
ss
dec
dec
mov
sbb
push
fs
shrb
or
enter
fs
test
scas
fimuls
mov
mov
cwtl
push
aas
push
push
lret
das
mov
test
xchg
sbb
or
mov
push
icebp
mov
sbb
push
shll
push
and
pop
mov
pop
push
adc
repnz
push
cmp
jne
test
jle
xchg
lret
mov
cmp
fadd
sub
in
push
mov
out
ja
scas
mov
cmpsb
add
cwtl
lahf
inc
cmp
xor
scas
mov
lret
cmp
xor
mov
fdivl
sub
lcall
repnz
repnz
out
dec
inc
jae
xchg
push
fimuls
mov
lods
popf
push
push
shrl
jno
sarl
pop
out
repnz
mov
movsb
adc
mov
das
mov
mov
jno
rcr
ja
xor
mov
inc
xchg
sub
mov
adc
aad
pop
push
call
call
outsl
dec
mov
dec
sub
repnz
insb
and
inc
fidivl
loopne
jg
stc
repnz
das
push
out
dec
add
aad
jne
adc
sbb
sti
ja
jb
in
daa
cmp
xor
lods
mov
lcall
rorl
cltd
je
add
push
repnz
mov
push
enter
sub
sbb
adc
mov
and
idivb
or
lret
loop
enter
pop
or
sub
shll
addr16
xor
mov
add
inc
or
pop
ss
addr16
mov
jno
lahf
ffreep
test
sbb
cld
jnp
icebp
add
jmp
sahf
xor
cltd
stc
in
jg
pop
inc
pop
lods
cltd
xchg
jae
xor
xchg
pop
jle
pop
loope
mov
test
mov
stc
mov
jns
pop
and
fistl
pmulhw
insl
mov
dec
jecxz
mov
nop
pusha
in
pushf
loop
sahf
mov
fidivrl
repnz
mov
aaa
sub
push
mov
xchg
push
js
mov
mov
out
xor
xchg
xor
fnstcw
repnz
sub
inc
xchg
fldenv
xchg
sbb
jmp
sub
xor
movl
fisubl
scas
mov
loop
imul
pop
cmpsl
mov
add
pop
or
in
sub
mov
xlat
bound
andl
test
orb
pop
jmp
jg
leave
mov
cmp
dec
cmp
pop
jle
in
pop
xchg
push
adc
sub
stc
arpl
bound
in
jne
rcl
push
jecxz
mov
jmp
in
pop
inc
repnz
rcll
cmpsb
scas
dec
or
daa
pop
jle
lods
add
xchg
imul
and
daa
jl
in
lret
into
or
jge
xor
mov
xchg
inc
push
scas
pop
cmp
or
mov
jnp
sub
jle
push
insl
daa
pop
das
mov
icebp
sti
or
sub
rol
inc
mov
jns
aad
jg
push
paddw
notl
mov
gs
xchg
dec
xchg
pop
jle
data16
loopne
mov
mov
adc
sbb
mov
lret
movsb
mov
gs
and
ret
pop
enter
sahf
mov
stc
in
loop
push
ret
xchg
pop
addr16
je
iret
into
cmp
mov
mov
es
mov
loopne
pop
adc
outsb
push
bound
mov
xchg
and
lret
fistps
xchg
inc
inc
or
cli
into
lea
pop
inc
test
fdiv
out
and
stc
movsb
lds
adc
imul
add
pop
jle
in
mov
xor
pop
mov
jg
fstpl
adc
cmp
pop
ljmp
pop
push
dec
mov
jae
jae
xchg
pop
jle
jg
push
jmp
xchg
jle
in
push
jno
and
cmp
pop
ds
adcb
inc
xchg
ljmp
repnz
dec
lods
xor
mov
js
outsb
mov
sub
enter
inc
shl
cmp
test
or
xorb
cmpsl
cmpsl
push
daa
outsl
add
xor
jg
lock
out
addr16
subb
and
into
aad
adc
pop
or
cld
pop
rclb
in
jnp
repnz
repz
mov
pop
jo
fs
out
fs
mov
bound
loop
arpl
cmp
orl
aaa
repnz
arpl
sbb
fidivrs
movsl
xor
sub
cli
push
cmpb
lcall
mov
jbe
sbbl
sub
cmp
repnz
ja
sbb
leave
imul
sahf
mov
in
cmpl
mov
and
push
stc
in
rorl
add
xor
sub
sti
cmpsl
xchg
repz
push
mov
mov
cmp
insl
xchg
insl
int
add
or
lcall
pop
sti
rcl
outsl
cwtl
cli
push
notb
jge
mov
mov
aas
jae
lods
ss
jno
cmp
lret
jb
or
sti
lahf
jle
je
out
and
xor
pusha
ds
mov
in
out
mov
push
stc
and
mov
pop
jnp
pop
jns
lods
das
cmpsb
stc
sbb
and
push
call
in
push
lcall
in
mov
jl
xchg
in
xchg
test
mov
enter
int
cmp
pop
repz
or
ds
push
jns
xor
in
sub
xor
les
jge
cmp
fst
xchg
das
inc
cld
repnz
xchg
or
lahf
mov
sbb
cmpsb
mov
mov
and
adcb
arpl
xor
stos
jbe
jp
cs
push
mov
mov
jmp
dec
jle
in
enter
subl
and
in
pop
imul
cmp
ret
sbb
aaa
push
or
dec
jecxz
daa
add
mov
test
dec
pop
jmp
repnz
adc
es
out
cltd
clc
push
or
test
fwait
jne
push
data16
lock
shrb
inc
loopne
loop
daa
mov
repnz
pop
dec
out
jae
aas
pop
inc
or
cmp
push
push
andl
jbe
stos
test
stos
jge
loopne
in
jg
cld
repnz
jae
sub
cmp
iret
ljmp
jge
lret
das
out
add
movsb
add
pop
inc
push
imul
cld
sti
mov
dec
test
xchg
mov
sbb
stos
dec
sub
jge
xchg
or
inc
scas
cmp
jae
pop
imul
aaa
les
xchg
pushl
enter
dec
mov
mov
arpl
add
jno
scas
mov
ja
ret
dec
mov
sbb
enter
sbb
jl
addr16
dec
xor
data16
or
out
jns
loopne
push
out
adcb
leave
mov
sbb
cmp
xchg
cmp
fwait
mov
in
mov
push
inc
add
push
mov
repnz
mov
push
or
push
add
lret
das
mov
jns
gs
lret
das
mov
add
pop
imul
inc
cmpl
outsb
push
mov
push
ret
adc
dec
pusha
mov
mov
pop
sub
fsubrl
cld
repnz
out
dec
xchg
inc
lret
aas
inc
push
inc
lds
mov
jnp
or
lahf
adc
in
jge
lret
pop
mov
icebp
cmp
imul
data16
in
pop
repnz
sti
test
cmp
mov
jle
js
xor
sti
daa
je
and
and
pop
aad
mov
adc
fwait
repz
vpmullw
pushf
gs
lret
stos
out
es
pop
adc
loope
scas
pop
jge
aam
cmpsb
lea
push
rcl
jnp
cmpsb
xchg
xor
mov
icebp
adc
add
addr16
in
das
jmp
lea
push
in
scas
cs
jnp,pt
aaa
pextrw
js
movsb
sub
inc
arpl
inc
xchg
or
stc
repnz
in
mov
fs
add
aas
sahf
sbb
lds
das
iret
fnsave
in
jb
cmpsl
nop
cltd
aas
lods
pop
mov
int3
daa
repnz
ret
mov
sub
mov
repz
or
pop
jns
jecxz
cmp
rcll
xchg
push
insb
add
adc
mov
and
ficoml
shlb
sahf
xchg
inc
push
cmp
xchg
imul
mov
sahf
inc
mov
push
cmp
je
xor
push
xor
push
cld
aaa
cmp
imul
xchg
push
aas
lret
out
gs
sti
push
fmulp
js
jne
das
or
out
sub
push
xchg
test
mov
inc
xchg
push
pop
jns
in
cmc
aam
cmp
sub
dec
or
lods
xor
inc
ret
sbb
out
sub
sbbb
xchg
enter
jge
out
adc
mov
inc
shlb
in
cli
enter
lcall
movsl
scas
xor
fstpl
nop
mov
in
pop
jns
out
repnz
dec
inc
jae
sbb
cmpsb
push
stc
test
in
mov
and
jle
push
andb
call
inc
mov
xchg
bnd
push
out
fwait
sbb
xchg
fsts
mov
xor
adc
and
stc
xchg
filds
cmc
scas
mov
jo
jb
mov
clc
mov
mov
cmp
imul
sub
xchg
movsb
mov
jecxz
ds
jns
sub
and
sbb
insl
mov
test
xchg
xlat
cld
and
ds
in
pop
aam
push
into
lds
sti
andb
pop
jle
add
add
inc
mov
jle
adc
xchg
push
outsl
js
jge
lahf
mov
daa
or
stc
push
sub
mov
cmp
cld
repnz
das
and
cmp
mov
jmp
jg
pop
inc
ljmp
sub
mov
incl
lock
cmpsb
inc
inc
test
sub
mov
pop
jns
cmp
adc
inc
fidivrl
leave
fdivrl
xchg
push
iret
fiaddl
mov
sub
push
in
xchg
push
pop
mov
push
lret
xorl
mov
mov
sub
test
sbb
in
sub
pop
out
in
xchg
jno
pop
jge
inc
ja
aaa
popf
pop
pop
or
jbe
xchg
cmp
jnp
xchg
jg
pop
push
lock
lds
popa
out
repnz
push
adc
les
fisubrl
cld
mov
out
cmp
mov
inc
mov
stc
mov
sub
push
push
mov
dec
cmp
clc
mov
mov
hlt
push
lds
mov
es
std
mov
pop
jge
pop
and
sbbb
jl
lret
das
loopne
test
std
in
sbb
andb
and
jnp
aad
aas
adc
add
sub
jp
nop
xchg
popa
mov
hlt
leave
and
xchg
pop
mulb
push
cmp
pop
mov
mov
ds
and
aam
sar
popa
ret
xor
cmpsb
xor
aam
sbb
adc
xor
sbb
mov
lret
das
mov
add
out
cmp
das
mov
cmp
movsl
ja
in
stos
ss
lret
leave
aaa
inc
push
sub
adc
lea
bound
xchg
in
mov
scas
push
lret
push
jnp
xor
lret
imul
lret
mov
clc
xlat
cwtl
bnd
sub
dec
lret
das
mov
add
sub
and
mov
aam
adc
mov
sub
movsl
mov
icebp
enter
add
daa
jns
pop
jns
xchg
aas
mov
ss
sbb
sbb
jne
push
mov
xlat
pop
cltd
mov
repnz
das
inc
and
fstps
and
icebp
xchg
das
mov
cwtl
mov
mov
repnz
xor
and
mov
xor
sub
sub
sub
jecxz
lea
lock
shr
in
jg
lds
cmp
sub
jbe
pop
jle
dec
das
ljmpw
or
jne
fiadds
clc
enter
outsb
pushf
test
jae
shlb
in
adc
jg
xor
fistl
jae
hlt
sbb
cmp
mov
ds
xchg
jl
xchg
lret
imul
or
mov
leave
lret
and
xchg
lret
mov
dec
enter
sub
mov
inc
xorl
sub
cwtl
js
lret
stos
push
cmpsl
fs
in
push
faddp
jecxz
fs
nop
push
into
int3
loope
jge
filds
pop
dec
push
inc
pushf
leave
hlt
imul
out
xchg
inc
push
inc
fiadds
arpl
push
repz
push
pop
jns
nop
insb
iret
lods
aas
jnp
adc
rol
dec
push
pop
jns
leave
scas
add
scas
pop
fs
and
aaa
fxam
lea
leave
fistpll
jns
ljmp
mov
pop
jns
and
enter
jecxz
pop
flds
pop
daa
out
mov
inc
mov
and
inc
pop
leave
enter
xchg
push
jl
in
aaa
mov
and
jne
fbstp
les
notl
in
imul
or
mov
mov
pop
into
sbb
xchg
xchg
jnp
jne
in
js
cmp
lcall
lods
sub
ret
hlt
gs
sbb
in
xchg
ss
arpl
cmp
pop
cmpb
jecxz
mov
in
push
inc
and
je
dec
movsl
push
test
push
pop
sub
int
stc
adc
stos
out
sbb
xchg
push
pop
jns
popf
imul
stos
xor
mov
and
jns
xchg
xchg
in
mov
pop
arpl
sub
dec
loopew
pop
mov
jns
icebp
mov
lods
das
xor
repnz
add
cmc
ljmp
ds
cvtdq2ps
lahf
aad
dec
test
pop
add
mov
mov
sbb
stc
mov
xchg
jl
sahf
in
xor
in
ja
sub
jg
ret
fadds
sub
lret
and
out
idiv
mov
repnz
jae
imul
cmpsl
add
repnz
mov
pop
mov
sub
pop
in
and
cmp
imul
jp
inc
jle
sbb
mov
ds
aam
jns
sbb
sub
lcall
orl
inc
adc
rcll
fnstsw
ljmp
mov
shrb
stos
xor
cmp
pop
jle
in
push
sbb
jmp
popf
mov
cmp
sti
enter
push
cmpsl
loopne
fsubr
and
das
mov
adc
lcall
repnz
add
or
mov
pop
and
adc
fcompl
stc
repnz
and
adc
pop
mov
jns
in
iret
jge
or
cmc
jns
adc
mov
xchg
pop
jle
jl
push
daa
sar
xor
enter
jle
mov
add
or
stc
insb
push
loop
mov
or
xchg
pop
jle
aad
push
jmp
jno
mov
nop
stos
inc
cmc
xor
push
mov
cld
repnz
negl
mov
subb
or
repnz
das
aas
out
pusha
int
xor
sbb
jnp
out
xchg
lods
mov
dec
mov
outsl
ret
push
iret
lods
mov
mov
aas
xchg
adc
mov
das
ja
pop
add
push
pop
inc
and
jns
hlt
cmp
adc
and
outsb
sarl
repnz
dec
mov
jns
push
movsl
xor
lahf
cld
repnz
das
mov
addr16
fnsave
leave
das
mov
sbb
int
dec
cli
jo
mov
sub
pop
mov
mov
les
insb
push
cld
repnz
das
daa
mov
lret
xchg
in
addr16
fptan
lret
das
mov
push
cmpsl
xor
adc
jnp
dec
xchg
fs
mov
std
int3
lods
and
js
pop
jns
jl
leave
in
pop
pop
mov
jo
jnp
in
jp
pop
cmp
jge
imul
sbb
fcomip
ror
out
and
imul
clc
add
xchg
and
sbb
dec
shl
push
shlb
lret
mov
outsb
fistl
les
jb
lret
das
mov
xchg
pop
out
inc
push
fbld
cld
xchg
scas
and
iret
mov
ret
jge
jl
in
inc
xlat
es
lahf
mov
jmp
in
test
pop
pop
cs
jo
add
xor
mov
icebp
inc
scas
dec
cmc
pushf
mov
and
rcll
dec
std
jge
lret
mov
mov
lcall
xchg
pop
mov
push
repz
adcl
sbb
jl
mov
js
mov
dec
or
leave
inc
jns
lahf
test
add
inc
cltd
in
jne
loope
adc
fadd
outsb
fiadds
pop
ret
pop
shll
sub
mov
and
fists
fisubl
stos
mov
andb
lcall
notb
mov
cwtl
or
or
sub
out
mov
ret
and
ds
andb
sbb
cmpsb
insb
test
mov
cld
shr
cmp
xchg
and
add
adc
repz
in
push
call
movsb
xchg
fs
jg
in
pop
fidivs
add
xchg
and
pop
jge
sbb
aaa
and
outsb
out
add
icebp
or
sub
cs
cld
repnz
das
cld
cmp
xchg
dec
test
xchg
push
mov
dec
in
sub
mov
sbb
mov
adc
stos
scas
mov
push
adc
xor
mov
push
ja
mov
sub
shl
lret
out
iret
mov
inc
push
lret
das
mov
push
insl
add
mov
push
and
xchg
sub
lods
inc
daa
mov
inc
jle
ja
add
cltd
sahf
scas
add
jb
in
pop
fdivl
in
mov
pop
jle
mov
push
rclb
mov
mov
jle
daa
or
data16
cmp
adc
dec
pop
jle
in
pop
and
out
mov
rcll
xchg
add
add
pop
jmp
xchg
pop
cmp
mov
push
cmp
dec
dec
push
call
in
push
fimuls
jecxz
jecxz
add
adc
pop
pop
jns
mov
mov
out
add
cltd
jle
sti
test
lret
sbb
sub
xchg
sub
adc
mov
and
mulb
push
mov
mov
cwtl
jle
and
cmp
xor
xor
jae
xor
pop
and
lcall
iret
lds
lock
or
jle
ss
xlat
lahf
pushf
add
leave
icebp
dec
cmp
in
mov
or
out
popf
xchg
imul
imulb
push
fiadds
xchg
jnp
mov
inc
xor
stc
in
xchg
sub
pusha
push
mov
pop
in
pop
jle
pop
pushf
int3
pusha
inc
mov
sbb
pop
jle
and
add
rcl
mov
push
sarb
lret
xchg
lods
dec
outsl
jge
lcall
aam
popf
pushf
shrb
dec
insl
mov
xchg
cmc
in
stos
xchg
pop
xchg
fnstcw
jae
lret
mov
push
fisttpl
xor
and
inc
mov
jo
popa
add
or
jne
and
jns
xchg
add
ja
pop
test
sti
enter
or
sub
cmp
pop
cmp
data16
lret
mov
sub
call
dec
jnp
test
pop
cltd
int3
inc
stos
mov
push
mov
jl
in
sub
dec
pop
into
push
pop
jg
in
test
jge
adc
test
xchg
jg
pop
movsl
test
fldl
hlt
jmp
imul
loopne
lods
pop
loop
push
mov
jle
in
sbb
mov
cmp
stc
in
pop
mov
push
stc
loop
fwait
std
mov
mov
stc
mov
pop
aaa
xchg
out
inc
dec
test
pop
jle
lds
xrelease
fs
stc
adc
push
cwtl
lcall
jle
in
and
mov
sbb
les
pop
stc
repnz
ret
je
or
mov
pop
hlt
cld
stc
in
jg
jg
les
cmp
pop
jle
cmp
pop
out
inc
push
sti
mov
cmp
incb
ret
sub
sbb
repnz
sbb
lret
shll
push
bound
je
adc
inc
push
mov
or
jmp
imul
adc
das
in
mov
dec
mov
out
dec
cmp
cmp
jmp
test
repnz
ss
inc
or
enter
lret
mov
nop
mov
imul
dec
mov
pop
push
push
cmc
push
mov
add
shll
lods
add
fdivr
repnz
das
sub
movsl
jge
push
inc
test
je
mov
and
mov
cs
pop
lods
push
xlat
cs
xlat
jecxz
jle
notl
mov
in
or
xlat
stc
in
pop
mov
mov
fst
mov
cmp
xchg
pop
jle
mov
stc
push
lock
xchg
xchg
pop
jle
rcr
xor
cmp
aad
jmp
pop
loopne
stos
dec
inc
xchg
fnstsw
pop
jle
in
je
mov
nop
and
loopne
jl
xchg
pop
mov
mov
aam
xchg
pop
jle
pop
mov
dec
push
es
jns
leave
cli
aam
sbb
mov
jne
inc
in
push
pop
call
inc
cmp
addr16
idivl
outsl
jmp
xchg
aaa
sbbb
cli
ds
icebp
in
fs
scas
and
sbb
ds
repnz
das
jmp
mov
xor
mov
mov
fbld
mov
getsec
mov
loopne
ss
add
cmp
in
ss
sub
inc
lahf
xor
xchg
jecxz
sub
lret
sbb
daa
loop
or
mov
clc
mov
notl
arpl
scas
mov
leave
pop
mov
pop
icebp
jne
xlat
mov
xchg
outsb
movl
enter
js
push
cltd
icebp
dec
push
mov
repnz
gs
and
lret
pop
outsl
loope
stc
in
fcmovnu
and
rorl
jle
stos
sbb
mov
mov
xchg
pop
int3
mov
mov
or
pop
jns
xchg
lods
sub
icebp
mov
or
dec
aaa
aad
les
jae
outsl
lcall
in
pop
dec
mov
adc
dec
es
or
fwait
xor
pushf
faddp
test
or
lret
inc
js
push
fdivrs
xchg
push
push
and
pop
sbb
loop
xchg
push
pop
gs
jno
mov
comiss
loopne
xchg
push
pop
jns
int
add
ss
test
mov
in
pop
notl
rcr
cmp
sub
ret
xor
loope
pop
push
mov
sub
dec
scas
mov
pop
jns
xchg
or
daa
inc
out
xchg
std
popa
jns
xchg
push
sbb
insb
adc
std
in
push
pop
pop
sbb
loop
testb
xchg
push
pop
jns
ret
cli
mov
cmp
sub
push
pop
jns
hlt
mov
or
dec
adc
jb
xchg
scas
ret
lret
mov
sub
lea
lcall
mov
pop
pop
jns
sti
sbb
movsb
mov
dec
in
je
lret
mov
lds
sbb
inc
test
das
mov
ss
jge
or
pop
stc
repnz
je
cmp
pop
xlat
cmp
in
clc
lods
sbb
fimull
int
cs
gs
mov
mov
ret
jecxz
xchg
cmp
dec
jo
pop
xchg
sbb
in
pop
jmp
shrb
inc
pop
cld
jnp
iret
and
adc
jo
jle
mov
xor
das
dec
mov
sbb
test
and
in
pop
loope
inc
in
sub
sbb
cmpsb
and
sbb
call
repnz
xor
pop
ljmp
ds
mov
cmp
add
jns
xchg
push
xor
test
nop
lret
mov
push
mov
rol
outsl
xorb
pop
fisttpll
or
aad
or
bound
mov
sti
pop
shrl
mov
jo
push
movsb
and
xchg
das
lahf
xor
or
ds
aas
aas
ret
xchg
xchg
repz
das
xchg
pop
push
jge
rcll
pop
loope,pn
repz
fcomip
jle
das
mov
jno
repnz
cmp
cld
repnz
inc
out
out
xor
fisttpll
movsl
lcall
addr16
jae
xchg
movsb
dec
jle
sahf
iret
push
add
repnz
das
mov
or
popf
jle
test
cltd
sbb
rcll
into
popa
addr16
stc
jno
or
scas
push
jae
jle
in
xchg
cmp
andb
fdivrs
cld
jnp
xchg
fnop
cli
fadd
add
sub
cmpsl
into
mov
xor
fdivs
popa
add
inc
adc
ja
js
mov
mov
cli
inc
mov
in
and
xor
and
imul
hlt
pop
sub
cmp
xchg
rorb
daa
xorb
push
adc
lahf
enter
inc
mov
dec
jbe
fidivrl
repnz
imul
ret
inc
push
xor
repnz
jo
and
shlb
inc
scas
mov
sub
pop
jns
or
clc
aaa
inc
aas
jl
dec
and
fists
repnz
mov
push
xchg
pop
jle
cmpsb
inc
mov
mov
pop
jle
in
push
insb
sub
mov
test
scas
mov
xchg
jle
in
pop
push
clc
loope
adc
mov
out
and
icebp
xor
pop
mov
jne
loopne
filds
cld
or
mov
push
dec
xchg
jmp
in
dec
into
mov
lds
pop
scas
or
dec
ds
mov
test
xchg
mov
das
ljmp
loopne
out
out
inc
outsl
stos
dec
or
jg
stc
jmp
xchg
push
push
push
es
push
push
and
mov
sbb
mov
in
arpl
pop
and
sbbb
nop
int
jl
jb
dec
enter
sti
add
mov
inc
mov
push
scas
add
mov
in
ja
xchg
sbb
mov
rcll
add
cli
sahf
mov
sub
pop
jns
test
lea
lcall
push
add
imul
xchg
jl
loop
jns
xchg
push
xor
test
or
popf
sub
xchg
push
pop
loop
jnp
mov
cltd
pop
pop
inc
pop
jns
or
lock
notl
mov
repnz
enter
sbb
rcll
adc
call
das
mov
sub
push
mov
das
mov
sub
mov
mov
push
and
cld
repnz
dec
add
cmpsl
js
cld
imul
mov
lock
fstps
subl
rorl
sbb
mov
into
lcall
in
mov
lds
sub
and
pop
jg
jbe
out
xor
jb
sub
dec
or
push
pop
repnz
das
ljmp
dec
dec
cltd
in
pusha
rolb
sbb
stc
gs
add
sbb
out
jbe
ds
lret
mov
xchg
add
scas
mov
mov
shlb
adc
lret
push
pop
inc
mov
push
fisubrs
insb
nop
mov
inc
enter
push
stc
in
mov
or
cmp
sub
jns
xchg
ja
pop
or
adc
nop
xchg
shlb
push
pop
xchg
aad
repnz
push
cwtl
stc
mov
cmp
daa
inc
clc
int
popa
mov
xchg
pop
jmp
dec
dec
jns
mov
cmp
scas
pop
mov
pop
das
jle
jns
loopne
xor
pop
add
in
push
pop
jp
int
cmp
int3
lret
pop
jge
pop
in
push
jle
test
mov
repnz
imul
sub
mov
negl
das
or
cwtl
xor
jg
xchg
push
pop
out
jge
sbb
movsl
xchg
mov
adc
jns
jge
add
cmovae
mov
test
adc
dec
fwait
or
out
div
cmp
sbb
in
out
mov
xlat
sbb
sbb
cld
ror
sub
push
adc
pushf
pop
or
mov
movhps
jae
lret
aas
xor
movsb
into
xlat
sub
das
mov
add
sbb
inc
in
mov
clc
jnp
dec
push
xchg
push
fbstp
cld
repnz
mov
popf
cmp
xchg
sti
enter
adc
pop
pop
insl
xor
jb
mov
cmp
pop
add
inc
imul
fstps
mov
idivl
adc
pop
mov
into
and
xor
das
ds
jo
pop
inc
or
popa
scas
out
or
das
mov
xlat
pop
popf
cmpsl
cmpsb
movsb
ror
mov
jl
lret
in
movsl
fwait
cmp
loop
fwait
mov
gs
cld
xchg
mov
ss
xchg
jae
xchg
ds
and
mov
adc
push
test
repnz
mov
jl
in
or
nop
out
insl
cmp
jl
and
in
pop
mov
push
lock
repnz
dec
movsl
push
cmc
je
push
mov
pop
add
addb
testb
arpl
jno
jns
cmp
out
dec
jmp
in
pop
stc
mov
inc
in
int3
sub
das
test
int
xchg
jno
mov
jne
xchg
push
ljmp
pop
cmp
icebp
or
lods
loope
lret
mov
mov
jbe
je
lret
mov
js
pop
daa
pop
mov
mov
xchg
loope
push
std
push
dec
mov
cwtl
repnz
ret
xor
lahf
mov
mov
push
mov
dec
rcrb
fists
frstor
repz
mov
xchg
pop
jle
inc
push
jle
cwtl
push
sbb
repnz
or
sub
lret
fs
and
insb
aas
lock
mov
adc
mov
sub
xchg
dec
dec
ret
cmp
push
loopne
dec
xor
sahf
stos
cld
repnz
and
fld
inc
das
fldenv
leave
xor
iret
iret
lea
mov
in
fwait
out
xchg
sbb
mov
cwtl
int
test
push
stc
ja
jmp
popl
mov
mov
les
lcall
and
or
xchg
fcompl
in
test
xchg
int3
pop
or
cmp
xchg
push
adc
push
or
insl
test
xchg
push
pop
push
xchg
hlt
xchg
fsubrp
or
imul
sub
xor
dec
into
shlb
pop
jns
dec
jo
mov
mov
repnz
and
and
iret
pop
xchg
shll
cmpsb
mov
dec
inc
jbe
insl
imul
xchg
xor
adc
mov
fcompl
dec
outsb
lcall
jle
stc
push
out
movhlps
test
mov
cwtl
mov
in
sti
push
mov
cmp
pop
mov
mul
inc
pop
push
sbb
dec
movsl
aam
mov
inc
push
inc
out
dec
push
stc
in
and
cmovbe
inc
mov
push
or
dec
mov
das
lcall
les
jmp
dec
into
mov
das
mov
mov
pop
subl
add
cwtl
jnp
add
stc
mov
or
add
and
jno
shrb
je
jg
pop
jns
cmp
inc
xor
jecxz
pop
push
stc
in
lcall
pop
enter
xchg
mov
andl
fbld
pop
adc
push
mov
sub
in
lods
add
xchg
xchg
push
clc
xlat
sti
es
clc
mov
adc
adc
nop
mov
in
mov
scas
inc
loop
jne
lods
js
in
pushf
pop
cmp
xor
rorb
jle
in
sbb
pop
out
mov
nop
dec
stc
in
pop
test
test
mov
jle
mov
iret
rclb
or
push
stc
sub
out
mov
xchg
xchg
push
fiadds
dec
add
lods
mov
pusha
cmp
xchg
aas
cmp
out
dec
in
xlat
jae
adc
push
xchg
scas
repz
aaa
sub
in
ja
shl
in
push
pop
call
daa
aam
sub
daa
cmpsb
xchg
push
pop
jns
enter
sahf
loop
hlt
adc
mulb
pop
or
xchg
jp
adcb
stos
nopl
addr16
inc
push
pop
jns
push
or
add
xor
stos
push
pop
repnz
add
ror
loope
rclb
pop
sub
in
shlb
cld
xor
insl
jg
shrb
mov
pop
mov
test
jge
es
lock
in
aaa
cmp
mov
sbb
stc
in
pop
and
sub
mov
jne
mov
iret
inc
jle
loope
loop
dec
sti
les
shr
lret
das
mov
push
dec
pop
in
mov
das
mov
push
adc
mov
aas
push
in
sbb
cld
repnz
xor
jbe
iret
or
repnz
cmp
icebp
hlt
push
jmp
xchg
je
sub
pusha
xor
xor
mov
scas
mov
popl
xchg
adc
loopne
dec
mov
jmp
inc
push
push
pop
jns
stc
jo
shr
ret
fdivs
and
dec
adc
mov
clc
pop
sub
addb
mov
rorb
xor
and
clc
or
repnz
popa
xchg
push
ficomps
mov
repnz
jle
pop
jns
aam
insl
ljmp
or
or
jns
xchg
dec
xchg
or
jbe
inc
push
leave
sbb
mov
fbld
push
fistps
shrl
adc
cli
stc
cltd
xchg
andb
popa
scas
mov
xchg
adc
push
push
addl
outsb
and
movsb
or
mov
leave
mov
rcrb
xlat
bound
cmp
xlat
mov
or
int3
jnp
sti
test
push
mov
repnz
das
gs
repnz
in
lods
cmp
xor
fnsave
xor
sbb
or
xchg
pop
bound
lds
mov
sbb
dec
out
xlat
sub
imul
pop
out
cld
repnz
das
out
loope
push
sub
and
das
mov
xor
outsl
stos
cmpsl
xchg
jg
stc
sahf
mov
jae
stos
jg
mov
pop
jle
in
xor
mov
mov
in
stc
in
popa
cmp
scas
jl
cmp
adc
xlat
es
stos
sub
sub
sub
lret
das
mov
xchg
add
sbb
mov
mov
cmp
sub
push
dec
mov
fisttpll
xchg
pushf
cmp
test
test
push
dec
jecxz
jg
daa
push
pop
mov
repz
mov
xor
inc
test
xorb
dec
andb
jle
lret
push
pop
jns
dec
rol
mov
push
bt
adc
inc
push
mov
cmpsb
dec
lret
inc
sbbl
jns
cmpsb
jae
and
das
test
mov
notl
aas
shr
repz
lds
in
pop
jle
lcall
sti
in
sbb
xchg
pop
jle
inc
scas
in
sub
lcall
mov
movsb
mov
mov
aaa
inc
cmp
cmc
data16
es
test
lret
sbb
push
and
and
push
mov
mov
sahf
shlb
repnz
and
aaa
sbb
cltd
push
decl
fistpll
and
sub
sbb
pop
cmp
pop
jo
pop
cli
enter
fwait
test
js
push
mov
lret
jl
in
add
mov
or
les
daa
adc
push
addr16
pminsw
xchg
das
sub
popa
insl
jbe
orl
lds
sbb
je
push
fmulp
mov
xor
ret
pop
cli
push
cltd
push
mov
and
int
ficomps
std
outsl
sbb
repnz
mov
add
std
out
icebp
repnz
setp
clc
mov
push
dec
sub
das
mov
jbe
loope
popa
xor
mov
das
mov
out
aam
push
fldt
lret
mov
xlat
addl
test
test
daa
sbb
dec
inc
pop
jns
xchg
les
imul
mov
and
xchg
mov
mov
movsl
mov
jle
lret
stos
mov
cmpsb
cld
sti
in
mov
sti
mov
ja
inc
ja
lret
das
mov
dec
pop
jnp
in
scas
shrl
outsl
dec
cmp
test
xlat
xorb
scas
mov
sub
cmp
sti
pop
mov
std
fstpt
pop
lds
xchg
out
push
fildl
cmpsb
repnz
inc
pop
push
mov
inc
ds
fcompl
gs
pop
lods
jle
in
aam
lds
aad
sbb
jno
stc
in
pop
push
sub
dec
cmpsl
xor
pushf
xchg
push
sbb
arpl
mov
pop
and
call
inc
xchg
jg
mov
adc
xor
in
inc
add
decl
jns
outsb
lock
adc
pop
sub
sbb
xlat
mov
repnz
das
inc
jnp
lods
in
test
in
and
mov
push
mov
ds
into
and
fiadds
daa
inc
loop
stc
aad
cld
repnz
cwtl
adc
call
into
int
cld
repnz
das
mov
mov
repz
lret
das
mov
test
mov
aas
out
mov
das
mov
push
push
call
pop
sub
pop
stc
repnz
test
xor
in
pmaddwd
xor
fxch
sbb
pushf
mov
pop
cltd
dec
sub
les
lcall
and
add
mov
sbb
stos
push
pop
rolb
xchg
in
call
lahf
xor
jg
pop
pop
jns
cmp
adc
repnz
lahf
out
add
aam
das
push
lahf
cmp
lds
jmp
xor
xchg
xor
fbld
ja
pop
pusha
inc
hlt
mov
jle
adc
jl
pop
cwtl
ret
imul
arpl
clc
shll
jnp
cmc
or
in
jg
arpl
rclb
fisubs
xchg
pop
jle
push
pop
fwait
jmp
out
sbb
popf
dec
mov
pop
jle
orl
mov
xchg
andl
cld
repnz
push
and
dec
xchg
fwait
or
fstpt
cld
repnz
das
mov
in
cmp
stos
jne
sub
xchg
das
mov
int3
iret
ljmp
add
repnz
mov
pop
mov
add
nop
sub
dec
xchg
jne
mov
repnz
mov
mov
fistps
shlb
dec
mov
nop
mov
ljmp
bound
jns
cwtl
xlat
pushf
pop
repz
je
fidivs
pop
jns
xchg
daa
scas
mov
fcompp
jg
in
mov
scas
cld
pop
push
stc
sbb
pop
xor
pop
sub
lcall
scas
stc
push
repnz
sbb
hlt
dec
cmpsb
and
subl
sub
inc
imul
inc
push
outsl
lods
mov
insb
test
cs
pop
jae
mov
xchg
int
lcall
stc
imul
push
mov
mov
pusha
mov
pop
stc
in
pop
icebp
ret
je
arpl
mov
pop
jle
hlt
in
popa
movsl
xorb
sarl
and
mov
imul
cld
fisubrl
mov
bound
mov
movsb
fdivr
repnz
das
sbb
mov
shlb
stos
mov
dec
inc
mov
fidivl
subl
in
divl
mov
pop
je
push
cli
inc
and
mov
pop
or
jns
pop
cmp
ljmp
fidivrl
mov
mov
nop
test
loope
ss
cld
repnz
adc
mov
adc
movsb
and
mov
shll
pop
in
inc
mov
jecxz
mov
jg
sbb
neg
mov
pop
call
imul
cld
repnz
das
sbb
test
cld
sub
out
test
adc
mov
out
and
outsl
shll
inc
out
dec
mov
repnz
or
push
inc
lret
xchg
inc
int
mov
scas
mov
mov
xchg
or
in
sbb
mov
xchg
sub
xor
mov
push
popa
adc
mov
pusha
xor
fsubrs
xlat
sbb
enter
inc
rolb
adc
dec
inc
cmp
andl
sbb
cmp
js
pop
clc
imul
cld
repnz
add
out
stos
shll
lret
das
mov
cmp
inc
pop
dec
xor
sub
cmp
lret
mov
andl
shlb
mov
and
jmp
repz
flds
mov
shl
aam
cmp
cltd
adc
lret
mov
add
mov
jbe
lret
insl
fnsave
sub
jmp
sbb
inc
add
shrl
sti
outsb
aam
dec
lods
xchg
test
xchg
sub
pop
lret
pop
jns
test
mov
add
bound
or
mov
sub
add
lret
pop
mov
pop
or
fcoml
sub
insl
div
sahf
sub
xchg
pop
loope
jmp
or
mov
mov
push
sub
int3
xor
es
loop
push
inc
fbld
xor
xorl
or
or
test
lret
das
jne
pop
dec
push
jecxz
or
das
mov
inc
pop
orb
dec
push
filds
cld
cs
les
sbb
stos
mov
jge
in
push
mov
xchg
dec
mov
jns
push
inc
adc
pop
cmp
jns
hlt
mov
out
xlat
les
repnz
inc
rorb
and
repnz
push
dec
push
stos
int3
lcall
lret
mov
jl
lcall
mov
movsl
stos
jl
xor
out
jns
ljmp
fildl
in
cltd
xchg
pop
sbb
or
test
fmul
lret
push
pop
jle
in
fidivrs
push
push
cmc
mov
lea
pop
mov
stc
in
or
cmp
jnp
call
xchg
pop
fildll
mov
xchg
push
xor
or
jnp
inc
sub
jmp
dec
loope
in
and
out
xchg
jle
in
xchg
mov
testb
adc
scas
mov
call
jmp
imul
pusha
dec
jbe
push
sbb
vrcpss
clc
aaa
cmpb
insl
and
cwtl
jl
jns
jp
pop
jns
xchg
dec
push
into
lea
and
addr16
ss
pop
jns
xchg
push
in
cwtl
cmp
es
add
xchg
push
pop
sbb
mov
aam
xor
push
xor
enter
testl
dec
cld
repnz
adc
or
push
fidivs
in
loop
jl
in
push
cmc
ja
inc
dec
adc
sti
imul
notl
cld
repnz
lahf
inc
flds
lahf
xor
xchg
cld
repnz
das
sbb
out
stos
mov
out
pop
mov
repnz
das
mov
pop
ret
jo
int3
inc
lret
das
mov
mov
out
sar
push
and
push
pusha
insl
mov
sbb
subb
adc
icebp
lods
scas
je
out
in
lods
mov
cwtl
sub
xor
enter
int
sahf
aad
insb
cs
dec
mov
scas
mov
lcall
out
mov
addr16
and
cmp
lahf
sbb
fldl
inc
inc
icebp
scas
mov
loope
xor
leave
mov
test
sub
mov
mov
test
sub
dec
lret
rcrb
sub
sbb
je
add
mov
scas
mov
arpl
cmc
add
push
int
icebp
in
enter
shlb
stc
mov
mov
movb
test
jnp
and
scas
arpl
arpl
jbe
mov
test
push
dec
lods
es
adc
scas
push
pop
iret
mov
lret
mov
jbe
popa
jmp
sub
out
adc
shll
inc
push
mov
lret
dec
popf
or
xchg
cmp
xchg
push
fiadds
adc
jnp
mov
int3
inc
jg
xlat
xchg
xor
add
test
mov
enter
movsl
xor
mov
scas
leave
push
lret
xlat
lods
data16
dec
insb
pushf
sub
xlat
hlt
or
push
mov
stos
sub
lret
sub
nop
jp
or
push
mov
cmp
jb
std
divl
xor
xchg
jg
aas
fidivrs
sbb
push
jnp
xchg
pop
jle
jmp
jo
ja
aad
mov
in
loop
out
xlat
pop
mov
loopne
dec
dec
cld
movsl
cmc
in
xchg
xchg
pushw
sti
ficompl
mov
packssdw
repnz
repnz
sbb
cltd
es
sub
ret
cld
mov
dec
test
mov
call
mov
sahf
shll
xlat
mov
stc
daa
xchg
iret
imul
cmp
lret
pop
mov
in
adc
cmc
rorb
mov
add
test
mov
das
js
and
xchg
add
xchg
xlat
xchg
faddl
in
push
mov
push
test
jne
lcall
pop
dec
mov
cli
mov
enter
dec
jnp
push
pop
jns
ret
jae
mov
test
icebp
in
mov
jge
in
cmp
addr16
int3
mov
sub
adc
sub
lahf
sub
pusha
dec
outsb
fistpl
push
dec
dec
xchg
xor
cld
repnz
enter
push
lds
or
pop
in
adc
lret
das
mov
or
pusha
mov
lret
das
mov
cmpsb
xchg
jns
jbe
fstpl
repnz
in
mov
int
insb
add
pop
imul
mov
xor
xor
add
pop
ja
fstpl
jbe
scas
sub
or
push
mov
enter
insl
mov
lret
fldcw
outsb
pop
imul
cmp
ds
jae
decl
subl
insb
lock
imul
mov
daa
mov
fadds
in
pop
imul
orb
xchg
pop
sub
pop
jb
adc
push
pop
jns
pop
pop
sti
mov
mov
push
cwtl
cmp
xchg
stc
in
and
xlat
xor
outsl
push
das
addr16
addl
cmp
dec
xor
in
insb
adc
or
outsl
andl
dec
dec
pop
fs
ja
mov
inc
mov
in
inc
gs
inc
arpl
jnp
jns
xchg
push
xor
loope
mov
xchg
push
pop
mov
pushf
and
mull
icebp
add
add
icebp
dec
in
fmuls
xchg
xchg
jg
test
push
div
xor
xlat
cli
mov
dec
mov
mov
sub
mov
test
scas
cmpsb
add
mov
or
sub
and
xorb
push
pop
jns
cmp
push
jle
inc
and
push
sti
jge
in
mov
sub
lods
sub
xchg
pop
and
dec
push
imul
fimuls
arpl
cmc
add
xchg
jne
int
aaa
test
push
and
fcmovbe
and
cli
std
xor
push
test
scas
cmp
jmp
rolb
mov
andl
jbe
inc
jge
lret
shll
aas
pop
xchg
repz
fisttpll
ds
sbbl
inc
jle
ja
mov
movl
adc
test
lods
loopne
xchg
pop
sbb
les
or
js
pop
mov
lahf
lret
mov
push
cli
mov
fidivrs
aas
in
xor
sbb
mov
or
fdivrl
pop
fs
and
dec
rcl
jmp
subl
rolb
bndstx
and
mov
rolb
jl
and
jns
xor
inc
scas
pop
repnz
mov
cwtl
xor
add
lods
daa
xchg
sbb
scas
mov
pushf
fstpl
cmc
loop
idivb
lock
pop
inc
in
out
or
loopne,pt
lahf
repnz
or
mov
xchg
fs
mov
addb
test
mov
or
cli
enter
ret
xchg
fistps
dec
pop
mov
pop
xchg
xor
mov
jle
in
enter
mov
inc
aam
and
lods
aad
mov
rcll
and
xchg
out
mov
dec
xchg
sahf
int
or
ss
das
mov
xchg
movsb
jno
xchg
mov
cld
repnz
je
pop
je
loopne
xchg
into
lock
mov
jle
mov
sbb
cmp
outsb
call
shll
lcall
xor
std
push
adc
jl
dec
insl
sub
cmp
jge
lret
inc
arpl
rorb
andl
out
mov
xchg
or
mov
mov
dec
out
add
adc
repnz
jge
mov
cmp
fimull
sbb
mov
add
enter
or
insl
bound
dec
and
mov
data16
push
inc
xlat
jns
pop
cli
enter
sti
dec
leave
sbb
inc
rcrl
in
push
fmulp
pop
cltd
adc
push
cmpsl
push
ljmp
jns
adc
cmp
and
mov
les
in
xor
call
pop
cltd
in
cmp
cld
pusha
mov
ds
and
sti
inc
and
sub
in
adc
test
sub
xchg
mov
inc
dec
pop
sbb
inc
mov
pop
mov
dec
movsl
jmp
in
pop
jns
jne
dec
enter
jle
adc
pop
shrl
sub
mov
enter
pushf
fwait
xor
mov
cld
sti
sub
out
aaa
jl
push
push
lods
jg
in
adc
enter
cmp
lahf
inc
cmp
imul
mov
cmp
add
in
mov
add
mov
in
pop
daa
jmp
xchg
insl
or
repnz
sub
movsl
loopne
pop
mov
mov
mov
repnz
das
adc
hlt
test
add
and
sti
pusha
mov
repnz
lcall
xchg
aaa
in
xchg
mov
arpl
pop
adc
adc
cltd
fdivr
jnp
lret
icebp
sti
shrl
push
or
lret
das
mov
lahf
mov
std
xor
or
adc
xor
pop
jl
out
xor
jge
neg
sbb
nop
roll
repnz
jae
pop
mov
repz
jl
notl
mov
and
sub
jle
scas
cmp
or
cmpsb
mov
rcll
daa
cmpl
in
pop
test
daa
dec
clc
mov
jae
int
stc
in
pop
adc
xchg
je
cmp
adc
mov
sub
mov
adc
sub
test
shr
xorb
ds
fsubl
fwait
insb
sti
sbb
cmc
xor
stc
in
push
mov
sub
dec
lea
out
mov
mov
int3
sbb
cli
enter
push
pop
loopne
xlat
sub
xchg
push
ficomps
pop
jp
fnstsw
imulb
pushf
add
push
pop
jns
dec
ss
xchg
cmp
pop
out
jge
in
push
pop
ss
aas
test
inc
lds
mov
pop
or
pop
sti
xor
sub
mov
inc
jle
xorl
hlt
sbb
jl
idivl
pop
push
stos
ret
push
imul
popa
packssdw
or
ret
mov
push
jmp
pop
jns
sub
cmp
pusha
xchg
xchg
sbb
sub
add
in
cmpsl
out
iret
pop
push
dec
movsb
in
and
and
cmc
adc
stos
xchg
mov
repnz
stos
xchg
sub
aas
add
push
insb
and
mul
lret
test
push
bound
pop
jle
andb
jp
dec
lock
jno
xor
pop
jle
in
arpl
mov
jnp
fistps
dec
dec
xchg
cli
enter
inc
shlb
jl
shlb
jnp
push
in
daa
iret
repz
mov
jle
aad
mov
mov
movb
int3
sub
repnz
shll
cli
dec
fisttpl
cli
enter
sahf
mov
xchg
or
outsl
sub
cmpsb
icebp
xchg
das
mov
pop
push
mov
repnz
and
lock
and
int
repnz
push
lds
mov
sub
ljmp
test
stc
in
mov
js
stos
ljmp
addr16
and
fldt
cmp
jns
jmp
xor
xor
stc
cmp
in
push
jp
stc
pop
xor
lods
dec
jns
imul
das
push
pop
xor
jle
cli
sbb
mov
mov
cmp
shrb
mov
gs
push
rol
push
aas
mov
or
pop
stc
repnz
xchg
push
inc
das
push
cltd
dec
pushf
mov
in
jnp
xchg
jg
shlb
mov
mov
cmc
xor
jmp
mov
inc
in
sbb
pop
xlat
sbb
repnz
das
mov
mov
in
lret
das
ds
lea
mov
pop
jge
jmp
fwait
das
rcll
popl
push
push
ss
bound
in
repnz
mov
jecxz
inc
fiadds
stc
in
pop
push
pop
mov
movsl
adc
in
pop
jle
adc
cmp
jg
mov
fs
fstl
cmp
sub
sub
das
jg
sbb
cmp
shl
jl
mov
adc
jb
std
sti
lret
jg
std
jp
add
movsb
dec
and
sub
dec
out
sbb
cmpsl
sbb
jp
fimull
rolb
pop
push
loopne
push
push
mov
jbe
dec
xchg
pop
jle
lret
mov
jnp
push
cmp
loopne
lods
jae
pop
jle
in
loopne
sub
imul
inc
pusha
jle
in
stos
repnz
sub
insb
clc
jl
add
cmpsl
cltd
pushf
ret
xchg
adc
xchg
aaa
mov
in
imul
adc
jl
in
shr
lcall
lret
out
pmulhw
push
iret
data16
and
xchg
push
pop
stc
ret
and
aam
or
mov
in
lret
adc
push
scas
mov
cli
pop
pop
jns
xchg
lahf
pop
add
pop
dec
into
es
hlt
xchg
jns
xchg
push
lahf
out
js
lcall
rolb
pop
addr16
pop
and
cltd
loop
or
sbb
ret
mov
jno
stc
in
sbb
xor
or
xchg
pop
adc
xlat
add
aaa
jle
in
add
xor
out
xor
mov
pop
pop
test
push
cmp
mov
push
sbb
xchg
sar
cmpsb
push
cli
enter
xor
adc
fildll
scas
mov
mov
xchg
jg
cld
xchg
out
popf
lds
scas
mov
push
outsl
add
push
cmp
sbb
scas
negl
push
sub
jmp
lods
stos
lahf
cmpsl
add
and
inc
andb
shl
std
sbb
jl
jno
sarb
in
add
in
mov
jnp
xchg
pop
sbb
jae
xchg
pop
cli
pop
lret
das
mov
loopne
dec
sbb
loopne
add
mov
cli
lcall
sbb
shrb
ret
imul
sbb
dec
xchg
out
enter
xor
add
mov
in
das
mov
into
sub
sbb
jge
js
lods
lds
movsl
dec
and
push
in
inc
xchg
or
xchg
das
ret
mov
aam
and
nop
aad
icebp
cld
repnz
das
loope
inc
fstps
lret
in
dec
mov
imulb
jbe
mov
cli
push
stc
in
popa
js
les
cmp
stc
in
pop
out
pop
cmpsl
push
add
fiadds
in
addr16
in
lds
or
sti
jns
pop
jle
outsl
add
pop
lods
mov
dec
shrl
push
jle
jle
in
xor
fildl
shl
scas
adc
cmpb
xchg
sbb
dec
inc
leave
sub
xchg
pop
out
and
pushf
ret
hlt
xchg
pop
lret
das
mov
pusha
stos
sarl
bound
stc
repnz
ljmp
push
in
out
lret
std
int3
mov
push
xor
in
pop
inc
xchg
jno
xchg
in
and
es
pop
jle
mov
lahf
xlat
cmp
loop
std
vxorps
ret
js
push
cs
xor
mov
xor
dec
jecxz
dec
dec
cmpsl
and
scas
mov
sti
sahf
lea
cmp
out
xchg
pop
cmp
and
lods
xor
cld
jnp
pop
xchg
and
mov
or
mov
pop
xor
mov
and
das
int
sti
enter
loop
jbe
clc
icebp
jl
and
stc
js
arpl
push
jo
add
sub
add
mov
ss
insl
shlb
scas
mov
xlat
cwtl
gs
mov
iret
fstps
lret
sub
adc
in
fcoms
jne
or
int
sub
pop
sub
ret
pop
cmp
sub
repnz
iret
aam
dec
aas
cmpsl
pop
jb
fidivrs
in
mov
test
and
sub
and
clc
inc
cmpb
push
xchg
pop
jle
and
mov
add
mov
mov
repnz
fs
adc
mov
or
rorl
mov
rolb
mov
pop
jo
xor
int
fs
push
enter
loopne
cs
xchg
pop
jge
add
dec
mov
inc
xchg
adc
movsl
sub
jbe
popf
test
mov
xchg
pop
jp
shll
repz
pop
icebp
sub
loope
jge
iret
adc
push
ljmp
mov
pop
sub
jmp
cld
jnp
outsb
push
xor
dec
xor
adc
sub
cmc
xchg
das
mov
test
ret
mov
scas
mov
dec
loope
pusha
ret
pop
aam
jge
out
mov
jo
pop
xor
pop
jle
cmp
stc
in
pop
in
mov
cli
imul
stc
int3
insl
xchg
pop
jle
mov
out
divl
repnz
mov
and
add
seta
cmp
push
insl
adc
inc
daa
scas
cmpsl
jl
in
adc
cmp
xor
leave
push
jns
lea
neg
gs
push
push
in
push
pop
in
mov
fisubrs
lock
imul
or
push
dec
aam
sbb
stos
ljmp
pop
je
int3
stc
in
pop
push
ds
loope
shrl
clc
in
pop
jle
pusha
out
mov
bound
xchg
pop
jle
cmp
testl
mov
in
or
out
xchg
jmp
and
lret
das
jns
or
mov
xchg
das
mov
mov
loopne
jge
add
repnz
inc
add
mov
xchg
and
adc
loopne
cmp
mov
jle
out
movsl
cmp
mov
scas
cmp
inc
add
or
sbbl
in
in
add
cmc
jb
fistpl
mov
pop
cli
lock
imul
out
mov
sbb
imul
xchg
xchg
mov
bound
dec
hlt
jns
xchg
push
es
xor
repz
movsb
outsl
and
cs
and
pop
xor
sbb
sahf
cmc
fcomps
add
bound
xchg
add
ljmp
or
lods
mov
in
pop
daa
jnp
mov
aas
add
fstpl
add
xchg
adc
out
jecxz
jge
in
dec
jl
nop
pop
push
int3
mov
pop
in
in
mov
dec
call
sbb
mov
orb
rclb
sbb
outsb
repnz
test
mov
lret
mov
jo
or
adc
sub
and
add
ljmp
repnz
sub
and
lret
aas
fwait
xor
xchg
mov
lret
das
mov
adc
pop
loop
rolb
and
mov
cs
js
lahf
push
pop
pop
mov
in
lds
pushf
cmp
and
stos
scas
lret
das
ljmp
jecxz
mov
aas
inc
xlat
fbld
mov
fisubs
pop
in
push
dec
mov
stc
in
fistpll
mov
xchg
dec
jle
in
pusha
xor
dec
and
incb
stc
in
pop
and
sbb
mov
sub
in
pop
jle
inc
push
stos
outsb
mov
add
xchg
repnz
clc
pop
adc
movntps
push
cmc
repz
shl
scas
dec
test
int
pop
in
in
xor
lret
aas
int
xor
roll
inc
sub
scas
mov
ret
mov
push
stos
addr16
sub
scas
mov
popa
repnz
mov
push
jg
adc
mov
mov
pop
xchg
push
pop
jns
stos
lds
aaa
stos
inc
bound
or
fbstp
test
enter
insl
frstor
stc
in
adc
push
mov
shll
pavgb
out
daa
int3
pushf
cmp
xchg
pop
jle
jp
fcoms
arpl
inc
jle
in
add
sub
ja
cmp
mov
push
dec
stc
lahf
jo
mov
inc
mov
jl
sbb
jle
jns
mov
sbb
in
pop
ja
insl
push
rorl
mov
jns
or
sbb
cld
sti
enter
inc
popf
js
dec
das
pop
lds
fptan
lret
das
mov
call
jo
ficoms
cld
and
xchg
dec
les
sub
lret
inc
mov
stos
imul
jnp
scas
mov
jb
addb
mov
inc
scas
xchg
mov
dec
ja
stc
in
adc
dec
xor
pop
adc
lret
mov
out
xchg
clc
pop
adc
xchg
add
mov
mov
mov
repnz
add
or
xor
jg
loopne
pop
pop
or
jns
js
mov
and
inc
jecxz
lret
in
add
mov
sub
mov
cs
shl
pop
sahf
mov
pop
mov
scas
mov
mov
aad
je
cmp
xchg
into
mov
pushf
push
stc
test
call
and
rolb
sub
push
repnz
mov
jns
cli
adcl
fldl2t
test
arpl
mov
mov
mov
jbe
xchg
mov
and
mov
pop
jns
sbb
mov
in
pusha
aam
push
push
pop
jns
add
inc
push
mov
ljmp
popl
sbb
jno
sbb
sahf
jo
sub
add
outsb
pop
jns
lea
bound
xor
stos
xor
push
adc
push
adc
cmp
mov
and
ret
mov
repnz
addr16
sti
in
xchg
ret
sti
int
cmp
repnz
das
mov
rolb
lret
add
das
mov
aam
sub
adc
inc
inc
add
cld
cmp
sti
addr16
adc
xor
mov
xchg
push
in
jo
xor
sbb
in
das
mov
sbb
push
jp
cmpsb
inc
in
add
mov
add
test
je
enter
mov
push
lret
mov
push
rolb
jg
popf
inc
sbb
push
imul
movsl
jbe
call
hlt
dec
add
movsl
dec
push
lea
xchg
aaa
mov
arpl
xorl
in
mov
pop
adc
lret
leave
push
xor
in
or
cmp
inc
scas
mov
lea
adc
repnz
stc
sub
push
mov
push
rorb
or
imul
jl
cld
std
sbb
pop
mov
jg
cld
xor
cmp
sbb
sahf
ds
pop
sbb
jne
ja
imul
xor
push
xor
loop
jmp
js
icebp
xchg
das
mov
cmp
pop
dec
stos
lahf
rorb
cli
push
or
in
hlt
mov
jle
xchg
arpl
imul
inc
jle
in
frstor
dec
aas
dec
leave
cmpsl
test
pop
bound
stc
in
pop
pop
mov
pushf
int
pop
les
pop
jle
mov
adc
xchg
mov
into
xor
xor
or
test
in
cmpsl
imul
mov
sbb
ja
xchg
pop
jle
call
int
dec
jne
xchg
pop
jle
sarl
or
push
sub
push
mov
stc
in
inc
stos
mov
arpl
jg
mov
mov
inc
ja
xchg
fstl
and
jno
mov
mov
mov
xlat
imul
repnz
aaa
xor
xor
xchg
mull
and
les
jmp
in
punpcklbw
enter
xchg
fwait
push
mov
xchg
mov
repnz
fldl
imul
pop
repnz
lret
mov
enter
sub
repz
jge
sub
adc
call
repnz
mov
out
test
and
xchg
mov
xor
repnz
das
add
out
mov
pop
cli
jmp
mov
nop
pop
jo
stc
cmpsl
not
or
and
pop
jns
cmp
push
pop
add
movsb
mov
jns
xchg
push
pushf
jo
lods
loop
movsl
xlat
popl
cld
cmp
sahf
mov
inc
decb
ret
jp
xchg
or
lahf
sbb
push
ficomps
cmp
fcoms
pop
cltd
pop
outsl
sub
into
sti
fs
in
scas
nop
clc
mov
inc
mov
idivb
hlt
inc
mov
call
roll
mov
jg
sub
out
stos
pop
dec
les
lods
mov
in
in
daa
cwtl
adc
lods
movsl
adc
popa
sbb
dec
decl
push
sub
rcpps
jb
xlat
into
cld
repnz
das
mov
inc
dec
jb
mov
das
mov
fisubrs
adc
xlat
sbb
dec
inc
leave
call
mov
out
inc
fs
xchg
xor
xchg
pop
jge
jecxz
add
cmp
outsb
stos
leave
mov
rcr
mov
enter
mov
out
neg
lods
mov
cld
call
shrb
in
ret
insl
push
and
mov
mov
and
cmovae
sbb
and
or
in
aaa
insb
je
out
mov
lret
rcll
lods
adc
xor
mov
idiv
inc
jl
lret
mov
cld
scas
in
outsb
xchg
enter
mov
fldenv
ss
jns
cld
repnz
and
cmpsb
sahf
sar
imul
xchg
rolb
rcrb
fbstp
outsb
daa
lods
sub
adc
xchg
icebp
jecxz
fimuls
mov
jo
mov
pushf
jmp
mov
cmp
or
loope
aad
or
in
movsl
inc
out
je
ret
xchg
cmp
stc
popf
rcl
shll
les
cmpsb
mov
adc
mov
mov
setl
lret
icebp
or
aam
xor
out
lret
mov
sub
test
subl
pop
xlat
xchg
outsb
jg
push
repnz
repnz
das
fimull
or
scas
mov
push
lret
das
mov
in
inc
inc
scas
or
mov
push
insl
mov
fistl
stc
repnz
pushf
aaa
shr
xor
hlt
add
das
mov
pop
imul
mov
das
mov
add
mov
repz
ja
jge
lret
cmp
iret
pop
xor
sub
sbb
scas
jbe
and
mov
mov
jmp
cmp
icebp
jmp
arpl
flds
aad
out
shrl
imul
pop
mov
dec
std
andb
mov
fcoms
cmpsl
fucomip
push
stos
sar
repnz
mov
mov
mov
mov
adc
jmp
adc
push
pop
jns
mov
xchg
or
or
inc
xchg
add
jns
xchg
test
gs
out
repnz
adc
in
push
jb
outsl
test
push
mov
into
jns
sub
xchg
push
pop
xchg
imul
jl
and
adc
int
imul
mov
pop
scas
fcmovb
adc
xchg
push
pop
dec
adc
movsb
add
push
rcll
fbstp
sub
xchg
cmc
xor
in
scas
mov
cs
inc
mov
sub
and
mov
lea
jmp
mov
je
les
aaa
sbb
push
fmulp
add
popf
imul
mov
mov
and
push
sub
dec
inc
fsubs
icebp
mull
push
pop
ficoml
xchg
ret
sarb
movsb
loopne
adcb
add
fistpll
push
jnp
leave
aaa
inc
push
fiadds
enter
jg
mov
test
in
push
sbb
push
or
push
lahf
in
push
pop
and
int3
jns
mov
insl
inc
inc
pop
jns
mov
add
adc
loope
pop
fstpt
int
jns
xchg
push
pop
jns
subb
dec
dec
leavew
ds
pop
jns
stos
push
dec
add
loopne
and
and
and
jno
sub
ss
mov
mov
jmp
pushf
ret
sahf
sti
cltd
mov
out
ficoms
jno
lret
or
dec
mov
jg
ss
and
dec
insb
pop
mov
inc
xchg
mov
xchg
pop
adc
inc
dec
repnz
das
mov
add
jb
pop
push
sbb
xchg
jg
cld
sub
inc
fdivrs
jnp
push
iret
jl
in
mov
adc
sub
imul
test
xor
cmp
push
mov
jnp
inc
push
xlat
cmp
iret
js
mov
push
cmp
repnz
das
mov
sbb
lods
add
data16
lret
das
mov
test
aad
testl
mov
inc
lock
adc
aam
mov
ljmp
insb
out
mov
cmp
lock
lahf
or
cmp
jbe
jp
mov
repnz
das
mov
pop
inc
lahf
scas
push
mov
repnz
das
mov
int
push
fisubrl
xchg
mov
lret
das
mov
dec
enter
jmp
imul
loopne
ret
fs
jmp
fmul
adc
dec
in
adc
rep
je
sbb
push
inc
nop
loope
lds
xchg
pop
mov
daa
sub
push
inc
in
ds
aam
ljmp
stc
add
jl
adc
mov
imul
out
jle
in
jbe
xchg
fadds
push
sbb
in
pop
pop
lods
arpl
add
es
pop
jle
pop
cmp
mov
mov
mov
xchg
popa
jno
fistps
adc
in
fcmovne
jae
in
pop
imul
sbb
aas
jb
xor
push
add
xchg
pop
jle
add
cmc
ljmp
pop
jle
in
inc
stc
test
insl
fsubs
in
loope
mov
or
cmp
jb
sar
xchg
pop
loope
push
mov
dec
push
and
jle
sub
sbb
outsb
pop
bound
mov
or
cmp
cmp
repnz
lock
cmp
or
cld
repnz
das
popf
popl
jo
imul
aam
dec
cmp
aam
sub
mov
sti
rcrb
dec
gs
jle
in
stc
lahf
or
hlt
stc
in
pop
inc
sub
lock
pop
jno
xor
jbe
xchg
notl
xor
pop
rorb
pop
jns
iret
mov
pusha
in
sarl
xchg
mulb
jns
xchg
push
jle
les
mov
lret
jnp
in
push
clc
adc
adc
pushf
push
jg
push
lahf
xchg
pop
sbb
fs
loope
push
mov
clc
enter
inc
lret
cmpsb
mov
mov
lahf
push
or
pop
xor
pushf
mov
stc
repnz
xchg
jmp
aam
inc
fld
leave
ret
fimuls
stc
dec
cmp
sub
sbb
lret
or
mov
mov
adc
fsts
stos
std
xchg
mov
movsl
jne
scas
mov
scas
mov
ljmp
inc
push
in
xchg
sub
out
mov
pop
jle
movsl
mov
sub
loope
call
in
push
inc
sub
mov
jbe
mov
jge
stc
fidivrs
in
int3
into
jge
enter
fisttpll
in
pop
mov
lret
out
std
out
ds
lret
mov
mov
shlb
mov
into
lcall
out
int3
cmp
stc
repnz
or
pusha
call
mov
in
jg
or
push
iret
cmpsl
jmp
sub
xchg
pop
jle
or
fstpl
inc
push
or
lock
stc
pop
mov
pop
in
sub
insl
inc
sbb
pop
push
xchg
sarl
subb
dec
sbb
out
dec
rcrl
pop
jns
insb
popf
jnp
and
pop
xchg
dec
mov
stos
fbstp
scas
pop
clc
mov
inc
push
shlb
fbld
aaa
out
adc
in
push
push
imul
mov
stc
dec
dec
cmp
shl
mov
mov
dec
outsl
add
jns
sub
addr16
clc
cld
jle
jns
and
fisttpll
xchg
hlt
int
orb
jns
mov
scas
push
or
dec
cmp
cmpsb
test
cmp
lret
push
mov
cwtl
imul
in
xchg
push
arpl
sarb
testb
cmc
mov
fsubrs
dec
shll
adc
enter
sahf
cs
jns
lea
adc
xchg
jg
pop
mov
and
mov
lcall
stc
in
cmpsl
je
clc
arpl
aad
mov
xor
into
ret
loop
int
popf
dec
push
fiadds
dec
enter
sbb
imul
xchg
mov
fstl
loope
sahf
lret
insb
jno
jno
pop
xlat
aam
popa
and
loopne
jmp
xchg
adc
ret
in
movsl
mov
push
xchg
lods
xor
adc
lea
imul
mov
xor
test
mov
xchg
xlat
or
sbb
jl
sar
in
pop
fisubrs
arpl
movsb
orl
jge
repnz
pop
daa
and
cmp
xchg
pop
adc
ja
jns
and
jne
movsb
les
mov
and
add
ds
push
jno
xchg
ja
cld
repnz
fidivs
pop
pop
cmp
inc
add
xchg
pop
sbb
out
sub
jecxz
loope
mov
test
push
ficoms
mov
ror
addb
stc
into
pop
pop
jns
cmp
add
dec
cs
movl
sub
push
xor
div
pop
cmpsb
and
scas
mov
push
mov
popw
mov
cs
fwait
lods
mov
stos
cmp
sub
inc
hlt
push
add
pop
stc
cmp
js
fcmovnbe
dec
int3
mov
cltd
dec
push
fwait
mov
add
push
scas
in
mov
aas
xor
jge
sub
push
cmp
adc
cld
repnz
das
mov
dec
subb
lret
das
mov
aad
addl
das
mov
call
xchg
dec
insl
push
nop
pop
xor
pop
stc
bnd
gs
mov
push
add
push
insl
jne
add
ljmp
outsb
push
push
stos
imul
pmaddwd
add
clc
cmp
cmpsl
inc
in
sub
sub
mov
xor
xchg
ret
mov
jns
jg
in
push
dec
mov
and
xchg
fdivl
es
push
subl
loop
jnp
jmp
mov
das
add
cmp
fdivr
mov
cmc
mov
sub
dec
movups
dec
add
xchg
pop
sbb
fidivs
mov
rcll
mull
repnz
das
push
std
testl
dec
test
ss
insb
dec
mov
nop
mov
lea
lods
das
xchg
insb
sub
lcall
cmp
sbb
inc
mov
fists
xchg
add
cs
mov
mulb
call
std
lret
mov
fdivl
lods
sub
lods
mov
gs
aad
adc
xor
or
mov
jge
out
inc
cmp
sub
hlt
dec
xchg
aam
repnz
push
in
xchg
outsb
lods
insb
addr16
or
fiadds
addb
arpl
cmp
imul
lock
dec
ret
cld
inc
cmp
in
pop
xlat
sbbb
pop
aad
sbb
add
shlb
cmp
nop
test
es
xchg
js
cmpsl
add
cld
repnz
pop
scas
adc
in
sbb
adc
mov
add
dec
lods
xor
cld
repnz
das
addr16
lret
dec
xchg
jmp
xchg
jg
cld
fstpt
loope
inc
sub
ret
jae
ja
ds
xchg
mov
out
lea
sbbb
xchg
gs
pop
stos
mov
cld
lcall
and
arpl
dec
filds
pop
push
or
loope
mov
xor
in
push
and
xchg
lods
pop
jnp
mov
sarl
xchg
out
cmpb
mov
fwait
add
mov
in
inc
inc
or
adc
movsb
adcb
ret
jl
shrb
xlat
scas
push
push
jns
cmp
clc
dec
and
lcall
and
push
fcomp
xchg
ljmp
pop
jns
inc
dec
je
loope
pop
popf
dec
in
push
fisubrs
outsl
nop
dec
jmp
and
jns
daa
adc
js
das
in
push
pop
jns
into
push
pop
or
xchg
repnz
or
insb
jl
in
or
add
and
jb
cs
mov
cmpsl
mov
push
das
ja
and
inc
cli
lret
test
scas
mov
xor
inc
rcl
shrl
jg
jae
repnz
enter
mov
push
sar
loop
das
xchg
das
mov
xchg
mov
cmp
xchg
insl
int3
sub
test
repnz
xor
xlat
out
jl
sub
mov
lret
pop
cltd
icebp
xor
mov
loopne
scas
mov
out
dec
mov
addr16
scas
mov
or
adc
outsb
dec
dec
pop
in
js
lret
aas
or
jo
mov
gs
sti
aad
in
cs
mov
mov
mov
jne
pop
ljmp
or
pop
ss
jle
jbe
sub
cmp
cmp
scas
jno
cli
in
enter
sub
xor
xor
mov
enter
int
call
out
sti
enter
arpl
mov
inc
mov
push
jnp
lea
cmp
xlat
scas
mov
jmp
insb
shll
jb
repnz
xchg
es
ds
adcb
xchg
sub
test
xchg
push
test
inc
dec
cwtl
cmp
xchg
dec
dec
inc
in
push
pop
and
gs
fdivr
mov
loop
ds
xchg
or
xchg
push
jecxz
push
push
mov
shrl
out
fiadds
pop
pop
out
loopne
adc
xchg
sar
xlat
cs
and
add
cmp
xchg
pop
jle
popa
shrl
icebp
repz
popa
out
xchg
pop
jle
push
ss
popa
je
adc
mov
in
sbb
cmp
xor
cltd
loope
dec
fdivp
rcll
mov
aaa
mov
dec
xchg
dec
lock
xor
ljmp
lret
das
ds
test
xor
in
in
xchg
or
sbb
fists
pop
imul
stc
in
das
rcrl
xor
stc
in
fisubs
fdivs
cmpsl
pop
adc
stc
in
inc
nop
and
aaa
leave
adc
in
pop
jle
cld
out
lret
lock
jle
jo
pop
jle
leave
test
scas
adc
xchg
push
stc
in
add
inc
mov
jbe
les
not
stc
mov
mov
jmp
xchg
pop
jge
add
jge
inc
dec
jl
adc
ja
cld
repnz
push
arpl
into
mov
push
push
stc
in
jg
jmp
add
jo
pop
out
xchg
xchg
mov
push
js
and
jnp
insl
in
je
pop
jns
imul
push
pop
add
mov
rcr
pop
jns
xchg
jmp
icebp
lods
aas
xor
adc
xchg
jg
fisubl
inc
scas
movsb
adc
mov
out
js
enter
fsubs
mov
lret
das
lcall
jmp
rolb
inc
das
mov
out
sbb
sbb
lret
mov
pop
lock
jl
bound
add
mov
sbb
mov
rsqrtps
inc
rcrb
lock
sti
sub
iret
in
repnz
clc
sub
mov
das
push
inc
into
icebp
pop
mov
lret
out
or
je
inc
and
cmp
mov
mov
in
push
jle
mov
mov
adc
sbb
repnz
push
aas
push
dec
aas
sbb
sbb
rcrl
icebp
cmpsb
mov
mov
add
outsb
jb
cmp
in
sub
test
inc
mov
ficomps
cmc
outsl
roll
into
ret
cli
enter
fcmovnbe
inc
jge
or
sbb
pop
fsts
ret
xor
test
jle
in
cmp
adcl
xchg
pop
popa
inc
add
mov
and
aaa
adc
loope
ret
push
lea
push
pop
jns
cmpsb
loop
mov
xchg
scas
push
dec
jl
jns
xchg
inc
sub
psubusb
mov
andb
stc
sti
insb
dec
xor
mov
jae
es
xor
stc
in
jg
cmpb
cmc
xor
inc
cwtl
lret
mov
hlt
sub
data16
mov
xor
sub
mov
or
lret
jmp
xor
cmc
inc
aam
popf
mov
out
icebp
push
cld
or
icebp
dec
mov
pop
jns
cli
or
mov
add
loope
jg
nop
shlb
mov
xor
repnz
imul
stos
lods
pop
xlat
fnstsw
xchg
push
faddp
sub
leave
sub
pop
xadd
rol
fmulp
cmp
mov
dec
sbb
into
mov
shl
mov
mov
dec
lods
jmp
in
dec
cmp
xor
jmp
stos
sbb
outsl
dec
jnp
mov
daa
or
les
cld
mov
jecxz
and
jg
push
or
mov
stos
sar
sbb
lahf
add
lret
mov
and
int
shll
pop
stc
lods
rolb
mov
leave
push
lret
popl
jb
dec
movsl
in
pop
test
mov
jno
sti
cmp
or
ds
inc
adc
pop
add
sbb
push
fnstcw
mov
sub
and
mov
jne
pusha
and
dec
js
clc
mov
adc
test
cltd
xor
mov
lret
push
mov
mov
scas
sbb
and
fadds
roll
test
jmp
pop
into
fdivrl
dec
xor
xor
das
mov
push
js
imul
aas
out
or
in
test
adcl
mov
sub
and
lds
lret
rorb
pop
pusha
or
insl
in
mov
add
inc
imul
mov
lods
mov
pusha
movsb
cmp
push
sbb
pop
jle
in
push
addl
fsqrt
movsl
stc
or
stos
pop
jle
in
insl
dec
andl
jo
lcall
xchg
pop
out
mov
mov
jae
mov
das
mov
sbb
in
idiv
push
add
mov
pop
out
mov
jle
mov
pusha
sbbl
sbb
das
mov
dec
fnsave
jmp
mov
pop
popf
ss
dec
mov
push
jge
xchg
das
mov
mov
push
in
aas
push
jge
pop
cmpb
outsl
aaa
jmp
mov
testl
xchg
mov
mov
mov
cli
mov
push
pop
inc
scas
mov
in
pop
stc
fwait
dec
pushf
xchg
popf
sahf
mov
xchg
sbb
sbb
mov
ja
std
jbe
jns
xchg
aaa
pop
rcrl
jns
cmp
cmc
shrl
loop
inc
cwtl
mov
pushf
ja
mov
stc
in
shlb
pop
mov
lock
in
fs
sarb
xchg
mov
loope
addr16
adc
jne
jmp
xchg
cmp
and
pushl
jno
jns
xchg
push
cltd
loope
rcll
xor
jg
sbb
in
push
pop
data16
add
jbe
das
push
cmpsl
cltd
cmp
das
push
dec
pushf
hlt
xor
ljmp
xchg
cmp
sub
cmp
pop
jns
xchg
repnz
push
lcall
mov
sub
popl
lret
hlt
xchg
mov
std
xchg
xor
scas
mov
xor
jecxz
pop
xchg
inc
pop
jns
jmp
sub
or
lods
sub
cmp
inc
pop
mov
addr16
sub
sahf
jge
mov
out
sub
sbb
aam
jns
lea
pushl
mulb
fbld
mov
lret
push
push
sub
xor
loopne
popa
daa
in
xor
xchg
int3
mov
or
rorl
in
pop
aaa
push
and
lret
daa
scas
mov
lods
inc
or
jbe
stc
in
jg
dec
out
lds
jb
xchg
pop
jle
or
test
std
mov
lock
or
fcmovnbe
mov
jle
in
xlat
stc
mov
and
fmuls
lods
fidivrs
repnz
push
xchg
or
daa
add
cltd
dec
mov
sub
pushf
hlt
jo
jns
sub
sbb
repnz
xchg
sub
jo
pop
rcrl
icebp
enter
push
push
xor
xchg
jle
lret
stc
test
dec
lcall
add
ds
ds
popa
mov
ret
inc
xchg
lret
iret
adc
movsl
xchg
cltd
jp
inc
test
jle
repnz
xchg
icebp
loopne
int
mov
in
inc
fisubl
ljmp
out
push
repnz
push
jae
sahf
push
or
lods
mov
daa
and
mov
cmpsl
cmc
xchg
mov
mov
jmp
repnz
xchg
bound
fwait
lea
lret
mov
mov
cmp
xor
stc
cmp
adc
inc
push
and
cmp
lret
dec
jecxz
dec
pop
sub
lret
mov
dec
adc
stos
cmc
pop
inc
std
sub
and
outsl
cwtl
push
stc
mov
mov
xor
test
add
mov
stos
xchg
adc
add
push
and
scas
cmp
push
mov
or
mov
mull
jno
and
add
repnz
xchg
push
xchg
pop
and
scas
mov
xchg
jp
sub
dec
xchg
push
sbb
lock
in
enter
dec
mov
in
xchg
adc
mov
pop
jle
addr16
and
fdivl
rcr
fmuls
xchg
pop
mov
push
incl
xchg
je
outsb
sub
or
push
aaa
in
addl
mov
adc
test
lock
mov
adc
leave
insl
jl
in
push
cli
ret
scas
repnz
dec
and
call
mov
pop
adc
sbb
sub
test
popf
push
sub
mov
xor
xchg
push
push
sbb
les
xor
pop
daa
jp
mov
push
rol
outsl
cltd
lods
jmp
les
pop
jae
xor
jbe
popa
mov
movsb
movsl
or
xlat
mov
cmpl
cltd
int
mov
dec
xchg
das
lcall
and
adc
mov
in
pop
inc
pop
pop
cmpsl
or
lret
mov
xor
or
mov
add
xor
rcll
insb
xor
test
sahf
pop
iret
push
packsswb
jne
lret
lods
stos
xchg
jmp
lods
xchg
pusha
jnp
enter
cmp
jp
jge
das
mov
xchg
push
rcrl
mov
lods
mov
call
jle
jae
sub
mov
mov
adc
dec
sbb
imul
loope
sub
ss
repnz
sbb
sbb
scas
sbb
clc
iret
out
fcmovne
stc
in
shlb
out
lds
in
push
pop
adc
int3
add
add
stc
xchg
push
pop
jns
psllq
fsubrs
push
pop
jns
imul
jbe
push
or
repz
jns
xchg
repz
mov
jp
mov
adc
push
icebp
cmc
daa
scas
lds
dec
in
ja
dec
outsb
xor
jbe
in
xchg
pop
jle
movsb
mov
mov
adc
ds
jle
in
inc
mov
jne
popf
aas
ret
mov
push
mov
repnz
mov
xchg
pop
mov
das
mov
adc
jp
movsl
movsb
lret
das
mov
iret
loop
pusha
fdivl
mov
xabort
rcrb
mov
repnz
sub
adc
rorb
cld
repnz
das
iret
ljmp
imul
icebp
repnz
das
mov
shll
pop
mov
ljmp
mov
add
das
mov
xor
ds
mov
aaa
mov
jle
notl
pop
xor
sahf
dec
mov
pop
xlat
dec
cmp
adc
pushf
jge
test
jle
and
imul
or
repnz
push
in
lcall
test
lret
or
sti
mov
das
mov
xor
cmp
in
icebp
lahf
sbb
pop
adc
mov
jge
push
xlat
add
mov
pop
flds
lahf
std
das
push
pop
jns
and
cld
iret
bound
es
sbb
das
je
jge
js
mov
or
fwait
stc
in
jg
loop
push
inc
push
mov
dec
addb
xchg
pop
jle
xor
push
sub
enter
sti
jl
xchg
leave
pop
cltd
pusha
mov
pop
add
and
test
shlb
sbb
fwait
inc
fs
lret
add
push
lahf
mov
sahf
or
repnz
xor
aad
push
jns
xchg
imull
adc
push
fildll
sub
dec
mov
xor
mov
in
pop
cwtl
mov
mov
dec
mov
sbb
in
pop
lods
gs
jecxz
aad
cmp
pop
jle
lahf
xchg
xchg
out
clc
movsl
xchg
pop
jle
inc
mov
test
pushl
repnz
xchg
inc
addr16
js
in
ja
out
test
iret
test
dec
fldl
add
pushf
in
push
pop
cmp
or
xchg
xchg
aad
xchg
push
pop
jns
sahf
jecxz
xchg
mov
cmp
pop
jns
or
xchg
jbe
jp
or
pop
jns
xchg
nop
lret
movsb
es
jle
adc
push
fs
sub
sub
adc
dec
xor
outsb
mov
mov
gs
jmp
inc
push
pop
adc
ja
or
imul
mov
inc
mov
inc
loop
dec
add
enter
xchg
push
add
push
xchg
push
pop
jns
mov
sbb
test
mov
fwait
ja
cld
in
dec
dec
xlat
lcall
rclb
inc
xlat
loopne
jp
jge
negb
scas
push
sahf
cli
repnz
inc
popf
push
lock
jne
std
fmul
sub
cmp
sbb
xchg
xchg
push
mov
push
repz
call
lds
aam
call
call
lret
das
mov
xor
add
lret
das
mov
jp
shrl
push
and
nop
inc
aam
stc
pop
call
ljmp
add
cmp
in
sbb
scas
andb
scas
mov
arpl
xchg
sbb
xchg
jmp
cmp
enter
pusha
lcall
adc
out
out
stc
sub
lock
movsl
dec
pop
add
jo
lret
jp
repnz
cmp
lods
mov
mov
add
shr
in
pop
jns
xchg
xchg
sub
xchg
cmp
addr16
mov
jb
add
faddp
mov
mov
push
pop
jns
pop
scas
or
push
inc
clc
scas
in
addr16
jns
xchg
jge
decb
fs
repz
in
push
inc
adc
fisubs
js
lret
fucomip
in
lods
pop
cmpb
push
lea
loopne
lock
loope
pop
jns
or
cmc
and
mov
call
arpl
lcall
push
ficoms
inc
sub
xor
in
sbbb
mov
sub
in
pop
imul
mov
push
add
stc
add
mov
lret
mov
repnz
mov
mov
test
addr16
mov
addr16
pop
cmpsl
popf
xchg
gs
iret
pop
xor
into
mov
lock
pop
ja
arpl
xchg
dec
stc
pmaddwd
jmp
dec
xchg
and
mov
insl
fsubs
repnz
les
mov
pop
popl
insb
xchg
push
mov
pop
or
xchg
push
mov
enter
mov
fisubl
stos
fs
pop
jle
mov
outsl
mov
xor
js
in
sub
in
mov
iret
lahf
jle
jmp
push
cmpsl
jle
in
xorb
popf
lea
pop
push
decl
lret
mov
mov
and
jbe
jnp
pop
stc
xlat
mov
add
repz
repnz
enter
adc
fcomip
repz
dec
cmp
test
movsb
fstl
inc
sub
pop
jle
jl
or
insb
and
in
xchg
mov
in
comiss
lds
in
mov
andl
cmp
jg
pop
mov
jle
cmp
dec
xchg
lret
sbb
loopne
xor
xlat
addb
sub
ljmp
dec
repnz
scas
mov
and
push
xchg
xchg
sbb
lock
das
mov
sbb
jl
aad
imul
add
dec
mov
cmp
in
pop
movsb
xchg
and
pop
out
inc
arpl
aaa
push
cmp
lret
das
push
mov
jno
lea
repnz
jg
pop
packsswb
and
mov
or
out
repnz
das
mov
add
test
lret
das
mov
inc
add
add
inc
mov
sti
shlb
je
les
mov
divl
add
ret
ret
and
in
adc
orb
or
inc
test
sti
sahf
jecxz
and
out
sarl
cwtl
and
cmp
push
xchg
adc
mov
mov
sbb
int
and
mov
es
lcall
jg
sbb
daa
sub
xchg
push
fisubrs
lods
mov
xchg
or
repnz
mov
inc
xchg
xor
cmp
das
mov
sbb
mov
cmp
das
mov
int3
test
xor
movsl
xchg
sar
cld
repnz
add
pushf
out
inc
cs
lock
adc
xchg
jg
add
inc
inc
pop
movsl
xor
in
sbb
cmc
adc
sti
mov
pop
jle
jl
jl
stos
jno
ficomps
cmp
jo
jle
in
out
mov
aad
add
stos
out
jns
call
sbb
xchg
xor
xchg
in
push
pop
enter
jne
push
mov
clc
sahf
cld
sbb
sbb
xorb
lret
jns
lods
orl
rclb
adc
xchg
push
pop
ja
jge
adc
cmpsb
pop
jle
ja
js
and
push
loopne
repnz
mov
mov
jge
adc
ret
ds
jp
cld
clc
mov
rolb
mov
das
iret
cmp
mov
stc
in
test
and
push
jmp
mov
in
stc
in
pop
lds
cmpsl
cmp
fmulp
xchg
imul
cmp
xchg
push
rclb
push
xchg
mov
mov
inc
mov
and
std
cmp
mov
repnz
cmp
int
cwtl
addps
ror
repnz
push
or
lret
test
xor
fisubs
into
push
mov
scas
mov
jbe
dec
mov
or
inc
in
sarl
pop
mov
incl
jmp
push
xchg
shrb
mov
fnstcw
or
jbe
mov
mov
jne
xchg
pop
fildll
push
flds
lret
das
in
insb
push
mov
pushf
lret
repnz
das
mov
push
jp
lods
dec
fcomp
jae
das
mov
mov
push
fdivrl
das
mov
xchg
fwait
fwait
or
out
mov
mov
dec
or
in
sub
adc
test
cld
repnz
das
movsl
jge
mov
xchg
adc
mov
xor
mov
xchg
mov
iret
dec
int
mov
jns
loop
xor
cli
sub
mov
jbe
jns
inc
push
and
jecxz
mov
jle
in
inc
orl
jne
popf
jp
inc
mov
cli
out
nop
push
push
cmp
outsl
pusha
jl
sub
xorb
stos
pop
jns
lret
inc
pop
popa
cltd
jbe
dec
std
jo
cwtl
frstor
jns
xchg
push
mov
lea
pop
inc
add
xchg
push
pop
xchg
rorl
dec
add
ret
shrl
scas
mov
outsl
outsl
add
loop
sbb
push
sbb
lods
scas
mov
push
scas
pop
push
pop
decb
pop
lods
xor
xchg
sub
sub
add
mov
stos
cmpsb
rorl
cld
repnz
mov
cmp
push
leave
and
lea
xor
lret
das
mov
xchg
dec
pop
add
mov
imul
add
mov
jae
sarb
outsl
xor
sub
inc
stc
in
xchg
mov
pop
loop
mov
ja
dec
mov
arpl
std
cli
jmp
pushf
cli
enter
jge
mov
jns
dec
es
fiadds
mov
in
mov
mov
iret
adc
and
sti
sbb
jns
movsb
ret
sbb
lret
ss
xor
jle
dec
push
pop
jns
les
loopne
pop
xor
test
xchg
repnz
aam
cmp
lcall
sub
inc
add
scas
fldl
mov
ds
test
mov
stc
scas
mov
dec
jno
cmp
loope,pt
sbb
sbb
push
popa
cmpsb
mov
push
lcall
lods
mov
mov
add
cmc
mov
pop
shl
xchg
push
ficoms
xor
mov
xchg
push
pop
jns
jmp
or
lea
testb
in
pop
sub
popa
int3
hlt
xchg
lea
data16
enter
icebp
test
inc
cmp
pop
and
inc
cli
xchg
fiadds
push
mov
push
pop
jns
dec
sahf
lods
pop
cmpsl
dec
clc
mov
push
pop
jns
add
and
int3
push
mov
cli
xchg
pop
jns
xchg
lods
lock
add
sub
cmp
xchg
push
jmp
push
or
pusha
sahf
scas
push
in
push
pop
cmp
fsubr
andb
add
adc
jns
jno
and
jnp
rcrb
jns
sbb
sub
out
jge
mov
xchg
adc
dec
adc
je
fadds
das
xchg
repz
jno
xchg
push
jns
ficoml
dec
xchg
or
pushl
add
lea
in
push
or
lcall
and
mov
ret
repz
daa
add
dec
popf
mov
pop
jns
add
lret
lahf
mov
push
mull
movsl
sub
mov
cmc
or
in
mov
sbb
jp
scas
mov
data16
fucom
orb
pop
ret
loopne
js
fidivrs
jle
idivl
or
fld
adc
push
out
sarb
in
push
daa
mov
jnp
xchg
clc
xchg
es
xchg
pop
fiadds
hlt
adc
shlb
in
add
pop
mov
mov
aad
or
mov
xchg
out
mov
mov
jnp
cmc
inc
scas
lods
pop
cmp
stos
rcrl
test
repnz
das
insb
mov
rcl
mov
das
mov
test
xlat
push
shlb
cmp
pop
mov
std
inc
jae
cld
repnz
das
pop
lret
sarl
cli
cmp
repnz
das
mov
adc
mov
xchg
add
call
lea
or
ret
lret
inc
cmpsl
fwait
pop
out
mov
hlt
ds
scas
jnp
cmpsl
cld
insl
mov
stos
and
sbb
das
repz
movsb
test
adcl
andb
push
pop
jns
cmp
and
xor
int3
out
jp
in
pop
inc
lret
movb
mov
out
lret
iret
in
test
shrl
cltd
mov
into
xchg
mov
mov
daa
push
jbe
jecxz
repnz
lret
ret
adc
push
xchg
scas
mov
xor
and
or
shll
jo
dec
les
ss
dec
scas
mov
adc
popa
jl
imul
in
mov
test
sbb
rolb
js
bound
lods
add
mov
repnz
mov
adc
cld
sti
enter
pop
adc
or
lds
cmp
xchg
xor
xlat
imul
and
iret
iret
cmp
sti
pop
ss
and
dec
pop
jle
in
mov
arpl
insl
enter
stc
sti
enter
or
push
xchg
or
cmp
pop
inc
sub
mov
or
loop
sub
ss
nop
jne
mov
ret
fwait
in
scas
mov
sub
test
in
out
inc
or
mov
inc
ja
jg
mov
repnz
xor
hlt
mov
adc
push
mov
xchg
and
and
les
lret
pop
mov
pop
and
add
lods
repnz
lret
and
inc
ret
or
mov
xchg
popf
and
xchg
cld
repnz
xlat
mov
sub
inc
mov
lea
repz
cld
repnz
das
push
lret
std
mov
xor
scas
jp
jno
repnz
das
mov
stc
clc
arpl
lret
das
mov
test
push
jnp
xor
mov
bound
ljmp
cld
repnz
cmp
stos
pop
or
nop
ret
mov
out
lret
das
gs
cmc
cs
dec
cwtl
push
cmpsl
mov
cmpsl
pop
or
repnz
sti
sbb
dec
mov
lretw
dec
fstpl
dec
xchg
add
pop
cmp
cmp
add
xchg
lock
mov
roll
inc
test
push
ficoms
mov
dec
pop
into
or
in
and
ret
enter
in
pop
jae
lea
fwait
mov
cmpsl
aaa
dec
mov
clc
dec
in
out
mov
rclb
es
sahf
stc
in
mov
mov
xchg
repnz
lahf
jnp
lahf
jl
inc
add
in
sti
enter
or
push
push
sbb
and
pop
xchg
stc
dec
pop
jns
cmp
ds
das
mov
and
mov
fisubl
sbb
pop
cmp
add
dec
mov
sti
enter
rorl
sti
sub
outsl
dec
leave
mul
jmp
sbb
mov
das
lret
bnd
insb
push
mov
sbb
lret
dec
daa
xchg
push
pop
lock
and
loop
lock
mov
imul
push
repnz
je
add
cmpsb
add
pop
call
lret
das
call
and
push
icebp
lds
or
jp
sub
mov
xchg
je
xchg
xor
fstps
jne
xchg
push
adc
mov
cmc
aad
sub
out
push
sbb
inc
scas
mov
test
test
cmp
sub
les
mov
dec
imul
jle
xor
dec
sub
gs
mov
or
ret
sub
mov
hlt
cmp
fwait
adc
sub
push
mov
inc
pop
mov
add
mov
lret
mov
mov
aad
or
lretw
mov
aaa
mov
in
dec
lcall
mov
pusha
stc
or
jbe
mov
adc
sbb
repnz
das
sbb
sbb
dec
imul
jo
sti
pop
loop
cmp
outsb
and
repnz
xor
xchg
mov
add
dec
fnstsw
inc
push
pop
jns
mov
rorl
pop
inc
jbe
cmp
or
jae
pusha
add
mov
cld
mov
mov
das
mov
fwait
hlt
movsl
sbb
movsb
cmp
clc
mov
stc
repnz
push
push
mov
nop
and
in
movsb
cmpsl
aas
jg
js
push
leave
dec
adc
pop
jns
es
cwtl
xchg
xchg
xlat
cmpsl
add
xchg
out
push
mov
repnz
jg
outsb
jmp
cld
repnz
cld
mov
inc
adc
daa
fsub
push
jl
fisubs
das
pop
jo
cmp
dec
sub
pop
notl
push
add
mov
jnp
xchg
pop
jle
call
movsb
loopne
scas
dec
jmp
mov
mov
add
in
ja
call
mov
and
inc
jle
sbb
mov
xchg
pop
imul
inc
inc
inc
dec
cmp
xchg
inc
popf
add
sbb
dec
in
sub
sub
test
xchg
aaa
aam
arpl
leave
sbb
adc
jns
cmp
test
dec
and
pushw
mov
int
pop
jns
xchg
mov
jns
xor
insl
or
in
in
push
pop
and
sbb
lret
mul
xchg
push
pop
in
add
mov
out
cmpsb
inc
cwtl
fwait
jns
das
pushl
cmc
lcall
cmc
mov
mov
xchg
push
ficoms
int3
cmpsl
arpl
dec
pop
jns
xchg
dec
lods
jae
jae
mov
xchg
push
mov
add
mov
mov
je
mov
out
cld
jnp
lret
inc
inc
test
int
in
and
fldl
sbb
xchg
pop
jle
sub
cmpsl
jae
dec
xchg
cltd
inc
jmp
fs
jle
in
push
xchg
popf
and
mov
cmp
jle
in
push
push
rcll
jg
dec
inc
jae
cmc
in
pusha
push
mov
icebp
in
sub
es
jnp
mov
negb
mov
repnz
and
cwtl
push
leave
lock
scas
mov
lea
sti
jle
neg
psubusw
lds
cmp
fs
xchg
pop
lret
sub
mov
sub
sbb
icebp
inc
and
cmpb
outsl
inc
scas
mov
or
dec
cmpsl
fsubp
dec
cld
repnz
mov
rcl
in
xor
jns
loop
lret
das
mov
and
xor
push
mov
les
test
das
mov
mov
lock
sbb
and
fisttpl
pop
test
out
lret
addr16
cs
inc
outsb
sub
push
and
sbb
aaa
xchg
mov
test
jns
xchg
cmp
mov
insb
test
mov
pop
push
add
xchg
pop
jle
lea
lock
jl
adc
repnz
and
ss
popf
aad
sub
in
shl
add
cmp
mov
stc
mov
jb
scas
inc
mov
jmp
mov
lret
test
xor
mov
pop
dec
es
cwtl
jmp
ds
mov
mov
xchg
xchg
lock
cld
repnz
das
pop
ret
xor
rorb
aas
lock
sarb
mov
and
push
xchg
das
mov
xor
mov
pop
jle
negl
enter
xchg
sti
push
js
xor
xchg
shl
les
pop
stc
repnz
mov
int3
pusha
popf
mov
xor
lret
in
jg
push
ret
inc
and
hlt
push
dec
iret
in
pop
jle
push
push
jmp
mov
or
mov
mov
sbb
mov
gs
lret
test
mov
push
and
rcrl
loopne
clc
enter
enter
jge
pop
and
loopne
jl
mov
jl
out
pop
sub
lea
nop
push
hlt
aas
xchg
fisttpl
xor
mov
mov
inc
push
fmulp
insl
sbb
push
test
popa
add
mov
and
add
test
in
mov
push
and
in
add
jge
test
lds
mov
pop
jns
push
inc
js
scas
jns
cmp
outsb
dec
insl
or
in
pusha
jg
jg
roll
adc
push
lahf
ret
adc
jp
popa
xchg
push
ficoms
call
lcall
in
fs
ret
mov
cmovge
add
adc
nop
outsl
xor
pop
incb
jb
sub
sbb
push
dec
push
lret
movb
add
inc
in
push
pop
and
pop
test
popa
xor
inc
jmp
pop
jge
push
sub
notl
cmp
in
xlat
xor
or
jecxz
inc
sbb
xchg
pop
test
fwait
leave
mov
cmp
subl
mov
push
icebp
lods
or
mov
cmc
mov
mov
loopne
fsubl
jns
jecxz
sub
add
inc
lret
or
sub
xchg
xchg
pop
sahf
ffreep
mov
in
enter
xchg
pop
shll
cmp
in
jno
insb
mov
gs
out
and
adc
mov
sub
push
push
and
shll
xor
or
test
xlat
rcll
jge
lods
pop
jle
imul
mov
notb
dec
and
hlt
cld
jnp
xchg
cmpl
pop
sti
lock
cltd
repnz
das
mov
lret
pop
call
das
mov
add
lcall
inc
das
mov
xchg
clc
out
pop
sub
mov
mov
aas
cli
test
inc
test
nop
lods
sub
lret
das
xchg
bound
fs
inc
fs
scas
mov
inc
in
or
arpl
loope
sbb
push
cmpsb
mov
jo
xchg
lret
pop
fildl
mov
scas
mov
insl
lret
sub
nop
in
mov
add
inc
push
and
jns
cmp
push
sbb
push
dec
ja
mov
test
lock
xchg
push
push
pushf
mov
movsb
inc
repnz
les
cmp
sti
mov
clc
sbb
inc
mov
sub
pop
addb
scas
rol
and
jbe
stos
or
mov
pop
cmc
hlt
mov
nop
and
cmp
push
scas
mov
call
mov
adc
mov
dec
cli
incl
das
jle
add
mov
lret
ficompl
mov
stc
in
ret
xor
push
mov
mov
and
ficomps
dec
and
aad
mov
in
push
fnstenv
adc
add
xchg
push
pop
pop
xor
xchg
int3
push
xchg
push
pop
jns
cmp
pushf
test
push
jge
in
and
push
shlb
ja
mov
mov
leave
push
xor
inc
movsb
sti
mov
add
daa
add
push
lcall
hlt
jmp
jg
stc
repnz
add
imul
add
sub
outsl
test
lods
sub
fs
lds
ja
or
repnz
cwtl
xor
daa
lret
cli
push
imul
lret
adc
ret
mov
jmp
sub
and
xlat
movsl
das
pop
in
pop
outsl
sub
test
fistl
mov
push
mov
add
jle
in
test
mov
nop
sbb
mov
xor
in
xchg
nop
subl
in
pop
incb
sbb
lret
dec
mov
lret
mov
adc
or
xorb
daa
ljmp
sub
lahf
mov
repnz
pop
aad
test
mov
cmp
mov
mov
into
cmp
push
pop
jns
inc
mov
xchg
gs
call
jns
push
stos
ret
jmp
in
loope
and
insl
out
push
and
push
repnz
outsl
pop
dec
nop
icebp
xor
divb
xlat
cmp
jle
in
stos
into
lds
inc
xchg
sbb
mov
insl
and
int
movb
mov
cmp
jmp
push
fs
xchg
stc
in
pop
inc
in
push
movsl
inc
xchg
enter
lcall
mov
data16
mov
inc
movsb
or
xabort
test
and
cmpsb
in
inc
mov
lods
mov
jmp
stos
rclb
repnz
lock
mov
or
scas
mov
cmp
jmp
in
jp
jmp
or
stc
in
dec
aad
pop
in
pop
pop
test
mov
and
pop
repnz
in
mov
mov
cld
repnz
add
test
cwtl
push
inc
loopne
test
xor
sti
stos
mov
leave
sbb
std
outsb
cld
jge
in
scas
mov
scas
iret
lea
repnz
mov
cmpsl
xlat
fdivrs
test
mov
dec
std
repz
and
outsl
or
push
xchg
pop
repz
jns
push
pop
xor
xchg
mov
push
repnz
mov
add
in
push
pop
cmpb
jno
std
inc
xor
jns
subl
das
xchg
aas
jl
and
mov
xlat
push
push
icebp
xor
das
mov
ret
mov
push
xchg
in
mov
mov
pop
mov
ja
and
sub
cld
repnz
das
dec
or
outsl
mov
push
mov
aam
mov
sub
das
mov
lret
jp
mov
mov
dec
mov
jae
lcall
xchg
sub
cmpsb
jae
push
pop
jns
add
dec
ret
pop
lret
cmp
stos
jae
je
xchg
xchg
fidivrs
sbb
mov
sbb
sbb
in
mov
jne
jle
adcl
xchg
push
xchg
pop
jl
mov
cmpb
push
pop
imul
loop
int
outsl
and
scas
mov
lcall
iret
scas
jg
hlt
enter
ret
mov
dec
pop
addr16
cmpsl
cld
imul
jmp
xchg
mov
mov
dec
push
jb
sub
out
lock
in
xchg
inc
repz
enter
lock
cmp
lret
push
ficomps
jp
out
shll
in
jg
popa
stos
movsb
sbb
cmp
mov
mov
and
out
cmp
repnz
aam
adc
or
xor
dec
inc
mov
aas
mov
neg
and
or
sub
or
imul
fs
xchg
jno
arpl
in
addr16
or
dec
stos
jg
xchg
test
xchg
pop
jle
jo
pop
in
and
mov
fsubs
das
lcall
stc
andb
fwait
icebp
sbb
push
lcall
push
sbb
or
test
shl
dec
and
test
push
or
clc
pop
ds
mov
mov
mov
imul
repnz
jmp
leave
jo
popf
dec
sub
ss
sbb
jle
in
xchg
inc
mov
xchg
fimull
xchg
sub
fwait
inc
shlb
inc
dec
orl
stc
imull
mov
push
cmpsb
pop
jns
mov
scas
mov
jne
jbe
pop
inc
pop
pop
cmp
jo
mov
pop
jns
lret
fsub
arpl
inc
mov
mov
lods
jae
sti
int
dec
test
mov
in
push
pop
pop
addr16
push
xchg
push
pop
jns
mov
adc
mov
xchg
cmp
outsb
mov
sbbl
jmp
stos
int
inc
adc
cmc
xchg
cmp
outsb
cltd
mov
repnz
das
jg
push
roll
rcl
shrl
pop
pop
push
inc
xchg
das
mov
xchg
les
mov
mov
mov
cwtl
pushf
mov
mov
repnz
das
lret
jno
xlat
mov
stc
lea
lret
das
mov
mov
fs
lret
das
mov
jecxz
loopne
xor
mov
xor
sbb
pusha
mov
mov
sub
or
test
loope
inc
mov
jnp
jge
sub
xor
jnp
sahf
in
sub
cmp
xchg
mov
std
xor
ror
inc
mov
jo
imul
int3
add
lcall
fbld
insb
push
sahf
in
mov
and
lods
dec
dec
inc
dec
lret
pop
jns
push
pop
stos
push
inc
imul
lcall
push
lods
imul
scas
mov
mov
stos
les
or
inc
scas
mov
xchg
mov
jne
movsb
sub
repnz
mov
gs
or
scas
out
cmp
lock
das
mov
arpl
cmpb
movsb
jns
stos
rorl
aaa
addb
stos
xchg
xchg
subb
aas
sub
in
int3
pop
add
or
out
repnz
aam
inc
or
jmp
xlat
lret
call
add
jnp
jle
mov
mov
scas
mov
std
nop
xchg
daa
cmp
cmp
lret
test
inc
mov
push
ficomps
push
ret
nop
mov
pop
jle
in
addr16
push
test
push
aaa
jmp
lret
mov
in
xlat
jns
cmp
imul
xchg
pop
cmp
rcrb
push
enter
lods
pusha
inc
xchg
loop
jmp
ficomps
jge
in
jae
pop
jns
xchg
and
push
mov
fcoml
pop
scas
jnp
mov
mov
pop
shl
andb
xlat
stos
or
jae
shlb
mov
outsb
cwtl
push
push
ja
cmp
jl
dec
in
cmp
rorl
xchg
push
mov
pop
cs
or
mov
dec
pop
jbe
and
xchg
cli
mov
repnz
movsl
test
aaa
enter
push
lahf
cli
add
scas
mov
in
sbb
cmp
out
mov
jae
enter
ret
mov
into
add
jmp
mov
imulb
mov
scas
mov
bound
pop
loope
aam
dec
mov
repnz
fldcw
jmp
aam
push
pushf
addr16
cs
and
outsb
adc
rorb
xchg
pop
jle
lret
xchg
stos
push
scas
mov
ljmp
adc
icebp
dec
mov
enter
lret
das
ret
fdiv
xor
ljmp
cmp
addr16
pop
jns
xchg
jo
dec
and
sub
loope
lret
inc
xor
outsl
xchg
addl
fisttpll
or
push
push
loop
outsb
lods
mov
push
aad
and
push
addr16
int3
mov
fcmovu
pop
jns
xchg
mov
es
xchg
repz
jle
xchg
jle
test
push
dec
imul
pushf
imul
pop
stc
or
push
or
and
xchg
mov
frstor
mov
add
mov
test
sahf
mov
mov
cmp
in
ficompl
in
inc
stc
arpl
jo
add
adc
mov
push
cli
imul
mov
sub
sbb
and
or
dec
sub
fs
push
sbb
daa
jnp
jns
or
in
lea
fcoml
mov
in
push
pop
pop
pandn
or
fs
jb
repz
xor
in
aaa
xor
movsl
in
sub
jge
xchg
and
mov
movsl
xor
push
in
push
mov
or
xchg
xor
sbb
mov
in
pop
pop
adc
inc
push
or
mov
iret
and
xchg
addr16
sub
popa
aad
stos
cmpsl
push
es
leave
mov
enter
and
cmp
fwait
scas
cs
cmc
or
enter
das
mov
lds
lea
xchg
ret
imul
repnz
sub
shrl
cmp
cwtl
pop
addr16
int
adc
cwtl
or
test
sub
mov
insb
or
or
repnz
push
push
insb
mov
xchg
das
lcall
sti
cwtl
mov
dec
push
push
adc
add
xor
jmp
aas
call
jle
test
mov
ret
in
cmp
sbb
inc
sbb
fmul
mov
pop
pusha
jns
xchg
push
push
push
lahf
lldt
les
push
adc
xchg
push
pop
test
jbe
pusha
push
insl
jo
cld
fcompl
sbb
jnp
shlb
and
jle
in
xor
jecxz
pop
insl
jl
stc
in
pop
add
jo
addl
inc
jle
jns
mov
out
mov
push
push
es
cld
repnz
mov
pop
int
sbb
add
enter
cmpsl
out
mov
cmp
mov
xor
ljmp
nop
dec
push
dec
loope
movsb
jne
add
ret
in
xchg
jno
fildl
nop
dec
and
sub
xchg
add
push
gs
jno
lds
inc
jae
outsl
lret
add
mov
adc
sub
xor
data16
jae
scas
mov
sarb
xorb
out
enter
psubsw
jmp
ficomps
cld
jg
push
outsl
push
movsl
int3
jns
xchg
push
sbb
imul
pop
sbb
xlat
lock
ljmp
in
cmp
cmp
lcall
test
mov
pop
das
das
xchg
jne
mov
adc
leave
das
pop
mov
pop
jle
testl
inc
test
xor
mov
cld
repnz
and
int3
in
jl
out
dec
arpl
in
and
cltd
iret
lea
mov
mov
cmp
aaa
fs
in
imul
sub
sbb
jmp
sahf
shlb
push
dec
loope
ljmp
repnz
push
xor
jp
lock
out
imul
xor
mov
push
lret
xchg
cmpsl
gs
cmp
cmp
addb
jge
jmp
insl
orl
push
cmp
je
mov
push
movsl
movsb
mov
movsb
daa
int
fisubrs
repnz
popf
popa
and
ret
mov
test
les
fldenv
rorb
lods
mov
or
mov
pop
sbb
fcomi
or
nop
lret
jg
out
push
aam
add
jle
scas
lock
stc
in
add
shrl
jp
xchg
and
icebp
roll
mov
dec
js
pushf
mov
icebp
or
fsts
sbb
mov
dec
shlb
xchg
push
ficoms
aad
jmp
enter
ds
xor
cmp
xor
adc
jge
mov
loope
mov
push
sbb
mov
cmpsl
ljmp
pusha
jg
cld
repnz
js
inc
add
sti
cmpsb
stc
and
mov
in
pop
sub
cmp
repnz
pop
cmc
test
sub
push
repnz
and
xchg
sbbl
adc
es
dec
mov
push
ficoms
mov
cmpb
mov
jns
xchg
insl
mov
pushf
inc
push
loop
arpl
mov
inc
push
mov
inc
shl
loope
sub
daa
xchg
shr
sbb
dec
scas
mov
iret
ss
jle
xor
hlt
add
repnz
push
mov
xor
popa
mov
popa
ret
mov
pop
jns
sbb
xor
cmp
and
xchg
push
dec
out
in
into
xchg
fcomp
movsl
adc
add
adc
repnz
mov
push
fmuls
pop
out
lret
mov
push
xlat
movsl
lock
sub
mov
scas
int3
ret
jbe
ds
into
cld
repnz
mov
jecxz
loop
ficoms
repnz
das
mov
mov
pop
enter
outsb
lret
das
mov
inc
inc
sub
sbb
mov
mov
clc
xor
mov
daa
mov
pop
pop
cmpsb
cmp
xchg
repnz
stos
pop
lds
outsb
push
gs
push
ds
lret
mov
dec
ja
push
lret
sbb
mov
jle
test
test
mov
lret
inc
test
ds
mov
fisttpll
lcall
fists
mov
sub
inc
popa
jnp
test
stc
sub
icebp
insb
scas
mov
popa
jb
cmp
in
xorb
lock
dec
jmp
aaa
lret
dec
repz
sub
mov
xchg
bound
aad
ret
mov
adc
rcrl
ds
ss
push
insl
enter
xchg
jmp
sti
xchg
jle
xchg
jmp
gs
xor
imull
adc
repnz
sti
ret
mov
xchg
mov
enter
faddp
sub
imul
stc
in
inc
ret
ret
inc
aad
mov
mov
cmp
xchg
pop
jle
xor
pop
sub
adc
pop
jle
loop
mov
leave
loope
insb
add
repnz
cli
enter
jmp
jae
sub
mov
sub
jne
and
xchg
xchg
scas
mov
inc
cmp
jge
out
pop
fildll
mov
push
loope
int3
pop
movb
std
call
pop
repnz
mov
movsl
jmp
or
or
bound
push
mov
movsb
repnz
clc
or
sub
movsl
lock
je
dec
or
aaa
sbb
lcall
pop
xchg
push
pop
jns
jmp
cmp
sbb
leave
mov
lret
stc
notl
bound
ret
sbb
adc
in
pop
jle
aas
cmp
movsb
sub
inc
mov
out
adc
and
arpl
sahf
dec
loope
inc
stos
sub
in
repnz
lahf
jne
inc
jmp
jb
pop
sahf
cld
fbld
lcall
inc
lods
in
sti
xchg
cmp
test
bound
mov
popl
pop
push
dec
je
iret
sbb
ret
and
push
sbb
test
inc
or
scas
dec
add
in
and
lret
sbb
test
lret
lret
mov
xchg
insl
pop
or
mov
out
inc
cmp
jp
and
sbb
out
std
stos
and
sarl
push
jae
push
imul
stc
aaa
stos
std
scas
rcll
xchg
pop
jle
stos
scas
stos
cmp
test
loope
pop
mov
mov
sarb
in
mov
mov
dec
and
pusha
mov
iret
jl
xchg
das
jmp
xor
push
daa
scas
mov
dec
xor
ds
pop
repnz
roll
push
add
and
sub
xor
jg
jb
sahf
ja
sub
test
fisubrs
int3
out
mov
inc
scas
mov
pusha
icebp
or
jmp
lods
cld
cmp
lret
mov
and
push
repnz
jmp
sbb
xchg
lret
mov
xchg
loopne
fistpll
add
repnz
jbe
lret
push
stc
in
xchg
xchg
mov
xor
repnz
insb
in
pop
jle
lock
out
cmp
lea
sarb
mov
in
fstpt
scas
dec
sub
dec
testb
and
mov
imul
imul
cmp
mov
xor
and
imul
mov
mov
pop
stc
repnz
inc
ds
xor
enter
sub
add
das
inc
daa
movsb
xor
xor
jo
jle
insl
push
or
je
pushf
xchg
cwtl
iret
fwait
or
stos
pop
loopne
sbb
mov
inc
ficomps
mov
pop
movb
or
push
out
inc
int
pmullw
pop
std
movsb
cs
jnp
jmp
dec
ret
clc
enter
cli
and
xchg
xchg
push
fidivs
pop
add
push
test
mov
jle
mov
sarb
pop
jns
xchg
outsl
mov
stc
pusha
push
pop
outsl
inc
jns
xchg
push
aaa
pushf
xlat
rcrb
mov
mov
cmpsb
lea
inc
pop
in
and
insb
cld
repnz
mov
mov
and
dec
out
mov
and
popa
into
sahf
xchg
or
jbe
pop
les
mov
fdivrl
and
xor
loopne
daa
in
arpl
mov
call
leave
jg
mov
jae
adc
cltd
sbb
jp
cmc
or
sub
dec
je
leave
movd
test
or
jne
pop
inc
outsb
jae
xor
in
pop
scas
fs
jae
cmpsl
and
mov
fiaddl
fcmovbe
repnz
mov
cmp
cmp
sbb
add
xchg
aaa
dec
stos
xcrypt-cfb
cmpsl
bound
push
mov
lods
lahf
push
pop
push
dec
mov
jle
in
jns
xchg
ja
popa
out
and
sbbl
xor
popf
lods
flds
stc
in
jmp
mov
jne
mov
loope
jnp
cmpsb
and
jg
push
scas
mov
insb
cmp
and
or
mov
repnz
pop
push
idivl
mov
mov
insl
gs
jno
in
xchg
in
mov
out
xor
jg
adc
ror
jge
les
sbb
jl
in
shlb
push
cwtl
xchg
repnz
mov
stos
fbstp
jbe
in
jg
mov
mov
mov
xchg
pop
jle
adc
cmc
in
sbb
mov
jle
in
adc
scas
cmp
xchg
fwait
inc
dec
push
sbb
repnz
and
shl
arpl
dec
lret
lret
das
mov
or
push
cld
jmp
inc
push
jl
push
xlat
cli
pop
jle
in
popa
cltd
es
scas
sub
mov
stc
in
mov
shrb
in
out
sbb
mov
enter
iret
imul
add
mov
push
popf
scas
mov
outsb
dec
sbb
out
xlat
es
lret
push
pop
pop
ret
aad
pop
fwait
mov
mov
test
iret
mov
repnz
scas
pushf
cmpsl
dec
cwtl
sub
dec
xlat
sbb
xchg
mov
push
popa
xchg
xchg
movsl
stos
and
jl
in
scas
add
and
into
les
push
sbb
lret
mov
sbb
enter
jo
xchg
das
scas
mov
pop
std
jg
aad
jp
inc
pop
jns
and
popf
pop
xchg
int
push
idiv
in
jg
xchg
push
out
out
sub
mov
or
inc
enter
test
fs
mov
int
mov
xchg
cmp
push
int
add
lds
mov
lret
das
mov
cltd
jae
clc
inc
pop
cmp
and
jl
bound
jo
je
imul
jmp
repnz
scas
stos
mov
cmpsb
cmp
das
pusha
jle
test
or
inc
sti
stc
in
pop
lcall
incl
das
or
stc
decb
jle
jae
loope
inc
or
out
and
cmpsl
out
test
addr16
cs
jle
in
pop
stc
and
pop
aas
in
aaa
incb
xchg
dec
mov
mov
ljmp
xchg
pop
sbb
push
dec
mov
enter
in
sarl
lahf
or
out
pushf
cli
xchg
ret
into
inc
mov
js
movsb
mov
pop
cmp
dec
repnz
test
mov
inc
sub
aam
fwait
loopne
lret
imul
lcall
rorl
lret
mov
or
mov
sub
sub
repnz
lods
popf
pop
test
cld
repnz
and
pop
mov
xchg
xor
adc
in
adc
and
cmpsl
add
in
repnz
jae
pop
and
cltd
loop
mov
lods
mov
adc
insb
push
xchg
cmp
xchg
divl
or
in
test
mov
mov
inc
xchg
mov
jb
mov
add
jge
loope
scas
jo
jbe
cli
lret
pop
jle
idivb
jb
nop
repnz
pushf
rclb
xchg
dec
js
imul
stc
in
inc
xchg
les
cmp
cld
repnz
and
decb
mov
scas
fsubr
enter
in
das
mov
test
jae
sub
jl
out
jle
cld
mov
xlat
inc
mov
mov
push
in
test
fs
cmp
mov
test
pop
je
cli
push
repnz
sub
rorl
push
mov
jae
mov
dec
cmp
ds
dec
jp
cltd
sti
adc
inc
fdivr
enter
fwait
dec
xor
xchg
push
fimuls
lcall
cmp
in
mov
lock
repnz
adc
dec
std
inc
push
xor
inc
cmpsb
lret
mov
pop
lcall
cmp
pusha
pop
add
iret
stc
sti
lret
das
mov
push
add
pusha
pop
outsl
or
and
pop
ja
mulb
mov
lret
repnz
lods
mov
movsl
pop
add
int3
loopne
mov
scas
mov
insl
xor
and
or
shrb
push
fiadds
xlat
fbstp
push
mov
lahf
or
mov
or
repnz
pop
and
fidivl
enter
imul
ret
pop
jle
mull
xor
lock
jno
push
xchg
fs
in
cmp
lcall
mov
loopne
pop
xchg
xor
out
in
sub
push
add
cmp
scas
ret
ja
mov
repz
loope
lock
adc
xchg
ja
xchg
xor
roll
push
pop
jns
es
jecxz
popf
adc
fists
imul
lods
idivb
xchg
push
pop
aad
adc
out
push
jns
jecxz
sbb
icebp
fistl
xlat
repnz
das
pushl
cmp
mov
inc
lret
das
mov
repnz
pop
and
mov
cld
repnz
shr
xchg
in
ds
or
pop
stc
repnz
lahf
push
jge
xchg
jmp
mov
jnp
jmp
sub
dec
xor
in
testl
inc
or
jnp
jle
in
jle
jge
pop
fsubl
aas
clc
ja
shl
addr16
out
pop
pop
mov
fsubr
test
jle
and
es
int3
pop
xor
stc
in
sti
insb
jp
fmul
adc
ja
js
xchg
ljmp
call
rcll
ret
mov
mov
fimull
repnz
loope
xlat
das
fisubl
in
jmp
sub
cmp
leave
adc
xchg
sub
sub
fs
pop
inc
mov
jle
jbe
jge
lods
jns
sahf
in
in
aam
xor
jmp
mov
and
fnstsw
stos
sbb
repnz
xor
cmpsb
hlt
add
sub
jge
mov
push
add
push
fimuls
aam
inc
lcall
xchg
sbb
pop
jns
xchg
aaa
ljmp
push
or
jg
ds
mov
push
mov
pop
jnp
add
stc
in
pop
inc
push
mov
dec
sbb
aas
cld
jnp
xchg
ret
cli
pusha
pusha
fstl
xor
and
pop
xor
sub
dec
cltd
pusha
or
dec
push
fimuls
mov
roll
xor
in
jl
int3
and
sub
ficoms
fistps
adc
daa
xchg
push
rorb
pop
jge
sub
in
jne
xor
jne
pop
fiaddl
pop
push
inc
push
sub
adc
add
xchg
jl
repnz
mov
scas
movsb
enter
push
pop
jns
shll
xchg
push
xchg
sti
pop
jns
xchg
pop
nop
jg
mov
add
xchg
fbld
fidivrl
xchg
push
pop
push
sbb
fldcw
inc
jg
addr16
pop
inc
lcall
sbb
jge
dec
mov
jp
add
int
ret
inc
es
mov
fldenv
mov
and
in
int3
hlt
out
xchg
cmp
mov
stc
repnz
and
sahf
test
push
pop
enter
jmp
loopne
lret
mov
imul
iret
cmp
cld
les
mov
and
pop
jle
in
xor
clc
leave
sbb
ds
mov
in
push
loopne
xchg
pop
sbb
enter
xor
enter
add
dec
sbb
push
test
mov
add
test
mull
fistl
cmp
ja
repnz
xchg
xchg
mov
pop
lret
lahf
sti
js
loope
das
adc
lods
mov
les
arpl
inc
int
dec
jg
cld
push
sbb
call
jmp
cli
enter
sbb
std
in
push
fdivrp
daa
scas
les
jnp
cwtl
mov
push
pop
jns
jns
pop
jne
je
mov
push
mov
push
pop
jns
dec
stos
mov
outsl
mov
push
pop
jns
xchg
lods
inc
sti
jmp
mov
fs
push
loope
mov
xor
nop
mov
dec
cmp
sub
lret
test
pop
sarb
mov
nop
add
scas
mov
mov
jns
xchg
sbb
inc
xlat
xchg
push
aad
xchg
push
pop
stos
mov
gs
push
insb
bound
ret
push
mov
xor
jns
gs
dec
loop
fidivrl
leave
icebp
push
pop
jns
xchg
rcrb
jge
push
mov
push
pop
push
pushl
mov
xchg
push
pop
fs
jno
setle
mov
xchg
push
pop
jns
and
xor
jno
or
mov
lods
mov
ja
mov
in
pop
mov
and
je
fsubl
xchg
pop
jle
lcall
mov
pop
jle
out
sbb
jecxz
cltd
adc
inc
cmpsb
add
lea
test
test
repz
enter
in
jg
fdivr
popa
das
lock
fcmove
pop
xchg
pop
jle
mov
shrb
and
shlb
sub
imul
xor
mov
mov
ds
lret
inc
sbb
mov
pushf
mov
div
lret
das
jmp
pop
pop
push
xor
loop
lret
das
mov
mov
xchg
or
mov
fistpl
rcrl
lea
push
xchg
cmp
nop
sub
cld
repnz
das
pop
mov
cmp
cmp
cmp
jnp
adc
loopne
mov
lret
das
mov
lods
or
movsb
das
mov
imul
fwait
cli
jge
in
pminsw
adc
and
pop
out
fbld
mov
das
leave
or
mov
das
mov
push
jns
cmc
jle
push
shl
jnp
dec
fs
mov
pop
jle
in
inc
lcall
add
dec
jmp
xchg
jecxz
push
fistl
and
lret
add
push
xor
repnz
jg
mov
or
adc
mov
or
xor
mov
xor
cmp
pop
lock
stc
in
pop
lea
andl
or
enter
out
inc
sub
adc
fidivrl
sti
pop
xor
addr16
sbb
testb
lods
das
mov
jno
rcrb
jl
push
jbe
lret
aas
aad
push
jmp
xchg
inc
adc
mov
int3
test
mov
jmp
data16
cmp
lret
dec
lea
dec
xlat
dec
lcall
loop
push
xchg
push
insb
into
outsb
push
adc
in
sub
fld
jno
insb
je
out
fiadds
sub
leave
xor
sbbb
jns
xchg
push
sub
les
cmp
sub
push
nop
sbb
mov
cmpb
jp
divb
dec
mov
repnz
subb
and
lds
sub
mov
orl
icebp
dec
mov
mov
jns
xchg
mov
xchg
xchg
cli
in
push
pop
push
lock
pop
sti
mov
rcrl
cmpsb
jg
pop
jns
adc
cmc
les
jge
mov
xchg
lds
pop
aam
scas
push
mov
mov
ss
xchg
sub
das
mov
cld
movsl
or
inc
das
mov
pop
dec
sub
ret
mov
mov
test
stc
repnz
xchg
ljmp
mov
sbb
repnz
scas
and
stos
pop
das
mov
push
xchg
cld
test
ds
cld
repnz
hlt
lahf
mov
scas
or
lods
push
ljmp
cld
repnz
das
add
sbb
movsb
pusha
adc
lret
das
mov
mov
imull
cmp
test
in
push
cmp
xchg
pop
xchg
push
push
loopne
sub
cmc
mov
stc
decb
loop
pop
pop
popa
pop
dec
fs
lea
lcall
mov
dec
xchg
test
pop
clc
jns
xchg
push
or
es
ret
lahf
mov
fsubl
fcoms
pop
jnp
lret
mov
inc
pop
movsl
sbb
pop
scas
mov
jp,pn
adc
movsb
jb
mov
lret
loope
jecxz
lods
xor
les
scas
lret
mov
push
out
icebp
imul
pop
jge
sbb
mov
inc
ret
cld
repnz
xchg
out
jp
pop
daa
inc
lret
loopnew
insl
imul
jg
cmpb
ljmp
mov
and
cmp
lds
push
das
and
lds
and
ret
push
pop
outsl
lret
repnz
das
sbb
dec
mov
cmp
lret
das
mov
mov
lcall
cld
adc
mov
cli
gs
sbb
cmp
and
pop
jns
jmp
fildll
faddl
inc
jbe
dec
lock
in
jae
mov
or
adc
enter
push
or
push
xor
jmp
inc
pop
out
gs
mull
fbstp
dec
sub
jb
inc
inc
push
dec
aaa
sar
repnz
das
lods
fidivs
sbb
stos
push
aaa
mov
xchg
das
pop
popf
mov
adc
jb
daa
stos
js
add
dec
mov
js
cmpsl
test
add
mov
out
enter
jae
and
xchg
pop
and
in
sbb
lds
xor
push
stc
in
xor
xor
das
jmp
inc
pushf
scas
mov
jecxz
out
enter
jnp
jo
ljmp
imul
add
addr16
rcll
and
cmpsb
and
and
nop
fst
stos
fstps
mov
repnz
das
mov
add
cmp
jno
dec
cs
icebp
xchg
das
mov
add
repz
mov
add
cli
out
shl
add
outsl
loope
fsubrl
lds
filds
pop
xor
jno
pop
mov
cmp
stc
in
add
in
mov
mov
push
pop
std
adc
fldenv
imul
xor
mov
or
rorb
clc
sbb
test
leave
lret
pop
mov
ss
xchg
pop
jle
pop
sbb
sbb
or
stc
in
out
out
loopne
push
mov
inc
jle
in
inc
pop
mov
cld
dec
push
push
xor
in
pop
xchg
xlat
cmp
inc
xor
mov
test
pop
call
mov
data16
cld
repnz
sub
push
outsb
setge
in
cmpsl
adc
out
in
test
mov
js
pop
in
and
mov
fwait
push
nop
inc
xor
cmc
pop
xor
sbb
fxch
addl
test
cmp
out
lret
pusha
mov
insb
jle
in
je
daa
sbbb
mov
lock
and
push
mulb
xor
xor
repnz
xchg
sub
mov
notl
mov
xchg
and
fcoml
xchg
sub
mov
xchg
cli
or
in
popf
jmp
out
dec
push
xchg
push
pop
clc
and
in
jmp
lods
into
stos
in
ja
idiv
mov
or
daa
or
and
jns
stos
pop
shlb
lret
mov
rcr
fwait
adc
pushl
data16
int
repz
popf
sar
push
cld
repnz
xor
inc
movsb
push
sbb
mov
repnz
shl
dec
xchg
sti
xor
sub
mov
mov
jmp
enter
ret
in
and
leave
jmp
jns
maxps
js
repnz
xchg
aaa
xchg
xchg
or
pop
rorb
loope
lcall
aas
or
and
mov
das
test
inc
and
jle
in
inc
enter
repz
mov
xchg
dec
push
jle
in
push
sub
stos
xlat
mov
in
pop
xor
mov
dec
jne
imul
outsl
or
xchg
pop
icebp
ficomps
cmpsb
xchg
dec
in
jp
clc
mov
sub
push
mov
jmp
pop
out
cmp
out
xchg
mov
dec
mov
ja
mov
fnstcw
xor
inc
idivb
out
dec
jmp
lahf
repz
cmc
and
and
push
ret
jle
repnz
and
decb
packuswb
inc
in
cs
mov
xchg
push
repz
roll
clc
sbb
jecxz
pop
mov
outsb
mov
je
jle
fs
loop
lods
out
mov
lret
mov
jns
and
jge
or
lcall
mov
push
test
pop
adc
jno
cld
repnz
push
cli
movsl
rcrl
insl
xchg
not
and
cli
lods
jno
pop
jns
push
mov
lahf
lahf
cli
int3
adcl
cld
pop
jns
xchg
jne
xchg
mov
adc
push
outsb
push
sub
mov
cmp
imul
xchg
jge
pop
jle
les
sbb
mov
ret
dec
pop
jns
jmp
cmp
xchg
push
in
jg
dec
push
xchg
and
rcl
cltd
jmp
or
push
stc
jl
push
fldcw
leave
push
stc
test
cmp
ud1
in
pop
jle
ds
stos
into
jg
push
and
xchg
pop
jle
mov
dec
ficoms
cmp
je
pop
pop
jle
in
mov
aam
in
or
jl
in
inc
mov
test
push
loopne
fistpll
mov
jg
mov
clc
enter
aas
ret
dec
sub
push
test
jns
ljmp
or
xchg
push
pop
xchg
xchg
mov
pusha
sbb
mov
in
lcall
stc
pop
pop
xorb
lods
nop
or
lods
test
push
xor
mov
push
or
pop
push
cld
repnz
mov
repz
aaa
in
lret
das
mov
out
sub
fmul
das
mov
xor
adc
fstpl
fiadds
ljmp
inc
int
loopne
mov
pop
es
cmpsl
cmp
mov
lret
sarl
imull
ljmp
cmp
scas
jle
pop
jns
mov
pop
mov
pop
stos
adc
jns
xchg
push
mov
mov
xchg
jg
pop
mov
xor
sub
stc
in
xlat
adc
es
ret
mov
loope
daa
adc
outsl
cltd
testb
mov
inc
in
outsl
cmp
test
sub
stc
in
jb
data16
jb
ret
sahf
dec
mov
pop
push
push
mov
fstl
mov
xchg
pop
mov
notb
in
pop
jle
xor
sbb
push
fimuls
lods
cs
pusha
mov
adc
ja
xchg
neg
add
inc
popf
xchg
insb
jle
in
mov
dec
jne
mov
inc
stc
in
pop
sub
jecxz
rclb
idivl
jmp
scas
mov
pop
fbstp
aad
jmp
lret
push
mov
es
xchg
les
lret
xor
push
shlb
xchg
lret
mov
mov
fdivl
scas
mov
daa
aas
ja
cld
loop
loop
lahf
push
mov
stc
adc
cmp
mov
subb
xchg
sub
mov
repnz
je
mov
test
insl
in
lret
mov
xchg
mov
ds
inc
cmp
data16
es
movsl
sbb
xchg
inc
inc
adc
cmp
xor
or
inc
mov
push
cmp
aas
fildl
jns
shrl
sub
mov
xchg
xchg
insl
xor
dec
sbb
mov
xlat
in
xchg
pop
mov
scas
push
cmc
rcrb
packssdw
mov
xchg
ljmp
out
pop
mov
push
lret
jl
in
or
xchg
xlat
jno
push
in
out
ds
shl
movsb
aad
mov
and
inc
push
pop
jns
mov
mov
push
stc
in
lret
int3
and
sti
hlt
adc
insb
xor
fistl
das
stc
mov
jb
sbb
ds
es
push
out
jnp
mov
in
insl
cmp
out
sbb
stos
adc
sbb
jp
mov
or
sbb
inc
jbe
sahf
mov
cli
shl
sub
cmp
dec
test
push
jbe
nop
push
push
mov
xchg
jg
xorps
in
hlt
flds
notl
or
xchg
or
es
out
gs
jg
in
push
popa
inc
pushf
adc
gs
enter
pop
imul
outsb
jmp
push
cltd
int
int3
arpl
dec
test
jns
gs
mov
loope
movsl
jo
jge
in
loopne
inc
push
pusha
add
jg
xchg
sahf
lds
aaa
pop
jne
inc
cmpsl
scas
cltd
jle
in
push
stos
adc
out
push
into
in
xchg
je
xor
enter
test
dec
add
ficomps
mov
out
imul
and
stc
in
and
sbb
xchg
lds
in
mov
repnz
pop
dec
adc
xchg
sbb
dec
jae
jecxz
test
fstps
daa
inc
std
mov
mov
es
mov
repnz
mov
pop
dec
rolb
cltd
pop
int3
sub
scas
pop
sub
dec
add
cld
jge
xor
sub
shl
test
sbb
lods
aad
sub
adc
popf
mov
scas
mov
push
dec
mov
fs
mov
repnz
das
pop
jo
sub
adc
insb
or
add
push
mov
in
fmull
stos
cmp
mov
and
xchg
xor
lods
scas
push
or
cmpsl
sarl
xchg
push
mov
cmp
add
xchg
push
pop
outsl
jecxz
sbb
add
and
cmp
jns
dec
and
mov
adc
or
lret
das
daa
fstpt
scas
xchg
xchg
ja
sub
inc
ds
jns
lods
inc
jmp
mov
inc
mov
lret
das
pushl
test
mov
jbe
push
filds
cld
add
scas
cmpsb
stos
ret
rol
lods
rcrb
clc
xor
repnz
mov
insb
jmp
loopne
xchg
jg
test
push
cmp
push
ficoms
mov
xlat
test
les
insb
mov
or
enter
cld
jnp
mov
pop
add
push
movsb
adc
outsl
or
fldt
adc
es
sub
int
popa
sbb
adc
enter
sub
cmp
leave
mov
push
inc
mov
shlb
mov
cld
repnz
das
mov
scas
push
rcll
int3
xor
testl
mov
or
rep
jge
and
lret
mov
push
daa
test
mov
jg
mov
in
jg
push
push
clc
outsl
or
in
ja
mov
jnp
popf
push
into
mov
lret
jne
add
aas
mov
jmp
scas
mov
add
adc
je
mov
enter
push
fnstcw
lret
and
add
jnp
adc
sbb
rorl
xor
stc
adc
jb
push
adc
and
mov
pop
ficoms
enter
rcl
lret
inc
cmp
clc
jns
xchg
push
xlat
ror
lods
push
aas
push
adc
pop
fcomp
jbe
int
jae
mov
inc
or
pop
sti
add
mov
in
int3
inc
fs
pop
rorb
jl
lret
das
cmp
mov
mov
out
sub
fcmovne
add
dec
xor
faddp
iret
add
aas
push
lds
jmp
lret
add
dec
cld
sti
push
out
gs
movsl
lret
mov
lret
and
push
fwait
sub
out
cmpb
cltd
jb
dec
and
sbb
lret
mov
push
idiv
outsb
in
push
ror
push
pushfw
pop
idiv
dec
std
mov
add
pop
jns
shrb
and
bound
sub
add
mov
daa
scas
mov
test
sar
mov
imul
and
and
outsl
xor
inc
outsl
or
cmp
js
mov
dec
jne
mov
cmpsb
lret
lret
jmp
jns
int3
add
jne
sbb
scas
mov
addr16
stos
sbb
xchg
lods
fldt
scas
mov
test
in
mov
out
mov
repnz
sbb
lret
add
movsb
cmc
imul
lcall
bnd
xchg
pop
jle
mov
jl
fs
lock
jle
in
pop
fdivrs
enter
push
movsl
and
stc
in
dec
mov
dec
lods
cmp
ds
stc
addl
jne
adc
in
ja
xor
jb
or
pop
xchg
push
pop
jns
gs
or
mov
adc
mov
cmpsl
lret
cmp
pop
jns
xchg
stos
inc
lea
sbb
scas
mov
push
and
cmp
push
sarb
in
push
pop
or
sahf
sub
dec
xor
popf
gs
mov
pop
cmpl
in
xor
lahf
fldenv
push
pop
mov
pop
sub
mov
inc
insl
imul
ljmp
int
inc
pop
test
push
adc
mov
cmpsb
lods
xor
xchg
pop
sbb
inc
cmp
movsl
cltd
pop
pop
jle
in
jbe
in
andb
leave
mov
neg
and
jae
xor
repnz
pop
jle
movsl
adc
test
jl
adc
rorl
mov
imul
ds
rcll
push
push
and
leave
adc
xchg
adc
mov
jo
mov
int
call
mov
sub
test
lret
cs
out
imul
mov
lret
mov
shll
cwtl
lret
or
inc
scas
mov
cld
sbb
shll
enter
arpl
int3
pop
popa
adc
in
stc
mov
cli
inc
xchg
enter
je
xor
mov
lret
das
lret
imul
mov
sahf
repnz
das
mov
mov
xchg
insb
pop
pop
ja
fbld
mov
fdivl
test
mov
mov
stc
in
icebp
mov
inc
imulb
popl
cmp
cld
repnz
das
xchg
adcb
icebp
ds
sub
out
mov
mov
arpl
xor
shll
lds
shrl
mov
mov
repnz
cmp
xchg
loope
lret
add
push
sbb
in
jg
mov
repz
das
lcall
xchg
inc
arpl
xchg
cwtl
mov
scas
mov
cld
cmp
dec
scas
mov
sub
jge
fistps
dec
fdivl
fdivrs
jns
outsl
mov
mov
xchg
push
pop
sbb
in
ja
add
sub
int
outsl
sub
or
enter
jno
sbb
sub
hlt
popa
cmp
cmc
xchg
mov
fimull
repnz
adc
xchg
add
mul
pop
xor
cmp
scas
mov
repnz
addl
and
enter
cmc
push
sub
adc
jle
cld
daa
in
pop
xchg
rolb
movsl
push
cmp
push
jmp
das
dec
outsl
cwtl
lods
jns
xchg
push
xor
push
cmp
out
sbb
test
pop
xchg
mov
push
mov
ficoms
fwait
repnz
jno
enter
pop
lret
mov
sbb
or
stc
lcall
out
enter
pop
jns
jg
js
nop
int3
and
es
into
repnz
cmc
jmp
adc
mov
es
imul
cmp
mov
sbb
push
js
inc
sti
loopne
jmp
cmpsl
nop
fwait
or
mov
or
ja
lods
lea
fists
outsb
pop
inc
push
les
in
pop
jle
dec
fcompl
call
lahf
inc
and
stc
mov
pop
hlt
testl
xchg
mov
int3
pop
xlat
xchg
mov
popf
lods
jl
inc
cmp
ret
lret
jns
jnp
jb
cmp
hlt
mov
xchg
lea
stos
ss
neg
cmp
inc
add
loopne
cwtl
daa
lock
repnz
and
xchg
mov
lret
das
mov
add
jg
or
out
or
xor
dec
das
add
cmp
loope
push
xchg
loope
pop
and
mov
fcmovnb
and
dec
push
lahf
jl
repnz
psubsw
inc
pop
daa
inc
negb
dec
jns
mov
xchg
and
push
lods
adc
push
pop
add
jg
adc
pop
mov
xlat
mov
out
xchg
jg
xchg
outsl
inc
and
icebp
add
stc
in
int3
lret
sarb
movsl
dec
dec
dec
repnz
popf
xlat
repz
loope
pop
jle
dec
sub
pop
or
popa
inc
add
lds
mov
rol
test
inc
sarb
fadd
scas
fldcw
dec
idivl
leave
xchg
push
fsts
mov
addr16
repnz
das
fiadds
lods
mov
adc
xchg
scas
sbb
sbbb
movsl
loop
cmp
das
mov
xchg
ror
inc
xor
lret
adc
repnz
adc
inc
dec
adc
in
xlat
mov
cmc
jbe
out
fmul
xchg
push
fisubs
sbb
popa
and
scas
scas
mov
imul
lods
dec
fwait
mov
mov
lret
xchg
lods
leave
xor
cmp
movsl
mov
jo
adc
push
ja
pop
push
scas
in
cmc
enter
movsl
bound
mov
pop
jns
rcrb
xorb
clc
fnsave
mov
cmp
fildll
stos
xchg
jae
fisttpl
cmp
pop
jns
xchg
push
sub
cmp
aad
lea
xchg
push
nop
or
testl
cmp
pop
cmpsb
mov
mov
outsb
popf
push
pop
jns
in
jb
mov
pop
mov
inc
loopne
in
jns
je
in
repnz
add
lret
mov
jno
and
sub
andb
lods
xchg
dec
insb
fxch
push
pop
jns
add
sub
aad
lret
sti
shlb
mov
push
jbe
xor
mov
imul
divl
rcll
or
xchg
push
pop
jns
js
mov
mov
fists
sub
mov
xor
xor
test
adc
mov
sbb
inc
mov
in
pop
jle
data16
es
push
pop
jle
xor
stc
mov
ja
arpl
jae
and
cmp
in
mov
daa
mov
adc
out
insl
cmp
outsb
imul
inc
jnp
mov
inc
pusha
lods
dec
cmp
repnz
loopne
popf
fisttps
mov
sub
pop
xchg
lret
xchg
push
sti
out
cld
sti
enter
add
mov
sbb
adc
pop
jge
lret
das
dec
dec
fnsave
add
repnz
dec
inc
repnz
scas
mov
and
hlt
mov
cmp
outsb
xchg
fdivrp
enter
push
or
fdivrl
ljmp
fwait
jns
mov
pop
cld
sbb
sub
rorl
and
daa
outsl
loope
push
push
gs
xchg
push
pop
jns
lret
or
repnz
push
pop
jns
scas
lahf
cld
mov
aaa
push
imul
cmp
mov
pop
sub
push
pop
jge
enter
lret
jecxz
mov
add
arpl
xchg
jg
mov
push
ror
pusha
xchg
addr16
cmpsl
xchg
ret
pop
push
mov
loop
pop
jns
cmc
and
lods
mov
sbb
ljmp
in
out
pop
xorb
lock
xchg
push
adcb
mov
cmp
xchg
inc
jbe
in
test
in
sub
dec
push
push
aad
fisubl
in
mov
shl
ljmp
rcrl
in
push
or
mov
les
fmuls
ret
and
popa
ror
imul
lret
das
mov
xchg
lods
mov
repnz
test
in
lcall
das
sbb
das
mov
mov
jmp
mov
mov
aaa
dec
or
mov
aad
mov
sub
sub
cmp
icebp
mov
pop
add
pop
test
cmc
xchg
cmp
int3
push
pop
jns
das
xchg
int
add
scas
and
xchg
sub
icebp
xchg
xchg
rol
int
dec
stos
inc
or
repnz
xor
cs
icebp
xlat
and
lret
fwait
cmp
push
std
inc
fcoms
mov
in
inc
arpl
hlt
loop
lds
fnop
mov
inc
inc
push
pop
ss
mov
push
mov
add
bound
cmc
pop
cmc
add
fisubrl
push
ja
sarb
and
cs
out
repnz
add
dec
mov
loope
inc
cmp
sub
xchg
pop
into
aas
xlat
xchg
sub
push
and
and
cwtl
fwait
jg
stos
sti
push
ret
xchg
mov
test
or
jns
shl
ja
rolb
clc
hlt
push
scas
nop
sahf
push
daa
push
sbb
push
fiadds
lock
lret
inc
jp
dec
pop
jns
add
sub
or
push
cmp
xchg
mull
arpl
pop
jns
movsl
jp
push
ficomps
fnstcw
mov
jmp
cmpsl
pop
stc
cmpsl
mov
and
in
mov
mov
jns
jmp
lahf
jne
loop
rep
push
and
into
rolb
pop
sbb
mov
cli
enter
cmpsb
xlat
and
xor
pop
dec
dec
fcmovne
xor
xchg
ret
jp
lret
das
mov
shlb
sub
inc
repnz
sbb
jge
inc
push
lea
pop
xor
movsb
insb
mov
jg
jle
in
jno
inc
das
imul
xchg
pop
and
out
out
jns
stc
in
pop
popa
lahf
mov
fisttpl
test
gs
fidivrl
and
dec
das
repnz
and
rcl
push
pop
cld
repnz
inc
push
das
aaa
pop
mov
push
fisttpl
lock
das
dec
arpl
mov
pop
ljmp
sbb
rcr
push
lea
or
mov
jae
in
mov
out
frstor
adc
mov
shlb
inc
repnz
or
mov
icebp
addb
add
pop
xor
sub
pop
sub
cli
pop
out
mov
jl
inc
pusha
adc
mov
idivb
mov
xor
stc
sbb
sub
enter
lods
xlat
pop
mov
xlat
repz
xor
jae
dec
jmp
sahf
nop
or
insb
mov
jge
in
stc
pop
mov
mov
repnz
loopne
pop
jge
and
xchg
cmpsb
pop
add
jne
jbe
pop
jns
pop
and
mov
mov
enter
daa
insb
imul
sub
leave
xor
sahf
lock
scas
mov
cmpsl
je
icebp
xchg
cld
jnp
lret
clc
fdivrp
or
or
repnz
das
mov
lock
xlat
add
cmp
pop
jns
cmp
xchg
lcall
jns
xchg
push
and
jne
dec
repz
sub
inc
sbb
in
add
dec
jbe
shr
inc
loop
xor
cmpsb
mov
lret
pop
sub
or
cmp
jbe
ds
xor
adc
and
jb
mov
enter
mov
in
adc
hlt
enter
hlt
mov
fsubr
inc
jmp
clc
dec
push
in
fnsave
xor
xchg
pop
jle
rol
nop
nop
jge
rcl
adc
or
repnz
imul
in
add
dec
clc
ds
jns
xchg
push
cmp
and
jg
pop
adc
xlat
xchg
or
stos
push
pop
jle
in
push
fsubr
xchg
jecxz
or
mov
jl
in
sbb
push
push
aad
add
in
mov
mov
in
xor
pop
mov
dec
pop
cwtl
push
stc
xchg
xchg
add
mov
fidivrs
inc
mov
sub
repnz
jecxz
pop
sbb
push
mov
cmp
dec
ret
jecxz
lahf
lods
mov
lcall
pusha
bound
inc
rcrl
mov
mov
xchg
sub
sub
adc
movsb
push
pop
jns
lods
mov
and
pop
jns
xchg
adc
ficompl
lret
jg
adc
xor
aas
clc
enter
lds
inc
xchg
clc
ljmp
inc
jle
in
aaa
js
outsb
enter
cmp
stos
aam
dec
jmp
addr16
aad
and
sub
xchg
xchg
push
pop
repz
jg
scas
inc
pop
scas
jae
mov
sbb
hlt
add
pop
lock
add
cltd
jo
jo
mov
add
or
js
jns
xchg
or
jecxz
xchg
sub
repnz
jns
xchg
push
mov
movsb
es
mov
xchg
push
pop
and
push
movsl
jns
fdiv
lcall
xchg
xchg
push
pop
jns
push
imul
jo
dec
sbb
jns
in
loope
pop
sbb
mov
popf
outsl
mov
icebp
xchg
popf
fnstcw
jb
stc
rcl
sbb
aam
mov
mov
mov
xchg
mov
inc
sbb
xchg
in
push
jno
sbb
ret
and
mov
lret
or
testb
jmp
sbb
lcall
sbb
push
stc
in
mov
std
mov
pop
pop
mov
fldt
xchg
cld
repnz
das
shrd
data16
mov
repnz
das
mov
xor
test
mov
das
mov
das
ja
loopne
pop
mov
cld
bnd
sub
sti
test
std
or
test
push
push
add
mov
mov
push
inc
orb
in
ja
xor
xchg
xor
and
jns
push
sti
cmp
mov
in
das
in
and
dec
pusha
jae
mov
mov
sub
movsb
outsb
xchg
ja
ds
mov
mov
pop
mov
jns
pop
popa
mov
mov
enter
sbbl
cli
enter
call
jmp
adc
es
sub
lahf
ret
cld
repnz
mov
push
scas
and
xchg
notb
das
mov
inc
int
jecxz
outsb
loopne
lret
das
mov
mov
cmpsl
mov
push
jg
cld
bnd
add
mov
scas
ss
inc
add
push
lcall
stos
xor
dec
pop
ds
dec
shlb
pop
pop
mov
cmp
pop
pop
das
mov
in
and
leave
popa
sbb
pushf
out
and
fxch
and
mov
mov
mov
lcall
mov
mov
jg
mov
xchg
mov
nopl
out
out
popf
out
lods
mov
xchg
sub
and
ljmp
pop
xchg
shll
sti
ds
es
xchg
pop
jle
xchg
add
test
pop
cmpsb
adc
and
stc
rorb
std
jb
push
add
outsl
jecxz
sbb
daa
inc
movsl
or
repnz
inc
aas
jns
pop
push
or
fisubrs
mov
lret
xchg
pop
cmp
pop
jns
in
mov
outsb
sbbb
xchg
jg
cld
scas
mov
insl
xor
bound
pop
jle
outsl
lcall
outsb
insb
xor
pop
jle
sub
inc
xor
popa
and
jns
fcmovnbe
sbb
xor
cs
mov
pop
mov
in
aaa
mov
jb
jmp
jmp
in
sbb
pop
pop
testl
pop
call
lret
out
mov
jno
mov
lods
inc
and
jl
popf
and
sub
insb
mov
jbe
push
pop
xchg
add
mov
cmp
in
push
ficomps
fucomi
pop
inc
test
std
lahf
xchg
push
pop
jns
jl
int3
jmp
xor
add
mov
call
jns
push
jp
jl
je
les
pop
jns
xchg
adc
data16
xor
adc
push
inc
std
mov
ja
cmp
or
scas
xchg
jg
pop
testb
adc
jns
jle
in
push
ud1
int3
std
in
lret
mov
repnz
mov
subb
pushf
mov
push
jmp
mov
sub
fcos
fwait
push
mov
push
fs
pop
jns
xchg
out
lret
sub
or
xchg
and
mov
cmp
jecxz
mov
stc
cmp
mov
repnz
int
add
push
test
xor
out
repnz
mov
nop
fsub
mov
nop
loope
jp
sub
icebp
outsb
mov
sti
repnz
js
inc
cmpb
je
ss
mov
mov
xor
scas
mov
inc
scas
insb
lahf
repz
mov
scas
scas
mov
mov
xchg
enter
dec
pop
call
adc
jns
mov
mov
jp
dec
lret
das
jle
mov
lock
sbb
xchg
ror
dec
lcall
in
icebp
in
push
mov
pop
stc
repnz
and
pop
mov
fnstenv
lret
inc
cmp
add
insl
int3
das
mov
mov
arpl
inc
mov
inc
jge
lret
in
call
sbbb
lret
lret
mov
push
xchg
pop
out
and
pop
lods
mov
js
xchg
add
jae
pop
pop
test
shll
mov
lods
paddsb
addr16
pop
jns
jns
rcrb
mov
cmp
iret
dec
pop
jns
xchg
adc
xchg
ja
mov
es
notl
scas
negl
and
xchg
pop
jle
mov
jp
inc
std
dec
fidivs
lcall
stc
in
jge
in
adc
fwait
mov
adc
ficoml
inc
mov
lret
lret
mov
and
sti
lret
mov
sbb
sub
or
sub
xor
mov
std
pop
sub
push
mov
lret
das
jl
test
rorl
lcall
das
mov
mov
ret
add
xchg
jg
stc
movsb
les
add
push
adc
dec
cmpl
aaa
xor
mov
nopl
enter
xor
lea
sbb
xor
or
and
scas
mov
aaa
out
xchg
sub
xchg
mov
ss
rcll
sub
scas
fs
push
push
adc
push
pop
jns
ds
jbe
in
sbb
push
pop
jns
xchg
xor
in
cltd
cmpsl
pop
fwait
subb
outsl
add
xchg
push
push
movsl
mov
imul
mov
xchg
push
pop
xchg
add
mov
and
push
pop
jns
imul
imul
mov
jge
in
iret
movsl
xchg
sub
jge
scas
fdivrl
enter
jo
cmp
mov
lret
aas
pushf
pop
sti
into
mov
jmp
mov
mov
mov
aas
or
lret
in
and
xor
mov
inc
stos
and
push
pop
push
xchg
cmc
mov
mov
shrb
inc
lods
pop
lods
inc
rolw
push
insl
outsl
in
sbb
sbb
ficomps
jmp
inc
mov
bound
ret
and
std
lret
das
call
jae
pop
icebp
mov
cli
das
mov
scas
jb
es
or
fdivs
sarb
lret
mov
adc
xor
ret
data16
xchg
push
pop
jns
pop
jbe
add
mov
sub
jns
jmp
push
in
mov
lret
xchg
xchg
or
cmpsb
mulb
dec
scas
mov
xchg
xchg
in
add
loope
mov
je
mov
popa
mov
dec
and
mov
pusha
cmp
push
mov
pop
xor
jecxz
or
inc
subb
push
push
lret
das
mov
mov
add
pop
mov
mov
aas
out
mov
ss
ror
das
pushl
push
in
jmp
mov
jg
stc
repnz
scas
mov
jl
mov
inc
loopne
sti
enter
ret
dec
in
loopne
xor
in
das
mov
bound
push
ja
inc
jl
jbe
mov
mov
xchg
push
into
stos
pushf
into
lock
sarl
xchg
xchg
fdiv
enter
jns
call
sarb
and
cs
xchg
sub
scas
repz
dec
popf
mov
mov
and
push
lret
data16
cld
adc
push
out
sbb
mov
out
pop
jle
in
add
sarl
jns
test
cmpb
or
mov
sahf
pop
mov
mov
push
sub
in
out
inc
mov
jle
in
cli
arpl
bound
push
push
test
call
sub
les
push
pop
loope
cmpsl
adc
push
adc
shrb
insl
push
or
dec
js
mov
cmp
int
pushf
jp
loop
cmpsb
aaa
test
push
jmp
mov
push
add
pop
push
adc
push
sbb
xchg
or
psubusb
jnp
fbstp
xor
pop
jg
jmp
repnz
das
mov
pop
adc
stos
sbb
enter
adc
push
adc
stc
addr16
push
mov
cmp
imul
xchg
ja
loope
mov
arpl
xchg
push
pop
jns
popf
rcl
push
cmp
xchg
shl
int
push
pop
jns
hlt
xorl
repnz
pop
pop
sbb
push
fcoms
xchg
les
or
in
push
dec
jns
fcmovb
jnp
loop
pop
cld
adc
lods
push
notl
inc
sahf
daa
mov
dec
sti
mov
jl
jmp
sbb
lcall
cmp
jle,pt
in
sar
rclb
xor
lds
xchg
pop
orl
jmp
jle
mov
cs
inc
push
fwait
cmpb
mov
fwait
rcr
sub
icebp
and
jmp
repz
mov
incl
xor
loopne
cmp
lret
aaa
add
cld
outsb
pop
and
test
dec
repnz
ss
adc
and
sbb
mov
lods
mov
scas
xchg
popf
pop
xor
fildll
pop
xlat
cmpsl
mov
push
xchg
mov
xlat
enter
pop
in
int3
xchg
call
xchg
jg
cld
shrb
insl
lds
sti
in
pop
jle
in
mov
push
insb
loop
imul
in
and
dec
ret
lock
sub
sub
in
or
jecxz
xchg
stc
hlt
xor
roll
sub
idivl
jae
stc
imul
jmp
jp
mov
mov
mov
mov
scas
stc
in
pop
adc
fcompl
mov
xchg
pop
push
jecxz
mov
mov
mov
repnz
insl
push
filds
add
sub
fwait
sbb
xlat
sub
lret
mov
pop
iret
push
mov
mov
or
pop
leave
lret
rcll
std
pop
jle
notl
and
inc
mov
push
ja
les
ds
push
sub
cld
bound
adc
adc
mov
adc
pop
jns
enter
cmp
xor
in
xor
sub
lods
imull
aaa
pop
jns
xchg
test
nop
jbe
fcoms
adc
push
pop
cmc
jl
xchg
in
xor
mov
xchg
xor
xchg
cwtl
xchg
mov
lret
pop
mov
cs
aas
pop
pop
sub
scas
mov
lret
flds
dec
cmpsb
cs
xchg
push
clc
ret
mov
cmpsb
pop
in
pop
jmp
sbb
test
int3
or
bnd
fxch
ret
mov
lret
loope
into
add
int3
pop
jge
fld
mov
cmp
cltd
jp
mov
mov
pop
rolb
call
lods
outsl
jb
push
fwait
cmpsb
je
out
xchg
sub
ss
adc
mov
xchg
mov
sub
cmp
lret
daa
popf
sbb
in
push
cs
pop
jns
pop
cli
sub
jmp
inc
scas
mov
inc
and
mov
sti
mov
push
pop
jns
mov
arpl
add
cwtl
mov
xchg
pop
test
pop
jge
std
cmp
lds
pusha
push
imul
in
pop
arpl
mov
cmp
leave
mov
jecxz
pop
outsb
adc
mov
push
pop
jns
cmpsb
jb
fldl
xor
lahf
and
pushl
sub
fcmovnb
sbb
xchg
dec
in
mov
inc
in
xchg
sti
lods
jno
jns
lret
test
fisubrs
pop
push
repz
push
sbb
pop
push
pop
jns
mov
out
mov
and
filds
xor
jge
jns
add
mov
push
adc
xorl
imul
mulb
push
or
xchg
pop
decb
lock
mov
cld
sti
enter
xchg
inc
nop
popl
mov
test
sahf
les
in
push
fistps
out
sub
enter
pop
outsb
je
loop
inc
testb
dec
fdivrl
xchg
mov
mov
cli
sub
repnz
das
int
aaa
aam
push
ljmp
adc
sbb
lret
das
mov
jb
push
xchg
scas
push
xchg
das
mov
adc
sub
push
mov
mov
cmp
mov
add
ret
and
add
or
pop
xchg
jg
cld
jle
movb
inc
dec
sbb
cmc
stc
or
icebp
add
jg
xchg
add
push
mov
adc
lahf
jp
lea
ss
push
xlat
push
push
pop
sub
and
pop
jle
divl
int3
adc
fildl
mov
stc
in
into
inc
jno
insl
js
mov
inc
stc
in
pop
leave
sub
stos
lods
sbb
jne
xchg
cmp
xchg
pop
jle
gs
icebp
mov
jl
mov
fwait
inc
and
rcrb
fadd
jno
push
sbb
sub
cmp
mov
cli
lcall
lret
shlb
sbb
mov
in
pop
jle
push
mov
loope
xor
mov
call
repz
fisubrl
aam
cld
repnz
xchg
pop
cmpsb
add
cmp
mov
xchg
inc
fdivl
jmp
lods
roll
iret
mov
data16
jl
add
ret
mov
lds
stc
in
addr16
in
adc
mov
mov
aas
stc
in
pop
popa
mov
ret
inc
dec
xor
jg
test
jl
imul
cwtl
push
mov
out
push
cmp
mov
cmp
push
lret
das
mov
mov
mov
cld
repnz
fistpll
notb
les
xor
jle
fldl
cmp
inc
stc
fstps
mov
adc
mov
mov
pop
jo
push
std
cwtl
orb
push
mov
repnz
cmp
stos
lret
xor
lret
das
mov
xor
popa
or
mov
mov
or
rcll
daa
outsb
decb
nop
dec
mov
jmp
leave
push
stc
in
or
nop
jae
cmovle
not
and
jmp
jo
and
cs
daa
pop
jns
xchg
adc
dec
or
fwait
add
fbld
push
mov
jno
das
stos
pop
iret
repnz
mov
xchg
out
imul
or
pop
flds
shl
out
daa
cmp
add
lds
repz
cmp
sar
sahf
out
pop
push
pop
adc
repnz
enter
jne
ds
xor
sub
mov
rcr
fbstp
bnd
repnz
jno
shlb
imul
xchg
mov
inc
sub
push
and
addr16
sub
mov
out
lock
sbb
jns
lea
pop
or
sub
mov
xchg
push
pop
pop
ss
test
add
movsl
xchg
mov
xor
sti
inc
add
and
repnz
das
in
divb
lock
jbe
ret
stos
scas
pop
iret
cmp
pop
jns
loope
movsl
clc
int
or
outsb
push
cmp
in
or
mov
sbb
and
int
push
jnp
jo
sbb
mov
bound
dec
xchg
or
inc
and
lret
das
movsb
stos
pop
jno
divb
outsl
jmp
push
fimuls
pop
pushf
and
jge
mov
fcmovb
aam
mov
jns
xchg
lock
or
push
fdivl
xchg
adc
mov
lock
pop
scas
xor
in
push
pop
jmp
lock
add
pop
jns
in
and
pop
test
ljmp
call
jae
or
imul
mov
adc
cli
mov
and
mov
mov
mov
es
jle
in
fs
sbb
cmp
xchg
cmp
pop
sbb
subl
jae
fmull
pusha
xorb
bound
ret
cld
cwtl
das
adc
mov
mov
loop
ret
jle
repz
jnp
lret
test
add
lea
lods
mov
mov
dec
stc
mov
enter
jecxz
jmp
pop
jns
jne
adc
rcrb
lods
mov
outsb
and
cld
repnz
mov
push
mov
adc
lods
icebp
enter
fstl
adc
sti
pop
lods
push
scas
mov
stc
xchg
test
mov
rcrl
inc
gs
push
mov
or
sbb
jecxz
xchg
dec
sub
js
dec
out
jns
xchg
and
movsl
movsb
test
int3
cmp
inc
inc
idiv
sarb
pop
dec
cltd
and
in
fcoml
jmp
rcr
mov
pop
mov
in
sub
imul
jbe
xchg
push
pop
xchg
and
pop
push
in
lock
andb
out
inc
lret
mov
mov
adc
lcall
iret
jbe
adc
leave
movsb
mov
js
inc
insl
xchg
jg
push
lahf
fdivs
mov
pop
pop
jle
in
xchg
sarb
imul
and
stc
in
ret
loope
push
cmpsl
add
fwait
jp
mov
and
outsl
pop
add
sub
scas
mov
cltd
adc
loop
cmpsl
sarb
lods
cld
inc
orl
jge
fiadds
mov
mov
xchg
outsl
jp
pop
jns
xchg
pop
mov
fwait
xchg
sub
fisubrs
jns
xchg
push
add
lret
lret
sub
dec
in
xchg
push
pop
cmpsl
dec
shll
loope
popf
lea
add
das
jg
push
or
sbb
repnz
inc
loopne
xchg
jne
daa
aas
cmp
jae
cmp
lret
xchg
push
lea
pop
jns
mov
test
xorb
movsl
and
call
mov
add
jns
jp
adc
pop
inc
ljmp
xor
sub
outsl
insl
cmp
lcall
movsb
add
mov
jns
fwait
xor
in
mov
cmp
pop
push
cmp
mov
loopne
pop
faddl
sub
enter
call
popf
adc
push
lret
pop
mov
adc
mov
sub
loope
hlt
bound
aad
inc
xchg
dec
mov
add
dec
stos
jns
xchg
lret
mov
inc
pop
push
stc
fstl
mov
push
adc
mov
scas
mov
and
gs
popf
cld
cmp
lret
pop
xor
vzeroall
cld
repnz
das
mov
rorl
add
and
stc
adc
pop
fistps
jecxz
adc
or
sub
iret
or
lret
push
inc
mov
adc
mov
outsl
cltd
pop
hlt
sub
jnp
sbb
sti
out
and
mov
jno
loopne
sahf
xor
insb
xor
pop
jns
lods
scas
mov
mov
xchg
in
cmp
and
dec
mov
inc
clc
imul
xacquire
sub
sbb
mov
imul
mov
rcrl
adc
lret
aad
cmpsb
adc
mov
scas
mov
cmp
outsl
ret
mov
scas
mov
or
mov
xor
out
lret
and
fidivrl
mov
xchg
ret
scas
mov
inc
in
add
inc
push
lret
imul
inc
cmp
push
in
and
sub
jp
xchg
ja
in
ja
addl
jo
xchg
push
pop
jns
icebp
mov
xor
and
adc
mov
xchg
jno
icebp
sub
add
pop
aaa
mov
fwait
sbb
enter
pop
pop
add
push
or
sub
pop
jmp
mov
in
repnz
lock
repnz
aam
sbb
mov
movsb
dec
adc
lret
mov
mov
sbb
jl
repnz
cmp
sub
mov
repnz
and
in
jge
xchg
sub
push
iret
xchg
xor
add
jle
sub
test
and
and
shlb
cmp
lcall
cmp
out
das
cmpsb
xlat
add
sub
push
sbb
mov
lahf
adc
mov
ds
lock
jmp
insl
mov
xor
mov
hlt
fbld
je
mov
leave
pop
sahf
cmp
sahf
and
iret
fisubrl
inc
push
arpl
add
push
pushf
sub
loop
cmp
push
testl
cli
sti
xchg
pop
jle
cld
add
lret
jbe
push
loop
cmpsb
jle
imul
pop
movsb
add
and
decb
adc
xchg
stc
in
pop
lds
xchg
outsb
add
fs
test
shrl
pushf
in
notl
pop
nop
std
bound
imul
jns
cmp
cmc
adc
or
inc
lods
xlat
daa
add
aaa
add
xor
into
mov
das
ds
inc
pop
movsl
push
xlat
or
cld
repnz
aam
cmp
inc
mov
enter
and
adc
popf
mov
xchg
and
push
rcrl
pop
pop
jns
cld
sbb
arpl
out
xchg
jnp
iret
jne
pop
xchg
aad
mov
das
mov
in
pop
iret
loopne
clc
push
ljmp
mov
inc
mov
sub
cmp
repnz
sahf
pop
lea
mov
repnz
sarl
bound
std
shll
mov
push
int3
wbinvd
push
test
scas
mov
inc
sti
mov
inc
push
rcrb
negb
lcall
in
xchg
sub
xlat
test
xchg
pushf
xor
lret
jg
jno
pop
push
insl
sbb
sbbl
inc
mov
arpl
mov
dec
cli
lret
in
notl
cs
push
xchg
cmc
pusha
mov
jns
test
mov
push
scas
ds
and
jo
pop
jns
mov
jle
pslld
loopne
int3
outsb
lret
sub
mov
jge
jbe
enter
shrb
push
ret
dec
pop
or
cmp
add
sarl
mov
mov
mov
push
pop
jns
or
jp
adc
and
jns
xchg
mulb
push
cmp
lods
push
mov
mov
xchg
push
mov
arpl
adc
in
push
pop
sbb
rcrl
mov
push
in
xchg
push
pop
jns
loopne
inc
mov
jmp
inc
fwait
add
pop
jns
outsl
ret
cmp
out
inc
in
add
rcll
pop
pop
and
jo
ss
push
loope
push
out
repnz
repnz
lret
ss
mov
lret
das
mov
or
mov
xchg
pop
jge
sahf
cmp
ljmp
pop
jle
in
or
aad
or
or
stc
in
pop
mov
out
shrb
lcall
xchg
testb
popf
loope
mov
xchg
adc
loope
jg
inc
test
outsl
jbe
les
cmp
scas
mov
je
aaa
jg
mov
cs
repnz
xchg
sub
test
out
pop
xlat
xchg
jl
inc
aam
mov
sbb
xor
mov
mov
xchg
lret
fyl2xp1
aaa
sub
pop
jp
jecxz
es
add
xchg
push
fmulp
push
push
fidivrl
stos
lock
push
pop
jns
bound
aad
pushf
lock
sub
mov
pop
cmpsl
mov
js
in
and
jge
pop
fisubrs
in
test
stc
pusha
in
inc
loopne
mov
dec
xor
js
add
push
test
mov
notl
adc
inc
mov
xchg
pop
jle
xlat
add
in
sbb
inc
andb
cmp
sub
adc
cmc
aam
test
fisttps
outsl
movsl
lret
mov
mov
fisttps
mov
iret
sub
jbe
inc
mov
xchg
push
fiadds
popf
gs
xlat
xchg
push
stc
lock
pop
pop
jns
lods
lods
add
dec
loop
pushf
lahf
imul
push
mov
in
and
test
testl
in
mov
aas
push
ret
jns
xchg
out
adc
mov
adc
in
push
inc
and
xchg
or
sub
lock
sbb
fcoms
pop
jns
call
dec
es
test
and
in
push
sub
xor
adc
or
filds
pop
inc
push
mulb
scas
in
push
mov
pop
jle
in
ficoms
and
inc
cmp
inc
lret
stc
in
pushf
and
pop
out
jno
subb
xchg
stc
in
pop
push
shrb
add
js
pop
sub
into
cld
test
mov
pop
jns
xchg
dec
xchg
and
mov
mov
repz
cmp
subl
pop
or
mov
mov
mov
mov
sub
je
stc
in
pop
out
cwtl
icebp
lcall
cld
in
xchg
pop
jle
mov
ret
lret
clc
jb
mov
dec
cmp
mov
push
fdivp
imul
out
mov
scas
mov
outsl
and
daa
rolb
sub
mov
lea
in
imul
js
and
lret
cmp
sahf
mov
mov
and
int
int3
inc
and
cmp
imull
fs
popf
xor
xchg
push
jle
loopne
repnz
and
jecxz
jge
sbb
sub
insl
and
insb
xchg
cmp
mov
ret
jmp
pop
in
mov
inc
ficomps
mov
and
sbb
pop
mov
iret
mov
aad
push
pop
jns
inc
and
cltd
cmc
je
jg
fdivs
sbb
jns
mov
xor
das
js
gs
xlat
adc
adc
mov
pushf
roll
jns
xchg
push
xchg
mov
mov
xchg
sbb
xchg
push
pop
fs
scas
aam
call
push
mov
out
pop
mov
ficompl
in
mov
pop
cmp
loop
xchg
pop
jle
int
sub
jo
or
xchg
push
sbb
out
push
fisttps
repnz
sbb
enter
adc
jl
sub
loopne
or
ror
in
pop
xor
push
xchg
mov
mov
jle
lcall
and
push
push
stc
in
xor
std
pushf
xchg
xchg
mov
hlt
repnz
insl
add
in
lret
mov
add
dec
sub
scas
mov
inc
mov
insb
inc
loopne
xchg
and
adc
xor
mov
mov
adc
or
xor
je
xchg
add
pop
pop
jle
in
out
andl
push
icebp
in
and
cmp
cld
xor
fiadds
jns
clc
jle
adc
aad
mov
dec
xor
jbe
test
mov
stc
imull
and
lret
out
ret
or
mov
imul
imul
jmp
cld
repnz
das
mov
pop
pop
test
das
mov
repnz
das
mov
pop
pop
dec
jl
xor
mov
mov
cld
sub
das
mov
lods
repz
je
push
add
cld
repnz
mov
in
push
insl
xor
mov
dec
inc
adcb
fwait
jp
aad
aaa
mov
push
sub
jnp
repnz
push
fwait
xor
jns
pop
iret
imul
jnp
std
sbb
cld
sub
mov
ja
lret
das
mov
mov
into
movsb
fstps
inc
jge
call
or
fwait
es
and
in
das
mov
loopne
adc
roll
addb
xchg
push
ss
inc
push
std
out
jbe
icebp
mov
add
and
lret
mov
push
loop
xchg
pushw
or
icebp
sub
mov
xor
loopne
sbb
scas
mov
incl
pop
fists
stos
pop
addr16
into
iret
aaa
lea
ds
sbb
popf
out
jmp
out
inc
lods
pusha
pop
or
jg
in
dec
movsb
pop
loop
fdivr
mov
cmpsl
sbb
jge
scas
xchg
ljmp
addl
push
fimuls
dec
bnd
shll
dec
sub
xor
push
pop
jns
cmc
push
push
push
adc
mov
notb
and
ret
cmp
outsl
pop
paddusb
pop
stc
ljmp
daa
in
lds
mov
mov
cld
repnz
xchg
mov
imul
pop
rolb
sub
in
cmp
int
sbb
push
fiadds
xchg
xor
and
enter
das
cmp
jo
add
adc
stc
incb
dec
jb
lret
jnp
push
jns
xchg
push
ret
shll
inc
jae
mov
out
mov
loopne
jae
jb
int3
cmp
cmp
in
popf
sbb
leave
daa
fdivr
iret
push
ss
push
jmp
push
mov
push
xchg
xchg
push
or
incl
cmp
xchg
imul
mov
sbb
loop
jle
notl
int
inc
pop
rorl
sarl
xchg
mov
push
jnp
rclb
pop
xor
xchg
cmp
xchg
div
adc
xchg
mov
xchg
sub
fwait
addr16
neg
inc
rorb
mov
xor
xchg
pop
adc
mov
cmp
dec
pop
stc
repnz
and
pushf
push
push
loope,pn
negb
add
dec
es
and
scas
mov
fldt
add
int3
insb
sbb
add
aaa
icebp
stos
adc
push
sub
adc
xor
mov
stc
in
test
dec
out
cmp
int3
pop
je
mov
mov
arpl
sub
stc
in
pop
xor
jp
jae
cltd
in
pop
jle
lods
je
lret
push
add
pop
xchg
push
mov
std
jbe
test
xchg
push
enter
lret
and
shrl
adc
xor
mov
repnz
das
xchg
lahf
cld
xlat
icebp
push
inc
dec
mov
bnd
mov
xchg
xor
ficomps
enter
in
add
push
aaa
cmpsb
das
gs
aaa
mov
call
fdivr
in
inc
push
pop
jns
sub
lahf
xor
adc
xchg
loop
mov
xorb
jmp
cmp
std
imul
or
push
scas
push
cmp
lds
insl
dec
leave
mov
or
pop
clc
scas
mov
inc
fs
insb
mov
xor
xor
aad
sbb
sbb
mov
repnz
into
dec
mov
clc
adc
lods
lret
mov
jge
lahf
mov
cmpsb
gs
scas
mov
cmp
movsb
pop
jmp
xor
repnz
ret
fistps
loop
insl
inc
or
sub
mov
push
mov
dec
sub
fsubl
movsl
inc
ja
jl
out
xchg
rcrb
adc
add
fldenv
jns
pop
insl
ret
daa
inc
insl
xchg
push
pop
jns
jle
imull
dec
in
jg
je
sub
jns
xchg
iret
pop
and
in
lret
jne
roll
jns
xchg
push
mov
test
xchg
mov
push
shl
sbb
adc
arpl
jns
ljmp
cltd
outsb
mov
in
push
test
add
sbb
cmpsl
or
sbb
pop
mov
lahf
push
xorb
fwait
ja
popf
sub
fsubrp
arpl
iret
and
fisubrl
ja
sub
popa
and
xchg
out
dec
dec
scas
mov
dec
xchg
out
cs
repnz
mov
mov
jp
dec
sbb
das
mov
es
adc
fiadds
lock
lcall
jns
xchg
push
sarb
adc
pop
sub
std
into
das
ds
cmp
call
sahf
iret
in
ret
cld
repnz
cmp
and
push
xchg
dec
inc
cmp
repnz
das
adc
or
cmc
popf
pop
pop
adcb
pop
add
aaa
repnz
pop
into
dec
notl
mov
sahf
enter
push
or
pushf
ffreep
sub
repnz
out
rorb
mov
es
in
fistpl
stc
in
mov
fdiv
mov
inc
jle
in
imul
into
clc
js
in
pop
orl
loope
xor
xchg
pop
jle
mov
cwtl
dec
clc
sub
inc
lret
push
stc
into
fists
and
aas
shr
das
mov
jg
je
mov
mov
adc
leave
inc
pusha
divl
mov
lahf
cld
repnz
das
aaa
das
scas
xor
jns
fs
loopnew
repnz
das
mov
ret
addl
cmp
xchg
xchg
jg
sub
push
dec
push
outsb
mov
in
clc
xchg
daa
daa
pop
sbb
dec
pop
cmp
jp
inc
ficompl
testb
jle
in
inc
repnz
fucomi
scas
test
xor
mov
pop
movsb
nop
jbe
inc
adc
lock
xchg
pop
jle
adc
jno
nop
lcall
jle
shlb
inc
aam
popf
dec
and
jle
in
and
push
push
and
loope
sahf
cwtl
mov
repnz
xchg
cli
pop
arpl
adc
mov
loopne
add
popa
sbbb
repnz
adc
je
pusha
int
xor
xchg
aaa
rorl
inc
fimull
dec
popf
and
sbb
adc
les
sub
jb
lds
inc
push
ss
lea
inc
inc
add
sbb
lea
xchg
jg
idivb
cmp
xchg
pop
jle
pop
popf
je
aas
or
ret
sti
test
stc
cmp
repz
int3
in
bound
lret
push
pop
jle
in
add
push
jle
inc
mov
scas
sbb
fcom
cmp
sti
insb
sub
ficomps
xor
test
outsl
mov
xchg
push
push
inc
incb
jne
pop
lds
and
inc
pop
xor
bound
fldenv
loope
sbb
xchg
mov
daa
nop
repz
xchg
push
pop
out
and
jle
inc
iret
mov
sub
icebp
jo
sahf
add
sbb
push
xchg
xchg
mov
leave
sub
sub
push
push
dec
in
xorl
jl
inc
cmp
mov
xor
lcall
repnz
les
add
int
push
mov
xor
into
lcall
push
faddp
adc
sar
icebp
pop
ljmp
sub
and
xchg
in
push
sbb
and
and
repnz
push
jnp
xchg
ret
mov
sahf
loope
sub
lret
push
sarb
push
orb
notl
lret
sahf
xor
out
mov
xchg
xchg
es
movsb
mov
scas
in
xor
xor
repnz
inc
mov
lea
sub
add
das
scas
mov
mov
nop
add
mov
pushf
adc
movsl
xchg
push
pop
jns
sub
test
aad
jp
test
xchg
cmp
and
sub
adc
out
imul
mov
cmpsl
mov
bound
test
jl
mov
popa
xchg
es
xchg
pop
jle
push
loopew
lea
add
dec
jl
in
mov
dec
push
out
mov
mov
mov
enter
inc
pop
fwait
outsl
push
sub
jns
mov
xchg
out
aas
jle
sarb
mov
add
pop
xor
stos
popf
mov
jno
push
pop
jns
mov
lret
cmpsl
and
cmp
negb
cmp
mov
sahf
fptan
cs
pop
jns
std
test
jno
ret
inc
and
mov
out
mov
sti
das
mov
testb
push
pop
dec
test
mov
orl
movsl
cmc
out
enter
xor
sbb
inc
pop
jge
sar
jb
test
xor
cmp
xchg
iret
aaa
push
shll
es
inc
mov
pop
pushf
jmp
mov
into
roll
test
rorb
hlt
xchg
xor
mov
pop
jle
push
lods
add
jg
les
inc
jle
in
sbb
or
push
sub
inc
out
test
popf
push
jns
adc
lret
mov
add
movsl
rclb
jb
mov
stc
repnz
das
rcr
sbbb
push
mov
xchg
jg
mov
lds
sub
xchg
pop
jle
fisubrs
xchg
cmp
add
in
cwtl
in
cmp
cmp
insb
mull
ret
cmp
loop
xor
lock
xchg
push
pop
and
fs
popf
jp
test
cld
insb
push
inc
pop
jns
inc
flds
lds
das
mov
mov
sub
dec
sahf
xor
pop
mov
stos
xchg
xchg
or
ds
and
mov
je
lcall
fbld
das
loop
xchg
mov
jge
pop
js
mov
and
jno
popa
test
in
in
jg
movsb
mov
jmp
lock
dec
xchg
lods
jl
movsb
jl
or
lea
in
lods
inc
xlat
mov
jns
stc
fmuls
pop
cmc
ljmp
jecxz
ds
add
stc
negl
push
push
xlat
clc
movsl
push
mov
in
pop
sub
shrb
les
or
xchg
pop
jle
lret
scas
jmp
push
stc
cmp
outsl
fs
out
xlat
je
cmp
ds
mov
int3
sbb
adc
scas
fidivrs
mov
inc
std
push
ret
loope
test
scas
mov
test
sub
mov
mov
push
shlb
repnz
mov
sub
decb
add
xchg
pop
or
mov
iret
dec
cmpsl
mov
cmp
adc
or
xchg
ja
daa
dec
sbb
ficoms
mov
insl
mov
adc
into
xor
fnstcw
mov
jge
fisubs
add
xchg
aaa
sub
nop
jns
mov
cmp
in
push
dec
or
add
lret
jecxz
ss
test
add
enter
mov
mov
xchg
cltd
inc
ljmp
mov
xchg
dec
cmp
lods
inc
scas
mov
dec
clc
xchg
cld
xchg
and
xchg
ja
jge
out
cmp
mov
xchg
push
pop
jns
inc
xchg
shll
push
pop
aas
dec
in
xchg
mov
repnz
negb
sti
and
sbb
popf
insb
inc
das
jg
or
aaa
in
in
cmp
jns
xchg
push
xchg
mov
fildll
mov
push
pop
and
cmc
mov
and
jns
mov
xor
scas
sub
mov
int
adc
mov
enter
dec
and
subb
inc
adc
pop
jns
popf
jle
adc
mov
lea
les
dec
cli
inc
shrb
repnz
inc
dec
fisttpl
in
and
loopne
mov
cmp
cmc
xchg
pop
jle
lret
fwait
notl
fidivrl
cmp
negl
pop
shl
sub
fwait
enter
fmull
add
mov
adc
repnz
push
rcll
xor
and
jo
push
cld
adc
sub
xchg
jns
add
or
add
sub
repz
in
cmp
repnz
sbb
out
pop
jge
shlb
outsb
shlb
mov
rclb
lret
sbb
daa
jne
xor
inc
in
leave
xchg
push
lods
ficompl
sbb
sbb
stc
testl
repnz
pop
mov
repnz
mov
xchg
pushf
push
into
pop
inc
shlb
push
movb
push
or
dec
pop
fs
stc
jnp
mov
pop
vpaddusb
leave
jp
sbb
sub
mov
sub
jle
das
cli
outsl
out
sub
cld
fcompl
addr16
pop
repnz
aam
pop
mov
jnp
jns
sub
sbbl
ss
cmp
repnz
jge
fildll
lret
jmp
xor
xor
fnstsw
sbb
andb
fiaddl
xchg
xlat
insb
xlat
sbb
xchg
sbb
decl
dec
xor
xchg
pop
mov
pusha
std
push
add
mov
xchg
mov
lret
push
pop
fdivrs
jg
xchg
imull
aad
sbb
xchg
push
pop
jns
dec
sbb
sbb
movsb
mov
repz
ror
sub
xor
adc
add
popa
push
inc
adc
enter
aas
push
dec
and
add
adc
push
mov
adc
or
icebp
sub
pop
add
and
mov
sbb
scas
xor
push
ljmp
adc
loop
adc
dec
into
mov
inc
shr
sbb
idivb
sarl
in
dec
xchg
enter
mov
mov
pop
mov
inc
pop
rorb
hlt
push
cwtl
mov
pop
addl
xor
pop
sbb
fdivrs
inc
sub
js
shrb
jmp
cmp
push
dec
loop
dec
inc
inc
fdivrs
mov
adc
or
mov
push
lock
adc
or
mov
dec
xchg
sahf
test
sub
sbb
lret
loopne
xchg
movsl
add
add
xchg
mov
pusha
call
sarb
and
push
mov
xor
pop
fdivrs
rolb
add
adc
dec
mov
es
call
or
mov
push
mov
imul
pop
icebp
push
sub
xchg
sahf
or
mov
pusha
daa
push
sub
jne
notb
insl
xchg
xchg
pop
cmp
jno
xchg
push
or
dec
and
mov
and
add
sub
inc
loop
dec
dec
hlt
je
jb
xchg
mov
adc
mov
call
inc
ret
pop
int3
bnd
movsl
or
pop
in
mov
mov
sbb
mov
jnp
xchg
cmpsl
rorb
add
xchg
and
in
mov
mov
shll
adc
xchg
js
ret
push
or
enter
sti
sub
add
rcrb
dec
xchg
lret
push
jle
movsl
or
loopne
pop
mov
adc
adc
popa
sub
lods
leave
sub
ss
inc
faddl
adc
in
shlb
clc
insl
stos
imul
mov
call
lods
mov
or
outsb
hlt
ror
adcb
dec
inc
and
mov
xchg
push
jp
fcomps
je
cmp
mov
shrl
popa
sbb
loop
in
and
sarl
adc
push
xor
or
push
outsb
adc
jge
cmpsl
lods
sbb
dec
push
pop
or
test
out
or
mov
call
dec
pop
sbb
inc
and
mov
into
movsb
mov
repz
fdivrl
cmp
ds
add
jno
adc
jmp
sbb
data16
pop
and
adc
pop
add
pop
cmp
mov
add
mov
pop
cmc
jmp
push
pop
sub
mov
push
jns
cs
push
jae
movsl
cmp
and
jne
cmpsb
xlat
fmuls
out
lods
lods
lret
ret
mov
cmp
push
cmc
cmp
sbb
mov
mov
pop
or
xor
or
sbb
push
mov
cmp
push
rcll
icebp
lret
fwait
cmp
sahf
dec
mov
aas
sbb
aad
sbb
imul
dec
or
and
add
mov
mov
movl
loop
sbbl
call
pop
sbb
jnp
es
pop
shl
sbb
test
sub
lcall
mov
cs
xchg
es
pop
mov
into
add
xchg
ret
jb
xor
mov
or
mov
add
and
or
add
mov
add
data16
and
hlt
stc
icebp
repnz
push
sbb
inc
push
pop
sbbl
mov
mov
pop
scas
xchg
mov
loopne
add
sub
test
push
call
xor
mov
int3
andb
and
sbb
mov
mov
js
stos
or
or
dec
mov
adc
mov
outsb
inc
out
out
js
and
sbb
and
mov
add
lds
ja
or
cs
mov
push
adc
jb
pop
mov
inc
xor
or
xor
inc
adc
inc
xchg
iret
push
push
or
pop
push
sbb
call
adc
int
out
insb
je
sbb
push
push
xor
rorb
lcall
outsl
adc
pop
cmp
lods
loopne
daa
push
fadd
ds
inc
clc
sti
mov
push
xchg
sub
gs
movsb
in
sbb
mov
mov
xor
int
mov
repnz
sbb
cs
push
mov
icebp
cmpl
orb
fisubrs
sub
repnz
daa
mov
cmp
and
adc
mov
rcll
or
fistpll
mov
in
cmpsb
mov
pop
push
int
pop
jmp
xchg
pusha
lret
xor
mov
push
sub
mov
orl
push
mov
cmp
scas
jo
and
aas
ret
mov
das
insl
add
ds
and
test
fadd
and
and
mov
push
pop
adc
incl
push
push
dec
out
push
mov
adc
mov
jle
shlb
push
pop
ficoms
aaa
inc
mov
pop
out
pop
xchg
add
pop
test
movb
add
mov
cmpsb
cmpsb
xor
push
fisubl
pop
dec
mov
es
pop
sub
xchg
push
cmp
or
push
push
aas
or
lock
mov
or
xchg
dec
loopne
mov
or
mov
clc
adc
add
cmp
inc
mov
mov
icebp
push
add
push
xchg
adc
lcall
push
pop
shlb
loopne
jnp
push
fcomps
and
adc
add
inc
xor
jo
mov
lcall
ljmp
call
cltd
cwtl
or
out
adc
pop
push
rcll
mov
sub
push
mov
call
mov
addl
mov
js
test
xlat
cmp
orl
and
or
aam
shrl
repz
adc
call
sub
stos
dec
mov
arpl
mov
or
ds
or
lret
mov
mov
and
mov
out
insb
jecxz
dec
mov
pop
loop
addl
or
out
add
ror
adc
add
dec
call
std
jg
jg
mov
pushl
adc
mov
pop
pop
ret
cmpw
add
jne
mov
sbb
and
fildll
sbb
or
push
jbe
xor
cmp
mov
xchg
shll
into
ret
push
push
sti
das
rcrb
lea
push
call
push
sbb
mov
fldcw
call
cmp
test
jne
push
outsl
mov
cltd
pop
jmp
push
aaa
and
test
jne
adc
out
popa
push
movsb
jmp
adc
xor
add
or
mov
and
ljmp
push
incb
je
or
push
lock
or
add
mov
sbb
mov
or
mov
out
sti
imul
hlt
or
push
push
sti
pop
and
xchg
loopne
push
cmp
ret
sbb
adc
dec
repz
mov
xor
mov
or
enter
mov
pop
mov
or
mov
or
mov
je
push
inc
xchg
add
shr
push
pop
push
push
sub
rorl
jae
pop
add
xor
or
outsb
push
dec
push
popa
mov
or
jmp
mov
mov
or
dec
aam
push
ret
mov
sub
pop
jno
push
cltd
aam
inc
cmp
jmp
out
sbb
push
and
mov
jg
test
mov
add
loopne
adc
adc
jne
inc
adc
and
movl
pop
stos
inc
cltd
icebp
pop
outsb
out
cmp
out
ret
or
cwtl
mov
push
fildl
inc
ss
or
bound
and
jo
xchg
mov
mov
idivl
jnp
ret
mov
out
clc
popa
cmp
ror
cmpsb
notb
enter
testl
mov
or
pop
sti
mov
jmp
mov
leave
ds
insl
repz
jmp
dec
test
xor
cmp
jne
add
lret
cmp
add
add
cmp
sahf
std
push
in
push
pop
dec
mov
fimull
aas
mov
sub
test
ja
pop
nop
mov
scas
pop
int
cmp
or
mov
sub
test
js
pusha
pop
lahf
scas
pusha
inc
mov
pop
jne
testl
jae
pop
mov
mov
cld
pop
cmp
pop
jae
push
jb
rcrl
pop
pop
je
aad
push
push
shr
mov
push
fsts
pop
xchg
cld
pop
cmp
dec
xor
cvttps2pi
cmp
jne
lods
pop
mov
cli
sbb
sbb
fldl
adc
jne
jb
cmpl
lock
inc
mov
cmp
je
push
pop
pop
jmp
xlat
cmpb
movsb
pop
pop
mov
stos
scas
int3
adc
mov
xor
pushl
fmuls
je
xor
loopne
in
repnz
psraw
and
add
and
add
lods
jl
shrl
leave
xlat
pop
pop
mov
int
mov
rcl
mov
mov
ja
mov
or
jnp
push
push
mov
jl
pop
mov
std
sub
fiaddl
call
pushl
outsb
or
xorl
push
push
in
cmp
pop
je
xor
and
mov
adc
cmp
icebp
shll
sbb
aas
sti
mov
jg
daa
push
mov
cmp
push
addr16
mov
inc
mov
leave
adc
add
mov
add
add
dec
push
add
es
cmp
add
xlat
jno
push
orl
push
add
aaa
sar
inc
inc
cmp
jbe
sbb
out
fstl
cmp
push
mov
xor
enter
inc
lock
sarl
test
call
fldpi
add
dec
xor
ror
jle
cmp
xor
sbb
push
jg
maskmovq
testl
xor
lahf
mov
mov
inc
mov
cmp
cmp
in
stos
andb
lea
push
lea
pop
sti
gs
push
adc
inc
pop
push
pop
cmpsb
imul
or
inc
adcb
mov
dec
ret
push
mov
push
push
sub
insb
cli
es
lods
push
pop
add
push
push
push
jecxz
lret
cmp
fsubrs
or
add
cmp
jb
imul
pop
cmp
jge
cmp
jae
xor
add
shll
or
loope
test
push
jne
push
jmp
mov
push
or
inc
jmp
xor
mov
mov
mov
mov
push
stc
or
xor
inc
dec
mov
cmp
jge
imul
dec
or
jle
andl
cmp
pop
sbb
loop
inc
add
cmp
fs
movl
mov
push
and
mov
dec
cmp
xchg
lret
push
test
cmp
sbb
push
cmp
xchg
pop
fldt
jbe
fs
pop
mov
jmp
or
push
leave
push
pop
inc
clc
push
jl
jno
sub
lcall
leave
ret
cmp
inc
add
mov
lock
test
push
push
cmp
ja
test
mov
fidivl
mov
and
xor
adc
xchg
rorl
add
add
jmp
push
pop
push
fucomip
pop
inc
bound
cmc
pop
mov
sub
ljmp
mov
cmp
inc
repz
add
fwait
dec
cmp
jp
rcr
dec
rcrl
push
jne
push
inc
incl
mov
push
loop
adc
mov
inc
popa
push
inc
orb
xlat
aad
das
mov
pop
cmp
push
pop
je
push
push
push
addb
dec
push
add
push
add
cmp
jne
lcall
aam
pop
pop
mov
push
addb
pop
pop
outsb
mov
jne
dec
dec
adc
pop
mov
push
dec
cmp
push
loop
mov
movl
outsb
out
sbb
sub
adc
adc
mov
pop
lock
insb
rolb
cmp
pop
test
je
rorb
sbb
insb
mov
xchg
ret
push
inc
xchg
adc
ss
mov
clc
inc
incl
mov
mov
mov
push
jne
cmp
je
or
fcoms
cmpsb
fbstp
xchg
add
inc
fs
lcall
sub
push
cli
pop
sarl
sub
dec
jmp
xor
cltd
sub
dec
orl
inc
adc
add
mov
pop
je
pop
es
fwait
jle
add
int3
je
fadds
pusha
pusha
out
jmp
push
mov
loope
jmp
add
sbb
loopne
or
push
inc
or
dec
je
loop
cmp
addb
or
mov
pop
jp
into
inc
add
inc
mov
inc
jmp
sbb
popf
inc
add
adc
push
sub
or
andl
add
pop
cmpl
in
or
xor
mov
push
push
xor
lods
inc
mov
and
add
mov
imul
lea
mov
dec
jo
cmp
cld
hlt
jnp
das
mov
cmp
out
lea
cmp
jb
loope
arpl
mov
sub
push
push
inc
mov
mov
add
push
popl
lcall
pop
adc
pop
push
push
test
pop
test
aaa
inc
test
push
pop
jne
call
stos
sbb
pusha
and
push
pop
jmp
jge
loopne
scas
pop
pushf
clc
js
mov
mov
jnp
add
stos
jle
and
leave
cmp
je,pn
aaa
jnp
fildl
lds
sbb
or
sub
push
jb
loope
clc
inc
inc
push
mov
je
cmp
fmulp
cmp
jl
arpl
cld
and
testl
sbb
mov
cmp
mov
clc
ss
lcall
push
mov
jmp
cmp
je,pt
andb
enter
pop
or
test
gs
mov
clc
sti
or
lock
iret
ja
addr16
test
push
and
les
sub
push
fadds
out
popl
push
pop
push
xor
adc
mov
push
adcb
mov
or
add
or
or
or
int
mov
push
and
xor
mov
push
dec
inc
or
loopne
adc
xchg
jp
into
mov
mov
cmp
or
cmp
js
adc
pop
mov
mov
or
pusha
add
push
sbbl
jbe
loopne
enter
add
jo
lea
loopne
lock
and
adc
mov
pushf
cli
cmp
jb
loopne
jle
popf
jmp
fcomip
dec
mov
and
add
fs
push
mov
pop
fimull
loopne
ljmp
cs
jne
cmp
clc
push
fs
cmp
xor
clc
fistpl
out
shl
add
push
pusha
mov
mov
lock
mov
push
js
pop
in
mov
incl
hlt
inc
adcl
rorl
push
repz
mov
in
or
add
jmp
xchg
cmpl
es
pop
or
test
cmp
cmc
push
stos
adc
inc
imul
inc
sarb
push
aaa
jbe
jae
xor
ds
inc
jmp
adc
cmpsl
and
jne
or
je
and
into
mov
movl
jl
loop
jmp
scas
pusha
repnz
sbb
inc
or
mov
mov
cmp
add
inc
mov
adc
outsl
push
ljmp
inc
sub
cmpsb
clc
or
mov
cmp
pop
jle
loop
test
push
push
pop
mov
add
mov
pop
jb
adc
jl
sbb
push
dec
daa
insb
loope
mov
lods
insb
xor
xor
fdivs
js
clc
push
outsb
lock
clc
jns
mov
pushf
mov
and
cmp
adc
cmp
std
xlat
dec
pusha
fsts
push
cmp
xor
mov
movsbl
sub
loope
sbb
lret
nop
pop
imul
jecxz
cld
jbe
pop
int3
stc
and
cld
int3
add
cld
hlt
lods
nop
stos
xchg
xor
sbb
sub
mov
in
and
sti
and
cli
push
rcll
sub
push
push
push
dec
orl
push
imul
js
sub
sbb
stos
adc
jnp
ja
jecxz
jo
movl
mov
xchg
sbb
xchg
pushl
push
outsl
rorb
mov
cmc
sub
cld
push
movb
inc
or
add
push
ss
jns
cld
mov
xor
dec
push
test
inc
lcall
subl
cld
daa
cwtl
mov
dec
jno
clc
subb
add
and
and
sarb
push
push
push
fs
pop
push
roll
lods
dec
aaa
test
into
incl
push
add
sub
fsubrs
std
movsl
ds
sub
pop
mov
sbb
xor
cmp
repnz
cmp
sbb
add
nop
add
pop
cmp
dec
pop
cmp
sbb
jp
cltd
jle
aam
mov
rcrb
test
cmp
mov
sub
pop
or
inc
jbe
ja
popf
insb
inc
idiv
pop
cmp
outsb
je
jg
nop
pop
aas
add
popa
inc
jle
loop
adc
shll
mov
pop
inc
or
or
inc
clc
or
call
jmp
fcoms
inc
les
push
mov
cld
pop
sbb
mov
ja
push
push
je
adc
out
cmp
and
mov
sti
fsubr
loop
clc
cmp
ret
push
mov
lcall
mov
aaa
add
pop
pop
inc
mov
das
lahf
pusha
pop
push
cmpsb
mov
fldenv
mov
mov
push
hlt
cwtl
je
mov
xchg
pop
iret
xchg
add
hlt
pop
pop
in
jbe
bound
push
add
cs
fmull
or
movsb
div
add
or
add
or
or
xchg
sbb
rorb
sub
xchg
iret
mov
jle
insb
jne
aad
mov
int3
push
push
js
bt
cmp
xchg
push
push
mov
and
mov
pop
dec
inc
dec
bound
insb
push
lea
loopne
or
js
and
push
cmpsb
lds
decl
and
and
out
shrb
dec
adc
rorb
jbe,pt
add
push
outsb
scas
sarb
xor
loopne
add
sbb
out
aam
sbb
jnp
push
mov
mul
xor
js
cmp
or
jp
mov
testb
jne
clc
outsb
insl
outsb
std
jbe
lea
call
push
push
and
lea
dec
xchg
adc
hlt
cmp
mov
and
in
add
cld
xor
inc
jg
mov
jne
cmpb
daa
cmpsb
or
sub
add
out
jmp
repz
add
adc
cmpl
int3
pop
out
and
in
pop
je
mov
dec
out
push
push
xor
jl
or
test
push
cmp
je
push
cmp
test
mov
aaa
mov
lret
adc
dec
movsb
xlat
jmp
mov
jnp
mov
insl
xlat
fisttpl
lret
mov
adc
test
ss
lods
sbb
push
push
mov
cmp
and
test
into
jno
sti
je
not
mov
mov
sarl
dec
or
lock
ror
sub
cwtl
outsl
add
fistpl
sbb
cmp
mov
jecxz
loope
or
or
mov
test
sti
adc
xchg
lock
aad
sbb
mov
or
adcl
cmp
inc
pop
and
ljmp
int
jo
sub
mov
lods
lods
add
js
out
push
lea
test
cmp
repnz
pop
hlt
push
loop
or
cmp
jl
rclb
and
loopne
test
sbb
mov
rorb
jle
add
push
call
fwait
add
pop
icebp
andl
pushf
cmp
inc
inc
enter
pop
ret
or
mov
push
aas
out
pop
loopne
ja
adc
xor
push
adc
hlt
or
clc
or
cmp
mov
scas
mov
push
in
inc
call
xor
inc
lcall
pop
cmp
je
mov
jmp
push
xor
cmp
pop
xor
xor
add
adc
pop
xor
push
push
sub
jecxz
out
pop
jne
adc
rcl
adc
jne
xchg
imul
and
ds
leave
popf
sub
out
loopne
or
push
mov
jne
inc
adc
push
fxch
jecxz
adc
ss
pop
push
xchg
enter
add
or
js
rolb
rcrb
test
fsubrs
lea
mov
inc
fstps
sti
je
mov
xchg
pop
jo
inc
insb
mov
jle
gs
test
daa
mov
fmull
cmp
outsb
test
mov
push
cs
insl
jo
jbe
push
gs
adc
jae
sub
rcr
nop
pop
addb
pop
cmp
jns
inc
mov
xor
jecxz
mov
scas
and
test
add
mov
sbb
mov
pop
or
mov
sbb
in
ret
outsb
sub
push
enter
loopne
pop
jnp
pushf
shr
xor
leave
cmp
loope
incl
stc
sub
in
push
adc
push
pop
xchg
xor
rol
add
cmp
sbb
and
dec
sbb
bound
ret
scas
ss
push
pop
rorb
ret
and
subb
jno
je
jl
add
jb
in
fildll
fimuls
add
js
repz
jno
jge
xor
pop
jae
mov
sub
or
xchg
cmp
jb
aam
sub
adcl
inc
adc
mov
jg
je
sar
push
lea
pop
xor
out
dec
pop
push
push
rolb
xor
sbb
push
xor
xchg
xchg
dec
add
mov
orl
call
es
andb
xchg
xchg
push
lret
dec
pop
xchg
insl
bsr
call
aaa
ljmp
dec
sti
lea
rcll
notl
ljmp
mov
jb
je
sub
insb
fistps
ss
pop
je
mov
add
push
cmp
lock
popa
jo
popa
fcmovnu
pop
add
dec
dec
enter
adc
push
or
aaa
ret
jg
xor
cmpsb
push
lea
jbe
mov
or
stc
les
sbb
fldcw
xchg
insb
shrb
jb
das
pop
xor
xchg
notb
out
mov
mov
in
or
clc
jg
mov
adc
pop
int3
lods
xor
scas
cs
lcall
sbb
or
push
not
addl
xchg
pop
lock
call
cwtl
cmp
jo
out
mov
jge
out
pop
dec
je
pop
int3
or
cmp
scas
push
aam
xor
aaa
loope
push
add
icebp
imul
add
fwait
orb
mov
jmp
add
mov
jae
inc
pusha
ret
mov
aam
cmpsl
aam
and
rolb
dec
or
lock
mov
sti
or
je
mov
sub
je
push
or
testl
clc
push
lock
push
cmpsb
adc
popa
sub
jp
push
cmp
or
pusha
pushl
mov
dec
into
sbb
fsubrs
ret
jmp
xchg
push
je
or
xor
jle
je
dec
je
xchg
push
mov
aaa
jmp
xchg
aam
scas
je
aam
push
pop
rcl
jmp
fmuls
push
in
ja
push
rorl
pop
xchg
and
cmp
jne
push
aam
add
push
in
addb
push
push
scas
and
int
or
or
jne
mov
xorb
jnp
mov
jne,pn
sbb
inc
imul
dec
sub
adc
popa
mov
sbb
jge
ret
pop
add
pop
mov
fsubr
fcmovnbe
and
push
adc
ja
popa
rcrl
mov
pop
sbb
push
call
jmp
mov
jne
or
mov
adc
ss
push
adc
fs
xchg
mov
lock
popa
mov
xchg
movsb
lds
or
mov
scas
mov
fmull
push
arpl
push
daa
scas
popa
sbb
pushf
js
icebp
int3
notl
clc
inc
adc
mov
add
pop
mov
or
daa
aaa
mov
xorb
pushf
call
cmp
das
xchg
shrl
sti
enter
pop
in
in
jge
pop
pop
inc
ljmp
or
fisubrl
in
ret
and
hlt
punpckldq
unpckhps
mov
pop
lods
pop
jnp
mov
cmpsl
in
push
clc
repnz
test
pusha
dec
adc
int3
mov
and
add
fdivl
cmp
sub
lret
dec
bsr
mov
sahf
cmp
enter
cmp
sbb
add
mov
or
jno
hlt
add
jb
push
xchg
popa
imul
and
das
or
add
or
mov
add
or
movsb
js
inc
sbb
ret
je
sahf
je
jg
mov
lea
push
push
or
add
sbb
ret
testb
jg
insb
rcrb
fnstsw
subl
inc
adc
ret
subl
xor
fs
cli
movsb
bnd
or
je
cmp
adc
jne
inc
cmp
clc
shr
mov
adc
inc
inc
add
into
sbb
adc
out
jl
mov
nop
ja
push
push
pop
mov
dec
rolb
cmp
mov
sub
mov
jmp
mov
cmp
or
jne
cmpsb
std
lcall
mov
inc
inc
cmp
je
and
faddl
mov
and
pushf
jmp
jecxz
cmp
lock
push
push
dec
pop
adc
lret
jle
addr16
cwtl
adc
or
adc
inc
inc
xchg
jp
or
aad
insl
clc
ficompl
push
push
jmp
mov
rcll
test
jne
mov
mov
inc
inc
adc
shlb
dec
sar
dec
outsb
out
jns
mov
inc
cmp
bound
pop
sbbl
or
movsb
or
loopne
pop
push
push
mov
add
leavew
int
mov
and
mov
lea
mov
mov
mov
pushl
mov
incl
add
xorl
test
mov
add
test
inc
dec
sub
push
cmp
add
lds
lret
xor
cmp
sbb
or
cltd
in
ret
sbb
xor
mov
mov
jnp
add
or
jne
clc
call
pop
call
pop
adc
push
aam
sub
call
or
arpl
mov
popf
mov
dec
insb
mov
or
dec
rorb
test
ss
cmp
nop
test
jne
ljmp
push
add
cwtl
dec
jl
into
movsb
mov
aas
or
ljmp
mov
add
push
add
mov
add
lea
and
insb
pop
ret
cli
add
aad
movzbl
out
sub
aaa
adc
push
adc
push
add
test
add
cmp
add
and
outsl
loopne
sahf
stc
jbe
subb
and
add
movsl
cmp
orl
mov
ret
sub
clc
or
and
mov
or
jmp
cmpsl
sub
adc
or
xlat
inc
cmp
fstpl
scas
inc
push
xchg
pop
sbb
push
mov
add
or
lea
stos
add
pushl
test
or
mov
inc
dec
jne
lea
pop
std
or
inc
dec
sub
fs
sbb
cwtl
loopne
push
adc
push
push
add
jbe
loope
loopne
lods
mov
pop
mov
cwtl
jl
cmp
jb
inc
mov
movb
and
pop
mov
add
cmp
ja
femms
out
mov
xchg
or
pop
xor
mov
dec
ret
je
and
or
cwtl
popf
pop
clc
in
enter
push
outsl
stc
jp
outsb
fcoml
into
push
cmp
push
bound
idivl
inc
add
in
push
push
push
std
scas
adc
push
orb
mov
cmpsl
jmp
and
je
and
sub
push
outsb
or
test
mov
shr
lea
leave
scas
jb
mov
adc
push
lea
andl
ja
mov
and
jae
add
and
data16
cld
cmp
jb
mov
pop
xchg
pushf
daa
fnstenv
jle
xor
clc
mov
jae
jo
jg
jmp
ja
shll
add
shlb
cmp
lret
sub
in
fidivrs
push
jl
fadds
mov
inc
jae
mov
cli
and
push
push
or
iret
shrl
add
cmp
je
sti
bound
push
std
jne
inc
jmp
sub
mov
dec
cld
mov
idivb
jmp
ja
adc
pusha
int3
in
das
or
pop
addr16
inc
push
mov
das
repz
sub
fmul
in
das
aad
adc
jne
mov
inc
add
mov
test
and
shll
and
jo
out
lea
jle
int3
shlb
lock
out
std
mov
jbe
push
jmp
push
mov
int3
and
call
repnz
das
lock
push
in
rolb
cmp
out
stos
or
jnp
jae
jbe
iret
imulb
lock
iret
mov
test
mov
ds
inc
incl
leave
jmp
dec
in
leave
xor
sbb
and
lea
sub
inc
jo
push
fistpll
cmpb
or
lcall
sub
jne
inc
inc
inc
xorb
jg
js
sub
or
add
jb
mov
mov
movl
push
mov
idiv
ljmp
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
outsb
mov
mov
xchg
sbb
divb
sub
mov
pushl
xor
jo
mov
outsl
rorl
inc
dec
jne
mov
test
aam
in
or
jmp
cmp
scas
outsb
bound
push
mov
in
adc
rcll
dec
loopne
cmc
pop
mov
xchg
fcompl
pop
push
or
cmp
clc
push
mov
xchg
pop
and
pop
fadds
pop
push
mov
rep
andl
cld
and
jle
flds
test
dec
sbb
lcall
push
push
insb
inc
pusha
mov
mov
fmuls
call
out
add
add
sbb
loope
jbe
shll
push
or
loopw
xor
ljmp
add
int3
mov
inc
sub
mov
jmp
xor
dec
sbb
mov
inc
orb
mov
add
mov
aaa
inc
mov
incl
subb
sbb
daa
push
jg
jle
xor
jmp
mov
cmp
imul
add
les
mov
iret
faddp
out
mov
fistpl
add
loope
add
je
jne
add
push
pop
addr16
push
pop
in
add
lret
in
inc
fimuls
aam
aaa
pop
jmp
jae
loopne
or
stos
cmc
arpl
push
push
jno
xorl
pushf
xchg
jo
gs
decb
mov
daa
cmp
jmp
daa
stos
rorb
sub
push
arpl
sbb
adc
adc
mov
sbb
pop
pop
out
sub
pop
push
sti
jnp
or
mov
add
adcb
aaa
sub
rcrl
jbe
clc
jb
movsb
insl
stc
pop
jb
testl
sub
fcoms
or
cmovs
mov
adc
les
js
jecxz
sarl
sar
or
inc
jmp
jge
cmp
negl
enter
or
les
fimuls
fcoms
add
sub
and
shr
pop
sub
inc
add
add
xor
push
cwtl
outsl
in
lea
push
dec
add
movl
cmpsb
inc
add
mov
mov
push
cwtl
out
sahf
out
nop
mov
sahf
ljmp
inc
mov
mov
call
jns
in
lock
hlt
clc
fwait
shl
jns
cld
cld
lock
or
addr16
int
add
pop
xchg
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
adc
ret
out
push
neg
shl
add
xor
sub
push
inc
push
nop
push
xor
fisubs
mov
add
fstl
mov
add
test
out
push
add
nop
dec
dec
addr16
cmp
pop
add
ljmp
or
push
or
loop
sahf
out
and
xor
out
sahf
out
sbb
sbb
adc
out
sahf
adc
adc
or
xchg
out
or
ret
repz
push
push
movsb
test
pop
adc
and
test
push
push
jle
lds
test
add
or
mov
popa
adc
shr
cmp
jne
sub
sub
fcoml
dec
out
int
cmp
jne
mov
into
dec
pop
aaa
hlt
sbb
shl
cmpsb
ret
xchg
cmp
mov
adc
jnp
fsubrl
add
xor
lds
fcomps
mov
and
xor
mov
sarl
lds
outsl
les
je
es
and
cmp
pop
cmp
jne
sbb
icebp
unpckhps
mov
xor
and
testb
sbb
mov
lahf
das
adc
or
inc
sbb
sub
loopne
and
mov
mov
sbb
pop
fimull
jl
or
mov
jne
in
pushl
call
push
lea
pop
cmpl
jns
mov
cmp
push
sub
add
scas
jg
adc
loope
xchg
data16
imul
fldl
mov
andl
sbb
pop
cmpl
mov
das
cmpl
divl
adc
fdivs
cltd
dec
xor
cmp
or
xor
adcb
or
adc
incl
xor
xor
divl
mov
sub
and
sbb
inc
xor
out
dec
dec
nop
adcb
adc
addl
into
lcall
jle
sub
jle
add
add
mov
in
adc
in
jmp
xor
jmp
adc
pop
jp
jne
push
jne
aad
and
jg
push
push
add
inc
sbb
inc
mov
pop
ja
pop
call
push
and
imul
data16
movb
or
push
or
cli
cmp
add
pop
adc
ljmp
dec
or
loopne
scas
cmp
outsb
sub
add
shr
mov
imul
imul
add
push
out
int
dec
scas
adc
jne
sbb
mov
mov
pop
lret
mov
mov
or
mov
test
pop
je
cli
push
std
dec
inc
mov
aas
jbe
push
fs
pushl
mov
jle
or
push
and
lret
in
aas
clc
decl
not
and
decb
jne
add
sbb
sbb
dec
loopne
ror
mov
pushf
mov
add
data16
mov
hlt
mov
paddq
dec
push
or
or
mov
adc
les
jle
std
mov
push
push
pop
hlt
dec
jne
and
sti
add
fidivrl
dec
pop
cmp
jbe
mov
mov
imul
inc
xor
out
andb
cmp
into
shrb
dec
jno
cmp
mov
out
not
and
or
add
and
xor
sbb
add
xor
dec
cltd
imul
or
push
jecxz
mov
jmp
pushf
jge
xchg
cmp
test
rorl
out
pop
pop
or
or
adc
ud0
dec
paddd
mov
jge
js
mov
jle
xchg
cmpsl
push
out
add
pop
mov
jmp
dec
xchg
imul
push
mov
rorl
mov
mov
xor
inc
xchg
cmp
push
repz
flds
test
pusha
sbb
rcrl
sti
loope
add
scas
jp
push
call
aas
gs
or
sbb
andl
ret
sub
dec
inc
adc
inc
dec
mov
clc
pop
sub
add
and
xor
or
and
push
mov
push
mov
cld
mov
js
in
push
lea
mov
add
mulb
test
hlt
je
mov
insl
or
sbb
mov
das
mov
cmp
pop
sbb
push
and
jne
subb
das
ret
hlt
xchg
push
shrb
rcl
sub
xchg
ljmp
cmc
imul
negb
les
or
popa
clc
fwait
and
inc
adc
add
pop
push
sub
aam
lods
in
pop
jbe
jbe
int
jmp
orl
ds
push
push
cli
call
dec
cld
aad
ret
loopne
test
into
jo
fistl
or
ret
inc
movsb
stc
mov
imul
lret
cli
inc
clc
pop
mov
add
cmpsl
jne
add
sti
sahf
adc
or
adc
sbb
cmpb
cld
ja
pop
dec
inc
mov
or
inc
ss
clc
incl
test
dec
lea
fisttpll
lock
out
mov
sbb
call
jne
add
test
cli
xchg
push
fadds
mov
ficoms
dec
jb
adc
fs
inc
add
mov
jmp
mov
in
test
push
mov
jne
or
roll
aad
ljmp
jns
sub
or
test
sbbb
sbb
sub
test
lcall
add
repnz
push
mov
mov
and
sub
ja
and
mov
test
inc
jmp
sbb
mov
cmp
or
sar
dec
cmp
push
push
xchg
pop
fwait
add
pop
mov
inc
subl
cmpsl
xchg
stc
sbb
clc
mov
jb
es
add
cmp
mov
dec
or
imul
adc
and
into
add
push
jo
out
movsl
or
or
sar
dec
cmp
mov
cld
aad
in
jne
aaa
hlt
lea
clc
pop
jg
shll
sbbb
iret
repz
pop
push
pop
adc
pop
add
adc
mov
data16
and
jo
test
loopne
test
mov
jns
insb
xor
cmp
out
cld
mov
bound
inc
and
clc
jmp
cmp
das
or
mov
insb
pop
xor
push
sar
dec
xorl
push
jb
movsl
mov
add
cmp
pop
fisubs
cmp
dec
mov
in
cwtl
dec
je
push
mov
ret
fisttps
cltd
dec
push
inc
pop
sbb
fbstp
cmp
dec
adc
out
sbb
mov
adc
dec
lea
mov
popa
sub
jns
mov
dec
test
lods
pop
sahf
incb
bswap
mov
push
cmp
rdmsr
mov
jns
dec
inc
add
mov
int3
loopne
pusha
inc
mov
dec
jmp
hlt
pop
cmp
lock
push
dec
or
push
jge
aas
outsb
decb
or
shr
cmp
or
scas
pusha
or
or
cld
fldpi
adc
and
or
data16
ret
adc
fdivr
or
and
int3
mov
sbb
fdivrl
test
or
sub
cmpsb
mov
jb
or
arpl
outsb
lods
test
lret
js
jle
xor
imul
sub
jno
xchg
movsb
push
sbb
cmp
ficompl
pushl
mov
mov
cli
fidivs
mov
pusha
ret
mov
dec
pop
iret
jne
mov
insl
dec
mov
popf
test
jb
xchg
adc
stos
xlat
add
shr
dec
loopne
mov
into
jne
mov
push
pop
mov
leave
inc
test
inc
push
pushf
mov
sub
sub
cmp
pop
cmpsb
test
lock
je
leave
test
jge
iret
dec
fldcw
js
hlt
cmp
lret
pop
mov
hlt
sub
and
jne
in
in
or
sub
jae
in
jbe
mov
pop
loopne
negl
or
and
inc
clc
into
sub
jns
and
dec
jp
dec
loopne
cmpsl
movsl
das
inc
mov
or
inc
es
jge
or
ret
out
or
inc
call
or
inc
or
cmp
mov
mov
xor
mov
in
adc
stos
xchg
loopne
stos
and
test
or
jle
jp
jns
jne,pt
cmp
ret
cmp
add
pop
xchg
sbb
add
push
inc
rol
jne
repz
jmp
mov
xchg
insb
adc
negb
push
push
push
push
push
push
lock
jecxz
adc
les
mov
mov
fcom
push
xor
jo
pop
je
xchg
nop
adc
jbe
lea
out
cmp
mov
cmpsb
jb
addb
or
and
lcall
in
mov
jmp
fs
gs
jge
jo
les
xlat
testl
sarb
bound
enter
sbb
je
adc
adc
dec
hlt
aad
pop
mov
add
fcmovu
dec
and
pushl
add
sub
arpl
sbb
loop
mov
in
add
call
pop
lock
sbb
sbb
push
inc
shl
cmc
cld
cmp
xor
out
dec
jp
pop
push
adc
icebp
orl
dec
lret
push
test
aad
mov
outsb
add
loope
ljmp
pop
sbb
and
adc
test
cmp
mov
sub
xlat
es
sub
and
adc
cltd
test
fcmovne
bound
gs
or
xchg
enter
xchg
mov
pop
push
push
add
push
sub
mov
in
push
add
stc
outsb
cmc
or
loopne
jb
or
add
shrl
jmp
enter
fisttpl
mov
jo
push
rep
mov
dec
ljmp
mov
in
mov
add
icebp
fisttps
xchg
sarb
out
adc
or
cmp
push
push
es
int
pop
mov
lret
loopne
sbb
jae
or
sbb
jne
repz
popf
mov
push
xchg
loopne
lock
shll
add
pusha
ret
adc
push
mov
inc
pop
call
xorl
ret
xor
mov
push
pusha
icebp
inc
push
push
nop
ret
xchg
push
sysret
lock
dec
jmp
loopne
mov
mov
add
jle
sbb
loope
adc
dec
cmp
pop
inc
cmp
jp
leave
cmp
sub
dec
cmp
jge
inc
pop
sahf
test
mov
add
mov
and
add
or
jne
mov
and
and
xor
jo
cs
cli
add
add
lds
mov
rorl
add
jg
lods
pop
div
mov
aas
or
pushl
or
adc
sbb
test
push
icebp
outsb
or
inc
xchg
fdivp
incb
fdiv
mov
fnsave
je
cltd
loopne
jns
loop
lock
jo
adc
xchg
loop
testl
cmp
cltd
sbb
dec
adc
rcrb
sbb
pop
jbe
inc
dec
lcall
push
inc
stc
inc
hlt
cmp
je
movl
shr
xorl
mov
mov
xor
add
mov
push
adc
inc
and
mulb
mov
ret
adc
das
push
dec
and
pop
xor
adc
push
sbb
cmp
shl
push
mov
push
int3
push
fsubr
test
pop
and
test
add
and
jno
and
push
xchg
insl
push
lock
rorb
sub
hlt
je
mov
in
ret
push
sub
idiv
mov
jmp
mov
pop
mov
sub
cmp
je
movl
or
call
fcoms
outsl
xchg
mov
mov
hlt
jecxz
jmp
cmp
push
push
add
push
inc
and
testl
push
ficomps
mulb
jl
insb
mov
push
ljmp
jecxz
pop
xchg
adc
std
dec
movsl
dec
divl
push
or
inc
sbb
movl
loopne
or
int
inc
cmp
or
test
imul
cmp
sub
movl
pop
sar
es
add
mov
stos
fucom
aad
ret
clc
xor
push
out
add
in
iret
add
add
add
movsl
xor
gs
sbb
adc
xor
or
stos
add
jmp
adc
jg
xor
inc
pop
aad
and
imul
push
in
jno
adc
push
aaa
sbb
rcll
jne
pusha
jo
cmp
pop
sbb
xchg
xchg
shrl
inc
cmp
cltd
shll
aas
cmp
mov
and
sub
xor
adc
in
add
add
int
ret
inc
rol
aam
ja
mov
mov
push
adcb
xor
adc
in
push
and
xchg
jecxz
add
cmp
ja
push
dec
cmp
lea
mov
pop
aam
add
push
call
add
push
jmp
aas
movsb
outsl
or
or
enter
test
test
add
and
push
push
rcl
lock
xor
cld
push
test
rcr
pop
test
je
gs
mov
jmp
sbb
dec
fisttpll
sar
mov
pop
or
xchg
sub
pop
icebp
jmp
jbe
push
pop
xor
div
mov
sub
and
ljmp
scas
clc
icebp
mov
push
insb
mov
incb
push
mov
dec
xchg
in
xchg
cs
aad
aad
mov
fldl
sarl
fbstp
or
and
push
mov
ret
loopne
xor
sbb
jo
inc
add
jb,pt
adc
loopne
stc
test
push
mov
adc
clc
pop
xor
dec
je
inc
mov
sbb
jo
cmp
pop
jecxz
xchg
cld
outsb
leave
pop
jmp
cmp
pop
jo
and
jmp
mov
push
inc
or
lods
faddp
dec
pop
je
cmp
push
je
pop
pop
cld
ljmp
rsqrtps
inc
daa
mov
dec
into
and
popa
in
cli
pop
out
lahf
pushf
jnp
lods
rorb
out
and
jne
es
hlt
add
inc
jns
fiaddl
cltd
cmpsl
and
loopne
adc
outsl
ljmp
out
pop
add
in
add
xchg
push
xchg
movsb
imul
rcrb
jbe
lds
cld
test
push
sub
pop
sarb
orl
jmp
dec
jno
jmp
push
nop
or
adc
lds
push
push
inc
shlb
pop
sbb
aad
jbe
push
sbb
and
cmpl
loop
or
pop
or
sarl
aad
lock
out
cmpsb
movdqa
push
dec
adc
push
and
jg
out
mov
jg
jg
outsl
inc
or
idivl
lahf
push
jbe
jle
xor
jg
jg
sbb
lahf
ja
jg
lea
jbe
cmp
jb
js
dec
or
ljmp
enter
popf
xor
loope,pn
or
sub
jne
out
nop
or
call
dec
push
es
mov
cmp
je
sub
and
out
out
incb
lcall
ja
incb
shrl
rorl
sub
rorl
fdiv
clc
in
lock
rep
push
jmp
or
aaa
jbe
jne
test
adc
aaa
in
lcall
pop
mov
push
push
ret
mov
insl
and
ljmp
pop
add
push
inc
push
adc
add
push
mov
xor
lods
dec
dec
ficoml
or
fldl
dec
adc
ss
mov
xor
cmp
cmp
cmp
dec
fwait
inc
sbb
inc
inc
setae
push
push
in
in
pop
add
in
in
insb
jo
divl
in
js
inc
sbb
and
mov
test
xor
xor
pushf
mov
jno
pop
sub
xor
jmp
push
mov
cwtl
in
add
fs
mov
mov
jg
pop
or
repnz
repnz
cs
leave
in
pop
adc
icebp
mov
jb
test
mov
add
call
cli
testb
jl
add
stos
add
jmp
sub
sub
push
dec
repz
xor
mov
rclb
pop
add
mov
xchg
or
lea
xchg
in
jne
pop
fsincos
in
add
and
add
or
clc
lea
nop
vmread
pop
xchg
pavgb
pop
or
in
movsl
nop
cmpsl
or
in
or
iret
repz
mov
ret
cwtl
pop
out
sub
fcoms
jmp
or
add
sbb
pusha
cmpl
xor
jns
lods
push
test
nop
push
xchg
push
mov
outsb
pop
or
jns
add
repz
repz
cmp
dec
push
pop
add
or
fs
sahf
out
xchg
nop
push
cwtl
test
cmp
cld
fiadds
push
mov
pusha
mov
mov
addr16
xor
push
sub
dec
and
pop
imul
lea
ljmp
loopne
incl
jg
jb
sub
cmp
add
cmp
add
mov
cmpsl
jmp
sbb
push
inc
or
ljmp
ss
add
add
add
cmp
add
ljmp
or
hlt
add
mov
pop
and
loopne
aas
xor
cld
mov
xor
aas
xchg
push
sub
and
add
jp
pop
call
push
orl
adc
jo
push
lea
mov
xchg
sar
pop
jl
sub
push
cmp
and
sub
adc
popl
into
pop
shlb
inc
mov
adc
inc
enter
cmpl
mov
cmpl
or
cli
push
or
push
or
mov
ja
rorl
mov
mov
inc
inc
xor
push
push
push
pop
pop
pop
inc
add
pop
mov
daa
adc
or
lea
pusha
enter
or
push
jmp
inc
adc
and
adc
pusha
jo
ja
mov
lods
dec
inc
xor
and
pop
call
ss
je
sub
jno
jns
pop
cmp
mov
dec
inc
add
ret
cmpsb
and
mov
sbb
rep
out
movsl
jmp
lock
dec
or
sub
push
cld
push
xchg
jmp
adc
jg
lea
divl
sbbb
mov
sbbb
jmp
push
rcrl
int3
test
sub
or
or
adc
or
mov
movb
pop
jmp
xor
push
clc
aad
ljmp
jo
add
rcrl
add
push
add
sub
or
cmp
pop
mov
pop
in
in
push
and
cmpb
inc
rolb
pop
stos
jl
adc
outsl
sub
adc
rcrl
or
pop
jmp
sub
add
jecxz
xchg
shrl
pop
mov
and
jge
push
pop
call
mov
stos
les
xor
cltd
sbb
clc
cmp
pop
add
push
or
inc
loope
dec
mov
sub
fisubrs
ss
sub
push
loopne
aam
test
push
outsb
test
rol
or
pop
xor
cmpsl
in
pop
cmpl
lret
pop
lahf
pushaw
dec
cli
dec
fs
inc
movl
insl
pushf
fdivrs
cmpsl
incb
idivl
cmp
ss
push
lods
and
push
mov
je
int3
push
sbb
add
mov
int3
adc
add
mov
fmuls
xchg
mov
push
popf
stos
push
mov
xchg
sbb
mov
push
inc
adc
cmp
pop
in
mov
loopne
pop
lcall
aas
sbb
dec
pop
je
push
fisubs
or
je
inc
push
fstps
rorb
cmp
ret
add
add
dec
jno
es
sbb
xor
sub
out
add
stos
adc
push
push
callw
xchg
insl
sub
or
xchg
jo
cltd
xchg
in
inc
inc
ljmp
mov
xor
mov
sub
je
push
popf
mov
mov
call
jle
icebp
and
data16
pop
testl
out
movsl
pop
pop
or
adc
int3
xor
sbb
adc
xorb
mov
loopne
adc
add
rdmsr
dec
cmpsl
lds
xor
cmp
xchg
enter
dec
je
fimuls
jb
mov
lcall
cmp
movb
jmp
fdivl
adc
aad
lods
mov
mov
in
daa
jge
sub
imul
pop
sub
mov
jge
data16
outsb
data16
add
and
mov
jmp
mov
ss
mov
pop
push
in
push
les
loope
inc
fwait
sbb
xchg
fnsave
add
inc
push
std
and
arpl
cmp
jne
addl
jmp
ljmp
sub
dec
or
in
dec
mov
inc
adc
aaa
mov
mov
xor
dec
or
jnp
xor
pop
cmp
je
cmp
and
jecxz
xchg
adc
insb
adc
pop
testb
sbb
add
lds
add
nop
cs
adc
idivb
sahf
or
sbb
xor
sbb
out
test
je
mov
sub
cmp
sub
add
jg
cwtl
cld
ror
dec
adc
sbb
mov
rorb
jb
sahf
cmp
jbe
sbb
xchg
xor
dec
pop
adc
adc
fwait
mov
add
jmp
imul
add
rcrl
push
inc
cld
out
mov
jne
test
sub
dec
and
jp
add
lds
clc
adc
les
jne
jbe
cmp
mov
adc
cld
inc
sahf
shrb
add
roll
mov
test
push
mov
test
jge
jmp
inc
push
les
pusha
inc
ret
push
push
adc
push
cld
inc
sbb
sbb
add
lea
pop
xchg
or
aas
push
add
or
je
xor
clc
inc
mov
mov
cmpsb
es
lret
pushl
xor
and
jb
cmp
ja
add
cmp
or
mov
cmp
jne
xchg
xor
mov
call
add
fnstenv
xchg
pop
aaa
add
adc
push
sub
inc
cmp
scas
adc
mov
push
rcr
je
mov
mull
lsl
popf
jns
shr
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
ss
pop
jne
div
pop
dec
adc
inc
mul
idiv
fstpl
push
cmp
or
cmp
or
xor
and
or
fistl
or
fcmovb
sbb
add
xchg
push
lret
pop
outsb
add
leave
and
push
xor
or
push
fdivrs
mul
inc
push
or
add
and
mov
add
pop
jge
lea
pop
ret
mov
inc
pop
and
je
fs
dec
push
das
push
adc
iret
test
push
in
or
or
push
add
jecxz
push
adc
or
lret
movb
stos
and
xor
movsb
iret
xor
mov
and
or
push
sub
or
or
testb
inc
adc
fidivl
in
out
fs
fs
repnz
and
add
repz
push
aam
xchg
pop
addr16
rolb
or
aaa
jmp
or
add
cld
fsubl
pop
cs
out
cmp
dec
push
cmp
jl
ja
inc
dec
pop
ja
or
fbstp
or
and
divb
jl
sub
xor
add
subb
jbe
fdivrl
or
incl
inc
js
je
jb
arpl
jae
insl
jae
push
sti
ljmp
gs
insb
add
outsb
je
insl
and
cmp
mov
pushf
push
dec
dec
push
push
and
add
dec
inc
add
inc
and
add
mov
xor
inc
outsb
and
jo
divb
outsl
push
push
popa
fs
je,pn
gs
pop
mov
insl
jo
and
insb
outsl
es
push
mov
bound
jb
and
xor
insb
jns
or
int3
int
push
insb
xorb
outsb
je
arpl
daa
mov
jne
pop
xor
and
mov
test
adc
inc
or
dec
pop
aas
xor
jo
outsl
jne
dec
mov
rolb
mov
xchg
insl
les
out
insl
bound
and
mov
and
jbe
dec
push
imul
popa
add
or
fs
gs
bound
push
and
je
fwait
adc
dec
in
jae,pt
sub
lods
inc
pusha
jo
popf
pop
test
cmp
pop
mov
mov
daa
sub
dec
imul
insb
jb
cwtl
shlb
dec
popa
push
data16
sub
mov
pop
pop
mov
add
inc
xchg
dec
popa
imul
xchg
xor
int3
or
push
lds
jo
gs
adc
and
ret
pusha
popa
pop
xor
sub
push
push
fbstp
xor
fcompl
push
js
or
xor
shll
add
mov
gs
into
sahf
dec
dec
aaa
ja
imul
jae
fs
inc
psubd
add
inc
inc
dec
imull
push
mov
mov
das
mov
mov
lds
jo
pop
adc
or
outsl
push
or
arpl
cmp
outsb
bound
stc
push
in
push
inc
aaa
arpl
ljmp
in
or
das
imul
popa
pop
or
bound
inc
jno
rclb
test
push
stos
leave
nop
and
imul
call
push
in
mov
in
inc
enter
cmp
movsb
cmp
fsubrs
and
pop
push
cmp
add
sub
push
jae
mov
inc
in
pushw
pusha
add
dec
sbb
je
test
addl
jb
push
loope
pop
data16
lret
inc
sub
pop
dec
mov
dec
or
add
cmp
pop
fstp
lods
pop
sub
inc
dec
imul
mov
out
gs
dec
and
dec
cmp
pusha
or
js
je
inc
outsb
or
or
dec
lods
repnz
push
dec
inc
dec
xor
cs
dec
dec
gs
inc
insb
jae
lock
addl
push
cmp
push
idivl
inc
inc
insb
cmp
icebp
push
fld1
push
inc
jb
fldl
sbb
push
jo
inc
outsl
inc
dec
imul
insb
out
add
out
sub
push
je
push
icebp
outsb
mov
dec
bound
dec
jnp
xor
cmp
dec
or
jbe
addr16
jo
pop
lea
std
popa
addr16
outsl
js
push
push
ror
add
add
popf
cld
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
das
cli
jmp
and
es
sub
sub
sub
cs
shlb
xor
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
and
data16
insb
insl
ss
mov
push
jne
ja
jns
jnp
jge
xchg
or
data16
and
and
adc
adc
inc
cmp
xchg
dec
addb
andb
and
dec
sbb
add
add
mov
enter
jmp
add
cmp
ficompl
aaa
add
adc
insl
pop
shr
divl
or
incl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
sbb
jo
and
inc
adc
mov
adc
add
dec
dec
cmp
cmp
add
dec
and
jns
add
and
adc
pop
bound
dec
push
call
dec
outsl
jbe
lret
movl
addr16
push
dec
jne
xchg
js
jnp
push
outsb
gs
jo
imul
icebp
popa
jb
push
jne
inc
popa
outsb
into
cmp
out
adc
xchg
cmp
fdivl
outsb
jns
jg
addr16
jae
test
popa
mov
xor
fstps
daa
push
gs
sbb
cmp
out
dec
outsl
outsb
and
jbe
jae
pop
dec
inc
aas
add
lret
xor
add
mov
and
sbb
xor
dec
pop
push
add
push
mov
out
jo
pop
or
mov
dec
rorb
out
orl
aas
leave
rcrb
aam
shll
ds
xlat
push
ret
or
adc
or
or
testb
iret
leave
mov
in
jno
int
push
int
xor
fs
int3
jbe
mov
sar
ret
sarl
aas
faddl
dec
push
in
in
rorb
lods
cli
add
nop
adc
sti
std
sub
or
mov
lods
repnz
push
cmc
repz
jbe
jp
add
outsb
jp
jno
inc
jge
add
fmuls
lods
or
enter
or
mov
jb
adc
cmp
add
enter
and
sbb
jb
inc
push
and
and
and
mov
lock
jns
jb
enter
cld
mov
movb
or
push
add
repnz
jb
lea
mov
and
xchg
jns
pop
jb
xchg
add
pop
xchg
xchg
cmp
mov
adc
test
pop
add
das
push
cmp
aas
pop
lahf
iret
xor
pop
add
add
rep
daa
add
add
sbb
pop
push
push
or
or
in
in
or
or
or
daa
adc
adc
daa
and
mov
push
das
push
xorps
pop
imull
push
and
in
in
sbb
push
pop
andb
in
jbe
jb
daa
daa
iret
jae
sub
dec
outsb
fbld
xlat
rclb
data16
insb
add
nop
lret
adc
add
rolb
mov
add
inc
inc
test
mov
call
mov
cmp
adc
out
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
insb
aas
and
push
xor
fcomp
loopne
jb
jle
in
lahf
or
cmpsb
inc
addl
mov
dec
lods
addb
dec
pop
adc
or
or
jle
pop
push
xlat
push
adc
sbb
out
std
ja
add
sub
sahf
out
and
adc
repz
out
xor
call
cmp
ror
enter
jns
idivl
mov
mov
test
jns
out
pushf
nop
mov
js
jo
pop
push
dec
cmp
repz
cmp
adc
xorl
out
daa
ret
jbe
pop
outsb
push
pop
jg
xchg
out
pushf
xchg
ss
push
or
xorb
icebp
add
push
mov
dec
inc
mov
dec
dec
arpl
jns
out
cmp
pop
js
mov
xor
out
repz
xor
sahf
aaa
in
insl
add
push
pop
ja
sarl
mov
repnz
das
mov
add
xorb
and
adc
inc
loopne
aam
inc
or
add
jb
mov
js
sbb
mov
test
add
mov
shl
add
push
push
and
int3
pusha
mov
js
xor
fistl
je
inc
imul
jb
add
fidivrl
jne
dec
popa
jl
int
and
sbb
gs
iret
pop
jbe
dec
outsl
cmp
insl
jae
add
fimuls
add
pop
or
inc
pop
cld
or
push
ljmp
adcl
dec
fiadds
je
dec
jo
pop
pop
ffree
cmp
push
jns
push
and
adc
test
pop
sbb
add
insl
mov
push
inc
adc
lock
xchg
arpl
cmp
and
in
ficompl
jmp
push
cmp
add
dec
outsl
inc
lods
cltd
movsl
cwtl
xchg
sbb
insb
jns
clts
sbb
inc
pop
mov
insl
addr16
jne
jns
push
in
adc
mov
push
imul
add
pop
jbe
out
adc
dec
and
sbb
shll
jae
adc
and
push
addr16
push
mov
push
adc
sub
or
das
push
das
adc
lahf
push
cmovg
adc
xor
cmpsb
cld
adcl
xchg
cltd
pop
lock
push
sbb
insb
push
ja
das
ret
xor
mov
pop
mov
lock
dec
dec
adc
mov
dec
pop
imul
sub
pop
imul
aas
dec
insl
adc
outsb
inc
adc
cmpsl
insb
or
xor
int
jecxz
jnp
inc
jb
inc
jo
in
dec
push
dec
push
dec
jbe
ja
cmp
cmp
outsl
add
fisttps
inc
out
pusha
pusha
ret
inc
jb
cld
sbb
inc
shlb
push
sub
popf
or
adc
cld
js
hlt
lods
sub
andb
imul
mov
and
inc
jne
inc
ret
xchg
cwtl
add
or
xor
nop
hlt
hlt
lds
jae
pop
mov
or
pusha
dec
gs
fistpl
or
dec
aam
or
sub
inc
jne
mov
or
loopne
xchg
pop
jecxz
popf
loopne
jne
fimull
lds
outsl
adc
enter
or
and
or
adc
and
push
dec
add
pop
cmpsb
push
add
incl
pop
js
or
adc
add
push
outsl
decl
sbb
or
push
cmp
push
push
movsl
or
and
or
sub
and
call
and
push
lods
or
or
or
or
lods
add
or
add
or
pushl
mov
or
xchg
adc
pop
adc
push
xor
inc
mov
decl
sub
inc
xor
push
push
and
sub
or
adc
daa
pand
push
push
or
add
or
add
or
add
cli
das
push
sub
sbb
and
and
sub
push
push
mov
pop
int
lcall
add
or
mov
adcb
add
mov
pop
movsb
comiss
cld
adc
push
sbb
and
or
jg
insb
fwait
or
sub
adc
and
popf
inc
aam
mov
in
sbb
adc
jp
in
add
cmpsl
out
push
adc
imul
sbb
sbb
add
xchg
or
pusha
mov
pop
cmp
add
adc
movswl
cmp
push
push
lock
add
dec
or
pop
lock
mov
mov
or
xor
and
xor
fistpll
pop
jne
adc
test
sbb
or
push
adc
adc
std
jg
or
xor
add
sub
push
pop
add
dec
lock
add
or
push
sub
sub
shl
lcall
fadd
es
inc
inc
inc
fs
adc
cmp
addb
mov
mov
adc
or
jnp
lods
add
inc
push
nop
cmp
ljmp
sub
cmp
roll
jle
and
or
xor
sub
decl
push
dec
movups
xor
xchg
scas
and
test
sbb
sbb
mov
ffreep
xor
or
cmp
inc
pop
adc
cmp
push
push
and
xor
mov
lock
lock
add
adc
push
and
mov
add
or
ss
inc
or
add
mov
call
or
out
add
adc
lock
adc
xor
push
add
dec
ud1
rclb
insb
add
add
sbb
and
sub
mov
add
lock
mov
and
add
sub
lock
add
mov
or
mov
test
mov
in
cmpl
push
loopne
gs
adc
or
or
push
push
cmpsl
jne
mov
loop
push
ss
fbstp
add
add
ja
mov
ss
syscall
sar
or
xchg
or
rolb
orb
sub
rclb
xor
add
adc
bound
adc
lods
mov
outsl
add
pusha
or
adc
xchg
push
sbb
sahf
in
dec
dec
pushf
sbb
fiadds
jb
jb
xlat
jo
or
sub
jb
xchg
dec
inc
repnz
push
inc
and
repnz
nop
fadds
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
