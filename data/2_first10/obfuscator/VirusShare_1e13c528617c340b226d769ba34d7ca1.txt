lcall
or
inc
add
incl
cmp
pusha
pop
and
or
add
xor
mov
incb
incl
shll
or
and
pusha
adc
sub
inc
pop
add
push
ror
lahf
std
or
orb
add
jo
sbb
cmp
shlb
adc
in
mov
push
or
dec
or
test
jg
insl
inc
test
inc
add
inc
add
dec
ret
inc
mov
loopne
jo
add
sub
pusha
sbb
add
pusha
add
sar
add
rcr
addr16
addb
and
and
xorl
add
fildl
cmpl
sbb
add
push
sbb
add
add
inc
test
inc
pushl
dec
and
rorl
fildll
mov
rcrb
or
pusha
lcall
and
fsts
test
jne
mov
inc
add
add
add
sub
add
in
testl
add
or
popa
push
daa
add
sbb
mov
mov
add
js
jae
cwtl
mov
sbb
add
push
ja
mov
jnp
das
jecxz
pop
mov
cwtl
mov
add
sub
cld
in
or
fcoms
testl
jl
lock
inc
sub
std
imul
int
sbbl
fbld
xor
xchg
push
add
out
adc
add
add
mov
into
outsb
fimull
repz
cwtl
add
pop
or
xchg
mov
idivl
or
sub
jge
pop
add
shl
adc
push
mov
idivb
add
stc
nop
js
mov
pop
addb
pop
and
or
push
hlt
aas
mov
mov
xor
push
adc
sbb
cwtl
add
mov
jg
add
add
das
lret
add
or
adc
fwait
in
sbb
push
out
loope
push
push
add
or
mov
pop
cld
rcl
cld
out
mov
sub
pop
push
jno
sarl
xor
jno
xchg
add
inc
outsl
aaa
repz
addl
lods
push
add
mov
pop
icebp
dec
lldt
outsb
sbb
add
sbbl
and
push
sbb
jnp
sbb
pop
push
xchg
xchg
jg
pusha
add
and
sbb
pusha
add
xor
loopne
or
ljmp
fsubrl
pushf
and
sahf
fisubs
xor
push
popa
add
lret
jbe
pop
push
add
adc
pop
cld
lcall
cmp
pop
and
decb
sbb
sub
fdivrl
setae
push
int3
or
pop
data16
inc
jg
js
testb
inc
sub
push
clc
mov
inc
mov
add
jmp
pop
rcrl
adc
mov
les
add
add
jo
hlt
cmpsb
shll
add
add
loope
pop
je
pop
icebp
push
shrb
mov
push
mov
mov
mov
sti
stos
dec
push
pop
mov
adcb
aaa
out
outsl
outsb
sub
sbb
sub
scas
mov
mov
mov
add
add
mov
testl
mov
or
repnz
adc
scas
jecxz
add
adc
add
lock
mov
int
or
cs
ret
jno
push
lds
jno
js
mov
je
dec
fidivl
jp
xor
adc
mov
ja
push
movsb
add
insb
fscale
jecxz
mov
mov
push
adc
add
lahf
inc
icebp
popa
cmp
jecxz
loopne
pop
pop
hlt
xor
cmpsl
or
popa
sti
mov
in
cmp
lahf
outsb
xchg
inc
adc
push
aaa
addr16
mov
and
mov
adc
ficoms
fiadds
mov
lock
mov
loop
jge
dec
cli
mov
xchg
sbb
sbb
lods
fadd
mov
push
and
cmp
fsubl
cmpsb
push
sub
lds
fistpl
jg
arpl
adc
push
sbb
pushf
and
cmp
mul
mov
cmp
bound
add
je
sbb
cmp
push
mov
stos
mov
cmpsb
mov
in
push
iret
mov
add
rcrl
ret
subl
stos
sbb
rorl
mov
jne
test
fsub
jno
cmp
sbb
jp
cmp
fbstp
jb
xor
cmpsb
jecxz
inc
fnstcw
adc
and
pop
sarl
cld
pop
faddl
daa
lods
xor
and
xlat
pop
cmp
jge
clc
adc
jle
mov
in
mov
sarb
popf
mov
cmp
mov
enter
xor
outsb
js
xchg
add
inc
cmp
subl
lods
lcall
adc
pop
jge
jp
add
ficoml
xchg
push
jecxz
in
push
fdivs
or
and
fbstp
cmp
in
inc
add
mov
pusha
xchg
cmp
sbbb
orb
add
shll
dec
or
cmp
out
mov
mov
sar
out
stos
jmp
movsb
jmp
xor
shr
loop
fnstsw
add
cmpb
mov
inc
inc
lock
adc
push
jo
dec
pushf
xchg
cld
ret
or
dec
xor
or
jbe
lcall
fdivp
dec
in
jo
add
int
fdivrs
test
mov
jae
ljmp
add
add
addb
rol
pop
cs
std
cltd
add
sub
adc
jle
sbb
clc
rcrb
push
sbb
insl
inc
inc
daa
clc
pop
loop
xchg
cwtl
fistpll
lock
add
ds
hlt
loope
das
adc
push
jp
scas
push
ds
divl
mov
mov
orb
push
pop
cli
sahf
add
enter
push
shll
push
add
mov
or
mov
fwait
imul
or
data16
cmp
fimuls
shll
imul
add
ds
push
popf
lret
add
outsb
out
sbb
mov
aad
push
xor
mov
push
stos
jns
push
cwtl
jbe
mov
push
or
jns
xchg
jp
pushf
loop
mov
loopne
aas
xor
jge
mov
inc
pop
xchg
decl
mov
cmp
sub
ja
jb
pop
mov
xor
call
sti
dec
mov
ret
stos
xor
stc
jl
jbe
inc
push
fimull
xor
lcall
add
pop
les
out
stos
cmpb
mov
jg
sub
jl
push
or
mov
fildl
addr16
fwait
sub
iret
and
dec
mov
xchg
add
mov
add
inc
jne
add
hlt
in
fstps
push
mov
jg
test
add
out
jo
mov
ret
mov
inc
xor
arpl
sbb
mov
test
xor
cmpsb
inc
push
and
lods
xor
sub
fisubs
sub
adc
add
scas
mov
nop
mov
fcomi
xor
sbb
inc
lock
sub
out
out
add
scas
shrb
jae
je
push
add
pop
out
aaa
push
insb
push
es
cmp
xchg
mov
cmp
adc
je
dec
add
push
adc
aas
adc
xlat
push
inc
pushf
dec
rep
jl
inc
add
clc
jbe
adc
add
aad
lcall
sbb
daa
or
jbe
shll
loopne
mov
mov
push
fdivrl
aas
push
xor
push
hlt
add
stos
nop
adc
push
and
int3
cltd
cmp
add
loope
mov
adc
mov
stc
jg
mov
add
and
sub
sbb
mov
mov
jecxz
sub
push
ret
popa
add
fcomp
jecxz
gs
bound
sub
ret
xchg
cmp
fidivs
js
add
mov
mov
imul
out
adc
mov
push
js
ja
mov
cli
jbe
repz
repz
jle
or
dec
dec
lret
rorl
cmp
add
loope
and
shl
mov
push
inc
addr16
add
dec
jb
mov
lods
dec
and
dec
push
std
clc
xor
pop
test
ret
mov
dec
mov
add
fs
clc
out
inc
repnz
popf
jne
mov
sbb
out
xor
outsl
loopne
addb
push
dec
das
inc
fstp
push
mov
mov
cmpb
mov
sub
xchg
adc
add
orb
or
inc
in
lea
push
scas
mov
add
test
shrb
add
add
js
xor
lahf
cmp
jle
or
cmp
jb
or
jbe
mov
xchg
gs
pop
mov
push
push
aad
adc
sbbb
faddl
or
ss
mov
pop
push
sub
sub
and
lret
mov
or
add
mov
jnp
cwtl
inc
jg
outsl
lea
mulb
and
inc
mov
dec
lahf
movl
mov
mov
push
add
or
nop
xchg
andl
clc
sbb
jne
fimuls
or
adc
loopne
pop
lock
and
jle
faddl
mov
push
pop
data16
add
jnp
addr16
roll
aaa
inc
push
outsl
repz
cld
xor
lcall
in
test
flds
in
sub
cli
mov
daa
ds
push
cmpb
test
xchg
push
mov
dec
ret
std
cld
push
pop
outsb
sbb
fidivl
nop
pop
mov
mov
ret
and
mov
cmp
daa
mov
inc
in
pop
icebp
pop
pop
dec
fiaddl
cld
pop
or
adc
mov
shrl
pop
rcrl
cmp
mov
ret
dec
inc
stc
and
pushf
js
inc
jg
pop
loope
cwtl
sub
fdiv
pop
adc
mov
andl
mov
sbb
pop
xor
jg
ret
mov
xchg
subb
in
cmpb
mov
outsl
mov
add
mov
mov
into
loop
popa
sbbb
sahf
in
xchg
aad
xchg
frstor
add
stos
jno
lock
push
push
jo
jle
outsb
pop
push
fndisi(8087
lcall
outsb
add
repz
adc
andb
add
jg
cmp
xchg
mov
and
cmp
mov
cmp
popa
mov
push
rcr
aaa
mov
das
outsb
out
rcrb
jp
insb
testl
rcrb
les
arpl
out
fwait
pop
xlat
pop
aaa
inc
or
sub
mov
add
adc
pop
xchg
enter
fsubl
jg
xchg
xor
jle
imul
cmp
daa
dec
inc
or
add
push
or
popa
or
movsb
outsb
enter
xchg
xchg
xor
sub
outsb
into
lcall
loop
clc
pop
sub
mov
xchg
test
mov
subb
or
movsb
scas
and
rcll
pop
cmc
adcl
ljmp
push
add
test
adc
and
or
cmpxchg
jl
dec
outsl
mov
mov
push
pop
fwait
seto
testl
loope
or
addr16
sub
push
push
mov
int3
jmp
mov
pop
add
dec
adc
lock
xchg
ficompl
sahf
mov
leave
jnp
pop
mov
rolb
popa
or
mov
fs
inc
rcrb
emms
std
shrl
sub
add
xor
xchg
js
mov
or
sbb
lahf
sarl
mov
adc
jp
cli
aas
rcrb
cmp
leave
orl
scas
add
outsl
lds
xlat
add
or
add
in
mov
inc
xor
add
mov
aam
punpckhdq
inc
call
mov
ror
sahf
push
dec
add
sbb
lcall
sbb
fisttps
loopne
mov
mov
ss
test
movsl
fcomps
std
push
std
jg
mov
imul
addb
add
fmuls
repz
push
lock
inc
mov
sub
nop
push
incl
in
mov
push
lods
lcall
xor
or
xchg
les
ret
nop
stc
cmpsl
pop
js
mov
dec
sub
out
or
mov
and
outsl
cmp
hlt
xor
xchg
into
mov
push
add
pop
cli
jmp
sarb
incb
scas
mov
insb
outsb
push
xlat
push
or
sbb
add
insl
movsb
pop
push
cld
and
ret
decl
cld
jg
cmpb
cmp
aas
stos
lock
jnp
aas
nop
pop
adc
mov
lea
jnp
pop
orl
test
xor
jp
in
lret
push
lods
insl
arpl
jmp
mov
adc
xchg
out
incl
mov
bound
xchg
and
lods
movb
add
test
cs
add
lcall
xchg
shrl
xorb
fdiv
adc
mov
rcll
sbb
add
decl
stos
pop
and
cmc
inc
xchg
cwtl
ficomps
in
mov
addb
mov
push
or
add
sub
out
inc
or
and
push
mov
test
pop
ffreep
sbb
push
in
sub
jl
popa
xor
int3
cmpsl
jp
xchg
jecxz
jno
jmp
mov
popa
xor
push
fmuls
adc
imul
hlt
or
fildl
xchg
xchg
lea
and
push
and
cmp
movsl
xorb
push
aam
jns
adc
and
aam
inc
add
xchg
jp
ret
and
mov
sbb
pop
ss
ret
push
into
test
loopne
add
xchg
ja
jle
loope
fdivs
scas
push
jno
push
sub
sarl
movsl
and
push
js
sbb
mov
add
cs
cmpsb
outsb
push
addr16
add
dec
jle
push
mov
push
push
fildl
dec
cmp
clc
jnp
sbb
mov
inc
pcmpgtb
sahf
add
shl
cli
arpl
loop
sahf
jo
popa
cmp
ja
punpcklbw
pop
adc
pushf
cmp
adc
pop
ja
jno
and
testb
scas
dec
jns
add
jecxz
add
sbb
xor
or
adc
add
call
xor
orl
je
mov
out
pop
mov
adc
adc
jnp
jno
pop
add
jg
shrb
pop
cmp
ds
sub
add
add
mov
aam
dec
out
leave
daa
aad
into
inc
movsbl
dec
ret
cld
mov
sub
add
int3
push
ss
movsb
loop
and
push
mov
xchg
roll
sub
and
mov
mov
pop
in
out
lret
jecxz
xchg
outsl
mov
movsb
test
xorb
fwait
mov
inc
cmp
scas
leave
sbb
fidivrl
cwtl
mov
inc
in
pop
mov
loopne
cmp
jb
add
loopne
add
or
in
or
lcall
mov
lock
push
cmp
xor
mov
pop
sbbb
ljmp
push
cmpsb
sarb
jbe
mov
mov
mov
jecxz
mov
sbb
cmp
dec
orl
nop
testb
and
adc
sti
cmp
pushl
pop
loopne
fistps
shlb
dec
add
jge
mov
test
push
cli
mov
stos
ljmp
pop
cmc
mov
dec
mov
roll
or
sub
ss
lcall
js
jns
cmp
cmp
ljmp
push
sbb
pushf
subl
adc
lods
not
mov
and
sbb
or
fiaddl
pop
fbld
sbb
repz
xchg
ffree
outsb
sub
clc
adc
cli
pop
mov
sbb
add
or
fsubr
or
out
jl
adc
aam
outsb
pop
cmp
mov
imulb
dec
push
rcrl
aaa
popa
negl
cmpb
repz
movsb
andl
xchg
push
in
mov
push
divps
push
dec
and
pop
xchg
or
test
data16
add
add
xor
notb
or
repnz
in
push
adc
add
imul
bts
mov
push
out
sbbl
cmp
push
ret
inc
cmp
ret
dec
cmp
add
data16
loope
push
push
add
or
cmc
repnz
fistl
movb
inc
rsm
or
mov
bound
mov
push
xor
lret
pop
sbb
add
mov
daa
loopne
inc
add
adc
mov
jle
dec
dec
nop
dec
jge
arpl
adc
jle
or
mov
push
aam
clc
xchg
and
mov
sbb
out
xor
mov
fldt
repnz
clc
xor
mov
test
and
xchg
sahf
sbb
pslld
sbb
sbb
pop
cmp
dec
ret
pop
adc
ret
push
dec
rcl
rol
fisubrl
sarb
lea
pop
fs
stos
outsl
cmp
mov
cmc
insb
ret
enter
push
stc
lods
mov
daa
mov
jo
inc
ret
stc
add
test
mov
dec
adc
ds
dec
jo
mov
hlt
push
mov
jns
push
jle
aas
mov
sbb
pop
mov
xor
and
or
imul
pop
cld
xlat
gs
inc
inc
mov
jne
dec
mov
push
shrb
lcall
fwait
neg
jmp
lret
mov
je
call
mov
adc
xchg
stos
aas
in
leave
sbb
mov
xchg
test
lcall
imul
das
push
mov
sar
dec
jbe
xlat
pop
aaa
xchg
push
and
push
iret
mov
add
rcr
pop
loopne
in
and
sbb
fldl
leave
jl
push
rcll
fwait
sti
xchg
xchg
push
or
push
jo
cmp
out
fstps
popa
das
or
sub
fwait
addr16
aaa
pop
sub
sub
dec
mov
and
jecxz
pop
ja
je
push
jo
add
push
adc
pop
xor
xchg
xor
push
int3
icebp
ror
int
xchg
mov
ja
cmp
or
shlb
movsb
jb
sub
or
inc
xchg
xchg
mov
sub
lods
fisubrs
flds
lahf
mov
cmp
dec
xchg
mov
and
test
sbb
inc
fwait
dec
lods
pushf
fwait
nop
pop
mov
out
out
adc
mov
add
in
test
inc
pusha
or
rcrb
and
inc
daa
out
ret
sub
aad
testl
xor
rcll
sbbl
push
leave
add
mov
mov
inc
mov
adc
mov
test
fnsave
cmpl
push
call
sbb
mov
out
add
inc
mov
adc
sbb
addb
sbb
and
subl
sub
call
push
lock
sbb
fists
sbb
xchg
push
add
jmp
sbb
mov
sub
adc
dec
nop
pop
xorb
paddsw
add
or
mov
loope
mov
daa
imul
add
xchg
sub
push
dec
test
push
or
push
inc
lahf
mov
jns
pop
lret
ja
pop
inc
popa
or
push
pop
pop
push
xchg
das
lahf
call
mov
add
fs
or
aas
fwait
mov
or
inc
lcall
movsl
cltd
mov
sbb
mull
dec
fdivr
bound
dec
jae
sbb
xchg
daa
pop
dec
xchg
jnp
int3
adc
leave
sbb
cmpsl
push
loope
sub
pop
imul
mov
push
xchg
mov
cwtl
sub
push
rorl
fsubrs
add
cli
and
pop
out
xor
jl
das
and
xlat
out
divl
mov
inc
pop
dec
pop
out
loope
adc
cwtl
hlt
ret
cs
jecxz
add
add
sbb
inc
fldl
xor
add
push
sub
push
xor
mov
push
pop
mov
imul
cmp
jae
test
cwtl
mov
insl
ret
fdivrl
bound
sti
stc
xor
sub
cmpsl
int
scas
iret
mov
cltd
jmp
jae
outsb
pop
adc
mov
pop
nop
dec
shrl
adc
dec
incb
pop
dec
sarl
mov
push
iret
adc
iret
or
pop
dec
popf
sbb
aam
or
pop
add
enter
pop
xchg
cmp
aas
jmp
lods
fucomi
mov
cmpsb
jmp
lds
imul
inc
cmp
movsl
adc
and
mov
test
ds
je
aaa
std
push
test
leave
push
cmp
cmp
loope
jne
jecxz
pop
push
add
push
std
push
out
push
or
pop
dec
add
repz
pop
mov
push
mov
cld
mov
push
test
jnp
outsl
sub
pop
xor
faddl
and
mov
or
outsb
icebp
aaa
shl
mov
sbb
je
jne
mov
xor
lret
sub
insb
pop
jp
aam
dec
sub
aaa
mov
or
jl
scas
mov
cli
flds
add
jg
sub
add
or
add
test
add
adc
xor
int3
xor
aaa
pushl
int3
test
mov
add
add
mov
les
cmp
sbb
ret
pop
das
mov
fmuls
cwtl
xor
lahf
decl
sbb
xor
cli
sub
and
cwtl
and
add
inc
adc
sbb
ret
loopne
xor
dec
add
movl
dec
fcoms
aas
mov
mov
xchg
inc
push
sub
mov
lcall
paddb
fs
xchg
ljmp
push
imul
push
or
call
hlt
mov
dec
clc
scas
and
inc
test
mov
cli
push
jecxz
sub
jae
mov
in
cmc
cmpxchg
repz
and
mov
hlt
or
sti
stc
cmp
jecxz
movsl
incl
aas
ret
mov
or
movb
fcomps
stc
in
sbb
repnz
dec
mov
loop
pop
cli
addb
jo
ds
movsb
sahf
xchg
rcr
clc
xchg
sarb
xchg
stos
mov
jns
fcmovbe
lock
or
sbb
test
loopne
sub
sbb
adcl
xchg
push
add
leave
iret
or
mov
stos
jo,pn
adc
mov
cmp
lock
pop
jo
cmp
outsb
mov
mov
test
insb
js
xchg
sub
nop
mov
and
adc
enter
pusha
lret
xor
movsl
xchg
sbbl
xor
mov
icebp
std
and
ds
stos
xbegin
mov
rolb
ja
pop
cmp
push
fisubs
pop
jo
pushf
cli
cmp
pop
and
incl
aaa
mov
pop
out
mov
jae
out
ret
mov
jnp
pop
push
fs
icebp
movsl
scas
sahf
dec
nop
jmp
sub
pop
add
or
dec
add
imul
hlt
jbe
inc
adc
in
jbe
jle
mov
pop
sbb
aam
ret
std
cmc
jg
lcall
jo
push
jp
cli
sbb
sub
test
rorb
mov
dec
sbb
ljmp
cs
pop
jmp
jnp
xor
add
push
out
imul
mov
mov
pop
pop
dec
sub
xchg
and
xor
pusha
pushf
out
dec
dec
or
xor
lret
loope
mull
clc
add
loope
andb
in
adc
cld
data16
jmp
pop
pop
decw
outsb
out
rolb
test
sbb
js
pusha
call
jge
rcrb
xor
fidivs
cmp
xor
mov
dec
pusha
jg
test
pop
lcall
push
or
shrl
rcrl
test
out
sbb
outsb
cmc
and
fs
xor
jle
inc
ljmp
jb
pop
test
icebp
ds
ss
xchg
loopne
lret
cli
push
push
xchg
jecxz
inc
in
add
push
adc
js
inc
cmp
xlat
cmp
or
inc
call
add
cmp
sbb
call
or
add
mov
and
arpl
rcrb
popl
pop
inc
aaa
pushf
mov
ja
jg
or
push
add
jge
fsubr
push
cmp
jne
cmpsl
jmp
insl
leave
mov
jg
int
xchg
mov
popa
or
cmc
push
inc
fidivrl
sbb
or
xchg
fildl
ret
repnz
pop
jmp
out
push
jp
int3
shrb
xchg
add
insl
or
cwtl
ljmp
sahf
ds
iret
pusha
xchg
div
mov
lahf
stos
add
push
les
ret
jno
fcmovnb
push
pushl
sbb
outsl
adc
mov
cmp
sti
mov
ja
cmp
dec
adc
popa
jb
out
lock
push
arpl
pop
mov
lret
cs
push
lcall
test
ret
mov
or
jmp
fwait
mov
mov
add
rorl
mov
add
test
fdivl
clc
push
loop
inc
sbb
insb
in
insb
loopne
rorb
inc
sub
inc
xchg
push
hlt
push
gs
les
jg
faddl
clc
pop
jg
rcll
ret
dec
cld
in
in
sub
or
icebp
pop
iret
or
xor
push
sub
sub
sub
lds
icebp
sbb
jg
add
mov
or
loopne
cld
or
iret
stos
clc
xchg
or
rcl
enter
sbb
adcl
rolb
ja
arpl
idiv
jmp
push
xor
aas
sbb
mov
dec
mov
sbb
ficoml
push
add
stos
push
cli
sbb
gs
out
adc
scas
mov
mov
and
xchg
and
scas
push
lea
les
inc
sarl
add
add
dec
test
into
jge
movsl
imul
add
fimull
pop
repz
inc
lock
mov
insb
lret
int
mov
xchg
jle
cmp
xor
and
repnz
fwait
cmpb
xchg
cmpsl
add
shrl
rcrl
dec
pop
sbb
jg
jl
pop
push
cli
push
dec
xchg
sbb
push
scas
shlb
add
xchg
clc
out
lahf
scas
ljmp
in
ret
ret
addr16
dec
jecxz
lock
pusha
jge
bound
cwtl
dec
aas
data16
inc
xor
sbb
or
dec
sub
sub
fsubr
sub
rcrl
aas
sarl
rcll
shrb
loope
enter
add
or
jne
or
xor
mov
xor
js
fistps
mov
pop
pop
outsb
push
dec
pop
sub
lods
dec
popf
hlt
add
xor
mov
mov
jnp
enter
mov
out
inc
scas
loope
fsubrl
dec
xor
hlt
pop
addb
cmpsb
sarl
lcall
pop
test
jg
xor
repnz
outsl
es
call
jg
pop
sbb
pop
inc
in
nop
out
scas
mov
mov
scas
and
es
test
sub
sub
js
sbb
and
xor
mov
test
add
jb
fistpll
or
lods
rcrl
test
sbb
mov
fdivs
xchg
cmpsl
stos
and
add
les
je
jge
push
clc
ficoml
shrl
lahf
or
inc
shll
roll
lea
pop
add
cld
out
clc
je
lea
push
pop
fldcw
mov
add
insl
xchg
mov
lret
clc
stos
pop
mov
out
mov
cmp
pop
pop
jg
lahf
add
stos
mov
sbb
jge
loop
pop
movsb
mov
pop
add
in
mov
or
push
int3
sub
clc
scas
jmp
mov
jnp
lret
add
rorl
bound
bound
cld
outsl
insl
popl
add
mov
jg
or
xchg
add
pop
sub
pusha
sub
jne
adc
frstor
ret
push
test
loopne
pushf
sbb
adc
dec
test
jo
shlb
lret
xchg
dec
inc
mov
addl
int
fistpl
cmp
test
fdivrp
push
lret
mov
fstpl
mov
lret
inc
sti
add
sbb
sbb
scas
cmp
inc
fsts
lock
loopne
sbb
adc
mov
shll
je
add
mov
in
add
sub
not
pop
dec
scas
stc
sbb
pop
rorl
cmc
into
bound
xor
mov
cs
xchg
decb
aaa
ds
and
hlt
xchg
outsb
cmp
imul
push
push
inc
jl
es
or
not
sbb
lret
out
cs
fs
push
mov
dec
lods
push
push
aad
adc
call
test
jp
or
cmp
pop
xchg
dec
inc
popa
push
cmp
add
test
lods
into
push
das
inc
cmpsl
mov
mov
cmpl
or
jno
mov
js
mov
mov
dec
sbb
add
je
es
pushf
push
je
jbe
cmc
pop
sbb
insb
mov
jb
or
aas
aas
or
mov
dec
inc
mov
adc
push
xchg
push
push
jbe
xor
mov
or
stos
push
add
adc
loop
fadd
stos
lea
in
or
or
or
and
and
pop
adc
pop
sbb
je
sbb
adc
xorl
and
loop
inc
mov
mov
aaa
xor
sbb
call
mov
stc
stos
and
push
cld
mov
cld
inc
jne
and
push
js
shrb
fiaddl
mov
cld
or
cmp
aas
and
movsl
mov
pop
jl
std
mov
pop
mov
lret
cmp
mov
pop
jo
push
in
sub
jge
je
push
jo
dec
std
icebp
or
jmp
addb
dec
mov
push
or
test
lea
pop
iret
sub
out
and
lods
mov
fwait
and
mov
aaa
pop
push
cmc
inc
shlb
in
fimuls
mov
addb
mov
xlat
out
cli
negb
clc
shlb
rcr
out
fadd
dec
push
jmp
mov
xor
or
aad
daa
cmpb
inc
js
js
clc
lret
cmp
xor
adc
ljmp
cmp
fnop
push
jle
aam
call
iret
je
aaa
es
stos
adc
push
stos
rcl
cmp
inc
cmpb
stc
pop
fnstenv
mov
ljmp
cli
cmp
xchg
popa
add
xchg
mov
cmp
sahf
cmp
and
adc
pushf
je
jecxz
mov
call
sti
ret
add
push
std
jg
xor
lret
scas
cwtl
or
mov
scas
xorl
or
leave
sbb
pusha
cmc
mov
sbb
loopne
leave
and
mov
xchg
dec
data16
adcb
sub
test
mov
xor
sbb
mov
std
data16
sbb
jo
call
xor
inc
call
jg
add
push
or
subb
add
add
jb
dec
dec
mov
bsr
inc
and
jno
xchg
dec
mov
adc
adc
call
adc
pushf
mov
into
mov
jbe
xchg
push
fwait
idivb
cmp
outsb
sbb
and
ds
ss
sub
loopne
push
inc
scas
clc
cli
cwtl
pop
sbb
mov
mov
xchg
inc
inc
stos
lahf
in
inc
sti
sbb
xor
xchg
fdivr
lcall
rolb
xor
sub
insb
fsubrs
sbb
ss
clc
icebp
out
mov
sahf
push
pop
lock
outsl
insb
push
aas
adc
adc
push
orb
lret
inc
sbb
pop
hlt
add
lret
mov
push
rcrb
fisttpl
sub
push
insl
hlt
lods
outsl
cmp
mov
and
push
xlat
inc
xor
push
add
lret
rcrb
dec
push
movsb
jb
jb
push
pop
mov
dec
xlat
outsb
rol
jp
sbb
in
xchg
js
xor
enterw
push
mov
repz
mov
js
or
mov
insb
fnstsw
and
fmul
lret
adc
hlt
jg
mov
insb
fsts
lret
inc
lock
xchg
or
push
mov
testl
ss
clc
mov
sbb
pop
test
aad
or
push
adc
lahf
dec
xor
scas
xchg
call
inc
je
mov
je
mov
aam
pop
sub
shlb
andl
loopne
popl
fs
jp
lahf
pop
xor
dec
fsubl
xchg
adc
stos
push
js
das
lret
inc
fists
in
push
mov
shrb
mov
xchg
hlt
out
add
xor
fldl
sbb
adc
or
mov
xorb
xchg
mov
mov
adc
aam
icebp
xchg
inc
jg
pop
pop
dec
js
and
push
xchg
pop
rorb
xchg
cmpsb
dec
cld
lahf
adcb
mov
xchg
mov
jle
push
sub
xchg
loop
sbb
push
push
jo
or
add
addr16
mov
addr16
inc
jp
adc
push
nop
sub
decb
xchg
mov
jo
daa
sub
scas
adc
jg
push
inc
dec
dec
mov
inc
adc
mov
mov
xor
dec
das
cmp
cmp
cld
push
jne
cmpl
lcall
repz
xor
pop
mov
xlat
cmp
pop
bound
dec
rcll
adc
pushf
or
or
movsb
sub
cmpsb
shlb
cmp
test
insb
lahf
mov
sub
subb
mov
mov
push
sbb
ret
hlt
jne
inc
test
mov
mov
adc
cmovne
and
xchg
ficoms
ror
out
in
pop
dec
mov
mov
or
nop
pop
push
add
sbb
push
arpl
and
add
cmp
jno
mov
mov
ljmp
popa
test
fcomps
popl
cmp
fiaddl
mov
mov
xor
es
insl
fisubrs
jnp
daa
ret
sub
adc
dec
jae
divl
pop
push
jae
shrb
or
xor
sbb
and
jle
inc
jl
jge
xor
cltd
add
cmpb
movsl
and
sbb
jle
xor
mov
jnp
fildl
fwait
clc
stos
bound
lock
imul
xor
and
mov
add
push
les
lret
dec
xchg
aas
test
adc
jecxz
out
jo
repz
sub
add
rcll
pusha
ficoml
faddl
mov
push
add
or
adc
imul
lret
xchg
cmp
idivb
out
fildll
test
xchg
push
adc
dec
movsb
sub
sub
pop
push
gs
push
or
push
cmpsb
add
xchg
mov
call
sbb
imul
popa
xor
sub
loopne
push
dec
in
movsl
mov
stos
inc
xlat
cs
jg
fisubs
pop
add
and
pmuludq
ffree
test
ret
mov
or
xchg
mov
xchg
dec
push
loopne
imul
push
stos
push
outsb
inc
add
adc
sbb
rol
loope
outsb
cltd
cmp
push
cmp
sti
dec
rorb
arpl
fstpl
or
mov
sbb
lahf
inc
stos
inc
or
sub
jno
jb
cmp
sbb
movsb
jmp
incl
inc
mov
std
push
jno
inc
add
xlat
in
mov
mov
add
cwtl
iret
rcrb
clc
mov
xchg
rclb
jle
je
add
leave
push
mov
addb
jne
sbb
sub
shrl
leave
add
arpl
push
cld
les
adc
mov
aad
stc
adc
aas
imul
sub
call
mov
sbb
jo
xchg
dec
mov
inc
push
jmp
rcrl
dec
movsl
inc
and
jg
icebp
jmp
fwait
sti
xor
js
mov
push
in
or
scas
xor
dec
imull
addr16
daa
pop
adc
pop
sbb
add
fcmovbe
movsbl
mov
fcmovb
shlb
mov
inc
lea
dec
roll
and
inc
xchg
sbb
je
pop
jns
sbb
mov
jg
ja
popa
loope
pop
xchg
mov
dec
test
and
movsl
mov
sti
punpckhwd
mov
inc
push
and
into
mov
rcr
pop
loopne
sub
xlat
sti
sbb
xchg
mov
mov
or
xor
push
scas
data16
or
loope
cmp
imull
movb
xchg
in
sti
cmp
int
cmpsl
cmp
lds
ljmp
test
loop
push
stos
mov
pop
mov
jp
orl
pop
aaa
insb
jns
pusha
cmp
sbb
ffreep
hlt
and
jecxz
push
xchg
xchg
mov
sbb
outsb
fldl
adc
out
cmp
pusha
cmp
adc
xchg
dec
lds
and
pop
addr16
cmpsb
push
lock
xchg
es
push
out
inc
pop
iret
dec
rcll
mov
xchg
out
cmpps
repnz
mov
xchg
cltd
pop
xlat
rorb
jl
mov
test
shl
and
mov
push
xor
xor
shrl
cld
stos
ljmp
jo
xor
ds
cmp
cmc
sbb
or
mov
repnz
ret
mov
add
movl
in
stos
cmp
add
stos
scas
cmp
das
push
jo
popl
jb
add
push
dec
jnp
or
cli
xchg
pop
adc
xor
lock
adc
cmpb
arpl
icebp
test
fnsave
sbb
ret
sbb
ret
dec
test
dec
addr16
inc
insb
mov
pusha
out
nop
xchg
mov
add
mov
std
mov
or
adc
pop
xchg
cs
jmp
filds
filds
adc
sbb
mov
cwtl
pop
mov
in
or
dec
adc
pop
add
cld
and
lcall
cmpsb
sub
mov
in
fisttps
fcompl
adc
loop
push
bnd
and
out
es
aad
out
ret
movsb
mov
jecxz
mov
xor
daa
stos
stc
adc
dec
lea
sbb
fnsave
and
scas
xchg
inc
mov
movsb
dec
xor
pusha
lds
repz
fisubs
sub
mov
scas
cmpsl
push
addl
mov
or
movsl
add
rcrb
add
push
xchg
pop
ret
mov
xor
inc
ds
faddl
add
push
stc
sub
in
in
dec
lahf
push
xchg
insl
xchg
push
int3
iret
int3
or
fsubl
dec
xchg
clc
push
xor
out
inc
insb
les
or
mov
loopne
sbb
int3
jne
icebp
cwtl
push
gs
push
mov
pushf
push
data16
mov
je
pop
fs
ret
add
cmpsb
inc
cmpsl
fs
sub
and
nop
push
mov
fldenv
jge
inc
push
fsubrs
adc
xor
imul
add
jnp
repnz
test
out
push
test
stc
pop
icebp
push
mov
sbb
inc
test
pop
notl
jmp
pop
adc
pop
lea
push
stos
stos
mov
fcmovnu
add
rcll
add
sbbl
lds
push
je
mov
adc
in
mov
sub
or
flds
mov
repz
ret
pop
or
dec
subl
pusha
sbb
call
push
fnstcw
fwait
test
push
pusha
mov
dec
mov
add
ja
sbb
gs
test
test
mov
std
fwait
push
and
lret
addr16
mov
arpl
mov
pushf
ja
or
mov
cmc
add
lret
jo
xchg
or
push
test
aaa
push
mov
dec
xor
call
repz
mov
or
mov
sti
pusha
adc
xlat
pop
testl
or
xorb
push
cmc
push
cmpsl
in
mov
aad
mov
in
jo
jge
rcrb
pop
stos
jbe
popa
mov
push
sbb
adc
inc
cwtl
jne
lret
add
imul
pop
xchg
jmp
cs
outsl
xor
loop
lret
stos
push
cmp
sbb
dec
add
adc
adcb
jge
xchg
jle
or
lret
testl
mov
rcrb
xor
cmp
mov
mov
mov
add
sub
push
popa
repz
add
and
int
xor
sbb
xor
or
lods
pop
inc
jg
lret
sub
insl
lock
or
in
sub
mov
or
xchg
test
cli
int3
movsl
jo
cs
daa
les
leave
lret
mov
clc
shl
inc
sahf
into
sub
clc
enter
adc
adc
pop
inc
stc
ljmp
or
add
lods
ret
pop
adc
jge
jecxz
je
or
test
mov
jge
outsb
leave
cmpsb
push
cmp
or
out
jno
xor
paddusb
mov
xor
sbb
jmp
in
shrl
adc
pop
shll
pop
fwait
jg
int3
mov
sub
and
mov
add
dec
cmp
push
aad
lea
ficoms
ret
sahf
aam
sub
xchg
fisubrl
and
jg
add
pop
and
push
andb
and
mov
sbb
and
hlt
fwait
or
pop
ret
jno
cmp
pop
lcall
push
xor
xchg
mov
bound
sbb
mov
fnstcw
push
jle
decb
push
int3
divl
mov
cmpsb
push
jne
in
push
mov
arpl
mov
aam
cmpsl
daa
lahf
add
bound
lcall
bound
mov
add
push
mov
jg
cmp
mov
sub
sbb
stos
cmc
gs
mov
xchg
jbe
jle
fwait
mov
mov
sti
adc
push
adc
sub
mov
mov
scas
cli
inc
call
jno
movsl
loope
mov
icebp
xchg
sub
jge
cs
add
pop
loop
std
xchg
and
fsubp
inc
insb
js
int
mov
or
inc
mov
sub
or
stos
mov
mov
das
or
enter
sbb
enter
mov
pop
sbb
mulb
mov
sub
ss
pusha
sbb
loop
jbe
or
in
and
not
pop
jno
ret
loopne
mov
jmp
popa
lret
push
mov
dec
leave
lock
adc
into
sub
sbb
pushf
pusha
jno
mov
aad
add
lock
mov
sarb
xchg
xchg
ljmp
cltd
popf
push
aaa
jno
repz
mov
pop
xchg
jno
xchg
and
push
mov
gs
outsb
inc
xchg
mov
xchg
add
xor
jo
clc
xchg
ja
sub
outsb
jns
icebp
pop
hlt
lcall
arpl
hlt
fisubl
add
outsb
or
jae
sub
jmp
dec
rcrb
cmp
andl
pop
and
imul
int3
js
int3
repnz
xchg
dec
sbb
pop
xorl
pop
cmp
inc
xchg
stos
sti
test
cmpsl
and
aaa
movsl
xor
pusha
ret
cmp
rorb
xchg
paddusb
enter
pop
jge
sbb
push
jne
aas
inc
outsl
shl
add
mov
out
xchg
inc
ficoms
cmpsl
les
fwait
mov
pop
xchg
sub
adc
xchg
clc
scas
test
pop
cmc
arpl
jmp
cli
mov
dec
lret
rolb
lds
mov
test
pop
fs
dec
bound
mov
out
cmp
scas
push
push
stos
push
xchg
push
xor
ljmp
push
loop
jle
pop
xor
mov
lea
or
das
popf
icebp
add
bound
in
xor
jo
mov
mov
mov
in
dec
cmpsb
jnp
sbb
inc
mov
inc
inc
out
push
sbb
sub
aad
mov
test
out
mov
push
cmp
xor
repz
call
lret
outsb
in
mov
dec
xor
in
aam
repnz
cs
pushf
push
icebp
mov
adc
cmp
xor
xor
and
roll
data16
pop
pop
dec
add
and
and
pop
mov
pop
dec
lret
mov
sub
and
cwtl
sbb
pop
bound
or
dec
push
or
in
and
int3
lods
loope
je
lret
xchg
lock
faddp
ret
popf
lock
xchg
fldt
jmp
shrb
and
inc
or
dec
fisttps
and
and
dec
pushl
cmp
sub
and
push
cmpsl
iret
enter
jno
std
jecxz
inc
and
lret
lret
std
cmp
add
lods
push
mov
pop
adc
xor
xchg
sarb
hlt
dec
insb
jmp
popa
and
mov
xor
aam
sbb
lock
jbe
sub
push
sbbb
cld
sarl
les
test
out
mov
lahf
add
clc
pop
fcmovbe
ret
sbb
ljmp
pop
movsb
and
fnstsw
nop
int3
insb
dec
cmp
xor
repnz
imul
xchg
add
adc
popa
lock
scas
fidivrs
mov
pop
xor
pop
mov
push
dec
xchg
jnp
daa
nop
dec
inc
fildll
sbb
cmp
bound
push
and
addr16
les
je
jbe
lcall
sbb
pop
jo
es
add
icebp
add
daa
repnz
adc
add
hlt
jae
cld
dec
xor
aam
and
fisttpl
stc
ljmp
push
neg
movsb
jg
push
data16
sbb
fs
push
xlat
add
sbb
jmp
mov
lahf
mov
pop
mov
push
addr16
das
jge
js
ret
pop
pop
vpmadcsswd
jle
imul
sbb
mov
arpl
sbbl
dec
call
bound
dec
jnp
push
dec
push
mov
data16
adc
mov
mov
hlt
xorl
and
movsl
fbstp
les
mov
inc
mov
mov
push
shrl
sbb
push
cmp
sub
ret
jmp
clc
lcall
mov
dec
cli
dec
mov
and
sub
cmp
inc
xchg
and
clc
ret
inc
add
mov
outsb
les
popa
push
in
inc
addr16
cwtl
and
cmpsb
or
pusha
call
std
inc
lods
je
addr16
inc
xchg
cmp
xlat
and
idiv
loope
mov
or
mov
push
stos
jbe
subl
in
pop
lock
cmp
cmp
add
sbbl
lock
into
sub
dec
in
inc
inc
mov
cwtl
lret
lea
loopne
add
faddl
out
sbb
aas
call
jmp
repz
jp
fucom
cltd
dec
jbe
jmp
leave
push
scas
jl,pn
mov
pop
sub
inc
sbb
add
imul
outsb
mov
dec
cld
out
xchg
pop
xchg
jecxz
sub
push
jo
lcall
adc
jmp
fsubrs
addr16
outsb
fwait
inc
insl
pop
leave
dec
aas
inc
sets
fdiv
aaa
and
inc
mov
sbb
js
fcmovnbe
cwtl
mov
jb
adc
in
xchg
pmuludq
sbb
shll
daa
add
stos
sbb
xor
jb
add
rolb
pop
scas
mov
repnz
cmp
sub
in
jno
or
cwtl
xchg
adc
mov
aam
out
and
cmp
cmp
loope
cmp
push
int3
ja
test
jle
fwait
and
dec
inc
cmp
sbb
xor
jg
loopne
rolb
rcll
cs
test
cltd
into
sub
shlb
sub
cwtl
jnp
xchg
pop
xor
sub
xor
rcrl
or
mov
or
fwait
xchg
sbb
popf
mov
sub
mov
jecxz
inc
xchg
push
sti
test
add
jg
xor
and
scas
mov
and
pushf
inc
fildll
test
jp
xlat
pop
insb
out
cmp
popa
movsb
sub
mov
fsubr
insb
push
add
mov
fldenv
jle
add
mov
cwtl
mov
aam
pop
lea
fisubrs
pop
jne
int3
clc
dec
cmp
add
test
cmp
decb
dec
icebp
push
fsubrl
add
pop
jge
push
insb
pop
add
cwtl
sbb
das
xchg
stos
lock
push
mov
add
adc
adc
and
xchg
out
push
iret
mov
xchg
mov
mov
cmp
or
adc
cmp
push
push
cli
or
mov
pushl
pop
adc
test
sahf
orb
mov
shl
inc
xor
imul
jnp
mov
stos
mov
inc
aaa
es
push
jmp
stc
lods
jns
ss
inc
mov
out
mov
cld
push
jmp
pop
loop
int3
jno
xor
jnp
pushf
stos
mov
jmp
and
loop
push
decl
repz
jecxz
cmpsl
aad
add
jb
xchg
add
push
rclb
xlat
jge
cli
inc
jmp
push
add
and
lcall
fs
inc
sbb
add
pushf
clc
and
cmpsl
add
loopne
dec
movsl
insl
out
mov
pop
xor
cli
pop
rcl
lcall
mov
adc
call
cmp
rclb
dec
mov
jmp
jmp
ret
aas
les
jne
xchg
clc
pop
jmp
int
orb
xchg
enter
jle
sbb
pop
pop
data16
and
das
adc
orb
mov
push
sub
jle
pop
ror
inc
mov
sbb
jns
push
mov
jns
mov
mov
out
insl
std
daa
jge
sbb
xchg
push
daa
push
lahf
push
jg
xchg
repz
xlat
loopne
cmp
pop
out
shl
icebp
pop
rclb
dec
test
mov
sti
divl
hlt
sub
inc
sub
lahf
mov
xchg
cmpl
pop
test
rol
xchg
cmp
fisttpll
int
pop
pop
arpl
mov
xchg
test
loope
mov
shll
loope
add
test
cld
out
psrld
int3
push
std
dec
cmp
shll
jmp
cld
and
pop
jl
or
push
sbb
xchg
decb
jl
add
lock
mov
mov
mov
sub
cmpsb
inc
xor
add
sub
add
in
adc
stos
clc
dec
test
jae
data16
es
jmp
test
loopne
inc
xlat
incl
pop
xchg
xchg
fisubs
test
mov
push
adc
popa
shl
rcrb
test
mov
push
aad
aam
add
pop
scas
loope
lds
sarb
rolb
xor
sbb
idivl
mov
sub
aaa
ds
ja
loop
shlb
sahf
push
data16
jmp
xor
xor
mov
mov
rcrb
jmp
cli
cmp
ret
mov
cmp
xor
js
cmpsb
sbb
inc
inc
lahf
in
inc
imul
sub
or
shl
outsb
lret
xorb
mov
and
mov
xchg
mov
notl
add
cmp
xchg
xor
pop
test
outsl
add
dec
add
pop
xchg
loopne
int
lock
pop
out
add
xor
add
jnp
sbb
xchg
push
into
enter
ret
pop
or
sbb
xor
in
je
out
decl
jmp
jo
stos
jge
push
xchg
aaa
add
inc
add
addl
cld
xchg
cwtl
adc
scas
sub
outsl
cmpl
out
xor
rcl
addl
inc
pushf
sbb
add
cwtl
mov
xchg
sbb
adc
push
add
bnd
xchg
into
cmp
inc
divl
movsb
push
ror
movsl
mov
jl
into
push
mov
bound
mov
mov
xchg
pusha
outsb
loop
insb
hlt
lret
addr16
xor
sbb
fimuls
fcmovnu
inc
inc
xor
out
fnsave
or
xchg
aam
pop
jge
ds
xor
pop
add
cmc
jge
daa
mov
sbb
pop
int3
ljmp
jg
push
add
dec
and
push
cmc
adc
cmp
loope
movsl
mov
mov
sbb
in
mull
jg
icebp
loope
out
xor
cli
fwait
mov
or
cs
scas
icebp
pop
add
ss
adc
stc
inc
or
mov
fcomps
xor
addr16
add
rolb
test
loope
jg
dec
add
ret
scas
mov
mov
stc
mov
add
mov
mov
sub
add
sub
mov
pop
out
fwait
pcmpgtb
mov
push
jbe
sub
stos
push
loope
imul
add
icebp
test
sbb
xchg
mov
add
inc
inc
jge
cli
dec
js
jae
repnz
push
test
xchg
sahf
scas
cmp
test
or
cmpsb
xor
adc
cld
add
lret
push
js
dec
jg
jo
adc
stos
scas
push
or
cmp
enter
test
push
ret
and
pop
adc
push
adc
dec
popa
pop
pop
cld
cmc
shll
push
ss
test
fsubrl
loope
inc
jg
je
lcall
xchg
out
sbb
mov
test
rcl
adc
sahf
movsl
or
add
mov
outsb
test
lret
mov
aam
cmc
int
aas
cld
sbb
dec
jecxz
fisubl
mov
add
fdiv
and
js
jle
flds
cmpb
jecxz
mov
ret
test
cld
hlt
ss
mov
cld
scas
cmp
out
sbb
cmp
and
out
mov
iret
xchg
dec
dec
das
sub
jmp
pusha
pusha
sbb
or
out
outsb
cmp
adc
call
cwtl
xor
fnstcw
pop
cmp
or
mov
mov
jg
jecxz
leave
adc
or
mov
push
inc
mov
test
je
jb
sbb
rol
and
in
mov
bound
mov
xchg
ds
or
cmp
shrl
lahf
jecxz
adc
or
mov
or
fisubrs
mov
mov
sarl
mov
jae
sbb
pop
mov
pusha
mov
xor
punpcklbw
notb
xor
fnsave
mov
lret
sub
sub
inc
add
int3
lret
sbb
shrb
add
pop
ret
pop
cld
mov
clc
call
pushf
fadds
push
mov
add
cld
dec
rolb
mov
add
pop
scas
sti
testb
push
hlt
xchg
fidivrs
or
iret
jl
sub
imul
aam
lock
sbb
add
sub
dec
lds
je
mov
cs
shl
ljmp
xchg
inc
lea
pop
inc
or
lods
cs
lds
sahf
xchg
pushl
stos
es
jecxz
mov
push
or
xor
pusha
push
fstpl
mov
adc
and
lds
outsl
push
mov
jne
sub
sbb
push
lods
outsb
out
pop
rolb
push
and
ret
ja
jb
mov
int3
or
icebp
lds
es
sahf
push
mov
nop
and
sbb
xor
imul
mov
ffreep
sbb
add
push
or
jmp
into
pop
ja
mov
jnp
ss
addb
jae
add
lea
sub
rorb
lock
iret
call
daa
mov
push
jg
sbb
add
popf
lock
push
bswap
add
std
inc
shr
sbbl
or
push
xchg
pop
test
call
sbb
cwtl
jg
cld
pavgb
xor
aas
jge
shll
addr16
jo
jnp
mov
pop
sub
jnp
dec
xchg
add
cmp
lret
repnz
fstl
std
rolb
std
pop
pop
test
movsl
js
int3
test
mov
dec
les
adc
lds
push
xor
pop
xor
mov
stos
add
mov
vunpcklps
ja
scas
pop
pop
mov
cwtl
xor
push
push
and
aad
push
aam
inc
stc
adcl
cmp
jmp
and
cmp
call
outsb
bound
xchg
and
xlat
lds
mov
mov
addl
mov
ret
call
push
cltd
sub
sbb
fdivrs
std
pop
sbb
or
add
sbb
fdivl
scas
inc
daa
and
lods
xchg
inc
ljmp
cwtl
and
sub
test
push
aas
push
pushf
pop
pop
jnp
push
ljmp
and
jg
and
add
inc
sbb
or
andl
imull
pop
in
mov
xchg
jle
es
push
push
jbe
cmp
stc
xchg
cs
hlt
es
dec
jbe
sbbl
inc
movsb
das
pusha
mov
jbe
arpl
fs
cmpsb
out
lret
mov
push
mov
sti
aas
std
mov
mov
mov
push
or
xchg
mov
out
movsb
mov
orl
xchg
pop
inc
add
pop
xlat
outsl
fcmovbe
inc
daa
push
xor
inc
jp
dec
insb
call
shlb
inc
icebp
shl
nop
xor
jge
test
or
jno
cmp
loope
dec
les
sub
mov
ds
add
fbld
ret
mov
out
push
cli
cmpsl
adc
add
sub
sub
inc
xlat
sub
mov
jmp
repnz
aam
add
fldl
addb
aas
mov
bound
xchg
inc
cmc
jg
sbb
and
daa
mov
add
pop
jg
sub
pop
mov
or
ss
dec
je
mov
mov
or
push
je
cmpsb
popa
mov
jbe
jne
gs
mov
or
arpl
aas
add
cld
adc
call
inc
inc
repz
inc
cmp
mov
xor
mov
movl
mov
rolb
outsb
inc
xchg
mov
push
adc
pop
orb
push
sbb
leave
lds
mov
cld
idivl
nop
adc
mov
movl
pop
cmp
dec
pop
push
sub
mov
pop
jne
or
nop
jb
pop
les
or
sub
rorl
cmp
loop
push
loope
ret
jl
rcr
adc
push
push
call
or
sbb
jp
inc
pop
pop
mov
sarl
cmp
jb
inc
out
sub
fdivp
dec
cmp
aad
enter
mov
rcr
add
into
test
inc
xchg
outsl
jmp
test
sbb
inc
in
aad
inc
jbe
push
inc
sub
and
pop
cs
sbb
mov
or
lods
out
lret
dec
rcrb
mov
movsl
rorl
xor
lock
sti
pop
je
fmull
outsb
xor
pop
movsbl
fistpl
mov
mov
cmp
pushl
xor
mov
cmp
aas
jmp
lcall
dec
loopne
sbb
testb
icebp
fistps
lret
fstl
push
in
in
into
out
mov
inc
jle
std
jmp
or
imul
negb
test
imul
inc
imul
or
clc
add
stos
dec
xchg
aaa
pop
out
data16
daa
repnz
loope
pusha
lret
test
out
cli
inc
and
lods
jmp
dec
bound
jl
and
mov
jb
jl
aaa
pop
mov
ret
clc
sahf
sarb
cmp
clc
adc
fwait
sbb
and
sub
test
mov
mov
outsb
or
cmp
lcall
sbb
fsubs
loopne
or
cmp
or
andb
lea
ret
jb
jp
mov
sahf
mov
mov
fwait
lcall
insl
inc
repnz
xor
pop
push
or
sbb
test
or
iret
icebp
adc
inc
inc
sbb
incl
lock
shll
fwait
sub
call
hlt
mov
xchg
mov
ret
cmp
call
pop
daa
push
mov
ror
call
movb
sub
xchg
ret
and
scas
jg
jl
add
dec
add
cwtl
add
cmpsb
mov
xchg
clc
mov
adc
or
out
and
aaa
popf
lea
es
outsb
and
jnp
leave
push
mov
loop
xchg
jb
call
add
inc
rorl
aas
xor
fneni(8087
sbb
clc
fsubrs
pop
jo
scas
or
adc
sub
mov
xor
and
xor
mov
loopne
test
pop
clc
add
rcrl
pop
test
mov
push
aas
add
bound
test
xor
fs
mov
add
mov
js
loop
call
idiv
add
jmp
sub
cmc
sub
loop
fdivrl
xchg
jg
and
popf
and
test
insb
sbb
push
mov
inc
sub
std
pop
adc
rcrb
incl
mov
dec
jg
push
pusha
lret
dec
cmp
adc
loop
loop
pop
mov
mov
ljmp
add
inc
inc
push
push
aad
data16
add
mov
hlt
cmp
scas
rcrb
cmp
pop
jmp
aaa
rclb
push
clc
rcll
clc
inc
addl
pushf
mov
clc
inc
std
ret
xor
sub
push
lock
mov
dec
andb
ret
pop
ljmp
adc
into
jmp
pop
xor
jmp
push
inc
mov
pop
fists
sub
mov
mov
sbb
test
mov
jle
add
enter
pop
cmp
mov
fmuls
test
fisttpl
push
sub
pop
pushf
idivb
push
add
add
je
and
push
sbb
or
repz
das
pop
loope
inc
pop
jg
fidivrs
xor
stos
stos
adc
dec
adc
push
lods
xchg
sbb
add
inc
loop
add
in
add
pop
jns
pop
jge
jmp
fcomps
inc
sbbb
sub
cmp
js
stos
mov
mov
mov
inc
clc
sub
icebp
movsb
cld
arpl
xor
das
test
bound
stc
cmp
add
loop
into
push
into
leave
sti
pop
cmpl
push
pop
push
sub
out
add
fs
mov
inc
ficoml
clc
jnp
jl
push
dec
inc
jecxz
clc
or
mov
sbb
dec
xchg
inc
loope
mov
or
in
jo
sbbl
je
shrl
lock
xchg
cmc
loopne
lret
xor
adc
pop
mov
repnz
add
xorb
sbb
out
test
and
shl
mov
mov
lock
movsb
scas
mov
push
cmp
jno
adc
std
fwait
test
jle
fidivrl
and
sbb
add
pop
into
pop
add
in
lret
cli
lret
or
notl
rorl
add
loopne
sti
sti
shrl
testb
movsb
cmpsb
jno
xor
mov
mov
cmc
pop
out
mov
mov
iret
into
test
lock
mov
pop
jne
xchg
push
test
lock
rcrb
cmp
out
jb
pop
inc
mov
xor
xor
andb
arpl
pop
outsl
inc
daa
mov
adc
enter
inc
push
mov
sahf
push
aam
iret
fst
xor
cmp
ss
sub
mov
in
pop
stc
add
adc
mov
inc
ds
data16
stc
or
jge
sub
inc
loope
neg
push
lock
outsl
cmpl
mov
pop
test
loopne
mov
adcl
pop
xchg
ret
cltd
dec
inc
xor
cld
cmp
xor
dec
inc
iret
adc
cli
push
sbb
or
rcl
jg
push
cwtl
clc
xchg
dec
add
fcmovnu
ljmp
mov
xchg
cmpb
into
xchg
rcl
jb
push
xlat
push
sbb
stc
add
das
scas
mov
cli
filds
sub
push
pop
lret
xchg
insl
pop
mov
data16
inc
mulb
jmp
xchg
sbb
cmp
bound
andl
adc
mov
cmp
aad
stos
nop
jo
pop
les
cmp
in
xchg
ds
into
cmp
inc
and
xor
mov
sahf
jns
in
mov
xorl
movl
sarl
outsb
out
sbb
xor
cmpsb
inc
mov
adc
addl
mov
incl
inc
cmp
repz
icebp
inc
outsl
icebp
pop
scas
sbb
stos
mov
push
pop
mov
rcr
cmp
pusha
int3
inc
add
adc
add
mov
dec
leave
xor
mov
test
mov
inc
aas
sub
gs
cmpl
rorb
fadds
lock
push
adcl
icebp
mov
popl
enter
add
test
out
dec
popf
dec
je
sbb
jge
cs
imul
popa
rcll
insb
sbb
inc
loope
dec
jb
imul
mov
inc
dec
lods
mov
cmpsl
dec
inc
shl
add
and
sub
add
stc
sub
inc
fwait
inc
cmp
and
dec
das
insl
mov
jo
gs
mov
dec
les
ja
or
imul
je
jmp
pop
pop
or
push
divl
das
loop
lea
mov
insb
xchg
jge
call
or
add
adcl
pushf
mov
cs
bound
push
std
inc
sub
je
andl
jecxz
imul
jmp
dec
mov
in
lret
dec
sub
enter
cmpsb
adc
and
mov
rcrb
mov
out
test
loope
int3
popf
ss
adc
call
sbbb
or
add
loope
pop
clc
push
and
loope
cmc
inc
pop
pusha
in
pminub
enter
enter
cmpsl
lods
inc
xor
lods
loop
in
add
sbb
jge
xchg
or
and
lret
dec
inc
inc
je
iret
dec
icebp
inc
and
mov
push
movsl
ja
icebp
je
mov
xor
fistpl
shll
push
mov
inc
adc
jno
iret
inc
jne
lods
cwtl
std
cmc
xor
in
cmp
jge
mov
jl
andb
test
cmp
dec
sti
into
xor
imul
outsb
cwtl
xor
jle
or
mov
filds
xor
ret
adc
jne,pn
shl
mov
int
ss
xchg
push
les
aas
lock
frstor
dec
or
imul
push
repnz
or
and
mov
bound
xor
add
mov
add
and
or
pushf
dec
jmp
mov
mov
xor
pop
pop
test
push
push
sbb
add
das
clc
and
or
mov
imul
and
cld
rorl
rcll
test
stos
shll
addl
into
or
xchg
popf
xchg
popa
mov
adc
mov
pop
inc
callw
mov
push
sub
dec
repnz
adc
mov
jbe
push
lds
mov
sub
mov
jecxz
jg
jno
jno
or
mov
daa
jae
and
mov
xchg
xor
lret
adc
repz
fadds
imul
les
sahf
shrb
add
ss
loopne
popf
jge
stos
ds
enter
ret
sbb
xchg
mov
jnp
sub
cmp
push
add
cmp
xor
mov
sbb
xor
xor
test
pop
cmp
jmp
ds
loopne
xchg
cld
daa
call
mov
pushf
leave
or
sti
lea
imul
loopne
adc
jge
lea
xchg
add
pop
jo
dec
cmp
inc
ja
mov
subl
pop
movsl
mov
push
pop
cmpsl
lahf
shrb
and
sbbl
aad
sub
push
xchg
outsl
cmp
mov
enter
add
dec
jns
cli
scas
adc
jecxz
gs
sbb
aad
sbbl
inc
and
and
and
jo
push
ret
add
xchg
popa
call
xchg
mov
clc
js
out
sbb
push
fwait
das
cmp
sbb
and
dec
add
rorl
lods
scas
fbstp
jnp
cmc
inc
pop
push
pop
lret
xchg
xchg
mov
dec
adc
enter
loope
and
cwtl
test
mov
sbb
add
loop
arpl
fldl
sbbb
fadds
sub
push
mov
xor
ret
sbb
int
bound
ret
adc
loop
cmp
xchg
rorb
sarl
cmpsl
popa
imul
inc
pop
test
into
jne
enter
mov
and
sbb
dec
or
inc
leave
lock
xlat
xchg
je
sbb
icebp
lods
sub
push
out
sub
dec
adc
ret
inc
insl
aaa
xor
stos
fcoms
add
xchg
dec
mov
fsubl
daa
pop
rolb
incl
aad
in
loopne
pop
fs
fdiv
add
adc
in
adc
outsl
mov
addr16
pop
mov
ljmp
mov
les
jae
dec
fldenv
pop
inc
repz
jno
jne
add
jno
shlb
cmp
jg
lods
ret
lea
sbb
mov
test
pushf
xchg
jg
or
add
movsb
test
sbb
or
mov
and
lcall
test
fbld
bswap
lock
int
scas
add
jns
nop
movsl
push
xchg
imul
push
cmp
das
or
push
pop
sub
das
mov
stc
xchg
test
cmp
imul
or
xchg
adc
push
mov
pop
xchg
mov
inc
test
dec
cld
mov
imulb
daa
jp
ret
and
xchg
jae
hlt
or
mov
dec
jns
mov
dec
aas
arpl
test
cmpl
popa
cltd
pop
loop
fimuls
aaa
mov
or
sbb
mov
add
jl
lea
and
jmp
out
pop
mov
loope
cltd
push
xchg
out
xlat
js
sub
mov
or
add
xchg
xchg
sti
and
inc
lret
xchg
inc
mov
outsl
pop
insl
jo
call
pop
roll
aam
jle
sub
jnp
aas
or
mov
out
or
in
hlt
outsl
cld
mov
mov
cmp
xchg
fiadds
insb
sbb
in
lea
cmp
or
ret
xchg
lods
in
cmp
or
or
jmp
jne
xor
or
mov
jbe
mul
in
pop
mov
icebp
mov
and
int
mov
pop
out
orl
jb
add
lock
ret
lret
and
inc
fsubrs
and
pop
mov
and
dec
xchg
pop
sti
adcb
inc
xchg
cltd
add
mov
loop
das
imul
rolb
loop
xor
pop
sbb
pop
nop
mov
std
pop
xchg
mov
outsb
daa
adc
mov
aas
mov
clc
add
jo
mov
mov
pop
loope
push
fwait
cmp
inc
shrb
pop
stos
sub
xchg
es
pop
repz
push
call
sbb
ljmp
jge
jmp
gs
pop
hlt
xchg
lea
aam
cmp
xchg
inc
pop
or
flds
dec
sbb
inc
ljmp
jp
or
aas
add
xchg
xchg
cltd
adc
clc
and
cmpl
out
dec
pusha
test
add
fcoml
les
lock
or
mov
test
xchg
popf
js
push
mov
or
and
and
mov
jo
jno
stos
or
jmp
and
movsb
sub
add
pushf
cmpsl
mov
iret
jo
jp
cmp
or
mov
stos
xchg
sbb
push
js
dec
add
loopne
sub
enter
lods
fldcw
lahf
imul
dec
mov
cli
inc
int
pop
movsb
mov
adc
push
xor
adc
jmp
sub
push
jmp
ds
sub
stc
jmp
leave
and
repnz
imul
enter
add
xor
loope
fdivs
add
shl
cltd
cmpsl
cmc
mov
cli
pushl
pop
lea
add
cmp
or
scas
mov
adc
push
aas
inc
jmp
adc
mov
or
jbe
mov
or
adc
jbe
popa
dec
mov
fbstp
lea
mov
test
jae
inc
out
lock
cmp
jmp
jecxz
in
inc
cmp
cs
sbb
sub
mov
xchg
sbb
inc
repz
in
xor
pop
int3
inc
test
scas
xchg
es
incl
xchg
bound
lea
dec
cmp
mov
push
jb
xor
arpl
and
mov
adc
xor
mov
ja
shlb
test
mov
mov
clc
jp
call
pop
pop
pop
adc
cli
aas
sub
ret
mov
mov
aam
mov
insb
out
xor
inc
iret
mov
dec
sti
or
mov
dec
scas
cltd
lock
cmp
or
adc
hlt
adc
addr16
stos
jmp
cli
pop
add
lret
shll
cmp
mov
mov
pop
cmp
popf
push
loope
sub
add
js
mov
repz
jno
stos
out
je
loope
mov
xor
adc
out
das
imul
add
jmp
loope
push
adc
jb
sub
cmp
inc
pop
xchg
ficompl
fucomp
mov
shlb
or
ss
addb
inc
test
push
sbb
jne
adc
xor
dec
mov
sub
ss
daa
outsl
gs
push
fsts
add
jae
rorl
pop
ret
mov
jl
mov
push
mov
clc
aad
sub
ret
outsl
out
repnz
cmpsl
dec
mov
dec
xlat
sti
pop
ljmp
xor
pop
aam
lret
pop
sti
iret
ror
jecxz
xor
mov
lea
mov
mov
mov
jge
mov
add
shlb
pop
stos
xlat
dec
outsb
insb
cmpsl
lret
push
pop
inc
push
sbb
cmp
stos
pop
enter
imul
adc
arpl
and
xor
cwtl
test
dec
and
incl
push
std
cld
inc
pushf
mov
pushf
dec
or
mov
pop
mov
das
mov
or
outsb
jecxz
ja
fstpl
mov
adc
fimuls
add
sahf
push
cltd
xlat
pop
mov
js
orb
scas
stos
js
push
pushf
sbb
inc
in
add
out
daa
cwtl
adc
pop
or
sbb
dec
mov
pop
leave
add
jne
test
icebp
int3
in
aaa
jecxz
push
jg
xchg
push
xlat
cmp
inc
push
ljmp
int3
push
pop
lods
out
sbb
jne
shrb
test
lock
imul
pop
pop
roll
push
aas
enter
jecxz
mov
fiaddl
sbb
fwait
mov
neg
xchg
aad
dec
fnsave
sbb
rclb
packsswb
inc
jge
inc
mov
sbbl
adc
in
xor
bound
ja
jp
subl
dec
or
push
mov
and
sarb
adc
jne
repz
xchg
out
shl
mov
or
sarl
or
roll
js
ret
adc
sbbb
in
sbb
pop
aam
push
push
negl
and
stc
jno
push
lret
cmpsb
mov
pusha
push
push
decb
mov
jns
jecxz
push
xor
mov
add
movsb
daa
adcb
adc
imul
movsb
dec
popf
cmp
pop
sahf
cmp
popa
sub
dec
inc
repz
bnd
mov
or
pop
adcb
mov
test
int
fstpt
lock
cmp
fcomp
and
mov
hlt
popf
dec
rcrb
inc
mov
jo
sbb
xchg
mov
cmp
sbb
dec
mov
shl
add
or
sub
arpl
clc
jae
cmp
or
dec
loop
movb
test
jmp
cmpsl
pop
int3
inc
out
scas
mov
xlat
xor
mov
sbb
fs
lods
outsb
pop
in
mov
rclb
popa
idivb
jno
inc
sub
sub
mov
stos
aaa
xchg
cltd
test
push
jns
mov
stos
xchg
jb
xchg
ljmp
pushf
sub
loopne
es
jo
sub
push
lahf
arpl
cmp
cltd
icebp
je
jbe
arpl
lds
add
push
dec
and
jl
sti
je
pop
mov
jno
jb
rorl
add
rcrb
loopne
mov
adc
pop
inc
in
ret
aas
mov
inc
xchg
stc
sbb
rcl
xchg
xor
imul
add
xchg
xlat
shlb
call
fwait
call
js
dec
or
aad
cmp
ret
add
and
loope
test
sbb
jns
mov
shll
pop
out
sahf
jge
jge
push
and
mov
mov
dec
jmp
daa
push
cmp
cmp
xchg
daa
imul
outsl
loope
sbb
add
inc
jmp
aaa
add
cs
adc
push
xchg
shl
insb
hlt
aas
push
add
jmp
adc
mov
add
test
fldenv
push
stos
loope
addl
cmp
sbb
fwait
xchg
in
and
or
shll
jge
push
nop
std
cmp
stos
mov
sbb
rcrl
addl
popa
dec
pop
test
loopne
mov
jp
push
loopne
jmp
cs
push
and
lock
out
and
fbld
push
mov
sbb
inc
popl
mov
pop
movsb
xor
add
rcrl
andl
dec
pop
fstps
add
es
pop
xchg
add
adcl
hlt
xor
mov
or
cmpl
and
cltd
pop
out
pop
sub
dec
add
aaa
insl
adc
xor
dec
inc
sbb
ret
jb
fwait
xor
or
lock
aad
jmp
mov
and
cmp
clc
mov
subl
jae
lea
aam
sbb
push
mov
pop
jge
lock
dec
pop
sub
cmp
cmp
outsl
adc
add
mov
xorb
and
pop
negl
dec
and
cltd
cmp
icebp
sbbb
cmpsl
mov
nop
sub
inc
xor
and
jo
and
cmp
push
test
inc
negl
mov
push
dec
cmp
outsl
push
add
arpl
add
xor
xor
scas
dec
mov
outsl
inc
mov
xchg
aaa
lock
mov
sub
stc
rcl
sub
pushf
pop
cmp
movsl
add
fs
subl
pop
dec
push
imul
lods
orb
adc
pop
iret
mov
add
fcmovnu
xchg
ret
sub
mov
mov
pop
sub
bound
or
rolb
insl
sbb
pusha
cld
js
popa
add
mov
cmpsl
jae
mov
dec
sub
lcall
shl
popf
lcall
aas
xchg
mov
push
lea
pop
mov
jl
pop
pop
sbb
or
in
xchg
movb
roll
mov
pop
push
shrl
mov
rorl
es
movsb
out
mov
cli
lods
popa
pop
adc
icebp
xor
ljmp
push
mov
shlb
ret
mov
popa
xchg
in
cmc
jg
jmp
scas
aam
loop
mov
jno
jbe
add
xchg
cmp
dec
jb
push
inc
in
push
cld
push
stos
enter
addl
sahf
jmp
jl
xchg
cmp
fcmovb
mov
mov
lcall
jecxz
push
sub
xlat
enter
add
dec
movsb
pop
or
add
push
idiv
movsb
pop
and
or
inc
es
outsb
jle
push
mov
add
xor
xchg
and
jp
xchg
std
add
jnp
inc
mov
push
inc
or
stos
dec
mov
scas
test
shrb
and
sarb
test
xlat
loopne
pop
cmpsb
or
outsl
loope
popa
bound
shll
lret
je
cld
add
int
jns
mov
loop
loopne
and
dec
push
xchg
mov
loop
aas
fwait
lahf
ficoms
inc
sbb
mov
add
addb
jne
push
jb
add
jl
out
mov
out
xlat
std
sbb
nop
or
movsl
clc
inc
aaa
rclb
cmp
dec
add
pop
mov
push
mov
cmp
fwait
cmpsb
push
xchg
xor
adc
aam
stos
sub
test
push
sysret
sbb
cmp
mov
icebp
leave
idiv
or
mov
sarb
ficoms
loop
or
jg
das
and
cltd
loopne
mov
lret
imulb
fbld
pop
jo
cmc
mov
cmp
pushf
pop
cld
iret
aad
push
shl
loopne
in
cmp
sbb
mov
shlb
dec
xor
sbb
jbe
ficomps
leave
cli
sub
xchg
cmp
icebp
jno
in
mov
sbb
fs
popa
mov
pop
push
aam
xor
es
int
into
ret
push
mov
and
scas
clc
mov
sub
movsb
ljmp
fistpll
movsl
mov
push
iret
inc
sarb
call
add
pushl
dec
xorb
push
stos
push
ja
xor
sbb
shr
test
ret
dec
clc
xor
push
sbb
decl
in
lea
outsb
enter
jmp
ret
xchg
lods
rcrb
loope
inc
cmp
mov
jg
or
insb
and
mov
jbe
scas
fsubr
lea
out
mov
cwtl
mov
sub
add
sbb
aad
aam
adc
outsb
and
lahf
push
int3
inc
int
sti
mov
stos
push
repz
push
cmpsl
into
imul
add
enter
fistpl
and
push
xor
mov
lahf
insb
mov
les
add
jns
inc
mov
pusha
or
jb
shll
cltd
cmp
jge
push
cmp
ret
lods
cmc
jge
cwtl
movb
mov
mov
jecxz
jle
int3
imul
enter
aad
mov
and
xchg
sub
rcll
mov
sti
lcall
test
outsl
jle
jecxz
or
ficoms
test
mov
mov
aad
mov
test
pop
fs
loopne
xor
jnp
lret
sub
sbb
inc
daa
pop
add
xchg
sbb
push
add
popa
test
fsub
push
cmp
cli
dec
aam
aad
xchg
pop
push
pop
or
and
push
loop
pusha
xchg
dec
pop
mov
cld
out
fucomip
ja
mov
jl
push
outsl
loopne
outsl
jl
out
jno
sub
insl
test
xchg
mov
shlb
cmp
hlt
cmp
sbb
shll
loop
push
adc
inc
test
ds
adc
arpl
sbb
xchg
mov
das
mov
push
add
out
sbb
pop
lods
push
sbb
incb
insb
adc
lahf
mov
lods
popl
xor
inc
incl
cld
xchg
orb
and
jo
pop
dec
pop
stc
pop
adc
mov
lock
mov
shlb
incb
clc
mov
notb
ret
adc
inc
imul
lods
push
fwait
dec
inc
loopne
fmuls
stos
mov
adc
sub
xor
mov
lock
loope
mov
pop
push
clc
das
or
and
pushf
mov
sahf
pop
cltd
repnz
fwait
call
nop
mov
adc
fs
rcll
sbb
popf
sub
shlb
filds
test
sub
sbb
test
adc
xorb
mov
sbb
push
bnd
push
lock
icebp
orb
je
iret
inc
scas
push
or
mov
push
fwait
in
popa
or
inc
out
mov
and
cmp
cmp
out
and
iret
jae
pop
dec
push
pushf
push
hlt
xchg
in
cmp
and
xchg
mov
mov
or
mov
rcrl
fcompl
sbb
in
aad
inc
mov
testb
aaa
sahf
cmpsl
sahf
clc
push
iret
and
add
int
test
add
add
push
add
rorb
ljmp
cmp
pinsrw
int3
call
xchg
test
jo
jnp
sub
clc
divl
cld
xchg
lds
nop
pushf
shrb
push
lock
lods
out
mov
mov
dec
ljmp
push
inc
bound
add
jp
adc
push
cli
xor
fmuls
cli
mov
and
arpl
clc
data16
sbb
les
imul
xchg
shlb
lea
push
daa
daa
jmp
decl
or
aam
insl
mov
sub
pop
dec
movsl
rolb
push
test
out
add
mov
out
sbbb
jg
pop
je
push
sbb
pop
jo
in
push
in
sti
add
jbe
shrl
push
pop
sbb
pop
pop
enter
and
sbb
mov
out
add
inc
jmp
popa
pop
cmp
and
shr
push
jb
ljmp
sbb
fistps
pop
movsb
hlt
cmp
add
js
xchg
add
pop
stc
int
xchg
dec
add
add
inc
fiadds
sub
js
or
mov
sbb
jnp
mov
aam
push
fdivs
add
lods
adc
mov
adc
ds
iret
sub
mov
or
mov
jp
push
daa
int3
in
add
mov
rcl
inc
out
shlb
inc
mov
jb
pop
sbb
vpsrld
loope
aaa
shlb
inc
xchg
repnz
add
mov
pop
es
adc
push
adc
mov
jg
fildll
inc
or
adc
xor
dec
addb
xor
pop
nop
adc
mov
xor
cmp
jb
fisttpl
mov
pushw
xor
inc
ret
shll
adc
pop
nop
fsubs
sbb
mov
xor
mov
mov
ja
or
mov
scas
std
mov
cld
andl
cli
out
arpl
insl
mov
xor
jbe
sar
pop
icebp
adc
cmc
adc
xor
shrb
jle
lcall
sahf
sub
adc
clc
cmp
mov
and
and
mov
jp
xor
mov
icebp
aas
adc
push
dec
repnz
mov
decb
filds
rcrl
iret
popa
or
mov
mov
and
clc
xchg
or
lret
icebp
scas
and
sub
sbb
shlb
dec
inc
bound
inc
shlb
xlat
stc
daa
rcl
lea
aas
mov
mov
fisttpl
incl
mov
daa
jl
dec
fwait
mov
arpl
aaa
inc
lock
push
or
jg
iret
add
add
bound
or
mov
mov
xchg
and
arpl
test
or
ret
aas
sahf
fwait
scas
add
add
imul
aam
das
subb
cmpl
mov
ret
leave
aas
or
movsl
mov
sbb
jno
push
loop
jecxz
cmpb
adc
in
call
clc
cltd
test
xorb
pop
sub
stos
lea
ret
adc
test
xchg
out
in
ja
das
mov
xchg
or
movl
push
hlt
stos
sub
fldl
pop
xchg
lock
lahf
out
lock
repz
fdivl
pop
loope
mov
xchg
pop
or
mov
cld
xor
jns
das
mov
or
dec
mov
iret
ret
stc
jae
in
mov
and
dec
xchg
movb
test
mov
mov
lds
hlt
add
jbe
adc
mov
insb
data16
pop
stc
adc
aas
aas
adc
std
mov
and
loop
ret
xchg
shl
mov
hlt
xchg
and
or
push
leave
dec
out
jns
xor
loop
xlat
jp
dec
les
cmp
pop
imul
flds
nop
rol
sub
fldenv
push
and
cmc
and
cmp
insb
xor
daa
test
pusha
push
mov
sub
or
mov
outsb
sbbb
add
aas
daa
jns
out
pop
xor
mov
nop
addr16
cs
pop
loopne
pop
lds
outsl
lock
push
adc
movsl
pop
add
push
xchg
mov
sbb
mov
mov
xor
and
shrb
xchg
add
test
icebp
cld
adc
testb
mov
xor
inc
jg
aas
jmp
xlat
add
inc
nop
mulb
add
cmpl
xor
push
jp
or
xor
cmp
xchg
cmp
cmp
stos
push
and
push
call
mov
jl
inc
dec
adc
mov
sahf
add
adc
add
iret
scas
xor
push
js
mov
outsb
dec
aas
mov
enter
add
and
mov
sar
pop
sub
dec
xchg
cmp
ja
or
mov
scas
sarb
insb
addl
push
or
adc
cli
mov
repnz
cli
mov
lahf
in
mov
les
pop
adc
sarb
dec
aad
push
clc
push
cmp
mov
add
bound
adcl
decb
ret
repz
dec
add
shl
fistl
test
lcall
adc
dec
adc
pop
jl
mov
mov
push
jbe
sub
pushf
xchg
push
test
mov
jns
decb
icebp
dec
mov
add
sub
mov
jmp
adc
repnz
add
aas
jmp
adc
mov
sub
sbb
sbb
fdivr
adc
xor
add
cld
xor
fmull
or
into
ja
jb
cmpsl
inc
mov
inc
scas
mov
les
push
and
sti
loopne
arpl
sbb
add
cmpsl
push
ret
sub
pop
mul
mov
and
mov
add
mov
cvtps2pi
leave
xchg
aad
and
jae
stc
mov
hlt
testb
outsb
push
xchg
and
mov
orb
jp
mov
rcrb
fnsave
sub
outsl
in
sub
pop
jge
inc
inc
pop
pop
sub
push
push
enter
pusha
rcl
cmpsl
adc
pop
aaa
mov
xchg
push
adcl
mov
dec
scas
push
lock
mov
mov
jo
jg
lods
aas
subl
cmp
aaa
mov
imul
repz
je
into
xchg
pop
dec
sub
xchg
sbb
lahf
pop
fs
push
jle
ds
leave
aam
cs
pop
fwait
push
shl
loop
lock
dec
js
jle
adc
int3
outsl
and
jnp
mov
xor
test
mov
jmp
mov
push
in
stc
shlb
sbb
cmc
pop
std
add
ss
add
ss
lods
add
adc
mov
rcrl
cmp
xor
ljmp
nop
pop
mov
cmp
orb
pop
add
xchg
scas
push
pop
into
xor
cmp
jge
xchg
pushf
fs
mov
push
adc
icebp
sub
jae
lock
mov
fimull
inc
mov
hlt
pop
lahf
pop
mov
inc
test
pop
push
sub
push
add
mov
dec
jne
lret
mov
adcb
enter
mov
jle
mov
sbb
xor
pop
jg
pop
mov
enter
ja
jae
ret
pop
fs
add
add
jle
aad
push
loop
xchg
push
add
mov
mov
lock
inc
adc
outsl
cli
or
dec
dec
andb
xchg
loope
dec
bound
adc
jecxz
or
or
jecxz
sbbl
add
scas
mov
sbb
mov
add
imul
xor
pop
enter
sbb
adc
xchg
lret
mov
mov
ret
and
pop
popf
scas
icebp
std
ljmp
in
fwait
outsb
mov
ljmp
lahf
insb
mov
call
mov
jge
stos
dec
movsl
mov
cmp
and
push
xor
das
out
cmp
pop
add
leave
cs
popa
mov
mov
or
xorb
mov
dec
add
push
mov
push
daa
push
and
movsb
cmc
in
inc
enter
lcall
sbb
ret
mov
ud0
push
orb
pusha
fbld
jl
setge
fistpl
jb
mov
loopne
jae
push
jae
mov
jnp
xorb
cs
nop
lock
movsl
lock
jge
inc
cld
scas
inc
xor
push
cmp
inc
sub
jg
mov
mov
loop
lea
lcall
jb
mov
lods
mov
dec
push
lock
js
adc
adc
and
jg
stos
mov
popa
inc
std
add
xchg
loope
or
fadds
mov
ljmp
cmp
sub
pop
fs
gs
scas
gs
sbb
stc
xchg
mov
pop
cmp
lcall
dec
test
out
jno
sbb
add
adc
leave
mov
icebp
mov
cmp
insb
mov
mov
or
test
test
es
or
lods
cmp
out
mov
mov
jg
scas
jmp
mov
add
cmc
into
lret
ds
jnp
in
mull
orl
inc
jo
pop
lock
popa
pusha
push
adc
fdivr
sub
outsl
sub
lret
jp
insb
push
inc
add
sub
andb
cmp
cld
inc
clc
jnp
cmpsb
gs
fildl
mov
outsl
or
cli
insb
subl
lret
sbb
ljmp
aad
jge
sbb
dec
mov
inc
add
and
pusha
push
pushf
cmp
inc
fistpll
mull
stos
push
sub
ja
test
add
mov
ficomps
dec
in
shlb
mov
xchg
mov
insl
mov
pop
add
push
or
mov
cmpsb
fstps
test
push
lret
mov
lahf
jo
rcll
push
in
rorb
mov
mov
pushf
mov
fstpl
mov
push
mov
jb
add
push
pop
push
incb
shlb
jle
mov
insl
test
sar
xchg
xor
cli
dec
jne
add
and
pop
push
hlt
mov
das
outsl
jp
je
add
mov
loopne
out
cmpsb
fmuls
jg
ficoml
jo
xchg
ror
xchg
sbb
shl
or
je
jecxz
das
fs
or
adc
push
push
push
pop
lock
sub
pop
ljmp
das
xor
mov
mov
push
pop
sbb
sar
cmp
pop
add
jp
mov
cmp
sbb
lds
push
loop
rorb
fnsave
or
add
fisttps
test
xchg
jmp
push
adc
add
addb
cmp
into
imul
rolb
adcl
call
inc
mov
stos
stos
mov
rorb
mov
or
test
adc
or
out
inc
test
cmp
lahf
and
jg
xchg
pop
adc
push
push
hlt
xchg
mov
jp
xor
jp
sbb
jb
pop
loop
aam
out
out
icebp
sbb
mov
push
or
cltd
arpl
je
gs
sbb
cmp
adc
sbb
mov
mov
loopne
pusha
or
or
cmp
lods
fsubrs
and
les
jecxz
loopne
inc
add
jnp
clc
sbb
add
scas
les
pop
sub
pop
xor
test
int
jle
shrb
xor
lahf
clc
scas
mov
xor
fisubrs
mov
xor
fdivrs
mov
pop
jbe
outsl
sub
push
jg
mov
shrb
sti
psrad
or
sub
imull
mov
sbb
mov
std
movsl
jno
mov
ret
sti
call
sub
xor
por
push
adc
test
cmpsl
pop
push
imul
mov
nop
ljmp
add
xlat
mov
fdivl
jns
fcoms
loope
mov
fstpt
dec
fistl
movsl
outsb
loopne
lcall
aad
jg
fsubr
add
cs
or
mov
pop
and
ja
popa
jecxz
sub
ja
adc
jae
sub
jl
add
inc
clc
iret
jp
xchg
or
loopne
imul
dec
fistpll
sahf
insb
pop
add
sbb
dec
or
xchg
pop
jmp
fdivrs
pop
ret
jo
scas
mov
inc
js
popa
add
add
icebp
mov
fidivs
add
jb
incl
adc
mov
je
test
jbe
outsb
xchg
lock
adc
das
jb
add
mov
mov
hlt
stos
sub
pop
pop
int3
cmp
std
rcrl
test
cmp
xor
movsb
test
dec
mov
add
mov
pushf
dec
pushf
sub
roll
mov
lcall
add
inc
popf
push
data16
pop
mov
dec
dec
adc
imul
xchg
push
call
dec
ret
jl
jg
js
mov
daa
add
cmp
cli
cmpsb
fmul
mov
cld
xor
or
lock
aaa
fcomip
stos
pop
fs
mov
test
jns
adc
js
cmp
pop
mov
int3
cmpb
mov
loope
xchg
cmp
xor
push
loop
inc
es
and
cmc
dec
loopne
pop
cld
pop
rorl
add
dec
cmp
lcall
js
test
outsb
hlt
int3
xlat
xchg
jo
data16
xor
mov
or
ret
cmpsl
rorb
mov
cld
scas
dec
fadds
xlat
fdivrp
cmpsb
jecxz
lea
clc
shl
jle
add
cmpsb
mov
inc
xor
inc
cmpsl
popa
mov
jnp
xchg
shrl
mov
inc
cld
add
loop
and
pop
mov
jle
out
sarb
add
adc
push
in
movsb
nop
cmp
xor
pop
inc
push
bound
ret
mov
lock
mov
or
loop
std
xorl
adc
sbb
xchg
xchg
js
mov
jno
and
movsl
mov
das
mov
adc
jae
rolb
ss
mov
mov
pop
and
and
adc
cmp
in
popf
imul
sahf
dec
clc
sbb
in
or
les
or
and
pop
pop
mov
ljmp
mov
and
cmpsl
push
dec
or
mov
dec
or
sub
inc
xlat
jg
rcrb
fistpll
lods
ljmp
scas
into
shl
mov
mov
sbb
mov
mov
rclb
popf
test
mov
repz
jg
mov
inc
add
lret
fsub
pop
movsl
pmuludq
push
and
lods
adc
add
loope
cltd
das
test
push
jge
ret
jmp
push
mov
clc
aaa
xchg
lea
out
aas
rcr
pop
ret
jno,pt
fistpll
push
adc
inc
mov
js
js
loopne
mov
fdivrs
jb
add
inc
adc
push
lds
xor
sbb
test
xchg
dec
sbb
lock
cmp
jo
dec
push
push
adc
cmp
jo
xor
push
mov
xor
scas
and
outsb
outsl
sub
jle
xor
inc
insb
and
lret
scas
mov
fidivrs
mov
mov
xchg
mov
jmp
pop
test
int
fsubp
dec
jo
pop
xor
pop
sbb
iret
jne
pusha
jp
jg
hlt
push
lahf
stos
loopne
jge
inc
fstps
cmp
mov
daa
mov
loopne
push
mov
mov
ds
paddb
enter
jns
adc
mov
sub
jmp
cmp
sbb
das
cmpsl
push
out
mov
jo
sub
ljmp
mov
inc
test
adc
jb
ds
cltd
pop
sub
out
lock
repnz
js
outsl
roll
and
xor
cmp
mov
xchg
nop
cld
inc
xorl
pop
push
ficomps
xchg
add
pop
out
mov
fldl
adc
pop
sub
jg
mov
cmp
cs
mov
xchg
adc
push
lock
jmp
inc
and
cmc
or
sub
fs
ret
xor
gs
in
int3
mov
mov
incl
or
movsb
fistps
outsl
sbb
jle
pop
pop
or
call
mov
push
test
jle
lock
jae
rol
insb
pop
cmp
outsl
xor
add
mov
lcall
mov
jae
pop
or
aas
dec
jo
ss
mov
not
rcr
shrl
and
or
xchg
shlb
loop
or
jecxz
idivb
test
and
push
add
outsb
inc
add
add
lods
outsb
mov
cmpsl
inc
test
sbb
mov
xchg
pop
negb
jbe
les
or
push
shll
sarl
mov
lods
out
or
inc
cmp
pusha
rorb
ret
push
inc
fdivrs
jne
lock
xor
cli
or
ss
push
notl
sbb
outsl
aaa
ret
enter
enter
call
leave
jns
test
fidivrs
pop
popf
and
jbe
fbstp
add
mov
lock
imul
stc
stos
in
dec
inc
jnp
sub
xor
in
enter
addb
inc
pop
scas
and
and
inc
push
sub
cmp
push
and
xchg
push
cmp
jmp
mov
or
push
ficoml
aaa
cmp
cmpb
dec
push
or
pop
fnstsw
push
push
ficompl
adc
test
leave
push
or
sub
ds
and
adc
outsl
lret
arpl
lock
add
inc
sbb
cmp
push
das
mov
pusha
aad
jae
fnsave
cmp
sahf
mov
add
ret
aas
cs
add
enter
mov
rsm
fwait
push
add
test
push
ljmp
repnz
movq
cmp
inc
repnz
cli
test
repz
test
dec
pop
popa
push
inc
add
jg
cmp
fstpt
shlb
add
das
mov
daa
loope
movb
dec
xchg
mov
xchg
pop
aaa
dec
jg
add
add
xor
clc
dec
mov
cmpsl
or
lret
lock
out
mov
mov
adc
push
les
rcrb
mov
lds
sbb
pop
clc
out
inc
and
loop
fdivrl
into
jge
xchg
dec
inc
out
ja
daa
adc
inc
sbb
out
add
insb
sub
push
xchg
sub
lahf
adc
and
rolb
sbb
fimuls
popf
jle
popf
lock
pop
icebp
and
inc
sysenter
jb
pop
mov
pushf
inc
pushf
sub
in
sbb
loop
sub
or
ljmp
mov
xor
jno
add
jp
inc
pop
stos
push
mov
adc
jge,pt
jecxz
or
call
jecxz
push
sahf
loopne
xchg
ljmp
or
nop
ret
pop
clc
xchg
push
jecxz
jnp
pop
xchg
inc
jae
mov
sbb
cld
sbbb
mov
xor
dec
lods
test
fs
mov
je
fcom
call
loop
scas
jl
in
pop
scas
test
adc
dec
dec
lods
jl
add
addl
pop
inc
sti
popf
or
mov
call
or
lcall
jl
fsubrl
cmp
pop
inc
fucomip
js
shrl
jmp
dec
mov
mov
shrb
mov
ror
mov
in
or
jle
add
push
dec
nop
shl
add
decl
push
call
stos
and
add
push
dec
lea
or
mov
push
ret
xor
or
dec
rorb
dec
xchg
adc
scas
into
and
or
mov
pusha
jl
or
lods
and
push
dec
mov
rcrl
jb
xchg
adc
test
or
sbb
dec
lahf
push
xor
movsb
adc
aad
lea
and
call
nop
pop
call
pop
or
je
pop
dec
sub
std
test
mov
xchg
xor
mov
jl
aaa
push
pop
or
pushl
cli
mov
lahf
dec
mov
cmp
sbbl
loope
cli
cmp
in
shlb
incb
daa
sbb
mov
aas
int3
xchg
cwtl
std
lds
sbb
or
mov
aas
cmpsl
lds
mulb
jl
jl
dec
enter
fs
dec
clc
xchg
adc
sub
pushf
sub
xchg
icebp
cld
xchg
sti
mov
fildll
xor
add
xor
adc
mov
hlt
jne
push
ljmp
lods
inc
mov
push
pop
scas
insb
add
sti
mov
mov
fists
cli
call
cmp
fiaddl
pop
icebp
decl
movsl
jmp
mov
aas
push
mov
adc
or
xor
push
xlat
add
imul
pusha
push
mov
push
mov
test
das
cmp
or
inc
add
sbb
adc
es
mov
nop
outsl
leave
pop
subl
sahf
jo
stc
fldt
scas
lahf
imul
sar
out
aas
das
sub
mov
dec
or
stc
les
arpl
xchg
jg
std
call
and
loop
jg
mov
inc
lcall
addr16
push
xor
and
scas
dec
mov
cli
loop
inc
inc
fsubl
inc
cli
mov
push
dec
loop
dec
repnz
adc
push
jg
mov
cmpsb
adc
xorb
mov
adc
mov
dec
inc
cmp
xchg
cld
inc
mov
push
push
push
insl
jmp
out
outsb
add
xchg
fwait
lds
cmc
jae
or
clc
pop
xor
mov
incb
push
js
popa
inc
pop
pop
xor
add
jmp
mov
mov
cmp
mov
popl
arpl
and
adc
pop
ja
cli
ss
mov
xchg
aaa
xor
ja
sub
mov
fadd
idivl
popa
les
sub
mov
mov
lret
mov
cmp
cmc
sbb
and
mov
loopne
lahf
and
leave
je
aas
loope
push
insb
ret
xchg
mov
pop
lods
and
mov
mov
sbb
and
inc
stc
mov
loop
loope
add
sub
add
jmp
loopne
test
jp
add
cmc
and
pop
sub
jbe
jno
add
or
into
aad
out
add
and
ret
xchg
xor
lock
sbb
adc
adc
pop
jo
lahf
ja
and
and
xchg
add
enter
movsl
decl
dec
popa
dec
mov
cwtl
inc
inc
and
sbb
xchg
movsl
jne
cmp
jo
aaa
leave
iret
sarb
add
test
pusha
into
pop
call
icebp
jno
inc
mov
and
js
dec
mov
inc
es
mov
adc
shlb
pop
movsb
sbb
sbb
imul
call
lea
xchg
mov
test
inc
rcrl
inc
lods
arpl
jle
in
sub
popa
ja
imul
mov
mov
push
adc
icebp
sbb
ret
out
scas
jge
jbe
inc
sub
shrb
inc
sar
xor
push
mov
aaa
fisttps
scas
clc
xor
fwait
lock
jmp
inc
in
pop
mov
jmp
js
loopne
pop
or
dec
inc
popa
stos
mov
subl
pushf
ret
or
and
mov
pop
cld
pop
inc
nop
shll
push
lods
cmp
iret
cltd
xor
and
and
or
cli
pop
xlat
xor
addl
sbb
lods
mov
lahf
clc
mov
shll
xor
sub
jns
mov
sub
lcall
bound
adc
mov
xchg
cmp
mov
subl
clc
adc
push
mov
shlb
push
incl
sbb
loopne
mov
aas
lods
jns
scas
pop
dec
ljmp
cli
pop
ret
add
mov
fstps
cmpsb
cmp
add
daa
pop
add
pop
neg
adc
out
ret
jbe
loop
test
jle
and
arpl
pop
fisttps
dec
test
pop
aad
leave
movsl
add
popf
jnp
cmp
push
cli
imul
mov
cli
dec
outsl
lock
or
or
cmp
test
pop
push
pop
add
pop
push
and
popf
testb
push
add
xor
jge
xor
jmp
xchg
aas
add
fwait
test
adc
mov
push
and
lret
dec
orb
xchg
cmp
pop
testl
aaa
pop
jns
pusha
mov
fmuls
mov
test
xchg
loope
dec
push
cmc
xchg
ret
ljmp
sbb
ja
mov
xchg
inc
ljmp
cltd
xchg
jns
adc
add
add
lock
test
push
pop
data16
add
cmp
ficomps
movsb
sub
in
movb
pop
add
cmp
mov
add
ljmpw
stos
jne
jno
negl
lock
popf
inc
inc
loop
jg
les
sub
inc
loop
std
mov
inc
jmp
mov
or
repnz
mov
xchg
inc
popa
pop
sahf
sub
adc
mov
lods
jl
cld
inc
push
daa
hlt
loop
cmp
test
lods
cmc
es
or
cmp
ret
into
test
aas
and
mov
pop
inc
fnstsw
pop
inc
aad
movsl
dec
sbbl
sub
and
lcall
ss
cmpsb
sub
cmp
in
sbb
pop
test
pop
add
mov
addr16
sar
mov
mov
push
xchg
nop
push
pop
hlt
xor
push
fstps
aad
inc
jnp
sbb
and
shlb
out
fbld
adc
mov
jmp
lods
or
inc
xor
and
sbb
mov
pushf
mov
xchg
adc
mov
jbe
mov
push
fst
adc
cmp
gs
xor
sub
ljmp
add
or
ret
js
dec
rcl
stc
add
gs
aam
aas
sarb
adc
arpl
cltd
lret
inc
ret
pop
dec
jle
or
mov
out
mov
xchg
mov
mov
movsl
dec
mov
sub
mov
sbb
outsb
dec
mov
sbb
mov
mov
arpl
xchg
addr16
fstpl
dec
pop
into
or
pop
test
rcll
pop
clc
jno
push
lea
push
and
clc
ret
cli
cltd
ds
ret
jmp
inc
cld
push
je
fsts
in
and
insb
outsl
stc
xor
cmp
jle
or
or
mov
mov
pop
fmuls
popa
cmp
add
pusha
in
fmull
scas
iret
popa
std
add
ljmp
mov
jg
fsubs
xchg
push
sub
add
add
decb
cmpsl
fildl
in
sub
pop
xor
or
imul
pop
sbb
lock
cmp
sti
add
mov
cmp
xor
mov
add
jo
push
lds
inc
aaa
sub
jbe
xor
fwait
xchg
add
movsl
pop
jg
fisttpl
and
pop
aaa
loopne
mov
outsl
push
jg
aas
clc
cmp
push
adcl
cmp
loope
pop
jb
iret
mov
add
mov
jmp
inc
popa
dec
cmpsb
xchg
adc
pop
inc
pop
push
stc
paddd
shlb
xchg
push
inc
fs
push
movsl
xor
loopne
sarb
inc
cmpsb
pop
inc
out
repz
and
cli
mov
inc
mov
imul
pop
xchg
sub
push
scas
jecxz
mov
addb
adc
lods
in
dec
adc
pop
lock
sbb
das
xchg
adc
nop
mov
dec
inc
mov
jae
inc
popf
clc
add
mov
sub
adc
mov
push
mov
mov
test
pop
and
aas
mov
adc
add
jge
out
adc
aaa
pop
inc
pusha
inc
pop
imul
add
cwtl
adc
pusha
push
aad
inc
cld
sbb
lock
add
repnz
ficompl
and
ja
mov
mov
popf
inc
ret
popf
xchg
cmpsb
pusha
push
cmp
jg
cmpsl
jae
push
movsl
or
xchg
push
cld
sbb
xor
mov
rorl
push
cmp
clc
pop
sar
dec
pop
nop
dec
ljmp
lds
dec
cltd
rcrl
pop
jne
sub
sbb
add
arpl
test
jle
out
icebp
cmp
cmp
mov
sbb
mov
pop
jmp
sbb
mov
adc
setp
fdivl
js
cmp
add
hlt
dec
ret
xchg
dec
push
cmp
les
adc
in
lods
cmpsb
cmp
jle
ret
pop
in
data16
bound
leave
inc
jae
ret
pmullw
dec
adc
add
incl
int
push
call
push
sbb
or
in
dec
push
loop
pop
and
dec
loopne
pop
stos
push
aam
push
jno
xchg
clc
mov
xor
in
dec
in
and
retw
jg
sbb
movsb
cmp
nop
roll
in
and
mov
movsl
aam
ljmp
sub
push
dec
ror
enter
nop
jle
jno
hlt
sbb
ss
dec
loopne
iret
filds
cmp
inc
mov
into
inc
pop
out
cmc
incl
xor
xchg
lock
adc
adc
dec
sbb
loop
btc
fsubp
and
dec
jecxz
int3
iret
es
xchg
cmp
inc
fmul
and
pop
lock
dec
jnp
das
rol
fadd
and
outsb
sub
sbb
xor
cmp
insb
lea
pop
nop
pushf
rorb
and
insl
cmp
add
pushf
pop
insb
mov
divps
inc
adc
orl
and
inc
push
fstl
and
xchg
jne
add
rolb
and
or
sarl
cmp
js
loopne
jb
dec
jne
fld
add
xchg
pop
xchg
jg
das
incl
clc
ret
aad
loopne
dec
cltd
pop
roll
pop
adc
or
xchg
xchg
les
push
out
pop
loopne
mov
iret
and
mov
or
rcrb
pop
mov
xorb
mov
sub
jecxz
lcall
pop
shl
adcl
mov
test
mov
or
push
dec
dec
cwtl
jo
sbb
pop
fwait
dec
rcr
ljmp
jmp
xorb
cmp
sub
sub
and
repnz
pop
pop
cmp
scas
mov
loope
pop
mov
mov
into
aam
pushw
pop
and
cmp
hlt
pop
cld
scas
and
es
jmp
xor
cmp
jle
mov
sbb
jmp
fcoms
stc
sbb
movsb
jnp
xchg
xchg
sbb
adc
jns
add
std
ja
enter
jo
jg
incl
or
jp
jbe
leave
icebp
fdiv
popa
sub
mov
mov
or
in
cmp
ds
and
dec
stc
movsl
dec
stc
out
pusha
xor
sti
movsl
sbb
lret
movsb
aas
lock
mov
sub
cmpl
or
fimuls
lahf
outsl
rcll
inc
dec
pop
fs
cmp
sbb
inc
sbb
dec
popa
invd
xchg
movsl
nop
fcmovbe
adc
imul
outsb
mov
xor
das
mov
jne
mov
cmp
lods
and
mov
fisttpll
add
mov
mov
mov
mov
sbb
test
aad
scas
cmp
inc
sbb
mov
inc
sbb
pushf
pop
cld
mov
dec
iret
push
and
jmp
aas
jg
aas
clc
mov
jo
add
movsl
push
jecxz
mov
les
cmc
shr
push
mov
mov
xor
inc
inc
mov
hlt
ja
mov
jno
sub
add
adc
rcll
mov
inc
dec
push
fimull
pop
add
jecxz
mov
ret
ds
jnp
adc
stos
add
push
orb
adc
cmp
push
jno
add
mov
sbb
repnz
mov
add
ret
or
mov
popa
mov
hlt
imul
dec
leave
std
push
jmp
jb
dec
std
call
rol
cvtps2pi
xor
ja
pushf
rcrl
add
pop
xor
dec
out
sub
mov
sub
mov
sahf
pop
mov
mov
shlb
repnz
hlt
jns
jmp
mov
mov
push
mov
fnsave
inc
pop
inc
std
add
xor
sbb
or
ds
or
repz
cmp
loope
mov
xor
je
shll
in
dec
mov
inc
bound
ljmp
rolb
mov
frstor
mov
pop
or
xor
add
mov
push
mov
and
jns
jl
jne
add
xlat
lds
push
jno
mov
xchg
pop
push
mov
or
mov
push
and
out
and
inc
hlt
out
adc
push
cmp
add
cmpsb
jge
mov
pop
dec
adc
insb
movb
call
cld
xchg
jecxz
cmp
inc
cmpsb
xor
sbb
stos
pushl
adc
loope
cmp
int
rol
mov
loopne
xor
icebp
push
xor
ret
call
inc
sbb
adc
enter
pop
xorl
cwtl
or
mov
sub
dec
pop
lret
add
stc
inc
and
cmpb
scas
mov
push
cmp
in
stc
add
incl
adc
or
insl
jl
jle
sti
and
pop
in
mull
cld
lds
ds
sahf
ljmp
add
mov
fmull
mov
and
pop
jp
punpcklwd
mov
sub
inc
mov
jle
fdiv
cld
or
lret
sub
xorb
or
outsb
mov
jmp
fmul
mov
jg
dec
addb
and
sub
rep
daa
test
lds
pusha
inc
inc
mov
xlat
xchg
push
sbb
imul
xchg
pop
pop
mov
or
cmp
add
pop
push
dec
les
inc
arpl
add
out
std
stc
cli
or
stos
lret
ss
sarl
pop
add
inc
push
cmpsl
push
and
shl
sahf
int3
jp
xchg
pop
mov
jb
inc
cwtl
addb
mov
inc
jb
ds
jg
std
cmp
adcb
outsb
rcrl
or
aas
adc
push
or
lods
jnp
cmp
pushf
cmp
daa
sbb
pop
adc
adc
mov
xchg
out
xor
add
and
out
cs
popa
repz
inc
arpl
fidivrl
nop
popf
decl
cmp
mov
in
sarl
outsb
test
repnz
and
clc
mov
insl
decl
push
sub
inc
inc
cmp
outsb
add
jae
cli
aas
fmull
outsb
inc
lds
pop
mov
mov
mov
lret
sbb
nop
fcmove
add
pusha
lods
ss
pop
jle
sbb
cmp
lods
fnop
mov
and
test
xor
fcmovb
movsb
dec
pushf
imul
push
push
sbb
inc
orb
pop
fwait
xchg
push
enter
pop
dec
lahf
outsb
cmpb
je
push
or
test
and
int3
jge
xor
rcll
fidivl
cld
pop
ljmp
enter
push
adc
push
sub
adc
pop
lods
push
pop
sbb
sbb
sub
nop
inc
sub
xchg
mov
xor
push
pusha
push
add
aam
push
sti
xor
or
and
pmaddwd
lock
cmp
scas
out
or
xor
adc
pushf
sbb
hlt
clc
jnp
ljmp
xchg
pop
ljmp
sub
push
mov
pop
sbbl
xchg
push
jae
push
out
sti
subl
xor
or
pusha
sbb
int3
cmp
outsb
jge
or
ret
or
out
cmp
loop
fld
inc
pop
incb
dec
std
inc
fistps
dec
xchg
popa
js
stc
push
test
sub
andb
sar
pop
xchg
lret
xor
movsb
adc
bound
add
xchg
cmc
mov
icebp
sbb
sbb
movsl
push
ficomps
or
cmp
daa
jmp
jp
shr
push
cmp
loope
adcl
insl
add
popf
sub
cs
mov
cmp
ss
ret
xor
add
jbe
adc
imul
sub
mov
adc
pop
movsb
aas
cmp
nop
lods
mov
xchg
rorl
fmul
nop
outsl
mov
push
dec
movsbl
mov
cld
int
ljmp
fisubl
fidivrs
xor
cli
pop
ret
dec
cmpsl
ret
popf
xchg
push
aam
xchg
pop
xchg
and
imul
cli
dec
cmp
adc
sub
das
sub
push
mov
mov
adc
cmp
jmp
out
push
cmpsb
push
cs
pop
jbe
cltd
add
inc
mov
bound
bound
and
and
xchg
push
cwtl
arpl
dec
or
call
push
xchg
inc
cld
shld
hlt
adc
inc
push
add
xchg
sub
jecxz
test
sbb
inc
dec
std
xor
lods
jne
mov
in
jecxz
and
cmp
scas
mov
lahf
jecxz
outsl
cmpsb
addl
cmp
lock
pop
cmpsb
clc
dec
xor
mov
cmp
mov
aas
inc
inc
sbb
inc
fwait
xchg
and
mov
cmpl
test
int
cmp
sub
mov
add
push
push
mov
imul
jns
pop
je
jns
pop
cmc
fwait
cmpsl
data16
sub
insb
or
cmp
sti
push
inc
pop
test
in
ja
adc
xor
imulb
mov
lock
sub
xchg
dec
fidivs
hlt
mov
and
or
jb
add
xchg
mov
mov
insb
inc
and
mov
in
mov
in
mov
das
outsb
pop
ss
inc
mov
bnd
daa
iret
repnz
inc
scas
pusha
xorb
or
mov
push
stos
addb
je
test
or
mov
or
bound
pop
add
int3
xlat
add
xchg
scas
jp
faddl
push
les
ja
cli
loopne
mov
cli
xor
xor
aas
sbb
jge
shlb
lahf
in
or
push
xor
inc
pop
mov
imul
xchg
bound
or
xor
dec
mov
imul
xlat
inc
mov
sub
fs
cmp
add
pop
cmc
mov
adc
pusha
add
mov
xchg
or
lods
cli
jmp
not
mulb
je
mov
lret
add
scas
lret
jg
inc
sarl
shlb
mov
cmp
sub
orb
fucomip
andl
scas
xchg
push
sbb
jle
pushl
sbb
xchg
push
int3
aaa
mov
shlb
out
addr16
pop
rorb
pusha
sub
popa
and
lcall
stc
xlat
and
dec
mov
and
jle
xor
jno
xchg
xor
enter
xchg
inc
fstps
rorb
ja
xor
inc
ljmp
cld
cmp
or
aaa
xchg
dec
dec
iret
les
adc
mov
rcrl
lock
sbb
mov
sbbb
shlb
sub
std
dec
lods
cli
dec
stos
ret
fadds
or
cli
cmp
xor
test
inc
pop
mov
clc
je
inc
add
cmpsl
lea
lret
and
cmp
dec
pop
mov
sub
ja
inc
jle
push
add
aas
mov
xor
jns
cmp
xchg
cld
pop
cmp
mov
xchg
lret
sarl
into
ds
dec
fwait
sbb
mov
mov
insb
add
das
xor
pop
fsubl
sbb
jl
pop
in
jnp
add
decl
ds
aad
in
ja
cmp
pop
push
insl
push
jl,pt
mov
insb
js
mov
mov
mov
popa
or
enter
mov
cmpsl
dec
jne
push
test
pop
cmp
push
add
mov
xchg
add
inc
add
inc
jno
inc
lds
fistl
inc
xor
xor
js
clc
xlat
in
movl
pop
cmp
enter
out
mov
mov
stos
adc
xor
in
jb
pop
ss
fcoms
jmp
testl
mov
or
js,pt
fs
push
and
in
mov
and
push
jmp
imul
jbe
xchg
es
mov
inc
and
jo
push
pop
and
pusha
mov
jno
mov
xor
xor
sbb
jmp
int
pop
ljmp
cmp
add
cmc
and
popf
insb
sub
mov
ret
ffreep
stos
sahf
xchg
sbb
adc
adc
cld
or
adc
cmpsb
in
and
fcomip
sbb
bound
int
shl
xchg
nop
xor
clc
movq
flds
hlt
mov
mov
sbb
cmp
or
pop
add
ja
pop
psllq
pop
icebp
arpl
inc
lods
call
xor
fiadds
lret
jmp
movsl
lds
movb
lahf
shr
sub
xor
je
aad
aad
jg
scas
test
mov
notl
loope
pop
pop
sub
sbb
and
dec
push
cwtl
in
das
clc
out
and
test
daa
push
push
xchg
or
out
xor
xchg
push
xor
mov
sbb
add
push
test
jl
cs
stos
dec
add
icebp
mov
jle
cmc
aam
sarl
sub
inc
test
enter
cld
call
insb
cmp
std
dec
xchg
movsl
pop
bound
xor
mov
sub
xchg
int3
lods
inc
loop
add
insb
lcall
test
adc
inc
jno
aam
cli
jecxz
or
faddl
loopne
hlt
repz
hlt
adc
stos
xchg
xor
xchg
adc
add
pop
mov
sub
dec
orl
cmp
test
es
pop
lock
mov
inc
add
into
mov
jge
mov
ret
jecxz
push
out
imull
ja
jg
mov
loope
lahf
sbb
mov
inc
lods
rol
imul
add
cmp
pop
lea
icebp
push
mov
cmp
gs
lds
in
out
cwtl
lds
test
and
xchg
adc
mov
leave
decl
inc
adc
pop
cmc
add
insl
adc
pop
sbb
add
cld
pushf
incl
add
in
movsl
sbb
add
decl
loopne
mov
cmpl
sub
lds
inc
outsb
mov
fiadds
fdivr
idivl
cli
jecxz
dec
repnz
adc
call
push
inc
inc
add
jb
push
loop
pop
aaa
jno
jb
popf
outsl
test
fistpll
jb
lahf
in
mov
jle
aas
push
mov
or
adc
xchg
std
mov
testl
frstor
insb
rcr
pusha
dec
adc
testb
ficompl
sub
add
dec
addr16
shl
cmpsb
cltd
and
ss
outsb
iret
inc
cmp
cld
mov
add
adc
jp
xor
scas
lret
pushl
cmpsb
ret
rorl
mov
mov
pop
adc
pop
outsl
push
jns,pt
jnp
outsl
ret
mov
enter
or
push
popf
rcrb
cmpsl
fucomip
add
wrmsr
xchg
jo
rorb
xchg
ljmp
andl
mull
or
or
adc
js
loopne
stos
jbe
les
aam
fidivs
aaa
or
cmp
mov
and
mov
and
jmp
out
aaa
adc
rorl
cmpsb
ret
js
incl
enter
in
adc
addr16
push
cmp
rcrb
or
out
push
dec
mov
sbbl
dec
inc
pop
test
add
shlb
ret
xchg
fiadds
inc
imul
jecxz
fnstenv
jge
pop
mov
lret
sahf
xchg
inc
test
jnp
push
sub
xchg
vpshaw
pop
movsb
mov
push
pushf
push
clc
ds
xchg
mov
cmp
imul
pushf
or
xor
lods
incl
shlb
mov
adc
or
outsb
add
mov
idivl
std
and
inc
dec
scas
in
push
and
pop
pop
bound
lock
add
xor
pop
inc
add
cld
nop
shll
or
lock
or
jg
pusha
movsb
pop
ret
push
jne
fs
std
mov
in
push
add
lcall
cmp
loope
fdivs
adc
insl
xor
jge
jb
sbb
pop
xchg
aaa
decb
cld
push
push
xchg
jbe
cmp
sbb
nop
cli
fimull
imull
push
adc
jg
mov
ja
cmp
cmpsl
lret
sub
decl
lods
loop
xchg
dec
push
out
jle
lock
mov
fistpll
xor
add
and
xchg
mov
es
mov
incl
decb
mov
scas
push
or
cwtl
out
xor
add
ds
xchg
test
mov
shrl
movsb
add
mov
push
scas
out
and
mov
repz
push
rcrl
lret
push
out
loopne
imul
add
cmpsl
scas
decl
jge
enter
daa
xor
adc
jne
jecxz
inc
dec
lret
lahf
push
pop
enter
lret
lock
call
cmp
imul
rorb
adc
test
xchg
aad
mov
rorl
cld
push
daa
push
cmpl
mov
dec
loope
jb
jg
faddp
cwtl
mov
cmc
lock
subb
cwtl
adc
sub
xchg
cmpsb
sbb
sbb
mov
or
pop
loop
cmp
add
xchg
xor
cmp
adc
test
pop
insl
addr16
jmp
test
jecxz
rcr
push
mov
cld
clc
and
jns
or
out
repz
or
jmp
hlt
subb
jmp
push
inc
sbb
or
jno
and
lret
push
push
jle
test
add
sbb
sub
and
lods
rclb
inc
out
mov
kunpckwd
jmp
icebp
add
data16
cld
xchg
mov
mov
sbb
push
not
pop
stc
mov
popa
xchg
cmpsb
testl
adcl
and
dec
push
sub
or
sbb
sbb
shl
cmp
and
fsts
push
mov
cmp
or
fbstp
leave
add
sbb
bsr
icebp
sbb
push
sub
std
add
or
dec
xchg
out
loop
inc
sbb
mov
lret
in
add
fists
mov
fisubrs
sbb
push
ret
jns
daa
pop
dec
loope
pushf
ds
in
inc
jle
test
lock
es
dec
xchg
cltd
add
es
jnp
in
sarl
aam
pop
fnstenv
xor
push
out
mov
in
pop
loopne
mov
lret
jo
push
push
mov
mov
cld
in
push
clc
mov
cmp
xor
imul
aas
push
hlt
pop
mov
xor
imul
mov
jp
clc
jmp
and
call
pop
and
jae
sarl
fstl
or
cs
jecxz
sub
inc
mov
sbb
push
fildl
and
fcompl
pop
lahf
in
mov
mov
add
dec
mov
xor
sahf
clc
mov
sbb
aaa
adc
ss
xorl
insl
inc
insb
sbb
add
stos
lock
sub
fdivr
aas
cld
repnz
inc
mov
and
test
dec
xchg
jnp
jge
fdiv
shlb
fisubrl
movl
shrb
cmp
jle
cmc
push
leave
pop
out
xchg
pop
clc
out
out
fistps
insb
mov
adc
sub
cmp
cmp
xchg
pop
mov
stc
xor
adc
scas
push
jno
adc
fs
shll
jg
push
jle
scas
jno
mov
and
and
aaa
mov
mov
jo
add
jg
icebp
push
outsl
jmp
mov
shlb
mov
roll
adc
add
mov
repz
sahf
inc
xor
add
add
xchg
and
clc
xchg
jp
fistps
mov
in
push
es
dec
mov
push
ficomps
jns
testb
loopne
shr
lea
out
push
push
jecxz
xor
and
mov
out
push
scas
mov
pop
pusha
data16
mov
and
cmpsl
cs
sub
and
rolb
das
fldt
popf
jno
and
mov
jl
mov
add
pop
test
cmp
dec
jle
inc
xor
ds
int
shll
pop
jne
push
in
lds
jbe
xor
mov
sub
mov
fists
popf
lea
paddsb
pop
mov
mov
daa
adc
jge
push
cmpsb
push
pop
scas
shlb
nop
mov
lret
jge
hlt
dec
sbb
mov
pop
dec
push
ficoml
add
lds
aaa
adc
jo
pop
or
xchg
push
bound
aas
stos
aad
or
jle
sub
fsts
cli
jb
lds
jg
xorl
fisubs
shll
pushf
push
icebp
pop
popa
fidivs
clc
and
and
lods
add
cmp
addr16
std
lahf
and
jb
mov
xor
ja
sbb
add
push
mov
push
or
inc
fs
mov
or
and
aas
or
decl
mov
or
xor
dec
xor
pop
push
shr
imul
pop
sbb
in
repnz
push
loop
mov
arpl
or
xlat
mov
cli
test
xchg
pop
mov
cwtl
cmp
cs
cld
ljmp
inc
pop
mov
scas
jle
pop
sbb
popf
das
aam
adcb
add
pop
aam
in
jo
rorb
xor
push
pop
inc
push
inc
pop
fsubl
jnp
jle
xchg
jns
jmp
push
lea
stos
add
mulb
add
or
mov
adc
dec
enter
sub
testl
adc
mov
in
xchg
iret
xor
shl
divb
test
pop
mov
adc
fdivl
jb
cmp
add
push
jb
mov
mov
fwait
xor
jb
jge
dec
ja
adc
movsl
mov
sbb
jnp
aad
xchg
sub
cmpsl
adc
add
fldl
push
sbb
ret
pop
or
sbb
cmpsb
test
test
test
push
arpl
or
dec
cmpsw
cmp
inc
sub
cmc
insl
in
lea
pushf
pop
lahf
and
cld
nop
test
jge
decl
inc
mov
sbb
std
clc
in
xor
nop
add
cld
leave
sub
dec
add
jmp
and
inc
test
pop
imul
cmp
mov
add
into
push
fsubrp
aas
stos
lahf
jg
pusha
mov
mov
mov
sarb
add
int
adc
das
insl
push
pop
xor
clc
pop
fnstenv
pop
jp
cwtl
out
jecxz
loopne
aas
leave
ficompl
ja
xor
sbb
mov
orb
mov
mov
add
xchg
add
or
add
sbb
push
and
mov
ss
cmpw
lock
in
or
fsubrs
push
dec
rolb
sub
xor
call
mov
rorb
sbb
xchg
mov
inc
std
adc
packuswb
adc
fbld
jno
mov
inc
cmp
dec
shrl
aam
das
lea
dec
adcb
cld
push
mov
lock
push
cmpsb
int
movsb
adc
hlt
divb
ja
outsl
adc
or
popa
ret
mov
shrb
push
sti
cld
push
and
ss
push
outsb
out
add
imul
or
pushf
and
push
popa
add
add
fs
pop
xchg
pop
shlb
push
push
push
or
shrb
cmp
sbb
adc
xchg
fs
sbb
cmpsb
pop
stc
xchg
out
pop
inc
sarb
pop
mov
nop
inc
inc
daa
jge
rorb
xor
mov
mov
mov
mov
dec
cmp
mov
imul
sbb
add
outsl
ret
and
outsl
and
repz
xor
popa
mov
push
push
outsl
jecxz
inc
mov
push
mov
push
pop
bound
int3
sbb
movsb
pop
push
stos
add
std
pop
outsl
xor
push
pop
inc
adc
mov
js
pop
sub
lret
cmpl
jno
fdivl
lds
xor
sarl
ret
xor
jmp
das
dec
pop
and
outsb
lods
add
adc
pop
ds
mov
or
mov
push
push
shlb
and
xchg
dec
jle
outsl
clc
mov
out
cmp
in
push
sub
mov
outsl
loopne
push
out
ror
push
pop
sub
sub
cmpsl
pop
lret
aas
lds
int
push
add
cmc
add
push
out
test
and
jo
out
cld
push
cmp
lds
in
xlat
pop
pop
or
push
loop
add
jp
incl
mov
jl
jbe
pushf
nop
imul
repnz
xchg
xor
push
icebp
insl
sti
push
adc
mov
ret
cld
rolb
pushf
mov
jg
hlt
out
or
lcall
pop
mov
jb
mov
jge
add
sbb
push
jg
add
or
or
pop
shlb
pop
or
mov
sbb
push
xor
shrb
push
xchg
inc
jg
inc
inc
mov
ljmp
add
lods
pop
jmp
inc
test
add
les
test
jmp
or
in
cld
sbb
and
adc
fsin
stos
fcoml
imul
lock
ucomiss
loopne
inc
and
mov
cli
pop
das
loope
loopne
hlt
js
sarl
jne
mov
movsb
lock
jns
aad
fcoml
bound
pop
scas
sbb
adc
cli
fwait
jno
jecxz
pop
jg
out
ljmp
mov
outsb
or
mov
imul
push
push
add
scas
mov
xchg
clc
mov
int3
pop
mov
pop
cmc
incl
add
insl
jno
stc
add
lea
jle
orl
ja
and
mov
cltd
cli
sub
add
push
cwtl
pushl
push
or
xchg
ds
push
sti
incb
pop
mov
push
cli
les
test
xchg
push
icebp
pop
cmp
mov
in
sbb
cmp
mov
or
mull
loop
sbb
dec
mov
es
fnstenv
jns
and
cmp
pop
cli
in
pop
adc
lods
push
xor
or
sbb
js
add
fcmovb
or
jno
lcall
cwtl
sbb
mov
pop
stc
stos
jg
push
push
xchg
rolb
and
push
inc
in
mov
push
push
sbb
popa
insl
fsubrl
mov
cmpb
mov
adc
aad
dec
js
jg
in
add
adc
xchg
mov
mov
int
cmp
mov
in
mov
and
testb
scas
xor
adc
scas
fs
aam
test
and
icebp
outsl
or
inc
clc
dec
jmp
loope
fmuls
int3
push
dec
jne
add
push
sbb
inc
adc
hlt
testb
rcr
add
roll
mov
jge
sbb
add
fmull
ds
hlt
pusha
jle
and
jl
inc
cmpsl
xchg
imul
dec
add
je
inc
repnz
mov
frstor
mov
and
pop
stos
push
jne
adc
jg
ljmp
jo
xchg
orb
mov
add
inc
scas
adc
and
mov
sahf
ss
std
mov
leave
mov
or
jae
ja
pop
xorb
jp
sub
fs
cmpb
dec
pop
lods
mov
push
cmpsl
call
loop
cmp
mov
adc
xor
fwait
and
pmaddwd
pop
pop
or
and
sarl
jp
push
jae
add
fcmovnb
push
aam
push
jp
sbb
cmc
sbbl
lods
mov
fucomip
sub
cmpsb
jnp
sbb
pop
pusha
dec
add
rcrb
and
pusha
mov
xchg
loope
push
pop
arpl
xchg
paddsw
and
arpl
inc
ret
imul
stos
movsl
test
dec
std
cmp
push
pop
jo
and
repnz
das
jl
cltd
xchg
and
leave
push
cmpsl
lds
out
out
sar
outsb
xlat
xor
lcall
cmp
into
push
in
rcl
es
les
testb
cmp
repnz
loopne
aam
cmp
pop
je
cmpsl
sbb
insl
pop
loop
jo
pop
lock
jp
and
popf
sub
mov
or
push
call
push
cmc
push
pop
xchg
loopne
cli
adc
and
rcr
das
push
out
add
cmp
cmp
mov
cld
aas
test
sti
mov
sbb
or
mov
adc
mov
xchg
add
outsb
sbb
pop
iret
adcb
jp
mov
pop
cmp
das
mov
orb
jg
lock
cltd
nop
bound
cmp
aam
fisubs
js
cmp
ljmp
bound
or
mov
xchg
mov
mov
sub
and
push
or
mov
xchg
push
jl
cmp
movsb
imul
push
jae
add
xor
pop
dec
mov
fwait
jno
mov
pop
cld
push
les
add
js
jb
das
aad
shll
push
pop
arpl
jmp
mov
mov
mov
mov
lret
dec
push
mov
rclb
add
pop
push
mov
lock
adc
dec
jbe
in
repnz
add
adc
mov
popa
out
imul
daa
push
outsl
daa
add
ret
pushf
xor
mov
ss
cmp
ss
dec
movsl
mov
stos
dec
xor
mov
jno
xor
push
js
adc
outsb
cwtl
lret
push
jbe
dec
cmp
adcl
jnp
push
dec
es
xorb
mov
imul
sbb
xor
bound
inc
sub
stos
add
xor
adc
mov
push
push
sahf
mov
ret
jecxz
mov
cmp
xor
lret
inc
les
push
dec
jg
xlat
lahf
xchg
sbb
lret
mov
and
sub
add
cmpsb
stos
aas
clc
movsb
mov
inc
mov
add
add
sub
mov
in
cmp
mov
push
loopne
in
sub
lods
fiadds
pop
push
adc
cld
push
mov
sbb
jmp
dec
iret
pop
dec
add
idiv
unpckhps
xor
jg
xchg
jle
xchg
cmp
int
cld
mov
jp
mov
in
mov
push
or
sbb
dec
pop
jge
xchg
mov
xchg
bound
hlt
inc
cmp
sbb
stos
sub
or
pop
shl
out
or
outsl
in
bound
fisubrs
push
mov
fst
jb
inc
popl
js
call
js
sub
out
test
cmp
dec
ljmp
pop
push
sub
cmp
xor
lods
fstl
dec
loop
pop
dec
aad
push
or
pop
test
movsb
xchg
aaa
psraw
movsl
push
paddq
cltd
sbb
cmpsl
mov
push
jae
add
push
inc
test
pop
mov
vmsave
mov
or
sbb
decb
addb
es
out
lock
movsb
sti
dec
popf
aad
cmp
ds
jb
sahf
ss
andb
fwait
or
imul
lahf
fcmovu
dec
sbb
sub
shr
adc
mov
sub
jge
or
cld
lahf
andl
mov
xchg
in
jmp
add
test
pop
inc
jnp
cmp
les
nop
inc
fisttpl
add
cmpsb
or
shll
pop
sbb
inc
js
adc
fidivrs
sbb
pushf
pop
adc
add
jbe
mov
out
mov
loope
mov
rolb
inc
lret
add
lods
inc
xor
add
lods
xor
lret
cmp
repz
adcb
and
cmp
je
test
dec
cmp
test
adc
or
cmp
mov
pop
sbbl
push
test
hlt
inc
mov
orb
scas
adcl
shl
inc
or
and
enter
and
in
mov
movsl
pop
scas
daa
insb
xchg
dec
repz
in
mov
pusha
sub
or
sbb
ljmp
stos
mov
xor
bnd
lods
push
cmpsb
movsl
push
xchg
sbb
xorb
cmp
insl
in
push
scas
loopne
xchg
mov
outsl
dec
xchg
pop
je
mov
enter
std
xchg
xchg
xchg
jns
outsl
out
add
bnd
loop
pop
and
in
jmp
and
sbb
std
push
jbe
pop
dec
jno
xchg
jne
es
inc
dec
pop
xor
pop
mov
and
pop
and
iret
hlt
cmp
stos
fstpt
jecxz
jg
lret
add
adc
or
adc
adc
mulb
sbb
pop
adc
fs
dec
stc
push
and
out
jae
mov
dec
dec
sbb
push
test
mov
call
or
popf
sub
dec
rorb
sub
inc
mov
icebp
lock
adc
add
push
mov
pop
sbb
lods
sub
test
ret
jo
push
jo
daa
dec
fcompl
cmp
test
cltd
cmpb
cld
shrb
xchg
xchg
add
out
in
pop
xchg
or
cmp
adc
mov
int
mov
ja
add
inc
push
add
aaa
dec
jecxz
jl
int
out
inc
xchg
int3
loope
pop
add
stc
outsb
add
inc
inc
add
mov
sahf
mov
shll
xchg
mov
jg
push
aaa
lcall
pop
inc
cmp
addr16
arpl
inc
or
mov
push
pop
and
push
xor
sub
pop
xor
stos
mov
rep
adc
std
mov
jl
mov
fdivrs
or
add
sub
loopne
shl
faddl
jmp
hlt
test
xor
clc
dec
jg
les
sbb
in
js
loope
cmp
sub
mov
fadds
xlat
xor
push
push
hlt
daa
sub
sbb
push
jbe
dec
xchg
shlb
xchg
sbb
test
scas
ja
jb
jle
rcrl
add
xchg
pop
and
mov
inc
clc
popf
inc
ficompl
fsub
ffree
jns
or
sub
sbb
mov
decl
sub
fadd
ds
or
dec
loop
aaa
into
sub
adc
xor
mull
sbb
add
inc
sti
cwtl
shll
in
sahf
or
sub
xchg
xor
out
pop
mov
popa
mov
push
sbbl
sbb
add
les
xchg
mov
push
xchg
push
mov
loop
or
dec
sub
jne
shlb
mov
xlat
mov
sbb
jo
in
adc
aaa
ljmp
pop
xor
sbb
cs
jae
popf
mov
or
ret
pop
add
mov
jb
xor
cmp
sub
insb
push
jnp
cmp
loope
or
rol
or
mov
test
stos
sbb
add
sbb
xor
fdivl
hlt
daa
push
pop
adc
scas
mov
int3
clc
and
sub
rcl
lret
or
mov
cltd
clc
subl
wrmsr
outsl
test
idivl
je
mov
and
in
mov
adc
push
pusha
add
loope
pop
push
imul
loop
and
xchg
inc
cmp
xor
js,pt
scas
int3
call
daa
loop,pt
inc
mov
iret
mov
fucomip
cmp
roll
repnz
clc
ret
sarl
mov
push
ss
lock
pop
repnz
mov
dec
or
aaa
or
or
mov
call
loope
xchg
jl
into
mov
fcoms
add
sbb
enter
jmp
mov
pop
jl
mov
daa
rorb
out
inc
test
inc
mov
pop
pop
pop
pop
es
nop
test
pop
and
orl
call
inc
cmc
stc
or
out
sbb
pop
push
insb
xor
xchg
mov
or
add
push
add
pop
xor
clc
aam
test
bound
jl
frstor
add
push
mov
sub
pop
cmp
lret
inc
test
rorl
fldenv
lcall
jmp
sti
mov
mov
mov
icebp
loope
repnz
jmp
xor
je
bound
out
inc
and
jo
push
mov
adc
test
fbld
sub
leave
je
insb
imul
push
js
rolb
punpckldq
fistpll
decb
sbb
sbb
loope
test
ret
iret
mov
popa
add
decl
or
lds
xor
add
fninit
xor
or
addb
sub
inc
into
aad
mov
aam
lods
push
mov
ljmp
xchg
mov
mov
mov
cmp
jp
mov
or
mov
aaa
movq
dec
jl
outsb
xor
adc
clc
stos
adc
out
fsts
clc
pop
sub
int3
dec
jp
dec
ljmp
mov
mov
inc
mov
mov
and
cli
insb
lods
ljmp
jbe
lds
ljmp
lea
mov
repz
sub
jecxz
xor
fimuls
mov
cli
sub
clc
mov
aas
sahf
mov
mov
scas
outsl
test
pusha
fs
pop
adc
popf
jecxz
js
pop
cli
push
scas
int3
enter
nop
inc
push
movsb
popa
mov
sar
stos
data16
xor
inc
aaa
mov
xchg
das
dec
dec
cmp
xchg
adc
mov
in
pushf
lods
fs
rclb
mov
push
pop
sbb
mov
ljmp
shr
movsl
cs
loop
out
fdivr
xor
stos
fdivp
mov
pop
popf
sahf
mov
add
fistl
dec
int
mov
movsl
xchg
sbb
insb
ljmp
inc
lret
insl
dec
mov
std
pop
mov
fmull
adc
rolb
mov
aam
int
jbe
push
or
out
inc
or
add
pop
jno
pop
xchg
xchg
loope
pop
push
fstpt
or
into
push
push
fldcw
cmp
mov
adc
scas
jo
icebp
lea
scas
fistpl
sub
jle
ds
xor
pop
add
ret
adc
cli
mov
loopne
clc
push
sub
adc
xchg
in
or
sti
nop
jb
ret
ja
loope
adc
hlt
ds
mov
mov
or
cmc
popf
xchg
pop
inc
and
xchg
mov
ret
sbb
dec
in
jecxz
xor
adc
mov
les
std
mov
movsb
clc
jle
xor
sti
pop
in
add
call
cmc
mov
test
pusha
mov
movb
jne
mov
shr
cwtl
pushf
fs
and
push
sbb
add
sub
decl
sbb
stc
clc
pop
add
mov
mov
add
cmp
sbb
insb
xor
cmp
or
and
jno
push
fisttpll
and
add
daa
lcall
fsubr
ljmp
inc
incb
cld
add
or
nop
mov
hlt
sbb
push
das
lock
in
mov
imul
sub
ret
pop
rcrl
or
mov
ss
sub
push
dec
adc
loopne
xor
mov
mov
xchg
test
in
insl
loopne
sbb
fidivs
jae
or
cmp
rcr
popa
pop
xchg
call
mov
ret
and
lods
mov
fdivrl
out
int
hlt
stc
aas
pop
out
mov
js
inc
fimuls
leave
aad
add
dec
cld
addb
jmp
insl
std
mov
test
mov
or
mov
in
lods
sbb
iret
cltd
lock
sahf
loope
ja
pop
lods
push
fidivrs
sahf
jo
fdivrl
jmp
pop
xchg
je
bnd
cmp
lock
les
jno
pop
mov
jne
sub
cmp
ficoms
adc
ret
push
pop
rcll
jmp
xchg
jge
in
mov
mov
jmp
pop
jmp
inc
push
loop
shll
xchg
cli
xrelease
loopne
xor
and
sub
dec
test
mov
repnz
stos
jp
pop
and
rclb
pop
and
cltd
out
es
scas
and
cmp
or
int3
add
test
mov
adc
js
mov
jle
decl
jmp
sub
mov
inc
dec
jle
mov
test
mov
jae
pshufw
mov
pop
test
cmp
je
xorb
xor
loop
dec
rcrl
bound
in
testb
or
stos
test
lock
in
dec
cwtl
inc
mov
push
sbb
jle
sbb
stos
pop
nop/reserved
subb
xor
add
lret
add
and
sub
cmpsb
jmp
xchg
sub
add
sbb
inc
fcoms
cmp
iret
int3
inc
rcrl
pop
ffreep
sysret
mov
lcall
sub
or
mov
jmp
js
lods
xor
add
jnp
mov
popa
add
mov
movsl
into
pop
jecxz
mov
adc
popf
out
ret
jg
movsb
mov
cmc
test
and
mov
mov
mov
or
sbb
jp
inc
mov
fwait
lret
mov
sbb
xchg
inc
lret
lea
cld
bound
or
pushl
out
xchg
xor
pop
push
jne
add
incl
dec
mov
inc
add
xor
out
std
mov
add
loop
out
push
adc
mov
std
cli
or
lods
dec
mov
xchg
roll
and
es
mov
out
mov
mov
mov
ret
lret
iret
js
pop
std
pop
push
in
add
fsts
icebp
sub
mov
xchg
roll
fcomp
jo
aaa
stos
imul
sahf
push
jo
mov
mov
movsb
xchg
pop
fdivrs
mov
cs
lods
xor
movsl
std
dec
inc
hlt
dec
add
enter
loop
xlat
cmp
popa
lret
cmp
push
push
out
movsl
movsl
and
sub
jg
sarb
fstpl
clc
or
sbb
or
jo
aas
push
seta
xchg
mov
jae
cld
scas
pop
mov
cmp
adc
mov
popa
add
cmp
and
packssdw
scas
or
call
cmp
out
push
pop
aaa
leave
and
call
inc
dec
push
xchg
mov
pop
mov
add
int3
rep
ss
call
rcrl
sar
rorl
mov
stos
push
dec
decl
aas
and
aas
shll
loop
fwait
xor
add
sarl
lret
xor
adc
loop
imul
cmpsb
cwtl
bound
xchg
loop
cmp
stc
inc
fisttpll
adcb
adc
imul
cli
dec
mov
hlt
mov
pop
hlt
paddw
adc
adc
loop
jecxz
dec
es
lret
mov
out
insl
fwait
leave
in
divb
and
or
jl
or
pop
xchg
lock
repz
adc
mov
add
push
pop
std
xchg
sahf
es
aam
mov
mov
popf
xor
scas
cli
pop
cmp
or
sbb
sbb
xor
adc
mov
test
ds
jo
pop
repnz
inc
scas
dec
adc
leave
mov
call
js
inc
outsl
or
or
mov
dec
bound
or
xor
push
mov
icebp
insb
incb
dec
adc
mov
mov
mov
push
scas
or
std
popa
test
jl
loopne
call
mov
pop
jmp
adc
pop
push
imulb
inc
ljmp
pop
push
js
test
pop
incl
xlat
add
push
sti
mov
push
call
test
insl
mov
rcrb
das
pop
adc
lods
mov
push
ret
fdivrl
test
add
pop
jmp
lods
hlt
jg
adc
dec
and
adc
dec
clc
and
inc
push
mov
loope
xorl
mov
cwtl
xchg
or
iret
push
sub
cltd
mov
stos
jp
mov
mov
pop
mov
jno
adc
dec
addb
and
repnz
add
add
sub
ja
mov
cmp
mov
ret
mov
pusha
orl
movsl
out
or
sarb
mov
mov
je
inc
and
mov
push
or
rcrb
jl
test
pop
lcall
leave
loope
inc
xor
hlt
jl
xchg
pusha
clc
addr16
imul
sub
push
pop
inc
aad
or
aad
dec
add
rorl
adc
das
lcall
xchg
xchg
imul
and
fisttpll
or
cwtl
xor
push
jb
lock
fcomps
cmc
push
clc
scas
pop
dec
iret
int3
jno
in
jle
lods
ljmp
mov
lds
loop
jp
das
mov
sub
pushfw
sbb
and
cmc
loope
pop
cmp
xchg
mov
or
cmp
jle
inc
sbb
adc
push
movsb
movsb
loop
and
dec
rcr
shll
iret
lret
es
cmpsl
les
inc
mov
jecxz
stos
cmp
xlat
xor
clc
test
les
inc
jl
js,pt
in
mov
xor
movsl
mov
xor
cmpsl
mov
xchg
popa
addr16
mov
or
xchg
jmp
mov
push
mov
das
loopne
or
lahf
inc
and
mov
pop
das
std
or
shrl
sub
in
xchg
repz
incl
jle
pop
push
and
cmp
fcomip
lcall
cld
repnz
pop
lcall
clc
mov
adc
adc
sbb
inc
xor
cmpsl
cmp
iret
nop
mov
adc
add
pop
mov
inc
loopne
push
add
mov
adc
shrb
push
aaa
and
jg
cld
sti
clc
fs
push
inc
sti
xchg
sti
cmp
inc
sti
dec
jnp
mov
cmp
or
adc
mov
icebp
lock
insl
mov
add
adc
xchg
mov
and
jae
adc
cmpsb
jp
xor
mov
sbb
loop
xchg
out
rclb
std
xor
cli
mov
sbb
dec
or
or
pop
je
test
xchg
mov
cmp
fsubrs
clc
or
cld
jl
mov
push
mov
xchg
push
sbb
inc
mov
lods
js
push
pushf
lret
loopne
jle
push
push
sbb
xlat
std
mov
adc
push
adc
cs
repnz
push
ja
mov
mov
dec
cld
pop
lods
add
add
fmuls
test
mov
stos
push
or
cmc
test
js
cs
add
and
cmp
fisubl
cmpsl
sub
adc
loope
adc
filds
jnp
repz
ficomps
mov
mov
mov
aas
or
and
jge
push
mov
dec
inc
xor
ficoml
bound
int3
push
jle
fs
in
mov
js
add
inc
lock
jle
sub
lret
pop
mov
and
call
jbe
sub
pop
repnz
push
int3
loopne
inc
xlat
and
nop
dec
clc
or
xchg
ja
cs
dec
sbbb
test
pop
pop
xor
jo
jle
scas
incl
ffreep
mov
xchg
mov
push
es
mov
outsb
adc
cmp
mov
jg
jno
push
add
lea
out
mov
inc
sbbl
rolb
add
imul
shl
xlat
ret
pop
enter
pop
jge
int
leave
push
push
js
repnz
test
int
add
outsb
mov
add
je
dec
jl
jge
je
cs
adcl
add
cltd
and
push
xor
ficomps
js
xor
pusha
je
or
jae
push
mov
add
xor
leave
insb
mov
or
test
adc
fadds
mov
je
lret
pop
and
pop
xor
sbb
xchg
mov
in
inc
or
pop
imul
sbb
adc
dec
cld
scas
mov
or
cli
aaa
sub
in
pusha
and
pop
inc
nop
dec
rcr
call
aad
repnz
sahf
sbb
add
movsl
mov
and
ss
movsl
mov
inc
jge
fmuls
add
cmpb
aad
push
out
push
inc
sbb
test
inc
je
fisubl
movsl
mov
addl
jne
ja
mov
pop
ficoml
dec
aaa
xchg
inc
cmp
aas
shrb
es
imulb
adc
lock
adc
stc
aas
adc
mov
fld
outsl
inc
stos
add
ljmp
nop
pusha
ret
movsl
sbb
mov
fistpl
jp
add
mov
jne
cmp
jae
push
ds
dec
push
xchg
sub
jg
dec
xchg
mov
loopne
xadd
incb
or
sub
call
xchg
int
mov
fisubs
adc
rcll
popw
insb
mov
add
lret
mov
cld
bound
pop
shrb
push
call
loope
xchg
loop,pn
out
jmp
std
clc
dec
aaa
stos
rcrb
push
push
sub
lock
add
mov
outsb
clc
dec
mov
call
xor
push
push
dec
pop
test
or
int
in
shrl
xchg
jecxz
cmp
mov
lahf
fcoml
mov
jg
pop
dec
fwait
sbb
pop
setg
dec
clc
imul
fidivrl
add
add
and
pop
aad
inc
add
idivb
pop
push
or
fisttps
jg
cli
hlt
mov
daa
mov
inc
mov
adc
sbb
pop
push
jne
pop
out
xlat
inc
pop
adc
scas
mov
lret
lahf
pop
jle
and
jbe
fldenv
mov
in
fwait
push
mov
aaa
dec
sub
or
add
jmp
and
lock
repz
and
scas
add
shrb
cmpsl
cmp
dec
mov
xchg
push
xchg
ret
mov
outsb
popf
sub
out
outsb
call
pop
mov
cli
mov
dec
scas
lahf
shl
scas
pushf
jnp
jb
mov
cli
mov
cmpsb
add
or
daa
loopne
ss
cmp
adc
sti
inc
cli
cmpsb
stc
pop
xor
pop
cld
inc
icebp
jae
or
pushl
je
push
add
pushf
imul
fcomps
lahf
fsubp
xor
dec
adc
es
mov
ret
insb
push
jle
imul
movsl
xchg
inc
xchg
xor
xchg
push
xor
mov
ret
pop
outsb
ficompl
int3
inc
popl
jne
mov
mov
ss
xor
je
push
add
aam
xor
outsb
test
ficoms
push
inc
sub
mov
cmp
popf
cli
push
add
inc
cmp
jb
sub
repnz
add
and
call
cmp
sbb
inc
adc
call
push
sarl
and
push
test
push
cmp
lods
out
mov
xor
loop
xchg
repz
mov
mov
je
inc
insb
movsb
lock
cmpsl
hlt
fstpl
xchg
and
jl
jnp
sbb
das
xor
jne
jge
lods
lods
add
xor
cmpsb
hlt
sub
cwtl
imul
inc
in
adc
decl
jg
movsl
or
sub
pusha
sub
fdivl
sbb
jle
or
jmp
flds
fimull
push
aas
inc
dec
clc
adc
in
push
jp
loopne
and
add
ljmp
add
fwait
ret
add
icebp
arpl
les
test
shll
sub
adc
arpl
xchg
pop
ret
pop
test
or
xchg
adc
sub
repnz
pop
insl
add
and
add
jne
push
cli
scas
dec
cmp
and
sbb
xchg
orb
fwait
sbb
into
jl
pop
lock
sbb
ss
dec
je
sub
xchg
pushf
in
movmskps
adc
mov
add
sbb
psrad
mov
sar
loop
fldenv
sbb
mov
mov
sbb
enter
pop
scas
mov
inc
push
add
sbb
cld
stos
into
and
pop
iret
mov
add
cmpsl
shrb
push
or
inc
pop
aam
pop
rolb
push
xchg
push
mov
sub
inc
push
push
sbb
lahf
aad
push
jge
hlt
sbb
pusha
add
dec
fmul
fisttpl
or
call
xor
andb
pop
std
pop
push
popf
shll
xor
xchg
jno
adc
aas
movsb
and
mov
test
lods
push
shrl
call
dec
cmpsl
ret
clc
sbbb
inc
add
jle
lahf
mov
pop
push
add
dec
pop
icebp
lcall
test
pop
in
test
pusha
cmp
jmp
sub
lock
and
sbb
iret
inc
loope
imul
sbb
push
sti
or
jne
cmp
aad
decb
sbb
mov
rcll
xchg
sub
push
loop
push
rcr
mov
push
adc
jl
add
add
add
push
pop
fs
ja
aas
loopne
es
dec
pusha
mov
not
es
and
cmp
jecxz
mov
add
mov
popa
in
inc
mov
xor
fisttpl
lods
add
aam
mov
mov
pop
cmp
add
stos
or
nop
lcall
add
and
push
pop
cmp
lea
jns
inc
add
and
cmp
mov
sahf
dec
mov
sub
push
cmp
orb
in
mov
mov
jb
pop
adc
movsl
pop
pop
int3
scas
cld
test
and
dec
mov
sbb
sbb
mov
mov
clc
cld
scas
loop
push
jl
rorl
push
cmp
lcall
push
dec
add
loopne
fs
fdivs
or
psubsb
scas
lods
leave
ds
dec
mov
push
imul
jns
jns
dec
xchg
dec
adcl
add
insb
imul
inc
push
add
std
mov
stc
mov
jmp
add
cmp
sbbb
jmp
lahf
mov
popf
pop
je
and
or
jmp
outsl
jecxz
mov
sti
fisttps
xchg
sti
xchg
subl
mov
ljmp
test
jg
clc
jp
fdiv
psubusb
xor
push
jg
pop
add
mov
dec
or
jg
add
jmp
add
lods
dec
imul
adc
jle
mov
or
adc
mov
aad
or
ljmp
dec
andb
fwait
add
stc
jmp
mov
pop
add
or
mov
ss
lds
loopne,pt
sbb
fcoms
cwtl
and
cmp
cmp
pop
pop
push
dec
mov
pop
out
add
imul
loope,pt
sub
xchg
das
push
addb
mov
mov
clc
jg
sbb
cli
data16
test
cmp
add
xchg
daa
add
xchg
les
loop
cmp
fs
mov
mov
add
dec
jmp
stos
in
popl
or
dec
dec
dec
int
xor
sbb
sbb
or
push
cwtl
sbb
sbb
sbb
add
mov
in
dec
aam
movb
mov
mov
cltd
stos
and
sbb
adc
xchg
jmp
pop
loop
jp
cmp
dec
test
xchg
sbb
cli
mov
ret
jl
fdivs
test
incb
scas
sub
pushf
push
fs
sbb
pop
out
in
jo
movsl
mov
adc
sbb
cmpsb
shrl
and
add
or
xchg
jno
mov
hlt
dec
xchg
imul
mov
inc
leave
dec
mov
push
das
cld
mov
inc
mov
mov
repz
shr
adc
push
std
xor
sbb
cmp
jge
jp
jo
inc
mov
xor
sar
inc
aam
jo
ret
shrb
inc
call
pop
lock
repnz
out
sbb
hlt
pop
jle
adc
sar
ljmp
push
stos
dec
dec
les
mov
xchg
cmpl
ja
adc
inc
inc
add
inc
flds
scas
xor
and
sbb
and
mov
inc
push
es
jle
shll
jg
adc
or
and
push
pop
mov
movl
xchg
inc
addl
cmpsl
ffree
out
mov
hlt
xchg
add
inc
mov
mov
cmp
cmpb
gs
xor
and
mov
fists
add
push
jmp
movsb
bound
and
jl
push
divb
repnz
or
clc
test
sub
push
pushl
push
cld
js
or
shlb
pop
stos
push
mov
pop
ret
in
pop
sub
rorb
mov
imul
sbb
adc
inc
cltd
sub
insl
les
fbld
std
out
pop
add
adc
mov
adc
movsb
cli
inc
xchg
adc
cmp
or
jo
ss
shl
je
aaa
ja
sub
pushf
lods
inc
stos
pop
rolb
add
lcall
mov
hlt
adc
in
mov
adcb
add
pop
ret
clc
mov
push
fistpl
dec
jl
adc
stc
mov
add
pusha
sbb
iret
sarl
push
xor
or
call
fisttps
ljmp
push
xor
push
xchg
hlt
stos
mov
ret
push
fildll
sub
popa
mov
out
ret
cmpsl
pushf
adc
cmp
pusha
xchg
mov
cmc
popa
shrb
dec
and
and
pop
sub
divb
push
or
add
cld
and
loope
mov
inc
icebp
lret
xor
and
call
jns
xor
mov
dec
das
mov
push
mov
sbb
jne
cmp
lret
test
pusha
rcll
ss
loopne
cmc
bound
fbstp
ss
clc
lods
cmpsb
push
sbb
mov
add
mov
and
or
subl
sbb
lock
add
and
fwait
pop
jg
push
mov
test
and
dec
and
pusha
jmp
mov
mov
pop
pushl
mov
call
scas
and
orb
dec
popl
dec
dec
lcall
loopne
addr16
mov
fmuls
rorb
hlt
sahf
adc
or
pop
fists
dec
lea
cmpsb
xchg
subl
mov
mov
push
les
loopw
dec
cmp
inc
xchg
pop
pop
imul
lahf
lahf
and
gs
cli
lds
testb
ret
and
call
lock
push
push
out
fs
push
test
xchg
repnz
sub
fs
sbb
mov
dec
sub
add
into
pop
fcoms
fcomp
decl
push
jns
mov
xchg
dec
jns
push
dec
or
repnz
adc
call
clc
test
add
scas
lea
cwtl
stos
loope
ror
inc
stos
mov
decl
nop
es
ljmp
push
push
adc
jbe
mov
int3
xor
icebp
adc
cmp
xchg
inc
pop
cmp
das
test
sbb
sub
in
xchg
dec
lock
jmp
and
outsl
mov
andb
push
loopne
sub
cwtl
push
sahf
pusha
sub
mov
xchg
mov
je
fimull
and
into
add
inc
pusha
scas
roll
pushf
add
out
mov
pop
cmpsb
das
aam
fcomps
test
shl
loopne
mov
repz
test
lds
push
mov
inc
setbe
insb
add
mov
insl
test
dec
adc
jno
xorl
mov
popa
clc
movsl
cmc
push
loopne
inc
repz
out
push
jb
jmp
xchg
sbb
lret
pop
sub
lods
in
cli
sub
ja
jo
hlt
add
add
pop
dec
dec
push
addr16
xor
stos
push
push
push
repnz
aad
mov
stos
or
mov
rcl
inc
cld
das
js
in
push
mov
inc
lock
sbb
hlt
mov
jmp
xchg
xor
and
arpl
sbb
pop
inc
xor
lock
shr
hlt
mov
mov
jle
fldt
adc
pop
xlat
mov
xchg
icebp
adc
dec
dec
pop
std
loopne
sbb
mov
jo
push
jge
ss
cmc
inc
ljmp
pusha
movl
inc
pop
mov
xor
sub
pop
xor
call
sub
xchg
test
scas
push
test
push
cld
fs
push
pop
adc
lock
idivl
push
std
mov
push
sahf
add
xchg
pop
pop
in
insl
or
les
push
lock
fsubrp
jg
ret
and
imulb
push
jle
aas
lock
cmc
out
call
add
push
mov
lods
shlb
mov
js
sahf
aaa
repnz
cwtl
lcall
or
dec
fbld
mov
clc
cld
jbe
cltd
sbb
pop
xor
lods
outsl
mov
add
outsl
vshufps
fwait
or
mov
mov
cld
xor
and
lock
adc
iret
and
out
inc
aaa
mov
jae
test
cmpl
scas
imul
fidivrl
xchg
and
push
mov
repnz
push
mov
mov
jo
outsl
nop
fldcw
push
add
leave
fsubs
ljmp
and
add
adc
loop
sub
popf
adc
cltd
aaa
mov
xchg
js
xchg
mov
mov
xchg
movsb
out
jo
into
mul
jecxz
movsb
dec
mov
aad
pop
pop
mov
pop
mov
jnp
cmp
or
lahf
mov
lret
mov
std
or
lret
cmp
js
jnp
add
mov
outsb
out
jle
je
xor
push
lcall
xchg
movsb
pop
js
cld
lds
xor
or
popa
scas
push
jg
xchg
add
inc
cmp
mov
mov
les
imul
js
sbb
popl
dec
div
jg
mov
xor
add
popf
jb
pusha
out
pop
inc
aas
dec
out
ds
jle
ret
mov
and
pop
stos
lret
adc
or
loop
or
fdivr
out
or
xor
mov
pop
jns
dec
das
inc
lods
sub
lret
clc
or
mov
push
add
mov
jbe
loope
xor
dec
jmp
adc
push
dec
dec
enter
cmovb
add
out
mov
insl
dec
dec
jge
inc
cmp
in
or
adcb
cmp
cmp
mov
loopne
js
lds
orl
jbe
inc
add
test
mov
xor
xchg
pusha
and
add
lds
repnz
ja
fists
xchg
sbb
fwait
roll
sub
mov
mov
aas
out
ds
xchg
and
aaa
inc
push
push
pop
mov
js
and
inc
mov
les
loop
adc
adc
pushf
mov
add
jbe
dec
lock
adc
stos
mov
cld
int
jle
push
pop
push
inc
cmpsb
sarl
test
loopne
cld
xchg
pop
rorb
jecxz
arpl
int
outsl
jecxz
je
mov
mov
js
ret
sahf
mov
out
loop
stos
enter
stc
les
add
xor
pop
lcall
cld
xor
adc
aaa
movsb
mov
out
in
lret
aad
outsb
lods
cwtl
cmp
mov
cmp
enter
cmc
push
adc
or
add
cmpsl
arpl
cmp
mov
inc
repnz
jle
ljmp
ds
push
add
pusha
fstps
add
and
repz
ss
jp
jg
jge
push
mov
call
xchg
push
sbb
adc
shr
push
mov
pop
inc
sub
fwait
jb
imul
in
push
xlat
add
jno
das
fidivs
mov
out
fnstsw
fmul
pop
mov
ss
js
adc
test
push
mov
js
lods
add
clc
idivl
dec
clc
icebp
xchg
lods
jg
mov
lock
insb
jecxz
popf
xorl
sbb
ja
insl
lock
inc
lahf
inc
test
push
ds
adc
dec
cs
jnp
add
dec
jne
inc
and
outsb
js
sub
mov
test
adc
push
dec
cli
insl
cmp
lock
stos
sub
mov
jle
sarb
adc
inc
inc
and
xor
loope
shrl
mov
test
hlt
lods
push
pop
fists
pop
mov
fisttps
lock
mov
inc
xchg
repz
nop
sbb
xlat
push
push
insb
out
mov
mov
out
fsts
shlb
dec
push
addr16
pop
popf
shll
dec
inc
loope
test
pop
jl
imul
adc
sub
fwait
push
fdiv
mov
fildll
add
movsl
jno
prefetchwt1
mov
adc
scas
rorl
pushf
dec
push
jecxz
xor
cli
inc
add
pop
push
or
aam
faddl
test
inc
test
inc
push
out
fwait
xchg
nop
aad
lret
sub
andb
jg
xchg
test
sub
xor
cli
fsubs
sbb
scas
sbb
cmp
adc
sbb
cmp
inc
mov
daa
daa
mov
adc
cmp
sub
sar
cmpsl
cmp
add
cmp
fdivl
shl
movl
fimull
add
pop
inc
mov
mov
jp
pop
pop
loopne
test
outsb
stos
sbb
setl
jl
call
cwtl
adc
sbb
mov
mov
mov
js
repnz
mov
popf
inc
ss
mov
push
add
std
std
mov
fsubrl
add
inc
push
and
addb
xchg
popf
jae
lds
js
movsl
inc
add
shll
cmp
std
lahf
or
je
sub
xor
xchg
xor
jne
add
push
fsubl
pop
insb
push
popf
lods
pop
pop
and
cmpsl
push
cmp
cmp
fs
inc
out
lcall
incb
lods
imul
pop
xchg
out
loopne
push
lret
add
dec
and
aad
aaa
mov
cli
sbb
insb
mov
lret
and
cmpsl
rcl
adc
or
lret
cltd
adc
dec
orb
lock
ret
mov
mov
add
pop
sbb
das
pushf
sub
jnp
jns
add
js,pt
lea
cmp
add
mov
arpl
fs
jmp
jle
xchg
pop
cld
nop
lock
es
arpl
shr
es
mov
lret
push
add
test
mov
loopne
and
repnz
inc
dec
add
add
dec
shr
pop
rolb
js
pop
movsb
jbe
xor
clc
xchg
aad
insb
cmp
push
pushf
xchg
cs
dec
test
test
scas
xchg
clc
jbe
mov
push
and
inc
inc
test
minps
into
push
add
add
rcrl
xor
mov
pusha
sub
dec
push
add
dec
sbb
pop
sub
dec
or
paddusw
push
addr16
stos
sbb
push
shl
or
mov
adc
xlat
arpl
adc
cmpsl
sbb
xchg
inc
in
cli
add
nop
adc
bound
mov
mov
and
sbb
test
xchg
cmp
cmp
mov
out
sub
ret
cmpsb
shll
fmull
jge
js
push
xor
stc
jecxz
flds
or
rcll
loope
imul
fisttps
xor
int
clc
loop
mov
int3
sbb
inc
call
pop
push
pop
inc
push
call
test
int3
sbb
push
push
mov
pop
and
or
movsl
push
xlat
and
and
es
inc
push
jl
sarl
jmp
gs
nop
dec
adc
pop
cmp
scas
add
cwtl
jne
into
ja
jl
rclb
xchg
out
sub
sbb
loope
cmp
in
push
adc
int3
mov
rorl
sub
test
pop
arpl
rcr
aas
add
test
cli
add
mov
stos
jnp
orl
in
adc
out
rcrb
lods
out
inc
or
call
test
mov
mov
ret
cmpsl
add
xchg
xor
push
rcrl
add
pop
inc
pop
mov
aas
mov
add
cmp
dec
pop
mov
movsb
jae
push
mov
dec
iret
or
jge
mov
adc
jge
jne
ds
test
and
xlat
push
rol
mov
cmp
lods
sub
test
pop
sbb
rorb
ds
sahf
ret
bts
fisttps
mov
rclb
fldt
mov
jl
or
test
mov
loopne
cli
stc
pop
push
sub
sti
add
mov
fmuls
incl
jno
mov
les
lods
scas
sahf
adc
call
jle
jp
push
ret
sub
mov
xor
fiadds
insl
sub
popa
pop
push
push
inc
or
xchg
jecxz,pt
jmp
add
int3
mov
adc
sbb
test
cmpsl
lcall
adcl
mov
xchg
mov
in
cmp
push
jle
mov
out
in
sbb
mov
dec
sti
mov
pop
or
mov
addr16
call
call
sub
dec
xor
shrl
and
in
stos
jns
pop
dec
sub
dec
scas
xchg
pushf
and
movsl
mov
mov
mov
ss
insb
xchg
les
mov
pop
xor
cmp
push
shld
or
aad
cs
leave
js
mov
pop
inc
inc
mov
fnstsw
inc
xor
iret
adc
fbld
aaa
xor
ljmp
add
sbb
push
mull
call
sbb
or
add
mov
testl
cmc
outsb
pop
or
loopne
adc
pop
inc
xchg
imul
adc
push
iret
daa
lds
pushf
and
or
sub
mov
or
out
push
adc
fisubrs
push
arpl
or
or
mov
incl
bound
push
mov
add
mov
sbb
pop
jge
inc
pop
rcr
fsub
cltd
or
xor
cs
cmp
fidivrl
pop
in
cwtl
push
les
jle
mov
loope
jnp
jle
lods
loop
mov
fdivl
mov
pop
sub
inc
rcll
xchg
fadd
jle
xlat
js
daa
push
in
jae
adc
jmp
mov
call
lret
pop
push
mov
lcall
inc
add
push
sub
mov
or
jg
fldl
xor
mov
lea
lods
jo
sbb
ret
jge
in
ja
push
mov
inc
mov
mov
movsl
sbb
sbb
mov
lds
daa
rorl
mov
test
mov
inc
push
stos
pop
dec
cmp
mov
fucomi
pop
iret
je
mov
test
lock
fisttpl
mov
push
dec
andl
sub
mov
cmp
popa
ds
push
lock
popf
mov
incb
cmpsb
inc
inc
imul
out
and
add
sub
dec
xor
jg
or
out
ljmp
xchg
sub
xchg
test
cmpsl
xlat
dec
mov
rorb
in
daa
es
lds
adc
hlt
xor
mov
cmp
adc
adc
add
xchg
jl
mov
movsb
pusha
std
xlat
adc
push
fs
mov
add
cmp
push
or
mull
cltd
sbb
add
outsl
aas
leave
cmp
hlt
lods
call
lret
lods
popa
add
frstpm(287
inc
bound
stc
and
dec
ljmp
adc
add
lods
outsb
insb
scas
es
adcl
or
push
test
les
fs
fs
cmp
adc
popf
and
movl
movsb
add
pop
lea
inc
sub
and
add
lret
sbb
jle
cmp
push
cld
cmp
fs
hlt
fidivrl
mov
lock
and
ljmp
rol
jle
jbe
aas
and
decl
movsb
add
push
mov
nop
mov
inc
cmp
fwait
dec
psubsb
inc
fstpl
adcl
xor
lea
pop
outsl
dec
mov
ret
add
jl
push
mov
aad
fildll
ret
cmp
dec
push
dec
push
sbb
das
mov
cmp
icebp
repz
xchg
aad
xchg
daa
sbb
xchg
or
or
inc
clc
addl
add
mov
jmp
adc
jmp
sti
subb
mov
or
mov
testb
ret
test
xchg
sarb
add
in
mov
test
iret
xchg
push
adc
cmp
icebp
ret
mov
sub
jae
scas
loopne
imul
stos
call
mov
negb
sbbl
pop
in
ror
popa
fsubrs
ret
push
xorb
imul
dec
cmc
pop
or
std
dec
and
lods
ret
xor
mov
or
push
mov
shrl
icebp
jnp
xor
xor
xor
mov
add
jecxz
icebp
push
jne
mov
mov
pop
add
xchg
cmp
cmp
inc
mov
shrb
pop
add
jecxz
xchg
cmpsb
ret
mov
push
pop
sti
aaa
or
jo
faddp
mov
jecxz
into
inc
push
adc
add
cli
outsb
or
in
cmp
pop
in
inc
and
dec
stos
insb
push
jae
push
cwtl
nop
popf
aam
nop
daa
js
out
stc
mov
xchg
loope
mov
or
mov
mov
repz
int
ja
fildl
jmp
cltd
mov
mov
ss
mov
or
lahf
jl
orl
adcl
aas
loopne
jl
aaa
cmpsl
mov
fadds
jb
mov
or
enter
int3
sti
xchg
aas
jl
mov
aas
lds
sbb
push
call
lock
mov
mov
int
pop
je
fisttpll
js
ret
add
in
mov
dec
pop
mov
aaa
imul
push
sub
pop
nop
cmp
inc
xchg
push
popf
mov
aad
add
sbb
mov
out
popa
aad
push
dec
cmp
add
pop
pop
sbb
add
jne
stc
shll
pop
mov
stos
push
cmc
stos
pop
insl
lods
mov
inc
ja
xchg
cld
cmp
enter
inc
add
call
mov
lods
dec
and
sub
scas
xor
lret
nop
mov
xchg
pushl
ss
sub
pop
sbb
jle
cmp
push
cmpb
sub
lds
pop
or
adc
push
adc
shl
in
add
sahf
test
pop
hlt
xlat
dec
das
ljmp
and
in
loope
dec
pusha
push
std
shlb
add
xchg
gs
jl
outsb
xchg
and
add
test
repnz
fs
dec
mov
icebp
xor
shrl
mov
jmp
das
add
pop
and
mov
push
push
push
add
mov
nop
inc
out
addb
es
in
sbb
adc
jp
adc
xchg
pop
jo
call
pop
aam
lock
xchg
ds
lods
popl
jp
icebp
gs
xchg
xor
or
rclb
ds
or
pop
inc
leave
sbb
imul
pop
xchg
mov
push
xorl
xlat
and
add
push
nop
filds
push
ja
pop
inc
loopne
in
jb
jnp
sbb
pop
pushf
jmp
mov
add
and
out
ds
aas
or
mov
std
mov
mov
test
xor
jecxz
ja
in
jmp
xchg
mov
add
push
hlt
js
mov
ljmp
arpl
fcmovnbe
cmpsl
mov
xor
dec
adc
pop
scas
daa
shll
mov
sarb
test
add
cld
pop
fistpll
pushf
mov
push
add
repz
les
stc
adc
sub
inc
cmp
pusha
lahf
pop
cmp
jle
dec
inc
push
xchg
test
mov
xchg
loope
mov
es
out
hlt
cmp
jl
in
inc
dec
push
test
inc
adcl
mov
fs
adc
mov
cmp
dec
inc
fwait
decl
or
sbb
aas
mov
xchg
data16
pusha
dec
mov
push
xchg
lcall
sbb
adc
scas
push
sahf
dec
psubusw
sub
dec
out
push
ss
inc
ja
push
dec
mov
xchg
mov
loope
loopne
je
cmp
insl
sbb
scas
xlat
pop
inc
das
xor
jge
inc
jae
pushf
add
or
pop
inc
add
sub
add
cmp
in
sbb
jp
and
mov
insb
ljmp
ljmp
sub
or
loop
mov
pop
mov
push
leave
push
arpl
sahf
fldcw
mov
xchg
push
clc
adc
push
out
push
or
not
loopne
aas
scas
mov
or
add
sbb
jo
push
test
adc
jmp
dec
or
sub
xchg
mov
dec
movsb
push
adc
mov
ja
mov
inc
fstl
lock
mov
mov
call
bound
and
movsb
jg
dec
mov
jno
aam
outsl
cmp
out
and
sarl
mov
mov
jl
outsb
sub
lea
sbbl
push
jp
bound
sbb
scas
push
loopne
sub
movsb
jecxz
ret
out
lock
clc
sub
loop
inc
andb
mov
jle
punpckhbw
cli
pop
push
xor
add
jmp
dec
mov
enter
add
das
clc
pop
adc
sbb
fsubrp
mov
inc
cmpsl
les
pop
loop
arpl
dec
es
stc
add
test
je
popf
push
ret
mov
cmpsb
popa
pop
sbb
ret
push
lock
jp
js
jne
cmp
and
xchg
dec
lods
dec
cmpb
dec
and
mov
inc
xchg
pop
and
movb
pop
jle
push
clc
push
insb
pushf
jb
loope,pn
shrl
xchg
jne
mov
cli
pop
jo
mov
dec
out
lahf
sahf
xor
popa
dec
adc
leave
mov
insb
jnp
pop
fstl
sub
test
movsl
adc
sub
repnz
out
aad
ffree
dec
outsl
jno
sub
clc
scas
inc
inc
jecxz
call
mov
ret
push
div
lret
test
pop
popa
mov
push
test
outsl
popf
dec
jno
jnp
inc
pop
mov
popa
mov
outsl
cwtl
lods
mov
mov
push
cld
add
jb
inc
lea
jecxz
movb
loopne
cs
push
push
clc
inc
scas
call
sbb
js
mov
popl
sbb
pop
loop
jns
lahf
sti
inc
cmc
cmp
andb
sub
lods
push
bound
jmp
xchg
sub
and
test
pop
dec
std
dec
loop
arpl
imul
dec
ljmp
or
stc
xor
cmc
pop
pop
addr16
and
add
sti
xchg
push
in
lock
or
inc
insl
addr16
loope
les
dec
ds
add
add
pop
ret
outsl
cmpsb
sbb
push
repnz
and
push
push
scas
dec
outsb
popa
fdivrs
and
xor
inc
mov
scas
xor
cli
test
dec
or
data16
dec
inc
insb
inc
test
push
pop
jge
test
stos
mov
les
pop
cmp
dec
cmc
in
mov
bound
mov
xor
or
mov
jg
jg
lods
add
pop
test
pop
or
daa
mov
jge
push
add
lahf
out
sbb
push
pop
mov
jl
cmp
push
ljmp
jne
scas
adc
push
fxch
sub
xchg
test
mov
ror
jp
test
push
mov
bound
inc
mov
into
cmpsl
inc
push
cmp
cmp
push
mov
mov
in
add
add
cmpsb
pop
inc
add
inc
fs
int
inc
sbb
sub
xchg
inc
sub
dec
incb
aad
shr
es
fldcw
es
test
lods
push
iret
ror
lods
mov
or
sbb
mov
mov
dec
mov
out
inc
daa
jp
test
jno
faddl
pop
add
cmp
pop
jg
and
pushf
mov
jl
lock
adc
or
add
shrl
inc
in
mov
adc
mov
push
call
fstpl
or
mov
sbb
xor
sbb
daa
test
sub
ds
push
lahf
neg
aam
inc
xchg
pop
mov
mov
popf
add
aam
cmpsb
adc
shll
incb
rcll
adc
dec
pop
loope
das
add
testb
xchg
call
out
or
sub
fwait
cmp
jnp
sbb
dec
inc
mov
mov
mov
adc
mov
inc
cltd
sbb
stos
push
scas
rorl
jp
addl
xchg
mov
outsb
lods
jle
enter
cmpsl
in
push
push
lds
test
mov
mov
lds
jl
sti
push
sbb
mov
sti
movsb
out
inc
insl
push
or
ljmp
ljmp
mov
adc
jmp
shlb
outsb
jb
or
jle
and
or
ret
xchg
sbb
aad
movsl
aam
frstor
jne
sbb
mov
pop
jge
in
add
mov
stos
cmp
loopne
jge
je
lods
insb
cwtl
sub
movsb
mov
sub
jmp
pop
jge
adc
sub
lret
cmpsl
loop
mov
jb
mov
add
adc
mov
dec
xchg
mov
clc
xor
pusha
sbb
and
or
add
push
inc
mov
mov
test
add
rolb
or
movsl
mull
fs
adc
sarl
movsl
shr
daa
fdivl
arpl
add
cs
aas
test
sub
add
push
into
xorb
add
mov
cmpsb
add
mov
mov
jbe
xchg
jle
aas
jecxz
adc
dec
or
repnz
mov
aam
jb
jl
dec
sar
fs
adc
jg
aaa
aaa
hlt
divb
punpcklbw
adc
stos
dec
or
jecxz
add
orb
rorl
jbe
ret
dec
adc
push
jae
add
cmpsb
cmpsb
sbb
lds
clc
call
adc
adc
sub
and
mov
aam
test
test
fbld
mov
mov
aas
cli
push
jbe
in
cmpsb
jne
addr16
cmpb
xorl
pop
push
mov
cli
sahf
imul
adc
ljmp
js
outsl
fiadds
push
lods
push
pop
rcrb
dec
and
mov
mov
cs
xchg
insb
clc
push
dec
jae
lcall
or
bound
pop
sub
xor
cmpb
inc
movb
clc
xlat
or
or
rorl
adc
int
clc
scas
jno
jne
add
test
incb
lcall
push
sub
push
xchg
xchg
add
hlt
mov
mov
inc
xor
cmp
push
fwait
lods
pop
adc
cli
imul
xor
ret
inc
jp
cmp
xor
mov
mov
cmpb
jo
add
inc
xor
xchg
xor
push
sahf
in
lret
ja
add
stos
dec
or
mov
ja
jge
add
out
sarl
bound
inc
adc
cmp
sub
je
adc
sbb
mov
movsb
fists
push
int
test
mov
and
inc
icebp
lock
pushf
add
or
jmp
mov
and
inc
sbb
roll
push
mov
nop
dec
imul
mov
inc
fcomip
push
mov
mov
movsb
pop
shlb
pop
cmp
lret
xchg
cmp
mov
add
out
cmp
inc
sub
or
lea
mov
je
in
outsl
dec
decl
mov
xchg
mov
dec
or
cwtl
scas
cli
outsl
sbb
xchg
cmc
cmp
aaa
cmp
xchg
lcall
dec
cltd
popa
mov
in
sbb
mov
fbstp
ds
mov
je
and
inc
shlb
inc
jl
lret
das
mov
push
dec
jnp
mov
icebp
pop
fdivl
ret
dec
insl
mov
add
icebp
add
cmp
cwtl
mov
jle
push
xchg
pop
sarb
dec
fmull
out
bound
loop
sub
push
ret
xor
jmp
jae
dec
jo
das
shlb
jmp
sahf
imul
ret
daa
shrl
les
xor
lea
cli
ret
push
cwtl
es
add
cmp
mov
mov
cmpsb
mov
sub
pop
or
push
mov
lds
add
mov
pop
push
sbb
mov
stos
xchg
cmp
incl
sar
lods
sub
subb
stos
push
and
jb
push
jle
aad
loopne
lock
sub
mov
sbb
sub
jo
bound
mov
icebp
mov
cmp
stos
aas
call
mov
xchg
imul
sub
incl
push
mov
pop
test
bound
or
cmp
je
aas
xor
call
shrb
mov
fcom
push
push
mov
shl
push
mov
data16
sahf
lock
fistpll
mov
fabs
jmp
xor
std
insb
ficoms
cld
cs
and
cmp
sbb
lcall
adc
push
add
stc
movsl
adc
dec
pop
mov
sarb
mov
xchg
add
or
xchg
sahf
dec
rclb
jg
ja
addr16
sub
sahf
add
ds
mov
or
sub
daa
xor
dec
mov
cmp
mov
jle
xlat
sahf
mov
and
outsl
mov
push
fdivrs
push
imul
sub
shrl
cmpsl
lret
les
add
sbb
sbb
test
mov
cli
and
scas
add
adc
jmp
lea
cmp
ds
rcrb
cltd
sti
stos
fmuls
imul
cwtl
mov
and
out
inc
jg
or
xor
or
inc
sahf
mov
cld
lcall
cmp
sub
sbb
iret
aas
in
or
in
loop
xor
in
xor
xor
das
sarb
add
jbe
js
inc
adc
sub
jp
fs
cmp
fcomp
cmpsl
jb
in
test
jb
aam
or
ja
xor
insl
test
and
push
imul
aas
leave
es
js
mov
mov
lea
push
pushf
ljmp
inc
cmp
addl
xor
push
jmp
clc
fwait
inc
mov
into
arpl
mov
cli
sbb
test
aad
mov
cmp
mov
lods
nop
adc
adc
cld
daa
or
lock
adc
cwtl
dec
cli
icebp
adc
jp
xor
faddl
es
shll
cli
cltd
int
arpl
mov
xor
adc
mov
inc
sbb
push
je
pop
push
decl
testl
incl
andl
adc
lods
enter
xchg
cmc
xor
loop,pn
bound
xchg
xchg
sub
pop
jae
lods
pop
cld
push
lahf
xor
test
pop
ret
adc
in
repnz
out
inc
repnz
inc
cwtl
mov
clc
xor
fnstcw
xchg
sbb
sbb
push
jnp
jnp
fucomp
nop
lcall
jb
rorb
aad
xor
sub
jge
xchg
mov
xor
dec
adc
pop
adc
ja
addr16
mov
jmp
jnp
repnz
jo
lds
loop
adc
or
test
sub
or
rorb
push
xchg
jns
cmp
jecxz
dec
call
xchg
cmp
call
sbb
into
push
and
and
xor
push
push
mov
xchg
add
scas
ja
xor
or
shl
push
or
cmova
lcall
dec
jge
adc
push
and
test
lahf
ss
aaa
jg
pusha
sub
push
in
add
pop
jno
call
ds
pop
lcall
lock
mov
inc
jmp
sbb
mov
dec
inc
movb
aas
push
fdivl
push
and
mov
jmp
cmpl
mov
push
xor
sub
mov
push
ret
cld
mov
mov
or
xor
xchg
loopne
push
pop
out
inc
cmp
push
jb
std
out
dec
adcb
xchg
and
mov
aam
xor
call
jecxz
mov
mov
xchg
lods
test
adc
pop
adcl
sbb
inc
jmp
scas
add
mov
call
fiadds
repz
nop
push
and
and
xchg
rol
jns
mov
sbb
repnz
push
mov
loopne
push
add
add
loopne
pop
call
push
mov
mov
inc
jecxz
ret
aad
ficoml
xchg
clc
ret
adc
popa
pop
xor
push
into
mov
push
inc
fstl
pop
mov
pusha
in
pop
push
mov
sub
xchg
sti
cmc
cmpsb
jecxz
jae
pop
test
test
jle
pop
cli
outsl
xchg
mov
add
pop
push
xchg
loopne
jmp
and
jle
xor
lahf
ret
sarl
daa
cld
loopne
stos
fsubrs
mov
dec
std
push
inc
bound
xchg
xchg
int
ss
jle
sub
rclb
push
jbe
push
mov
push
add
ret
xlat
pop
and
or
mov
aas
mov
jp
clc
std
push
jmp
cmpsb
dec
icebp
cmp
and
and
pushf
ljmp
loope
pop
mov
xchg
shrl
fstps
testb
loop
xchg
inc
xchg
pop
push
adc
jl
mov
xchg
lcall
or
ss
xchg
jbe
push
mov
test
js
push
sub
mov
adc
jp
orb
xor
sbb
jbe
std
fbstp
sahf
mov
sbbb
es
sbbb
inc
sarb
ficoms
or
lret
add
jg
enter
pop
adc
pop
cmp
or
inc
imul
jo
xchg
add
push
and
daa
adc
lret
fs
pop
push
repz
imul
rolb
lods
test
xchg
jl
pop
vpsrld
pushf
std
jbe
jno
fxch
int3
pop
pop
push
aad
fiaddl
fidivrl
push
cmp
inc
adc
pop
cmp
imul
sbb
push
into
push
int
jbe
jbe
xor
call
push
out
in
mov
cs
pop
cmpl
cmp
push
add
jmp
lods
xchg
pop
lea
sbbl
cmp
cmp
dec
cmp
je
inc
and
rolb
icebp
push
leave
lock
pushf
bts
idivl
push
dec
icebp
add
sbb
mov
push
inc
sub
lock
pop
xor
loopne
ss
adc
rcl
test
pushf
test
add
jge
mov
clc
sbb
cmp
or
cmp
mov
mov
sbb
in
aad
pop
repnz
add
mov
cltd
cld
jno
rolb
sub
loop
add
aad
out
or
out
mov
subl
jp
push
sbb
add
adc
movsb
mov
fwait
hlt
inc
insb
ljmp
or
fwait
imul
push
xchg
dec
sbb
nop
rolb
call
cmpsb
xor
data16
and
sub
cmp
mov
xchg
xor
mov
sub
push
rep
addl
jnp
lret
add
sub
cld
out
decl
and
sub
sbb
and
add
adc
sub
fdivrs
rolb
stc
sbb
sub
xor
mov
cmp
les
xchg
out
leave
clc
mov
add
dec
sbb
jne
xchg
inc
std
mov
clc
jb
insb
inc
fistpl
decb
add
and
in
sbb
fsubrp
lods
je
mov
jl
adc
popa
cwtl
ret
push
cmp
mov
jl
int
es
xchg
adc
pushf
or
push
or
jg
dec
add
shll
and
cli
out
leave
add
push
clc
icebp
nop
insl
mov
icebp
loop
or
jnp
sbb
clc
scas
inc
add
stc
lret
sarl
mov
test
leave
mov
jae
lret
stos
sbb
xchg
mov
xchg
filds
insb
test
dec
shl
or
xchg
test
cmp
std
push
pop
fistpll
ja
xchg
sub
xor
dec
shr
bound
ja
imul
pop
imul
lret
stos
or
jmp
push
dec
pushf
es
add
cmp
adc
neg
jmp
into
popa
xor
mov
bound
ret
add
imul
pop
insb
sbb
mov
or
cmpb
cmc
andb
icebp
cmpsb
mov
cmpsl
out
push
ret
pop
adc
jb
mov
inc
ja
adc
int3
out
add
add
lock
rcr
dec
dec
inc
rorl
rcrl
sti
mov
in
pop
fsubp
inc
xchg
mov
lock
loop
xor
cmc
sbb
inc
jmp
cld
lock
cmp
repz
push
inc
sbb
or
inc
pop
mov
mov
cmp
or
add
clc
mov
lret
sub
pop
pop
jo
mov
cs
mov
dec
imul
xchg
adc
jmp
and
mov
sarb
jo
rcrb
xlat
mov
or
and
inc
dec
sbb
add
fdivrp
or
fadds
movsl
pop
pop
push
dec
add
icebp
add
push
mov
push
stos
clc
mov
or
or
pop
scas
pop
lea
scas
jbe
cmp
sbb
imul
into
dec
mov
dec
int3
and
mov
mov
shl
push
dec
insl
ret
sub
sub
scas
or
push
clc
dec
inc
test
add
aam
loop
push
lcall
or
das
in
or
or
push
pop
stos
adc
sar
pusha
testb
adc
outsl
inc
mov
clc
inc
sbb
clc
or
mov
mov
mov
or
pop
shlb
push
jmp
jmp
inc
sbb
adc
nop
add
pop
add
or
in
loopne
out
pop
and
or
jg
je
sub
xchg
fwait
pop
movsl
pop
out
cmp
insb
mov
xchg
test
mov
loopne
mov
shll
lea
hlt
loop
xchg
in
or
mov
hlt
das
sbb
dec
inc
and
xor
cmp
cmp
popf
insb
enter
cmp
cmp
xchg
xor
mov
addr16
loope
adc
push
aas
fwait
push
cmpsl
out
test
out
pop
dec
xor
jp
mov
and
pop
mov
push
popf
leave
cmp
test
clc
jne
push
andl
mov
decb
es
les
icebp
aad
mov
xor
inc
cmpb
outsl
pop
inc
dec
repz
ror
daa
mov
push
push
loope
rorb
fistl
inc
pop
pop
add
push
mov
loop
jo
mov
test
sub
add
arpl
push
xchg
jnp,pt
shll
lods
mov
jne
add
or
sub
leave
xor
xor
jmp
lods
les
mov
das
ret
cmp
decl
mov
dec
ret
sbb
push
in
dec
ret
stos
scas
xorb
or
insb
call
mov
movsl
adcl
addr16
pop
and
mov
fnstsw
sub
stos
or
mov
xor
xor
out
es
push
jge
push
push
xor
jns
lds
push
cmp
out
ss
mov
mov
repnz
aam
mov
pop
jmp
cltd
xor
enter
sbb
je
lods
dec
leave
mov
adc
jge
cs
dec
and
in
fsubp
fistps
pop
aas
mov
or
lods
ror
dec
and
pushl
sbb
popa
fucomi
stos
sahf
or
lret
and
add
or
adc
push
loop
movsl
ret
xor
mov
and
adc
add
xchg
dec
cld
popa
adc
es
packuswb
out
loop
test
pop
adc
int3
cmp
cmp
mov
test
xor
jno
lahf
push
fadds
or
mov
fisttpl
push
or
movsb
push
or
fidivrs
mov
and
bound
mov
push
xor
mov
jl
pop
cli
cli
aas
push
add
sahf
inc
stos
push
cmpsl
xlat
cmp
pop
aam
je
jmp
test
out
enter
xor
aam
push
mov
pop
add
cmp
imul
xlat
adc
sbb
cltd
pop
cwtl
js
pop
push
cmpsl
test
int
dec
addr16
pop
xor
dec
cli
push
popf
sbb
xor
filds
sbb
imul
ja
out
mov
cmp
in
and
stos
dec
lahf
sbb
nop
pop
repnz
xchg
or
sbb
daa
lahf
cmp
dec
js
imul
sub
or
or
cli
icebp
sbb
xlat
in
pop
jmp
jo
mov
xchg
and
andl
sub
loopne
rcl
inc
lds
mov
ljmp
add
inc
outsl
popf
ljmp
and
pop
lret
arpl
inc
aas
adc
mov
aam
ficomps
add
mov
mov
mov
or
mov
in
push
test
add
lahf
ret
mov
ret
sub
add
jecxz
pop
lcall
cmp
push
loopne
cmc
stos
xchg
aam
in
cmp
mov
add
incl
test
lock
sbb
add
sbb
adc
lods
int
xchg
mov
bound
push
scas
testl
fs
push
js
jb
xchg
mov
cld
pop
mov
mov
leave
loop
mov
popa
int
sbb
rorb
xchg
les
inc
lods
push
cmc
iret
cwtl
ret
sbb
rorb
fistl
cmp
fwait
push
test
dec
lahf
mov
test
hlt
insb
push
pop
mov
jnp
inc
mov
or
mov
xor
xor
arpl
inc
divb
jmp
sbb
test
sarl
imul
jne
cmc
or
pop
pushf
out
es
cmp
or
mov
aaa
pushf
pop
sub
imul
sahf
into
adc
sar
xor
je
cmc
push
sbb
js
xlat
iret
ss
mov
mov
xchg
sbb
lret
dec
outsl
in
or
int3
jmp
sbb
lock
or
pop
cmp
push
pop
andb
mov
or
test
daa
mov
add
test
mov
add
pop
or
jae
jle
outsb
ret
test
repz
pop
dec
dec
cmp
xor
imul
mov
dec
adc
pop
pop
inc
daa
mov
mov
icebp
xchg
mov
addb
data16
xor
push
xor
addl
je
add
orl
pop
outsl
andb
push
jg
sub
into
and
push
dec
xor
mov
shrb
fidivrl
cmp
push
hlt
lock
push
xor
roll
adc
pop
mov
loop
movsb
xchg
pop
dec
mov
insb
mov
lea
popa
mov
push
je
xor
cwtl
sbb
lds
dec
jl
mov
cmp
test
jp
mov
sbb
cmp
push
pop
shrb
lret
add
pusha
dec
xor
lds
jp
xor
dec
dec
cmp
jecxz
rclb
push
inc
test
xchg
shr
xchg
push
mov
mov
mov
sbb
jo
lods
xchg
pop
pushf
inc
jbe
inc
scas
fadds
pusha
push
cwtl
mov
shr
sbb
mov
or
hlt
test
cs
cld
ret
cmp
jne
lock
test
fnstcw
mov
inc
add
jmp
clc
push
mov
push
jae
outsb
nop
into
loopne
cwtl
dec
fistps
dec
add
test
mov
enter
and
inc
xchg
sahf
or
cs
out
pop
lret
ss
dec
jge
push
aas
out
mov
sub
pusha
and
lret
aam
or
inc
pop
lods
repz
pop
mov
scas
adc
fisubrs
cld
sbb
pop
cmp
stc
xlat
xor
push
aaa
cmp
loope
decl
mov
add
ja
cmp
mov
jle
mov
sbb
mov
and
sub
jae
inc
push
adc
ds
test
sbb
xor
sbb
je
out
mov
fadds
dec
scas
cmc
sub
loop
mov
mov
adc
loope
inc
push
ret
jbe
movsl
test
out
sub
add
adc
push
sbb
clc
cmp
adc
fstpl
mulb
incl
mov
aam
mov
movsl
scas
pop
jne
xchg
pushf
fisubrl
aas
inc
add
or
push
mov
lahf
adc
clc
insb
push
xor
les
orl
in
loope
jg
jg
add
inc
test
sub
cmp
imull
loope
jo
mov
test
call
add
sbb
inc
add
insl
xchg
lcall
or
clc
cmp
mov
push
mov
xor
add
out
test
test
xchg
popf
adcb
and
sub
jo
add
xor
in
and
dec
mov
mov
xor
push
push
cmp
dec
or
mov
nop
repnz
js
cmp
mov
xchg
cli
push
pusha
lret
inc
mov
jge
outsl
mov
push
sub
es
pminsw
aas
xor
loope
fldt
adc
cmp
arpl
sub
jne
pop
movsl
push
xchg
adc
push
sub
mov
mov
mov
cs
mov
js
loop
fadd
mov
das
jle
mov
ret
shlb
test
shll
std
mov
sub
mov
or
test
test
mov
ja
das
scas
mov
pop
add
or
cmpsb
jnp
sub
pop
shl
in
in
or
push
xlat
push
add
test
lret
or
pop
cld
and
pop
and
push
add
daa
loopne
xchg
mulb
out
sbb
xor
pop
dec
xchg
mov
push
sahf
adc
shrb
mov
stos
das
cli
loopne
jp
cs
mov
pop
dec
or
xor
aam
cli
dec
mov
push
jb,pt
lahf
das
add
lret
lods
rcl
mov
xchg
mov
or
jno
leave
xchg
data16
addr16
or
push
jne
insl
hlt
sbb
arpl
add
gs
pop
ljmp
in
in
xor
sub
bound
hlt
pop
mov
lret
ds
dec
dec
push
outsl
call
mov
mov
pop
dec
or
or
ret
rcl
jle
pop
and
loop
add
add
test
adc
mov
mov
sbb
add
rclb
das
push
sub
cltd
pusha
add
xchg
push
decl
mov
sub
xor
and
pop
inc
pushl
cltd
dec
jmp
mov
dec
jo
sub
loopne
js
call
jbe
popa
icebp
pop
cmp
repnz
sbb
sbb
fisubl
lahf
and
inc
cmp
jo
dec
das
dec
cmpsl
or
pusha
rolb
or
filds
xchg
pcmpgtb
dec
sbb
mov
sbb
jo
push
adc
faddl
mov
xor
aad
push
insb
sbb
dec
ret
cmpsb
gs
lds
clc
repz
or
mov
xor
es
inc
push
fsubs
jle
jno
loop
cmp
and
sbb
out
mov
push
lret
xchg
lret
movsl
jmp
sub
pop
sub
in
mov
pop
lock
mov
and
jl
ss
and
fisubrs
rorb
pusha
add
mov
dec
dec
add
call
jecxz
shrl
mov
cmp
ljmp
add
mov
push
push
xchg
in
das
or
arpl
ret
mov
pop
jb
push
cld
adc
bound
mov
dec
jb
aad
push
inc
dec
inc
jae
sub
jo
rorl
xchg
je
hlt
jno
mov
xchg
mov
mov
jae
or
loop
rorb
xorl
mov
or
xor
mov
imul
xchg
xor
mov
inc
pop
push
shrb
cmpsl
fldl
int
outsl
add
dec
mov
lock
fs
call
jp
cld
dec
adc
add
arpl
mov
inc
jns
mov
pop
dec
cmp
fimuls
insb
inc
sahf
jo
push
mov
mov
inc
or
or
mov
jne
dec
sbb
xchg
sbb
and
cmp
rep
rorl
iret
inc
pusha
and
jmp
sbb
xchg
cmp
sbb
daa
orb
push
add
mov
movsb
lahf
ds
test
lea
sahf
shlb
lea
aad
faddl
lahf
cmc
push
xchg
mov
loopne
dec
xchg
es
fstp
push
js
mov
adc
push
and
sbb
imul
shll
dec
jmp
sub
loope
fdiv
test
stos
sub
cmp
in
jg
mov
xchg
sub
sti
pusha
filds
mov
sbb
dec
out
mov
mov
inc
cmpb
pusha
or
push
adc
or
jmp
mov
push
mov
mov
pop
loop
cmp
clc
jmp
out
aas
pop
pop
call
cmc
jmp
mov
mov
stos
jg
cmp
and
xchg
cli
push
pusha
clc
push
shlb
out
stc
pop
lcall
xchg
loope
std
mov
fisttpll
loope
test
sbb
sbb
fnstsw
pop
mov
repnz
outsb
cld
cld
test
enter
xchg
or
pop
sbb
sub
movsl
mov
cmpsb
xchg
add
scas
insl
std
pop
out
std
inc
pop
mov
push
pusha
or
mov
addr16
mov
insb
sub
hlt
xchg
subb
inc
dec
imul
sbb
filds
and
sub
dec
shlb
pop
sbb
mov
cli
jg
mov
std
xor
arpl
jp
fstpt
mov
xchg
jl
mov
paddb
aaa
or
inc
lods
decl
jge
or
push
jne
fidivs
dec
and
jg
sub
lret
outsb
inc
sarb
cli
pop
in
fadds
shl
cli
cmp
jecxz
ja
das
daa
jge
rolb
cmp
add
jge
sbbb
pop
pop
clc
cmp
arpl
lahf
cmpl
cs
sbb
add
divl
inc
jno
add
mov
loop
mov
cld
cmp
xor
cs
and
lods
insb
std
jle
push
xor
add
int3
or
adc
das
cmp
mov
mov
hlt
rcll
add
cmc
inc
pop
dec
lock
fisubs
and
xor
sarb
test
iret
mov
dec
mov
cmpsl
mov
mov
repnz
imul
or
lret
ljmp
xor
mov
xchg
inc
cs
sub
cs
push
loope
movsl
mov
push
aam
inc
mov
and
lods
jb
or
push
inc
cs
pop
dec
mov
and
pop
lock
push
aad
dec
sahf
cmp
add
pop
cmc
jbe
iret
jecxz
dec
loopne
mov
mov
jle
rclb
add
jmp
push
test
and
rorl
repnz
add
push
push
inc
sub
roll
fcomps
std
movl
adc
aas
dec
mov
leave
sub
stos
pop
out
cmp
jmp
cmpsb
pop
add
xlat
add
and
test
jb
or
add
fsub
outsl
pop
mov
lahf
cmc
lahf
out
push
inc
imul
add
mov
mov
add
jns
jmp
stc
sub
add
add
movsb
sbb
hlt
movsb
lret
call
pop
mov
jmp
rcr
jl
mov
dec
mov
pop
cld
ret
mov
out
jbe
fyl2x
fwait
sub
scas
sbb
mov
dec
xor
repz
mov
mov
icebp
rclb
out
es
imul
loop
in
or
js
shlb
dec
pop
or
repz
inc
fwait
cmp
adc
dec
xlat
cmpsb
lcall
jbe
adc
push
cmc
sbb
xchg
roll
jns
call
and
insb
xchg
outsb
push
je
call
andl
inc
mov
fcompl
mov
xor
pop
inc
or
ret
cld
sub
in
adc
inc
js
out
push
mov
sub
mov
inc
decb
test
add
pop
inc
pop
jp
jl
fistps
out
hlt
ret
cmp
mov
jg
or
push
in
ja
dec
bound
mov
in
movsl
das
adc
popl
lods
adc
ret
leave
xor
enter
fcmove
sub
jp
test
mov
hlt
or
lock
lret
mov
adc
out
lock
mov
or
mov
inc
inc
add
jno
aad
push
ja
or
mov
rclb
pop
subb
in
mov
loopne
inc
dec
jbe
or
or
pop
inc
test
push
mov
test
and
aam
jge
xor
and
call
push
xor
xlat
ljmp
add
pop
dec
add
daa
dec
sbb
sub
adc
mov
xchg
movsl
push
xchg
lods
rorl
cli
stos
loopne
or
out
xchg
lds
lods
cmpsb
mov
mov
cmp
mov
mov
jg
rolb
add
out
insl
addb
pop
mov
pop
adc
and
xchg
outsb
stos
loope
mov
fs
loop
xor
mov
add
mov
mov
sbb
add
fs
icebp
lods
adc
data16
push
outsl
or
in
int3
ret
xor
and
out
jae
std
pop
ss
imull
sub
cmc
xor
inc
jmp
popf
test
adc
shll
in
idivl
and
mov
ficomps
xor
push
stc
or
pop
je
sub
dec
out
dec
frstor
lock
jl
pop
repz
sbb
add
jno
mov
into
mov
lret
push
std
dec
das
mov
or
push
leave
dec
sbb
test
or
mov
xor
mov
cwtl
mov
stos
sub
xor
sti
adc
lahf
js
push
sbb
jbe
jecxz,pt
sarb
loopne
loop
xor
xlat
and
jb
scas
fldt
cmp
mov
mov
aam
mov
outsl
ljmp
cmp
ja
add
pusha
sarl
push
loop
loopne
cmpsl
jbe
xchg
dec
loopne
loopne
dec
sbbb
pop
pop
fbstp
adcb
pushf
fwait
or
jb
push
pushf
jbe
fisubl
clc
stos
loop
in
sub
sahf
outsb
ds
andl
lahf
scas
bound
les
jl
mov
testl
aas
lods
popa
hlt
push
sahf
cltd
js
pop
loop
inc
out
into
ret
pop
sbb
pop
inc
fidivs
pop
mov
popf
test
inc
out
popa
pop
xor
dec
aas
push
dec
fcomps
movsb
rcrb
jge,pn
movsl
pop
push
jmp
insb
cmpsb
xchg
push
inc
ja
in
icebp
jnp
adcl
jae
outsb
mov
movsl
insb
lcall
leave
inc
pop
into
adc
ja
add
addr16
xchg
ss
add
xchg
pop
jb
shl
clc
cwtl
test
sub
and
mov
mov
inc
or
mov
mov
xor
inc
sub
pop
inc
cmpsl
ljmp
cld
inc
sbb
ss
cmp
pop
mov
jp
fwait
aas
sbbb
mov
lret
out
outsl
movsb
mov
add
mulb
jl
mov
insb
cmp
cmp
sbb
mov
gs
cmovl
add
and
mov
sub
fldt
push
repz
xchg
mov
push
jecxz
jno
sub
push
dec
ds
std
or
add
xchg
or
push
insb
icebp
sub
mov
repnz
stc
pop
jle
out
inc
and
popf
sbb
mov
add
std
mov
and
lods
mov
icebp
ret
lret
cmp
sub
stc
jnp
mov
add
ret
add
inc
lcall
cli
les
add
popf
jg
jnp
add
sbb
leave
add
dec
mov
inc
push
inc
js
pop
push
call
imul
fcoms
xchg
lock
dec
outsl
sahf
les
dec
andb
push
mov
jp
inc
inc
lods
loope
pop
fsubrs
rol
js
into
loop
push
and
push
icebp
bound
loopne
inc
or
inc
adc
loope
jno
sbb
enter
pop
jg
lock
inc
cmc
adcb
and
push
add
int3
mov
aam
into
decb
loopne
out
rorb
xchg
dec
adc
cmpsl
pop
pop
xor
daa
jmp
aaa
repz
popf
xchg
or
pop
ljmp
pop
rcl
out
fisubrs
fmul
push
jno
xor
push
dec
loope
test
and
push
jle
adc
pop
icebp
cmp
test
mov
ljmp
mov
fs
or
sub
dec
imul
dec
aas
outsl
pop
aaa
jecxz
jp
xchg
les
stc
mov
loope
inc
fbld
cmp
repz
or
pop
mov
cmpsl
push
leave
negb
jge
xchg
jo
adc
adc
push
or
stc
add
enter
insl
xchg
and
mov
sbb
adc
ljmp
push
pop
ss
inc
cmpsb
je
pop
adc
or
lock
inc
icebp
jg
lea
mov
fs
icebp
lcall
mov
mov
sahf
lcall
or
sub
pop
mov
repnz
jl
test
mov
mov
lds
mov
lret
and
shl
add
cmpsl
aaa
push
xor
mov
adc
cmp
fcoml
subb
popa
cmc
shll
jmp
incl
lds
lock
cmpsb
repnz
adc
cld
fwait
push
movsb
xor
add
dec
inc
test
daa
cmp
and
fadd
adc
hlt
das
cmc
push
rcl
push
test
cmpsl
iret
jp
mov
sub
push
xchg
mov
inc
shrb
sub
loope
mov
xorb
add
and
jbe
int3
pushf
fbstp
in
movsl
mov
mov
sub
lds
cwtl
or
pop
mov
lods
mov
pop
or
and
in
sub
mov
insl
mov
mov
out
inc
xchg
or
and
ror
mov
std
jl
lret
mov
aaa
xchg
xor
cmp
test
ret
ss
fsubr
shrl
sub
xor
mov
pavgw
pop
or
insl
or
faddp
sub
mov
call
pop
cmpsb
arpl
bound
mov
dec
mov
aas
movb
sub
into
and
mov
pop
or
mov
or
dec
mov
lock
aam
cmp
rorl
js
call
inc
xor
lcall
out
sub
or
insl
lock
andb
mov
xchg
test
shrb
cmpsl
sub
xorb
xor
and
das
add
loop
jo
adc
pop
xor
fs
fisubs
mov
fcompl
xchg
mov
add
dec
ja
loope
or
adc
add
notl
add
imul
jle
push
out
mov
sti
mov
adc
pop
dec
mov
aaa
inc
cmp
rdmsr
shlb
xchg
subb
add
cmp
or
and
fmuls
inc
push
roll
cld
add
add
push
push
popfw
xchg
loopne
js
add
out
sbb
jg
fnsave
push
sub
movsl
pop
shrl
jge
mov
cltd
rep
lret
pop
lcall
xor
pop
leave
inc
iret
or
push
jne
jb
popf
jmp
and
test
iret
push
cmp
jmp
test
push
lcall
push
adc
push
adc
add
mov
lock
stos
inc
and
jbe
jmp
or
roll
ret
or
mov
push
movsb
out
dec
lods
or
mov
loopne
push
and
mov
jnp
xchg
and
leave
sbb
fimuls
mov
jae
push
pop
stc
dec
insb
mov
insl
out
outsb
inc
and
inc
mov
xchg
jp
dec
and
push
push
dec
fs
mov
jl
cmp
incb
addr16
movsb
jmp
les
mov
int
add
loopne
call
mov
adc
cmp
adc
xchg
lods
mov
push
mov
nop
cmp
clc
or
out
jne
dec
sti
loope
cmp
and
cli
aam
push
lcall
movsb
cmpl
push
ss
sbb
jbe
pop
stos
jbe
insb
mov
pop
pusha
pop
cld
add
fldl
push
mov
lds
shll
shrl
in
lds
test
mov
das
fisubl
xchg
test
cld
pop
add
dec
sub
jmp
jns
pushf
or
cwtl
sbb
icebp
adc
in
stos
and
push
inc
in
jbe
cmp
mov
or
sub
xchg
add
movsb
in
lods
lock
hlt
sub
pop
lds
fadd
stos
xlat
push
dec
popf
dec
shrb
push
cli
xchg
mov
lods
mov
loopne
cmp
xchg
pop
mov
and
adc
mov
dec
mov
adc
sub
clc
xchg
loope
ja
jmp
pop
popf
dec
shll
sahf
in
test
xchg
cmpsl
adc
cs
and
js
cmp
mov
sahf
xchg
fdivrl
popl
fwait
out
add
aad
jg
sbb
jg
jl
fnstenv
in
test
mov
jae
lret
bound
and
cmpsl
lcall
fwait
mov
cltd
ret
xchg
out
aas
test
outsl
shlb
mov
out
add
mov
mov
outsb
pop
insb
movsl
icebp
ror
mov
mov
pop
sbb
inc
mov
add
mov
sti
cmp
outsl
sbb
hlt
xor
xor
orl
push
dec
fidivs
push
add
daa
outsl
sbb
leave
shlb
pop
pop
pop
mov
cmp
pop
dec
mov
push
mov
outsl
movsb
and
dec
repnz
xchg
and
xor
roll
test
pop
inc
push
mov
jno
popf
xlat
stos
add
jne
pusha
scas
jno
mov
aaa
pop
das
nop
test
cmp
cmp
cmc
gs
scas
mov
cs
pop
jns
jb
push
dec
shll
adc
mov
and
in
arpl
gs
mov
sbb
out
push
push
xchg
daa
stc
mov
mov
nop
mov
cld
or
rcl
out
push
mov
je
pop
inc
insl
pop
add
jl
test
pop
jmp
push
lret
in
ret
push
xchg
sbb
mov
mov
pop
shrl
mov
adc
cld
push
shll
sbb
push
rcrl
or
and
add
rcrl
stc
insl
call
jmp
mov
ds
sub
add
aad
jo
xor
adc
xor
rcll
scas
imul
xchg
into
lods
in
adc
mov
cmp
testb
push
and
dec
push
in
add
insb
dec
push
movsb
test
inc
mov
xor
sti
into
sbb
inc
sbb
data16
stc
mov
and
adc
mov
jp
movsb
adc
lock
gs
push
adc
and
jp
test
js
jp
cmp
sub
dec
push
jb
int
lcall
cli
cmpsl
cmp
mov
lock
mov
inc
sbb
or
sub
add
aam
jnp
and
cwtl
add
loop
and
pop
or
dec
popa
clc
adc
fidivs
mov
mov
cmp
punpckhbw
jge
aad
jecxz
lods
pop
out
xor
repnz
outsl
dec
add
inc
add
inc
jmp
insl
icebp
or
mov
leave
sub
in
push
pop
scas
rep
leave
cmp
pop
pop
jge
lea
in
dec
clc
dec
rorb
jl
and
imul
aas
and
outsl
sub
jecxz
lods
add
or
mov
mov
insb
add
or
aas
jbe
cmpl
out
fsubs
iret
pop
and
inc
cli
lock
cmp
sarl
sbb
fisttpl
xchg
nop
push
clc
imul
mov
mov
sbb
jmp
push
add
movl
out
in
sbb
leave
dec
enter
repz
sub
inc
loopne
or
mov
gs
dec
mov
arpl
cmc
mov
adc
aam
mov
test
int
add
clc
sarl
push
fidivl
or
and
and
mov
test
xchg
in
in
shl
adc
mov
cmp
cmc
xchg
jg
xchg
ja
jne
jbe
arpl
sub
loopne
mov
jl
shrb
mov
cmpsl
sbb
stos
arpl
sub
xor
jg
inc
cli
sub
ret
and
push
test
adc
loopne
subl
xor
and
into
test
cmpsb
hlt
inc
mov
movsb
lock
add
dec
and
pop
mov
push
adcl
int3
cld
or
shrb
inc
mov
and
int
call
int
add
pop
sub
or
insb
out
dec
leave
sub
adc
or
push
pop
adc
rol
jbe
fidivrs
hlt
dec
cmp
sbb
inc
gs
mov
cmc
push
insl
fbld
loopne
and
adc
lods
mov
fld
or
xchg
dec
popf
into
arpl
out
jb
add
jae
andb
mov
push
lea
imul
subl
pshufw
sub
cmp
push
adc
mov
lock
filds
repz
and
adc
mov
add
das
movsb
xchg
aaa
cmp
in
test
sbb
aaa
repnz
das
filds
xor
pop
dec
push
lock
xchg
aaa
and
mov
and
xlat
outsb
js
xor
imul
mov
mov
jl
pop
lret
jp
adc
push
sbb
sbb
neg
lea
sbb
and
test
mov
out
les
sbb
mov
mov
xchg
pop
jno
push
push
mov
push
or
lcall
pusha
lcall
sbb
mov
add
xor
test
jle
cmova
push
lea
mov
xor
stc
pop
rclb
sbb
mov
outsl
sbb
aaa
jnp
ja
sbbb
addr16
repnz
lea
in
loop
mov
xchg
adc
xor
mov
enter
jo
movsb
jp
icebp
mov
popf
ljmp
js
mov
lock
pop
push
mov
pop
push
add
subl
ja
dec
add
dec
in
or
scas
jle
lods
xorl
adc
add
out
fldenv
xchg
rcl
xor
loop
xorb
fcoms
jmp
dec
shrl
mov
std
arpl
inc
jno
mov
or
pop
inc
sbb
push
xchg
fnsave
mov
jp
inc
dec
and
cmp
jecxz
xchg
pop
subb
sbb
xor
arpl
cmp
jbe
aam
call
inc
aas
push
iret
jne
adc
jb
sub
sbb
mov
adc
psubd
pop
cmpsl
je
and
inc
mov
add
cmpb
push
adc
cs
test
xchg
scas
das
xor
jp
and
mov
push
jecxz
mov
mov
test
pop
ja
inc
stos
mov
dec
xor
xchg
das
add
cmp
add
fsubl
ja
inc
pop
dec
icebp
xor
addr16
jno
push
mov
inc
jl
int3
jo
jecxz
adc
fcoml
pop
mov
enter
mov
cmp
scas
nop
push
sub
test
mov
scas
ds
loope
or
mov
cmpsb
fdivr
out
and
int3
movsl
pop
clc
xchg
dec
leave
cwtl
sbb
sbb
pop
jne
aad
cwtl
inc
je
clc
repnz
lahf
mov
mov
frstor
pop
add
pushf
bnd
sbb
jle
loope
out
or
add
and
and
push
adc
adc
adc
or
xchg
movmskps
les
aad
xchg
dec
sbb
mov
repnz
mov
test
pop
push
in
adc
jmp
push
push
and
roll
pop
loop
loopne
xchg
push
cmp
push
bound
repnz
inc
xor
ficompl
popf
pop
sub
addb
cmp
jmp
or
inc
js
xlat
jbe
cmp
sub
sbb
aad
cs
push
sbb
leave
pop
hlt
das
jge
shl
and
xor
sbb
pusha
and
mov
cmp
jg
lret
testl
sbbl
xorl
bound
test
push
mov
rorl
incl
mov
inc
cli
dec
jae
dec
mov
adc
aad
push
mov
cmp
and
cmc
pop
add
aas
cmp
loopne
hlt
push
add
pop
or
jno
jp
mov
cmp
cltd
ja
call
mov
xchg
outsl
movsb
xor
xor
fwait
xor
mov
ljmp
js
jne
call
jo
cmpb
xor
lahf
or
rorb
pop
push
jmp
rcll
aas
pop
jmp
and
fidivl
hlt
cmp
decb
sub
xorl
adc
mov
inc
repz
insb
add
in
ret
inc
sub
aas
jo
sti
aas
or
and
pop
xor
int3
subps
sub
call
mov
cli
loopne
sysexit
je
out
movsl
cli
fidivs
push
sub
add
adc
aam
xchg
sbb
dec
cld
mov
lret
lret
pop
mov
pop
jbe
mov
dec
and
jg
jle
add
sbb
adc
sbb
jg
cmovns
sbb
cmpsl
out
lods
loop
add
pop
pushf
pop
lcall
shll
cli
sbb
pop
clc
xor
loope
mov
jo
pop
mov
pop
lock
jmp
inc
lods
mov
out
inc
jo
icebp
mov
shll
and
push
pop
stos
or
lock
hlt
lods
mov
fisubrs
adcb
repz
jmp
scas
add
add
sbb
ds
shlb
mov
iret
mov
cmp
xchg
lcall
les
cmp
filds
mov
pusha
cltd
add
or
mov
jbe
xorb
or
jecxz
shll
and
movq
lock
pop
push
mov
push
jo
clc
fistl
jle
cmpl
addl
andl
test
das
adc
ret
jg
jb
sbb
inc
xor
adc
inc
cld
add
or
xor
pop
adc
imul
dec
push
movsl
sbbb
mov
mov
pop
sub
cld
addr16
and
or
std
push
or
out
and
xchg
add
loop
xor
les
add
cmp
pop
mov
and
repnz
and
cwtl
pop
push
sarl
loop
fidivrs
mov
mov
push
hlt
pop
sbb
js
mov
enter
sahf
pop
addb
sub
lock
xchg
mov
std
jno
cld
ret
mov
scas
lcall
inc
outsb
xor
or
std
cmpsb
or
js
sbb
push
ljmp
pop
roll
dec
repz
xchg
mov
cmp
push
sub
xchg
add
xorb
pmuludq
mov
sti
loop
and
push
push
push
push
addb
aas
mov
es
into
xchg
loopne
pop
ret
add
dec
loopne
jae
dec
and
pop
jb
jle
icebp
daa
loopne
pop
std
cmpsb
pop
cmpsb
ss
xchg
orl
cs
jge
cld
bound
les
fidivs
pop
decb
ret
dec
pushf
ret
test
or
add
les
lods
enter
dec
cs
call
jle
stos
cmpsb
lds
fs
pop
jne
shll
lahf
xchg
orb
and
stc
lock
inc
test
or
and
clc
repnz
pop
test
or
mov
sub
cmp
fs
push
cli
and
jmp
mov
repz
mov
in
inc
xor
inc
cmp
mull
les
aaa
shrl
push
mov
push
bound
fwait
sub
ret
dec
xchg
sub
and
dec
pop
cmp
ja
mov
jl
xor
sub
ss
adc
fnstsw
out
cmp
sub
ljmp
push
push
xchg
dec
inc
xchg
lock
inc
addr16
les
andb
lret
mov
testl
add
sahf
fisttps
inc
and
push
out
jecxz
loop
int3
rcr
push
dec
push
mov
mov
inc
lock
cld
push
adc
push
decl
push
fwait
icebp
daa
rolb
mov
jl
cmp
test
test
enter
cmp
xchg
and
popa
sbbl
mov
xchg
add
jno
xor
jmp
xchg
cli
pop
mov
mov
dec
hlt
inc
cmp
mov
lock
and
or
ficomps
loop
dec
cmp
pop
push
cld
scas
sbb
xchg
ja
jbe
adc
pop
mov
add
les
jo
and
add
imul
cmp
lcall
and
adc
cmp
and
scas
and
sarb
sbb
mov
data16
nop
fwait
sub
add
or
cltd
add
inc
shll
push
push
mov
pop
and
iret
lahf
sub
jbe
data16
ror
out
dec
sar
ss
lcall
sbb
or
movsb
test
fistl
push
pusha
pop
xor
or
mov
add
outsl
mov
test
jbe
aas
sub
loopne
std
mov
pushw
jp
cs
test
mov
sub
or
ret
loop
mov
andl
cmp
push
dec
mov
sub
in
mov
clc
aas
inc
sbb
sbb
cmp
xor
pop
shll
sub
gs
leave
push
sub
or
and
jl
push
mov
orl
sub
test
pop
add
sub
xchg
jp
pop
or
xor
sub
sub
mov
fstpt
or
lahf
pop
and
ss
add
sarl
mov
xor
xor
pop
xchg
xchg
push
dec
or
push
adc
jecxz
pop
or
mov
pop
ja
sub
or
mov
stc
jg
jmp
scas
popa
jp
xchg
subb
icebp
pop
std
jecxz
adc
int3
test
fs
js
js
xchg
inc
or
or
jmp
add
movsb
negl
lock
mov
std
lret
leave
cmp
push
adc
cld
pop
adc
xchg
shlb
aam
mov
les
cld
mov
nop
jl
push
xchg
cmp
mov
xor
roll
outsl
pop
aas
or
mov
jecxz
scas
add
add
xchg
loope
cld
and
lret
xchg
adc
pop
mov
or
loope
push
xor
xchg
lock
pop
std
daa
cmp
xchg
jge
pusha
lahf
cmp
arpl
les
mov
ret
jbe
xor
mov
or
jbe
jo
xor
scas
cmp
icebp
mov
push
or
xchg
pushf
mov
add
scas
test
pop
sbb
add
pop
dec
add
mov
clc
ret
cmp
clc
xor
ret
or
xchg
pusha
cmc
or
test
push
mov
loop
ss
mov
mov
jle
imul
das
cwtl
jo
popa
add
pushf
iret
clc
mov
arpl
ljmp
rcrb
adc
pushf
jecxz
xchg
incl
fsubr
stc
iret
pop
dec
or
sub
out
or
jno,pt
and
and
mov
sub
inc
push
adc
aaa
ret
pusha
push
inc
loope
lods
es
mov
std
adc
mov
adc
jne
cmp
lahf
mov
mov
lock
inc
cmc
jg
or
arpl
je
rclb
push
dec
adc
jp
adc
lods
mov
add
dec
sub
shrl
ret
push
cltd
xchg
iret
incl
out
lret
stos
inc
cli
in
js
addb
sub
sub
and
lahf
cmpsb
ror
dec
loopne
pop
jmp
adc
dec
jbe
in
xor
sub
out
pusha
ljmp
outsb
xor
push
pop
mov
cs
jnp
or
mov
dec
imul
ret
mov
push
pop
lods
cs
xor
ja
mov
jle
sti
lds
test
arpl
pusha
xor
mov
cmp
subl
jb
pop
dec
aas
mov
or
std
shrb
cmp
mov
mov
in
cli
jbe
lods
stos
lods
ss
cld
es
push
push
es
pop
jo
xchg
push
mov
testb
push
mov
das
pop
cmc
xchg
mov
stos
jmp
repz
out
pop
jg
cmp
adc
sbb
jmp
adc
mov
rcrl
add
loope
add
aad
fnstenv
pop
stc
ja
out
popf
xchg
lea
push
out
fsubr
add
mov
add
adc
xor
push
sub
xchg
xchg
push
mov
jle
sub
mov
cmpsl
std
frstpm(287
pop
or
gs
sahf
or
mov
lea
jp
pusha
cmp
ljmp
add
mov
mov
clc
jmp
incb
sbb
mov
jge
mov
add
or
cwtl
and
jge
popa
lcall
pusha
and
mov
or
fdivl
and
shrl
fdiv
or
scas
insl
sub
mov
clc
xchg
lock
pop
push
cmp
scas
inc
pushl
je
scas
inc
in
or
mov
dec
mov
cmp
test
push
rolb
sub
test
das
mov
jle
sbb
adc
sbb
dec
jo
loopne
sbb
std
and
fdecstp
test
lock
scas
and
inc
or
pop
cmpsb
iret
fsubrs
xchg
pop
test
adc
pop
or
inc
push
push
ljmp
in
loop
and
pusha
call
test
addr16
in
or
in
arpl
mov
outsl
pushf
push
out
scas
cmpsl
pop
cld
jecxz
sub
je
aaa
adc
inc
xor
adc
cmp
push
adc
sub
cmp
push
loope
mov
daa
ret
inc
je
sbb
decl
ficoml
mov
xor
es
sbb
not
cli
in
repnz
loopne
xor
xor
push
push
push
loope
dec
add
add
icebp
push
enter
xor
js
sbb
sub
cmp
stc
adc
add
outsl
mov
mov
addb
pushf
xchg
imul
rcr
mov
fistps
mov
movsl
mov
jb
cli
jnp
push
sar
xchg
aaa
ds
orb
cltd
pmaxub
push
mov
flds
push
dec
or
iret
icebp
sbb
jno
add
jmp
fisttps
xchg
imul
sub
ljmp
sbb
sbb
lret
xorb
xor
pusha
cmc
movsb
mov
cli
push
int3
rolb
mov
push
xor
sub
jge
jg
add
addl
imul
or
sbb
dec
les
cmp
cli
xlat
sub
cmp
cmp
adcb
mov
popa
xchg
hlt
mov
pop
inc
mov
pop
push
sub
mov
aas
incb
xchg
aad
sbb
sbb
test
cmp
call
lret
scas
mov
rcll
xlat
sbb
dec
inc
mov
out
add
or
mov
lahf
cmp
push
sub
adc
shl
roll
jb
inc
sub
inc
cmp
sahf
pop
outsl
cld
pop
push
adc
push
sub
addb
imul
adc
xchg
and
adc
test
adc
push
outsl
jne
lret
pushf
and
and
mov
std
dec
sbb
jg
push
add
iret
popl
xchg
sub
pop
call
sahf
call
xchg
add
pop
cmp
sbb
inc
and
xor
call
and
sub
in
lods
imul
or
sub
mov
pop
sub
add
dec
mov
add
cwtl
jp
cmp
decl
fmull
xor
arpl
iret
or
inc
jne
sbb
mov
call
in
xchg
and
icebp
mov
pushf
pop
pop
xchg
adc
xchg
cmpb
das
sarl
loopne
insb
stos
sbb
jno
pop
and
pop
ds
adcl
shl
push
sbb
cld
push
cli
incl
add
ljmp
jg
jnp
xor
xlat
notb
dec
out
int3
in
inc
dec
inc
dec
les
sbb
or
mov
or
xchg
inc
lds
push
cmpsb
data16
add
push
lock
xorb
jg
jecxz
shrb
gs
out
jg
cmp
adc
push
xlat
sub
js
inc
stc
and
mov
shrl
test
add
lds
mov
sub
sbb
ret
pop
pop
or
in
faddp
xchg
inc
addl
add
mov
sbb
test
xor
cli
insl
xor
sub
push
mov
lret
jp
xchg
rclb
or
adc
das
lea
pusha
inc
dec
cmp
mov
es
mov
icebp
cli
adc
jno
jg
adc
iret
ret
mov
ret
scas
add
outsl
or
ficoml
movsl
mov
mov
push
jecxz
sbb
aaa
mov
add
sub
jns
adc
mov
inc
push
lcall
mov
add
push
add
xor
dec
cmp
outsl
push
ret
js
inc
or
movsl
movl
xorl
scas
ror
pop
out
xorl
cmp
xor
add
lods
js
mov
push
jo
push
push
add
xchg
push
aaa
in
inc
fwait
loop,pt
bound
mov
or
xchg
faddp
cmp
add
sbb
enter
xchg
int
in
std
adc
jmp
out
mov
cmp
test
xchg
xor
std
pop
cmp
and
cld
and
mov
inc
adc
inc
mov
movsb
shl
xlat
test
in
stos
cld
sbb
xor
test
add
mov
pop
xor
mov
es
dec
inc
int
mov
ja
stos
rclb
nop
in
and
and
mov
jmp
xor
adc
shrl
or
mov
scas
in
fsubl
lret
sbb
cmp
decb
xchg
out
xor
lock
loope
push
adc
loopne
mov
clc
mov
adc
std
sub
pop
rcrl
xchg
adc
mov
xor
in
addr16
xchg
push
add
lods
movsl
lods
inc
aaa
lock
pop
arpl
add
push
xor
wbinvd
cmp
add
test
jae
fwait
mov
xor
fdivl
dec
push
add
or
dec
bound
add
daa
rorl
jg
adc
mov
pop
adc
xorl
cld
push
mov
aam
sbb
cmpsl
adc
adc
lahf
xchg
je
outsb
outsl
lock
cmc
mov
pop
xchg
popf
fsubrs
xor
pusha
out
lahf
decl
jp
inc
dec
hlt
arpl
aam
sub
into
cmp
hlt
add
cmpsl
add
add
sahf
jle
and
into
xor
xchg
stos
jg
mov
daa
jl
loopne
mov
nop
mov
out
mov
aas
loop
inc
add
js
fcoml
jg
and
push
pop
mov
mov
pop
les
ljmp
or
mov
out
lods
clc
cmovbe
adc
cmp
pop
jns
test
lock
mov
mov
sub
xor
insb
mov
xor
pop
or
adc
shlb
cli
or
mov
xchg
pushf
xchg
popf
mov
fsubrl
xor
lret
fsubrp
jo
or
int
push
sbb
loopne
xor
add
mov
sub
pushf
inc
js
mov
inc
pop
add
and
dec
rolb
lods
test
jb
dec
fnstsw
jp
aam
mov
xor
aaa
out
or
orb
int3
cmp
adc
pop
inc
xlat
aaa
cld
cmc
and
inc
fs
jno
shrb
mov
jbe
inc
push
mov
push
pop
push
mov
xchg
sti
testb
std
sub
push
bound
mov
xor
sub
push
fs
inc
sbb
femms
cmp
stos
mov
mov
push
sbb
or
aad
in
add
fcoms
jmp
sahf
mov
insl
cwtl
adcb
mov
shll
dec
mov
xchg
cld
dec
bound
js
mov
arpl
mov
add
fisttpll
dec
loope
nop
lods
sbb
ss
addb
or
xorb
scas
xchg
call
mov
rorb
int
push
mov
cli
dec
mov
pop
and
xchg
andl
jo
mov
sbb
movmskps
cli
or
sbb
lods
cmpb
into
lret
mov
xchg
dec
subl
push
sub
inc
xchg
pop
push
xchg
adc
inc
add
add
sahf
das
das
mov
out
push
add
sbb
ja
sti
mov
xchg
ja
fcmovb
sbb
jle
jmp
inc
adc
shl
dec
scas
jp
cli
addb
aaa
mov
xlat
push
mov
fdivr
in
mov
push
stos
out
test
cmp
adc
lea
lock
or
pop
dec
hlt
insl
xchg
jg
imul
mov
movb
cmp
es
dec
incl
xchg
pop
and
xchg
fnstenv
ret
xor
data16
repz
sahf
adc
daa
enter
push
ret
pop
push
lcall
cwtl
pop
into
add
dec
pusha
adc
daa
mov
mov
push
add
pop
loop
loopne
push
cli
icebp
pop
test
push
adc
pusha
dec
jp
loop
sar
repnz
fs
push
jo
icebp
fisubs
adc
push
xor
push
jle
inc
fcoms
push
scas
jg
out
add
insl
scas
inc
icebp
cmc
jns
outsb
jbe
shll
and
enter
icebp
in
jns
inc
hlt
insl
mov
push
out
adc
sarl
sbb
adc
inc
movsl
es
inc
shrl
cmp
add
add
xor
inc
movsb
sbb
addr16
xchg
mov
shrd
gs
cmp
out
mov
push
xor
and
add
mov
fcmovb
jno
scas
jnp
push
mov
lea
scas
cwtl
pop
rcll
inc
rcl
inc
sub
add
add
cmc
dec
mov
dec
push
and
jge
or
shr
pop
fidivrs
mov
fidivrl
cltd
cmp
sbb
or
imul
or
popa
mov
mov
je
in
inc
das
jmp
sub
call
cmp
insl
dec
loop
push
mov
arpl
jg
xor
push
lcall
sub
aas
jnp
cmp
xor
or
mov
push
mov
cmpsb
adc
cmpl
adc
push
ja
fidivl
push
popf
hlt
pop
pop
push
rolb
lock
sub
push
test
mov
pop
in
or
fcoml
lods
imul
jnp
or
lahf
sub
mov
pop
ror
jge
and
mov
inc
pusha
adc
mulb
jbe
dec
jge
fs
bswap
jmp
xchg
aad
rolb
add
sub
jne
jb
mov
insl
hlt
icebp
inc
inc
frstor
mov
sbb
sub
hlt
jmp
je
push
movsb
mov
pusha
dec
cmp
loopne
test
pop
jns
lea
or
ret
adc
insl
aad
and
push
je
fs
mov
push
xchg
pop
ret
pushf
and
pushf
mov
or
adc
popf
adc
cwtl
pop
and
sar
xchg
cmc
ret
cmp
jmp
loope
cmc
add
push
lods
scas
mov
mov
add
movsb
inc
mov
cmpsl
pcmpeqb
mov
mov
repz
orb
je
stos
add
pop
xchg
inc
clc
jecxz
nop
sub
out
push
xchg
ljmp
fldt
add
pusha
lea
repnz
pop
sub
add
andl
cmc
xchg
stos
push
nop
sahf
jmp
pop
js
mov
sbb
in
adc
mov
lahf
dec
mov
cmp
jbe
or
mov
xchg
push
push
dec
cmp
and
push
xchg
stos
mov
push
je
pop
inc
xor
mov
sbb
lahf
inc
imul
mov
pop
or
int
push
dec
cmp
or
jl
mov
mov
push
mov
push
ds
mov
loopne
gs
sub
sub
cld
jno
add
movswl
mov
or
mov
fnstenv
lea
add
xchg
sub
mov
sub
in
imul
push
xlat
imul
pop
imul
inc
ljmp
adc
lret
xchg
fnsave
push
mov
push
data16
loope
mov
inc
cmpl
jge
add
stc
xchg
movsb
cmp
pop
lea
sbb
inc
ljmp
pop
pop
mov
insb
movsb
push
sbb
nop
jl
mov
out
inc
loope
insb
xchg
daa
aam
shl
call
dec
test
cmc
sub
cmpsb
cltd
sub
jns
popf
ja
leave
ds
pop
mov
stos
fwait
imul
js
or
cld
add
mov
pushf
push
and
or
sub
int3
mov
or
pop
jbe
dec
add
push
fnsave
adc
aas
mov
clc
aad
sbbb
xor
adc
cmp
pop
inc
adc
stc
loopne
out
and
cmp
add
sub
sbb
lea
cld
jo
pop
mov
mov
and
scas
jp
xor
mov
mov
sub
aam
aad
adc
dec
sub
imul
jmp
imul
cwtl
jmp
sahf
les
mov
rcr
aas
imulb
jne
scas
mov
add
add
lods
and
pop
cmp
filds
jmp
mov
out
push
mov
jl
jecxz
into
popa
adc
adc
add
sub
sub
rcl
jmp
dec
stos
sbb
insl
dec
or
test
inc
ffreep
jae
xchg
inc
mov
dec
clc
xchg
arpl
les
aaa
stos
sub
icebp
decb
adc
jns
scas
fdivrs
sbb
adcb
std
mov
pop
cmp
inc
rcl
es
fdivrs
jmp
hlt
movsb
out
pop
insl
jl
test
stos
clc
test
inc
aaa
add
arpl
xchg
mov
xchg
insl
test
fiadds
hlt
add
je
test
scas
dec
push
ret
jp
or
test
rcl
fmuls
push
cld
add
in
lock
decl
les
cmp
movl
popa
scas
bound
popa
cmpsb
pop
mov
mov
incl
and
push
jg
and
das
sti
or
lock
pop
push
and
and
jno
jge
mov
mov
push
inc
mov
add
xchg
and
xorps
xchg
pushf
push
cmp
mov
push
push
iret
mov
push
xchg
add
das
js
ds
push
and
add
push
cmpsl
or
fstpt
sbb
push
loopne
mov
cmp
push
scas
loope
sub
inc
push
dec
orl
sbbl
pop
xlat
nop
loope
jo
shll
mov
xchg
pop
imull
movsb
adc
movsl
add
xchg
cmp
fmuls
loopne
inc
shll
fistps
gs
xchg
inc
mov
and
or
fiaddl
sub
xor
and
push
dec
mov
fsubrp
jo
add
shr
lahf
or
int3
xor
sti
mov
inc
test
push
mov
fwait
mov
or
imul
pop
or
mov
test
sbb
mov
in
clc
data16
mov
cmpl
hlt
xor
into
std
arpl
sbb
add
out
or
loop,pn
subl
sbb
loope
clc
mov
js
cmp
ret
xor
std
inc
dec
outsb
and
xchg
cwtl
mov
sahf
mov
test
repz
out
iret
cmp
outsb
cmp
and
bound
scas
mov
test
insl
xor
mov
xor
sbb
pop
ds
and
test
cmp
mov
sub
cld
xor
lret
jnp
sub
out
movsb
out
xchg
mov
cmp
or
and
jbe
sbb
sub
push
ret
dec
sahf
aam
push
fnsave
mov
jae
pop
dec
cltd
mov
adc
sbb
outsb
les
mov
mov
aam
iret
and
adc
jne
subb
hlt
sbb
xchg
rorb
or
jb
loop
incl
ja
mov
inc
loopne
jecxz
shll
out
pop
ror
mov
adc
jle
call
add
fdiv
data16
aaa
mov
sarb
cmp
mov
push
pushf
sqrtps
xchg
movb
jo
leave
test
xor
rolb
ja
xchg
xor
inc
dec
add
adc
shrb
in
mov
js
mov
imul
fists
ret
push
mov
xchg
je
push
fcoms
inc
adc
mov
jnp
dec
or
push
dec
adc
add
mov
jp
nop
js
add
arpl
jecxz
mov
sbb
jl
adc
lock
lock
and
adc
inc
pop
sbb
pop
pusha
jnp
in
iret
push
out
ficompl
cmp
mov
cltd
lcall
and
aas
pop
push
push
mov
js
adc
jo
je
lahf
and
push
and
push
popa
les
mov
add
sbbl
lds
add
or
xor
mov
adc
xor
dec
add
into
ret
push
xor
mov
cmpl
inc
jmp
dec
or
and
hlt
aam
lock
test
jmp
call
push
inc
jb
enter
lahf
push
add
cmpl
add
mov
stos
push
icebp
push
enter
in
lods
mov
and
cmp
addb
hlt
loope
ret
xor
mov
mov
dec
jl
imul
xor
aas
stos
jns
shrl
in
or
gs
cmc
pop
js
mov
imul
sbbl
push
adc
inc
out
int3
xchg
mov
push
loop
sbb
pop
xchg
and
shlb
mov
adc
aas
mov
roll
sub
sbb
inc
lds
fs
xor
fldt
and
aaa
fdivrl
push
cltd
xchg
xor
mov
xor
rclb
mov
lods
fldl
jle
rcr
dec
clc
int
mov
add
into
or
xchg
imul
xlat
push
add
mov
mov
pop
cmpsl
mov
into
insl
mov
or
mov
or
fs
mov
movsl
rorl
fldcw
sbb
or
mov
out
loop
jecxz
out
push
dec
mov
adc
shrb
out
or
repz
mov
inc
scas
imul
adc
push
pusha
xlat
mov
xor
add
decl
arpl
aad
data16
mov
push
sbb
mov
xchg
xchg
push
cmp
xchg
jg
mov
sbb
mov
daa
xor
bound
mov
mov
add
cmc
scas
andl
ljmp
mov
ffree
in
add
and
add
pop
xor
mov
fisttps
les
scas
sub
das
push
fisttpll
mov
jb
stos
jb
push
loope
mov
pop
lds
mov
dec
xor
imul
imul
test
adc
mov
cmc
xor
scas
in
dec
cmp
addb
sub
push
jge
cmc
push
mov
xchg
outsb
mov
sub
gs
popa
insb
pop
jae
lret
nop
ss
into
sub
cld
outsb
loope
insb
pusha
cmp
inc
add
pusha
pop
icebp
sbb
test
fidivrl
xlat
arpl
add
xchg
scas
clc
xor
mov
mov
add
inc
js
xor
aas
jno
sti
xchg
mov
sub
xchg
clc
sub
xor
cmpsl
fwait
sub
js
sbbl
or
add
mov
out
mov
pop
push
test
test
pop
jmp
pop
mov
insb
aam
in
xchg
cli
fbld
dec
pushf
mov
std
prefetcht0
clc
pop
jbe
pop
dec
xor
sarb
cmp
popf
cmc
ss
daa
sbb
xchg
out
sahf
jge
sub
lods
aas
push
mov
data16
bsf
in
sahf
inc
loope
add
sbb
cmpsl
and
mov
jecxz
lea
lcall
or
bnd
movsl
and
mov
shlb
or
insb
lds
jl
xor
mov
push
ss
incb
test
movsb
in
add
mov
adc
pop
cld
mov
testl
mov
jecxz
adc
in
int
jge
dec
jb
mov
inc
push
cs
jge
cmp
sub
add
cmp
xchg
in
add
imul
rcll
push
arpl
cmp
dec
add
lock
into
dec
and
cld
push
movsl
inc
mov
ljmp
jne
call
jmp
mov
mov
inc
cmp
lock
lock
lret
add
cld
scas
cmp
sbb
mov
cmp
dec
in
sahf
cli
push
cld
aas
bound
add
cmp
and
push
loope
jge
loop
cmp
ds
clc
mov
mov
es
std
jae
nop
inc
fildl
notl
dec
sub
mov
test
adc
mov
ret
jb
mov
mov
jmp
mov
inc
fistps
mov
sub
inc
sti
push
add
jg
test
push
add
lea
mov
outsb
fisubl
adc
fld
mov
sub
push
and
mov
lea
iret
or
notl
fimuls
movsb
popf
and
xchg
jo
pop
cs
mov
xchg
push
decb
add
stc
das
nop
mov
lret
cld
test
cli
pop
dec
push
sbb
pop
mov
test
shl
sar
scas
mov
or
stos
dec
add
fdivl
movsb
mov
pop
cmp
adc
xchg
out
mov
sarb
ljmp
insb
pop
dec
mov
test
rolb
mov
pop
clc
inc
das
mov
mov
jnp
into
lahf
and
and
iret
out
rcrb
ror
lea
aas
stos
inc
das
push
pop
inc
ret
inc
xchg
push
pop
xchg
in
mov
dec
ss
and
mov
push
call
mov
add
mov
jecxz
mov
sbb
pop
sub
mov
jmp
jmp
ret
ljmp
lods
and
pop
subl
mov
push
pop
pop
add
ljmp
pop
jmp
in
insb
lods
mov
add
dec
xchg
cltd
ds
sbb
lahf
adc
pop
mov
fsub
push
mov
enter
pushw
or
rcrl
push
push
sub
pop
cmpsb
sub
mov
sarl
push
jae
sub
ja
rorb
xor
sbb
in
adc
cmpsl
adc
test
lods
push
cmpsl
xchg
shlb
xchg
shl
pop
ljmp
cld
dec
je
cwtl
push
mov
dec
fs
lcall
push
add
xchg
hlt
mov
adc
add
das
cmpsl
xor
mov
jb
clc
jae
aam
icebp
scas
in
sub
in
push
ja
loopne
outsl
sarb
cwtl
les
subb
ljmp
cmp
jb
mov
in
stos
pop
test
add
push
loopne
mov
xor
jecxz
xorl
jge
or
call
scas
call
jo
notb
aad
jbe
shl
pop
xor
xchg
mov
fcmovnu
imul
inc
jmp
fwait
push
lods
push
fwait
in
filds
xlat
adc
movsb
adc
scas
and
test
popf
xlat
loop
fs
scas
std
cmp
test
js
lock
xor
lock
int3
and
push
sub
sbb
repnz
xlat
mov
pop
int3
pop
sbb
iret
sub
mov
jmp
loopne
out
mov
push
and
mov
clc
sti
xor
xchg
outsb
ss
inc
inc
loopne
clc
lea
stos
jo
je
aaa
xchg
sbb
mov
xor
inc
cltd
movsl
jge
fsubr
xorl
dec
test
adc
iret
add
pushf
sub
pop
cmp
xchg
add
xlat
ss
testb
inc
loope
loop
xlat
and
fsts
testl
loope
pusha
js
jmp
bound
scas
add
jmp
rorb
ret
ficoms
insl
inc
cld
push
out
cmc
fistpll
inc
rcll
jbe
mov
sub
sbb
ret
mov
movsb
ljmp
test
rcrb
pop
jecxz
mov
outsl
sub
popa
and
int3
add
sbb
sarl
setae
sbb
jp
adc
and
negb
mov
fistl
mov
pushf
mov
add
add
push
xchg
pop
decl
xor
xchg
movsl
mov
mov
lds
adc
jb
stos
mov
adc
push
xor
int
dec
icebp
and
jnp
sub
daa
jg
out
push
push
sub
and
into
jp
push
pmaxub
xor
cmp
dec
xchg
call
pop
fsubrp
js
mov
inc
cmp
movb
sub
push
fisttpll
xchg
or
nop
xchg
fabs
or
std
inc
dec
test
dec
mov
inc
cmp
sbb
rcrl
mov
mov
mov
imul
unpckhps
mov
push
push
test
and
jg
movsb
in
in
cmp
xchg
test
inc
xor
cltd
cmp
cwtl
sbb
in
inc
sbb
push
mov
xchg
test
mov
rolb
adc
mov
push
loope,pt
pusha
data16
pop
in
xchg
lahf
sub
add
mov
cmp
pop
std
and
js
lcall
nop
fists
push
js
mov
cmp
push
sarb
mov
lods
jmp
inc
outsl
mov
jb
call
pop
sbb
imul
decl
jge
mov
dec
fidivs
ljmp
cmp
loopne
test
mov
mov
and
cmpsl
ljmp
and
sbb
mov
xor
lds
out
add
xchg
test
push
std
repnz
test
dec
dec
mov
shr
arpl
push
cmc
or
add
add
inc
and
push
mov
mov
inc
sbb
pop
aam
jg
inc
pusha
sbb
rcrb
popa
xchg
pop
dec
add
stc
into
jo
out
mov
pop
imul
add
mov
cmp
mov
int
pop
std
xchg
and
mov
or
in
popf
mov
out
xchg
inc
mov
mov
sbb
lds
fninit
arpl
std
mov
jo
popa
rorl
cmp
add
cwtl
inc
and
call
sbb
sub
nop
std
xchg
hlt
sahf
aas
maxps
ljmp
loope
aad
ret
xor
mov
sub
icebp
es
out
and
xchg
pop
ficoml
test
out
iret
sbb
es
sbb
jg
loope
shr
xchg
daa
loopne
adc
pop
ja
dec
pop
gs
arpl
pop
xor
int
xor
jne
test
cld
xlat
sbb
bound
mov
pop
xor
lea
add
test
xor
hlt
pop
jecxz
mov
call
clc
scas
mov
push
dec
jnp
lock
pop
jl
mov
sub
call
adc
enter
adc
xchg
sbb
jbe
push
inc
pop
out
or
fadd
mov
or
push
fcoml
xchg
mov
pop
mov
hlt
daa
loope
pop
inc
fcoml
pusha
xor
jbe
nop
add
jb
xchg
ljmp
ljmp
jmp
or
mov
add
les
cmp
mov
decl
stos
addb
sbb
insb
add
jecxz
push
test
jl
sbb
push
mov
clc
or
fadd
or
fs
mov
inc
lret
push
shl
push
sahf
sub
rcl
lahf
adc
les
andb
or
mov
inc
into
rcl
mov
aad
inc
psubw
push
cmpl
test
adc
paddd
add
orl
add
je
pop
jg
cwtl
clc
and
ljmp
push
movsl
sahf
mov
lret
inc
cmp
mov
mov
lods
xchg
sub
mov
add
xor
cmpsl
ficoms
ror
add
and
ja
pop
movsl
add
scas
shll
xchg
sub
outsl
and
gs
xor
loopne
cld
loop
add
enter
mov
loope
mov
fwait
hlt
add
jo
hlt
aad
and
mov
ja
inc
ljmp
sbbb
xchg
inc
js
std
stos
dec
xchg
sub
add
data16
pop
xchg
mov
adc
out
decl
and
or
cmp
out
imul
mov
idiv
adc
add
rcr
inc
in
dec
mov
push
cmc
xlat
push
dec
scas
aam
mov
in
out
aas
arpl
pop
push
mov
lret
pusha
jb
dec
and
decl
xchg
jp
and
pop
lock
dec
inc
pop
and
xchg
lret
mov
and
stos
inc
jo
adc
inc
cltd
ja
fadds
out
lret
repz
add
sbb
and
dec
mov
xchg
fldl
mov
arpl
stos
push
ret
cmpb
ljmp
sub
nop
sbb
loopne
jbe
inc
sub
add
mov
ficoml
dec
push
and
or
add
js
add
hlt
xchg
fld
push
lods
outsb
mov
inc
stos
inc
lock
in
popf
subb
ffreep
jg
out
movsl
ljmp
std
cmp
mov
and
mov
test
stos
lods
xor
adc
and
xchg
cmc
jmp
xor
out
nop
sbb
js
lret
inc
mov
and
push
mov
call
in
stos
add
mov
lcall
les
xor
xor
pusha
ss
fisubrl
mov
or
add
test
jb
sub
in
adc
pop
cmp
adc
push
shrl
mov
xchg
cli
or
jmp
je
stos
push
test
divl
adc
jbe
mov
jl
push
aas
xchg
sub
push
push
pop
push
fistpll
sub
imul
xchg
loop
inc
cmp
mov
les
dec
loopne
or
sub
leave
sbb
scas
inc
xor
fwait
jo
shr
loope
add
sar
push
or
pavgw
lea
rcrl
movb
sbb
bound
fisttpll
outsl
and
dec
pushl
jg
mov
mov
xchg
sbb
adc
mov
push
mov
ss
sarl
pop
movsb
call
add
test
mov
lret
dec
jno
pushl
xorb
push
xor
pusha
mov
pop
cwtl
sbb
push
pop
lea
dec
inc
push
pop
js
mov
and
jle
cmc
or
mov
into
fs
mulb
jle
pop
push
loope
pushf
loop
cmp
leave
cli
add
or
xor
shll
sbb
jg
jle
cmp
repnz
xor
cld
push
clc
mov
add
cli
xchg
jl
rdmsr
addr16
fdivs
roll
xchg
hlt
aaa
ret
xchg
or
add
outsl
dec
xchg
jp
cmp
dec
imul
inc
ljmp
in
xchg
mov
dec
push
cmc
decl
out
cmp
test
inc
imul
or
add
jmp
xor
xchg
mov
pop
inc
mov
cmp
or
cli
lds
pop
jo
cmp
mov
jno
jmp
ljmp
loopne
jl
jne
and
lods
addb
ret
loop
shll
hlt
sub
mov
mov
add
and
in
lock
rcrl
mov
andl
shlb
fadd
cmc
push
ja
mov
push
fs
ds
sti
push
sub
and
push
push
addb
push
add
pop
fistpll
adc
outsb
mov
inc
adcl
repz
incl
es
mov
xor
inc
jle
mov
jle
pop
and
lcall
mov
je
sub
and
notb
and
cmp
mov
pop
jl
ss
push
cwtl
or
mov
jmp
sbb
outsb
sti
jmp
mov
lods
lret
xor
fcomip
or
mov
push
jno
xchg
dec
sub
shrb
popf
add
enter
or
incl
cmp
push
ss
mov
push
push
mov
jge
lcall
adc
scas
lock
add
cs
add
fistpll
inc
push
les
out
cli
jno
shrl
ljmp
dec
xor
incl
lds
daa
inc
cmc
jo
repz
outsb
ljmp
into
or
jle
add
adc
pop
fiadds
add
xor
sub
mov
sbb
cs
das
nop
cmpsl
sbb
push
cmpsb
psubusw
pop
or
add
jmp
imul
jmp
rol
add
mov
xor
jo
pusha
and
rdpmc
dec
fisttps
mov
adc
icebp
lock
add
jns
jmp
jge
addb
pop
out
fisubrs
pop
adc
xchg
cmp
nop
scas
xor
mov
stc
test
and
ret
mov
enter
mov
lret
mov
insb
mov
push
xchg
and
sbb
pop
or
cmp
pop
mov
mov
dec
push
or
je
loopne
xor
xchg
cmc
jmp
scas
cmpsb
call
push
arpl
mov
push
mov
or
lret
xchg
sub
notl
stos
inc
sbb
aas
inc
cli
xchg
push
cmp
add
cmpsb
pop
aam
test
mov
in
dec
ret
lret
cli
inc
adc
shl
add
and
sbb
mov
push
ljmp
add
mov
roll
lret
xorb
lea
in
stc
inc
pusha
pop
jg
mov
call
daa
cmp
push
push
or
pop
or
mov
sub
adc
mov
xor
stos
wbinvd
cwtl
incb
sub
pusha
push
add
aaa
call
sahf
cwtl
in
jo
mov
lds
ret
call
in
jnp
imul
call
gs
xchg
xchg
push
xor
add
adc
pusha
shl
or
mov
adc
ret
mov
scas
arpl
and
or
or
cmp
inc
cmp
jmp
add
or
cmp
je
mulb
and
int3
or
xchg
pop
and
jmp
inc
mov
push
add
mov
or
gs
dec
fbld
loope
into
inc
push
adc
jle
filds
mov
mov
mov
hlt
out
fstpt
daa
int3
pop
fwait
pop
inc
xor
mov
push
pop
jle
push
sbb
cld
andl
adc
das
sarb
sub
push
inc
push
jecxz
gs
mov
pop
add
jl
mov
jno
inc
sbb
push
sub
jge
icebp
add
gs
adc
push
mov
cwtl
xor
add
add
enter
insl
lods
add
add
sbb
mov
cmpsl
daa
lcall
and
loope
pop
xchg
push
inc
xchg
les
jp
adc
mov
test
stc
andb
outsb
cmp
es
jb
mov
xor
dec
dec
adc
and
push
fmuls
jmp
rorb
jo
or
sbb
enter
xor
pop
les
imul
mov
loope
xchg
rcll
hlt
dec
lods
cmc
in
popf
mov
test
scas
mov
push
xor
ret
push
pop
mov
xchg
jbe
dec
stos
dec
loop
jle
dec
adc
cli
lock
in
xchg
xchg
xor
xchg
rolb
mov
xchg
hlt
mov
aaa
jl
add
inc
cli
inc
lcall
call
fdivr
shlb
outsl
add
lret
sbb
movsb
inc
cmp
fcmovbe
xchg
xchg
clc
cmp
fists
inc
scas
and
bound
cld
jmp
clc
mov
jp
out
add
sub
adc
je
rcrl
adc
or
sbb
jo
sahf
mov
es
cld
pop
mov
jp
cmp
xchg
mov
cmpsl
pop
jge
push
repnz
adc
jge
mov
add
jl
sbb
outsb
adc
ljmp
xchg
call
cmp
ja
cmp
adc
repnz
jne
insb
je
add
and
ror
aas
sbb
mov
inc
add
fsubr
mov
icebp
mull
nop
jl
adc
mov
mov
ud2
push
add
push
outsl
fistps
add
xchg
pop
inc
push
notb
jl
mov
mov
pop
and
test
cltd
int
pop
rcrl
test
rorb
dec
jmp
push
pop
ss
add
test
in
adc
inc
shrl
or
icebp
or
ja
imul
cwtl
inc
pop
insb
add
sub
xchg
add
movsb
mov
push
pusha
inc
dec
and
hlt
cltd
or
test
xor
vpsadbw
cld
add
jp
push
xchg
add
repnz
in
mov
add
or
dec
mov
sbb
push
mov
add
orb
outsl
jg
and
or
in
dec
mov
sbb
cmp
movaps
dec
stos
sub
pop
xor
icebp
adc
lods
incl
jo
mov
fidivs
mov
inc
inc
popf
inc
mov
test
xchg
dec
clc
pop
or
cmp
imul
inc
fcompl
adc
push
push
pop
cmp
push
push
and
scas
cmpsb
sbb
inc
pop
sub
or
push
minps
in
lods
aaa
adc
js
jb
jmp
and
push
jns
hlt
shlb
mov
jle
jmp
push
jno
cwtl
stos
pushf
push
push
cmc
fs
pop
mov
outsl
out
sub
sbb
ljmp
jae
fisttps
add
lds
xor
xchg
ds
test
ret
popa
xor
dec
call
cmc
xchg
mov
mov
in
fstps
loope
sbb
fs
add
sbb
mov
pop
or
fadd
outsb
addl
push
cs
imulb
outsb
pop
in
inc
rcl
fisubl
movsb
jp
out
filds
nop
inc
jl
and
addr16
jle
in
inc
lods
aam
or
add
cwtl
notb
jmp
jae
pop
mov
test
lods
jne
fdivl
mov
das
cmp
mov
mov
push
xchg
mov
sbbl
adc
repnz
or
and
jg
les
push
sbb
mov
filds
adc
in
add
mov
jmp
push
ror
dec
xorl
popa
ljmp
push
xchg
roll
leave
loopne
mov
jle
adc
jo
xor
test
cmc
jp
cmp
push
push
aaa
pop
sub
mov
shll
dec
test
xlat
jp
mov
cs
movsl
push
test
lock
mov
loopne
and
sahf
ror
mov
sbb
lret
mov
cmp
mov
imul
or
orl
insb
testl
stc
push
cs
and
xlat
dec
mov
mov
fs
cmpb
dec
mov
nop
sbbl
inc
int3
mov
orl
jg
sub
aam
setle
jb
adc
xor
je
add
dec
mov
push
in
xor
pop
sub
repnz
push
ds
pop
sbbb
lods
test
mov
mov
add
das
mov
inc
mov
and
mov
add
je
mov
lods
outsl
pop
or
mov
adc
jp
xchg
add
adc
iret
sarb
dec
fdivl
ret
inc
pop
pop
add
sbb
lods
adc
pop
pop
outsl
jl
jmp
add
clc
inc
cmp
aas
push
std
nop
lods
shlb
sub
pop
cmp
mov
movsl
loopne
inc
scas
scas
hlt
xchg
jbe
call
aas
pop
and
roll
push
pop
dec
fsubrl
les
xor
cmp
adcl
sub
testl
loop
std
cli
rcrb
outsb
cmp
push
scas
sub
push
aaa
daa
lock
cmp
subb
fidivs
or
push
mov
cmp
test
pushf
stc
adc
push
adc
fdivrl
xlat
push
cmc
lock
outsb
xor
das
cs
inc
adcb
mov
sbb
cmp
xor
push
add
jmp
xor
mov
cmpsb
ljmp
pop
xchg
adc
pop
mov
mov
or
add
mov
xor
fwait
je
subl
inc
clc
push
in
dec
inc
and
xor
pusha
mov
lock
mov
mov
test
popa
je
hlt
xchg
adc
lcall
mov
loop
in
jmp
mov
jae
lds
inc
cmpb
repnz
pop
add
adc
add
gs
push
jae
push
pop
mov
mov
addb
dec
sarb
loopne
cld
adc
adc
lea
mov
insl
les
lcall
std
jp
lods
pop
mov
in
jne
pop
mov
pop
mov
mov
andb
and
jo
push
pushl
movsb
es
pop
sub
push
cli
shr
xor
repz
lea
aam
sub
xor
add
fimuls
mov
sub
cld
ljmp
cmc
mov
sahf
pop
out
add
bound
add
xor
xchg
and
push
cmp
stos
push
mov
jl
or
icebp
xchg
dec
ljmp
loopne
shrl
das
mov
fisttps
inc
pop
imul
xorb
inc
shrb
and
cld
lcall
add
add
mov
in
xchg
add
cli
cmp
dec
fistps
adc
inc
inc
xor
fwait
add
cmpsl
mov
inc
cltd
xor
and
loop
leave
das
imul
pop
mov
pop
jnp
repz
pop
mov
mov
lods
sbb
inc
xor
xor
popl
sbb
insb
mov
sbb
fildll
add
add
mov
jbe
adc
xor
scas
lock
xlat
xor
enter
dec
pusha
dec
js
mov
xchg
cmp
xchg
xchg
icebp
rol
xchg
add
cmpsl
sub
mov
mov
in
popf
dec
and
add
add
jne
add
outsb
add
pop
test
insb
cs
pop
sahf
push
imul
pop
inc
fcompl
and
jmp
inc
cmp
xchg
leave
jp
or
sub
shl
lods
aaa
add
adc
or
or
out
mov
js
push
ja
out
inc
es
out
out
sbbl
mov
add
pop
xor
ret
jo
and
stc
adc
lret
outsb
adc
jo
cmp
and
push
out
loopne
out
push
or
push
into
or
jmp
mov
add
imul
push
xchg
popa
and
push
mov
mov
rorb
sub
sub
or
fcomip
subb
aaa
and
hlt
mov
lods
adc
jle
sbb
mov
push
add
aad
sbb
mov
inc
xchg
imul
cmpl
arpl
jno
loop
sbb
xlat
push
xchg
xor
rolb
mov
aas
add
adc
and
mov
add
xchg
add
movsl
vunpckhpd
fiadds
test
nop
int
push
repz
data16
or
dec
xchg
ret
adc
dec
xchg
loope
daa
jmp
inc
sbb
jl
idivl
push
stos
inc
add
shrb
shlb
pusha
repz
add
insl
jle
mov
in
loopne
cmpsb
cmpsl
into
pop
out
jecxz
icebp
and
clc
xor
cmpsb
mov
cld
in
pop
mov
loop
in
mov
pop
inc
js
mov
js
iret
ret
jo
iret
push
cmp
cmpsl
outsl
loope
data16
js
sbb
sbbb
adc
sub
mov
inc
pop
jbe
add
sbb
fsubrp
inc
rcl
into
movsl
cmp
out
add
xchg
mov
xchg
or
sahf
xlat
mov
xchg
sub
jmp
push
cmp
jecxz
ss
pop
xor
lds
xor
cmpsl
mov
dec
xchg
fdivrs
pop
movsb
enter
in
xorl
and
mov
nop
ret
cmpsb
fstps
rcl
push
pop
enter
int
lea
xchg
loop
xchg
inc
cmpsl
mov
push
ds
paddw
mov
or
div
enter
rorb
aam
inc
sti
jno
xchg
mov
std
push
pop
mov
mov
aam
flds
outsl
aad
xor
insb
adcl
rolb
jno
or
push
shll
sbb
cmp
cltd
ret
call
inc
dec
in
enter
mov
mov
stos
data16
mov
dec
loope
mov
mov
mov
loopne
and
ret
mov
test
ret
jb
add
sysret
or
mov
cwtl
repz
add
mov
mov
cmpsl
cmp
mov
mov
dec
push
arpl
mov
adc
push
out
out
add
icebp
push
test
mov
add
imul
xlat
mov
ja
ja
or
and
xlat
mov
cmp
xor
inc
dec
adc
aaa
dec
cmpsb
xchg
jo
in
mov
sub
mov
xor
lret
jg
cmpsl
scas
sub
test
imul
addr16
adc
sub
sbbb
push
jno
push
loop
fstl
sbb
dec
gs
fsubr
test
pusha
cmp
mov
xchg
inc
ret
and
movsl
nop
movsl
add
rcl
cmp
lret
sbb
cld
in
ds
shlb
inc
or
stos
xchg
mov
sbb
pop
dec
mov
lea
pop
sar
adc
pop
adc
mov
in
and
jle
popa
aam
lahf
push
or
pop
fiaddl
mov
pop
mov
inc
cld
aaa
loope
add
pop
xor
or
add
lcall
mov
sbb
ljmp
jmp
sub
iret
inc
pushf
js
jp
cld
and
pop
les
or
and
arpl
ds
xor
lds
cmp
mov
xor
enter
cli
mov
pop
imul
add
xlat
mov
adc
call
sahf
cltd
scas
cmc
dec
cmp
scas
dec
stos
jle
mov
mov
mov
addr16
xchg
push
aas
xor
loopne
pusha
xor
mov
mov
push
add
inc
in
and
cmp
movsl
push
inc
xor
int
icebp
mov
loopne
dec
push
cmp
arpl
repnz
stc
leave
dec
call
jo
popa
cmp
mov
enter
mov
add
fdivrl
lock
push
xchg
lods
test
cmc
sbb
lods
je
les
sub
das
loop
fidivl
adc
xor
mov
dec
cmp
in
scas
int3
xor
pop
cmp
enter
mov
lahf
adc
add
js
outsl
mov
push
inc
mov
push
scas
inc
mov
adcl
scas
adc
fwait
ljmp
cld
dec
pop
or
jo
inc
pop
adc
add
mov
aam
mov
dec
sbb
clc
icebp
lds
movsl
aam
mov
mov
pop
lods
or
lcall
adc
sub
gs
dec
nop
cmp
xchg
sbb
xor
lret
cmp
divb
mov
jecxz
add
xor
aas
and
hlt
test
inc
inc
add
int3
rorb
push
bsr
add
cmpsl
std
mov
mov
mov
mov
jbe
adc
leave
repz
ret
mov
mov
pop
popa
stc
pop
jno
mov
inc
or
icebp
pop
push
push
mov
add
adc
adc
adc
pop
scas
push
in
inc
xor
add
das
and
adc
movsl
sub
cmpl
ja
mov
inc
arpl
push
jb
xchg
or
cmpsl
pop
stos
push
cmp
mov
into
out
push
inc
iret
adc
ret
sbb
and
xchg
fxch
scas
das
push
fiadds
dec
sub
popf
stos
xor
pop
aam
jl
add
ja
sub
jo
js
or
js
xchg
mov
xchg
aam
lret
dec
jne
jae
and
insl
movsb
jecxz
mov
sub
sbb
loop
push
and
les
mov
cmc
or
dec
inc
cmp
or
cs
rcll
inc
int3
jb
dec
aas
sbb
pop
adc
mov
setb
imul
aad
in
loopne
leave
xchg
les
mov
pop
pop
pop
inc
inc
mov
repz
xchg
fcomp
mov
jno
push
dec
and
push
jb
xor
popa
add
imul
popf
mov
and
stos
cmc
jne
xchg
daa
add
jp
pop
xchg
push
jecxz
or
int
sahf
or
test
xor
icebp
test
push
jne
loopne
xor
aas
pop
shrl
sub
movsl
es
lea
jp
jbe
imul
pop
pusha
sbb
in
cwtl
pop
mov
aas
and
pusha
dec
cmp
adcb
rol
pop
cmp
or
jp
sbb
dec
fisubs
int3
clc
das
push
or
mov
adc
pop
mov
pop
aaa
push
insb
shlb
idivb
pop
mov
pop
mov
idivl
je
out
or
dec
jmp
dec
and
outsl
pop
cli
iret
jne
push
ret
jno
mov
fbstp
cmc
loop
in
sbb
insb
outsb
adc
negb
push
movsb
and
fnstsw
mov
xchg
mov
lds
push
mov
ljmp
int3
ja
lods
dec
dec
push
ror
std
mov
fnstsw
add
rcrb
test
pop
dec
xor
stos
xchg
mov
fnsave
dec
scas
mov
std
xchg
and
lcall
mov
sbb
lods
mov
mov
rolb
mov
sti
imul
and
or
clc
or
mov
pop
lea
lret
cmp
outsl
je
mov
adc
test
lods
push
dec
jl
jecxz
test
lcall
hlt
shll
jmp
movsb
xor
jmp
iret
pop
sub
pop
dec
jne
add
daa
push
mov
sarb
jno
call
mov
mov
jnp
mov
imul
push
jbe
mov
and
mov
ret
not
pop
inc
add
dec
mov
dec
popf
cmpsl
add
shlb
sbb
and
test
push
mov
xor
insb
icebp
adc
andb
loop
stos
cmp
sarb
mov
cmpsl
xchg
data16
sub
and
icebp
sbb
pop
push
hlt
mov
hlt
roll
in
adc
cmp
mov
rcrl
pushf
push
jnp
add
ret
mov
sub
push
icebp
imul
xchg
adc
pop
dec
int3
or
push
xchg
popf
fcompl
jne
cmc
cmc
cli
or
stos
xchg
leave
dec
sub
push
dec
clc
pop
les
mov
xchg
jo
mov
push
cmpl
mov
cmp
mov
addl
insb
jp
lds
addl
jno
cmpsl
loop
jne
test
das
shrb
adc
jle
mov
mov
cld
ja
or
pop
and
testb
jecxz
inc
roll
pop
pop
fsubl
jecxz
loope
sbb
jle
pushfw
and
pop
bnd
aam
push
out
enter
and
mov
xchg
pushf
std
jl
mov
sbb
out
scas
insl
xchg
push
pop
cmp
mov
mov
shrb
sub
adc
shlb
fcmovnb
pop
out
sub
cmp
xor
push
pop
mov
mov
jge
fsubrl
and
pop
inc
add
or
shrl
pop
stos
arpl
or
add
stos
lds
shlb
stos
sbb
adc
or
or
xchg
inc
lods
in
or
stos
daa
mov
stos
sbb
or
sbb
andb
add
rcrl
mov
jbe
popf
sub
arpl
sahf
pop
cmpsl
sub
inc
sbb
sub
push
cmp
mov
and
or
lret
mov
mov
fisubrl
rcrb
mov
cs
neg
and
dec
xor
iret
dec
dec
mov
lods
lret
xchg
test
clc
cmp
add
insb
out
add
fcomip
add
sub
sub
fwait
les
pop
sbb
data16
xchg
outsb
das
mov
jmp
push
mov
mov
nopl
xor
pop
add
pop
adc
or
cld
aaa
xchg
outsl
sub
or
into
andl
dec
dec
ss
mov
inc
xor
add
mov
stos
sbb
xor
nop
mov
insl
pop
dec
aam
aam
out
jl
nop
filds
pop
jg
sahf
ja
adc
popa
and
or
push
sub
subl
mov
lods
and
xchg
mov
sub
aad
imul
pop
lods
jae
add
shlb
inc
fyl2xp1
in
imul
test
sbb
sub
dec
iret
jmp
inc
arpl
cmp
js
cmp
sub
fcmovnb
and
pop
popa
and
pop
mov
addr16
add
not
mov
push
mov
push
daa
inc
sbb
enter
cwtl
xor
inc
aad
xor
add
sub
jmp
jae
ds
and
cmp
adc
lock
xchg
cltd
sub
test
pop
daa
xor
or
xchg
imul
jp
movsl
bound
lahf
push
xlat
add
pop
push
mov
js
add
jg
pushf
sbb
jae
add
roll
popf
sbb
sub
mov
jnp
xlat
push
pop
mov
stos
and
orb
test
fiadds
cs
sbb
add
sub
sub
adc
mov
test
mov
and
jmp
cmp
dec
daa
aaa
pushf
sbb
push
add
icebp
pop
jl
jecxz
int
adc
in
ja
dec
gs
and
mov
adc
adc
dec
inc
jle
out
xor
js
je
mov
add
sbb
mov
or
inc
notb
cmpsl
sub
mov
mov
cli
sbb
pushf
stos
jno
mov
pop
out
jo
mov
adc
xchg
sbb
fwait
out
adc
inc
rorb
pop
pop
mov
ja
out
imul
ret
xchg
dec
ljmp
aad
dec
xor
dec
stos
es
ja
test
push
fwait
iret
cmp
cmp
push
jg
pushf
or
fiadds
enter
outsb
jmp
lods
inc
fwait
mov
daa
daa
jne
test
dec
ds
lods
jbe
add
and
inc
mov
or
xchg
imul
pop
iret
cmc
loopne
push
mov
stos
daa
dec
rcrb
les
cmp
into
add
xor
mov
popf
repz
mov
sbbl
sub
mov
rcll
pop
insb
xchg
sbb
push
test
negl
or
leave
mov
movsb
push
cld
fbstp
mov
mov
dec
xchg
jnp
cmp
lret
enter
arpl
outsb
shrb
scas
sbb
andl
lods
rorl
aam
stos
mov
sub
and
or
lret
clc
pop
mov
pop
aad
iret
xorl
push
cmp
mov
imul
ljmp
or
pop
pop
push
in
pushf
mov
stos
add
mov
addb
mov
pop
inc
mov
fldt
stos
dec
inc
repz
andl
lret
add
mov
insl
clc
xchg
adc
rorl
aaa
ret
stc
test
adc
jb
leave
lret
cwtl
inc
loope
jl
scas
in
xlat
mov
insl
cmp
xchg
jecxz
cmpsb
sbb
pop
mov
loop
inc
jg
shrl
xor
std
push
inc
sbb
test
xchg
xchg
push
mov
jno
lods
mov
mov
jae
pop
mov
add
adc
push
ficoml
icebp
push
aad
lret
fwait
jmp
pushf
xchg
ljmp
pop
sahf
int3
mov
movsl
dec
aaa
jo
repnz
pusha
shr
test
out
sub
or
or
popa
outsb
pusha
and
sti
es
call
in
add
les
and
in
fsts
pop
cmp
cmpsb
imul
add
fsubr
negl
jle
movsl
add
jecxz
and
jo
push
cmp
fiaddl
push
pop
mov
outsl
add
outsb
sbb
fildll
pusha
jnp
leave
bound
add
cwtl
pop
and
das
mov
aam
jnp
or
loope
sub
aam
daa
pop
mov
add
mov
push
dec
andl
out
out
push
loope
nop
xchg
jle
std
sub
dec
mov
adcb
sarb
dec
sub
xor
dec
insb
and
mov
ret
pusha
test
inc
stos
fs
sbb
push
clc
add
decl
mov
pop
das
sub
nop
dec
or
adc
fbld
pushf
mov
push
movsl
cmp
dec
hlt
loopne
adc
ret
cld
add
cwtl
mov
or
pop
push
stos
pop
ds
cmpsl
push
lock
adc
test
jae
mov
push
roll
or
aaa
repnz
add
xchg
sahf
fbstp
pushf
xor
mov
pop
test
sub
push
daa
mov
push
jo
inc
sub
adc
or
add
pop
or
sahf
cwtl
add
movsb
add
and
fmuls
xchg
lock
or
popa
push
xadd
sbb
fimull
or
hlt
ds
mov
insl
inc
icebp
and
mov
scas
addl
frstor
js
cmp
loopne
jb
sbb
cmp
xchg
push
dec
cmc
and
pop
add
scas
pop
mov
fsts
into
fcomip
aad
jp
mov
add
xor
cmc
pop
xchg
fcomps
jns
xor
cli
mov
pop
aas
inc
pop
out
pop
dec
pop
je
inc
inc
call
imul
fimull
mov
in
jnp
lods
rcl
jl
arpl
pop
out
out
dec
int
jne
jp
or
cmpsl
mov
test
or
cmp
cmc
iret
mov
cs
das
ja
stc
push
mov
ljmp
lock
cmc
cli
gs
push
xchg
sbb
shrd
cmp
inc
mov
orb
loopne
fimuls
outsb
fwait
jle
sub
int3
ds
jg
push
or
jmp
xchg
fnstenv
and
stc
or
xchg
imul
outsb
ja
aas
mov
outsb
mov
pop
dec
adc
pop
js
in
mov
loopne
cmpb
lret
icebp
inc
lret
cmp
push
or
mov
adc
pop
mov
fildl
cmp
popa
or
loop
lea
ljmp
sub
and
sar
mov
mov
fsubrs
stos
pop
cmp
xor
out
xchg
and
add
mov
and
out
sub
test
roll
out
push
pop
test
and
stc
sub
xchg
testb
iret
icebp
and
or
mov
int
mov
lea
mov
sahf
or
jmp
into
sub
sarl
sub
sbb
push
sub
lahf
xor
lods
inc
mov
inc
hlt
cltd
mov
xchg
ss
sbb
inc
mov
int3
mov
imul
add
inc
movsl
sbb
popf
mov
push
pop
test
ljmp
sbb
xchg
sbb
fdivr
mov
ja
mov
mov
sbb
jns
cmpsb
pop
lods
or
inc
movsl
sar
rolb
adc
jb
fistps
mov
pop
fists
mov
add
jecxz
repnz
bound
xor
push
xchg
in
add
bound
daa
gs
or
call
out
mov
lahf
jecxz
lahf
xchg
pop
adc
and
or
push
sub
loop
add
mov
mov
dec
mov
inc
pmaddwd
xor
jae
pop
mov
jge
sbb
cmpb
out
mov
jns
mov
ss
pushf
cmp
push
sub
inc
repz
and
das
push
inc
sub
sub
mov
jbe
xor
inc
ljmp
xor
jmp
lock
mov
xor
pop
das
sub
sub
scas
sbb
orb
cld
sub
add
retw
ja
addr16
jge
dec
aaa
outsl
ds
add
das
sbb
sbb
adc
flds
pop
jae
enter
xchg
bound
std
popa
flds
hlt
rclb
and
in
fsubr
mov
mov
cld
aaa
fistpll
ja
or
cmp
mov
out
arpl
mov
loopne
lahf
adc
jp
cmpsl
mov
shll
cmc
xorl
divl
add
jp
pop
stc
push
push
jmp
lcall
add
adcb
pop
aad
outsb
stos
sub
pop
pop
dec
negb
xchg
pusha
mov
xor
ss
jecxz
repz
xor
mov
sub
test
lahf
add
movsb
cld
fsts
pushl
sub
jo
in
pop
pop
in
fwait
call
sub
xlat
sub
mov
xor
sbb
pop
lods
in
pop
jecxz
xorl
push
mov
out
xchg
and
and
jmp
jmp
shrb
ljmp
mov
xor
loopne
jmp
adc
mov
stos
out
mov
add
addr16
rclb
adc
mov
and
inc
cwtl
add
cmp
cli
mov
add
mov
movsl
xor
dec
clc
stc
aam
sti
in
ds
fmulp
mov
cli
push
pop
mov
push
int
and
xchg
xor
and
imul
mov
and
fs
test
mov
lods
sbb
dec
lret
mov
and
and
mov
fidivrl
add
sbb
push
nop
jae
mov
push
cmp
lods
sub
xchg
test
mov
mov
cli
cmc
scas
shl
cli
std
or
cmpsl
dec
sbb
test
aas
and
ret
idivb
sti
mov
xor
jbe
or
and
mov
loope
pop
inc
test
addr16
jle
imul
or
inc
inc
cmp
pop
dec
or
adc
shr
in
lahf
adc
push
dec
fiadds
lods
mov
xchg
jnp
popf
imul
mov
inc
test
mov
cld
lret
push
lea
push
jmp
icebp
mov
and
or
ja
inc
xchg
push
or
mov
dec
loope
loopne
in
stc
lds
fs
inc
out
sub
mov
jb
cltd
aad
inc
out
and
js
mov
mov
leave
mov
dec
repz
popa
mov
loope
and
cmp
mov
dec
adc
pop
pop
cs
fldl
inc
mov
sbbl
push
sbb
inc
pop
bound
xchg
or
movsb
les
push
inc
test
dec
push
aam
cmp
mov
insb
sti
cmp
insl
movsl
and
sub
rolb
cmp
mov
bound
adc
or
xor
jl
mov
cwtl
and
and
dec
inc
inc
fstl
push
out
mov
xchg
pop
shll
mov
out
or
sti
daa
icebp
sbb
mov
aam
adc
mov
sarl
jbe
dec
ret
adc
inc
cld
xor
int3
andl
inc
popw
daa
enter
test
jp
test
sbb
fs
sbb
inc
push
mov
xchg
or
or
inc
lret
dec
incb
push
dec
fsts
sub
lds
mov
xchg
xchg
mov
jno
popa
loope
mul
rol
xor
adc
add
std
les
loope
sub
stos
pop
mov
pop
jae
lds
inc
shl
shrb
cmp
inc
fcomps
push
loopne
xlat
bound
and
int3
xor
pop
scas
negb
xchg
shlb
cmp
shl
mov
sbb
data16
xor
dec
fistps
outsb
les
xlat
rcl
pop
movsb
mov
mov
adc
sbb
push
outsl
sahf
std
not
cs
addl
add
cld
cmp
je
or
inc
mov
push
xor
popf
clc
pop
aaa
adc
bound
add
les
popf
push
adc
hlt
add
cwtl
or
jecxz
mov
pushf
fnsave
in
jno
mov
inc
iret
cmpsl
or
cmc
int
sarl
sub
mov
out
inc
xchg
xor
push
fcompl
movsl
fistps
jnp
push
and
add
jl
add
test
inc
or
arpl
lock
add
cmp
es
call
add
adc
jmp
jl
addr16
loope
sub
shll
add
int
rcr
cld
add
mov
jns
pop
int3
shlb
cmp
mov
lret
add
xchg
dec
jmp
pop
out
out
gs
test
js
lret
jno
fcoml
jae
and
data16
or
add
sub
movsl
pop
mov
dec
hlt
cmpb
stos
pusha
sbb
xor
sbb
mov
iret
in
cmp
pop
pop
jne
cmp
aaa
push
pop
add
jno
mov
and
lret
loopne
dec
stc
mov
sub
mov
push
dec
cld
sub
mov
ljmp
aad
or
push
or
adc
in
pop
lock
dec
out
mov
out
jbe
push
add
nop
daa
jbe
pop
stos
incb
test
mov
or
dec
or
jecxz
leave
loope
lods
mov
call
fisttps
push
push
and
xorb
xchg
outsb
jmp
aam
cli
scas
repz
nop
or
pop
push
sarl
imul
pop
cmc
cmpsw
sar
shlb
inc
mov
ret
jl
mov
call
lret
shrb
jle
fmuls
jns
enter
sbb
rol
add
pop
jg
cld
jns
pop
test
lea
outsl
cmp
mov
loop
cmp
adc
or
jp
rcll
fmuls
mov
sahf
out
jp
jo
into
inc
movsl
or
out
nop
jno
pop
loope
pushf
xor
and
jl
push
notb
xchg
imul
inc
fdivrl
jne
sbb
fimull
inc
jge
mov
xchg
xor
jge
lahf
pusha
add
and
loope
and
dec
xlat
fdivrs
ffree
push
mov
and
int
and
loope
rcll
and
sub
push
sti
movsb
incl
mov
in
test
jns
inc
pusha
and
push
ucomiss
inc
test
out
lods
xor
and
or
repz
sti
mov
lcall
fcoml
addl
xchg
cmpsl
pushf
inc
mov
add
or
rcll
loope
pop
test
incl
mov
jns
jmp
stc
mov
mov
cmp
fwait
mov
je
cld
pop
jg
sub
aas
dec
lods
mov
and
sub
inc
cwtl
loop
loop
inc
bnd
cli
out
or
adc
mov
or
sbb
adc
cli
dec
and
lods
hlt
sub
push
push
cli
or
dec
push
sar
and
scas
mov
dec
ret
pop
jecxz
sub
loop
sbb
sbb
pushf
add
add
imul
cwtl
stos
arpl
push
add
cmp
xchg
lret
popa
inc
push
es
add
push
pop
mov
repz
mov
mov
ret
mov
pushf
push
popa
and
mov
pop
jnp
push
int
insl
or
add
or
inc
stc
cmp
push
push
divb
xchg
popa
mov
adc
scas
mov
rorb
aaa
test
jecxz
outsl
sub
inc
xchg
addb
iret
out
mov
fs
in
out
inc
clc
fcoml
filds
or
nop
roll
sbb
mov
pop
clc
xlat
mov
leave
jbe
inc
fwait
lods
lahf
ret
pop
subb
sub
cli
push
jne
xchg
std
lret
lods
pop
testb
xor
stos
hlt
pop
jg
stc
cmpsl
mov
inc
into
mov
les
xor
lock
mov
inc
sbb
cld
sbb
mov
insb
adc
lea
add
push
jnp
cli
inc
clc
adc
cld
sbb
cmp
xlat
mov
mov
cld
pop
cmp
call
mov
bound
outsl
mov
lods
sub
clc
aam
sbb
sti
sbb
cmpl
fldl
or
lds
jno
inc
jp
sbb
jg
sbb
cwtl
mov
lods
xlat
add
in
mov
xchg
mov
cmpsb
mov
lahf
rclb
inc
mov
jae
scas
add
out
xor
dec
rorb
fdivp
push
pop
outsl
loopne
fmulp
adc
cli
lock
inc
push
jmp
cld
roll
into
adc
jmp
aaa
push
jnp
adc
jmp
fistl
push
mov
stc
or
mov
cld
shlb
int
aad
mov
loope
hlt
test
cmp
ljmp
call
lock
push
lods
lcall
pop
and
and
imul
adc
sub
test
rorb
pop
xchg
push
cmp
loopne
cli
fsubrl
movl
stos
imul
outsb
orl
mov
lds
sbb
ljmp
xchg
pop
pusha
and
lret
sbbb
outsl
sti
cmp
inc
inc
xor
add
nop
dec
jno
out
pop
jo
jb
aas
lock
arpl
push
cmc
fisubl
xchg
inc
fwait
pop
cs
sahf
xchg
daa
xchg
dec
pop
loopne
inc
cmp
fstl
mov
mov
sub
outsb
insb
cltd
or
aam
nop
decb
stos
push
inc
inc
lret
dec
inc
xchg
xchg
pop
popa
push
icebp
mov
dec
or
mov
lahf
imull
inc
add
bound
xchg
test
pop
lea
fistpl
shr
push
cmp
adc
aam
add
shr
mov
inc
cld
xchg
cld
aas
dec
and
stos
inc
out
pop
decl
xor
inc
cli
jg
inc
cmc
or
loop
pop
subb
jle
mov
stc
dec
mov
cmp
mov
mov
sbbb
inc
push
ret
jle
mov
pop
loope
rcll
imul
jbe
call
adc
sub
jb
out
pusha
lret
movsl
inc
dec
mov
mov
xchg
push
jbe
test
push
jg
mov
fdiv
js
dec
and
sbb
sbb
dec
mov
movsb
xor
mov
jecxz
xor
rcl
jl
call
jp
push
test
test
mov
clc
inc
cmp
dec
pop
add
mov
jns
das
lret
stc
scas
ja
xor
movsb
or
insl
daa
lcall
xchg
cmpb
ljmp
adc
xor
jge
cld
ret
clc
ss
stos
pusha
mov
movsb
cli
clc
dec
mov
xor
and
and
xor
add
add
jg
in
push
or
jmp
sbb
jmp
fstpl
leave
daa
cmp
add
in
aaa
push
xorl
in
aas
shlb
add
jae
adc
roll
push
cmpb
push
jnp
cmp
mov
out
adc
mov
int
lds
sbb
insl
and
push
outsb
jmp
pop
sub
fisttpl
lods
pushf
js
fisttpll
cld
inc
xchg
int3
repz
dec
cwtl
sbb
inc
dec
clc
mov
outsb
jg
lods
sub
sub
cli
jl
jge
imull
pop
loopne
call
mov
ja
jl
xor
shlb
push
arpl
bound
lock
pop
adc
jmp
sbb
mov
mov
clc
jnp
jmp
sbb
aas
mov
jge
shll
or
or
lret
rcrl
mov
outsb
loope
and
repz
pop
xor
mov
rolb
int3
push
mov
xchg
or
lahf
push
mov
cmovo
mov
and
add
inc
adc
inc
loope
cmc
and
push
xor
cmpsl
bound
xchg
ljmp
push
push
xchg
add
or
adc
add
inc
xlat
sbb
test
imull
bound
andb
popl
mov
sub
fwait
dec
pushf
mov
cld
cmpsl
pop
int3
mov
iret
dec
aam
or
loopne
std
sub
sbb
in
mov
xor
sbb
pop
insl
mov
pop
mov
sbb
xchg
test
fldcw
outsl
out
push
add
or
sbb
inc
loopne
jmp
test
add
dec
add
insb
enter
fnsave
jl
call
fwait
cmp
push
nop
dec
mov
sub
inc
mov
mov
or
mov
and
ror
cmp
xchg
xor
fistl
mov
and
xchg
bound
cmp
mov
push
add
adc
inc
test
ret
xor
fwait
test
loop
and
jl
mov
dec
xchg
jle
xlat
pop
or
inc
sub
or
jne
cwtl
add
cmc
adcl
insl
ret
decl
sbbl
xor
hlt
cld
or
dec
sub
lods
mov
xchg
add
iret
dec
out
and
fldenv
jle
dec
je
pop
cmc
xor
enter
mov
pop
cmp
jb
mov
call
pop
sub
dec
sti
inc
mov
cli
lret
pop
add
jle
fimuls
push
pop
inc
push
cmp
dec
hlt
mov
or
sbb
add
mov
aam
jle
push
ja
movsb
mov
inc
in
mov
push
in
adc
das
add
aaa
push
and
mov
push
jb
testb
jns
outsb
sbb
stc
mov
int3
movsl
cmp
xor
push
pop
jecxz
ljmp
pop
mov
mov
mov
push
cmp
clc
xchg
rol
in
add
je
or
pop
lock
mov
add
mov
sbbb
adc
cli
jg
and
mov
inc
push
sub
stos
sbb
xchg
inc
cmp
push
test
cld
lahf
je
xchg
js
mov
jg
jge
pop
sbb
mov
mov
out
inc
clc
push
fidivs
and
push
mov
jno
mov
and
sbb
cwtl
aad
dec
mov
cmp
loop
adc
xchg
lea
sub
add
iret
ljmp
pop
mov
or
xor
push
fsubs
xchg
stos
mov
push
stos
xchg
outsb
outsb
das
inc
in
sbb
jge
sahf
mov
adc
push
xchg
add
icebp
mov
mov
loopne
std
xchg
shll
leave
lret
xor
outsl
test
cmp
aad
mov
popf
inc
cltd
repnz
clc
sub
jg
mov
pushf
xchg
push
les
dec
int
pop
mov
mov
push
and
mov
inc
ljmp
scas
cmp
pop
mov
mov
jmp
pushf
in
sub
or
dec
jne
fnstenvs
int3
push
mov
loopne
fcmovu
dec
push
jge
cld
in
into
in
out
pop
jg
mov
das
push
stos
jecxz
movsb
or
mov
js
das
jge
or
pop
cmp
jbe
adc
inc
les
movsb
add
push
xchg
sbb
cmc
ds
dec
fisttpll
js
mov
cmp
mov
pop
fyl2x
in
or
int
xchg
movsb
out
mov
pop
and
mov
stc
add
pop
xchg
push
ds
add
in
dec
push
call
mov
mov
fcmovbe
subb
rcrb
js
jge
hlt
sahf
scas
sub
repnz
cmp
push
das
xchg
andb
push
add
push
nop
xchg
push
notb
cmpb
mov
mov
dec
lock
mov
cs
and
fstps
maxps
out
mov
mov
cmpb
adc
jbe
inc
jecxz
or
out
mov
fucom
popa
clc
cli
cmp
sbb
jge
js
insb
cmp
and
popf
clc
fcmovnb
push
dec
fs
rcrb
add
fldl
dec
add
incl
jmp
and
pop
add
or
je
push
cmp
out
pop
push
stos
insb
das
sbb
imul
xorb
ja
addr16
inc
and
js
jle
movsl
fwait
cmpsb
or
adc
repz
push
cmp
shrl
repz
adc
cmp
call
pop
in
and
pusha
xchg
xor
cmpsb
pusha
sbb
add
in
loopne
adc
in
pop
imul
and
pop
orb
xchg
cld
or
addb
xchg
js
test
adc
sarb
fnstcw
mov
xchg
test
dec
clc
mov
sbb
movsb
lcall
xor
pop
adcb
or
mov
xor
jge
es
jle
xor
js
pop
and
mov
outsl
pop
xchg
lock
lcall
lcall
loopne
inc
cld
mov
lds
jle
xchg
sbb
add
inc
pop
pop
or
addb
les
pop
mov
hlt
or
decl
add
push
shl
js
sub
das
ja
xadd
data16
mov
adc
mov
pop
adc
das
jo
cld
jb
loope
push
or
push
adc
sub
mov
push
ret
adc
xor
mov
clc
sbb
sub
dec
add
jmp
in
sub
cld
sbb
mov
xlat
mov
push
test
cmpsl
test
cmp
pusha
shl
shrl
mov
jp
lods
adc
lahf
popf
pop
adc
mov
mov
cmp
mov
add
pop
inc
and
push
pop
mov
xor
outsb
dec
into
or
add
push
push
imul
jg
cmpsb
rol
sbb
ret
xchg
push
fiadds
shlb
lcall
lock
loop
mov
adc
scas
ficompl
mov
in
sub
cli
sarb
into
mov
in
in
jne
adc
arpl
dec
hlt
cmpb
ret
arpl
add
or
mov
sub
xor
jl
sub
and
mov
outsb
call
and
xchg
adc
fsubrl
pop
stos
mov
jg
int
sbb
mov
cld
outsl
shrl
pop
jge
loop
pusha
ds
mov
xor
lock
cmc
inc
fmull
jmp
cmp
rcrb
fdiv
xor
cmp
dec
xor
outsl
sbb
sbb
xor
repz
xchg
andb
cmpl
xchg
pop
lods
mov
cmc
cmp
aas
sbb
lea
mov
dec
add
test
mov
jb
fs
jbe
add
loop
sbb
lea
add
fcompl
lahf
cld
loope
lock
inc
cmp
add
or
test
shrb
sub
push
in
add
mov
and
xor
xorl
outsb
adc
pop
xchg
loop
push
or
cli
outsl
insb
mov
jmp
push
mov
mov
ja
loope
pushf
lds
push
cmova
cmp
shlb
ljmp
mov
sub
pop
pusha
sbb
test
adc
inc
loop
testb
shlb
add
pusha
in
xor
mov
add
mov
xchg
mov
loopne
push
adc
or
xor
push
int
enter
sti
jno
mov
cltd
nop
les
jmp
mov
lret
or
pop
fs
sbb
daa
push
dec
cld
jo
push
dec
sti
mov
addb
lock
popf
ss
mov
lods
ss
test
pop
pop
mov
or
adc
cmp
les
addr16
add
pop
xchg
cltd
mov
pop
mov
lock
add
scas
es
cltd
daa
mov
icebp
mov
cli
das
loopne
hlt
adc
inc
inc
loop
pop
push
xchg
outsb
mov
shlb
push
push
push
add
cmp
sub
test
fidivrl
xchg
fwait
imul
cmp
inc
imul
imul
add
push
test
add
push
lock
jae
inc
insl
add
aas
xchg
mov
jp
mov
sar
xchg
cmc
mov
outsl
push
sarb
pop
dec
cmp
iret
incl
or
xor
mov
xchg
or
int3
mov
pop
lods
and
jo
dec
pop
xchg
or
dec
xor
call
mov
adc
aas
arpl
lods
fadds
loopne
add
or
push
outsb
rolb
roll
lods
or
cs
inc
loopnew
popa
test
fsubl
test
loopne
jb
lret
rolb
lahf
mov
hlt
pop
or
rcl
mov
or
in
xchg
push
js
and
cmp
mov
push
rorl
and
rcll
mov
daa
push
xor
xchg
sbb
lods
push
adc
out
mull
les
inc
jge
or
and
push
aas
js
and
or
test
les
cltd
adc
jge
ret
and
xor
adc
xchg
inc
mov
mov
mov
dec
inc
mov
js
adc
fbld
ss
fdiv
push
call
mov
loop
push
rcr
jo
fs
mov
mov
in
xchg
rcrb
pop
outsl
popa
cmpsb
xor
cmp
jns
lcall
add
sbb
mov
mov
stc
push
pushl
ror
mov
test
mov
loope
mov
push
sbb
mov
mov
cmp
mov
jecxz
mov
inc
push
jo
rcrb
inc
xor
jp
shl
mov
mov
push
movsb
jmp
mov
add
subb
mov
and
pop
pushf
jbe
cmp
pop
sbb
mov
faddl
cmpsl
ljmp
and
fisubrs
push
in
test
or
lock
cld
lahf
push
dec
dec
cmp
jnp
push
nop
pop
mov
mov
lds
mov
in
in
jnp
aaa
xchg
out
ja
inc
inc
push
sub
jmp
incl
mov
lock
loopne
fcoms
inc
jl
test
out
adc
sbb
daa
insb
lcall
movsl
cwtl
jo
fidivl
mov
cli
sub
cmp
cld
sub
mov
xor
fsubr
jne
insb
push
add
xchg
xor
imul
push
pusha
xchg
adc
clc
xchg
aad
or
jb
sti
push
out
sub
rcrl
rcll
xchg
addr16
mov
push
jg
test
pushf
lds
je
popf
and
cltd
std
push
push
mov
fisttpl
push
sahf
lahf
push
les
hlt
arpl
xor
insl
mov
push
out
jne
into
xchg
adc
scas
rcrb
sbbb
pop
ss
add
xor
das
jp
pushf
cmp
out
jmp
data16
scas
sbb
popl
push
iret
adc
pusha
mov
outsb
popa
in
dec
test
pop
mov
mov
cmpsb
lret
rorl
inc
in
leave
push
lods
jbe
mov
arpl
add
std
std
sub
add
popf
mov
into
aad
int
mov
mov
aas
pop
or
xchg
pop
aad
lods
pusha
sbb
adc
pop
mov
lock
mov
jb
mov
mov
shl
jg
rorb
dec
fcmovnu
xlat
xchg
std
cmp
inc
push
hlt
push
insl
sahf
jp
sti
and
push
fsubr
dec
mov
mov
sahf
ds
mov
dec
mov
arpl
subb
mov
cli
inc
cwtl
call
ljmp
xchg
push
cld
dec
ret
pop
ds
xor
pop
shl
das
in
or
mov
icebp
inc
enter
fadd
popa
sub
adc
push
scas
mov
xchg
cs
xchg
sbb
loopne
adc
sbb
cmp
mov
and
inc
cli
xchg
mov
sub
lock
nop
pop
lods
cld
roll
push
add
jle
rcrb
movsl
lock
shrl
add
pusha
icebp
or
fldt
popf
inc
pop
sbb
hlt
popf
xchg
sbb
xchg
fwait
and
xchg
mov
hlt
adc
lea
int
xor
dec
mov
add
roll
es
adc
pop
and
ss
adc
inc
sub
cmpsl
mov
ss
mov
test
fwait
jmp
sbbl
sub
or
ljmp
ja
pop
mov
aaa
xor
in
mov
push
cld
adc
lahf
jmp
mov
sarb
rcr
enter
pushf
mov
mov
rolb
sbb
mov
pop
mov
repnz
std
xlat
data16
push
fwait
mov
ljmp
loopne
cmpl
repz
aas
xchg
jo
ret
lcall
shlb
sbb
adc
out
push
outsl
stos
pop
cld
inc
dec
scas
push
fwait
xor
jge
sahf
loope
mov
mov
mov
add
fdivr
cmc
aas
aaa
idivl
mov
cmp
pop
mov
push
push
inc
mov
movsl
mov
and
jg
or
shll
jo
inc
stos
mov
xor
push
bound
xor
mov
pop
test
add
lcall
push
popa
inc
sub
pop
dec
adc
sbb
jb
add
hlt
cmpl
std
es
mov
dec
aad
cmp
or
or
lods
and
add
les
cld
pop
jg
aam
in
jmp
mov
clc
push
gs
pop
fs
insl
out
mov
in
mov
xor
and
testl
mov
mov
jmp
sbb
shl
xlat
push
jl
and
add
adc
popa
and
lret
test
mov
dec
dec
mov
pop
push
cltd
jmp
test
jbe
add
je
inc
push
popa
or
sbb
dec
cmp
xchg
push
inc
push
push
sbb
ret
inc
inc
lret
mov
cmpsb
xor
rdpmc
xchg
add
mov
or
add
xor
mov
dec
push
adc
ret
and
repnz
cmc
pop
sbb
daa
fisttpll
addr16
sbb
xor
inc
xchg
mov
and
movsl
aas
stos
mov
mov
xor
mov
pop
sarl
fdivr
icebp
jb
js
mov
mov
mov
loopnew
sbb
lahf
mov
out
mov
dec
bound
mov
mov
daa
or
adc
in
fsub
pop
in
fsubrs
stos
dec
or
mov
movsb
mov
daa
aas
add
in
pop
mov
mov
push
lea
sub
btc
les
into
xor
cs
xchg
xor
mov
push
and
xchg
add
sbb
mov
xor
push
outsb
loopne
subb
add
push
pop
dec
shll
ljmp
push
pop
jne
out
je
outsl
dec
jl
adc
sti
in
clc
stc
dec
enter
ret
mov
ret
adc
popa
add
push
aam
xchg
pushf
push
cmp
call
jnp
xchg
cmp
push
scas
lcall
xchg
xor
sub
fdivs
jmp
stos
fsubrl
mov
mov
into
ret
sahf
mov
fucom
jle
pop
mov
int
lods
push
mov
mov
pushf
sbb
inc
or
fstps
xor
push
jb
test
xlat
cs
sub
icebp
adc
mov
decl
pusha
ret
add
sub
fisttpll
pop
jecxz
jno
inc
mov
bound
inc
pop
popa
push
cmp
sub
sub
rorb
and
sbb
movb
gs
jns
push
stos
adc
xor
imul
jnp
inc
lret
cmp
mov
jp
push
loop
mov
mov
test
push
daa
test
push
sti
loop
add
rorb
repnz
fiaddl
sub
jle
or
add
add
sbb
lock
loop
inc
xchg
imul
mov
adc
jp
fcoml
sbb
shrb
outsb
inc
jo
lock
add
cmp
or
in
jmp
inc
push
mov
lea
xor
negl
pop
and
dec
cld
mov
push
dec
sub
js
mov
daa
push
jecxz
dec
mov
inc
lret
sub
rorb
mov
sbb
pop
mov
jge
aas
xchg
xchg
cmp
push
loope
fcomp
pop
aas
sbb
pop
fdivs
pop
and
xchg
cs
and
lahf
std
sahf
lock
out
in
lret
popa
cmp
xor
lock
push
ss
movsb
fstl
add
nop
xorb
inc
scas
dec
icebp
sbb
loopne
or
jns
sub
push
rcll
mov
fmulp
sti
or
pusha
loopne
scas
jmp
mov
sub
cmp
nop
cmp
stc
inc
inc
popf
dec
sbb
mov
push
in
mov
imul
mov
std
jg
out
fbstp
orl
gs
inc
test
sbbl
aaa
icebp
fs
mov
daa
add
sbb
mov
into
insb
add
dec
jmp
inc
scas
mov
inc
mov
arpl
push
inc
fs
inc
popa
scas
jge
loopne
mov
out
ficompl
ljmp
jle
loope
orb
pushf
add
fcomip
jo
push
in
mov
xchg
scas
adcl
sub
out
lea
mov
add
clc
mov
or
ljmp
add
enter
hlt
pop
inc
add
iret
test
pusha
lea
icebp
or
or
inc
ret
adc
dec
cmc
jne
call
cmp
scas
and
cmc
lds
popf
adc
add
adc
adc
lcall
rorb
push
inc
mov
scas
or
ror
push
je
aas
push
cmp
xchg
cmp
sbb
sti
jecxz
clc
jg
lcall
iret
push
push
ss
nop
fldt
fisttps
pusha
rcrl
icebp
mov
mov
pop
jecxz
mov
mov
jns
fcmovne
icebp
mov
clc
cli
push
into
hlt
adc
ja
sbb
movsl
add
loopne
push
ret
jae
popa
repnz
inc
and
fcmovnb
dec
mov
xchg
fadds
mov
jecxz
aas
cli
xchg
and
repz
fs
sahf
incb
jns
dec
inc
data16
loopne
push
mov
mov
mov
jae
into
mov
add
sbb
push
daa
mov
es
ret
pop
add
loop
jl
xchg
loop
outsl
pushf
js
js
xchg
and
pop
adc
sbb
hlt
dec
mov
js
xchg
and
pop
jge
sbb
pop
repnz
push
loop
and
call
in
cmp
inc
clc
repz
jecxz
jne
mov
test
je
sub
push
and
dec
or
test
pushf
push
xorl
pop
call
jl
push
xlat
xor
push
cmp
lock
and
mov
or
cmp
lods
rcrb
cmp
jle
icebp
or
stos
mov
das
ss
outsb
jbe
loope
je
out
sub
pop
or
pusha
adc
cmpxchg
mov
jmp
cli
arpl
addr16
iret
and
push
fsts
and
sbb
jb
pop
repnz
sahf
jo
sbb
ja
mov
sbb
dec
lods
mov
fld
xor
sub
std
fidivrl
sbb
xchg
incb
mov
and
ljmp
cs
sbb
test
and
cli
arpl
stos
bound
push
xor
in
in
fldcw
xchg
clc
outsl
inc
push
pusha
cmc
sbb
cmp
or
inc
data16
ret
fs
xor
mov
cmp
xor
mov
cld
in
push
mov
scas
or
aas
std
dec
and
lods
jmp
add
adc
push
push
rcrb
sbb
xchg
out
clc
repz
mov
adc
pop
mov
insb
rcl
lret
jl
or
dec
push
cmpsb
mov
inc
dec
je
dec
inc
cmp
pop
rcll
lcall
subb
and
idivl
cs
pop
dec
cli
mov
xchg
jp
inc
ret
add
xchg
je,pt
pop
add
xchg
add
aas
inc
fbld
sub
or
cmp
mov
out
jne
lock
jecxz
xchg
lock
xchg
outsl
lahf
imul
ds
push
add
xchg
push
and
mov
out
call
mov
sub
loop
jg
icebp
sub
inc
int
mov
xor
or
jg
filds
movsl
lods
inc
bound
mov
out
mov
pop
jno
mov
ret
pop
sub
or
adc
push
push
mov
mov
hlt
xchg
push
aam
cmp
call
pop
lahf
loop
pushf
rcr
sbb
sbb
add
iret
sbb
mov
jl
xor
fadds
mov
orl
and
push
ret
testb
mov
sbb
popa
dec
psubusb
add
add
pop
sahf
add
jle
xchg
xlat
sarb
and
shlb
cmpb
and
mov
cli
push
mov
ret
and
orb
lods
push
cvttps2pi
fimull
sub
leave
ret
fdiv
cli
jbe
movsb
repz
scas
lahf
mov
test
clc
sub
dec
fsub
sub
xchg
lock
ja
rolb
inc
mov
and
push
xchg
xlat
insl
lret
lea
jne
fwait
rorb
shll
cli
cs
roll
and
repnz
pop
loop
mov
ret
aaa
adc
sbb
jge
sbb
mov
inc
ds
movsl
xchg
inc
and
add
xchg
loop
sbb
adcl
aad
ljmp
out
mov
aas
pop
cmpsl
js
xor
add
cld
dec
jg
loopne
fdiv
lds
cmc
xor
or
inc
adc
push
or
mov
and
xchg
test
pop
jno,pt
push
pushf
aas
les
ret
sub
call
jbe
mov
jnp
xchg
sbb
lahf
cmp
cli
dec
sub
sbb
loope
mov
movsl
add
je
mov
lods
xor
sysenter
mov
jae
cs
insb
add
mov
hlt
fbstp
add
pop
sub
out
loopne
inc
or
lods
or
ret
test
cmc
addb
ss
dec
mov
fbld
mov
cmp
push
pusha
cmc
add
sub
jmp
js
mov
and
and
add
ss
stc
dec
add
push
call
adc
rclb
adc
enter
inc
and
cmpsl
adc
add
ret
xchg
leave
fcoml
inc
fistpll
mov
adc
sub
cmp
mov
mov
movsl
stc
mov
adc
and
enter
dec
jg
pop
jg
or
call
cmpsb
fimuls
inc
pusha
fisttpll
fs
cmp
cmp
cmp
adc
xchg
push
xor
jg
and
xchg
mov
add
scas
dec
rep
sbb
aas
cs
adc
into
mov
and
push
push
pop
push
cld
mov
dec
cmp
out
cmc
or
push
call
das
inc
or
leave
push
push
cmp
mov
pop
dec
push
iret
test
add
or
mov
filds
js
xchg
sbb
stos
bound
and
xor
mov
nop
push
xor
clc
popf
mov
pushl
les
mov
pop
adc
dec
jmp
dec
movsl
fmul
mov
clc
pop
push
sub
cmp
rorb
and
fildl
pop
mov
sub
adc
test
inc
adc
pop
mov
adc
xor
ja
pop
mov
dec
sub
pop
add
icebp
add
pushl
pop
jmp
fmul
push
xchg
inc
add
ljmp
insb
insl
cmp
int
sbb
scas
loop
dec
pop
push
cld
js,pn
gs
xlat
dec
xchg
fstp
pop
loop
shrl
clc
lretw
loopne
mov
adc
fidivs
jle
icebp
fadd
adc
testl
movsl
push
shlb
lea
mov
imul
pop
shl
or
lahf
jbe
mov
mov
add
cmpsl
idivb
sahf
ds
cmp
loopne
and
hlt
aas
or
cmpsl
cmpsl
push
icebp
add
nop
in
inc
adc
sbb
aaa
push
mov
insl
pushf
and
mov
cli
push
jl
js
xor
and
addr16
add
and
ds
imul
sti
loopne
fidivrs
xor
mov
mov
add
and
cli
jb
push
adc
sub
mov
cmp
xchg
or
push
enter
aas
clc
adc
jmp
loop
out
in
sub
insb
fistpll
cmc
mov
cmp
or
ds
cli
loope
into
insl
mov
push
std
adc
decl
out
fldenv
iret
mov
inc
mov
pop
or
dec
out
test
iret
nop
in
lcall
shr
mov
into
imul
or
sbb
sbb
std
push
dec
xchg
insl
dec
add
inc
lock
cmp
pop
scas
or
mov
sbb
mov
dec
int
xor
push
enter
stos
je
inc
mov
int3
idivl
loopne
sarb
dec
sbb
adc
test
call
rep
xor
mov
mov
jnp
mov
xchg
sbb
loope,pt
add
and
faddl
shll
cmpsl
repnz
jo
inc
das
pop
or
pop
xchg
pop
mov
xchg
stc
add
sub
fdivrp
aas
pop
imul
inc
aam
scas
pop
pop
add
and
clc
mov
add
sbb
pop
dec
jmp
imul
ja
fistl
adc
lods
push
aas
jecxz
loop
dec
repnz
je
rcrl
push
stos
fcomip
rcrl
jmp
jmp
mov
push
adcl
lods
sbb
aam
adc
dec
jp
push
stos
mov
jge
pop
pusha
jmp
mov
mov
push
in
and
cli
fdiv
into
rorb
fwait
xchg
mov
jns
sub
sub
jnp
jnp
ja
decl
pop
dec
push
sbb
scas
cmpsb
mov
xor
jle
and
mov
mov
clc
dec
pop
push
inc
adc
mov
rorb
iret
inc
mov
mov
mov
xor
aad
pop
cld
outsb
mov
xchg
mov
xchg
adc
inc
sub
test
cmp
cli
push
mov
iret
inc
lcall
int
add
out
popf
mov
mov
jnp
xchg
mov
test
add
push
sbb
push
cmpl
push
out
xchg
mov
loopne
mov
jge
mov
daa
cld
push
cld
inc
mov
loop
repz
pop
outsl
lock
test
in
imul
and
sub
push
or
cmp
repnz
mov
shrl
pop
mov
icebp
sub
ret
jo
sub
lcall
sbb
cmp
cmp
add
adc
lods
cld
sbb
sarb
sahf
aas
cmpl
lock
test
sub
loopne
jl
test
lea
imul
cld
dec
adc
int3
push
sbb
leave
sub
jle
cld
fstpt
es
or
xchg
cmpsb
andb
pop
mov
rcl
cmp
cmpsb
push
loopne
std
mov
cwtl
push
xchg
lahf
sub
dec
push
xlat
test
cmp
ds
addr16
jb
xor
stos
jns
or
orb
cli
loope
faddl
rclb
jbe
xchg
cs
adc
nop
sbb
adc
decl
fnstsw
in
pushf
test
outsl
sar
rclb
lcall
xor
xchg
jg
cs
add
stos
xchg
test
data16
std
add
lods
add
test
and
mov
mov
sar
xchg
cld
dec
outsb
mov
push
loopne
in
in
cwtl
ds
mov
mov
push
mov
push
add
xchg
and
pop
ret
mov
ljmp
and
or
ret
cmp
lcall
vsubpd
add
bswap
add
jmp
pop
sarb
dec
out
scas
ror
cmpl
arpl
sub
mov
arpl
js
pop
cli
sbb
cmp
es
xchg
adc
and
xor
or
push
dec
loop
lock
call
fmul
outsl
add
dec
sbb
mov
je
inc
push
push
lcall
mov
and
loopne
test
dec
data16
mov
test
ljmp
adc
and
fcmovb
data16
or
ljmp
push
jno
addb
sbb
jae
adc
adcl
add
mov
pop
stc
adc
out
and
mov
push
movsb
lea
sub
fildl
inc
adc
ret
jp
les
and
cmp
mov
adc
cmp
filds
rol
sbb
sub
das
daa
or
decl
mov
gs
clc
pop
loopne
mov
mov
rcll
mov
adc
dec
mov
out
aad
sar
sahf
out
add
lock
ret
adc
cs
mov
jbe
shlb
push
lds
js
xor
or
stc
nop
xchg
mov
lods
test
add
sbb
sub
mov
pop
jmp
adc
sub
cmpl
test
popa
jne
test
or
pop
test
mov
jl
pusha
daa
loopne
jae
inc
leave
add
or
loop
mov
mov
clc
sbb
stc
rorb
loop
jo
lea
adcl
push
je
loope
xlat
push
mov
cmp
mov
pop
or
cmpsl
in
movsl
lock
mov
lret
pop
incl
sbb
add
sbb
imul
out
ds
jecxz
mov
mov
add
fwait
add
fistl
push
mov
ret
test
mov
lds
sub
pop
mov
add
mov
cmp
hlt
popf
inc
pop
clc
psubd
mov
fcmovne
and
in
pop
scas
jbe
pop
stc
in
filds
inc
xchg
je
aad
lock
lea
mov
outsb
dec
xchg
lea
jmp
mov
push
lds
mov
pop
loope
fiaddl
sub
outsl
sbb
nop
lcall
inc
adc
roll
mov
loopne
mov
sub
adc
inc
test
ficoms
dec
and
loop
icebp
adc
sbb
mov
data16
push
aaa
ss
jmp
adcl
incl
cmovnp
scas
xchg
sarb
fnstenv
pop
pop
or
aad
psubb
ljmp
dec
and
ljmp
shl
lods
mov
out
add
jle
xchg
cmp
sahf
arpl
ljmp
ljmp
jmp
and
in
xlat
adcl
xchg
adc
sbb
inc
and
cmp
mov
aam
outsl
arpl
push
fstp
rclb
lret
popa
lods
adc
cmpsl
scas
push
mov
aas
jg
pusha
cmpsl
push
inc
push
popf
divb
add
test
jno
mov
aas
inc
es
push
adc
add
stos
cld
mov
iret
add
out
ss
fnstenv
scas
mov
inc
add
xchg
xor
cmc
subl
popa
adc
dec
jl
pop
jg
mov
and
pusha
icebp
shll
int
pusha
xchg
xchg
mov
popf
jb
cmpsl
inc
mov
push
pop
insl
repz
stos
sub
mov
out
pop
sub
jg
je
pop
js
xor
mov
push
mov
cmp
aam
popf
int3
fstpt
mov
push
lret
dec
mov
icebp
xchg
rorb
cmp
jno
sub
and
adc
sub
xchg
leave
loopne
adc
movsb
mov
rorb
or
aad
movsl
stos
inc
dec
add
jbe
or
imul
aad
lock
and
dec
inc
xchg
sub
or
mov
cmp
mov
sub
xor
jmp
mov
test
mov
cli
testl
sahf
add
loopne
dec
mov
scas
daa
jl
sbb
ljmp
pop
int
fwait
add
and
andb
test
pop
push
and
out
shld
add
adc
mov
cmc
pcmpeqb
fidivl
xchg
mov
call
xor
pop
mov
push
lock
mov
push
prefetch
or
jno
inc
push
jb
ret
xchg
repz
aas
pop
lcall
lret
xchg
dec
test
aam
in
inc
sbb
xchg
push
inc
mov
inc
jo
clc
push
prefetcht1
and
cmpb
fimuls
cmp
pushf
pop
jmp
push
ja
sub
daa
or
jne,pt
iret
call
cmp
rclb
jbe
jmp
xchg
sahf
sti
mov
das
clc
iret
filds
int
das
insb
fldl
push
in
shrb
xchg
clc
in
test
inc
add
mov
ret
xchg
ret
in
testb
mov
ds
rorb
arpl
jae
mov
jae
pop
loop
loop
xchg
mov
dec
insb
int
xlat
idivl
mov
mov
cld
add
jle
pusha
fcoml
jb
mov
ds
pusha
mov
fidivs
jg
mov
cmp
mov
outsb
shrb
icebp
out
inc
sbb
int
cmp
add
push
mov
insl
fcoms
cmp
jecxz
jo
iret
es
pusha
loope
fisubl
nop
push
push
scas
push
xchg
pop
aaa
out
stc
jae
jnp
xchg
loop
push
pop
sub
loop
inc
mov
aam
mov
xchg
dec
cmp
rclb
call
push
cmp
sbb
cs
jle
xor
dec
inc
mov
and
fisubrs
clc
jge
adc
mov
pusha
jno
pop
pop
out
lock
lahf
jmp
adcb
dec
clc
xchg
cmc
jo
cmp
push
dec
jae
xchg
leave
and
mov
lock
add
mov
mov
add
dec
fwait
dec
iret
add
mov
sbb
mov
push
sbb
out
xor
mov
push
fs
xchg
sbb
mov
shrb
int
aas
jp
fistpll
es
mov
mov
cmp
addl
jo
out
add
xchg
pop
inc
fs
into
call
loopne
mov
pop
adc
mov
cmc
pop
rolb
push
xchg
cmp
push
add
mov
imul
cmp
fwait
mov
jno
mov
int
les
ds
or
les
daa
scas
repnz
out
out
xorl
fadd
push
xchg
into
out
daa
incb
mov
ds
out
sub
or
lock
jge
cmp
and
je
add
push
sahf
cmc
ja
jmp
lahf
sbbl
sbb
mov
push
sar
and
lea
std
pop
adc
and
xchg
dec
loop
push
shlb
dec
lcall
sbb
add
repz
outsl
ficompl
push
push
jmp
lahf
icebp
pop
scas
mov
or
aas
hlt
lods
xchg
add
inc
rep
in
inc
pop
adc
xor
push
jns
jnp
rorl
or
test
fists
xor
xor
sbb
or
push
add
xor
lods
push
popf
lahf
push
out
lock
das
dec
xchg
jle
xor
in
sub
inc
mov
and
fadd
push
pop
aam
js
lret
mov
dec
xor
addr16
jo
push
sbb
bound
mov
push
mov
push
js
pop
inc
outsb
or
fwait
sub
adc
mov
lsl
and
das
sbb
inc
mov
stos
pop
lret
add
ds
pop
pop
push
cmpb
jge
bound
push
xchg
cmp
inc
inc
hlt
jae
das
inc
pop
movq
mov
addb
mov
outsl
bound
xor
xchg
lods
pop
cmp
and
pop
pusha
aad
leave
lods
dec
push
insl
lahf
addr16
mov
sbb
jne
ss
ljmp
test
dec
rcrb
add
sub
fiadds
lock
inc
mov
call
add
outsb
add
add
mov
mov
loop
or
jmp
out
mov
add
cmp
aas
mov
mov
mov
and
inc
and
mov
jecxz
pusha
loopne
push
or
imul
ficoms
mov
add
dec
sbb
lds
scas
sub
sub
push
adc
dec
cmp
and
icebp
jecxz
repnz
or
jno
stos
call
cmc
xchg
aaa
jo
arpl
push
sti
and
stos
cmp
jo
mov
or
jnp
jg
test
sbb
jno
lret
out
std
or
mov
ljmp
and
pop
cmp
dec
cmp
mov
and
sbb
repz
or
mov
mov
lahf
sub
clc
xor
rorb
sbb
btr
mov
shll
adcl
mov
fiaddl
call
add
add
xchg
mov
imul
dec
ljmp
leave
sti
out
jno
fildl
out
sub
incb
push
gs
and
fsubl
pop
jmp
push
stos
in
push
xor
and
andl
fs
es
sbb
mov
sbb
pop
repnz
aam
mov
dec
add
mov
lods
xchg
mov
imul
add
das
popf
jmp
or
xor
push
hlt
jle
lock
out
vunpcklps
das
arpl
insb
and
or
test
add
jbe
clc
out
and
and
push
inc
pusha
pop
mov
push
call
adc
or
mov
add
fadds
out
sbb
sbb
rorb
in
dec
jmp
jp
sahf
movntq
clc
ljmp
hlt
stc
mov
adc
loope
not
cltd
pop
imul
outsb
push
jmp
popa
ret
cmp
add
sahf
or
les
add
inc
sbb
pushf
stc
mov
lods
shlb
loop
pushf
add
lahf
add
inc
mov
cmp
adc
les
inc
cmp
inc
dec
add
mov
shrb
cmp
or
iret
div
adc
sbb
xchg
sub
jmp
push
jecxz
cwtl
mov
sti
or
pop
push
bound
mov
bound
xor
jge
lcall
ficompl
adc
in
flds
dec
jae
loopne
and
inc
pushf
jp
mov
scas
test
and
cmp
push
fnstcw
dec
pop
mov
push
movsl
pushf
cmp
mov
or
xor
mov
pop
std
jle
inc
lcall
push
fcoms
mov
cmp
test
mov
mov
loop
mov
cmpsl
cmp
std
out
jmp
loop
nop
imul
xor
inc
lds
mov
jg
cmp
inc
inc
dec
jmp
cwtl
jbe
mov
lods
jp
ja
enter
aas
cmp
in
cmpsb
jbe
rol
mov
fwait
or
faddl
dec
pop
or
or
mov
or
pop
shlb
andb
leave
sbb
mov
pushf
roll
icebp
xchg
insl
dec
mov
dec
outsb
push
cli
mov
inc
out
jb
cmp
cli
pushf
insb
xchg
jb
jnp
mov
mov
mov
add
data16
add
push
xor
adc
xor
ret
pop
stos
notl
xchg
insl
mov
pushf
neg
push
subb
inc
xchg
sahf
bound
scas
inc
jno
incl
inc
sub
bt
outsb
add
add
das
gs
mov
sbb
mov
gs
mov
fmull
dec
pop
sbb
ficomps
cmp
xlat
negb
lret
popa
jno
loopne
ret
jp
ljmp
sub
mov
nop
movsl
repnz
and
ficompl
inc
push
adc
or
out
jno
add
dec
jl
jae
addb
and
shl
lret
xor
and
push
xchg
push
and
aad
mov
hlt
pop
push
push
nop
or
pop
popa
add
jne
lahf
pop
xor
pop
ret
hlt
dec
lods
arpl
or
fsubrl
pop
pop
xor
mov
jle
pop
xchg
cli
dec
mov
shlb
cwtl
push
loope
test
loope
test
or
pop
repnz
add
push
pop
lock
push
test
je
sbb
inc
dec
scas
inc
jp
push
mov
in
and
aad
movsb
neg
pop
sbb
mov
sub
pop
pusha
jnp
or
sub
scas
test
and
dec
fnstcw
or
ljmp
out
inc
rolb
add
loopne
mov
cmp
in
lock
int
cld
lea
outsb
je
test
pushl
scas
mov
xchg
test
lahf
test
mov
lret
int
pop
and
leave
aas
test
inc
stc
rcrl
out
add
cli
add
pop
les
rcll
jmp
add
push
jg
xchg
mov
mov
rcr
aas
addl
cmp
mov
lods
inc
push
je
mov
lret
pop
insb
jmp
jns
pop
roll
add
lds
test
sub
icebp
or
mov
push
inc
ret
popf
dec
je
sbb
xchg
arpl
xchg
push
lock
jp
stos
mov
pmulhuw
adc
movsb
in
loop
insl
rclb
int3
jl
jae
leave
sub
and
sbb
mov
ljmp
enter
pop
mov
ja
test
addr16
jge
jle
xchg
fs
stos
imul
mov
mov
xchg
aam
cld
mov
ret
push
pop
xchg
adc
fsubrs
mov
add
cld
test
sub
inc
jns
pop
sub
adc
stos
or
test
adc
scas
mov
shll
sarb
xor
adc
mov
sarb
cmp
arpl
stos
xchg
bound
lods
stos
jo
cwtl
or
pop
push
decb
dec
cltd
inc
cmp
stos
xchg
scas
push
cmp
aam
imul
mov
jp
push
repz
aad
ljmp
stos
es
icebp
mov
div
das
jo
inc
jo
mov
push
or
add
adc
mov
mov
jae
andps
sbb
sub
or
das
repz
rolb
in
icebp
cmp
mov
out
pop
cmp
dec
jo
sub
cmp
or
push
imul
sbb
mov
test
shrb
push
push
push
fnstcw
adc
lds
inc
add
and
push
subl
mov
sub
sub
outsb
xor
adc
pop
mov
jbe
stos
and
decl
dec
cmp
cmp
push
mov
sahf
push
dec
fists
xchg
dec
addb
or
mov
xor
sbb
mov
mov
cli
mov
subl
mov
add
mov
push
inc
aam
pop
rolb
cwtl
jge
push
dec
stos
inc
and
shl
pop
ror
push
mov
adc
negb
pop
jge
aam
sub
idiv
or
pop
adc
rorl
ss
std
stos
xchg
nop
add
js
inc
xchg
test
sbb
ss
jo
sbb
push
pop
and
bound
int3
push
mov
jns
dec
push
push
test
test
xlat
orb
and
pop
loopne
push
cld
bound
repz
sbb
loopne
add
jo
cmc
mov
cld
xchg
rcll
add
ret
arpl
or
add
and
dec
dec
jb
push
cmp
add
inc
jns
test
mov
es
dec
pop
sub
outsl
mov
add
fildl
into
pop
and
add
adc
sti
mov
jno
pusha
std
add
rolb
lock
cli
je
icebp
fdivrs
inc
pop
add
outsl
fwait
sarb
out
pop
pop
cld
push
sbb
js
xchg
leave
xor
aad
ja
test
pushf
bound
fdivrs
sub
icebp
es
sub
cmpsl
icebp
daa
and
adc
jns
ljmp
fld1
repz
lods
adcl
xor
dec
paddb
mov
sahf
xchg
mov
decl
in
cmpsb
jle
aas
rorb
dec
sahf
popf
pop
icebp
dec
push
xor
cmpb
loopne
inc
add
sub
out
sbbl
jp
ds
inc
in
or
add
incl
into
in
andb
aad
aas
nop
fldcw
xor
and
xor
xchg
cmpsb
add
pop
jo
lret
dec
stc
xor
roll
xchg
loopne
test
popl
push
jo
add
jl
aad
pop
xchg
pop
mov
js
xchg
mov
jmp
mov
mov
mov
scas
leave
cmp
mov
sbb
xor
filds
xchg
into
adc
and
xchg
push
mov
pop
jmp
in
fisttpll
test
popa
dec
mov
mov
mov
mov
repz
test
das
and
ja
fnstsw
loopne
clc
sub
push
jp
fisubl
shrb
enter
pop
mov
test
mov
jp
je
inc
fstpt
dec
cli
hlt
daa
pop
data16
xor
shll
les
loopne
es
pop
and
ja
out
daa
pop
dec
xchg
add
loope
sbbl
mov
loope
cmp
shll
mull
rcrl
sbb
ljmpw
mov
hlt
dec
mov
sub
movsb
dec
pop
je
push
in
jae
call
jmp
insb
int
lahf
push
movl
aad
jb
lds
mov
mov
les
sub
mov
cmpsb
cmp
outsb
pop
mov
out
jne
test
int3
mov
sahf
xchg
and
mov
pop
popf
inc
push
sbb
mov
add
inc
xor
jae
mov
adcb
aaa
inc
test
lcall
imul
aaa
cmp
mov
or
mov
push
out
mov
in
sbb
xchg
les
sub
aam
pcmpgtd
in
lcall
adc
push
cli
or
repz
lock
loope
jbe
cmc
mov
push
jo
sarl
mov
rorb
aaa
sbb
int
rorl
sarl
mov
mov
aas
test
and
add
push
sbb
les
scas
mov
andb
hlt
xor
inc
jnp
or
rcrb
push
push
fildll
xlat
and
and
mov
inc
xor
dec
dec
xor
rcrl
mov
xchg
mov
pushf
push
shl
cltd
test
cmc
sub
add
mov
pop
xor
in
ss
or
loop
js
ds
pop
cmc
clc
add
call
movsl
cmpl
fstpt
fs
std
xor
rep
pop
mov
ss
and
outsb
repz
push
or
sarb
fiaddl
mov
mov
and
pop
add
bound
or
pop
js
pop
insl
movsl
fnsave
inc
sbbb
pshufw
mov
mov
lods
ljmp
loopne
xlat
clc
mov
push
fs
inc
js
sarb
xchg
dec
daa
jo
incl
test
popa
mov
cs
and
cs
ds
sahf
lcall
hlt
adc
adc
je
pop
lods
hlt
and
scas
in
xor
cmp
sahf
mov
insb
and
dec
xchg
sahf
sti
mov
mov
jecxz
or
mov
push
lods
adc
arpl
inc
jmp
push
cmpl
jg
into
add
subl
rol
adc
cmpsl
cmp
mov
mov
xchg
in
je
adc
jle,pt
repnz
push
mov
or
inc
scas
jo
jno
dec
sbb
pop
test
jbe
xchg
pop
add
nop
inc
clc
adc
stos
push
adc
mov
test
push
jbe
insb
movsl
sarb
pop
cmpsb
lea
pop
adc
jp
jmp
insb
lock
fadds
jmp
and
xor
les
mov
nop
adc
xor
fwait
cmp
fldt
xstore-rng
cmpsl
andl
mov
sbb
jmp
xor
dec
scas
addb
in
enter
push
mov
sbb
xchg
mov
xchg
mov
stc
sbb
dec
xchg
pusha
cmc
in
test
mov
push
lods
fs
mov
cmpsb
iret
clc
add
cwtl
es
push
inc
ja
mov
inc
sarb
sahf
cwtl
add
push
adc
mov
loopne
mov
filds
addr16
sahf
clc
and
push
xor
test
call
les
mov
xchg
cmp
ja
in
add
or
jb
pop
add
outsb
outsl
jl
outsb
pop
xchg
add
mov
xchg
jp
ja
push
in
das
ja
inc
insb
mov
pushf
and
mov
jmp
flds
sub
mov
lret
xchg
lods
add
or
pop
push
clc
int3
mov
lock
and
outsl
imulb
sbb
ljmp
adc
push
push
jl
cmp
dec
inc
arpl
jno
jae
cmp
int
scas
enter
mov
adc
popa
rorb
adc
mov
pushf
mov
push
add
jl
popf
out
add
sbb
cmp
lods
push
xchg
xchg
pop
jge
loope
dec
push
clc
inc
out
sbb
add
fisubrl
jmp
test
sub
xchg
icebp
xchg
sarb
or
sub
jne
xorl
mov
cs
rorb
cs
out
lock
inc
sbb
pop
xor
pop
pop
mov
fdivl
repnz
inc
mov
lods
les
cli
xchg
aam
fld
xchg
icebp
sub
fwait
into
or
arpl
movl
sub
or
mov
xchg
mov
mov
mov
sub
ljmp
or
and
cltd
cs
jbe
and
repz
clc
mov
mov
xor
pop
js
aad
inc
inc
inc
ret
fmull
mov
cmp
xor
xlat
sbb
je
testl
fs
inc
push
daa
rcll
imul
test
mov
cmp
test
cld
ss
std
rcr
pop
sar
cmp
add
mov
adc
pop
sub
pop
sbb
sub
lods
and
shlb
loope
xor
inc
push
addl
add
ds
rolb
or
stos
rcrb
push
lock
dec
es
jecxz
loopne
adc
mov
or
sbb
pop
addr16
add
aas
jmp
shll
out
lret
test
mov
add
and
and
ficoms
mov
cld
lods
aas
loop
mov
or
adc
clc
jmp
mov
lock
jp
test
add
xchg
jle
insb
xor
lock
in
sti
jb
nop
pusha
addb
and
test
mov
adc
mov
pop
xchg
shlb
push
pop
pop
dec
aas
mov
sub
shll
sbb
cmc
inc
xchg
pop
fsubs
fsubl
test
sahf
xchg
clc
fwait
cmp
cmp
mov
jmp
and
add
stos
arpl
inc
mov
mov
mov
xchg
mov
arpl
mov
stos
jbe
xor
popf
sub
push
lock
pop
scas
cs
inc
ss
hlt
xchg
jmp
test
and
inc
call
std
push
push
ret
jmp
rolb
cmp
push
push
sbb
or
sub
push
in
clc
pop
inc
imulb
pop
xchg
inc
pusha
mov
stc
call
pop
popf
aaa
jnp
push
loopne
pop
adc
push
sub
lods
dec
or
adc
mov
push
rorb
mov
push
rorl
adc
jnp
je
add
dec
inc
popa
cwtl
cmp
sub
inc
mov
mov
mov
xor
add
imul
mov
repnz
dec
jmp
sub
call
jl
sbb
add
xchg
fbld
sbb
dec
ljmp
pop
add
and
test
and
int3
and
sub
fcoms
mov
and
nop
clc
sbb
push
movsb
icebp
add
cwtl
jno
rcrl
loop
dec
ljmp
insl
es
add
and
jnp
cwtl
cmc
dec
movsb
jmp
inc
sbb
std
push
test
mov
or
cmp
aas
arpl
sahf
sub
sahf
arpl
xchg
push
push
in
outsb
add
test
clc
popa
cwtl
jge
mov
out
cmpsb
or
push
arpl
adc
pop
cmp
add
ss
ror
or
mov
in
jbe
fcmovnu
mov
cli
cmpsb
xor
movsl
or
jb
movsl
je
pop
das
xchg
into
push
mov
or
fcmovnb
push
popa
pop
and
adc
sahf
sbb
add
push
add
int3
insb
push
pushf
icebp
mov
lret
std
push
mov
mov
aaa
out
mov
cmp
cmc
ljmp
adc
sub
cs
xchg
mov
sub
je
mov
jl
push
test
mov
dec
jecxz
cmp
mov
pop
or
test
movsb
insb
pop
aaa
aaa
mov
addb
jb
pushf
inc
xchg
adc
cld
cmp
dec
roll
movsb
les
push
out
lret
mov
inc
sti
pop
or
push
sbb
xor
dec
add
lret
cmpsb
aaa
push
inc
mov
insl
std
lea
popl
jmp
xor
clc
std
dec
loope
cwtl
or
aas
mov
xor
test
scas
mov
sahf
sbb
dec
loope
cwtl
add
out
lret
mov
imul
jae
jecxz
jb
loopne
outsl
sbb
popa
js
push
push
fsubrs
xor
clc
lock
test
dec
loopne
mov
ss
pop
jo
les
ficoml
mov
addb
pop
adc
popf
aad
mov
cwtl
sub
test
aam
ds
add
and
int3
out
stos
push
inc
inc
xor
and
lcall
jge
adc
jno
jmp
cmp
sar
test
adc
sub
and
clc
cmp
leave
jge
mov
out
test
jmp
jno
shrb
mov
loop
mov
jmp
imul
or
lea
jge
les
xlat
sub
mov
jo
mov
xlat
inc
lret
and
dec
mov
mov
adc
rcr
sub
arpl
push
imul
and
mov
push
int
stos
jbe
pop
mov
jecxz
add
gs
add
lock
mov
roll
icebp
or
outsb
pop
lret
rolb
aam
rclb
mov
mov
adc
ja
inc
cmp
sbb
fucomip
add
loop
popa
xor
insl
jl
push
jne
lcall
out
push
cmp
inc
mov
jg
or
ret
sub
adc
stos
lret
add
cmpsb
or
pop
adc
fsubr
cmp
mov
jge
push
mov
sahf
mov
cs
andl
jle
ss
cmp
push
repnz
jle
mov
xor
push
xor
testl
adc
cmc
or
dec
sub
jl
int
loopne
lahf
add
call
mov
xor
aam
push
cmp
fld
adc
pop
xchg
in
in
repz
dec
cli
push
ds
or
enter
push
xchg
fsubs
add
loope
out
jp
or
in
ficomps
inc
and
xor
sbb
call
in
add
push
std
rclb
add
sub
sti
ret
xchg
out
cli
cli
das
std
mov
pop
add
loopne
aam
and
pop
data16
adc
in
fwait
shll
adc
adc
cmpsb
lahf
push
mov
mov
jl
mov
int
push
popa
mov
mov
fsubl
test
cld
sarb
jmp
jns
xor
push
push
jg
ret
jae
mov
mov
push
xchg
cmp
inc
jl
pop
mov
sub
xchg
sbb
sahf
or
aam
inc
mov
scas
sub
rcrb
mov
inc
sbb
lock
inc
shlb
mov
jno
in
dec
mov
or
mov
push
test
pop
leave
cwtl
add
addr16
shrl
int
arpl
push
inc
scas
and
mov
jge
and
scas
mov
push
rorb
loope
imul
aam
xchg
cwtl
and
cmc
loope
xor
addr16
into
test
rolb
pop
ret
aaa
movsl
or
ficoms
inc
jae
scas
inc
loop
inc
add
arpl
data16
lret
mov
cmp
and
mov
push
das
sahf
or
in
dec
mov
movsl
sbb
push
std
or
inc
loop
jae
test
mov
adc
xor
ds
es
sti
adc
jo
cmp
ret
inc
dec
pop
es
cmc
loop
adc
push
cmp
xchg
pop
clc
rorb
and
ret
mov
push
adc
daa
adc
xchg
push
mov
jo
xor
bound
inc
mov
mov
roll
cld
and
sbb
cmc
xchg
jbe
mov
mov
test
dec
sbb
popa
or
sub
cltd
cmp
inc
ret
hlt
add
out
lcall
push
nop
or
lock
mov
cmpsl
inc
repnz
mov
mov
push
out
dec
cli
mov
cmp
push
pop
push
mov
jg
movb
test
stos
and
dec
cmp
sbb
hlt
add
jae
add
dec
push
shl
xor
adc
adc
pop
clc
fsubrl
jmp
pop
mov
shlb
xchg
popf
add
fistps
pop
sbb
aas
je
dec
pop
sbb
in
shll
jnp
dec
jl
loope
mov
and
ret
xchg
aad
pop
pop
jge
jecxz
inc
mov
scas
in
cltd
push
adc
xchg
push
out
cwtl
cltd
mov
je
cmc
pop
xor
cmpsb
out
cmp
adc
mov
xor
and
icebp
mov
pop
push
push
xchg
sbb
inc
andb
movsb
dec
inc
or
xchg
loope
or
leave
inc
scas
pusha
push
inc
sub
clc
cli
das
lods
fmull
loope
xorb
mov
scas
cmp
jecxz
push
mov
push
rcrb
xchg
sbb
insb
ss
add
sbb
nop
lcall
hlt
fwait
cmp
pusha
mov
push
cmovb
std
je
cmp
jle
jo
dec
daa
jno
mov
mov
xchg
pop
cmpsb
ja
sbb
sbb
out
xor
pop
lods
sbb
ss
and
cmpsl
push
pop
mov
std
stos
fsub
repz
cmpb
xlat
popl
push
pop
xor
push
sbb
push
pop
jle
ret
cwtl
mov
jne
test
add
cmpsl
orb
mov
stos
jae
scas
in
xchg
addr16
mov
cmp
ret
push
hlt
cmp
or
subl
mov
jo
lea
sbb
dec
subl
pop
pop
sbb
push
mov
mov
gs
push
out
push
pop
push
mov
jle
inc
bound
je
sub
mov
add
repz
adc
mov
sub
inc
pop
rclb
fimuls
xchg
adc
xor
pushf
mov
mov
cmpsb
pop
push
and
add
cwtl
inc
add
das
fcomi
mov
push
adc
mov
cld
push
mov
fcomp
cmpsl
mov
js
xchg
add
sub
add
cmp
fucompp
adc
shr
mov
jbe
sbb
push
xor
inc
mov
mov
mov
out
and
dec
lea
stos
inc
daa
xor
pop
clc
or
ret
pop
add
fucomip
stc
sbb
hlt
and
mov
push
push
movsl
adc
push
fdiv
ret
imul
inc
add
or
sbb
add
ss
lock
movsb
icebp
or
arpl
int
mov
fiadds
cmc
sarb
fprem1
mov
popf
hlt
mov
out
fildl
mov
roll
in
inc
in
xchg
push
clc
xchg
ret
mov
fsubs
adc
lahf
pop
movsl
xchg
pop
jmp
xchg
stc
xchg
enter
xchg
xchg
repnz
and
sahf
jo
and
and
fcmovne
xchg
pop
ljmp
gs
cmp
jo
inc
sahf
mov
and
jbe
in
sbb
insb
lods
jp
aam
and
pop
sbb
les
movsb
aam
lds
mov
lods
fcomps
decb
jl
mov
scas
fxch
loop
mov
lock
jge
and
or
pop
popa
cwtl
adc
or
dec
push
add
aad
clc
fs
inc
cli
stc
mov
out
hlt
mov
aad
inc
sub
js
imul
cmpsb
push
aam
fildll
jae
int
les
mov
inc
bound
scas
jmp
stos
mov
jo
shl
mov
repz
ret
push
mov
cmp
call
aad
dec
std
mov
xchg
jl
cmpl
xor
xor
into
out
cwtl
lret
int3
mov
push
sub
and
ja
inc
aam
sub
and
mov
je
sbb
push
dec
xchg
bound
enter
je
sub
sti
fimull
scas
idiv
or
or
adc
mov
and
push
int3
aam
gs
test
cmc
mov
mov
addr16
push
mov
test
dec
cmpsl
and
pop
sbb
mov
adc
xor
outsl
in
sbb
add
loopne
fsubr
popf
sub
dec
iret
outsl
cmp
dec
inc
push
sbb
push
push
imul
sub
cmp
int3
cltd
sahf
cli
add
stc
rcrb
sbb
aas
fdivrs
pusha
lods
mov
mov
data16
pop
xchg
das
rclb
test
mov
dec
push
cltd
das
adc
add
imul
or
jg
adc
or
or
lods
loop
cli
orl
mov
clc
sbb
ds
mov
sbb
mov
decl
mull
cmp
les
lcall
mov
push
movsb
cwtl
cmpsb
popa
lea
jnp
jno
bound
mov
jecxz
cmp
push
jns
jl
jp
das
xchg
and
jmp
sbb
xlat
cld
mov
xor
lods
push
enter
ret
cmp
cld
imul
addr16
bound
sbb
mulb
insb
mov
negb
js
mov
les
mov
or
icebp
mov
mov
mov
cmc
orl
jns
in
and
push
je
fistl
test
std
test
xor
cmp
scas
mov
pusha
sbbl
pop
dec
lret
adc
pusha
test
stos
movsb
and
mov
ficompl
outsb
mov
xor
jp
push
loope
xor
mov
int3
dec
push
mov
repz
fcmovnu
bound
inc
mov
fdivs
les
push
cmpsb
or
lcall
dec
and
lods
and
fmull
int
lock
lds
jo
outsb
mov
movsb
lahf
popf
push
xor
dec
out
inc
adc
ret
xchg
loopne
out
lock
rcl
pop
fs
rorl
je
ret
movsl
pop
or
shlb
inc
dec
loopne
inc
lods
or
push
jo
jl
cmp
rcrb
and
call
dec
rolb
js
pusha
adc
leave
add
push
repz
mov
inc
loopne
jge
lahf
fstl
add
jns
mov
sbb
daa
push
lret
adc
sub
loopne
movsl
adc
cli
scas
leave
adc
adc
and
mov
mov
pop
outsb
in
ljmp
cmp
fistpl
inc
mov
gs
cmp
mov
js
scas
popf
call
loopne
cmp
mov
lock
cmp
adc
xchg
push
ds
lahf
xor
rcrl
sbb
movl
mov
mov
and
or
pusha
fdivr
dec
test
jmp
sub
into
mov
fisubrs
std
dec
mov
cmp
lods
icebp
aad
arpl
mov
subb
sub
push
pop
outsl
jge
add
dec
insl
mov
subb
mov
outsl
jle
sub
cmp
push
sarb
mov
dec
nop
and
rorb
fmulp
enter
fwait
rol
movsb
enter
aam
std
pop
jae
pop
xchg
adc
popa
cmp
pop
jae
clc
inc
cld
rolb
or
sub
jnp
out
insl
mov
out
ffreep
aad
xor
and
jge
rol
daa
jle
inc
loopne
cmp
xchg
mov
add
mov
push
enter
adc
out
in
mov
pop
sub
test
inc
mov
push
clc
inc
xchg
jo
push
imul
fiaddl
fs
cmp
aaa
add
data16
testl
test
dec
mov
add
stc
jne
fucomi
push
cmpsb
sti
pop
or
xchg
shlb
push
jnp
dec
and
jg
or
cmpsb
pop
xor
loopne
nop
jge
add
mov
push
pusha
cmp
ljmp
adc
shlb
lea
cmp
cmpsb
ds
es
dec
pop
add
pop
loope
xlat
das
lret
pop
add
insl
adc
arpl
imul
push
pushf
jg
std
adc
out
arpl
push
mov
out
test
mov
mov
mov
lea
jge
fldenv
mov
mov
jo
outsl
sbb
pop
mov
push
hlt
ret
and
loop
cmp
add
aad
sete
lock
mov
adc
sbb
cmp
mov
or
fnstcw
ds
movsb
mov
hlt
mov
push
jle
std
ss
mov
mov
mov
mov
call
add
or
leave
push
push
mov
jno
add
adc
xchg
push
jne
pop
mov
lods
jmp
fsub
jmp
stos
push
jno
push
test
pushf
rcll
lcall
rcrb
jb
add
jbe
or
push
mov
divb
and
out
xor
sub
sbb
adc
loop
cmpsl
imul
jne
fimuls
add
inc
sbbl
loope
lahf
test
mov
inc
xor
fsubrs
aad
lock
push
in
das
adc
insb
mov
inc
xchg
cmp
xor
outsl
jns
sarb
add
lods
and
imul
rorl
in
sarl
mov
lret
ret
adc
sbb
cmpsl
cmp
xchg
adc
jg
insb
sub
dec
not
pop
cmp
add
loopne
insb
add
outsl
in
js
mov
or
sbb
fisttpll
add
sbb
cwtl
adc
adc
xchg
dec
in
fwait
cltd
dec
loope
pop
rorb
pop
psraw
fcmovu
js
addl
lock
lods
stos
push
xor
sub
push
sub
pop
pop
je
sub
mov
cmpsb
xchg
sbb
adc
add
xor
test
ret
adc
mov
ret
fldcw
jbe
out
sar
dec
daa
js
and
xor
shlb
stos
sbb
push
dec
outsl
jno
push
call
aam
into
arpl
movsb
sub
inc
mov
xchg
out
dec
jg
pop
int
push
movsb
in
stos
addb
jl
cmp
out
lret
std
xchg
pop
ret
movsl
pop
mov
vmovups
shll
iret
pusha
mov
pop
cmp
hlt
lods
pop
lds
fldl
mov
ljmp
mov
bound
adc
sub
sub
inc
gs
shll
das
stos
jmp
jle
mov
in
pop
popf
ja
pop
aas
sbb
fmuls
push
data16
rol
not
xchg
inc
adc
mov
movb
mov
xchg
mov
and
cmp
cs
bound
xor
and
loopne
gs
jne
mov
add
dec
add
or
or
imul
adc
and
cmp
sub
push
mov
jb
stos
aaa
mov
fcoml
pop
adc
ss
aaa
push
inc
xchg
test
or
lret
test
and
aam
xchg
mov
loopne
jns
cmpsb
out
adcb
jecxz
aas
jmp
add
and
insl
mov
add
add
inc
push
loop
popa
movsl
ret
sub
mov
or
cmp
dec
popf
fs
cs
sbb
pop
arpl
xchg
add
mov
dec
aad
filds
mov
shl
cs
dec
xor
sbb
xor
push
cmpsl
test
loop
arpl
pop
mov
jp
xchg
push
inc
icebp
dec
or
mov
aaa
in
xchg
jb
adc
mov
add
pushf
sub
lcall
add
or
cwtl
adc
pop
mov
hlt
cmp
push
dec
sub
sbb
sub
mov
jp
and
dec
jnp
sbb
push
outsb
sub
xor
sahf
or
les
scas
iret
jp
orb
sub
push
mov
lods
loop
dec
out
mov
in
sub
cmp
negb
sub
fcoml
pop
inc
mov
and
pusha
xor
sub
push
and
adcl
jge
out
js
pop
or
push
clc
sub
xchg
mov
jns
mov
xor
subl
mov
mov
pushf
dec
mov
push
push
lret
mov
push
in
jbe
cmp
and
repnz
hlt
push
cmp
sbb
lock
mov
ret
movsb
inc
loop
cmp
adc
add
jo
pop
adc
and
xor
js
popf
mov
push
lahf
inc
js
adc
pusha
mov
mov
inc
js
popf
inc
test
shrb
or
jmp
les
mov
push
ljmp
out
mov
ss
cmc
shlb
les
cli
dec
pushf
repnz
mov
jne
lahf
mov
cld
inc
xor
push
pop
into
fstps
jno
jle
push
xchg
icebp
adc
faddl
jl
and
cvtps2pd
xchg
inc
clc
lcall
iret
into
pop
mov
movsb
in
or
sub
stc
jg
test
pop
insl
push
stos
cltd
insl
repz
dec
xchg
jg
ljmp
pop
sub
jg
cli
jb
lods
jmp
enter
or
push
imull
enter
stos
push
inc
lds
xor
push
test
xchg
xchg
js
and
test
stos
in
ljmp
jg
cs
adcl
dec
dec
rclb
mov
xchg
stos
xchg
push
and
jp
lea
insl
popf
shl
jp
jge
ljmp
or
mov
jo
in
addb
add
mov
mov
test
adc
lods
rcrl
pop
add
cmp
inc
or
add
inc
or
xchg
pop
cmp
outsl
adc
or
and
xor
hlt
jb
int
adc
xchg
sahf
pop
xor
shrb
mov
dec
jae
shlb
cmpsl
dec
mov
or
push
in
stc
outsb
push
mov
sarl
xor
or
adc
in
lahf
fwait
sbb
pop
pop
jno
inc
sbb
pop
sbb
lods
and
aad
loop
and
ret
scas
in
cmp
mov
dec
jge
aas
les
push
jo
dec
loope
scas
lock
jl
inc
orl
ficoml
or
shr
xchg
sahf
fwait
icebp
sub
sbb
xor
push
pop
enter
add
call
imulb
xchg
mov
push
cmpsl
mov
inc
dec
jno
rorl
adc
int
mov
mov
xchg
mov
dec
ret
out
xlat
push
add
adc
mov
sub
xor
int3
add
or
and
mov
fldt
xchg
dec
xchg
jae
loop
sbb
roll
inc
popl
and
adc
dec
fsubrl
outsl
and
ret
inc
push
dec
inc
roll
xchg
fisubl
lods
dec
dec
pop
icebp
test
shll
xchg
sti
cs
add
js
iret
mov
inc
mov
or
xor
sub
or
sbb
push
filds
pop
sbb
or
inc
stc
xor
ds
adcl
imul
jg
pop
int
lret
sub
mov
jl
mov
cmc
add
nop
in
fmull
out
sbb
and
mov
cld
lea
lods
shrl
jo
dec
and
mov
xor
lret
dec
aam
ffreep
repz
dec
cmp
in
mov
idiv
lea
aad
out
roll
repz
insb
mov
cmc
inc
sub
jl,pt
fidivrs
and
loopne
adc
rol
pop
dec
jp
rcrb
arpl
jmp
test
imul
lock
cmc
repz
fsts
dec
sub
cmc
jbe
cmp
pop
add
xor
in
mov
fldcw
or
mov
mov
out
movsl
xchg
lahf
xor
xchg
mov
adc
add
sub
sti
mov
adc
mov
cltd
mov
push
movsb
xchg
dec
adc
pop
mov
fdivl
jno
inc
ret
sbb
or
cmp
adc
mov
push
aam
test
in
and
shl
push
pop
xor
jnp
and
and
test
cmp
xor
loope
lods
mov
jne
lds
adc
insb
or
jp
outsb
cmp
push
ret
ror
ljmp
jno
ss
pop
pop
cmpl
lds
cmp
and
sub
or
push
sub
in
pop
push
aaa
insl
push
adc
inc
jbe
lret
sbb
cli
mov
mov
in
mov
lret
add
call
pop
mov
scas
pop
jl
loop
sbbl
xlat
loopne
rorl
push
sbb
mov
dec
pop
xor
test
es
mov
insl
aaa
movsb
and
nop
jnp
jnp
add
imul
jge
test
mov
push
sbb
pop
push
mov
aad
stc
inc
jbe
dec
xchg
mov
imul
push
push
mov
xchg
shll
jp
mov
dec
test
dec
mov
loop
add
and
push
out
push
pop
pop
sbb
cmc
xorb
pusha
incb
mov
icebp
sarb
std
addb
sub
sbb
iret
add
pop
enter
in
movsl
inc
fcoml
pusha
cmpsb
and
push
loop
pushf
out
dec
rclb
mov
pop
pop
push
fbstp
push
pop
inc
add
push
jb
jl
mov
and
ss
outsl
and
add
shll
sub
mov
fdivs
add
cs
push
add
jmp
mov
jp
inc
dec
int3
pop
push
arpl
and
fnstcw
xor
push
inc
dec
sub
add
das
add
and
add
xchg
mov
sbb
push
mov
ss
lock
outsl
push
cmp
push
sbb
pop
cld
pop
or
push
push
push
add
push
push
inc
add
adc
dec
push
fdivrp
fnstenv
jmp
loop
lods
lds
dec
in
inc
adc
jo
cmc
aam
stc
push
push
jg
aad
loope
test
fstpt
adc
and
fdivs
lahf
jge
outsb
les
incl
ret
inc
loop
mov
mov
or
adc
fdiv
and
pop
or
rorl
push
sub
aas
adc
xchg
aaa
cmp
add
addl
test
in
jne
lea
add
inc
adc
sub
and
dec
sbbl
out
jnp
push
arpl
dec
cmp
rolb
les
xchg
int
insb
clc
inc
push
push
sub
xchg
scas
stc
mov
xor
inc
and
mov
jnp
int
lret
pop
or
adc
mov
xchg
subb
into
daa
scas
mov
sub
in
nop
jb
cmp
mov
xchg
insl
fidivs
pop
das
xchg
lock
adc
push
mov
fwait
mov
cmpsl
xchg
pop
jp
push
sbb
add
cmp
add
popf
repnz
cmp
and
ret
sub
pop
sub
loope
in
in
mov
insl
mov
aaa
cs
jo
or
stos
mov
sbb
inc
repz
sbb
mov
and
push
xchg
pop
mov
push
cmp
out
push
daa
lcall
push
adcl
mov
and
jno
push
or
daa
adc
cmp
xchg
out
sbb
adc
push
leave
pop
lea
ja
xchg
ds
mov
imul
jnp
call
add
xchg
lods
aas
lock
pop
cmp
insl
sbb
pop
mov
adc
jl
add
in
pushaw
ja
rol
inc
es
mov
es
in
xchg
push
sbb
popa
leave
or
or
enter
push
and
push
xchg
jno
out
inc
lods
lahf
pop
xchg
mov
cmp
arpl
push
push
adc
stos
in
pop
or
rcl
loop
pop
pop
pushl
cs
mov
cmpb
sbb
add
cld
or
xlat
pop
sti
pop
or
push
cmpsl
or
sub
mov
rdmsr
inc
jg
mov
push
shll
sbb
outsl
cmp
cltd
mov
dec
subl
insb
adc
in
xchg
in
gs
idivl
jecxz
dec
test
ja
out
push
sub
mov
mov
pop
ror
pop
xor
lods
push
jns
add
imul
inc
lea
jb
mov
xchg
mov
pop
inc
cmp
sbb
ja
jno
jno
cmp
or
leave
daa
xor
or
sub
mov
lock
jbe
or
ret
cmc
cs
loop
pop
dec
mov
mov
cs
inc
adc
es
xchg
xchg
cs
imul
add
test
js
xchg
leave
sbbl
sub
jmp
mov
jnp
test
fucomi
stc
mov
xchg
stos
hlt
or
push
sub
ljmp
mov
fsubs
mov
into
jno
cmp
mov
xor
xchg
and
dec
dec
mov
jl
imul
adc
mov
mov
dec
and
adc
inc
or
inc
fcoms
add
xchg
jno
out
adc
es
ds
pop
push
cld
mov
mov
add
movsl
and
std
movntq
sbb
or
dec
es
pop
insl
xor
mov
pop
sbb
inc
jp
xlat
stc
push
or
cmp
std
in
sub
mov
pop
inc
dec
mov
out
mov
pop
lahf
cmp
adc
inc
pushl
xor
cmp
inc
in
sbb
mov
inc
test
or
out
mov
mov
mov
jg
mov
lret
xor
push
adc
ret
jmp
push
or
pop
and
insl
std
stos
ss
in
mov
push
sbb
and
pop
cmpsl
dec
pop
inc
and
js
rclb
xchg
mov
xchg
jns
jns
dec
std
adc
mov
add
mov
ret
jo
cmp
cmpsl
sbb
aas
nop
dec
jnp
push
and
popf
sti
nop
xor
jg
add
test
fwait
pop
loop
pop
out
out
icebp
in
mov
addl
mov
int3
pop
jnp
js
dec
rcr
mov
mov
push
add
inc
adc
mov
xchg
push
push
adc
adc
and
sub
xor
fs
scas
mov
xchg
fistl
orl
ja
js
pop
mov
imul
aam
cli
mov
ret
pusha
orl
pushl
xor
pop
pop
sub
dec
mov
inc
lret
add
add
faddl
subl
shll
lods
enter
adc
shll
test
test
push
add
adc
shl
push
push
jb
insl
mov
sub
mov
clc
cmc
ss
or
es
movsb
push
fisttpl
rcrl
add
cltd
adc
push
pop
mov
jl
jno
add
dec
inc
shr
aam
or
fdivrs
push
sub
sahf
and
int
add
cltd
sahf
cmp
pop
push
pop
imul
stos
cmc
cs
xchg
fxch
and
outsb
jo
mov
sbb
add
jo
add
jne
fbld
jnp
mov
adc
add
jno
loop
dec
lds
sub
sahf
mov
inc
xor
cmpsb
fidivrl
inc
leave
lahf
stos
xchg
jne
bound
int3
mov
call
rep
daa
fisubl
stos
pop
or
add
jbe
jle
mov
shr
cmpb
mul
lcall
je
rcrl
xchg
pushw
pop
inc
adc
pop
pushf
jmp
add
sahf
int
rolb
insl
push
xchg
sub
arpl
gs
std
leave
dec
inc
nop
imul
scas
xchg
adc
jecxz
outsb
xor
cs
in
push
cmc
sub
jbe
inc
pop
fsubrs
push
or
mov
lds
cmp
das
add
in
or
pop
mov
test
xor
cmp
jnp
jb
idiv
cmp
jle
xchg
jnp
scas
popf
jbe
in
outsl
jb
aas
cmp
sub
les
push
ss
mov
push
int3
add
dec
lock
or
inc
sub
fs
mov
sbb
test
push
mov
pop
push
dec
mov
sahf
sub
push
mull
add
movl
cli
outsl
sbb
inc
shll
movsl
cs
ret
dec
test
cs
sub
push
pop
icebp
add
mov
cld
mov
fadd
orl
push
xlat
push
stos
cli
mov
and
outsl
fisubl
int3
rcl
clc
pushf
jecxz
sbb
loope
or
xor
xchg
add
jg
lea
aam
popf
add
les
out
mov
xchg
push
inc
add
adc
or
mov
scas
imul
rorb
stos
ret
scas
movsb
call
mov
stos
dec
stos
int
ja
mov
xlat
lock
and
clc
lock
fdivrs
and
out
sbb
sbb
jns
sbb
icebp
mov
adc
xlat
insl
push
add
ret
adc
addl
and
mov
xchg
xor
cmc
xor
mov
bnd
dec
xchg
in
pop
imul
sbb
dec
dec
imul
adc
mov
faddl
movb
test
test
aad
insb
ret
fldenv
cmp
mov
aas
call
and
sub
es
into
lds
add
loope
stc
daa
fnstcw
or
outsl
sub
addr16
in
nop
clc
mov
outsl
cmpsb
out
sbb
orl
dec
push
sbb
cmpsb
add
lret
add
xor
scas
jb
dec
lods
pop
xlat
sub
ds
pop
shrl
or
mov
adc
mov
test
ja
xor
ss
loop
mov
popf
jmp
aam
clc
cmp
xor
jae
push
pop
test
xchg
mov
arpl
int3
push
leave
aam
inc
ss
jo
adc
popf
xor
mov
inc
iret
mov
xchg
xchg
dec
ret
inc
xchg
mov
xor
fstp
movsb
sbb
mov
xchg
mov
pop
jmp
popa
xor
lret
push
cmp
push
xchg
rolb
add
fdivrs
shl
mov
popa
das
outsb
subl
push
push
dec
dec
bswap
andl
dec
je
inc
pushf
push
rorb
sub
push
mov
and
fwait
xchg
xor
je
clc
and
add
xlat
ret
lret
dec
mov
arpl
mov
insb
mov
jb
orb
test
cmp
movsb
add
push
test
cltd
mov
xchg
add
rorl
lahf
repz
cmp
sbb
mov
sbb
or
mov
xchg
dec
sti
pop
arpl
jmp
iret
or
dec
loop
mov
ret
je
cli
fidivl
add
xchg
movl
cld
fisubl
pusha
mov
mov
inc
xchg
daa
ss
rcrl
dec
test
add
test
mov
mul
unpckhps
xorb
aad
push
aaa
popf
pusha
push
lods
cmp
js
xor
mov
pop
gs
xor
daa
lahf
hlt
push
imul
jle
jmp
into
sub
or
push
xchg
sub
mov
scas
sub
add
mov
sti
stos
dec
das
push
push
imul
call
pop
add
popa
test
repnz
pop
and
dec
mov
cmp
data16
stos
xchg
pop
mov
sbb
ljmp
mov
imul
fdivrs
movsl
lahf
cld
aam
es
int
add
xchg
ret
jae
and
pusha
addr16
jo
jns
mov
mov
mov
icebp
xchg
pop
int
or
rcrl
pop
cmpsl
inc
xchg
rol
push
sbb
dec
or
loop
mov
gs
cltd
xchg
les
addr16
xchg
shl
cmp
push
inc
out
rorb
lods
push
icebp
and
jmp
sub
mov
test
aad
pushf
arpl
push
loop
stos
push
mov
lret
lea
mov
jno
push
mov
mov
mov
and
mov
pop
loop
fnstsw
and
out
ja
into
mov
cmp
xlat
imul
inc
cs
inc
inc
out
data16
pop
lea
sbb
int
xchg
clc
push
xorl
push
fscale
popf
adc
in
inc
xlat
lcall
clc
add
cld
dec
xor
jge
outsb
cmp
dec
jns
mov
shl
test
or
xor
mov
lock
pusha
inc
xchg
ret
inc
xchg
sub
mov
adc
sub
loope
std
jmp
jge
adc
adc
int
cmpsb
out
mov
mov
test
bound
mov
adc
shll
xor
aas
adc
scas
mov
xchg
xchg
or
add
hlt
xorl
or
cmp
push
pop
sbb
dec
cmp
pop
sbb
lock
in
es
pop
jmp
or
jmp
xor
mov
sbb
mov
pop
aaa
stc
iret
movsl
push
jne
and
test
sbb
inc
push
xor
std
inc
fistps
into
sbb
jb
xor
dec
and
xchg
test
popa
jno
ret
fimuls
into
inc
lahf
jg
stos
cwtl
push
and
push
add
test
jo
push
cmp
leave
or
push
xchg
mov
pop
popa
leave
sbb
pushf
sbb
decb
ss
out
scas
icebp
jno
or
jp
scas
pop
je
outsb
aad
lea
outsl
bound
adc
sub
ds
data16
fsubrl
mov
movsbl
push
out
ss
cmpsl
dec
pop
aam
rorb
test
mov
inc
push
mov
add
jg
repnz
leave
pop
lods
out
and
jmp
xchg
scas
mov
sbb
mov
xor
mov
xchg
mov
popf
mov
lret
sbb
cmp
movsl
mov
out
pop
aam
fs
iret
popa
inc
mov
loop
sub
adcb
sti
sbb
cltd
aas
call
fidivs
clc
xchg
mov
xchg
push
add
jne
aad
mov
gs
mov
in
mov
jb
cmp
lock
adc
cmp
dec
out
clc
arpl
sahf
ret
int3
out
test
dec
add
lock
sti
shlb
divb
lea
push
mov
out
sbb
idiv
or
fistl
jno
scas
inc
jmp
jecxz
push
mov
scas
push
ret
insb
loope
pop
cwtl
imul
and
dec
test
mov
ja
xchg
xchg
push
cld
mov
dec
jmp
loopne
out
fbstp
sbb
enter
adc
mov
push
decl
aad
cmc
sbb
pop
and
in
sbb
cmpsl
rorb
mov
inc
push
gs
sub
adc
mov
add
mov
iret
pop
cld
inc
xchg
xor
adcl
ja
jne
inc
popa
test
sbb
jo,pt
mov
outsb
push
ret
rcll
add
test
or
sub
arpl
mov
add
fistpl
push
xchg
cmp
out
fiaddl
inc
jl
push
lods
and
test
stc
fbld
call
mov
mov
adc
push
jae
add
cli
xor
rcrb
scas
fwait
and
dec
mov
insl
pop
pop
cmp
add
cmp
xor
cltd
outsl
pop
clc
outsl
test
cmpl
movsb
decb
rolb
jl
mov
enter
jge
cld
sbb
pop
imul
mov
stc
inc
jne
mov
mov
mov
pop
pop
mov
enter
data16
dec
sub
mov
jg
es
sbb
sub
sbb
push
jo
xchg
inc
test
scas
stos
sbb
ret
shlb
into
pop
and
mov
dec
dec
pop
dec
jne
xor
and
enter
add
es
mov
jg
fmulp
out
adc
das
movsb
adc
xchg
outsl
jg
cld
insb
add
in
mov
xor
xchg
pop
adc
mov
fbstp
sub
xor
or
scas
lds
loop
pop
loope
mov
lods
test
pop
cmp
repz
sarl
mov
sub
xlat
or
dec
push
pop
daa
ss
stos
push
outsb
adc
sbb
jns
sub
jns
int
sub
lods
push
out
jmp
mov
adc
loopne
xorb
and
dec
dec
and
lds
or
lock
push
ss
sbb
mov
xor
in
rorl
push
clc
sbb
and
insb
or
inc
push
fmull
movsb
inc
aad
out
mov
mov
xchg
jmp
sbb
xchg
jbe
nop
adc
dec
and
and
sub
test
lea
sub
in
iret
mov
or
cmp
andl
jg
testb
jns
sbb
add
std
popf
cli
fneni(8087
mov
add
dec
jae
addr16
lahf
ljmp
loop
jle
push
mov
sbb
or
aaa
pop
loopne
popf
lret
or
rorb
jg
pop
adc
mov
enter
inc
shll
sub
sbb
arpl
mov
call
pushl
sbb
push
test
scas
push
jle
hlt
inc
mov
paddq
push
call
stos
mov
or
inc
lcall
xchg
inc
adc
add
jcxz
and
xlat
pop
and
ret
aam
mov
mov
ret
cld
mov
jmp
push
cmp
pop
cmp
mov
data16
xchg
add
adcl
hlt
insb
sub
adc
adc
fsts
dec
je
scas
and
and
js
add
ss
call
sub
in
add
mov
cmc
push
bound
push
sarb
ret
loope
pop
inc
cmc
add
incb
pop
cmpsb
aam
inc
sbb
cmc
sub
shll
ss
sub
xor
xor
inc
movsb
inc
sbb
cs
lahf
xlat
sar
sbb
ss
clc
mov
clc
cmpsb
dec
mov
outsb
push
andl
xor
cmpsl
das
cli
cmp
std
jl
pop
add
lock
mov
or
test
dec
cld
ret
mov
mov
and
addr16
add
cmp
call
push
aam
mov
xor
loope
pusha
iret
out
sbb
and
mov
jge
ret
xchg
adc
ljmp
jl
fwait
ds
pop
sub
adc
xor
dec
les
je
adc
jl
loopne
cli
into
cmc
outsb
and
aaa
dec
lret
lea
in
push
add
sbb
scas
mov
and
in
outsb
das
pop
stos
hlt
sub
movb
mov
pop
jmp
sbb
jge
pop
std
and
push
loop
sbb
xchg
pusha
xor
out
divb
aas
mov
repz
or
push
cmp
aad
xchg
rorl
push
add
or
aas
ds
repz
inc
jo
lea
adc
jg
sub
or
incl
lcall
cmp
imul
mov
mov
cmpsb
js
xor
aad
lea
cli
pop
ja
xor
enter
in
jle
test
xorl
push
sbb
add
stos
add
fucomi
addr16
sbb
movb
push
pop
cmc
shl
add
mov
lods
pop
pop
test
icebp
sbb
in
mov
xor
and
sbb
or
xor
outsb
push
lcall
sahf
test
decb
push
mov
lock
pusha
loopne
std
pop
or
in
sbb
mov
mov
aas
lods
sti
pop
fsubrp
mov
mov
daa
jno
or
lock
and
loope
pop
sub
jmp
or
xor
idiv
enter
lock
sahf
or
ret
adc
jbe
fildl
dec
nop
shlb
push
sbb
jp
dec
mov
out
dec
xchg
add
and
es
pop
mov
hlt
clc
test
xchg
jp
xlat
xor
push
pop
cmpsb
repnz
scas
xchg
dec
arpl
push
lods
fdivl
xor
sub
add
shrl
es
cmpsl
adc
cli
dec
imul
mov
mov
fimull
and
js
or
fisubs
into
dec
jae,pt
dec
jae
jb
pop
jo
adc
aaa
mov
imul
movsl
clc
insb
std
test
cld
fs
add
test
push
loop
pop
xor
adc
aad
pop
jle
jge
jns
cmp
add
inc
test
out
jecxz
aam
jnp
mov
pushf
or
cli
mov
cs
adc
fists
je
xchg
es
ljmp
add
lods
das
sar
cs
bound
jecxz
xchg
jne
or
pusha
xchg
stos
cmpsb
test
mov
push
pop
in
jns,pt
or
add
or
popa
push
xchg
mov
cmp
pop
stc
mov
mov
xor
cmp
pop
in
sub
mov
xor
and
push
stos
test
aaa
adc
inc
lods
inc
iret
jle
or
nop
insl
lock
rcl
pop
jp
adc
push
adc
or
loop
dec
sarb
inc
sbb
and
or
jne
cmc
mov
orl
sbb
adc
and
cwtl
mov
or
jns
ljmp
xchg
sbb
push
and
sbb
mov
cwtl
jp
cld
sbb
fsts
push
fstpl
or
mov
jl
jnp
pop
stc
xchg
cli
imul
iret
mov
cmp
es
add
clc
dec
cld
xchg
outsl
mov
mov
ja
xchg
lcall
stos
add
iret
leave
icebp
and
inc
iret
rorl
pop
xor
sbbb
loopne
daa
pop
sbb
mov
js
cmp
sbbl
fsubl
nop
scas
cmpl
dec
rcrl
xchg
cld
or
loopne
lock
pop
pushf
push
mov
or
mov
js
mov
pusha
mov
jb
adc
popa
sti
pop
and
dec
in
icebp
pop
xchg
loopne
adc
or
inc
mov
enter
adc
jnp
add
dec
and
stos
push
xchg
mov
mov
shll
jmp
adc
add
aad
cmp
and
jmp
push
in
xchg
repz
mov
scas
gs
jns
fiadds
mov
mov
js
sbb
sub
ficoml
xor
ds
loope
stc
int
xlat
cmp
les
inc
cmp
dec
mov
shll
loop
jmp
les
sbb
push
aaa
rcl
imul
fsubs
test
clc
mov
loop
ja
push
adc
ja
mov
fisubrs
ds
xor
iret
rorb
fstpl
jecxz
pop
jnp
sub
filds
push
pop
push
xchg
push
lret
out
jnp
jp
add
in
adc
xchg
pop
cltd
ljmp
stc
js
pushf
cmp
pop
inc
jmp
pop
cmp
rorl
push
jnp
fwait
ljmp
xor
mov
pop
repz
adc
sarb
roll
lock
cmpsb
loop
pop
xchg
bound
and
shrb
and
lock
add
aas
outsl
dec
xor
std
add
xchg
aaa
inc
scas
jecxz
and
pop
jne
test
lret
push
sub
and
mov
adc
movsl
outsb
xor
dec
cmp
lcall
xor
adc
cmc
test
adc
sbb
or
sub
mov
push
jb
mov
cmp
jg
add
pop
pop
inc
imulb
push
nop
jbe
orb
andb
data16
aas
ljmp
outsl
or
mov
xchg
inc
data16
adc
sbb
fidivrs
jbe,pn
sbb
inc
fildl
hlt
push
and
lret
sub
mov
and
push
or
mov
aad
or
stc
mov
inc
insb
xor
jbe
jmp
mov
mov
js
ja
or
ja
js
add
pop
pop
pop
inc
push
imul
mov
inc
adc
call
hlt
lock
cwtl
sub
inc
fwait
or
ret
cmp
xchg
in
add
popa
mov
fists
ret
out
lret
sahf
xor
jg
test
or
in
mov
cmp
cmp
mov
and
sbb
jne
fadds
mov
inc
inc
add
adc
aas
push
and
dec
pop
or
and
adc
scas
or
jo
lds
push
subb
vorpd
decl
enter
mov
or
cmp
mov
mov
pushf
add
pop
sahf
int
dec
dec
pinsrw
into
mov
pop
and
or
pop
adc
fs
sub
push
push
mov
pop
loopne
mov
in
imul
sub
xchg
ljmp
sbb
inc
add
fnsetpm(287
pushf
loop
pushf
loopne
sub
lret
cmp
movsl
cmp
push
add
add
sbb
mov
cli
pop
sub
fsts
outsl
dec
cmp
cmp
dec
add
andb
mov
jge
add
ss
lea
mov
mov
push
sbb
inc
ds
mov
mov
pop
out
movsl
out
push
out
aaa
push
popa
mov
ljmp
stc
loopne
pop
je
daa
jno
cmp
shrb
mov
mov
xor
mov
sbb
icebp
inc
push
clc
cmp
stos
imul
fs
aad
jmp
sbb
ljmp
inc
pop
lods
jg
jns
push
repnz
incl
movsb
adc
shrb
test
or
rol
push
decb
push
jmp
hlt
xor
dec
rorl
push
aas
and
lods
leave
add
jle
int
test
out
mov
test
jno
fistps
push
cmp
and
fistpl
add
add
inc
mov
jl
ds
mov
cmc
sbb
add
sbbb
clc
mov
push
test
aaa
lret
cmpsl
loopne
xor
loope
sbbl
push
jle
aas
int
mov
sub
jl
add
fsub
fdiv
leave
sub
xchg
nop
mov
clc
or
negl
sub
push
addr16
addl
mov
jbe
jne
pop
mov
push
adc
popa
imull
sub
daa
aad
mov
mov
cmpb
in
push
sbb
push
jo
and
cmp
mov
aaa
add
call
scas
push
cld
cld
in
push
cltd
aaa
shll
icebp
mov
loop
xchg
sbb
or
ret
test
add
lcall
cld
ret
incb
fwait
adc
mov
push
adc
jecxz
adc
push
mov
pop
data16
xchg
xchg
jmp
jns
aas
or
ja
clc
sbb
push
mov
jno
adc
rorb
das
jle
ss
fldt
icebp
mov
sub
add
jb
cmp
push
and
inc
mov
cmpsb
xchg
popa
or
sbb
cmpsl
clc
push
scas
mov
dec
jp
xchg
test
sbb
adc
rorb
subl
mov
pop
pop
cmpsl
adc
push
or
int3
xchg
mov
rolb
out
nopl
sbb
sbb
arpl
push
push
dec
mov
les
movsl
movsl
aaa
sbb
mov
ret
xchg
inc
arpl
add
icebp
inc
je
lret
xor
xor
mov
pop
int
stos
adc
sbb
inc
icebp
es
call
negb
jl
aas
push
or
cmp
lock
push
outsl
loope
cmpl
and
add
xchg
xor
push
or
aas
sbb
and
fstpt
sbb
xchg
loop
push
call
dec
cs
adc
ljmp
clc
in
dec
push
pop
test
and
push
push
lds
lock
stos
add
push
sbb
and
hlt
les
mov
or
aas
add
sbbb
cmp
leave
addr16
stos
lret
inc
stos
mov
inc
leave
or
add
cli
add
inc
js
loop
insb
add
adc
rorw
les
and
or
dec
push
pop
jns
call
cmpsb
in
test
mov
and
and
mov
cs
inc
aas
or
aas
dec
outsb
push
sub
inc
in
aas
popf
mov
xor
or
loop
shlb
aaa
sahf
adcb
sub
sbb
aam
and
daa
test
popl
mov
ds
mov
pop
mov
mov
cmp
pop
mov
into
rcl
mov
es
clc
xchg
jge
or
xchg
popa
in
push
mov
fwait
repz
lock
sub
inc
inc
fsubrl
add
adc
jne
mov
add
fmull
js
or
cld
inc
add
cmp
loopne
jo
xor
xor
add
std
mov
mov
aad
push
lcall
mov
push
add
mov
arpl
push
jbe
shr
or
bound
movsl
jo
cmc
add
jbe
jns
sub
int
ret
jns
add
sbb
lods
mov
shll
inc
aad
cs
inc
mov
xchg
add
mov
jo
imul
les
xchg
ja
pop
ja
mov
enter
loopne
xchg
iret
dec
stos
mov
add
dec
cmp
add
adc
call
mov
cmpsb
sbb
inc
xchg
jecxz
lcall
xor
lock
aas
mov
popf
mov
mov
and
lock
adc
push
iret
ret
dec
push
xor
or
addb
xchg
dec
mov
outsl
leave
jecxz
push
add
add
jge
add
jmp
inc
mov
and
out
mov
stos
adc
int3
and
and
fnstenv
jl
out
lretw
jl
mov
mov
outsb
bound
test
rcll
int
out
xchg
inc
cmp
jle
int
or
jae
fs
add
jmp
sbb
pop
inc
jp
jp
sbb
or
insb
insb
pop
rcrl
lds
jno
inc
push
adc
movsb
cmpsb
incb
enter
rclb
xchg
jle
xchg
aas
incb
outsl
cltd
adc
inc
loope
daa
and
xchg
jb
inc
push
lock
es
cmp
outsl
stos
popf
push
sbbb
ret
mov
cs
ror
ds
pushf
popa
push
adc
movsb
push
xchg
lods
mov
aaa
xlat
int
mov
lods
adc
cmc
pop
lock
jecxz
xchg
pop
adc
inc
jae
xor
push
stos
pop
cmp
jmp
movsl
mov
add
add
jl
stc
sahf
pop
mov
mov
popa
mov
push
dec
rorl
leave
vphaddubw
mov
add
mov
das
jae
mov
ss
pop
outsb
lret
loopne
shl
mov
add
jne
push
dec
icebp
push
push
addr16
iret
xchg
aaa
inc
and
data16
mov
or
jle
cwtl
jl
sub
insb
push
lcall
adc
call
ljmp
and
inc
dec
pop
ds
icebp
mov
xchg
mov
aad
or
mov
push
jg
hlt
roll
js
sbb
push
xchg
pop
jns
in
adc
jbe
cld
lret
xchg
add
int3
jae
lea
lods
cmpsb
cmp
mov
push
test
sub
mov
ret
sub
std
push
data16
jmp
inc
jle
cmp
lock
xorl
adc
push
fists
or
gs
sub
test
aas
xchg
fadds
lods
push
or
adc
ja
outsl
fs
sub
decl
pop
ja
ret
fucomi
notb
push
clc
sar
fwait
call
sbb
repnz
and
in
dec
sbb
push
fidivrs
xchg
push
push
lcall
add
je
mov
fs
xchg
sub
aas
ficompl
pop
fs
pop
je
in
cmp
insl
imul
mov
mov
or
es
push
ret
addr16
mov
adc
add
daa
lock
inc
ljmp
das
out
jns
push
push
add
dec
sbb
xor
mov
icebp
pop
and
mov
rcrb
dec
int3
add
stos
testb
inc
add
cmp
mov
and
mov
ret
fwait
dec
gs
or
jl
xor
dec
dec
loopne
cmp
ss
shll
xchg
mov
jecxz
aas
gs
push
adc
shr
arpl
lret
ja
bound
add
add
lock
jo
adc
clc
dec
aaa
push
and
cmpsl
popl
or
hlt
pop
fisubrl
aas
insb
pop
mov
cmp
sub
inc
pushf
cs
adc
add
lods
leave
push
fisttps
scas
adc
jae
je
xchg
push
jg
fldl
dec
xor
test
pop
enter
add
ret
insb
je
xor
adc
or
stc
add
xor
inc
cltd
add
add
push
xor
add
sub
add
push
sub
in
cmp
cmp
dec
cmp
push
ror
lret
in
loope
jg
ret
std
push
sub
popa
repz
subb
icebp
xchg
jbe
xchg
and
add
xchg
lcall
sbb
mov
test
cmp
add
xor
pop
push
fisubs
aad
clc
daa
dec
fwait
imul
bound
add
mov
sbb
inc
sbbb
fs
inc
jg
push
call
inc
in
lock
hlt
pop
cli
sbb
loopne
and
test
in
and
dec
inc
lahf
mov
out
call
mov
in
in
pop
jmp
test
adc
add
out
cs
lahf
nop
out
mov
cmp
jmp
push
mov
js
xchg
mov
pop
fcompl
xchg
sub
push
in
or
mov
jae
push
shlb
cs
cmp
nop
fsqrt
test
and
daa
mov
adc
cmpsl
icebp
mov
cmp
sbb
dec
mov
xlat
adc
icebp
repz
mov
mov
rclb
ret
xchg
adc
call
dec
pusha
mov
xor
xchg
iret
fldcw
add
or
sub
add
fistl
aam
jg
dec
ljmp
fsubl
cli
adc
mov
xor
or
push
iret
aas
testb
mov
add
in
out
dec
sbb
lahf
or
xchg
mov
xchg
dec
loope
ljmp
push
gs
and
inc
adc
mov
adc
insb
dec
sub
jle
ret
pop
jge
lret
sbbl
scas
cli
add
add
fs
dec
fwait
testb
xchg
jg
xchg
test
test
inc
cmpsl
add
int
xor
adc
fcoms
rcl
cmp
xor
enter
lahf
or
mull
mov
push
aam
xor
jp
adc
cmp
test
loopne
sbb
test
and
add
jmp
push
rcrl
sub
mov
inc
or
into
andb
cmp
sbb
addr16
pop
adc
mov
cltd
mov
dec
jl
fdivrl
mov
addl
mov
mov
pushf
mov
cmp
mov
das
push
cmpsb
pushf
arpl
mov
loop
cmp
aaa
mov
adc
xchg
pop
mov
jo
pop
mov
dec
mov
shl
lock
adcb
mov
pusha
addr16
pop
lret
dec
push
add
sub
pop
adc
push
jle
add
xor
jmp
cmpxchg
mov
ljmp
out
and
daa
mov
and
jbe
aam
sbb
xchg
xchg
test
adc
jo
sbb
add
push
punpckhdq
cmp
call
es
clc
cmp
push
mov
stos
mov
mov
sub
pushf
add
ret
cwtl
sbb
jb
inc
addr16
repz
stos
dec
mov
insl
and
mov
pop
jne
in
and
xor
in
pop
lret
jp
loopne
scas
xorb
dec
cltd
sarl
or
cwtl
sub
jg
aas
mov
jne
iret
push
inc
push
adcb
movswl
jo
dec
cmp
mov
cmpsl
movsl
fisubs
or
xchg
push
test
xor
cld
decl
stc
insb
xor
push
mov
or
pop
sbb
push
inc
mov
pop
jl
sub
sbb
xchg
adc
cmc
clc
mov
movsb
popa
sbbb
sbb
mov
push
aas
je
mov
pcmpeqd
or
mov
mov
add
loop
pusha
ds
popa
cmovs
out
push
lock
pop
add
fadd
sbb
jbe
sub
sahf
xchg
cld
test
inc
ljmp
fdiv
fldt
cmp
or
push
push
jo
add
mov
xchg
ss
call
fcoml
aad
lcall
jne
inc
xor
das
fildll
xchg
or
lds
aam
and
sub
pop
push
cmpsl
mov
push
dec
cs
cmpl
push
sbb
and
pushf
jne
push
pop
mov
adc
inc
mov
ljmp
loope
test
outsl
adcl
sub
and
inc
jmp
dec
fs
push
loopne
mov
xor
je
sub
cltd
pop
sbb
sub
loopne
loop
pusha
cmpb
fcmovb
test
mov
gs
loop
cli
mov
inc
je
scas
aas
push
and
xor
ds
fwait
cli
lahf
test
pop
dec
mov
xchg
mov
stos
fwait
das
pop
popf
insb
popf
add
push
sti
fdivrl
dec
cmpsl
idivb
insl
daa
xchg
inc
inc
iret
fcomps
popa
adc
add
push
mov
mov
adc
push
or
add
js
jmp
test
pop
lods
cmpsl
jbe
cmp
lea
push
prefetchw
pop
add
les
movsb
or
inc
sar
mov
or
mov
cmp
cmp
push
shrb
sti
cltd
arpl
or
call
or
data16
cli
inc
daa
clc
cmp
lods
mov
insb
add
test
mov
inc
and
ljmp
sub
enter
jnp
dec
add
add
mov
call
insb
cmpsb
fcmovu
cmp
cld
add
push
adc
loopne
xor
fists
lock
or
xlat
out
cli
mov
sbb
mov
xchg
and
inc
or
insb
ret
gs
jne
add
addb
jmp
mov
cmc
ret
push
shrb
movsb
ljmp
push
fwait
and
mov
push
and
push
mov
ljmp
rcrl
loope
aad
inc
xor
fcomps
aaa
push
pop
testl
cmpsb
and
inc
mov
jecxz
xchg
jno
inc
shr
add
loopne
push
insl
fwait
sbb
ljmp
push
mov
or
lahf
addr16
jmp
sti
sub
cmp
sub
fs
stc
hlt
add
mov
cli
ret
mov
movsb
andl
loope
or
xchg
movsl
outsl
aas
xchg
push
push
mov
push
add
pop
and
jnp
popf
xchg
nop
not
aad
clc
adc
xchg
add
mov
and
cmc
pop
sub
mov
ja
inc
inc
loop
out
or
pushl
inc
xlat
cmp
loopne
adc
in
scas
pop
je
ja
icebp
push
mov
lret
aaa
mov
std
xor
dec
movsb
sarb
js
ss
add
xor
pop
jo
fistl
inc
push
repz
jl
cmc
pop
add
jmp
inc
into
cmpb
push
aad
int
cmc
jg
jge
call
ret
add
jo
dec
add
orb
mov
jg
or
inc
push
sub
add
outsl
jl
aas
mov
lea
cmpsb
or
insb
mov
bound
insl
rcrb
cli
pop
adc
sbb
xchg
test
out
xchg
scas
jns
lock
sarl
sbb
dec
movsb
sbb
mov
aas
inc
xlat
shlb
stos
int3
in
jnp
mov
cld
jle
add
incb
add
dec
mov
test
in
aaa
rorb
pop
mov
rorb
and
in
mov
cltd
mov
jle
pushl
sub
pop
jne
shlb
pop
mov
and
repz
or
dec
subb
mov
je
incb
test
nop
mov
fisttpl
jl
ret
shl
push
mov
lahf
pop
add
dec
push
fistps
mov
pop
cli
pop
mov
fwait
loope
jge
jne
xchg
xchg
pop
bound
and
jecxz
sub
cld
adc
sub
or
jmp
cmp
insl
insl
xor
mov
mov
inc
out
shl
fcoml
cld
out
inc
or
xor
pop
ja
cli
insl
jecxz
add
data16
or
nop
jmp
pop
inc
xor
or
jg
jmp
and
mov
add
cltd
js,pt
xchg
mov
add
adcl
sti
xchg
addl
rclb
std
call
lret
incl
xor
outsb
xchg
push
pop
and
add
sbb
aam
lock
xchg
mov
and
push
pop
cmp
cmp
jl
mov
ds
cmp
dec
sbb
cmp
mov
movsl
xlat
sahf
mov
aam
cmp
clc
orl
rolb
cld
jge
jno
xor
add
xchg
lods
lea
cmp
aad
mov
jl
sbb
test
repnz
sub
addr16
adc
les
shll
cmp
xchg
pop
inc
into
iret
mov
add
add
iret
xchg
add
mov
add
xchg
mov
lret
mov
test
push
and
dec
popf
std
dec
pop
dec
jmp
rcr
xchg
add
je
xcrypt-cfb
cmpsl
movsb
sbb
icebp
lahf
ret
jp
inc
addr16
and
adc
pop
mov
cld
in
pop
add
xchg
mov
sbb
xor
lock
sarb
cmpsb
adc
pop
xor
mov
push
aas
adc
out
unpckhps
push
xor
fisubl
test
insl
cmc
inc
and
lock
loop,pn
mov
and
add
out
xor
int3
adc
scas
cli
aam
loopne
mov
sub
dec
rorb
int
stos
lahf
inc
sub
dec
ret
and
enter
test
int
mov
cmp
or
shrb
test
or
push
jl
and
xorb
or
xchg
jle
add
jmp
fwait
mov
inc
pushf
jecxz
flds
sahf
pop
cli
testb
xlat
je
cmpsb
adc
ret
loopne
sub
jno
adcb
inc
lds
loop
lret
xlat
jle
push
filds
loopne
jmp
subb
enter
sarb
aad
mov
rclb
loope
sub
sbb
mov
js
xor
adc
leave
cmpsb
loop
inc
aad
or
mov
dec
push
or
xchg
push
or
add
and
jbe
mov
fldl
test
sbb
jle,pn
das
fs
cmp
xchg
ret
les
mov
pop
scas
pop
dec
inc
xchg
roll
push
xor
xchg
xchg
hlt
out
push
adc
rolb
sahf
jno
push
cld
data16
cli
pop
mov
loope
pop
cmc
cmovge
rol
aas
ret
sub
pop
mov
mov
rcrb
inc
mov
push
jo
cs
orl
sbb
psubsb
push
add
xchg
push
mov
jecxz
rcr
pusha
repnz
lahf
test
or
dec
js
in
das
imul
cmpsl
and
fs
int3
inc
movsl
mov
lret
push
idivl
aas
sbb
push
add
call
xlat
loop
fwait
insb
push
cmp
mov
push
xor
mov
mov
dec
dec
add
sbb
imul
pop
mov
fsubs
lcall
mov
je
xor
das
jl
mov
push
mov
jns
or
dec
cld
and
test
sub
and
push
mov
arpl
fmuls
push
data16
fisubrl
xor
fcomp
sbbl
or
dec
outsb
movsb
subb
sub
push
add
cs
decl
add
add
int3
mov
cld
psrld
into
jns
and
into
loope
inc
addr16
sub
mov
pop
pop
push
repz
aam
mov
pop
hlt
sub
sbb
rorb
mov
jo
jmp
pop
add
jp
push
inc
call
jecxz
icebp
cmp
shrb
xor
mov
sti
ficoms
push
jg
xchg
std
ds
test
lret
int3
les
icebp
push
inc
loope
xor
mov
ss
mov
add
call
loope
pop
or
mov
push
loope
movsl
ret
pop
shr
fwait
or
or
das
pop
adc
mov
movsb
and
out
test
cs
cmp
icebp
dec
jne
and
cmpsl
and
into
and
pop
dec
mov
insb
loopne
sarl
jle
and
cli
mov
cld
insb
push
push
jecxz
repnz
orl
jno
mov
mov
les
fld
repnz
pusha
fwait
inc
sbb
or
mov
je
loop
push
mov
lahf
test
mov
dec
adc
pop
sub
dec
cltd
sahf
inc
loopne
movsb
add
xor
in
outsl
aad
insl
jle
pop
mov
in
in
inc
rorb
and
add
scas
jecxz
mov
sbb
insl
call
mov
js
addb
shlb
or
es
push
inc
inc
inc
pop
add
mov
adc
rolb
cmp
out
dec
sbb
xor
xchg
push
insl
clc
popf
cmp
shrb
test
lret
jae
push
lret
popf
daa
pop
sarb
sub
xor
pop
lret
sub
dec
pushf
mov
mov
insb
cli
pop
push
ret
ljmp
fwait
push
outsb
dec
insb
cli
mov
push
pop
push
loope
xor
pop
pop
push
int
into
dec
loopne
or
fstpt
xchg
mov
mov
je
mov
ficomps
jge
mov
cmp
mov
xor
lcall
out
xchg
and
lahf
jecxz
lcall
aad
mov
push
test
js
aad
test
in
scas
subb
or
inc
dec
test
lea
int3
push
dec
sbbl
cmp
mov
fiaddl
aas
andb
sub
rcl
outsl
mov
inc
and
fisttpl
mov
lds
xchg
inc
movsb
or
xor
cltd
cmp
inc
sub
pop
insl
icebp
jo
aas
sub
enter
and
lahf
inc
bound
pop
loope
orb
inc
test
push
pop
push
test
mov
subl
sbb
xlat
mov
out
mov
dec
loopne
filds
je
fdivrs
aad
imul
das
ror
mov
mov
scas
xor
mov
xor
stos
fistpl
add
xor
and
mov
into
push
adc
ret
xchg
daa
mov
ja
cmp
stos
cld
lods
mov
nop
icebp
sarl
jae
dec
fistl
jmp
cwtl
adc
sbbl
and
pusha
cmp
mov
cmpsl
iret
call
insb
or
push
xor
lock
test
push
lea
enter
sub
or
xor
out
xchg
mov
mov
pusha
or
subl
pusha
mov
cmpsl
std
nop
test
stos
call
mov
mov
orb
inc
jbe
mul
and
or
pop
xchg
cmp
clc
jbe
mov
fnstsw
and
xchg
pop
and
iret
nop
inc
jp
push
scas
add
shl
or
call
pop
push
icebp
adc
cmpl
jae
into
gs
ljmp
js,pn
lcall
fdivrs
clc
pop
shll
lret
jmp
jecxz
push
and
popf
nop
dec
inc
dec
pop
lock
jbe
cs
jp
pop
enter
cli
stc
test
sub
jo
inc
gs
adc
mov
pop
mov
xor
aaa
jg
gs
xor
rcrb
or
adc
adcl
mov
pop
clc
cwtl
cmp
cld
fildll
push
inc
sbb
push
fnstsw
mov
incl
jg
sahf
jmp
mov
fdivrl
ret
or
mov
rolb
and
push
in
add
mov
xlat
pusha
hlt
xor
dec
mov
stc
ret
xchg
jne
cmpb
mov
cmp
and
jmp
or
dec
jne
ss
imul
or
pop
adc
rclb
cmp
mov
xchg
xor
cmc
int
add
dec
loop
nop
rolb
pop
push
andb
mov
mov
filds
pop
inc
xor
jne
stos
mov
hlt
push
mov
scas
jl
mov
xchg
pop
sub
lock
jmp
pop
mov
or
ficoms
imul
sub
or
out
das
adc
shll
pusha
and
mov
jne
mov
inc
add
imul
mov
adc
inc
ljmp
lods
mov
mov
pmullw
cli
lods
mov
inc
jle
ret
mov
les
adc
inc
ret
fmul
sbb
sub
bound
and
mov
lret
cld
pop
ret
push
in
lcall
fcmovu
clc
push
push
sub
add
xchg
pop
push
cltd
push
or
std
sbb
mov
or
inc
loope
rorb
lods
sti
jl
repz
push
pop
popa
pop
faddl
pop
shrb
stos
mov
mov
push
hlt
pop
hlt
inc
jmp
out
push
add
mov
ficomps
or
and
pop
enter
add
mov
fucomip
add
mov
lret
les
add
out
push
add
push
lock
jne
jecxz
scas
movb
push
push
sbb
out
iret
jo
xor
inc
mov
add
push
rorl
shll
ss
lcall
cmpsb
clc
cmc
dec
or
ss
mov
or
mov
popf
data16
in
sbb
cltd
bound
mov
xchg
sahf
incb
addl
fistps
into
cmp
and
filds
aas
xchg
and
and
and
inc
mov
call
pop
test
lods
xor
inc
test
aad
fidivrs
push
rdpmc
cmpsb
push
stos
add
sub
lds
pop
add
sub
out
outsl
mov
jno
inc
les
imul
cmp
cmp
call
inc
clc
lret
rclb
sub
scas
test
cmp
fiadds
dec
daa
ds
mov
mov
insb
mov
sarb
shl
sbb
jno
add
pusha
cmc
add
and
rcll
clc
and
jle
mov
pop
sub
add
pop
dec
ficoml
sbb
mov
xor
lret
les
or
adcl
fsts
mov
add
aaa
jne
push
test
mov
jl
popa
daa
jae
inc
adc
nop
inc
jg
das
add
fdivp
pop
mov
sarl
jmp
out
cltd
icebp
scas
dec
xor
or
xor
in
sbb
push
ljmp
jl
pushf
sub
jp
jge
cmpb
imul
outsb
add
xor
rcrb
int3
add
movsb
into
inc
adc
xchg
js
push
ljmp
mov
scas
pusha
fdivs
jge
pop
push
cmp
jl
xor
cld
sbb
je
mov
lods
sbb
mov
and
fwait
sub
xor
ret
inc
jge
dec
clc
psrld
ss
ds
add
add
or
jno
push
fdivl
adc
push
aam
adc
cld
add
je
int
loope
dec
add
cld
cmp
in
push
inc
loope
and
imul
add
or
push
inc
xor
add
mov
sub
jo
movsl
adc
mov
pop
fisubs
call
filds
test
mov
add
jg
jns
lods
adc
cmpsb
cs
ret
sbb
stos
test
int
fdivr
xchg
xchg
cmpsb
aaa
popl
out
mov
inc
shrb
and
push
fstp
sbb
sbb
icebp
and
dec
jmp
xchg
fcompl
cwtl
adc
xchg
adc
pop
fistl
add
outsb
orb
mov
js
jp
adc
mov
test
sbb
out
fs
mov
jmp
test
xor
sbb
mov
sub
xlat
ficomps
fsubrl
cmp
add
cmp
mov
push
push
dec
mov
sahf
push
ret
lods
out
aam
lds
nop
das
aad
cmp
sub
ss
and
ret
incl
xchg
out
filds
jmp
cltd
mov
xchg
cmp
fisubrs
shlb
test
pop
lods
scas
pop
stos
loop,pt
ljmp
je
jns
xor
mov
xchg
lret
adc
xchg
ret
jne
clc
cmp
das
test
mov
add
outsb
cmpl
dec
dec
or
mov
lds
cmp
xchg
mov
movsb
adcl
mov
mov
jecxz
ret
shr
cmp
mov
inc
fsubl
sti
jl
pop
iret
pop
dec
pop
sbb
dec
stos
mov
enter
push
mov
mov
mov
add
ror
and
sub
mov
push
ljmp
inc
imul
lds
shrb
outsl
mov
and
sub
push
cli
cmc
sub
cmp
xor
clc
ffreep
mov
sbb
sbb
mov
sub
or
sub
and
sub
test
inc
lahf
orb
pop
icebp
loop
lea
mov
mov
pusha
pop
or
shl
dec
sarb
into
es
mov
xor
inc
cmp
in
in
loop
xor
mov
outsb
inc
fstpl
out
std
pop
jmp
cli
pop
sbbb
push
push
rclb
pusha
pushf
mov
out
sub
pop
pop
xchg
ds
pmaxub
arpl
lock
lcall
inc
rcr
push
mov
nop
sbb
popf
xlat
sbb
cmp
xchg
dec
popa
mov
pop
cld
dec
or
push
bound
cmpsb
ret
stc
adc
jmp
roll
and
lods
add
subl
adc
pop
adc
inc
jbe
or
ficompl
adc
fldenv
out
inc
insb
or
sub
sub
fwait
int
je
pusha
sub
arpl
addr16
mov
data16
lahf
pop
inc
outsb
dec
cmp
hlt
pop
pop
mov
call
mov
jle
mov
fbstp
std
lahf
repnz
add
mov
shlb
and
dec
push
incl
outsb
jmp
fnstenv
aad
insl
xchg
add
inc
push
fwait
les
or
jno
mov
insl
sub
mov
cltd
adc
pop
sbb
scas
mov
inc
popa
hlt
jp
pop
sbb
stc
xchg
movsl
icebp
mov
dec
sbb
mov
jo
add
dec
sbb
mov
pop
add
test
pop
stc
outsl
jo
add
jne
mov
sbb
mov
add
fstl
js
pop
pop
loope
std
popa
add
sbb
aas
mov
mov
pop
sub
ljmp
add
aam
cld
xchg
inc
je
mov
data16
or
sub
or
push
dec
jbe
cmp
add
mov
clc
push
sar
cli
dec
jg
inc
push
aas
shlb
sub
pop
adc
xchg
stos
arpl
and
or
cmc
scas
inc
xchg
jo
in
or
add
jmp
das
jno
sahf
jns
das
dec
pop
loop
and
test
std
int
push
push
inc
mov
jge
inc
stc
push
push
dec
lret
mov
pop
sbb
and
cmp
jmp
add
mov
cmc
adc
mov
roll
and
out
mov
push
sahf
addl
ljmp
cs
inc
mov
mov
jnp
outsb
loope
cmpsb
xchg
ljmp
xor
or
popf
jo
add
sub
jmp
pop
add
jg
lds
and
enter
sbb
rclb
and
imul
lret
and
sbb
dec
jp
xor
adc
sbb
nop
or
push
rcrl
push
cld
dec
rolb
ljmp
into
add
incb
inc
adc
push
inc
cs
out
sub
push
outsl
insb
mov
sbb
das
dec
pop
mov
and
outsb
jno
push
xlat
and
jmp
and
and
xabort
nop
enter
inc
fistpll
hlt
pop
icebp
insb
mov
or
push
shll
jg
jbe
outsl
cmp
fsts
and
or
les
cmpl
std
adc
call
out
sub
pop
xor
or
sbb
fisttpll
gs
lock
cmp
pop
in
jecxz
loope
into
dec
adc
push
xor
repnz
push
dec
jg
loopne
lock
nop
inc
mov
mov
push
mov
inc
adc
mov
cld
mov
push
incl
or
dec
ret
pop
push
inc
xchg
dec
outsl
out
fisubrl
cs
jns
jo
add
mov
sub
jecxz
sbb
std
add
ss
push
and
ret
loopne
inc
dec
mov
idiv
out
adc
pop
xlat
xor
lret
and
leave
dec
push
cmp
mov
daa
movb
cld
adcl
push
jo
repnz
or
xor
inc
aam
pop
sbb
not
inc
rcl
xor
add
dec
dec
aas
aaa
imul
add
lea
pop
pop
and
loopne
fcmovne
sub
hlt
div
sub
mov
dec
xor
xor
cmpsb
inc
inc
rcrl
push
add
cld
roll
cmp
cmp
ljmp
inc
lods
mov
xchg
cwtl
push
adc
mov
xchg
push
pop
xor
cwtl
cmpsb
mov
clc
lea
xchg
mov
jb
mov
daa
loop
hlt
cli
popf
sarb
cmp
sbb
and
jae
sbb
push
es
jle
jecxz
test
les
test
cmpsb
sbb
std
mov
mov
sbb
dec
imul
int
sub
mov
stc
insl
rclb
jmp
int
aas
into
andb
mov
dec
sbb
out
fdivrs
sbb
or
or
movsl
out
inc
mov
icebp
in
ja
sub
jo
xchg
in
mov
std
gs
push
fisttpll
jle
adc
add
out
sahf
or
pop
outsb
pushf
or
inc
bound
enter
mov
ret
lea
std
lods
inc
mov
cmc
xchg
xchg
mov
cli
pop
xchg
mov
jg
cs
icebp
rolb
or
add
arpl
repz
cmp
cmp
call
je
add
dec
aam
pop
inc
or
mov
inc
ret
outsb
xor
lcall
dec
test
fcoms
cs
fadds
js
sbb
push
lret
cmp
dec
add
insb
fnstenv
mov
pop
jo
inc
sbb
push
repnz
cs
pop
dec
jnp
dec
push
add
pop
sbb
lahf
add
sbb
push
xorl
add
sub
hlt
jle
mov
sahf
mov
or
cmpsb
xchg
xchg
mov
bound
add
fbstp
sub
xor
cmpsl
cmc
sahf
into
mov
dec
addr16
cmp
loopne
aaa
or
stos
cmc
aas
jmp
repz
mov
lods
pop
std
mov
test
sbb
or
sub
push
fists
lods
movsl
movsl
das
push
mov
lods
sub
push
mov
mov
push
xor
test
cwtl
mov
jbe
sub
lea
xor
ja
pop
shrl
xor
ret
fsubrs
sub
sbb
loope
test
les
push
les
jl
lea
or
mov
inc
out
call
or
clc
xchg
adc
addb
sbb
jp
negl
xor
add
dec
mov
cld
rorb
test
insl
js
pop
inc
dec
loopne
mov
or
mov
jmp
sub
xchg
inc
sbb
and
xchg
stc
icebp
daa
cmc
test
aas
rclb
mov
std
mov
int
notl
mov
in
inc
adc
adc
inc
push
rolb
push
in
je
inc
lods
jle
fwait
mov
aam
gs
push
or
in
test
mov
fs
cmpsl
xchg
inc
lcall
mov
add
adcb
sti
or
lcall
jb
jg
dec
xchg
mov
xor
rolb
dec
movhps
sub
or
pop
jl
cmpsl
std
sbb
cld
xor
pop
adc
es
sbb
xchg
mov
jne
sbb
hlt
pop
inc
lds
in
hlt
test
push
enter
sub
or
push
inc
and
scas
sbb
movsb
cld
jecxz
test
aas
adcb
dec
sub
aas
cld
or
jg
push
inc
mov
in
loop
push
rolb
xor
test
sarl
lods
xchg
mov
cmp
pop
test
mov
adc
test
data16
addr16
lcall
es
xor
jmp
inc
movsl
lock
adc
test
movsl
mov
and
and
pop
test
and
popa
lods
aad
add
in
mov
ljmp
mov
lds
jbe
mov
mov
sahf
dec
push
jns
mov
xchg
xchg
dec
jg
mov
mov
jne
leave
popa
inc
fadd
test
in
cmp
jnp
lock
xor
push
mov
xorl
aas
inc
sub
lfs
popf
and
dec
loopne
iret
jp
adc
mov
inc
and
add
out
mov
dec
and
cli
lods
inc
fbstp
orb
mov
add
out
cld
mov
mov
scas
xor
push
ja
loope
sbb
lret
push
mov
aaa
jle,pt
mov
vmovhps
rcrl
push
add
inc
jno
push
jo
jo
sbb
cli
inc
lods
aam
and
jecxz
jo
add
mov
fdivrs
cwtl
mov
loopne
mov
fs
in
mov
xchg
mov
mov
adc
lock
ret
lea
inc
add
jecxz
and
data16
push
mov
ja
cltd
fsubs
adc
scas
add
les
ss
cmpsl
es
cmp
or
push
dec
shrl
jmp
add
xor
into
mov
ss
inc
fadds
sub
leave
lock
ret
fbld
mov
pop
popa
mov
mov
mov
int
pop
pop
pusha
add
inc
movsb
mov
sub
sbb
push
pop
ljmp
add
cmpsb
fisubs
sbb
xor
xchg
cmpsb
shl
and
add
or
or
xor
lea
pop
std
or
push
sti
inc
cmpsl
xchg
mov
pop
or
pop
dec
scas
push
repz
push
mov
sbb
mov
pop
rcrb
fnstcw
out
scas
push
aad
lods
xlat
aaa
mov
mov
xchg
sbb
xchg
mov
jp
outsl
out
lock
lock
mov
push
rol
mov
dec
int
xor
das
jecxz
and
pushl
loopew
jb
add
pusha
cmpsb
stos
cmp
xor
xor
lret
push
pop
clc
das
les
inc
xchg
mov
dec
jnp
test
mov
lock
mov
ret
out
fsubl
pop
mov
les
addl
ret
loopne
cwtl
mov
cmp
push
cmc
push
ret
push
in
fiadds
cmc
inc
loope
fidivrl
es
xchg
pop
mov
shlb
cmpsl
add
push
push
and
lret
rcl
dec
sarl
js
xor
adc
imul
mov
and
cld
cmpsl
int
push
iret
imul
pop
xor
and
jg
jno
clc
cmpsb
jbe
jmp
in
ds
add
jbe
pop
cwtl
and
ja
mov
in
jl
aad
pop
inc
stos
cmc
jp
sub
xor
sarb
pop
fcoms
sbb
cmc
mov
jmp
mov
push
add
or
or
adc
push
arpl
call
mov
leave
xchg
push
adc
xchg
popl
loopne
sahf
int3
dec
shrl
fs
sahf
aas
ja
cmp
adc
jb
xchg
in
jg
xchg
imul
cld
sub
pushl
pushf
mov
cmp
inc
popa
sub
lock
lret
jbe
add
dec
or
dec
mov
add
insb
pusha
push
enter
fs
loop
stc
lahf
and
dec
mov
fucomp
sub
mov
mov
repz
loopne
xor
xor
and
jmp
mov
jp
loope
xchg
scas
mov
inc
ret
xchg
addr16
lock
mov
adc
sub
ds
imul
fisttpll
test
push
xchg
inc
inc
inc
inc
sbb
and
pop
mov
popa
or
sub
inc
inc
call
and
jmp
in
dec
ljmp
nop
lds
int
pop
mov
inc
push
bound
fisttps
call
sub
stc
jg
addr16
sbbb
xor
mov
jle
call
out
sbb
inc
push
mov
dec
rcr
mov
mov
inc
movsb
sbb
shll
sub
mov
dec
mov
jnp
jecxz
movsb
jp
fildl
not
out
aaa
loope
sbb
jmp
fidivrl
fldcw
adc
mov
in
rcrl
frstor
test
in
adc
fnsave
sbb
int3
lock
push
add
or
push
rolb
inc
fisttps
add
dec
cmp
int
sub
lcall
mov
repz
rol
mov
mov
adc
pop
cmp
jmp
jl
jge
or
sbb
addl
push
bound
xchg
jle
shlb
jp
je
adc
std
jp
insb
xchg
in
jns
out
lock
clc
dec
movsb
pop
gs
arpl
mov
notb
test
mov
movsb
add
pusha
cmp
les
iret
push
fisttpl
adc
int3
sbb
pop
add
cmpb
sub
stos
pusha
xor
cltd
adc
jp
cwtl
sub
sub
aas
ds
xor
pop
mov
adc
addr16
sub
incl
int3
fstpl
mov
add
pop
sbb
mov
mov
call
adcl
cmc
test
jbe
mov
inc
rclb
sbb
lods
popa
cmp
cmpsb
lock
jmp
sub
cld
add
mov
nop
push
jne
xchg
xchg
inc
test
push
jg
add
nop
sub
mov
adc
sahf
sub
jg
arpl
xchg
pop
iret
lret
aam
dec
sbb
push
push
xor
push
inc
mov
fsubr
add
stc
je
add
add
add
xor
adc
push
fs
mov
sahf
cmpl
cmp
cli
arpl
adc
mov
or
arpl
and
addl
arpl
adc
jbe
loop
push
fdivl
outsb
lds
push
aaa
push
cli
pop
cld
ret
stc
pop
add
inc
cltd
int
cmp
out
ds
jns
mov
or
cmpsl
int
push
mov
shl
test
ljmp
fcomip
push
loopne
mov
lock
bound
dec
mov
mov
pop
jle
add
mov
xchg
iret
insb
notl
pop
stc
and
sbb
and
lock
lret
sbb
imul
leave
mov
iret
shr
cmp
ss
out
into
mov
cwtl
push
out
jb
rclb
fwait
cmc
aaa
add
inc
adc
mov
sbb
fisubl
mov
inc
xor
insb
fidivl
xchg
push
aad
sbb
add
sub
xchg
mov
sbb
lret
faddl
add
int
or
mov
std
xlat
or
aad
sbb
dec
cmp
push
cmp
xor
nop
jno
fstp
push
xor
and
push
sub
cs
push
jmp
call
pop
jae
push
shlb
or
sbb
mov
cmp
test
jo
andl
test
jns
inc
js
cmp
loopne
or
sbb
inc
lahf
ds
fadd
arpl
aas
out
or
aad
sub
ljmp
mov
jnp
push
lock
sub
dec
pop
mov
lahf
testl
push
add
leave
mov
cli
scas
dec
and
or
out
mov
fsubs
add
sub
test
inc
mov
cld
sti
aas
imul
into
dec
lret
add
int3
or
out
std
shrb
mov
inc
fdivs
or
shll
popa
and
movsl
fbld
add
stos
lret
add
aad
lods
stos
or
xchg
xchg
das
mov
ror
mov
test
and
aas
mov
aam
sbb
mov
fwait
mov
les
and
mov
xchg
cld
push
xor
push
and
jno
das
cli
pop
jmp
int3
ljmp
push
clc
adc
pusha
in
loopne
xchg
dec
enter
pop
jmp
adc
jmp
in
mov
cmp
push
int3
ret
sbb
outsl
mov
mov
decb
add
dec
insb
popf
xchg
push
shrb
lcall
cli
push
nop
mov
inc
sub
scas
mov
jge
add
in
test
dec
mov
test
clc
adc
jne
fs
mov
cmp
cmpsb
mov
add
stc
and
xor
mov
imul
mov
nop
rcrl
testb
push
and
test
inc
roll
ret
clc
jmp
aaa
or
mov
cld
push
push
sbb
add
loop
pop
sub
enter
loopne
jo
add
sti
jge
xchg
rclb
jb
aas
push
push
and
cmpsb
cmc
das
add
add
xor
or
push
dec
pop
rcr
add
fidivrs
push
push
repz
mov
adc
cmp
sti
scas
jb
leave
faddl
add
shl
pop
ljmp
push
pusha
cmp
rorl
sahf
lds
loope
aad
inc
repz
adc
and
cmp
dec
xchg
fsubrs
sarl
lods
inc
lret
sbb
mov
and
and
sbb
std
push
faddl
popf
shl
insb
mov
xchg
shll
cli
fs
sbb
ret
add
leave
ljmp
orb
out
pusha
sub
push
shll
aas
inc
push
or
and
push
lcall
ljmp
hlt
and
inc
sahf
jbe
jne
sbbl
xchg
roll
aaa
pop
lcall
xchg
mov
jg
push
pop
js
xchg
aaa
pop
cwtl
pmulhuw
fbld
fldt
lea
pop
mov
sbbb
call
les
out
jl
and
push
jp
aad
mov
loope
test
or
mov
jle
out
addl
sub
jmp
ret
fs
or
inc
jne
test
dec
shrl
mov
aad
cmp
push
cvtdq2ps
out
std
cmp
daa
jle
push
jl
les
dec
mov
xor
scas
mov
cmpl
lcall
or
lret
inc
and
cmp
pop
clc
sub
sub
adc
pop
pop
jnp
lock
or
and
adc
xchg
xorb
arpl
sub
test
into
add
inc
shll
lock
sbb
mov
cmpsb
and
jl
incl
add
sbb
dec
pop
les
in
fists
sub
incl
rolb
mov
add
lcall
xor
push
outsl
xchg
add
xchg
loopne
mov
loop
sbb
enter
stc
or
rolb
mov
loope
aam
push
data16
mov
int3
ret
in
jb
repnz
and
pop
xor
mov
fcompl
stos
aas
dec
xor
lret
push
sbb
push
dec
or
mov
mov
pop
mov
cmp
push
ds
mov
movsb
out
dec
loope
cmpsl
cmp
out
lods
scas
adc
pop
outsl
sbb
push
adc
decl
mov
adc
mov
gs
js
inc
rol
inc
leave
xchg
push
mov
adc
dec
mov
jge
push
test
mov
mov
dec
sub
push
aaa
sbb
jecxz
int3
stos
out
addr16
pop
loopne
shll
fdivrp
cmpsl
sub
mov
mov
xor
lock
hlt
lock
lds
leave
push
icebp
das
push
xor
jmp
push
call
fidivs
and
push
ljmp
fdivrl
lret
add
or
or
push
lods
cmc
or
sti
test
notb
and
fs
cli
sahf
dec
jo
sbb
mov
cmp
es
aam
and
insl
or
inc
fldt
lea
int3
pusha
outsb
imul
adcb
add
or
in
je
xor
lock
lods
or
mov
xchg
push
inc
notl
ja
push
popa
jge
ret
xchg
pusha
loopne
ds
and
daa
outsl
loopne
insl
pop
sti
jns
pushf
in
ja
outsl
int3
test
pusha
fisubs
inc
or
lds
addr16
xchg
scas
mov
lds
pop
cmp
ljmp
xlat
mov
roll
or
jb
xor
mov
add
jmp
jnp
lds
aam
sbb
ds
mov
stos
sbb
stos
ss
jl
pop
idivl
test
ret
hlt
imul
inc
add
xor
adc
aad
in
loop
push
hlt
addl
in
aad
aad
mov
sub
lahf
addb
enter
mov
push
mov
out
inc
xchg
aad
pop
adc
lods
imulb
add
or
je
sbb
mov
xchg
add
testb
arpl
jmp
scas
cmp
insl
inc
or
icebp
xchg
out
jecxz
inc
mov
add
ljmp
jo
fs
bound
or
mov
cmp
add
flds
mov
cs
xchg
sub
gs
push
pop
or
adc
jb
xor
and
pop
or
mov
cld
hlt
lahf
sub
cmc
aas
call
sbb
and
adc
mov
je
test
in
test
cmpb
mov
sti
sbb
outsb
and
cmp
mov
jg
popa
or
data16
pop
out
testl
xor
mov
shlb
popa
pop
pushf
cld
loop
pop
pop
add
inc
add
andl
jo,pn
aas
add
pop
mov
ds
sbb
mov
jo
inc
aad
sbb
sarl
and
rcl
rol
js
adc
pinsrw
or
mov
aaa
xor
test
lahf
shrb
lahf
test
aas
pop
cld
xchg
push
mov
sub
into
loopne
dec
outsb
push
test
icebp
cmp
andb
xchg
movsl
jg
cld
data16
sbb
rcl
fstps
xchg
inc
jns
sbb
add
lahf
dec
roll
adc
sbbl
jae
push
pop
add
mov
or
insl
fbld
pop
outsb
sub
xor
std
orb
ret
leave
mov
gs
arpl
gs
inc
icebp
or
mov
and
pop
sbb
fsubs
rcll
jmp
inc
nop
lret
xor
inc
ljmp
ds
mov
mov
add
and
mov
cmp
int
xor
sub
lock
fisttpl
dec
inc
mov
mov
pop
outsb
int
add
and
sub
dec
cmp
xor
daa
mov
fs
push
pop
push
data16
jecxz
insl
loop
setns
sbb
int
push
inc
imul
pop
outsb
sti
loop
ret
cmp
rcr
mov
dec
xor
push
xchg
jl
scas
pop
mov
jmp
or
imul
fcos
xlat
out
scas
mov
cwtl
mov
sbb
decl
pop
mov
push
xor
lcall
les
test
jae
sub
xlat
repz
push
add
mov
push
aam
sub
psraw
cli
xchg
sub
mov
adcl
xlat
add
les
xchg
add
lods
and
xor
mov
cmp
movsl
or
mov
nop
push
xor
std
mov
pop
pushf
loopne
lock
adc
mov
dec
out
das
ds
aam
dec
popa
xchg
push
popf
mov
shll
aaa
pop
mov
outsl
into
cmp
jg
xor
push
pop
add
icebp
lcall
aas
cmp
xor
bound
mov
int3
inc
inc
sub
mov
adc
xlat
clc
add
fs
add
insl
or
jne
lahf
cmp
xor
mov
xor
mov
es
jg
mov
fdivp
or
popa
enter
adc
pushf
adcl
mov
mov
push
cld
mov
arpl
dec
in
jl
ret
nop
std
mov
or
mov
adc
jo
test
xchg
xorl
movsb
dec
pop
mov
xor
icebp
pop
push
add
aaa
push
adc
inc
push
ss
jmp
orb
mov
mov
arpl
pop
adc
inc
sti
add
pop
mov
or
rcrl
mov
loop
je
mov
pop
pop
dec
ret
mov
ret
adc
data16
jbe
jle
mov
out
cmp
rol
add
sbb
cmp
mov
inc
push
push
and
sbb
stos
lcall
push
fldenv
add
push
mov
xchg
insb
gs
shll
ss
in
loopne
push
addb
dec
lds
dec
lea
icebp
jnp
sarb
les
into
jo
fwait
inc
rcll
loop
andb
and
jle
sub
jno
xor
mov
in
inc
jecxz
jp
push
push
fwait
data16
jmp
mov
hlt
add
mov
addr16
dec
test
popl
popa
cld
daa
gs
mov
cmc
xchg
adcb
pop
loopne
push
dec
and
std
pop
adc
rcrl
xchg
enter
jecxz
push
jg
mov
mov
mov
and
sub
dec
add
jle
inc
cmpsl
sbb
cmp
loopne
stos
dec
sub
pusha
dec
inc
jl
push
push
inc
leave
lahf
push
shll
and
xor
repz
arpl
mov
testb
mov
jge
pop
jb
push
inc
aas
ljmp
pop
shl
repnz
xorl
pop
ret
enter
cmp
jmp
xor
adc
sub
and
lock
push
mov
insb
fucomip
sbb
xor
adc
push
int3
dec
sbb
loope
nop
movsb
mov
data16
lret
or
jns
je
sub
insb
popf
test
jp
mov
jbe
adc
andl
test
jo
arpl
ficoml
dec
pop
sbb
mov
aaa
pop
std
mov
cmc
jb
stos
clc
stc
aad
xchg
adc
aad
push
jecxz
or
jl
mov
shl
bound
dec
add
sbbl
mov
sub
int3
lea
bound
or
xchg
ljmp
and
cli
or
jmp
inc
fs
lock
cmp
inc
push
pop
push
comiss
loop
mov
fs
adc
dec
add
cmp
out
cmp
mov
and
sub
mov
lret
imul
lods
aad
dec
cwtl
loop
sub
cmp
sub
push
or
aad
xor
adc
shr
outsl
mov
jmp
sub
ss
data16
jl
outsl
xorb
xchg
jle
mov
sbb
sub
add
adc
insl
and
es
icebp
popa
ljmp
mov
pop
adc
neg
ficoms
mov
pushf
les
pop
pop
ror
out
repnz
aam
dec
push
testb
cli
loop
pop
jecxz
insl
lret
pop
dec
clc
pop
cmc
xchg
jge
add
jno
dec
nop
mov
inc
mov
int
pop
lock
jecxz
xchg
shll
into
mov
push
shrb
push
mov
or
jmp
das
clc
and
xchg
fsubr
ljmp
cmc
mov
inc
pusha
or
lret
into
test
mov
iret
pop
imul
inc
inc
cmp
pop
cmp
in
push
jle
and
mov
mov
mov
sahf
popa
mov
out
lock
nop
inc
push
pop
in
hlt
or
scas
xor
in
test
xchg
mov
test
call
in
data16
cli
sub
idivl
add
jle
das
outsb
gs
test
ljmp
cwtl
and
xchg
cmpsb
imul
andb
lds
add
sahf
sbb
xlat
pop
mov
rol
sbb
adc
xchg
sbb
daa
push
xchg
push
out
lret
in
outsl
cli
js
sub
imul
sub
cmp
inc
popa
xchg
sbb
pushl
popf
inc
nop
add
jecxz
cmp
mov
pop
adc
xchg
sbb
dec
fnstsw
fwait
icebp
adc
insb
dec
roll
add
dec
cmpsb
sbb
enter
jbe
sub
mov
jg
aam
ja
or
add
fucomip
cld
push
push
ret
and
cmp
lock
or
adc
adc
ret
or
push
mov
xchg
call
mov
insb
int
fadd
roll
mov
lock
pop
adc
rcr
pop
aas
cld
mov
roll
cld
xlat
pop
xchg
leave
out
stos
mov
insl
push
cld
ds
add
and
aam
dec
call
mov
loope
mov
push
sub
repnz
rcl
sbb
ja
jmp
or
cmp
dec
jmp
inc
xchg
test
xor
loop
inc
jp
cmp
movsb
shlb
loop
sbb
scas
loop
shll
mov
push
push
stos
jbe
jge
ja
jg
inc
push
insl
daa
add
imul
sar
arpl
and
mov
dec
or
js
or
push
mov
sar
adc
jno
test
xlat
cmp
push
roll
jl
push
add
call
lods
xchg
dec
rclb
push
pop
scas
inc
loope
adc
xor
xor
pop
dec
fcoms
mov
das
jle
jg
lret
or
or
mov
jne,pn
adc
daa
xchg
xchg
pop
js
cmp
pop
addl
add
sbb
pop
icebp
xchg
out
das
jo
mov
pop
cli
inc
jp
xor
dec
dec
xchg
sbbb
pop
lret
xor
adc
outsl
or
sbb
mov
dec
clc
pop
or
add
jl
ret
sbb
cmpl
dec
movsb
sbb
dec
jecxz,pn
mov
fisttps
shl
shr
loopne
or
xor
es
aas
sbb
inc
ja
mov
ds
push
xchg
sbb
jne
lods
adc
iret
xor
xchg
mov
mov
pushl
mov
push
push
adc
mov
jge
add
inc
or
add
cmpsb
sub
cmp
jae
loop
aaa
test
shlb
jb
pushf
stos
fidivs
cmp
mov
adc
popf
hlt
adc
mov
adc
add
fmuls
pop
mov
adc
sbb
mov
ljmp
add
fidivs
adc
fcomps
addb
sub
mov
bound
incb
mov
adc
outsl
xchg
test
jecxz
jmp
mov
xchg
aas
enter
xchg
std
sub
and
loope
shll
lock
f2xm1
call
ficompl
push
push
mov
xchg
das
push
mov
in
add
ja
repnz
jo
out
in
rcl
add
push
mov
aad
ds
jo
out
push
mov
jnp
xor
cld
insl
push
xchg
jmp
cmpsb
mov
ja
mov
shrb
cmp
xchg
adc
mov
sub
xchg
lcall
lcall
inc
pop
push
in
out
js
or
and
mov
pop
aas
jg
mov
inc
leave
or
pop
int3
lret
add
add
rcrl
push
mov
add
push
inc
jecxz
imul
ja
outsb
and
inc
rolb
add
inc
daa
sub
icebp
inc
xchg
or
cld
or
lret
sub
push
push
or
jle
jmp
dec
cmp
scas
mov
xchg
xor
rcrl
add
cld
test
fdivs
mov
push
iret
sbbb
push
sub
jl
icebp
stc
jne
cmp
cs
push
and
test
xchg
popl
icebp
pop
adc
xor
inc
cmp
add
sub
mov
icebp
adc
sbb
in
enter
cld
aas
in
bound
push
jb
mov
dec
sbb
push
sbb
inc
aaa
aad
adc
jmp
adc
dec
lea
mov
faddl
inc
mov
sbb
call
xor
pushf
jle
jmp
mov
bound
xchg
daa
sbb
mov
jg
in
stc
shll
mov
jp
push
jl
popa
jo
adc
jge
loopne
pushf
adc
mov
negl
sti
test
add
cld
out
ss
addl
into
test
in
inc
sbb
mov
pushf
jae
add
loopne
cmpsb
mov
cmp
xchg
hlt
imul
mov
pop
cwtl
lea
je
insb
push
jecxz
cmpeqps
loopne
inc
mov
pusha
pop
mov
sub
mov
loop
mov
fs
xor
mov
mov
inc
sub
mov
inc
inc
mov
in
imul
mov
orl
inc
loopne
in
xor
cmc
out
popa
popa
bound
or
pop
pop
lea
rcll
and
lcall
jb
jp
loopne
mov
imul
mov
mov
adc
test
add
and
or
das
lea
aas
fdivrl
std
mov
pop
xchg
insb
int
inc
shlb
add
test
add
outsl
bound
pop
shl
push
adc
decl
lods
push
pop
sub
lds
jl
xchg
xlat
sbb
sub
sub
sub
inc
dec
loopne
or
pop
adc
popa
test
lahf
push
es
out
mov
inc
pop
ret
aad
lods
push
es
push
aas
or
scas
je
xchg
fwait
cli
push
or
xchg
ljmp
fld
add
cmpl
push
jg
out
into
cmp
push
pop
or
jmp
and
dec
out
inc
cli
roll
lret
es
hlt
scas
sti
push
and
pop
nop
adc
mov
mov
out
and
pop
mov
sub
mov
sub
scas
mov
cmp
mull
cs
cld
sahf
cld
aas
cld
add
sub
das
push
mov
mov
mov
out
aaa
rcll
mov
sub
repnz
adc
lcall
pop
outsl
mov
or
jb
sub
js
sbb
faddp
imulb
mov
or
call
mov
mov
xlat
leave
xor
cmp
sarb
dec
xor
mov
adc
movsb
aaa
std
mov
scas
push
xchg
add
fcoms
outsl
or
inc
jp
jb
jl
inc
hlt
pop
add
in
mov
cmove
les
jl
stos
inc
subb
rcrl
dec
or
sbb
add
mov
mov
hlt
mov
test
push
inc
mov
xor
movb
dec
fdiv
js
push
xor
dec
shrl
je
call
and
or
ljmp
or
add
adc
xor
bound
cmp
sub
sbb
push
push
or
jp
pop
test
leave
lds
mov
imul
lea
sti
pop
cltd
stos
pop
add
sti
xor
dec
clc
jmp
out
inc
repz
loope
loope
testb
pusha
sbb
fnstsw
mov
xor
sub
outsl
mov
ljmp
jle
jae
repz
ja
lock
pop
outsb
lret
rcll
in
aam
push
xlat
add
add
dec
movmskps
sbb
dec
outsb
xchg
xor
and
or
dec
mov
jmp
adc
mov
pop
fcmovu
js
mov
and
pop
cmp
add
fdivl
outsl
or
adc
cltd
pop
xchg
aaa
insb
rolb
out
jmp
nop
cli
inc
imul
out
jno
cmpsl
popf
outsl
mov
push
push
mov
dec
loope
loop
sbb
xor
clc
xchg
push
ja
push
jns
fwait
xchg
popf
leave
bswap
inc
lcall
clc
or
cmp
nop
movsb
xchg
lahf
or
add
mov
inc
jnp
jmp
sub
pop
pop
jb
add
mov
sub
es
cwtl
rolb
adc
clc
mov
mov
xchg
mov
repnz
gs
and
mov
mov
and
fbld
adc
mov
push
and
call
insl
dec
ja
push
pop
sub
xchg
pop
pop
inc
rorl
fiaddl
mov
add
repz
imul
test
cmpsl
adc
sbb
cmp
cli
pop
loop
push
lea
lods
jp
dec
pusha
lock
pop
cltd
clc
out
push
or
mov
xchg
xchg
or
addb
stc
loop
adc
push
sbb
sar
cmpl
and
and
xor
cs
mov
sbb
fbld
test
jbe
or
push
sub
mov
daa
xor
xlat
push
adc
clc
mov
test
cmc
outsl
rorl
inc
clc
mov
in
out
addr16
testb
jmp
push
adc
push
mov
jo
cmpsl
dec
and
sub
adc
arpl
mov
jp
dec
ss
cmp
jg
sub
xchg
movsl
sbb
add
shl
movsb
push
lods
sub
pop
in
hlt
out
add
mov
dec
adc
call
movsb
or
mov
in
fsubl
pop
mov
push
mov
dec
addl
movsb
pop
mov
pop
mov
test
jp
inc
stos
subb
jp
mov
jecxz
sar
es
xchg
es
dec
jmp
xchg
jle
inc
popa
mov
ret
or
sbb
lock
incl
out
sbb
xor
rcrl
jmp
bnd
inc
insb
jp
sbb
hlt
and
add
pop
shrb
xchg
cmp
pop
add
ret
fcoml
mov
mov
pop
and
ffree
mov
test
inc
xchg
or
mov
ret
mov
add
xor
xchg
dec
test
in
pushf
mov
das
sar
stos
add
mov
xchg
mov
imul
mov
aaa
push
ljmp
jg
sub
jmp
pop
xor
xor
movsl
inc
cmc
jns
mov
jbe
and
push
scas
adc
movsb
popa
dec
out
sarl
inc
mov
cli
and
pushf
jge
pop
xor
aaa
dec
adc
mov
pop
adc
mov
adc
stos
sbb
jns
mov
push
cmp
xor
not
or
adcb
aam
mov
add
mov
add
mov
inc
rcrb
arpl
jle
test
inc
mov
or
rorb
fcmove
fldcw
jmp
push
xchg
jg
lahf
test
and
outsl
ss
sbb
imulb
mov
mov
popf
mov
push
int
jle
call
dec
cli
mov
cld
add
push
mov
sub
push
jnp
or
inc
cld
negb
cmp
jl
je
cld
mov
clc
or
aas
cmpsl
out
add
push
or
shll
adc
rcrb
mov
mov
fs
add
push
test
pop
call
outsb
jo
pop
mov
int3
or
dec
loope
fistpl
jge
push
adc
stos
jle
enter
pushf
outsb
xor
je
push
mov
sbb
in
cmp
pushf
and
push
adc
icebp
and
push
repz
cld
mov
bound
add
fcompl
pop
cli
in
push
inc
test
xchg
subl
dec
fmuls
pop
jbe
decb
mov
das
loopne
fimull
arpl
outsl
mov
es
pop
pop
mov
mov
add
pop
push
jbe
sti
aas
pop
lods
dec
and
xchg
mov
xchg
ds
repz
fildl
int3
insb
in
paddd
addb
mov
psubsw
add
movsb
adc
mov
jg
push
jecxz
sub
pop
lock
sub
cmp
in
mov
pusha
in
jbe
scas
cld
test
fcomps
js
test
sbb
or
jne
push
outsl
add
out
inc
dec
jp
dec
xchg
push
xchg
cmovb
sbb
push
xchg
dec
xor
loopne
add
pusha
clc
pop
lahf
inc
sub
xor
lds
int
dec
inc
adc
add
fucomip
dec
add
pop
mov
into
mov
sbb
sub
or
lock
mov
ret
inc
aas
jmp
sti
pop
cwtl
push
pop
add
cmpsl
in
sub
sbbb
mov
sti
and
mov
or
lock
push
ficomps
pop
in
ds
call
adc
addl
jle
ljmp
shrb
pop
lods
or
dec
mov
or
sub
icebp
adc
xor
pop
add
cmpsb
test
lods
out
push
addr16
es
jb
mov
xor
push
gs
inc
pushf
test
jle
int3
inc
push
jnp
testb
jae
popf
push
jg
mov
lods
cltd
divl
jmp
ljmp
dec
push
faddl
xor
cmp
inc
mov
dec
sbb
std
out
xchg
loopne
gs
add
add
or
jge
jns
xchg
scas
es
cmc
aas
loopne
xchg
mov
cmp
fcmovb
xchg
js
nop
cmc
je
aaa
popa
mov
fbld
test
or
cs
jle
or
mov
cmp
aas
or
fiadds
add
sub
mov
and
push
dec
mov
or
mov
loopne
and
or
addr16
cmp
or
jmp
push
repz
mov
pop
push
test
cld
mov
sbb
push
pusha
addr16
je
xchg
mov
ret
push
add
xor
decl
icebp
aas
inc
ljmp
pop
add
pop
dec
mov
das
jp
faddl
push
loopne
xchg
bound
fs
shlb
dec
adc
jns
adc
mov
jb
xor
mov
lods
gs
push
add
and
das
pop
clc
jmpw
stos
inc
icebp
das
aas
cmp
pop
ret
push
jg
xor
mov
decl
out
add
jnp
incl
insb
add
push
push
inc
mov
outsl
jo
and
mov
ljmp
rcrb
lock
push
out
mov
push
stos
and
clc
inc
or
dec
xor
push
push
add
test
stos
mov
ljmp
add
xchg
inc
je
jo
ficompl
cld
pop
fsubl
xchg
sbb
jo
jnp
insb
inc
sbbb
inc
adc
cwtl
adc
call
mov
cmp
enter
cld
xchg
aad
xchg
jle
aad
push
push
jb
mov
xor
pop
dec
fisubl
jnp
lea
jle
fistps
inc
movsb
andl
fmuls
jg
in
adc
fdivr
fwait
divl
incl
sub
xchg
dec
mov
loopne
ret
pop
mov
stos
repnz
insb
and
sbb
push
les
incl
mov
add
ja
movsl
sbb
lahf
repz
lock
mov
sub
jno
mov
and
pop
jb
mov
push
test
mov
int
mov
push
dec
jmp
hlt
push
leave
lock
push
xchg
mov
inc
into
fidivrl
add
orb
dec
repnz
jo
push
movsb
fsubr
out
addl
imul
sbb
xchg
cmp
adc
push
lcall
orb
leave
dec
and
ljmp
test
mov
shll
leave
popa
orb
hlt
cmp
mov
push
out
adc
andb
lret
ret
push
test
cmp
push
dec
lahf
rorb
mov
imul
xchg
xchg
int3
movmskps
or
cmc
xchg
sbb
decl
xchg
cmpsb
ret
xor
ljmp
sub
or
int
and
call
cwtl
adcb
ret
mov
cmp
mov
push
sub
sbb
imul
outsb
out
xor
sub
int3
sahf
mov
fdiv
and
clc
push
push
dec
movsb
das
adc
sub
push
adc
xchg
shll
addb
sub
xchg
incb
cld
pop
into
xor
adc
leave
jge
mov
mov
insb
rorl
sbb
inc
bswap
mov
cmpb
arpl
loop
out
popa
div
addr16
insb
js
cmp
dec
dec
xchg
jecxz
xchg
sbb
loopne
lahf
dec
cmp
mov
lock
mov
aas
nop
and
das
in
pusha
mov
ret
in
rolb
jmp
fsts
pusha
adc
cmp
fcmovb
je
dec
popf
xor
push
test
pop
pop
sub
xlat
hlt
jecxz
adcb
xor
stos
cmp
push
mov
fcoms
xchg
repnz
lret
cld
push
add
popa
pushf
jge
sahf
inc
fisttpll
cwtl
xchg
xchg
pop
mov
imul
xchg
or
jae
subl
decl
rolb
inc
lahf
mov
inc
or
outsl
jl
mov
popf
mov
push
mov
gs
imul
cs
inc
sbb
inc
inc
xorl
enter
sub
jo
sbb
js
jne
push
stc
jl
push
rcll
inc
loop
shll
push
insb
xchg
xchg
cmp
bsf
jb
or
cmp
into
mov
fwait
data16
and
in
cmp
bound
arpl
push
je
mov
cmp
and
add
ret
sar
add
aaa
mov
add
imul
and
sub
daa
loope
cmpb
add
or
btc
test
or
fists
arpl
cmp
aaa
addb
js
inc
imul
dec
je
sub
hlt
inc
outsl
shrl
pop
or
cltd
push
aam
bound
xor
sbb
add
sbb
ss
push
sub
dec
or
andl
or
bound
adc
rol
dec
daa
test
jge
test
cli
test
cmp
in
sub
stc
push
js
jbe
out
push
or
in
mov
shrb
loope
out
test
inc
cmpsb
mov
xchg
jo
xor
push
insl
aas
and
lret
lods
push
xchg
jnp
push
sub
mov
add
adc
sub
out
or
jae
push
cld
sbb
clc
or
mov
lods
jno
stos
sbb
in
frstor
mov
inc
jmp
outsl
cmpsl
cmp
dec
arpl
ljmp
push
rcrl
loopne
xchg
enter
jge
hlt
sbb
sub
add
fsubs
pop
aad
xor
push
shlb
mov
mov
mov
xchg
xchg
mov
mov
int
mov
popa
insb
sarb
xchg
push
jnp
cmpsb
fdivs
cli
pop
cs
fsts
add
adc
push
dec
jnp
add
xchg
je
lods
lret
pop
cltd
fidivl
sbb
inc
adc
mov
shr
out
repz
out
sahf
fistpll
es
imul
sbb
jl
test
arpl
push
xor
inc
out
adc
clc
mov
push
stc
xor
test
xor
shrb
xchg
xor
push
inc
mov
xor
pop
or
loopne
daa
dec
fdiv
imul
dec
icebp
mov
js
sarl
cmp
aam
scas
push
xor
cmpsb
push
mov
and
mov
aaa
xchg
icebp
rolb
add
cmp
dec
xchg
dec
dec
bound
jae
mov
jmp
lret
push
mov
push
in
fiadds
addr16
and
sbb
sbb
iret
cld
mov
sub
sahf
stc
xchg
adc
mov
sbb
inc
adc
enter
inc
ja
adc
xor
inc
jbe
jp
adc
es
fldt
ds
mov
jecxz
es
xchg
aam
cmp
adc
in
adc
js
jnp
push
cmp
jmp
test
xor
ja
push
fstpt
loopne
mov
xor
jecxz
scas
sti
out
jnp
in
dec
jp
mov
push
scas
pop
cmc
jl
ljmp
add
sbb
fwait
add
cmpsl
xchg
dec
ja
xor
pop
and
rolb
sahf
mov
push
adc
xor
sub
lcall
add
push
out
add
gs
addr16
repnz
push
mov
addb
mov
aaa
clc
addr16
mov
add
xchg
pop
jge
dec
imul
sbb
in
push
lods
mov
test
jecxz
testb
sbb
cmc
inc
inc
adc
or
das
in
mov
cmpsb
push
adc
movsl
insl
mov
loope
cmp
out
fadds
inc
aad
lock
adc
lods
mov
lcall
or
jns
fimull
sbb
ficoms
pop
xchg
pop
or
jmp
sbb
lea
sbb
xchg
pushf
mov
loopne
add
dec
lock
push
jge
add
in
mov
mov
or
adc
mov
sbb
inc
fisttpl
dec
mov
xchg
popa
mov
or
inc
imul
loope
inc
mov
repnz
cwtl
inc
and
sub
adc
test
add
push
mov
or
ret
add
xchg
das
or
mov
xorl
push
fisttpll
sub
scas
and
insl
push
cmpsl
adc
das
out
cmc
outsb
dec
mov
push
hlt
cmpsl
setns
imul
mov
push
lds
lret
and
dec
adc
xorl
hlt
insb
xchg
jne
fdivs
into
imul
sub
hlt
fs
fmull
les
jo
scas
std
stos
adc
adcl
and
mov
mov
jmp
repnz
adc
mov
pop
mov
mov
lock
movb
xchg
aam
ret
adc
xor
fcom
out
mov
adc
dec
insl
add
push
add
xchg
int
test
test
das
fnsave
sub
aaa
and
add
inc
clc
adc
or
leave
adc
cld
adc
cmp
jge
adc
jg
and
ret
cmpsb
jbe
add
mov
jmp
sbb
aad
incl
mov
cmp
push
adc
loope
rcll
clc
cmp
int
popa
sub
mov
lret
and
aaa
daa
ljmp
pop
mov
lock
lock
or
mov
mov
and
lock
xchg
lock
mov
sbb
xchg
popl
fs
cwtl
dec
sarl
pop
out
pop
jbe
lahf
sub
mov
test
lods
sbb
xor
movsl
icebp
xchg
call
pop
sbb
inc
sti
jmp
test
test
adc
ret
sahf
adc
add
pushf
inc
add
xchg
inc
shlb
decb
adcb
test
loopne
mov
inc
mov
insl
add
cmp
fbstp
add
add
stos
jnp
mov
divl
es
cmp
xor
cmpsl
insl
dec
mov
cmpsb
ret
cmp
push
push
xchg
aam
lds
test
adc
clc
aas
xchg
pop
loop
imul
subl
imul
repz
mov
lret
jnp
mov
test
add
xchg
pop
dec
sub
gs
mov
sub
addr16
roll
mov
push
call
and
sub
adc
add
xchg
stc
orb
xchg
mov
mov
gs
dec
es
in
lret
xor
mov
push
inc
add
mov
sub
rol
push
ss
pop
dec
repnz
or
push
and
shl
cmp
bound
rcrl
movsl
and
inc
ljmp
lret
out
sbbb
xor
and
push
les
push
lock
sbb
shll
sub
jns
les
rclb
jg
mov
mov
sar
movsl
inc
cmp
cmp
cmpsb
jne
pop
push
leave
mov
xchg
jmp
lods
inc
scas
lock
pop
clc
rcrl
adc
add
hlt
fadds
mov
pusha
arpl
adc
rclb
mov
mov
xor
sbb
and
imul
inc
pop
xchg
movhps
outsb
sarl
xor
jae
and
rol
rorb
clc
mov
xchg
sub
loop
test
pop
enter
add
xchg
popf
and
adc
dec
gs
pushl
enter
mov
ljmp
and
daa
mov
cmp
lods
dec
push
pop
jo
clc
lea
mov
add
cmp
test
cltd
cmp
orl
adc
insl
jecxz
jb
cltd
jmp
mov
or
adc
mov
sub
jp
sub
pop
dec
hlt
sub
mov
rcll
inc
mov
add
mov
adc
adc
cmpsb
xor
mov
int
or
cmp
shr
movsl
inc
daa
add
mov
jmp
movsl
out
pop
into
mov
and
repz
out
cs
pop
arpl
lods
xor
adc
pop
pop
jl
ffree
sub
xchg
dec
mov
outsb
or
fwait
clc
xorb
push
adc
adc
loop
fbstp
push
xor
jno
jnp
imul
ficoml
into
in
sbb
pop
mov
jae
dec
sbb
inc
in
or
mov
stc
and
dec
icebp
cld
and
add
xor
mov
inc
inc
jmp
pusha
mov
sbb
lret
and
and
pop
jmp
stc
ficompl
push
cmp
outsb
xchg
cmc
stos
dec
daa
sub
shld
inc
adc
je
push
sbb
je
in
lods
xchg
popf
inc
orb
dec
adc
js
insl
fmull
add
jo
inc
add
mov
jns
push
nop
adc
in
or
push
or
mov
push
xor
rorb
cmp
sub
sub
aam
adc
or
or
mov
push
dec
jae
mov
ficoms
test
add
scas
inc
sahf
adc
mov
les
mov
pop
test
sbb
icebp
dec
fs
jno
jo
loope
dec
ss
lods
and
testb
sahf
sbb
lods
mov
mov
aad
mov
sbbl
pushf
adc
inc
int3
outsl
or
inc
pop
movsb
sahf
sbb
dec
inc
js
lahf
nop
int
fstps
cld
imul
push
rcrl
xor
jne
pop
cmp
jbe
xchg
leave
ret
test
or
adc
adc
sti
mov
push
stc
cmp
nop
sbbl
jmp
stc
cli
sarb
insl
cmpsb
add
xchg
fwait
stos
stos
xor
xchg
sbb
cmp
icebp
lods
mov
xor
cmc
nop
mov
jne
xor
add
adc
xor
fnsave
xchg
fidivrs
js
xchg
jmp
in
sti
mov
push
mov
jo
inc
mov
cmpsl
insl
and
popl
inc
movsl
daa
fdivp
js
mov
mov
scas
pop
mov
sbb
das
inc
push
xor
into
and
arpl
enter
rolb
pop
or
imul
xor
ss
es
imul
xchg
addr16
stos
shlb
data16
adc
rcr
in
imul
movsb
aaa
into
lods
scas
mov
loope
fiaddl
rcll
shll
int
xchg
pop
lds
aam
out
movsl
addl
aad
lret
ficomps
jb
push
mov
dec
dec
int3
fwait
insl
push
push
xor
scas
or
jecxz
and
push
xchg
inc
sub
imul
lods
sbb
icebp
nop
cmp
adc
cmp
popa
subb
sahf
sarl
cltd
jno
das
jge
or
shll
pop
sub
xor
inc
xchg
mov
pop
dec
or
pop
xchg
cmp
andb
jmp
adc
xor
push
je
mov
rcl
shl
adc
sub
lods
mov
cltd
pop
mov
mov
adc
mov
shll
and
scas
aam
stos
jg
btr
sbb
or
add
outsl
loop
es
jg
cltd
jbe
and
or
xchg
xchg
mov
mov
inc
test
addl
orl
cs
in
inc
mov
jnp
pop
xchg
fldl2e
mov
add
loope
add
add
mov
mov
ret
mov
and
sbb
cmp
and
mov
int
into
push
push
out
daa
fs
das
push
leave
lret
inc
lds
movsl
jl
xor
outsb
and
mov
cmp
ljmp
mov
shlb
orb
adc
mov
xchg
out
xlat
adc
outsl
repnz
pop
and
and
and
push
cwtl
aaa
mov
jne
xlat
or
inc
pop
mov
fs
scas
sbb
addb
aad
mov
in
jns
loope
jne
or
sbb
pop
fstpl
xor
add
lds
cmp
add
mov
jbe
and
add
dec
mov
out
andl
fwait
pop
pop
fidivrl
popa
pop
in
push
gs
out
loop
jp
xchg
xchg
pushl
pushf
ret
lods
xchg
pop
push
sbbb
rorl
xchg
mov
jno
test
loop
xlat
bound
ret
push
sbb
ret
jnp
push
push
out
and
bound
inc
inc
sub
rcll
fstps
cmp
call
test
inc
lret
sbb
cmc
test
sbb
jno
jecxz
jmp
fiadds
add
add
jae
add
in
out
iret
jg
cmc
dec
sbb
or
stos
popa
mov
push
cmpsl
add
pop
inc
sub
sbbl
sbb
lods
sub
idivl
lcall
jmp
adc
pop
xor
fdivs
or
bswap
add
icebp
sarb
loop
aam
leave
inc
enter
lea
inc
punpckhdq
jae
mov
sbb
xchg
inc
ljmp
jne
repnz
pop
xor
mov
sub
inc
and
fcoms
mov
clc
clc
adc
jmp
pop
jmp
arpl
lock
shrb
xor
and
and
push
dec
sub
jne
and
sbb
adc
add
sbb
add
call
adc
roll
push
mov
xchg
jno
pop
mov
js
and
lahf
aas
push
ficoml
and
pushf
adc
xorl
pop
push
add
ss
xor
movsl
pinsrw
mov
lods
add
push
cmp
lods
adc
mov
test
xor
push
enter
loope
inc
or
cmp
pop
sarb
into
sti
pop
movb
iret
pop
dec
mov
rolb
inc
inc
ret
inc
jge
dec
inc
sbb
daa
and
shlb
lock
and
shl
gs
imul
cmc
jg
pushf
inc
xor
pop
cmp
hlt
ret
rclb
ret
dec
sub
ss
sub
cmovle
mov
dec
pop
gs
sbb
cmc
leave
popl
out
xchg
jge
sub
icebp
push
pop
sub
gs
xor
in
adc
fdivrp
push
lea
pop
or
mov
stc
xor
sub
andl
imul
lahf
cmpsb
adc
jecxz
sub
test
lret
fwait
sbb
repz
clc
pop
adc
and
sbb
unpckhps
add
fwait
sbb
hlt
popf
imul
stos
pop
popa
pop
test
aas
enter
add
dec
pop
andb
mov
divl
fs
sub
hlt
jecxz
mov
fcmovne
jae
rcll
xor
add
mov
cmp
mov
jb
scas
pop
and
and
adc
cmpsl
dec
mov
shl
loopne
in
popf
xor
subl
add
pop
out
adc
fdivs
jne
or
sbbl
adc
ljmp
jg
aam
mov
es
stc
mov
inc
sbb
and
sbb
sbb
xor
sub
shl
loope
adc
fwait
mov
sbb
bound
popl
sahf
sub
shrl
test
fs
int
pop
insb
shlb
inc
add
mov
cmp
lcall
pop
fwait
aas
push
sub
mov
pop
rorl
add
imul
push
out
inc
push
ss
je
das
stc
add
lret
or
pop
add
cmp
or
in
lahf
pop
filds
and
cmp
add
out
or
mov
je
sub
clc
shr
sbb
and
and
and
add
arpl
mov
outsl
adc
cwtl
jmp
cmpsb
rcrb
sbb
add
fidivrs
cmc
and
cltd
mov
and
sbb
ss
xlat
mov
sarb
dec
pop
enter
fs
jo
daa
cmp
movsl
jl
insl
push
loope
pop
in
mov
dec
orl
pop
cmp
fcoml
jmp
add
lea
js
pop
ret
mov
inc
inc
and
in
xor
movl
in
xor
pop
push
xor
and
inc
imul
daa
sahf
adcl
test
mov
lret
data16
push
pushf
lahf
inc
cmpl
xor
arpl
test
rol
jp
aam
test
mov
inc
inc
adc
insl
mov
into
lock
cmp
imul
adc
adc
into
movsl
fwait
and
pop
movsb
push
push
rcrl
out
inc
or
jl
mov
or
pop
xor
fisubrl
ljmp
jne
xlat
lahf
xor
push
inc
xor
mov
mov
or
sub
dec
inc
ss
test
orl
arpl
mov
inc
addr16
dec
mov
rcr
jns
mov
or
add
add
jmp
ljmp
mov
jb
pop
and
mov
in
sub
movsl
adc
mov
and
ficompl
or
xor
rolb
leave
pop
shrl
dec
cmp
scas
cmp
cmp
sahf
outsb
push
cmp
or
aad
insb
lcall
pop
roll
mov
add
scas
jnp
and
push
sbb
adc
out
into
dec
popf
xor
xchg
in
loopne,pt
stos
pop
mov
and
xchg
push
push
push
test
cmp
addl
subl
push
mov
mov
les
test
mov
mov
sub
xor
jb
repz
ja
sub
movsl
nop
ljmp
xor
testl
subl
xadd
adc
mov
aad
dec
adc
xchg
out
xchg
cmc
and
ds
or
pop
inc
mov
into
jnp
je
xchg
push
cli
cmp
xor
popf
outsb
xchg
ret
mov
stc
xor
aam
popf
mov
inc
mov
pop
pop
mov
stc
inc
xchg
aad
js
ja
gs
test
push
lcall
jnp
js
pop
lea
lcall
adc
jp
loop
cmp
lea
cwtl
add
jbe
jmp
iret
loopne
popf
adc
sbb
js
insl
adc
fistpll
rcrb
lret
movb
into
test
rorl
jmp
popa
xchg
xorb
push
fmul
in
nop
cmp
leave
push
popa
iret
mov
imul
cld
mov
movsl
jne
in
push
jbe
scas
mov
adc
xchg
mov
xor
adc
push
pop
jno
adc
push
inc
les
movsl
sbb
sbb
sbb
jne
test
add
es
add
mov
mov
aas
sub
sbb
insl
xor
push
jmp
inc
add
sub
jmp
ja
and
pop
lock
jns
jecxz
mov
hlt
ja
outsl
fwait
add
dec
fnclex
aaa
adc
and
fiaddl
dec
mov
js
inc
loope
ss
mov
inc
dec
add
pop
sub
jmp
dec
sbb
add
dec
mov
lea
cmc
in
outsb
mov
rorl
clc
cli
inc
cmp
mov
add
loope
js
pop
pop
mov
inc
int
jecxz
or
nop
xchg
push
add
push
repz
or
pop
inc
xor
dec
sub
out
aam
imul
mov
jle
outsl
dec
int
popa
rcr
ljmp
dec
xchg
add
jle
stos
iret
icebp
inc
push
aam
push
jo
dec
mov
sbb
push
aam
sbb
pop
push
pop
mov
repz
gs
dec
xchg
adc
dec
movl
pushl
mov
mov
test
jne
pcmpgtb
dec
jmp
inc
hlt
mov
bound
jge
rcrb
add
xchg
mov
scas
daa
gs
iret
adc
sub
or
cmp
arpl
int3
dec
shlb
jge
jecxz
and
sbb
jns
iret
xchg
js
in
jmp
mov
int
stc
xor
jns
leave
jae
mov
add
push
shl
push
call
js
test
jge
lods
test
pop
mov
mov
stos
gs
mov
mov
jge
push
int
xchg
in
movsl
sub
popa
js
pop
inc
test
js
mov
and
hlt
jmp
mov
pop
cmp
int
mov
inc
pop
add
pop
or
cltd
insl
ss
lock
std
in
cwtl
incl
add
das
add
sub
movsl
or
lret
fidivl
mov
push
pop
aas
pop
cli
jno
jno
loope
cltd
adc
jmp
add
dec
pop
mov
add
pop
sbb
pop
xchg
cmp
sbb
xchg
add
sbb
push
mov
stos
lods
outsl
loopne
jmp
jl
shll
lock
cmp
in
xchg
cmp
or
inc
imul
icebp
lret
xchg
pop
rcl
xchg
js
cmc
pushl
and
loopne
les
ljmp
inc
sbb
sub
push
push
int
sahf
ja
mov
and
stos
mov
mov
add
mov
ljmp
xchg
push
add
inc
xchg
loope
cmovle
sti
arpl
cmp
stc
mov
gs
je
dec
mov
in
jecxz
sub
and
or
mov
sbb
iret
jp
cltd
xor
out
mov
lea
adc
mov
mov
push
mov
aaa
std
decb
movsl
pop
movl
fwait
aaa
sbb
sbb
repz
cmp
dec
mov
or
lock
jbe
sbb
xor
fimull
in
rcrb
ret
adcl
jae
popa
pop
push
and
dec
mov
test
mov
cltd
jmp
xor
adc
test
mov
insb
sbb
sti
out
mov
mov
cld
cmp
roll
shll
jl
pop
dec
pusha
lock
xchg
xor
stc
outsb
popa
push
mov
cmp
jmp
shr
mov
test
icebp
xor
push
daa
roll
dec
gs
jg
push
or
and
add
dec
repz
repnz
mov
mov
bound
std
stc
add
cli
cmp
adc
pop
leave
add
gs
dec
cmp
add
xchg
cli
outsb
icebp
pop
aam
not
pop
test
mov
pushf
pushf
insb
push
mov
mov
shlb
pop
push
adc
cmpsb
filds
mov
sub
mov
outsl
rorb
fwait
jecxz
inc
inc
adc
movsb
cmp
loop
insb
dec
sbb
and
sahf
mov
popf
inc
fwait
or
sti
shrl
popf
add
stos
sub
iret
enter
call
mov
sub
gs
sub
push
or
lea
mov
arpl
xchg
mov
or
xor
push
sub
add
loopne
lcall
or
gs
outsl
jp
in
roll
jge
adc
or
pop
xchg
sub
lret
adc
fiadds
inc
cld
adc
push
clc
loop
dec
mov
movl
mov
cmpsl
mov
addr16
xchg
in
lods
adc
jmp
add
xchg
mov
out
jg
fistl
mov
call
pushf
sbb
xchg
and
cmpsl
imul
sbb
out
sbb
sbb
scas
add
jmp
and
mov
out
mov
out
rolb
mov
addl
cmp
inc
movsl
loope
cmp
cld
add
das
icebp
cmp
sbb
mov
ficoms
les
xchg
push
pushl
call
mov
inc
mov
fcmovnb
add
sbb
inc
mov
movsb
xor
jb
jmp
sbb
inc
mov
push
push
pop
sahf
imulb
push
mov
mov
xor
adc
sbb
mov
aad
cld
inc
adc
mov
xchg
and
add
cli
fwait
pop
stc
adc
out
cmp
sub
push
inc
into
add
stos
pcmpeqb
dec
clc
aas
int3
pop
lds
rolb
or
rcl
jg
clc
psubb
popa
mov
cmp
xor
les
ret
jl
testb
aaa
loop
mov
and
jle
adcl
and
xor
adc
pop
pop
push
incl
jl
cmp
add
fdivl
inc
or
ret
mov
sbb
mov
enter
push
leave
push
lcall
cwtl
lods
mov
jecxz
sub
scas
sbb
mov
lock
xor
jae
add
clc
movq
mov
mov
and
call
sahf
imul
cmp
ftst
xchg
add
sbb
xor
add
movsl
scas
mov
in
xlat
xor
xchg
ja
pushf
mov
push
popa
push
jne
adc
xchg
aad
lods
icebp
xchg
xchg
lahf
push
push
adc
bnd
cld
int
stos
inc
mov
add
js
ret
xor
aaa
loopne
lea
xorb
push
xor
dec
cwtl
inc
push
je
cmc
cmp
pop
sbb
jne
pop
jno
sbb
loope
cld
je
mov
popf
les
fsubrs
mov
es
outsl
cld
repz
stos
mov
subl
aad
mov
inc
lret
inc
adc
addr16
jnp
mov
mov
pushf
push
cmpsb
xchg
pop
pushf
cmp
call
sti
and
stc
add
pop
jb
popa
xchg
ret
imul
add
mov
stc
cmp
push
sar
pop
jb
es
add
ljmp
rcrb
cwtl
mov
add
xchg
jmp
hlt
test
dec
and
sbb
out
lock
pushf
mov
dec
stc
dec
aas
inc
addl
fs
ja
pop
and
insb
dec
cld
or
ss
loopne
xor
push
cwtl
and
in
hlt
test
cmp
push
mov
pop
loopne
in
add
lock
and
test
xchg
push
pushl
dec
mov
xchg
inc
repnz
ret
lahf
sbb
loopne
fimuls
push
test
fmull
jg
pop
jl
adc
xor
cwtl
pop
pop
or
mov
adc
or
add
or
filds
shl
push
lds
jo
xor
add
or
mov
out
pop
repnz
in
leave
jnp
popf
pop
cli
push
bound
add
push
pop
rcr
mov
inc
lahf
loopne
mov
clc
clc
scas
push
outsl
mov
cmp
cmp
adc
pop
sti
dec
shl
lcall
sub
xchg
mov
imul
cmp
in
ss
pop
fiadds
sbb
jle
lock
cld
mov
mov
rolb
sarb
jmp
aad
adc
xor
fdivl
femms
sub
jge
test
ret
lcall
dec
test
dec
jne
add
pop
pop
iret
pop
decl
or
daa
xchg
loope
loope
int
inc
inc
bnd
inc
mov
mov
mov
ret
pop
xor
imul
test
lret
or
xchg
popa
or
hlt
mov
rorl
sbb
cmp
loop
lea
cld
push
add
jae
push
cmp
movsb
int3
shrl
lods
ljmp
and
jle
cmp
push
add
int
call
mov
out
roll
push
adc
imul
fwait
rsqrtps
cmc
mov
jg
repz
ss
fs
mov
mov
mov
push
cmpsb
add
orb
push
sbbb
out
dec
cmpsb
mov
loope
pusha
add
sbb
mov
xor
and
fs
add
cmpsl
cli
in
mov
xchg
adc
and
jp
sahf
aaa
cwtl
fildll
nop
jp
lock
xor
jbe
pusha
jo
fstps
and
pop
mov
add
pop
into
adc
in
jnp
mov
and
stos
test
dec
adc
sub
call
in
fwait
arpl
adc
movl
pop
dec
rclb
shlb
imul
dec
jmp
decl
shr
cmpsl
pop
sbb
orl
popa
repz
jge
std
lods
mov
pop
sarl
xorb
pusha
test
insb
imull
cwtl
push
mov
lea
mov
aam
jmp
hlt
lahf
adc
jbe
adc
out
icebp
shrb
test
push
push
mov
aas
mov
add
popa
pusha
mov
sub
in
ljmp
add
sub
jp
mov
jl
popa
movsb
sbb
out
or
mov
xor
jno
orb
loope
jl
mov
xor
decl
sub
int
sbb
popf
mov
flds
inc
shrb
inc
sarl
adc
clc
pop
mov
sahf
pop
jle
sbb
icebp
or
pushl
icebp
in
inc
scas
mov
inc
push
outsb
lods
lea
ss
cmpsl
loop
imul
mov
mov
je
filds
cwtl
and
mov
cmp
pop
jecxz
xchg
pop
jmp
xchg
aas
push
sbb
sbb
inc
out
cli
mov
jno
imul
lcall
cwtl
sub
cs
jecxz
mov
cwtl
popa
sub
mov
ret
cmp
cmp
pop
jo
mov
or
ficompl
pop
dec
dec
mov
dec
ljmp
cmp
sbb
add
push
push
fwait
arpl
dec
mov
ret
decl
test
mov
test
clc
dec
sar
repnz
les
add
mov
xor
sub
mov
rorb
xchg
push
into
or
aam
scas
cmp
add
mov
sub
std
dec
sub
hlt
cli
das
inc
loopne
test
mov
mov
cli
xor
jecxz
test
cmc
jo
mov
mov
es
rol
pop
mov
dec
lds
push
fsubp
lock
cmc
mov
sub
dec
movb
pop
sbb
xchg
rorb
repz
out
push
fs
orb
incl
imul
push
jecxz
and
nop
adc
add
sbb
fisttps
fldenv
rorl
jg
test
je
ljmp
xchg
cmp
inc
sbb
add
or
scas
xchg
jno
shrb
out
xchg
outsl
fldl
loopne
loopne
inc
xor
lock
aas
mov
xchg
jno
cmpsl
addr16
call
mov
popf
orl
inc
jno
notl
inc
add
lds
cld
dec
pop
ret
iret
cmp
xchg
add
jle
mov
notb
sbb
inc
push
lcall
movsb
xlat
cmpsl
mov
test
adc
mov
mov
pop
add
or
cld
pop
sbb
dec
jno
repnz
add
sbb
std
and
jns
jbe
jbe
sub
sbb
cmpsb
jbe
jp
arpl
sub
cmpsl
outsl
cmpsb
or
sub
pop
lock
aas
cli
mov
and
add
sub
fidivs
in
hlt
jae
addr16
adc
inc
sar
sub
jg
lods
or
repnz
out
and
inc
inc
outsl
xchg
adc
hlt
pop
mov
jnp
dec
enter
lea
mov
pusha
xchg
mov
cwtl
outsl
in
xor
dec
mov
fimuls
ror
shlb
fildl
add
push
movsb
jb
out
lea
sahf
mov
in
icebp
and
sbb
shrb
xor
pop
pusha
cmc
incl
into
add
ljmp
and
loope
movsl
pop
lea
rep
sub
push
cmp
jecxz
xchg
mov
mov
push
roll
lods
pop
aam
xchg
xchg
pop
jne
test
xchg
scas
scas
test
jae
lock
mov
addr16
insb
incb
lock
cmp
adc
jge
jp
dec
push
loop
sbb
sahf
push
outsb
jmp
cld
mov
pop
test
inc
jp
pop
roll
push
pushf
std
stos
xchg
inc
into
or
pop
jg
jmp
push
outsl
mov
stos
or
jbe
pop
cmp
pushf
cld
inc
add
pop
push
mov
xchg
cli
adcl
or
mov
popa
shll
xchg
add
xchg
dec
sub
or
add
ja
es
cmp
lds
daa
call
aas
mov
sub
pop
test
dec
pop
loope
add
sbbb
pop
or
mov
inc
pop
pop
popa
shrl
test
xor
cmp
je
xchg
sbb
insb
leave
pop
pushf
adc
xchg
xchg
setbe
dec
ja
mov
jl
jmp
push
push
jae
jo
cmp
mov
test
das
jbe
loopne
rcrl
fs
mov
mov
sbb
lea
aam
rolb
shlb
subl
dec
sbb
jne
std
adc
outsl
mov
ret
dec
push
push
adc
and
jmp
and
imul
lret
stc
call
ljmp
pop
pusha
cmp
push
fmul
stos
push
mov
push
xchg
int
dec
jb
js
fdivl
mov
loopne
rorl
test
dec
insl
inc
and
push
inc
pop
xor
and
jle
mov
aaa
pop
std
daa
cmp
les
mov
or
push
sub
cld
mov
adc
js
pop
dec
mov
mov
dec
arpl
cmpsb
dec
jb
jg
mov
inc
in
xchg
loopne
jmp
je
jmp
lcall
loope
xor
stos
push
or
lcall
pushf
cli
xchg
stc
and
arpl
lods
inc
in
xor
shl
cmp
mov
ljmp
push
dec
adc
data16
adcl
and
pop
cld
ljmp
test
std
into
fs
outsb
add
aam
nop
lock
cmp
mov
scas
test
test
cmc
mov
ret
shll
ss
add
push
add
repnz
test
outsl
push
test
jmp
stos
testl
sbb
xor
stos
scas
and
cli
jge
add
inc
add
sbb
jo
or
clc
ret
cmp
imul
aam
add
lahf
mov
cmc
xor
cmc
or
out
cmp
adc
push
sarb
scas
pusha
mov
mov
sarb
daa
jns
push
addb
adc
jle
popa
loop
sbb
loop
rclb
push
js
arpl
setge
loope
add
add
add
cwtl
enter
inc
push
test
jg
jle
je
movsb
pop
sub
adc
adc
xor
or
xchg
push
js,pt
sub
insl
in
movsb
xchg
dec
xchg
add
cmpsl
adc
push
cli
cli
jns
out
aam
xchg
mov
rcrl
call
fmull
clc
push
fistpll
and
adc
mov
dec
pusha
mov
cmp
subb
pop
inc
dec
jp
lea
add
mov
push
clc
or
add
push
or
js
lret
fadds
cmp
push
out
fldt
test
frstor
sub
rolb
sbb
push
cmp
pop
stos
sti
mov
cwtl
or
inc
cmpsb
pop
jo
jg
cmp
roll
xlat
xchg
iret
and
inc
jecxz
cmp
add
movsb
dec
or
add
sbbb
cmovle
fistpl
and
pop
out
mov
test
adc
adc
mov
mov
mov
and
mov
dec
inc
sub
adc
ja
jne
pop
jp
cmpsl
sbb
mov
cmpb
sbb
pushf
inc
inc
mov
mov
and
push
outsl
shll
add
loopne
push
cmp
lret
sbbl
sarl
push
adc
sbbb
cmp
inc
in
shlb
adc
pop
add
and
push
sub
dec
int
push
vhaddps
xchg
mov
pop
mov
xchg
outsb
mov
xor
fwait
rorb
cltd
mov
mov
sub
jmp
imul
inc
arpl
and
lret
daa
mov
andb
xorb
cwtl
test
lret
lret
mov
ljmp
out
or
dec
mov
xchg
adc
orl
andl
stos
rcr
lcall
lcall
ds
dec
add
bound
push
es
iret
out
and
inc
mov
enter
and
or
push
jecxz
jp
or
and
lahf
mov
enter
je
sub
mov
mov
mov
pop
sub
les
sbb
push
mov
sub
ss
es
mov
jae
fldt
fldcw
push
pop
icebp
jnp
leave
push
xchg
je
pop
or
test
adc
scas
test
lahf
hlt
scas
xchg
lret
inc
dec
xor
add
aam
jle
aas
movsb
sbb
enter
lods
out
mov
dec
popa
stc
adc
daa
dec
xchg
xchg
stc
pop
scas
andb
in
iret
pop
dec
add
lock
adc
das
and
sbb
fildll
mov
mov
adc
adc
cli
and
dec
mov
cmp
jle
mov
push
jb
fcmovb
outsl
sbb
mov
or
xchg
dec
loope
dec
and
icebp
shlb
cmpsb
sub
insb
push
or
sbb
inc
add
dec
dec
addb
stc
lds
cmc
jnp
inc
out
push
test
int3
mov
pop
xor
sbb
in
xchg
psubb
fcompl
xor
iret
test
mov
inc
inc
adc
popa
mov
arpl
jbe
mov
mov
nop
jg
fmuls
add
xchg
xchg
xchg
or
inc
inc
and
sbb
xor
movsl
jbe
mov
jo
jl
mov
mov
push
loop
dec
and
or
int
or
lods
adc
pop
cmpsb
and
mov
cmp
lods
pop
in
pop
jle
js
rcrl
pop
scas
out
inc
test
in
dec
ret
shr
jp
outsl
pop
std
push
adc
es
aam
mov
inc
dec
add
pop
pop
xchg
mov
imull
loope
rclb
xor
pop
sbb
std
xor
loop
xor
fisttps
add
test
out
dec
xor
cltd
call
out
mov
es
inc
jae
dec
add
mov
stos
je
xor
lods
dec
sub
jecxz
dec
scas
xchg
outsb
ret
xchg
sahf
popf
addl
fldl
loop
shlb
fsubrp
clc
movsb
loopne
adc
ljmp
sbb
pop
or
into
sub
mov
lock
inc
ret
adc
in
add
pop
sub
mov
adc
xlat
dec
lea
lods
lock
ret
mov
jmp
cmp
bnd
push
pop
jno
leave
mov
popa
xchg
pop
or
adc
fistpl
inc
cmc
mov
or
mov
xor
mov
push
mov
cwtl
mov
in
add
punpckhwd
push
sub
jl
and
fisubs
push
adc
pop
shrb
bound
das
mov
cltd
loope
ficompl
add
xor
loop
movsl
sub
cmp
std
mov
inc
leave
outsb
lds
pop
loope
dec
leave
or
dec
dec
add
arpl
addr16
stc
js
jmp
repnz
ss
jnp
idivb
mov
inc
mov
or
sub
jae
repz
dec
fdivs
rolb
imul
in
pop
stos
test
fdivl
mov
cwtl
jp
nop
les
repnz
mov
jne
outsl
or
lret
sbbl
xlat
cmp
arpl
fwait
aam
ljmp
xor
loope
add
pop
insl
test
add
js
cli
mov
in
mov
aad
add
dec
push
mov
cmpsl
push
stos
mov
xor
ss
sbb
mov
cmpsl
je
jle
js
sub
inc
ret
movsb
in
push
inc
movsb
and
push
adc
gs
adc
jecxz
push
sbb
push
cmp
sbb
xchg
pop
jns
inc
jne
ret
roll
testl
shll
adc
pop
popa
cmp
fsub
and
mov
mov
test
shrl
in
xchg
movsl
cli
insb
mov
test
sti
and
pop
imul
xchg
sub
cld
xor
adc
inc
push
vmwrite
into
pop
inc
push
add
push
repz
test
cmp
pushf
shll
gs
pop
push
jmp
mov
lods
jns
add
xchg
jo
in
orb
pop
and
gs
adc
mov
mov
fistl
and
gs
cli
dec
jmp
shl
sbb
inc
fs
inc
mov
imul
and
push
sbb
pop
push
loop
addr16
mov
and
dec
loope
sbb
mov
dec
ljmp
pusha
sarl
jg
arpl
or
inc
mov
loopne
fdiv
sub
pop
xlat
add
lods
insl
or
adc
mov
or
add
xchg
jp
ds
sbb
cmp
push
jle
fistps
xchg
lds
push
fldln2
pop
ret
xor
sbb
mov
adc
mov
clc
aaa
loopne
setb
cwtl
mov
fsubs
lock
lock
and
mov
push
xchg
aas
sbb
aad
pop
fisttpl
xchg
push
bound
into
cs
jno
mov
je
mov
mov
sbb
out
rolb
or
xchg
loope
cmc
xchg
fwait
outsb
popa
rorb
xorb
mov
fwait
mov
sbb
add
icebp
mov
in
loopne
cmp
cmp
xor
xchg
mov
adc
out
xchg
divl
outsb
xchg
dec
lods
add
filds
jmp
jb
rorb
inc
and
icebp
jmp
dec
popa
sbb
add
mov
mov
add
fs
sbb
fwait
leave
push
cwtl
sub
jecxz
cmpsl
and
or
and
adc
pop
xchg
jo
xchg
adc
add
cmpsl
add
shrl
les
hlt
mov
inc
mov
je
push
dec
out
jmp
stos
pop
hlt
or
push
xor
cmp
inc
lret
xchg
push
fstpt
push
insb
decl
push
in
mov
test
in
lock
sbb
cmp
out
mov
clc
je
inc
xchg
pusha
mov
adcl
mov
sub
xchg
loopne
inc
aaa
int
pop
fidivrl
rolb
or
sahf
sub
push
lcall
stc
push
sub
add
xor
icebp
adc
add
pop
push
nop
jg
int3
test
sub
pop
and
mov
cmpsb
mov
pop
cmp
in
repnz
popa
jb
push
push
rolb
mov
sub
jb
loop
cmp
cmp
mov
sbb
repz
roll
test
pop
jmp
mov
cmpsl
inc
pop
rcrb
or
jmp
add
rclb
and
pop
push
pop
clc
lea
adc
push
movsb
and
pusha
cmp
fdivrs
sbb
ljmp
call
push
mov
call
addr16
enter
sbb
sarb
adc
push
add
xchg
in
mov
orl
ljmp
add
arpl
push
or
aad
lcall
cld
test
push
mov
call
arpl
loop
jbe
and
mov
dec
fcomps
nop
popf
test
insl
pop
or
inc
stos
cmpsl
aas
ret
xchg
sbb
roll
out
dec
loopne
ja
out
jbe
bound
add
mov
aaa
mov
lods
das
adc
xor
shlb
mov
jne
out
push
je
lods
or
aam
out
pop
jns
test
cmp
test
pop
cmp
lds
inc
aad
movb
jb
test
push
clc
mov
mov
jg
cmp
fcmovu
mov
roll
nop
inc
pop
or
mov
add
mov
js
jnp
mov
dec
cltd
sti
mov
xor
jecxz
adc
adc
sar
cmpsb
leave
lret
mov
pop
add
data16
adc
and
sub
mov
dec
dec
jl
stos
out
mov
int
xchg
jns
test
mov
inc
fs
mov
rorb
mov
cld
fists
jle
test
scas
inc
sbb
clc
pop
in
jae
daa
std
sarl
cmp
orb
sbb
jp
sub
icebp
pop
fwait
jle
test
or
push
insb
hlt
push
pop
add
add
xchg
push
or
xor
nop
mov
xor
mov
mov
pop
mov
mov
stos
mov
add
xor
push
fists
inc
sub
mov
bound
scas
xchg
hlt
pushf
test
pop
cmp
das
rcll
das
mov
lcall
inc
mov
cmp
scas
push
xor
shlb
ljmp
xor
gs
inc
dec
xchg
cld
ljmp
addb
xchg
adc
mov
sub
popa
stos
jbe
lahf
xchg
es
mov
push
mov
insl
inc
sub
shl
sub
pushf
mov
aas
das
adcb
and
pop
jmp
inc
jge
cmp
mov
inc
sub
hlt
xor
push
adc
fbld
pop
adc
mov
add
push
popa
pop
and
imul
cli
sarb
pop
icebp
inc
iret
and
lock
xor
les
dec
ljmp
dec
or
pusha
jg
loopne
loope
xchg
mov
mov
hlt
mov
lds
into
leave
sub
jne
les
js
icebp
cmpsb
push
mov
in
sbb
scas
and
pusha
hlt
mov
push
inc
push
push
lcall
adc
mov
popf
dec
dec
cmp
dec
psrlq
loopne
xchg
inc
jg
addb
push
add
mov
hlt
add
jge
aam
jecxz
outsl
xchg
add
mov
sahf
mov
in
out
or
scas
dec
xor
sub
sbb
shl
jo
repz
outsl
les
aaa
mov
and
rorl
xacquire
scas
das
loop
mov
sarb
rcr
push
mov
jl
movsb
mov
or
mov
adc
push
jle
mov
mov
idivb
stos
cmp
mov
mov
mov
push
and
sub
push
push
push
addb
sub
add
test
mov
es
push
mov
and
stos
and
aam
sbb
stc
lahf
outsl
mov
ds
leave
insb
andb
in
add
movb
inc
hlt
popa
adc
aaa
mov
push
pop
insb
mov
xor
dec
nop
pop
and
imul
mov
sub
lds
icebp
pop
jns
pop
inc
pop
mov
jl
ja
aas
das
push
mov
std
mov
or
fs
sub
popa
xor
cwtl
mov
clc
jno
out
out
fisubs
mov
add
std
or
ret
ljmp
and
and
stc
sbb
cli
cs
cltd
inc
ret
adc
sbb
dec
sbb
sbb
sub
daa
rcrb
fisubrl
fbld
jo
int
sub
xchg
popa
add
loope
xchg
in
mov
mov
in
cmp
push
inc
cmp
or
loopne
outsb
cld
ffreep
inc
xor
mulb
sbb
xchg
insb
stos
lods
lock
js
xor
les
and
adc
mov
sbb
movsb
cwtl
insb
pop
loopne
movsl
jne
popa
xor
pop
add
rolb
outsb
mov
cwtl
xor
push
pop
in
outsl
mov
ljmp
fs
cltd
push
xor
pop
call
and
mov
xchg
stos
mov
adc
inc
hlt
mov
ret
inc
adcb
mov
pushl
psrad
cmc
add
scas
sti
push
aam
gs
popa
mov
dec
xchg
clc
push
cwtl
pusha
repnz
add
inc
or
pop
bound
inc
lret
mov
jns
lock
jg
sub
xor
iret
adc
jae
jmp
jg
cld
adc
jp
test
xchg
xor
js
neg
and
adc
mov
int
pop
mov
pop
std
ret
cmp
out
mov
leave
jg
dec
push
jbe
cli
sub
mov
daa
adc
jmp
nop
cmp
fisttpll
subl
push
jmp
mov
xor
ret
cmp
lea
add
lea
bnd
repnz
cli
pop
iret
add
mov
or
or
add
add
rolb
inc
mov
cmp
rcr
mov
or
insb
mov
fcomip
enter
mov
dec
inc
clc
add
sbb
or
adcl
loopne
mov
add
jmp
outsb
or
cmpsb
cmpsl
jne
mov
inc
jb
mov
xchg
and
jl
cmp
adc
loop
out
inc
insb
fsts
jb
jne
xlat
inc
bnd
fdivl
mov
sbb
call
pop
and
xchg
xorb
orb
lea
orb
aaa
call
rorb
inc
aad
mov
mov
adc
es
dec
shl
lock
ds
scas
stos
leave
inc
ja
dec
aaa
push
mov
pop
mov
aad
mov
jb
clc
mov
push
cmp
cmp
cmpsb
out
clc
sub
sub
and
inc
call
ficoml
add
mov
sub
xchg
xchg
ficompl
sub
lock
clc
imul
ret
sub
shlb
std
imul
pushf
or
add
addl
loop
jle
cmp
jo
dec
mov
inc
inc
xchg
je
adc
repnz
loope
int
cmp
lock
ss
outsb
mov
jecxz
inc
sbb
pop
loop
ficoml
insb
andb
fbstp
lods
and
pop
fistpll
sarl
test
je
or
jo
jmp
cs
lret
cmp
pop
jbe
shl
cli
sbb
cli
mov
je
sarb
out
push
enter
cmp
pushf
test
shrl
jbe,pt
pop
xchg
call
rolb
fwait
push
push
add
call
mov
ja
push
sub
mov
lds
xchg
xor
sbb
xor
xor
xor
imul
add
bndldx
and
mov
cld
outsb
cs
ffreep
mov
rcrb
cmp
aas
bnd
pop
andb
test
es
loopne
stc
xor
test
or
jns
aad
mov
leave
ds
arpl
fistpl
ja
adc
divl
inc
inc
xchg
lret
cmp
loop
dec
or
push
and
inc
jecxz
mov
lret
pop
loope
test
inc
and
cld
out
adc
out
into
push
hlt
adc
jne
xchg
dec
cld
dec
pop
lock
ret
popf
push
cmpsb
fwait
cmp
imul
xor
mov
mull
repz
lock
iret
movsb
or
mov
mov
ret
pop
and
lea
jmp
push
ds
loope
jle
insb
in
lods
mov
jno
fdivr
jmp
pusha
mov
outsl
ret
adc
pushf
xchg
sub
call
lock
pop
inc
jecxz
mov
das
cmpsb
sbb
rcrb
fldlg2
insl
pop
test
adc
mov
fwait
mov
xchg
inc
inc
pop
jl
pop
jle
popf
aam
inc
test
dec
mov
pop
cld
jne
push
push
subl
mov
xor
ss
ljmp
sub
lock
push
pop
adc
dec
mov
add
xchg
pop
mov
or
jp
imul
aas
les
xor
and
aam
incl
insb
test
sbb
adc
rorl
adc
dec
aad
mov
mov
pop
and
mov
cs
std
mov
sar
test
and
scas
test
loop
addb
add
push
cli
icebp
xor
pop
pop
fstps
popa
loope
cmp
imul
nop
gs
jae
push
mov
fnstsw
sbb
inc
loope
aas
movsl
sbb
movsl
push
pop
mov
jne
xor
mov
mov
cli
cmpsb
push
pop
mov
mov
push
sahf
pop
enter
test
jl
je
or
sahf
subl
dec
dec
or
sbb
hlt
inc
cwtl
out
jl
jle
sub
cmp
xor
mov
push
dec
sub
lods
je
sub
pop
lods
dec
mov
test
pop
mov
mov
dec
ret
outsb
jo
aam
fucom
out
or
mov
movsl
push
mov
aaa
lods
push
icebp
mov
adcb
pop
jge
push
jno
sbb
mov
out
into
pop
incl
loopne
in
ljmp
fcomps
jp
cmp
mov
mov
popf
dec
add
ljmp
add
adc
or
fdivs
mov
add
mull
outsb
pop
jle
sub
adc
sbbl
add
test
inc
mov
fisttps
test
inc
push
xor
mov
jp
push
loop
inc
mov
loopne
aaa
jns
sub
mov
sbb
xchg
dec
xchg
hlt
pop
dec
call
loop
popa
pop
out
jb
hlt
dec
sbb
push
push
inc
push
xor
jmp
sub
mov
or
stos
dec
stos
icebp
sbb
sbb
sbb
sbb
ffreep
cmpsb
aas
loopne
lea
adc
movsl
out
pop
sbb
push
icebp
cmp
jg
sbb
push
cld
std
fisubrs
or
mov
repz
sub
pop
pushw
pusha
test
jo
loopne
loopne
ljmp
or
sub
mov
or
xor
cmc
sbb
mov
outsb
and
pushf
adc
pop
pushf
fmuls
push
cli
jno
mov
mov
and
insl
outsb
clc
loope
and
mov
inc
mov
clc
cld
fwait
or
rcll
add
mov
or
sbb
jo
or
add
cmp
xor
xchg
xchg
orl
or
pusha
xchg
mov
sbb
arpl
fwait
xorb
scas
stos
or
mov
arpl
or
icebp
dec
pop
xor
enter
pop
xchg
mov
inc
adc
mov
dec
and
mov
pop
jg
sbb
xchg
push
add
cmp
cmpsl
fmull
jne
mov
add
adc
dec
nop
loop
cs
lea
movsl
adc
and
in
mov
dec
nop
pop
push
int
aas
jmp
pushf
loopne
scas
sub
mov
sar
or
mov
and
enter
test
push
dec
push
fmull
dec
and
xchg
lods
dec
mov
xchg
inc
mov
mov
cli
ret
fs
dec
mov
add
cld
leave
rep
or
clc
aam
xchg
mov
fs
adc
or
repz
and
mov
and
pop
ret
cmpsb
mov
sub
rorl
push
pop
cmp
popf
cltd
popa
outsb
mov
pop
push
add
push
dec
cli
xchg
sbb
push
fdivrl
dec
jg
arpl
cli
iret
sarb
and
add
repz
mov
out
sahf
jmp
loop
in
inc
pop
inc
jg
cmp
mov
cld
sub
dec
and
mov
adcb
sbb
dec
lds
mov
outsl
cmpsb
hlt
aaa
dec
int
add
leave
and
mov
jle
xor
jg
or
ret
pop
cld
dec
insb
push
sub
xchg
and
push
xchg
loop
mov
jecxz
or
pop
fwait
in
xchg
clc
push
inc
cmp
jg
outsb
outsb
mov
xchg
add
mov
mov
aaa
add
add
and
in
insl
or
sbb
xchg
lock
and
mov
sti
jg
sti
pop
lds
dec
push
fists
sbb
mov
push
scas
call
push
sahf
dec
shrl
mov
mov
xor
add
add
jl
xchg
xchg
inc
test
les
pusha
cmc
ljmp
xlat
mov
daa
lret
test
mov
inc
cs
rcll
fisubrs
xchg
jmp
ret
push
mov
adc
adc
adc
mov
jns
add
or
out
push
cmp
sbb
cmp
xchg
mov
popf
js
loop
xchg
filds
push
and
sub
incl
pop
loope
ret
jno
push
push
or
lcall
daa
bound
rcll
lcall
xchg
xor
clc
jo
outsb
cld
add
mov
sub
mov
inc
hlt
out
push
loope
fsub
cmp
aam
les
xchg
iret
popa
jae
scas
inc
popa
rcll
cmp
les
cmp
mov
and
test
pop
aaa
hlt
xor
push
stos
push
xlat
mov
xor
jg
bound
ds
ljmp
jo
mov
enter
push
aas
add
mov
fisttps
in
push
sub
add
inc
inc
mov
test
ret
inc
mov
lds
cmp
sbb
popa
stos
jl
mov
add
lock
cmc
xor
mov
stos
cli
and
sub
clc
ljmp
sti
inc
ljmp
popf
mov
insb
mov
jle
push
enter
cmp
cmpsb
nop
xor
lcall
mov
inc
jmp
mov
xchg
pop
aas
ret
mov
subb
lods
nop
repnz
call
roll
dec
cmp
jmp
sbb
push
dec
adc
daa
cmp
fwait
addl
cmp
mov
les
test
stc
imul
shlb
mov
jae
icebp
pop
inc
scas
repz
dec
pop
ja
cld
xchg
or
ja
scas
xchg
push
icebp
dec
ljmp
shll
pop
add
mov
lock
jecxz
mov
mov
lret
les
enter
cmc
pop
sti
rol
jp
cld
dec
mov
mov
xor
iret
scas
repz
sub
or
stos
jne
test
jo
stos
scas
inc
cmp
sub
push
push
jae
roll
lods
cmovle
sbb
xor
mov
repz
cmpl
gs
adc
and
jns
sbb
jmp
outsl
sbb
test
pop
iret
outsb
jl
jl
das
sbb
fldl
jmp
mov
mov
cmpsb
in
add
movsl
add
push
popa
xchg
sarl
push
push
lret
sbb
mov
inc
or
movsb
fwait
inc
push
out
mov
dec
inc
add
mov
mov
add
lock
mov
and
pop
xchg
fdivrs
mov
inc
inc
fs
pusha
or
mov
in
leave
loope
ds
jnp
loope
xchg
ret
lahf
std
push
sbb
lds
mov
adc
les
out
lret
js
push
call
cmp
inc
inc
jnp
xor
xchg
mov
cwtl
inc
pop
adc
outsb
ret
clc
aaa
cmp
inc
inc
mov
das
fisttpll
xchg
out
add
mov
xadd
jbe
mov
leave
adc
out
es
sub
ret
hlt
adc
jo
aas
xchg
jle
cmp
mov
pop
mov
mov
ss
ret
jns
je
ret
sub
mov
push
fdivrs
movl
jne
jge
cmp
add
sbb
les
adcb
adc
popa
out
rorl
adc
insb
adc
pop
test
and
shll
sti
xchg
lods
jb
in
inc
push
aad
aaa
loop
pushf
fildl
bound
and
aaa
xor
int
push
adc
inc
cmp
loopne
pop
push
fnstenv
adc
cmp
out
cs
fs
jbe
push
fdivr
sub
ss
inc
dec
lahf
lahf
or
test
adc
call
sti
sub
divl
aam
fnstcw
pop
jno
data16
or
dec
test
inc
jno
ret
dec
stos
imul
fmul
lods
inc
add
push
pop
ss
cmp
ds
xlat
mov
les
inc
push
nop
cli
mov
loop
mov
add
xchg
pop
lock
testb
repz
sbb
pop
sub
fsubrs
jp
scas
jno
icebp
xlat
or
xor
out
sbb
stc
mov
rolb
inc
shll
push
mov
lcall
push
or
hlt
mov
add
stos
hlt
adc
mov
inc
mov
xor
gs
xor
xor
push
or
arpl
out
push
mov
arpl
popf
popf
subb
incb
cmpsb
inc
sbb
adc
test
sbb
xlat
push
gs
aam
ret
fbstp
aaa
pop
stos
pop
or
pop
add
lds
adc
sub
xor
mov
adc
pop
adc
ljmp
jo
sub
fwait
mov
out
int3
xor
imul
clc
mov
sub
sbbb
or
push
add
push
push
mov
cld
cld
cmp
inc
movsb
ret
test
loopne
lock
adc
mov
std
mov
mov
fldt
jg
icebp
arpl
cli
and
and
mov
cmpsb
ret
fnstcw
sbb
adc
repz
sbb
adc
fwait
cmp
int
sbb
jo
add
dec
add
call
lock
inc
sahf
test
rcrb
jle
rcrl
push
pusha
push
and
insl
stc
mov
inc
scas
inc
pop
hlt
push
aaa
fsubrp
push
decb
rorl
imull
dec
test
sbb
push
ret
mov
clc
js
mov
push
add
fsubrl
test
or
testl
adc
sahf
cltd
clc
popa
mov
and
fnsave
push
imul
loopne
xor
movsb
push
mov
xor
outsl
aas
lock
mov
jecxz
fmuls
inc
test
lret
cmpps
cmc
add
pop
push
loopne,pt
leave
gs
incb
shl
enter
rol
and
neg
std
cmc
in
sub
jo
and
push
mov
pusha
cltd
add
aam
pop
and
clc
jmp
daa
sbb
lods
rcrb
fcmovnb
adc
push
loope
shlb
push
xlat
xchg
flds
fisubl
cmpl
or
adc
push
xor
ret
jp
jae
dec
and
aad
in
shr
jmp
adc
or
pusha
shrb
push
insb
std
data16
jp
fisubrl
mov
pop
push
push
loopne
and
and
sub
jg
mov
push
scas
inc
lahf
jnp
orl
aaa
cmp
inc
push
inc
rcrl
leave
add
mov
mov
das
out
dec
pop
jno
pushl
cltd
out
xchg
cmpb
divl
mov
cmp
dec
loopne
sbb
or
fwait
test
xchg
pop
aad
fwait
and
cmp
or
aas
cli
fwait
pop
daa
dec
movsb
dec
stos
test
je
rclb
xchg
sub
movsb
mov
xchg
sar
add
push
mov
cmc
adc
hlt
or
push
repnz
fsubrp
sub
mov
xor
lahf
stos
add
mov
packssdw
cwtl
imul
xor
mov
pop
adc
and
or
mov
push
fwait
mov
testl
push
test
inc
xor
push
cld
mov
ljmp
mov
mov
lock
inc
mov
popa
js
ret
cli
push
push
xor
outsl
aam
loop
loop
dec
mov
mov
loop
sub
xchg
fldenv
add
inc
and
xchg
cmc
mov
add
add
loop
shlb
pushl
bound
jmp
test
mov
pop
ret
lea
std
xchg
push
and
xchg
or
pushf
cmc
mov
fdivr
mov
adc
movups
xor
shll
sbb
in
push
mov
aas
loope
hlt
pop
aaa
popf
decb
xchg
fptan
leave
cmpsb
pop
aas
sbb
push
and
fsubrp
jnp
mov
xchg
xchg
xchg
leave
sub
push
xor
lds
test
movsl
push
lods
arpl
dec
or
or
ret
popa
nop
add
and
or
xor
repz
cmp
test
cmp
popa
outsb
adc
dec
int3
adc
pop
sar
pop
sbb
jle
mov
shrl
inc
ss
mov
call
push
inc
sbb
adc
movq
adc
or
push
les
add
loope
jl
xchg
add
mov
dec
sub
jo
sub
loopne
push
inc
xor
mov
rorb
popl
pop
fcomps
notb
aas
xlat
cmpsl
adc
sbb
add
add
add
mov
stos
pop
aaa
jae
mov
repnz
ljmp
sbb
insb
cmp
jae
inc
rclb
jo
add
pop
cwtl
cmp
int
pop
mov
sbb
repz
addl
add
jmp
jnp
jmp
pop
stos
fwait
lods
jae
repz
pusha
shrb
js
sbb
pop
add
pop
sarl
xchg
sub
xor
sbb
sub
das
testl
pop
add
mov
je
add
shrb
pop
int
cmp
scas
inc
mov
adc
jp
int3
inc
cltd
in
jae
enter
mov
cld
pop
inc
or
rclb
and
or
stos
pop
inc
fmuls
mov
rolb
inc
dec
jp
fdiv
pop
push
sar
jg
fdivrl
xchg
mov
add
and
cmc
mov
jo
stos
sar
and
jmp
push
test
test
sbb
lods
lahf
aaa
jmp
cmpsb
leave
inc
mov
mov
jecxz
add
jg
push
add
lods
lcall
jo
or
xchg
call
shll
add
outsb
hlt
xor
gs
vmovss
subl
mov
dec
and
jbe
fwait
bound
das
loopne
push
jge
mov
jnp
stos
rorb
xor
xchg
aaa
mov
cmpsl
movsb
sub
inc
mov
std
cmp
cltd
pop
es
bound
inc
clc
add
ljmp
lahf
sub
xchg
pop
fxch
clc
add
lcall
push
fstpt
sbb
adc
xor
fsubp
add
test
adc
push
jle
and
cmc
cmp
xor
jns
fmuls
xorb
push
mov
xor
test
sbb
filds
pusha
daa
lock
cmp
ret
xchg
scas
and
sbb
loope
or
or
cmp
inc
mov
loopne
adc
jg
jmp
pusha
sub
inc
outsb
xor
pushf
out
std
repnz
std
dec
dec
loop
clc
insb
stc
daa
adc
aaa
mov
mov
cmc
mov
and
imull
daa
aad
ljmp
pop
and
mov
pop
in
shll
repz
cltd
pop
in
hlt
rcll
mov
fcomps
cmp
outsl
cmpsl
pushf
gs
fadd
jg
xlat
dec
imul
into
popa
je
hlt
cwtl
jp
inc
popf
je
dec
lcall
ss
adc
bound
call
dec
dec
mov
je
xor
in
pop
aad
ss
in
lds
push
add
aam
push
xorl
cmovl
repz
or
xchg
add
popf
adc
mov
ret
inc
cmp
fstpt
test
stos
pop
andl
push
cmp
ss
dec
rolb
push
vmread
and
mov
jle
mov
and
pop
mov
aas
cmp
scas
mov
repz
jp
nop
js
aas
xchg
repnz
mov
sarb
fldl
aaa
js
into
add
sbb
decb
loope
pop
push
jmp
stos
mov
add
push
mov
test
pop
push
mov
jnp
test
or
jl
or
cwtl
pop
loope
jmp
push
cs
xchg
mov
xchg
mov
cmpsb
push
shr
lahf
pop
pop
add
ffree
mov
scas
ret
rcrl
push
ljmp
pop
ds
push
push
adc
or
pop
dec
xor
dec
xor
lock
push
and
arpl
xor
add
ret
out
aad
mov
pop
jp
inc
enter
clc
sbb
cmp
mov
adc
cmp
mov
shlb
mov
unpcklps
je
dec
cltd
cmpb
or
in
add
outsl
sarb
rorb
mov
cmc
andl
or
inc
leave
add
cmp
add
adc
shl
cli
clc
push
mov
add
dec
pop
cmp
mov
jnp
sbb
xchg
fucom
xchg
cmc
xchg
xor
pop
xor
cli
ss
sub
xchg
push
jmp
fucom
push
inc
out
cmp
sbb
aas
mov
or
fsincos
repnz
insb
xchg
lds
xorl
ret
sbb
es
sbb
add
mov
test
insb
out
jl
test
push
inc
mov
add
inc
jmp
dec
iret
call
stos
in
cmpsb
in
in
jmp
push
sbb
push
mov
mov
cld
popf
add
pushl
movsb
or
mov
fcoms
push
or
rclb
orb
inc
and
lock
pop
push
inc
xchg
mov
or
hlt
mov
xor
mov
sbb
mov
dec
frstpm(287
inc
rorb
sbb
popa
aas
push
xchg
rol
ljmp
sub
or
faddp
outsb
ljmp
int3
pop
outsl
sbb
mov
filds
loop
push
in
mov
adc
scas
call
insl
or
sbb
jbe
out
mov
outsl
push
les
mov
loopne
mov
sub
mov
jl
ds
loope
daa
push
xchg
in
addl
mov
arpl
out
rcll
pop
sbb
dec
push
jg
loope
sbb
inc
inc
adc
lret
jecxz
jno
lret
test
scas
bound
inc
pop
sti
xor
xor
mov
rcr
or
mov
lret
loopne
or
adc
jno
es
daa
adcl
icebp
adc
sti
ljmp
add
dec
add
add
cmp
push
sbb
mov
cwtl
adc
push
call
pop
and
jbe
xchg
xchg
scas
lahf
aad
hlt
inc
adc
pop
xchg
loop
or
in
xchg
out
xchg
add
or
lret
adc
divb
xor
mov
and
xchg
jmp
mov
repnz
jp
push
sbb
lret
and
push
mov
sbb
sub
dec
test
lcall
into
adc
push
rol
cmpsb
inc
and
cmpb
int
cld
and
js
daa
adc
push
lock
jp
add
mov
pop
cmp
outsl
and
ss
cmpsb
cmpsb
jbe
xchg
loop
or
lret
clc
add
sub
movsl
push
es
and
lret
or
inc
jp
lock
nop
xchg
pop
xor
das
fisttpll
in
add
push
into
xor
icebp
int3
lods
in
jle
iret
imull
inc
mov
mov
inc
bound
sub
xor
pop
fcoml
sbb
pop
cld
popa
sbb
mov
push
je
decl
std
adc
lds
out
mov
addr16
pop
push
add
jge
pop
and
jmp
pop
cmpsl
loop
mov
push
xchg
jmp
sbb
inc
je
js
dec
insl
inc
mov
add
mov
aas
add
dec
adc
push
push
test
add
test
dec
cmp
lcall
mov
movsl
pusha
or
test
push
mov
cmp
sbb
xchg
jp
aaa
sub
mov
shll
scas
fiaddl
or
int3
add
aad
add
xchg
mov
mov
rorb
lahf
sbb
cmp
push
bound
out
movsb
stos
and
sbb
imul
adc
insb
movsl
shll
mov
into
push
inc
or
inc
pop
icebp
add
test
icebp
lea
cmp
sub
dec
dec
std
rol
jg
mov
sub
bound
sar
movl
xor
in
test
lret
mov
pop
pop
push
cld
cmc
push
jecxz
hlt
adc
sub
loop
and
cmp
dec
mov
pop
dec
dec
xorb
pop
or
lods
jne
ret
pop
cld
out
sub
les
insb
jle
jl
ud0
mov
push
adc
test
in
mov
bound
sbb
or
into
fdivs
lahf
or
in
mov
dec
jnp
clc
call
aaa
xchg
cmc
push
hlt
lock
sbbl
pusha
aaa
jae
test
sbb
and
sbb
js
and
or
cmp
mov
xchg
cmp
inc
iret
in
test
xor
test
xor
ja
add
in
xor
jns
jg
add
cli
xchg
call
imulb
cld
sar
pop
pop
sub
mov
pop
inc
int
popl
repz
outsb
xchg
iret
lahf
das
ret
shlb
rorb
cld
jl
mov
decb
aam
inc
pop
in
jnp
mov
add
xor
mov
nop
movsb
dec
mov
stos
rolb
test
cli
subb
pushl
and
ret
mov
in
mov
pop
push
icebp
mov
xor
mov
xchg
jns
fdivr
mov
lods
cmovl
insb
or
cmp
jg
pushl
xor
cmp
std
sarl
inc
loop
pusha
rcll
mov
jl
fmul
sbb
push
aas
xchg
sub
test
or
repz
pop
mov
dec
inc
push
xchg
addr16
loope
mov
xor
sarb
dec
decl
clc
jmp
cmp
mov
in
loop
bts
incb
cld
pop
mov
dec
lcall
leave
xchg
mov
adc
insb
adc
aam
inc
mov
in
je
push
fisttps
loopne
out
sub
fwait
xor
sarb
fdivr
and
out
jae
stos
pop
jo
fstpl
test
or
scas
or
aam
testl
mov
jecxz
inc
ficomps
lahf
adc
xor
std
cmpsb
icebp
movsl
mov
add
pop
dec
jl
add
outsl
aam
icebp
sahf
cmpb
mov
rcrb
and
lock
rcll
push
mov
int3
outsl
sar
adc
or
add
add
mov
adc
loopne
lods
test
fiadds
jp
xchg
xor
cmp
sub
cld
inc
pop
test
sub
mov
adc
mov
nop
pop
dec
iret
xorb
adc
mov
mov
mov
je
pop
mov
loop
push
ja
lds
hlt
dec
test
mov
or
sub
or
cld
hlt
pop
adc
subl
add
bound
hlt
push
push
xchg
sbb
cli
xor
pop
dec
sarb
es
add
xchg
xor
mov
popa
xor
leave
aas
loop
das
popa
push
decb
sarb
and
scas
and
push
add
push
fidivs
add
or
jge
lret
cltd
xchg
fbstp
bswap
or
call
cmp
mov
jo
pop
and
and
iret
scas
and
push
mov
pop
fildl
jne
filds
push
imul
adc
add
pop
mov
loopne
sbb
or
sarb
test
and
leave
adc
pop
sbb
adc
negl
and
mov
pop
pop
and
and
mov
ror
fcomip
pop
ljmp
loope
rcrb
pusha
rorb
es
ret
jno
test
add
fstl
stos
cld
inc
rclb
dec
lcall
mov
shll
push
xchg
adc
and
insl
mov
pop
ds
cmpsb
psubw
jne
cld
fildll
and
pushf
lcall
test
daa
sahf
js
sub
shld
ss
xor
sub
mov
decl
rolb
lock
inc
loope
xor
mov
cmp
mov
xorl
sbb
sub
pusha
sbbl
les
cld
loopne
xchg
mov
sub
test
sub
lods
xchg
mov
aas
add
or
xchg
jb
sar
dec
cmp
jne
adc
cmp
push
sbb
loop
dec
and
xchg
stos
mov
pop
std
mov
pop
mov
arpl
aaa
push
fidivrs
or
cltd
cwtl
mov
jle,pt
jae
xchg
js
jne
xchg
add
fwait
jle
cmp
mov
jl
dec
cwtl
lods
pushf
fdivr
mov
pop
loope
loopne
rcrb
jmp
adc
push
cld
xlat
pushf
sub
cmp
push
mov
and
clc
divb
pop
jbe
xchg
fwait
ds
in
push
fidivl
or
xchg
fldcw
inc
add
jle
and
mov
js
mov
adc
xor
sub
pop
push
dec
cltd
inc
test
lret
xor
mov
rclb
jns
xchg
rol
icebp
dec
daa
clc
stc
mov
loop
cld
pop
clc
pop
fiadds
cmpsl
addr16
sub
sub
psubq
adc
pop
xor
inc
cmpsl
mov
jbe
push
pushf
add
daa
lods
sbb
popf
jecxz
mov
hlt
test
jne
les
jmp
xchg
adc
dec
mov
lock
add
sti
repnz
push
mov
or
ljmp
aam
insb
sbb
test
clc
out
inc
or
notl
add
push
out
mov
mov
cmc
sub
fcmovu
clc
cmpsb
pushl
inc
sub
mov
jp
fisubl
bound
sbb
cmp
insb
sbb
in
or
lahf
cmp
xchg
inc
leave
rdmsr
or
xchg
in
push
jg
sbb
and
clc
pusha
jg
pop
dec
mov
pop
adc
rcll
xchg
call
inc
dec
push
andb
mov
lcall
std
pushf
lea
mov
rcl
test
into
lcall
push
icebp
add
scas
add
in
push
pop
cmp
xchg
bound
aas
adc
pushl
loop
insl
ss
clc
sub
pop
rorb
add
out
pop
fnstsw
add
adc
push
inc
sub
sbb
mov
sbb
scas
xor
dec
or
scas
cmpsl
or
and
outsl
test
aam
es
bound
shll
out
mov
mov
dec
mov
and
test
push
mov
jne
stos
decb
sbb
movsl
leave
inc
mov
cli
mov
mov
in
cli
dec
add
sub
arpl
popf
scas
fwait
pop
and
sbb
cli
ds
sahf
inc
int3
clc
scas
add
mov
adc
pop
orb
cmpsb
js
ss
jmp
insb
sub
jge
out
inc
xor
shlb
mov
lea
xor
stos
adc
out
mov
dec
scas
push
ret
push
xchg
pop
sub
lret
fs
xlat
addr16
cmp
std
xchg
push
bts
pop
shl
enter
cli
outsb
pop
sbb
aad
xchg
dec
mov
js
push
mov
clc
insl
lahf
lcall
fwait
subb
dec
jle
add
inc
sub
mov
jo
sub
daa
nop
dec
enter
xchg
inc
scas
sub
pop
inc
arpl
xchg
xlat
lea
fcoms
mov
jno
or
cmpb
fsubrs
addr16
arpl
mov
xor
xor
xor
cli
push
daa
sub
call
mov
mov
dec
mov
and
mov
mov
mov
mov
xchg
push
lret
mov
lods
xchg
mov
scas
jp
loop
sbb
aam
dec
inc
xor
mov
add
test
clc
repz
icebp
push
out
or
imulb
pop
pop
mov
loopne
imul
cmp
pop
adc
cmpb
dec
jne
sbb
rorb
inc
sahf
push
jecxz
cmpsb
test
adc
and
push
sbb
in
sbb
add
adc
dec
sbb
mov
out
mov
roll
shll
inc
int
mov
aam
sub
jbe
sarb
mov
and
push
pop
outsb
sbb
dec
mov
loopne
push
iret
subb
cmpsb
adc
clc
neg
aam
pop
push
cmpl
andb
cwtl
and
shlb
das
js
dec
and
lret
scas
jmp
hlt
push
movsl
dec
cmp
icebp
sti
decl
sub
test
mov
inc
aam
cli
xor
add
mov
mov
les
pop
adc
lock
or
mov
and
mov
mov
jle
or
dec
or
shll
inc
imul
movsb
pop
jecxz
and
xchg
inc
pop
aad
or
inc
dec
cmp
xor
shlb
loop
loop
sub
sbb
test
imull
jmp
mov
push
imul
mov
adc
sbb
adc
adc
dec
pop
sbb
mov
xor
pop
mov
aas
cmp
push
aaa
adc
scas
mov
mov
lock
test
rcrl
cld
ds
mov
out
pushf
scas
shrl
mov
jo
fsubs
aas
mov
xor
xor
movsb
dec
clc
adc
mov
es
aaa
mov
ja
popa
popa
dec
and
add
push
mov
pop
sbb
or
aas
add
mov
push
pop
sbb
test
mov
getsec
or
xchg
mov
in
int
lock
aas
cmc
bound
aad
cmp
sbb
loope
sahf
arpl
mov
mov
fwait
movsb
mov
and
pop
ss
rorl
lods
and
xchg
addr16
or
fmulp
or
dec
mov
ret
or
sar
xor
push
jl
int
stos
in
jp
and
adc
push
nop
dec
les
stos
in
lea
jbe
jnp
test
scas
cmp
add
orb
pop
aam
loop
inc
adc
mov
jp
mov
xor
add
or
push
push
push
xchg
icebp
jb
pop
mov
pop
pusha
jo
add
and
mov
inc
stos
ds
adc
push
mov
mov
movsb
ss
fwait
daa
inc
pop
jp
push
push
push
clc
hlt
les
add
pop
and
imul
pop
test
mov
and
data16
andb
mov
shlb
add
xchg
adc
mov
mov
mov
je
push
adc
or
pop
fstl
popf
dec
sub
push
cmp
aam
mov
jp
scas
rolb
aas
dec
mov
sbb
add
jo
jbe
loope
pushf
outsb
xlat
pop
adc
mov
cmp
enter
push
pop
mov
iret
cmpsl
dec
fistpl
inc
lret
mov
fidivs
dec
imul
sub
fstp
lret
mov
xor
insl
ljmp
dec
add
add
pop
in
pusha
mov
jno
cwtl
shlb
das
or
lcall
cld
stc
sahf
dec
push
pop
mov
sahf
mov
shl
xor
fisubrs
sbb
lcall
jg
adc
lock
adc
jo
add
imul
or
call
fs
push
stos
arpl
mov
shrb
push
mul
mov
dec
imul
mov
test
int3
dec
xor
jno
andb
cld
shrb
sbb
aas
xchg
daa
out
cmp
xchg
xlat
bound
mov
adcl
test
adcl
lods
pop
pop
sete
or
pop
test
push
or
aam
jle
dec
jb
ljmp
faddl
push
jns
sbb
jmp
fcoms
jecxz
cmp
inc
pop
sbb
xor
fnstsw
aaa
mov
rclb
dec
aas
aaa
jno
inc
pop
jecxz
stos
nopl
pop
jl
jo
mov
icebp
fstl
add
adc
std
cmp
movsl
outsb
sub
aaa
fdivrl
fldcw
or
dec
test
or
cmpsl
orb
sbb
pop
xor
dec
rcrb
xlat
add
aam
and
sub
jmp
add
inc
pop
sub
push
adc
lock
mov
mov
xchg
jg
lock
data16
pusha
int
mov
push
or
inc
rorl
push
cmp
jecxz
testl
fwait
adc
adc
push
push
push
je
pop
enter
sbbl
das
imul
test
mov
aad
jae
xchg
loopne
stc
iret
dec
std
popf
out
leave
and
jecxz
xor
adc
sub
or
rorb
sbb
pop
pop
jae
cld
movsl
dec
xlat
outsl
gs
jg
bound
pop
imul
in
jmp
jne
cmp
mov
xchg
push
ljmp
mov
xchg
aas
add
cld
mov
test
int3
adc
sbb
mov
lea
mov
add
mov
test
push
ret
jge
dec
movsb
mov
decl
mov
das
push
pop
fcompl
pop
clc
jbe
in
push
and
mov
jno
or
rol
sbb
xlat
and
or
mov
push
frstor
pusha
ljmp
jle
aad
into
ficoml
cli
fldt
add
adc
mov
mov
mov
clc
or
xchg
testl
xchg
jno
ficompl
mov
mov
add
fucomp
xchg
cltd
sbb
cmp
dec
rolb
add
xchg
mov
aad
inc
fistpll
loop
dec
popa
add
out
cltd
push
incb
sbb
push
les
lret
enter
sbb
arpl
mov
repnz
mov
sbb
movsb
dec
fdiv
and
sbb
push
mov
lahf
dec
aaa
rcll
loope
loope
cmc
test
cmp
pushf
mov
inc
jle
iret
or
pop
xor
add
cli
dec
jb
jae
cmp
js
lea
subb
or
in
xor
mov
aas
sbb
or
sbbb
shrl
out
or
and
mov
rolb
lea
in
nop
inc
or
ja
pusha
pop
push
fbld
or
mov
inc
dec
stos
sbb
or
mov
in
mov
shrl
xor
aad
cld
insl
lret
push
or
push
jns
push
dec
icebp
dec
lods
cmp
jo
fsubp
aas
pop
xchg
sbb
pop
lahf
push
sbb
add
dec
mov
push
dec
push
and
addr16
mov
popa
fwait
inc
cli
ret
sub
and
bound
or
ffreep
and
jge
in
roll
fsubs
shlb
clc
lods
inc
std
popf
or
cmp
lods
aam
cmc
xchg
rolb
jae
movl
xchg
mov
fildll
jmp
or
stos
movsb
scas
push
pop
mov
xor
shrb
mov
rcr
dec
rcrb
sub
sbb
popa
or
imul
pop
jo
or
mov
fs
cmc
insl
xor
jo
hlt
out
sti
lock
xor
bnd
test
loop
push
xorb
fstl
inc
pop
test
dec
je
lret
cld
insb
jge
loopne
adc
cwtl
or
mov
push
and
and
jbe
inc
pop
nop
jae
cmp
insl
mov
inc
stc
push
or
inc
outsb
hlt
repz
mov
call
test
jecxz
jl
lahf
cmp
jns
aaa
jmp
loop
push
in
fstpt
mov
inc
outsl
jo
mov
outsb
xchg
pop
scas
jecxz
and
cli
sub
mov
out
push
call
or
dec
cmp
loope
lcall
stos
outsb
psllw
push
loopne
mov
outsb
jl
ffreep
push
addl
add
or
daa
cs
clc
clc
jnp
fsubr
in
lock
xchg
fmuls
testl
call
loope
inc
in
xlat
incb
andb
cmp
ss
ret
call
fiaddl
mov
and
cmp
sub
rcrl
loopne
in
rclb
cwtl
insl
pop
popf
andl
add
or
push
clc
roll
cwtl
sbb
lahf
add
or
lods
jg
jbe
cmp
dec
pop
and
movsl
ret
test
rorb
std
imulb
cltd
jle
push
sbbl
inc
insl
or
mov
and
mov
outsl
dec
lcall
in
sub
shrb
inc
xor
inc
inc
les
imul
push
adc
nop
rcrb
mov
mov
push
cli
sbbb
stos
subb
xlat
jnp
jae
imul
add
sar
xchg
cli
and
decl
aas
mov
cmc
in
lret
xor
clc
cwtl
cmp
xchg
sbb
sub
dec
inc
mov
cmp
popa
mov
or
outsl
xchg
clc
dec
cld
jp
and
inc
add
dec
lcall
les
cmpsl
repz
pop
in
sarl
in
adc
push
std
stos
mov
fs
pop
dec
ljmp
xchg
jbe
sarb
lock
push
or
lock
negl
mov
adc
cli
pop
adc
aad
pushf
cmc
cmp
pop
sbb
pusha
jge
ja
in
pop
sarl
add
pop
bound
orb
push
sbb
in
inc
lahf
adcl
dec
and
lds
mov
out
addr16
push
and
ret
pop
ret
test
ja
dec
call
push
insb
clc
aas
sbb
aad
arpl
mov
dec
adc
cltd
adc
mov
xor
shlb
orb
aad
roll
sub
int3
push
sbbb
lcall
loop
dec
out
inc
push
pop
mov
xor
push
arpl
fimuls
decl
push
adc
cmp
cmp
xchg
mov
pop
loop
add
mov
pop
lahf
push
mov
mov
jp
adc
dec
fistps
cmc
push
mov
cs
pop
pop
mov
leave
sbb
xchg
mov
adc
mov
mov
jle
jmp
movsb
mov
cmp
add
mov
pop
cmc
emms
push
mov
test
test
mov
push
addr16
jge
pop
ljmp
imul
mov
int3
nop
lock
mov
testb
or
adc
roll
bswap
nop
hlt
pop
mov
je
orb
mov
push
cmpl
fiaddl
cmc
iret
sbb
or
enter
dec
and
xorb
outsl
clc
dec
cld
adc
sarl
mov
push
test
xor
out
clc
lods
cmpsb
xchg
xorb
mov
sbb
shrb
sub
sarl
data16
or
ja
add
clc
cmp
lcall
and
and
jle
outsl
sub
mov
mov
or
outsb
cli
mov
sub
push
icebp
and
xchg
inc
movsl
adc
js
mov
jecxz
scas
lahf
or
jmp
mov
or
or
adc
mov
push
or
fcomps
inc
std
push
push
mov
dec
lods
clc
dec
sar
cmpsb
sbb
or
outsb
ljmp
idivb
mov
ss
pop
mov
aas
clc
pushl
je
lret
cld
in
jmp
push
dec
mov
mov
and
adc
push
pushf
enter
jl
add
jp
decl
lret
insl
ljmp
mov
jb
aas
mov
jbe
adc
mov
lret
int
call
ret
jbe
inc
mov
arpl
push
mov
xchg
dec
std
push
pop
mov
mov
hlt
enter
daa
call
cli
push
push
adc
adc
push
js
pusha
xchg
adcl
inc
ja
rcll
ds
pop
or
jp
push
adc
ret
mov
mov
sub
shll
adc
push
rclb
adc
ja
je
cmp
imul
fmulp
nop
mov
push
mov
mov
movsl
out
push
and
dec
xchg
movsb
cmp
fisubl
xor
loop
cmpsl
shr
loop
test
cld
enter
enter
decb
jg
mov
pop
loop
jb
movsb
loope
cld
jl
fcomps
aad
adc
imul
gs
gs
xchg
inc
inc
fcomip
ss
loop
push
fnstcw
jg
cld
adc
stc
xor
lds
add
dec
jecxz
shll
enter
mov
sarb
pop
stos
push
fwait
rcll
scas
js
mov
test
cs
ljmp
push
add
ret
pop
outsb
popl
sub
addb
ficoml
jbe
ljmp
xor
or
bound
dec
cld
push
test
inc
pop
inc
in
add
hlt
mov
mov
es
ljmp
mov
cs
mov
daa
add
aam
and
test
sbbl
call
add
out
cmp
adc
hlt
rol
rolb
rclb
leave
subb
loope
push
jns
int3
ret
idivl
ret
mov
xor
push
add
test
xchg
mov
es
out
pop
rorl
pop
in
ror
adc
sbb
fisubs
leave
mov
movhps
movsb
js
call
cmpb
js
inc
xchg
mov
jo
cltd
push
cwtl
lods
cmp
out
dec
sub
add
xor
lods
je
movsb
cwtl
mov
pop
lret
sarl
and
loopne
bound
test
mov
sub
hlt
inc
jbe
iret
mov
sahf
push
push
pop
xchg
fidivrs
fisttpll
or
pushf
push
test
jns
xor
test
xchg
lock
adc
cld
pop
shlb
shll
lret
loope
mov
incb
test
imul
pop
pop
jo
adc
mov
add
hlt
push
fisttpl
fldl
xchg
pop
dec
in
daa
xor
or
out
outsb
mov
gs
push
add
cli
pop
cld
pmulhw
aad
and
mov
or
lods
push
and
adcl
fucomp
adc
insb
jge
xor
lock
mov
fcoml
js
or
dec
aas
js
lock
insl
lods
sbbb
inc
insb
push
ret
shrd
sub
loopne
out
push
imull
inc
push
cmpsb
cwtl
sbb
outsl
scas
shr
push
jmp
lret
adc
pop
repnz
inc
mov
dec
push
mov
xor
insb
push
out
add
adcl
xor
jmp
jno
pop
push
in
sar
adc
lea
add
and
les
scas
ret
mov
cmp
sti
add
pop
add
fwait
std
mov
sbb
sbb
push
hlt
push
xor
xchg
pop
out
mov
pop
test
cwtl
popf
mov
pusha
mov
mov
jbe
outsl
and
dec
popa
sbb
or
mov
pop
jle
jp
pop
mov
sbb
pop
in
lock
mov
push
jmp
out
add
or
notl
push
sub
je
je
dec
hlt
sub
lcall
sub
into
pop
loopne
mov
or
decb
mov
inc
test
hlt
out
idivb
out
mov
or
rorl
icebp
gs
sub
dec
out
and
mov
ljmp
inc
push
mov
jb
dec
iret
shll
jno
sti
loopne
arpl
jl
div
mov
pop
and
jmp
outsl
lods
shll
mov
and
ljmp
and
imul
clc
dec
cmpb
in
lret
pop
adc
jg
push
in
mov
pusha
outsb
dec
mov
pop
cli
lea
test
mov
jle
xor
andl
mov
stos
jnp
js
push
cltd
aas
pusha
je
mov
cli
pop
das
mov
mov
pop
lock
mov
aam
je
adc
pop
out
lock
and
test
clc
lods
xchg
xor
out
flds
jp
mov
push
push
lock
lret
xchg
push
adc
dec
dec
js
out
cbtw
add
mov
cmp
adc
jnp
adc
out
ss
push
scas
xor
fcmovne
loopne
fdivs
in
cmp
mov
xchg
push
cld
clc
sub
jp
jno
xchg
aam
sub
shrl
scas
mov
call
cmp
in
cld
xchg
aaa
jecxz
in
out
xor
mov
mov
insb
test
sbbb
add
mov
fdivrs
out
ss
js
icebp
loopew
sbb
shrl
sbb
je
inc
in
mov
add
xor
pop
or
bound
cmp
fildl
testb
mov
jp
cmp
lock
sbb
testl
in
xchg
xor
shrb
outsb
push
je
xchg
inc
sbb
jg
cmc
adc
aad
or
mov
adc
cmp
pushf
add
pop
pop
loop
push
ss
subb
dec
lods
cld
xchg
cmp
push
mov
xor
dec
mov
sbb
clc
mov
into
enter
shlb
aaa
adc
pushf
sbb
xchg
mov
cmc
mov
xor
or
pop
adc
ss
sahf
or
call
fimuls
mov
neg
fs
ficoml
hlt
xor
fiaddl
aas
sub
fsubrl
inc
inc
push
popa
subb
clc
mov
pop
pop
pop
mov
pop
cld
cmp
dec
mov
sub
pusha
sbb
push
jmp
pop
push
add
push
cli
push
cmp
pop
push
mov
sbb
incb
cltd
xor
das
aas
movsbl
loopne
mov
aaa
call
movsb
movsl
lods
shrl
cmp
jp
cmc
adc
aaa
mull
mov
mov
dec
movsb
push
and
dec
xor
ljmp
jle
adc
xchg
stos
mov
push
scas
inc
pop
daa
cli
loop
insb
jg
rclb
jb
arpl
idivb
fwait
movsl
or
lods
sti
cmp
mov
or
inc
mov
jl
pop
clc
or
pop
push
adc
add
js
adc
mov
inc
ss
pop
inc
ljmp
in
rcrb
imul
pop
pop
xchg
nop
popf
decb
fmuls
adc
mov
pop
push
ja
jecxz
mov
push
cmc
rclb
lods
lret
sub
adc
xchg
push
inc
mov
mov
lret
jbe
ss
loope
out
mov
std
mov
lods
mov
dec
sbb
or
stos
or
jp
nop
daa
pusha
sar
pop
jg
repz
or
jmp
iret
outsl
bound
aas
hlt
ja
fsubs
add
add
cltd
add
jbe
icebp
je
jmp
lods
jp
mov
fcomps
out
aam
mov
mov
pop
outsl
and
cmp
add
sti
cmp
enter
mov
xchg
sub
lea
inc
popa
cmc
pop
jnp
add
popa
clc
mov
test
shrb
adc
fidivrs
xor
dec
sar
std
sbb
pop
lret
and
fbld
push
lods
push
push
push
fidivl
scas
add
push
inc
sub
hlt
push
inc
insb
pusha
insb
sti
popf
int3
sub
jnp
mov
ret
sbbb
fs
sbb
mov
pop
loopne
std
dec
jne
shrb
jp
or
inc
jp
adc
or
loope
ds
inc
or
lock
fsub
and
mov
rcrb
mov
cld
or
dec
std
std
dec
rolb
js
mov
jg
inc
xor
out
repz
stos
mov
mov
mov
sub
mov
bound
imul
or
xor
sbb
jle
loope
les
insb
out
loopne
mov
xor
dec
shlb
jbe
mov
push
ss
imul
pop
das
enter
gs
pop
lahf
add
dec
cmc
add
pop
dec
pushf
movsb
jnp
les
pop
lea
pop
pop
lods
adc
scas
test
rol
push
jg
fwait
clc
fcmovnb
in
movsl
mov
cmpsb
loope
sbb
out
pushf
les
mov
pushf
jg
icebp
popf
push
jle
int
ds
add
push
loopne
fidivs
in
inc
sarl
sbb
fs
fs
int3
imul
orl
xchg
pushf
pop
sub
pop
mov
pop
loopne
jp
mov
xorl
out
popa
inc
jp
arpl
scas
xchg
test
nop
out
xchg
mov
fcomps
and
cmp
clc
sbb
fdivrs
call
pop
into
ret
and
jmp
je
add
push
jmp
cmp
xchg
mov
mov
mov
aad
adc
xor
jae
popa
mov
or
out
dec
mov
lods
daa
arpl
xchg
push
scas
into
hlt
in
cwtl
pop
shrb
insl
add
incb
mov
hlt
pop
je
push
add
inc
int
icebp
test
sbb
cmpsb
mov
in
pushf
fcoml
mov
push
daa
je
arpl
ss
hlt
sbb
sbb
pop
sbb
xchg
mov
add
pop
test
dec
sbb
push
dec
xchg
xchg
add
mov
pop
and
push
push
mov
sub
repnz
inc
in
jbe
stc
cli
out
inc
xor
pop
push
jne
push
jmp
fcompl
add
aas
inc
popf
out
jle
mov
inc
sub
inc
std
loope
jl
sarl
ffreep
inc
push
xchg
inc
pushf
pop
sbb
push
mov
fiadds
mov
sub
ficompl
loopne
aas
cli
clc
out
push
je
not
jecxz
push
xchg
out
cmpb
xchg
sub
ja
sbbl
sub
lahf
mov
sahf
mov
add
sbb
mov
mov
fisubrl
jne
mov
rorb
pop
call
jbe
sbb
aaa
push
add
clc
sti
cmp
roll
imul
inc
cmp
mov
popa
inc
lds
jb
aam
add
loopne
pop
mov
push
in
movsl
mov
inc
outsl
or
or
sbb
adc
stos
test
les
outsl
mov
push
adc
mov
fistpl
ss
mov
inc
inc
xchg
std
mov
stos
jp
jle
ret
clc
push
popf
mov
rclb
lods
cli
push
in
adc
push
pop
in
push
inc
xchg
in
dec
cmp
sbb
cs
inc
enter
in
rcll
cmp
cli
hlt
mov
and
je
ret
jae
or
cmc
dec
pop
repnz
sbb
sahf
mov
mov
mov
clc
pop
adc
inc
mov
es
cmp
mov
scas
mov
adc
pop
adc
push
adc
jns
mov
sbb
mov
mov
jo
mov
mov
mov
mov
xlat
pop
pop
cmp
fcmovnbe
cld
mov
pop
test
inc
and
les
jb
fiadds
cld
xchg
cmp
shrb
icebp
fcoms
je
xchg
mov
sub
mov
mov
dec
cmp
inc
adc
jl
cmp
shlb
jo
pop
xor
aaa
cmp
aas
or
out
dec
sahf
fldcw
dec
je
jg
fstp
mov
mov
sub
aam
add
in
add
jge
imul
movsl
nop
mov
or
lret
rclb
push
add
in
in
cmp
test
cmp
jmp
ret
xor
xchg
leave
sbb
or
aas
push
or
pop
mov
iret
sub
hlt
nop
cmc
and
xchg
fimuls
jg
cwtl
gs
out
xor
push
inc
push
outsl
and
stc
mov
aas
xchg
sbb
insl
lcall
mov
nop
fmull
push
or
js
out
inc
nop
ss
inc
test
push
mov
jp
hlt
call
out
dec
jp
mov
cmc
add
test
add
nop
fs
scas
ret
aas
push
add
cmpsl
add
lock
out
out
arpl
lods
lods
in
jge
dec
pusha
test
push
or
xor
push
dec
lret
xchg
push
mov
in
cld
push
sbbl
sbb
test
loope
add
fiadds
jbe
ud2
sbb
fisttps
push
das
arpl
out
dec
add
and
cwtl
push
popa
into
mov
mov
orl
mov
dec
push
inc
rcll
clc
jbe
or
lea
inc
stos
mov
imulb
pushf
jle
addl
adc
add
add
xor
push
outsl
jmp
cmpsb
mov
pop
pop
fimull
loopne
jae
fs
loop
inc
shll
mov
adc
mul
popl
mov
loope
adc
push
inc
loopne
mov
sub
sahf
add
ljmp
or
jmp
loope
xchg
lods
adc
repz
test
add
imul
cmp
shl
mov
lds
and
in
dec
inc
and
dec
popa
and
cmp
aad
push
mov
mov
xor
lret
sbb
cmp
xor
or
fwait
inc
jg
lcall
add
push
daa
shlb
add
popf
dec
cmpsb
jb
pop
cwtl
pop
jo
and
fwait
mov
rcll
add
jmp
push
lock
mov
shll
push
inc
add
fldcw
nop
mov
push
fld
add
jo
insl
sbb
repnz
inc
push
inc
ja
xor
test
ljmp
mov
jno
push
enter
pop
out
test
ret
and
jo
mov
les
cli
mov
sub
mov
mov
add
jbe
push
ret
adc
mov
test
sarb
popl
sbb
push
imul
loopne
lods
add
dec
xchg
push
mov
mov
inc
test
cmpb
out
outsl
xchg
mov
lahf
ss
sbbl
fwait
pusha
jle
test
add
sarb
aaa
inc
ljmpw
sbb
xor
pop
add
mov
adc
cmp
jns
xchg
mov
arpl
addb
jo
pushf
sub
or
and
std
sbb
imul
xchg
cmp
jecxz
add
or
add
shll
or
xor
or
lea
fs
mov
call
subb
inc
mov
dec
fwait
jecxz
addr16
sub
jecxz
jb
cmpsb
sub
mov
mov
inc
sub
inc
or
lods
movsb
int
jp
stos
cltd
mov
cltd
mov
push
pop
and
movsb
pushf
aad
mov
stos
fs
mov
mov
jb
lret
cmp
imul
lret
lret
xchg
sub
js
fnsave
pop
test
add
mov
js
mov
mov
sub
daa
adc
inc
xlat
push
shrb
out
adc
push
adc
imull
mov
in
mov
decb
jmp
jns
xor
pop
imul
push
add
rorb
leave
stc
bnd
popf
push
push
clc
gs
fildll
cmp
add
cmp
inc
mov
add
xor
xchg
fsubrs
inc
mov
ss
push
adc
int3
in
addr16
dec
and
adc
xlat
or
loopne
mov
add
pushf
je
adc
xor
fsubs
addb
js
xchg
add
mov
inc
je
es
aas
cltd
add
mov
aam
mov
add
sub
jo
mov
xchg
xor
and
pop
dec
rorb
fs
mov
inc
shlb
adc
imul
and
sub
inc
test
mov
mov
sub
mov
xchg
test
jl
or
adc
loope
add
out
jne
add
pusha
xchg
rcr
cld
mov
adc
stos
addr16
xchg
lahf
sub
jmp
xchg
cmpsl
pop
jg
cwtl
fnstsw
arpl
enter
push
mov
aas
test
add
in
sbb
add
push
fsubrs
aad
push
or
pop
push
push
movsb
fists
fadd
add
inc
xor
cmp
mov
mov
xor
add
sbb
mov
shl
mov
je
xor
mov
adc
jl
je
fucomip
and
ljmp
addr16
cli
leave
mov
fcoms
daa
mov
add
push
jo
scas
aaa
into
cmp
or
test
ds
push
hlt
jl
cmc
hlt
jmp
cmp
and
or
jnp
jle
ds
jb
subb
push
outsl
jmp
dec
xchg
mov
stos
loopne
fnsave
pmulhw
xor
dec
dec
add
shrl
mov
ja
sub
scas
adc
stos
inc
push
mov
in
sub
test
pop
fadds
sub
xor
xchg
loope
inc
jl
mov
push
out
dec
insl
jbe
jbe
jp
subb
jns
adcb
and
pop
movsb
push
out
add
jae
fcoms
cwtl
add
pusha
xchg
inc
add
push
subl
inc
inc
inc
pop
jp
in
cmpsl
add
adc
dec
xchg
xor
sbbb
adc
pusha
mov
loop
icebp
adc
pusha
aam
js
sbb
mov
das
jo
mov
ja
sbb
popa
mov
aad
and
adc
inc
insl
mov
sbb
sub
mov
cmpsb
mov
jbe
pop
add
roll
xor
jbe
fsubl
push
mov
mov
fwait
mov
add
ret
int
inc
ds
pop
js
jne
push
mov
xlat
pop
fs
cli
cmp
pcmpeqb
mov
lods
ret
mov
push
inc
pop
data16
add
dec
jmp
fsubrs
int3
cmp
mov
es
es
adc
mov
pop
divl
add
inc
ret
mov
cmpb
rcrb
cmpsb
push
adc
pop
aas
dec
imul
or
cli
pop
mov
dec
cmp
adc
or
cmpsb
dec
movsb
add
das
mov
mov
or
arpl
pop
sbb
fiaddl
lea
fisttpl
inc
xor
fbstp
bound
sbb
or
xlat
inc
cli
cwtl
arpl
adc
popa
cli
or
adc
add
testl
add
and
xchg
sbb
shll
and
shlb
out
add
pushf
fwait
xorl
pop
shll
sbb
bound
pop
lds
dec
aaa
lods
shlb
stc
xchg
and
subl
or
adc
imul
ljmp
pop
stos
iret
lea
mov
adc
push
xor
pusha
jne
lahf
loop
icebp
cmp
add
push
out
ret
inc
hlt
pop
lcall
xchg
jbe
jle
lock
push
movsb
sbb
cwtl
xchg
xlat
adc
adc
push
cmp
jne
bound
mov
push
or
mov
int
or
dec
nop
adc
clc
dec
rorl
rcll
cli
das
lods
into
les
fidivl
pop
cs
stos
mov
lods
dec
ja
add
fmulp
fwait
lock
adc
in
daa
mov
shlb
xchg
rclb
cwtl
nop
mov
mov
cltd
pop
mov
sbb
outsb
jmp
jl
icebp
decb
cmc
adc
mov
cmp
push
pop
icebp
scas
adc
repnz
cmp
mov
shld
mov
sbb
add
xlat
fcoms
xchg
xchg
jae
sahf
pop
shld
push
scas
and
icebp
out
or
leave
sub
xchg
pop
adc
pop
jp
repz
push
xor
mov
xchg
movsb
mov
bound
add
insb
lea
inc
pshufw
sbb
out
loope
mov
cmc
pop
jnp
js
sub
cltd
nop
scas
lock
jo
xor
xchg
xor
icebp
xor
inc
jns
push
ss
push
std
and
adcb
xchg
dec
xchg
pop
jle
push
testb
dec
ds
rcrb
lret
call
enter
xor
aaa
jmp
mov
and
and
mov
insl
add
pop
scas
setl
xchg
xchg
jnp
mov
inc
mov
lcall
hlt
jb
test
outsb
or
push
pop
out
pop
dec
jae
into
jne
pop
dec
or
aad
jmp
jmp
ret
ja
aas
inc
add
and
cli
fadd
js
call
in
mov
cs
incb
pop
mov
cs
cld
pusha
mov
and
pop
loope
mov
mov
adc
mov
test
adc
mov
int3
sub
iret
push
icebp
add
ja
test
mov
icebp
nop
inc
scas
sub
leave
orb
or
repz
ja
je
or
stc
fsub
ds
push
pop
mov
sub
ljmp
mov
frstor
inc
adc
imul
adc
xchg
cmc
push
mov
xchg
jb
out
adcb
add
adc
add
jo
ds
jp
push
pop
xor
or
fs
push
push
dec
ffreep
push
cmpsl
jg
ret
scas
add
jne
adc
fs
roll
cmp
adc
lcall
ret
scas
pop
adc
fiadds
or
jbe
add
in
push
daa
shlb
adcl
sbb
jae,pn
rcl
mov
push
add
pushf
mov
adc
daa
and
int3
pop
rcrb
mov
mov
pop
add
xchg
mov
dec
popl
xchg
sbb
jecxz
mov
mov
adcl
sbb
repz
jp
push
test
cli
in
cmp
pop
cli
jge
cmp
add
dec
xchg
lods
addr16
lods
and
shrb
test
mov
sub
push
jo
das
mov
daa
scas
lcall
sub
mov
jnp
inc
inc
fs
fwait
cmp
inc
stos
test
loope
gs
mov
push
dec
sub
popa
jmp
push
inc
out
int
pop
ljmp
fwait
cmc
push
nop
mov
xor
xor
sbb
mov
pop
sbb
arpl
pop
lret
mov
or
rcrl
test
dec
push
aaa
lret
cmc
cmp
push
insb
mov
pop
in
adc
mov
arpl
out
in
push
sbb
jecxz
lret
sbb
and
xor
add
xchg
mov
iret
adc
xchg
jbe
pushf
xchg
add
fildl
in
jle
pop
xchg
pusha
sbb
mov
push
adc
das
cs
sub
inc
subl
inc
ret
aaa
inc
nop
fisubs
jno
fcomps
dec
cwtl
out
adc
mov
xor
mov
lret
xor
or
or
sbb
inc
lods
aas
repnz
inc
mov
rol
cmp
fadds
test
rorb
dec
jp
cmpb
jmp
xchg
mov
dec
aas
pop
lea
mov
add
shrl
inc
insl
jno
and
inc
pavgb
daa
mov
xchg
and
notl
popf
sub
fld
xor
ljmp
shrb
cltd
cld
jns
adc
aas
cltd
loope
ljmp
jno
xor
xor
popf
or
jo
adc
ds
sbb
repz
rcrb
push
mov
fwait
cmpl
gs
fidivl
sbb
enter
sahf
icebp
lock
mov
vpclmulqdq
cmp
add
mov
gs
push
mov
pop
pop
popl
rcrb
dec
test
sbb
insl
xorl
popa
push
loope
mov
sbb
mov
mov
xor
sarb
pop
pop
cld
push
mov
arpl
dec
out
adc
xchg
fisubs
sub
addb
mov
and
fistps
sub
xor
sub
sbb
pop
dec
mov
rcrb
sbb
pop
icebp
mov
scas
imul
sbb
push
scas
aas
outsl
or
lcall
xor
inc
jp
fst
cmp
std
mov
xchg
fdivs
cmp
push
les
sub
pusha
jns
sbb
addr16
adc
out
rolb
fdivp
gs
add
dec
sub
repz
adc
xchg
add
mov
push
sub
jnp
mov
mov
repz
jnp
mov
test
sarl
jne
pusha
sbb
pop
call
pusha
testl
adcb
adc
das
in
mov
sbb
push
loop
loope
pop
loope
mov
add
cs
dec
sti
xchg
lods
fwait
jmp
icebp
lret
fld
adc
sbb
xor
or
add
pop
and
mov
rorl
and
shlb
daa
sbb
aaa
add
insb
ret
es
lcall
lahf
test
movb
lret
jb
scas
pop
dec
cld
add
and
mov
inc
pop
sub
inc
ja
push
jl
imull
push
dec
es
pop
sbb
orl
mov
mov
push
xchg
shrb
xor
sahf
icebp
jne
addr16
mov
mov
add
xor
pop
movsl
popa
stos
jmp
les
pushf
push
in
dec
jno
fsubrs
add
push
hlt
orb
in
jbe
cld
xchg
push
xor
imul
jecxz
out
adc
ss
pop
push
push
pop
cltd
mov
or
imul
mov
pop
test
or
cmc
xor
mov
loopne
inc
icebp
pop
push
or
sub
xor
lahf
fstp
stos
cs
add
cmpsw
movsb
scas
aad
cmp
or
adc
sub
xchg
imul
cmp
insb
and
mov
adc
popa
mov
decl
pop
mov
adc
dec
js
fwait
jae
push
sub
xchg
cmp
icebp
in
rcrb
sbb
fdivrl
ss
clc
test
adc
popa
mov
add
pop
xor
pop
xchg
dec
gs
mov
dec
push
jo
cmp
inc
in
cli
jge
ret
ja
cmp
sbb
clc
xlat
xchg
rolb
inc
mov
inc
pop
mov
add
test
pop
lcall
sbb
dec
jb
dec
cmp
pop
jp
adc
popf
xor
xchg
pop
dec
cwtl
mov
cmpsb
in
out
test
push
outsb
xor
pop
mov
push
fadd
mov
fwait
addr16
cmp
inc
pop
add
mov
xor
addl
adc
cmp
shlb
mov
out
push
pop
adc
jle
xor
jmp
repz
fdivrs
cmc
push
idiv
adc
or
mov
das
mov
icebp
aaa
and
cmp
cmp
adc
add
mov
rcrb
stos
insb
pusha
addl
sub
aam
pop
addr16
inc
or
arpl
sti
jne
fldenv
push
and
pop
movsb
inc
mov
xchg
xor
dec
mov
inc
mov
popf
dec
add
outsl
rol
mov
es
cmp
or
fidivs
mov
icebp
pop
fmuls
pop
test
repnz
jge
jbe
js
dec
or
fwait
ja
das
push
xor
gs
dec
mov
outsb
stos
adc
add
js
add
push
pushf
ret
stos
jl
cmpl
mov
pop
imul
iret
jge
add
or
arpl
or
mov
outsl
jmp
div
enter
fcomps
sub
seto
pusha
jns
xlat
int3
ljmp
aas
loopne
js
and
outsl
insl
mov
ljmp
aad
xor
fwait
shll
add
sti
sarl
bound
je
lds
sti
stc
adc
xor
add
and
add
cltd
xchg
fcoms
push
xor
fnstsw
or
xor
jg
mov
jbe
std
inc
xchg
test
adc
int3
mov
aad
xchg
dec
insb
cld
sub
pop
pop
adc
dec
jnp
out
std
xchg
add
mov
pop
jnp
pop
cmp
inc
add
aas
mov
bswap
or
mov
add
fld
inc
cmpsl
dec
mov
and
pop
push
or
andb
mov
fiaddl
pop
popa
push
sbb
jg
dec
icebp
adc
cmp
push
add
pop
in
ss
stos
adc
sahf
jp
inc
shlb
aad
and
or
in
mov
pop
mov
orb
out
mov
out
scas
lds
or
mov
pop
insl
and
cmpsb
les
push
inc
or
pop
xor
fmul
xchg
aad
sbb
je
xor
stos
jmp
aam
lock
loope,pt
shll
rorb
lahf
outsb
test
sbb
mov
xchg
ss
scas
adc
lods
mov
movsb
xor
push
stos
mov
adcl
dec
scas
pop
cmpb
in
mov
jecxz
pop
enter
dec
lcall
add
push
dec
mov
sbb
jmp
lods
enter
jno
dec
loopne
std
std
lahf
and
and
dec
sbb
sbb
adc
xchg
sbb
pop
or
mov
xchg
loope
out
cwtl
add
sbb
rcrl
test
lods
xchg
rolb
adc
adc
cmp
or
add
xchg
mov
and
je
sub
pop
mov
test
clc
lcall
cmpsl
clc
add
pop
aaa
sbb
inc
in
jmp
insl
aad
les
int3
sub
insb
lock
mov
andb
shll
arpl
cmova
aad
push
jae
and
and
dec
dec
xchg
mov
adc
pop
loopne
cmp
mov
mov
push
iret
sarl
push
mov
sarb
jne
sbb
push
push
lret
int
imul
xchg
icebp
mov
sub
sbb
das
inc
fists
or
roll
out
dec
imul
cmc
imul
addr16
mov
mov
mov
add
add
pop
mov
in
cli
or
das
fisttpll
andb
push
in
mov
mov
add
adc
mov
fiadds
js
sbb
mov
adc
jne
je
enter
stc
sbb
stos
xchg
test
leave
repz
inc
pop
pushf
rcl
rolb
loopne
mov
xlat
dec
inc
and
clc
sbb
hlt
ds
je
inc
je
cmp
hlt
mov
pop
mov
jg
jge
inc
repz
pop
xor
stos
call
dec
shlb
adc
cmp
roll
mov
sbb
scas
lock
dec
lock
aaa
incl
cmp
push
adc
and
and
cmp
clc
mov
mov
add
xchg
xchg
popf
xchg
jl
sti
dec
adc
test
imul
sub
inc
or
test
das
fstpt
jl
out
rorb
arpl
nop
ret
xchg
or
out
push
repz
jo
jo
rorb
mov
mov
lods
inc
pop
popf
mov
or
xchg
sarl
icebp
loop
sbbb
jmp
xchg
xchg
shll
or
jo
xchg
mov
test
in
gs
mov
es
or
call
mov
pop
mov
test
cmpsb
shll
into
icebp
mov
scas
test
xchg
mov
or
inc
xchg
mov
shl
mov
mov
hlt
loope
aam
ja
sub
cmpsb
mov
enter
leave
or
aaa
cld
xlat
sahf
lahf
outsb
fisubrl
jnp
clc
add
adc
fimull
movsb
mov
or
aaa
cmp
lret
out
push
lret
leave
dec
jecxz
dec
sbb
add
adc
shlb
lock
add
fistl
rcrl
mov
int3
daa
sub
mov
fadd
sub
mov
ret
stos
mov
sub
sbb
out
mov
inc
mov
xchg
pop
mov
je
scas
arpl
mov
adc
test
test
mov
shll
scas
mov
dec
xor
ret
mov
fldcw
xchg
add
pushl
and
mov
mov
js
loop
movb
rcl
jns
fsubr
mov
fcoms
inc
enter
les
ret
xchg
pop
repnz
sbb
cmp
add
rol
aas
inc
pop
fnstcw
inc
leave
loop
push
xchg
inc
mov
in
bound
pop
scas
rorb
orl
mov
loopne
dec
cvtpi2ps
lahf
push
addr16
outsl
cltd
repz
mov
leave
int
std
fidivs
pushf
in
imull
mov
test
mov
int3
lods
rcll
adc
cmp
fidivl
push
ret
inc
lcall
xor
or
cmpsb
sbb
cmp
jae
push
enter
imul
test
dec
jl
jo
in
cmpsb
sub
cmc
in
shlb
add
stc
lods
jns
shr
popa
rcll
sarb
adc
xchg
jae
adc
adc
mov
lret
cli
pop
fadds
dec
fs
dec
cmpl
sbb
clc
mov
int
cmp
int
fisubrl
ret
inc
fwait
add
cld
mov
push
scas
ja
inc
inc
cltd
mov
dec
test
loope
mov
inc
aam
shrl
fildll
lret
mov
jnp
sub
js
lods
sub
call
pop
jge
sub
xor
mov
and
sbb
push
sbb
inc
pop
push
gs
lret
imul
push
fisubrs
inc
pop
adc
xor
inc
rorl
pop
insb
xchg
add
push
jge
jns
addb
stc
aam
and
enter
das
daa
xchg
and
dec
xchg
arpl
add
das
fildll
or
sub
add
and
inc
push
jge
lcall
cmp
scas
cmpsl
mov
inc
jl
mov
lret
cmpsl
pop
rclb
insb
pusha
sub
inc
pop
dec
rorb
sahf
lods
push
and
push
arpl
add
inc
jns
and
xchg
add
lea
js
in
dec
movsb
xor
scas
lock
mov
ret
mov
roll
push
inc
cmp
jo
iret
mov
mov
mov
lcall
sub
or
sub
jno
cld
lock
pop
leave
sub
scas
or
and
loope
inc
popf
lcall
jge
les
push
loopne
xchg
stos
je
outsb
sub
int
daa
push
mov
nop
clc
xor
push
or
adc
and
movsl
and
pusha
and
das
cmc
jle
cmpsl
enter
xchg
dec
xor
leave
out
cmpsb
mov
jae
or
mov
movl
sub
push
out
lret
xor
pop
ja
xor
loopne
push
mov
ss
inc
push
or
xorl
or
jmp
sub
addr16
push
cmp
stc
call
mov
aaa
test
inc
insl
fldpi
xchg
pop
scas
int
daa
sbb
add
je
jge
adc
jecxz
push
arpl
dec
cmp
mov
testl
jmp
aam
xchg
push
mov
jle
and
out
push
movsb
or
mov
mov
sbb
cli
jge
cmc
int
loop
lcall
push
fsubl
shlb
cmpsb
test
out
xchg
out
scas
xor
pop
popf
rorl
iret
mov
xor
adcb
xlat
arpl
mov
aam
loopne
jne
fildl
insl
lock
and
mov
testb
pop
xchg
leavew
add
pop
pusha
cmp
outsl
les
jle
sbb
sub
pop
test
or
cwtl
dec
cli
jb
roll
pop
mov
sub
xlat
sbb
insb
jmp
mov
leave
mov
mov
add
sub
das
xchg
mov
rorb
or
pusha
or
sbb
or
gs
adc
ds
jp
lds
les
xchg
or
ret
shll
sbb
jnp
in
pop
inc
addr16
add
popf
mov
pop
std
stc
dec
mov
mov
add
add
jno
jp
pop
xchg
divb
lock
loope
pop
call
fwait
cmp
mov
sbb
lods
jmp
inc
mov
hlt
mov
lds
cld
es
mov
xor
add
js
test
xchg
loope
lret
xchg
icebp
push
in
xchg
fsubrl
aaa
andb
fstl
mov
mov
sub
loop
cmp
sbb
dec
or
jne
fdivl
fdivl
or
jmp
push
je
inc
sbb
inc
pop
xchg
enter
scas
jp
or
or
out
lock
push
ret
cmpb
cld
nop
push
mov
sbb
mov
mov
jae
lcall
inc
push
cmp
pop
push
xor
jo
shlb
in
pop
xchg
je
add
pop
jbe
cmp
fs
mov
xchg
mov
sbb
sbb
mov
cli
jecxz
xor
sub
call
xchg
arpl
in
pop
aaa
lea
xchg
inc
adc
adc
lret
adcb
mov
jbe
mov
sbb
dec
jg
mov
pop
xchg
ret
mov
pop
pop
cmc
and
xcrypt-ecb
cmpsl
dec
stos
pop
pop
jb
mov
jg
lods
mov
jne
es
scas
jmp
mov
push
scas
dec
cmp
outsb
je
xchg
and
popa
or
jl
jbe
gs
test
or
push
lret
bound
sbb
dec
inc
inc
or
mov
aaa
aam
outsl
cmp
xchg
sub
inc
sub
sbb
push
call
mov
es
mov
pop
dec
jg
std
js
jo
jb
pushf
rol
das
out
xor
sub
loopne
mov
xor
ds
pop
outsb
or
test
xor
pop
clc
sub
pop
cmpsb
ffreep
mov
mov
out
sbb
mov
sbb
cmpsb
ja
loope
lods
sarl
pop
hlt
mov
jp
xlat
jno
push
lcall
push
xlat
pop
lods
stc
data16
mov
das
test
push
jae
mov
pusha
sbb
add
icebp
notb
lret
cmc
fs
mov
mov
lret
orb
sub
ret
sub
loop
ljmp
xchg
outsl
jbe
inc
outsl
loope
jmp
push
mov
pop
test
add
lock
in
push
sbb
xlat
pop
cmp
jle
movb
mov
mov
movsb
add
push
dec
loopne
mov
jne
pop
jge
xor
nop
cli
es
sub
adc
jae
daa
mov
sbb
imul
sti
outsl
jl
push
es
ja
iret
sbb
push
ss
pop
add
xchg
add
dec
int
sub
jne
outsl
pop
repnz
adc
mov
sub
dec
mov
adc
es
push
xor
or
inc
xchg
hlt
shlb
lea
repz
xlat
int
pop
sub
fnsave
cli
mov
jp
aas
rclb
jl
movsl
inc
movsb
cld
rolb
mov
or
nop
hlt
jbe
push
fidivl
frstor
jo
ret
sbbl
cmp
mov
add
cmp
jbe
push
lock
sbb
inc
mov
cltd
xchg
and
fs
cmpsl
add
inc
pop
mov
ret
adc
xchg
filds
mov
push
mov
dec
inc
inc
sub
lock
push
jo
pop
imul
frstor
inc
and
inc
mov
xor
jne
xchg
clc
push
and
jo
sub
mov
inc
loop
adc
xor
or
clc
fdivl
pop
cmpsb
shlb
or
fnstcw
mov
les
ret
leave
sbb
sbb
mov
sbb
adc
or
pop
mov
push
ds
xchg
or
aam
popf
jl
push
sti
aaa
or
sbb
je
unpcklps
imulb
ljmp
add
jmp
call
mov
mov
subb
test
cld
in
out
sarb
scas
adc
loope
nop
cmp
mov
mov
loopne
adc
cmp
and
lods
sbb
xor
sbb
imul
pop
mov
loopne
add
data16
mov
pop
outsl
test
xchg
iret
sti
out
pop
fadds
dec
call
dec
or
ljmp
lcall
lock
mov
mov
iret
pop
mov
and
sbb
adc
sbbb
movsb
push
sub
lds
and
pushf
jns
mov
scas
xchg
dec
data16
jb
test
mov
cmp
notb
mov
pop
dec
add
shr
pop
fsubl
adc
adc
inc
mov
add
pushl
push
cld
pop
scas
push
pop
notb
shrl
adc
jnp
sub
mov
stos
xchg
push
pop
cmp
sarb
rorl
inc
adc
leave
lcall
and
andb
cmp
incb
daa
leave
xchg
push
lock
xor
inc
js
std
lcall
push
and
adc
lods
inc
dec
inc
pop
mov
fisttps
pop
nop
cmp
adc
dec
xor
outsb
dec
pushl
jl
mov
add
std
push
and
sbb
mov
mov
fimull
cmc
inc
cwtl
xchg
ret
jecxz
lea
and
loopne
pop
ljmp
into
ficompl
add
dec
and
enter
bound
push
repz
lcall
or
dec
add
in
repnz
jb
push
xlat
inc
or
sahf
cmp
ds
insb
mov
xchg
adc
dec
mov
inc
sbb
dec
das
xor
push
shl
dec
push
mov
pop
sub
loope
je
pop
jg
adc
mov
sub
mov
sbb
mov
push
ds
mov
call
add
mov
popf
int3
jnp
mov
in
stos
push
inc
mov
sub
and
call
and
ljmp
clc
jbe
jle
push
loopne
cs
push
loop
mov
imul
dec
jle
push
hlt
andl
popa
jge
mov
lcall
push
leave
jo
out
adc
fs
xor
cmpsb
dec
add
dec
xchg
and
jne
and
lock
cmp
and
mov
cmp
inc
jo
adc
shrl
and
aaa
outsl
add
mov
push
jne
xor
push
cmp
movl
in
mov
lea
push
add
cltd
adc
inc
bound
adc
movsb
mov
loopne
les
jg
mov
int3
xlat
inc
sar
movsl
dec
add
and
sbb
jmp
add
cmp
sub
js
mov
das
jno
sahf
or
fldl
dec
cli
test
arpl
sub
rcrb
pop
cld
aad
xor
icebp
cmp
and
mov
sbb
mov
in
xchg
mov
sbb
pop
nop
sbb
sbb
cld
stos
lret
cmc
jp
jb
in
cmpsl
xchg
shlb
mov
mov
sub
sbb
ret
shrl
add
pop
lock
scas
lds
hlt
pusha
aas
rol
es
out
sub
sahf
jb
push
xor
xchg
sub
inc
int3
insl
nop
add
in
insl
mov
xabort
scas
fst
sar
inc
and
dec
in
mov
mov
mov
xlat
mov
rcl
jge
cmpsl
testb
lcall
je
pop
push
and
pop
push
fmull
in
cmc
push
push
cmp
imul
fs
pop
lret
pmuludq
fistpll
outsb
je
andl
add
jmp
jmp
dec
mov
dec
xchg
lds
fs
vmptrst
loopne
je
insb
sub
or
xchg
xchg
mov
mov
add
cmp
xchg
out
jmp
clc
add
xor
and
cs
fs
pusha
jb
mov
movsb
push
out
out
push
push
cs
or
bound
jge
mov
push
cwtl
push
push
push
xor
inc
into
arpl
fucomip
lret
clc
xchg
inc
fdivrl
dec
jp
mov
repz
pop
xchg
clc
data16
pop
xorb
mov
inc
fiadds
adc
or
bound
fists
sbb
repnz
out
sahf
mov
mov
lods
stos
pop
inc
jae
jnp
dec
adcl
lret
jecxz
cmp
aaa
xor
rorb
sbb
mov
testl
jg
fisubrl
cmp
sbb
lock
or
pand
or
mov
xor
pop
mov
popf
dec
pop
pop
inc
dec
or
mov
lods
pop
icebp
hlt
inc
mov
xchg
jmp
inc
pop
sbb
hlt
dec
and
daa
icebp
imul
lds
xchg
test
rcl
les
icebp
mov
and
sbb
xchg
sar
add
pushf
sub
aaa
imul
lock
jle
fisubl
jmp
add
xor
imul
and
pushf
lods
hlt
shll
sbb
sbb
mov
pop
insb
pop
push
scas
out
jne
xor
movsl
cld
xlat
cli
ss
inc
adc
test
inc
hlt
js
or
cmc
aad
sar
and
mov
or
xor
es
shrb
xchg
or
repnz
push
or
inc
mov
and
sbb
sbb
cld
popl
inc
sbbl
pop
loope
ja
or
rcl
int3
sub
push
lds
adc
pop
xchg
cmp
push
xlat
jbe
movsl
jmp
addl
daa
dec
enter
or
and
pop
je
add
hlt
jae
dec
or
sti
aam
push
adc
sbb
cmpsb
sbb
add
xor
cld
xor
inc
jbe
xchg
cli
sbb
pop
shlb
pop
ja
sub
sub
mov
adc
jp
add
bound
das
hlt
ret
inc
xchg
mov
data16
orl
push
repz
pop
push
or
sub
jge
dec
mov
ss
lock
aad
imul
add
sti
jp
push
scas
xchg
push
add
inc
jl
lods
adc
jae
push
sub
mov
inc
or
mov
xor
cmp
dec
cld
or
jbe
mov
mov
dec
nop
jle
loopne
hlt
xchg
xchg
lret
push
inc
scas
lock
les
loop
jp
adc
scas
jl
fnsave
addr16
lock
inc
dec
push
pop
ds
jecxz
les
hlt
xor
mov
cld
mov
or
mov
jl
icebp
add
jp
movsb
sbb
lcall
or
cmp
inc
rcrl
and
fmuls
es
ret
inc
cmp
mov
mov
inc
adc
sarl
addb
dec
in
outsb
pop
mov
add
jbe
notb
loopne
dec
movl
mov
or
sbb
jecxz
cld
in
add
enter
or
or
cmp
push
cmp
jne
pop
jg
shlb
lock
add
pop
inc
testb
inc
add
jbe
inc
xabort
cld
dec
push
pop
lods
aaa
sbb
push
scas
push
lahf
or
and
push
out
lock
push
cwtl
sbb
out
sahf
mov
enter
arpl
repnz
push
movsl
arpl
add
push
mov
jge
adc
pushf
dec
mov
mov
test
nop
mov
xor
sub
sbb
or
insb
sbb
mov
pop
repz
mov
and
cs
xchg
mov
xchg
jmp
add
add
mov
pop
cli
cmpsl
test
push
lock
out
stos
mov
mov
pop
or
add
xchg
add
lock
idiv
jge
jae
sbb
add
sbb
lock
mov
cmc
outsl
adc
lock
xor
mov
cld
sub
xor
call
mov
dec
in
dec
imul
pop
loop
jge
mov
test
aas
cmc
shlb
xchg
push
je
or
pusha
push
shrb
pushf
xchg
sub
mov
cwtl
mov
push
push
mov
clc
cmc
rcrb
sub
xchg
or
scas
sub
mull
imul
xchg
int3
push
sub
mov
sbb
sub
incb
rclb
pop
or
insb
push
and
cmpsb
loope
fcoms
lods
adc
out
mov
push
mov
or
add
inc
mov
sbb
cmp
push
add
inc
inc
outsb
push
fwait
add
adc
nop
aad
push
mov
stos
jbe
mov
cli
mov
pop
jge
or
fdivl
push
xchg
inc
sbb
shl
data16
cmpsl
sbbb
mov
or
sar
push
into
push
loopne
int
mov
adc
fcmovbe
add
and
xchg
add
nop
or
dec
roll
sub
popf
cmc
add
mov
bound
inc
outsl
iret
into
push
sbb
pop
ficoms
add
outsb
or
pop
sub
adc
in
jp
xchg
rclb
mov
rcrl
sarl
mov
push
xor
imul
fldcw
push
je
gs
cwtl
shrl
outsb
fldenv
fwait
or
loop
xchg
push
stos
adc
jle
xchg
or
inc
out
push
cld
dec
loope
cmp
fwait
push
cmp
fidivrs
in
mov
cmc
sbb
je
sub
data16
add
pop
jno
add
cmp
mov
ret
fs
in
clc
lret
aaa
sbb
dec
sub
scas
sbb
ret
inc
clc
sbb
pop
jp
shll
scas
adc
movsb
in
andl
jecxz
inc
pusha
stc
fiaddl
push
mov
sar
cmp
movb
push
xchg
jb
mov
pop
aam
xor
sbb
pop
out
int3
les
das
xchg
sbb
cs
test
shll
cmpsl
or
test
leave
and
jl
enter
mov
cmp
sbb
scas
lea
pop
inc
pop
int
sbb
or
push
xlat
daa
lret
xor
scas
pushl
or
fists
mov
add
xchg
adc
xor
cld
jno
pop
dec
mov
cli
cmp
insb
mov
xlat
add
rolb
js
mov
jecxz
ljmp
pop
xorb
mov
push
dec
jle
dec
rolb
into
aad
pop
mov
sub
clc
sbb
mov
push
inc
dec
iret
dec
add
push
mov
je
add
pop
inc
cmp
addr16
pop
push
shl
dec
xor
aas
outsl
xchg
popa
hlt
and
mov
js
loopne
mov
out
clc
or
push
adc
push
mov
jmp
xchg
in
cmc
or
adc
outsl
popf
cltd
shlb
inc
ja
or
mov
insl
push
inc
xchg
enter
pop
ret
and
aas
bsr
std
fldl
jmp
mov
adc
cmp
icebp
jo
push
movsl
lahf
stos
je
ret
push
addr16
and
movsl
sub
lods
int
fcmovnu
pop
mov
pop
lock
roll
sbb
fsubl
mov
xchg
dec
or
test
call
cmp
mov
mov
xchg
add
cmpb
fsts
cmp
adc
mov
scas
cmp
in
lock
mov
in
add
das
inc
and
add
add
loop
jns
cmp
jle
xor
xchg
push
push
or
xor
cmpsl
loop
stos
xlat
pop
test
xchg
cmp
cmp
mov
pusha
bound
inc
shr
and
je
push
outsb
adc
adc
jno
out
stos
hlt
fwait
movsl
lock
ja
cmp
scas
or
into
jp
pop
pop
idiv
outsb
lods
in
pusha
scas
stc
push
add
inc
dec
pop
sbb
mov
lea
mov
jg
and
lods
cmp
popf
sbb
xchg
dec
loop
mov
outsl
cmp
loop
xchg
mov
ja
fdivs
hlt
push
shlb
pusha
xchg
mov
xchg
subb
xlat
mov
lret
in
xchg
add
stos
outsl
jl
cltd
sbb
xchg
pushf
push
dec
ljmp
inc
loopne
jnp
cmpb
adc
adc
dec
es
sub
scas
fidivl
test
test
dec
sbb
in
fsincos
jp
add
mov
sub
imul
and
faddp
sahf
jmp
mov
aas
adc
jge
in
and
push
jnp
rep
scas
rcll
cmc
jo
sub
cmp
lret
dec
repnz
adc
cmpsb
outsb
cmp
adc
cli
xor
in
push
push
or
inc
test
inc
sti
cli
sbb
mov
mov
scas
jmp
cmp
icebp
fisubl
or
push
cwtl
fmuls
xchg
inc
adc
filds
call
and
ret
push
dec
mov
jp
push
icebp
cmp
lds
aad
push
xchg
cmp
jg
xor
lahf
call
add
lahf
shr
jmp
xor
pop
pop
outsl
rcll
fisubrl
push
mov
xor
clc
push
jecxz
sub
or
add
repz
lock
mov
pop
pusha
adc
daa
inc
xchg
push
mov
push
push
inc
adc
xchg
jp
mov
loope
push
filds
fwait
mov
ret
adc
mov
add
adc
ja
popf
jo
mov
pop
lret
ds
lahf
loop
sbb
cmc
push
mov
rcrl
arpl
popa
lcall
and
lock
test
inc
iret
lock
sub
jo
push
xor
in
jmp
fs
sub
inc
daa
sbb
jge
jg
add
pop
adc
lret
dec
aas
test
fsubrp
pop
or
out
sarl
pushf
sbb
jecxz
push
mov
shll
pop
or
ljmp
cmp
int3
sbbl
pop
ds
pop
cli
and
mov
and
or
add
xchg
mov
adc
mov
mov
and
xchg
imul
pushf
or
pushf
fisubrs
mov
lock
adc
cmp
pop
inc
mov
jl
inc
test
push
decl
adc
lods
test
ss
subl
pushf
inc
jnp
sub
int
xor
adcb
mov
imulb
jbe
aas
into
aam
mov
jbe
push
js
mov
std
scas
inc
xchg
push
pusha
xchg
adc
push
inc
rorb
push
das
inc
jge
jecxz
lcall
push
call
inc
aam
nop
pop
jae
cmc
push
loope
xchg
repnz
sahf
pop
stos
jnp
jo
negl
jno
push
and
mov
fisttpl
fstps
jecxz
sbb
and
dec
cmp
js
hlt
mov
mulb
jae
lea
mov
addb
sbb
mov
cmp
subl
adc
mov
mov
cmp
xor
ret
xchg
push
call
or
or
lea
adc
dec
push
add
jne
jno
in
movsb
call
nop
adc
fs
dec
stos
cmp
mov
mov
lock
push
roll
push
add
jle
sbb
std
xlat
mov
push
cmp
jge
out
in
mov
fwait
test
cmp
cmc
lret
and
and
mov
in
lahf
mov
fs
mov
jb
inc
add
add
xchg
test
incb
add
lods
add
dec
dec
add
fcoml
xor
cwtl
adc
cmpl
mov
lea
inc
sar
mov
pushf
xchg
popa
and
push
sbb
push
fadd
icebp
xlat
push
aas
push
pop
ret
sbb
adc
add
pop
jp
in
jp
jge
out
lods
cld
xchg
movsb
psubb
int3
cmpsl
mov
jl
pusha
orb
mov
xchg
push
mov
loope
js
or
enter
sbb
adc
and
add
lds
aam
xchg
cltd
in
popa
cwtl
mov
clc
adcl
sti
pop
lods
aaa
cmp
fcmovbe
inc
inc
addr16
mov
push
outsb
jno
xor
add
rclb
mov
jno
xlat
das
rclb
testl
inc
fsubrs
ret
insl
mov
arpl
mov
lods
loope
loope
test
rcrw
mov
out
or
loope
aas
mov
stos
jg
lret
sub
jb
pop
mov
cmp
std
test
push
ss
mov
scas
ret
push
add
in
hlt
add
mov
push
mov
mov
test
jge
incl
inc
push
pop
int
lea
mov
icebp
aaa
rcr
pushf
jle
testl
dec
addr16
dec
ljmp
add
cmp
adc
sbb
pop
push
out
lahf
lret
loopne
mov
or
inc
mov
jl
aaa
lret
or
pop
ficoms
rol
clc
or
xchg
or
je
and
aaa
jge
mov
std
and
pop
mov
inc
mov
movsl
inc
xor
pop
cmp
mov
sub
cmc
mov
or
and
arpl
xor
or
sbb
sbb
js
cmpl
mov
add
inc
lret
fidivrs
lret
mov
mul
xorb
cli
gs
jp
loope
push
inc
pop
out
pop
xor
adc
lahf
or
bound
jecxz
in
scas
pusha
insb
dec
cmpsb
or
inc
dec
clc
pop
xor
adcl
add
xor
or
lods
test
shll
cmpsb
cmpsl
adc
adc
movsb
lcall
xchg
add
sar
add
clc
xlat
cmpsb
pop
mov
repnz
test
pop
popa
or
addr16
add
pop
out
add
loopne
add
add
mov
lea
xchg
dec
mov
mov
mov
out
pusha
jnp
add
fbld
jns
adc
push
lods
mov
rclb
pop
push
in
cmp
popa
enter
push
mov
insb
cmovne
xor
jns
sbb
dec
out
xor
dec
jge
pop
hlt
scas
mov
outsl
and
daa
hlt
dec
xlat
test
and
loopne
push
inc
stc
mov
lock
and
or
ljmp
test
jnp
inc
fdivrl
cld
adc
jne
jne
push
out
mov
andl
mov
jo
shlb
or
loop
fsubrl
in
xchg
xchg
pop
adc
enter
dec
dec
les
mov
mov
cmp
xchg
lcall
mov
pop
divb
xchg
cli
push
icebp
stos
add
add
scas
mov
sahf
push
jno
jp
pop
jns
inc
mov
cmp
pop
sbb
jmp
fiaddl
pop
jmp
jge
fistl
dec
push
xchg
std
dec
clc
inc
xchg
sub
ds
inc
or
cld
movsl
jg
pop
add
setl
mov
or
test
cs
movsl
call
and
lods
into
data16
pushf
mov
pop
call
mov
xchg
or
xlat
sub
sbb
sarb
imul
add
cmp
je
dec
faddl
test
jbe
inc
sbb
lcall
push
and
or
cli
ret
jp
add
lea
int
rcrl
dec
popa
hlt
mov
jg
jmpw
test
cs
add
in
pop
hlt
xor
shlb
out
aaa
or
inc
dec
mov
clc
pop
or
call
pop
or
arpl
push
and
les
mov
sbb
fisttps
mov
dec
jae
mov
aaa
jecxz
icebp
stos
dec
shl
lcall
xchg
aas
inc
inc
sub
shll
or
les
cmp
sub
dec
aas
cmp
xchg
adc
pop
mov
push
push
or
out
add
rcrl
lods
in
fcmovbe
stos
ds
movb
setne
adc
jecxz
inc
jecxz
mov
incb
inc
mov
aam
or
fnstenv
adc
aas
int3
mov
aas
iret
mov
lret
aad
lock
test
bound
sub
jp
int3
adc
insb
push
jo
add
jg
inc
push
testb
mov
mov
repz
dec
sar
xchg
jmp
jae
shlb
dec
lret
ror
pop
or
jg
push
cmpl
lock
wbinvd
mov
inc
push
pop
cmp
adc
jl
stc
and
xchg
or
fisubs
adc
imul
out
shrb
ljmpw
cmpb
sub
fcompl
push
inc
jecxz
les
or
popa
and
sbbl
lock
lods
sbb
push
pushf
and
cmpb
sub
stos
mov
mov
orl
mov
enter
sar
ljmp
add
ret
push
dec
gs
add
add
mov
repz
ret
hlt
jbe
loopne
dec
clc
aas
push
inc
iret
sbb
movsl
mov
cmp
xchg
mov
ljmp
arpl
push
mov
lock
adc
les
jp
call
add
out
js
push
sub
xchg
hlt
and
div
adc
sbb
add
dec
and
orb
mov
ljmp
or
adc
cmp
pushl
imul
adc
inc
addb
mov
or
pop
push
or
inc
incl
enter
lahf
or
ljmp
jge
das
xchg
cld
push
mov
xchg
popf
add
pop
inc
cwtl
xor
insl
jg
sbb
dec
lock
cmp
inc
push
mov
das
aam
push
incb
sub
add
testb
testl
leave
mov
std
stos
jge
aad
mov
cwtl
push
ret
pushf
subl
add
xchg
stos
ret
loopne
test
mov
pop
nop
inc
inc
ror
arpl
pop
pop
loop
imul
cld
loope
icebp
cmc
mov
mov
dec
xchg
or
or
out
popf
scas
testb
push
imul
or
mov
aas
mov
test
cmp
mov
sbbl
add
jmp
mov
icebp
mov
push
or
sub
jb
das
ret
sbb
pop
add
mov
hlt
inc
sub
lahf
mov
scas
inc
push
or
out
loopne
jl
sub
mov
es
idiv
mov
adc
lret
cmp
shrl
inc
push
xchg
into
pop
cli
stos
gs
stc
xchg
rcrl
je
push
sbb
dec
xchg
das
mov
js
and
inc
pop
push
push
cmpb
lcall
leave
jecxz
cmp
fdivr
data16
sbb
xchg
popf
jb
adc
pop
xchg
push
mov
jl
jg
jge
idiv
xchg
adc
clc
inc
insb
cld
inc
bound
lea
xchg
sbb
push
dec
mov
pop
jmp
cmpl
mov
pop
ljmp
arpl
jg
fs
movsl
inc
cwtl
or
aad
mov
xchg
jmp
xor
lret
sbb
xchg
push
add
ficompl
add
sub
sarb
test
shl
mov
testl
pusha
ret
test
push
and
or
cli
sti
mov
std
mov
dec
inc
pop
or
outsb
and
std
xchg
and
sub
sbb
mov
test
sbb
cmp
lods
or
int3
mov
data16
xchg
cwtl
mov
cld
out
or
push
pusha
xor
xor
les
lret
mov
fldz
ja
push
movsb
addl
and
lret
imul
ja
inc
jmp
cmp
pop
stc
mov
in
adcb
and
inc
jne
daa
sub
call
xor
push
and
push
push
jle
in
outsb
add
or
mov
mov
cli
sahf
fbstp
jp
add
arpl
mov
xchg
ficompl
js
sbb
mov
mov
xor
pop
rolb
outsb
xor
inc
jecxz
loop
iret
fldenv
incl
incb
and
inc
fstpt
dec
out
inc
das
cmp
adcb
mov
pop
outsb
clc
out
hlt
cld
jo
es
jle
das
cli
cltd
jmp
jge
loopne
cmpsl
push
lock
dec
xchg
jp
popa
inc
insb
jmp
xchg
lret
xor
loopne
fcoml
mov
pop
or
arpl
cmp
push
xlat
sbb
add
outsl
data16
pop
jle
xchg
sub
cmc
xchg
outsb
rclb
push
and
aas
mov
inc
pop
inc
pcmpeqd
adc
stos
add
inc
mov
inc
hlt
shlb
clc
aaa
cli
pop
push
push
cmp
inc
mov
aaa
clc
dec
and
add
jl
mov
dec
mov
dec
mov
push
int3
and
jnp
add
out
repz
cmp
fdivs
bound
pop
loop
dec
cld
push
icebp
jbe
sbb
add
inc
mov
inc
sub
aas
cmp
bound
push
sbb
notl
xor
pop
icebp
pop
mov
inc
mov
out
xchg
mov
push
fcomps
daa
adc
ljmp
xor
dec
dec
push
outsb
loopne
insb
adc
lahf
je
ret
cld
inc
add
xchg
jmp
xchg
add
imul
iret
clc
cmp
push
les
jno
sub
inc
adc
decb
xor
jo
lock
jbe
mov
fists
cwtl
push
fidivs
shll
repz
out
pop
lcall
push
adc
clc
rorb
mov
jo
or
cwtl
cmp
xchg
xchg
repz
dec
lock
sub
insl
xchg
sbb
inc
dec
cmpsl
sarl
loope
push
imul
int3
jnp
outsb
sti
adc
xchg
movsb
lds
pop
in
or
cmp
fidivl
pop
mov
inc
or
movsl
push
int
movsl
and
in
inc
dec
and
das
jae
repnz
push
icebp
xchg
test
add
decb
shr
adc
xchg
inc
xor
mov
out
call
aaa
daa
std
pop
pop
xor
inc
cmp
mov
and
xor
jg
push
cmp
push
lret
xor
rorb
ds
inc
js
add
mov
loope
shrb
xchg
push
mov
hlt
into
jns
cmp
adc
pushf
mov
adc
sbb
pop
xchg
cli
mov
lahf
cmpsb
xchg
addr16
loop
cli
dec
and
insl
rcrb
outsb
mov
fwait
out
xchg
fucomip
adc
push
sub
loopne
mov
cli
repnz
call
ffree
rcrl
pop
icebp
xchg
shlb
jo
or
lods
mov
adc
aas
aam
add
jmp
addb
addr16
jmp
and
loop
aad
sbb
and
xchg
lock
push
pop
hlt
sub
and
rolb
ja
insl
mov
adc
cmp
xchg
xchg
incl
cmpsl
fsubp
mov
fwait
in
ljmp
loope
pushf
test
sti
pusha
popf
mov
add
into
scas
mov
divl
lahf
add
insl
push
fdivp
call
cmpb
loope
xor
and
fwait
jg
cmc
add
mov
mov
cld
mov
push
dec
lock
repz
in
cmp
mov
push
out
movsb
mov
pushl
fildll
ret
hlt
pop
sub
arpl
pushl
in
int
pushf
andb
ret
jecxz
pop
and
jmp
jne
or
lea
std
xorl
sub
mov
aad
mov
imul
or
stos
jb
rcll
inc
dec
shlb
mov
bound
push
adc
or
push
adc
loope,pt
push
ficompl
ret
outsl
xor
or
jne
mov
pop
jg
cmp
loopne
sub
jp
xlat
imul
inc
jmp
lcall
les
fiaddl
xchg
xchg
xchg
lcall
mov
jl
int
repnz
rolb
dec
or
or
testl
sub
xor
xor
xchg
sbb
int3
mov
aas
or
adc
int3
pop
ss
jne
icebp
sahf
mov
movsb
dec
inc
ljmp
add
and
push
mov
jg
add
jns
push
lods
clc
popf
add
mov
and
iret
sub
std
pop
fs
jge
pop
inc
imul
adc
out
pop
ffreep
clc
aaa
mov
sub
aas
leave
nop
pop
jno
cmc
mov
dec
movsb
and
inc
and
subl
adc
popf
jp
repz
lods
and
movl
popa
inc
dec
bound
push
into
xchg
mov
sub
es
jbe
xlat
mov
add
push
icebp
fcoml
mov
dec
mov
mov
insl
in
or
jbe
jg
test
mov
lea
or
fbstp
push
push
popl
cmc
add
add
fdivrp
add
test
and
push
push
test
mov
cwtl
cli
aad
sbb
je
or
fdivp
cmpsl
stos
inc
add
andl
push
or
jecxz
inc
sub
pop
push
cmp
add
mov
aaa
inc
scas
dec
mov
xor
adc
add
scas
lds
cmp
push
push
mov
decb
pop
lret
pop
data16
out
mov
inc
push
sbb
dec
ficomps
xchg
adc
cmp
push
add
andb
cli
sub
or
jbe
sahf
push
out
pop
fld
mov
xor
ss
push
inc
jbe
stos
add
xchg
mov
ror
jl
shll
nop
es
into
sbb
cmp
cmp
ret
dec
jl
dec
loopne
push
adc
jb
mov
xchg
js
mov
loope,pn
adc
sub
or
sarl
push
andl
dec
mov
pushf
mov
add
xlat
aaa
and
pusha
pop
call
adc
and
inc
and
movl
jb
or
mov
into
imull
inc
incl
daa
ret
xchg
add
fs
jg
xlat
shll
sahf
inc
cld
jns
mov
push
sub
adc
outsb
cmp
icebp
addr16
or
test
and
sub
out
and
mov
incl
xor
mov
cmp
ljmp
insl
add
mov
mov
shl
adc
sbb
sbb
call
push
negl
mov
dec
dec
dec
dec
std
pop
lret
bnd
mov
cmp
jg
adc
push
rclb
divl
xor
lcall
push
adc
pop
xchg
test
inc
pushf
in
jge
mov
fldenv
into
pop
mov
cld
leave
ja
in
ficoml
pop
mov
cld
cs
cwtl
popf
or
testb
cmpsb
ljmp
inc
notb
pop
adc
fists
or
rol
sub
ljmpw
and
push
pop
pop
addb
push
movsl
dec
jle
dec
xor
inc
xor
mov
divb
lock
pop
shlb
aad
pop
fstl
adc
lock
sub
std
xor
shr
dec
sub
mov
ds
repz
cmpb
xlat
push
sti
xchg
dec
xchg
or
lgs
sub
mov
test
insl
iret
push
popf
or
ret
rcl
xor
add
jb
nop
pop
xchg
push
in
mov
adc
cmp
lea
fldenv
jne
xchg
insb
push
inc
push
push
dec
sub
loope
mov
mov
mov
aas
adcl
adc
enter
fstpt
and
adc
mov
loopne
lret
lret
js
decl
sbb
add
xor
sahf
sti
adc
scas
test
pop
mov
pop
xchg
cld
fwait
mov
loop
push
daa
fcomps
mov
add
jno
bnd
jne
inc
xor
mov
scas
mov
fnsave
stos
sarb
lcall
cli
sub
and
jbe
mov
mov
push
push
cwtl
shr
icebp
lods
or
pop
pop
outsl
aas
jmp
mov
inc
fnclex
es
add
dec
clc
push
sbb
lods
icebp
and
xor
inc
pop
dec
mov
mov
jae
inc
rcl
dec
hlt
imul
add
out
mov
aad
pop
cmp
shrb
out
pop
add
cmp
xchg
rcl
xchg
and
and
test
push
cmpl
gs
mov
repz
adc
cmc
mov
push
lock
sbb
dec
or
inc
enter
popf
loope
notl
mov
test
and
test
test
lret
cmc
fsubrs
xchg
pop
jle
cld
push
sarl
push
sbb
ss
and
xor
cmpsb
lahf
cld
popa
xlat
in
cld
push
loope
in
push
xchg
icebp
in
adc
inc
popf
xchg
std
mov
sub
jg
repz
in
push
and
sti
movsl
aad
sbbb
rorl
scas
xorb
jnp
lret
es
xchg
fs
stos
inc
scas
popf
movsl
mov
xor
orb
xchg
add
pusha
js
pop
imul
sbb
shlb
pop
in
xchg
push
push
jge
or
insb
xor
push
or
pop
and
jno
push
cli
out
notl
mov
ja
scas
or
sub
or
jg
ja
xchg
or
sbb
and
scas
test
xchg
jecxz
repnz
pop
mov
in
and
push
dec
sub
andb
in
adc
je
inc
int3
in
push
cld
pop
mov
xchg
dec
push
pop
jo
loopne
aas
dec
dec
in
leave
rolb
add
xlat
or
stos
cmpsb
jecxz
pop
sbb
out
push
and
icebp
dec
out
lock
int3
rcl
or
inc
dec
js
pop
fs
sbb
pop
out
xor
inc
mov
pop
mov
add
ljmp
addl
sbb
inc
les
dec
jb
inc
jmp
ds
adcb
clc
and
jmp
loopne
inc
and
cmc
lods
adc
fstpl
shll
icebp
mov
hlt
movsb
pop
loopne
mov
pushf
ror
xchg
sbb
shll
scas
xor
add
add
repnz
push
cmp
push
jbe
add
loopne
or
cmp
ljmp
jne
outsl
sbb
sub
adc
shll
mov
daa
mov
in
and
sahf
outsl
mov
add
pusha
pusha
repnz
sub
jae
jb
xor
mov
addl
sbb
and
mov
call
dec
dec
dec
outsl
pop
sub
aad
mov
and
mov
mov
out
cmpsb
movsb
fisttps
sbb
je
leave
das
sbb
in
pop
inc
cmp
imul
lds
aad
xor
fstenv
aam
inc
ja
lds
repnz
xor
push
inc
imul
out
aad
push
or
jg
arpl
popf
add
or
movsl
push
loope
pop
js
sbb
push
bnd
cmp
dec
pop
adc
popa
aad
push
push
sub
imul
adc
mov
xor
lock
xchg
pop
ret
enter
push
pop
dec
lea
add
leave
mov
sbb
adc
adc
add
sub
stos
sub
lock
movsl
push
in
int
pop
inc
jmp
cli
mov
ljmp
or
mov
sub
incl
ljmp
mov
inc
jmp
add
popf
aad
add
sub
loop
sarl
mov
mov
or
cwtl
imul
sahf
dec
mov
xor
lea
xor
loopne
push
sbb
mov
xor
xchg
out
mov
incl
repz
xchg
jb
xchg
mov
sub
insl
loop
adc
and
aaa
loop
xchg
test
add
loopne
popa
jb
or
adc
movsb
movsl
sti
xor
add
jno
push
inc
sbb
push
js
shlb
mov
add
mov
pop
and
shll
cmpsl
ss
mov
andl
fistpl
jb
inc
test
jecxz
or
dec
ds
popa
push
lods
sbb
inc
fnstenv
fbstp
adc
divb
inc
test
inc
sub
inc
jecxz
mov
mov
ret
mov
or
xchg
lret
mov
jle
mov
xor
sbb
ljmp
in
es
pop
into
aam
cmc
sub
pop
inc
mov
adc
push
mov
xlat
sub
dec
or
subl
out
adc
xor
out
filds
sub
mov
lods
aaa
rolb
jecxz
lret
shll
outsb
or
adc
pushf
cmpsl
mov
push
cmp
iret
inc
scas
and
mov
xor
cmp
sahf
cmp
push
sbbl
ret
insl
gs
pop
and
cmc
push
mov
inc
jle
fists
sub
out
sysenter
sbb
jo
ret
or
imul
sub
inc
out
shlb
dec
fldl
outsb
xor
and
roll
pop
push
jne
xchg
test
or
hlt
pop
jae
and
push
and
xchg
adc
ret
pop
mov
jns
adc
sbb
jne
sbb
repnz
insl
jg
mov
mov
loope
loope
test
push
mov
dec
cltd
repz
mov
fistpll
repnz
push
sbb
aas
add
fdivrs
dec
loope
jne
sti
xchg
add
and
test
mov
cmp
jmp
hlt
xlat
lds
arpl
out
insb
ret
mov
pop
ss
repnz
lds
sub
fmul
subb
pop
xlat
mov
push
dec
or
dec
clc
jno
adc
cmc
std
mov
insb
movsl
and
mov
shrl
cmp
loop
insb
scas
popa
mov
jecxz
out
dec
lcall
popl
jns
dec
jecxz
mov
or
jae
std
std
jle
popf
mov
inc
xchg
addl
add
imul
ljmp
pop
jp
adc
lahf
outsb
sbb
mov
mov
jae
test
or
adc
cld
sbbl
adc
sbb
stc
dec
and
enter
pop
push
push
jae
rcrb
and
pop
shl
xor
add
gs
xchg
ds
pop
push
negl
scas
dec
mov
mov
push
pushf
add
xor
enter
sahf
jno
cmpsb
sbb
pop
popa
jmp
loop
xlat
lret
sub
int3
add
int
adc
mov
ds
jb
pop
push
push
mov
push
test
xlat
mov
add
adc
cmp
add
ret
arpl
pop
cmp
push
mov
cmpsl
jae
add
and
sbb
push
and
dec
or
out
add
dec
mov
aam
xchg
lea
jb
sbb
adc
sbb
sti
or
aas
jmp
push
sub
test
or
fcomip
cmpsl
loope
xor
sbb
jecxz
adc
pop
pop
cltd
mov
mov
cltd
sahf
bound
popa
aad
lcall
cmpb
les
je
addr16
or
mov
and
pop
insl
in
pusha
icebp
push
inc
adc
hlt
dec
pushf
je
fstpt
cmp
fnstcw
stc
cli
mov
or
fwait
test
xchg
jae
lret
mov
xchg
stos
ja
inc
xor
lock
inc
xor
pop
pop
out
fs
out
sbb
push
imul
cli
push
test
das
jno
mov
jecxz
lahf
cld
stos
adc
ret
nop
inc
add
inc
adc
popf
push
mov
mov
push
adc
mov
gs
add
in
das
bound
jbe
imulb
movb
push
dec
or
fimull
cltd
jle
jns
and
mov
push
or
xchg
pushf
mov
lods
das
loopne
pop
jno
adc
cltd
imul
push
je
outsl
popa
inc
inc
jl
ret
add
lock
or
jg
mov
mov
js
jb
daa
rcrb
sbb
cmp
mov
jnp
aad
adc
mov
mov
adc
mov
or
dec
subb
mov
scas
fisttpll
iret
cwtl
fs
push
push
inc
sub
dec
in
shl
cmpsl
ret
loopne
leave
test
mov
pushl
or
sbb
push
sub
fnstsw
loop
and
jbe
push
call
mov
and
mov
cmp
test
movsb
dec
ja
or
loopne
pop
xchg
mov
mov
and
sbb
sahf
jg
fidivl
cmp
imul
lret
je
xchg
mulb
repz
orb
mov
clc
in
pop
cmp
adc
sub
movsb
cmp
lods
pop
cmp
test
add
cmp
arpl
aam
cmp
xor
sub
jae
in
jno
test
nop
lock
lock
mov
push
mov
out
lock
sub
mov
pop
mov
and
in
pusha
sbb
or
aam
xlat
sbb
and
or
lods
shlb
jmp
in
xor
fwait
or
jge
pop
in
shrb
ds
push
or
adc
pop
in
push
adc
cmc
lods
imul
ja
xchg
adc
ret
icebp
mov
sahf
add
rep
sbb
fwait
shlb
and
stos
mov
stos
insb
subl
ljmp
popa
mov
sbb
or
rdmsr
fidivs
movsb
push
sbb
roll
pop
jl
fimull
loope
fs
sti
movsl
cmpsl
cmc
and
push
repz
mov
add
stos
bound
inc
sub
ret
shlb
test
lret
cli
int3
push
jecxz
insl
or
ss
arpl
xchg
insb
mov
xchg
push
sbbb
imul
aad
pop
js
jecxz
pusha
pop
xchg
cmp
cmp
cmp
mov
loop
iret
and
sbb
pop
cmp
lgs
dec
hlt
test
dec
xor
mov
cmpsb
adc
sbb
dec
sub
lahf
adc
aad
cmp
ljmp
fimuls
or
dec
iret
add
and
fwait
int
dec
test
push
add
cmc
sbb
pop
ljmp
loopne
cli
loope
outsl
xchg
push
pcmpeqw
insl
fucomi
add
shrb
lods
cmpsb
adc
xchg
pop
xchg
roll
jo
adc
setne
mov
js
sub
xchg
push
insl
mov
sbbb
cmpsl
jbe
adc
pop
mov
pushf
jno
mov
mov
mov
xchg
inc
cmp
out
sahf
jecxz
xorl
dec
pop
test
xor
lock
and
or
mov
mov
jecxz
fimull
fimuls
inc
incl
mov
test
test
mov
push
lret
xchg
push
leave
xor
pop
xchg
stos
add
xor
sub
dec
cmp
push
cmp
loopne
or
je
inc
aaa
push
outsl
cltd
add
lods
rcll
and
shrb
imul
leave
jae
mov
sti
push
push
dec
jbe
or
mov
dec
mov
popa
sub
fmuls
sub
stc
movsb
adc
js
inc
bswap
jp
ret
or
xchg
imul
pop
hlt
mov
push
xor
out
dec
in
add
mov
loopne
ud0
add
cli
aas
loopne
repnz
out
rorb
lds
out
cmc
or
inc
rolb
pop
add
mov
fisubrl
push
dec
or
or
das
push
loope
push
cmp
scas
dec
or
pop
mov
mov
xorl
out
popl
xchg
cmpsl
and
enter
push
and
cmp
mov
cmp
faddp
popf
or
repz
xchg
sbb
stos
push
decl
nop
mov
ss
daa
mov
dec
fcompl
stos
stos
or
push
stos
hlt
push
sub
sbb
cmp
jo
shrb
xlat
je
sub
cmp
ljmp
adc
jne
ja
xor
jae
imul
scas
sbb
pop
push
mov
adc
and
fisubrs
mov
test
mov
dec
adc
jo
xchg
fcoml
push
xchg
lds
popl
xchg
xlat
les
mov
fwait
daa
mov
fdivrs
out
mov
mov
push
cli
fists
and
push
ja
jl
ret
daa
xchg
mov
sub
xchg
sarl
cmpsb
fwait
xor
or
jg
jb
cltd
ss
cmpsl
lods
inc
inc
xlat
popf
arpl
xor
jmp
add
or
xchg
push
push
xchg
sahf
jl
ja
outsb
adc
test
lret
fsubp
loop
cs
and
popf
adc
mov
xchg
jmp
adcl
xor
xchg
push
sub
aas
jg
or
mov
jle
iret
gs
or
js
cmpsl
pop
mov
gs
push
pop
mov
aam
add
xor
add
push
scas
adc
push
adc
xor
pop
mov
jecxz
xorps
sbb
mov
fbld
sbb
cmp
adc
lods
or
imul
lock
hlt
add
xor
orl
out
dec
daa
xor
enter
cmp
ja
add
in
mov
imul
rcrl
adc
aas
and
loopne
sub
ja
aaa
xchg
scas
jb
or
mov
or
inc
xchg
and
mov
add
data16
push
stos
mov
cmpsl
ret
pop
mov
xchg
mov
in
imul
aas
addb
daa
aaa
call
nop
sub
sbb
int3
jmp
dec
fdivrl
int3
into
cmpsl
lret
jnp
shrb
jbe
pop
lock
fldt
xorl
loop
inc
pop
xor
test
loope
push
xchg
cwtl
mov
or
add
cli
enter
sub
fldenv
lcall
lods
jnp
popf
shlb
xor
add
jne
push
xchg
push
xor
call
in
add
rcr
or
cmc
and
xchg
pop
adc
daa
daa
jge
test
push
or
loope
and
adc
pop
and
and
xor
inc
test
inc
pop
adc
loope
xchg
adc
sbb
icebp
mov
cli
jp
mov
or
and
imul
mov
lahf
repz
mov
xchg
push
push
or
aas
sbb
sbb
loope
clc
mov
rclb
imul
movsb
jg
dec
xchg
push
sub
test
decl
movl
jle
mov
mov
in
clc
jbe
lea
loop
int3
and
ljmp
pushf
add
ljmp
cmp
in
or
dec
xchg
sbb
or
jo
lock
sbb
adc
cmp
enter
push
insb
ljmp
mov
add
es
dec
lret
mov
xor
push
add
or
shl
add
jno
int3
test
mov
pop
idivl
fists
push
push
repz
addr16
or
in
jmp
mov
push
sub
into
stc
fld
jl
jmp
popa
stc
popf
fimuls
cmpb
cmp
mov
push
xor
data16
push
adc
cmpsl
roll
push
shll
pop
test
into
push
shrb
push
pop
dec
push
bound
lahf
cmc
and
xor
shlb
lea
add
inc
sbb
mov
das
dec
cmpl
cmc
setg
insl
pop
push
or
lock
fnstcw
mov
movsb
cld
push
aas
or
cs
rorb
jbe
mov
or
mov
sti
repz
adc
int
adc
and
sahf
xchg
dec
scas
pusha
scas
inc
add
xor
aas
and
xchg
iret
mov
repz
mov
xorb
outsl
ljmp
mov
jo
jno
jbe
or
cmp
jne
testl
repz
outsb
mov
xchg
mov
mov
xor
jge
nop
cwtl
mov
mov
cld
add
cmp
test
xor
aaa
pop
stc
xor
ljmp
inc
dec
fidivs
add
adc
call
inc
pop
dec
fistps
jle
incb
inc
clc
pushf
mov
mov
lods
dec
adc
sbbb
jne
popf
outsb
sub
ljmp
jnp
mov
enter
icebp
pop
pop
scas
loopne
mov
in
push
jb
clc
stc
push
sub
sahf
add
sbb
jp
stos
sbb
ss
xchg
loope
and
add
test
mov
pop
lods
je
jae
adc
xor
hlt
lahf
xchg
loopne
pop
cmp
rcll
subb
fs
pop
nop
es
cmp
cmp
push
ret
testb
call
push
cmp
jmp
inc
push
push
lahf
popf
addr16
je
nop
stos
push
cmp
ss
mov
stc
xor
jmp
inc
loop
in
add
push
xor
inc
mov
test
inc
cmp
push
mov
in
sar
add
pop
rclb
jl
xchg
aad
mov
loope
xor
pop
cmp
mov
sarl
std
rorl
add
adc
add
xor
jl
mov
cmpsl
sub
sbb
loopne
into
inc
sbb
sub
pop
and
and
adc
hlt
dec
cmp
popl
sub
xchg
rcrb
fwait
jl
ds
orb
push
bound
lret
stc
xchg
clc
or
std
fsubl
adc
in
in
loope
add
nop
add
pop
scas
ja
lods
jno
lret
xchg
mov
add
sarl
rcll
mov
jp
ss
push
int3
incb
pusha
push
or
stos
cltd
push
fldl
leave
mov
and
push
cmp
inc
pop
sub
jle
or
push
lret
scas
rcl
test
adc
outsb
xchg
jge
add
aas
js
je
cmp
sbb
pop
das
fsubrl
jnp
mov
dec
inc
mov
jmp
dec
js
cld
jg
inc
inc
cld
jg
out
xchg
inc
xchg
outsb
add
inc
xchg
and
lods
fidivs
out
pop
scas
icebp
ret
jne
lds
sbb
jne
push
jno
test
xor
jl
mov
inc
rcrl
fs
mov
faddl
lcall
fisttps
popa
cmpsb
cmp
add
pop
pop
lahf
mov
cmp
pop
nop
cwtl
sbb
fisubrl
loopne
ljmp
mov
imul
hlt
mov
mov
in
inc
xchg
pusha
out
add
sub
sub
loopne
push
loopne
mov
pop
dec
and
shlb
imull
cmp
inc
daa
mov
cmp
mov
mov
out
cmp
add
mov
test
dec
mov
repnz
lods
sub
test
mull
add
repnz
adc
pop
add
mov
aaa
mov
mov
cmp
arpl
xchg
jle
sbb
dec
xchg
sbb
cmpsb
push
sub
adc
jl
mov
repnz
daa
xor
push
loope
adc
sbb
add
sub
outsl
push
les
jg
pop
mov
xor
lahf
mov
jle
mov
test
daa
sub
fwait
add
pop
dec
jecxz
enter
or
sub
dec
mov
xlat
sbb
imul
inc
jnp
xor
dec
push
lahf
xor
push
dec
lods
xlat
pop
mov
adc
xchg
adcb
ljmp
sar
sar
aad
push
pop
push
pop
js
fadds
sbb
aad
mov
mov
xchg
cltd
add
fdivrl
mov
lahf
lret
mov
push
popl
dec
hlt
xchg
repnz
test
shrb
sbb
mov
ja
cwtl
pusha
or
push
data16
sub
mov
jno
cmp
mov
mov
adc
push
nop
ret
aaa
and
mov
inc
daa
ss
je
call
repnz
xlat
pop
out
cli
stc
xchg
sbb
mov
lock
mov
adcb
popf
loop
add
movl
xchg
mov
rcrb
sub
in
cltd
cmc
or
dec
mov
fiadds
mov
mov
pop
jae
mov
inc
lcall
add
mov
xor
add
xor
shll
inc
js
sbb
cmpl
dec
add
inc
mov
sbb
fsts
sub
push
lods
in
mov
aaa
pop
inc
push
bound
ljmp
lahf
xchg
mov
add
loope
add
inc
std
sti
dec
hlt
mov
or
scas
cmp
push
repz
hlt
mov
icebp
push
jp
mov
add
lret
iret
out
sub
xor
stc
mov
test
sbb
mov
testb
cltd
xchg
push
mov
pop
lahf
in
out
or
mov
in
ljmp
push
icebp
jge
cld
test
xorl
ss
jp
int
xchg
jno
sbb
xchg
clc
lock
and
in
scas
testl
xlat
clc
mov
test
sbb
xchg
adc
mov
daa
mov
xchg
jb
mov
jg
sub
xchg
movsl
sbb
rolb
mov
push
cmp
inc
jnp
daa
and
mov
mov
pop
push
push
mov
lcall
mov
nop
add
inc
dec
inc
sbb
pop
xchg
hlt
xorb
xchg
or
call
and
or
xchg
adc
fisubrl
dec
mov
adc
cmp
std
mov
xor
jecxz
xor
cltd
test
jo
out
push
cmp
dec
lret
in
ret
lock
icebp
add
hlt
shlb
mov
jbe
mov
mov
leave
mov
jnp
loop
repnz
mov
xchg
iret
or
sub
mov
nop
xchg
pop
repz
xchg
add
fmulp
das
outsl
and
sbb
jns
xchg
push
lock
sbb
lea
sbb
inc
aas
add
mov
in
clc
shrb
jmp
mov
out
push
mov
inc
fdivrs
sbb
adc
mov
sub
pop
out
dec
inc
rclb
jge
pop
mov
lods
adc
rcrb
and
add
add
sbb
cmc
iret
stos
pop
jge
icebp
add
inc
pusha
mov
sbb
cmpsl
add
xor
test
adc
xchg
shl
fistpll
inc
leave
add
or
sar
int3
jb
jae
out
aas
xchg
icebp
inc
js
cmpsb
add
adc
test
cmp
movsb
xor
mov
fsubrs
add
idivb
scas
faddl
xchg
or
push
loope
aaa
insl
push
xchg
push
sub
les
loop
pop
testl
dec
pushf
and
inc
add
push
jecxz
popf
sub
sarb
xchg
inc
dec
test
data16
clc
add
lock
mov
jmp
lea
add
inc
aad
adc
dec
in
push
pusha
out
push
jg
clc
aaa
rorl
or
sbb
and
jecxz
mov
mov
data16
or
mov
or
sbb
jbe
mov
subb
out
test
loopne
cmp
jl
pop
stc
into
lahf
mov
cs
pop
lret
fwait
sub
mov
mov
pop
add
jl
sub
repnz
add
test
gs
xchg
add
adc
mov
iret
push
jmp
in
loope
push
lss
jne
fwait
mov
insb
sub
or
ds
jecxz
dec
jns
shll
xor
and
rcll
jecxz
lock
mov
and
lds
xchg
push
and
jmp
test
mov
lods
sub
pop
adc
outsl
lods
add
xor
xchg
cmp
mov
mov
daa
sub
and
push
scas
in
es
arpl
add
out
ret
in
mov
test
out
loopne
and
push
mov
fs
jl
mov
repz
stos
les
adc
adc
sti
push
cltd
test
aas
int3
negb
pusha
cmp
dec
adc
pop
xchg
pop
hlt
xor
and
pop
dec
and
sbb
mov
mov
call
lock
sbb
les
jg
cli
push
xchg
imul
ds
nop
imul
enter
xor
insl
and
inc
lret
aaa
fisttpl
xchg
cmp
ret
pop
inc
xor
or
insb
cwtl
in
push
and
cmp
inc
addb
sbb
sub
sbb
mov
cmp
decl
push
sbb
cmp
mov
sub
add
jbe
push
scas
mov
out
in
mov
out
andb
and
rorb
mov
jecxz
or
clc
addl
inc
orl
lcall
cmpsl
les
adc
inc
leave
icebp
xchg
and
jo
clc
shl
xor
jmp
or
cmp
aaa
cld
jge
jecxz
rcrb
outsb
cld
push
imul
sub
jb
loopne
cmc
daa
inc
fdivrl
aaa
popa
or
mov
and
add
pop
and
in
dec
xlat
xchg
bound
fisubs
pop
push
daa
inc
jbe
add
mov
ja
cs
sbb
jle
testl
aad
sahf
addr16
in
pop
pop
jl
jecxz
fisubrs
out
nop
rorb
adc
sbb
js
inc
inc
mov
filds
cwtl
mov
repz
repz
loopne
mov
fadds
rol
inc
sahf
pop
das
out
cmp
movl
add
test
inc
into
bound
sub
xchg
push
repz
mov
fmull
pop
mov
xlat
and
pop
or
mov
mov
or
inc
inc
sub
bound
add
repnz
insl
jge
out
inc
add
jecxz
push
mov
mov
ret
dec
cs
test
push
push
lret
lret
pop
add
dec
inc
xchg
int
push
orl
cld
insl
jno
cmp
jnp
add
jmp
mov
push
and
aas
add
rol
aam
mov
mov
test
je
into
sbb
cmp
xchg
mov
sbb
adc
daa
cwtl
mov
xor
adc
call
mov
ffree
lret
in
leave
xor
shll
ret
std
aas
outsb
mov
aaa
pop
fcomip
push
jmp
sub
jne
mov
jb
mov
daa
lods
add
push
push
nop
loope
jge
and
pop
cs
mov
pusha
lcall
xchg
js
inc
sub
dec
sub
mov
leave
subb
shr
outsb
or
pop
adc
data16
jmp
lock
pop
jno
out
cmpsl
js
adc
jno
cmovg
clc
repnz
xchg
cmc
xchg
push
push
jecxz
repz
and
mov
xor
add
lea
and
push
sub
add
fsubp
test
data16
test
aam
pop
xchg
andb
icebp
adc
adc
sub
rol
dec
or
inc
inc
roll
arpl
fisttps
scas
decb
clc
popf
add
and
movntps
inc
or
pop
aas
jo
pushf
daa
cwtl
add
inc
insb
pop
mov
cmp
add
adc
cwtl
pop
sbb
or
add
stc
add
cmp
jl
adc
pop
add
mov
cmp
sti
or
clc
das
mov
xor
sub
pop
or
add
pop
lea
adc
cmp
adc
repz
loop
jecxz
lret
fldenv
cltd
lcall
jbe
mov
popa
cmp
popf
out
jmp
es
and
rol
jae
inc
scas
lea
cmpsl
sub
jns
lea
hlt
push
sti
nop
nop
push
xor
fstpl
and
pop
mov
shlb
sahf
sar
loopw
mov
cmp
jno
cmp
mov
jb
xchg
sub
or
inc
jl
push
test
add
mov
add
movsb
mov
andb
add
mov
out
ret
mov
mov
shrl
mov
popf
shlb
in
icebp
pop
pop
int3
inc
dec
loop
test
arpl
test
mov
xlat
daa
adc
jmp
or
cmp
push
mov
cltd
mov
insl
adc
sbbb
dec
push
and
dec
push
cmp
ret
aad
sub
add
in
loopne
or
loopne
and
or
sub
mov
out
push
add
and
mov
adc
inc
xor
pop
push
or
xor
lea
xchg
mov
lret
std
cmp
cltd
pop
arpl
cmc
inc
adc
dec
inc
xor
push
aad
push
stc
js
mov
je
and
repz
or
imul
adc
mov
mov
clc
rcll
add
mov
roll
pop
and
sahf
push
and
ret
popf
jns
cwtl
mov
cmpsb
insb
pop
mov
and
mov
das
in
push
jns
hlt
daa
ret
sbbb
mov
add
adc
ret
add
jmp
lods
xor
imul
push
js
insb
mov
xor
outsb
aad
in
push
jge
lods
xor
pop
or
nop
adc
lret
test
fwait
shll
mov
mull
sbb
dec
jmp
shrb
adc
lret
pop
cmp
daa
push
mov
fcmovb
imul
pop
sbb
adc
lds
or
mov
pop
imul
cmp
ljmp
notl
ret
pop
xor
mov
jge
in
fiaddl
add
push
and
cmpsb
in
pop
and
push
cmp
add
xor
mov
push
sarb
add
jp
or
inc
or
push
aas
mov
add
sbb
lcall
push
adc
pop
movsl
mov
sbb
les
xchg
lea
dec
xchg
xor
jmp
jns
adc
in
add
xor
mov
lcall
or
outsb
jb
shrl
aam
loopne
fisttps
and
mov
out
ret
pushf
mov
fsts
and
daa
clc
sub
inc
jno
ret
aad
mov
add
gs
sub
les
das
loop
arpl
adc
mov
test
js
adc
mov
dec
insl
sub
and
inc
push
das
sub
jo
push
mov
cmp
pushf
addr16
loopne
cmp
pop
mov
sbb
sarl
add
adc
ja
mov
or
divl
scas
imul
aaa
and
aas
jae
popa
fildll
add
inc
pop
aas
out
test
mov
jae
rorb
iret
imul
lds
add
add
mov
push
and
xchg
popa
fnstsw
add
push
movsb
pop
pop
rol
lcall
fwait
insb
dec
test
divb
xor
pcmpgtb
test
mov
mov
mov
or
daa
pusha
cld
insb
xor
ds
mov
mov
fstpl
frstor
sahf
adc
loopne
adc
or
rcrb
aad
scas
lds
aad
and
fisttpll
dec
add
adc
pop
out
pop
arpl
test
repz
dec
sahf
lcall
dec
stos
push
add
xchg
int
jnp
fmull
sub
jne
adc
mov
lea
fwait
out
add
add
push
add
mov
ficoml
ljmp
ret
xchg
sti
jo
out
mov
sub
fdivrs
es
lea
jecxz,pt
sub
test
jg
out
sbb
test
jg
adc
into
loopne
in
and
movl
cmpsb
mov
icebp
push
xchg
xlat
loopnew
rclb
jno
adcl
fistps
sub
popa
adc
xlat
insb
test
jmp
lds
lcall
mov
adc
pop
mov
xchg
push
xchg
call
js
loopne
sbb
mov
xorl
push
jmp
aam
loope
icebp
outsl
rcl
xchg
xchg
outsl
mov
jge
imul
sbb
xor
add
ret
mov
jno
mov
popf
mov
adc
dec
insl
inc
in
add
push
popf
scas
dec
ss
fdiv
iret
and
dec
movsl
pop
cli
adc
mov
mov
jnp
dec
cmpsl
iret
add
mov
jmp
fdivs
loope
insb
loop
daa
jecxz
maskmovq
test
ror
cld
xor
add
loopne
jo
lods
xchg
add
or
mov
add
andb
lods
daa
call
push
cmp
add
mov
pop
or
mov
es
mov
clc
cmpb
jle
or
test
adc
jmp
mov
push
jg
jne
pop
std
adc
mov
ds
imul
mov
add
xor
push
das
lea
pop
or
shlb
aad
add
inc
pop
xor
das
adc
sbbb
fwait
mov
insb
stos
ficoml
mov
movsl
lock
ret
mov
xor
mov
mov
xchg
mov
jnp
mov
mov
leave
or
push
cmpsl
loope
sarb
les
jecxz
icebp
or
inc
jo
rcrb
jmp
xchg
jne
sub
dec
adc
cwtl
lds
andl
sbb
xchg
xlat
and
fistpll
fprem
mov
fwait
jo
inc
icebp
or
std
orl
dec
out
lock
cmp
mov
int
push
jae
sub
and
adc
mov
or
mov
icebp
jno
dec
mov
cs
insb
lock
pop
push
dec
push
lcall
test
mov
sbb
cmp
mov
sbb
add
jnp
add
test
sub
mov
clc
and
xchg
mov
push
push
or
clc
adc
mov
and
js
push
ret
clc
push
lahf
bound
mov
lods
lods
pusha
daa
adc
test
xchg
xor
sub
and
cltd
xor
cmp
sub
jg
inc
jp
pop
push
and
dec
movsb
outsl
mov
ljmp
jge
lock
inc
lret
push
pop
test
ljmp
lock
push
jp
in
and
aam
xor
cli
loop
or
add
enter
xor
call
fldl
or
jl
adc
dec
out
mov
cmpsl
adc
sub
das
push
adc
mov
ljmp
lods
sub
pop
push
push
and
bound
pop
cmp
mov
pushf
ja
je
xchg
ficomps
movsl
repz
scas
into
fadds
ds
int
pusha
andb
imul
add
and
inc
inc
ret
add
adc
loop
ret
add
das
insb
movsb
fmull
cltd
ja
test
je
in
sub
rcrl
mov
loop
or
outsl
nop
mov
pusha
orl
dec
adc
xor
jo
push
or
pusha
sub
addr16
mov
mov
sti
lcall
shlb
leave
add
adc
das
mov
sbb
in
add
pop
pop
dec
pop
cmp
dec
roll
mov
pop
adc
in
mov
mov
in
mov
lahf
jg
pop
mov
add
outsl
push
nop
roll
idivl
or
js
xor
jbe
pop
jecxz
les
clc
in
mov
fidivs
or
in
xchg
arpl
lods
fbstp
cwtl
xor
bound
paddsb
and
mov
push
daa
icebp
xchg
rclb
nop
add
push
mov
jns
push
loopne
xlat
js
xchg
loopne
xchg
and
rcr
xor
xchg
jmp
ret
inc
dec
scas
lock
cmp
mov
pop
mov
push
cmp
test
imul
cmpsb
xor
lock
sahf
or
out
es
jo
add
lods
pop
add
dec
xchg
ret
lods
mov
lea
int
adc
sub
movsl
jecxz
pop
inc
push
and
stos
stos
outsl
adc
jecxz
ss
cld
pusha
loopne
ss
int
rorb
idivb
mov
inc
fiaddl
bnd
icebp
or
pop
out
repz
xchg
pop
sub
ret
dec
or
dec
call
fs
loopne
push
mov
jmp
mov
sub
aad
xor
dec
bound
or
out
sub
pop
pop
and
or
icebp
outsb
and
arpl
insl
add
xor
pop
aam
mov
sbb
loopne
push
push
lret
mov
jle
cmpsb
outsl
pop
add
jb
mov
mov
mov
aas
div
sub
and
pop
fcomps
test
mov
push
mov
inc
ds
adc
ret
pop
xchg
jae,pn
sub
push
test
and
mov
add
adc
call
xchg
outsb
lock
sarb
sbb
rcl
int3
enter
jl
sti
or
add
mov
pop
lea
push
test
dec
push
out
mov
xor
sbb
or
std
jp
fiaddl
pop
enter
loope
add
push
push
mov
mov
icebp
or
stos
xchg
xchg
add
aad
xor
shlb
icebp
push
inc
in
jae
pminsw
fcomi
das
or
push
dec
mul
mov
aad
cmpsb
outsl
xor
aas
cmp
aad
fiaddl
xchg
cmp
push
jmp
mov
mov
fidivrl
loop
ret
movsb
lds
sbb
jno
ss
jmp
inc
popf
jb
push
scas
inc
fistl
xor
rclb
cmp
std
xor
idiv
stos
loope
sahf
loopne
dec
mov
scas
cmp
push
cli
outsb
loop
rcrl
jl
movsl
aas
inc
out
pop
cmpsb
in
lcall
mov
mov
sbb
in
popa
sti
push
mov
or
push
int
sub
sub
push
fsubrs
movsl
pop
cs
add
mov
or
jg
sbb
xchg
mov
repz
xor
xor
lret
fistps
mov
ds
adc
fdivrl
or
and
adc
mov
jmp
lcall
call
decl
mov
or
jne
inc
outsb
adc
push
shlb
pop
ret
or
andb
xchg
fidivrl
cmp
and
bnd
popa
clc
imull
jl
mov
inc
stos
mov
and
arpl
scas
jp
les
push
or
and
pop
clc
insl
negb
movsl
repnz
loopne
push
mov
test
into
fistps
ret
mov
dec
cmp
fisubrl
mov
clc
push
inc
faddl
stos
or
dec
stc
int3
xchg
sarb
scas
in
pop
dec
int3
dec
cli
and
adc
sub
push
addl
aas
loop
mov
cli
jnp
jp
mov
pop
mov
cmp
les
and
ss
negb
mov
xor
push
clc
decb
leave
add
adc
jg
pop
outsb
imul
aam
xlat
cmpsb
and
mov
add
xor
mov
mov
pushl
jb
into
fisttpll
fsubrs
dec
fst
mov
inc
jle
sub
xor
sbb
adc
jmp
lods
dec
pop
xchg
test
int3
xchg
hlt
lret
add
repz
lahf
add
out
jmp
hlt
scas
lret
fsubrl
test
mov
leave
sbbb
cmp
jecxz
mov
test
lods
loope
pop
fst
adc
sub
movsb
and
cmp
add
lahf
popa
cmp
mov
sbb
aaa
cltd
mov
push
je
xor
pop
push
push
icebp
jo
cmpsl
inc
loopne
pop
adc
js
loopne
lcall
mov
pushf
sub
lcall
push
testb
jne
cmp
jbe
aas
cmc
cmp
mov
test
loopne
inc
add
clc
mov
inc
or
into
andl
sbb
xor
shlb
add
xchg
dec
fistpll
aad
xchg
mov
jp
bswap
icebp
mov
inc
int
aaa
aas
mov
loopne
and
in
add
and
arpl
pop
cmp
mov
mov
cmc
in
add
sarb
pop
paddw
adc
mov
push
pop
sti
ret
jl
jecxz
mov
daa
inc
xor
mov
aad
mov
cmpsb
cmp
outsl
add
xor
xor
push
rcrb
aam
rcll
jl
stc
call
incl
mov
lahf
mov
cmp
ljmp
nop
cmc
scas
lods
and
inc
or
and
adc
jmp
sbb
jp
popf
push
inc
lret
loopne
xchg
outsb
pop
in
in
repz
mov
lretw
insl
rcl
scas
ds
xchg
mov
cmp
push
loopne
or
sbb
enter
xchg
mov
std
lea
out
and
cmpb
insb
mov
icebp
jbe
jp
xchg
jp
or
out
push
xor
lret
in
test
cmp
test
pop
and
add
add
add
or
jge
cmpsl
in
sub
push
mov
mov
or
ret
je
aas
mov
cmpsl
icebp
inc
mov
add
dec
subl
mov
loopne
mov
jo
mov
mov
xchg
pusha
lret
xchg
aas
aam
nop
insb
mov
cwtl
loope
mov
and
jge
dec
and
jbe
leave
add
fidivrl
xchg
push
pop
xor
rclb
push
mov
mov
iret
mov
and
data16
rclb
into
inc
cmp
aaa
incl
jnp
sub
lcall
xor
dec
jno
inc
inc
mov
daa
adc
pop
xchg
mov
addr16
add
ret
add
push
mov
int
dec
das
jne
push
dec
scas
sbb
adc
xchg
and
rolb
js
jnp
jb
add
movsb
and
lock
outsb
fmuls
dec
cwtl
into
jge
push
cmp
rcrb
nop
add
js
jb
andl
popf
insl
adcl
push
or
jo
sbb
les
cld
cwtl
inc
xor
mov
aam
mov
rolb
xchg
pop
pop
mov
fildll
xchg
xchg
mov
rolb
sar
adc
jecxz
mov
mov
xor
push
addb
int3
pop
cmpsl
fsubs
fdivs
mov
aas
or
dec
cld
sbb
lret
sub
in
addr16
lret
dec
add
jecxz
mov
lock
pop
cmp
repz
jg
sahf
and
mov
and
add
mov
shrl
insb
push
mov
sbb
lods
mov
ljmp
sub
mov
bound
sbb
adc
add
push
addb
pmulhuw
and
cmc
dec
movsb
push
ret
pop
inc
roll
ljmp
ljmp
and
pop
and
add
push
add
rolb
sbb
mov
sub
enter
fisttpll
and
adc
inc
cmp
popa
xchg
or
inc
pop
xchg
cmp
sbb
pop
cmp
clc
sub
ret
aas
rol
xor
ja
popa
clc
xchg
cld
mov
xor
shrl
jo
jmp
fmuls
lds
mov
add
mov
jmp
subb
adc
fstpl
mov
and
sub
mov
les
dec
insl
dec
in
clc
rcll
cs
lret
jge
scas
js
jb
xchg
rcrl
inc
pushl
popa
test
pop
out
mov
xor
push
bound
call
jmp
cli
and
push
mov
mov
inc
test
out
xorl
and
or
add
cmp
fdivr
xor
dec
aad
stos
cmp
inc
pop
mov
loop
lds
jle
push
int3
push
inc
or
cmp
add
sahf
inc
mov
pop
jns
mov
push
add
mov
pop
dec
adc
fwait
or
ret
jmp
push
sbb
push
sub
into
ja
jne
pop
dec
sub
push
or
pusha
mov
cmp
and
inc
xor
inc
pop
hlt
aas
incl
add
xor
dec
repz
cmp
or
dec
lahf
add
mov
or
mov
fcmove
stc
sbb
idivl
iret
push
data16
lods
mov
call
cltd
sbb
add
shl
out
test
ret
cmp
inc
dec
ds
mov
dec
nop
or
outsl
daa
or
int
inc
sub
daa
lock
or
sub
inc
popa
mov
dec
cld
sar
and
push
daa
loopne
sahf
xchg
je
and
jle
inc
or
add
push
outsb
jnp
jbe
push
mov
stc
pop
adcb
leave
popa
repnz
enter
insb
xor
and
or
aam
jae
sbb
scas
les
dec
sbb
popf
add
and
loop
jmp
ror
mov
or
push
lods
fcmovnb
sub
pop
mov
mov
pop
dec
cmp
adc
push
mov
adc
xchg
or
mov
mov
jecxz
fbld
lcall
cmpsb
jl
jecxz
pop
or
inc
lret
lcall
mov
test
test
or
xchg
or
arpl
mov
test
cmp
xchg
mov
je
dec
rorb
mov
jl
frstor
mov
sarl
xor
aaa
adc
orb
inc
jmp
inc
dec
sub
shrb
adc
daa
push
add
sub
leave
adc
jo
pusha
lcall
push
xchg
pusha
mov
loopne
lock
clc
call
adc
mov
mov
sub
shlb
adcb
jo
inc
push
loop
add
xor
frstor
push
notb
pop
xchg
dec
inc
inc
add
outsl
std
filds
daa
jno
ss
shl
and
cwtl
mov
xor
mov
std
adc
sbb
pop
fmuls
ret
mov
mov
adc
inc
pop
add
cs
push
and
cmp
add
xchg
push
bound
stos
pop
push
lcall
decb
inc
sub
call
mov
ss
mov
inc
adc
sbb
popa
xchg
rcrb
loopne
push
xlat
cmp
or
jecxz
adc
mov
push
es
sub
in
faddp
addb
cmp
inc
inc
jle
sub
xchg
in
loope
pop
pop
xorb
push
sub
ljmp
adc
nopl
clc
daa
jo
out
fcoms
and
xor
inc
mov
cs
jecxz
je
or
inc
sahf
stos
sub
shrl
out
mov
ja
popa
mov
popa
jmp
pusha
or
stos
add
je
mov
cmpsl
lods
cli
and
pop
push
cwtl
or
fwait
inc
push
cs
or
pushf
pop
ret
sub
ret
pop
jnp
fsubrl
mov
loope
es
xor
xor
pop
xor
xor
jp
stos
inc
mov
cmpsb
cmp
dec
cmp
ret
pop
add
sub
sbb
pop
aaa
cwtl
dec
cwtl
inc
jbe
stc
rolb
adc
push
loopne
scas
and
packsswb
push
jo
dec
adcl
mov
leave
test
mov
and
jp
out
leave
movsb
je
cld
dec
rol
shlb
xchg
sub
or
lds
int
nop
push
mov
ljmp
fmull
add
aas
fildl
push
aam
lods
xor
mov
es
fsts
rol
add
jmp
cmp
test
cmc
into
xor
aas
mov
mov
mov
jecxz
stc
xor
xchg
jge
ret
or
dec
jle
outsb
ja
mov
outsb
rclb
jae
ret
mov
xchg
into
pop
adc
cmp
clc
out
add
inc
sbb
or
gs
mov
mov
lret
jecxz
jo
mov
sub
cmp
inc
mov
adc
jmp
pusha
cmp
das
xor
mov
out
and
add
shlb
cwtl
mov
sub
addr16
sbbb
subb
adc
lahf
gs
push
aam
push
pop
pop
adc
cmp
insb
cmc
pusha
fsubs
pusha
lock
or
mov
add
sub
xchg
mov
mov
lods
push
push
enter
jmp
inc
inc
mov
xchg
mov
xor
pop
addr16
cli
leave
xchg
pop
mov
add
push
icebp
xchg
clc
push
jo
and
ja
loopne
lahf
jmp
cld
pop
test
jp
bound
test
aad
cmp
filds
and
call
xchg
sahf
pop
lahf
push
pop
movl
in
add
xor
mov
arpl
imul
imul
ficoml
inc
inc
jb
sub
mov
push
push
lock
arpl
xor
inc
stc
mov
push
push
add
sub
ljmp
push
or
sbb
frstor
je
inc
lods
pop
mov
mov
cmpsb
repnz
stos
add
jnp
and
mull
les
or
inc
scas
leave
push
or
pusha
jne
int
rcrl
push
lods
mov
inc
jmp
in
mov
adcl
outsl
adc
or
fsubl
in
icebp
call
cmp
ficomps
push
mov
jne
sbb
out
je
shrl
sti
push
outsb
cmpb
imul
fsubrl
stos
pop
nop
jnp
mov
subb
and
stos
imul
mov
out
insl
add
xor
push
aaa
mov
aam
leave
push
fwait
add
add
pushf
mov
push
xchg
xchg
mov
xor
pusha
and
inc
sub
or
addb
scas
dec
icebp
and
inc
cmp
gs
es
scas
scas
fidivrl
out
sub
mov
jb
das
fiaddl
xchg
add
popa
int3
dec
mov
into
dec
jge
movsl
pop
inc
mov
sub
pop
stos
iret
dec
test
mov
add
call
fwait
negb
shlb
stos
xchg
xlat
cmp
pop
push
push
ljmp
add
cmp
cwtl
cli
jno
arpl
sub
and
mov
subl
add
or
dec
push
pop
jne
jns
out
cli
rol
pop
lahf
push
ret
xchg
pop
or
jle
loope
test
in
push
pop
push
xchg
or
mov
aaa
je
cld
and
xchg
ljmp
xchg
and
dec
mov
xchg
out
std
inc
movsb
push
js
cmp
cmp
icebp
jb
xorl
stos
cmp
inc
xchg
aaa
mov
rclb
mov
sbb
push
call
cmp
inc
imul
aam
xchg
xchg
inc
lahf
call
jmp
xor
pop
fimuls
xchg
test
pop
dec
aaa
mov
movhps
cmp
adc
mov
or
cli
xchg
mov
inc
adc
pop
pop
out
cmpsl
pop
fadd
sub
add
fwait
cwtl
jmp
aaa
adc
notl
add
mov
adc
xchg
push
xorb
bswap
jb
enter
sar
mov
mov
mov
adc
mov
sbb
pop
add
mov
mov
imul
sar
lods
or
inc
dec
jp
in
jmp
xor
loop
inc
ljmp
xor
jp
push
sub
pop
imul
sahf
add
push
lea
xchg
dec
fldlg2
xchg
fsubp
repz
jmp
out
popa
pushf
xchg
sbbb
shlb
es
push
xor
jb
add
xor
in
fdivrl
xchg
mov
and
push
popa
push
cmp
sub
mov
dec
cltd
popf
daa
cmpb
sub
ficoms
jmp
and
icebp
les
lcall
push
std
loop
mov
jp
add
pop
push
mov
outsl
xchg
sbb
repnz
push
dec
cmp
dec
lods
test
lock
inc
outsb
enter
dec
outsb
xor
cmp
dec
insl
jle
test
mov
js
xor
icebp
aas
inc
outsl
jmp
cmp
ror
mov
sarl
scas
inc
cld
xchg
testb
sti
lahf
ret
gs
out
jbe
jo
or
sub
xchg
adc
sub
and
sbb
and
ds
dec
jo
pop
insl
xor
mov
scas
cmpsl
ds
rolb
iret
jle
push
shll
aam
clc
sub
sti
xlat
cmpsl
int3
mov
movsl
faddp
xor
jle
mov
ror
add
dec
pop
in
ds
dec
scas
pop
xchg
cmp
std
adc
popa
mov
std
das
sub
and
scas
pop
sub
xor
sbb
cmpsl
shr
out
mov
push
loope
xor
int
mov
xchg
pusha
pop
add
fistps
dec
mov
dec
test
sar
movsb
aas
inc
sbb
rorb
mov
push
mov
mov
imull
cltd
das
clc
push
sub
sbb
out
add
test
shll
ret
iret
test
jecxz
inc
je
lret
js
jae
inc
popa
aad
mov
cmp
ds
fldenv
mov
aas
jp
xchg
cmp
mov
jle
aaa
mov
test
adc
daa
jecxz
std
cmpsl
inc
push
and
inc
out
dec
and
rcrl
mov
loop
mov
mov
sbb
adc
add
loopne
test
push
das
stc
sub
jp
add
rclb
sub
or
fisttps
lret
mov
outsl
jl
add
or
lea
xchg
pop
mov
xchg
push
sub
add
filds
push
jne
popa
dec
sbb
cltd
push
mov
xchg
jp
dec
xchg
fimuls
cmp
movsl
mov
dec
xor
or
cmpsb
dec
xlat
mov
inc
sbb
inc
sbb
popa
or
cltd
ficompl
fimull
imul
incb
lcall
imul
dec
jle
in
push
sub
or
pop
dec
pop
mov
mov
xchg
mov
xchg
in
mov
sarb
xchg
lods
xchg
imul
repz
inc
dec
sbbb
fbld
push
ds
iret
add
jno
clc
jne
xchg
fdiv
sbb
rorb
mov
inc
sbbl
inc
adc
xbegin
nop
inc
es
pop
or
or
divl
pushf
xchg
insb
push
loop
into
inc
jmp
or
cwtl
fsubl
shrl
out
cmp
and
arpl
push
cmp
mov
xor
pop
out
xchg
sbb
xor
xor
insb
lret
les
dec
xor
or
and
ljmp
outsl
jmp
pop
mov
xor
ss
sti
sahf
stos
loope
push
jne
pop
lods
lock
dec
pop
aas
add
sarb
pop
jl
lahf
imul
cld
scas
mov
pop
push
or
popf
jge
pop
add
ss
mov
int3
adc
inc
ret
je
push
inc
cmp
outsb
or
sub
out
sahf
movsl
cmp
fsubr
pop
mov
cmp
xchg
mov
or
dec
movsl
mov
sub
jle
push
inc
stc
jmp
xchg
fabs
and
lcall
icebp
xor
int
pop
push
mov
mov
lock
or
add
clc
mov
push
dec
and
ss
loopne
int
add
jmp
icebp
std
sarl
into
jnp
cmp
dec
mov
fistpl
pop
shrl
add
pop
stos
cmc
arpl
out
cmpb
fiaddl
or
sahf
pop
xor
setge
mov
les
es
push
ds
rcr
nop
mov
loop
shll
dec
lods
gs
add
sbb
in
add
mov
cmp
test
movsb
xlat
inc
cwtl
movsl
jb
xor
jo
lods
adc
and
scas
inc
push
shrb
je
les
daa
dec
clc
add
mov
gs
sbb
mov
or
xchg
push
daa
xor
mov
xor
xor
lods
cmp
mov
mov
mov
cli
std
lods
pop
ljmp
xor
aaa
ror
mov
push
mov
loop
pop
pop
lock
rorl
mov
sbb
mov
xor
lods
or
push
inc
decl
pop
bound
dec
lret
popa
mov
cmp
push
xchg
sbb
and
add
out
movsl
xchg
mov
mov
shl
clc
cmp
mov
lret
mov
test
test
add
push
mov
imul
cmc
lea
jb
xlat
xchg
or
jnp
and
test
xchg
mov
decb
arpl
ljmp
mov
arpl
xchg
fisttps
hlt
add
add
bound
test
mov
xchg
mov
xchg
lcall
shlb
cmp
insl
negl
jns
lock
fisttpll
push
lock
push
mov
sbb
aam
adc
mov
vsubsd
into
int
dec
add
dec
in
movsl
cs
stos
cwtl
cmpl
mov
subb
clc
les
daa
mov
adc
arpl
test
cld
mov
ljmp
cmp
push
xchg
and
xor
iret
lods
icebp
scas
lds
fwait
mov
jb
or
sbb
add
lcall
mov
loop
popf
xchg
mov
inc
sbb
mov
add
adc
or
jl
lds
cmc
pop
std
push
dec
mov
dec
xor
es
popf
dec
jp
and
jmp
jnp
je
in
mov
or
dec
inc
clc
sbb
or
sub
mov
xchg
sub
bound
repnz
addr16
jg
xchg
dec
and
or
ss
sbb
jl
test
inc
adc
jno
jo
xor
or
loop
rolb
dec
xor
fbld
ja
mov
adc
push
mov
add
pop
adc
insb
loop
outsb
jp
jle
outsb
test
or
mov
mov
lahf
sbb
test
inc
fs
sub
aaa
xor
xchg
or
pop
sub
ljmp
jmp
or
mov
aaa
loope
adc
movd
scas
call
pop
movsb
jbe
stc
fucomip
in
lea
push
flds
lods
arpl
aas
outsb
push
lret
dec
test
jne
stos
adc
pop
das
lahf
push
xor
jge
mov
fadds
xor
add
sbb
mov
ljmp
jbe
sarl
mov
out
pop
enter
std
mov
sub
push
jecxz
xchg
cmp
pop
daa
or
call
stos
cmpsb
bound
mov
test
ret
dec
test
std
aad
rorl
in
push
dec
andb
push
or
ficompl
pop
loopne
repnz
pop
sub
add
mov
out
icebp
adc
fcoms
jge
flds
das
call
mov
dec
cs
mov
je
pushf
mov
mov
addb
push
cmp
mov
pop
mov
dec
ja
xchg
and
cmp
stc
pushf
xchg
icebp
mov
mov
adc
out
into
and
aas
loope
dec
mov
xor
aam
sub
insb
sub
cmp
faddp
outsb
mov
jns
outsl
lds
mov
lahf
cmp
push
lcall
idiv
dec
fwait
pop
dec
test
add
sahf
push
ret
xchg
jp
add
ljmp
ljmp
add
cmpsl
lods
testl
addr16
jle
mov
mov
sbb
adc
cmp
and
fisttpl
pushf
mov
inc
arpl
fwait
test
push
cmp
jae
loop
out
int3
pop
outsl
xor
out
ljmp
imul
mov
incl
cltd
cmp
rol
test
lods
loope
push
out
gs
test
add
fs
dec
aas
or
mov
mov
xor
arpl
adcl
or
lret
dec
and
imul
pop
jmp
lods
xor
mov
pop
into
jbe
push
pop
push
add
data16
into
addr16
push
daa
cmpsb
pop
clc
xor
icebp
xchg
cli
dec
sub
fsubl
fwait
or
adcb
shll
cs
dec
aas
rcr
and
hlt
call
ret
fiaddl
jnp
adc
xchg
dec
mov
add
xchg
mov
sbb
addr16
loopne
aad
mov
js
in
add
push
or
adc
and
nop
sbb
jle
add
fnsave
test
jno
lock
pop
jb
in
push
add
lea
dec
ja
mov
ljmp
scas
movb
pop
adc
xor
cmc
les
dec
fwait
sub
into
xchg
mov
pop
pusha
cmp
fwait
push
mov
adc
sbb
in
pop
lcall
and
subl
lea
mov
fisttps
sub
out
sti
dec
mov
cmp
mov
imul
movb
jo
rcll
cmp
cmp
pop
add
or
push
leave
or
push
icebp
cli
cli
sub
rorb
push
cmp
pushf
clc
adc
in
fmull
punpcklwd
xor
decb
loope
lahf
ljmp
adc
xor
add
shrb
mov
pop
mov
mov
aaa
cmc
mov
push
and
repnz
cmpsl
outsl
sarb
lahf
pop
stos
std
loop
cmpsb
inc
mov
rcl
jnp
dec
jmp
jecxz
imul
pop
pop
pop
loopne
jecxz
outsb
add
mov
push
test
ss
inc
mov
aas
xor
cs
vandpd
ja
sbb
inc
fildl
data16
add
in
push
das
sbb
cld
and
addb
ja
pop
or
adc
ljmp
imul
mov
inc
stc
std
icebp
mov
mov
aaa
mov
fsubrs
pushl
rcll
stc
inc
das
rorb
ret
aaa
orb
dec
lret
push
dec
jmp
push
push
sbb
inc
das
push
sub
push
scas
lock
sbb
cmc
sbb
pop
xchg
and
inc
ss
out
mov
inc
pop
adc
fstp
jo
adc
pushf
push
out
mov
cmc
cltd
jecxz
fistps
cli
xchg
xor
push
push
sbb
mov
xchg
sub
mov
push
arpl
sub
ret
out
imul
ror
lcall
jp
jecxz
loopne
out
andb
imul
adc
rorb
add
sub
fnop
mov
sbb
and
mov
js
sub
movsb
mov
lods
sub
dec
lds
call
popf
xchg
dec
inc
mov
and
jg
pushf
add
lock
mov
mov
adc
mov
fsub
testb
mov
push
add
mov
dec
xor
ds
cmc
lods
scas
int3
nop
pop
inc
and
xor
or
aad
ljmp
dec
fs
jae
pop
sbb
out
cmpl
push
push
push
dec
cld
xchg
jle
push
pop
sbb
js
frstor
or
push
daa
mov
push
hlt
stos
xchg
fidivs
pop
pusha
jae
clc
push
or
in
out
inc
loopne
jnp
inc
inc
mov
cli
fbld
ret
xor
inc
fimuls
popf
jle
scas
aam
in
adc
mov
outsl
dec
jmp
das
cmp
or
add
mov
adc
xor
lods
and
add
xor
inc
aad
outsl
inc
sahf
lds
jg
xor
je
and
movsb
jbe
jnp
add
mull
cld
xchg
ja
lods
add
jl
and
dec
jg
adc
js
stc
inc
adcl
pushf
adc
add
dec
outsl
mov
pop
cs
dec
or
hlt
callw
clc
popa
sti
push
test
push
xchg
incb
mov
or
addl
fs
icebp
std
daa
mov
idiv
inc
pop
movsbl
adc
jecxz
sbbb
or
xor
inc
xchg
ljmp
jbe
loope
pop
out
cmpsl
mov
test
scas
stc
dec
loopne
clc
lock
sbb
decb
jno
pop
cli
es
pop
fdivs
xor
adc
orl
sub
ret
adc
fwait
movl
and
cmc
or
jp
adc
adc
cli
jg
pop
cld
popa
dec
test
bound
push
push
xchg
xchg
inc
sbb
test
sub
mov
jl
imul
mov
push
pop
or
push
or
cmp
popa
rorl
loop
mov
nop
dec
ret
fsubl
cli
shlb
or
lds
sbb
sbb
int
xchg
add
inc
mov
pop
pop
test
inc
mov
pop
cmp
ljmp
adc
cli
pop
mov
iret
add
add
mov
or
mov
cmpsb
es
ret
pop
insb
adc
add
mov
loope
and
jb
lret
incl
dec
data16
and
lea
and
arpl
sbb
stos
aaa
adc
inc
and
sbb
add
sahf
dec
jae
call
call
jp
jmp
js
lock
adc
cmp
xor
jg
jg
xchg
adc
cmp
adc
mov
adc
or
lods
lcall
ret
dec
fisubrl
fisubl
pop
push
adc
addb
mov
fbld
lods
adc
dec
and
push
and
sbb
mov
cmpl
dec
fwait
pop
push
inc
and
jo
and
push
subb
or
jmp
bound
stos
fwait
or
and
stc
out
mov
push
rclb
mov
mov
cmp
xor
insb
in
cli
iret
push
add
and
cmc
or
push
in
inc
test
pop
mov
push
aas
mov
adc
and
sub
cmc
push
insb
mov
sub
add
cltd
test
mov
push
js
push
inc
mov
push
aad
test
push
push
mov
adc
adc
ret
dec
icebp
test
ljmp
fwait
ss
fbstp
pop
push
cli
loop
mov
cmp
or
mov
ds
out
mov
js
or
idivb
imul
call
lds
repz
mov
or
stos
cmp
mov
xor
lret
call
scas
xchg
push
add
mov
inc
out
outsb
es
pop
fcmovnbe
pop
push
lret
mov
into
aam
lock
adc
add
adc
dec
insb
shlb
or
sbb
cmp
mov
sbb
jecxz
add
adc
add
pop
in
cmpsl
jmp
test
mov
mov
inc
ret
push
addr16
clc
or
cli
and
sub
cli
cmpsl
shll
sbb
shrd
test
leave
xchg
outsb
clc
das
loope
mov
mov
mov
push
js
dec
std
shll
or
bound
push
js
test
push
pusha
pop
xor
push
mov
inc
loope,pt
or
pop
adc
dec
pop
sub
fcoml
cmp
mov
and
stos
outsl
cmp
mov
lods
and
sub
and
cmc
aaa
aam
aam
leave
popf
lds
sbb
addl
jb
rolb
imul
call
daa
dec
cmpsb
rorl
sbb
das
jae
jb
mov
hlt
lods
mov
cmp
lcall
add
mov
fidivl
adc
jbe
or
fldcw
shlb
jg
and
dec
adc
jp
xchg
mov
sbb
sub
cmp
aad
mov
jmp
into
inc
lcall
shrb
push
mov
mov
test
out
push
mov
fdivs
imul
pop
sub
xchg
or
sbb
loopne
add
xor
cmp
xchg
cmp
cmp
cld
xchg
loopne
sbbb
in
push
push
xchg
mov
movsb
mov
push
sbb
jo
ljmp
mov
pop
scas
mov
pop
aad
inc
pusha
orl
sarb
mov
sub
add
or
sbb
enter
jbe
add
sub
in
jle
and
mov
push
repnz
aaa
daa
inc
pop
clc
or
addb
loopne
sub
andl
mov
push
inc
mov
popl
jl
lret
ds
lret
stos
std
mov
dec
sbb
fs
xchg
and
or
out
rcrb
add
inc
pop
inc
sbb
sahf
or
aam
or
xchg
xchg
and
int3
sti
je
mov
sbb
sbb
ficomps
and
leave
test
negb
int
cmp
inc
adc
enter
std
or
incb
sbb
fidivl
fwait
ljmp
jmp
out
or
sbb
stos
ror
fdivrl
into
inc
push
sub
mov
std
js
jne
nop
ss
insl
ret
push
addr16
neg
cld
or
xor
stos
cmc
roll
out
aas
add
cmp
ret
loope
jne
int
lods
push
ret
pop
daa
pminsw
dec
sub
or
push
aaa
and
and
sbbb
xabort
and
pop
cli
test
mov
js
push
xchg
mov
bound
pop
cmp
xchg
xor
and
cmp
xchg
repnz
xor
adc
outsb
jo
mov
mov
hlt
fsubrl
cmp
ret
push
sbb
adc
or
enter
jl
std
rclb
jle
pop
in
and
add
repnz
lds
jns
mov
push
sarb
fs
push
inc
loope
pop
mov
je
add
in
movsb
pop
and
test
sbb
jmp
out
jnp
pusha
dec
pop
xchg
mov
xchg
fmuls
dec
js
jno
jbe
mov
ljmp
add
fdivr
sbb
cmp
add
mov
pop
xor
and
cltd
js
lods
lock
jmp
jae
scas
push
and
sbb
out
test
add
and
add
mov
sub
mov
dec
adc
mov
push
subb
jp
in
or
push
mov
push
pop
cmp
add
stos
sub
pop
sbbb
jae
hlt
xor
xchg
and
icebp
lock
daa
rcrl
xor
xlat
in
jnp
insb
jg
sbb
insb
mov
push
and
mov
jb
and
lret
cs
mov
std
push
call
sti
lock
push
xchg
rolb
cmp
orb
or
push
out
jno
cmp
mov
pop
addr16
mov
ljmp
insl
inc
cmc
inc
pop
pop
lahf
push
xchg
insl
fstl
imul
jns
out
and
out
pop
cmpsb
mov
sbb
out
sbb
cltd
mov
push
icebp
lcall
fidivs
adc
jle
testl
je
or
push
mov
mov
jg
mov
das
xor
push
inc
cmp
mov
lods
dec
data16
and
into
mov
or
fstps
imul
inc
fstl
mov
mov
jmp
lock
andl
lret
imul
xchg
add
push
rcrb
aad
loop
lcall
nop
and
add
push
mov
add
test
sbb
sub
add
and
daa
insl
ficoml
cmp
fs
cmp
shl
mov
test
add
or
adc
xchg
push
ret
mov
dec
rorl
jle
add
dec
shlb
mov
push
scas
xlat
adc
or
xchg
fimull
push
jnp
and
pop
jl
test
rcrb
mov
add
cmp
add
jne
mov
pop
inc
push
dec
xchg
inc
jbe
add
loope
sar
call
push
sti
in
movsl
xchg
adc
pushf
cmp
loopne
xlat
rcrb
adc
add
sbb
cmpsl
hlt
iret
xlat
mov
test
arpl
dec
mov
ds
add
pop
rcr
mov
subl
shrb
std
repnz
loope
add
movb
shrl
popa
pop
sbb
lret
addr16
pop
or
in
adc
or
loopne
sub
fstl
sbbl
sub
loop
xchg
adc
or
arpl
mov
sti
leave
movsb
adc
or
mov
push
fsubr
push
sarb
test
xor
push
rcrb
pop
loopne
mov
imul
sub
push
mov
jge
lret
cmp
ds
mov
adcl
es
pop
idiv
in
mov
xchg
lcall
mov
dec
std
xchg
push
insb
and
out
inc
adcl
jecxz
xor
loopne
add
push
jmp
inc
mov
add
ficomps
mov
xor
cmpl
popa
xchg
inc
std
inc
push
pop
and
pop
jp
sub
sbb
and
jle
mov
mov
adc
pop
out
scas
nop/reserved
sub
xchg
sbb
or
and
lods
mov
mov
push
or
xchg
ss
push
sbb
notb
jns
sub
insb
lods
xor
mov
and
pop
popf
jmp
mov
dec
jp
test
into
out
ds
xchg
adc
pusha
pusha
sub
mov
mov
or
rclb
inc
fisubs
add
jle
clc
shl
roll
hlt
jge
sub
loope
xchg
mov
test
pushf
lea
test
sub
mov
or
jle
jae
iret
xor
jnp
jno
icebp
sbb
mov
fnclex
or
jmp
int3
popf
hlt
push
fimuls
inc
ret
lods
das
cmp
adc
lahf
adc
je
xchg
inc
aas
loopne
xchg
xor
nop
cmp
add
inc
icebp
mov
cmp
xchg
pop
nop
or
mov
out
ret
sub
sub
mov
mov
cmp
jp
ds
mov
cltd
xchg
push
jb
call
jo
movsl
or
mov
add
pop
sub
push
cmp
test
sbb
fadd
movsb
ja
addr16
push
clc
lods
test
push
jl
fdivs
inc
stos
mov
sub
inc
pop
pop
subb
rclb
cmp
sbb
arpl
cmpsl
pop
comiss
push
add
xchg
in
insl
rolb
adc
sub
into
adc
push
stos
jecxz
push
pop
cmc
fsubrl
cmp
push
sahf
loopne
test
sub
mov
or
leave
fstl
iret
enter
pusha
mov
rorb
inc
sbb
mov
test
ret
and
les
pushaw
xchg
js
test
cwtl
stos
aas
popa
bnd
ror
sti
or
pusha
cmp
push
pusha
cmpsb
dec
fst
sub
out
fstps
push
or
mov
sbb
movd
rcll
jne
shrd
in
std
stos
pop
out
fnsave
adc
lods
out
sub
hlt
repz
xor
jno
push
adc
jne
pop
xor
insb
jle
test
shlb
je
adc
stos
mov
jnp
aam
or
in
stos
adc
adc
nop/reserved
jne
loope
push
add
fwait
das
mov
dec
ror
jo
jnp
adc
pop
mov
fwait
xor
les
fsub
fcomi
scas
addr16
mull
jbe
or
sbb
movsb
lods
push
in
inc
jge
mov
lret
xor
ret
push
sbb
scas
jo
jge
sbb
leave
addl
pop
adc
out
mov
or
dec
jb
mov
leave
jl
or
sbb
ds
mov
enter
loopne
loop
and
adc
add
sub
cli
out
xchg
mov
in
inc
daa
mov
and
pop
and
mov
cs
cmp
mov
adc
sbb
and
andl
outsb
dec
imull
call
sbb
ja
xor
add
jae
out
outsl
sbb
lret
push
rorb
movsl
mov
adc
int
sar
subb
movsb
cs
pop
daa
and
xor
test
jo
loopne
cmpsb
sahf
xor
das
loop
pusha
xchg
fildl
das
mov
imul
mov
dec
xor
jnp
mov
or
push
push
mov
outsb
push
cmp
xchg
or
sti
xchg
and
push
insl
xor
xor
inc
inc
pop
sub
sub
lret
jmp
aad
cwtl
movsb
and
cli
nop
sbb
or
popa
inc
or
mov
int
cmpb
aas
int3
rcll
in
insl
xor
insb
das
mov
aad
insl
inc
popa
loope
mov
jo
rol
and
mov
aas
sbb
loope
and
mov
rcrb
dec
and
xchg
pop
in
test
sbb
lret
sub
fdivrl
scas
xor
cwtl
inc
fwait
aas
call
mov
or
xchg
shrb
sub
add
cs
ja,pt
insl
lds
jns
js
dec
xor
sub
shlb
mov
aas
test
inc
mov
lret
pop
in
mov
mov
fst
xchg
pop
inc
and
sbb
mov
sbb
shrl
xchg
outsb
jno
mov
lea
test
clc
mov
mov
jbe
pop
push
shl
push
int3
leave
inc
mov
inc
roll
and
push
ljmp
movb
sahf
mov
jl
mov
mov
push
mov
ret
push
xchg
pop
movsl
lea
sbb
les
pop
pop
pop
sbb
jbe
pushf
hlt
sub
out
fsubrs
mov
or
data16
movsb
lret
or
fidivs
cld
call
mov
sub
loope
fimuls
scas
js
sbb
daa
sub
out
ret
test
add
vpaddusw
push
mov
outsb
lock
pop
pop
nop
jae
out
int3
icebp
dec
mov
sbb
lods
scas
adc
nop
cltd
movsl
loopne
test
mov
outsb
test
mov
push
xchg
sub
and
sub
sbb
fistpl
adc
dec
es
pop
loop
mov
dec
inc
aas
je
sub
lds
pop
and
adc
xor
or
sub
mov
imul
mov
ds
pop
inc
dec
js
stc
loopne
and
or
jmp
inc
cwtl
cmp
aam
call
add
pop
test
insb
loope,pn
jns
imul
mov
mov
adc
cmpsl
in
icebp
add
sbb
mov
lock
insl
gs
push
mov
fcmovnbe
xor
pop
xlat
in
dec
add
rclb
add
inc
inc
lret
clc
inc
pop
rcll
and
ffreep
andl
test
pop
mov
jne
pushl
je
jns
sbb
jp
pop
cs
pop
push
or
inc
dec
push
pop
shll
or
or
dec
adc
or
js
ficompl
rorl
lcall
adc
testb
dec
mov
push
aaa
pop
repnz
out
pusha
add
jmp
cld
push
dec
pop
fisubrl
jns
popa
test
outsl
lret
push
ret
out
nop
lret
push
xchg
add
or
jge,pt
or
or
adcl
movups
push
xchg
xor
xchg
popa
sub
or
push
ret
xchg
insl
nop
or
add
pop
mov
inc
jl
or
inc
out
lahf
aam
mov
sub
dec
jl
mov
inc
jecxz
push
cmp
jp
loope
mov
cld
pop
push
dec
das
pop
dec
cmp
pushf
addr16
cmc
push
push
mov
andb
jo
test
iret
xor
cmp
mov
pusha
aad
in
roll
dec
mull
or
das
pop
loopne
push
jb
out
sub
test
sbb
icebp
test
inc
mov
lods
out
iret
inc
pusha
adc
mov
or
js
xchg
rorl
lahf
push
sub
orb
pop
dec
sbb
or
xchg
mov
call
cli
mov
mov
mov
dec
es
test
push
out
stos
movsb
mov
leave
call
adc
xorl
push
add
inc
cmp
pop
mov
mov
lret
sub
cmp
jge
sbb
ret
and
xchg
pop
std
pop
jle
cmp
rcrl
shll
sbb
or
mov
lret
mov
and
lret
pop
test
adcl
inc
jle
sbb
mov
out
xor
adc
adc
bt
add
outsb
enter
inc
pusha
push
dec
add
adcw
addb
icebp
jno
addr16
inc
xchg
leave
sub
jecxz
adc
mov
cld
jae
rcrl
cmp
xchg
movsb
in
loop
xchg
lock
push
or
mov
jle
pop
cli
pop
sbb
or
dec
pop
mov
jae
pop
mov
imul
loop
or
jnp
mov
xor
ljmp
push
sub
add
xor
sbb
nop
mov
dec
pop
jns
ja
xchg
outsl
cmpsb
loopne
stos
add
fmuls
xchg
xor
aas
lret
jo
icebp
fdivr
jno
inc
repz
cs
lfs
rcll
and
sahf
rorl
sbb
mov
inc
dec
stos
xchg
add
adc
or
jge
shlb
imul
jmpw
pop
popf
pushf
ds
adc
xlat
scas
sub
cmpsl
stc
mov
int
popf
add
loopne
loopne
aam
ss
jno
ja
cmp
stc
out
or
lods
mov
adc
xchg
inc
jge
imul
test
gs
ja
outsb
mov
push
mov
div
out
mov
jp
inc
sti
les
lods
rorb
jge
movsb
rcl
push
mov
or
es
pop
xor
negb
pop
or
in
add
push
cmp
pop
mov
aam
pushf
dec
mov
sub
cmp
cli
mov
push
xor
leave
cmpsl
pop
pop
cmpsl
xchg
xorl
adcb
int3
pop
daa
enterw
stos
dec
mov
nop
fdivs
stos
in
or
push
addb
push
cwtl
jne
cmp
sub
pop
fdivs
mov
sar
push
add
inc
cmpsb
ret
xorb
mov
int
roll
push
fsub
push
popf
sub
lcall
shr
fsts
cmpsb
lret
loopne
mov
mov
iret
mov
push
divl
or
xor
in
xchg
dec
pop
pop
cmpsb
insl
sarb
adc
cs
int
rolb
jg
mov
hlt
adc
jle
mov
cmc
mov
xchg
xor
jae
jl
ja
or
ja
in
xchg
cmp
popa
sub
insb
xor
xor
mov
out
jae
gs
adc
mov
rcrl
dec
jecxz
inc
pop
mov
cmc
stc
pop
loope
cli
cwtl
xor
movsb
jl
in
fs
xorl
fmuls
loope
insl
sub
mov
pop
mov
adcl
xor
loopne
insl
testb
divb
add
iret
lret
mov
jnp
iret
mov
mov
adc
xchg
dec
add
add
inc
xlat
jns
andl
dec
fcomps
andl
lods
sub
mov
xchg
cmpsb
pop
hlt
orb
pop
call
and
sbbl
dec
mov
dec
fsubp
pop
adc
test
leave
dec
mov
sub
cmpsl
int
push
mov
cmp
mov
hlt
cmp
push
in
out
jo
push
cmp
sbb
adc
pop
cmp
mov
push
mov
sbbb
or
pop
xchg
push
xchg
adc
add
sbb
lock
xor
jbe
sub
mov
mov
add
inc
mov
lahf
mov
ret
push
or
mov
push
iret
les
adc
xchg
lock
lock
scas
aam
and
mov
popf
cltd
test
shlb
hlt
mov
pop
in
xor
add
pop
pavgw
mov
dec
call
push
pop
out
or
pop
push
and
xchg
mov
ja
aad
cmp
mov
sub
loope
xor
cs
fstpl
in
cli
inc
push
inc
test
push
push
outsb
cli
imul
leave
xor
push
hlt
pushf
movsl
cmp
clc
pusha
jle
subb
cmc
cwtl
push
adc
xor
or
insb
push
mov
movsl
out
xchg
jl
stc
push
inc
sbb
test
dec
outsl
lods
pop
cli
push
and
mov
pop
imul
rorb
inc
rol
fsubr
mov
mov
inc
daa
cmp
cmp
jl
and
mov
xchg
ljmp
popf
xchg
mov
imul
pusha
mov
ret
pop
imul
push
add
add
add
jecxz
and
sbb
fadds
movsl
sub
adc
lds
pop
jne
or
sub
mov
add
xchg
inc
push
aaa
les
inc
jae
or
fcomi
clc
test
ds
mov
xor
cmp
xor
push
dec
lods
aad
mov
mov
jb
xor
or
xchg
cmpl
mov
les
aad
xchg
adcb
sub
lods
stc
and
cmp
ds
sbb
pop
sbb
gs
pop
push
nop
mov
or
rcll
push
lock
pop
xchg
xchg
data16
pop
lock
push
sbb
out
movsb
daa
xchg
sahf
xchg
adcl
clc
adc
in
pop
sub
aas
ljmp
sbb
pop
daa
cmp
adc
inc
loop
loop
mov
xor
test
mov
in
popa
push
ss
test
icebp
js
adc
or
subb
cli
mov
inc
loopne
mov
aas
stos
xchg
and
loopne
subl
dec
add
jl
push
xchg
je
jb
lds
lret
jno
dec
arpl
mov
test
gs
jns
mov
lret
add
out
sbb
jbe
push
out
jmp
inc
adc
adc
jge
sar
push
cltd
dec
std
inc
push
lret
xchg
addr16
enter
lret
sub
fld
clc
xor
aam
test
aam
fistl
mov
xor
lock
icebp
cmp
pop
in
mov
pmaddwd
sbb
daa
lock
push
pop
jecxz
sti
out
dec
icebp
fsqrt
lea
cmc
or
push
lcall
stos
adc
js
iret
cmpsl
push
mov
mov
jp
mov
mov
out
jb,pn
movsl
orb
jmp
iret
inc
int3
cmp
rorl
hlt
cld
fwait
mov
adc
lret
sbb
fsub
cmp
pop
or
pop
sbbb
icebp
shrl
stos
push
mov
cld
push
and
loopne
daa
pop
or
stc
loop
xor
mov
shlb
cmpsl
out
sbb
fcoml
push
inc
aas
or
inc
add
cmp
or
pop
hlt
push
lock
mov
jno
cli
sbb
and
or
jbe
mov
in
scas
cwtl
mov
push
gs
and
sbb
fs
fs
cmpsl
in
jbe
ret
rcrl
das
lahf
adc
or
sbb
sahf
xchg
aad
add
enter
out
mov
dec
xlat
or
pop
fiadds
push
rcrb
dec
loope
xchg
jl
stos
insb
icebp
lahf
mov
sbb
and
fstps
das
flds
mov
push
cli
mov
out
ret
sub
xchg
js
repz
es
xchg
sbb
mov
push
push
or
push
push
pushf
jno
sbb
lcall
pop
insl
jae
jg
daa
pop
push
mov
cmpl
lods
addr16
outsb
scas
dec
js
add
sbb
mov
les
jmp
mov
adc
outsl
mov
pop
outsl
stc
or
mov
mov
sbbl
lds
add
adc
pop
jge
mov
pop
mov
jns
frstor
icebp
sbb
ljmp
vmread
or
flds
add
ret
rorl
roll
cmpsl
sbb
mov
les
orl
mov
adc
adc
insl
lods
jl
xor
push
mov
add
in
jge
jl
cmp
lret
jno
movb
cmc
pusha
pop
sahf
lahf
mov
mov
add
ret
push
ljmp
sub
fcmovnbe
call
pop
xor
ljmp
call
cmc
roll
or
in
test
cmp
sub
adc
dec
mov
jl
rclb
mov
arpl
pusha
pop
imul
test
inc
xor
mov
addl
cmpsb
adc
pmaxub
jae
ja
stos
jp
cmp
dec
inc
add
add
mov
mov
or
cmc
or
repnz
fdivs
lret
jg
outsb
or
sbb
adc
pusha
fcoml
clc
push
out
jl
and
pop
pop
arpl
sbb
je
mov
cmpsb
dec
push
or
ljmp
dec
hlt
stos
jo
pop
fisubrl
inc
int3
and
insb
mov
ja
jo
mov
mov
xor
imul
gs
test
rclb
fidivl
or
sbb
mov
inc
sbb
std
pop
sbb
pop
dec
mov
clc
hlt
mov
push
frstor
into
dec
add
aaa
push
je
mov
dec
add
mov
out
scas
add
pop
cld
fimuls
adc
sbb
and
pop
call
loope
add
mov
dec
or
es
add
sub
aas
pop
outsl
sub
cld
or
sub
sarb
or
add
push
inc
sub
pop
pop
daa
hlt
pop
jno
rcrb
dec
xchg
or
add
push
add
sub
mov
iret
jnp
insl
mov
inc
or
sbb
or
fisttps
fs
pop
add
and
dec
xchg
mov
pop
dec
adc
cld
stos
ret
push
mov
jo
xor
mov
sub
mov
xchg
sbb
and
sub
enter
adc
mov
sbb
mov
adc
movsl
add
sub
push
inc
stos
add
std
push
ret
sbb
dec
and
pusha
shll
mov
fists
cli
lea
inc
add
cmp
outsb
pop
jge
push
xor
xchg
pop
jge
xchg
push
jmp
outsl
incb
and
sub
push
inc
xchg
nop
mov
repz
test
pop
inc
cmc
pop
enter
xor
div
push
add
xor
jnp
push
in
push
insb
mov
popa
aas
or
pop
adc
and
push
clc
test
jmp
push
mov
imul
mov
test
pop
adc
cmp
adc
and
xchg
and
fistps
mov
outsl
push
sub
int
addb
hlt
rcrb
test
add
orl
xchg
jl
xchg
leave
cmp
cwtl
inc
push
std
adc
es
and
or
mov
shlb
push
repnz
lds
scas
jo
and
push
jg
mov
rcl
pop
or
stc
add
pop
ljmp
adc
or
mov
add
sub
movsl
lods
outsl
shr
push
into
fwait
aam
xor
insb
mov
aad
or
in
in
inc
add
rclb
aam
cmpsb
mov
and
or
sbb
addb
lret
jl
fisttpll
daa
shlb
xchg
fmulp
mov
mov
mov
xchg
mov
addl
push
out
test
mov
loope
ja
enter
xor
push
cmpsb
adc
or
dec
lret
mov
jns
mov
fiadds
call
faddl
push
imul
cs
outsb
mov
lods
ja
sarl
mov
stc
dec
push
xchg
push
jl
adc
arpl
ja
clc
adc
lods
ds
icebp
pop
js
fdivl
adc
dec
xchg
mov
test
popa
pusha
cmp
aam
pop
ja
inc
xorl
loopne
xor
in
xor
rcll
pop
cli
sub
sbb
sbb
cli
test
out
ljmp
jg
pop
adcb
rcrl
or
xor
inc
insl
add
mov
or
xchg
scas
lret
pop
lock
imul
pop
cs
shr
sbb
jno
and
mov
loopne
inc
inc
popf
clc
or
mov
outsb
loopne
sbb
ds
pushl
jg
mov
jecxz
mov
mov
aad
adc
mov
xchg
lods
ja
outsb
dec
jg
fstps
push
dec
call
cmp
lock
test
arpl
cmp
js
sub
pop
divb
lods
cwtl
push
or
inc
cmpsb
sub
fiadds
mov
or
hlt
fisttpll
mov
je
mov
sbb
dec
jo
in
mov
repz
pushf
jno
push
adc
cltd
jnp
rcr
dec
lahf
mov
mov
sbb
mov
mov
pop
xchg
fidivs
jp
jecxz
push
lcall
xlat
pop
shlb
pop
jmp
pop
pop
cmp
rcll
std
test
add
cld
xchg
stos
jle
sbb
jns
sub
mov
push
xchg
xor
in
insl
cmp
push
je
mov
push
or
stos
ljmp
adc
sti
mov
loop
and
push
cmpsb
pop
call
xchg
mov
mov
pop
ljmp
testb
pop
fdivrp
orl
mov
cli
xchg
add
inc
insl
sbb
js
ret
inc
cwtl
xor
cmp
aad
lods
iret
xor
or
adc
mov
dec
insb
daa
xchg
fisubrl
push
xor
xchg
adc
xor
mov
mov
pop
es
xor
mov
push
test
mov
inc
xchg
mov
xor
and
test
smsw
sbb
sbb
inc
sbb
xchg
in
push
outsb
inc
xchg
ret
test
dec
and
xor
adc
push
js
inc
jmp
pop
fsubrs
enter
mov
ds
lcall
popa
imul
mov
lds
mov
jmp
jnp
mov
pop
out
clc
andb
cmpsl
loope
xchg
jno
push
push
jge
das
pop
add
dec
adc
in
adc
xchg
xor
sub
dec
jno
mov
loop
ret
out
loop
mov
pushf
jl
xor
nop
loop
rorl
test
lock
or
inc
aaa
jge
jle
cld
aam
shrb
test
xchg
loop
sub
leave
loopne
adc
decb
xor
into
add
cmpl
pusha
jnp
adc
push
incb
out
jmp
fwait
lock
repnz
jmp
mov
mov
xchg
jmp
mov
mov
icebp
fs
addr16
rcr
push
inc
cmp
cmp
cmp
pop
inc
mov
xor
popa
adc
shlb
inc
js
or
pop
rorb
ljmp
icebp
dec
jge
push
gs
call
cmpsb
stos
add
call
ja
adc
int
jp
out
les
mov
js
std
mov
sub
cpuid
add
loop
and
mov
sbb
fcomps
xlat
jbe
testb
cmpsl
mov
mov
or
icebp
pop
cmp
mov
dec
and
test
call
and
in
js
scas
inc
es
stos
inc
xchg
es
or
lret
jecxz
pop
push
sbbb
sbb
or
scas
pop
xor
pop
lock
mov
push
pop
mov
ja
add
xlat
cld
aas
dec
das
xor
mov
ret
mov
pop
aaa
and
imul
cmpsb
dec
and
cmp
xchg
inc
enter
js
and
adc
sbb
or
pop
or
loopne
cmp
into
xchg
enter
sbb
jno
js
and
rorb
mov
shll
in
popa
mov
pop
lock
lcall
in
lcall
insl
mov
lock
mov
gs
imul
mov
push
jmp
adc
int3
enter
xchg
jnp
sbb
adc
mov
outsb
sub
push
popa
dec
mov
in
sbb
loopne
ja
dec
stos
stos
mov
cmpb
stc
add
fdivl
repnz
sbb
mov
clc
dec
mov
mov
insb
dec
ret
add
mov
sbb
or
xchg
nop
pop
imul
lcall
push
sbb
xchg
fnsave
sub
sbb
std
loop
pusha
mov
nop
and
test
rorb
cld
andb
ljmp
loopne
ret
nop
xor
xor
arpl
xchg
inc
mov
lods
and
divb
cmc
jg
dec
push
movsl
push
cmp
jp
dec
dec
sbb
hlt
mov
push
and
popf
in
xorb
icebp
mov
shrb
pop
add
fcomip
push
jg
or
inc
pop
xchg
mov
loop
jmp
std
adcl
sub
add
pop
mov
hlt
xchg
jle
jg
dec
dec
pop
xchg
pop
fmul
mov
inc
and
cmc
dec
pop
mov
inc
lret
mov
or
bound
pop
mov
adcb
out
cmp
pop
push
stos
xchg
imul
inc
jne
xchg
cli
dec
push
cmp
push
jmp
lods
add
dec
les
mov
dec
fcom
dec
xchg
dec
sub
push
cmpsb
xor
mov
aaa
cli
mov
inc
adc
add
fcompl
mov
js
xchg
ret
aas
fwait
push
pop
mov
push
or
icebp
call
sbb
xchg
mov
inc
test
mov
xchg
cmpsl
fiadds
cmp
mov
lods
or
add
push
inc
decl
inc
sbb
or
and
test
ret
andb
lcall
sub
sti
lods
push
and
std
mov
inc
jg
fs
mov
sbbb
clc
decl
test
inc
adc
mov
push
insl
mov
dec
js
out
or
adc
in
sub
clc
lahf
jp
std
xor
dec
jne
out
les
sti
mov
sub
rolb
loopne
cmpsl
cmp
sbb
push
popf
int
xchg
dec
jge
insb
cmp
push
xchg
fldt
mov
jecxz
jns
mov
ljmp
push
cli
add
loope
push
fldl
sar
mov
jmp
add
test
push
ds
pop
loopne
push
lcall
add
shlb
aam
nop
adc
jb
lcall
lcall
jl
jmp
pop
test
scas
icebp
fwait
mov
add
cli
in
sbb
out
test
xor
jmp
jg
mov
jns
adc
mov
clc
fdivrp
jo
sti
mov
add
add
test
int
stos
insl
dec
sbb
jl
cmp
adc
jno
pop
or
fchs
cmpl
jecxz
insl
bound
inc
push
cmp
outsl
add
hlt
ret
pop
mov
cmpsl
pop
push
iret
mov
pushf
dec
addr16
sub
stos
aas
pop
mov
clc
shll
mov
push
lods
ja
add
or
xor
push
fwait
pop
add
fdivl
bound
or
jae
and
dec
jg
in
inc
adc
xor
push
iret
mov
cmp
lret
mov
push
cmpsl
sbb
fmuls
bound
fcmovnbe
movsb
jecxz
and
loope
loope
push
popf
sub
fsubrs
into
jp
pop
nop
xor
mov
mov
xor
jbe
push
pop
aad
mov
add
imul
xlat
pop
ljmp
xorb
jmp
pop
insl
ret
gs
inc
inc
jne
and
arpl
sarl
push
pop
hlt
jmp
push
cmp
inc
mov
nop
lods
jo
ret
and
inc
cmpsb
es
inc
mov
repz
xor
push
jl
cld
in
xor
jo
mov
cli
and
int
adc
mov
loopne
insl
cmp
add
scas
ror
lock
pop
xchg
and
push
lret
fsubrl
mov
nop
dec
in
fdivl
jmp
cwtl
out
push
mov
sbb
dec
rcr
in
fwait
or
add
leave
ds
nop
mov
pop
dec
cmpsl
daa
mov
xor
push
push
lock
add
and
mov
mov
and
mov
or
lcall
test
and
xchg
stos
jge
stos
ss
jl
xor
push
loop
mov
jecxz
lret
or
sti
pusha
dec
fs
enter
mov
jmp
mov
or
clc
mov
xor
jl
sti
data16
frstor
das
or
add
push
xchg
xor
add
outsl
mov
push
xchg
mov
out
push
mov
jg
xchg
pop
mov
or
lds
ds
sar
adc
push
cli
mov
lret
subb
insb
xor
add
je
and
imul
jle
pop
sub
sbb
mov
lods
jg
sub
dec
sub
and
pusha
dec
xchg
stc
pop
js
and
nop
dec
jg
outsl
loopne
movsl
xor
mov
cwtl
lcall
cmp
cmp
loopne
mov
clc
in
xchg
mov
ss
gs
movsb
add
rcl
adc
adc
mov
aas
jbe
lcall
aas
or
inc
jmp
inc
fidivrl
cmp
mov
cmovnp
mov
push
mov
push
idiv
sbb
dec
xchg
inc
xor
shl
add
insb
cmp
pop
push
pop
cmp
xchg
jo
bound
jl
sub
insl
cmp
xor
push
cmp
lahf
push
daa
push
and
ret
dec
js
dec
cmp
jl
jo
fwait
jns
fldt
cli
inc
mov
cld
js
test
mov
cltd
xor
bound
stos
lcall
imul
ret
filds
inc
push
add
ja
pop
divl
gs
pop
add
fnstenv
adc
or
push
push
jne
pop
cltd
mov
push
adc
aad
or
jnp
jae
and
push
mov
aad
sub
cmp
mov
pop
je
xchg
lcall
add
sbb
dec
cmp
mov
xor
xchg
add
mov
imul
push
mov
or
sarb
inc
pop
popa
sub
xor
lret
sub
jo
outsb
test
jbe
add
push
nop
fstps
adc
mov
cwtl
cmp
outsl
or
andb
mov
push
pushw
scas
xor
movsl
jnp
cmp
les
jns
push
jo
pop
adc
adc
outsb
jns
cmpsb
pop
iret
add
clc
pop
rorl
or
dec
shll
push
push
push
push
mov
dec
and
out
adc
dec
lods
adc
adc
je
sar
mov
lahf
shll
popa
icebp
cmp
or
ret
xor
stos
dec
imul
and
stc
enter
lds
ffreep
std
jmp
jl
lods
jp
inc
out
pushl
outsb
aas
loope
cwtl
mov
sub
cmp
add
loope
repnz
lods
roll
add
in
sub
adc
mov
xchg
mov
cmp
invd
add
cmp
hlt
xchg
and
nop
jmp
xor
fdivrl
mov
mov
xor
test
cmp
pop
les
or
js
inc
dec
push
pop
or
aam
iret
lock
stos
push
adc
pop
sahf
jbe
push
mov
scas
xchg
sub
hlt
sarb
inc
mov
out
inc
dec
faddl
rcrl
outsl
pmulhw
and
loop
sub
mov
cmp
jo
jns
lea
add
sbb
jp
lret
movsb
rep
int3
mov
cmp
outsb
xchg
push
push
fsubs
mov
push
outsb
add
sub
cmpsb
mov
jle
aam
or
mov
push
aaa
adc
pop
fmuls
sysenter
cmp
or
xor
cmp
xchg
adc
inc
adc
adc
call
add
pop
lods
jb
repnz
aas
push
clc
inc
clc
aas
lds
add
xchg
adc
pop
jp
addb
filds
ds
and
ret
in
jecxz
push
jl
mov
xor
aam
stos
adc
cmp
mov
pop
lock
push
inc
call
push
cmpb
and
inc
movsl
mov
sbb
xchg
push
je
jo
jmp
xor
idivb
mov
mov
sarb
push
jg
aas
mov
push
aas
push
outsb
mov
mov
inc
inc
push
inc
clts
aam
dec
loop
int3
addr16
adc
popa
cld
adc
pop
mov
imul
mov
or
mov
mov
xor
outsb
push
xchg
fcmovbe
rorl
xchg
inc
dec
push
aas
xchg
mov
mov
push
hlt
mov
sahf
push
std
rcr
test
fprem1
test
test
dec
xchg
imul
in
mov
sbb
shrl
loopne
mov
jl
push
imul
fs
insb
cltd
jo
incl
sub
mov
or
inc
cmpsb
outsb
dec
mov
leave
test
push
xchg
into
add
and
mov
jo
xchg
xchg
sbb
in
cli
and
in
xor
jnp
xor
mov
jle
clc
stc
cltd
sub
mov
int3
xchg
adc
dec
push
ds
dec
add
mov
push
stos
dec
stos
mov
decl
inc
imul
enter
mov
test
int
mov
push
pop
cmc
sub
and
pop
pusha
xchg
cmp
leave
std
sub
pop
icebp
notl
xor
loop
cmp
push
sbbl
adc
ret
inc
jnp
dec
ja
nop
icebp
cltd
lahf
cs
divb
inc
inc
add
xor
rolb
mov
pop
mov
clc
push
cmp
cwtl
inc
into
in
shlb
cltd
xlat
mov
lods
xchg
pop
idivb
mov
sbbb
std
or
sbb
push
andl
dec
dec
fnstcw
fs
lock
ss
enter
je
stos
ja
addr16
in
and
andb
lock
mov
mov
enter
nop
pop
inc
push
ret
dec
adc
es
ljmp
sub
xchg
push
sub
and
adc
add
cmp
dec
in
push
aad
pop
mov
leave
inc
or
push
or
jl
mov
cmpsl
in
add
leave
lods
or
je
aad
pop
xor
nop
push
stc
sti
dec
gs
test
int3
cmc
pop
shlb
or
into
js
cmpb
aad
xchg
jmp
movsb
push
push
mov
fdivs
pop
and
push
lret
adc
es
xor
sbbl
sub
lret
or
mov
mov
lods
or
es
mov
test
push
inc
ud1
sti
and
jecxz
adc
cmp
test
fisubs
jb
xor
es
shll
push
lcall
jo
clc
xor
test
mov
inc
jmp
cmp
xchg
or
cmpsb
xchg
push
sbb
mov
ljmp
scas
push
and
inc
push
adc
inc
in
sbb
pop
cmp
pop
or
xchg
movsb
push
adc
mov
jb
or
dec
adc
sahf
lcall
pop
xor
call
fisttps
ret
lds
push
test
ljmp
in
mov
cs
psrlw
jle
dec
push
call
jl
push
rolb
push
mov
jae
xchg
mov
into
adc
out
cld
xor
and
dec
dec
dec
mov
jl
jne
das
mov
js
sarl
out
or
leave
cli
mov
mov
lret
pop
jmp
jge
jg
xchg
dec
adcl
in
and
sub
adc
jnp
sbb
iret
cld
mov
add
mov
inc
push
add
add
jp
shll
in
jb
je
adc
mov
pop
inc
scas
or
lock
xor
fisttpl
or
pop
sub
hlt
add
mov
xor
or
js
add
insl
dec
fsubs
push
xor
clc
jp
cltd
pop
jle
subl
or
outsl
push
jge
add
inc
inc
xchg
cmp
pop
and
pop
imul
icebp
or
leave
xchg
push
mov
rcrb
mov
xor
pop
test
push
inc
ret
push
xor
bound
add
dec
xchg
ss
lcall
mull
inc
inc
call
repz
dec
adc
aad
cmp
loope
or
and
aam
gs
mov
test
fdiv
mov
repz
push
jo
add
loopne
incl
mov
adc
jl
adc
in
insl
or
cmp
out
in
mov
and
mov
addr16
sbb
cmpsl
pop
mov
loope
mov
add
outsb
cmp
mov
mov
mov
dec
test
pop
add
push
mov
push
les
fcomp
xchg
mov
outsb
js
aas
jge
pop
cwtl
jle
cmp
mov
in
repz
addl
xor
inc
xchg
pop
loopne
xchg
jns
mov
sbb
pop
adc
fisttpll
loope
cmp
dec
addr16
jl
js
xor
jno
jl
fiaddl
or
sub
or
cli
add
inc
adc
cmc
mov
push
sub
sti
sub
adc
ret
mov
mov
outsl
or
out
shll
pusha
add
add
dec
sbb
mov
push
adc
int
mov
stos
pop
cli
pushf
into
xchg
dec
out
ret
or
jecxz
clc
subl
scas
data16
faddl
sbb
in
sbb
jmp
mov
push
gs
fnstsw
jle
dec
pop
insb
movsb
and
lcall
sarl
mov
out
add
imul
mov
mov
pusha
mov
call
push
jno
mov
cld
pop
pusha
mov
lds
sub
js
ficompl
jg
adc
mov
ljmp
sub
xchg
xchg
cmp
mov
inc
jp
add
xchg
dec
lds
js
shrb
cmpsb
iret
push
mov
sbb
sub
aam
arpl
outsl
cld
rcrb
pusha
cmp
lret
sbb
outsb
and
stc
mov
adc
push
mov
or
xchg
xor
xchg
mov
sbbb
jbe
incb
in
call
push
mov
xor
pop
and
daa
add
call
movsb
outsb
mov
inc
andb
and
jns
out
ret
adc
pop
push
movsb
add
dec
mulb
push
mov
or
outsl
xchg
jg
mov
mov
pop
xchg
in
inc
call
jb
rol
mov
push
sti
in
icebp
mov
jbe
imul
mov
fucom
dec
or
arpl
jne
sbb
ret
add
incl
push
std
add
cmpb
pop
pop
jp
iret
xchg
jp
mov
and
nop
hlt
xor
call
push
mov
pop
sbb
xor
dec
stc
mov
bound
cwtl
clc
mov
add
insb
or
fldcw
push
mulb
push
imull
cmovbe
add
cmp
adc
aas
adc
sub
mov
les
push
fs
dec
into
push
jmp
repz
lock
mov
mov
addb
outsb
push
enter
rcll
add
jmp
push
or
adc
sti
and
mov
mull
into
shlb
pop
jo
scas
arpl
es
test
cmp
and
addr16
pusha
xchg
mov
popl
add
ds
sbb
insb
push
push
enter
loop
rolb
push
mov
movsl
xchg
hlt
jnp
ret
adc
mov
sahf
fucomp
xor
notl
ret
add
scas
cmp
cmp
cmpsl
pop
shlb
push
push
xchg
push
aam
int3
leave
or
stos
arpl
iret
pushl
icebp
test
or
xchg
and
xchg
mov
aam
adc
addb
testb
push
jmp
lock
rolb
push
mov
rclb
ss
loope
jl
loop
bound
loopne
sbb
jb
jo
pop
xor
pop
push
inc
add
push
lock
mov
mov
dec
test
ds
pop
jnp
xchg
jecxz
push
pop
xchg
nop
sbb
push
inc
out
pop
faddl
idivl
ret
inc
test
test
lahf
rcrb
fimull
push
call
addb
dec
pushl
outsl
ret
repnz
daa
or
mov
or
int
imul
fucomip
and
orb
pusha
pop
mov
jge
push
push
cwtl
jle
mov
jecxz
mov
fistps
jmp
inc
nop
clc
dec
cmp
mov
add
sbb
pop
mov
test
push
xchg
mov
mov
mov
enter
repz
mov
jl
jb
outsl
pop
mov
adcb
mov
ss
xchg
xor
xchg
mov
xchg
loope
or
imul
test
addr16
mov
lds
jecxz
mov
or
cmp
inc
cwtl
imul
push
xchg
test
sub
jg
mov
add
inc
dec
and
das
mov
out
cli
sub
icebp
sbb
adc
div
pop
mov
cmp
jno
push
std
mov
inc
invd
jmp
fiadds
mov
inc
xorb
pop
jecxz,pn
in
push
push
or
adc
adc
and
jl
int
jne
insb
cli
push
loope
rolb
test
or
sbb
dec
pop
add
push
fidivl
lods
movsb
lods
ficoml
cs
jo
jbe
call
fcomip
xchg
xchg
mov
inc
fisttpl
mov
sub
shlb
ja
lahf
push
mov
cmp
push
ret
jp
shlb
pop
and
adc
pusha
mov
xchg
inc
push
cmc
cli
sbb
cmc
fwait
gs
cltd
lods
pop
dec
sbb
shrb
push
and
test
in
mov
mov
adc
add
mov
pop
lahf
xchg
sahf
or
push
fisubrs
filds
repz
inc
insb
dec
lret
aaa
xchg
les
aad
adc
cli
inc
je
xchg
fs
mov
xchg
imul
pop
popf
in
popl
sbb
mov
out
rcrl
addb
mov
mov
jbe
xchg
mov
xlat
hlt
outsl
scas
adc
and
cld
lahf
jo
xchg
fldcw
ljmp
repz
fidivrs
dec
mov
loop
lock
cwtl
pop
jp
mov
sub
ss
push
out
cmp
push
inc
rorl
xor
push
add
and
sub
mov
loope
cmpsl
add
mov
and
xor
shr
dec
inc
daa
sub
xor
ds
xchg
insb
cmp
cli
add
pop
inc
inc
jo
inc
dec
cwtl
das
cmp
scas
dec
lods
cmp
sbb
adc
adc
pop
xorb
es
mov
or
and
or
push
mov
ja
mov
fidivrl
jecxz
ss
sahf
cltd
leave
mov
shll
push
aas
adc
dec
stos
shrb
sbb
loopne
sbb
pushf
adc
or
je
mov
aaa
mov
movsb
jns
sbb
pop
or
lods
ljmp
sub
add
mov
ja
test
ret
das
mov
jg
jge
outsl
es
and
jbe
adc
push
and
sti
add
jp
add
fs
pop
dec
mul
fdivp
mov
lock
adc
outsl
mov
clc
mov
loope
loope
inc
ret
or
inc
push
fadds
xchg
or
lcall
loop
add
sarb
jg
in
outsl
ret
jo
dec
int3
mov
stos
ljmp
popf
adc
push
sbb
loope
jle
jae
stos
cmp
and
je
cmp
ficompl
jg
jb
xor
mov
jl
sarb
push
or
xchg
mov
add
daa
outsb
and
xor
sub
imull
jns
dec
xchg
test
inc
xchg
addb
xor
decl
pusha
rcl
pop
andl
imul
pop
add
pop
inc
adc
enter
lahf
xor
mov
cmp
iret
dec
mov
xchg
jmp
and
mov
push
add
imul
mov
or
and
dec
inc
xchg
out
dec
or
jno
iret
mov
fwait
ljmp
out
xchg
js
and
sbb
sub
ret
or
dec
add
pushf
add
rorl
inc
mov
add
sbb
pop
cmp
mov
sbb
fbld
inc
xchg
stos
cmp
jns
adc
mov
pusha
add
push
iret
xor
orl
push
fstps
outsl
add
add
cmp
jbe
lcall
aas
pushf
push
orl
js
inc
gs
adc
adc
pop
or
movsb
pushf
xchg
fadds
and
cmp
shlb
pop
mov
sbb
and
ds
fisubrs
stc
sbb
jl
jl
pop
ret
pop
mov
sub
vucomisd
popa
add
pop
jo
add
das
cmp
add
lea
sub
sarb
or
jae
or
mov
dec
lcall
inc
or
test
outsb
or
addr16
scas
pop
mov
int
add
loop
fistl
cmc
pop
sbb
or
mov
adcl
sbbb
imul
ss
mov
inc
inc
push
icebp
cmpsl
call
popf
cld
jno
xor
sti
outsb
mov
inc
sbb
or
int3
pop
mov
dec
and
push
cmp
movsb
test
aas
movsb
repz
insl
cli
loop
pop
jbe
lock
inc
insb
call
and
sub
or
ret
jo
vphsubbw
out
je
jb
pop
fisubrs
lret
cs
aas
lock
call
fdivrl
add
out
mov
mov
xor
test
cmp
stos
sub
out
lods
lock
mov
pusha
stc
jbe
popa
shl
aaa
lret
inc
mov
pop
cmp
sub
js
push
data16
add
test
sub
insb
push
sbb
cmp
push
inc
shll
add
repz
test
test
dec
add
hlt
fcmovb
insl
add
xchg
cs
adc
loopne,pn
pop
lret
xor
bound
cli
bound
ss
nop
mov
imul
xor
fs
out
lock
jg
sub
jg
js
adcb
in
mov
inc
sbb
clc
mov
push
ljmp
movb
xchg
mov
inc
or
push
loope
in
call
imul
mov
add
arpl
cli
cli
dec
ljmp
and
mov
ret
pop
or
xor
adc
cld
loope
cmp
add
mov
add
aaa
jg
les
inc
cmp
cld
sbb
mov
jg
pop
sbb
sar
fisubl
jle
pusha
xchg
je
orb
pop
sub
pop
mov
sbb
mov
in
ficoml
dec
xor
imul
sub
rclb
and
rorb
scas
inc
inc
and
inc
push
dec
xor
test
pop
pop
mov
pop
inc
int3
fsubp
adc
into
into
aam
or
repnz
arpl
jo
adc
lods
dec
mov
rcrb
pop
popf
ss
lds
testl
in
jnp
addr16
cmc
das
filds
outsb
sbbb
cmpsl
popf
and
pop
call
jecxz
or
add
or
push
mov
adc
dec
sub
leave
clc
inc
cltd
add
add
ss
xor
push
lods
xorb
jne
adc
es
mov
or
add
and
xor
cmp
wbinvd
adc
ja
or
shll
mov
das
inc
popa
arpl
out
and
sbb
pop
mov
xor
sub
xor
jae
adc
ljmp
sbb
fwait
xchg
xor
out
jno
fildl
test
enter
adc
in
cmp
inc
add
enter
stc
unpcklps
test
add
xchg
cmp
inc
fildll
fucompp
cmpsl
leave
mov
int
dec
mov
xlat
ss
cmc
pusha
insb
outsl
mov
inc
dec
lea
cmp
or
loopne
cmp
hlt
pop
mov
mov
sahf
clc
push
adc
lds
lret
push
sahf
imul
and
mov
mov
sbb
dec
cmpsb
orb
repz
xor
ret
hlt
push
shll
jg
cmc
and
push
xchg
aam
cmp
lods
adc
insb
in
jl
lock
jl
lock
or
mov
mov
push
ljmp
push
stos
fsubl
xor
incl
adc
pop
ret
scas
stos
cmp
sub
xchg
mov
pop
mov
daa
les
push
or
nop
and
jae
pop
jecxz
lret
rolb
fisubs
insb
shl
jg
cmp
pop
ss
stos
mov
adc
pushf
push
loopne
ljmp
pop
add
xchg
aad
rolb
sbb
scas
out
and
call
xor
arpl
and
loope
das
pop
aas
jb
loop
xor
rol
pop
movsb
jae
fmuls
jl
push
cli
ret
fs
stos
inc
stos
xor
cmpsl
inc
mov
aas
dec
ja
xchg
or
or
jle
in
pop
mov
js
jecxz
test
jb
test
fdivs
and
loopne
xor
xchg
ljmp
mov
mov
inc
and
fwait
add
jp
add
adc
stos
pop
dec
das
mov
push
add
icebp
pushf
in
leave
push
rorl
mov
mov
mov
dec
lahf
xor
lret
jle
int
cmp
mov
mov
pop
mov
mov
shlb
vmread
pop
adc
sub
fisubs
cli
sub
inc
lock
push
pop
add
andb
cmp
lock
mov
cli
lcall
add
lods
pop
outsb
mov
adcl
enterw
pusha
loop
jmp
bound
aam
fists
int3
aam
mov
inc
lods
pop
cmp
cmp
das
adc
adc
cld
xlat
cli
push
rol
pop
dec
cmp
out
aas
cmpb
push
jns
pop
or
inc
ret
xor
cmc
icebp
fsts
insl
mov
push
in
pop
sbb
add
test
clc
mull
push
and
int
je
js
cmp
lds
and
inc
push
sbb
scas
sbb
mov
into
shlb
push
pop
sbb
in
aaa
jmp
mov
test
jne
jmp
push
or
jmp
ret
and
mov
and
xor
out
add
push
and
mov
ljmp
jg
sti
fs
popa
xor
or
add
popa
inc
fistps
out
push
pop
pop
in
xor
movsl
enter
jg
jmp
cmpsl
xchg
cmpsb
push
add
adc
stos
nop
cmc
test
imul
mov
cmpsl
loop
enter
push
lock
es
aaa
jg
js
or
xchg
cmp
lret
test
inc
and
loop
mov
push
adc
jg
les
cmc
sub
ret
aam
mov
jnp
and
pop
push
nop
lock
push
xchg
fs
xchg
push
pop
dec
push
and
add
push
stos
repz
test
daa
and
push
movsb
add
mov
adc
add
inc
inc
std
test
std
mov
fwait
add
inc
jae
adc
xchg
or
in
es
mov
sbb
es
pop
adcl
cld
add
xorb
mov
add
pop
pop
jb
xor
mov
xor
andl
sbb
ret
imul
daa
or
aas
jecxz
pop
icebp
stos
outsl
cmpsl
pushf
pushf
addb
dec
cmc
lods
mov
ds
lods
mov
adc
addr16
incb
leave
jne
pop
hlt
lahf
cwtl
clc
inc
ds
dec
push
sub
mov
push
or
insl
clc
cmp
add
cmp
pusha
xor
or
xor
add
pusha
mov
jecxz
jns
imul
cmc
inc
pop
rclb
aam
ss
pop
out
and
sbb
mov
add
pusha
and
add
cmc
sbbl
mov
mov
mov
xor
jp
mov
ss
add
inc
cmc
es
cmp
enter
cmp
out
lock
sub
mov
sub
pop
adc
xchg
clc
test
in
add
sbb
and
mov
lock
cli
shlb
fldl
sbb
mov
cmc
loopne
cmpsb
jbe
add
or
popa
popf
std
ss
leave
sub
js
and
mov
sbb
subb
test
icebp
lea
push
adc
out
sahf
jmp
add
mov
push
cld
repz
in
adc
pusha
sbb
xchg
or
cmc
test
jae
outsb
inc
fwait
mov
dec
in
mov
popf
sbb
dec
aaa
bound
les
cltd
inc
or
fadds
cli
dec
outsl
and
cs
mov
fidivrl
cmp
add
int
dec
add
aas
and
adc
imul
pop
inc
mov
negb
jb
push
lret
add
cli
mov
push
test
jno
mov
pop
dec
pop
cld
pop
ret
cmp
xor
mov
sbb
xchg
inc
inc
mov
out
inc
mov
sbb
pushf
lods
mov
test
push
add
sbb
inc
push
jp
lock
add
pop
jle
sahf
cmc
js
mov
mov
mov
add
dec
mov
cltd
add
xchg
jo
mov
addb
jecxz
repnz
dec
mov
ja
jl
filds
add
lcall
in
out
pop
icebp
push
ret
dec
xchg
jae
mov
sbbb
addl
cli
scas
sbb
xorb
insl
clc
xlat
pushf
mov
aam
lock
jns
dec
movsb
ja
sbb
enter
ljmp
pop
daa
es
pop
add
push
fidivl
call
mov
jns
testb
cwtl
sub
sarl
stos
xor
inc
add
mov
pop
cmp
xor
test
out
xchg
sub
shl
push
inc
push
sbb
push
xchg
nop
sahf
xchg
je
fbstp
lret
roll
lret
pop
xor
cli
push
and
in
enter
inc
or
push
push
mov
in
push
inc
fprem
jne
xchg
jo
adc
mov
fstl
nop
add
sub
mov
xor
loop
out
adc
push
push
sbb
add
int
cs
inc
cli
inc
push
dec
jge
icebp
fists
mov
mov
loope
ficomps
ja
js
pop
jg
loop
insl
cli
imul
push
push
outsb
mov
insb
inc
mov
lea
add
daa
scas
jp
lea
and
push
and
sti
inc
fbstp
nop
shll
adc
xor
inc
dec
popf
sbbb
ljmp
push
mov
nop
lea
and
shll
or
push
movsl
push
aaa
jle
push
jl
sub
sahf
out
mov
mov
jnp
inc
mov
mov
mov
ret
movsl
cmp
shrl
lret
enter
mov
sbb
xchg
add
xchg
add
mov
add
mov
daa
mov
mov
or
cmp
cwtl
sarl
xor
pop
mov
sbb
lock
inc
ja
jne
addr16
jle
push
enter
mov
and
insb
addl
and
mov
push
js
add
sbb
clc
lock
orb
cli
and
mov
jns
pushf
fcmovb
sbb
xor
jb
hlt
aas
mov
jnp
and
das
out
out
pop
popf
loope
repnz
imul
aas
and
cmp
mov
sub
lea
and
lea
mov
outsl
cmpsb
mov
and
add
fisubrl
mov
cmpsb
sub
loope
jmp
ret
ss
int3
xchg
or
nop
and
inc
and
aaa
jp
imul
loope
adc
jle
jmp
mov
cmpl
inc
lds
sbb
punpckhbw
add
add
mov
and
sti
addr16
xchg
mov
sub
test
sbb
jl
incl
lock
dec
das
fdivp
daa
mov
push
mov
in
jmp
or
and
rorl
xchg
rcrl
int
std
add
data16
leave
jmp
inc
in
and
shld
shlb
ret
shr
and
loopne
and
add
dec
mov
pop
mov
clc
dec
int3
movsl
rorl
shrb
mov
add
mov
and
push
mov
mov
fwait
nop
lret
subb
out
push
repz
push
lea
pop
out
jg
xchg
ret
mov
std
mov
repz
aam
lock
pop
push
cmp
adc
pop
test
pop
pusha
bswap
repz
jp
jle
outsb
jbe
call
ret
loop
adc
dec
testb
pusha
mov
daa
pop
cld
popf
out
jnp
inc
loop
jno
outsb
bound
test
mov
adc
add
movsb
out
and
test
push
in
dec
push
mov
add
push
clc
adc
subl
lods
cmpsl
fsubrs
test
dec
push
cmc
faddl
stos
out
enter
fadds
mov
xchg
push
fbstp
add
divl
scas
hlt
test
in
movsb
pop
clc
clc
movsl
inc
jne
mov
loope
push
mov
mov
adc
mov
aaa
cld
mov
and
ficoml
mov
ss
mov
out
mov
jb
jl
mov
sbb
push
mov
in
mov
adcl
add
pushf
mov
loopne
and
mov
sub
sbb
lcall
ds
lahf
xchg
xchg
in
mov
pop
out
mov
mov
push
and
dec
adc
adc
xchg
push
mov
or
jns
xchg
sbb
mov
call
test
mov
clc
jo
add
push
inc
rolb
popf
adc
adc
xorb
mov
ret
dec
add
xchg
cltd
fildl
sbb
pop
es
and
pushf
fwait
scas
cmp
ret
ret
and
mov
movsl
and
xchg
push
pop
cmp
inc
in
nop
pop
imul
and
mov
fwait
push
out
aad
pop
test
cmp
fcoml
or
icebp
lds
mov
nop
fadd
mov
and
nop
push
add
pop
sarb
dec
jno
mov
in
xor
mov
cld
pusha
xchg
movsb
roll
adc
jg
lcall
push
or
mov
lods
clc
jp
jp
lea
enter
cwtl
sub
movsb
cmp
mov
int3
or
jne
dec
into
sbb
or
mov
faddl
inc
mov
mov
add
dec
ret
popa
clc
stos
data16
cld
lret
lahf
add
jo
ret
ds
sbb
xchg
mov
and
sahf
in
mov
stc
dec
pop
pusha
jecxz
dec
imul
sbb
push
aas
cmc
sub
movsl
rcrl
out
mov
cli
mov
add
push
cmp
sub
popf
hlt
ljmp
inc
or
xchg
cmpsb
mov
and
stos
aad
scas
les
jmp
out
addl
mulb
sbb
push
repnz
gs
jp
push
lahf
addr16
fsubrl
push
xchg
clc
xor
imul
jg
sub
mov
mov
push
pop
cld
or
mov
inc
shrb
xor
popf
sub
xor
dec
mull
pop
fsubp
xor
dec
or
ret
push
shll
and
add
int3
leave
push
push
pop
sub
ret
stos
test
inc
fsubrs
xchg
icebp
xor
xchg
pushf
aas
nop
dec
xor
gs
das
push
dec
push
daa
dec
hlt
test
ljmp
test
sahf
xlat
and
call
dec
pop
pop
inc
js
xor
jge
aam
arpl
push
cmp
lret
call
dec
jns
insl
nop
fwait
jbe
incl
xchg
jae
ret
cmc
jo
sub
subb
fisubrs
mov
stos
jmp
in
addb
push
add
and
cmp
stos
dec
cmp
in
mov
rorb
inc
sbb
scas
fldenv
mov
pusha
clc
xchg
sbb
andps
fs
xchg
and
cld
cmp
push
inc
adc
pushf
das
cmp
dec
dec
divb
sub
lock
xor
in
aas
push
push
aam
cmp
mov
shll
pop
cs
lods
fdivl
jp
rorl
cmp
or
pop
and
cmp
vphadddq
sbb
xchg
jle
inc
xchg
gs
movsb
insl
inc
and
test
or
pop
cld
push
idivl
xor
scas
or
pop
xchg
and
sub
icebp
les
popf
scas
repnz
mov
aam
push
les
cld
aad
lret
xor
mov
adc
jno
push
cmpsl
jle
int3
pop
test
leave
mov
fnstcw
loope
lods
sub
cmpsl
dec
fiaddl
sub
inc
sbb
add
jmp
rcrl
add
sbb
push
inc
in
aaa
scas
daa
je
add
in
das
xor
cmp
paddb
and
sub
fdivrs
pop
mov
rcl
clc
lret
push
in
mov
pop
xchg
aaa
jp
jmp
pop
out
test
mov
ret
mov
aas
daa
and
mov
and
sbb
movsl
shll
rclb
repz
jo
ret
pop
std
dec
cld
dec
int3
and
ror
test
cmp
jl
fdivrs
in
ret
xor
mov
sarb
pop
mov
rorb
inc
fdivl
testl
stos
outsb
push
cmp
aaa
add
aad
and
xlat
out
cli
pop
sbb
add
call
xchg
add
out
pop
lock
hlt
ret
fldl
fs
repnz
test
loop
jbe
cmp
pusha
push
push
pop
jae
pop
repnz
dec
jp
and
mov
and
out
pusha
loop
dec
orb
pushf
rorb
sbb
add
fistpl
sub
cli
lea
nop
push
push
push
int3
add
pop
cli
push
rorb
sub
cmp
add
cli
mov
in
and
push
shrl
and
into
fistps
jge
call
pushf
add
sub
fiaddl
sbb
stos
shl
ds
mov
ss
mov
ret
popa
stos
jns
daa
push
cmp
addl
push
xor
arpl
clc
cs
mov
dec
call
add
mov
jg
rol
xor
idivl
add
inc
adc
pop
add
std
push
repnz
scas
sub
ja
pop
out
cmp
cwtl
push
cmp
pop
and
shll
lods
aam
xchg
scas
mov
push
add
and
out
fisubrl
sahf
sbb
and
js
pop
lcall
and
aad
push
andl
rclb
mov
inc
out
popf
jo
mov
jo
iret
aas
pop
cmp
xchg
mov
movb
jp
or
cmp
std
pop
inc
mov
pop
jg
call
daa
fst
pop
test
or
jle
ja
out
and
orl
add
inc
pop
cwtl
clc
xlat
mov
jg
adc
addr16
shl
pop
jae
sub
cltd
cmpsl
int
push
cmp
sbb
dec
andb
jp
adc
fdivl
xor
rorb
ret
mov
add
mov
aam
jge
jl
out
mov
lret
and
lahf
push
sti
std
or
lret
std
cmpl
xchg
adc
std
popa
daa
push
loopne
sub
push
sbb
push
or
stos
mov
setb
aaa
lahf
lcall
gs
mov
lea
xor
idivb
or
and
cld
stos
sub
ds
fnstsw
pop
pop
scas
xchg
std
and
xchg
xorl
inc
dec
aas
jge
icebp
mov
jb
std
ret
jb
cmp
std
xchg
mov
and
add
ljmp
lds
pop
cwtl
jb
push
out
mov
adc
popa
inc
rcrb
ret
nop
pusha
pop
les
adc
cmp
jecxz
push
jg
nopl
pop
inc
push
mov
divb
pop
jo
aam
dec
and
mov
loope
or
dec
bound
dec
cmp
cwtl
aad
xchg
pop
push
dec
push
mov
stc
pop
loop
mov
ds
out
push
adc
aas
push
das
push
gs
mov
dec
sbb
pop
pop
outsb
dec
cltd
jae
sbb
pop
inc
sbb
push
setbe
xor
jge
out
jb
jo
cs
dec
rolb
mov
xchg
push
or
or
xor
xor
jmp
sbb
repnz
inc
push
dec
sbb
scas
jl
inc
xor
test
pop
aaa
mov
out
xchg
pop
mov
iret
pop
push
in
loope
ret
sbb
xor
push
dec
pop
dec
jno
jecxz
cmp
mov
ljmp
iret
outsl
xchg
jae
loopne
jmp
or
push
fists
mov
jp
push
xchg
jo
add
xor
push
in
add
or
movsb
sub
test
jg
mov
rorl
sar
push
divb
scas
shlb
aam
and
and
mov
std
addb
mov
sti
popa
inc
ficomps
pusha
add
das
mov
pop
andb
insl
xchg
js
cmp
xchg
hlt
loope
inc
inc
mov
xor
add
xchg
sbb
inc
pop
adcl
test
fsubrl
mov
insb
inc
adcl
movsl
lock
dec
fidivrs
arpl
mov
or
dec
test
loopne
and
nop
ret
es
in
das
push
outsl
jnp
pop
leave
xchg
sbb
cmp
mov
or
lret
mov
cmp
mov
xchg
frstor
sbb
mov
ffree
pop
cs
xchg
pop
adc
mov
jbe
movsl
pusha
xor
dec
jg
adc
sbb
dec
adc
aam
and
rorl
fwait
pop
mov
jg
xorl
cmc
add
int
in
xor
pusha
push
cmpsb
aad
add
mov
loop
lods
mov
jmp
inc
les
aas
adc
into
insb
dec
pop
adc
xor
jae
mov
sahf
dec
inc
aam
mov
lea
pop
mov
mov
inc
shll
inc
ficompl
data16
iret
stos
popa
jle
jne
xor
jl
int
cmp
das
rol
dec
or
add
push
stc
outsb
addl
adc
sarb
inc
jbe
clc
bound
xchg
lods
std
jne
fdivs
jl
icebp
test
repz
ja
lock
sbb
cmp
mov
rcl
bound
orb
outsb
and
cmc
inc
adcl
jle
loope
or
inc
loope
cmp
roll
jnp,pn
push
jne
mov
cmp
out
push
adc
call
xorl
fs
aam
loop
fmull
rolb
and
xor
aaa
mov
outsl
mov
fistl
int
xor
test
mov
push
and
mov
push
insl
mov
push
xchg
and
mov
cli
jmp
add
push
dec
adc
push
jmp
dec
cld
data16
icebp
daa
enter
or
rorl
shlb
sarl
and
js
or
dec
pusha
mov
jg
testl
std
inc
test
mov
ds
pop
push
jns
xchg
xor
inc
and
mov
sarl
fildl
and
fidivrs
fidivs
jnp
adc
inc
pusha
int3
push
dec
inc
cli
add
jns
mov
cmc
iret
xchg
and
pusha
clc
hlt
inc
popa
sbb
sub
repnz
xchg
pop
fmuls
aas
shrb
cmp
imul
popf
push
aam
pop
xchg
outsb
hlt
popa
jne
and
add
cld
cltd
inc
aaa
cmp
push
xchg
mov
scas
and
inc
sub
adc
xchg
repz
out
stc
inc
inc
push
insb
and
mov
add
jae
dec
add
sbb
inc
jno
push
lods
int3
pand
push
and
xor
roll
or
push
pushl
dec
loop
idivb
xor
adc
icebp
pushf
add
outsb
mov
pop
bound
shrb
ljmp
mov
mov
lret
movsl
adc
adc
ss
psubd
mov
shll
jecxz
push
or
ret
adc
jns
js
mov
cmc
ds
rcll
aam
jmp
lds
mov
into
lds
push
insb
jb
cmp
lock
cmp
inc
jge
xchg
scas
mov
pop
scas
mull
mov
movsl
pshufw
inc
pop
pop
push
inc
imul
in
and
jns
mov
jge
lret
xlat
mov
cld
lahf
adc
idivl
push
mov
xchg
pushf
mov
aam
mov
and
pop
sbb
rol
jp
test
clc
xor
inc
or
aam
hlt
in
rolb
test
mov
mov
push
jns
add
ss
lahf
inc
decl
and
mov
decl
fiadds
xor
xchg
clc
mov
jg
ret
push
and
sahf
pushf
jg
push
adc
andl
stc
lea
pop
inc
sbb
into
and
in
inc
cmp
cmp
shl
jmp
sbb
pushf
push
shrb
je
aas
test
adc
push
push
cli
fists
push
popa
adc
mov
inc
fwait
pusha
inc
jo
je
loop
shlb
pop
and
xchg
and
inc
sti
decl
xor
inc
mov
mov
mov
loope
jns
cmp
sub
leave
ret
lock
sub
test
in
insl
movsb
cld
dec
call
xchg
stos
xchg
push
int3
stc
push
ds
xchg
mov
gs
std
cmp
rorl
arpl
pop
ficoml
jle
dec
iret
xchg
scas
outsl
stos
inc
fwait
jns
jp
xchg
mov
push
in
fsubrp
lcall
pop
ss
int
xchg
xor
in
fiaddl
jle
xchg
arpl
mov
fistpll
rol
xchg
add
mov
nop
jle
mov
sbb
sbb
fistps
and
and
lds
jns
fdivs
push
xchg
mov
cmc
inc
bound
cwtl
inc
mov
loopne
pop
in
or
xchg
cmp
add
cmp
dec
jbe
cmpsb
test
jg
das
jne
jecxz
aas
js
sub
and
lock
icebp
aaa
cltd
push
nop
scas
cld
imul
inc
cmp
mov
into
test
shrb
xor
ror
mov
std
push
loopne
or
jbe
lods
out
rcrl
pop
sub
push
hlt
jnp
pop
inc
mov
mov
lahf
icebp
movsb
bound
mov
loop
lods
inc
cmp
or
push
sbb
subb
rolb
inc
mov
sbb
add
inc
xlat
aad
jmp
loopne
das
ss
sbb
mov
sti
je
jge
in
cs
les
lcall
out
pusha
pop
jnp
cltd
lds
cmpsb
or
addr16
fildl
jbe
jg
into
sbb
xchg
xor
test
add
sbb
mov
xor
jle
loope
cmc
or
adc
mov
mov
mov
push
sbbb
je
sub
pop
into
jmp
or
lods
cli
and
lret
jns
mov
sti
pop
adc
test
add
xchg
cltd
dec
ret
loop
mov
mov
and
mov
mov
sti
aaa
dec
iret
ja
hlt
lea
mov
mov
jg
les
xchg
and
imul
outsl
mov
jl
mov
inc
or
rorl
mulb
test
sub
pop
xor
jo
cltd
popa
push
mov
mov
lret
orb
lock
lds
shll
repnz
cmpb
clc
ja
cmp
fistl
clc
out
hlt
mov
nop
sbb
xchg
incb
mov
pop
xor
faddl
mov
push
test
in
xchg
daa
scas
cmp
or
cmpsl
add
outsl
rcrb
testb
sbb
int
cmp
lret
and
pop
mov
decl
dec
inc
mov
mov
jmp
insl
dec
or
dec
push
dec
pop
cmpsb
test
outsl
inc
andb
jl
decl
stos
dec
mov
jge
orl
add
js
adc
pop
ljmp
inc
xor
push
hlt
pop
fcoms
aas
push
mov
cmpsb
adc
in
push
dec
jp
scas
pop
adc
and
adc
shlb
enter
clc
pop
add
push
push
cli
mov
and
inc
push
incl
shlb
shlb
pop
ret
and
xor
call
jno
cli
mov
sub
enter
sub
push
out
sub
or
push
les
popf
loopne
fisubrl
loop
mov
pop
ret
loop
jecxz
jbe
jns
in
testb
sbb
push
and
out
sbb
outsl
rclb
add
jmp
adc
cmc
mov
push
cs
xor
and
popa
and
je
pxor
pusha
test
leave
imul
data16
aas
aaa
jle
or
xlat
js
and
or
stc
pop
ret
dec
jmp
adc
mov
add
ret
and
cmp
sbb
pop
in
xor
imul
cli
scas
sub
addb
mov
inc
jmp
andl
js
push
cli
sbb
mov
fs
mov
push
sbb
cmpsb
js
inc
cltd
cmpsl
mov
and
cwtl
bound
ljmp
add
and
inc
xchg
adc
lock
pop
pop
inc
jecxz
cmp
pushf
cmp
jmp
xchg
push
and
lret
data16
and
rcrb
popf
and
dec
js
adc
rolb
ret
add
pop
mov
add
pop
push
pop
or
movsb
mov
js
inc
mov
outsl
movsb
cmc
xor
je
pop
sbb
rorl
xor
in
rolb
mov
push
xchg
mov
les
into
sub
loope
test
mov
xchg
das
push
ds
mov
xchg
mov
jae
int
ret
inc
test
shl
cmpsl
frstor
or
xchg
and
dec
das
sbbb
or
lret
push
mov
mov
rcll
jg
gs
jnp
pop
jg
and
pop
push
ds
or
pop
lock
das
cpuid
mov
jle
add
jo
mov
insb
cmp
jb
js
pop
fwait
jmp
shlb
aaa
sbb
sahf
les
arpl
and
push
fidivrs
iret
and
std
sbb
xor
pop
cmp
cmp
fbstp
jl
stc
pop
test
or
dec
mov
and
pop
and
xor
or
mov
das
sub
lret
arpl
cli
aad
jae
cltd
and
call
js
push
push
push
adc
ja
ds
pop
inc
mov
xor
insb
sar
pop
pop
push
cmp
xchg
cmp
fdivr
hlt
into
sub
pop
andb
test
or
in
inc
xchg
mov
adc
mov
ja
add
or
dec
jle
into
mov
xor
ret
les
stos
jg
fldl
inc
xchg
insl
test
mov
cltd
cmpsb
mov
inc
mov
push
ss
mov
pop
test
sbb
xchg
int3
rorl
jne
and
xor
push
ja
cwtl
lock
fwait
stos
call
push
pusha
sbb
movsl
mov
cld
dec
clc
outsl
dec
adc
fs
push
mov
adc
movsb
icebp
push
sahf
sub
sahf
push
pop
mov
movups
and
jbe
sub
jp
test
add
add
pusha
in
insl
xor
mov
orb
lds
outsl
mov
dec
ja
push
xor
cmp
and
mov
movsl
add
pop
loop
gs
imul
cli
outsl
pop
pushl
nop
or
das
cli
ja
jmp
daa
or
adc
sbbl
and
lahf
cwtl
push
lea
dec
imul
inc
jne
pop
mov
jmp
inc
cli
inc
out
sub
inc
mull
hlt
jb
mov
dec
add
xor
sbb
pop
ss
popa
sbb
aas
ljmp
inc
xchg
test
sbb
push
inc
pop
jo
pop
nop
arpl
sbb
cmp
mov
push
fdivp
sub
jo
sbb
adc
in
pop
mov
test
cld
andl
and
mov
sub
cld
push
rolb
ret
outsb
dec
push
mov
out
pop
jl
je
out
mov
xchg
add
cmc
jecxz
out
popl
inc
rolb
inc
lods
dec
std
xchg
nop
call
pop
sbb
sbb
push
pop
or
arpl
pushf
mov
mov
xchg
mov
and
sub
add
aaa
sbb
stc
xor
je
cmpsl
imul
push
jmp
iret
mov
fwait
push
mov
sub
push
sub
mov
ss
scas
addr16
xchg
ljmp
add
negb
daa
sti
lahf
loope
sub
push
push
std
popf
adc
pusha
sbb
or
loop
call
cs
mov
imul
daa
icebp
popa
mov
push
sbb
subb
xchg
add
scas
incl
dec
mov
nop
jmp
lret
xchg
jns
fidivl
pop
pop
xor
lahf
cmpsb
push
pop
stos
add
jnp
xchg
push
movsb
mov
sub
sbb
dec
ds
mov
sbb
leave
loopne
jge
cmp
sbb
inc
or
mov
or
ja
push
idiv
fisubrs
jno
lcall
add
loop
popa
add
push
negb
add
inc
push
add
incb
in
or
dec
add
outsb
test
lock
or
shll
lods
mov
add
xchg
pop
mov
pop
or
das
sti
aaa
cmp
adc
outsb
gs
xchg
mov
mov
lea
mov
xchg
std
faddp
jne
ja
pop
inc
lds
shrb
sarb
adc
fdiv
mov
lock
mov
push
lods
nop
mov
cmc
pop
gs
cs
and
outsl
mov
ljmp
adc
andl
loopne
jb
pop
lock
push
sub
sarb
mov
add
add
jne
and
pop
mov
adc
mov
ljmp
outsb
cli
daa
je
shrb
les
nop
mov
push
and
jmp
add
psadbw
sub
add
add
pop
mov
out
call
hlt
and
push
stc
dec
inc
inc
mov
cmp
pusha
and
or
dec
jg
loop
je
mov
ret
cmp
jle
adc
inc
aaa
jb
inc
jecxz
mov
and
push
mov
cmpsb
repz
xchg
push
in
nop
or
incb
mov
sbb
sahf
push
cld
cwtl
inc
mov
packssdw
push
mov
enter
add
lcall
jbe
push
adc
aaa
les
push
lods
scas
lret
adc
inc
scas
scas
clc
push
lds
pop
sbb
cmp
or
xor
add
inc
sti
out
add
inc
fsubrl
mov
xor
and
sub
inc
push
add
cmpl
sarl
cmp
xchg
lock
push
psubsw
pop
pop
and
or
adc
enter
loopne
and
jne
xor
adc
mov
pop
xchg
dec
int3
add
pusha
fdivp
sahf
icebp
fwait
movsl
pop
shll
mov
frstor
pushf
cmp
inc
dec
scas
test
pusha
insb
xorb
fidivs
test
cli
push
repnz
mov
push
and
pop
enter
mov
xor
lods
and
and
jo
scas
out
xor
ds
pop
je
xchg
cmp
push
and
xlat
push
cmpsb
xchg
xor
mov
xor
inc
mov
sbb
pop
fidivl
adc
xchg
js
inc
sub
lods
outsl
inc
add
out
pop
pop
adc
push
stos
orps
adc
or
jl
iret
aas
inc
lock
stos
int3
pmulhuw
into
inc
mov
mov
imull
xchg
mov
jno
mov
movsl
xchg
xchg
stos
call
xor
iret
inc
pop
jne
xchg
icebp
inc
add
jbe
and
mov
inc
shll
xor
mov
sbb
mov
sbb
xchg
lods
fcomp
out
inc
ficompl
sub
call
mul
mov
test
pusha
lret
mov
cmpsb
andl
pop
and
mulb
sbb
adc
add
fcom
push
xor
call
ja
scas
mov
cmp
pusha
data16
push
rorb
mov
lock
aas
sbb
js
jne
sbb
push
push
adc
xchg
and
mov
xor
pushf
nop
pop
test
fstpt
fadds
rcl
outsl
aam
pop
fisttps
pop
clc
lahf
inc
mov
insb
arpl
leave
xor
clc
push
adc
dec
cmp
sbb
mov
cwtl
sub
call
shl
xor
cmpsb
mov
shrb
lcall
xor
sub
fstpt
mov
inc
dec
jg
xchg
dec
ljmp
arpl
push
jg
call
in
stos
loopne
lahf
inc
jmp
mov
loope
pop
out
or
lods
mov
jnp
out
mov
push
shl
cmpsl
xor
add
aad
sub
add
or
pop
pop
mov
or
shl
inc
test
xor
push
std
test
and
ljmp
pusha
pushf
adc
push
adc
test
or
fwait
jmp
and
andl
add
jge
sub
or
lock
cltd
stos
or
popf
xor
inc
jg
dec
in
mov
enter
outsl
fcmove
popa
lret
popa
xchg
mov
loopne
data16
mov
jl
mov
or
js
sbb
aas
sub
sar
fucomp
xchg
fwait
test
dec
cltd
xchg
out
loop
cld
mov
adc
rcrb
mov
nop
js
dec
fcompl
scas
push
add
lds
inc
push
xchg
fs
popa
jmp
pushf
cmpsb
fcomp
and
fcomps
xor
shlb
push
xchg
lock
jl
inc
daa
dec
adc
ja
add
es
sub
mov
pop
add
sbb
lea
mov
cmpl
or
mov
cld
mov
pop
sub
jb
xchg
ret
aas
dec
push
idivl
sub
je
add
mov
dec
adc
cmpsl
add
pop
push
pop
add
fxam
sub
mov
or
fcoml
repnz
rorb
cmp
aad
mov
sbb
sub
aam
jo
test
push
popa
xor
mov
out
mov
pop
fidivrs
and
lock
xchg
je
sbb
mov
xchg
decl
pop
sbb
nop
shll
ret
mov
mov
test
and
sbb
inc
sahf
push
xchg
push
mov
add
xor
dec
mov
adc
je
mov
or
inc
dec
ret
filds
jp
sbb
sbb
cmc
inc
jl
push
or
cli
pop
andb
xchg
xor
ret
dec
arpl
jge
add
pusha
sub
jecxz
rorb
int
xchg
inc
mov
pop
jl
inc
jnp
pushf
cs
cmpsb
ss
or
cli
int
push
xor
in
xor
out
cmp
ss
and
pop
jecxz
mov
mov
jne
dec
push
and
outsl
repz
mov
sub
inc
mov
pop
jl
dec
xchg
cmp
es
subb
out
dec
jl
cmpl
sbb
push
rcrb
cli
mov
add
pop
inc
push
ss
or
mov
mov
push
in
xor
mov
call
xor
push
aas
and
cmc
insl
sarl
and
arpl
mov
inc
movsb
push
push
mov
ret
test
jl
mov
mov
hlt
and
in
mov
or
ret
xchg
push
jl
dec
mov
or
mov
inc
dec
push
call
push
sub
pop
push
lds
pop
xchg
fwait
and
sub
hlt
lcall
xchg
push
sub
sub
bound
fwait
aas
les
outsb
outsb
gs
jne
out
xchg
ret
cmpl
or
add
add
xorb
incl
lock
adc
shr
repz
cmc
push
in
subb
pushf
xlat
mov
cmp
cli
xchg
push
add
gs
mov
xchg
mov
bound
pusha
jl
fimull
sbb
cmp
adc
mov
leave
inc
sub
cmp
add
ret
jbe
or
fstl
adc
mov
ja
hlt
ficoms
sbb
inc
mov
lahf
pop
add
das
push
xor
fidivl
les
mov
cli
hlt
in
ss
fildll
psubusb
arpl
inc
push
movsl
add
xor
rcl
pop
xchg
push
mov
cwtl
ljmp
add
orb
jns
adc
or
xchg
push
outsl
dec
dec
insw
mov
cli
pop
mov
xor
mov
and
pusha
fdiv
and
xchg
out
pop
inc
nop
rclb
clc
rcl
push
adc
inc
in
lret
xchg
aam
ds
movsb
scas
cmp
dec
lahf
pop
mov
mov
add
fwait
pop
and
push
sbb
mov
add
cmpsb
out
std
xchg
xchg
das
leave
cmp
push
inc
mov
sbbl
xchg
push
lret
sbb
sub
sbb
cmp
adc
sbb
or
andl
sarb
jle
mov
lea
jp
int3
std
sbb
dec
push
loop
mov
mov
daa
jmp
xor
repz
les
mov
shrb
pop
jge
repz
nop
bound
mov
or
mov
imul
jmp
pop
icebp
jno
fwait
or
jl
mov
sub
jp
pop
inc
aam
nop
mov
popa
jo
faddl
cwtl
aas
xor
fimuls
mulb
cmp
mov
out
std
and
inc
mov
dec
ret
adc
mov
hlt
cmp
jg
dec
dec
pop
shl
sub
loop
popa
aaa
lret
cld
sub
les
xor
or
adc
and
shl
cmpsb
add
in
idiv
pcmpgtb
xor
cltd
mov
push
cmc
add
call
rorb
and
adc
mov
jb
push
mov
cmp
scas
mov
ror
fidivrl
mov
out
cmc
wbinvd
pop
xchg
xchg
cltd
loop
clc
xchg
xor
shll
push
inc
cmpsl
fldcw
and
mov
cmp
or
lock
push
int
adc
push
sbb
rclb
ljmp
clc
ds
jo
ljmp
mov
pop
mov
push
and
enter
mov
jne
jne
mov
push
outsl
gs
or
movsl
inc
lds
add
adc
adc
out
and
sub
mov
inc
mov
cmpsl
inc
mov
pop
fnstcw
pop
push
lds
fisubrs
cmp
push
fidivrl
repz
loope
out
jo
lock
xor
lahf
jecxz
outsl
decl
hlt
dec
or
sbb
stos
repz
or
dec
jecxz
sahf
in
insb
addr16
dec
pop
scas
mov
xchg
outsb
sarb
ret
daa
lods
int3
negb
or
jae
lock
push
inc
orb
push
out
movsb
push
mov
jle
xor
add
mov
mov
and
in
cld
push
inc
ss
stc
mov
decb
jp
sbbb
in
je
inc
andb
loop
mov
cs
xor
and
ljmp
inc
sub
fstl
cmp
lahf
dec
or
mov
xchg
mov
jmp
cmp
stc
cwtl
movsb
es
cmp
pop
adc
daa
mov
xor
rol
call
call
push
cli
jp
or
inc
or
mov
mov
mov
fcmovu
lods
adc
fs
inc
gs
dec
jo
jp
and
icebp
pusha
cmpsb
lods
test
dec
decl
jmp
xchg
jo
sbb
push
movsb
imul
sub
push
sbb
sub
jne
je
and
xchg
push
inc
adc
mov
inc
jmp
add
lea
pop
es
adc
pop
dec
out
aam
mov
or
out
fistpll
gs
dec
les
loopne
cmp
hlt
out
cli
imul
cs
push
mov
xchg
fidivrs
data16
test
push
jo
jp
mov
add
xlat
sbb
push
outsl
pushf
les
xchg
lods
jg
ret
mov
or
sub
fs
ret
rolb
icebp
cmp
and
ds
in
outsb
test
jg
fs
sbb
mov
pusha
cs
daa
push
insl
and
shl
rolb
insl
sbb
jp
xchg
sbb
xchg
xor
pop
adc
imull
je
jns
sbb
adc
pusha
mov
pop
jo
jecxz
cli
loopne
sub
fidivl
pop
push
push
add
sub
cmp
jle
std
gs
ficoml
push
xor
sub
out
dec
inc
mov
inc
stos
xrelease
cld
push
aad
stos
in
insb
inc
pop
call
mov
or
mov
push
mov
nop
jge
test
insl
mov
rcrb
das
and
mov
dec
and
mov
ds
mov
adc
das
hlt
cmp
xchg
aam
dec
in
jo
cltd
xor
mov
aam
push
scas
loope
scas
or
sub
pop
adc
or
sbb
fsubs
cmp
sub
pusha
add
test
loop
aam
inc
mov
insl
mov
rcrb
push
fsubrp
sbb
inc
inc
clc
mov
shlb
movsb
aam
sarl
push
sti
xchg
cltd
jo
mov
pop
imul
push
scas
fadd
mov
mov
jno
inc
or
mov
xlat
lcall
sub
fsubr
mov
repnz
pop
lahf
lcall
pop
adc
dec
out
adc
sub
fadd
pop
loop
push
or
ds
sbb
cld
lcall
pushf
dec
inc
xlat
mov
subb
jo
cmpb
into
mov
push
fbld
mov
inc
sub
outsl
ret
adc
imul
push
or
sub
ffree
pop
push
lods
call
mov
dec
jg
push
shlb
and
les
repnz
bound
leave
ret
dec
push
ds
mov
add
adc
pop
lods
xchg
loop
adc
into
inc
sbb
outsl
pop
inc
mov
pop
stos
push
cmc
adc
xor
enter
arpl
loopne
or
ds
inc
and
or
and
cwtl
and
in
xchg
xchg
jl
sarb
testl
xorl
dec
test
call
fidivrl
clc
pop
notb
mov
cmp
jge
loop
pop
xor
inc
cmp
js
sub
sbb
pop
xchg
loopne
jb
cltd
mov
add
and
pop
inc
daa
testb
mov
inc
pushf
jno
inc
pop
push
lds
pop
jle
cmpsl
push
jmp
adc
and
imul
loope
adc
dec
int
push
hlt
push
jl
into
push
loop
xchg
pushf
ret
jle
ljmp
lcall
inc
loopne
mov
fcomps
test
xor
mov
jecxz
ds
push
cmp
dec
pop
push
mov
dec
js
or
xlat
loopne
xchg
add
adc
push
mov
add
lea
lcall
jp
shll
adcb
or
push
push
outsb
in
jns
or
cmp
pop
andl
mov
lahf
int3
cmc
adc
push
cli
ret
xchg
sub
adc
adc
push
js
inc
add
imul
lods
jne
aas
push
mov
cmp
xchg
or
mov
les
cli
lahf
movsb
dec
loope
xlat
mov
loopne
loop
sarb
out
sbb
add
addl
add
and
fdivrs
adc
loop
pop
pop
jae
shll
and
push
mov
sbb
sbb
flds
add
add
sbb
push
inc
xor
int
int3
cmp
scas
pop
ficoml
andl
mov
sub
jo
lock
sbb
dec
inc
and
adc
xor
or
lods
imul
adc
aaa
jbe
or
dec
mov
add
repz
mov
mov
fmul
mov
xor
mov
jecxz
cld
add
sbb
and
add
adc
popf
ds
cmp
decl
test
inc
add
les
repnz
int
test
dec
push
call
mov
pop
jae
xchg
mov
aas
movsb
lods
push
adc
ja
ja
pop
loop
stos
shll
ds
pop
rclb
loop
xchg
sbb
jbe
lret
mov
push
jns
or
mov
out
fsubl
outsl
popf
or
xchg
push
mov
cli
lea
jo
hlt
push
arpl
adc
pop
clc
mov
jno
add
scas
mov
xorb
lods
sbb
lods
popf
adc
sbb
flds
mov
pop
loop
dec
dec
sbb
pop
daa
or
out
dec
std
insb
jmp
loope
lock
ret
cltd
bound
pop
out
sbb
push
pop
add
shll
and
cmp
sub
adc
cmp
sbb
pop
xchg
or
push
in
cli
cmp
sbb
imul
adc
iret
jnp
jle
mov
inc
jo
pop
cmp
test
scas
add
imul
cld
aaa
ret
es
into
mov
add
std
mov
test
pop
ds
jl
imul
push
fldenv
or
into
xchg
xor
sub
dec
pusha
jmp
and
outsl
mov
clc
lods
out
mov
mov
jge
in
mov
cmp
mov
rclb
xor
lcall
imul
enter
xchg
shlb
std
mov
jne
mov
testb
cmp
lds
cwtl
xchg
lock
rorl
test
stos
xorb
or
mov
cmp
jbe
xlat
sbb
popf
push
mov
xchg
andb
iret
mov
jno
dec
push
fwait
and
cli
cmc
add
mov
pop
pop
cli
rorb
adc
xlat
xchg
jo
jb
mov
jnp
mov
cltd
ret
or
std
ror
imul
push
je
out
movzbl
shlb
out
mov
data16
clc
icebp
or
iret
clc
loop
sarl
cmpsb
mov
push
stos
rcrl
mov
cmp
jo
les
adc
adc
js
movsb
call
in
test
ljmp
xor
mov
icebp
sbb
out
inc
ja
xchg
loop
cmpsl
or
mov
mov
dec
adc
sub
ja
sub
and
xchg
cltd
lock
test
std
xlat
cmc
stos
xor
cld
mov
add
pop
ds
arpl
int
lock
inc
cmp
movsl
jno
insl
imul
sbb
or
or
adc
shlb
xchg
sub
jns
outsb
inc
test
clc
and
sbb
stc
lds
mov
push
into
push
push
jge
loop
cmp
cld
sarl
lret
jb
test
pop
arpl
inc
inc
fldl
mov
test
xchg
push
dec
call
nop
ret
xor
add
jp
stos
cmpsb
jl
push
and
sbb
aaa
xor
dec
push
in
hlt
cmpsl
cmpsb
bound
cmc
or
dec
jmp
or
pop
sbb
jae
rol
aaa
push
mov
mov
mov
dec
mov
or
add
inc
inc
repnz
movsl
xor
adc
out
ljmp
cmpsl
sub
call
xchg
fsubrs
mov
clc
scas
mov
adc
cmp
test
fwait
popa
mov
or
or
pop
testb
push
in
adc
cld
bound
lcall
mov
test
cwtl
or
leave
pop
jno
out
cwtl
lock
xlat
jg
inc
cwtl
dec
push
or
jle
scas
cmp
call
xchg
cmp
ret
mov
mov
test
xchg
inc
ret
mov
jo
inc
lcall
jle
mov
mov
xchg
xchg
popf
test
push
lods
sub
popa
movsb
pop
scas
cmpb
xor
push
cmpsl
div
sbb
es
sub
cmp
fdivrp
in
bound
in
lock
cmp
cli
mov
addl
xchg
in
adc
ret
mov
cmp
pop
outsb
pop
adc
cmp
sbb
pop
rcll
mov
pushf
adc
mov
in
mov
xor
addl
xchg
inc
fisttpll
xlat
rclb
xchg
mov
dec
fiaddl
mov
sub
xchg
add
ret
shrl
in
push
in
leave
xchg
push
sahf
icebp
adc
stc
ffreep
pushf
xor
ficompl
ja
inc
mov
or
lret
add
lea
nop
scas
call
adc
mov
arpl
pop
push
clc
adc
rorb
mov
call
call
push
ret
addr16
lds
daa
loopne
mov
mov
cmp
test
xor
sahf
inc
fs
stos
inc
es
in
mov
aam
jmp
inc
push
jmp
mov
arpl
jmp
sbbb
sbb
mov
dec
lods
or
mov
xchg
xchg
dec
lret
mov
mov
test
jb
rclw
sub
fists
rolb
je
pop
cmp
mov
insl
mull
xchg
and
int
mov
clc
push
fidivrl
xchg
out
imul
cmp
xchg
xlat
jo
mov
iret
mov
movl
popa
dec
cmpsb
fdivrl
jb
jns
cmp
loopne
add
mov
sbb
xchg
pop
pusha
movsb
xor
dec
sbb
jo
dec
sbb
js
movsb
mov
jns
je
lahf
inc
dec
lods
push
mov
xor
pop
arpl
sbb
pop
adc
in
xlat
jo
clc
js
inc
push
les
mov
mov
adc
mov
aam
inc
popl
jge
loope
jp
cmp
dec
mov
xor
ja
lahf
pop
jge
push
pop
mov
mov
add
fsubrl
jmp
push
test
daa
add
pusha
sub
loopne
test
push
adc
pop
clc
loope
fbld
aas
and
cmp
fcompl
sub
jle
pop
mov
stos
inc
jne
and
adc
mov
movsb
xchg
aam
pop
or
mov
and
lods
pop
mov
sub
jl
pop
mov
leave
sbbl
and
adc
ds
icebp
sub
inc
dec
pop
iret
cmpsb
or
lock
jbe
mov
call
mov
jo
orb
and
inc
imul
aad
outsl
xor
jae
and
out
sub
ret
psrld
lcall
clc
rcll
cmp
and
pop
dec
sahf
imul
inc
lret
push
mov
or
notb
mov
mov
add
push
in
fistpll
fnstsw
das
mov
js
repz
jnp
jbe
cmp
dec
lds
leave
inc
and
mov
xor
dec
inc
adc
push
push
movsl
popa
push
das
push
clc
xorl
test
pop
loope
cmpsl
pop
cmpsb
mov
in
sbb
imul
clc
mov
cmp
inc
and
loop
push
add
jl
cmp
shl
cmpsl
push
xor
sub
jle
or
or
push
or
or
sbb
or
cli
sahf
mov
lods
sub
add
lret
lock
inc
scas
pop
xor
xor
cmp
push
iret
adc
loopne
mov
mov
sbb
push
fsubrl
inc
inc
mov
pop
lock
idivl
dec
jmp
fidivrl
pop
hlt
lds
jl
dec
insb
popa
or
test
mov
push
add
jns
xchg
std
push
sbb
mov
sti
stos
adc
jbe
neg
or
hlt
push
sbb
jns
out
es
sarb
imul
add
xchg
testl
add
dec
nop
ret
adcl
mov
push
test
shr
clc
lock
bound
stos
mov
adc
mov
outsb
ss
push
mov
gs
cmp
push
repnz
add
xor
lret
loop
ret
cmp
test
stc
inc
or
pop
jbe
jb
add
or
cltd
cmp
shll
push
or
dec
je
aas
ret
test
mov
in
fldl
rclb
inc
xor
mov
lcall
outsl
mov
pop
imulb
pop
add
mov
add
repnz
mov
jbe
inc
push
fisubl
xchg
xchg
in
mov
insl
cmpsl
mov
mov
clc
addb
jns
cmc
out
xchg
pushf
pop
enter
sub
and
add
andb
dec
mov
je
cltd
outsb
lods
jecxz
sub
jl
sub
rclb
mov
and
roll
dec
push
adc
out
mov
push
call
clc
mov
mov
fld
sbb
pop
lea
movsl
pop
sbb
adc
sbb
scas
mov
pop
lods
cld
jmp
movsl
add
les
addr16
inc
mov
ret
lods
xchg
rolb
outsl
sti
shrl
js
mov
or
push
les
hlt
inc
mov
int
xor
inc
das
jns
imul
adc
mov
push
mov
sbb
ret
adc
pusha
fsubrs
ds
mov
jp
push
aam
or
add
ljmp
dec
cmp
subb
mov
shll
mov
xor
lods
jecxz
stc
or
adc
cmpsl
arpl
and
or
call
lret
pop
add
xchg
loopne
or
jecxz
imul
xor
arpl
sub
roll
xchg
cltd
rol
fcoms
xchg
mov
arpl
mov
sahf
add
lcall
hlt
adcb
in
imul
clc
inc
daa
fldcw
jl
scas
in
out
cmc
or
aas
sbb
aas
jl
iret
enter
and
adc
shll
mov
mov
and
cmpsl
int3
testl
push
sbb
push
es
dec
daa
jbe
hlt
xorl
cltd
mov
mov
push
jns
sub
xchg
inc
pop
adc
aaa
pushf
sbb
add
push
addl
push
xor
xlat
pop
std
shl
test
jmp
adcb
mov
xchg
subl
lods
push
paddw
sub
dec
cli
lds
or
sti
in
aad
mov
aad
or
stc
push
mov
or
push
xchg
jo
sbb
or
cmp
stos
js
xchg
xor
scas
stc
out
push
xor
xchg
cmp
mov
fmul
ret
inc
in
lods
mov
je
sbb
push
xchg
add
mov
andb
lret
mov
mov
add
stc
push
cmp
ss
cmpl
andb
cmc
or
rorb
mov
cli
add
in
fmul
or
cwtl
mov
test
orl
mov
repz
mov
sub
cmp
cmc
out
jnp
mov
jb
or
xchg
mov
les
mov
xchg
cmpb
mov
mov
cld
push
xchg
clc
push
insb
loope
les
mov
in
lret
shll
fs
adc
dec
lods
xchg
jecxz
add
sbb
in
jbe
or
std
jae
in
cmp
bound
xchg
aaa
adc
jns
popf
dec
mov
scas
mov
mov
fwait
mov
adc
popa
jecxz
aam
adc
sbb
sbb
jb
icebp
fstl
adc
gs
adc
mov
cmpsb
dec
mov
push
adc
sahf
stos
add
iret
punpckhdq
repz
ljmp
sysret
mov
xchg
pop
sbb
jmp
jne
icebp
pop
cmpsb
pminsw
pop
add
sbbl
orb
call
scas
dec
xchg
xor
rclb
mov
ss
rol
inc
dec
gs
aam
clc
cmpsl
sub
jl
sbb
sub
ds
xor
out
xlat
shrl
jnp
inc
mov
dec
aas
icebp
insb
movsl
and
adc
and
addl
jno
push
adc
sub
loop
pop
shl
mov
cltd
fisttpl
shr
ss
cld
lretw
adc
test
negb
testl
sbb
xchg
push
movsl
enter
cmpsb
sbb
test
push
sub
dec
mov
xchg
sbb
inc
js
in
xor
in
jg
aam
arpl
fldenv
jmp
mov
insl
inc
stos
and
pusha
sbb
pop
jno
add
int3
popf
pop
mov
push
xlat
arpl
pop
arpl
rcrl
mov
int
stos
mov
jno
pop
adc
icebp
mov
repnz
jp
inc
loope
sbb
das
xchg
cld
inc
rcrb
pop
xor
lods
push
sbb
xchg
xchg
or
fsubs
cmp
pop
in
or
out
mov
push
adc
jg
pop
stc
cmp
out
and
ret
mov
pop
mov
cltd
pop
push
daa
xchg
mov
cs
dec
call
shl
add
pop
inc
pop
sbb
call
js
and
mov
loope
in
outsb
push
adc
aad
sub
dec
pushf
inc
add
jo
or
sbb
fs
jmp
flds
and
push
or
fs
call
dec
pusha
adc
in
aam
sbb
arpl
in
and
jne
scas
sbb
mov
dec
test
aas
jno
std
cmp
cmp
mov
daa
imul
sbb
movsb
jno
xchg
sub
scas
jae
enter
adc
dec
shll
lcall
jbe
ret
out
call
xchg
adc
jo
mov
movsl
pop
mov
xor
sbb
jmp
movsb
xchg
mov
cmp
and
inc
leave
mov
cmpsl
loop
sbb
lds
daa
push
dec
icebp
jae
mov
test
lcall
push
xlat
sub
xchg
push
movsl
add
cmc
out
push
dec
daa
bound
scas
mov
addl
cs
cmp
bound
sbb
mov
pop
sbb
push
mov
movsb
adc
test
pop
xor
inc
test
jle
add
mov
sbb
pop
das
pop
push
pop
or
cmp
sub
mov
add
jl
scas
addl
out
inc
push
je
jb
mov
cmpsb
xor
stos
inc
clc
push
std
les
fidivl
shl
cmpsl
push
jne
mov
push
clc
mov
int
inc
xchg
popf
push
mov
jo
add
orl
push
push
pop
je
out
sbb
inc
add
ret
aad
jg
lds
test
push
or
xchg
pop
dec
sub
xchg
je
push
sahf
mov
inc
lea
shl
sarb
sub
jge
sti
xchg
gs
lds
sub
bound
mov
dec
shll
jl
iret
pop
test
cmp
inc
and
inc
pop
cli
add
rclb
movsb
ret
jo
jo
mov
pusha
dec
xchg
test
arpl
or
push
dec
pop
mov
pop
cltd
push
xchg
js
or
pop
loop
pop
addr16
xor
stos
in
outsb
arpl
stos
pop
mov
ljmp
test
test
jmp
push
cmpsl
roll
into
scas
add
push
mov
sub
cmpl
adc
inc
inc
pop
mov
sahf
call
pop
es
jp
push
imul
or
subb
lods
test
xlat
jb
out
imul
lea
cmp
and
lods
fildl
xchg
loope
sub
rcll
inc
adc
fsubs
ljmp
ja
testb
hlt
cld
jae
roll
push
orl
popa
push
mov
fst
dec
adc
insl
outsb
lret
xchg
sbbb
into
aas
dec
jno
sahf
jnp
inc
cltd
gs
add
enter
nop
shrl
sub
cmpsb
inc
rcr
test
sbb
mov
jo
das
fadds
mov
xchg
lahf
gs
sub
aaa
loopne
iret
push
popw
inc
outsl
pop
out
or
mov
lock
jnp
pusha
cmp
lahf
aas
and
fcomip
enter
lock
adc
in
xor
rcl
das
mov
daa
mov
jg
jo
sti
call
cmpsb
or
and
cmc
movsb
cli
or
fdivp
mov
testb
rorl
pop
inc
xor
rcrb
leave
mov
js
mov
cmp
xchg
idivb
cwtl
pop
sub
xchg
inc
mov
les
mov
fldt
dec
hlt
loop
jnp
adc
mov
inc
or
sahf
fbstp
arpl
jmp
clc
push
mov
mov
sbb
push
repz
out
mov
bswap
push
mov
and
rcl
in
xchg
xchg
push
add
adc
fidivl
inc
call
xor
push
sbb
pop
in
addl
add
out
ficoms
fists
insl
or
mov
call
jb
xor
frstor
aas
add
aam
sub
mov
adc
jae
cmpsl
xlat
sub
or
inc
test
pop
cld
scas
std
cmp
loopne
mov
and
mov
add
and
add
cmpsb
rolb
pop
std
adc
jae
cltd
push
loope
mov
jmp
sbb
cmp
sub
and
xlat
daa
mov
mov
out
shl
rcll
nop
pop
mov
mov
pushf
push
jno
je
mov
push
cmp
pop
test
fisttps
je
cmpsl
cld
push
fcmovbe
int
sbbl
mov
test
inc
jo
pop
fwait
xor
push
lods
xchg
xor
outsl
nop
push
lea
xor
cmp
adc
mov
int3
jo
test
pop
ret
push
pop
sgdtl
mull
add
dec
or
aam
and
push
jge
and
daa
ljmp
imul
mov
mov
rorb
mov
cmp
mov
aaa
repz
and
push
jnp
loop
mov
orl
and
cmp
adcb
mov
inc
andl
push
into
jb
popa
dec
aas
aaa
xor
sbb
rclb
pop
pop
cmp
mov
mov
sarl
cmp
shlb
les
cli
bound
scas
add
cmp
push
idivb
push
sbb
cmp
mov
cltd
idivl
push
out
mov
xchg
or
add
in
cld
lahf
pusha
jo
cmpsb
inc
sub
add
and
mov
jbe
mov
add
inc
jmp
insb
push
jle
stc
or
xchg
add
jno
bound
imul
cmpsb
inc
mov
cmpsl
add
popf
add
popa
scas
pop
data16
sar
or
mov
popf
pop
aam
stos
jmp
add
mov
insb
mov
dec
dec
dec
sbb
and
aad
adc
cmc
mov
test
push
mov
xor
or
hlt
push
ljmp
dec
jge
addr16
mov
add
add
cmpsl
push
add
push
sub
out
stos
add
sub
imul
lds
addl
pop
in
and
ret
test
mov
sti
sbb
daa
mov
xchg
jle
sub
xor
lods
xchg
dec
cmpsb
mov
or
cltd
mov
addr16
jns
pop
icebp
xor
loope
out
mov
gs
push
hlt
inc
sbb
mov
negl
call
ret
sub
sub
fistpll
aas
adcb
mov
imul
shrb
cmp
jbe
xor
addr16
jg
daa
daa
stos
inc
pusha
lds
jae
test
je
stc
sub
mov
nop
mov
push
fs
cmp
aam
shrb
mov
mov
scas
cmp
jae
adc
mov
xchg
or
hlt
ljmp
dec
or
push
lcall
push
pop
arpl
sahf
mov
jns
and
xor
or
ds
lcall
mov
outsl
cmp
jbe
adc
stos
xorb
jae
xchg
in
fcompl
adc
iret
push
sbb
inc
les
scas
loop
or
jg
enter
andl
xchg
aaa
or
lcall
and
test
adc
pop
xchg
aad
sub
push
dec
cmp
shrb
mov
and
ror
test
jecxz
xor
dec
adcb
test
mov
xchg
pusha
and
fadds
sbb
push
fwait
adc
push
imul
data16
xor
xlat
movsl
jbe
fisubrs
jmp
push
mov
mov
or
rorb
jne
push
inc
cmp
outsl
insb
jecxz
push
mov
int
test
out
leave
int3
sbb
jo
fwait
loopne
jecxz
aad
repnz
pop
into
push
popa
lods
pop
cmp
rcrl
cmp
outsl
adc
loope
lahf
push
xorl
jno
adc
push
mov
mov
and
pshufw
jbe
ja
push
xor
ss
xor
xor
pusha
cmp
jmp
xchg
incl
je
push
push
mov
jecxz
jecxz
mov
mov
lock
imul
xchg
sbb
jns
xchg
std
pushf
loopne
js
std
xchg
ret
add
std
inc
mov
sbb
scas
jmp
ror
jnp
pop
adc
sub
mov
je
mov
lods
pusha
addr16
cmp
js
jae
shl
add
or
sub
fidivs
jp
cmp
mov
shlb
setl
push
jbe
pop
add
inc
outsb
js
scas
mov
cmpsb
imul
hlt
mov
scas
fstpl
sub
loop
mov
push
or
adc
aam
sbb
adc
dec
imul
adc
add
data16
jmp
dec
lret
sbb
scas
jne
cli
xchg
shlb
jns
popa
and
lods
aad
rorl
pop
mov
inc
out
imul
test
mov
in
cltd
push
jne
imul
stc
fxch
icebp
push
add
in
mov
cld
push
dec
or
sbb
into
clc
ret
aas
xchg
lea
push
loope
lahf
mov
shlb
mov
loopne
in
push
jnp
mov
push
xor
movsb
jecxz
jns
loopne
movsb
shrb
pop
cltd
push
ss
sbb
add
lret
pop
imul
loope
or
fsubrs
lds
mov
std
dec
push
jge
push
lcall
xchg
cmp
or
sub
inc
xor
push
cmc
adc
push
or
jns
shlb
andl
inc
pop
cwtl
sub
jb
pushf
cmpsb
push
call
mov
mov
jns
jnp
lret
and
loop
sbb
mov
adc
or
jg
iret
faddl
in
out
add
in
inc
testb
mov
cld
sbb
pop
xlat
nop
daa
popa
sub
gs
add
xchg
fidivrs
lcall
push
imul
or
filds
aad
dec
mull
xchg
adc
mov
xlat
mov
imul
add
lea
push
dec
mov
adc
test
add
and
and
roll
cmp
push
add
xor
and
or
mov
and
cmpsb
aas
ret
insb
test
mov
movsb
add
cltd
add
pop
sbbb
mov
in
ja
test
sahf
or
aaa
mov
dec
or
loopne
add
popf
jp
pop
dec
test
outsb
add
add
cmp
mov
fbld
stos
nop
fnsave
mov
pushf
mov
cmp
ss
jmp
lds
iret
mov
push
add
stc
xchg
sub
adcl
in
cmp
push
sub
and
add
jg
and
push
repz
outsl
inc
fcoml
ljmp
push
loopne
stos
mov
jo
pop
or
jp
rclb
xor
pop
icebp
or
stc
pop
lahf
add
or
add
in
inc
dec
mov
js
or
popa
aad
imul
mov
scas
in
clc
adc
mov
sarl
adc
ljmp
test
test
xchg
add
and
jmp
mov
test
js
fisubl
sbb
mov
icebp
lcall
test
icebp
out
xchg
sub
data16
dec
cli
fstl
sub
mov
popf
inc
xorb
mov
aas
adc
imul
movsl
scas
dec
or
lock
mov
incl
loop
nop
stc
pop
xchg
or
inc
dec
aam
xchg
sub
stos
aaa
cmp
mov
push
push
daa
ret
and
pop
xchg
add
xor
rcrl
mov
outsl
mov
test
pop
scas
psubb
xor
pop
mov
xor
lock
or
mov
pop
inc
sbb
add
pop
mov
lock
mov
cld
inc
stc
mov
mov
mov
fadd
leave
test
cltd
fwait
fwait
fwait
dec
xchg
sbb
ficoms
dec
lock
rorb
dec
mov
mov
push
fcomip
pop
sub
call
fadds
rolb
mov
mov
lcall
fsubs
lahf
mov
hlt
popa
loope
popa
in
pop
adc
ss
mov
hlt
fstpt
mov
push
add
jno
jmp
jmp
pop
mov
or
jne
aas
loope
pop
insl
or
pop
fstl
std
add
inc
cmc
jb
jp
or
push
xor
ds
das
mov
loopne
mov
in
add
clc
inc
clc
push
xchg
rolb
xchg
test
cmp
dec
out
and
add
mov
fisubs
lea
mov
sti
stos
xor
jnp
jnp
fimuls
lods
adc
jecxz
adc
xor
cs
std
push
jb
and
jo
in
inc
mov
mov
fcmove
dec
fisubl
in
or
pop
add
mov
pop
adc
pop
shll
out
lods
add
ss
and
es
hlt
push
jnp
insb
mov
pop
sbb
andb
idiv
pushl
mov
lcall
aaa
out
fimull
fmull
ret
lods
mov
jmp
shlb
lret
jbe
je
mov
jno
pop
out
adc
scas
xchg
mov
jae
sub
pop
jle
xchg
xchg
push
sub
adc
dec
loopne
push
insb
rcl
repz
and
movsl
pop
sub
das
cli
sbb
sub
rorb
mov
cmp
or
test
and
xor
mov
push
test
test
int
mov
cs
jl
jl
rolb
mov
inc
inc
jae
les
inc
and
pushl
jp
in
or
inc
dec
sarb
pop
pop
push
insb
sahf
imul
rcr
xor
popa
mov
push
repnz
lea
push
sbbb
pop
mov
add
in
adc
push
inc
or
and
mov
fs
xlat
fdivp
inc
push
lret
out
test
test
cli
jo
xchg
cld
and
mull
ja
add
cs
shl
lahf
divl
pusha
add
inc
cld
sti
mov
sarb
nop
cltd
push
rolb
orl
out
jl
sub
sbb
test
icebp
dec
inc
sbb
inc
jns
lret
outsb
js
jae
rorb
ds
idivl
enter
movsb
xchg
mov
sbb
cmp
jl
pop
sub
inc
adc
mov
pop
lret
jecxz
stc
xor
and
rolb
ljmp
bound
adc
push
enter
aaa
movsb
ja
lods
sbb
arpl
mov
inc
or
inc
sbb
and
sub
data16
cltd
div
jge
inc
stos
int
iret
cmp
sbb
cmp
jo
faddl
stc
es
mov
ja
stos
and
je
ret
ret
jl
push
dec
les
mov
cmp
inc
std
and
loop
sbb
fdiv
dec
cli
hlt
stc
adc
mov
sub
adc
or
sub
jno
inc
sbb
mov
shlb
ja
rclb
inc
push
pop
ss
call
mov
push
cmp
rorb
mov
out
sbb
jp
push
and
movsl
add
adcl
add
mov
push
rcll
push
sub
add
pushw
das
add
cmp
jle
orb
xorl
dec
mov
into
cmp
fidivrs
out
adc
cmp
call
sbb
lock
dec
add
sub
sub
js
sbbl
outsl
sarl
sbb
cltd
imul
cmpsl
jge
push
nop
push
add
or
xchg
in
in
pop
dec
loopne
cmp
rorl
scas
push
jmp
inc
outsb
push
lcall
inc
push
push
push
fldenv
lahf
orl
xlat
ljmp
ret
or
or
ret
pushf
ds
and
cwtl
repz
dec
icebp
cmp
and
imul
push
sub
int
mov
adc
add
repnz
sub
jle
nop
aam
loop
sbb
lahf
push
xchg
adc
add
pop
cmc
mov
stos
sbb
mov
jle
adc
sub
notb
adc
mov
cli
cmp
loopne
ljmp
xchg
pushl
subb
out
lret
push
lahf
push
into
inc
scas
xor
hlt
mov
and
push
cwtl
aaa
insb
call
lret
mov
out
adc
push
sbb
outsl
pop
test
lret
push
hlt
rcll
dec
pop
push
dec
clc
mov
inc
mov
adc
pop
mov
clc
insl
dec
dec
add
lock
mov
add
ja
daa
mov
pop
testb
stos
scas
cli
or
mov
sahf
and
arpl
les
cs
bound
mov
dec
add
xor
mov
inc
cmp
dec
incl
cwtl
cmp
int3
jg
add
mov
cmp
fcomps
mov
adcb
shlb
mov
jp
push
jge
and
jmp
pop
jl
popa
loopne
and
add
repnz
and
ror
push
pop
pop
jmp
dec
push
outsb
jp
sub
in
or
into
icebp
ljmp
jl
or
pop
sub
add
ja
jbe
push
lea
imul
dec
mov
xor
push
into
push
add
orl
ljmp
icebp
xchg
stos
add
inc
xor
sub
out
movsl
test
ret
aam
mov
add
lret
lea
sbb
inc
push
out
rorb
jo
inc
outsb
icebp
pushf
cli
cmp
mov
lcall
cmp
jbe
mov
cs
js
das
jg
arpl
loop
and
sub
js
xchg
fdivrl
adcl
adc
jae
sbbl
add
into
jle
or
imul
dec
testl
js
es
rolb
pop
jne
sar
jae
ljmp
jge
jb
insl
nop
repnz
cmp
fsubs
out
and
aad
lods
ret
xchg
lods
ja
push
pop
pop
scas
mov
add
jb
das
mov
subb
enter
jg
imul
and
test
mov
test
and
xor
dec
int3
xlat
mov
mov
push
adc
adc
sbb
loope
loope
mov
pop
insb
mov
pop
lds
ljmp
jp
and
out
jp
jecxz
pop
adc
subl
daa
or
push
pop
jo
mov
pop
jo
adc
or
iret
cmc
loopne
in
sub
lock
js
test
inc
sbb
dec
sub
dec
add
fs
xchg
mov
icebp
push
mov
cmp
lock
rcr
dec
push
push
add
jle
shll
push
movsb
push
jb
jns
loope
add
std
popa
lock
negb
lods
pop
je
dec
dec
inc
sahf
out
scas
sub
loop
aas
sub
rcrb
pop
cld
jb
in
insb
inc
adc
mov
test
hlt
mov
sub
in
stc
inc
ret
cmp
arpl
scas
mov
jbe
addr16
clc
aaa
mov
mov
lret
sar
enter
stos
incl
mov
ja
pop
xchg
push
aad
inc
ss
rol
push
xchg
call
xlat
leave
lods
ss
sbb
scas
or
lcall
lods
jae
adc
inc
xor
imul
mov
jg
imul
rolb
test
test
push
dec
add
pop
jge
mov
ss
sub
shl
adc
mov
adc
out
int3
sbb
sbb
dec
cmp
lahf
repnz
icebp
repnz
push
sbb
or
inc
hlt
and
xor
mov
lock
pushf
out
mov
jl
pop
adc
cmp
xchg
stc
repnz
cld
imul
or
push
and
jo
in
mov
imul
inc
adc
rclb
pusha
pop
imul
ljmp
repnz
xlat
stos
mov
divl
add
outsl
mov
xor
add
mov
fwait
xor
outsl
mov
test
pop
std
ljmp
mov
add
subl
cs
call
xchg
aad
or
cltd
inc
loope
or
fistps
dec
test
call
mov
ljmp
int
xchg
inc
xlat
loope
and
outsl
loop
or
rclb
and
add
js
gs
lahf
or
cld
mov
cmpb
xchg
inc
sbb
and
or
xchg
lea
lcall
cmp
inc
frstor
loopne
and
jle
push
lds
jp
rcrb
mov
stc
or
incl
scas
push
shll
mov
or
push
push
jle
repz
dec
pop
mov
mov
mov
call
jecxz
or
mov
xor
sub
xor
mov
stc
fistl
outsl
pop
std
ret
xchg
out
mov
cld
pop
inc
pusha
inc
cmp
cmpsb
cmp
xchg
pop
and
lds
xor
sbb
rorl
sub
bound
iret
xchg
lock
movsl
and
movsl
imul
and
divb
ss
pop
push
cli
xor
shrl
scas
push
ret
rcrb
xor
rolb
pop
cwtl
jecxz
cmpsb
ss
andl
sbb
decl
data16
int3
jge
xchg
adc
subb
hlt
ret
icebp
aas
sub
mov
ss
xchg
fdivrl
rcrl
cvtpi2ps
lahf
negl
jne
sub
int
mov
inc
jecxz
jns
add
cld
loopne
hlt
daa
inc
mov
sbb
inc
and
xorl
cmp
mov
insb
inc
cmp
push
ret
jno
push
xor
cmp
mov
in
mov
mov
std
jg
shll
testb
sbb
clc
cli
cmp
xor
sub
jecxz
push
sub
call
insl
sub
inc
jnp
jmp
or
mov
lods
or
pop
and
es
sarb
sti
lock
mov
pop
lods
inc
lret
loope
or
jg
es
sbb
cmpb
pop
rclb
adc
push
int
imul
icebp
or
cwtl
cs
setp
dec
lock
ja
incl
xor
pop
lods
pop
and
mov
pusha
and
inc
adc
add
add
xchg
jp
adc
jg
repnz
xchg
fildl
loopne
pmaxub
xchg
leave
lcall
sbb
rcl
fiaddl
aad
inc
ret
les
jo
push
or
out
ficoml
fwait
ret
scas
in
inc
mov
xlat
sahf
push
stos
xchg
rorl
pop
pushl
push
adc
in
int
cmp
adc
lock
sub
rolb
cmp
test
push
outsl
lahf
inc
cmpsb
shlb
imul
mov
adcl
ret
mov
int
push
and
test
sbb
jbe
mov
jb
sbb
in
jecxz
push
lahf
test
aam
mov
push
jbe
inc
adc
hlt
pop
pusha
dec
adc
nop
hlt
pop
movsb
cmp
outsl
jg
sbb
sahf
mov
and
inc
push
fs
loope
dec
test
xor
out
mov
vshufps
cld
aam
mov
loop
aaa
sbb
pusha
sbb
pop
hlt
loopne
mov
fcoml
nop
movsb
test
and
inc
in
dec
sarb
mov
mov
sub
dec
xlat
push
shlb
jno
nopl
arpl
xor
sub
arpl
roll
or
js
inc
out
int
mov
and
inc
xor
repnz
iret
and
outsb
in
mov
or
push
xchg
mov
mov
sbb
push
ficomps
in
pusha
or
sub
out
bound
sti
outsb
mov
popf
sbb
stos
xor
add
or
push
lods
aaa
fsubrs
push
out
or
aas
cmp
daa
and
int3
mov
ds
jnp
cs
aas
mov
jbe
in
sub
adc
mov
test
jg
aam
cli
pushf
clc
push
xor
mov
or
pop
push
fucom
fldt
inc
into
outsl
lds
push
fidivs
and
js
push
xchg
cmp
clc
or
xchg
mov
sub
mov
lods
push
xor
or
mov
adc
inc
xchg
sbb
cmp
jecxz
or
mov
cld
call
mov
xchg
mov
cli
popa
adc
jne
cmpsb
loope
xorb
scas
mov
les
pop
hlt
adc
add
sub
insl
dec
sbb
sbb
mov
pop
sub
cmp
push
stc
push
push
ret
add
mov
pusha
out
shrl
mov
bound
jecxz
xchg
pusha
aad
fcomps
mov
fdivp
fs
push
divl
cld
pusha
ss
xlat
fsts
mov
xchg
jecxz
jbe
jne
or
lea
ja
lcall
shrb
mov
dec
push
clc
mov
imul
out
daa
les
push
push
repz
arpl
cld
ljmp
and
sbb
dec
jbe
mov
pop
mov
mov
xor
jne
aas
loope
icebp
xor
mov
outsl
xchg
popl
xchg
loope
orl
sub
jg
lods
mov
add
push
test
aam
xor
add
aad
cmpsb
xchg
ret
lock
jb
push
jnp
aaa
les
clc
mov
push
in
pop
or
mov
loopne
cli
loopne
xchg
xchg
bound
int3
jmp
jnp
sbb
jmp
xor
cli
mov
push
scas
adc
loopne
and
fcomps
cli
jo
push
fdivp
lock
movsb
fistps
adc
lods
mov
test
lods
xchg
lock
gs
int
lock
lods
xor
mov
and
mov
bound
pop
pop
mov
cmpsl
sbb
in
or
pushl
push
call
jp
insl
xchg
jno
cmpb
sbb
mov
xlat
stc
xchg
mov
ja
jmp
cmc
push
mov
ret
out
add
leave
shlb
int3
or
mov
add
lahf
push
xor
sub
push
decb
jo
lahf
push
xchg
add
lcall
and
js
mov
cwtl
add
inc
or
and
cmc
out
daa
jmp
aad
mov
aaa
js
mov
int
push
jle
mov
adc
jg
lods
sbb
pop
bound
pop
jecxz
xchg
icebp
ja
xchg
decl
xor
inc
xor
pop
ret
and
pop
inc
mov
xor
add
xchg
sbb
andb
or
sub
add
cld
fucomip
cli
push
or
js
je
pop
push
mov
aas
adc
add
and
call
je
xor
add
lea
inc
adc
aaa
push
incl
nop
repnz
pop
dec
stos
add
or
cmp
sbb
adc
push
rorb
roll
ficoml
add
icebp
movsb
jl
push
nop
or
std
or
jle
and
mov
test
pop
fwait
adc
mov
aam
cmpb
mov
dec
jle
outsl
inc
add
mov
cs
js
scas
test
mov
std
add
clc
inc
fs
adc
push
pusha
inc
inc
lea
add
jg
rcl
jo
ret
xor
aas
xchg
or
add
mov
xchg
ljmp
push
cmc
pop
inc
inc
ret
ficoml
aad
popa
mov
in
clc
mov
mov
rclb
test
clc
stos
iret
andb
sbb
sbb
and
and
push
rorb
js
add
adc
mov
mov
mov
or
iret
js
into
jecxz
adc
add
aam
dec
mov
leave
adc
adc
xlat
sub
push
cli
sbbl
inc
aam
movsl
ljmp
incl
arpl
mov
inc
xchg
gs
jg
loop
fadd
jle
lcall
fcoml
loopw
ficoms
inc
pop
jb
imulb
cmp
sbb
and
call
adc
test
jl
in
fwait
or
mov
in
pop
fcompl
xlat
push
sbb
ja
jp
mov
adc
mov
jmp
fidivrl
pop
jle
push
addb
or
sbbb
out
push
mov
and
fmull
imul
int3
jb
or
push
pop
add
les
sub
dec
cmc
xor
popl
fimull
mov
ret
loopne
dec
call
gs
xor
ljmp
mov
sbb
les
call
or
mov
sub
xor
cmpsb
daa
cld
das
or
aaa
shlb
inc
pop
outsb
cmp
inc
subb
out
cmp
lock
mov
pop
je
mov
fisubs
iret
ja
push
adc
or
outsl
mov
dec
into
cmp
jb
push
in
cmp
cmp
shll
clc
mov
push
clc
dec
sbb
aad
scas
das
and
add
imul
jnp
bound
mov
lods
cmp
in
out
sbb
andl
scas
add
leave
mov
ffreep
push
add
mov
call
mov
sub
push
adc
and
cmpsl
test
adc
dec
dec
and
ret
mov
repnz
pop
sbb
jns
stc
pop
xchg
sarl
filds
adc
pushf
or
dec
pop
and
call
sub
cmp
adc
test
xor
cmp
es
xchg
adc
xor
hlt
and
add
cltd
decb
js
and
jg
aad
dec
scas
js
cli
inc
movsb
and
sub
push
pop
pop
aas
pop
xchg
xor
in
loope
add
repz
pop
dec
inc
fstl
dec
daa
enter
loop
cmpl
or
mov
or
in
sbb
inc
xchg
pop
jecxz
clc
dec
mov
mov
pop
dec
mov
xor
std
adc
push
sub
popa
mov
xchg
ss
ficoml
rclb
xchg
cld
cwtl
mov
and
lock
jge
push
sub
mov
xor
sub
adc
std
rclb
decl
xor
or
popf
or
and
and
mov
shll
xchg
out
sbb
and
ja
dec
in
jmp
add
fimuls
mov
push
xlat
xchg
fdivs
outsb
decb
inc
dec
jg
jo
mov
out
xchg
jbe
ret
loope
stos
into
sbb
add
pop
dec
incl
push
mov
movsl
xchg
cmpsl
jns
nop
push
jno
ror
test
in
js
adc
imul
jecxz
lret
stos
jp
mov
sub
add
cmp
inc
push
imul
xchg
cld
lret
jp
out
inc
rorl
xchg
or
adc
inc
aas
pop
fstpt
loopne
insb
mov
dec
pop
icebp
pop
xor
outsl
js
in
adc
inc
mov
lea
add
into
xchg
cmp
fwait
dec
add
enter
and
xor
xchg
push
movsb
mov
sbb
aam
add
xor
pop
adc
mov
mov
push
rcl
out
push
cmp
dec
xchg
daa
sub
cmp
or
push
cs
shrl
inc
mov
xchg
rorb
xor
or
movsl
sbb
js
push
cmc
fs
fimuls
fnstsw
aas
inc
mov
int
mov
adc
push
mov
sub
pop
int
adc
jecxz
movsb
cmp
inc
ss
push
pop
mov
loope
test
jbe
jb
cli
xor
inc
cli
push
enter
loope
clc
daa
push
data16
xor
add
std
ljmp
shl
and
mov
push
mov
cmpsl
mov
or
and
xchg
popa
ficoml
adc
std
jg
sub
mov
mov
cmpb
inc
sbb
test
lret
adc
mov
cli
mov
int3
dec
sbb
xchg
icebp
scas
sub
mulb
and
sub
xor
dec
mov
dec
pop
jle
arpl
jmp
sub
fidivrl
pop
insb
call
and
sub
out
call
pushf
jo
push
out
xchg
lea
cli
out
test
cmp
dec
xor
ja
icebp
add
loopne
int3
push
popa
cmpsb
sub
das
out
pop
gs
jmp
pop
cmpb
jmp
fld
rclb
push
loopne
int
lds
push
scas
out
pop
rclb
inc
ljmp
icebp
inc
pusha
dec
or
rcrb
loope
nop
jo
sub
push
rol
inc
xchg
mov
adc
inc
inc
int3
das
decl
xor
adc
fmuls
dec
lahf
or
xor
lcall
in
sbb
mov
dec
inc
jl
or
and
sahf
xchg
sub
xchg
movsb
xchg
das
or
jg
shlb
stos
xor
movsl
mov
push
les
insl
adc
sbb
loope
popa
shlb
int
and
jp
in
mov
inc
and
add
dec
pop
pop
test
mov
adc
mov
pop
dec
fisttpl
jecxz
push
rorb
outsb
cltd
daa
sub
mov
pop
jb
fwait
add
jg
aaa
aas
pop
mov
testl
das
inc
push
pop
and
dec
call
xchg
or
arpl
out
inc
inc
movsb
pop
daa
xchg
cmpl
fdiv
sub
add
iret
fisubrl
jle
test
lock
loopne
add
pop
inc
outsl
fidivrl
mov
cmp
mov
push
cmp
arpl
call
add
out
clc
in
enter
mov
fmuls
mov
mov
insb
and
sub
arpl
sahf
rcr
leave
push
orl
gs
call
jecxz
cltd
pop
mov
loopne
adc
pushf
daa
inc
int3
mov
sbb
nop
push
mov
push
jl
test
dec
push
pop
push
mov
mov
lret
rcrb
inc
dec
subb
mov
hlt
scas
cmp
rcr
lods
push
xchg
roll
mov
invd
pop
xchg
xchg
arpl
popa
and
icebp
repnz
es
hlt
fwait
orl
call
loope
pop
fistps
cmpsb
or
pop
dec
add
int3
aas
add
clc
adc
jg
push
mov
loopne
das
mov
shlb
je
adc
shr
and
insl
sahf
push
cmpsl
int
dec
sub
jnp
cmp
adc
mov
push
push
fidivl
stos
cmpsl
ret
dec
mov
add
daa
push
shlb
mov
repz
inc
shrb
sub
arpl
xor
xchg
icebp
inc
scas
jnp
mov
dec
insb
push
pop
mov
mov
pop
cmp
lods
fwait
int3
sub
lahf
fs
decl
jg
stos
aad
adc
out
jne
cmc
and
sti
andl
xchg
adc
inc
sub
subb
hlt
clc
vsqrtpd
cmp
test
icebp
xchg
push
or
mov
cli
push
outsl
or
push
daa
cs
and
lret
add
mov
mul
cmp
add
movsb
pop
mov
imul
scas
inc
adc
nop
pop
and
ss
xchg
out
pop
jmp
xor
inc
test
jbe
shll
jle
push
adc
pop
daa
pop
cmp
es
or
icebp
push
das
jae
jecxz
stos
cltd
pop
and
mov
push
cmp
je
adc
pop
std
lahf
mov
loopne
mov
lret
lret
pusha
in
xor
imul
shlb
add
add
mov
push
add
sbb
rorb
incl
scas
cli
inc
lods
fcoms
jmp
or
mov
adc
push
mov
in
and
outsl
aam
out
fst
mov
and
adc
jg
test
es
outsb
pop
xor
test
aas
xlat
cmc
imul
sub
cld
mov
popf
and
test
dec
pushl
test
push
cld
leave
iret
lahf
les
add
sbb
cld
or
dec
sub
push
sub
push
mov
xor
clc
add
std
push
add
inc
fmulp
add
arpl
test
pop
add
and
cwtl
mov
cmc
mov
std
stos
pop
and
sbb
loope
lods
xchg
inc
aam
arpl
out
add
lds
repnz
sub
xor
inc
bound
out
and
sbb
sub
std
stos
add
mov
enter
and
sbb
sahf
mov
cmpsb
jmp
jg
mov
or
add
cmp
mov
or
addr16
pop
sub
jecxz
mov
and
adc
shlb
inc
std
and
fs
pusha
nop
orl
in
and
outsl
or
push
or
push
shrl
inc
push
test
insb
shrb
incb
scas
jmp
nop
jle
xchg
popf
lcall
decl
test
filds
fistpll
ret
inc
cli
mov
paddb
fidivrs
xchg
andb
outsl
add
push
sti
mov
mov
decb
add
or
loopne
ss
jg
cltd
roll
push
rclb
and
fwait
mov
lss
jo
je
ja
jp
hlt
jmp
movsb
jle
sub
dec
fmuls
xchg
test
pop
jnp
xlat
xor
mov
mov
pop
cli
addr16
sbb
cmpb
movsl
shll
filds
mov
call
hlt
sub
jg
push
push
nop
xchg
test
jecxz
push
lock
int
xchg
push
aas
jmp
cmp
push
paddd
loopne
sbb
stos
fldt
xchg
aam
add
movsl
jnp
lret
ds
mov
pop
adc
xchg
dec
insl
int3
ret
xor
loope
dec
xchg
cmp
inc
sbb
mov
xlat
out
data16
arpl
mov
push
inc
lea
in
int
jg
icebp
pop
jno
repz
push
sub
pop
lock
clc
xchg
lret
inc
inc
cmp
sbb
rol
enter
push
popl
pop
cmpsl
mov
fsubrs
adc
iret
jbe
jp
sub
lahf
nop
test
lock
adc
popa
cmp
push
outsl
out
mov
pop
or
lods
xchg
movl
es
dec
outsb
pop
inc
push
filds
adc
cmp
inc
sub
mov
mov
adc
push
sub
icebp
test
jbe
sbb
daa
push
std
fwait
push
inc
inc
pop
sbb
push
ja
lock
mov
sbb
mov
push
xchg
cmpsl
pop
add
add
stos
out
ret
rcr
mov
into
mov
and
mov
sub
ljmp
mov
jle
testb
dec
sub
xor
pushf
xor
fs
andb
repnz
push
and
dec
popf
js
push
mov
dec
inc
call
jmp
add
dec
js
push
mov
dec
mov
push
or
pop
adc
mov
fucom
fstpt
loopne
or
data16
aas
xchg
cmpsb
jle
adcb
mov
xor
add
xor
mov
and
mov
cmp
test
jle
cwtl
add
cld
pushf
cmp
cmpsb
jmp
fwait
push
orl
and
xchg
es
cmp
mov
inc
jns
mov
test
mov
ljmp
nop
test
push
incl
rcll
or
addr16
jle
inc
rorl
std
mov
xchg
test
sti
cmp
and
movsl
jge
sub
jne
add
test
repz
in
hlt
xchg
jg
or
or
sub
enter
bound
in
repz
je
cmp
push
insb
cs
mov
icebp
push
mov
inc
pop
hlt
pop
xchg
movsb
xchg
clc
pop
gs
lcall
in
xor
fbstp
popa
ret
sub
in
xorl
xchg
nopl
cmp
or
xor
sub
ljmp
xorl
lahf
push
testl
mov
int
aam
pop
rcrl
stc
js
test
jle
or
lock
or
js
inc
arpl
push
adc
js
push
add
cli
adc
nop
adcl
ja
cmc
mov
xor
push
pusha
ficomps
cli
out
call
orl
adcl
cwtl
das
pop
push
movsb
test
test
scas
xor
jp
pop
outsb
aaa
add
inc
aad
or
xchg
dec
and
xchg
add
pop
inc
mov
aas
xchg
adc
sbb
xor
inc
cmp
ja
sbb
adc
cmp
jl
and
jl
icebp
mov
pop
lret
in
add
sbbb
sbb
inc
mov
rorb
or
daa
hlt
icebp
nop
outsb
push
aam
out
push
hlt
jg
outsb
popa
ljmp
in
jle
enter
shlb
xchg
cmpsl
lahf
cmp
test
xchg
loope
cltd
sbb
inc
clc
cld
test
leave
lcall
cmpsb
push
loop
test
aaa
push
jo
cld
idiv
test
ljmp
testb
pop
jnp
mov
mov
scas
mov
add
out
rcll
dec
mov
or
xchg
rorl
daa
xchg
mov
shrb
loopne
ds
sahf
inc
or
shll
dec
js
daa
cmpsl
mov
jp
aad
sub
mov
stos
lock
jae
or
js
add
inc
mov
aad
hlt
dec
xor
sub
movsb
ljmp
jno
dec
push
popa
icebp
pop
inc
jge
out
lret
mov
cmp
sub
outsb
lock
cmp
mov
rolb
fwait
popa
mov
push
data16
rcrb
leave
insb
push
or
inc
jo
cwtl
jp,pt
and
or
or
dec
nop
push
mov
add
xor
icebp
arpl
jnp
push
aas
pop
sbb
sbb
ja
xchg
adc
xor
sarb
shlb
xchg
xchg
loope
lods
inc
push
ljmp
shlb
je
jno
ds
mov
and
decl
jge
or
pop
ljmp
in
mov
and
jg
ss
adc
sbb
pusha
fcomi
mov
outsb
cmp
ds
dec
cmp
push
gs
cmpsl
scas
insl
xchg
and
inc
add
adc
add
pop
shrb
rolb
repz
iret
or
inc
aam
mov
jb
xchg
addr16
dec
xchg
push
pop
mov
in
sbb
cvttss2si
cmp
add
shrb
cmc
dec
stos
jle
adc
sbb
mov
xchg
xchg
movsl
loop
test
mov
and
movsb
xorl
xchg
and
cs
xchg
add
xor
and
and
and
imul
jae
xchg
test
mov
jnp
fnstcw
or
pop
int3
das
pop
insl
cmpb
fdiv
sbb
or
xchg
adc
pop
std
loope
mov
adc
push
dec
mov
int
jnp
push
mov
add
mov
jg
mov
and
mov
push
mov
mov
sbb
insl
lock
pop
arpl
mov
inc
sub
adc
data16
sub
mov
xchg
idivb
xor
add
push
mov
adc
xor
out
rclb
int3
add
fnstsw
add
mov
add
cli
xchg
aam
outsl
lods
test
fwait
or
mov
xor
pop
sti
and
xchg
out
ret
test
lcall
fisttps
jg
dec
sahf
sbb
call
bound
mov
sub
jno
add
adc
cwtl
adc
dec
fmul
call
mov
int
adc
arpl
add
xchg
dec
sub
mov
inc
push
inc
ljmp
lock
and
sub
adc
cmp
and
inc
adc
clc
xor
je
cwtl
push
shlb
loope
addr16
sahf
push
daa
sub
and
xor
or
andl
out
scas
pop
jle
push
std
sbb
jp
xor
jg
push
push
movsl
lock
mov
out
inc
sub
lea
inc
push
add
adc
dec
mov
bound
and
pop
mov
loope
or
sub
nop
cmpsb
icebp
push
inc
mov
add
popf
test
or
or
fisubl
cmc
and
xor
xor
lret
movsl
mov
bound
icebp
daa
mov
cmpsb
jno
mov
push
xor
mov
jo
push
pusha
adc
pop
ret
jno
addr16
xchg
shll
sar
pop
jmp
push
sub
rep
out
add
scas
test
or
je
clc
aad
mov
push
ret
jo
cmc
aas
adc
push
jg
push
int
add
cmp
inc
ss
jmp
call
or
push
imul
lock
cwtl
lret
jge
and
ljmp
lods
pop
nop
adc
mov
fwait
jge
push
and
add
dec
push
std
xlat
jns
jecxz
xchg
or
jmp
xor
dec
push
mov
test
lock
mov
xor
loope
xor
xor
bnd
mov
pop
pop
lea
fstps
jmp
and
and
sbb
adc
inc
loope
inc
inc
ret
pop
push
rcr
rcrl
adc
xor
leave
dec
cmp
inc
and
or
push
divl
icebp
cmp
pushf
jbe
js
push
mov
push
mov
shll
into
loop
pop
icebp
sbb
cmp
xchg
mov
aas
mov
cmp
dec
mov
mov
pop
xor
cmp
xchg
insb
idivl
push
xchg
aad
dec
pop
jne
ss
fcomps
es
cli
sbb
xchg
xchg
inc
push
sub
addl
mov
push
xchg
jbe
movsl
imul
iret
out
js
orl
or
lcall
ds
push
lock
push
dec
adc
and
mov
mov
adc
hlt
jb
loopne
mov
scas
adc
decl
dec
or
mov
mov
decb
gs
pop
mov
iret
or
aam
mov
mov
or
imul
xchg
clc
cmp
shll
inc
xchg
je
rdtsc
mov
cli
cwtl
in
mov
pop
push
aas
sbb
rcl
xor
popa
in
rorb
xor
jne
cmc
mov
mov
insb
xorl
adc
mov
int
or
movsl
mov
scas
into
movsl
mov
aad
loopne
jmp
in
ja
adc
mov
xchg
out
ret
std
sub
pushf
cmp
mov
insl
call
sti
add
fdivrp
xchg
subb
sbb
jge
adc
lods
ds
aas
dec
aad
add
mov
adc
and
repz
and
fcoms
sbb
je
outsb
push
or
jb
mov
ds
adc
or
or
mov
push
dec
sub
adc
sub
add
decb
cmpsl
ficompl
pushf
leave
mov
popf
adc
cmp
jle
lods
cmp
outsb
fs
mov
rcrl
scas
mov
or
mov
gs
and
cmp
data16
sbb
add
in
mov
in
and
cmp
xchg
add
add
adcb
orl
jno
push
sub
cmp
cmc
dec
mov
mov
jo
std
mov
push
adc
add
and
fdivl
xchg
les
mov
xchg
lods
pop
ret
cmp
and
add
in
adc
mov
ja
in
adc
push
xchg
push
xchg
mov
sbb
pop
loope
inc
push
test
aaa
test
xor
imul
pop
sub
imul
jns
fsub
inc
jge
cmp
push
frstor
fwait
subl
out
xor
movswl
loopne
lcall
add
xchg
cmp
dec
fidivl
call
add
push
iret
orb
mov
out
repz
inc
stos
repnz
cmpl
cmp
scas
loope
ljmp
cmp
adc
adc
scas
cld
inc
outsl
repnz
inc
adc
movsl
leave
jmp
aam
mov
and
in
inc
xor
dec
mov
dec
fidivl
and
cmp
jge
in
add
cmpb
dec
jo
mov
pusha
mov
mov
dec
inc
ffreep
ret
enter
inc
cmpsb
push
inc
jp
push
je
call
outsl
cmp
popf
dec
sub
lods
nop
sub
daa
stos
shrl
dec
jns
mov
mov
sti
loopne
jp
pop
test
xchg
jmp
repz
push
xor
push
in
fcomps
sahf
cmpsb
xlat
add
icebp
inc
add
inc
or
mov
ja
aad
loop,pn
cmpsl
adc
dec
mov
sbb
jo
jle
aaa
hlt
lods
aad
rol
aam
out
push
popa
dec
jl
lcall
incl
mov
xchg
jecxz
xchg
add
lcall
or
lds
data16
jl
aam
pop
or
lret
pop
and
cs
cli
pop
lahf
sbb
adc
inc
imul
in
adc
add
mov
pusha
clc
xor
and
insl
xchg
jle
pop
mov
repz
int
inc
and
cwtl
pusha
jo
inc
pop
adc
xor
or
test
or
lret
push
inc
fisubrl
mov
repnz
insb
fdivp
sub
sti
scas
dec
aaa
xor
cmp
les
jmp
dec
xor
out
or
and
sbb
xchg
add
aas
sbb
cmpb
stos
daa
add
gs
cwtl
test
sub
xchg
test
add
lsl
push
aam
ret
xor
call
rolb
icebp
xchg
rorb
mov
push
stc
jp
add
sbb
icebp
cs
test
and
fmuls
in
sub
or
ja
xchg
clc
inc
xor
cld
sub
lods
and
outsb
push
nop
popf
in
xchg
icebp
insb
inc
sbb
or
clc
mov
cmc
popa
or
stos
pop
adc
xchg
mov
cmp
cmpsb
pcmpgtb
dec
add
loopne
stos
inc
mov
sbb
cs
shr
dec
adc
cmp
mov
xchg
jl
or
out
inc
xor
sub
jne
outsb
adc
paddd
inc
sbbl
pop
mov
aaa
cmp
add
push
adc
test
into
xchg
cmpsl
ret
fiadds
add
shll
das
les
jbe
enter
pop
outsb
cmc
pop
lcall
mov
test
sub
mov
data16
jle
icebp
mov
mov
pushf
or
iret
add
mov
or
sbb
push
cs
or
leave
iret
cs
mov
addb
rcrb
and
inc
fsubrs
lldt
jne
and
mov
sub
add
mov
add
add
adcb
xor
andb
test
xor
lds
cli
jb
cmp
sub
stc
jmp
rclb
fsubr
cmp
fadds
xlat
mov
nop
lock
scas
pop
push
inc
ret
and
xchg
xlat
xchg
mov
push
inc
or
mov
xchg
inc
pop
in
mov
stos
outsl
imul
xchg
icebp
mov
sub
jo
dec
sti
mov
mov
sub
enter
test
roll
mov
push
jno
sbb
cmpb
fstpt
clc
ficompl
js
orb
iret
push
inc
loope
ret
sahf
lea
aaa
push
and
xchg
loop
nop
pop
mov
mov
jne
cltd
lods
out
arpl
jp
lods
cmp
xor
pop
or
mov
mov
scas
add
mov
daa
sbb
daa
pop
jp
stc
jb
mov
aaa
sub
ja
clc
mov
lcall
lds
xchg
ds
divb
jg
imul
sbbl
cli
stos
push
add
push
mov
faddl
aas
in
sbbb
lock
cmp
daa
add
fildll
scas
add
sbb
push
push
std
stc
dec
clc
sar
xchg
or
mov
xor
or
dec
or
add
jg
mov
push
xor
stos
mov
push
pop
ljmp
ss
adcl
adc
test
push
test
inc
cld
add
icebp
xchg
ja
dec
dec
dec
test
push
push
ja
js
lret
aad
dec
mov
shlb
mov
push
popf
dec
jge
lret
or
nop
mov
in
sub
push
shlb
fstps
aam
inc
add
loope
gs
inc
outsl
add
sti
loop
stos
ret
es
sub
push
push
ret
lock
arpl
in
je
push
out
test
mov
mov
enter
lock
inc
es
es
cmp
fdivrs
aad
fldenv
pop
cs
gs
in
and
pop
fistpll
jns
rcrb
lods
hlt
fmuls
push
call
mov
adc
inc
pop
lock
ja
fs
xchg
adc
cld
aad
push
aad
push
mov
push
jecxz
loop
jb
mov
cmp
xchg
imul
js
lret
cmp
push
cmp
mov
push
dec
sbb
xor
test
cmp
cli
les
jb
push
aad
orb
xor
jmp
idiv
and
and
push
das
and
icebp
inc
jmp
ret
pop
and
cltd
mov
fisttpl
jg
imul
add
lock
data16
js
cmp
xor
inc
test
ljmp
iret
dec
arpl
cmp
addr16
test
mov
ret
data16
les
fisubs
sbb
push
shll
mov
pushf
xor
jo
pop
ret
push
add
jb
mov
push
mov
aam
add
add
xchg
push
jb
mov
call
sbb
mov
or
mov
cli
mov
cmp
pop
popf
add
jmp
sbb
stc
fsubl
aaa
sahf
add
add
stos
jne
mov
dec
int
mov
aad
xor
lods
push
adc
pop
pop
lods
popl
add
add
pop
sbb
je
sbb
stos
dec
lcall
hlt
pop
pop
mov
rcll
cmp
sub
xchg
jne
xor
mov
jg
ja
sub
dec
test
jecxz
or
pop
push
xor
dec
jg
sbb
add
int3
in
loopne
sbb
push
adc
clc
pop
pushf
push
andb
les
dec
jg
cmp
sbb
int3
jg
cmp
pop
or
lods
or
int
mov
data16
xchg
and
rorl
sbb
lea
add
roll
push
fcmovnu
add
out
mov
lret
js
or
ret
mov
loopne
add
mov
mov
dec
dec
mov
int3
push
fcompl
insb
es
mov
cmp
inc
insb
xchg
and
popa
lea
jno
pop
mov
in
ret
jbe
mov
movsl
and
pop
xor
test
std
aad
push
and
and
xchg
lock
fstl
sub
mov
mov
out
lock
mov
mov
pop
ss
sbb
inc
mov
ljmp
fldl
dec
and
jle
test
mov
sarl
hlt
push
and
ja
lea
dec
test
std
aam
loope
add
sbb
and
add
ljmp
xor
aaa
mov
add
leave
cmc
add
lods
pusha
sahf
sbb
push
daa
call
pop
outsb
fistps
mov
imul
pushf
andl
mov
adc
adc
xchg
jg
nop
xchg
mov
add
sub
pushf
pop
adc
loopne
sbb
in
inc
mov
jle
rolb
hlt
and
fmuls
mov
pushf
add
fisttpl
insb
loop
xor
lds
sahf
imul
aaa
ret
mov
mov
mov
fcoml
sbb
xchg
and
pop
jg
mov
jecxz
dec
mov
push
cmp
mov
fisttps
clc
mov
jle
sub
les
ficomps
lahf
cmc
cmp
mov
inc
add
jo
std
pop
mov
pop
mov
adc
xor
andb
mov
jno
aaa
enter
js
pop
mov
mov
orb
adcb
dec
inc
mov
and
inc
push
pushf
pop
inc
in
pushf
lods
inc
or
add
and
int
mov
aam
loope
mov
das
inc
daa
subb
sub
push
cmpsb
int
push
sbb
sbbl
cmpsl
jbe
sahf
stos
shl
sbb
sbb
push
je
add
ret
sub
pusha
insb
pushf
pusha
mov
xchg
sahf
inc
mov
pop
cwtl
icebp
popa
pop
lock
clc
mov
nop
lret
sbb
repnz
enter
outsb
and
insl
mov
sbb
mov
cmpsb
lahf
mov
ret
fwait
add
cwtl
or
mov
adc
pushl
inc
xlat
call
loopne
dec
lods
cmp
pop
xchg
adc
movsb
movsb
cmp
adc
dec
add
inc
xor
fcomp
mov
or
int3
sti
xor
inc
pop
rcl
or
sub
addr16
push
iret
sub
call
sar
out
je
lods
cmpsb
lahf
or
lret
sar
add
sbb
adc
lds
test
icebp
xor
lcall
hlt
jge
hlt
outsl
out
stos
push
push
and
cmp
xchg
nop
lcall
fisubrs
adc
repnz
pop
fcoms
dec
lods
mov
adc
lcall
loope
lods
push
test
cmp
adc
es
xor
dec
adc
dec
cwtl
ljmp
pop
dec
add
sub
fwait
add
jbe
outsb
jg
ret
and
adc
and
cld
pop
mov
into
mov
xchg
fildll
test
push
push
pop
clc
or
rorb
popf
es
and
pop
jmp
add
out
cltd
mov
outsb
cli
inc
je
rorl
pop
and
scas
and
das
icebp
xchg
push
sbb
inc
jno
or
push
ds
mov
push
pop
aas
ljmp
push
cwtl
adc
daa
cmpsb
int3
data16
mov
out
mov
scas
push
clc
test
ret
mov
rorb
ljmp
in
imul
scas
ret
aam
loope
push
mov
xchg
jge
loopne
and
jns
add
xchg
negl
mov
xlat
xchg
mov
repz
cs
mov
xor
fcmove
repz
inc
stc
jl
sub
add
pop
add
and
mov
loopne
je
cmpsb
incl
pop
cmp
aam
orl
and
in
fadds
das
push
das
in
sub
mov
sub
aas
fisubrs
loope
fnstcw
imulb
hlt
adc
xor
mov
loopne
lret
cmp
push
and
lods
inc
inc
xchg
cmp
bound
pop
xchg
test
pop
pop
insb
ljmp
arpl
out
aad
mov
xchg
test
ret
dec
movsb
or
shrb
xor
bound
je
aas
add
movb
cmc
shrl
cli
lock
jne
push
sub
add
enter
xor
mov
mov
or
scas
aam
rclb
jbe
lock
pop
jl
mov
xor
rcrb
add
loope
push
add
cli
adc
mov
frstor
mov
xchg
jmp
mov
and
std
fisttps
ja
mov
scas
adc
or
cs
pop
mov
fiaddl
lock
cld
bound
cs
fs
xor
shlb
xchg
pusha
dec
xchg
add
shll
loopne
pop
stos
cs
inc
cmpsl
and
sbb
push
sbb
mov
mov
jg
mov
sub
inc
insb
loop
gs
jnp
movsl
cld
sarl
jl
sub
mov
xor
xchg
push
ljmp
loopne
dec
xchg
pop
jle
sbb
pop
in
push
daa
mov
pushl
pusha
jmp
fisttps
ror
cmp
ljmp
sbb
mov
and
sbb
xchg
add
imul
sbb
cs
mov
xchg
ljmp
outsl
std
movsl
out
pop
out
sub
jp
ljmp
adc
push
xlat
dec
jnp
sar
nop
divl
loop
orb
mov
sti
and
clc
int3
and
jbe
push
add
fdivs
lods
dec
cli
push
jb
pop
fistl
mov
or
scas
jmp
in
pusha
mov
or
ret
mov
pop
mov
mov
inc
hlt
test
mov
and
push
shrb
insb
test
or
insl
subb
cmp
adc
xchg
into
sahf
and
mov
pop
xchg
imul
lds
mov
adc
xchg
pushf
pop
jns
mov
psubq
das
xchg
hlt
loope
mov
jae
neg
add
adc
inc
imul
and
ljmp
adc
jo
leave
adc
adc
mov
sub
dec
push
repz
lret
add
add
pop
dec
faddl
xchg
into
cli
dec
out
test
pop
into
mov
mov
cmc
add
add
out
jo
hlt
in
cmp
or
inc
insl
pop
aaa
jmp
into
adc
xlat
adc
push
cwtd
push
inc
xor
inc
and
mov
sub
mov
test
add
ja
add
cmc
pop
test
dec
pusha
std
sub
mov
fcompl
xchg
ljmp
inc
in
stc
in
mov
pop
cmp
dec
xchg
cmpsb
jge
add
mov
pop
fmul
mov
pop
or
or
stos
and
xor
sbb
mov
mov
cltd
inc
adc
ljmp
out
push
adc
stos
mov
xor
push
aas
loope
insl
add
scas
inc
jg
rcrl
shl
sub
pop
push
stc
clc
arpl
xchg
inc
mov
lock
push
or
lahf
or
add
sub
cld
rcrl
rcl
push
sarl
es
jns
cmp
cli
adc
jo
shlb
mov
mov
insl
xchg
loop
mov
push
addl
add
xor
mov
jle
mov
jle
xchg
xor
dec
test
test
jge
jo
push
dec
stc
mov
lcall
cmp
adc
out
push
je
js
stos
loopne
mov
pop
mov
repnz
std
lahf
ret
adc
xor
dec
ror
fsubrp
dec
in
add
xchg
mov
mov
sbb
outsl
adc
fistps
jae
push
ds
xlat
paddd
inc
imul
ret
aam
ja
int3
daa
pop
addl
inc
scas
add
adc
call
lock
pop
dec
scas
jl
jle
rcrb
cmp
imul
add
push
jo
test
hlt
iret
aas
pusha
stos
mov
test
decl
adc
push
and
jg
aas
and
mov
mov
add
or
int
adc
adc
pop
iret
sub
xor
mov
pop
ss
sbbb
xchg
aad
fld
inc
jl
ficompl
or
jg
das
jle
push
sti
or
fbstp
fildl
mov
out
mov
pop
sub
stc
or
mov
jmp
sub
and
push
iret
xor
sub
fisubl
sub
fidivrl
lcall
mov
xchg
jg
jmp
inc
rorl
notb
sbb
lock
hlt
outsl
mov
arpl
das
sahf
cmp
or
add
iret
lcall
mov
and
or
mov
icebp
cmpsb
sbb
je
cs
push
incb
dec
pop
or
outsb
iret
mov
add
sub
xor
jl
push
mov
inc
add
or
inc
jle
jl
sub
add
xchg
dec
sarb
mov
inc
cmp
sbb
jl
ja
or
pop
adc
ret
push
push
scas
sub
test
pop
jnp
or
pop
andb
cmc
or
in
adc
into
roll
filds
pop
stc
out
mov
push
mov
nop
pop
or
push
je
jl
inc
les
scas
test
mov
fcompl
out
dec
xor
out
add
rcrb
es
adc
fsts
nop
sub
xchg
stos
mov
test
mov
xorl
jmp
outsb
scas
incw
mov
or
cmp
xchg
cld
sub
es
xchg
mov
fisubs
ja
mov
jbe
test
xor
pop
xchg
mov
lcall
or
test
sub
push
clc
cmc
pop
inc
movsb
in
dec
into
arpl
mov
add
out
mov
out
sbbb
aad
pop
lcall
fisubrl
std
addb
cmp
sbb
loop
aas
dec
push
mov
add
dec
jle
cltd
std
out
lock
sti
mov
cmp
out
popf
pop
sbb
fsubrs
adc
adc
push
mov
or
mov
dec
ror
jb
insl
lret
jo
push
xor
lock
ss
cmc
xchg
clc
jp
addl
lret
inc
mov
push
aaa
mov
cwtl
mov
cmp
cltd
into
pusha
sbb
mov
js
out
push
xchg
roll
in
lret
xchg
dec
iret
mov
or
jno
sbb
inc
in
jne
dec
out
jecxz
int3
incl
dec
jb
popl
lahf
lods
mulb
add
movsb
cmp
and
push
mov
js
sbb
aam
mov
sub
out
stos
push
icebp
lock
aad
pop
push
notb
loopne
sub
adc
sub
or
add
adc
outsl
decb
mov
aaa
or
mov
jo
xor
mov
dec
inc
cld
add
dec
sbb
loope
nop
xor
dec
rcl
lahf
xor
lret
pop
movb
arpl
sbb
ljmp
mov
movsb
clc
pop
or
std
sbb
nop
ljmp
add
fdivrl
dec
jb
inc
filds
sub
add
or
pop
imul
iret
rorl
jns
cmpsb
mov
iret
cmpsl
cld
and
xchg
cmpb
jmp
mov
sbb
test
outsl
ja
loope
mov
stos
jmp
stc
ja
sub
push
mov
add
push
stos
loopne
lods
xlat
push
push
jns
shll
aad
jp
sub
incb
aas
mov
or
xor
pop
jecxz
in
or
jg
mov
pop
sbb
test
cld
mov
push
or
movsb
sarb
icebp
add
pushf
insb
fmuls
adc
lret
xor
iret
or
adc
ja
gs
iret
outsl
incl
lret
dec
js
or
jmp
sbb
outsb
aam
mov
mov
stos
dec
pop
cmp
data16
jg
fcompl
pop
xorb
fstpt
pop
inc
test
jl
gs
mov
pop
pop
lds
pop
mov
and
mov
fistpll
aas
xor
jo
iret
fwait
jne
or
ja
add
sbbb
cli
add
cld
js
hlt
ret
test
cltd
and
jg
rcll
cmpb
mov
lock
inc
xchg
dec
mov
lea
xor
or
rolb
das
loop
lods
sarl
sub
in
push
loop
nop
push
out
and
mov
mov
leave
cmp
rorb
inc
filds
mov
jl
sub
adc
test
push
push
fbld
pop
mov
or
sub
pushf
adc
dec
out
test
popf
mov
mov
pop
mov
mov
xchg
and
les
sub
inc
sarl
pop
fisubrl
mov
sbb
sbb
inc
rcl
sbb
sbbl
or
sahf
dec
mov
sbb
out
push
mov
aad
mov
xor
mov
std
shrl
xor
jmp
jb
push
in
mov
aas
cwtl
add
stos
subl
sahf
jne
outsl
inc
pop
fs
or
push
std
mov
add
cmp
call
cld
xlat
sti
loope
push
and
add
lret
mov
mov
fs
cmc
shlb
into
ret
rol
inc
cmpb
lock
icebp
stc
adc
mov
cmp
stos
clc
loop
sub
inc
data16
in
and
pop
xchg
xchg
adc
nop
out
adc
pop
in
rdmsr
dec
push
jns
mov
push
sahf
stos
iret
and
cld
das
loopne
mov
stc
push
mov
mov
int
pop
adc
rol
cs
dec
pop
push
js
inc
out
jo
imul
xlat
fcomps
or
xchg
jns
jns
test
cmpsl
imulb
addb
jecxz
dec
rolb
je
xor
jecxz
pushf
outsb
lea
pop
daa
or
mov
rcrb
adcb
xchg
add
subl
jnp
mov
cmpl
mov
nop
loop
xor
sub
cli
jmp
xchg
push
js
dec
iret
pop
aam
stos
sbb
xchg
test
add
jl
int3
add
data16
arpl
clc
cmp
fnsave
inc
add
sbb
ret
dec
call
mov
mov
test
ljmp
jo
push
mov
les
cmp
test
and
leave
loopne
lods
mov
pop
cmc
insb
in
push
sbb
cmc
push
ss
orl
imul
add
cmp
inc
imul
rcl
or
je
incl
or
hlt
sub
out
insl
cmpl
ds
jg
mov
lods
xchg
xchg
ds
shlb
dec
data16
fists
inc
lds
stos
xorb
aas
cmpsb
stc
jmp
sbb
cmpsl
and
aad
adc
clc
add
je
stc
fmulp
sarb
ss
in
sbbb
xor
jp
std
andb
jb
xchg
cld
or
xor
cld
xchg
clc
sbb
fiadds
mov
or
sbbl
arpl
and
add
test
push
mov
dec
stos
push
jg
lcall
push
cld
cmc
jp
test
sbb
loop
jo
push
xchg
adc
loopne
xchg
cwtl
jo
cmpsb
loop
rcr
in
sub
clc
sbb
xchg
pushf
add
data16
cwtl
xlat
mov
mov
cli
rcrb
sbb
adc
jg
sub
add
dec
sbb
outsl
fistpll
or
xor
sbb
leave
jnp
cmp
aas
push
das
fst
add
jg
idiv
out
lods
xor
inc
cmp
int3
jae
xchg
shlb
shrl
loope
repnz
push
stos
xchg
nop
ret
add
ret
or
sar
mov
mov
mov
mov
jbe
push
lock
cli
xchg
or
lock
fcoms
mov
inc
jle
vmovlpd
or
pop
dec
mov
jo
mov
pop
inc
fnstsw
push
push
test
jne
sub
nop
clc
subb
adc
rolb
push
call
std
mov
push
subb
cld
out
cmp
xor
jo
test
jbe
mov
mov
jmp
je
push
push
lea
push
popf
movsb
jne
xchg
cmpsl
inc
cld
loop
outsl
pop
dec
orl
test
ds
shll
mov
jb
dec
xchg
mov
sub
cmpb
stos
jecxz
loopne
and
dec
in
adc
cld
jbe
movl
push
stos
add
aam
pop
mov
adcb
pop
mov
add
inc
aad
add
sahf
jno
jmp
popf
out
ficoms
or
inc
jb
xor
cmp
test
sub
fiaddl
ljmp
fmulp
sahf
in
inc
in
and
mov
pop
or
sub
mov
or
scas
mov
sub
sub
loopne
daa
xlat
in
add
and
outsl
mov
jb
hlt
ss
mov
mov
cmc
adc
je
das
lods
inc
hlt
lea
push
aas
push
jae
and
xchg
xchg
mov
lds
loope
addr16
mov
adc
and
or
jl
xchg
pusha
fcomps
sbb
push
test
or
add
nop
icebp
sbb
sbb
popa
adc
cmp
imul
add
xchg
fcoms
hlt
pop
pop
cmp
dec
js
add
loopne,pt
inc
mov
add
in
or
pop
rolb
nop
mov
icebp
ret
in
xchg
aaa
cmp
add
jle
sbb
roll
adc
mov
add
dec
cmp
idivl
dec
and
loopne
nop
cmc
ret
jmp
cltd
mov
inc
call
and
mov
xchg
cli
mov
test
add
int3
subps
add
clc
cmpsl
popa
xor
cmp
pop
push
sahf
mov
push
imul
jb
repz
call
mov
add
dec
cmp
daa
insl
cmp
sub
xchg
xchg
cmpsb
mov
dec
movsb
xchg
adc
jge
or
cmc
adc
scas
mov
and
sahf
ds
xlat
shll
insb
or
pop
mov
jg
sbb
adc
lea
loop
gs
cmp
xchg
cmp
mov
lret
ret
adcl
mov
and
and
mov
push
inc
nop
test
ljmp
sbb
adc
mov
shlb
sbb
add
sbb
subl
pop
or
lock
into
push
jb
rcrb
cwtl
or
sbb
call
pop
imul
clc
addr16
ljmp
and
push
jl
outsb
xchg
fwait
leave
hlt
inc
add
iret
in
js
mov
sub
jecxz
or
and
jg
adc
push
outsl
xor
testl
and
cmp
mov
movsl
push
jg
add
pop
cmp
cld
add
shll
pop
fimull
cmpsl
arpl
inc
cwtl
add
js
jno
addl
dec
dec
and
adc
push
sarb
mov
cmp
lcall
sbb
inc
sbb
leave
lds
loope
sbb
addr16
pop
movups
out
repz
dec
cld
mov
ficomps
xor
mov
hlt
jnp
jl
xlat
or
loopne
jge
inc
sub
hlt
jnp
jno
stos
aad
notl
popf
popa
or
pop
cmp
pop
adc
inc
je
add
test
adc
insb
shrb
xor
in
shl
cmp
dec
ret
add
add
aad
inc
mov
jge
xchg
mov
into
ret
mov
pop
js
sub
out
cltd
subb
mov
mov
and
insl
popa
mov
mov
roll
xchg
add
mov
jl
jge
icebp
das
push
cwtl
and
add
xor
dec
dec
mov
icebp
lret
pusha
mov
mov
sub
lock
cltd
ret
fldt
jae
out
cmpb
sub
adc
fidivrl
xor
dec
das
add
adc
pushf
repz
sahf
not
mov
adc
setle
and
orl
cli
les
jmp
cmp
daa
fsubrl
or
rep
add
shl
add
sub
cld
loopne
cs
jo
rcrl
loop
push
int
cmpsb
sub
lock
push
mov
out
rcrl
add
pop
cwtl
pop
push
in
add
xor
sbb
pop
scas
mov
mov
xchg
das
inc
out
mov
into
aaa
or
jmp
cmp
mov
movsb
sub
mov
mov
xor
push
movsb
sbb
cmp
test
xor
or
jnp
fildl
adc
dec
icebp
mov
or
bound
jl
pop
jo
inc
inc
add
pop
out
add
imul
sbb
popf
push
lock
cmpsb
test
inc
xchg
hlt
test
scas
mov
subl
int3
out
push
and
imul
repz
mov
icebp
mov
cli
rcl
lret
aad
fs
imul
adc
sub
mov
popf
dec
fists
inc
sahf
sbb
push
xor
lds
das
movsl
loop
push
mov
rclb
push
jp
and
loop
ja
out
in
dec
add
sahf
popa
add
shll
mov
ud0
push
nop
and
xorb
mov
das
mov
adc
imul
shrb
or
cmpsb
jno
cld
shl
mov
test
mov
dec
pop
jg
in
negb
push
cvtpi2ps
add
push
cmpb
lds
fbstp
shlb
loop
pop
dec
imul
bound
fisubrl
mov
enter
xlat
lock
adc
xor
cltd
nop
adc
sub
jne
adc
fsubp
mov
filds
inc
add
aam
test
fmuls
xchg
push
inc
or
dec
js
mov
mov
push
shl
adc
out
jmp
sub
pop
dec
adc
test
stos
inc
jno
enter
xor
lods
ficoms
pop
fwait
mov
cmp
or
sbb
pop
test
mov
push
push
mov
in
cltd
mov
test
or
cmc
cld
out
movsb
adcb
push
xchg
xor
jnp
adc
sbb
mov
in
cmp
xor
dec
pop
addr16
xorl
js
nop
or
orl
jnp
cmc
fsubrl
andb
roll
test
pop
loopne
paddusw
insl
daa
in
movsb
aaa
pop
dec
cli
inc
ret
popf
insb
insl
add
adc
pop
cld
cmp
icebp
lock
inc
or
rorl
test
pop
or
int3
jo
stos
dec
or
rclb
mov
xlat
std
ja
in
inc
in
inc
fiaddl
lret
loope
mov
repnz
mov
shr
ss
cmp
xchg
xor
lock
push
les
cld
sbb
cld
sbb
or
add
mov
push
scas
jae
shl
imul
movl
mov
in
push
loop
outsl
mov
nop
int
xchg
cld
or
test
clc
push
jl
push
add
popf
jnp
gs
push
dec
xor
lahf
subl
jge
es
std
les
scas
lahf
pushf
in
mov
pop
dec
daa
arpl
xchg
pop
fdivrl
add
xchg
push
lods
mov
clc
test
in
scas
and
arpl
pushf
ss
or
xchg
enter
daa
cmpsb
imul
test
out
mov
out
xor
enter
or
rolb
int
stos
imul
jo
sbb
push
dec
pop
ds
lahf
mov
jnp
and
inc
aaa
xor
dec
fs
sbb
loope,pn
movsb
movsl
ret
outsl
sub
inc
sub
mov
add
shrb
sbb
add
mov
xchg
call
pushf
cmc
inc
xchg
dec
in
test
cmpsl
adc
mov
fisubl
adc
jecxz
inc
sbb
lods
sub
bswap
add
fcoml
jne
das
nop
cs
fdivs
adc
jecxz
in
or
xchg
scas
cs
pusha
sbb
sbbb
mov
add
std
loopne
pop
add
mov
or
or
mov
pop
aas
add
in
adc
dec
popa
dec
or
pop
out
bound
mov
int
add
dec
leave
scas
push
pusha
adc
sub
push
enter
movsl
mov
scas
mov
pop
outsb
fbstp
sub
xlat
cs
sbb
iret
xchg
stos
pop
ds
and
pop
lods
test
pop
and
sbb
pop
cld
es
push
push
fs
jg
jle
cli
ljmp
sbb
or
lods
sbb
out
sbb
pushl
push
dec
insl
adc
jmp
dec
cmp
std
mov
and
sahf
into
sbb
pop
cmp
jl
vminss
loope
stos
push
mov
inc
inc
int3
or
or
jmp
or
jmp
stos
mov
mov
dec
js
int3
or
in
push
call
loopne
pusha
mov
or
add
dec
xlat
bound
cmp
les
push
test
xor
mov
loopne
js
dec
push
sub
sarb
inc
in
setl
cs
push
lret
push
cld
lret
ret
sbb
test
and
mov
cmpsl
xlat
mov
rcr
xlat
cmp
cmpsl
clc
les
pop
mov
jg
cli
sti
stos
rcll
sbb
and
insl
adc
insl
arpl
inc
cs
icebp
inc
dec
push
adc
mov
xor
xor
es
cs
lea
xor
out
adc
pop
pop
jl
jne
imull
mov
adcl
jp
xchg
roll
add
test
xchg
stos
out
push
adc
mov
sub
inc
call
leave
mov
mov
add
ja
push
pop
mov
sbb
ret
sahf
add
pmullw
sbb
lods
add
mov
jge
fildl
inc
mov
pop
xor
ljmp
out
sub
adc
add
jb
decl
outsl
mov
mov
inc
or
dec
mov
add
aas
or
jmp
push
rclb
add
sub
inc
push
jge
out
push
jl
je
xor
dec
shrb
sbb
dec
scas
arpl
add
jg
or
rorb
push
inc
sbb
cmpsb
negl
pop
cmpsl
or
adc
out
out
scas
jnp
lds
addb
adc
sub
push
mov
cs
cli
stc
jo
cmpl
lea
push
in
iret
mov
insl
adc
ret
test
jno
scas
fwait
cmpsb
cmp
insb
and
mov
and
das
xor
lock
cmp
cmp
add
add
push
filds
ret
testb
cmp
jb
mov
idivl
loope
popa
popa
adc
sub
insl
shrl
mov
pop
sbb
hlt
xor
sarb
xchg
fimull
push
or
das
push
pop
fs
fwait
lock
pop
jns
push
mov
rorb
lock
push
das
pop
enter
lds
jno
mov
add
cld
sub
leave
enter
sub
fwait
movsl
sbb
cld
push
push
adc
psubd
cmc
mov
inc
std
repz
test
inc
sti
cld
aam
cld
adc
stos
cmp
xchg
int
sbb
add
and
pushf
cld
sub
fstpl
sbb
xor
xor
lret
ret
push
iret
pusha
imul
mov
cmc
fstps
push
xchg
aas
adc
cmpsb
lcall
add
push
xor
cli
fs
adc
adc
lock
jle
push
rolb
fcom
push
stc
pop
adc
mov
sbb
add
add
or
int
add
dec
pop
xchg
jnp
aas
pop
lock
sub
xchg
imull
lock
jecxz
insb
setge
lcall
scas
fdivrp
icebp
repnz
add
rorl
jl
adc
leave
loope
loopne
and
mov
jmp
hlt
add
daa
adc
pop
sbb
push
dec
mov
push
iret
mov
call
sbb
inc
outsb
cli
sub
or
imul
call
out
adc
mov
fdivs
roll
iret
pop
insb
int3
pop
popa
mov
mov
sub
dec
lret
out
aad
xchg
das
and
es
shlb
imul
fisttpl
dec
jecxz
or
sub
lret
mov
xchg
mov
jp
lock
daa
in
pop
mov
test
jecxz
jnp
cmp
out
or
sbb
insb
bswap
test
inc
insb
mov
or
adc
in
cmpl
aad
mov
cmp
scas
xor
mov
addb
push
and
and
cmc
imull
inc
mov
stos
xchg
cmp
popa
pop
or
insb
fsubs
inc
push
jl
loopne
push
and
inc
dec
jae
xor
stos
cmp
icebp
incl
call
add
fidivrl
sbb
insb
loope
in
into
loope
sub
dec
ret
inc
jns
jecxz
add
jbe
loope
inc
dec
mov
loopne
shrb
push
sub
cmpl
sahf
sbb
in
scas
in
jno
push
fsubrs
jo
lret
test
pop
dec
push
mov
hlt
mov
xlat
or
fmul
movsl
clc
push
rorl
out
inc
setne
mov
mov
je
pop
dec
push
sbb
mov
lret
cmp
in
movsb
mov
adc
cmpl
sub
pop
add
rcll
adc
push
lea
jmp
pop
aaa
loop
push
mov
mov
out
mov
dec
or
and
add
js
cltd
inc
sbb
fists
ja
sub
insb
xchg
jg
test
lcall
fsubrs
sub
daa
mov
pop
pop
adc
push
xchg
pop
jo
inc
push
inc
mov
divl
in
out
negb
adc
jg
push
in
sub
addl
es
pop
cmp
pop
or
add
out
jno
rorl
dec
pop
push
dec
mov
add
dec
das
ja
adc
mov
or
andb
xchg
andb
fs
xabort
jl
xchg
movsb
ds
mov
mov
add
movsl
sbb
test
jmp
in
xor
mov
push
bound
dec
add
subl
inc
and
or
dec
jl
xchg
js
out
and
inc
xchg
xor
mov
sbb
mov
sbbl
mov
mov
shrl
mulb
jno
mov
and
push
sbb
inc
mov
adc
jge
enter
mov
stos
mov
insl
shrl
icebp
push
call
xor
or
add
lret
inc
loope
loop
inc
cmp
push
jmp
cmpsl
ds
add
push
xor
cmpsb
and
cmp
movsb
popa
xor
dec
jl
inc
inc
and
xor
out
and
and
and
std
and
dec
in
adc
dec
jmp
imul
ljmp
fdivrs
adc
rolb
or
xorl
pop
push
and
sbbl
or
std
add
pop
js
and
decl
ror
movsb
adc
movsb
cmp
xor
adc
mov
ss
xchg
outsl
and
stc
add
loopne
push
ja
cmpsl
loope
pop
jo
in
jmp
mov
xchg
and
and
rorb
sbb
test
push
loope
cmp
frstor
xor
xchg
pusha
mov
test
in
nop
or
mov
pushf
ss
sahf
pop
adc
insl
ret
clc
mov
xchg
adc
sub
xchg
and
cli
frstor
dec
dec
mov
in
pop
loop
sbb
push
adc
xor
pop
aam
test
add
xchg
jecxz
jle
dec
mov
mov
xor
rcr
jge
cld
or
mov
sarl
clc
shll
adc
punpckhbw
cmp
rcrb
insb
xchg
xor
inc
xchg
push
lahf
xchg
xor
pop
jg
add
dec
dec
aaa
jp
les
sarb
mov
mov
mov
mov
add
stos
sbb
mov
and
push
sbb
mov
test
cmpl
xorl
mov
mov
test
xchg
std
fmuls
sbb
or
lods
stc
in
lods
jp
into
xchg
sbb
cltd
inc
js
iret
imull
jge
mov
rolb
js
scas
inc
es
decl
inc
lods
lods
bound
xchg
mov
inc
sub
pushf
and
pop
sbb
addb
divl
inc
mov
leave
push
mov
mov
stos
cmpsb
mov
jbe
idivb
pop
shlb
push
test
je
sub
insb
mov
xchg
cmc
push
js
fadds
inc
add
sub
cmc
dec
in
dec
leave
cltd
sbb
fildl
xchg
or
std
shl
add
mov
sar
pop
cmp
adc
push
jne
aam
icebp
scas
xorb
mov
dec
int
data16
lcall
mov
adc
scas
cs
cmc
mov
push
orl
xchg
or
outsb
dec
aam
push
push
outsl
mov
mov
stos
dec
into
mov
dec
inc
adc
sbb
mov
imul
pop
int
lahf
cmp
fwait
and
aad
push
rcll
mov
js
icebp
inc
ljmp
ret
push
movsb
inc
adc
add
mov
or
sbb
push
pop
jle
mov
cmp
cmp
adc
pushl
sub
lret
pop
leave
movsb
push
aam
insb
es
rorb
jg
xchg
pop
bound
inc
es
pop
adc
mov
aad
stos
cmp
jno
out
add
mov
cmp
loope
mov
ja
pop
test
aad
scas
in
cmp
or
lret
mov
xlat
aas
mov
adc
aam
mov
mov
mov
xor
cmp
sbb
or
in
pop
mov
add
insb
dec
push
js
cmp
jg
sub
cmp
imul
adc
sbb
jg
mov
sbb
rcr
adc
push
mov
mov
or
sbb
push
mov
test
mov
adc
lahf
ljmp
dec
std
iret
add
or
jae
test
push
pop
push
push
mov
stc
sti
or
xchg
mov
fs
push
cmp
sarl
mov
pop
mov
lods
int
ss
cmp
lods
pusha
xchg
hlt
cwtl
outsb
lods
push
stc
arpl
fwait
adc
das
add
in
fadd
push
cmpsl
add
scas
xchg
push
test
xor
xchg
inc
mov
decl
dec
dec
test
xor
pusha
push
aas
fstl
incl
repnz
xchg
ret
add
arpl
repz
in
xchg
jo
push
adc
push
nop
push
sbb
test
xor
pop
jp
sub
mov
cltd
jle
dec
xchg
jp
fisubs
jle
testl
rcll
hlt
jb
incl
into
test
dec
ss
adc
rol
sub
sti
test
rcrl
inc
cmp
fwait
imul
test
lret
push
test
std
test
cmp
clc
pop
or
xor
xchg
shlb
or
xchg
mov
push
out
movsl
std
clc
pushf
iret
test
inc
pop
arpl
inc
jp
cwtl
negl
insl
mov
cmpb
lock
cs
jp
stos
adc
add
adc
add
and
insb
fistpll
mov
in
mov
and
add
dec
cmc
popf
mov
lea
xchg
cmp
ss
dec
or
cltd
insb
fsubr
sub
push
inc
inc
add
and
push
add
mov
mov
sbb
mov
fdivrs
adc
xor
lahf
lea
jmp
mov
dec
mov
xor
dec
push
push
jo
jl
es
push
cltd
rcr
sub
ljmp
jmp
iret
xor
subl
add
cli
inc
enter
pop
clc
call
nop
int3
insb
int3
jecxz
jbe
and
adc
cld
or
into
je
popa
add
mov
lret
pop
ds
sbb
dec
push
out
and
out
leave
in
fcmove
push
sub
movsl
imul
loop
aad
add
addr16
mov
pop
or
add
stos
pop
lods
sbb
lock
push
pop
jbe
mov
push
inc
mov
cmpsl
cmp
icebp
jno
push
icebp
adc
mov
xchg
or
push
jb
dec
xor
das
cli
cmp
pop
repz
xchg
addr16
or
lds
stc
and
mov
insl
xor
rorl
out
sub
pop
xchg
cmp
adcb
cmc
jge
ja
and
pushf
lret
push
and
jmp
rorl
psubsw
mov
jecxz
rorl
inc
adc
add
push
es
dec
leave
jl
ret
pushf
and
dec
inc
out
loopne
mov
sbb
pop
test
xchg
mov
mov
roll
dec
mov
add
xor
imul
add
inc
cmp
nop
xor
dec
arpl
daa
rolb
loope
pop
inc
xor
push
loop
mov
scas
push
or
xor
aas
das
jecxz
mov
adc
add
xchg
sbb
ret
gs
adc
add
fsubl
mov
pop
sub
aaa
cmpsb
addb
mov
idiv
adc
pop
ret
xor
or
imul
inc
fimull
call
dec
adc
cmp
insb
push
mov
pop
lds
dec
iret
into
and
call
cmp
push
cs
fiaddl
mov
addl
fs
inc
cmp
xchg
lock
push
sahf
dec
mov
cmpsb
push
push
fwait
push
frstor
shrb
and
sub
mov
mov
scas
fadd
filds
mov
enter
pop
add
insb
mov
or
xchg
ja
ljmp
adc
dec
faddl
in
int
xor
push
cld
pop
orl
sub
ds
ja
stos
ljmp
fbld
dec
js
cmp
mov
push
mov
imul
hlt
lods
fs
sub
adc
icebp
mov
pop
sub
lock
xor
mov
mov
inc
mov
add
cmpsb
sbb
push
pop
incb
dec
mov
xchg
repnz
xor
pop
gs
inc
cwtl
xor
pop
mov
das
jnp
add
enter
dec
and
mov
and
popa
jmp
sbb
push
rcr
push
idiv
adc
bound
adc
sbb
enter
inc
out
int3
mov
adc
and
or
mov
idivb
fwait
xor
adc
xchg
es
adc
adc
push
jg
js
in
dec
inc
pushf
lea
and
add
ds
jno
addr16
and
pop
dec
rorb
lds
cmp
lock
inc
pop
scas
fsubrl
mov
stos
and
gs
inc
inc
sarb
mov
xlat
xor
jmp
or
sub
fmull
xor
mov
shrb
mov
mov
cmp
pop
jge
xor
push
int3
and
inc
ja
or
fisubrs
imul
andl
filds
xlat
add
cmp
icebp
insl
dec
es
iret
popf
enter
mov
in
mov
in
aas
xchg
sahf
hlt
js
xchg
bound
pushl
inc
push
jecxz
and
test
xor
sub
and
xor
adc
or
sub
add
mov
dec
scas
jne
or
into
in
push
push
fidivs
out
push
orb
xchg
ja
mov
les
shll
and
or
mov
xlat
inc
aaa
xchg
cld
rorl
xor
mov
outsb
add
stc
in
iret
and
mov
pop
shlb
aas
sbb
adc
mov
lcall
cmp
stos
mov
subl
jbe
push
data16
rdtsc
mov
ror
loop
leave
xchg
inc
push
ljmp
or
popa
leave
je
iret
popa
pop
pop
pusha
mov
push
fnstcw
sub
orb
hlt
mov
or
mov
int
cmpsl
test
mov
adc
mov
sub
or
negl
sbb
or
psubb
mov
int
test
scas
stos
push
stos
stos
jmp
or
out
jp
mov
loop
dec
or
add
pop
xlat
loop
jg
push
xor
pop
mov
gs
pop
or
mov
aas
xchg
mov
rolb
pop
imul
cwtl
bound
aas
stc
sti
idivb
loop
in
clc
enter
adc
adc
out
dec
inc
or
shll
jp
test
das
roll
in
mov
in
sbb
repz
sbbl
xchg
mov
sbb
cmp
jp
mov
jg
repz
mov
fs
lods
sbb
xor
adc
and
repnz
xor
jge
mov
loop
jnp
inc
int3
jp
inc
cmp
xor
imul
pop
jns
ss
pop
lods
xchg
addr16
adc
dec
or
sbb
pop
push
xor
pop
mov
add
sub
scas
movsb
lret
mov
or
pop
or
mov
ds
mov
jbe
call
clc
jp
sbb
ja
jo
cld
mov
imul
xorl
and
loop
jmp
xchg
xchg
and
or
mov
imul
loop
dec
dec
das
lock
dec
jno
mov
leave
mov
aaa
in
add
out
push
mov
jp
push
mov
shll
icebp
lock
testl
xor
dec
add
jae
ja
je
sbb
jb
outsl
inc
xchg
inc
mov
add
dec
add
xlat
das
push
sub
cmp
popf
cmp
dec
fsubl
fidivs
xchg
les
pop
sbb
cli
daa
sub
vcvtsi2sdl
xor
xchg
out
mov
inc
pop
inc
xor
xchg
fdivs
icebp
mov
dec
or
dec
jbe
add
dec
outsb
mov
push
xchg
jge
adc
xlat
loop
addr16
cmp
xchg
add
imul
add
inc
addb
nop
lds
addl
hlt
cmpsb
cmp
adcb
daa
jecxz
loopne
subl
and
imul
mov
insb
cmp
rcr
movsl
mov
insb
movl
pusha
add
inc
cmpsl
mov
jae
pop
stos
mov
repz
repnz
out
scas
aaa
inc
lret
fidivrs
sub
jb
jb
and
jmp
xchg
cmp
iret
mov
sbb
js
or
fldenv
jnp
add
aas
adc
inc
cs
std
adc
sarl
push
push
and
js
mov
pop
ss
roll
ljmp
aaa
bndldx
hlt
loope
imul
jp
shr
int3
lock
mov
mov
scas
xor
aaa
ret
cmpsb
mov
mov
cwtl
lea
mov
sbb
cld
call
lock
dec
roll
add
cmpsl
out
cmp
xor
xchg
mov
inc
in
nopl
push
lea
faddl
jmp
mov
loopne
mov
mov
pop
call
xchg
mov
dec
jmp
fmuls
fs
dec
sbb
sbb
call
out
aas
push
outsb
adc
xorl
or
mov
dec
pop
adc
cmp
icebp
test
sti
mov
fisubs
test
add
mov
xchg
loope
mov
adc
mov
aas
jns
repz
cmc
test
xchg
roll
cmp
inc
rcr
pop
repnz
sub
xor
scas
ret
push
lock
std
imul
xchg
das
fisttpl
xchg
pushl
mov
inc
test
adc
aaa
cltd
adc
push
lods
inc
gs
loope
adc
add
pop
rolb
adc
inc
mov
imul
jg
mov
sub
dec
js
pop
icebp
inc
cwtl
lcall
sahf
and
jno
pmaxsw
mov
shll
adc
sub
adc
xchg
fsubs
int
cmpsb
push
fwait
and
xor
mov
xor
jns
add
push
mov
jge
decl
mov
pop
add
mov
lods
mov
mov
shlb
hlt
mov
inc
outsl
lock
out
stc
cmpsb
mull
jnp
or
jo
js
pop
adc
add
aad
lret
xor
or
push
push
adc
cld
test
std
mov
aam
adc
ja
rcrb
add
lds
hlt
sahf
cld
jl
or
shrl
lcall
icebp
xor
outsl
hlt
punpckhdq
mov
jb
sub
ss
mov
mov
andl
cwtl
jle
icebp
dec
push
decl
xchg
cmp
jnp
mov
pshufw
xbegin
lcall
pop
hlt
daa
loopne
mov
jmp
push
pop
dec
push
mov
aas
xor
sahf
mov
bound
imul
lock
adc
inc
pop
sub
arpl
shll
ffree
pop
xchg
mov
adcl
push
push
cwtl
push
xor
cvtps2pi
inc
jg
inc
dec
adcb
pop
lds
adc
icebp
lods
inc
out
stos
pop
push
mov
and
lcall
into
fs
push
jmp
sar
ljmp
mov
imul
xchg
movsb
fisttps
add
ret
mov
push
mov
pop
stos
test
mov
ficoml
sbb
adc
shrb
jge
mov
jg
inc
fidivs
pop
jnp
faddp
sub
aas
mov
leave
ret
fwait
shll
sti
shrl
and
lret
xor
arpl
popf
push
xchg
sub
cmp
movsb
daa
jmp
pop
notl
xor
push
mov
jg
cmpsb
sbb
or
add
imul
and
loopne
push
stc
mov
mov
inc
cmp
jg
sbb
adc
outsl
mov
lods
cmpsl
cmc
pop
std
jecxz
mov
sbb
dec
cmc
xchg
push
in
mov
jae
inc
cli
xor
sti
pop
icebp
pop
repnz
jle
add
data16
xor
cmp
dec
addl
mov
lcall
incl
pushf
push
outsl
mov
xor
int
incl
orb
cwtl
sub
jl
std
das
jns
or
pushf
push
orl
sbb
stos
adc
mov
aaa
aaa
push
test
pop
jo
pop
into
pop
jb
cmp
subb
lcall
loop
les
std
orl
or
fmull
mov
lret
and
repnz
aaa
and
or
pop
sub
jns
cld
or
jge
mov
adc
inc
fxch
pop
mov
sbb
add
sarb
ret
pusha
xor
push
stc
pop
movsl
sbb
es
push
dec
cmp
sti
adc
dec
sarb
push
pop
daa
pop
push
out
adcl
jecxz
test
dec
and
or
mov
addl
mov
sbb
push
fs
and
push
xor
iret
lods
mov
pop
mov
cwtl
les
push
dec
add
cmp
mov
push
jg
sub
pop
sbb
sub
mov
std
xchg
push
cltd
mov
or
fisttps
sub
sbb
fst
add
js
imul
addr16
icebp
iret
je
push
adc
mov
inc
inc
scas
inc
cld
daa
test
mov
sbb
mov
aad
sub
inc
fiaddl
add
mov
sbb
mov
mov
bound
fnstcw
adc
jo
pop
fdivrs
push
or
adc
scas
inc
dec
cmc
data16
xchg
cld
and
pop
pusha
or
pusha
xchg
or
sbb
xorl
adc
mov
sbb
pop
mov
mov
mov
xchg
xchg
pop
movsb
mov
push
dec
mov
test
lahf
movsl
xor
outsb
lock
mov
rcrb
jnp
pusha
loopne
std
ret
test
loopne
mov
test
rclb
xor
mov
cmp
dec
cli
in
adc
xchg
cmp
test
add
stc
xor
addr16
pop
xor
adc
cs
jg
add
push
adc
sar
dec
push
movsb
loope
jmp
add
dec
mov
rol
das
and
sub
xor
ret
aad
lods
and
sub
add
dec
flds
sbb
ret
push
ret
fisubs
mov
mov
add
push
adc
and
movsb
push
sbb
jns
xchg
clc
and
into
mov
out
add
dec
push
daa
adc
into
imul
addl
push
adc
ret
pop
add
lcall
push
inc
push
jbe
lods
test
or
into
or
pop
cmpsl
push
bnd
inc
fs
test
and
fisttps
fcoms
call
push
ret
mov
movsl
aas
pop
lret
mov
cmp
adc
adc
or
xchg
dec
xchg
dec
lods
xor
mov
sti
add
jae
mov
and
incb
mov
jle
aaa
lds
std
or
push
xor
jl
js
xor
sub
sar
rcrl
decb
xor
jge
mov
mov
or
inc
mov
fiadds
mov
arpl
adc
pop
int3
xor
push
nop
scas
cmp
scas
jl
inc
push
jbe
jne
inc
jmp
adc
mov
notb
inc
sti
dec
cmp
jae
filds
or
addl
out
or
and
lahf
and
mov
cpuid
xlat
les
test
mov
xor
adc
sar
popa
pop
inc
pop
jnp
xchg
ss
sub
aas
add
fidivl
loop
xor
ljmp
jp
repz
bound
outsb
out
xor
enter
shll
xor
ljmp
lret
add
shl
insl
daa
call
adc
lea
aad
push
std
mov
out
ss
mov
and
mov
pop
das
push
push
mov
pop
pop
lahf
xchg
fisubs
push
add
or
fwait
mov
push
mov
js
dec
dec
adc
mov
pop
in
popa
xor
adc
insb
pop
jbe
sbb
ffreep
or
lds
jg
lret
mov
cmp
pusha
stc
js
xchg
std
inc
dec
pop
sahf
or
inc
pop
push
mov
jbe
push
xchg
add
sub
dec
mov
cmp
jg
enter
aaa
lret
pop
inc
sbb
test
add
popa
loopne
lds
mov
pop
decl
stos
gs
aam
mov
lods
js
inc
pop
iret
adc
decl
lahf
dec
stos
fsts
fs
add
pop
cmpsb
inc
jb
es
xchg
scas
xor
adc
jb
int
test
imul
push
cs
int
inc
adc
in
jb
add
mov
add
pop
dec
lea
sub
mov
add
lock
int3
sbb
imul
xchg
add
add
popa
add
jno
ret
pop
cmp
or
popl
fimull
outsl
mov
ljmp
filds
outsb
cmp
mov
add
lds
mov
out
sar
call
push
xchg
mov
or
adc
and
inc
repz
rolb
xor
test
dec
jg
shlb
ret
add
push
mov
inc
pop
jg
scas
pop
sub
cmp
aad
or
ljmp
pop
adc
repz
or
dec
test
int3
aad
sub
jecxz
mov
dec
lcall
adc
mov
and
push
in
sub
or
stos
outsb
notb
lods
pop
mov
jle
je
hlt
pop
mov
aas
mov
push
data16
pop
pop
inc
or
and
or
stos
js
and
stos
lods
pop
add
std
jg
xchg
jo
dec
fiaddl
jmp
movsb
call
lods
push
negl
push
out
lret
push
in
loopne
das
insb
or
jns
mov
adc
xchg
rclb
push
and
pushf
cmp
add
loope
jecxz
hlt
call
fs
or
adc
xlat
cmpsb
test
pop
fcmovnb
push
outsb
int3
xor
mov
mov
inc
int3
test
pop
fld
lret
out
lcall
jae
out
insb
hlt
dec
xor
popf
call
xchg
cli
pop
mov
ret
or
pusha
ret
aaa
mov
shl
mov
fimull
xor
xor
ss
js
inc
and
push
jns
aas
lock
mov
xchg
shll
bound
imul
pushf
xchg
adc
imul
test
push
pop
add
cmpsl
mov
adc
js
add
jecxz
cmp
mov
mov
fadds
nop
shll
ret
filds
sarb
sub
add
addr16
js
enter
jbe
daa
add
lea
and
sbb
jg
cmp
roll
push
add
sub
jl
push
jo
movsbl
rorl
shrl
iret
mov
loopne
or
int
mov
cmp
aad
fistps
jnp
enter
pop
jmp
cli
pop
cli
repz
mov
dec
lods
faddp
mov
jecxz
lods
loope
xchg
adc
lea
jge
adc
cmpl
mov
notl
xor
and
add
fdivl
push
cli
xor
and
adc
mov
sub
push
je
jg
xlat
stos
sub
sub
push
jmp
stos
hlt
fwait
sub
idivb
cmc
jmp
jno
rcll
in
sub
repnz
adc
dec
std
pop
test
or
cltd
inc
hlt
addb
jo
dec
hlt
outsl
cs
inc
gs
fstp
and
aas
fbstp
and
insb
stos
sbb
or
clc
xchg
or
jg
jl
jge
scas
adcl
xor
pop
cmp
cmp
mov
lods
into
pop
lret
js
push
cmc
out
popa
inc
add
cmpsl
out
fdivr
dec
call
pop
or
incb
les
dec
and
adc
and
or
or
sti
mov
cld
and
jl
daa
loope
pop
popf
fdivr
mov
js
jmp
inc
cmp
pop
loope
and
gs
xor
mov
and
pop
push
pop
les
sbb
lods
insl
mov
add
add
cwtl
ds
aam
lcall
insb
mov
or
pusha
lahf
dec
xchg
rcrb
jg
adc
in
test
xchg
rclb
push
jae
cmp
bound
nop
add
mov
dec
adcl
shr
xchg
add
adc
cmp
jg
icebp
push
and
stos
dec
shll
push
clc
les
out
mov
mov
out
xchg
cmp
jle
sub
sarb
push
addl
inc
in
sub
lret
dec
gs
push
sub
and
out
dec
lock
popf
mov
adcl
ret
fdivs
es
lret
or
add
cmp
out
add
jmp
and
mov
scas
jne
int3
mov
add
mul
xor
ljmp
nop
pop
std
or
xchg
cltd
xchg
add
int
sbb
mov
ret
and
jmp
scas
inc
xor
sub
incb
inc
das
lcall
inc
or
cmpl
cs
aaa
ret
push
mov
sub
add
mov
push
dec
inc
xchg
dec
jb
lods
stos
into
mov
mov
insb
orb
icebp
aad
jg
jns
mov
and
add
test
push
imul
push
mov
stc
add
fisttpll
test
ljmp
sahf
cmc
testl
sbb
mov
insl
rolb
pop
jge
inc
xchg
rcl
xor
or
or
and
add
xor
cmpsl
outsb
icebp
jl
in
or
fistl
pop
cli
icebp
lods
int
cmpb
fcmovnb
push
cmp
imul
icebp
pop
sahf
ja
stos
adc
pop
sub
push
das
mov
xor
dec
mov
jae
mov
dec
or
bound
jae
clc
imul
jno
sub
into
xchg
inc
es
xchg
mov
arpl
in
fstl
and
push
rcl
dec
pop
sbb
adc
xor
pop
or
add
aas
pop
jns
fnstcw
jne
sbb
mov
lahf
sub
sbb
std
in
mov
sbb
sbbl
sahf
inc
pop
sub
cwtl
add
xor
addb
jl
and
dec
cmp
in
in
movsl
and
jno
divb
aam
lods
flds
cwtl
pop
adc
scas
in
pop
jge
add
gs
int
imul
ljmp
sbb
mov
push
scas
sub
xor
stos
fistpl
jecxz
divb
sbbb
les
push
mov
dec
out
aad
cmc
mov
test
sub
aam
xchg
mov
pop
ret
jmp
cmp
and
dec
sbb
add
push
and
imul
cmovns
add
aaa
mov
mov
and
dec
aam
xlat
push
cmp
pop
popf
push
dec
mov
cmpsb
add
pop
mov
inc
int3
mov
push
inc
inc
and
mov
jl
pushf
xchg
mov
pop
adc
adc
sbb
cli
into
jnp
xor
or
cmp
dec
rclb
adc
push
sub
inc
xor
insl
pop
enter
cmp
test
js
mov
pop
in
cwtl
sar
lea
lret
rol
and
daa
cmp
insb
jp
xor
cmp
stos
imul
cltd
jp
push
jp
cmp
pop
pslld
add
cld
add
dec
mov
push
sub
mov
cmp
jp
sub
mov
jnp
jo
hlt
fsubrs
sti
outsl
push
and
cmpsb
adc
xorb
out
inc
rorl
push
mov
test
mov
inc
pop
fwait
mov
sar
adc
jno
or
dec
jne
sbb
mov
adc
mov
xchg
add
push
inc
xchg
jge
das
aaa
mov
jg
pop
divl
sub
dec
push
or
in
add
mov
test
cmp
adc
ds
mov
popa
pop
cs
scas
adc
sbb
and
ljmp
xor
inc
cmp
sub
aad
jae
add
ret
rclb
adc
ret
dec
xlat
xchg
adc
jne
out
adc
mov
push
ret
xchg
adc
jmp
xchg
and
push
cmp
nop
add
daa
popa
xor
lods
mov
mov
push
push
pop
sbb
add
xchg
cmpsl
cmpsb
pop
cmpsl
pop
decb
sub
cli
sub
andl
ret
push
jae
and
out
add
or
orb
sub
out
sub
dec
test
dec
push
jle
dec
mov
ret
mov
insb
mov
cli
in
imul
jno
rcll
iret
xor
mov
mov
xchg
or
dec
mov
add
imul
nop
inc
jb
push
xchg
daa
aas
or
xchg
cwtl
add
test
addr16
or
ljmp
jp
or
pusha
cmp
jle
inc
test
adc
mov
xor
jb
testl
dec
adc
in
ss
hlt
xor
add
push
adc
dec
in
sbb
pop
adc
and
daa
es
movsl
add
cmp
mov
ret
xchg
ds
divb
add
lahf
call
test
pop
xchg
aad
push
jnp
xor
mov
popa
jmp
jecxz
ss
adc
inc
js
loopne
sbb
jne
shl
inc
add
enter
mov
inc
imul
xchg
ljmp
test
movsl
cmp
jge
sbb
bound
xchg
repnz
dec
sarl
mov
push
pop
dec
sbb
ret
hlt
insb
popa
mov
or
loope
mov
cmpsb
shll
push
pop
cwtl
lods
inc
in
insl
test
add
sbb
push
sbb
dec
adc
jbe
push
sub
aam
lock
cwtl
xor
into
lods
inc
lods
pushf
or
in
aaa
pop
xchg
rol
sti
nop
mov
inc
lods
mov
add
pushf
fisubrl
mov
nop
cmpsb
adc
clc
add
and
add
inc
add
dec
popf
inc
rcl
insl
push
mov
data16
aad
mov
ds
aam
sbb
mov
loop
dec
adcl
xchg
mov
les
pusha
and
les
push
icebp
in
mov
mov
sti
inc
lea
in
or
or
jne
xor
add
lock
mov
sbb
jle
inc
and
cmp
xor
dec
daa
jo
xlat
jae
lret
lods
xchg
cmp
cmp
dec
fldl
push
mov
mov
fisttpll
shlb
inc
dec
dec
sub
dec
daa
or
lret
cs
sbb
ljmp
jo
js
insb
icebp
in
cmp
push
nop
int
call
fsts
jl
sbb
inc
fcmovnu
cmp
push
add
call
cmp
out
scas
push
jg
insb
lahf
jg
mov
xor
out
sar
pop
or
add
data16
sarb
sbb
or
clc
jne
and
scas
push
rorl
inc
repz
add
jecxz
shl
loop
call
sahf
ror
rcll
ror
daa
into
xor
jo
mov
or
fucomi
mov
jmp
and
pop
adc
lcall
shrl
leave
test
out
popa
sbb
lret
push
dec
jl
out
out
les
jg
add
fs
out
sbb
sbb
insl
cmp
cltd
sbb
ljmp
gs
es
xor
push
rcrl
cmpsb
cld
pop
lods
add
pop
xchg
insb
adc
popa
jecxz
mov
adc
pop
add
sbb
and
inc
popa
jno
inc
rorl
imulb
pop
xor
xor
adc
xchg
and
adc
fcmovnbe
cmp
push
movsl
lods
mov
cmc
xor
out
lret
add
cmp
subb
stos
jae
into
push
jg
pusha
shll
int
xchg
or
xlat
sub
dec
subb
push
adc
stc
or
psrad
sbbl
ret
fstpl
or
lret
arpl
jbe
test
jecxz
cld
mov
pop
cmp
pop
or
xchg
jno
int
add
or
xor
test
or
xor
jne
nop
in
jp
ljmp
gs
js
aam
push
push
dec
pop
jmp
inc
sub
xlat
stos
ljmp
mov
jb
mov
cltd
xor
jmp
test
add
cwtl
setae
push
scas
cmpsb
jge
ficoms
sahf
icebp
xor
mov
and
cld
xor
pop
mov
cmp
ficomps
cmpsl
cmp
insb
inc
xor
or
pushf
movsb
test
adc
addr16
cmp
push
sub
cmp
inc
sub
jp
es
arpl
out
mov
std
js
sbb
jns
push
ss
dec
int3
xor
xchg
sbb
mov
jecxz
sbb
dec
add
repnz
repz
mov
push
mov
int
sarb
repnz
test
leave
or
mov
push
xchg
mov
xor
pop
cmp
cmc
adc
movsl
out
in
mov
push
rorb
add
pusha
adcl
mov
push
and
inc
xchg
xor
lds
mov
dec
xchg
cmp
sub
jmp
push
mov
test
xchg
xchg
gs
and
mov
push
sbb
inc
lret
cmp
test
pushf
or
dec
incl
cmpb
iret
hlt
mov
pusha
and
cmp
push
push
add
les
in
enter
sbb
loope
pusha
push
mov
into
mov
pop
mov
leave
sub
and
mov
inc
dec
inc
das
sbb
aaa
arpl
inc
push
inc
lret
or
jbe
arpl
or
clc
hlt
add
ja
pop
daa
pop
mov
mov
mov
xchg
mov
sbb
pop
das
fs
xor
adc
mov
sbb
or
jge
jnp
mov
cmpsl
gs
imul
icebp
mov
ss
pop
je
lods
fmulp
cmp
arpl
lods
rcll
xchg
addl
mov
ljmp
jp
jle
jb
cmp
in
sbb
fisttps
cmp
sahf
popa
sub
popa
in
dec
js
mov
jle
sub
ret
ret
scas
mov
and
js
adc
inc
dec
inc
aas
clc
cmp
jmp
aaa
push
sub
daa
push
adc
pop
movl
or
loop
push
mov
sub
or
das
out
fwait
test
push
lcall
test
jge
mov
add
pop
dec
mov
jne
test
call
push
mov
and
cmpsl
fisubl
cmp
lods
jge
and
cmp
sbb
mov
ret
loop
cltd
notl
or
mov
cs
adcb
sub
daa
lea
dec
dec
pop
add
lds
int3
outsl
in
jge
shl
sub
push
mov
xor
add
or
mov
fcompl
andl
inc
daa
sub
inc
adc
xchg
int3
aas
jns
shrb
xor
adc
xorl
mov
mov
iret
cmc
cmp
xchg
jne
mov
push
shll
xchg
or
gs
in
cmp
push
imul
xchg
adc
add
dec
push
jo
mov
xorl
imul
or
xlat
push
in
ficomps
sbb
mov
icebp
mov
push
push
cmp
and
add
inc
sub
stc
mov
popa
adc
push
dec
repnz
add
xchg
cmp
mov
pop
jmp
sub
nop
shlb
push
mov
lods
mov
aaa
and
in
or
push
adc
fdivrs
pop
xchg
cltd
ss
push
addr16
sahf
xchg
xchg
mov
daa
nop
ljmp
addb
fcoms
add
ja
popa
rcrb
dec
gs
and
icebp
push
adc
mov
pop
mov
mov
push
test
pop
scas
jle
push
testl
and
fisttpll
ss
test
filds
inc
scas
insl
cli
xchg
and
or
xchg
adc
and
aad
pop
sbb
xor
xchg
aad
aad
jg
xchg
add
dec
call
dec
xchg
daa
jo
mov
mov
mov
in
aas
dec
sbb
mov
pop
into
adc
fcmovnb
xlat
in
xchg
mov
or
loopne
and
cld
inc
popf
add
push
xchg
orl
ss
mov
data16
adcl
jg
mov
popf
jl
lahf
stos
mov
sbb
imul
cmp
frstor
cmp
lret
rorb
add
mov
loopne
mov
mov
and
fs
nop
dec
loop
jecxz
sti
movsb
ja
fstl
jo
cwtl
dec
jnp
dec
lahf
push
pusha
int
mov
xor
pop
mov
dec
and
idivl
fs
lock
mov
jmp
and
mov
xchg
jae
sub
pop
popa
dec
sbb
out
mov
mov
xchg
jecxz
pop
inc
movb
sbb
movsl
push
movsl
inc
cmpl
mov
and
stos
jmp
dec
jo
lods
xor
xchg
das
cwtl
sub
int
or
scas
pop
add
push
in
push
int
mov
imul
sub
inc
stos
iret
cmp
adc
adc
clc
mov
add
inc
divl
loop
inc
nop
cmpsl
testb
aad
add
jl
imul
push
mov
in
inc
lds
cli
mov
outsb
movsb
mov
adcl
adc
into
movsl
add
jno
or
pop
fildll
add
inc
pop
inc
add
pop
in
dec
xchg
cmc
int
or
mov
lea
xchg
sbb
sub
in
mov
jecxz
in
stos
xchg
addr16
xchg
fbld
iret
rol
mov
dec
pusha
mov
in
or
dec
movb
je
inc
xchg
loope
jle
das
lcall
add
lea
add
push
jg
insl
stos
cmp
sbb
rorb
inc
je
dec
inc
mov
sbb
daa
leave
sub
mov
and
push
rcr
xor
js
inc
in
jns
std
fimull
popa
push
cmpsb
mov
sbb
aas
scas
ret
push
sbb
lods
sbb
fcompl
loope
add
into
fxch
cmp
repnz
mov
stos
xor
sub
mov
jmp
je
jnp
popf
mov
fists
cmpsb
lods
stc
shll
lret
ret
test
mov
inc
in
sbb
mov
mov
out
int3
jns
adc
orb
fnsave
fwait
jecxz
fisttpl
sbb
xlat
dec
in
dec
jecxz
xor
ss
pop
and
cmpl
fistpll
loope
enter
add
inc
jnp
adc
pop
xor
loope
lcall
xor
insl
sub
sub
gs
sbb
add
add
mov
call
sub
mov
cltd
fcoml
std
push
inc
jg
int
and
mov
stos
lock
xchg
iret
adc
push
mov
je
or
xorb
rolb
pop
inc
stc
sbb
pop
lock
or
push
add
aam
pop
mov
cmp
mov
mov
bswap
xchg
ret
test
rolb
lea
lods
mov
adc
dec
lds
loopne
pop
loopne
xor
sub
aam
adc
pop
jge
mov
add
aas
pop
sbb
rcrb
lahf
jmp
rorb
push
inc
ret
lcall
in
pop
pusha
adc
sbb
xchg
sub
movsb
xor
jo
test
or
push
jo
xor
fldl
sbb
dec
cmp
mov
scas
aad
mov
cmp
inc
adc
cmp
fsubrs
arpl
jg
add
faddp
and
jnp
push
rorl
xchg
and
fmuls
lock
jmp
inc
xorl
inc
dec
clc
sbbb
ret
cwtl
xchg
pop
jae
test
cmp
movsb
jnp
dec
jne
jo
mov
push
ja
inc
or
jp
mov
mov
jecxz
xchg
and
clc
lock
mov
stos
xchg
sti
pop
mov
mov
xchg
loopne
cmpb
jmp
sub
pop
jno
pop
mov
loope
and
xchg
movsb
xor
mov
mov
movsl
inc
daa
hlt
jl
mov
pop
fstpl
add
insb
and
outsb
int
mov
jge
jg
xor
jmp
push
insl
repnz
mov
push
repnz
loopne
clc
imul
int3
inc
cld
mov
scas
sub
stos
xor
add
hlt
movsl
or
sti
in
test
xor
loop
notb
aaa
bound
test
jo,pn
scas
or
inc
inc
inc
scas
std
nop
add
jle
push
sbb
xchg
scas
jge
cmp
mov
fimuls
push
or
fwait
push
mov
clc
sub
movl
xchg
jp
shlb
or
negb
cmp
fstpl
xor
jbe
test
imul
cli
loope
push
adc
inc
fistps
sti
mov
scas
outsb
and
sub
mov
stos
pop
loope
rolb
sub
mov
pop
xor
addl
into
lds
mov
and
pushf
pop
add
inc
shrb
pop
daa
cmc
ljmp
cli
adcb
mov
xchg
mov
jb
jle
mov
and
push
popa
jnp
in
ror
and
cltd
pop
mov
pop
popa
xchg
xlat
xor
icebp
xchg
jbe
lret
stos
dec
adc
inc
add
jnp
mov
and
flds
cltd
out
call
inc
movsl
jmp
inc
pop
cs
xchg
imul
inc
xor
cli
lods
pop
push
lea
and
test
jecxz
and
push
loopne
jl
adc
shll
ds
fisubl
dec
lea
push
or
mov
xchg
mov
pop
sub
sti
test
mov
sbbb
in
mov
gs
shll
fdivl
dec
cmp
lcall
mov
mov
mov
stos
cmp
outsb
or
rcrl
adc
pusha
xor
pop
sbb
pop
jo
xchg
xchg
rclb
pop
add
mov
fildl
xor
cld
sti
mov
jg
loopne
loope
push
add
rorl
xchg
adc
pop
xchg
push
repz
and
outsl
divb
lcall
imul
scas
les
adc
ficoms
repz
fwait
je
add
xchg
xor
push
popf
push
jmp
aaa
cli
push
sbb
sbb
mov
and
mov
pop
cmp
mov
fstpl
aad
sub
js
and
sub
pushf
stos
mov
fldt
and
jmp
inc
movsb
pop
sbb
fnstsw
jle
inc
outsb
pop
mov
in
fsub
nop
test
lds
inc
ja
push
dec
mov
sbb
js
xchg
add
or
clc
gs
mov
xchg
sub
cmp
lds
push
rcrb
cmp
icebp
sub
loop
les
in
or
ret
jle
cld
in
iret
test
mov
mov
cmc
mov
mov
dec
mov
mov
pop
es
shlb
les
push
insl
movsl
pushf
pop
and
xor
sub
out
in
mov
jp
pop
je
xchg
out
shr
andl
push
inc
push
add
lock
test
mov
add
sti
dec
jno
or
cmp
cmp
js
psubd
xchg
rclb
lcall
push
loope
jae
nop
dec
adc
and
je
cli
je
pop
je
dec
lcall
jg
add
loope
add
aam
inc
dec
cld
lods
iret
aas
push
incb
push
or
jge
xlat
and
mov
sahf
xchg
insb
add
mov
mov
or
inc
imul
inc
xorb
mov
jne
push
mov
cmpsl
pop
xor
jnp
stos
daa
in
or
inc
mov
aaa
push
jl
in
inc
push
icebp
dec
out
lcall
push
jno
icebp
inc
jmp
push
and
lock
sub
int3
inc
pop
lahf
jp
into
lods
lret
imul
lock
mov
leave
mov
pushf
in
repnz
aam
mov
hlt
jb
daa
adc
xchg
dec
jbe
aas
loopne
test
std
xchg
cli
rolb
in
dec
jmp
cli
jle
aam
pop
jno
repz
push
jecxz
nop
imul
out
fnsave
lock
dec
jge
or
ljmp
sbb
jl
cmpsl
mov
idiv
mov
imul
lea
mov
cmp
pushf
mov
outsb
dec
bound
out
aas
mov
aaa
dec
inc
and
cld
adc
push
mov
cmp
mov
jne
cmpsl
lock
jmp
sub
notb
adc
insl
icebp
insb
lods
mov
mov
sub
cmp
cmc
inc
inc
mov
jmp
jl
ss
rorl
jne
bound
mov
inc
loopne
adc
xchg
jbe
xlat
xor
sahf
push
cwtl
add
mov
jecxz
lea
mov
dec
call
xchg
mov
loopne
dec
les
lret
jns
std
testl
cmpb
movsb
or
xor
in
pop
out
std
cli
xchg
jp
sub
mov
sbbl
and
loope
pop
pop
lahf
cld
and
adc
xor
or
push
adc
into
adc
sub
mov
insl
sub
jge
subl
imul
nop
jnp
lods
insb
sub
mov
rcr
enter
xchg
mov
stos
add
pop
mov
push
out
ds
fbld
cld
push
pop
cmpsl
loopne
push
cmpsl
sub
das
aam
xchg
sub
xchg
mov
popf
test
das
iret
movsb
test
xor
cmp
fidivrl
push
push
pop
mov
jae
push
push
test
clc
sarb
pop
sbb
pop
sar
cmp
xchg
test
xor
popf
mov
ds
push
inc
std
jae
jae
test
add
jb
inc
sti
leave
xlat
das
xor
jbe
pop
adc
loop
xchg
into
rcll
mov
mov
arpl
sbb
push
sbbl
ds
in
cmc
shr
out
sbb
mov
mov
xor
sbb
cmpsl
leave
push
mov
gs
jge
pop
lret
sbb
lea
sti
sbb
insl
fdivs
out
mov
adc
push
ss
loope
push
jae
cmp
repnz
imul
pop
mov
mov
xchg
dec
inc
popa
scas
imul
jbe
shlb
adc
fwait
scas
or
sub
add
lahf
outsl
je
hlt
inc
cmpb
mov
xor
iret
outsb
sub
nop
test
ret
ss
rorl
jnp
aam
inc
add
mov
jns
cmp
jo
cmp
mov
pop
adc
adc
and
les
sbb
pop
jno
jb
insb
inc
mov
mov
sbb
pop
cmp
aad
lret
xchg
mov
iret
in
lock
loopne
cld
push
pop
lods
push
dec
xchg
negl
fdivrl
negl
aaa
xor
lods
add
inc
loope
mov
setg
and
and
lea
or
mov
mov
mov
andl
jl
jo
stos
jmp
leave
lods
push
xchg
pop
xchg
rorb
xchg
and
xchg
mov
insl
mov
mov
cmp
push
mov
inc
cmp
sbb
cmpsl
add
scas
push
pushf
mov
pop
inc
or
cwtl
movsb
scas
xorb
fucomp
push
mov
cs
xor
pop
lret
cmp
or
sub
out
scas
cmc
out
stos
aaa
das
repnz
and
div
sbb
jl
ja
pushf
ffreep
sbb
rolb
add
inc
inc
xor
or
adc
andl
mov
pop
loopne
sub
enter
add
fsubrp
add
add
fldenv
shll
insb
and
lds
mov
mov
mov
xor
cmovo
mov
or
mov
pop
aam
push
sbb
std
mov
fwait
sarb
jmp
les
cmp
loope
lds
scas
dec
popa
insb
jo
pop
clc
jne
inc
fadd
and
pop
cmp
adc
sbb
sbbb
loopne
and
push
push
adc
leave
pop
pop
ret
pop
push
jle
push
mov
jecxz
mov
xchg
decl
imul
int3
sub
adc
mov
xchg
into
bswap
movsl
jbe
mov
dec
push
into
jmp
pusha
lea
stos
mov
fisubs
add
js
loop
loope
jae
sbb
clc
or
mov
aaa
jge
and
cli
in
les
push
or
sbb
add
pop
mov
ret
xor
xchg
adc
imul
dec
lret
iret
adcl
fwait
stos
sub
movsb
sarb
orb
dec
xchg
dec
or
or
jmp
loop
pop
sbb
and
arpl
fwait
inc
inc
aas
add
lods
movsb
pop
std
insb
cs
mov
and
mov
sub
into
sbb
out
rorb
pop
shrb
push
aas
jle
icebp
fwait
icebp
rcll
popf
shr
adc
inc
add
jmp
and
xchg
mov
add
pop
mov
adc
pop
push
jae
sbb
push
into
jp
inc
pop
xchg
inc
out
mov
push
mov
in
xchg
and
pusha
fsts
gs
xchg
iret
loopne
mov
mov
cmp
sub
out
cli
add
test
sub
lret
dec
fucom
or
lret
jbe
mov
lds
not
sub
cwtl
je
xchg
in
mov
lcall
cmc
cli
sbb
mov
add
in
dec
push
push
ss
ljmp
adc
ja
cltd
jmp
movsl
or
pusha
add
push
dec
pop
sub
sahf
dec
pop
cwtl
or
xchg
addl
out
cmc
push
mov
insl
sbb
sahf
and
insl
rcl
jb
xchg
das
std
mov
lods
out
out
sbb
cld
jb
mov
out
push
jb
sbb
js
mov
icebp
je
jne
inc
mov
mov
xor
popa
adc
pop
lock
orb
cmp
sbb
jo
sub
inc
call
addl
add
jle
or
cmp
cmp
int
add
pushf
xor
jo
arpl
mov
int3
push
insl
mov
push
cmp
popf
fistps
mov
lahf
sub
movsl
inc
sub
xchg
jo
aas
adc
sub
pop
insl
fs
xchg
cmp
push
lea
nop
or
xchg
push
mov
cltd
pop
stc
rol
add
inc
cli
push
aam
movsl
mov
mov
test
subb
sub
ljmp
mov
xlat
je
data16
ret
mov
sbb
lock
or
popf
shrb
and
out
mov
movsb
inc
roll
sub
push
fsubl
and
movsb
xchg
add
cltd
and
jo
xchg
or
mov
adc
cmp
fucompp
adc
dec
inc
or
jno
xor
cmc
adc
jbe
rclb
jmp
lods
loope
mov
fxtract
outsl
add
cmp
adc
and
push
and
inc
xchg
xchg
js
jle
sbb
mov
pop
iret
lock
xor
add
pop
mov
mov
xor
pop
dec
cmc
push
clc
movsl
xchg
xchg
pop
cld
rolb
call
add
imul
inc
mov
cmp
fldcw
mov
inc
mov
scas
jge
insl
lahf
pop
js
testl
test
cltd
inc
sbb
adc
push
int
adc
mov
enter
xor
outsb
mov
sbb
sub
repnz
mov
pop
mov
jnp
in
iret
pusha
and
cmp
out
mov
inc
cmpsb
sti
pop
cmc
fiaddl
pop
xlat
mov
jne
mov
cmp
mov
call
adc
jp
add
xchg
add
add
rcrl
inc
inc
cmp
xchg
push
scas
loope
fildll
sbb
lock
int
add
jmp
adc
add
sbb
fildl
fs
repz
push
iret
xchg
push
sbb
and
rolb
in
es
pop
nop
inc
mov
movsl
out
test
adc
mov
iret
pop
sbb
sbb
rcrl
jmp
adc
sbb
and
push
cmp
cmpsl
sbb
aad
fcomip
push
scas
add
sbb
or
lret
push
dec
sysret
jne
clc
dec
lcall
outsl
push
cli
xchg
movsl
negb
popf
std
jmp
stos
jo
adc
xchg
stos
mov
inc
fdivrs
mov
jae
dec
repz
ficomps
and
xchg
or
mov
ret
xchg
loop
sub
pop
scas
sbb
imul
popf
cld
push
xchg
cmpb
in
and
add
mov
insl
mov
orb
fisttps
aas
inc
imul
lds
fwait
shrl
insb
icebp
and
adc
sqrtps
push
ljmp
jb
or
daa
push
clc
iret
mov
pop
rorl
sub
hlt
lcall
loopne
loopne
popa
lea
push
aas
int3
int
sbb
mov
mov
out
jl
push
dec
lea
and
xor
testb
mov
jecxz
pop
testb
ja
stos
jnp
mov
mov
dec
or
dec
fldcw
sbb
inc
xor
mov
and
mov
cwtl
xchg
cld
js
add
sub
inc
lahf
cmp
cmp
jecxz
ss
mov
dec
jecxz
js
pop
cmp
lea
ljmp
jl
xchg
jp
push
xchg
cli
pop
pop
add
scas
pmaxsw
adc
add
cmp
cmpsl
rolb
rolb
sti
sbb
mov
jae
sbb
ficoms
xor
adc
mov
add
add
cs
mov
cmp
sub
adc
xchg
jnp
shl
imul
xchg
ret
imul
ret
imul
jecxz
add
mov
imul
fbld
aaa
stos
jns
rolb
cmpsl
dec
stos
cmp
mov
andl
jae
mov
clc
aam
mov
cmp
sbb
xchg
jg
mov
bound
push
leave
mov
cmpsb
sbbl
inc
push
dec
push
mov
xchg
outsb
xlat
mov
test
jmp
push
lds
adc
add
es
inc
sbb
inc
loope
xchg
repnz
mov
add
sti
pushl
lahf
lret
ss
and
inc
int
out
or
pop
packsswb
pop
cli
es
mov
rol
mov
xchg
lock
lock
jb
pop
push
dec
xchg
shl
stc
push
dec
lods
test
xor
add
cs
xchg
jg
jmp
outsl
adc
mov
adc
imul
dec
je
in
xchg
fisubs
pop
add
in
add
mov
nop
cmp
loopne
sti
addr16
jne
push
jecxz
shlb
enter
in
subb
xchg
fstpl
loope
add
mov
dec
cmp
clc
add
frstor
loopne
pop
ror
scas
mov
out
inc
jle,pt
sbb
subb
cmp
pop
jbe
adc
xchg
and
loop
imull
iret
xchg
add
or
push
sbb
push
outsb
dec
jno
stos
pop
hlt
cmp
pusha
pusha
jb
loope
xor
add
andl
xchg
mov
out
filds
sub
aad
xchg
sbb
sub
imul
add
fildl
adc
jmp
adc
std
out
or
stc
scas
sahf
arpl
cmpsb
xor
pop
cmp
inc
xchg
add
mov
dec
ret
mov
jae
mov
xlat
lahf
xor
mov
scas
es
in
sub
nop
and
mov
out
into
and
pop
imul
pop
xchg
mov
pop
add
adc
bound
jecxz
xchg
cmpsb
cs
insl
add
dec
insb
push
popa
dec
or
jne
push
sub
add
add
jae
cmp
outsb
imul
add
fistpll
cmp
jp
sbb
jecxz
lea
movsb
orl
stos
sbb
jmp
xchg
stc
mov
xchg
mov
cmc
or
jl
cmc
mov
inc
pop
or
pop
mov
or
int
cmpsl
lods
loopne
adc
cmpsl
ret
iret
lret
sbb
pop
in
out
inc
rcll
adc
lock
dec
sbb
add
push
add
gs
fadds
adc
jp
xchg
cwtl
movsl
jnp
movsl
iret
cmp
add
push
sub
je
sar
xor
cmpsb
mov
adc
dec
cwtl
shll
mov
shl
mov
and
mov
repnz
clc
inc
adc
xchg
pop
sti
out
jg
pop
xor
mov
sbb
mov
sbb
sub
addb
insb
mov
cmp
cmc
shrl
inc
or
int3
xchg
pop
lcall
mov
dec
mov
jbe
jmp
or
mov
in
jmp
cltd
lods
repnz
sbb
fmuls
and
sbb
adc
cwtl
and
inc
pop
clc
ret
ja
fsubrs
dec
mov
jo
push
call
xor
scas
daa
lods
mov
or
mov
mov
inc
in
pop
ljmp
cmp
mov
mov
push
mov
or
shlb
pop
nop
aad
sarl
mov
pop
ja
push
xor
fsubp
cmp
jle
pop
pop
out
int
pop
jge
mov
insl
das
test
push
jo
xor
jnp
push
inc
out
jg
mov
inc
adc
flds
sub
sbb
movsb
jg
mov
push
leave
js
ljmp
adc
or
outsb
mov
mov
inc
std
push
dec
fists
fimuls
push
aaa
ret
jne
add
lahf
sbb
xchg
push
add
popf
adc
cltd
inc
push
pop
sbb
dec
inc
jno
insb
push
addr16
in
bound
xchg
rcll
add
movsb
in
push
fcoml
adc
cmpsl
cmpsl
imul
int
lods
mov
loope
rcrl
test
fistl
lret
ljmp
cmp
jp
fimuls
call
cmp
mov
push
mov
lods
stos
cmp
adcb
fadds
sub
dec
dec
jae
cmp
cmp
inc
pop
pop
mov
rorb
mov
push
ror
and
add
add
inc
push
fsubrs
pop
or
std
popf
lret
rcll
insl
loop
call
sbb
cmp
sbb
mov
add
ret
mov
loop
daa
dec
cmc
ja
jecxz
xor
stc
sub
sbb
lahf
lock
aad
test
inc
xchg
stos
loope
sub
adc
sub
rolb
fcmove
push
add
inc
inc
rcrb
push
ss
aas
push
nop
pop
adc
sub
jbe
in
pop
cmp
in
mov
scas
clc
jecxz
pusha
ljmp
ds
cli
in
or
and
jbe
jo
cmp
adc
in
lret
mov
jp
lcall
sar
inc
fiadds
pop
pop
xor
rcll
shrl
decl
mov
lahf
lods
sbb
and
lcall
jns
jp
out
icebp
andb
aad
inc
or
stos
push
ret
adc
cli
leave
outsb
scas
or
bound
ljmp
in
test
call
dec
fnstenv
mov
or
cmp
ss
in
hlt
in
fs
sti
call
or
pusha
sbb
cs
mov
cmp
xor
xchg
xorl
push
or
inc
js
ret
insb
dec
lods
push
mov
js
push
xor
cmp
push
cmp
xor
pop
adc
dec
shr
movsb
testb
mov
fisubl
int3
sbb
lods
xchg
xor
mov
add
jl
jne
xchg
dec
push
jecxz
inc
sbb
fistpll
add
loope
inc
lods
das
push
add
pushf
sbb
cltd
push
shl
xor
ljmp
push
or
cmpsb
cwtl
gs
mov
in
cmpsl
aam
sub
pop
cld
pushf
clc
adc
xor
cmp
enter
mov
push
inc
imul
gs
pop
pop
adc
add
insl
out
push
data16
jnp
bound
lock
pop
popf
ret
xchg
pop
sub
leave
in
add
lret
sbb
pop
lcall
jae
jge
xchg
xor
mov
lcall
test
xor
sbb
mov
inc
cmp
cld
decl
mov
mov
sarb
cli
dec
cld
popf
and
in
and
test
inc
xchg
cli
subb
adc
stos
lods
xor
lods
ds
pusha
jbe
sbb
xor
xor
pop
imul
mov
sbbb
cmpsl
adc
test
in
dec
or
mov
lea
push
and
sbb
adc
jno
push
fidivl
pop
push
test
inc
subl
mov
jle
dec
loop
push
jae
aas
shlb
lret
mov
push
jg
xchg
fwait
int
sbb
rclb
lea
ss
xchg
xchg
push
cmp
xlat
sbb
add
sub
shl
lods
jno
push
pop
mov
add
fists
ret
ds
jbe
inc
mov
sbb
xchg
sub
push
xlat
das
jle
cmp
scas
pop
pop
das
jl
data16
dec
inc
xor
and
push
lods
mov
xor
mov
lcall
xchg
jmp
movsl
pop
xor
push
popf
inc
push
aas
jl
mov
inc
in
or
cmp
pushf
ss
movsl
dec
jge
xchg
cltd
out
addl
rcrb
mov
loope
clc
cwtl
add
push
aas
mov
or
loope
mov
push
sbb
inc
fwait
repnz
cmp
inc
loope
sbb
and
xchg
in
out
adc
pop
cs
push
outsl
iret
or
cmp
xor
xchg
mov
fidivrl
mov
adc
imul
xchg
jle
sbbb
jne
lods
aas
fwait
cmp
lahf
dec
add
mov
out
mov
adc
add
movsl
movb
les
mov
icebp
pop
arpl
sahf
xchg
pop
shl
cmp
cmc
mov
inc
or
dec
in
mov
push
sub
jl
jge
dec
pop
xchg
popl
sbb
sub
push
outsb
or
push
inc
sbb
sub
fwait
and
ja
inc
jle
jg
mov
shlb
jo
pop
jl
popf
loope
std
dec
lods
mov
adc
add
sahf
cmp
sub
dec
mov
jmp
mov
fsts
xor
stos
mov
adc
lea
xchg
lcall
into
jge
xchg
sub
lahf
ficoms
jbe
ret
jle
inc
rcll
aas
pop
inc
cmpsb
stos
xchg
or
add
pop
cmp
push
adc
ret
mov
sahf
adc
add
xor
rcrl
cli
dec
bound
pop
xor
sbbb
icebp
pop
arpl
out
and
sbb
fadds
pop
mov
rorl
inc
add
sti
or
pop
mov
and
dec
dec
xchg
aaa
pop
cwtl
pop
adcb
xchg
lcall
xor
push
das
jge
test
faddl
imul
icebp
rolb
incl
data16
int
mov
cmpsl
jb
xchg
xchg
sub
mov
dec
loopne
push
mov
fidivs
mov
stos
xor
aam
shrb
call
push
inc
push
adc
mov
imul
xchg
and
test
xchg
ds
ds
push
loopne
fdiv
pop
ljmp
jne
mov
insb
add
add
xor
mov
xlat
shrb
rclb
or
mov
cmc
mov
jl
pusha
sub
movsb
jle
push
sub
pop
push
shrb
ficomps
add
lahf
dec
add
shr
pop
jp
push
jp
popf
push
xor
adc
sbb
fs
sbb
mov
add
gs
repnz
mov
cmp
xor
mov
das
aam
push
mov
dec
mov
pushf
push
lds
gs
leave
pop
movsl
xor
sbb
sbb
inc
or
jo
test
push
repnz
cld
es
or
or
outsb
lea
sub
inc
loop
push
cld
je
cld
add
mov
rcrb
sarl
and
inc
mov
dec
test
push
ret
adc
and
call
push
incl
add
mov
adc
jmp
scas
ret
sbb
or
pop
jns
jl
cs
xor
xchg
mov
sbb
daa
add
les
push
mov
push
aas
adc
sub
pop
xchg
mov
mov
aad
fdivrp
adc
lahf
jnp
xchg
in
xlat
and
sar
loop
xorb
enter
loope
mov
jbe
pusha
push
xchg
push
adc
jno
in
sbb
or
cmp
dec
push
insl
clc
sbb
cmp
movsb
xor
and
lahf
mov
mov
jno
imul
and
loope
scas
mov
lock
lock
nop
outsb
insb
mov
cmc
dec
inc
out
in
adc
push
push
in
lret
xor
ja
inc
aad
stc
inc
xchg
pop
dec
or
jns
push
les
cwtl
and
cmpsl
xor
out
sub
mov
pop
pop
popa
cmp
jo
push
shrb
sar
roll
aam
mov
shlb
icebp
push
stos
dec
or
jmp
movsl
add
ret
inc
loopne
xor
rol
out
out
push
push
cwtl
mov
xchg
push
nop
out
pop
cli
orb
inc
lods
out
push
mov
inc
int
lock
xabort
mov
mov
jo
or
or
into
cltd
loop
push
mov
pushf
repz
mov
loop
jmp
xor
mov
cmp
mov
arpl
mov
lahf
mov
ljmp
enter
add
subl
cltd
lea
lret
and
fadd
iret
ret
xchg
addl
outsb
imul
lods
hlt
int3
and
test
add
pushf
pop
jp
loope
test
outsl
xor
insb
and
adc
dec
xor
jne
cs
pop
scas
int
rcl
iret
cmp
adc
lea
jo
jecxz
pop
and
cmp
sbb
xor
push
xor
divb
andb
aas
cmpsb
xchg
jp
lods
push
cmovno
push
xor
addl
cli
mov
jb
sbb
inc
idivb
leavew
fisubl
or
adc
addr16
sbb
das
mov
loopne
push
lret
sbb
hlt
sub
iret
pop
es
sti
jmp
daa
shlb
or
or
mov
sub
bound
push
pop
push
pusha
popa
fmull
mov
test
push
cs
add
andb
test
mov
ljmp
fwait
cwtl
push
jo
dec
inc
fsubrl
arpl
jae
inc
add
pop
loop
movsl
test
cmpsb
loopne
das
aam
and
out
movsl
sbb
sub
fimuls
sbb
xor
add
icebp
filds
mov
xchg
cwtl
push
shll
xchg
push
mov
add
cmpsb
jp
fdiv
push
mov
xorb
sbb
ret
imul
add
sbb
mov
ret
jae
jg
dec
mov
cmp
idivl
sub
mov
lods
adc
std
cmp
sbb
cld
aaa
jmp
iret
adc
shll
rcrb
mov
sbbb
pop
cli
inc
mov
rcrb
cwtl
lcall
gs
adc
repz
mov
loop
sbb
sbb
daa
dec
out
sbb
cmp
test
inc
and
jno
mov
fmull
test
sbb
mov
sub
mov
pop
pusha
sbb
push
pop
jns
mov
pop
dec
dec
inc
rcll
gs
testb
xor
ljmp
outsl
ljmp
xor
movsb
addb
movsb
xchg
loopne
lea
lock
stos
test
sub
pop
fsubr
lahf
les
mov
popa
cld
mov
fists
movsb
sub
andl
mov
sbb
addb
jl
ret
mov
dec
mov
pop
mov
js
and
dec
testl
and
add
lock
jecxz
cmp
xchg
xchg
fcoml
test
incl
or
xorl
adc
mov
daa
lcall
jl
stc
xchg
xor
xchg
or
je
stos
xor
inc
cmp
add
rol
pop
cmp
sbb
xor
adc
and
cmp
sbb
xor
pop
popa
lods
shlb
mov
and
pushf
icebp
push
and
fs
addl
stos
leave
add
imul
sub
mov
movsl
jb,pt
jns
xor
jmp
cli
cmc
push
jne
cmp
in
test
inc
adc
test
push
adc
enter
insb
movsb
inc
insl
and
jle
cmpsl
into
ss
sub
pop
clc
and
jne
sbb
xlat
les
xor
sbb
stos
jl
sub
push
push
pop
pusha
pop
or
adc
lods
setne
test
push
pusha
jne
and
inc
divb
cmpsl
sbb
scas
and
int
inc
pop
inc
and
cmp
adc
shll
rolb
xchg
iret
adc
fimuls
aaa
push
stos
mov
sub
es
gs
mov
test
mov
mov
xor
aad
mov
push
mov
test
stos
test
adc
xor
loopne
push
mov
adc
mov
xchg
mov
mov
sbb
testb
rclb
out
sub
or
nop
lods
mov
scas
pop
popa
mov
les
push
sub
sub
inc
sbb
loop
jo
loop
mov
jne
adc
or
movsl
js
ficoml
jg
mov
lods
dec
pusha
mov
dec
outsl
in
and
in
or
imul
pop
dec
mov
push
push
inc
dec
push
sub
dec
mull
iret
push
mov
sbb
popf
push
xchg
add
test
sub
cmpsl
test
shrl
setge
loope
test
sbb
movsl
and
cmp
jns
mov
adc
mov
ss
into
jl
inc
xchg
inc
xor
or
pop
cmc
mov
rorb
test
mov
gs
test
jne
dec
out
aaa
cmp
push
mov
mov
shll
cmp
imul
jbe
mov
sbb
sarl
aaa
cltd
out
lock
sub
rcrl
in
push
dec
ret
js
dec
lcall
faddl
icebp
pop
ret
and
stos
mov
or
or
insb
pop
adc
adc
and
pusha
adc
andl
and
push
loopne
adc
xor
adc
dec
add
loope
mov
pop
in
sahf
jbe
mov
push
call
pusha
mov
or
lods
jo
xorb
aaa
pop
jno
xchg
fiaddl
adc
mov
mov
aad
ljmp
jmp
pusha
xor
cmp
inc
cmp
aam
add
cmp
fsubl
dec
xlat
mov
adc
sbb
movsl
push
mov
cld
xlat
add
pop
fcmovnu
call
js
xchg
mov
inc
xchg
cmp
jmp
clc
jo
inc
test
out
add
and
pop
icebp
xchg
jmp
xchg
call
cs
pop
stos
lcall
and
lcall
cmc
and
fs
pop
lds
adc
ljmp
sub
jge
xchg
cmc
mov
push
push
mov
es
mov
push
add
insl
cmp
popa
notb
es
or
dec
daa
sbb
aas
dec
push
sbb
inc
add
jl
xor
xchg
or
adcl
pop
cmc
dec
cmp
adc
test
mov
repz
xlat
xlat
inc
add
add
or
cmp
cmp
mov
xchg
mov
xchg
dec
pop
inc
and
scas
push
sub
inc
dec
sbb
add
pop
adc
stos
fwait
mov
mov
cmpsl
pop
pop
jl
imul
add
cmp
sub
cwtl
repnz
bound
push
jb
push
pop
xor
ret
enter
and
jmp
pop
inc
mov
repnz
sbb
inc
pop
push
pop
call
dec
xchg
pop
in
fwait
sbb
iret
loop
push
cmc
clc
pop
sti
mov
pop
pop
or
cli
cmp
cld
add
jge
sbb
pop
jmp
adc
xchg
or
xchg
cwtl
dec
notb
loop
sub
xchg
sbb
stc
mov
lea
lea
call
mov
sub
mov
sub
ret
mov
adc
mov
sub
insl
add
rclb
pop
addb
xchg
xor
push
sbb
data16
sbb
lods
hlt
mov
dec
and
insl
xchg
pusha
mov
or
pusha
inc
xor
out
add
add
jno
inc
ss
or
jge
jmp
cmp
rorl
stc
jecxz
and
clc
adcl
stos
sti
aaa
cmp
movsl
mov
int3
sub
rorl
mov
outsl
testb
sbb
pop
in
aam
sar
mov
icebp
stos
fs
nop
xlat
dec
data16
add
fnsave
sbb
mov
lock
push
lcall
gs
mov
mov
push
cli
pop
jne
insl
sub
ds
outsl
rcll
and
imul
rol
and
ret
repz
je
cmp
lret
xchg
mov
lods
or
xchg
push
shrl
cld
aad
inc
cld
sbb
out
and
sub
add
and
mov
addb
hlt
and
xchg
aam
sub
lea
scas
pushf
stc
cmp
rclb
and
or
jmp
adc
popa
and
pop
lcall
fstl
scas
loop
xchg
js
lea
sarl
test
push
lds
ret
cltd
sbb
jl
cs
dec
lea
sbb
fisttpll
cmp
push
mov
push
iret
out
adc
sub
outsb
adc
lret
rolb
divl
adc
movsb
push
xchg
rorl
sub
js
aaa
adc
addr16
mov
push
or
inc
jnp
jno
pusha
pop
cmp
fidivrl
pusha
mov
or
push
sahf
aad
inc
dec
cli
mov
cmp
dec
test
add
push
loope
icebp
mov
xchg
xor
js
mov
jbe
ret
popf
jbe
cmpsl
xchg
push
int
push
addr16
cmc
jns
and
and
mov
sahf
add
push
cli
add
mov
cld
cwtl
cmp
and
jo
shrl
or
loope
and
xchg
dec
in
push
cmp
hlt
sbb
xor
lahf
sbb
jp
pop
test
mov
clc
in
aas
cmpb
xor
mov
jge
pop
mov
test
movsb
ss
rol
add
mov
iret
mov
mov
mov
mov
fadds
orl
shrl
mov
pop
cmpsl
and
jp
add
or
xchg
js
jbe
addr16
es
push
mov
ja
mov
xchg
or
mov
cmp
cmpsl
lds
pop
sarb
les
inc
int
add
shrl
pop
pop
in
add
xor
stos
or
fwait
add
sub
pop
jl
loope
xchg
rcr
xchg
push
sub
shrb
adc
movsb
repz
mov
cmpsb
push
cmc
adc
test
fsts
add
sbb
pusha
cmpb
dec
dec
xor
xchg
insl
and
addr16
and
in
into
jo
mov
adc
mov
xlat
inc
cmp
ja
jecxz
loop
pushl
frstor
cmpsl
or
inc
cmovs
enter
xor
jge
pop
mov
dec
clc
cwtl
pop
fidivl
jns
pushf
pusha
imul
dec
xchg
mov
hlt
xor
mov
and
movsl
adc
fdivrs
hlt
loope
sub
adc
mov
mov
cwtl
cmp
iret
lret
lea
fdivs
dec
pusha
mov
and
jecxz
sbb
sub
cmpb
mov
sbb
dec
pop
repz
lret
push
or
out
aad
ljmp
mov
lods
fwait
lods
pop
sub
adc
pop
jl
or
vmread
pop
wrmsr
sbb
lods
iret
xor
sub
sahf
imul
or
mov
pop
xchg
test
and
rorl
das
mov
sub
cmp
jp
paddsw
adc
cmp
idivl
imul
add
adc
adc
xor
sub
jg
xor
rcrl
or
push
inc
cltd
cmpxchg
andb
rorl
movsb
or
dec
lock
mov
in
mov
jo
cmp
pop
sbb
movsb
es
or
and
xchg
ror
add
test
lock
xor
pop
scas
mov
out
dec
sbb
add
insb
dec
and
mov
add
sub
js
loopne
rolb
sbb
int3
int3
fwait
sub
add
jmp
popa
cmp
mov
mov
ljmp
sbb
sub
and
jmp
cmp
fisubl
push
ret
jae
sbb
out
aaa
push
cmp
inc
push
jg
mov
inc
dec
and
push
pop
adc
hlt
aam
loop
mov
insb
ljmp
in
mov
fidivrs
add
imul
and
mov
in
adc
outsl
repnz
lock
xor
add
jne
dec
aas
aam
inc
sub
nop
adc
stos
or
enter
mov
cmp
xor
sbb
and
push
dec
adc
je
mov
outsb
test
xchg
insl
dec
inc
sub
sbb
dec
push
jo
adc
push
adc
inc
sbb
clc
shrb
cmpsb
mull
pop
jl
ds
movsb
cmp
rclb
ss
push
push
scas
jno
push
popa
test
add
fs
popf
mov
xor
xchg
enter
andb
mov
sub
fisubl
mov
insl
jne
push
in
imul
pop
ja
arpl
rcll
push
cmpsb
lods
mov
insl
add
push
inc
arpl
jle
inc
pop
xchg
mov
cmc
jmp
daa
push
jno
push
pop
fnsave
int
out
xchg
clc
cmp
lock
xlat
inc
xchg
insb
jo
mov
rolb
jns
pop
lods
movsl
mov
adc
and
sbb
aas
ret
adc
aas
dec
push
mov
mov
mov
xchg
fcomps
fnsave
dec
xchg
mov
pop
adc
xor
fwait
cmp
sbb
jbe
icebp
xchg
icebp
xchg
xchg
xor
inc
fdivs
test
pop
in
jg
fwait
xchg
push
fmuls
xchg
sbb
stos
adc
mov
jo
mov
mov
out
fnstsw
test
insl
loope
fists
imul
daa
fmuls
movsb
inc
lods
in
dec
cmp
pop
xor
imul
lret
cltd
xlat
sbb
arpl
xor
xor
dec
mov
jle
icebp
test
and
xor
call
loopne
stc
icebp
inc
jmp
flds
inc
push
hlt
cmpsb
dec
inc
or
xchg
inc
mov
pop
inc
xchg
adc
sahf
cld
lea
lea
fwait
jnp
and
adc
mov
push
lahf
sbb
jge
push
idivl
xchg
jmp
ljmp
mov
or
sub
sbb
out
pavgb
aaa
jmp
nop
pop
shl
xchg
pop
sahf
lret
mov
pop
pop
adcl
std
ret
jns
aad
cmpsl
xorb
fldcw
test
inc
xchg
push
cmpb
mov
imul
adc
pop
xchg
mov
xor
jnp
dec
xor
lds
cli
and
dec
test
sbb
sbb
dec
xchg
adc
add
rorb
jb
aam
mov
movsb
sub
mov
les
xor
push
adc
repnz
imul
dec
push
je
rcl
clc
xchg
mov
popa
mov
mov
addr16
cmp
and
fs
negl
adc
adc
cmp
mov
push
loope
or
jmp
fwait
in
jo
popa
add
inc
sarl
jp
movsl
mov
xchg
pop
aad
lret
sbb
stc
into
in
inc
push
and
lret
mov
jmp
out
add
or
jecxz
push
movsb
rep
cmp
stos
pop
mov
pop
inc
sbb
sub
cwtl
mov
insl
jecxz
lods
add
pop
fisttpll
gs
mov
aam
insb
pop
popf
enter
mov
pushf
xor
mov
and
enter
das
adc
test
call
addb
imul
add
inc
mov
outsb
adc
dec
cmp
repnz
inc
push
add
pop
sub
out
es
cmp
mov
test
adc
xchg
out
inc
jmp
in
test
add
adc
je
jmp
sbb
pop
test
aam
cmpsl
adc
ret
je
insb
cltd
mov
push
cmp
movsl
push
adc
fimull
sub
imul
xor
cmc
negb
cmpsl
ror
shlb
pop
sub
ljmp
mov
sub
movsl
outsb
mov
jae
adc
or
fldenv
push
stos
inc
adc
sbb
loope
data16
pop
push
mov
adc
stos
xchg
sbb
push
xor
dec
ss
das
cmpsl
xchg
ljmp
lret
push
sbb
call
mov
xor
xchg
adc
imul
fstl
mov
je
push
lret
jb
sub
xor
cmc
add
push
or
bound
jmp
or
pop
sbb
cmp
jns
and
cld
les
cs
cmp
addr16
mov
jne
sub
das
mov
jo
or
mov
jle
push
cwtl
mov
lods
xchg
mov
scas
ss
sbb
add
repnz
xor
fstps
and
cmp
pop
add
in
add
ljmp
sahf
jae
push
mov
mov
arpl
std
movb
fst
scas
test
jmp
mov
pop
ja
mov
and
cwtl
mov
test
mov
mov
dec
std
or
outsb
push
jb
pop
lock
cwtl
pop
xor
std
movsb
or
adc
ss
cmp
shrb
sbb
sbb
ds
into
ss
arpl
cmp
xor
adc
cmpsb
imul
pop
cmp
clc
pmaxsw
fisttpl
cmc
sbb
sub
mov
rcll
in
cmp
mov
neg
and
scas
push
ret
mov
pop
xchg
lahf
orb
test
inc
pop
mov
scas
aad
ret
enter
inc
scas
pop
int3
imul
lods
jg
mov
jno
data16
xchg
lds
int
sti
mov
cmpsb
sub
xchg
jle
push
sbb
imul
loope
push
add
addr16
in
les
fwait
and
mov
les
adc
adc
mov
leave
push
pop
add
or
jae
sub
shll
scas
or
rcrl
and
dec
jo
addr16
mov
push
shll
cli
jle
add
push
xor
aad
xchg
cmp
mov
dec
ja
sbb
lret
insl
loopne
shrl
jecxz
fwait
outsl
push
lcall
in
xchg
xor
bound
add
adc
cmp
xor
in
xor
jl
faddl
adc
loop
outsw
push
call
lcall
or
imul
inc
aaa
in
jo
sbb
add
test
and
sti
test
out
arpl
dec
icebp
arpl
mov
das
lock
roll
ret
jbe
adc
sub
ja
dec
shrl
or
daa
std
pushl
dec
jmp
call
xchg
mov
xchg
loopne
ja
inc
sbb
xor
les
mov
test
or
or
adc
es
jbe
adc
xchg
pop
movsl
dec
mov
inc
push
cmpsl
mov
pop
pop
js
and
jne
daa
add
pop
les
bound
inc
hlt
xor
out
repnz
sbb
push
movsb
clc
cltd
sbb
pushf
push
call
push
add
mov
subb
ds
leave
call
ret
mov
cmp
or
shrl
fcomp
test
andb
shl
jp
std
pop
loop
das
xor
cmpsl
daa
loope
adc
movsb
cwtl
dec
jg
xchg
mov
ret
es
sub
add
shll
xlat
sbb
mov
add
mov
and
xchg
aad
xor
mov
push
movsl
jl
pop
sahf
test
ds
cmp
js
adc
pop
pop
jmp
sysexit
sbb
jbe
add
cs
aas
repnz
cwtl
sbb
jbe
xchg
imul
jge
clc
bound
arpl
or
sbb
or
adc
scas
fsubrl
data16
mov
lahf
mov
jne
sub
mov
scas
mov
mov
test
pusha
loopne
or
jecxz
mov
dec
mov
clc
in
hlt
sbb
mov
mov
sbb
data16
jmp
call
xor
mov
dec
clc
sarb
add
lds
jl
add
mov
shl
test
js
push
mov
jbe
jmp
test
mov
stc
stos
test
mov
fisubrs
ljmp
sub
shlb
jp
out
xchg
ljmp
mov
lea
push
and
inc
sbb
dec
mov
daa
sarl
pop
fnstcw
insl
xchg
xchg
loope
negb
jmp
pop
adc
xlat
test
pop
cltd
add
add
divl
or
data16
push
test
std
push
cmc
leave
lock
pop
fsubrs
mov
cmp
loopne
jg
aad
mov
add
hlt
add
insb
loopne
xchg
das
sarb
jl
repz
adc
sub
add
xchg
sbb
or
sbb
icebp
jbe
repnz
dec
adc
outsb
ds
and
mov
lahf
mov
mov
fildll
mov
or
icebp
ffreep
lods
adc
inc
push
dec
sbb
adc
pop
es
fists
mov
mov
and
daa
fnstsw
lods
xor
out
sbb
pop
jl
test
cli
dec
arpl
and
add
clc
inc
push
dec
popl
int
je
in
das
stc
mov
pop
mov
cmp
je
imul
jle
jae
fs
loop
jge,pn
ja
mov
push
push
cmp
inc
mov
mov
icebp
bound
mov
fildll
test
pop
test
push
inc
cwtl
out
shlb
mov
cld
in
into
sub
and
add
bound
bound
into
ds
mov
clc
scas
adc
stc
pop
aas
or
imul
sahf
test
hlt
push
out
mov
xor
lahf
pop
cmpsb
andb
filds
push
adc
push
sbb
les
inc
xchg
movsb
insb
mov
in
lret
add
cmp
dec
adc
jno
loop
mov
loopne
add
cmp
iret
push
mov
bound
mov
mov
scas
fs
repz
fstpl
andl
loopne
add
std
fdivp
insl
lock
insb
sar
lock
mov
xchg
sahf
add
mov
loope
mov
or
les
jp
push
fsubrs
fidivrs
dec
adc
mov
js
pop
lahf
popf
dec
lock
aas
imul
test
cmpsb
test
xchg
outsb
daa
jg
sarb
jnp
cmp
aad
cmp
xor
sbb
inc
clc
les
mov
adc
cltd
outsb
mov
cmp
push
or
adc
fdivrl
popa
popf
movsl
cmpsb
adc
or
mov
cmp
mov
xchg
jno
mov
lods
stos
lods
pusha
aaa
pop
inc
mov
push
add
int3
and
or
ret
mov
bound
push
mov
pusha
scas
fbld
add
push
cwtl
call
cld
out
fbld
enter
jnp
ljmp
cmp
jecxz
push
and
mov
outsl
out
push
inc
xchg
push
dec
cmp
jno
inc
adc
subl
lahf
push
ret
jle
icebp
call
js
mov
inc
mov
jne
push
or
mov
dec
cmp
or
pop
mov
push
adc
add
cmc
lahf
mov
pushf
inc
imul
jo
push
int3
lea
push
popf
mov
jecxz
mov
stc
xchg
jg
mov
mov
xlat
pop
dec
push
jg
push
pop
jnp
jae
mov
push
loop
scas
push
rolb
sub
das
in
orl
fadd
clc
pop
icebp
jl
and
sti
mov
lret
mov
aas
out
cmp
sbb
add
in
sbb
repnz
outsb
fbld
lds
outsb
dec
pusha
mov
xchg
push
or
mov
roll
and
loopne
arpl
push
ret
fsubl
loop
jmp
xor
dec
addr16
lock
hlt
sbb
mov
daa
inc
xchg
das
dec
insb
les
push
lahf
nop
loope
leave
aad
in
push
cli
xchg
fwait
pop
mov
xchg
push
adc
cmpb
push
mov
test
incl
lahf
inc
jb
test
mov
inc
xor
aas
jns
lods
inc
cmp
jae
and
inc
add
xlat
mov
and
inc
pop
out
call
sbb
jno
dec
js
push
jge
movsb
push
icebp
or
add
lock
call
aas
push
pop
pop
lock
push
mov
push
subb
adc
iret
jle
lahf
jg
mull
and
mov
jecxz
out
add
pusha
push
shrl
ja
push
fbld
cmp
pop
fdecstp
cld
sbb
adc
dec
and
test
fcmovbe
cld
push
inc
pop
fwait
dec
sbb
cmp
repnz
adc
dec
jb
sub
lock
push
cmpb
adc
fiaddl
add
sbb
xchg
xor
push
addr16
aas
jmp
lret
out
mov
jge
cwtl
testl
into
mov
int3
or
add
dec
out
or
inc
sbb
frstor
lods
sbb
push
jno
jecxz
movsl
mov
out
clc
mov
mov
mov
imull
repnz
mov
cmp
call
mov
cli
mov
std
jae
subb
and
rcrl
popf
inc
jecxz
cmpb
jne
jmp
lcall
push
mov
cltd
sbbl
inc
imul
cmc
sub
imulb
cmp
addb
push
fwait
ljmp
out
bound
ret
je
ret
call
push
testl
dec
cwtl
test
insl
js
sar
or
cmpsb
fsub
mov
in
xchg
div
shlb
sahf
aam
xor
fldenv
mov
sbb
lret
xchg
or
adc
stc
cmpb
aam
orl
add
lcall
ds
jle
jg
rcr
cmc
sub
sub
shll
add
xchg
sub
data16
nop
sub
das
sub
js
mov
push
ds
sti
jnp
xchg
jmp
push
test
mov
push
fs
xchg
add
int3
fcompl
pop
pop
xchg
mov
mov
mov
xor
push
notl
mov
mov
aam
fstpl
dec
jns
es
push
inc
mov
add
neg
add
adc
shlb
rclb
cmp
call
sbb
hlt
test
mov
mov
sub
jb
js
cmp
clc
sub
imul
mov
popa
xorb
push
sub
xchg
fsub
or
popa
mov
insb
mov
inc
cld
dec
sub
movsb
xchg
adc
dec
movsb
mov
daa
daa
dec
mov
popf
rcll
push
lret
jae
dec
jo
mov
xor
and
testb
mov
lods
pop
pop
lahf
inc
js
or
push
aaa
out
mov
mul
sbbb
jle
push
scas
lret
xor
and
mov
pop
dec
jmp
inc
les
inc
lock
mov
sub
out
fs
pinsrw
sbbl
or
adc
mov
xchg
lock
movsb
sbb
cmp
pusha
sarb
add
or
pop
add
add
jmp
push
cmc
adc
lret
xchg
aaa
cld
fstl
stos
and
aam
enter
sbb
outsb
iret
test
fsubrl
mov
lcall
pop
outsl
adc
pushf
dec
pop
push
mov
stos
sub
pop
jns
mov
xchg
test
fsts
test
aas
test
shll
adc
roll
fbstp
pop
xchg
xor
loope
stos
jmp
filds
shrb
mov
cmpb
jbe
iret
adcl
je
sub
out
sub
xchg
pop
mov
adc
fidivl
iret
jp
lods
inc
inc
push
adc
cmc
push
insl
lcall
loopne
inc
fsubr
jl
fwait
andb
sub
and
rclb
pusha
pop
and
fdivrl
sarl
std
inc
inc
jns
sbb
test
lcall
add
mov
ljmp
mov
push
and
cmp
xor
mov
pop
dec
ss
loope
cltd
mov
std
dec
mov
jno
rcr
or
dec
loope
xchg
les
sahf
add
arpl
repz
xor
enter
mov
jnp
mov
inc
mov
and
xlat
xchg
loope
pushl
or
mov
arpl
jecxz
pop
test
ljmp
adc
push
dec
bound
jmp
pop
add
mov
fwait
scas
pop
sub
push
cltd
cmpsl
push
or
adc
xor
je
enter
stos
test
in
push
std
jecxz
lea
out
ss
nop
test
dec
sbb
test
cmc
stc
les
push
cltd
or
pop
mov
mov
sub
xor
rorl
out
jbe
mov
iret
int
ret
cli
loopne
subl
jo
sbbb
cwtl
dec
mov
cmpsb
in
cmp
aam
adc
adc
jle
ss
push
dec
call
in
aam
leave
jne
push
mov
cmp
jo
cmpsb
rcrb
adc
mov
push
mov
imul
je
pop
loopne
pop
jb
lock
pop
out
or
mov
decl
and
pop
mov
sbb
cmpsl
pop
mov
jmp
push
add
xor
lock
clc
hlt
test
pop
out
jo
popa
cmp
in
jbe
repz
nop
cli
aas
movsb
inc
sub
push
jnp
xchg
push
inc
jne
pop
mov
mov
xlat
push
cld
das
push
mov
push
arpl
stos
lret
pusha
data16
lock
test
filds
and
xchg
jmp
stos
or
pusha
das
inc
pop
lods
push
xchg
mov
xchg
nop
mov
into
jmp
push
shrl
push
xor
enter
sub
aaa
aaa
loop
cwtl
loopne
inc
sbb
sub
sbb
jno
mov
and
and
jo
scas
repnz
xchg
lret
leave
jle
mov
xchg
and
aas
bts
pop
call
jecxz
pop
xlat
icebp
cmpl
arpl
xlat
je,pt
dec
lcall
hlt
lcall
jmp
mov
jno
popa
push
pop
push
lahf
mulb
sbb
pop
into
mov
jmp
fdivs
jne
xchg
mov
jecxz
pop
cwtl
or
aaa
insb
dec
cld
sbb
push
sub
notl
jae
cld
jne
roll
dec
ficompl
shl
decb
adc
adc
ja
es
cmp
into
inc
fbld
add
roll
adc
into
inc
sbb
cmc
lds
add
adc
mov
xchg
dec
movsl
les
sbb
mov
or
and
mov
xor
mov
sbbb
test
mov
add
pop
fs
mov
adc
sub
xchg
or
mov
jo
jne
add
ja
and
clc
aas
inc
cld
jae
inc
dec
and
les
insl
fstpt
scas
cmp
adc
push
add
jp
loop
arpl
push
pop
incb
pop
sbb
xor
sub
punpckldq
cmp
aad
sbb
inc
scas
cmpb
fsubs
in
arpl
cmp
vcvtpd2psx
call
test
xchg
cltd
xor
repz
add
pop
push
stc
sub
xchg
les
mov
push
jbe
jb
push
inc
inc
cltd
and
fwait
mov
sub
mov
push
push
dec
mov
jecxz
test
jp
jmp
ds
mov
movsb
pop
insb
mov
mov
mov
jg
mov
stos
sub
add
ret
xchg
or
xor
and
shrb
mov
testl
mov
pop
inc
push
test
sarb
rcl
and
and
push
xor
call
adc
pop
or
or
sbb
inc
je
aaa
mov
lret
push
mov
nop
push
stos
xchg
pop
mov
add
pop
inc
jb
dec
les
iret
mov
dec
jecxz
jp
pop
ds
and
js
arpl
inc
push
mov
add
push
jmp
push
add
dec
add
dec
lahf
cmpl
jns
lds
scas
push
mulb
data16
add
rolb
pop
sti
dec
jge
dec
push
add
jo
es
adc
incb
or
aaa
hlt
adc
jne
cld
sub
adc
scas
pop
inc
int
idivl
or
cmp
dec
faddp
shrb
ds
adc
xchg
int3
subb
xor
mov
aas
ss
fwait
outsl
push
xor
dec
call
sbb
add
adc
or
stos
test
mov
ret
testb
jno
jo
jecxz
test
pop
mov
rcl
les
popl
pop
pop
dec
sub
mov
adc
sbb
pop
stos
testb
pcmpeqw
pop
add
add
cli
adc
mov
flds
jo
jmp
sbb
xchg
ret
test
mov
insb
push
xor
call
dec
rcrb
push
fwait
or
test
scas
cmp
stc
dec
mov
ja
add
in
jne
hlt
outsb
lock
lock
sahf
fmul
xor
pop
int
std
push
push
ret
pop
jns
adc
mov
dec
out
add
orl
ss
xchg
inc
push
add
popa
bound
aad
stos
sarb
fstpl
popa
add
add
arpl
mov
inc
add
repnz
xchg
and
pop
lds
sbb
mov
sbb
jne
loope
sub
and
adc
pop
fcomps
mov
cmp
pop
push
adc
dec
jnp
popa
aas
.byte
and
.byte
lcall
or
inc
add
incl
cmp
pusha
pop
and
or
add
xor
mov
incb
incl
shll
or
and
pusha
adc
sub
inc
pop
add
push
ror
lahf
std
or
orb
add
jo
sbb
cmp
shlb
adc
in
mov
push
or
dec
or
test
jg
insl
inc
test
inc
add
inc
add
dec
ret
inc
mov
loopne
jo
add
sub
pusha
sbb
add
pusha
add
sar
add
rcr
addr16
addb
and
and
xorl
add
fildl
cmpl
sbb
add
push
sbb
add
add
inc
test
inc
pushl
dec
and
rorl
fildll
mov
rcrb
or
pusha
lcall
and
fsts
test
jne
mov
inc
add
add
add
sub
add
in
testl
add
or
popa
push
daa
add
sbb
mov
mov
add
js
jae
cwtl
mov
sbb
add
push
ja
mov
jnp
das
jecxz
pop
mov
cwtl
mov
add
sub
cld
in
or
fcoms
testl
jl
lock
inc
sub
std
imul
int
sbbl
fbld
xor
xchg
push
add
out
adc
add
add
mov
into
outsb
fimull
repz
cwtl
add
pop
or
xchg
mov
idivl
or
sub
jge
pop
add
shl
adc
push
mov
idivb
add
stc
nop
js
mov
pop
addb
pop
and
or
push
hlt
aas
mov
mov
xor
push
adc
sbb
cwtl
add
mov
jg
add
add
das
lret
add
or
adc
fwait
in
sbb
push
out
loope
push
push
add
or
mov
pop
cld
rcl
cld
out
mov
sub
pop
push
jno
sarl
xor
jno
xchg
add
inc
outsl
aaa
repz
addl
lods
push
add
mov
pop
icebp
dec
lldt
outsb
sbb
add
sbbl
and
push
sbb
jnp
sbb
pop
push
xchg
xchg
jg
pusha
add
and
sbb
pusha
add
xor
loopne
or
ljmp
fsubrl
pushf
and
sahf
fisubs
xor
push
popa
add
lret
jbe
pop
push
add
adc
pop
cld
lcall
cmp
pop
and
decb
sbb
sub
fdivrl
setae
push
int3
or
pop
data16
inc
jg
js
testb
inc
sub
push
clc
mov
inc
mov
add
jmp
pop
rcrl
adc
mov
les
add
add
jo
hlt
cmpsb
shll
add
add
loope
pop
je
pop
icebp
push
shrb
mov
push
mov
mov
mov
sti
stos
dec
push
pop
mov
adcb
aaa
out
outsl
outsb
sub
sbb
sub
scas
mov
mov
mov
add
add
mov
testl
mov
or
repnz
adc
scas
jecxz
add
adc
add
lock
mov
int
or
cs
ret
jno
push
lds
jno
js
mov
je
dec
fidivl
jp
xor
adc
mov
ja
push
movsb
add
insb
fscale
jecxz
mov
mov
push
adc
add
lahf
inc
icebp
popa
cmp
jecxz
loopne
pop
pop
hlt
xor
cmpsl
or
popa
sti
mov
in
cmp
lahf
outsb
xchg
inc
adc
push
aaa
addr16
mov
and
mov
adc
ficoms
fiadds
mov
lock
mov
loop
jge
dec
cli
mov
xchg
sbb
sbb
lods
fadd
mov
push
and
cmp
fsubl
cmpsb
push
sub
lds
fistpl
jg
arpl
adc
push
sbb
pushf
and
cmp
mul
mov
cmp
bound
add
je
sbb
cmp
push
mov
stos
mov
cmpsb
mov
in
push
iret
mov
add
rcrl
ret
subl
stos
sbb
rorl
mov
jne
test
fsub
jno
cmp
sbb
jp
cmp
fbstp
jb
xor
cmpsb
jecxz
inc
fnstcw
adc
and
pop
sarl
cld
pop
faddl
daa
lods
xor
and
xlat
pop
cmp
jge
clc
adc
jle
mov
in
mov
sarb
popf
mov
cmp
mov
enter
xor
outsb
js
xchg
add
inc
cmp
subl
lods
lcall
adc
pop
jge
jp
add
ficoml
xchg
push
jecxz
in
push
fdivs
or
and
fbstp
cmp
in
inc
add
mov
pusha
xchg
cmp
sbbb
orb
add
shll
dec
or
cmp
out
mov
mov
sar
out
stos
jmp
movsb
jmp
xor
shr
loop
fnstsw
add
cmpb
mov
inc
inc
lock
adc
push
jo
dec
pushf
xchg
cld
ret
or
dec
xor
or
jbe
lcall
fdivp
dec
in
jo
add
int
fdivrs
test
mov
jae
ljmp
add
add
addb
rol
pop
cs
std
cltd
add
sub
adc
jle
sbb
clc
rcrb
push
sbb
insl
inc
inc
daa
clc
pop
loop
xchg
cwtl
fistpll
lock
add
ds
hlt
loope
das
adc
push
jp
scas
push
ds
divl
mov
mov
orb
push
pop
cli
sahf
add
enter
push
shll
push
add
mov
or
mov
fwait
imul
or
data16
cmp
fimuls
shll
imul
add
ds
push
popf
lret
add
outsb
out
sbb
mov
aad
push
xor
mov
push
stos
jns
push
cwtl
jbe
mov
push
or
jns
xchg
jp
pushf
loop
mov
loopne
aas
xor
jge
mov
inc
pop
xchg
decl
mov
cmp
sub
ja
jb
pop
mov
xor
call
sti
dec
mov
ret
stos
xor
stc
jl
jbe
inc
push
fimull
xor
lcall
add
pop
les
out
stos
cmpb
mov
jg
sub
jl
push
or
mov
fildl
addr16
fwait
sub
iret
and
dec
mov
xchg
add
mov
add
inc
jne
add
hlt
in
fstps
push
mov
jg
test
add
out
jo
mov
ret
mov
inc
xor
arpl
sbb
mov
test
xor
cmpsb
inc
push
and
lods
xor
sub
fisubs
sub
adc
add
scas
mov
nop
mov
fcomi
xor
sbb
inc
lock
sub
out
out
add
scas
shrb
jae
je
push
add
pop
out
aaa
push
insb
push
es
cmp
xchg
mov
cmp
adc
je
dec
add
push
adc
aas
adc
xlat
push
inc
pushf
dec
rep
jl
inc
add
clc
jbe
adc
add
aad
lcall
sbb
daa
or
jbe
shll
loopne
mov
mov
push
fdivrl
aas
push
xor
push
hlt
add
stos
nop
adc
push
and
int3
cltd
cmp
add
loope
mov
adc
mov
stc
jg
mov
add
and
sub
sbb
mov
mov
jecxz
sub
push
ret
popa
add
fcomp
jecxz
gs
bound
sub
ret
xchg
cmp
fidivs
js
add
mov
mov
imul
out
adc
mov
push
js
ja
mov
cli
jbe
repz
repz
jle
or
dec
dec
lret
rorl
cmp
add
loope
and
shl
mov
push
inc
addr16
add
dec
jb
mov
lods
dec
and
dec
push
std
clc
xor
pop
test
ret
mov
dec
mov
add
fs
clc
out
inc
repnz
popf
jne
mov
sbb
out
xor
outsl
loopne
addb
push
dec
das
inc
fstp
push
mov
mov
cmpb
mov
sub
xchg
adc
add
orb
or
inc
in
lea
push
scas
mov
add
test
shrb
add
add
js
xor
lahf
cmp
jle
or
cmp
jb
or
jbe
mov
xchg
gs
pop
mov
push
push
aad
adc
sbbb
faddl
or
ss
mov
pop
push
sub
sub
and
lret
mov
or
add
mov
jnp
cwtl
inc
jg
outsl
lea
mulb
and
inc
mov
dec
lahf
movl
mov
mov
push
add
or
nop
xchg
andl
clc
sbb
jne
fimuls
or
adc
loopne
pop
lock
and
jle
faddl
mov
push
pop
data16
add
jnp
addr16
roll
aaa
inc
push
outsl
repz
cld
xor
lcall
in
test
flds
in
sub
cli
mov
daa
ds
push
cmpb
test
xchg
push
mov
dec
ret
std
cld
push
pop
outsb
sbb
fidivl
nop
pop
mov
mov
ret
and
mov
cmp
daa
mov
inc
in
pop
icebp
pop
pop
dec
fiaddl
cld
pop
or
adc
mov
shrl
pop
rcrl
cmp
mov
ret
dec
inc
stc
and
pushf
js
inc
jg
pop
loope
cwtl
sub
fdiv
pop
adc
mov
andl
mov
sbb
pop
xor
jg
ret
mov
xchg
subb
in
cmpb
mov
outsl
mov
add
mov
mov
into
loop
popa
sbbb
sahf
in
xchg
aad
xchg
frstor
add
stos
jno
lock
push
push
jo
jle
outsb
pop
push
fndisi(8087
lcall
outsb
add
repz
adc
andb
add
jg
cmp
xchg
mov
and
cmp
mov
cmp
popa
mov
push
rcr
aaa
mov
das
outsb
out
rcrb
jp
insb
testl
rcrb
les
arpl
out
fwait
pop
xlat
pop
aaa
inc
or
sub
mov
add
adc
pop
xchg
enter
fsubl
jg
xchg
xor
jle
imul
cmp
daa
dec
inc
or
add
push
or
popa
or
movsb
outsb
enter
xchg
xchg
xor
sub
outsb
into
lcall
loop
clc
pop
sub
mov
xchg
test
mov
subb
or
movsb
scas
and
rcll
pop
cmc
adcl
ljmp
push
add
test
adc
and
or
cmpxchg
jl
dec
outsl
mov
mov
push
pop
fwait
seto
testl
loope
or
addr16
sub
push
push
mov
int3
jmp
mov
pop
add
dec
adc
lock
xchg
ficompl
sahf
mov
leave
jnp
pop
mov
rolb
popa
or
mov
fs
inc
rcrb
emms
std
shrl
sub
add
xor
xchg
js
mov
or
sbb
lahf
sarl
mov
adc
jp
cli
aas
rcrb
cmp
leave
orl
scas
add
outsl
lds
xlat
add
or
add
in
mov
inc
xor
add
mov
aam
punpckhdq
inc
call
mov
ror
sahf
push
dec
add
sbb
lcall
sbb
fisttps
loopne
mov
mov
ss
test
movsl
fcomps
std
push
std
jg
mov
imul
addb
add
fmuls
repz
push
lock
inc
mov
sub
nop
push
incl
in
mov
push
lods
lcall
xor
or
xchg
les
ret
nop
stc
cmpsl
pop
js
mov
dec
sub
out
or
mov
and
outsl
cmp
hlt
xor
xchg
into
mov
push
add
pop
cli
jmp
sarb
incb
scas
mov
insb
outsb
push
xlat
push
or
sbb
add
insl
movsb
pop
push
cld
and
ret
decl
cld
jg
cmpb
cmp
aas
stos
lock
jnp
aas
nop
pop
adc
mov
lea
jnp
pop
orl
test
xor
jp
in
lret
push
lods
insl
arpl
jmp
mov
adc
xchg
out
incl
mov
bound
xchg
and
lods
movb
add
test
cs
add
lcall
xchg
shrl
xorb
fdiv
adc
mov
rcll
sbb
add
decl
stos
pop
and
cmc
inc
xchg
cwtl
ficomps
in
mov
addb
mov
push
or
add
sub
out
inc
or
and
push
mov
test
pop
ffreep
sbb
push
in
sub
jl
popa
xor
int3
cmpsl
jp
xchg
jecxz
jno
jmp
mov
popa
xor
push
fmuls
adc
imul
hlt
or
fildl
xchg
xchg
lea
and
push
and
cmp
movsl
xorb
push
aam
jns
adc
and
aam
inc
add
xchg
jp
ret
and
mov
sbb
pop
ss
ret
push
into
test
loopne
add
xchg
ja
jle
loope
fdivs
scas
push
jno
push
sub
sarl
movsl
and
push
js
sbb
mov
add
cs
cmpsb
outsb
push
addr16
add
dec
jle
push
mov
push
push
fildl
dec
cmp
clc
jnp
sbb
mov
inc
pcmpgtb
sahf
add
shl
cli
arpl
loop
sahf
jo
popa
cmp
ja
punpcklbw
pop
adc
pushf
cmp
adc
pop
ja
jno
and
testb
scas
dec
jns
add
jecxz
add
sbb
xor
or
adc
add
call
xor
orl
je
mov
out
pop
mov
adc
adc
jnp
jno
pop
add
jg
shrb
pop
cmp
ds
sub
add
add
mov
aam
dec
out
leave
daa
aad
into
inc
movsbl
dec
ret
cld
mov
sub
add
int3
push
ss
movsb
loop
and
push
mov
xchg
roll
sub
and
mov
mov
pop
in
out
lret
jecxz
xchg
outsl
mov
movsb
test
xorb
fwait
mov
inc
cmp
scas
leave
sbb
fidivrl
cwtl
mov
inc
in
pop
mov
loopne
cmp
jb
add
loopne
add
or
in
or
lcall
mov
lock
push
cmp
xor
mov
pop
sbbb
ljmp
push
cmpsb
sarb
jbe
mov
mov
mov
jecxz
mov
sbb
cmp
dec
orl
nop
testb
and
adc
sti
cmp
pushl
pop
loopne
fistps
shlb
dec
add
jge
mov
test
push
cli
mov
stos
ljmp
pop
cmc
mov
dec
mov
roll
or
sub
ss
lcall
js
jns
cmp
cmp
ljmp
push
sbb
pushf
subl
adc
lods
not
mov
and
sbb
or
fiaddl
pop
fbld
sbb
repz
xchg
ffree
outsb
sub
clc
adc
cli
pop
mov
sbb
add
or
fsubr
or
out
jl
adc
aam
outsb
pop
cmp
mov
imulb
dec
push
rcrl
aaa
popa
negl
cmpb
repz
movsb
andl
xchg
push
in
mov
push
divps
push
dec
and
pop
xchg
or
test
data16
add
add
xor
notb
or
repnz
in
push
adc
add
imul
bts
mov
push
out
sbbl
cmp
push
ret
inc
cmp
ret
dec
cmp
add
data16
loope
push
push
add
or
cmc
repnz
fistl
movb
inc
rsm
or
mov
bound
mov
push
xor
lret
pop
sbb
add
mov
daa
loopne
inc
add
adc
mov
jle
dec
dec
nop
dec
jge
arpl
adc
jle
or
mov
push
aam
clc
xchg
and
mov
sbb
out
xor
mov
fldt
repnz
clc
xor
mov
test
and
xchg
sahf
sbb
pslld
sbb
sbb
pop
cmp
dec
ret
pop
adc
ret
push
dec
rcl
rol
fisubrl
sarb
lea
pop
fs
stos
outsl
cmp
mov
cmc
insb
ret
enter
push
stc
lods
mov
daa
mov
jo
inc
ret
stc
add
test
mov
dec
adc
ds
dec
jo
mov
hlt
push
mov
jns
push
jle
aas
mov
sbb
pop
mov
xor
and
or
imul
pop
cld
xlat
gs
inc
inc
mov
jne
dec
mov
push
shrb
lcall
fwait
neg
jmp
lret
mov
je
call
mov
adc
xchg
stos
aas
in
leave
sbb
mov
xchg
test
lcall
imul
das
push
mov
sar
dec
jbe
xlat
pop
aaa
xchg
push
and
push
iret
mov
add
rcr
pop
loopne
in
and
sbb
fldl
leave
jl
push
rcll
fwait
sti
xchg
xchg
push
or
push
jo
cmp
out
fstps
popa
das
or
sub
fwait
addr16
aaa
pop
sub
sub
dec
mov
and
jecxz
pop
ja
je
push
jo
add
push
adc
pop
xor
xchg
xor
push
int3
icebp
ror
int
xchg
mov
ja
cmp
or
shlb
movsb
jb
sub
or
inc
xchg
xchg
mov
sub
lods
fisubrs
flds
lahf
mov
cmp
dec
xchg
mov
and
test
sbb
inc
fwait
dec
lods
pushf
fwait
nop
pop
mov
out
out
adc
mov
add
in
test
inc
pusha
or
rcrb
and
inc
daa
out
ret
sub
aad
testl
xor
rcll
sbbl
push
leave
add
mov
mov
inc
mov
adc
mov
test
fnsave
cmpl
push
call
sbb
mov
out
add
inc
mov
adc
sbb
addb
sbb
and
subl
sub
call
push
lock
sbb
fists
sbb
xchg
push
add
jmp
sbb
mov
sub
adc
dec
nop
pop
xorb
paddsw
add
or
mov
loope
mov
daa
imul
add
xchg
sub
push
dec
test
push
or
push
inc
lahf
mov
jns
pop
lret
ja
pop
inc
popa
or
push
pop
pop
push
xchg
das
lahf
call
mov
add
fs
or
aas
fwait
mov
or
inc
lcall
movsl
cltd
mov
sbb
mull
dec
fdivr
bound
dec
jae
sbb
xchg
daa
pop
dec
xchg
jnp
int3
adc
leave
sbb
cmpsl
push
loope
sub
pop
imul
mov
push
xchg
mov
cwtl
sub
push
rorl
fsubrs
add
cli
and
pop
out
xor
jl
das
and
xlat
out
divl
mov
inc
pop
dec
pop
out
loope
adc
cwtl
hlt
ret
cs
jecxz
add
add
sbb
inc
fldl
xor
add
push
sub
push
xor
mov
push
pop
mov
imul
cmp
jae
test
cwtl
mov
insl
ret
fdivrl
bound
sti
stc
xor
sub
cmpsl
int
scas
iret
mov
cltd
jmp
jae
outsb
pop
adc
mov
pop
nop
dec
shrl
adc
dec
incb
pop
dec
sarl
mov
push
iret
adc
iret
or
pop
dec
popf
sbb
aam
or
pop
add
enter
pop
xchg
cmp
aas
jmp
lods
fucomi
mov
cmpsb
jmp
lds
imul
inc
cmp
movsl
adc
and
mov
test
ds
je
aaa
std
push
test
leave
push
cmp
cmp
loope
jne
jecxz
pop
push
add
push
std
push
out
push
or
pop
dec
add
repz
pop
mov
push
mov
cld
mov
push
test
jnp
outsl
sub
pop
xor
faddl
and
mov
or
outsb
icebp
aaa
shl
mov
sbb
je
jne
mov
xor
lret
sub
insb
pop
jp
aam
dec
sub
aaa
mov
or
jl
scas
mov
cli
flds
add
jg
sub
add
or
add
test
add
adc
xor
int3
xor
aaa
pushl
int3
test
mov
add
add
mov
les
cmp
sbb
ret
pop
das
mov
fmuls
cwtl
xor
lahf
decl
sbb
xor
cli
sub
and
cwtl
and
add
inc
adc
sbb
ret
loopne
xor
dec
add
movl
dec
fcoms
aas
mov
mov
xchg
inc
push
sub
mov
lcall
paddb
fs
xchg
ljmp
push
imul
push
or
call
hlt
mov
dec
clc
scas
and
inc
test
mov
cli
push
jecxz
sub
jae
mov
in
cmc
cmpxchg
repz
and
mov
hlt
or
sti
stc
cmp
jecxz
movsl
incl
aas
ret
mov
or
movb
fcomps
stc
in
sbb
repnz
dec
mov
loop
pop
cli
addb
jo
ds
movsb
sahf
xchg
rcr
clc
xchg
sarb
xchg
stos
mov
jns
fcmovbe
lock
or
sbb
test
loopne
sub
sbb
adcl
xchg
push
add
leave
iret
or
mov
stos
jo,pn
adc
mov
cmp
lock
pop
jo
cmp
outsb
mov
mov
test
insb
js
xchg
sub
nop
mov
and
adc
enter
pusha
lret
xor
movsl
xchg
sbbl
xor
mov
icebp
std
and
ds
stos
xbegin
mov
rolb
ja
pop
cmp
push
fisubs
pop
jo
pushf
cli
cmp
pop
and
incl
aaa
mov
pop
out
mov
jae
out
ret
mov
jnp
pop
push
fs
icebp
movsl
scas
sahf
dec
nop
jmp
sub
pop
add
or
dec
add
imul
hlt
jbe
inc
adc
in
jbe
jle
mov
pop
sbb
aam
ret
std
cmc
jg
lcall
jo
push
jp
cli
sbb
sub
test
rorb
mov
dec
sbb
ljmp
cs
pop
jmp
jnp
xor
add
push
out
imul
mov
mov
pop
pop
dec
sub
xchg
and
xor
pusha
pushf
out
dec
dec
or
xor
lret
loope
mull
clc
add
loope
andb
in
adc
cld
data16
jmp
pop
pop
decw
outsb
out
rolb
test
sbb
js
pusha
call
jge
rcrb
xor
fidivs
cmp
xor
mov
dec
pusha
jg
test
pop
lcall
push
or
shrl
rcrl
test
out
sbb
outsb
cmc
and
fs
xor
jle
inc
ljmp
jb
pop
test
icebp
ds
ss
xchg
loopne
lret
cli
push
push
xchg
jecxz
inc
in
add
push
adc
js
inc
cmp
xlat
cmp
or
inc
call
add
cmp
sbb
call
or
add
mov
and
arpl
rcrb
popl
pop
inc
aaa
pushf
mov
ja
jg
or
push
add
jge
fsubr
push
cmp
jne
cmpsl
jmp
insl
leave
mov
jg
int
xchg
mov
popa
or
cmc
push
inc
fidivrl
sbb
or
xchg
fildl
ret
repnz
pop
jmp
out
push
jp
int3
shrb
xchg
add
insl
or
cwtl
ljmp
sahf
ds
iret
pusha
xchg
div
mov
lahf
stos
add
push
les
ret
jno
fcmovnb
push
pushl
sbb
outsl
adc
mov
cmp
sti
mov
ja
cmp
dec
adc
popa
jb
out
lock
push
arpl
pop
mov
lret
cs
push
lcall
test
ret
mov
or
jmp
fwait
mov
mov
add
rorl
mov
add
test
fdivl
clc
push
loop
inc
sbb
insb
in
insb
loopne
rorb
inc
sub
inc
xchg
push
hlt
push
gs
les
jg
faddl
clc
pop
jg
rcll
ret
dec
cld
in
in
sub
or
icebp
pop
iret
or
xor
push
sub
sub
sub
lds
icebp
sbb
jg
add
mov
or
loopne
cld
or
iret
stos
clc
xchg
or
rcl
enter
sbb
adcl
rolb
ja
arpl
idiv
jmp
push
xor
aas
sbb
mov
dec
mov
sbb
ficoml
push
add
stos
push
cli
sbb
gs
out
adc
scas
mov
mov
and
xchg
and
scas
push
lea
les
inc
sarl
add
add
dec
test
into
jge
movsl
imul
add
fimull
pop
repz
inc
lock
mov
insb
lret
int
mov
xchg
jle
cmp
xor
and
repnz
fwait
cmpb
xchg
cmpsl
add
shrl
rcrl
dec
pop
sbb
jg
jl
pop
push
cli
push
dec
xchg
sbb
push
scas
shlb
add
xchg
clc
out
lahf
scas
ljmp
in
ret
ret
addr16
dec
jecxz
lock
pusha
jge
bound
cwtl
dec
aas
data16
inc
xor
sbb
or
dec
sub
sub
fsubr
sub
rcrl
aas
sarl
rcll
shrb
loope
enter
add
or
jne
or
xor
mov
xor
js
fistps
mov
pop
pop
outsb
push
dec
pop
sub
lods
dec
popf
hlt
add
xor
mov
mov
jnp
enter
mov
out
inc
scas
loope
fsubrl
dec
xor
hlt
pop
addb
cmpsb
sarl
lcall
pop
test
jg
xor
repnz
outsl
es
call
jg
pop
sbb
pop
inc
in
nop
out
scas
mov
mov
scas
and
es
test
sub
sub
js
sbb
and
xor
mov
test
add
jb
fistpll
or
lods
rcrl
test
sbb
mov
fdivs
xchg
cmpsl
stos
and
add
les
je
jge
push
clc
ficoml
shrl
lahf
or
inc
shll
roll
lea
pop
add
cld
out
clc
je
lea
push
pop
fldcw
mov
add
insl
xchg
mov
lret
clc
stos
pop
mov
out
mov
cmp
pop
pop
jg
lahf
add
stos
mov
sbb
jge
loop
pop
movsb
mov
pop
add
in
mov
or
push
int3
sub
clc
scas
jmp
mov
jnp
lret
add
rorl
bound
bound
cld
outsl
insl
popl
add
mov
jg
or
xchg
add
pop
sub
pusha
sub
jne
adc
frstor
ret
push
test
loopne
pushf
sbb
adc
dec
test
jo
shlb
lret
xchg
dec
inc
mov
addl
int
fistpl
cmp
test
fdivrp
push
lret
mov
fstpl
mov
lret
inc
sti
add
sbb
sbb
scas
cmp
inc
fsts
lock
loopne
sbb
adc
mov
shll
je
add
mov
in
add
sub
not
pop
dec
scas
stc
sbb
pop
rorl
cmc
into
bound
xor
mov
cs
xchg
decb
aaa
ds
and
hlt
xchg
outsb
cmp
imul
push
push
inc
jl
es
or
not
sbb
lret
out
cs
fs
push
mov
dec
lods
push
push
aad
adc
call
test
jp
or
cmp
pop
xchg
dec
inc
popa
push
cmp
add
test
lods
into
push
das
inc
cmpsl
mov
mov
cmpl
or
jno
mov
js
mov
mov
dec
sbb
add
je
es
pushf
push
je
jbe
cmc
pop
sbb
insb
mov
jb
or
aas
aas
or
mov
dec
inc
mov
adc
push
xchg
push
push
jbe
xor
mov
or
stos
push
add
adc
loop
fadd
stos
lea
in
or
or
or
and
and
pop
adc
pop
sbb
je
sbb
adc
xorl
and
loop
inc
mov
mov
aaa
xor
sbb
call
mov
stc
stos
and
push
cld
mov
cld
inc
jne
and
push
js
shrb
fiaddl
mov
cld
or
cmp
aas
and
movsl
mov
pop
jl
std
mov
pop
mov
lret
cmp
mov
pop
jo
push
in
sub
jge
je
push
jo
dec
std
icebp
or
jmp
addb
dec
mov
push
or
test
lea
pop
iret
sub
out
and
lods
mov
fwait
and
mov
aaa
pop
push
cmc
inc
shlb
in
fimuls
mov
addb
mov
xlat
out
cli
negb
clc
shlb
rcr
out
fadd
dec
push
jmp
mov
xor
or
aad
daa
cmpb
inc
js
js
clc
lret
cmp
xor
adc
ljmp
cmp
fnop
push
jle
aam
call
iret
je
aaa
es
stos
adc
push
stos
rcl
cmp
inc
cmpb
stc
pop
fnstenv
mov
ljmp
cli
cmp
xchg
popa
add
xchg
mov
cmp
sahf
cmp
and
adc
pushf
je
jecxz
mov
call
sti
ret
add
push
std
jg
xor
lret
scas
cwtl
or
mov
scas
xorl
or
leave
sbb
pusha
cmc
mov
sbb
loopne
leave
and
mov
xchg
dec
data16
adcb
sub
test
mov
xor
sbb
mov
std
data16
sbb
jo
call
xor
inc
call
jg
add
push
or
subb
add
add
jb
dec
dec
mov
bsr
inc
and
jno
xchg
dec
mov
adc
adc
call
adc
pushf
mov
into
mov
jbe
xchg
push
fwait
idivb
cmp
outsb
sbb
and
ds
ss
sub
loopne
push
inc
scas
clc
cli
cwtl
pop
sbb
mov
mov
xchg
inc
inc
stos
lahf
in
inc
sti
sbb
xor
xchg
fdivr
lcall
rolb
xor
sub
insb
fsubrs
sbb
ss
clc
icebp
out
mov
sahf
push
pop
lock
outsl
insb
push
aas
adc
adc
push
orb
lret
inc
sbb
pop
hlt
add
lret
mov
push
rcrb
fisttpl
sub
push
insl
hlt
lods
outsl
cmp
mov
and
push
xlat
inc
xor
push
add
lret
rcrb
dec
push
movsb
jb
jb
push
pop
mov
dec
xlat
outsb
rol
jp
sbb
in
xchg
js
xor
enterw
push
mov
repz
mov
js
or
mov
insb
fnstsw
and
fmul
lret
adc
hlt
jg
mov
insb
fsts
lret
inc
lock
xchg
or
push
mov
testl
ss
clc
mov
sbb
pop
test
aad
or
push
adc
lahf
dec
xor
scas
xchg
call
inc
je
mov
je
mov
aam
pop
sub
shlb
andl
loopne
popl
fs
jp
lahf
pop
xor
dec
fsubl
xchg
adc
stos
push
js
das
lret
inc
fists
in
push
mov
shrb
mov
xchg
hlt
out
add
xor
fldl
sbb
adc
or
mov
xorb
xchg
mov
mov
adc
aam
icebp
xchg
inc
jg
pop
pop
dec
js
and
push
xchg
pop
rorb
xchg
cmpsb
dec
cld
lahf
adcb
mov
xchg
mov
jle
push
sub
xchg
loop
sbb
push
push
jo
or
add
addr16
mov
addr16
inc
jp
adc
push
nop
sub
decb
xchg
mov
jo
daa
sub
scas
adc
jg
push
inc
dec
dec
mov
inc
adc
mov
mov
xor
dec
das
cmp
cmp
cld
push
jne
cmpl
lcall
repz
xor
pop
mov
xlat
cmp
pop
bound
dec
rcll
adc
pushf
or
or
movsb
sub
cmpsb
shlb
cmp
test
insb
lahf
mov
sub
subb
mov
mov
push
sbb
ret
hlt
jne
inc
test
mov
mov
adc
cmovne
and
xchg
ficoms
ror
out
in
pop
dec
mov
mov
or
nop
pop
push
add
sbb
push
arpl
and
add
cmp
jno
mov
mov
ljmp
popa
test
fcomps
popl
cmp
fiaddl
mov
mov
xor
es
insl
fisubrs
jnp
daa
ret
sub
adc
dec
jae
divl
pop
push
jae
shrb
or
xor
sbb
and
jle
inc
jl
jge
xor
cltd
add
cmpb
movsl
and
sbb
jle
xor
mov
jnp
fildl
fwait
clc
stos
bound
lock
imul
xor
and
mov
add
push
les
lret
dec
xchg
aas
test
adc
jecxz
out
jo
repz
sub
add
rcll
pusha
ficoml
faddl
mov
push
add
or
adc
imul
lret
xchg
cmp
idivb
out
fildll
test
xchg
push
adc
dec
movsb
sub
sub
pop
push
gs
push
or
push
cmpsb
add
xchg
mov
call
sbb
imul
popa
xor
sub
loopne
push
dec
in
movsl
mov
stos
inc
xlat
cs
jg
fisubs
pop
add
and
pmuludq
ffree
test
ret
mov
or
xchg
mov
xchg
dec
push
loopne
imul
push
stos
push
outsb
inc
add
adc
sbb
rol
loope
outsb
cltd
cmp
push
cmp
sti
dec
rorb
arpl
fstpl
or
mov
sbb
lahf
inc
stos
inc
or
sub
jno
jb
cmp
sbb
movsb
jmp
incl
inc
mov
std
push
jno
inc
add
xlat
in
mov
mov
add
cwtl
iret
rcrb
clc
mov
xchg
rclb
jle
je
add
leave
push
mov
addb
jne
sbb
sub
shrl
leave
add
arpl
push
cld
les
adc
mov
aad
stc
adc
aas
imul
sub
call
mov
sbb
jo
xchg
dec
mov
inc
push
jmp
rcrl
dec
movsl
inc
and
jg
icebp
jmp
fwait
sti
xor
js
mov
push
in
or
scas
xor
dec
imull
addr16
daa
pop
adc
pop
sbb
add
fcmovbe
movsbl
mov
fcmovb
shlb
mov
inc
lea
dec
roll
and
inc
xchg
sbb
je
pop
jns
sbb
mov
jg
ja
popa
loope
pop
xchg
mov
dec
test
and
movsl
mov
sti
punpckhwd
mov
inc
push
and
into
mov
rcr
pop
loopne
sub
xlat
sti
sbb
xchg
mov
mov
or
xor
push
scas
data16
or
loope
cmp
imull
movb
xchg
in
sti
cmp
int
cmpsl
cmp
lds
ljmp
test
loop
push
stos
mov
pop
mov
jp
orl
pop
aaa
insb
jns
pusha
cmp
sbb
ffreep
hlt
and
jecxz
push
xchg
xchg
mov
sbb
outsb
fldl
adc
out
cmp
pusha
cmp
adc
xchg
dec
lds
and
pop
addr16
cmpsb
push
lock
xchg
es
push
out
inc
pop
iret
dec
rcll
mov
xchg
out
cmpps
repnz
mov
xchg
cltd
pop
xlat
rorb
jl
mov
test
shl
and
mov
push
xor
xor
shrl
cld
stos
ljmp
jo
xor
ds
cmp
cmc
sbb
or
mov
repnz
ret
mov
add
movl
in
stos
cmp
add
stos
scas
cmp
das
push
jo
popl
jb
add
push
dec
jnp
or
cli
xchg
pop
adc
xor
lock
adc
cmpb
arpl
icebp
test
fnsave
sbb
ret
sbb
ret
dec
test
dec
addr16
inc
insb
mov
pusha
out
nop
xchg
mov
add
mov
std
mov
or
adc
pop
xchg
cs
jmp
filds
filds
adc
sbb
mov
cwtl
pop
mov
in
or
dec
adc
pop
add
cld
and
lcall
cmpsb
sub
mov
in
fisttps
fcompl
adc
loop
push
bnd
and
out
es
aad
out
ret
movsb
mov
jecxz
mov
xor
daa
stos
stc
adc
dec
lea
sbb
fnsave
and
scas
xchg
inc
mov
movsb
dec
xor
pusha
lds
repz
fisubs
sub
mov
scas
cmpsl
push
addl
mov
or
movsl
add
rcrb
add
push
xchg
pop
ret
mov
xor
inc
ds
faddl
add
push
stc
sub
in
in
dec
lahf
push
xchg
insl
xchg
push
int3
iret
int3
or
fsubl
dec
xchg
clc
push
xor
out
inc
insb
les
or
mov
loopne
sbb
int3
jne
icebp
cwtl
push
gs
push
mov
pushf
push
data16
mov
je
pop
fs
ret
add
cmpsb
inc
cmpsl
fs
sub
and
nop
push
mov
fldenv
jge
inc
push
fsubrs
adc
xor
imul
add
jnp
repnz
test
out
push
test
stc
pop
icebp
push
mov
sbb
inc
test
pop
notl
jmp
pop
adc
pop
lea
push
stos
stos
mov
fcmovnu
add
rcll
add
sbbl
lds
push
je
mov
adc
in
mov
sub
or
flds
mov
repz
ret
pop
or
dec
subl
pusha
sbb
call
push
fnstcw
fwait
test
push
pusha
mov
dec
mov
add
ja
sbb
gs
test
test
mov
std
fwait
push
and
lret
addr16
mov
arpl
mov
pushf
ja
or
mov
cmc
add
lret
jo
xchg
or
push
test
aaa
push
mov
dec
xor
call
repz
mov
or
mov
sti
pusha
adc
xlat
pop
testl
or
xorb
push
cmc
push
cmpsl
in
mov
aad
mov
in
jo
jge
rcrb
pop
stos
jbe
popa
mov
push
sbb
adc
inc
cwtl
jne
lret
add
imul
pop
xchg
jmp
cs
outsl
xor
loop
lret
stos
push
cmp
sbb
dec
add
adc
adcb
jge
xchg
jle
or
lret
testl
mov
rcrb
xor
cmp
mov
mov
mov
add
sub
push
popa
repz
add
and
int
xor
sbb
xor
or
lods
pop
inc
jg
lret
sub
insl
lock
or
in
sub
mov
or
xchg
test
cli
int3
movsl
jo
cs
daa
les
leave
lret
mov
clc
shl
inc
sahf
into
sub
clc
enter
adc
adc
pop
inc
stc
ljmp
or
add
lods
ret
pop
adc
jge
jecxz
je
or
test
mov
jge
outsb
leave
cmpsb
push
cmp
or
out
jno
xor
paddusb
mov
xor
sbb
jmp
in
shrl
adc
pop
shll
pop
fwait
jg
int3
mov
sub
and
mov
add
dec
cmp
push
aad
lea
ficoms
ret
sahf
aam
sub
xchg
fisubrl
and
jg
add
pop
and
push
andb
and
mov
sbb
and
hlt
fwait
or
pop
ret
jno
cmp
pop
lcall
push
xor
xchg
mov
bound
sbb
mov
fnstcw
push
jle
decb
push
int3
divl
mov
cmpsb
push
jne
in
push
mov
arpl
mov
aam
cmpsl
daa
lahf
add
bound
lcall
bound
mov
add
push
mov
jg
cmp
mov
sub
sbb
stos
cmc
gs
mov
xchg
jbe
jle
fwait
mov
mov
sti
adc
push
adc
sub
mov
mov
scas
cli
inc
call
jno
movsl
loope
mov
icebp
xchg
sub
jge
cs
add
pop
loop
std
xchg
and
fsubp
inc
insb
js
int
mov
or
inc
mov
sub
or
stos
mov
mov
das
or
enter
sbb
enter
mov
pop
sbb
mulb
mov
sub
ss
pusha
sbb
loop
jbe
or
in
and
not
pop
jno
ret
loopne
mov
jmp
popa
lret
push
mov
dec
leave
lock
adc
into
sub
sbb
pushf
pusha
jno
mov
aad
add
lock
mov
sarb
xchg
xchg
ljmp
cltd
popf
push
aaa
jno
repz
mov
pop
xchg
jno
xchg
and
push
mov
gs
outsb
inc
xchg
mov
xchg
add
xor
jo
clc
xchg
ja
sub
outsb
jns
icebp
pop
hlt
lcall
arpl
hlt
fisubl
add
outsb
or
jae
sub
jmp
dec
rcrb
cmp
andl
pop
and
imul
int3
js
int3
repnz
xchg
dec
sbb
pop
xorl
pop
cmp
inc
xchg
stos
sti
test
cmpsl
and
aaa
movsl
xor
pusha
ret
cmp
rorb
xchg
paddusb
enter
pop
jge
sbb
push
jne
aas
inc
outsl
shl
add
mov
out
xchg
inc
ficoms
cmpsl
les
fwait
mov
pop
xchg
sub
adc
xchg
clc
scas
test
pop
cmc
arpl
jmp
cli
mov
dec
lret
rolb
lds
mov
test
pop
fs
dec
bound
mov
out
cmp
scas
push
push
stos
push
xchg
push
xor
ljmp
push
loop
jle
pop
xor
mov
lea
or
das
popf
icebp
add
bound
in
xor
jo
mov
mov
mov
in
dec
cmpsb
jnp
sbb
inc
mov
inc
inc
out
push
sbb
sub
aad
mov
test
out
mov
push
cmp
xor
repz
call
lret
outsb
in
mov
dec
xor
in
aam
repnz
cs
pushf
push
icebp
mov
adc
cmp
xor
xor
and
roll
data16
pop
pop
dec
add
and
and
pop
mov
pop
dec
lret
mov
sub
and
cwtl
sbb
pop
bound
or
dec
push
or
in
and
int3
lods
loope
je
lret
xchg
lock
faddp
ret
popf
lock
xchg
fldt
jmp
shrb
and
inc
or
dec
fisttps
and
and
dec
pushl
cmp
sub
and
push
cmpsl
iret
enter
jno
std
jecxz
inc
and
lret
lret
std
cmp
add
lods
push
mov
pop
adc
xor
xchg
sarb
hlt
dec
insb
jmp
popa
and
mov
xor
aam
sbb
lock
jbe
sub
push
sbbb
cld
sarl
les
test
out
mov
lahf
add
clc
pop
fcmovbe
ret
sbb
ljmp
pop
movsb
and
fnstsw
nop
int3
insb
dec
cmp
xor
repnz
imul
xchg
add
adc
popa
lock
scas
fidivrs
mov
pop
xor
pop
mov
push
dec
xchg
jnp
daa
nop
dec
inc
fildll
sbb
cmp
bound
push
and
addr16
les
je
jbe
lcall
sbb
pop
jo
es
add
icebp
add
daa
repnz
adc
add
hlt
jae
cld
dec
xor
aam
and
fisttpl
stc
ljmp
push
neg
movsb
jg
push
data16
sbb
fs
push
xlat
add
sbb
jmp
mov
lahf
mov
pop
mov
push
addr16
das
jge
js
ret
pop
pop
vpmadcsswd
jle
imul
sbb
mov
arpl
sbbl
dec
call
bound
dec
jnp
push
dec
push
mov
data16
adc
mov
mov
hlt
xorl
and
movsl
fbstp
les
mov
inc
mov
mov
push
shrl
sbb
push
cmp
sub
ret
jmp
clc
lcall
mov
dec
cli
dec
mov
and
sub
cmp
inc
xchg
and
clc
ret
inc
add
mov
outsb
les
popa
push
in
inc
addr16
cwtl
and
cmpsb
or
pusha
call
std
inc
lods
je
addr16
inc
xchg
cmp
xlat
and
idiv
loope
mov
or
mov
push
stos
jbe
subl
in
pop
lock
cmp
cmp
add
sbbl
lock
into
sub
dec
in
inc
inc
mov
cwtl
lret
lea
loopne
add
faddl
out
sbb
aas
call
jmp
repz
jp
fucom
cltd
dec
jbe
jmp
leave
push
scas
jl,pn
mov
pop
sub
inc
sbb
add
imul
outsb
mov
dec
cld
out
xchg
pop
xchg
jecxz
sub
push
jo
lcall
adc
jmp
fsubrs
addr16
outsb
fwait
inc
insl
pop
leave
dec
aas
inc
sets
fdiv
aaa
and
inc
mov
sbb
js
fcmovnbe
cwtl
mov
jb
adc
in
xchg
pmuludq
sbb
shll
daa
add
stos
sbb
xor
jb
add
rolb
pop
scas
mov
repnz
cmp
sub
in
jno
or
cwtl
xchg
adc
mov
aam
out
and
cmp
cmp
loope
cmp
push
int3
ja
test
jle
fwait
and
dec
inc
cmp
sbb
xor
jg
loopne
rolb
rcll
cs
test
cltd
into
sub
shlb
sub
cwtl
jnp
xchg
pop
xor
sub
xor
rcrl
or
mov
or
fwait
xchg
sbb
popf
mov
sub
mov
jecxz
inc
xchg
push
sti
test
add
jg
xor
and
scas
mov
and
pushf
inc
fildll
test
jp
xlat
pop
insb
out
cmp
popa
movsb
sub
mov
fsubr
insb
push
add
mov
fldenv
jle
add
mov
cwtl
mov
aam
pop
lea
fisubrs
pop
jne
int3
clc
dec
cmp
add
test
cmp
decb
dec
icebp
push
fsubrl
add
pop
jge
push
insb
pop
add
cwtl
sbb
das
xchg
stos
lock
push
mov
add
adc
adc
and
xchg
out
push
iret
mov
xchg
mov
mov
cmp
or
adc
cmp
push
push
cli
or
mov
pushl
pop
adc
test
sahf
orb
mov
shl
inc
xor
imul
jnp
mov
stos
mov
inc
aaa
es
push
jmp
stc
lods
jns
ss
inc
mov
out
mov
cld
push
jmp
pop
loop
int3
jno
xor
jnp
pushf
stos
mov
jmp
and
loop
push
decl
repz
jecxz
cmpsl
aad
add
jb
xchg
add
push
rclb
xlat
jge
cli
inc
jmp
push
add
and
lcall
fs
inc
sbb
add
pushf
clc
and
cmpsl
add
loopne
dec
movsl
insl
out
mov
pop
xor
cli
pop
rcl
lcall
mov
adc
call
cmp
rclb
dec
mov
jmp
jmp
ret
aas
les
jne
xchg
clc
pop
jmp
int
orb
xchg
enter
jle
sbb
pop
pop
data16
and
das
adc
orb
mov
push
sub
jle
pop
ror
inc
mov
sbb
jns
push
mov
jns
mov
mov
out
insl
std
daa
jge
sbb
xchg
push
daa
push
lahf
push
jg
xchg
repz
xlat
loopne
cmp
pop
out
shl
icebp
pop
rclb
dec
test
mov
sti
divl
hlt
sub
inc
sub
lahf
mov
xchg
cmpl
pop
test
rol
xchg
cmp
fisttpll
int
pop
pop
arpl
mov
xchg
test
loope
mov
shll
loope
add
test
cld
out
psrld
int3
push
std
dec
cmp
shll
jmp
cld
and
pop
jl
or
push
sbb
xchg
decb
jl
add
lock
mov
mov
mov
sub
cmpsb
inc
xor
add
sub
add
in
adc
stos
clc
dec
test
jae
data16
es
jmp
test
loopne
inc
xlat
incl
pop
xchg
xchg
fisubs
test
mov
push
adc
popa
shl
rcrb
test
mov
push
aad
aam
add
pop
scas
loope
lds
sarb
rolb
xor
sbb
idivl
mov
sub
aaa
ds
ja
loop
shlb
sahf
push
data16
jmp
xor
xor
mov
mov
rcrb
jmp
cli
cmp
ret
mov
cmp
xor
js
cmpsb
sbb
inc
inc
lahf
in
inc
imul
sub
or
shl
outsb
lret
xorb
mov
and
mov
xchg
mov
notl
add
cmp
xchg
xor
pop
test
outsl
add
dec
add
pop
xchg
loopne
int
lock
pop
out
add
xor
add
jnp
sbb
xchg
push
into
enter
ret
pop
or
sbb
xor
in
je
out
decl
jmp
jo
stos
jge
push
xchg
aaa
add
inc
add
addl
cld
xchg
cwtl
adc
scas
sub
outsl
cmpl
out
xor
rcl
addl
inc
pushf
sbb
add
cwtl
mov
xchg
sbb
adc
push
add
bnd
xchg
into
cmp
inc
divl
movsb
push
ror
movsl
mov
jl
into
push
mov
bound
mov
mov
xchg
pusha
outsb
loop
insb
hlt
lret
addr16
xor
sbb
fimuls
fcmovnu
inc
inc
xor
out
fnsave
or
xchg
aam
pop
jge
ds
xor
pop
add
cmc
jge
daa
mov
sbb
pop
int3
ljmp
jg
push
add
dec
and
push
cmc
adc
cmp
loope
movsl
mov
mov
sbb
in
mull
jg
icebp
loope
out
xor
cli
fwait
mov
or
cs
scas
icebp
pop
add
ss
adc
stc
inc
or
mov
fcomps
xor
addr16
add
rolb
test
loope
jg
dec
add
ret
scas
mov
mov
stc
mov
add
mov
mov
sub
add
sub
mov
pop
out
fwait
pcmpgtb
mov
push
jbe
sub
stos
push
loope
imul
add
icebp
test
sbb
xchg
mov
add
inc
inc
jge
cli
dec
js
jae
repnz
push
test
xchg
sahf
scas
cmp
test
or
cmpsb
xor
adc
cld
add
lret
push
js
dec
jg
jo
adc
stos
scas
push
or
cmp
enter
test
push
ret
and
pop
adc
push
adc
dec
popa
pop
pop
cld
cmc
shll
push
ss
test
fsubrl
loope
inc
jg
je
lcall
xchg
out
sbb
mov
test
rcl
adc
sahf
movsl
or
add
mov
outsb
test
lret
mov
aam
cmc
int
aas
cld
sbb
dec
jecxz
fisubl
mov
add
fdiv
and
js
jle
flds
cmpb
jecxz
mov
ret
test
cld
hlt
ss
mov
cld
scas
cmp
out
sbb
cmp
and
out
mov
iret
xchg
dec
dec
das
sub
jmp
pusha
pusha
sbb
or
out
outsb
cmp
adc
call
cwtl
xor
fnstcw
pop
cmp
or
mov
mov
jg
jecxz
leave
adc
or
mov
push
inc
mov
test
je
jb
sbb
rol
and
in
mov
bound
mov
xchg
ds
or
cmp
shrl
lahf
jecxz
adc
or
mov
or
fisubrs
mov
mov
sarl
mov
jae
sbb
pop
mov
pusha
mov
xor
punpcklbw
notb
xor
fnsave
mov
lret
sub
sub
inc
add
int3
lret
sbb
shrb
add
pop
ret
pop
cld
mov
clc
call
pushf
fadds
push
mov
add
cld
dec
rolb
mov
add
pop
scas
sti
testb
push
hlt
xchg
fidivrs
or
iret
jl
sub
imul
aam
lock
sbb
add
sub
dec
lds
je
mov
cs
shl
ljmp
xchg
inc
lea
pop
inc
or
lods
cs
lds
sahf
xchg
pushl
stos
es
jecxz
mov
push
or
xor
pusha
push
fstpl
mov
adc
and
lds
outsl
push
mov
jne
sub
sbb
push
lods
outsb
out
pop
rolb
push
and
ret
ja
jb
mov
int3
or
icebp
lds
es
sahf
push
mov
nop
and
sbb
xor
imul
mov
ffreep
sbb
add
push
or
jmp
into
pop
ja
mov
jnp
ss
addb
jae
add
lea
sub
rorb
lock
iret
call
daa
mov
push
jg
sbb
add
popf
lock
push
bswap
add
std
inc
shr
sbbl
or
push
xchg
pop
test
call
sbb
cwtl
jg
cld
pavgb
xor
aas
jge
shll
addr16
jo
jnp
mov
pop
sub
jnp
dec
xchg
add
cmp
lret
repnz
fstl
std
rolb
std
pop
pop
test
movsl
js
int3
test
mov
dec
les
adc
lds
push
xor
pop
xor
mov
stos
add
mov
vunpcklps
ja
scas
pop
pop
mov
cwtl
xor
push
push
and
aad
push
aam
inc
stc
adcl
cmp
jmp
and
cmp
call
outsb
bound
xchg
and
xlat
lds
mov
mov
addl
mov
ret
call
push
cltd
sub
sbb
fdivrs
std
pop
sbb
or
add
sbb
fdivl
scas
inc
daa
and
lods
xchg
inc
ljmp
cwtl
and
sub
test
push
aas
push
pushf
pop
pop
jnp
push
ljmp
and
jg
and
add
inc
sbb
or
andl
imull
pop
in
mov
xchg
jle
es
push
push
jbe
cmp
stc
xchg
cs
hlt
es
dec
jbe
sbbl
inc
movsb
das
pusha
mov
jbe
arpl
fs
cmpsb
out
lret
mov
push
mov
sti
aas
std
mov
mov
mov
push
or
xchg
mov
out
movsb
mov
orl
xchg
pop
inc
add
pop
xlat
outsl
fcmovbe
inc
daa
push
xor
inc
jp
dec
insb
call
shlb
inc
icebp
shl
nop
xor
jge
test
or
jno
cmp
loope
dec
les
sub
mov
ds
add
fbld
ret
mov
out
push
cli
cmpsl
adc
add
sub
sub
inc
xlat
sub
mov
jmp
repnz
aam
add
fldl
addb
aas
mov
bound
xchg
inc
cmc
jg
sbb
and
daa
mov
add
pop
jg
sub
pop
mov
or
ss
dec
je
mov
mov
or
push
je
cmpsb
popa
mov
jbe
jne
gs
mov
or
arpl
aas
add
cld
adc
call
inc
inc
repz
inc
cmp
mov
xor
mov
movl
mov
rolb
outsb
inc
xchg
mov
push
adc
pop
orb
push
sbb
leave
lds
mov
cld
idivl
nop
adc
mov
movl
pop
cmp
dec
pop
push
sub
mov
pop
jne
or
nop
jb
pop
les
or
sub
rorl
cmp
loop
push
loope
ret
jl
rcr
adc
push
push
call
or
sbb
jp
inc
pop
pop
mov
sarl
cmp
jb
inc
out
sub
fdivp
dec
cmp
aad
enter
mov
rcr
add
into
test
inc
xchg
outsl
jmp
test
sbb
inc
in
aad
inc
jbe
push
inc
sub
and
pop
cs
sbb
mov
or
lods
out
lret
dec
rcrb
mov
movsl
rorl
xor
lock
sti
pop
je
fmull
outsb
xor
pop
movsbl
fistpl
mov
mov
cmp
pushl
xor
mov
cmp
aas
jmp
lcall
dec
loopne
sbb
testb
icebp
fistps
lret
fstl
push
in
in
into
out
mov
inc
jle
std
jmp
or
imul
negb
test
imul
inc
imul
or
clc
add
stos
dec
xchg
aaa
pop
out
data16
daa
repnz
loope
pusha
lret
test
out
cli
inc
and
lods
jmp
dec
bound
jl
and
mov
jb
jl
aaa
pop
mov
ret
clc
sahf
sarb
cmp
clc
adc
fwait
sbb
and
sub
test
mov
mov
outsb
or
cmp
lcall
sbb
fsubs
loopne
or
cmp
or
andb
lea
ret
jb
jp
mov
sahf
mov
mov
fwait
lcall
insl
inc
repnz
xor
pop
push
or
sbb
test
or
iret
icebp
adc
inc
inc
sbb
incl
lock
shll
fwait
sub
call
hlt
mov
xchg
mov
ret
cmp
call
pop
daa
push
mov
ror
call
movb
sub
xchg
ret
and
scas
jg
jl
add
dec
add
cwtl
add
cmpsb
mov
xchg
clc
mov
adc
or
out
and
aaa
popf
lea
es
outsb
and
jnp
leave
push
mov
loop
xchg
jb
call
add
inc
rorl
aas
xor
fneni(8087
sbb
clc
fsubrs
pop
jo
scas
or
adc
sub
mov
xor
and
xor
mov
loopne
test
pop
clc
add
rcrl
pop
test
mov
push
aas
add
bound
test
xor
fs
mov
add
mov
js
loop
call
idiv
add
jmp
sub
cmc
sub
loop
fdivrl
xchg
jg
and
popf
and
test
insb
sbb
push
mov
inc
sub
std
pop
adc
rcrb
incl
mov
dec
jg
push
pusha
lret
dec
cmp
adc
loop
loop
pop
mov
mov
ljmp
add
inc
inc
push
push
aad
data16
add
mov
hlt
cmp
scas
rcrb
cmp
pop
jmp
aaa
rclb
push
clc
rcll
clc
inc
addl
pushf
mov
clc
inc
std
ret
xor
sub
push
lock
mov
dec
andb
ret
pop
ljmp
adc
into
jmp
pop
xor
jmp
push
inc
mov
pop
fists
sub
mov
mov
sbb
test
mov
jle
add
enter
pop
cmp
mov
fmuls
test
fisttpl
push
sub
pop
pushf
idivb
push
add
add
je
and
push
sbb
or
repz
das
pop
loope
inc
pop
jg
fidivrs
xor
stos
stos
adc
dec
adc
push
lods
xchg
sbb
add
inc
loop
add
in
add
pop
jns
pop
jge
jmp
fcomps
inc
sbbb
sub
cmp
js
stos
mov
mov
mov
inc
clc
sub
icebp
movsb
cld
arpl
xor
das
test
bound
stc
cmp
add
loop
into
push
into
leave
sti
pop
cmpl
push
pop
push
sub
out
add
fs
mov
inc
ficoml
clc
jnp
jl
push
dec
inc
jecxz
clc
or
mov
sbb
dec
xchg
inc
loope
mov
or
in
jo
sbbl
je
shrl
lock
xchg
cmc
loopne
lret
xor
adc
pop
mov
repnz
add
xorb
sbb
out
test
and
shl
mov
mov
lock
movsb
scas
mov
push
cmp
jno
adc
std
fwait
test
jle
fidivrl
and
sbb
add
pop
into
pop
add
in
lret
cli
lret
or
notl
rorl
add
loopne
sti
sti
shrl
testb
movsb
cmpsb
jno
xor
mov
mov
cmc
pop
out
mov
mov
iret
into
test
lock
mov
pop
jne
xchg
push
test
lock
rcrb
cmp
out
jb
pop
inc
mov
xor
xor
andb
arpl
pop
outsl
inc
daa
mov
adc
enter
inc
push
mov
sahf
push
aam
iret
fst
xor
cmp
ss
sub
mov
in
pop
stc
add
adc
mov
inc
ds
data16
stc
or
jge
sub
inc
loope
neg
push
lock
outsl
cmpl
mov
pop
test
loopne
mov
adcl
pop
xchg
ret
cltd
dec
inc
xor
cld
cmp
xor
dec
inc
iret
adc
cli
push
sbb
or
rcl
jg
push
cwtl
clc
xchg
dec
add
fcmovnu
ljmp
mov
xchg
cmpb
into
xchg
rcl
jb
push
xlat
push
sbb
stc
add
das
scas
mov
cli
filds
sub
push
pop
lret
xchg
insl
pop
mov
data16
inc
mulb
jmp
xchg
sbb
cmp
bound
andl
adc
mov
cmp
aad
stos
nop
jo
pop
les
cmp
in
xchg
ds
into
cmp
inc
and
xor
mov
sahf
jns
in
mov
xorl
movl
sarl
outsb
out
sbb
xor
cmpsb
inc
mov
adc
addl
mov
incl
inc
cmp
repz
icebp
inc
outsl
icebp
pop
scas
sbb
stos
mov
push
pop
mov
rcr
cmp
pusha
int3
inc
add
adc
add
mov
dec
leave
xor
mov
test
mov
inc
aas
sub
gs
cmpl
rorb
fadds
lock
push
adcl
icebp
mov
popl
enter
add
test
out
dec
popf
dec
je
sbb
jge
cs
imul
popa
rcll
insb
sbb
inc
loope
dec
jb
imul
mov
inc
dec
lods
mov
cmpsl
dec
inc
shl
add
and
sub
add
stc
sub
inc
fwait
inc
cmp
and
dec
das
insl
mov
jo
gs
mov
dec
les
ja
or
imul
je
jmp
pop
pop
or
push
divl
das
loop
lea
mov
insb
xchg
jge
call
or
add
adcl
pushf
mov
cs
bound
push
std
inc
sub
je
andl
jecxz
imul
jmp
dec
mov
in
lret
dec
sub
enter
cmpsb
adc
and
mov
rcrb
mov
out
test
loope
int3
popf
ss
adc
call
sbbb
or
add
loope
pop
clc
push
and
loope
cmc
inc
pop
pusha
in
pminub
enter
enter
cmpsl
lods
inc
xor
lods
loop
in
add
sbb
jge
xchg
or
and
lret
dec
inc
inc
je
iret
dec
icebp
inc
and
mov
push
movsl
ja
icebp
je
mov
xor
fistpl
shll
push
mov
inc
adc
jno
iret
inc
jne
lods
cwtl
std
cmc
xor
in
cmp
jge
mov
jl
andb
test
cmp
dec
sti
into
xor
imul
outsb
cwtl
xor
jle
or
mov
filds
xor
ret
adc
jne,pn
shl
mov
int
ss
xchg
push
les
aas
lock
frstor
dec
or
imul
push
repnz
or
and
mov
bound
xor
add
mov
add
and
or
pushf
dec
jmp
mov
mov
xor
pop
pop
test
push
push
sbb
add
das
clc
and
or
mov
imul
and
cld
rorl
rcll
test
stos
shll
addl
into
or
xchg
popf
xchg
popa
mov
adc
mov
pop
inc
callw
mov
push
sub
dec
repnz
adc
mov
jbe
push
lds
mov
sub
mov
jecxz
jg
jno
jno
or
mov
daa
jae
and
mov
xchg
xor
lret
adc
repz
fadds
imul
les
sahf
shrb
add
ss
loopne
popf
jge
stos
ds
enter
ret
sbb
xchg
mov
jnp
sub
cmp
push
add
cmp
xor
mov
sbb
xor
xor
test
pop
cmp
jmp
ds
loopne
xchg
cld
daa
call
mov
pushf
leave
or
sti
lea
imul
loopne
adc
jge
lea
xchg
add
pop
jo
dec
cmp
inc
ja
mov
subl
pop
movsl
mov
push
pop
cmpsl
lahf
shrb
and
sbbl
aad
sub
push
xchg
outsl
cmp
mov
enter
add
dec
jns
cli
scas
adc
jecxz
gs
sbb
aad
sbbl
inc
and
and
and
jo
push
ret
add
xchg
popa
call
xchg
mov
clc
js
out
sbb
push
fwait
das
cmp
sbb
and
dec
add
rorl
lods
scas
fbstp
jnp
cmc
inc
pop
push
pop
lret
xchg
xchg
mov
dec
adc
enter
loope
and
cwtl
test
mov
sbb
add
loop
arpl
fldl
sbbb
fadds
sub
push
mov
xor
ret
sbb
int
bound
ret
adc
loop
cmp
xchg
rorb
sarl
cmpsl
popa
imul
inc
pop
test
into
jne
enter
mov
and
sbb
dec
or
inc
leave
lock
xlat
xchg
je
sbb
icebp
lods
sub
push
out
sub
dec
adc
ret
inc
insl
aaa
xor
stos
fcoms
add
xchg
dec
mov
fsubl
daa
pop
rolb
incl
aad
in
loopne
pop
fs
fdiv
add
adc
in
adc
outsl
mov
addr16
pop
mov
ljmp
mov
les
jae
dec
fldenv
pop
inc
repz
jno
jne
add
jno
shlb
cmp
jg
lods
ret
lea
sbb
mov
test
pushf
xchg
jg
or
add
movsb
test
sbb
or
mov
and
lcall
test
fbld
bswap
lock
int
scas
add
jns
nop
movsl
push
xchg
imul
push
cmp
das
or
push
pop
sub
das
mov
stc
xchg
test
cmp
imul
or
xchg
adc
push
mov
pop
xchg
mov
inc
test
dec
cld
mov
imulb
daa
jp
ret
and
xchg
jae
hlt
or
mov
dec
jns
mov
dec
aas
arpl
test
cmpl
popa
cltd
pop
loop
fimuls
aaa
mov
or
sbb
mov
add
jl
lea
and
jmp
out
pop
mov
loope
cltd
push
xchg
out
xlat
js
sub
mov
or
add
xchg
xchg
sti
and
inc
lret
xchg
inc
mov
outsl
pop
insl
jo
call
pop
roll
aam
jle
sub
jnp
aas
or
mov
out
or
in
hlt
outsl
cld
mov
mov
cmp
xchg
fiadds
insb
sbb
in
lea
cmp
or
ret
xchg
lods
in
cmp
or
or
jmp
jne
xor
or
mov
jbe
mul
in
pop
mov
icebp
mov
and
int
mov
pop
out
orl
jb
add
lock
ret
lret
and
inc
fsubrs
and
pop
mov
and
dec
xchg
pop
sti
adcb
inc
xchg
cltd
add
mov
loop
das
imul
rolb
loop
xor
pop
sbb
pop
nop
mov
std
pop
xchg
mov
outsb
daa
adc
mov
aas
mov
clc
add
jo
mov
mov
pop
loope
push
fwait
cmp
inc
shrb
pop
stos
sub
xchg
es
pop
repz
push
call
sbb
ljmp
jge
jmp
gs
pop
hlt
xchg
lea
aam
cmp
xchg
inc
pop
or
flds
dec
sbb
inc
ljmp
jp
or
aas
add
xchg
xchg
cltd
adc
clc
and
cmpl
out
dec
pusha
test
add
fcoml
les
lock
or
mov
test
xchg
popf
js
push
mov
or
and
and
mov
jo
jno
stos
or
jmp
and
movsb
sub
add
pushf
cmpsl
mov
iret
jo
jp
cmp
or
mov
stos
xchg
sbb
push
js
dec
add
loopne
sub
enter
lods
fldcw
lahf
imul
dec
mov
cli
inc
int
pop
movsb
mov
adc
push
xor
adc
jmp
sub
push
jmp
ds
sub
stc
jmp
leave
and
repnz
imul
enter
add
xor
loope
fdivs
add
shl
cltd
cmpsl
cmc
mov
cli
pushl
pop
lea
add
cmp
or
scas
mov
adc
push
aas
inc
jmp
adc
mov
or
jbe
mov
or
adc
jbe
popa
dec
mov
fbstp
lea
mov
test
jae
inc
out
lock
cmp
jmp
jecxz
in
inc
cmp
cs
sbb
sub
mov
xchg
sbb
inc
repz
in
xor
pop
int3
inc
test
scas
xchg
es
incl
xchg
bound
lea
dec
cmp
mov
push
jb
xor
arpl
and
mov
adc
xor
mov
ja
shlb
test
mov
mov
clc
jp
call
pop
pop
pop
adc
cli
aas
sub
ret
mov
mov
aam
mov
insb
out
xor
inc
iret
mov
dec
sti
or
mov
dec
scas
cltd
lock
cmp
or
adc
hlt
adc
addr16
stos
jmp
cli
pop
add
lret
shll
cmp
mov
mov
pop
cmp
popf
push
loope
sub
add
js
mov
repz
jno
stos
out
je
loope
mov
xor
adc
out
das
imul
add
jmp
loope
push
adc
jb
sub
cmp
inc
pop
xchg
ficompl
fucomp
mov
shlb
or
ss
addb
inc
test
push
sbb
jne
adc
xor
dec
mov
sub
ss
daa
outsl
gs
push
fsts
add
jae
rorl
pop
ret
mov
jl
mov
push
mov
clc
aad
sub
ret
outsl
out
repnz
cmpsl
dec
mov
dec
xlat
sti
pop
ljmp
xor
pop
aam
lret
pop
sti
iret
ror
jecxz
xor
mov
lea
mov
mov
mov
jge
mov
add
shlb
pop
stos
xlat
dec
outsb
insb
cmpsl
lret
push
pop
inc
push
sbb
cmp
stos
pop
enter
imul
adc
arpl
and
xor
cwtl
test
dec
and
incl
push
std
cld
inc
pushf
mov
pushf
dec
or
mov
pop
mov
das
mov
or
outsb
jecxz
ja
fstpl
mov
adc
fimuls
add
sahf
push
cltd
xlat
pop
mov
js
orb
scas
stos
js
push
pushf
sbb
inc
in
add
out
daa
cwtl
adc
pop
or
sbb
dec
mov
pop
leave
add
jne
test
icebp
int3
in
aaa
jecxz
push
jg
xchg
push
xlat
cmp
inc
push
ljmp
int3
push
pop
lods
out
sbb
jne
shrb
test
lock
imul
pop
pop
roll
push
aas
enter
jecxz
mov
fiaddl
sbb
fwait
mov
neg
xchg
aad
dec
fnsave
sbb
rclb
packsswb
inc
jge
inc
mov
sbbl
adc
in
xor
bound
ja
jp
subl
dec
or
push
mov
and
sarb
adc
jne
repz
xchg
out
shl
mov
or
sarl
or
roll
js
ret
adc
sbbb
in
sbb
pop
aam
push
push
negl
and
stc
jno
push
lret
cmpsb
mov
pusha
push
push
decb
mov
jns
jecxz
push
xor
mov
add
movsb
daa
adcb
adc
imul
movsb
dec
popf
cmp
pop
sahf
cmp
popa
sub
dec
inc
repz
bnd
mov
or
pop
adcb
mov
test
int
fstpt
lock
cmp
fcomp
and
mov
hlt
popf
dec
rcrb
inc
mov
jo
sbb
xchg
mov
cmp
sbb
dec
mov
shl
add
or
sub
arpl
clc
jae
cmp
or
dec
loop
movb
test
jmp
cmpsl
pop
int3
inc
out
scas
mov
xlat
xor
mov
sbb
fs
lods
outsb
pop
in
mov
rclb
popa
idivb
jno
inc
sub
sub
mov
stos
aaa
xchg
cltd
test
push
jns
mov
stos
xchg
jb
xchg
ljmp
pushf
sub
loopne
es
jo
sub
push
lahf
arpl
cmp
cltd
icebp
je
jbe
arpl
lds
add
push
dec
and
jl
sti
je
pop
mov
jno
jb
rorl
add
rcrb
loopne
mov
adc
pop
inc
in
ret
aas
mov
inc
xchg
stc
sbb
rcl
xchg
xor
imul
add
xchg
xlat
shlb
call
fwait
call
js
dec
or
aad
cmp
ret
add
and
loope
test
sbb
jns
mov
shll
pop
out
sahf
jge
jge
push
and
mov
mov
dec
jmp
daa
push
cmp
cmp
xchg
daa
imul
outsl
loope
sbb
add
inc
jmp
aaa
add
cs
adc
push
xchg
shl
insb
hlt
aas
push
add
jmp
adc
mov
add
test
fldenv
push
stos
loope
addl
cmp
sbb
fwait
xchg
in
and
or
shll
jge
push
nop
std
cmp
stos
mov
sbb
rcrl
addl
popa
dec
pop
test
loopne
mov
jp
push
loopne
jmp
cs
push
and
lock
out
and
fbld
push
mov
sbb
inc
popl
mov
pop
movsb
xor
add
rcrl
andl
dec
pop
fstps
add
es
pop
xchg
add
adcl
hlt
xor
mov
or
cmpl
and
cltd
pop
out
pop
sub
dec
add
aaa
insl
adc
xor
dec
inc
sbb
ret
jb
fwait
xor
or
lock
aad
jmp
mov
and
cmp
clc
mov
subl
jae
lea
aam
sbb
push
mov
pop
jge
lock
dec
pop
sub
cmp
cmp
outsl
adc
add
mov
xorb
and
pop
negl
dec
and
cltd
cmp
icebp
sbbb
cmpsl
mov
nop
sub
inc
xor
and
jo
and
cmp
push
test
inc
negl
mov
push
dec
cmp
outsl
push
add
arpl
add
xor
xor
scas
dec
mov
outsl
inc
mov
xchg
aaa
lock
mov
sub
stc
rcl
sub
pushf
pop
cmp
movsl
add
fs
subl
pop
dec
push
imul
lods
orb
adc
pop
iret
mov
add
fcmovnu
xchg
ret
sub
mov
mov
pop
sub
bound
or
rolb
insl
sbb
pusha
cld
js
popa
add
mov
cmpsl
jae
mov
dec
sub
lcall
shl
popf
lcall
aas
xchg
mov
push
lea
pop
mov
jl
pop
pop
sbb
or
in
xchg
movb
roll
mov
pop
push
shrl
mov
rorl
es
movsb
out
mov
cli
lods
popa
pop
adc
icebp
xor
ljmp
push
mov
shlb
ret
mov
popa
xchg
in
cmc
jg
jmp
scas
aam
loop
mov
jno
jbe
add
xchg
cmp
dec
jb
push
inc
in
push
cld
push
stos
enter
addl
sahf
jmp
jl
xchg
cmp
fcmovb
mov
mov
lcall
jecxz
push
sub
xlat
enter
add
dec
movsb
pop
or
add
push
idiv
movsb
pop
and
or
inc
es
outsb
jle
push
mov
add
xor
xchg
and
jp
xchg
std
add
jnp
inc
mov
push
inc
or
stos
dec
mov
scas
test
shrb
and
sarb
test
xlat
loopne
pop
cmpsb
or
outsl
loope
popa
bound
shll
lret
je
cld
add
int
jns
mov
loop
loopne
and
dec
push
xchg
mov
loop
aas
fwait
lahf
ficoms
inc
sbb
mov
add
addb
jne
push
jb
add
jl
out
mov
out
xlat
std
sbb
nop
or
movsl
clc
inc
aaa
rclb
cmp
dec
add
pop
mov
push
mov
cmp
fwait
cmpsb
push
xchg
xor
adc
aam
stos
sub
test
push
sysret
sbb
cmp
mov
icebp
leave
idiv
or
mov
sarb
ficoms
loop
or
jg
das
and
cltd
loopne
mov
lret
imulb
fbld
pop
jo
cmc
mov
cmp
pushf
pop
cld
iret
aad
push
shl
loopne
in
cmp
sbb
mov
shlb
dec
xor
sbb
jbe
ficomps
leave
cli
sub
xchg
cmp
icebp
jno
in
mov
sbb
fs
popa
mov
pop
push
aam
xor
es
int
into
ret
push
mov
and
scas
clc
mov
sub
movsb
ljmp
fistpll
movsl
mov
push
iret
inc
sarb
call
add
pushl
dec
xorb
push
stos
push
ja
xor
sbb
shr
test
ret
dec
clc
xor
push
sbb
decl
in
lea
outsb
enter
jmp
ret
xchg
lods
rcrb
loope
inc
cmp
mov
jg
or
insb
and
mov
jbe
scas
fsubr
lea
out
mov
cwtl
mov
sub
add
sbb
aad
aam
adc
outsb
and
lahf
push
int3
inc
int
sti
mov
stos
push
repz
push
cmpsl
into
imul
add
enter
fistpl
and
push
xor
mov
lahf
insb
mov
les
add
jns
inc
mov
pusha
or
jb
shll
cltd
cmp
jge
push
cmp
ret
lods
cmc
jge
cwtl
movb
mov
mov
jecxz
jle
int3
imul
enter
aad
mov
and
xchg
sub
rcll
mov
sti
lcall
test
outsl
jle
jecxz
or
ficoms
test
mov
mov
aad
mov
test
pop
fs
loopne
xor
jnp
lret
sub
sbb
inc
daa
pop
add
xchg
sbb
push
add
popa
test
fsub
push
cmp
cli
dec
aam
aad
xchg
pop
push
pop
or
and
push
loop
pusha
xchg
dec
pop
mov
cld
out
fucomip
ja
mov
jl
push
outsl
loopne
outsl
jl
out
jno
sub
insl
test
xchg
mov
shlb
cmp
hlt
cmp
sbb
shll
loop
push
adc
inc
test
ds
adc
arpl
sbb
xchg
mov
das
mov
push
add
out
sbb
pop
lods
push
sbb
incb
insb
adc
lahf
mov
lods
popl
xor
inc
incl
cld
xchg
orb
and
jo
pop
dec
pop
stc
pop
adc
mov
lock
mov
shlb
incb
clc
mov
notb
ret
adc
inc
imul
lods
push
fwait
dec
inc
loopne
fmuls
stos
mov
adc
sub
xor
mov
lock
loope
mov
pop
push
clc
das
or
and
pushf
mov
sahf
pop
cltd
repnz
fwait
call
nop
mov
adc
fs
rcll
sbb
popf
sub
shlb
filds
test
sub
sbb
test
adc
xorb
mov
sbb
push
bnd
push
lock
icebp
orb
je
iret
inc
scas
push
or
mov
push
fwait
in
popa
or
inc
out
mov
and
cmp
cmp
out
and
iret
jae
pop
dec
push
pushf
push
hlt
xchg
in
cmp
and
xchg
mov
mov
or
mov
rcrl
fcompl
sbb
in
aad
inc
mov
testb
aaa
sahf
cmpsl
sahf
clc
push
iret
and
add
int
test
add
add
push
add
rorb
ljmp
cmp
pinsrw
int3
call
xchg
test
jo
jnp
sub
clc
divl
cld
xchg
lds
nop
pushf
shrb
push
lock
lods
out
mov
mov
dec
ljmp
push
inc
bound
add
jp
adc
push
cli
xor
fmuls
cli
mov
and
arpl
clc
data16
sbb
les
imul
xchg
shlb
lea
push
daa
daa
jmp
decl
or
aam
insl
mov
sub
pop
dec
movsl
rolb
push
test
out
add
mov
out
sbbb
jg
pop
je
push
sbb
pop
jo
in
push
in
sti
add
jbe
shrl
push
pop
sbb
pop
pop
enter
and
sbb
mov
out
add
inc
jmp
popa
pop
cmp
and
shr
push
jb
ljmp
sbb
fistps
pop
movsb
hlt
cmp
add
js
xchg
add
pop
stc
int
xchg
dec
add
add
inc
fiadds
sub
js
or
mov
sbb
jnp
mov
aam
push
fdivs
add
lods
adc
mov
adc
ds
iret
sub
mov
or
mov
jp
push
daa
int3
in
add
mov
rcl
inc
out
shlb
inc
mov
jb
pop
sbb
vpsrld
loope
aaa
shlb
inc
xchg
repnz
add
mov
pop
es
adc
push
adc
mov
jg
fildll
inc
or
adc
xor
dec
addb
xor
pop
nop
adc
mov
xor
cmp
jb
fisttpl
mov
pushw
xor
inc
ret
shll
adc
pop
nop
fsubs
sbb
mov
xor
mov
mov
ja
or
mov
scas
std
mov
cld
andl
cli
out
arpl
insl
mov
xor
jbe
sar
pop
icebp
adc
cmc
adc
xor
shrb
jle
lcall
sahf
sub
adc
clc
cmp
mov
and
and
mov
jp
xor
mov
icebp
aas
adc
push
dec
repnz
mov
decb
filds
rcrl
iret
popa
or
mov
mov
and
clc
xchg
or
lret
icebp
scas
and
sub
sbb
shlb
dec
inc
bound
inc
shlb
xlat
stc
daa
rcl
lea
aas
mov
mov
fisttpl
incl
mov
daa
jl
dec
fwait
mov
arpl
aaa
inc
lock
push
or
jg
iret
add
add
bound
or
mov
mov
xchg
and
arpl
test
or
ret
aas
sahf
fwait
scas
add
add
imul
aam
das
subb
cmpl
mov
ret
leave
aas
or
movsl
mov
sbb
jno
push
loop
jecxz
cmpb
adc
in
call
clc
cltd
test
xorb
pop
sub
stos
lea
ret
adc
test
xchg
out
in
ja
das
mov
xchg
or
movl
push
hlt
stos
sub
fldl
pop
xchg
lock
lahf
out
lock
repz
fdivl
pop
loope
mov
xchg
pop
or
mov
cld
xor
jns
das
mov
or
dec
mov
iret
ret
stc
jae
in
mov
and
dec
xchg
movb
test
mov
mov
lds
hlt
add
jbe
adc
mov
insb
data16
pop
stc
adc
aas
aas
adc
std
mov
and
loop
ret
xchg
shl
mov
hlt
xchg
and
or
push
leave
dec
out
jns
xor
loop
xlat
jp
dec
les
cmp
pop
imul
flds
nop
rol
sub
fldenv
push
and
cmc
and
cmp
insb
xor
daa
test
pusha
push
mov
sub
or
mov
outsb
sbbb
add
aas
daa
jns
out
pop
xor
mov
nop
addr16
cs
pop
loopne
pop
lds
outsl
lock
push
adc
movsl
pop
add
push
xchg
mov
sbb
mov
mov
xor
and
shrb
xchg
add
test
icebp
cld
adc
testb
mov
xor
inc
jg
aas
jmp
xlat
add
inc
nop
mulb
add
cmpl
xor
push
jp
or
xor
cmp
xchg
cmp
cmp
stos
push
and
push
call
mov
jl
inc
dec
adc
mov
sahf
add
adc
add
iret
scas
xor
push
js
mov
outsb
dec
aas
mov
enter
add
and
mov
sar
pop
sub
dec
xchg
cmp
ja
or
mov
scas
sarb
insb
addl
push
or
adc
cli
mov
repnz
cli
mov
lahf
in
mov
les
pop
adc
sarb
dec
aad
push
clc
push
cmp
mov
add
bound
adcl
decb
ret
repz
dec
add
shl
fistl
test
lcall
adc
dec
adc
pop
jl
mov
mov
push
jbe
sub
pushf
xchg
push
test
mov
jns
decb
icebp
dec
mov
add
sub
mov
jmp
adc
repnz
add
aas
jmp
adc
mov
sub
sbb
sbb
fdivr
adc
xor
add
cld
xor
fmull
or
into
ja
jb
cmpsl
inc
mov
inc
scas
mov
les
push
and
sti
loopne
arpl
sbb
add
cmpsl
push
ret
sub
pop
mul
mov
and
mov
add
mov
cvtps2pi
leave
xchg
aad
and
jae
stc
mov
hlt
testb
outsb
push
xchg
and
mov
orb
jp
mov
rcrb
fnsave
sub
outsl
in
sub
pop
jge
inc
inc
pop
pop
sub
push
push
enter
pusha
rcl
cmpsl
adc
pop
aaa
mov
xchg
push
adcl
mov
dec
scas
push
lock
mov
mov
jo
jg
lods
aas
subl
cmp
aaa
mov
imul
repz
je
into
xchg
pop
dec
sub
xchg
sbb
lahf
pop
fs
push
jle
ds
leave
aam
cs
pop
fwait
push
shl
loop
lock
dec
js
jle
adc
int3
outsl
and
jnp
mov
xor
test
mov
jmp
mov
push
in
stc
shlb
sbb
cmc
pop
std
add
ss
add
ss
lods
add
adc
mov
rcrl
cmp
xor
ljmp
nop
pop
mov
cmp
orb
pop
add
xchg
scas
push
pop
into
xor
cmp
jge
xchg
pushf
fs
mov
push
adc
icebp
sub
jae
lock
mov
fimull
inc
mov
hlt
pop
lahf
pop
mov
inc
test
pop
push
sub
push
add
mov
dec
jne
lret
mov
adcb
enter
mov
jle
mov
sbb
xor
pop
jg
pop
mov
enter
ja
jae
ret
pop
fs
add
add
jle
aad
push
loop
xchg
push
add
mov
mov
lock
inc
adc
outsl
cli
or
dec
dec
andb
xchg
loope
dec
bound
adc
jecxz
or
or
jecxz
sbbl
add
scas
mov
sbb
mov
add
imul
xor
pop
enter
sbb
adc
xchg
lret
mov
mov
ret
and
pop
popf
scas
icebp
std
ljmp
in
fwait
outsb
mov
ljmp
lahf
insb
mov
call
mov
jge
stos
dec
movsl
mov
cmp
and
push
xor
das
out
cmp
pop
add
leave
cs
popa
mov
mov
or
xorb
mov
dec
add
push
mov
push
daa
push
and
movsb
cmc
in
inc
enter
lcall
sbb
ret
mov
ud0
push
orb
pusha
fbld
jl
setge
fistpl
jb
mov
loopne
jae
push
jae
mov
jnp
xorb
cs
nop
lock
movsl
lock
jge
inc
cld
scas
inc
xor
push
cmp
inc
sub
jg
mov
mov
loop
lea
lcall
jb
mov
lods
mov
dec
push
lock
js
adc
adc
and
jg
stos
mov
popa
inc
std
add
xchg
loope
or
fadds
mov
ljmp
cmp
sub
pop
fs
gs
scas
gs
sbb
stc
xchg
mov
pop
cmp
lcall
dec
test
out
jno
sbb
add
adc
leave
mov
icebp
mov
cmp
insb
mov
mov
or
test
test
es
or
lods
cmp
out
mov
mov
jg
scas
jmp
mov
add
cmc
into
lret
ds
jnp
in
mull
orl
inc
jo
pop
lock
popa
pusha
push
adc
fdivr
sub
outsl
sub
lret
jp
insb
push
inc
add
sub
andb
cmp
cld
inc
clc
jnp
cmpsb
gs
fildl
mov
outsl
or
cli
insb
subl
lret
sbb
ljmp
aad
jge
sbb
dec
mov
inc
add
and
pusha
push
pushf
cmp
inc
fistpll
mull
stos
push
sub
ja
test
add
mov
ficomps
dec
in
shlb
mov
xchg
mov
insl
mov
pop
add
push
or
mov
cmpsb
fstps
test
push
lret
mov
lahf
jo
rcll
push
in
rorb
mov
mov
pushf
mov
fstpl
mov
push
mov
jb
add
push
pop
push
incb
shlb
jle
mov
insl
test
sar
xchg
xor
cli
dec
jne
add
and
pop
push
hlt
mov
das
outsl
jp
je
add
mov
loopne
out
cmpsb
fmuls
jg
ficoml
jo
xchg
ror
xchg
sbb
shl
or
je
jecxz
das
fs
or
adc
push
push
push
pop
lock
sub
pop
ljmp
das
xor
mov
mov
push
pop
sbb
sar
cmp
pop
add
jp
mov
cmp
sbb
lds
push
loop
rorb
fnsave
or
add
fisttps
test
xchg
jmp
push
adc
add
addb
cmp
into
imul
rolb
adcl
call
inc
mov
stos
stos
mov
rorb
mov
or
test
adc
or
out
inc
test
cmp
lahf
and
jg
xchg
pop
adc
push
push
hlt
xchg
mov
jp
xor
jp
sbb
jb
pop
loop
aam
out
out
icebp
sbb
mov
push
or
cltd
arpl
je
gs
sbb
cmp
adc
sbb
mov
mov
loopne
pusha
or
or
cmp
lods
fsubrs
and
les
jecxz
loopne
inc
add
jnp
clc
sbb
add
scas
les
pop
sub
pop
xor
test
int
jle
shrb
xor
lahf
clc
scas
mov
xor
fisubrs
mov
xor
fdivrs
mov
pop
jbe
outsl
sub
push
jg
mov
shrb
sti
psrad
or
sub
imull
mov
sbb
mov
std
movsl
jno
mov
ret
sti
call
sub
xor
por
push
adc
test
cmpsl
pop
push
imul
mov
nop
ljmp
add
xlat
mov
fdivl
jns
fcoms
loope
mov
fstpt
dec
fistl
movsl
outsb
loopne
lcall
aad
jg
fsubr
add
cs
or
mov
pop
and
ja
popa
jecxz
sub
ja
adc
jae
sub
jl
add
inc
clc
iret
jp
xchg
or
loopne
imul
dec
fistpll
sahf
insb
pop
add
sbb
dec
or
xchg
pop
jmp
fdivrs
pop
ret
jo
scas
mov
inc
js
popa
add
add
icebp
mov
fidivs
add
jb
incl
adc
mov
je
test
jbe
outsb
xchg
lock
adc
das
jb
add
mov
mov
hlt
stos
sub
pop
pop
int3
cmp
std
rcrl
test
cmp
xor
movsb
test
dec
mov
add
mov
pushf
dec
pushf
sub
roll
mov
lcall
add
inc
popf
push
data16
pop
mov
dec
dec
adc
imul
xchg
push
call
dec
ret
jl
jg
js
mov
daa
add
cmp
cli
cmpsb
fmul
mov
cld
xor
or
lock
aaa
fcomip
stos
pop
fs
mov
test
jns
adc
js
cmp
pop
mov
int3
cmpb
mov
loope
xchg
cmp
xor
push
loop
inc
es
and
cmc
dec
loopne
pop
cld
pop
rorl
add
dec
cmp
lcall
js
test
outsb
hlt
int3
xlat
xchg
jo
data16
xor
mov
or
ret
cmpsl
rorb
mov
cld
scas
dec
fadds
xlat
fdivrp
cmpsb
jecxz
lea
clc
shl
jle
add
cmpsb
mov
inc
xor
inc
cmpsl
popa
mov
jnp
xchg
shrl
mov
inc
cld
add
loop
and
pop
mov
jle
out
sarb
add
adc
push
in
movsb
nop
cmp
xor
pop
inc
push
bound
ret
mov
lock
mov
or
loop
std
xorl
adc
sbb
xchg
xchg
js
mov
jno
and
movsl
mov
das
mov
adc
jae
rolb
ss
mov
mov
pop
and
and
adc
cmp
in
popf
imul
sahf
dec
clc
sbb
in
or
les
or
and
pop
pop
mov
ljmp
mov
and
cmpsl
push
dec
or
mov
dec
or
sub
inc
xlat
jg
rcrb
fistpll
lods
ljmp
scas
into
shl
mov
mov
sbb
mov
mov
rclb
popf
test
mov
repz
jg
mov
inc
add
lret
fsub
pop
movsl
pmuludq
push
and
lods
adc
add
loope
cltd
das
test
push
jge
ret
jmp
push
mov
clc
aaa
xchg
lea
out
aas
rcr
pop
ret
jno,pt
fistpll
push
adc
inc
mov
js
js
loopne
mov
fdivrs
jb
add
inc
adc
push
lds
xor
sbb
test
xchg
dec
sbb
lock
cmp
jo
dec
push
push
adc
cmp
jo
xor
push
mov
xor
scas
and
outsb
outsl
sub
jle
xor
inc
insb
and
lret
scas
mov
fidivrs
mov
mov
xchg
mov
jmp
pop
test
int
fsubp
dec
jo
pop
xor
pop
sbb
iret
jne
pusha
jp
jg
hlt
push
lahf
stos
loopne
jge
inc
fstps
cmp
mov
daa
mov
loopne
push
mov
mov
ds
paddb
enter
jns
adc
mov
sub
jmp
cmp
sbb
das
cmpsl
push
out
mov
jo
sub
ljmp
mov
inc
test
adc
jb
ds
cltd
pop
sub
out
lock
repnz
js
outsl
roll
and
xor
cmp
mov
xchg
nop
cld
inc
xorl
pop
push
ficomps
xchg
add
pop
out
mov
fldl
adc
pop
sub
jg
mov
cmp
cs
mov
xchg
adc
push
lock
jmp
inc
and
cmc
or
sub
fs
ret
xor
gs
in
int3
mov
mov
incl
or
movsb
fistps
outsl
sbb
jle
pop
pop
or
call
mov
push
test
jle
lock
jae
rol
insb
pop
cmp
outsl
xor
add
mov
lcall
mov
jae
pop
or
aas
dec
jo
ss
mov
not
rcr
shrl
and
or
xchg
shlb
loop
or
jecxz
idivb
test
and
push
add
outsb
inc
add
add
lods
outsb
mov
cmpsl
inc
test
sbb
mov
xchg
pop
negb
jbe
les
or
push
shll
sarl
mov
lods
out
or
inc
cmp
pusha
rorb
ret
push
inc
fdivrs
jne
lock
xor
cli
or
ss
push
notl
sbb
outsl
aaa
ret
enter
enter
call
leave
jns
test
fidivrs
pop
popf
and
jbe
fbstp
add
mov
lock
imul
stc
stos
in
dec
inc
jnp
sub
xor
in
enter
addb
inc
pop
scas
and
and
inc
push
sub
cmp
push
and
xchg
push
cmp
jmp
mov
or
push
ficoml
aaa
cmp
cmpb
dec
push
or
pop
fnstsw
push
push
ficompl
adc
test
leave
push
or
sub
ds
and
adc
outsl
lret
arpl
lock
add
inc
sbb
cmp
push
das
mov
pusha
aad
jae
fnsave
cmp
sahf
mov
add
ret
aas
cs
add
enter
mov
rsm
fwait
push
add
test
push
ljmp
repnz
movq
cmp
inc
repnz
cli
test
repz
test
dec
pop
popa
push
inc
add
jg
cmp
fstpt
shlb
add
das
mov
daa
loope
movb
dec
xchg
mov
xchg
pop
aaa
dec
jg
add
add
xor
clc
dec
mov
cmpsl
or
lret
lock
out
mov
mov
adc
push
les
rcrb
mov
lds
sbb
pop
clc
out
inc
and
loop
fdivrl
into
jge
xchg
dec
inc
out
ja
daa
adc
inc
sbb
out
add
insb
sub
push
xchg
sub
lahf
adc
and
rolb
sbb
fimuls
popf
jle
popf
lock
pop
icebp
and
inc
sysenter
jb
pop
mov
pushf
inc
pushf
sub
in
sbb
loop
sub
or
ljmp
mov
xor
jno
add
jp
inc
pop
stos
push
mov
adc
jge,pt
jecxz
or
call
jecxz
push
sahf
loopne
xchg
ljmp
or
nop
ret
pop
clc
xchg
push
jecxz
jnp
pop
xchg
inc
jae
mov
sbb
cld
sbbb
mov
xor
dec
lods
test
fs
mov
je
fcom
call
loop
scas
jl
in
pop
scas
test
adc
dec
dec
lods
jl
add
addl
pop
inc
sti
popf
or
mov
call
or
lcall
jl
fsubrl
cmp
pop
inc
fucomip
js
shrl
jmp
dec
mov
mov
shrb
mov
ror
mov
in
or
jle
add
push
dec
nop
shl
add
decl
push
call
stos
and
add
push
dec
lea
or
mov
push
ret
xor
or
dec
rorb
dec
xchg
adc
scas
into
and
or
mov
pusha
jl
or
lods
and
push
dec
mov
rcrl
jb
xchg
adc
test
or
sbb
dec
lahf
push
xor
movsb
adc
aad
lea
and
call
nop
pop
call
pop
or
je
pop
dec
sub
std
test
mov
xchg
xor
mov
jl
aaa
push
pop
or
pushl
cli
mov
lahf
dec
mov
cmp
sbbl
loope
cli
cmp
in
shlb
incb
daa
sbb
mov
aas
int3
xchg
cwtl
std
lds
sbb
or
mov
aas
cmpsl
lds
mulb
jl
jl
dec
enter
fs
dec
clc
xchg
adc
sub
pushf
sub
xchg
icebp
cld
xchg
sti
mov
fildll
xor
add
xor
adc
mov
hlt
jne
push
ljmp
lods
inc
mov
push
pop
scas
insb
add
sti
mov
mov
fists
cli
call
cmp
fiaddl
pop
icebp
decl
movsl
jmp
mov
aas
push
mov
adc
or
xor
push
xlat
add
imul
pusha
push
mov
push
mov
test
das
cmp
or
inc
add
sbb
adc
es
mov
nop
outsl
leave
pop
subl
sahf
jo
stc
fldt
scas
lahf
imul
sar
out
aas
das
sub
mov
dec
or
stc
les
arpl
xchg
jg
std
call
and
loop
jg
mov
inc
lcall
addr16
push
xor
and
scas
dec
mov
cli
loop
inc
inc
fsubl
inc
cli
mov
push
dec
loop
dec
repnz
adc
push
jg
mov
cmpsb
adc
xorb
mov
adc
mov
dec
inc
cmp
xchg
cld
inc
mov
push
push
push
insl
jmp
out
outsb
add
xchg
fwait
lds
cmc
jae
or
clc
pop
xor
mov
incb
push
js
popa
inc
pop
pop
xor
add
jmp
mov
mov
cmp
mov
popl
arpl
and
adc
pop
ja
cli
ss
mov
xchg
aaa
xor
ja
sub
mov
fadd
idivl
popa
les
sub
mov
mov
lret
mov
cmp
cmc
sbb
and
mov
loopne
lahf
and
leave
je
aas
loope
push
insb
ret
xchg
mov
pop
lods
and
mov
mov
sbb
and
inc
stc
mov
loop
loope
add
sub
add
jmp
loopne
test
jp
add
cmc
and
pop
sub
jbe
jno
add
or
into
aad
out
add
and
ret
xchg
xor
lock
sbb
adc
adc
pop
jo
lahf
ja
and
and
xchg
add
enter
movsl
decl
dec
popa
dec
mov
cwtl
inc
inc
and
sbb
xchg
movsl
jne
cmp
jo
aaa
leave
iret
sarb
add
test
pusha
into
pop
call
icebp
jno
inc
mov
and
js
dec
mov
inc
es
mov
adc
shlb
pop
movsb
sbb
sbb
imul
call
lea
xchg
mov
test
inc
rcrl
inc
lods
arpl
jle
in
sub
popa
ja
imul
mov
mov
push
adc
icebp
sbb
ret
out
scas
jge
jbe
inc
sub
shrb
inc
sar
xor
push
mov
aaa
fisttps
scas
clc
xor
fwait
lock
jmp
inc
in
pop
mov
jmp
js
loopne
pop
or
dec
inc
popa
stos
mov
subl
pushf
ret
or
and
mov
pop
cld
pop
inc
nop
shll
push
lods
cmp
iret
cltd
xor
and
and
or
cli
pop
xlat
xor
addl
sbb
lods
mov
lahf
clc
mov
shll
xor
sub
jns
mov
sub
lcall
bound
adc
mov
xchg
cmp
mov
subl
clc
adc
push
mov
shlb
push
incl
sbb
loopne
mov
aas
lods
jns
scas
pop
dec
ljmp
cli
pop
ret
add
mov
fstps
cmpsb
cmp
add
daa
pop
add
pop
neg
adc
out
ret
jbe
loop
test
jle
and
arpl
pop
fisttps
dec
test
pop
aad
leave
movsl
add
popf
jnp
cmp
push
cli
imul
mov
cli
dec
outsl
lock
or
or
cmp
test
pop
push
pop
add
pop
push
and
popf
testb
push
add
xor
jge
xor
jmp
xchg
aas
add
fwait
test
adc
mov
push
and
lret
dec
orb
xchg
cmp
pop
testl
aaa
pop
jns
pusha
mov
fmuls
mov
test
xchg
loope
dec
push
cmc
xchg
ret
ljmp
sbb
ja
mov
xchg
inc
ljmp
cltd
xchg
jns
adc
add
add
lock
test
push
pop
data16
add
cmp
ficomps
movsb
sub
in
movb
pop
add
cmp
mov
add
ljmpw
stos
jne
jno
negl
lock
popf
inc
inc
loop
jg
les
sub
inc
loop
std
mov
inc
jmp
mov
or
repnz
mov
xchg
inc
popa
pop
sahf
sub
adc
mov
lods
jl
cld
inc
push
daa
hlt
loop
cmp
test
lods
cmc
es
or
cmp
ret
into
test
aas
and
mov
pop
inc
fnstsw
pop
inc
aad
movsl
dec
sbbl
sub
and
lcall
ss
cmpsb
sub
cmp
in
sbb
pop
test
pop
add
mov
addr16
sar
mov
mov
push
xchg
nop
push
pop
hlt
xor
push
fstps
aad
inc
jnp
sbb
and
shlb
out
fbld
adc
mov
jmp
lods
or
inc
xor
and
sbb
mov
pushf
mov
xchg
adc
mov
jbe
mov
push
fst
adc
cmp
gs
xor
sub
ljmp
add
or
ret
js
dec
rcl
stc
add
gs
aam
aas
sarb
adc
arpl
cltd
lret
inc
ret
pop
dec
jle
or
mov
out
mov
xchg
mov
mov
movsl
dec
mov
sub
mov
sbb
outsb
dec
mov
sbb
mov
mov
arpl
xchg
addr16
fstpl
dec
pop
into
or
pop
test
rcll
pop
clc
jno
push
lea
push
and
clc
ret
cli
cltd
ds
ret
jmp
inc
cld
push
je
fsts
in
and
insb
outsl
stc
xor
cmp
jle
or
or
mov
mov
pop
fmuls
popa
cmp
add
pusha
in
fmull
scas
iret
popa
std
add
ljmp
mov
jg
fsubs
xchg
push
sub
add
add
decb
cmpsl
fildl
in
sub
pop
xor
or
imul
pop
sbb
lock
cmp
sti
add
mov
cmp
xor
mov
add
jo
push
lds
inc
aaa
sub
jbe
xor
fwait
xchg
add
movsl
pop
jg
fisttpl
and
pop
aaa
loopne
mov
outsl
push
jg
aas
clc
cmp
push
adcl
cmp
loope
pop
jb
iret
mov
add
mov
jmp
inc
popa
dec
cmpsb
xchg
adc
pop
inc
pop
push
stc
paddd
shlb
xchg
push
inc
fs
push
movsl
xor
loopne
sarb
inc
cmpsb
pop
inc
out
repz
and
cli
mov
inc
mov
imul
pop
xchg
sub
push
scas
jecxz
mov
addb
adc
lods
in
dec
adc
pop
lock
sbb
das
xchg
adc
nop
mov
dec
inc
mov
jae
inc
popf
clc
add
mov
sub
adc
mov
push
mov
mov
test
pop
and
aas
mov
adc
add
jge
out
adc
aaa
pop
inc
pusha
inc
pop
imul
add
cwtl
adc
pusha
push
aad
inc
cld
sbb
lock
add
repnz
ficompl
and
ja
mov
mov
popf
inc
ret
popf
xchg
cmpsb
pusha
push
cmp
jg
cmpsl
jae
push
movsl
or
xchg
push
cld
sbb
xor
mov
rorl
push
cmp
clc
pop
sar
dec
pop
nop
dec
ljmp
lds
dec
cltd
rcrl
pop
jne
sub
sbb
add
arpl
test
jle
out
icebp
cmp
cmp
mov
sbb
mov
pop
jmp
sbb
mov
adc
setp
fdivl
js
cmp
add
hlt
dec
ret
xchg
dec
push
cmp
les
adc
in
lods
cmpsb
cmp
jle
ret
pop
in
data16
bound
leave
inc
jae
ret
pmullw
dec
adc
add
incl
int
push
call
push
sbb
or
in
dec
push
loop
pop
and
dec
loopne
pop
stos
push
aam
push
jno
xchg
clc
mov
xor
in
dec
in
and
retw
jg
sbb
movsb
cmp
nop
roll
in
and
mov
movsl
aam
ljmp
sub
push
dec
ror
enter
nop
jle
jno
hlt
sbb
ss
dec
loopne
iret
filds
cmp
inc
mov
into
inc
pop
out
cmc
incl
xor
xchg
lock
adc
adc
dec
sbb
loop
btc
fsubp
and
dec
jecxz
int3
iret
es
xchg
cmp
inc
fmul
and
pop
lock
dec
jnp
das
rol
fadd
and
outsb
sub
sbb
xor
cmp
insb
lea
pop
nop
pushf
rorb
and
insl
cmp
add
pushf
pop
insb
mov
divps
inc
adc
orl
and
inc
push
fstl
and
xchg
jne
add
rolb
and
or
sarl
cmp
js
loopne
jb
dec
jne
fld
add
xchg
pop
xchg
jg
das
incl
clc
ret
aad
loopne
dec
cltd
pop
roll
pop
adc
or
xchg
xchg
les
push
out
pop
loopne
mov
iret
and
mov
or
rcrb
pop
mov
xorb
mov
sub
jecxz
lcall
pop
shl
adcl
mov
test
mov
or
push
dec
dec
cwtl
jo
sbb
pop
fwait
dec
rcr
ljmp
jmp
xorb
cmp
sub
sub
and
repnz
pop
pop
cmp
scas
mov
loope
pop
mov
mov
into
aam
pushw
pop
and
cmp
hlt
pop
cld
scas
and
es
jmp
xor
cmp
jle
mov
sbb
jmp
fcoms
stc
sbb
movsb
jnp
xchg
xchg
sbb
adc
jns
add
std
ja
enter
jo
jg
incl
or
jp
jbe
leave
icebp
fdiv
popa
sub
mov
mov
or
in
cmp
ds
and
dec
stc
movsl
dec
stc
out
pusha
xor
sti
movsl
sbb
lret
movsb
aas
lock
mov
sub
cmpl
or
fimuls
lahf
outsl
rcll
inc
dec
pop
fs
cmp
sbb
inc
sbb
dec
popa
invd
xchg
movsl
nop
fcmovbe
adc
imul
outsb
mov
xor
das
mov
jne
mov
cmp
lods
and
mov
fisttpll
add
mov
mov
mov
mov
sbb
test
aad
scas
cmp
inc
sbb
mov
inc
sbb
pushf
pop
cld
mov
dec
iret
push
and
jmp
aas
jg
aas
clc
mov
jo
add
movsl
push
jecxz
mov
les
cmc
shr
push
mov
mov
xor
inc
inc
mov
hlt
ja
mov
jno
sub
add
adc
rcll
mov
inc
dec
push
fimull
pop
add
jecxz
mov
ret
ds
jnp
adc
stos
add
push
orb
adc
cmp
push
jno
add
mov
sbb
repnz
mov
add
ret
or
mov
popa
mov
hlt
imul
dec
leave
std
push
jmp
jb
dec
std
call
rol
cvtps2pi
xor
ja
pushf
rcrl
add
pop
xor
dec
out
sub
mov
sub
mov
sahf
pop
mov
mov
shlb
repnz
hlt
jns
jmp
mov
mov
push
mov
fnsave
inc
pop
inc
std
add
xor
sbb
or
ds
or
repz
cmp
loope
mov
xor
je
shll
in
dec
mov
inc
bound
ljmp
rolb
mov
frstor
mov
pop
or
xor
add
mov
push
mov
and
jns
jl
jne
add
xlat
lds
push
jno
mov
xchg
pop
push
mov
or
mov
push
and
out
and
inc
hlt
out
adc
push
cmp
add
cmpsb
jge
mov
pop
dec
adc
insb
movb
call
cld
xchg
jecxz
cmp
inc
cmpsb
xor
sbb
stos
pushl
adc
loope
cmp
int
rol
mov
loopne
xor
icebp
push
xor
ret
call
inc
sbb
adc
enter
pop
xorl
cwtl
or
mov
sub
dec
pop
lret
add
stc
inc
and
cmpb
scas
mov
push
cmp
in
stc
add
incl
adc
or
insl
jl
jle
sti
and
pop
in
mull
cld
lds
ds
sahf
ljmp
add
mov
fmull
mov
and
pop
jp
punpcklwd
mov
sub
inc
mov
jle
fdiv
cld
or
lret
sub
xorb
or
outsb
mov
jmp
fmul
mov
jg
dec
addb
and
sub
rep
daa
test
lds
pusha
inc
inc
mov
xlat
xchg
push
sbb
imul
xchg
pop
pop
mov
or
cmp
add
pop
push
dec
les
inc
arpl
add
out
std
stc
cli
or
stos
lret
ss
sarl
pop
add
inc
push
cmpsl
push
and
shl
sahf
int3
jp
xchg
pop
mov
jb
inc
cwtl
addb
mov
inc
jb
ds
jg
std
cmp
adcb
outsb
rcrl
or
aas
adc
push
or
lods
jnp
cmp
pushf
cmp
daa
sbb
pop
adc
adc
mov
xchg
out
xor
add
and
out
cs
popa
repz
inc
arpl
fidivrl
nop
popf
decl
cmp
mov
in
sarl
outsb
test
repnz
and
clc
mov
insl
decl
push
sub
inc
inc
cmp
outsb
add
jae
cli
aas
fmull
outsb
inc
lds
pop
mov
mov
mov
lret
sbb
nop
fcmove
add
pusha
lods
ss
pop
jle
sbb
cmp
lods
fnop
mov
and
test
xor
fcmovb
movsb
dec
pushf
imul
push
push
sbb
inc
orb
pop
fwait
xchg
push
enter
pop
dec
lahf
outsb
cmpb
je
push
or
test
and
int3
jge
xor
rcll
fidivl
cld
pop
ljmp
enter
push
adc
push
sub
adc
pop
lods
push
pop
sbb
sbb
sub
nop
inc
sub
xchg
mov
xor
push
pusha
push
add
aam
push
sti
xor
or
and
pmaddwd
lock
cmp
scas
out
or
xor
adc
pushf
sbb
hlt
clc
jnp
ljmp
xchg
pop
ljmp
sub
push
mov
pop
sbbl
xchg
push
jae
push
out
sti
subl
xor
or
pusha
sbb
int3
cmp
outsb
jge
or
ret
or
out
cmp
loop
fld
inc
pop
incb
dec
std
inc
fistps
dec
xchg
popa
js
stc
push
test
sub
andb
sar
pop
xchg
lret
xor
movsb
adc
bound
add
xchg
cmc
mov
icebp
sbb
sbb
movsl
push
ficomps
or
cmp
daa
jmp
jp
shr
push
cmp
loope
adcl
insl
add
popf
sub
cs
mov
cmp
ss
ret
xor
add
jbe
adc
imul
sub
mov
adc
pop
movsb
aas
cmp
nop
lods
mov
xchg
rorl
fmul
nop
outsl
mov
push
dec
movsbl
mov
cld
int
ljmp
fisubl
fidivrs
xor
cli
pop
ret
dec
cmpsl
ret
popf
xchg
push
aam
xchg
pop
xchg
and
imul
cli
dec
cmp
adc
sub
das
sub
push
mov
mov
adc
cmp
jmp
out
push
cmpsb
push
cs
pop
jbe
cltd
add
inc
mov
bound
bound
and
and
xchg
push
cwtl
arpl
dec
or
call
push
xchg
inc
cld
shld
hlt
adc
inc
push
add
xchg
sub
jecxz
test
sbb
inc
dec
std
xor
lods
jne
mov
in
jecxz
and
cmp
scas
mov
lahf
jecxz
outsl
cmpsb
addl
cmp
lock
pop
cmpsb
clc
dec
xor
mov
cmp
mov
aas
inc
inc
sbb
inc
fwait
xchg
and
mov
cmpl
test
int
cmp
sub
mov
add
push
push
mov
imul
jns
pop
je
jns
pop
cmc
fwait
cmpsl
data16
sub
insb
or
cmp
sti
push
inc
pop
test
in
ja
adc
xor
imulb
mov
lock
sub
xchg
dec
fidivs
hlt
mov
and
or
jb
add
xchg
mov
mov
insb
inc
and
mov
in
mov
in
mov
das
outsb
pop
ss
inc
mov
bnd
daa
iret
repnz
inc
scas
pusha
xorb
or
mov
push
stos
addb
je
test
or
mov
or
bound
pop
add
int3
xlat
add
xchg
scas
jp
faddl
push
les
ja
cli
loopne
mov
cli
xor
xor
aas
sbb
jge
shlb
lahf
in
or
push
xor
inc
pop
mov
imul
xchg
bound
or
xor
dec
mov
imul
xlat
inc
mov
sub
fs
cmp
add
pop
cmc
mov
adc
pusha
add
mov
xchg
or
lods
cli
jmp
not
mulb
je
mov
lret
add
scas
lret
jg
inc
sarl
shlb
mov
cmp
sub
orb
fucomip
andl
scas
xchg
push
sbb
jle
pushl
sbb
xchg
push
int3
aaa
mov
shlb
out
addr16
pop
rorb
pusha
sub
popa
and
lcall
stc
xlat
and
dec
mov
and
jle
xor
jno
xchg
xor
enter
xchg
inc
fstps
rorb
ja
xor
inc
ljmp
cld
cmp
or
aaa
xchg
dec
dec
iret
les
adc
mov
rcrl
lock
sbb
mov
sbbb
shlb
sub
std
dec
lods
cli
dec
stos
ret
fadds
or
cli
cmp
xor
test
inc
pop
mov
clc
je
inc
add
cmpsl
lea
lret
and
cmp
dec
pop
mov
sub
ja
inc
jle
push
add
aas
mov
xor
jns
cmp
xchg
cld
pop
cmp
mov
xchg
lret
sarl
into
ds
dec
fwait
sbb
mov
mov
insb
add
das
xor
pop
fsubl
sbb
jl
pop
in
jnp
add
decl
ds
aad
in
ja
cmp
pop
push
insl
push
jl,pt
mov
insb
js
mov
mov
mov
popa
or
enter
mov
cmpsl
dec
jne
push
test
pop
cmp
push
add
mov
xchg
add
inc
add
inc
jno
inc
lds
fistl
inc
xor
xor
js
clc
xlat
in
movl
pop
cmp
enter
out
mov
mov
stos
adc
xor
in
jb
pop
ss
fcoms
jmp
testl
mov
or
js,pt
fs
push
and
in
mov
and
push
jmp
imul
jbe
xchg
es
mov
inc
and
jo
push
pop
and
pusha
mov
jno
mov
xor
xor
sbb
jmp
int
pop
ljmp
cmp
add
cmc
and
popf
insb
sub
mov
ret
ffreep
stos
sahf
xchg
sbb
adc
adc
cld
or
adc
cmpsb
in
and
fcomip
sbb
bound
int
shl
xchg
nop
xor
clc
movq
flds
hlt
mov
mov
sbb
cmp
or
pop
add
ja
pop
psllq
pop
icebp
arpl
inc
lods
call
xor
fiadds
lret
jmp
movsl
lds
movb
lahf
shr
sub
xor
je
aad
aad
jg
scas
test
mov
notl
loope
pop
pop
sub
sbb
and
dec
push
cwtl
in
das
clc
out
and
test
daa
push
push
xchg
or
out
xor
xchg
push
xor
mov
sbb
add
push
test
jl
cs
stos
dec
add
icebp
mov
jle
cmc
aam
sarl
sub
inc
test
enter
cld
call
insb
cmp
std
dec
xchg
movsl
pop
bound
xor
mov
sub
xchg
int3
lods
inc
loop
add
insb
lcall
test
adc
inc
jno
aam
cli
jecxz
or
faddl
loopne
hlt
repz
hlt
adc
stos
xchg
xor
xchg
adc
add
pop
mov
sub
dec
orl
cmp
test
es
pop
lock
mov
inc
add
into
mov
jge
mov
ret
jecxz
push
out
imull
ja
jg
mov
loope
lahf
sbb
mov
inc
lods
rol
imul
add
cmp
pop
lea
icebp
push
mov
cmp
gs
lds
in
out
cwtl
lds
test
and
xchg
adc
mov
leave
decl
inc
adc
pop
cmc
add
insl
adc
pop
sbb
add
cld
pushf
incl
add
in
movsl
sbb
add
decl
loopne
mov
cmpl
sub
lds
inc
outsb
mov
fiadds
fdivr
idivl
cli
jecxz
dec
repnz
adc
call
push
inc
inc
add
jb
push
loop
pop
aaa
jno
jb
popf
outsl
test
fistpll
jb
lahf
in
mov
jle
aas
push
mov
or
adc
xchg
std
mov
testl
frstor
insb
rcr
pusha
dec
adc
testb
ficompl
sub
add
dec
addr16
shl
cmpsb
cltd
and
ss
outsb
iret
inc
cmp
cld
mov
add
adc
jp
xor
scas
lret
pushl
cmpsb
ret
rorl
mov
mov
pop
adc
pop
outsl
push
jns,pt
jnp
outsl
ret
mov
enter
or
push
popf
rcrb
cmpsl
fucomip
add
wrmsr
xchg
jo
rorb
xchg
ljmp
andl
mull
or
or
adc
js
loopne
stos
jbe
les
aam
fidivs
aaa
or
cmp
mov
and
mov
and
jmp
out
aaa
adc
rorl
cmpsb
ret
js
incl
enter
in
adc
addr16
push
cmp
rcrb
or
out
push
dec
mov
sbbl
dec
inc
pop
test
add
shlb
ret
xchg
fiadds
inc
imul
jecxz
fnstenv
jge
pop
mov
lret
sahf
xchg
inc
test
jnp
push
sub
xchg
vpshaw
pop
movsb
mov
push
pushf
push
clc
ds
xchg
mov
cmp
imul
pushf
or
xor
lods
incl
shlb
mov
adc
or
outsb
add
mov
idivl
std
and
inc
dec
scas
in
push
and
pop
pop
bound
lock
add
xor
pop
inc
add
cld
nop
shll
or
lock
or
jg
pusha
movsb
pop
ret
push
jne
fs
std
mov
in
push
add
lcall
cmp
loope
fdivs
adc
insl
xor
jge
jb
sbb
pop
xchg
aaa
decb
cld
push
push
xchg
jbe
cmp
sbb
nop
cli
fimull
imull
push
adc
jg
mov
ja
cmp
cmpsl
lret
sub
decl
lods
loop
xchg
dec
push
out
jle
lock
mov
fistpll
xor
add
and
xchg
mov
es
mov
incl
decb
mov
scas
push
or
cwtl
out
xor
add
ds
xchg
test
mov
shrl
movsb
add
mov
push
scas
out
and
mov
repz
push
rcrl
lret
push
out
loopne
imul
add
cmpsl
scas
decl
jge
enter
daa
xor
adc
jne
jecxz
inc
dec
lret
lahf
push
pop
enter
lret
lock
call
cmp
imul
rorb
adc
test
xchg
aad
mov
rorl
cld
push
daa
push
cmpl
mov
dec
loope
jb
jg
faddp
cwtl
mov
cmc
lock
subb
cwtl
adc
sub
xchg
cmpsb
sbb
sbb
mov
or
pop
loop
cmp
add
xchg
xor
cmp
adc
test
pop
insl
addr16
jmp
test
jecxz
rcr
push
mov
cld
clc
and
jns
or
out
repz
or
jmp
hlt
subb
jmp
push
inc
sbb
or
jno
and
lret
push
push
jle
test
add
sbb
sub
and
lods
rclb
inc
out
mov
kunpckwd
jmp
icebp
add
data16
cld
xchg
mov
mov
sbb
push
not
pop
stc
mov
popa
xchg
cmpsb
testl
adcl
and
dec
push
sub
or
sbb
sbb
shl
cmp
and
fsts
push
mov
cmp
or
fbstp
leave
add
sbb
bsr
icebp
sbb
push
sub
std
add
or
dec
xchg
out
loop
inc
sbb
mov
lret
in
add
fists
mov
fisubrs
sbb
push
ret
jns
daa
pop
dec
loope
pushf
ds
in
inc
jle
test
lock
es
dec
xchg
cltd
add
es
jnp
in
sarl
aam
pop
fnstenv
xor
push
out
mov
in
pop
loopne
mov
lret
jo
push
push
mov
mov
cld
in
push
clc
mov
cmp
xor
imul
aas
push
hlt
pop
mov
xor
imul
mov
jp
clc
jmp
and
call
pop
and
jae
sarl
fstl
or
cs
jecxz
sub
inc
mov
sbb
push
fildl
and
fcompl
pop
lahf
in
mov
mov
add
dec
mov
xor
sahf
clc
mov
sbb
aaa
adc
ss
xorl
insl
inc
insb
sbb
add
stos
lock
sub
fdivr
aas
cld
repnz
inc
mov
and
test
dec
xchg
jnp
jge
fdiv
shlb
fisubrl
movl
shrb
cmp
jle
cmc
push
leave
pop
out
xchg
pop
clc
out
out
fistps
insb
mov
adc
sub
cmp
cmp
xchg
pop
mov
stc
xor
adc
scas
push
jno
adc
fs
shll
jg
push
jle
scas
jno
mov
and
and
aaa
mov
mov
jo
add
jg
icebp
push
outsl
jmp
mov
shlb
mov
roll
adc
add
mov
repz
sahf
inc
xor
add
add
xchg
and
clc
xchg
jp
fistps
mov
in
push
es
dec
mov
push
ficomps
jns
testb
loopne
shr
lea
out
push
push
jecxz
xor
and
mov
out
push
scas
mov
pop
pusha
data16
mov
and
cmpsl
cs
sub
and
rolb
das
fldt
popf
jno
and
mov
jl
mov
add
pop
test
cmp
dec
jle
inc
xor
ds
int
shll
pop
jne
push
in
lds
jbe
xor
mov
sub
mov
fists
popf
lea
paddsb
pop
mov
mov
daa
adc
jge
push
cmpsb
push
pop
scas
shlb
nop
mov
lret
jge
hlt
dec
sbb
mov
pop
dec
push
ficoml
add
lds
aaa
adc
jo
pop
or
xchg
push
bound
aas
stos
aad
or
jle
sub
fsts
cli
jb
lds
jg
xorl
fisubs
shll
pushf
push
icebp
pop
popa
fidivs
clc
and
and
lods
add
cmp
addr16
std
lahf
and
jb
mov
xor
ja
sbb
add
push
mov
push
or
inc
fs
mov
or
and
aas
or
decl
mov
or
xor
dec
xor
pop
push
shr
imul
pop
sbb
in
repnz
push
loop
mov
arpl
or
xlat
mov
cli
test
xchg
pop
mov
cwtl
cmp
cs
cld
ljmp
inc
pop
mov
scas
jle
pop
sbb
popf
das
aam
adcb
add
pop
aam
in
jo
rorb
xor
push
pop
inc
push
inc
pop
fsubl
jnp
jle
xchg
jns
jmp
push
lea
stos
add
mulb
add
or
mov
adc
dec
enter
sub
testl
adc
mov
in
xchg
iret
xor
shl
divb
test
pop
mov
adc
fdivl
jb
cmp
add
push
jb
mov
mov
fwait
xor
jb
jge
dec
ja
adc
movsl
mov
sbb
jnp
aad
xchg
sub
cmpsl
adc
add
fldl
push
sbb
ret
pop
or
sbb
cmpsb
test
test
test
push
arpl
or
dec
cmpsw
cmp
inc
sub
cmc
insl
in
lea
pushf
pop
lahf
and
cld
nop
test
jge
decl
inc
mov
sbb
std
clc
in
xor
nop
add
cld
leave
sub
dec
add
jmp
and
inc
test
pop
imul
cmp
mov
add
into
push
fsubrp
aas
stos
lahf
jg
pusha
mov
mov
mov
sarb
add
int
adc
das
insl
push
pop
xor
clc
pop
fnstenv
pop
jp
cwtl
out
jecxz
loopne
aas
leave
ficompl
ja
xor
sbb
mov
orb
mov
mov
add
xchg
add
or
add
sbb
push
and
mov
ss
cmpw
lock
in
or
fsubrs
push
dec
rolb
sub
xor
call
mov
rorb
sbb
xchg
mov
inc
std
adc
packuswb
adc
fbld
jno
mov
inc
cmp
dec
shrl
aam
das
lea
dec
adcb
cld
push
mov
lock
push
cmpsb
int
movsb
adc
hlt
divb
ja
outsl
adc
or
popa
ret
mov
shrb
push
sti
cld
push
and
ss
push
outsb
out
add
imul
or
pushf
and
push
popa
add
add
fs
pop
xchg
pop
shlb
push
push
push
or
shrb
cmp
sbb
adc
xchg
fs
sbb
cmpsb
pop
stc
xchg
out
pop
inc
sarb
pop
mov
nop
inc
inc
daa
jge
rorb
xor
mov
mov
mov
mov
dec
cmp
mov
imul
sbb
add
outsl
ret
and
outsl
and
repz
xor
popa
mov
push
push
outsl
jecxz
inc
mov
push
mov
push
pop
bound
int3
sbb
movsb
pop
push
stos
add
std
pop
outsl
xor
push
pop
inc
adc
mov
js
pop
sub
lret
cmpl
jno
fdivl
lds
xor
sarl
ret
xor
jmp
das
dec
pop
and
outsb
lods
add
adc
pop
ds
mov
or
mov
push
push
shlb
and
xchg
dec
jle
outsl
clc
mov
out
cmp
in
push
sub
mov
outsl
loopne
push
out
ror
push
pop
sub
sub
cmpsl
pop
lret
aas
lds
int
push
add
cmc
add
push
out
test
and
jo
out
cld
push
cmp
lds
in
xlat
pop
pop
or
push
loop
add
jp
incl
mov
jl
jbe
pushf
nop
imul
repnz
xchg
xor
push
icebp
insl
sti
push
adc
mov
ret
cld
rolb
pushf
mov
jg
hlt
out
or
lcall
pop
mov
jb
mov
jge
add
sbb
push
jg
add
or
or
pop
shlb
pop
or
mov
sbb
push
xor
shrb
push
xchg
inc
jg
inc
inc
mov
ljmp
add
lods
pop
jmp
inc
test
add
les
test
jmp
or
in
cld
sbb
and
adc
fsin
stos
fcoml
imul
lock
ucomiss
loopne
inc
and
mov
cli
pop
das
loope
loopne
hlt
js
sarl
jne
mov
movsb
lock
jns
aad
fcoml
bound
pop
scas
sbb
adc
cli
fwait
jno
jecxz
pop
jg
out
ljmp
mov
outsb
or
mov
imul
push
push
add
scas
mov
xchg
clc
mov
int3
pop
mov
pop
cmc
incl
add
insl
jno
stc
add
lea
jle
orl
ja
and
mov
cltd
cli
sub
add
push
cwtl
pushl
push
or
xchg
ds
push
sti
incb
pop
mov
push
cli
les
test
xchg
push
icebp
pop
cmp
mov
in
sbb
cmp
mov
or
mull
loop
sbb
dec
mov
es
fnstenv
jns
and
cmp
pop
cli
in
pop
adc
lods
push
xor
or
sbb
js
add
fcmovb
or
jno
lcall
cwtl
sbb
mov
pop
stc
stos
jg
push
push
xchg
rolb
and
push
inc
in
mov
push
push
sbb
popa
insl
fsubrl
mov
cmpb
mov
adc
aad
dec
js
jg
in
add
adc
xchg
mov
mov
int
cmp
mov
in
mov
and
testb
scas
xor
adc
scas
fs
aam
test
and
icebp
outsl
or
inc
clc
dec
jmp
loope
fmuls
int3
push
dec
jne
add
push
sbb
inc
adc
hlt
testb
rcr
add
roll
mov
jge
sbb
add
fmull
ds
hlt
pusha
jle
and
jl
inc
cmpsl
xchg
imul
dec
add
je
inc
repnz
mov
frstor
mov
and
pop
stos
push
jne
adc
jg
ljmp
jo
xchg
orb
mov
add
inc
scas
adc
and
mov
sahf
ss
std
mov
leave
mov
or
jae
ja
pop
xorb
jp
sub
fs
cmpb
dec
pop
lods
mov
push
cmpsl
call
loop
cmp
mov
adc
xor
fwait
and
pmaddwd
pop
pop
or
and
sarl
jp
push
jae
add
fcmovnb
push
aam
push
jp
sbb
cmc
sbbl
lods
mov
fucomip
sub
cmpsb
jnp
sbb
pop
pusha
dec
add
rcrb
and
pusha
mov
xchg
loope
push
pop
arpl
xchg
paddsw
and
arpl
inc
ret
imul
stos
movsl
test
dec
std
cmp
push
pop
jo
and
repnz
das
jl
cltd
xchg
and
leave
push
cmpsl
lds
out
out
sar
outsb
xlat
xor
lcall
cmp
into
push
in
rcl
es
les
testb
cmp
repnz
loopne
aam
cmp
pop
je
cmpsl
sbb
insl
pop
loop
jo
pop
lock
jp
and
popf
sub
mov
or
push
call
push
cmc
push
pop
xchg
loopne
cli
adc
and
rcr
das
push
out
add
cmp
cmp
mov
cld
aas
test
sti
mov
sbb
or
mov
adc
mov
xchg
add
outsb
sbb
pop
iret
adcb
jp
mov
pop
cmp
das
mov
orb
jg
lock
cltd
nop
bound
cmp
aam
fisubs
js
cmp
ljmp
bound
or
mov
xchg
mov
mov
sub
and
push
or
mov
xchg
push
jl
cmp
movsb
imul
push
jae
add
xor
pop
dec
mov
fwait
jno
mov
pop
cld
push
les
add
js
jb
das
aad
shll
push
pop
arpl
jmp
mov
mov
mov
mov
lret
dec
push
mov
rclb
add
pop
push
mov
lock
adc
dec
jbe
in
repnz
add
adc
mov
popa
out
imul
daa
push
outsl
daa
add
ret
pushf
xor
mov
ss
cmp
ss
dec
movsl
mov
stos
dec
xor
mov
jno
xor
push
js
adc
outsb
cwtl
lret
push
jbe
dec
cmp
adcl
jnp
push
dec
es
xorb
mov
imul
sbb
xor
bound
inc
sub
stos
add
xor
adc
mov
push
push
sahf
mov
ret
jecxz
mov
cmp
xor
lret
inc
les
push
dec
jg
xlat
lahf
xchg
sbb
lret
mov
and
sub
add
cmpsb
stos
aas
clc
movsb
mov
inc
mov
add
add
sub
mov
in
cmp
mov
push
loopne
in
sub
lods
fiadds
pop
push
adc
cld
push
mov
sbb
jmp
dec
iret
pop
dec
add
idiv
unpckhps
xor
jg
xchg
jle
xchg
cmp
int
cld
mov
jp
mov
in
mov
push
or
sbb
dec
pop
jge
xchg
mov
xchg
bound
hlt
inc
cmp
sbb
stos
sub
or
pop
shl
out
or
outsl
in
bound
fisubrs
push
mov
fst
jb
inc
popl
js
call
js
sub
out
test
cmp
dec
ljmp
pop
push
sub
cmp
xor
lods
fstl
dec
loop
pop
dec
aad
push
or
pop
test
movsb
xchg
aaa
psraw
movsl
push
paddq
cltd
sbb
cmpsl
mov
push
jae
add
push
inc
test
pop
mov
vmsave
mov
or
sbb
decb
addb
es
out
lock
movsb
sti
dec
popf
aad
cmp
ds
jb
sahf
ss
andb
fwait
or
imul
lahf
fcmovu
dec
sbb
sub
shr
adc
mov
sub
jge
or
cld
lahf
andl
mov
xchg
in
jmp
add
test
pop
inc
jnp
cmp
les
nop
inc
fisttpl
add
cmpsb
or
shll
pop
sbb
inc
js
adc
fidivrs
sbb
pushf
pop
adc
add
jbe
mov
out
mov
loope
mov
rolb
inc
lret
add
lods
inc
xor
add
lods
xor
lret
cmp
repz
adcb
and
cmp
je
test
dec
cmp
test
adc
or
cmp
mov
pop
sbbl
push
test
hlt
inc
mov
orb
scas
adcl
shl
inc
or
and
enter
and
in
mov
movsl
pop
scas
daa
insb
xchg
dec
repz
in
mov
pusha
sub
or
sbb
ljmp
stos
mov
xor
bnd
lods
push
cmpsb
movsl
push
xchg
sbb
xorb
cmp
insl
in
push
scas
loopne
xchg
mov
outsl
dec
xchg
pop
je
mov
enter
std
xchg
xchg
xchg
jns
outsl
out
add
bnd
loop
pop
and
in
jmp
and
sbb
std
push
jbe
pop
dec
jno
xchg
jne
es
inc
dec
pop
xor
pop
mov
and
pop
and
iret
hlt
cmp
stos
fstpt
jecxz
jg
lret
add
adc
or
adc
adc
mulb
sbb
pop
adc
fs
dec
stc
push
and
out
jae
mov
dec
dec
sbb
push
test
mov
call
or
popf
sub
dec
rorb
sub
inc
mov
icebp
lock
adc
add
push
mov
pop
sbb
lods
sub
test
ret
jo
push
jo
daa
dec
fcompl
cmp
test
cltd
cmpb
cld
shrb
xchg
xchg
add
out
in
pop
xchg
or
cmp
adc
mov
int
mov
ja
add
inc
push
add
aaa
dec
jecxz
jl
int
out
inc
xchg
int3
loope
pop
add
stc
outsb
add
inc
inc
add
mov
sahf
mov
shll
xchg
mov
jg
push
aaa
lcall
pop
inc
cmp
addr16
arpl
inc
or
mov
push
pop
and
push
xor
sub
pop
xor
stos
mov
rep
adc
std
mov
jl
mov
fdivrs
or
add
sub
loopne
shl
faddl
jmp
hlt
test
xor
clc
dec
jg
les
sbb
in
js
loope
cmp
sub
mov
fadds
xlat
xor
push
push
hlt
daa
sub
sbb
push
jbe
dec
xchg
shlb
xchg
sbb
test
scas
ja
jb
jle
rcrl
add
xchg
pop
and
mov
inc
clc
popf
inc
ficompl
fsub
ffree
jns
or
sub
sbb
mov
decl
sub
fadd
ds
or
dec
loop
aaa
into
sub
adc
xor
mull
sbb
add
inc
sti
cwtl
shll
in
sahf
or
sub
xchg
xor
out
pop
mov
popa
mov
push
sbbl
sbb
add
les
xchg
mov
push
xchg
push
mov
loop
or
dec
sub
jne
shlb
mov
xlat
mov
sbb
jo
in
adc
aaa
ljmp
pop
xor
sbb
cs
jae
popf
mov
or
ret
pop
add
mov
jb
xor
cmp
sub
insb
push
jnp
cmp
loope
or
rol
or
mov
test
stos
sbb
add
sbb
xor
fdivl
hlt
daa
push
pop
adc
scas
mov
int3
clc
and
sub
rcl
lret
or
mov
cltd
clc
subl
wrmsr
outsl
test
idivl
je
mov
and
in
mov
adc
push
pusha
add
loope
pop
push
imul
loop
and
xchg
inc
cmp
xor
js,pt
scas
int3
call
daa
loop,pt
inc
mov
iret
mov
fucomip
cmp
roll
repnz
clc
ret
sarl
mov
push
ss
lock
pop
repnz
mov
dec
or
aaa
or
or
mov
call
loope
xchg
jl
into
mov
fcoms
add
sbb
enter
jmp
mov
pop
jl
mov
daa
rorb
out
inc
test
inc
mov
pop
pop
pop
pop
es
nop
test
pop
and
orl
call
inc
cmc
stc
or
out
sbb
pop
push
insb
xor
xchg
mov
or
add
push
add
pop
xor
clc
aam
test
bound
jl
frstor
add
push
mov
sub
pop
cmp
lret
inc
test
rorl
fldenv
lcall
jmp
sti
mov
mov
mov
icebp
loope
repnz
jmp
xor
je
bound
out
inc
and
jo
push
mov
adc
test
fbld
sub
leave
je
insb
imul
push
js
rolb
punpckldq
fistpll
decb
sbb
sbb
loope
test
ret
iret
mov
popa
add
decl
or
lds
xor
add
fninit
xor
or
addb
sub
inc
into
aad
mov
aam
lods
push
mov
ljmp
xchg
mov
mov
mov
cmp
jp
mov
or
mov
aaa
movq
dec
jl
outsb
xor
adc
clc
stos
adc
out
fsts
clc
pop
sub
int3
dec
jp
dec
ljmp
mov
mov
inc
mov
mov
and
cli
insb
lods
ljmp
jbe
lds
ljmp
lea
mov
repz
sub
jecxz
xor
fimuls
mov
cli
sub
clc
mov
aas
sahf
mov
mov
scas
outsl
test
pusha
fs
pop
adc
popf
jecxz
js
pop
cli
push
scas
int3
enter
nop
inc
push
movsb
popa
mov
sar
stos
data16
xor
inc
aaa
mov
xchg
das
dec
dec
cmp
xchg
adc
mov
in
pushf
lods
fs
rclb
mov
push
pop
sbb
mov
ljmp
shr
movsl
cs
loop
out
fdivr
xor
stos
fdivp
mov
pop
popf
sahf
mov
add
fistl
dec
int
mov
movsl
xchg
sbb
insb
ljmp
inc
lret
insl
dec
mov
std
pop
mov
fmull
adc
rolb
mov
aam
int
jbe
push
or
out
inc
or
add
pop
jno
pop
xchg
xchg
loope
pop
push
fstpt
or
into
push
push
fldcw
cmp
mov
adc
scas
jo
icebp
lea
scas
fistpl
sub
jle
ds
xor
pop
add
ret
adc
cli
mov
loopne
clc
push
sub
adc
xchg
in
or
sti
nop
jb
ret
ja
loope
adc
hlt
ds
mov
mov
or
cmc
popf
xchg
pop
inc
and
xchg
mov
ret
sbb
dec
in
jecxz
xor
adc
mov
les
std
mov
movsb
clc
jle
xor
sti
pop
in
add
call
cmc
mov
test
pusha
mov
movb
jne
mov
shr
cwtl
pushf
fs
and
push
sbb
add
sub
decl
sbb
stc
clc
pop
add
mov
mov
add
cmp
sbb
insb
xor
cmp
or
and
jno
push
fisttpll
and
add
daa
lcall
fsubr
ljmp
inc
incb
cld
add
or
nop
mov
hlt
sbb
push
das
lock
in
mov
imul
sub
ret
pop
rcrl
or
mov
ss
sub
push
dec
adc
loopne
xor
mov
mov
xchg
test
in
insl
loopne
sbb
fidivs
jae
or
cmp
rcr
popa
pop
xchg
call
mov
ret
and
lods
mov
fdivrl
out
int
hlt
stc
aas
pop
out
mov
js
inc
fimuls
leave
aad
add
dec
cld
addb
jmp
insl
std
mov
test
mov
or
mov
in
lods
sbb
iret
cltd
lock
sahf
loope
ja
pop
lods
push
fidivrs
sahf
jo
fdivrl
jmp
pop
xchg
je
bnd
cmp
lock
les
jno
pop
mov
jne
sub
cmp
ficoms
adc
ret
push
pop
rcll
jmp
xchg
jge
in
mov
mov
jmp
pop
jmp
inc
push
loop
shll
xchg
cli
xrelease
loopne
xor
and
sub
dec
test
mov
repnz
stos
jp
pop
and
rclb
pop
and
cltd
out
es
scas
and
cmp
or
int3
add
test
mov
adc
js
mov
jle
decl
jmp
sub
mov
inc
dec
jle
mov
test
mov
jae
pshufw
mov
pop
test
cmp
je
xorb
xor
loop
dec
rcrl
bound
in
testb
or
stos
test
lock
in
dec
cwtl
inc
mov
push
sbb
jle
sbb
stos
pop
nop/reserved
subb
xor
add
lret
add
and
sub
cmpsb
jmp
xchg
sub
add
sbb
inc
fcoms
cmp
iret
int3
inc
rcrl
pop
ffreep
sysret
mov
lcall
sub
or
mov
jmp
js
lods
xor
add
jnp
mov
popa
add
mov
movsl
into
pop
jecxz
mov
adc
popf
out
ret
jg
movsb
mov
cmc
test
and
mov
mov
mov
or
sbb
jp
inc
mov
fwait
lret
mov
sbb
xchg
inc
lret
lea
cld
bound
or
pushl
out
xchg
xor
pop
push
jne
add
incl
dec
mov
inc
add
xor
out
std
mov
add
loop
out
push
adc
mov
std
cli
or
lods
dec
mov
xchg
roll
and
es
mov
out
mov
mov
mov
ret
lret
iret
js
pop
std
pop
push
in
add
fsts
icebp
sub
mov
xchg
roll
fcomp
jo
aaa
stos
imul
sahf
push
jo
mov
mov
movsb
xchg
pop
fdivrs
mov
cs
lods
xor
movsl
std
dec
inc
hlt
dec
add
enter
loop
xlat
cmp
popa
lret
cmp
push
push
out
movsl
movsl
and
sub
jg
sarb
fstpl
clc
or
sbb
or
jo
aas
push
seta
xchg
mov
jae
cld
scas
pop
mov
cmp
adc
mov
popa
add
cmp
and
packssdw
scas
or
call
cmp
out
push
pop
aaa
leave
and
call
inc
dec
push
xchg
mov
pop
mov
add
int3
rep
ss
call
rcrl
sar
rorl
mov
stos
push
dec
decl
aas
and
aas
shll
loop
fwait
xor
add
sarl
lret
xor
adc
loop
imul
cmpsb
cwtl
bound
xchg
loop
cmp
stc
inc
fisttpll
adcb
adc
imul
cli
dec
mov
hlt
mov
pop
hlt
paddw
adc
adc
loop
jecxz
dec
es
lret
mov
out
insl
fwait
leave
in
divb
and
or
jl
or
pop
xchg
lock
repz
adc
mov
add
push
pop
std
xchg
sahf
es
aam
mov
mov
popf
xor
scas
cli
pop
cmp
or
sbb
sbb
xor
adc
mov
test
ds
jo
pop
repnz
inc
scas
dec
adc
leave
mov
call
js
inc
outsl
or
or
mov
dec
bound
or
xor
push
mov
icebp
insb
incb
dec
adc
mov
mov
mov
push
scas
or
std
popa
test
jl
loopne
call
mov
pop
jmp
adc
pop
push
imulb
inc
ljmp
pop
push
js
test
pop
incl
xlat
add
push
sti
mov
push
call
test
insl
mov
rcrb
das
pop
adc
lods
mov
push
ret
fdivrl
test
add
pop
jmp
lods
hlt
jg
adc
dec
and
adc
dec
clc
and
inc
push
mov
loope
xorl
mov
cwtl
xchg
or
iret
push
sub
cltd
mov
stos
jp
mov
mov
pop
mov
jno
adc
dec
addb
and
repnz
add
add
sub
ja
mov
cmp
mov
ret
mov
pusha
orl
movsl
out
or
sarb
mov
mov
je
inc
and
mov
push
or
rcrb
jl
test
pop
lcall
leave
loope
inc
xor
hlt
jl
xchg
pusha
clc
addr16
imul
sub
push
pop
inc
aad
or
aad
dec
add
rorl
adc
das
lcall
xchg
xchg
imul
and
fisttpll
or
cwtl
xor
push
jb
lock
fcomps
cmc
push
clc
scas
pop
dec
iret
int3
jno
in
jle
lods
ljmp
mov
lds
loop
jp
das
mov
sub
pushfw
sbb
and
cmc
loope
pop
cmp
xchg
mov
or
cmp
jle
inc
sbb
adc
push
movsb
movsb
loop
and
dec
rcr
shll
iret
lret
es
cmpsl
les
inc
mov
jecxz
stos
cmp
xlat
xor
clc
test
les
inc
jl
js,pt
in
mov
xor
movsl
mov
xor
cmpsl
mov
xchg
popa
addr16
mov
or
xchg
jmp
mov
push
mov
das
loopne
or
lahf
inc
and
mov
pop
das
std
or
shrl
sub
in
xchg
repz
incl
jle
pop
push
and
cmp
fcomip
lcall
cld
repnz
pop
lcall
clc
mov
adc
adc
sbb
inc
xor
cmpsl
cmp
iret
nop
mov
adc
add
pop
mov
inc
loopne
push
add
mov
adc
shrb
push
aaa
and
jg
cld
sti
clc
fs
push
inc
sti
xchg
sti
cmp
inc
sti
dec
jnp
mov
cmp
or
adc
mov
icebp
lock
insl
mov
add
adc
xchg
mov
and
jae
adc
cmpsb
jp
xor
mov
sbb
loop
xchg
out
rclb
std
xor
cli
mov
sbb
dec
or
or
pop
je
test
xchg
mov
cmp
fsubrs
clc
or
cld
jl
mov
push
mov
xchg
push
sbb
inc
mov
lods
js
push
pushf
lret
loopne
jle
push
push
sbb
xlat
std
mov
adc
push
adc
cs
repnz
push
ja
mov
mov
dec
cld
pop
lods
add
add
fmuls
test
mov
stos
push
or
cmc
test
js
cs
add
and
cmp
fisubl
cmpsl
sub
adc
loope
adc
filds
jnp
repz
ficomps
mov
mov
mov
aas
or
and
jge
push
mov
dec
inc
xor
ficoml
bound
int3
push
jle
fs
in
mov
js
add
inc
lock
jle
sub
lret
pop
mov
and
call
jbe
sub
pop
repnz
push
int3
loopne
inc
xlat
and
nop
dec
clc
or
xchg
ja
cs
dec
sbbb
test
pop
pop
xor
jo
jle
scas
incl
ffreep
mov
xchg
mov
push
es
mov
outsb
adc
cmp
mov
jg
jno
push
add
lea
out
mov
inc
sbbl
rolb
add
imul
shl
xlat
ret
pop
enter
pop
jge
int
leave
push
push
js
repnz
test
int
add
outsb
mov
add
je
dec
jl
jge
je
cs
adcl
add
cltd
and
push
xor
ficomps
js
xor
pusha
je
or
jae
push
mov
add
xor
leave
insb
mov
or
test
adc
fadds
mov
je
lret
pop
and
pop
xor
sbb
xchg
mov
in
inc
or
pop
imul
sbb
adc
dec
cld
scas
mov
or
cli
aaa
sub
in
pusha
and
pop
inc
nop
dec
rcr
call
aad
repnz
sahf
sbb
add
movsl
mov
and
ss
movsl
mov
inc
jge
fmuls
add
cmpb
aad
push
out
push
inc
sbb
test
inc
je
fisubl
movsl
mov
addl
jne
ja
mov
pop
ficoml
dec
aaa
xchg
inc
cmp
aas
shrb
es
imulb
adc
lock
adc
stc
aas
adc
mov
fld
outsl
inc
stos
add
ljmp
nop
pusha
ret
movsl
sbb
mov
fistpl
jp
add
mov
jne
cmp
jae
push
ds
dec
push
xchg
sub
jg
dec
xchg
mov
loopne
xadd
incb
or
sub
call
xchg
int
mov
fisubs
adc
rcll
popw
insb
mov
add
lret
mov
cld
bound
pop
shrb
push
call
loope
xchg
loop,pn
out
jmp
std
clc
dec
aaa
stos
rcrb
push
push
sub
lock
add
mov
outsb
clc
dec
mov
call
xor
push
push
dec
pop
test
or
int
in
shrl
xchg
jecxz
cmp
mov
lahf
fcoml
mov
jg
pop
dec
fwait
sbb
pop
setg
dec
clc
imul
fidivrl
add
add
and
pop
aad
inc
add
idivb
pop
push
or
fisttps
jg
cli
hlt
mov
daa
mov
inc
mov
adc
sbb
pop
push
jne
pop
out
xlat
inc
pop
adc
scas
mov
lret
lahf
pop
jle
and
jbe
fldenv
mov
in
fwait
push
mov
aaa
dec
sub
or
add
jmp
and
lock
repz
and
scas
add
shrb
cmpsl
cmp
dec
mov
xchg
push
xchg
ret
mov
outsb
popf
sub
out
outsb
call
pop
mov
cli
mov
dec
scas
lahf
shl
scas
pushf
jnp
jb
mov
cli
mov
cmpsb
add
or
daa
loopne
ss
cmp
adc
sti
inc
cli
cmpsb
stc
pop
xor
pop
cld
inc
icebp
jae
or
pushl
je
push
add
pushf
imul
fcomps
lahf
fsubp
xor
dec
adc
es
mov
ret
insb
push
jle
imul
movsl
xchg
inc
xchg
xor
xchg
push
xor
mov
ret
pop
outsb
ficompl
int3
inc
popl
jne
mov
mov
ss
xor
je
push
add
aam
xor
outsb
test
ficoms
push
inc
sub
mov
cmp
popf
cli
push
add
inc
cmp
jb
sub
repnz
add
and
call
cmp
sbb
inc
adc
call
push
sarl
and
push
test
push
cmp
lods
out
mov
xor
loop
xchg
repz
mov
mov
je
inc
insb
movsb
lock
cmpsl
hlt
fstpl
xchg
and
jl
jnp
sbb
das
xor
jne
jge
lods
lods
add
xor
cmpsb
hlt
sub
cwtl
imul
inc
in
adc
decl
jg
movsl
or
sub
pusha
sub
fdivl
sbb
jle
or
jmp
flds
fimull
push
aas
inc
dec
clc
adc
in
push
jp
loopne
and
add
ljmp
add
fwait
ret
add
icebp
arpl
les
test
shll
sub
adc
arpl
xchg
pop
ret
pop
test
or
xchg
adc
sub
repnz
pop
insl
add
and
add
jne
push
cli
scas
dec
cmp
and
sbb
xchg
orb
fwait
sbb
into
jl
pop
lock
sbb
ss
dec
je
sub
xchg
pushf
in
movmskps
adc
mov
add
sbb
psrad
mov
sar
loop
fldenv
sbb
mov
mov
sbb
enter
pop
scas
mov
inc
push
add
sbb
cld
stos
into
and
pop
iret
mov
add
cmpsl
shrb
push
or
inc
pop
aam
pop
rolb
push
xchg
push
mov
sub
inc
push
push
sbb
lahf
aad
push
jge
hlt
sbb
pusha
add
dec
fmul
fisttpl
or
call
xor
andb
pop
std
pop
push
popf
shll
xor
xchg
jno
adc
aas
movsb
and
mov
test
lods
push
shrl
call
dec
cmpsl
ret
clc
sbbb
inc
add
jle
lahf
mov
pop
push
add
dec
pop
icebp
lcall
test
pop
in
test
pusha
cmp
jmp
sub
lock
and
sbb
iret
inc
loope
imul
sbb
push
sti
or
jne
cmp
aad
decb
sbb
mov
rcll
xchg
sub
push
loop
push
rcr
mov
push
adc
jl
add
add
add
push
pop
fs
ja
aas
loopne
es
dec
pusha
mov
not
es
and
cmp
jecxz
mov
add
mov
popa
in
inc
mov
xor
fisttpl
lods
add
aam
mov
mov
pop
cmp
add
stos
or
nop
lcall
add
and
push
pop
cmp
lea
jns
inc
add
and
cmp
mov
sahf
dec
mov
sub
push
cmp
orb
in
mov
mov
jb
pop
adc
movsl
pop
pop
int3
scas
cld
test
and
dec
mov
sbb
sbb
mov
mov
clc
cld
scas
loop
push
jl
rorl
push
cmp
lcall
push
dec
add
loopne
fs
fdivs
or
psubsb
scas
lods
leave
ds
dec
mov
push
imul
jns
jns
dec
xchg
dec
adcl
add
insb
imul
inc
push
add
std
mov
stc
mov
jmp
add
cmp
sbbb
jmp
lahf
mov
popf
pop
je
and
or
jmp
outsl
jecxz
mov
sti
fisttps
xchg
sti
xchg
subl
mov
ljmp
test
jg
clc
jp
fdiv
psubusb
xor
push
jg
pop
add
mov
dec
or
jg
add
jmp
add
lods
dec
imul
adc
jle
mov
or
adc
mov
aad
or
ljmp
dec
andb
fwait
add
stc
jmp
mov
pop
add
or
mov
ss
lds
loopne,pt
sbb
fcoms
cwtl
and
cmp
cmp
pop
pop
push
dec
mov
pop
out
add
imul
loope,pt
sub
xchg
das
push
addb
mov
mov
clc
jg
sbb
cli
data16
test
cmp
add
xchg
daa
add
xchg
les
loop
cmp
fs
mov
mov
add
dec
jmp
stos
in
popl
or
dec
dec
dec
int
xor
sbb
sbb
or
push
cwtl
sbb
sbb
sbb
add
mov
in
dec
aam
movb
mov
mov
cltd
stos
and
sbb
adc
xchg
jmp
pop
loop
jp
cmp
dec
test
xchg
sbb
cli
mov
ret
jl
fdivs
test
incb
scas
sub
pushf
push
fs
sbb
pop
out
in
jo
movsl
mov
adc
sbb
cmpsb
shrl
and
add
or
xchg
jno
mov
hlt
dec
xchg
imul
mov
inc
leave
dec
mov
push
das
cld
mov
inc
mov
mov
repz
shr
adc
push
std
xor
sbb
cmp
jge
jp
jo
inc
mov
xor
sar
inc
aam
jo
ret
shrb
inc
call
pop
lock
repnz
out
sbb
hlt
pop
jle
adc
sar
ljmp
push
stos
dec
dec
les
mov
xchg
cmpl
ja
adc
inc
inc
add
inc
flds
scas
xor
and
sbb
and
mov
inc
push
es
jle
shll
jg
adc
or
and
push
pop
mov
movl
xchg
inc
addl
cmpsl
ffree
out
mov
hlt
xchg
add
inc
mov
mov
cmp
cmpb
gs
xor
and
mov
fists
add
push
jmp
movsb
bound
and
jl
push
divb
repnz
or
clc
test
sub
push
pushl
push
cld
js
or
shlb
pop
stos
push
mov
pop
ret
in
pop
sub
rorb
mov
imul
sbb
adc
inc
cltd
sub
insl
les
fbld
std
out
pop
add
adc
mov
adc
movsb
cli
inc
xchg
adc
cmp
or
jo
ss
shl
je
aaa
ja
sub
pushf
lods
inc
stos
pop
rolb
add
lcall
mov
hlt
adc
in
mov
adcb
add
pop
ret
clc
mov
push
fistpl
dec
jl
adc
stc
mov
add
pusha
sbb
iret
sarl
push
xor
or
call
fisttps
ljmp
push
xor
push
xchg
hlt
stos
mov
ret
push
fildll
sub
popa
mov
out
ret
cmpsl
pushf
adc
cmp
pusha
xchg
mov
cmc
popa
shrb
dec
and
and
pop
sub
divb
push
or
add
cld
and
loope
mov
inc
icebp
lret
xor
and
call
jns
xor
mov
dec
das
mov
push
mov
sbb
jne
cmp
lret
test
pusha
rcll
ss
loopne
cmc
bound
fbstp
ss
clc
lods
cmpsb
push
sbb
mov
add
mov
and
or
subl
sbb
lock
add
and
fwait
pop
jg
push
mov
test
and
dec
and
pusha
jmp
mov
mov
pop
pushl
mov
call
scas
and
orb
dec
popl
dec
dec
lcall
loopne
addr16
mov
fmuls
rorb
hlt
sahf
adc
or
pop
fists
dec
lea
cmpsb
xchg
subl
mov
mov
push
les
loopw
dec
cmp
inc
xchg
pop
pop
imul
lahf
lahf
and
gs
cli
lds
testb
ret
and
call
lock
push
push
out
fs
push
test
xchg
repnz
sub
fs
sbb
mov
dec
sub
add
into
pop
fcoms
fcomp
decl
push
jns
mov
xchg
dec
jns
push
dec
or
repnz
adc
call
clc
test
add
scas
lea
cwtl
stos
loope
ror
inc
stos
mov
decl
nop
es
ljmp
push
push
adc
jbe
mov
int3
xor
icebp
adc
cmp
xchg
inc
pop
cmp
das
test
sbb
sub
in
xchg
dec
lock
jmp
and
outsl
mov
andb
push
loopne
sub
cwtl
push
sahf
pusha
sub
mov
xchg
mov
je
fimull
and
into
add
inc
pusha
scas
roll
pushf
add
out
mov
pop
cmpsb
das
aam
fcomps
test
shl
loopne
mov
repz
test
lds
push
mov
inc
setbe
insb
add
mov
insl
test
dec
adc
jno
xorl
mov
popa
clc
movsl
cmc
push
loopne
inc
repz
out
push
jb
jmp
xchg
sbb
lret
pop
sub
lods
in
cli
sub
ja
jo
hlt
add
add
pop
dec
dec
push
addr16
xor
stos
push
push
push
repnz
aad
mov
stos
or
mov
rcl
inc
cld
das
js
in
push
mov
inc
lock
sbb
hlt
mov
jmp
xchg
xor
and
arpl
sbb
pop
inc
xor
lock
shr
hlt
mov
mov
jle
fldt
adc
pop
xlat
mov
xchg
icebp
adc
dec
dec
pop
std
loopne
sbb
mov
jo
push
jge
ss
cmc
inc
ljmp
pusha
movl
inc
pop
mov
xor
sub
pop
xor
call
sub
xchg
test
scas
push
test
push
cld
fs
push
pop
adc
lock
idivl
push
std
mov
push
sahf
add
xchg
pop
pop
in
insl
or
les
push
lock
fsubrp
jg
ret
and
imulb
push
jle
aas
lock
cmc
out
call
add
push
mov
lods
shlb
mov
js
sahf
aaa
repnz
cwtl
lcall
or
dec
fbld
mov
clc
cld
jbe
cltd
sbb
pop
xor
lods
outsl
mov
add
outsl
vshufps
fwait
or
mov
mov
cld
xor
and
lock
adc
iret
and
out
inc
aaa
mov
jae
test
cmpl
scas
imul
fidivrl
xchg
and
push
mov
repnz
push
mov
mov
jo
outsl
nop
fldcw
push
add
leave
fsubs
ljmp
and
add
adc
loop
sub
popf
adc
cltd
aaa
mov
xchg
js
xchg
mov
mov
xchg
movsb
out
jo
into
mul
jecxz
movsb
dec
mov
aad
pop
pop
mov
pop
mov
jnp
cmp
or
lahf
mov
lret
mov
std
or
lret
cmp
js
jnp
add
mov
outsb
out
jle
je
xor
push
lcall
xchg
movsb
pop
js
cld
lds
xor
or
popa
scas
push
jg
xchg
add
inc
cmp
mov
mov
les
imul
js
sbb
popl
dec
div
jg
mov
xor
add
popf
jb
pusha
out
pop
inc
aas
dec
out
ds
jle
ret
mov
and
pop
stos
lret
adc
or
loop
or
fdivr
out
or
xor
mov
pop
jns
dec
das
inc
lods
sub
lret
clc
or
mov
push
add
mov
jbe
loope
xor
dec
jmp
adc
push
dec
dec
enter
cmovb
add
out
mov
insl
dec
dec
jge
inc
cmp
in
or
adcb
cmp
cmp
mov
loopne
js
lds
orl
jbe
inc
add
test
mov
xor
xchg
pusha
and
add
lds
repnz
ja
fists
xchg
sbb
fwait
roll
sub
mov
mov
aas
out
ds
xchg
and
aaa
inc
push
push
pop
mov
js
and
inc
mov
les
loop
adc
adc
pushf
mov
add
jbe
dec
lock
adc
stos
mov
cld
int
jle
push
pop
push
inc
cmpsb
sarl
test
loopne
cld
xchg
pop
rorb
jecxz
arpl
int
outsl
jecxz
je
mov
mov
js
ret
sahf
mov
out
loop
stos
enter
stc
les
add
xor
pop
lcall
cld
xor
adc
aaa
movsb
mov
out
in
lret
aad
outsb
lods
cwtl
cmp
mov
cmp
enter
cmc
push
adc
or
add
cmpsl
arpl
cmp
mov
inc
repnz
jle
ljmp
ds
push
add
pusha
fstps
add
and
repz
ss
jp
jg
jge
push
mov
call
xchg
push
sbb
adc
shr
push
mov
pop
inc
sub
fwait
jb
imul
in
push
xlat
add
jno
das
fidivs
mov
out
fnstsw
fmul
pop
mov
ss
js
adc
test
push
mov
js
lods
add
clc
idivl
dec
clc
icebp
xchg
lods
jg
mov
lock
insb
jecxz
popf
xorl
sbb
ja
insl
lock
inc
lahf
inc
test
push
ds
adc
dec
cs
jnp
add
dec
jne
inc
and
outsb
js
sub
mov
test
adc
push
dec
cli
insl
cmp
lock
stos
sub
mov
jle
sarb
adc
inc
inc
and
xor
loope
shrl
mov
test
hlt
lods
push
pop
fists
pop
mov
fisttps
lock
mov
inc
xchg
repz
nop
sbb
xlat
push
push
insb
out
mov
mov
out
fsts
shlb
dec
push
addr16
pop
popf
shll
dec
inc
loope
test
pop
jl
imul
adc
sub
fwait
push
fdiv
mov
fildll
add
movsl
jno
prefetchwt1
mov
adc
scas
rorl
pushf
dec
push
jecxz
xor
cli
inc
add
pop
push
or
aam
faddl
test
inc
test
inc
push
out
fwait
xchg
nop
aad
lret
sub
andb
jg
xchg
test
sub
xor
cli
fsubs
sbb
scas
sbb
cmp
adc
sbb
cmp
inc
mov
daa
daa
mov
adc
cmp
sub
sar
cmpsl
cmp
add
cmp
fdivl
shl
movl
fimull
add
pop
inc
mov
mov
jp
pop
pop
loopne
test
outsb
stos
sbb
setl
jl
call
cwtl
adc
sbb
mov
mov
mov
js
repnz
mov
popf
inc
ss
mov
push
add
std
std
mov
fsubrl
add
inc
push
and
addb
xchg
popf
jae
lds
js
movsl
inc
add
shll
cmp
std
lahf
or
je
sub
xor
xchg
xor
jne
add
push
fsubl
pop
insb
push
popf
lods
pop
pop
and
cmpsl
push
cmp
cmp
fs
inc
out
lcall
incb
lods
imul
pop
xchg
out
loopne
push
lret
add
dec
and
aad
aaa
mov
cli
sbb
insb
mov
lret
and
cmpsl
rcl
adc
or
lret
cltd
adc
dec
orb
lock
ret
mov
mov
add
pop
sbb
das
pushf
sub
jnp
jns
add
js,pt
lea
cmp
add
mov
arpl
fs
jmp
jle
xchg
pop
cld
nop
lock
es
arpl
shr
es
mov
lret
push
add
test
mov
loopne
and
repnz
inc
dec
add
add
dec
shr
pop
rolb
js
pop
movsb
jbe
xor
clc
xchg
aad
insb
cmp
push
pushf
xchg
cs
dec
test
test
scas
xchg
clc
jbe
mov
push
and
inc
inc
test
minps
into
push
add
add
rcrl
xor
mov
pusha
sub
dec
push
add
dec
sbb
pop
sub
dec
or
paddusw
push
addr16
stos
sbb
push
shl
or
mov
adc
xlat
arpl
adc
cmpsl
sbb
xchg
inc
in
cli
add
nop
adc
bound
mov
mov
and
sbb
test
xchg
cmp
cmp
mov
out
sub
ret
cmpsb
shll
fmull
jge
js
push
xor
stc
jecxz
flds
or
rcll
loope
imul
fisttps
xor
int
clc
loop
mov
int3
sbb
inc
call
pop
push
pop
inc
push
call
test
int3
sbb
push
push
mov
pop
and
or
movsl
push
xlat
and
and
es
inc
push
jl
sarl
jmp
gs
nop
dec
adc
pop
cmp
scas
add
cwtl
jne
into
ja
jl
rclb
xchg
out
sub
sbb
loope
cmp
in
push
adc
int3
mov
rorl
sub
test
pop
arpl
rcr
aas
add
test
cli
add
mov
stos
jnp
orl
in
adc
out
rcrb
lods
out
inc
or
call
test
mov
mov
ret
cmpsl
add
xchg
xor
push
rcrl
add
pop
inc
pop
mov
aas
mov
add
cmp
dec
pop
mov
movsb
jae
push
mov
dec
iret
or
jge
mov
adc
jge
jne
ds
test
and
xlat
push
rol
mov
cmp
lods
sub
test
pop
sbb
rorb
ds
sahf
ret
bts
fisttps
mov
rclb
fldt
mov
jl
or
test
mov
loopne
cli
stc
pop
push
sub
sti
add
mov
fmuls
incl
jno
mov
les
lods
scas
sahf
adc
call
jle
jp
push
ret
sub
mov
xor
fiadds
insl
sub
popa
pop
push
push
inc
or
xchg
jecxz,pt
jmp
add
int3
mov
adc
sbb
test
cmpsl
lcall
adcl
mov
xchg
mov
in
cmp
push
jle
mov
out
in
sbb
mov
dec
sti
mov
pop
or
mov
addr16
call
call
sub
dec
xor
shrl
and
in
stos
jns
pop
dec
sub
dec
scas
xchg
pushf
and
movsl
mov
mov
mov
ss
insb
xchg
les
mov
pop
xor
cmp
push
shld
or
aad
cs
leave
js
mov
pop
inc
inc
mov
fnstsw
inc
xor
iret
adc
fbld
aaa
xor
ljmp
add
sbb
push
mull
call
sbb
or
add
mov
testl
cmc
outsb
pop
or
loopne
adc
pop
inc
xchg
imul
adc
push
iret
daa
lds
pushf
and
or
sub
mov
or
out
push
adc
fisubrs
push
arpl
or
or
mov
incl
bound
push
mov
add
mov
sbb
pop
jge
inc
pop
rcr
fsub
cltd
or
xor
cs
cmp
fidivrl
pop
in
cwtl
push
les
jle
mov
loope
jnp
jle
lods
loop
mov
fdivl
mov
pop
sub
inc
rcll
xchg
fadd
jle
xlat
js
daa
push
in
jae
adc
jmp
mov
call
lret
pop
push
mov
lcall
inc
add
push
sub
mov
or
jg
fldl
xor
mov
lea
lods
jo
sbb
ret
jge
in
ja
push
mov
inc
mov
mov
movsl
sbb
sbb
mov
lds
daa
rorl
mov
test
mov
inc
push
stos
pop
dec
cmp
mov
fucomi
pop
iret
je
mov
test
lock
fisttpl
mov
push
dec
andl
sub
mov
cmp
popa
ds
push
lock
popf
mov
incb
cmpsb
inc
inc
imul
out
and
add
sub
dec
xor
jg
or
out
ljmp
xchg
sub
xchg
test
cmpsl
xlat
dec
mov
rorb
in
daa
es
lds
adc
hlt
xor
mov
cmp
adc
adc
add
xchg
jl
mov
movsb
pusha
std
xlat
adc
push
fs
mov
add
cmp
push
or
mull
cltd
sbb
add
outsl
aas
leave
cmp
hlt
lods
call
lret
lods
popa
add
frstpm(287
inc
bound
stc
and
dec
ljmp
adc
add
lods
outsb
insb
scas
es
adcl
or
push
test
les
fs
fs
cmp
adc
popf
and
movl
movsb
add
pop
lea
inc
sub
and
add
lret
sbb
jle
cmp
push
cld
cmp
fs
hlt
fidivrl
mov
lock
and
ljmp
rol
jle
jbe
aas
and
decl
movsb
add
push
mov
nop
mov
inc
cmp
fwait
dec
psubsb
inc
fstpl
adcl
xor
lea
pop
outsl
dec
mov
ret
add
jl
push
mov
aad
fildll
ret
cmp
dec
push
dec
push
sbb
das
mov
cmp
icebp
repz
xchg
aad
xchg
daa
sbb
xchg
or
or
inc
clc
addl
add
mov
jmp
adc
jmp
sti
subb
mov
or
mov
testb
ret
test
xchg
sarb
add
in
mov
test
iret
xchg
push
adc
cmp
icebp
ret
mov
sub
jae
scas
loopne
imul
stos
call
mov
negb
sbbl
pop
in
ror
popa
fsubrs
ret
push
xorb
imul
dec
cmc
pop
or
std
dec
and
lods
ret
xor
mov
or
push
mov
shrl
icebp
jnp
xor
xor
xor
mov
add
jecxz
icebp
push
jne
mov
mov
pop
add
xchg
cmp
cmp
inc
mov
shrb
pop
add
jecxz
xchg
cmpsb
ret
mov
push
pop
sti
aaa
or
jo
faddp
mov
jecxz
into
inc
push
adc
add
cli
outsb
or
in
cmp
pop
in
inc
and
dec
stos
insb
push
jae
push
cwtl
nop
popf
aam
nop
daa
js
out
stc
mov
xchg
loope
mov
or
mov
mov
repz
int
ja
fildl
jmp
cltd
mov
mov
ss
mov
or
lahf
jl
orl
adcl
aas
loopne
jl
aaa
cmpsl
mov
fadds
jb
mov
or
enter
int3
sti
xchg
aas
jl
mov
aas
lds
sbb
push
call
lock
mov
mov
int
pop
je
fisttpll
js
ret
add
in
mov
dec
pop
mov
aaa
imul
push
sub
pop
nop
cmp
inc
xchg
push
popf
mov
aad
add
sbb
mov
out
popa
aad
push
dec
cmp
add
pop
pop
sbb
add
jne
stc
shll
pop
mov
stos
push
cmc
stos
pop
insl
lods
mov
inc
ja
xchg
cld
cmp
enter
inc
add
call
mov
lods
dec
and
sub
scas
xor
lret
nop
mov
xchg
pushl
ss
sub
pop
sbb
jle
cmp
push
cmpb
sub
lds
pop
or
adc
push
adc
shl
in
add
sahf
test
pop
hlt
xlat
dec
das
ljmp
and
in
loope
dec
pusha
push
std
shlb
add
xchg
gs
jl
outsb
xchg
and
add
test
repnz
fs
dec
mov
icebp
xor
shrl
mov
jmp
das
add
pop
and
mov
push
push
push
add
mov
nop
inc
out
addb
es
in
sbb
adc
jp
adc
xchg
pop
jo
call
pop
aam
lock
xchg
ds
lods
popl
jp
icebp
gs
xchg
xor
or
rclb
ds
or
pop
inc
leave
sbb
imul
pop
xchg
mov
push
xorl
xlat
and
add
push
nop
filds
push
ja
pop
inc
loopne
in
jb
jnp
sbb
pop
pushf
jmp
mov
add
and
out
ds
aas
or
mov
std
mov
mov
test
xor
jecxz
ja
in
jmp
xchg
mov
add
push
hlt
js
mov
ljmp
arpl
fcmovnbe
cmpsl
mov
xor
dec
adc
pop
scas
daa
shll
mov
sarb
test
add
cld
pop
fistpll
pushf
mov
push
add
repz
les
stc
adc
sub
inc
cmp
pusha
lahf
pop
cmp
jle
dec
inc
push
xchg
test
mov
xchg
loope
mov
es
out
hlt
cmp
jl
in
inc
dec
push
test
inc
adcl
mov
fs
adc
mov
cmp
dec
inc
fwait
decl
or
sbb
aas
mov
xchg
data16
pusha
dec
mov
push
xchg
lcall
sbb
adc
scas
push
sahf
dec
psubusw
sub
dec
out
push
ss
inc
ja
push
dec
mov
xchg
mov
loope
loopne
je
cmp
insl
sbb
scas
xlat
pop
inc
das
xor
jge
inc
jae
pushf
add
or
pop
inc
add
sub
add
cmp
in
sbb
jp
and
mov
insb
ljmp
ljmp
sub
or
loop
mov
pop
mov
push
leave
push
arpl
sahf
fldcw
mov
xchg
push
clc
adc
push
out
push
or
not
loopne
aas
scas
mov
or
add
sbb
jo
push
test
adc
jmp
dec
or
sub
xchg
mov
dec
movsb
push
adc
mov
ja
mov
inc
fstl
lock
mov
mov
call
bound
and
movsb
jg
dec
mov
jno
aam
outsl
cmp
out
and
sarl
mov
mov
jl
outsb
sub
lea
sbbl
push
jp
bound
sbb
scas
push
loopne
sub
movsb
jecxz
ret
out
lock
clc
sub
loop
inc
andb
mov
jle
punpckhbw
cli
pop
push
xor
add
jmp
dec
mov
enter
add
das
clc
pop
adc
sbb
fsubrp
mov
inc
cmpsl
les
pop
loop
arpl
dec
es
stc
add
test
je
popf
push
ret
mov
cmpsb
popa
pop
sbb
ret
push
lock
jp
js
jne
cmp
and
xchg
dec
lods
dec
cmpb
dec
and
mov
inc
xchg
pop
and
movb
pop
jle
push
clc
push
insb
pushf
jb
loope,pn
shrl
xchg
jne
mov
cli
pop
jo
mov
dec
out
lahf
sahf
xor
popa
dec
adc
leave
mov
insb
jnp
pop
fstl
sub
test
movsl
adc
sub
repnz
out
aad
ffree
dec
outsl
jno
sub
clc
scas
inc
inc
jecxz
call
mov
ret
push
div
lret
test
pop
popa
mov
push
test
outsl
popf
dec
jno
jnp
inc
pop
mov
popa
mov
outsl
cwtl
lods
mov
mov
push
cld
add
jb
inc
lea
jecxz
movb
loopne
cs
push
push
clc
inc
scas
call
sbb
js
mov
popl
sbb
pop
loop
jns
lahf
sti
inc
cmc
cmp
andb
sub
lods
push
bound
jmp
xchg
sub
and
test
pop
dec
std
dec
loop
arpl
imul
dec
ljmp
or
stc
xor
cmc
pop
pop
addr16
and
add
sti
xchg
push
in
lock
or
inc
insl
addr16
loope
les
dec
ds
add
add
pop
ret
outsl
cmpsb
sbb
push
repnz
and
push
push
scas
dec
outsb
popa
fdivrs
and
xor
inc
mov
scas
xor
cli
test
dec
or
data16
dec
inc
insb
inc
test
push
pop
jge
test
stos
mov
les
pop
cmp
dec
cmc
in
mov
bound
mov
xor
or
mov
jg
jg
lods
add
pop
test
pop
or
daa
mov
jge
push
add
lahf
out
sbb
push
pop
mov
jl
cmp
push
ljmp
jne
scas
adc
push
fxch
sub
xchg
test
mov
ror
jp
test
push
mov
bound
inc
mov
into
cmpsl
inc
push
cmp
cmp
push
mov
mov
in
add
add
cmpsb
pop
inc
add
inc
fs
int
inc
sbb
sub
xchg
inc
sub
dec
incb
aad
shr
es
fldcw
es
test
lods
push
iret
ror
lods
mov
or
sbb
mov
mov
dec
mov
out
inc
daa
jp
test
jno
faddl
pop
add
cmp
pop
jg
and
pushf
mov
jl
lock
adc
or
add
shrl
inc
in
mov
adc
mov
push
call
fstpl
or
mov
sbb
xor
sbb
daa
test
sub
ds
push
lahf
neg
aam
inc
xchg
pop
mov
mov
popf
add
aam
cmpsb
adc
shll
incb
rcll
adc
dec
pop
loope
das
add
testb
xchg
call
out
or
sub
fwait
cmp
jnp
sbb
dec
inc
mov
mov
mov
adc
mov
inc
cltd
sbb
stos
push
scas
rorl
jp
addl
xchg
mov
outsb
lods
jle
enter
cmpsl
in
push
push
lds
test
mov
mov
lds
jl
sti
push
sbb
mov
sti
movsb
out
inc
insl
push
or
ljmp
ljmp
mov
adc
jmp
shlb
outsb
jb
or
jle
and
or
ret
xchg
sbb
aad
movsl
aam
frstor
jne
sbb
mov
pop
jge
in
add
mov
stos
cmp
loopne
jge
je
lods
insb
cwtl
sub
movsb
mov
sub
jmp
pop
jge
adc
sub
lret
cmpsl
loop
mov
jb
mov
add
adc
mov
dec
xchg
mov
clc
xor
pusha
sbb
and
or
add
push
inc
mov
mov
test
add
rolb
or
movsl
mull
fs
adc
sarl
movsl
shr
daa
fdivl
arpl
add
cs
aas
test
sub
add
push
into
xorb
add
mov
cmpsb
add
mov
mov
jbe
xchg
jle
aas
jecxz
adc
dec
or
repnz
mov
aam
jb
jl
dec
sar
fs
adc
jg
aaa
aaa
hlt
divb
punpcklbw
adc
stos
dec
or
jecxz
add
orb
rorl
jbe
ret
dec
adc
push
jae
add
cmpsb
cmpsb
sbb
lds
clc
call
adc
adc
sub
and
mov
aam
test
test
fbld
mov
mov
aas
cli
push
jbe
in
cmpsb
jne
addr16
cmpb
xorl
pop
push
mov
cli
sahf
imul
adc
ljmp
js
outsl
fiadds
push
lods
push
pop
rcrb
dec
and
mov
mov
cs
xchg
insb
clc
push
dec
jae
lcall
or
bound
pop
sub
xor
cmpb
inc
movb
clc
xlat
or
or
rorl
adc
int
clc
scas
jno
jne
add
test
incb
lcall
push
sub
push
xchg
xchg
add
hlt
mov
mov
inc
xor
cmp
push
fwait
lods
pop
adc
cli
imul
xor
ret
inc
jp
cmp
xor
mov
mov
cmpb
jo
add
inc
xor
xchg
xor
push
sahf
in
lret
ja
add
stos
dec
or
mov
ja
jge
add
out
sarl
bound
inc
adc
cmp
sub
je
adc
sbb
mov
movsb
fists
push
int
test
mov
and
inc
icebp
lock
pushf
add
or
jmp
mov
and
inc
sbb
roll
push
mov
nop
dec
imul
mov
inc
fcomip
push
mov
mov
movsb
pop
shlb
pop
cmp
lret
xchg
cmp
mov
add
out
cmp
inc
sub
or
lea
mov
je
in
outsl
dec
decl
mov
xchg
mov
dec
or
cwtl
scas
cli
outsl
sbb
xchg
cmc
cmp
aaa
cmp
xchg
lcall
dec
cltd
popa
mov
in
sbb
mov
fbstp
ds
mov
je
and
inc
shlb
inc
jl
lret
das
mov
push
dec
jnp
mov
icebp
pop
fdivl
ret
dec
insl
mov
add
icebp
add
cmp
cwtl
mov
jle
push
xchg
pop
sarb
dec
fmull
out
bound
loop
sub
push
ret
xor
jmp
jae
dec
jo
das
shlb
jmp
sahf
imul
ret
daa
shrl
les
xor
lea
cli
ret
push
cwtl
es
add
cmp
mov
mov
cmpsb
mov
sub
pop
or
push
mov
lds
add
mov
pop
push
sbb
mov
stos
xchg
cmp
incl
sar
lods
sub
subb
stos
push
and
jb
push
jle
aad
loopne
lock
sub
mov
sbb
sub
jo
bound
mov
icebp
mov
cmp
stos
aas
call
mov
xchg
imul
sub
incl
push
mov
pop
test
bound
or
cmp
je
aas
xor
call
shrb
mov
fcom
push
push
mov
shl
push
mov
data16
sahf
lock
fistpll
mov
fabs
jmp
xor
std
insb
ficoms
cld
cs
and
cmp
sbb
lcall
adc
push
add
stc
movsl
adc
dec
pop
mov
sarb
mov
xchg
add
or
xchg
sahf
dec
rclb
jg
ja
addr16
sub
sahf
add
ds
mov
or
sub
daa
xor
dec
mov
cmp
mov
jle
xlat
sahf
mov
and
outsl
mov
push
fdivrs
push
imul
sub
shrl
cmpsl
lret
les
add
sbb
sbb
test
mov
cli
and
scas
add
adc
jmp
lea
cmp
ds
rcrb
cltd
sti
stos
fmuls
imul
cwtl
mov
and
out
inc
jg
or
xor
or
inc
sahf
mov
cld
lcall
cmp
sub
sbb
iret
aas
in
or
in
loop
xor
in
xor
xor
das
sarb
add
jbe
js
inc
adc
sub
jp
fs
cmp
fcomp
cmpsl
jb
in
test
jb
aam
or
ja
xor
insl
test
and
push
imul
aas
leave
es
js
mov
mov
lea
push
pushf
ljmp
inc
cmp
addl
xor
push
jmp
clc
fwait
inc
mov
into
arpl
mov
cli
sbb
test
aad
mov
cmp
mov
lods
nop
adc
adc
cld
daa
or
lock
adc
cwtl
dec
cli
icebp
adc
jp
xor
faddl
es
shll
cli
cltd
int
arpl
mov
xor
adc
mov
inc
sbb
push
je
pop
push
decl
testl
incl
andl
adc
lods
enter
xchg
cmc
xor
loop,pn
bound
xchg
xchg
sub
pop
jae
lods
pop
cld
push
lahf
xor
test
pop
ret
adc
in
repnz
out
inc
repnz
inc
cwtl
mov
clc
xor
fnstcw
xchg
sbb
sbb
push
jnp
jnp
fucomp
nop
lcall
jb
rorb
aad
xor
sub
jge
xchg
mov
xor
dec
adc
pop
adc
ja
addr16
mov
jmp
jnp
repnz
jo
lds
loop
adc
or
test
sub
or
rorb
push
xchg
jns
cmp
jecxz
dec
call
xchg
cmp
call
sbb
into
push
and
and
xor
push
push
mov
xchg
add
scas
ja
xor
or
shl
push
or
cmova
lcall
dec
jge
adc
push
and
test
lahf
ss
aaa
jg
pusha
sub
push
in
add
pop
jno
call
ds
pop
lcall
lock
mov
inc
jmp
sbb
mov
dec
inc
movb
aas
push
fdivl
push
and
mov
jmp
cmpl
mov
push
xor
sub
mov
push
ret
cld
mov
mov
or
xor
xchg
loopne
push
pop
out
inc
cmp
push
jb
std
out
dec
adcb
xchg
and
mov
aam
xor
call
jecxz
mov
mov
xchg
lods
test
adc
pop
adcl
sbb
inc
jmp
scas
add
mov
call
fiadds
repz
nop
push
and
and
xchg
rol
jns
mov
sbb
repnz
push
mov
loopne
push
add
add
loopne
pop
call
push
mov
mov
inc
jecxz
ret
aad
ficoml
xchg
clc
ret
adc
popa
pop
xor
push
into
mov
push
inc
fstl
pop
mov
pusha
in
pop
push
mov
sub
xchg
sti
cmc
cmpsb
jecxz
jae
pop
test
test
jle
pop
cli
outsl
xchg
mov
add
pop
push
xchg
loopne
jmp
and
jle
xor
lahf
ret
sarl
daa
cld
loopne
stos
fsubrs
mov
dec
std
push
inc
bound
xchg
xchg
int
ss
jle
sub
rclb
push
jbe
push
mov
push
add
ret
xlat
pop
and
or
mov
aas
mov
jp
clc
std
push
jmp
cmpsb
dec
icebp
cmp
and
and
pushf
ljmp
loope
pop
mov
xchg
shrl
fstps
testb
loop
xchg
inc
xchg
pop
push
adc
jl
mov
xchg
lcall
or
ss
xchg
jbe
push
mov
test
js
push
sub
mov
adc
jp
orb
xor
sbb
jbe
std
fbstp
sahf
mov
sbbb
es
sbbb
inc
sarb
ficoms
or
lret
add
jg
enter
pop
adc
pop
cmp
or
inc
imul
jo
xchg
add
push
and
daa
adc
lret
fs
pop
push
repz
imul
rolb
lods
test
xchg
jl
pop
vpsrld
pushf
std
jbe
jno
fxch
int3
pop
pop
push
aad
fiaddl
fidivrl
push
cmp
inc
adc
pop
cmp
imul
sbb
push
into
push
int
jbe
jbe
xor
call
push
out
in
mov
cs
pop
cmpl
cmp
push
add
jmp
lods
xchg
pop
lea
sbbl
cmp
cmp
dec
cmp
je
inc
and
rolb
icebp
push
leave
lock
pushf
bts
idivl
push
dec
icebp
add
sbb
mov
push
inc
sub
lock
pop
xor
loopne
ss
adc
rcl
test
pushf
test
add
jge
mov
clc
sbb
cmp
or
cmp
mov
mov
sbb
in
aad
pop
repnz
add
mov
cltd
cld
jno
rolb
sub
loop
add
aad
out
or
out
mov
subl
jp
push
sbb
add
adc
movsb
mov
fwait
hlt
inc
insb
ljmp
or
fwait
imul
push
xchg
dec
sbb
nop
rolb
call
cmpsb
xor
data16
and
sub
cmp
mov
xchg
xor
mov
sub
push
rep
addl
jnp
lret
add
sub
cld
out
decl
and
sub
sbb
and
add
adc
sub
fdivrs
rolb
stc
sbb
sub
xor
mov
cmp
les
xchg
out
leave
clc
mov
add
dec
sbb
jne
xchg
inc
std
mov
clc
jb
insb
inc
fistpl
decb
add
and
in
sbb
fsubrp
lods
je
mov
jl
adc
popa
cwtl
ret
push
cmp
mov
jl
int
es
xchg
adc
pushf
or
push
or
jg
dec
add
shll
and
cli
out
leave
add
push
clc
icebp
nop
insl
mov
icebp
loop
or
jnp
sbb
clc
scas
inc
add
stc
lret
sarl
mov
test
leave
mov
jae
lret
stos
sbb
xchg
mov
xchg
filds
insb
test
dec
shl
or
xchg
test
cmp
std
push
pop
fistpll
ja
xchg
sub
xor
dec
shr
bound
ja
imul
pop
imul
lret
stos
or
jmp
push
dec
pushf
es
add
cmp
adc
neg
jmp
into
popa
xor
mov
bound
ret
add
imul
pop
insb
sbb
mov
or
cmpb
cmc
andb
icebp
cmpsb
mov
cmpsl
out
push
ret
pop
adc
jb
mov
inc
ja
adc
int3
out
add
add
lock
rcr
dec
dec
inc
rorl
rcrl
sti
mov
in
pop
fsubp
inc
xchg
mov
lock
loop
xor
cmc
sbb
inc
jmp
cld
lock
cmp
repz
push
inc
sbb
or
inc
pop
mov
mov
cmp
or
add
clc
mov
lret
sub
pop
pop
jo
mov
cs
mov
dec
imul
xchg
adc
jmp
and
mov
sarb
jo
rcrb
xlat
mov
or
and
inc
dec
sbb
add
fdivrp
or
fadds
movsl
pop
pop
push
dec
add
icebp
add
push
mov
push
stos
clc
mov
or
or
pop
scas
pop
lea
scas
jbe
cmp
sbb
imul
into
dec
mov
dec
int3
and
mov
mov
shl
push
dec
insl
ret
sub
sub
scas
or
push
clc
dec
inc
test
add
aam
loop
push
lcall
or
das
in
or
or
push
pop
stos
adc
sar
pusha
testb
adc
outsl
inc
mov
clc
inc
sbb
clc
or
mov
mov
mov
or
pop
shlb
push
jmp
jmp
inc
sbb
adc
nop
add
pop
add
or
in
loopne
out
pop
and
or
jg
je
sub
xchg
fwait
pop
movsl
pop
out
cmp
insb
mov
xchg
test
mov
loopne
mov
shll
lea
hlt
loop
xchg
in
or
mov
hlt
das
sbb
dec
inc
and
xor
cmp
cmp
popf
insb
enter
cmp
cmp
xchg
xor
mov
addr16
loope
adc
push
aas
fwait
push
cmpsl
out
test
out
pop
dec
xor
jp
mov
and
pop
mov
push
popf
leave
cmp
test
clc
jne
push
andl
mov
decb
es
les
icebp
aad
mov
xor
inc
cmpb
outsl
pop
inc
dec
repz
ror
daa
mov
push
push
loope
rorb
fistl
inc
pop
pop
add
push
mov
loop
jo
mov
test
sub
add
arpl
push
xchg
jnp,pt
shll
lods
mov
jne
add
or
sub
leave
xor
xor
jmp
lods
les
mov
das
ret
cmp
decl
mov
dec
ret
sbb
push
in
dec
ret
stos
scas
xorb
or
insb
call
mov
movsl
adcl
addr16
pop
and
mov
fnstsw
sub
stos
or
mov
xor
xor
out
es
push
jge
push
push
xor
jns
lds
push
cmp
out
ss
mov
mov
repnz
aam
mov
pop
jmp
cltd
xor
enter
sbb
je
lods
dec
leave
mov
adc
jge
cs
dec
and
in
fsubp
fistps
pop
aas
mov
or
lods
ror
dec
and
pushl
sbb
popa
fucomi
stos
sahf
or
lret
and
add
or
adc
push
loop
movsl
ret
xor
mov
and
adc
add
xchg
dec
cld
popa
adc
es
packuswb
out
loop
test
pop
adc
int3
cmp
cmp
mov
test
xor
jno
lahf
push
fadds
or
mov
fisttpl
push
or
movsb
push
or
fidivrs
mov
and
bound
mov
push
xor
mov
jl
pop
cli
cli
aas
push
add
sahf
inc
stos
push
cmpsl
xlat
cmp
pop
aam
je
jmp
test
out
enter
xor
aam
push
mov
pop
add
cmp
imul
xlat
adc
sbb
cltd
pop
cwtl
js
pop
push
cmpsl
test
int
dec
addr16
pop
xor
dec
cli
push
popf
sbb
xor
filds
sbb
imul
ja
out
mov
cmp
in
and
stos
dec
lahf
sbb
nop
pop
repnz
xchg
or
sbb
daa
lahf
cmp
dec
js
imul
sub
or
or
cli
icebp
sbb
xlat
in
pop
jmp
jo
mov
xchg
and
andl
sub
loopne
rcl
inc
lds
mov
ljmp
add
inc
outsl
popf
ljmp
and
pop
lret
arpl
inc
aas
adc
mov
aam
ficomps
add
mov
mov
mov
or
mov
in
push
test
add
lahf
ret
mov
ret
sub
add
jecxz
pop
lcall
cmp
push
loopne
cmc
stos
xchg
aam
in
cmp
mov
add
incl
test
lock
sbb
add
sbb
adc
lods
int
xchg
mov
bound
push
scas
testl
fs
push
js
jb
xchg
mov
cld
pop
mov
mov
leave
loop
mov
popa
int
sbb
rorb
xchg
les
inc
lods
push
cmc
iret
cwtl
ret
sbb
rorb
fistl
cmp
fwait
push
test
dec
lahf
mov
test
hlt
insb
push
pop
mov
jnp
inc
mov
or
mov
xor
xor
arpl
inc
divb
jmp
sbb
test
sarl
imul
jne
cmc
or
pop
pushf
out
es
cmp
or
mov
aaa
pushf
pop
sub
imul
sahf
into
adc
sar
xor
je
cmc
push
sbb
js
xlat
iret
ss
mov
mov
xchg
sbb
lret
dec
outsl
in
or
int3
jmp
sbb
lock
or
pop
cmp
push
pop
andb
mov
or
test
daa
mov
add
test
mov
add
pop
or
jae
jle
outsb
ret
test
repz
pop
dec
dec
cmp
xor
imul
mov
dec
adc
pop
pop
inc
daa
mov
mov
icebp
xchg
mov
addb
data16
xor
push
xor
addl
je
add
orl
pop
outsl
andb
push
jg
sub
into
and
push
dec
xor
mov
shrb
fidivrl
cmp
push
hlt
lock
push
xor
roll
adc
pop
mov
loop
movsb
xchg
pop
dec
mov
insb
mov
lea
popa
mov
push
je
xor
cwtl
sbb
lds
dec
jl
mov
cmp
test
jp
mov
sbb
cmp
push
pop
shrb
lret
add
pusha
dec
xor
lds
jp
xor
dec
dec
cmp
jecxz
rclb
push
inc
test
xchg
shr
xchg
push
mov
mov
mov
sbb
jo
lods
xchg
pop
pushf
inc
jbe
inc
scas
fadds
pusha
push
cwtl
mov
shr
sbb
mov
or
hlt
test
cs
cld
ret
cmp
jne
lock
test
fnstcw
mov
inc
add
jmp
clc
push
mov
push
jae
outsb
nop
into
loopne
cwtl
dec
fistps
dec
add
test
mov
enter
and
inc
xchg
sahf
or
cs
out
pop
lret
ss
dec
jge
push
aas
out
mov
sub
pusha
and
lret
aam
or
inc
pop
lods
repz
pop
mov
scas
adc
fisubrs
cld
sbb
pop
cmp
stc
xlat
xor
push
aaa
cmp
loope
decl
mov
add
ja
cmp
mov
jle
mov
sbb
mov
and
sub
jae
inc
push
adc
ds
test
sbb
xor
sbb
je
out
mov
fadds
dec
scas
cmc
sub
loop
mov
mov
adc
loope
inc
push
ret
jbe
movsl
test
out
sub
add
adc
push
sbb
clc
cmp
adc
fstpl
mulb
incl
mov
aam
mov
movsl
scas
pop
jne
xchg
pushf
fisubrl
aas
inc
add
or
push
mov
lahf
adc
clc
insb
push
xor
les
orl
in
loope
jg
jg
add
inc
test
sub
cmp
imull
loope
jo
mov
test
call
add
sbb
inc
add
insl
xchg
lcall
or
clc
cmp
mov
push
mov
xor
add
out
test
test
xchg
popf
adcb
and
sub
jo
add
xor
in
and
dec
mov
mov
xor
push
push
cmp
dec
or
mov
nop
repnz
js
cmp
mov
xchg
cli
push
pusha
lret
inc
mov
jge
outsl
mov
push
sub
es
pminsw
aas
xor
loope
fldt
adc
cmp
arpl
sub
jne
pop
movsl
push
xchg
adc
push
sub
mov
mov
mov
cs
mov
js
loop
fadd
mov
das
jle
mov
ret
shlb
test
shll
std
mov
sub
mov
or
test
test
mov
ja
das
scas
mov
pop
add
or
cmpsb
jnp
sub
pop
shl
in
in
or
push
xlat
push
add
test
lret
or
pop
cld
and
pop
and
push
add
daa
loopne
xchg
mulb
out
sbb
xor
pop
dec
xchg
mov
push
sahf
adc
shrb
mov
stos
das
cli
loopne
jp
cs
mov
pop
dec
or
xor
aam
cli
dec
mov
push
jb,pt
lahf
das
add
lret
lods
rcl
mov
xchg
mov
or
jno
leave
xchg
data16
addr16
or
push
jne
insl
hlt
sbb
arpl
add
gs
pop
ljmp
in
in
xor
sub
bound
hlt
pop
mov
lret
ds
dec
dec
push
outsl
call
mov
mov
pop
dec
or
or
ret
rcl
jle
pop
and
loop
add
add
test
adc
mov
mov
sbb
add
rclb
das
push
sub
cltd
pusha
add
xchg
push
decl
mov
sub
xor
and
pop
inc
pushl
cltd
dec
jmp
mov
dec
jo
sub
loopne
js
call
jbe
popa
icebp
pop
cmp
repnz
sbb
sbb
fisubl
lahf
and
inc
cmp
jo
dec
das
dec
cmpsl
or
pusha
rolb
or
filds
xchg
pcmpgtb
dec
sbb
mov
sbb
jo
push
adc
faddl
mov
xor
aad
push
insb
sbb
dec
ret
cmpsb
gs
lds
clc
repz
or
mov
xor
es
inc
push
fsubs
jle
jno
loop
cmp
and
sbb
out
mov
push
lret
xchg
lret
movsl
jmp
sub
pop
sub
in
mov
pop
lock
mov
and
jl
ss
and
fisubrs
rorb
pusha
add
mov
dec
dec
add
call
jecxz
shrl
mov
cmp
ljmp
add
mov
push
push
xchg
in
das
or
arpl
ret
mov
pop
jb
push
cld
adc
bound
mov
dec
jb
aad
push
inc
dec
inc
jae
sub
jo
rorl
xchg
je
hlt
jno
mov
xchg
mov
mov
jae
or
loop
rorb
xorl
mov
or
xor
mov
imul
xchg
xor
mov
inc
pop
push
shrb
cmpsl
fldl
int
outsl
add
dec
mov
lock
fs
call
jp
cld
dec
adc
add
arpl
mov
inc
jns
mov
pop
dec
cmp
fimuls
insb
inc
sahf
jo
push
mov
mov
inc
or
or
mov
jne
dec
sbb
xchg
sbb
and
cmp
rep
rorl
iret
inc
pusha
and
jmp
sbb
xchg
cmp
sbb
daa
orb
push
add
mov
movsb
lahf
ds
test
lea
sahf
shlb
lea
aad
faddl
lahf
cmc
push
xchg
mov
loopne
dec
xchg
es
fstp
push
js
mov
adc
push
and
sbb
imul
shll
dec
jmp
sub
loope
fdiv
test
stos
sub
cmp
in
jg
mov
xchg
sub
sti
pusha
filds
mov
sbb
dec
out
mov
mov
inc
cmpb
pusha
or
push
adc
or
jmp
mov
push
mov
mov
pop
loop
cmp
clc
jmp
out
aas
pop
pop
call
cmc
jmp
mov
mov
stos
jg
cmp
and
xchg
cli
push
pusha
clc
push
shlb
out
stc
pop
lcall
xchg
loope
std
mov
fisttpll
loope
test
sbb
sbb
fnstsw
pop
mov
repnz
outsb
cld
cld
test
enter
xchg
or
pop
sbb
sub
movsl
mov
cmpsb
xchg
add
scas
insl
std
pop
out
std
inc
pop
mov
push
pusha
or
mov
addr16
mov
insb
sub
hlt
xchg
subb
inc
dec
imul
sbb
filds
and
sub
dec
shlb
pop
sbb
mov
cli
jg
mov
std
xor
arpl
jp
fstpt
mov
xchg
jl
mov
paddb
aaa
or
inc
lods
decl
jge
or
push
jne
fidivs
dec
and
jg
sub
lret
outsb
inc
sarb
cli
pop
in
fadds
shl
cli
cmp
jecxz
ja
das
daa
jge
rolb
cmp
add
jge
sbbb
pop
pop
clc
cmp
arpl
lahf
cmpl
cs
sbb
add
divl
inc
jno
add
mov
loop
mov
cld
cmp
xor
cs
and
lods
insb
std
jle
push
xor
add
int3
or
adc
das
cmp
mov
mov
hlt
rcll
add
cmc
inc
pop
dec
lock
fisubs
and
xor
sarb
test
iret
mov
dec
mov
cmpsl
mov
mov
repnz
imul
or
lret
ljmp
xor
mov
xchg
inc
cs
sub
cs
push
loope
movsl
mov
push
aam
inc
mov
and
lods
jb
or
push
inc
cs
pop
dec
mov
and
pop
lock
push
aad
dec
sahf
cmp
add
pop
cmc
jbe
iret
jecxz
dec
loopne
mov
mov
jle
rclb
add
jmp
push
test
and
rorl
repnz
add
push
push
inc
sub
roll
fcomps
std
movl
adc
aas
dec
mov
leave
sub
stos
pop
out
cmp
jmp
cmpsb
pop
add
xlat
add
and
test
jb
or
add
fsub
outsl
pop
mov
lahf
cmc
lahf
out
push
inc
imul
add
mov
mov
add
jns
jmp
stc
sub
add
add
movsb
sbb
hlt
movsb
lret
call
pop
mov
jmp
rcr
jl
mov
dec
mov
pop
cld
ret
mov
out
jbe
fyl2x
fwait
sub
scas
sbb
mov
dec
xor
repz
mov
mov
icebp
rclb
out
es
imul
loop
in
or
js
shlb
dec
pop
or
repz
inc
fwait
cmp
adc
dec
xlat
cmpsb
lcall
jbe
adc
push
cmc
sbb
xchg
roll
jns
call
and
insb
xchg
outsb
push
je
call
andl
inc
mov
fcompl
mov
xor
pop
inc
or
ret
cld
sub
in
adc
inc
js
out
push
mov
sub
mov
inc
decb
test
add
pop
inc
pop
jp
jl
fistps
out
hlt
ret
cmp
mov
jg
or
push
in
ja
dec
bound
mov
in
movsl
das
adc
popl
lods
adc
ret
leave
xor
enter
fcmove
sub
jp
test
mov
hlt
or
lock
lret
mov
adc
out
lock
mov
or
mov
inc
inc
add
jno
aad
push
ja
or
mov
rclb
pop
subb
in
mov
loopne
inc
dec
jbe
or
or
pop
inc
test
push
mov
test
and
aam
jge
xor
and
call
push
xor
xlat
ljmp
add
pop
dec
add
daa
dec
sbb
sub
adc
mov
xchg
movsl
push
xchg
lods
rorl
cli
stos
loopne
or
out
xchg
lds
lods
cmpsb
mov
mov
cmp
mov
mov
jg
rolb
add
out
insl
addb
pop
mov
pop
adc
and
xchg
outsb
stos
loope
mov
fs
loop
xor
mov
add
mov
mov
sbb
add
fs
icebp
lods
adc
data16
push
outsl
or
in
int3
ret
xor
and
out
jae
std
pop
ss
imull
sub
cmc
xor
inc
jmp
popf
test
adc
shll
in
idivl
and
mov
ficomps
xor
push
stc
or
pop
je
sub
dec
out
dec
frstor
lock
jl
pop
repz
sbb
add
jno
mov
into
mov
lret
push
std
dec
das
mov
or
push
leave
dec
sbb
test
or
mov
xor
mov
cwtl
mov
stos
sub
xor
sti
adc
lahf
js
push
sbb
jbe
jecxz,pt
sarb
loopne
loop
xor
xlat
and
jb
scas
fldt
cmp
mov
mov
aam
mov
outsl
ljmp
cmp
ja
add
pusha
sarl
push
loop
loopne
cmpsl
jbe
xchg
dec
loopne
loopne
dec
sbbb
pop
pop
fbstp
adcb
pushf
fwait
or
jb
push
pushf
jbe
fisubl
clc
stos
loop
in
sub
sahf
outsb
ds
andl
lahf
scas
bound
les
jl
mov
testl
aas
lods
popa
hlt
push
sahf
cltd
js
pop
loop
inc
out
into
ret
pop
sbb
pop
inc
fidivs
pop
mov
popf
test
inc
out
popa
pop
xor
dec
aas
push
dec
fcomps
movsb
rcrb
jge,pn
movsl
pop
push
jmp
insb
cmpsb
xchg
push
inc
ja
in
icebp
jnp
adcl
jae
outsb
mov
movsl
insb
lcall
leave
inc
pop
into
adc
ja
add
addr16
xchg
ss
add
xchg
pop
jb
shl
clc
cwtl
test
sub
and
mov
mov
inc
or
mov
mov
xor
inc
sub
pop
inc
cmpsl
ljmp
cld
inc
sbb
ss
cmp
pop
mov
jp
fwait
aas
sbbb
mov
lret
out
outsl
movsb
mov
add
mulb
jl
mov
insb
cmp
cmp
sbb
mov
gs
cmovl
add
and
mov
sub
fldt
push
repz
xchg
mov
push
jecxz
jno
sub
push
dec
ds
std
or
add
xchg
or
push
insb
icebp
sub
mov
repnz
stc
pop
jle
out
inc
and
popf
sbb
mov
add
std
mov
and
lods
mov
icebp
ret
lret
cmp
sub
stc
jnp
mov
add
ret
add
inc
lcall
cli
les
add
popf
jg
jnp
add
sbb
leave
add
dec
mov
inc
push
inc
js
pop
push
call
imul
fcoms
xchg
lock
dec
outsl
sahf
les
dec
andb
push
mov
jp
inc
inc
lods
loope
pop
fsubrs
rol
js
into
loop
push
and
push
icebp
bound
loopne
inc
or
inc
adc
loope
jno
sbb
enter
pop
jg
lock
inc
cmc
adcb
and
push
add
int3
mov
aam
into
decb
loopne
out
rorb
xchg
dec
adc
cmpsl
pop
pop
xor
daa
jmp
aaa
repz
popf
xchg
or
pop
ljmp
pop
rcl
out
fisubrs
fmul
push
jno
xor
push
dec
loope
test
and
push
jle
adc
pop
icebp
cmp
test
mov
ljmp
mov
fs
or
sub
dec
imul
dec
aas
outsl
pop
aaa
jecxz
jp
xchg
les
stc
mov
loope
inc
fbld
cmp
repz
or
pop
mov
cmpsl
push
leave
negb
jge
xchg
jo
adc
adc
push
or
stc
add
enter
insl
xchg
and
mov
sbb
adc
ljmp
push
pop
ss
inc
cmpsb
je
pop
adc
or
lock
inc
icebp
jg
lea
mov
fs
icebp
lcall
mov
mov
sahf
lcall
or
sub
pop
mov
repnz
jl
test
mov
mov
lds
mov
lret
and
shl
add
cmpsl
aaa
push
xor
mov
adc
cmp
fcoml
subb
popa
cmc
shll
jmp
incl
lds
lock
cmpsb
repnz
adc
cld
fwait
push
movsb
xor
add
dec
inc
test
daa
cmp
and
fadd
adc
hlt
das
cmc
push
rcl
push
test
cmpsl
iret
jp
mov
sub
push
xchg
mov
inc
shrb
sub
loope
mov
xorb
add
and
jbe
int3
pushf
fbstp
in
movsl
mov
mov
sub
lds
cwtl
or
pop
mov
lods
mov
pop
or
and
in
sub
mov
insl
mov
mov
out
inc
xchg
or
and
ror
mov
std
jl
lret
mov
aaa
xchg
xor
cmp
test
ret
ss
fsubr
shrl
sub
xor
mov
pavgw
pop
or
insl
or
faddp
sub
mov
call
pop
cmpsb
arpl
bound
mov
dec
mov
aas
movb
sub
into
and
mov
pop
or
mov
or
dec
mov
lock
aam
cmp
rorl
js
call
inc
xor
lcall
out
sub
or
insl
lock
andb
mov
xchg
test
shrb
cmpsl
sub
xorb
xor
and
das
add
loop
jo
adc
pop
xor
fs
fisubs
mov
fcompl
xchg
mov
add
dec
ja
loope
or
adc
add
notl
add
imul
jle
push
out
mov
sti
mov
adc
pop
dec
mov
aaa
inc
cmp
rdmsr
shlb
xchg
subb
add
cmp
or
and
fmuls
inc
push
roll
cld
add
add
push
push
popfw
xchg
loopne
js
add
out
sbb
jg
fnsave
push
sub
movsl
pop
shrl
jge
mov
cltd
rep
lret
pop
lcall
xor
pop
leave
inc
iret
or
push
jne
jb
popf
jmp
and
test
iret
push
cmp
jmp
test
push
lcall
push
adc
push
adc
add
mov
lock
stos
inc
and
jbe
jmp
or
roll
ret
or
mov
push
movsb
out
dec
lods
or
mov
loopne
push
and
mov
jnp
xchg
and
leave
sbb
fimuls
mov
jae
push
pop
stc
dec
insb
mov
insl
out
outsb
inc
and
inc
mov
xchg
jp
dec
and
push
push
dec
fs
mov
jl
cmp
incb
addr16
movsb
jmp
les
mov
int
add
loopne
call
mov
adc
cmp
adc
xchg
lods
mov
push
mov
nop
cmp
clc
or
out
jne
dec
sti
loope
cmp
and
cli
aam
push
lcall
movsb
cmpl
push
ss
sbb
jbe
pop
stos
jbe
insb
mov
pop
pusha
pop
cld
add
fldl
push
mov
lds
shll
shrl
in
lds
test
mov
das
fisubl
xchg
test
cld
pop
add
dec
sub
jmp
jns
pushf
or
cwtl
sbb
icebp
adc
in
stos
and
push
inc
in
jbe
cmp
mov
or
sub
xchg
add
movsb
in
lods
lock
hlt
sub
pop
lds
fadd
stos
xlat
push
dec
popf
dec
shrb
push
cli
xchg
mov
lods
mov
loopne
cmp
xchg
pop
mov
and
adc
mov
dec
mov
adc
sub
clc
xchg
loope
ja
jmp
pop
popf
dec
shll
sahf
in
test
xchg
cmpsl
adc
cs
and
js
cmp
mov
sahf
xchg
fdivrl
popl
fwait
out
add
aad
jg
sbb
jg
jl
fnstenv
in
test
mov
jae
lret
bound
and
cmpsl
lcall
fwait
mov
cltd
ret
xchg
out
aas
test
outsl
shlb
mov
out
add
mov
mov
outsb
pop
insb
movsl
icebp
ror
mov
mov
pop
sbb
inc
mov
add
mov
sti
cmp
outsl
sbb
hlt
xor
xor
orl
push
dec
fidivs
push
add
daa
outsl
sbb
leave
shlb
pop
pop
pop
mov
cmp
pop
dec
mov
push
mov
outsl
movsb
and
dec
repnz
xchg
and
xor
roll
test
pop
inc
push
mov
jno
popf
xlat
stos
add
jne
pusha
scas
jno
mov
aaa
pop
das
nop
test
cmp
cmp
cmc
gs
scas
mov
cs
pop
jns
jb
push
dec
shll
adc
mov
and
in
arpl
gs
mov
sbb
out
push
push
xchg
daa
stc
mov
mov
nop
mov
cld
or
rcl
out
push
mov
je
pop
inc
insl
pop
add
jl
test
pop
jmp
push
lret
in
ret
push
xchg
sbb
mov
mov
pop
shrl
mov
adc
cld
push
shll
sbb
push
rcrl
or
and
add
rcrl
stc
insl
call
jmp
mov
ds
sub
add
aad
jo
xor
adc
xor
rcll
scas
imul
xchg
into
lods
in
adc
mov
cmp
testb
push
and
dec
push
in
add
insb
dec
push
movsb
test
inc
mov
xor
sti
into
sbb
inc
sbb
data16
stc
mov
and
adc
mov
jp
movsb
adc
lock
gs
push
adc
and
jp
test
js
jp
cmp
sub
dec
push
jb
int
lcall
cli
cmpsl
cmp
mov
lock
mov
inc
sbb
or
sub
add
aam
jnp
and
cwtl
add
loop
and
pop
or
dec
popa
clc
adc
fidivs
mov
mov
cmp
punpckhbw
jge
aad
jecxz
lods
pop
out
xor
repnz
outsl
dec
add
inc
add
inc
jmp
insl
icebp
or
mov
leave
sub
in
push
pop
scas
rep
leave
cmp
pop
pop
jge
lea
in
dec
clc
dec
rorb
jl
and
imul
aas
and
outsl
sub
jecxz
lods
add
or
mov
mov
insb
add
or
aas
jbe
cmpl
out
fsubs
iret
pop
and
inc
cli
lock
cmp
sarl
sbb
fisttpl
xchg
nop
push
clc
imul
mov
mov
sbb
jmp
push
add
movl
out
in
sbb
leave
dec
enter
repz
sub
inc
loopne
or
mov
gs
dec
mov
arpl
cmc
mov
adc
aam
mov
test
int
add
clc
sarl
push
fidivl
or
and
and
mov
test
xchg
in
in
shl
adc
mov
cmp
cmc
xchg
jg
xchg
ja
jne
jbe
arpl
sub
loopne
mov
jl
shrb
mov
cmpsl
sbb
stos
arpl
sub
xor
jg
inc
cli
sub
ret
and
push
test
adc
loopne
subl
xor
and
into
test
cmpsb
hlt
inc
mov
movsb
lock
add
dec
and
pop
mov
push
adcl
int3
cld
or
shrb
inc
mov
and
int
call
int
add
pop
sub
or
insb
out
dec
leave
sub
adc
or
push
pop
adc
rol
jbe
fidivrs
hlt
dec
cmp
sbb
inc
gs
mov
cmc
push
insl
fbld
loopne
and
adc
lods
mov
fld
or
xchg
dec
popf
into
arpl
out
jb
add
jae
andb
mov
push
lea
imul
subl
pshufw
sub
cmp
push
adc
mov
lock
filds
repz
and
adc
mov
add
das
movsb
xchg
aaa
cmp
in
test
sbb
aaa
repnz
das
filds
xor
pop
dec
push
lock
xchg
aaa
and
mov
and
xlat
outsb
js
xor
imul
mov
mov
jl
pop
lret
jp
adc
push
sbb
sbb
neg
lea
sbb
and
test
mov
out
les
sbb
mov
mov
xchg
pop
jno
push
push
mov
push
or
lcall
pusha
lcall
sbb
mov
add
xor
test
jle
cmova
push
lea
mov
xor
stc
pop
rclb
sbb
mov
outsl
sbb
aaa
jnp
ja
sbbb
addr16
repnz
lea
in
loop
mov
xchg
adc
xor
mov
enter
jo
movsb
jp
icebp
mov
popf
ljmp
js
mov
lock
pop
push
mov
pop
push
add
subl
ja
dec
add
dec
in
or
scas
jle
lods
xorl
adc
add
out
fldenv
xchg
rcl
xor
loop
xorb
fcoms
jmp
dec
shrl
mov
std
arpl
inc
jno
mov
or
pop
inc
sbb
push
xchg
fnsave
mov
jp
inc
dec
and
cmp
jecxz
xchg
pop
subb
sbb
xor
arpl
cmp
jbe
aam
call
inc
aas
push
iret
jne
adc
jb
sub
sbb
mov
adc
psubd
pop
cmpsl
je
and
inc
mov
add
cmpb
push
adc
cs
test
xchg
scas
das
xor
jp
and
mov
push
jecxz
mov
mov
test
pop
ja
inc
stos
mov
dec
xor
xchg
das
add
cmp
add
fsubl
ja
inc
pop
dec
icebp
xor
addr16
jno
push
mov
inc
jl
int3
jo
jecxz
adc
fcoml
pop
mov
enter
mov
cmp
scas
nop
push
sub
test
mov
scas
ds
loope
or
mov
cmpsb
fdivr
out
and
int3
movsl
pop
clc
xchg
dec
leave
cwtl
sbb
sbb
pop
jne
aad
cwtl
inc
je
clc
repnz
lahf
mov
mov
frstor
pop
add
pushf
bnd
sbb
jle
loope
out
or
add
and
and
push
adc
adc
adc
or
xchg
movmskps
les
aad
xchg
dec
sbb
mov
repnz
mov
test
pop
push
in
adc
jmp
push
push
and
roll
pop
loop
loopne
xchg
push
cmp
push
bound
repnz
inc
xor
ficompl
popf
pop
sub
addb
cmp
jmp
or
inc
js
xlat
jbe
cmp
sub
sbb
aad
cs
push
sbb
leave
pop
hlt
das
jge
shl
and
xor
sbb
pusha
and
mov
cmp
jg
lret
testl
sbbl
xorl
bound
test
push
mov
rorl
incl
mov
inc
cli
dec
jae
dec
mov
adc
aad
push
mov
cmp
and
cmc
pop
add
aas
cmp
loopne
hlt
push
add
pop
or
jno
jp
mov
cmp
cltd
ja
call
mov
xchg
outsl
movsb
xor
xor
fwait
xor
mov
ljmp
js
jne
call
jo
cmpb
xor
lahf
or
rorb
pop
push
jmp
rcll
aas
pop
jmp
and
fidivl
hlt
cmp
decb
sub
xorl
adc
mov
inc
repz
insb
add
in
ret
inc
sub
aas
jo
sti
aas
or
and
pop
xor
int3
subps
sub
call
mov
cli
loopne
sysexit
je
out
movsl
cli
fidivs
push
sub
add
adc
aam
xchg
sbb
dec
cld
mov
lret
lret
pop
mov
pop
jbe
mov
dec
and
jg
jle
add
sbb
adc
sbb
jg
cmovns
sbb
cmpsl
out
lods
loop
add
pop
pushf
pop
lcall
shll
cli
sbb
pop
clc
xor
loope
mov
jo
pop
mov
pop
lock
jmp
inc
lods
mov
out
inc
jo
icebp
mov
shll
and
push
pop
stos
or
lock
hlt
lods
mov
fisubrs
adcb
repz
jmp
scas
add
add
sbb
ds
shlb
mov
iret
mov
cmp
xchg
lcall
les
cmp
filds
mov
pusha
cltd
add
or
mov
jbe
xorb
or
jecxz
shll
and
movq
lock
pop
push
mov
push
jo
clc
fistl
jle
cmpl
addl
andl
test
das
adc
ret
jg
jb
sbb
inc
xor
adc
inc
cld
add
or
xor
pop
adc
imul
dec
push
movsl
sbbb
mov
mov
pop
sub
cld
addr16
and
or
std
push
or
out
and
xchg
add
loop
xor
les
add
cmp
pop
mov
and
repnz
and
cwtl
pop
push
sarl
loop
fidivrs
mov
mov
push
hlt
pop
sbb
js
mov
enter
sahf
pop
addb
sub
lock
xchg
mov
std
jno
cld
ret
mov
scas
lcall
inc
outsb
xor
or
std
cmpsb
or
js
sbb
push
ljmp
pop
roll
dec
repz
xchg
mov
cmp
push
sub
xchg
add
xorb
pmuludq
mov
sti
loop
and
push
push
push
push
addb
aas
mov
es
into
xchg
loopne
pop
ret
add
dec
loopne
jae
dec
and
pop
jb
jle
icebp
daa
loopne
pop
std
cmpsb
pop
cmpsb
ss
xchg
orl
cs
jge
cld
bound
les
fidivs
pop
decb
ret
dec
pushf
ret
test
or
add
les
lods
enter
dec
cs
call
jle
stos
cmpsb
lds
fs
pop
jne
shll
lahf
xchg
orb
and
stc
lock
inc
test
or
and
clc
repnz
pop
test
or
mov
sub
cmp
fs
push
cli
and
jmp
mov
repz
mov
in
inc
xor
inc
cmp
mull
les
aaa
shrl
push
mov
push
bound
fwait
sub
ret
dec
xchg
sub
and
dec
pop
cmp
ja
mov
jl
xor
sub
ss
adc
fnstsw
out
cmp
sub
ljmp
push
push
xchg
dec
inc
xchg
lock
inc
addr16
les
andb
lret
mov
testl
add
sahf
fisttps
inc
and
push
out
jecxz
loop
int3
rcr
push
dec
push
mov
mov
inc
lock
cld
push
adc
push
decl
push
fwait
icebp
daa
rolb
mov
jl
cmp
test
test
enter
cmp
xchg
and
popa
sbbl
mov
xchg
add
jno
xor
jmp
xchg
cli
pop
mov
mov
dec
hlt
inc
cmp
mov
lock
and
or
ficomps
loop
dec
cmp
pop
push
cld
scas
sbb
xchg
ja
jbe
adc
pop
mov
add
les
jo
and
add
imul
cmp
lcall
and
adc
cmp
and
scas
and
sarb
sbb
mov
data16
nop
fwait
sub
add
or
cltd
add
inc
shll
push
push
mov
pop
and
iret
lahf
sub
jbe
data16
ror
out
dec
sar
ss
lcall
sbb
or
movsb
test
fistl
push
pusha
pop
xor
or
mov
add
outsl
mov
test
jbe
aas
sub
loopne
std
mov
pushw
jp
cs
test
mov
sub
or
ret
loop
mov
andl
cmp
push
dec
mov
sub
in
mov
clc
aas
inc
sbb
sbb
cmp
xor
pop
shll
sub
gs
leave
push
sub
or
and
jl
push
mov
orl
sub
test
pop
add
sub
xchg
jp
pop
or
xor
sub
sub
mov
fstpt
or
lahf
pop
and
ss
add
sarl
mov
xor
xor
pop
xchg
xchg
push
dec
or
push
adc
jecxz
pop
or
mov
pop
ja
sub
or
mov
stc
jg
jmp
scas
popa
jp
xchg
subb
icebp
pop
std
jecxz
adc
int3
test
fs
js
js
xchg
inc
or
or
jmp
add
movsb
negl
lock
mov
std
lret
leave
cmp
push
adc
cld
pop
adc
xchg
shlb
aam
mov
les
cld
mov
nop
jl
push
xchg
cmp
mov
xor
roll
outsl
pop
aas
or
mov
jecxz
scas
add
add
xchg
loope
cld
and
lret
xchg
adc
pop
mov
or
loope
push
xor
xchg
lock
pop
std
daa
cmp
xchg
jge
pusha
lahf
cmp
arpl
les
mov
ret
jbe
xor
mov
or
jbe
jo
xor
scas
cmp
icebp
mov
push
or
xchg
pushf
mov
add
scas
test
pop
sbb
add
pop
dec
add
mov
clc
ret
cmp
clc
xor
ret
or
xchg
pusha
cmc
or
test
push
mov
loop
ss
mov
mov
jle
imul
das
cwtl
jo
popa
add
pushf
iret
clc
mov
arpl
ljmp
rcrb
adc
pushf
jecxz
xchg
incl
fsubr
stc
iret
pop
dec
or
sub
out
or
jno,pt
and
and
mov
sub
inc
push
adc
aaa
ret
pusha
push
inc
loope
lods
es
mov
std
adc
mov
adc
jne
cmp
lahf
mov
mov
lock
inc
cmc
jg
or
arpl
je
rclb
push
dec
adc
jp
adc
lods
mov
add
dec
sub
shrl
ret
push
cltd
xchg
iret
incl
out
lret
stos
inc
cli
in
js
addb
sub
sub
and
lahf
cmpsb
ror
dec
loopne
pop
jmp
adc
dec
jbe
in
xor
sub
out
pusha
ljmp
outsb
xor
push
pop
mov
cs
jnp
or
mov
dec
imul
ret
mov
push
pop
lods
cs
xor
ja
mov
jle
sti
lds
test
arpl
pusha
xor
mov
cmp
subl
jb
pop
dec
aas
mov
or
std
shrb
cmp
mov
mov
in
cli
jbe
lods
stos
lods
ss
cld
es
push
push
es
pop
jo
xchg
push
mov
testb
push
mov
das
pop
cmc
xchg
mov
stos
jmp
repz
out
pop
jg
cmp
adc
sbb
jmp
adc
mov
rcrl
add
loope
add
aad
fnstenv
pop
stc
ja
out
popf
xchg
lea
push
out
fsubr
add
mov
add
adc
xor
push
sub
xchg
xchg
push
mov
jle
sub
mov
cmpsl
std
frstpm(287
pop
or
gs
sahf
or
mov
lea
jp
pusha
cmp
ljmp
add
mov
mov
clc
jmp
incb
sbb
mov
jge
mov
add
or
cwtl
and
jge
popa
lcall
pusha
and
mov
or
fdivl
and
shrl
fdiv
or
scas
insl
sub
mov
clc
xchg
lock
pop
push
cmp
scas
inc
pushl
je
scas
inc
in
or
mov
dec
mov
cmp
test
push
rolb
sub
test
das
mov
jle
sbb
adc
sbb
dec
jo
loopne
sbb
std
and
fdecstp
test
lock
scas
and
inc
or
pop
cmpsb
iret
fsubrs
xchg
pop
test
adc
pop
or
inc
push
push
ljmp
in
loop
and
pusha
call
test
addr16
in
or
in
arpl
mov
outsl
pushf
push
out
scas
cmpsl
pop
cld
jecxz
sub
je
aaa
adc
inc
xor
adc
cmp
push
adc
sub
cmp
push
loope
mov
daa
ret
inc
je
sbb
decl
ficoml
mov
xor
es
sbb
not
cli
in
repnz
loopne
xor
xor
push
push
push
loope
dec
add
add
icebp
push
enter
xor
js
sbb
sub
cmp
stc
adc
add
outsl
mov
mov
addb
pushf
xchg
imul
rcr
mov
fistps
mov
movsl
mov
jb
cli
jnp
push
sar
xchg
aaa
ds
orb
cltd
pmaxub
push
mov
flds
push
dec
or
iret
icebp
sbb
jno
add
jmp
fisttps
xchg
imul
sub
ljmp
sbb
sbb
lret
xorb
xor
pusha
cmc
movsb
mov
cli
push
int3
rolb
mov
push
xor
sub
jge
jg
add
addl
imul
or
sbb
dec
les
cmp
cli
xlat
sub
cmp
cmp
adcb
mov
popa
xchg
hlt
mov
pop
inc
mov
pop
push
sub
mov
aas
incb
xchg
aad
sbb
sbb
test
cmp
call
lret
scas
mov
rcll
xlat
sbb
dec
inc
mov
out
add
or
mov
lahf
cmp
push
sub
adc
shl
roll
jb
inc
sub
inc
cmp
sahf
pop
outsl
cld
pop
push
adc
push
sub
addb
imul
adc
xchg
and
adc
test
adc
push
outsl
jne
lret
pushf
and
and
mov
std
dec
sbb
jg
push
add
iret
popl
xchg
sub
pop
call
sahf
call
xchg
add
pop
cmp
sbb
inc
and
xor
call
and
sub
in
lods
imul
or
sub
mov
pop
sub
add
dec
mov
add
cwtl
jp
cmp
decl
fmull
xor
arpl
iret
or
inc
jne
sbb
mov
call
in
xchg
and
icebp
mov
pushf
pop
pop
xchg
adc
xchg
cmpb
das
sarl
loopne
insb
stos
sbb
jno
pop
and
pop
ds
adcl
shl
push
sbb
cld
push
cli
incl
add
ljmp
jg
jnp
xor
xlat
notb
dec
out
int3
in
inc
dec
inc
dec
les
sbb
or
mov
or
xchg
inc
lds
push
cmpsb
data16
add
push
lock
xorb
jg
jecxz
shrb
gs
out
jg
cmp
adc
push
xlat
sub
js
inc
stc
and
mov
shrl
test
add
lds
mov
sub
sbb
ret
pop
pop
or
in
faddp
xchg
inc
addl
add
mov
sbb
test
xor
cli
insl
xor
sub
push
mov
lret
jp
xchg
rclb
or
adc
das
lea
pusha
inc
dec
cmp
mov
es
mov
icebp
cli
adc
jno
jg
adc
iret
ret
mov
ret
scas
add
outsl
or
ficoml
movsl
mov
mov
push
jecxz
sbb
aaa
mov
add
sub
jns
adc
mov
inc
push
lcall
mov
add
push
add
xor
dec
cmp
outsl
push
ret
js
inc
or
movsl
movl
xorl
scas
ror
pop
out
xorl
cmp
xor
add
lods
js
mov
push
jo
push
push
add
xchg
push
aaa
in
inc
fwait
loop,pt
bound
mov
or
xchg
faddp
cmp
add
sbb
enter
xchg
int
in
std
adc
jmp
out
mov
cmp
test
xchg
xor
std
pop
cmp
and
cld
and
mov
inc
adc
inc
mov
movsb
shl
xlat
test
in
stos
cld
sbb
xor
test
add
mov
pop
xor
mov
es
dec
inc
int
mov
ja
stos
rclb
nop
in
and
and
mov
jmp
xor
adc
shrl
or
mov
scas
in
fsubl
lret
sbb
cmp
decb
xchg
out
xor
lock
loope
push
adc
loopne
mov
clc
mov
adc
std
sub
pop
rcrl
xchg
adc
mov
xor
in
addr16
xchg
push
add
lods
movsl
lods
inc
aaa
lock
pop
arpl
add
push
xor
wbinvd
cmp
add
test
jae
fwait
mov
xor
fdivl
dec
push
add
or
dec
bound
add
daa
rorl
jg
adc
mov
pop
adc
xorl
cld
push
mov
aam
sbb
cmpsl
adc
adc
lahf
xchg
je
outsb
outsl
lock
cmc
mov
pop
xchg
popf
fsubrs
xor
pusha
out
lahf
decl
jp
inc
dec
hlt
arpl
aam
sub
into
cmp
hlt
add
cmpsl
add
add
sahf
jle
and
into
xor
xchg
stos
jg
mov
daa
jl
loopne
mov
nop
mov
out
mov
aas
loop
inc
add
js
fcoml
jg
and
push
pop
mov
mov
pop
les
ljmp
or
mov
out
lods
clc
cmovbe
adc
cmp
pop
jns
test
lock
mov
mov
sub
xor
insb
mov
xor
pop
or
adc
shlb
cli
or
mov
xchg
pushf
xchg
popf
mov
fsubrl
xor
lret
fsubrp
jo
or
int
push
sbb
loopne
xor
add
mov
sub
pushf
inc
js
mov
inc
pop
add
and
dec
rolb
lods
test
jb
dec
fnstsw
jp
aam
mov
xor
aaa
out
or
orb
int3
cmp
adc
pop
inc
xlat
aaa
cld
cmc
and
inc
fs
jno
shrb
mov
jbe
inc
push
mov
push
pop
push
mov
xchg
sti
testb
std
sub
push
bound
mov
xor
sub
push
fs
inc
sbb
femms
cmp
stos
mov
mov
push
sbb
or
aad
in
add
fcoms
jmp
sahf
mov
insl
cwtl
adcb
mov
shll
dec
mov
xchg
cld
dec
bound
js
mov
arpl
mov
add
fisttpll
dec
loope
nop
lods
sbb
ss
addb
or
xorb
scas
xchg
call
mov
rorb
int
push
mov
cli
dec
mov
pop
and
xchg
andl
jo
mov
sbb
movmskps
cli
or
sbb
lods
cmpb
into
lret
mov
xchg
dec
subl
push
sub
inc
xchg
pop
push
xchg
adc
inc
add
add
sahf
das
das
mov
out
push
add
sbb
ja
sti
mov
xchg
ja
fcmovb
sbb
jle
jmp
inc
adc
shl
dec
scas
jp
cli
addb
aaa
mov
xlat
push
mov
fdivr
in
mov
push
stos
out
test
cmp
adc
lea
lock
or
pop
dec
hlt
insl
xchg
jg
imul
mov
movb
cmp
es
dec
incl
xchg
pop
and
xchg
fnstenv
ret
xor
data16
repz
sahf
adc
daa
enter
push
ret
pop
push
lcall
cwtl
pop
into
add
dec
pusha
adc
daa
mov
mov
push
add
pop
loop
loopne
push
cli
icebp
pop
test
push
adc
pusha
dec
jp
loop
sar
repnz
fs
push
jo
icebp
fisubs
adc
push
xor
push
jle
inc
fcoms
push
scas
jg
out
add
insl
scas
inc
icebp
cmc
jns
outsb
jbe
shll
and
enter
icebp
in
jns
inc
hlt
insl
mov
push
out
adc
sarl
sbb
adc
inc
movsl
es
inc
shrl
cmp
add
add
xor
inc
movsb
sbb
addr16
xchg
mov
shrd
gs
cmp
out
mov
push
xor
and
add
mov
fcmovb
jno
scas
jnp
push
mov
lea
scas
cwtl
pop
rcll
inc
rcl
inc
sub
add
add
cmc
dec
mov
dec
push
and
jge
or
shr
pop
fidivrs
mov
fidivrl
cltd
cmp
sbb
or
imul
or
popa
mov
mov
je
in
inc
das
jmp
sub
call
cmp
insl
dec
loop
push
mov
arpl
jg
xor
push
lcall
sub
aas
jnp
cmp
xor
or
mov
push
mov
cmpsb
adc
cmpl
adc
push
ja
fidivl
push
popf
hlt
pop
pop
push
rolb
lock
sub
push
test
mov
pop
in
or
fcoml
lods
imul
jnp
or
lahf
sub
mov
pop
ror
jge
and
mov
inc
pusha
adc
mulb
jbe
dec
jge
fs
bswap
jmp
xchg
aad
rolb
add
sub
jne
jb
mov
insl
hlt
icebp
inc
inc
frstor
mov
sbb
sub
hlt
jmp
je
push
movsb
mov
pusha
dec
cmp
loopne
test
pop
jns
lea
or
ret
adc
insl
aad
and
push
je
fs
mov
push
xchg
pop
ret
pushf
and
pushf
mov
or
adc
popf
adc
cwtl
pop
and
sar
xchg
cmc
ret
cmp
jmp
loope
cmc
add
push
lods
scas
mov
mov
add
movsb
inc
mov
cmpsl
pcmpeqb
mov
mov
repz
orb
je
stos
add
pop
xchg
inc
clc
jecxz
nop
sub
out
push
xchg
ljmp
fldt
add
pusha
lea
repnz
pop
sub
add
andl
cmc
xchg
stos
push
nop
sahf
jmp
pop
js
mov
sbb
in
adc
mov
lahf
dec
mov
cmp
jbe
or
mov
xchg
push
push
dec
cmp
and
push
xchg
stos
mov
push
je
pop
inc
xor
mov
sbb
lahf
inc
imul
mov
pop
or
int
push
dec
cmp
or
jl
mov
mov
push
mov
push
ds
mov
loopne
gs
sub
sub
cld
jno
add
movswl
mov
or
mov
fnstenv
lea
add
xchg
sub
mov
sub
in
imul
push
xlat
imul
pop
imul
inc
ljmp
adc
lret
xchg
fnsave
push
mov
push
data16
loope
mov
inc
cmpl
jge
add
stc
xchg
movsb
cmp
pop
lea
sbb
inc
ljmp
pop
pop
mov
insb
movsb
push
sbb
nop
jl
mov
out
inc
loope
insb
xchg
daa
aam
shl
call
dec
test
cmc
sub
cmpsb
cltd
sub
jns
popf
ja
leave
ds
pop
mov
stos
fwait
imul
js
or
cld
add
mov
pushf
push
and
or
sub
int3
mov
or
pop
jbe
dec
add
push
fnsave
adc
aas
mov
clc
aad
sbbb
xor
adc
cmp
pop
inc
adc
stc
loopne
out
and
cmp
add
sub
sbb
lea
cld
jo
pop
mov
mov
and
scas
jp
xor
mov
mov
sub
aam
aad
adc
dec
sub
imul
jmp
imul
cwtl
jmp
sahf
les
mov
rcr
aas
imulb
jne
scas
mov
add
add
lods
and
pop
cmp
filds
jmp
mov
out
push
mov
jl
jecxz
into
popa
adc
adc
add
sub
sub
rcl
jmp
dec
stos
sbb
insl
dec
or
test
inc
ffreep
jae
xchg
inc
mov
dec
clc
xchg
arpl
les
aaa
stos
sub
icebp
decb
adc
jns
scas
fdivrs
sbb
adcb
std
mov
pop
cmp
inc
rcl
es
fdivrs
jmp
hlt
movsb
out
pop
insl
jl
test
stos
clc
test
inc
aaa
add
arpl
xchg
mov
xchg
insl
test
fiadds
hlt
add
je
test
scas
dec
push
ret
jp
or
test
rcl
fmuls
push
cld
add
in
lock
decl
les
cmp
movl
popa
scas
bound
popa
cmpsb
pop
mov
mov
incl
and
push
jg
and
das
sti
or
lock
pop
push
and
and
jno
jge
mov
mov
push
inc
mov
add
xchg
and
xorps
xchg
pushf
push
cmp
mov
push
push
iret
mov
push
xchg
add
das
js
ds
push
and
add
push
cmpsl
or
fstpt
sbb
push
loopne
mov
cmp
push
scas
loope
sub
inc
push
dec
orl
sbbl
pop
xlat
nop
loope
jo
shll
mov
xchg
pop
imull
movsb
adc
movsl
add
xchg
cmp
fmuls
loopne
inc
shll
fistps
gs
xchg
inc
mov
and
or
fiaddl
sub
xor
and
push
dec
mov
fsubrp
jo
add
shr
lahf
or
int3
xor
sti
mov
inc
test
push
mov
fwait
mov
or
imul
pop
or
mov
test
sbb
mov
in
clc
data16
mov
cmpl
hlt
xor
into
std
arpl
sbb
add
out
or
loop,pn
subl
sbb
loope
clc
mov
js
cmp
ret
xor
std
inc
dec
outsb
and
xchg
cwtl
mov
sahf
mov
test
repz
out
iret
cmp
outsb
cmp
and
bound
scas
mov
test
insl
xor
mov
xor
sbb
pop
ds
and
test
cmp
mov
sub
cld
xor
lret
jnp
sub
out
movsb
out
xchg
mov
cmp
or
and
jbe
sbb
sub
push
ret
dec
sahf
aam
push
fnsave
mov
jae
pop
dec
cltd
mov
adc
sbb
outsb
les
mov
mov
aam
iret
and
adc
jne
subb
hlt
sbb
xchg
rorb
or
jb
loop
incl
ja
mov
inc
loopne
jecxz
shll
out
pop
ror
mov
adc
jle
call
add
fdiv
data16
aaa
mov
sarb
cmp
mov
push
pushf
sqrtps
xchg
movb
jo
leave
test
xor
rolb
ja
xchg
xor
inc
dec
add
adc
shrb
in
mov
js
mov
imul
fists
ret
push
mov
xchg
je
push
fcoms
inc
adc
mov
jnp
dec
or
push
dec
adc
add
mov
jp
nop
js
add
arpl
jecxz
mov
sbb
jl
adc
lock
lock
and
adc
inc
pop
sbb
pop
pusha
jnp
in
iret
push
out
ficompl
cmp
mov
cltd
lcall
and
aas
pop
push
push
mov
js
adc
jo
je
lahf
and
push
and
push
popa
les
mov
add
sbbl
lds
add
or
xor
mov
adc
xor
dec
add
into
ret
push
xor
mov
cmpl
inc
jmp
dec
or
and
hlt
aam
lock
test
jmp
call
push
inc
jb
enter
lahf
push
add
cmpl
add
mov
stos
push
icebp
push
enter
in
lods
mov
and
cmp
addb
hlt
loope
ret
xor
mov
mov
dec
jl
imul
xor
aas
stos
jns
shrl
in
or
gs
cmc
pop
js
mov
imul
sbbl
push
adc
inc
out
int3
xchg
mov
push
loop
sbb
pop
xchg
and
shlb
mov
adc
aas
mov
roll
sub
sbb
inc
lds
fs
xor
fldt
and
aaa
fdivrl
push
cltd
xchg
xor
mov
xor
rclb
mov
lods
fldl
jle
rcr
dec
clc
int
mov
add
into
or
xchg
imul
xlat
push
add
mov
mov
pop
cmpsl
mov
into
insl
mov
or
mov
or
fs
mov
movsl
rorl
fldcw
sbb
or
mov
out
loop
jecxz
out
push
dec
mov
adc
shrb
out
or
repz
mov
inc
scas
imul
adc
push
pusha
xlat
mov
xor
add
decl
arpl
aad
data16
mov
push
sbb
mov
xchg
xchg
push
cmp
xchg
jg
mov
sbb
mov
daa
xor
bound
mov
mov
add
cmc
scas
andl
ljmp
mov
ffree
in
add
and
add
pop
xor
mov
fisttps
les
scas
sub
das
push
fisttpll
mov
jb
stos
jb
push
loope
mov
pop
lds
mov
dec
xor
imul
imul
test
adc
mov
cmc
xor
scas
in
dec
cmp
addb
sub
push
jge
cmc
push
mov
xchg
outsb
mov
sub
gs
popa
insb
pop
jae
lret
nop
ss
into
sub
cld
outsb
loope
insb
pusha
cmp
inc
add
pusha
pop
icebp
sbb
test
fidivrl
xlat
arpl
add
xchg
scas
clc
xor
mov
mov
add
inc
js
xor
aas
jno
sti
xchg
mov
sub
xchg
clc
sub
xor
cmpsl
fwait
sub
js
sbbl
or
add
mov
out
mov
pop
push
test
test
pop
jmp
pop
mov
insb
aam
in
xchg
cli
fbld
dec
pushf
mov
std
prefetcht0
clc
pop
jbe
pop
dec
xor
sarb
cmp
popf
cmc
ss
daa
sbb
xchg
out
sahf
jge
sub
lods
aas
push
mov
data16
bsf
in
sahf
inc
loope
add
sbb
cmpsl
and
mov
jecxz
lea
lcall
or
bnd
movsl
and
mov
shlb
or
insb
lds
jl
xor
mov
push
ss
incb
test
movsb
in
add
mov
adc
pop
cld
mov
testl
mov
jecxz
adc
in
int
jge
dec
jb
mov
inc
push
cs
jge
cmp
sub
add
cmp
xchg
in
add
imul
rcll
push
arpl
cmp
dec
add
lock
into
dec
and
cld
push
movsl
inc
mov
ljmp
jne
call
jmp
mov
mov
inc
cmp
lock
lock
lret
add
cld
scas
cmp
sbb
mov
cmp
dec
in
sahf
cli
push
cld
aas
bound
add
cmp
and
push
loope
jge
loop
cmp
ds
clc
mov
mov
es
std
jae
nop
inc
fildl
notl
dec
sub
mov
test
adc
mov
ret
jb
mov
mov
jmp
mov
inc
fistps
mov
sub
inc
sti
push
add
jg
test
push
add
lea
mov
outsb
fisubl
adc
fld
mov
sub
push
and
mov
lea
iret
or
notl
fimuls
movsb
popf
and
xchg
jo
pop
cs
mov
xchg
push
decb
add
stc
das
nop
mov
lret
cld
test
cli
pop
dec
push
sbb
pop
mov
test
shl
sar
scas
mov
or
stos
dec
add
fdivl
movsb
mov
pop
cmp
adc
xchg
out
mov
sarb
ljmp
insb
pop
dec
mov
test
rolb
mov
pop
clc
inc
das
mov
mov
jnp
into
lahf
and
and
iret
out
rcrb
ror
lea
aas
stos
inc
das
push
pop
inc
ret
inc
xchg
push
pop
xchg
in
mov
dec
ss
and
mov
push
call
mov
add
mov
jecxz
mov
sbb
pop
sub
mov
jmp
jmp
ret
ljmp
lods
and
pop
subl
mov
push
pop
pop
add
ljmp
pop
jmp
in
insb
lods
mov
add
dec
xchg
cltd
ds
sbb
lahf
adc
pop
mov
fsub
push
mov
enter
pushw
or
rcrl
push
push
sub
pop
cmpsb
sub
mov
sarl
push
jae
sub
ja
rorb
xor
sbb
in
adc
cmpsl
adc
test
lods
push
cmpsl
xchg
shlb
xchg
shl
pop
ljmp
cld
dec
je
cwtl
push
mov
dec
fs
lcall
push
add
xchg
hlt
mov
adc
add
das
cmpsl
xor
mov
jb
clc
jae
aam
icebp
scas
in
sub
in
push
ja
loopne
outsl
sarb
cwtl
les
subb
ljmp
cmp
jb
mov
in
stos
pop
test
add
push
loopne
mov
xor
jecxz
xorl
jge
or
call
scas
call
jo
notb
aad
jbe
shl
pop
xor
xchg
mov
fcmovnu
imul
inc
jmp
fwait
push
lods
push
fwait
in
filds
xlat
adc
movsb
adc
scas
and
test
popf
xlat
loop
fs
scas
std
cmp
test
js
lock
xor
lock
int3
and
push
sub
sbb
repnz
xlat
mov
pop
int3
pop
sbb
iret
sub
mov
jmp
loopne
out
mov
push
and
mov
clc
sti
xor
xchg
outsb
ss
inc
inc
loopne
clc
lea
stos
jo
je
aaa
xchg
sbb
mov
xor
inc
cltd
movsl
jge
fsubr
xorl
dec
test
adc
iret
add
pushf
sub
pop
cmp
xchg
add
xlat
ss
testb
inc
loope
loop
xlat
and
fsts
testl
loope
pusha
js
jmp
bound
scas
add
jmp
rorb
ret
ficoms
insl
inc
cld
push
out
cmc
fistpll
inc
rcll
jbe
mov
sub
sbb
ret
mov
movsb
ljmp
test
rcrb
pop
jecxz
mov
outsl
sub
popa
and
int3
add
sbb
sarl
setae
sbb
jp
adc
and
negb
mov
fistl
mov
pushf
mov
add
add
push
xchg
pop
decl
xor
xchg
movsl
mov
mov
lds
adc
jb
stos
mov
adc
push
xor
int
dec
icebp
and
jnp
sub
daa
jg
out
push
push
sub
and
into
jp
push
pmaxub
xor
cmp
dec
xchg
call
pop
fsubrp
js
mov
inc
cmp
movb
sub
push
fisttpll
xchg
or
nop
xchg
fabs
or
std
inc
dec
test
dec
mov
inc
cmp
sbb
rcrl
mov
mov
mov
imul
unpckhps
mov
push
push
test
and
jg
movsb
in
in
cmp
xchg
test
inc
xor
cltd
cmp
cwtl
sbb
in
inc
sbb
push
mov
xchg
test
mov
rolb
adc
mov
push
loope,pt
pusha
data16
pop
in
xchg
lahf
sub
add
mov
cmp
pop
std
and
js
lcall
nop
fists
push
js
mov
cmp
push
sarb
mov
lods
jmp
inc
outsl
mov
jb
call
pop
sbb
imul
decl
jge
mov
dec
fidivs
ljmp
cmp
loopne
test
mov
mov
and
cmpsl
ljmp
and
sbb
mov
xor
lds
out
add
xchg
test
push
std
repnz
test
dec
dec
mov
shr
arpl
push
cmc
or
add
add
inc
and
push
mov
mov
inc
sbb
pop
aam
jg
inc
pusha
sbb
rcrb
popa
xchg
pop
dec
add
stc
into
jo
out
mov
pop
imul
add
mov
cmp
mov
int
pop
std
xchg
and
mov
or
in
popf
mov
out
xchg
inc
mov
mov
sbb
lds
fninit
arpl
std
mov
jo
popa
rorl
cmp
add
cwtl
inc
and
call
sbb
sub
nop
std
xchg
hlt
sahf
aas
maxps
ljmp
loope
aad
ret
xor
mov
sub
icebp
es
out
and
xchg
pop
ficoml
test
out
iret
sbb
es
sbb
jg
loope
shr
xchg
daa
loopne
adc
pop
ja
dec
pop
gs
arpl
pop
xor
int
xor
jne
test
cld
xlat
sbb
bound
mov
pop
xor
lea
add
test
xor
hlt
pop
jecxz
mov
call
clc
scas
mov
push
dec
jnp
lock
pop
jl
mov
sub
call
adc
enter
adc
xchg
sbb
jbe
push
inc
pop
out
or
fadd
mov
or
push
fcoml
xchg
mov
pop
mov
hlt
daa
loope
pop
inc
fcoml
pusha
xor
jbe
nop
add
jb
xchg
ljmp
ljmp
jmp
or
mov
add
les
cmp
mov
decl
stos
addb
sbb
insb
add
jecxz
push
test
jl
sbb
push
mov
clc
or
fadd
or
fs
mov
inc
lret
push
shl
push
sahf
sub
rcl
lahf
adc
les
andb
or
mov
inc
into
rcl
mov
aad
inc
psubw
push
cmpl
test
adc
paddd
add
orl
add
je
pop
jg
cwtl
clc
and
ljmp
push
movsl
sahf
mov
lret
inc
cmp
mov
mov
lods
xchg
sub
mov
add
xor
cmpsl
ficoms
ror
add
and
ja
pop
movsl
add
scas
shll
xchg
sub
outsl
and
gs
xor
loopne
cld
loop
add
enter
mov
loope
mov
fwait
hlt
add
jo
hlt
aad
and
mov
ja
inc
ljmp
sbbb
xchg
inc
js
std
stos
dec
xchg
sub
add
data16
pop
xchg
mov
adc
out
decl
and
or
cmp
out
imul
mov
idiv
adc
add
rcr
inc
in
dec
mov
push
cmc
xlat
push
dec
scas
aam
mov
in
out
aas
arpl
pop
push
mov
lret
pusha
jb
dec
and
decl
xchg
jp
and
pop
lock
dec
inc
pop
and
xchg
lret
mov
and
stos
inc
jo
adc
inc
cltd
ja
fadds
out
lret
repz
add
sbb
and
dec
mov
xchg
fldl
mov
arpl
stos
push
ret
cmpb
ljmp
sub
nop
sbb
loopne
jbe
inc
sub
add
mov
ficoml
dec
push
and
or
add
js
add
hlt
xchg
fld
push
lods
outsb
mov
inc
stos
inc
lock
in
popf
subb
ffreep
jg
out
movsl
ljmp
std
cmp
mov
and
mov
test
stos
lods
xor
adc
and
xchg
cmc
jmp
xor
out
nop
sbb
js
lret
inc
mov
and
push
mov
call
in
stos
add
mov
lcall
les
xor
xor
pusha
ss
fisubrl
mov
or
add
test
jb
sub
in
adc
pop
cmp
adc
push
shrl
mov
xchg
cli
or
jmp
je
stos
push
test
divl
adc
jbe
mov
jl
push
aas
xchg
sub
push
push
pop
push
fistpll
sub
imul
xchg
loop
inc
cmp
mov
les
dec
loopne
or
sub
leave
sbb
scas
inc
xor
fwait
jo
shr
loope
add
sar
push
or
pavgw
lea
rcrl
movb
sbb
bound
fisttpll
outsl
and
dec
pushl
jg
mov
mov
xchg
sbb
adc
mov
push
mov
ss
sarl
pop
movsb
call
add
test
mov
lret
dec
jno
pushl
xorb
push
xor
pusha
mov
pop
cwtl
sbb
push
pop
lea
dec
inc
push
pop
js
mov
and
jle
cmc
or
mov
into
fs
mulb
jle
pop
push
loope
pushf
loop
cmp
leave
cli
add
or
xor
shll
sbb
jg
jle
cmp
repnz
xor
cld
push
clc
mov
add
cli
xchg
jl
rdmsr
addr16
fdivs
roll
xchg
hlt
aaa
ret
xchg
or
add
outsl
dec
xchg
jp
cmp
dec
imul
inc
ljmp
in
xchg
mov
dec
push
cmc
decl
out
cmp
test
inc
imul
or
add
jmp
xor
xchg
mov
pop
inc
mov
cmp
or
cli
lds
pop
jo
cmp
mov
jno
jmp
ljmp
loopne
jl
jne
and
lods
addb
ret
loop
shll
hlt
sub
mov
mov
add
and
in
lock
rcrl
mov
andl
shlb
fadd
cmc
push
ja
mov
push
fs
ds
sti
push
sub
and
push
push
addb
push
add
pop
fistpll
adc
outsb
mov
inc
adcl
repz
incl
es
mov
xor
inc
jle
mov
jle
pop
and
lcall
mov
je
sub
and
notb
and
cmp
mov
pop
jl
ss
push
cwtl
or
mov
jmp
sbb
outsb
sti
jmp
mov
lods
lret
xor
fcomip
or
mov
push
jno
xchg
dec
sub
shrb
popf
add
enter
or
incl
cmp
push
ss
mov
push
push
mov
jge
lcall
adc
scas
lock
add
cs
add
fistpll
inc
push
les
out
cli
jno
shrl
ljmp
dec
xor
incl
lds
daa
inc
cmc
jo
repz
outsb
ljmp
into
or
jle
add
adc
pop
fiadds
add
xor
sub
mov
sbb
cs
das
nop
cmpsl
sbb
push
cmpsb
psubusw
pop
or
add
jmp
imul
jmp
rol
add
mov
xor
jo
pusha
and
rdpmc
dec
fisttps
mov
adc
icebp
lock
add
jns
jmp
jge
addb
pop
out
fisubrs
pop
adc
xchg
cmp
nop
scas
xor
mov
stc
test
and
ret
mov
enter
mov
lret
mov
insb
mov
push
xchg
and
sbb
pop
or
cmp
pop
mov
mov
dec
push
or
je
loopne
xor
xchg
cmc
jmp
scas
cmpsb
call
push
arpl
mov
push
mov
or
lret
xchg
sub
notl
stos
inc
sbb
aas
inc
cli
xchg
push
cmp
add
cmpsb
pop
aam
test
mov
in
dec
ret
lret
cli
inc
adc
shl
add
and
sbb
mov
push
ljmp
add
mov
roll
lret
xorb
lea
in
stc
inc
pusha
pop
jg
mov
call
daa
cmp
push
push
or
pop
or
mov
sub
adc
mov
xor
stos
wbinvd
cwtl
incb
sub
pusha
push
add
aaa
call
sahf
cwtl
in
jo
mov
lds
ret
call
in
jnp
imul
call
gs
xchg
xchg
push
xor
add
adc
pusha
shl
or
mov
adc
ret
mov
scas
arpl
and
or
or
cmp
inc
cmp
jmp
add
or
cmp
je
mulb
and
int3
or
xchg
pop
and
jmp
inc
mov
push
add
mov
or
gs
dec
fbld
loope
into
inc
push
adc
jle
filds
mov
mov
mov
hlt
out
fstpt
daa
int3
pop
fwait
pop
inc
xor
mov
push
pop
jle
push
sbb
cld
andl
adc
das
sarb
sub
push
inc
push
jecxz
gs
mov
pop
add
jl
mov
jno
inc
sbb
push
sub
jge
icebp
add
gs
adc
push
mov
cwtl
xor
add
add
enter
insl
lods
add
add
sbb
mov
cmpsl
daa
lcall
and
loope
pop
xchg
push
inc
xchg
les
jp
adc
mov
test
stc
andb
outsb
cmp
es
jb
mov
xor
dec
dec
adc
and
push
fmuls
jmp
rorb
jo
or
sbb
enter
xor
pop
les
imul
mov
loope
xchg
rcll
hlt
dec
lods
cmc
in
popf
mov
test
scas
mov
push
xor
ret
push
pop
mov
xchg
jbe
dec
stos
dec
loop
jle
dec
adc
cli
lock
in
xchg
xchg
xor
xchg
rolb
mov
xchg
hlt
mov
aaa
jl
add
inc
cli
inc
lcall
call
fdivr
shlb
outsl
add
lret
sbb
movsb
inc
cmp
fcmovbe
xchg
xchg
clc
cmp
fists
inc
scas
and
bound
cld
jmp
clc
mov
jp
out
add
sub
adc
je
rcrl
adc
or
sbb
jo
sahf
mov
es
cld
pop
mov
jp
cmp
xchg
mov
cmpsl
pop
jge
push
repnz
adc
jge
mov
add
jl
sbb
outsb
adc
ljmp
xchg
call
cmp
ja
cmp
adc
repnz
jne
insb
je
add
and
ror
aas
sbb
mov
inc
add
fsubr
mov
icebp
mull
nop
jl
adc
mov
mov
ud2
push
add
push
outsl
fistps
add
xchg
pop
inc
push
notb
jl
mov
mov
pop
and
test
cltd
int
pop
rcrl
test
rorb
dec
jmp
push
pop
ss
add
test
in
adc
inc
shrl
or
icebp
or
ja
imul
cwtl
inc
pop
insb
add
sub
xchg
add
movsb
mov
push
pusha
inc
dec
and
hlt
cltd
or
test
xor
vpsadbw
cld
add
jp
push
xchg
add
repnz
in
mov
add
or
dec
mov
sbb
push
mov
add
orb
outsl
jg
and
or
in
dec
mov
sbb
cmp
movaps
dec
stos
sub
pop
xor
icebp
adc
lods
incl
jo
mov
fidivs
mov
inc
inc
popf
inc
mov
test
xchg
dec
clc
pop
or
cmp
imul
inc
fcompl
adc
push
push
pop
cmp
push
push
and
scas
cmpsb
sbb
inc
pop
sub
or
push
minps
in
lods
aaa
adc
js
jb
jmp
and
push
jns
hlt
shlb
mov
jle
jmp
push
jno
cwtl
stos
pushf
push
push
cmc
fs
pop
mov
outsl
out
sub
sbb
ljmp
jae
fisttps
add
lds
xor
xchg
ds
test
ret
popa
xor
dec
call
cmc
xchg
mov
mov
in
fstps
loope
sbb
fs
add
sbb
mov
pop
or
fadd
outsb
addl
push
cs
imulb
outsb
pop
in
inc
rcl
fisubl
movsb
jp
out
filds
nop
inc
jl
and
addr16
jle
in
inc
lods
aam
or
add
cwtl
notb
jmp
jae
pop
mov
test
lods
jne
fdivl
mov
das
cmp
mov
mov
push
xchg
mov
sbbl
adc
repnz
or
and
jg
les
push
sbb
mov
filds
adc
in
add
mov
jmp
push
ror
dec
xorl
popa
ljmp
push
xchg
roll
leave
loopne
mov
jle
adc
jo
xor
test
cmc
jp
cmp
push
push
aaa
pop
sub
mov
shll
dec
test
xlat
jp
mov
cs
movsl
push
test
lock
mov
loopne
and
sahf
ror
mov
sbb
lret
mov
cmp
mov
imul
or
orl
insb
testl
stc
push
cs
and
xlat
dec
mov
mov
fs
cmpb
dec
mov
nop
sbbl
inc
int3
mov
orl
jg
sub
aam
setle
jb
adc
xor
je
add
dec
mov
push
in
xor
pop
sub
repnz
push
ds
pop
sbbb
lods
test
mov
mov
add
das
mov
inc
mov
and
mov
add
je
mov
lods
outsl
pop
or
mov
adc
jp
xchg
add
adc
iret
sarb
dec
fdivl
ret
inc
pop
pop
add
sbb
lods
adc
pop
pop
outsl
jl
jmp
add
clc
inc
cmp
aas
push
std
nop
lods
shlb
sub
pop
cmp
mov
movsl
loopne
inc
scas
scas
hlt
xchg
jbe
call
aas
pop
and
roll
push
pop
dec
fsubrl
les
xor
cmp
adcl
sub
testl
loop
std
cli
rcrb
outsb
cmp
push
scas
sub
push
aaa
daa
lock
cmp
subb
fidivs
or
push
mov
cmp
test
pushf
stc
adc
push
adc
fdivrl
xlat
push
cmc
lock
outsb
xor
das
cs
inc
adcb
mov
sbb
cmp
xor
push
add
jmp
xor
mov
cmpsb
ljmp
pop
xchg
adc
pop
mov
mov
or
add
mov
xor
fwait
je
subl
inc
clc
push
in
dec
inc
and
xor
pusha
mov
lock
mov
mov
test
popa
je
hlt
xchg
adc
lcall
mov
loop
in
jmp
mov
jae
lds
inc
cmpb
repnz
pop
add
adc
add
gs
push
jae
push
pop
mov
mov
addb
dec
sarb
loopne
cld
adc
adc
lea
mov
insl
les
lcall
std
jp
lods
pop
mov
in
jne
pop
mov
pop
mov
mov
andb
and
jo
push
pushl
movsb
es
pop
sub
push
cli
shr
xor
repz
lea
aam
sub
xor
add
fimuls
mov
sub
cld
ljmp
cmc
mov
sahf
pop
out
add
bound
add
xor
xchg
and
push
cmp
stos
push
mov
jl
or
icebp
xchg
dec
ljmp
loopne
shrl
das
mov
fisttps
inc
pop
imul
xorb
inc
shrb
and
cld
lcall
add
add
mov
in
xchg
add
cli
cmp
dec
fistps
adc
inc
inc
xor
fwait
add
cmpsl
mov
inc
cltd
xor
and
loop
leave
das
imul
pop
mov
pop
jnp
repz
pop
mov
mov
lods
sbb
inc
xor
xor
popl
sbb
insb
mov
sbb
fildll
add
add
mov
jbe
adc
xor
scas
lock
xlat
xor
enter
dec
pusha
dec
js
mov
xchg
cmp
xchg
xchg
icebp
rol
xchg
add
cmpsl
sub
mov
mov
in
popf
dec
and
add
add
jne
add
outsb
add
pop
test
insb
cs
pop
sahf
push
imul
pop
inc
fcompl
and
jmp
inc
cmp
xchg
leave
jp
or
sub
shl
lods
aaa
add
adc
or
or
out
mov
js
push
ja
out
inc
es
out
out
sbbl
mov
add
pop
xor
ret
jo
and
stc
adc
lret
outsb
adc
jo
cmp
and
push
out
loopne
out
push
or
push
into
or
jmp
mov
add
imul
push
xchg
popa
and
push
mov
mov
rorb
sub
sub
or
fcomip
subb
aaa
and
hlt
mov
lods
adc
jle
sbb
mov
push
add
aad
sbb
mov
inc
xchg
imul
cmpl
arpl
jno
loop
sbb
xlat
push
xchg
xor
rolb
mov
aas
add
adc
and
mov
add
xchg
add
movsl
vunpckhpd
fiadds
test
nop
int
push
repz
data16
or
dec
xchg
ret
adc
dec
xchg
loope
daa
jmp
inc
sbb
jl
idivl
push
stos
inc
add
shrb
shlb
pusha
repz
add
insl
jle
mov
in
loopne
cmpsb
cmpsl
into
pop
out
jecxz
icebp
and
clc
xor
cmpsb
mov
cld
in
pop
mov
loop
in
mov
pop
inc
js
mov
js
iret
ret
jo
iret
push
cmp
cmpsl
outsl
loope
data16
js
sbb
sbbb
adc
sub
mov
inc
pop
jbe
add
sbb
fsubrp
inc
rcl
into
movsl
cmp
out
add
xchg
mov
xchg
or
sahf
xlat
mov
xchg
sub
jmp
push
cmp
jecxz
ss
pop
xor
lds
xor
cmpsl
mov
dec
xchg
fdivrs
pop
movsb
enter
in
xorl
and
mov
nop
ret
cmpsb
fstps
rcl
push
pop
enter
int
lea
xchg
loop
xchg
inc
cmpsl
mov
push
ds
paddw
mov
or
div
enter
rorb
aam
inc
sti
jno
xchg
mov
std
push
pop
mov
mov
aam
flds
outsl
aad
xor
insb
adcl
rolb
jno
or
push
shll
sbb
cmp
cltd
ret
call
inc
dec
in
enter
mov
mov
stos
data16
mov
dec
loope
mov
mov
mov
loopne
and
ret
mov
test
ret
jb
add
sysret
or
mov
cwtl
repz
add
mov
mov
cmpsl
cmp
mov
mov
dec
push
arpl
mov
adc
push
out
out
add
icebp
push
test
mov
add
imul
xlat
mov
ja
ja
or
and
xlat
mov
cmp
xor
inc
dec
adc
aaa
dec
cmpsb
xchg
jo
in
mov
sub
mov
xor
lret
jg
cmpsl
scas
sub
test
imul
addr16
adc
sub
sbbb
push
jno
push
loop
fstl
sbb
dec
gs
fsubr
test
pusha
cmp
mov
xchg
inc
ret
and
movsl
nop
movsl
add
rcl
cmp
lret
sbb
cld
in
ds
shlb
inc
or
stos
xchg
mov
sbb
pop
dec
mov
lea
pop
sar
adc
pop
adc
mov
in
and
jle
popa
aam
lahf
push
or
pop
fiaddl
mov
pop
mov
inc
cld
aaa
loope
add
pop
xor
or
add
lcall
mov
sbb
ljmp
jmp
sub
iret
inc
pushf
js
jp
cld
and
pop
les
or
and
arpl
ds
xor
lds
cmp
mov
xor
enter
cli
mov
pop
imul
add
xlat
mov
adc
call
sahf
cltd
scas
cmc
dec
cmp
scas
dec
stos
jle
mov
mov
mov
addr16
xchg
push
aas
xor
loopne
pusha
xor
mov
mov
push
add
inc
in
and
cmp
movsl
push
inc
xor
int
icebp
mov
loopne
dec
push
cmp
arpl
repnz
stc
leave
dec
call
jo
popa
cmp
mov
enter
mov
add
fdivrl
lock
push
xchg
lods
test
cmc
sbb
lods
je
les
sub
das
loop
fidivl
adc
xor
mov
dec
cmp
in
scas
int3
xor
pop
cmp
enter
mov
lahf
adc
add
js
outsl
mov
push
inc
mov
push
scas
inc
mov
adcl
scas
adc
fwait
ljmp
cld
dec
pop
or
jo
inc
pop
adc
add
mov
aam
mov
dec
sbb
clc
icebp
lds
movsl
aam
mov
mov
pop
lods
or
lcall
adc
sub
gs
dec
nop
cmp
xchg
sbb
xor
lret
cmp
divb
mov
jecxz
add
xor
aas
and
hlt
test
inc
inc
add
int3
rorb
push
bsr
add
cmpsl
std
mov
mov
mov
mov
jbe
adc
leave
repz
ret
mov
mov
pop
popa
stc
pop
jno
mov
inc
or
icebp
pop
push
push
mov
add
adc
adc
adc
pop
scas
push
in
inc
xor
add
das
and
adc
movsl
sub
cmpl
ja
mov
inc
arpl
push
jb
xchg
or
cmpsl
pop
stos
push
cmp
mov
into
out
push
inc
iret
adc
ret
sbb
and
xchg
fxch
scas
das
push
fiadds
dec
sub
popf
stos
xor
pop
aam
jl
add
ja
sub
jo
js
or
js
xchg
mov
xchg
aam
lret
dec
jne
jae
and
insl
movsb
jecxz
mov
sub
sbb
loop
push
and
les
mov
cmc
or
dec
inc
cmp
or
cs
rcll
inc
int3
jb
dec
aas
sbb
pop
adc
mov
setb
imul
aad
in
loopne
leave
xchg
les
mov
pop
pop
pop
inc
inc
mov
repz
xchg
fcomp
mov
jno
push
dec
and
push
jb
xor
popa
add
imul
popf
mov
and
stos
cmc
jne
xchg
daa
add
jp
pop
xchg
push
jecxz
or
int
sahf
or
test
xor
icebp
test
push
jne
loopne
xor
aas
pop
shrl
sub
movsl
es
lea
jp
jbe
imul
pop
pusha
sbb
in
cwtl
pop
mov
aas
and
pusha
dec
cmp
adcb
rol
pop
cmp
or
jp
sbb
dec
fisubs
int3
clc
das
push
or
mov
adc
pop
mov
pop
aaa
push
insb
shlb
idivb
pop
mov
pop
mov
idivl
je
out
or
dec
jmp
dec
and
outsl
pop
cli
iret
jne
push
ret
jno
mov
fbstp
cmc
loop
in
sbb
insb
outsb
adc
negb
push
movsb
and
fnstsw
mov
xchg
mov
lds
push
mov
ljmp
int3
ja
lods
dec
dec
push
ror
std
mov
fnstsw
add
rcrb
test
pop
dec
xor
stos
xchg
mov
fnsave
dec
scas
mov
std
xchg
and
lcall
mov
sbb
lods
mov
mov
rolb
mov
sti
imul
and
or
clc
or
mov
pop
lea
lret
cmp
outsl
je
mov
adc
test
lods
push
dec
jl
jecxz
test
lcall
hlt
shll
jmp
movsb
xor
jmp
iret
pop
sub
pop
dec
jne
add
daa
push
mov
sarb
jno
call
mov
mov
jnp
mov
imul
push
jbe
mov
and
mov
ret
not
pop
inc
add
dec
mov
dec
popf
cmpsl
add
shlb
sbb
and
test
push
mov
xor
insb
icebp
adc
andb
loop
stos
cmp
sarb
mov
cmpsl
xchg
data16
sub
and
icebp
sbb
pop
push
hlt
mov
hlt
roll
in
adc
cmp
mov
rcrl
pushf
push
jnp
add
ret
mov
sub
push
icebp
imul
xchg
adc
pop
dec
int3
or
push
xchg
popf
fcompl
jne
cmc
cmc
cli
or
stos
xchg
leave
dec
sub
push
dec
clc
pop
les
mov
xchg
jo
mov
push
cmpl
mov
cmp
mov
addl
insb
jp
lds
addl
jno
cmpsl
loop
jne
test
das
shrb
adc
jle
mov
mov
cld
ja
or
pop
and
testb
jecxz
inc
roll
pop
pop
fsubl
jecxz
loope
sbb
jle
pushfw
and
pop
bnd
aam
push
out
enter
and
mov
xchg
pushf
std
jl
mov
sbb
out
scas
insl
xchg
push
pop
cmp
mov
mov
shrb
sub
adc
shlb
fcmovnb
pop
out
sub
cmp
xor
push
pop
mov
mov
jge
fsubrl
and
pop
inc
add
or
shrl
pop
stos
arpl
or
add
stos
lds
shlb
stos
sbb
adc
or
or
xchg
inc
lods
in
or
stos
daa
mov
stos
sbb
or
sbb
andb
add
rcrl
mov
jbe
popf
sub
arpl
sahf
pop
cmpsl
sub
inc
sbb
sub
push
cmp
mov
and
or
lret
mov
mov
fisubrl
rcrb
mov
cs
neg
and
dec
xor
iret
dec
dec
mov
lods
lret
xchg
test
clc
cmp
add
insb
out
add
fcomip
add
sub
sub
fwait
les
pop
sbb
data16
xchg
outsb
das
mov
jmp
push
mov
mov
nopl
xor
pop
add
pop
adc
or
cld
aaa
xchg
outsl
sub
or
into
andl
dec
dec
ss
mov
inc
xor
add
mov
stos
sbb
xor
nop
mov
insl
pop
dec
aam
aam
out
jl
nop
filds
pop
jg
sahf
ja
adc
popa
and
or
push
sub
subl
mov
lods
and
xchg
mov
sub
aad
imul
pop
lods
jae
add
shlb
inc
fyl2xp1
in
imul
test
sbb
sub
dec
iret
jmp
inc
arpl
cmp
js
cmp
sub
fcmovnb
and
pop
popa
and
pop
mov
addr16
add
not
mov
push
mov
push
daa
inc
sbb
enter
cwtl
xor
inc
aad
xor
add
sub
jmp
jae
ds
and
cmp
adc
lock
xchg
cltd
sub
test
pop
daa
xor
or
xchg
imul
jp
movsl
bound
lahf
push
xlat
add
pop
push
mov
js
add
jg
pushf
sbb
jae
add
roll
popf
sbb
sub
mov
jnp
xlat
push
pop
mov
stos
and
orb
test
fiadds
cs
sbb
add
sub
sub
adc
mov
test
mov
and
jmp
cmp
dec
daa
aaa
pushf
sbb
push
add
icebp
pop
jl
jecxz
int
adc
in
ja
dec
gs
and
mov
adc
adc
dec
inc
jle
out
xor
js
je
mov
add
sbb
mov
or
inc
notb
cmpsl
sub
mov
mov
cli
sbb
pushf
stos
jno
mov
pop
out
jo
mov
adc
xchg
sbb
fwait
out
adc
inc
rorb
pop
pop
mov
ja
out
imul
ret
xchg
dec
ljmp
aad
dec
xor
dec
stos
es
ja
test
push
fwait
iret
cmp
cmp
push
jg
pushf
or
fiadds
enter
outsb
jmp
lods
inc
fwait
mov
daa
daa
jne
test
dec
ds
lods
jbe
add
and
inc
mov
or
xchg
imul
pop
iret
cmc
loopne
push
mov
stos
daa
dec
rcrb
les
cmp
into
add
xor
mov
popf
repz
mov
sbbl
sub
mov
rcll
pop
insb
xchg
sbb
push
test
negl
or
leave
mov
movsb
push
cld
fbstp
mov
mov
dec
xchg
jnp
cmp
lret
enter
arpl
outsb
shrb
scas
sbb
andl
lods
rorl
aam
stos
mov
sub
and
or
lret
clc
pop
mov
pop
aad
iret
xorl
push
cmp
mov
imul
ljmp
or
pop
pop
push
in
pushf
mov
stos
add
mov
addb
mov
pop
inc
mov
fldt
stos
dec
inc
repz
andl
lret
add
mov
insl
clc
xchg
adc
rorl
aaa
ret
stc
test
adc
jb
leave
lret
cwtl
inc
loope
jl
scas
in
xlat
mov
insl
cmp
xchg
jecxz
cmpsb
sbb
pop
mov
loop
inc
jg
shrl
xor
std
push
inc
sbb
test
xchg
xchg
push
mov
jno
lods
mov
mov
jae
pop
mov
add
adc
push
ficoml
icebp
push
aad
lret
fwait
jmp
pushf
xchg
ljmp
pop
sahf
int3
mov
movsl
dec
aaa
jo
repnz
pusha
shr
test
out
sub
or
or
popa
outsb
pusha
and
sti
es
call
in
add
les
and
in
fsts
pop
cmp
cmpsb
imul
add
fsubr
negl
jle
movsl
add
jecxz
and
jo
push
cmp
fiaddl
push
pop
mov
outsl
add
outsb
sbb
fildll
pusha
jnp
leave
bound
add
cwtl
pop
and
das
mov
aam
jnp
or
loope
sub
aam
daa
pop
mov
add
mov
push
dec
andl
out
out
push
loope
nop
xchg
jle
std
sub
dec
mov
adcb
sarb
dec
sub
xor
dec
insb
and
mov
ret
pusha
test
inc
stos
fs
sbb
push
clc
add
decl
mov
pop
das
sub
nop
dec
or
adc
fbld
pushf
mov
push
movsl
cmp
dec
hlt
loopne
adc
ret
cld
add
cwtl
mov
or
pop
push
stos
pop
ds
cmpsl
push
lock
adc
test
jae
mov
push
roll
or
aaa
repnz
add
xchg
sahf
fbstp
pushf
xor
mov
pop
test
sub
push
daa
mov
push
jo
inc
sub
adc
or
add
pop
or
sahf
cwtl
add
movsb
add
and
fmuls
xchg
lock
or
popa
push
xadd
sbb
fimull
or
hlt
ds
mov
insl
inc
icebp
and
mov
scas
addl
frstor
js
cmp
loopne
jb
sbb
cmp
xchg
push
dec
cmc
and
pop
add
scas
pop
mov
fsts
into
fcomip
aad
jp
mov
add
xor
cmc
pop
xchg
fcomps
jns
xor
cli
mov
pop
aas
inc
pop
out
pop
dec
pop
je
inc
inc
call
imul
fimull
mov
in
jnp
lods
rcl
jl
arpl
pop
out
out
dec
int
jne
jp
or
cmpsl
mov
test
or
cmp
cmc
iret
mov
cs
das
ja
stc
push
mov
ljmp
lock
cmc
cli
gs
push
xchg
sbb
shrd
cmp
inc
mov
orb
loopne
fimuls
outsb
fwait
jle
sub
int3
ds
jg
push
or
jmp
xchg
fnstenv
and
stc
or
xchg
imul
outsb
ja
aas
mov
outsb
mov
pop
dec
adc
pop
js
in
mov
loopne
cmpb
lret
icebp
inc
lret
cmp
push
or
mov
adc
pop
mov
fildl
cmp
popa
or
loop
lea
ljmp
sub
and
sar
mov
mov
fsubrs
stos
pop
cmp
xor
out
xchg
and
add
mov
and
out
sub
test
roll
out
push
pop
test
and
stc
sub
xchg
testb
iret
icebp
and
or
mov
int
mov
lea
mov
sahf
or
jmp
into
sub
sarl
sub
sbb
push
sub
lahf
xor
lods
inc
mov
inc
hlt
cltd
mov
xchg
ss
sbb
inc
mov
int3
mov
imul
add
inc
movsl
sbb
popf
mov
push
pop
test
ljmp
sbb
xchg
sbb
fdivr
mov
ja
mov
mov
sbb
jns
cmpsb
pop
lods
or
inc
movsl
sar
rolb
adc
jb
fistps
mov
pop
fists
mov
add
jecxz
repnz
bound
xor
push
xchg
in
add
bound
daa
gs
or
call
out
mov
lahf
jecxz
lahf
xchg
pop
adc
and
or
push
sub
loop
add
mov
mov
dec
mov
inc
pmaddwd
xor
jae
pop
mov
jge
sbb
cmpb
out
mov
jns
mov
ss
pushf
cmp
push
sub
inc
repz
and
das
push
inc
sub
sub
mov
jbe
xor
inc
ljmp
xor
jmp
lock
mov
xor
pop
das
sub
sub
scas
sbb
orb
cld
sub
add
retw
ja
addr16
jge
dec
aaa
outsl
ds
add
das
sbb
sbb
adc
flds
pop
jae
enter
xchg
bound
std
popa
flds
hlt
rclb
and
in
fsubr
mov
mov
cld
aaa
fistpll
ja
or
cmp
mov
out
arpl
mov
loopne
lahf
adc
jp
cmpsl
mov
shll
cmc
xorl
divl
add
jp
pop
stc
push
push
jmp
lcall
add
adcb
pop
aad
outsb
stos
sub
pop
pop
dec
negb
xchg
pusha
mov
xor
ss
jecxz
repz
xor
mov
sub
test
lahf
add
movsb
cld
fsts
pushl
sub
jo
in
pop
pop
in
fwait
call
sub
xlat
sub
mov
xor
sbb
pop
lods
in
pop
jecxz
xorl
push
mov
out
xchg
and
and
jmp
jmp
shrb
ljmp
mov
xor
loopne
jmp
adc
mov
stos
out
mov
add
addr16
rclb
adc
mov
and
inc
cwtl
add
cmp
cli
mov
add
mov
movsl
xor
dec
clc
stc
aam
sti
in
ds
fmulp
mov
cli
push
pop
mov
push
int
and
xchg
xor
and
imul
mov
and
fs
test
mov
lods
sbb
dec
lret
mov
and
and
mov
fidivrl
add
sbb
push
nop
jae
mov
push
cmp
lods
sub
xchg
test
mov
mov
cli
cmc
scas
shl
cli
std
or
cmpsl
dec
sbb
test
aas
and
ret
idivb
sti
mov
xor
jbe
or
and
mov
loope
pop
inc
test
addr16
jle
imul
or
inc
inc
cmp
pop
dec
or
adc
shr
in
lahf
adc
push
dec
fiadds
lods
mov
xchg
jnp
popf
imul
mov
inc
test
mov
cld
lret
push
lea
push
jmp
icebp
mov
and
or
ja
inc
xchg
push
or
mov
dec
loope
loopne
in
stc
lds
fs
inc
out
sub
mov
jb
cltd
aad
inc
out
and
js
mov
mov
leave
mov
dec
repz
popa
mov
loope
and
cmp
mov
dec
adc
pop
pop
cs
fldl
inc
mov
sbbl
push
sbb
inc
pop
bound
xchg
or
movsb
les
push
inc
test
dec
push
aam
cmp
mov
insb
sti
cmp
insl
movsl
and
sub
rolb
cmp
mov
bound
adc
or
xor
jl
mov
cwtl
and
and
dec
inc
inc
fstl
push
out
mov
xchg
pop
shll
mov
out
or
sti
daa
icebp
sbb
mov
aam
adc
mov
sarl
jbe
dec
ret
adc
inc
cld
xor
int3
andl
inc
popw
daa
enter
test
jp
test
sbb
fs
sbb
inc
push
mov
xchg
or
or
inc
lret
dec
incb
push
dec
fsts
sub
lds
mov
xchg
xchg
mov
jno
popa
loope
mul
rol
xor
adc
add
std
les
loope
sub
stos
pop
mov
pop
jae
lds
inc
shl
shrb
cmp
inc
fcomps
push
loopne
xlat
bound
and
int3
xor
pop
scas
negb
xchg
shlb
cmp
shl
mov
sbb
data16
xor
dec
fistps
outsb
les
xlat
rcl
pop
movsb
mov
mov
adc
sbb
push
outsl
sahf
std
not
cs
addl
add
cld
cmp
je
or
inc
mov
push
xor
popf
clc
pop
aaa
adc
bound
add
les
popf
push
adc
hlt
add
cwtl
or
jecxz
mov
pushf
fnsave
in
jno
mov
inc
iret
cmpsl
or
cmc
int
sarl
sub
mov
out
inc
xchg
xor
push
fcompl
movsl
fistps
jnp
push
and
add
jl
add
test
inc
or
arpl
lock
add
cmp
es
call
add
adc
jmp
jl
addr16
loope
sub
shll
add
int
rcr
cld
add
mov
jns
pop
int3
shlb
cmp
mov
lret
add
xchg
dec
jmp
pop
out
out
gs
test
js
lret
jno
fcoml
jae
and
data16
or
add
sub
movsl
pop
mov
dec
hlt
cmpb
stos
pusha
sbb
xor
sbb
mov
iret
in
cmp
pop
pop
jne
cmp
aaa
push
pop
add
jno
mov
and
lret
loopne
dec
stc
mov
sub
mov
push
dec
cld
sub
mov
ljmp
aad
or
push
or
adc
in
pop
lock
dec
out
mov
out
jbe
push
add
nop
daa
jbe
pop
stos
incb
test
mov
or
dec
or
jecxz
leave
loope
lods
mov
call
fisttps
push
push
and
xorb
xchg
outsb
jmp
aam
cli
scas
repz
nop
or
pop
push
sarl
imul
pop
cmc
cmpsw
sar
shlb
inc
mov
ret
jl
mov
call
lret
shrb
jle
fmuls
jns
enter
sbb
rol
add
pop
jg
cld
jns
pop
test
lea
outsl
cmp
mov
loop
cmp
adc
or
jp
rcll
fmuls
mov
sahf
out
jp
jo
into
inc
movsl
or
out
nop
jno
pop
loope
pushf
xor
and
jl
push
notb
xchg
imul
inc
fdivrl
jne
sbb
fimull
inc
jge
mov
xchg
xor
jge
lahf
pusha
add
and
loope
and
dec
xlat
fdivrs
ffree
push
mov
and
int
and
loope
rcll
and
sub
push
sti
movsb
incl
mov
in
test
jns
inc
pusha
and
push
ucomiss
inc
test
out
lods
xor
and
or
repz
sti
mov
lcall
fcoml
addl
xchg
cmpsl
pushf
inc
mov
add
or
rcll
loope
pop
test
incl
mov
jns
jmp
stc
mov
mov
cmp
fwait
mov
je
cld
pop
jg
sub
aas
dec
lods
mov
and
sub
inc
cwtl
loop
loop
inc
bnd
cli
out
or
adc
mov
or
sbb
adc
cli
dec
and
lods
hlt
sub
push
push
cli
or
dec
push
sar
and
scas
mov
dec
ret
pop
jecxz
sub
loop
sbb
sbb
pushf
add
add
imul
cwtl
stos
arpl
push
add
cmp
xchg
lret
popa
inc
push
es
add
push
pop
mov
repz
mov
mov
ret
mov
pushf
push
popa
and
mov
pop
jnp
push
int
insl
or
add
or
inc
stc
cmp
push
push
divb
xchg
popa
mov
adc
scas
mov
rorb
aaa
test
jecxz
outsl
sub
inc
xchg
addb
iret
out
mov
fs
in
out
inc
clc
fcoml
filds
or
nop
roll
sbb
mov
pop
clc
xlat
mov
leave
jbe
inc
fwait
lods
lahf
ret
pop
subb
sub
cli
push
jne
xchg
std
lret
lods
pop
testb
xor
stos
hlt
pop
jg
stc
cmpsl
mov
inc
into
mov
les
xor
lock
mov
inc
sbb
cld
sbb
mov
insb
adc
lea
add
push
jnp
cli
inc
clc
adc
cld
sbb
cmp
xlat
mov
mov
cld
pop
cmp
call
mov
bound
outsl
mov
lods
sub
clc
aam
sbb
sti
sbb
cmpl
fldl
or
lds
jno
inc
jp
sbb
jg
sbb
cwtl
mov
lods
xlat
add
in
mov
xchg
mov
cmpsb
mov
lahf
rclb
inc
mov
jae
scas
add
out
xor
dec
rorb
fdivp
push
pop
outsl
loopne
fmulp
adc
cli
lock
inc
push
jmp
cld
roll
into
adc
jmp
aaa
push
jnp
adc
jmp
fistl
push
mov
stc
or
mov
cld
shlb
int
aad
mov
loope
hlt
test
cmp
ljmp
call
lock
push
lods
lcall
pop
and
and
imul
adc
sub
test
rorb
pop
xchg
push
cmp
loopne
cli
fsubrl
movl
stos
imul
outsb
orl
mov
lds
sbb
ljmp
xchg
pop
pusha
and
lret
sbbb
outsl
sti
cmp
inc
inc
xor
add
nop
dec
jno
out
pop
jo
jb
aas
lock
arpl
push
cmc
fisubl
xchg
inc
fwait
pop
cs
sahf
xchg
daa
xchg
dec
pop
loopne
inc
cmp
fstl
mov
mov
sub
outsb
insb
cltd
or
aam
nop
decb
stos
push
inc
inc
lret
dec
inc
xchg
xchg
pop
popa
push
icebp
mov
dec
or
mov
lahf
imull
inc
add
bound
xchg
test
pop
lea
fistpl
shr
push
cmp
adc
aam
add
shr
mov
inc
cld
xchg
cld
aas
dec
and
stos
inc
out
pop
decl
xor
inc
cli
jg
inc
cmc
or
loop
pop
subb
jle
mov
stc
dec
mov
cmp
mov
mov
sbbb
inc
push
ret
jle
mov
pop
loope
rcll
imul
jbe
call
adc
sub
jb
out
pusha
lret
movsl
inc
dec
mov
mov
xchg
push
jbe
test
push
jg
mov
fdiv
js
dec
and
sbb
sbb
dec
mov
movsb
xor
mov
jecxz
xor
rcl
jl
call
jp
push
test
test
mov
clc
inc
cmp
dec
pop
add
mov
jns
das
lret
stc
scas
ja
xor
movsb
or
insl
daa
lcall
xchg
cmpb
ljmp
adc
xor
jge
cld
ret
clc
ss
stos
pusha
mov
movsb
cli
clc
dec
mov
xor
and
and
xor
add
add
jg
in
push
or
jmp
sbb
jmp
fstpl
leave
daa
cmp
add
in
aaa
push
xorl
in
aas
shlb
add
jae
adc
roll
push
cmpb
push
jnp
cmp
mov
out
adc
mov
int
lds
sbb
insl
and
push
outsb
jmp
pop
sub
fisttpl
lods
pushf
js
fisttpll
cld
inc
xchg
int3
repz
dec
cwtl
sbb
inc
dec
clc
mov
outsb
jg
lods
sub
sub
cli
jl
jge
imull
pop
loopne
call
mov
ja
jl
xor
shlb
push
arpl
bound
lock
pop
adc
jmp
sbb
mov
mov
clc
jnp
jmp
sbb
aas
mov
jge
shll
or
or
lret
rcrl
mov
outsb
loope
and
repz
pop
xor
mov
rolb
int3
push
mov
xchg
or
lahf
push
mov
cmovo
mov
and
add
inc
adc
inc
loope
cmc
and
push
xor
cmpsl
bound
xchg
ljmp
push
push
xchg
add
or
adc
add
inc
xlat
sbb
test
imull
bound
andb
popl
mov
sub
fwait
dec
pushf
mov
cld
cmpsl
pop
int3
mov
iret
dec
aam
or
loopne
std
sub
sbb
in
mov
xor
sbb
pop
insl
mov
pop
mov
sbb
xchg
test
fldcw
outsl
out
push
add
or
sbb
inc
loopne
jmp
test
add
dec
add
insb
enter
fnsave
jl
call
fwait
cmp
push
nop
dec
mov
sub
inc
mov
mov
or
mov
and
ror
cmp
xchg
xor
fistl
mov
and
xchg
bound
cmp
mov
push
add
adc
inc
test
ret
xor
fwait
test
loop
and
jl
mov
dec
xchg
jle
xlat
pop
or
inc
sub
or
jne
cwtl
add
cmc
adcl
insl
ret
decl
sbbl
xor
hlt
cld
or
dec
sub
lods
mov
xchg
add
iret
dec
out
and
fldenv
jle
dec
je
pop
cmc
xor
enter
mov
pop
cmp
jb
mov
call
pop
sub
dec
sti
inc
mov
cli
lret
pop
add
jle
fimuls
push
pop
inc
push
cmp
dec
hlt
mov
or
sbb
add
mov
aam
jle
push
ja
movsb
mov
inc
in
mov
push
in
adc
das
add
aaa
push
and
mov
push
jb
testb
jns
outsb
sbb
stc
mov
int3
movsl
cmp
xor
push
pop
jecxz
ljmp
pop
mov
mov
mov
push
cmp
clc
xchg
rol
in
add
je
or
pop
lock
mov
add
mov
sbbb
adc
cli
jg
and
mov
inc
push
sub
stos
sbb
xchg
inc
cmp
push
test
cld
lahf
je
xchg
js
mov
jg
jge
pop
sbb
mov
mov
out
inc
clc
push
fidivs
and
push
mov
jno
mov
and
sbb
cwtl
aad
dec
mov
cmp
loop
adc
xchg
lea
sub
add
iret
ljmp
pop
mov
or
xor
push
fsubs
xchg
stos
mov
push
stos
xchg
outsb
outsb
das
inc
in
sbb
jge
sahf
mov
adc
push
xchg
add
icebp
mov
mov
loopne
std
xchg
shll
leave
lret
xor
outsl
test
cmp
aad
mov
popf
inc
cltd
repnz
clc
sub
jg
mov
pushf
xchg
push
les
dec
int
pop
mov
mov
push
and
mov
inc
ljmp
scas
cmp
pop
mov
mov
jmp
pushf
in
sub
or
dec
jne
fnstenvs
int3
push
mov
loopne
fcmovu
dec
push
jge
cld
in
into
in
out
pop
jg
mov
das
push
stos
jecxz
movsb
or
mov
js
das
jge
or
pop
cmp
jbe
adc
inc
les
movsb
add
push
xchg
sbb
cmc
ds
dec
fisttpll
js
mov
cmp
mov
pop
fyl2x
in
or
int
xchg
movsb
out
mov
pop
and
mov
stc
add
pop
xchg
push
ds
add
in
dec
push
call
mov
mov
fcmovbe
subb
rcrb
js
jge
hlt
sahf
scas
sub
repnz
cmp
push
das
xchg
andb
push
add
push
nop
xchg
push
notb
cmpb
mov
mov
dec
lock
mov
cs
and
fstps
maxps
out
mov
mov
cmpb
adc
jbe
inc
jecxz
or
out
mov
fucom
popa
clc
cli
cmp
sbb
jge
js
insb
cmp
and
popf
clc
fcmovnb
push
dec
fs
rcrb
add
fldl
dec
add
incl
jmp
and
pop
add
or
je
push
cmp
out
pop
push
stos
insb
das
sbb
imul
xorb
ja
addr16
inc
and
js
jle
movsl
fwait
cmpsb
or
adc
repz
push
cmp
shrl
repz
adc
cmp
call
pop
in
and
pusha
xchg
xor
cmpsb
pusha
sbb
add
in
loopne
adc
in
pop
imul
and
pop
orb
xchg
cld
or
addb
xchg
js
test
adc
sarb
fnstcw
mov
xchg
test
dec
clc
mov
sbb
movsb
lcall
xor
pop
adcb
or
mov
xor
jge
es
jle
xor
js
pop
and
mov
outsl
pop
xchg
lock
lcall
lcall
loopne
inc
cld
mov
lds
jle
xchg
sbb
add
inc
pop
pop
or
addb
les
pop
mov
hlt
or
decl
add
push
shl
js
sub
das
ja
xadd
data16
mov
adc
mov
pop
adc
das
jo
cld
jb
loope
push
or
push
adc
sub
mov
push
ret
adc
xor
mov
clc
sbb
sub
dec
add
jmp
in
sub
cld
sbb
mov
xlat
mov
push
test
cmpsl
test
cmp
pusha
shl
shrl
mov
jp
lods
adc
lahf
popf
pop
adc
mov
mov
cmp
mov
add
pop
inc
and
push
pop
mov
xor
outsb
dec
into
or
add
push
push
imul
jg
cmpsb
rol
sbb
ret
xchg
push
fiadds
shlb
lcall
lock
loop
mov
adc
scas
ficompl
mov
in
sub
cli
sarb
into
mov
in
in
jne
adc
arpl
dec
hlt
cmpb
ret
arpl
add
or
mov
sub
xor
jl
sub
and
mov
outsb
call
and
xchg
adc
fsubrl
pop
stos
mov
jg
int
sbb
mov
cld
outsl
shrl
pop
jge
loop
pusha
ds
mov
xor
lock
cmc
inc
fmull
jmp
cmp
rcrb
fdiv
xor
cmp
dec
xor
outsl
sbb
sbb
xor
repz
xchg
andb
cmpl
xchg
pop
lods
mov
cmc
cmp
aas
sbb
lea
mov
dec
add
test
mov
jb
fs
jbe
add
loop
sbb
lea
add
fcompl
lahf
cld
loope
lock
inc
cmp
add
or
test
shrb
sub
push
in
add
mov
and
xor
xorl
outsb
adc
pop
xchg
loop
push
or
cli
outsl
insb
mov
jmp
push
mov
mov
ja
loope
pushf
lds
push
cmova
cmp
shlb
ljmp
mov
sub
pop
pusha
sbb
test
adc
inc
loop
testb
shlb
add
pusha
in
xor
mov
add
mov
xchg
mov
loopne
push
adc
or
xor
push
int
enter
sti
jno
mov
cltd
nop
les
jmp
mov
lret
or
pop
fs
sbb
daa
push
dec
cld
jo
push
dec
sti
mov
addb
lock
popf
ss
mov
lods
ss
test
pop
pop
mov
or
adc
cmp
les
addr16
add
pop
xchg
cltd
mov
pop
mov
lock
add
scas
es
cltd
daa
mov
icebp
mov
cli
das
loopne
hlt
adc
inc
inc
loop
pop
push
xchg
outsb
mov
shlb
push
push
push
add
cmp
sub
test
fidivrl
xchg
fwait
imul
cmp
inc
imul
imul
add
push
test
add
push
lock
jae
inc
insl
add
aas
xchg
mov
jp
mov
sar
xchg
cmc
mov
outsl
push
sarb
pop
dec
cmp
iret
incl
or
xor
mov
xchg
or
int3
mov
pop
lods
and
jo
dec
pop
xchg
or
dec
xor
call
mov
adc
aas
arpl
lods
fadds
loopne
add
or
push
outsb
rolb
roll
lods
or
cs
inc
loopnew
popa
test
fsubl
test
loopne
jb
lret
rolb
lahf
mov
hlt
pop
or
rcl
mov
or
in
xchg
push
js
and
cmp
mov
push
rorl
and
rcll
mov
daa
push
xor
xchg
sbb
lods
push
adc
out
mull
les
inc
jge
or
and
push
aas
js
and
or
test
les
cltd
adc
jge
ret
and
xor
adc
xchg
inc
mov
mov
mov
dec
inc
mov
js
adc
fbld
ss
fdiv
push
call
mov
loop
push
rcr
jo
fs
mov
mov
in
xchg
rcrb
pop
outsl
popa
cmpsb
xor
cmp
jns
lcall
add
sbb
mov
mov
stc
push
pushl
ror
mov
test
mov
loope
mov
push
sbb
mov
mov
cmp
mov
jecxz
mov
inc
push
jo
rcrb
inc
xor
jp
shl
mov
mov
push
movsb
jmp
mov
add
subb
mov
and
pop
pushf
jbe
cmp
pop
sbb
mov
faddl
cmpsl
ljmp
and
fisubrs
push
in
test
or
lock
cld
lahf
push
dec
dec
cmp
jnp
push
nop
pop
mov
mov
lds
mov
in
in
jnp
aaa
xchg
out
ja
inc
inc
push
sub
jmp
incl
mov
lock
loopne
fcoms
inc
jl
test
out
adc
sbb
daa
insb
lcall
movsl
cwtl
jo
fidivl
mov
cli
sub
cmp
cld
sub
mov
xor
fsubr
jne
insb
push
add
xchg
xor
imul
push
pusha
xchg
adc
clc
xchg
aad
or
jb
sti
push
out
sub
rcrl
rcll
xchg
addr16
mov
push
jg
test
pushf
lds
je
popf
and
cltd
std
push
push
mov
fisttpl
push
sahf
lahf
push
les
hlt
arpl
xor
insl
mov
push
out
jne
into
xchg
adc
scas
rcrb
sbbb
pop
ss
add
xor
das
jp
pushf
cmp
out
jmp
data16
scas
sbb
popl
push
iret
adc
pusha
mov
outsb
popa
in
dec
test
pop
mov
mov
cmpsb
lret
rorl
inc
in
leave
push
lods
jbe
mov
arpl
add
std
std
sub
add
popf
mov
into
aad
int
mov
mov
aas
pop
or
xchg
pop
aad
lods
pusha
sbb
adc
pop
mov
lock
mov
jb
mov
mov
shl
jg
rorb
dec
fcmovnu
xlat
xchg
std
cmp
inc
push
hlt
push
insl
sahf
jp
sti
and
push
fsubr
dec
mov
mov
sahf
ds
mov
dec
mov
arpl
subb
mov
cli
inc
cwtl
call
ljmp
xchg
push
cld
dec
ret
pop
ds
xor
pop
shl
das
in
or
mov
icebp
inc
enter
fadd
popa
sub
adc
push
scas
mov
xchg
cs
xchg
sbb
loopne
adc
sbb
cmp
mov
and
inc
cli
xchg
mov
sub
lock
nop
pop
lods
cld
roll
push
add
jle
rcrb
movsl
lock
shrl
add
pusha
icebp
or
fldt
popf
inc
pop
sbb
hlt
popf
xchg
sbb
xchg
fwait
and
xchg
mov
hlt
adc
lea
int
xor
dec
mov
add
roll
es
adc
pop
and
ss
adc
inc
sub
cmpsl
mov
ss
mov
test
fwait
jmp
sbbl
sub
or
ljmp
ja
pop
mov
aaa
xor
in
mov
push
cld
adc
lahf
jmp
mov
sarb
rcr
enter
pushf
mov
mov
rolb
sbb
mov
pop
mov
repnz
std
xlat
data16
push
fwait
mov
ljmp
loopne
cmpl
repz
aas
xchg
jo
ret
lcall
shlb
sbb
adc
out
push
outsl
stos
pop
cld
inc
dec
scas
push
fwait
xor
jge
sahf
loope
mov
mov
mov
add
fdivr
cmc
aas
aaa
idivl
mov
cmp
pop
mov
push
push
inc
mov
movsl
mov
and
jg
or
shll
jo
inc
stos
mov
xor
push
bound
xor
mov
pop
test
add
lcall
push
popa
inc
sub
pop
dec
adc
sbb
jb
add
hlt
cmpl
std
es
mov
dec
aad
cmp
or
or
lods
and
add
les
cld
pop
jg
aam
in
jmp
mov
clc
push
gs
pop
fs
insl
out
mov
in
mov
xor
and
testl
mov
mov
jmp
sbb
shl
xlat
push
jl
and
add
adc
popa
and
lret
test
mov
dec
dec
mov
pop
push
cltd
jmp
test
jbe
add
je
inc
push
popa
or
sbb
dec
cmp
xchg
push
inc
push
push
sbb
ret
inc
inc
lret
mov
cmpsb
xor
rdpmc
xchg
add
mov
or
add
xor
mov
dec
push
adc
ret
and
repnz
cmc
pop
sbb
daa
fisttpll
addr16
sbb
xor
inc
xchg
mov
and
movsl
aas
stos
mov
mov
xor
mov
pop
sarl
fdivr
icebp
jb
js
mov
mov
mov
loopnew
sbb
lahf
mov
out
mov
dec
bound
mov
mov
daa
or
adc
in
fsub
pop
in
fsubrs
stos
dec
or
mov
movsb
mov
daa
aas
add
in
pop
mov
mov
push
lea
sub
btc
les
into
xor
cs
xchg
xor
mov
push
and
xchg
add
sbb
mov
xor
push
outsb
loopne
subb
add
push
pop
dec
shll
ljmp
push
pop
jne
out
je
outsl
dec
jl
adc
sti
in
clc
stc
dec
enter
ret
mov
ret
adc
popa
add
push
aam
xchg
pushf
push
cmp
call
jnp
xchg
cmp
push
scas
lcall
xchg
xor
sub
fdivs
jmp
stos
fsubrl
mov
mov
into
ret
sahf
mov
fucom
jle
pop
mov
int
lods
push
mov
mov
pushf
sbb
inc
or
fstps
xor
push
jb
test
xlat
cs
sub
icebp
adc
mov
decl
pusha
ret
add
sub
fisttpll
pop
jecxz
jno
inc
mov
bound
inc
pop
popa
push
cmp
sub
sub
rorb
and
sbb
movb
gs
jns
push
stos
adc
xor
imul
jnp
inc
lret
cmp
mov
jp
push
loop
mov
mov
test
push
daa
test
push
sti
loop
add
rorb
repnz
fiaddl
sub
jle
or
add
add
sbb
lock
loop
inc
xchg
imul
mov
adc
jp
fcoml
sbb
shrb
outsb
inc
jo
lock
add
cmp
or
in
jmp
inc
push
mov
lea
xor
negl
pop
and
dec
cld
mov
push
dec
sub
js
mov
daa
push
jecxz
dec
mov
inc
lret
sub
rorb
mov
sbb
pop
mov
jge
aas
xchg
xchg
cmp
push
loope
fcomp
pop
aas
sbb
pop
fdivs
pop
and
xchg
cs
and
lahf
std
sahf
lock
out
in
lret
popa
cmp
xor
lock
push
ss
movsb
fstl
add
nop
xorb
inc
scas
dec
icebp
sbb
loopne
or
jns
sub
push
rcll
mov
fmulp
sti
or
pusha
loopne
scas
jmp
mov
sub
cmp
nop
cmp
stc
inc
inc
popf
dec
sbb
mov
push
in
mov
imul
mov
std
jg
out
fbstp
orl
gs
inc
test
sbbl
aaa
icebp
fs
mov
daa
add
sbb
mov
into
insb
add
dec
jmp
inc
scas
mov
inc
mov
arpl
push
inc
fs
inc
popa
scas
jge
loopne
mov
out
ficompl
ljmp
jle
loope
orb
pushf
add
fcomip
jo
push
in
mov
xchg
scas
adcl
sub
out
lea
mov
add
clc
mov
or
ljmp
add
enter
hlt
pop
inc
add
iret
test
pusha
lea
icebp
or
or
inc
ret
adc
dec
cmc
jne
call
cmp
scas
and
cmc
lds
popf
adc
add
adc
adc
lcall
rorb
push
inc
mov
scas
or
ror
push
je
aas
push
cmp
xchg
cmp
sbb
sti
jecxz
clc
jg
lcall
iret
push
push
ss
nop
fldt
fisttps
pusha
rcrl
icebp
mov
mov
pop
jecxz
mov
mov
jns
fcmovne
icebp
mov
clc
cli
push
into
hlt
adc
ja
sbb
movsl
add
loopne
push
ret
jae
popa
repnz
inc
and
fcmovnb
dec
mov
xchg
fadds
mov
jecxz
aas
cli
xchg
and
repz
fs
sahf
incb
jns
dec
inc
data16
loopne
push
mov
mov
mov
jae
into
mov
add
sbb
push
daa
mov
es
ret
pop
add
loop
jl
xchg
loop
outsl
pushf
js
js
xchg
and
pop
adc
sbb
hlt
dec
mov
js
xchg
and
pop
jge
sbb
pop
repnz
push
loop
and
call
in
cmp
inc
clc
repz
jecxz
jne
mov
test
je
sub
push
and
dec
or
test
pushf
push
xorl
pop
call
jl
push
xlat
xor
push
cmp
lock
and
mov
or
cmp
lods
rcrb
cmp
jle
icebp
or
stos
mov
das
ss
outsb
jbe
loope
je
out
sub
pop
or
pusha
adc
cmpxchg
mov
jmp
cli
arpl
addr16
iret
and
push
fsts
and
sbb
jb
pop
repnz
sahf
jo
sbb
ja
mov
sbb
dec
lods
mov
fld
xor
sub
std
fidivrl
sbb
xchg
incb
mov
and
ljmp
cs
sbb
test
and
cli
arpl
stos
bound
push
xor
in
in
fldcw
xchg
clc
outsl
inc
push
pusha
cmc
sbb
cmp
or
inc
data16
ret
fs
xor
mov
cmp
xor
mov
cld
in
push
mov
scas
or
aas
std
dec
and
lods
jmp
add
adc
push
push
rcrb
sbb
xchg
out
clc
repz
mov
adc
pop
mov
insb
rcl
lret
jl
or
dec
push
cmpsb
mov
inc
dec
je
dec
inc
cmp
pop
rcll
lcall
subb
and
idivl
cs
pop
dec
cli
mov
xchg
jp
inc
ret
add
xchg
je,pt
pop
add
xchg
add
aas
inc
fbld
sub
or
cmp
mov
out
jne
lock
jecxz
xchg
lock
xchg
outsl
lahf
imul
ds
push
add
xchg
push
and
mov
out
call
mov
sub
loop
jg
icebp
sub
inc
int
mov
xor
or
jg
filds
movsl
lods
inc
bound
mov
out
mov
pop
jno
mov
ret
pop
sub
or
adc
push
push
mov
mov
hlt
xchg
push
aam
cmp
call
pop
lahf
loop
pushf
rcr
sbb
sbb
add
iret
sbb
mov
jl
xor
fadds
mov
orl
and
push
ret
testb
mov
sbb
popa
dec
psubusb
add
add
pop
sahf
add
jle
xchg
xlat
sarb
and
shlb
cmpb
and
mov
cli
push
mov
ret
and
orb
lods
push
cvttps2pi
fimull
sub
leave
ret
fdiv
cli
jbe
movsb
repz
scas
lahf
mov
test
clc
sub
dec
fsub
sub
xchg
lock
ja
rolb
inc
mov
and
push
xchg
xlat
insl
lret
lea
jne
fwait
rorb
shll
cli
cs
roll
and
repnz
pop
loop
mov
ret
aaa
adc
sbb
jge
sbb
mov
inc
ds
movsl
xchg
inc
and
add
xchg
loop
sbb
adcl
aad
ljmp
out
mov
aas
pop
cmpsl
js
xor
add
cld
dec
jg
loopne
fdiv
lds
cmc
xor
or
inc
adc
push
or
mov
and
xchg
test
pop
jno,pt
push
pushf
aas
les
ret
sub
call
jbe
mov
jnp
xchg
sbb
lahf
cmp
cli
dec
sub
sbb
loope
mov
movsl
add
je
mov
lods
xor
sysenter
mov
jae
cs
insb
add
mov
hlt
fbstp
add
pop
sub
out
loopne
inc
or
lods
or
ret
test
cmc
addb
ss
dec
mov
fbld
mov
cmp
push
pusha
cmc
add
sub
jmp
js
mov
and
and
add
ss
stc
dec
add
push
call
adc
rclb
adc
enter
inc
and
cmpsl
adc
add
ret
xchg
leave
fcoml
inc
fistpll
mov
adc
sub
cmp
mov
mov
movsl
stc
mov
adc
and
enter
dec
jg
pop
jg
or
call
cmpsb
fimuls
inc
pusha
fisttpll
fs
cmp
cmp
cmp
adc
xchg
push
xor
jg
and
xchg
mov
add
scas
dec
rep
sbb
aas
cs
adc
into
mov
and
push
push
pop
push
cld
mov
dec
cmp
out
cmc
or
push
call
das
inc
or
leave
push
push
cmp
mov
pop
dec
push
iret
test
add
or
mov
filds
js
xchg
sbb
stos
bound
and
xor
mov
nop
push
xor
clc
popf
mov
pushl
les
mov
pop
adc
dec
jmp
dec
movsl
fmul
mov
clc
pop
push
sub
cmp
rorb
and
fildl
pop
mov
sub
adc
test
inc
adc
pop
mov
adc
xor
ja
pop
mov
dec
sub
pop
add
icebp
add
pushl
pop
jmp
fmul
push
xchg
inc
add
ljmp
insb
insl
cmp
int
sbb
scas
loop
dec
pop
push
cld
js,pn
gs
xlat
dec
xchg
fstp
pop
loop
shrl
clc
lretw
loopne
mov
adc
fidivs
jle
icebp
fadd
adc
testl
movsl
push
shlb
lea
mov
imul
pop
shl
or
lahf
jbe
mov
mov
add
cmpsl
idivb
sahf
ds
cmp
loopne
and
hlt
aas
or
cmpsl
cmpsl
push
icebp
add
nop
in
inc
adc
sbb
aaa
push
mov
insl
pushf
and
mov
cli
push
jl
js
xor
and
addr16
add
and
ds
imul
sti
loopne
fidivrs
xor
mov
mov
add
and
cli
jb
push
adc
sub
mov
cmp
xchg
or
push
enter
aas
clc
adc
jmp
loop
out
in
sub
insb
fistpll
cmc
mov
cmp
or
ds
cli
loope
into
insl
mov
push
std
adc
decl
out
fldenv
iret
mov
inc
mov
pop
or
dec
out
test
iret
nop
in
lcall
shr
mov
into
imul
or
sbb
sbb
std
push
dec
xchg
insl
dec
add
inc
lock
cmp
pop
scas
or
mov
sbb
mov
dec
int
xor
push
enter
stos
je
inc
mov
int3
idivl
loopne
sarb
dec
sbb
adc
test
call
rep
xor
mov
mov
jnp
mov
xchg
sbb
loope,pt
add
and
faddl
shll
cmpsl
repnz
jo
inc
das
pop
or
pop
xchg
pop
mov
xchg
stc
add
sub
fdivrp
aas
pop
imul
inc
aam
scas
pop
pop
add
and
clc
mov
add
sbb
pop
dec
jmp
imul
ja
fistl
adc
lods
push
aas
jecxz
loop
dec
repnz
je
rcrl
push
stos
fcomip
rcrl
jmp
jmp
mov
push
adcl
lods
sbb
aam
adc
dec
jp
push
stos
mov
jge
pop
pusha
jmp
mov
mov
push
in
and
cli
fdiv
into
rorb
fwait
xchg
mov
jns
sub
sub
jnp
jnp
ja
decl
pop
dec
push
sbb
scas
cmpsb
mov
xor
jle
and
mov
mov
clc
dec
pop
push
inc
adc
mov
rorb
iret
inc
mov
mov
mov
xor
aad
pop
cld
outsb
mov
xchg
mov
xchg
adc
inc
sub
test
cmp
cli
push
mov
iret
inc
lcall
int
add
out
popf
mov
mov
jnp
xchg
mov
test
add
push
sbb
push
cmpl
push
out
xchg
mov
loopne
mov
jge
mov
daa
cld
push
cld
inc
mov
loop
repz
pop
outsl
lock
test
in
imul
and
sub
push
or
cmp
repnz
mov
shrl
pop
mov
icebp
sub
ret
jo
sub
lcall
sbb
cmp
cmp
add
adc
lods
cld
sbb
sarb
sahf
aas
cmpl
lock
test
sub
loopne
jl
test
lea
imul
cld
dec
adc
int3
push
sbb
leave
sub
jle
cld
fstpt
es
or
xchg
cmpsb
andb
pop
mov
rcl
cmp
cmpsb
push
loopne
std
mov
cwtl
push
xchg
lahf
sub
dec
push
xlat
test
cmp
ds
addr16
jb
xor
stos
jns
or
orb
cli
loope
faddl
rclb
jbe
xchg
cs
adc
nop
sbb
adc
decl
fnstsw
in
pushf
test
outsl
sar
rclb
lcall
xor
xchg
jg
cs
add
stos
xchg
test
data16
std
add
lods
add
test
and
mov
mov
sar
xchg
cld
dec
outsb
mov
push
loopne
in
in
cwtl
ds
mov
mov
push
mov
push
add
xchg
and
pop
ret
mov
ljmp
and
or
ret
cmp
lcall
vsubpd
add
bswap
add
jmp
pop
sarb
dec
out
scas
ror
cmpl
arpl
sub
mov
arpl
js
pop
cli
sbb
cmp
es
xchg
adc
and
xor
or
push
dec
loop
lock
call
fmul
outsl
add
dec
sbb
mov
je
inc
push
push
lcall
mov
and
loopne
test
dec
data16
mov
test
ljmp
adc
and
fcmovb
data16
or
ljmp
push
jno
addb
sbb
jae
adc
adcl
add
mov
pop
stc
adc
out
and
mov
push
movsb
lea
sub
fildl
inc
adc
ret
jp
les
and
cmp
mov
adc
cmp
filds
rol
sbb
sub
das
daa
or
decl
mov
gs
clc
pop
loopne
mov
mov
rcll
mov
adc
dec
mov
out
aad
sar
sahf
out
add
lock
ret
adc
cs
mov
jbe
shlb
push
lds
js
xor
or
stc
nop
xchg
mov
lods
test
add
sbb
sub
mov
pop
jmp
adc
sub
cmpl
test
popa
jne
test
or
pop
test
mov
jl
pusha
daa
loopne
jae
inc
leave
add
or
loop
mov
mov
clc
sbb
stc
rorb
loop
jo
lea
adcl
push
je
loope
xlat
push
mov
cmp
mov
pop
or
cmpsl
in
movsl
lock
mov
lret
pop
incl
sbb
add
sbb
imul
out
ds
jecxz
mov
mov
add
fwait
add
fistl
push
mov
ret
test
mov
lds
sub
pop
mov
add
mov
cmp
hlt
popf
inc
pop
clc
psubd
mov
fcmovne
and
in
pop
scas
jbe
pop
stc
in
filds
inc
xchg
je
aad
lock
lea
mov
outsb
dec
xchg
lea
jmp
mov
push
lds
mov
pop
loope
fiaddl
sub
outsl
sbb
nop
lcall
inc
adc
roll
mov
loopne
mov
sub
adc
inc
test
ficoms
dec
and
loop
icebp
adc
sbb
mov
data16
push
aaa
ss
jmp
adcl
incl
cmovnp
scas
xchg
sarb
fnstenv
pop
pop
or
aad
psubb
ljmp
dec
and
ljmp
shl
lods
mov
out
add
jle
xchg
cmp
sahf
arpl
ljmp
ljmp
jmp
and
in
xlat
adcl
xchg
adc
sbb
inc
and
cmp
mov
aam
outsl
arpl
push
fstp
rclb
lret
popa
lods
adc
cmpsl
scas
push
mov
aas
jg
pusha
cmpsl
push
inc
push
popf
divb
add
test
jno
mov
aas
inc
es
push
adc
add
stos
cld
mov
iret
add
out
ss
fnstenv
scas
mov
inc
add
xchg
xor
cmc
subl
popa
adc
dec
jl
pop
jg
mov
and
pusha
icebp
shll
int
pusha
xchg
xchg
mov
popf
jb
cmpsl
inc
mov
push
pop
insl
repz
stos
sub
mov
out
pop
sub
jg
je
pop
js
xor
mov
push
mov
cmp
aam
popf
int3
fstpt
mov
push
lret
dec
mov
icebp
xchg
rorb
cmp
jno
sub
and
adc
sub
xchg
leave
loopne
adc
movsb
mov
rorb
or
aad
movsl
stos
inc
dec
add
jbe
or
imul
aad
lock
and
dec
inc
xchg
sub
or
mov
cmp
mov
sub
xor
jmp
mov
test
mov
cli
testl
sahf
add
loopne
dec
mov
scas
daa
jl
sbb
ljmp
pop
int
fwait
add
and
andb
test
pop
push
and
out
shld
add
adc
mov
cmc
pcmpeqb
fidivl
xchg
mov
call
xor
pop
mov
push
lock
mov
push
prefetch
or
jno
inc
push
jb
ret
xchg
repz
aas
pop
lcall
lret
xchg
dec
test
aam
in
inc
sbb
xchg
push
inc
mov
inc
jo
clc
push
prefetcht1
and
cmpb
fimuls
cmp
pushf
pop
jmp
push
ja
sub
daa
or
jne,pt
iret
call
cmp
rclb
jbe
jmp
xchg
sahf
sti
mov
das
clc
iret
filds
int
das
insb
fldl
push
in
shrb
xchg
clc
in
test
inc
add
mov
ret
xchg
ret
in
testb
mov
ds
rorb
arpl
jae
mov
jae
pop
loop
loop
xchg
mov
dec
insb
int
xlat
idivl
mov
mov
cld
add
jle
pusha
fcoml
jb
mov
ds
pusha
mov
fidivs
jg
mov
cmp
mov
outsb
shrb
icebp
out
inc
sbb
int
cmp
add
push
mov
insl
fcoms
cmp
jecxz
jo
iret
es
pusha
loope
fisubl
nop
push
push
scas
push
xchg
pop
aaa
out
stc
jae
jnp
xchg
loop
push
pop
sub
loop
inc
mov
aam
mov
xchg
dec
cmp
rclb
call
push
cmp
sbb
cs
jle
xor
dec
inc
mov
and
fisubrs
clc
jge
adc
mov
pusha
jno
pop
pop
out
lock
lahf
jmp
adcb
dec
clc
xchg
cmc
jo
cmp
push
dec
jae
xchg
leave
and
mov
lock
add
mov
mov
add
dec
fwait
dec
iret
add
mov
sbb
mov
push
sbb
out
xor
mov
push
fs
xchg
sbb
mov
shrb
int
aas
jp
fistpll
es
mov
mov
cmp
addl
jo
out
add
xchg
pop
inc
fs
into
call
loopne
mov
pop
adc
mov
cmc
pop
rolb
push
xchg
cmp
push
add
mov
imul
cmp
fwait
mov
jno
mov
int
les
ds
or
les
daa
scas
repnz
out
out
xorl
fadd
push
xchg
into
out
daa
incb
mov
ds
out
sub
or
lock
jge
cmp
and
je
add
push
sahf
cmc
ja
jmp
lahf
sbbl
sbb
mov
push
sar
and
lea
std
pop
adc
and
xchg
dec
loop
push
shlb
dec
lcall
sbb
add
repz
outsl
ficompl
push
push
jmp
lahf
icebp
pop
scas
mov
or
aas
hlt
lods
xchg
add
inc
rep
in
inc
pop
adc
xor
push
jns
jnp
rorl
or
test
fists
xor
xor
sbb
or
push
add
xor
lods
push
popf
lahf
push
out
lock
das
dec
xchg
jle
xor
in
sub
inc
mov
and
fadd
push
pop
aam
js
lret
mov
dec
xor
addr16
jo
push
sbb
bound
mov
push
mov
push
js
pop
inc
outsb
or
fwait
sub
adc
mov
lsl
and
das
sbb
inc
mov
stos
pop
lret
add
ds
pop
pop
push
cmpb
jge
bound
push
xchg
cmp
inc
inc
hlt
jae
das
inc
pop
movq
mov
addb
mov
outsl
bound
xor
xchg
lods
pop
cmp
and
pop
pusha
aad
leave
lods
dec
push
insl
lahf
addr16
mov
sbb
jne
ss
ljmp
test
dec
rcrb
add
sub
fiadds
lock
inc
mov
call
add
outsb
add
add
mov
mov
loop
or
jmp
out
mov
add
cmp
aas
mov
mov
mov
and
inc
and
mov
jecxz
pusha
loopne
push
or
imul
ficoms
mov
add
dec
sbb
lds
scas
sub
sub
push
adc
dec
cmp
and
icebp
jecxz
repnz
or
jno
stos
call
cmc
xchg
aaa
jo
arpl
push
sti
and
stos
cmp
jo
mov
or
jnp
jg
test
sbb
jno
lret
out
std
or
mov
ljmp
and
pop
cmp
dec
cmp
mov
and
sbb
repz
or
mov
mov
lahf
sub
clc
xor
rorb
sbb
btr
mov
shll
adcl
mov
fiaddl
call
add
add
xchg
mov
imul
dec
ljmp
leave
sti
out
jno
fildl
out
sub
incb
push
gs
and
fsubl
pop
jmp
push
stos
in
push
xor
and
andl
fs
es
sbb
mov
sbb
pop
repnz
aam
mov
dec
add
mov
lods
xchg
mov
imul
add
das
popf
jmp
or
xor
push
hlt
jle
lock
out
vunpcklps
das
arpl
insb
and
or
test
add
jbe
clc
out
and
and
push
inc
pusha
pop
mov
push
call
adc
or
mov
add
fadds
out
sbb
sbb
rorb
in
dec
jmp
jp
sahf
movntq
clc
ljmp
hlt
stc
mov
adc
loope
not
cltd
pop
imul
outsb
push
jmp
popa
ret
cmp
add
sahf
or
les
add
inc
sbb
pushf
stc
mov
lods
shlb
loop
pushf
add
lahf
add
inc
mov
cmp
adc
les
inc
cmp
inc
dec
add
mov
shrb
cmp
or
iret
div
adc
sbb
xchg
sub
jmp
push
jecxz
cwtl
mov
sti
or
pop
push
bound
mov
bound
xor
jge
lcall
ficompl
adc
in
flds
dec
jae
loopne
and
inc
pushf
jp
mov
scas
test
and
cmp
push
fnstcw
dec
pop
mov
push
movsl
pushf
cmp
mov
or
xor
mov
pop
std
jle
inc
lcall
push
fcoms
mov
cmp
test
mov
mov
loop
mov
cmpsl
cmp
std
out
jmp
loop
nop
imul
xor
inc
lds
mov
jg
cmp
inc
inc
dec
jmp
cwtl
jbe
mov
lods
jp
ja
enter
aas
cmp
in
cmpsb
jbe
rol
mov
fwait
or
faddl
dec
pop
or
or
mov
or
pop
shlb
andb
leave
sbb
mov
pushf
roll
icebp
xchg
insl
dec
mov
dec
outsb
push
cli
mov
inc
out
jb
cmp
cli
pushf
insb
xchg
jb
jnp
mov
mov
mov
add
data16
add
push
xor
adc
xor
ret
pop
stos
notl
xchg
insl
mov
pushf
neg
push
subb
inc
xchg
sahf
bound
scas
inc
jno
incl
inc
sub
bt
outsb
add
add
das
gs
mov
sbb
mov
gs
mov
fmull
dec
pop
sbb
ficomps
cmp
xlat
negb
lret
popa
jno
loopne
ret
jp
ljmp
sub
mov
nop
movsl
repnz
and
ficompl
inc
push
adc
or
out
jno
add
dec
jl
jae
addb
and
shl
lret
xor
and
push
xchg
push
and
aad
mov
hlt
pop
push
push
nop
or
pop
popa
add
jne
lahf
pop
xor
pop
ret
hlt
dec
lods
arpl
or
fsubrl
pop
pop
xor
mov
jle
pop
xchg
cli
dec
mov
shlb
cwtl
push
loope
test
loope
test
or
pop
repnz
add
push
pop
lock
push
test
je
sbb
inc
dec
scas
inc
jp
push
mov
in
and
aad
movsb
neg
pop
sbb
mov
sub
pop
pusha
jnp
or
sub
scas
test
and
dec
fnstcw
or
ljmp
out
inc
rolb
add
loopne
mov
cmp
in
lock
int
cld
lea
outsb
je
test
pushl
scas
mov
xchg
test
lahf
test
mov
lret
int
pop
and
leave
aas
test
inc
stc
rcrl
out
add
cli
add
pop
les
rcll
jmp
add
push
jg
xchg
mov
mov
rcr
aas
addl
cmp
mov
lods
inc
push
je
mov
lret
pop
insb
jmp
jns
pop
roll
add
lds
test
sub
icebp
or
mov
push
inc
ret
popf
dec
je
sbb
xchg
arpl
xchg
push
lock
jp
stos
mov
pmulhuw
adc
movsb
in
loop
insl
rclb
int3
jl
jae
leave
sub
and
sbb
mov
ljmp
enter
pop
mov
ja
test
addr16
jge
jle
xchg
fs
stos
imul
mov
mov
xchg
aam
cld
mov
ret
push
pop
xchg
adc
fsubrs
mov
add
cld
test
sub
inc
jns
pop
sub
adc
stos
or
test
adc
scas
mov
shll
sarb
xor
adc
mov
sarb
cmp
arpl
stos
xchg
bound
lods
stos
jo
cwtl
or
pop
push
decb
dec
cltd
inc
cmp
stos
xchg
scas
push
cmp
aam
imul
mov
jp
push
repz
aad
ljmp
stos
es
icebp
mov
div
das
jo
inc
jo
mov
push
or
add
adc
mov
mov
jae
andps
sbb
sub
or
das
repz
rolb
in
icebp
cmp
mov
out
pop
cmp
dec
jo
sub
cmp
or
push
imul
sbb
mov
test
shrb
push
push
push
fnstcw
adc
lds
inc
add
and
push
subl
mov
sub
sub
outsb
xor
adc
pop
mov
jbe
stos
and
decl
dec
cmp
cmp
push
mov
sahf
push
dec
fists
xchg
dec
addb
or
mov
xor
sbb
mov
mov
cli
mov
subl
mov
add
mov
push
inc
aam
pop
rolb
cwtl
jge
push
dec
stos
inc
and
shl
pop
ror
push
mov
adc
negb
pop
jge
aam
sub
idiv
or
pop
adc
rorl
ss
std
stos
xchg
nop
add
js
inc
xchg
test
sbb
ss
jo
sbb
push
pop
and
bound
int3
push
mov
jns
dec
push
push
test
test
xlat
orb
and
pop
loopne
push
cld
bound
repz
sbb
loopne
add
jo
cmc
mov
cld
xchg
rcll
add
ret
arpl
or
add
and
dec
dec
jb
push
cmp
add
inc
jns
test
mov
es
dec
pop
sub
outsl
mov
add
fildl
into
pop
and
add
adc
sti
mov
jno
pusha
std
add
rolb
lock
cli
je
icebp
fdivrs
inc
pop
add
outsl
fwait
sarb
out
pop
pop
cld
push
sbb
js
xchg
leave
xor
aad
ja
test
pushf
bound
fdivrs
sub
icebp
es
sub
cmpsl
icebp
daa
and
adc
jns
ljmp
fld1
repz
lods
adcl
xor
dec
paddb
mov
sahf
xchg
mov
decl
in
cmpsb
jle
aas
rorb
dec
sahf
popf
pop
icebp
dec
push
xor
cmpb
loopne
inc
add
sub
out
sbbl
jp
ds
inc
in
or
add
incl
into
in
andb
aad
aas
nop
fldcw
xor
and
xor
xchg
cmpsb
add
pop
jo
lret
dec
stc
xor
roll
xchg
loopne
test
popl
push
jo
add
jl
aad
pop
xchg
pop
mov
js
xchg
mov
jmp
mov
mov
mov
scas
leave
cmp
mov
sbb
xor
filds
xchg
into
adc
and
xchg
push
mov
pop
jmp
in
fisttpll
test
popa
dec
mov
mov
mov
mov
repz
test
das
and
ja
fnstsw
loopne
clc
sub
push
jp
fisubl
shrb
enter
pop
mov
test
mov
jp
je
inc
fstpt
dec
cli
hlt
daa
pop
data16
xor
shll
les
loopne
es
pop
and
ja
out
daa
pop
dec
xchg
add
loope
sbbl
mov
loope
cmp
shll
mull
rcrl
sbb
ljmpw
mov
hlt
dec
mov
sub
movsb
dec
pop
je
push
in
jae
call
jmp
insb
int
lahf
push
movl
aad
jb
lds
mov
mov
les
sub
mov
cmpsb
cmp
outsb
pop
mov
out
jne
test
int3
mov
sahf
xchg
and
mov
pop
popf
inc
push
sbb
mov
add
inc
xor
jae
mov
adcb
aaa
inc
test
lcall
imul
aaa
cmp
mov
or
mov
push
out
mov
in
sbb
xchg
les
sub
aam
pcmpgtd
in
lcall
adc
push
cli
or
repz
lock
loope
jbe
cmc
mov
push
jo
sarl
mov
rorb
aaa
sbb
int
rorl
sarl
mov
mov
aas
test
and
add
push
sbb
les
scas
mov
andb
hlt
xor
inc
jnp
or
rcrb
push
push
fildll
xlat
and
and
mov
inc
xor
dec
dec
xor
rcrl
mov
xchg
mov
pushf
push
shl
cltd
test
cmc
sub
add
mov
pop
xor
in
ss
or
loop
js
ds
pop
cmc
clc
add
call
movsl
cmpl
fstpt
fs
std
xor
rep
pop
mov
ss
and
outsb
repz
push
or
sarb
fiaddl
mov
mov
and
pop
add
bound
or
pop
js
pop
insl
movsl
fnsave
inc
sbbb
pshufw
mov
mov
lods
ljmp
loopne
xlat
clc
mov
push
fs
inc
js
sarb
xchg
dec
daa
jo
incl
test
popa
mov
cs
and
cs
ds
sahf
lcall
hlt
adc
adc
je
pop
lods
hlt
and
scas
in
xor
cmp
sahf
mov
insb
and
dec
xchg
sahf
sti
mov
mov
jecxz
or
mov
push
lods
adc
arpl
inc
jmp
push
cmpl
jg
into
add
subl
rol
adc
cmpsl
cmp
mov
mov
xchg
in
je
adc
jle,pt
repnz
push
mov
or
inc
scas
jo
jno
dec
sbb
pop
test
jbe
xchg
pop
add
nop
inc
clc
adc
stos
push
adc
mov
test
push
jbe
insb
movsl
sarb
pop
cmpsb
lea
pop
adc
jp
jmp
insb
lock
fadds
jmp
and
xor
les
mov
nop
adc
xor
fwait
cmp
fldt
xstore-rng
cmpsl
andl
mov
sbb
jmp
xor
dec
scas
addb
in
enter
push
mov
sbb
xchg
mov
xchg
mov
stc
sbb
dec
xchg
pusha
cmc
in
test
mov
push
lods
fs
mov
cmpsb
iret
clc
add
cwtl
es
push
inc
ja
mov
inc
sarb
sahf
cwtl
add
push
adc
mov
loopne
mov
filds
addr16
sahf
clc
and
push
xor
test
call
les
mov
xchg
cmp
ja
in
add
or
jb
pop
add
outsb
outsl
jl
outsb
pop
xchg
add
mov
xchg
jp
ja
push
in
das
ja
inc
insb
mov
pushf
and
mov
jmp
flds
sub
mov
lret
xchg
lods
add
or
pop
push
clc
int3
mov
lock
and
outsl
imulb
sbb
ljmp
adc
push
push
jl
cmp
dec
inc
arpl
jno
jae
cmp
int
scas
enter
mov
adc
popa
rorb
adc
mov
pushf
mov
push
add
jl
popf
out
add
sbb
cmp
lods
push
xchg
xchg
pop
jge
loope
dec
push
clc
inc
out
sbb
add
fisubrl
jmp
test
sub
xchg
icebp
xchg
sarb
or
sub
jne
xorl
mov
cs
rorb
cs
out
lock
inc
sbb
pop
xor
pop
pop
mov
fdivl
repnz
inc
mov
lods
les
cli
xchg
aam
fld
xchg
icebp
sub
fwait
into
or
arpl
movl
sub
or
mov
xchg
mov
mov
mov
sub
ljmp
or
and
cltd
cs
jbe
and
repz
clc
mov
mov
xor
pop
js
aad
inc
inc
inc
ret
fmull
mov
cmp
xor
xlat
sbb
je
testl
fs
inc
push
daa
rcll
imul
test
mov
cmp
test
cld
ss
std
rcr
pop
sar
cmp
add
mov
adc
pop
sub
pop
sbb
sub
lods
and
shlb
loope
xor
inc
push
addl
add
ds
rolb
or
stos
rcrb
push
lock
dec
es
jecxz
loopne
adc
mov
or
sbb
pop
addr16
add
aas
jmp
shll
out
lret
test
mov
add
and
and
ficoms
mov
cld
lods
aas
loop
mov
or
adc
clc
jmp
mov
lock
jp
test
add
xchg
jle
insb
xor
lock
in
sti
jb
nop
pusha
addb
and
test
mov
adc
mov
pop
xchg
shlb
push
pop
pop
dec
aas
mov
sub
shll
sbb
cmc
inc
xchg
pop
fsubs
fsubl
test
sahf
xchg
clc
fwait
cmp
cmp
mov
jmp
and
add
stos
arpl
inc
mov
mov
mov
xchg
mov
arpl
mov
stos
jbe
xor
popf
sub
push
lock
pop
scas
cs
inc
ss
hlt
xchg
jmp
test
and
inc
call
std
push
push
ret
jmp
rolb
cmp
push
push
sbb
or
sub
push
in
clc
pop
inc
imulb
pop
xchg
inc
pusha
mov
stc
call
pop
popf
aaa
jnp
push
loopne
pop
adc
push
sub
lods
dec
or
adc
mov
push
rorb
mov
push
rorl
adc
jnp
je
add
dec
inc
popa
cwtl
cmp
sub
inc
mov
mov
mov
xor
add
imul
mov
repnz
dec
jmp
sub
call
jl
sbb
add
xchg
fbld
sbb
dec
ljmp
pop
add
and
test
and
int3
and
sub
fcoms
mov
and
nop
clc
sbb
push
movsb
icebp
add
cwtl
jno
rcrl
loop
dec
ljmp
insl
es
add
and
jnp
cwtl
cmc
dec
movsb
jmp
inc
sbb
std
push
test
mov
or
cmp
aas
arpl
sahf
sub
sahf
arpl
xchg
push
push
in
outsb
add
test
clc
popa
cwtl
jge
mov
out
cmpsb
or
push
arpl
adc
pop
cmp
add
ss
ror
or
mov
in
jbe
fcmovnu
mov
cli
cmpsb
xor
movsl
or
jb
movsl
je
pop
das
xchg
into
push
mov
or
fcmovnb
push
popa
pop
and
adc
sahf
sbb
add
push
add
int3
insb
push
pushf
icebp
mov
lret
std
push
mov
mov
aaa
out
mov
cmp
cmc
ljmp
adc
sub
cs
xchg
mov
sub
je
mov
jl
push
test
mov
dec
jecxz
cmp
mov
pop
or
test
movsb
insb
pop
aaa
aaa
mov
addb
jb
pushf
inc
xchg
adc
cld
cmp
dec
roll
movsb
les
push
out
lret
mov
inc
sti
pop
or
push
sbb
xor
dec
add
lret
cmpsb
aaa
push
inc
mov
insl
std
lea
popl
jmp
xor
clc
std
dec
loope
cwtl
or
aas
mov
xor
test
scas
mov
sahf
sbb
dec
loope
cwtl
add
out
lret
mov
imul
jae
jecxz
jb
loopne
outsl
sbb
popa
js
push
push
fsubrs
xor
clc
lock
test
dec
loopne
mov
ss
pop
jo
les
ficoml
mov
addb
pop
adc
popf
aad
mov
cwtl
sub
test
aam
ds
add
and
int3
out
stos
push
inc
inc
xor
and
lcall
jge
adc
jno
jmp
cmp
sar
test
adc
sub
and
clc
cmp
leave
jge
mov
out
test
jmp
jno
shrb
mov
loop
mov
jmp
imul
or
lea
jge
les
xlat
sub
mov
jo
mov
xlat
inc
lret
and
dec
mov
mov
adc
rcr
sub
arpl
push
imul
and
mov
push
int
stos
jbe
pop
mov
jecxz
add
gs
add
lock
mov
roll
icebp
or
outsb
pop
lret
rolb
aam
rclb
mov
mov
adc
ja
inc
cmp
sbb
fucomip
add
loop
popa
xor
insl
jl
push
jne
lcall
out
push
cmp
inc
mov
jg
or
ret
sub
adc
stos
lret
add
cmpsb
or
pop
adc
fsubr
cmp
mov
jge
push
mov
sahf
mov
cs
andl
jle
ss
cmp
push
repnz
jle
mov
xor
push
xor
testl
adc
cmc
or
dec
sub
jl
int
loopne
lahf
add
call
mov
xor
aam
push
cmp
fld
adc
pop
xchg
in
in
repz
dec
cli
push
ds
or
enter
push
xchg
fsubs
add
loope
out
jp
or
in
ficomps
inc
and
xor
sbb
call
in
add
push
std
rclb
add
sub
sti
ret
xchg
out
cli
cli
das
std
mov
pop
add
loopne
aam
and
pop
data16
adc
in
fwait
shll
adc
adc
cmpsb
lahf
push
mov
mov
jl
mov
int
push
popa
mov
mov
fsubl
test
cld
sarb
jmp
jns
xor
push
push
jg
ret
jae
mov
mov
push
xchg
cmp
inc
jl
pop
mov
sub
xchg
sbb
sahf
or
aam
inc
mov
scas
sub
rcrb
mov
inc
sbb
lock
inc
shlb
mov
jno
in
dec
mov
or
mov
push
test
pop
leave
cwtl
add
addr16
shrl
int
arpl
push
inc
scas
and
mov
jge
and
scas
mov
push
rorb
loope
imul
aam
xchg
cwtl
and
cmc
loope
xor
addr16
into
test
rolb
pop
ret
aaa
movsl
or
ficoms
inc
jae
scas
inc
loop
inc
add
arpl
data16
lret
mov
cmp
and
mov
push
das
sahf
or
in
dec
mov
movsl
sbb
push
std
or
inc
loop
jae
test
mov
adc
xor
ds
es
sti
adc
jo
cmp
ret
inc
dec
pop
es
cmc
loop
adc
push
cmp
xchg
pop
clc
rorb
and
ret
mov
push
adc
daa
adc
xchg
push
mov
jo
xor
bound
inc
mov
mov
roll
cld
and
sbb
cmc
xchg
jbe
mov
mov
test
dec
sbb
popa
or
sub
cltd
cmp
inc
ret
hlt
add
out
lcall
push
nop
or
lock
mov
cmpsl
inc
repnz
mov
mov
push
out
dec
cli
mov
cmp
push
pop
push
mov
jg
movb
test
stos
and
dec
cmp
sbb
hlt
add
jae
add
dec
push
shl
xor
adc
adc
pop
clc
fsubrl
jmp
pop
mov
shlb
xchg
popf
add
fistps
pop
sbb
aas
je
dec
pop
sbb
in
shll
jnp
dec
jl
loope
mov
and
ret
xchg
aad
pop
pop
jge
jecxz
inc
mov
scas
in
cltd
push
adc
xchg
push
out
cwtl
cltd
mov
je
cmc
pop
xor
cmpsb
out
cmp
adc
mov
xor
and
icebp
mov
pop
push
push
xchg
sbb
inc
andb
movsb
dec
inc
or
xchg
loope
or
leave
inc
scas
pusha
push
inc
sub
clc
cli
das
lods
fmull
loope
xorb
mov
scas
cmp
jecxz
push
mov
push
rcrb
xchg
sbb
insb
ss
add
sbb
nop
lcall
hlt
fwait
cmp
pusha
mov
push
cmovb
std
je
cmp
jle
jo
dec
daa
jno
mov
mov
xchg
pop
cmpsb
ja
sbb
sbb
out
xor
pop
lods
sbb
ss
and
cmpsl
push
pop
mov
std
stos
fsub
repz
cmpb
xlat
popl
push
pop
xor
push
sbb
push
pop
jle
ret
cwtl
mov
jne
test
add
cmpsl
orb
mov
stos
jae
scas
in
xchg
addr16
mov
cmp
ret
push
hlt
cmp
or
subl
mov
jo
lea
sbb
dec
subl
pop
pop
sbb
push
mov
mov
gs
push
out
push
pop
push
mov
jle
inc
bound
je
sub
mov
add
repz
adc
mov
sub
inc
pop
rclb
fimuls
xchg
adc
xor
pushf
mov
mov
cmpsb
pop
push
and
add
cwtl
inc
add
das
fcomi
mov
push
adc
mov
cld
push
mov
fcomp
cmpsl
mov
js
xchg
add
sub
add
cmp
fucompp
adc
shr
mov
jbe
sbb
push
xor
inc
mov
mov
mov
out
and
dec
lea
stos
inc
daa
xor
pop
clc
or
ret
pop
add
fucomip
stc
sbb
hlt
and
mov
push
push
movsl
adc
push
fdiv
ret
imul
inc
add
or
sbb
add
ss
lock
movsb
icebp
or
arpl
int
mov
fiadds
cmc
sarb
fprem1
mov
popf
hlt
mov
out
fildl
mov
roll
in
inc
in
xchg
push
clc
xchg
ret
mov
fsubs
adc
lahf
pop
movsl
xchg
pop
jmp
xchg
stc
xchg
enter
xchg
xchg
repnz
and
sahf
jo
and
and
fcmovne
xchg
pop
ljmp
gs
cmp
jo
inc
sahf
mov
and
jbe
in
sbb
insb
lods
jp
aam
and
pop
sbb
les
movsb
aam
lds
mov
lods
fcomps
decb
jl
mov
scas
fxch
loop
mov
lock
jge
and
or
pop
popa
cwtl
adc
or
dec
push
add
aad
clc
fs
inc
cli
stc
mov
out
hlt
mov
aad
inc
sub
js
imul
cmpsb
push
aam
fildll
jae
int
les
mov
inc
bound
scas
jmp
stos
mov
jo
shl
mov
repz
ret
push
mov
cmp
call
aad
dec
std
mov
xchg
jl
cmpl
xor
xor
into
out
cwtl
lret
int3
mov
push
sub
and
ja
inc
aam
sub
and
mov
je
sbb
push
dec
xchg
bound
enter
je
sub
sti
fimull
scas
idiv
or
or
adc
mov
and
push
int3
aam
gs
test
cmc
mov
mov
addr16
push
mov
test
dec
cmpsl
and
pop
sbb
mov
adc
xor
outsl
in
sbb
add
loopne
fsubr
popf
sub
dec
iret
outsl
cmp
dec
inc
push
sbb
push
push
imul
sub
cmp
int3
cltd
sahf
cli
add
stc
rcrb
sbb
aas
fdivrs
pusha
lods
mov
mov
data16
pop
xchg
das
rclb
test
mov
dec
push
cltd
das
adc
add
imul
or
jg
adc
or
or
lods
loop
cli
orl
mov
clc
sbb
ds
mov
sbb
mov
decl
mull
cmp
les
lcall
mov
push
movsb
cwtl
cmpsb
popa
lea
jnp
jno
bound
mov
jecxz
cmp
push
jns
jl
jp
das
xchg
and
jmp
sbb
xlat
cld
mov
xor
lods
push
enter
ret
cmp
cld
imul
addr16
bound
sbb
mulb
insb
mov
negb
js
mov
les
mov
or
icebp
mov
mov
mov
cmc
orl
jns
in
and
push
je
fistl
test
std
test
xor
cmp
scas
mov
pusha
sbbl
pop
dec
lret
adc
pusha
test
stos
movsb
and
mov
ficompl
outsb
mov
xor
jp
push
loope
xor
mov
int3
dec
push
mov
repz
fcmovnu
bound
inc
mov
fdivs
les
push
cmpsb
or
lcall
dec
and
lods
and
fmull
int
lock
lds
jo
outsb
mov
movsb
lahf
popf
push
xor
dec
out
inc
adc
ret
xchg
loopne
out
lock
rcl
pop
fs
rorl
je
ret
movsl
pop
or
shlb
inc
dec
loopne
inc
lods
or
push
jo
jl
cmp
rcrb
and
call
dec
rolb
js
pusha
adc
leave
add
push
repz
mov
inc
loopne
jge
lahf
fstl
add
jns
mov
sbb
daa
push
lret
adc
sub
loopne
movsl
adc
cli
scas
leave
adc
adc
and
mov
mov
pop
outsb
in
ljmp
cmp
fistpl
inc
mov
gs
cmp
mov
js
scas
popf
call
loopne
cmp
mov
lock
cmp
adc
xchg
push
ds
lahf
xor
rcrl
sbb
movl
mov
mov
and
or
pusha
fdivr
dec
test
jmp
sub
into
mov
fisubrs
std
dec
mov
cmp
lods
icebp
aad
arpl
mov
subb
sub
push
pop
outsl
jge
add
dec
insl
mov
subb
mov
outsl
jle
sub
cmp
push
sarb
mov
dec
nop
and
rorb
fmulp
enter
fwait
rol
movsb
enter
aam
std
pop
jae
pop
xchg
adc
popa
cmp
pop
jae
clc
inc
cld
rolb
or
sub
jnp
out
insl
mov
out
ffreep
aad
xor
and
jge
rol
daa
jle
inc
loopne
cmp
xchg
mov
add
mov
push
enter
adc
out
in
mov
pop
sub
test
inc
mov
push
clc
inc
xchg
jo
push
imul
fiaddl
fs
cmp
aaa
add
data16
testl
test
dec
mov
add
stc
jne
fucomi
push
cmpsb
sti
pop
or
xchg
shlb
push
jnp
dec
and
jg
or
cmpsb
pop
xor
loopne
nop
jge
add
mov
push
pusha
cmp
ljmp
adc
shlb
lea
cmp
cmpsb
ds
es
dec
pop
add
pop
loope
xlat
das
lret
pop
add
insl
adc
arpl
imul
push
pushf
jg
std
adc
out
arpl
push
mov
out
test
mov
mov
mov
lea
jge
fldenv
mov
mov
jo
outsl
sbb
pop
mov
push
hlt
ret
and
loop
cmp
add
aad
sete
lock
mov
adc
sbb
cmp
mov
or
fnstcw
ds
movsb
mov
hlt
mov
push
jle
std
ss
mov
mov
mov
mov
call
add
or
leave
push
push
mov
jno
add
adc
xchg
push
jne
pop
mov
lods
jmp
fsub
jmp
stos
push
jno
push
test
pushf
rcll
lcall
rcrb
jb
add
jbe
or
push
mov
divb
and
out
xor
sub
sbb
adc
loop
cmpsl
imul
jne
fimuls
add
inc
sbbl
loope
lahf
test
mov
inc
xor
fsubrs
aad
lock
push
in
das
adc
insb
mov
inc
xchg
cmp
xor
outsl
jns
sarb
add
lods
and
imul
rorl
in
sarl
mov
lret
ret
adc
sbb
cmpsl
cmp
xchg
adc
jg
insb
sub
dec
not
pop
cmp
add
loopne
insb
add
outsl
in
js
mov
or
sbb
fisttpll
add
sbb
cwtl
adc
adc
xchg
dec
in
fwait
cltd
dec
loope
pop
rorb
pop
psraw
fcmovu
js
addl
lock
lods
stos
push
xor
sub
push
sub
pop
pop
je
sub
mov
cmpsb
xchg
sbb
adc
add
xor
test
ret
adc
mov
ret
fldcw
jbe
out
sar
dec
daa
js
and
xor
shlb
stos
sbb
push
dec
outsl
jno
push
call
aam
into
arpl
movsb
sub
inc
mov
xchg
out
dec
jg
pop
int
push
movsb
in
stos
addb
jl
cmp
out
lret
std
xchg
pop
ret
movsl
pop
mov
vmovups
shll
iret
pusha
mov
pop
cmp
hlt
lods
pop
lds
fldl
mov
ljmp
mov
bound
adc
sub
sub
inc
gs
shll
das
stos
jmp
jle
mov
in
pop
popf
ja
pop
aas
sbb
fmuls
push
data16
rol
not
xchg
inc
adc
mov
movb
mov
xchg
mov
and
cmp
cs
bound
xor
and
loopne
gs
jne
mov
add
dec
add
or
or
imul
adc
and
cmp
sub
push
mov
jb
stos
aaa
mov
fcoml
pop
adc
ss
aaa
push
inc
xchg
test
or
lret
test
and
aam
xchg
mov
loopne
jns
cmpsb
out
adcb
jecxz
aas
jmp
add
and
insl
mov
add
add
inc
push
loop
popa
movsl
ret
sub
mov
or
cmp
dec
popf
fs
cs
sbb
pop
arpl
xchg
add
mov
dec
aad
filds
mov
shl
cs
dec
xor
sbb
xor
push
cmpsl
test
loop
arpl
pop
mov
jp
xchg
push
inc
icebp
dec
or
mov
aaa
in
xchg
jb
adc
mov
add
pushf
sub
lcall
add
or
cwtl
adc
pop
mov
hlt
cmp
push
dec
sub
sbb
sub
mov
jp
and
dec
jnp
sbb
push
outsb
sub
xor
sahf
or
les
scas
iret
jp
orb
sub
push
mov
lods
loop
dec
out
mov
in
sub
cmp
negb
sub
fcoml
pop
inc
mov
and
pusha
xor
sub
push
and
adcl
jge
out
js
pop
or
push
clc
sub
xchg
mov
jns
mov
xor
subl
mov
mov
pushf
dec
mov
push
push
lret
mov
push
in
jbe
cmp
and
repnz
hlt
push
cmp
sbb
lock
mov
ret
movsb
inc
loop
cmp
adc
add
jo
pop
adc
and
xor
js
popf
mov
push
lahf
inc
js
adc
pusha
mov
mov
inc
js
popf
inc
test
shrb
or
jmp
les
mov
push
ljmp
out
mov
ss
cmc
shlb
les
cli
dec
pushf
repnz
mov
jne
lahf
mov
cld
inc
xor
push
pop
into
fstps
jno
jle
push
xchg
icebp
adc
faddl
jl
and
cvtps2pd
xchg
inc
clc
lcall
iret
into
pop
mov
movsb
in
or
sub
stc
jg
test
pop
insl
push
stos
cltd
insl
repz
dec
xchg
jg
ljmp
pop
sub
jg
cli
jb
lods
jmp
enter
or
push
imull
enter
stos
push
inc
lds
xor
push
test
xchg
xchg
js
and
test
stos
in
ljmp
jg
cs
adcl
dec
dec
rclb
mov
xchg
stos
xchg
push
and
jp
lea
insl
popf
shl
jp
jge
ljmp
or
mov
jo
in
addb
add
mov
mov
test
adc
lods
rcrl
pop
add
cmp
inc
or
add
inc
or
xchg
pop
cmp
outsl
adc
or
and
xor
hlt
jb
int
adc
xchg
sahf
pop
xor
shrb
mov
dec
jae
shlb
cmpsl
dec
mov
or
push
in
stc
outsb
push
mov
sarl
xor
or
adc
in
lahf
fwait
sbb
pop
pop
jno
inc
sbb
pop
sbb
lods
and
aad
loop
and
ret
scas
in
cmp
mov
dec
jge
aas
les
push
jo
dec
loope
scas
lock
jl
inc
orl
ficoml
or
shr
xchg
sahf
fwait
icebp
sub
sbb
xor
push
pop
enter
add
call
imulb
xchg
mov
push
cmpsl
mov
inc
dec
jno
rorl
adc
int
mov
mov
xchg
mov
dec
ret
out
xlat
push
add
adc
mov
sub
xor
int3
add
or
and
mov
fldt
xchg
dec
xchg
jae
loop
sbb
roll
inc
popl
and
adc
dec
fsubrl
outsl
and
ret
inc
push
dec
inc
roll
xchg
fisubl
lods
dec
dec
pop
icebp
test
shll
xchg
sti
cs
add
js
iret
mov
inc
mov
or
xor
sub
or
sbb
push
filds
pop
sbb
or
inc
stc
xor
ds
adcl
imul
jg
pop
int
lret
sub
mov
jl
mov
cmc
add
nop
in
fmull
out
sbb
and
mov
cld
lea
lods
shrl
jo
dec
and
mov
xor
lret
dec
aam
ffreep
repz
dec
cmp
in
mov
idiv
lea
aad
out
roll
repz
insb
mov
cmc
inc
sub
jl,pt
fidivrs
and
loopne
adc
rol
pop
dec
jp
rcrb
arpl
jmp
test
imul
lock
cmc
repz
fsts
dec
sub
cmc
jbe
cmp
pop
add
xor
in
mov
fldcw
or
mov
mov
out
movsl
xchg
lahf
xor
xchg
mov
adc
add
sub
sti
mov
adc
mov
cltd
mov
push
movsb
xchg
dec
adc
pop
mov
fdivl
jno
inc
ret
sbb
or
cmp
adc
mov
push
aam
test
in
and
shl
push
pop
xor
jnp
and
and
test
cmp
xor
loope
lods
mov
jne
lds
adc
insb
or
jp
outsb
cmp
push
ret
ror
ljmp
jno
ss
pop
pop
cmpl
lds
cmp
and
sub
or
push
sub
in
pop
push
aaa
insl
push
adc
inc
jbe
lret
sbb
cli
mov
mov
in
mov
lret
add
call
pop
mov
scas
pop
jl
loop
sbbl
xlat
loopne
rorl
push
sbb
mov
dec
pop
xor
test
es
mov
insl
aaa
movsb
and
nop
jnp
jnp
add
imul
jge
test
mov
push
sbb
pop
push
mov
aad
stc
inc
jbe
dec
xchg
mov
imul
push
push
mov
xchg
shll
jp
mov
dec
test
dec
mov
loop
add
and
push
out
push
pop
pop
sbb
cmc
xorb
pusha
incb
mov
icebp
sarb
std
addb
sub
sbb
iret
add
pop
enter
in
movsl
inc
fcoml
pusha
cmpsb
and
push
loop
pushf
out
dec
rclb
mov
pop
pop
push
fbstp
push
pop
inc
add
push
jb
jl
mov
and
ss
outsl
and
add
shll
sub
mov
fdivs
add
cs
push
add
jmp
mov
jp
inc
dec
int3
pop
push
arpl
and
fnstcw
xor
push
inc
dec
sub
add
das
add
and
add
xchg
mov
sbb
push
mov
ss
lock
outsl
push
cmp
push
sbb
pop
cld
pop
or
push
push
push
add
push
push
inc
add
adc
dec
push
fdivrp
fnstenv
jmp
loop
lods
lds
dec
in
inc
adc
jo
cmc
aam
stc
push
push
jg
aad
loope
test
fstpt
adc
and
fdivs
lahf
jge
outsb
les
incl
ret
inc
loop
mov
mov
or
adc
fdiv
and
pop
or
rorl
push
sub
aas
adc
xchg
aaa
cmp
add
addl
test
in
jne
lea
add
inc
adc
sub
and
dec
sbbl
out
jnp
push
arpl
dec
cmp
rolb
les
xchg
int
insb
clc
inc
push
push
sub
xchg
scas
stc
mov
xor
inc
and
mov
jnp
int
lret
pop
or
adc
mov
xchg
subb
into
daa
scas
mov
sub
in
nop
jb
cmp
mov
xchg
insl
fidivs
pop
das
xchg
lock
adc
push
mov
fwait
mov
cmpsl
xchg
pop
jp
push
sbb
add
cmp
add
popf
repnz
cmp
and
ret
sub
pop
sub
loope
in
in
mov
insl
mov
aaa
cs
jo
or
stos
mov
sbb
inc
repz
sbb
mov
and
push
xchg
pop
mov
push
cmp
out
push
daa
lcall
push
adcl
mov
and
jno
push
or
daa
adc
cmp
xchg
out
sbb
adc
push
leave
pop
lea
ja
xchg
ds
mov
imul
jnp
call
add
xchg
lods
aas
lock
pop
cmp
insl
sbb
pop
mov
adc
jl
add
in
pushaw
ja
rol
inc
es
mov
es
in
xchg
push
sbb
popa
leave
or
or
enter
push
and
push
xchg
jno
out
inc
lods
lahf
pop
xchg
mov
cmp
arpl
push
push
adc
stos
in
pop
or
rcl
loop
pop
pop
pushl
cs
mov
cmpb
sbb
add
cld
or
xlat
pop
sti
pop
or
push
cmpsl
or
sub
mov
rdmsr
inc
jg
mov
push
shll
sbb
outsl
cmp
cltd
mov
dec
subl
insb
adc
in
xchg
in
gs
idivl
jecxz
dec
test
ja
out
push
sub
mov
mov
pop
ror
pop
xor
lods
push
jns
add
imul
inc
lea
jb
mov
xchg
mov
pop
inc
cmp
sbb
ja
jno
jno
cmp
or
leave
daa
xor
or
sub
mov
lock
jbe
or
ret
cmc
cs
loop
pop
dec
mov
mov
cs
inc
adc
es
xchg
xchg
cs
imul
add
test
js
xchg
leave
sbbl
sub
jmp
mov
jnp
test
fucomi
stc
mov
xchg
stos
hlt
or
push
sub
ljmp
mov
fsubs
mov
into
jno
cmp
mov
xor
xchg
and
dec
dec
mov
jl
imul
adc
mov
mov
dec
and
adc
inc
or
inc
fcoms
add
xchg
jno
out
adc
es
ds
pop
push
cld
mov
mov
add
movsl
and
std
movntq
sbb
or
dec
es
pop
insl
xor
mov
pop
sbb
inc
jp
xlat
stc
push
or
cmp
std
in
sub
mov
pop
inc
dec
mov
out
mov
pop
lahf
cmp
adc
inc
pushl
xor
cmp
inc
in
sbb
mov
inc
test
or
out
mov
mov
mov
jg
mov
lret
xor
push
adc
ret
jmp
push
or
pop
and
insl
std
stos
ss
in
mov
push
sbb
and
pop
cmpsl
dec
pop
inc
and
js
rclb
xchg
mov
xchg
jns
jns
dec
std
adc
mov
add
mov
ret
jo
cmp
cmpsl
sbb
aas
nop
dec
jnp
push
and
popf
sti
nop
xor
jg
add
test
fwait
pop
loop
pop
out
out
icebp
in
mov
addl
mov
int3
pop
jnp
js
dec
rcr
mov
mov
push
add
inc
adc
mov
xchg
push
push
adc
adc
and
sub
xor
fs
scas
mov
xchg
fistl
orl
ja
js
pop
mov
imul
aam
cli
mov
ret
pusha
orl
pushl
xor
pop
pop
sub
dec
mov
inc
lret
add
add
faddl
subl
shll
lods
enter
adc
shll
test
test
push
add
adc
shl
push
push
jb
insl
mov
sub
mov
clc
cmc
ss
or
es
movsb
push
fisttpl
rcrl
add
cltd
adc
push
pop
mov
jl
jno
add
dec
inc
shr
aam
or
fdivrs
push
sub
sahf
and
int
add
cltd
sahf
cmp
pop
push
pop
imul
stos
cmc
cs
xchg
fxch
and
outsb
jo
mov
sbb
add
jo
add
jne
fbld
jnp
mov
adc
add
jno
loop
dec
lds
sub
sahf
mov
inc
xor
cmpsb
fidivrl
inc
leave
lahf
stos
xchg
jne
bound
int3
mov
call
rep
daa
fisubl
stos
pop
or
add
jbe
jle
mov
shr
cmpb
mul
lcall
je
rcrl
xchg
pushw
pop
inc
adc
pop
pushf
jmp
add
sahf
int
rolb
insl
push
xchg
sub
arpl
gs
std
leave
dec
inc
nop
imul
scas
xchg
adc
jecxz
outsb
xor
cs
in
push
cmc
sub
jbe
inc
pop
fsubrs
push
or
mov
lds
cmp
das
add
in
or
pop
mov
test
xor
cmp
jnp
jb
idiv
cmp
jle
xchg
jnp
scas
popf
jbe
in
outsl
jb
aas
cmp
sub
les
push
ss
mov
push
int3
add
dec
lock
or
inc
sub
fs
mov
sbb
test
push
mov
pop
push
dec
mov
sahf
sub
push
mull
add
movl
cli
outsl
sbb
inc
shll
movsl
cs
ret
dec
test
cs
sub
push
pop
icebp
add
mov
cld
mov
fadd
orl
push
xlat
push
stos
cli
mov
and
outsl
fisubl
int3
rcl
clc
pushf
jecxz
sbb
loope
or
xor
xchg
add
jg
lea
aam
popf
add
les
out
mov
xchg
push
inc
add
adc
or
mov
scas
imul
rorb
stos
ret
scas
movsb
call
mov
stos
dec
stos
int
ja
mov
xlat
lock
and
clc
lock
fdivrs
and
out
sbb
sbb
jns
sbb
icebp
mov
adc
xlat
insl
push
add
ret
adc
addl
and
mov
xchg
xor
cmc
xor
mov
bnd
dec
xchg
in
pop
imul
sbb
dec
dec
imul
adc
mov
faddl
movb
test
test
aad
insb
ret
fldenv
cmp
mov
aas
call
and
sub
es
into
lds
add
loope
stc
daa
fnstcw
or
outsl
sub
addr16
in
nop
clc
mov
outsl
cmpsb
out
sbb
orl
dec
push
sbb
cmpsb
add
lret
add
xor
scas
jb
dec
lods
pop
xlat
sub
ds
pop
shrl
or
mov
adc
mov
test
ja
xor
ss
loop
mov
popf
jmp
aam
clc
cmp
xor
jae
push
pop
test
xchg
mov
arpl
int3
push
leave
aam
inc
ss
jo
adc
popf
xor
mov
inc
iret
mov
xchg
xchg
dec
ret
inc
xchg
mov
xor
fstp
movsb
sbb
mov
xchg
mov
pop
jmp
popa
xor
lret
push
cmp
push
xchg
rolb
add
fdivrs
shl
mov
popa
das
outsb
subl
push
push
dec
dec
bswap
andl
dec
je
inc
pushf
push
rorb
sub
push
mov
and
fwait
xchg
xor
je
clc
and
add
xlat
ret
lret
dec
mov
arpl
mov
insb
mov
jb
orb
test
cmp
movsb
add
push
test
cltd
mov
xchg
add
rorl
lahf
repz
cmp
sbb
mov
sbb
or
mov
xchg
dec
sti
pop
arpl
jmp
iret
or
dec
loop
mov
ret
je
cli
fidivl
add
xchg
movl
cld
fisubl
pusha
mov
mov
inc
xchg
daa
ss
rcrl
dec
test
add
test
mov
mul
unpckhps
xorb
aad
push
aaa
popf
pusha
push
lods
cmp
js
xor
mov
pop
gs
xor
daa
lahf
hlt
push
imul
jle
jmp
into
sub
or
push
xchg
sub
mov
scas
sub
add
mov
sti
stos
dec
das
push
push
imul
call
pop
add
popa
test
repnz
pop
and
dec
mov
cmp
data16
stos
xchg
pop
mov
sbb
ljmp
mov
imul
fdivrs
movsl
lahf
cld
aam
es
int
add
xchg
ret
jae
and
pusha
addr16
jo
jns
mov
mov
mov
icebp
xchg
pop
int
or
rcrl
pop
cmpsl
inc
xchg
rol
push
sbb
dec
or
loop
mov
gs
cltd
xchg
les
addr16
xchg
shl
cmp
push
inc
out
rorb
lods
push
icebp
and
jmp
sub
mov
test
aad
pushf
arpl
push
loop
stos
push
mov
lret
lea
mov
jno
push
mov
mov
mov
and
mov
pop
loop
fnstsw
and
out
ja
into
mov
cmp
xlat
imul
inc
cs
inc
inc
out
data16
pop
lea
sbb
int
xchg
clc
push
xorl
push
fscale
popf
adc
in
inc
xlat
lcall
clc
add
cld
dec
xor
jge
outsb
cmp
dec
jns
mov
shl
test
or
xor
mov
lock
pusha
inc
xchg
ret
inc
xchg
sub
mov
adc
sub
loope
std
jmp
jge
adc
adc
int
cmpsb
out
mov
mov
test
bound
mov
adc
shll
xor
aas
adc
scas
mov
xchg
xchg
or
add
hlt
xorl
or
cmp
push
pop
sbb
dec
cmp
pop
sbb
lock
in
es
pop
jmp
or
jmp
xor
mov
sbb
mov
pop
aaa
stc
iret
movsl
push
jne
and
test
sbb
inc
push
xor
std
inc
fistps
into
sbb
jb
xor
dec
and
xchg
test
popa
jno
ret
fimuls
into
inc
lahf
jg
stos
cwtl
push
and
push
add
test
jo
push
cmp
leave
or
push
xchg
mov
pop
popa
leave
sbb
pushf
sbb
decb
ss
out
scas
icebp
jno
or
jp
scas
pop
je
outsb
aad
lea
outsl
bound
adc
sub
ds
data16
fsubrl
mov
movsbl
push
out
ss
cmpsl
dec
pop
aam
rorb
test
mov
inc
push
mov
add
jg
repnz
leave
pop
lods
out
and
jmp
xchg
scas
mov
sbb
mov
xor
mov
xchg
mov
popf
mov
lret
sbb
cmp
movsl
mov
out
pop
aam
fs
iret
popa
inc
mov
loop
sub
adcb
sti
sbb
cltd
aas
call
fidivs
clc
xchg
mov
xchg
push
add
jne
aad
mov
gs
mov
in
mov
jb
cmp
lock
adc
cmp
dec
out
clc
arpl
sahf
ret
int3
out
test
dec
add
lock
sti
shlb
divb
lea
push
mov
out
sbb
idiv
or
fistl
jno
scas
inc
jmp
jecxz
push
mov
scas
push
ret
insb
loope
pop
cwtl
imul
and
dec
test
mov
ja
xchg
xchg
push
cld
mov
dec
jmp
loopne
out
fbstp
sbb
enter
adc
mov
push
decl
aad
cmc
sbb
pop
and
in
sbb
cmpsl
rorb
mov
inc
push
gs
sub
adc
mov
add
mov
iret
pop
cld
inc
xchg
xor
adcl
ja
jne
inc
popa
test
sbb
jo,pt
mov
outsb
push
ret
rcll
add
test
or
sub
arpl
mov
add
fistpl
push
xchg
cmp
out
fiaddl
inc
jl
push
lods
and
test
stc
fbld
call
mov
mov
adc
push
jae
add
cli
xor
rcrb
scas
fwait
and
dec
mov
insl
pop
pop
cmp
add
cmp
xor
cltd
outsl
pop
clc
outsl
test
cmpl
movsb
decb
rolb
jl
mov
enter
jge
cld
sbb
pop
imul
mov
stc
inc
jne
mov
mov
mov
pop
pop
mov
enter
data16
dec
sub
mov
jg
es
sbb
sub
sbb
push
jo
xchg
inc
test
scas
stos
sbb
ret
shlb
into
pop
and
mov
dec
dec
pop
dec
jne
xor
and
enter
add
es
mov
jg
fmulp
out
adc
das
movsb
adc
xchg
outsl
jg
cld
insb
add
in
mov
xor
xchg
pop
adc
mov
fbstp
sub
xor
or
scas
lds
loop
pop
loope
mov
lods
test
pop
cmp
repz
sarl
mov
sub
xlat
or
dec
push
pop
daa
ss
stos
push
outsb
adc
sbb
jns
sub
jns
int
sub
lods
push
out
jmp
mov
adc
loopne
xorb
and
dec
dec
and
lds
or
lock
push
ss
sbb
mov
xor
in
rorl
push
clc
sbb
and
insb
or
inc
push
fmull
movsb
inc
aad
out
mov
mov
xchg
jmp
sbb
xchg
jbe
nop
adc
dec
and
and
sub
test
lea
sub
in
iret
mov
or
cmp
andl
jg
testb
jns
sbb
add
std
popf
cli
fneni(8087
mov
add
dec
jae
addr16
lahf
ljmp
loop
jle
push
mov
sbb
or
aaa
pop
loopne
popf
lret
or
rorb
jg
pop
adc
mov
enter
inc
shll
sub
sbb
arpl
mov
call
pushl
sbb
push
test
scas
push
jle
hlt
inc
mov
paddq
push
call
stos
mov
or
inc
lcall
xchg
inc
adc
add
jcxz
and
xlat
pop
and
ret
aam
mov
mov
ret
cld
mov
jmp
push
cmp
pop
cmp
mov
data16
xchg
add
adcl
hlt
insb
sub
adc
adc
fsts
dec
je
scas
and
and
js
add
ss
call
sub
in
add
mov
cmc
push
bound
push
sarb
ret
loope
pop
inc
cmc
add
incb
pop
cmpsb
aam
inc
sbb
cmc
sub
shll
ss
sub
xor
xor
inc
movsb
inc
sbb
cs
lahf
xlat
sar
sbb
ss
clc
mov
clc
cmpsb
dec
mov
outsb
push
andl
xor
cmpsl
das
cli
cmp
std
jl
pop
add
lock
mov
or
test
dec
cld
ret
mov
mov
and
addr16
add
cmp
call
push
aam
mov
xor
loope
pusha
iret
out
sbb
and
mov
jge
ret
xchg
adc
ljmp
jl
fwait
ds
pop
sub
adc
xor
dec
les
je
adc
jl
loopne
cli
into
cmc
outsb
and
aaa
dec
lret
lea
in
push
add
sbb
scas
mov
and
in
outsb
das
pop
stos
hlt
sub
movb
mov
pop
jmp
sbb
jge
pop
std
and
push
loop
sbb
xchg
pusha
xor
out
divb
aas
mov
repz
or
push
cmp
aad
xchg
rorl
push
add
or
aas
ds
repz
inc
jo
lea
adc
jg
sub
or
incl
lcall
cmp
imul
mov
mov
cmpsb
js
xor
aad
lea
cli
pop
ja
xor
enter
in
jle
test
xorl
push
sbb
add
stos
add
fucomi
addr16
sbb
movb
push
pop
cmc
shl
add
mov
lods
pop
pop
test
icebp
sbb
in
mov
xor
and
sbb
or
xor
outsb
push
lcall
sahf
test
decb
push
mov
lock
pusha
loopne
std
pop
or
in
sbb
mov
mov
aas
lods
sti
pop
fsubrp
mov
mov
daa
jno
or
lock
and
loope
pop
sub
jmp
or
xor
idiv
enter
lock
sahf
or
ret
adc
jbe
fildl
dec
nop
shlb
push
sbb
jp
dec
mov
out
dec
xchg
add
and
es
pop
mov
hlt
clc
test
xchg
jp
xlat
xor
push
pop
cmpsb
repnz
scas
xchg
dec
arpl
push
lods
fdivl
xor
sub
add
shrl
es
cmpsl
adc
cli
dec
imul
mov
mov
fimull
and
js
or
fisubs
into
dec
jae,pt
dec
jae
jb
pop
jo
adc
aaa
mov
imul
movsl
clc
insb
std
test
cld
fs
add
test
push
loop
pop
xor
adc
aad
pop
jle
jge
jns
cmp
add
inc
test
out
jecxz
aam
jnp
mov
pushf
or
cli
mov
cs
adc
fists
je
xchg
es
ljmp
add
lods
das
sar
cs
bound
jecxz
xchg
jne
or
pusha
xchg
stos
cmpsb
test
mov
push
pop
in
jns,pt
or
add
or
popa
push
xchg
mov
cmp
pop
stc
mov
mov
xor
cmp
pop
in
sub
mov
xor
and
push
stos
test
aaa
adc
inc
lods
inc
iret
jle
or
nop
insl
lock
rcl
pop
jp
adc
push
adc
or
loop
dec
sarb
inc
sbb
and
or
jne
cmc
mov
orl
sbb
adc
and
cwtl
mov
or
jns
ljmp
xchg
sbb
push
and
sbb
mov
cwtl
jp
cld
sbb
fsts
push
fstpl
or
mov
jl
jnp
pop
stc
xchg
cli
imul
iret
mov
cmp
es
add
clc
dec
cld
xchg
outsl
mov
mov
ja
xchg
lcall
stos
add
iret
leave
icebp
and
inc
iret
rorl
pop
xor
sbbb
loopne
daa
pop
sbb
mov
js
cmp
sbbl
fsubl
nop
scas
cmpl
dec
rcrl
xchg
cld
or
loopne
lock
pop
pushf
push
mov
or
mov
js
mov
pusha
mov
jb
adc
popa
sti
pop
and
dec
in
icebp
pop
xchg
loopne
adc
or
inc
mov
enter
adc
jnp
add
dec
and
stos
push
xchg
mov
mov
shll
jmp
adc
add
aad
cmp
and
jmp
push
in
xchg
repz
mov
scas
gs
jns
fiadds
mov
mov
js
sbb
sub
ficoml
xor
ds
loope
stc
int
xlat
cmp
les
inc
cmp
dec
mov
shll
loop
jmp
les
sbb
push
aaa
rcl
imul
fsubs
test
clc
mov
loop
ja
push
adc
ja
mov
fisubrs
ds
xor
iret
rorb
fstpl
jecxz
pop
jnp
sub
filds
push
pop
push
xchg
push
lret
out
jnp
jp
add
in
adc
xchg
pop
cltd
ljmp
stc
js
pushf
cmp
pop
inc
jmp
pop
cmp
rorl
push
jnp
fwait
ljmp
xor
mov
pop
repz
adc
sarb
roll
lock
cmpsb
loop
pop
xchg
bound
and
shrb
and
lock
add
aas
outsl
dec
xor
std
add
xchg
aaa
inc
scas
jecxz
and
pop
jne
test
lret
push
sub
and
mov
adc
movsl
outsb
xor
dec
cmp
lcall
xor
adc
cmc
test
adc
sbb
or
sub
mov
push
jb
mov
cmp
jg
add
pop
pop
inc
imulb
push
nop
jbe
orb
andb
data16
aas
ljmp
outsl
or
mov
xchg
inc
data16
adc
sbb
fidivrs
jbe,pn
sbb
inc
fildl
hlt
push
and
lret
sub
mov
and
push
or
mov
aad
or
stc
mov
inc
insb
xor
jbe
jmp
mov
mov
js
ja
or
ja
js
add
pop
pop
pop
inc
push
imul
mov
inc
adc
call
hlt
lock
cwtl
sub
inc
fwait
or
ret
cmp
xchg
in
add
popa
mov
fists
ret
out
lret
sahf
xor
jg
test
or
in
mov
cmp
cmp
mov
and
sbb
jne
fadds
mov
inc
inc
add
adc
aas
push
and
dec
pop
or
and
adc
scas
or
jo
lds
push
subb
vorpd
decl
enter
mov
or
cmp
mov
mov
pushf
add
pop
sahf
int
dec
dec
pinsrw
into
mov
pop
and
or
pop
adc
fs
sub
push
push
mov
pop
loopne
mov
in
imul
sub
xchg
ljmp
sbb
inc
add
fnsetpm(287
pushf
loop
pushf
loopne
sub
lret
cmp
movsl
cmp
push
add
add
sbb
mov
cli
pop
sub
fsts
outsl
dec
cmp
cmp
dec
add
andb
mov
jge
add
ss
lea
mov
mov
push
sbb
inc
ds
mov
mov
pop
out
movsl
out
push
out
aaa
push
popa
mov
ljmp
stc
loopne
pop
je
daa
jno
cmp
shrb
mov
mov
xor
mov
sbb
icebp
inc
push
clc
cmp
stos
imul
fs
aad
jmp
sbb
ljmp
inc
pop
lods
jg
jns
push
repnz
incl
movsb
adc
shrb
test
or
rol
push
decb
push
jmp
hlt
xor
dec
rorl
push
aas
and
lods
leave
add
jle
int
test
out
mov
test
jno
fistps
push
cmp
and
fistpl
add
add
inc
mov
jl
ds
mov
cmc
sbb
add
sbbb
clc
mov
push
test
aaa
lret
cmpsl
loopne
xor
loope
sbbl
push
jle
aas
int
mov
sub
jl
add
fsub
fdiv
leave
sub
xchg
nop
mov
clc
or
negl
sub
push
addr16
addl
mov
jbe
jne
pop
mov
push
adc
popa
imull
sub
daa
aad
mov
mov
cmpb
in
push
sbb
push
jo
and
cmp
mov
aaa
add
call
scas
push
cld
cld
in
push
cltd
aaa
shll
icebp
mov
loop
xchg
sbb
or
ret
test
add
lcall
cld
ret
incb
fwait
adc
mov
push
adc
jecxz
adc
push
mov
pop
data16
xchg
xchg
jmp
jns
aas
or
ja
clc
sbb
push
mov
jno
adc
rorb
das
jle
ss
fldt
icebp
mov
sub
add
jb
cmp
push
and
inc
mov
cmpsb
xchg
popa
or
sbb
cmpsl
clc
push
scas
mov
dec
jp
xchg
test
sbb
adc
rorb
subl
mov
pop
pop
cmpsl
adc
push
or
int3
xchg
mov
rolb
out
nopl
sbb
sbb
arpl
push
push
dec
mov
les
movsl
movsl
aaa
sbb
mov
ret
xchg
inc
arpl
add
icebp
inc
je
lret
xor
xor
mov
pop
int
stos
adc
sbb
inc
icebp
es
call
negb
jl
aas
push
or
cmp
lock
push
outsl
loope
cmpl
and
add
xchg
xor
push
or
aas
sbb
and
fstpt
sbb
xchg
loop
push
call
dec
cs
adc
ljmp
clc
in
dec
push
pop
test
and
push
push
lds
lock
stos
add
push
sbb
and
hlt
les
mov
or
aas
add
sbbb
cmp
leave
addr16
stos
lret
inc
stos
mov
inc
leave
or
add
cli
add
inc
js
loop
insb
add
adc
rorw
les
and
or
dec
push
pop
jns
call
cmpsb
in
test
mov
and
and
mov
cs
inc
aas
or
aas
dec
outsb
push
sub
inc
in
aas
popf
mov
xor
or
loop
shlb
aaa
sahf
adcb
sub
sbb
aam
and
daa
test
popl
mov
ds
mov
pop
mov
mov
cmp
pop
mov
into
rcl
mov
es
clc
xchg
jge
or
xchg
popa
in
push
mov
fwait
repz
lock
sub
inc
inc
fsubrl
add
adc
jne
mov
add
fmull
js
or
cld
inc
add
cmp
loopne
jo
xor
xor
add
std
mov
mov
aad
push
lcall
mov
push
add
mov
arpl
push
jbe
shr
or
bound
movsl
jo
cmc
add
jbe
jns
sub
int
ret
jns
add
sbb
lods
mov
shll
inc
aad
cs
inc
mov
xchg
add
mov
jo
imul
les
xchg
ja
pop
ja
mov
enter
loopne
xchg
iret
dec
stos
mov
add
dec
cmp
add
adc
call
mov
cmpsb
sbb
inc
xchg
jecxz
lcall
xor
lock
aas
mov
popf
mov
mov
and
lock
adc
push
iret
ret
dec
push
xor
or
addb
xchg
dec
mov
outsl
leave
jecxz
push
add
add
jge
add
jmp
inc
mov
and
out
mov
stos
adc
int3
and
and
fnstenv
jl
out
lretw
jl
mov
mov
outsb
bound
test
rcll
int
out
xchg
inc
cmp
jle
int
or
jae
fs
add
jmp
sbb
pop
inc
jp
jp
sbb
or
insb
insb
pop
rcrl
lds
jno
inc
push
adc
movsb
cmpsb
incb
enter
rclb
xchg
jle
xchg
aas
incb
outsl
cltd
adc
inc
loope
daa
and
xchg
jb
inc
push
lock
es
cmp
outsl
stos
popf
push
sbbb
ret
mov
cs
ror
ds
pushf
popa
push
adc
movsb
push
xchg
lods
mov
aaa
xlat
int
mov
lods
adc
cmc
pop
lock
jecxz
xchg
pop
adc
inc
jae
xor
push
stos
pop
cmp
jmp
movsl
mov
add
add
jl
stc
sahf
pop
mov
mov
popa
mov
push
dec
rorl
leave
vphaddubw
mov
add
mov
das
jae
mov
ss
pop
outsb
lret
loopne
shl
mov
add
jne
push
dec
icebp
push
push
addr16
iret
xchg
aaa
inc
and
data16
mov
or
jle
cwtl
jl
sub
insb
push
lcall
adc
call
ljmp
and
inc
dec
pop
ds
icebp
mov
xchg
mov
aad
or
mov
push
jg
hlt
roll
js
sbb
push
xchg
pop
jns
in
adc
jbe
cld
lret
xchg
add
int3
jae
lea
lods
cmpsb
cmp
mov
push
test
sub
mov
ret
sub
std
push
data16
jmp
inc
jle
cmp
lock
xorl
adc
push
fists
or
gs
sub
test
aas
xchg
fadds
lods
push
or
adc
ja
outsl
fs
sub
decl
pop
ja
ret
fucomi
notb
push
clc
sar
fwait
call
sbb
repnz
and
in
dec
sbb
push
fidivrs
xchg
push
push
lcall
add
je
mov
fs
xchg
sub
aas
ficompl
pop
fs
pop
je
in
cmp
insl
imul
mov
mov
or
es
push
ret
addr16
mov
adc
add
daa
lock
inc
ljmp
das
out
jns
push
push
add
dec
sbb
xor
mov
icebp
pop
and
mov
rcrb
dec
int3
add
stos
testb
inc
add
cmp
mov
and
mov
ret
fwait
dec
gs
or
jl
xor
dec
dec
loopne
cmp
ss
shll
xchg
mov
jecxz
aas
gs
push
adc
shr
arpl
lret
ja
bound
add
add
lock
jo
adc
clc
dec
aaa
push
and
cmpsl
popl
or
hlt
pop
fisubrl
aas
insb
pop
mov
cmp
sub
inc
pushf
cs
adc
add
lods
leave
push
fisttps
scas
adc
jae
je
xchg
push
jg
fldl
dec
xor
test
pop
enter
add
ret
insb
je
xor
adc
or
stc
add
xor
inc
cltd
add
add
push
xor
add
sub
add
push
sub
in
cmp
cmp
dec
cmp
push
ror
lret
in
loope
jg
ret
std
push
sub
popa
repz
subb
icebp
xchg
jbe
xchg
and
add
xchg
lcall
sbb
mov
test
cmp
add
xor
pop
push
fisubs
aad
clc
daa
dec
fwait
imul
bound
add
mov
sbb
inc
sbbb
fs
inc
jg
push
call
inc
in
lock
hlt
pop
cli
sbb
loopne
and
test
in
and
dec
inc
lahf
mov
out
call
mov
in
in
pop
jmp
test
adc
add
out
cs
lahf
nop
out
mov
cmp
jmp
push
mov
js
xchg
mov
pop
fcompl
xchg
sub
push
in
or
mov
jae
push
shlb
cs
cmp
nop
fsqrt
test
and
daa
mov
adc
cmpsl
icebp
mov
cmp
sbb
dec
mov
xlat
adc
icebp
repz
mov
mov
rclb
ret
xchg
adc
call
dec
pusha
mov
xor
xchg
iret
fldcw
add
or
sub
add
fistl
aam
jg
dec
ljmp
fsubl
cli
adc
mov
xor
or
push
iret
aas
testb
mov
add
in
out
dec
sbb
lahf
or
xchg
mov
xchg
dec
loope
ljmp
push
gs
and
inc
adc
mov
adc
insb
dec
sub
jle
ret
pop
jge
lret
sbbl
scas
cli
add
add
fs
dec
fwait
testb
xchg
jg
xchg
test
test
inc
cmpsl
add
int
xor
adc
fcoms
rcl
cmp
xor
enter
lahf
or
mull
mov
push
aam
xor
jp
adc
cmp
test
loopne
sbb
test
and
add
jmp
push
rcrl
sub
mov
inc
or
into
andb
cmp
sbb
addr16
pop
adc
mov
cltd
mov
dec
jl
fdivrl
mov
addl
mov
mov
pushf
mov
cmp
mov
das
push
cmpsb
pushf
arpl
mov
loop
cmp
aaa
mov
adc
xchg
pop
mov
jo
pop
mov
dec
mov
shl
lock
adcb
mov
pusha
addr16
pop
lret
dec
push
add
sub
pop
adc
push
jle
add
xor
jmp
cmpxchg
mov
ljmp
out
and
daa
mov
and
jbe
aam
sbb
xchg
xchg
test
adc
jo
sbb
add
push
punpckhdq
cmp
call
es
clc
cmp
push
mov
stos
mov
mov
sub
pushf
add
ret
cwtl
sbb
jb
inc
addr16
repz
stos
dec
mov
insl
and
mov
pop
jne
in
and
xor
in
pop
lret
jp
loopne
scas
xorb
dec
cltd
sarl
or
cwtl
sub
jg
aas
mov
jne
iret
push
inc
push
adcb
movswl
jo
dec
cmp
mov
cmpsl
movsl
fisubs
or
xchg
push
test
xor
cld
decl
stc
insb
xor
push
mov
or
pop
sbb
push
inc
mov
pop
jl
sub
sbb
xchg
adc
cmc
clc
mov
movsb
popa
sbbb
sbb
mov
push
aas
je
mov
pcmpeqd
or
mov
mov
add
loop
pusha
ds
popa
cmovs
out
push
lock
pop
add
fadd
sbb
jbe
sub
sahf
xchg
cld
test
inc
ljmp
fdiv
fldt
cmp
or
push
push
jo
add
mov
xchg
ss
call
fcoml
aad
lcall
jne
inc
xor
das
fildll
xchg
or
lds
aam
and
sub
pop
push
cmpsl
mov
push
dec
cs
cmpl
push
sbb
and
pushf
jne
push
pop
mov
adc
inc
mov
ljmp
loope
test
outsl
adcl
sub
and
inc
jmp
dec
fs
push
loopne
mov
xor
je
sub
cltd
pop
sbb
sub
loopne
loop
pusha
cmpb
fcmovb
test
mov
gs
loop
cli
mov
inc
je
scas
aas
push
and
xor
ds
fwait
cli
lahf
test
pop
dec
mov
xchg
mov
stos
fwait
das
pop
popf
insb
popf
add
push
sti
fdivrl
dec
cmpsl
idivb
insl
daa
xchg
inc
inc
iret
fcomps
popa
adc
add
push
mov
mov
adc
push
or
add
js
jmp
test
pop
lods
cmpsl
jbe
cmp
lea
push
prefetchw
pop
add
les
movsb
or
inc
sar
mov
or
mov
cmp
cmp
push
shrb
sti
cltd
arpl
or
call
or
data16
cli
inc
daa
clc
cmp
lods
mov
insb
add
test
mov
inc
and
ljmp
sub
enter
jnp
dec
add
add
mov
call
insb
cmpsb
fcmovu
cmp
cld
add
push
adc
loopne
xor
fists
lock
or
xlat
out
cli
mov
sbb
mov
xchg
and
inc
or
insb
ret
gs
jne
add
addb
jmp
mov
cmc
ret
push
shrb
movsb
ljmp
push
fwait
and
mov
push
and
push
mov
ljmp
rcrl
loope
aad
inc
xor
fcomps
aaa
push
pop
testl
cmpsb
and
inc
mov
jecxz
xchg
jno
inc
shr
add
loopne
push
insl
fwait
sbb
ljmp
push
mov
or
lahf
addr16
jmp
sti
sub
cmp
sub
fs
stc
hlt
add
mov
cli
ret
mov
movsb
andl
loope
or
xchg
movsl
outsl
aas
xchg
push
push
mov
push
add
pop
and
jnp
popf
xchg
nop
not
aad
clc
adc
xchg
add
mov
and
cmc
pop
sub
mov
ja
inc
inc
loop
out
or
pushl
inc
xlat
cmp
loopne
adc
in
scas
pop
je
ja
icebp
push
mov
lret
aaa
mov
std
xor
dec
movsb
sarb
js
ss
add
xor
pop
jo
fistl
inc
push
repz
jl
cmc
pop
add
jmp
inc
into
cmpb
push
aad
int
cmc
jg
jge
call
ret
add
jo
dec
add
orb
mov
jg
or
inc
push
sub
add
outsl
jl
aas
mov
lea
cmpsb
or
insb
mov
bound
insl
rcrb
cli
pop
adc
sbb
xchg
test
out
xchg
scas
jns
lock
sarl
sbb
dec
movsb
sbb
mov
aas
inc
xlat
shlb
stos
int3
in
jnp
mov
cld
jle
add
incb
add
dec
mov
test
in
aaa
rorb
pop
mov
rorb
and
in
mov
cltd
mov
jle
pushl
sub
pop
jne
shlb
pop
mov
and
repz
or
dec
subb
mov
je
incb
test
nop
mov
fisttpl
jl
ret
shl
push
mov
lahf
pop
add
dec
push
fistps
mov
pop
cli
pop
mov
fwait
loope
jge
jne
xchg
xchg
pop
bound
and
jecxz
sub
cld
adc
sub
or
jmp
cmp
insl
insl
xor
mov
mov
inc
out
shl
fcoml
cld
out
inc
or
xor
pop
ja
cli
insl
jecxz
add
data16
or
nop
jmp
pop
inc
xor
or
jg
jmp
and
mov
add
cltd
js,pt
xchg
mov
add
adcl
sti
xchg
addl
rclb
std
call
lret
incl
xor
outsb
xchg
push
pop
and
add
sbb
aam
lock
xchg
mov
and
push
pop
cmp
cmp
jl
mov
ds
cmp
dec
sbb
cmp
mov
movsl
xlat
sahf
mov
aam
cmp
clc
orl
rolb
cld
jge
jno
xor
add
xchg
lods
lea
cmp
aad
mov
jl
sbb
test
repnz
sub
addr16
adc
les
shll
cmp
xchg
pop
inc
into
iret
mov
add
add
iret
xchg
add
mov
add
xchg
mov
lret
mov
test
push
and
dec
popf
std
dec
pop
dec
jmp
rcr
xchg
add
je
xcrypt-cfb
cmpsl
movsb
sbb
icebp
lahf
ret
jp
inc
addr16
and
adc
pop
mov
cld
in
pop
add
xchg
mov
sbb
xor
lock
sarb
cmpsb
adc
pop
xor
mov
push
aas
adc
out
unpckhps
push
xor
fisubl
test
insl
cmc
inc
and
lock
loop,pn
mov
and
add
out
xor
int3
adc
scas
cli
aam
loopne
mov
sub
dec
rorb
int
stos
lahf
inc
sub
dec
ret
and
enter
test
int
mov
cmp
or
shrb
test
or
push
jl
and
xorb
or
xchg
jle
add
jmp
fwait
mov
inc
pushf
jecxz
flds
sahf
pop
cli
testb
xlat
je
cmpsb
adc
ret
loopne
sub
jno
adcb
inc
lds
loop
lret
xlat
jle
push
filds
loopne
jmp
subb
enter
sarb
aad
mov
rclb
loope
sub
sbb
mov
js
xor
adc
leave
cmpsb
loop
inc
aad
or
mov
dec
push
or
xchg
push
or
add
and
jbe
mov
fldl
test
sbb
jle,pn
das
fs
cmp
xchg
ret
les
mov
pop
scas
pop
dec
inc
xchg
roll
push
xor
xchg
xchg
hlt
out
push
adc
rolb
sahf
jno
push
cld
data16
cli
pop
mov
loope
pop
cmc
cmovge
rol
aas
ret
sub
pop
mov
mov
rcrb
inc
mov
push
jo
cs
orl
sbb
psubsb
push
add
xchg
push
mov
jecxz
rcr
pusha
repnz
lahf
test
or
dec
js
in
das
imul
cmpsl
and
fs
int3
inc
movsl
mov
lret
push
idivl
aas
sbb
push
add
call
xlat
loop
fwait
insb
push
cmp
mov
push
xor
mov
mov
dec
dec
add
sbb
imul
pop
mov
fsubs
lcall
mov
je
xor
das
jl
mov
push
mov
jns
or
dec
cld
and
test
sub
and
push
mov
arpl
fmuls
push
data16
fisubrl
xor
fcomp
sbbl
or
dec
outsb
movsb
subb
sub
push
add
cs
decl
add
add
int3
mov
cld
psrld
into
jns
and
into
loope
inc
addr16
sub
mov
pop
pop
push
repz
aam
mov
pop
hlt
sub
sbb
rorb
mov
jo
jmp
pop
add
jp
push
inc
call
jecxz
icebp
cmp
shrb
xor
mov
sti
ficoms
push
jg
xchg
std
ds
test
lret
int3
les
icebp
push
inc
loope
xor
mov
ss
mov
add
call
loope
pop
or
mov
push
loope
movsl
ret
pop
shr
fwait
or
or
das
pop
adc
mov
movsb
and
out
test
cs
cmp
icebp
dec
jne
and
cmpsl
and
into
and
pop
dec
mov
insb
loopne
sarl
jle
and
cli
mov
cld
insb
push
push
jecxz
repnz
orl
jno
mov
mov
les
fld
repnz
pusha
fwait
inc
sbb
or
mov
je
loop
push
mov
lahf
test
mov
dec
adc
pop
sub
dec
cltd
sahf
inc
loopne
movsb
add
xor
in
outsl
aad
insl
jle
pop
mov
in
in
inc
rorb
and
add
scas
jecxz
mov
sbb
insl
call
mov
js
addb
shlb
or
es
push
inc
inc
inc
pop
add
mov
adc
rolb
cmp
out
dec
sbb
xor
xchg
push
insl
clc
popf
cmp
shrb
test
lret
jae
push
lret
popf
daa
pop
sarb
sub
xor
pop
lret
sub
dec
pushf
mov
mov
insb
cli
pop
push
ret
ljmp
fwait
push
outsb
dec
insb
cli
mov
push
pop
push
loope
xor
pop
pop
push
int
into
dec
loopne
or
fstpt
xchg
mov
mov
je
mov
ficomps
jge
mov
cmp
mov
xor
lcall
out
xchg
and
lahf
jecxz
lcall
aad
mov
push
test
js
aad
test
in
scas
subb
or
inc
dec
test
lea
int3
push
dec
sbbl
cmp
mov
fiaddl
aas
andb
sub
rcl
outsl
mov
inc
and
fisttpl
mov
lds
xchg
inc
movsb
or
xor
cltd
cmp
inc
sub
pop
insl
icebp
jo
aas
sub
enter
and
lahf
inc
bound
pop
loope
orb
inc
test
push
pop
push
test
mov
subl
sbb
xlat
mov
out
mov
dec
loopne
filds
je
fdivrs
aad
imul
das
ror
mov
mov
scas
xor
mov
xor
stos
fistpl
add
xor
and
mov
into
push
adc
ret
xchg
daa
mov
ja
cmp
stos
cld
lods
mov
nop
icebp
sarl
jae
dec
fistl
jmp
cwtl
adc
sbbl
and
pusha
cmp
mov
cmpsl
iret
call
insb
or
push
xor
lock
test
push
lea
enter
sub
or
xor
out
xchg
mov
mov
pusha
or
subl
pusha
mov
cmpsl
std
nop
test
stos
call
mov
mov
orb
inc
jbe
mul
and
or
pop
xchg
cmp
clc
jbe
mov
fnstsw
and
xchg
pop
and
iret
nop
inc
jp
push
scas
add
shl
or
call
pop
push
icebp
adc
cmpl
jae
into
gs
ljmp
js,pn
lcall
fdivrs
clc
pop
shll
lret
jmp
jecxz
push
and
popf
nop
dec
inc
dec
pop
lock
jbe
cs
jp
pop
enter
cli
stc
test
sub
jo
inc
gs
adc
mov
pop
mov
xor
aaa
jg
gs
xor
rcrb
or
adc
adcl
mov
pop
clc
cwtl
cmp
cld
fildll
push
inc
sbb
push
fnstsw
mov
incl
jg
sahf
jmp
mov
fdivrl
ret
or
mov
rolb
and
push
in
add
mov
xlat
pusha
hlt
xor
dec
mov
stc
ret
xchg
jne
cmpb
mov
cmp
and
jmp
or
dec
jne
ss
imul
or
pop
adc
rclb
cmp
mov
xchg
xor
cmc
int
add
dec
loop
nop
rolb
pop
push
andb
mov
mov
filds
pop
inc
xor
jne
stos
mov
hlt
push
mov
scas
jl
mov
xchg
pop
sub
lock
jmp
pop
mov
or
ficoms
imul
sub
or
out
das
adc
shll
pusha
and
mov
jne
mov
inc
add
imul
mov
adc
inc
ljmp
lods
mov
mov
pmullw
cli
lods
mov
inc
jle
ret
mov
les
adc
inc
ret
fmul
sbb
sub
bound
and
mov
lret
cld
pop
ret
push
in
lcall
fcmovu
clc
push
push
sub
add
xchg
pop
push
cltd
push
or
std
sbb
mov
or
inc
loope
rorb
lods
sti
jl
repz
push
pop
popa
pop
faddl
pop
shrb
stos
mov
mov
push
hlt
pop
hlt
inc
jmp
out
push
add
mov
ficomps
or
and
pop
enter
add
mov
fucomip
add
mov
lret
les
add
out
push
add
push
lock
jne
jecxz
scas
movb
push
push
sbb
out
iret
jo
xor
inc
mov
add
push
rorl
shll
ss
lcall
cmpsb
clc
cmc
dec
or
ss
mov
or
mov
popf
data16
in
sbb
cltd
bound
mov
xchg
sahf
incb
addl
fistps
into
cmp
and
filds
aas
xchg
and
and
and
inc
mov
call
pop
test
lods
xor
inc
test
aad
fidivrs
push
rdpmc
cmpsb
push
stos
add
sub
lds
pop
add
sub
out
outsl
mov
jno
inc
les
imul
cmp
cmp
call
inc
clc
lret
rclb
sub
scas
test
cmp
fiadds
dec
daa
ds
mov
mov
insb
mov
sarb
shl
sbb
jno
add
pusha
cmc
add
and
rcll
clc
and
jle
mov
pop
sub
add
pop
dec
ficoml
sbb
mov
xor
lret
les
or
adcl
fsts
mov
add
aaa
jne
push
test
mov
jl
popa
daa
jae
inc
adc
nop
inc
jg
das
add
fdivp
pop
mov
sarl
jmp
out
cltd
icebp
scas
dec
xor
or
xor
in
sbb
push
ljmp
jl
pushf
sub
jp
jge
cmpb
imul
outsb
add
xor
rcrb
int3
add
movsb
into
inc
adc
xchg
js
push
ljmp
mov
scas
pusha
fdivs
jge
pop
push
cmp
jl
xor
cld
sbb
je
mov
lods
sbb
mov
and
fwait
sub
xor
ret
inc
jge
dec
clc
psrld
ss
ds
add
add
or
jno
push
fdivl
adc
push
aam
adc
cld
add
je
int
loope
dec
add
cld
cmp
in
push
inc
loope
and
imul
add
or
push
inc
xor
add
mov
sub
jo
movsl
adc
mov
pop
fisubs
call
filds
test
mov
add
jg
jns
lods
adc
cmpsb
cs
ret
sbb
stos
test
int
fdivr
xchg
xchg
cmpsb
aaa
popl
out
mov
inc
shrb
and
push
fstp
sbb
sbb
icebp
and
dec
jmp
xchg
fcompl
cwtl
adc
xchg
adc
pop
fistl
add
outsb
orb
mov
js
jp
adc
mov
test
sbb
out
fs
mov
jmp
test
xor
sbb
mov
sub
xlat
ficomps
fsubrl
cmp
add
cmp
mov
push
push
dec
mov
sahf
push
ret
lods
out
aam
lds
nop
das
aad
cmp
sub
ss
and
ret
incl
xchg
out
filds
jmp
cltd
mov
xchg
cmp
fisubrs
shlb
test
pop
lods
scas
pop
stos
loop,pt
ljmp
je
jns
xor
mov
xchg
lret
adc
xchg
ret
jne
clc
cmp
das
test
mov
add
outsb
cmpl
dec
dec
or
mov
lds
cmp
xchg
mov
movsb
adcl
mov
mov
jecxz
ret
shr
cmp
mov
inc
fsubl
sti
jl
pop
iret
pop
dec
pop
sbb
dec
stos
mov
enter
push
mov
mov
mov
add
ror
and
sub
mov
push
ljmp
inc
imul
lds
shrb
outsl
mov
and
sub
push
cli
cmc
sub
cmp
xor
clc
ffreep
mov
sbb
sbb
mov
sub
or
sub
and
sub
test
inc
lahf
orb
pop
icebp
loop
lea
mov
mov
pusha
pop
or
shl
dec
sarb
into
es
mov
xor
inc
cmp
in
in
loop
xor
mov
outsb
inc
fstpl
out
std
pop
jmp
cli
pop
sbbb
push
push
rclb
pusha
pushf
mov
out
sub
pop
pop
xchg
ds
pmaxub
arpl
lock
lcall
inc
rcr
push
mov
nop
sbb
popf
xlat
sbb
cmp
xchg
dec
popa
mov
pop
cld
dec
or
push
bound
cmpsb
ret
stc
adc
jmp
roll
and
lods
add
subl
adc
pop
adc
inc
jbe
or
ficompl
adc
fldenv
out
inc
insb
or
sub
sub
fwait
int
je
pusha
sub
arpl
addr16
mov
data16
lahf
pop
inc
outsb
dec
cmp
hlt
pop
pop
mov
call
mov
jle
mov
fbstp
std
lahf
repnz
add
mov
shlb
and
dec
push
incl
outsb
jmp
fnstenv
aad
insl
xchg
add
inc
push
fwait
les
or
jno
mov
insl
sub
mov
cltd
adc
pop
sbb
scas
mov
inc
popa
hlt
jp
pop
sbb
stc
xchg
movsl
icebp
mov
dec
sbb
mov
jo
add
dec
sbb
mov
pop
add
test
pop
stc
outsl
jo
add
jne
mov
sbb
mov
add
fstl
js
pop
pop
loope
std
popa
add
sbb
aas
mov
mov
pop
sub
ljmp
add
aam
cld
xchg
inc
je
mov
data16
or
sub
or
push
dec
jbe
cmp
add
mov
clc
push
sar
cli
dec
jg
inc
push
aas
shlb
sub
pop
adc
xchg
stos
arpl
and
or
cmc
scas
inc
xchg
jo
in
or
add
jmp
das
jno
sahf
jns
das
dec
pop
loop
and
test
std
int
push
push
inc
mov
jge
inc
stc
push
push
dec
lret
mov
pop
sbb
and
cmp
jmp
add
mov
cmc
adc
mov
roll
and
out
mov
push
sahf
addl
ljmp
cs
inc
mov
mov
jnp
outsb
loope
cmpsb
xchg
ljmp
xor
or
popf
jo
add
sub
jmp
pop
add
jg
lds
and
enter
sbb
rclb
and
imul
lret
and
sbb
dec
jp
xor
adc
sbb
nop
or
push
rcrl
push
cld
dec
rolb
ljmp
into
add
incb
inc
adc
push
inc
cs
out
sub
push
outsl
insb
mov
sbb
das
dec
pop
mov
and
outsb
jno
push
xlat
and
jmp
and
and
xabort
nop
enter
inc
fistpll
hlt
pop
icebp
insb
mov
or
push
shll
jg
jbe
outsl
cmp
fsts
and
or
les
cmpl
std
adc
call
out
sub
pop
xor
or
sbb
fisttpll
gs
lock
cmp
pop
in
jecxz
loope
into
dec
adc
push
xor
repnz
push
dec
jg
loopne
lock
nop
inc
mov
mov
push
mov
inc
adc
mov
cld
mov
push
incl
or
dec
ret
pop
push
inc
xchg
dec
outsl
out
fisubrl
cs
jns
jo
add
mov
sub
jecxz
sbb
std
add
ss
push
and
ret
loopne
inc
dec
mov
idiv
out
adc
pop
xlat
xor
lret
and
leave
dec
push
cmp
mov
daa
movb
cld
adcl
push
jo
repnz
or
xor
inc
aam
pop
sbb
not
inc
rcl
xor
add
dec
dec
aas
aaa
imul
add
lea
pop
pop
and
loopne
fcmovne
sub
hlt
div
sub
mov
dec
xor
xor
cmpsb
inc
inc
rcrl
push
add
cld
roll
cmp
cmp
ljmp
inc
lods
mov
xchg
cwtl
push
adc
mov
xchg
push
pop
xor
cwtl
cmpsb
mov
clc
lea
xchg
mov
jb
mov
daa
loop
hlt
cli
popf
sarb
cmp
sbb
and
jae
sbb
push
es
jle
jecxz
test
les
test
cmpsb
sbb
std
mov
mov
sbb
dec
imul
int
sub
mov
stc
insl
rclb
jmp
int
aas
into
andb
mov
dec
sbb
out
fdivrs
sbb
or
or
movsl
out
inc
mov
icebp
in
ja
sub
jo
xchg
in
mov
std
gs
push
fisttpll
jle
adc
add
out
sahf
or
pop
outsb
pushf
or
inc
bound
enter
mov
ret
lea
std
lods
inc
mov
cmc
xchg
xchg
mov
cli
pop
xchg
mov
jg
cs
icebp
rolb
or
add
arpl
repz
cmp
cmp
call
je
add
dec
aam
pop
inc
or
mov
inc
ret
outsb
xor
lcall
dec
test
fcoms
cs
fadds
js
sbb
push
lret
cmp
dec
add
insb
fnstenv
mov
pop
jo
inc
sbb
push
repnz
cs
pop
dec
jnp
dec
push
add
pop
sbb
lahf
add
sbb
push
xorl
add
sub
hlt
jle
mov
sahf
mov
or
cmpsb
xchg
xchg
mov
bound
add
fbstp
sub
xor
cmpsl
cmc
sahf
into
mov
dec
addr16
cmp
loopne
aaa
or
stos
cmc
aas
jmp
repz
mov
lods
pop
std
mov
test
sbb
or
sub
push
fists
lods
movsl
movsl
das
push
mov
lods
sub
push
mov
mov
push
xor
test
cwtl
mov
jbe
sub
lea
xor
ja
pop
shrl
xor
ret
fsubrs
sub
sbb
loope
test
les
push
les
jl
lea
or
mov
inc
out
call
or
clc
xchg
adc
addb
sbb
jp
negl
xor
add
dec
mov
cld
rorb
test
insl
js
pop
inc
dec
loopne
mov
or
mov
jmp
sub
xchg
inc
sbb
and
xchg
stc
icebp
daa
cmc
test
aas
rclb
mov
std
mov
int
notl
mov
in
inc
adc
adc
inc
push
rolb
push
in
je
inc
lods
jle
fwait
mov
aam
gs
push
or
in
test
mov
fs
cmpsl
xchg
inc
lcall
mov
add
adcb
sti
or
lcall
jb
jg
dec
xchg
mov
xor
rolb
dec
movhps
sub
or
pop
jl
cmpsl
std
sbb
cld
xor
pop
adc
es
sbb
xchg
mov
jne
sbb
hlt
pop
inc
lds
in
hlt
test
push
enter
sub
or
push
inc
and
scas
sbb
movsb
cld
jecxz
test
aas
adcb
dec
sub
aas
cld
or
jg
push
inc
mov
in
loop
push
rolb
xor
test
sarl
lods
xchg
mov
cmp
pop
test
mov
adc
test
data16
addr16
lcall
es
xor
jmp
inc
movsl
lock
adc
test
movsl
mov
and
and
pop
test
and
popa
lods
aad
add
in
mov
ljmp
mov
lds
jbe
mov
mov
sahf
dec
push
jns
mov
xchg
xchg
dec
jg
mov
mov
jne
leave
popa
inc
fadd
test
in
cmp
jnp
lock
xor
push
mov
xorl
aas
inc
sub
lfs
popf
and
dec
loopne
iret
jp
adc
mov
inc
and
add
out
mov
dec
and
cli
lods
inc
fbstp
orb
mov
add
out
cld
mov
mov
scas
xor
push
ja
loope
sbb
lret
push
mov
aaa
jle,pt
mov
vmovhps
rcrl
push
add
inc
jno
push
jo
jo
sbb
cli
inc
lods
aam
and
jecxz
jo
add
mov
fdivrs
cwtl
mov
loopne
mov
fs
in
mov
xchg
mov
mov
adc
lock
ret
lea
inc
add
jecxz
and
data16
push
mov
ja
cltd
fsubs
adc
scas
add
les
ss
cmpsl
es
cmp
or
push
dec
shrl
jmp
add
xor
into
mov
ss
inc
fadds
sub
leave
lock
ret
fbld
mov
pop
popa
mov
mov
mov
int
pop
pop
pusha
add
inc
movsb
mov
sub
sbb
push
pop
ljmp
add
cmpsb
fisubs
sbb
xor
xchg
cmpsb
shl
and
add
or
or
xor
lea
pop
std
or
push
sti
inc
cmpsl
xchg
mov
pop
or
pop
dec
scas
push
repz
push
mov
sbb
mov
pop
rcrb
fnstcw
out
scas
push
aad
lods
xlat
aaa
mov
mov
xchg
sbb
xchg
mov
jp
outsl
out
lock
lock
mov
push
rol
mov
dec
int
xor
das
jecxz
and
pushl
loopew
jb
add
pusha
cmpsb
stos
cmp
xor
xor
lret
push
pop
clc
das
les
inc
xchg
mov
dec
jnp
test
mov
lock
mov
ret
out
fsubl
pop
mov
les
addl
ret
loopne
cwtl
mov
cmp
push
cmc
push
ret
push
in
fiadds
cmc
inc
loope
fidivrl
es
xchg
pop
mov
shlb
cmpsl
add
push
push
and
lret
rcl
dec
sarl
js
xor
adc
imul
mov
and
cld
cmpsl
int
push
iret
imul
pop
xor
and
jg
jno
clc
cmpsb
jbe
jmp
in
ds
add
jbe
pop
cwtl
and
ja
mov
in
jl
aad
pop
inc
stos
cmc
jp
sub
xor
sarb
pop
fcoms
sbb
cmc
mov
jmp
mov
push
add
or
or
adc
push
arpl
call
mov
leave
xchg
push
adc
xchg
popl
loopne
sahf
int3
dec
shrl
fs
sahf
aas
ja
cmp
adc
jb
xchg
in
jg
xchg
imul
cld
sub
pushl
pushf
mov
cmp
inc
popa
sub
lock
lret
jbe
add
dec
or
dec
mov
add
insb
pusha
push
enter
fs
loop
stc
lahf
and
dec
mov
fucomp
sub
mov
mov
repz
loopne
xor
xor
and
jmp
mov
jp
loope
xchg
scas
mov
inc
ret
xchg
addr16
lock
mov
adc
sub
ds
imul
fisttpll
test
push
xchg
inc
inc
inc
inc
sbb
and
pop
mov
popa
or
sub
inc
inc
call
and
jmp
in
dec
ljmp
nop
lds
int
pop
mov
inc
push
bound
fisttps
call
sub
stc
jg
addr16
sbbb
xor
mov
jle
call
out
sbb
inc
push
mov
dec
rcr
mov
mov
inc
movsb
sbb
shll
sub
mov
dec
mov
jnp
jecxz
movsb
jp
fildl
not
out
aaa
loope
sbb
jmp
fidivrl
fldcw
adc
mov
in
rcrl
frstor
test
in
adc
fnsave
sbb
int3
lock
push
add
or
push
rolb
inc
fisttps
add
dec
cmp
int
sub
lcall
mov
repz
rol
mov
mov
adc
pop
cmp
jmp
jl
jge
or
sbb
addl
push
bound
xchg
jle
shlb
jp
je
adc
std
jp
insb
xchg
in
jns
out
lock
clc
dec
movsb
pop
gs
arpl
mov
notb
test
mov
movsb
add
pusha
cmp
les
iret
push
fisttpl
adc
int3
sbb
pop
add
cmpb
sub
stos
pusha
xor
cltd
adc
jp
cwtl
sub
sub
aas
ds
xor
pop
mov
adc
addr16
sub
incl
int3
fstpl
mov
add
pop
sbb
mov
mov
call
adcl
cmc
test
jbe
mov
inc
rclb
sbb
lods
popa
cmp
cmpsb
lock
jmp
sub
cld
add
mov
nop
push
jne
xchg
xchg
inc
test
push
jg
add
nop
sub
mov
adc
sahf
sub
jg
arpl
xchg
pop
iret
lret
aam
dec
sbb
push
push
xor
push
inc
mov
fsubr
add
stc
je
add
add
add
xor
adc
push
fs
mov
sahf
cmpl
cmp
cli
arpl
adc
mov
or
arpl
and
addl
arpl
adc
jbe
loop
push
fdivl
outsb
lds
push
aaa
push
cli
pop
cld
ret
stc
pop
add
inc
cltd
int
cmp
out
ds
jns
mov
or
cmpsl
int
push
mov
shl
test
ljmp
fcomip
push
loopne
mov
lock
bound
dec
mov
mov
pop
jle
add
mov
xchg
iret
insb
notl
pop
stc
and
sbb
and
lock
lret
sbb
imul
leave
mov
iret
shr
cmp
ss
out
into
mov
cwtl
push
out
jb
rclb
fwait
cmc
aaa
add
inc
adc
mov
sbb
fisubl
mov
inc
xor
insb
fidivl
xchg
push
aad
sbb
add
sub
xchg
mov
sbb
lret
faddl
add
int
or
mov
std
xlat
or
aad
sbb
dec
cmp
push
cmp
xor
nop
jno
fstp
push
xor
and
push
sub
cs
push
jmp
call
pop
jae
push
shlb
or
sbb
mov
cmp
test
jo
andl
test
jns
inc
js
cmp
loopne
or
sbb
inc
lahf
ds
fadd
arpl
aas
out
or
aad
sub
ljmp
mov
jnp
push
lock
sub
dec
pop
mov
lahf
testl
push
add
leave
mov
cli
scas
dec
and
or
out
mov
fsubs
add
sub
test
inc
mov
cld
sti
aas
imul
into
dec
lret
add
int3
or
out
std
shrb
mov
inc
fdivs
or
shll
popa
and
movsl
fbld
add
stos
lret
add
aad
lods
stos
or
xchg
xchg
das
mov
ror
mov
test
and
aas
mov
aam
sbb
mov
fwait
mov
les
and
mov
xchg
cld
push
xor
push
and
jno
das
cli
pop
jmp
int3
ljmp
push
clc
adc
pusha
in
loopne
xchg
dec
enter
pop
jmp
adc
jmp
in
mov
cmp
push
int3
ret
sbb
outsl
mov
mov
decb
add
dec
insb
popf
xchg
push
shrb
lcall
cli
push
nop
mov
inc
sub
scas
mov
jge
add
in
test
dec
mov
test
clc
adc
jne
fs
mov
cmp
cmpsb
mov
add
stc
and
xor
mov
imul
mov
nop
rcrl
testb
push
and
test
inc
roll
ret
clc
jmp
aaa
or
mov
cld
push
push
sbb
add
loop
pop
sub
enter
loopne
jo
add
sti
jge
xchg
rclb
jb
aas
push
push
and
cmpsb
cmc
das
add
add
xor
or
push
dec
pop
rcr
add
fidivrs
push
push
repz
mov
adc
cmp
sti
scas
jb
leave
faddl
add
shl
pop
ljmp
push
pusha
cmp
rorl
sahf
lds
loope
aad
inc
repz
adc
and
cmp
dec
xchg
fsubrs
sarl
lods
inc
lret
sbb
mov
and
and
sbb
std
push
faddl
popf
shl
insb
mov
xchg
shll
cli
fs
sbb
ret
add
leave
ljmp
orb
out
pusha
sub
push
shll
aas
inc
push
or
and
push
lcall
ljmp
hlt
and
inc
sahf
jbe
jne
sbbl
xchg
roll
aaa
pop
lcall
xchg
mov
jg
push
pop
js
xchg
aaa
pop
cwtl
pmulhuw
fbld
fldt
lea
pop
mov
sbbb
call
les
out
jl
and
push
jp
aad
mov
loope
test
or
mov
jle
out
addl
sub
jmp
ret
fs
or
inc
jne
test
dec
shrl
mov
aad
cmp
push
cvtdq2ps
out
std
cmp
daa
jle
push
jl
les
dec
mov
xor
scas
mov
cmpl
lcall
or
lret
inc
and
cmp
pop
clc
sub
sub
adc
pop
pop
jnp
lock
or
and
adc
xchg
xorb
arpl
sub
test
into
add
inc
shll
lock
sbb
mov
cmpsb
and
jl
incl
add
sbb
dec
pop
les
in
fists
sub
incl
rolb
mov
add
lcall
xor
push
outsl
xchg
add
xchg
loopne
mov
loop
sbb
enter
stc
or
rolb
mov
loope
aam
push
data16
mov
int3
ret
in
jb
repnz
and
pop
xor
mov
fcompl
stos
aas
dec
xor
lret
push
sbb
push
dec
or
mov
mov
pop
mov
cmp
push
ds
mov
movsb
out
dec
loope
cmpsl
cmp
out
lods
scas
adc
pop
outsl
sbb
push
adc
decl
mov
adc
mov
gs
js
inc
rol
inc
leave
xchg
push
mov
adc
dec
mov
jge
push
test
mov
mov
dec
sub
push
aaa
sbb
jecxz
int3
stos
out
addr16
pop
loopne
shll
fdivrp
cmpsl
sub
mov
mov
xor
lock
hlt
lock
lds
leave
push
icebp
das
push
xor
jmp
push
call
fidivs
and
push
ljmp
fdivrl
lret
add
or
or
push
lods
cmc
or
sti
test
notb
and
fs
cli
sahf
dec
jo
sbb
mov
cmp
es
aam
and
insl
or
inc
fldt
lea
int3
pusha
outsb
imul
adcb
add
or
in
je
xor
lock
lods
or
mov
xchg
push
inc
notl
ja
push
popa
jge
ret
xchg
pusha
loopne
ds
and
daa
outsl
loopne
insl
pop
sti
jns
pushf
in
ja
outsl
int3
test
pusha
fisubs
inc
or
lds
addr16
xchg
scas
mov
lds
pop
cmp
ljmp
xlat
mov
roll
or
jb
xor
mov
add
jmp
jnp
lds
aam
sbb
ds
mov
stos
sbb
stos
ss
jl
pop
idivl
test
ret
hlt
imul
inc
add
xor
adc
aad
in
loop
push
hlt
addl
in
aad
aad
mov
sub
lahf
addb
enter
mov
push
mov
out
inc
xchg
aad
pop
adc
lods
imulb
add
or
je
sbb
mov
xchg
add
testb
arpl
jmp
scas
cmp
insl
inc
or
icebp
xchg
out
jecxz
inc
mov
add
ljmp
jo
fs
bound
or
mov
cmp
add
flds
mov
cs
xchg
sub
gs
push
pop
or
adc
jb
xor
and
pop
or
mov
cld
hlt
lahf
sub
cmc
aas
call
sbb
and
adc
mov
je
test
in
test
cmpb
mov
sti
sbb
outsb
and
cmp
mov
jg
popa
or
data16
pop
out
testl
xor
mov
shlb
popa
pop
pushf
cld
loop
pop
pop
add
inc
add
andl
jo,pn
aas
add
pop
mov
ds
sbb
mov
jo
inc
aad
sbb
sarl
and
rcl
rol
js
adc
pinsrw
or
mov
aaa
xor
test
lahf
shrb
lahf
test
aas
pop
cld
xchg
push
mov
sub
into
loopne
dec
outsb
push
test
icebp
cmp
andb
xchg
movsl
jg
cld
data16
sbb
rcl
fstps
xchg
inc
jns
sbb
add
lahf
dec
roll
adc
sbbl
jae
push
pop
add
mov
or
insl
fbld
pop
outsb
sub
xor
std
orb
ret
leave
mov
gs
arpl
gs
inc
icebp
or
mov
and
pop
sbb
fsubs
rcll
jmp
inc
nop
lret
xor
inc
ljmp
ds
mov
mov
add
and
mov
cmp
int
xor
sub
lock
fisttpl
dec
inc
mov
mov
pop
outsb
int
add
and
sub
dec
cmp
xor
daa
mov
fs
push
pop
push
data16
jecxz
insl
loop
setns
sbb
int
push
inc
imul
pop
outsb
sti
loop
ret
cmp
rcr
mov
dec
xor
push
xchg
jl
scas
pop
mov
jmp
or
imul
fcos
xlat
out
scas
mov
cwtl
mov
sbb
decl
pop
mov
push
xor
lcall
les
test
jae
sub
xlat
repz
push
add
mov
push
aam
sub
psraw
cli
xchg
sub
mov
adcl
xlat
add
les
xchg
add
lods
and
xor
mov
cmp
movsl
or
mov
nop
push
xor
std
mov
pop
pushf
loopne
lock
adc
mov
dec
out
das
ds
aam
dec
popa
xchg
push
popf
mov
shll
aaa
pop
mov
outsl
into
cmp
jg
xor
push
pop
add
icebp
lcall
aas
cmp
xor
bound
mov
int3
inc
inc
sub
mov
adc
xlat
clc
add
fs
add
insl
or
jne
lahf
cmp
xor
mov
xor
mov
es
jg
mov
fdivp
or
popa
enter
adc
pushf
adcl
mov
mov
push
cld
mov
arpl
dec
in
jl
ret
nop
std
mov
or
mov
adc
jo
test
xchg
xorl
movsb
dec
pop
mov
xor
icebp
pop
push
add
aaa
push
adc
inc
push
ss
jmp
orb
mov
mov
arpl
pop
adc
inc
sti
add
pop
mov
or
rcrl
mov
loop
je
mov
pop
pop
dec
ret
mov
ret
adc
data16
jbe
jle
mov
out
cmp
rol
add
sbb
cmp
mov
inc
push
push
and
sbb
stos
lcall
push
fldenv
add
push
mov
xchg
insb
gs
shll
ss
in
loopne
push
addb
dec
lds
dec
lea
icebp
jnp
sarb
les
into
jo
fwait
inc
rcll
loop
andb
and
jle
sub
jno
xor
mov
in
inc
jecxz
jp
push
push
fwait
data16
jmp
mov
hlt
add
mov
addr16
dec
test
popl
popa
cld
daa
gs
mov
cmc
xchg
adcb
pop
loopne
push
dec
and
std
pop
adc
rcrl
xchg
enter
jecxz
push
jg
mov
mov
mov
and
sub
dec
add
jle
inc
cmpsl
sbb
cmp
loopne
stos
dec
sub
pusha
dec
inc
jl
push
push
inc
leave
lahf
push
shll
and
xor
repz
arpl
mov
testb
mov
jge
pop
jb
push
inc
aas
ljmp
pop
shl
repnz
xorl
pop
ret
enter
cmp
jmp
xor
adc
sub
and
lock
push
mov
insb
fucomip
sbb
xor
adc
push
int3
dec
sbb
loope
nop
movsb
mov
data16
lret
or
jns
je
sub
insb
popf
test
jp
mov
jbe
adc
andl
test
jo
arpl
ficoml
dec
pop
sbb
mov
aaa
pop
std
mov
cmc
jb
stos
clc
stc
aad
xchg
adc
aad
push
jecxz
or
jl
mov
shl
bound
dec
add
sbbl
mov
sub
int3
lea
bound
or
xchg
ljmp
and
cli
or
jmp
inc
fs
lock
cmp
inc
push
pop
push
comiss
loop
mov
fs
adc
dec
add
cmp
out
cmp
mov
and
sub
mov
lret
imul
lods
aad
dec
cwtl
loop
sub
cmp
sub
push
or
aad
xor
adc
shr
outsl
mov
jmp
sub
ss
data16
jl
outsl
xorb
xchg
jle
mov
sbb
sub
add
adc
insl
and
es
icebp
popa
ljmp
mov
pop
adc
neg
ficoms
mov
pushf
les
pop
pop
ror
out
repnz
aam
dec
push
testb
cli
loop
pop
jecxz
insl
lret
pop
dec
clc
pop
cmc
xchg
jge
add
jno
dec
nop
mov
inc
mov
int
pop
lock
jecxz
xchg
shll
into
mov
push
shrb
push
mov
or
jmp
das
clc
and
xchg
fsubr
ljmp
cmc
mov
inc
pusha
or
lret
into
test
mov
iret
pop
imul
inc
inc
cmp
pop
cmp
in
push
jle
and
mov
mov
mov
sahf
popa
mov
out
lock
nop
inc
push
pop
in
hlt
or
scas
xor
in
test
xchg
mov
test
call
in
data16
cli
sub
idivl
add
jle
das
outsb
gs
test
ljmp
cwtl
and
xchg
cmpsb
imul
andb
lds
add
sahf
sbb
xlat
pop
mov
rol
sbb
adc
xchg
sbb
daa
push
xchg
push
out
lret
in
outsl
cli
js
sub
imul
sub
cmp
inc
popa
xchg
sbb
pushl
popf
inc
nop
add
jecxz
cmp
mov
pop
adc
xchg
sbb
dec
fnstsw
fwait
icebp
adc
insb
dec
roll
add
dec
cmpsb
sbb
enter
jbe
sub
mov
jg
aam
ja
or
add
fucomip
cld
push
push
ret
and
cmp
lock
or
adc
adc
ret
or
push
mov
xchg
call
mov
insb
int
fadd
roll
mov
lock
pop
adc
rcr
pop
aas
cld
mov
roll
cld
xlat
pop
xchg
leave
out
stos
mov
insl
push
cld
ds
add
and
aam
dec
call
mov
loope
mov
push
sub
repnz
rcl
sbb
ja
jmp
or
cmp
dec
jmp
inc
xchg
test
xor
loop
inc
jp
cmp
movsb
shlb
loop
sbb
scas
loop
shll
mov
push
push
stos
jbe
jge
ja
jg
inc
push
insl
daa
add
imul
sar
arpl
and
mov
dec
or
js
or
push
mov
sar
adc
jno
test
xlat
cmp
push
roll
jl
push
add
call
lods
xchg
dec
rclb
push
pop
scas
inc
loope
adc
xor
xor
pop
dec
fcoms
mov
das
jle
jg
lret
or
or
mov
jne,pn
adc
daa
xchg
xchg
pop
js
cmp
pop
addl
add
sbb
pop
icebp
xchg
out
das
jo
mov
pop
cli
inc
jp
xor
dec
dec
xchg
sbbb
pop
lret
xor
adc
outsl
or
sbb
mov
dec
clc
pop
or
add
jl
ret
sbb
cmpl
dec
movsb
sbb
dec
jecxz,pn
mov
fisttps
shl
shr
loopne
or
xor
es
aas
sbb
inc
ja
mov
ds
push
xchg
sbb
jne
lods
adc
iret
xor
xchg
mov
mov
pushl
mov
push
push
adc
mov
jge
add
inc
or
add
cmpsb
sub
cmp
jae
loop
aaa
test
shlb
jb
pushf
stos
fidivs
cmp
mov
adc
popf
hlt
adc
mov
adc
add
fmuls
pop
mov
adc
sbb
mov
ljmp
add
fidivs
adc
fcomps
addb
sub
mov
bound
incb
mov
adc
outsl
xchg
test
jecxz
jmp
mov
xchg
aas
enter
xchg
std
sub
and
loope
shll
lock
f2xm1
call
ficompl
push
push
mov
xchg
das
push
mov
in
add
ja
repnz
jo
out
in
rcl
add
push
mov
aad
ds
jo
out
push
mov
jnp
xor
cld
insl
push
xchg
jmp
cmpsb
mov
ja
mov
shrb
cmp
xchg
adc
mov
sub
xchg
lcall
lcall
inc
pop
push
in
out
js
or
and
mov
pop
aas
jg
mov
inc
leave
or
pop
int3
lret
add
add
rcrl
push
mov
add
push
inc
jecxz
imul
ja
outsb
and
inc
rolb
add
inc
daa
sub
icebp
inc
xchg
or
cld
or
lret
sub
push
push
or
jle
jmp
dec
cmp
scas
mov
xchg
xor
rcrl
add
cld
test
fdivs
mov
push
iret
sbbb
push
sub
jl
icebp
stc
jne
cmp
cs
push
and
test
xchg
popl
icebp
pop
adc
xor
inc
cmp
add
sub
mov
icebp
adc
sbb
in
enter
cld
aas
in
bound
push
jb
mov
dec
sbb
push
sbb
inc
aaa
aad
adc
jmp
adc
dec
lea
mov
faddl
inc
mov
sbb
call
xor
pushf
jle
jmp
mov
bound
xchg
daa
sbb
mov
jg
in
stc
shll
mov
jp
push
jl
popa
jo
adc
jge
loopne
pushf
adc
mov
negl
sti
test
add
cld
out
ss
addl
into
test
in
inc
sbb
mov
pushf
jae
add
loopne
cmpsb
mov
cmp
xchg
hlt
imul
mov
pop
cwtl
lea
je
insb
push
jecxz
cmpeqps
loopne
inc
mov
pusha
pop
mov
sub
mov
loop
mov
fs
xor
mov
mov
inc
sub
mov
inc
inc
mov
in
imul
mov
orl
inc
loopne
in
xor
cmc
out
popa
popa
bound
or
pop
pop
lea
rcll
and
lcall
jb
jp
loopne
mov
imul
mov
mov
adc
test
add
and
or
das
lea
aas
fdivrl
std
mov
pop
xchg
insb
int
inc
shlb
add
test
add
outsl
bound
pop
shl
push
adc
decl
lods
push
pop
sub
lds
jl
xchg
xlat
sbb
sub
sub
sub
inc
dec
loopne
or
pop
adc
popa
test
lahf
push
es
out
mov
inc
pop
ret
aad
lods
push
es
push
aas
or
scas
je
xchg
fwait
cli
push
or
xchg
ljmp
fld
add
cmpl
push
jg
out
into
cmp
push
pop
or
jmp
and
dec
out
inc
cli
roll
lret
es
hlt
scas
sti
push
and
pop
nop
adc
mov
mov
out
and
pop
mov
sub
mov
sub
scas
mov
cmp
mull
cs
cld
sahf
cld
aas
cld
add
sub
das
push
mov
mov
mov
out
aaa
rcll
mov
sub
repnz
adc
lcall
pop
outsl
mov
or
jb
sub
js
sbb
faddp
imulb
mov
or
call
mov
mov
xlat
leave
xor
cmp
sarb
dec
xor
mov
adc
movsb
aaa
std
mov
scas
push
xchg
add
fcoms
outsl
or
inc
jp
jb
jl
inc
hlt
pop
add
in
mov
cmove
les
jl
stos
inc
subb
rcrl
dec
or
sbb
add
mov
mov
hlt
mov
test
push
inc
mov
xor
movb
dec
fdiv
js
push
xor
dec
shrl
je
call
and
or
ljmp
or
add
adc
xor
bound
cmp
sub
sbb
push
push
or
jp
pop
test
leave
lds
mov
imul
lea
sti
pop
cltd
stos
pop
add
sti
xor
dec
clc
jmp
out
inc
repz
loope
loope
testb
pusha
sbb
fnstsw
mov
xor
sub
outsl
mov
ljmp
jle
jae
repz
ja
lock
pop
outsb
lret
rcll
in
aam
push
xlat
add
add
dec
movmskps
sbb
dec
outsb
xchg
xor
and
or
dec
mov
jmp
adc
mov
pop
fcmovu
js
mov
and
pop
cmp
add
fdivl
outsl
or
adc
cltd
pop
xchg
aaa
insb
rolb
out
jmp
nop
cli
inc
imul
out
jno
cmpsl
popf
outsl
mov
push
push
mov
dec
loope
loop
sbb
xor
clc
xchg
push
ja
push
jns
fwait
xchg
popf
leave
bswap
inc
lcall
clc
or
cmp
nop
movsb
xchg
lahf
or
add
mov
inc
jnp
jmp
sub
pop
pop
jb
add
mov
sub
es
cwtl
rolb
adc
clc
mov
mov
xchg
mov
repnz
gs
and
mov
mov
and
fbld
adc
mov
push
and
call
insl
dec
ja
push
pop
sub
xchg
pop
pop
inc
rorl
fiaddl
mov
add
repz
imul
test
cmpsl
adc
sbb
cmp
cli
pop
loop
push
lea
lods
jp
dec
pusha
lock
pop
cltd
clc
out
push
or
mov
xchg
xchg
or
addb
stc
loop
adc
push
sbb
sar
cmpl
and
and
xor
cs
mov
sbb
fbld
test
jbe
or
push
sub
mov
daa
xor
xlat
push
adc
clc
mov
test
cmc
outsl
rorl
inc
clc
mov
in
out
addr16
testb
jmp
push
adc
push
mov
jo
cmpsl
dec
and
sub
adc
arpl
mov
jp
dec
ss
cmp
jg
sub
xchg
movsl
sbb
add
shl
movsb
push
lods
sub
pop
in
hlt
out
add
mov
dec
adc
call
movsb
or
mov
in
fsubl
pop
mov
push
mov
dec
addl
movsb
pop
mov
pop
mov
test
jp
inc
stos
subb
jp
mov
jecxz
sar
es
xchg
es
dec
jmp
xchg
jle
inc
popa
mov
ret
or
sbb
lock
incl
out
sbb
xor
rcrl
jmp
bnd
inc
insb
jp
sbb
hlt
and
add
pop
shrb
xchg
cmp
pop
add
ret
fcoml
mov
mov
pop
and
ffree
mov
test
inc
xchg
or
mov
ret
mov
add
xor
xchg
dec
test
in
pushf
mov
das
sar
stos
add
mov
xchg
mov
imul
mov
aaa
push
ljmp
jg
sub
jmp
pop
xor
xor
movsl
inc
cmc
jns
mov
jbe
and
push
scas
adc
movsb
popa
dec
out
sarl
inc
mov
cli
and
pushf
jge
pop
xor
aaa
dec
adc
mov
pop
adc
mov
adc
stos
sbb
jns
mov
push
cmp
xor
not
or
adcb
aam
mov
add
mov
add
mov
inc
rcrb
arpl
jle
test
inc
mov
or
rorb
fcmove
fldcw
jmp
push
xchg
jg
lahf
test
and
outsl
ss
sbb
imulb
mov
mov
popf
mov
push
int
jle
call
dec
cli
mov
cld
add
push
mov
sub
push
jnp
or
inc
cld
negb
cmp
jl
je
cld
mov
clc
or
aas
cmpsl
out
add
push
or
shll
adc
rcrb
mov
mov
fs
add
push
test
pop
call
outsb
jo
pop
mov
int3
or
dec
loope
fistpl
jge
push
adc
stos
jle
enter
pushf
outsb
xor
je
push
mov
sbb
in
cmp
pushf
and
push
adc
icebp
and
push
repz
cld
mov
bound
add
fcompl
pop
cli
in
push
inc
test
xchg
subl
dec
fmuls
pop
jbe
decb
mov
das
loopne
fimull
arpl
outsl
mov
es
pop
pop
mov
mov
add
pop
push
jbe
sti
aas
pop
lods
dec
and
xchg
mov
xchg
ds
repz
fildl
int3
insb
in
paddd
addb
mov
psubsw
add
movsb
adc
mov
jg
push
jecxz
sub
pop
lock
sub
cmp
in
mov
pusha
in
jbe
scas
cld
test
fcomps
js
test
sbb
or
jne
push
outsl
add
out
inc
dec
jp
dec
xchg
push
xchg
cmovb
sbb
push
xchg
dec
xor
loopne
add
pusha
clc
pop
lahf
inc
sub
xor
lds
int
dec
inc
adc
add
fucomip
dec
add
pop
mov
into
mov
sbb
sub
or
lock
mov
ret
inc
aas
jmp
sti
pop
cwtl
push
pop
add
cmpsl
in
sub
sbbb
mov
sti
and
mov
or
lock
push
ficomps
pop
in
ds
call
adc
addl
jle
ljmp
shrb
pop
lods
or
dec
mov
or
sub
icebp
adc
xor
pop
add
cmpsb
test
lods
out
push
addr16
es
jb
mov
xor
push
gs
inc
pushf
test
jle
int3
inc
push
jnp
testb
jae
popf
push
jg
mov
lods
cltd
divl
jmp
ljmp
dec
push
faddl
xor
cmp
inc
mov
dec
sbb
std
out
xchg
loopne
gs
add
add
or
jge
jns
xchg
scas
es
cmc
aas
loopne
xchg
mov
cmp
fcmovb
xchg
js
nop
cmc
je
aaa
popa
mov
fbld
test
or
cs
jle
or
mov
cmp
aas
or
fiadds
add
sub
mov
and
push
dec
mov
or
mov
loopne
and
or
addr16
cmp
or
jmp
push
repz
mov
pop
push
test
cld
mov
sbb
push
pusha
addr16
je
xchg
mov
ret
push
add
xor
decl
icebp
aas
inc
ljmp
pop
add
pop
dec
mov
das
jp
faddl
push
loopne
xchg
bound
fs
shlb
dec
adc
jns
adc
mov
jb
xor
mov
lods
gs
push
add
and
das
pop
clc
jmpw
stos
inc
icebp
das
aas
cmp
pop
ret
push
jg
xor
mov
decl
out
add
jnp
incl
insb
add
push
push
inc
mov
outsl
jo
and
mov
ljmp
rcrb
lock
push
out
mov
push
stos
and
clc
inc
or
dec
xor
push
push
add
test
stos
mov
ljmp
add
xchg
inc
je
jo
ficompl
cld
pop
fsubl
xchg
sbb
jo
jnp
insb
inc
sbbb
inc
adc
cwtl
adc
call
mov
cmp
enter
cld
xchg
aad
xchg
jle
aad
push
push
jb
mov
xor
pop
dec
fisubl
jnp
lea
jle
fistps
inc
movsb
andl
fmuls
jg
in
adc
fdivr
fwait
divl
incl
sub
xchg
dec
mov
loopne
ret
pop
mov
stos
repnz
insb
and
sbb
push
les
incl
mov
add
ja
movsl
sbb
lahf
repz
lock
mov
sub
jno
mov
and
pop
jb
mov
push
test
mov
int
mov
push
dec
jmp
hlt
push
leave
lock
push
xchg
mov
inc
into
fidivrl
add
orb
dec
repnz
jo
push
movsb
fsubr
out
addl
imul
sbb
xchg
cmp
adc
push
lcall
orb
leave
dec
and
ljmp
test
mov
shll
leave
popa
orb
hlt
cmp
mov
push
out
adc
andb
lret
ret
push
test
cmp
push
dec
lahf
rorb
mov
imul
xchg
xchg
int3
movmskps
or
cmc
xchg
sbb
decl
xchg
cmpsb
ret
xor
ljmp
sub
or
int
and
call
cwtl
adcb
ret
mov
cmp
mov
push
sub
sbb
imul
outsb
out
xor
sub
int3
sahf
mov
fdiv
and
clc
push
push
dec
movsb
das
adc
sub
push
adc
xchg
shll
addb
sub
xchg
incb
cld
pop
into
xor
adc
leave
jge
mov
mov
insb
rorl
sbb
inc
bswap
mov
cmpb
arpl
loop
out
popa
div
addr16
insb
js
cmp
dec
dec
xchg
jecxz
xchg
sbb
loopne
lahf
dec
cmp
mov
lock
mov
aas
nop
and
das
in
pusha
mov
ret
in
rolb
jmp
fsts
pusha
adc
cmp
fcmovb
je
dec
popf
xor
push
test
pop
pop
sub
xlat
hlt
jecxz
adcb
xor
stos
cmp
push
mov
fcoms
xchg
repnz
lret
cld
push
add
popa
pushf
jge
sahf
inc
fisttpll
cwtl
xchg
xchg
pop
mov
imul
xchg
or
jae
subl
decl
rolb
inc
lahf
mov
inc
or
outsl
jl
mov
popf
mov
push
mov
gs
imul
cs
inc
sbb
inc
inc
xorl
enter
sub
jo
sbb
js
jne
push
stc
jl
push
rcll
inc
loop
shll
push
insb
xchg
xchg
cmp
bsf
jb
or
cmp
into
mov
fwait
data16
and
in
cmp
bound
arpl
push
je
mov
cmp
and
add
ret
sar
add
aaa
mov
add
imul
and
sub
daa
loope
cmpb
add
or
btc
test
or
fists
arpl
cmp
aaa
addb
js
inc
imul
dec
je
sub
hlt
inc
outsl
shrl
pop
or
cltd
push
aam
bound
xor
sbb
add
sbb
ss
push
sub
dec
or
andl
or
bound
adc
rol
dec
daa
test
jge
test
cli
test
cmp
in
sub
stc
push
js
jbe
out
push
or
in
mov
shrb
loope
out
test
inc
cmpsb
mov
xchg
jo
xor
push
insl
aas
and
lret
lods
push
xchg
jnp
push
sub
mov
add
adc
sub
out
or
jae
push
cld
sbb
clc
or
mov
lods
jno
stos
sbb
in
frstor
mov
inc
jmp
outsl
cmpsl
cmp
dec
arpl
ljmp
push
rcrl
loopne
xchg
enter
jge
hlt
sbb
sub
add
fsubs
pop
aad
xor
push
shlb
mov
mov
mov
xchg
xchg
mov
mov
int
mov
popa
insb
sarb
xchg
push
jnp
cmpsb
fdivs
cli
pop
cs
fsts
add
adc
push
dec
jnp
add
xchg
je
lods
lret
pop
cltd
fidivl
sbb
inc
adc
mov
shr
out
repz
out
sahf
fistpll
es
imul
sbb
jl
test
arpl
push
xor
inc
out
adc
clc
mov
push
stc
xor
test
xor
shrb
xchg
xor
push
inc
mov
xor
pop
or
loopne
daa
dec
fdiv
imul
dec
icebp
mov
js
sarl
cmp
aam
scas
push
xor
cmpsb
push
mov
and
mov
aaa
xchg
icebp
rolb
add
cmp
dec
xchg
dec
dec
bound
jae
mov
jmp
lret
push
mov
push
in
fiadds
addr16
and
sbb
sbb
iret
cld
mov
sub
sahf
stc
xchg
adc
mov
sbb
inc
adc
enter
inc
ja
adc
xor
inc
jbe
jp
adc
es
fldt
ds
mov
jecxz
es
xchg
aam
cmp
adc
in
adc
js
jnp
push
cmp
jmp
test
xor
ja
push
fstpt
loopne
mov
xor
jecxz
scas
sti
out
jnp
in
dec
jp
mov
push
scas
pop
cmc
jl
ljmp
add
sbb
fwait
add
cmpsl
xchg
dec
ja
xor
pop
and
rolb
sahf
mov
push
adc
xor
sub
lcall
add
push
out
add
gs
addr16
repnz
push
mov
addb
mov
aaa
clc
addr16
mov
add
xchg
pop
jge
dec
imul
sbb
in
push
lods
mov
test
jecxz
testb
sbb
cmc
inc
inc
adc
or
das
in
mov
cmpsb
push
adc
movsl
insl
mov
loope
cmp
out
fadds
inc
aad
lock
adc
lods
mov
lcall
or
jns
fimull
sbb
ficoms
pop
xchg
pop
or
jmp
sbb
lea
sbb
xchg
pushf
mov
loopne
add
dec
lock
push
jge
add
in
mov
mov
or
adc
mov
sbb
inc
fisttpl
dec
mov
xchg
popa
mov
or
inc
imul
loope
inc
mov
repnz
cwtl
inc
and
sub
adc
test
add
push
mov
or
ret
add
xchg
das
or
mov
xorl
push
fisttpll
sub
scas
and
insl
push
cmpsl
adc
das
out
cmc
outsb
dec
mov
push
hlt
cmpsl
setns
imul
mov
push
lds
lret
and
dec
adc
xorl
hlt
insb
xchg
jne
fdivs
into
imul
sub
hlt
fs
fmull
les
jo
scas
std
stos
adc
adcl
and
mov
mov
jmp
repnz
adc
mov
pop
mov
mov
lock
movb
xchg
aam
ret
adc
xor
fcom
out
mov
adc
dec
insl
add
push
add
xchg
int
test
test
das
fnsave
sub
aaa
and
add
inc
clc
adc
or
leave
adc
cld
adc
cmp
jge
adc
jg
and
ret
cmpsb
jbe
add
mov
jmp
sbb
aad
incl
mov
cmp
push
adc
loope
rcll
clc
cmp
int
popa
sub
mov
lret
and
aaa
daa
ljmp
pop
mov
lock
lock
or
mov
mov
and
lock
xchg
lock
mov
sbb
xchg
popl
fs
cwtl
dec
sarl
pop
out
pop
jbe
lahf
sub
mov
test
lods
sbb
xor
movsl
icebp
xchg
call
pop
sbb
inc
sti
jmp
test
test
adc
ret
sahf
adc
add
pushf
inc
add
xchg
inc
shlb
decb
adcb
test
loopne
mov
inc
mov
insl
add
cmp
fbstp
add
add
stos
jnp
mov
divl
es
cmp
xor
cmpsl
insl
dec
mov
cmpsb
ret
cmp
push
push
xchg
aam
lds
test
adc
clc
aas
xchg
pop
loop
imul
subl
imul
repz
mov
lret
jnp
mov
test
add
xchg
pop
dec
sub
gs
mov
sub
addr16
roll
mov
push
call
and
sub
adc
add
xchg
stc
orb
xchg
mov
mov
gs
dec
es
in
lret
xor
mov
push
inc
add
mov
sub
rol
push
ss
pop
dec
repnz
or
push
and
shl
cmp
bound
rcrl
movsl
and
inc
ljmp
lret
out
sbbb
xor
and
push
les
push
lock
sbb
shll
sub
jns
les
rclb
jg
mov
mov
sar
movsl
inc
cmp
cmp
cmpsb
jne
pop
push
leave
mov
xchg
jmp
lods
inc
scas
lock
pop
clc
rcrl
adc
add
hlt
fadds
mov
pusha
arpl
adc
rclb
mov
mov
xor
sbb
and
imul
inc
pop
xchg
movhps
outsb
sarl
xor
jae
and
rol
rorb
clc
mov
xchg
sub
loop
test
pop
enter
add
xchg
popf
and
adc
dec
gs
pushl
enter
mov
ljmp
and
daa
mov
cmp
lods
dec
push
pop
jo
clc
lea
mov
add
cmp
test
cltd
cmp
orl
adc
insl
jecxz
jb
cltd
jmp
mov
or
adc
mov
sub
jp
sub
pop
dec
hlt
sub
mov
rcll
inc
mov
add
mov
adc
adc
cmpsb
xor
mov
int
or
cmp
shr
movsl
inc
daa
add
mov
jmp
movsl
out
pop
into
mov
and
repz
out
cs
pop
arpl
lods
xor
adc
pop
pop
jl
ffree
sub
xchg
dec
mov
outsb
or
fwait
clc
xorb
push
adc
adc
loop
fbstp
push
xor
jno
jnp
imul
ficoml
into
in
sbb
pop
mov
jae
dec
sbb
inc
in
or
mov
stc
and
dec
icebp
cld
and
add
xor
mov
inc
inc
jmp
pusha
mov
sbb
lret
and
and
pop
jmp
stc
ficompl
push
cmp
outsb
xchg
cmc
stos
dec
daa
sub
shld
inc
adc
je
push
sbb
je
in
lods
xchg
popf
inc
orb
dec
adc
js
insl
fmull
add
jo
inc
add
mov
jns
push
nop
adc
in
or
push
or
mov
push
xor
rorb
cmp
sub
sub
aam
adc
or
or
mov
push
dec
jae
mov
ficoms
test
add
scas
inc
sahf
adc
mov
les
mov
pop
test
sbb
icebp
dec
fs
jno
jo
loope
dec
ss
lods
and
testb
sahf
sbb
lods
mov
mov
aad
mov
sbbl
pushf
adc
inc
int3
outsl
or
inc
pop
movsb
sahf
sbb
dec
inc
js
lahf
nop
int
fstps
cld
imul
push
rcrl
xor
jne
pop
cmp
jbe
xchg
leave
ret
test
or
adc
adc
sti
mov
push
stc
cmp
nop
sbbl
jmp
stc
cli
sarb
insl
cmpsb
add
xchg
fwait
stos
stos
xor
xchg
sbb
cmp
icebp
lods
mov
xor
cmc
nop
mov
jne
xor
add
adc
xor
fnsave
xchg
fidivrs
js
xchg
jmp
in
sti
mov
push
mov
jo
inc
mov
cmpsl
insl
and
popl
inc
movsl
daa
fdivp
js
mov
mov
scas
pop
mov
sbb
das
inc
push
xor
into
and
arpl
enter
rolb
pop
or
imul
xor
ss
es
imul
xchg
addr16
stos
shlb
data16
adc
rcr
in
imul
movsb
aaa
into
lods
scas
mov
loope
fiaddl
rcll
shll
int
xchg
pop
lds
aam
out
movsl
addl
aad
lret
ficomps
jb
push
mov
dec
dec
int3
fwait
insl
push
push
xor
scas
or
jecxz
and
push
xchg
inc
sub
imul
lods
sbb
icebp
nop
cmp
adc
cmp
popa
subb
sahf
sarl
cltd
jno
das
jge
or
shll
pop
sub
xor
inc
xchg
mov
pop
dec
or
pop
xchg
cmp
andb
jmp
adc
xor
push
je
mov
rcl
shl
adc
sub
lods
mov
cltd
pop
mov
mov
adc
mov
shll
and
scas
aam
stos
jg
btr
sbb
or
add
outsl
loop
es
jg
cltd
jbe
and
or
xchg
xchg
mov
mov
inc
test
addl
orl
cs
in
inc
mov
jnp
pop
xchg
fldl2e
mov
add
loope
add
add
mov
mov
ret
mov
and
sbb
cmp
and
mov
int
into
push
push
out
daa
fs
das
push
leave
lret
inc
lds
movsl
jl
xor
outsb
and
mov
cmp
ljmp
mov
shlb
orb
adc
mov
xchg
out
xlat
adc
outsl
repnz
pop
and
and
and
push
cwtl
aaa
mov
jne
xlat
or
inc
pop
mov
fs
scas
sbb
addb
aad
mov
in
jns
loope
jne
or
sbb
pop
fstpl
xor
add
lds
cmp
add
mov
jbe
and
add
dec
mov
out
andl
fwait
pop
pop
fidivrl
popa
pop
in
push
gs
out
loop
jp
xchg
xchg
pushl
pushf
ret
lods
xchg
pop
push
sbbb
rorl
xchg
mov
jno
test
loop
xlat
bound
ret
push
sbb
ret
jnp
push
push
out
and
bound
inc
inc
sub
rcll
fstps
cmp
call
test
inc
lret
sbb
cmc
test
sbb
jno
jecxz
jmp
fiadds
add
add
jae
add
in
out
iret
jg
cmc
dec
sbb
or
stos
popa
mov
push
cmpsl
add
pop
inc
sub
sbbl
sbb
lods
sub
idivl
lcall
jmp
adc
pop
xor
fdivs
or
bswap
add
icebp
sarb
loop
aam
leave
inc
enter
lea
inc
punpckhdq
jae
mov
sbb
xchg
inc
ljmp
jne
repnz
pop
xor
mov
sub
inc
and
fcoms
mov
clc
clc
adc
jmp
pop
jmp
arpl
lock
shrb
xor
and
and
push
dec
sub
jne
and
sbb
adc
add
sbb
add
call
adc
roll
push
mov
xchg
jno
pop
mov
js
and
lahf
aas
push
ficoml
and
pushf
adc
xorl
pop
push
add
ss
xor
movsl
pinsrw
mov
lods
add
push
cmp
lods
adc
mov
test
xor
push
enter
loope
inc
or
cmp
pop
sarb
into
sti
pop
movb
iret
pop
dec
mov
rolb
inc
inc
ret
inc
jge
dec
inc
sbb
daa
and
shlb
lock
and
shl
gs
imul
cmc
jg
pushf
inc
xor
pop
cmp
hlt
ret
rclb
ret
dec
sub
ss
sub
cmovle
mov
dec
pop
gs
sbb
cmc
leave
popl
out
xchg
jge
sub
icebp
push
pop
sub
gs
xor
in
adc
fdivrp
push
lea
pop
or
mov
stc
xor
sub
andl
imul
lahf
cmpsb
adc
jecxz
sub
test
lret
fwait
sbb
repz
clc
pop
adc
and
sbb
unpckhps
add
fwait
sbb
hlt
popf
imul
stos
pop
popa
pop
test
aas
enter
add
dec
pop
andb
mov
divl
fs
sub
hlt
jecxz
mov
fcmovne
jae
rcll
xor
add
mov
cmp
mov
jb
scas
pop
and
and
adc
cmpsl
dec
mov
shl
loopne
in
popf
xor
subl
add
pop
out
adc
fdivs
jne
or
sbbl
adc
ljmp
jg
aam
mov
es
stc
mov
inc
sbb
and
sbb
sbb
xor
sub
shl
loope
adc
fwait
mov
sbb
bound
popl
sahf
sub
shrl
test
fs
int
pop
insb
shlb
inc
add
mov
cmp
lcall
pop
fwait
aas
push
sub
mov
pop
rorl
add
imul
push
out
inc
push
ss
je
das
stc
add
lret
or
pop
add
cmp
or
in
lahf
pop
filds
and
cmp
add
out
or
mov
je
sub
clc
shr
sbb
and
and
and
add
arpl
mov
outsl
adc
cwtl
jmp
cmpsb
rcrb
sbb
add
fidivrs
cmc
and
cltd
mov
and
sbb
ss
xlat
mov
sarb
dec
pop
enter
fs
jo
daa
cmp
movsl
jl
insl
push
loope
pop
in
mov
dec
orl
pop
cmp
fcoml
jmp
add
lea
js
pop
ret
mov
inc
inc
and
in
xor
movl
in
xor
pop
push
xor
and
inc
imul
daa
sahf
adcl
test
mov
lret
data16
push
pushf
lahf
inc
cmpl
xor
arpl
test
rol
jp
aam
test
mov
inc
inc
adc
insl
mov
into
lock
cmp
imul
adc
adc
into
movsl
fwait
and
pop
movsb
push
push
rcrl
out
inc
or
jl
mov
or
pop
xor
fisubrl
ljmp
jne
xlat
lahf
xor
push
inc
xor
mov
mov
or
sub
dec
inc
ss
test
orl
arpl
mov
inc
addr16
dec
mov
rcr
jns
mov
or
add
add
jmp
ljmp
mov
jb
pop
and
mov
in
sub
movsl
adc
mov
and
ficompl
or
xor
rolb
leave
pop
shrl
dec
cmp
scas
cmp
cmp
sahf
outsb
push
cmp
or
aad
insb
lcall
pop
roll
mov
add
scas
jnp
and
push
sbb
adc
out
into
dec
popf
xor
xchg
in
loopne,pt
stos
pop
mov
and
xchg
push
push
push
test
cmp
addl
subl
push
mov
mov
les
test
mov
mov
sub
xor
jb
repz
ja
sub
movsl
nop
ljmp
xor
testl
subl
xadd
adc
mov
aad
dec
adc
xchg
out
xchg
cmc
and
ds
or
pop
inc
mov
into
jnp
je
xchg
push
cli
cmp
xor
popf
outsb
xchg
ret
mov
stc
xor
aam
popf
mov
inc
mov
pop
pop
mov
stc
inc
xchg
aad
js
ja
gs
test
push
lcall
jnp
js
pop
lea
lcall
adc
jp
loop
cmp
lea
cwtl
add
jbe
jmp
iret
loopne
popf
adc
sbb
js
insl
adc
fistpll
rcrb
lret
movb
into
test
rorl
jmp
popa
xchg
xorb
push
fmul
in
nop
cmp
leave
push
popa
iret
mov
imul
cld
mov
movsl
jne
in
push
jbe
scas
mov
adc
xchg
mov
xor
adc
push
pop
jno
adc
push
inc
les
movsl
sbb
sbb
sbb
jne
test
add
es
add
mov
mov
aas
sub
sbb
insl
xor
push
jmp
inc
add
sub
jmp
ja
and
pop
lock
jns
jecxz
mov
hlt
ja
outsl
fwait
add
dec
fnclex
aaa
adc
and
fiaddl
dec
mov
js
inc
loope
ss
mov
inc
dec
add
pop
sub
jmp
dec
sbb
add
dec
mov
lea
cmc
in
outsb
mov
rorl
clc
cli
inc
cmp
mov
add
loope
js
pop
pop
mov
inc
int
jecxz
or
nop
xchg
push
add
push
repz
or
pop
inc
xor
dec
sub
out
aam
imul
mov
jle
outsl
dec
int
popa
rcr
ljmp
dec
xchg
add
jle
stos
iret
icebp
inc
push
aam
push
jo
dec
mov
sbb
push
aam
sbb
pop
push
pop
mov
repz
gs
dec
xchg
adc
dec
movl
pushl
mov
mov
test
jne
pcmpgtb
dec
jmp
inc
hlt
mov
bound
jge
rcrb
add
xchg
mov
scas
daa
gs
iret
adc
sub
or
cmp
arpl
int3
dec
shlb
jge
jecxz
and
sbb
jns
iret
xchg
js
in
jmp
mov
int
stc
xor
jns
leave
jae
mov
add
push
shl
push
call
js
test
jge
lods
test
pop
mov
mov
stos
gs
mov
mov
jge
push
int
xchg
in
movsl
sub
popa
js
pop
inc
test
js
mov
and
hlt
jmp
mov
pop
cmp
int
mov
inc
pop
add
pop
or
cltd
insl
ss
lock
std
in
cwtl
incl
add
das
add
sub
movsl
or
lret
fidivl
mov
push
pop
aas
pop
cli
jno
jno
loope
cltd
adc
jmp
add
dec
pop
mov
add
pop
sbb
pop
xchg
cmp
sbb
xchg
add
sbb
push
mov
stos
lods
outsl
loopne
jmp
jl
shll
lock
cmp
in
xchg
cmp
or
inc
imul
icebp
lret
xchg
pop
rcl
xchg
js
cmc
pushl
and
loopne
les
ljmp
inc
sbb
sub
push
push
int
sahf
ja
mov
and
stos
mov
mov
add
mov
ljmp
xchg
push
add
inc
xchg
loope
cmovle
sti
arpl
cmp
stc
mov
gs
je
dec
mov
in
jecxz
sub
and
or
mov
sbb
iret
jp
cltd
xor
out
mov
lea
adc
mov
mov
push
mov
aaa
std
decb
movsl
pop
movl
fwait
aaa
sbb
sbb
repz
cmp
dec
mov
or
lock
jbe
sbb
xor
fimull
in
rcrb
ret
adcl
jae
popa
pop
push
and
dec
mov
test
mov
cltd
jmp
xor
adc
test
mov
insb
sbb
sti
out
mov
mov
cld
cmp
roll
shll
jl
pop
dec
pusha
lock
xchg
xor
stc
outsb
popa
push
mov
cmp
jmp
shr
mov
test
icebp
xor
push
daa
roll
dec
gs
jg
push
or
and
add
dec
repz
repnz
mov
mov
bound
std
stc
add
cli
cmp
adc
pop
leave
add
gs
dec
cmp
add
xchg
cli
outsb
icebp
pop
aam
not
pop
test
mov
pushf
pushf
insb
push
mov
mov
shlb
pop
push
adc
cmpsb
filds
mov
sub
mov
outsl
rorb
fwait
jecxz
inc
inc
adc
movsb
cmp
loop
insb
dec
sbb
and
sahf
mov
popf
inc
fwait
or
sti
shrl
popf
add
stos
sub
iret
enter
call
mov
sub
gs
sub
push
or
lea
mov
arpl
xchg
mov
or
xor
push
sub
add
loopne
lcall
or
gs
outsl
jp
in
roll
jge
adc
or
pop
xchg
sub
lret
adc
fiadds
inc
cld
adc
push
clc
loop
dec
mov
movl
mov
cmpsl
mov
addr16
xchg
in
lods
adc
jmp
add
xchg
mov
out
jg
fistl
mov
call
pushf
sbb
xchg
and
cmpsl
imul
sbb
out
sbb
sbb
scas
add
jmp
and
mov
out
mov
out
rolb
mov
addl
cmp
inc
movsl
loope
cmp
cld
add
das
icebp
cmp
sbb
mov
ficoms
les
xchg
push
pushl
call
mov
inc
mov
fcmovnb
add
sbb
inc
mov
movsb
xor
jb
jmp
sbb
inc
mov
push
push
pop
sahf
imulb
push
mov
mov
xor
adc
sbb
mov
aad
cld
inc
adc
mov
xchg
and
add
cli
fwait
pop
stc
adc
out
cmp
sub
push
inc
into
add
stos
pcmpeqb
dec
clc
aas
int3
pop
lds
rolb
or
rcl
jg
clc
psubb
popa
mov
cmp
xor
les
ret
jl
testb
aaa
loop
mov
and
jle
adcl
and
xor
adc
pop
pop
push
incl
jl
cmp
add
fdivl
inc
or
ret
mov
sbb
mov
enter
push
leave
push
lcall
cwtl
lods
mov
jecxz
sub
scas
sbb
mov
lock
xor
jae
add
clc
movq
mov
mov
and
call
sahf
imul
cmp
ftst
xchg
add
sbb
xor
add
movsl
scas
mov
in
xlat
xor
xchg
ja
pushf
mov
push
popa
push
jne
adc
xchg
aad
lods
icebp
xchg
xchg
lahf
push
push
adc
bnd
cld
int
stos
inc
mov
add
js
ret
xor
aaa
loopne
lea
xorb
push
xor
dec
cwtl
inc
push
je
cmc
cmp
pop
sbb
jne
pop
jno
sbb
loope
cld
je
mov
popf
les
fsubrs
mov
es
outsl
cld
repz
stos
mov
subl
aad
mov
inc
lret
inc
adc
addr16
jnp
mov
mov
pushf
push
cmpsb
xchg
pop
pushf
cmp
call
sti
and
stc
add
pop
jb
popa
xchg
ret
imul
add
mov
stc
cmp
push
sar
pop
jb
es
add
ljmp
rcrb
cwtl
mov
add
xchg
jmp
hlt
test
dec
and
sbb
out
lock
pushf
mov
dec
stc
dec
aas
inc
addl
fs
ja
pop
and
insb
dec
cld
or
ss
loopne
xor
push
cwtl
and
in
hlt
test
cmp
push
mov
pop
loopne
in
add
lock
and
test
xchg
push
pushl
dec
mov
xchg
inc
repnz
ret
lahf
sbb
loopne
fimuls
push
test
fmull
jg
pop
jl
adc
xor
cwtl
pop
pop
or
mov
adc
or
add
or
filds
shl
push
lds
jo
xor
add
or
mov
out
pop
repnz
in
leave
jnp
popf
pop
cli
push
bound
add
push
pop
rcr
mov
inc
lahf
loopne
mov
clc
clc
scas
push
outsl
mov
cmp
cmp
adc
pop
sti
dec
shl
lcall
sub
xchg
mov
imul
cmp
in
ss
pop
fiadds
sbb
jle
lock
cld
mov
mov
rolb
sarb
jmp
aad
adc
xor
fdivl
femms
sub
jge
test
ret
lcall
dec
test
dec
jne
add
pop
pop
iret
pop
decl
or
daa
xchg
loope
loope
int
inc
inc
bnd
inc
mov
mov
mov
ret
pop
xor
imul
test
lret
or
xchg
popa
or
hlt
mov
rorl
sbb
cmp
loop
lea
cld
push
add
jae
push
cmp
movsb
int3
shrl
lods
ljmp
and
jle
cmp
push
add
int
call
mov
out
roll
push
adc
imul
fwait
rsqrtps
cmc
mov
jg
repz
ss
fs
mov
mov
mov
push
cmpsb
add
orb
push
sbbb
out
dec
cmpsb
mov
loope
pusha
add
sbb
mov
xor
and
fs
add
cmpsl
cli
in
mov
xchg
adc
and
jp
sahf
aaa
cwtl
fildll
nop
jp
lock
xor
jbe
pusha
jo
fstps
and
pop
mov
add
pop
into
adc
in
jnp
mov
and
stos
test
dec
adc
sub
call
in
fwait
arpl
adc
movl
pop
dec
rclb
shlb
imul
dec
jmp
decl
shr
cmpsl
pop
sbb
orl
popa
repz
jge
std
lods
mov
pop
sarl
xorb
pusha
test
insb
imull
cwtl
push
mov
lea
mov
aam
jmp
hlt
lahf
adc
jbe
adc
out
icebp
shrb
test
push
push
mov
aas
mov
add
popa
pusha
mov
sub
in
ljmp
add
sub
jp
mov
jl
popa
movsb
sbb
out
or
mov
xor
jno
orb
loope
jl
mov
xor
decl
sub
int
sbb
popf
mov
flds
inc
shrb
inc
sarl
adc
clc
pop
mov
sahf
pop
jle
sbb
icebp
or
pushl
icebp
in
inc
scas
mov
inc
push
outsb
lods
lea
ss
cmpsl
loop
imul
mov
mov
je
filds
cwtl
and
mov
cmp
pop
jecxz
xchg
pop
jmp
xchg
aas
push
sbb
sbb
inc
out
cli
mov
jno
imul
lcall
cwtl
sub
cs
jecxz
mov
cwtl
popa
sub
mov
ret
cmp
cmp
pop
jo
mov
or
ficompl
pop
dec
dec
mov
dec
ljmp
cmp
sbb
add
push
push
fwait
arpl
dec
mov
ret
decl
test
mov
test
clc
dec
sar
repnz
les
add
mov
xor
sub
mov
rorb
xchg
push
into
or
aam
scas
cmp
add
mov
sub
std
dec
sub
hlt
cli
das
inc
loopne
test
mov
mov
cli
xor
jecxz
test
cmc
jo
mov
mov
es
rol
pop
mov
dec
lds
push
fsubp
lock
cmc
mov
sub
dec
movb
pop
sbb
xchg
rorb
repz
out
push
fs
orb
incl
imul
push
jecxz
and
nop
adc
add
sbb
fisttps
fldenv
rorl
jg
test
je
ljmp
xchg
cmp
inc
sbb
add
or
scas
xchg
jno
shrb
out
xchg
outsl
fldl
loopne
loopne
inc
xor
lock
aas
mov
xchg
jno
cmpsl
addr16
call
mov
popf
orl
inc
jno
notl
inc
add
lds
cld
dec
pop
ret
iret
cmp
xchg
add
jle
mov
notb
sbb
inc
push
lcall
movsb
xlat
cmpsl
mov
test
adc
mov
mov
pop
add
or
cld
pop
sbb
dec
jno
repnz
add
sbb
std
and
jns
jbe
jbe
sub
sbb
cmpsb
jbe
jp
arpl
sub
cmpsl
outsl
cmpsb
or
sub
pop
lock
aas
cli
mov
and
add
sub
fidivs
in
hlt
jae
addr16
adc
inc
sar
sub
jg
lods
or
repnz
out
and
inc
inc
outsl
xchg
adc
hlt
pop
mov
jnp
dec
enter
lea
mov
pusha
xchg
mov
cwtl
outsl
in
xor
dec
mov
fimuls
ror
shlb
fildl
add
push
movsb
jb
out
lea
sahf
mov
in
icebp
and
sbb
shrb
xor
pop
pusha
cmc
incl
into
add
ljmp
and
loope
movsl
pop
lea
rep
sub
push
cmp
jecxz
xchg
mov
mov
push
roll
lods
pop
aam
xchg
xchg
pop
jne
test
xchg
scas
scas
test
jae
lock
mov
addr16
insb
incb
lock
cmp
adc
jge
jp
dec
push
loop
sbb
sahf
push
outsb
jmp
cld
mov
pop
test
inc
jp
pop
roll
push
pushf
std
stos
xchg
inc
into
or
pop
jg
jmp
push
outsl
mov
stos
or
jbe
pop
cmp
pushf
cld
inc
add
pop
push
mov
xchg
cli
adcl
or
mov
popa
shll
xchg
add
xchg
dec
sub
or
add
ja
es
cmp
lds
daa
call
aas
mov
sub
pop
test
dec
pop
loope
add
sbbb
pop
or
mov
inc
pop
pop
popa
shrl
test
xor
cmp
je
xchg
sbb
insb
leave
pop
pushf
adc
xchg
xchg
setbe
dec
ja
mov
jl
jmp
push
push
jae
jo
cmp
mov
test
das
jbe
loopne
rcrl
fs
mov
mov
sbb
lea
aam
rolb
shlb
subl
dec
sbb
jne
std
adc
outsl
mov
ret
dec
push
push
adc
and
jmp
and
imul
lret
stc
call
ljmp
pop
pusha
cmp
push
fmul
stos
push
mov
push
xchg
int
dec
jb
js
fdivl
mov
loopne
rorl
test
dec
insl
inc
and
push
inc
pop
xor
and
jle
mov
aaa
pop
std
daa
cmp
les
mov
or
push
sub
cld
mov
adc
js
pop
dec
mov
mov
dec
arpl
cmpsb
dec
jb
jg
mov
inc
in
xchg
loopne
jmp
je
jmp
lcall
loope
xor
stos
push
or
lcall
pushf
cli
xchg
stc
and
arpl
lods
inc
in
xor
shl
cmp
mov
ljmp
push
dec
adc
data16
adcl
and
pop
cld
ljmp
test
std
into
fs
outsb
add
aam
nop
lock
cmp
mov
scas
test
test
cmc
mov
ret
shll
ss
add
push
add
repnz
test
outsl
push
test
jmp
stos
testl
sbb
xor
stos
scas
and
cli
jge
add
inc
add
sbb
jo
or
clc
ret
cmp
imul
aam
add
lahf
mov
cmc
xor
cmc
or
out
cmp
adc
push
sarb
scas
pusha
mov
mov
sarb
daa
jns
push
addb
adc
jle
popa
loop
sbb
loop
rclb
push
js
arpl
setge
loope
add
add
add
cwtl
enter
inc
push
test
jg
jle
je
movsb
pop
sub
adc
adc
xor
or
xchg
push
js,pt
sub
insl
in
movsb
xchg
dec
xchg
add
cmpsl
adc
push
cli
cli
jns
out
aam
xchg
mov
rcrl
call
fmull
clc
push
fistpll
and
adc
mov
dec
pusha
mov
cmp
subb
pop
inc
dec
jp
lea
add
mov
push
clc
or
add
push
or
js
lret
fadds
cmp
push
out
fldt
test
frstor
sub
rolb
sbb
push
cmp
pop
stos
sti
mov
cwtl
or
inc
cmpsb
pop
jo
jg
cmp
roll
xlat
xchg
iret
and
inc
jecxz
cmp
add
movsb
dec
or
add
sbbb
cmovle
fistpl
and
pop
out
mov
test
adc
adc
mov
mov
mov
and
mov
dec
inc
sub
adc
ja
jne
pop
jp
cmpsl
sbb
mov
cmpb
sbb
pushf
inc
inc
mov
mov
and
push
outsl
shll
add
loopne
push
cmp
lret
sbbl
sarl
push
adc
sbbb
cmp
inc
in
shlb
adc
pop
add
and
push
sub
dec
int
push
vhaddps
xchg
mov
pop
mov
xchg
outsb
mov
xor
fwait
rorb
cltd
mov
mov
sub
jmp
imul
inc
arpl
and
lret
daa
mov
andb
xorb
cwtl
test
lret
lret
mov
ljmp
out
or
dec
mov
xchg
adc
orl
andl
stos
rcr
lcall
lcall
ds
dec
add
bound
push
es
iret
out
and
inc
mov
enter
and
or
push
jecxz
jp
or
and
lahf
mov
enter
je
sub
mov
mov
mov
pop
sub
les
sbb
push
mov
sub
ss
es
mov
jae
fldt
fldcw
push
pop
icebp
jnp
leave
push
xchg
je
pop
or
test
adc
scas
test
lahf
hlt
scas
xchg
lret
inc
dec
xor
add
aam
jle
aas
movsb
sbb
enter
lods
out
mov
dec
popa
stc
adc
daa
dec
xchg
xchg
stc
pop
scas
andb
in
iret
pop
dec
add
lock
adc
das
and
sbb
fildll
mov
mov
adc
adc
cli
and
dec
mov
cmp
jle
mov
push
jb
fcmovb
outsl
sbb
mov
or
xchg
dec
loope
dec
and
icebp
shlb
cmpsb
sub
insb
push
or
sbb
inc
add
dec
dec
addb
stc
lds
cmc
jnp
inc
out
push
test
int3
mov
pop
xor
sbb
in
xchg
psubb
fcompl
xor
iret
test
mov
inc
inc
adc
popa
mov
arpl
jbe
mov
mov
nop
jg
fmuls
add
xchg
xchg
xchg
or
inc
inc
and
sbb
xor
movsl
jbe
mov
jo
jl
mov
mov
push
loop
dec
and
or
int
or
lods
adc
pop
cmpsb
and
mov
cmp
lods
pop
in
pop
jle
js
rcrl
pop
scas
out
inc
test
in
dec
ret
shr
jp
outsl
pop
std
push
adc
es
aam
mov
inc
dec
add
pop
pop
xchg
mov
imull
loope
rclb
xor
pop
sbb
std
xor
loop
xor
fisttps
add
test
out
dec
xor
cltd
call
out
mov
es
inc
jae
dec
add
mov
stos
je
xor
lods
dec
sub
jecxz
dec
scas
xchg
outsb
ret
xchg
sahf
popf
addl
fldl
loop
shlb
fsubrp
clc
movsb
loopne
adc
ljmp
sbb
pop
or
into
sub
mov
lock
inc
ret
adc
in
add
pop
sub
mov
adc
xlat
dec
lea
lods
lock
ret
mov
jmp
cmp
bnd
push
pop
jno
leave
mov
popa
xchg
pop
or
adc
fistpl
inc
cmc
mov
or
mov
xor
mov
push
mov
cwtl
mov
in
add
punpckhwd
push
sub
jl
and
fisubs
push
adc
pop
shrb
bound
das
mov
cltd
loope
ficompl
add
xor
loop
movsl
sub
cmp
std
mov
inc
leave
outsb
lds
pop
loope
dec
leave
or
dec
dec
add
arpl
addr16
stc
js
jmp
repnz
ss
jnp
idivb
mov
inc
mov
or
sub
jae
repz
dec
fdivs
rolb
imul
in
pop
stos
test
fdivl
mov
cwtl
jp
nop
les
repnz
mov
jne
outsl
or
lret
sbbl
xlat
cmp
arpl
fwait
aam
ljmp
xor
loope
add
pop
insl
test
add
js
cli
mov
in
mov
aad
add
dec
push
mov
cmpsl
push
stos
mov
xor
ss
sbb
mov
cmpsl
je
jle
js
sub
inc
ret
movsb
in
push
inc
movsb
and
push
adc
gs
adc
jecxz
push
sbb
push
cmp
sbb
xchg
pop
jns
inc
jne
ret
roll
testl
shll
adc
pop
popa
cmp
fsub
and
mov
mov
test
shrl
in
xchg
movsl
cli
insb
mov
test
sti
and
pop
imul
xchg
sub
cld
xor
adc
inc
push
vmwrite
into
pop
inc
push
add
push
repz
test
cmp
pushf
shll
gs
pop
push
jmp
mov
lods
jns
add
xchg
jo
in
orb
pop
and
gs
adc
mov
mov
fistl
and
gs
cli
dec
jmp
shl
sbb
inc
fs
inc
mov
imul
and
push
sbb
pop
push
loop
addr16
mov
and
dec
loope
sbb
mov
dec
ljmp
pusha
sarl
jg
arpl
or
inc
mov
loopne
fdiv
sub
pop
xlat
add
lods
insl
or
adc
mov
or
add
xchg
jp
ds
sbb
cmp
push
jle
fistps
xchg
lds
push
fldln2
pop
ret
xor
sbb
mov
adc
mov
clc
aaa
loopne
setb
cwtl
mov
fsubs
lock
lock
and
mov
push
xchg
aas
sbb
aad
pop
fisttpl
xchg
push
bound
into
cs
jno
mov
je
mov
mov
sbb
out
rolb
or
xchg
loope
cmc
xchg
fwait
outsb
popa
rorb
xorb
mov
fwait
mov
sbb
add
icebp
mov
in
loopne
cmp
cmp
xor
xchg
mov
adc
out
xchg
divl
outsb
xchg
dec
lods
add
filds
jmp
jb
rorb
inc
and
icebp
jmp
dec
popa
sbb
add
mov
mov
add
fs
sbb
fwait
leave
push
cwtl
sub
jecxz
cmpsl
and
or
and
adc
pop
xchg
jo
xchg
adc
add
cmpsl
add
shrl
les
hlt
mov
inc
mov
je
push
dec
out
jmp
stos
pop
hlt
or
push
xor
cmp
inc
lret
xchg
push
fstpt
push
insb
decl
push
in
mov
test
in
lock
sbb
cmp
out
mov
clc
je
inc
xchg
pusha
mov
adcl
mov
sub
xchg
loopne
inc
aaa
int
pop
fidivrl
rolb
or
sahf
sub
push
lcall
stc
push
sub
add
xor
icebp
adc
add
pop
push
nop
jg
int3
test
sub
pop
and
mov
cmpsb
mov
pop
cmp
in
repnz
popa
jb
push
push
rolb
mov
sub
jb
loop
cmp
cmp
mov
sbb
repz
roll
test
pop
jmp
mov
cmpsl
inc
pop
rcrb
or
jmp
add
rclb
and
pop
push
pop
clc
lea
adc
push
movsb
and
pusha
cmp
fdivrs
sbb
ljmp
call
push
mov
call
addr16
enter
sbb
sarb
adc
push
add
xchg
in
mov
orl
ljmp
add
arpl
push
or
aad
lcall
cld
test
push
mov
call
arpl
loop
jbe
and
mov
dec
fcomps
nop
popf
test
insl
pop
or
inc
stos
cmpsl
aas
ret
xchg
sbb
roll
out
dec
loopne
ja
out
jbe
bound
add
mov
aaa
mov
lods
das
adc
xor
shlb
mov
jne
out
push
je
lods
or
aam
out
pop
jns
test
cmp
test
pop
cmp
lds
inc
aad
movb
jb
test
push
clc
mov
mov
jg
cmp
fcmovu
mov
roll
nop
inc
pop
or
mov
add
mov
js
jnp
mov
dec
cltd
sti
mov
xor
jecxz
adc
adc
sar
cmpsb
leave
lret
mov
pop
add
data16
adc
and
sub
mov
dec
dec
jl
stos
out
mov
int
xchg
jns
test
mov
inc
fs
mov
rorb
mov
cld
fists
jle
test
scas
inc
sbb
clc
pop
in
jae
daa
std
sarl
cmp
orb
sbb
jp
sub
icebp
pop
fwait
jle
test
or
push
insb
hlt
push
pop
add
add
xchg
push
or
xor
nop
mov
xor
mov
mov
pop
mov
mov
stos
mov
add
xor
push
fists
inc
sub
mov
bound
scas
xchg
hlt
pushf
test
pop
cmp
das
rcll
das
mov
lcall
inc
mov
cmp
scas
push
xor
shlb
ljmp
xor
gs
inc
dec
xchg
cld
ljmp
addb
xchg
adc
mov
sub
popa
stos
jbe
lahf
xchg
es
mov
push
mov
insl
inc
sub
shl
sub
pushf
mov
aas
das
adcb
and
pop
jmp
inc
jge
cmp
mov
inc
sub
hlt
xor
push
adc
fbld
pop
adc
mov
add
push
popa
pop
and
imul
cli
sarb
pop
icebp
inc
iret
and
lock
xor
les
dec
ljmp
dec
or
pusha
jg
loopne
loope
xchg
mov
mov
hlt
mov
lds
into
leave
sub
jne
les
js
icebp
cmpsb
push
mov
in
sbb
scas
and
pusha
hlt
mov
push
inc
push
push
lcall
adc
mov
popf
dec
dec
cmp
dec
psrlq
loopne
xchg
inc
jg
addb
push
add
mov
hlt
add
jge
aam
jecxz
outsl
xchg
add
mov
sahf
mov
in
out
or
scas
dec
xor
sub
sbb
shl
jo
repz
outsl
les
aaa
mov
and
rorl
xacquire
scas
das
loop
mov
sarb
rcr
push
mov
jl
movsb
mov
or
mov
adc
push
jle
mov
mov
idivb
stos
cmp
mov
mov
mov
push
and
sub
push
push
push
addb
sub
add
test
mov
es
push
mov
and
stos
and
aam
sbb
stc
lahf
outsl
mov
ds
leave
insb
andb
in
add
movb
inc
hlt
popa
adc
aaa
mov
push
pop
insb
mov
xor
dec
nop
pop
and
imul
mov
sub
lds
icebp
pop
jns
pop
inc
pop
mov
jl
ja
aas
das
push
mov
std
mov
or
fs
sub
popa
xor
cwtl
mov
clc
jno
out
out
fisubs
mov
add
std
or
ret
ljmp
and
and
stc
sbb
cli
cs
cltd
inc
ret
adc
sbb
dec
sbb
sbb
sub
daa
rcrb
fisubrl
fbld
jo
int
sub
xchg
popa
add
loope
xchg
in
mov
mov
in
cmp
push
inc
cmp
or
loopne
outsb
cld
ffreep
inc
xor
mulb
sbb
xchg
insb
stos
lods
lock
js
xor
les
and
adc
mov
sbb
movsb
cwtl
insb
pop
loopne
movsl
jne
popa
xor
pop
add
rolb
outsb
mov
cwtl
xor
push
pop
in
outsl
mov
ljmp
fs
cltd
push
xor
pop
call
and
mov
xchg
stos
mov
adc
inc
hlt
mov
ret
inc
adcb
mov
pushl
psrad
cmc
add
scas
sti
push
aam
gs
popa
mov
dec
xchg
clc
push
cwtl
pusha
repnz
add
inc
or
pop
bound
inc
lret
mov
jns
lock
jg
sub
xor
iret
adc
jae
jmp
jg
cld
adc
jp
test
xchg
xor
js
neg
and
adc
mov
int
pop
mov
pop
std
ret
cmp
out
mov
leave
jg
dec
push
jbe
cli
sub
mov
daa
adc
jmp
nop
cmp
fisttpll
subl
push
jmp
mov
xor
ret
cmp
lea
add
lea
bnd
repnz
cli
pop
iret
add
mov
or
or
add
add
rolb
inc
mov
cmp
rcr
mov
or
insb
mov
fcomip
enter
mov
dec
inc
clc
add
sbb
or
adcl
loopne
mov
add
jmp
outsb
or
cmpsb
cmpsl
jne
mov
inc
jb
mov
xchg
and
jl
cmp
adc
loop
out
inc
insb
fsts
jb
jne
xlat
inc
bnd
fdivl
mov
sbb
call
pop
and
xchg
xorb
orb
lea
orb
aaa
call
rorb
inc
aad
mov
mov
adc
es
dec
shl
lock
ds
scas
stos
leave
inc
ja
dec
aaa
push
mov
pop
mov
aad
mov
jb
clc
mov
push
cmp
cmp
cmpsb
out
clc
sub
sub
and
inc
call
ficoml
add
mov
sub
xchg
xchg
ficompl
sub
lock
clc
imul
ret
sub
shlb
std
imul
pushf
or
add
addl
loop
jle
cmp
jo
dec
mov
inc
inc
xchg
je
adc
repnz
loope
int
cmp
lock
ss
outsb
mov
jecxz
inc
sbb
pop
loop
ficoml
insb
andb
fbstp
lods
and
pop
fistpll
sarl
test
je
or
jo
jmp
cs
lret
cmp
pop
jbe
shl
cli
sbb
cli
mov
je
sarb
out
push
enter
cmp
pushf
test
shrl
jbe,pt
pop
xchg
call
rolb
fwait
push
push
add
call
mov
ja
push
sub
mov
lds
xchg
xor
sbb
xor
xor
xor
imul
add
bndldx
and
mov
cld
outsb
cs
ffreep
mov
rcrb
cmp
aas
bnd
pop
andb
test
es
loopne
stc
xor
test
or
jns
aad
mov
leave
ds
arpl
fistpl
ja
adc
divl
inc
inc
xchg
lret
cmp
loop
dec
or
push
and
inc
jecxz
mov
lret
pop
loope
test
inc
and
cld
out
adc
out
into
push
hlt
adc
jne
xchg
dec
cld
dec
pop
lock
ret
popf
push
cmpsb
fwait
cmp
imul
xor
mov
mull
repz
lock
iret
movsb
or
mov
mov
ret
pop
and
lea
jmp
push
ds
loope
jle
insb
in
lods
mov
jno
fdivr
jmp
pusha
mov
outsl
ret
adc
pushf
xchg
sub
call
lock
pop
inc
jecxz
mov
das
cmpsb
sbb
rcrb
fldlg2
insl
pop
test
adc
mov
fwait
mov
xchg
inc
inc
pop
jl
pop
jle
popf
aam
inc
test
dec
mov
pop
cld
jne
push
push
subl
mov
xor
ss
ljmp
sub
lock
push
pop
adc
dec
mov
add
xchg
pop
mov
or
jp
imul
aas
les
xor
and
aam
incl
insb
test
sbb
adc
rorl
adc
dec
aad
mov
mov
pop
and
mov
cs
std
mov
sar
test
and
scas
test
loop
addb
add
push
cli
icebp
xor
pop
pop
fstps
popa
loope
cmp
imul
nop
gs
jae
push
mov
fnstsw
sbb
inc
loope
aas
movsl
sbb
movsl
push
pop
mov
jne
xor
mov
mov
cli
cmpsb
push
pop
mov
mov
push
sahf
pop
enter
test
jl
je
or
sahf
subl
dec
dec
or
sbb
hlt
inc
cwtl
out
jl
jle
sub
cmp
xor
mov
push
dec
sub
lods
je
sub
pop
lods
dec
mov
test
pop
mov
mov
dec
ret
outsb
jo
aam
fucom
out
or
mov
movsl
push
mov
aaa
lods
push
icebp
mov
adcb
pop
jge
push
jno
sbb
mov
out
into
pop
incl
loopne
in
ljmp
fcomps
jp
cmp
mov
mov
popf
dec
add
ljmp
add
adc
or
fdivs
mov
add
mull
outsb
pop
jle
sub
adc
sbbl
add
test
inc
mov
fisttps
test
inc
push
xor
mov
jp
push
loop
inc
mov
loopne
aaa
jns
sub
mov
sbb
xchg
dec
xchg
hlt
pop
dec
call
loop
popa
pop
out
jb
hlt
dec
sbb
push
push
inc
push
xor
jmp
sub
mov
or
stos
dec
stos
icebp
sbb
sbb
sbb
sbb
ffreep
cmpsb
aas
loopne
lea
adc
movsl
out
pop
sbb
push
icebp
cmp
jg
sbb
push
cld
std
fisubrs
or
mov
repz
sub
pop
pushw
pusha
test
jo
loopne
loopne
ljmp
or
sub
mov
or
xor
cmc
sbb
mov
outsb
and
pushf
adc
pop
pushf
fmuls
push
cli
jno
mov
mov
and
insl
outsb
clc
loope
and
mov
inc
mov
clc
cld
fwait
or
rcll
add
mov
or
sbb
jo
or
add
cmp
xor
xchg
xchg
orl
or
pusha
xchg
mov
sbb
arpl
fwait
xorb
scas
stos
or
mov
arpl
or
icebp
dec
pop
xor
enter
pop
xchg
mov
inc
adc
mov
dec
and
mov
pop
jg
sbb
xchg
push
add
cmp
cmpsl
fmull
jne
mov
add
adc
dec
nop
loop
cs
lea
movsl
adc
and
in
mov
dec
nop
pop
push
int
aas
jmp
pushf
loopne
scas
sub
mov
sar
or
mov
and
enter
test
push
dec
push
fmull
dec
and
xchg
lods
dec
mov
xchg
inc
mov
mov
cli
ret
fs
dec
mov
add
cld
leave
rep
or
clc
aam
xchg
mov
fs
adc
or
repz
and
mov
and
pop
ret
cmpsb
mov
sub
rorl
push
pop
cmp
popf
cltd
popa
outsb
mov
pop
push
add
push
dec
cli
xchg
sbb
push
fdivrl
dec
jg
arpl
cli
iret
sarb
and
add
repz
mov
out
sahf
jmp
loop
in
inc
pop
inc
jg
cmp
mov
cld
sub
dec
and
mov
adcb
sbb
dec
lds
mov
outsl
cmpsb
hlt
aaa
dec
int
add
leave
and
mov
jle
xor
jg
or
ret
pop
cld
dec
insb
push
sub
xchg
and
push
xchg
loop
mov
jecxz
or
pop
fwait
in
xchg
clc
push
inc
cmp
jg
outsb
outsb
mov
xchg
add
mov
mov
aaa
add
add
and
in
insl
or
sbb
xchg
lock
and
mov
sti
jg
sti
pop
lds
dec
push
fists
sbb
mov
push
scas
call
push
sahf
dec
shrl
mov
mov
xor
add
add
jl
xchg
xchg
inc
test
les
pusha
cmc
ljmp
xlat
mov
daa
lret
test
mov
inc
cs
rcll
fisubrs
xchg
jmp
ret
push
mov
adc
adc
adc
mov
jns
add
or
out
push
cmp
sbb
cmp
xchg
mov
popf
js
loop
xchg
filds
push
and
sub
incl
pop
loope
ret
jno
push
push
or
lcall
daa
bound
rcll
lcall
xchg
xor
clc
jo
outsb
cld
add
mov
sub
mov
inc
hlt
out
push
loope
fsub
cmp
aam
les
xchg
iret
popa
jae
scas
inc
popa
rcll
cmp
les
cmp
mov
and
test
pop
aaa
hlt
xor
push
stos
push
xlat
mov
xor
jg
bound
ds
ljmp
jo
mov
enter
push
aas
add
mov
fisttps
in
push
sub
add
inc
inc
mov
test
ret
inc
mov
lds
cmp
sbb
popa
stos
jl
mov
add
lock
cmc
xor
mov
stos
cli
and
sub
clc
ljmp
sti
inc
ljmp
popf
mov
insb
mov
jle
push
enter
cmp
cmpsb
nop
xor
lcall
mov
inc
jmp
mov
xchg
pop
aas
ret
mov
subb
lods
nop
repnz
call
roll
dec
cmp
jmp
sbb
push
dec
adc
daa
cmp
fwait
addl
cmp
mov
les
test
stc
imul
shlb
mov
jae
icebp
pop
inc
scas
repz
dec
pop
ja
cld
xchg
or
ja
scas
xchg
push
icebp
dec
ljmp
shll
pop
add
mov
lock
jecxz
mov
mov
lret
les
enter
cmc
pop
sti
rol
jp
cld
dec
mov
mov
xor
iret
scas
repz
sub
or
stos
jne
test
jo
stos
scas
inc
cmp
sub
push
push
jae
roll
lods
cmovle
sbb
xor
mov
repz
cmpl
gs
adc
and
jns
sbb
jmp
outsl
sbb
test
pop
iret
outsb
jl
jl
das
sbb
fldl
jmp
mov
mov
cmpsb
in
add
movsl
add
push
popa
xchg
sarl
push
push
lret
sbb
mov
inc
or
movsb
fwait
inc
push
out
mov
dec
inc
add
mov
mov
add
lock
mov
and
pop
xchg
fdivrs
mov
inc
inc
fs
pusha
or
mov
in
leave
loope
ds
jnp
loope
xchg
ret
lahf
std
push
sbb
lds
mov
adc
les
out
lret
js
push
call
cmp
inc
inc
jnp
xor
xchg
mov
cwtl
inc
pop
adc
outsb
ret
clc
aaa
cmp
inc
inc
mov
das
fisttpll
xchg
out
add
mov
xadd
jbe
mov
leave
adc
out
es
sub
ret
hlt
adc
jo
aas
xchg
jle
cmp
mov
pop
mov
mov
ss
ret
jns
je
ret
sub
mov
push
fdivrs
movl
jne
jge
cmp
add
sbb
les
adcb
adc
popa
out
rorl
adc
insb
adc
pop
test
and
shll
sti
xchg
lods
jb
in
inc
push
aad
aaa
loop
pushf
fildl
bound
and
aaa
xor
int
push
adc
inc
cmp
loopne
pop
push
fnstenv
adc
cmp
out
cs
fs
jbe
push
fdivr
sub
ss
inc
dec
lahf
lahf
or
test
adc
call
sti
sub
divl
aam
fnstcw
pop
jno
data16
or
dec
test
inc
jno
ret
dec
stos
imul
fmul
lods
inc
add
push
pop
ss
cmp
ds
xlat
mov
les
inc
push
nop
cli
mov
loop
mov
add
xchg
pop
lock
testb
repz
sbb
pop
sub
fsubrs
jp
scas
jno
icebp
xlat
or
xor
out
sbb
stc
mov
rolb
inc
shll
push
mov
lcall
push
or
hlt
mov
add
stos
hlt
adc
mov
inc
mov
xor
gs
xor
xor
push
or
arpl
out
push
mov
arpl
popf
popf
subb
incb
cmpsb
inc
sbb
adc
test
sbb
xlat
push
gs
aam
ret
fbstp
aaa
pop
stos
pop
or
pop
add
lds
adc
sub
xor
mov
adc
pop
adc
ljmp
jo
sub
fwait
mov
out
int3
xor
imul
clc
mov
sub
sbbb
or
push
add
push
push
mov
cld
cld
cmp
inc
movsb
ret
test
loopne
lock
adc
mov
std
mov
mov
fldt
jg
icebp
arpl
cli
and
and
mov
cmpsb
ret
fnstcw
sbb
adc
repz
sbb
adc
fwait
cmp
int
sbb
jo
add
dec
add
call
lock
inc
sahf
test
rcrb
jle
rcrl
push
pusha
push
and
insl
stc
mov
inc
scas
inc
pop
hlt
push
aaa
fsubrp
push
decb
rorl
imull
dec
test
sbb
push
ret
mov
clc
js
mov
push
add
fsubrl
test
or
testl
adc
sahf
cltd
clc
popa
mov
and
fnsave
push
imul
loopne
xor
movsb
push
mov
xor
outsl
aas
lock
mov
jecxz
fmuls
inc
test
lret
cmpps
cmc
add
pop
push
loopne,pt
leave
gs
incb
shl
enter
rol
and
neg
std
cmc
in
sub
jo
and
push
mov
pusha
cltd
add
aam
pop
and
clc
jmp
daa
sbb
lods
rcrb
fcmovnb
adc
push
loope
shlb
push
xlat
xchg
flds
fisubl
cmpl
or
adc
push
xor
ret
jp
jae
dec
and
aad
in
shr
jmp
adc
or
pusha
shrb
push
insb
std
data16
jp
fisubrl
mov
pop
push
push
loopne
and
and
sub
jg
mov
push
scas
inc
lahf
jnp
orl
aaa
cmp
inc
push
inc
rcrl
leave
add
mov
mov
das
out
dec
pop
jno
pushl
cltd
out
xchg
cmpb
divl
mov
cmp
dec
loopne
sbb
or
fwait
test
xchg
pop
aad
fwait
and
cmp
or
aas
cli
fwait
pop
daa
dec
movsb
dec
stos
test
je
rclb
xchg
sub
movsb
mov
xchg
sar
add
push
mov
cmc
adc
hlt
or
push
repnz
fsubrp
sub
mov
xor
lahf
stos
add
mov
packssdw
cwtl
imul
xor
mov
pop
adc
and
or
mov
push
fwait
mov
testl
push
test
inc
xor
push
cld
mov
ljmp
mov
mov
lock
inc
mov
popa
js
ret
cli
push
push
xor
outsl
aam
loop
loop
dec
mov
mov
loop
sub
xchg
fldenv
add
inc
and
xchg
cmc
mov
add
add
loop
shlb
pushl
bound
jmp
test
mov
pop
ret
lea
std
xchg
push
and
xchg
or
pushf
cmc
mov
fdivr
mov
adc
movups
xor
shll
sbb
in
push
mov
aas
loope
hlt
pop
aaa
popf
decb
xchg
fptan
leave
cmpsb
pop
aas
sbb
push
and
fsubrp
jnp
mov
xchg
xchg
xchg
leave
sub
push
xor
lds
test
movsl
push
lods
arpl
dec
or
or
ret
popa
nop
add
and
or
xor
repz
cmp
test
cmp
popa
outsb
adc
dec
int3
adc
pop
sar
pop
sbb
jle
mov
shrl
inc
ss
mov
call
push
inc
sbb
adc
movq
adc
or
push
les
add
loope
jl
xchg
add
mov
dec
sub
jo
sub
loopne
push
inc
xor
mov
rorb
popl
pop
fcomps
notb
aas
xlat
cmpsl
adc
sbb
add
add
add
mov
stos
pop
aaa
jae
mov
repnz
ljmp
sbb
insb
cmp
jae
inc
rclb
jo
add
pop
cwtl
cmp
int
pop
mov
sbb
repz
addl
add
jmp
jnp
jmp
pop
stos
fwait
lods
jae
repz
pusha
shrb
js
sbb
pop
add
pop
sarl
xchg
sub
xor
sbb
sub
das
testl
pop
add
mov
je
add
shrb
pop
int
cmp
scas
inc
mov
adc
jp
int3
inc
cltd
in
jae
enter
mov
cld
pop
inc
or
rclb
and
or
stos
pop
inc
fmuls
mov
rolb
inc
dec
jp
fdiv
pop
push
sar
jg
fdivrl
xchg
mov
add
and
cmc
mov
jo
stos
sar
and
jmp
push
test
test
sbb
lods
lahf
aaa
jmp
cmpsb
leave
inc
mov
mov
jecxz
add
jg
push
add
lods
lcall
jo
or
xchg
call
shll
add
outsb
hlt
xor
gs
vmovss
subl
mov
dec
and
jbe
fwait
bound
das
loopne
push
jge
mov
jnp
stos
rorb
xor
xchg
aaa
mov
cmpsl
movsb
sub
inc
mov
std
cmp
cltd
pop
es
bound
inc
clc
add
ljmp
lahf
sub
xchg
pop
fxch
clc
add
lcall
push
fstpt
sbb
adc
xor
fsubp
add
test
adc
push
jle
and
cmc
cmp
xor
jns
fmuls
xorb
push
mov
xor
test
sbb
filds
pusha
daa
lock
cmp
ret
xchg
scas
and
sbb
loope
or
or
cmp
inc
mov
loopne
adc
jg
jmp
pusha
sub
inc
outsb
xor
pushf
out
std
repnz
std
dec
dec
loop
clc
insb
stc
daa
adc
aaa
mov
mov
cmc
mov
and
imull
daa
aad
ljmp
pop
and
mov
pop
in
shll
repz
cltd
pop
in
hlt
rcll
mov
fcomps
cmp
outsl
cmpsl
pushf
gs
fadd
jg
xlat
dec
imul
into
popa
je
hlt
cwtl
jp
inc
popf
je
dec
lcall
ss
adc
bound
call
dec
dec
mov
je
xor
in
pop
aad
ss
in
lds
push
add
aam
push
xorl
cmovl
repz
or
xchg
add
popf
adc
mov
ret
inc
cmp
fstpt
test
stos
pop
andl
push
cmp
ss
dec
rolb
push
vmread
and
mov
jle
mov
and
pop
mov
aas
cmp
scas
mov
repz
jp
nop
js
aas
xchg
repnz
mov
sarb
fldl
aaa
js
into
add
sbb
decb
loope
pop
push
jmp
stos
mov
add
push
mov
test
pop
push
mov
jnp
test
or
jl
or
cwtl
pop
loope
jmp
push
cs
xchg
mov
xchg
mov
cmpsb
push
shr
lahf
pop
pop
add
ffree
mov
scas
ret
rcrl
push
ljmp
pop
ds
push
push
adc
or
pop
dec
xor
dec
xor
lock
push
and
arpl
xor
add
ret
out
aad
mov
pop
jp
inc
enter
clc
sbb
cmp
mov
adc
cmp
mov
shlb
mov
unpcklps
je
dec
cltd
cmpb
or
in
add
outsl
sarb
rorb
mov
cmc
andl
or
inc
leave
add
cmp
add
adc
shl
cli
clc
push
mov
add
dec
pop
cmp
mov
jnp
sbb
xchg
fucom
xchg
cmc
xchg
xor
pop
xor
cli
ss
sub
xchg
push
jmp
fucom
push
inc
out
cmp
sbb
aas
mov
or
fsincos
repnz
insb
xchg
lds
xorl
ret
sbb
es
sbb
add
mov
test
insb
out
jl
test
push
inc
mov
add
inc
jmp
dec
iret
call
stos
in
cmpsb
in
in
jmp
push
sbb
push
mov
mov
cld
popf
add
pushl
movsb
or
mov
fcoms
push
or
rclb
orb
inc
and
lock
pop
push
inc
xchg
mov
or
hlt
mov
xor
mov
sbb
mov
dec
frstpm(287
inc
rorb
sbb
popa
aas
push
xchg
rol
ljmp
sub
or
faddp
outsb
ljmp
int3
pop
outsl
sbb
mov
filds
loop
push
in
mov
adc
scas
call
insl
or
sbb
jbe
out
mov
outsl
push
les
mov
loopne
mov
sub
mov
jl
ds
loope
daa
push
xchg
in
addl
mov
arpl
out
rcll
pop
sbb
dec
push
jg
loope
sbb
inc
inc
adc
lret
jecxz
jno
lret
test
scas
bound
inc
pop
sti
xor
xor
mov
rcr
or
mov
lret
loopne
or
adc
jno
es
daa
adcl
icebp
adc
sti
ljmp
add
dec
add
add
cmp
push
sbb
mov
cwtl
adc
push
call
pop
and
jbe
xchg
xchg
scas
lahf
aad
hlt
inc
adc
pop
xchg
loop
or
in
xchg
out
xchg
add
or
lret
adc
divb
xor
mov
and
xchg
jmp
mov
repnz
jp
push
sbb
lret
and
push
mov
sbb
sub
dec
test
lcall
into
adc
push
rol
cmpsb
inc
and
cmpb
int
cld
and
js
daa
adc
push
lock
jp
add
mov
pop
cmp
outsl
and
ss
cmpsb
cmpsb
jbe
xchg
loop
or
lret
clc
add
sub
movsl
push
es
and
lret
or
inc
jp
lock
nop
xchg
pop
xor
das
fisttpll
in
add
push
into
xor
icebp
int3
lods
in
jle
iret
imull
inc
mov
mov
inc
bound
sub
xor
pop
fcoml
sbb
pop
cld
popa
sbb
mov
push
je
decl
std
adc
lds
out
mov
addr16
pop
push
add
jge
pop
and
jmp
pop
cmpsl
loop
mov
push
xchg
jmp
sbb
inc
je
js
dec
insl
inc
mov
add
mov
aas
add
dec
adc
push
push
test
add
test
dec
cmp
lcall
mov
movsl
pusha
or
test
push
mov
cmp
sbb
xchg
jp
aaa
sub
mov
shll
scas
fiaddl
or
int3
add
aad
add
xchg
mov
mov
rorb
lahf
sbb
cmp
push
bound
out
movsb
stos
and
sbb
imul
adc
insb
movsl
shll
mov
into
push
inc
or
inc
pop
icebp
add
test
icebp
lea
cmp
sub
dec
dec
std
rol
jg
mov
sub
bound
sar
movl
xor
in
test
lret
mov
pop
pop
push
cld
cmc
push
jecxz
hlt
adc
sub
loop
and
cmp
dec
mov
pop
dec
dec
xorb
pop
or
lods
jne
ret
pop
cld
out
sub
les
insb
jle
jl
ud0
mov
push
adc
test
in
mov
bound
sbb
or
into
fdivs
lahf
or
in
mov
dec
jnp
clc
call
aaa
xchg
cmc
push
hlt
lock
sbbl
pusha
aaa
jae
test
sbb
and
sbb
js
and
or
cmp
mov
xchg
cmp
inc
iret
in
test
xor
test
xor
ja
add
in
xor
jns
jg
add
cli
xchg
call
imulb
cld
sar
pop
pop
sub
mov
pop
inc
int
popl
repz
outsb
xchg
iret
lahf
das
ret
shlb
rorb
cld
jl
mov
decb
aam
inc
pop
in
jnp
mov
add
xor
mov
nop
movsb
dec
mov
stos
rolb
test
cli
subb
pushl
and
ret
mov
in
mov
pop
push
icebp
mov
xor
mov
xchg
jns
fdivr
mov
lods
cmovl
insb
or
cmp
jg
pushl
xor
cmp
std
sarl
inc
loop
pusha
rcll
mov
jl
fmul
sbb
push
aas
xchg
sub
test
or
repz
pop
mov
dec
inc
push
xchg
addr16
loope
mov
xor
sarb
dec
decl
clc
jmp
cmp
mov
in
loop
bts
incb
cld
pop
mov
dec
lcall
leave
xchg
mov
adc
insb
adc
aam
inc
mov
in
je
push
fisttps
loopne
out
sub
fwait
xor
sarb
fdivr
and
out
jae
stos
pop
jo
fstpl
test
or
scas
or
aam
testl
mov
jecxz
inc
ficomps
lahf
adc
xor
std
cmpsb
icebp
movsl
mov
add
pop
dec
jl
add
outsl
aam
icebp
sahf
cmpb
mov
rcrb
and
lock
rcll
push
mov
int3
outsl
sar
adc
or
add
add
mov
adc
loopne
lods
test
fiadds
jp
xchg
xor
cmp
sub
cld
inc
pop
test
sub
mov
adc
mov
nop
pop
dec
iret
xorb
adc
mov
mov
mov
je
pop
mov
loop
push
ja
lds
hlt
dec
test
mov
or
sub
or
cld
hlt
pop
adc
subl
add
bound
hlt
push
push
xchg
sbb
cli
xor
pop
dec
sarb
es
add
xchg
xor
mov
popa
xor
leave
aas
loop
das
popa
push
decb
sarb
and
scas
and
push
add
push
fidivs
add
or
jge
lret
cltd
xchg
fbstp
bswap
or
call
cmp
mov
jo
pop
and
and
iret
scas
and
push
mov
pop
fildl
jne
filds
push
imul
adc
add
pop
mov
loopne
sbb
or
sarb
test
and
leave
adc
pop
sbb
adc
negl
and
mov
pop
pop
and
and
mov
ror
fcomip
pop
ljmp
loope
rcrb
pusha
rorb
es
ret
jno
test
add
fstl
stos
cld
inc
rclb
dec
lcall
mov
shll
push
xchg
adc
and
insl
mov
pop
ds
cmpsb
psubw
jne
cld
fildll
and
pushf
lcall
test
daa
sahf
js
sub
shld
ss
xor
sub
mov
decl
rolb
lock
inc
loope
xor
mov
cmp
mov
xorl
sbb
sub
pusha
sbbl
les
cld
loopne
xchg
mov
sub
test
sub
lods
xchg
mov
aas
add
or
xchg
jb
sar
dec
cmp
jne
adc
cmp
push
sbb
loop
dec
and
xchg
stos
mov
pop
std
mov
pop
mov
arpl
aaa
push
fidivrs
or
cltd
cwtl
mov
jle,pt
jae
xchg
js
jne
xchg
add
fwait
jle
cmp
mov
jl
dec
cwtl
lods
pushf
fdivr
mov
pop
loope
loopne
rcrb
jmp
adc
push
cld
xlat
pushf
sub
cmp
push
mov
and
clc
divb
pop
jbe
xchg
fwait
ds
in
push
fidivl
or
xchg
fldcw
inc
add
jle
and
mov
js
mov
adc
xor
sub
pop
push
dec
cltd
inc
test
lret
xor
mov
rclb
jns
xchg
rol
icebp
dec
daa
clc
stc
mov
loop
cld
pop
clc
pop
fiadds
cmpsl
addr16
sub
sub
psubq
adc
pop
xor
inc
cmpsl
mov
jbe
push
pushf
add
daa
lods
sbb
popf
jecxz
mov
hlt
test
jne
les
jmp
xchg
adc
dec
mov
lock
add
sti
repnz
push
mov
or
ljmp
aam
insb
sbb
test
clc
out
inc
or
notl
add
push
out
mov
mov
cmc
sub
fcmovu
clc
cmpsb
pushl
inc
sub
mov
jp
fisubl
bound
sbb
cmp
insb
sbb
in
or
lahf
cmp
xchg
inc
leave
rdmsr
or
xchg
in
push
jg
sbb
and
clc
pusha
jg
pop
dec
mov
pop
adc
rcll
xchg
call
inc
dec
push
andb
mov
lcall
std
pushf
lea
mov
rcl
test
into
lcall
push
icebp
add
scas
add
in
push
pop
cmp
xchg
bound
aas
adc
pushl
loop
insl
ss
clc
sub
pop
rorb
add
out
pop
fnstsw
add
adc
push
inc
sub
sbb
mov
sbb
scas
xor
dec
or
scas
cmpsl
or
and
outsl
test
aam
es
bound
shll
out
mov
mov
dec
mov
and
test
push
mov
jne
stos
decb
sbb
movsl
leave
inc
mov
cli
mov
mov
in
cli
dec
add
sub
arpl
popf
scas
fwait
pop
and
sbb
cli
ds
sahf
inc
int3
clc
scas
add
mov
adc
pop
orb
cmpsb
js
ss
jmp
insb
sub
jge
out
inc
xor
shlb
mov
lea
xor
stos
adc
out
mov
dec
scas
push
ret
push
xchg
pop
sub
lret
fs
xlat
addr16
cmp
std
xchg
push
bts
pop
shl
enter
cli
outsb
pop
sbb
aad
xchg
dec
mov
js
push
mov
clc
insl
lahf
lcall
fwait
subb
dec
jle
add
inc
sub
mov
jo
sub
daa
nop
dec
enter
xchg
inc
scas
sub
pop
inc
arpl
xchg
xlat
lea
fcoms
mov
jno
or
cmpb
fsubrs
addr16
arpl
mov
xor
xor
xor
cli
push
daa
sub
call
mov
mov
dec
mov
and
mov
mov
mov
mov
xchg
push
lret
mov
lods
xchg
mov
scas
jp
loop
sbb
aam
dec
inc
xor
mov
add
test
clc
repz
icebp
push
out
or
imulb
pop
pop
mov
loopne
imul
cmp
pop
adc
cmpb
dec
jne
sbb
rorb
inc
sahf
push
jecxz
cmpsb
test
adc
and
push
sbb
in
sbb
add
adc
dec
sbb
mov
out
mov
roll
shll
inc
int
mov
aam
sub
jbe
sarb
mov
and
push
pop
outsb
sbb
dec
mov
loopne
push
iret
subb
cmpsb
adc
clc
neg
aam
pop
push
cmpl
andb
cwtl
and
shlb
das
js
dec
and
lret
scas
jmp
hlt
push
movsl
dec
cmp
icebp
sti
decl
sub
test
mov
inc
aam
cli
xor
add
mov
mov
les
pop
adc
lock
or
mov
and
mov
mov
jle
or
dec
or
shll
inc
imul
movsb
pop
jecxz
and
xchg
inc
pop
aad
or
inc
dec
cmp
xor
shlb
loop
loop
sub
sbb
test
imull
jmp
mov
push
imul
mov
adc
sbb
adc
adc
dec
pop
sbb
mov
xor
pop
mov
aas
cmp
push
aaa
adc
scas
mov
mov
lock
test
rcrl
cld
ds
mov
out
pushf
scas
shrl
mov
jo
fsubs
aas
mov
xor
xor
movsb
dec
clc
adc
mov
es
aaa
mov
ja
popa
popa
dec
and
add
push
mov
pop
sbb
or
aas
add
mov
push
pop
sbb
test
mov
getsec
or
xchg
mov
in
int
lock
aas
cmc
bound
aad
cmp
sbb
loope
sahf
arpl
mov
mov
fwait
movsb
mov
and
pop
ss
rorl
lods
and
xchg
addr16
or
fmulp
or
dec
mov
ret
or
sar
xor
push
jl
int
stos
in
jp
and
adc
push
nop
dec
les
stos
in
lea
jbe
jnp
test
scas
cmp
add
orb
pop
aam
loop
inc
adc
mov
jp
mov
xor
add
or
push
push
push
xchg
icebp
jb
pop
mov
pop
pusha
jo
add
and
mov
inc
stos
ds
adc
push
mov
mov
movsb
ss
fwait
daa
inc
pop
jp
push
push
push
clc
hlt
les
add
pop
and
imul
pop
test
mov
and
data16
andb
mov
shlb
add
xchg
adc
mov
mov
mov
je
push
adc
or
pop
fstl
popf
dec
sub
push
cmp
aam
mov
jp
scas
rolb
aas
dec
mov
sbb
add
jo
jbe
loope
pushf
outsb
xlat
pop
adc
mov
cmp
enter
push
pop
mov
iret
cmpsl
dec
fistpl
inc
lret
mov
fidivs
dec
imul
sub
fstp
lret
mov
xor
insl
ljmp
dec
add
add
pop
in
pusha
mov
jno
cwtl
shlb
das
or
lcall
cld
stc
sahf
dec
push
pop
mov
sahf
mov
shl
xor
fisubrs
sbb
lcall
jg
adc
lock
adc
jo
add
imul
or
call
fs
push
stos
arpl
mov
shrb
push
mul
mov
dec
imul
mov
test
int3
dec
xor
jno
andb
cld
shrb
sbb
aas
xchg
daa
out
cmp
xchg
xlat
bound
mov
adcl
test
adcl
lods
pop
pop
sete
or
pop
test
push
or
aam
jle
dec
jb
ljmp
faddl
push
jns
sbb
jmp
fcoms
jecxz
cmp
inc
pop
sbb
xor
fnstsw
aaa
mov
rclb
dec
aas
aaa
jno
inc
pop
jecxz
stos
nopl
pop
jl
jo
mov
icebp
fstl
add
adc
std
cmp
movsl
outsb
sub
aaa
fdivrl
fldcw
or
dec
test
or
cmpsl
orb
sbb
pop
xor
dec
rcrb
xlat
add
aam
and
sub
jmp
add
inc
pop
sub
push
adc
lock
mov
mov
xchg
jg
lock
data16
pusha
int
mov
push
or
inc
rorl
push
cmp
jecxz
testl
fwait
adc
adc
push
push
push
je
pop
enter
sbbl
das
imul
test
mov
aad
jae
xchg
loopne
stc
iret
dec
std
popf
out
leave
and
jecxz
xor
adc
sub
or
rorb
sbb
pop
pop
jae
cld
movsl
dec
xlat
outsl
gs
jg
bound
pop
imul
in
jmp
jne
cmp
mov
xchg
push
ljmp
mov
xchg
aas
add
cld
mov
test
int3
adc
sbb
mov
lea
mov
add
mov
test
push
ret
jge
dec
movsb
mov
decl
mov
das
push
pop
fcompl
pop
clc
jbe
in
push
and
mov
jno
or
rol
sbb
xlat
and
or
mov
push
frstor
pusha
ljmp
jle
aad
into
ficoml
cli
fldt
add
adc
mov
mov
mov
clc
or
xchg
testl
xchg
jno
ficompl
mov
mov
add
fucomp
xchg
cltd
sbb
cmp
dec
rolb
add
xchg
mov
aad
inc
fistpll
loop
dec
popa
add
out
cltd
push
incb
sbb
push
les
lret
enter
sbb
arpl
mov
repnz
mov
sbb
movsb
dec
fdiv
and
sbb
push
mov
lahf
dec
aaa
rcll
loope
loope
cmc
test
cmp
pushf
mov
inc
jle
iret
or
pop
xor
add
cli
dec
jb
jae
cmp
js
lea
subb
or
in
xor
mov
aas
sbb
or
sbbb
shrl
out
or
and
mov
rolb
lea
in
nop
inc
or
ja
pusha
pop
push
fbld
or
mov
inc
dec
stos
sbb
or
mov
in
mov
shrl
xor
aad
cld
insl
lret
push
or
push
jns
push
dec
icebp
dec
lods
cmp
jo
fsubp
aas
pop
xchg
sbb
pop
lahf
push
sbb
add
dec
mov
push
dec
push
and
addr16
mov
popa
fwait
inc
cli
ret
sub
and
bound
or
ffreep
and
jge
in
roll
fsubs
shlb
clc
lods
inc
std
popf
or
cmp
lods
aam
cmc
xchg
rolb
jae
movl
xchg
mov
fildll
jmp
or
stos
movsb
scas
push
pop
mov
xor
shrb
mov
rcr
dec
rcrb
sub
sbb
popa
or
imul
pop
jo
or
mov
fs
cmc
insl
xor
jo
hlt
out
sti
lock
xor
bnd
test
loop
push
xorb
fstl
inc
pop
test
dec
je
lret
cld
insb
jge
loopne
adc
cwtl
or
mov
push
and
and
jbe
inc
pop
nop
jae
cmp
insl
mov
inc
stc
push
or
inc
outsb
hlt
repz
mov
call
test
jecxz
jl
lahf
cmp
jns
aaa
jmp
loop
push
in
fstpt
mov
inc
outsl
jo
mov
outsb
xchg
pop
scas
jecxz
and
cli
sub
mov
out
push
call
or
dec
cmp
loope
lcall
stos
outsb
psllw
push
loopne
mov
outsb
jl
ffreep
push
addl
add
or
daa
cs
clc
clc
jnp
fsubr
in
lock
xchg
fmuls
testl
call
loope
inc
in
xlat
incb
andb
cmp
ss
ret
call
fiaddl
mov
and
cmp
sub
rcrl
loopne
in
rclb
cwtl
insl
pop
popf
andl
add
or
push
clc
roll
cwtl
sbb
lahf
add
or
lods
jg
jbe
cmp
dec
pop
and
movsl
ret
test
rorb
std
imulb
cltd
jle
push
sbbl
inc
insl
or
mov
and
mov
outsl
dec
lcall
in
sub
shrb
inc
xor
inc
inc
les
imul
push
adc
nop
rcrb
mov
mov
push
cli
sbbb
stos
subb
xlat
jnp
jae
imul
add
sar
xchg
cli
and
decl
aas
mov
cmc
in
lret
xor
clc
cwtl
cmp
xchg
sbb
sub
dec
inc
mov
cmp
popa
mov
or
outsl
xchg
clc
dec
cld
jp
and
inc
add
dec
lcall
les
cmpsl
repz
pop
in
sarl
in
adc
push
std
stos
mov
fs
pop
dec
ljmp
xchg
jbe
sarb
lock
push
or
lock
negl
mov
adc
cli
pop
adc
aad
pushf
cmc
cmp
pop
sbb
pusha
jge
ja
in
pop
sarl
add
pop
bound
orb
push
sbb
in
inc
lahf
adcl
dec
and
lds
mov
out
addr16
push
and
ret
pop
ret
test
ja
dec
call
push
insb
clc
aas
sbb
aad
arpl
mov
dec
adc
cltd
adc
mov
xor
shlb
orb
aad
roll
sub
int3
push
sbbb
lcall
loop
dec
out
inc
push
pop
mov
xor
push
arpl
fimuls
decl
push
adc
cmp
cmp
xchg
mov
pop
loop
add
mov
pop
lahf
push
mov
mov
jp
adc
dec
fistps
cmc
push
mov
cs
pop
pop
mov
leave
sbb
xchg
mov
adc
mov
mov
jle
jmp
movsb
mov
cmp
add
mov
pop
cmc
emms
push
mov
test
test
mov
push
addr16
jge
pop
ljmp
imul
mov
int3
nop
lock
mov
testb
or
adc
roll
bswap
nop
hlt
pop
mov
je
orb
mov
push
cmpl
fiaddl
cmc
iret
sbb
or
enter
dec
and
xorb
outsl
clc
dec
cld
adc
sarl
mov
push
test
xor
out
clc
lods
cmpsb
xchg
xorb
mov
sbb
shrb
sub
sarl
data16
or
ja
add
clc
cmp
lcall
and
and
jle
outsl
sub
mov
mov
or
outsb
cli
mov
sub
push
icebp
and
xchg
inc
movsl
adc
js
mov
jecxz
scas
lahf
or
jmp
mov
or
or
adc
mov
push
or
fcomps
inc
std
push
push
mov
dec
lods
clc
dec
sar
cmpsb
sbb
or
outsb
ljmp
idivb
mov
ss
pop
mov
aas
clc
pushl
je
lret
cld
in
jmp
push
dec
mov
mov
and
adc
push
pushf
enter
jl
add
jp
decl
lret
insl
ljmp
mov
jb
aas
mov
jbe
adc
mov
lret
int
call
ret
jbe
inc
mov
arpl
push
mov
xchg
dec
std
push
pop
mov
mov
hlt
enter
daa
call
cli
push
push
adc
adc
push
js
pusha
xchg
adcl
inc
ja
rcll
ds
pop
or
jp
push
adc
ret
mov
mov
sub
shll
adc
push
rclb
adc
ja
je
cmp
imul
fmulp
nop
mov
push
mov
mov
movsl
out
push
and
dec
xchg
movsb
cmp
fisubl
xor
loop
cmpsl
shr
loop
test
cld
enter
enter
decb
jg
mov
pop
loop
jb
movsb
loope
cld
jl
fcomps
aad
adc
imul
gs
gs
xchg
inc
inc
fcomip
ss
loop
push
fnstcw
jg
cld
adc
stc
xor
lds
add
dec
jecxz
shll
enter
mov
sarb
pop
stos
push
fwait
rcll
scas
js
mov
test
cs
ljmp
push
add
ret
pop
outsb
popl
sub
addb
ficoml
jbe
ljmp
xor
or
bound
dec
cld
push
test
inc
pop
inc
in
add
hlt
mov
mov
es
ljmp
mov
cs
mov
daa
add
aam
and
test
sbbl
call
add
out
cmp
adc
hlt
rol
rolb
rclb
leave
subb
loope
push
jns
int3
ret
idivl
ret
mov
xor
push
add
test
xchg
mov
es
out
pop
rorl
pop
in
ror
adc
sbb
fisubs
leave
mov
movhps
movsb
js
call
cmpb
js
inc
xchg
mov
jo
cltd
push
cwtl
lods
cmp
out
dec
sub
add
xor
lods
je
movsb
cwtl
mov
pop
lret
sarl
and
loopne
bound
test
mov
sub
hlt
inc
jbe
iret
mov
sahf
push
push
pop
xchg
fidivrs
fisttpll
or
pushf
push
test
jns
xor
test
xchg
lock
adc
cld
pop
shlb
shll
lret
loope
mov
incb
test
imul
pop
pop
jo
adc
mov
add
hlt
push
fisttpl
fldl
xchg
pop
dec
in
daa
xor
or
out
outsb
mov
gs
push
add
cli
pop
cld
pmulhw
aad
and
mov
or
lods
push
and
adcl
fucomp
adc
insb
jge
xor
lock
mov
fcoml
js
or
dec
aas
js
lock
insl
lods
sbbb
inc
insb
push
ret
shrd
sub
loopne
out
push
imull
inc
push
cmpsb
cwtl
sbb
outsl
scas
shr
push
jmp
lret
adc
pop
repnz
inc
mov
dec
push
mov
xor
insb
push
out
add
adcl
xor
jmp
jno
pop
push
in
sar
adc
lea
add
and
les
scas
ret
mov
cmp
sti
add
pop
add
fwait
std
mov
sbb
sbb
push
hlt
push
xor
xchg
pop
out
mov
pop
test
cwtl
popf
mov
pusha
mov
mov
jbe
outsl
and
dec
popa
sbb
or
mov
pop
jle
jp
pop
mov
sbb
pop
in
lock
mov
push
jmp
out
add
or
notl
push
sub
je
je
dec
hlt
sub
lcall
sub
into
pop
loopne
mov
or
decb
mov
inc
test
hlt
out
idivb
out
mov
or
rorl
icebp
gs
sub
dec
out
and
mov
ljmp
inc
push
mov
jb
dec
iret
shll
jno
sti
loopne
arpl
jl
div
mov
pop
and
jmp
outsl
lods
shll
mov
and
ljmp
and
imul
clc
dec
cmpb
in
lret
pop
adc
jg
push
in
mov
pusha
outsb
dec
mov
pop
cli
lea
test
mov
jle
xor
andl
mov
stos
jnp
js
push
cltd
aas
pusha
je
mov
cli
pop
das
mov
mov
pop
lock
mov
aam
je
adc
pop
out
lock
and
test
clc
lods
xchg
xor
out
flds
jp
mov
push
push
lock
lret
xchg
push
adc
dec
dec
js
out
cbtw
add
mov
cmp
adc
jnp
adc
out
ss
push
scas
xor
fcmovne
loopne
fdivs
in
cmp
mov
xchg
push
cld
clc
sub
jp
jno
xchg
aam
sub
shrl
scas
mov
call
cmp
in
cld
xchg
aaa
jecxz
in
out
xor
mov
mov
insb
test
sbbb
add
mov
fdivrs
out
ss
js
icebp
loopew
sbb
shrl
sbb
je
inc
in
mov
add
xor
pop
or
bound
cmp
fildl
testb
mov
jp
cmp
lock
sbb
testl
in
xchg
xor
shrb
outsb
push
je
xchg
inc
sbb
jg
cmc
adc
aad
or
mov
adc
cmp
pushf
add
pop
pop
loop
push
ss
subb
dec
lods
cld
xchg
cmp
push
mov
xor
dec
mov
sbb
clc
mov
into
enter
shlb
aaa
adc
pushf
sbb
xchg
mov
cmc
mov
xor
or
pop
adc
ss
sahf
or
call
fimuls
mov
neg
fs
ficoml
hlt
xor
fiaddl
aas
sub
fsubrl
inc
inc
push
popa
subb
clc
mov
pop
pop
pop
mov
pop
cld
cmp
dec
mov
sub
pusha
sbb
push
jmp
pop
push
add
push
cli
push
cmp
pop
push
mov
sbb
incb
cltd
xor
das
aas
movsbl
loopne
mov
aaa
call
movsb
movsl
lods
shrl
cmp
jp
cmc
adc
aaa
mull
mov
mov
dec
movsb
push
and
dec
xor
ljmp
jle
adc
xchg
stos
mov
push
scas
inc
pop
daa
cli
loop
insb
jg
rclb
jb
arpl
idivb
fwait
movsl
or
lods
sti
cmp
mov
or
inc
mov
jl
pop
clc
or
pop
push
adc
add
js
adc
mov
inc
ss
pop
inc
ljmp
in
rcrb
imul
pop
pop
xchg
nop
popf
decb
fmuls
adc
mov
pop
push
ja
jecxz
mov
push
cmc
rclb
lods
lret
sub
adc
xchg
push
inc
mov
mov
lret
jbe
ss
loope
out
mov
std
mov
lods
mov
dec
sbb
or
stos
or
jp
nop
daa
pusha
sar
pop
jg
repz
or
jmp
iret
outsl
bound
aas
hlt
ja
fsubs
add
add
cltd
add
jbe
icebp
je
jmp
lods
jp
mov
fcomps
out
aam
mov
mov
pop
outsl
and
cmp
add
sti
cmp
enter
mov
xchg
sub
lea
inc
popa
cmc
pop
jnp
add
popa
clc
mov
test
shrb
adc
fidivrs
xor
dec
sar
std
sbb
pop
lret
and
fbld
push
lods
push
push
push
fidivl
scas
add
push
inc
sub
hlt
push
inc
insb
pusha
insb
sti
popf
int3
sub
jnp
mov
ret
sbbb
fs
sbb
mov
pop
loopne
std
dec
jne
shrb
jp
or
inc
jp
adc
or
loope
ds
inc
or
lock
fsub
and
mov
rcrb
mov
cld
or
dec
std
std
dec
rolb
js
mov
jg
inc
xor
out
repz
stos
mov
mov
mov
sub
mov
bound
imul
or
xor
sbb
jle
loope
les
insb
out
loopne
mov
xor
dec
shlb
jbe
mov
push
ss
imul
pop
das
enter
gs
pop
lahf
add
dec
cmc
add
pop
dec
pushf
movsb
jnp
les
pop
lea
pop
pop
lods
adc
scas
test
rol
push
jg
fwait
clc
fcmovnb
in
movsl
mov
cmpsb
loope
sbb
out
pushf
les
mov
pushf
jg
icebp
popf
push
jle
int
ds
add
push
loopne
fidivs
in
inc
sarl
sbb
fs
fs
int3
imul
orl
xchg
pushf
pop
sub
pop
mov
pop
loopne
jp
mov
xorl
out
popa
inc
jp
arpl
scas
xchg
test
nop
out
xchg
mov
fcomps
and
cmp
clc
sbb
fdivrs
call
pop
into
ret
and
jmp
je
add
push
jmp
cmp
xchg
mov
mov
mov
aad
adc
xor
jae
popa
mov
or
out
dec
mov
lods
daa
arpl
xchg
push
scas
into
hlt
in
cwtl
pop
shrb
insl
add
incb
mov
hlt
pop
je
push
add
inc
int
icebp
test
sbb
cmpsb
mov
in
pushf
fcoml
mov
push
daa
je
arpl
ss
hlt
sbb
sbb
pop
sbb
xchg
mov
add
pop
test
dec
sbb
push
dec
xchg
xchg
add
mov
pop
and
push
push
mov
sub
repnz
inc
in
jbe
stc
cli
out
inc
xor
pop
push
jne
push
jmp
fcompl
add
aas
inc
popf
out
jle
mov
inc
sub
inc
std
loope
jl
sarl
ffreep
inc
push
xchg
inc
pushf
pop
sbb
push
mov
fiadds
mov
sub
ficompl
loopne
aas
cli
clc
out
push
je
not
jecxz
push
xchg
out
cmpb
xchg
sub
ja
sbbl
sub
lahf
mov
sahf
mov
add
sbb
mov
mov
fisubrl
jne
mov
rorb
pop
call
jbe
sbb
aaa
push
add
clc
sti
cmp
roll
imul
inc
cmp
mov
popa
inc
lds
jb
aam
add
loopne
pop
mov
push
in
movsl
mov
inc
outsl
or
or
sbb
adc
stos
test
les
outsl
mov
push
adc
mov
fistpl
ss
mov
inc
inc
xchg
std
mov
stos
jp
jle
ret
clc
push
popf
mov
rclb
lods
cli
push
in
adc
push
pop
in
push
inc
xchg
in
dec
cmp
sbb
cs
inc
enter
in
rcll
cmp
cli
hlt
mov
and
je
ret
jae
or
cmc
dec
pop
repnz
sbb
sahf
mov
mov
mov
clc
pop
adc
inc
mov
es
cmp
mov
scas
mov
adc
pop
adc
push
adc
jns
mov
sbb
mov
mov
jo
mov
mov
mov
mov
xlat
pop
pop
cmp
fcmovnbe
cld
mov
pop
test
inc
and
les
jb
fiadds
cld
xchg
cmp
shrb
icebp
fcoms
je
xchg
mov
sub
mov
mov
dec
cmp
inc
adc
jl
cmp
shlb
jo
pop
xor
aaa
cmp
aas
or
out
dec
sahf
fldcw
dec
je
jg
fstp
mov
mov
sub
aam
add
in
add
jge
imul
movsl
nop
mov
or
lret
rclb
push
add
in
in
cmp
test
cmp
jmp
ret
xor
xchg
leave
sbb
or
aas
push
or
pop
mov
iret
sub
hlt
nop
cmc
and
xchg
fimuls
jg
cwtl
gs
out
xor
push
inc
push
outsl
and
stc
mov
aas
xchg
sbb
insl
lcall
mov
nop
fmull
push
or
js
out
inc
nop
ss
inc
test
push
mov
jp
hlt
call
out
dec
jp
mov
cmc
add
test
add
nop
fs
scas
ret
aas
push
add
cmpsl
add
lock
out
out
arpl
lods
lods
in
jge
dec
pusha
test
push
or
xor
push
dec
lret
xchg
push
mov
in
cld
push
sbbl
sbb
test
loope
add
fiadds
jbe
ud2
sbb
fisttps
push
das
arpl
out
dec
add
and
cwtl
push
popa
into
mov
mov
orl
mov
dec
push
inc
rcll
clc
jbe
or
lea
inc
stos
mov
imulb
pushf
jle
addl
adc
add
add
xor
push
outsl
jmp
cmpsb
mov
pop
pop
fimull
loopne
jae
fs
loop
inc
shll
mov
adc
mul
popl
mov
loope
adc
push
inc
loopne
mov
sub
sahf
add
ljmp
or
jmp
loope
xchg
lods
adc
repz
test
add
imul
cmp
shl
mov
lds
and
in
dec
inc
and
dec
popa
and
cmp
aad
push
mov
mov
xor
lret
sbb
cmp
xor
or
fwait
inc
jg
lcall
add
push
daa
shlb
add
popf
dec
cmpsb
jb
pop
cwtl
pop
jo
and
fwait
mov
rcll
add
jmp
push
lock
mov
shll
push
inc
add
fldcw
nop
mov
push
fld
add
jo
insl
sbb
repnz
inc
push
inc
ja
xor
test
ljmp
mov
jno
push
enter
pop
out
test
ret
and
jo
mov
les
cli
mov
sub
mov
mov
add
jbe
push
ret
adc
mov
test
sarb
popl
sbb
push
imul
loopne
lods
add
dec
xchg
push
mov
mov
inc
test
cmpb
out
outsl
xchg
mov
lahf
ss
sbbl
fwait
pusha
jle
test
add
sarb
aaa
inc
ljmpw
sbb
xor
pop
add
mov
adc
cmp
jns
xchg
mov
arpl
addb
jo
pushf
sub
or
and
std
sbb
imul
xchg
cmp
jecxz
add
or
add
shll
or
xor
or
lea
fs
mov
call
subb
inc
mov
dec
fwait
jecxz
addr16
sub
jecxz
jb
cmpsb
sub
mov
mov
inc
sub
inc
or
lods
movsb
int
jp
stos
cltd
mov
cltd
mov
push
pop
and
movsb
pushf
aad
mov
stos
fs
mov
mov
jb
lret
cmp
imul
lret
lret
xchg
sub
js
fnsave
pop
test
add
mov
js
mov
mov
sub
daa
adc
inc
xlat
push
shrb
out
adc
push
adc
imull
mov
in
mov
decb
jmp
jns
xor
pop
imul
push
add
rorb
leave
stc
bnd
popf
push
push
clc
gs
fildll
cmp
add
cmp
inc
mov
add
xor
xchg
fsubrs
inc
mov
ss
push
adc
int3
in
addr16
dec
and
adc
xlat
or
loopne
mov
add
pushf
je
adc
xor
fsubs
addb
js
xchg
add
mov
inc
je
es
aas
cltd
add
mov
aam
mov
add
sub
jo
mov
xchg
xor
and
pop
dec
rorb
fs
mov
inc
shlb
adc
imul
and
sub
inc
test
mov
mov
sub
mov
xchg
test
jl
or
adc
loope
add
out
jne
add
pusha
xchg
rcr
cld
mov
adc
stos
addr16
xchg
lahf
sub
jmp
xchg
cmpsl
pop
jg
cwtl
fnstsw
arpl
enter
push
mov
aas
test
add
in
sbb
add
push
fsubrs
aad
push
or
pop
push
push
movsb
fists
fadd
add
inc
xor
cmp
mov
mov
xor
add
sbb
mov
shl
mov
je
xor
mov
adc
jl
je
fucomip
and
ljmp
addr16
cli
leave
mov
fcoms
daa
mov
add
push
jo
scas
aaa
into
cmp
or
test
ds
push
hlt
jl
cmc
hlt
jmp
cmp
and
or
jnp
jle
ds
jb
subb
push
outsl
jmp
dec
xchg
mov
stos
loopne
fnsave
pmulhw
xor
dec
dec
add
shrl
mov
ja
sub
scas
adc
stos
inc
push
mov
in
sub
test
pop
fadds
sub
xor
xchg
loope
inc
jl
mov
push
out
dec
insl
jbe
jbe
jp
subb
jns
adcb
and
pop
movsb
push
out
add
jae
fcoms
cwtl
add
pusha
xchg
inc
add
push
subl
inc
inc
inc
pop
jp
in
cmpsl
add
adc
dec
xchg
xor
sbbb
adc
pusha
mov
loop
icebp
adc
pusha
aam
js
sbb
mov
das
jo
mov
ja
sbb
popa
mov
aad
and
adc
inc
insl
mov
sbb
sub
mov
cmpsb
mov
jbe
pop
add
roll
xor
jbe
fsubl
push
mov
mov
fwait
mov
add
ret
int
inc
ds
pop
js
jne
push
mov
xlat
pop
fs
cli
cmp
pcmpeqb
mov
lods
ret
mov
push
inc
pop
data16
add
dec
jmp
fsubrs
int3
cmp
mov
es
es
adc
mov
pop
divl
add
inc
ret
mov
cmpb
rcrb
cmpsb
push
adc
pop
aas
dec
imul
or
cli
pop
mov
dec
cmp
adc
or
cmpsb
dec
movsb
add
das
mov
mov
or
arpl
pop
sbb
fiaddl
lea
fisttpl
inc
xor
fbstp
bound
sbb
or
xlat
inc
cli
cwtl
arpl
adc
popa
cli
or
adc
add
testl
add
and
xchg
sbb
shll
and
shlb
out
add
pushf
fwait
xorl
pop
shll
sbb
bound
pop
lds
dec
aaa
lods
shlb
stc
xchg
and
subl
or
adc
imul
ljmp
pop
stos
iret
lea
mov
adc
push
xor
pusha
jne
lahf
loop
icebp
cmp
add
push
out
ret
inc
hlt
pop
lcall
xchg
jbe
jle
lock
push
movsb
sbb
cwtl
xchg
xlat
adc
adc
push
cmp
jne
bound
mov
push
or
mov
int
or
dec
nop
adc
clc
dec
rorl
rcll
cli
das
lods
into
les
fidivl
pop
cs
stos
mov
lods
dec
ja
add
fmulp
fwait
lock
adc
in
daa
mov
shlb
xchg
rclb
cwtl
nop
mov
mov
cltd
pop
mov
sbb
outsb
jmp
jl
icebp
decb
cmc
adc
mov
cmp
push
pop
icebp
scas
adc
repnz
cmp
mov
shld
mov
sbb
add
xlat
fcoms
xchg
xchg
jae
sahf
pop
shld
push
scas
and
icebp
out
or
leave
sub
xchg
pop
adc
pop
jp
repz
push
xor
mov
xchg
movsb
mov
bound
add
insb
lea
inc
pshufw
sbb
out
loope
mov
cmc
pop
jnp
js
sub
cltd
nop
scas
lock
jo
xor
xchg
xor
icebp
xor
inc
jns
push
ss
push
std
and
adcb
xchg
dec
xchg
pop
jle
push
testb
dec
ds
rcrb
lret
call
enter
xor
aaa
jmp
mov
and
and
mov
insl
add
pop
scas
setl
xchg
xchg
jnp
mov
inc
mov
lcall
hlt
jb
test
outsb
or
push
pop
out
pop
dec
jae
into
jne
pop
dec
or
aad
jmp
jmp
ret
ja
aas
inc
add
and
cli
fadd
js
call
in
mov
cs
incb
pop
mov
cs
cld
pusha
mov
and
pop
loope
mov
mov
adc
mov
test
adc
mov
int3
sub
iret
push
icebp
add
ja
test
mov
icebp
nop
inc
scas
sub
leave
orb
or
repz
ja
je
or
stc
fsub
ds
push
pop
mov
sub
ljmp
mov
frstor
inc
adc
imul
adc
xchg
cmc
push
mov
xchg
jb
out
adcb
add
adc
add
jo
ds
jp
push
pop
xor
or
fs
push
push
dec
ffreep
push
cmpsl
jg
ret
scas
add
jne
adc
fs
roll
cmp
adc
lcall
ret
scas
pop
adc
fiadds
or
jbe
add
in
push
daa
shlb
adcl
sbb
jae,pn
rcl
mov
push
add
pushf
mov
adc
daa
and
int3
pop
rcrb
mov
mov
pop
add
xchg
mov
dec
popl
xchg
sbb
jecxz
mov
mov
adcl
sbb
repz
jp
push
test
cli
in
cmp
pop
cli
jge
cmp
add
dec
xchg
lods
addr16
lods
and
shrb
test
mov
sub
push
jo
das
mov
daa
scas
lcall
sub
mov
jnp
inc
inc
fs
fwait
cmp
inc
stos
test
loope
gs
mov
push
dec
sub
popa
jmp
push
inc
out
int
pop
ljmp
fwait
cmc
push
nop
mov
xor
xor
sbb
mov
pop
sbb
arpl
pop
lret
mov
or
rcrl
test
dec
push
aaa
lret
cmc
cmp
push
insb
mov
pop
in
adc
mov
arpl
out
in
push
sbb
jecxz
lret
sbb
and
xor
add
xchg
mov
iret
adc
xchg
jbe
pushf
xchg
add
fildl
in
jle
pop
xchg
pusha
sbb
mov
push
adc
das
cs
sub
inc
subl
inc
ret
aaa
inc
nop
fisubs
jno
fcomps
dec
cwtl
out
adc
mov
xor
mov
lret
xor
or
or
sbb
inc
lods
aas
repnz
inc
mov
rol
cmp
fadds
test
rorb
dec
jp
cmpb
jmp
xchg
mov
dec
aas
pop
lea
mov
add
shrl
inc
insl
jno
and
inc
pavgb
daa
mov
xchg
and
notl
popf
sub
fld
xor
ljmp
shrb
cltd
cld
jns
adc
aas
cltd
loope
ljmp
jno
xor
xor
popf
or
jo
adc
ds
sbb
repz
rcrb
push
mov
fwait
cmpl
gs
fidivl
sbb
enter
sahf
icebp
lock
mov
vpclmulqdq
cmp
add
mov
gs
push
mov
pop
pop
popl
rcrb
dec
test
sbb
insl
xorl
popa
push
loope
mov
sbb
mov
mov
xor
sarb
pop
pop
cld
push
mov
arpl
dec
out
adc
xchg
fisubs
sub
addb
mov
and
fistps
sub
xor
sub
sbb
pop
dec
mov
rcrb
sbb
pop
icebp
mov
scas
imul
sbb
push
scas
aas
outsl
or
lcall
xor
inc
jp
fst
cmp
std
mov
xchg
fdivs
cmp
push
les
sub
pusha
jns
sbb
addr16
adc
out
rolb
fdivp
gs
add
dec
sub
repz
adc
xchg
add
mov
push
sub
jnp
mov
mov
repz
jnp
mov
test
sarl
jne
pusha
sbb
pop
call
pusha
testl
adcb
adc
das
in
mov
sbb
push
loop
loope
pop
loope
mov
add
cs
dec
sti
xchg
lods
fwait
jmp
icebp
lret
fld
adc
sbb
xor
or
add
pop
and
mov
rorl
and
shlb
daa
sbb
aaa
add
insb
ret
es
lcall
lahf
test
movb
lret
jb
scas
pop
dec
cld
add
and
mov
inc
pop
sub
inc
ja
push
jl
imull
push
dec
es
pop
sbb
orl
mov
mov
push
xchg
shrb
xor
sahf
icebp
jne
addr16
mov
mov
add
xor
pop
movsl
popa
stos
jmp
les
pushf
push
in
dec
jno
fsubrs
add
push
hlt
orb
in
jbe
cld
xchg
push
xor
imul
jecxz
out
adc
ss
pop
push
push
pop
cltd
mov
or
imul
mov
pop
test
or
cmc
xor
mov
loopne
inc
icebp
pop
push
or
sub
xor
lahf
fstp
stos
cs
add
cmpsw
movsb
scas
aad
cmp
or
adc
sub
xchg
imul
cmp
insb
and
mov
adc
popa
mov
decl
pop
mov
adc
dec
js
fwait
jae
push
sub
xchg
cmp
icebp
in
rcrb
sbb
fdivrl
ss
clc
test
adc
popa
mov
add
pop
xor
pop
xchg
dec
gs
mov
dec
push
jo
cmp
inc
in
cli
jge
ret
ja
cmp
sbb
clc
xlat
xchg
rolb
inc
mov
inc
pop
mov
add
test
pop
lcall
sbb
dec
jb
dec
cmp
pop
jp
adc
popf
xor
xchg
pop
dec
cwtl
mov
cmpsb
in
out
test
push
outsb
xor
pop
mov
push
fadd
mov
fwait
addr16
cmp
inc
pop
add
mov
xor
addl
adc
cmp
shlb
mov
out
push
pop
adc
jle
xor
jmp
repz
fdivrs
cmc
push
idiv
adc
or
mov
das
mov
icebp
aaa
and
cmp
cmp
adc
add
mov
rcrb
stos
insb
pusha
addl
sub
aam
pop
addr16
inc
or
arpl
sti
jne
fldenv
push
and
pop
movsb
inc
mov
xchg
xor
dec
mov
inc
mov
popf
dec
add
outsl
rol
mov
es
cmp
or
fidivs
mov
icebp
pop
fmuls
pop
test
repnz
jge
jbe
js
dec
or
fwait
ja
das
push
xor
gs
dec
mov
outsb
stos
adc
add
js
add
push
pushf
ret
stos
jl
cmpl
mov
pop
imul
iret
jge
add
or
arpl
or
mov
outsl
jmp
div
enter
fcomps
sub
seto
pusha
jns
xlat
int3
ljmp
aas
loopne
js
and
outsl
insl
mov
ljmp
aad
xor
fwait
shll
add
sti
sarl
bound
je
lds
sti
stc
adc
xor
add
and
add
cltd
xchg
fcoms
push
xor
fnstsw
or
xor
jg
mov
jbe
std
inc
xchg
test
adc
int3
mov
aad
xchg
dec
insb
cld
sub
pop
pop
adc
dec
jnp
out
std
xchg
add
mov
pop
jnp
pop
cmp
inc
add
aas
mov
bswap
or
mov
add
fld
inc
cmpsl
dec
mov
and
pop
push
or
andb
mov
fiaddl
pop
popa
push
sbb
jg
dec
icebp
adc
cmp
push
add
pop
in
ss
stos
adc
sahf
jp
inc
shlb
aad
and
or
in
mov
pop
mov
orb
out
mov
out
scas
lds
or
mov
pop
insl
and
cmpsb
les
push
inc
or
pop
xor
fmul
xchg
aad
sbb
je
xor
stos
jmp
aam
lock
loope,pt
shll
rorb
lahf
outsb
test
sbb
mov
xchg
ss
scas
adc
lods
mov
movsb
xor
push
stos
mov
adcl
dec
scas
pop
cmpb
in
mov
jecxz
pop
enter
dec
lcall
add
push
dec
mov
sbb
jmp
lods
enter
jno
dec
loopne
std
std
lahf
and
and
dec
sbb
sbb
adc
xchg
sbb
pop
or
mov
xchg
loope
out
cwtl
add
sbb
rcrl
test
lods
xchg
rolb
adc
adc
cmp
or
add
xchg
mov
and
je
sub
pop
mov
test
clc
lcall
cmpsl
clc
add
pop
aaa
sbb
inc
in
jmp
insl
aad
les
int3
sub
insb
lock
mov
andb
shll
arpl
cmova
aad
push
jae
and
and
dec
dec
xchg
mov
adc
pop
loopne
cmp
mov
mov
push
iret
sarl
push
mov
sarb
jne
sbb
push
push
lret
int
imul
xchg
icebp
mov
sub
sbb
das
inc
fists
or
roll
out
dec
imul
cmc
imul
addr16
mov
mov
mov
add
add
pop
mov
in
cli
or
das
fisttpll
andb
push
in
mov
mov
add
adc
mov
fiadds
js
sbb
mov
adc
jne
je
enter
stc
sbb
stos
xchg
test
leave
repz
inc
pop
pushf
rcl
rolb
loopne
mov
xlat
dec
inc
and
clc
sbb
hlt
ds
je
inc
je
cmp
hlt
mov
pop
mov
jg
jge
inc
repz
pop
xor
stos
call
dec
shlb
adc
cmp
roll
mov
sbb
scas
lock
dec
lock
aaa
incl
cmp
push
adc
and
and
cmp
clc
mov
mov
add
xchg
xchg
popf
xchg
jl
sti
dec
adc
test
imul
sub
inc
or
test
das
fstpt
jl
out
rorb
arpl
nop
ret
xchg
or
out
push
repz
jo
jo
rorb
mov
mov
lods
inc
pop
popf
mov
or
xchg
sarl
icebp
loop
sbbb
jmp
xchg
xchg
shll
or
jo
xchg
mov
test
in
gs
mov
es
or
call
mov
pop
mov
test
cmpsb
shll
into
icebp
mov
scas
test
xchg
mov
or
inc
xchg
mov
shl
mov
mov
hlt
loope
aam
ja
sub
cmpsb
mov
enter
leave
or
aaa
cld
xlat
sahf
lahf
outsb
fisubrl
jnp
clc
add
adc
fimull
movsb
mov
or
aaa
cmp
lret
out
push
lret
leave
dec
jecxz
dec
sbb
add
adc
shlb
lock
add
fistl
rcrl
mov
int3
daa
sub
mov
fadd
sub
mov
ret
stos
mov
sub
sbb
out
mov
inc
mov
xchg
pop
mov
je
scas
arpl
mov
adc
test
test
mov
shll
scas
mov
dec
xor
ret
mov
fldcw
xchg
add
pushl
and
mov
mov
js
loop
movb
rcl
jns
fsubr
mov
fcoms
inc
enter
les
ret
xchg
pop
repnz
sbb
cmp
add
rol
aas
inc
pop
fnstcw
inc
leave
loop
push
xchg
inc
mov
in
bound
pop
scas
rorb
orl
mov
loopne
dec
cvtpi2ps
lahf
push
addr16
outsl
cltd
repz
mov
leave
int
std
fidivs
pushf
in
imull
mov
test
mov
int3
lods
rcll
adc
cmp
fidivl
push
ret
inc
lcall
xor
or
cmpsb
sbb
cmp
jae
push
enter
imul
test
dec
jl
jo
in
cmpsb
sub
cmc
in
shlb
add
stc
lods
jns
shr
popa
rcll
sarb
adc
xchg
jae
adc
adc
mov
lret
cli
pop
fadds
dec
fs
dec
cmpl
sbb
clc
mov
int
cmp
int
fisubrl
ret
inc
fwait
add
cld
mov
push
scas
ja
inc
inc
cltd
mov
dec
test
loope
mov
inc
aam
shrl
fildll
lret
mov
jnp
sub
js
lods
sub
call
pop
jge
sub
xor
mov
and
sbb
push
sbb
inc
pop
push
gs
lret
imul
push
fisubrs
inc
pop
adc
xor
inc
rorl
pop
insb
xchg
add
push
jge
jns
addb
stc
aam
and
enter
das
daa
xchg
and
dec
xchg
arpl
add
das
fildll
or
sub
add
and
inc
push
jge
lcall
cmp
scas
cmpsl
mov
inc
jl
mov
lret
cmpsl
pop
rclb
insb
pusha
sub
inc
pop
dec
rorb
sahf
lods
push
and
push
arpl
add
inc
jns
and
xchg
add
lea
js
in
dec
movsb
xor
scas
lock
mov
ret
mov
roll
push
inc
cmp
jo
iret
mov
mov
mov
lcall
sub
or
sub
jno
cld
lock
pop
leave
sub
scas
or
and
loope
inc
popf
lcall
jge
les
push
loopne
xchg
stos
je
outsb
sub
int
daa
push
mov
nop
clc
xor
push
or
adc
and
movsl
and
pusha
and
das
cmc
jle
cmpsl
enter
xchg
dec
xor
leave
out
cmpsb
mov
jae
or
mov
movl
sub
push
out
lret
xor
pop
ja
xor
loopne
push
mov
ss
inc
push
or
xorl
or
jmp
sub
addr16
push
cmp
stc
call
mov
aaa
test
inc
insl
fldpi
xchg
pop
scas
int
daa
sbb
add
je
jge
adc
jecxz
push
arpl
dec
cmp
mov
testl
jmp
aam
xchg
push
mov
jle
and
out
push
movsb
or
mov
mov
sbb
cli
jge
cmc
int
loop
lcall
push
fsubl
shlb
cmpsb
test
out
xchg
out
scas
xor
pop
popf
rorl
iret
mov
xor
adcb
xlat
arpl
mov
aam
loopne
jne
fildl
insl
lock
and
mov
testb
pop
xchg
leavew
add
pop
pusha
cmp
outsl
les
jle
sbb
sub
pop
test
or
cwtl
dec
cli
jb
roll
pop
mov
sub
xlat
sbb
insb
jmp
mov
leave
mov
mov
add
sub
das
xchg
mov
rorb
or
pusha
or
sbb
or
gs
adc
ds
jp
lds
les
xchg
or
ret
shll
sbb
jnp
in
pop
inc
addr16
add
popf
mov
pop
std
stc
dec
mov
mov
add
add
jno
jp
pop
xchg
divb
lock
loope
pop
call
fwait
cmp
mov
sbb
lods
jmp
inc
mov
hlt
mov
lds
cld
es
mov
xor
add
js
test
xchg
loope
lret
xchg
icebp
push
in
xchg
fsubrl
aaa
andb
fstl
mov
mov
sub
loop
cmp
sbb
dec
or
jne
fdivl
fdivl
or
jmp
push
je
inc
sbb
inc
pop
xchg
enter
scas
jp
or
or
out
lock
push
ret
cmpb
cld
nop
push
mov
sbb
mov
mov
jae
lcall
inc
push
cmp
pop
push
xor
jo
shlb
in
pop
xchg
je
add
pop
jbe
cmp
fs
mov
xchg
mov
sbb
sbb
mov
cli
jecxz
xor
sub
call
xchg
arpl
in
pop
aaa
lea
xchg
inc
adc
adc
lret
adcb
mov
jbe
mov
sbb
dec
jg
mov
pop
xchg
ret
mov
pop
pop
cmc
and
xcrypt-ecb
cmpsl
dec
stos
pop
pop
jb
mov
jg
lods
mov
jne
es
scas
jmp
mov
push
scas
dec
cmp
outsb
je
xchg
and
popa
or
jl
jbe
gs
test
or
push
lret
bound
sbb
dec
inc
inc
or
mov
aaa
aam
outsl
cmp
xchg
sub
inc
sub
sbb
push
call
mov
es
mov
pop
dec
jg
std
js
jo
jb
pushf
rol
das
out
xor
sub
loopne
mov
xor
ds
pop
outsb
or
test
xor
pop
clc
sub
pop
cmpsb
ffreep
mov
mov
out
sbb
mov
sbb
cmpsb
ja
loope
lods
sarl
pop
hlt
mov
jp
xlat
jno
push
lcall
push
xlat
pop
lods
stc
data16
mov
das
test
push
jae
mov
pusha
sbb
add
icebp
notb
lret
cmc
fs
mov
mov
lret
orb
sub
ret
sub
loop
ljmp
xchg
outsl
jbe
inc
outsl
loope
jmp
push
mov
pop
test
add
lock
in
push
sbb
xlat
pop
cmp
jle
movb
mov
mov
movsb
add
push
dec
loopne
mov
jne
pop
jge
xor
nop
cli
es
sub
adc
jae
daa
mov
sbb
imul
sti
outsl
jl
push
es
ja
iret
sbb
push
ss
pop
add
xchg
add
dec
int
sub
jne
outsl
pop
repnz
adc
mov
sub
dec
mov
adc
es
push
xor
or
inc
xchg
hlt
shlb
lea
repz
xlat
int
pop
sub
fnsave
cli
mov
jp
aas
rclb
jl
movsl
inc
movsb
cld
rolb
mov
or
nop
hlt
jbe
push
fidivl
frstor
jo
ret
sbbl
cmp
mov
add
cmp
jbe
push
lock
sbb
inc
mov
cltd
xchg
and
fs
cmpsl
add
inc
pop
mov
ret
adc
xchg
filds
mov
push
mov
dec
inc
inc
sub
lock
push
jo
pop
imul
frstor
inc
and
inc
mov
xor
jne
xchg
clc
push
and
jo
sub
mov
inc
loop
adc
xor
or
clc
fdivl
pop
cmpsb
shlb
or
fnstcw
mov
les
ret
leave
sbb
sbb
mov
sbb
adc
or
pop
mov
push
ds
xchg
or
aam
popf
jl
push
sti
aaa
or
sbb
je
unpcklps
imulb
ljmp
add
jmp
call
mov
mov
subb
test
cld
in
out
sarb
scas
adc
loope
nop
cmp
mov
mov
loopne
adc
cmp
and
lods
sbb
xor
sbb
imul
pop
mov
loopne
add
data16
mov
pop
outsl
test
xchg
iret
sti
out
pop
fadds
dec
call
dec
or
ljmp
lcall
lock
mov
mov
iret
pop
mov
and
sbb
adc
sbbb
movsb
push
sub
lds
and
pushf
jns
mov
scas
xchg
dec
data16
jb
test
mov
cmp
notb
mov
pop
dec
add
shr
pop
fsubl
adc
adc
inc
mov
add
pushl
push
cld
pop
scas
push
pop
notb
shrl
adc
jnp
sub
mov
stos
xchg
push
pop
cmp
sarb
rorl
inc
adc
leave
lcall
and
andb
cmp
incb
daa
leave
xchg
push
lock
xor
inc
js
std
lcall
push
and
adc
lods
inc
dec
inc
pop
mov
fisttps
pop
nop
cmp
adc
dec
xor
outsb
dec
pushl
jl
mov
add
std
push
and
sbb
mov
mov
fimull
cmc
inc
cwtl
xchg
ret
jecxz
lea
and
loopne
pop
ljmp
into
ficompl
add
dec
and
enter
bound
push
repz
lcall
or
dec
add
in
repnz
jb
push
xlat
inc
or
sahf
cmp
ds
insb
mov
xchg
adc
dec
mov
inc
sbb
dec
das
xor
push
shl
dec
push
mov
pop
sub
loope
je
pop
jg
adc
mov
sub
mov
sbb
mov
push
ds
mov
call
add
mov
popf
int3
jnp
mov
in
stos
push
inc
mov
sub
and
call
and
ljmp
clc
jbe
jle
push
loopne
cs
push
loop
mov
imul
dec
jle
push
hlt
andl
popa
jge
mov
lcall
push
leave
jo
out
adc
fs
xor
cmpsb
dec
add
dec
xchg
and
jne
and
lock
cmp
and
mov
cmp
inc
jo
adc
shrl
and
aaa
outsl
add
mov
push
jne
xor
push
cmp
movl
in
mov
lea
push
add
cltd
adc
inc
bound
adc
movsb
mov
loopne
les
jg
mov
int3
xlat
inc
sar
movsl
dec
add
and
sbb
jmp
add
cmp
sub
js
mov
das
jno
sahf
or
fldl
dec
cli
test
arpl
sub
rcrb
pop
cld
aad
xor
icebp
cmp
and
mov
sbb
mov
in
xchg
mov
sbb
pop
nop
sbb
sbb
cld
stos
lret
cmc
jp
jb
in
cmpsl
xchg
shlb
mov
mov
sub
sbb
ret
shrl
add
pop
lock
scas
lds
hlt
pusha
aas
rol
es
out
sub
sahf
jb
push
xor
xchg
sub
inc
int3
insl
nop
add
in
insl
mov
xabort
scas
fst
sar
inc
and
dec
in
mov
mov
mov
xlat
mov
rcl
jge
cmpsl
testb
lcall
je
pop
push
and
pop
push
fmull
in
cmc
push
push
cmp
imul
fs
pop
lret
pmuludq
fistpll
outsb
je
andl
add
jmp
jmp
dec
mov
dec
xchg
lds
fs
vmptrst
loopne
je
insb
sub
or
xchg
xchg
mov
mov
add
cmp
xchg
out
jmp
clc
add
xor
and
cs
fs
pusha
jb
mov
movsb
push
out
out
push
push
cs
or
bound
jge
mov
push
cwtl
push
push
push
xor
inc
into
arpl
fucomip
lret
clc
xchg
inc
fdivrl
dec
jp
mov
repz
pop
xchg
clc
data16
pop
xorb
mov
inc
fiadds
adc
or
bound
fists
sbb
repnz
out
sahf
mov
mov
lods
stos
pop
inc
jae
jnp
dec
adcl
lret
jecxz
cmp
aaa
xor
rorb
sbb
mov
testl
jg
fisubrl
cmp
sbb
lock
or
pand
or
mov
xor
pop
mov
popf
dec
pop
pop
inc
dec
or
mov
lods
pop
icebp
hlt
inc
mov
xchg
jmp
inc
pop
sbb
hlt
dec
and
daa
icebp
imul
lds
xchg
test
rcl
les
icebp
mov
and
sbb
xchg
sar
add
pushf
sub
aaa
imul
lock
jle
fisubl
jmp
add
xor
imul
and
pushf
lods
hlt
shll
sbb
sbb
mov
pop
insb
pop
push
scas
out
jne
xor
movsl
cld
xlat
cli
ss
inc
adc
test
inc
hlt
js
or
cmc
aad
sar
and
mov
or
xor
es
shrb
xchg
or
repnz
push
or
inc
mov
and
sbb
sbb
cld
popl
inc
sbbl
pop
loope
ja
or
rcl
int3
sub
push
lds
adc
pop
xchg
cmp
push
xlat
jbe
movsl
jmp
addl
daa
dec
enter
or
and
pop
je
add
hlt
jae
dec
or
sti
aam
push
adc
sbb
cmpsb
sbb
add
xor
cld
xor
inc
jbe
xchg
cli
sbb
pop
shlb
pop
ja
sub
sub
mov
adc
jp
add
bound
das
hlt
ret
inc
xchg
mov
data16
orl
push
repz
pop
push
or
sub
jge
dec
mov
ss
lock
aad
imul
add
sti
jp
push
scas
xchg
push
add
inc
jl
lods
adc
jae
push
sub
mov
inc
or
mov
xor
cmp
dec
cld
or
jbe
mov
mov
dec
nop
jle
loopne
hlt
xchg
xchg
lret
push
inc
scas
lock
les
loop
jp
adc
scas
jl
fnsave
addr16
lock
inc
dec
push
pop
ds
jecxz
les
hlt
xor
mov
cld
mov
or
mov
jl
icebp
add
jp
movsb
sbb
lcall
or
cmp
inc
rcrl
and
fmuls
es
ret
inc
cmp
mov
mov
inc
adc
sarl
addb
dec
in
outsb
pop
mov
add
jbe
notb
loopne
dec
movl
mov
or
sbb
jecxz
cld
in
add
enter
or
or
cmp
push
cmp
jne
pop
jg
shlb
lock
add
pop
inc
testb
inc
add
jbe
inc
xabort
cld
dec
push
pop
lods
aaa
sbb
push
scas
push
lahf
or
and
push
out
lock
push
cwtl
sbb
out
sahf
mov
enter
arpl
repnz
push
movsl
arpl
add
push
mov
jge
adc
pushf
dec
mov
mov
test
nop
mov
xor
sub
sbb
or
insb
sbb
mov
pop
repz
mov
and
cs
xchg
mov
xchg
jmp
add
add
mov
pop
cli
cmpsl
test
push
lock
out
stos
mov
mov
pop
or
add
xchg
add
lock
idiv
jge
jae
sbb
add
sbb
lock
mov
cmc
outsl
adc
lock
xor
mov
cld
sub
xor
call
mov
dec
in
dec
imul
pop
loop
jge
mov
test
aas
cmc
shlb
xchg
push
je
or
pusha
push
shrb
pushf
xchg
sub
mov
cwtl
mov
push
push
mov
clc
cmc
rcrb
sub
xchg
or
scas
sub
mull
imul
xchg
int3
push
sub
mov
sbb
sub
incb
rclb
pop
or
insb
push
and
cmpsb
loope
fcoms
lods
adc
out
mov
push
mov
or
add
inc
mov
sbb
cmp
push
add
inc
inc
outsb
push
fwait
add
adc
nop
aad
push
mov
stos
jbe
mov
cli
mov
pop
jge
or
fdivl
push
xchg
inc
sbb
shl
data16
cmpsl
sbbb
mov
or
sar
push
into
push
loopne
int
mov
adc
fcmovbe
add
and
xchg
add
nop
or
dec
roll
sub
popf
cmc
add
mov
bound
inc
outsl
iret
into
push
sbb
pop
ficoms
add
outsb
or
pop
sub
adc
in
jp
xchg
rclb
mov
rcrl
sarl
mov
push
xor
imul
fldcw
push
je
gs
cwtl
shrl
outsb
fldenv
fwait
or
loop
xchg
push
stos
adc
jle
xchg
or
inc
out
push
cld
dec
loope
cmp
fwait
push
cmp
fidivrs
in
mov
cmc
sbb
je
sub
data16
add
pop
jno
add
cmp
mov
ret
fs
in
clc
lret
aaa
sbb
dec
sub
scas
sbb
ret
inc
clc
sbb
pop
jp
shll
scas
adc
movsb
in
andl
jecxz
inc
pusha
stc
fiaddl
push
mov
sar
cmp
movb
push
xchg
jb
mov
pop
aam
xor
sbb
pop
out
int3
les
das
xchg
sbb
cs
test
shll
cmpsl
or
test
leave
and
jl
enter
mov
cmp
sbb
scas
lea
pop
inc
pop
int
sbb
or
push
xlat
daa
lret
xor
scas
pushl
or
fists
mov
add
xchg
adc
xor
cld
jno
pop
dec
mov
cli
cmp
insb
mov
xlat
add
rolb
js
mov
jecxz
ljmp
pop
xorb
mov
push
dec
jle
dec
rolb
into
aad
pop
mov
sub
clc
sbb
mov
push
inc
dec
iret
dec
add
push
mov
je
add
pop
inc
cmp
addr16
pop
push
shl
dec
xor
aas
outsl
xchg
popa
hlt
and
mov
js
loopne
mov
out
clc
or
push
adc
push
mov
jmp
xchg
in
cmc
or
adc
outsl
popf
cltd
shlb
inc
ja
or
mov
insl
push
inc
xchg
enter
pop
ret
and
aas
bsr
std
fldl
jmp
mov
adc
cmp
icebp
jo
push
movsl
lahf
stos
je
ret
push
addr16
and
movsl
sub
lods
int
fcmovnu
pop
mov
pop
lock
roll
sbb
fsubl
mov
xchg
dec
or
test
call
cmp
mov
mov
xchg
add
cmpb
fsts
cmp
adc
mov
scas
cmp
in
lock
mov
in
add
das
inc
and
add
add
loop
jns
cmp
jle
xor
xchg
push
push
or
xor
cmpsl
loop
stos
xlat
pop
test
xchg
cmp
cmp
mov
pusha
bound
inc
shr
and
je
push
outsb
adc
adc
jno
out
stos
hlt
fwait
movsl
lock
ja
cmp
scas
or
into
jp
pop
pop
idiv
outsb
lods
in
pusha
scas
stc
push
add
inc
dec
pop
sbb
mov
lea
mov
jg
and
lods
cmp
popf
sbb
xchg
dec
loop
mov
outsl
cmp
loop
xchg
mov
ja
fdivs
hlt
push
shlb
pusha
xchg
mov
xchg
subb
xlat
mov
lret
in
xchg
add
stos
outsl
jl
cltd
sbb
xchg
pushf
push
dec
ljmp
inc
loopne
jnp
cmpb
adc
adc
dec
es
sub
scas
fidivl
test
test
dec
sbb
in
fsincos
jp
add
mov
sub
imul
and
faddp
sahf
jmp
mov
aas
adc
jge
in
and
push
jnp
rep
scas
rcll
cmc
jo
sub
cmp
lret
dec
repnz
adc
cmpsb
outsb
cmp
adc
cli
xor
in
push
push
or
inc
test
inc
sti
cli
sbb
mov
mov
scas
jmp
cmp
icebp
fisubl
or
push
cwtl
fmuls
xchg
inc
adc
filds
call
and
ret
push
dec
mov
jp
push
icebp
cmp
lds
aad
push
xchg
cmp
jg
xor
lahf
call
add
lahf
shr
jmp
xor
pop
pop
outsl
rcll
fisubrl
push
mov
xor
clc
push
jecxz
sub
or
add
repz
lock
mov
pop
pusha
adc
daa
inc
xchg
push
mov
push
push
inc
adc
xchg
jp
mov
loope
push
filds
fwait
mov
ret
adc
mov
add
adc
ja
popf
jo
mov
pop
lret
ds
lahf
loop
sbb
cmc
push
mov
rcrl
arpl
popa
lcall
and
lock
test
inc
iret
lock
sub
jo
push
xor
in
jmp
fs
sub
inc
daa
sbb
jge
jg
add
pop
adc
lret
dec
aas
test
fsubrp
pop
or
out
sarl
pushf
sbb
jecxz
push
mov
shll
pop
or
ljmp
cmp
int3
sbbl
pop
ds
pop
cli
and
mov
and
or
add
xchg
mov
adc
mov
mov
and
xchg
imul
pushf
or
pushf
fisubrs
mov
lock
adc
cmp
pop
inc
mov
jl
inc
test
push
decl
adc
lods
test
ss
subl
pushf
inc
jnp
sub
int
xor
adcb
mov
imulb
jbe
aas
into
aam
mov
jbe
push
js
mov
std
scas
inc
xchg
push
pusha
xchg
adc
push
inc
rorb
push
das
inc
jge
jecxz
lcall
push
call
inc
aam
nop
pop
jae
cmc
push
loope
xchg
repnz
sahf
pop
stos
jnp
jo
negl
jno
push
and
mov
fisttpl
fstps
jecxz
sbb
and
dec
cmp
js
hlt
mov
mulb
jae
lea
mov
addb
sbb
mov
cmp
subl
adc
mov
mov
cmp
xor
ret
xchg
push
call
or
or
lea
adc
dec
push
add
jne
jno
in
movsb
call
nop
adc
fs
dec
stos
cmp
mov
mov
lock
push
roll
push
add
jle
sbb
std
xlat
mov
push
cmp
jge
out
in
mov
fwait
test
cmp
cmc
lret
and
and
mov
in
lahf
mov
fs
mov
jb
inc
add
add
xchg
test
incb
add
lods
add
dec
dec
add
fcoml
xor
cwtl
adc
cmpl
mov
lea
inc
sar
mov
pushf
xchg
popa
and
push
sbb
push
fadd
icebp
xlat
push
aas
push
pop
ret
sbb
adc
add
pop
jp
in
jp
jge
out
lods
cld
xchg
movsb
psubb
int3
cmpsl
mov
jl
pusha
orb
mov
xchg
push
mov
loope
js
or
enter
sbb
adc
and
add
lds
aam
xchg
cltd
in
popa
cwtl
mov
clc
adcl
sti
pop
lods
aaa
cmp
fcmovbe
inc
inc
addr16
mov
push
outsb
jno
xor
add
rclb
mov
jno
xlat
das
rclb
testl
inc
fsubrs
ret
insl
mov
arpl
mov
lods
loope
loope
test
rcrw
mov
out
or
loope
aas
mov
stos
jg
lret
sub
jb
pop
mov
cmp
std
test
push
ss
mov
scas
ret
push
add
in
hlt
add
mov
push
mov
mov
test
jge
incl
inc
push
pop
int
lea
mov
icebp
aaa
rcr
pushf
jle
testl
dec
addr16
dec
ljmp
add
cmp
adc
sbb
pop
push
out
lahf
lret
loopne
mov
or
inc
mov
jl
aaa
lret
or
pop
ficoms
rol
clc
or
xchg
or
je
and
aaa
jge
mov
std
and
pop
mov
inc
mov
movsl
inc
xor
pop
cmp
mov
sub
cmc
mov
or
and
arpl
xor
or
sbb
sbb
js
cmpl
mov
add
inc
lret
fidivrs
lret
mov
mul
xorb
cli
gs
jp
loope
push
inc
pop
out
pop
xor
adc
lahf
or
bound
jecxz
in
scas
pusha
insb
dec
cmpsb
or
inc
dec
clc
pop
xor
adcl
add
xor
or
lods
test
shll
cmpsb
cmpsl
adc
adc
movsb
lcall
xchg
add
sar
add
clc
xlat
cmpsb
pop
mov
repnz
test
pop
popa
or
addr16
add
pop
out
add
loopne
add
add
mov
lea
xchg
dec
mov
mov
mov
out
pusha
jnp
add
fbld
jns
adc
push
lods
mov
rclb
pop
push
in
cmp
popa
enter
push
mov
insb
cmovne
xor
jns
sbb
dec
out
xor
dec
jge
pop
hlt
scas
mov
outsl
and
daa
hlt
dec
xlat
test
and
loopne
push
inc
stc
mov
lock
and
or
ljmp
test
jnp
inc
fdivrl
cld
adc
jne
jne
push
out
mov
andl
mov
jo
shlb
or
loop
fsubrl
in
xchg
xchg
pop
adc
enter
dec
dec
les
mov
mov
cmp
xchg
lcall
mov
pop
divb
xchg
cli
push
icebp
stos
add
add
scas
mov
sahf
push
jno
jp
pop
jns
inc
mov
cmp
pop
sbb
jmp
fiaddl
pop
jmp
jge
fistl
dec
push
xchg
std
dec
clc
inc
xchg
sub
ds
inc
or
cld
movsl
jg
pop
add
setl
mov
or
test
cs
movsl
call
and
lods
into
data16
pushf
mov
pop
call
mov
xchg
or
xlat
sub
sbb
sarb
imul
add
cmp
je
dec
faddl
test
jbe
inc
sbb
lcall
push
and
or
cli
ret
jp
add
lea
int
rcrl
dec
popa
hlt
mov
jg
jmpw
test
cs
add
in
pop
hlt
xor
shlb
out
aaa
or
inc
dec
mov
clc
pop
or
call
pop
or
arpl
push
and
les
mov
sbb
fisttps
mov
dec
jae
mov
aaa
jecxz
icebp
stos
dec
shl
lcall
xchg
aas
inc
inc
sub
shll
or
les
cmp
sub
dec
aas
cmp
xchg
adc
pop
mov
push
push
or
out
add
rcrl
lods
in
fcmovbe
stos
ds
movb
setne
adc
jecxz
inc
jecxz
mov
incb
inc
mov
aam
or
fnstenv
adc
aas
int3
mov
aas
iret
mov
lret
aad
lock
test
bound
sub
jp
int3
adc
insb
push
jo
add
jg
inc
push
testb
mov
mov
repz
dec
sar
xchg
jmp
jae
shlb
dec
lret
ror
pop
or
jg
push
cmpl
lock
wbinvd
mov
inc
push
pop
cmp
adc
jl
stc
and
xchg
or
fisubs
adc
imul
out
shrb
ljmpw
cmpb
sub
fcompl
push
inc
jecxz
les
or
popa
and
sbbl
lock
lods
sbb
push
pushf
and
cmpb
sub
stos
mov
mov
orl
mov
enter
sar
ljmp
add
ret
push
dec
gs
add
add
mov
repz
ret
hlt
jbe
loopne
dec
clc
aas
push
inc
iret
sbb
movsl
mov
cmp
xchg
mov
ljmp
arpl
push
mov
lock
adc
les
jp
call
add
out
js
push
sub
xchg
hlt
and
div
adc
sbb
add
dec
and
orb
mov
ljmp
or
adc
cmp
pushl
imul
adc
inc
addb
mov
or
pop
push
or
inc
incl
enter
lahf
or
ljmp
jge
das
xchg
cld
push
mov
xchg
popf
add
pop
inc
cwtl
xor
insl
jg
sbb
dec
lock
cmp
inc
push
mov
das
aam
push
incb
sub
add
testb
testl
leave
mov
std
stos
jge
aad
mov
cwtl
push
ret
pushf
subl
add
xchg
stos
ret
loopne
test
mov
pop
nop
inc
inc
ror
arpl
pop
pop
loop
imul
cld
loope
icebp
cmc
mov
mov
dec
xchg
or
or
out
popf
scas
testb
push
imul
or
mov
aas
mov
test
cmp
mov
sbbl
add
jmp
mov
icebp
mov
push
or
sub
jb
das
ret
sbb
pop
add
mov
hlt
inc
sub
lahf
mov
scas
inc
push
or
out
loopne
jl
sub
mov
es
idiv
mov
adc
lret
cmp
shrl
inc
push
xchg
into
pop
cli
stos
gs
stc
xchg
rcrl
je
push
sbb
dec
xchg
das
mov
js
and
inc
pop
push
push
cmpb
lcall
leave
jecxz
cmp
fdivr
data16
sbb
xchg
popf
jb
adc
pop
xchg
push
mov
jl
jg
jge
idiv
xchg
adc
clc
inc
insb
cld
inc
bound
lea
xchg
sbb
push
dec
mov
pop
jmp
cmpl
mov
pop
ljmp
arpl
jg
fs
movsl
inc
cwtl
or
aad
mov
xchg
jmp
xor
lret
sbb
xchg
push
add
ficompl
add
sub
sarb
test
shl
mov
testl
pusha
ret
test
push
and
or
cli
sti
mov
std
mov
dec
inc
pop
or
outsb
and
std
xchg
and
sub
sbb
mov
test
sbb
cmp
lods
or
int3
mov
data16
xchg
cwtl
mov
cld
out
or
push
pusha
xor
xor
les
lret
mov
fldz
ja
push
movsb
addl
and
lret
imul
ja
inc
jmp
cmp
pop
stc
mov
in
adcb
and
inc
jne
daa
sub
call
xor
push
and
push
push
jle
in
outsb
add
or
mov
mov
cli
sahf
fbstp
jp
add
arpl
mov
xchg
ficompl
js
sbb
mov
mov
xor
pop
rolb
outsb
xor
inc
jecxz
loop
iret
fldenv
incl
incb
and
inc
fstpt
dec
out
inc
das
cmp
adcb
mov
pop
outsb
clc
out
hlt
cld
jo
es
jle
das
cli
cltd
jmp
jge
loopne
cmpsl
push
lock
dec
xchg
jp
popa
inc
insb
jmp
xchg
lret
xor
loopne
fcoml
mov
pop
or
arpl
cmp
push
xlat
sbb
add
outsl
data16
pop
jle
xchg
sub
cmc
xchg
outsb
rclb
push
and
aas
mov
inc
pop
inc
pcmpeqd
adc
stos
add
inc
mov
inc
hlt
shlb
clc
aaa
cli
pop
push
push
cmp
inc
mov
aaa
clc
dec
and
add
jl
mov
dec
mov
dec
mov
push
int3
and
jnp
add
out
repz
cmp
fdivs
bound
pop
loop
dec
cld
push
icebp
jbe
sbb
add
inc
mov
inc
sub
aas
cmp
bound
push
sbb
notl
xor
pop
icebp
pop
mov
inc
mov
out
xchg
mov
push
fcomps
daa
adc
ljmp
xor
dec
dec
push
outsb
loopne
insb
adc
lahf
je
ret
cld
inc
add
xchg
jmp
xchg
add
imul
iret
clc
cmp
push
les
jno
sub
inc
adc
decb
xor
jo
lock
jbe
mov
fists
cwtl
push
fidivs
shll
repz
out
pop
lcall
push
adc
clc
rorb
mov
jo
or
cwtl
cmp
xchg
xchg
repz
dec
lock
sub
insl
xchg
sbb
inc
dec
cmpsl
sarl
loope
push
imul
int3
jnp
outsb
sti
adc
xchg
movsb
lds
pop
in
or
cmp
fidivl
pop
mov
inc
or
movsl
push
int
movsl
and
in
inc
dec
and
das
jae
repnz
push
icebp
xchg
test
add
decb
shr
adc
xchg
inc
xor
mov
out
call
aaa
daa
std
pop
pop
xor
inc
cmp
mov
and
xor
jg
push
cmp
push
lret
xor
rorb
ds
inc
js
add
mov
loope
shrb
xchg
push
mov
hlt
into
jns
cmp
adc
pushf
mov
adc
sbb
pop
xchg
cli
mov
lahf
cmpsb
xchg
addr16
loop
cli
dec
and
insl
rcrb
outsb
mov
fwait
out
xchg
fucomip
adc
push
sub
loopne
mov
cli
repnz
call
ffree
rcrl
pop
icebp
xchg
shlb
jo
or
lods
mov
adc
aas
aam
add
jmp
addb
addr16
jmp
and
loop
aad
sbb
and
xchg
lock
push
pop
hlt
sub
and
rolb
ja
insl
mov
adc
cmp
xchg
xchg
incl
cmpsl
fsubp
mov
fwait
in
ljmp
loope
pushf
test
sti
pusha
popf
mov
add
into
scas
mov
divl
lahf
add
insl
push
fdivp
call
cmpb
loope
xor
and
fwait
jg
cmc
add
mov
mov
cld
mov
push
dec
lock
repz
in
cmp
mov
push
out
movsb
mov
pushl
fildll
ret
hlt
pop
sub
arpl
pushl
in
int
pushf
andb
ret
jecxz
pop
and
jmp
jne
or
lea
std
xorl
sub
mov
aad
mov
imul
or
stos
jb
rcll
inc
dec
shlb
mov
bound
push
adc
or
push
adc
loope,pt
push
ficompl
ret
outsl
xor
or
jne
mov
pop
jg
cmp
loopne
sub
jp
xlat
imul
inc
jmp
lcall
les
fiaddl
xchg
xchg
xchg
lcall
mov
jl
int
repnz
rolb
dec
or
or
testl
sub
xor
xor
xchg
sbb
int3
mov
aas
or
adc
int3
pop
ss
jne
icebp
sahf
mov
movsb
dec
inc
ljmp
add
and
push
mov
jg
add
jns
push
lods
clc
popf
add
mov
and
iret
sub
std
pop
fs
jge
pop
inc
imul
adc
out
pop
ffreep
clc
aaa
mov
sub
aas
leave
nop
pop
jno
cmc
mov
dec
movsb
and
inc
and
subl
adc
popf
jp
repz
lods
and
movl
popa
inc
dec
bound
push
into
xchg
mov
sub
es
jbe
xlat
mov
add
push
icebp
fcoml
mov
dec
mov
mov
insl
in
or
jbe
jg
test
mov
lea
or
fbstp
push
push
popl
cmc
add
add
fdivrp
add
test
and
push
push
test
mov
cwtl
cli
aad
sbb
je
or
fdivp
cmpsl
stos
inc
add
andl
push
or
jecxz
inc
sub
pop
push
cmp
add
mov
aaa
inc
scas
dec
mov
xor
adc
add
scas
lds
cmp
push
push
mov
decb
pop
lret
pop
data16
out
mov
inc
push
sbb
dec
ficomps
xchg
adc
cmp
push
add
andb
cli
sub
or
jbe
sahf
push
out
pop
fld
mov
xor
ss
push
inc
jbe
stos
add
xchg
mov
ror
jl
shll
nop
es
into
sbb
cmp
cmp
ret
dec
jl
dec
loopne
push
adc
jb
mov
xchg
js
mov
loope,pn
adc
sub
or
sarl
push
andl
dec
mov
pushf
mov
add
xlat
aaa
and
pusha
pop
call
adc
and
inc
and
movl
jb
or
mov
into
imull
inc
incl
daa
ret
xchg
add
fs
jg
xlat
shll
sahf
inc
cld
jns
mov
push
sub
adc
outsb
cmp
icebp
addr16
or
test
and
sub
out
and
mov
incl
xor
mov
cmp
ljmp
insl
add
mov
mov
shl
adc
sbb
sbb
call
push
negl
mov
dec
dec
dec
dec
std
pop
lret
bnd
mov
cmp
jg
adc
push
rclb
divl
xor
lcall
push
adc
pop
xchg
test
inc
pushf
in
jge
mov
fldenv
into
pop
mov
cld
leave
ja
in
ficoml
pop
mov
cld
cs
cwtl
popf
or
testb
cmpsb
ljmp
inc
notb
pop
adc
fists
or
rol
sub
ljmpw
and
push
pop
pop
addb
push
movsl
dec
jle
dec
xor
inc
xor
mov
divb
lock
pop
shlb
aad
pop
fstl
adc
lock
sub
std
xor
shr
dec
sub
mov
ds
repz
cmpb
xlat
push
sti
xchg
dec
xchg
or
lgs
sub
mov
test
insl
iret
push
popf
or
ret
rcl
xor
add
jb
nop
pop
xchg
push
in
mov
adc
cmp
lea
fldenv
jne
xchg
insb
push
inc
push
push
dec
sub
loope
mov
mov
mov
aas
adcl
adc
enter
fstpt
and
adc
mov
loopne
lret
lret
js
decl
sbb
add
xor
sahf
sti
adc
scas
test
pop
mov
pop
xchg
cld
fwait
mov
loop
push
daa
fcomps
mov
add
jno
bnd
jne
inc
xor
mov
scas
mov
fnsave
stos
sarb
lcall
cli
sub
and
jbe
mov
mov
push
push
cwtl
shr
icebp
lods
or
pop
pop
outsl
aas
jmp
mov
inc
fnclex
es
add
dec
clc
push
sbb
lods
icebp
and
xor
inc
pop
dec
mov
mov
jae
inc
rcl
dec
hlt
imul
add
out
mov
aad
pop
cmp
shrb
out
pop
add
cmp
xchg
rcl
xchg
and
and
test
push
cmpl
gs
mov
repz
adc
cmc
mov
push
lock
sbb
dec
or
inc
enter
popf
loope
notl
mov
test
and
test
test
lret
cmc
fsubrs
xchg
pop
jle
cld
push
sarl
push
sbb
ss
and
xor
cmpsb
lahf
cld
popa
xlat
in
cld
push
loope
in
push
xchg
icebp
in
adc
inc
popf
xchg
std
mov
sub
jg
repz
in
push
and
sti
movsl
aad
sbbb
rorl
scas
xorb
jnp
lret
es
xchg
fs
stos
inc
scas
popf
movsl
mov
xor
orb
xchg
add
pusha
js
pop
imul
sbb
shlb
pop
in
xchg
push
push
jge
or
insb
xor
push
or
pop
and
jno
push
cli
out
notl
mov
ja
scas
or
sub
or
jg
ja
xchg
or
sbb
and
scas
test
xchg
jecxz
repnz
pop
mov
in
and
push
dec
sub
andb
in
adc
je
inc
int3
in
push
cld
pop
mov
xchg
dec
push
pop
jo
loopne
aas
dec
dec
in
leave
rolb
add
xlat
or
stos
cmpsb
jecxz
pop
sbb
out
push
and
icebp
dec
out
lock
int3
rcl
or
inc
dec
js
pop
fs
sbb
pop
out
xor
inc
mov
pop
mov
add
ljmp
addl
sbb
inc
les
dec
jb
inc
jmp
ds
adcb
clc
and
jmp
loopne
inc
and
cmc
lods
adc
fstpl
shll
icebp
mov
hlt
movsb
pop
loopne
mov
pushf
ror
xchg
sbb
shll
scas
xor
add
add
repnz
push
cmp
push
jbe
add
loopne
or
cmp
ljmp
jne
outsl
sbb
sub
adc
shll
mov
daa
mov
in
and
sahf
outsl
mov
add
pusha
pusha
repnz
sub
jae
jb
xor
mov
addl
sbb
and
mov
call
dec
dec
dec
outsl
pop
sub
aad
mov
and
mov
mov
out
cmpsb
movsb
fisttps
sbb
je
leave
das
sbb
in
pop
inc
cmp
imul
lds
aad
xor
fstenv
aam
inc
ja
lds
repnz
xor
push
inc
imul
out
aad
push
or
jg
arpl
popf
add
or
movsl
push
loope
pop
js
sbb
push
bnd
cmp
dec
pop
adc
popa
aad
push
push
sub
imul
adc
mov
xor
lock
xchg
pop
ret
enter
push
pop
dec
lea
add
leave
mov
sbb
adc
adc
add
sub
stos
sub
lock
movsl
push
in
int
pop
inc
jmp
cli
mov
ljmp
or
mov
sub
incl
ljmp
mov
inc
jmp
add
popf
aad
add
sub
loop
sarl
mov
mov
or
cwtl
imul
sahf
dec
mov
xor
lea
xor
loopne
push
sbb
mov
xor
xchg
out
mov
incl
repz
xchg
jb
xchg
mov
sub
insl
loop
adc
and
aaa
loop
xchg
test
add
loopne
popa
jb
or
adc
movsb
movsl
sti
xor
add
jno
push
inc
sbb
push
js
shlb
mov
add
mov
pop
and
shll
cmpsl
ss
mov
andl
fistpl
jb
inc
test
jecxz
or
dec
ds
popa
push
lods
sbb
inc
fnstenv
fbstp
adc
divb
inc
test
inc
sub
inc
jecxz
mov
mov
ret
mov
or
xchg
lret
mov
jle
mov
xor
sbb
ljmp
in
es
pop
into
aam
cmc
sub
pop
inc
mov
adc
push
mov
xlat
sub
dec
or
subl
out
adc
xor
out
filds
sub
mov
lods
aaa
rolb
jecxz
lret
shll
outsb
or
adc
pushf
cmpsl
mov
push
cmp
iret
inc
scas
and
mov
xor
cmp
sahf
cmp
push
sbbl
ret
insl
gs
pop
and
cmc
push
mov
inc
jle
fists
sub
out
sysenter
sbb
jo
ret
or
imul
sub
inc
out
shlb
dec
fldl
outsb
xor
and
roll
pop
push
jne
xchg
test
or
hlt
pop
jae
and
push
and
xchg
adc
ret
pop
mov
jns
adc
sbb
jne
sbb
repnz
insl
jg
mov
mov
loope
loope
test
push
mov
dec
cltd
repz
mov
fistpll
repnz
push
sbb
aas
add
fdivrs
dec
loope
jne
sti
xchg
add
and
test
mov
cmp
jmp
hlt
xlat
lds
arpl
out
insb
ret
mov
pop
ss
repnz
lds
sub
fmul
subb
pop
xlat
mov
push
dec
or
dec
clc
jno
adc
cmc
std
mov
insb
movsl
and
mov
shrl
cmp
loop
insb
scas
popa
mov
jecxz
out
dec
lcall
popl
jns
dec
jecxz
mov
or
jae
std
std
jle
popf
mov
inc
xchg
addl
add
imul
ljmp
pop
jp
adc
lahf
outsb
sbb
mov
mov
jae
test
or
adc
cld
sbbl
adc
sbb
stc
dec
and
enter
pop
push
push
jae
rcrb
and
pop
shl
xor
add
gs
xchg
ds
pop
push
negl
scas
dec
mov
mov
push
pushf
add
xor
enter
sahf
jno
cmpsb
sbb
pop
popa
jmp
loop
xlat
lret
sub
int3
add
int
adc
mov
ds
jb
pop
push
push
mov
push
test
xlat
mov
add
adc
cmp
add
ret
arpl
pop
cmp
push
mov
cmpsl
jae
add
and
sbb
push
and
dec
or
out
add
dec
mov
aam
xchg
lea
jb
sbb
adc
sbb
sti
or
aas
jmp
push
sub
test
or
fcomip
cmpsl
loope
xor
sbb
jecxz
adc
pop
pop
cltd
mov
mov
cltd
sahf
bound
popa
aad
lcall
cmpb
les
je
addr16
or
mov
and
pop
insl
in
pusha
icebp
push
inc
adc
hlt
dec
pushf
je
fstpt
cmp
fnstcw
stc
cli
mov
or
fwait
test
xchg
jae
lret
mov
xchg
stos
ja
inc
xor
lock
inc
xor
pop
pop
out
fs
out
sbb
push
imul
cli
push
test
das
jno
mov
jecxz
lahf
cld
stos
adc
ret
nop
inc
add
inc
adc
popf
push
mov
mov
push
adc
mov
gs
add
in
das
bound
jbe
imulb
movb
push
dec
or
fimull
cltd
jle
jns
and
mov
push
or
xchg
pushf
mov
lods
das
loopne
pop
jno
adc
cltd
imul
push
je
outsl
popa
inc
inc
jl
ret
add
lock
or
jg
mov
mov
js
jb
daa
rcrb
sbb
cmp
mov
jnp
aad
adc
mov
mov
adc
mov
or
dec
subb
mov
scas
fisttpll
iret
cwtl
fs
push
push
inc
sub
dec
in
shl
cmpsl
ret
loopne
leave
test
mov
pushl
or
sbb
push
sub
fnstsw
loop
and
jbe
push
call
mov
and
mov
cmp
test
movsb
dec
ja
or
loopne
pop
xchg
mov
mov
and
sbb
sahf
jg
fidivl
cmp
imul
lret
je
xchg
mulb
repz
orb
mov
clc
in
pop
cmp
adc
sub
movsb
cmp
lods
pop
cmp
test
add
cmp
arpl
aam
cmp
xor
sub
jae
in
jno
test
nop
lock
lock
mov
push
mov
out
lock
sub
mov
pop
mov
and
in
pusha
sbb
or
aam
xlat
sbb
and
or
lods
shlb
jmp
in
xor
fwait
or
jge
pop
in
shrb
ds
push
or
adc
pop
in
push
adc
cmc
lods
imul
ja
xchg
adc
ret
icebp
mov
sahf
add
rep
sbb
fwait
shlb
and
stos
mov
stos
insb
subl
ljmp
popa
mov
sbb
or
rdmsr
fidivs
movsb
push
sbb
roll
pop
jl
fimull
loope
fs
sti
movsl
cmpsl
cmc
and
push
repz
mov
add
stos
bound
inc
sub
ret
shlb
test
lret
cli
int3
push
jecxz
insl
or
ss
arpl
xchg
insb
mov
xchg
push
sbbb
imul
aad
pop
js
jecxz
pusha
pop
xchg
cmp
cmp
cmp
mov
loop
iret
and
sbb
pop
cmp
lgs
dec
hlt
test
dec
xor
mov
cmpsb
adc
sbb
dec
sub
lahf
adc
aad
cmp
ljmp
fimuls
or
dec
iret
add
and
fwait
int
dec
test
push
add
cmc
sbb
pop
ljmp
loopne
cli
loope
outsl
xchg
push
pcmpeqw
insl
fucomi
add
shrb
lods
cmpsb
adc
xchg
pop
xchg
roll
jo
adc
setne
mov
js
sub
xchg
push
insl
mov
sbbb
cmpsl
jbe
adc
pop
mov
pushf
jno
mov
mov
mov
xchg
inc
cmp
out
sahf
jecxz
xorl
dec
pop
test
xor
lock
and
or
mov
mov
jecxz
fimull
fimuls
inc
incl
mov
test
test
mov
push
lret
xchg
push
leave
xor
pop
xchg
stos
add
xor
sub
dec
cmp
push
cmp
loopne
or
je
inc
aaa
push
outsl
cltd
add
lods
rcll
and
shrb
imul
leave
jae
mov
sti
push
push
dec
jbe
or
mov
dec
mov
popa
sub
fmuls
sub
stc
movsb
adc
js
inc
bswap
jp
ret
or
xchg
imul
pop
hlt
mov
push
xor
out
dec
in
add
mov
loopne
ud0
add
cli
aas
loopne
repnz
out
rorb
lds
out
cmc
or
inc
rolb
pop
add
mov
fisubrl
push
dec
or
or
das
push
loope
push
cmp
scas
dec
or
pop
mov
mov
xorl
out
popl
xchg
cmpsl
and
enter
push
and
cmp
mov
cmp
faddp
popf
or
repz
xchg
sbb
stos
push
decl
nop
mov
ss
daa
mov
dec
fcompl
stos
stos
or
push
stos
hlt
push
sub
sbb
cmp
jo
shrb
xlat
je
sub
cmp
ljmp
adc
jne
ja
xor
jae
imul
scas
sbb
pop
push
mov
adc
and
fisubrs
mov
test
mov
dec
adc
jo
xchg
fcoml
push
xchg
lds
popl
xchg
xlat
les
mov
fwait
daa
mov
fdivrs
out
mov
mov
push
cli
fists
and
push
ja
jl
ret
daa
xchg
mov
sub
xchg
sarl
cmpsb
fwait
xor
or
jg
jb
cltd
ss
cmpsl
lods
inc
inc
xlat
popf
arpl
xor
jmp
add
or
xchg
push
push
xchg
sahf
jl
ja
outsb
adc
test
lret
fsubp
loop
cs
and
popf
adc
mov
xchg
jmp
adcl
xor
xchg
push
sub
aas
jg
or
mov
jle
iret
gs
or
js
cmpsl
pop
mov
gs
push
pop
mov
aam
add
xor
add
push
scas
adc
push
adc
xor
pop
mov
jecxz
xorps
sbb
mov
fbld
sbb
cmp
adc
lods
or
imul
lock
hlt
add
xor
orl
out
dec
daa
xor
enter
cmp
ja
add
in
mov
imul
rcrl
adc
aas
and
loopne
sub
ja
aaa
xchg
scas
jb
or
mov
or
inc
xchg
and
mov
add
data16
push
stos
mov
cmpsl
ret
pop
mov
xchg
mov
in
imul
aas
addb
daa
aaa
call
nop
sub
sbb
int3
jmp
dec
fdivrl
int3
into
cmpsl
lret
jnp
shrb
jbe
pop
lock
fldt
xorl
loop
inc
pop
xor
test
loope
push
xchg
cwtl
mov
or
add
cli
enter
sub
fldenv
lcall
lods
jnp
popf
shlb
xor
add
jne
push
xchg
push
xor
call
in
add
rcr
or
cmc
and
xchg
pop
adc
daa
daa
jge
test
push
or
loope
and
adc
pop
and
and
xor
inc
test
inc
pop
adc
loope
xchg
adc
sbb
icebp
mov
cli
jp
mov
or
and
imul
mov
lahf
repz
mov
xchg
push
push
or
aas
sbb
sbb
loope
clc
mov
rclb
imul
movsb
jg
dec
xchg
push
sub
test
decl
movl
jle
mov
mov
in
clc
jbe
lea
loop
int3
and
ljmp
pushf
add
ljmp
cmp
in
or
dec
xchg
sbb
or
jo
lock
sbb
adc
cmp
enter
push
insb
ljmp
mov
add
es
dec
lret
mov
xor
push
add
or
shl
add
jno
int3
test
mov
pop
idivl
fists
push
push
repz
addr16
or
in
jmp
mov
push
sub
into
stc
fld
jl
jmp
popa
stc
popf
fimuls
cmpb
cmp
mov
push
xor
data16
push
adc
cmpsl
roll
push
shll
pop
test
into
push
shrb
push
pop
dec
push
bound
lahf
cmc
and
xor
shlb
lea
add
inc
sbb
mov
das
dec
cmpl
cmc
setg
insl
pop
push
or
lock
fnstcw
mov
movsb
cld
push
aas
or
cs
rorb
jbe
mov
or
mov
sti
repz
adc
int
adc
and
sahf
xchg
dec
scas
pusha
scas
inc
add
xor
aas
and
xchg
iret
mov
repz
mov
xorb
outsl
ljmp
mov
jo
jno
jbe
or
cmp
jne
testl
repz
outsb
mov
xchg
mov
mov
xor
jge
nop
cwtl
mov
mov
cld
add
cmp
test
xor
aaa
pop
stc
xor
ljmp
inc
dec
fidivs
add
adc
call
inc
pop
dec
fistps
jle
incb
inc
clc
pushf
mov
mov
lods
dec
adc
sbbb
jne
popf
outsb
sub
ljmp
jnp
mov
enter
icebp
pop
pop
scas
loopne
mov
in
push
jb
clc
stc
push
sub
sahf
add
sbb
jp
stos
sbb
ss
xchg
loope
and
add
test
mov
pop
lods
je
jae
adc
xor
hlt
lahf
xchg
loopne
pop
cmp
rcll
subb
fs
pop
nop
es
cmp
cmp
push
ret
testb
call
push
cmp
jmp
inc
push
push
lahf
popf
addr16
je
nop
stos
push
cmp
ss
mov
stc
xor
jmp
inc
loop
in
add
push
xor
inc
mov
test
inc
cmp
push
mov
in
sar
add
pop
rclb
jl
xchg
aad
mov
loope
xor
pop
cmp
mov
sarl
std
rorl
add
adc
add
xor
jl
mov
cmpsl
sub
sbb
loopne
into
inc
sbb
sub
pop
and
and
adc
hlt
dec
cmp
popl
sub
xchg
rcrb
fwait
jl
ds
orb
push
bound
lret
stc
xchg
clc
or
std
fsubl
adc
in
in
loope
add
nop
add
pop
scas
ja
lods
jno
lret
xchg
mov
add
sarl
rcll
mov
jp
ss
push
int3
incb
pusha
push
or
stos
cltd
push
fldl
leave
mov
and
push
cmp
inc
pop
sub
jle
or
push
lret
scas
rcl
test
adc
outsb
xchg
jge
add
aas
js
je
cmp
sbb
pop
das
fsubrl
jnp
mov
dec
inc
mov
jmp
dec
js
cld
jg
inc
inc
cld
jg
out
xchg
inc
xchg
outsb
add
inc
xchg
and
lods
fidivs
out
pop
scas
icebp
ret
jne
lds
sbb
jne
push
jno
test
xor
jl
mov
inc
rcrl
fs
mov
faddl
lcall
fisttps
popa
cmpsb
cmp
add
pop
pop
lahf
mov
cmp
pop
nop
cwtl
sbb
fisubrl
loopne
ljmp
mov
imul
hlt
mov
mov
in
inc
xchg
pusha
out
add
sub
sub
loopne
push
loopne
mov
pop
dec
and
shlb
imull
cmp
inc
daa
mov
cmp
mov
mov
out
cmp
add
mov
test
dec
mov
repnz
lods
sub
test
mull
add
repnz
adc
pop
add
mov
aaa
mov
mov
cmp
arpl
xchg
jle
sbb
dec
xchg
sbb
cmpsb
push
sub
adc
jl
mov
repnz
daa
xor
push
loope
adc
sbb
add
sub
outsl
push
les
jg
pop
mov
xor
lahf
mov
jle
mov
test
daa
sub
fwait
add
pop
dec
jecxz
enter
or
sub
dec
mov
xlat
sbb
imul
inc
jnp
xor
dec
push
lahf
xor
push
dec
lods
xlat
pop
mov
adc
xchg
adcb
ljmp
sar
sar
aad
push
pop
push
pop
js
fadds
sbb
aad
mov
mov
xchg
cltd
add
fdivrl
mov
lahf
lret
mov
push
popl
dec
hlt
xchg
repnz
test
shrb
sbb
mov
ja
cwtl
pusha
or
push
data16
sub
mov
jno
cmp
mov
mov
adc
push
nop
ret
aaa
and
mov
inc
daa
ss
je
call
repnz
xlat
pop
out
cli
stc
xchg
sbb
mov
lock
mov
adcb
popf
loop
add
movl
xchg
mov
rcrb
sub
in
cltd
cmc
or
dec
mov
fiadds
mov
mov
pop
jae
mov
inc
lcall
add
mov
xor
add
xor
shll
inc
js
sbb
cmpl
dec
add
inc
mov
sbb
fsts
sub
push
lods
in
mov
aaa
pop
inc
push
bound
ljmp
lahf
xchg
mov
add
loope
add
inc
std
sti
dec
hlt
mov
or
scas
cmp
push
repz
hlt
mov
icebp
push
jp
mov
add
lret
iret
out
sub
xor
stc
mov
test
sbb
mov
testb
cltd
xchg
push
mov
pop
lahf
in
out
or
mov
in
ljmp
push
icebp
jge
cld
test
xorl
ss
jp
int
xchg
jno
sbb
xchg
clc
lock
and
in
scas
testl
xlat
clc
mov
test
sbb
xchg
adc
mov
daa
mov
xchg
jb
mov
jg
sub
xchg
movsl
sbb
rolb
mov
push
cmp
inc
jnp
daa
and
mov
mov
pop
push
push
mov
lcall
mov
nop
add
inc
dec
inc
sbb
pop
xchg
hlt
xorb
xchg
or
call
and
or
xchg
adc
fisubrl
dec
mov
adc
cmp
std
mov
xor
jecxz
xor
cltd
test
jo
out
push
cmp
dec
lret
in
ret
lock
icebp
add
hlt
shlb
mov
jbe
mov
mov
leave
mov
jnp
loop
repnz
mov
xchg
iret
or
sub
mov
nop
xchg
pop
repz
xchg
add
fmulp
das
outsl
and
sbb
jns
xchg
push
lock
sbb
lea
sbb
inc
aas
add
mov
in
clc
shrb
jmp
mov
out
push
mov
inc
fdivrs
sbb
adc
mov
sub
pop
out
dec
inc
rclb
jge
pop
mov
lods
adc
rcrb
and
add
add
sbb
cmc
iret
stos
pop
jge
icebp
add
inc
pusha
mov
sbb
cmpsl
add
xor
test
adc
xchg
shl
fistpll
inc
leave
add
or
sar
int3
jb
jae
out
aas
xchg
icebp
inc
js
cmpsb
add
adc
test
cmp
movsb
xor
mov
fsubrs
add
idivb
scas
faddl
xchg
or
push
loope
aaa
insl
push
xchg
push
sub
les
loop
pop
testl
dec
pushf
and
inc
add
push
jecxz
popf
sub
sarb
xchg
inc
dec
test
data16
clc
add
lock
mov
jmp
lea
add
inc
aad
adc
dec
in
push
pusha
out
push
jg
clc
aaa
rorl
or
sbb
and
jecxz
mov
mov
data16
or
mov
or
sbb
jbe
mov
subb
out
test
loopne
cmp
jl
pop
stc
into
lahf
mov
cs
pop
lret
fwait
sub
mov
mov
pop
add
jl
sub
repnz
add
test
gs
xchg
add
adc
mov
iret
push
jmp
in
loope
push
lss
jne
fwait
mov
insb
sub
or
ds
jecxz
dec
jns
shll
xor
and
rcll
jecxz
lock
mov
and
lds
xchg
push
and
jmp
test
mov
lods
sub
pop
adc
outsl
lods
add
xor
xchg
cmp
mov
mov
daa
sub
and
push
scas
in
es
arpl
add
out
ret
in
mov
test
out
loopne
and
push
mov
fs
jl
mov
repz
stos
les
adc
adc
sti
push
cltd
test
aas
int3
negb
pusha
cmp
dec
adc
pop
xchg
pop
hlt
xor
and
pop
dec
and
sbb
mov
mov
call
lock
sbb
les
jg
cli
push
xchg
imul
ds
nop
imul
enter
xor
insl
and
inc
lret
aaa
fisttpl
xchg
cmp
ret
pop
inc
xor
or
insb
cwtl
in
push
and
cmp
inc
addb
sbb
sub
sbb
mov
cmp
decl
push
sbb
cmp
mov
sub
add
jbe
push
scas
mov
out
in
mov
out
andb
and
rorb
mov
jecxz
or
clc
addl
inc
orl
lcall
cmpsl
les
adc
inc
leave
icebp
xchg
and
jo
clc
shl
xor
jmp
or
cmp
aaa
cld
jge
jecxz
rcrb
outsb
cld
push
imul
sub
jb
loopne
cmc
daa
inc
fdivrl
aaa
popa
or
mov
and
add
pop
and
in
dec
xlat
xchg
bound
fisubs
pop
push
daa
inc
jbe
add
mov
ja
cs
sbb
jle
testl
aad
sahf
addr16
in
pop
pop
jl
jecxz
fisubrs
out
nop
rorb
adc
sbb
js
inc
inc
mov
filds
cwtl
mov
repz
repz
loopne
mov
fadds
rol
inc
sahf
pop
das
out
cmp
movl
add
test
inc
into
bound
sub
xchg
push
repz
mov
fmull
pop
mov
xlat
and
pop
or
mov
mov
or
inc
inc
sub
bound
add
repnz
insl
jge
out
inc
add
jecxz
push
mov
mov
ret
dec
cs
test
push
push
lret
lret
pop
add
dec
inc
xchg
int
push
orl
cld
insl
jno
cmp
jnp
add
jmp
mov
push
and
aas
add
rol
aam
mov
mov
test
je
into
sbb
cmp
xchg
mov
sbb
adc
daa
cwtl
mov
xor
adc
call
mov
ffree
lret
in
leave
xor
shll
ret
std
aas
outsb
mov
aaa
pop
fcomip
push
jmp
sub
jne
mov
jb
mov
daa
lods
add
push
push
nop
loope
jge
and
pop
cs
mov
pusha
lcall
xchg
js
inc
sub
dec
sub
mov
leave
subb
shr
outsb
or
pop
adc
data16
jmp
lock
pop
jno
out
cmpsl
js
adc
jno
cmovg
clc
repnz
xchg
cmc
xchg
push
push
jecxz
repz
and
mov
xor
add
lea
and
push
sub
add
fsubp
test
data16
test
aam
pop
xchg
andb
icebp
adc
adc
sub
rol
dec
or
inc
inc
roll
arpl
fisttps
scas
decb
clc
popf
add
and
movntps
inc
or
pop
aas
jo
pushf
daa
cwtl
add
inc
insb
pop
mov
cmp
add
adc
cwtl
pop
sbb
or
add
stc
add
cmp
jl
adc
pop
add
mov
cmp
sti
or
clc
das
mov
xor
sub
pop
or
add
pop
lea
adc
cmp
adc
repz
loop
jecxz
lret
fldenv
cltd
lcall
jbe
mov
popa
cmp
popf
out
jmp
es
and
rol
jae
inc
scas
lea
cmpsl
sub
jns
lea
hlt
push
sti
nop
nop
push
xor
fstpl
and
pop
mov
shlb
sahf
sar
loopw
mov
cmp
jno
cmp
mov
jb
xchg
sub
or
inc
jl
push
test
add
mov
add
movsb
mov
andb
add
mov
out
ret
mov
mov
shrl
mov
popf
shlb
in
icebp
pop
pop
int3
inc
dec
loop
test
arpl
test
mov
xlat
daa
adc
jmp
or
cmp
push
mov
cltd
mov
insl
adc
sbbb
dec
push
and
dec
push
cmp
ret
aad
sub
add
in
loopne
or
loopne
and
or
sub
mov
out
push
add
and
mov
adc
inc
xor
pop
push
or
xor
lea
xchg
mov
lret
std
cmp
cltd
pop
arpl
cmc
inc
adc
dec
inc
xor
push
aad
push
stc
js
mov
je
and
repz
or
imul
adc
mov
mov
clc
rcll
add
mov
roll
pop
and
sahf
push
and
ret
popf
jns
cwtl
mov
cmpsb
insb
pop
mov
and
mov
das
in
push
jns
hlt
daa
ret
sbbb
mov
add
adc
ret
add
jmp
lods
xor
imul
push
js
insb
mov
xor
outsb
aad
in
push
jge
lods
xor
pop
or
nop
adc
lret
test
fwait
shll
mov
mull
sbb
dec
jmp
shrb
adc
lret
pop
cmp
daa
push
mov
fcmovb
imul
pop
sbb
adc
lds
or
mov
pop
imul
cmp
ljmp
notl
ret
pop
xor
mov
jge
in
fiaddl
add
push
and
cmpsb
in
pop
and
push
cmp
add
xor
mov
push
sarb
add
jp
or
inc
or
push
aas
mov
add
sbb
lcall
push
adc
pop
movsl
mov
sbb
les
xchg
lea
dec
xchg
xor
jmp
jns
adc
in
add
xor
mov
lcall
or
outsb
jb
shrl
aam
loopne
fisttps
and
mov
out
ret
pushf
mov
fsts
and
daa
clc
sub
inc
jno
ret
aad
mov
add
gs
sub
les
das
loop
arpl
adc
mov
test
js
adc
mov
dec
insl
sub
and
inc
push
das
sub
jo
push
mov
cmp
pushf
addr16
loopne
cmp
pop
mov
sbb
sarl
add
adc
ja
mov
or
divl
scas
imul
aaa
and
aas
jae
popa
fildll
add
inc
pop
aas
out
test
mov
jae
rorb
iret
imul
lds
add
add
mov
push
and
xchg
popa
fnstsw
add
push
movsb
pop
pop
rol
lcall
fwait
insb
dec
test
divb
xor
pcmpgtb
test
mov
mov
mov
or
daa
pusha
cld
insb
xor
ds
mov
mov
fstpl
frstor
sahf
adc
loopne
adc
or
rcrb
aad
scas
lds
aad
and
fisttpll
dec
add
adc
pop
out
pop
arpl
test
repz
dec
sahf
lcall
dec
stos
push
add
xchg
int
jnp
fmull
sub
jne
adc
mov
lea
fwait
out
add
add
push
add
mov
ficoml
ljmp
ret
xchg
sti
jo
out
mov
sub
fdivrs
es
lea
jecxz,pt
sub
test
jg
out
sbb
test
jg
adc
into
loopne
in
and
movl
cmpsb
mov
icebp
push
xchg
xlat
loopnew
rclb
jno
adcl
fistps
sub
popa
adc
xlat
insb
test
jmp
lds
lcall
mov
adc
pop
mov
xchg
push
xchg
call
js
loopne
sbb
mov
xorl
push
jmp
aam
loope
icebp
outsl
rcl
xchg
xchg
outsl
mov
jge
imul
sbb
xor
add
ret
mov
jno
mov
popf
mov
adc
dec
insl
inc
in
add
push
popf
scas
dec
ss
fdiv
iret
and
dec
movsl
pop
cli
adc
mov
mov
jnp
dec
cmpsl
iret
add
mov
jmp
fdivs
loope
insb
loop
daa
jecxz
maskmovq
test
ror
cld
xor
add
loopne
jo
lods
xchg
add
or
mov
add
andb
lods
daa
call
push
cmp
add
mov
pop
or
mov
es
mov
clc
cmpb
jle
or
test
adc
jmp
mov
push
jg
jne
pop
std
adc
mov
ds
imul
mov
add
xor
push
das
lea
pop
or
shlb
aad
add
inc
pop
xor
das
adc
sbbb
fwait
mov
insb
stos
ficoml
mov
movsl
lock
ret
mov
xor
mov
mov
xchg
mov
jnp
mov
mov
leave
or
push
cmpsl
loope
sarb
les
jecxz
icebp
or
inc
jo
rcrb
jmp
xchg
jne
sub
dec
adc
cwtl
lds
andl
sbb
xchg
xlat
and
fistpll
fprem
mov
fwait
jo
inc
icebp
or
std
orl
dec
out
lock
cmp
mov
int
push
jae
sub
and
adc
mov
or
mov
icebp
jno
dec
mov
cs
insb
lock
pop
push
dec
push
lcall
test
mov
sbb
cmp
mov
sbb
add
jnp
add
test
sub
mov
clc
and
xchg
mov
push
push
or
clc
adc
mov
and
js
push
ret
clc
push
lahf
bound
mov
lods
lods
pusha
daa
adc
test
xchg
xor
sub
and
cltd
xor
cmp
sub
jg
inc
jp
pop
push
and
dec
movsb
outsl
mov
ljmp
jge
lock
inc
lret
push
pop
test
ljmp
lock
push
jp
in
and
aam
xor
cli
loop
or
add
enter
xor
call
fldl
or
jl
adc
dec
out
mov
cmpsl
adc
sub
das
push
adc
mov
ljmp
lods
sub
pop
push
push
and
bound
pop
cmp
mov
pushf
ja
je
xchg
ficomps
movsl
repz
scas
into
fadds
ds
int
pusha
andb
imul
add
and
inc
inc
ret
add
adc
loop
ret
add
das
insb
movsb
fmull
cltd
ja
test
je
in
sub
rcrl
mov
loop
or
outsl
nop
mov
pusha
orl
dec
adc
xor
jo
push
or
pusha
sub
addr16
mov
mov
sti
lcall
shlb
leave
add
adc
das
mov
sbb
in
add
pop
pop
dec
pop
cmp
dec
roll
mov
pop
adc
in
mov
mov
in
mov
lahf
jg
pop
mov
add
outsl
push
nop
roll
idivl
or
js
xor
jbe
pop
jecxz
les
clc
in
mov
fidivs
or
in
xchg
arpl
lods
fbstp
cwtl
xor
bound
paddsb
and
mov
push
daa
icebp
xchg
rclb
nop
add
push
mov
jns
push
loopne
xlat
js
xchg
loopne
xchg
and
rcr
xor
xchg
jmp
ret
inc
dec
scas
lock
cmp
mov
pop
mov
push
cmp
test
imul
cmpsb
xor
lock
sahf
or
out
es
jo
add
lods
pop
add
dec
xchg
ret
lods
mov
lea
int
adc
sub
movsl
jecxz
pop
inc
push
and
stos
stos
outsl
adc
jecxz
ss
cld
pusha
loopne
ss
int
rorb
idivb
mov
inc
fiaddl
bnd
icebp
or
pop
out
repz
xchg
pop
sub
ret
dec
or
dec
call
fs
loopne
push
mov
jmp
mov
sub
aad
xor
dec
bound
or
out
sub
pop
pop
and
or
icebp
outsb
and
arpl
insl
add
xor
pop
aam
mov
sbb
loopne
push
push
lret
mov
jle
cmpsb
outsl
pop
add
jb
mov
mov
mov
aas
div
sub
and
pop
fcomps
test
mov
push
mov
inc
ds
adc
ret
pop
xchg
jae,pn
sub
push
test
and
mov
add
adc
call
xchg
outsb
lock
sarb
sbb
rcl
int3
enter
jl
sti
or
add
mov
pop
lea
push
test
dec
push
out
mov
xor
sbb
or
std
jp
fiaddl
pop
enter
loope
add
push
push
mov
mov
icebp
or
stos
xchg
xchg
add
aad
xor
shlb
icebp
push
inc
in
jae
pminsw
fcomi
das
or
push
dec
mul
mov
aad
cmpsb
outsl
xor
aas
cmp
aad
fiaddl
xchg
cmp
push
jmp
mov
mov
fidivrl
loop
ret
movsb
lds
sbb
jno
ss
jmp
inc
popf
jb
push
scas
inc
fistl
xor
rclb
cmp
std
xor
idiv
stos
loope
sahf
loopne
dec
mov
scas
cmp
push
cli
outsb
loop
rcrl
jl
movsl
aas
inc
out
pop
cmpsb
in
lcall
mov
mov
sbb
in
popa
sti
push
mov
or
push
int
sub
sub
push
fsubrs
movsl
pop
cs
add
mov
or
jg
sbb
xchg
mov
repz
xor
xor
lret
fistps
mov
ds
adc
fdivrl
or
and
adc
mov
jmp
lcall
call
decl
mov
or
jne
inc
outsb
adc
push
shlb
pop
ret
or
andb
xchg
fidivrl
cmp
and
bnd
popa
clc
imull
jl
mov
inc
stos
mov
and
arpl
scas
jp
les
push
or
and
pop
clc
insl
negb
movsl
repnz
loopne
push
mov
test
into
fistps
ret
mov
dec
cmp
fisubrl
mov
clc
push
inc
faddl
stos
or
dec
stc
int3
xchg
sarb
scas
in
pop
dec
int3
dec
cli
and
adc
sub
push
addl
aas
loop
mov
cli
jnp
jp
mov
pop
mov
cmp
les
and
ss
negb
mov
xor
push
clc
decb
leave
add
adc
jg
pop
outsb
imul
aam
xlat
cmpsb
and
mov
add
xor
mov
mov
pushl
jb
into
fisttpll
fsubrs
dec
fst
mov
inc
jle
sub
xor
sbb
adc
jmp
lods
dec
pop
xchg
test
int3
xchg
hlt
lret
add
repz
lahf
add
out
jmp
hlt
scas
lret
fsubrl
test
mov
leave
sbbb
cmp
jecxz
mov
test
lods
loope
pop
fst
adc
sub
movsb
and
cmp
add
lahf
popa
cmp
mov
sbb
aaa
cltd
mov
push
je
xor
pop
push
push
icebp
jo
cmpsl
inc
loopne
pop
adc
js
loopne
lcall
mov
pushf
sub
lcall
push
testb
jne
cmp
jbe
aas
cmc
cmp
mov
test
loopne
inc
add
clc
mov
inc
or
into
andl
sbb
xor
shlb
add
xchg
dec
fistpll
aad
xchg
mov
jp
bswap
icebp
mov
inc
int
aaa
aas
mov
loopne
and
in
add
and
arpl
pop
cmp
mov
mov
cmc
in
add
sarb
pop
paddw
adc
mov
push
pop
sti
ret
jl
jecxz
mov
daa
inc
xor
mov
aad
mov
cmpsb
cmp
outsl
add
xor
xor
push
rcrb
aam
rcll
jl
stc
call
incl
mov
lahf
mov
cmp
ljmp
nop
cmc
scas
lods
and
inc
or
and
adc
jmp
sbb
jp
popf
push
inc
lret
loopne
xchg
outsb
pop
in
in
repz
mov
lretw
insl
rcl
scas
ds
xchg
mov
cmp
push
loopne
or
sbb
enter
xchg
mov
std
lea
out
and
cmpb
insb
mov
icebp
jbe
jp
xchg
jp
or
out
push
xor
lret
in
test
cmp
test
pop
and
add
add
add
or
jge
cmpsl
in
sub
push
mov
mov
or
ret
je
aas
mov
cmpsl
icebp
inc
mov
add
dec
subl
mov
loopne
mov
jo
mov
mov
xchg
pusha
lret
xchg
aas
aam
nop
insb
mov
cwtl
loope
mov
and
jge
dec
and
jbe
leave
add
fidivrl
xchg
push
pop
xor
rclb
push
mov
mov
iret
mov
and
data16
rclb
into
inc
cmp
aaa
incl
jnp
sub
lcall
xor
dec
jno
inc
inc
mov
daa
adc
pop
xchg
mov
addr16
add
ret
add
push
mov
int
dec
das
jne
push
dec
scas
sbb
adc
xchg
and
rolb
js
jnp
jb
add
movsb
and
lock
outsb
fmuls
dec
cwtl
into
jge
push
cmp
rcrb
nop
add
js
jb
andl
popf
insl
adcl
push
or
jo
sbb
les
cld
cwtl
inc
xor
mov
aam
mov
rolb
xchg
pop
pop
mov
fildll
xchg
xchg
mov
rolb
sar
adc
jecxz
mov
mov
xor
push
addb
int3
pop
cmpsl
fsubs
fdivs
mov
aas
or
dec
cld
sbb
lret
sub
in
addr16
lret
dec
add
jecxz
mov
lock
pop
cmp
repz
jg
sahf
and
mov
and
add
mov
shrl
insb
push
mov
sbb
lods
mov
ljmp
sub
mov
bound
sbb
adc
add
push
addb
pmulhuw
and
cmc
dec
movsb
push
ret
pop
inc
roll
ljmp
ljmp
and
pop
and
add
push
add
rolb
sbb
mov
sub
enter
fisttpll
and
adc
inc
cmp
popa
xchg
or
inc
pop
xchg
cmp
sbb
pop
cmp
clc
sub
ret
aas
rol
xor
ja
popa
clc
xchg
cld
mov
xor
shrl
jo
jmp
fmuls
lds
mov
add
mov
jmp
subb
adc
fstpl
mov
and
sub
mov
les
dec
insl
dec
in
clc
rcll
cs
lret
jge
scas
js
jb
xchg
rcrl
inc
pushl
popa
test
pop
out
mov
xor
push
bound
call
jmp
cli
and
push
mov
mov
inc
test
out
xorl
and
or
add
cmp
fdivr
xor
dec
aad
stos
cmp
inc
pop
mov
loop
lds
jle
push
int3
push
inc
or
cmp
add
sahf
inc
mov
pop
jns
mov
push
add
mov
pop
dec
adc
fwait
or
ret
jmp
push
sbb
push
sub
into
ja
jne
pop
dec
sub
push
or
pusha
mov
cmp
and
inc
xor
inc
pop
hlt
aas
incl
add
xor
dec
repz
cmp
or
dec
lahf
add
mov
or
mov
fcmove
stc
sbb
idivl
iret
push
data16
lods
mov
call
cltd
sbb
add
shl
out
test
ret
cmp
inc
dec
ds
mov
dec
nop
or
outsl
daa
or
int
inc
sub
daa
lock
or
sub
inc
popa
mov
dec
cld
sar
and
push
daa
loopne
sahf
xchg
je
and
jle
inc
or
add
push
outsb
jnp
jbe
push
mov
stc
pop
adcb
leave
popa
repnz
enter
insb
xor
and
or
aam
jae
sbb
scas
les
dec
sbb
popf
add
and
loop
jmp
ror
mov
or
push
lods
fcmovnb
sub
pop
mov
mov
pop
dec
cmp
adc
push
mov
adc
xchg
or
mov
mov
jecxz
fbld
lcall
cmpsb
jl
jecxz
pop
or
inc
lret
lcall
mov
test
test
or
xchg
or
arpl
mov
test
cmp
xchg
mov
je
dec
rorb
mov
jl
frstor
mov
sarl
xor
aaa
adc
orb
inc
jmp
inc
dec
sub
shrb
adc
daa
push
add
sub
leave
adc
jo
pusha
lcall
push
xchg
pusha
mov
loopne
lock
clc
call
adc
mov
mov
sub
shlb
adcb
jo
inc
push
loop
add
xor
frstor
push
notb
pop
xchg
dec
inc
inc
add
outsl
std
filds
daa
jno
ss
shl
and
cwtl
mov
xor
mov
std
adc
sbb
pop
fmuls
ret
mov
mov
adc
inc
pop
add
cs
push
and
cmp
add
xchg
push
bound
stos
pop
push
lcall
decb
inc
sub
call
mov
ss
mov
inc
adc
sbb
popa
xchg
rcrb
loopne
push
xlat
cmp
or
jecxz
adc
mov
push
es
sub
in
faddp
addb
cmp
inc
inc
jle
sub
xchg
in
loope
pop
pop
xorb
push
sub
ljmp
adc
nopl
clc
daa
jo
out
fcoms
and
xor
inc
mov
cs
jecxz
je
or
inc
sahf
stos
sub
shrl
out
mov
ja
popa
mov
popa
jmp
pusha
or
stos
add
je
mov
cmpsl
lods
cli
and
pop
push
cwtl
or
fwait
inc
push
cs
or
pushf
pop
ret
sub
ret
pop
jnp
fsubrl
mov
loope
es
xor
xor
pop
xor
xor
jp
stos
inc
mov
cmpsb
cmp
dec
cmp
ret
pop
add
sub
sbb
pop
aaa
cwtl
dec
cwtl
inc
jbe
stc
rolb
adc
push
loopne
scas
and
packsswb
push
jo
dec
adcl
mov
leave
test
mov
and
jp
out
leave
movsb
je
cld
dec
rol
shlb
xchg
sub
or
lds
int
nop
push
mov
ljmp
fmull
add
aas
fildl
push
aam
lods
xor
mov
es
fsts
rol
add
jmp
cmp
test
cmc
into
xor
aas
mov
mov
mov
jecxz
stc
xor
xchg
jge
ret
or
dec
jle
outsb
ja
mov
outsb
rclb
jae
ret
mov
xchg
into
pop
adc
cmp
clc
out
add
inc
sbb
or
gs
mov
mov
lret
jecxz
jo
mov
sub
cmp
inc
mov
adc
jmp
pusha
cmp
das
xor
mov
out
and
add
shlb
cwtl
mov
sub
addr16
sbbb
subb
adc
lahf
gs
push
aam
push
pop
pop
adc
cmp
insb
cmc
pusha
fsubs
pusha
lock
or
mov
add
sub
xchg
mov
mov
lods
push
push
enter
jmp
inc
inc
mov
xchg
mov
xor
pop
addr16
cli
leave
xchg
pop
mov
add
push
icebp
xchg
clc
push
jo
and
ja
loopne
lahf
jmp
cld
pop
test
jp
bound
test
aad
cmp
filds
and
call
xchg
sahf
pop
lahf
push
pop
movl
in
add
xor
mov
arpl
imul
imul
ficoml
inc
inc
jb
sub
mov
push
push
lock
arpl
xor
inc
stc
mov
push
push
add
sub
ljmp
push
or
sbb
frstor
je
inc
lods
pop
mov
mov
cmpsb
repnz
stos
add
jnp
and
mull
les
or
inc
scas
leave
push
or
pusha
jne
int
rcrl
push
lods
mov
inc
jmp
in
mov
adcl
outsl
adc
or
fsubl
in
icebp
call
cmp
ficomps
push
mov
jne
sbb
out
je
shrl
sti
push
outsb
cmpb
imul
fsubrl
stos
pop
nop
jnp
mov
subb
and
stos
imul
mov
out
insl
add
xor
push
aaa
mov
aam
leave
push
fwait
add
add
pushf
mov
push
xchg
xchg
mov
xor
pusha
and
inc
sub
or
addb
scas
dec
icebp
and
inc
cmp
gs
es
scas
scas
fidivrl
out
sub
mov
jb
das
fiaddl
xchg
add
popa
int3
dec
mov
into
dec
jge
movsl
pop
inc
mov
sub
pop
stos
iret
dec
test
mov
add
call
fwait
negb
shlb
stos
xchg
xlat
cmp
pop
push
push
ljmp
add
cmp
cwtl
cli
jno
arpl
sub
and
mov
subl
add
or
dec
push
pop
jne
jns
out
cli
rol
pop
lahf
push
ret
xchg
pop
or
jle
loope
test
in
push
pop
push
xchg
or
mov
aaa
je
cld
and
xchg
ljmp
xchg
and
dec
mov
xchg
out
std
inc
movsb
push
js
cmp
cmp
icebp
jb
xorl
stos
cmp
inc
xchg
aaa
mov
rclb
mov
sbb
push
call
cmp
inc
imul
aam
xchg
xchg
inc
lahf
call
jmp
xor
pop
fimuls
xchg
test
pop
dec
aaa
mov
movhps
cmp
adc
mov
or
cli
xchg
mov
inc
adc
pop
pop
out
cmpsl
pop
fadd
sub
add
fwait
cwtl
jmp
aaa
adc
notl
add
mov
adc
xchg
push
xorb
bswap
jb
enter
sar
mov
mov
mov
adc
mov
sbb
pop
add
mov
mov
imul
sar
lods
or
inc
dec
jp
in
jmp
xor
loop
inc
ljmp
xor
jp
push
sub
pop
imul
sahf
add
push
lea
xchg
dec
fldlg2
xchg
fsubp
repz
jmp
out
popa
pushf
xchg
sbbb
shlb
es
push
xor
jb
add
xor
in
fdivrl
xchg
mov
and
push
popa
push
cmp
sub
mov
dec
cltd
popf
daa
cmpb
sub
ficoms
jmp
and
icebp
les
lcall
push
std
loop
mov
jp
add
pop
push
mov
outsl
xchg
sbb
repnz
push
dec
cmp
dec
lods
test
lock
inc
outsb
enter
dec
outsb
xor
cmp
dec
insl
jle
test
mov
js
xor
icebp
aas
inc
outsl
jmp
cmp
ror
mov
sarl
scas
inc
cld
xchg
testb
sti
lahf
ret
gs
out
jbe
jo
or
sub
xchg
adc
sub
and
sbb
and
ds
dec
jo
pop
insl
xor
mov
scas
cmpsl
ds
rolb
iret
jle
push
shll
aam
clc
sub
sti
xlat
cmpsl
int3
mov
movsl
faddp
xor
jle
mov
ror
add
dec
pop
in
ds
dec
scas
pop
xchg
cmp
std
adc
popa
mov
std
das
sub
and
scas
pop
sub
xor
sbb
cmpsl
shr
out
mov
push
loope
xor
int
mov
xchg
pusha
pop
add
fistps
dec
mov
dec
test
sar
movsb
aas
inc
sbb
rorb
mov
push
mov
mov
imull
cltd
das
clc
push
sub
sbb
out
add
test
shll
ret
iret
test
jecxz
inc
je
lret
js
jae
inc
popa
aad
mov
cmp
ds
fldenv
mov
aas
jp
xchg
cmp
mov
jle
aaa
mov
test
adc
daa
jecxz
std
cmpsl
inc
push
and
inc
out
dec
and
rcrl
mov
loop
mov
mov
sbb
adc
add
loopne
test
push
das
stc
sub
jp
add
rclb
sub
or
fisttps
lret
mov
outsl
jl
add
or
lea
xchg
pop
mov
xchg
push
sub
add
filds
push
jne
popa
dec
sbb
cltd
push
mov
xchg
jp
dec
xchg
fimuls
cmp
movsl
mov
dec
xor
or
cmpsb
dec
xlat
mov
inc
sbb
inc
sbb
popa
or
cltd
ficompl
fimull
imul
incb
lcall
imul
dec
jle
in
push
sub
or
pop
dec
pop
mov
mov
xchg
mov
xchg
in
mov
sarb
xchg
lods
xchg
imul
repz
inc
dec
sbbb
fbld
push
ds
iret
add
jno
clc
jne
xchg
fdiv
sbb
rorb
mov
inc
sbbl
inc
adc
xbegin
nop
inc
es
pop
or
or
divl
pushf
xchg
insb
push
loop
into
inc
jmp
or
cwtl
fsubl
shrl
out
cmp
and
arpl
push
cmp
mov
xor
pop
out
xchg
sbb
xor
xor
insb
lret
les
dec
xor
or
and
ljmp
outsl
jmp
pop
mov
xor
ss
sti
sahf
stos
loope
push
jne
pop
lods
lock
dec
pop
aas
add
sarb
pop
jl
lahf
imul
cld
scas
mov
pop
push
or
popf
jge
pop
add
ss
mov
int3
adc
inc
ret
je
push
inc
cmp
outsb
or
sub
out
sahf
movsl
cmp
fsubr
pop
mov
cmp
xchg
mov
or
dec
movsl
mov
sub
jle
push
inc
stc
jmp
xchg
fabs
and
lcall
icebp
xor
int
pop
push
mov
mov
lock
or
add
clc
mov
push
dec
and
ss
loopne
int
add
jmp
icebp
std
sarl
into
jnp
cmp
dec
mov
fistpl
pop
shrl
add
pop
stos
cmc
arpl
out
cmpb
fiaddl
or
sahf
pop
xor
setge
mov
les
es
push
ds
rcr
nop
mov
loop
shll
dec
lods
gs
add
sbb
in
add
mov
cmp
test
movsb
xlat
inc
cwtl
movsl
jb
xor
jo
lods
adc
and
scas
inc
push
shrb
je
les
daa
dec
clc
add
mov
gs
sbb
mov
or
xchg
push
daa
xor
mov
xor
xor
lods
cmp
mov
mov
mov
cli
std
lods
pop
ljmp
xor
aaa
ror
mov
push
mov
loop
pop
pop
lock
rorl
mov
sbb
mov
xor
lods
or
push
inc
decl
pop
bound
dec
lret
popa
mov
cmp
push
xchg
sbb
and
add
out
movsl
xchg
mov
mov
shl
clc
cmp
mov
lret
mov
test
test
add
push
mov
imul
cmc
lea
jb
xlat
xchg
or
jnp
and
test
xchg
mov
decb
arpl
ljmp
mov
arpl
xchg
fisttps
hlt
add
add
bound
test
mov
xchg
mov
xchg
lcall
shlb
cmp
insl
negl
jns
lock
fisttpll
push
lock
push
mov
sbb
aam
adc
mov
vsubsd
into
int
dec
add
dec
in
movsl
cs
stos
cwtl
cmpl
mov
subb
clc
les
daa
mov
adc
arpl
test
cld
mov
ljmp
cmp
push
xchg
and
xor
iret
lods
icebp
scas
lds
fwait
mov
jb
or
sbb
add
lcall
mov
loop
popf
xchg
mov
inc
sbb
mov
add
adc
or
jl
lds
cmc
pop
std
push
dec
mov
dec
xor
es
popf
dec
jp
and
jmp
jnp
je
in
mov
or
dec
inc
clc
sbb
or
sub
mov
xchg
sub
bound
repnz
addr16
jg
xchg
dec
and
or
ss
sbb
jl
test
inc
adc
jno
jo
xor
or
loop
rolb
dec
xor
fbld
ja
mov
adc
push
mov
add
pop
adc
insb
loop
outsb
jp
jle
outsb
test
or
mov
mov
lahf
sbb
test
inc
fs
sub
aaa
xor
xchg
or
pop
sub
ljmp
jmp
or
mov
aaa
loope
adc
movd
scas
call
pop
movsb
jbe
stc
fucomip
in
lea
push
flds
lods
arpl
aas
outsb
push
lret
dec
test
jne
stos
adc
pop
das
lahf
push
xor
jge
mov
fadds
xor
add
sbb
mov
ljmp
jbe
sarl
mov
out
pop
enter
std
mov
sub
push
jecxz
xchg
cmp
pop
daa
or
call
stos
cmpsb
bound
mov
test
ret
dec
test
std
aad
rorl
in
push
dec
andb
push
or
ficompl
pop
loopne
repnz
pop
sub
add
mov
out
icebp
adc
fcoms
jge
flds
das
call
mov
dec
cs
mov
je
pushf
mov
mov
addb
push
cmp
mov
pop
mov
dec
ja
xchg
and
cmp
stc
pushf
xchg
icebp
mov
mov
adc
out
into
and
aas
loope
dec
mov
xor
aam
sub
insb
sub
cmp
faddp
outsb
mov
jns
outsl
lds
mov
lahf
cmp
push
lcall
idiv
dec
fwait
pop
dec
test
add
sahf
push
ret
xchg
jp
add
ljmp
ljmp
add
cmpsl
lods
testl
addr16
jle
mov
mov
sbb
adc
cmp
and
fisttpl
pushf
mov
inc
arpl
fwait
test
push
cmp
jae
loop
out
int3
pop
outsl
xor
out
ljmp
imul
mov
incl
cltd
cmp
rol
test
lods
loope
push
out
gs
test
add
fs
dec
aas
or
mov
mov
xor
arpl
adcl
or
lret
dec
and
imul
pop
jmp
lods
xor
mov
pop
into
jbe
push
pop
push
add
data16
into
addr16
push
daa
cmpsb
pop
clc
xor
icebp
xchg
cli
dec
sub
fsubl
fwait
or
adcb
shll
cs
dec
aas
rcr
and
hlt
call
ret
fiaddl
jnp
adc
xchg
dec
mov
add
xchg
mov
sbb
addr16
loopne
aad
mov
js
in
add
push
or
adc
and
nop
sbb
jle
add
fnsave
test
jno
lock
pop
jb
in
push
add
lea
dec
ja
mov
ljmp
scas
movb
pop
adc
xor
cmc
les
dec
fwait
sub
into
xchg
mov
pop
pusha
cmp
fwait
push
mov
adc
sbb
in
pop
lcall
and
subl
lea
mov
fisttps
sub
out
sti
dec
mov
cmp
mov
imul
movb
jo
rcll
cmp
cmp
pop
add
or
push
leave
or
push
icebp
cli
cli
sub
rorb
push
cmp
pushf
clc
adc
in
fmull
punpcklwd
xor
decb
loope
lahf
ljmp
adc
xor
add
shrb
mov
pop
mov
mov
aaa
cmc
mov
push
and
repnz
cmpsl
outsl
sarb
lahf
pop
stos
std
loop
cmpsb
inc
mov
rcl
jnp
dec
jmp
jecxz
imul
pop
pop
pop
loopne
jecxz
outsb
add
mov
push
test
ss
inc
mov
aas
xor
cs
vandpd
ja
sbb
inc
fildl
data16
add
in
push
das
sbb
cld
and
addb
ja
pop
or
adc
ljmp
imul
mov
inc
stc
std
icebp
mov
mov
aaa
mov
fsubrs
pushl
rcll
stc
inc
das
rorb
ret
aaa
orb
dec
lret
push
dec
jmp
push
push
sbb
inc
das
push
sub
push
scas
lock
sbb
cmc
sbb
pop
xchg
and
inc
ss
out
mov
inc
pop
adc
fstp
jo
adc
pushf
push
out
mov
cmc
cltd
jecxz
fistps
cli
xchg
xor
push
push
sbb
mov
xchg
sub
mov
push
arpl
sub
ret
out
imul
ror
lcall
jp
jecxz
loopne
out
andb
imul
adc
rorb
add
sub
fnop
mov
sbb
and
mov
js
sub
movsb
mov
lods
sub
dec
lds
call
popf
xchg
dec
inc
mov
and
jg
pushf
add
lock
mov
mov
adc
mov
fsub
testb
mov
push
add
mov
dec
xor
ds
cmc
lods
scas
int3
nop
pop
inc
and
xor
or
aad
ljmp
dec
fs
jae
pop
sbb
out
cmpl
push
push
push
dec
cld
xchg
jle
push
pop
sbb
js
frstor
or
push
daa
mov
push
hlt
stos
xchg
fidivs
pop
pusha
jae
clc
push
or
in
out
inc
loopne
jnp
inc
inc
mov
cli
fbld
ret
xor
inc
fimuls
popf
jle
scas
aam
in
adc
mov
outsl
dec
jmp
das
cmp
or
add
mov
adc
xor
lods
and
add
xor
inc
aad
outsl
inc
sahf
lds
jg
xor
je
and
movsb
jbe
jnp
add
mull
cld
xchg
ja
lods
add
jl
and
dec
jg
adc
js
stc
inc
adcl
pushf
adc
add
dec
outsl
mov
pop
cs
dec
or
hlt
callw
clc
popa
sti
push
test
push
xchg
incb
mov
or
addl
fs
icebp
std
daa
mov
idiv
inc
pop
movsbl
adc
jecxz
sbbb
or
xor
inc
xchg
ljmp
jbe
loope
pop
out
cmpsl
mov
test
scas
stc
dec
loopne
clc
lock
sbb
decb
jno
pop
cli
es
pop
fdivs
xor
adc
orl
sub
ret
adc
fwait
movl
and
cmc
or
jp
adc
adc
cli
jg
pop
cld
popa
dec
test
bound
push
push
xchg
xchg
inc
sbb
test
sub
mov
jl
imul
mov
push
pop
or
push
or
cmp
popa
rorl
loop
mov
nop
dec
ret
fsubl
cli
shlb
or
lds
sbb
sbb
int
xchg
add
inc
mov
pop
pop
test
inc
mov
pop
cmp
ljmp
adc
cli
pop
mov
iret
add
add
mov
or
mov
cmpsb
es
ret
pop
insb
adc
add
mov
loope
and
jb
lret
incl
dec
data16
and
lea
and
arpl
sbb
stos
aaa
adc
inc
and
sbb
add
sahf
dec
jae
call
call
jp
jmp
js
lock
adc
cmp
xor
jg
jg
xchg
adc
cmp
adc
mov
adc
or
lods
lcall
ret
dec
fisubrl
fisubl
pop
push
adc
addb
mov
fbld
lods
adc
dec
and
push
and
sbb
mov
cmpl
dec
fwait
pop
push
inc
and
jo
and
push
subb
or
jmp
bound
stos
fwait
or
and
stc
out
mov
push
rclb
mov
mov
cmp
xor
insb
in
cli
iret
push
add
and
cmc
or
push
in
inc
test
pop
mov
push
aas
mov
adc
and
sub
cmc
push
insb
mov
sub
add
cltd
test
mov
push
js
push
inc
mov
push
aad
test
push
push
mov
adc
adc
ret
dec
icebp
test
ljmp
fwait
ss
fbstp
pop
push
cli
loop
mov
cmp
or
mov
ds
out
mov
js
or
idivb
imul
call
lds
repz
mov
or
stos
cmp
mov
xor
lret
call
scas
xchg
push
add
mov
inc
out
outsb
es
pop
fcmovnbe
pop
push
lret
mov
into
aam
lock
adc
add
adc
dec
insb
shlb
or
sbb
cmp
mov
sbb
jecxz
add
adc
add
pop
in
cmpsl
jmp
test
mov
mov
inc
ret
push
addr16
clc
or
cli
and
sub
cli
cmpsl
shll
sbb
shrd
test
leave
xchg
outsb
clc
das
loope
mov
mov
mov
push
js
dec
std
shll
or
bound
push
js
test
push
pusha
pop
xor
push
mov
inc
loope,pt
or
pop
adc
dec
pop
sub
fcoml
cmp
mov
and
stos
outsl
cmp
mov
lods
and
sub
and
cmc
aaa
aam
aam
leave
popf
lds
sbb
addl
jb
rolb
imul
call
daa
dec
cmpsb
rorl
sbb
das
jae
jb
mov
hlt
lods
mov
cmp
lcall
add
mov
fidivl
adc
jbe
or
fldcw
shlb
jg
and
dec
adc
jp
xchg
mov
sbb
sub
cmp
aad
mov
jmp
into
inc
lcall
shrb
push
mov
mov
test
out
push
mov
fdivs
imul
pop
sub
xchg
or
sbb
loopne
add
xor
cmp
xchg
cmp
cmp
cld
xchg
loopne
sbbb
in
push
push
xchg
mov
movsb
mov
push
sbb
jo
ljmp
mov
pop
scas
mov
pop
aad
inc
pusha
orl
sarb
mov
sub
add
or
sbb
enter
jbe
add
sub
in
jle
and
mov
push
repnz
aaa
daa
inc
pop
clc
or
addb
loopne
sub
andl
mov
push
inc
mov
popl
jl
lret
ds
lret
stos
std
mov
dec
sbb
fs
xchg
and
or
out
rcrb
add
inc
pop
inc
sbb
sahf
or
aam
or
xchg
xchg
and
int3
sti
je
mov
sbb
sbb
ficomps
and
leave
test
negb
int
cmp
inc
adc
enter
std
or
incb
sbb
fidivl
fwait
ljmp
jmp
out
or
sbb
stos
ror
fdivrl
into
inc
push
sub
mov
std
js
jne
nop
ss
insl
ret
push
addr16
neg
cld
or
xor
stos
cmc
roll
out
aas
add
cmp
ret
loope
jne
int
lods
push
ret
pop
daa
pminsw
dec
sub
or
push
aaa
and
and
sbbb
xabort
and
pop
cli
test
mov
js
push
xchg
mov
bound
pop
cmp
xchg
xor
and
cmp
xchg
repnz
xor
adc
outsb
jo
mov
mov
hlt
fsubrl
cmp
ret
push
sbb
adc
or
enter
jl
std
rclb
jle
pop
in
and
add
repnz
lds
jns
mov
push
sarb
fs
push
inc
loope
pop
mov
je
add
in
movsb
pop
and
test
sbb
jmp
out
jnp
pusha
dec
pop
xchg
mov
xchg
fmuls
dec
js
jno
jbe
mov
ljmp
add
fdivr
sbb
cmp
add
mov
pop
xor
and
cltd
js
lods
lock
jmp
jae
scas
push
and
sbb
out
test
add
and
add
mov
sub
mov
dec
adc
mov
push
subb
jp
in
or
push
mov
push
pop
cmp
add
stos
sub
pop
sbbb
jae
hlt
xor
xchg
and
icebp
lock
daa
rcrl
xor
xlat
in
jnp
insb
jg
sbb
insb
mov
push
and
mov
jb
and
lret
cs
mov
std
push
call
sti
lock
push
xchg
rolb
cmp
orb
or
push
out
jno
cmp
mov
pop
addr16
mov
ljmp
insl
inc
cmc
inc
pop
pop
lahf
push
xchg
insl
fstl
imul
jns
out
and
out
pop
cmpsb
mov
sbb
out
sbb
cltd
mov
push
icebp
lcall
fidivs
adc
jle
testl
je
or
push
mov
mov
jg
mov
das
xor
push
inc
cmp
mov
lods
dec
data16
and
into
mov
or
fstps
imul
inc
fstl
mov
mov
jmp
lock
andl
lret
imul
xchg
add
push
rcrb
aad
loop
lcall
nop
and
add
push
mov
add
test
sbb
sub
add
and
daa
insl
ficoml
cmp
fs
cmp
shl
mov
test
add
or
adc
xchg
push
ret
mov
dec
rorl
jle
add
dec
shlb
mov
push
scas
xlat
adc
or
xchg
fimull
push
jnp
and
pop
jl
test
rcrb
mov
add
cmp
add
jne
mov
pop
inc
push
dec
xchg
inc
jbe
add
loope
sar
call
push
sti
in
movsl
xchg
adc
pushf
cmp
loopne
xlat
rcrb
adc
add
sbb
cmpsl
hlt
iret
xlat
mov
test
arpl
dec
mov
ds
add
pop
rcr
mov
subl
shrb
std
repnz
loope
add
movb
shrl
popa
pop
sbb
lret
addr16
pop
or
in
adc
or
loopne
sub
fstl
sbbl
sub
loop
xchg
adc
or
arpl
mov
sti
leave
movsb
adc
or
mov
push
fsubr
push
sarb
test
xor
push
rcrb
pop
loopne
mov
imul
sub
push
mov
jge
lret
cmp
ds
mov
adcl
es
pop
idiv
in
mov
xchg
lcall
mov
dec
std
xchg
push
insb
and
out
inc
adcl
jecxz
xor
loopne
add
push
jmp
inc
mov
add
ficomps
mov
xor
cmpl
popa
xchg
inc
std
inc
push
pop
and
pop
jp
sub
sbb
and
jle
mov
mov
adc
pop
out
scas
nop/reserved
sub
xchg
sbb
or
and
lods
mov
mov
push
or
xchg
ss
push
sbb
notb
jns
sub
insb
lods
xor
mov
and
pop
popf
jmp
mov
dec
jp
test
into
out
ds
xchg
adc
pusha
pusha
sub
mov
mov
or
rclb
inc
fisubs
add
jle
clc
shl
roll
hlt
jge
sub
loope
xchg
mov
test
pushf
lea
test
sub
mov
or
jle
jae
iret
xor
jnp
jno
icebp
sbb
mov
fnclex
or
jmp
int3
popf
hlt
push
fimuls
inc
ret
lods
das
cmp
adc
lahf
adc
je
xchg
inc
aas
loopne
xchg
xor
nop
cmp
add
inc
icebp
mov
cmp
xchg
pop
nop
or
mov
out
ret
sub
sub
mov
mov
cmp
jp
ds
mov
cltd
xchg
push
jb
call
jo
movsl
or
mov
add
pop
sub
push
cmp
test
sbb
fadd
movsb
ja
addr16
push
clc
lods
test
push
jl
fdivs
inc
stos
mov
sub
inc
pop
pop
subb
rclb
cmp
sbb
arpl
cmpsl
pop
comiss
push
add
xchg
in
insl
rolb
adc
sub
into
adc
push
stos
jecxz
push
pop
cmc
fsubrl
cmp
push
sahf
loopne
test
sub
mov
or
leave
fstl
iret
enter
pusha
mov
rorb
inc
sbb
mov
test
ret
and
les
pushaw
xchg
js
test
cwtl
stos
aas
popa
bnd
ror
sti
or
pusha
cmp
push
pusha
cmpsb
dec
fst
sub
out
fstps
push
or
mov
sbb
movd
rcll
jne
shrd
in
std
stos
pop
out
fnsave
adc
lods
out
sub
hlt
repz
xor
jno
push
adc
jne
pop
xor
insb
jle
test
shlb
je
adc
stos
mov
jnp
aam
or
in
stos
adc
adc
nop/reserved
jne
loope
push
add
fwait
das
mov
dec
ror
jo
jnp
adc
pop
mov
fwait
xor
les
fsub
fcomi
scas
addr16
mull
jbe
or
sbb
movsb
lods
push
in
inc
jge
mov
lret
xor
ret
push
sbb
scas
jo
jge
sbb
leave
addl
pop
adc
out
mov
or
dec
jb
mov
leave
jl
or
sbb
ds
mov
enter
loopne
loop
and
adc
add
sub
cli
out
xchg
mov
in
inc
daa
mov
and
pop
and
mov
cs
cmp
mov
adc
sbb
and
andl
outsb
dec
imull
call
sbb
ja
xor
add
jae
out
outsl
sbb
lret
push
rorb
movsl
mov
adc
int
sar
subb
movsb
cs
pop
daa
and
xor
test
jo
loopne
cmpsb
sahf
xor
das
loop
pusha
xchg
fildl
das
mov
imul
mov
dec
xor
jnp
mov
or
push
push
mov
outsb
push
cmp
xchg
or
sti
xchg
and
push
insl
xor
xor
inc
inc
pop
sub
sub
lret
jmp
aad
cwtl
movsb
and
cli
nop
sbb
or
popa
inc
or
mov
int
cmpb
aas
int3
rcll
in
insl
xor
insb
das
mov
aad
insl
inc
popa
loope
mov
jo
rol
and
mov
aas
sbb
loope
and
mov
rcrb
dec
and
xchg
pop
in
test
sbb
lret
sub
fdivrl
scas
xor
cwtl
inc
fwait
aas
call
mov
or
xchg
shrb
sub
add
cs
ja,pt
insl
lds
jns
js
dec
xor
sub
shlb
mov
aas
test
inc
mov
lret
pop
in
mov
mov
fst
xchg
pop
inc
and
sbb
mov
sbb
shrl
xchg
outsb
jno
mov
lea
test
clc
mov
mov
jbe
pop
push
shl
push
int3
leave
inc
mov
inc
roll
and
push
ljmp
movb
sahf
mov
jl
mov
mov
push
mov
ret
push
xchg
pop
movsl
lea
sbb
les
pop
pop
pop
sbb
jbe
pushf
hlt
sub
out
fsubrs
mov
or
data16
movsb
lret
or
fidivs
cld
call
mov
sub
loope
fimuls
scas
js
sbb
daa
sub
out
ret
test
add
vpaddusw
push
mov
outsb
lock
pop
pop
nop
jae
out
int3
icebp
dec
mov
sbb
lods
scas
adc
nop
cltd
movsl
loopne
test
mov
outsb
test
mov
push
xchg
sub
and
sub
sbb
fistpl
adc
dec
es
pop
loop
mov
dec
inc
aas
je
sub
lds
pop
and
adc
xor
or
sub
mov
imul
mov
ds
pop
inc
dec
js
stc
loopne
and
or
jmp
inc
cwtl
cmp
aam
call
add
pop
test
insb
loope,pn
jns
imul
mov
mov
adc
cmpsl
in
icebp
add
sbb
mov
lock
insl
gs
push
mov
fcmovnbe
xor
pop
xlat
in
dec
add
rclb
add
inc
inc
lret
clc
inc
pop
rcll
and
ffreep
andl
test
pop
mov
jne
pushl
je
jns
sbb
jp
pop
cs
pop
push
or
inc
dec
push
pop
shll
or
or
dec
adc
or
js
ficompl
rorl
lcall
adc
testb
dec
mov
push
aaa
pop
repnz
out
pusha
add
jmp
cld
push
dec
pop
fisubrl
jns
popa
test
outsl
lret
push
ret
out
nop
lret
push
xchg
add
or
jge,pt
or
or
adcl
movups
push
xchg
xor
xchg
popa
sub
or
push
ret
xchg
insl
nop
or
add
pop
mov
inc
jl
or
inc
out
lahf
aam
mov
sub
dec
jl
mov
inc
jecxz
push
cmp
jp
loope
mov
cld
pop
push
dec
das
pop
dec
cmp
pushf
addr16
cmc
push
push
mov
andb
jo
test
iret
xor
cmp
mov
pusha
aad
in
roll
dec
mull
or
das
pop
loopne
push
jb
out
sub
test
sbb
icebp
test
inc
mov
lods
out
iret
inc
pusha
adc
mov
or
js
xchg
rorl
lahf
push
sub
orb
pop
dec
sbb
or
xchg
mov
call
cli
mov
mov
mov
dec
es
test
push
out
stos
movsb
mov
leave
call
adc
xorl
push
add
inc
cmp
pop
mov
mov
lret
sub
cmp
jge
sbb
ret
and
xchg
pop
std
pop
jle
cmp
rcrl
shll
sbb
or
mov
lret
mov
and
lret
pop
test
adcl
inc
jle
sbb
mov
out
xor
adc
adc
bt
add
outsb
enter
inc
pusha
push
dec
add
adcw
addb
icebp
jno
addr16
inc
xchg
leave
sub
jecxz
adc
mov
cld
jae
rcrl
cmp
xchg
movsb
in
loop
xchg
lock
push
or
mov
jle
pop
cli
pop
sbb
or
dec
pop
mov
jae
pop
mov
imul
loop
or
jnp
mov
xor
ljmp
push
sub
add
xor
sbb
nop
mov
dec
pop
jns
ja
xchg
outsl
cmpsb
loopne
stos
add
fmuls
xchg
xor
aas
lret
jo
icebp
fdivr
jno
inc
repz
cs
lfs
rcll
and
sahf
rorl
sbb
mov
inc
dec
stos
xchg
add
adc
or
jge
shlb
imul
jmpw
pop
popf
pushf
ds
adc
xlat
scas
sub
cmpsl
stc
mov
int
popf
add
loopne
loopne
aam
ss
jno
ja
cmp
stc
out
or
lods
mov
adc
xchg
inc
jge
imul
test
gs
ja
outsb
mov
push
mov
div
out
mov
jp
inc
sti
les
lods
rorb
jge
movsb
rcl
push
mov
or
es
pop
xor
negb
pop
or
in
add
push
cmp
pop
mov
aam
pushf
dec
mov
sub
cmp
cli
mov
push
xor
leave
cmpsl
pop
pop
cmpsl
xchg
xorl
adcb
int3
pop
daa
enterw
stos
dec
mov
nop
fdivs
stos
in
or
push
addb
push
cwtl
jne
cmp
sub
pop
fdivs
mov
sar
push
add
inc
cmpsb
ret
xorb
mov
int
roll
push
fsub
push
popf
sub
lcall
shr
fsts
cmpsb
lret
loopne
mov
mov
iret
mov
push
divl
or
xor
in
xchg
dec
pop
pop
cmpsb
insl
sarb
adc
cs
int
rolb
jg
mov
hlt
adc
jle
mov
cmc
mov
xchg
xor
jae
jl
ja
or
ja
in
xchg
cmp
popa
sub
insb
xor
xor
mov
out
jae
gs
adc
mov
rcrl
dec
jecxz
inc
pop
mov
cmc
stc
pop
loope
cli
cwtl
xor
movsb
jl
in
fs
xorl
fmuls
loope
insl
sub
mov
pop
mov
adcl
xor
loopne
insl
testb
divb
add
iret
lret
mov
jnp
iret
mov
mov
adc
xchg
dec
add
add
inc
xlat
jns
andl
dec
fcomps
andl
lods
sub
mov
xchg
cmpsb
pop
hlt
orb
pop
call
and
sbbl
dec
mov
dec
fsubp
pop
adc
test
leave
dec
mov
sub
cmpsl
int
push
mov
cmp
mov
hlt
cmp
push
in
out
jo
push
cmp
sbb
adc
pop
cmp
mov
push
mov
sbbb
or
pop
xchg
push
xchg
adc
add
sbb
lock
xor
jbe
sub
mov
mov
add
inc
mov
lahf
mov
ret
push
or
mov
push
iret
les
adc
xchg
lock
lock
scas
aam
and
mov
popf
cltd
test
shlb
hlt
mov
pop
in
xor
add
pop
pavgw
mov
dec
call
push
pop
out
or
pop
push
and
xchg
mov
ja
aad
cmp
mov
sub
loope
xor
cs
fstpl
in
cli
inc
push
inc
test
push
push
outsb
cli
imul
leave
xor
push
hlt
pushf
movsl
cmp
clc
pusha
jle
subb
cmc
cwtl
push
adc
xor
or
insb
push
mov
movsl
out
xchg
jl
stc
push
inc
sbb
test
dec
outsl
lods
pop
cli
push
and
mov
pop
imul
rorb
inc
rol
fsubr
mov
mov
inc
daa
cmp
cmp
jl
and
mov
xchg
ljmp
popf
xchg
mov
imul
pusha
mov
ret
pop
imul
push
add
add
add
jecxz
and
sbb
fadds
movsl
sub
adc
lds
pop
jne
or
sub
mov
add
xchg
inc
push
aaa
les
inc
jae
or
fcomi
clc
test
ds
mov
xor
cmp
xor
push
dec
lods
aad
mov
mov
jb
xor
or
xchg
cmpl
mov
les
aad
xchg
adcb
sub
lods
stc
and
cmp
ds
sbb
pop
sbb
gs
pop
push
nop
mov
or
rcll
push
lock
pop
xchg
xchg
data16
pop
lock
push
sbb
out
movsb
daa
xchg
sahf
xchg
adcl
clc
adc
in
pop
sub
aas
ljmp
sbb
pop
daa
cmp
adc
inc
loop
loop
mov
xor
test
mov
in
popa
push
ss
test
icebp
js
adc
or
subb
cli
mov
inc
loopne
mov
aas
stos
xchg
and
loopne
subl
dec
add
jl
push
xchg
je
jb
lds
lret
jno
dec
arpl
mov
test
gs
jns
mov
lret
add
out
sbb
jbe
push
out
jmp
inc
adc
adc
jge
sar
push
cltd
dec
std
inc
push
lret
xchg
addr16
enter
lret
sub
fld
clc
xor
aam
test
aam
fistl
mov
xor
lock
icebp
cmp
pop
in
mov
pmaddwd
sbb
daa
lock
push
pop
jecxz
sti
out
dec
icebp
fsqrt
lea
cmc
or
push
lcall
stos
adc
js
iret
cmpsl
push
mov
mov
jp
mov
mov
out
jb,pn
movsl
orb
jmp
iret
inc
int3
cmp
rorl
hlt
cld
fwait
mov
adc
lret
sbb
fsub
cmp
pop
or
pop
sbbb
icebp
shrl
stos
push
mov
cld
push
and
loopne
daa
pop
or
stc
loop
xor
mov
shlb
cmpsl
out
sbb
fcoml
push
inc
aas
or
inc
add
cmp
or
pop
hlt
push
lock
mov
jno
cli
sbb
and
or
jbe
mov
in
scas
cwtl
mov
push
gs
and
sbb
fs
fs
cmpsl
in
jbe
ret
rcrl
das
lahf
adc
or
sbb
sahf
xchg
aad
add
enter
out
mov
dec
xlat
or
pop
fiadds
push
rcrb
dec
loope
xchg
jl
stos
insb
icebp
lahf
mov
sbb
and
fstps
das
flds
mov
push
cli
mov
out
ret
sub
xchg
js
repz
es
xchg
sbb
mov
push
push
or
push
push
pushf
jno
sbb
lcall
pop
insl
jae
jg
daa
pop
push
mov
cmpl
lods
addr16
outsb
scas
dec
js
add
sbb
mov
les
jmp
mov
adc
outsl
mov
pop
outsl
stc
or
mov
mov
sbbl
lds
add
adc
pop
jge
mov
pop
mov
jns
frstor
icebp
sbb
ljmp
vmread
or
flds
add
ret
rorl
roll
cmpsl
sbb
mov
les
orl
mov
adc
adc
insl
lods
jl
xor
push
mov
add
in
jge
jl
cmp
lret
jno
movb
cmc
pusha
pop
sahf
lahf
mov
mov
add
ret
push
ljmp
sub
fcmovnbe
call
pop
xor
ljmp
call
cmc
roll
or
in
test
cmp
sub
adc
dec
mov
jl
rclb
mov
arpl
pusha
pop
imul
test
inc
xor
mov
addl
cmpsb
adc
pmaxub
jae
ja
stos
jp
cmp
dec
inc
add
add
mov
mov
or
cmc
or
repnz
fdivs
lret
jg
outsb
or
sbb
adc
pusha
fcoml
clc
push
out
jl
and
pop
pop
arpl
sbb
je
mov
cmpsb
dec
push
or
ljmp
dec
hlt
stos
jo
pop
fisubrl
inc
int3
and
insb
mov
ja
jo
mov
mov
xor
imul
gs
test
rclb
fidivl
or
sbb
mov
inc
sbb
std
pop
sbb
pop
dec
mov
clc
hlt
mov
push
frstor
into
dec
add
aaa
push
je
mov
dec
add
mov
out
scas
add
pop
cld
fimuls
adc
sbb
and
pop
call
loope
add
mov
dec
or
es
add
sub
aas
pop
outsl
sub
cld
or
sub
sarb
or
add
push
inc
sub
pop
pop
daa
hlt
pop
jno
rcrb
dec
xchg
or
add
push
add
sub
mov
iret
jnp
insl
mov
inc
or
sbb
or
fisttps
fs
pop
add
and
dec
xchg
mov
pop
dec
adc
cld
stos
ret
push
mov
jo
xor
mov
sub
mov
xchg
sbb
and
sub
enter
adc
mov
sbb
mov
adc
movsl
add
sub
push
inc
stos
add
std
push
ret
sbb
dec
and
pusha
shll
mov
fists
cli
lea
inc
add
cmp
outsb
pop
jge
push
xor
xchg
pop
jge
xchg
push
jmp
outsl
incb
and
sub
push
inc
xchg
nop
mov
repz
test
pop
inc
cmc
pop
enter
xor
div
push
add
xor
jnp
push
in
push
insb
mov
popa
aas
or
pop
adc
and
push
clc
test
jmp
push
mov
imul
mov
test
pop
adc
cmp
adc
and
xchg
and
fistps
mov
outsl
push
sub
int
addb
hlt
rcrb
test
add
orl
xchg
jl
xchg
leave
cmp
cwtl
inc
push
std
adc
es
and
or
mov
shlb
push
repnz
lds
scas
jo
and
push
jg
mov
rcl
pop
or
stc
add
pop
ljmp
adc
or
mov
add
sub
movsl
lods
outsl
shr
push
into
fwait
aam
xor
insb
mov
aad
or
in
in
inc
add
rclb
aam
cmpsb
mov
and
or
sbb
addb
lret
jl
fisttpll
daa
shlb
xchg
fmulp
mov
mov
mov
xchg
mov
addl
push
out
test
mov
loope
ja
enter
xor
push
cmpsb
adc
or
dec
lret
mov
jns
mov
fiadds
call
faddl
push
imul
cs
outsb
mov
lods
ja
sarl
mov
stc
dec
push
xchg
push
jl
adc
arpl
ja
clc
adc
lods
ds
icebp
pop
js
fdivl
adc
dec
xchg
mov
test
popa
pusha
cmp
aam
pop
ja
inc
xorl
loopne
xor
in
xor
rcll
pop
cli
sub
sbb
sbb
cli
test
out
ljmp
jg
pop
adcb
rcrl
or
xor
inc
insl
add
mov
or
xchg
scas
lret
pop
lock
imul
pop
cs
shr
sbb
jno
and
mov
loopne
inc
inc
popf
clc
or
mov
outsb
loopne
sbb
ds
pushl
jg
mov
jecxz
mov
mov
aad
adc
mov
xchg
lods
ja
outsb
dec
jg
fstps
push
dec
call
cmp
lock
test
arpl
cmp
js
sub
pop
divb
lods
cwtl
push
or
inc
cmpsb
sub
fiadds
mov
or
hlt
fisttpll
mov
je
mov
sbb
dec
jo
in
mov
repz
pushf
jno
push
adc
cltd
jnp
rcr
dec
lahf
mov
mov
sbb
mov
mov
pop
xchg
fidivs
jp
jecxz
push
lcall
xlat
pop
shlb
pop
jmp
pop
pop
cmp
rcll
std
test
add
cld
xchg
stos
jle
sbb
jns
sub
mov
push
xchg
xor
in
insl
cmp
push
je
mov
push
or
stos
ljmp
adc
sti
mov
loop
and
push
cmpsb
pop
call
xchg
mov
mov
pop
ljmp
testb
pop
fdivrp
orl
mov
cli
xchg
add
inc
insl
sbb
js
ret
inc
cwtl
xor
cmp
aad
lods
iret
xor
or
adc
mov
dec
insb
daa
xchg
fisubrl
push
xor
xchg
adc
xor
mov
mov
pop
es
xor
mov
push
test
mov
inc
xchg
mov
xor
and
test
smsw
sbb
sbb
inc
sbb
xchg
in
push
outsb
inc
xchg
ret
test
dec
and
xor
adc
push
js
inc
jmp
pop
fsubrs
enter
mov
ds
lcall
popa
imul
mov
lds
mov
jmp
jnp
mov
pop
out
clc
andb
cmpsl
loope
xchg
jno
push
push
jge
das
pop
add
dec
adc
in
adc
xchg
xor
sub
dec
jno
mov
loop
ret
out
loop
mov
pushf
jl
xor
nop
loop
rorl
test
lock
or
inc
aaa
jge
jle
cld
aam
shrb
test
xchg
loop
sub
leave
loopne
adc
decb
xor
into
add
cmpl
pusha
jnp
adc
push
incb
out
jmp
fwait
lock
repnz
jmp
mov
mov
xchg
jmp
mov
mov
icebp
fs
addr16
rcr
push
inc
cmp
cmp
cmp
pop
inc
mov
xor
popa
adc
shlb
inc
js
or
pop
rorb
ljmp
icebp
dec
jge
push
gs
call
cmpsb
stos
add
call
ja
adc
int
jp
out
les
mov
js
std
mov
sub
cpuid
add
loop
and
mov
sbb
fcomps
xlat
jbe
testb
cmpsl
mov
mov
or
icebp
pop
cmp
mov
dec
and
test
call
and
in
js
scas
inc
es
stos
inc
xchg
es
or
lret
jecxz
pop
push
sbbb
sbb
or
scas
pop
xor
pop
lock
mov
push
pop
mov
ja
add
xlat
cld
aas
dec
das
xor
mov
ret
mov
pop
aaa
and
imul
cmpsb
dec
and
cmp
xchg
inc
enter
js
and
adc
sbb
or
pop
or
loopne
cmp
into
xchg
enter
sbb
jno
js
and
rorb
mov
shll
in
popa
mov
pop
lock
lcall
in
lcall
insl
mov
lock
mov
gs
imul
mov
push
jmp
adc
int3
enter
xchg
jnp
sbb
adc
mov
outsb
sub
push
popa
dec
mov
in
sbb
loopne
ja
dec
stos
stos
mov
cmpb
stc
add
fdivl
repnz
sbb
mov
clc
dec
mov
mov
insb
dec
ret
add
mov
sbb
or
xchg
nop
pop
imul
lcall
push
sbb
xchg
fnsave
sub
sbb
std
loop
pusha
mov
nop
and
test
rorb
cld
andb
ljmp
loopne
ret
nop
xor
xor
arpl
xchg
inc
mov
lods
and
divb
cmc
jg
dec
push
movsl
push
cmp
jp
dec
dec
sbb
hlt
mov
push
and
popf
in
xorb
icebp
mov
shrb
pop
add
fcomip
push
jg
or
inc
pop
xchg
mov
loop
jmp
std
adcl
sub
add
pop
mov
hlt
xchg
jle
jg
dec
dec
pop
xchg
pop
fmul
mov
inc
and
cmc
dec
pop
mov
inc
lret
mov
or
bound
pop
mov
adcb
out
cmp
pop
push
stos
xchg
imul
inc
jne
xchg
cli
dec
push
cmp
push
jmp
lods
add
dec
les
mov
dec
fcom
dec
xchg
dec
sub
push
cmpsb
xor
mov
aaa
cli
mov
inc
adc
add
fcompl
mov
js
xchg
ret
aas
fwait
push
pop
mov
push
or
icebp
call
sbb
xchg
mov
inc
test
mov
xchg
cmpsl
fiadds
cmp
mov
lods
or
add
push
inc
decl
inc
sbb
or
and
test
ret
andb
lcall
sub
sti
lods
push
and
std
mov
inc
jg
fs
mov
sbbb
clc
decl
test
inc
adc
mov
push
insl
mov
dec
js
out
or
adc
in
sub
clc
lahf
jp
std
xor
dec
jne
out
les
sti
mov
sub
rolb
loopne
cmpsl
cmp
sbb
push
popf
int
xchg
dec
jge
insb
cmp
push
xchg
fldt
mov
jecxz
jns
mov
ljmp
push
cli
add
loope
push
fldl
sar
mov
jmp
add
test
push
ds
pop
loopne
push
lcall
add
shlb
aam
nop
adc
jb
lcall
lcall
jl
jmp
pop
test
scas
icebp
fwait
mov
add
cli
in
sbb
out
test
xor
jmp
jg
mov
jns
adc
mov
clc
fdivrp
jo
sti
mov
add
add
test
int
stos
insl
dec
sbb
jl
cmp
adc
jno
pop
or
fchs
cmpl
jecxz
insl
bound
inc
push
cmp
outsl
add
hlt
ret
pop
mov
cmpsl
pop
push
iret
mov
pushf
dec
addr16
sub
stos
aas
pop
mov
clc
shll
mov
push
lods
ja
add
or
xor
push
fwait
pop
add
fdivl
bound
or
jae
and
dec
jg
in
inc
adc
xor
push
iret
mov
cmp
lret
mov
push
cmpsl
sbb
fmuls
bound
fcmovnbe
movsb
jecxz
and
loope
loope
push
popf
sub
fsubrs
into
jp
pop
nop
xor
mov
mov
xor
jbe
push
pop
aad
mov
add
imul
xlat
pop
ljmp
xorb
jmp
pop
insl
ret
gs
inc
inc
jne
and
arpl
sarl
push
pop
hlt
jmp
push
cmp
inc
mov
nop
lods
jo
ret
and
inc
cmpsb
es
inc
mov
repz
xor
push
jl
cld
in
xor
jo
mov
cli
and
int
adc
mov
loopne
insl
cmp
add
scas
ror
lock
pop
xchg
and
push
lret
fsubrl
mov
nop
dec
in
fdivl
jmp
cwtl
out
push
mov
sbb
dec
rcr
in
fwait
or
add
leave
ds
nop
mov
pop
dec
cmpsl
daa
mov
xor
push
push
lock
add
and
mov
mov
and
mov
or
lcall
test
and
xchg
stos
jge
stos
ss
jl
xor
push
loop
mov
jecxz
lret
or
sti
pusha
dec
fs
enter
mov
jmp
mov
or
clc
mov
xor
jl
sti
data16
frstor
das
or
add
push
xchg
xor
add
outsl
mov
push
xchg
mov
out
push
mov
jg
xchg
pop
mov
or
lds
ds
sar
adc
push
cli
mov
lret
subb
insb
xor
add
je
and
imul
jle
pop
sub
sbb
mov
lods
jg
sub
dec
sub
and
pusha
dec
xchg
stc
pop
js
and
nop
dec
jg
outsl
loopne
movsl
xor
mov
cwtl
lcall
cmp
cmp
loopne
mov
clc
in
xchg
mov
ss
gs
movsb
add
rcl
adc
adc
mov
aas
jbe
lcall
aas
or
inc
jmp
inc
fidivrl
cmp
mov
cmovnp
mov
push
mov
push
idiv
sbb
dec
xchg
inc
xor
shl
add
insb
cmp
pop
push
pop
cmp
xchg
jo
bound
jl
sub
insl
cmp
xor
push
cmp
lahf
push
daa
push
and
ret
dec
js
dec
cmp
jl
jo
fwait
jns
fldt
cli
inc
mov
cld
js
test
mov
cltd
xor
bound
stos
lcall
imul
ret
filds
inc
push
add
ja
pop
divl
gs
pop
add
fnstenv
adc
or
push
push
jne
pop
cltd
mov
push
adc
aad
or
jnp
jae
and
push
mov
aad
sub
cmp
mov
pop
je
xchg
lcall
add
sbb
dec
cmp
mov
xor
xchg
add
mov
imul
push
mov
or
sarb
inc
pop
popa
sub
xor
lret
sub
jo
outsb
test
jbe
add
push
nop
fstps
adc
mov
cwtl
cmp
outsl
or
andb
mov
push
pushw
scas
xor
movsl
jnp
cmp
les
jns
push
jo
pop
adc
adc
outsb
jns
cmpsb
pop
iret
add
clc
pop
rorl
or
dec
shll
push
push
push
push
mov
dec
and
out
adc
dec
lods
adc
adc
je
sar
mov
lahf
shll
popa
icebp
cmp
or
ret
xor
stos
dec
imul
and
stc
enter
lds
ffreep
std
jmp
jl
lods
jp
inc
out
pushl
outsb
aas
loope
cwtl
mov
sub
cmp
add
loope
repnz
lods
roll
add
in
sub
adc
mov
xchg
mov
cmp
invd
add
cmp
hlt
xchg
and
nop
jmp
xor
fdivrl
mov
mov
xor
test
cmp
pop
les
or
js
inc
dec
push
pop
or
aam
iret
lock
stos
push
adc
pop
sahf
jbe
push
mov
scas
xchg
sub
hlt
sarb
inc
mov
out
inc
dec
faddl
rcrl
outsl
pmulhw
and
loop
sub
mov
cmp
jo
jns
lea
add
sbb
jp
lret
movsb
rep
int3
mov
cmp
outsb
xchg
push
push
fsubs
mov
push
outsb
add
sub
cmpsb
mov
jle
aam
or
mov
push
aaa
adc
pop
fmuls
sysenter
cmp
or
xor
cmp
xchg
adc
inc
adc
adc
call
add
pop
lods
jb
repnz
aas
push
clc
inc
clc
aas
lds
add
xchg
adc
pop
jp
addb
filds
ds
and
ret
in
jecxz
push
jl
mov
xor
aam
stos
adc
cmp
mov
pop
lock
push
inc
call
push
cmpb
and
inc
movsl
mov
sbb
xchg
push
je
jo
jmp
xor
idivb
mov
mov
sarb
push
jg
aas
mov
push
aas
push
outsb
mov
mov
inc
inc
push
inc
clts
aam
dec
loop
int3
addr16
adc
popa
cld
adc
pop
mov
imul
mov
or
mov
mov
xor
outsb
push
xchg
fcmovbe
rorl
xchg
inc
dec
push
aas
xchg
mov
mov
push
hlt
mov
sahf
push
std
rcr
test
fprem1
test
test
dec
xchg
imul
in
mov
sbb
shrl
loopne
mov
jl
push
imul
fs
insb
cltd
jo
incl
sub
mov
or
inc
cmpsb
outsb
dec
mov
leave
test
push
xchg
into
add
and
mov
jo
xchg
xchg
sbb
in
cli
and
in
xor
jnp
xor
mov
jle
clc
stc
cltd
sub
mov
int3
xchg
adc
dec
push
ds
dec
add
mov
push
stos
dec
stos
mov
decl
inc
imul
enter
mov
test
int
mov
push
pop
cmc
sub
and
pop
pusha
xchg
cmp
leave
std
sub
pop
icebp
notl
xor
loop
cmp
push
sbbl
adc
ret
inc
jnp
dec
ja
nop
icebp
cltd
lahf
cs
divb
inc
inc
add
xor
rolb
mov
pop
mov
clc
push
cmp
cwtl
inc
into
in
shlb
cltd
xlat
mov
lods
xchg
pop
idivb
mov
sbbb
std
or
sbb
push
andl
dec
dec
fnstcw
fs
lock
ss
enter
je
stos
ja
addr16
in
and
andb
lock
mov
mov
enter
nop
pop
inc
push
ret
dec
adc
es
ljmp
sub
xchg
push
sub
and
adc
add
cmp
dec
in
push
aad
pop
mov
leave
inc
or
push
or
jl
mov
cmpsl
in
add
leave
lods
or
je
aad
pop
xor
nop
push
stc
sti
dec
gs
test
int3
cmc
pop
shlb
or
into
js
cmpb
aad
xchg
jmp
movsb
push
push
mov
fdivs
pop
and
push
lret
adc
es
xor
sbbl
sub
lret
or
mov
mov
lods
or
es
mov
test
push
inc
ud1
sti
and
jecxz
adc
cmp
test
fisubs
jb
xor
es
shll
push
lcall
jo
clc
xor
test
mov
inc
jmp
cmp
xchg
or
cmpsb
xchg
push
sbb
mov
ljmp
scas
push
and
inc
push
adc
inc
in
sbb
pop
cmp
pop
or
xchg
movsb
push
adc
mov
jb
or
dec
adc
sahf
lcall
pop
xor
call
fisttps
ret
lds
push
test
ljmp
in
mov
cs
psrlw
jle
dec
push
call
jl
push
rolb
push
mov
jae
xchg
mov
into
adc
out
cld
xor
and
dec
dec
dec
mov
jl
jne
das
mov
js
sarl
out
or
leave
cli
mov
mov
lret
pop
jmp
jge
jg
xchg
dec
adcl
in
and
sub
adc
jnp
sbb
iret
cld
mov
add
mov
inc
push
add
add
jp
shll
in
jb
je
adc
mov
pop
inc
scas
or
lock
xor
fisttpl
or
pop
sub
hlt
add
mov
xor
or
js
add
insl
dec
fsubs
push
xor
clc
jp
cltd
pop
jle
subl
or
outsl
push
jge
add
inc
inc
xchg
cmp
pop
and
pop
imul
icebp
or
leave
xchg
push
mov
rcrb
mov
xor
pop
test
push
inc
ret
push
xor
bound
add
dec
xchg
ss
lcall
mull
inc
inc
call
repz
dec
adc
aad
cmp
loope
or
and
aam
gs
mov
test
fdiv
mov
repz
push
jo
add
loopne
incl
mov
adc
jl
adc
in
insl
or
cmp
out
in
mov
and
mov
addr16
sbb
cmpsl
pop
mov
loope
mov
add
outsb
cmp
mov
mov
mov
dec
test
pop
add
push
mov
push
les
fcomp
xchg
mov
outsb
js
aas
jge
pop
cwtl
jle
cmp
mov
in
repz
addl
xor
inc
xchg
pop
loopne
xchg
jns
mov
sbb
pop
adc
fisttpll
loope
cmp
dec
addr16
jl
js
xor
jno
jl
fiaddl
or
sub
or
cli
add
inc
adc
cmc
mov
push
sub
sti
sub
adc
ret
mov
mov
outsl
or
out
shll
pusha
add
add
dec
sbb
mov
push
adc
int
mov
stos
pop
cli
pushf
into
xchg
dec
out
ret
or
jecxz
clc
subl
scas
data16
faddl
sbb
in
sbb
jmp
mov
push
gs
fnstsw
jle
dec
pop
insb
movsb
and
lcall
sarl
mov
out
add
imul
mov
mov
pusha
mov
call
push
jno
mov
cld
pop
pusha
mov
lds
sub
js
ficompl
jg
adc
mov
ljmp
sub
xchg
xchg
cmp
mov
inc
jp
add
xchg
dec
lds
js
shrb
cmpsb
iret
push
mov
sbb
sub
aam
arpl
outsl
cld
rcrb
pusha
cmp
lret
sbb
outsb
and
stc
mov
adc
push
mov
or
xchg
xor
xchg
mov
sbbb
jbe
incb
in
call
push
mov
xor
pop
and
daa
add
call
movsb
outsb
mov
inc
andb
and
jns
out
ret
adc
pop
push
movsb
add
dec
mulb
push
mov
or
outsl
xchg
jg
mov
mov
pop
xchg
in
inc
call
jb
rol
mov
push
sti
in
icebp
mov
jbe
imul
mov
fucom
dec
or
arpl
jne
sbb
ret
add
incl
push
std
add
cmpb
pop
pop
jp
iret
xchg
jp
mov
and
nop
hlt
xor
call
push
mov
pop
sbb
xor
dec
stc
mov
bound
cwtl
clc
mov
add
insb
or
fldcw
push
mulb
push
imull
cmovbe
add
cmp
adc
aas
adc
sub
mov
les
push
fs
dec
into
push
jmp
repz
lock
mov
mov
addb
outsb
push
enter
rcll
add
jmp
push
or
adc
sti
and
mov
mull
into
shlb
pop
jo
scas
arpl
es
test
cmp
and
addr16
pusha
xchg
mov
popl
add
ds
sbb
insb
push
push
enter
loop
rolb
push
mov
movsl
xchg
hlt
jnp
ret
adc
mov
sahf
fucomp
xor
notl
ret
add
scas
cmp
cmp
cmpsl
pop
shlb
push
push
xchg
push
aam
int3
leave
or
stos
arpl
iret
pushl
icebp
test
or
xchg
and
xchg
mov
aam
adc
addb
testb
push
jmp
lock
rolb
push
mov
rclb
ss
loope
jl
loop
bound
loopne
sbb
jb
jo
pop
xor
pop
push
inc
add
push
lock
mov
mov
dec
test
ds
pop
jnp
xchg
jecxz
push
pop
xchg
nop
sbb
push
inc
out
pop
faddl
idivl
ret
inc
test
test
lahf
rcrb
fimull
push
call
addb
dec
pushl
outsl
ret
repnz
daa
or
mov
or
int
imul
fucomip
and
orb
pusha
pop
mov
jge
push
push
cwtl
jle
mov
jecxz
mov
fistps
jmp
inc
nop
clc
dec
cmp
mov
add
sbb
pop
mov
test
push
xchg
mov
mov
mov
enter
repz
mov
jl
jb
outsl
pop
mov
adcb
mov
ss
xchg
xor
xchg
mov
xchg
loope
or
imul
test
addr16
mov
lds
jecxz
mov
or
cmp
inc
cwtl
imul
push
xchg
test
sub
jg
mov
add
inc
dec
and
das
mov
out
cli
sub
icebp
sbb
adc
div
pop
mov
cmp
jno
push
std
mov
inc
invd
jmp
fiadds
mov
inc
xorb
pop
jecxz,pn
in
push
push
or
adc
adc
and
jl
int
jne
insb
cli
push
loope
rolb
test
or
sbb
dec
pop
add
push
fidivl
lods
movsb
lods
ficoml
cs
jo
jbe
call
fcomip
xchg
xchg
mov
inc
fisttpl
mov
sub
shlb
ja
lahf
push
mov
cmp
push
ret
jp
shlb
pop
and
adc
pusha
mov
xchg
inc
push
cmc
cli
sbb
cmc
fwait
gs
cltd
lods
pop
dec
sbb
shrb
push
and
test
in
mov
mov
adc
add
mov
pop
lahf
xchg
sahf
or
push
fisubrs
filds
repz
inc
insb
dec
lret
aaa
xchg
les
aad
adc
cli
inc
je
xchg
fs
mov
xchg
imul
pop
popf
in
popl
sbb
mov
out
rcrl
addb
mov
mov
jbe
xchg
mov
xlat
hlt
outsl
scas
adc
and
cld
lahf
jo
xchg
fldcw
ljmp
repz
fidivrs
dec
mov
loop
lock
cwtl
pop
jp
mov
sub
ss
push
out
cmp
push
inc
rorl
xor
push
add
and
sub
mov
loope
cmpsl
add
mov
and
xor
shr
dec
inc
daa
sub
xor
ds
xchg
insb
cmp
cli
add
pop
inc
inc
jo
inc
dec
cwtl
das
cmp
scas
dec
lods
cmp
sbb
adc
adc
pop
xorb
es
mov
or
and
or
push
mov
ja
mov
fidivrl
jecxz
ss
sahf
cltd
leave
mov
shll
push
aas
adc
dec
stos
shrb
sbb
loopne
sbb
pushf
adc
or
je
mov
aaa
mov
movsb
jns
sbb
pop
or
lods
ljmp
sub
add
mov
ja
test
ret
das
mov
jg
jge
outsl
es
and
jbe
adc
push
and
sti
add
jp
add
fs
pop
dec
mul
fdivp
mov
lock
adc
outsl
mov
clc
mov
loope
loope
inc
ret
or
inc
push
fadds
xchg
or
lcall
loop
add
sarb
jg
in
outsl
ret
jo
dec
int3
mov
stos
ljmp
popf
adc
push
sbb
loope
jle
jae
stos
cmp
and
je
cmp
ficompl
jg
jb
xor
mov
jl
sarb
push
or
xchg
mov
add
daa
outsb
and
xor
sub
imull
jns
dec
xchg
test
inc
xchg
addb
xor
decl
pusha
rcl
pop
andl
imul
pop
add
pop
inc
adc
enter
lahf
xor
mov
cmp
iret
dec
mov
xchg
jmp
and
mov
push
add
imul
mov
or
and
dec
inc
xchg
out
dec
or
jno
iret
mov
fwait
ljmp
out
xchg
js
and
sbb
sub
ret
or
dec
add
pushf
add
rorl
inc
mov
add
sbb
pop
cmp
mov
sbb
fbld
inc
xchg
stos
cmp
jns
adc
mov
pusha
add
push
iret
xor
orl
push
fstps
outsl
add
add
cmp
jbe
lcall
aas
pushf
push
orl
js
inc
gs
adc
adc
pop
or
movsb
pushf
xchg
fadds
and
cmp
shlb
pop
mov
sbb
and
ds
fisubrs
stc
sbb
jl
jl
pop
ret
pop
mov
sub
vucomisd
popa
add
pop
jo
add
das
cmp
add
lea
sub
sarb
or
jae
or
mov
dec
lcall
inc
or
test
outsb
or
addr16
scas
pop
mov
int
add
loop
fistl
cmc
pop
sbb
or
mov
adcl
sbbb
imul
ss
mov
inc
inc
push
icebp
cmpsl
call
popf
cld
jno
xor
sti
outsb
mov
inc
sbb
or
int3
pop
mov
dec
and
push
cmp
movsb
test
aas
movsb
repz
insl
cli
loop
pop
jbe
lock
inc
insb
call
and
sub
or
ret
jo
vphsubbw
out
je
jb
pop
fisubrs
lret
cs
aas
lock
call
fdivrl
add
out
mov
mov
xor
test
cmp
stos
sub
out
lods
lock
mov
pusha
stc
jbe
popa
shl
aaa
lret
inc
mov
pop
cmp
sub
js
push
data16
add
test
sub
insb
push
sbb
cmp
push
inc
shll
add
repz
test
test
dec
add
hlt
fcmovb
insl
add
xchg
cs
adc
loopne,pn
pop
lret
xor
bound
cli
bound
ss
nop
mov
imul
xor
fs
out
lock
jg
sub
jg
js
adcb
in
mov
inc
sbb
clc
mov
push
ljmp
movb
xchg
mov
inc
or
push
loope
in
call
imul
mov
add
arpl
cli
cli
dec
ljmp
and
mov
ret
pop
or
xor
adc
cld
loope
cmp
add
mov
add
aaa
jg
les
inc
cmp
cld
sbb
mov
jg
pop
sbb
sar
fisubl
jle
pusha
xchg
je
orb
pop
sub
pop
mov
sbb
mov
in
ficoml
dec
xor
imul
sub
rclb
and
rorb
scas
inc
inc
and
inc
push
dec
xor
test
pop
pop
mov
pop
inc
int3
fsubp
adc
into
into
aam
or
repnz
arpl
jo
adc
lods
dec
mov
rcrb
pop
popf
ss
lds
testl
in
jnp
addr16
cmc
das
filds
outsb
sbbb
cmpsl
popf
and
pop
call
jecxz
or
add
or
push
mov
adc
dec
sub
leave
clc
inc
cltd
add
add
ss
xor
push
lods
xorb
jne
adc
es
mov
or
add
and
xor
cmp
wbinvd
adc
ja
or
shll
mov
das
inc
popa
arpl
out
and
sbb
pop
mov
xor
sub
xor
jae
adc
ljmp
sbb
fwait
xchg
xor
out
jno
fildl
test
enter
adc
in
cmp
inc
add
enter
stc
unpcklps
test
add
xchg
cmp
inc
fildll
fucompp
cmpsl
leave
mov
int
dec
mov
xlat
ss
cmc
pusha
insb
outsl
mov
inc
dec
lea
cmp
or
loopne
cmp
hlt
pop
mov
mov
sahf
clc
push
adc
lds
lret
push
sahf
imul
and
mov
mov
sbb
dec
cmpsb
orb
repz
xor
ret
hlt
push
shll
jg
cmc
and
push
xchg
aam
cmp
lods
adc
insb
in
jl
lock
jl
lock
or
mov
mov
push
ljmp
push
stos
fsubl
xor
incl
adc
pop
ret
scas
stos
cmp
sub
xchg
mov
pop
mov
daa
les
push
or
nop
and
jae
pop
jecxz
lret
rolb
fisubs
insb
shl
jg
cmp
pop
ss
stos
mov
adc
pushf
push
loopne
ljmp
pop
add
xchg
aad
rolb
sbb
scas
out
and
call
xor
arpl
and
loope
das
pop
aas
jb
loop
xor
rol
pop
movsb
jae
fmuls
jl
push
cli
ret
fs
stos
inc
stos
xor
cmpsl
inc
mov
aas
dec
ja
xchg
or
or
jle
in
pop
mov
js
jecxz
test
jb
test
fdivs
and
loopne
xor
xchg
ljmp
mov
mov
inc
and
fwait
add
jp
add
adc
stos
pop
dec
das
mov
push
add
icebp
pushf
in
leave
push
rorl
mov
mov
mov
dec
lahf
xor
lret
jle
int
cmp
mov
mov
pop
mov
mov
shlb
vmread
pop
adc
sub
fisubs
cli
sub
inc
lock
push
pop
add
andb
cmp
lock
mov
cli
lcall
add
lods
pop
outsb
mov
adcl
enterw
pusha
loop
jmp
bound
aam
fists
int3
aam
mov
inc
lods
pop
cmp
cmp
das
adc
adc
cld
xlat
cli
push
rol
pop
dec
cmp
out
aas
cmpb
push
jns
pop
or
inc
ret
xor
cmc
icebp
fsts
insl
mov
push
in
pop
sbb
add
test
clc
mull
push
and
int
je
js
cmp
lds
and
inc
push
sbb
scas
sbb
mov
into
shlb
push
pop
sbb
in
aaa
jmp
mov
test
jne
jmp
push
or
jmp
ret
and
mov
and
xor
out
add
push
and
mov
ljmp
jg
sti
fs
popa
xor
or
add
popa
inc
fistps
out
push
pop
pop
in
xor
movsl
enter
jg
jmp
cmpsl
xchg
cmpsb
push
add
adc
stos
nop
cmc
test
imul
mov
cmpsl
loop
enter
push
lock
es
aaa
jg
js
or
xchg
cmp
lret
test
inc
and
loop
mov
push
adc
jg
les
cmc
sub
ret
aam
mov
jnp
and
pop
push
nop
lock
push
xchg
fs
xchg
push
pop
dec
push
and
add
push
stos
repz
test
daa
and
push
movsb
add
mov
adc
add
inc
inc
std
test
std
mov
fwait
add
inc
jae
adc
xchg
or
in
es
mov
sbb
es
pop
adcl
cld
add
xorb
mov
add
pop
pop
jb
xor
mov
xor
andl
sbb
ret
imul
daa
or
aas
jecxz
pop
icebp
stos
outsl
cmpsl
pushf
pushf
addb
dec
cmc
lods
mov
ds
lods
mov
adc
addr16
incb
leave
jne
pop
hlt
lahf
cwtl
clc
inc
ds
dec
push
sub
mov
push
or
insl
clc
cmp
add
cmp
pusha
xor
or
xor
add
pusha
mov
jecxz
jns
imul
cmc
inc
pop
rclb
aam
ss
pop
out
and
sbb
mov
add
pusha
and
add
cmc
sbbl
mov
mov
mov
xor
jp
mov
ss
add
inc
cmc
es
cmp
enter
cmp
out
lock
sub
mov
sub
pop
adc
xchg
clc
test
in
add
sbb
and
mov
lock
cli
shlb
fldl
sbb
mov
cmc
loopne
cmpsb
jbe
add
or
popa
popf
std
ss
leave
sub
js
and
mov
sbb
subb
test
icebp
lea
push
adc
out
sahf
jmp
add
mov
push
cld
repz
in
adc
pusha
sbb
xchg
or
cmc
test
jae
outsb
inc
fwait
mov
dec
in
mov
popf
sbb
dec
aaa
bound
les
cltd
inc
or
fadds
cli
dec
outsl
and
cs
mov
fidivrl
cmp
add
int
dec
add
aas
and
adc
imul
pop
inc
mov
negb
jb
push
lret
add
cli
mov
push
test
jno
mov
pop
dec
pop
cld
pop
ret
cmp
xor
mov
sbb
xchg
inc
inc
mov
out
inc
mov
sbb
pushf
lods
mov
test
push
add
sbb
inc
push
jp
lock
add
pop
jle
sahf
cmc
js
mov
mov
mov
add
dec
mov
cltd
add
xchg
jo
mov
addb
jecxz
repnz
dec
mov
ja
jl
filds
add
lcall
in
out
pop
icebp
push
ret
dec
xchg
jae
mov
sbbb
addl
cli
scas
sbb
xorb
insl
clc
xlat
pushf
mov
aam
lock
jns
dec
movsb
ja
sbb
enter
ljmp
pop
daa
es
pop
add
push
fidivl
call
mov
jns
testb
cwtl
sub
sarl
stos
xor
inc
add
mov
pop
cmp
xor
test
out
xchg
sub
shl
push
inc
push
sbb
push
xchg
nop
sahf
xchg
je
fbstp
lret
roll
lret
pop
xor
cli
push
and
in
enter
inc
or
push
push
mov
in
push
inc
fprem
jne
xchg
jo
adc
mov
fstl
nop
add
sub
mov
xor
loop
out
adc
push
push
sbb
add
int
cs
inc
cli
inc
push
dec
jge
icebp
fists
mov
mov
loope
ficomps
ja
js
pop
jg
loop
insl
cli
imul
push
push
outsb
mov
insb
inc
mov
lea
add
daa
scas
jp
lea
and
push
and
sti
inc
fbstp
nop
shll
adc
xor
inc
dec
popf
sbbb
ljmp
push
mov
nop
lea
and
shll
or
push
movsl
push
aaa
jle
push
jl
sub
sahf
out
mov
mov
jnp
inc
mov
mov
mov
ret
movsl
cmp
shrl
lret
enter
mov
sbb
xchg
add
xchg
add
mov
add
mov
daa
mov
mov
or
cmp
cwtl
sarl
xor
pop
mov
sbb
lock
inc
ja
jne
addr16
jle
push
enter
mov
and
insb
addl
and
mov
push
js
add
sbb
clc
lock
orb
cli
and
mov
jns
pushf
fcmovb
sbb
xor
jb
hlt
aas
mov
jnp
and
das
out
out
pop
popf
loope
repnz
imul
aas
and
cmp
mov
sub
lea
and
lea
mov
outsl
cmpsb
mov
and
add
fisubrl
mov
cmpsb
sub
loope
jmp
ret
ss
int3
xchg
or
nop
and
inc
and
aaa
jp
imul
loope
adc
jle
jmp
mov
cmpl
inc
lds
sbb
punpckhbw
add
add
mov
and
sti
addr16
xchg
mov
sub
test
sbb
jl
incl
lock
dec
das
fdivp
daa
mov
push
mov
in
jmp
or
and
rorl
xchg
rcrl
int
std
add
data16
leave
jmp
inc
in
and
shld
shlb
ret
shr
and
loopne
and
add
dec
mov
pop
mov
clc
dec
int3
movsl
rorl
shrb
mov
add
mov
and
push
mov
mov
fwait
nop
lret
subb
out
push
repz
push
lea
pop
out
jg
xchg
ret
mov
std
mov
repz
aam
lock
pop
push
cmp
adc
pop
test
pop
pusha
bswap
repz
jp
jle
outsb
jbe
call
ret
loop
adc
dec
testb
pusha
mov
daa
pop
cld
popf
out
jnp
inc
loop
jno
outsb
bound
test
mov
adc
add
movsb
out
and
test
push
in
dec
push
mov
add
push
clc
adc
subl
lods
cmpsl
fsubrs
test
dec
push
cmc
faddl
stos
out
enter
fadds
mov
xchg
push
fbstp
add
divl
scas
hlt
test
in
movsb
pop
clc
clc
movsl
inc
jne
mov
loope
push
mov
mov
adc
mov
aaa
cld
mov
and
ficoml
mov
ss
mov
out
mov
jb
jl
mov
sbb
push
mov
in
mov
adcl
add
pushf
mov
loopne
and
mov
sub
sbb
lcall
ds
lahf
xchg
xchg
in
mov
pop
out
mov
mov
push
and
dec
adc
adc
xchg
push
mov
or
jns
xchg
sbb
mov
call
test
mov
clc
jo
add
push
inc
rolb
popf
adc
adc
xorb
mov
ret
dec
add
xchg
cltd
fildl
sbb
pop
es
and
pushf
fwait
scas
cmp
ret
ret
and
mov
movsl
and
xchg
push
pop
cmp
inc
in
nop
pop
imul
and
mov
fwait
push
out
aad
pop
test
cmp
fcoml
or
icebp
lds
mov
nop
fadd
mov
and
nop
push
add
pop
sarb
dec
jno
mov
in
xor
mov
cld
pusha
xchg
movsb
roll
adc
jg
lcall
push
or
mov
lods
clc
jp
jp
lea
enter
cwtl
sub
movsb
cmp
mov
int3
or
jne
dec
into
sbb
or
mov
faddl
inc
mov
mov
add
dec
ret
popa
clc
stos
data16
cld
lret
lahf
add
jo
ret
ds
sbb
xchg
mov
and
sahf
in
mov
stc
dec
pop
pusha
jecxz
dec
imul
sbb
push
aas
cmc
sub
movsl
rcrl
out
mov
cli
mov
add
push
cmp
sub
popf
hlt
ljmp
inc
or
xchg
cmpsb
mov
and
stos
aad
scas
les
jmp
out
addl
mulb
sbb
push
repnz
gs
jp
push
lahf
addr16
fsubrl
push
xchg
clc
xor
imul
jg
sub
mov
mov
push
pop
cld
or
mov
inc
shrb
xor
popf
sub
xor
dec
mull
pop
fsubp
xor
dec
or
ret
push
shll
and
add
int3
leave
push
push
pop
sub
ret
stos
test
inc
fsubrs
xchg
icebp
xor
xchg
pushf
aas
nop
dec
xor
gs
das
push
dec
push
daa
dec
hlt
test
ljmp
test
sahf
xlat
and
call
dec
pop
pop
inc
js
xor
jge
aam
arpl
push
cmp
lret
call
dec
jns
insl
nop
fwait
jbe
incl
xchg
jae
ret
cmc
jo
sub
subb
fisubrs
mov
stos
jmp
in
addb
push
add
and
cmp
stos
dec
cmp
in
mov
rorb
inc
sbb
scas
fldenv
mov
pusha
clc
xchg
sbb
andps
fs
xchg
and
cld
cmp
push
inc
adc
pushf
das
cmp
dec
dec
divb
sub
lock
xor
in
aas
push
push
aam
cmp
mov
shll
pop
cs
lods
fdivl
jp
rorl
cmp
or
pop
and
cmp
vphadddq
sbb
xchg
jle
inc
xchg
gs
movsb
insl
inc
and
test
or
pop
cld
push
idivl
xor
scas
or
pop
xchg
and
sub
icebp
les
popf
scas
repnz
mov
aam
push
les
cld
aad
lret
xor
mov
adc
jno
push
cmpsl
jle
int3
pop
test
leave
mov
fnstcw
loope
lods
sub
cmpsl
dec
fiaddl
sub
inc
sbb
add
jmp
rcrl
add
sbb
push
inc
in
aaa
scas
daa
je
add
in
das
xor
cmp
paddb
and
sub
fdivrs
pop
mov
rcl
clc
lret
push
in
mov
pop
xchg
aaa
jp
jmp
pop
out
test
mov
ret
mov
aas
daa
and
mov
and
sbb
movsl
shll
rclb
repz
jo
ret
pop
std
dec
cld
dec
int3
and
ror
test
cmp
jl
fdivrs
in
ret
xor
mov
sarb
pop
mov
rorb
inc
fdivl
testl
stos
outsb
push
cmp
aaa
add
aad
and
xlat
out
cli
pop
sbb
add
call
xchg
add
out
pop
lock
hlt
ret
fldl
fs
repnz
test
loop
jbe
cmp
pusha
push
push
pop
jae
pop
repnz
dec
jp
and
mov
and
out
pusha
loop
dec
orb
pushf
rorb
sbb
add
fistpl
sub
cli
lea
nop
push
push
push
int3
add
pop
cli
push
rorb
sub
cmp
add
cli
mov
in
and
push
shrl
and
into
fistps
jge
call
pushf
add
sub
fiaddl
sbb
stos
shl
ds
mov
ss
mov
ret
popa
stos
jns
daa
push
cmp
addl
push
xor
arpl
clc
cs
mov
dec
call
add
mov
jg
rol
xor
idivl
add
inc
adc
pop
add
std
push
repnz
scas
sub
ja
pop
out
cmp
cwtl
push
cmp
pop
and
shll
lods
aam
xchg
scas
mov
push
add
and
out
fisubrl
sahf
sbb
and
js
pop
lcall
and
aad
push
andl
rclb
mov
inc
out
popf
jo
mov
jo
iret
aas
pop
cmp
xchg
mov
movb
jp
or
cmp
std
pop
inc
mov
pop
jg
call
daa
fst
pop
test
or
jle
ja
out
and
orl
add
inc
pop
cwtl
clc
xlat
mov
jg
adc
addr16
shl
pop
jae
sub
cltd
cmpsl
int
push
cmp
sbb
dec
andb
jp
adc
fdivl
xor
rorb
ret
mov
add
mov
aam
jge
jl
out
mov
lret
and
lahf
push
sti
std
or
lret
std
cmpl
xchg
adc
std
popa
daa
push
loopne
sub
push
sbb
push
or
stos
mov
setb
aaa
lahf
lcall
gs
mov
lea
xor
idivb
or
and
cld
stos
sub
ds
fnstsw
pop
pop
scas
xchg
std
and
xchg
xorl
inc
dec
aas
jge
icebp
mov
jb
std
ret
jb
cmp
std
xchg
mov
and
add
ljmp
lds
pop
cwtl
jb
push
out
mov
adc
popa
inc
rcrb
ret
nop
pusha
pop
les
adc
cmp
jecxz
push
jg
nopl
pop
inc
push
mov
divb
pop
jo
aam
dec
and
mov
loope
or
dec
bound
dec
cmp
cwtl
aad
xchg
pop
push
dec
push
mov
stc
pop
loop
mov
ds
out
push
adc
aas
push
das
push
gs
mov
dec
sbb
pop
pop
outsb
dec
cltd
jae
sbb
pop
inc
sbb
push
setbe
xor
jge
out
jb
jo
cs
dec
rolb
mov
xchg
push
or
or
xor
xor
jmp
sbb
repnz
inc
push
dec
sbb
scas
jl
inc
xor
test
pop
aaa
mov
out
xchg
pop
mov
iret
pop
push
in
loope
ret
sbb
xor
push
dec
pop
dec
jno
jecxz
cmp
mov
ljmp
iret
outsl
xchg
jae
loopne
jmp
or
push
fists
mov
jp
push
xchg
jo
add
xor
push
in
add
or
movsb
sub
test
jg
mov
rorl
sar
push
divb
scas
shlb
aam
and
and
mov
std
addb
mov
sti
popa
inc
ficomps
pusha
add
das
mov
pop
andb
insl
xchg
js
cmp
xchg
hlt
loope
inc
inc
mov
xor
add
xchg
sbb
inc
pop
adcl
test
fsubrl
mov
insb
inc
adcl
movsl
lock
dec
fidivrs
arpl
mov
or
dec
test
loopne
and
nop
ret
es
in
das
push
outsl
jnp
pop
leave
xchg
sbb
cmp
mov
or
lret
mov
cmp
mov
xchg
frstor
sbb
mov
ffree
pop
cs
xchg
pop
adc
mov
jbe
movsl
pusha
xor
dec
jg
adc
sbb
dec
adc
aam
and
rorl
fwait
pop
mov
jg
xorl
cmc
add
int
in
xor
pusha
push
cmpsb
aad
add
mov
loop
lods
mov
jmp
inc
les
aas
adc
into
insb
dec
pop
adc
xor
jae
mov
sahf
dec
inc
aam
mov
lea
pop
mov
mov
inc
shll
inc
ficompl
data16
iret
stos
popa
jle
jne
xor
jl
int
cmp
das
rol
dec
or
add
push
stc
outsb
addl
adc
sarb
inc
jbe
clc
bound
xchg
lods
std
jne
fdivs
jl
icebp
test
repz
ja
lock
sbb
cmp
mov
rcl
bound
orb
outsb
and
cmc
inc
adcl
jle
loope
or
inc
loope
cmp
roll
jnp,pn
push
jne
mov
cmp
out
push
adc
call
xorl
fs
aam
loop
fmull
rolb
and
xor
aaa
mov
outsl
mov
fistl
int
xor
test
mov
push
and
mov
push
insl
mov
push
xchg
and
mov
cli
jmp
add
push
dec
adc
push
jmp
dec
cld
data16
icebp
daa
enter
or
rorl
shlb
sarl
and
js
or
dec
pusha
mov
jg
testl
std
inc
test
mov
ds
pop
push
jns
xchg
xor
inc
and
mov
sarl
fildl
and
fidivrs
fidivs
jnp
adc
inc
pusha
int3
push
dec
inc
cli
add
jns
mov
cmc
iret
xchg
and
pusha
clc
hlt
inc
popa
sbb
sub
repnz
xchg
pop
fmuls
aas
shrb
cmp
imul
popf
push
aam
pop
xchg
outsb
hlt
popa
jne
and
add
cld
cltd
inc
aaa
cmp
push
xchg
mov
scas
and
inc
sub
adc
xchg
repz
out
stc
inc
inc
push
insb
and
mov
add
jae
dec
add
sbb
inc
jno
push
lods
int3
pand
push
and
xor
roll
or
push
pushl
dec
loop
idivb
xor
adc
icebp
pushf
add
outsb
mov
pop
bound
shrb
ljmp
mov
mov
lret
movsl
adc
adc
ss
psubd
mov
shll
jecxz
push
or
ret
adc
jns
js
mov
cmc
ds
rcll
aam
jmp
lds
mov
into
lds
push
insb
jb
cmp
lock
cmp
inc
jge
xchg
scas
mov
pop
scas
mull
mov
movsl
pshufw
inc
pop
pop
push
inc
imul
in
and
jns
mov
jge
lret
xlat
mov
cld
lahf
adc
idivl
push
mov
xchg
pushf
mov
aam
mov
and
pop
sbb
rol
jp
test
clc
xor
inc
or
aam
hlt
in
rolb
test
mov
mov
push
jns
add
ss
lahf
inc
decl
and
mov
decl
fiadds
xor
xchg
clc
mov
jg
ret
push
and
sahf
pushf
jg
push
adc
andl
stc
lea
pop
inc
sbb
into
and
in
inc
cmp
cmp
shl
jmp
sbb
pushf
push
shrb
je
aas
test
adc
push
push
cli
fists
push
popa
adc
mov
inc
fwait
pusha
inc
jo
je
loop
shlb
pop
and
xchg
and
inc
sti
decl
xor
inc
mov
mov
mov
loope
jns
cmp
sub
leave
ret
lock
sub
test
in
insl
movsb
cld
dec
call
xchg
stos
xchg
push
int3
stc
push
ds
xchg
mov
gs
std
cmp
rorl
arpl
pop
ficoml
jle
dec
iret
xchg
scas
outsl
stos
inc
fwait
jns
jp
xchg
mov
push
in
fsubrp
lcall
pop
ss
int
xchg
xor
in
fiaddl
jle
xchg
arpl
mov
fistpll
rol
xchg
add
mov
nop
jle
mov
sbb
sbb
fistps
and
and
lds
jns
fdivs
push
xchg
mov
cmc
inc
bound
cwtl
inc
mov
loopne
pop
in
or
xchg
cmp
add
cmp
dec
jbe
cmpsb
test
jg
das
jne
jecxz
aas
js
sub
and
lock
icebp
aaa
cltd
push
nop
scas
cld
imul
inc
cmp
mov
into
test
shrb
xor
ror
mov
std
push
loopne
or
jbe
lods
out
rcrl
pop
sub
push
hlt
jnp
pop
inc
mov
mov
lahf
icebp
movsb
bound
mov
loop
lods
inc
cmp
or
push
sbb
subb
rolb
inc
mov
sbb
add
inc
xlat
aad
jmp
loopne
das
ss
sbb
mov
sti
je
jge
in
cs
les
lcall
out
pusha
pop
jnp
cltd
lds
cmpsb
or
addr16
fildl
jbe
jg
into
sbb
xchg
xor
test
add
sbb
mov
xor
jle
loope
cmc
or
adc
mov
mov
mov
push
sbbb
je
sub
pop
into
jmp
or
lods
cli
and
lret
jns
mov
sti
pop
adc
test
add
xchg
cltd
dec
ret
loop
mov
mov
and
mov
mov
sti
aaa
dec
iret
ja
hlt
lea
mov
mov
jg
les
xchg
and
imul
outsl
mov
jl
mov
inc
or
rorl
mulb
test
sub
pop
xor
jo
cltd
popa
push
mov
mov
lret
orb
lock
lds
shll
repnz
cmpb
clc
ja
cmp
fistl
clc
out
hlt
mov
nop
sbb
xchg
incb
mov
pop
xor
faddl
mov
push
test
in
xchg
daa
scas
cmp
or
cmpsl
add
outsl
rcrb
testb
sbb
int
cmp
lret
and
pop
mov
decl
dec
inc
mov
mov
jmp
insl
dec
or
dec
push
dec
pop
cmpsb
test
outsl
inc
andb
jl
decl
stos
dec
mov
jge
orl
add
js
adc
pop
ljmp
inc
xor
push
hlt
pop
fcoms
aas
push
mov
cmpsb
adc
in
push
dec
jp
scas
pop
adc
and
adc
shlb
enter
clc
pop
add
push
push
cli
mov
and
inc
push
incl
shlb
shlb
pop
ret
and
xor
call
jno
cli
mov
sub
enter
sub
push
out
sub
or
push
les
popf
loopne
fisubrl
loop
mov
pop
ret
loop
jecxz
jbe
jns
in
testb
sbb
push
and
out
sbb
outsl
rclb
add
jmp
adc
cmc
mov
push
cs
xor
and
popa
and
je
pxor
pusha
test
leave
imul
data16
aas
aaa
jle
or
xlat
js
and
or
stc
pop
ret
dec
jmp
adc
mov
add
ret
and
cmp
sbb
pop
in
xor
imul
cli
scas
sub
addb
mov
inc
jmp
andl
js
push
cli
sbb
mov
fs
mov
push
sbb
cmpsb
js
inc
cltd
cmpsl
mov
and
cwtl
bound
ljmp
add
and
inc
xchg
adc
lock
pop
pop
inc
jecxz
cmp
pushf
cmp
jmp
xchg
push
and
lret
data16
and
rcrb
popf
and
dec
js
adc
rolb
ret
add
pop
mov
add
pop
push
pop
or
movsb
mov
js
inc
mov
outsl
movsb
cmc
xor
je
pop
sbb
rorl
xor
in
rolb
mov
push
xchg
mov
les
into
sub
loope
test
mov
xchg
das
push
ds
mov
xchg
mov
jae
int
ret
inc
test
shl
cmpsl
frstor
or
xchg
and
dec
das
sbbb
or
lret
push
mov
mov
rcll
jg
gs
jnp
pop
jg
and
pop
push
ds
or
pop
lock
das
cpuid
mov
jle
add
jo
mov
insb
cmp
jb
js
pop
fwait
jmp
shlb
aaa
sbb
sahf
les
arpl
and
push
fidivrs
iret
and
std
sbb
xor
pop
cmp
cmp
fbstp
jl
stc
pop
test
or
dec
mov
and
pop
and
xor
or
mov
das
sub
lret
arpl
cli
aad
jae
cltd
and
call
js
push
push
push
adc
ja
ds
pop
inc
mov
xor
insb
sar
pop
pop
push
cmp
xchg
cmp
fdivr
hlt
into
sub
pop
andb
test
or
in
inc
xchg
mov
adc
mov
ja
add
or
dec
jle
into
mov
xor
ret
les
stos
jg
fldl
inc
xchg
insl
test
mov
cltd
cmpsb
mov
inc
mov
push
ss
mov
pop
test
sbb
xchg
int3
rorl
jne
and
xor
push
ja
cwtl
lock
fwait
stos
call
push
pusha
sbb
movsl
mov
cld
dec
clc
outsl
dec
adc
fs
push
mov
adc
movsb
icebp
push
sahf
sub
sahf
push
pop
mov
movups
and
jbe
sub
jp
test
add
add
pusha
in
insl
xor
mov
orb
lds
outsl
mov
dec
ja
push
xor
cmp
and
mov
movsl
add
pop
loop
gs
imul
cli
outsl
pop
pushl
nop
or
das
cli
ja
jmp
daa
or
adc
sbbl
and
lahf
cwtl
push
lea
dec
imul
inc
jne
pop
mov
jmp
inc
cli
inc
out
sub
inc
mull
hlt
jb
mov
dec
add
xor
sbb
pop
ss
popa
sbb
aas
ljmp
inc
xchg
test
sbb
push
inc
pop
jo
pop
nop
arpl
sbb
cmp
mov
push
fdivp
sub
jo
sbb
adc
in
pop
mov
test
cld
andl
and
mov
sub
cld
push
rolb
ret
outsb
dec
push
mov
out
pop
jl
je
out
mov
xchg
add
cmc
jecxz
out
popl
inc
rolb
inc
lods
dec
std
xchg
nop
call
pop
sbb
sbb
push
pop
or
arpl
pushf
mov
mov
xchg
mov
and
sub
add
aaa
sbb
stc
xor
je
cmpsl
imul
push
jmp
iret
mov
fwait
push
mov
sub
push
sub
mov
ss
scas
addr16
xchg
ljmp
add
negb
daa
sti
lahf
loope
sub
push
push
std
popf
adc
pusha
sbb
or
loop
call
cs
mov
imul
daa
icebp
popa
mov
push
sbb
subb
xchg
add
scas
incl
dec
mov
nop
jmp
lret
xchg
jns
fidivl
pop
pop
xor
lahf
cmpsb
push
pop
stos
add
jnp
xchg
push
movsb
mov
sub
sbb
dec
ds
mov
sbb
leave
loopne
jge
cmp
sbb
inc
or
mov
or
ja
push
idiv
fisubrs
jno
lcall
add
loop
popa
add
push
negb
add
inc
push
add
incb
in
or
dec
add
outsb
test
lock
or
shll
lods
mov
add
xchg
pop
mov
pop
or
das
sti
aaa
cmp
adc
outsb
gs
xchg
mov
mov
lea
mov
xchg
std
faddp
jne
ja
pop
inc
lds
shrb
sarb
adc
fdiv
mov
lock
mov
push
lods
nop
mov
cmc
pop
gs
cs
and
outsl
mov
ljmp
adc
andl
loopne
jb
pop
lock
push
sub
sarb
mov
add
add
jne
and
pop
mov
adc
mov
ljmp
outsb
cli
daa
je
shrb
les
nop
mov
push
and
jmp
add
psadbw
sub
add
add
pop
mov
out
call
hlt
and
push
stc
dec
inc
inc
mov
cmp
pusha
and
or
dec
jg
loop
je
mov
ret
cmp
jle
adc
inc
aaa
jb
inc
jecxz
mov
and
push
mov
cmpsb
repz
xchg
push
in
nop
or
incb
mov
sbb
sahf
push
cld
cwtl
inc
mov
packssdw
push
mov
enter
add
lcall
jbe
push
adc
aaa
les
push
lods
scas
lret
adc
inc
scas
scas
clc
push
lds
pop
sbb
cmp
or
xor
add
inc
sti
out
add
inc
fsubrl
mov
xor
and
sub
inc
push
add
cmpl
sarl
cmp
xchg
lock
push
psubsw
pop
pop
and
or
adc
enter
loopne
and
jne
xor
adc
mov
pop
xchg
dec
int3
add
pusha
fdivp
sahf
icebp
fwait
movsl
pop
shll
mov
frstor
pushf
cmp
inc
dec
scas
test
pusha
insb
xorb
fidivs
test
cli
push
repnz
mov
push
and
pop
enter
mov
xor
lods
and
and
jo
scas
out
xor
ds
pop
je
xchg
cmp
push
and
xlat
push
cmpsb
xchg
xor
mov
xor
inc
mov
sbb
pop
fidivl
adc
xchg
js
inc
sub
lods
outsl
inc
add
out
pop
pop
adc
push
stos
orps
adc
or
jl
iret
aas
inc
lock
stos
int3
pmulhuw
into
inc
mov
mov
imull
xchg
mov
jno
mov
movsl
xchg
xchg
stos
call
xor
iret
inc
pop
jne
xchg
icebp
inc
add
jbe
and
mov
inc
shll
xor
mov
sbb
mov
sbb
xchg
lods
fcomp
out
inc
ficompl
sub
call
mul
mov
test
pusha
lret
mov
cmpsb
andl
pop
and
mulb
sbb
adc
add
fcom
push
xor
call
ja
scas
mov
cmp
pusha
data16
push
rorb
mov
lock
aas
sbb
js
jne
sbb
push
push
adc
xchg
and
mov
xor
pushf
nop
pop
test
fstpt
fadds
rcl
outsl
aam
pop
fisttps
pop
clc
lahf
inc
mov
insb
arpl
leave
xor
clc
push
adc
dec
cmp
sbb
mov
cwtl
sub
call
shl
xor
cmpsb
mov
shrb
lcall
xor
sub
fstpt
mov
inc
dec
jg
xchg
dec
ljmp
arpl
push
jg
call
in
stos
loopne
lahf
inc
jmp
mov
loope
pop
out
or
lods
mov
jnp
out
mov
push
shl
cmpsl
xor
add
aad
sub
add
or
pop
pop
mov
or
shl
inc
test
xor
push
std
test
and
ljmp
pusha
pushf
adc
push
adc
test
or
fwait
jmp
and
andl
add
jge
sub
or
lock
cltd
stos
or
popf
xor
inc
jg
dec
in
mov
enter
outsl
fcmove
popa
lret
popa
xchg
mov
loopne
data16
mov
jl
mov
or
js
sbb
aas
sub
sar
fucomp
xchg
fwait
test
dec
cltd
xchg
out
loop
cld
mov
adc
rcrb
mov
nop
js
dec
fcompl
scas
push
add
lds
inc
push
xchg
fs
popa
jmp
pushf
cmpsb
fcomp
and
fcomps
xor
shlb
push
xchg
lock
jl
inc
daa
dec
adc
ja
add
es
sub
mov
pop
add
sbb
lea
mov
cmpl
or
mov
cld
mov
pop
sub
jb
xchg
ret
aas
dec
push
idivl
sub
je
add
mov
dec
adc
cmpsl
add
pop
push
pop
add
fxam
sub
mov
or
fcoml
repnz
rorb
cmp
aad
mov
sbb
sub
aam
jo
test
push
popa
xor
mov
out
mov
pop
fidivrs
and
lock
xchg
je
sbb
mov
xchg
decl
pop
sbb
nop
shll
ret
mov
mov
test
and
sbb
inc
sahf
push
xchg
push
mov
add
xor
dec
mov
adc
je
mov
or
inc
dec
ret
filds
jp
sbb
sbb
cmc
inc
jl
push
or
cli
pop
andb
xchg
xor
ret
dec
arpl
jge
add
pusha
sub
jecxz
rorb
int
xchg
inc
mov
pop
jl
inc
jnp
pushf
cs
cmpsb
ss
or
cli
int
push
xor
in
xor
out
cmp
ss
and
pop
jecxz
mov
mov
jne
dec
push
and
outsl
repz
mov
sub
inc
mov
pop
jl
dec
xchg
cmp
es
subb
out
dec
jl
cmpl
sbb
push
rcrb
cli
mov
add
pop
inc
push
ss
or
mov
mov
push
in
xor
mov
call
xor
push
aas
and
cmc
insl
sarl
and
arpl
mov
inc
movsb
push
push
mov
ret
test
jl
mov
mov
hlt
and
in
mov
or
ret
xchg
push
jl
dec
mov
or
mov
inc
dec
push
call
push
sub
pop
push
lds
pop
xchg
fwait
and
sub
hlt
lcall
xchg
push
sub
sub
bound
fwait
aas
les
outsb
outsb
gs
jne
out
xchg
ret
cmpl
or
add
add
xorb
incl
lock
adc
shr
repz
cmc
push
in
subb
pushf
xlat
mov
cmp
cli
xchg
push
add
gs
mov
xchg
mov
bound
pusha
jl
fimull
sbb
cmp
adc
mov
leave
inc
sub
cmp
add
ret
jbe
or
fstl
adc
mov
ja
hlt
ficoms
sbb
inc
mov
lahf
pop
add
das
push
xor
fidivl
les
mov
cli
hlt
in
ss
fildll
psubusb
arpl
inc
push
movsl
add
xor
rcl
pop
xchg
push
mov
cwtl
ljmp
add
orb
jns
adc
or
xchg
push
outsl
dec
dec
insw
mov
cli
pop
mov
xor
mov
and
pusha
fdiv
and
xchg
out
pop
inc
nop
rclb
clc
rcl
push
adc
inc
in
lret
xchg
aam
ds
movsb
scas
cmp
dec
lahf
pop
mov
mov
add
fwait
pop
and
push
sbb
mov
add
cmpsb
out
std
xchg
xchg
das
leave
cmp
push
inc
mov
sbbl
xchg
push
lret
sbb
sub
sbb
cmp
adc
sbb
or
andl
sarb
jle
mov
lea
jp
int3
std
sbb
dec
push
loop
mov
mov
daa
jmp
xor
repz
les
mov
shrb
pop
jge
repz
nop
bound
mov
or
mov
imul
jmp
pop
icebp
jno
fwait
or
jl
mov
sub
jp
pop
inc
aam
nop
mov
popa
jo
faddl
cwtl
aas
xor
fimuls
mulb
cmp
mov
out
std
and
inc
mov
dec
ret
adc
mov
hlt
cmp
jg
dec
dec
pop
shl
sub
loop
popa
aaa
lret
cld
sub
les
xor
or
adc
and
shl
cmpsb
add
in
idiv
pcmpgtb
xor
cltd
mov
push
cmc
add
call
rorb
and
adc
mov
jb
push
mov
cmp
scas
mov
ror
fidivrl
mov
out
cmc
wbinvd
pop
xchg
xchg
cltd
loop
clc
xchg
xor
shll
push
inc
cmpsl
fldcw
and
mov
cmp
or
lock
push
int
adc
push
sbb
rclb
ljmp
clc
ds
jo
ljmp
mov
pop
mov
push
and
enter
mov
jne
jne
mov
push
outsl
gs
or
movsl
inc
lds
add
adc
adc
out
and
sub
mov
inc
mov
cmpsl
inc
mov
pop
fnstcw
pop
push
lds
fisubrs
cmp
push
fidivrl
repz
loope
out
jo
lock
xor
lahf
jecxz
outsl
decl
hlt
dec
or
sbb
stos
repz
or
dec
jecxz
sahf
in
insb
addr16
dec
pop
scas
mov
xchg
outsb
sarb
ret
daa
lods
int3
negb
or
jae
lock
push
inc
orb
push
out
movsb
push
mov
jle
xor
add
mov
mov
and
in
cld
push
inc
ss
stc
mov
decb
jp
sbbb
in
je
inc
andb
loop
mov
cs
xor
and
ljmp
inc
sub
fstl
cmp
lahf
dec
or
mov
xchg
mov
jmp
cmp
stc
cwtl
movsb
es
cmp
pop
adc
daa
mov
xor
rol
call
call
push
cli
jp
or
inc
or
mov
mov
mov
fcmovu
lods
adc
fs
inc
gs
dec
jo
jp
and
icebp
pusha
cmpsb
lods
test
dec
decl
jmp
xchg
jo
sbb
push
movsb
imul
sub
push
sbb
sub
jne
je
and
xchg
push
inc
adc
mov
inc
jmp
add
lea
pop
es
adc
pop
dec
out
aam
mov
or
out
fistpll
gs
dec
les
loopne
cmp
hlt
out
cli
imul
cs
push
mov
xchg
fidivrs
data16
test
push
jo
jp
mov
add
xlat
sbb
push
outsl
pushf
les
xchg
lods
jg
ret
mov
or
sub
fs
ret
rolb
icebp
cmp
and
ds
in
outsb
test
jg
fs
sbb
mov
pusha
cs
daa
push
insl
and
shl
rolb
insl
sbb
jp
xchg
sbb
xchg
xor
pop
adc
imull
je
jns
sbb
adc
pusha
mov
pop
jo
jecxz
cli
loopne
sub
fidivl
pop
push
push
add
sub
cmp
jle
std
gs
ficoml
push
xor
sub
out
dec
inc
mov
inc
stos
xrelease
cld
push
aad
stos
in
insb
inc
pop
call
mov
or
mov
push
mov
nop
jge
test
insl
mov
rcrb
das
and
mov
dec
and
mov
ds
mov
adc
das
hlt
cmp
xchg
aam
dec
in
jo
cltd
xor
mov
aam
push
scas
loope
scas
or
sub
pop
adc
or
sbb
fsubs
cmp
sub
pusha
add
test
loop
aam
inc
mov
insl
mov
rcrb
push
fsubrp
sbb
inc
inc
clc
mov
shlb
movsb
aam
sarl
push
sti
xchg
cltd
jo
mov
pop
imul
push
scas
fadd
mov
mov
jno
inc
or
mov
xlat
lcall
sub
fsubr
mov
repnz
pop
lahf
lcall
pop
adc
dec
out
adc
sub
fadd
pop
loop
push
or
ds
sbb
cld
lcall
pushf
dec
inc
xlat
mov
subb
jo
cmpb
into
mov
push
fbld
mov
inc
sub
outsl
ret
adc
imul
push
or
sub
ffree
pop
push
lods
call
mov
dec
jg
push
shlb
and
les
repnz
bound
leave
ret
dec
push
ds
mov
add
adc
pop
lods
xchg
loop
adc
into
inc
sbb
outsl
pop
inc
mov
pop
stos
push
cmc
adc
xor
enter
arpl
loopne
or
ds
inc
and
or
and
cwtl
and
in
xchg
xchg
jl
sarb
testl
xorl
dec
test
call
fidivrl
clc
pop
notb
mov
cmp
jge
loop
pop
xor
inc
cmp
js
sub
sbb
pop
xchg
loopne
jb
cltd
mov
add
and
pop
inc
daa
testb
mov
inc
pushf
jno
inc
pop
push
lds
pop
jle
cmpsl
push
jmp
adc
and
imul
loope
adc
dec
int
push
hlt
push
jl
into
push
loop
xchg
pushf
ret
jle
ljmp
lcall
inc
loopne
mov
fcomps
test
xor
mov
jecxz
ds
push
cmp
dec
pop
push
mov
dec
js
or
xlat
loopne
xchg
add
adc
push
mov
add
lea
lcall
jp
shll
adcb
or
push
push
outsb
in
jns
or
cmp
pop
andl
mov
lahf
int3
cmc
adc
push
cli
ret
xchg
sub
adc
adc
push
js
inc
add
imul
lods
jne
aas
push
mov
cmp
xchg
or
mov
les
cli
lahf
movsb
dec
loope
xlat
mov
loopne
loop
sarb
out
sbb
add
addl
add
and
fdivrs
adc
loop
pop
pop
jae
shll
and
push
mov
sbb
sbb
flds
add
add
sbb
push
inc
xor
int
int3
cmp
scas
pop
ficoml
andl
mov
sub
jo
lock
sbb
dec
inc
and
adc
xor
or
lods
imul
adc
aaa
jbe
or
dec
mov
add
repz
mov
mov
fmul
mov
xor
mov
jecxz
cld
add
sbb
and
add
adc
popf
ds
cmp
decl
test
inc
add
les
repnz
int
test
dec
push
call
mov
pop
jae
xchg
mov
aas
movsb
lods
push
adc
ja
ja
pop
loop
stos
shll
ds
pop
rclb
loop
xchg
sbb
jbe
lret
mov
push
jns
or
mov
out
fsubl
outsl
popf
or
xchg
push
mov
cli
lea
jo
hlt
push
arpl
adc
pop
clc
mov
jno
add
scas
mov
xorb
lods
sbb
lods
popf
adc
sbb
flds
mov
pop
loop
dec
dec
sbb
pop
daa
or
out
dec
std
insb
jmp
loope
lock
ret
cltd
bound
pop
out
sbb
push
pop
add
shll
and
cmp
sub
adc
cmp
sbb
pop
xchg
or
push
in
cli
cmp
sbb
imul
adc
iret
jnp
jle
mov
inc
jo
pop
cmp
test
scas
add
imul
cld
aaa
ret
es
into
mov
add
std
mov
test
pop
ds
jl
imul
push
fldenv
or
into
xchg
xor
sub
dec
pusha
jmp
and
outsl
mov
clc
lods
out
mov
mov
jge
in
mov
cmp
mov
rclb
xor
lcall
imul
enter
xchg
shlb
std
mov
jne
mov
testb
cmp
lds
cwtl
xchg
lock
rorl
test
stos
xorb
or
mov
cmp
jbe
xlat
sbb
popf
push
mov
xchg
andb
iret
mov
jno
dec
push
fwait
and
cli
cmc
add
mov
pop
pop
cli
rorb
adc
xlat
xchg
jo
jb
mov
jnp
mov
cltd
ret
or
std
ror
imul
push
je
out
movzbl
shlb
out
mov
data16
clc
icebp
or
iret
clc
loop
sarl
cmpsb
mov
push
stos
rcrl
mov
cmp
jo
les
adc
adc
js
movsb
call
in
test
ljmp
xor
mov
icebp
sbb
out
inc
ja
xchg
loop
cmpsl
or
mov
mov
dec
adc
sub
ja
sub
and
xchg
cltd
lock
test
std
xlat
cmc
stos
xor
cld
mov
add
pop
ds
arpl
int
lock
inc
cmp
movsl
jno
insl
imul
sbb
or
or
adc
shlb
xchg
sub
jns
outsb
inc
test
clc
and
sbb
stc
lds
mov
push
into
push
push
jge
loop
cmp
cld
sarl
lret
jb
test
pop
arpl
inc
inc
fldl
mov
test
xchg
push
dec
call
nop
ret
xor
add
jp
stos
cmpsb
jl
push
and
sbb
aaa
xor
dec
push
in
hlt
cmpsl
cmpsb
bound
cmc
or
dec
jmp
or
pop
sbb
jae
rol
aaa
push
mov
mov
mov
dec
mov
or
add
inc
inc
repnz
movsl
xor
adc
out
ljmp
cmpsl
sub
call
xchg
fsubrs
mov
clc
scas
mov
adc
cmp
test
fwait
popa
mov
or
or
pop
testb
push
in
adc
cld
bound
lcall
mov
test
cwtl
or
leave
pop
jno
out
cwtl
lock
xlat
jg
inc
cwtl
dec
push
or
jle
scas
cmp
call
xchg
cmp
ret
mov
mov
test
xchg
inc
ret
mov
jo
inc
lcall
jle
mov
mov
xchg
xchg
popf
test
push
lods
sub
popa
movsb
pop
scas
cmpb
xor
push
cmpsl
div
sbb
es
sub
cmp
fdivrp
in
bound
in
lock
cmp
cli
mov
addl
xchg
in
adc
ret
mov
cmp
pop
outsb
pop
adc
cmp
sbb
pop
rcll
mov
pushf
adc
mov
in
mov
xor
addl
xchg
inc
fisttpll
xlat
rclb
xchg
mov
dec
fiaddl
mov
sub
xchg
add
ret
shrl
in
push
in
leave
xchg
push
sahf
icebp
adc
stc
ffreep
pushf
xor
ficompl
ja
inc
mov
or
lret
add
lea
nop
scas
call
adc
mov
arpl
pop
push
clc
adc
rorb
mov
call
call
push
ret
addr16
lds
daa
loopne
mov
mov
cmp
test
xor
sahf
inc
fs
stos
inc
es
in
mov
aam
jmp
inc
push
jmp
mov
arpl
jmp
sbbb
sbb
mov
dec
lods
or
mov
xchg
xchg
dec
lret
mov
mov
test
jb
rclw
sub
fists
rolb
je
pop
cmp
mov
insl
mull
xchg
and
int
mov
clc
push
fidivrl
xchg
out
imul
cmp
xchg
xlat
jo
mov
iret
mov
movl
popa
dec
cmpsb
fdivrl
jb
jns
cmp
loopne
add
mov
sbb
xchg
pop
pusha
movsb
xor
dec
sbb
jo
dec
sbb
js
movsb
mov
jns
je
lahf
inc
dec
lods
push
mov
xor
pop
arpl
sbb
pop
adc
in
xlat
jo
clc
js
inc
push
les
mov
mov
adc
mov
aam
inc
popl
jge
loope
jp
cmp
dec
mov
xor
ja
lahf
pop
jge
push
pop
mov
mov
add
fsubrl
jmp
push
test
daa
add
pusha
sub
loopne
test
push
adc
pop
clc
loope
fbld
aas
and
cmp
fcompl
sub
jle
pop
mov
stos
inc
jne
and
adc
mov
movsb
xchg
aam
pop
or
mov
and
lods
pop
mov
sub
jl
pop
mov
leave
sbbl
and
adc
ds
icebp
sub
inc
dec
pop
iret
cmpsb
or
lock
jbe
mov
call
mov
jo
orb
and
inc
imul
aad
outsl
xor
jae
and
out
sub
ret
psrld
lcall
clc
rcll
cmp
and
pop
dec
sahf
imul
inc
lret
push
mov
or
notb
mov
mov
add
push
in
fistpll
fnstsw
das
mov
js
repz
jnp
jbe
cmp
dec
lds
leave
inc
and
mov
xor
dec
inc
adc
push
push
movsl
popa
push
das
push
clc
xorl
test
pop
loope
cmpsl
pop
cmpsb
mov
in
sbb
imul
clc
mov
cmp
inc
and
loop
push
add
jl
cmp
shl
cmpsl
push
xor
sub
jle
or
or
push
or
or
sbb
or
cli
sahf
mov
lods
sub
add
lret
lock
inc
scas
pop
xor
xor
cmp
push
iret
adc
loopne
mov
mov
sbb
push
fsubrl
inc
inc
mov
pop
lock
idivl
dec
jmp
fidivrl
pop
hlt
lds
jl
dec
insb
popa
or
test
mov
push
add
jns
xchg
std
push
sbb
mov
sti
stos
adc
jbe
neg
or
hlt
push
sbb
jns
out
es
sarb
imul
add
xchg
testl
add
dec
nop
ret
adcl
mov
push
test
shr
clc
lock
bound
stos
mov
adc
mov
outsb
ss
push
mov
gs
cmp
push
repnz
add
xor
lret
loop
ret
cmp
test
stc
inc
or
pop
jbe
jb
add
or
cltd
cmp
shll
push
or
dec
je
aas
ret
test
mov
in
fldl
rclb
inc
xor
mov
lcall
outsl
mov
pop
imulb
pop
add
mov
add
repnz
mov
jbe
inc
push
fisubl
xchg
xchg
in
mov
insl
cmpsl
mov
mov
clc
addb
jns
cmc
out
xchg
pushf
pop
enter
sub
and
add
andb
dec
mov
je
cltd
outsb
lods
jecxz
sub
jl
sub
rclb
mov
and
roll
dec
push
adc
out
mov
push
call
clc
mov
mov
fld
sbb
pop
lea
movsl
pop
sbb
adc
sbb
scas
mov
pop
lods
cld
jmp
movsl
add
les
addr16
inc
mov
ret
lods
xchg
rolb
outsl
sti
shrl
js
mov
or
push
les
hlt
inc
mov
int
xor
inc
das
jns
imul
adc
mov
push
mov
sbb
ret
adc
pusha
fsubrs
ds
mov
jp
push
aam
or
add
ljmp
dec
cmp
subb
mov
shll
mov
xor
lods
jecxz
stc
or
adc
cmpsl
arpl
and
or
call
lret
pop
add
xchg
loopne
or
jecxz
imul
xor
arpl
sub
roll
xchg
cltd
rol
fcoms
xchg
mov
arpl
mov
sahf
add
lcall
hlt
adcb
in
imul
clc
inc
daa
fldcw
jl
scas
in
out
cmc
or
aas
sbb
aas
jl
iret
enter
and
adc
shll
mov
mov
and
cmpsl
int3
testl
push
sbb
push
es
dec
daa
jbe
hlt
xorl
cltd
mov
mov
push
jns
sub
xchg
inc
pop
adc
aaa
pushf
sbb
add
push
addl
push
xor
xlat
pop
std
shl
test
jmp
adcb
mov
xchg
subl
lods
push
paddw
sub
dec
cli
lds
or
sti
in
aad
mov
aad
or
stc
push
mov
or
push
xchg
jo
sbb
or
cmp
stos
js
xchg
xor
scas
stc
out
push
xor
xchg
cmp
mov
fmul
ret
inc
in
lods
mov
je
sbb
push
xchg
add
mov
andb
lret
mov
mov
add
stc
push
cmp
ss
cmpl
andb
cmc
or
rorb
mov
cli
add
in
fmul
or
cwtl
mov
test
orl
mov
repz
mov
sub
cmp
cmc
out
jnp
mov
jb
or
xchg
mov
les
mov
xchg
cmpb
mov
mov
cld
push
xchg
clc
push
insb
loope
les
mov
in
lret
shll
fs
adc
dec
lods
xchg
jecxz
add
sbb
in
jbe
or
std
jae
in
cmp
bound
xchg
aaa
adc
jns
popf
dec
mov
scas
mov
mov
fwait
mov
adc
popa
jecxz
aam
adc
sbb
sbb
jb
icebp
fstl
adc
gs
adc
mov
cmpsb
dec
mov
push
adc
sahf
stos
add
iret
punpckhdq
repz
ljmp
sysret
mov
xchg
pop
sbb
jmp
jne
icebp
pop
cmpsb
pminsw
pop
add
sbbl
orb
call
scas
dec
xchg
xor
rclb
mov
ss
rol
inc
dec
gs
aam
clc
cmpsl
sub
jl
sbb
sub
ds
xor
out
xlat
shrl
jnp
inc
mov
dec
aas
icebp
insb
movsl
and
adc
and
addl
jno
push
adc
sub
loop
pop
shl
mov
cltd
fisttpl
shr
ss
cld
lretw
adc
test
negb
testl
sbb
xchg
push
movsl
enter
cmpsb
sbb
test
push
sub
dec
mov
xchg
sbb
inc
js
in
xor
in
jg
aam
arpl
fldenv
jmp
mov
insl
inc
stos
and
pusha
sbb
pop
jno
add
int3
popf
pop
mov
push
xlat
arpl
pop
arpl
rcrl
mov
int
stos
mov
jno
pop
adc
icebp
mov
repnz
jp
inc
loope
sbb
das
xchg
cld
inc
rcrb
pop
xor
lods
push
sbb
xchg
xchg
or
fsubs
cmp
pop
in
or
out
mov
push
adc
jg
pop
stc
cmp
out
and
ret
mov
pop
mov
cltd
pop
push
daa
xchg
mov
cs
dec
call
shl
add
pop
inc
pop
sbb
call
js
and
mov
loope
in
outsb
push
adc
aad
sub
dec
pushf
inc
add
jo
or
sbb
fs
jmp
flds
and
push
or
fs
call
dec
pusha
adc
in
aam
sbb
arpl
in
and
jne
scas
sbb
mov
dec
test
aas
jno
std
cmp
cmp
mov
daa
imul
sbb
movsb
jno
xchg
sub
scas
jae
enter
adc
dec
shll
lcall
jbe
ret
out
call
xchg
adc
jo
mov
movsl
pop
mov
xor
sbb
jmp
movsb
xchg
mov
cmp
and
inc
leave
mov
cmpsl
loop
sbb
lds
daa
push
dec
icebp
jae
mov
test
lcall
push
xlat
sub
xchg
push
movsl
add
cmc
out
push
dec
daa
bound
scas
mov
addl
cs
cmp
bound
sbb
mov
pop
sbb
push
mov
movsb
adc
test
pop
xor
inc
test
jle
add
mov
sbb
pop
das
pop
push
pop
or
cmp
sub
mov
add
jl
scas
addl
out
inc
push
je
jb
mov
cmpsb
xor
stos
inc
clc
push
std
les
fidivl
shl
cmpsl
push
jne
mov
push
clc
mov
int
inc
xchg
popf
push
mov
jo
add
orl
push
push
pop
je
out
sbb
inc
add
ret
aad
jg
lds
test
push
or
xchg
pop
dec
sub
xchg
je
push
sahf
mov
inc
lea
shl
sarb
sub
jge
sti
xchg
gs
lds
sub
bound
mov
dec
shll
jl
iret
pop
test
cmp
inc
and
inc
pop
cli
add
rclb
movsb
ret
jo
jo
mov
pusha
dec
xchg
test
arpl
or
push
dec
pop
mov
pop
cltd
push
xchg
js
or
pop
loop
pop
addr16
xor
stos
in
outsb
arpl
stos
pop
mov
ljmp
test
test
jmp
push
cmpsl
roll
into
scas
add
push
mov
sub
cmpl
adc
inc
inc
pop
mov
sahf
call
pop
es
jp
push
imul
or
subb
lods
test
xlat
jb
out
imul
lea
cmp
and
lods
fildl
xchg
loope
sub
rcll
inc
adc
fsubs
ljmp
ja
testb
hlt
cld
jae
roll
push
orl
popa
push
mov
fst
dec
adc
insl
outsb
lret
xchg
sbbb
into
aas
dec
jno
sahf
jnp
inc
cltd
gs
add
enter
nop
shrl
sub
cmpsb
inc
rcr
test
sbb
mov
jo
das
fadds
mov
xchg
lahf
gs
sub
aaa
loopne
iret
push
popw
inc
outsl
pop
out
or
mov
lock
jnp
pusha
cmp
lahf
aas
and
fcomip
enter
lock
adc
in
xor
rcl
das
mov
daa
mov
jg
jo
sti
call
cmpsb
or
and
cmc
movsb
cli
or
fdivp
mov
testb
rorl
pop
inc
xor
rcrb
leave
mov
js
mov
cmp
xchg
idivb
cwtl
pop
sub
xchg
inc
mov
les
mov
fldt
dec
hlt
loop
jnp
adc
mov
inc
or
sahf
fbstp
arpl
jmp
clc
push
mov
mov
sbb
push
repz
out
mov
bswap
push
mov
and
rcl
in
xchg
xchg
push
add
adc
fidivl
inc
call
xor
push
sbb
pop
in
addl
add
out
ficoms
fists
insl
or
mov
call
jb
xor
frstor
aas
add
aam
sub
mov
adc
jae
cmpsl
xlat
sub
or
inc
test
pop
cld
scas
std
cmp
loopne
mov
and
mov
add
and
add
cmpsb
rolb
pop
std
adc
jae
cltd
push
loope
mov
jmp
sbb
cmp
sub
and
xlat
daa
mov
mov
out
shl
rcll
nop
pop
mov
mov
pushf
push
jno
je
mov
push
cmp
pop
test
fisttps
je
cmpsl
cld
push
fcmovbe
int
sbbl
mov
test
inc
jo
pop
fwait
xor
push
lods
xchg
xor
outsl
nop
push
lea
xor
cmp
adc
mov
int3
jo
test
pop
ret
push
pop
sgdtl
mull
add
dec
or
aam
and
push
jge
and
daa
ljmp
imul
mov
mov
rorb
mov
cmp
mov
aaa
repz
and
push
jnp
loop
mov
orl
and
cmp
adcb
mov
inc
andl
push
into
jb
popa
dec
aas
aaa
xor
sbb
rclb
pop
pop
cmp
mov
mov
sarl
cmp
shlb
les
cli
bound
scas
add
cmp
push
idivb
push
sbb
cmp
mov
cltd
idivl
push
out
mov
xchg
or
add
in
cld
lahf
pusha
jo
cmpsb
inc
sub
add
and
mov
jbe
mov
add
inc
jmp
insb
push
jle
stc
or
xchg
add
jno
bound
imul
cmpsb
inc
mov
cmpsl
add
popf
add
popa
scas
pop
data16
sar
or
mov
popf
pop
aam
stos
jmp
add
mov
insb
mov
dec
dec
dec
sbb
and
aad
adc
cmc
mov
test
push
mov
xor
or
hlt
push
ljmp
dec
jge
addr16
mov
add
add
cmpsl
push
add
push
sub
out
stos
add
sub
imul
lds
addl
pop
in
and
ret
test
mov
sti
sbb
daa
mov
xchg
jle
sub
xor
lods
xchg
dec
cmpsb
mov
or
cltd
mov
addr16
jns
pop
icebp
xor
loope
out
mov
gs
push
hlt
inc
sbb
mov
negl
call
ret
sub
sub
fistpll
aas
adcb
mov
imul
shrb
cmp
jbe
xor
addr16
jg
daa
daa
stos
inc
pusha
lds
jae
test
je
stc
sub
mov
nop
mov
push
fs
cmp
aam
shrb
mov
mov
scas
cmp
jae
adc
mov
xchg
or
hlt
ljmp
dec
or
push
lcall
push
pop
arpl
sahf
mov
jns
and
xor
or
ds
lcall
mov
outsl
cmp
jbe
adc
stos
xorb
jae
xchg
in
fcompl
adc
iret
push
sbb
inc
les
scas
loop
or
jg
enter
andl
xchg
aaa
or
lcall
and
test
adc
pop
xchg
aad
sub
push
dec
cmp
shrb
mov
and
ror
test
jecxz
xor
dec
adcb
test
mov
xchg
pusha
and
fadds
sbb
push
fwait
adc
push
imul
data16
xor
xlat
movsl
jbe
fisubrs
jmp
push
mov
mov
or
rorb
jne
push
inc
cmp
outsl
insb
jecxz
push
mov
int
test
out
leave
int3
sbb
jo
fwait
loopne
jecxz
aad
repnz
pop
into
push
popa
lods
pop
cmp
rcrl
cmp
outsl
adc
loope
lahf
push
xorl
jno
adc
push
mov
mov
and
pshufw
jbe
ja
push
xor
ss
xor
xor
pusha
cmp
jmp
xchg
incl
je
push
push
mov
jecxz
jecxz
mov
mov
lock
imul
xchg
sbb
jns
xchg
std
pushf
loopne
js
std
xchg
ret
add
std
inc
mov
sbb
scas
jmp
ror
jnp
pop
adc
sub
mov
je
mov
lods
pusha
addr16
cmp
js
jae
shl
add
or
sub
fidivs
jp
cmp
mov
shlb
setl
push
jbe
pop
add
inc
outsb
js
scas
mov
cmpsb
imul
hlt
mov
scas
fstpl
sub
loop
mov
push
or
adc
aam
sbb
adc
dec
imul
adc
add
data16
jmp
dec
lret
sbb
scas
jne
cli
xchg
shlb
jns
popa
and
lods
aad
rorl
pop
mov
inc
out
imul
test
mov
in
cltd
push
jne
imul
stc
fxch
icebp
push
add
in
mov
cld
push
dec
or
sbb
into
clc
ret
aas
xchg
lea
push
loope
lahf
mov
shlb
mov
loopne
in
push
jnp
mov
push
xor
movsb
jecxz
jns
loopne
movsb
shrb
pop
cltd
push
ss
sbb
add
lret
pop
imul
loope
or
fsubrs
lds
mov
std
dec
push
jge
push
lcall
xchg
cmp
or
sub
inc
xor
push
cmc
adc
push
or
jns
shlb
andl
inc
pop
cwtl
sub
jb
pushf
cmpsb
push
call
mov
mov
jns
jnp
lret
and
loop
sbb
mov
adc
or
jg
iret
faddl
in
out
add
in
inc
testb
mov
cld
sbb
pop
xlat
nop
daa
popa
sub
gs
add
xchg
fidivrs
lcall
push
imul
or
filds
aad
dec
mull
xchg
adc
mov
xlat
mov
imul
add
lea
push
dec
mov
adc
test
add
and
and
roll
cmp
push
add
xor
and
or
mov
and
cmpsb
aas
ret
insb
test
mov
movsb
add
cltd
add
pop
sbbb
mov
in
ja
test
sahf
or
aaa
mov
dec
or
loopne
add
popf
jp
pop
dec
test
outsb
add
add
cmp
mov
fbld
stos
nop
fnsave
mov
pushf
mov
cmp
ss
jmp
lds
iret
mov
push
add
stc
xchg
sub
adcl
in
cmp
push
sub
and
add
jg
and
push
repz
outsl
inc
fcoml
ljmp
push
loopne
stos
mov
jo
pop
or
jp
rclb
xor
pop
icebp
or
stc
pop
lahf
add
or
add
in
inc
dec
mov
js
or
popa
aad
imul
mov
scas
in
clc
adc
mov
sarl
adc
ljmp
test
test
xchg
add
and
jmp
mov
test
js
fisubl
sbb
mov
icebp
lcall
test
icebp
out
xchg
sub
data16
dec
cli
fstl
sub
mov
popf
inc
xorb
mov
aas
adc
imul
movsl
scas
dec
or
lock
mov
incl
loop
nop
stc
pop
xchg
or
inc
dec
aam
xchg
sub
stos
aaa
cmp
mov
push
push
daa
ret
and
pop
xchg
add
xor
rcrl
mov
outsl
mov
test
pop
scas
psubb
xor
pop
mov
xor
lock
or
mov
pop
inc
sbb
add
pop
mov
lock
mov
cld
inc
stc
mov
mov
mov
fadd
leave
test
cltd
fwait
fwait
fwait
dec
xchg
sbb
ficoms
dec
lock
rorb
dec
mov
mov
push
fcomip
pop
sub
call
fadds
rolb
mov
mov
lcall
fsubs
lahf
mov
hlt
popa
loope
popa
in
pop
adc
ss
mov
hlt
fstpt
mov
push
add
jno
jmp
jmp
pop
mov
or
jne
aas
loope
pop
insl
or
pop
fstl
std
add
inc
cmc
jb
jp
or
push
xor
ds
das
mov
loopne
mov
in
add
clc
inc
clc
push
xchg
rolb
xchg
test
cmp
dec
out
and
add
mov
fisubs
lea
mov
sti
stos
xor
jnp
jnp
fimuls
lods
adc
jecxz
adc
xor
cs
std
push
jb
and
jo
in
inc
mov
mov
fcmove
dec
fisubl
in
or
pop
add
mov
pop
adc
pop
shll
out
lods
add
ss
and
es
hlt
push
jnp
insb
mov
pop
sbb
andb
idiv
pushl
mov
lcall
aaa
out
fimull
fmull
ret
lods
mov
jmp
shlb
lret
jbe
je
mov
jno
pop
out
adc
scas
xchg
mov
jae
sub
pop
jle
xchg
xchg
push
sub
adc
dec
loopne
push
insb
rcl
repz
and
movsl
pop
sub
das
cli
sbb
sub
rorb
mov
cmp
or
test
and
xor
mov
push
test
test
int
mov
cs
jl
jl
rolb
mov
inc
inc
jae
les
inc
and
pushl
jp
in
or
inc
dec
sarb
pop
pop
push
insb
sahf
imul
rcr
xor
popa
mov
push
repnz
lea
push
sbbb
pop
mov
add
in
adc
push
inc
or
and
mov
fs
xlat
fdivp
inc
push
lret
out
test
test
cli
jo
xchg
cld
and
mull
ja
add
cs
shl
lahf
divl
pusha
add
inc
cld
sti
mov
sarb
nop
cltd
push
rolb
orl
out
jl
sub
sbb
test
icebp
dec
inc
sbb
inc
jns
lret
outsb
js
jae
rorb
ds
idivl
enter
movsb
xchg
mov
sbb
cmp
jl
pop
sub
inc
adc
mov
pop
lret
jecxz
stc
xor
and
rolb
ljmp
bound
adc
push
enter
aaa
movsb
ja
lods
sbb
arpl
mov
inc
or
inc
sbb
and
sub
data16
cltd
div
jge
inc
stos
int
iret
cmp
sbb
cmp
jo
faddl
stc
es
mov
ja
stos
and
je
ret
ret
jl
push
dec
les
mov
cmp
inc
std
and
loop
sbb
fdiv
dec
cli
hlt
stc
adc
mov
sub
adc
or
sub
jno
inc
sbb
mov
shlb
ja
rclb
inc
push
pop
ss
call
mov
push
cmp
rorb
mov
out
sbb
jp
push
and
movsl
add
adcl
add
mov
push
rcll
push
sub
add
pushw
das
add
cmp
jle
orb
xorl
dec
mov
into
cmp
fidivrs
out
adc
cmp
call
sbb
lock
dec
add
sub
sub
js
sbbl
outsl
sarl
sbb
cltd
imul
cmpsl
jge
push
nop
push
add
or
xchg
in
in
pop
dec
loopne
cmp
rorl
scas
push
jmp
inc
outsb
push
lcall
inc
push
push
push
fldenv
lahf
orl
xlat
ljmp
ret
or
or
ret
pushf
ds
and
cwtl
repz
dec
icebp
cmp
and
imul
push
sub
int
mov
adc
add
repnz
sub
jle
nop
aam
loop
sbb
lahf
push
xchg
adc
add
pop
cmc
mov
stos
sbb
mov
jle
adc
sub
notb
adc
mov
cli
cmp
loopne
ljmp
xchg
pushl
subb
out
lret
push
lahf
push
into
inc
scas
xor
hlt
mov
and
push
cwtl
aaa
insb
call
lret
mov
out
adc
push
sbb
outsl
pop
test
lret
push
hlt
rcll
dec
pop
push
dec
clc
mov
inc
mov
adc
pop
mov
clc
insl
dec
dec
add
lock
mov
add
ja
daa
mov
pop
testb
stos
scas
cli
or
mov
sahf
and
arpl
les
cs
bound
mov
dec
add
xor
mov
inc
cmp
dec
incl
cwtl
cmp
int3
jg
add
mov
cmp
fcomps
mov
adcb
shlb
mov
jp
push
jge
and
jmp
pop
jl
popa
loopne
and
add
repnz
and
ror
push
pop
pop
jmp
dec
push
outsb
jp
sub
in
or
into
icebp
ljmp
jl
or
pop
sub
add
ja
jbe
push
lea
imul
dec
mov
xor
push
into
push
add
orl
ljmp
icebp
xchg
stos
add
inc
xor
sub
out
movsl
test
ret
aam
mov
add
lret
lea
sbb
inc
push
out
rorb
jo
inc
outsb
icebp
pushf
cli
cmp
mov
lcall
cmp
jbe
mov
cs
js
das
jg
arpl
loop
and
sub
js
xchg
fdivrl
adcl
adc
jae
sbbl
add
into
jle
or
imul
dec
testl
js
es
rolb
pop
jne
sar
jae
ljmp
jge
jb
insl
nop
repnz
cmp
fsubs
out
and
aad
lods
ret
xchg
lods
ja
push
pop
pop
scas
mov
add
jb
das
mov
subb
enter
jg
imul
and
test
mov
test
and
xor
dec
int3
xlat
mov
mov
push
adc
adc
sbb
loope
loope
mov
pop
insb
mov
pop
lds
ljmp
jp
and
out
jp
jecxz
pop
adc
subl
daa
or
push
pop
jo
mov
pop
jo
adc
or
iret
cmc
loopne
in
sub
lock
js
test
inc
sbb
dec
sub
dec
add
fs
xchg
mov
icebp
push
mov
cmp
lock
rcr
dec
push
push
add
jle
shll
push
movsb
push
jb
jns
loope
add
std
popa
lock
negb
lods
pop
je
dec
dec
inc
sahf
out
scas
sub
loop
aas
sub
rcrb
pop
cld
jb
in
insb
inc
adc
mov
test
hlt
mov
sub
in
stc
inc
ret
cmp
arpl
scas
mov
jbe
addr16
clc
aaa
mov
mov
lret
sar
enter
stos
incl
mov
ja
pop
xchg
push
aad
inc
ss
rol
push
xchg
call
xlat
leave
lods
ss
sbb
scas
or
lcall
lods
jae
adc
inc
xor
imul
mov
jg
imul
rolb
test
test
push
dec
add
pop
jge
mov
ss
sub
shl
adc
mov
adc
out
int3
sbb
sbb
dec
cmp
lahf
repnz
icebp
repnz
push
sbb
or
inc
hlt
and
xor
mov
lock
pushf
out
mov
jl
pop
adc
cmp
xchg
stc
repnz
cld
imul
or
push
and
jo
in
mov
imul
inc
adc
rclb
pusha
pop
imul
ljmp
repnz
xlat
stos
mov
divl
add
outsl
mov
xor
add
mov
fwait
xor
outsl
mov
test
pop
std
ljmp
mov
add
subl
cs
call
xchg
aad
or
cltd
inc
loope
or
fistps
dec
test
call
mov
ljmp
int
xchg
inc
xlat
loope
and
outsl
loop
or
rclb
and
add
js
gs
lahf
or
cld
mov
cmpb
xchg
inc
sbb
and
or
xchg
lea
lcall
cmp
inc
frstor
loopne
and
jle
push
lds
jp
rcrb
mov
stc
or
incl
scas
push
shll
mov
or
push
push
jle
repz
dec
pop
mov
mov
mov
call
jecxz
or
mov
xor
sub
xor
mov
stc
fistl
outsl
pop
std
ret
xchg
out
mov
cld
pop
inc
pusha
inc
cmp
cmpsb
cmp
xchg
pop
and
lds
xor
sbb
rorl
sub
bound
iret
xchg
lock
movsl
and
movsl
imul
and
divb
ss
pop
push
cli
xor
shrl
scas
push
ret
rcrb
xor
rolb
pop
cwtl
jecxz
cmpsb
ss
andl
sbb
decl
data16
int3
jge
xchg
adc
subb
hlt
ret
icebp
aas
sub
mov
ss
xchg
fdivrl
rcrl
cvtpi2ps
lahf
negl
jne
sub
int
mov
inc
jecxz
jns
add
cld
loopne
hlt
daa
inc
mov
sbb
inc
and
xorl
cmp
mov
insb
inc
cmp
push
ret
jno
push
xor
cmp
mov
in
mov
mov
std
jg
shll
testb
sbb
clc
cli
cmp
xor
sub
jecxz
push
sub
call
insl
sub
inc
jnp
jmp
or
mov
lods
or
pop
and
es
sarb
sti
lock
mov
pop
lods
inc
lret
loope
or
jg
es
sbb
cmpb
pop
rclb
adc
push
int
imul
icebp
or
cwtl
cs
setp
dec
lock
ja
incl
xor
pop
lods
pop
and
mov
pusha
and
inc
adc
add
add
xchg
jp
adc
jg
repnz
xchg
fildl
loopne
pmaxub
xchg
leave
lcall
sbb
rcl
fiaddl
aad
inc
ret
les
jo
push
or
out
ficoml
fwait
ret
scas
in
inc
mov
xlat
sahf
push
stos
xchg
rorl
pop
pushl
push
adc
in
int
cmp
adc
lock
sub
rolb
cmp
test
push
outsl
lahf
inc
cmpsb
shlb
imul
mov
adcl
ret
mov
int
push
and
test
sbb
jbe
mov
jb
sbb
in
jecxz
push
lahf
test
aam
mov
push
jbe
inc
adc
hlt
pop
pusha
dec
adc
nop
hlt
pop
movsb
cmp
outsl
jg
sbb
sahf
mov
and
inc
push
fs
loope
dec
test
xor
out
mov
vshufps
cld
aam
mov
loop
aaa
sbb
pusha
sbb
pop
hlt
loopne
mov
fcoml
nop
movsb
test
and
inc
in
dec
sarb
mov
mov
sub
dec
xlat
push
shlb
jno
nopl
arpl
xor
sub
arpl
roll
or
js
inc
out
int
mov
and
inc
xor
repnz
iret
and
outsb
in
mov
or
push
xchg
mov
mov
sbb
push
ficomps
in
pusha
or
sub
out
bound
sti
outsb
mov
popf
sbb
stos
xor
add
or
push
lods
aaa
fsubrs
push
out
or
aas
cmp
daa
and
int3
mov
ds
jnp
cs
aas
mov
jbe
in
sub
adc
mov
test
jg
aam
cli
pushf
clc
push
xor
mov
or
pop
push
fucom
fldt
inc
into
outsl
lds
push
fidivs
and
js
push
xchg
cmp
clc
or
xchg
mov
sub
mov
lods
push
xor
or
mov
adc
inc
xchg
sbb
cmp
jecxz
or
mov
cld
call
mov
xchg
mov
cli
popa
adc
jne
cmpsb
loope
xorb
scas
mov
les
pop
hlt
adc
add
sub
insl
dec
sbb
sbb
mov
pop
sub
cmp
push
stc
push
push
ret
add
mov
pusha
out
shrl
mov
bound
jecxz
xchg
pusha
aad
fcomps
mov
fdivp
fs
push
divl
cld
pusha
ss
xlat
fsts
mov
xchg
jecxz
jbe
jne
or
lea
ja
lcall
shrb
mov
dec
push
clc
mov
imul
out
daa
les
push
push
repz
arpl
cld
ljmp
and
sbb
dec
jbe
mov
pop
mov
mov
xor
jne
aas
loope
icebp
xor
mov
outsl
xchg
popl
xchg
loope
orl
sub
jg
lods
mov
add
push
test
aam
xor
add
aad
cmpsb
xchg
ret
lock
jb
push
jnp
aaa
les
clc
mov
push
in
pop
or
mov
loopne
cli
loopne
xchg
xchg
bound
int3
jmp
jnp
sbb
jmp
xor
cli
mov
push
scas
adc
loopne
and
fcomps
cli
jo
push
fdivp
lock
movsb
fistps
adc
lods
mov
test
lods
xchg
lock
gs
int
lock
lods
xor
mov
and
mov
bound
pop
pop
mov
cmpsl
sbb
in
or
pushl
push
call
jp
insl
xchg
jno
cmpb
sbb
mov
xlat
stc
xchg
mov
ja
jmp
cmc
push
mov
ret
out
add
leave
shlb
int3
or
mov
add
lahf
push
xor
sub
push
decb
jo
lahf
push
xchg
add
lcall
and
js
mov
cwtl
add
inc
or
and
cmc
out
daa
jmp
aad
mov
aaa
js
mov
int
push
jle
mov
adc
jg
lods
sbb
pop
bound
pop
jecxz
xchg
icebp
ja
xchg
decl
xor
inc
xor
pop
ret
and
pop
inc
mov
xor
add
xchg
sbb
andb
or
sub
add
cld
fucomip
cli
push
or
js
je
pop
push
mov
aas
adc
add
and
call
je
xor
add
lea
inc
adc
aaa
push
incl
nop
repnz
pop
dec
stos
add
or
cmp
sbb
adc
push
rorb
roll
ficoml
add
icebp
movsb
jl
push
nop
or
std
or
jle
and
mov
test
pop
fwait
adc
mov
aam
cmpb
mov
dec
jle
outsl
inc
add
mov
cs
js
scas
test
mov
std
add
clc
inc
fs
adc
push
pusha
inc
inc
lea
add
jg
rcl
jo
ret
xor
aas
xchg
or
add
mov
xchg
ljmp
push
cmc
pop
inc
inc
ret
ficoml
aad
popa
mov
in
clc
mov
mov
rclb
test
clc
stos
iret
andb
sbb
sbb
and
and
push
rorb
js
add
adc
mov
mov
mov
or
iret
js
into
jecxz
adc
add
aam
dec
mov
leave
adc
adc
xlat
sub
push
cli
sbbl
inc
aam
movsl
ljmp
incl
arpl
mov
inc
xchg
gs
jg
loop
fadd
jle
lcall
fcoml
loopw
ficoms
inc
pop
jb
imulb
cmp
sbb
and
call
adc
test
jl
in
fwait
or
mov
in
pop
fcompl
xlat
push
sbb
ja
jp
mov
adc
mov
jmp
fidivrl
pop
jle
push
addb
or
sbbb
out
push
mov
and
fmull
imul
int3
jb
or
push
pop
add
les
sub
dec
cmc
xor
popl
fimull
mov
ret
loopne
dec
call
gs
xor
ljmp
mov
sbb
les
call
or
mov
sub
xor
cmpsb
daa
cld
das
or
aaa
shlb
inc
pop
outsb
cmp
inc
subb
out
cmp
lock
mov
pop
je
mov
fisubs
iret
ja
push
adc
or
outsl
mov
dec
into
cmp
jb
push
in
cmp
cmp
shll
clc
mov
push
clc
dec
sbb
aad
scas
das
and
add
imul
jnp
bound
mov
lods
cmp
in
out
sbb
andl
scas
add
leave
mov
ffreep
push
add
mov
call
mov
sub
push
adc
and
cmpsl
test
adc
dec
dec
and
ret
mov
repnz
pop
sbb
jns
stc
pop
xchg
sarl
filds
adc
pushf
or
dec
pop
and
call
sub
cmp
adc
test
xor
cmp
es
xchg
adc
xor
hlt
and
add
cltd
decb
js
and
jg
aad
dec
scas
js
cli
inc
movsb
and
sub
push
pop
pop
aas
pop
xchg
xor
in
loope
add
repz
pop
dec
inc
fstl
dec
daa
enter
loop
cmpl
or
mov
or
in
sbb
inc
xchg
pop
jecxz
clc
dec
mov
mov
pop
dec
mov
xor
std
adc
push
sub
popa
mov
xchg
ss
ficoml
rclb
xchg
cld
cwtl
mov
and
lock
jge
push
sub
mov
xor
sub
adc
std
rclb
decl
xor
or
popf
or
and
and
mov
shll
xchg
out
sbb
and
ja
dec
in
jmp
add
fimuls
mov
push
xlat
xchg
fdivs
outsb
decb
inc
dec
jg
jo
mov
out
xchg
jbe
ret
loope
stos
into
sbb
add
pop
dec
incl
push
mov
movsl
xchg
cmpsl
jns
nop
push
jno
ror
test
in
js
adc
imul
jecxz
lret
stos
jp
mov
sub
add
cmp
inc
push
imul
xchg
cld
lret
jp
out
inc
rorl
xchg
or
adc
inc
aas
pop
fstpt
loopne
insb
mov
dec
pop
icebp
pop
xor
outsl
js
in
adc
inc
mov
lea
add
into
xchg
cmp
fwait
dec
add
enter
and
xor
xchg
push
movsb
mov
sbb
aam
add
xor
pop
adc
mov
mov
push
rcl
out
push
cmp
dec
xchg
daa
sub
cmp
or
push
cs
shrl
inc
mov
xchg
rorb
xor
or
movsl
sbb
js
push
cmc
fs
fimuls
fnstsw
aas
inc
mov
int
mov
adc
push
mov
sub
pop
int
adc
jecxz
movsb
cmp
inc
ss
push
pop
mov
loope
test
jbe
jb
cli
xor
inc
cli
push
enter
loope
clc
daa
push
data16
xor
add
std
ljmp
shl
and
mov
push
mov
cmpsl
mov
or
and
xchg
popa
ficoml
adc
std
jg
sub
mov
mov
cmpb
inc
sbb
test
lret
adc
mov
cli
mov
int3
dec
sbb
xchg
icebp
scas
sub
mulb
and
sub
xor
dec
mov
dec
pop
jle
arpl
jmp
sub
fidivrl
pop
insb
call
and
sub
out
call
pushf
jo
push
out
xchg
lea
cli
out
test
cmp
dec
xor
ja
icebp
add
loopne
int3
push
popa
cmpsb
sub
das
out
pop
gs
jmp
pop
cmpb
jmp
fld
rclb
push
loopne
int
lds
push
scas
out
pop
rclb
inc
ljmp
icebp
inc
pusha
dec
or
rcrb
loope
nop
jo
sub
push
rol
inc
xchg
mov
adc
inc
inc
int3
das
decl
xor
adc
fmuls
dec
lahf
or
xor
lcall
in
sbb
mov
dec
inc
jl
or
and
sahf
xchg
sub
xchg
movsb
xchg
das
or
jg
shlb
stos
xor
movsl
mov
push
les
insl
adc
sbb
loope
popa
shlb
int
and
jp
in
mov
inc
and
add
dec
pop
pop
test
mov
adc
mov
pop
dec
fisttpl
jecxz
push
rorb
outsb
cltd
daa
sub
mov
pop
jb
fwait
add
jg
aaa
aas
pop
mov
testl
das
inc
push
pop
and
dec
call
xchg
or
arpl
out
inc
inc
movsb
pop
daa
xchg
cmpl
fdiv
sub
add
iret
fisubrl
jle
test
lock
loopne
add
pop
inc
outsl
fidivrl
mov
cmp
mov
push
cmp
arpl
call
add
out
clc
in
enter
mov
fmuls
mov
mov
insb
and
sub
arpl
sahf
rcr
leave
push
orl
gs
call
jecxz
cltd
pop
mov
loopne
adc
pushf
daa
inc
int3
mov
sbb
nop
push
mov
push
jl
test
dec
push
pop
push
mov
mov
lret
rcrb
inc
dec
subb
mov
hlt
scas
cmp
rcr
lods
push
xchg
roll
mov
invd
pop
xchg
xchg
arpl
popa
and
icebp
repnz
es
hlt
fwait
orl
call
loope
pop
fistps
cmpsb
or
pop
dec
add
int3
aas
add
clc
adc
jg
push
mov
loopne
das
mov
shlb
je
adc
shr
and
insl
sahf
push
cmpsl
int
dec
sub
jnp
cmp
adc
mov
push
push
fidivl
stos
cmpsl
ret
dec
mov
add
daa
push
shlb
mov
repz
inc
shrb
sub
arpl
xor
xchg
icebp
inc
scas
jnp
mov
dec
insb
push
pop
mov
mov
pop
cmp
lods
fwait
int3
sub
lahf
fs
decl
jg
stos
aad
adc
out
jne
cmc
and
sti
andl
xchg
adc
inc
sub
subb
hlt
clc
vsqrtpd
cmp
test
icebp
xchg
push
or
mov
cli
push
outsl
or
push
daa
cs
and
lret
add
mov
mul
cmp
add
movsb
pop
mov
imul
scas
inc
adc
nop
pop
and
ss
xchg
out
pop
jmp
xor
inc
test
jbe
shll
jle
push
adc
pop
daa
pop
cmp
es
or
icebp
push
das
jae
jecxz
stos
cltd
pop
and
mov
push
cmp
je
adc
pop
std
lahf
mov
loopne
mov
lret
lret
pusha
in
xor
imul
shlb
add
add
mov
push
add
sbb
rorb
incl
scas
cli
inc
lods
fcoms
jmp
or
mov
adc
push
mov
in
and
outsl
aam
out
fst
mov
and
adc
jg
test
es
outsb
pop
xor
test
aas
xlat
cmc
imul
sub
cld
mov
popf
and
test
dec
pushl
test
push
cld
leave
iret
lahf
les
add
sbb
cld
or
dec
sub
push
sub
push
mov
xor
clc
add
std
push
add
inc
fmulp
add
arpl
test
pop
add
and
cwtl
mov
cmc
mov
std
stos
pop
and
sbb
loope
lods
xchg
inc
aam
arpl
out
add
lds
repnz
sub
xor
inc
bound
out
and
sbb
sub
std
stos
add
mov
enter
and
sbb
sahf
mov
cmpsb
jmp
jg
mov
or
add
cmp
mov
or
addr16
pop
sub
jecxz
mov
and
adc
shlb
inc
std
and
fs
pusha
nop
orl
in
and
outsl
or
push
or
push
shrl
inc
push
test
insb
shrb
incb
scas
jmp
nop
jle
xchg
popf
lcall
decl
test
filds
fistpll
ret
inc
cli
mov
paddb
fidivrs
xchg
andb
outsl
add
push
sti
mov
mov
decb
add
or
loopne
ss
jg
cltd
roll
push
rclb
and
fwait
mov
lss
jo
je
ja
jp
hlt
jmp
movsb
jle
sub
dec
fmuls
xchg
test
pop
jnp
xlat
xor
mov
mov
pop
cli
addr16
sbb
cmpb
movsl
shll
filds
mov
call
hlt
sub
jg
push
push
nop
xchg
test
jecxz
push
lock
int
xchg
push
aas
jmp
cmp
push
paddd
loopne
sbb
stos
fldt
xchg
aam
add
movsl
jnp
lret
ds
mov
pop
adc
xchg
dec
insl
int3
ret
xor
loope
dec
xchg
cmp
inc
sbb
mov
xlat
out
data16
arpl
mov
push
inc
lea
in
int
jg
icebp
pop
jno
repz
push
sub
pop
lock
clc
xchg
lret
inc
inc
cmp
sbb
rol
enter
push
popl
pop
cmpsl
mov
fsubrs
adc
iret
jbe
jp
sub
lahf
nop
test
lock
adc
popa
cmp
push
outsl
out
mov
pop
or
lods
xchg
movl
es
dec
outsb
pop
inc
push
filds
adc
cmp
inc
sub
mov
mov
adc
push
sub
icebp
test
jbe
sbb
daa
push
std
fwait
push
inc
inc
pop
sbb
push
ja
lock
mov
sbb
mov
push
xchg
cmpsl
pop
add
add
stos
out
ret
rcr
mov
into
mov
and
mov
sub
ljmp
mov
jle
testb
dec
sub
xor
pushf
xor
fs
andb
repnz
push
and
dec
popf
js
push
mov
dec
inc
call
jmp
add
dec
js
push
mov
dec
mov
push
or
pop
adc
mov
fucom
fstpt
loopne
or
data16
aas
xchg
cmpsb
jle
adcb
mov
xor
add
xor
mov
and
mov
cmp
test
jle
cwtl
add
cld
pushf
cmp
cmpsb
jmp
fwait
push
orl
and
xchg
es
cmp
mov
inc
jns
mov
test
mov
ljmp
nop
test
push
incl
rcll
or
addr16
jle
inc
rorl
std
mov
xchg
test
sti
cmp
and
movsl
jge
sub
jne
add
test
repz
in
hlt
xchg
jg
or
or
sub
enter
bound
in
repz
je
cmp
push
insb
cs
mov
icebp
push
mov
inc
pop
hlt
pop
xchg
movsb
xchg
clc
pop
gs
lcall
in
xor
fbstp
popa
ret
sub
in
xorl
xchg
nopl
cmp
or
xor
sub
ljmp
xorl
lahf
push
testl
mov
int
aam
pop
rcrl
stc
js
test
jle
or
lock
or
js
inc
arpl
push
adc
js
push
add
cli
adc
nop
adcl
ja
cmc
mov
xor
push
pusha
ficomps
cli
out
call
orl
adcl
cwtl
das
pop
push
movsb
test
test
scas
xor
jp
pop
outsb
aaa
add
inc
aad
or
xchg
dec
and
xchg
add
pop
inc
mov
aas
xchg
adc
sbb
xor
inc
cmp
ja
sbb
adc
cmp
jl
and
jl
icebp
mov
pop
lret
in
add
sbbb
sbb
inc
mov
rorb
or
daa
hlt
icebp
nop
outsb
push
aam
out
push
hlt
jg
outsb
popa
ljmp
in
jle
enter
shlb
xchg
cmpsl
lahf
cmp
test
xchg
loope
cltd
sbb
inc
clc
cld
test
leave
lcall
cmpsb
push
loop
test
aaa
push
jo
cld
idiv
test
ljmp
testb
pop
jnp
mov
mov
scas
mov
add
out
rcll
dec
mov
or
xchg
rorl
daa
xchg
mov
shrb
loopne
ds
sahf
inc
or
shll
dec
js
daa
cmpsl
mov
jp
aad
sub
mov
stos
lock
jae
or
js
add
inc
mov
aad
hlt
dec
xor
sub
movsb
ljmp
jno
dec
push
popa
icebp
pop
inc
jge
out
lret
mov
cmp
sub
outsb
lock
cmp
mov
rolb
fwait
popa
mov
push
data16
rcrb
leave
insb
push
or
inc
jo
cwtl
jp,pt
and
or
or
dec
nop
push
mov
add
xor
icebp
arpl
jnp
push
aas
pop
sbb
sbb
ja
xchg
adc
xor
sarb
shlb
xchg
xchg
loope
lods
inc
push
ljmp
shlb
je
jno
ds
mov
and
decl
jge
or
pop
ljmp
in
mov
and
jg
ss
adc
sbb
pusha
fcomi
mov
outsb
cmp
ds
dec
cmp
push
gs
cmpsl
scas
insl
xchg
and
inc
add
adc
add
pop
shrb
rolb
repz
iret
or
inc
aam
mov
jb
xchg
addr16
dec
xchg
push
pop
mov
in
sbb
cvttss2si
cmp
add
shrb
cmc
dec
stos
jle
adc
sbb
mov
xchg
xchg
movsl
loop
test
mov
and
movsb
xorl
xchg
and
cs
xchg
add
xor
and
and
and
imul
jae
xchg
test
mov
jnp
fnstcw
or
pop
int3
das
pop
insl
cmpb
fdiv
sbb
or
xchg
adc
pop
std
loope
mov
adc
push
dec
mov
int
jnp
push
mov
add
mov
jg
mov
and
mov
push
mov
mov
sbb
insl
lock
pop
arpl
mov
inc
sub
adc
data16
sub
mov
xchg
idivb
xor
add
push
mov
adc
xor
out
rclb
int3
add
fnstsw
add
mov
add
cli
xchg
aam
outsl
lods
test
fwait
or
mov
xor
pop
sti
and
xchg
out
ret
test
lcall
fisttps
jg
dec
sahf
sbb
call
bound
mov
sub
jno
add
adc
cwtl
adc
dec
fmul
call
mov
int
adc
arpl
add
xchg
dec
sub
mov
inc
push
inc
ljmp
lock
and
sub
adc
cmp
and
inc
adc
clc
xor
je
cwtl
push
shlb
loope
addr16
sahf
push
daa
sub
and
xor
or
andl
out
scas
pop
jle
push
std
sbb
jp
xor
jg
push
push
movsl
lock
mov
out
inc
sub
lea
inc
push
add
adc
dec
mov
bound
and
pop
mov
loope
or
sub
nop
cmpsb
icebp
push
inc
mov
add
popf
test
or
or
fisubl
cmc
and
xor
xor
lret
movsl
mov
bound
icebp
daa
mov
cmpsb
jno
mov
push
xor
mov
jo
push
pusha
adc
pop
ret
jno
addr16
xchg
shll
sar
pop
jmp
push
sub
rep
out
add
scas
test
or
je
clc
aad
mov
push
ret
jo
cmc
aas
adc
push
jg
push
int
add
cmp
inc
ss
jmp
call
or
push
imul
lock
cwtl
lret
jge
and
ljmp
lods
pop
nop
adc
mov
fwait
jge
push
and
add
dec
push
std
xlat
jns
jecxz
xchg
or
jmp
xor
dec
push
mov
test
lock
mov
xor
loope
xor
xor
bnd
mov
pop
pop
lea
fstps
jmp
and
and
sbb
adc
inc
loope
inc
inc
ret
pop
push
rcr
rcrl
adc
xor
leave
dec
cmp
inc
and
or
push
divl
icebp
cmp
pushf
jbe
js
push
mov
push
mov
shll
into
loop
pop
icebp
sbb
cmp
xchg
mov
aas
mov
cmp
dec
mov
mov
pop
xor
cmp
xchg
insb
idivl
push
xchg
aad
dec
pop
jne
ss
fcomps
es
cli
sbb
xchg
xchg
inc
push
sub
addl
mov
push
xchg
jbe
movsl
imul
iret
out
js
orl
or
lcall
ds
push
lock
push
dec
adc
and
mov
mov
adc
hlt
jb
loopne
mov
scas
adc
decl
dec
or
mov
mov
decb
gs
pop
mov
iret
or
aam
mov
mov
or
imul
xchg
clc
cmp
shll
inc
xchg
je
rdtsc
mov
cli
cwtl
in
mov
pop
push
aas
sbb
rcl
xor
popa
in
rorb
xor
jne
cmc
mov
mov
insb
xorl
adc
mov
int
or
movsl
mov
scas
into
movsl
mov
aad
loopne
jmp
in
ja
adc
mov
xchg
out
ret
std
sub
pushf
cmp
mov
insl
call
sti
add
fdivrp
xchg
subb
sbb
jge
adc
lods
ds
aas
dec
aad
add
mov
adc
and
repz
and
fcoms
sbb
je
outsb
push
or
jb
mov
ds
adc
or
or
mov
push
dec
sub
adc
sub
add
decb
cmpsl
ficompl
pushf
leave
mov
popf
adc
cmp
jle
lods
cmp
outsb
fs
mov
rcrl
scas
mov
or
mov
gs
and
cmp
data16
sbb
add
in
mov
in
and
cmp
xchg
add
add
adcb
orl
jno
push
sub
cmp
cmc
dec
mov
mov
jo
std
mov
push
adc
add
and
fdivl
xchg
les
mov
xchg
lods
pop
ret
cmp
and
add
in
adc
mov
ja
in
adc
push
xchg
push
xchg
mov
sbb
pop
loope
inc
push
test
aaa
test
xor
imul
pop
sub
imul
jns
fsub
inc
jge
cmp
push
frstor
fwait
subl
out
xor
movswl
loopne
lcall
add
xchg
cmp
dec
fidivl
call
add
push
iret
orb
mov
out
repz
inc
stos
repnz
cmpl
cmp
scas
loope
ljmp
cmp
adc
adc
scas
cld
inc
outsl
repnz
inc
adc
movsl
leave
jmp
aam
mov
and
in
inc
xor
dec
mov
dec
fidivl
and
cmp
jge
in
add
cmpb
dec
jo
mov
pusha
mov
mov
dec
inc
ffreep
ret
enter
inc
cmpsb
push
inc
jp
push
je
call
outsl
cmp
popf
dec
sub
lods
nop
sub
daa
stos
shrl
dec
jns
mov
mov
sti
loopne
jp
pop
test
xchg
jmp
repz
push
xor
push
in
fcomps
sahf
cmpsb
xlat
add
icebp
inc
add
inc
or
mov
ja
aad
loop,pn
cmpsl
adc
dec
mov
sbb
jo
jle
aaa
hlt
lods
aad
rol
aam
out
push
popa
dec
jl
lcall
incl
mov
xchg
jecxz
xchg
add
lcall
or
lds
data16
jl
aam
pop
or
lret
pop
and
cs
cli
pop
lahf
sbb
adc
inc
imul
in
adc
add
mov
pusha
clc
xor
and
insl
xchg
jle
pop
mov
repz
int
inc
and
cwtl
pusha
jo
inc
pop
adc
xor
or
test
or
lret
push
inc
fisubrl
mov
repnz
insb
fdivp
sub
sti
scas
dec
aaa
xor
cmp
les
jmp
dec
xor
out
or
and
sbb
xchg
add
aas
sbb
cmpb
stos
daa
add
gs
cwtl
test
sub
xchg
test
add
lsl
push
aam
ret
xor
call
rolb
icebp
xchg
rorb
mov
push
stc
jp
add
sbb
icebp
cs
test
and
fmuls
in
sub
or
ja
xchg
clc
inc
xor
cld
sub
lods
and
outsb
push
nop
popf
in
xchg
icebp
insb
inc
sbb
or
clc
mov
cmc
popa
or
stos
pop
adc
xchg
mov
cmp
cmpsb
pcmpgtb
dec
add
loopne
stos
inc
mov
sbb
cs
shr
dec
adc
cmp
mov
xchg
jl
or
out
inc
xor
sub
jne
outsb
adc
paddd
inc
sbbl
pop
mov
aaa
cmp
add
push
adc
test
into
xchg
cmpsl
ret
fiadds
add
shll
das
les
jbe
enter
pop
outsb
cmc
pop
lcall
mov
test
sub
mov
data16
jle
icebp
mov
mov
pushf
or
iret
add
mov
or
sbb
push
cs
or
leave
iret
cs
mov
addb
rcrb
and
inc
fsubrs
lldt
jne
and
mov
sub
add
mov
add
add
adcb
xor
andb
test
xor
lds
cli
jb
cmp
sub
stc
jmp
rclb
fsubr
cmp
fadds
xlat
mov
nop
lock
scas
pop
push
inc
ret
and
xchg
xlat
xchg
mov
push
inc
or
mov
xchg
inc
pop
in
mov
stos
outsl
imul
xchg
icebp
mov
sub
jo
dec
sti
mov
mov
sub
enter
test
roll
mov
push
jno
sbb
cmpb
fstpt
clc
ficompl
js
orb
iret
push
inc
loope
ret
sahf
lea
aaa
push
and
xchg
loop
nop
pop
mov
mov
jne
cltd
lods
out
arpl
jp
lods
cmp
xor
pop
or
mov
mov
scas
add
mov
daa
sbb
daa
pop
jp
stc
jb
mov
aaa
sub
ja
clc
mov
lcall
lds
xchg
ds
divb
jg
imul
sbbl
cli
stos
push
add
push
mov
faddl
aas
in
sbbb
lock
cmp
daa
add
fildll
scas
add
sbb
push
push
std
stc
dec
clc
sar
xchg
or
mov
xor
or
dec
or
add
jg
mov
push
xor
stos
mov
push
pop
ljmp
ss
adcl
adc
test
push
test
inc
cld
add
icebp
xchg
ja
dec
dec
dec
test
push
push
ja
js
lret
aad
dec
mov
shlb
mov
push
popf
dec
jge
lret
or
nop
mov
in
sub
push
shlb
fstps
aam
inc
add
loope
gs
inc
outsl
add
sti
loop
stos
ret
es
sub
push
push
ret
lock
arpl
in
je
push
out
test
mov
mov
enter
lock
inc
es
es
cmp
fdivrs
aad
fldenv
pop
cs
gs
in
and
pop
fistpll
jns
rcrb
lods
hlt
fmuls
push
call
mov
adc
inc
pop
lock
ja
fs
xchg
adc
cld
aad
push
aad
push
mov
push
jecxz
loop
jb
mov
cmp
xchg
imul
js
lret
cmp
push
cmp
mov
push
dec
sbb
xor
test
cmp
cli
les
jb
push
aad
orb
xor
jmp
idiv
and
and
push
das
and
icebp
inc
jmp
ret
pop
and
cltd
mov
fisttpl
jg
imul
add
lock
data16
js
cmp
xor
inc
test
ljmp
iret
dec
arpl
cmp
addr16
test
mov
ret
data16
les
fisubs
sbb
push
shll
mov
pushf
xor
jo
pop
ret
push
add
jb
mov
push
mov
aam
add
add
xchg
push
jb
mov
call
sbb
mov
or
mov
cli
mov
cmp
pop
popf
add
jmp
sbb
stc
fsubl
aaa
sahf
add
add
stos
jne
mov
dec
int
mov
aad
xor
lods
push
adc
pop
pop
lods
popl
add
add
pop
sbb
je
sbb
stos
dec
lcall
hlt
pop
pop
mov
rcll
cmp
sub
xchg
jne
xor
mov
jg
ja
sub
dec
test
jecxz
or
pop
push
xor
dec
jg
sbb
add
int3
in
loopne
sbb
push
adc
clc
pop
pushf
push
andb
les
dec
jg
cmp
sbb
int3
jg
cmp
pop
or
lods
or
int
mov
data16
xchg
and
rorl
sbb
lea
add
roll
push
fcmovnu
add
out
mov
lret
js
or
ret
mov
loopne
add
mov
mov
dec
dec
mov
int3
push
fcompl
insb
es
mov
cmp
inc
insb
xchg
and
popa
lea
jno
pop
mov
in
ret
jbe
mov
movsl
and
pop
xor
test
std
aad
push
and
and
xchg
lock
fstl
sub
mov
mov
out
lock
mov
mov
pop
ss
sbb
inc
mov
ljmp
fldl
dec
and
jle
test
mov
sarl
hlt
push
and
ja
lea
dec
test
std
aam
loope
add
sbb
and
add
ljmp
xor
aaa
mov
add
leave
cmc
add
lods
pusha
sahf
sbb
push
daa
call
pop
outsb
fistps
mov
imul
pushf
andl
mov
adc
adc
xchg
jg
nop
xchg
mov
add
sub
pushf
pop
adc
loopne
sbb
in
inc
mov
jle
rolb
hlt
and
fmuls
mov
pushf
add
fisttpl
insb
loop
xor
lds
sahf
imul
aaa
ret
mov
mov
mov
fcoml
sbb
xchg
and
pop
jg
mov
jecxz
dec
mov
push
cmp
mov
fisttps
clc
mov
jle
sub
les
ficomps
lahf
cmc
cmp
mov
inc
add
jo
std
pop
mov
pop
mov
adc
xor
andb
mov
jno
aaa
enter
js
pop
mov
mov
orb
adcb
dec
inc
mov
and
inc
push
pushf
pop
inc
in
pushf
lods
inc
or
add
and
int
mov
aam
loope
mov
das
inc
daa
subb
sub
push
cmpsb
int
push
sbb
sbbl
cmpsl
jbe
sahf
stos
shl
sbb
sbb
push
je
add
ret
sub
pusha
insb
pushf
pusha
mov
xchg
sahf
inc
mov
pop
cwtl
icebp
popa
pop
lock
clc
mov
nop
lret
sbb
repnz
enter
outsb
and
insl
mov
sbb
mov
cmpsb
lahf
mov
ret
fwait
add
cwtl
or
mov
adc
pushl
inc
xlat
call
loopne
dec
lods
cmp
pop
xchg
adc
movsb
movsb
cmp
adc
dec
add
inc
xor
fcomp
mov
or
int3
sti
xor
inc
pop
rcl
or
sub
addr16
push
iret
sub
call
sar
out
je
lods
cmpsb
lahf
or
lret
sar
add
sbb
adc
lds
test
icebp
xor
lcall
hlt
jge
hlt
outsl
out
stos
push
push
and
cmp
xchg
nop
lcall
fisubrs
adc
repnz
pop
fcoms
dec
lods
mov
adc
lcall
loope
lods
push
test
cmp
adc
es
xor
dec
adc
dec
cwtl
ljmp
pop
dec
add
sub
fwait
add
jbe
outsb
jg
ret
and
adc
and
cld
pop
mov
into
mov
xchg
fildll
test
push
push
pop
clc
or
rorb
popf
es
and
pop
jmp
add
out
cltd
mov
outsb
cli
inc
je
rorl
pop
and
scas
and
das
icebp
xchg
push
sbb
inc
jno
or
push
ds
mov
push
pop
aas
ljmp
push
cwtl
adc
daa
cmpsb
int3
data16
mov
out
mov
scas
push
clc
test
ret
mov
rorb
ljmp
in
imul
scas
ret
aam
loope
push
mov
xchg
jge
loopne
and
jns
add
xchg
negl
mov
xlat
xchg
mov
repz
cs
mov
xor
fcmove
repz
inc
stc
jl
sub
add
pop
add
and
mov
loopne
je
cmpsb
incl
pop
cmp
aam
orl
and
in
fadds
das
push
das
in
sub
mov
sub
aas
fisubrs
loope
fnstcw
imulb
hlt
adc
xor
mov
loopne
lret
cmp
push
and
lods
inc
inc
xchg
cmp
bound
pop
xchg
test
pop
pop
insb
ljmp
arpl
out
aad
mov
xchg
test
ret
dec
movsb
or
shrb
xor
bound
je
aas
add
movb
cmc
shrl
cli
lock
jne
push
sub
add
enter
xor
mov
mov
or
scas
aam
rclb
jbe
lock
pop
jl
mov
xor
rcrb
add
loope
push
add
cli
adc
mov
frstor
mov
xchg
jmp
mov
and
std
fisttps
ja
mov
scas
adc
or
cs
pop
mov
fiaddl
lock
cld
bound
cs
fs
xor
shlb
xchg
pusha
dec
xchg
add
shll
loopne
pop
stos
cs
inc
cmpsl
and
sbb
push
sbb
mov
mov
jg
mov
sub
inc
insb
loop
gs
jnp
movsl
cld
sarl
jl
sub
mov
xor
xchg
push
ljmp
loopne
dec
xchg
pop
jle
sbb
pop
in
push
daa
mov
pushl
pusha
jmp
fisttps
ror
cmp
ljmp
sbb
mov
and
sbb
xchg
add
imul
sbb
cs
mov
xchg
ljmp
outsl
std
movsl
out
pop
out
sub
jp
ljmp
adc
push
xlat
dec
jnp
sar
nop
divl
loop
orb
mov
sti
and
clc
int3
and
jbe
push
add
fdivs
lods
dec
cli
push
jb
pop
fistl
mov
or
scas
jmp
in
pusha
mov
or
ret
mov
pop
mov
mov
inc
hlt
test
mov
and
push
shrb
insb
test
or
insl
subb
cmp
adc
xchg
into
sahf
and
mov
pop
xchg
imul
lds
mov
adc
xchg
pushf
pop
jns
mov
psubq
das
xchg
hlt
loope
mov
jae
neg
add
adc
inc
imul
and
ljmp
adc
jo
leave
adc
adc
mov
sub
dec
push
repz
lret
add
add
pop
dec
faddl
xchg
into
cli
dec
out
test
pop
into
mov
mov
cmc
add
add
out
jo
hlt
in
cmp
or
inc
insl
pop
aaa
jmp
into
adc
xlat
adc
push
cwtd
push
inc
xor
inc
and
mov
sub
mov
test
add
ja
add
cmc
pop
test
dec
pusha
std
sub
mov
fcompl
xchg
ljmp
inc
in
stc
in
mov
pop
cmp
dec
xchg
cmpsb
jge
add
mov
pop
fmul
mov
pop
or
or
stos
and
xor
sbb
mov
mov
cltd
inc
adc
ljmp
out
push
adc
stos
mov
xor
push
aas
loope
insl
add
scas
inc
jg
rcrl
shl
sub
pop
push
stc
clc
arpl
xchg
inc
mov
lock
push
or
lahf
or
add
sub
cld
rcrl
rcl
push
sarl
es
jns
cmp
cli
adc
jo
shlb
mov
mov
insl
xchg
loop
mov
push
addl
add
xor
mov
jle
mov
jle
xchg
xor
dec
test
test
jge
jo
push
dec
stc
mov
lcall
cmp
adc
out
push
je
js
stos
loopne
mov
pop
mov
repnz
std
lahf
ret
adc
xor
dec
ror
fsubrp
dec
in
add
xchg
mov
mov
sbb
outsl
adc
fistps
jae
push
ds
xlat
paddd
inc
imul
ret
aam
ja
int3
daa
pop
addl
inc
scas
add
adc
call
lock
pop
dec
scas
jl
jle
rcrb
cmp
imul
add
push
jo
test
hlt
iret
aas
pusha
stos
mov
test
decl
adc
push
and
jg
aas
and
mov
mov
add
or
int
adc
adc
pop
iret
sub
xor
mov
pop
ss
sbbb
xchg
aad
fld
inc
jl
ficompl
or
jg
das
jle
push
sti
or
fbstp
fildl
mov
out
mov
pop
sub
stc
or
mov
jmp
sub
and
push
iret
xor
sub
fisubl
sub
fidivrl
lcall
mov
xchg
jg
jmp
inc
rorl
notb
sbb
lock
hlt
outsl
mov
arpl
das
sahf
cmp
or
add
iret
lcall
mov
and
or
mov
icebp
cmpsb
sbb
je
cs
push
incb
dec
pop
or
outsb
iret
mov
add
sub
xor
jl
push
mov
inc
add
or
inc
jle
jl
sub
add
xchg
dec
sarb
mov
inc
cmp
sbb
jl
ja
or
pop
adc
ret
push
push
scas
sub
test
pop
jnp
or
pop
andb
cmc
or
in
adc
into
roll
filds
pop
stc
out
mov
push
mov
nop
pop
or
push
je
jl
inc
les
scas
test
mov
fcompl
out
dec
xor
out
add
rcrb
es
adc
fsts
nop
sub
xchg
stos
mov
test
mov
xorl
jmp
outsb
scas
incw
mov
or
cmp
xchg
cld
sub
es
xchg
mov
fisubs
ja
mov
jbe
test
xor
pop
xchg
mov
lcall
or
test
sub
push
clc
cmc
pop
inc
movsb
in
dec
into
arpl
mov
add
out
mov
out
sbbb
aad
pop
lcall
fisubrl
std
addb
cmp
sbb
loop
aas
dec
push
mov
add
dec
jle
cltd
std
out
lock
sti
mov
cmp
out
popf
pop
sbb
fsubrs
adc
adc
push
mov
or
mov
dec
ror
jb
insl
lret
jo
push
xor
lock
ss
cmc
xchg
clc
jp
addl
lret
inc
mov
push
aaa
mov
cwtl
mov
cmp
cltd
into
pusha
sbb
mov
js
out
push
xchg
roll
in
lret
xchg
dec
iret
mov
or
jno
sbb
inc
in
jne
dec
out
jecxz
int3
incl
dec
jb
popl
lahf
lods
mulb
add
movsb
cmp
and
push
mov
js
sbb
aam
mov
sub
out
stos
push
icebp
lock
aad
pop
push
notb
loopne
sub
adc
sub
or
add
adc
outsl
decb
mov
aaa
or
mov
jo
xor
mov
dec
inc
cld
add
dec
sbb
loope
nop
xor
dec
rcl
lahf
xor
lret
pop
movb
arpl
sbb
ljmp
mov
movsb
clc
pop
or
std
sbb
nop
ljmp
add
fdivrl
dec
jb
inc
filds
sub
add
or
pop
imul
iret
rorl
jns
cmpsb
mov
iret
cmpsl
cld
and
xchg
cmpb
jmp
mov
sbb
test
outsl
ja
loope
mov
stos
jmp
stc
ja
sub
push
mov
add
push
stos
loopne
lods
xlat
push
push
jns
shll
aad
jp
sub
incb
aas
mov
or
xor
pop
jecxz
in
or
jg
mov
pop
sbb
test
cld
mov
push
or
movsb
sarb
icebp
add
pushf
insb
fmuls
adc
lret
xor
iret
or
adc
ja
gs
iret
outsl
incl
lret
dec
js
or
jmp
sbb
outsb
aam
mov
mov
stos
dec
pop
cmp
data16
jg
fcompl
pop
xorb
fstpt
pop
inc
test
jl
gs
mov
pop
pop
lds
pop
mov
and
mov
fistpll
aas
xor
jo
iret
fwait
jne
or
ja
add
sbbb
cli
add
cld
js
hlt
ret
test
cltd
and
jg
rcll
cmpb
mov
lock
inc
xchg
dec
mov
lea
xor
or
rolb
das
loop
lods
sarl
sub
in
push
loop
nop
push
out
and
mov
mov
leave
cmp
rorb
inc
filds
mov
jl
sub
adc
test
push
push
fbld
pop
mov
or
sub
pushf
adc
dec
out
test
popf
mov
mov
pop
mov
mov
xchg
and
les
sub
inc
sarl
pop
fisubrl
mov
sbb
sbb
inc
rcl
sbb
sbbl
or
sahf
dec
mov
sbb
out
push
mov
aad
mov
xor
mov
std
shrl
xor
jmp
jb
push
in
mov
aas
cwtl
add
stos
subl
sahf
jne
outsl
inc
pop
fs
or
push
std
mov
add
cmp
call
cld
xlat
sti
loope
push
and
add
lret
mov
mov
fs
cmc
shlb
into
ret
rol
inc
cmpb
lock
icebp
stc
adc
mov
cmp
stos
clc
loop
sub
inc
data16
in
and
pop
xchg
xchg
adc
nop
out
adc
pop
in
rdmsr
dec
push
jns
mov
push
sahf
stos
iret
and
cld
das
loopne
mov
stc
push
mov
mov
int
pop
adc
rol
cs
dec
pop
push
js
inc
out
jo
imul
xlat
fcomps
or
xchg
jns
jns
test
cmpsl
imulb
addb
jecxz
dec
rolb
je
xor
jecxz
pushf
outsb
lea
pop
daa
or
mov
rcrb
adcb
xchg
add
subl
jnp
mov
cmpl
mov
nop
loop
xor
sub
cli
jmp
xchg
push
js
dec
iret
pop
aam
stos
sbb
xchg
test
add
jl
int3
add
data16
arpl
clc
cmp
fnsave
inc
add
sbb
ret
dec
call
mov
mov
test
ljmp
jo
push
mov
les
cmp
test
and
leave
loopne
lods
mov
pop
cmc
insb
in
push
sbb
cmc
push
ss
orl
imul
add
cmp
inc
imul
rcl
or
je
incl
or
hlt
sub
out
insl
cmpl
ds
jg
mov
lods
xchg
xchg
ds
shlb
dec
data16
fists
inc
lds
stos
xorb
aas
cmpsb
stc
jmp
sbb
cmpsl
and
aad
adc
clc
add
je
stc
fmulp
sarb
ss
in
sbbb
xor
jp
std
andb
jb
xchg
cld
or
xor
cld
xchg
clc
sbb
fiadds
mov
or
sbbl
arpl
and
add
test
push
mov
dec
stos
push
jg
lcall
push
cld
cmc
jp
test
sbb
loop
jo
push
xchg
adc
loopne
xchg
cwtl
jo
cmpsb
loop
rcr
in
sub
clc
sbb
xchg
pushf
add
data16
cwtl
xlat
mov
mov
cli
rcrb
sbb
adc
jg
sub
add
dec
sbb
outsl
fistpll
or
xor
sbb
leave
jnp
cmp
aas
push
das
fst
add
jg
idiv
out
lods
xor
inc
cmp
int3
jae
xchg
shlb
shrl
loope
repnz
push
stos
xchg
nop
ret
add
ret
or
sar
mov
mov
mov
mov
jbe
push
lock
cli
xchg
or
lock
fcoms
mov
inc
jle
vmovlpd
or
pop
dec
mov
jo
mov
pop
inc
fnstsw
push
push
test
jne
sub
nop
clc
subb
adc
rolb
push
call
std
mov
push
subb
cld
out
cmp
xor
jo
test
jbe
mov
mov
jmp
je
push
push
lea
push
popf
movsb
jne
xchg
cmpsl
inc
cld
loop
outsl
pop
dec
orl
test
ds
shll
mov
jb
dec
xchg
mov
sub
cmpb
stos
jecxz
loopne
and
dec
in
adc
cld
jbe
movl
push
stos
add
aam
pop
mov
adcb
pop
mov
add
inc
aad
add
sahf
jno
jmp
popf
out
ficoms
or
inc
jb
xor
cmp
test
sub
fiaddl
ljmp
fmulp
sahf
in
inc
in
and
mov
pop
or
sub
mov
or
scas
mov
sub
sub
loopne
daa
xlat
in
add
and
outsl
mov
jb
hlt
ss
mov
mov
cmc
adc
je
das
lods
inc
hlt
lea
push
aas
push
jae
and
xchg
xchg
mov
lds
loope
addr16
mov
adc
and
or
jl
xchg
pusha
fcomps
sbb
push
test
or
add
nop
icebp
sbb
sbb
popa
adc
cmp
imul
add
xchg
fcoms
hlt
pop
pop
cmp
dec
js
add
loopne,pt
inc
mov
add
in
or
pop
rolb
nop
mov
icebp
ret
in
xchg
aaa
cmp
add
jle
sbb
roll
adc
mov
add
dec
cmp
idivl
dec
and
loopne
nop
cmc
ret
jmp
cltd
mov
inc
call
and
mov
xchg
cli
mov
test
add
int3
subps
add
clc
cmpsl
popa
xor
cmp
pop
push
sahf
mov
push
imul
jb
repz
call
mov
add
dec
cmp
daa
insl
cmp
sub
xchg
xchg
cmpsb
mov
dec
movsb
xchg
adc
jge
or
cmc
adc
scas
mov
and
sahf
ds
xlat
shll
insb
or
pop
mov
jg
sbb
adc
lea
loop
gs
cmp
xchg
cmp
mov
lret
ret
adcl
mov
and
and
mov
push
inc
nop
test
ljmp
sbb
adc
mov
shlb
sbb
add
sbb
subl
pop
or
lock
into
push
jb
rcrb
cwtl
or
sbb
call
pop
imul
clc
addr16
ljmp
and
push
jl
outsb
xchg
fwait
leave
hlt
inc
add
iret
in
js
mov
sub
jecxz
or
and
jg
adc
push
outsl
xor
testl
and
cmp
mov
movsl
push
jg
add
pop
cmp
cld
add
shll
pop
fimull
cmpsl
arpl
inc
cwtl
add
js
jno
addl
dec
dec
and
adc
push
sarb
mov
cmp
lcall
sbb
inc
sbb
leave
lds
loope
sbb
addr16
pop
movups
out
repz
dec
cld
mov
ficomps
xor
mov
hlt
jnp
jl
xlat
or
loopne
jge
inc
sub
hlt
jnp
jno
stos
aad
notl
popf
popa
or
pop
cmp
pop
adc
inc
je
add
test
adc
insb
shrb
xor
in
shl
cmp
dec
ret
add
add
aad
inc
mov
jge
xchg
mov
into
ret
mov
pop
js
sub
out
cltd
subb
mov
mov
and
insl
popa
mov
mov
roll
xchg
add
mov
jl
jge
icebp
das
push
cwtl
and
add
xor
dec
dec
mov
icebp
lret
pusha
mov
mov
sub
lock
cltd
ret
fldt
jae
out
cmpb
sub
adc
fidivrl
xor
dec
das
add
adc
pushf
repz
sahf
not
mov
adc
setle
and
orl
cli
les
jmp
cmp
daa
fsubrl
or
rep
add
shl
add
sub
cld
loopne
cs
jo
rcrl
loop
push
int
cmpsb
sub
lock
push
mov
out
rcrl
add
pop
cwtl
pop
push
in
add
xor
sbb
pop
scas
mov
mov
xchg
das
inc
out
mov
into
aaa
or
jmp
cmp
mov
movsb
sub
mov
mov
xor
push
movsb
sbb
cmp
test
xor
or
jnp
fildl
adc
dec
icebp
mov
or
bound
jl
pop
jo
inc
inc
add
pop
out
add
imul
sbb
popf
push
lock
cmpsb
test
inc
xchg
hlt
test
scas
mov
subl
int3
out
push
and
imul
repz
mov
icebp
mov
cli
rcl
lret
aad
fs
imul
adc
sub
mov
popf
dec
fists
inc
sahf
sbb
push
xor
lds
das
movsl
loop
push
mov
rclb
push
jp
and
loop
ja
out
in
dec
add
sahf
popa
add
shll
mov
ud0
push
nop
and
xorb
mov
das
mov
adc
imul
shrb
or
cmpsb
jno
cld
shl
mov
test
mov
dec
pop
jg
in
negb
push
cvtpi2ps
add
push
cmpb
lds
fbstp
shlb
loop
pop
dec
imul
bound
fisubrl
mov
enter
xlat
lock
adc
xor
cltd
nop
adc
sub
jne
adc
fsubp
mov
filds
inc
add
aam
test
fmuls
xchg
push
inc
or
dec
js
mov
mov
push
shl
adc
out
jmp
sub
pop
dec
adc
test
stos
inc
jno
enter
xor
lods
ficoms
pop
fwait
mov
cmp
or
sbb
pop
test
mov
push
push
mov
in
cltd
mov
test
or
cmc
cld
out
movsb
adcb
push
xchg
xor
jnp
adc
sbb
mov
in
cmp
xor
dec
pop
addr16
xorl
js
nop
or
orl
jnp
cmc
fsubrl
andb
roll
test
pop
loopne
paddusw
insl
daa
in
movsb
aaa
pop
dec
cli
inc
ret
popf
insb
insl
add
adc
pop
cld
cmp
icebp
lock
inc
or
rorl
test
pop
or
int3
jo
stos
dec
or
rclb
mov
xlat
std
ja
in
inc
in
inc
fiaddl
lret
loope
mov
repnz
mov
shr
ss
cmp
xchg
xor
lock
push
les
cld
sbb
cld
sbb
or
add
mov
push
scas
jae
shl
imul
movl
mov
in
push
loop
outsl
mov
nop
int
xchg
cld
or
test
clc
push
jl
push
add
popf
jnp
gs
push
dec
xor
lahf
subl
jge
es
std
les
scas
lahf
pushf
in
mov
pop
dec
daa
arpl
xchg
pop
fdivrl
add
xchg
push
lods
mov
clc
test
in
scas
and
arpl
pushf
ss
or
xchg
enter
daa
cmpsb
imul
test
out
mov
out
xor
enter
or
rolb
int
stos
imul
jo
sbb
push
dec
pop
ds
lahf
mov
jnp
and
inc
aaa
xor
dec
fs
sbb
loope,pn
movsb
movsl
ret
outsl
sub
inc
sub
mov
add
shrb
sbb
add
mov
xchg
call
pushf
cmc
inc
xchg
dec
in
test
cmpsl
adc
mov
fisubl
adc
jecxz
inc
sbb
lods
sub
bswap
add
fcoml
jne
das
nop
cs
fdivs
adc
jecxz
in
or
xchg
scas
cs
pusha
sbb
sbbb
mov
add
std
loopne
pop
add
mov
or
or
mov
pop
aas
add
in
adc
dec
popa
dec
or
pop
out
bound
mov
int
add
dec
leave
scas
push
pusha
adc
sub
push
enter
movsl
mov
scas
mov
pop
outsb
fbstp
sub
xlat
cs
sbb
iret
xchg
stos
pop
ds
and
pop
lods
test
pop
and
sbb
pop
cld
es
push
push
fs
jg
jle
cli
ljmp
sbb
or
lods
sbb
out
sbb
pushl
push
dec
insl
adc
jmp
dec
cmp
std
mov
and
sahf
into
sbb
pop
cmp
jl
vminss
loope
stos
push
mov
inc
inc
int3
or
or
jmp
or
jmp
stos
mov
mov
dec
js
int3
or
in
push
call
loopne
pusha
mov
or
add
dec
xlat
bound
cmp
les
push
test
xor
mov
loopne
js
dec
push
sub
sarb
inc
in
setl
cs
push
lret
push
cld
lret
ret
sbb
test
and
mov
cmpsl
xlat
mov
rcr
xlat
cmp
cmpsl
clc
les
pop
mov
jg
cli
sti
stos
rcll
sbb
and
insl
adc
insl
arpl
inc
cs
icebp
inc
dec
push
adc
mov
xor
xor
es
cs
lea
xor
out
adc
pop
pop
jl
jne
imull
mov
adcl
jp
xchg
roll
add
test
xchg
stos
out
push
adc
mov
sub
inc
call
leave
mov
mov
add
ja
push
pop
mov
sbb
ret
sahf
add
pmullw
sbb
lods
add
mov
jge
fildl
inc
mov
pop
xor
ljmp
out
sub
adc
add
jb
decl
outsl
mov
mov
inc
or
dec
mov
add
aas
or
jmp
push
rclb
add
sub
inc
push
jge
out
push
jl
je
xor
dec
shrb
sbb
dec
scas
arpl
add
jg
or
rorb
push
inc
sbb
cmpsb
negl
pop
cmpsl
or
adc
out
out
scas
jnp
lds
addb
adc
sub
push
mov
cs
cli
stc
jo
cmpl
lea
push
in
iret
mov
insl
adc
ret
test
jno
scas
fwait
cmpsb
cmp
insb
and
mov
and
das
xor
lock
cmp
cmp
add
add
push
filds
ret
testb
cmp
jb
mov
idivl
loope
popa
popa
adc
sub
insl
shrl
mov
pop
sbb
hlt
xor
sarb
xchg
fimull
push
or
das
push
pop
fs
fwait
lock
pop
jns
push
mov
rorb
lock
push
das
pop
enter
lds
jno
mov
add
cld
sub
leave
enter
sub
fwait
movsl
sbb
cld
push
push
adc
psubd
cmc
mov
inc
std
repz
test
inc
sti
cld
aam
cld
adc
stos
cmp
xchg
int
sbb
add
and
pushf
cld
sub
fstpl
sbb
xor
xor
lret
ret
push
iret
pusha
imul
mov
cmc
fstps
push
xchg
aas
adc
cmpsb
lcall
add
push
xor
cli
fs
adc
adc
lock
jle
push
rolb
fcom
push
stc
pop
adc
mov
sbb
add
add
or
int
add
dec
pop
xchg
jnp
aas
pop
lock
sub
xchg
imull
lock
jecxz
insb
setge
lcall
scas
fdivrp
icebp
repnz
add
rorl
jl
adc
leave
loope
loopne
and
mov
jmp
hlt
add
daa
adc
pop
sbb
push
dec
mov
push
iret
mov
call
sbb
inc
outsb
cli
sub
or
imul
call
out
adc
mov
fdivs
roll
iret
pop
insb
int3
pop
popa
mov
mov
sub
dec
lret
out
aad
xchg
das
and
es
shlb
imul
fisttpl
dec
jecxz
or
sub
lret
mov
xchg
mov
jp
lock
daa
in
pop
mov
test
jecxz
jnp
cmp
out
or
sbb
insb
bswap
test
inc
insb
mov
or
adc
in
cmpl
aad
mov
cmp
scas
xor
mov
addb
push
and
and
cmc
imull
inc
mov
stos
xchg
cmp
popa
pop
or
insb
fsubs
inc
push
jl
loopne
push
and
inc
dec
jae
xor
stos
cmp
icebp
incl
call
add
fidivrl
sbb
insb
loope
in
into
loope
sub
dec
ret
inc
jns
jecxz
add
jbe
loope
inc
dec
mov
loopne
shrb
push
sub
cmpl
sahf
sbb
in
scas
in
jno
push
fsubrs
jo
lret
test
pop
dec
push
mov
hlt
mov
xlat
or
fmul
movsl
clc
push
rorl
out
inc
setne
mov
mov
je
pop
dec
push
sbb
mov
lret
cmp
in
movsb
mov
adc
cmpl
sub
pop
add
rcll
adc
push
lea
jmp
pop
aaa
loop
push
mov
mov
out
mov
dec
or
and
add
js
cltd
inc
sbb
fists
ja
sub
insb
xchg
jg
test
lcall
fsubrs
sub
daa
mov
pop
pop
adc
push
xchg
pop
jo
inc
push
inc
mov
divl
in
out
negb
adc
jg
push
in
sub
addl
es
pop
cmp
pop
or
add
out
jno
rorl
dec
pop
push
dec
mov
add
dec
das
ja
adc
mov
or
andb
xchg
andb
fs
xabort
jl
xchg
movsb
ds
mov
mov
add
movsl
sbb
test
jmp
in
xor
mov
push
bound
dec
add
subl
inc
and
or
dec
jl
xchg
js
out
and
inc
xchg
xor
mov
sbb
mov
sbbl
mov
mov
shrl
mulb
jno
mov
and
push
sbb
inc
mov
adc
jge
enter
mov
stos
mov
insl
shrl
icebp
push
call
xor
or
add
lret
inc
loope
loop
inc
cmp
push
jmp
cmpsl
ds
add
push
xor
cmpsb
and
cmp
movsb
popa
xor
dec
jl
inc
inc
and
xor
out
and
and
and
std
and
dec
in
adc
dec
jmp
imul
ljmp
fdivrs
adc
rolb
or
xorl
pop
push
and
sbbl
or
std
add
pop
js
and
decl
ror
movsb
adc
movsb
cmp
xor
adc
mov
ss
xchg
outsl
and
stc
add
loopne
push
ja
cmpsl
loope
pop
jo
in
jmp
mov
xchg
and
and
rorb
sbb
test
push
loope
cmp
frstor
xor
xchg
pusha
mov
test
in
nop
or
mov
pushf
ss
sahf
pop
adc
insl
ret
clc
mov
xchg
adc
sub
xchg
and
cli
frstor
dec
dec
mov
in
pop
loop
sbb
push
adc
xor
pop
aam
test
add
xchg
jecxz
jle
dec
mov
mov
xor
rcr
jge
cld
or
mov
sarl
clc
shll
adc
punpckhbw
cmp
rcrb
insb
xchg
xor
inc
xchg
push
lahf
xchg
xor
pop
jg
add
dec
dec
aaa
jp
les
sarb
mov
mov
mov
mov
add
stos
sbb
mov
and
push
sbb
mov
test
cmpl
xorl
mov
mov
test
xchg
std
fmuls
sbb
or
lods
stc
in
lods
jp
into
xchg
sbb
cltd
inc
js
iret
imull
jge
mov
rolb
js
scas
inc
es
decl
inc
lods
lods
bound
xchg
mov
inc
sub
pushf
and
pop
sbb
addb
divl
inc
mov
leave
push
mov
mov
stos
cmpsb
mov
jbe
idivb
pop
shlb
push
test
je
sub
insb
mov
xchg
cmc
push
js
fadds
inc
add
sub
cmc
dec
in
dec
leave
cltd
sbb
fildl
xchg
or
std
shl
add
mov
sar
pop
cmp
adc
push
jne
aam
icebp
scas
xorb
mov
dec
int
data16
lcall
mov
adc
scas
cs
cmc
mov
push
orl
xchg
or
outsb
dec
aam
push
push
outsl
mov
mov
stos
dec
into
mov
dec
inc
adc
sbb
mov
imul
pop
int
lahf
cmp
fwait
and
aad
push
rcll
mov
js
icebp
inc
ljmp
ret
push
movsb
inc
adc
add
mov
or
sbb
push
pop
jle
mov
cmp
cmp
adc
pushl
sub
lret
pop
leave
movsb
push
aam
insb
es
rorb
jg
xchg
pop
bound
inc
es
pop
adc
mov
aad
stos
cmp
jno
out
add
mov
cmp
loope
mov
ja
pop
test
aad
scas
in
cmp
or
lret
mov
xlat
aas
mov
adc
aam
mov
mov
mov
xor
cmp
sbb
or
in
pop
mov
add
insb
dec
push
js
cmp
jg
sub
cmp
imul
adc
sbb
jg
mov
sbb
rcr
adc
push
mov
mov
or
sbb
push
mov
test
mov
adc
lahf
ljmp
dec
std
iret
add
or
jae
test
push
pop
push
push
mov
stc
sti
or
xchg
mov
fs
push
cmp
sarl
mov
pop
mov
lods
int
ss
cmp
lods
pusha
xchg
hlt
cwtl
outsb
lods
push
stc
arpl
fwait
adc
das
add
in
fadd
push
cmpsl
add
scas
xchg
push
test
xor
xchg
inc
mov
decl
dec
dec
test
xor
pusha
push
aas
fstl
incl
repnz
xchg
ret
add
arpl
repz
in
xchg
jo
push
adc
push
nop
push
sbb
test
xor
pop
jp
sub
mov
cltd
jle
dec
xchg
jp
fisubs
jle
testl
rcll
hlt
jb
incl
into
test
dec
ss
adc
rol
sub
sti
test
rcrl
inc
cmp
fwait
imul
test
lret
push
test
std
test
cmp
clc
pop
or
xor
xchg
shlb
or
xchg
mov
push
out
movsl
std
clc
pushf
iret
test
inc
pop
arpl
inc
jp
cwtl
negl
insl
mov
cmpb
lock
cs
jp
stos
adc
add
adc
add
and
insb
fistpll
mov
in
mov
and
add
dec
cmc
popf
mov
lea
xchg
cmp
ss
dec
or
cltd
insb
fsubr
sub
push
inc
inc
add
and
push
add
mov
mov
sbb
mov
fdivrs
adc
xor
lahf
lea
jmp
mov
dec
mov
xor
dec
push
push
jo
jl
es
push
cltd
rcr
sub
ljmp
jmp
iret
xor
subl
add
cli
inc
enter
pop
clc
call
nop
int3
insb
int3
jecxz
jbe
and
adc
cld
or
into
je
popa
add
mov
lret
pop
ds
sbb
dec
push
out
and
out
leave
in
fcmove
push
sub
movsl
imul
loop
aad
add
addr16
mov
pop
or
add
stos
pop
lods
sbb
lock
push
pop
jbe
mov
push
inc
mov
cmpsl
cmp
icebp
jno
push
icebp
adc
mov
xchg
or
push
jb
dec
xor
das
cli
cmp
pop
repz
xchg
addr16
or
lds
stc
and
mov
insl
xor
rorl
out
sub
pop
xchg
cmp
adcb
cmc
jge
ja
and
pushf
lret
push
and
jmp
rorl
psubsw
mov
jecxz
rorl
inc
adc
add
push
es
dec
leave
jl
ret
pushf
and
dec
inc
out
loopne
mov
sbb
pop
test
xchg
mov
mov
roll
dec
mov
add
xor
imul
add
inc
cmp
nop
xor
dec
arpl
daa
rolb
loope
pop
inc
xor
push
loop
mov
scas
push
or
xor
aas
das
jecxz
mov
adc
add
xchg
sbb
ret
gs
adc
add
fsubl
mov
pop
sub
aaa
cmpsb
addb
mov
idiv
adc
pop
ret
xor
or
imul
inc
fimull
call
dec
adc
cmp
insb
push
mov
pop
lds
dec
iret
into
and
call
cmp
push
cs
fiaddl
mov
addl
fs
inc
cmp
xchg
lock
push
sahf
dec
mov
cmpsb
push
push
fwait
push
frstor
shrb
and
sub
mov
mov
scas
fadd
filds
mov
enter
pop
add
insb
mov
or
xchg
ja
ljmp
adc
dec
faddl
in
int
xor
push
cld
pop
orl
sub
ds
ja
stos
ljmp
fbld
dec
js
cmp
mov
push
mov
imul
hlt
lods
fs
sub
adc
icebp
mov
pop
sub
lock
xor
mov
mov
inc
mov
add
cmpsb
sbb
push
pop
incb
dec
mov
xchg
repnz
xor
pop
gs
inc
cwtl
xor
pop
mov
das
jnp
add
enter
dec
and
mov
and
popa
jmp
sbb
push
rcr
push
idiv
adc
bound
adc
sbb
enter
inc
out
int3
mov
adc
and
or
mov
idivb
fwait
xor
adc
xchg
es
adc
adc
push
jg
js
in
dec
inc
pushf
lea
and
add
ds
jno
addr16
and
pop
dec
rorb
lds
cmp
lock
inc
pop
scas
fsubrl
mov
stos
and
gs
inc
inc
sarb
mov
xlat
xor
jmp
or
sub
fmull
xor
mov
shrb
mov
mov
cmp
pop
jge
xor
push
int3
and
inc
ja
or
fisubrs
imul
andl
filds
xlat
add
cmp
icebp
insl
dec
es
iret
popf
enter
mov
in
mov
in
aas
xchg
sahf
hlt
js
xchg
bound
pushl
inc
push
jecxz
and
test
xor
sub
and
xor
adc
or
sub
add
mov
dec
scas
jne
or
into
in
push
push
fidivs
out
push
orb
xchg
ja
mov
les
shll
and
or
mov
xlat
inc
aaa
xchg
cld
rorl
xor
mov
outsb
add
stc
in
iret
and
mov
pop
shlb
aas
sbb
adc
mov
lcall
cmp
stos
mov
subl
jbe
push
data16
rdtsc
mov
ror
loop
leave
xchg
inc
push
ljmp
or
popa
leave
je
iret
popa
pop
pop
pusha
mov
push
fnstcw
sub
orb
hlt
mov
or
mov
int
cmpsl
test
mov
adc
mov
sub
or
negl
sbb
or
psubb
mov
int
test
scas
stos
push
stos
stos
jmp
or
out
jp
mov
loop
dec
or
add
pop
xlat
loop
jg
push
xor
pop
mov
gs
pop
or
mov
aas
xchg
mov
rolb
pop
imul
cwtl
bound
aas
stc
sti
idivb
loop
in
clc
enter
adc
adc
out
dec
inc
or
shll
jp
test
das
roll
in
mov
in
sbb
repz
sbbl
xchg
mov
sbb
cmp
jp
mov
jg
repz
mov
fs
lods
sbb
xor
adc
and
repnz
xor
jge
mov
loop
jnp
inc
int3
jp
inc
cmp
xor
imul
pop
jns
ss
pop
lods
xchg
addr16
adc
dec
or
sbb
pop
push
xor
pop
mov
add
sub
scas
movsb
lret
mov
or
pop
or
mov
ds
mov
jbe
call
clc
jp
sbb
ja
jo
cld
mov
imul
xorl
and
loop
jmp
xchg
xchg
and
or
mov
imul
loop
dec
dec
das
lock
dec
jno
mov
leave
mov
aaa
in
add
out
push
mov
jp
push
mov
shll
icebp
lock
testl
xor
dec
add
jae
ja
je
sbb
jb
outsl
inc
xchg
inc
mov
add
dec
add
xlat
das
push
sub
cmp
popf
cmp
dec
fsubl
fidivs
xchg
les
pop
sbb
cli
daa
sub
vcvtsi2sdl
xor
xchg
out
mov
inc
pop
inc
xor
xchg
fdivs
icebp
mov
dec
or
dec
jbe
add
dec
outsb
mov
push
xchg
jge
adc
xlat
loop
addr16
cmp
xchg
add
imul
add
inc
addb
nop
lds
addl
hlt
cmpsb
cmp
adcb
daa
jecxz
loopne
subl
and
imul
mov
insb
cmp
rcr
movsl
mov
insb
movl
pusha
add
inc
cmpsl
mov
jae
pop
stos
mov
repz
repnz
out
scas
aaa
inc
lret
fidivrs
sub
jb
jb
and
jmp
xchg
cmp
iret
mov
sbb
js
or
fldenv
jnp
add
aas
adc
inc
cs
std
adc
sarl
push
push
and
js
mov
pop
ss
roll
ljmp
aaa
bndldx
hlt
loope
imul
jp
shr
int3
lock
mov
mov
scas
xor
aaa
ret
cmpsb
mov
mov
cwtl
lea
mov
sbb
cld
call
lock
dec
roll
add
cmpsl
out
cmp
xor
xchg
mov
inc
in
nopl
push
lea
faddl
jmp
mov
loopne
mov
mov
pop
call
xchg
mov
dec
jmp
fmuls
fs
dec
sbb
sbb
call
out
aas
push
outsb
adc
xorl
or
mov
dec
pop
adc
cmp
icebp
test
sti
mov
fisubs
test
add
mov
xchg
loope
mov
adc
mov
aas
jns
repz
cmc
test
xchg
roll
cmp
inc
rcr
pop
repnz
sub
xor
scas
ret
push
lock
std
imul
xchg
das
fisttpl
xchg
pushl
mov
inc
test
adc
aaa
cltd
adc
push
lods
inc
gs
loope
adc
add
pop
rolb
adc
inc
mov
imul
jg
mov
sub
dec
js
pop
icebp
inc
cwtl
lcall
sahf
and
jno
pmaxsw
mov
shll
adc
sub
adc
xchg
fsubs
int
cmpsb
push
fwait
and
xor
mov
xor
jns
add
push
mov
jge
decl
mov
pop
add
mov
lods
mov
mov
shlb
hlt
mov
inc
outsl
lock
out
stc
cmpsb
mull
jnp
or
jo
js
pop
adc
add
aad
lret
xor
or
push
push
adc
cld
test
std
mov
aam
adc
ja
rcrb
add
lds
hlt
sahf
cld
jl
or
shrl
lcall
icebp
xor
outsl
hlt
punpckhdq
mov
jb
sub
ss
mov
mov
andl
cwtl
jle
icebp
dec
push
decl
xchg
cmp
jnp
mov
pshufw
xbegin
lcall
pop
hlt
daa
loopne
mov
jmp
push
pop
dec
push
mov
aas
xor
sahf
mov
bound
imul
lock
adc
inc
pop
sub
arpl
shll
ffree
pop
xchg
mov
adcl
push
push
cwtl
push
xor
cvtps2pi
inc
jg
inc
dec
adcb
pop
lds
adc
icebp
lods
inc
out
stos
pop
push
mov
and
lcall
into
fs
push
jmp
sar
ljmp
mov
imul
xchg
movsb
fisttps
add
ret
mov
push
mov
pop
stos
test
mov
ficoml
sbb
adc
shrb
jge
mov
jg
inc
fidivs
pop
jnp
faddp
sub
aas
mov
leave
ret
fwait
shll
sti
shrl
and
lret
xor
arpl
popf
push
xchg
sub
cmp
movsb
daa
jmp
pop
notl
xor
push
mov
jg
cmpsb
sbb
or
add
imul
and
loopne
push
stc
mov
mov
inc
cmp
jg
sbb
adc
outsl
mov
lods
cmpsl
cmc
pop
std
jecxz
mov
sbb
dec
cmc
xchg
push
in
mov
jae
inc
cli
xor
sti
pop
icebp
pop
repnz
jle
add
data16
xor
cmp
dec
addl
mov
lcall
incl
pushf
push
outsl
mov
xor
int
incl
orb
cwtl
sub
jl
std
das
jns
or
pushf
push
orl
sbb
stos
adc
mov
aaa
aaa
push
test
pop
jo
pop
into
pop
jb
cmp
subb
lcall
loop
les
std
orl
or
fmull
mov
lret
and
repnz
aaa
and
or
pop
sub
jns
cld
or
jge
mov
adc
inc
fxch
pop
mov
sbb
add
sarb
ret
pusha
xor
push
stc
pop
movsl
sbb
es
push
dec
cmp
sti
adc
dec
sarb
push
pop
daa
pop
push
out
adcl
jecxz
test
dec
and
or
mov
addl
mov
sbb
push
fs
and
push
xor
iret
lods
mov
pop
mov
cwtl
les
push
dec
add
cmp
mov
push
jg
sub
pop
sbb
sub
mov
std
xchg
push
cltd
mov
or
fisttps
sub
sbb
fst
add
js
imul
addr16
icebp
iret
je
push
adc
mov
inc
inc
scas
inc
cld
daa
test
mov
sbb
mov
aad
sub
inc
fiaddl
add
mov
sbb
mov
mov
bound
fnstcw
adc
jo
pop
fdivrs
push
or
adc
scas
inc
dec
cmc
data16
xchg
cld
and
pop
pusha
or
pusha
xchg
or
sbb
xorl
adc
mov
sbb
pop
mov
mov
mov
xchg
xchg
pop
movsb
mov
push
dec
mov
test
lahf
movsl
xor
outsb
lock
mov
rcrb
jnp
pusha
loopne
std
ret
test
loopne
mov
test
rclb
xor
mov
cmp
dec
cli
in
adc
xchg
cmp
test
add
stc
xor
addr16
pop
xor
adc
cs
jg
add
push
adc
sar
dec
push
movsb
loope
jmp
add
dec
mov
rol
das
and
sub
xor
ret
aad
lods
and
sub
add
dec
flds
sbb
ret
push
ret
fisubs
mov
mov
add
push
adc
and
movsb
push
sbb
jns
xchg
clc
and
into
mov
out
add
dec
push
daa
adc
into
imul
addl
push
adc
ret
pop
add
lcall
push
inc
push
jbe
lods
test
or
into
or
pop
cmpsl
push
bnd
inc
fs
test
and
fisttps
fcoms
call
push
ret
mov
movsl
aas
pop
lret
mov
cmp
adc
adc
or
xchg
dec
xchg
dec
lods
xor
mov
sti
add
jae
mov
and
incb
mov
jle
aaa
lds
std
or
push
xor
jl
js
xor
sub
sar
rcrl
decb
xor
jge
mov
mov
or
inc
mov
fiadds
mov
arpl
adc
pop
int3
xor
push
nop
scas
cmp
scas
jl
inc
push
jbe
jne
inc
jmp
adc
mov
notb
inc
sti
dec
cmp
jae
filds
or
addl
out
or
and
lahf
and
mov
cpuid
xlat
les
test
mov
xor
adc
sar
popa
pop
inc
pop
jnp
xchg
ss
sub
aas
add
fidivl
loop
xor
ljmp
jp
repz
bound
outsb
out
xor
enter
shll
xor
ljmp
lret
add
shl
insl
daa
call
adc
lea
aad
push
std
mov
out
ss
mov
and
mov
pop
das
push
push
mov
pop
pop
lahf
xchg
fisubs
push
add
or
fwait
mov
push
mov
js
dec
dec
adc
mov
pop
in
popa
xor
adc
insb
pop
jbe
sbb
ffreep
or
lds
jg
lret
mov
cmp
pusha
stc
js
xchg
std
inc
dec
pop
sahf
or
inc
pop
push
mov
jbe
push
xchg
add
sub
dec
mov
cmp
jg
enter
aaa
lret
pop
inc
sbb
test
add
popa
loopne
lds
mov
pop
decl
stos
gs
aam
mov
lods
js
inc
pop
iret
adc
decl
lahf
dec
stos
fsts
fs
add
pop
cmpsb
inc
jb
es
xchg
scas
xor
adc
jb
int
test
imul
push
cs
int
inc
adc
in
jb
add
mov
add
pop
dec
lea
sub
mov
add
lock
int3
sbb
imul
xchg
add
add
popa
add
jno
ret
pop
cmp
or
popl
fimull
outsl
mov
ljmp
filds
outsb
cmp
mov
add
lds
mov
out
sar
call
push
xchg
mov
or
adc
and
inc
repz
rolb
xor
test
dec
jg
shlb
ret
add
push
mov
inc
pop
jg
scas
pop
sub
cmp
aad
or
ljmp
pop
adc
repz
or
dec
test
int3
aad
sub
jecxz
mov
dec
lcall
adc
mov
and
push
in
sub
or
stos
outsb
notb
lods
pop
mov
jle
je
hlt
pop
mov
aas
mov
push
data16
pop
pop
inc
or
and
or
stos
js
and
stos
lods
pop
add
std
jg
xchg
jo
dec
fiaddl
jmp
movsb
call
lods
push
negl
push
out
lret
push
in
loopne
das
insb
or
jns
mov
adc
xchg
rclb
push
and
pushf
cmp
add
loope
jecxz
hlt
call
fs
or
adc
xlat
cmpsb
test
pop
fcmovnb
push
outsb
int3
xor
mov
mov
inc
int3
test
pop
fld
lret
out
lcall
jae
out
insb
hlt
dec
xor
popf
call
xchg
cli
pop
mov
ret
or
pusha
ret
aaa
mov
shl
mov
fimull
xor
xor
ss
js
inc
and
push
jns
aas
lock
mov
xchg
shll
bound
imul
pushf
xchg
adc
imul
test
push
pop
add
cmpsl
mov
adc
js
add
jecxz
cmp
mov
mov
fadds
nop
shll
ret
filds
sarb
sub
add
addr16
js
enter
jbe
daa
add
lea
and
sbb
jg
cmp
roll
push
add
sub
jl
push
jo
movsbl
rorl
shrl
iret
mov
loopne
or
int
mov
cmp
aad
fistps
jnp
enter
pop
jmp
cli
pop
cli
repz
mov
dec
lods
faddp
mov
jecxz
lods
loope
xchg
adc
lea
jge
adc
cmpl
mov
notl
xor
and
add
fdivl
push
cli
xor
and
adc
mov
sub
push
je
jg
xlat
stos
sub
sub
push
jmp
stos
hlt
fwait
sub
idivb
cmc
jmp
jno
rcll
in
sub
repnz
adc
dec
std
pop
test
or
cltd
inc
hlt
addb
jo
dec
hlt
outsl
cs
inc
gs
fstp
and
aas
fbstp
and
insb
stos
sbb
or
clc
xchg
or
jg
jl
jge
scas
adcl
xor
pop
cmp
cmp
mov
lods
into
pop
lret
js
push
cmc
out
popa
inc
add
cmpsl
out
fdivr
dec
call
pop
or
incb
les
dec
and
adc
and
or
or
sti
mov
cld
and
jl
daa
loope
pop
popf
fdivr
mov
js
jmp
inc
cmp
pop
loope
and
gs
xor
mov
and
pop
push
pop
les
sbb
lods
insl
mov
add
add
cwtl
ds
aam
lcall
insb
mov
or
pusha
lahf
dec
xchg
rcrb
jg
adc
in
test
xchg
rclb
push
jae
cmp
bound
nop
add
mov
dec
adcl
shr
xchg
add
adc
cmp
jg
icebp
push
and
stos
dec
shll
push
clc
les
out
mov
mov
out
xchg
cmp
jle
sub
sarb
push
addl
inc
in
sub
lret
dec
gs
push
sub
and
out
dec
lock
popf
mov
adcl
ret
fdivs
es
lret
or
add
cmp
out
add
jmp
and
mov
scas
jne
int3
mov
add
mul
xor
ljmp
nop
pop
std
or
xchg
cltd
xchg
add
int
sbb
mov
ret
and
jmp
scas
inc
xor
sub
incb
inc
das
lcall
inc
or
cmpl
cs
aaa
ret
push
mov
sub
add
mov
push
dec
inc
xchg
dec
jb
lods
stos
into
mov
mov
insb
orb
icebp
aad
jg
jns
mov
and
add
test
push
imul
push
mov
stc
add
fisttpll
test
ljmp
sahf
cmc
testl
sbb
mov
insl
rolb
pop
jge
inc
xchg
rcl
xor
or
or
and
add
xor
cmpsl
outsb
icebp
jl
in
or
fistl
pop
cli
icebp
lods
int
cmpb
fcmovnb
push
cmp
imul
icebp
pop
sahf
ja
stos
adc
pop
sub
push
das
mov
xor
dec
mov
jae
mov
dec
or
bound
jae
clc
imul
jno
sub
into
xchg
inc
es
xchg
mov
arpl
in
fstl
and
push
rcl
dec
pop
sbb
adc
xor
pop
or
add
aas
pop
jns
fnstcw
jne
sbb
mov
lahf
sub
sbb
std
in
mov
sbb
sbbl
sahf
inc
pop
sub
cwtl
add
xor
addb
jl
and
dec
cmp
in
in
movsl
and
jno
divb
aam
lods
flds
cwtl
pop
adc
scas
in
pop
jge
add
gs
int
imul
ljmp
sbb
mov
push
scas
sub
xor
stos
fistpl
jecxz
divb
sbbb
les
push
mov
dec
out
aad
cmc
mov
test
sub
aam
xchg
mov
pop
ret
jmp
cmp
and
dec
sbb
add
push
and
imul
cmovns
add
aaa
mov
mov
and
dec
aam
xlat
push
cmp
pop
popf
push
dec
mov
cmpsb
add
pop
mov
inc
int3
mov
push
inc
inc
and
mov
jl
pushf
xchg
mov
pop
adc
adc
sbb
cli
into
jnp
xor
or
cmp
dec
rclb
adc
push
sub
inc
xor
insl
pop
enter
cmp
test
js
mov
pop
in
cwtl
sar
lea
lret
rol
and
daa
cmp
insb
jp
xor
cmp
stos
imul
cltd
jp
push
jp
cmp
pop
pslld
add
cld
add
dec
mov
push
sub
mov
cmp
jp
sub
mov
jnp
jo
hlt
fsubrs
sti
outsl
push
and
cmpsb
adc
xorb
out
inc
rorl
push
mov
test
mov
inc
pop
fwait
mov
sar
adc
jno
or
dec
jne
sbb
mov
adc
mov
xchg
add
push
inc
xchg
jge
das
aaa
mov
jg
pop
divl
sub
dec
push
or
in
add
mov
test
cmp
adc
ds
mov
popa
pop
cs
scas
adc
sbb
and
ljmp
xor
inc
cmp
sub
aad
jae
add
ret
rclb
adc
ret
dec
xlat
xchg
adc
jne
out
adc
mov
push
ret
xchg
adc
jmp
xchg
and
push
cmp
nop
add
daa
popa
xor
lods
mov
mov
push
push
pop
sbb
add
xchg
cmpsl
cmpsb
pop
cmpsl
pop
decb
sub
cli
sub
andl
ret
push
jae
and
out
add
or
orb
sub
out
sub
dec
test
dec
push
jle
dec
mov
ret
mov
insb
mov
cli
in
imul
jno
rcll
iret
xor
mov
mov
xchg
or
dec
mov
add
imul
nop
inc
jb
push
xchg
daa
aas
or
xchg
cwtl
add
test
addr16
or
ljmp
jp
or
pusha
cmp
jle
inc
test
adc
mov
xor
jb
testl
dec
adc
in
ss
hlt
xor
add
push
adc
dec
in
sbb
pop
adc
and
daa
es
movsl
add
cmp
mov
ret
xchg
ds
divb
add
lahf
call
test
pop
xchg
aad
push
jnp
xor
mov
popa
jmp
jecxz
ss
adc
inc
js
loopne
sbb
jne
shl
inc
add
enter
mov
inc
imul
xchg
ljmp
test
movsl
cmp
jge
sbb
bound
xchg
repnz
dec
sarl
mov
push
pop
dec
sbb
ret
hlt
insb
popa
mov
or
loope
mov
cmpsb
shll
push
pop
cwtl
lods
inc
in
insl
test
add
sbb
push
sbb
dec
adc
jbe
push
sub
aam
lock
cwtl
xor
into
lods
inc
lods
pushf
or
in
aaa
pop
xchg
rol
sti
nop
mov
inc
lods
mov
add
pushf
fisubrl
mov
nop
cmpsb
adc
clc
add
and
add
inc
add
dec
popf
inc
rcl
insl
push
mov
data16
aad
mov
ds
aam
sbb
mov
loop
dec
adcl
xchg
mov
les
pusha
and
les
push
icebp
in
mov
mov
sti
inc
lea
in
or
or
jne
xor
add
lock
mov
sbb
jle
inc
and
cmp
xor
dec
daa
jo
xlat
jae
lret
lods
xchg
cmp
cmp
dec
fldl
push
mov
mov
fisttpll
shlb
inc
dec
dec
sub
dec
daa
or
lret
cs
sbb
ljmp
jo
js
insb
icebp
in
cmp
push
nop
int
call
fsts
jl
sbb
inc
fcmovnu
cmp
push
add
call
cmp
out
scas
push
jg
insb
lahf
jg
mov
xor
out
sar
pop
or
add
data16
sarb
sbb
or
clc
jne
and
scas
push
rorl
inc
repz
add
jecxz
shl
loop
call
sahf
ror
rcll
ror
daa
into
xor
jo
mov
or
fucomi
mov
jmp
and
pop
adc
lcall
shrl
leave
test
out
popa
sbb
lret
push
dec
jl
out
out
les
jg
add
fs
out
sbb
sbb
insl
cmp
cltd
sbb
ljmp
gs
es
xor
push
rcrl
cmpsb
cld
pop
lods
add
pop
xchg
insb
adc
popa
jecxz
mov
adc
pop
add
sbb
and
inc
popa
jno
inc
rorl
imulb
pop
xor
xor
adc
xchg
and
adc
fcmovnbe
cmp
push
movsl
lods
mov
cmc
xor
out
lret
add
cmp
subb
stos
jae
into
push
jg
pusha
shll
int
xchg
or
xlat
sub
dec
subb
push
adc
stc
or
psrad
sbbl
ret
fstpl
or
lret
arpl
jbe
test
jecxz
cld
mov
pop
cmp
pop
or
xchg
jno
int
add
or
xor
test
or
xor
jne
nop
in
jp
ljmp
gs
js
aam
push
push
dec
pop
jmp
inc
sub
xlat
stos
ljmp
mov
jb
mov
cltd
xor
jmp
test
add
cwtl
setae
push
scas
cmpsb
jge
ficoms
sahf
icebp
xor
mov
and
cld
xor
pop
mov
cmp
ficomps
cmpsl
cmp
insb
inc
xor
or
pushf
movsb
test
adc
addr16
cmp
push
sub
cmp
inc
sub
jp
es
arpl
out
mov
std
js
sbb
jns
push
ss
dec
int3
xor
xchg
sbb
mov
jecxz
sbb
dec
add
repnz
repz
mov
push
mov
int
sarb
repnz
test
leave
or
mov
push
xchg
mov
xor
pop
cmp
cmc
adc
movsl
out
in
mov
push
rorb
add
pusha
adcl
mov
push
and
inc
xchg
xor
lds
mov
dec
xchg
cmp
sub
jmp
push
mov
test
xchg
xchg
gs
and
mov
push
sbb
inc
lret
cmp
test
pushf
or
dec
incl
cmpb
iret
hlt
mov
pusha
and
cmp
push
push
add
les
in
enter
sbb
loope
pusha
push
mov
into
mov
pop
mov
leave
sub
and
mov
inc
dec
inc
das
sbb
aaa
arpl
inc
push
inc
lret
or
jbe
arpl
or
clc
hlt
add
ja
pop
daa
pop
mov
mov
mov
xchg
mov
sbb
pop
das
fs
xor
adc
mov
sbb
or
jge
jnp
mov
cmpsl
gs
imul
icebp
mov
ss
pop
je
lods
fmulp
cmp
arpl
lods
rcll
xchg
addl
mov
ljmp
jp
jle
jb
cmp
in
sbb
fisttps
cmp
sahf
popa
sub
popa
in
dec
js
mov
jle
sub
ret
ret
scas
mov
and
js
adc
inc
dec
inc
aas
clc
cmp
jmp
aaa
push
sub
daa
push
adc
pop
movl
or
loop
push
mov
sub
or
das
out
fwait
test
push
lcall
test
jge
mov
add
pop
dec
mov
jne
test
call
push
mov
and
cmpsl
fisubl
cmp
lods
jge
and
cmp
sbb
mov
ret
loop
cltd
notl
or
mov
cs
adcb
sub
daa
lea
dec
dec
pop
add
lds
int3
outsl
in
jge
shl
sub
push
mov
xor
add
or
mov
fcompl
andl
inc
daa
sub
inc
adc
xchg
int3
aas
jns
shrb
xor
adc
xorl
mov
mov
iret
cmc
cmp
xchg
jne
mov
push
shll
xchg
or
gs
in
cmp
push
imul
xchg
adc
add
dec
push
jo
mov
xorl
imul
or
xlat
push
in
ficomps
sbb
mov
icebp
mov
push
push
cmp
and
add
inc
sub
stc
mov
popa
adc
push
dec
repnz
add
xchg
cmp
mov
pop
jmp
sub
nop
shlb
push
mov
lods
mov
aaa
and
in
or
push
adc
fdivrs
pop
xchg
cltd
ss
push
addr16
sahf
xchg
xchg
mov
daa
nop
ljmp
addb
fcoms
add
ja
popa
rcrb
dec
gs
and
icebp
push
adc
mov
pop
mov
mov
push
test
pop
scas
jle
push
testl
and
fisttpll
ss
test
filds
inc
scas
insl
cli
xchg
and
or
xchg
adc
and
aad
pop
sbb
xor
xchg
aad
aad
jg
xchg
add
dec
call
dec
xchg
daa
jo
mov
mov
mov
in
aas
dec
sbb
mov
pop
into
adc
fcmovnb
xlat
in
xchg
mov
or
loopne
and
cld
inc
popf
add
push
xchg
orl
ss
mov
data16
adcl
jg
mov
popf
jl
lahf
stos
mov
sbb
imul
cmp
frstor
cmp
lret
rorb
add
mov
loopne
mov
mov
and
fs
nop
dec
loop
jecxz
sti
movsb
ja
fstl
jo
cwtl
dec
jnp
dec
lahf
push
pusha
int
mov
xor
pop
mov
dec
and
idivl
fs
lock
mov
jmp
and
mov
xchg
jae
sub
pop
popa
dec
sbb
out
mov
mov
xchg
jecxz
pop
inc
movb
sbb
movsl
push
movsl
inc
cmpl
mov
and
stos
jmp
dec
jo
lods
xor
xchg
das
cwtl
sub
int
or
scas
pop
add
push
in
push
int
mov
imul
sub
inc
stos
iret
cmp
adc
adc
clc
mov
add
inc
divl
loop
inc
nop
cmpsl
testb
aad
add
jl
imul
push
mov
in
inc
lds
cli
mov
outsb
movsb
mov
adcl
adc
into
movsl
add
jno
or
pop
fildll
add
inc
pop
inc
add
pop
in
dec
xchg
cmc
int
or
mov
lea
xchg
sbb
sub
in
mov
jecxz
in
stos
xchg
addr16
xchg
fbld
iret
rol
mov
dec
pusha
mov
in
or
dec
movb
je
inc
xchg
loope
jle
das
lcall
add
lea
add
push
jg
insl
stos
cmp
sbb
rorb
inc
je
dec
inc
mov
sbb
daa
leave
sub
mov
and
push
rcr
xor
js
inc
in
jns
std
fimull
popa
push
cmpsb
mov
sbb
aas
scas
ret
push
sbb
lods
sbb
fcompl
loope
add
into
fxch
cmp
repnz
mov
stos
xor
sub
mov
jmp
je
jnp
popf
mov
fists
cmpsb
lods
stc
shll
lret
ret
test
mov
inc
in
sbb
mov
mov
out
int3
jns
adc
orb
fnsave
fwait
jecxz
fisttpl
sbb
xlat
dec
in
dec
jecxz
xor
ss
pop
and
cmpl
fistpll
loope
enter
add
inc
jnp
adc
pop
xor
loope
lcall
xor
insl
sub
sub
gs
sbb
add
add
mov
call
sub
mov
cltd
fcoml
std
push
inc
jg
int
and
mov
stos
lock
xchg
iret
adc
push
mov
je
or
xorb
rolb
pop
inc
stc
sbb
pop
lock
or
push
add
aam
pop
mov
cmp
mov
mov
bswap
xchg
ret
test
rolb
lea
lods
mov
adc
dec
lds
loopne
pop
loopne
xor
sub
aam
adc
pop
jge
mov
add
aas
pop
sbb
rcrb
lahf
jmp
rorb
push
inc
ret
lcall
in
pop
pusha
adc
sbb
xchg
sub
movsb
xor
jo
test
or
push
jo
xor
fldl
sbb
dec
cmp
mov
scas
aad
mov
cmp
inc
adc
cmp
fsubrs
arpl
jg
add
faddp
and
jnp
push
rorl
xchg
and
fmuls
lock
jmp
inc
xorl
inc
dec
clc
sbbb
ret
cwtl
xchg
pop
jae
test
cmp
movsb
jnp
dec
jne
jo
mov
push
ja
inc
or
jp
mov
mov
jecxz
xchg
and
clc
lock
mov
stos
xchg
sti
pop
mov
mov
xchg
loopne
cmpb
jmp
sub
pop
jno
pop
mov
loope
and
xchg
movsb
xor
mov
mov
movsl
inc
daa
hlt
jl
mov
pop
fstpl
add
insb
and
outsb
int
mov
jge
jg
xor
jmp
push
insl
repnz
mov
push
repnz
loopne
clc
imul
int3
inc
cld
mov
scas
sub
stos
xor
add
hlt
movsl
or
sti
in
test
xor
loop
notb
aaa
bound
test
jo,pn
scas
or
inc
inc
inc
scas
std
nop
add
jle
push
sbb
xchg
scas
jge
cmp
mov
fimuls
push
or
fwait
push
mov
clc
sub
movl
xchg
jp
shlb
or
negb
cmp
fstpl
xor
jbe
test
imul
cli
loope
push
adc
inc
fistps
sti
mov
scas
outsb
and
sub
mov
stos
pop
loope
rolb
sub
mov
pop
xor
addl
into
lds
mov
and
pushf
pop
add
inc
shrb
pop
daa
cmc
ljmp
cli
adcb
mov
xchg
mov
jb
jle
mov
and
push
popa
jnp
in
ror
and
cltd
pop
mov
pop
popa
xchg
xlat
xor
icebp
xchg
jbe
lret
stos
dec
adc
inc
add
jnp
mov
and
flds
cltd
out
call
inc
movsl
jmp
inc
pop
cs
xchg
imul
inc
xor
cli
lods
pop
push
lea
and
test
jecxz
and
push
loopne
jl
adc
shll
ds
fisubl
dec
lea
push
or
mov
xchg
mov
pop
sub
sti
test
mov
sbbb
in
mov
gs
shll
fdivl
dec
cmp
lcall
mov
mov
mov
stos
cmp
outsb
or
rcrl
adc
pusha
xor
pop
sbb
pop
jo
xchg
xchg
rclb
pop
add
mov
fildl
xor
cld
sti
mov
jg
loopne
loope
push
add
rorl
xchg
adc
pop
xchg
push
repz
and
outsl
divb
lcall
imul
scas
les
adc
ficoms
repz
fwait
je
add
xchg
xor
push
popf
push
jmp
aaa
cli
push
sbb
sbb
mov
and
mov
pop
cmp
mov
fstpl
aad
sub
js
and
sub
pushf
stos
mov
fldt
and
jmp
inc
movsb
pop
sbb
fnstsw
jle
inc
outsb
pop
mov
in
fsub
nop
test
lds
inc
ja
push
dec
mov
sbb
js
xchg
add
or
clc
gs
mov
xchg
sub
cmp
lds
push
rcrb
cmp
icebp
sub
loop
les
in
or
ret
jle
cld
in
iret
test
mov
mov
cmc
mov
mov
dec
mov
mov
pop
es
shlb
les
push
insl
movsl
pushf
pop
and
xor
sub
out
in
mov
jp
pop
je
xchg
out
shr
andl
push
inc
push
add
lock
test
mov
add
sti
dec
jno
or
cmp
cmp
js
psubd
xchg
rclb
lcall
push
loope
jae
nop
dec
adc
and
je
cli
je
pop
je
dec
lcall
jg
add
loope
add
aam
inc
dec
cld
lods
iret
aas
push
incb
push
or
jge
xlat
and
mov
sahf
xchg
insb
add
mov
mov
or
inc
imul
inc
xorb
mov
jne
push
mov
cmpsl
pop
xor
jnp
stos
daa
in
or
inc
mov
aaa
push
jl
in
inc
push
icebp
dec
out
lcall
push
jno
icebp
inc
jmp
push
and
lock
sub
int3
inc
pop
lahf
jp
into
lods
lret
imul
lock
mov
leave
mov
pushf
in
repnz
aam
mov
hlt
jb
daa
adc
xchg
dec
jbe
aas
loopne
test
std
xchg
cli
rolb
in
dec
jmp
cli
jle
aam
pop
jno
repz
push
jecxz
nop
imul
out
fnsave
lock
dec
jge
or
ljmp
sbb
jl
cmpsl
mov
idiv
mov
imul
lea
mov
cmp
pushf
mov
outsb
dec
bound
out
aas
mov
aaa
dec
inc
and
cld
adc
push
mov
cmp
mov
jne
cmpsl
lock
jmp
sub
notb
adc
insl
icebp
insb
lods
mov
mov
sub
cmp
cmc
inc
inc
mov
jmp
jl
ss
rorl
jne
bound
mov
inc
loopne
adc
xchg
jbe
xlat
xor
sahf
push
cwtl
add
mov
jecxz
lea
mov
dec
call
xchg
mov
loopne
dec
les
lret
jns
std
testl
cmpb
movsb
or
xor
in
pop
out
std
cli
xchg
jp
sub
mov
sbbl
and
loope
pop
pop
lahf
cld
and
adc
xor
or
push
adc
into
adc
sub
mov
insl
sub
jge
subl
imul
nop
jnp
lods
insb
sub
mov
rcr
enter
xchg
mov
stos
add
pop
mov
push
out
ds
fbld
cld
push
pop
cmpsl
loopne
push
cmpsl
sub
das
aam
xchg
sub
xchg
mov
popf
test
das
iret
movsb
test
xor
cmp
fidivrl
push
push
pop
mov
jae
push
push
test
clc
sarb
pop
sbb
pop
sar
cmp
xchg
test
xor
popf
mov
ds
push
inc
std
jae
jae
test
add
jb
inc
sti
leave
xlat
das
xor
jbe
pop
adc
loop
xchg
into
rcll
mov
mov
arpl
sbb
push
sbbl
ds
in
cmc
shr
out
sbb
mov
mov
xor
sbb
cmpsl
leave
push
mov
gs
jge
pop
lret
sbb
lea
sti
sbb
insl
fdivs
out
mov
adc
push
ss
loope
push
jae
cmp
repnz
imul
pop
mov
mov
xchg
dec
inc
popa
scas
imul
jbe
shlb
adc
fwait
scas
or
sub
add
lahf
outsl
je
hlt
inc
cmpb
mov
xor
iret
outsb
sub
nop
test
ret
ss
rorl
jnp
aam
inc
add
mov
jns
cmp
jo
cmp
mov
pop
adc
adc
and
les
sbb
pop
jno
jb
insb
inc
mov
mov
sbb
pop
cmp
aad
lret
xchg
mov
iret
in
lock
loopne
cld
push
pop
lods
push
dec
xchg
negl
fdivrl
negl
aaa
xor
lods
add
inc
loope
mov
setg
and
and
lea
or
mov
mov
mov
andl
jl
jo
stos
jmp
leave
lods
push
xchg
pop
xchg
rorb
xchg
and
xchg
mov
insl
mov
mov
cmp
push
mov
inc
cmp
sbb
cmpsl
add
scas
push
pushf
mov
pop
inc
or
cwtl
movsb
scas
xorb
fucomp
push
mov
cs
xor
pop
lret
cmp
or
sub
out
scas
cmc
out
stos
aaa
das
repnz
and
div
sbb
jl
ja
pushf
ffreep
sbb
rolb
add
inc
inc
xor
or
adc
andl
mov
pop
loopne
sub
enter
add
fsubrp
add
add
fldenv
shll
insb
and
lds
mov
mov
mov
xor
cmovo
mov
or
mov
pop
aam
push
sbb
std
mov
fwait
sarb
jmp
les
cmp
loope
lds
scas
dec
popa
insb
jo
pop
clc
jne
inc
fadd
and
pop
cmp
adc
sbb
sbbb
loopne
and
push
push
adc
leave
pop
pop
ret
pop
push
jle
push
mov
jecxz
mov
xchg
decl
imul
int3
sub
adc
mov
xchg
into
bswap
movsl
jbe
mov
dec
push
into
jmp
pusha
lea
stos
mov
fisubs
add
js
loop
loope
jae
sbb
clc
or
mov
aaa
jge
and
cli
in
les
push
or
sbb
add
pop
mov
ret
xor
xchg
adc
imul
dec
lret
iret
adcl
fwait
stos
sub
movsb
sarb
orb
dec
xchg
dec
or
or
jmp
loop
pop
sbb
and
arpl
fwait
inc
inc
aas
add
lods
movsb
pop
std
insb
cs
mov
and
mov
sub
into
sbb
out
rorb
pop
shrb
push
aas
jle
icebp
fwait
icebp
rcll
popf
shr
adc
inc
add
jmp
and
xchg
mov
add
pop
mov
adc
pop
push
jae
sbb
push
into
jp
inc
pop
xchg
inc
out
mov
push
mov
in
xchg
and
pusha
fsts
gs
xchg
iret
loopne
mov
mov
cmp
sub
out
cli
add
test
sub
lret
dec
fucom
or
lret
jbe
mov
lds
not
sub
cwtl
je
xchg
in
mov
lcall
cmc
cli
sbb
mov
add
in
dec
push
push
ss
ljmp
adc
ja
cltd
jmp
movsl
or
pusha
add
push
dec
pop
sub
sahf
dec
pop
cwtl
or
xchg
addl
out
cmc
push
mov
insl
sbb
sahf
and
insl
rcl
jb
xchg
das
std
mov
lods
out
out
sbb
cld
jb
mov
out
push
jb
sbb
js
mov
icebp
je
jne
inc
mov
mov
xor
popa
adc
pop
lock
orb
cmp
sbb
jo
sub
inc
call
addl
add
jle
or
cmp
cmp
int
add
pushf
xor
jo
arpl
mov
int3
push
insl
mov
push
cmp
popf
fistps
mov
lahf
sub
movsl
inc
sub
xchg
jo
aas
adc
sub
pop
insl
fs
xchg
cmp
push
lea
nop
or
xchg
push
mov
cltd
pop
stc
rol
add
inc
cli
push
aam
movsl
mov
mov
test
subb
sub
ljmp
mov
xlat
je
data16
ret
mov
sbb
lock
or
popf
shrb
and
out
mov
movsb
inc
roll
sub
push
fsubl
and
movsb
xchg
add
cltd
and
jo
xchg
or
mov
adc
cmp
fucompp
adc
dec
inc
or
jno
xor
cmc
adc
jbe
rclb
jmp
lods
loope
mov
fxtract
outsl
add
cmp
adc
and
push
and
inc
xchg
xchg
js
jle
sbb
mov
pop
iret
lock
xor
add
pop
mov
mov
xor
pop
dec
cmc
push
clc
movsl
xchg
xchg
pop
cld
rolb
call
add
imul
inc
mov
cmp
fldcw
mov
inc
mov
scas
jge
insl
lahf
pop
js
testl
test
cltd
inc
sbb
adc
push
int
adc
mov
enter
xor
outsb
mov
sbb
sub
repnz
mov
pop
mov
jnp
in
iret
pusha
and
cmp
out
mov
inc
cmpsb
sti
pop
cmc
fiaddl
pop
xlat
mov
jne
mov
cmp
mov
call
adc
jp
add
xchg
add
add
rcrl
inc
inc
cmp
xchg
push
scas
loope
fildll
sbb
lock
int
add
jmp
adc
add
sbb
fildl
fs
repz
push
iret
xchg
push
sbb
and
rolb
in
es
pop
nop
inc
mov
movsl
out
test
adc
mov
iret
pop
sbb
sbb
rcrl
jmp
adc
sbb
and
push
cmp
cmpsl
sbb
aad
fcomip
push
scas
add
sbb
or
lret
push
dec
sysret
jne
clc
dec
lcall
outsl
push
cli
xchg
movsl
negb
popf
std
jmp
stos
jo
adc
xchg
stos
mov
inc
fdivrs
mov
jae
dec
repz
ficomps
and
xchg
or
mov
ret
xchg
loop
sub
pop
scas
sbb
imul
popf
cld
push
xchg
cmpb
in
and
add
mov
insl
mov
orb
fisttps
aas
inc
imul
lds
fwait
shrl
insb
icebp
and
adc
sqrtps
push
ljmp
jb
or
daa
push
clc
iret
mov
pop
rorl
sub
hlt
lcall
loopne
loopne
popa
lea
push
aas
int3
int
sbb
mov
mov
out
jl
push
dec
lea
and
xor
testb
mov
jecxz
pop
testb
ja
stos
jnp
mov
mov
dec
or
dec
fldcw
sbb
inc
xor
mov
and
mov
cwtl
xchg
cld
js
add
sub
inc
lahf
cmp
cmp
jecxz
ss
mov
dec
jecxz
js
pop
cmp
lea
ljmp
jl
xchg
jp
push
xchg
cli
pop
pop
add
scas
pmaxsw
adc
add
cmp
cmpsl
rolb
rolb
sti
sbb
mov
jae
sbb
ficoms
xor
adc
mov
add
add
cs
mov
cmp
sub
adc
xchg
jnp
shl
imul
xchg
ret
imul
ret
imul
jecxz
add
mov
imul
fbld
aaa
stos
jns
rolb
cmpsl
dec
stos
cmp
mov
andl
jae
mov
clc
aam
mov
cmp
sbb
xchg
jg
mov
bound
push
leave
mov
cmpsb
sbbl
inc
push
dec
push
mov
xchg
outsb
xlat
mov
test
jmp
push
lds
adc
add
es
inc
sbb
inc
loope
xchg
repnz
mov
add
sti
pushl
lahf
lret
ss
and
inc
int
out
or
pop
packsswb
pop
cli
es
mov
rol
mov
xchg
lock
lock
jb
pop
push
dec
xchg
shl
stc
push
dec
lods
test
xor
add
cs
xchg
jg
jmp
outsl
adc
mov
adc
imul
dec
je
in
xchg
fisubs
pop
add
in
add
mov
nop
cmp
loopne
sti
addr16
jne
push
jecxz
shlb
enter
in
subb
xchg
fstpl
loope
add
mov
dec
cmp
clc
add
frstor
loopne
pop
ror
scas
mov
out
inc
jle,pt
sbb
subb
cmp
pop
jbe
adc
xchg
and
loop
imull
iret
xchg
add
or
push
sbb
push
outsb
dec
jno
stos
pop
hlt
cmp
pusha
pusha
jb
loope
xor
add
andl
xchg
mov
out
filds
sub
aad
xchg
sbb
sub
imul
add
fildl
adc
jmp
adc
std
out
or
stc
scas
sahf
arpl
cmpsb
xor
pop
cmp
inc
xchg
add
mov
dec
ret
mov
jae
mov
xlat
lahf
xor
mov
scas
es
in
sub
nop
and
mov
out
into
and
pop
imul
pop
xchg
mov
pop
add
adc
bound
jecxz
xchg
cmpsb
cs
insl
add
dec
insb
push
popa
dec
or
jne
push
sub
add
add
jae
cmp
outsb
imul
add
fistpll
cmp
jp
sbb
jecxz
lea
movsb
orl
stos
sbb
jmp
xchg
stc
mov
xchg
mov
cmc
or
jl
cmc
mov
inc
pop
or
pop
mov
or
int
cmpsl
lods
loopne
adc
cmpsl
ret
iret
lret
sbb
pop
in
out
inc
rcll
adc
lock
dec
sbb
add
push
add
gs
fadds
adc
jp
xchg
cwtl
movsl
jnp
movsl
iret
cmp
add
push
sub
je
sar
xor
cmpsb
mov
adc
dec
cwtl
shll
mov
shl
mov
and
mov
repnz
clc
inc
adc
xchg
pop
sti
out
jg
pop
xor
mov
sbb
mov
sbb
sub
addb
insb
mov
cmp
cmc
shrl
inc
or
int3
xchg
pop
lcall
mov
dec
mov
jbe
jmp
or
mov
in
jmp
cltd
lods
repnz
sbb
fmuls
and
sbb
adc
cwtl
and
inc
pop
clc
ret
ja
fsubrs
dec
mov
jo
push
call
xor
scas
daa
lods
mov
or
mov
mov
inc
in
pop
ljmp
cmp
mov
mov
push
mov
or
shlb
pop
nop
aad
sarl
mov
pop
ja
push
xor
fsubp
cmp
jle
pop
pop
out
int
pop
jge
mov
insl
das
test
push
jo
xor
jnp
push
inc
out
jg
mov
inc
adc
flds
sub
sbb
movsb
jg
mov
push
leave
js
ljmp
adc
or
outsb
mov
mov
inc
std
push
dec
fists
fimuls
push
aaa
ret
jne
add
lahf
sbb
xchg
push
add
popf
adc
cltd
inc
push
pop
sbb
dec
inc
jno
insb
push
addr16
in
bound
xchg
rcll
add
movsb
in
push
fcoml
adc
cmpsl
cmpsl
imul
int
lods
mov
loope
rcrl
test
fistl
lret
ljmp
cmp
jp
fimuls
call
cmp
mov
push
mov
lods
stos
cmp
adcb
fadds
sub
dec
dec
jae
cmp
cmp
inc
pop
pop
mov
rorb
mov
push
ror
and
add
add
inc
push
fsubrs
pop
or
std
popf
lret
rcll
insl
loop
call
sbb
cmp
sbb
mov
add
ret
mov
loop
daa
dec
cmc
ja
jecxz
xor
stc
sub
sbb
lahf
lock
aad
test
inc
xchg
stos
loope
sub
adc
sub
rolb
fcmove
push
add
inc
inc
rcrb
push
ss
aas
push
nop
pop
adc
sub
jbe
in
pop
cmp
in
mov
scas
clc
jecxz
pusha
ljmp
ds
cli
in
or
and
jbe
jo
cmp
adc
in
lret
mov
jp
lcall
sar
inc
fiadds
pop
pop
xor
rcll
shrl
decl
mov
lahf
lods
sbb
and
lcall
jns
jp
out
icebp
andb
aad
inc
or
stos
push
ret
adc
cli
leave
outsb
scas
or
bound
ljmp
in
test
call
dec
fnstenv
mov
or
cmp
ss
in
hlt
in
fs
sti
call
or
pusha
sbb
cs
mov
cmp
xor
xchg
xorl
push
or
inc
js
ret
insb
dec
lods
push
mov
js
push
xor
cmp
push
cmp
xor
pop
adc
dec
shr
movsb
testb
mov
fisubl
int3
sbb
lods
xchg
xor
mov
add
jl
jne
xchg
dec
push
jecxz
inc
sbb
fistpll
add
loope
inc
lods
das
push
add
pushf
sbb
cltd
push
shl
xor
ljmp
push
or
cmpsb
cwtl
gs
mov
in
cmpsl
aam
sub
pop
cld
pushf
clc
adc
xor
cmp
enter
mov
push
inc
imul
gs
pop
pop
adc
add
insl
out
push
data16
jnp
bound
lock
pop
popf
ret
xchg
pop
sub
leave
in
add
lret
sbb
pop
lcall
jae
jge
xchg
xor
mov
lcall
test
xor
sbb
mov
inc
cmp
cld
decl
mov
mov
sarb
cli
dec
cld
popf
and
in
and
test
inc
xchg
cli
subb
adc
stos
lods
xor
lods
ds
pusha
jbe
sbb
xor
xor
pop
imul
mov
sbbb
cmpsl
adc
test
in
dec
or
mov
lea
push
and
sbb
adc
jno
push
fidivl
pop
push
test
inc
subl
mov
jle
dec
loop
push
jae
aas
shlb
lret
mov
push
jg
xchg
fwait
int
sbb
rclb
lea
ss
xchg
xchg
push
cmp
xlat
sbb
add
sub
shl
lods
jno
push
pop
mov
add
fists
ret
ds
jbe
inc
mov
sbb
xchg
sub
push
xlat
das
jle
cmp
scas
pop
pop
das
jl
data16
dec
inc
xor
and
push
lods
mov
xor
mov
lcall
xchg
jmp
movsl
pop
xor
push
popf
inc
push
aas
jl
mov
inc
in
or
cmp
pushf
ss
movsl
dec
jge
xchg
cltd
out
addl
rcrb
mov
loope
clc
cwtl
add
push
aas
mov
or
loope
mov
push
sbb
inc
fwait
repnz
cmp
inc
loope
sbb
and
xchg
in
out
adc
pop
cs
push
outsl
iret
or
cmp
xor
xchg
mov
fidivrl
mov
adc
imul
xchg
jle
sbbb
jne
lods
aas
fwait
cmp
lahf
dec
add
mov
out
mov
adc
add
movsl
movb
les
mov
icebp
pop
arpl
sahf
xchg
pop
shl
cmp
cmc
mov
inc
or
dec
in
mov
push
sub
jl
jge
dec
pop
xchg
popl
sbb
sub
push
outsb
or
push
inc
sbb
sub
fwait
and
ja
inc
jle
jg
mov
shlb
jo
pop
jl
popf
loope
std
dec
lods
mov
adc
add
sahf
cmp
sub
dec
mov
jmp
mov
fsts
xor
stos
mov
adc
lea
xchg
lcall
into
jge
xchg
sub
lahf
ficoms
jbe
ret
jle
inc
rcll
aas
pop
inc
cmpsb
stos
xchg
or
add
pop
cmp
push
adc
ret
mov
sahf
adc
add
xor
rcrl
cli
dec
bound
pop
xor
sbbb
icebp
pop
arpl
out
and
sbb
fadds
pop
mov
rorl
inc
add
sti
or
pop
mov
and
dec
dec
xchg
aaa
pop
cwtl
pop
adcb
xchg
lcall
xor
push
das
jge
test
faddl
imul
icebp
rolb
incl
data16
int
mov
cmpsl
jb
xchg
xchg
sub
mov
dec
loopne
push
mov
fidivs
mov
stos
xor
aam
shrb
call
push
inc
push
adc
mov
imul
xchg
and
test
xchg
ds
ds
push
loopne
fdiv
pop
ljmp
jne
mov
insb
add
add
xor
mov
xlat
shrb
rclb
or
mov
cmc
mov
jl
pusha
sub
movsb
jle
push
sub
pop
push
shrb
ficomps
add
lahf
dec
add
shr
pop
jp
push
jp
popf
push
xor
adc
sbb
fs
sbb
mov
add
gs
repnz
mov
cmp
xor
mov
das
aam
push
mov
dec
mov
pushf
push
lds
gs
leave
pop
movsl
xor
sbb
sbb
inc
or
jo
test
push
repnz
cld
es
or
or
outsb
lea
sub
inc
loop
push
cld
je
cld
add
mov
rcrb
sarl
and
inc
mov
dec
test
push
ret
adc
and
call
push
incl
add
mov
adc
jmp
scas
ret
sbb
or
pop
jns
jl
cs
xor
xchg
mov
sbb
daa
add
les
push
mov
push
aas
adc
sub
pop
xchg
mov
mov
aad
fdivrp
adc
lahf
jnp
xchg
in
xlat
and
sar
loop
xorb
enter
loope
mov
jbe
pusha
push
xchg
push
adc
jno
in
sbb
or
cmp
dec
push
insl
clc
sbb
cmp
movsb
xor
and
lahf
mov
mov
jno
imul
and
loope
scas
mov
lock
lock
nop
outsb
insb
mov
cmc
dec
inc
out
in
adc
push
push
in
lret
xor
ja
inc
aad
stc
inc
xchg
pop
dec
or
jns
push
les
cwtl
and
cmpsl
xor
out
sub
mov
pop
pop
popa
cmp
jo
push
shrb
sar
roll
aam
mov
shlb
icebp
push
stos
dec
or
jmp
movsl
add
ret
inc
loopne
xor
rol
out
out
push
push
cwtl
mov
xchg
push
nop
out
pop
cli
orb
inc
lods
out
push
mov
inc
int
lock
xabort
mov
mov
jo
or
or
into
cltd
loop
push
mov
pushf
repz
mov
loop
jmp
xor
mov
cmp
mov
arpl
mov
lahf
mov
ljmp
enter
add
subl
cltd
lea
lret
and
fadd
iret
ret
xchg
addl
outsb
imul
lods
hlt
int3
and
test
add
pushf
pop
jp
loope
test
outsl
xor
insb
and
adc
dec
xor
jne
cs
pop
scas
int
rcl
iret
cmp
adc
lea
jo
jecxz
pop
and
cmp
sbb
xor
push
xor
divb
andb
aas
cmpsb
xchg
jp
lods
push
cmovno
push
xor
addl
cli
mov
jb
sbb
inc
idivb
leavew
fisubl
or
adc
addr16
sbb
das
mov
loopne
push
lret
sbb
hlt
sub
iret
pop
es
sti
jmp
daa
shlb
or
or
mov
sub
bound
push
pop
push
pusha
popa
fmull
mov
test
push
cs
add
andb
test
mov
ljmp
fwait
cwtl
push
jo
dec
inc
fsubrl
arpl
jae
inc
add
pop
loop
movsl
test
cmpsb
loopne
das
aam
and
out
movsl
sbb
sub
fimuls
sbb
xor
add
icebp
filds
mov
xchg
cwtl
push
shll
xchg
push
mov
add
cmpsb
jp
fdiv
push
mov
xorb
sbb
ret
imul
add
sbb
mov
ret
jae
jg
dec
mov
cmp
idivl
sub
mov
lods
adc
std
cmp
sbb
cld
aaa
jmp
iret
adc
shll
rcrb
mov
sbbb
pop
cli
inc
mov
rcrb
cwtl
lcall
gs
adc
repz
mov
loop
sbb
sbb
daa
dec
out
sbb
cmp
test
inc
and
jno
mov
fmull
test
sbb
mov
sub
mov
pop
pusha
sbb
push
pop
jns
mov
pop
dec
dec
inc
rcll
gs
testb
xor
ljmp
outsl
ljmp
xor
movsb
addb
movsb
xchg
loopne
lea
lock
stos
test
sub
pop
fsubr
lahf
les
mov
popa
cld
mov
fists
movsb
sub
andl
mov
sbb
addb
jl
ret
mov
dec
mov
pop
mov
js
and
dec
testl
and
add
lock
jecxz
cmp
xchg
xchg
fcoml
test
incl
or
xorl
adc
mov
daa
lcall
jl
stc
xchg
xor
xchg
or
je
stos
xor
inc
cmp
add
rol
pop
cmp
sbb
xor
adc
and
cmp
sbb
xor
pop
popa
lods
shlb
mov
and
pushf
icebp
push
and
fs
addl
stos
leave
add
imul
sub
mov
movsl
jb,pt
jns
xor
jmp
cli
cmc
push
jne
cmp
in
test
inc
adc
test
push
adc
enter
insb
movsb
inc
insl
and
jle
cmpsl
into
ss
sub
pop
clc
and
jne
sbb
xlat
les
xor
sbb
stos
jl
sub
push
push
pop
pusha
pop
or
adc
lods
setne
test
push
pusha
jne
and
inc
divb
cmpsl
sbb
scas
and
int
inc
pop
inc
and
cmp
adc
shll
rolb
xchg
iret
adc
fimuls
aaa
push
stos
mov
sub
es
gs
mov
test
mov
mov
xor
aad
mov
push
mov
test
stos
test
adc
xor
loopne
push
mov
adc
mov
xchg
mov
mov
sbb
testb
rclb
out
sub
or
nop
lods
mov
scas
pop
popa
mov
les
push
sub
sub
inc
sbb
loop
jo
loop
mov
jne
adc
or
movsl
js
ficoml
jg
mov
lods
dec
pusha
mov
dec
outsl
in
and
in
or
imul
pop
dec
mov
push
push
inc
dec
push
sub
dec
mull
iret
push
mov
sbb
popf
push
xchg
add
test
sub
cmpsl
test
shrl
setge
loope
test
sbb
movsl
and
cmp
jns
mov
adc
mov
ss
into
jl
inc
xchg
inc
xor
or
pop
cmc
mov
rorb
test
mov
gs
test
jne
dec
out
aaa
cmp
push
mov
mov
shll
cmp
imul
jbe
mov
sbb
sarl
aaa
cltd
out
lock
sub
rcrl
in
push
dec
ret
js
dec
lcall
faddl
icebp
pop
ret
and
stos
mov
or
or
insb
pop
adc
adc
and
pusha
adc
andl
and
push
loopne
adc
xor
adc
dec
add
loope
mov
pop
in
sahf
jbe
mov
push
call
pusha
mov
or
lods
jo
xorb
aaa
pop
jno
xchg
fiaddl
adc
mov
mov
aad
ljmp
jmp
pusha
xor
cmp
inc
cmp
aam
add
cmp
fsubl
dec
xlat
mov
adc
sbb
movsl
push
mov
cld
xlat
add
pop
fcmovnu
call
js
xchg
mov
inc
xchg
cmp
jmp
clc
jo
inc
test
out
add
and
pop
icebp
xchg
jmp
xchg
call
cs
pop
stos
lcall
and
lcall
cmc
and
fs
pop
lds
adc
ljmp
sub
jge
xchg
cmc
mov
push
push
mov
es
mov
push
add
insl
cmp
popa
notb
es
or
dec
daa
sbb
aas
dec
push
sbb
inc
add
jl
xor
xchg
or
adcl
pop
cmc
dec
cmp
adc
test
mov
repz
xlat
xlat
inc
add
add
or
cmp
cmp
mov
xchg
mov
xchg
dec
pop
inc
and
scas
push
sub
inc
dec
sbb
add
pop
adc
stos
fwait
mov
mov
cmpsl
pop
pop
jl
imul
add
cmp
sub
cwtl
repnz
bound
push
jb
push
pop
xor
ret
enter
and
jmp
pop
inc
mov
repnz
sbb
inc
pop
push
pop
call
dec
xchg
pop
in
fwait
sbb
iret
loop
push
cmc
clc
pop
sti
mov
pop
pop
or
cli
cmp
cld
add
jge
sbb
pop
jmp
adc
xchg
or
xchg
cwtl
dec
notb
loop
sub
xchg
sbb
stc
mov
lea
lea
call
mov
sub
mov
sub
ret
mov
adc
mov
sub
insl
add
rclb
pop
addb
xchg
xor
push
sbb
data16
sbb
lods
hlt
mov
dec
and
insl
xchg
pusha
mov
or
pusha
inc
xor
out
add
add
jno
inc
ss
or
jge
jmp
cmp
rorl
stc
jecxz
and
clc
adcl
stos
sti
aaa
cmp
movsl
mov
int3
sub
rorl
mov
outsl
testb
sbb
pop
in
aam
sar
mov
icebp
stos
fs
nop
xlat
dec
data16
add
fnsave
sbb
mov
lock
push
lcall
gs
mov
mov
push
cli
pop
jne
insl
sub
ds
outsl
rcll
and
imul
rol
and
ret
repz
je
cmp
lret
xchg
mov
lods
or
xchg
push
shrl
cld
aad
inc
cld
sbb
out
and
sub
add
and
mov
addb
hlt
and
xchg
aam
sub
lea
scas
pushf
stc
cmp
rclb
and
or
jmp
adc
popa
and
pop
lcall
fstl
scas
loop
xchg
js
lea
sarl
test
push
lds
ret
cltd
sbb
jl
cs
dec
lea
sbb
fisttpll
cmp
push
mov
push
iret
out
adc
sub
outsb
adc
lret
rolb
divl
adc
movsb
push
xchg
rorl
sub
js
aaa
adc
addr16
mov
push
or
inc
jnp
jno
pusha
pop
cmp
fidivrl
pusha
mov
or
push
sahf
aad
inc
dec
cli
mov
cmp
dec
test
add
push
loope
icebp
mov
xchg
xor
js
mov
jbe
ret
popf
jbe
cmpsl
xchg
push
int
push
addr16
cmc
jns
and
and
mov
sahf
add
push
cli
add
mov
cld
cwtl
cmp
and
jo
shrl
or
loope
and
xchg
dec
in
push
cmp
hlt
sbb
xor
lahf
sbb
jp
pop
test
mov
clc
in
aas
cmpb
xor
mov
jge
pop
mov
test
movsb
ss
rol
add
mov
iret
mov
mov
mov
mov
fadds
orl
shrl
mov
pop
cmpsl
and
jp
add
or
xchg
js
jbe
addr16
es
push
mov
ja
mov
xchg
or
mov
cmp
cmpsl
lds
pop
sarb
les
inc
int
add
shrl
pop
pop
in
add
xor
stos
or
fwait
add
sub
pop
jl
loope
xchg
rcr
xchg
push
sub
shrb
adc
movsb
repz
mov
cmpsb
push
cmc
adc
test
fsts
add
sbb
pusha
cmpb
dec
dec
xor
xchg
insl
and
addr16
and
in
into
jo
mov
adc
mov
xlat
inc
cmp
ja
jecxz
loop
pushl
frstor
cmpsl
or
inc
cmovs
enter
xor
jge
pop
mov
dec
clc
cwtl
pop
fidivl
jns
pushf
pusha
imul
dec
xchg
mov
hlt
xor
mov
and
movsl
adc
fdivrs
hlt
loope
sub
adc
mov
mov
cwtl
cmp
iret
lret
lea
fdivs
dec
pusha
mov
and
jecxz
sbb
sub
cmpb
mov
sbb
dec
pop
repz
lret
push
or
out
aad
ljmp
mov
lods
fwait
lods
pop
sub
adc
pop
jl
or
vmread
pop
wrmsr
sbb
lods
iret
xor
sub
sahf
imul
or
mov
pop
xchg
test
and
rorl
das
mov
sub
cmp
jp
paddsw
adc
cmp
idivl
imul
add
adc
adc
xor
sub
jg
xor
rcrl
or
push
inc
cltd
cmpxchg
andb
rorl
movsb
or
dec
lock
mov
in
mov
jo
cmp
pop
sbb
movsb
es
or
and
xchg
ror
add
test
lock
xor
pop
scas
mov
out
dec
sbb
add
insb
dec
and
mov
add
sub
js
loopne
rolb
sbb
int3
int3
fwait
sub
add
jmp
popa
cmp
mov
mov
ljmp
sbb
sub
and
jmp
cmp
fisubl
push
ret
jae
sbb
out
aaa
push
cmp
inc
push
jg
mov
inc
dec
and
push
pop
adc
hlt
aam
loop
mov
insb
ljmp
in
mov
fidivrs
add
imul
and
mov
in
adc
outsl
repnz
lock
xor
add
jne
dec
aas
aam
inc
sub
nop
adc
stos
or
enter
mov
cmp
xor
sbb
and
push
dec
adc
je
mov
outsb
test
xchg
insl
dec
inc
sub
sbb
dec
push
jo
adc
push
adc
inc
sbb
clc
shrb
cmpsb
mull
pop
jl
ds
movsb
cmp
rclb
ss
push
push
scas
jno
push
popa
test
add
fs
popf
mov
xor
xchg
enter
andb
mov
sub
fisubl
mov
insl
jne
push
in
imul
pop
ja
arpl
rcll
push
cmpsb
lods
mov
insl
add
push
inc
arpl
jle
inc
pop
xchg
mov
cmc
jmp
daa
push
jno
push
pop
fnsave
int
out
xchg
clc
cmp
lock
xlat
inc
xchg
insb
jo
mov
rolb
jns
pop
lods
movsl
mov
adc
and
sbb
aas
ret
adc
aas
dec
push
mov
mov
mov
xchg
fcomps
fnsave
dec
xchg
mov
pop
adc
xor
fwait
cmp
sbb
jbe
icebp
xchg
icebp
xchg
xchg
xor
inc
fdivs
test
pop
in
jg
fwait
xchg
push
fmuls
xchg
sbb
stos
adc
mov
jo
mov
mov
out
fnstsw
test
insl
loope
fists
imul
daa
fmuls
movsb
inc
lods
in
dec
cmp
pop
xor
imul
lret
cltd
xlat
sbb
arpl
xor
xor
dec
mov
jle
icebp
test
and
xor
call
loopne
stc
icebp
inc
jmp
flds
inc
push
hlt
cmpsb
dec
inc
or
xchg
inc
mov
pop
inc
xchg
adc
sahf
cld
lea
lea
fwait
jnp
and
adc
mov
push
lahf
sbb
jge
push
idivl
xchg
jmp
ljmp
mov
or
sub
sbb
out
pavgb
aaa
jmp
nop
pop
shl
xchg
pop
sahf
lret
mov
pop
pop
adcl
std
ret
jns
aad
cmpsl
xorb
fldcw
test
inc
xchg
push
cmpb
mov
imul
adc
pop
xchg
mov
xor
jnp
dec
xor
lds
cli
and
dec
test
sbb
sbb
dec
xchg
adc
add
rorb
jb
aam
mov
movsb
sub
mov
les
xor
push
adc
repnz
imul
dec
push
je
rcl
clc
xchg
mov
popa
mov
mov
addr16
cmp
and
fs
negl
adc
adc
cmp
mov
push
loope
or
jmp
fwait
in
jo
popa
add
inc
sarl
jp
movsl
mov
xchg
pop
aad
lret
sbb
stc
into
in
inc
push
and
lret
mov
jmp
out
add
or
jecxz
push
movsb
rep
cmp
stos
pop
mov
pop
inc
sbb
sub
cwtl
mov
insl
jecxz
lods
add
pop
fisttpll
gs
mov
aam
insb
pop
popf
enter
mov
pushf
xor
mov
and
enter
das
adc
test
call
addb
imul
add
inc
mov
outsb
adc
dec
cmp
repnz
inc
push
add
pop
sub
out
es
cmp
mov
test
adc
xchg
out
inc
jmp
in
test
add
adc
je
jmp
sbb
pop
test
aam
cmpsl
adc
ret
je
insb
cltd
mov
push
cmp
movsl
push
adc
fimull
sub
imul
xor
cmc
negb
cmpsl
ror
shlb
pop
sub
ljmp
mov
sub
movsl
outsb
mov
jae
adc
or
fldenv
push
stos
inc
adc
sbb
loope
data16
pop
push
mov
adc
stos
xchg
sbb
push
xor
dec
ss
das
cmpsl
xchg
ljmp
lret
push
sbb
call
mov
xor
xchg
adc
imul
fstl
mov
je
push
lret
jb
sub
xor
cmc
add
push
or
bound
jmp
or
pop
sbb
cmp
jns
and
cld
les
cs
cmp
addr16
mov
jne
sub
das
mov
jo
or
mov
jle
push
cwtl
mov
lods
xchg
mov
scas
ss
sbb
add
repnz
xor
fstps
and
cmp
pop
add
in
add
ljmp
sahf
jae
push
mov
mov
arpl
std
movb
fst
scas
test
jmp
mov
pop
ja
mov
and
cwtl
mov
test
mov
mov
dec
std
or
outsb
push
jb
pop
lock
cwtl
pop
xor
std
movsb
or
adc
ss
cmp
shrb
sbb
sbb
ds
into
ss
arpl
cmp
xor
adc
cmpsb
imul
pop
cmp
clc
pmaxsw
fisttpl
cmc
sbb
sub
mov
rcll
in
cmp
mov
neg
and
scas
push
ret
mov
pop
xchg
lahf
orb
test
inc
pop
mov
scas
aad
ret
enter
inc
scas
pop
int3
imul
lods
jg
mov
jno
data16
xchg
lds
int
sti
mov
cmpsb
sub
xchg
jle
push
sbb
imul
loope
push
add
addr16
in
les
fwait
and
mov
les
adc
adc
mov
leave
push
pop
add
or
jae
sub
shll
scas
or
rcrl
and
dec
jo
addr16
mov
push
shll
cli
jle
add
push
xor
aad
xchg
cmp
mov
dec
ja
sbb
lret
insl
loopne
shrl
jecxz
fwait
outsl
push
lcall
in
xchg
xor
bound
add
adc
cmp
xor
in
xor
jl
faddl
adc
loop
outsw
push
call
lcall
or
imul
inc
aaa
in
jo
sbb
add
test
and
sti
test
out
arpl
dec
icebp
arpl
mov
das
lock
roll
ret
jbe
adc
sub
ja
dec
shrl
or
daa
std
pushl
dec
jmp
call
xchg
mov
xchg
loopne
ja
inc
sbb
xor
les
mov
test
or
or
adc
es
jbe
adc
xchg
pop
movsl
dec
mov
inc
push
cmpsl
mov
pop
pop
js
and
jne
daa
add
pop
les
bound
inc
hlt
xor
out
repnz
sbb
push
movsb
clc
cltd
sbb
pushf
push
call
push
add
mov
subb
ds
leave
call
ret
mov
cmp
or
shrl
fcomp
test
andb
shl
jp
std
pop
loop
das
xor
cmpsl
daa
loope
adc
movsb
cwtl
dec
jg
xchg
mov
ret
es
sub
add
shll
xlat
sbb
mov
add
mov
and
xchg
aad
xor
mov
push
movsl
jl
pop
sahf
test
ds
cmp
js
adc
pop
pop
jmp
sysexit
sbb
jbe
add
cs
aas
repnz
cwtl
sbb
jbe
xchg
imul
jge
clc
bound
arpl
or
sbb
or
adc
scas
fsubrl
data16
mov
lahf
mov
jne
sub
mov
scas
mov
mov
test
pusha
loopne
or
jecxz
mov
dec
mov
clc
in
hlt
sbb
mov
mov
sbb
data16
jmp
call
xor
mov
dec
clc
sarb
add
lds
jl
add
mov
shl
test
js
push
mov
jbe
jmp
test
mov
stc
stos
test
mov
fisubrs
ljmp
sub
shlb
jp
out
xchg
ljmp
mov
lea
push
and
inc
sbb
dec
mov
daa
sarl
pop
fnstcw
insl
xchg
xchg
loope
negb
jmp
pop
adc
xlat
test
pop
cltd
add
add
divl
or
data16
push
test
std
push
cmc
leave
lock
pop
fsubrs
mov
cmp
loopne
jg
aad
mov
add
hlt
add
insb
loopne
xchg
das
sarb
jl
repz
adc
sub
add
xchg
sbb
or
sbb
icebp
jbe
repnz
dec
adc
outsb
ds
and
mov
lahf
mov
mov
fildll
mov
or
icebp
ffreep
lods
adc
inc
push
dec
sbb
adc
pop
es
fists
mov
mov
and
daa
fnstsw
lods
xor
out
sbb
pop
jl
test
cli
dec
arpl
and
add
clc
inc
push
dec
popl
int
je
in
das
stc
mov
pop
mov
cmp
je
imul
jle
jae
fs
loop
jge,pn
ja
mov
push
push
cmp
inc
mov
mov
icebp
bound
mov
fildll
test
pop
test
push
inc
cwtl
out
shlb
mov
cld
in
into
sub
and
add
bound
bound
into
ds
mov
clc
scas
adc
stc
pop
aas
or
imul
sahf
test
hlt
push
out
mov
xor
lahf
pop
cmpsb
andb
filds
push
adc
push
sbb
les
inc
xchg
movsb
insb
mov
in
lret
add
cmp
dec
adc
jno
loop
mov
loopne
add
cmp
iret
push
mov
bound
mov
mov
scas
fs
repz
fstpl
andl
loopne
add
std
fdivp
insl
lock
insb
sar
lock
mov
xchg
sahf
add
mov
loope
mov
or
les
jp
push
fsubrs
fidivrs
dec
adc
mov
js
pop
lahf
popf
dec
lock
aas
imul
test
cmpsb
test
xchg
outsb
daa
jg
sarb
jnp
cmp
aad
cmp
xor
sbb
inc
clc
les
mov
adc
cltd
outsb
mov
cmp
push
or
adc
fdivrl
popa
popf
movsl
cmpsb
adc
or
mov
cmp
mov
xchg
jno
mov
lods
stos
lods
pusha
aaa
pop
inc
mov
push
add
int3
and
or
ret
mov
bound
push
mov
pusha
scas
fbld
add
push
cwtl
call
cld
out
fbld
enter
jnp
ljmp
cmp
jecxz
push
and
mov
outsl
out
push
inc
xchg
push
dec
cmp
jno
inc
adc
subl
lahf
push
ret
jle
icebp
call
js
mov
inc
mov
jne
push
or
mov
dec
cmp
or
pop
mov
push
adc
add
cmc
lahf
mov
pushf
inc
imul
jo
push
int3
lea
push
popf
mov
jecxz
mov
stc
xchg
jg
mov
mov
xlat
pop
dec
push
jg
push
pop
jnp
jae
mov
push
loop
scas
push
rolb
sub
das
in
orl
fadd
clc
pop
icebp
jl
and
sti
mov
lret
mov
aas
out
cmp
sbb
add
in
sbb
repnz
outsb
fbld
lds
outsb
dec
pusha
mov
xchg
push
or
mov
roll
and
loopne
arpl
push
ret
fsubl
loop
jmp
xor
dec
addr16
lock
hlt
sbb
mov
daa
inc
xchg
das
dec
insb
les
push
lahf
nop
loope
leave
aad
in
push
cli
xchg
fwait
pop
mov
xchg
push
adc
cmpb
push
mov
test
incl
lahf
inc
jb
test
mov
inc
xor
aas
jns
lods
inc
cmp
jae
and
inc
add
xlat
mov
and
inc
pop
out
call
sbb
jno
dec
js
push
jge
movsb
push
icebp
or
add
lock
call
aas
push
pop
pop
lock
push
mov
push
subb
adc
iret
jle
lahf
jg
mull
and
mov
jecxz
out
add
pusha
push
shrl
ja
push
fbld
cmp
pop
fdecstp
cld
sbb
adc
dec
and
test
fcmovbe
cld
push
inc
pop
fwait
dec
sbb
cmp
repnz
adc
dec
jb
sub
lock
push
cmpb
adc
fiaddl
add
sbb
xchg
xor
push
addr16
aas
jmp
lret
out
mov
jge
cwtl
testl
into
mov
int3
or
add
dec
out
or
inc
sbb
frstor
lods
sbb
push
jno
jecxz
movsl
mov
out
clc
mov
mov
mov
imull
repnz
mov
cmp
call
mov
cli
mov
std
jae
subb
and
rcrl
popf
inc
jecxz
cmpb
jne
jmp
lcall
push
mov
cltd
sbbl
inc
imul
cmc
sub
imulb
cmp
addb
push
fwait
ljmp
out
bound
ret
je
ret
call
push
testl
dec
cwtl
test
insl
js
sar
or
cmpsb
fsub
mov
in
xchg
div
shlb
sahf
aam
xor
fldenv
mov
sbb
lret
xchg
or
adc
stc
cmpb
aam
orl
add
lcall
ds
jle
jg
rcr
cmc
sub
sub
shll
add
xchg
sub
data16
nop
sub
das
sub
js
mov
push
ds
sti
jnp
xchg
jmp
push
test
mov
push
fs
xchg
add
int3
fcompl
pop
pop
xchg
mov
mov
mov
xor
push
notl
mov
mov
aam
fstpl
dec
jns
es
push
inc
mov
add
neg
add
adc
shlb
rclb
cmp
call
sbb
hlt
test
mov
mov
sub
jb
js
cmp
clc
sub
imul
mov
popa
xorb
push
sub
xchg
fsub
or
popa
mov
insb
mov
inc
cld
dec
sub
movsb
xchg
adc
dec
movsb
mov
daa
daa
dec
mov
popf
rcll
push
lret
jae
dec
jo
mov
xor
and
testb
mov
lods
pop
pop
lahf
inc
js
or
push
aaa
out
mov
mul
sbbb
jle
push
scas
lret
xor
and
mov
pop
dec
jmp
inc
les
inc
lock
mov
sub
out
fs
pinsrw
sbbl
or
adc
mov
xchg
lock
movsb
sbb
cmp
pusha
sarb
add
or
pop
add
add
jmp
push
cmc
adc
lret
xchg
aaa
cld
fstl
stos
and
aam
enter
sbb
outsb
iret
test
fsubrl
mov
lcall
pop
outsl
adc
pushf
dec
pop
push
mov
stos
sub
pop
jns
mov
xchg
test
fsts
test
aas
test
shll
adc
roll
fbstp
pop
xchg
xor
loope
stos
jmp
filds
shrb
mov
cmpb
jbe
iret
adcl
je
sub
out
sub
xchg
pop
mov
adc
fidivl
iret
jp
lods
inc
inc
push
adc
cmc
push
insl
lcall
loopne
inc
fsubr
jl
fwait
andb
sub
and
rclb
pusha
pop
and
fdivrl
sarl
std
inc
inc
jns
sbb
test
lcall
add
mov
ljmp
mov
push
and
cmp
xor
mov
pop
dec
ss
loope
cltd
mov
std
dec
mov
jno
rcr
or
dec
loope
xchg
les
sahf
add
arpl
repz
xor
enter
mov
jnp
mov
inc
mov
and
xlat
xchg
loope
pushl
or
mov
arpl
jecxz
pop
test
ljmp
adc
push
dec
bound
jmp
pop
add
mov
fwait
scas
pop
sub
push
cltd
cmpsl
push
or
adc
xor
je
enter
stos
test
in
push
std
jecxz
lea
out
ss
nop
test
dec
sbb
test
cmc
stc
les
push
cltd
or
pop
mov
mov
sub
xor
rorl
out
jbe
mov
iret
int
ret
cli
loopne
subl
jo
sbbb
cwtl
dec
mov
cmpsb
in
cmp
aam
adc
adc
jle
ss
push
dec
call
in
aam
leave
jne
push
mov
cmp
jo
cmpsb
rcrb
adc
mov
push
mov
imul
je
pop
loopne
pop
jb
lock
pop
out
or
mov
decl
and
pop
mov
sbb
cmpsl
pop
mov
jmp
push
add
xor
lock
clc
hlt
test
pop
out
jo
popa
cmp
in
jbe
repz
nop
cli
aas
movsb
inc
sub
push
jnp
xchg
push
inc
jne
pop
mov
mov
xlat
push
cld
das
push
mov
push
arpl
stos
lret
pusha
data16
lock
test
filds
and
xchg
jmp
stos
or
pusha
das
inc
pop
lods
push
xchg
mov
xchg
nop
mov
into
jmp
push
shrl
push
xor
enter
sub
aaa
aaa
loop
cwtl
loopne
inc
sbb
sub
sbb
jno
mov
and
and
jo
scas
repnz
xchg
lret
leave
jle
mov
xchg
and
aas
bts
pop
call
jecxz
pop
xlat
icebp
cmpl
arpl
xlat
je,pt
dec
lcall
hlt
lcall
jmp
mov
jno
popa
push
pop
push
lahf
mulb
sbb
pop
into
mov
jmp
fdivs
jne
xchg
mov
jecxz
pop
cwtl
or
aaa
insb
dec
cld
sbb
push
sub
notl
jae
cld
jne
roll
dec
ficompl
shl
decb
adc
adc
ja
es
cmp
into
inc
fbld
add
roll
adc
into
inc
sbb
cmc
lds
add
adc
mov
xchg
dec
movsl
les
sbb
mov
or
and
mov
xor
mov
sbbb
test
mov
add
pop
fs
mov
adc
sub
xchg
or
mov
jo
jne
add
ja
and
clc
aas
inc
cld
jae
inc
dec
and
les
insl
fstpt
scas
cmp
adc
push
add
jp
loop
arpl
push
pop
incb
pop
sbb
xor
sub
punpckldq
cmp
aad
sbb
inc
scas
cmpb
fsubs
in
arpl
cmp
vcvtpd2psx
call
test
xchg
cltd
xor
repz
add
pop
push
stc
sub
xchg
les
mov
push
jbe
jb
push
inc
inc
cltd
and
fwait
mov
sub
mov
push
push
dec
mov
jecxz
test
jp
jmp
ds
mov
movsb
pop
insb
mov
mov
mov
jg
mov
stos
sub
add
ret
xchg
or
xor
and
shrb
mov
testl
mov
pop
inc
push
test
sarb
rcl
and
and
push
xor
call
adc
pop
or
or
sbb
inc
je
aaa
mov
lret
push
mov
nop
push
stos
xchg
pop
mov
add
pop
inc
jb
dec
les
iret
mov
dec
jecxz
jp
pop
ds
and
js
arpl
inc
push
mov
add
push
jmp
push
add
dec
add
dec
lahf
cmpl
jns
lds
scas
push
mulb
data16
add
rolb
pop
sti
dec
jge
dec
push
add
jo
es
adc
incb
or
aaa
hlt
adc
jne
cld
sub
adc
scas
pop
inc
int
idivl
or
cmp
dec
faddp
shrb
ds
adc
xchg
int3
subb
xor
mov
aas
ss
fwait
outsl
push
xor
dec
call
sbb
add
adc
or
stos
test
mov
ret
testb
jno
jo
jecxz
test
pop
mov
rcl
les
popl
pop
pop
dec
sub
mov
adc
sbb
pop
stos
testb
pcmpeqw
pop
add
add
cli
adc
mov
flds
jo
jmp
sbb
xchg
ret
test
mov
insb
push
xor
call
dec
rcrb
push
fwait
or
test
scas
cmp
stc
dec
mov
ja
add
in
jne
hlt
outsb
lock
lock
sahf
fmul
xor
pop
int
std
push
push
ret
pop
jns
adc
mov
dec
out
add
orl
ss
xchg
inc
push
add
popa
bound
aad
stos
sarb
fstpl
popa
add
add
arpl
mov
inc
add
repnz
xchg
and
pop
lds
sbb
mov
sbb
jne
loope
sub
and
adc
pop
fcomps
mov
cmp
pop
push
adc
dec
jnp
popa
aas
mov
test
cmp
mov
out
add
fdivp
push
mov
mov
cmp
push
jmp
or
cmp
pop
imul
fwait
dec
cmp
test
jg
mov
push
rcrl
mov
ds
scas
jle
pop
or
sub
adc
jg
jg
cmp
cmpsb
call
fdivr
dec
push
xchg
pop
xor
imul
cwtl
sbb
incl
les
imul
mov
pop
fistpll
cmp
sahf
jmp
outsb
jae
mov
pop
pop
inc
jp
adc
mov
sbb
in
outsb
and
loope
pop
pop
mov
hlt
add
adc
pushl
mov
data16
das
push
sbb
sbb
out
mov
push
xor
dec
xor
pop
fdivs
inc
mov
adc
mov
mov
movsl
rolb
lds
outsl
or
and
and
jl
mov
push
xchg
sub
aaa
and
jb
add
inc
movsb
cmpsl
adc
add
nopl
sub
aas
mov
jecxz
inc
mov
xor
dec
jbe
xchg
ret
and
repz
jmp
adc
jmp
push
sbb
sbbb
nop
mov
mov
push
loopne
adc
push
pusha
out
pop
hlt
xchg
and
cli
shll
ret
pop
fcmovnb
mov
popa
leave
add
push
inc
scas
scas
fstl
jle
jo,pn
or
andl
aaa
sub
xor
loope
fnstcw
iret
test
inc
les
sarb
inc
daa
lahf
shrb
inc
std
mov
popa
and
or
aas
pop
xor
iret
mov
in
std
cmp
pop
adc
mov
nop
or
add
sub
pop
or
mov
pusha
shll
popf
xor
push
pop
add
mov
in
loopne
imul
shlb
or
lcall
loopne
test
scas
test
jl
xchg
jne
sbb
aas
incb
push
subb
dec
add
pop
sub
jl
aaa
ret
lcall
ret
mov
sbbb
test
and
imul
adc
add
pop
ret
ss
iret
das
inc
insl
mov
or
in
pop
jmp
imul
xor
outsl
or
inc
pop
mov
push
adc
inc
push
sbb
cmp
adc
mov
mov
imul
outsl
mov
inc
add
dec
sbb
dec
dec
push
xor
push
and
jecxz
xchg
adc
or
cli
pop
jge
dec
bound
stos
sti
call
adc
sub
push
out
sub
mov
or
rcl
xchg
fisubs
dec
inc
js
stos
pop
mov
adc
ret
ss
mov
xchg
int
jl
sbb
call
cwtl
ret
ficoms
dec
inc
cmc
pop
mov
daa
jo
notl
daa
jle
add
sbb
fisttpll
int3
mov
pop
shl
aam
and
inc
or
aas
pushf
dec
dec
aas
mov
repnz
mov
mov
add
imul
inc
out
hlt
cmp
sbb
pop
pop
and
xchg
fidivs
or
xor
iret
sub
movsb
lds
cmp
ds
test
loope
jp
xchg
fbstp
lods
adc
adc
fstl
fadds
push
dec
jo
cs
cwtl
sub
dec
mov
xor
add
ficoms
sbb
push
gs
sub
cmpsb
lds
xchg
das
imul
adc
fstpt
jnp
pop
inc
jnp
ss
cmp
cs
mov
mov
js
into
in
test
inc
insb
push
mov
shll
aas
cmp
lret
addl
jg
ret
lods
sub
lods
sbb
cld
inc
ljmp
adc
or
nopl
dec
scas
mov
push
outsl
push
popa
add
or
mov
mov
fsub
adc
mov
leave
pushf
cmp
mov
dec
and
out
mov
icebp
insb
outsl
insb
push
lock
add
sub
test
sbb
sbb
das
lods
push
int3
dec
push
test
cld
outsb
cmc
into
in
lock
or
or
lock
lcall
inc
insb
dec
fstpl
pop
and
add
push
pop
adc
cmpsl
mov
aaa
ljmp
into
lods
fadds
mov
movsb
adcl
filds
rolb
pop
dec
mov
nop
adc
xorb
mov
jg
cmpps
xor
nop
and
stos
fmuls
loope
or
into
inc
cmp
fwait
xchg
jbe
mov
arpl
js
dec
out
imul
jg
lea
ja
cli
fldt
and
pop
das
and
dec
fstpl
cmpsb
iret
or
imul
lods
dec
das
xor
outsb
stos
jae
fs
xor
dec
mov
push
pop
xor
call
or
adc
sti
pop
lods
inc
mov
aas
mov
or
dec
sbb
pop
mov
adc
ror
xchg
lock
test
lods
pop
push
sbb
fwait
lcall
xor
mov
xchg
xor
mov
add
adc
inc
bnd
clc
imul
mov
mov
repz
adc
sbb
add
fisubrs
rorl
inc
lock
movsl
push
jnp
cmp
ret
mov
xchg
xlat
ret
xchg
or
popa
sti
or
mov
mov
fisubs
cmove
xchg
and
inc
es
pop
icebp
pop
or
xchg
out
in
sbb
cmpsl
push
stos
pop
or
jb
pop
adc
add
std
inc
flds
mov
fld
outsl
and
mov
inc
pop
adc
cmp
fnstcw
cmp
mov
add
aas
mov
mov
in
mov
mov
jnp
cmpsb
addr16
sbb
shrb
pop
or
push
loope
sub
test
out
sub
out
popa
in
addb
stc
add
ds
loope
dec
repnz
test
and
mov
mov
or
rorl
and
pusha
call
adc
cmc
js
push
ljmp
aaa
ds
ds
mov
push
add
xlat
ret
push
popf
xchg
cwtl
movaps
lock
cwtl
push
mov
loopne
cmp
cmp
and
icebp
xorl
xor
clc
inc
adc
scas
inc
mov
dec
nop
fnstcw
inc
mov
add
test
std
inc
sahf
lock
xor
dec
jl
test
or
imul
scas
jl
cmpsb
xor
mov
fdivr
jnp
fimull
fldl
stos
std
xor
push
mov
stos
mov
mov
push
mov
stos
push
es
and
mov
cwtl
movsb
add
mov
mov
adc
jp
and
inc
rcrb
cmp
jmp
push
jp
pop
cmp
ror
or
sbb
and
mov
cmp
dec
fdivrp
adc
jo
daa
lret
aaa
rolb
inc
shlb
add
dec
sbb
push
test
xor
cmp
jb
sbb
add
mov
mov
mov
xchg
lea
test
sarl
stos
sub
push
pop
inc
push
dec
arpl
pop
sub
sbb
xchg
mov
xor
subps
in
jo
dec
ret
ljmp
mov
lock
push
inc
ret
fwait
sbb
outsb
outsb
mov
stos
and
push
inc
inc
cwtl
add
sar
sub
imul
mov
mov
jbe
mov
in
sarb
adc
or
jp
inc
and
lods
inc
sbb
cmp
jge
ret
nop
fsubs
adc
xchg
dec
jecxz
inc
adc
sub
clc
mov
xor
sbb
cmp
xor
outsl
icebp
jne
jp
stos
paddb
cmp
push
sbb
push
daa
cmc
cmp
idivl
addl
sub
outsb
mov
mov
bound
fdivr
js
pop
lret
xor
inc
cmp
add
xor
pop
add
dec
mov
jnp
pop
mov
ljmp
inc
jmp
iret
dec
nop
mov
jl
jge
xchg
jle
sti
mov
out
mov
push
bnd
xchg
sub
or
push
mov
hlt
ficompl
mov
clc
cmc
popa
jmp
lea
out
out
scas
imull
pop
mov
lock
lret
ret
cmpsb
subl
sbb
fistps
sub
cmpsb
or
repz
mov
pop
stc
sahf
jecxz
xchg
sbb
cli
push
xor
nop
testb
mov
pop
mov
add
jo
fnstenv
js
add
popf
mov
out
pop
mov
aad
roll
add
inc
nop
insb
loope
pop
cmc
pushf
mov
and
les
shlb
rcll
mov
jo
and
pop
push
dec
sbb
jo
mov
mov
test
adc
or
roll
push
xor
insb
dec
pop
pop
inc
push
cmp
pusha
addr16
jp
cmp
punpckldq
mov
dec
sbb
bnd
test
je
pop
lock
and
push
popf
jl
lock
and
xchg
jbe
pusha
in
fstpt
sub
or
or
cmp
push
insl
ds
adc
dec
fiaddl
pop
mov
fsubs
call
add
mov
sbb
mov
mov
xchg
lret
aam
pop
inc
adc
add
push
dec
in
es
test
xorl
add
pushf
ds
es
mov
addb
push
fwait
rolb
nop
xchg
push
shlb
and
xor
dec
mov
push
push
jl
pop
jle
push
or
cs
xchg
mov
ret
xor
fists
cmc
push
sbb
gs
icebp
mov
cltd
jle
dec
in
aam
xor
mov
repnz
ret
cld
enter
icebp
sbbl
icebp
fwait
or
out
pop
add
test
into
ret
sar
push
cmc
lods
push
and
mov
dec
adc
mov
xor
pop
adc
mov
sbb
rcll
shlw
imul
and
xchg
cmc
fmuls
test
nop
fwait
inc
adc
xor
clc
icebp
sbb
pop
inc
ja
loopne,pn
dec
pop
or
push
repz
stos
pop
ss
mov
jno
mov
sahf
mov
and
pop
fdivs
incb
push
fdivs
movsb
or
fcoms
xchg
or
push
mov
shl
mov
add
ss
inc
movsb
jl
out
loope
sub
add
ficompl
xor
int
cmpsb
cltd
push
inc
and
xchg
xor
mov
imul
mov
call
out
cli
mov
mov
push
inc
dec
add
jb
inc
push
movsl
adc
sub
xchg
mov
sbb
pusha
movb
pop
inc
adc
fbstp
sub
in
int
cli
cmp
aas
cli
push
xchg
push
push
frstor
mov
sbb
or
push
das
aas
inc
ljmp
mov
dec
loope
and
add
scas
sub
enter
push
cli
mov
cmp
pop
mov
enter
lea
test
add
out
lock
testl
aam
xor
add
mov
mov
xchg
pop
stc
cmp
dec
daa
dec
pop
std
mov
and
or
aam
hlt
xlat
xor
xor
leave
cmp
test
aas
cli
scas
dec
jle
lock
push
es
fwait
and
pop
dec
in
in
mov
outsb
jmp
fstpl
hlt
pop
adc
mov
nop
aam
xorb
cmpsl
mov
jg
sub
jns
inc
addl
int
pop
or
adc
insl
push
or
and
andb
stos
push
dec
insl
test
dec
inc
xorb
jle
mov
add
pop
decl
stc
repnz
add
cmp
sub
out
jns
adc
iret
pmaxub
adc
addr16
add
jge
cmp
movsl
xorl
xchg
push
loop
push
jl
pop
and
jb
roll
xor
rcrb
jae
clc
mov
fcomip
jmp
test
pop
sbb
mov
and
enter
loopne
cmpsb
push
push
adc
mov
inc
and
pop
fwait
stos
aas
adc
mov
lods
or
or
in
outsb
ficompl
insb
mov
mov
add
add
dec
arpl
cmp
scas
mov
pop
push
aam
and
mov
mov
andl
out
xchg
push
in
or
pop
clc
ljmp
jbe
out
cmp
popa
test
dec
icebp
xchg
jmp
xchg
pop
jno
and
into
add
das
mov
and
push
js
jge
ret
xor
lea
out
in
jns
push
jle
jle
nop
int
pop
add
loope
popf
jge
pop
mov
fucomi
or
pushf
scas
adc
sarl
push
enter
inc
mov
mov
mov
lret
xor
jle
cli
cmp
fdivr
ds
bound
movsl
cmp
test
orl
jne
dec
adc
inc
pop
and
leave
xchg
ficomps
add
sarb
pop
cld
and
mov
xor
xchg
dec
out
jae
inc
add
xor
add
into
cld
int
pop
lret
mov
jb
pop
push
ja
jb
dec
outsl
leave
mov
jg
xchg
inc
xchg
adc
cli
mov
cmp
mov
adc
dec
inc
mov
sub
sub
mov
clc
jecxz
adc
movsl
push
xor
jno
and
cmp
push
mov
pop
cmpsb
imul
xchg
mov
xor
arpl
xchg
adc
jb
outsb
pusha
pop
call
les
inc
cwtl
add
rcrl
ret
pushl
stos
pop
dec
xor
mov
sbbb
dec
sbb
fidivrl
push
add
jne
es
mov
shlb
jl
nop
jne
lods
mov
fs
pop
das
rcll
in
outsl
mov
add
mov
ss
lock
inc
outsl
cmpsb
adc
notl
and
cmp
ljmp
pop
fnstenv
mov
outsl
push
orb
cmp
in
leave
seta
popf
std
cmp
jge
and
outsl
inc
dec
add
xor
loope
or
dec
aaa
clc
cmpsl
sbb
test
inc
inc
mov
pop
lods
fisttps
cmp
or
inc
sbb
dec
cmp
ja
das
jge
stos
jns
xchg
cmp
mov
and
jae
shr
xor
ljmp
fwait
adc
mov
cmc
dec
fcmovne
cwtl
data16
fidivl
fildl
jg
adc
fs
pop
fiaddl
adc
rcrb
lret
fs
mov
pop
popl
mov
mov
mov
outsl
cmc
ja
out
dec
adc
in
or
repnz
pop
xchg
lea
psubd
xchg
out
rolb
mov
popf
scas
outsb
rcll
and
push
mov
pushf
repnz
or
dec
js
pop
mov
push
aas
pop
fisttpl
adc
mov
std
sub
cmp
sbb
add
test
add
inc
dec
push
test
add
iret
out
cwtl
mov
jle
roll
outsl
nop
jb
fsubrs
cmp
loop
jns
dec
mov
mov
mov
jg
rcr
jmp
cltd
lcall
adc
jmp
xor
pusha
xor
mov
orps
fwait
adc
push
dec
inc
mov
aam
mov
xchg
jns
xchg
jmp
aad
dec
pop
in
mov
inc
repz
loop
jb
jns
xchg
js
in
or
or
das
and
cmc
cwtl
es
mov
mov
mov
adc
frstor
mov
loop
sub
shlb
push
stc
or
std
push
fisttpl
xchg
leave
cmp
call
jbe
pop
xchg
inc
hlt
popf
in
loop
clc
out
inc
cmp
cmp
mov
push
inc
xor
dec
imul
and
lahf
ja
add
repnz
lret
cwtl
fldcw
loope
pop
in
push
add
ret
inc
mov
mov
ljmp
sbb
in
aam
les
insl
cmp
mov
popf
jl
rcrb
ds
adc
fidivl
sub
pop
push
cltd
sbb
stc
stos
pop
adc
xchg
fiaddl
aam
mov
xchg
inc
cmp
ret
cli
sub
mov
inc
fistps
xchg
enter
dec
push
sbb
xor
jg
out
mov
ret
loopne
out
push
es
push
jecxz
je
pop
hlt
push
cli
or
mov
jle
in
jmp
push
outsb
mov
push
cli
cmpsl
je
lock
jecxz
pop
sbb
xor
jl
add
xor
loope
pop
xchg
les
clc
inc
lods
mov
inc
mov
adc
imulb
pop
mov
xchg
jbe
jecxz
and
jbe
adc
lea
lcall
xlat
into
dec
fwait
out
mov
pop
je
add
mov
mov
add
andl
stos
mov
mov
push
dec
repz
outsl
or
into
ljmp
and
jnp
xchg
jo
pop
push
popf
sub
dec
push
adc
lock
pop
or
mov
mov
pop
int
pop
cmp
pop
lods
push
rolb
stc
dec
xor
xor
stc
fwait
subb
lds
push
dec
jge
cmp
into
add
outsb
xor
push
cs
sub
stos
mov
out
in
xchg
dec
insb
dec
das
jle
roll
sarb
jecxz
aas
imul
inc
test
mov
or
sub
ss
std
add
orl
or
loop
push
jmp
inc
sub
mov
jg
inc
arpl
scas
cli
ficomps
ljmp
cli
dec
in
movsb
jge
ja
and
lds
dec
push
mov
mov
mov
sbb
and
push
pop
adc
sub
movsl
les
add
fnstenv
or
push
sbb
pop
xchg
jle
or
lret
push
jp
mov
mov
or
loopne
dec
sbb
inc
subl
xchg
and
orl
xchg
aam
inc
inc
loop
clc
daa
mov
push
daa
repz
sbb
fdivs
inc
and
pop
insb
pop
lret
or
inc
inc
jno
push
jnp
xor
xchg
mov
rcll
lods
or
mov
cld
jl
inc
dec
push
and
mov
cmp
or
jo
in
rcll
addl
incl
xor
pop
fwait
jb
xchg
adc
mov
lea
inc
iret
jbe
subl
lea
das
dec
adc
loop
jg
test
mov
nop
test
inc
out
sub
adc
cmp
cld
test
fsubs
movsb
xchg
fmuls
jg
aam
pop
cmp
xchg
mov
cmpb
adc
jle
cld
inc
mov
xor
sbb
into
sbb
mov
hlt
mov
divl
xor
and
mov
sbb
sbb
pop
and
loop
outsb
movsb
dec
pop
push
repz
mov
dec
nop
cmc
and
pop
shr
jg
stos
out
addr16
or
xor
adc
push
sbb
or
pusha
into
mov
lret
adc
mov
mov
inc
sbb
pop
in
pop
pop
add
aas
jnp
fldt
aaa
rolb
cmpsl
sub
mov
add
rcll
fcom
pop
ret
scas
sub
out
sti
les
push
jmp
add
mul
push
adc
push
out
mov
js
jp
lahf
pop
xchg
mov
test
add
xchg
inc
push
inc
mov
dec
sar
cli
jl
test
out
mov
ficompl
movb
adc
push
mov
test
xor
insb
fdivp
pop
fs
lock
push
lea
mov
fsubl
inc
pusha
js
sub
movl
xchg
aam
in
shr
inc
test
hlt
and
inc
pop
mov
es
jnp
hlt
sbb
lea
scas
push
xchg
ss
das
and
repz
fmuls
aaa
mov
push
sbbb
addr16
mov
xor
sbb
xchg
cmp
sub
mov
pop
jp
add
sub
mov
sub
in
xor
cltd
fiaddl
mov
sbb
stos
imul
xchg
or
mov
fisubrs
push
add
xlat
stc
repz
out
clc
push
adc
inc
cmp
dec
and
mov
and
in
inc
jle
add
push
into
enter
clc
in
xor
imul
jo
sub
inc
lds
subl
cli
loope
mov
xor
push
push
ror
scas
stc
int3
aaa
ret
jle
movsl
data16
cmp
adc
dec
adc
mov
incl
repz
or
cmp
popa
add
and
sbb
lods
pop
daa
icebp
jge
push
sub
cmp
or
dec
mov
xchg
call
and
push
aam
fdivrs
orl
add
daa
or
lock
adc
les
mov
mov
sbb
je
mov
testl
pop
sub
mov
mov
call
mov
outsl
call
xchg
jp
je
and
xchg
xchg
push
or
pop
rorb
insl
inc
jno
dec
adc
hlt
lds
js
dec
inc
adc
mov
and
mov
xor
push
out
pop
int
cmp
xchg
dec
pop
addl
mov
outsl
call
push
sub
jae
jge
inc
cmp
pop
add
xchg
loopne
enter
jnp
sub
push
or
mov
ficoml
lret
push
sub
jg
cmp
mov
shll
int
sbb
popl
inc
cld
adc
jg
sbb
or
sub
sub
mov
out
mov
outsb
decl
sbb
inc
mov
inc
pause
xchg
movsb
sbb
aaa
xlat
mov
rcll
fstl
aaa
pop
daa
push
lods
stos
add
popf
mov
imul
movsb
cli
ficompl
fists
rcrb
jl
and
js
and
outsb
inc
outsb
add
sub
insb
ret
fcmovnu
inc
sbb
faddp
cmp
pop
adc
icebp
dec
adc
jo
pop
rol
mov
popf
adc
stos
and
cmp
enter
push
cmovnp
ret
iret
shr
ja,pn
xchg
outsb
adc
sub
mov
pusha
sub
xor
lea
mov
and
shl
cmpl
pushf
mov
fimull
lods
cmp
push
pushl
and
fcompl
cli
xchg
cmpsb
and
stos
or
nop
ret
icebp
cs
andl
pusha
and
aas
mov
xor
decb
cmp
jg
jmp
mov
mov
pushf
push
das
pop
loop
pushf
inc
pop
mov
inc
mov
hlt
out
and
mov
push
movsb
xchg
inc
push
cmp
jle
push
js
enter
clc
add
das
xor
gs
gs
out
xor
add
adc
cmp
mov
rcrb
pop
inc
adc
mov
jp
add
push
cmpl
insl
mov
cmpl
aas
sbb
or
loop
sbb
add
outsb
imul
out
and
std
jae
mov
subl
sub
jmp
xchg
cmpsl
and
xorb
hlt
mov
adc
and
mov
aaa
std
out
cmpb
cmpl
mov
bound
repz
cmp
or
lahf
lahf
sbb
xor
and
push
cmp
data16
daa
or
sub
dec
xchg
loop
pop
hlt
andb
inc
adc
mov
sbb
das
ret
fstl
pop
add
int
das
pushf
xchg
mov
adcl
test
cld
daa
decb
scas
adc
cs
cmp
pop
or
pop
lcall
loopne
andb
adc
inc
fs
fwait
inc
cmc
test
adc
lods
ja
xor
scas
dec
mov
pop
xchg
jno
test
clc
mov
bswap
addl
shlb
lret
push
xor
es
mov
mov
fadds
jae
outsl
std
inc
push
rcrl
xor
std
fwait
add
push
out
stos
add
das
sub
push
lods
rol
decl
jg
and
sub
mov
lcall
mov
push
fistpl
push
dec
stos
pop
mov
cmp
jg
aad
push
addb
fdivrl
sbb
hlt
sbb
mov
jecxz
or
dec
mov
inc
add
cmp
es
stc
pop
mov
loopne
shlb
stc
pop
adc
daa
mov
movsl
xor
pop
inc
cmp
adc
arpl
int3
cmp
scas
lock
and
cld
xchg
add
mov
bound
out
and
fcoml
mov
and
iret
stos
add
xor
rcrl
jle
push
out
mov
ss
test
push
jo
mov
xchg
rcrl
lret
fidivrl
sbb
or
xlat
push
cmp
add
or
mov
out
loopne
test
rolb
push
push
jecxz
mov
rep
dec
lods
data16
push
ret
add
andb
add
mov
push
mov
push
clc
pop
mov
mov
shl
loop
cld
lret
in
add
outsb
repz
xchg
add
push
repz
push
inc
shll
ljmp
test
sub
in
adc
loop
xchg
dec
mov
or
call
jmp
insb
or
int3
sub
test
pusha
sbb
test
and
lds
push
in
pop
imul
rcrl
enter
mov
and
sbb
xchg
arpl
adc
xor
insb
jp
add
sbb
add
xor
inc
pop
nop
loope
sub
xchg
sub
and
jp
dec
mov
lret
push
lea
sbb
scas
adc
gs
incb
repnz
sbb
sbb
mov
sub
les
jbe
insb
scas
decl
pop
mov
clc
aad
daa
pop
std
and
pop
pop
adc
cmp
shlb
mov
aad
xchg
xor
insl
cs
cld
scas
insl
cmp
inc
jno
jne
mov
and
outsl
jns
into
or
insl
or
jge
mov
jo
cwtl
fdivrs
add
push
push
and
sbb
mov
insl
arpl
xchg
cmp
test
sbb
mov
cmp
mov
pop
pop
or
jge
inc
dec
inc
add
sbb
sahf
fdivs
pop
xorb
or
mov
les
into
xchg
ds
jge
add
mov
jle
dec
pushf
les
inc
mov
push
mov
test
inc
xchg
pop
sbb
fstl
scas
jne
jle
mov
test
nop
data16
daa
ret
pop
insb
mov
aas
sub
sar
mov
std
ret
out
nop
stc
das
lods
or
push
fistps
ret
fwait
jecxz
xchg
iret
je
xor
jg
sub
cmp
or
inc
loop
movsb
jbe
rorl
push
dec
mov
jo
pop
popa
cmpsl
jbe
fwait
cmp
sbb
dec
mov
scas
popa
inc
addr16
adc
loope
jae
or
push
out
in
jle
jl
lock
and
cmp
push
loop
mov
inc
xchg
add
insb
ficomps
test
and
add
mov
aas
cltd
imul
or
call
bnd
aas
lcall
pop
sub
sub
sub
sub
xor
imul
push
pop
xchg
lret
jno
xchg
or
mov
jno
cs
sbb
sbb
push
fmuls
orl
mov
fstl
sti
and
push
mov
test
jp
out
sbb
xchg
ss
sub
wrmsr
je
adc
in
jl
push
jns
jae
pusha
movsb
and
aad
rcpps
inc
xchg
jb
nop
lods
sub
cmpsb
pushl
pop
mov
in
jo
xor
in
push
or
mov
cs
incl
nop
outsb
jae
push
outsl
pop
lea
pop
cmp
loope
nop
pop
std
sub
push
jnp
cmp
outsl
rorl
aam
pop
dec
xor
cmp
pop
fnstcw
bound
jle
fdivs
mov
fsubr
pushf
icebp
les
xchg
xor
xlat
rclb
rolb
pop
cmpsb
bound
push
mov
outsl
push
jmp
inc
repnz
shlb
push
push
pop
add
repnz
mov
ljmp
push
orl
stos
pop
std
in
sbb
dec
push
xor
cmp
mov
ljmp
nop
in
xchg
push
lock
aad
dec
mov
inc
mov
mov
push
inc
les
aam
push
and
and
adc
insl
inc
dec
push
fisubl
dec
pop
fdivl
inc
sbb
push
das
adcl
xor
lods
outsl
push
negb
adc
adc
mov
ret
sub
cmpsb
lock
sar
sub
fiadds
and
cmp
mov
ficompl
je
jo
cmp
dec
aam
pop
dec
xchg
out
sahf
add
divb
mov
push
sbb
add
sub
lds
rclb
cltd
icebp
insl
lock
add
dec
sbb
inc
fisttpll
or
push
stc
daa
inc
out
rorb
jb
sub
movsl
ret
fwait
jo
js
xor
std
or
fsubrp
test
les
mov
scas
cmc
into
mov
aaa
inc
cmp
or
stos
outsb
das
and
loope
adc
or
hlt
xchg
pushf
xlat
das
divb
mov
jp
lods
ds
movsb
mov
mov
jecxz
or
sub
jnp
subb
inc
jl
out
mov
in
popa
push
es
push
or
mov
ret
ret
shl
xchg
cs
jecxz
fisubl
push
push
imul
movsb
push
mov
repnz
mov
adc
cmp
mov
and
mov
cmc
test
jmp
les
and
lds
scas
decb
cli
jle
add
mov
mov
xchg
mov
xchg
ret
cld
sbb
push
add
shrl
push
xor
push
xchg
je
rcr
and
jae
jg
out
ret
inc
mov
insl
lahf
ret
push
shrl
inc
jo
pop
inc
hlt
call
inc
lock
les
adc
mov
stos
scas
leave
rcll
xor
in
sbb
cmpsl
jae
pop
lea
push
test
jle
fisttpl
es
incb
lahf
int3
ret
call
mov
push
nop
cltd
iret
mov
call
xor
aam
mov
sbb
push
xor
sbb
push
push
mov
sbb
cmp
outsl
test
popf
clc
xlat
ss
sbb
icebp
loopne
jl
lret
pop
call
push
pop
pop
mov
mov
adc
stc
xchg
shlb
cmc
mov
mov
adc
adc
js
adc
cmp
aaa
lret
push
xchg
inc
or
pop
leave
cwtl
push
test
sti
add
mov
dec
lcall
sub
inc
xchg
jo
mov
mov
inc
sub
pop
mov
inc
mov
inc
push
pusha
shll
dec
sub
mov
daa
into
inc
orb
pop
clc
mov
add
or
testb
push
hlt
mov
shlb
lods
lahf
hlt
or
lds
xor
not
jg
lods
addb
push
call
jb
fsubrs
sarb
cwtl
mov
mov
loop
daa
je
ret
mov
sbb
cmpb
or
call
call
lret
sbb
jb
xor
and
push
pop
push
xchg
insb
imul
addr16
call
ss
push
loop
pop
jg
loop
fcmovu
cmpl
inc
movl
scas
mov
dec
sbb
mov
nop
cmp
xchg
sarb
jl
cltd
xchg
outsb
adc
enter
ss
nop
pop
xchg
shrb
mov
sub
dec
lock
xchg
xor
jns
pop
sub
inc
arpl
mov
add
push
inc
jne
jl
lea
std
sbb
jns
push
mov
pop
insb
pop
test
aas
aam
push
or
sbb
test
push
and
nop
sarl
cltd
and
pop
pop
pop
cmp
mov
inc
pop
adc
je
push
cltd
pop
xchg
cmp
push
xor
xlat
mov
cltd
test
sub
out
inc
xchg
fcomps
ret
mov
xor
xor
mov
sbb
xor
xor
mov
push
push
les
push
inc
push
xchg
xchg
ret
inc
shrb
lcall
or
jp
adc
adc
pop
push
xor
push
add
aaa
rol
fstl
gs
shrl
mov
rorb
lock
mov
add
inc
int3
and
btl
loop
cmpsl
cmp
mov
clc
jne
push
and
jge
jecxz
jno
and
cmp
test
std
adc
xchg
hlt
enter
or
push
movsb
pop
mov
scas
lods
aam
xchg
out
push
int3
lods
sti
aad
aas
push
paddb
push
dec
dec
inc
adc
je
push
dec
fsub
or
pop
dec
push
inc
fldt
xchg
popa
mov
stos
cmp
cmp
mov
mov
and
dec
cmp
sub
xchg
in
or
pop
xchg
call
outsl
loopne
push
pop
xor
mov
mov
ret
mov
jne
push
div
insb
out
sar
add
sub
sub
xor
jae
add
clc
and
push
daa
xor
rcr
dec
cmp
lret
adc
int3
mov
lock
dec
lods
or
adc
dec
out
or
orl
add
add
in
inc
lahf
mov
sahf
push
add
iret
inc
pop
mov
jbe
stos
pop
add
jb
mov
pmaxsw
mov
mov
rclb
push
in
sbb
out
loopne
pop
jne
jne
lds
gs
pop
cmpl
xor
dec
jae
sbb
lock
loopne
or
movsb
inc
in
js
xchg
hlt
fistl
les
cltd
popa
jg
or
push
and
inc
addl
test
sbbb
shrl
filds
mov
xor
push
mov
cmp
clc
push
sub
push
lahf
dec
out
mov
mov
sbbb
and
int3
insl
lods
sub
cmpsl
insb
adc
pop
sub
xchg
dec
loope
fneni(8087
pop
aam
jae
pop
add
xor
inc
push
in
lock
xchg
cli
jmp
inc
mov
fsubp
sub
mov
adc
pop
jns
rolb
pop
pop
pop
pop
mov
lcall
sbb
push
les
xchg
cmp
cwtl
in
jo
repz
nop
dec
dec
les
cmpl
sbb
mov
cmp
cmpl
jbe
sbb
jg
test
pop
pop
lahf
filds
sub
iret
andl
dec
js
adc
loope
scas
lods
aaa
lahf
pop
jmp
mov
into
xorb
push
jo
push
adc
icebp
cltd
jno
mov
pushl
pop
jl
cltd
arpl
and
pop
sbb
jg
adc
lea
dec
into
jmp
dec
push
cltd
fisttps
or
lcall
enter
jmp
jno
jmp
xlat
dec
in
xor
imul
insb
test
sbb
cmpsl
shrl
and
in
arpl
xchg
dec
ss
inc
jmp
aad
ret
xchg
stos
popf
and
jmp
push
adc
ja
mov
loope
jle
out
cmp
xchg
fsubl
mov
dec
jecxz
cmc
mov
cmp
xor
pushf
push
int3
cmc
xorl
mov
jmp
ljmp
jbe
out
pop
jo
loop
nop
mov
push
test
hlt
pop
imul
jmp
push
ljmp
cmpxchg
daa
test
pop
fcmovnu
lods
mov
pop
xchg
jmp
or
mov
push
jl
sub
cmp
push
test
dec
loopne
rolb
orb
cwtl
stos
mov
pop
cmp
add
rorb
pop
cmp
cmp
hlt
cs
popf
in
or
push
xor
pusha
jno
aad
int3
jg
sbb
xor
push
sub
js
push
fsubrs
sbbb
or
mov
and
ss
andl
adc
push
decl
adc
push
sbb
mov
dec
mov
dec
arpl
or
lods
aaa
rcr
mov
sbb
out
push
flds
fldt
pop
and
das
sbb
jno
clc
ret
add
cld
andl
jmp
scas
or
inc
or
add
dec
cmp
test
mov
inc
movsl
dec
pop
dec
add
jo
push
hlt
stc
mov
pusha
push
ss
xor
adc
pop
mov
pop
jl
nop
mov
cmp
ss
adc
rcr
cmpb
ss
inc
jmp
and
cld
mov
gs
mov
xchg
push
iret
lock
cmpsl
lods
fmuls
cmp
and
add
mov
rcrb
test
sbb
xor
dec
icebp
inc
pop
push
aas
sbb
decl
mov
mov
mov
mov
js
cs
jmp
and
push
lods
dec
add
jnp
int
push
xchg
push
inc
test
dec
xchg
int
mov
push
clc
js
xor
mov
setno
loop
mov
add
mov
xchg
fmuls
mov
xor
movsl
adc
push
and
adc
rorb
std
add
cltd
fldl
je
mov
cmp
xchg
repnz
sbb
adc
cmpsb
aam
mov
push
test
sbbl
inc
add
or
jmp
inc
daa
mov
and
jge
lds
sub
out
rclb
fwait
bound
cmpsb
jle
addr16
mov
loope
arpl
jmp
add
cwtl
mov
js
mov
cmc
fwait
arpl
or
mov
jg
test
cmp
insb
xlat
ficoml
add
xchg
add
bound
jecxz
xchg
rcl
adc
sub
mov
jp
out
test
iret
hlt
and
adc
pop
add
cmp
aad
inc
cltd
or
cs
xlat
push
adc
aaa
pop
adcb
inc
xchg
int
scas
inc
sbb
repz
jl
enter
sub
movsl
jle
in
add
arpl
and
mulb
push
loope
in
mov
push
fwait
movb
jp
mov
mov
and
dec
adc
imul
aas
and
mov
clc
push
negl
pop
xchg
adc
add
sbb
ret
mov
push
lahf
dec
sbb
xchg
aas
aas
cld
ljmp
cmp
loope
inc
out
movl
xor
pop
or
cmp
mov
sub
in
lret
mov
cmp
shr
in
xchg
xchg
insb
or
xchg
sar
xchg
fcomp
inc
sahf
call
mov
mov
mov
jle
xor
nop
mov
xchg
lods
shlb
add
dec
mov
stos
mov
dec
movsb
lock
sbb
cs
dec
xor
pop
adc
fs
adc
push
mov
jge
xor
mov
je
cld
pop
scas
js
lds
ds
dec
mov
aaa
xchg
pop
jp
out
adc
cmc
icebp
mov
mov
pop
fnstenv
pop
inc
inc
sbb
les
add
xchg
loope
sbb
xor
cli
cmp
fdivl
lahf
or
bswap
cld
inc
cld
mov
add
push
adc
push
popf
dec
fisttps
cmp
fcomp
cmc
or
js
push
dec
adc
mov
and
xchg
push
fs
jno
repz
pop
or
cld
dec
push
xchg
lret
mov
scas
cltd
sbb
ja
jmp
ja
xor
mov
inc
lock
mov
inc
repnz
lock
iret
stos
lret
jl
cwtl
mov
push
or
jecxz
stos
pop
add
scas
xorb
orps
and
xor
mov
push
pop
mov
pop
xor
pop
lret
xchg
pushf
push
loopne
mov
add
or
fwait
add
mov
and
mov
sbb
fmull
mov
cmpsl
test
mov
out
ficompl
inc
mov
out
cmc
push
dec
add
sub
inc
add
jg
cmp
mov
and
sub
leave
ret
inc
dec
dec
mov
ret
inc
inc
lea
push
push
dec
repz
push
push
insb
lea
push
bound
pop
adc
mov
outsb
fs
mov
push
push
inc
lret
test
xor
jae
repnz
rolb
cli
roll
movsb
insl
add
or
push
xor
xor
pop
mov
dec
inc
xchg
cmp
mov
inc
fcomi
testb
inc
xor
xor
sti
push
gs
push
pushl
sbb
mov
push
jmp
jl
std
je
push
popa
mov
pop
adcb
insl
inc
imul
call
dec
push
push
mov
push
ljmp
xor
outsl
xor
int3
jg
cmpsb
or
gs
dec
add
dec
sub
mov
fbld
imul
mov
jns
push
add
sub
inc
dec
inc
dec
int3
push
push
outsb
out
pusha
inc
push
inc
cld
push
or
mov
push
mov
adc
dec
dec
repnz
inc
js
push
mov
fstps
push
hlt
push
or
add
mov
shll
imul
add
push
aam
mov
test
scas
add
inc
dec
push
fists
mov
mov
mov
faddl
iret
lcall
sbbb
add
mov
out
cmp
pop
scas
fmuls
loop
dec
jne
or
into
push
push
xchg
repnz
pop
inc
xchg
rcr
idivl
lret
mov
pop
cwtl
mov
or
rcr
inc
sbb
xor
inc
xor
hlt
sub
sbb
xor
test
push
mul
inc
pop
shlb
and
push
dec
imul
shr
push
push
jmp
je
loop
mov
inc
cmp
xchg
dec
and
enter
mov
lods
mov
cwtl
dec
in
fldl
lret
out
ret
inc
stc
mov
jns
roll
xchg
mov
and
push
cld
cltd
insl
jns
cmp
roll
mov
sar
sub
dec
mov
cli
cltd
sbb
clc
loopne
hlt
push
and
pop
sar
jl
cmp
clc
add
cmpsb
fildll
rclb
mov
clc
adc
sub
jne
add
push
or
cmp
adc
rcrb
mov
or
jb
imul
sub
mov
mov
in
clc
push
push
push
sub
mov
inc
pushf
clc
jb
dec
ljmp
inc
add
push
dec
mov
pop
ret
cmpl
sub
fadds
push
push
jbe
pop
call
xor
cmp
push
cld
and
bound
and
bound
into
outsb
dec
inc
je
jg
mov
ss
cmp
dec
jne
insb
imul
pop
push
inc
sarb
inc
mov
xor
push
test
push
je
fsubr
and
push
dec
jb
xor
inc
lods
stos
push
outsb
movsb
dec
cmp
xchg
vpsrad
push
testl
push
je
flds
lock
mov
inc
sub
and
lcall
pop
or
dec
inc
iret
les
lcall
xlat
inc
xor
cmpsb
pop
add
push
dec
inc
out
inc
fdivrs
inc
lods
ss
pop
push
dec
outsl
cs
cmp
push
dec
push
pop
jecxz
fwait
mov
dec
mov
xchg
xor
mov
dec
jb
lret
add
bound
mov
inc
jmp
movb
cmp
push
dec
aad
cmpsb
dec
push
add
call
icebp
and
xor
dec
pusha
dec
pop
push
int
out
push
pop
adc
inc
xchg
ljmp
jb
dec
pop
mov
push
cmp
mov
nop
sub
insl
roll
das
int3
jmp
fisttps
jb
sbb
mov
push
repnz
es
outsb
cmp
inc
inc
stos
fsub
sub
xlat
cmpsl
push
orb
dec
nop
test
inc
mov
stc
mov
dec
add
cmpsb
outsb
jnp
ret
push
inc
mov
dec
arpl
jl
jl
push
imul
ja
push
divl
in
dec
jne
std
loopne
cmpsl
fidivs
or
pop
bound
jb
dec
dec
lret
loopne
lock
push
inc
dec
push
inc
push
jbe
xor
xchg
sub
fidivs
mov
push
fadds
jo
jbe
call
out
mov
dec
or
add
imul
add
xchg
rcll
out
mov
je
mov
add
mov
insb
pop
push
jne
push
inc
rcll
inc
or
pop
repz
or
sub
dec
fadd
add
mov
cmpsb
cmp
xor
dec
add
sti
ja
aam
add
pushf
mov
add
insb
mov
pop
mov
outsl
mov
lods
inc
inc
push
lock
js
roll
sar
mov
call
fs
add
out
negb
fcoms
shlb
xchg
negb
shl
in
cmp
push
js
movl
inc
add
inc
jno
xor
inc
sbb
xlat
cmpsb
movsb
inc
push
dec
push
cmp
rclb
pop
push
dec
pushw
inc
dec
sub
sbb
jbe
mov
shr
xchg
xor
jo
stc
push
loop,pt
xor
inc
push
add
loop
push
jo
ret
jle
aaa
and
sub
xor
push
pop
imul
loopne
sti
lds
cmp
xor
dec
outsb
js
aas
mov
dec
lcall
test
outsb
sub
xlat
xor
stos
int3
ret
adc
int3
adc
roll
out
roll
cwtl
dec
inc
inc
dec
into
inc
add
andb
mov
arpl
xor
lret
out
push
xor
inc
add
das
sub
dec
inc
addb
popa
fs
lea
add
jo
push
jns
icebp
lret
out
aaa
push
sbb
shlb
dec
jp
js
dec
or
iretw
ret
xor
not
dec
adc
stos
xchg
ja
nop
cmp
popf
jo
xor
push
inc
stc
cmp
inc
aad
adc
push
dec
ja
push
lock
push
cmp
fidivl
repz
rolb
shll
mov
push
lods
xor
out
add
cli
imul
dec
push
xchg
or
add
inc
xor
insl
rorb
adc
mov
call
repz
lds
dec
mov
out
push
inc
divb
inc
dec
pop
fs
xchg
push
push
xor
dec
rolb
push
cltd
subl
inc
sahf
repnz
dec
add
adc
insb
inc
js
hlt
push
enter
fnstenv
mov
push
out
dec
rorl
jno
out
insl
cmp
mov
sub
lods
push
shr
cmp
xchg
fisubrs
stos
and
push
insb
add
pop
sbb
add
data16
dec
imul
dec
cmp
fimuls
push
cmp
sbb
jno
out
add
sub
jo
or
pop
insb
cmpl
mov
push
inc
sub
cmp
andb
lret
aam
inc
push
jae
ror
int3
xchg
xchg
shlb
mov
gs
xor
mov
mov
or
push
inc
mov
roll
cmpl
std
aad
mov
and
popa
dec
inc
dec
mov
flds
aam
dec
lods
inc
mov
dec
xor
mov
add
xor
shrb
imul
pushf
lds
ror
or
cwtl
sbb
lock
push
testb
inc
mov
inc
sub
inc
xorb
icebp
inc
dec
mov
inc
push
pop
jo
push
mov
cmp
push
outsb
orb
daa
mov
nop
sub
sti
pop
inc
je
inc
pushf
loop
or
pop
mov
jno
fs
dec
xor
push
rclb
add
imul
and
in
std
xor
inc
add
ljmp
rorb
test
inc
push
call
jp
in
test
je
cmpsb
dec
push
mov
push
rcrl
sub
push
rorb
shll
ror
sub
fs
push
cld
add
ret
lods
inc
aam
aas
pop
push
sbb
in
js
bound
ret
pop
mov
sar
jbe
dec
rcr
mov
stc
jecxz
mov
jbe
cmp
jbe
and
push
out
push
out
imul
out
call
mov
xlat
push
cli
xor
pusha
push
cli
js
ret
push
push
je
push
push
adc
mov
xor
mov
jp
push
inc
xor
rolb
clc
sti
shll
cmp
jbe
pop
ss
push
call
fucomi
pop
ss
fcmovne
mov
ja
movsb
inc
dec
and
inc
mov
lock
nop
je
jno
inc
xor
enter
arpl
push
jno
js
pop
sub
adc
sub
inc
rorb
insb
xor
sub
push
jbe
mov
xor
inc
popf
pop
ret
lock
dec
pop
xchg
inc
push
dec
sbb
pop
rolb
add
push
pop
push
jp
outsl
cmp
fcmovu
lock
cld
jl
dec
push
inc
jge
cmp
cmp
iret
daa
cmp
cmp
cmc
ljmp
xor
xor
xchg
dec
in
push
inc
gs
shll
push
call
pop
inc
and
shll
in
cmc
daa
cwtl
mov
jl
push
add
push
arpl
pop
add
xor
adc
adc
jnp
push
outsb
inc
dec
jo
add
insl
js
dec
es
inc
cwtl
loopne
push
dec
jae
das
gs
dec
pop
xor
out
push
inc
pop
cld
shrl
or
dec
pushf
xor
inc
cmp
dec
insb
inc
push
inc
jns
rcrl
mov
ret
dec
sub
push
push
test
fsub
push
in
mov
inc
pop
mov
jbe
mov
push
movb
dec
shl
fwait
idivb
popa
inc
hlt
out
push
outsl
ss
cmp
inc
jmp
push
inc
dec
mov
mov
mov
push
inc
dec
inc
inc
mov
out
adc
dec
inc
xor
outsl
lret
inc
sub
push
insb
cmp
aam
mov
mov
popa
fadd
mov
xor
jo
sub
jnp
pop
push
or
out
xchg
aas
shlb
and
repnz
sbb
out
inc
xor
inc
scas
mov
push
ljmp
push
shll
xor
ret
pop
mov
push
insb
inc
push
dec
int
iret
jle
mov
xor
icebp
mov
outsb
sub
arpl
push
jg
shll
dec
dec
dec
xor
inc
jae
dec
ret
bound
in
adc
inc
hlt
xlat
xor
clc
push
xor
test
in
ror
mov
out
jo
xor
inc
rol
bound
xor
add
data16
lock
addr16
mov
dec
imul
push
addr16
out
lock
fmuls
adc
inc
sti
add
data16
adc
cmp
cmpsl
xlat
push
cld
cwtl
shrl
inc
pushf
testb
xor
add
lock
clc
sub
mov
cmp
pop
mov
push
pop
test
loopne
push
push
scas
mov
sub
popa
push
push
imul
push
jle
mov
jp
popa
lock
xor
add
inc
mov
mov
popa
xor
dec
sahf
cltd
add
out
fs
outsl
jae
xor
mov
push
arpl
nop
dec
push
fucom
incl
push
push
and
adc
repz
arpl
xor
lock
dec
sbb
dec
sbb
popf
jne
scas
inc
cmpsb
fmuls
insb
aam
sahf
enter
lcall
insl
ss
inc
inc
jne
push
aam
mov
stos
shll
jo
scas
push
jns
pop
push
imul
insl
fmul
jbe
pop
ja
dec
imul
and
xchg
push
repnz
add
int3
xor
stos
or
test
ss
sbb
inc
ja
pop
insb
cmovnp
or
sti
adc
inc
hlt
ret
xor
outsb
inc
sti
test
dec
adc
fimull
jmpw
rolb
cmp
push
jns
inc
xor
loopne
jb
mov
mov
fildl
mov
dec
push
popa
inc
push
scas
es
testb
or
sub
inc
movsl
inc
jb
je
mov
add
repnz
push
adc
jmp
movsl
test
xlat
mov
cmp
sti
ror
pop
xchg
push
jp
lret
cmpb
sub
icebp
sbb
inc
push
in
xor
out
outsb
sbb
dec
sbb
repz
call
or
mov
sbb
add
pop
jns
sbb
push
push
call
pop
dec
push
lret
dec
mov
lock
jg
inc
ss
arpl
ljmp
and
mov
dec
jno
add
dec
mov
inc
mov
or
ret
ljmp
arpl
jecxz
addr16
or
rcrb
sahf
push
add
bound
push
cmp
das
stos
rorb
fldenv
shl
dec
inc
dec
jns
rol
cmp
xchg
jbe
lods
clc
pop
ljmp
pop
shlb
inc
and
lds
jne
pop
xor
fs
mov
inc
and
mov
inc
cs
inc
stos
push
xor
jo
dec
pop
call
call
jb
dec
addr16
xor
mov
addr16
inc
dec
in
adc
movhps
xor
dec
mov
inc
loope
loop
out
data16
cmp
pop
jmp
xor
es
mov
add
mov
enter
movsb
sub
or
xchg
xlat
imul
mov
lods
xchg
inc
mov
mov
hlt
insb
dec
dec
sub
mov
sub
mov
push
inc
lods
sbb
xchg
sub
inc
mov
xor
mov
repnz
xor
mov
dec
inc
mov
sbb
adc
xor
dec
push
sahf
push
in
out
cmc
cmp
push
lods
loop
xchg
add
mov
dec
enter
push
fidivl
lods
lea
mov
push
notl
or
cmp
jmp
subl
push
sub
popf
out
addb
bound
or
xor
ja
mov
jne
jns
xchg
in
or
mov
orb
sub
jbe
pop
jo
inc
and
push
inc
add
clc
cld
mov
popa
mov
jne
outsl
cltd
mov
cmp
popa
cli
dec
add
cwtl
jecxz
sub
lcall
xchg
shrb
mov
lock
sbb
dec
cwtl
cmp
shrb
lock
cltd
ret
adc
dec
sbbl
into
shrb
or
mov
inc
mov
inc
mov
pop
or
mov
cmpsl
push
add
cmp
mov
addb
sub
xchg
clc
xor
xchg
xchg
jle
adc
in
inc
push
jb
mov
and
sub
dec
push
inc
dec
or
push
std
xor
inc
push
or
cwtl
inc
mov
test
and
inc
lcall
lock
stc
add
push
adc
jo
adc
push
arpl
inc
pusha
pop
mov
std
push
bound
jle
test
xorl
dec
mov
fiaddl
push
push
call
xchg
sub
stc
pop
push
ds
and
push
xor
adc
xor
ds
dec
fsubrs
lds
mov
imull
mov
sahf
jp
mov
out
aaa
push
aas
or
cmp
xor
ss
movsb
ret
mov
dec
push
out
gs
test
imul
stos
adc
lcall
int
cmovnp
cmp
xchg
test
aam
loope
and
sti
dec
cmpsb
jl
pop
lock
sti
mov
push
jne
data16
pushf
adc
bound
ss
out
movb
in
or
xor
sbb
call
jb
gs
xor
mov
inc
pusha
sub
shrb
mov
xor
ss
movsl
inc
mov
push
mov
or
sbbl
jl
dec
div
xor
movsb
xchg
pop
push
cmp
xor
push
insb
pop
stos
push
enter
pop
data16
imul
shlb
ss
and
cmp
movsb
into
dec
fsubrs
pop
loope
lret
mov
cmp
inc
push
std
inc
jb
cld
fmuls
repnz
xchg
roll
add
inc
sbbl
shll
pop
mov
fimull
decl
add
cmp
sbb
sar
sbbb
std
enter
push
outsb
dec
xor
mov
pop
inc
icebp
lods
mov
dec
push
fs
pop
xchg
js
clc
sub
mov
out
push
dec
test
push
enter
sbb
call
xchg
inc
push
dec
inc
add
enter
cmpl
jbe
lret
dec
jp
dec
sbb
pop
aas
shl
sub
rclb
vextractf32x8
je
jne
lods
xor
mov
pop
xchg
push
sar
into
xchg
rcrb
repnz
push
xor
lret
add
sbbb
test
ret
push
cmp
or
clc
lret
f2xm1
repnz
xor
add
jb
mov
sbb
ss
xchg
push
push
add
pop
push
jg
xor
inc
stc
inc
pop
mov
arpl
push
jb
dec
pop
std
xor
sti
loopne
jle
mov
fmull
push
jnp
inc
arpl
xchg
insl
dec
push
dec
sub
adc
dec
clc
jb
into
add
dec
ss
pop
xor
aas
add
jno
fiadds
lods
inc
addb
mov
xor
jl
xor
dec
dec
dec
dec
fwait
dec
imul
sub
data16
push
add
es
in
adc
pop
sbb
add
fisubs
loopne
push
push
dec
push
aaa
arpl
stos
shl
mov
loopne
roll
or
mov
xor
pop
adc
fsubr
adcb
stos
lcall
lret
mov
dec
mov
ja
insb
les
outsl
push
stos
loop
dec
outsb
icebp
mov
mov
js
or
rcll
pop
divl
push
dec
dec
dec
jne
pop
jmp
push
push
inc
mov
dec
mov
push
loop
xchg
and
sbb
push
mov
inc
cmpsl
mov
inc
dec
pop
inc
cmpsb
push
pop
mov
push
fcoml
inc
cmpsb
lods
mov
cmc
and
inc
push
mov
cmpsl
xlat
sbb
dec
outsb
push
push
inc
push
adc
pop
fmull
and
dec
xor
incb
add
push
xchg
pop
testb
insl
loope
cmp
aaa
pop
inc
pop
rol
aad
push
arpl
push
hlt
push
inc
pop
push
movb
push
loope
cmpsb
adc
adc
ret
ja
xlat
mov
inc
jb
pop
test
mov
jo
ss
data16
jl
outsl
imul
and
push
negl
fs
dec
mov
xchg
dec
out
lahf
jbe
pop
insl
insl
add
in
loopne
js
dec
pop
sub
loop
sub
inc
outsb
dec
jl
loop
jle
loop
mov
jne
jle
outsl
push
scas
aaa
dec
popa
add
push
insb
dec
std
shll
xor
dec
inc
xor
les
das
jmp
mov
sbb
into
loope
mov
pusha
iret
jo
jns
mov
jmp
push
js
mov
adc
dec
add
bound
pop
add
xor
daa
cs
dec
inc
dec
je
rorl
fiaddl
fsubrs
bound
mov
inc
clc
ja
clc
push
xchg
lret
sub
outsb
xor
fwait
jne
push
xor
or
mov
out
sub
ret
or
pushf
dec
inc
dec
add
ret
in
mov
mov
outsb
jecxz
inc
mov
fldl
cmp
jp
pop
lods
sahf
xor
cs
nop
pop
mov
adc
test
sbb
inc
cs
loop
aas
inc
popa
out
jbe
dec
sub
inc
pop
mov
hlt
lods
add
xchg
add
popf
mov
cld
push
push
mov
dec
cmpsb
shrb
push
push
inc
pop
shll
xor
dec
int3
mov
ficoms
outsb
jo
inc
inc
xor
ds
outsl
ret
dec
test
pop
push
inc
sti
push
add
push
imul
xor
sbbb
sbb
imul
dec
je
gs
push
push
push
push
pop
and
dec
pop
enter
push
sub
dec
cvtpi2ps
jmp
push
insl
or
les
inc
dec
popa
rolb
push
pop
sbb
rcrb
jne
in
and
inc
lods
decb
pop
push
xlat
adc
add
lock
xor
gs
or
xchg
mov
repnz
roll
pop
xchg
rorb
out
std
inc
imul
addr16
js
ret
push
mov
orb
push
inc
pop
jns
dec
inc
add
dec
inc
cmpsl
js
sub
dec
push
mov
add
mov
inc
cmp
enter
jb
xor
add
sub
js
add
cmpsb
sub
and
jo
add
push
bound
mov
lea
cs
push
xorl
add
gs
jmp
ret
dec
lods
int
pop
dec
dec
inc
daa
mov
xor
adc
jns
mov
cmp
inc
mov
push
dec
inc
sub
pop
shlb
jo
push
sub
push
push
inc
lea
adcl
sar
or
jecxz
pop
sbb
addr16
dec
bound
sbb
xchg
lea
mov
ret
cli
mov
mov
lods
push
push
dec
pusha
push
das
js
pushf
pop
dec
mov
dec
dec
mov
cmp
lock
dec
or
push
dec
pop
pop
lcall
adc
fs
pop
mov
pop
pushf
mov
push
adc
outsl
dec
dec
mov
jle
cmp
mov
push
outsl
mov
decb
push
push
lfs
sbb
das
ret
call
repnz
outsb
dec
cmp
jo
sbb
push
cmp
mov
aaa
jne
ffreep
dec
insb
cmp
add
pop
outsl
jbe
test
mov
and
push
pop
pop
lock
shl
enter
cmp
jo
xchg
mov
mov
shrb
dec
jae
dec
sbb
mov
push
and
jo
lret
callw
call
lods
sbb
sbb
xor
xor
out
push
arpl
push
cmpsl
push
push
loopne
call
rcrb
mov
test
xchg
mov
gs
scas
cmp
cmp
push
aam
dec
decb
xchg
lea
out
pop
mov
scas
lret
andl
mov
fsubs
sub
push
int3
xor
and
dec
clc
cmpsl
sbb
xor
data16
movsb
dec
pop
push
lret
add
enter
add
push
stos
mov
sbb
push
lods
push
mov
orb
pop
fcoml
test
fcmovbe
std
dec
push
pop
insl
adc
dec
xor
jge
add
or
and
pop
adc
mov
or
push
inc
jne
add
adc
adc
add
add
push
ds
dec
jb
cwtl
push
and
xchg
test
mov
mov
gs
imul
pop
push
xor
inc
pop
in
dec
and
xchg
xchg
leave
jle
sbb
inc
adc
jne
add
inc
lahf
push
leave
add
insl
fisttps
jbe
dec
mov
push
jbe
mov
addr16
ficompl
xor
into
add
and
into
push
add
jmp
push
pop
shll
sbb
push
push
jp
inc
imul
add
mov
rcll
bound
insl
sbb
andl
test
jne
aas
sarl
jne
fs
aaa
je
aam
outsb
pop
or
jnp
xchg
aaa
add
dec
jmp
add
rolb
in
bound
imul
jb
gs
mov
add
lea
adc
outsb
jbe
gs
rcl
mov
dec
lcall
sub
inc
dec
cmpsb
outsb
rolb
push
inc
cld
mov
pop
jle
lea
ss
sbb
adc
aas
pop
insb
or
dec
xchg
pop
inc
cmp
lock
dec
add
ds
fimuls
mov
jg
pop
fmuls
or
add
push
xchg
leave
fs
and
or
cwtl
jno
mov
add
inc
push
rcrb
fimull
movnti
adc
inc
clc
stos
les
xchg
inc
out
bound
xchg
decl
mov
mov
xorb
gs
mov
add
xchg
cmp
insb
and
outsl
arpl
push
or
xchg
pop
xlat
mov
icebp
lea
shlb
shrb
cmp
sbb
adc
jns
mov
cmpsl
pop
scas
bound
lret
push
sub
mov
call
stc
out
sbb
mov
enter
push
pop
dec
sub
push
movsl
pop
mov
cmc
test
adc
inc
stc
lods
dec
pop
in
loop,pn
xor
aas
outsl
arpl
mov
aas
in
mov
dec
push
inc
stos
sbb
andl
leave
push
aas
insl
and
and
ficoms
mov
push
roll
and
int
fisubrs
adc
ja
cwtl
stos
pusha
std
aam
xchg
dec
subb
out
pushl
xor
into
xorl
jmp
and
aad
mov
xlat
pushf
and
mov
jle
inc
push
sub
scas
pop
adc
ja
fiadds
call
insb
jp
enter
enter
mov
lret
jle
mov
dec
add
jmp
std
push
sbb
push
pop
mov
cmp
mov
ljmp
and
push
cwtl
scas
jg
add
jecxz
lods
adc
pop
iret
inc
scas
int3
xor
out
dec
ljmp
sbb
xorb
cli
pop
in
mov
cmp
push
mul
mov
mov
decl
cmpsl
pop
push
ret
lods
inc
notl
sub
sahf
and
mov
jl
in
test
gs
mov
shlb
sub
sub
imul
sub
outsl
and
mov
mov
inc
push
lock
jbe
push
test
mov
nop
sub
jns
leave
mov
cmc
sti
cwtl
addb
out
ficomps
cwtl
dec
add
jmp
push
add
stc
icebp
cs
out
mov
movsb
inc
mov
cld
out
out
sub
mov
pop
cwtl
loope
push
cwtl
cmpsl
es
aaa
outsl
jo
in
andb
int
outsb
or
mov
icebp
cmp
aaa
push
pop
cmp
xlat
cli
cwtl
or
xlat
adc
cmp
cwtl
push
mov
jp
and
ja
mov
pop
addl
in
cwtl
into
mov
and
lcall
add
leave
add
push
arpl
test
in
lahf
push
inc
notb
icebp
xchg
out
mov
cld
jle
xor
pop
mov
icebp
jg
fisttpl
loope
cld
das
scas
cld
dec
cld
int
out
push
xor
adcl
lahf
outsl
ja
push
fstpt
push
test
mov
xor
inc
icebp
shll
mov
xchg
pop
sub
lods
pop
push
sarl
jo
repz
sub
xchg
cmp
and
lret
or
mov
add
aaa
ljmp
icebp
cmp
popf
push
add
int3
dec
shr
mov
sub
dec
frndint
mov
out
mov
or
nop
or
sub
xchg
mul
inc
ret
pop
xchg
xor
stc
inc
push
and
and
push
mov
imul
rolb
call
jno
stc
mov
mov
push
cwtl
sub
fistps
xor
scas
inc
cli
and
cwtl
jb
sbb
inc
pop
cmc
dec
jg
lcall
ret
add
test
pop
fistpl
jae
jmp
mov
es
mov
mov
in
popf
pop
pop
adc
inc
sti
xchg
inc
arpl
stc
xchg
cmp
mov
and
push
jp
outsl
incb
les
loopne
enter
mov
repz
inc
inc
cmc
mov
int3
test
loop
xchg
dec
cld
push
aas
aas
outsb
call
mov
xor
sub
outsl
mov
or
mov
lret
movsl
inc
inc
neg
jbe
std
inc
stc
xor
xchg
ljmp
cwtl
push
sbb
mov
add
xor
cmp
xor
inc
xor
scas
test
cmp
jo
mov
icebp
lds
out
and
das
jnp
xor
out
push
std
and
fwait
mov
addr16
cltd
dec
addr16
mov
push
incb
lcall
aas
cmp
mov
pop
pop
loope
repz
inc
add
jne
int
scas
test
sub
fld
jge
gs
cmc
push
outsl
cmc
aas
and
mov
insl
xchg
test
stc
outsl
mov
and
and
push
or
ret
cwtl
pop
negl
test
push
mov
adcb
fs
push
jg
cld
test
mov
mov
cmp
pop
icebp
xchg
add
xchg
add
inc
push
inc
add
push
test
jecxz
leave
pop
push
mov
sub
dec
add
and
int3
xchg
out
and
decl
fcmovb
xchg
or
mov
sub
js
pop
inc
fwait
loope
insl
loope
aaa
or
ret
lcall
loopne,pt
pushl
in
lcall
dec
jg
ljmp
xchg
mov
inc
mov
cwtl
lea
fldcw
and
test
out
add
dec
ljmp
push
cld
mov
insl
push
cmp
mov
sub
aas
pop
xchg
or
imulb
xchg
das
mov
js
jle
sbb
fidivs
dec
scas
push
into
fcompl
das
jle
push
mov
xchg
jnp
sub
sub
sub
cmpb
mov
enter
mov
mov
jg
cli
sbb
mov
and
mov
std
movb
sub
cmpsl
xchg
pop
mov
adc
lds
lods
popa
and
loop
xor
mov
cmp
and
int
add
push
icebp
incb
jecxz
adc
test
mov
ret
hlt
jbe
cld
int
std
decl
jns
push
scas
or
loopne
cmp
mov
das
jecxz
add
fucom
mov
jg
adc
mov
iret
or
sub
lret
ljmp
or
pop
cmp
test
pop
inc
fnstsw
sti
stos
cwtl
bound
jmp
lcall
xchg
mov
or
mov
loopne
sbb
sbbb
sub
test
lret
or
rolb
fcoms
addr16
and
mov
je
adc
lods
popa
jge
imul
call
lret
add
mov
mov
xchg
or
cwtl
movsl
inc
jo
stc
cmc
pop
test
sub
out
pop
adc
inc
and
sub
sub
out
clc
aaa
arpl
push
ret
ds
lret
xor
scas
sti
lcall
cmp
sahf
test
mov
fxch
in
sbb
mov
jl
outsb
mov
cmp
test
jle
das
xchg
or
pop
mov
mov
adc
in
imul
jl
fcmovnbe
jno
xlat
mov
mov
and
push
std
xlat
stos
test
std
imul
mov
iret
iret
cmp
xchg
das
loope
pop
sbb
jge
out
jns
fists
int
iret
xorl
xchg
scas
lock
cwtl
mov
jecxz
in
aas
fisttpl
cs
std
test
sub
das
mov
out
jg
adc
dec
pop
test
addr16
mov
fxch
push
and
pop
scas
cli
int
mov
and
cmp
mov
fnstenv
in
cmpsb
pop
push
stos
push
push
mov
les
sbb
scas
test
pop
jecxz
out
mov
push
push
push
adc
repz
pop
add
xchg
in
mov
push
hlt
sub
pop
lahf
stos
in
fldl
stc
push
mov
orb
mov
lcall
lock
sar
mov
js
xorl
dec
clc
imul
cmp
movsb
sub
lret
xchg
dec
pop
or
pop
test
pop
aaa
out
test
js
nop
dec
pop
xlat
inc
adc
int
cmp
clc
mov
xor
jmp
sti
mov
add
fstl
push
lea
lock
pop
loop
adc
and
adc
ja
repz
pop
aas
fs
out
and
lret
mov
icebp
jmp
je
std
fs
imul
push
in
mov
push
in
sahf
push
push
mov
fdivrp
incl
or
jno
sarl
inc
hlt
inc
adc
jbe
ficoml
jp
icebp
cwtl
adc
inc
cltd
dec
cwtl
ja
stos
repz
or
push
call
fninit
in
insb
insb
and
jb
mov
out
stos
lahf
repz
and
jecxz
cli
pusha
shrl
pop
loopne
je
xchg
lret
and
repz
xor
inc
js
pusha
rcrb
fisttps
or
insl
and
jnp
aas
sub
push
mov
pop
roll
or
lds
fwait
testl
push
mulb
xor
and
inc
scas
addb
lret
test
xor
adc
sub
inc
scas
cmpb
add
pop
shll
hlt
fcompl
stos
fwait
bound
idivb
jp
jecxz
push
repz
xor
and
and
cwtl
ficompl
shl
mov
in
xchg
inc
xchg
es
fistpll
popa
cwtl
movsb
mov
stc
xchg
lret
loopne
mov
cld
mov
fdivr
sbb
test
pop
jecxz
sarl
xchg
pop
jle
cmp
aaa
aam
jo
and
and
iret
cltd
jo
test
pop
in
xor
stc
pop
jbe
and
push
cmp
cwtl
lret
and
xchg
into
stc
cwtl
sbb
in
jmp
rclb
jg
push
repnz
lcall
jae
das
pop
icebp
pop
inc
jne
xchg
shlb
xchg
cs
mov
pop
jecxz
repnz
push
mov
or
jb
in
aad
sbb
mov
or
xchg
mov
mov
in
xor
inc
mov
ficoml
psubq
ja
sub
hlt
ja
fcoml
pmulhw
pop
xor
xorl
mov
fwait
cmp
and
xchg
out
pop
mov
int
add
out
lret
lcall
or
lds
push
cltd
repz
lret
and
jle
rclb
int
ljmp
sbb
push
in
test
repz
mov
sub
push
sub
in
icebp
loop
dec
xchg
and
push
ljmp
inc
or
pop
xchg
cmp
cmp
mov
addb
jb
inc
ja
aad
mov
xor
cld
nop
inc
mov
leave
or
xchg
sbb
sub
mov
sub
and
add
sub
sar
add
arpl
js
or
jb
out
mov
nop
sbb
add
out
ret
cld
in
inc
jge
and
lock
scas
mov
out
mov
lea
inc
mov
push
and
aas
dec
push
lahf
pop
jg
je
mov
or
test
sarb
push
pop
cld
cmp
inc
jns
mov
call
sbb
clc
push
or
and
jo
mov
outsl
daa
xor
daa
and
jl
sbb
lock
mov
mov
inc
push
xor
int
jle
mov
fwait
xor
mov
jne
xlat
or
and
xor
mov
test
test
pop
pop
js
inc
mov
xchg
mov
add
loopne
fcomps
cwtl
xor
fcomps
clc
mov
into
adc
dec
jmp
lds
in
push
icebp
xchg
ja
xchg
inc
inc
mov
inc
mov
hlt
clc
mov
and
and
mov
and
push
ficoms
je
push
cmp
fwait
and
addr16
out
push
and
enter
pop
test
scas
lcall
stos
loope
xchg
mov
push
mov
mov
pop
mov
test
test
xor
add
mov
sub
dec
mov
push
int3
das
xchg
lods
test
mov
daa
sbb
inc
push
icebp
es
or
ljmp
pop
ret
in
mov
in
mov
leave
gs
sbb
pushf
dec
test
inc
iret
push
pop
test
fs
imul
push
cltd
mov
movsl
xlat
xor
push
lods
aad
cld
xchg
sub
fs
xchg
inc
jo
dec
int3
mov
int3
je
jnp
mov
les
les
and
clc
fldl
push
mov
sub
aad
int3
or
fistpll
mov
add
ret
xchg
mov
jns
xchg
ds
push
mov
cmp
mov
aaa
fistl
sub
mov
fbld
push
mov
and
dec
fwait
cmp
sub
xor
mov
xchg
mov
scas
dec
add
jge
mov
jmp
jmp
jno
cmp
xor
insb
icebp
stc
mov
mov
addl
inc
div
dec
test
ds
xchg
cs
fstpl
cs
sbb
jg
add
cwtl
pushf
jmp
and
pop
sar
dec
mov
lock
cmp
mov
lock
xchg
inc
jae
jmp
inc
and
out
lret
stos
adc
sbb
lods
fs
lock
and
fs
in
mov
lods
cmp
add
push
mov
and
cwtl
push
stc
lret
cli
add
test
jbe
idivl
stos
pop
inc
popa
jl
xchg
mov
and
scas
int3
sahf
mov
cwtl
dec
test
add
mov
sbb
inc
lock
icebp
inc
imul
enter
push
out
mov
sub
sub
call
push
pop
scas
push
mov
pop
scas
aaa
or
push
xchg
enter
outsb
js
xor
pop
icebp
mov
pop
mov
gs
cwtl
adc
dec
push
sbb
push
in
mov
gs
xchg
xor
adc
imul
jae
aas
scas
sbb
push
adc
and
sahf
pop
das
jle
push
test
adcb
daa
ret
lock
std
popa
push
fidivrs
or
jmp
lret
popa
clc
xchg
xor
and
lahf
roll
push
cmp
lods
insb
pop
test
and
mov
lahf
xchg
dec
or
or
inc
xchg
cmp
jecxz
sbbl
cmc
int
dec
add
scas
xor
push
daa
lea
push
jo
cwtl
lahf
mov
test
mov
and
pop
outsl
out
xchg
in
inc
and
inc
imul
sub
mov
push
aaa
jle
xchg
in
jmp
aam
imul
sar
pop
rolb
xor
pop
mov
xchg
in
fcoms
xchg
adc
in
das
lds
inc
popa
rcrb
dec
or
ret
mov
adc
xchg
and
mov
jo
jne
in
inc
push
xchg
sbb
xlat
add
enter
adc
mov
sub
jno
test
leave
fldl
xchg
imul
xchg
dec
dec
lcall
ljmp
das
mov
xor
insl
xchg
out
xor
add
ljmp
stc
xchg
sub
sbb
std
outsl
push
loopne
pop
sub
fwait
push
or
jp
pop
xor
cmp
dec
cld
ret
out
jns
icebp
mov
rorl
out
or
loop
cmp
sbb
sbb
sbb
lret
scas
dec
fcmovnu
inc
mov
cmp
mov
add
jmp
jbe
inc
adc
int
std
adc
inc
xlat
jae
frstor
jno
dec
cwtl
mov
ret
pop
fwait
push
push
cld
aad
ljmp
push
or
add
cwtl
ja
insb
pop
cld
lods
pushf
push
xor
fsub
cwtl
lea
adc
or
inc
or
stc
xor
mov
push
ret
sbb
in
xchg
dec
sbbb
scas
pop
mov
or
test
icebp
or
roll
jbe
iret
push
nop
pop
fcmovu
xchg
das
xor
stos
aas
fistpll
push
rol
cltd
mov
jge
push
push
push
aad
xor
fstl
push
test
cs
fcmovbe
insl
inc
fdivs
je
sti
and
ljmp
pop
xor
loope
sub
test
cmpsb
adc
fninit
xchg
cwtl
push
dec
pop
mov
push
cmp
and
outsb
adc
mov
lahf
sub
cmp
shlb
add
pop
push
loop
ljmp
cltd
pop
adc
pusha
mov
in
jecxz
xchg
aaa
fistpll
std
in
sbb
add
outsb
in
into
lret
mov
lret
mov
mov
sbb
mov
xor
xchg
push
repz
testl
adc
jge
clc
cld
in
add
xor
mov
shl
test
aas
pop
mov
int
jg
aaa
rcrb
into
aas
adc
mov
out
shrb
sub
push
xor
inc
pop
mov
inc
lahf
mov
and
mov
add
inc
xchg
mov
fdivs
std
mov
mov
xchg
ret
movsl
xor
and
or
in
xchg
cwtl
iret
aas
mov
dec
xchg
and
lahf
cmpsl
xor
aas
cmc
stc
mov
push
mov
push
or
xchg
xchg
enter
aaa
adc
sti
xchg
cli
pop
lret
int
incb
pop
xor
mov
mov
cmpsb
sbb
cld
test
bound
int
lret
push
sbb
xor
lahf
push
or
test
add
jnp
jmp
int3
fiaddl
add
aam
cmp
faddl
aad
dec
dec
fnstsw
pop
loope
call
inc
xchg
sti
mov
in
movsbl
outsb
or
stos
inc
push
xor
pop
xchg
pop
std
repnz
push
mov
in
clc
mov
insb
and
sub
cmp
loop
xor
pop
ja
aaa
js
or
ljmp
out
out
pop
pushl
mov
loopne
xor
stos
mov
gs
push
add
ljmp
push
sbbb
stos
push
push
or
jo
mov
inc
aas
xor
pop
mov
lea
dec
shll
sarl
inc
arpl
mov
loopne
test
mov
sub
cli
je
icebp
push
push
in
movsl
cmpsl
sub
sar
in
movsl
mov
sub
test
pop
jb
mov
jbe
jl
stc
lret
scas
dec
inc
and
sbb
dec
mov
in
aad
sbb
cmc
jge
incl
mov
dec
pop
push
repnz
jge
movsl
inc
pop
mov
jbe
out
je
fs
jo
inc
mov
cs
push
dec
jmp
jl
dec
call
loopne
sbb
cld
mov
dec
cwtl
mov
loop
push
sbb
sti
xchg
mov
lock
pop
std
pop
negb
daa
test
add
push
shlb
dec
sbb
push
in
dec
cld
dec
add
pop
mov
hlt
cmp
test
and
sbb
cmpsb
jg
adc
sub
push
fcoml
xchg
inc
stc
xchg
mov
mov
cwtl
das
lret
add
fs
mov
adc
loope
scas
jmp
nop
adc
jns
in
and
push
lret
lcall
mov
mov
cwtl
adc
and
int3
xor
clc
add
push
cmpsl
dec
int3
xorb
and
cmp
test
jmp
cmovl
lds
xchg
lea
ret
pop
ret
push
scas
mov
movsb
repnz
pop
std
cmp
dec
push
jl
int3
out
gs
imulb
inc
in
mov
cwtl
shll
cs
jg
iret
cld
dec
xor
lret
aam
ret
jb
mov
xlat
inc
mov
adc
lahf
ljmp
imul
in
mov
jp
push
dec
push
fs
lods
test
inc
ror
push
cmc
or
es
mov
ret
add
popf
xlat
adc
fbld
in
call
in
add
push
cmp
mov
xchg
lret
push
ljmp
xchg
jg
adc
out
jne
or
es
rorb
lcall
cmp
out
push
xor
pushf
cmp
mov
xor
aas
mov
xor
mov
cmpsb
test
test
dec
pop
stc
adc
mov
je
fistpll
in
scas
bound
push
pop
sbb
mov
mov
push
clc
mov
sub
and
mov
psubusw
gs
push
and
and
call
fldenv
shrl
dec
std
cltd
popf
xor
test
lret
aad
out
push
test
mov
push
cld
dec
pop
ja
lahf
cmp
mov
add
out
mov
inc
nop
pop
insb
cmp
shll
sub
nop
pop
adc
out
out
aas
int3
or
jmp
xor
xor
push
js
cld
adc
in
test
lahf
mov
imulb
aas
pop
cmpsl
int3
sub
xchg
mov
int
adc
js
enter
jle,pt
mov
jg
push
xor
mov
sahf
ret
pop
jne
lahf
popf
cli
xchg
je
mov
xchg
jb
inc
ret
add
insb
lret
pop
push
call
pop
push
scas
fistpll
sti
mov
dec
mov
jp
mov
push
pop
daa
jo
fiadds
xchg
inc
test
xlat
mov
sbb
jb
sarb
pop
push
test
movsl
xchg
inc
inc
scas
lret
ds
out
push
in
jl
orb
add
adc
icebp
push
inc
mov
sbb
loopne
je
xchg
test
add
xor
pop
clc
in
xchg
mov
fbstp
pop
jg
ljmp
test
cmpsl
pop
pop
loope
incl
cli
lahf
sarb
xchg
push
insl
in
sarl
cwtl
inc
xchg
add
add
add
inc
icebp
cwtl
stc
dec
mov
inc
icebp
jl
lahf
testl
and
push
or
push
roll
add
push
or
out
pop
in
test
fbld
push
xchg
fwait
aaa
out
and
pop
adc
or
dec
or
mov
iret
pushl
push
js
in
mov
aaa
aad
and
testl
je
adc
cli
stos
cwtl
jns
test
fadds
ja
xchg
fbld
push
sub
adcl
dec
xor
insl
xor
cs
push
mov
sbb
push
frstor
xchg
cs
out
xorb
sti
jne,pt
xchg
jnp
adc
ror
pop
sbb
push
lret
sarl
cmp
in
les
push
cli
fwait
inc
or
dec
push
clc
sbb
popl
orl
ljmp
push
lcall
push
fbld
push
xchg
push
push
xchg
ds
stc
jno
lods
cmp
js
inc
mov
adc
int
aaa
xor
pop
je
inc
mov
add
aam
outsl
pushl
ljmp
jae
adc
and
sub
test
xor
cmp
cli
ja
das
xor
push
mov
sbb
cltd
dec
call
cli
testl
pop
sbb
test
pop
add
pop
aas
sub
fdivs
mov
stos
int3
aaa
and
or
stc
and
cwtl
loope
mov
cld
test
inc
push
push
mov
mov
loope
test
fimuls
xor
lock
or
rcrl
enter
stc
ljmp
jl
out
pop
adc
rclb
dec
push
push
aaa
cld
in
je
jmp
shlb
mov
add
dec
sti
mov
add
aas
cmp
inc
push
stos
subl
cmp
xchg
js
pop
mov
les
out
arpl
push
mov
xorb
mov
inc
pop
into
mov
push
aam
push
adc
js
les
push
cmp
nop
inc
divb
and
pushf
xor
sahf
int3
or
orb
je
test
test
outsb
dec
mov
xchg
and
nop
ljmp
mov
testl
inc
mov
les
inc
mov
insb
je
push
fisttps
mov
outsl
lods
sub
dec
xchg
or
inc
das
jmp
and
addr16
int3
ja
outsb
push
adc
mov
fistpll
icebp
mov
test
adc
popa
mov
je
call
int
addr16
fs
sahf
ds
adc
ljmp
dec
cmpl
repnz
xor
loope
negl
lret
xchg
out
pop
and
stc
je
add
pushf
loopne
adc
mov
push
out
add
pop
lret
mov
xchg
pop
push
jg
add
insb
ljmp
out
cmpsl
xor
cmp
jp
push
cltd
out
dec
lret
adc
sar
in
cmp
roll
push
aam
repz
mov
mov
fsubrl
lcall
jbe
pop
jb
lods
dec
xchg
test
out
and
push
xchg
lock
cmp
orl
sbb
outsl
scas
insb
fidivs
lods
testl
xchg
and
mov
adcb
repz
sub
inc
cmpsb
dec
lock
add
push
jae
sub
jp
movsl
sub
lock
js
jbe
xor
loopne
je
es
mull
scas
in
notl
xor
cld
pop
xor
mov
dec
sbb
mov
or
inc
xor
mov
push
push
cwtl
inc
pop
or
mov
test
clc
je
sahf
sub
push
cmpsl
ljmp
stc
xchg
mov
adc
push
scas
pop
cld
ljmp
pop
fmull
xlat
mov
push
or
fsubrs
aas
cmc
aas
out
and
lock
andl
cld
sahf
jle
ret
shl
scas
xor
enter
int
push
add
cmc
or
push
and
fimuls
loop
push
push
bound
cmpsl
adc
or
xchg
inc
jg
repz
jl
sbb
mov
lret
mov
out
ss
nop
cmp
push
push
or
mov
xchg
daa
subl
jl
das
loope
inc
insb
leave
dec
sahf
fsubrp
fldenv
pop
cli
cld
inc
xor
push
and
addr16
add
aas
jg
lahf
and
push
xor
outsl
daa
repnz
inc
jle
jae
add
inc
fbld
subb
jl
lfence
out
data16
imul
out
mov
mov
mov
pushf
pop
inc
sbb
fnstsw
push
xor
sub
pop
stc
inc
mov
sub
jl
sbb
scas
or
xor
ficomps
lret
add
sahf
addr16
fdivrp
ja
inc
inc
mov
pop
lods
mov
mov
fwait
mov
test
and
mov
sarb
icebp
inc
sbb
push
lods
xchg
push
cld
data16
xchg
dec
incb
xor
mov
sbb
andl
leave
jle
loopne
inc
insb
or
jne
and
mov
fcomip
outsl
or
int3
fisubs
cmpsl
fdivrp
lret
lret
ja
cld
js
xchg
fiaddl
push
adcl
call
outsl
push
out
adc
cld
rolb
outsl
aas
aas
lock
xchg
ds
outsb
dec
addl
inc
in
push
mov
fcoms
mov
or
jbe
add
cmpsb
jmp
mov
fadds
inc
or
and
popf
jo
add
mov
cltd
dec
test
daa
mov
sbb
mov
push
loopne
jge
jge
arpl
dec
and
lret
mov
sbb
inc
cmp
pusha
roll
lret
mov
xchg
jbe
das
push
pop
inc
push
repnz
call
xchg
cli
pop
sub
and
lahf
movsl
or
out
nop
lods
mov
outsl
inc
scas
orb
imul
cmp
push
test
cmpl
lret
jg
xchg
pop
je
leave
loopne
dec
push
js
das
pop
mov
popf
mov
push
rorb
inc
mov
sar
push
xchg
or
cmc
jl
std
movsl
jmp
cmpsb
inc
dec
jmp
jne
jecxz
aas
adcl
add
outsl
jbe
sub
and
out
inc
xor
in
sarb
and
mov
push
xorb
pop
xor
jbe
les
push
dec
pusha
adc
pop
or
and
test
mov
lret
in
je
cmpsb
into
enter
mov
push
les
push
cli
fs
stos
incl
lea
xchg
rcrb
push
jl
pop
sub
popf
sub
bound
inc
fmuls
xchg
int3
enter
mov
push
clc
adc
push
add
repnz
push
lret
adc
mov
int3
push
xor
ja
lods
lahf
xor
cld
mov
pop
std
outsb
mov
lret
addl
push
add
cmp
in
inc
mov
sub
pop
loopne
cld
cli
rorl
lahf
cmp
xchg
imul
addr16
xchg
xchg
loop
inc
adc
mov
and
je
pop
sub
inc
push
in
es
mov
lret
jl
inc
push
cmp
pop
test
shr
out
xor
ja
push
mov
lahf
and
sbb
test
xlat
pop
dec
js
cmp
in
cmp
push
mov
lret
mov
cwtl
jb
cmp
or
sub
pop
push
lret
in
cmc
adc
sbb
cmp
xor
inc
ljmp
push
ljmp
cmp
out
fldt
mov
jae
out
pop
mov
les
inc
into
mov
lock
adc
mov
aaa
shlb
jg
cmc
sub
sbb
pop
cmc
fldl
ret
mov
pushl
aaa
repz
xchg
inc
test
inc
lahf
sub
cmp
stc
nop
xchg
loopne
mov
sub
and
pop
and
or
loopne
pop
test
or
mov
jmp
mov
enter
int3
mov
imul
sub
lret
int3
bound
dec
pushw
jbe
fwait
push
fidivrl
push
int
out
and
stos
test
push
mov
xchg
xlat
sub
daa
cli
mov
mov
jmp
jb
fstl
stc
xchg
cs
jbe
cs
test
and
or
fdivrl
push
mov
mov
cmpl
pop
push
or
int
push
xchg
cmp
mov
adc
sub
stos
dec
jb
mov
jo
les
rcr
push
repz
pop
daa
test
scas
lock
cmp
cld
daa
mov
mov
adc
test
outsl
cmp
rorl
mov
pop
push
cmp
add
lret
adc
inc
clc
inc
mov
jnp
fxam
arpl
lcall
push
sbb
pop
rol
in
mov
and
mov
push
aas
mov
out
sbb
hlt
adc
sarb
test
fadd
push
mov
aam
cli
pop
mov
or
xchg
fs
push
sbb
iret
mov
xor
mov
ljmp
mov
and
fldenv
pop
and
dec
jmp
fsubrl
adc
aas
out
out
mov
or
mov
pop
pop
xchg
adc
gs
dec
test
repnz
mov
sub
aam
pop
femms
and
lret
xor
xchg
pop
xor
leave
jbe
sub
vmovdqu
xor
xchg
mov
test
xorb
loop
std
nop
clc
xchg
or
push
stos
aam
adc
and
and
ret
sub
nop
mov
leave
push
mov
data16
jl
sub
pop
mov
or
push
in
or
fidivs
jmp
mov
mov
xchg
fidivl
out
push
jle
mov
mov
cwtl
in
scas
scas
xchg
mov
pop
test
stos
cmpsl
inc
pop
push
pushl
outsl
jl
shl
insb
and
mov
jbe
repnz
inc
aaa
movsb
jae
stos
aas
test
enter
test
cltd
aas
adc
fldenv
testb
cwtl
push
cli
inc
xchg
roll
ljmp
lods
test
push
add
add
cmp
xlat
pop
sub
icebp
cmp
mov
pop
or
shrb
mov
outsl
std
enter
stos
mov
dec
pop
lret
arpl
dec
cld
jno
lcall
add
cmp
stc
stos
mov
adc
cld
add
outsb
cld
cld
out
aad
sub
xchg
lret
fistpll
and
pop
cld
or
mov
pop
sbb
decl
push
add
mov
mov
jp
inc
fcompl
int3
push
cld
or
jge
and
mov
xchg
loop
adc
or
xchg
xor
xchg
cwtl
mov
fs
mov
das
clc
scas
push
push
rolb
add
and
iret
dec
fimull
stc
jmp
ret
sbb
repz
pop
push
dec
or
sub
ret
mov
mov
sbb
mov
stc
incb
cmpsb
ss
fcompl
insb
or
cmp
rorl
sbb
subl
inc
dec
xor
test
xchg
popf
fcomps
xor
test
xor
add
fucomip
and
push
and
xchg
push
jbe
xchg
out
mov
sub
data16
jle
popa
jnp
xor
and
movsb
jle
jmp
gs
in
push
ret
add
cwtl
mov
aas
cmc
test
add
stos
or
popa
adc
push
and
mov
fildl
fistpll
pop
and
in
fadds
mov
or
in
hlt
ljmp
dec
mov
popw
cmpsl
pop
aaa
jmp
adc
mov
and
std
pop
repz
addr16
cld
out
or
pop
scas
inc
xchg
or
sbb
jmp
gs
mov
nop
xor
or
and
inc
xor
in
lahf
push
add
lock
jno
inc
xor
dec
nop
sbb
cwtl
push
cwtl
fildll
loopne
cld
das
cld
jecxz
xchg
test
fstps
lods
jae
pop
mov
pop
out
or
push
inc
push
xchg
js
or
cli
in
stos
pop
addb
or
jg
sub
mov
shl
push
in
std
pop
mov
cwtl
jns
aam
scas
cmpsb
mov
mov
mov
test
xorl
inc
mov
cld
lret
fcmovbe
inc
shr
pop
js
mov
mov
dec
sub
fistl
adc
insb
out
test
jo
push
mov
inc
cmc
je
fs
pop
sbb
sbb
js
pop
je
jl
pop
pusha
mov
mov
cs
ret
mov
jmp
fcoml
jnp
inc
fidivrs
add
rcrb
lahf
ja
in
cmp
into
or
pop
outsl
loopne
and
or
cmpsl
mov
or
mov
arpl
cwtl
into
xor
add
test
nop
mov
mov
cld
push
imul
sahf
pop
mov
dec
adc
cmpsb
aas
and
ljmp
cld
mov
push
cmp
xchg
inc
test
insb
std
insb
dec
cld
xchg
adc
and
sbb
lds
push
std
and
roll
in
push
loopne
scas
in
and
add
cld
jp
sub
out
xchg
int3
mov
call
inc
jg
push
jge
scas
call
push
das
jo
dec
out
pop
inc
xor
add
cmc
jae
pop
clc
das
xchg
mov
xchg
lock
stos
insl
and
aaa
cld
das
insl
cwtl
jns
je
ret
rep
in
sar
cwtl
xchg
add
loopne
jns
aas
fs
stc
push
xorl
outsl
js
and
mov
pop
icebp
jg
add
jae
jmp
xchg
outsb
lds
mov
test
cmp
inc
je
in
sub
std
fdiv
lds
sti
add
push
mov
jnp
xchg
out
adc
xor
je
rcrb
and
lret
adc
mov
imul
lock
xchg
dec
test
jb
imul
ret
enter
out
hlt
inc
into
xchg
add
adcl
inc
mov
je
adc
mov
xor
cld
scas
jnp
insb
imul
sub
adc
stc
sub
ret
xchg
sub
cli
ret
shrd
in
push
movl
sub
dec
add
sub
inc
push
add
push
xchg
push
mov
mov
mov
mov
inc
testl
lds
jno
mov
test
dec
test
push
dec
leave
popf
sarb
enter
push
sub
test
dec
loop
ljmp
and
or
cmp
lahf
cli
pop
push
dec
std
pop
andb
loopne
outsb
jge
pop
das
test
xchg
mov
es
cmp
test
shrl
jg
insl
mov
fstl
jp
inc
aam
in
je
jmp
xor
dec
test
cwtl
les
or
sbb
push
fists
or
mov
sbb
pop
stc
outsb
xor
add
xchg
imul
out
mov
xchg
test
test
jg
shlb
lods
nop
cwtl
lret
fdivrl
fucomp
lahf
cmp
orb
jnp
clc
cld
aas
ja
or
dec
add
cld
fsubr
mov
inc
push
jbe
fdiv
js
pop
mov
mov
fimull
and
clc
add
nop
mov
jecxz
cltd
cmpb
pop
or
ficoml
fs
call
cmp
cmpl
push
jo
daa
jle
clc
jns
cmp
mov
jb
push
adc
fidivrl
js
std
loope
imul
imul
pop
out
inc
popa
das
jge
lock
testb
xor
test
xacquire
aam
add
inc
inc
and
add
push
in
testb
fidivrs
sub
jnp
ret
push
mov
mov
xchg
adc
mov
ret
mov
dec
mov
pop
stc
stos
push
ja
ljmp
adc
adc
jp
addr16
bound
jge
call
mov
mov
int
das
scas
cmp
or
push
jmp
fnstsw
mov
sub
or
test
or
popa
pop
inc
ljmp
mov
test
lret
ret
jg
pop
bound
aam
and
lcall
ffree
outsb
and
pop
and
pop
mov
mov
int3
cli
pop
dec
bsr
ja
sahf
jecxz
imul
inc
loop
push
jecxz,pn
jae
les
loopne
push
and
xor
icebp
out
dec
sub
cltd
jne
add
inc
jecxz
jg
je
pop
shlb
inc
mov
fwait
ja
add
mov
push
cld
jmp
test
cmp
sub
mov
int3
cli
fdiv
pusha
dec
and
mov
push
notl
js
int
not
pop
loope
mov
xor
and
mov
jmp
push
mov
inc
out
fisttpll
sub
or
mov
cmc
fmull
fsts
dec
js
jns
push
ljmp
cli
pop
pusha
cmp
enter
or
xorl
add
jg
adc
xchg
xor
or
out
cs
lods
push
jb
sbb
and
fadd
int
or
testl
mov
outsl
ds
jl
scas
in
push
sbb
call
jl
stos
mov
cmp
xchg
mov
fs
test
lods
and
shlb
push
int3
into
iret
xor
ss
sti
stos
test
xchg
iret
sti
xor
les
mov
outsb
jo
and
push
or
cld
mov
xor
lcall
loopne
dec
fs
pop
fs
cmp
roll
iret
lret
mov
inc
pop
jns
inc
cli
push
lea
fists
das
std
data16
subl
and
pop
nop
cmpsb
or
mov
sub
adc
mov
int3
sub
push
popa
lret
rcrb
jno
xor
ret
push
scas
lret
or
or
pop
sbb
sub
xchg
cwtl
sbb
sbb
pop
pop
stc
pop
inc
mov
sub
jle
sub
push
fidivrl
dec
sub
inc
and
xchg
movsl
and
xor
push
mov
in
add
pushf
fwait
push
shll
icebp
int3
ds
out
ljmp
or
cld
pop
pop
xchg
pop
push
xlat
pop
or
icebp
xchg
jnp
les
xor
jmp
or
lock
pusha
jl
scas
dec
inc
ljmp
inc
lock
sbb
and
jae
and
popf
cmpsb
cmp
add
inc
inc
fucomp
inc
loopne
inc
out
ret
xchg
xchg
dec
in
lcall
sub
mov
or
loope
mov
lret
out
incl
inc
or
jno
and
ffree
adc
stos
cmpsb
cmpsl
nopl
outsl
jge
mov
ljmp
push
ds
push
insl
adc
pop
ret
inc
cmc
roll
jg
mov
test
push
nop
pop
movswl
add
les
jo
xchg
push
inc
and
test
xor
cmpsl
mov
push
insl
mov
ss
outsl
test
push
mov
in
cmp
pop
mov
adc
pop
adcb
pusha
arpl
scas
aaa
test
lret
xchg
js
out
xlat
pop
sbb
addr16
push
xchg
clc
pop
call
xor
dec
test
test
jecxz
sti
cmp
aas
ror
aas
repnz
pop
ret
or
into
enter
pop
adc
fs
js
xor
xchg
fisubrs
adc
pop
or
pop
and
cmp
ljmp
lods
sbb
outsl
mov
and
or
jne
shll
iret
xor
out
aas
lods
icebp
std
xchg
jo
dec
xchg
xor
and
xchg
sub
cmp
lea
mov
and
clc
iret
aas
or
adc
sub
push
sub
push
std
push
in
pusha
int
in
sub
mov
test
jle
xor
sub
pop
test
sub
adc
or
js
xchg
mov
cmp
pop
setae
cli
mov
fwait
cmpb
test
bound
in
lahf
xchg
push
xor
sbb
jae
push
mov
sub
push
jae
ss
or
jmp
pusha
repnz
popf
outsl
and
pop
xchg
fnstsw
sbb
mov
inc
stc
inc
test
lock
in
add
dec
dec
loop
out
xor
arpl
lods
cld
jmp
push
xor
add
xorl
xchg
lret
pushf
mov
aas
les
add
out
push
or
lock
rcll
scas
stc
xchg
ret
xchg
call
push
inc
adc
out
les
jo
shrb
ret
push
push
pop
mov
scas
jl
jl
xchg
frstor
lods
xor
testb
les
xchg
test
das
insl
test
rclb
subl
arpl
iret
addr16
rclb
andb
hlt
dec
or
pop
cld
xchg
aad
insl
xchg
or
xor
mov
lret
sbb
out
jmp
lds
notb
mov
popa
mov
jno
rcrb
lods
pop
arpl
repz
add
mov
sbbl
test
push
cli
rolb
mov
call
sub
mov
ja
xchg
call
inc
movsb
add
mov
out
mov
icebp
xchg
sarb
push
rsm
jge
repz
bound
subl
cmpsb
loope
int
jp
adc
push
jb
xchg
aam
jb
ret
jg
sbb
sbb
aas
push
xor
pop
cli
out
les
xchg
inc
or
daa
lock
pop
jmp
addr16
div
dec
add
popl
xchg
fsubs
scas
add
sbb
sub
repz
dec
cmpsl
loope
fwait
ret
sub
fsubrp
loop
cltd
jnp
mov
aam
mov
nop
inc
fildl
or
out
sbb
sub
mov
pop
push
hlt
adc
mov
push
rolb
push
and
sbb
sti
jbe
xchg
lock
fs
xorb
out
add
xchg
adc
repz
repnz
cmc
mov
hlt
or
push
jle
pop
pop
mov
push
test
pop
cmp
dec
push
mov
and
or
mov
data16
out
mov
ffree
cld
push
int
jle
cmpsl
gs
xor
stos
xchg
cld
ljmp
and
mov
cmp
push
popf
push
ljmp
test
mov
shrl
sub
jp
or
cld
out
mov
jbe
and
pop
movsl
aas
andb
ficompl
xchg
clc
das
je
fiadds
out
push
pop
mov
sbb
jb
int
inc
js
mov
ret
fisubrl
or
lock
jbe
and
mov
lods
in
jg
mov
dec
stos
add
out
and
cmp
movsl
mov
jo
mov
add
or
mov
insl
jns
fldcw
inc
sti
push
aad
notrack
jbe
dec
xchg
xchg
inc
int
mov
xchg
sahf
or
cld
addr16
mov
cmp
jle
mov
or
and
cmpps
in
adc
pop
stc
aas
sub
and
out
enter
mov
cmp
cs
pop
xchg
mov
mov
shlb
loopne
push
shlb
xor
scas
lret
sar
stc
lods
inc
mov
pop
adc
mov
mov
cs
dec
inc
mov
pop
xchg
notl
outsb
fsubrl
lret
cli
mov
sub
fucomi
cmp
adc
lcall
or
cmp
or
xchg
clc
out
and
in
sbb
xchg
je
daa
lock
outsb
ret
push
test
loopne
jle
loopne
and
jnp
in
rcrb
and
cmc
cmp
gs
add
xchg
dec
lret
jge
mov
adc
add
jae
inc
push
inc
repz
mov
xor
inc
jnp
mov
frstor
push
clc
pop
ds
or
pop
sub
pop
nop
stc
jg
add
shlb
adc
jp
int3
pop
push
std
scas
ret
cld
lds
outsb
push
add
push
xor
aad
pop
ljmp
test
mov
xchg
push
add
jns
fmuls
cld
test
test
mov
push
es
add
jns
xchg
shrb
ret
pushf
test
mov
push
mov
jbe
les
push
mov
icebp
lret
xchg
mov
cwtl
push
push
leave
jnp
outsl
xorl
cwtl
test
loopne
decl
fcoml
hlt
cs
jbe
push
push
mov
clc
fstp
jne
mov
mov
or
ds
clc
pop
mov
push
ret
pop
les
mov
in
pop
jbe
stos
aaa
lock
imul
cmpl
cwtl
ret
adc
and
insl
leave
xor
mov
or
mov
pop
lock
sub
bound
sub
inc
or
push
pushf
sti
int3
xorb
insb
fwait
ja
push
test
aad
and
scas
cmpsb
sarb
call
xorb
fists
and
xor
pop
cmp
bound
jg
andl
xor
stc
addr16
test
dec
mov
cwtl
mov
push
mov
mov
pop
cli
shll
inc
jecxz
and
out
mov
push
test
jge
push
js
xchg
adc
enter
add
cld
mov
mov
pmullw
push
jmp
aad
sub
push
adc
fmull
xchg
ret
mov
test
xor
mov
dec
fmul
cmovo
mov
cwtl
cwtl
roll
ljmp
push
je
fnstcw
xchg
xchg
fucom
je
sub
or
jb
and
outsb
loopne
out
push
out
xor
xchg
es
aas
les
fldenv
mov
es
aam
push
imul
jle
js
xor
jg
ja
cwtl
orb
mov
fnstenv
cmp
call
imul
in
test
loopne,pn
push
scas
cld
jbe
mov
sub
mov
out
xor
fnsave
pop
push
dec
lcall
ja
dec
fmul
shrl
push
mov
mov
pop
ret
or
mov
nop
nop
jmp
clc
call
sub
mov
nop
inc
loop
sub
pop
push
jno
inc
or
add
pop
test
mov
cli
fsubrl
rcrb
out
sub
push
ret
and
cs
or
subl
ret
ret
cmpl
jl
ljmp
mov
mov
fs
dec
andb
dec
outsb
outsb
push
xlat
xor
inc
fists
inc
aaa
das
sbb
sub
mov
push
outsl
loope
addl
cmp
jg
rclb
pop
push
pop
popf
movsb
or
shl
sub
xor
and
loop
jge
and
and
sub
sarl
call
aas
cmp
sbb
or
std
into
cmp
loop
or
adc
test
ja
xchg
xor
or
in
aas
sub
pushf
fsubs
flds
sub
mov
dec
incl
mov
cmp
xor
adc
mov
repz
mov
pop
pop
scas
jl
enter
xchg
mov
sub
cmpsl
inc
dec
inc
adc
xchg
clc
pop
pusha
sbb
lahf
xchg
js
loope
xor
test
xchg
faddl
add
aaa
xchg
aas
push
orl
and
pop
daa
fs
pop
mov
aaa
mov
or
xor
es
adc
pop
or
xchg
dec
lahf
fwait
out
adc
nop
ret
jg
call
dec
lahf
xchg
sbb
mov
pop
idivb
imul
shlb
test
rcrl
icebp
das
andb
lahf
dec
lret
mov
push
dec
pushf
and
jecxz
xlat
shlb
pushf
frstor
into
enter
imul
sbb
push
lods
push
nop
and
pop
cmp
xchg
imul
adc
add
pop
inc
clc
fcmovbe
cmp
call
xchg
aam
cmp
in
pushf
pop
xchg
or
rcrl
movsb
inc
cltd
jmp
clc
fwait
xchg
xor
xchg
xchg
lret
nop
add
fsubl
mov
in
nop
stc
inc
mov
fstl
popa
jnp
sbb
leave
in
mov
outsb
incb
push
push
mov
repz
mov
fidivrl
xchg
mov
pop
jno
push
push
es
jecxz
loop
and
jb
push
and
mov
jle
mov
mov
and
jae
lahf
loop
inc
imul
pop
hlt
outsb
lret
test
imulb
jg
inc
je
mov
xchg
xchg
bswap
inc
xchg
xor
ffreep
pop
cld
movsl
sub
jae
mov
xchg
loope
jae
sbb
or
push
jp
mov
jns
jle
cli
outsl
pop
fdivrl
dec
xchg
out
sti
ret
dec
loope
jg
in
mov
cmp
xor
xlat
cld
adc
das
ljmp
imul
pop
fisubrs
mov
outsl
ds
mov
cmc
int
ret
xor
rorl
lock
bound
mov
dec
aas
cli
inc
ljmp
pop
mov
in
clc
adc
or
xlat
jl
ffreep
scas
cld
and
iret
pop
fisubrs
orl
xchg
ja
xchg
fnstenv
lea
jne
fs
sahf
loope
lcall
cld
dec
push
orb
xchg
push
out
mov
dec
je
imul
fistpll
popa
pop
aam
cwtl
daa
sub
scas
fs
into
mov
sbb
fadds
dec
xor
icebp
jno
push
sbb
aas
mov
sbb
push
push
dec
in
xlat
xchg
push
je
pop
fs
xchg
popw
fisubl
out
andl
push
pop
mov
jmp
lahf
adc
mov
roll
cmp
daa
push
mov
out
movsl
das
cmp
jo
push
lcall
mov
ja
popa
mov
clc
mov
and
add
or
add
dec
cld
jns
push
sbb
outsb
cld
xchg
popa
fisttpll
mov
xor
aam
mov
push
and
push
sbb
xchg
inc
in
push
adc
je
pxor
cli
xor
sbb
mov
jne
adc
sti
push
mov
std
jmp
jmp
pop
fiadds
pop
push
ljmp
inc
push
jns
movsb
xorb
mov
sbb
pop
mov
sbb
pop
jbe
sub
inc
xor
xchg
push
decb
inc
mov
loop
call
pop
hlt
pop
cmp
icebp
outsl
cld
cwtl
fs
test
mov
jne
faddl
std
ja
ljmp
data16
inc
fwait
and
add
sub
cwtl
roll
fcomp
insb
adc
dec
push
inc
pop
fmull
mov
mov
mov
inc
stc
xor
cli
jg
sbb
cmpsb
xchg
fbstp
xor
cld
pop
outsb
aaa
rcrl
adc
fs
mov
fisttps
test
mov
and
or
popa
mov
lret
loope
aaa
jb
cli
stos
ror
sub
in
lret
shr
mov
orb
xchg
outsb
jle
jle
hlt
mov
mov
sub
inc
dec
out
adc
adc
sub
cltd
push
pop
sarb
mov
add
lods
cmpsl
jno
dec
cld
xchg
cli
out
lds
mov
adc
in
or
add
cs
xor
jmp
cmp
pusha
and
pop
jmp
fxch
fnstsw
cwtl
mov
out
cli
or
xor
xor
ja
push
push
push
mov
in
mov
fisubl
scas
cmpsb
pop
stos
xchg
cld
cs
loopne
dec
adc
cmc
pop
cli
lods
xchg
aaa
das
jo
sbb
push
dec
jbe
jg
shlb
and
push
ljmp
inc
push
cli
iret
add
popf
loope
rcrb
shl
clc
push
dec
fadd
je
sbb
sub
sti
cwtl
mov
xor
push
das
cmpsb
inc
add
push
adc
add
push
paddq
push
jg
push
inc
repnz
dec
mov
fyl2x
inc
mov
stos
push
cld
jbe
rorl
clc
stos
pop
adc
lcall
pop
xorl
and
aas
insl
in
fistps
mov
cmp
pop
fmuls
lea
test
xor
test
inc
call
mov
xchg
and
push
pushf
jno
int3
add
add
push
arpl
cmp
sbb
icebp
out
sub
cmpsl
mov
hlt
test
sbb
add
cmp
loope
add
cmp
or
push
movsb
push
push
jecxz
jge
incb
push
xchg
mov
lahf
push
lock
gs
jno
mov
xchg
dec
fistpll
jge
or
fimull
lods
xchg
decb
stc
sbb
cli
std
mov
mov
push
add
push
lods
ret
gs
inc
pop
adc
mov
aaa
ret
pop
ljmp
push
mov
xor
xchg
xchg
fimuls
add
add
gs
mov
pop
or
jg
dec
cmp
push
add
xor
mov
or
add
dec
or
mov
add
es
aas
pop
loopne
test
stos
push
sub
push
push
sub
bound
ljmp
jbe
lcall
jg
scas
in
jmp
or
mov
push
jp
mov
lahf
xor
test
jmp
lret
clc
dec
inc
enter
je
pushf
cli
inc
arpl
inc
sbb
jne
push
jp
add
clc
push
andb
jge
jge
test
fst
sbb
sub
add
rcpps
xchg
lea
cmp
das
cmp
stos
pop
cld
movsl
cmp
js
xor
ret
fdivrl
arpl
dec
loop
addb
aaa
sbb
xchg
ljmp
push
sbb
scas
faddl
and
cmp
inc
in
sub
loopne
daa
lret
fisubrl
pusha
movsl
xlat
mov
cmp
fnstsw
push
mov
das
nop
int3
jg
insl
and
xor
jb
xchg
push
add
jbe
xor
addb
jge
or
and
in
xor
sbb
les
sahf
inc
scas
shr
xor
aad
int3
int3
lret
mov
cld
push
mov
out
loope
sbb
cli
daa
test
test
sub
cmp
mov
popf
and
xchg
je
aad
add
mov
sbb
std
int3
inc
dec
cmp
iret
lret
dec
sti
cli
sub
push
mov
pop
or
daa
sub
add
push
fs
push
test
cld
or
rcr
xor
xchg
mov
and
movsl
push
or
push
inc
push
mov
ds
xchg
movsb
repnz
inc
or
std
jecxz
cmc
pop
cmpsl
push
cmp
mov
mov
mov
and
test
jecxz
clc
stos
and
and
lcall
mov
mov
sbb
out
shr
push
mov
jbe
in
sbb
cmc
xchg
push
sbb
outsl
mov
out
push
jnp
push
push
mov
ljmp
or
or
or
enterw
mov
xchg
ret
aad
inc
dec
push
clc
add
sbb
lret
in
dec
pop
les
jecxz
push
and
mov
sbb
mov
xchg
mov
ret
ljmp
lret
or
lock
cld
cmp
ja
sub
xchg
dec
das
clc
stos
pusha
and
repz
test
mov
andb
mov
sbb
dec
jo
loopne
pop
addb
idiv
mov
fldenv
push
and
jl
subl
xor
push
lods
inc
out
out
das
pop
xchg
xchg
icebp
adc
std
sar
clc
dec
xchg
movsb
jl
push
fwait
outsb
neg
lahf
fildll
ds
mov
fxtract
or
push
ja
div
jg
subb
and
dec
aam
cwtl
dec
cld
dec
adc
jg
push
out
fsubr
popf
shl
mov
rorb
mov
mov
mov
test
lret
hlt
fnstsw
mov
int3
jo
cmp
push
fstpl
pop
out
addr16
popf
inc
scas
mov
push
std
xlat
lret
pop
jne
sub
cli
dec
ljmp
sbb
xchg
sarb
movsb
rcll
jmp
je
insl
and
lcall
in
pop
jmp
pop
cld
fwait
aas
sbbb
mov
cmp
adc
jnp
mov
outsl
jbe
dec
push
enter
lret
push
inc
push
test
nop
test
pusha
and
sbb
sub
sti
dec
and
jbe
sbb
mov
test
sbb
xor
cmp
xchg
jp
xchg
repnz
mov
repnz
jns
cmpsb
push
stc
mov
cmp
shrl
rol
xor
into
sub
in
fimuls
push
push
lret
lods
dec
xchg
scas
rolb
xor
pop
ret
and
jg
jmp
cmp
pusha
sti
mov
ret
mov
add
push
pop
inc
dec
fnstenv
push
xchg
aas
mov
fstpl
and
dec
fcos
mov
icebp
fsubrl
dec
addr16
addb
inc
cmpl
jno
pop
shlb
fimuls
mov
ret
ljmp
cs
lret
filds
jl
cmp
insl
fcmovb
push
cmpsl
push
or
cmp
mov
scas
cmp
pop
cmp
adc
sarb
sbb
es
push
jecxz
lods
cli
in
pusha
dec
push
rorb
mov
jb
jp
pop
std
add
and
iret
fiaddl
sub
in
push
adc
std
xchg
sbb
pusha
mov
inc
push
xchg
pop
hlt
pop
push
das
je
xor
jns
aaa
test
in
pop
or
mov
imul
xlat
int3
inc
das
std
sar
or
jg
lock
int3
mov
or
sub
nop
sub
inc
mov
or
sbb
add
and
pop
mov
enter
movsb
cmp
and
pop
pop
mov
xchg
stos
lods
mov
sub
add
pop
out
and
mov
fdivs
sub
mov
dec
add
xchg
ds
clc
ja
aaa
jae
shr
jae
mov
repz
pop
xchg
and
jmp
loope
jae
mov
jmp
in
sarl
sti
sbb
out
dec
sbb
push
cld
aas
cmp
add
fmull
fwait
inc
fists
mov
adc
stos
dec
aas
test
push
js
outsb
out
inc
cmp
cwtl
popf
sbb
push
cmp
mov
inc
leave
dec
cmpsb
xchg
lock
lea
cmpsl
scas
jmp
adc
testb
lcall
mov
std
xchg
mov
fwait
sub
push
movsb
mov
jb
adc
mov
cmpb
xorb
cmp
cli
add
scas
xor
mov
inc
inc
cli
and
mov
add
cmp
pop
cld
iret
add
call
popa
push
cld
lahf
xchg
jg
push
or
in
push
cli
and
jecxz
in
push
cmpsb
insb
inc
or
and
enter
std
notl
jl
addr16
stos
inc
int
mov
cwtl
pusha
insb
push
ret
pushf
push
sub
iret
das
je
test
mov
and
movsl
decl
loopne
icebp
and
mov
in
xchg
push
outsl
loopne
pusha
inc
jecxz
cbtw
mov
int
jg
adc
sbb
mov
jno
insb
and
cmp
add
xchg
inc
mov
pop
mov
cli
add
lahf
test
xchg
pop
dec
lahf
cs
sti
pop
repnz
fiaddl
or
xor
and
dec
pop
insb
mov
subb
push
cli
cmp
nop
inc
cmpsb
add
faddl
sub
cmp
jb
push
das
lea
xchg
test
loop
jns
xchg
mov
push
xor
cmp
push
outsb
data16
or
dec
or
cmpsb
mov
push
popl
les
adc
jnp
std
punpckhwd
xor
adc
xor
lcall
jg
dec
cld
push
sti
sti
bound
je
push
adc
dec
and
cmc
pop
push
or
sub
outsb
daa
in
addr16
ds
xor
aam
cwtl
popa
adc
subb
push
xor
mov
add
add
cmp
test
add
push
xor
cwtl
push
xchg
push
push
xor
stos
xchg
shrl
push
sub
push
mov
cmc
add
mov
mov
inc
fcomps
add
adc
mov
adc
mov
orb
inc
add
nop
push
add
add
xorl
and
and
mov
mov
aaa
jmp
gs
popa
jae
inc
jb
outsl
jb
js
popa
outsb
fs
outsb
jbe
insl
imul
sbb
insl
outsb
je
je
imul
dec
jb
and
outsl
outsl
jle
push
jns
insl
push
imul
dec
xchg
xor
push
dec
je
jb
jne
dec
outsb
outsw
mov
mov
outsb
inc
outsl
insl
mov
push
mov
mov
data16
push
push
outsb
push
mov
adc
arpl
je
sbb
popf
rcrb
xchg
inc
jne
insl
mov
push
jae
and
cmp
inc
insb
insb
fidivs
cwtl
push
rclb
mov
push
outsb
jnp
dec
je
insl
lret
mov
fildl
and
mov
in
imul
lret
push
push
mov
loopne
inc
inc
inc
lret
mov
arpl
xchg
inc
push
jae
dec
mov
insl
or
test
arpl
jne
dec
push
jne
sbb
sbb
push
push
data16
sub
sbb
dec
outsl
fs
outsl
inc
jno
bound
mov
popa
insl
scas
enter
loope
pop
inc
inc
push
xor
sbb
or
push
add
js
fimull
testl
shrl
jle
push
popa
insb
or
call
cmpl
add
mov
sub
add
dec
imul
pop
dec
sbb
repz
xchg
inc
jmp
pop
nop
sub
int
loop
jg
jns
dec
jle
addr16
outsl
js
lods
test
and
outsl
inc
mov
add
dec
mov
pop
adc
lock
dec
mov
lsl
add
insb
or
rorl
add
and
pop
sti
outsb
fidivl
add
sbb
dec
test
not
out
push
adcb
or
fwait
mov
js
addb
dec
jo
add
test
pushf
sahf
dec
pop
push
shl
call
mov
pop
xor
cs
js
scas
rolb
jae
add
and
movsb
loopne
je
negl
out
pusha
dec
inc
mov
jb
cmp
dec
mov
dec
inc
jae
arpl
sub
adc
dec
or
aad
fsubrp
inc
push
push
pop
jecxz
ds
pop
lahf
add
ss
mov
cmp
sti
cmpb
push
pusha
mov
fldl
adc
lock
lahf
or
sub
loope
or
add
inc
and
add
add
add
pusha
mov
lea
movl
push
jmp
nop
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
sub
adc
