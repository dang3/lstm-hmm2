cmp
cmp
xor
aaa
xor
adc
lock
sahf
jg
inc
ds
mov
sbb
push
es
sbb
jg
ss
and
lret
inc
sub
clc
mov
jp
inc
daa
jge
push
sbb
inc
add
jle
add
xchg
in
adc
in
push
cmp
repz
adc
dec
push
pop
fidivrl
mov
loop
bound
sbb
xor
jge
pop
sti
mov
pop
and
insb
shl
movsl
xchg
inc
sbb
xor
xor
ja
push
ficoml
jbe
test
es
jg,pt
movsl
aaa
and
mov
xchg
loop
or
in
movsb
or
sti
ret
jle
movsb
pop
out
sub
mov
imul
mov
xchg
jno
push
xchg
adc
inc
in
xchg
pop
rcr
test
ja
push
dec
jle
xchg
out
push
ret
or
xchg
jecxz
xchg
out
rcrb
aam
or
clc
inc
sbb
xchg
mov
lods
in
xor
pop
lahf
fxch
scas
xchg
das
push
int
out
lcall
shr
fsubrl
sbb
dec
mov
xchg
outsb
lods
fcmove
imul
xor
hlt
arpl
fists
mov
jno
mov
das
adc
popa
rclb
xchg
pop
sbb
aad
fistpll
sub
mov
repz
sarl
mov
pusha
push
dec
and
out
push
or
paddusb
xchg
hlt
add
push
mov
arpl
dec
sbb
loop
cld
mov
mov
jecxz
xchg
test
xchg
jge
out
xor
push
jne
cmp
and
dec
xchg
mov
and
pushf
sub
movsl
jmp
lods
scas
stos
mov
and
and
gs
cld
cwtl
enter
out
inc
xor
lods
inc
int
js
pop
or
data16
sbb
push
test
pop
mov
es
int
xor
adc
in
pushl
push
test
sub
loop
rcl
sbb
adc
xor
mov
xchg
fwait
dec
stc
aad
sbb
mov
enter
sarb
mov
add
ret
jae
mov
pop
out
pop
push
adc
pushf
and
mov
pop
mov
jno
nop
mov
mov
pushl
cmpsl
insb
pop
int
rolb
push
push
pop
xor
jo
xor
shlb
sub
les
out
sbb
push
xor
mov
popf
test
sbb
sarb
ret
jae
call
loope
dec
mov
cmp
test
loopne
sti
imul
data16
shll
jbe
sbb
das
in
leave
jp
jns
add
inc
mov
lods
xor
mov
mov
out
enter
push
push
jae
ss
pop
and
mov
inc
xchg
pop
sbb
sahf
idiv
stos
xchg
dec
or
xchg
cmc
jo
sub
leave
movsb
outsl
xor
push
es
nop
std
cli
arpl
test
insb
shrl
xor
pop
ljmp
out
outsb
push
jo
mov
xor
inc
addl
iret
fwait
push
push
inc
fnstenv
add
dec
mov
aam
inc
mov
cmp
and
pop
mov
xor
pop
test
into
stos
ret
call
lods
stc
jae
mov
es
push
das
dec
cmp
push
enter
mov
mov
xor
loopne
lock
pop
mov
dec
movsb
js
mov
sbb
pop
jge
jl
enter
fbstp
mov
push
jbe
jno
addr16
fisttpll
xchg
insb
std
cmp
std
ljmp
fwait
xor
sti
fsubrl
xchg
out
mov
jo
push
dec
mov
imul
mov
lret
pop
js
mov
pop
lret
sbb
out
pop
dec
and
pop
into
mov
in
loope
or
imul
jp
lea
leave
loop
pop
pop
scas
mov
adc
lret
shll
dec
ret
xchg
mov
in
or
icebp
add
cmp
sbb
nop
rol
add
add
push
dec
push
iret
clc
sbb
scas
popa
lods
mov
xor
imul
push
sub
adc
rcll
push
lcall
mov
sub
cmp
dec
cmpsb
loopne
pushf
sti
hlt
and
mov
and
mov
loope
shrb
sbb
addr16
test
repnz
and
cmpsl
pop
lods
push
cs
sbb
hlt
addr16
adc
js
push
jae
mov
lods
mov
psubd
lds
mov
sbb
cmp
scas
push
ss
aam
int3
dec
adc
out
arpl
je
jae
es
adc
test
hlt
cmp
out
fsts
stc
mov
lock
xor
xchg
stos
testb
jl
dec
dec
mov
xor
mov
jo
scas
ss
push
cmpsb
int
adc
daa
fildl
mov
repz
xchg
lea
mov
cmp
test
aas
xor
scas
mov
pop
mov
mov
leave
icebp
pop
fcmovu
push
dec
mov
jle
push
imulb
push
or
xchg
leave
incl
and
mov
cmp
testl
push
adc
movsb
pop
dec
or
push
scas
sbb
xor
negb
dec
add
ljmp
mov
mov
and
sbb
cmpsl
xchg
fsubr
hlt
pop
adc
mov
dec
mov
andb
cmp
pop
pop
xor
inc
lods
popf
cwtl
cmp
gs
pop
outsb
outsl
jle
add
sbbl
cs
ret
dec
add
mov
out
cltd
cmpsb
inc
fdivp
pop
imul
jle
or
mov
dec
pop
shrl
ret
nop
sub
pop
push
add
fmul
rorl
push
fstpt
cmpsl
mov
mov
jo
mov
xchg
fmulp
xchg
and
pusha
dec
add
adc
enter
xchg
ror
std
or
dec
add
push
into
movsl
nop
mov
fs
jae
xchg
or
jne
mov
xor
bound
adc
in
ds
jecxz
add
test
jne
mov
lods
add
sub
out
pop
or
cli
or
xchg
jnp
xor
rolb
popa
xchg
xlat
fsubl
inc
or
adc
and
sbb
fimuls
fmuls
jecxz
clc
add
cli
leave
iret
push
push
cwtl
sti
dec
sbb
shll
insl
jnp
test
pop
add
and
inc
push
repz
sub
dec
sub
sub
cmp
aaa
mov
sub
sti
mov
testl
arpl
mov
jns
mov
insl
aaa
vphaddwd
pop
or
nop
xchg
sbb
sub
jp
lcall
cmc
stc
pop
out
adc
mov
outsb
push
inc
std
fnstcw
int
sub
fstl
outsb
xorl
adc
test
inc
lcall
inc
aaa
out
cmp
cmp
dec
adc
push
enter
stos
pop
push
aad
mov
leave
insb
test
cmp
pop
out
push
pop
mov
xchg
mov
sub
aam
in
adc
loop
nop
out
aad
xchg
or
or
adc
andl
icebp
sub
push
aam
call
cmc
or
rcrl
out
adc
sbb
mov
scas
mov
mov
jl
and
adc
jge
es
out
sahf
and
movsl
into
ds
xchg
aaa
sbb
jo
push
dec
loopne,pn
mov
jb
mov
pop
pop
stos
push
mov
adc
pop
adc
in
cmpsb
in
push
ret
jecxz
fsub
xor
xor
xchg
cld
imul
push
nop
xor
test
test
ret
pushf
jnp
rclb
dec
pop
add
cmp
cli
adc
mov
out
out
mov
les
add
lods
push
repz
jmp
call
mov
dec
mov
enter
mov
mov
lock
inc
lea
push
mov
and
ficoms
jle
mov
sub
into
insb
sbb
pushf
sbb
cld
push
jmp
enter
cmp
dec
ja
jge
inc
enter
lods
icebp
xchg
daa
jns
jnp
incl
pop
and
mov
daa
lret
cmp
cwtl
js
leave
divps
fbstp
mov
sbb
fs
push
shl
iret
in
push
fsts
push
pop
clc
mov
pop
sbb
popf
adc
xchg
popf
and
push
add
gs
xlat
or
adc
popa
mov
rcll
das
fisubl
repz
mov
lds
sub
sub
fmull
imul
gs
lods
push
dec
pusha
cltd
mov
push
jae
nop
push
cmp
push
mov
xor
movl
testb
sub
inc
popa
push
mov
push
test
fcmove
or
test
shlb
jns
lods
out
add
mov
cltd
sbbb
xor
add
jecxz
mov
bound
pop
fwait
xor
pop
mov
mov
xchg
pop
and
pop
sbb
inc
sbb
or
push
iret
lods
or
jb
fs
lret
xor
push
pop
mov
in
cwtl
cmp
push
mov
outsb
insl
pop
cmpsb
das
mov
shlb
or
mov
mov
dec
jge
das
movsb
push
pop
dec
dec
gs
sbb
and
sub
inc
icebp
mov
mov
inc
mov
push
popa
or
cltd
add
pop
out
scas
dec
sbb
jmp
fcompl
rep
fstpt
dec
add
pop
scas
jne
in
dec
fadd
js
xor
aaa
or
pop
adc
jg
inc
sub
popf
cmp
mov
roll
lods
pop
push
sub
jl
cmp
mov
jbe
lret
fisttpll
rcrl
inc
jl
scas
xchg
dec
xchg
roll
std
iret
call
cmp
into
push
and
std
fs
cwtl
dec
jae
sahf
cmp
dec
mov
repz
fisttps
mov
aaa
and
shrl
popf
or
jnp
jb
test
stc
cmp
cli
mov
bound
cs
mov
mov
pusha
xchg
rcr
mov
sub
popa
insl
bound
scas
stos
dec
js
shll
mov
mov
cltd
or
mov
sbb
pusha
arpl
xchg
jae
fcmovbe
ljmp
imul
mov
lahf
movl
repnz
and
test
cmp
mov
in
push
push
repnz
cltd
sub
sub
fildl
pushf
jge
mov
cmp
ds
test
xor
push
sub
cmp
fs
push
test
or
adc
mov
cltd
popa
jne
rcrb
sbb
jecxz
jp
ss
ss
or
sbb
testb
bound
xchg
in
and
in
lock
cmp
cs
jecxz
mov
pop
jb
jmp
inc
pop
add
or
jecxz
outsl
in
inc
and
push
mov
push
mov
dec
movsl
shlb
call
sbb
rsqrtps
adc
je
xor
xchg
lds
jnp
ds
insl
mov
std
es
daa
clc
lods
pop
mov
add
out
aam
mov
roll
jle
pop
pop
pop
in
fwait
cld
cmp
lods
push
pop
cmp
push
inc
sbb
xor
adc
adc
jno
xor
sbb
cld
push
test
imul
sub
sub
sbb
rclb
jnp
lods
pop
ret
sub
add
js
mov
movsl
and
jp
mov
sub
add
fwait
mov
mov
or
xor
int
mov
lock
cmp
push
pop
sub
rcll
mov
jbe
setae
push
add
mov
xor
clc
inc
xchg
xchg
sbb
lock
mov
outsb
fiaddl
mov
testb
lea
dec
inc
jp
out
arpl
add
add
fists
test
xlat
jg
call
jp
pop
jne
fwait
in
cmc
popf
sbb
cmp
inc
jle
adcb
pop
pop
cld
scas
jns
or
or
jns
dec
lret
sarl
adc
stc
mov
fnstenv
push
mov
xor
sti
mov
shll
mov
push
jge
xchg
arpl
xchg
lods
jbe
icebp
out
sbb
ljmp
imul
stos
leave
les
cmpsl
ficoms
cmp
stos
outsb
mov
out
scas
dec
mov
and
xchg
or
das
push
int3
xorb
sbb
push
jl
shrb
imul
push
jg
stos
or
fsubp
mov
or
js
mov
xor
jae
movb
xchg
rolb
testl
les
shrl
out
jmp
fwait
negl
and
pushf
or
lods
inc
lock
fcoms
inc
test
sbb
lret
mov
scas
add
sahf
cwtl
ss
xchg
cmp
scas
mov
push
jmp
iret
inc
orl
add
add
movsl
iret
sbb
push
pop
stos
dec
dec
pop
inc
or
stos
xor
aaa
pop
jae
iret
or
in
lret
aas
int
pop
mov
mov
pop
lock
jp
ljmp
xor
hlt
jbe
jo
adc
add
mov
movlps
jmp
adc
sub
or
mov
test
mov
cmp
cmp
mov
adc
pop
dec
test
cmpsl
inc
and
sbb
push
ljmp
sub
jo
ds
ret
push
popa
dec
dec
mov
xchg
lcall
add
cwtl
or
sbb
into
push
lcall
xchg
xchg
or
sti
bound
sub
mov
pop
and
out
mov
xlat
sti
jb
movsl
adc
popf
push
fisubl
nop
push
dec
lea
xlat
aam
add
mov
cmc
popf
push
mov
cmp
inc
jge
jnp
pop
xchg
sbb
xor
dec
mov
push
fwait
ss
shlb
xchg
movsl
inc
out
orl
fisubrs
jns
dec
jle
fstl
inc
cmc
ljmp
or
aad
push
jg
insl
push
add
in
sub
bound
sahf
nop
fcoms
sbbb
xor
cmpsl
nop
bound
cmpsl
push
pop
out
or
aam
nop
stos
sbb
adc
les
cmp
enter
negb
dec
xor
jg
mov
stc
xor
pusha
sbb
ficoml
push
dec
sbb
mov
mov
roll
fstps
outsl
stc
xchg
test
fcomps
aas
and
sbb
push
shlb
arpl
out
xor
xchg
or
enter
in
mov
mov
jl
mov
push
xchg
jge
lods
mov
cmp
fs
jmp
push
dec
xchg
push
mov
and
push
fsubrs
sbb
loope
js
out
imul
cmp
xor
std
push
incl
inc
sahf
add
mov
jno
and
repz
cli
mov
cmpsb
lahf
cmpl
xchg
mov
fbstp
push
popf
mov
push
inc
xchg
outsb
test
orb
or
decb
cmpsb
xor
cld
sbb
mov
mov
jbe
ss
and
push
lock
in
and
outsl
sub
sub
inc
jae
ss
jl
add
outsb
mov
mov
pop
hlt
in
cmp
dec
mov
out
cmp
dec
loop
pop
icebp
mov
icebp
xlat
push
inc
cld
and
add
xchg
pop
pop
test
aad
test
adc
adc
in
xor
stc
mov
sub
icebp
nop
xchg
cmpsb
dec
dec
adc
das
cmpsl
pop
adc
adc
inc
cs
and
out
call
mov
or
adc
pop
xorb
push
popf
js
sub
push
loope
push
push
jae
cmp
dec
lea
and
lret
iret
jp
out
dec
sahf
jno
aas
lods
out
mov
mov
xor
jl
fists
dec
sbb
xchg
ret
dec
lahf
lds
je
inc
sub
mov
xchg
xchg
sbb
dec
lock
push
roll
mov
pushf
dec
mov
test
movsl
push
jbe
mov
mov
jp
je
test
mov
mov
mov
add
cmc
adc
das
or
push
fsubl
jae
rorl
mov
xlat
aaa
ret
jl
repnz
xlat
cmp
mov
gs
xor
cmp
xchg
loop
andl
pop
fwait
lcall
xchg
ja
xchg
and
faddp
dec
mov
push
aad
cmpb
insl
lcall
add
repz
pusha
mov
or
xchg
fidivrs
cltd
rcrb
or
jnp
iret
xchg
or
adc
in
loop
lret
pushf
in
lret
and
out
outsb
cmpl
shl
mov
mov
jg
pop
fadds
test
push
adc
jg
or
jnp
or
hlt
aad
mov
mov
cli
imul
sub
xor
popf
out
mov
je
lcall
jmpw
es
aad
les
pushf
adc
sti
sub
and
add
sbb
dec
sarl
mov
pop
pop
jp
ss
add
cld
inc
fidivl
fwait
lods
sub
dec
cltd
jmp
insb
lret
cmp
lods
js
test
add
test
jl
repnz
cmp
lcall
data16
jmp
es
in
inc
pop
pop
ljmp
cmp
pop
mov
mov
push
jno
push
or
xchg
mov
ret
notl
mov
sub
js
addb
leave
lea
fcoml
sub
rolb
iret
insl
pop
mov
jecxz
cmpsb
fsts
cmp
test
xor
mov
out
ds
in
popa
push
es
clc
or
jno
rolb
cltd
loope
dec
dec
int
mov
sub
or
rep
sbb
adc
pop
push
fdivl
les
aad
and
mov
xchg
inc
or
or
sbb
subb
xchg
dec
jnp
test
mov
or
inc
adc
in
aas
mov
xor
mov
test
ret
imul
loop
int3
arpl
sub
inc
ljmp
jmp
cs
sbb
test
or
sbb
enter
repnz
test
push
push
adc
notb
je
xchg
icebp
dec
xchg
sub
xchg
jne
fistpll
sbb
jl
lock
dec
or
mov
leave
push
negl
outsb
mov
inc
bound
ret
jb
mov
movsl
push
sbb
pop
push
mov
mov
push
lea
test
push
pop
sub
adc
xchg
stc
xchg
xchg
and
inc
in
fld
dec
cltd
shrb
mulb
out
or
mov
inc
xchg
int
andb
ss
aaa
stos
push
pushf
push
daa
or
push
cmp
xchg
in
jge
jno
cmp
dec
stos
pop
add
push
loope
xchg
inc
sub
jl
xchg
in
cld
hlt
aas
out
mov
sub
mov
xor
xchg
pminub
cmpsl
cmpb
stos
mov
out
loopne
sbb
in
jne
cld
push
adc
out
or
sbb
xor
push
filds
add
lods
inc
push
push
mov
adc
inc
push
rcr
gs
adc
js
aam
gs
add
xchg
cvtps2pd
cmp
fimull
inc
jo
repnz
pop
jmp
fimuls
call
sbb
outsl
iret
ljmp
pop
nop
shrb
xchg
sbb
sahf
jne
ret
jae
jbe
jbe
pop
mov
cmpsb
mov
ret
fcomi
and
mov
jne
or
mov
int
jp
cwtl
rolb
mov
pushf
iret
outsl
mov
cmp
add
xchg
imul
test
xor
or
aaa
and
cld
mov
stc
in
xchg
pop
in
cmp
mov
xor
mov
mov
pop
das
mov
push
sbb
out
fildll
js
xchg
rcrl
sub
or
add
pop
adc
inc
lret
pop
xchg
dec
pop
arpl
cmp
int3
cmp
data16
shr
cli
je
pop
or
dec
rorl
and
bound
mov
sub
call
cmp
pop
leave
in
sub
dec
mov
pop
or
leave
sbbl
mov
repz
sub
stc
or
stos
int
mov
out
jnp
push
shrl
sub
pop
sub
mov
aas
dec
or
mov
mov
mov
iret
xorb
cmp
fdivrp
das
pusha
jecxz
pusha
inc
leave
xor
or
insb
sub
sbb
shrl
fisubrs
mov
and
xlat
arpl
test
aam
cli
sub
inc
lock
sbb
lret
pop
movaps
cld
faddl
mov
mov
lock
xchg
and
sub
enter
fstl
pop
push
xor
test
lock
aaa
loop
ds
jne
je
mov
or
xor
inc
out
jbe
mov
dec
cli
movb
inc
sbb
inc
pop
test
lcall
pop
insl
inc
adc
daa
and
jno
cmp
int
xchg
adc
pop
sbb
fstl
ror
push
fsubp
mov
pop
xchg
and
loopne
or
rorl
mov
loopne
pop
iret
cmp
out
push
mov
jnp
fmull
je
or
test
ret
cld
ret
dec
in
mov
mov
popa
push
pop
or
or
jbe
repz
mov
scas
sub
sbb
cmpsb
leave
loope
or
xchg
lods
es
jmp
fisubrl
adc
sub
push
xchg
lea
movsl
pmulhw
inc
jg
punpcklbw
mov
dec
shl
push
xchg
and
xchg
ror
sbb
mov
mov
fsubs
sbb
sarl
lods
fneni(8087
pop
jne
sbb
or
inc
sahf
out
jle
pop
mov
mov
dec
inc
cmp
in
jge
jae
pop
adcb
pop
add
dec
lcall
loop
inc
pop
or
test
scas
add
pop
shll
push
add
mov
aas
sar
rolb
push
and
je
ja
push
or
dec
push
das
fadd
mov
fmul
cwtl
cwtl
in
leave
fisttpll
jg
in
mov
and
nop/reserved
test
push
xchg
mov
sub
popf
or
xchg
je
inc
pop
cmpsb
inc
mov
mov
jg
mov
push
xor
dec
std
pop
inc
mov
addr16
fsubs
jmp
jge
dec
repz
test
adc
rorl
addr16
into
fdivrs
movsl
pusha
lds
add
adc
iret
mov
fs
jb
in
jb
push
and
mov
lea
xor
mov
iret
cmp
sbb
loope
mov
daa
push
or
pusha
jb
repz
in
sub
pop
cmp
sahf
or
test
fwait
and
sub
das
inc
movb
and
jno
es
sub
cwtl
sbb
push
add
xchg
leave
into
lds
aaa
int3
and
mov
sub
inc
ret
add
sub
pop
mov
inc
call
add
stos
xlat
int3
mov
aam
xchg
addr16
je
mov
sub
in
or
push
lods
incb
xor
aam
add
jmp
xor
jns
ret
call
mov
inc
push
sahf
cmpb
leave
jb
jmp
lods
mov
jp
cmp
push
push
xchg
push
sahf
cmc
inc
mov
jne
cmp
xchg
cmp
cmp
cltd
pop
jge
and
subl
jg
add
and
xchg
sub
push
xchg
jg
adc
xchg
add
add
xchg
push
xchg
shlb
xor
gs
jp
mov
mov
outsl
xorl
cltd
out
sbb
call
push
add
mov
inc
test
sub
inc
or
dec
push
repnz
dec
inc
mov
test
enter
xor
fnstsw
push
fimuls
push
lock
lahf
lea
clc
xorb
je
int3
fimuls
clc
arpl
mov
sub
out
jns
sub
dec
xor
ret
dec
test
xor
mov
ret
ss
filds
pop
cmp
leave
lahf
lret
shl
xchg
inc
pop
cli
add
mov
lahf
xchg
pop
cmp
xlat
push
mov
pop
sbb
add
nop
xor
jbe
sbb
push
pop
int
cmp
inc
fcmovne
movsb
xor
cmp
in
test
mov
pushf
es
out
imull
jns
jg
adc
or
decl
dec
jae
lahf
mov
loop
add
icebp
loop
aam
and
dec
cmp
dec
gs
icebp
inc
sub
mov
jbe
push
cltd
xchg
aad
loopne
fidivl
push
imul
dec
hlt
lcall
dec
xor
jp
add
lret
jae
sub
aad
and
xchg
pop
jbe
mov
adc
cwtl
mov
stc
pop
mov
mov
lret
or
xchg
test
ja
cltd
rorl
iret
dec
jbe
pop
pop
add
int3
add
jmp
mov
pop
pusha
cmp
xor
add
push
mov
sub
cmp
jbe
in
inc
cmpsl
jns
fwait
push
jo
mov
jbe
iret
xchg
test
push
xlat
or
leave
inc
pop
add
aad
int3
cmp
xchg
mov
inc
inc
push
mov
fmull
popa
bound
add
mov
out
arpl
not
xor
sbb
cmc
movsl
nop
mov
mov
out
pop
mov
adc
stos
mov
inc
xor
jecxz
adc
hlt
xlat
popl
pop
xchg
aam
les
mov
adcl
push
rcll
push
mov
test
in
fmulp
adc
testb
mov
pop
inc
inc
les
adc
jl
mov
mov
and
out
adc
adc
sub
or
mov
jnp
jle
out
rolb
test
andl
sub
mov
sbb
add
fsubrs
mov
sbb
inc
into
and
leave
cli
jns
fdivp
push
leave
lock
xchg
add
stos
jmp
xlat
cmp
lahf
push
fldcw
pop
arpl
insl
adc
pop
repnz
push
fwait
pop
add
mov
rcrb
sub
sub
adc
xor
jns
lcall
xchg
xchg
push
shl
mov
jb
fistpll
push
arpl
mov
inc
pop
mul
out
pop
std
mov
in
mov
adc
cmpsb
mov
jmp
add
push
inc
mov
ss
push
negl
fxtract
mov
add
cmc
mov
add
cmp
fstpt
xchg
inc
fwait
mov
cmp
daa
jno
cwtl
sub
mov
dec
mov
loope
jmp
mov
fsubs
jno
rcrb
adc
push
pop
outsl
push
or
cs
jle
in
aam
add
cwtl
sbb
in
lock
roll
dec
popa
inc
cmpsb
adc
jb
scas
add
cld
adc
popa
mov
sarl
adc
stos
nop
es
or
popf
shrl
xchg
cmp
mov
filds
sarl
gs
shrb
or
push
inc
jne
fcoms
mov
jns
inc
and
mov
cmpsl
test
cmpsw
pop
enter
pop
xchg
in
clc
ret
inc
mov
test
adc
out
jb
cmpsb
sub
cmp
int3
inc
jp
adc
fdivrs
xchg
sbb
cltd
push
or
add
dec
and
inc
lret
int
lea
inc
xchg
outsb
shl
dec
xor
pop
int
cmp
subl
mov
mov
jns
je
mov
dec
mov
add
or
add
sub
loopne
sbb
sbb
out
arpl
popa
push
insl
sbbl
ret
jbe
popf
push
add
les
add
cmp
fcmovnbe
je
addr16
inc
mov
andl
sub
mov
call
test
mov
push
or
mov
mov
cmp
add
shll
das
lret
int3
mov
lahf
mov
test
nop
sbb
jecxz
repz
and
xchg
mov
aaa
mov
leave
imul
xchg
mov
ret
lods
daa
mov
add
ret
mov
sbb
xchg
jg
push
das
push
loop
ficoms
add
pop
cmp
push
loopne
shll
fisttpl
fimull
push
subl
xchg
mov
lret
xchg
mov
mov
pop
cs
cmpsl
stc
mov
dec
push
sbb
stos
adc
push
aad
push
sbb
push
idiv
popa
push
les
dec
movsb
mov
and
pop
pop
push
or
inc
int3
and
lods
loop,pn
popf
mov
mov
lea
and
lret
dec
pushf
xchg
aaa
mov
pushf
fstl
jecxz
repz
shr
stc
jnp
insb
cmpsl
ja
xor
outsl
xchg
icebp
jmp
sub
pop
dec
fwait
roll
xchg
push
clc
das
roll
jns
inc
insl
stc
nop
shrb
ljmp
fidivrl
add
push
mov
cwtl
es
pop
sub
nop
ffree
adc
aas
mov
jne
xor
leave
adc
and
imul
pop
inc
ds
sub
adc
lods
xchg
sub
dec
adc
ljmp
adc
call
je
js
inc
jg
shlb
lock
or
inc
leave
fisttps
push
test
pushf
repz
fyl2xp1
ss
mov
adc
call
inc
ret
sbb
xor
outsl
pop
pop
int
sti
or
mov
ud0
lods
test
iret
push
jp
inc
les
sub
into
subl
subl
nop
sub
fldpi
jecxz
or
cmpb
mov
gs
inc
aam
push
into
xor
loopne
sbb
mov
xchg
lods
xchg
sbb
fprem
movsb
pop
sbbl
inc
in
pop
popf
subb
scas
int3
dec
pop
int
pop
jbe
stos
inc
sarb
sub
popa
jb
mov
roll
cmp
cli
sahf
clc
loopne
ret
lahf
outsl
shlb
inc
jbe
mov
add
vcvtss2si
outsl
pop
fs
mov
rcrb
aam
pop
mov
dec
pop
jl
movsl
and
std
mov
inc
inc
xlat
lods
ret
arpl
push
and
push
xor
popa
lcall
shrl
or
cld
in
hlt
sbb
jl
jl
inc
mov
dec
pusha
into
mov
sbb
push
andl
and
lahf
adc
pusha
adc
xor
pop
jecxz
into
in
fsubs
mov
inc
je
ja
mov
mov
lods
inc
push
loope
stc
imul
faddp
pop
pop
pop
and
push
sti
cmp
add
sahf
adc
inc
mov
subl
pop
or
clc
cs
dec
mov
fsubrs
shrb
je
xchg
jns
xchg
xor
jb
xchg
shll
cwtl
jecxz
mov
fisttps
cld
out
mov
and
jle
out
loope
fistpl
inc
sub
inc
add
jle
jecxz
push
mov
je
fdivp
mov
mov
aas
inc
cmpsl
out
sbbb
mov
mov
xchg
daa
lret
mov
xchg
cmp
in
test
mov
lea
insl
pop
popa
jle
sub
dec
in
mov
inc
lock
outsl
dec
adc
in
xchg
das
adc
fwait
mov
fistps
dec
ljmp
xchg
mov
stos
add
add
into
mov
push
jp
pop
into
sahf
sub
test
in
js
out
mov
push
jno
mov
pusha
lds
neg
lret
daa
xchg
xor
stos
rcll
sub
pop
decb
mulb
cmp
mov
in
call
cmp
ds
aaa
sbbl
cltd
fwait
xor
cmc
pop
aam
lock
ljmp
repnz
into
stc
add
add
leave
dec
jle
push
pop
inc
insb
popa
cmp
mov
cmpsl
movsb
lds
stos
xchg
mov
mov
adc
test
movsb
jb
pusha
adc
sbb
mov
fwait
push
jmp
pop
fadd
nop
aad
cli
mov
pusha
int
out
sub
repz
or
xor
mov
imul
repz
pop
adc
add
stos
sub
fidivl
test
into
in
pop
pop
cwtl
fisttps
inc
out
pusha
lret
xor
or
xchg
sbb
mov
in
push
pop
icebp
dec
sti
mov
clc
pop
clc
push
pushf
imul
insb
pop
popf
ss
xchg
cmpl
jmp
lods
mov
inc
push
xor
inc
mov
xchg
repz
mov
jg
adc
test
clc
flds
and
push
mov
mov
sub
insl
ds
xchg
fimull
rolb
xchg
push
out
jno
jl
push
inc
cbtw
adc
push
add
cmp
cld
pop
roll
push
lret
xor
nop
xchg
hlt
hlt
add
mov
imul
cmc
loope
jmp
es
mov
jno
or
xor
outsb
ja
inc
dec
int3
xchg
lods
mov
add
add
dec
call
adc
push
sti
xor
or
push
fistps
rcrb
pop
out
ret
sub
lods
sbb
push
ss
rolb
repz
dec
pop
std
ret
fsubrs
jno
mov
xchg
leave
jnp
and
lock
stc
mov
dec
and
scas
mov
bound
loop
ljmp
fdivl
xchg
push
sbb
add
clc
xchg
ror
xchg
lret
leave
xor
mov
fadds
fistpll
ss
mov
and
pop
pop
pusha
pusha
mov
rolb
xor
inc
mov
xchg
sbb
dec
mov
jne
sub
sbb
push
sbb
lods
sbb
mov
mov
pop
rol
popa
mov
push
pop
cmp
test
ret
sub
mov
mov
dec
lock
ret
mov
clc
popa
jne
sbb
adc
fbld
mov
xchg
scas
pop
mov
lret
aas
mov
ret
das
mov
std
push
in
dec
fisttps
pop
mov
inc
jmp
outsb
orl
aaa
jns
sbb
mov
loopne
lret
mov
fdivr
lret
cmpsl
imul
gs
mov
and
icebp
les
xor
int3
call
or
dec
call
popf
dec
and
or
andb
daa
sbb
aaa
lea
cmpsl
inc
xor
out
rcrl
hlt
sbb
imul
das
test
cmpl
xchg
jmp
loopne
and
lcall
into
ret
mov
inc
pushf
insb
mov
ret
pop
das
mov
mov
jbe
cmp
mov
aad
inc
data16
mov
inc
push
sub
jbe
xchg
out
xchg
jle
call
jne
jb
jne
mov
je
pop
cmp
dec
adcb
shlb
xor
push
shrb
leave
mov
adc
out
adc
and
out
mov
cmc
sahf
sahf
add
decb
or
roll
call
mov
je
fcmovbe
popa
sahf
cwtl
ret
orb
push
sbb
xor
inc
repz
movsb
repz
std
in
sub
stc
mov
aad
data16
add
jae
push
outsl
scas
cmp
sub
shl
mov
aam
push
push
mov
shlb
and
ret
pop
sub
jo
addr16
push
icebp
ret
push
lret
js
add
pop
popf
leave
mov
std
add
fmuls
mov
fildl
js
mov
in
pop
loope
leave
push
ret
aam
inc
inc
das
movd
xor
dec
inc
in
and
xchg
dec
mov
mov
adc
pop
fmull
shr
sbb
out
out
inc
outsb
fbld
or
lods
push
das
shll
repnz
xor
push
cmp
inc
ret
das
pop
ljmp
jg
outsl
fcompl
adc
inc
stc
jno
aaa
mov
xchg
mov
xchg
int
ds
jne
mov
insb
popf
cmpsl
xor
mov
dec
movsl
sbb
faddp
outsb
sbb
jl
mov
call
icebp
jmp
scas
sahf
pusha
pusha
popf
stos
test
pushl
mov
ljmp
mov
rcll
les
mov
mov
in
inc
mov
or
push
icebp
jbe
mov
push
jecxz
or
mov
sbb
inc
sbb
lcall
iret
pop
nop
paddq
pop
mov
jg
rcll
lods
push
test
icebp
lret
mov
call
cmovne
mov
xlat
std
cs
mov
and
pusha
aaa
shrl
inc
adc
sub
or
push
scas
sti
int
jno
cmp
idiv
xor
leave
lods
in
dec
sbb
movsb
pop
dec
arpl
cmpl
xor
sbb
mov
dec
andb
and
mov
xchg
or
shl
imul
int3
inc
sub
inc
and
divl
pop
push
ds
sub
mov
jo
lret
xor
mov
sub
stc
mov
stc
pop
int3
jb
jo
loop
mov
loopne
push
ja
push
out
gs
ja
loope
out
mov
mov
jecxz
xor
xchg
int3
push
xchg
je
mov
jecxz
dec
mov
and
sub
aaa
outsl
nop
arpl
shrb
jge
fs
les
stc
imul
pop
lods
push
jb
and
push
out
fs
lock
in
movsb
and
sbb
or
out
and
inc
cmp
data16
mov
pop
jmp
fsubs
adc
lret
mov
cld
pop
and
pop
out
xorl
dec
pop
mov
hlt
pop
loopne
cltd
cmpb
dec
xor
ret
mov
pop
xchg
dec
mov
mov
test
sti
lret
rol
mov
mov
pop
hlt
jge
into
lods
movl
push
cmp
sbb
fldcw
push
push
loopne
insb
insl
mov
inc
jbe
mov
cli
les
dec
xcrypt-ecb
cmpsl
push
fstps
aas
ljmp
addr16
rolb
jne
out
hlt
xchg
aas
xor
out
rolb
sub
movsb
shl
push
out
or
pop
add
dec
mov
mov
cmp
and
shll
aam
or
fdivrs
and
out
pop
or
or
aad
aad
sahf
dec
jmp
xchg
inc
adc
add
sub
sahf
push
jl
loopne
xor
pop
fildll
fisubl
jb
das
sahf
mov
cwtl
mov
call
xchg
jne
cmp
cmpsb
add
mov
orl
pop
scas
cli
push
outsb
mov
xchg
cmpsb
mov
jg
xor
push
pop
dec
push
ds
jae
clc
add
pushf
mov
mov
jge
and
cli
dec
testl
jge
and
or
inc
fildl
test
jecxz
xchg
sbb
jg
or
mov
addr16
dec
clc
and
or
shl
fwait
pop
sbb
scas
fnclex
add
movsl
dec
mov
push
sarl
jle
adc
aam
icebp
call
cmp
imul
fs
mov
out
lret
sub
dec
mov
dec
outsl
push
shlb
sbb
sbb
cwtl
pusha
rcrl
jns
cmp
leave
cwtl
mov
leave
fcompl
inc
pop
pop
jo
fisubrl
fwait
lods
or
xor
divl
mov
pusha
or
push
cmp
dec
sahf
stos
test
add
call
pop
incl
gs
jne
insl
ffreep
fldcw
and
cmp
sub
jbe
sbb
xor
daa
sahf
sub
and
cmp
lcall
addb
mov
out
outsb
out
jp
pop
cmp
lds
jae
daa
pushf
daa
sub
mov
adc
jno
or
dec
and
lret
jne
push
stos
pushf
or
sbb
mov
cmp
xor
inc
int
call
loop
mov
jg
mov
xchg
xchg
adc
sbb
loope
js
add
mov
cmpb
dec
adcb
xor
cmp
mov
jge
adc
dec
mov
sbb
lock
repz
fldt
xchg
mov
lods
loop
fistl
test
mov
loope
cld
xor
mov
lret
mov
hlt
outsb
xorl
or
pop
lock
mov
ss
imul
xchg
mov
fs
jb
iret
pop
leave
leave
jl
pop
mov
rcrl
ja
or
into
mov
or
cmp
hlt
repz
fs
std
xchg
adcb
addr16
fsubrl
push
nop
xchg
nop
adc
xchg
in
out
mov
xchg
sarl
roll
add
add
dec
aad
fwait
xchg
rcrl
dec
adc
data16
inc
enter
scas
daa
lock
in
pop
es
add
jp
lahf
shll
out
pushf
mov
movsb
mov
pop
sbb
outsl
sub
lds
in
cmp
sbb
mov
ja
rcrl
push
mov
jl
xor
popa
test
pop
sbb
jle
test
push
data16
xor
push
aas
mov
outsb
loopne
les
sub
shll
inc
adc
jb
pop
addr16
mov
mov
mov
mov
clc
out
leave
xor
int
and
pop
sti
jb
sarl
push
mov
adc
stc
stos
add
das
xchg
shll
lods
sub
mov
leave
mov
stos
clc
cmp
xor
push
push
arpl
xchg
mov
rolb
push
std
add
out
inc
xor
mov
cmp
ss
cmc
sbb
ja
int3
loopne
sub
fnstenv
sub
jge
sarb
jmp
mov
mov
enter
dec
iret
pop
pop
and
and
and
pop
mov
and
aas
clc
movsl
add
mov
dec
ss
aad
jecxz
std
cmp
dec
jb
aam
aas
sbb
mov
push
lret
aam
xor
jp
test
mov
sbb
inc
daa
inc
adc
xchg
stos
mov
inc
test
dec
aam
cmp
mov
and
shrb
dec
mov
repz
push
mov
mov
test
aad
outsl
xor
pop
add
arpl
cmc
or
negl
inc
sahf
adc
ja
stc
out
mov
sahf
xchg
daa
das
or
jne
imul
call
stc
xchg
repnz
lret
xor
cmp
pushf
loope
mov
int3
xchg
or
pop
xorl
dec
or
iret
or
lea
push
or
inc
sbb
or
repz
add
pushf
in
sbb
scas
jbe
fbld
pushf
xchg
popf
inc
lock
sbb
je
fsts
adc
or
es
or
mov
and
mov
je
test
add
ja
aad
pop
out
xor
dec
pop
les
mov
push
inc
gs
loope
loop
sub
push
mov
repz
loop
aad
decb
sub
dec
data16
mov
xchg
int3
shl
sbb
test
mov
sbb
aam
xchg
arpl
xchg
cmp
je
jbe
movsb
ret
imul
aad
push
loop
iret
pop
pop
ret
fucomip
cmc
call
sbb
cli
adc
pushf
aam
sub
or
mov
lcall
dec
das
pushf
or
movsb
into
pop
jl
sbb
inc
jge
mov
dec
or
add
mov
popf
cwtl
dec
cmc
jo
jbe
pop
mov
js
incb
xlat
pop
jb
or
push
ja
jne
add
btr
sbb
mov
js
fildl
in
and
xchg
adc
fstps
mov
popa
push
pop
adc
mov
bound
mov
pop
xor
scas
inc
cltd
enter
push
jnp
fldt
imul
ret
xchg
bound
push
les
add
les
in
lret
les
ljmp
movsb
add
lods
je
xor
dec
adc
cs
cmp
mov
add
gs
fprem1
cli
and
jae
sbb
mov
arpl
inc
cmp
jp
ljmp
imul
mov
call
adc
das
and
out
pop
in
dec
out
mov
xor
int
pop
xchg
adc
xchg
sub
insl
mov
or
gs
and
lret
cli
xchg
dec
lea
adc
js
sbb
loop
sub
repz
sub
jno
imul
mov
shrl
nop
push
sbb
cltd
jnp
ljmp
clts
and
fdivs
unpckhps
jp
dec
fs
mov
mov
xchg
scas
xchg
movsl
lods
mov
andl
ret
dec
ja
xchg
daa
loope
bound
les
push
mov
addr16
stos
ficoms
jo
push
popf
push
nop
xchg
lock
mov
movsl
lea
mov
xor
sub
aaa
push
and
push
or
test
das
lcall
movsb
cwtl
addr16
cmp
cmpsl
insl
test
fwait
cmp
shrb
inc
and
in
jne
or
cld
insb
cmp
adc
push
mov
push
repnz
mov
inc
mov
and
push
inc
pop
adc
pop
push
ss
aas
xor
adc
fistl
lods
in
xor
xchg
outsl
xlat
idivl
dec
xchg
repnz
mov
orl
sti
int3
scas
daa
add
das
loopne
test
push
cmp
mov
xchg
ja
flds
pop
lret
outsb
inc
es
das
shll
adc
stos
aam
scas
loopne
xor
mov
or
jle
nop
ljmp
jo
scas
sub
jl
mov
fnstcw
loopne
push
push
push
push
jbe
sbb
sub
mov
repz
pop
movsb
cmp
test
roll
ret
mov
cld
pop
pop
xchg
lea
negb
mov
sub
test
sbb
repz
les
push
sub
jmp
pop
jecxz
xor
mov
dec
movsl
push
loop
add
into
push
iret
push
cmp
mov
jae
jns
arpl
mov
sbb
xor
mov
jp
pop
out
sub
mov
mov
in
lcall
aaa
xchg
cmp
jb
mov
lods
int3
fs
inc
testl
nop
imul
enter
sbb
inc
movsb
mov
sbb
add
pop
jnp
push
loope
cmp
in
cmp
pop
sub
repz
imul
mov
mov
test
inc
cmpsb
mov
repnz
add
ss
jo
mov
mov
into
jo
jecxz
pop
push
sub
in
rcr
cs
ja
mov
cmp
or
lds
out
dec
jp
popa
mov
mov
inc
insl
or
xchg
fildl
add
sub
mov
dec
stos
mov
mov
jnp
cli
sbb
add
xchg
imul
leave
loop
cmc
adc
xchg
pminsw
jns
jno
or
mov
sarb
adc
jge
sub
add
stc
in
movb
add
outsl
dec
fwait
sbb
jne
mov
lea
ljmp
xchg
stos
add
cmp
dec
cli
mov
pop
jp
jle
dec
inc
cld
sbb
lods
pop
dec
sub
repz
or
sbb
int3
ss
imul
mov
scas
and
or
push
stc
outsb
outsb
and
cmp
icebp
jge
bound
insl
push
cmp
sbbb
shlb
inc
roll
xchg
adc
cmp
stc
cmc
or
cmp
clc
jmp
subl
xchg
lods
xor
call
icebp
pop
jmp
adc
loopne
mov
mov
fists
jae
inc
add
test
frstor
xor
ret
mov
cmpsb
mov
movsb
sub
dec
push
mov
mov
or
cmc
sbb
xlat
negl
inc
add
dec
cli
movd
xor
and
pop
fmulp
and
push
in
adc
lods
inc
mov
inc
lea
lods
rcrb
ret
in
xchg
adc
stos
and
lock
xor
pop
add
push
pop
fisubrs
add
and
adc
sbb
mov
pop
fildll
inc
push
shrl
mov
or
and
ss
inc
xchg
sbb
mov
lcall
adc
xor
or
push
push
cs
add
lds
push
into
or
divl
or
nop
insl
icebp
and
inc
daa
sub
mov
je
xchg
mov
cmp
xor
leave
movsl
fists
das
out
fisttps
jne
cld
push
insl
lock
aas
mov
out
jmp
dec
shll
push
add
push
ret
push
loop
aaa
add
fcmovnu
scas
adc
inc
fs
roll
movsl
sarl
mov
fwait
aad
test
mov
popa
jo
mov
addl
inc
lea
push
sti
fmull
sub
ja
and
sbb
push
in
dec
jmp
cmp
ret
pop
mov
repz
jge
fwait
enter
les
dec
jo
insb
xchg
call
mov
or
mulb
lret
jmp
cltd
lahf
adc
mov
nop
pop
adc
mov
push
jbe
sub
sbb
pop
push
push
hlt
leave
lcall
mov
inc
mov
add
ljmp
inc
dec
inc
adcb
mov
fstps
and
pop
lahf
js
mov
hlt
test
dec
dec
mov
sub
cmp
jne
loope
jb
cs
cli
adcl
inc
pop
int
in
push
repnz
mov
icebp
fisttpll
js
sbb
pop
sbb
mov
xlat
inc
movsl
popf
ret
test
push
mov
sbb
or
push
sub
xchg
mov
or
daa
mov
in
jno
in
jl
and
xor
stc
push
adc
xchg
adc
dec
ds
cmpl
mov
popl
leave
or
inc
add
add
std
loop
and
adc
incl
mov
ror
out
sub
testb
jbe
mov
mov
popa
dec
jp
pop
add
pop
loope
gs
test
sti
jnp
inc
jecxz
das
sbb
pop
pusha
ficompl
test
loopne
rcll
lock
dec
cmp
filds
pop
data16
shll
pusha
xorb
leave
in
add
and
mov
xor
das
aad
sahf
pop
jbe
mov
out
test
scas
add
pop
sti
dec
cld
jge
daa
mov
mov
or
push
cli
push
aaa
arpl
int
jo
dec
mov
fidivl
cs
shl
add
mov
sub
pop
in
pop
daa
ror
jne,pt
jl
shll
jno
pusha
push
cmp
adc
cmp
mov
icebp
mov
test
mov
loope
jge
scas
mov
mov
cmp
mov
mov
sub
aaa
and
sub
and
mov
adc
shrb
jg
xlat
push
subl
push
loopne
inc
ljmp
mov
repnz
lods
cmp
in
mov
pop
sub
mov
dec
scas
jbe
iret
sbb
jge
shr
jmp
arpl
ds
xor
push
or
ljmp
inc
dec
push
lock
vpsadbw
jmp
les
roll
or
push
pop
cmpsl
andl
les
push
fstp
xor
mov
andl
xor
int
sbb
scas
fdiv
or
pop
cmp
jle
xchg
call
test
pop
mov
dec
xlat
in
pop
dec
fnstenv
sbb
adc
addr16
mov
scas
inc
fildll
xchg
sub
es
pop
orb
pop
je
iret
scas
das
out
mov
out
mov
push
leave
mov
out
jge
add
in
in
js
aas
push
insb
jle
pop
cmp
sbb
push
je
imul
adc
mov
les
cli
lret
jl
pop
jle
es
dec
adc
dec
xchg
inc
dec
mov
xor
mov
mov
or
shrb
mov
sahf
test
ds
mov
lcall
inc
gs
pop
movb
xor
outsl
xchg
inc
out
sbb
xlat
and
add
adc
push
pop
or
and
xor
xchg
mov
mov
inc
test
adc
flds
push
mov
xor
cmc
inc
addr16
jno
test
cvttps2pi
sbb
jge
mov
pusha
ja
sub
jae
loopne
das
mov
aas
es
loopne
out
xlat
cmp
mov
sbb
cltd
bnd
adc
aaa
sub
sahf
cmp
push
mov
xor
nop
cmpsl
scas
inc
nop
sahf
cmp
lret
push
cmp
aam
daa
test
cmp
and
adc
adc
mov
xchg
roll
mov
insl
stos
xchg
out
xchg
gs
ss
xchg
test
ljmp
mov
test
mov
in
pop
cli
inc
adc
aad
addr16
repz
pop
mov
xlat
lds
insl
add
jo
push
movsl
jno
out
sub
hlt
xor
or
or
pop
dec
dec
lea
out
aaa
xor
orl
aas
push
push
pusha
and
jns
mov
xlat
aad
cmpsl
fldt
xor
les
in
inc
clc
push
and
push
mov
outsb
loope
in
push
lods
dec
and
in
xor
cmp
fwait
jo
xchg
inc
je
mov
andl
pushf
shll
std
lcall
lcall
out
test
mov
lahf
or
pop
push
or
mov
int3
shll
and
inc
adc
add
adc
test
adc
push
imul
fdivr
jo
cmp
dec
push
jecxz
bound
cwtl
cltd
scas
leave
push
jb
and
adc
dec
lcall
aad
mov
inc
push
aaa
imul
cmpl
pop
inc
ds
hlt
addr16
outsl
gs
cmp
out
addr16
sbb
push
scas
mov
jecxz
xchg
gs
cmp
ja
shlb
lods
sahf
mov
push
xlat
pop
in
aaa
jns
adcl
mov
loope
pand
mov
lock
repnz
pushf
ds
movsb
std
mull
lret
outsl
test
stc
das
push
test
push
xchg
push
fucomip
mov
repz
std
out
jge
imul
lea
pop
ret
xchg
in
out
enter
bound
xchg
jle
sbb
mov
xchg
jle
stos
xchg
mov
jo
rolb
scas
xor
and
loope
mov
bound
pop
pop
cwtl
ret
int3
scas
xor
hlt
sbb
and
rorl
xor
sbb
mov
sub
mov
aad
ss
mov
xchg
ja
ds
mov
loope
jl
mov
sbb
es
push
ret
shrl
shl
fs
jae
mov
aad
jl
scas
dec
aaa
lahf
push
jo
lahf
pop
dec
std
repnz
inc
outsl
push
test
stos
adc
imul
push
or
jnp
out
cwtl
jnp
fwait
mov
push
mov
aas
cmpl
imul
mov
iret
and
cwtl
clc
and
ret
add
pop
cmpsb
repnz
loope
hlt
nop
pop
push
xor
sbb
imul
scas
sarl
bound
hlt
dec
mov
mov
rcrb
xchg
sub
mov
vphaddbw
repz
cld
mov
push
inc
stos
jp
inc
inc
mov
loop
int
fst
add
into
xchg
fnstenv
jmp
in
adc
pop
sbb
push
cmp
jle
dec
mov
adc
xor
mov
inc
movsl
testl
outsl
ljmp
fisttpll
dec
pop
jb
popf
icebp
push
ja
rorb
mov
cmp
sbb
or
mov
jbe
enter
idivb
push
and
negb
in
adc
stos
mov
dec
add
jno
arpl
outsb
das
lods
cmp
out
mov
mov
cmp
mov
testl
pandn
lock
hlt
push
lret
jmp
cmp
in
push
cli
jo
gs
and
in
rcl
insb
aam
aad
inc
mov
sbb
pop
rorl
pop
movsb
inc
stos
inc
adc
ss
lds
daa
pop
sub
xor
adc
aad
pushf
xchg
out
bound
stos
outsl
mov
psllq
dec
sbb
inc
inc
add
cmp
lret
xor
or
xor
mov
daa
aaa
xor
xchg
es
jg
jns
or
push
aam
sub
and
mov
push
mov
xlat
xor
xchg
std
add
mov
cmp
adc
dec
pushf
mov
add
fwait
sub
adc
xchg
cmp
out
movsl
or
sbb
ljmp
fld
push
ja
push
sbb
cmp
sub
decb
add
lahf
in
arpl
mov
cmpsl
test
lahf
repz
or
push
cld
pop
and
or
xchg
shrb
cld
test
addl
jno
rorb
js
jge
push
jno
sub
sbbl
xchg
mov
gs
loop
push
loope
movsb
cld
mov
adcl
mov
dec
imul
inc
or
test
and
mov
and
adc
fldcw
lods
cmp
push
push
lods
mov
mov
cmp
lcall
sbb
aam
add
imul
mov
push
cmp
in
fidivs
jge,pn
in
gs
and
mull
clc
or
jl
push
inc
jb
mov
xchg
xlat
adc
xchg
andl
push
out
add
addb
popf
inc
int3
or
xor
nop
mov
lods
andl
mul
adc
out
std
adcl
mov
ljmp
popf
push
test
pop
stos
inc
or
cmp
mov
pop
imull
jns
testl
add
or
std
leave
scas
mov
push
test
sarl
push
pop
dec
mov
mov
sub
insb
xchg
flds
ds
or
rorl
lret
sub
mov
inc
pusha
loope
loope
mov
outsb
aaa
xchg
test
scas
push
push
push
mov
rcll
in
push
pop
loopne
inc
lret
jl
sbb
pop
stos
sub
jne
roll
sbb
xlat
imul
or
jg
mov
xor
out
mov
xor
sbb
cs
ljmp
data16
sbb
daa
mov
lods
cli
jo
mov
pop
andl
xor
pop
pop
nop
orl
call
loop
in
inc
mov
idiv
je
mov
fsts
push
loopne
fsubr
mov
cwtl
mov
add
lea
cltd
pushf
mov
sub
add
sub
leave
js
push
push
loope
jmp
or
mov
clc
dec
out
pop
test
decl
in
mov
int
xor
jb
cmp
cld
jo
mov
sbb
sub
pop
mov
fmul
loop
repnz
jb
bound
scas
sbb
mov
cltd
jo
push
push
sbb
adc
sahf
mov
mov
into
std
repz
xlat
adc
fistl
pop
adc
shr
faddp
jle
dec
sub
mov
mov
ds
psubq
xchg
negl
std
test
push
repz
xor
pop
sbb
mov
xlat
mov
fisttps
jge
sub
add
in
imul
out
xchg
adc
mov
sbb
inc
aam
sbb
mov
push
pop
lods
insl
loopne
mov
fcomps
sbb
out
out
int3
and
cmpl
into
inc
mov
sub
push
sub
cmp
jo
subb
sbb
popl
loope
loopne
clc
dec
arpl
sbb
jge
pop
pop
xchg
add
xor
dec
out
and
sub
jnp
into
repz
mov
fldenv
adc
test
push
jg
mul
idivb
div
je
adc
test
pop
or
gs
mov
shrb
lret
into
adc
or
pop
ret
jns
fcoms
mov
ljmp
loope
mov
pop
jp
jns
lret
cmp
int3
in
std
pop
das
cmp
into
and
lds
fs
hlt
dec
mov
inc
and
or
lret
je
lahf
mov
pop
ficompl
lds
loopne
or
mov
push
mov
mov
and
aaa
xchg
ds
scas
jae
jbe
sub
jns
xor
push
mov
stos
sbb
std
inc
and
pop
mov
cmpsl
mov
sbb
cwtl
pop
lods
frstor
add
pop
icebp
jns
dec
nop
and
mov
gs
push
nop
push
popf
pop
pop
aad
jae
mov
je
nop
pop
inc
pop
mov
fwait
xchg
data16
popa
mov
lea
xor
popa
and
inc
ror
lahf
in
hlt
scas
add
push
mov
fimull
dec
out
sub
test
push
movd
icebp
cli
and
push
aam
cltd
add
add
sub
stos
adc
sbb
inc
cmp
push
repz
push
sub
mov
mov
push
scas
js
mov
and
inc
repz
pop
movsb
lea
mov
popa
mov
jo
adc
repnz
test
lds
rclb
adc
push
mov
roll
lods
std
fsubl
sbb
repz
xchg
cs
pop
mov
push
and
push
xor
pop
fwait
push
adc
pop
fwait
mov
xchg
push
xchg
mov
sbb
outsl
cmp
divb
das
clc
repnz
fisubl
ss
and
mov
xchg
push
jns
sub
cmpsb
xchg
cmpsb
test
jle
dec
rorb
pop
das
jge
add
mov
pop
fdivrs
je
adc
insl
pushf
xlat
in
lods
and
mov
lods
rcl
lcall
mov
and
es
push
int
test
mov
cmp
cmpsl
mov
xor
xchg
xchg
mov
cltd
test
cltd
push
dec
sbb
xchg
jle
jg
xchg
aaa
dec
or
sbb
inc
xchg
sbb
adc
fisttpll
and
inc
movsl
loop
and
xchg
mov
insb
jecxz
cmovns
fistpl
xor
jne
inc
xchg
cmpb
outsb
repnz
pop
mov
adc
popa
pop
cld
loop
jne
xor
push
xchg
xor
adc
dec
mov
push
add
cs
data16
sbb
movb
push
scas
aas
test
jns
and
aas
mov
mov
mov
sbb
sbb
jnp
push
cmpsb
leave
mov
loop
dec
cmp
aas
call
fwait
movsl
rcll
dec
mov
mov
xchg
addr16
jp
sub
dec
push
sbb
push
test
in
cmpsb
test
cwtl
mov
dec
pop
inc
dec
test
cmp
outsl
mov
push
clc
or
push
cld
pop
mov
in
jle
adc
icebp
test
add
inc
jecxz
mov
or
stc
mov
push
lods
aas
loopne
mov
sub
jge
les
mov
test
sahf
mov
dec
inc
push
add
movsb
fs
lret
sbb
lret
lahf
mov
andl
int
mov
lret
xchg
das
ja
addb
pusha
jecxz
test
imul
lahf
inc
adc
shrb
mov
mov
sbb
arpl
cmc
and
jno
inc
dec
xchg
inc
jb
orl
push
sti
in
adc
push
pop
outsb
push
andl
adc
xchg
lcall
push
jge
mov
mov
jne
add
dec
mov
mov
cmp
push
dec
inc
iret
subb
jno
cld
and
add
pop
out
pusha
es
dec
call
data16
dec
inc
pop
rcl
add
out
cwtl
ret
cmpsb
pop
xchg
icebp
inc
xchg
aaa
mov
imul
rcl
dec
pusha
sbb
lret
sub
pop
stc
jns
and
mov
sub
add
andb
adc
mov
mov
mov
sbb
out
aad
sbb
inc
mov
xchg
adc
push
jne
movsb
pop
mov
mov
push
mov
dec
lahf
mov
jl
pop
lock
mov
jecxz
sub
movsl
jmp
cmp
movsl
jecxz
or
mov
test
out
lcall
sbb
scas
rcrl
push
mov
sbb
cmpsl
shlb
in
dec
mov
jae
pop
in
pop
xor
sub
adc
mov
cmpsb
cmp
adcl
or
cltd
sub
call
lret
iret
inc
cli
gs
imul
cmp
sar
cli
add
cmp
movsb
pop
mov
pushf
inc
cmp
xchg
cmp
add
add
loopne
pushf
cmc
xor
pop
popa
adc
repz
aas
mov
sbb
fstpl
les
mov
jg
mov
mov
adc
xor
std
add
aad
push
fsubl
sub
mov
cltd
sub
shr
mov
addb
cmp
cld
outsb
insl
dec
inc
cmp
insb
jle
pop
mov
xchg
push
mov
xlat
adc
cs
add
lock
inc
imul
lahf
ss
xchg
lret
and
daa
dec
test
pop
stos
push
hlt
pusha
mov
aad
xchg
popa
into
inc
ret
push
es
push
stos
popa
gs
pop
inc
imull
xor
pop
lods
add
pop
inc
xor
ds
cmp
hlt
sahf
sub
push
cld
xorl
das
mov
mov
loop
pop
outsb
gs
fwait
fwait
scas
mov
test
lods
mov
arpl
cmp
stc
arpl
mov
out
cwtl
cltd
pop
les
dec
mov
sbbl
adc
test
mov
repnz
xchg
pop
pusha
xchg
jo
sbb
sbb
mov
adc
mov
jg
mov
sub
sahf
daa
dec
cwtl
push
push
bound
sbb
cmpsl
aad
and
test
push
inc
mulb
ror
xchg
data16
into
in
pop
dec
inc
fistps
mov
je
in
pusha
xor
inc
es
inc
aad
movsb
and
pushf
fdivrs
jb,pn
out
sbb
and
jb
cmp
pop
xlat
mov
pop
mov
push
jl
cli
adc
aam
shll
imul
jb
lods
andb
xlat
popa
push
arpl
push
addr16
pop
dec
hlt
and
or
and
js
pop
push
loopne
jo
ret
xlat
adc
dec
arpl
sahf
in
and
jp
out
jns
mov
pushf
mov
or
and
inc
int3
hlt
ror
or
push
loop
arpl
add
pop
mov
adc
pushf
dec
jecxz
call
mov
fnstenv
loopne
lds
add
lods
data16
int3
mov
adc
mov
scas
in
nop
xchg
repnz
fnstsw
mov
jg
insl
enter
push
fwait
or
subl
adcb
inc
mov
clc
cmpsl
fidivrs
xchg
pop
js
repnz
in
lcall
mov
test
shll
sub
adc
pushf
insl
mov
xor
int3
hlt
and
dec
adc
xor
std
mov
gs
add
pushl
sub
jo
mov
ja
ja
scas
cltd
jmp
cltd
sbb
subb
xor
lcall
xchg
js
dec
xor
mov
stos
add
add
lods
and
dec
jmp
xchg
ljmp
ret
mov
leave
and
sub
add
pop
jmp
inc
mov
cmp
add
inc
pop
in
mov
jecxz
xor
loopne
inc
xchg
xor
iret
gs
movsb
push
jmp
pop
cmc
dec
xchg
xchg
add
xchg
out
hlt
add
stc
in
or
test
xlat
mov
mov
add
or
mov
mov
leave
in
call
data16
jbe
int3
dec
lds
imul
lods
sbb
jecxz
je
xor
xchg
cltd
out
int3
push
mov
or
mov
inc
jne
sbb
aad
mov
pop
push
je
sub
add
push
xchg
ret
fwait
lock
out
ret
fdivrl
xchg
xchg
xchg
mov
xchg
inc
jns
xchg
test
rcr
inc
mov
push
pop
shll
push
leave
jno
push
mov
fdiv
or
ljmp
repnz
cmp
das
or
jae
lcall
fcoms
xchg
mov
xchg
fidivl
movsl
in
scas
shr
mov
into
cmp
mov
push
in
fmuls
movsl
arpl
jp
xor
push
add
lcall
fsubrs
ja
xchg
shl
sahf
jg
xchg
fisubrl
jecxz
div
xor
pusha
scas
insb
stc
push
xor
cmp
lahf
mov
arpl
push
cld
cwtl
mov
mov
jno
inc
icebp
and
push
out
pop
rcr
mov
dec
pop
inc
ja
and
fiaddl
idivl
popa
pushf
add
lret
movsb
sarb
ss
xchg
pop
scas
mov
mov
xor
ja
ficompl
in
cmpsb
movsb
push
int3
iret
pop
push
mov
cmp
decl
fbld
ds
push
ficompl
cmp
jmp
jbe
mov
and
insl
push
cwtl
shll
lds
or
dec
aaa
jnp
cwtl
jp
pop
pop
dec
aaa
add
adc
pusha
mov
cmp
mov
sti
mov
mov
cli
aam
sbb
out
scas
jp
inc
xchg
inc
fistpl
sub
xchg
mov
xor
jno
out
push
stos
jp
mov
push
sbb
out
insb
sbb
in
fucom
mov
iret
aas
fisubrs
mov
loop
add
call
jns
imul
mov
adcb
xor
loope
inc
xor
mov
dec
pusha
rolb
sahf
dec
scas
add
dec
add
sbb
bnd
lea
add
jg
insb
les
dec
mov
xor
jl
sti
orl
bound
sbb
xchg
jbe
dec
out
clc
inc
cmc
fiadds
mov
or
es
lock
cmc
flds
rorl
cmp
orb
stc
push
add
aas
adc
in
cmp
js
mov
mov
mov
imul
scas
add
sbb
mov
jl
clc
fwait
stos
push
jae
cs
inc
in
inc
test
les
lods
imul
mov
jmp
adc
mov
iret
fldl
cmp
and
inc
repnz
pop
or
inc
dec
popf
jg
xchg
jl
mov
push
mov
loope
pop
push
adc
mov
in
adc
xor
jmp
pop
imulb
inc
or
jae
cmp
ret
xlat
jmp
cli
ds
add
jno
dec
jb
hlt
push
xor
int3
xchg
and
fldenv
fdivrs
lret
outsl
xor
daa
arpl
bound
imul
inc
mov
popf
ss
mov
rcl
nop
xor
mov
push
xchg
mov
out
and
add
push
fwait
xorb
adc
xor
ss
xchg
jmp
adc
inc
pop
dec
shl
cltd
data16
jb
xchg
into
popf
lds
add
mov
and
lahf
dec
scas
insb
pop
js
inc
and
push
dec
mov
add
aad
daa
clc
cmc
push
outsl
fucomp
mov
lods
lods
or
pop
std
cmc
push
add
mov
mov
stc
mov
mov
out
in
addr16
mov
pop
icebp
leave
mull
and
fdivs
cmp
sbb
and
ret
mov
pop
mov
mov
push
mov
aam
hlt
pop
pop
mov
and
int3
sti
shlb
push
xor
rcl
popf
mov
pop
or
idiv
sbb
pushf
outsb
dec
jmp
aas
stos
mov
out
ret
xchg
mov
sub
sbb
inc
pop
popf
outsl
jns
orl
mov
jb,pn
mov
ja
jge
ljmp
inc
testb
std
shrl
adc
or
mov
jbe
fisubrs
mov
jne
mov
imul
aaa
repz
jl
mov
ja
jne
and
mov
pop
icebp
sub
out
dec
sub
pop
push
pusha
sti
mov
and
push
fdivl
push
or
jbe
add
cmp
pop
add
fsubs
ret
jmp
adc
int
or
inc
lret
push
pop
inc
and
push
incb
add
shrl
imul
jns
fisttpl
jo
pop
aad
test
lcall
movl
daa
rclb
push
mov
xchg
sahf
mov
fbstp
sub
pop
popf
fdivl
mov
jb
subl
outsb
out
pop
dec
outsb
push
test
mov
jp
push
sbb
in
pop
add
test
out
je
xchg
lret
ss
adc
mov
movsl
ljmp
in
in
mov
fcmovb
clc
dec
and
div
or
test
jmp
inc
ja
adc
arpl
mov
negl
and
sub
je
xor
clc
ret
fistpl
pop
lahf
and
insl
or
or
jno
incl
cmp
or
mov
pop
fwait
in
jae
outsl
push
inc
push
sahf
xchg
push
idivl
sbb
dec
fldt
mov
sub
pop
js
xor
sub
lods
insl
sbb
cmpb
jo
add
push
vminsd
dec
and
push
or
mov
pop
test
pop
lods
jbe
sub
mov
lods
sbb
mov
adc
adc
pusha
sti
daa
inc
dec
xorb
pop
or
lods
loop
inc
mov
push
in
sub
push
cltd
sub
pop
test
icebp
insb
scas
enter
sub
cmc
ja
jmp
add
cmc
cltd
mov
stos
movsl
testl
mov
and
mov
push
jne
out
sub
in
pop
mov
sti
jae
rol
clc
orb
je
mov
scas
add
sbb
jp
push
addb
nop
jecxz
jmp
outsb
pop
lea
ljmp
push
je
imul
cmp
pop
adcb
insl
jo
repnz
aad
push
cmpsb
icebp
in
sub
mov
mov
and
push
fxch
outsb
add
lret
scas
xor
xor
fstps
mov
or
inc
dec
data16
movl
movsb
aad
or
or
and
cmp
pop
lea
pop
js
out
push
loop
inc
and
in
shr
cltd
ss
and
or
loope
jecxz
addr16
fwait
mov
pop
add
cmpsb
pop
in
xor
pop
dec
je
xchg
mov
dec
xchg
cli
adc
ljmp
jp
add
add
xor
sub
pop
popa
ss
adc
pop
cmpsl
add
cmp
ljmp
ret
add
icebp
cmp
add
jne
shlb
daa
scas
xchg
in
cmp
inc
add
mov
cwtl
and
mov
mov
lock
pusha
adc
xchg
dec
repnz
sub
cmp
and
inc
pop
out
cmp
adc
fs
jmp
rorb
mov
xchg
mov
cs
inc
test
gs
mov
leave
addl
enter
daa
into
xor
mov
adc
sahf
mov
cli
xchg
xor
ds
pop
cli
pop
fmul
movsl
lods
add
sti
push
pop
sbb
orl
add
lods
xlat
repz
sub
popf
cld
xchg
daa
adc
daa
lea
push
adc
sub
jbe
push
in
arpl
dec
scas
bound
and
fisttpll
jae
jl
inc
xor
xchg
cmpsl
mov
jl
shll
mov
test
mov
popa
inc
inc
in
sbb
and
pop
addl
ljmp
jb
mov
pop
idiv
fcmovbe
jle
inc
or
imul
xchg
mov
cmpsl
jge
jns
loop
cmp
mov
cmpsl
rcl
mov
test
sbb
loop
scas
lret
cmp
cld
mov
stos
les
jbe
lret
cwtl
fsts
std
insb
mov
mov
mov
sub
cmp
jmp
xchg
add
mov
lret
jle
shr
rcl
shll
scas
les
adc
out
loop
icebp
inc
int3
xor
jecxz
inc
adc
sbb
lret
shrl
scas
dec
ds
mov
mov
pop
xchg
adc
cwtl
iret
in
lods
sbb
outsb
in
pop
pop
scas
push
xchg
test
cmpsl
adc
js
sbb
xor
inc
mov
in
call
jmp
lret
in
sbb
fsts
fcomp
xchg
sub
outsl
aad
and
clc
sub
cmp
add
jne
inc
int3
mov
repz
ficomps
insb
cmpsb
enter
shll
fs
dec
sbb
lcall
jno
xor
xorl
and
negb
sub
notb
shrb
mov
out
aam
pop
sar
sahf
or
fwait
and
sbbl
xor
imul
add
xor
jne
cld
in
inc
pop
sti
jbe
leave
lock
xchg
ret
pop
nop
rcrl
mov
into
add
mov
pushf
mov
sub
mov
fildl
int
lret
ds
shl
jg
inc
push
jl
nop
add
sbb
fs
orl
shrb
stos
cwtl
adc
jno
int3
sub
jp
dec
iret
imul
xor
or
ds
mov
cmp
sbbb
pop
sarb
push
mov
les
in
outsb
lods
xchg
sub
cmp
and
push
sbb
out
cmp
or
add
push
dec
leave
push
ja
jmp
cmp
sub
loop
inc
out
xor
xor
imul
push
mov
sti
jno
add
inc
sub
test
cmpl
gs
add
mov
cmc
sub
push
mov
pop
shrb
leave
movsb
pop
inc
inc
stos
cs
lret
rorl
push
push
data16
jp
jmp
imul
mov
adc
int3
sub
push
cmp
test
lea
mov
jg
out
jnp
and
test
ret
adc
adc
add
int
fsubs
lods
loope
push
fsubl
stos
or
popf
or
mov
stc
mov
icebp
and
out
mov
imul
inc
addb
or
add
fnsave
test
xchg
iret
cmp
mov
cmp
dec
cmp
decl
or
pop
pusha
cmpsl
jge
add
stc
clc
sbb
push
jmp
ljmp
scas
cmp
mov
pusha
mov
scas
xchg
insl
mov
rolb
stc
lea
jmp
orl
push
push
jae
mov
into
push
ss
mov
fistpl
rcl
adcl
mov
fninit
arpl
loopne
push
or
dec
out
inc
push
je
sbb
push
scas
sbb
cs
cmp
mov
add
cld
negl
inc
js
scas
loope
xchg
scas
or
cmp
mov
into
xor
outsl
jbe
xor
rorb
add
jno
pushf
stc
dec
cmc
js
out
stos
fs
or
mov
nop
fnsave
adcl
jg
dec
add
or
xchg
xchg
add
arpl
mov
and
push
pop
dec
scas
fwait
cli
stos
inc
js
mov
std
xor
xchg
lea
aas
sbb
inc
popf
pop
push
cmpsl
jle
aad
in
pop
rcr
aaa
sbb
out
adcl
dec
mov
add
cmp
lret
lock
dec
shrl
jb
loopne
in
sbb
outsl
pop
mov
push
dec
xor
clc
and
mov
mov
pushf
xchg
mov
sbb
xor
jnp
push
imul
sbb
dec
int3
fcom
pop
push
pusha
or
mov
adc
mov
jmp
daa
xchg
pop
add
enter
clc
adc
inc
ror
xor
cmp
lods
ret
xchg
adc
nop
out
data16
popa
addr16
dec
notl
lcall
loopne
push
enter
ss
movsl
imul
sarl
jnp
sbb
stc
cmp
cmpsl
xor
inc
imul
test
pop
in
scas
mov
sbb
jg
ds
push
std
inc
cmpsb
mov
scas
loop
cltd
aam
es
add
scas
or
lods
fcom
popf
fisttpl
mov
mov
push
mov
sti
adc
aad
movsb
pop
push
jo
psubq
jne
pop
ljmp
in
push
out
adc
fisubrl
adc
push
cwtl
fcmovnb
outsb
dec
mov
jge
iret
hlt
mov
jecxz
aad
inc
ret
ffreep
mov
adcl
out
imul
push
shl
jne
pop
mov
adcb
nop
xor
and
movsl
xor
mov
dec
jmp
jbe
stos
sub
je
xchg
or
in
xor
push
xor
shl
cmp
dec
out
and
enter
xor
mov
rcrl
icebp
stos
inc
mov
pop
xor
repnz
jge
add
daa
test
clc
and
cld
stos
cmp
or
xchg
fsubs
cld
dec
leave
pusha
cmp
add
lods
mulb
subl
inc
leave
test
loop
je
mov
cmpsb
add
jg
inc
ret
mov
pop
or
xchg
cwtl
in
cs
mov
xchg
mov
das
dec
in
les
test
pop
fists
popl
jl
push
push
push
cmp
mov
std
nop
push
imull
mov
adc
stos
movzbl
in
mov
gs
out
and
mov
mov
adc
sarl
xchg
outsl
xchg
jbe
push
push
lahf
aaa
push
inc
mov
sbb
ss
in
push
out
xlat
scas
inc
daa
xorl
push
imulb
cmpsb
je
mov
jbe
adc
int3
cwtl
pop
stc
mov
pop
mov
and
pop
sub
popa
fwait
sarl
fnsave
dec
dec
cmp
pop
dec
mov
mov
les
jmp
jle
adc
ret
inc
push
add
jl
mov
add
int
sbb
clc
lea
adc
sbb
jo
loop
sub
ret
cmc
outsl
cmp
push
jo
mov
out
inc
sbb
inc
cmpsb
xchg
mov
mov
test
adc
fdivrp
jge
mov
lcall
lcall
xlat
stos
fadds
push
push
lods
lret
xor
in
flds
cltd
push
bnd
cmp
mov
ficomps
js
icebp
in
fdivl
adc
xchg
insb
jle
je
xchg
into
mov
daa
xlat
cwtl
mov
aam
mov
xchg
inc
push
mov
andb
int3
pop
les
and
popf
add
adcl
inc
and
shl
cltd
or
jno
repnz
push
or
and
aad
fiaddl
jbe
cmpsl
scas
dec
das
pop
mov
lods
jns
sub
mov
cmp
inc
xchg
sub
int3
push
aad
and
xor
add
mov
xchg
daa
pop
pop
mov
add
arpl
jb
arpl
loope
xchg
dec
and
xchg
outsl
fnsave
adc
inc
int
pop
jecxz
fsubrp
loop
inc
push
push
or
out
dec
test
fdivrl
add
vpsubsw
add
lock
fbstp
movsb
pop
pop
sub
mov
xchg
jge
lods
imul
dec
push
xor
sub
adc
mov
cmp
and
sub
inc
in
jno
aam
ja
in
mov
inc
cmpsb
ja
shrb
inc
xchg
sbb
ds
imul
pop
jae
jle
mov
mov
cmp
int3
adc
push
in
adc
jp
test
pop
add
mov
in
mov
dec
pop
in
imul
mov
leave
adc
jns
bound
mov
sbb
stos
jns
dec
and
inc
push
stos
rcr
dec
test
leave
or
ja
adc
dec
fs
in
mov
imul
mov
jecxz
or
mov
fmull
inc
xchg
inc
xor
pop
push
out
outsb
call
xchg
ds
lea
add
pushf
fsubrl
cmp
xchg
mov
jnp
je
aas
pop
iret
ljmp
pop
xchg
or
mov
insb
inc
js
lds
jmp
inc
adc
sub
jno
imulb
pushf
es
movsl
shr
mov
adc
dec
loop
push
pop
idivb
test
loopne
xchg
pop
fdivs
cmpsl
xor
mov
add
int
jp
stos
std
or
sub
dec
fwait
jl
sbb
xor
fmuls
mov
adcl
jmp
pusha
jae
mov
into
push
pop
test
and
repz
jno
test
or
or
jno
pop
int
in
add
jno
outsl
lock
xlat
pop
movsb
xchg
or
push
lret
jne
out
sbb
in
or
fcompl
sub
loope
ljmp
gs
mov
popa
mov
andl
data16
fnstcw
leave
clc
push
adcb
lock
loop
ljmp
inc
cli
xchg
in
ljmp
jns
push
pop
jg
lods
negb
aas
in
aaa
daa
test
repnz
leave
or
insl
xor
and
adc
test
int3
adc
mov
leave
outsb
loop
mov
iret
out
leave
mov
iret
mov
mov
push
insb
push
int3
xorb
adc
sbb
add
mov
inc
imul
pop
leave
sti
jecxz
jbe
dec
pop
lret
cmp
cmc
jmp
adc
pop
pop
sub
mov
out
sahf
cmp
lcall
dec
and
lods
or
and
inc
imul
or
arpl
lahf
push
adc
into
loopne
cmc
xor
rcl
sbb
in
push
int3
lret
idivb
xchg
pop
jno
aad
push
add
out
lods
daa
mov
insb
push
fsubs
adc
sub
jae,pt
sub
add
mov
xchg
push
into
andl
daa
and
mov
out
jge
cmp
sub
cmpsl
xlat
sub
test
push
xchg
jae
dec
mov
scas
mov
or
test
xorb
shr
shrl
xor
cmc
out
dec
rolb
cmpl
cmpxchg
in
fsubrs
popf
xchg
xchg
sbb
xorl
jp
and
outsl
sbb
cmp
iret
mov
popl
mov
sbb
cmp
out
push
mov
push
pop
stc
outsb
dec
fldcw
cmp
mov
insb
vpshufhw
cmp
or
mov
xchg
lods
dec
jmp
cmpb
repnz
call
mov
call
xchg
or
in
jecxz
pop
push
movb
mov
pop
mov
jno
test
in
mov
jns
xlat
fdivrs
cmp
jecxz
lea
test
or
mov
dec
aas
les
xchg
mov
inc
mov
push
cld
ror
sub
fstl
and
xchg
test
push
adc
xchg
mov
mov
cmp
xor
sub
scas
push
mov
dec
or
repnz
in
aas
in
repnz
out
mov
push
icebp
adc
jb
je
cli
cmp
loope
addl
int3
cmpsb
subb
cli
cmpsl
imul
je
mov
inc
mov
mov
mov
xchg
insl
pop
repz
sbb
push
stos
test
mov
xor
insb
push
push
xchg
lea
xchg
mov
repnz
fmull
sub
xor
dec
std
xchg
and
test
fs
mov
add
in
or
orl
insb
dec
in
cltd
xor
ds
pop
cltd
sub
in
cmp
pop
imul
pusha
pop
xchg
or
and
call
aam
imul
sarb
and
sbb
inc
cs
add
inc
fucom
xchg
sbb
or
dec
pop
orb
jle
cli
mov
nop
ret
mov
pop
inc
jl
push
jb
pop
aad
push
std
rorl
shlb
sar
dec
push
addr16
andb
and
xchg
add
div
xorl
cs
cwtl
push
mov
sbb
adc
mov
fistpl
cmp
mov
icebp
adc
sti
xlat
lahf
push
cmpb
ljmp
adc
nop
cs
notb
stc
dec
roll
icebp
aaa
xchg
xchg
xlat
xor
fstl
mulb
adc
call
pop
call
xor
notb
cli
fists
sub
cmp
sub
mov
inc
push
in
or
inc
add
push
jne
pop
repnz
stos
stc
sbb
mov
sub
jae
mov
push
dec
sub
in
push
call
enter
xchg
loop
stc
fstp
push
push
stos
ss
std
jno
inc
pop
and
inc
ret
cmpsb
aad
jl
mov
gs
adc
sub
xor
cwtl
push
mov
and
lods
push
lret
pop
outsl
inc
shll
adc
mov
icebp
popf
fisttps
repz
add
cmp
push
cmc
mov
add
clc
mulb
scas
inc
jnp
ljmp
jb
push
pop
ds
jnp
and
pop
lods
mov
out
mov
jp
pop
dec
xchg
loopne
xchg
repnz
into
aam
pushf
stos
gs
lret
push
mov
mov
and
mov
adc
add
sbb
sbb
inc
in
rcrb
pop
jne
in
dec
insb
xchg
mov
fbld
pop
inc
and
mov
mov
testb
bound
mov
insb
adc
dec
mov
test
fistl
xchg
add
sarb
clc
mov
incb
adcl
shll
or
mov
popa
jle
rcl
sub
in
pushw
imul
mov
mov
addr16
cmpsl
sbb
dec
add
jle
orl
cli
mov
mov
xor
negl
mov
xchg
dec
faddl
inc
test
xorb
loopne
pop
dec
fwait
jne
mov
fcoms
test
mov
cmp
inc
fstl
pushw
push
and
imul
addb
push
push
loopne
loope
push
dec
out
fwait
jae
push
mov
scas
in
inc
lea
dec
bound
negb
stos
hlt
mov
in
pop
out
jg
inc
cmp
in
jmp
dec
pop
fcmove
pop
ficomps
fisttpll
je
mov
or
cmp
xchg
in
iret
std
dec
add
rcr
jo
mov
sub
idivb
lds
dec
insb
pop
cmp
mov
das
jne
sbb
push
sarb
les
shrb
nop
sub
mov
and
dec
sbb
jb
mov
mov
add
punpckhwd
dec
mov
into
pop
mov
pop
cmovl
fnstcw
xchg
and
stos
add
loope
scas
loop
sub
cmp
xchg
or
sti
aad
fwait
and
mov
adc
mov
sbb
inc
adc
add
mov
xor
xchg
cs
lods
and
rclb
adc
icebp
outsl
mov
incl
addb
add
cmp
in
testl
aas
jno
js
aas
push
jbe
inc
es
and
ret
insl
or
and
in
nop
mov
mov
out
cmc
xchg
jge
aas
daa
iret
xchg
stos
sbb
adc
or
outsl
adc
rclb
pop
imul
xor
xchg
cltd
add
popf
enter
mov
ja
add
xor
dec
andl
rorb
das
fdivp
fdiv
sub
test
insb
fsubrl
and
add
mov
dec
test
cwtl
adc
jmp
sarb
sti
xchg
push
lret
std
push
or
jne
data16
and
cmp
inc
xor
dec
hlt
pop
and
ss
les
xchg
rolb
sub
jo
xchg
mov
jae
ljmp
jb
lcall
mov
mov
loopne
add
imul
pop
dec
dec
rcrl
or
movsb
jecxz
sbb
in
pop
fwait
mov
mov
mov
shll
or
add
pop
mov
inc
cmpsl
fcoms
lea
cs
cwtl
sbb
mov
fdivs
push
xor
sub
es
jno
pop
repnz
mov
sbb
je
sbb
pop
xchg
xchg
lret
aam
mov
stos
jge
loop
cld
mov
mov
mov
push
mov
push
cmp
jae
fimuls
aam
loopne
dec
adc
xor
das
mov
lret
inc
add
in
jb
dec
pop
inc
inc
mov
pushw
jl
movsl
xchg
mov
sub
or
repnz
clc
lret
outsl
add
mov
add
or
fstps
lods
lahf
xor
in
call
lods
aad
mov
out
call
push
data16
sbb
enter
frstor
inc
dec
lea
dec
das
int3
pusha
push
push
xor
enter
jbe
jnp
sbb
into
xchg
lock
sbb
cs
push
int
adc
push
stos
mov
sbb
dec
std
in
mov
xchg
test
cwtl
cltd
or
movsb
sub
cmpsb
popa
pop
and
pushf
lret
sub
mov
xor
stos
jns
cli
add
imul
enter
daa
icebp
push
ret
and
scas
mov
mov
dec
jle
inc
addr16
sbb
cmpsl
inc
jle
das
popf
xchg
mov
aad
sbb
push
mov
inc
cltd
sar
rcr
mov
jmp
sub
inc
adc
sub
sbb
in
scas
mov
mov
sbb
xor
bound
sbb
mov
mov
ss
insl
mov
or
adc
lods
push
mov
mov
lcall
mov
sbb
jle
inc
inc
aam
cmp
into
lods
test
les
cltd
jae
xchg
dec
adc
fwait
or
orl
mov
out
jb
push
test
iret
mov
shll
cmp
jns
frstor
mov
mov
sbb
jne
das
loopne
push
xchg
dec
adcb
cmovns
ljmp
xchg
imul
add
mov
xchg
xor
pop
sub
pop
pop
ficoml
lcall
mov
stc
sub
sub
sub
push
ja
sub
pop
cmp
pop
mov
repz
out
pushf
mov
push
pop
loope
add
sub
sub
in
cmc
ret
mov
cmc
push
cltd
sbb
les
movsl
mov
xchg
andl
pop
xlat
mov
jae
ljmp
mov
push
fs
out
push
jp
push
xor
ds
movsl
jp
pop
mov
mov
inc
sub
dec
cmp
stos
movsb
jmp
movsb
mov
mov
jbe
imul
pop
iret
mov
mov
mov
and
pusha
sarb
stos
cmpsb
stos
push
or
push
out
ret
testb
push
mov
dec
sub
int
xchg
scas
and
jns
sbb
mov
or
enter
ljmp
pushl
jle
mov
add
out
das
mov
pop
cs
jmp
cmp
xchg
out
xor
movsl
or
mov
mov
lds
and
std
dec
mov
insb
inc
add
and
repz
adc
mov
pop
mov
repnz
addr16
or
pop
jmp
ds
push
inc
imul
pop
adc
outsl
lret
pop
stc
mov
loopne
add
ss
push
xchg
xor
repnz
leave
lahf
test
iret
shll
aas
push
pop
xchg
dec
jl
cli
mov
push
ljmp
shll
pop
lods
jge
addr16
pop
aad
aam
xchg
or
add
mov
lahf
jmp
jg
in
or
jg
push
lret
jmp
pop
call
int3
push
cmp
fistpll
js,pt
dec
addr16
push
cli
sahf
addr16
pop
pop
mov
bound
les
sbb
mov
pushf
sbbb
add
dec
sub
add
sahf
jle
inc
jl
add
adcl
dec
inc
sbb
push
jnp
mov
mov
and
or
fsubrl
sub
push
dec
and
sub
dec
out
adc
mov
in
mov
sub
sbb
sbb
jnp
loope
jbe
fcompl
cwtl
push
mov
mov
push
xor
add
pop
int
xor
inc
cmpsl
movsb
js
aam
mov
out
clc
cmp
daa
les
outsb
push
int
loope
data16
mov
das
xor
mov
rcr
imul
and
pusha
push
nop
pop
sub
and
rclb
sbb
ljmp
or
movsb
xchg
cs
fsubs
dec
insl
daa
push
mov
sbb
add
ficoms
mov
mov
ljmp
loope
test
jg
arpl
int3
faddp
xor
movzwl
xchg
fnstsw
gs
xorl
dec
and
lahf
inc
cld
cmp
cli
push
and
cli
add
imul
jno
pop
pop
mov
add
pusha
lea
pop
add
push
adc
or
mov
add
loope
andb
jmp
fidivs
lahf
out
lcall
and
and
orb
push
mov
ss
xchg
mov
dec
jle
test
pop
mov
mov
test
popf
fnstcw
stc
cwtl
push
sbb
mov
mov
pop
lock
dec
sub
iret
mov
ror
icebp
jecxz
push
lods
repnz
cltd
test
pushf
xor
jne
or
cmpsb
mov
test
jmp
or
and
mov
jns,pn
loopne
xor
push
jp
pushf
and
subl
add
ja
cmpsb
pop
inc
leave
and
pop
push
lods
stos
popf
ret
sbb
icebp
fs
imul
push
xchg
lods
xchg
dec
das
lock
pusha
xor
push
lcall
insb
fs
xchg
xchg
das
sbb
push
sub
scas
fldcw
mov
int3
or
pusha
adc
xor
xchg
jge
and
pop
jae
movsb
int
es
faddl
cmp
cmp
jecxz
cmp
sub
cltd
ret
mov
cmp
mov
rolb
test
xor
outsb
push
sub
test
mov
jle
cmp
daa
sahf
ret
mov
pop
xchg
ror
lret
test
ret
sbb
rep
jmp
mov
dec
push
ret
xchg
and
xchg
push
cmc
movsb
sub
pop
adc
push
mov
jl
in
sbb
notb
jecxz
leave
mov
aas
cltd
jne
pop
std
fwait
andb
push
xchg
mov
sub
inc
jg
fdivl
data16
les
pop
aad
scas
sysret
nop
shrb
fsts
jp
push
inc
out
fisubrs
lahf
les
xchg
mov
int3
inc
inc
imul
mov
int3
pop
or
inc
push
or
dec
repnz
les
push
mov
iret
lods
sub
add
pop
lea
xchg
insl
fistpl
int
mov
ja
icebp
fisubrl
cmpsb
jbe
ss
xor
sbb
loop
inc
push
cmpsl
aaa
cmp
les
bound
je
push
mov
lahf
cmpsl
adc
mov
ds
mov
ljmp
jecxz
push
xchg
and
test
fwait
rcr
jb
or
push
sti
sbb
xchg
inc
insl
push
int
mov
lea
cmp
je
adc
pop
ss
adc
cmp
fstps
sub
pop
rolb
out
xor
sti
cmp
mov
or
jecxz
loopne
arpl
jbe
inc
gs
divl
mov
jl
movsl
in
mov
scas
xchg
insb
xchg
xchg
in
jl,pn
clc
lahf
shrl
cmp
mov
sub
sbb
xor
pop
and
add
push
cltd
sub
pop
ss
test
imul
mov
push
mov
data16
dec
scas
push
fisttps
gs
xchg
jmp
mov
ficoml
xor
mov
and
mov
repz
test
inc
out
dec
and
sub
bound
cmpsl
pushl
jbe
add
xor
pusha
or
xchg
and
loopne
cmp
stos
pushf
xor
mov
ljmp
sbb
decb
and
sbb
xchg
dec
dec
inc
ja
sarl
sbb
sub
xlat
les
repz
ja
pushf
jns
aad
add
inc
xorl
popa
clc
jmp
daa
mov
shrb
add
dec
roll
dec
and
sbb
ret
or
ja
push
out
in
out
fiaddl
jg
and
xor
enter
lcall
lret
mov
or
jp
fmull
pushf
pop
sar
jne
and
in
push
xor
xchg
movsl
or
je
mov
xchg
icebp
sahf
push
xchg
mov
std
std
cmc
xor
dec
leave
outsl
es
test
sti
push
mulb
inc
into
adc
out
hlt
das
sub
push
mov
cwtl
and
push
lret
cmp
popa
das
xor
mov
js
dec
jno
xchg
mov
sbb
mov
push
xchg
pavgw
or
mov
and
jae
sub
inc
mov
pop
fs
aas
cmp
mov
xor
aaa
sbb
jle
icebp
jl
in
jg
fcomps
dec
out
and
aas
push
xor
arpl
cltd
ds
pop
lods
mov
sub
inc
call
or
test
stos
pop
mov
jne
adc
cmpb
leave
xor
xchg
inc
adc
lds
push
popa
ret
popa
pop
cmp
push
xchg
repnz
push
dec
inc
xor
orb
inc
ffreep
js
scas
ret
nop
inc
nop
dec
mov
push
mov
cmpl
mov
jge
mov
mov
lret
sub
inc
popa
aam
repnz
aas
adc
mov
push
add
mov
outsb
inc
rorl
cld
scas
outsb
fstpl
pop
repnz
loopne
dec
insb
jecxz
push
and
sub
sub
fbstp
fistpl
pop
imul
ljmp
cwtl
idiv
push
jl
jp
popa
mov
add
mov
sub
jns
dec
lret
and
mov
sub
pushf
dec
add
jo
out
test
pop
pushw
cmp
lahf
dec
out
adc
and
cmp
cmp
not
fistpl
mov
les
mov
imul
aaa
lds
xchg
adc
sbb
cli
push
cmpsl
lcall
push
mov
add
cmp
push
xchg
stos
das
aas
popa
out
popa
mov
mov
jbe
leave
jp
jl
pop
shl
push
xchg
int3
imul
cmc
out
mov
jne
mov
push
sbb
movsb
ds
ret
adc
clc
fs
int3
aad
mov
sahf
add
or
push
fldenv
jno
loope
mov
push
lea
mov
shlb
pop
addb
sub
pushf
js
popa
std
xor
cld
rcr
ss
mov
and
jmp
jnp
call
vpmulhuw
dec
fimuls
out
ss
pop
sub
and
inc
adc
cmpsl
mov
ret
ret
es
push
iret
adc
jg
inc
sbb
stos
repz
and
dec
call
mov
jno
pop
daa
lods
shrl
movsl
movb
mov
lods
adc
into
mov
gs
adc
jecxz
in
mov
aaa
mov
lock
adc
xor
xchg
cli
fistpll
xlat
inc
insl
mov
push
cld
and
sub
push
adc
mov
mov
sub
sub
fdivrl
das
mov
mov
sbb
mov
cmpsb
pushf
test
sub
dec
imul
push
mov
mov
and
loop
stc
scas
cwtl
jle
push
out
sbb
lods
jae
dec
cltd
or
adc
inc
loop
mov
push
test
mov
out
fs
test
shrl
dec
mov
gs
adc
mov
mov
adc
inc
or
adc
mov
add
inc
pop
pop
pop
dec
sbb
int3
mov
push
mov
cmpsb
stc
into
mov
lahf
cmp
push
xchg
lret
imul
cld
cmpsb
inc
xor
mov
pop
es
push
lds
je
xchg
call
inc
leave
mov
bound
ret
mov
cmp
pop
lock
insb
int
lret
pushf
xchg
inc
fidivs
into
and
or
out
insl
inc
mov
mov
shll
mov
enter
mov
inc
cmpsl
jp
scas
into
fildl
mov
cmpl
mov
fiadds
test
or
das
add
jle
addr16
jge
stos
adc
push
mov
mov
mov
sarl
inc
shll
test
sbb
aam
hlt
lock
adc
out
sbb
cmp
ret
xchg
enter
push
jns
jno
xor
stos
scas
mov
pop
xchg
pop
stos
or
and
call
mov
sbb
scas
adc
mov
xchg
or
into
xchg
mov
sbb
adc
sahf
addr16
fnstcw
lret
sahf
jle
nop
xchg
in
mov
mov
imul
add
mov
xor
std
imul
push
int3
cmp
jno
out
mov
stc
or
inc
inc
ljmp
xchg
jecxz
shrb
add
mov
push
popa
add
jbe
xor
insb
pop
add
hlt
shl
dec
dec
cltd
jge
jmp
adc
cli
cmpsb
sbb
insb
jg
jp
and
xlat
xor
inc
test
sti
xor
push
pop
cltd
test
sbbb
cmp
rcr
pop
inc
or
push
gs
cs
arpl
je
cmp
fstpl
pusha
ret
notb
or
mov
jmp
in
jae
and
sbb
subl
mov
into
inc
xchg
and
sbb
add
icebp
jne
std
add
dec
mov
aam
and
sub
push
xor
or
jle
jb
leave
inc
or
dec
and
outsb
jecxz
add
icebp
scas
pop
adc
xor
inc
arpl
out
inc
loopne
ret
add
mov
push
fdivs
repz
stc
aaa
xchg
cli
xor
dec
sbb
cmc
and
push
push
icebp
in
sub
xor
test
rcrl
hlt
push
dec
outsb
inc
lret
stos
test
sbb
test
into
jb
add
and
fstps
sbb
mov
add
xor
inc
iret
pop
dec
dec
in
gs
aam
mov
add
add
stos
mov
pushf
mov
or
push
adc
loopnew
push
mov
cld
aaa
sbb
test
roll
sbb
pop
das
cmc
xor
xchg
in
addr16
orb
inc
pusha
dec
fmuls
jl
lcall
shrl
or
adc
mov
cwtl
bound
out
cmpsb
bound
or
pop
outsb
dec
adc
sbb
and
shrb
lea
aaa
inc
xor
inc
lret
fisubl
sub
cltd
add
mov
dec
outsl
push
pop
dec
sbb
jnp
stos
cmc
test
sbb
mov
in
cs
jo
adc
mov
and
pop
aam
cmp
push
jle
ljmp
jl
ljmp
or
outsl
jno
scas
adc
out
mov
out
pop
push
lock
adc
je
jp
aad
or
in
stos
movl
out
xorl
dec
faddl
fcoml
sub
mov
daa
xor
sub
stos
xor
clc
jmp
lret
jae
cmp
rcrb
iret
or
arpl
push
adc
je
mov
movsb
add
jmp
jge
add
inc
out
fcoml
pop
mov
mov
andl
mov
push
jmp
or
out
sbb
or
add
aam
xchg
jns
inc
cmp
das
repnz
gs
jno
imul
push
or
movsl
sahf
and
xorl
loope
add
arpl
int3
xor
and
lods
es
mov
out
mov
jno
loope
dec
push
in
std
shl
jmp
jae
xchg
jns
jae
sub
loopne
scas
push
push
and
addr16
pop
pop
lret
mov
lret
pop
mov
mov
clc
lret
jge
add
pop
jmp
je
xchg
pop
or
pushf
mov
sbb
jp
add
scas
pop
and
inc
mov
clc
subl
cmp
pop
icebp
cmp
dec
mov
insl
test
fldt
mov
cmp
fstl
cmpl
fistpll
loop
push
popa
out
xchg
pop
inc
adc
or
int
xchg
fldenv
fwait
jnp
les
push
movsb
ljmp
ret
pop
pop
or
lahf
hlt
pop
jl
pop
pop
fcoms
out
cmp
cld
jns
sub
fdivp
push
xchg
mov
aad
and
repnz
cmp
out
inc
push
lret
xchg
bound
pop
add
sbb
lcall
inc
sub
popa
pop
aas
mov
fwait
icebp
pop
subl
adc
sbb
sti
pop
cmp
repz
jne
adc
adc
fcmovb
sub
pop
xchg
cmp
cmp
push
xor
enter
aad
xor
movsl
pop
ret
icebp
inc
cmc
sub
das
sub
es
andnps
repnz
ficoms
lods
jmp
add
fisubl
xchg
sub
pop
push
or
test
je
pusha
mov
push
jge
inc
fs
mov
cmpsl
clc
repz
mov
or
aas
flds
dec
outsb
faddp
xchg
xchg
test
cmp
pusha
sub
arpl
push
loopne
push
cld
dec
xor
and
mov
enter
icebp
and
lahf
stc
ds
or
xor
lock
mov
sbb
inc
xorl
dec
mov
mov
xchg
ja
or
dec
es
dec
lock
les
inc
repz
dec
jno
inc
pop
xchg
push
pop
inc
lret
ret
add
outsl
mov
sub
push
mov
or
scas
lods
inc
and
push
mov
push
xor
es
int3
mov
push
fnsave
adc
fs
jns
lea
dec
mov
test
stos
add
push
push
ficoms
int
mov
xchg
sub
into
cmp
imull
psrad
push
fdivs
mov
rcl
mov
outsl
sub
or
jecxz
jecxz
jmp
jb
sub
mov
mov
xchg
and
adc
mov
dec
xchg
mov
jmp
rorb
mov
je
inc
xlat
in
addr16
jl
xor
int3
test
cvtps2pd
cmp
or
pop
rolb
es
mov
mov
xor
add
shrl
cmp
cli
sub
fimull
in
push
shll
dec
outsb
test
adc
add
xor
and
data16
ds
adc
stos
jns
jo
cmp
fmuls
or
inc
das
or
imul
popf
in
cwtl
xchg
jmp
ja
aaa
sub
shlb
movsb
and
pop
cld
jmp
sti
daa
push
loope
hlt
jns
rolb
mov
inc
add
add
push
invd
xchg
into
sbb
and
add
stos
adc
xchg
or
xlat
mov
out
addr16
sub
jp
jns
cmp
sub
pusha
cmpsl
lds
sub
sbb
clc
bswap
cmc
rorb
pop
or
xchg
mov
or
jb
repnz
adc
leave
jecxz
xor
inc
xchg
pop
fldt
adc
mov
int3
lea
mov
pop
jg
mov
fcoml
xchg
scas
lock
adc
fadds
xchg
xchg
or
dec
out
fdivrs
test
iret
cmp
mov
xor
lcall
flds
imulb
push
inc
pop
add
mov
insb
adc
rcll
adc
cmp
adc
adcb
daa
aad
mov
jno
cmpsb
inc
dec
sbb
jecxz
jno
bnd
lods
pop
sti
mov
mov
js
mov
jns
negl
dec
inc
jge
cmp
xor
cmp
or
out
inc
dec
pop
mov
or
cmc
pop
ficoml
mov
jg
aam
jne
fidivl
push
shlb
hlt
insl
adc
jecxz
pop
lret
xchg
and
cmp
inc
pushl
cmp
and
cmp
pop
rorb
jae
xchg
out
or
outsb
cmp
mov
add
cmp
pushf
in
jle
rol
test
xchg
mov
andb
dec
mov
je
cmp
push
xlat
xchg
mov
mov
movsb
xchg
daa
jecxz
aad
out
test
and
mov
clc
push
inc
jge
push
xor
push
divl
aaa
jecxz
es
dec
aas
stc
jmp
rclb
jae
jle
xlat
xor
clc
jg
add
mov
mov
jne
mov
shlb
jg
frstor
lcall
scas
jae
inc
push
xchg
mov
mov
out
pop
test
dec
in
adc
sub
popa
testl
pop
bound
mov
jg
out
sbb
mov
sub
xchg
cmp
fmull
dec
jmp
sbb
mov
sti
je
fimuls
gs
cmpsb
pusha
leave
push
fcomps
sbb
nop
xchg
xor
adc
lods
sub
adc
push
test
jmp
aas
testl
xchg
popl
mov
imul
or
jb
adc
hlt
pop
iret
adc
cmc
scas
pop
ss
cwtl
cmp
sbb
jmp
cmp
adc
ljmp
xor
push
xchg
lret
sahf
add
leave
je
loop
jbe
aam
dec
cmp
jnp
inc
fstpl
stc
out
sbb
inc
pop
insl
movsl
mov
in
sub
inc
or
mov
sti
mov
loop
mov
rolb
call
xor
or
xor
imul
aas
into
xlat
jns
dec
push
in
adc
loop
pop
cmp
outsl
outsb
mov
push
pop
lods
iret
lea
jnp
roll
cwtl
xchg
jnp
fcoml
rorl
ljmp
ds
call
jp
out
adc
shrl
movsb
mov
cmp
es
mov
pop
jge
jno
nop
stc
in
lds
jnp
mov
stc
jmp
jb
jo
icebp
fs
int
inc
fiaddl
xchg
outsl
aad
add
stos
mov
fbld
clc
insl
cmpsb
aad
test
ret
lahf
sub
inc
fldenv
inc
mov
and
mov
iret
cld
sub
leave
pop
push
arpl
inc
pop
sub
push
insb
dec
adc
sarl
rolb
dec
lahf
cli
xchg
mov
sub
mov
lret
aaa
cltd
dec
add
pop
cmpsb
inc
in
cwtl
ds
mov
int3
sub
inc
test
push
jle
mov
js
aam
das
rolb
bnd
push
test
mov
pop
inc
in
shlb
mov
sub
push
push
fwait
add
les
mov
push
rcrb
xchg
repnz
mov
mov
mov
inc
push
pop
ret
or
xchg
outsb
loope
cli
cmpsl
sub
push
xor
xlat
push
and
add
lcall
repnz
jmp
xlat
clc
push
mov
out
in
cltd
stc
scas
enter
in
dec
imul
jmp
fs
data16
out
xorl
adc
outsl
inc
xor
jo
cwtl
dec
mov
inc
es
cmp
ja
add
push
jb
sub
or
xchg
pop
xor
mov
jl
mov
popa
sub
das
insl
test
inc
fnstenv
icebp
in
push
jl
js
ficomps
lea
mov
cmp
decb
jb
clc
cmp
daa
scas
jo
aad
in
fcmovnu
decb
mov
les
data16
lea
xchg
push
adc
sbb
sub
mov
adc
adc
mov
xchg
xor
or
xor
in
cmp
out
sub
repz
mov
mov
mov
bound
int
xchg
movsl
enter
dec
push
mov
inc
sub
and
stos
aam
cmp
push
sub
push
push
cld
loope
cmp
ds
inc
data16
rcrl
and
insb
cmp
out
daa
adc
mov
mov
and
xchg
jle
mov
femms
stc
xchg
ds
add
pop
dec
mov
lock
xor
cltd
mov
sti
jge
jg
mov
mov
sbb
xor
faddl
movsl
inc
xchg
pop
pusha
nop
pop
outsl
adc
inc
movsl
iret
push
mov
popa
call
jecxz
test
hlt
push
sti
loop
dec
push
cmp
and
not
cmp
xchg
add
clc
test
fs
insb
and
out
and
test
into
repz
repz
mov
jge
frstor
sbb
and
pop
push
outsb
or
std
mov
loopne
mov
mov
nop
cwtl
push
les
pop
mov
repz
mov
bound
xchg
xorl
mov
daa
idiv
mov
jne
mov
sub
loope
adc
pushf
gs
iret
dec
xchg
ljmp
or
mov
push
test
shrl
loop
popf
mov
js
popf
push
push
repz
adc
mov
xchg
fadds
lahf
aas
insb
dec
cmp
dec
lret
adc
loop
cwtl
jo
xor
jge
loope
clc
lahf
xchg
push
xchg
mov
mov
push
adc
mov
cmpl
push
push
dec
fidivrs
test
add
xor
rorb
pop
adc
pop
pusha
xchg
xchg
loope
out
add
or
push
outsl
push
push
lods
stos
xlat
iret
jno
enter
shl
inc
stc
inc
scas
inc
leave
inc
adc
loop
fiaddl
mov
test
mov
das
enter
adc
aad
adc
push
bound
and
test
sbb
pop
mov
adc
subb
dec
je
cmc
mov
cld
jle
out
lock
test
sbb
xchg
mov
mov
mov
add
jnp
mov
lret
inc
xchg
add
dec
fdivrl
into
cld
sub
push
lea
out
jbe
push
xor
ds
jnp
dec
ljmp
push
fcomps
pop
and
stos
sbb
mov
ss
test
inc
les
mov
shll
shrl
mov
sbb
mov
add
inc
inc
mov
aam
insl
xchg
inc
jbe
jmp
fsubrl
ret
pop
and
mov
cmp
out
mov
jge
pop
add
cs
xor
sti
out
sub
mov
xchg
data16
xchg
iret
and
out
je
les
test
fldcw
shl
dec
mov
sbb
aaa
xchg
jl
popf
dec
sahf
lods
lret
sub
sub
sub
xchg
add
xchg
pop
mov
dec
test
push
push
xor
sbb
pushf
xchg
lret
dec
test
sbb
mov
jns
arpl
mov
push
lahf
stos
enter
or
sbb
jne
jbe
mov
insb
sarl
adc
cmc
and
lds
xor
sarl
jnp
jge
mov
xlat
fsub
push
out
pop
ja
mov
orb
es
loop
xchg
adcb
mov
cli
push
fdivl
mov
cmpsb
shlb
or
xchg
or
and
and
call
je
sbb
pushf
push
push
cltd
push
jns
incl
leave
outsb
xchg
pusha
adc
enter
and
cwtl
mov
iret
repnz
fnsave
rcrl
and
sub
jmp
int3
pop
push
or
pushf
or
push
xchg
adcl
inc
pop
in
test
aad
adc
adc
cmpsb
cld
sub
outsl
inc
decl
xorl
imul
dec
add
fimuls
out
push
push
push
hlt
pusha
dec
and
jbe
dec
mov
push
sahf
fimull
gs
adc
shlb
call
in
sbb
cmc
xchg
jge
push
sub
push
test
dec
push
lcall
loope
jmp
mov
sbb
pop
lods
mov
sub
ja
cld
stc
lock
jno
fcomp
dec
ret
jecxz
cmp
cmp
ljmp
lret
add
or
in
leave
fildll
xor
mov
dec
mov
dec
pushf
mov
test
mov
mov
pop
or
fimull
int3
push
stos
mov
push
rcrb
or
rclb
push
lret
add
shlb
lds
leave
scas
decb
mov
imul
cmc
inc
int3
sub
pop
xor
loopne
cmc
and
or
rorb
inc
xorl
arpl
cmp
adc
ror
and
in
cmp
mov
jnp
and
lods
sub
mov
repnz
cltd
mov
inc
clc
cmp
dec
sub
dec
lret
stc
mov
imul
sti
ja
shl
ds
pop
andb
sti
mov
mov
shl
and
sti
cmc
mov
shufps
ret
test
jbe
dec
aad
mov
cs
sarl
sub
loope
icebp
fmuls
jbe
adc
push
mov
jne
xchg
jbe
jmp
iret
inc
mov
int3
ljmp
jmp
icebp
xchg
or
lods
hlt
xchg
test
push
fcomip
dec
mov
leave
fstps
pop
enter
test
lahf
dec
test
mulb
pop
lret
outsl
stos
stc
fadds
dec
mov
lods
popa
pusha
add
insb
stos
insl
mov
test
addr16
imul
jo
mov
cld
pusha
fmull
gs
ret
jns
pop
gs
out
mov
cmc
add
mov
in
adc
inc
lds
xchg
pop
ljmp
dec
pushf
lret
std
add
inc
adc
mov
dec
xchg
insl
dec
inc
movb
iret
imul
lret
xchg
addl
les
sahf
mov
jnp
adc
and
xor
inc
mov
pop
outsl
mov
pusha
sub
add
pop
mov
stc
cli
je
and
js
dec
mov
cmpsl
mov
xor
fmull
test
or
cmpsl
pop
in
push
sub
sbb
cmp
in
inc
cld
add
adc
addr16
xchg
adc
lds
pusha
mov
sbb
or
and
pop
out
or
push
lret
aam
in
push
negb
xor
inc
jne
int
sarb
mov
or
xchg
int3
lods
cmp
pop
xor
je
fcomip
sbb
push
jae
or
push
cld
scas
inc
and
mov
mov
icebp
or
pop
mov
sbb
push
fwait
or
test
cltd
sbb
inc
fs
inc
mov
das
xchg
sbb
inc
lds
sahf
pop
into
out
lcall
popa
jno
or
xchg
jmp
inc
jno
mov
imul
aam
pop
and
xchg
ds
bound
sbb
jbe
pop
leave
push
xorb
or
je
ss
add
and
xchg
add
test
enter
das
ffreep
popa
adc
mov
aad
lock
mov
push
jp
cmpsb
ret
imull
mov
jb
out
cltd
cmp
jbe
adc
outsl
ret
mov
shrl
cltd
lds
jp
iret
imul
xor
xchg
mov
mov
and
pop
pusha
ds
sbb
stos
sbb
shll
in
imul
adc
ljmp
push
lcall
mov
sbb
cmpsl
movsl
into
mov
or
ds
push
sahf
leave
mov
cld
or
repz
mov
lret
pop
sub
push
sub
out
mov
xor
inc
inc
mov
inc
fistl
adc
aam
adc
lods
inc
or
jmp
mov
mov
fstpl
dec
mov
je
test
push
jmp
sub
or
sti
jnp
enter
and
sti
lret
divl
insl
int
ss
aam
mov
inc
inc
sbb
incb
addl
shrb
mov
sbb
pop
jle
push
in
rcl
xorl
lock
sub
test
or
outsb
fstpl
add
imul
cmp
push
pop
xchg
xchg
adc
cmp
inc
dec
push
xchg
xchg
and
mov
lahf
cmp
lahf
cmp
aad
movsb
das
inc
jg
rorb
ds
dec
movsl
dec
mov
mov
into
mov
addb
push
imul
imul
aam
in
rcpps
and
repnz
xor
mov
aam
arpl
mov
leave
popa
dec
sub
jmp
ja
fnstsw
xor
push
ja
rcrl
hlt
jno
mov
scas
mov
jne
ds
andb
cmp
inc
popf
jge
xchg
mull
pushf
sbb
sub
outsl
arpl
movsl
insb
pop
xchg
scas
add
jl
and
aas
fs
ja
xchg
out
iret
cmc
xchg
sbbb
sub
jmp
xchg
inc
jnp
and
popf
fwait
lea
rclb
sbb
stos
inc
mov
jno
aad
sub
push
in
mov
cwtl
and
xor
inc
pop
dec
mov
mov
iret
insl
mulb
jae
cmp
popa
xchg
decl
or
xor
lret
dec
pop
ja
push
inc
cmpsl
cmp
pusha
in
adc
push
jge
cmp
xor
rolb
cmp
cltd
push
out
pop
add
neg
sbb
pop
pop
lcall
lret
popf
pushf
dec
or
xchg
sbb
dec
cmc
pop
mov
push
inc
cmp
les
js
rolb
sbb
addr16
das
les
mov
jge
loope
shlb
add
cmp
repnz
mov
mov
es
out
xchg
mov
lock
jmp
das
xchg
xor
fstpt
or
mov
push
imul
push
mul
cmc
sub
push
jnp
fcoml
addr16
into
iret
xchg
orl
lds
rol
sti
xor
aaa
in
sbbb
popa
push
dec
shll
and
xchg
mov
aaa
mov
aam
test
pop
shr
pop
xor
jo
dec
or
or
jge
jecxz
xchg
jae
jmp
andb
and
lcall
je
test
movnti
mov
in
jbe
push
loop
lcall
scas
fnsave
call
cmp
xlat
mov
loope
adcl
add
fwait
dec
jmp
sub
cmc
ja
lahf
rcrl
pop
mov
dec
jmp
mov
rol
add
cmp
jmp
and
add
push
xchg
jbe
and
mov
fimuls
jno
lods
sarb
mov
fimull
sub
cmpsb
dec
fucomp
leave
or
push
jno
pop
mov
loopne
xor
in
cmpb
xor
lea
adc
popf
std
jg
inc
xchg
push
inc
adc
add
xor
jmp
outsl
test
shll
xchg
fcomps
cli
cs
rcrl
sbb
andb
and
mov
sbb
pop
pop
mov
mov
ljmp
sub
ljmp
sbb
int3
int
aad
divb
icebp
mov
daa
int3
fdivrs
mov
and
mov
adc
lret
and
lods
mov
adc
mov
lods
push
subb
mov
push
lods
mov
in
push
cwtl
xor
sbbb
lea
movl
jnp
cmp
pop
in
push
mov
dec
push
jbe
pop
loope
mov
mov
imul
xor
pop
insl
cmp
jnp
ds
jbe
lret
dec
mov
xor
jp
mov
push
in
or
loope
push
loop
lret
xchg
inc
loope
bnd
mov
push
push
mov
push
sub
mov
or
pop
add
push
out
mov
and
xchg
ficomps
adc
push
xchg
adc
and
stos
jb
lods
pop
xchg
jmp
cmp
clc
incl
std
xor
pop
jp
sub
jnp
clc
fldl
bound
lods
xchg
shll
jle
hlt
jge
lcall
mov
dec
repz
push
das
xor
fimuls
test
jge
mov
shlb
pop
sub
inc
lock
aad
push
cmp
ret
jne
out
ret
int
stos
into
xorl
sub
test
inc
mov
xchg
mov
cmpsb
jae
jge
xchg
or
push
mov
out
dec
mov
dec
es
push
mov
xor
outsb
xchg
pop
pop
mov
je
push
hlt
xor
push
into
call
cvtdq2ps
ljmp
mov
repz
mov
jae
adc
push
add
fwait
dec
mov
ljmp
cmpsl
outsl
filds
movb
scas
out
sarb
xor
aas
mov
pop
cmp
lret
test
add
std
cltd
sbbl
insb
and
and
call
jp
cwtl
inc
pop
dec
dec
leave
loope
mov
subb
lcall
push
mov
add
mov
and
and
cmp
out
daa
sbb
xchg
les
into
test
sbbl
stos
adc
roll
subb
outsb
in
xchg
mov
and
jo
dec
pop
jne
cld
push
movsl
mov
xchg
scas
push
and
aad
jmp
ss
lret
pop
mov
mov
jbe
xchg
orl
or
lock
pop
cmp
xchg
push
out
push
dec
push
pop
std
pop
movsb
or
mov
pusha
xchg
les
movsl
loop
sbb
mov
cmpsl
or
sbb
ss
into
in
stos
lea
adc
or
gs
cmp
cld
lcall
leave
adc
xchg
ss
bound
adc
xor
cmp
fldenv
int3
add
adc
fldenv
push
imul
sbb
jae
pop
inc
inc
out
bound
push
inc
cmp
cmp
add
xchg
inc
xchg
subb
int3
add
lods
sub
push
or
cmp
rcrb
pop
fldt
mov
mov
add
lret
imulb
rolb
lcall
add
or
pop
outsl
mov
cmp
push
jae
clc
rcrb
lock
push
jp
jmp
add
push
js
add
out
es
in
adc
lods
fst
sbb
pusha
mov
xchg
movsb
pop
stc
popa
mov
adc
mov
cmc
in
adc
imul
sti
pop
xor
adc
ja
fwait
addl
ret
or
fisubl
fiadds
jecxz
sub
inc
jmp
popa
test
and
mov
and
rol
pop
mov
mov
cmp
fs
aad
cmp
add
adc
pop
jle
xor
push
sub
xchg
or
mov
int
mov
lret
mov
lret
pushf
fistpl
or
mov
xchg
iret
sub
mov
adc
outsb
adc
xchg
add
aaa
loop
mov
inc
popf
adc
lahf
cmpsb
stc
cmp
pop
cs
call
test
stos
push
rep
sarl
mov
pop
cmp
mov
bound
out
jns
mov
cs
mov
add
mov
xchg
xor
scas
sub
mov
dec
pop
mov
into
test
ret
pop
add
pop
sub
mov
xor
mov
je
sbb
mov
adc
sub
shlb
stos
iret
add
sbb
sbb
pusha
cltd
inc
jg
cmp
and
and
fnstsw
mov
xchg
jmp
loopne
fmull
popa
mov
lahf
js
add
xchg
push
add
push
xchg
pop
inc
es
fcompl
rorl
loopne
fisttpl
pop
sub
divl
mov
leave
mov
pusha
pop
iret
cmc
ljmp
xor
dec
dec
lock
enter
lea
cmc
xor
mov
insb
roll
push
jmp
xchg
subl
dec
lock
xchg
je
or
insl
into
mov
xor
stos
out
lods
pop
cltd
aas
adc
sarb
lret
shrl
push
repz
xchg
test
leave
push
push
outsb
mov
cld
lret
lea
jmp
shl
mov
push
dec
jbe
lahf
and
loop
pop
movsb
xlat
jno
leave
pop
dec
mov
negb
rclb
stos
jno
lds
jmp
add
fimuls
xor
add
sbb
xchg
jp
xchg
pop
ss
sarb
pop
add
popa
pop
bound
push
ss
push
clc
rolb
in
mov
or
movsl
hlt
ja
int3
fwait
jp
xlat
push
stos
cltd
push
daa
addb
or
inc
je
jecxz,pt
sahf
push
mov
test
fists
stc
stos
notl
loope
subl
inc
jbe
lods
dec
mov
jecxz
push
xchg
addr16
mov
xor
ss
inc
pop
outsb
push
ror
push
mov
inc
adc
data16
sti
mov
shlb
mov
cmpsb
adc
filds
sbb
lahf
add
jmp
icebp
in
xlat
imul
mov
cs
mov
mov
mov
cmp
dec
pop
cs
fisttpl
xor
in
push
cld
fildll
sub
mov
sub
jnp
repz
mov
mov
sar
mov
and
xchg
mov
mov
notb
push
dec
and
mov
sbbl
jae
pop
cltd
faddp
fcomps
in
dec
into
es
push
xor
add
call
jbe
aas
mov
or
xchg
push
xor
movsb
rol
int3
and
repz
icebp
dec
aad
aad
jle
mov
daa
enter
and
in
fiaddl
or
cmp
and
sbb
cmp
es
aaa
jle
pushf
repz
sbb
inc
pop
in
shlb
pop
jl
hlt
xor
push
xchg
mov
mov
inc
mov
test
or
sbb
add
cwtl
cmp
jmp
fdivrl
lods
jns
xchg
aam
outsl
dec
jl,pt
cs
loop
repz
xor
aad
jg
ret
xchg
pop
dec
lods
mov
test
ss
mov
scas
stos
into
xor
mov
lock
test
cmp
or
sbb
out
sub
mov
add
ret
insb
je
mov
lret
add
inc
jo
add
fdiv
inc
add
cmp
lods
rolb
ficompl
cmp
daa
and
lods
sub
xchg
clc
fstl
lahf
push
into
sub
outsl
push
repz
xchg
inc
xchg
xchg
repnz
pop
lods
addr16
jmp
jmp
je
mov
aam
test
sbb
cmp
mov
and
loop
fldcw
adc
push
das
icebp
and
adc
subb
call
ret
lds
dec
ljmp
in
push
pop
push
mov
std
repz
jns
dec
jns
stos
pop
xor
jno
sti
jb
ds
enter
in
dec
xchg
inc
adc
mov
es
paddq
addl
dec
das
lcall
cmpsb
mov
insl
int3
ljmp
cmpsb
orl
movsl
ret
push
lcall
sbb
xor
dec
pop
pop
xchg
sub
xchg
fwait
add
icebp
testb
cmpsb
xor
outsl
das
pop
popf
jbe
jo
push
hlt
jecxz
dec
mov
gs
mov
mov
xchg
cmp
ficoml
sti
xchg
mov
pop
cltd
sub
out
icebp
cli
adc
lods
push
lods
cmpsb
pop
push
rcrl
and
popf
outsl
imul
jle
cmpsb
adc
fucomi
rorl
mov
sahf
jno
test
imul
aaa
nop
jne,pt
repnz
fsubs
mov
lcall
imul
in
xchg
rorl
pause
pop
add
lret
mov
divb
loope
mov
lods
lea
mov
mov
cmpsl
in
mov
or
shl
loopne
mov
push
fildll
sbb
inc
push
cmp
pop
mov
ret
mov
mov
aad
sbb
test
push
sub
or
cmpsb
mov
pop
notl
pop
add
js
pop
mov
mov
jmp
lock
cmpsb
xorl
jo
jbe
enter
fwait
out
add
punpckhbw
or
fidivrl
add
fcompl
ja
dec
iret
fidivs
loop
subb
xor
push
mov
xor
arpl
in
or
leave
sub
and
lahf
lea
aas
stos
dec
in
dec
rorb
in
mov
enter
push
mov
adc
push
es
aas
mov
cmpsl
stos
sub
int
lahf
leave
pop
ss
ja
cli
rcrb
push
lret
cmpsl
xor
push
pop
std
xadd
xchg
xchg
mov
icebp
xchg
dec
lret
lea
inc
xchg
rorb
push
lock
push
xchg
xor
in
enter
push
dec
aaa
nop
sbb
repz
mov
sub
dec
aam
and
xchg
xchg
xor
fisttpl
dec
adc
adc
mov
ds
stos
divb
hlt
mov
add
hlt
movb
arpl
outsb
mov
adc
mov
js
jae
push
dec
cmpsb
test
dec
imul
sbb
mov
pop
les
dec
loopne
cmpsl
lods
add
movsl
and
jno
jge
adc
jle
add
sti
out
sbb
cmpsb
sti
mov
in
shlb
mov
test
or
js
xchg
out
icebp
add
dec
jecxz
loopne
adc
mov
mov
pop
cmpsb
adc
fldcw
aad
jg
xor
or
test
lds
mov
sub
and
dec
daa
dec
cli
subb
aam
dec
xchg
stos
pop
adc
sbb
pop
shrb
cmp
sbb
sub
aaa
pushf
and
mov
adc
cmp
dec
jne
cmpsb
jmp
push
adc
rcrb
nop
mov
cmp
xchg
jl
pop
push
dec
mov
mov
and
adc
aam
imul
ret
jle
in
xor
cltd
repnz
cltd
xchg
pop
outsl
jbe
jp
adc
call
andl
pop
xchg
shll
insb
mov
dec
aas
jnp
lahf
popf
popl
mov
jns
push
cld
ret
dec
push
jecxz
leave
pop
std
push
jg
loope
mov
add
pusha
cltd
aaa
xor
push
jne
xchg
rcrl
dec
aam
mov
in
ljmp
out
lods
lcall
inc
repnz
jecxz
jns
sbb
es
pop
sub
push
pop
jp
imul
jmp
fwait
sub
jle
xchg
sar
xchg
push
inc
subl
push
xchg
mov
cmp
mov
mov
fistps
jle
ret
out
movsb
arpl
mov
sbb
jl
popf
inc
js
push
sub
out
xor
mov
push
xor
movsb
aas
shl
test
pop
in
outsb
cs
fstpt
mov
leave
stos
outsb
lcall
mov
xchg
pop
mul
and
lock
ffreep
push
xchg
fistps
dec
dec
sbb
cs
jmp
ret
xchg
jne
gs
or
enter
fldcw
loopne
jp
jne
mov
sbb
or
ror
imul
fimull
dec
gs
rcll
inc
adc
lret
and
jo
add
dec
dec
inc
loopne
push
jae
lahf
or
sahf
clc
lods
rep
stos
cmpsb
es
cmpsb
jg
movsl
pop
fildll
pop
rcrb
pop
ljmp
daa
or
lahf
fidivrl
and
inc
pop
call
stc
fcoms
sub
lea
jmp
sbb
lock
mov
mov
loopne
or
hlt
mov
loopne
jne
test
subl
fsubrl
push
lret
jmp
out
xor
hlt
dec
ret
aam
xor
push
add
pushf
les
add
adc
test
push
cmp
sub
insl
xchg
test
pop
or
jl
mov
push
mov
shll
call
packuswb
and
xchg
jl
pop
out
rorb
nop
pop
xor
rclb
and
pop
cmp
je
stos
not
pop
xchg
test
dec
xor
arpl
stos
cmp
xor
clc
outsl
mov
fnstcw
mov
jecxz
cwtl
mov
imul
mov
fabs
push
sbb
cli
sbb
push
aam
pop
out
jecxz
jecxz
std
fidivl
pop
sarl
mov
pop
inc
movsb
push
dec
and
ja
repz
and
out
cmpb
lds
xchg
push
or
or
mov
sbb
in
roll
adc
int3
lret
adc
jne
pop
mov
pop
data16
xor
adc
push
and
push
pop
mov
test
mov
cmp
lock
nop
dec
dec
ja
sbb
xor
cmp
or
cmc
mov
insb
es
leave
adc
xchg
mov
xchg
ficomps
maxps
adc
imulb
push
pop
addl
cmp
cmp
fs
ja
sbb
push
pusha
daa
mov
mov
ljmp
push
stc
out
in
repnz
mov
pop
sub
sub
and
add
xorl
int3
popf
cmp
lcall
add
ficoml
scas
lcall
or
repz
inc
aam
mov
or
fcomip
ret
add
fmulp
movsb
in
mov
es
shl
fcoms
bound
xor
jle
popf
mov
lcall
push
mov
sbb
add
clc
add
cwtl
andl
stos
mov
ret
shr
cwtl
cmp
xor
cli
dec
nop
inc
bound
jo
xor
xor
pop
adc
in
js
mov
fdivl
pop
mov
fisubl
pushf
mov
jl
iret
pop
pop
xor
lret
lds
or
enter
gs
add
xor
mov
push
rcrl
pop
je
cld
push
shr
pop
sbb
xchg
fst
mov
or
jge
or
stc
andb
mov
aas
ja
cmp
push
es
cmpsb
mov
pop
lret
sbb
test
add
pop
adc
cmp
aas
aam
inc
adcl
sahf
mov
mov
cli
aaa
jp
push
xchg
inc
aas
dec
pusha
sarb
adc
xor
in
and
ss
push
rcrl
sbb
sahf
aaa
jae
or
push
cltd
mov
sbb
mov
repnz
rolb
shll
shlb
aaa
sarl
shl
stos
fs
adc
push
mov
xchg
xchg
push
jns
xchg
xchg
jb
ret
aam
cmp
sti
lock
mov
push
xchg
js
ja
push
lods
mov
movsb
test
mov
jbe
add
cmc
arpl
push
pop
mov
lret
push
in
jg
fstpt
inc
add
dec
dec
mov
sub
icebp
jne
mov
repz
movsl
rcl
fmull
xchg
sbb
xchg
push
ja
jg
sub
inc
add
push
inc
and
mov
xor
pop
outsb
and
mov
call
push
fwait
shlb
inc
sbb
arpl
pop
mov
fnstcw
mov
push
cmp
or
ficompl
addr16
jae
sbb
rcrb
jecxz
je
jnp
data16
xchg
gs
aad
pop
push
popf
fcoml
mov
xlat
jmp
test
popa
pop
mov
mov
jecxz
cmp
dec
call
jp
inc
mov
lea
sti
shll
push
cmp
mov
mov
jl
stos
dec
mov
push
cmpsb
pushf
adc
aaa
jb
pop
cwtl
daa
aad
push
or
xchg
in
mov
leave
int3
sub
leave
xchg
inc
push
call
loope
cmpl
pop
cmpsb
push
ljmp
mull
jmp
mov
jmp
popf
or
js
sub
in
jmp
lea
mov
mov
shl
faddl
out
mov
xchg
xchg
inc
pop
mov
add
xor
lret
arpl
and
fisubs
push
fldenv
push
push
xchg
sti
movsl
xchg
sub
movsb
push
std
in
dec
xchg
ffree
gs
cmpsl
aas
mov
mov
push
mov
stos
xchg
cs
hlt
xlat
mov
iret
mov
pushf
outsb
or
or
push
xchg
inc
into
cmc
xchg
mov
jmp
xchg
stos
mov
mov
dec
pop
cmp
mov
gs
loope
stos
popf
xor
fs
pop
gs
lock
sbb
pop
leave
test
lods
add
std
cltd
cmp
mov
push
pop
fucom
out
pop
rcrl
adc
pop
xlat
xchg
idivb
test
jmp
sarl
jne
jae
lcall
or
mov
xchg
jp
adc
sbbb
cs
lods
mov
adc
hlt
or
lea
xor
pusha
push
inc
mov
jne
adc
or
jg
mov
imul
push
flds
mov
add
cmpsl
push
sbb
pop
imul
mov
push
push
sub
sbb
xchg
mov
enter
mov
add
dec
sub
rorb
jge
mov
shlb
or
cmpsl
and
sbb
sub
cbtw
xchg
sbb
inc
into
and
xor
inc
into
push
fsts
inc
mov
call
out
mov
in
mov
lcall
and
repnz
jmp
repz
pop
xor
out
push
and
ror
and
outsb
insb
xchg
leave
cld
iret
in
sti
aaa
inc
ss
dec
mov
dec
repnz
or
adc
sarl
cmp
fisttpl
clc
adc
sub
or
dec
sub
int
sarl
cmpsb
xor
int
pop
out
stc
faddp
mov
stos
daa
and
pop
sti
xor
lea
adc
xor
cli
inc
testl
adc
xchg
mov
dec
xchg
cmc
mov
jl
mov
or
sub
lds
adc
loopne
fs
cmpsl
fsubrs
or
pop
mov
or
cmp
in
test
out
xchg
test
xchg
fcmovnu
lahf
and
mov
mov
repnz
das
push
ficoms
and
in
stos
decl
pop
cli
in
in
jg
jge
push
fdivrl
sub
sub
inc
movsb
addr16
repz
enter
in
xchg
xor
movsb
xchg
xor
mov
lret
shlb
aam
jne
loopne
pcmpgtw
ljmp
aam
mov
fstpt
xchg
movsb
sbb
adc
ret
pop
les
outsb
out
rcll
insl
add
and
scas
push
dec
xchg
xor
xchg
push
push
adc
mov
jae
out
repz
lea
mov
jge
mov
les
lret
fidivrs
insb
fsqrt
arpl
outsl
fimull
xor
dec
inc
das
inc
and
lret
repz
and
je,pn
xchg
mov
pop
or
or
popf
jae
fmuls
jne
or
adc
in
icebp
je
adc
dec
divb
in
test
push
movsl
lcall
jo
or
dec
clc
sbb
push
outsb
xchg
lds
insl
xor
mov
das
fs
ja
cmp
lods
xchg
scas
sbb
cwtl
cmp
sbb
mov
pop
inc
je
scas
dec
xchg
inc
pop
mov
testb
mov
js
sbb
lret
cmp
in
sbb
rcr
popa
jae
add
mov
out
mov
rol
bnd
int
imul
sub
push
sub
cltd
mov
cltd
sub
mov
jne
xor
pop
jne
jnp
jle
mov
sub
sbb
incl
push
rorb
test
outsl
or
popa
ja
jnp
pop
mov
mov
mov
ret
imul
into
outsb
jmp
push
out
and
cmp
dec
test
xchg
dec
js
sarl
cmp
pop
cwtl
rcrb
sub
xor
int
xor
mov
std
out
cmp
jb
dec
fnstcw
dec
fisttpll
lock
out
divb
adcl
dec
in
mov
lcall
push
or
call
mov
ret
xor
idivb
notl
fldcw
push
loope
xor
xlat
shll
xor
decl
test
jns
in
daa
mov
push
dec
sahf
pop
xchg
add
mov
adc
rcrl
jmp
adc
das
push
movsl
xor
popa
in
ror
int
push
pop
test
lds
ljmp
lret
data16
cmp
sub
and
sub
sarl
mov
add
das
dec
add
and
aam
lret
call
jecxz
pop
xchg
push
cmp
in
inc
jnp
xchg
sub
pushf
jle
rcrl
xor
sub
test
add
mov
xchg
inc
cmpsb
andl
dec
pop
out
or
lcall
mov
lods
aad
mov
es
mov
dec
aam
inc
insl
je
daa
pusha
dec
das
les
push
aad
test
fwait
jecxz
and
pop
decb
iret
icebp
test
mov
push
imul
cmp
ds
lock
popf
mov
movsb
test
orl
cli
test
ret
inc
mov
mov
or
out
inc
xchg
out
adc
xchg
or
jnp
pop
call
lret
mov
cs
repz
ds
jl
mov
nop
jo
incb
pop
jmp
ds
test
ss
inc
lock
mov
int
andb
and
sub
in
jo
out
clc
andb
lcall
mov
aam
sti
fsubrs
dec
sbb
daa
mov
flds
imul
adc
cmpsb
xor
jbe
jns
bound
lret
and
mov
adc
inc
loope
insb
in
enter
lcall
outsl
jne
pop
mov
inc
cmpl
jle
jge
loopne
adcb
fisttps
out
mov
sti
ja
test
iret
arpl
pop
cmp
ss
xchg
in
cld
int
and
ds
jbe
xor
repz
lret
adc
popf
mov
xor
cs
roll
call
jns
scas
mov
jl
or
insl
loope
insb
fisttps
jmp
cltd
mov
push
addr16
icebp
lcall
in
xor
mov
adc
jecxz
and
test
push
call
daa
inc
pusha
xchg
xor
fisttpll
shlb
xchg
push
movsb
fmulp
decb
inc
xor
add
repz
adc
mov
pop
pop
adc
mov
popf
xor
mov
cmpl
and
jecxz
iret
inc
nop
xchg
push
adc
sub
mov
add
in
movsb
push
out
enter
clc
dec
inc
add
push
and
stos
sbb
push
aaa
ja
pop
clc
and
pop
outsl
les
popf
fadds
sahf
sar
orl
inc
xor
and
cmp
adc
add
mov
xor
push
inc
int3
sbb
lahf
inc
cwtl
adc
je
test
xor
dec
iret
xacquire
cmp
dec
push
out
add
pop
testl
and
out
cmp
pop
aam
lret
nop
jmp
sbb
mov
cli
adc
xchg
mov
mov
test
jmp
sub
sub
movsl
bound
rorb
popf
stos
pusha
fwait
cmpb
call
pop
fdivrs
mov
ret
push
adc
jno
loopne
and
out
xor
jmp
cmp
in
xor
xchg
xor
pop
push
xchg
jmp
shrb
ja
scas
pop
sbb
rcrl
mov
repnz
adc
xchg
imul
jecxz
adc
pushf
cmc
stc
sbb
call
loop
cltd
out
cmc
and
adc
mov
or
pop
mov
push
push
imul
or
cmp
pop
ljmp
loop
inc
adc
mov
pop
stos
and
ljmp
mov
mov
push
add
out
dec
sbb
mov
push
mov
imul
xlat
inc
popf
jae
arpl
adc
adc
popf
fwait
inc
cld
pop
sub
lods
jbe
aad
push
outsb
inc
std
sbb
xor
cmp
add
inc
lret
or
icebp
fld1
data16
mov
ss
enter
xchg
out
push
and
cs
iret
cwtl
xor
ret
push
cli
mov
xchg
popf
test
pop
dec
fidivl
xlat
push
jmp
jno
roll
icebp
jmp
cmpsb
sub
or
or
mov
ret
sub
or
or
jb
xchg
or
cmp
xor
inc
aas
add
shr
into
sbb
ret
test
and
push
push
jle
mov
enter
lcall
dec
stos
loopne
sahf
js
cld
mov
js
popa
and
and
adc
pushf
lcall
jecxz
dec
daa
mov
or
jns
sbb
dec
adc
xchg
xor
pop
lea
xchg
cwtl
jae
dec
xchg
push
pusha
mov
test
test
stc
mov
cltd
or
test
sub
mov
je
int3
les
movsb
and
repz
insl
dec
mov
xor
mov
loope
cltd
pop
push
mov
pop
and
pop
scas
xchg
mov
int3
loopne
into
cmp
xchg
jns
adc
push
mov
pop
add
pusha
jnp
pusha
rclb
sub
aam
icebp
sbb
add
sub
jmp
ss
and
mov
pop
cmp
loope
dec
mov
mov
and
xchg
xchg
dec
rorb
sub
xabort
mov
shlb
jns
andb
adc
ficompl
dec
clc
pop
xor
lock
test
sub
jae
add
rcrl
jle
and
pushf
or
subl
pop
lea
mov
int
test
aam
leave
repz
mov
pop
jno
mov
and
jnp
stos
in
adc
popf
sub
inc
cltd
fwait
cli
outsb
pop
xor
cmc
jmp
mov
out
or
or
inc
jle
add
jmp
push
js
jae
lods
mov
es
loope
rclb
xchg
es
fidivs
cmpsb
inc
leave
mov
sub
push
add
cwtl
pop
jns
adc
push
xor
push
adc
xchg
es
ss
faddp
arpl
in
cmp
push
jl
test
in
clc
popf
sub
cmp
add
and
subps
fisttps
adc
mov
mov
insb
cwtl
mov
mov
fmuls
outsl
and
inc
push
lds
push
js
cmp
fidivrs
add
pop
jns
inc
adc
cwtl
mov
inc
adc
cmpsb
inc
and
lock
out
cwtl
out
dec
add
lock
int3
add
mov
movlps
and
scas
je
jo
sbb
dec
stos
int3
cmp
in
jp
mov
pop
inc
xchg
inc
xchg
and
call
stc
cli
pop
sbb
cmp
xlat
jnp
and
jo
adc
mov
lock
jge
xchg
repz
out
pop
cli
jmp
daa
mov
dec
add
fsubrl
xchg
fwait
loope
testb
sbb
ja
jmp
pop
mov
dec
loope
mov
pop
and
incl
dec
js
xchg
add
mov
sbb
xchg
mov
rcll
xchg
sbb
cmpl
ljmpw
lcall
mov
dec
and
pop
lahf
or
fsubs
pop
arpl
cmp
xchg
jbe
xchg
or
gs
repz
loopne
cmp
adcb
mov
mov
imul
adc
and
pop
jbe
jne
mov
cmp
outsb
pushf
xor
out
out
mov
lret
add
daa
push
sbb
notb
aas
ret
std
and
cmpsb
pop
add
loope
push
or
js
fstpt
stc
into
adc
sub
mov
and
rcll
push
xchg
cmp
mov
dec
imul
pop
movsl
sub
adc
mov
dec
sbb
std
jg
mov
push
orb
xor
xchg
cmp
inc
cmp
pop
mov
or
sub
lret
loope
ret
dec
xchg
mov
push
insb
out
cmp
andb
jecxz
and
add
lods
shll
or
xchg
push
fs
clc
hlt
negl
push
xchg
dec
aaa
jp
div
or
mov
sub
push
cmp
arpl
pop
xchg
dec
lret
or
outsb
ss
and
and
or
into
out
mov
inc
pop
xor
lret
mov
sti
lock
rorl
mov
mov
into
out
fdivrp
dec
lret
lret
mov
inc
sbb
inc
inc
insl
or
movsb
ljmp
xchg
mov
popa
popf
movsb
pop
or
mov
jne
mov
mov
add
dec
or
cmp
aad
insl
dec
test
push
jbe
imul
jae
push
lods
sub
ja
or
pop
jbe
ss
cmp
insb
pop
test
xchg
cmp
sahf
in
imul
mov
sbb
and
leave
mov
push
inc
das
pop
popa
inc
out
scas
jle
add
in
xor
cli
and
mov
lods
scas
and
std
icebp
outsb
jg
pop
add
mov
pop
test
pop
push
lret
loope
push
sub
in
cmp
xchg
xor
push
out
pop
push
in
fnstenv
jge
or
pmulhw
xchg
dec
popa
xchg
xlat
aam
jle
out
mov
jle
stc
adc
int3
or
rorb
mov
and
insb
pop
lahf
test
push
fists
or
mov
inc
jecxz
ret
dec
xchg
pop
jnp
lcall
outsl
mov
xchg
jg
push
outsb
cmp
or
lock
out
roll
push
mov
jb
cmp
mov
fmuls
frstor
cmc
push
stos
xchg
test
ficomps
ret
push
jb
add
ficoms
push
push
adc
pop
mov
jg
scas
xchg
mov
push
push
xor
pop
mov
mov
jbe
cmp
xor
enter
pop
ret
push
lahf
ljmp
or
mov
jle
inc
dec
addr16
jbe
add
dec
clc
jno
clc
mov
fnstenv
cmc
xchg
mov
pop
and
jno
lahf
or
jae
pop
xchg
mov
and
push
xor
outsl
mov
mov
adc
stos
add
fsub
mov
cmp
popa
cli
pop
fwait
bnd
pop
adc
push
xor
xor
rorl
mov
push
int
call
or
adc
cmc
insl
jne
xor
mov
and
inc
push
add
dec
push
imul
fisubs
cwtl
fmull
lea
dec
xchg
int3
push
xor
cmp
adc
add
je
sbb
ljmp
mov
push
outsb
stos
xchg
xor
inc
xchg
leave
data16
aaa
add
test
pushf
pop
movsb
xchg
fwait
push
cwtl
lods
int3
ret
insb
push
bound
imul
je
push
clc
xchg
aas
jmp
loopne
popa
test
jbe
xor
adc
mov
xchg
aad
sub
and
pop
loopne
pop
mov
mov
pushf
pop
dec
mov
xchg
jnp
jns
pop
int
out
and
inc
sub
and
loopne
aaa
xchg
sbb
pop
cmpsb
je
push
pop
lret
in
inc
dec
cmp
push
mov
mov
lcall
cs
lcall
fidivrl
rol
dec
and
xchg
sub
xor
and
sbb
insb
sub
pop
xchg
push
sbb
gs
repnz
mov
test
lods
mov
mov
xchg
lret
lods
les
rcl
xlat
mov
addr16
lret
mov
cmp
movl
mov
mov
bound
adcb
xchg
popa
inc
lods
or
pop
inc
and
gs
sub
pop
les
mov
ret
sahf
imul
ret
rcl
pop
jb
mov
ds
nop
les
in
imul
inc
loop
pop
jb
sub
add
jb
inc
out
push
insb
mov
lret
adc
sti
jg
lea
ljmp
lcall
add
adc
pop
pop
sub
push
iret
and
popa
stos
xchg
push
dec
out
push
jno
arpl
scas
outsb
xchg
xor
aam
fidivrl
out
xlat
scas
and
cmp
dec
sbb
mov
add
iret
ljmp
out
sahf
jne
jl
xchg
xchg
push
shr
jg
rorb
dec
xchg
mov
test
int3
in
enter
insl
and
sub
subl
dec
push
sub
xchg
shl
or
fwait
xor
std
xchg
sbb
fnstenv
jg
xchg
xor
in
or
pusha
xchg
pop
inc
and
mov
inc
lahf
mov
out
cmp
inc
movsb
cmp
fildll
ret
mov
mov
inc
mov
roll
out
scas
inc
mov
dec
or
adc
pop
scas
cmpsl
rcl
and
icebp
dec
xchg
and
add
cli
adc
in
mov
mov
subb
sub
fmulp
push
mov
fisttpl
dec
push
aam
das
test
mov
aad
cmp
sti
aas
stc
stc
pop
xchg
in
jae
popf
notl
xchg
sub
into
mov
xlat
xchg
dec
or
imul
ja
inc
test
xor
fcmovu
or
xchg
add
bound
and
aaa
fucomi
pop
icebp
jge
mov
lret
push
lock
mov
sbb
cmp
stc
rcrl
cmp
addr16
cmpsl
jmp
xor
jb
adc
outsl
dec
cmp
push
fildll
dec
pop
fdivrl
movsl
mov
fucomp
out
xchg
mov
clc
jo
jae
add
cmp
sub
insb
xchg
stc
sti
sub
shlb
jnp
sub
pop
pop
mov
mov
cli
jns
jg
dec
cmp
cmp
popf
push
outsl
cs
and
imul
lea
jmp
fcoms
subl
les
cld
arpl
movsb
lea
mov
mov
push
cmpsb
aaa
cmpsl
pop
fistpl
insb
or
adc
sub
lea
sub
imul
in
sbb
aad
push
or
add
sbb
inc
inc
pop
movsl
shll
insb
imul
stos
adc
test
sub
lret
pop
test
jmp
sbb
mov
or
insl
out
inc
popf
out
sbbl
mov
lock
pop
mov
sub
jle
mov
mov
jne
jge
lcall
or
repz
leave
adc
test
aaa
data16
add
aas
hlt
xchg
scas
mov
jne
data16
cmpsb
pop
ds
ss
add
mov
leave
xor
mov
dec
jecxz
lds
loope
pop
es
xor
inc
lcall
mov
rcl
sbb
xchg
sub
push
push
orl
inc
push
hlt
adc
std
das
into
dec
jle
and
mov
imul
aaa
rcl
call
add
test
mov
stos
jmp
jo
sbb
adc
arpl
xchg
or
pop
adc
fisubs
cmc
jl
jge
in
push
test
loop
scas
jp
test
cmp
dec
inc
pop
fimuls
sub
rcr
shlb
jge
sahf
sbbl
inc
sub
icebp
imul
rcll
addr16
iret
adc
inc
mov
dec
add
insb
pusha
mov
mov
lcall
ja
sbb
and
fstp
jno
push
pop
test
mov
lock
and
xchg
stc
pop
leave
mov
aaa
push
clc
daa
ja
mov
mov
je
push
fiaddl
lahf
pop
xor
lods
dec
adc
test
add
outsb
xor
test
cs
adcl
mov
jo
fidivrs
ds
outsb
sub
fists
jp
lock
mov
adc
or
push
mov
scas
xchg
movsb
cs
mov
sarb
cld
push
jno
in
pop
mov
jge
loope
testl
pop
jno
into
imul
test
std
or
and
xchg
jne
mov
js
mov
inc
adc
mov
xor
jl
mov
sbb
scas
push
sub
mov
xor
inc
cmp
push
inc
push
lock
lahf
add
mov
aas
inc
repz
shlb
fstps
push
fcoms
pop
mov
adc
hlt
movsl
pop
nop
adc
pop
inc
or
outsb
inc
ror
lret
adc
mov
or
je
or
push
aas
popf
dec
xchg
in
loop
cmpsl
fdivl
mov
xor
rorb
mov
xlat
add
dec
mov
lods
rorb
insb
dec
pop
rorb
and
push
sub
leave
xchg
imul
test
fldl
iret
mov
mov
fyl2xp1
jo
and
and
sub
sub
xchg
out
push
bound
je
fst
lds
or
push
js
cmp
movsb
cld
ljmp
xchg
lea
jae
test
rol
cmpsb
inc
jle
push
shr
xor
xchg
scas
dec
scas
inc
imul
push
push
repnz
cli
push
fsts
lret
ljmp
stc
imul
add
fisubrl
packssdw
adc
mov
pop
jnp
or
add
mov
aad
sub
inc
sub
and
inc
icebp
pop
sahf
inc
cmc
daa
add
and
decl
daa
enter
sbb
testb
pop
inc
jecxz
dec
jge
fnsave
and
pop
outsb
sbb
jb
sub
adc
je
cld
xor
push
dec
xor
mov
sar
mov
and
insb
mov
inc
sub
add
jno
inc
dec
push
inc
mov
or
loope
mov
and
icebp
lcall
mov
and
inc
xor
jns
jmp
cs
cli
imul
xchg
test
sub
sub
cmpsl
and
repnz
pop
sub
ret
cli
sbb
and
mov
adc
fiadds
pop
xchg
test
fs
fcmovnb
cmp
mov
test
add
clc
fmuls
add
sbb
in
ljmp
push
mov
rol
lahf
push
lock
bound
mov
mov
pop
add
sub
loopne
pushf
mov
into
mov
pop
pop
mov
push
xchg
mov
lahf
mov
lds
adc
xchg
or
cmp
jns
js
test
fmuls
stc
or
mov
mov
pop
insb
lods
xchg
cltd
out
or
or
ret
test
iret
sbb
jo
fildll
shrl
xchg
outsl
lock
xor
insl
jo
push
popa
scas
pop
pcmpgtd
mov
aas
xchg
xlat
dec
and
imul
dec
into
repnz
add
inc
cltd
dec
cmp
into
adc
inc
adc
je
jecxz
mov
add
push
test
push
xchg
out
mov
cmp
add
or
inc
mov
cs
scas
mov
les
jecxz
jge
rorb
mov
pushf
sarl
scas
push
dec
into
mov
pop
iret
pop
daa
add
pop
repz
leave
arpl
sti
mov
mov
scas
jg
jle
in
pusha
test
jmp
cwtl
pop
xor
hlt
jp
jbe
or
pop
ss
pop
ss
incl
lock
loop
fdivl
mov
lret
shll
push
aaa
fucom
in
adc
ja
stos
stos
adc
xchg
cmp
or
xor
xor
insb
xchg
inc
stos
xchg
dec
push
fisttpll
jno
and
push
out
divl
or
inc
cld
mov
jg
dec
push
repnz
mov
adc
jmp
push
sub
inc
out
mov
icebp
pop
in
aad
pop
ss
push
test
lock
in
aaa
loopne
in
out
mov
out
repz
out
or
leave
scas
sbb
call
out
pop
mov
xor
mov
dec
or
rcr
xor
das
lods
or
add
dec
mov
test
popa
pushf
add
or
shrl
or
mov
push
pop
mov
iret
adc
mov
je
dec
ret
pop
out
movsl
push
sbb
je
cli
lcall
dec
dec
int3
pop
jg
dec
push
popf
pop
xor
mov
push
shlb
scas
inc
scas
cmp
pushf
dec
insb
xchg
sub
mov
adc
sbb
cmpsl
xor
repnz
mov
iret
cli
pop
adc
or
inc
sbb
cmc
ret
ljmp
enter
dec
cltd
jle
mov
jmp
cmpsb
fs
pushf
aas
adc
adcb
lods
cmp
mov
push
jg
jbe
mov
adc
jns
sub
repnz
inc
into
clc
jb
inc
mov
insb
insl
pop
int3
sbb
dec
jb
shrb
xchg
or
jecxz
sub
sub
js
fcoml
jecxz
sbb
mov
inc
adc
push
je
lret
movsb
fnstcw
cmp
xor
dec
jmp
shll
adc
mov
fdivrs
sar
daa
cwtl
dec
rorb
sub
nop
and
pop
fistps
sub
inc
jne
xchg
add
shlb
adc
cmp
jl
cs
and
mov
outsl
mov
sub
outsl
lds
or
mov
in
push
aam
push
andl
cmpsl
pushf
clc
leave
lock
pop
mov
pop
cmp
movsb
test
pop
js
fiadds
decl
lods
gs
adc
jae
mov
pop
bnd
rcrl
fwait
jbe
push
xor
sbb
imul
push
in
xchg
outsl
test
pop
mov
cmp
mov
hlt
test
push
das
cld
cmp
mov
int3
ja
mov
and
sbb
xor
aam
icebp
add
cmp
cmp
jl
mov
test
inc
mov
jge
dec
jne
outsb
lahf
and
sub
arpl
mov
cltd
push
and
jo
ljmp
xchg
or
inc
cmp
push
sub
xchg
frstor
hlt
sub
and
mov
adc
das
out
and
and
mov
push
lahf
mov
sbb
loopne
add
imul
pop
jne
stc
mov
xchg
xchg
adc
stos
fisttpl
xor
sub
push
push
out
push
inc
push
insb
outsb
dec
adc
lahf
add
jle
or
aas
repnz
cmp
dec
cmp
imulb
mov
mov
cmp
pop
jg
mov
add
in
cmp
and
sbb
mov
mov
sub
test
arpl
fisubl
roll
or
lahf
in
sub
cmp
sbb
lods
dec
scas
push
scas
in
jecxz
pusha
js
xor
fwait
mov
pusha
inc
add
jae
and
pushf
sbb
push
sti
adc
pusha
push
adc
cld
xor
add
jb
adc
cmpsb
imul
inc
inc
and
sbb
stc
cmp
add
dec
subb
cmp
stc
sbb
sbb
repz
push
sarl
popa
aas
enter
jae
push
sti
xor
es
dec
push
jnp
push
adc
testl
arpl
repnz
repz
rcrl
ret
pop
inc
inc
scas
dec
mov
aaa
stc
popf
pop
push
xor
mov
sbb
ret
mov
mov
imul
hlt
jo,pt
inc
mov
mov
ret
mov
jo
stos
imul
add
xor
mov
lcall
push
and
pop
sbb
subb
pop
test
pop
testl
hlt
pop
inc
fcmovne
sub
push
and
cmpsl
dec
add
loopne
ficompl
loop
mov
and
mov
inc
pop
cmp
jo
and
sbb
mov
push
cmp
int
cmp
xchg
mov
movsl
aas
in
jle
dec
insb
lea
js
push
inc
repnz
dec
clc
cmp
and
not
mov
fmul
fcmovnbe
shll
push
and
rorl
sub
adc
fcompl
lods
dec
mov
sbbl
popa
imul
cld
cmpb
in
xor
mov
jecxz
pop
or
push
nop
sub
xchg
inc
ret
jae
scas
into
xchg
cmpsl
jno
loopne
jbe
test
pop
fimull
loop
push
and
add
test
adc
sbb
adc
push
cmp
je
mov
lods
jb
jnp
adc
and
push
inc
sbb
inc
adc
jbe
xor
loope
mov
ss
jecxz
push
es
cmp
mov
andl
cmp
jns
dec
test
pop
leave
enter
ret
sub
or
cwtl
mov
cmp
loope
xchg
aam
out
push
xor
lahf
sub
mov
inc
adc
test
or
sub
divps
rol
xchg
mov
imul
xchg
imul
ret
jae
cmp
leave
inc
inc
push
loope
sub
jne
pop
imul
movsl
and
insl
hlt
stos
das
pop
and
daa
sbb
push
stc
mov
rorl
pop
mov
inc
xor
sub
jne
pop
xchg
ja,pn
lret
mov
sbb
dec
jne
jns
in
xchg
fcmovnbe
inc
xchg
out
lret
jg
push
inc
add
std
jns
add
push
xor
jmp
loope
ret
addr16
ja
add
repnz
push
sbbl
mov
xchg
and
call
pop
in
or
push
les
push
sub
adc
imul
int3
into
lods
out
ret
fcmovu
clc
mov
mov
mov
std
dec
fstl
jae
pop
popa
dec
cmpsb
movsb
sbb
push
pushf
in
in
mov
xchg
imul
mov
mov
imul
push
outsb
push
wbinvd
out
dec
fdivs
test
push
jbe
jecxz
pop
xor
aaa
in
test
fstpt
mov
sbb
sahf
repnz
into
lret
sahf
clc
or
shlb
adc
jle
xor
testb
hlt
pop
movsl
adcl
fwait
mov
fcomps
imulb
data16
jae
mov
jge
lcall
les
fistpl
test
mov
sub
push
mov
mov
scas
rclb
jne
scas
jp
push
call
push
pusha
push
insl
mov
mov
inc
int3
mov
sti
mov
dec
mov
mov
fcmovnu
sub
add
cmp
das
add
lea
lock
mov
inc
leave
ljmp
in
jecxz
xor
clc
and
outsb
cmpsl
sti
in
jle
jecxz
cltd
or
loope
push
cld
sub
arpl
mov
mov
lea
scas
or
insl
fwait
shrb
jg
movsb
adc
or
jle
adc
dec
nop
jge
push
cmp
test
shlb
add
lcall
adcl
pop
test
push
out
jle
mov
xchg
push
mov
sbb
jnp
imul
mov
imul
adc
cmp
outsb
dec
mov
into
test
loop
mov
sub
dec
ret
je
jg
push
mov
mov
jmp
lods
je
gs
jo
call
je
fbstp
repnz
adc
bound
push
mov
cmpsl
loop
repz
negb
lods
out
das
xor
xchg
mov
test
jp
hlt
cmp
adc
mov
mov
ret
int
test
sub
push
cli
stos
movsl
outsb
pop
repnz
xchg
and
das
je
adc
mov
jns
add
adc
int3
pop
jns
inc
cmp
xorl
push
call
pop
aas
iret
and
mov
xor
jnp,pt
cld
movntps
pusha
sbb
scas
push
xchg
mov
inc
icebp
stc
dec
dec
loopne
sbb
or
popf
inc
and
dec
push
lea
mov
clc
mov
inc
xchg
sbbl
fbstp
pop
lea
sahf
es
sbb
test
xchg
fsincos
daa
pop
xlat
mov
insl
push
hlt
int
dec
or
cld
repz
jbe
add
les
inc
mov
vxorpd
mov
push
push
xchg
push
je
push
xchg
aaa
test
push
lock
or
sub
cs
mov
lods
ja
push
loopne
adc
push
dec
loopne
out
fldz
sub
mov
and
icebp
int3
aaa
out
sbb
bound
jno
sbb
bound
imul
xchg
andl
mov
xor
sub
ret
pop
mov
negb
iret
lock
add
jecxz
or
insb
fcmove
mov
fwait
pusha
pop
bound
add
push
pusha
frstor
shrb
cld
mov
mov
enter
push
push
jle
aas
inc
in
mov
jno
mov
or
test
mov
movsb
cmp
mov
jp
adc
mov
add
mulb
inc
aas
ret
cmpsb
clc
hlt
push
outsb
cmc
pop
mov
in
mov
imul
cmp
jb
jbe
sahf
pop
mov
enter
xchg
pop
movsb
push
outsl
loope
stc
add
icebp
jge
or
out
loop
adc
popf
icebp
aam
aad
and
orl
mov
inc
pop
sbb
dec
fwait
mov
adc
ret
mov
mov
push
pop
jns
ja,pt
jo
rorl
xchg
in
inc
lods
dec
aad
sbb
mov
push
jnp
jne
xchg
cltd
mov
push
dec
fsubrs
mov
jae
fwait
cmp
inc
adc
cltd
cmp
sti
inc
frstor
inc
loop
mov
mov
push
test
jns
mov
inc
jnp
push
test
cwtl
jle
leave
cwtl
rcrb
pop
sub
adcb
add
mov
fnsave
inc
ret
push
jbe
loope
ljmp
fstps
mov
xor
pop
adc
cs
inc
in
or
nopl
inc
push
outsb
ret
out
popf
sbb
repnz
xchg
test
pop
fcoms
pop
add
mov
sbb
add
mov
shll
pop
inc
cltd
lods
or
je
xor
xchg
cli
adc
das
out
dec
into
cmp
jecxz
out
jp
ss
pushf
into
sahf
push
test
cmp
jno
mov
and
int3
es
std
mov
or
xor
popa
adc
je
daa
popa
and
call
outsb
mov
or
pop
xor
sub
leave
lea
jl
mov
rcll
jae
ljmp
adc
test
mov
aam
movsl
lods
int3
xchg
in
mov
mov
nop
repnz
stos
out
mov
pusha
movb
dec
push
cld
adc
mov
imul
mov
lock
orl
cwtl
rorb
outsb
movsb
aaa
rolb
cltd
jbe
mov
loopne
mov
lods
push
movsl
sub
lahf
pop
rolb
outsb
xchg
add
jne
dec
xorl
mov
mov
orps
nop
test
es
push
popf
adc
push
bound
xchg
add
int
out
aam
and
out
jbe
adc
pop
in
data16
dec
imul
aas
aaa
and
dec
jns
dec
mov
or
jbe
les
out
push
clc
or
add
fmull
jbe
cmp
mov
das
test
adc
cmp
xchg
mov
stc
adcb
cmp
jbe
sub
dec
push
inc
cmpsl
xlat
in
mov
lock
dec
adc
xchg
inc
pop
inc
sti
pop
push
call
int
push
xor
lds
xchg
and
xor
insb
push
shr
mov
lea
test
std
xor
rcr
outsl
sarb
or
and
or
popa
push
and
adc
repnz
popf
repz
jge
pop
jecxz
sub
jb
fbld
stc
in
inc
inc
lret
mov
jb
jge
pop
inc
push
pushf
sbb
fldl
jne
xor
je
mov
outsb
jecxz
in
pop
xchg
cmp
pop
push
in
js
jo
ffree
jno
push
rcll
sbb
andl
cmp
adc
pop
mov
or
push
cli
ficomps
in
ljmp
fistpl
adc
push
and
aaa
xor
push
mov
insb
pushf
and
iret
or
xchg
jmp
cmpsb
mov
cmpsl
jbe
negb
xchg
push
inc
mov
arpl
dec
lds
and
pop
lahf
js
lds
mov
and
stos
fisubrl
js
pop
outsl
and
pop
jp
sbb
ds
pmulhw
add
xchg
mov
mov
or
sysexit
clc
jp
jecxz
jecxz
xlat
fs
jmp
lock
sbb
mov
and
mov
and
cmp
shll
fidivrl
sbb
jecxz
enter
icebp
lcall
mov
mov
adc
bound
xlat
aad
cwtl
vunpcklps
int
fnstcw
and
ud0
ja
or
fcoml
imul
sbbb
or
mov
mov
push
mov
add
jl
fldcw
das
mov
lahf
ficomps
out
push
dec
lret
insl
cld
loope
sbb
sub
mov
push
xchg
les
fdivrl
mov
mov
sub
xor
adc
out
das
gs
push
sbb
inc
pavgw
in
mov
add
push
xchg
mov
stc
fbstp
shlb
imulb
xchg
cwtl
jb
out
cld
push
bound
and
adc
rcr
xorl
xchg
cmpsl
roll
out
adc
inc
jae
outsl
mov
sahf
negl
jae
fwait
loope
add
jae
stc
cmp
lods
mov
xchg
pop
mov
pop
xor
cld
add
nop
jb
icebp
add
pop
jno
pop
xchg
ret
repnz
pop
mov
dec
lcall
mov
push
cmp
push
lea
into
mov
cmc
xchg
ljmp
mov
je
xlat
daa
loop
dec
bound
mov
adc
inc
ss
lcall
sbb
pop
pop
nop
push
int
mov
leave
or
imul
add
mov
and
adc
scas
iret
pusha
mov
rorl
push
nop
adc
mov
adc
pop
icebp
insw
pop
sub
rol
movb
push
mov
in
xchg
loopne
cmc
xchg
movsl
adc
sbb
js
mov
mov
pop
jnp
inc
jecxz
mov
push
ss
jno
mov
jle
movsl
and
mov
pushl
icebp
popa
push
push
or
cmp
push
dec
inc
lcall
sbb
sbb
ss
sbb
mov
adc
fsubp
cmpsb
inc
adc
movsb
aad
jne
rorl
xchg
ja
jbe
adc
pop
or
mov
xchg
dec
in
jmp
inc
xchg
cmc
push
stos
shll
and
test
push
mov
hlt
sarb
js,pt
jnp,pn
mov
repz
arpl
push
cmp
je
insb
cmpsb
loop
or
xchg
aad
dec
lahf
sbb
lahf
push
popa
xchg
inc
out
fidivs
sahf
adc
and
loopne
andl
jp
mov
lock
mov
ja
cmpsb
pop
xor
andl
jb
lods
jbe
and
sub
sub
popf
and
movsb
mov
mov
lds
mov
cltd
mov
and
lock
ja
ds
mov
inc
pop
ret
pop
pushf
enter
stos
je
sub
add
ret
dec
out
sbb
aad
out
push
jmp
pushf
jmp
sbb
fisttpl
ljmp
adc
cs
hlt
bswap
in
push
fcmovnbe
pop
movsb
xchg
sbb
subb
cmc
push
mov
mov
mov
enter
pushf
jmp
or
or
push
adc
mov
scas
and
add
cmp
out
sbb
fcoms
popf
data16
orb
in
lds
notl
dec
addr16
jo
jbe
mov
fcomp
dec
adc
mov
lcall
popf
or
sbb
ds
mov
mov
rcr
popf
jns
out
das
cs
std
cmp
ja
pop
xor
or
cmp
mov
mov
jne
or
sahf
daa
std
outsl
das
mov
movsb
pop
sbb
fidivrl
or
xchg
push
les
bound
loop
pop
jecxz
inc
jo
xchg
mov
cli
lds
test
sbb
das
mov
push
fcoms
js
xor
ljmp
scas
dec
and
add
out
jnp
xchg
add
lea
dec
adc
mov
sahf
ret
aad
pop
inc
in
sub
sahf
dec
cld
std
dec
jo
sbb
and
aas
shl
add
jo
scas
pop
jb
dec
pop
repnz
adc
add
cmp
pop
xchg
push
dec
mov
mov
lret
into
xor
add
inc
jecxz
sub
add
mov
pop
imul
sbb
fs
sbb
pop
mov
testb
adc
or
xor
aas
sub
cmp
icebp
xor
push
loope
sub
and
out
inc
aad
jmp
jl
fndisi(8087
out
xor
loopne
bound
insb
lcall
mov
call
psubw
aad
and
pop
pusha
dec
mov
ss
mov
test
jb
pop
inc
jl
adc
fstpl
orl
add
push
sub
sbb
loop
sub
xor
sub
add
push
pop
xchg
or
insl
sub
or
inc
fldt
push
call
adc
lcall
aas
movsb
enter
pop
cmp
push
aaa
lcall
test
lock
dec
mov
mov
leave
pop
lods
xchg
jno
out
mov
pop
insl
aam
loope
leave
rcrb
and
flds
mov
lods
cmc
mov
mov
jl
rcl
cld
iret
adc
sbb
ds
sbb
mov
test
lods
add
fiaddl
movsb
addb
cld
cmp
addr16
fnsave
imul
call
test
loopne
mov
fcoml
movsb
push
xchg
pop
and
int
inc
dec
test
lret
aaa
leave
jg
aad
jmp
out
call
mov
test
in
or
stos
and
jge
xor
cli
push
clc
popa
or
cmp
mov
dec
data16
fidivl
aad
shl
outsb
mov
cmc
pop
sub
decb
jns
xchg
lds
mov
pop
and
push
xlat
cmc
sbb
sub
jo
dec
and
xor
dec
movsb
xor
pop
test
fs
pop
mov
mov
aam
sub
stos
out
out
add
mulb
push
xor
dec
pop
mov
mov
mov
cmpsb
and
call
scas
add
push
ret
push
inc
call
ror
xchg
lret
cmp
pop
std
or
mov
jl
in
push
ret
pop
insb
push
mov
repnz
dec
jp
loopne
and
repnz
xchg
pushf
dec
mov
pop
int
push
xor
repnz
std
out
add
in
push
movsl
flds
adcb
into
jns
cmc
mov
cmp
jb
sub
scas
mov
cs
insb
mov
and
cmc
jae
loope
icebp
divb
or
scas
jl
add
inc
sbb
out
jl
dec
sbb
push
xchg
dec
std
jne
push
dec
inc
fdivs
test
adc
or
outsl
pop
mov
jo
push
add
push
inc
jnp
sub
dec
cmp
inc
shll
dec
fs
push
outsl
cmp
lahf
jne
sub
enter
lret
ljmp
jnp
xchg
rcrb
bound
mov
or
icebp
mov
clc
mov
mov
pop
push
xchg
xchg
sub
jl
jle
jl
daa
jle
cmp
xor
jmp
mov
sub
and
or
ds
bound
pop
push
jecxz
xchg
inc
mov
or
dec
flds
lods
mov
std
or
and
sti
fisttpl
dec
sbb
or
push
rcrl
mov
loopne
repnz
cltd
xchg
adc
aas
push
cs
out
inc
cmp
rorl
scas
mov
repnz
mov
cmc
xor
push
cmp
jecxz
sub
cmp
cltd
add
scas
fwait
jecxz
push
int3
inc
repz
test
aas
and
add
xchg
bound
cmp
and
cmp
pop
aam
mov
cltd
jecxz
int
ret
mov
imull
push
lcall
xchg
loope
lds
jne
cltd
int3
repz
leave
data16
sbb
push
lock
cmp
jno
lret
fdiv
icebp
or
and
mov
loope
stos
inc
out
cmp
xchg
mov
popa
and
gs
cmp
fimull
aad
arpl
sbb
fs
fwait
mov
scas
and
dec
iret
mov
jl
jp
mov
push
xchg
mov
cmpsb
mov
xor
out
nop
fwait
xchg
cmp
mov
inc
int3
pop
pusha
subb
jne
or
push
mov
mov
stos
xchg
push
rcl
insb
mov
or
dec
inc
lods
in
push
cmpsb
mov
es
pushf
or
nop
stos
pusha
mov
sub
popa
pop
inc
xor
sbb
fstpt
inc
mov
clc
pop
pusha
add
dec
push
ja
xchg
rorl
div
mov
sbb
das
cmpsb
in
push
mov
inc
and
cmp
neg
inc
push
rcr
lock
data16
mov
jb
push
push
xchg
test
sub
mov
mov
lret
push
or
das
je
sbb
mov
js
dec
jmp
clc
ret
jge
addr16
pop
or
cli
sbb
test
ret
call
add
xchg
push
pop
cmpb
cmpsb
jno
icebp
push
mov
icebp
xchg
push
sbb
mov
or
stc
movsl
les
icebp
xor
outsl
mov
adc
mov
jmp
and
in
icebp
fadd
not
js
in
dec
xchg
mov
inc
ret
roll
outsb
and
jge
push
mov
sbbb
or
insl
roll
xchg
gs
pop
pop
cmp
call
lcall
in
push
mov
sub
adc
pop
repz
aaa
out
cltd
insb
adcl
lods
dec
mov
xor
xchg
cmp
popa
jnp
xchg
and
rcll
cmp
adc
data16
add
scas
mov
int
hlt
test
xchg
fwait
add
movb
pop
test
cli
mov
fwait
mov
cmp
adc
xor
mov
sub
dec
clc
scas
out
sbb
push
dec
xorl
mov
jnp
scas
jnp
sub
test
sahf
lock
data16
inc
in
sub
cmp
subb
inc
push
push
sbb
push
cli
or
add
sahf
in
xor
sub
cld
xor
lods
ljmp
xor
daa
and
dec
cmpsl
mov
repz
popf
add
xchg
mov
push
cmpsl
mov
gs
add
imul
sub
sub
popf
sar
mov
shll
fcmovnu
fsub
push
or
sbb
cmp
lds
pop
sbb
sbb
jecxz
out
shr
in
push
cs
mov
xor
movsb
push
sub
inc
mov
imul
bnd
jl
fidivrs
aaa
ja
and
js
mov
enter
dec
adc
mov
stos
in
pop
nop
shlb
cwtl
dec
ljmp
pop
inc
fisubl
rcrl
daa
add
sbb
sub
inc
and
sub
fs
test
loope
sub
mov
loope
movsb
dec
mov
imul
fldcw
loope
or
ret
int3
movb
rclb
jo
sbbl
cld
lret
push
push
push
jge
fcmovnu
pusha
xor
mov
aas
out
sbb
or
cmc
pop
mov
xor
andl
loopne
add
popf
dec
sbbl
ss
lock
xor
into
into
xchg
or
test
sbb
loop
mov
negl
mov
or
sbb
jo
push
nop
mov
mov
fists
inc
jg
shll
xchg
gs
add
cli
int
cmpsl
ficomps
cwtl
and
pop
sbb
or
outsl
loope
sub
pop
jo
jne
fdivrl
pop
rorb
or
das
stos
mov
mov
pop
pop
andb
pushf
sub
imul
pop
mov
push
fmuls
cld
in
mov
bound
add
push
mov
sarb
lds
shlb
xchg
inc
test
mov
and
iret
rclb
in
roll
ds
cmp
and
sub
cmp
clc
jl
xchg
aas
and
mov
cmpsb
push
rorl
jmp
jl
add
jo
cltd
dec
xchg
imul
imul
lcall
fsts
es
or
iret
xchg
daa
cmp
jns
pop
push
xchg
out
rorl
imul
mov
cwtl
push
daa
push
inc
xor
sbbb
rorb
pop
lds
pop
test
int
sbb
sbb
fldcw
scas
insl
aam
adc
sub
mov
dec
loop
icebp
enter
xor
scas
sub
dec
dec
sbbl
mov
imul
in
mov
sub
push
push
dec
lret
pop
mov
cwtl
adc
out
mov
jne
loope
cmp
lret
sub
fs
dec
mov
fstl
xchg
mov
rcll
pop
push
add
inc
dec
in
in
add
cli
xor
xor
daa
test
imul
fisttps
jb
popa
daa
sti
xorl
movsl
pop
mov
jecxz
jecxz
cltd
out
or
mov
dec
imul
dec
and
lods
jns
roll
mov
stc
jbe
xor
test
dec
lea
xchg
jecxz
in
inc
lcall
sub
add
sub
shrb
jg
push
addb
outsb
jmp
out
push
les
jmp
jle
push
pop
inc
aad
sbb
gs
xchg
cmp
dec
add
in
scas
jmp
push
adc
add
mov
out
add
out
adc
imul
mov
mov
push
shrb
aad
js
jg
xor
in
and
loope
out
movsb
inc
xchg
fcompl
stos
cmpsl
shrb
es
cwtl
addr16
daa
repz
mov
rcr
adc
mov
lahf
fbld
stos
cld
repz
mov
adc
rclb
push
jno
sbb
and
pop
pop
sbb
dec
jmp
lret
jge
cltd
jns
test
push
mov
or
inc
adc
stc
aas
and
das
cli
adcb
add
mov
mov
mov
scas
ss
jo
ret
sti
sbb
cmp
xor
jbe
fsts
popf
push
adc
or
fiadds
mov
popf
add
jns
lret
mov
push
pop
cmp
addr16
fwait
dec
jnp
daa
scas
test
pushf
call
or
mov
xchg
sub
loop
pusha
insb
outsl
fldt
xor
hlt
sub
jge
pusha
gs
mov
popa
ret
inc
mov
jne
jno
or
cmc
das
adc
jbe
lock
jo
cld
pop
rcr
xchg
cmp
inc
imul
mov
pop
dec
sbb
stos
mov
gs
xchg
sahf
testl
mov
inc
faddl
xchg
scas
pop
fiaddl
bound
jo,pn
fadd
add
pop
adc
sbb
into
out
and
out
cmpsb
xchg
dec
and
sbb
pop
sub
fwait
sbb
sub
adcl
sbb
xor
insl
lock
jp
push
pushf
mov
inc
enter
jne
frstor
dec
mov
ret
sbbl
lods
mov
test
pop
or
adc
out
push
xchg
hlt
clc
push
ror
sahf
inc
lahf
imul
pop
or
bound
jecxz
or
or
imul
inc
loope
sbb
sub
mov
inc
jge
sub
or
or
stc
xchg
mov
leave
pop
jno
and
call
dec
or
fs
xchg
in
cmpsb
jmp
jmp
aas
sub
movsb
int
sti
leave
leave
loopne
jo
mov
outsb
dec
push
aad
in
mov
mov
ljmp
cmp
jmp
sti
inc
daa
jb
mov
das
push
mov
int3
je
add
inc
pop
bnd
sarb
stos
xchg
loopne
lods
jo
jle
pop
and
into
cmpsb
out
movsb
jb
callw
add
outsb
repnz
fs
push
sbb
adc
imul
or
shrl
jnp
pusha
repz
inc
aam
push
andnps
jmp
int3
inc
bound
lock
jbe
or
icebp
stc
add
js
jno
hlt
and
sbb
int3
mov
je
gs
adc
add
dec
scas
mov
xor
dec
ljmp
jp
dec
std
leave
inc
inc
inc
lock
sbb
imulb
sbb
inc
add
rolb
fwait
sbb
pop
jno
stos
aam
loope
fcmovnb
nop
scas
in
loopne
mov
add
cmc
mov
mov
shll
icebp
outsb
xchg
cmp
jno
xor
int
outsb
dec
mov
pop
fs
testl
ja
and
into
or
lock
nop
fld
jp
imul
aaa
sar
push
pop
mov
leave
fnsave
mov
inc
stos
es
xchg
push
and
mov
adc
fnstsw
hlt
mov
cmp
and
outsl
nop
sbb
ret
lret
push
mov
int3
ja
inc
or
push
out
push
jl
mov
loopne
pop
mov
pop
or
pop
mov
fidivrl
sub
ja
test
xor
xor
aam
mov
sbb
ret
bound
scas
scas
test
jmp
lret
negl
adc
in
push
fwait
push
cmp
pop
push
mov
xor
pop
loopne
jns
into
jbe
xor
movsl
jne
jmp
cmp
pop
ret
clc
xchg
movsb
add
cld
inc
cltd
cltd
mov
cmp
mov
cmpsl
ret
bnd
test
mov
ds
insb
loopne
xor
adcl
mov
into
inc
mov
mov
fs
dec
xlat
jae
pushf
subb
test
ret
shlb
std
insl
sub
ds
int
insb
xor
mov
mov
ljmp
sbb
push
mov
jg
dec
in
fisubs
mov
shl
cld
inc
data16
ljmp
sub
arpl
mov
dec
js
div
ja
jmp
add
in
sbb
pop
ja
cmp
xchg
cs
aaa
bound
sbb
mov
repnz
push
data16
negl
xchg
adc
je
ret
sbb
mul
mov
jecxz
xor
orb
lcall
pop
loope
adc
mov
push
push
mov
repnz
pop
mov
adc
add
aaa
loopne
outsl
push
add
in
mov
movsl
gs
xor
fldcw
pop
in
xor
adc
cmp
or
test
jns
repnz
enter
lds
jmp
pop
jnp
xchg
ljmp
mov
xlat
scas
movsl
pusha
push
sub
sub
sub
cmp
pop
adcb
js,pt
aam
test
jecxz
and
mov
inc
sub
cmc
fimuls
shl
jns
dec
pinsrw
or
add
xor
icebp
loop
call
pop
rcl
or
pushf
xchg
jl
stos
arpl
push
add
lods
pop
inc
cli
xchg
lods
dec
ljmp
dec
lret
fidivrs
mov
jnp
mov
imul
push
inc
lret
movsl
out
test
push
push
mov
repnz
stc
stos
xorb
push
scas
popa
or
cs
cs
pusha
cmp
mov
scas
in
pop
repnz
push
mov
add
mov
mov
jo
xor
filds
xchg
cld
jne
mov
and
mov
xchg
daa
cmp
popf
dec
push
dec
xchg
lret
mov
cld
cmp
lock
movsl
out
mov
adc
mov
ficompl
and
sbb
pop
push
xchg
jge
inc
nop
test
test
mov
fs
mov
mov
out
shll
mov
sahf
imul
rcrl
sub
jmp
leave
cmpsl
inc
popa
cmp
xchg
mov
xchg
mov
add
aaa
pop
jb
imulb
imul
cmp
cwtl
mov
push
pop
and
shll
aad
movb
and
mov
sub
outsl
jne
aas
fistpll
jmp
inc
add
hlt
call
retw
xchg
sub
push
adc
call
cmpsl
leave
adc
jecxz
add
arpl
cmovg
push
push
lret
or
mov
jb
inc
jae
adc
xchg
loopne
sbb
jg
imul
jecxz
pop
das
xor
mov
popf
out
call
mov
dec
js
push
vmovsd
adc
nop
movsb
pushf
push
jmp
fildl
rorl
push
roll
ljmp
sub
cmpsb
outsb
mov
adc
imul
addr16
sub
adc
incb
push
insl
lods
mov
iret
cmp
dec
or
xor
xchg
lods
sub
rcr
pushf
jne
in
dec
dec
or
fwait
addr16
xlat
add
sub
fisubrl
fcmovnbe
ret
xchg
daa
pop
push
push
iret
lahf
add
cmp
loope
test
pushf
ret
mov
xor
and
imul
mov
jmp
loop
movsb
cmpsl
sbb
jb
add
mov
mov
xchg
adc
popa
fildll
pop
push
sarl
sub
or
outsb
mov
outsl
jae
xchg
xlat
int
add
inc
jmp
jmp
not
aaa
adc
cwtl
jle
jp
stos
ljmp
or
jno
xchg
les
pop
add
xor
leave
and
fldl
popf
lahf
es
mov
mov
addr16
cmpl
and
xchg
stos
leave
add
dec
or
and
sub
cs
aam
pop
pop
sub
movsl
inc
sub
and
jnp
pop
mov
cld
fsub
xor
xchg
rcrl
mov
inc
hlt
das
mov
sbb
adc
sbb
idivb
dec
inc
inc
iret
lret
mov
and
xor
scas
lahf
or
dec
out
cltd
enter
test
push
subb
nop
pop
xchg
fxam
dec
sub
into
cmp
dec
pop
sbb
loopne
jle
ret
popa
ds
and
sbb
rcrl
jmp
ret
adc
pop
xlat
inc
push
mov
repz
sub
sub
test
dec
dec
add
loop
jle
xchg
je
popl
mov
or
in
xchg
mov
cmp
cmp
mov
rcrl
lods
adc
xor
jnp
dec
pop
adc
pop
pushf
movsb
or
sub
cmpsb
cmp
mov
xor
bound
cmp
sub
push
sahf
sub
or
filds
aad
lcall
rol
icebp
ret
aam
jg
cltd
cli
mov
stos
jecxz
sub
outsb
push
cmp
sub
mov
xor
icebp
clc
pop
cmpsb
je
ja
daa
and
dec
cmp
ret
divl
fs
jo
or
jmp
repnz
int3
mov
clc
hlt
ss
xor
ss
iret
pop
call
or
dec
jns
add
inc
jno
jae
and
add
mov
lods
jns
inc
cmp
inc
leave
add
outsl
rclb
cs
sub
out
sahf
jne
stos
sbb
arpl
aaa
out
cmp
cltd
rcrl
xlat
pop
fnstcw
mov
and
sbb
out
xor
lods
mov
xchg
and
imul
andb
sbb
pop
mov
xchg
cltd
out
lea
mov
mov
xchg
ss
cmc
popf
mov
popf
jg
mov
add
std
lea
rcl
inc
stc
inc
mov
adc
sti
push
push
pop
insb
outsb
pop
stos
fidivrs
inc
and
mov
xor
sbb
call
fwait
dec
inc
xchg
dec
fisubrl
jns
dec
lods
movsb
push
jmp
cmove
sub
out
mov
cmpsb
outsb
xor
inc
je
push
aad
push
mov
jno
adc
inc
sub
arpl
xchg
stos
lcall
dec
mov
adc
xor
nop
gs
push
ljmp
fnstenv
clc
mov
aad
scas
dec
mov
outsl
sbb
stc
jge
jge
push
xor
sti
xchg
fdivrl
dec
repnz
ja
push
sbb
and
cmp
inc
pop
dec
loope
pop
inc
cmp
sbb
jg
jp
shr
and
into
mov
add
fwait
stos
cld
push
jle,pn
cwtl
jle
pop
cmp
cmp
add
or
lcall
push
fbld
loop
cmp
cltd
mov
gs
sbb
cltd
jge
xor
lods
mov
inc
iret
or
test
daa
sub
addr16
push
out
pop
cmp
push
mov
flds
inc
cmp
xchg
les
push
stos
mov
pop
xchg
fnsave
xchg
dec
stos
add
mov
iret
pop
pop
call
or
ror
imul
adcw
push
push
test
xchg
fistpl
hlt
adc
rcpps
dec
inc
popf
push
pop
inc
mov
orb
out
push
nop
enter
pusha
xchg
pop
ja
xor
inc
pushf
out
push
fstps
cmp
push
insb
pop
mov
jl
mov
xor
adc
push
inc
jp
jmp
cmp
stc
loope
and
xchg
fiaddl
ret
jo
cld
lock
mov
xchg
push
sbb
andl
push
jg
jne
out
mov
mov
lcall
adc
lret
mov
daa
cmp
test
in
xor
push
adc
fisttps
push
jl
fidivrl
mov
fwait
mov
jp
mov
mov
xchg
mov
call
mov
in
cld
cmpsl
or
and
jns
out
mov
adc
pop
scas
jge
push
jmp
loopne
xchg
and
or
jecxz
cmp
xchg
adc
xor
push
inc
test
movsb
test
sahf
int
loopne
mov
push
ret
pop
imul
popf
test
sbb
lea
push
add
pop
lret
bound
push
nop
push
push
stos
add
out
mov
xchg
fisubrl
cmp
mov
dec
aam
bound
arpl
cmc
movsl
push
jl
cmp
dec
adc
dec
xchg
scas
jno
mov
mov
push
dec
pop
mov
mov
cwtl
jbe
sbb
fwait
or
stc
rorl
cmp
push
arpl
sub
mov
or
sub
gs
dec
frstor
iret
sub
pop
mov
push
loopne
xchg
fldcw
jge
pop
data16
mov
stos
aas
cmpb
and
lahf
xor
push
rep
aad
popa
loopne
out
mov
cmp
js
xor
test
stos
pop
sub
lahf
dec
mov
mov
insl
scas
movl
fs
stos
mov
or
sub
sub
movsl
dec
dec
mov
movd
and
mov
lahf
stc
or
push
sbb
cli
pop
or
fisttpl
cmc
cmp
mov
aas
mov
cmp
orl
test
lock
stos
sbb
fs
jmp
jns
ret
in
divb
rcr
dec
into
jmp
pop
xor
adc
jno
in
adc
scas
cltd
in
out
xor
dec
xor
pop
mov
aaa
pop
fnstsw
outsb
clc
stos
push
jp
mov
mov
mov
cmc
adc
sbb
cltd
jle
mov
sub
push
fnstsw
pop
fiadds
fs
nop
loope
enter
pushf
pop
jp
mov
das
mov
xchg
sub
pop
mov
push
cmp
out
mov
adc
sub
or
icebp
pop
out
hlt
test
mov
rclb
ret
gs
or
dec
shrb
push
call
popa
mov
lods
mov
mov
repz
mov
emms
sbb
sbb
loope
and
call
stc
jnp
sbb
lds
loop
fs
jno
mov
pusha
imul
xchg
aaa
subl
bound
jbe
outsb
sub
xor
adc
inc
lea
jns
outsb
push
popf
in
sbb
and
push
arpl
icebp
jbe
cli
cmp
out
sahf
mov
dec
cmp
fs
push
wbinvd
xchg
in
mov
push
dec
int3
aad
add
cmpsb
xchg
fimull
push
push
or
lea
loop
out
fld
sub
and
loop
cmp
in
or
enter
repnz
jb
lea
xor
icebp
cli
xchg
dec
sub
fwait
js
mov
sub
clc
mov
jo
lds
inc
mov
sbb
icebp
sub
adc
addl
mov
pop
pop
sbb
outsb
and
js
jmp
int
fwait
rorl
xor
outsb
adc
int
out
cmp
push
dec
xchg
add
push
jl
xchg
outsb
js
push
clc
sbb
clc
call
ficomps
cmp
cmpsb
lea
jge
aas
dec
subl
add
ret
adc
scas
or
data16
in
pop
push
xor
push
out
mov
or
bound
pop
jg
leave
adc
rolb
push
cld
jo
push
ret
test
cmp
or
mov
pop
push
cs
adc
cmp
pop
pop
mov
xor
mov
stc
stos
sbb
inc
pusha
lret
fimuls
int3
sahf
xor
movsl
or
inc
xor
ds
aaa
ret
lock
xchg
repnz
xor
pop
inc
add
push
add
or
lods
jo
xchg
jp
xor
push
out
xor
leave
cmpb
and
frstor
outsb
imul
sub
sub
insb
add
in
into
cmp
sbbb
and
jb
jl
out
popa
push
es
xor
es
mov
sbb
push
daa
jae
sub
fldt
movsl
lret
loope
pop
inc
mov
cmc
mov
pop
sub
stc
adc
lahf
mov
mov
cmpsl
push
pop
push
daa
mov
in
std
mov
or
and
cmp
mov
test
rcrb
or
and
add
xchg
add
dec
mov
cli
mov
stc
push
outsl
lcall
test
test
adc
into
push
into
and
idivl
mull
les
mov
adc
adc
cli
lret
popa
xor
orl
aas
inc
lods
aas
add
stos
sbb
in
pop
subw
rcl
ja
sub
mov
or
fists
jecxz
jae
xchg
aam
test
add
inc
mov
inc
and
sub
icebp
xor
cmc
test
mov
dec
pop
outsl
ja
lods
or
test
adc
int3
ret
rorl
push
xchg
rclb
ds
mov
ds
dec
push
andl
push
mov
cli
jae
pop
or
mov
mov
lret
cmpsl
cmp
xor
test
jne
mov
dec
inc
test
fldcw
mov
cmp
aas
rcrb
push
push
fnsave
loopne
xchg
xlat
clc
cmpsl
pop
ds
push
cmp
call
inc
addr16
cmpsb
mov
mov
sar
mov
ljmp
andb
cmp
or
pop
or
add
scas
scas
mov
fucom
outsb
rol
cmpb
push
jecxz
xchg
inc
into
mov
push
enter
hlt
pop
sbb
std
xor
or
outsb
mov
cli
pusha
lds
push
mov
jbe
jo
push
out
ja
cmp
out
and
and
add
lret
push
stc
and
inc
jnp
inc
cmpsl
jno
cmpsl
mov
ja
jb
fs
pushf
push
mov
fsubs
out
sbb
sub
pop
push
mov
mov
aaa
cwtl
sbb
and
in
push
or
rorl
add
jns
sbb
cmp
fwait
testl
test
movsb
sub
fs
jmp
fdivr
xchg
adc
cwtl
lcall
cli
push
pop
out
push
and
repnz
movl
ret
jbe
jg
aad
mov
mov
xor
adc
iret
insl
jg
lea
popf
fistps
fidivs
inc
int
or
mov
in
push
sahf
nop
push
out
pop
push
or
adc
orl
loopne
and
lret
ret
add
or
sub
movsb
cltd
cs
sbb
mov
sub
xor
push
mov
stos
jno
mov
xor
sbb
insl
dec
frstor
inc
push
mov
test
and
push
push
sbb
ficoms
xchg
jle
sti
in
inc
insl
lcall
ds
push
add
out
imul
pop
testl
push
in
mov
ja
and
adc
push
js
and
rol
push
test
dec
lods
jle
mov
cmc
push
adc
cmp
jmp
sub
rclb
or
in
mov
pop
xchg
or
jmp
and
mov
std
fisubrl
mov
jp
or
in
stc
mov
cmp
cmp
cmp
aad
aas
sbb
push
sbb
nop
daa
pop
jb
sbb
dec
dec
fsub
inc
in
outsl
repnz
mov
add
jb
sbb
das
and
fcoms
ljmp
scas
gs
and
into
mov
lahf
xor
mov
ss
cmc
fildl
stos
scas
jle
aad
in
call
jge
xor
dec
in
dec
push
loop
mov
sub
mov
popa
shrl
inc
jbe
fcompl
push
jge
js
cs
out
lods
pusha
repz
icebp
dec
mov
cmp
xor
cmp
add
sub
pop
xchg
adc
shlb
inc
daa
mov
push
cltd
mul
int
nop
add
movsl
stc
aas
imul
mov
push
call
push
add
lea
shrb
inc
bound
adc
rclb
add
adc
sbb
add
cmpsl
push
push
inc
mov
xor
mov
aam
and
aad
ds
pop
mov
test
sub
movsl
arpl
pop
mov
popw
insl
imull
fists
pop
fs
cli
addb
pop
adc
mov
add
sbb
xchg
mov
sbb
xchg
mov
push
or
cmp
call
jbe
lods
push
dec
push
or
sub
jl
add
xchg
inc
add
mov
cmpsl
jecxz
jae
daa
pop
jle
sbb
inc
mov
jl
inc
incb
das
mull
sarl
das
adc
in
cs
cmp
outsb
pop
js
aad
inc
hlt
xor
cmpsb
push
lret
inc
std
pushl
aas
pop
in
mov
out
test
or
sahf
inc
mov
das
movsb
push
faddp
fldt
push
out
mov
loop
mov
loopne
ret
xor
aaa
enter
dec
not
cld
pop
xor
xchg
popf
push
and
std
adc
repz
movsl
out
sbb
popf
cmp
sahf
mov
xchg
and
pop
scas
mov
jae
adc
repz
icebp
insb
and
inc
js
inc
int
push
cmc
in
push
fs
mov
mov
jne
inc
loop
inc
add
aam
aaa
pop
aam
mov
push
aas
sub
mov
out
cmp
fnstcw
cmp
add
or
js
pop
xor
sub
add
sbb
mov
dec
shrl
je
mov
and
push
push
rorb
idivl
xchg
jmp
sub
jge
xor
or
fs
sub
repz
orb
sbb
dec
sub
lock
xchg
scas
lcall
push
and
mov
lods
mov
outsb
sbb
scas
aas
cli
dec
je
adc
sahf
pop
pmaxub
inc
pop
out
xor
insl
jl
inc
jmp
popf
xchg
dec
loop
data16
lds
push
cmp
inc
mov
je
loope
adcl
fbld
subb
shrb
mov
out
mov
orl
and
in
cltd
add
ds
jae
imul
int3
cmc
out
pop
or
ret
sbb
ret
cmpsb
sbb
sti
pop
sbb
and
sbb
bound
sub
xor
inc
ret
imul
inc
push
xor
arpl
mov
push
clc
cmp
dec
jns
ja
sub
dec
sbbb
push
inc
cli
sub
sub
cmp
ja
adc
sub
es
adc
leave
adc
add
inc
pop
jge
enter
out
cwtl
cmp
cwtl
adcl
fiadds
inc
call
and
pop
sbb
shlb
mov
xchg
xchg
xchg
lods
pop
xor
or
and
fisttpll
pop
xor
add
bound
lret
push
pushf
jl
iret
sub
cmc
sbb
jne
dec
xor
aas
sub
scas
aas
les
out
and
and
xchg
xchg
shll
jbe
out
push
into
in
gs
xor
cmpsl
dec
sub
mov
add
push
xor
adc
push
pop
dec
outsl
lock
add
cli
push
jge,pt
jle
cmp
mov
sub
or
dec
xchg
or
mov
addb
mov
sub
shrl
test
loop
outsl
int3
rcrl
adc
aas
xchg
lea
push
jne
nop
and
push
push
outsb
inc
movsl
pop
jno
and
inc
jge
js
push
imul
call
adc
or
mov
cmp
lods
mov
dec
mov
aad
add
sub
cwtl
fcoms
mov
fucomi
mov
or
adc
test
mov
stos
and
sbb
in
cmpb
fmull
cmp
cmp
rep
adc
jo
shlb
xchg
dec
ret
nop
in
inc
shrl
out
xor
jbe
push
xchg
xchg
xchg
jmp
lcall
sbb
mov
xor
or
aaa
outsb
mov
in
testb
lcall
xchg
xor
push
pop
pusha
imul
lea
scas
lret
outsb
adc
xchg
divl
das
inc
sbb
pop
iret
xchg
mov
sub
mov
mov
je
movsl
sub
in
adc
test
or
fdiv
lds
sbb
mov
mov
notb
xor
add
add
xchg
jb
into
enter
pop
loopne
sbb
jb
insl
and
xchg
stos
push
sbb
sahf
sbb
negb
sub
jb
push
clc
and
add
jno
out
push
nop
call
popf
lahf
sbb
xor
and
mov
js
and
test
dec
dec
aam
cmp
js
mov
mov
arpl
add
push
add
push
mov
inc
es
add
cmp
dec
and
mov
jbe
and
addb
imul
int
sbb
inc
adc
in
popf
xchg
sbb
mov
cmc
lahf
or
sahf
outsl
xor
pop
xchg
lret
mov
adc
mov
lea
cld
ret
filds
mov
or
mov
mov
stos
ljmp
test
cmp
pop
xor
push
jecxz
aas
add
subl
push
sub
mov
or
into
adc
dec
bound
ret
hlt
lahf
shlb
mov
xchg
mov
pop
or
ss
push
cld
pusha
scas
mov
pop
je
ficoms
dec
lea
xor
push
mov
dec
std
mov
push
arpl
add
lods
hlt
ljmp
pop
adc
dec
sbb
mov
les
push
jg
mov
mov
adc
sbb
fisubrs
imul
inc
sub
cmp
jno
hlt
cwtl
pop
and
cmp
push
in
sti
dec
in
shrb
pop
xor
sbb
insl
shrb
scas
addb
movsl
imulb
rcll
cmp
mov
cmp
in
mov
call
test
stos
rcll
push
sarb
ficoms
ljmp
xchg
dec
out
sbb
cmp
mov
std
pop
xchg
jbe
cmpsb
lds
sbb
inc
jmp
push
mov
enter
xor
or
pop
add
add
xchg
pushw
mov
mov
push
cmp
aam
cwtl
test
pop
or
sub
ret
jle
fstpt
inc
outsl
mov
add
mov
fsubrs
push
js
lret
inc
xor
fwait
xlat
jp
and
lcall
mov
pop
cld
out
pop
pop
mov
adc
pushf
js
inc
push
jl
mov
sub
mov
mov
bnd
in
or
ljmp
cmp
into
lcall
aas
push
jae
sub
or
pusha
mov
ja
pushf
mov
pop
jl
lcall
stc
call
jl
push
mov
fwait
sahf
mov
xchg
push
pop
lods
xchg
jb
sarb
inc
icebp
xor
or
push
repnz
jo
mov
jnp
lods
and
xchg
push
mov
sub
scas
push
ljmp
mov
inc
add
pop
lods
shlb
jecxz
call
addb
data16
pusha
cmp
adc
jg
mov
adc
sub
xchg
lds
cmpsl
rorl
cmp
fstpt
push
leave
jmp
cld
lahf
inc
outsb
sbb
das
pop
pushf
pop
icebp
mov
push
insl
in
and
cmp
jae
inc
movsl
incl
or
jl
inc
mov
mov
sub
cmp
std
xchg
insl
adc
jbe
mov
das
imul
inc
mov
adc
daa
inc
cmc
and
or
sti
stos
lods
sbb
daa
xchg
adc
xchg
pusha
cmp
mov
clc
pop
call
out
push
push
fstpt
mov
lods
inc
jp
add
and
sub
and
pop
or
std
inc
mov
lds
adc
sbbl
std
adc
dec
nop
push
ficompl
mov
insl
sub
add
mov
mov
cmp
test
pop
out
icebp
sahf
xor
sbb
mov
dec
pop
and
jns
fists
repnz
shrl
loope
lcallw
ja
arpl
cmp
dec
xorb
call
lods
pop
test
xor
push
or
dec
mov
jl
sub
aad
lods
inc
movsl
and
or
in
fstps
or
jno
mov
adc
test
aaa
rorl
mov
cli
jae
xchg
js
repz
xchg
adc
inc
mov
sbb
movl
call
push
xor
inc
jp
add
outsl
ret
dec
outsb
nop
andb
pusha
mov
mov
pcmpeqd
mov
add
jge
sub
push
xor
fs
mov
push
jg
scas
cmc
sbb
mov
xlat
jecxz
push
jecxz
xchg
cmpsl
cld
lcall
mov
out
rcll
in
sub
shlb
mov
dec
jno
dec
test
sbb
pop
push
mov
lods
cltd
ret
mov
push
jb
jmp
aad
enter
mov
sub
pop
cli
fs
imul
aaa
loope
pop
pop
das
jmp
xchg
mov
into
cmpsb
fcoms
cld
inc
jno
jmp
and
adc
icebp
dec
ficompl
jae
jge
xchg
pusha
cmp
loop
movsb
xchg
aaa
loope
push
out
lret
sub
orw
rol
sbb
add
adc
push
xchg
icebp
inc
jp
xlat
sbb
or
push
and
push
dec
pop
stc
cmc
movsl
sbb
insb
shrl
dec
mov
xchg
cmp
iret
mov
popf
enter
fiaddl
jp
lods
mov
jge
inc
inc
or
loope
movsb
cmp
xchg
in
mov
jae
adc
sbb
inc
sbb
xchg
mov
inc
mov
xchg
loope
pop
jo
addb
or
stc
std
das
pop
mov
push
xchg
icebp
cli
mov
dec
dec
inc
pop
ficoms
lods
pop
mov
xor
cmp
sbb
sub
cs
vprotb
push
push
ljmp
inc
cmp
jbe
xor
or
lcall
sahf
rolb
fwait
cli
into
lret
fsubrl
push
pop
aam
in
out
sbb
push
mov
or
jae
daa
jp
xchg
jno
cmp
adc
dec
push
mov
jno
cmp
mov
imul
add
push
xchg
je,pn
jle
inc
dec
cs
pop
out
rol
fsubrs
xor
scas
pusha
arpl
and
push
cmc
test
sbb
aad
lret
jnp
subl
xchg
std
dec
hlt
push
sbb
xchg
int
fbstp
andl
xchg
int3
jae
xor
in
popa
push
movl
popf
repnz
jle
sub
ja
popf
or
sti
sbb
or
pusha
outsl
fistpl
xor
xchg
test
or
out
inc
ja
out
enter
cmp
jno
out
pop
xlat
pop
xchg
sbb
addb
adc
rclb
adc
xor
mov
mov
xchg
notb
mov
xchg
xchg
rorl
add
jae
sub
and
sti
pop
jge
addr16
push
or
mov
cmp
cmc
pop
test
sahf
arpl
xchg
into
ljmp
out
mov
shl
xor
jae
sub
dec
jbe
or
cmp
and
sub
cmp
add
xchg
mov
inc
loopne
sub
inc
mov
dec
call
in
jle
xor
add
cwtl
bound
pop
adc
lahf
jns
ret
fwait
sbb
mov
adc
or
or
outsb
adc
lods
mov
out
sub
icebp
andb
out
ljmp
inc
push
or
aam
cmp
push
mov
in
out
sub
repnz
and
out
arpl
pop
loop
and
xor
xchg
mov
std
loope
pop
idivl
insb
mov
xchg
inc
pop
cmp
xor
loope
stc
push
add
cmp
xchg
mov
sbbb
mul
push
push
mov
loopnew
cmp
sbb
scas
shll
mov
sbb
add
lahf
inc
loop
jo
push
cmp
stc
mov
int3
ja
xor
iret
cwtl
adc
out
int3
mov
adc
ljmp
pop
mov
inc
mov
int3
lds
sbb
rcrl
shl
jns
movsww
or
xor
jo
in
loopne
dec
jmp
or
mov
pop
xchg
pop
add
cmp
xchg
xorl
jb
mov
mov
into
adc
or
adc
and
rcrb
scas
add
pop
cs
xlat
and
push
jns
lcall
xchg
mov
ljmp
scas
cmp
jmp
jbe
xchg
push
pop
push
add
test
je
xor
das
push
sbb
pop
movsb
call
shl
xchg
mov
or
xchg
xchg
jle
aas
xchg
sbb
rcll
inc
mov
jns
int
movsb
xchg
lret
cmp
mov
scas
inc
out
mov
aad
mov
mov
out
aam
mov
out
mov
sbb
jmp
mov
in
xchg
inc
mov
out
sarl
das
lahf
push
mov
std
imul
inc
and
jmp
sbb
cmp
xlat
pop
shrl
sbb
and
fldenv
into
rclb
inc
push
cmc
lret
into
mov
mov
test
popa
mov
movsl
lea
es
in
fsqrt
stos
xchg
data16
rorb
push
mov
fdiv
xor
push
fldpi
jl
loop
fcmovne
sbb
sti
in
sbb
and
inc
into
push
adc
pop
mov
ficoml
mov
pop
add
loope
ja
mov
sahf
les
mov
adc
lret
cmp
shlb
mov
mov
out
inc
pop
in
push
xchg
and
test
sub
adc
loop
xchg
cmc
addb
push
cmpsl
pop
jge
dec
xchg
jne
add
js
dec
mov
test
jmp
arpl
or
push
and
and
push
mov
loopne
test
or
xchg
shll
cmp
imul
ds
pop
jecxz
inc
lret
sahf
sbb
out
cmp
mov
xchg
sub
dec
inc
mov
out
les
mov
inc
cli
or
std
addl
mov
xor
dec
push
xor
call
lcall
jns
mov
loop
and
xchg
call
mov
mov
pop
stos
sbb
call
mov
stos
xchg
fs
sbb
dec
push
push
fisubl
movsb
or
subl
daa
jl
jp
iret
jns
pop
in
mov
test
fistl
mov
inc
xchg
sbb
stc
fldl
xchg
cli
jmp
shll
push
dec
add
mov
mov
addl
sub
and
mov
push
xor
cmp
inc
xor
lea
push
adc
sbb
sbb
icebp
fs
les
sbb
call
test
mov
mov
push
aam
and
mov
ljmp
xchg
mov
scas
out
bound
push
icebp
jmp
cs
dec
scas
in
mov
nop
xor
call
mov
sub
fs
sbb
mov
pop
icebp
jmp
push
fsubrl
push
jmp
xorb
out
fwait
aad
repz
gs
adc
cmp
xchg
xchg
outsb
repz
dec
nop
nop
cltd
cld
jbe
mov
outsb
fdivrp
mov
sbb
xor
std
loop
icebp
nop
inc
aaa
push
jns
and
inc
push
movsb
and
push
adc
or
loop
sbb
aas
or
repnz
dec
in
xchg
add
sub
shll
int3
jmp
gs
scas
adc
shr
int
test
sub
xchg
mov
ret
jns
divl
lret
and
fisubl
inc
mov
fstl
lcall
js
or
dec
mov
inc
xchg
pop
stos
jge
dec
cmc
add
xchg
or
int
pop
jmp
mov
xchg
add
add
mov
dec
xchg
jg
and
sbb
dec
lret
lret
rcll
adc
xchg
xchg
out
cmpsb
ret
outsl
mov
sahf
inc
mov
xlat
add
fdivl
cld
mov
xlat
and
mov
filds
shr
pop
add
add
sub
int3
imul
mov
mov
mov
pop
jge
in
add
or
in
movlps
test
por
mov
sbb
push
jle
outsb
adc
adc
inc
fildll
je
jno
cmpsl
mov
adc
pusha
iret
sbb
mov
lock
scas
xor
loope
xchg
mov
jnp
cmc
cmp
fcomps
or
clc
mov
push
xor
pop
push
sub
adc
inc
ret
sar
add
lods
mov
enter
mov
aas
pop
pop
mov
add
push
jp
clc
out
idivb
pushf
not
lret
lret
dec
push
repnz
sbb
pop
sbb
sub
pop
ljmp
pushf
sbb
fcmovb
inc
lds
jle
cs
mov
and
adc
pop
pop
mov
cmp
popf
mov
js
aam
sahf
fs
jne
icebp
std
rorl
cwtl
jg
pop
loope
mov
and
cmpsb
dec
inc
cli
push
out
sub
leave
and
and
icebp
mov
xor
mov
test
pop
cld
movsl
and
jl
sub
add
pop
xchg
jp
imull
sbb
cltd
int3
xchg
mov
lret
add
repnz
jmp
fcomip
dec
jns
lcall
rcrb
push
push
testl
mov
cltd
negb
jb
mov
inc
jo
bound
pop
inc
mov
cs
mov
shll
int
cmp
pop
data16
cmc
je
sbb
sahf
mov
push
cli
in
inc
stos
jge
test
jl
jae
lock
sbb
js
jle
pop
sbbb
cmc
mov
sti
jae
push
mov
and
sbb
jmp
loopne
int
mov
add
mov
push
pop
cltd
mov
divl
inc
into
mov
out
repnz
jp
push
and
lods
ficoml
sbb
rorb
lods
xchg
js
repnz
xchg
adc
mov
lret
inc
sbb
and
popf
sbb
xorl
jecxz
or
inc
or
fimull
pop
mov
push
add
mov
jb
cmp
pop
mov
push
pop
pop
sbb
aad
xchg
or
cmpl
pop
inc
mov
xor
fldl
std
adc
sbb
cmpsb
add
xchg
out
adc
aas
aam
lcall
or
mov
ds
aam
enter
mov
mov
and
faddp
ja
cli
loope
xor
or
add
out
inc
adc
dec
jno
add
out
sahf
mov
lds
add
cmp
mov
push
or
into
int
ljmp
sbb
nop
mov
in
pop
jno
stos
out
xor
cwtl
and
aam
lods
mov
xor
popa
and
xor
or
xor
inc
jge
cmp
cwtl
jecxz
pop
cmp
xor
int3
divl
inc
std
sti
adc
add
xchg
imul
inc
pushf
xchg
je
adc
xor
push
ficoml
xchg
xlat
cs
scas
stos
dec
xor
fnstcw
push
jae
js
lahf
cmp
stos
test
sbb
add
leave
and
cmp
icebp
arpl
jecxz
cwtl
imul
and
decb
inc
mov
in
adc
pop
stos
int
out
out
pop
mov
jne
push
mov
sbb
jg
or
gs
outsb
sub
xchg
shrb
jecxz
cmpsb
ss
pop
rcl
inc
sar
int
push
stos
xlat
mov
mov
rcrl
and
lret
ret
mov
ret
jge
xor
jecxz
cmp
pop
xchg
adc
jns
fwait
enter
jmp
pop
xchg
push
and
push
jl
inc
and
dec
arpl
nop
test
out
adc
scas
pop
adc
test
push
mov
pop
xchg
dec
add
mov
dec
stos
jo
lods
mov
sub
bound
add
jno
mov
lods
testb
push
mov
nop
sub
xlat
ficompl
push
or
lods
add
sbb
fstps
dec
add
ret
mov
fcoml
mov
jns
ret
jo
cmp
call
jge
xchg
dec
movsb
int3
xchg
test
shrb
dec
nop
mov
arpl
push
lahf
outsb
std
popf
cmp
jbe
pop
adcb
add
mov
dec
loop
cmp
cmpsl
and
mov
adc
leave
stc
in
inc
negl
sub
adc
ja
pop
inc
fs
xor
xor
sbb
dec
aaa
lahf
loope
subb
sbb
add
lret
mov
pusha
xchg
cmp
mov
sub
cli
inc
and
into
inc
push
out
adcl
mov
push
pop
arpl
fisttpll
hlt
imul
dec
and
jg
in
call
sub
sar
cmp
gs
mov
jbe
int3
pop
call
int
xchg
xchg
insl
pop
and
xchg
test
shlb
push
out
stos
ss
cmc
loopne
xchg
and
add
jns
incb
pusha
or
mov
xor
and
stos
mov
dec
into
shl
adc
mov
loopne
stos
ljmp
mov
insl
int3
cltd
mov
lds
push
inc
mov
mov
outsb
xchg
stos
shl
out
leave
or
cwtl
sti
mov
les
xchg
cmp
xor
jno
lods
mov
mov
jnp
inc
rorb
mov
cmp
mov
xor
push
pop
popf
out
dec
xor
mov
sahf
stos
int
dec
sub
xor
jge
fwait
add
xchg
sbb
divb
mov
mov
lcall
jecxz
lods
sbb
jmp
fwait
roll
dec
push
or
cld
scas
cmp
aad
cmp
or
sbb
into
addr16
dec
lahf
aaa
jmp
xlat
imul
inc
lahf
repz
nop
add
mov
loope
aas
ja
lock
xor
negl
mov
hlt
mov
mov
lret
inc
mov
test
mov
in
push
jcxz
fildl
and
add
sbb
pop
mov
add
leave
xchg
ds
cmp
daa
and
arpl
pop
xchg
add
add
inc
dec
pop
cmp
push
imul
dec
movsb
ljmp
aaa
mov
push
or
test
adc
jo
cwtl
push
cmp
cmp
je
cmpl
cmp
orb
jno
sbb
pop
in
dec
scas
js
dec
mov
aad
push
add
dec
xchg
bound
or
in
hlt
cmp
add
dec
in
ret
call
test
adc
push
mov
addr16
and
mov
cltd
mov
stc
xchg
push
cli
mov
loop
incb
mov
push
pop
jno
out
cmpsl
xor
test
jp
lcall
shrl
mov
cmc
mov
cmc
leave
ljmp
lea
scas
inc
sbb
data16
adc
dec
mov
aas
and
stos
or
lcall
xchg
int3
cli
jae
mov
mov
push
out
popf
dec
inc
add
mov
sbb
xor
jno
mov
aam
lds
mov
aad
jmp
popf
pop
xchg
sarl
loope
jmp
cmpsl
xchg
leave
repz
mov
icebp
rol
add
fdivrl
xor
mov
mov
data16
sbb
mov
andl
add
ficompl
xchg
adc
fcmovbe
mov
jns
push
mov
mov
bound
scas
clc
push
imul
mov
mov
mov
sub
sahf
dec
addb
cmp
jecxz
pop
adc
loop
adc
orb
insb
pop
and
lods
fucomi
fwait
sub
push
dec
xchg
jno
fbstp
add
test
dec
and
add
loopne
xor
mov
sbb
pop
fs
ss
sub
xor
push
inc
std
jb
inc
jns
and
test
or
fs
rclb
mov
dec
adc
xchg
jae
bnd
push
mov
or
sbb
push
dec
and
clc
insb
pop
je
cmp
in
arpl
imul
xchg
mov
daa
filds
jecxz
out
jle
fdiv
adc
sarl
rcrb
out
or
dec
mov
jb
and
mov
cmp
pop
stos
xor
ja
movsl
roll
adc
rclb
arpl
test
jge
cmp
ss
cltd
cltd
jl
js
mov
cli
das
mov
loopne
mov
cltd
dec
cmp
cld
xchg
mov
sbb
mov
mov
dec
sbb
inc
in
pop
lea
pop
dec
mov
dec
cmpsl
add
sbb
jl
sbb
in
jbe
fsts
pop
push
inc
mov
xor
jmp
sbb
pop
js
in
xchg
or
jle
js
nop
stc
lds
in
data16
repz
orps
xchg
xchg
repnz
push
lods
sbb
repz
cmpsl
int
shrl
xchg
clc
loop
pop
in
cmpsl
test
mov
inc
adc
iret
mov
adc
movsl
pop
jbe,pt
out
dec
lods
and
push
aaa
loop
jg
sub
xchg
ljmp
and
or
dec
mov
or
outsb
call
fwait
mov
sahf
push
xchg
mov
mov
enter
mov
inc
dec
hlt
loop
in
cmp
xchg
xchg
xor
and
das
rcrl
mov
xor
inc
cmp
pop
xor
xor
jo
push
pop
jno
mov
es
popa
test
pop
jmp
int
aam
inc
cmp
repnz
daa
lods
jmp
mov
lods
xchg
pop
stos
and
icebp
dec
ss
mov
pop
push
and
mov
mov
inc
adc
adc
or
sti
pusha
popa
xor
loopne
mov
pop
sbb
push
fdecstp
xchg
dec
out
fsubl
cmpsb
std
mov
loop
dec
mov
out
pusha
sub
daa
and
les
jmp
std
mov
xor
ret
lret
xor
test
imul
pop
sub
test
push
lahf
movsb
lock
ret
sbb
arpl
cld
push
cwtl
or
add
pop
adc
sbbb
lret
mov
aad
xor
aaa
jne
sub
aam
idivb
lods
mov
jg
lods
and
sti
pop
fsubrl
mov
sub
fs
xchg
and
std
mov
pusha
or
or
push
outsb
sub
sbb
loop
and
and
jb
js
add
sahf
dec
xlat
lcall
sub
jbe
push
inc
lods
sub
mov
xor
pusha
mov
je
and
dec
mov
mov
popa
or
mov
lea
push
jbe
sbb
cmpsl
xchg
jbe
cmc
cwtl
sbb
outsb
cmp
ficoml
adc
pusha
sub
mov
aas
lea
adc
lds
mov
lock
orl
adc
fsubrs
xchg
nop
dec
std
cli
fldl
pop
aam
test
in
and
imul
inc
js
imul
dec
dec
add
xchg
test
std
aad
inc
and
sub
dec
inc
jne
mov
xor
xchg
fwait
mov
js
push
mov
aad
insb
imul
sti
xchg
cwtd
dec
loopne
cmp
xchg
leave
cmp
jbe
sahf
imul
cli
dec
call
cld
push
fwait
pop
stos
in
dec
cmp
fmulp
pushf
test
and
pop
sbb
and
push
out
stc
cmp
cmp
push
nop
sub
dec
jnp
inc
jp
je
les
xlat
cmpl
dec
in
mov
test
hlt
mov
out
mov
lcall
in
in
and
cmp
test
aaa
repz
cmp
mov
mov
push
mov
or
xchg
pop
aam
jge
add
push
and
mov
ret
inc
cmp
insl
xor
dec
push
pop
mov
pop
jmp
cwtl
pop
jno
aas
cld
loopne
lds
insb
dec
ds
pop
fwait
in
mov
test
adc
loop
add
mov
inc
fadds
mov
daa
dec
out
arpl
bound
aas
xchg
fs
xchg
aaa
push
mov
mov
push
jg
xchg
adc
dec
aaa
lahf
add
add
in
mov
push
jp
or
cltd
bound
xchg
test
cs
adcl
cli
lcall
add
lods
fwait
xchg
add
dec
mov
xor
sarl
and
mov
or
js
add
xchg
filds
stos
xor
mov
jecxz
adc
aas
cmp
jnp
jne
mov
fisubl
mov
add
rclb
jb
cmp
pop
outsl
add
ja
je
mov
inc
sbbb
mov
data16
es
inc
dec
mov
mov
movsb
inc
jmp
jecxz
push
js
sub
insl
out
pop
arpl
adc
mov
push
lds
pop
push
push
push
xor
mov
inc
test
cwtl
jne
push
cld
imul
push
dec
inc
aam
push
aas
cld
lahf
jns
adc
test
cmp
pop
rcrb
orl
pop
mov
and
mov
add
xor
movsl
lahf
lea
fistpll
inc
pop
pop
mov
movsl
xor
mov
pop
icebp
je
mulb
jne
mov
or
jmp
jle
and
and
mov
loopne
ds
mov
or
cli
rcrb
pusha
fildll
xorl
pusha
sbb
mov
fstpt
xchg
pusha
sbb
lods
jecxz
jmp
mov
int3
int
xchg
add
daa
test
cli
pop
xchg
in
into
pop
stos
lret
loop
dec
jmp
je
dec
adc
ficompl
fcomps
pusha
sub
lods
cmp
popa
je
mov
or
movsl
stos
or
out
inc
faddp
mov
scas
cld
xchg
xchg
cmp
in
pop
pop
cwtl
mov
sub
lods
outsl
jns
je
mov
stos
gs
or
inc
push
lcall
inc
or
fists
aaa
mov
dec
jnp
push
sub
loopne
pop
scas
pusha
pop
int3
and
push
mov
push
imul
ficoml
loopne
data16
xor
add
es
aad
and
jg
mov
icebp
out
xchg
dec
aad
push
mov
out
test
pop
mov
fmul
push
fwait
push
push
inc
outsb
lds
cmp
inc
mov
push
mov
leave
xor
rorb
cwtl
pop
cmp
test
imul
xchg
sbb
sbb
cwtl
sub
daa
mul
inc
loope
push
rcll
adc
and
out
inc
shll
stos
movsl
inc
popf
cmpsl
cmpsb
fs
adc
jge
mov
push
sbb
jno
hlt
jo
popa
ret
fisubl
dec
call
fistps
lret
mov
xor
rolb
dec
sub
test
addb
enter
push
scas
in
sub
insl
gs
dec
mov
stos
add
xor
pop
ds
mov
data16
data16
cmp
fcmovu
ds
mov
outsb
ret
movsb
mov
xchg
clc
scas
inc
pop
and
in
mov
ljmp
jp
pop
lods
in
mov
stos
testl
push
in
fadd
xor
lock
xor
gs
jge
ds
pop
push
sti
adc
loope,pt
push
jecxz
push
cmp
xor
xchg
mov
mov
dec
ds
scas
add
or
and
add
imul
out
mov
popf
dec
movsl
mov
fmulp
iret
jb
or
add
cmpsl
add
mov
jecxz
inc
sti
icebp
icebp
inc
je
add
pushf
fistl
in
mov
in
ljmp
pop
cld
shlb
dec
out
and
xlat
arpl
add
test
pop
outsb
shlb
pop
dec
std
mov
data16
mov
pusha
xchg
push
push
lcall
out
or
stos
mov
push
mov
jmp
and
stc
shrl
xor
cmp
pop
insl
pop
popa
cmc
jle
ds
fistpll
fmuls
mov
and
or
pusha
or
adc
xor
adc
push
add
mov
adcl
sahf
dec
or
arpl
cld
outsb
push
sti
xchg
inc
sqrtps
out
push
loopne
pop
adc
mov
icebp
insl
pop
outsb
xor
or
cmp
stos
fisubrs
dec
cs
repnz
adc
sarl
sti
jo
cmpsb
ret
ds
mov
iret
push
mov
movsb
cmp
cmpl
sbb
iret
ljmp
jge
xchg
mov
int
push
sbb
dec
sbb
in
test
push
add
adc
int
push
loop
push
ljmp
xlat
out
call
mov
ja
inc
jns
inc
mov
movsl
adc
xchg
sahf
loop
sub
inc
fst
sub
sbb
xor
fimull
aam
xor
loopne
movsl
mov
lods
and
add
scas
lea
dec
pop
inc
testl
sub
xor
push
or
or
dec
daa
xlat
and
mov
jp
xchg
xchg
jmp
dec
out
movsl
dec
shufps
mov
jmp
jnp
ss
dec
inc
push
out
jne
notb
push
mov
push
lret
dec
pushf
mov
pop
dec
imul
and
mov
sbb
dec
or
rorl
push
jge
test
subb
lock
ret
ret
cmpsl
fnstcw
push
mov
sbb
dec
test
xchg
mov
icebp
stos
pop
dec
imul
cmp
mov
xor
xor
mov
push
enter
xchg
negb
das
ss
rclb
stos
mov
repz
das
adc
das
inc
add
adc
or
dec
pop
xchg
cmc
xor
stc
mov
cld
cmpl
ljmp
mov
imul
mov
fcompl
es
adcl
cmp
pop
xor
xor
hlt
mov
das
gs
ret
inc
cmp
cmp
cmp
xor
aas
js
jg
mov
mov
into
cld
jecxz
or
or
popf
negb
wbinvd
dec
pop
push
dec
rcrb
out
xor
xchg
mov
adc
fs
fmuls
or
sub
adc
int3
xor
push
dec
mov
lock
arpl
ds
sbb
sbb
test
popa
mov
testl
dec
pusha
rcll
mov
cli
xchg
mov
sbb
loop
xchg
ja
mov
pop
pop
clc
out
mov
negb
cmc
add
mov
cltd
xor
cmp
add
cld
xor
sti
xchg
in
hlt
push
xor
add
stos
and
add
pushf
das
stc
xchg
mov
push
xchg
xlat
adc
clc
loop
or
adc
inc
sarl
nop
loope
lds
cmp
mov
scas
out
jno
pop
cmpsb
nop
cmc
lock
dec
aam
xlat
jae
add
push
mov
mov
dec
cmp
rcl
out
sub
addb
push
push
jbe
out
shlb
push
gs
dec
xor
push
sbb
in
push
jnp
add
xchg
pusha
lods
pop
jmp
mov
sub
jmp
push
add
shll
mov
or
xor
stos
das
mov
stos
mov
pop
stos
imull
or
insl
sub
dec
add
jne
ss
or
pop
fdivr
movsb
cli
push
fadd
mov
dec
push
jle
mov
fidivrs
iret
push
cmp
xchg
xchg
rolb
jp
mov
sub
rcll
inc
clc
mov
xchg
in
xchg
icebp
mov
xchg
cs
fbld
stos
fmuls
in
mov
pop
jae
sub
in
push
xor
sub
xor
ret
rcl
inc
pop
addb
push
jmp
lock
mov
jno
lods
cmp
pop
das
jae
push
sbb
mov
mov
in
lock
idivl
ja
mov
outsl
sub
hlt
mov
inc
popf
jmp
pop
and
inc
cwtl
sub
and
cli
jge
push
hlt
pop
test
xchg
sub
jecxz
pop
sti
push
test
ret
or
rorl
mov
in
jae
sbb
jle
hlt
jecxz
push
inc
inc
push
inc
mov
dec
mov
jno
push
pop
mov
inc
js
cmp
btc
push
or
xor
cmp
jbe
insl
ss
sbb
lret
adc
inc
mov
lret
test
loop
rcrb
je
scas
xchg
cs
mov
mov
mov
push
jno
mov
push
sub
mov
add
fsubs
icebp
sub
jmp
test
nop
xchg
mov
mov
push
mov
mov
in
xchg
shrl
out
jg
lea
arpl
call
mov
sub
loope
std
add
xor
dec
aad
loopne
fisubrs
jg
add
into
mov
and
fcomp
and
jbe
jl
pop
das
jbe
xchg
sub
int3
dec
imul
icebp
cmp
lret
inc
mov
cmpsl
or
pop
icebp
adc
add
dec
jge
mov
mov
jno
lods
inc
mov
movsb
xchg
int
fwait
mov
xchg
shl
jp
jl
fistl
cmp
dec
push
or
ljmp
cmp
add
mov
mov
daa
fcompl
push
mov
mov
int
adc
mov
movsl
inc
fs
enter
cmp
loope
adcl
jle
pop
pop
insb
int3
cmp
mov
cmp
jb
divl
incl
movsl
jmp
in
dec
xchg
or
mov
fisubs
mov
jae
cld
scas
sub
idiv
mov
pop
test
jmp
in
dec
pop
sub
cld
xchg
cmp
out
shll
add
xor
cmp
push
sbb
lods
sbb
std
out
jnp
mov
fsts
dec
aas
std
jno
pusha
test
mov
pop
inc
push
lea
and
xchg
fistl
je
iret
addr16
test
xor
push
or
arpl
ret
mov
inc
popf
sbb
add
rorl
push
add
mov
jnp
sub
sarb
xor
xor
popf
subl
unpckhps
sbb
out
dec
addb
imul
xorb
inc
outsb
mov
lods
addl
outsb
xchg
dec
dec
test
out
or
int3
mov
sub
mov
jo
aad
in
mov
lds
sbb
daa
and
dec
rcrb
test
inc
adc
je
ret
iret
mov
clc
dec
xchg
mov
sub
jle
mov
push
insl
jp
cmc
inc
leave
mov
xchg
cmp
movsl
stc
jle
jge
les
sbb
push
jecxz
mov
xchg
pop
xchg
lods
mov
fsin
insl
adc
xchg
in
sbbl
das
xlat
je
fsts
clc
nop
cmp
loop
and
imul
pop
fistpl
jp
rorb
nop
neg
and
jns
push
icebp
clc
pushf
xchg
push
adc
std
sti
or
inc
mov
imul
mov
mov
mov
leave
lret
add
or
lret
cmp
dec
test
ret
xchg
add
popa
and
or
inc
test
xchg
mulb
lods
pushf
daa
rclb
pusha
adc
jl
rcll
jne
sub
sti
cld
stc
in
mov
dec
xlat
inc
jbe
mov
xchg
ret
inc
enter
xchg
jns
lcall
fisttpl
rorl
jno
aam
fimull
repnz
and
mov
into
xchg
aas
inc
ret
adc
gs
pushf
pop
out
out
push
mov
loop
mov
and
fldl
jp
test
rorb
fwait
jne
or
bound
movsl
xchg
mov
int
mov
fisubrl
xor
daa
out
fnstsw
dec
push
add
mov
mov
mov
lret
inc
test
rorl
sub
jns
sub
pop
push
jbe
and
xchg
xor
mov
xor
pop
xchg
jl
cmp
pop
in
xchg
xor
mov
xchg
xor
cmp
pop
mov
xor
adc
and
inc
cli
lret
jb
jmp
das
and
cmp
jbe
enter
push
mov
sub
jnp
insl
test
fnstsw
daa
loopne
div
pop
xchg
sbb
jnp
adc
jmp
addr16
mov
scas
jns
movsb
in
cmpsb
fildl
test
leave
jno
or
lea
mov
and
out
pop
in
push
and
mov
daa
cmc
pushf
hlt
insl
lock
frstor
mov
dec
pushf
push
mov
jl
jl
stos
mov
hlt
push
push
xor
inc
pop
andb
inc
jo
pop
inc
test
jmp
and
sbb
mov
idivl
in
outsl
and
cmp
mov
cmp
xor
lock
nop
negl
xchg
imul
push
jmp
inc
aam
fisttpl
xor
movsb
inc
hlt
sbb
mov
jo
pop
mov
ds
mov
movsl
movsb
dec
testb
adc
mov
xchg
arpl
cmp
mov
addr16
mov
xchg
mov
mov
daa
mov
js
jmp
xor
aam
sub
shr
les
leave
lcall
xchg
mov
subb
testl
imul
sub
mov
insl
sub
stc
jl
iret
dec
or
clc
rcrb
mov
mov
and
rorb
mov
jl
inc
in
aas
aad
or
or
mov
repnz
insb
insl
ss
test
in
mov
jbe
cwtl
rcll
imul
popa
mov
xchg
jne
jne
dec
cmp
enter
or
clc
sbb
sub
jae
popf
test
or
inc
pop
sbb
out
loope
stos
and
sub
test
sub
loop
and
or
and
leave
lahf
lods
mov
fucom
pop
mov
es
sbbl
imul
add
mov
mov
je
or
mov
jno
xor
adc
jno
pusha
cmp
mov
int
dec
lcall
cli
sbb
adc
std
fcmovb
aam
jo
push
cmpsb
rcl
jl
lret
xchg
or
je
out
repz
push
int3
and
adc
movzbl
ds
xchg
cmp
dec
mov
aaa
pop
sub
in
inc
aas
lods
cmp
xchg
inc
xchg
test
mov
mov
push
inc
movsl
xchg
jmp
fidivrs
insb
int
je
sbb
fwait
xchg
in
mov
adc
cld
xor
into
lret
out
push
jle
pop
jns
push
adc
mov
adc
scas
xchg
mov
xlat
cli
mov
aad
jne
shll
js
and
fcmovne
fwait
daa
aad
xchg
add
push
jmp
scas
xchg
rcll
sbb
arpl
out
inc
out
cmp
push
fildll
dec
mov
adc
clc
xor
sti
sbb
cs
xor
sbb
fmul
ret
jns
or
in
loopne
rorb
fstpt
dec
call
xor
pusha
inc
xchg
adc
add
mov
or
push
arpl
pop
lock
lods
and
imul
dec
xchg
push
push
xor
mov
scas
clc
push
mov
sbb
dec
inc
xchg
mov
adc
lcall
popa
inc
inc
imul
sub
sahf
cmp
scas
pop
mov
sbb
mov
adc
lds
pop
int
cli
inc
xor
xchg
adc
jle
test
cmp
leave
xchg
mov
loop
out
sbb
ror
outsl
lods
jl
rclb
lret
push
testl
shll
dec
iret
xlat
cmp
pop
sbb
rclb
sub
mov
rorl
mov
test
dec
pushf
mov
xchg
sarl
aam
xchg
or
lret
jle
xlat
aad
sub
sbb
cmp
cwtl
xchg
out
and
ret
fs
pushf
pushf
push
and
repz
and
sbb
pop
movsb
pop
and
xchg
xlat
add
out
ss
in
jne
shll
or
cwtl
inc
sahf
sti
outsl
insl
stc
in
push
xchg
in
mov
stc
mov
or
mov
ss
or
push
inc
pop
gs
scas
adc
arpl
js
jb
les
loope
sub
pushf
das
xchg
mov
nop
fidivrl
dec
imul
cs
jp
stc
pop
add
clc
jecxz
fisubl
or
xorb
nop
dec
inc
fsub
movsb
icebp
inc
fdivs
cmp
aas
push
sbb
adc
aad
jb
sbb
xchg
push
adc
sti
inc
inc
int
sbb
pop
lods
sub
test
test
pop
repnz
xlat
push
push
push
push
jecxz
lds
and
adc
sar
scas
mov
cmp
mov
xlat
pop
sbb
sbb
je
inc
gs
lods
popf
andl
sub
pop
inc
cs
lret
stos
sbb
insb
fcmovnu
add
xor
leave
loopne
arpl
xchg
scas
cld
mov
sub
jne
jecxz
push
data16
cmp
ljmp
cmc
ss
test
lahf
pushf
icebp
push
cmp
mov
xchg
jp
sub
loopne
add
out
outsb
mov
lds
movsl
pop
inc
xchg
cmc
mov
mov
ds
or
fs
inc
call
xchg
xchg
es
mov
dec
shll
lods
jmp
mov
lret
shrl
cmp
cmc
out
pop
pop
repz
fcomp
dec
stos
les
in
sub
dec
add
jle
popf
lock
dec
mov
aaa
adc
std
cs
imul
xor
filds
ljmp
inc
lods
enter
pop
sub
sub
orb
fistpll
or
int3
out
in
mov
out
dec
ret
add
sbb
insb
in
arpl
sti
icebp
cwtl
dec
dec
push
sbb
lahf
mov
sub
rcrb
mov
je
sub
stos
into
jmp
xor
cs
pushf
fildl
cltd
mov
and
push
faddl
ret
cwtl
inc
flds
daa
mov
pop
pop
ret
inc
mov
insb
jns
mov
jno
xchg
fstl
ret
cmp
std
xor
mov
jmp
bsf
dec
sti
ljmp
mov
test
fwait
test
vpunpcklwd
ret
push
stos
xchg
mov
iret
pop
test
push
jle
gs
push
repz
cmp
cltd
fwait
jbe
gs
xchg
loop
inc
in
lahf
cltd
stc
mov
jecxz
dec
in
xchg
in
es
jl
into
rclb
xchg
dec
pusha
sbb
push
and
mov
sbb
pop
ss
add
push
xchg
sub
mov
inc
nop
cmp
xchg
jge
sbb
or
pop
mov
scas
movb
lahf
push
jae
cld
cmp
stos
mov
dec
mov
jne
orl
inc
jno
ret
push
mov
js,pt
pop
pop
xlat
inc
jg
mov
dec
data16
pushf
les
ljmp
jb
mov
rcll
dec
repz
add
add
xor
nop
or
insl
push
enter
fiaddl
insl
mov
js
mov
out
and
lret
test
inc
cmp
mov
pusha
fiaddl
lea
xor
jae
div
in
pop
insb
sbb
cli
mov
push
stc
popa
jge
and
inc
ss
scas
and
push
test
les
imul
cmp
insb
sub
daa
push
fwait
ljmp
sbb
push
ss
repz
mov
loope
enter
popa
push
mov
mov
jbe
or
cltd
xchg
mov
sbb
bound
lcall
xor
mov
or
push
imul
loopne,pt
dec
insb
lods
xor
jnp
inc
inc
aaa
lahf
les
out
jecxz
cwtl
add
or
sub
xchg
jle
dec
fcmovu
mov
and
fst
stos
and
mov
data16
sbb
xchg
loopne
enter
add
push
cmpsl
mov
sub
dec
mov
rol
loope
adc
push
std
sbb
push
in
sub
push
or
out
ljmp
adc
sub
pop
pop
lret
test
adc
dec
divl
or
pop
dec
push
xchg
push
adc
xchg
adc
cltd
aaa
aas
inc
jle
outsb
int
xchg
mov
repnz
jae
cmc
or
ret
pop
test
and
movsb
push
fisubrs
jmp
or
scas
adc
jo
inc
or
out
jmp
in
ret
dec
mov
mov
mov
sub
jle
icebp
leave
popf
rorl
test
cmp
xchg
call
movsb
inc
ja
adc
leave
sub
aaa
cmp
cmp
cmp
rorb
cli
sbb
bound
lret
loopne
cwtl
repnz
das
xchg
inc
cld
mov
and
fwait
movsb
int
jbe
rcr
orl
mov
sbb
fldcw
mov
stos
mov
shrb
fldt
imull
scas
outsb
lret
xchg
mov
ret
stos
sub
shr
mov
fwait
shrl
sub
xor
lmsw
std
inc
bound
mov
stc
mov
xor
cmpsl
inc
sbbl
push
addb
ret
ljmp
or
pop
sub
pop
pop
fimuls
xor
mov
push
sbb
mov
adc
ficomps
jne
push
pop
xchg
loope
sbb
ds
mov
int3
out
push
adc
arpl
jbe
sbb
andl
hlt
or
cld
test
in
es
sub
cmp
out
data16
cltd
adc
shlb
das
mov
ror
outsl
call
cs
scas
test
bound
gs
inc
fistl
mov
push
fwait
imul
xor
sub
flds
adc
inc
mov
push
cmpsb
in
es
pop
outsl
push
int3
lret
arpl
adc
mov
pop
arpl
dec
sub
repnz
test
movsb
cmp
jbe
jp
dec
pop
fwait
jbe
fidivs
cs
in
sbbl
sarl
aaa
dec
adcb
push
mov
push
push
aaa
lret
scas
or
mov
adc
outsl
jecxz
mov
inc
adc
aam
xor
scas
aam
hlt
fldenv
dec
inc
in
or
cmpl
fildll
or
pusha
lods
push
xchg
pop
inc
pop
out
ficomps
cmp
adc
mov
mov
stos
test
mov
inc
push
jecxz
xor
xor
jg
fildll
repnz
sets
mov
fsub
jl
add
lock
xor
xchg
cmpsb
cs
adc
mov
mov
adc
jge
lods
cmp
data16
xchg
imul
cmp
dec
pop
jg
inc
mov
cltd
das
rorb
gs
sbb
rolb
or
jmp
fisubl
sub
lock
test
int3
lcall
in
add
or
inc
sub
mov
mov
jo
cmp
mov
gs
ljmp
mov
adc
inc
decb
mov
sar
or
ror
fwait
mov
xor
popf
mov
xchg
cld
mov
mov
ret
movsl
rol
ja
fcmove
iret
hlt
std
iret
mov
cmp
divb
mov
push
sub
loopne
pushf
cmpsl
and
aad
xchg
clc
mov
pushf
repz
cld
fildll
std
mulb
xchg
or
movsl
call
or
xor
sub
andb
aam
sar
bswap
int
dec
ret
jne
add
stos
mov
stos
stc
xchg
cmp
xorl
sub
and
cmp
add
mov
add
or
call
in
dec
push
mov
aaa
in
and
stc
jne
mov
rclb
adc
and
mov
adc
jg
hlt
out
pop
cmp
cmpsb
mov
shrl
sbb
ja
or
lret
setg
dec
inc
jle
in
mov
inc
cmp
sub
xchg
hlt
xchg
addr16
jl
movsl
call
cmp
mov
bound
jecxz
outsb
fnstsw
jne
mov
rcrl
mov
fs
and
fs
mov
push
xor
aaa
ss
sbb
and
mov
es
pop
and
sbb
mov
pusha
lods
bound
add
pop
out
aam
cli
hlt
dec
or
lods
and
push
push
sub
sahf
cmp
mov
call
roll
mov
test
fsts
xor
fnstsw
cmp
scas
shr
xchg
jge
sub
outsb
cmp
test
mov
jle
lods
sbbl
jmp
lcall
sbb
jns
jmp
insl
rclb
sub
jle
inc
aad
stc
dec
pusha
aas
insb
push
xor
adc
stc
sbb
fisubs
mov
sbb
insl
sbb
add
mov
gs
pushf
push
int
jb
cmp
addr16
lahf
rcl
aam
xchg
push
mov
dec
into
lahf
ucomiss
push
jge
and
loopne
into
call
xchg
lods
leave
cmc
fs
scas
insl
push
aas
jmp
inc
lret
ficoml
xchg
ret
shlb
mov
and
or
mov
mulb
notl
add
fstl
nop
mov
movsb
cmp
rorl
or
jmp
push
xchg
test
add
test
pop
movsl
cmpl
cwtl
cmp
test
inc
dec
adc
jno
or
call
pop
mov
es
add
add
out
daa
mov
fsts
inc
sub
les
gs
subl
ss
and
or
dec
cltd
xchg
pop
and
mov
inc
das
inc
ja
xchg
in
addr16
out
dec
pop
mov
mov
jb
je
dec
popf
or
enter
mov
and
pop
xor
jnp
or
pusha
lahf
outsb
and
inc
shrb
mov
pop
mov
push
bound
ret
in
mov
inc
cmpsb
iret
outsw
popa
cmpl
out
aas
leave
xchg
lods
sbb
jg
push
jnp
sbb
jb
or
mov
and
xor
or
mov
jnp
adc
xchg
test
adc
imul
push
mov
and
cmp
cwtl
fldt
dec
cmp
mov
cmp
mov
xchg
xor
inc
xchg
je
mov
test
inc
inc
rcll
jge
ss
jo
lret
icebp
cmp
mov
shll
lods
aaa
enter
jle
seto
bound
lret
pop
push
loopne
je
jbe
in
std
xchg
insb
mov
test
into
cld
pop
sbb
enter
iret
aam
push
pop
and
dec
nop
cmp
dec
push
insl
mov
movsl
cwtl
hlt
notl
push
dec
mov
sub
imul
gs
mov
addr16
lds
mov
sbb
dec
xchg
inc
cmp
loop
cmp
sub
push
add
outsl
popf
frstor
adcl
fstps
les
mov
mov
mov
fucomi
mov
lods
adc
ds
push
inc
xchg
add
xchg
mov
jle
sarb
fucomp
cmpl
inc
es
fmull
out
adc
ja
pop
xchg
mov
ds
test
pusha
mov
jge
icebp
or
addr16
bound
mov
pop
arpl
movb
cmpsl
rorl
cmp
loop
sbb
xchg
pop
lds
sub
rorb
inc
inc
xchg
pop
movsb
jo
jg
bound
lods
fucomp
fst
lods
scas
add
mov
je
xchg
mov
std
aad
sti
aam
mov
inc
leave
xchg
insb
inc
xchg
xor
jge
outsb
cli
clc
cs
stc
call
xor
mov
add
inc
sbb
sub
mov
sbb
imul
cld
clc
jl
xchg
xchg
or
hlt
aas
hlt
adc
push
pop
into
sbb
pop
xchg
movsb
imul
mov
push
fisubl
jp
pop
push
js
pop
fidivs
sti
dec
lds
test
mov
ffreep
fwait
adc
adc
roll
push
cmp
test
jne
insl
jecxz
or
int3
mov
jo
outsl
addr16
or
repz
mov
das
xchg
mov
rol
adc
test
inc
scas
jl
xor
xlat
jo
fnstenv
jno
mov
push
popf
jo
inc
sbb
test
push
loopne
test
sub
mov
xchg
xchg
mov
enter
sub
push
pop
stos
add
mov
lock
fldenv
mov
add
jnp
fsubrs
daa
add
add
addr16
loopne
addr16
push
movsb
jns
loope
or
fwait
and
xchg
imul
push
in
fistpl
adc
ret
and
test
fsubs
jb
ljmp
popf
ja
flds
adc
jnp
sub
xchg
std
in
into
loopne
and
sub
cli
daa
jnp
cmpsb
ja
push
push
adc
dec
or
push
add
mov
retw
add
cs
sbb
jbe
mov
jmp
sub
call
xchg
sub
jmp
xorb
and
test
into
push
mov
lods
adc
mov
jns
pop
outsb
push
jne
pop
add
test
xchg
es
cli
xor
inc
mov
cld
out
insl
xor
xor
xchg
push
xchg
xor
xchg
mov
pop
rorl
ss
pop
fucompp
push
mov
ja
enter
pmullw
add
pop
das
cmp
insb
push
out
insb
xor
addr16
mov
inc
pop
sbb
mov
pop
dec
or
mov
adc
std
cli
stc
aas
inc
ja
dec
enter
push
orl
and
rcrb
xchg
data16
clc
dec
fmul
pop
jbe
test
pushf
inc
mov
cmc
into
int
mov
divb
imul
pop
fnsave
push
mov
ds
jns
xor
cs
ret
out
inc
cltd
pushf
shl
sti
xchg
adc
push
in
dec
and
outsl
push
aad
das
rcrb
adc
stc
mov
pop
mov
scas
enter
xchg
out
cmp
jne
pushf
aad
adc
fdivrs
and
sub
sub
pop
cmp
adc
dec
sub
repz
jp
aad
mov
and
fwait
inc
fs
fisubrs
xchg
xchg
mov
push
adc
xchg
mov
xchg
or
mov
cmc
ja
jo
fistl
int
xor
aad
mov
or
mov
js
xchg
loope
jne
lods
cmp
je
rcl
out
cmp
test
xlat
in
dec
mov
faddl
push
test
mov
pusha
xchg
loopne
dec
sub
cwtl
and
sub
cltd
lds
xlat
stc
ret
inc
aad
in
adc
out
pop
pop
int3
lds
arpl
xorl
stos
fistps
dec
mov
cmpl
jb
add
int3
xor
les
out
and
ret
loopne
push
xor
sbb
dec
nop
popa
popf
and
cmp
pop
jl
mov
mov
stos
mov
or
push
cmc
test
sub
ljmp
or
push
and
ljmp
mov
cs
dec
or
mov
pop
xor
in
out
xchg
push
es
out
mov
dec
dec
shll
fisttpll
ret
fsubl
mov
or
xchg
movsb
add
rcrl
hlt
sbbb
lock
mov
outsb
xchg
lret
cs
jmp
andb
cwtl
aas
data16
movsl
sarl
enter
loop
xor
mov
push
mov
aaa
pop
in
lret
sub
test
dec
mov
cmp
fldenv
cltd
mov
test
and
mov
jns
push
stos
rcr
sub
repnz
pop
add
dec
mov
fs
xchg
push
push
scas
mov
inc
and
pusha
sahf
xchg
insl
inc
add
mov
repz
aaa
xchg
mov
mov
rsm
loop
in
xor
sbb
test
pop
cmp
mov
jns
hlt
nop
je
data16
pop
jae
ds
jg
imul
mov
jge
mov
cli
mov
insb
xor
xchg
arpl
loop
mov
xchg
scas
nop
rclb
iret
movsl
jo
dec
cmp
fnstsw
inc
es
daa
add
jmp
cmpsb
aas
inc
shlb
push
enter
cmp
fiadds
fisubrs
arpl
push
mov
mov
push
pop
mov
pop
cltd
fstpt
imul
add
mov
cmp
daa
cmp
rcrl
loop
xor
dec
cli
jbe
in
lods
icebp
push
and
data16
dec
fstl
lods
scas
jmp
cli
subl
push
push
test
mov
std
std
out
push
clc
xor
mov
mov
mov
pop
sbb
sbb
and
cmp
int
cmp
pop
xor
getsec
push
dec
je
out
outsl
ss
addr16
cmp
popf
rorb
jbe
insl
data16
lret
adc
into
sbb
outsl
dec
imul
leave
mov
pop
rorl
inc
mov
sti
mov
pop
cli
fidivs
push
ja
push
mov
pop
mov
cs
insl
rorl
adc
sbb
arpl
mov
das
dec
mov
xchg
mov
add
pop
and
sub
fisubrl
lahf
xor
jo
lret
add
add
in
mov
daa
mov
lods
push
addr16
in
test
mov
sbb
inc
adcb
xchg
std
outsl
and
rcll
loope
jl
das
xor
das
into
and
or
mov
sbb
rol
shlb
addr16
lds
adc
cltd
dec
or
inc
outsl
sub
adc
dec
test
sahf
fcmovne
add
mov
xlat
adc
lods
stc
pop
jl
xchg
aas
cbtw
sbbb
fadds
jle
repz
add
sub
lds
gs
jge
jmp
mov
xor
popa
xchg
push
test
xor
sub
lcall
inc
mov
hlt
push
sub
fnstcw
and
cmp
pop
mov
mov
jle
enter
movsb
push
adc
jmp
push
sbb
lds
pop
test
mov
outsb
jbe
sbb
pop
loope
jbe
sub
jne
dec
sub
dec
xchg
inc
imul
imul
cmp
sbb
lret
inc
test
jg
sbb
xor
inc
cmc
loope
inc
ljmp
push
pop
outsl
gs
dec
outsl
stos
or
movsl
lds
cmc
aam
mov
les
movsl
stos
cmp
cmp
into
dec
pop
daa
jns
xchg
mov
sub
mov
mov
or
push
sahf
mov
and
mov
mov
arpl
icebp
cli
push
ja
mov
incb
pop
test
scas
inc
rclb
add
js
push
jbe
adc
arpl
xor
addl
dec
stc
movsl
add
sub
pop
xchg
sahf
lods
dec
mov
inc
sbb
data16
fimull
loop
lds
int
push
mov
sti
jno
cmp
xchg
je
imul
je
xor
inc
in
stc
mov
fimuls
dec
xchg
jl
sbb
out
add
out
sahf
mov
jg
notb
out
mov
lods
and
mov
std
adc
pop
movsl
add
dec
data16
jp
adc
mov
and
lock
lret
in
mov
sub
dec
mov
push
adc
idivb
inc
repz
adc
fwait
data16
jmp
in
cmp
fnstsw
xlat
adc
cmpb
lds
add
mov
mov
out
dec
and
pop
lock
or
mov
js
jns
in
rcll
mov
sbb
or
pop
fcoms
data16
xchg
addr16
pop
push
pop
mov
aas
add
fistps
insb
int3
mov
ffreep
push
loop
int3
in
cwtl
mov
cmp
mov
stos
sub
pop
push
inc
ja
es
lods
add
outsl
push
mov
out
in
jbe
fiadds
ror
stos
insb
out
cmpsb
icebp
or
jge
orl
push
add
and
nop
stos
or
jnp
fcoml
jns
push
out
cmp
into
push
shlb
inc
aam
push
sti
adc
cmp
xchg
xchg
mov
je
imul
out
mov
mov
aam
mov
xchg
mov
cmp
fs
sbb
fbld
push
aas
push
fimuls
adc
fistpll
dec
icebp
cmp
push
mov
mov
mov
in
add
ret
andl
sbb
mov
xchg
mulb
leave
leave
in
ret
xlat
sbb
lret
xchg
jle
sub
push
add
stc
popf
scas
imul
cmc
fwait
stc
mov
rcrb
loope
and
mov
stos
enter
fidivl
push
in
pop
fnstcw
adc
test
xchg
push
std
jg
dec
pusha
pop
xor
test
scas
xchg
xchg
jmp
fiaddl
outsb
cmpb
mov
cli
mov
mov
test
pop
cmp
jae
loopne
dec
out
test
hlt
jns
sbb
xchg
aaa
std
pop
rcrl
push
out
movsl
sti
jnp
pop
pop
inc
test
xchg
rcll
outsl
iret
call
xor
lahf
and
pop
xlat
xchg
out
fst
daa
mov
call
pop
xor
aas
mov
movsl
ret
das
mulb
pushf
fadd
aam
add
sbbb
cwtl
sbb
xorb
jne
jo
out
push
lock
lock
xchg
sarl
mulb
or
bnd
xlat
aad
test
xchg
addr16
dec
fs
inc
sub
and
pushw
lahf
sti
dec
sub
and
xor
mov
mov
mov
gs
pusha
int3
pop
xor
xchg
fs
mov
rsqrtps
je
mov
and
xchg
adc
or
cltd
sbb
add
jo
mov
std
xchg
loopne
pop
push
enter
inc
sub
sbb
push
jns
push
or
mov
add
repnz
mov
in
fildl
dec
test
dec
mov
fidivrl
adc
bound
adc
inc
cli
rcl
inc
xor
js
lahf
xchg
mov
jle
mov
and
fld1
jl
sbb
mov
and
cmp
adc
xor
xor
jno
lahf
push
dec
insl
jg
daa
mov
lea
jae
insl
cmp
fildll
cmp
mov
cmp
fwait
mov
jge
jge
cmc
or
mov
in
push
fxch
jmp
jb
fucom
insb
fiaddl
rcrb
sarl
mov
fstp
fwait
shlb
jmp
push
pop
stc
xlat
mov
cmp
xlat
jns
mov
data16
lcall
mov
adc
mov
and
sti
jg
mov
xchg
addr16
cmpsl
mov
mov
test
push
mov
loope
fcomp
int3
xor
sub
pusha
imul
lahf
movsb
or
mov
ja
pop
sub
push
inc
adc
and
mov
or
std
xchg
out
xchg
inc
mul
sbbl
int
sub
ljmp
xchg
jmp
jmp
dec
data16
inc
ljmp
adc
dec
ss
les
scas
cltd
mov
jmp
subb
pop
loope
lea
pop
adc
je
scas
pusha
stos
push
mov
test
mov
cmp
fisttps
aad
test
dec
inc
add
inc
or
inc
out
xor
inc
cltd
dec
add
popf
cmp
shll
xor
push
jecxz
jle
inc
call
xchg
ja
nopl
mov
jl
cwtl
push
pop
fs
dec
cwtl
out
iret
insb
adc
shll
add
les
call
sub
jmp
sbb
imul
scas
test
pop
push
fldl
fnsave
popa
dec
andl
mov
sahf
mov
dec
pop
lock
leave
cmp
xchg
sub
sub
repnz
sub
cmc
xor
loop
cmp
test
mov
shlb
xor
sbb
jmp
rolb
fimuls
and
sbb
insb
sbb
mov
movsb
ja
inc
pop
iret
xchg
clc
ficomps
cmp
fstpl
sub
mov
ret
cwtl
les
and
repnz
mov
push
sbb
fsubs
das
lods
or
adc
and
aas
mov
fcmovb
sbb
repz
mov
jge
sbb
enter
roll
inc
ds
push
jmp
divl
pop
mov
or
jb
movsb
add
leave
push
lods
or
and
data16
push
negb
dec
mov
into
xlat
cmpsl
unpcklps
sbb
cmpsl
pop
xor
rcll
mov
popf
sbb
adc
or
jge
sub
xor
pop
in
push
dec
mov
mov
dec
iret
lea
pop
fdiv
sbb
test
mov
sbb
fiadds
jb
xchg
pop
stos
adc
fmul
mov
and
push
inc
leave
mov
lret
mov
js
mov
imul
das
into
pop
ficoml
sbb
cmp
mov
clc
movsb
jg
fldt
shl
jns
fcomp
push
dec
cmpb
mov
inc
dec
jge
cmpsl
and
cs
mov
mov
std
jbe
sahf
mov
mov
jle
mov
push
lock
insb
xor
push
adc
pop
xor
mov
insb
lret
mov
fidivl
add
push
daa
fs
cmp
ljmp
es
cmp
shr
lods
into
push
xor
sub
jl
roll
push
cmpsl
shrd
mov
mov
and
aas
insb
in
lds
pop
ret
ret
mov
dec
mov
push
adc
test
popf
mov
mov
cmp
stos
adc
rcrb
xchg
sbb
bound
cmp
dec
xchg
dec
xchg
popf
sub
cmpsb
push
jo
loop
jne
test
jg
cld
jmp
and
call
xchg
punpckldq
loopnew
clc
popf
mov
mov
dec
repnz
ja
sub
xchg
mov
fldt
or
insb
and
xor
cmp
and
stos
mov
mov
mov
mov
lock
dec
movsb
cmpsl
out
jp
fs
jp
pop
lds
imul
aad
add
adc
mov
and
and
inc
mov
insl
xor
sub
jae
mov
xchg
inc
sub
mov
jle
mov
mov
mov
xor
lds
into
cmp
sbbl
push
mov
loope
fldcw
jae
insb
and
fists
mov
clc
push
daa
cld
pusha
stc
ret
mov
imul
iret
push
sbb
pop
repnz
push
adc
stos
das
mov
push
inc
sbb
dec
faddl
push
aaa
call
jns
mov
bound
fdivs
inc
push
xorl
rolb
cmp
mov
dec
cld
mov
fisubs
outsb
xchg
dec
aad
add
xchg
mov
jg
sbb
ss
rorb
in
fbstp
faddl
mov
jns
popa
jmp
aad
inc
jno
out
dec
out
mov
sbb
lea
mov
sbb
loop
cwtl
ja
lret
int
xlat
and
mov
cltd
incb
out
out
xlat
jno
imul
frstor
dec
adc
jae
js
inc
sahf
in
pop
mov
in
mov
jns
in
mov
and
in
mov
sbb
arpl
xchg
ret
pop
out
add
push
outsb
stos
sahf
leave
rclb
shrb
lods
movsl
add
sti
pop
add
sbb
insl
push
int
adc
popf
lret
inc
or
mov
pop
xchg
popa
or
movl
cmc
les
pop
add
add
mov
xor
and
cli
test
pop
sbb
mov
out
repz
cmc
mov
inc
jnp
pop
sub
xor
std
outsl
shl
js
cwtl
pop
mov
jp
jno
sarl
lods
imul
mov
jp
jl
inc
xchg
mov
xor
nop
sbb
movsl
nop
sarb
test
decb
push
scas
das
add
insb
sti
repnz
neg
jl
movsb
push
cmpsl
pop
lods
xchg
iret
or
lods
push
scas
pop
and
std
adc
mov
setns
fisttps
or
mov
das
and
mov
mov
stos
or
sub
shrl
and
enter
jo
mov
bound
mov
cwtl
dec
xor
xchg
repnz
mov
jo
mov
xchg
pop
scas
call
add
adc
mov
push
adc
sbb
xor
mov
adc
iret
mov
into
dec
or
cltd
add
inc
mov
mov
std
enter
xchg
sub
add
and
repnz
dec
or
leave
xor
or
repz
mov
push
outsl
push
push
addr16
mov
mov
mov
movb
lods
cmp
repnz
dec
sub
or
in
into
idivb
inc
mov
push
xlat
pop
fdiv
repz
mov
sub
pushf
adc
xor
pusha
bswap
pop
imul
testb
insb
mov
inc
dec
repz
mov
mov
subl
mov
mov
lret
ss
pop
fldcw
lds
push
call
dec
outsb
push
sbb
mov
enter
mov
leave
and
repnz
jecxz
push
cli
mov
icebp
pop
shll
lret
mov
or
imul
int3
rol
hlt
pop
push
sbb
push
cmpsl
xchg
je
aaa
int3
arpl
iret
adc
add
mov
mov
jo
out
in
adc
sub
or
jmp
iret
cmc
cmp
popf
add
test
add
leave
divps
mov
xlat
pop
pop
outsl
or
pop
mov
pop
dec
test
cld
outsl
jae
adc
push
add
dec
xchg
xchg
lods
xor
into
sub
xchg
push
ret
jl
daa
mov
enter
repz
in
pop
je
add
push
pop
add
sub
icebp
mov
mov
aad
cmp
mov
xor
mov
inc
xor
jns
test
xchg
in
inc
cltd
cld
call
inc
pop
and
fdivrl
sub
inc
clc
cmpsl
jmp
roll
cmpsl
jno
lcall
add
jmp
adc
fimull
inc
push
mov
push
add
xor
push
loope
loop
adc
adc
dec
jnp
mov
in
and
or
inc
jge
sbb
sub
dec
jbe
popf
test
mov
jb
xor
lods
push
lahf
push
jbe
and
sub
adcb
sub
mov
cmp
mov
lock
nop
push
or
xchg
inc
mov
push
push
and
fbstp
add
fcmove
push
push
jbe
andl
add
and
loop
or
int
dec
clc
jmp
fistpl
movsb
mov
clc
push
stos
dec
dec
and
xor
or
ret
push
inc
inc
push
and
je
xchg
cmp
pusha
jnp
jmp
ror
or
inc
outsl
lock
gs
fadds
jbe
leave
lock
cs
xchg
jne
pop
mov
js
dec
rcl
xor
sub
inc
push
pop
lahf
inc
lcall
or
pusha
pop
push
clc
js
inc
dec
in
test
inc
sub
xlat
out
inc
imull
pop
add
lock
jns
shl
cld
push
xchg
jns
jmp
test
inc
xor
dec
sub
shrl
mov
mov
and
fnstenv
add
inc
repz
mov
push
add
mov
shrb
mov
pop
int
lods
push
aad
push
shlb
push
outsl
or
dec
jl
inc
loop
mov
leave
jmp
jmp
mov
fwait
xchg
push
insb
into
push
xchg
lret
jecxz
lods
xlat
je
addr16
sub
xor
stos
insl
sub
fs
lcall
inc
mov
insb
and
xchg
out
mov
daa
ja
call
adc
push
inc
xchg
movsb
sub
test
dec
mov
xchg
adc
xchg
mov
mov
rcll
mov
dec
data16
sub
clc
or
nop
pop
sbb
mov
xor
xchg
test
in
adc
cmc
imul
xchg
or
popf
pop
jge
scas
jne
ds
sti
xor
push
insl
fnstenv
int3
mov
cmp
out
lods
cltd
xor
push
sahf
stc
inc
inc
or
fnstenv
and
and
pop
cmp
and
cwtl
adc
xchg
jae
shrb
out
outsl
das
test
lds
or
movsb
mov
rcrb
adc
mov
and
pushf
neg
pop
pop
fisubrl
sbb
iret
jmp
lea
rorb
mov
mov
test
sub
test
cmp
insb
xchg
mov
sub
mov
out
enter
movsb
int
ss
in
add
fiaddl
sbb
mov
and
push
lea
cld
adc
movsl
dec
dec
dec
mov
xor
sbb
jg
movhps
add
jns
push
xor
mov
dec
or
dec
and
lds
setge
fisubrs
cmpsl
jle
mov
adcb
mov
jno
enter
jmp
jno
cld
outsb
inc
in
incl
imul
mov
adc
stc
mov
js
add
mov
cld
lods
push
in
int
adc
xor
xchg
and
xchg
add
or
sahf
mov
rcll
jmp
clc
orl
aam
dec
sarb
hlt
fisubs
and
pusha
out
push
mov
jnp
or
sub
in
sbb
mov
adc
jb
adcb
cmp
andb
fisttpl
adc
push
push
push
cs
cmc
dec
xchg
movsl
cmp
push
jb
lret
mov
hlt
inc
or
repz
cs
rcrl
lods
sub
lds
sbb
cwtl
sub
repz
or
adc
cmc
sti
out
adc
dec
pop
xchg
test
fiaddl
sub
sub
bound
sbb
mov
push
pop
stos
scas
mov
xor
scas
aam
push
mov
xchg
inc
pop
inc
inc
iret
jns
dec
mov
inc
and
jne
aam
fs
ss
jmp
adc
dec
and
and
cmp
lea
sbb
mov
fidivrs
pop
cltd
jo
div
mov
jl
sahf
pop
xchg
movsl
ret
mov
dec
popa
push
jle
les
addb
xchg
pop
pop
dec
into
out
jnp
stos
in
ja
fs
fwait
loope
mov
mov
jg
lods
adc
mov
ret
out
notl
les
cmpsb
lret
xchg
je
pop
mov
jno
mov
dec
sbb
mov
mov
pop
cmpsb
popa
inc
mov
lret
xchg
xchg
outsb
icebp
in
cs
cwtl
and
unpckhps
leave
dec
xchg
outsl
push
adc
movsl
mov
outsl
and
dec
xchg
lahf
mov
loop
push
xchg
loop
pushf
xor
sub
in
imul
add
dec
cli
out
adc
adc
jecxz
dec
and
repnz
sub
jl
dec
arpl
leave
xchg
and
push
popa
int
jno
rolb
xchg
or
rorl
inc
test
js
popf
movsl
push
in
repnz
add
movsl
jnp
or
pop
mov
movsb
dec
cmp
frndint
xor
adc
add
and
movsb
mov
scas
or
lea
pop
gs
int3
pop
popf
sbb
mov
sub
sbb
xchg
mov
into
repz
jecxz
pop
adc
outsl
inc
sbb
or
aad
outsb
cs
data16
push
iret
mov
lds
loope
pop
leave
pop
mov
jle
loope,pn
jns
popf
ss
call
int3
stos
test
sbb
inc
sbb
mov
pop
jne
push
xchg
or
pop
cmp
push
push
test
mov
or
push
jmp
pop
aas
xor
mov
sub
xor
fisubl
jno
mov
dec
sbb
pop
insb
sbb
leave
mov
mov
pop
sti
lock
push
add
mov
fwait
xchg
iret
sub
cld
cmp
jno
jl
xchg
and
xchg
stc
inc
int3
not
sbb
int
pushf
lea
frstor
xchg
pop
ret
aas
add
push
dec
scas
adc
pop
cld
xchg
inc
and
jb
cs
shrb
ja
xchg
fadd
out
mov
cmp
sbb
gs
xor
loope
mov
xchg
daa
bound
dec
inc
iret
mov
push
push
aad
xor
fiaddl
xchg
push
pop
push
pop
sub
jle
push
andl
xor
adc
mov
adc
push
rorl
inc
xchg
enter
cmpsb
out
pop
subb
add
iret
xchg
scas
fcomps
scas
push
cmp
mov
ljmp
insb
xor
pop
aas
bound
dec
mov
fnsave
sarl
cli
adc
xchg
jl
insl
jp
mov
hlt
mov
mov
sub
inc
pop
sbb
or
and
adc
stos
sbb
lret
in
mov
cmpsb
aad
enter
flds
lods
jecxz
inc
jecxz
fwait
mov
cwtl
adcb
dec
mov
stc
outsl
sti
in
insl
aad
fst
push
dec
jbe
cli
out
fnstenv
mov
xchg
dec
sub
cmp
inc
fwait
push
push
in
ja
mov
ljmp
imul
je
mov
fmulp
fdivrl
ljmp
cmpsl
ljmp
add
pop
ret
bound
push
jecxz
mov
sbb
pop
push
or
in
mov
stos
push
mov
icebp
and
fsubrp
mov
ror
je
in
sbb
inc
fsubrl
xor
es
in
sahf
mov
lea
pop
dec
cli
add
push
call
leave
xchg
clc
test
lret
and
mov
mov
pusha
push
push
pop
ja
jp
sbb
add
or
sbb
mov
adc
mov
loopne
mov
lock
dec
in
aaa
outsl
mov
jle
fcomip
and
mov
xchg
push
scas
pop
mov
int
sub
add
jmp
jbe
stos
pop
cmp
outsl
and
cmp
dec
aaa
xchg
sbb
fsubrs
loope
cli
xor
lock
add
mov
pop
dec
adc
cmpsl
aas
es
sub
xchg
cmp
ss
and
push
or
and
fcmovne
jo
ljmp
lods
js
mov
jo
addr16
xchg
dec
loopne
jnp
push
incl
sub
imul
arpl
mov
push
xchg
mov
bswap
mov
mov
popa
xchg
insl
xchg
inc
mov
pusha
insb
fisttpl
cmpsl
data16
out
xlat
add
xlat
sbb
ss
into
mov
out
xor
dec
add
ret
out
mov
mov
pop
popa
xchg
jp
cltd
and
movl
loopne
test
incb
pop
sbb
jge
cmp
jl
add
movsb
push
pop
push
jo
or
or
sub
fiaddl
sub
mov
repz
cmp
dec
std
faddl
insl
pop
jae
mov
lock
ja
jg
in
inc
jl
mov
sti
testl
mov
shr
sbb
das
jnp
mov
mov
pusha
pop
sarb
nop
fadds
jmp
imul
xchg
jg
push
and
mov
xchg
push
in
cmp
and
enter
mov
jne
out
rcrb
aad
cmpsb
iret
js
rep
gs
add
cmp
shr
imul
dec
xchg
daa
stos
sbb
pop
xor
popa
insl
add
or
std
xchg
cmpsb
arpl
hlt
xchg
xchg
mov
inc
xor
pushf
pop
repz
pop
push
dec
int
jmp
sti
pop
pop
pop
mov
mov
mov
scas
push
les
mov
add
mov
push
add
sarb
out
std
out
jbe
scas
adc
add
mulb
mov
scas
adc
fsubrs
cmp
pop
add
mov
hlt
xchg
dec
mov
ret
mov
cmpsb
js
xor
imul
inc
out
pop
push
and
jno
push
jle
lcall
dec
jae
adc
jbe
pop
add
stc
pusha
inc
insb
out
jecxz
xor
sbb
or
mov
fdivrs
pop
movsb
cmp
jmp
adcb
popa
addr16
fisttpll
dec
mov
dec
pusha
xchg
addr16
stos
pop
rolb
add
sub
imul
cmp
fwait
mov
jp
xor
stos
stos
jb
xchg
pusha
out
fldl
lret
std
daa
dec
jl
cmp
dec
lea
mov
or
and
inc
dec
pop
shr
mov
cld
adc
xor
clc
fisubrs
pop
out
and
or
pushf
ret
or
fstl
xchg
pop
std
sbbb
idivb
xor
cmpsl
mov
nop
fs
jns
xchg
enter
jne
xor
add
in
dec
xor
mov
pushl
int3
xchg
mov
adc
movsb
mov
xchg
sbb
popa
popf
lods
adc
xchg
adc
inc
cmp
push
fists
insb
ja
adc
pushf
stos
std
sti
movsb
cmp
imul
fwait
testl
push
jb
inc
lret
pushf
scas
frstor
jae
pushf
in
inc
mov
mov
cmp
jp
int
xchg
jp
xchg
mov
pop
sbb
out
add
mov
loop
inc
rorl
movsb
lods
icebp
push
pop
into
movsl
arpl
mov
imul
jno
or
cmpsl
inc
sarb
dec
sbb
in
jns
jge
lods
negl
popf
pusha
push
inc
rorb
or
pushf
mov
or
mov
sarl
push
dec
xchg
js
insl
and
mov
xor
sub
aas
add
adc
aas
shll
fwait
jnp
push
rcr
xchg
or
pop
popa
mov
loopne
inc
sub
clc
sbb
adc
out
cmp
jo
inc
pop
dec
xor
sub
mov
aas
lea
lea
aad
movsb
xchg
movsl
dec
mov
push
pushw
shl
xchg
arpl
inc
mov
mov
clc
push
xchg
fadds
mov
mov
inc
and
jo
daa
add
dec
cltd
xchg
mov
fistl
mov
sbb
stos
xchg
cmp
pop
adc
das
divb
sbb
mov
ja
xchg
imul
loopne
outsl
hlt
xchg
lret
xchg
jne
cld
outsl
dec
dec
xor
aas
and
dec
or
or
mov
cld
out
imul
shr
test
pop
loop
add
jno
lahf
js
cmp
ss
fisubs
xor
cmpsb
jbe
and
jmp
dec
lcall
adc
sub
int3
sbb
inc
push
xor
imul
xchg
push
inc
daa
sbb
ljmp
xor
jl
roll
cli
or
int3
or
mov
imul
insb
pop
in
or
xchg
ja
aas
add
xor
jg
jae
add
adc
mov
mov
sub
ret
dec
jbe
push
fimuls
dec
loope
mov
test
out
leave
add
sti
dec
mov
jl
repnz
aaa
jne
xchg
add
push
pop
xor
or
xor
repnz
ffree
daa
dec
movsb
and
sub
sub
pop
lds
adc
cmp
addr16
cmpsl
mov
lcall
mov
imul
pushf
xor
sbb
pop
sbb
insb
sub
and
pop
dec
loop
sub
lods
sub
sbb
fcompl
pop
fldcw
sub
cmp
inc
fisubrl
outsb
dec
imull
dec
rcll
stos
mov
mov
sbb
sbb
scas
adc
enter
xchg
mov
cmp
les
inc
push
or
enter
je
rcll
or
lods
in
das
sbb
jl
xlat
mov
lret
loopne
jmp
pusha
dec
sti
jecxz
out
xchg
mov
ret
mov
mov
pop
xchg
mov
stos
cld
push
xor
xchg
inc
cmp
shrl
jge
ja
divl
inc
mov
add
in
push
push
mov
test
lret
stos
ret
test
fmuls
hlt
les
sub
and
sub
pushf
inc
jno
dec
push
lret
jl
sbb
sbb
sub
push
and
xlat
clc
mov
sar
jne
push
popa
mov
add
sbb
xor
mov
and
lea
dec
or
adc
cmpsl
or
cmc
lcall
ss
cltd
or
mov
sub
adc
loope
in
ljmp
xchg
pop
pop
aaa
and
hlt
mov
inc
inc
js
dec
and
lods
push
inc
test
out
xor
int3
jbe
inc
test
sbb
and
xor
mov
enter
sub
insb
mov
xor
dec
fimull
mov
sub
dec
int3
outsl
dec
fwait
jp
mov
dec
xchg
jmp
jge
push
into
dec
push
scas
jl
lock
pusha
sbb
push
cmp
mov
shrb
mov
inc
add
pop
cmc
imul
sbb
dec
in
dec
arpl
push
sub
inc
push
pop
mov
xorl
pop
fcomip
ds
xchg
insl
and
incb
stc
dec
cli
leave
fsubrl
hlt
mov
dec
movsl
mov
adc
inc
popf
inc
inc
jns
mov
xchg
mov
aas
cmp
sbb
cmp
mov
or
mov
repz
sub
daa
dec
mov
leave
sub
sub
jns
loopne
inc
jp
adc
imul
inc
pop
clc
addb
push
xor
int
and
flds
imul
loope
aad
ds
push
xorb
sti
mov
pop
fucom
sahf
pop
push
jns
sar
imul
sbb
stc
xchg
popa
test
stos
leave
das
xlat
mov
xor
cs
jg
or
lods
gs
or
enter
clc
cld
leave
mov
push
push
mov
jo
roll
decl
add
cltd
loop
std
ret
inc
mov
sbb
lods
inc
call
mov
bound
mov
mov
leave
dec
add
pop
stos
roll
lret
add
shr
pop
pop
mov
jnp
mov
add
xor
ljmp
fcmovu
mov
mov
or
push
stos
xor
mov
rclb
sar
out
lds
adc
arpl
dec
lcall
outsb
pop
pop
aam
and
inc
cli
into
adc
jne
add
jecxz
inc
xchg
data16
insb
les
addr16
stc
fs
pop
mov
movsl
or
sub
mov
aas
mov
adc
testb
jnp
sub
ret
sbb
xchg
sbb
xchg
pop
mov
iret
and
add
inc
shrb
pop
mov
pop
mov
icebp
lods
je
or
lods
mov
xor
inc
enter
in
xor
dec
add
push
arpl
sbb
sub
mov
lret
hlt
sbb
add
lds
xchg
push
xchg
dec
push
mov
push
addr16
xchg
cmpsb
out
test
pop
sbb
xorb
adc
add
mov
inc
cmp
adc
daa
movsb
ss
xchg
fcmovnu
imul
dec
mov
mov
dec
hlt
stc
test
fucomi
dec
call
jmp
and
out
cmp
xchg
int3
adc
cmc
xor
xchg
lcall
lret
test
pushf
xchg
fsubs
lods
adc
ljmp
cmp
insb
ja
scas
das
stos
xchg
add
pop
aad
pusha
xchg
inc
inc
jae
mov
icebp
sub
iret
shll
insb
cmpsl
daa
ljmp
or
cmpsb
stos
or
les
xchg
pop
inc
xor
and
dec
scas
dec
adc
pop
jg
rcll
or
sti
cs
sub
outsl
lahf
pop
fidivs
sti
xchg
and
jnp
sbb
mov
push
cmp
mov
xor
lods
sbb
cmp
xchg
test
lock
lock
shl
pop
shll
inc
jl
jb
and
jo
mov
je
xchg
cli
mov
jnp
leave
push
ljmp
push
leave
mov
daa
mov
in
cmp
mov
jb
sahf
rcl
xchg
iret
enter
mov
in
xchg
mov
adcb
mov
inc
in
jns
cmp
lcall
hlt
dec
jno
insl
xchg
je
mov
jecxz
dec
jmp
std
or
adc
sub
xchg
rolb
mov
cmpsb
fisttps
mov
test
mov
test
and
or
inc
mov
sbb
sub
push
xlat
lcall
movb
iret
adc
sbb
or
jno
dec
xchg
mov
jge
cmp
cmp
xor
xor
push
jne
popf
pop
xorl
inc
push
leave
rcrb
icebp
cmc
inc
stos
pop
mov
mov
roll
sub
cmpsl
mov
add
enter
dec
clc
mov
mov
stos
out
fimuls
pop
call
jbe
xor
inc
data16
xchg
sub
sbb
xlat
movsb
xor
out
inc
add
stc
sti
inc
sahf
cld
mov
push
pop
pop
outsb
or
or
loope
sub
and
dec
fstpt
push
shlb
and
sbb
mov
imul
sbb
jmp
ret
inc
loopne
loopne
cmpsl
cmp
mov
pop
imul
aas
adc
insb
rol
hlt
leave
pop
shlb
and
sahf
ret
sbb
test
or
testb
ret
push
pop
inc
aaa
pop
xlat
dec
test
dec
or
xchg
jne
lds
push
pop
stos
inc
loopne
fiaddl
out
push
adc
repz
adcb
xchg
icebp
out
mov
pop
testl
inc
jb
lcall
dec
jl
outsl
jo
cmc
mov
daa
or
mov
jb
pop
movl
push
ds
dec
adcl
sub
leave
cs
push
je
shrl
and
out
int
and
cmp
loope
add
mov
jo
lahf
aam
lcall
cltd
mov
jmp
jo
lock
fcomi
sbb
in
sbb
add
xchg
cmpsb
out
or
mov
stos
mov
xlat
adc
stos
inc
movb
enter
std
push
insl
and
bound
jecxz
out
and
xor
imul
push
sbb
lret
ret
sbb
aam
test
xchg
test
cmpsl
jno
dec
sbbb
icebp
and
out
addr16
dec
mov
adcl
mov
roll
push
fimuls
jbe
xchg
adc
add
loope
repnz
or
loop
mov
cmpsl
mov
shll
adc
jno
addl
cmp
dec
sbb
mov
lret
popf
jp
and
out
inc
lods
push
cmc
dec
les
rcl
xchg
daa
and
in
adc
or
ljmp
mov
dec
cmp
cmpsb
jbe
hlt
inc
out
ss
aaa
out
enter
ret
cwtl
dec
int
mov
in
mov
xor
jmp
fimuls
push
lea
inc
add
out
mov
test
jb
fs
and
pop
mov
sbb
pop
and
leave
repnz
movsl
lahf
ficoml
cmp
lods
shrb
sbb
jne
mov
sub
ds
fcmovnu
test
or
arpl
imul
call
call
fistpll
cmp
xchg
mov
movsl
fwait
sub
insl
aam
adc
mov
mov
pop
subb
mov
nop
test
sub
mov
std
sub
aaa
sbb
push
pop
cmp
popa
jne
jns
idivb
mov
jnp
xor
cmp
cmp
into
inc
pop
ret
leave
addl
sub
jb
xchg
addb
xchg
std
movsb
test
pop
aas
movsb
xchg
fistps
in
lock
push
imul
sub
fldl
fwait
dec
mov
decb
leave
sub
cld
int3
popf
adc
adc
sub
insl
mov
adc
pop
or
xchg
pop
clc
cmp
sbb
dec
daa
cmp
mov
lods
enter
jmp
sarb
sbb
sbb
cmp
inc
ljmp
and
jl
push
lods
sub
mov
dec
adc
cmp
mov
out
pop
and
add
scas
mov
add
xchg
jo
adc
lret
mov
aas
scas
xor
daa
std
pushf
out
cwtl
xor
test
sbb
sub
lods
mov
pop
cmp
mov
and
dec
pop
stc
and
adc
dec
bound
adc
enter
rolb
dec
sti
pop
inc
das
cmp
data16
das
test
ret
ret
push
sbbb
and
jb
sub
adc
inc
hlt
pop
xchg
xor
jo
inc
fidivrs
sbb
pcmpgtd
jg
call
lods
out
test
ficoml
not
aas
cmpsl
jb
sbb
mov
and
add
xchg
cli
das
lods
pop
jge
jmp
cmpsl
inc
je
cmpl
pusha
jbe
lahf
push
or
jo
leave
inc
jge
stc
mov
lret
dec
subl
mov
sub
xor
push
lock
xchg
cmpsl
lods
stos
adcb
adc
dec
leave
lock
jae
push
leave
cmp
mov
cwtl
nop
testl
in
bound
mov
xchg
icebp
scas
pop
idivl
stos
testb
dec
test
enter
push
inc
push
shl
scas
ds
outsb
or
divb
adc
sub
dec
and
pop
mov
cmp
shlb
pop
fsubl
je
or
push
push
cmpsl
xlat
dec
or
das
push
xchg
jecxz
nop
loop
push
mov
jns
pop
push
js
je
add
pop
push
bound
testb
pop
adc
jne
sub
and
out
fdivl
cmpsl
stos
push
push
adc
add
arpl
les
dec
mov
out
adc
mov
or
rcr
xchg
ror
sbb
push
insl
pusha
aam
mov
ss
cli
outsl
xor
add
lret
push
iret
cltd
push
mov
mov
xchg
repz
and
imul
stos
or
notb
lock
and
mov
mov
es
icebp
test
adcl
test
bnd
xchg
jg
mov
sti
scas
add
cmp
jo
mov
xor
jl
test
dec
inc
sbb
mov
mov
leave
addr16
pop
insl
push
mov
sbb
xchg
imul
sbb
jp
xor
add
xor
out
and
std
call
fbstp
cmp
jne
jne
xlat
movsl
sti
cltd
outsl
or
ja
repz
sbb
pop
inc
test
jle
mov
add
jb
and
cli
outsl
stos
mov
imul
jbe
cmpsb
icebp
push
ljmp
mov
mov
cli
scas
mov
jbe
cmp
or
xor
mov
sarl
jns
jl
jge
and
xlat
mov
sbb
add
aaa
push
mov
int3
int
push
ja
or
sub
cmpsb
sbb
sbb
push
addr16
mov
ja
inc
fldenv
je
fdivl
fdivrs
mov
jae
and
inc
fdivs
repnz
fxch
add
inc
cmpsl
push
pop
mov
pusha
loope
nop
pop
decb
ret
inc
repnz
repnz
mov
cmp
jg
inc
int
aad
inc
aad
pushf
push
aas
jnp
sarl
adc
sbb
cmc
clc
dec
lret
sbb
dec
out
aaa
xor
pop
fisubrs
icebp
into
inc
mov
cltd
pusha
mov
js
xchg
mov
into
mov
mov
cmpsl
imul
stos
mov
pop
xchg
push
imul
jne
scas
sub
clc
cmp
lahf
js
xlat
nop
shll
lds
mov
aas
xor
push
jne
or
sub
bound
call
xor
lret
xchg
les
xor
adc
cmp
rolb
sbb
inc
mov
stos
jne
push
pop
mov
mov
fwait
sbb
out
mov
xor
ficoml
and
cli
fcom
add
inc
pop
pop
rcrl
inc
jge
sbb
adc
lcall
iret
cli
push
fwait
mov
fnstcw
cmp
sub
inc
sbb
add
std
out
sub
movsl
test
test
add
jns
shrl
cmovne
int
outsl
cli
sub
das
push
scas
stos
imul
ja
pop
cwtl
lods
push
adc
push
adc
adc
repz
call
xchg
sbb
ror
mov
adc
int
jnp
movsl
add
jle
fcom
pop
sbb
adc
jg
sbb
ret
mov
xchg
mov
sub
stos
inc
enter
and
push
adc
mov
xchg
inc
fisubl
xchg
cmp
in
sar
cli
jno
adc
jbe
cmp
jecxz
mov
sbb
and
dec
sti
out
mov
push
aas
mov
jo
xchg
mov
stos
add
jo
mov
adc
popa
outsb
jo
or
icebp
sub
lcall
jle
mov
sahf
stc
loope
nop
inc
das
jno
cmp
shrb
pusha
push
inc
arpl
or
and
das
aas
dec
fisttpll
hlt
in
hlt
int
push
outsb
pop
pop
sub
mov
cmp
loopne
loop
test
ja
push
int3
xchg
loopne
push
stc
ror
pop
popf
ljmp
xlat
mov
cs
mov
sbb
daa
cmp
xor
or
push
loope
xlat
mov
xor
cmp
leave
loope
popl
or
jmp
pop
std
iret
push
jo
out
in
imul
mov
inc
xor
test
jl
mov
jp
cld
loope
mov
cmp
pop
das
fucom
or
mov
mov
enter
fwait
das
orl
mov
mov
movb
push
pop
jbe
arpl
adc
adc
cli
mov
mov
movsb
xorb
jae
mov
mov
xchg
mov
mov
out
inc
int
orl
adc
daa
push
or
push
sub
dec
outsb
xlat
sti
daa
lock
or
push
shll
add
pop
in
cmpsb
popf
mov
sub
lret
pop
sub
mov
arpl
dec
andl
repnz
aaa
cmpb
shll
push
jmp
nop
xchg
lea
mov
mov
pusha
aaa
jmp
and
rorb
xor
lret
cltd
sub
rcrl
bound
pusha
mov
pop
loope
add
jle
es
mov
gs
enter
out
shlb
hlt
push
out
sub
or
xor
xlat
adc
fwait
sahf
push
rcl
sub
lds
mov
es
sbb
pop
mov
test
sbb
push
pushf
dec
jge
adc
insl
dec
dec
rorl
pop
jno
mov
leave
jb
lds
lds
js
jo
cmp
sub
xor
pop
push
addl
test
cld
in
xlat
out
std
data16
out
push
cmpsl
mov
out
shll
dec
rolb
test
mov
or
sub
negl
cmp
in
mov
dec
xlat
jp
repz
lock
or
mov
popf
test
sub
mov
sahf
test
sbb
gs
lahf
cmp
mov
inc
mov
mov
sub
je
jmp
mov
leave
les
xor
mov
int
in
or
dec
sub
add
int
dec
ja
mov
cmpsl
ret
mov
in
xor
lods
in
dec
sub
rcl
paddb
push
lods
shll
jmpw
jmp
cli
leave
lea
clc
repnz
jb
pop
push
inc
cmp
lahf
add
xchg
xor
pop
mov
fsubs
std
out
sahf
sar
cmp
daa
out
scas
cwtl
outsl
pop
popf
mov
jg
mov
repz
repz
or
rclb
mov
cmp
mov
jecxz
xchg
push
add
push
daa
sbb
ja
pop
and
or
lcall
jg
rcll
pop
cli
jo
imul
dec
testl
test
shl
push
xor
xor
cli
push
dec
stos
xchg
xchg
or
mov
pop
int
push
test
ror
push
inc
into
pop
movl
add
out
pop
dec
stc
jb
cmp
orl
pop
inc
je
sub
and
aad
xchg
in
mov
jmp
add
cmp
lds
out
jne
mov
inc
add
inc
fwait
mov
stc
insl
ja
xchg
and
sbb
leave
subb
xchg
daa
ds
das
mov
xchg
cmp
dec
nop
movsl
push
xor
push
sbb
rorb
sahf
leave
stc
adc
cmp
cmp
jmp
idiv
dec
outsl
testl
xor
imul
les
sahf
sub
pop
shr
je
jl
and
pop
mov
in
adc
iret
fnstenv
jnp
pop
xchg
addl
jp
xor
repz
stos
mov
cmp
mov
sbb
xchg
sbb
mov
adc
bound
mov
pop
jnp
pop
jmp
test
xchg
xor
jbe
sbb
jmp
push
loopw
ljmp
xchg
lods
dec
lea
outsb
cld
add
xchg
bnd
test
test
push
lods
sti
mov
cwtl
xor
cmpsb
mov
and
cwtl
push
inc
sbb
scas
loop
cwtl
dec
divps
or
rcrl
pop
mov
pushl
test
mov
pop
jmp
leave
data16
xchg
push
or
inc
es
divb
rcrl
test
pop
sbb
xchg
mov
add
xlat
shrb
imul
pop
repnz
cmpsl
cmp
cmpsb
sub
xchg
cmp
stos
test
loop
jle
mov
cs
mov
lret
lret
mov
shll
mov
call
adc
sub
pop
inc
mov
sbb
pop
ds
dec
push
and
adc
pop
sub
jecxz
scas
out
xor
repnz
jnp
jl
mulb
sub
scas
pop
mov
dec
cmp
add
jg
daa
sar
cmp
add
push
mul
cli
in
pop
icebp
lret
aad
xor
adc
sub
in
or
mov
pop
shrb
stos
in
ficoml
adc
je
inc
ljmp
aaa
popf
dec
mov
pop
out
aam
fs
jne
jmp
enter
jo
add
ljmp
ret
pop
scas
cmpsb
das
add
out
jno
fadd
sbb
fildl
js
jl
xchg
inc
cmp
ds
pop
repnz
push
sub
nop
fdivs
pop
mov
adc
add
rcll
cmp
mov
inc
mov
movl
or
cmp
jbe
call
cs
fwait
xchg
and
aad
inc
scas
rol
iret
lods
and
in
lret
xor
sahf
addr16
adc
sbb
cmp
mov
shrb
sub
inc
mov
jne
es
pop
clc
sub
xor
inc
lret
outsl
aaa
adc
and
cltd
bswap
jl
ss
jo
cmp
loop
mov
mov
xchg
jns
jecxz
mov
xchg
test
sbb
test
hlt
and
ds
cmp
loope
mov
mov
push
mov
divl
ja
rcll
push
lret
sbb
mov
push
out
cmpsb
add
push
or
jno
rolb
mov
pop
fwait
sub
xor
push
popa
sbb
mov
stos
inc
roll
int3
jle
dec
in
or
out
fistpl
ud2
mov
loopne
xchg
pop
aad
lret
or
jb
stos
fidivrl
jo
inc
dec
in
mov
and
push
sbb
movsl
int
or
dec
cmp
or
fisubl
add
inc
cmp
push
jno
push
xchg
and
inc
xor
mov
push
outsl
cmpb
and
mov
sbb
fisubrl
and
xor
cmp
arpl
loop
iret
dec
inc
adc
test
and
mov
insb
push
imul
mov
fwait
pushf
xchg
ret
bound
sbb
lcall
andb
mov
cltd
in
sti
jnp
jg
int
repz
jo
pop
fwait
mov
mov
int
xchg
je
les
xor
mov
cmpb
mov
xchg
outsb
fdivrs
or
cmc
sub
addr16
mulb
and
call
aad
popa
inc
inc
xorl
je
jecxz
dec
test
cmp
ficoms
cmovns
push
cmp
popa
inc
cmp
xlat
iret
stos
inc
fisubl
pop
loope
loope
lea
xorl
fnstsw
xchg
outsb
pop
jno
ja
iret
scas
add
mov
fwait
sahf
pop
std
aaa
shl
push
add
es
inc
outsb
jb
dec
dec
mov
loop
mov
or
fs
addr16
mov
mov
cmp
and
jae
pusha
in
mov
pop
inc
stc
adc
push
dec
shll
rcrl
dec
jne
mov
fbstp
xlat
pop
jecxz
sbb
mov
dec
xorl
mov
cmpsb
xor
add
mov
fstl
push
fnstenv
pushf
aaa
add
test
jmp
loope
push
outsb
dec
push
sti
cmc
pop
push
sub
push
mov
mov
bnd
lods
jnp
rol
lods
cmpsb
bound
or
mov
pushf
aaa
je
pop
xchg
mov
cmc
cmp
inc
and
aaa
arpl
mov
mov
cmp
xor
dec
out
fbstp
leave
mov
aas
or
test
cmpsl
into
pushf
lea
jle
lds
movsl
insl
pop
push
adc
fmull
add
push
lahf
pop
stc
sbb
fucom
or
bound
iret
pushf
and
enter
jge
inc
xor
and
cmp
imull
pop
mov
mov
lock
ljmp
enter
hlt
dec
push
push
repnz
cmpsb
iret
pop
cmpb
pop
pop
mov
cmp
lcall
pop
xor
and
mov
cli
es
xchg
pop
call
arpl
js
sbb
pop
sar
loope
and
mov
std
dec
mov
xchg
jae
adc
mov
loopne
ja
pop
push
jg
lods
jmp
xchg
push
lcall
cltd
push
leave
xchg
popf
test
adc
adc
mov
sbb
mov
sbb
mov
dec
inc
cmp
shlb
mov
mov
fwait
pop
xchg
mov
pop
add
mov
dec
push
pop
in
adc
ja
cmp
fistpl
sub
mov
ds
int3
and
mov
ret
push
mov
dec
cltd
mov
iret
data16
rorb
mov
lods
stc
cmp
test
push
jp
cmpsb
push
dec
xor
addl
push
mov
pop
mov
cld
adc
jmp
sbb
push
mov
scas
ja
cld
into
jbe
in
ficoms
sbb
jge
mov
dec
jbe
dec
dec
faddl
into
fidivrs
lcall
loope
je
jecxz
in
nop
out
and
ret
push
loopne
mov
rcl
popf
dec
popa
adc
repnz
daa
out
jge
enter
dec
and
push
xor
sub
rcll
sbb
pop
inc
or
les
addr16
mov
repnz
mov
dec
jns
lods
mov
sbb
ds
dec
jl
pop
sub
in
aam
mov
lahf
pop
or
in
clc
insb
inc
js
insl
fwait
dec
xor
jne
mov
or
dec
add
jae
cwtl
or
cmp
cmp
dec
cmpsl
add
test
sbb
push
pop
in
incl
add
dec
das
mov
cmpsb
add
dec
lods
add
fistpl
adc
pop
mov
and
sub
xor
add
shl
and
int
out
inc
stos
repz
xor
dec
test
sub
jg
pop
ja
lcall
mov
or
dec
adcl
pop
aaa
inc
pop
test
fsubrl
and
xlat
pop
in
cwtl
int3
or
jb
pop
inc
out
outsl
cmp
out
test
jmp
pusha
xor
andl
pop
decb
movsb
fists
repnz
leave
shl
sbb
lret
icebp
jg
and
sub
xlat
and
cmpsb
push
mov
sub
lds
jo
out
jb
mov
sub
sarl
inc
cld
push
pop
insb
pop
in
rcrl
xor
add
aas
dec
cmc
dec
pop
pop
add
pop
cmp
adc
pop
and
loop
jb
mov
pop
shlb
and
in
ljmp
ret
sub
cmc
push
pop
adc
stos
pop
mov
and
js
pop
cmp
aam
or
sbb
sbb
lret
mov
imul
bound
xor
jmp
mov
test
sahf
jnp
mov
ret
lods
cmp
cmp
sbb
cmpsb
jp
jge
mov
je
add
sbbl
js
cmp
jmp
mov
inc
xchg
mov
lods
jne
mov
jns
push
jae
xchg
inc
popf
loopne
das
mov
cmc
ljmp
int3
xor
test
popa
outsb
xchg
xchg
mov
std
mov
mov
pop
adc
xor
pop
pop
fidivl
cmp
imul
push
fistpll
clc
popf
out
lods
cmp
aas
xchg
sbb
and
mov
jns
jmp
idivb
les
cmp
mov
aaa
xor
imul
mov
hlt
xchg
xorb
jne
scas
inc
rol
push
xchg
xorb
aaa
push
mov
aad
jo
cmpsb
cld
xchg
stos
push
push
leave
jnp
sub
pop
adc
or
adc
int
sub
sub
inc
int3
ljmp
and
pop
add
ss
leave
pop
imul
cli
daa
test
dec
rol
in
cmp
pop
fildl
mov
push
pop
lcall
in
arpl
or
test
imul
sbb
xlat
fildl
xchg
mov
shlb
sub
pop
xor
xor
aas
mov
clc
dec
push
sbbl
jnp
ljmp
pop
repnz
imulb
jle
sub
sbb
outsl
mov
popa
dec
cmp
popa
jp
lock
test
pop
addr16
fyl2xp1
xchg
and
mov
cld
clc
pop
loopne
mov
in
jns
ret
popf
mov
pop
mov
fistpll
pop
lds
mov
xchg
push
adc
in
test
cmp
popf
test
insb
mul
dec
fists
inc
ror
inc
clc
les
push
mov
sbb
leave
das
loopne
aad
stos
fidivrl
aas
jbe
jecxz
pop
sbb
data16
fs
loopne
or
and
pushf
ret
cli
js
push
shlb
adc
outsb
cwtl
pop
mov
test
loopne
dec
adc
negb
mov
shrb
stc
push
mov
sbb
mov
add
test
daa
test
xor
push
divb
test
into
pop
mov
outsb
mov
fiadds
fisubrl
jno
cmpsb
insl
les
xchg
and
addr16
nop
jae
adc
bound
cmp
xor
sub
mov
repnz
in
push
dec
fiaddl
shlb
or
sub
or
incl
sub
jnp
jno
push
add
xchg
pusha
cmp
cmpsl
inc
lret
push
popf
push
sbb
rolb
mov
dec
add
iret
xchg
stc
pop
push
lcall
mov
popa
sub
and
aad
clc
popw
mov
negl
push
pop
ficoml
mov
jp
pop
pop
aad
fbld
aam
scas
loop
movnti
mov
stos
jo
mov
repz
dec
in
push
pop
fdivrs
push
pop
and
mov
jge
push
popa
fmuls
aas
in
test
pop
nop
add
hlt
inc
ffreep
daa
and
sub
sahf
push
xchg
push
mull
xchg
xchg
dec
mov
fistpl
dec
pop
in
pusha
repnz
fnsave
mov
xchg
das
rcr
adc
out
xor
dec
dec
add
ret
or
xor
jo
ret
ret
arpl
jno
mov
in
ret
mull
xorb
inc
std
dec
lods
movsb
je
pop
in
jae
rorl
add
pop
push
icebp
stc
negb
nop
and
or
pushf
lea
jecxz
mov
rolb
xor
test
shlb
ficompl
stos
in
sahf
insb
inc
imul
sub
jo
adcl
les
imul
pusha
movsl
sub
jmp
inc
adcl
fistps
int
mov
aaa
or
out
xchg
cmp
inc
int
jb
adc
mov
jle
cmp
mov
and
add
out
push
push
and
stos
cltd
xlat
out
xor
rolb
ret
xchg
repz
fnsave
out
insl
jge
mov
pop
fs
stc
sbb
or
sub
cli
push
inc
insl
jae
lcall
mov
bound
sbb
stos
sub
pop
ret
adc
or
xor
add
push
or
pop
pop
adc
mov
mov
out
pop
mov
pusha
xlat
aas
mov
psrad
pop
cmp
xchg
fldt
sub
rorl
lea
es
mov
adc
repz
sbb
or
dec
pop
push
mull
das
push
pop
lods
popa
ret
inc
in
pop
inc
push
imul
dec
roll
cwtl
in
mov
je
sti
aas
mov
ret
xchg
push
mov
stc
arpl
sbb
dec
lock
pop
jns
outsb
or
cltd
lcall
push
out
imul
lds
test
addl
ret
int
mov
mov
push
fistpll
jecxz
and
sbb
pop
aam
stos
outsl
mov
sti
mov
ja
or
pop
add
or
out
xchg
loop
push
stos
imul
sti
and
sahf
fisubrl
sbb
test
or
dec
pop
lods
push
out
inc
ss
popa
ja
and
movaps
in
inc
popa
fistpl
xchg
ja
jb
push
loope
sar
hlt
and
adc
xor
dec
leave
lret
mov
addl
imul
out
lods
sbb
popf
pop
int
fdivrl
dec
notb
scas
ficoms
pop
cwtl
fwait
mov
shrb
es
jg
ss
or
cmp
inc
mov
mov
rorl
mov
incl
mov
faddl
mov
pop
inc
call
mov
out
jno
cmpsl
mov
mov
movsl
add
push
imul
mov
mov
pop
jmp
mov
xchg
push
dec
outsl
mov
push
out
cli
sahf
lret
mov
sbb
insb
push
push
sbb
sbb
lock
out
bound
and
cli
popf
jne
xor
pop
stos
fisubl
adc
adc
dec
ja
jno
mov
mov
rcrl
sub
sti
push
push
addr16
adc
push
mov
cmp
inc
sub
outsl
dec
inc
mov
inc
out
movb
push
adc
jbe
xor
idiv
push
jmp
sub
lea
and
mov
les
adc
jne
es
fidivs
pop
loop
mov
pop
pop
dec
xlat
aad
adc
les
movl
fwait
or
mov
shlb
pop
je
jp
cmp
jb
jno
lds
sbb
arpl
pop
dec
dec
movsb
lock
push
push
mov
dec
rclb
jbe
xchg
ja
rcrl
adc
or
popl
insl
idivb
push
jecxz
or
mov
lret
push
ljmp
in
fistpl
mov
pop
jecxz
std
sub
pop
scas
dec
inc
mov
in
das
lds
cmpsw
nop
bound
cmp
jo
daa
or
cmp
push
aas
divl
cmp
pop
jmp
movsb
sahf
inc
out
push
add
and
xchg
cli
mov
pop
push
mov
fimull
lahf
jnp
dec
andb
clc
dec
cli
jbe
xchg
xchg
xor
inc
call
nop
xchg
adc
iret
inc
mov
add
jmp
ja
cld
and
push
mov
mov
loop
dec
stos
xchg
es
adcl
scas
sbb
out
pop
jle
mov
and
fcompl
or
sub
test
test
ds
scas
fsubrp
jne
inc
shl
daa
dec
std
xchg
cmpsl
call
dec
jmp
mov
ret
repz
mov
cmp
into
movsb
pop
frstor
pop
jmp
outsb
data16
stc
xor
lea
sub
xor
inc
mov
push
clc
xor
jns
and
shlb
lock
jl
xlat
sbb
sub
lret
xor
test
inc
arpl
gs
mov
push
xor
sti
push
lret
int3
mov
pop
jo
int
fisttpl
mov
xchg
xchg
lcall
and
or
push
fdivl
sbb
lods
loopne
and
aaa
rcr
fcompl
adc
nop
sbb
lea
push
out
sub
fmulp
sahf
sbb
insb
xor
mov
cmpsl
inc
jb
jns
jecxz
popa
sahf
das
mov
and
cmp
inc
cwtl
xorb
cltd
insl
jle
mov
fs
lea
add
inc
sbb
inc
add
popa
adc
and
inc
stos
xor
mov
mov
test
rolb
enter
pop
aam
jl
test
or
ja
mov
push
sahf
add
and
mov
icebp
xchg
jne
out
dec
add
lods
add
mov
adc
cmp
push
das
pushf
jno
test
mov
add
push
ficompl
into
les
xchg
pop
add
pop
inc
pop
rcrl
push
mov
loopne
pop
jno
cmpsb
jae
test
out
lahf
sub
popa
fs
leave
jge
pusha
insb
mov
lds
fmul
dec
es
or
xor
push
das
dec
aam
pop
push
into
mov
cmc
dec
add
cltd
xlat
pop
mov
lea
lea
scas
shrb
loope
jae
jmp
push
pop
imul
cmpb
mov
adc
js
out
mov
or
inc
les
lahf
imul
dec
cmp
test
mov
push
push
aad
adc
int
in
in
stos
adc
sub
loop
in
loope
pop
push
jmp
sub
pop
cwtl
inc
addb
rolb
sbb
neg
pusha
pushf
popa
arpl
add
fcmovnb
addr16
ret
and
test
cmpsl
out
rcr
sub
test
in
les
inc
or
mov
lods
sti
lds
cmp
insl
into
pusha
sbbb
cli
jecxz
adc
nopl
testb
cmp
add
jae
outsb
pusha
mov
pop
push
mov
dec
xchg
xchg
push
xchg
pushf
dec
jns
shlb
cmc
out
rcrb
and
mov
movsb
das
inc
adc
dec
outsb
push
pop
xor
sub
movsb
inc
in
dec
inc
mov
mov
cmpsl
mov
int3
stc
int
push
rol
or
decl
adc
cmpsb
sub
mov
shrl
jne
push
push
loop
pop
loope
mov
subl
bound
shlb
add
in
stc
jno
pop
aas
rcrb
imul
xorl
jmp
xchg
inc
mov
adc
pop
cwtl
inc
aam
or
rol
xchg
xchg
fs
in
sbb
pop
repz
inc
inc
sbb
cmp
sahf
out
call
jno
jmp
pop
repz
mov
cmp
mov
jmp
das
inc
pop
js
dec
int3
mov
jp
dec
imul
addl
mov
xor
cld
out
xchg
fidivs
fisubrs
mov
jbe
cmp
in
sbb
loopne
jae
pop
lock
loopne
add
dec
push
jo
xchg
lock
pop
jae
and
mov
in
cmp
popa
loop
aad
jge
data16
mov
xor
and
pop
or
pushf
sbb
jno
cmpsb
dec
movsl
insl
push
stos
xor
inc
mov
lea
sbb
sbb
push
test
leave
fcoml
mov
add
push
or
jp
inc
push
sub
add
mul
mov
and
rcrl
out
ss
dec
add
jge
les
out
mov
fisttps
xor
add
sbb
pusha
stc
aam
and
ret
jge
xor
add
push
dec
nop
lods
push
pop
mov
mov
add
ljmpw
in
mov
mov
push
cmp
push
sbb
push
clc
push
dec
sbb
mov
stos
add
xchg
subb
mov
jb
push
mov
jge
cltd
xchg
test
into
mov
add
sbb
adcl
push
sub
push
lret
int3
pop
sarb
cmpb
cltd
mov
pop
mov
jnp
mov
jae
mov
les
adc
and
pop
xor
mov
xchg
add
sahf
scas
ja
cwtl
add
inc
gs
add
mov
xchg
data16
and
mov
testl
cmp
inc
cmpsb
pop
mov
pop
outsl
arpl
mov
push
shr
stos
inc
xchg
ja
and
push
flds
repnz
cs
mov
fcoms
xorb
mov
adc
dec
push
sbb
in
test
icebp
mov
ljmp
inc
mov
pop
enter
sub
jbe
imul
xchg
cwtl
jb
push
js
cmp
fs
imul
cli
or
sub
enter
popa
cmp
or
hlt
in
incl
xor
addb
pop
popa
stos
mov
test
mov
jp
cmc
jmp
sub
loopne
pop
mov
jmp
adc
scas
ret
andb
adc
pop
mov
int
pop
loope
push
out
push
jle
jg
aaa
inc
or
add
sub
mov
push
int
mov
cmp
jae
push
daa
jns
sub
loop
out
xchg
ret
out
divb
int3
shlb
xchg
cs
out
and
aad
jg
dec
rol
push
cld
mov
scas
xor
xor
jo
int3
sub
mov
xchg
push
pop
mov
mov
iret
mov
outsl
fisubrs
movsl
leave
mov
fsub
lret
or
pop
or
pop
push
movsl
inc
fwait
push
in
cld
push
stos
mov
jmp
add
mov
stos
push
fstps
insb
popa
lods
sub
mov
subb
bound
xchg
fs
call
sub
sbb
mov
pushf
xchg
jmp
mov
fists
insl
jmp
inc
and
movsl
add
pop
into
loope
pop
sbbb
cmc
sub
mov
std
scas
mov
pop
sub
add
cmp
into
xor
js
mov
cmp
cmpsb
movb
repz
in
les
iret
mov
addb
rol
fistpll
dec
dec
add
mov
mov
add
xor
mov
rolb
in
mov
test
cmp
iret
pop
adc
ret
test
and
je
das
xor
adc
nop
and
out
test
cli
mov
inc
mov
sti
repnz
mov
repnz
aam
cmp
jmp
push
mov
repz
cmp
sbb
push
inc
fdivl
jecxz
mov
fnstenvs
leave
adc
rcrl
sti
xor
das
inc
cmp
fdivs
shl
mov
fisttpll
push
mov
les
ficompl
fidivrs
call
cmp
into
pop
sub
pop
sti
adc
add
push
xchg
sub
fnsave
xor
xlat
sub
cmpsb
or
sub
mov
pop
cmp
adc
sbb
pop
scas
fwait
arpl
movsb
pop
daa
adc
and
inc
fsubrl
lea
xor
and
xchg
clc
pop
daa
inc
adc
mov
daa
cmp
test
xchg
add
cmp
ljmp
mov
add
mov
xor
cmp
adc
sub
stos
cmpsl
lds
jb
and
and
lcall
xor
push
jns
aam
je,pt
rorl
jecxz
scas
pop
popa
cli
mov
testl
push
call
call
xchg
mov
jecxz
pop
fdivrp
ret
xchg
pop
jnp
cmp
and
or
out
adc
sahf
mov
insl
popf
movsl
cmp
xchg
pop
sbb
test
das
shlb
ja
cmp
hlt
or
lahf
repnz
xchg
pop
sbb
nop
xor
push
pop
lods
sub
out
into
int
inc
push
nop
cmpsl
pop
fdivl
push
stos
aam
out
nop
add
fdivr
add
ficomps
int3
mov
hlt
xchg
pop
cmp
cmp
in
std
xchg
fwait
sub
and
stos
mov
adc
push
pop
pusha
and
mov
or
imul
insb
stos
outsb
push
std
dec
jno
jbe
push
test
xor
fistps
mov
pop
icebp
xchg
out
rcrb
mov
cmp
sbb
jl
push
int
in
out
pop
subl
push
fs
mov
in
ljmp
fldt
das
sub
movsl
popa
je
xchg
in
cmp
idivl
fsubrp
mov
lea
in
lea
mov
lods
imull
adc
arpl
push
stos
mov
fs
lahf
mov
pop
popf
movsl
insb
sbb
mov
in
xor
in
xchg
cmpsb
mov
xor
mov
inc
jno
push
mov
test
mov
mov
push
pop
les
es
push
insb
or
fisttps
push
sub
ret
shll
int
test
adc
sub
testl
mov
mov
js
in
shlb
fisubrs
pushf
push
mov
pop
add
ljmp
xor
push
xor
jp
xchg
out
testl
lcall
loope
pop
aam
enter
pop
xchg
sahf
hlt
cs
popa
cmp
jg
adc
xchg
adc
mov
rcl
jbe
jle
cld
jmp
cmpsl
mov
and
push
addr16
or
mov
inc
inc
inc
mov
es
jp
das
push
add
xchg
mov
xlat
cmp
mov
cmp
jns
aaa
sub
notb
jo
imul
fimuls
popf
pop
mov
icebp
mov
sbb
lahf
mov
sar
mov
add
pop
jne
insb
fdiv
and
icebp
das
into
jbe
test
dec
addr16
xchg
movb
pop
or
xchg
loop
les
mov
inc
fwait
test
cmp
dec
lcall
sbb
inc
daa
test
stos
cwtl
cmp
pop
repnz
enter
aam
lods
insl
sub
sub
push
mov
xor
lock
xor
movsl
lods
and
mov
mov
sarl
cmp
mov
mov
cmp
xor
icebp
push
rcrb
addr16
mov
mov
mov
xor
xchg
xor
je
and
dec
dec
mov
ja
out
jns
jl
outsb
sub
mov
in
scas
pop
sub
cmp
lods
xor
dec
test
or
lds
xor
lock
mov
test
stc
pop
jp
and
jo
popf
mov
clc
add
ret
cmpsb
sbbb
lock
inc
jecxz
pop
sub
adc
pop
xchg
mov
push
sbb
push
fisttpl
cmp
loopne
in
addl
adcb
clc
xchg
inc
stos
movsl
dec
out
lea
pop
jecxz
mov
stos
ret
dec
adc
mov
adc
sahf
xchg
push
jmp
insl
popl
ret
cs
xchg
shll
out
fstl
dec
add
dec
jl
std
pop
push
or
mov
cmpps
cmp
push
add
inc
cmp
jmp
adc
fs
inc
nop
mov
stos
outsl
or
mov
movsl
or
cltd
sbb
inc
mov
clc
mov
cmpsl
adc
sbbb
dec
fxam
mov
lods
lea
push
cmp
subl
daa
add
fisttpl
dec
mov
inc
push
outsb
mov
xchg
aad
cltd
sub
loope
scas
xor
mov
or
movsb
loope
mov
cmp
out
sbb
mov
jno
mov
imul
jbe
jmp
cmp
push
sbb
jo
pushl
push
movsb
sub
addr16
lods
aam
and
fbld
sbb
setnp
icebp
popa
aam
cmp
int
mov
or
loopne
and
push
mov
loop
push
adc
pop
sahf
pop
sub
mov
es
jb
repnz
call
cld
mov
aad
mov
popf
pushf
aaa
sahf
jns
xchg
mov
call
je
fisttps
rclb
xchg
xchg
dec
or
push
dec
xor
and
jo
jne
daa
push
dec
in
sahf
addr16
minps
jl
les
stos
adc
iret
nop
sbb
mov
ss
int
mov
mov
xchg
orb
mov
out
call
jb
xor
xchg
jns
fsts
out
fsts
outsl
push
sub
fcoml
test
rcr
push
ljmp
adc
insb
insl
fisttps
jnp
xchg
repz
adc
addr16
daa
jecxz
inc
xchg
cmpsl
aam
and
movsl
shrl
ljmp
lcall
sbb
jp
and
dec
jl
and
jecxz
arpl
cmpsl
push
enter
sbb
enter
xor
xor
enter
fidivs
gs
add
mov
sbb
xchg
fisubl
adcb
repnz
dec
and
test
push
lret
dec
mov
jns
jge
mov
lret
imul
aad
sub
mov
test
popa
sbb
scas
test
or
push
les
call
lods
ss
mov
mov
sbb
mov
fistl
dec
mov
mov
push
push
mov
adc
add
mov
mov
push
lds
in
in
shl
mov
sub
outsl
in
std
nop
mov
xor
in
cmp
adc
lea
sarl
mov
mov
rcr
mov
int
jno
or
ja
enter
sbb
test
push
xchg
xlat
cmp
test
mov
and
mov
and
adc
cmp
jb
or
inc
push
shlb
sub
in
ljmp
sbb
lcall
sahf
push
xchg
adc
jnp
daa
adc
icebp
add
fiaddl
add
mov
rep
stc
fwait
xor
adc
ljmp
fwait
sub
sbb
jl
xchg
testl
insb
sti
loope
xchg
jp
push
mov
mov
push
fnstenv
fiaddl
dec
mov
and
insb
ficoms
mov
call
ss
add
int
and
xchg
push
popf
in
jmp
dec
sub
cmp
daa
xchg
into
inc
pop
sbb
fwait
sbb
or
xor
xor
inc
rcrb
sub
xchg
aam
lahf
or
popf
outsb
xor
sbb
and
into
aad
imul
xchg
stos
filds
mov
ret
bound
jnp
fcompl
push
mov
test
cld
movsl
jns
inc
rorl
scas
adc
leave
push
movsl
mov
es
xchg
dec
pop
pop
mov
outsl
mov
mov
lea
imul
dec
rcll
sbb
sarb
lret
add
sbb
xchg
dec
xor
sub
jmp
daa
mov
cli
into
inc
jl
or
lock
dec
and
jns
imul
hlt
popa
adc
pop
dec
cmp
xchg
push
xchg
outsl
hlt
lahf
aaa
adc
sarb
test
jle
sbb
mov
mov
xchg
sub
fimuls
push
lret
and
add
lea
fs
jg
pop
cli
mov
dec
mov
inc
xchg
adc
loop
jne
adc
jns
mov
ljmp
push
outsb
mov
shll
push
fldt
sbb
in
mov
das
mov
fisubrs
je
test
fwait
into
push
cmpsl
xor
sbb
mov
add
inc
ljmp
test
jb
loope
fsubrs
pop
shr
push
pop
jnp
clc
shll
out
pusha
xchg
sbb
or
or
xor
fcmovu
les
insb
xchg
leave
xor
shrb
push
mov
aas
in
loopne
xchg
or
push
stos
shl
test
nop
dec
sbb
xchg
xor
pop
dec
xchg
rorb
out
arpl
mov
cli
stc
clc
xchg
inc
sti
mov
in
adc
movsb
pusha
cltd
stos
or
andl
mov
adc
push
cld
mov
and
lahf
xor
or
or
out
out
ss
pop
xchg
cmp
test
jmp
dec
popf
aam
inc
js
pop
push
test
add
xor
pop
aad
rol
shll
imul
or
mov
mov
bound
sahf
dec
pop
insb
pop
add
inc
test
dec
mov
gs
add
cmp
mov
movb
arpl
mov
popa
push
add
in
lret
ja
xchg
jecxz
mov
mov
lret
fcmovnb
ljmp
add
dec
push
jmp
clc
popa
incb
cmc
movsb
aas
pop
xchg
cmp
sbb
cmp
rclb
pop
std
dec
cs
call
mov
pop
and
jmp
jmp
jne
mov
imul
xor
lock
mov
push
or
adc
xchg
adc
mov
sub
and
cmp
xor
in
cltd
xor
push
dec
movsb
mov
and
rorb
outsl
xor
xchg
jmp
adc
cmp
xor
xor
dec
aaa
adc
adc
mov
pop
movb
mov
loopne
and
dec
or
data16
jle
mov
pop
pop
call
xlat
loopne
lcall
adc
adcl
adc
jg
pop
sahf
sbb
add
lods
aam
cmp
popa
xchg
push
lcall
shl
jle
call
xor
bound
pop
lds
pop
mov
mov
nop
aas
pop
dec
adcb
sub
fdivrl
lcall
aas
or
push
ret
adc
ljmp
dec
mov
and
mov
outsl
lret
repnz
sub
sub
inc
xor
repz
cwtl
in
inc
movsl
adc
mov
ds
xchg
sub
jmp
add
std
lods
add
pushf
cli
test
push
jg
dec
inc
addr16
xchg
aaa
movsb
jmp
loopne
ljmp
fisubrl
or
icebp
pushl
aam
push
xchg
lret
mov
das
dec
add
add
dec
stc
hlt
mov
and
in
mov
pop
ds
call
push
dec
movsl
out
or
hlt
cli
fnstsw
jecxz
aad
lods
jae
mull
stos
adc
fdiv
test
inc
lds
pop
cld
jo
lcall
sub
jbe
dec
xchg
xchg
pop
pushf
pusha
xor
in
ss
fs
cmc
aas
adc
xor
jle
sbb
and
mov
js
fsubrl
ds
lds
es
incb
leave
xor
into
dec
cs
dec
loopne
js
addr16
adc
mov
lcall
stos
adc
push
push
jno
test
ret
filds
rorb
nop
pop
ret
test
adc
js
sbb
rorb
iret
sub
fwait
dec
sti
pusha
add
mul
out
mov
lods
lock
mov
testb
cmp
add
in
aaa
leave
fs
pop
stos
push
sarb
stos
xlat
in
add
fidivl
lods
xor
call
int3
sub
pushf
inc
mov
in
xlat
mov
and
pop
pop
pop
or
jae
das
adc
dec
push
lods
ds
and
int3
mov
sub
add
aam
mov
scas
sub
mov
andl
cmpsl
adc
stc
fsubl
int
cmp
adc
push
cld
icebp
inc
call
cmp
rolb
fadds
inc
aam
cli
dec
mov
mov
or
sub
js,pn
fdivr
jnp
and
loopne
sub
sub
push
js
fwait
shll
cli
test
sbb
repnz
pusha
push
sub
push
shrl
rcll
cli
mov
push
pop
dec
and
shrl
repnz
aas
add
xor
pop
movsl
enter
ret
in
xor
roll
rcrl
pop
ds
dec
cwtl
cmp
xlat
aaa
inc
mov
iret
xchg
into
leave
inc
xchg
sub
lret
mov
pop
inc
or
cs
add
iret
or
xor
mov
pop
cs
iret
sbb
dec
out
test
and
outsl
fs
shrd
and
adc
es
mov
stos
subl
xchg
push
mov
cmpsl
inc
out
popa
jl
and
js
push
std
sub
outsb
int3
jmp
jecxz
sbb
repnz
inc
lahf
mov
pop
shlb
rcrb
mov
sub
xchg
and
xor
pop
pushf
sbb
adc
xchg
xchg
iret
pusha
repz
imul
dec
xor
icebp
push
test
jno,pn
cmp
cmpl
add
mov
fwait
cmp
lds
stos
out
das
mov
stos
in
inc
testl
ret
mov
inc
jb
shrl
xchg
inc
mov
idivb
sbb
xor
icebp
add
cwtl
xor
cmp
add
popa
arpl
cs
popl
jmp
push
insb
sarl
xor
pop
push
or
stos
movsb
sti
ret
inc
mov
mov
lahf
or
insl
push
or
and
dec
outsb
add
out
loope
pop
push
in
cmpsb
cld
enter
adc
test
adc
lret
pop
push
jbe
jecxz
cwtl
loop
pop
inc
jne
out
xor
dec
sub
sub
jecxz
sub
inc
dec
sarl
fwait
call
push
mov
imul
clc
jbe
cmpsl
stos
jne
inc
add
push
pusha
push
inc
jecxz
mov
push
imul
mov
mov
jae
dec
hlt
lods
mov
cmp
data16
dec
in
test
test
pop
dec
adc
push
inc
lods
and
xchg
mov
cmc
test
dec
fst
mov
ja
data16
sti
push
xchg
sub
fs
push
mov
lret
adc
icebp
stos
inc
arpl
ljmp
mov
lcall
dec
cmpsl
jmp
outsb
add
or
test
mov
mov
inc
sub
imul
jmp
mov
push
sub
stos
call
xchg
bswap
xchg
adcl
push
add
das
aaa
and
sarb
or
pusha
xchg
inc
xchg
andb
repnz
push
lds
cld
jb
sbb
add
pop
xchg
insb
and
cwtl
shll
pop
mov
mov
adcl
and
imul
lahf
pop
lcall
add
sbb
out
bound
int
pop
adc
or
mov
sub
add
jnp
cmc
push
inc
mov
rorb
fisubl
sub
mov
cmp
icebp
cmp
bound
adc
xchg
loope
popf
xchg
mov
adc
vpsrlq
sbb
add
pop
inc
int3
mov
fsubrl
sbb
push
adc
jns
xchg
xchg
fldcw
pop
cs
jbe
loope
mov
xchg
pop
xchg
call
cmp
dec
outsb
pop
mov
fwait
cltd
out
rcrl
add
push
stos
push
mov
jb
into
popf
ss
lahf
sub
jno
jge
movsb
daa
xchg
cmp
dec
lods
inc
adc
add
and
sbb
lods
les
cmp
into
movsl
popa
shll
sarb
cmp
pop
dec
mov
push
aas
mov
mov
xor
xor
in
xchg
repnz
out
jb
cmp
les
inc
js
imul
add
stc
mov
dec
jo
or
imul
or
adc
cmp
or
in
sbb
movsl
int
stos
lcall
and
adc
pushfw
lcall
pop
into
fldenv
mov
lods
jns
enter
jl
xchg
push
dec
imulb
and
sti
xchg
mov
or
cld
mov
xchg
bound
pop
mov
sti
mov
vmulps
mov
pushl
sub
push
negb
add
add
jo
xor
cmp
cmc
or
add
mov
imul
push
pop
ret
dec
fldcw
and
mov
ds
push
dec
and
loope
ret
or
addr16
xchg
push
fstpt
and
inc
xchg
mov
push
shrb
cmp
pop
pop
jo
or
mov
pop
sub
sbb
jns
stc
pop
pop
repnz
xor
lret
jl
mov
popa
pop
insb
ljmp
pop
lret
xor
imull
test
divb
ret
xlat
lds
sub
sbb
mov
jb
fdivp
popa
cmp
cld
fs
cmpsb
in
nop
push
xor
jae
sbb
jmp
mov
daa
inc
das
std
pop
and
or
loop
shll
and
lods
test
push
lahf
cmp
sarl
out
insb
pop
iret
out
in
xchg
dec
lcall
sbb
cmp
lea
mov
cmpsb
adc
push
enter
stos
add
mov
mov
int3
out
dec
and
js
aaa
test
daa
andl
pop
icebp
aam
roll
fiaddl
fisttps
fs
adc
test
lods
sub
test
popa
lds
mov
adc
out
pusha
sbbb
push
xlat
pop
leave
out
dec
push
jbe
inc
mov
mov
out
xor
pushw
cmp
or
sbb
call
test
cmc
inc
int
inc
ds
dec
mov
mov
sub
push
cmp
cld
fimull
loopne
add
repz
push
sbbb
pop
mov
dec
dec
fnsave
aaa
inc
add
add
xchg
xchg
dec
enter
jno
mov
pop
jnp
mov
adc
aaa
cmpl
sar
dec
cmp
imulb
and
sbb
xchg
out
or
mov
or
pop
hlt
pop
aad
inc
int
arpl
insl
in
cmp
sarb
mov
and
das
pusha
pop
sub
int3
imul
inc
xchg
xchg
cltd
cli
int3
mov
xchg
push
xchg
push
xchg
mov
stos
negl
mov
sbb
mov
mov
iret
mov
adc
aam
pop
sahf
jne
or
xchg
xchg
psraw
jmp
jg
ss
lahf
jl
adc
mov
jle
cmp
xchg
push
jo
ret
and
jb
aaa
jl
sahf
add
cli
fnstenv
pop
sti
mov
cmp
push
sarb
mov
lret
add
aas
stc
lret
jb
in
sub
mov
cltd
adc
mov
dec
and
mov
push
jae
vmread
or
add
cwtl
shll
daa
cmc
in
jge
lods
adc
xchg
sti
fwait
push
shl
sbb
sbb
cli
or
mov
ret
loop
adc
loopne
or
aas
jle
int
inc
aam
sub
adc
or
inc
aam
fs
xor
inc
push
xchg
add
js
pop
scas
pop
add
mov
adc
cwtl
rcr
mov
call
xchg
sub
jae
xor
xor
xchg
lock
pop
std
add
push
fldcw
mov
les
or
xchg
mov
call
add
mov
lea
cwtl
push
jle
roll
arpl
sbb
mov
lock
repnz
mov
adc
xchg
jmp
test
jo
out
mov
call
lods
in
sahf
sub
xchg
xchg
cmp
sarb
sbb
and
in
sbb
fdivrs
sub
mov
mov
ss
lcall
sub
daa
iret
xlat
xchg
add
orl
and
jge
dec
pop
cmp
cmp
and
roll
mov
test
jb
lahf
rorb
xchg
xchg
js
call
pop
xchg
dec
cmp
mov
cmc
into
in
or
mov
add
mov
jns
in
mov
mov
ret
fmul
inc
mov
add
pop
aad
xchg
es
jb,pn
pop
or
inc
out
hlt
mov
mov
push
int
jl
jb
add
inc
pusha
pop
xor
adc
xchg
pop
and
lcall
push
dec
popf
sbb
and
mov
incb
jl
scas
cld
daa
mov
mov
jl
outsl
push
dec
int3
adc
dec
repnz
pop
sbb
mov
mov
into
jp
push
cmp
outsb
sbb
sub
cld
stc
jo
addl
pop
push
in
clc
jp
or
frstor
xor
fisttpl
inc
jb
xlat
xchg
xor
hlt
xchg
nop
cmc
lea
pop
repnz
jg
mov
testl
or
jp
in
mov
mov
negb
pop
xor
push
cld
sub
fcoms
nop
cmpsl
xor
sub
nop
adc
sub
jp
enter
xchg
into
imul
cmpsl
adc
pop
sub
cmpsb
adc
test
mov
cli
rol
aam
test
les
out
xchg
inc
dec
fists
bound
sbb
into
jecxz
pushf
pop
out
fsubrs
mov
mov
repz
sbb
pop
data16
rolb
xchg
inc
push
aad
das
jno
out
push
or
jne
mov
nop
xchg
mov
cmp
insb
xor
inc
mov
icebp
pop
jecxz
fwait
xchg
or
xor
fnstsw
out
and
rcll
ret
sbb
xor
dec
mov
lds
and
push
mov
aas
pop
or
arpl
pop
xor
sahf
stos
in
inc
mov
jb
mov
inc
push
or
ss
sub
xlat
inc
jmp
adcl
mov
aam
test
cltd
inc
mov
sbb
xor
push
repz
push
cmp
mov
jg
mov
mov
ljmp
xchg
pushf
xchg
mov
dec
loop
pop
mov
test
xchg
pop
pop
ficoml
fs
xchg
sub
das
icebp
fldenv
out
inc
fsubrs
inc
sub
add
in
test
jns
pop
int3
in
mov
sub
push
xchg
aam
pop
call
and
sbb
sbb
orb
and
imul
pop
and
mov
fisubl
push
sub
cmpl
adc
push
push
xchg
aam
mov
das
call
push
and
jbe
dec
dec
movsl
clc
lock
stc
xor
mov
xchg
pop
pop
imul
mov
cmp
push
push
outsb
adc
pop
push
cmp
in
test
jbe
test
xchg
adc
mov
mov
rol
jge
lea
sub
fs
xchg
rorb
pusha
pop
add
inc
xchg
inc
sbb
data16
scas
int
pop
lea
gs
xor
jge
lret
cmp
sub
notl
mov
pop
push
xchg
or
jbe
xor
das
cwtl
je
mov
or
dec
cmc
cmp
andl
inc
and
cmp
stc
jns
xchg
pop
mov
sub
fwait
int
sbbb
or
push
add
xchg
ljmp
pop
pop
push
sti
xor
or
xchg
fnstenv
add
movsb
sahf
int3
out
test
addr16
stos
dec
dec
dec
xor
rcpps
repz
movsl
cltd
mov
jae
std
xor
or
pop
ds
xchg
fst
sub
xlat
sets
push
or
jge
mov
mov
or
push
adc
lods
incl
shlb
xlat
int3
add
dec
jl,pt
shll
mov
jp
pop
das
adc
dec
mov
inc
mov
fs
out
adc
inc
xor
imul
bound
jnp
iret
cwtl
sub
adc
test
sbb
arpl
arpl
xchg
xor
fs
jmp
test
fucomp
push
js
imul
icebp
sbbl
dec
push
pusha
imul
or
aam
and
mov
lds
xor
lds
mov
or
ss
arpl
mov
push
dec
adc
ds
outsl
mov
and
inc
lock
xor
scas
ret
xchg
cmp
xor
aaa
lods
addr16
mov
push
fisttpl
pop
fwait
mov
add
push
out
adc
or
mov
adc
cmpsb
push
aam
pop
add
mov
movsb
out
cmp
dec
sub
jae
clc
fcmovnu
loop
push
lock
flds
add
xchg
insl
loope
mov
cs
jle
jg
push
or
jg
je
pop
cmpsb
pop
cmp
cld
push
outsb
cmc
lcall
jge
cmc
lock
insb
adc
and
lahf
pop
add
insb
aad
add
mov
popa
sbb
or
outsb
xchg
xor
pop
xor
xchg
int
inc
sub
sub
push
orb
fidivs
sub
cs
scas
outsl
movsl
fld1
lds
xchg
sub
movsb
mov
xlat
jae
sub
inc
outsb
inc
insl
jg
les
inc
outsb
loop
into
inc
out
inc
adc
mov
jbe
sub
repz
js
outsl
int
xchg
sti
or
enter
xor
rclb
pop
mov
test
push
and
adc
jno
adc
and
mov
int
or
out
mov
sbb
out
adc
lret
add
pop
push
adc
mov
sub
iret
inc
adc
cmp
lock
or
sub
pop
stos
js
flds
sbb
call
arpl
fst
push
lea
mov
imul
rcrb
push
cmpsl
lock
sbb
add
mov
pop
mov
push
test
add
mov
fistpl
shlb
mov
lea
mov
jle
mov
insb
or
jg
or
fsts
adc
out
aam
and
push
and
loope
sub
jmp
fucomip
loope
mov
pop
jle
pushl
lea
rcl
xor
into
jne
fwait
jo
mov
ret
movsl
pop
xchg
mov
mov
dec
popa
testb
lret
mov
loope
mov
jo
sar
cld
pop
mov
xor
xchg
cmpsl
push
inc
mov
lret
jo
inc
cwtl
mov
push
add
test
jae
dec
xchg
shr
loopne,pn
inc
movsb
jb
xor
jmp
test
xor
inc
repz
dec
popf
sti
lret
shlb
imull
inc
test
sbb
sbb
xchg
jle
hlt
mov
sub
aas
fldcw
roll
arpl
push
cld
in
pop
movsb
mov
xor
stos
inc
or
subl
lods
in
faddl
xor
daa
andl
lods
popf
mov
out
shll
xor
loop
dec
inc
push
lock
daa
fistl
sbb
loope
push
adc
pop
cmp
ficomps
popf
add
mov
mov
ljmp
movsl
pop
push
cli
add
dec
sub
xorl
xchg
loopne
dec
xchg
add
fidivrl
jp
insl
inc
and
cld
fpatan
jno
mov
sarl
inc
imul
cmovg
mov
pop
add
enter
fisttps
pop
stos
jne
jne
imul
pop
sbb
mov
cmp
test
lret
ljmp
cmp
jb
subl
xor
pop
sub
jbe
mov
xor
sarb
les
lea
dec
lock
cmp
sbb
jle
fldcw
adc
in
mov
adc
lods
xadd
shrl
adc
jne
or
pop
pop
icebp
pop
push
out
jb
xor
jecxz
pop
push
aas
out
addr16
ficompl
popa
jmp
sti
aas
lock
inc
adc
outsl
mov
adc
sbb
xchg
pop
dec
js
aas
decb
mov
jne
xchg
mov
adc
cld
cmp
adc
jo
ret
cld
sub
add
add
sarb
jns
mov
mov
repz
lock
mov
xchg
cwtl
popa
sbb
mov
mov
dec
push
push
or
mov
mov
pop
ja
ret
jne
push
andl
and
outsl
or
test
adc
movd
adc
push
sbb
xor
pop
outsb
shrl
cld
adc
pop
cmp
and
xor
jbe
inc
pop
or
fidivl
ja
js
mov
hlt
int
popf
aaa
xchg
shlb
gs
ja
fistl
clc
hlt
push
lea
pop
inc
push
and
push
jb
adc
mov
mov
into
gs
xchg
jnp
loop
int3
xchg
mov
aas
cmp
pop
cmpsb
fcomps
push
mov
outsl
push
je
mov
sbb
cmp
ljmp
push
fsts
sub
fisttpl
and
cmp
and
imul
cmp
xchg
bswap
sub
call
and
push
clc
imul
xor
adcb
pop
dec
cmp
push
repz
pop
movsl
cwtl
xchg
sub
pop
fcmovu
test
or
pop
mov
in
repz
iret
mov
or
cmpsb
jbe
in
push
and
lds
nop
jg
in
out
push
std
push
xor
xor
mov
loopne
sti
cld
pop
pop
pop
add
push
push
adc
mov
icebp
bound
into
enter
and
mov
jecxz
lods
mov
out
or
mov
imul
adc
jo
in
int
out
mov
jmp
pop
inc
xlat
mov
call
push
pushf
mov
hlt
cld
in
daa
pop
int3
and
es
mov
shlb
pop
mov
dec
push
call
pop
stos
shrl
pop
or
movsl
subb
int
mov
and
inc
loope
aaa
cmp
cmpsb
test
push
pop
sub
xchg
cmpb
mov
lret
add
imul
jns
imul
push
cwtl
jnp
repnz
lea
ss
adc
fldenv
fmulp
shlb
xor
fnstsw
mov
mov
ss
sub
mov
and
jbe
sbb
and
out
ret
int3
fcompl
daa
nop
add
mov
lret
cmp
push
out
lahf
lods
cli
fbld
repnz
sbb
jmp
and
push
push
add
xchg
ss
push
mov
mov
in
jecxz
or
subb
inc
mov
shl
dec
outsb
call
jb
rolb
js
jo
loop
in
es
test
aad
jnp
pop
fcom
out
sahf
jb
jno
negb
push
bound
dec
lock
outsl
test
es
pusha
dec
fs
sub
mov
cmc
inc
push
dec
push
mov
aaa
xchg
inc
pushf
stc
and
js
lahf
or
add
nop
dec
jecxz
pop
add
orb
aaa
inc
mov
cltd
mov
adc
cwtl
cmp
dec
repz
xor
enter
ljmp
leave
ret
clc
or
out
stc
xor
or
enter
ss
pop
repz
cmc
inc
push
out
or
cs
xchg
sub
bound
mov
lods
cmp
test
cmc
dec
mov
or
xor
mov
mov
insl
std
sahf
mov
xchg
bound
adc
mov
scas
push
sub
call
jbe
pop
pop
jnp
test
xchg
xlat
pop
fiaddl
lock
sahf
or
or
jl
push
jno
mov
addr16
cld
mov
and
jne
insb
movsb
in
sti
push
jo
push
out
cwtl
popa
jb
cs
inc
bound
xchg
insl
add
cmp
ja
ret
and
mov
nop
mov
stos
push
repz
or
jmp
and
push
dec
vpsrldq
adc
out
lds
out
pop
hlt
mov
add
stos
aas
sbb
out
adc
and
jle
test
sarb
lods
lock
mov
mov
decb
cmp
icebp
clc
mov
mov
push
fisttpl
fnstsw
shrl
repz
lea
pop
adc
or
lahf
fisubrl
or
jne
and
inc
out
les
stc
xor
and
ret
sub
lret
cmpsl
and
dec
xchg
lods
sub
in
push
insb
outsb
inc
insb
in
sahf
out
xchg
xor
loope
fcmovnbe
xchg
cld
fnstsw
dec
pop
pop
lret
dec
pusha
and
or
sti
imul
aad
push
sahf
aad
dec
mov
sub
sub
mov
lods
iret
sub
lret
add
popa
loopne
fstpt
sub
push
adc
nop
mov
int3
and
cmp
mov
jmp
xor
popa
jnp
lret
adc
pop
daa
xchg
jb
out
mov
aaa
sbb
sbb
scas
or
std
test
clc
cmpsb
mov
or
test
inc
rcr
lcall
ja
cmp
shl
jns
push
cmp
xor
mov
xchg
jge
pinsrw
mov
push
jno
lcall
sbb
es
gs
mov
dec
xchg
shll
cmp
xchg
stc
fists
push
movsl
jmp
aaa
sbb
cwtl
cmc
pushf
jle
push
mov
inc
push
pop
lods
dec
rolb
test
je
cmp
sbb
jb
adc
dec
or
cli
sbb
rcrl
mov
push
test
lea
stos
xchg
push
fcompl
call
stos
lods
jle
test
mov
fdivs
sub
push
xchg
cmp
cmp
daa
out
push
fbstp
dec
in
dec
popa
mov
mov
push
or
pop
outsl
cmp
ljmp
mov
and
aam
inc
push
or
mov
stc
sbb
negb
mov
pop
cmp
and
pop
cli
stc
insb
out
sbb
dec
xchg
jp
and
shl
repnz
insb
pop
cmp
sbb
lds
sub
cmpsb
and
inc
ds
pusha
into
int
out
in
das
adc
push
out
xlat
test
sub
out
inc
hlt
rclb
sar
adc
shlb
mov
inc
jb
paddsb
nop
push
imul
pop
orl
mov
dec
and
leave
mov
jg
outsb
cmp
sub
sbb
adc
into
daa
inc
pusha
and
outsb
dec
insb
sbb
ja
mov
and
addb
stos
roll
shr
imul
mov
imul
and
bound
dec
pop
cli
je
inc
jb
dec
incl
mov
or
fimuls
imul
adc
mov
pop
sub
pushl
mov
call
sbb
jbe
paddusb
jmp
out
push
jl
loop
fsubrs
shlb
cmp
rorb
and
mov
or
xchg
mov
sub
lahf
push
jl
out
push
inc
sub
xchg
cmp
loop
popa
cltd
and
xor
jno
outsl
out
sub
pushf
dec
cmpsl
push
jo
subl
push
inc
rorb
jge
sarb
inc
push
dec
jecxz
enter
shl
jne
paddb
ds
push
xchg
jmp
mov
mov
loope
xchg
inc
dec
push
call
pop
mov
xor
xchg
movsl
jno
pop
and
and
mov
adc
jnp
cltd
sbb
mov
sbb
ss
pop
fstpt
inc
sub
adc
sub
or
xchg
and
push
out
aam
push
and
pushf
cli
adc
test
negl
lahf
mov
inc
mov
repnz
add
xor
int3
stos
test
dec
lds
stc
out
or
push
mov
or
pusha
scas
popf
xor
xchg
lock
mov
sub
insl
fbstp
jle
jno
jns
and
loope
int
xchg
or
push
push
dec
orb
xchg
xchg
iret
xor
dec
call
fdivs
push
mov
jo
nop
cmp
mov
sbb
cmpsb
jecxz
cmp
movsb
inc
sub
xor
cli
enter
mov
sbb
aad
orl
jne
xor
in
ds
adcl
or
xchg
loopne
xchg
subl
lds
test
out
inc
lods
jo
push
sub
nop
pop
push
je
shlb
loop
and
inc
push
int
or
lods
add
xorl
je
mov
mov
pcmpgtw
adc
inc
cmp
mov
xchg
iret
cmpsb
cli
js
dec
push
dec
jae
mov
dec
dec
jo
lods
adc
out
shrl
inc
ljmp
jp
or
adc
dec
mov
lret
into
in
loope
push
xchg
sqrtps
popa
nop
lea
dec
and
dec
cwtl
cmp
lret
dec
push
mov
cmp
cwtl
aam
push
rcl
xchg
sbb
lcall
jbe
insb
outsl
out
bndldx
mov
or
jl
movsb
int
inc
mov
mov
push
adc
jge
popf
je
or
mov
mov
pop
push
cmp
pop
lcall
xchg
mov
and
test
out
push
into
lret
shl
lcall
out
xor
repz
out
bound
jge
pop
icebp
jl
push
xchg
fistl
les
cmpsb
ficompl
mov
adc
push
or
aaa
mov
das
pushf
or
xchg
sbb
sub
mov
push
flds
aad
cmp
data16
lds
xor
subb
fisubrl
sub
jbe
jnp
push
pushf
outsb
mov
inc
out
out
sub
mov
adc
lea
out
pop
push
in
adc
hlt
addr16
fwait
or
stos
in
imul
adc
adc
pop
fmulp
and
cmp
fwait
inc
pop
dec
das
pop
jne
movsl
fisttpll
inc
sbb
and
aaa
int
add
in
sub
sub
fcoml
fdiv
or
pop
data16
das
shlb
add
and
stos
jmp
lods
bound
lds
mov
sbb
lret
cmp
incl
scas
or
mov
pusha
loopnew
insb
movsl
adc
add
dec
add
sti
jle
rcll
add
mov
cmp
pop
dec
into
orl
fisubs
jg
adc
jae
shrl
test
rcrb
push
rcrb
push
push
xchg
lret
mov
sbb
inc
subl
popf
repz
lods
pop
cs
lea
adcl
jns
lock
in
lods
clc
stos
daa
lock
cmp
inc
xchg
lods
mov
xchg
negb
jecxz
fcoml
in
fsubrp
shll
movsl
inc
flds
cwtl
fstps
pop
mov
add
sbb
cmp
pop
aas
js
xchg
popa
insl
leave
mov
fcoms
xlat
mov
inc
movsl
movsb
sub
hlt
jnp
ja
push
test
mov
or
jecxz
cmp
sub
lods
aad
xchg
fstpl
xchg
repz
add
jmp
lret
jbe
pop
es
dec
movsl
clc
sahf
pop
cld
rcrb
cld
js
sbb
scas
clc
bnd
push
add
or
or
ds
xorb
data16
ds
ficoms
or
hlt
je
mov
rcrb
out
cmpsl
arpl
loop
xchg
sbb
jmp
add
mov
inc
jbe
xchg
and
sahf
and
dec
addb
lcall
or
iret
xor
push
mov
ds
fisttps
rolb
mov
push
das
outsb
add
push
sbb
sti
loope
push
je
sub
mov
mov
aam
imul
mov
sbb
lods
stos
sahf
das
cmp
pop
test
inc
jns
movsb
negb
bound
shrl
rolb
jl
fnstsw
shrb
mul
cmpsl
out
hlt
stos
jbe
js
in
xor
into
jle
mov
dec
lods
or
jne
enter
aaa
aad
lcall
lods
sbb
cltd
mov
mov
pop
addps
mov
out
jne
mov
imul
addl
add
int
insl
std
and
mov
lock
push
fldl
sbb
push
ret
ljmp
gs
stos
cwtl
int
dec
jne
adc
sbb
int
or
cmc
adc
or
adc
test
inc
lods
or
mov
push
lods
inc
dec
sub
icebp
jnp
jno
int
pop
cld
lret
popa
adc
jg
mov
aaa
out
sub
pusha
imul
jge
imul
mov
jmp
imul
mov
mov
mov
sahf
xchg
repz
repz
stos
pop
incb
dec
xor
push
cli
loopne
lds
xchg
les
ret
jmp
jno
mov
in
adc
mov
jecxz
js
sahf
inc
out
insl
sbb
pop
sub
stos
mov
mov
mov
or
comiss
fidivrs
xor
fdivs
push
jno
cmp
pop
jle
add
add
leave
into
scas
inc
inc
scas
mov
sub
std
mov
push
aaa
cmpb
out
lret
lods
or
popa
jge
xor
add
sub
call
in
into
push
push
or
cmp
fwait
add
mov
rclb
cld
mov
push
pop
mov
cmp
pop
jns
ja
jmp
sub
adc
and
es
inc
sbb
add
push
les
push
sbb
addb
cwtl
lcall
mov
cmp
lcall
push
xor
hlt
cmp
jmp
je
xor
inc
cmc
dec
mov
shrl
or
scas
iret
dec
daa
int3
push
pop
mov
cld
ret
pop
xchg
pushf
aad
inc
gs
loopne
inc
stc
addr16
ja
push
imul
in
das
xor
lcall
in
mov
lcall
mov
and
fcmovu
imul
and
ret
cmc
mov
xchg
lcall
sarl
mov
js
gs
ret
andl
and
mov
mov
adc
sbb
mov
push
data16
fcmovnu
bound
sarl
dec
push
push
loop
daa
mov
and
jg
rclb
xor
jge
outsl
testb
mov
lock
notb
sbb
dec
jp
add
inc
xchg
imul
pop
fs
and
mov
mov
mov
pusha
lods
jle
ret
mov
shl
aam
jle
je
ja
mov
arpl
xchg
dec
or
jnp
jmp
inc
lods
int3
dec
push
mov
je
.byte
.byte
.byte
.byte
push
mov
sub
call
push
push
push
call
mov
push
call
xor
and
add
xor
not
and
add
add
cmp
sub
xor
lea
xor
pop
call
inc
cmp
jne
and
nop
add
add
lea
push
push
call
xor
add
add
sub
lea
nop
nop
xor
call
call
cmp
sub
and
mov
cmp
sub
cmp
and
sub
cmp
xor
push
call
and
xor
xor
add
lea
mov
cmp
cmp
cmp
call
pusha
add
sub
dec
xor
add
sub
lea
and
sub
xor
rdtsc
mov
add
cmp
sub
push
call
cmp
add
xor
cmp
sub
mov
not
mov
add
and
cmp
and
lea
add
xor
add
sub
xor
and
cmp
add
cmp
add
lea
popa
cmp
jne
call
mov
add
mov
mov
lea
pusha
sub
xor
and
sub
neg
xor
inc
add
sub
add
and
add
push
call
mov
lea
cmp
xor
dec
and
sub
xor
or
and
and
add
popa
mov
add
add
and
pusha
cmp
and
add
and
xor
and
mov
neg
sub
and
lea
xor
popa
add
push
push
push
push
call
pusha
sub
mov
mov
xor
lea
cmp
add
add
mov
and
mov
nop
nop
nop
and
xor
xor
cmp
xor
call
and
add
rdtsc
xor
call
or
xor
sub
lea
xor
sub
rdtsc
and
popa
test
je
mov
mov
mov
lods
test
je
mov
stos
jmp
mov
mov
mov
rep
mov
add
jmp
push
mov
sub
call
pop
lea
push
add
mov
mov
mov
push
push
call
mov
mov
pop
push
mov
add
rep
lea
movzwl
pushl
push
push
call
pushl
pushl
call
push
push
mov
and
push
mov
add
push
jmp
and
sub
and
add
mov
sub
xor
mov
add
mov
add
cmp
cmp
mov
mov
sub
xor
sub
neg
mov
add
mov
mov
sub
mov
sub
sub
nop
xor
dec
sub
lea
lea
add
lea
push
mov
pusha
mov
add
push
mov
mov
test
je
test
jne
mov
mov
add
add
mov
add
cmpb
jne
inc
jmp
push
call
mov
lods
test
je
bt
jae
and
jmp
add
add
push
push
push
call
pop
stos
jmp
pop
add
jmp
pop
popa
leave
ret
xor
dec
cmp
lea
cmp
not
sub
sub
xor
xor
not
mov
add
push
mov
pusha
mov
mov
push
mov
add
mov
mov
add
rep
pop
add
dec
jne
popa
leave
ret
mov
mov
dec
mov
mov
add
and
sub
add
xor
mov
xor
sub
cmp
cmp
mov
sub
and
inc
cmp
cmp
lea
add
xor
mov
push
mov
pusha
mov
mov
add
push
call
push
push
push
call
push
push
push
push
call
test
je
add
cmp
jl
popa
leave
ret
or
xor
xor
mov
cmp
xor
xor
mov
and
add
pusha
mov
xor
mov
std
stos
dec
jns
cld
xor
mov
xor
divb
xchg
xor
add
add
add
mov
movzbl
mov
mov
mov
inc
cmp
jne
popa
ret
sub
xor
add
lea
cmp
mov
mov
neg
xor
or
dec
xor
and
and
cmp
cmp
inc
mov
xor
push
mov
pusha
mov
and
push
mov
add
pop
mov
movzbl
mov
mov
mov
mov
add
mov
popa
leave
ret
xor
sub
xor
rdtsc
cmp
and
sub
mov
neg
mov
sub
add
push
mov
mov
and
xor
push
call
leave
ret
add
sub
mov
add
and
and
cmp
lea
cmp
sub
xor
xor
add
inc
and
and
add
xor
push
mov
pusha
movb
mov
mov
mov
lods
stos
test
je
loop
sub
neg
mov
call
popa
leave
ret
xor
neg
mov
xor
cmp
xor
and
add
xor
lea
add
add
cmp
lea
sub
xor
neg
lea
add
lea
and
not
cmp
lea
nop
sub
and
add
and
neg
neg
push
call
mov
mov
mov
lods
push
call
stos
loop
ret
sub
sub
lea
xor
add
lea
xor
add
sub
xor
lea
cmp
cmp
mov
call
xor
cmp
add
add
cmp
xor
mov
cmp
inc
lea
inc
xor
sub
push
pop
mov
ret
xor
sub
cmp
cmp
mov
sub
add
cmp
xor
add
sub
add
sub
and
xor
lea
sub
xor
mov
sub
call
cmp
and
lea
add
and
cmp
xor
sub
and
add
sub
cmp
lea
cmp
cmp
xor
push
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
mov
int
int
int
push
call
int
loop
test
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
nop
xchg
inc
ror
xor
imul
xor
push
push
pushl
mov
imul
xor
pop
pop
pop
mov
jmp
call
mov
nop
xchg
inc
ror
xor
test
mov
mov
test
xchg
inc
dec
xor
test
mov
mov
test
xchg
inc
ror
test
imul
mov
mov
test
xchg
sub
ror
test
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
mov
nop
xchg
sub
dec
xor
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
nop
xchg
inc
dec
xor
imul
xor
push
push
pushl
mov
imul
xor
pop
pop
pop
mov
jmp
call
mov
nop
xchg
inc
ror
xor
fwait
mov
mov
test
xchg
inc
dec
xor
test
nop
xchg
inc
ror
xor
imul
mov
mov
nop
xchg
inc
ror
test
imul
inc
inc
test
xchg
sub
dec
test
test
inc
mov
test
xchg
sub
ror
xor
imul
mov
mov
nop
xchg
sub
ror
xor
imul
mov
mov
nop
xchg
inc
dec
xor
dec
mov
mov
nop
xchg
inc
ror
test
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
mov
nop
xchg
sub
ror
test
imul
inc
inc
test
xchg
sub
test
xor
imul
mov
mov
fwait
xchg
sub
ror
xor
test
mov
mov
nop
xchg
inc
ror
xor
imul
mov
mov
nop
xchg
inc
test
test
imul
xor
push
push
pushl
mov
imul
xor
pop
pop
pop
mov
jmp
call
mov
nop
xchg
sub
ror
test
test
inc
mov
test
xchg
sub
ror
test
imul
mov
mov
test
xchg
sub
test
xor
imul
mov
mov
nop
xchg
inc
dec
xor
test
mov
mov
nop
xchg
inc
ror
xor
imul
mov
mov
ret
xor
mov
inc
xor
inc
cmp
jne
ret
xor
mov
inc
xor
inc
cmp
jne
ret
and
inc
add
testl
push
testl
repnz
testb
testl
testb
testl
sbb
inc
add
testl
testl
mov
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
inc
add
cmc
inc
add
inc
add
cmc
inc
add
cmc
inc
add
inc
add
inc
add
inc
add
inc
add
clc
inc
add
add
add
add
add
add
add
add
testb
push
clc
add
pop
cmc
add
jb
add
jo
add
fs
add
test
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
loopne
add
out
cmc
add
cli
cmc
add
push
testb
push
testb
and
add
xor
add
inc
testb
push
testb
pusha
testb
jb
add
test
add
xchg
testb
add
add
loopne
add
out
cmc
add
cli
cmc
add
push
testb
push
testb
and
add
xor
add
inc
testb
push
testb
pusha
testb
jb
add
test
add
xchg
testb
add
add
add
inc
jo
outsb
fs
outsb
jne
add
add
fs
imul
add
jne
insb
push
arpl
add
outsb
fs
imul
inc
add
add
je
outsb
jne
add
inc
gs
gs
popa
addr16
outsl
jae
add
dec
outsb
jbe
insb
imul
je
add
add
inc
push
jo
jb
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
jae
push
jne
je
gs
popa
add
add
jb
outsb
push
outsl
inc
insb
imul
add
je
popa
jb
je
outsl
jae
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
testl
add
add
jb
add
mov
add
xchg
testl
add
testl
add
testl
add
clc
add
adc
add
and
add
xor
add
ds
add
dec
clc
add
add
add
testl
add
add
jb
add
mov
add
xchg
testl
add
testl
add
testl
add
clc
add
adc
add
and
add
xor
add
ds
add
dec
clc
add
add
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
insl
jo
jb
inc
imul
add
inc
gs
imul
push
jo
arpl
add
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
imul
je
add
add
fs
imul
add
add
push
gs
jb
push
inc
add
add
gs
add
push
outsb
insl
popa
jo
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
popa
je
add
add
insb
jae
jb
insl
jo
add
add
insb
jae
jb
outsb
inc
add
mov
add
movsb
clc
add
mov
clc
add
add
call
add
add
clc
add
mov
clc
add
add
call
add
add
add
gs
je
inc
jb
jae
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
outsb
imul
add
inc
gs
gs
dec
bound
arpl
add
inc
gs
gs
arpl
popa
jo
add
add
je
imul
outsl
jb
add
add
je
gs
inc
outsl
insb
outsl
jb
