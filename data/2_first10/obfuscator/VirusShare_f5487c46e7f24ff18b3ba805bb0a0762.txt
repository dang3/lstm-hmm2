push
call
ret
ret
adc
addb
scas
push
sub
mov
cmp
pop
lock
mov
jle
jg
sub
push
mov
sub
xor
jb
dec
pop
cmp
sub
or
je
xchg
in
sbb
or
mov
clc
dec
enter
aaa
arpl
outsb
cwtl
lds
imul
mov
out
jge
inc
scas
fs
jle
fdivrs
cmp
inc
sahf
mov
std
lods
mov
xchg
mov
sub
xchg
and
and
imul
outsl
enter
sub
fstpt
and
and
cmpsb
icebp
sbb
andl
jae
mov
in
mov
jbe
push
out
xchg
push
jl
mov
mov
and
sub
test
mov
sarl
test
sub
insl
cmp
test
mov
arpl
dec
and
jmp
mov
aas
mov
in
sub
pushf
stc
sub
sbb
clc
dec
shll
mov
hlt
lods
dec
pop
inc
mov
inc
dec
fadds
fidivrl
arpl
data16
xor
jmp
fstps
cmp
leave
push
xchg
std
insl
mov
in
xchg
add
loope
popf
jne
out
jno
out
fsubs
test
push
jecxz
loopne
imul
mov
in
mov
cld
mov
xor
mov
pop
cmp
adc
cmp
inc
xor
mov
cld
dec
mov
iret
and
dec
imul
jmp
fnstsw
in
inc
inc
pusha
push
lahf
and
popa
jno
das
in
sub
arpl
adc
mov
cltd
lods
inc
je
in
lds
mov
and
cld
bound
in
outsb
out
xor
scas
jge
push
jne
jb
das
or
push
jo
add
lock
pop
cmpsl
sbb
in
fmuls
sub
in
mov
std
arpl
fnstenv
ds
rcrl
xchg
ror
push
dec
or
faddl
mov
test
or
xchg
testb
adc
cmpsl
fidivs
add
inc
sbb
mov
adc
mov
repz
mov
pop
stc
dec
mov
movsl
out
pop
xor
adc
rclb
pushf
push
nop
mov
fcmovnb
jb,pn
ficoml
jmp
fdivrl
sub
mov
adc
cmp
cmp
andl
sbb
cmp
mov
jg
ljmp
and
xor
or
sahf
push
lods
std
stos
loope
push
push
pop
outsl
pop
pushf
fs
ret
divl
cmp
sti
int
subb
pop
inc
pop
xchg
xor
mov
mov
mov
sbb
xorb
aam
lahf
mov
add
cmp
pushf
or
test
pusha
and
inc
div
adc
push
dec
mov
mov
rclb
and
push
cmc
jecxz
jae
mov
add
pop
sub
push
jo
js
outsb
inc
in
outsl
push
fs
in
addr16
stc
int
pop
mov
das
mov
lds
adcl
cmpl
mov
jno
fbstp
stc
gs
cmpsl
add
mov
dec
inc
mov
inc
push
ficompl
clc
push
xor
cmp
inc
fisttps
outsb
in
pop
ja
mov
in
fiadds
aaa
not
bound
pushf
movsl
or
in
cmp
in
loop
cmp
dec
aas
fwait
cmp
mov
out
leave
xchg
mov
fiadds
lods
pop
ds
imul
lret
mov
movsl
rorb
adc
or
jb
or
cmp
jmp
cld
jmp
repz
jl
dec
push
mov
test
dec
aad
lret
mov
aaa
sub
sbb
jae
icebp
das
inc
icebp
in
mov
pop
pop
jge
cmp
pop
repnz
lods
pop
cs
add
imul
into
and
xchg
loop
rcll
daa
dec
sub
pop
repz
add
out
sbb
cmp
bound
jo
pop
jns
shrl
ss
int3
push
or
or
push
pop
fcompl
jle
jbe
icebp
sub
nop
push
pop
mov
pop
jecxz
and
push
cld
stos
add
pop
xor
sub
mov
aam
lahf
mov
cmp
cmp
outsb
mov
fs
mov
jg
inc
pop
mov
adc
dec
mov
adc
into
mov
jb
pop
push
xor
outsb
aas
icebp
es
cs
jge
ret
cmp
mov
insb
loope
mov
das
out
stc
out
pop
fidivl
add
sarl
jnp
sahf
push
add
or
add
stos
pop
cmp
add
xchg
notb
xorb
cmp
xchg
repz
cmpsl
jns
jmp
dec
xchg
mov
jg
aas
pop
sub
dec
mov
inc
push
arpl
aaa
imul
inc
sbb
mov
cmp
sbb
in
jl
push
pop
data16
lock
stc
jne
pop
sbb
test
cmp
les
mov
pop
pop
pop
fs
add
pusha
sbb
iret
mov
fs
jns
lock
sub
fldl
fldenv
pusha
imul
push
call
xchg
mov
sbb
jo
repz
push
mov
push
int3
inc
jns
mov
add
inc
sbb
jne
stos
ret
lods
adc
dec
insb
mov
sub
xchg
nop
les
or
aad
jae
inc
jge
movsl
mov
mov
mov
jns
fbld
cwtl
lahf
sub
sub
lret
ds
xor
stos
xchg
mov
inc
out
lods
and
sbb
mov
pop
mov
scas
je
xchg
cmc
or
inc
cmovl
cmp
adc
jns
mov
out
sbb
adc
xchg
stos
jmp
xlat
or
mov
add
iret
jge
dec
jae
jae
int3
add
push
adc
adc
into
popf
xchg
and
mov
or
inc
jl
cs
outsb
push
inc
mov
mov
adc
add
test
pop
pop
call
push
cmc
adc
subl
inc
out
pop
loop
push
jb
mov
lock
push
mov
sti
jge
push
pushf
cmc
sub
or
mov
sahf
sub
push
xor
dec
add
fidivl
and
ficomps
lahf
push
cmp
xchg
hlt
dec
or
ja
subb
movsl
lods
sbb
decb
cmp
hlt
les
shl
loopne
jl
mov
inc
js
and
or
fsubrs
imul
notb
xorl
adc
xor
inc
mov
shrb
mov
or
sbb
das
and
imul
lds
push
pop
inc
fsts
popf
sub
insb
pop
mov
addr16
stos
and
inc
add
xchg
inc
jne,pn
mov
cmp
in
fstpl
push
pusha
out
adc
adc
repz
or
stos
sub
add
push
lds
mov
adc
and
ss
cmp
inc
out
xor
mov
leave
ss
or
push
ja
ret
sub
inc
add
mov
inc
fyl2x
mov
or
jno
movsl
or
movsl
mov
pushf
cmp
mov
and
mov
and
or
sub
imul
pop
and
mov
mov
insl
pop
inc
mov
adc
push
inc
movsl
dec
sbb
push
mov
leave
lock
push
sarl
cs
shlb
add
fdivrs
loop
icebp
iret
imull
scas
or
mov
add
xor
cmp
xchg
std
stc
insl
sbb
add
jns
jo
jmp
rcll
cs
adc
sub
inc
push
fcmovnbe
imul
bound
cmpl
gs
mov
adc
test
xor
outsb
xor
dec
add
pusha
in
cmpsl
in
jae
sub
out
push
jne
sub
rcrb
and
jb
xchg
sbb
cld
pusha
mov
sub
add
stos
pop
imul
and
cs
push
lret
cmp
and
push
addr16
and
adcl
popa
inc
jge
imul
mov
subl
mov
stc
fcoml
xchg
lea
and
adcb
popa
fwait
push
in
jmp
and
mov
xor
mov
imul
mov
scas
jp
into
or
xor
push
sbb
aas
nop
cmpsl
push
cmpsl
jecxz
xor
das
movsl
mov
cwtl
xlat
leave
push
and
jne
subb
xor
jecxz
dec
jne
ror
inc
sbb
inc
add
push
inc
and
xor
xchg
xchg
pop
and
sarl
loop
jg
pop
lea
inc
pop
pop
pop
ss
pop
sbb
push
loop
mov
add
decb
add
mov
cmp
inc
add
or
sarb
addr16
cmp
mov
mov
shll
sub
pusha
dec
xor
mov
cld
sbb
adc
repnz
rcr
and
inc
mov
or
div
push
mov
lahf
imul
and
mov
mov
add
das
mov
pop
ret
addr16
pop
in
dec
lods
inc
shl
out
xor
adc
mov
lock
sbb
out
mov
dec
lock
fsubl
daa
icebp
test
iret
jmp
scas
fists
cltd
push
outsl
dec
mov
xor
pop
dec
pusha
mov
mov
ja
insb
add
jp
push
imul
insl
repnz
sbb
mov
or
cli
stos
and
fs
clc
push
xchg
sub
mov
dec
arpl
or
ret
repz
xor
pop
push
insb
push
push
fisttpll
xchg
sub
ja
jecxz
clc
and
jmp
jbe
push
and
test
stos
jo
mov
nop
or
shrb
int
cmp
sbb
jne
js
jns
add
jle
pop
mov
int3
mov
into
insl
adc
fidivrs
dec
arpl
mov
xchg
dec
mov
fs
sbb
lods
cwtl
mov
into
and
push
notl
mov
jne
mov
xchg
loopne
addr16
jo
jb
lahf
add
in
or
out
xchg
xchg
adc
xchg
shr
ja
mov
addr16
mov
dec
je
ja
inc
or
push
pop
sti
sub
scas
insl
sarb
sahf
les
cmp
sti
bound
loop
inc
jb
mov
dec
aad
jg
adc
pop
adc
inc
push
push
inc
push
or
rcll
iret
jg
pop
jno
mov
cmp
cld
sub
test
cmp
mov
pop
mov
push
or
cmp
lret
lods
jns
mov
pop
js
cmp
fwait
stos
movsl
jno
jl
xor
cmp
imul
mov
loopne
enter
iret
hlt
shl
mov
lods
aaa
jno
daa
jbe
cmp
stos
dec
nop
std
stos
psrlq
pop
pop
jge
sub
orl
dec
fs
cmpsl
push
insb
mov
out
shrl
icebp
xchg
insl
push
pop
int3
repnz
cmp
push
inc
sbb
aaa
shll
sbb
jbe
mov
scas
jnp
shll
loopne
adc
cli
mov
gs
testb
out
mov
sub
adc
add
dec
rcl
mov
jl
jno
data16
or
movsb
ret
jmp
mov
test
aad
pop
movsl
imul
and
test
popf
push
dec
in
xchg
int3
sarb
stos
outsl
popw
xor
push
sbb
pop
aam
lret
faddl
loopne
jae
add
stos
lcall
jb
pushf
cmc
in
lea
cs
push
and
push
jbe
adc
outsb
jbe
xlat
add
push
imul
jae
cmc
cmp
or
or
hlt
ret
inc
xor
mov
mov
out
test
std
sbb
pop
ja
mov
mov
fsubr
lea
mov
adcl
sbb
enter
stos
lods
xchg
ret
gs
xchg
cmp
ss
idivb
pop
ljmp
into
jns
sub
sbb
lds
sbb
mov
adcl
incb
push
dec
and
in
mov
cmc
xchg
push
pop
jae
and
and
aam
push
shl
shll
mov
aam
or
aam
adc
dec
inc
fs
enter
or
test
inc
sub
dec
shll
xchg
inc
aad
push
pop
jne
inc
push
xor
ds
mov
aas
mov
cwtl
mov
xor
and
mov
xchg
or
or
jno
mov
and
pushf
dec
push
out
std
mov
cmp
sub
adc
pop
shl
dec
push
sub
xchg
adc
hlt
ljmp
daa
stc
push
stc
sub
xor
add
repz
cmp
dec
push
repz
loope
loopne
mov
mov
dec
push
out
adc
negl
cld
pcmpeqd
popf
or
push
or
fidivrl
dec
push
jo
or
cmpsb
test
js
xlat
ja
cmp
sarl
daa
mov
in
test
cmpsl
sub
cli
jecxz
data16
adc
mov
subb
shl
cmp
cmc
adc
mov
aas
add
mov
or
sub
shll
and
mov
xchg
add
jnp
aaa
movsb
inc
and
in
out
shlb
pop
xchg
cmp
call
add
pop
and
clc
scas
jae
lea
inc
push
xchg
ljmp
and
or
jnp
int3
xchg
mov
sub
ja
pop
insb
cmp
rclb
enter
jno
mov
mov
hlt
inc
cmp
insb
filds
cwtl
dec
cmpsb
cmp
nop
jo
jp
sub
cltd
insl
out
mov
je
xchg
push
stc
dec
xor
jge
daa
iret
mov
jecxz
ret
sbb
mov
adc
js
mov
scas
jns
mov
mov
ljmp
and
push
push
test
sbb
andb
jo
cmp
push
push
out
sub
or
jp
or
aas
into
pushf
sbbb
sub
aad
jnp
xchg
mov
xchg
cmpl
fisubs
push
repz
xchg
push
or
pop
call
cmc
jnp
out
stos
pop
dec
pop
mov
sub
push
sbb
or
stos
call
outsl
ds
dec
or
pop
pop
fidivrs
push
std
icebp
pop
clc
xor
lret
lods
or
fidivl
add
jb
xlat
adc
cmpsb
std
dec
adc
add
jmp
cmpsl
scas
pusha
ljmp
push
hlt
mov
dec
or
push
cltd
iret
call
out
mov
ret
fildll
pop
nop
pushf
xor
aad
or
mov
adc
int
sbb
jo
aaa
lds
clc
punpcklwd
aas
in
sbb
mov
repz
cmp
jg
fnstsw
rol
push
cmpsl
mov
imul
mov
test
je
adc
dec
es
xor
xchg
jo
jge
int
icebp
enter
or
aam
sbb
popf
and
sub
xor
cmc
or
mov
ds
mov
sub
cmpsb
test
pusha
orb
cmc
xchg
pop
pop
clc
sub
les
icebp
mov
jne
xchg
cmc
inc
and
jg
or
out
push
dec
sbb
jo
add
aam
mov
mov
sbb
daa
sbb
mov
mov
jo
rcrl
and
mov
mov
gs
shl
leave
sbb
out
mov
fildll
icebp
bound
cmpb
rorb
stc
xor
shlb
sub
add
fucom
popa
mov
int3
adc
je
push
inc
repnz
lret
cmp
insl
repz
inc
lret
bound
inc
xchg
les
adc
arpl
lcall
leave
adc
jns
shrl
xor
jb
js
shll
or
mov
sub
jns
or
and
jecxz
push
sbb
dec
pand
sub
inc
lahf
jmp
adcb
inc
mov
lods
cmpsb
mov
sahf
mov
iret
mov
outsb
and
imul
xchg
inc
xor
sbb
cltd
pop
test
jnp,pt
xchg
das
adc
icebp
sub
push
xor
xor
jmp
aam
inc
adc
xor
sbb
and
mov
out
mov
out
cmp
sbbb
ds
data16
push
mov
in
push
mov
rolb
aad
repnz
ret
mov
xlat
mov
xor
adc
pop
and
cmpsb
inc
mov
aas
dec
inc
xor
xor
ret
ss
or
jo
mov
or
push
xchg
xchg
scas
push
inc
ja
push
sbb
dec
pop
mov
in
inc
adc
mov
ja
aas
push
stc
push
jecxz
cmp
push
mov
pop
mov
es
test
pop
aad
pop
push
outsb
sbb
sub
xor
daa
aas
iret
cli
cld
repz
mov
jl
adc
ret
mov
ss
int
push
push
fxch
pusha
cmp
cmp
call
add
cli
jecxz
push
ret
adc
arpl
pop
xchg
xor
inc
pop
fisubrl
fimull
out
and
xchg
fwait
ss
popf
scas
mov
xchg
mov
out
and
xor
clc
and
jns
jmp
jecxz
xor
xor
rcr
ss
mov
sbbl
lds
mov
insb
sbb
dec
jne
enter
mov
shll
jnp
scas
sbb
cli
adc
ja
and
les
es
push
sahf
lock
cld
jecxz
and
movsl
sbb
mov
aas
cmc
in
and
and
mov
int3
and
jp
repz
add
dec
pop
into
sbb
lret
sti
cmc
cmp
mov
lret
mov
cmc
arpl
xchg
xchg
add
and
dec
bound
adc
adc
ljmp
jmp
or
out
mov
mov
fiaddl
sbb
xchg
cmp
dec
cs
xor
cmpsb
jl
ds
popa
sbb
imul
adc
sub
loope
pop
mov
mov
cwtl
hlt
inc
xor
xchg
push
outsl
push
mov
cmp
fs
inc
sbb
dec
mov
mov
es
stc
in
inc
shll
cli
loopne,pt
call
outsl
insl
mov
int
mov
pushf
in
fwait
or
cmp
xor
out
xchg
fldt
xchg
movsl
cld
icebp
sub
lds
outsl
pop
aad
test
dec
xchg
fidivl
ret
xor
lock
bound
fldl2e
sbb
sbbb
xor
push
adc
xor
pop
lea
xchg
ja
adc
mov
lds
in
push
lods
cmpsl
cli
in
cmc
add
test
xor
je
mov
cli
fistps
pop
adc
jge
pop
pop
adc
lret
mov
inc
add
lock
rorb
push
sbb
roll
mov
mov
push
dec
pop
lret
clc
pushf
movsb
jo
cmp
xor
inc
fwait
popf
loope
xchg
fistpl
incb
stc
adc
in
pop
inc
pop
push
sahf
xchg
mov
fldcw
shlb
adc
pop
xor
mov
in
lock
sub
push
outsb
roll
loope
data16
inc
lock
testl
sbbl
je
jbe
sub
add
test
shlb
outsb
mov
dec
and
adc
jne
dec
push
js
inc
dec
add
ja
mov
movsb
adc
repnz
int3
mov
sub
sub
pop
je
pop
mov
pop
insb
repnz
cmp
mov
inc
pusha
inc
mov
cli
push
pop
inc
inc
push
test
test
rcll
mov
and
dec
inc
mov
mov
fisubs
iret
hlt
mov
loope
fimull
inc
mov
xchg
movsl
mov
mov
cmpsl
mov
icebp
inc
cmp
sub
push
jno
out
scas
pop
ret
mov
adc
xor
jg
dec
in
push
dec
mov
aam
mov
lods
sti
mov
adc
mov
sbb
ret
mov
mov
fisubs
jb
sub
adc
push
xchg
lock
std
inc
pop
mov
outsl
rorl
cmc
add
js
jmp
cmp
dec
fimull
jo
adc
je
cmp
in
data16
cltd
lret
insb
add
imul
push
sbb
lods
scas
mov
or
ljmp
cld
mov
adcl
loope
sub
in
iret
add
pushw
stos
and
and
repz
rolw
cmp
add
cltd
pop
lahf
xchg
adc
cli
cmp
jne
sbb
xchg
mov
mov
cmpsb
inc
out
jbe
push
test
mov
cltd
dec
pop
mov
in
cmp
mov
cmpsb
imul
popa
adc
cltd
test
dec
cmc
call
mov
or
or
jo,pt
inc
push
mov
dec
ja
inc
repz
fstl
aaa
mov
mov
and
int3
xor
scas
fstl
in
xchg
mov
addr16
shr
xchg
cmpsl
xchg
adc
mov
dec
insb
mov
lahf
imul
xchg
cmp
jb
jmp
sbbl
jecxz
pop
add
jle
les
jmp
out
xchg
xchg
jl
mov
sub
inc
xlat
aaa
fnsave
dec
movsb
cld
push
push
ss
shl
rorl
stc
inc
sbb
fmuls
cwtl
gs
scas
pushf
mov
mov
cmc
jb
pop
jnp
push
mov
and
push
sub
xchg
addr16
push
and
add
or
ja
cld
sbbb
int
rcll
mov
mov
mov
je
mov
dec
inc
adc
push
lret
scas
test
scas
test
addr16
adc
push
test
cmp
ror
mov
iret
jle
ljmp
sbb
rorl
shlb
mov
add
and
pop
imul
and
push
jnp
adc
out
add
icebp
roll
cmp
xchg
xchg
and
add
push
xor
mov
mov
dec
cmp
mov
jno
std
aad
cmp
aaa
out
dec
inc
jne
inc
push
sbb
int3
cwtl
mov
je
inc
add
daa
jl
filds
add
js
xlat
filds
jb
xchg
mov
mov
ds
mov
mov
pop
testb
and
outsl
stc
cmpl
rcr
adc
push
xchg
cmp
sbb
test
and
mov
out
sub
mov
inc
inc
pop
pop
mov
or
inc
outsl
aaa
or
xor
sub
lea
dec
data16
jo
rcll
xor
jno
xor
sub
or
test
pushf
jne
jge
xor
roll
frstor
bound
adc
mov
mov
es
repnz
pop
cli
push
and
sub
popf
add
jp
add
jbe
sub
jp
push
fldenv
bound
fst
repz
and
loopne
loopne
aad
dec
push
scas
xchg
sub
lea
jge
adc
movsb
movl
push
mov
aad
mov
inc
leave
cvtpi2ps
hlt
add
imul
push
ja
add
fiaddl
jle
or
sbb
add
pop
es
jl
jecxz
shlb
rolb
xor
imul
ss
mov
mov
iret
test
lock
pop
cmp
add
lret
and
mov
lret
xchg
cmpsl
cmp
pop
cwtl
loope
in
lea
jb
faddl
xor
add
imul
lahf
jns
dec
inc
or
jge
test
les
sub
ja
cmpsl
jns
push
mov
int
and
stc
jmp
insb
les
sbb
adc
test
aaa
mov
in
cmpl
mov
adc
sub
mov
pop
pop
movsl
lds
out
pcmpgtb
fstps
push
and
jb
fxch
aad
stc
rolb
adc
mov
lcall
pop
leave
jmp
enter
mov
xchg
notb
out
xchg
and
pop
dec
call
sbb
push
and
ret
lods
leave
inc
sbb
subl
sub
div
scas
es
loopne
std
fcmovu
lcall
lds
jne
loopne
adc
int
mov
ds
cli
dec
sub
xor
cmpsl
xchg
shl
xor
mov
sbb
es
or
mov
divl
daa
cmp
jecxz
cmp
sahf
xchg
rorl
add
fbld
xchg
lahf
pop
jge
fs
lock
loop
cmpsb
xor
repnz
cmp
mov
pop
add
movsl
and
mov
add
jbe
out
test
out
xchg
or
aas
and
jo
out
jecxz
mov
stos
test
jmp
jp
xchg
rclb
fisubrl
je
mov
fldl
xor
cmp
dec
adc
imul
sub
push
scas
dec
dec
stc
inc
pop
mov
push
adc
xchg
imul
pushf
xor
testl
jb
xor
ja
mov
arpl
push
inc
iret
ret
mov
dec
mov
jl
jp
mov
aas
leave
mov
mov
cmpsl
insb
insb
jb
push
out
push
jb
mov
inc
mov
popf
lock
test
adc
nop
jle
repz
xchg
aad
repnz
loopne
fistpl
or
fs
shl
je
mov
xor
aaa
icebp
mov
pushf
lcall
scas
xchg
int
xchg
xlat
lds
test
je
sti
cmp
mov
mov
push
dec
mov
sbb
ss
sub
fstpt
pop
or
add
jo
adcl
lock
sbb
std
cmp
ret
or
xor
std
mov
cmc
stos
push
mov
das
cmp
xchg
adc
rcrl
mov
push
dec
mov
out
fildl
pop
leave
push
lods
mov
add
cwtl
jbe
in
jne
sbb
pop
mov
mov
mov
mov
xchg
enter
jae
sbb
push
adc
daa
xorb
pop
insb
xchg
xchg
out
movsb
cmpsb
aad
push
movsl
rcll
addr16
or
aad
mov
push
pop
in
test
xor
loopne
ds
pop
or
cmp
fldcw
dec
or
sahf
lret
pop
addr16
pusha
mov
icebp
push
sahf
es
add
sub
out
das
aam
into
and
adc
cmp
insl
or
pop
jmp
pushl
push
pminub
sub
in
sub
clc
stos
or
mov
sarb
inc
mov
stc
or
pop
sbb
loope
mov
aad
lret
cs
push
out
icebp
es
int
aam
mov
fidivrs
dec
jae
fdivs
cmp
addl
xchg
jecxz
out
and
push
dec
fdivr
out
aas
mov
mov
lods
xor
add
xchg
adc
scas
test
and
testl
or
pop
jl
pop
xor
mov
adc
ljmp
sub
sub
inc
stos
mov
or
adc
mov
stos
jp
stos
push
sbbl
jl
dec
aaa
cmp
loope
gs
cmp
pop
add
aam
xor
std
ja
stc
mov
mov
jae
push
xchg
popf
test
inc
popf
pop
aam
and
movsl
sub
dec
mov
xchg
mov
cmc
test
adc
pop
push
out
test
fwait
or
jl
push
test
dec
cmp
call
or
mov
icebp
std
cmpl
ret
mov
aaa
stos
daa
xchg
mov
test
inc
loope
ja
into
add
xor
sbb
mov
add
mov
shrl
int3
push
aaa
mov
or
cmp
xorl
push
inc
xchg
inc
mov
cmpsb
and
add
push
je
mov
imul
aas
ficoml
mov
mov
push
daa
imul
aaa
testb
xbegin
inc
and
mov
jge
mov
rcr
sti
mov
xor
fldcw
add
sub
cmpl
xor
repnz
pop
repz
cmpsb
fcoml
mov
xlat
push
push
int
inc
add
cld
into
add
mov
fdivs
sbb
or
sbb
or
jle
jb
call
adc
sub
xchg
xchg
mov
les
xchg
cmp
idivl
inc
lds
mov
jmp
test
sub
jmp
test
cltd
jge
loope
sbb
fisttpll
mov
mov
push
shll
sub
add
or
adc
add
fmull
mov
mov
adc
movsl
mov
lret
push
or
sbb
mov
jns
addr16
adc
xor
mov
in
mov
std
or
sub
in
jne
gs
enter
loopne
add
dec
add
xchg
out
xchg
loopne
call
inc
push
jne
gs
xchg
ret
loop
xchg
or
xor
cmp
xor
sbb
jae
add
add
mov
xlat
iret
mov
mov
out
loopne
mov
jo
pusha
outsb
imul
or
mov
ret
and
mov
outsl
rsqrtps
xchg
pop
mov
fistl
shl
jecxz
xlat
hlt
cmp
lret
and
sbb
fcompl
pop
sub
das
in
loopne
push
push
arpl
pop
push
das
aam
cmpsl
jmp
jge
cmp
jmp
sub
add
test
int
pusha
stc
inc
add
shr
mov
scas
adc
xor
fldt
sti
push
xchg
inc
mov
and
rol
mov
ret
shlb
adc
sub
loope
neg
xor
or
insb
add
adc
popa
out
adc
out
xor
pop
or
push
dec
cs
sub
inc
loopne
arpl
xlat
lods
cld
mov
aad
mov
pop
call
adc
repnz
adc
cwtl
sti
push
mov
filds
mov
xchg
adc
fnstenv
xchg
pusha
jge
or
mov
dec
lods
mov
fistl
mov
xchg
daa
loop
lret
fdivs
sti
nop
push
xchg
pop
call
loopne
xchg
iret
cmc
int
sti
push
addr16
cmp
in
in
hlt
cmp
test
jp
test
inc
adc
inc
mov
ficoms
cmp
aas
xchg
sub
lea
outsb
int
cwtl
movsl
cmp
lret
xor
outsb
std
mov
mov
sbb
sbb
inc
or
lods
sarb
std
xor
adc
push
in
lods
fistps
aam
outsl
push
push
jae
xchg
or
lcall
andl
cld
call
add
sbb
adc
add
in
in
das
aaa
call
cmp
mov
mov
or
pop
adc
adc
jbe
test
sbb
in
dec
and
lock
mov
cmpl
mov
cmpsl
shl
cltd
xchg
pop
inc
cli
fstps
jmp
mov
pop
into
cli
pop
das
ficoms
mov
scas
mov
xor
mov
inc
imul
int3
movsl
push
and
cmpsb
pop
into
cmc
dec
aad
jg
clc
fidivl
add
shlb
and
popa
dec
int
xchg
lock
je
push
jl
mov
adc
mov
sub
sbb
lock
xorl
jo
outsb
cmc
pop
imul
sub
push
stos
and
rcrl
sarl
pop
data16
xchg
je
mov
mov
ljmp
hlt
mov
je
daa
outsb
mov
cltd
and
sub
loopne
xchg
mov
pop
dec
mov
dec
xor
ss
sbb
xchg
ret
inc
rcrl
sub
jmp
ret
sub
movsb
fwait
fisttpl
call
subl
mov
xor
xor
adc
das
or
dec
mov
xchg
aam
jg
in
clc
add
push
pop
jb
sub
shr
fiaddl
push
xor
pop
xchg
mov
add
ljmp
mov
fidivs
das
les
adc
mov
repnz
cmc
mov
scas
out
in
add
jns,pt
call
cwtl
xchg
data16
lods
mov
xor
int
mov
stc
sbb
fwait
fs
loopne
ljmp
mov
outsl
cmp
mov
jb
test
aam
aaa
je
push
dec
repz
ret
hlt
jb
nop
inc
pop
and
ficomps
push
test
jmp
popf
inc
outsl
lcall
sbb
xchg
jbe
lret
arpl
adc
hlt
stos
cld
add
cmpsb
insl
adc
mov
and
out
lcall
add
ljmp
shlb
lods
jnp
in
mov
pop
cmpsl
rorb
mov
sbb
jb
xchg
jnp
cmp
sbb
cmp
insb
aad
incl
insb
sbb
in
dec
xor
test
pop
loope
jbe
mov
jbe
xlat
int
pop
cmc
into
inc
lods
in
push
pop
fistps
cmc
test
shl
xchg
mov
dec
outsl
rclb
out
jbe
data16
mov
les
mov
pop
mov
aaa
es
out
aam
popa
andl
pop
lahf
jp
xchg
mov
imul
loope
icebp
or
ja
repz
cmc
std
inc
fcoms
leave
mov
test
lods
cmp
je
test
fistps
ja
jmp
int3
pop
or
adc
jns
imul
lcall
aad
outsl
push
push
xchg
inc
insl
add
cmpsb
inc
jle
mov
daa
pop
jbe
rep
xchg
test
dec
sub
push
aas
enter
xlat
xchg
inc
fidivrs
mov
push
int3
nop
push
jl
outsl
aas
out
cs
cltd
aas
mov
bound
mov
xchg
ss
jo
push
or
fidivrl
divl
ret
in
lds
dec
jbe
sub
std
sbb
movsb
jl
out
in
lret
sti
ret
mov
fadds
mov
xor
and
sbb
scas
testl
subl
pop
xor
dec
sbb
pop
xchg
cmp
mov
mov
rcl
pop
or
dec
and
loop
push
test
lods
push
testb
test
lock
mov
jg
pusha
jl
push
jb
int3
inc
sarb
and
jns
movsl
cld
lods
shlb
fstps
test
hlt
adc
ss
adcl
roll
jmp
mov
mov
push
jle
add
sub
lds
push
mov
mov
or
mov
shll
mov
or
arpl
cwtl
mov
jne
mov
ss
and
fucomp
loope
lods
or
mov
push
into
pusha
push
daa
cmp
mov
pushf
es
add
insl
jle
sub
and
sbb
dec
les
insl
cmp
cmp
test
xchg
jle
and
out
stc
cmp
sahf
lret
cs
xchg
or
lock
and
call
add
jl
inc
js
sbb
and
or
je
jne
pop
movsl
mov
and
sub
pop
jg
fcoml
jp
addr16
jb
dec
fistl
cli
inc
sbb
mov
aam
jo
push
rorb
mov
cld
mov
cs
sub
mov
add
inc
push
jle
das
pushf
mov
and
push
push
xor
and
fmuls
lret
xor
mov
or
push
add
movsl
hlt
xchg
ds
push
mov
roll
test
ret
or
jb
cwtl
lret
das
mov
mov
inc
xor
jg
xchg
push
or
and
cld
rcrl
out
fbstp
add
xor
lahf
sub
sub
dec
lahf
xchg
mov
imul
pop
mov
jecxz
js
out
fisubs
lahf
les
jns
lock
mov
push
jp
test
mov
lret
and
lcall
movsb
mov
fbld
mov
cld
leave
jle
das
jg
add
xor
xor
call
and
sbb
call
dec
add
popa
adc
js
mov
cmp
pusha
inc
lea
aam
mov
mov
es
jno
mov
jo
enter
inc
test
stos
inc
fadds
pop
insl
dec
neg
push
mov
jl
in
add
lret
xchg
xor
add
mov
jl
dec
dec
imul
jns
pusha
jecxz
shrb
outsb
dec
aam
in
jp
scas
dec
add
push
dec
push
mov
in
jbe
or
pop
sub
cmp
scas
ss
xchg
loop
faddl
and
inc
push
mov
pop
jmp
dec
shll
mov
push
push
jnp
sub
adcl
mov
push
push
test
jle
fisubs
adc
movsl
adc
jbe
sub
dec
fnsave
mov
ret
nop
mov
jae
xor
shlb
mov
sbb
jge
insl
fnstenv
or
in
cmp
mov
pop
sbb
adc
in
dec
pop
aaa
sbb
loop
push
adc
scas
add
mov
sub
repnz
sub
and
mov
cmc
out
loop
lds
int
xchg
xor
mov
pop
nop
dec
mov
adc
lock
loop
lock
xor
pusha
mov
xor
jno
push
inc
dec
or
xchg
pop
or
adc
fwait
int3
jae
lock
out
fbstp
pop
push
inc
mov
xor
xchg
cmp
pop
ds
ret
jbe
andb
xor
rcrl
loopne
ljmp
jmp
jnp
xor
and
bound
add
ret
mov
nop
out
fmuls
roll
push
push
sub
push
inc
adc
mov
lret
or
cmp
mov
sub
icebp
in
push
sbb
sbb
push
data16
aas
cli
jo
out
imul
adc
lods
adc
mov
cmp
push
nop
fstl
inc
xchg
jle
pop
pop
ljmp
lcall
aaa
mov
jmp
mov
ja
xchg
xor
xlat
shl
repz
pop
jae
aad
sahf
inc
cmp
xchg
in
pop
mov
adcl
sbb
aad
mulb
fdivr
nop
mov
call
pop
xchg
adc
sti
push
stos
xchg
adc
cwtl
jae
mov
inc
jbe
add
popa
push
pop
jnp
jmp
gs
popf
mov
repz
and
inc
hlt
ja
sub
sub
fisubrl
cmp
insb
clc
add
mov
cmp
xchg
sbb
testb
out
mov
stos
in
fimuls
int
pop
test
faddp
fidivrl
mov
xor
cld
stos
add
sbb
lcall
inc
pop
adc
pop
into
mov
lret
addr16
sahf
mov
xchg
or
cs
push
and
sbb
xor
jge
pop
lea
inc
test
mov
popa
outsl
xchg
cmp
in
mov
xchg
lock
cmpsb
mov
mov
dec
test
arpl
adcb
fisubs
adc
in
jl
jne
mov
jnp
adc
add
inc
jecxz
jmp
loope
hlt
inc
mov
pusha
out
icebp
jne
sti
dec
outsb
mov
int
aaa
fisubrs
jp
sti
push
mov
leave
xchg
pop
in
in
aam
popa
xchg
sahf
js
jbe
xchg
push
dec
cwtl
addb
cwtl
leave
test
push
and
fs
pop
lret
fldl
lret
mov
mov
fsubp
jne
cli
icebp
lock
lea
dec
pop
icebp
lds
sbb
sahf
jno
enter
mov
aaa
dec
std
cltd
ss
imul
pushf
sub
ret
mov
ds
int3
mov
mov
loop
dec
popf
mov
mov
mov
mov
aad
into
test
xor
cmp
dec
xchg
loope
push
mov
sub
sahf
cs
icebp
push
mov
adc
in
push
and
dec
xor
mov
stos
fldt
push
mov
mov
pop
push
sbb
aaa
cld
sub
in
das
dec
inc
inc
xlat
fmul
pop
repnz
ret
divb
xchg
out
push
mov
ret
xor
pop
jmp
ficompl
lahf
sbb
mov
inc
cwtl
push
push
lods
dec
cwtl
es
and
mov
mov
and
mov
mov
aam
pop
xor
popf
pop
xorb
jae
arpl
imul
dec
stos
add
xchg
mov
test
imul
movsl
je
ljmp
cmpsb
push
andl
push
mov
mov
sbb
adc
mov
mov
cmpsl
daa
mov
movsb
dec
jnp
lods
mov
and
shlb
jg
int
pop
fs
jns
lds
enter
rcll
addb
mov
lret
lea
and
push
ficoms
mov
mov
dec
fwait
or
sub
sahf
jae
xchg
leave
mov
push
dec
pop
fcomps
popa
mov
sub
imul
mov
push
pop
shrl
push
adc
test
in
adc
jnp
lea
jmp
cmp
outsb
shlb
lock
sub
mov
pop
aam
push
test
push
test
adc
mov
dec
add
aas
and
call
inc
mov
and
xchg
push
adc
out
mov
mov
in
dec
mov
or
add
cmc
dec
dec
inc
xor
pop
inc
jle
mov
xchg
mov
pushf
pushf
movsb
pop
xor
jecxz
or
adc
mov
lcall
jle
dec
mov
adc
pusha
mov
pushf
jle
fiaddl
jb
inc
xorl
mov
jp
int3
ds
cmp
dec
mov
inc
divl
test
mov
clc
jl
cld
inc
jmp
push
faddp
rorb
stos
fidivs
lods
dec
enter
xchg
shlb
mov
idivb
and
je
in
xor
les
ljmp
lds
das
mov
lahf
popa
add
and
ljmp
xor
push
in
xchg
ret
or
xor
push
cli
push
popa
mov
jg
jmp
sub
or
inc
je
mov
add
sub
popf
mov
fistpl
mov
jns
sbb
int3
jo
loope
in
add
je
adc
mov
les
mov
xchg
adc
pop
mov
pusha
out
pop
shlb
xchg
jg
mov
jmp
mov
cli
and
pop
sub
sbb
push
jle
sbb
bound
hlt
adc
rorb
flds
xor
jb
dec
sarl
pop
popa
in
das
outsb
or
aam
gs
dec
and
movsb
sub
cmp
lret
dec
jbe
rcrb
rcll
cmp
inc
push
data16
adc
mov
test
push
flds
jle
xchg
ret
mov
push
lods
mov
stos
scas
and
xchg
dec
push
mov
je
push
sub
fsubs
xor
mov
cmp
ljmp
mov
mov
fcmovnb
fcmovbe
in
les
fcmovnu
iret
hlt
mov
xor
push
xchg
ds
js
ret
sbb
xor
jbe
push
mov
and
adc
insb
in
xorb
in
mov
inc
mov
adc
movsb
pop
cmp
and
imul
rolb
push
shrd
cmp
jge
arpl
lods
inc
sti
fs
call
xchg
fcomp
dec
divb
call
in
stos
leave
arpl
push
insl
movsl
fnstcw
daa
cmpsb
clc
xchg
sbb
imul
mov
inc
int
and
sbb
sub
jge
dec
pop
insb
icebp
rorl
or
les
testb
mov
aad
outsl
push
sbb
mov
bound
imul
movsb
cmp
arpl
pop
outsb
testl
dec
fwait
add
insl
mov
cli
sbb
push
push
jo
inc
nop
add
lret
cmp
jb
mov
out
scas
and
shlb
test
iret
xchg
cs
mov
in
add
xchg
add
and
xor
adc
jl
mov
cld
bound
inc
out
and
sbb
lods
add
je
pushf
push
cs
add
fldcw
xor
and
dec
push
mov
lods
or
add
pop
and
repz
clc
mov
mov
lahf
loopne
xor
ja
xor
sbb
dec
add
sbb
sbb
into
mov
mov
mov
push
hlt
cmpsl
jg
add
lahf
sbb
ja
in
cmp
test
jecxz
test
sti
mov
adc
int
inc
jmp
cmp
fabs
int
adc
add
inc
jns
cwtl
jmp
jecxz
mov
sbb
lock
pop
das
or
lcall
lods
dec
jno
xor
cmpb
call
push
or
out
idiv
out
es
push
repnz
mov
pop
lds
lods
xchg
lret
int3
jno
sbb
in
xor
jecxz
mov
int
xchg
aaa
popf
xchg
add
test
es
fs
mov
out
jle
push
inc
sti
ljmp
jge
in
mov
lock
das
inc
repz
scas
loop
mov
xchg
jbe
addr16
jno
push
cmpsl
jns
clc
cmpsb
mov
divl
cmp
inc
jb
pop
mov
push
sti
lcall
das
out
push
pop
popf
aaa
sbb
add
or
push
adc
lahf
std
or
pushf
insl
nop
cmovp
outsl
and
sahf
jl
adc
xchg
dec
dec
das
add
push
pop
in
mov
fbld
rol
jmp
fwait
insb
adc
add
inc
out
cmp
sub
jae
add
jg
and
imul
jae
nop
lret
test
add
outsl
push
or
loope
shrl
cmp
cmpsb
orb
ja
jg
test
or
push
jo
mov
mov
ljmp
push
fxch
mov
clc
lea
cmp
fwait
lds
testb
push
xor
popa
hlt
mov
leave
inc
jnp
outsl
or
test
xor
xor
push
add
in
xlat
fbld
mov
stos
fisttpll
xor
pop
or
inc
roll
inc
fnstenv
xor
arpl
pop
aam
sbb
push
inc
pusha
mov
test
sbb
aam
cmc
jmp
pop
cmc
ret
pop
stos
pop
dec
pop
ss
sub
mov
les
int
push
push
mov
lock
mov
mov
mov
mov
insb
mov
mov
es
mov
or
cmp
aaa
pop
fwait
pop
in
push
cli
jl
add
mov
jmp
into
pushf
stos
test
jnp
xor
push
mov
or
stos
je
pop
push
push
mov
and
push
sbb
fst
sbb
adc
or
cld
fimuls
pop
mov
mov
int
imul
fwait
jge
dec
insb
dec
movsl
mov
inc
enter
push
pop
pop
jecxz
cmp
adc
xchg
jmp
xchg
addl
sbb
cmp
or
pusha
lds
adc
sub
push
cld
jns
push
fadd
mov
mov
jg
mov
lods
lods
push
stos
sbb
addr16
dec
adc
push
mov
jle
imul
mov
and
push
clc
in
sbb
mov
std
rcll
mov
roll
mov
stos
ret
paddsb
in
pop
ss
enter
cmp
xchg
jbe
add
mov
int3
inc
test
pop
notl
mov
stos
idivl
or
push
fs
and
and
out
shll
movsl
xchg
adc
js
cmp
push
pusha
dec
mov
and
cmpsb
cmpsl
scas
mov
mov
cmpsb
push
or
cmp
cmpsb
inc
roll
push
in
adc
dec
das
jmp
inc
cmp
pop
int3
sbb
adc
inc
mov
jb
fisubl
dec
pushf
cmp
rclb
push
lahf
xor
cmc
dec
and
cmpsb
mov
addr16
fistl
xchg
xchg
test
outsb
outsb
cmp
or
jno
and
mov
sub
icebp
or
test
imul
insb
mov
pop
fisubl
jbe
in
xchg
cli
inc
sbb
cmp
sarb
addr16
adc
inc
pop
out
jmp
push
popf
xlat
push
popa
lea
lcall
sbb
repz
jle
mov
cmp
xchg
jl
stos
outsl
jmp
imul
xchg
cmp
repnz
dec
cmp
mov
pop
and
mov
mov
bound
mov
loop
jmp
movsl
mov
push
xchg
push
gs
hlt
popa
xor
loope
stos
dec
out
mov
fisttpll
cltd
leave
push
jmp
shlb
imull
or
pop
mov
sahf
fbstp
out
mov
stos
xlat
mov
das
fwait
subl
shlb
sahf
xchg
js
shll
iret
lahf
sbb
rcll
mov
clc
cwtl
mov
xchg
push
push
es
dec
icebp
popf
push
or
lods
dec
pusha
jmp
mov
fs
movsl
int
xor
pop
mov
push
fistl
gs
dec
sbb
pop
inc
pop
mov
rorb
inc
popa
and
dec
movsl
lcall
mov
hlt
out
jns
and
es
sub
aas
mov
faddl
pusha
or
inc
leave
and
cli
in
adc
xchg
jmp
adc
js
ret
jnp
sub
mov
sub
repz
dec
adc
imul
push
addr16
xchg
daa
les
jo
and
or
push
arpl
jnp
mov
fists
xor
mov
pop
ds
mov
test
inc
jnp
or
sub
pushf
mov
into
push
ficoms
sbb
jmp
push
and
test
jle
pop
inc
and
sbb
out
push
jmp
sbb
jp
rcl
inc
fnstsw
leave
jns
inc
mov
test
mov
jb
movsb
fsts
loop
xor
adc
ficompl
mov
pop
insl
mov
add
cmp
loope
mov
sub
inc
pushl
jbe
or
mov
cld
out
sub
lret
icebp
push
movsl
call
lds
ljmp
ret
lahf
je
sbb
loope
mov
insb
out
cmp
dec
lods
xchg
pop
push
inc
test
mov
pop
adc
sbb
and
mov
int
jg
dec
outsl
xchg
leave
or
loopne
pop
testl
in
das
push
test
nop
out
data16
mov
fmul
daa
or
add
mov
cmpsl
sub
push
fnsave
xor
mov
pop
mov
mov
mov
jmp
jne
push
in
pusha
mov
inc
pop
push
imul
jb
je
andl
sbb
ss
lret
xor
bound
fimull
mov
je
pop
dec
pop
lahf
test
ret
fistpl
lea
addr16
movsb
movsb
std
test
scas
aaa
mov
shl
orl
imul
out
and
inc
jb
popa
cmpsb
push
or
jmp
fwait
cmp
jge
jp
fs
scas
xchg
shlb
int
add
jb
clc
test
or
enter
pop
cmp
pop
lahf
adc
jb
test
push
loop
hlt
in
mov
push
iret
mov
test
or
and
xchg
stc
mov
fldz
movsb
pop
loope
or
dec
pushf
movsl
xchg
and
out
dec
out
out
add
stos
test
clc
bound
sub
cmpsb
repnz
outsb
mov
xor
sarb
in
ret
push
loop
cs
xchg
sahf
adc
push
inc
mov
fdivrp
mov
jl
mov
push
repnz
sbb
movl
cmp
jne
lods
xchg
mov
rcrl
sbb
in
shll
mov
pop
add
lret
das
push
xchg
lods
imul
cs
fidivl
pushf
fcomp
test
das
loopne
push
or
aam
popa
push
push
das
inc
add
negb
xor
push
jmp
outsl
mov
pop
sbb
pop
sbb
jg
je
ja
mov
jb
pusha
inc
and
testl
mov
xchg
push
jnp
ret
ret
out
pop
decl
or
inc
das
faddl
lds
popf
jle
inc
jb
pop
cmp
cmpsb
sub
xor
xor
and
sbb
add
subl
push
mov
fldl
xchg
jb
adcl
nop
sbb
jmp
jmp
push
scas
mov
outsl
xchg
clc
and
pop
adc
inc
cmp
xchg
mov
adc
aad
adc
stos
mov
rcr
fiadds
js
mov
dec
stc
rorl
aas
ljmp
movsb
fcmovne
pop
and
daa
in
mov
push
cwtl
push
or
xchg
mov
out
inc
jg
sbb
out
stos
sahf
adc
lea
ret
add
scas
gs
dec
hlt
roll
mov
sub
aad
ret
out
pop
jl
mov
pop
inc
and
jl
mov
int3
popf
inc
jne
aad
cmp
push
add
gs
fldcw
add
fs
call
cmp
fistl
nop
cmpb
imul
adcb
pop
pop
or
add
adc
xchg
pop
in
notb
adc
in
scas
loope
xchg
pusha
push
adc
sub
movsb
es
cmpl
jae
lods
lret
loopne
es
add
addb
test
fbld
pop
or
xchg
rolb
and
int3
inc
fistps
fisttps
cmp
mov
xlat
daa
je
fistpll
in
mov
into
sub
bnd
sub
push
cmp
sarb
roll
out
shll
cltd
pop
xchg
ds
call
inc
mov
pop
sub
mov
inc
jle
lock
cltd
out
insl
mov
insb
inc
mov
lret
cmp
adc
ljmp
push
mov
push
sahf
cwtl
mov
aam
pusha
rcr
cmp
mov
outsl
aad
or
xor
ljmp
or
mov
pop
push
sbb
aaa
insl
pop
mov
fisttpll
push
and
lcallw
mov
adc
fsin
mov
imul
xor
pop
mov
and
xor
push
je
rcll
nop
cmp
ret
test
sub
pushf
pop
push
add
xor
xchg
adc
shll
xchg
ret
lcall
inc
cmpsb
and
xchg
push
stos
enter
jns
pusha
or
adc
mov
ficomps
sbb
jle
pop
sahf
push
mov
adc
imul
mov
sti
mov
mov
aaa
mov
jecxz
lods
std
or
outsl
xlat
or
dec
or
cltd
jno
dec
mov
and
dec
dec
push
sub
push
divb
inc
pushf
movsb
sbb
adc
fdivrs
cld
stos
gs
sahf
jmp
sbb
mov
shrl
cmp
pop
loopne
add
adc
and
repz
in
loop
dec
scas
aas
add
pop
repnz
mov
cmp
in
dec
sub
push
lret
sbb
decl
adc
xchg
popa
jae
pop
adc
frstor
sub
rclb
rcr
icebp
ss
sbb
add
rorb
test
lock
pop
mov
rol
fistl
fisubrs
lds
je
pop
test
and
lock
jmp
adc
aas
and
add
hlt
dec
inc
cmp
dec
cmpsb
addb
or
pop
push
ret
push
ja
pop
cmp
ret
push
divb
jmp
aam
movl
push
das
in
sub
mov
dec
repnz
add
jno
mov
sub
das
mov
xchg
jne
adc
add
pop
mov
cmp
dec
dec
mov
push
insb
mov
call
mov
out
lret
adc
push
mov
fcompl
ljmp
imul
xchg
xchg
subb
mov
push
mov
mov
fwait
or
nop
aas
in
in
sbb
enter
dec
jne
pop
mov
imul
mov
cmp
lods
xor
cld
cmc
repz
in
pop
fcoms
adc
rcr
pop
shll
or
sbb
fwait
ret
out
cltd
insl
sti
imul
pop
insl
mov
ss
mov
lcall
imul
sbb
or
pop
mov
int3
adc
push
dec
push
cli
push
fcoms
insb
gs
adc
pusha
dec
mov
frstor
mov
and
xor
hlt
fidivrs
aas
lds
fisttpl
cmp
lds
pop
cmp
adc
sub
movsb
xchg
cmp
jecxz
ljmp
sub
inc
data16
pop
sub
xor
inc
mov
fimull
lds
lret
add
fisubl
in
push
les
int3
inc
jns
outsl
cmp
mov
aaa
data16
pop
inc
push
cmp
fcoml
imul
inc
rorb
insb
adc
sbb
es
movsb
xlat
xor
mov
xchg
mov
lea
push
pushf
sub
jbe
fisttpll
roll
cmc
or
jg
sbb
jmp
fisubl
fisubrs
dec
ds
cmpb
call
pop
jnp
int3
into
test
paddusw
pusha
or
int3
enter
ss
mov
adc
add
sbb
and
push
aas
fists
mov
inc
mov
inc
pop
mov
stos
sub
andl
jg
xchg
inc
out
xchg
dec
popf
and
hlt
jo
mov
jbe
sahf
mov
or
cs
cwtl
inc
mov
jecxz
insl
mov
mov
dec
mov
ja
cmpb
fidivl
inc
push
xchg
out
jl
jle
stc
push
sbb
sti
sub
lods
stos
cmpsl
imul
mov
cmp
dec
sbb
dec
test
xlat
dec
push
jl
mov
jecxz
sub
mov
lods
mov
push
push
pop
xchg
ljmp
shlb
sub
jmp
cltd
push
jo
push
out
push
push
std
hlt
into
cmpsl
sbb
push
xor
mov
sbb
dec
xchg
cmpsb
mov
dec
mov
outsb
jp
pop
add
ljmp
orb
stos
roll
scas
fistpl
pop
fildll
sti
or
mov
cmc
testl
ljmp
fwait
add
add
jmp
cmp
add
popa
sbb
inc
jnp
inc
sbb
sbb
out
in
in
data16
mov
or
lea
cmp
bswap
imul
enter
int3
cmp
inc
int3
loopne
cli
and
sti
adc
insl
or
daa
dec
add
in
mov
and
inc
sahf
adc
ret
mov
dec
jno
pop
xchg
xor
scas
push
stc
popf
cwtl
subl
pop
mov
push
add
pop
inc
es
shlb
in
cmc
jp
add
test
adc
cmpsl
mov
sub
pop
add
xchg
push
outsl
add
scas
jp
xchg
stc
std
jae
jb
iret
mov
mov
lcall
mov
mov
add
mov
cmp
sbb
xchg
cli
in
andl
icebp
xor
gs
and
inc
mov
andb
ljmp
test
jge
imul
daa
lods
out
inc
shl
lcall
jle
sbb
enter
xor
daa
ja
pop
push
jmp
cmp
hlt
cltd
movsl
mov
ss
mov
jnp
and
cld
bound
sbb
adc
and
push
adc
adc
or
mov
outsl
adc
mov
mov
ret
mov
popf
ja
sbb
push
ss
push
lock
inc
loopne
jbe
test
sub
mov
pop
jmp
je
xchg
test
lret
xor
in
jge
jl
mov
ljmp
test
aam
lret
out
aaa
lods
or
dec
add
push
popa
aad
and
cld
lds
dec
cmpsl
lea
sub
mov
cmpl
rcr
pop
add
push
in
icebp
dec
jl
mov
out
dec
jmp
or
dec
xchg
add
loopne
test
loope
std
inc
xor
inc
mov
cmp
mov
mov
or
incb
cs
sub
jnp
dec
test
std
out
xchg
jns
mov
xchg
xchg
loopne
loop
inc
movsb
push
arpl
fildl
inc
dec
inc
xchg
sbb
rcl
cmp
out
pop
scas
hlt
mov
in
in
popa
jae
sbb
pop
sub
push
sbb
jmp
pop
call
xchg
and
sbb
loop
popa
cltd
movsb
cmpsb
xor
inc
pop
insl
mov
lea
fbld
pop
lret
add
jge
cmpsb
xchg
aas
dec
or
scas
aaa
xor
das
insl
cmpb
cmpsb
push
movsb
add
adc
jbe
sub
sub
out
push
and
push
stos
adc
addr16
push
jno
and
into
lret
dec
test
inc
lods
filds
jg
mov
insb
sarl
or
pop
xchg
pop
or
ret
out
inc
in
cmpsb
xor
icebp
pop
mov
cmc
cmp
pop
xchg
sbb
mov
rcrl
lods
into
cld
mov
add
sarb
fmul
lret
insb
push
push
mov
xchg
sarl
call
loop
ret
xor
std
dec
hlt
xor
cmp
sbb
inc
mov
push
outsb
lret
lret
add
pop
xchg
rcll
push
lea
movsb
ret
or
push
outsl
lret
or
leave
mov
fsubl
fmuls
push
sub
leave
dec
daa
in
xor
jle
insb
mov
ss
sahf
jge
or
loop
imul
jb
int
mov
dec
ja
jg
xor
popf
or
addr16
xor
ret
xor
mov
mov
xor
xorl
pop
cmp
push
pop
push
inc
scas
inc
mov
xor
inc
imul
mov
mov
sub
mov
jb
lods
pop
cmp
jnp
imul
ror
test
or
xchg
out
das
mov
out
push
add
jmp
inc
in
jo
nop
pop
sub
popa
pop
mov
aad
cmp
push
int3
adc
rep
push
dec
pop
adc
sub
ljmp
aaa
lock
mov
xchg
and
pop
lea
ss
sub
or
mov
push
sbb
add
and
das
popf
or
xor
bound
push
inc
mov
dec
mov
sub
push
push
cmp
or
mov
clc
add
fs
ror
xchg
dec
xchg
fs
lock
xor
sub
xchg
pop
or
out
mov
aam
add
push
push
sbb
push
mov
roll
mov
call
test
leave
pop
aaa
xchg
or
lcall
loope
dec
ja
xchg
inc
cwtl
dec
xchg
fistl
rol
movsb
pop
andl
sbbb
adc
aad
cmp
testl
push
lret
jno
repz
out
pop
in
dec
rcl
call
fs
xor
jb
xchg
pop
sbb
ja
or
inc
in
xrelease
ja
cmp
loope
or
rorl
dec
idivl
xlat
repnz
jmp
xchg
mov
pop
imul
lahf
negb
jecxz
rcll
mov
dec
lods
stos
add
testb
or
repz
imul
xchg
gs
in
push
adc
jne
adc
insb
loopne
scas
cwtl
cltd
loop
shr
testb
xor
shll
stos
rcrl
shrb
dec
fisttpll
add
repz
leave
inc
lret
movsb
fistpll
dec
mov
xchg
ss
popf
pop
ret
stos
subl
push
data16
mov
jmp
stos
sub
into
test
test
loopne
push
jge
lcall
xchg
pop
xchg
enter
or
jae
dec
stos
lret
mov
ss
jl
fsub
int
mov
or
andb
pop
out
or
jl
and
jbe
sub
das
aaa
mov
dec
pop
pop
mov
mov
adc
jb
addl
shl
repnz
sub
cltd
dec
mov
test
xchg
sbb
push
test
push
jo
je
stos
xor
mov
test
dec
jae
sub
sub
shlb
mov
mov
sbb
jne
mov
jbe
shlb
test
lock
mov
cmp
lods
or
add
lods
fwait
jb
bound
mov
sbb
es
push
loope
sarl
daa
lcall
adc
jno
cmpsl
cli
jl
fisubl
data16
das
data16
mov
xchg
out
jecxz
xchg
movb
call
jno
lret
out
inc
aam
xchg
inc
push
jl
cli
subb
rcll
push
and
lods
push
pop
pop
sar
and
test
repz
xchg
stos
and
inc
jge
adc
jl
sarl
jp
fsubrl
cmp
cmp
rcl
out
fdivr
pop
bound
push
mov
and
pop
shlb
push
inc
rol
jmp
push
mov
or
jae
sbb
pusha
xchg
jo
push
out
gs
push
mov
in
and
stc
push
out
sbb
daa
pushf
xchg
cmp
jmp
jae
int
enter
aaa
dec
lock
es
mov
out
mov
and
popl
cmp
jae
pusha
xor
and
sbbb
pop
sub
ret
fucom
pop
adc
int3
cmp
lock
mov
cmp
daa
adcb
cld
loope
xor
dec
sub
imul
rorl
and
inc
int
or
imulb
push
mov
shl
int
jp
cmp
movsl
mov
inc
cmpsl
sbb
jb
pop
cmp
mov
out
fistps
sub
adc
mov
xchg
cwtl
mov
mov
lret
mov
jmp
or
inc
cltd
adc
inc
lea
rol
pop
cld
aas
dec
cwtl
in
push
test
mov
jno
ret
dec
inc
loope
loope
mov
fiaddl
and
into
fsts
lcall
gs
push
loope
push
insb
out
in
cli
test
clc
sub
mov
sarb
xchg
mov
push
or
movsb
ret
fwait
insl
rorl
insl
repnz
jmp
popa
push
xchg
mov
aaa
adc
outsl
fildl
clc
ss
rcrb
jp
into
sbb
push
jg
test
pop
mov
nop
ljmp
rcl
in
add
fwait
push
mov
adc
loopne
unpcklps
xchg
jmp
jns
mov
inc
inc
outsb
mov
repnz
mov
sahf
idivl
int
pop
in
and
bound
xor
dec
gs
data16
or
fmul
dec
or
daa
int
xlat
adc
sti
jno
std
lret
call
scas
dec
mov
ret
enter
jb
and
js
sbb
xor
xchg
addr16
out
out
push
lahf
cmp
in
les
hlt
aas
push
xchg
cmpsb
andnps
popa
mov
outsl
and
jp
pop
cmpb
fdivl
mov
cmp
xor
shl
xchg
js
fistpll
test
cld
add
cs
hlt
scas
add
cmpsb
daa
push
cmc
jl
loopne
cmp
inc
sarl
add
jmp
or
rcrb
mov
lahf
mov
inc
rcr
lahf
roll
xor
push
sahf
inc
in
idivl
jo,pt
xchg
lret
sar
clc
les
mov
jg
stc
cltd
mov
std
add
dec
pushf
in
cmp
cmp
sbb
sub
fistpll
lds
jbe
stc
popa
mov
insl
lret
scas
test
loopne
cmpsl
bound
scas
fdivl
loopne
stc
mov
mov
cmp
push
pop
mov
sbb
sbb
and
js
push
call
mov
aas
inc
clc
jle
imul
aaa
bnd
ret
adc
jne
ljmp
std
mov
mov
mov
add
add
mov
in
dec
mov
mov
mov
mov
fdivs
xchg
in
pop
or
subb
int
or
icebp
and
mov
inc
ja
xor
scas
mov
and
aaa
mov
jnp
or
je
mov
jo
mov
adc
jne
cltd
and
cmp
dec
xor
popa
push
adc
xchg
sarb
js
les
aam
gs
cmp
ljmp
push
scas
or
or
das
mov
lahf
jle
icebp
scas
sbb
nop
ret
insb
test
mov
adc
push
ja
mov
push
mov
inc
lods
movsb
pushf
mov
sub
xchg
xchg
xchg
movsb
mov
cmpsl
pop
fcom
out
je
dec
ficoms
aas
xor
adc
aas
xor
push
shrl
nop
test
pop
in
adc
lea
ja
out
pop
xchg
ss
mov
inc
imul
or
xchg
mov
stos
cmpsb
iret
and
cmp
lds
xchg
sub
add
loop
pop
ss
xchg
inc
outsl
fmull
or
inc
fwait
ret
rcrb
cmpsl
dec
je
data16
mov
dec
enter
xchg
add
and
aaa
adc
test
sbb
push
inc
jle
adc
mov
xor
dec
cmp
sar
cmp
mov
adc
insb
mov
sahf
mov
daa
insb
or
mov
push
cmp
add
sub
push
mov
mov
out
push
insb
and
out
jecxz
mov
movsb
test
lret
lds
out
and
mov
shll
pop
pop
mov
add
bound
jo
jl
lahf
push
mov
dec
das
test
or
and
adc
inc
repnz
inc
inc
scas
dec
sub
mov
cwtl
jl
je
mov
mov
loope
lcall
je
inc
cmp
mov
bswap
sub
sub
xchg
test
xchg
roll
mov
push
or
ret
add
or
rcr
jne
xor
ss
push
movsl
out
dec
in
mov
cmp
jle
and
and
jecxz
scas
fdivl
imul
or
cmp
stos
pop
pop
mull
cld
push
into
imul
xchg
sbb
aad
pmaxub
lock
ret
mov
xchg
sub
ret
insb
test
jl
jne
mov
adc
mov
add
fmul
in
inc
stos
inc
sbb
into
mov
aam
sbb
mov
addr16
xchg
xor
mov
lods
mov
in
xchg
inc
mov
movq
sub
xor
xchg
es
mov
inc
push
or
mov
and
scas
add
dec
nop
ja
jne
adc
je
out
xchg
test
mov
xchg
jg
cmp
ljmp
mov
and
aad
xchg
pop
pop
jmp
nop
pop
rorb
mov
out
int
push
shll
sbb
mov
or
jl
cmp
adc
psadbw
xor
sub
mov
mov
mov
xor
loop
sbb
adc
in
shrl
lahf
ret
xor
aaa
ret
mov
pop
pop
enter
push
stos
xchg
out
lods
es
in
dec
dec
xchg
xchg
mov
push
lcall
push
add
sub
mov
jge
sbb
std
repz
and
and
mov
push
nop
rorl
lds
sti
.byte
.byte
mov
adc
mov
nop
add
add
popa
adc
adc
inc
lds
jmp
stos
cmpsb
fsubr
es
sub
jnp
rcll
scas
je
cmp
add
mov
dec
bound
js
adc
dec
lods
jbe
pop
shl
and
pop
clc
inc
scas
vmwrite
movsl
mov
pusha
cmc
test
nop
pop
addb
xchg
aad
js
push
and
loopne
xchg
add
cmpsb
data16
cmp
pusha
into
cmp
mov
rcrl
addr16
repnz
ret
addl
lods
test
imul
orb
insb
gs
push
push
and
inc
es
xlat
pop
cli
xchg
das
pop
and
bnd
push
push
int3
ljmp
fidivl
cmp
xlat
mov
mov
cwtl
mov
orl
stos
mov
mov
cmp
out
inc
clc
xchg
xchg
fsubl
gs
pusha
mov
pop
mov
mov
jecxz
xor
sbb
sahf
jmp
cld
loop
pop
xchg
xor
cmp
inc
data16
cmp
in
or
cld
cmp
jo
test
sub
mov
clc
mov
sti
mov
xchg
insl
inc
mov
movsb
je
inc
cli
inc
repnz
sbb
test
inc
int3
push
mov
call
sub
pop
xchg
pop
mov
jnp
bound
lock
lods
loopne
sbb
mov
fldcw
bound
adc
fcmove
add
inc
aad
and
fwait
jge
mov
test
pop
push
dec
mov
xor
inc
inc
aaa
xor
sarb
notl
pop
fildl
sub
add
mov
fstpl
aas
fists
sbb
lcall
leave
loopne
mov
leave
inc
hlt
jb
rclb
inc
loopne
popa
data16
ss
add
add
int3
sti
mov
add
add
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
int3
sti
mov
add
add
add
add
addb
add
int3
sti
mov
add
add
add
add
add
add
addb
add
loopne
add
int3
sti
mov
add
add
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
int3
sti
mov
add
add
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
int3
sti
mov
add
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
int3
sti
mov
add
add
add
add
addb
add
int3
sti
mov
add
add
add
add
add
add
add
sti
mov
add
add
add
add
cwtl
add
add
add
add
sti
mov
add
add
add
add
test
add
add
add
int3
sti
mov
add
add
add
add
mov
add
add
sti
mov
add
add
add
add
enter
add
add
int3
sti
mov
add
add
add
add
fadds
add
add
add
sti
mov
add
add
add
add
call
add
add
sti
mov
add
add
add
add
clc
add
add
add
add
sti
mov
add
add
add
add
or
add
int3
sti
mov
add
add
add
add
sbb
add
int3
sti
mov
add
add
add
add
sub
add
int3
sti
mov
add
add
add
add
cmp
add
int3
sti
mov
add
add
add
add
dec
add
add
int3
sti
mov
add
add
add
add
pop
add
add
int3
sti
mov
add
add
add
add
push
add
add
sti
mov
add
add
add
add
js
add
add
add
int3
sti
mov
add
add
add
add
add
add
add
sti
mov
add
add
add
add
add
add
add
sti
mov
add
add
add
add
add
add
add
sti
mov
add
add
add
add
add
add
add
sti
mov
add
add
add
add
add
add
add
int3
sti
mov
add
add
add
add
add
add
add
int3
sti
mov
add
add
add
add
add
add
add
int3
sti
mov
add
add
add
add
add
add
add
int3
sti
mov
add
add
add
add
add
push
add
add
add
int3
sti
mov
add
add
add
add
add
push
add
add
add
int3
sti
mov
add
add
add
add
add
push
add
add
add
int3
sti
mov
add
add
add
add
add
push
add
add
add
int3
sti
mov
add
add
add
add
add
add
add
add
int3
sti
mov
add
add
add
add
add
add
add
add
int3
sti
mov
add
add
add
add
push
add
add
sti
mov
add
add
add
add
js
add
mov
add
in
add
add
add
jo
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
stc
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
cmp
add
add
add
add
add
add
incb
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
in
add
add
add
loopne
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
or
add
add
add
add
add
add
add
add
ror
add
add
add
add
push
add
add
in
add
add
add
and
push
add
add
in
add
add
add
inc
flds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
pop
flds
add
add
add
add
add
add
add
push
add
add
in
add
add
add
flds
add
add
add
add
add
add
add
in
add
add
add
js
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
and
push
add
add
add
add
add
add
add
in
push
add
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
mov
imul
lar
inc
sbb
fistpll
and
sub
add
xchg
pop
jmp
stos
cmp
daa
jbe
jle
pop
and
int3
lock
les
and
xchg
add
push
and
mov
dec
cmc
xor
cmp
inc
mov
nop
xchg
xchg
mov
cmc
loop
or
in
add
pop
dec
aam
pusha
mov
mov
jns
mov
mov
pop
fincstp
lods
loopne
inc
inc
sarb
cmp
inc
and
nop
mov
scas
sub
push
repnz
sbb
and
ficoml
sub
push
xor
das
fidivrl
les
pop
push
data16
mov
or
insl
jecxz
sbb
bnd
mov
cmp
inc
out
pop
jmp
mov
jo
pop
or
in
in
scas
adc
fdiv
push
xchg
sbb
rcrl
jb
int3
pop
push
aaa
shrb
outsb
sbb
sbb
xchg
xchg
sti
movsl
addr16
and
leave
das
dec
jp
mov
adcb
je
cmp
pop
in
sbb
inc
pop
dec
add
mov
xor
cli
mov
pop
cmp
adc
je
jmp
lds
ja
shlb
mov
fsub
cmp
out
loop
arpl
les
std
xchg
inc
xor
jle
sub
int
jle
out
fadd
xor
pop
cmp
sub
jle
inc
add
leave
aam
lods
jae
xchg
mov
or
push
cmpsl
lds
and
bound
aaa
adc
cmp
arpl
aas
mov
aaa
mov
push
cmp
ud1
xor
rcrb
xchg
lods
sbb
scas
in
add
iret
push
sbb
shll
inc
fstps
mov
cmp
dec
pop
mov
ja
pop
pop
push
xchg
ror
mov
into
rclb
jns
insb
jbe
int
enter
loope
popf
call
lcall
cmpsl
cwtl
mov
ljmp
and
adc
mov
in
pop
and
mov
mov
mov
mov
push
or
gs
enter
scas
push
and
push
push
addl
gs
lock
test
xor
add
inc
cmpsl
ret
xor
lcall
js
rcrb
cmp
pushf
divb
ss
push
ret
sbb
sub
inc
and
fdivrl
shl
rol
movsl
sub
es
js
jmp
adc
sbb
outsl
pop
hlt
or
mov
xchg
push
mov
mov
inc
xchg
shrb
jns
fists
shrb
fwait
cmp
push
inc
in
cmpsb
adc
sub
movsb
sbb
push
test
scas
mov
sub
adc
enter
imul
cmp
mov
aas
or
and
ss
cli
stos
pop
sub
loopne
or
jecxz
pop
add
cmpsb
lods
lods
into
stos
les
std
mov
xor
cmpb
fdivr
xchg
in
clc
into
xchg
mov
cmp
jmp
idivl
xchg
ret
cmp
jmp
push
xchg
mov
movsb
in
mov
fbld
ret
nop
mov
mov
clc
pop
int
inc
aaa
fists
dec
pop
lods
hlt
mov
sbb
cmpsl
test
pop
jge
adc
mov
cs
stos
std
push
mov
leave
sbbb
pusha
add
fstl
fdivl
in
jb
mov
testb
int
roll
add
addb
xchg
inc
lcall
jno
test
repnz
rcrb
sbb
mov
push
fidivs
add
hlt
lret
or
pop
loopne
repnz
jge
xchg
or
xor
mov
pop
or
adc
cld
idivl
pusha
mov
nop
in
pop
adc
sub
inc
out
sub
fidivs
stos
push
mov
jnp
or
outsl
mov
popa
jns
into
push
jnp
jae
add
loope
fcmovu
bound
in
push
movsl
xorl
loope
push
fisttpll
stc
inc
pop
adc
xor
or
cmp
mov
push
test
cltd
xor
adc
push
adc
aad
dec
pop
stc
ds
and
movsb
mov
call
insl
test
in
cltd
pop
sub
test
add
jg
pop
rorb
in
pop
addl
mov
sahf
int
divb
xchg
jl
inc
push
xchg
faddl
movsb
sti
add
cltd
mov
and
sub
js
or
mov
std
lahf
xchg
out
fwait
dec
imulb
jb
lret
nop
add
jl
and
jp
push
sarb
pop
xchg
mov
loope
in
mov
stc
xchg
outsl
xor
mov
adc
repz
adc
cmpsl
add
and
mov
cmpsb
pusha
inc
mov
mov
sbb
cmc
push
cmp
cltd
aad
lret
lock
xchg
add
stos
jbe
ljmp
loop
testl
mul
sbb
lods
call
mov
sbb
repnz
mov
popf
pop
xor
inc
pop
push
cltd
fsubrl
fsubrs
and
adc
loopne
enter
aad
cmp
iret
mov
mov
push
add
lock
pop
fistps
lcall
sbb
aaa
pop
mov
fistpl
addr16
push
popa
xorb
std
push
inc
cwtl
mov
mov
sbb
ret
mov
xchg
ss
dec
enter
jecxz
pop
dec
jne
mov
sub
inc
hlt
jnp
in
cmc
xor
shlb
in
adc
je
cmpsl
or
push
push
fistpll
or
inc
xchg
ret
xor
filds
xchg
pushf
cmpsb
movsl
sub
mov
cmc
into
scas
outsb
push
inc
add
or
push
xchg
insb
mov
sbb
push
in
out
push
jne
add
mov
bound
ret
xchg
mov
stc
and
mov
push
or
and
sbb
stc
fcomps
mov
pop
mov
arpl
test
xchg
add
shrl
leave
xor
jae
and
mov
hlt
ficomps
clc
xor
mov
push
cmp
loop
or
push
fisttpl
fdivr
rcrb
jnp
scas
jmp
fdivl
data16
nop
add
mov
aad
cmpsl
lds
mov
into
or
addl
push
xor
mov
call
pop
rcrl
mov
adc
jge
out
mov
es
repz
in
mov
inc
pop
sub
fiaddl
fs
cmp
and
jge
pop
pop
lret
or
xchg
pop
jge
pop
jns
and
push
pop
push
es
dec
clc
pop
add
pop
jo
loope
mov
mov
xor
adc
cmc
pop
hlt
dec
icebp
jmp
movsl
int
pop
mov
cmpl
int
mov
dec
push
xor
rorb
adc
test
lods
cmpsl
push
shrl
dec
xor
jp
std
popa
mov
xor
mov
push
adc
jo
mov
out
movsl
push
mov
dec
andb
jl
frstor
enter
out
test
lods
mov
sbb
mov
ja
and
push
pop
leave
leave
mov
sbb
data16
std
jo
cmp
inc
sub
fucomip
fidivrl
imul
push
pop
xchg
xchg
out
mov
dec
int
je
cmp
lods
push
sub
inc
gs
paddsw
xchg
push
sbb
pop
lea
insb
es
sub
push
fs
cmp
out
inc
adc
rcrb
and
mov
sbb
jbe
imul
sbb
cmp
mov
fimuls
cmc
mov
pushf
add
add
dec
inc
adc
fidivrs
sbb
jecxz
fsubrs
fs
push
xchg
pop
inc
pop
divl
mov
jecxz
cmp
cmpsb
pop
loopne
cltd
jnp
xor
lods
jecxz
cs
push
xchg
gs
mov
nop
push
push
xchg
mulb
xor
xchg
hlt
cs
les
mov
arpl
cmpsl
and
sarb
inc
pop
scas
fstl
cmpsl
sub
xor
and
mov
and
rolb
mov
repnz
cmpsb
inc
pusha
xchg
cs
cltd
insl
loop
jae
inc
jmp
adc
cmpsb
aad
movsb
xor
sahf
divb
or
cli
jg
push
outsl
push
and
or
ds
inc
jb
shl
repz
les
adc
ljmp
mov
push
leave
jbe
inc
int
jne
out
fsubrl
mov
inc
mov
jne
push
mov
dec
add
mov
adc
sarl
or
mov
shll
jmp
negb
add
push
popa
cltd
push
ds
ficoml
push
or
cmp
xchg
or
fbld
clc
sbb
imul
bound
sub
and
into
js
xchg
or
pop
xchg
int
pop
stos
fwait
xor
ret
xchg
lcall
push
shl
and
sub
mov
cmp
inc
push
add
popf
sbb
mov
sbb
sbb
inc
sbb
aaa
add
mov
in
out
out
rcl
xchg
pop
stos
and
roll
pop
mov
cmc
das
jb
int3
andl
inc
popf
adc
adc
aaa
dec
adc
mov
mov
adc
jae
leave
test
hlt
and
jl
std
sarl
or
pop
push
sub
insb
xchg
and
inc
test
stc
fsubl
mov
fiadds
push
or
cli
mov
jle
leave
and
xor
push
leave
xchg
bound
sahf
dec
inc
xchg
pop
add
xor
popf
roll
sub
xor
mov
iret
loope
adc
push
add
add
jmp
cwtl
mov
dec
push
scas
adc
movsl
inc
fbstp
push
jae
mov
addr16
rcrl
jmp
push
out
pop
ljmp
outsl
or
lods
jns
sbb
repnz
cmp
repz
into
xchg
cmpsb
sub
cmpsl
mov
lock
push
daa
dec
cmpsb
inc
repnz
clc
outsb
aad
adc
mov
repz
mulb
xchg
scas
cs
hlt
or
jno
addr16
lods
sub
stc
sub
ss
or
es
dec
jmp
mov
out
outsl
insb
clc
test
xchg
pop
je
insb
popa
fwait
scas
iret
jnp
mov
xor
inc
push
mov
cmp
jg
stos
test
dec
int
fiadds
push
mov
mov
xchg
movsb
mov
imul
popa
inc
pop
mov
fsubrl
ljmp
sub
xchg
pushf
das
xchg
je
ret
sub
aas
xor
push
dec
jge
fldcw
sub
int3
jae
jo
or
push
mov
push
mov
xor
jp
popa
jns
icebp
dec
pop
lea
or
pop
jge
dec
test
and
fmull
lcall
lock
out
pop
iret
lahf
ljmp
pop
jnp
jae
adc
jp
movsl
movsb
lock
xchg
or
xor
jne
in
push
push
into
mov
adc
out
outsl
orb
xchg
outsl
rcrb
addr16
int3
int
pop
int3
xchg
stos
dec
inc
pop
adc
mov
out
aas
icebp
es
adc
jns
mov
pop
jmp
fiadds
out
inc
dec
xor
jae
push
add
adc
lahf
fcoms
pop
ds
imul
add
arpl
xor
and
sub
rorb
xchg
out
jp
hlt
mov
stc
push
aas
inc
dec
test
cmp
fistpl
mov
js
mov
insb
lods
scas
xor
xor
out
shlb
cmp
test
cmpsl
ss
cmpb
inc
lcall
fcomip
pop
ss
or
dec
mov
adc
clc
popf
lods
fisttpl
mov
mov
sub
xchg
popa
xchg
inc
repnz
rcrb
push
cmp
int
xchg
jo
pop
or
add
pop
dec
test
sub
mov
jns
decb
call
fiaddl
jae
movsb
ret
test
jmp
cmpsl
out
rolb
adc
add
dec
mov
mov
sbbl
dec
mov
mov
pop
cmp
sti
push
or
scas
rorb
fcoml
aaa
cltd
mov
mov
cmpsb
push
sti
mov
test
mov
into
xor
and
push
out
jge
aam
mov
ds
fs
imul
int3
inc
ljmp
shll
or
mov
add
xchg
or
fdivs
mov
je
mov
mov
lret
mov
lods
rclb
insb
les
iret
sti
sub
in
push
mov
cmp
aas
outsb
cmp
roll
jmp
hlt
mov
push
aam
scas
xchg
cli
scas
adc
out
jge
mov
add
cmp
mov
lret
lods
sahf
js
arpl
cli
lea
xchg
mov
mov
xchg
cmp
cli
or
movsb
sbb
popf
pushf
cmpsb
aad
and
insl
adc
jp
hlt
sub
inc
inc
inc
scas
and
push
adc
or
out
test
push
mov
je
popf
mov
ret
std
mov
stos
in
in
xchg
fsts
outsl
mov
jbe
push
je
insl
aaa
cmpsl
cmpsb
push
aaa
jne
sahf
outsl
faddl
movsb
add
dec
test
xor
mov
mov
jo
mov
repz
int
push
push
lods
sarb
jne
ret
push
stos
inc
or
popa
xchg
pop
mov
xchg
add
je
dec
into
mov
xchg
or
cs
test
lahf
cld
inc
cli
imul
jnp
in
ret
pop
and
popa
dec
mov
cmpsb
add
dec
dec
pop
subl
mov
jo
xchg
rorb
rcrb
lahf
jl
inc
and
dec
cwtl
inc
mov
dec
ret
xor
xchg
leave
aad
add
in
stos
mov
mov
daa
push
loopne
cmp
lret
test
xchg
push
push
cmp
stc
or
movsb
jecxz
test
lods
rol
shrb
add
ret
add
jae
mov
jecxz
dec
sbb
icebp
lret
out
cwtl
sti
or
push
stc
imull
rcll
into
mov
cmp
sub
cs
inc
aam
mov
xchg
cwtl
mov
mov
into
mov
dec
je
pop
aad
lea
rcrb
push
jmp
stc
cmp
mov
repz
data16
gs
sti
jbe
mov
std
js
mov
mov
jg
mov
aas
jne
xlat
mov
dec
sub
cwtl
sbb
mov
pushl
mov
test
xor
add
add
or
flds
and
aaa
or
cli
jno
push
inc
jmp
fidivrs
mov
icebp
mov
sbb
xlat
and
sbb
insb
jl
int3
pop
dec
lods
in
xor
je
pushf
or
inc
cltd
cmpsl
repz
cs
mov
sbb
add
mov
mov
ret
out
or
jmp
dec
push
add
pop
stos
mov
sbb
inc
inc
dec
mov
ds
dec
fwait
movsb
jnp
jecxz
mov
gs
xchg
cmpsb
sbbb
adc
cwtl
sbb
cld
xor
mov
jnp
push
aad
jecxz
pop
rcl
jnp
jmp
je
rorb
aam
fistps
or
mov
cltd
in
fcompl
xor
call
or
es
xor
push
sub
nop
push
pop
cmp
pushl
pop
nop
jne
xchg
pusha
mov
ljmp
cmp
movsl
push
popf
mov
pop
dec
dec
stos
dec
push
std
sbb
xlat
icebp
push
stos
sbb
pop
push
inc
jo
scas
popf
das
or
push
fs
inc
js
jb
inc
push
dec
in
jne
jns
lods
cmp
insb
in
cmpsb
test
sbb
ja
icebp
dec
insb
nop
aas
shll
sub
das
setg
mov
sub
popa
push
imul
enter
pop
mov
fcmove
pop
in
mov
cmp
imull
test
sub
repz
es
adc
and
out
jle
enter
lods
cmpsb
dec
jle
mov
push
push
add
sbb
in
push
cmpb
mov
xchg
adc
sahf
mov
inc
aaa
pushf
jp
and
dec
mov
adc
xorb
xchg
pop
js
jmp
lahf
push
mov
popf
stc
leave
sub
adc
ja
pusha
inc
jbe
int
xor
fnstsw
inc
ljmp
fsubp
add
dec
pushf
cmpsb
xchg
mov
and
cmc
rcrl
push
cwtl
lds
imul
jo
sub
jecxz
and
fld
or
push
push
sbb
loop
stos
and
movsl
mov
ror
inc
dec
fwait
popa
aaa
pop
out
mov
dec
dec
test
sbb
aad
in
adc
and
push
repnz
cld
xchg
jp
sbb
fwait
and
jbe
stc
cmpsl
and
sub
mov
push
pop
xchg
fs
cmp
bound
in
mov
adc
xchg
sarb
sbb
mov
ljmp
pusha
movb
sti
ja
ss
sub
out
mov
xchg
rolb
ficomps
jle
mov
gs
and
cs
pop
int
addr16
mov
mov
or
por
jnp
addb
in
push
xchg
push
pop
pop
adc
jle
adc
fwait
or
mov
rolb
adc
nop
std
call
lret
push
mov
push
fstl
xchg
nop
jg
mov
cltd
pusha
xchg
imul
pop
pop
sbb
jns
ret
aaa
jne
and
repz
cmp
imulb
sti
cmp
popa
adcb
test
adc
jmp
je
inc
mov
jg
xor
and
es
icebp
repz
inc
cmpsb
es
xorb
in
sbb
jge
xorb
clc
dec
pop
lock
sbb
xchg
xor
xor
hlt
lods
mov
xor
aaa
and
popf
cmpsb
xchg
jmp
and
push
shrd
push
or
pop
dec
mov
add
mov
testl
sbb
addl
push
cwtl
mov
jmp
mov
push
mov
cli
cmp
mov
repnz
divb
dec
add
pop
test
pop
push
pop
stos
lcall
stos
mov
ffreep
push
mull
sub
jge
sub
push
cmp
push
rorl
xor
inc
dec
test
mov
inc
or
xchg
mov
outsb
scas
pusha
out
in
fsubl
hlt
inc
test
add
add
sbb
xchg
and
psubb
mov
pavgb
aam
cmpl
cmp
in
rcl
aas
jecxz
sbb
push
lock
and
lea
fsubrs
push
ljmp
pop
cmc
and
sub
insl
js
mov
sub
add
gs
out
xlat
mov
sbbl
add
shlb
das
mov
js
out
push
inc
cltd
inc
xchg
js
adc
or
xor
daa
mov
stos
fstpl
cld
xchg
mov
int
and
mov
popf
xor
or
dec
sub
repnz
orb
into
adc
outsb
push
push
inc
xor
cltd
add
pop
push
xor
arpl
sub
mov
sub
dec
ret
in
jle
loopne
mov
mov
jns
inc
je
cwtl
dec
xchg
cmpl
mov
xchg
inc
les
push
rcrb
ljmp
sbb
xchg
pop
cwtl
inc
add
cwtl
adc
mov
push
aad
xchg
prefetchwt1
adc
mov
insl
xchg
add
lods
pop
push
mov
mov
or
push
cli
cmp
push
and
sarb
push
dec
movsb
jg
xchg
cmp
loop
addr16
pop
jg
fcomp
push
pop
pop
pop
fs
inc
scas
adc
add
xlat
sub
and
cmc
push
gs
push
shl
jnp
mov
out
push
xor
jno
loope
js
mov
pop
pop
sbb
push
cmpsb
mov
push
dec
add
cmc
ret
jno
shrl
iret
outsb
hlt
cwtl
pushf
mov
imul
push
inc
or
sahf
cmp
loop
pusha
sub
fwait
pushf
ljmp
lods
shlb
xchg
cmp
pushf
cmp
rcrl
bnd
jmp
outsb
lret
push
xor
cmpsb
leave
stos
aas
pop
lods
mov
pop
mov
cmp
and
pop
pop
stos
ret
mov
mov
pop
cmp
inc
in
dec
jno
fnstsw
or
test
or
in
adc
ret
dec
sti
or
sub
daa
lret
xor
lahf
ljmp
adc
sub
add
and
push
sub
mov
cmp
add
mov
mull
sub
ljmp
xor
xorb
loope
enter
jb
stos
mov
pop
push
int3
lcall
movntps
adc
rorb
mov
jns
sub
mov
cmpsl
jmp
test
imul
lahf
inc
leave
pop
push
and
icebp
cmp
inc
iret
mov
jl
loope
stos
or
in
filds
adc
stos
shlb
or
std
pop
lcall
inc
int
mov
arpl
sbb
sbb
shll
ss
inc
fdivp
or
or
sub
shl
stc
imul
jb
out
lds
fldl
xor
ja
cli
mov
insl
aaa
xchg
jo
adc
dec
xchg
push
sti
xor
inc
es
insb
scas
jp
cmp
fmul
insb
aaa
mov
movsb
in
mov
int
out
outsl
jp
inc
ss
adc
fwait
lods
inc
stos
xor
sbb
mov
adc
mov
mov
xlat
js
pop
outsl
xor
jl
ja
scas
inc
add
sub
jae
insl
out
inc
push
dec
pop
cwtl
fstl
inc
cmp
stos
subl
mov
mov
sub
and
lahf
hlt
les
mov
adc
pop
push
fdivrl
icebp
mov
and
fs
xchg
dec
xchg
sub
adc
xor
dec
in
adc
sub
stos
mov
outsb
pop
icebp
adc
imul
xchg
aas
jp
test
mov
sub
cmp
sub
mov
mov
ljmp
xchg
into
pushf
jnp
cmp
jne
jae
sub
or
add
ret
les
jns
sti
lret
enter
xchg
cli
or
jge
jnp
scas
inc
fidivl
and
xchg
scas
icebp
cmp
les
fldl
dec
add
xchg
push
movl
movsb
stos
xchg
inc
jp
lds
mov
sub
std
std
lret
pop
arpl
movsl
add
xor
pusha
test
in
lds
cmp
push
pop
sahf
stos
jno
xor
lock
je
mov
testl
test
jns
jp
int3
adc
stc
cmc
pop
dec
js
in
push
insl
xchg
xchg
daa
push
pop
cwtl
dec
mov
fmuls
mov
shll
and
insb
sahf
fnstenv
sub
push
push
test
mov
ljmp
fsubs
lods
jb
adc
out
add
adc
add
imul
pop
icebp
data16
mov
insb
or
or
int
mov
or
jecxz
jbe
shr
cmpsb
inc
stos
in
out
mov
int3
xchg
rcrl
or
cmp
adc
cmp
fcompl
jbe
cmp
repz
inc
stc
jecxz
mov
lcall
and
dec
in
scas
xchg
ljmp
das
xor
and
and
mov
xchg
push
or
dec
lcall
fdivrl
or
sub
es
inc
leave
mov
paddq
sbb
lods
repz
jecxz
xchg
aas
test
inc
pushf
jmp
cs
out
popl
cmpsb
in
sub
or
aam
es
jl
jb
jne
dec
call
dec
add
ret
dec
adc
xchg
fwait
adc
pop
push
and
lods
jae
arpl
pop
addb
xor
inc
push
test
loop
addr16
das
push
shll
xchg
loope
gs
das
inc
lock
adc
sub
int
jle
in
dec
lods
sbb
mov
pop
inc
sub
lret
adc
or
aam
lock
adc
adc
cmpsl
movsl
lods
aam
mov
push
adcl
je
pop
push
and
test
stos
sbb
push
rcll
aad
mov
int
loope
push
xchg
inc
pop
inc
in
adc
icebp
mov
jmp
scas
fisttpl
pop
lret
xchg
push
jns
test
cmp
pop
out
sbb
sbb
nop
mov
mov
es
sub
jg
sbb
addl
jnp
jae
call
push
out
call
mov
push
fadd
fldcw
pop
test
adc
icebp
mov
mov
aad
dec
sahf
sbb
fcoms
popa
cmp
or
test
insl
pop
nop
arpl
loopne
scas
hlt
ret
sbb
push
scas
pushf
lods
adc
xchg
sub
mov
xor
dec
aaa
ja
xor
or
or
push
inc
aaa
iret
call
call
sub
movsb
or
sti
pusha
fidivrl
cmp
lcall
jecxz
lods
mov
out
xchg
add
std
inc
mov
int3
sahf
jecxz
jns
iret
lcall
push
cmc
pushf
jge
sub
jg
icebp
inc
ja
xor
mov
cmpl
lahf
xor
cmp
xor
insl
dec
fsts
stos
addl
loope
mov
jae
lret
ljmp
stos
fnstenv
jbe
cmpsb
xor
adc
inc
aaa
xchg
xor
mov
cltd
je
outsb
js
push
aad
cmpl
sub
pop
mov
mov
ret
shrl
and
pop
aaa
mov
mov
sub
add
push
gs
or
nop
leave
cmp
lahf
pop
in
jae
xchg
daa
push
jo
dec
xor
aas
int3
andps
fisubs
sub
mov
sbb
mov
and
out
arpl
push
add
dec
push
sub
stos
cmp
push
cmpsb
xchg
xor
jb
fwait
aaa
pop
inc
cmp
pop
cli
sub
push
xchg
in
sub
aas
icebp
sub
lret
adc
push
xchg
inc
iret
xlat
out
es
sub
cwtl
cli
pusha
stos
xchg
lret
mulb
mov
jo
cwtl
cltd
insl
insb
inc
cmp
dec
push
mov
jmp
enter
sti
aam
xchg
mov
lods
lcall
btc
add
push
sub
cltd
cmpsl
sub
jmp
xchg
adc
test
dec
mov
adc
fcomp
insl
fstps
and
mov
out
xchg
sbb
jg
aad
mov
lds
xor
jmp
mov
cmp
fsubp
cmp
push
arpl
aaa
out
xor
cli
cli
mov
xor
int3
pop
mov
sahf
dec
mov
cmpsl
sub
add
push
add
in
or
out
push
mov
add
test
push
test
or
sub
push
icebp
sarl
sub
int
imul
and
sahf
in
mov
mov
sti
bound
popf
loopne
test
jle
int
addr16
jne
aad
in
jle
pop
add
push
outsb
jo
push
ret
mov
daa
and
js
mov
mov
inc
cmpsb
into
pop
lahf
jno
jge
sbb
fmuls
mov
sbb
xor
shrb
mov
add
mov
cmc
xchg
aas
mov
or
push
das
push
add
daa
mov
dec
inc
cwtl
jns
inc
mov
jnp
add
sbb
ret
ljmp
mov
adc
sti
add
sub
mov
jo
testl
sbb
les
dec
out
or
ja
test
push
xchg
shll
mov
mov
xchg
pop
inc
inc
sbb
fisubl
mov
pushf
add
hlt
ret
push
imul
inc
je
ja
fs
xor
push
ficomps
fwait
outsb
inc
cwtl
test
jle
loop
inc
mov
and
dec
jae
cli
inc
inc
addl
pop
in
shrl
pop
sbb
xchg
pop
sub
gs
and
cmp
cltd
lahf
jns
dec
push
pop
adc
mov
inc
inc
out
xchg
jge
add
xchg
add
stc
or
cmp
mov
sub
gs
dec
add
xchg
push
icebp
sbb
mov
in
repz
mov
xor
orb
cwtl
fsubrp
jnp
sbb
add
stc
xchg
dec
xchg
lods
popf
pop
dec
adc
popa
and
sahf
inc
sbb
pop
push
pop
scas
or
les
popa
and
clc
xor
pop
loope
mov
cmc
mov
loop
pusha
mov
arpl
test
je
dec
fs
mov
dec
sub
add
rcll
push
pop
dec
movsb
inc
xchg
mov
mov
mov
out
cmp
jae
lcall
push
imul
pop
push
mov
pushf
pop
mov
push
inc
je
sbb
adc
popf
sar
out
ljmp
mov
dec
mov
fdiv
mov
and
dec
movsl
stc
push
imul
call
repz
pushf
enter
pushl
jge
cmp
lods
and
sbb
lret
mov
jecxz
and
insl
test
pop
loopne
sub
loop
mov
movsl
jmp
addr16
add
inc
and
data16
and
in
cmp
xor
in
xor
je
cmpsl
mov
popf
lcall
test
hlt
mov
jg
pop
mov
adc
test
les
outsl
sbb
mull
out
lea
dec
movsl
pop
dec
xchg
pop
daa
repz
mov
rcll
or
or
sti
popl
mov
iret
jl
pop
out
pusha
or
cld
mov
mov
imul
and
nop
out
sbb
aas
cs
cmp
mov
in
and
mov
fidivrs
pop
sub
jns
aad
cmp
out
push
daa
loop
mov
mov
inc
clc
pop
jg
fstpt
inc
in
add
pop
sub
jecxz
addr16
add
mov
xchg
negb
xor
cmp
inc
iret
out
xchg
sub
mov
jbe
imul
xchg
leave
add
sbb
mov
dec
daa
xor
enter
sbb
dec
notl
in
cli
pop
jno
cmp
sbb
fwait
mov
jnp
scas
push
loopne
lods
mov
rcr
testl
mov
mov
jae
sbb
push
jp
push
sub
cli
ds
jle
cld
adc
mov
les
cmpsb
fldenv
mov
lods
test
dec
ja
cwtl
jp
insb
push
stos
fcomp
imul
icebp
aaa
outsl
xchg
add
mov
fdivl
or
xor
sub
mov
sbb
adc
mov
mov
gs
or
lret
pop
cli
and
push
pop
dec
xor
rclb
or
or
mov
and
leave
fiadds
xlat
cmp
sub
sbb
adc
add
jb
and
std
lock
adcb
inc
lods
pop
and
push
xchg
fisttps
adc
in
xchg
cli
emms
adc
notb
jns
mov
fldenv
cwtl
fadds
mov
cmpsl
inc
push
js
test
jb
das
in
xor
cmp
push
push
out
or
pop
out
push
xchg
enter
dec
fyl2x
pop
je
inc
outsb
dec
pop
divb
sbb
aad
mov
or
jge
insb
cmp
neg
xor
dec
push
push
bound
jmp
push
in
adcb
sarl
aad
mov
jae
insl
imul
int
xor
and
fildl
and
cwtl
test
fwait
pop
push
jno
jns
js
pop
push
pop
pop
push
int
hlt
jne
push
clc
dec
movsb
outsl
dec
movb
lret
movq
mov
mov
addl
fisttpl
mov
add
inc
jl
or
add
mov
aaa
fidivrl
gs
int3
sub
mov
stos
pop
mov
add
ja
pop
xchg
ret
outsl
push
int
loope
pop
ds
xchg
cli
shlb
jl
ret
out
lea
jp
xchg
lahf
stos
fsubrl
outsb
fs
or
dec
cmc
cmp
outsl
xchg
xchg
jl
lret
int3
xchg
jl
iret
and
popf
pop
sbb
xor
add
test
repnz
mov
call
cmp
loope
aaa
out
lods
imul
pushf
xchg
daa
push
push
sub
lods
cltd
xchg
mov
inc
enter
rcrl
rcll
jl
cmc
daa
adc
and
xchg
sbb
pop
mov
push
pop
icebp
mov
sarl
pop
xlat
push
pop
jp
js
pop
fcmovne
mov
xchg
xor
mov
or
jg
pushf
cmpsl
call
in
lret
icebp
adc
pop
movsl
jmp
bound
cmp
mov
mov
add
in
test
and
pushf
push
pop
jae
mov
inc
inc
xchg
lods
sarl
mov
cmp
push
lcall
repnz
sub
scas
or
fwait
leave
aas
mov
mov
mov
xchg
cmp
xchg
bound
xorb
gs
cltd
mov
jbe
jno
adc
jo
ret
lea
and
leave
cmp
or
sbb
push
and
adc
sub
scas
in
and
sarl
das
xchg
pushf
adc
push
mov
dec
add
cld
cmp
add
xchg
sbb
push
sbb
rep
and
cli
and
cmp
mov
scas
dec
and
push
loope
jno
pusha
sub
mov
rcl
or
fwait
or
int
inc
or
pop
push
test
ja
hlt
or
insl
inc
inc
adcl
iret
inc
jmp
add
int3
jae
mov
shrl
popa
cs
cmp
popa
jbe
mov
fcmovnb
or
dec
push
ret
sti
jbe
test
adc
fucomp
jns
mov
mov
mov
inc
fcmovnb
jne
scas
sbb
lret
adc
jge
daa
adc
cmp
adc
dec
popf
cmpsb
sbb
sub
ror
push
lds
cltd
or
test
outsl
mov
lds
sbb
sub
push
dec
mov
adc
jbe
mov
or
and
aam
push
dec
call
cs
fimuls
or
shlb
flds
mov
pop
cmpsl
dec
loop
popa
mov
inc
mov
arpl
dec
out
xor
inc
mov
push
mov
cmp
and
bound
cli
xor
push
xchg
clc
fbld
arpl
xor
idivl
cmp
mov
cltd
aam
mov
cmpb
jne
or
inc
fsub
dec
enter
jns
pop
inc
imul
test
movsb
cld
push
mov
nop
aaa
jg
xor
das
or
cmp
lret
lock
and
lcall
inc
or
sub
mov
cmp
cs
pop
sbb
xor
aas
pop
add
push
inc
mov
loope
orl
fsub
js
inc
cmp
sbb
inc
jne
mov
fdivl
adc
fucomp
lock
add
pop
insl
mov
add
mull
mov
daa
jb
lret
sub
jg
xchg
sbb
mov
out
cmpsb
inc
add
push
sub
hlt
add
shlb
cli
lock
push
mov
lret
xchg
imul
cmp
mov
mov
xlat
inc
lcall
subl
inc
out
mov
dec
mov
add
out
xchg
cli
xchg
dec
sbb
dec
icebp
pop
stos
inc
lret
sub
dec
cli
dec
fnstcw
loopne
stos
call
test
sub
orl
lea
sub
call
data16
sub
inc
xor
repz
les
push
adc
addr16
out
jp
popa
pop
dec
loopne
arpl
push
xchg
int3
clc
push
shlb
mov
rorb
xor
push
push
push
imul
call
je
sti
push
push
mov
jo
dec
je
dec
mov
pop
jo
loopne
jnp
mov
test
mov
cmpsb
nop
fistpl
outsb
mov
sub
ljmp
pop
pop
xchg
ljmp
paddsb
mov
jns
fimuls
ret
adc
jae
loopne
pop
iret
push
cmp
in
loopne
fisttpll
shl
inc
sub
push
add
cmpsb
sbb
lds
and
sarl
pop
inc
sar
js
sti
xchg
pop
xor
pop
outsl
subb
push
cmpsb
jp
sub
jbe
mov
fprem1
mov
xor
mov
add
xchg
cmp
popa
imul
adc
iret
mov
cld
add
cs
pusha
mov
testl
aad
pop
and
bound
sub
popa
lcall
adc
lahf
and
mov
in
insb
push
dec
cli
sbb
lock
xor
icebp
jns
push
xchg
loopne
sub
mov
xor
icebp
in
loope
repnz
mov
xlat
rcrb
je
jne
stos
es
cld
ret
rol
iret
push
mov
aad
xor
xchg
les
fsts
out
pop
sbb
in
dec
jne
pop
inc
sti
ret
cmp
repnz
cli
jp
into
pop
ret
dec
dec
enter
inc
and
pop
testb
mov
pushf
mov
add
stos
inc
bound
xor
or
outsl
aas
scas
pop
mov
test
mov
loopne
sbb
pop
mov
mov
out
bound
sub
sbbb
mov
shrl
test
or
pushf
jg
rolb
jl
mov
sbbl
adc
and
push
cmp
pop
mov
mov
jns
pop
bnd
dec
mov
push
push
add
push
mov
mov
push
cmpl
les
sub
adc
jo
mov
imul
xchg
push
cltd
jge
add
or
lahf
nop
pop
cmp
push
enter
xchg
mov
repz
pop
repz
pop
add
mov
inc
loop
cmpsl
xchg
popa
xchg
fcomip
mov
cmp
and
and
push
aam
lods
repz
mov
add
gs
sub
cwtl
push
add
pusha
lods
cmp
add
out
xchg
fwait
addr16
jg
push
insb
clc
sub
jno
dec
cld
out
imul
dec
int
mov
pop
hlt
dec
cs
push
adc
cmp
in
lret
lods
sub
mov
fwait
movswl
mov
sbb
xchg
pop
jg
dec
dec
daa
gs
ficoml
cmpsb
adc
fnstcw
outsb
dec
xchg
and
scas
xor
cwtl
xchg
out
sub
push
pop
dec
xchg
hlt
and
cmp
in
fistpll
enter
rorl
cmc
pusha
divl
xchg
addb
fldcw
mov
pop
cmp
loopne
aas
push
addl
mov
mov
mov
mov
andb
and
mov
iret
pop
jp
push
std
dec
or
mov
or
push
iret
fwait
or
fsubrl
pop
cmpsl
lret
sti
lds
sub
popf
xchg
lcall
xor
inc
cmc
jge
scas
shll
push
xor
jl
mov
mov
mov
fsubrs
cmp
mov
inc
gs
xor
xchg
jns
stos
dec
mov
outsb
rorl
mov
imul
sbb
mov
inc
and
xor
lock
dec
sahf
arpl
outsb
nop
cmp
pop
lcall
ficompl
rcrl
sti
sarb
inc
or
aad
idivb
jl
xchg
lret
fdivp
rolb
mov
xor
addl
and
cmp
aam
mov
cmp
jae
or
mov
xor
push
fildl
sub
cwtl
pop
inc
adc
pop
push
mov
mov
inc
cmp
push
xor
test
mov
mulb
outsb
testb
mov
and
cmp
mov
cmp
cltd
jbe
inc
lahf
jge
xor
cmp
daa
repz
jnp
jo
popf
mov
and
push
mov
xchg
mov
imul
sbb
nop
add
mov
jecxz
in
cmpsb
sub
push
sub
icebp
add
bound
fwait
and
sbb
ljmp
mov
enter
adc
out
ljmp
xor
pop
andb
movsl
scas
pusha
mov
paddsw
inc
lds
leave
aad
test
mov
push
mov
pop
push
mov
lret
idivb
or
lcall
and
xchg
xchg
cmpb
jnp
ret
or
lds
in
pusha
mov
jnp
xor
cmc
insb
push
xchg
cltd
ss
xor
out
and
lret
aaa
or
adc
repnz
notb
push
hlt
add
lock
in
xor
xchg
cltd
xor
lock
push
repnz
adc
mov
xorl
pop
leave
push
fdivs
xchg
jg
mov
arpl
dec
out
insb
add
imul
mov
leave
adc
adc
lods
sti
lods
and
or
das
mov
enter
sub
cmp
sbb
and
push
paddq
std
out
loopne
mov
push
int
xlat
cmp
xchg
sub
outsl
adc
xchg
or
push
aam
pop
vmovdqa
daa
xor
insl
mov
and
pop
jbe
xchg
adc
rclb
pop
rcll
push
ret
jno
jb
xchg
or
or
xchg
or
push
test
push
xchg
sarb
stos
testb
out
adcb
repnz
and
dec
stos
ret
sub
lret
dec
push
mov
movsb
and
clc
pop
sub
xchg
adc
xor
ret
call
mov
pop
jno
cmp
jle
jecxz
call
mov
sub
dec
int
insl
jmp
sbbl
fiaddl
inc
cmp
stos
bound
sub
push
daa
jge
or
mov
dec
pop
push
rcrl
xor
sar
aas
jmp
notb
adc
ret
or
outsb
cli
sub
jns
nopl
js
mov
fdivl
or
pop
insb
jne
sub
xor
pop
int3
sbb
clc
outsl
add
sbb
jo
je
inc
push
jae
jb
adc
jae
shlb
stc
mov
pusha
in
sub
xchg
cli
and
jno
into
ds
adc
push
nop
add
inc
test
jecxz
sbb
cmp
push
mov
push
lea
sti
arpl
push
out
inc
out
popa
ds
mov
mov
cmp
in
js
out
xchg
insl
jmp
or
lds
cmpb
xchg
mov
xor
push
icebp
mov
lcall
fldcw
fs
push
test
inc
outsb
fmull
fwait
andl
hlt
and
insb
popa
int
icebp
arpl
sbb
inc
push
enter
xchg
orb
mov
ds
mov
cwtl
data16
or
xchg
in
jmp
jae
cmpb
leave
push
jae
jnp
and
popa
pushf
mov
call
pop
adc
sbb
fiaddl
push
stos
mov
xchg
cmp
jg
inc
dec
inc
and
add
sbb
jo
push
inc
jo
enter
jns
in
cmpsb
and
xchg
or
add
mov
xchg
jle
enter
outsb
dec
inc
lods
icebp
jge
cmp
subb
stos
inc
mov
inc
ljmp
lock
xor
cmp
adc
sbb
mov
jecxz
inc
or
mov
xchg
mov
je
adc
inc
xchg
jns
not
add
out
es
pop
xchg
data16
xchg
sbb
div
sub
sbb
adc
push
andl
scas
rcll
mov
lahf
xor
inc
cmp
dec
mov
ret
sbbb
mov
xor
dec
jecxz
aam
xchg
cmp
push
iret
pop
daa
mov
add
in
out
xchg
xor
stos
jmp
shrl
xlat
mov
push
sub
or
pop
clc
loopne
pusha
xchg
push
pop
cmpsl
pusha
hlt
loop
pop
xor
stos
jmp
mov
cmp
xchg
dec
adc
movsl
imull
test
mov
aam
cmc
push
out
fcmove
pop
daa
test
or
scas
fcomps
cs
sub
mov
xor
pop
jno
inc
sbb
insb
inc
inc
xor
push
mov
ljmp
mov
rclb
fcomps
arpl
aad
xchg
in
xchg
pop
fadd
or
inc
imul
icebp
xchg
aaa
mov
mov
or
fmul
sub
pusha
cmp
sbb
jmp
fs
push
push
xchg
adc
mov
jge
fs
mov
pop
test
xor
push
lea
pop
sbb
ljmp
lods
inc
ja
cltd
pop
jg
push
fimuls
jnp
lahf
xchg
loop
test
xchg
sub
aas
ds
ret
lods
inc
imul
hlt
inc
out
xorl
ss
xchg
movsl
std
sti
push
cmp
in
mov
mov
xchg
aam
arpl
sub
repnz
push
and
movsl
mov
lock
jae
rolb
mov
mov
cmp
jo
jp
leave
or
xchg
mov
scas
or
ret
dec
cmp
lods
fildl
pop
lods
jecxz
inc
fwait
push
out
lcall
jo
lahf
je
jl
push
pop
or
mov
mov
mov
jno
pop
xchg
xor
xchg
leave
inc
mov
sbb
out
sub
sbb
and
jg
jl
inc
adc
xlat
inc
js
sbb
jo
pushf
inc
gs
mov
sub
icebp
pop
andl
xor
inc
push
pop
pop
mov
sub
xchg
call
push
jle
insl
or
data16
lret
sub
out
mov
sbb
jp
pop
outsb
push
lret
and
ret
testl
add
jae
jecxz
jnp
and
push
dec
push
popa
popa
fiaddl
push
or
outsl
cmp
mov
pop
test
jne
mov
les
inc
addl
mov
call
inc
jecxz
jecxz
sbbb
mov
out
jmp
in
loopne
jmp
xchg
jecxz
cmp
add
repz
adc
loope
sub
cs
test
sbb
loop
test
mov
hlt
xchg
aad
mov
pop
push
mov
mov
cltd
out
testb
das
jge
nop
mov
lret
mov
shlb
xchg
push
add
mov
adc
jge
ljmp
sar
leave
or
popf
mov
aam
or
push
dec
adc
cltd
xor
inc
xchg
loopne
jb
es
mov
subl
xchg
clc
adc
in
mov
lret
push
sub
jo
jbe
aam
std
ret
std
shr
xlat
std
add
iret
stc
mov
xchg
inc
popf
push
aam
pop
lds
pop
lock
pop
sahf
jnp
jg
add
adc
adc
cmp
push
or
push
jnp
daa
out
cwtl
pop
out
icebp
aad
or
xor
xor
dec
test
sub
jle
add
jl
and
pop
cmp
mov
xor
xchg
xor
mov
aam
dec
fs
imull
inc
and
xchg
cmpsb
jns
fdivs
decl
out
push
nop
adc
xchg
mov
fmull
gs
mov
push
sti
jmp
scas
jg
mov
ljmp
out
outsl
and
mov
xchg
roll
push
mov
add
decb
and
or
test
sub
jo
or
stc
fs
xchg
js
out
mov
movsl
sub
sbb
scas
jecxz
adcb
rol
dec
test
cs
fs
xchg
iret
mov
push
cmp
aas
daa
incl
dec
mov
cwtl
addb
cltd
bound
mov
ror
push
lods
sub
adc
push
in
fwait
jno
into
sub
mov
cwtl
cwtl
inc
cli
cmpsb
add
jg
rcrb
sbb
mov
xchg
push
push
ja
imul
out
dec
dec
cmp
fwait
and
jmp
adc
test
call
push
stc
call
pusha
sbb
sbb
testl
mov
sbb
ror
sub
dec
pop
imul
sub
dec
xchg
cwtl
out
cwtl
movsb
inc
icebp
divl
jle
pop
out
lahf
mov
outsb
lods
xor
pop
jno
mov
sbb
dec
aas
jno
rcll
lds
push
test
jns
cld
addr16
mov
ficompl
inc
cmp
fstpt
mov
loopne
movsb
adc
push
mov
imul
aaa
and
push
sbb
inc
xor
jmp
cmpsb
adcb
sub
pop
gs
dec
nop
imul
lods
pusha
and
icebp
sub
into
jbe
stos
rcrb
stos
xor
push
inc
shrb
dec
xchg
and
mov
ss
mov
lea
test
xchg
inc
push
xchg
pop
je
test
adc
cli
xchg
cmpsb
cmp
sub
add
mov
mov
cli
loopne
jmp
leave
mov
test
ja
movsl
fwait
lea
add
jl
cmpl
mov
pop
leave
dec
aas
push
or
sub
adc
int3
movsl
test
shrl
stos
push
mov
pop
addr16
movsl
push
cmp
mov
call
xor
rorb
cmpsb
inc
imul
inc
mov
push
flds
and
hlt
push
dec
pop
xchg
lcall
mov
lea
in
jge
jecxz
hlt
sbb
xor
cs
bound
bnd
hlt
cmp
roll
mov
cmc
iret
pop
cmp
push
jle
push
sbb
jp
ljmp
in
push
jecxz
mov
loope
jmp
push
xor
adc
fidivrl
pop
mov
cmpsl
fs
repz
pop
jo
into
fcmovne
jb
add
jne
stos
push
or
inc
subl
cmp
and
nop
mov
les
sub
sarb
ficoms
sbb
and
dec
js
xor
fidivs
xchg
xchg
repz
pop
lea
xor
pop
jecxz
mov
fcoml
movb
xlat
mov
xchg
movsl
leave
nop
or
insb
cld
inc
mov
or
or
mov
and
cld
idivl
sub
and
int
cmp
out
dec
xchg
add
sbb
sub
dec
jl
rcr
mov
xlat
jne
int3
lahf
jg
nop
stc
or
es
xor
jmp
loop
jecxz
cmp
mov
inc
scas
out
les
loopne
inc
aaa
sub
push
cltd
scas
xchg
out
mov
clc
mov
xchg
lods
leave
out
jle
mov
dec
ret
lahf
sub
aam
fsubr
mov
inc
lods
ret
imul
inc
or
ljmp
pop
into
inc
dec
push
xchg
push
sbb
push
stc
cmp
adc
add
lret
inc
mov
xor
test
fstl
cmp
mov
repnz
push
lea
jb
repnz
imul
push
push
push
xchg
cli
test
inc
sbb
inc
add
lahf
shlb
mov
test
scas
fnstsw
ficomps
xchg
enter
sbb
inc
aam
data16
hlt
jo
and
into
dec
out
lret
push
and
fdivrs
ret
ficompl
repnz
cmp
or
push
cmp
into
jne
mov
stos
or
scas
dec
pop
sbb
jg
out
lods
jl
fsubs
pop
es
jp
outsl
pop
clc
es
pusha
test
sahf
or
sub
xchg
jg
lahf
xchg
mov
orb
in
add
sbb
insb
jne
push
dec
scas
xchg
mov
daa
xchg
into
popa
fdivrs
mov
hlt
cltd
repnz
stc
loope
ja
lds
sti
pop
jle
mov
jg
ret
lods
push
xchg
lret
negl
int3
adcl
xor
in
cmpsl
mov
pop
inc
jecxz
shl
andb
in
mov
mov
ds
cli
add
xor
sub
sbb
ret
adc
stc
fidivrs
sub
arpl
test
ljmp
bound
pop
out
sarl
jno
adc
daa
mov
cli
jnp
out
dec
xor
gs
pop
add
adc
lahf
push
jecxz
pop
and
jbe
dec
scas
mov
dec
mov
pop
mov
push
mov
mov
setle
mov
loop
xor
int
push
inc
clc
mov
xchg
sahf
fisttpll
mov
xor
fs
iret
push
cmp
into
stos
pop
jno
mov
es
cmp
sub
outsl
ror
xor
and
mov
movsb
push
adc
jae
push
sub
fcomi
fidivrl
ja
and
fwait
xchg
jae
push
sbb
xor
and
cmpsb
scas
sahf
dec
cli
addr16
out
rorb
je
jecxz
xchg
xor
sbb
push
add
loop
dec
in
test
and
mov
mov
jns
pop
inc
es
iret
popf
mov
add
movsl
push
std
mov
fsubrs
fdivrl
mov
fidivl
in
pop
mov
inc
fdivs
or
dec
sub
aas
xchg
mov
dec
adc
and
cmc
sub
jg
les
inc
out
div
sti
adc
popa
sbb
cmpsl
and
lret
icebp
repz
aas
add
push
pop
or
rorl
ret
pop
int
xchg
andl
dec
aaa
sbbb
call
xlat
adc
out
loop
aad
and
dec
inc
mov
movsb
pop
stos
les
daa
or
ret
xor
mov
jle
je
imulb
imul
dec
inc
add
pop
dec
jmp
cli
jo
jmp
int
test
mov
lds
jg
xchg
xchg
rcl
dec
and
fistps
pushl
cmp
jle
jg
test
pop
adc
sub
pop
or
adc
and
mov
fldenv
sbb
cli
add
dec
mov
lea
inc
and
mov
jno
fstpt
test
adc
push
sbbl
fwait
iret
dec
loope
jno
xor
fistpll
fucom
mov
add
inc
ficoms
mov
lock
mov
icebp
jb
in
inc
cwtl
imul
push
and
aam
jl
enter
pusha
stc
push
repnz
lods
mov
mov
add
or
mov
mov
out
xchg
fwait
xorb
mov
popa
mov
push
and
lods
loope
add
pop
push
fldcw
push
or
mov
mov
mov
adc
ret
jbe
mov
pop
call
pop
xor
mov
out
hlt
or
and
mov
ret
dec
call
mov
lret
mov
inc
xchg
test
mov
push
cmp
loope
in
lret
ljmp
xor
mov
loopne
jge
fwait
push
jnp
adc
data16
adc
inc
xlat
xchg
jecxz
ds
int3
jno
aad
les
inc
mov
jne
mov
test
cwtl
mov
orb
push
pushl
add
cmp
adc
cmp
mov
dec
movsb
ret
js
dec
sub
mov
mov
push
rclb
mov
cmpsl
imul
sub
dec
dec
cmp
push
fwait
aas
push
xchg
dec
push
mov
push
movsl
cmp
ja
arpl
aam
scas
mov
ret
shrb
outsl
rorb
sbb
xor
fadd
in
cmp
cmp
fisubrl
scas
mov
xor
call
sub
mov
imul
push
arpl
out
xor
js
xchg
fbstp
jmp
les
xor
leave
and
push
int
dec
pop
mov
sahf
fcomps
js,pn
adc
scas
push
sub
outsl
and
push
iret
mov
pop
mov
outsl
fs
loope
fdiv
xchg
sub
sbb
test
std
jg
ja
out
mov
negl
aam
pop
sbb
push
repnz
add
and
in
lahf
mull
lods
fistps
adc
cli
xor
mov
sub
rolb
add
dec
dec
popf
sbb
sbb
stos
cmp
sbb
ret
pop
in
jne
dec
ret
rolb
jmp
shrl
mov
mov
or
loope
mov
dec
xchg
inc
mov
cmp
push
cmpsb
lods
pop
mov
inc
push
push
pushf
or
mov
pushf
push
inc
movsb
pop
inc
mov
sahf
lea
dec
test
sub
sbbb
adc
dec
hlt
flds
cmpl
dec
mov
xor
and
roll
sti
mov
xchg
arpl
sbb
fstl
iret
insb
je
test
fwait
cmp
insl
imul
loopne
shl
insl
push
mov
mov
push
mov
sub
jmp
jmp
push
adc
xchg
je
mov
mov
lds
test
je
mov
jb
xchg
aas
fcmovnbe
dec
pop
xor
mov
push
pop
mov
or
adc
out
or
enter
jl
loopne
outsl
push
dec
xor
mov
sub
int
jge
in
or
insb
and
xor
fwait
push
jmp
test
inc
lea
js
ss
pop
stos
sub
daa
rorb
call
add
pop
dec
inc
pop
daa
mov
popf
pop
es
push
dec
outsl
lock
psrld
inc
lds
in
aad
test
xchg
dec
mov
push
adc
sub
sbb
decb
cli
scas
in
or
popa
fstps
push
call
lahf
xchg
push
cwtl
adc
push
daa
and
int
mov
push
inc
cmpsl
pop
dec
add
xchg
xor
add
or
cli
pusha
mov
iret
xor
loopne
ljmp
mov
pop
push
mov
lret
hlt
push
aaa
pop
cwtl
cmp
jbe
ja
inc
movsb
sbb
xlat
mov
mov
mov
mov
cli
sub
call
push
cmc
rcll
or
jle
in
xor
outsb
ret
fcoms
lods
mov
sub
cmpsb
and
xorw
ljmp
test
into
mov
sbb
gs
pop
push
adc
and
jmp
push
jae
jle
jle
push
lock
dec
adc
cs
hlt
fstpl
ljmp
idivl
fstl
mov
cli
inc
or
xchg
inc
xchg
push
lods
add
mov
and
sbb
sarl
out
sub
push
call
pushf
mov
and
aaa
test
sub
call
insb
mov
shlb
in
imul
cmp
jnp
xchg
into
int
and
and
in
inc
pop
sahf
push
lds
cmp
icebp
call
rol
push
sub
fstl
mov
dec
enter
adc
mov
or
mov
push
loope
divl
inc
mov
ficomps
push
repz
rcll
ds
pop
outsb
xchg
mov
lcall
adc
push
stc
lods
mov
push
daa
sbb
mov
push
cli
je
out
jbe
test
cmp
mov
scas
cmc
xor
pop
out
cltd
ret
mov
fidivl
subb
xchg
adc
xchg
lds
nop
jns
sbbb
fsubs
fwait
imul
and
hlt
jge
or
jl
sbb
adc
jbe
jmp
lret
cmp
and
mov
and
arpl
cmpsl
sbb
mov
into
je
test
mov
popa
push
mov
insb
xor
sahf
ljmp
mov
sbb
xor
lahf
rolb
jmp
lret
stc
test
add
fldl
xchg
bound
fwait
inc
mov
xchg
add
movl
jge
popa
hlt
add
data16
mov
or
sub
inc
pop
data16
cltd
cmp
pop
movsb
push
and
lods
or
push
jo
insl
jo
mov
out
testl
into
jno
inc
out
dec
aad
je
lods
xchg
scas
mov
ds
mov
mov
popf
cwtl
es
mov
addb
xchg
test
lret
sbb
out
inc
ss
jnp
mov
cld
ds
faddl
scas
in
cmp
mov
inc
ds
es
push
cmp
enter
pop
xchg
in
mov
ret
aam
mov
sarb
mov
enter
and
dec
ljmp
add
lar
adc
mov
and
out
push
lahf
imul
arpl
xchg
cld
aad
ret
sbb
sbb
sbb
sbb
dec
mov
cs
ret
je
es
xchg
xchg
stos
push
ja
inc
bound
jnp
int
pop
movsb
rorb
ret
sbb
or
cmc
mov
mov
sbb
cmpsb
ds
ds
cmp
cwtl
daa
xchg
push
jno
mov
or
mov
mov
enter
out
iret
jae
clc
imul
in
gs
sahf
repnz
inc
imul
cmpsb
test
test
in
into
out
push
jl
xor
or
cwtl
sti
dec
and
mov
lret
fisubs
jl
dec
mov
ret
sub
arpl
lret
inc
rorb
pushf
rcrb
imul
call
cld
fcompl
mov
sbb
test
xchg
cmp
hlt
sub
jge
pop
outsl
decb
mov
mov
and
mov
inc
mov
int3
loop
jmp
mov
outsl
pop
test
xchg
lods
gs
scas
xchg
jne
add
out
pop
push
outsb
ffree
inc
xchg
test
ret
out
xor
dec
in
fs
outsl
xor
ss
add
ret
orl
int3
push
insb
jb
jnp
fwait
dec
ss
out
sub
ss
mov
shll
mov
jo
fldenv
pop
je
sbb
gs
cmp
sub
stos
mov
pop
vhsubps
adc
imul
dec
and
push
and
mov
or
leave
mov
xchg
mov
mov
mov
mov
aas
ljmp
cmpsl
jecxz
sub
inc
and
push
or
adc
out
fsub
jnp
inc
lock
rolb
push
mov
scas
cmp
aam
ret
xor
mov
jle
addr16
ret
xchg
mov
jae
addb
nop
pop
loopne
addb
lret
into
cmc
and
xchg
movsl
inc
or
push
sarb
cmp
inc
xchg
in
pusha
nop
add
loope
insb
xchg
cmc
idivb
in
stos
cwtl
xchg
xor
int
xchg
enter
add
fcmovnbe
mov
lods
enter
idiv
scas
int
leave
add
xchg
xchg
dec
sbb
add
mov
add
jg
cmp
mov
xchg
lahf
ret
push
inc
ret
icebp
dec
std
filds
stos
adc
add
dec
xor
jecxz
dec
add
int
cltd
call
mov
adc
aad
cli
jae
dec
add
push
dec
repz
cwtl
test
jae
and
addr16
mov
inc
fcomp
dec
mov
push
mov
hlt
and
sbb
and
mov
test
jmp
pop
push
ds
mov
push
jle
jl
xchg
add
lahf
adc
shlb
pusha
inc
or
pusha
mov
mov
sub
mov
mov
sbb
lret
repnz
rep
cmc
push
sahf
sub
jmp
mov
xor
cmpsl
lcall
shrl
lods
divb
add
sbb
pop
xchg
cmc
jmp
mov
negl
mov
cmc
mov
fidivrl
mov
add
xchg
fidivrs
cmp
adc
and
aam
stos
fadds
add
daa
gs
in
and
pop
pop
mov
cmpsb
clc
lock
mov
les
imul
sbb
xchg
into
mov
call
mov
test
or
ret
ficomps
pop
pop
ret
cmc
mov
xor
xor
daa
dec
lret
push
and
mov
test
enter
ss
mov
pop
scas
cmc
lret
fs
mov
add
jg
ja
in
xor
popf
fiaddl
pop
add
js
cld
jge
iret
fneni(8087
add
pop
inc
movsb
and
lock
mov
xchg
jg
mov
out
jae
mov
mov
add
das
dec
mov
mov
outsl
mov
stos
outsl
push
insl
xor
dec
scas
jae
sub
pop
and
fidivrs
js
xor
push
les
in
inc
jns
push
fs
mov
loop
mov
dec
aaa
mov
push
movsb
jo
mov
or
movsl
pop
inc
int
sub
xchg
cmp
or
xchg
enter
add
push
xchg
sti
push
xchg
cmp
mov
rcrb
fists
dec
pop
sbb
pusha
out
fdivr
aas
addr16
sbb
test
cmp
imul
pusha
int
inc
adc
cs
xor
ljmp
pop
dec
jns
arpl
push
aam
cmp
fdivl
fidivrl
es
pop
xor
jo
xchg
mov
and
xchg
insl
inc
mov
popf
mov
pop
mov
xchg
ds
adc
cltd
rorl
mov
cmp
cmp
ja
cmc
mov
subb
push
int
dec
mov
in
mov
lods
adc
push
and
inc
jne
mov
daa
xor
fsubs
test
pop
pop
push
sub
stc
fsubp
mov
rolb
shufps
xor
aam
inc
cmc
cli
push
xchg
push
fwait
cli
daa
rcll
xlat
stos
lock
cmpl
mov
cltd
pop
mov
stos
comiss
xor
ljmp
cmp
js
daa
push
push
add
cld
push
and
mov
negl
jae
sbb
xor
movsl
xor
insb
imul
das
pop
idivl
cli
ja,pn
fidivrl
sbb
sbbl
mov
in
xchg
divb
xchg
cli
les
nop
cli
add
dec
das
dec
or
mov
jbe
dec
cmpl
js
cmp
scas
insb
pop
cmpl
sub
cli
fmul
je
xchg
iret
mov
fyl2xp1
pop
icebp
push
mov
clc
retw
add
dec
or
jae
or
subb
jb
add
aas
rcrb
and
clc
sub
mov
int3
outsb
and
subl
jp
push
xchg
into
pop
xchg
repnz
imul
icebp
xor
mov
in
mov
aam
in
cmp
inc
adc
ss
insb
into
fstpt
shr
or
bound
sahf
jp
arpl
inc
ds
mov
fadd
xchg
pop
push
cmp
push
movsb
jp
insb
ss
mov
vmovhps
mov
mov
dec
cmp
jmp
sbb
xor
daa
add
leave
mov
enter
inc
adc
ret
dec
cmp
inc
in
loope
inc
data16
push
stc
idiv
orl
gs
and
cmp
pushf
nop
jge
push
cltd
std
push
adcb
js,pt
aas
out
fnstsw
or
repz
shrb
cli
imul
out
xchg
sbb
mov
inc
je
aaa
das
lods
int
dec
jns
jae
js
outsl
jge
or
jmp
inc
ljmp
sbb
ja
jns
and
jge
aad
in
adc
loope
mov
out
ds
nop
outsl
cmp
jb
xor
add
icebp
mov
cwtl
leave
stos
mov
lds
leave
scas
int
push
xchg
or
dec
fsubr
jne
mov
clc
and
imul
add
inc
push
sub
popf
iret
fs
mov
aam
leave
dec
inc
mov
dec
cmpsl
adcl
sub
or
sub
fiadds
aad
jo
sub
inc
sbb
ror
scas
sti
daa
shr
sbb
add
icebp
and
lcall
mov
pushf
inc
scas
fs
ret
clc
jg
mov
cmpsb
loopne
push
sub
lea
jp
shll
inc
shrl
jnp
push
mov
pop
movsl
test
mov
mov
imul
ret
cmpb
pop
or
insb
ss
push
push
sbb
dec
jmp
out
xchg
ror
sar
adc
rcrb
movsl
mov
inc
push
lret
mov
scas
pop
mov
lock
mov
inc
push
mov
fwait
jp
push
inc
xor
mov
ror
loop
jecxz
mov
cmp
mov
add
xchg
dec
iret
cmp
mov
fwait
imul
inc
lret
int3
aaa
sbb
sub
cmp
je
testb
flds
loope
and
ja
filds
ret
xor
fs
fs
mov
icebp
ja
lret
sahf
bound
mov
pop
jo
rorl
push
inc
clc
inc
adc
xchg
cli
test
push
inc
gs
lcall
lea
push
loop
pop
fisubrl
imul
mov
mov
addr16
outsl
dec
ret
mov
cwtl
push
mov
insl
mov
jnp
test
inc
ljmp
and
mov
ret
mov
mov
jnp
int3
xor
fwait
mov
push
push
inc
sbb
lods
jno
out
xchg
push
fisubs
idivl
cmp
jno
popf
jg
dec
in
ja
and
inc
ja
ja
mov
mov
xor
je
inc
nop
gs
cmp
icebp
or
pop
out
adc
scas
outsb
jmp
mov
push
fidivs
xchg
nop
sub
hlt
mov
bound
adc
mov
mov
mov
addb
xor
loop
test
jae
repnz
jo
pop
inc
stos
or
aaa
lahf
xlat
cmp
and
mov
fsubl
inc
push
jnp
jmp
cli
add
mov
imul
inc
lods
hlt
mov
pushf
mov
ljmp
andb
insb
sbb
push
xchg
pop
int3
fwait
jle
push
repnz
mov
sbb
xchg
mov
scas
loope
and
addb
setl
call
inc
push
adc
mov
nop
push
dec
mov
rolb
adc
mov
mov
sub
iret
pop
and
lahf
jo
inc
jbe
andl
jle
lret
and
push
outsl
inc
loope
mov
xorb
dec
scas
inc
mov
lea
sbb
leave
add
fisubrl
inc
and
or
sbb
ljmp
add
int3
repz
mov
cwtl
mov
or
xor
in
jge
aam
cmp
sub
pop
push
imul
dec
ret
loopne
jo
ds
pop
in
pop
ja
inc
mov
jo
cmp
shll
push
cmp
add
lods
loope
in
inc
mov
out
jne
push
aam
mov
sahf
cld
mov
das
fisubs
cmp
cmp
cmc
push
hlt
sbb
mov
aas
push
dec
jo
adc
imul
pop
lea
fwait
sbb
movsb
pop
mov
lock
std
jmp
scas
pusha
ds
popa
ss
cmp
out
pop
xchg
sub
or
in
dec
cmp
jo
arpl
jmp
lcall
sbb
inc
or
inc
cmp
push
mov
mov
pusha
clc
clc
popf
cmp
add
andl
dec
inc
movsb
mov
addr16
les
xchg
faddl
mov
aas
push
push
popf
lods
test
add
mov
mov
incb
adc
dec
jnp
sarl
adc
pop
xor
fwait
xorl
jb
ds
fcoml
dec
xor
sbb
mov
ret
adc
scas
into
push
or
filds
pusha
dec
je
cs
mov
ljmp
and
fsubr
insl
mov
outsb
pusha
popa
loope
jbe
and
adc
xchg
push
lock
pop
or
pusha
pushl
sti
dec
cmp
pop
loop
add
rcrb
inc
inc
mov
cmp
mov
rcpps
sub
fwait
jb
xor
sbb
into
cld
xor
adc
lds
outsl
push
or
adc
cltd
repz
adc
push
das
mov
jge
loop
cmp
into
aam
out
xchg
and
movsl
jecxz
lret
hlt
scas
add
enter
push
ss
ds
dec
cmp
adc
sub
pop
sub
leave
sbb
daa
cmp
add
xor
out
popa
rcrl
lea
ret
mov
or
dec
adc
push
xorb
notl
ss
lret
add
jnp
mov
and
xor
cmp
cld
mov
pop
pop
mov
mov
mov
pop
mov
jmp
mov
xchg
mov
adc
addr16
icebp
es
sub
cmpsl
mov
dec
bound
pusha
int3
int
rcrb
add
xor
adc
outsl
loope
scas
cwtl
dec
fsubrs
xchg
add
lods
add
les
mov
mov
repnz
out
pop
scas
adc
pop
popf
and
push
adc
into
enter
dec
mov
cmpsb
or
xorb
outsl
cmpsb
mov
popa
fucomi
and
adc
mov
lds
scas
cltd
test
pop
push
ljmp
and
push
into
divl
cli
pop
jle
mov
add
movsl
xor
das
mov
push
ror
jnp
into
clc
mov
push
and
sub
add
lock
jle
mov
mov
xchg
jo
xchg
dec
cmpsb
nop
sbb
test
movsl
fisttpl
and
bound
push
mov
loop
fucomi
aad
mov
sub
mov
ljmp
push
jle
dec
cmc
icebp
sub
dec
sub
in
xchg
call
or
jb
inc
sub
pushf
ret
adc
jmp
sbb
mov
jnp
adc
ljmp
dec
xchg
xlat
mov
imul
xor
popa
lret
cmp
outsb
daa
xor
adc
pusha
imul
dec
jae
pop
add
add
jle
leave
sub
inc
push
ljmp
sub
lods
iret
dec
dec
lcall
jecxz
das
pop
test
jg
je
fs
jg
or
xorl
add
or
add
xchg
and
sub
jno
gs
into
jae
inc
inc
jbe
icebp
inc
xor
mov
scas
pop
gs
xor
std
and
test
pop
dec
es
pop
pop
pop
or
jns
jmp
xchg
add
mov
mov
dec
jmp
mov
mov
jnp
icebp
gs
xor
jmp
cmp
lods
test
repnz
dec
in
inc
movsb
insb
sbb
jno
mov
mov
cwtl
sbb
or
lret
add
out
pop
dec
bound
jle
imul
and
lahf
push
inc
jae
es
cs
das
js
mov
xrelease
mov
movsb
cmp
test
and
rcrb
mov
pop
fwait
mov
jl
nop
push
fcmovnbe
push
lahf
lcall
sub
leave
push
lret
repnz
test
xor
mov
lea
in
cmpsb
ss
dec
imul
mov
nop
xchg
cmp
outsl
nop
add
push
xchg
and
pop
imul
cmpsl
pusha
iretw
or
xlat
popf
mov
outsb
imul
add
gs
in
fwait
inc
shrl
int3
sahf
lods
in
shrb
mov
ret
in
cli
aad
xchg
mov
xchg
dec
add
bound
call
hlt
mov
sub
fisubs
pop
xchg
jecxz
xor
mov
lods
cmc
sbb
rcl
test
mov
pop
or
jecxz
mov
xor
loop
cmp
ljmp
mov
leave
iret
push
xlat
push
insb
fdiv
movsb
add
in
mov
pop
push
cmp
test
movsl
leave
cwtl
push
inc
repnz
sub
outsl
test
out
fdivs
enter
in
push
fwait
mov
jl
mov
pop
subl
jns
mov
and
cmc
aam
test
cmp
dec
insl
insl
arpl
and
add
sbb
push
sahf
rcll
pop
hlt
mov
imul
cmp
fsubr
frstor
pop
adc
pop
xchg
xchg
insl
adc
pop
arpl
fimull
popf
sbb
outsl
or
fdivrs
or
data16
loope
and
call
std
sbb
inc
mov
into
inc
cmp
fidivl
out
and
jmp
and
or
add
dec
inc
push
int3
das
jnp
rorb
int3
cmc
adc
icebp
fisttpll
je
push
sub
mov
cmpb
xchg
mov
cli
mov
mov
and
aaa
sub
stos
sub
push
int3
sub
dec
jae
inc
sbb
and
pusha
orl
testb
ds
aad
mov
in
push
dec
push
push
mull
inc
loope
xchg
add
mov
push
dec
hlt
xchg
outsb
test
and
ljmp
repnz
jo
arpl
pop
out
adc
dec
jg
sbb
cli
mov
sbb
fcomip
leave
add
insb
adc
xchg
daa
fdivl
sub
add
mov
divb
jecxz
clc
shl
shl
pushf
ss
fists
cmc
pop
sti
mov
jl
fnstsw
rcll
loopne
mov
pop
fs
adc
sti
movsb
fwait
xchg
les
arpl
orl
xchg
je
add
int
dec
jl
xchg
inc
and
adc
push
outsl
insb
sbb
push
sar
test
je
fbstp
lcall
cmp
dec
mov
pop
mov
and
pusha
rcrb
aaa
lock
mov
inc
push
or
sbb
aam
xor
mov
mov
in
enter
xor
mov
push
cs
std
sub
test
into
sub
and
pop
pop
jmp
out
ret
outsl
xchg
js
push
mov
or
lcall
pop
sahf
add
test
dec
sti
and
pop
xor
pusha
cmp
sbb
sti
mov
loopne
or
dec
sbb
stos
or
imul
fists
pop
mov
test
cmpsb
stos
andb
sub
mov
fucomi
lcall
aam
pop
push
iret
lods
out
inc
jecxz
mov
sub
enter
cld
test
sbbb
andb
adc
test
loope
out
jp
outsl
call
neg
pop
dec
or
xor
shrl
ljmp
lahf
or
xor
fsubrs
mov
cmp
cmp
sbb
dec
xor
data16
cmp
ss
mov
je
sub
adc
fisubrl
cld
lds
das
lcall
dec
std
push
cltd
aad
xchg
inc
mov
ja
cmp
popa
addl
imul
cmp
and
mov
mov
jno
jno
xchg
add
xchg
mov
push
xchg
ret
inc
mov
mov
les
lds
dec
push
push
cltd
nop
das
fs
icebp
dec
adc
loope
loop
arpl
insl
adc
sub
aad
es
inc
iret
xchg
fadds
fsubrl
push
pop
test
jl
cld
jno
insl
movsb
sub
sub
lret
daa
push
popa
pop
inc
lock
sbb
rcl
mov
push
pop
xor
pop
rclb
insb
mov
mov
mov
pop
fsubrl
sub
sbb
test
call
xor
das
outsb
and
cmp
xlat
lds
repz
das
cmpsl
fs
xor
jbe,pt
daa
fcoms
icebp
dec
lock
mov
lea
lods
mov
xchg
jo
hlt
jnp
cmp
test
js
sbbl
xor
mov
lea
push
gs
xor
js
inc
pusha
or
popa
jecxz
sbb
push
or
fs
xchg
ficoms
scas
movsl
je
jns
extrq
fcomi
mov
inc
scas
fldt
sbb
and
push
and
sub
ror
jae
jns
aas
lret
ss
and
in
pop
mov
xchg
adc
xchg
jbe
js
fadds
je
pusha
aas
adc
sbb
out
dec
push
cmp
cli
scas
gs
cltd
lods
add
xchg
inc
adc
shr
paddsw
jmp
stc
and
push
dec
ds
xchg
insl
mov
jecxz
gs
std
loop
push
idivl
jno
ret
icebp
andb
add
repz
add
imul
or
jl
cmp
xchg
int
rcll
outsb
in
mov
out
dec
jg
out
dec
inc
add
jns
test
xor
dec
add
pop
dec
aas
leave
cli
mov
sbb
adc
mov
add
pop
cmp
jae
stc
mov
je
fldl
add
out
xor
mov
into
cwtl
hlt
xchg
sti
mov
inc
cmp
stc
pop
xlat
dec
lahf
popf
pusha
xor
bound
pop
ss
push
and
movsb
mov
pop
aaa
push
ret
das
inc
ret
cwtl
fwait
lcall
ljmp
lahf
dec
dec
cmp
fwait
aam
movl
jo
imul
inc
ja
fmul
adc
into
jp
add
into
std
imul
mov
xchg
mov
out
test
mov
lock
cmp
pop
push
xor
shrl
out
mov
jmp
cmp
arpl
push
icebp
pop
jae
cli
jbe
js
test
fcoml
push
push
stos
out
sbb
test
jl
push
aaa
subl
cmp
fbld
cmpsb
sub
outsl
int3
mov
cmc
sub
loop
push
sbbl
and
mov
sub
arpl
mov
scas
outsb
test
inc
xor
cmpsl
pop
addr16
aam
lahf
mov
sbb
and
push
mov
lods
ret
fcomps
popa
in
push
into
sar
push
inc
jnp
pop
cmp
cmp
pop
shlb
maxps
cs
pop
stos
xlat
rcrb
cli
add
push
xchg
jge,pt
mov
sahf
pop
aaa
cltd
cli
leave
fistpl
and
in
leave
stos
add
iret
inc
insb
jb
dec
mov
imul
xchg
pusha
aam
out
sub
mov
mov
mov
repz
stos
mov
es
fs
xchg
xchg
nop
sti
rorb
insl
mov
movsb
mov
aas
inc
fisttpll
std
xor
fnstenv
xor
int3
loop
lds
cmp
aad
cmpb
and
cmc
inc
xor
sbb
loop
sub
lret
scas
aas
movsb
iret
fists
lea
inc
xchg
jo
or
jle
adc
sbb
mov
hlt
add
xchg
int3
gs
jge
pop
icebp
mov
cmp
test
xchg
xchg
bound
je
sub
pop
and
mov
fcompl
push
out
mov
mov
inc
in
bound
jge
cmpsl
jecxz
mov
push
xchg
out
or
or
push
dec
stc
mov
sbb
fadd
mov
push
xor
in
outsb
lcall
nop
push
loop
push
cltd
adc
jge
xor
lret
push
xor
push
mov
xor
bound
sarb
sub
pop
inc
insb
mov
leave
in
pop
jmp
and
dec
mov
cmc
inc
adc
mov
ds
pop
pop
dec
pop
dec
adc
ljmp
test
adc
adc
sub
negb
sbb
cmc
mov
mov
mov
mov
and
out
or
xchg
add
add
jg
or
cs
xlat
fimull
lcall
insl
xor
fstpl
fdivs
pop
cwtl
fnstenv
mov
push
scas
pusha
lahf
sub
add
imul
nop
pusha
nop
or
xchg
jae
jno
xor
sti
adcb
inc
insb
mov
sub
sahf
and
fwait
fs
mov
mov
push
stos
fadd
mov
add
push
adc
cmp
ret
jbe
pop
mov
xor
sbb
in
adc
cwtl
xor
sarb
and
into
imul
adc
xchg
leave
pusha
inc
out
inc
or
loopne
xor
fimull
pop
data16
jmp
enter
xchg
je
cmp
mov
lea
pop
mov
sub
mov
int3
repnz
clc
sub
dec
jge
pop
or
cmp
lret
mov
cmp
add
out
mov
inc
mov
in
mov
lock
pop
jno
pop
mov
pop
cli
jbe
push
add
shrb
xchg
mov
inc
popf
pop
adc
or
mov
adcb
xchg
popa
sbb
jb
add
inc
mov
and
sub
insl
cmp
outsl
cmpsb
xor
filds
hlt
dec
cmp
jge
icebp
xor
lcall
add
mov
jl
test
dec
popl
addb
sbb
bnd
push
jno
xor
push
xchg
ret
adc
fmuls
pushf
mov
add
setnp
mov
popa
jg
lcall
jp
push
into
xchg
pop
test
loopne
mov
test
js
sahf
mov
sub
mov
and
mov
popf
jmp
movl
add
fwait
push
mov
shr
mov
filds
iret
test
out
je
add
and
les
adc
adc
xchg
fs
clc
xor
clc
jb
test
xchg
pusha
cmp
pop
add
cmp
incb
lea
jl
fdivs
jge
cs
inc
mov
ljmp
mov
or
mov
adc
sbb
sbb
shll
jle
sub
dec
or
adc
jge
stc
pop
xor
test
mov
mov
stos
call
vpaddb
repnz
add
out
fisttpll
loopne
xchg
jne
sub
pop
movsl
sbb
mov
add
loopne
mov
jg
addl
mov
repnz
orb
sbb
mov
adc
in
sbb
add
leave
cmp
ret
mov
cmc
push
xchg
dec
adc
imulb
loop
mov
popf
rol
cwtl
pop
popf
jmp
or
cmc
jb
cmp
je
fidivrs
enter
push
fisttpll
rorb
imull
and
scas
sub
and
inc
roll
insl
pop
push
xor
dec
xlat
scas
dec
and
sub
loopne
xchg
ficoml
mov
inc
cmp
push
outsl
pop
jb
test
ljmp
and
fsubrl
mov
lock
adc
fs
loop
aam
test
push
das
dec
or
daa
mov
mov
pop
aad
cs
and
out
or
mov
sub
lahf
add
push
repz
pop
test
cli
leave
mov
mov
cmp
push
sbb
cmp
xor
rcll
cmp
lds
add
int
add
cmp
mov
mov
cmp
xchg
jmp
ja
sub
and
pop
and
cmp
loope
aad
pushf
mov
push
adc
sbb
cmp
int3
dec
cmp
push
daa
bound
movsb
and
in
dec
inc
sbb
add
stc
fidivs
andl
cld
jne
jbe
filds
sti
jns
xchg
mov
loop
mov
cmp
pop
dec
pop
arpl
shrl
adc
xchg
xchg
cmp
test
jae
jb
nop
repnz
pop
jbe
imul
cmpsb
xor
pop
mov
stos
shll
pop
sbb
clc
mov
sub
rclb
jb
fsubs
and
sbb
fistpl
sub
sub
push
mov
inc
fdivs
cmp
fbld
jb
adc
call
lret
mov
sub
cmp
jg
or
int3
push
movb
pop
popa
iret
enter
and
adc
jge
add
lock
dec
ljmp
cli
imul
xchg
sub
out
ljmp
or
pop
and
xor
add
mov
lahf
popf
mov
orl
xlat
shll
mov
in
dec
mov
xor
xchg
insl
jle
stos
sbb
cmp
loop
rep
jb
sbb
jle
and
insb
cli
loopne
inc
cmpsl
cmp
imul
pop
pop
jmp
std
sub
cmp
ss
ds
xor
sbb
push
xlat
sbb
test
mov
and
xor
sbb
sub
gs
arpl
jmp
jnp
adc
xchg
dec
stos
xchg
cmp
dec
sub
sub
mov
push
loop
add
ficoml
sub
push
and
ljmp
xor
ret
sbb
pop
cmc
shr
mov
sbb
outsl
repnz
scas
subl
dec
es
cmp
cmp
js
pushf
shll
pop
int3
mov
push
adc
test
in
add
sbb
rclb
jnp
divl
mov
inc
sar
dec
mov
push
int
mov
mov
imul
pop
cli
jmp
cmc
mov
xor
das
sub
or
addr16
mov
push
lock
xchg
das
push
push
xor
lea
sbb
or
cmp
mov
sbb
inc
or
pop
sub
push
cwtl
and
in
and
out
mov
and
mov
dec
shll
cmp
inc
sbb
ret
lcall
cld
mov
xchg
add
test
xor
mov
imul
out
push
call
and
jg
pop
clc
dec
push
push
inc
in
adc
pop
dec
sub
mov
adc
scas
imul
stos
jle
cli
cmpsb
popa
and
je
inc
loopne
and
mov
test
mov
xchg
inc
in
popf
pushf
rcrl
sub
pop
pop
pop
fbld
std
xor
stos
je
mov
adc
in
iret
dec
bnd
das
sbb
fisttpll
shll
adc
or
outsl
sbb
cli
lret
pop
lahf
mov
aad
loopne
mov
push
jmp
scas
pop
lahf
cmc
enter
cmpsb
xchg
dec
stos
and
or
stos
pop
in
stos
dec
pop
fwait
in
out
mov
jle
inc
mov
cmp
adc
xor
cli
aad
adc
push
lea
mov
movsl
sub
sub
out
mov
adc
xor
lcall
imul
mov
cmc
push
das
add
sbb
cmp
push
fildl
or
mov
add
jl
mov
push
cmpsb
sub
cli
or
popa
rcrl
aaa
decl
ss
rorl
adc
push
repz
dec
in
test
popa
mov
fistps
add
push
pop
lock
cmpsb
xchg
sti
inc
mov
cwtl
hlt
push
add
mov
in
xchg
push
xlat
scas
or
adc
adc
cmpsl
pop
stos
dec
test
cs
daa
and
push
mov
xorb
jno
arpl
dec
adc
push
int3
jno
adc
jns
pcmpeqd
mov
inc
popa
pop
nop
xor
mov
jge
push
addb
filds
mov
cmpsb
lock
adc
dec
cmp
shlb
jge
jge
mov
mov
pushf
das
testl
mov
mov
ret
data16
or
dec
arpl
insl
rorl
xchg
mov
mov
in
cmp
ja
push
js
pop
cmp
and
lret
cmp
xlat
sbb
mov
test
sub
in
xor
jp
gs
shll
jnp
sahf
xchg
out
test
push
sub
lea
mov
scas
jbe
insb
fwait
lock
sub
fisttpll
inc
fs
rorb
aas
stos
in
xchg
push
jl
shll
fisubrs
mov
pop
test
arpl
inc
aaa
add
pop
mov
rorl
stos
call
addr16
inc
jmp
dec
jl
dec
push
push
xchg
aad
clc
push
push
mov
sub
push
add
cmc
je
clc
ficoms
xchg
push
mov
movsb
in
lcall
cwtl
mov
pushf
sahf
dec
inc
test
jne
test
sbb
jmp
adc
mov
adc
sbb
addr16
test
dec
in
dec
adcl
and
rclb
xor
test
mov
cmp
push
push
jb
mov
in
xor
push
in
cmp
in
loope
adcl
ljmp
xor
je
cli
iret
scas
and
mov
push
fadds
ret
cmp
sub
daa
ds
fsubrs
aas
call
rorl
and
mov
insb
ljmp
iret
leave
dec
stos
test
sub
xchg
addr16
movsl
or
mov
add
jne
leave
inc
cmp
mov
inc
sahf
cmp
fxch
aam
pop
rcr
idiv
cmp
int3
xor
fwait
add
icebp
pop
mov
xchg
lret
shl
scas
das
inc
aaa
inc
push
fwait
repnz
adc
dec
jbe
push
ds
nopl
daa
clc
dec
or
cmp
sub
push
adc
add
push
cmp
dec
and
cmpsb
lea
ja
mov
in
arpl
repz
and
jg
xor
or
mov
arpl
mov
inc
test
ja
into
add
sub
fldcw
lcall
lds
and
mov
mov
sbb
fwait
movsl
mov
test
call
test
push
aam
loope
in
ja
xchg
loop
in
mov
movsb
cwtl
pop
filds
push
fs
xlat
dec
fnstsw
cmpsl
pop
int
xor
mov
cmpsb
jge
lret
dec
in
mov
loope
push
inc
cwtl
aaa
lods
push
mov
int3
add
or
push
cvtpi2ps
ftst
push
dec
cltd
ret
fisubl
and
cli
test
xchg
test
loopne
leave
mov
mov
das
jns
mov
inc
or
inc
pop
push
pop
fstl
or
push
push
inc
jge
leave
fstpt
rcrb
call
jge
outsb
inc
rcl
sbb
ret
jecxz
xor
push
in
mov
inc
in
sahf
and
jge
shlb
iret
push
adc
jbe
stc
push
cmc
pop
test
xchg
push
mov
notb
dec
jo
daa
mov
sbbl
fst
call
jl
mov
dec
addr16
imul
lods
push
adc
fsubl
jne
xor
or
es
pop
cld
adcb
xchg
popa
or
push
cltd
inc
push
loop
sahf
idiv
and
mov
fwait
cmpsl
and
fistpl
out
dec
hlt
out
dec
test
cld
test
push
xchg
scas
insb
jns
xchg
insl
int
jnp
mov
je
sbb
inc
adc
mov
mov
test
js
mov
ret
or
mov
lret
xlat
xchg
mov
out
out
in
jne
lods
sub
xlat
xor
sbb
dec
std
xchg
call
xor
push
push
stc
push
cmp
jp
mov
lret
ljmp
sti
fmull
fdivl
adc
cs
enter
inc
xchg
push
pop
pop
lds
push
push
stos
add
push
cmpsl
jp
je
pushf
push
cmp
xlat
faddp
outsb
fcoms
xchg
sub
and
mov
lret
aas
inc
xchg
sahf
cmp
cs
leave
stc
fsubrs
mov
sbb
call
inc
mov
push
cld
in
sbb
sub
push
cmove
push
ror
stos
stos
or
push
sti
mov
or
jecxz
les
dec
dec
shrl
xchg
test
sti
adc
addr16
imul
out
repnz
pop
cmp
mov
fists
mov
sub
pop
and
sub
cld
jecxz
and
mov
mov
mov
xchg
add
or
lods
bound
xchg
cwtl
push
int
shlb
jmp
repnz
js
mov
icebp
cmp
je
push
push
fs
or
neg
out
rcrb
sub
clc
add
pushl
mov
or
cmpsl
xchg
adc
stc
push
jmp
aad
push
mov
out
inc
pop
stos
aaa
jns
sub
xchg
jnp
xchg
add
out
push
fsubl
and
lahf
sbb
insb
push
data16
dec
aam
adc
negl
adc
int3
enter
sti
adc
xrelease
push
shll
sbb
cwtl
int3
ret
inc
shl
mov
adc
repnz
aaa
xchg
lock
xchg
scas
or
and
xor
sbb
mov
lods
mov
dec
iret
cmpsb
sub
in
lret
xchg
add
adc
mov
and
xchg
xor
or
add
pop
bound
gs
push
add
loop
pushf
fwait
in
scas
xchg
pop
sub
out
gs
cwtl
adc
sahf
mov
xchg
lods
cmpl
sarb
jg
sbb
ljmp
sbb
repz
inc
frstor
std
cmpsl
xor
adcb
js
aam
test
jns
mov
sub
aad
mov
sub
mov
mov
jle
dec
jns
jo
repz
sub
js
jb
push
sbb
push
test
mov
inc
gs
mov
rcr
xlat
cltd
fisttps
mov
repnz
outsb
mov
inc
cmp
xor
adc
cmp
repnz
or
shlb
lcall
enter
movsb
dec
fisttpll
aas
lds
cmpsb
popa
subb
push
and
sbb
in
fsubrl
xchg
packssdw
add
sub
push
mov
xor
xchg
xchg
inc
repz
cld
jno,pt
aaa
xor
pusha
push
inc
jo
sub
not
jnp
lods
cmp
outsl
sub
test
loop
and
and
mov
into
mov
cmpsb
lcall
fcoms
xor
dec
xchg
shlb
pop
cmp
lds
sub
test
shrl
loop
dec
mov
cmp
movsl
adc
push
xchg
sbb
cmpsb
mov
dec
cli
mov
hlt
stc
mov
or
scas
xor
xor
cmp
sbb
icebp
dec
pmaxsw
popf
test
mov
int3
pop
lods
mov
push
or
clc
pop
xchg
sbb
jnp
inc
xchg
pop
nop
nop
jno
jae
dec
shlb
sub
push
xchg
sbb
es
push
iret
sub
sahf
popf
jle
shl
lock
test
lea
mov
mov
add
xchg
fs
jecxz
in
add
pop
decb
clc
shl
rcrb
ljmp
inc
test
cmp
clc
aas
xor
mov
mov
in
fs
insl
mov
pinsrw
mov
fisubl
pop
in
inc
pop
aam
or
ljmp
adc
sbb
lret
mov
dec
add
rclb
xchg
ds
dec
and
orb
jecxz
lcall
push
inc
cmp
fmull
bound
dec
sub
dec
movsb
loope
ja,pt
pop
in
lods
mov
and
lds
std
repnz
jno
test
sbb
cltd
add
push
xor
sub
xor
and
jnp
xor
loope
outsl
cmp
into
pop
mov
mov
fbld
test
xor
push
push
lcall
jnp
test
pop
clc
push
sbb
test
lds
add
rcl
push
and
repz
and
jns
adcl
mov
sti
adc
inc
inc
cmpsb
gs
data16
lret
ljmp
mov
mov
xor
lock
and
add
dec
xor
rcrl
test
push
data16
mov
inc
inc
mov
xor
or
jecxz
imul
js
dec
push
leave
push
lock
mov
stc
stos
mov
cwtl
lahf
push
arpl
leave
adc
jecxz
mull
cld
insb
add
arpl
xchg
stc
push
or
jb
test
adcl
aad
xlat
aas
lahf
pusha
sub
scas
aas
nop
movsl
pop
rclb
jb
push
mov
ss
add
or
and
jl
pop
push
sub
jb
cmp
push
iret
int3
popf
std
in
call
xor
leave
inc
scas
xchg
mov
aas
xchg
test
sar
xor
dec
out
popa
cmp
dec
lods
inc
pop
xor
xchg
push
stc
ja
iret
xor
mull
mov
sub
xor
cmp
sti
cmp
mov
mov
or
outsl
movb
movsl
movl
into
stos
and
scas
aaa
lea
and
sbb
jp
dec
or
pop
ss
mov
jb
xor
add
inc
cmp
mov
mov
mov
pop
das
test
lock
addr16
fisttpl
cmpb
or
lahf
pop
in
repz
add
bound
mov
pop
loopne
inc
mov
adc
imul
cmp
mov
inc
xchg
roll
test
pushf
sbb
fidivs
pop
xchg
and
adc
inc
push
pop
fisttpll
bound
dec
leave
aaa
sahf
cli
push
and
xchg
shl
mov
aaa
mov
ret
lock
cmpsl
mov
inc
adc
sub
test
sti
xchg
pop
insl
push
stos
push
xor
sahf
fidivrl
pop
jnp
mov
xor
push
mov
or
insl
popf
push
lahf
xchg
or
mov
mov
and
insl
cs
push
lds
inc
mov
subl
fsubrs
pop
fnclex
pop
adc
jge
pushf
or
inc
lods
faddp
mov
cmp
idiv
push
mov
or
dec
xorb
adc
gs
in
or
mov
or
addr16
adc
sbb
sbb
cli
xor
cmp
xchg
fs
jge
in
and
adc
stos
adc
ret
sbb
icebp
in
sahf
jae
je
inc
je
movsb
mov
mov
mov
aad
push
leave
hlt
aam
jnp
fildll
xchg
fwait
cmpsl
ret
retw
test
addb
jno
int
pusha
push
pop
push
hlt
pusha
jl
jmp
sub
outsl
in
xchg
stc
mov
sub
add
scas
pop
divl
cmp
daa
jge
push
out
push
enter
push
movsb
xor
mov
scas
mov
data16
fmull
insl
jno
mov
imul
je
xchg
dec
scas
mov
mov
repz
inc
pop
mov
lret
push
jnp
ds
adc
push
ljmp
jl
mov
lahf
sub
cmp
dec
scas
subl
push
stc
icebp
jnp
dec
jno
stos
or
push
icebp
cmp
xchg
xchg
test
icebp
jle
adc
bound
pop
push
adc
ds
push
cmp
or
push
sub
add
fstpl
inc
pop
outsb
adc
in
stc
mov
push
icebp
stc
test
cld
xor
andb
or
and
dec
mov
insl
adcb
cmp
pop
pop
pop
cld
outsb
test
sub
jp
pop
lock
out
in
jnp
subl
call
fs
and
testb
loopne
mov
loop
lret
loopne
adc
sub
mov
stos
pop
pop
push
mov
fsubrl
dec
mov
aas
and
mov
inc
cli
xchg
xor
stc
mov
mov
dec
pop
push
test
cmpsl
addr16
lds
lds
mov
sub
lods
xchg
or
sbb
push
mov
andb
out
push
hlt
nop
insw
cwtl
push
das
fcom
sbb
hlt
push
fidivrs
mov
loopne
dec
in
leave
pop
dec
nop
xor
mov
aam
aaa
dec
cmpsl
push
push
std
test
lret
bsf
popw
mov
sbb
jb
adc
jmp
mov
pop
lahf
mov
fisttps
das
stos
hlt
mov
xchg
mov
adc
test
sbb
lods
or
mov
sbb
inc
xor
stc
dec
xor
xchg
cld
in
fucom
rorl
jp
fstpl
push
pop
adc
std
pop
outsl
es
test
xlat
out
imul
push
ja
ftst
mov
mov
sbb
daa
cmp
out
les
inc
pop
out
xorl
rorl
mov
adc
lahf
and
inc
mov
xor
icebp
data16
xchg
test
pushf
in
dec
pushw
flds
inc
push
inc
or
icebp
or
xor
test
or
xchg
rcrl
sahf
jo
mov
jp
pop
repz
mov
cli
jmp
test
ja
loope
xchg
mov
jecxz
cmpl
mov
in
jne
sarb
push
divl
lret
lret
ret
xor
or
sti
sub
mov
sarl
dec
cmp
xor
and
outsl
es
notb
xor
cmp
mov
sbb
push
rcrb
aam
nop
repz
adc
ret
shrl
in
xchg
pop
shrb
aas
lcall
mov
clc
lret
hlt
inc
addr16
pushf
push
out
mov
xor
movsl
and
mov
xor
mov
ja
int3
out
aaa
sbb
add
ret
test
test
and
lods
fs
pushf
jns
dec
sub
dec
and
mov
mov
sub
rcr
pop
pop
and
add
mov
fstps
dec
inc
aas
mov
mov
mov
cmc
pop
jecxz
mov
push
xor
and
loopne
dec
test
stc
dec
aas
or
mov
xchg
fdivl
inc
inc
push
lock
adc
xlat
mov
push
pop
jmp
imul
mov
idivl
inc
inc
cli
pushl
jmp
mov
sub
ljmp
mov
cwtl
jmp
cli
or
pop
mov
mov
sub
arpl
aaa
sbb
out
loopne
inc
js
imul
mov
jg
mov
xchg
repnz
adc
dec
cld
int3
ja
and
cmp
inc
xor
and
or
mov
cmp
or
cmp
dec
push
repz
movsl
cmpsb
cmp
sub
jp
test
pop
sub
fnstcw
inc
das
pop
addl
lods
cld
xorl
jmp
push
mov
adc
mov
lret
push
xor
arpl
lods
enter
inc
scas
je
lahf
int3
das
test
add
and
push
jno
sbb
mov
cmp
jmp
mov
jno
adcl
pop
xlat
sbb
or
mov
dec
inc
jo
addr16
in
popf
push
push
pop
push
adc
cmpl
rolb
outsb
loope
push
xchg
push
in
sub
dec
mov
xchg
cmp
nop
mov
xor
shll
mov
push
dec
enter
aas
push
leave
rorb
mov
and
pop
jbe
push
xchg
and
and
sbb
cs
out
sbb
push
cmc
mov
xchg
int3
bnd
and
add
outsl
add
adc
pop
push
filds
arpl
in
int
cmpsl
add
pop
sub
icebp
imul
and
stos
xchg
jne
negb
sbb
ret
push
sahf
outsl
dec
rclb
loope
xlat
cmp
pop
pop
movsl
sub
test
out
in
inc
ret
ficompl
nop
scas
gs
int
mov
cltd
adc
sub
jae
in
or
ja
push
add
cmp
pushf
jmp
push
add
sub
push
push
in
or
or
cwtl
jmp
jae
rclb
dec
jb
and
call
cs
sahf
dec
ljmp
pop
lcall
test
jnp
push
push
insl
xchg
mov
sbb
dec
cmp
mov
mov
test
jo
sahf
mov
ss
fldcw
mov
sbb
jp
mov
xor
out
pusha
cmpsl
cwtl
inc
fnstsw
scas
or
push
lret
mov
test
add
push
daa
xor
jae
flds
iret
jmp
mov
out
sbb
push
dec
push
lret
mov
push
inc
mov
xor
cli
adc
int3
fprem1
xchg
add
jle
push
imul
mov
aad
lcall
jl
mov
aaa
lock
xor
jmp
into
mov
mov
cmp
andb
fdivl
bnd
movsl
push
daa
leave
in
ror
inc
loope
sub
out
jp
lahf
jns
cmp
movsl
push
subl
aad
mov
pop
or
sbbb
or
cmp
xchg
jmp
or
mov
jb
pop
rorl
insb
or
ss
jg
pop
ficoms
andb
jae
ret
push
aas
lahf
sub
incb
add
pushf
out
inc
mov
push
add
inc
push
and
xchg
sub
movsl
into
fstpt
mov
push
iret
mov
es
divb
inc
arpl
add
sbb
out
iret
hlt
sahf
push
imul
fwait
dec
inc
out
mov
mov
xor
cmp
push
std
cmc
inc
pop
js
aas
mov
or
cld
outsl
cmp
sbb
popf
and
outsb
in
or
repz
jecxz
lcall
inc
inc
fsubrs
pop
pushf
inc
jge
jb
mov
sbb
test
mov
cld
addl
jnp
xor
xor
jno
inc
mov
fs
ja
and
pop
jo
imul
pop
repz
push
mov
or
jl
fldz
fldcw
cmpsl
sahf
sub
xor
dec
pop
ja
mov
add
sbb
movsl
cmp
and
loopne
mov
jo
adc
cli
cltd
es
insl
leave
jbe
push
lret
sbb
fcomps
movsb
fwait
push
std
lea
sbb
add
push
imul
outsl
cmpsb
xchg
stc
inc
shlb
sbb
fnstcw
push
mov
mov
daa
cmp
pusha
push
imul
lds
add
ds
es
arpl
mov
jno
bound
daa
adc
jo
mov
jmp
and
xlat
mov
inc
cmc
jno
lahf
pop
mov
jb
stos
and
fistl
call
cli
mov
roll
incl
inc
fs
jno
pop
push
xchg
xor
test
or
and
mov
aaa
repz
adc
xchg
stos
insb
sub
cld
enter
insl
insb
add
cs
fnstenv
dec
adc
les
test
xchg
dec
in
sub
pop
scas
lds
adc
rorl
mov
lret
lret
stc
xor
cwtl
out
pop
jns
and
mov
fs
push
andl
adc
jg
cmp
hlt
xorl
inc
mov
xor
int3
adc
sbb
mov
dec
xchg
rolb
xlat
or
ljmp
decl
rclb
imul
cld
hlt
insl
clc
jns
fcmovu
stos
repz
andl
add
xlat
test
xor
mov
mov
stos
or
stc
adc
je
and
push
adc
pop
imull
cld
mov
inc
outsl
and
cmpsb
and
mov
pop
mov
jmp
loop
and
adc
test
aas
out
dec
arpl
ret
inc
or
or
mov
mov
or
pop
inc
movsb
and
sub
cmp
addr16
add
dec
mov
mov
xchg
aam
cmp
sub
enter
push
lods
adc
cli
int3
dec
cs
movsl
xchg
test
lods
outsb
sbb
repz
mov
into
out
jo
inc
cmc
xchg
test
sub
or
clc
cmpsb
test
add
clc
push
shlb
arpl
xchg
and
push
inc
sub
sbb
cmp
movsl
lea
push
pop
loopne
xchg
add
dec
arpl
or
mov
das
insb
inc
mov
sbb
imul
ss
sub
sti
mov
push
cmpsb
lds
outsl
fistl
ljmp
cmp
mov
cmp
add
mov
dec
push
ss
hlt
xchg
push
inc
and
inc
pop
inc
push
add
mov
adc
ret
push
fidivs
xchg
push
negl
push
stos
mov
ds
mov
push
push
imul
or
orl
xor
dec
jbe
inc
xor
aad
xchg
dec
stc
addr16
icebp
cmc
shlb
call
cld
jnp
push
int
movsl
and
cltd
sahf
mov
divb
outsb
and
fisttps
sbb
stos
adc
pop
sahf
sbb
sbb
jne
mov
jno
lods
jecxz
push
push
xchg
inc
sub
movsb
shrb
jo
cmp
adcb
pop
icebp
cmpsl
push
into
pop
rol
lcall
pop
ljmp
fistpl
jae
outsl
fiadds
movsl
sbb
fdivs
stos
mov
cltd
sbb
mov
push
mov
dec
enter
cmc
push
test
leave
add
popa
icebp
fwait
and
leave
imul
cmp
or
mov
or
and
outsl
inc
ret
jns
sub
mov
test
mov
test
mov
push
jmp
sub
and
mov
sbb
stos
int
mov
roll
sub
out
jl
cmp
mov
out
loope
mov
cmpsl
push
pavgb
inc
jae
roll
fbstp
fistpl
scas
mov
mov
insl
jb
jno
push
lret
mov
sbb
xlat
fsts
pop
mov
fisttpl
push
cmpl
jo
add
sti
inc
hlt
sub
icebp
xchg
enter
clc
push
shlb
cmpsl
mov
outsb
inc
iretw
pop
aas
fisubrl
iret
ret
mov
jbe
lret
mov
sbb
sti
aam
mov
repz
sbb
mov
icebp
and
imul
xchg
outsl
cmp
and
mov
pop
push
icebp
push
and
lods
sub
daa
loope
iret
loopne
lods
subl
and
mov
ret
xchg
add
sti
mov
int
pop
jge
pop
jb
mov
loope
lahf
jmp
stos
xchg
mov
lods
xor
add
dec
int3
push
gs
mov
fistps
sarl
sub
push
mov
xor
test
aad
sub
sbb
xor
mov
xor
push
lods
insb
movsl
cmpsb
inc
call
je
shrl
pop
sbb
stc
jge
test
xchg
ss
dec
ljmp
mov
sub
dec
mov
add
mov
add
sahf
fisttpll
pushf
popa
pop
mov
shr
mov
mov
shlb
popa
dec
idivb
insl
add
mov
mov
outsb
pop
repz
jmp
or
gs
push
adc
call
lea
imull
xor
adc
mov
adc
test
loope
mov
push
lcall
or
repnz
or
cmp
shll
aas
mov
std
daa
and
pop
pop
imul
mov
addr16
nop
push
jb
scas
push
cmpsl
rcrb
fildll
pop
incl
popa
mov
lcall
push
ficomps
mov
and
popf
dec
jle
dec
mov
adc
in
in
dec
cld
repz
inc
mov
stc
test
mov
xor
adc
fyl2xp1
and
insb
jb
mov
aaa
mov
nop
in
popa
jg
pop
lods
mov
adc
or
mov
bound
cmp
lds
stc
stos
fwait
inc
adc
dec
inc
pop
push
sub
sti
xchg
mov
mov
fs
aad
mov
and
popl
test
lahf
ja
adc
inc
xchg
mov
aaa
out
cmpsb
mov
cs
fwait
je
pop
je
mov
insb
sub
rorl
and
call
sbb
enter
dec
clc
andl
sbb
cli
bound
inc
xchg
and
test
jne
xchg
test
dec
inc
arpl
mov
pusha
dec
shll
and
push
lods
ret
cmp
pop
int3
mov
fcom
in
lret
mov
cwtl
adc
aaa
xor
jge
addr16
pop
mov
inc
mov
mov
gs
xor
xor
adc
xor
cmp
jecxz
cwtl
pop
adc
xchg
jns
push
pop
xlat
add
stos
cli
ljmp
out
mov
sbb
push
rol
movsb
add
sbb
cs
loope
mov
fs
shlb
and
outsl
jge
cmpsl
sahf
pop
andb
aaa
xor
adc
ss
pop
jae
outsb
pushf
push
jno
sub
arpl
jae
imul
mov
push
jl
cmp
fisttpll
or
cld
imul
push
xchg
adc
mov
jb
divb
loop
in
jge
fnstcw
push
push
ds
or
iret
jnp
mov
add
add
cmc
inc
xchg
shl
mov
push
sahf
sbb
dec
xchg
push
inc
xor
outsl
mov
std
xchg
push
and
rcrb
push
xchg
aas
xor
rorl
mov
sub
cltd
mov
or
inc
push
rcrl
jbe
jge
in
lcall
and
sbb
cmpsb
cld
xor
gs
clc
insl
mov
test
repnz
push
mov
filds
aam
sarl
xor
clc
push
call
xchg
fisubs
ja
out
jp
mov
jg
fucomip
mov
sub
push
divl
outsb
cs
inc
std
mov
pop
inc
dec
cmp
call
mov
inc
in
pop
xor
imul
pop
jmp
inc
mov
outsl
and
out
mov
bsf
mov
lock
ds
adc
sbb
xorl
stos
mov
jp
mov
ljmp
push
inc
scas
clc
jb
mov
mov
jno
ret
mov
cmpsl
lea
xadd
inc
sbb
fdivrs
lret
outsb
jbe
mov
sti
pop
loop
mov
cmpb
push
adc
pop
cltd
or
jb
cmp
mov
mov
push
pop
arpl
ja
sti
enter
clc
ljmp
ss
mov
push
or
lahf
in
movsl
mov
imul
jge
in
inc
insl
cmp
push
lods
or
in
or
and
jg
ljmp
pop
cwtl
test
mov
and
sbb
fwait
xchg
jmp
rcrl
jno
add
lds
nop
inc
xchg
in
je
mov
pextrw
and
cmp
enter
or
out
es
shll
lahf
outsl
jmp
mov
lcall
insl
fsubl
jecxz
inc
insl
outsl
jnp
mov
or
sbb
sbb
jge
pop
fdivs
add
xchg
cmp
sbbl
jge
fdivl
lods
mov
mov
movsb
fsubr
jno
loopne
fcompl
inc
ljmp
mov
loopne
test
inc
xchg
into
add
jnp
cld
push
inc
into
aaa
lret
testb
xor
jae
cmp
daa
loopne
mov
xchg
jle
in
loop
cmpsb
jle
sub
idiv
mov
push
mov
xlat
dec
loope
je
aam
outsl
pop
jmp
jle
fdivrs
pop
push
mov
and
lods
in
mov
cltd
adc
movsl
iret
in
mov
jno
cwtl
jae
ret
cmp
scas
cmpsl
lret
sub
ret
push
sbb
ficoms
fcom
inc
xchg
sub
inc
and
adc
mov
mov
or
inc
cmpsb
mov
dec
xor
out
ja
lahf
fs
addr16
loopne
cmp
test
adc
jb
xor
mov
xor
xchg
dec
inc
pop
stos
sub
les
adc
iret
stos
and
lcall
mov
data16
sub
sub
mov
mov
jno
jno
pop
insl
lahf
or
push
add
dec
insl
hlt
mov
or
or
outsl
mov
xchg
cld
jl
negl
dec
sbb
push
mov
movsl
movsl
mov
push
cs
fcmovbe
dec
adc
jb
lahf
mov
mov
pop
int3
xchg
addr16
faddl
stos
jne
mov
mov
adc
or
cmpsl
mov
inc
sbb
daa
insb
and
pop
fs
pop
test
adc
push
outsl
pop
mov
scas
out
lods
daa
mov
mov
test
xchg
scas
or
and
cli
push
mov
xor
dec
fimuls
sbbb
xor
jmp
push
clc
lock
jne
mov
rcr
inc
inc
dec
ficoml
push
mov
rcll
push
cmp
mov
imul
mov
xor
xor
aas
mov
ret
std
mov
dec
fistps
andl
adc
sbb
fsubr
sbb
inc
add
push
sti
cltd
mov
xlat
sbb
cmp
js
mov
adc
iret
rcr
add
add
pop
inc
mov
shlb
push
bound
addr16
jl
aad
sbb
sub
iret
pop
fsubrl
mov
insb
push
out
lret
je
mov
daa
pop
xchg
inc
inc
push
std
push
or
inc
sbb
and
xor
addr16
test
in
push
mov
aas
lcall
sub
mov
in
push
push
push
sub
inc
out
movsl
jno
xchg
sbb
inc
inc
inc
or
out
inc
sbb
loope
push
push
popa
insl
dec
test
adc
sbb
popa
xor
mov
mov
push
mov
test
les
scas
ss
ja
fwait
mov
xor
insl
int
mov
mov
lods
int
cs
or
jp
mov
mov
test
shrl
dec
outsb
cli
mov
lcall
std
in
xchg
jp
pop
scas
and
stc
stc
push
sub
dec
or
cmp
mov
ljmp
hlt
add
lea
cmp
leave
xor
add
pop
imul
adc
and
push
in
outsl
mov
push
push
inc
lds
dec
push
cmp
xor
repnz
and
inc
jecxz
pop
mov
cmp
stos
js
hlt
sub
mov
xchg
cmpsb
mov
dec
push
subb
mov
shrb
sbb
push
jle
bnd
out
adc
popa
adc
adc
stos
vpmadcswd
inc
lahf
jp
xor
xlat
cmpb
push
xchg
jge
in
sbbb
lahf
xchg
insl
pop
mov
jae
mov
dec
js
lea
adc
data16
xchg
cmp
fisubl
jg
adc
scas
mov
sub
scas
dec
inc
mov
test
stc
and
sub
enter
xchg
cmp
lds
loop
testl
mov
aad
nop
lods
mov
xlat
sub
dec
jo
inc
mov
in
pushf
add
cmpb
lods
sbb
mov
xor
jle
sbb
push
enter
outsl
lods
or
push
cmc
push
dec
popa
jmp
test
rol
mov
push
fstps
iret
lahf
mov
dec
arpl
adc
test
jge
mov
rcrb
or
mov
adc
repnz
inc
insl
out
cmp
testl
cmp
or
dec
js
dec
mov
cmp
xchg
out
imul
jbe
xchg
in
pop
repnz
test
lcall
mov
stos
inc
iret
or
mov
lods
ret
push
dec
lock
mov
xchg
add
and
mov
mov
jecxz
mov
fisttpl
inc
cltd
ret
sti
sahf
cli
add
andl
push
push
mov
jo
sub
fdiv
inc
push
mov
push
cmp
dec
hlt
push
mov
roll
out
movsl
push
jae
divb
and
dec
dec
mov
cmpsb
es
lahf
loope
aad
pop
inc
mov
mov
mov
adc
insb
adc
ja
pop
push
cmp
jno
sub
lods
mov
fldcw
xor
jns
std
scas
mov
add
lods
scas
pop
push
jne
mov
sbb
push
ljmp
mov
dec
jge
and
sub
das
outsl
inc
shl
and
and
addr16
mov
mov
lret
stos
outsb
add
sbb
jecxz
inc
sbb
std
rolb
sub
jae
ljmp
out
cld
add
push
aam
mov
popf
inc
mov
mov
sub
das
test
mov
imull
jno
in
repnz
ss
and
movsb
mov
pop
mov
scas
lcall
shll
cwtl
xchg
add
mov
out
negb
iret
jmp
outsb
clc
arpl
mov
jne
xor
div
or
lock
sbb
outsl
mov
cmpb
mov
in
ret
insb
push
fcom
loopne
in
movsl
mov
test
lret
mov
outsb
jle
sbb
in
ds
popf
data16
enter
nop
and
mov
daa
dec
mov
xlat
lods
aam
and
stc
shl
out
daa
ljmp
cmpsb
inc
push
scas
and
fimuls
push
in
xor
ret
repz
les
pop
into
out
pop
fistl
daa
or
outsl
mov
adc
xchg
adc
nop
lods
jns
pop
cmp
or
in
sbb
inc
ja
inc
add
push
out
dec
je
mov
mov
mov
add
cmpsl
add
sahf
dec
dec
xor
pop
fisttpl
fidivrl
cltd
psubusb
jecxz
subb
imul
inc
xchg
fstpl
push
lods
stos
clc
fiaddl
pusha
cmc
leave
or
ficomps
sub
int3
icebp
cmp
cmp
scas
ret
sub
cmc
pop
sbb
daa
jecxz
and
fldcw
bound
xor
fwait
xor
sar
jb
and
sbb
or
test
xor
insl
icebp
test
cltd
mov
add
sahf
das
out
pmulhuw
lea
imul
jmp
out
mov
sti
jb
sbb
lret
add
mov
jmp
add
xor
stc
jne
jnp
or
inc
sbb
outsb
pushf
test
cmp
xchg
ljmp
jno
push
xchg
lods
cltd
pop
imul
sbb
mov
jp
xor
adc
xlat
and
aad
add
psrlq
jl
mov
repz
adc
inc
cmp
lods
add
stos
fbld
js
roll
pop
jge
pop
pop
add
ret
mov
xchg
cmp
or
add
ret
jge
mov
and
mov
popa
mov
mov
pop
cmpsb
mov
adc
in
mov
xchg
adc
insb
mov
dec
fcoms
xchg
inc
lods
adc
inc
in
lods
std
pop
daa
testb
rcl
mov
imul
cmpsl
sub
jp
jo
repnz
out
adc
inc
xchg
sbb
shll
pop
shlb
pusha
mov
test
inc
fisttpll
cld
inc
sar
iret
xlat
push
mov
shrb
xchg
out
lret
into
in
or
icebp
jmp
aaa
jno
sub
ret
pop
and
jo
ljmp
gs
fs
lea
out
dec
hlt
pusha
or
xor
xor
fs
adc
and
jo
mov
mov
adc
xchg
dec
cltd
in
cmp
fimull
and
jl
sub
jae
scas
js
pop
lods
mov
aaa
pushf
cwtl
iret
or
adc
cwtl
add
add
mov
pop
rcl
fsubs
xor
mov
test
cmc
leave
sub
mov
fldl
or
jp
cmp
adcl
dec
mov
insb
mov
stc
aas
mov
mov
dec
ret
cwtl
call
dec
jg
shlb
pop
mov
push
pop
daa
in
push
cmc
shll
fidivrl
pop
mov
xchg
sub
adc
ds
or
dec
inc
sti
jb
and
scas
or
push
addl
rcrl
cltd
xchg
sahf
in
push
lods
fsts
loopne
arpl
jle
mov
fwait
mov
imul
inc
sbb
pusha
xor
sub
jl
popf
nop
jg
mov
cli
lahf
jo
mov
mov
and
mov
cmpsb
fwait
add
in
orl
daa
aas
xchg
push
push
xchg
out
xor
in
jns
leave
add
inc
filds
cwtl
out
sub
aad
fisubrl
push
ret
jnp
cli
sbb
stc
push
mov
stos
mov
fs
mov
jmp
lds
xchg
push
imul
aam
repz
jb
jg
in
stc
das
sub
test
in
push
jno
in
dec
push
in
jecxz
addb
sbb
mov
aad
lret
js
dec
jae
shlb
dec
cs
or
call
test
mov
adc
fidivrl
subb
sub
jnp
add
jmp
pop
subb
dec
icebp
ret
mov
mov
sbb
das
pusha
lret
fwait
aad
jge
test
or
or
push
cli
lahf
adc
out
mov
adc
movsl
dec
xor
das
test
or
add
dec
jnp
push
jl
std
rolb
rorb
inc
xor
pop
not
add
mov
fsts
cld
lcall
enter
push
push
imull
add
jge
jge
jo
xor
mov
jnp
out
nop
rorb
in
jmp
xchg
decl
adc
and
into
inc
mov
mov
scas
dec
pop
stos
cld
js
cs
dec
aad
jg
imul
adc
stc
push
adc
das
mov
add
dec
arpl
mov
shlb
add
mov
sub
mov
cwtl
xor
pop
cld
rcrl
fbld
mov
push
insb
push
outsl
push
adc
xchg
test
jnp
sarb
lods
adc
jl
jl
movsb
sub
iret
jno
out
fidivs
xchg
and
dec
movsb
pop
add
lock
sbb
xchg
sarl
imul
mov
push
les
fwait
cmp
inc
xchg
dec
testl
sti
push
or
pop
cs
add
inc
fsubrl
jne
std
mov
flds
adc
cmp
leave
pop
or
ljmp
mov
push
sbb
lods
arpl
outsl
insl
scas
mov
in
fcoms
in
popa
or
fs
push
xchg
jns
sub
adc
xchg
test
mov
adc
sub
or
insl
push
jp
dec
mov
pop
test
nop
rorb
adc
cmp
adc
mov
pop
xor
testb
add
cmc
jmp
lahf
push
out
mov
mov
iret
int
or
mov
mov
outsl
xor
iret
sub
dec
sahf
jno
or
das
fwait
xchg
jge
in
jg
fistps
popa
addr16
push
pop
and
andl
sbb
out
push
out
mov
jp
dec
mov
in
stos
fucomi
insl
pushf
cmp
pushf
mov
mov
mov
cmp
cli
mov
mov
outsl
xchg
inc
push
cmp
enter
cwtl
out
and
adc
mov
cmpsl
fsts
arpl
pop
xchg
push
push
test
pop
in
sti
push
push
mov
push
mov
aad
aas
movsl
movsl
xor
js
and
xchg
inc
mov
in
stos
fisubrs
loopne
push
cwtl
pop
inc
movsl
add
das
add
cmpl
sub
popf
pusha
jp
pop
icebp
popf
jge
jbe
inc
dec
jbe
push
pop
enter
mov
mov
xor
mov
and
sbb
cmp
dec
pop
jne
push
outsb
nop
rorl
inc
or
mov
stos
or
fwait
jne
ss
pop
jmp
or
idivl
test
inc
xchg
pop
cmpsl
lret
push
lcall
lahf
and
jp
arpl
cmp
adc
fs
inc
scas
add
cwtl
push
test
cltd
jg
or
ja
adc
mov
fs
push
out
test
fisubrl
fcom
mov
loopne
sub
outsb
push
fdivr
fdivr
mov
cli
xor
cwtl
repnz
popf
or
jecxz
outsl
test
dec
call
in
imul
and
push
sbb
scas
outsb
pop
xorl
mov
lods
inc
hlt
sbb
adcl
loope
ja
inc
jbe
jno
rorl
or
mov
jne
aad
mov
adcb
lods
lret
push
mov
inc
ss
cwtl
dec
cs
cmpsl
pop
xor
ja
mov
xor
or
movsb
inc
cmp
lea
inc
xchg
movl
sub
add
mov
cmpsl
mov
ljmp
jmp
into
dec
xor
pop
mulb
insb
ljmp
test
dec
ss
arpl
fstps
fdivrl
insl
mov
sbb
push
inc
add
lds
mov
into
fcmovb
cmp
mov
mov
inc
inc
ffreep
mov
jo
insb
jbe
fcomi
mov
xlat
xchg
jb
fcmove
pop
fidivrl
out
rorb
push
and
xchg
and
cld
or
imul
jb
sbb
movsl
mov
cmp
push
nop
dec
sub
sub
mov
dec
stc
mov
sub
mov
push
ficoms
and
or
xlat
out
or
mov
add
addr16
jp
ret
and
and
push
add
lret
mov
aad
in
int3
adc
repnz
inc
push
cmpsb
movsl
inc
mulps
ret
fbld
xchg
push
dec
mov
push
das
jns
lds
imul
jae
pop
adc
xor
jmp
push
dec
ss
jmp
adcb
mov
and
inc
stos
jns
lods
xor
fwait
jmp
daa
fwait
imul
int3
mov
or
inc
loop
xchg
push
into
int
sub
pop
and
xchg
leave
or
inc
inc
repnz
and
push
xchg
push
pushf
xchg
dec
lret
xlat
jp
cmp
mov
sbb
xor
scas
ss
mov
into
loope
cmp
gs
push
lods
mov
pop
jg
mov
dec
rorl
sti
mov
scas
or
stos
jg
mov
arpl
xor
inc
push
mov
std
shlb
hlt
popl
adc
ljmp
test
or
sub
inc
ljmp
push
fdivp
xchg
jecxz
add
pop
mov
popa
scas
inc
mov
int
sub
pop
in
les
test
leave
adc
fldl
mov
lret
dec
push
and
addr16
cmp
andl
mov
dec
sub
jae
ljmp
cmpsb
out
aam
arpl
xchg
and
sbb
cmp
xchg
jp
call
push
in
cmp
je
adc
sbb
push
pushf
lcall
mov
call
push
pusha
icebp
into
inc
loopne
dec
imul
lret
mov
sub
mov
fdivrs
xor
fsubs
or
repnz
insb
hlt
adc
pop
add
inc
mov
jp
lahf
mov
call
pop
jge
rcrl
fs
mov
jo
popf
mov
test
gs
insb
xor
in
jl
js
test
xor
pusha
cli
xchg
iret
jp
mov
pop
xor
pop
lcall
mov
xchg
adc
test
stos
jns
adc
mov
ja
iret
or
in
jp
enter
lahf
mov
mov
sti
lock
leave
dec
inc
jecxz
imul
out
and
fistpll
mov
scas
jo
inc
lock
adc
fbstp
mov
imul
std
mov
mov
sub
ret
mov
fldt
call
dec
push
cmp
mov
in
inc
fidivrs
cltd
mov
hlt
cmpsl
fnstcw
sahf
sub
lods
shlb
rcrl
jo
or
ja
stos
mov
cwtl
sub
jmp
int
sub
or
dec
push
gs
jbe
daa
bound
gs
cmp
popa
ret
cs
or
adc
sbb
mov
ds
add
push
in
xchg
outsb
jnp
jbe
add
movsl
dec
les
mov
jns
ss
mov
xchg
cmp
xchg
aam
inc
or
js
xchg
mov
jl
push
inc
and
lcall
push
jnp
mov
mov
les
loopne
inc
cmp
xchg
lahf
enter
sbb
and
std
imul
orl
mov
and
inc
mov
pop
rclb
shr
jge
in
inc
jmp
frstor
and
mov
shrb
push
popf
arpl
jmp
lcall
call
push
subl
inc
stc
mov
movsl
pushf
mov
stc
mov
mov
icebp
add
mov
mov
push
cmp
xchg
cmpsb
lods
adc
bound
xchg
dec
jecxz
daa
mov
add
push
hlt
xchg
xchg
or
add
stos
and
or
push
xor
lock
xor
data16
xor
repnz
scas
out
push
push
popa
lea
push
in
and
jbe
pop
pushf
xchg
sub
xchg
adc
popf
dec
movl
lods
xor
iret
mov
fsubl
sub
fs
js,pt
fstpl
jnp
jnp
dec
jo
les
hlt
sarb
test
imul
addr16
xlat
rcl
ja
imul
pop
push
addr16
out
hlt
out
mov
mov
jmp
push
adc
popa
daa
dec
jp
daa
in
stc
repnz
lret
xor
cwtl
xor
aam
cli
pop
ljmp
popa
and
loop
insl
pop
test
jmp
and
lods
cmc
nop
cmpsb
mov
das
push
inc
in
lret
fldenv
lods
inc
xor
and
in
jnp
aaa
dec
out
mov
scas
in
mov
jbe
je
loop
pop
xchg
jns
enter
add
gs
call
and
shlb
jb
xchg
adc
sbb
jecxz
rolb
scas
ficompl
sub
jecxz
cmp
cmp
aad
and
cmpsl
pusha
nop
notl
popf
ljmp
lods
mov
imul
sbb
xchg
pop
aaa
fdivl
xchg
loope
cs
clc
sbb
cmp
inc
stos
test
leave
jl
xchg
lcall
inc
clc
xchg
mov
add
inc
push
shl
pop
or
lods
or
push
xchg
fwait
lcall
hlt
das
popa
faddl
mov
stc
cwtl
sub
sub
loope
push
pop
mov
dec
jp
lcall
icebp
pushf
insl
cmp
stos
outsb
or
sbb
inc
cmp
scas
lea
sbb
mov
fwait
xor
rol
dec
cltd
xchg
cs
sbb
dec
addl
jp
push
scas
or
dec
mov
sbb
pop
mov
outsl
add
movsb
xor
loopne
inc
cmovae
repz
jmp
xor
loopne
insl
or
inc
and
xchg
pop
sar
jmp
push
mov
and
adc
sub
add
cli
pop
jne
aas
test
jl
cmp
cmp
fsubrl
xchg
sbb
or
xor
add
push
movsl
in
push
fistpll
xor
sub
mov
fs
ret
insl
lcall
jne
leave
out
sub
cmp
or
and
out
aad
xchg
lock
or
iret
out
imul
daa
mov
sahf
les
jg
bound
mov
sbb
repnz
inc
out
nop
mov
loope
int
stos
push
sbb
pop
xchg
lret
cmpl
push
pop
xchg
inc
jno
scas
mov
jno
movsb
call
cli
arpl
bound
sbb
push
in
jns
or
or
cs
sub
mov
rcl
inc
pusha
subl
cmp
jbe
or
jae
mov
jecxz
xor
sub
repnz
add
dec
or
insb
scas
mov
xor
ja
loopne
das
daa
push
push
mov
je
nop
lock
jae
jb
enter
mov
cli
cltd
inc
add
loop
arpl
push
test
jo
nop
mov
mov
icebp
and
jp
or
mov
sub
imul
mov
cwtl
cmp
fcomps
fs
mov
jo
or
into
pop
push
jmp
xchg
popf
jg
into
mov
mov
push
aad
testb
jl
xchg
in
push
cli
jo
dec
jne
imul
or
aad
cltd
push
push
or
add
sub
hlt
int
add
mov
adc
stc
inc
ds
or
cmp
jnp
xchg
add
adc
aaa
les
inc
repz
push
mov
and
add
sbb
shlb
and
ret
or
push
or
neg
daa
or
addl
icebp
bound
ss
shl
stos
adc
lock
lds
sti
push
cwtl
outsl
iret
cmc
jp
lret
sbb
push
insb
mov
xor
sahf
xor
adc
cmp
mov
adc
push
add
ljmp
dec
add
mov
sbb
sbb
lahf
test
das
cs
call
test
test
shlb
ret
test
sbb
inc
sbb
cs
pop
cmp
cmpsl
cmp
pop
outsl
sahf
xchg
sub
and
jle
inc
ja
test
mov
xor
push
mov
inc
imul
loopne
cmp
cld
ss
jmp
pop
fcoms
xor
filds
mov
xor
pushf
sub
xchg
mov
inc
insl
aam
movsl
pop
fs
inc
pop
mov
sub
out
inc
je
scas
pop
lods
mov
into
aaa
jecxz
xchg
mov
lea
push
fdivrs
sub
in
les
sbb
out
mov
ret
lret
xchg
arpl
dec
repz
mov
mov
mov
pop
pushf
pop
shll
push
mov
adc
aas
and
js
mov
mov
mov
pop
mov
ret
shll
icebp
xchg
adc
hlt
loop
arpl
jo
fs
xchg
fisubl
out
xchg
sub
test
movsl
mov
leave
gs
lods
cmc
jle
add
cmp
js
fnstsw
scas
add
jle
pop
pop
sub
xor
in
add
mulb
movsl
xor
lahf
xchg
imul
adc
pop
ljmp
jecxz
cmp
fstps
repnz
js
cmp
or
push
into
jno
inc
enter
out
hlt
sti
sbb
sbb
cmpb
daa
je
pop
ds
inc
aas
xor
scas
lcall
fnstenv
xchg
jl
and
adc
xchg
xor
cmp
jecxz
ds
scas
lcall
jbe
lds
test
fistl
or
jo
inc
and
fucomip
aaa
sub
jp
jnp
cli
sbb
cwtl
inc
adc
xor
push
xor
ret
add
add
xchg
inc
push
mov
das
push
ds
test
mov
in
sub
cmp
loop
in
out
test
jmp
jnp
sub
xor
ret
fdivl
das
push
add
xor
add
pop
jo
fstl
add
inc
stos
sbb
fcmovbe
in
jno
scas
mov
push
ret
lret
out
cltd
jb
xlat
xchg
shrb
jae
push
imul
js
inc
xchg
ret
xor
mov
sub
add
lock
jecxz
pop
cmp
adc
mov
sub
xchg
outsb
cmc
push
dec
sub
xor
lods
xlat
push
pop
rcrb
mov
insb
add
outsb
hlt
scas
xchg
sub
sub
insb
push
mov
call
insl
pop
dec
inc
cmpsb
cmpsl
lcall
lock
and
mov
pop
in
sti
data16
enter
les
sbb
icebp
iret
pop
aas
insl
rcrb
push
pop
gs
bound
add
mov
sub
stos
popf
in
jl
xchg
push
cmp
mov
jl
mov
sti
pusha
lods
shr
pop
adc
data16
rclb
sub
aam
aas
and
sbb
cltd
pop
mov
xchg
pop
push
inc
pop
sub
push
adc
mov
mov
dec
popa
cmp
outsb
dec
test
das
shld
mov
fimuls
in
push
subb
je
mov
popa
or
jge
mov
aad
push
popa
xor
sub
inc
xchg
and
mov
in
adc
adc
mov
cmp
pop
fstps
xor
mov
push
pop
in
cld
mov
xlat
call
out
cs
idivb
scas
popa
fcoms
pop
adc
add
xor
cs
or
push
or
dec
push
or
ds
ljmp
loopne
in
inc
adc
ss
notl
jle
in
sti
jg
movsl
cmp
push
mov
pop
mov
push
cld
mov
loope
mov
cmpsl
cmc
xlat
ss
aas
push
mov
daa
add
gs
xchg
lret
mov
add
jecxz
scas
adcl
sub
jbe
add
xor
mov
cltd
dec
sub
xor
mov
jecxz
fcomip
leave
xlat
fcmove
aam
xor
cmp
xchg
fsubr
and
xchg
cmpsl
cltd
jl
cmp
out
adc
adcb
sub
fstps
cltd
add
jl
xchg
fidivs
adc
inc
andb
insl
ds
lock
fcmovnbe
xchg
add
hlt
mov
and
jle
adc
mov
push
stc
in
jae
mov
movsl
xchg
and
jmp
or
adc
orl
jbe
cmp
adc
scas
xchg
push
sbb
cltd
fidivs
das
or
call
inc
aad
or
jp
aaa
ljmp
mov
push
sbb
int
outsb
les
xor
sub
sbb
scas
lcall
outsb
mov
add
out
ret
adc
jns
xchg
jg
popf
popa
lods
hlt
shlb
cmc
cmp
inc
cld
aam
jle
mov
fwait
aaa
repnz
rcll
inc
nop
pop
jns
and
imul
mov
popl
jp
pop
mov
ret
ffree
push
adc
aaa
adc
stos
cmp
out
repz
push
and
mov
test
sbb
out
lods
rcr
daa
cltd
daa
push
mov
outsl
add
in
cmp
das
xchg
andb
popf
rcrl
and
in
xchg
sub
imul
inc
inc
and
mov
dec
mov
sbb
ja
mov
add
dec
mov
jge
sbbb
stos
mov
add
jl
ds
movsl
pop
push
and
lret
mov
sbb
cmpb
or
inc
ljmp
push
xor
mov
aam
insb
mov
pop
push
dec
mov
or
and
dec
popf
mov
jb
fisttpl
mov
mov
les
stos
shrl
repz
inc
sub
aam
mov
mov
adc
jecxz
or
sbb
pushf
mov
lret
inc
inc
jmp
cltd
lods
repnz
sbb
rolb
or
jl
or
or
dec
dec
sub
mov
jp
cli
cs
int
or
sub
mov
sysenter
xchg
or
and
pop
mov
in
push
cmpsl
scas
pop
mov
jg
add
add
xor
inc
push
rorb
jmp
mov
fcomip
mov
loop
xchg
jbe
por
outsb
rolb
xor
add
mov
mov
push
sub
xor
jecxz
adc
sbbl
mov
movsl
xlat
jl
bound
stc
ja
cs
and
xchg
lret
loop
ficoml
cmp
xchg
cmp
jne
outsb
mov
xchg
adc
in
or
scas
fcomps
xlat
in
cmp
inc
xor
andl
repnz
lcall
stos
cmp
lret
push
pushf
xchg
mov
jl
in
xchg
cmpl
mov
clc
jp
enter
jmp
dec
sbb
sub
sbb
jnp
xchg
stos
dec
lods
inc
vhaddps
inc
adc
sbb
xor
cmp
dec
jb
stos
or
pop
and
jnp
or
in
adc
push
sub
cld
lods
testb
jp
js
les
mov
lea
mov
js,pn
xchg
jge
jl
fldl
cmp
daa
add
sbb
or
sbb
dec
xorb
xchg
and
out
xorl
mov
inc
and
lahf
pop
pop
mov
lock
push
cld
fidivs
dec
pop
in
add
movsl
int
mov
adc
xchg
jle
subb
sarl
cwtl
pop
mov
inc
ljmp
push
hlt
xchg
sbb
lret
sbb
mov
idiv
cli
das
sub
daa
pop
and
add
loopne
call
sbb
fidivs
push
call
sub
mov
lods
sub
push
or
adc
mull
lret
sbb
loop
cmp
shll
in
ljmp
rcrl
pop
fisubl
sbb
push
xchg
loopne
ret
sub
sbb
jl
pop
out
mov
pusha
in
loope
lock
mov
ret
imul
jbe
push
sub
dec
jns
jae
dec
ror
push
mov
or
flds
jp
mov
das
in
sbb
sub
into
inc
mov
out
inc
pop
lods
js
xchg
iret
jbe
mov
fmulp
xor
jmp
jae
xchg
iret
sub
and
cmp
lea
sbb
ret
cmpsl
lahf
popa
mov
testb
adc
fisubrl
into
pop
inc
arpl
arpl
movsb
adc
andl
fimull
xor
int
or
subb
lahf
leave
jge
lcall
jbe
mov
loop
push
out
test
imul
andb
shll
xor
call
js
mov
je
sbb
xor
mov
rol
insl
adc
fbstp
dec
dec
mov
pushf
test
call
sti
cmp
mov
inc
lods
pop
push
sbb
popf
lret
adc
sbb
pop
sbb
fcompl
fs
jb
jb
dec
pop
notb
movsb
push
fadds
sub
mov
aad
ss
cld
jns
adc
cvtps2pd
jecxz
and
out
and
and
inc
leave
shlb
inc
xchg
lea
aaa
mov
aas
sbb
push
xchg
sub
fstpl
aad
jb
ficomps
xchg
outsb
in
xchg
popf
dec
pop
inc
sub
cs
inc
cmpl
test
aas
out
fwait
nop
and
and
fistl
xorb
pop
das
cmp
test
lcall
inc
fistl
mov
aas
push
out
stos
xchg
jg
lock
xchg
lahf
add
jle
fs
ss
dec
rcr
mov
push
or
les
fadd
sbb
daa
rclb
stc
dec
fisubl
mov
mov
stc
movsb
jmp
cmpsb
mov
outsl
loope
sahf
sbb
fildl
lret
daa
pop
cmp
leave
mov
push
xchg
and
and
fwait
ret
pop
and
aaa
cmp
push
xor
cmpsb
inc
sub
jecxz
xor
inc
xor
je
loop
andb
mov
ds
cmp
stc
push
inc
out
and
roll
or
pop
jbe
push
dec
inc
mov
outsl
add
cli
sahf
sub
cld
push
mov
pop
out
mull
jmp
push
jae
pop
adc
repnz
stos
in
xor
add
jns
mov
lods
or
cs
pop
repz
pop
jb
mov
cli
lcall
mov
xchg
cmpsl
add
aam
add
aam
cmp
mov
push
int3
or
add
out
das
add
dec
mov
add
xlat
push
dec
fs
cmpl
into
or
lret
pop
pop
sbb
out
pop
xor
cmpsl
xor
cmp
mov
mov
push
std
jg
sub
fsubrl
ret
leave
mov
xchg
ja
adc
fxam
aad
incl
mov
xor
sbb
dec
push
aaa
adc
repz
pusha
push
cld
enter
fs
or
cmp
sbb
sub
jne
jg
mov
dec
mov
test
xchg
lret
pop
out
rcr
dec
test
mov
mov
dec
loop
xor
scas
into
out
xor
sub
rorb
lea
aad
loopne
jbe
or
rcll
inc
mov
and
std
mov
loopne
test
push
xor
add
mov
mov
hlt
inc
imul
fisubrs
pop
les
stos
cmpsb
stc
cmovns
iret
lods
outsl
inc
aas
nop
sarb
push
outsl
ret
jl
xlat
mov
dec
adcb
hlt
dec
insl
push
sarb
xor
inc
jnp
sub
adc
pop
fcmovnb
inc
stos
fidivrs
push
subl
xchg
jp
int
test
std
and
sub
cmp
sbb
push
jecxz
add
adc
mov
call
rcll
sub
xchg
fildll
xchg
cmp
out
jb
test
cmp
and
cmpb
xor
mov
test
push
lahf
dec
push
jno
imul
or
aam
add
lods
and
daa
push
loope
pop
aad
push
add
and
jmp
xor
mov
xor
cltd
test
addb
in
jge
mov
out
mov
fs
in
repnz
in
aam
inc
pop
dec
lahf
mov
into
cmp
shll
cmp
pop
icebp
xor
iret
and
test
loop
push
adc
pop
push
lds
out
cmp
jle
dec
mov
out
adc
fisttpll
addl
or
cmp
push
add
jbe
daa
mov
lret
or
xchg
pop
inc
test
in
pushl
in
dec
clc
stc
pushf
sbb
fbld
not
xchg
ja
leave
ss
lcall
out
lret
xor
pop
push
jno
lds
pop
xor
xor
jne
sub
addb
sarb
mov
fdivrp
mov
jb
dec
pop
lock
push
into
popf
mov
xchg
imul
sbb
add
lcall
arpl
mov
fsubrl
rcr
add
pop
jl
xchg
leave
rorb
jmp
jge
fcomps
xor
lret
pop
nop
hlt
in
xchg
outsb
add
jmp
jb
cmp
imul
mov
loopne
xor
imul
mov
loope
inc
push
cs
test
pop
xchg
cmpl
cmpsl
cltd
mov
fnsave
mov
push
lods
adcl
add
in
jg
fwait
inc
push
xor
mov
mov
loop
and
mov
test
inc
mov
ficoms
lods
pop
fs
fsts
add
mov
push
int3
jae
int3
push
and
dec
scas
jecxz
repnz
stos
sbb
sbb
mov
inc
sub
inc
ljmp
add
mov
jae
pop
adc
xchg
cmp
arpl
gs
mov
adc
imul
inc
fcoml
aas
sub
xlat
cld
mov
sbb
popa
jo
sbb
inc
aad
mov
mov
movsl
lds
call
sbb
shll
adc
pop
xor
pop
lcall
or
add
sahf
jge
mov
iret
jb
or
icebp
data16
xchg
jp
ja
push
sub
cwtl
std
rcrl
aas
mov
adc
imul
sbb
pop
jno
pop
fcmovne
jecxz
gs
cld
shll
pop
loopne
pop
data16
nop
fwait
push
mov
mov
mov
adc
cmp
adc
jb
mov
mov
loopne
lea
xchg
mov
xlat
pusha
lret
imul
jmp
inc
cmp
and
sbb
and
dec
rorl
sbb
mov
ss
mov
mov
out
xchg
dec
test
pusha
inc
pop
jne,pn
cmp
xor
repnz
insb
xchg
andl
outsb
ret
xchg
test
pop
fwait
rorl
imul
add
lock
xor
xchg
cwtl
test
arpl
rcr
stc
shrl
lods
cmpsb
into
lcall
add
jp
das
icebp
xor
fdivl
jne
jle
and
bound
xor
mull
fnstsw
jb
pushf
dec
cltd
loopew
and
lods
lea
stos
cmpsl
dec
mov
es
push
aaa
pop
cs
mov
sub
mov
lods
imulb
insl
xchg
shrb
adc
insb
add
addr16
test
inc
cmpsb
mov
aad
int
jmp
in
popa
out
inc
adc
adc
pop
xchg
fwait
inc
xor
enter
or
and
add
cmp
enter
push
add
imul
adc
fisubrl
cwtl
and
ja
xchg
adc
orl
inc
inc
sub
ret
cmp
xchg
jecxz
mov
andb
sbb
in
xchg
packuswb
add
or
xchg
test
mov
in
xlat
outsl
lcall
sbb
mov
push
lcall
jg
xor
add
fmull
lahf
test
dec
cmpsl
mov
mov
lds
cmp
sub
and
rcrb
and
push
mov
xlat
out
std
mov
ret
cli
push
xlat
adc
bound
das
inc
mov
mov
ret
ret
fwait
jno
stos
pop
cmpsl
dec
loope
pop
inc
inc
sbb
push
test
popa
push
shrb
ficoml
aad
sbb
outsb
xor
enter
sbb
lea
mov
mov
and
mov
sti
cmp
push
ss
jg
shlb
or
cmp
cld
cmpsb
movsl
adc
mov
xlat
cmp
test
gs
cltd
loop
repz
jg
daa
mov
addr16
sub
jne
mov
cmp
lret
fidivrl
mov
xor
xlat
mov
jle
sarl
ret
xchg
mov
push
fyl2xp1
jns,pn
push
push
leave
push
pop
jecxz
lods
jp
xor
adc
nop
mov
fwait
pop
mov
sub
push
loope
out
mov
cmp
mov
cmpsl
cmp
jecxz
xchg
aad
aaa
add
mov
pushw
lock
jmp
mov
sti
xor
adc
adc
lcall
cmp
push
or
cld
mov
jl
xor
test
lret
in
sub
mov
in
aad
lahf
decl
out
xor
push
pop
es
cmp
cmc
xchg
inc
and
xchg
xchg
dec
sti
ret
jne
xchg
or
aas
fsubs
jg
nop
jp
push
sbb
pop
mov
dec
iret
pop
xchg
leave
clc
fidivrl
icebp
mov
dec
mov
pop
cltd
out
cld
jp
dec
adc
pop
cs
scas
pop
nop
fisttps
and
sbb
jo
fiadds
dec
push
jbe
lods
sbbl
ja
in
lds
leave
sarl
and
stc
sbb
and
movsl
sub
xor
add
and
mov
mov
lods
xor
dec
mov
popf
daa
cmp
xor
repnz
sub
sbb
lods
cmp
cmp
inc
xor
ret
cmp
aaa
inc
insb
jns
mov
xchg
push
out
test
mov
pop
push
jmp
mov
out
inc
fnstenv
shrl
js
int
mov
fldt
xchg
mov
push
iret
out
push
push
lods
mov
iret
shll
add
in
test
lds
inc
jnp
or
pop
and
es
lret
jle
cmp
mov
negb
push
sub
iret
dec
loope
cmovae
dec
lcall
jne
sbb
sub
pop
icebp
push
lret
mov
lea
push
lock
les
pmaddwd
enter
jnp
mov
rcll
loopne
xor
cmp
faddl
sub
inc
xor
sbb
inc
jmp
jg
inc
stos
fstpl
les
adc
scas
mov
hlt
push
push
rorb
add
jne
mov
lods
cmpb
jb
in
int
insb
ljmp
xor
je
adc
xchg
movsb
int
int
push
aas
add
dec
ljmp
lret
xchg
push
ret
gs
mov
or
dec
cmp
movsl
shll
jb
mov
jecxz
push
fwait
hlt
xor
or
insb
xorl
std
and
out
sub
mov
dec
jns
mov
stos
mov
xchg
mov
in
icebp
add
cmp
mov
nop
fnstsw
popf
xor
insl
jae
cmp
jge
pop
lahf
xor
imul
pushf
push
mov
fwait
outsb
mov
cmp
out
outsb
xchg
in
xchg
or
and
addb
fists
cld
mov
push
jmp
cmp
cltd
add
add
mov
mov
push
dec
std
addr16
inc
fmuls
xchg
cmp
mov
stos
inc
ret
scas
mov
lock
push
fldcw
arpl
cmp
daa
sti
rcrb
outsl
fsubrl
mov
mov
movsl
mov
clc
inc
jbe
imul
dec
mov
dec
inc
or
mov
mov
push
outsl
movsl
inc
jno
mov
shlb
in
mov
push
addl
cmp
nop
xchg
mov
insb
push
aam
orl
push
jmp
push
bound
mov
push
xchg
js
fnsave
les
idivl
stos
mov
outsb
sbb
inc
push
push
mov
or
jge
stos
int
inc
adc
inc
cmc
mov
lods
roll
jno
int3
push
and
add
cmpsl
cmp
pop
scas
push
xchg
arpl
sbb
dec
xor
mov
out
xchg
xor
dec
aas
pop
movsb
pop
incl
js
sbb
test
ja
outsb
dec
adc
xlat
jae
xchg
aaa
ficoml
adc
mov
cmovnp
push
loope
shlb
sub
xor
xor
pop
pop
fstpt
fstpt
and
or
mov
xchg
cld
cmp
cmp
addr16
xor
xchg
pop
dec
mov
dec
push
mov
xchg
enter
data16
ss
sarb
adc
xchg
xchg
add
fisttps
inc
call
jle
or
clc
cmp
nop
mov
fldt
adc
addr16
or
ljmp
into
mov
dec
mov
jno
aam
inc
jae
mov
lods
stc
nop
lods
daa
lods
push
adc
repz
or
mov
jnp
enter
rolb
cmpsb
xor
cmp
push
xchg
movsb
ficompl
jg
mov
jno
xlat
push
shrb
mov
push
or
leave
inc
and
sar
jmp
adc
test
sub
cs
in
outsb
test
and
mov
jl
xchg
add
adc
repz
inc
pop
pusha
push
push
add
fmulp
adc
mov
inc
sbb
cltd
rol
aas
adc
mov
mov
sbb
mov
push
and
dec
inc
adc
push
fsubl
loope
shrl
out
lods
rol
cmp
aad
push
icebp
inc
pushl
adc
or
scas
out
xor
fcmove
sti
stos
mov
xchg
lret
lds
stos
and
cmc
push
enter
cltd
adcb
mov
sbb
repz
xlat
cmp
cld
dec
cli
ror
and
add
lahf
mov
rorl
mov
sahf
mov
enter
or
cmp
xchg
in
sub
or
xor
jge
and
inc
pop
xchg
dec
lock
test
shr
ds
stos
jmp
test
leave
shl
xchg
pop
push
cs
scas
shll
adc
out
push
sub
mov
test
std
xorl
mov
dec
xchg
pop
mov
pop
push
fldl
fidivrs
inc
imulb
rcl
cmpsb
mov
imul
sub
mov
jmp
xor
cltd
inc
sbb
jge
rcll
xor
pusha
mov
sub
ds
xchg
dec
outsl
inc
sub
aaa
out
mov
ds
lods
push
sub
mov
daa
mov
ret
test
dec
mov
xchg
mov
in
ja
jo
inc
ds
aaa
adc
mov
or
adc
add
xchg
mov
jo
mov
dec
test
inc
mov
ficoml
dec
mov
mov
push
iret
clc
lea
cmp
mov
jmp
aas
dec
or
cmp
sub
pop
mov
sarl
fidivrs
dec
push
pop
outsl
icebp
lcall
and
pusha
pop
pop
fldz
xor
cmpsl
in
xchg
pushf
shlb
and
iret
icebp
mov
mov
mov
lret
int3
xchg
mov
dec
loop
pop
push
pop
jne
adc
mov
or
fnstenv
push
dec
test
cmpsl
adc
adc
pop
fstpl
fcomps
rcl
inc
and
jmp
pop
aam
push
inc
or
mov
fwait
sub
mov
xchg
add
daa
jbe
movsb
pop
xor
sbb
jo
scas
int
jb
inc
or
in
mov
insl
arpl
mov
jae
add
mov
push
mov
xchg
push
loopne
jge
xchg
shlb
iret
sbb
or
pop
movsb
dec
outsl
jp
mov
pop
repz
jmp
stc
and
or
xchg
or
sbb
inc
movsb
out
leave
mov
stos
xor
xchg
cmp
pop
std
mov
inc
cmova
hlt
je
outsb
pop
repnz
dec
or
clc
mov
fsubs
push
out
or
and
add
jo
or
push
or
add
xor
ficompl
ds
xchg
xor
cmp
mov
loopne
aad
addb
test
cmpl
push
js
sbb
int
and
pop
arpl
jp
faddl
mov
jne
jne
push
mov
mov
lds
fcmovu
push
aam
cmpsl
jg
negl
or
push
nop
add
push
or
dec
sti
and
push
fwait
push
push
xchg
or
mov
pop
out
ret
jl
and
nop
jecxz
pusha
jae
pushf
shr
mov
stos
mov
stc
inc
xchg
mov
jns
adc
fistl
stos
hlt
push
cwtl
into
test
mov
outsl
jo
cmp
jl
push
sti
mov
aam
jns
add
data16
xor
in
loopne
xchg
mov
mov
aaa
loope
push
add
sbb
xor
inc
and
in
arpl
sub
fcoml
icebp
and
mov
lods
std
mov
push
movsl
or
insl
adc
xor
adc
adc
xchg
stc
cmc
mov
jp
dec
adc
test
leave
pcmpgtd
and
inc
imul
inc
push
pop
push
aaa
test
or
out
aam
cmpsl
push
pushf
inc
fldenv
push
stc
movsl
add
mov
test
sti
sbb
stos
cld
addb
pop
dec
in
lds
jp
dec
pusha
sbb
mov
inc
clc
sub
aas
push
push
cld
imul
pop
jmp
dec
jne
pop
fisttps
jo
mov
sbb
dec
stos
mov
rorb
in
push
fmuls
insl
test
testl
test
adc
js
call
dec
mov
jge
out
jecxz
notb
mov
mov
mov
mov
imul
xchg
push
and
outsl
jnp
inc
push
cmp
loop
dec
call
add
scas
stc
loope
inc
imul
scas
push
test
jecxz
dec
sahf
and
jg
mov
sar
in
jnp
mov
subb
jae
sbb
and
push
out
adcb
jo
mov
and
roll
je
fst
jbe
leave
addr16
jnp
sbb
mov
or
out
jmp
sub
out
jb,pn
jle
cli
frstor
push
fsubs
mov
lret
popf
fimull
inc
test
sbb
and
mov
or
ljmp
mull
fdivl
enter
sarb
in
cmp
mov
push
dec
and
ja
dec
sbb
sbb
cmp
stos
dec
pop
in
orl
scas
lret
push
ds
dec
push
sub
mov
popf
adc
sub
adc
mov
repz
or
xor
push
adc
add
hlt
pop
cmp
insb
fildl
sahf
jno
cmp
cmc
push
lods
ret
pop
xor
jae
adc
jl
cmp
jg
test
ficoml
sub
jge
test
or
mov
mov
mov
mov
pop
arpl
subl
xchg
pusha
mov
jb
test
sub
mov
lods
mov
mov
insb
pop
fldt
or
rcrb
jg
jns
fnstenv
jb
ds
shll
dec
cmp
mov
dec
sti
add
pop
sahf
push
loopne
xchg
jns
cmpsl
fxch
pop
mov
mov
pop
leave
lds
testl
in
pop
sbb
out
push
fstps
sbb
mov
jp
push
mov
hlt
mov
ss
xchg
ss
mov
int
shll
sub
pusha
fdivrs
xor
mov
iret
inc
inc
jp
and
das
ja
mov
mov
or
ss
sub
cmp
inc
add
insb
mov
ficoms
shrl
inc
adc
jno
dec
xor
fimull
sub
das
mov
sub
ficomps
dec
repz
insb
sbb
jae
lods
cld
fbstp
pop
in
jo
movsl
imul
sub
jle
jecxz
mov
cltd
pop
push
xchg
push
scas
aam
pop
sar
lds
sbb
cli
push
daa
pop
in
mov
xchg
dec
rorl
add
cmp
cmp
je
je
or
mov
add
mov
pop
xlat
pop
fsub
jp
and
mov
add
fimull
gs
fs
popa
jmp
out
jb
dec
push
cltd
pop
or
fimuls
stc
inc
mov
leave
xchg
pushl
js
pop
cwtl
das
int
push
or
inc
lea
hlt
je
adc
or
fildl
dec
dec
cmp
test
cmp
clc
cmp
lods
mov
jb
repz
mov
dec
in
xchg
aad
push
lahf
loop
lods
in
push
aaa
movsl
mov
out
adc
fldl
pop
jl
dec
xor
sbb
jle
enter
push
ds
jb
jp
cwtl
dec
jle
repz
mov
jecxz
pop
cltd
rol
pusha
leave
stc
clc
and
mov
sbb
and
daa
push
push
push
and
inc
mov
and
sbb
out
sub
add
mov
aaa
cmp
cmp
jmp
inc
out
aad
aam
pop
sti
std
mov
xor
cwtl
cld
sub
out
pop
notb
cmp
mov
pop
jmp
push
cmp
loope
push
push
add
mov
inc
aam
es
xchg
jb
cmp
sub
dec
bound
repz
ja
pop
cmp
mov
adc
sub
push
mov
rep
inc
xor
or
push
test
push
ret
das
mov
jbe
mov
hlt
inc
mov
int3
jb
fiaddl
cli
push
cmp
scas
test
cmpsb
xchg
jmp
movsl
loop
jbe,pn
lock
jp
jmp
dec
cmp
mov
cmp
scas
or
push
xchg
insl
inc
jmp
dec
js
mov
in
enter
fisubrl
push
lock
inc
out
out
cmc
insb
mov
outsb
xchg
nop
sub
push
inc
sub
mov
sub
lret
andb
mov
add
outsb
stos
out
xchg
stos
adc
divb
sub
das
pop
popa
add
sbb
cmpsb
xchg
fidivl
addr16
cmp
pop
jnp
ljmp
test
repz
lods
incb
or
sub
cmp
xchg
inc
push
scas
insl
add
mov
adc
mov
xor
shufps
xchg
popa
or
ret
dec
mov
pop
or
add
mov
push
outsb
arpl
pop
jp
jge
loope
aaa
test
mov
mov
and
mov
ljmp
imul
das
mov
shr
hlt
cltd
mov
adcb
mov
xchg
push
loop
movsb
and
cwtl
stc
das
add
mov
mov
push
adc
sub
cli
jp
dec
xchg
hlt
mov
jle
jne
add
or
pop
fst
nop
int
xlat
adc
insb
or
dec
mov
pop
fdivl
std
mov
mov
xor
shlb
fcmovnbe
sbb
pop
xor
cld
xchg
push
cmc
cmp
fnstenv
repz
push
push
cs
lret
aas
mov
lods
push
mov
imull
shlb
xor
popa
jge
pop
cmp
dec
jp
cmp
les
mov
ds
inc
mov
sbb
mov
scas
adc
bound
imul
lods
push
ss
push
and
es
int3
test
in
repnz
dec
mov
pusha
xor
fidivl
cmpl
lods
adc
lret
or
inc
jge
or
stc
inc
adc
jp
sbb
adc
inc
insl
mov
xchg
pop
pushf
xor
add
push
outsb
sbbl
sub
bound
call
xchg
mov
popf
xchg
mov
hlt
sbb
rcl
dec
and
mov
add
out
pushf
iret
enter
add
gs
cmc
stos
icebp
push
loope
cmp
adc
enter
xchg
out
aaa
mov
in
je
and
jg
jl
icebp
notl
cmp
repz
mov
dec
enter
xor
jecxz
cld
ret
mov
cmpsb
adc
push
mov
loopne
xlat
mov
push
rorb
repz
xor
xchg
cmc
xchg
movsb
sub
add
cs
mov
lret
test
dec
mov
add
popa
xor
push
in
sti
xor
mov
push
fnsave
insl
xchg
out
mov
mov
imul
repz
xor
bound
add
inc
movsl
sbb
arpl
push
test
data16
sub
jecxz
inc
sarl
dec
add
leave
mov
adc
mov
jecxz
jb
lcall
push
out
xchg
xchg
add
mov
icebp
jecxz
test
xchg
jo
clc
popa
mov
test
movsb
inc
adc
or
fdivrs
inc
add
addb
xor
pop
nop
xchg
sbb
xor
clc
in
orb
jmp
inc
xor
les
inc
dec
sub
scas
and
dec
pop
hlt
ss
and
decl
jo
xchg
dec
cmpsl
mov
lcall
ja
pop
add
enter
inc
negb
mov
dec
or
data16
shll
cmp
movsb
adc
mov
xchg
cltd
mov
shl
fmull
xor
stos
fldt
dec
xor
test
andb
adc
sub
cwtl
imul
jae
mov
pop
hlt
imul
xchg
jecxz
rdpmc
sbb
push
fucomi
push
or
scas
mov
push
push
mov
ljmp
xor
outsl
and
cltd
into
jecxz
fcomp
xlat
inc
icebp
in
cmp
fcomps
inc
enter
mov
xchg
adcb
pop
cmp
xor
loopne
mov
jg
scas
out
mov
jecxz
ljmp
fildll
xor
mov
and
dec
xchg
cwtl
lret
out
das
les
and
nop
call
insb
out
fimull
ja
and
mov
and
inc
xchg
adc
mov
push
enter
push
xchg
dec
adc
ja
mov
lahf
movsb
fildl
js
clc
or
sub
mov
aaa
repnz
loope
sub
ficoml
cmp
or
push
imul
and
inc
and
mov
test
and
sub
jmp
push
jno
inc
repnz
mov
dec
int
pop
inc
cmp
mov
lock
cmp
cmp
cmp
divb
fisttpl
and
add
pop
sbb
jno
cmpb
cltd
push
dec
xchg
shl
mov
fimuls
inc
mov
addb
filds
test
jnp
test
shl
mulb
add
adcb
test
mov
stos
fdiv
rol
sub
dec
cmpsl
enter
xor
cltd
daa
stos
fidivrl
stos
imul
jbe
das
ljmp
dec
mov
and
mov
ror
sbb
jne
test
ret
pusha
lret
dec
and
shr
dec
sub
mov
iret
or
mov
inc
mov
sbb
sub
xor
outsl
das
cmp
gs
sbb
add
sub
inc
mov
arpl
in
sahf
and
xchg
dec
movsl
cmpsb
in
lods
icebp
lcall
push
xor
mov
xor
push
shll
mov
mov
inc
push
stos
xchg
inc
push
push
ficoms
and
add
pop
dec
or
or
inc
aam
cmc
cmpsb
or
repnz
mov
mov
outsl
mov
inc
hlt
and
dec
or
enter
repz
add
mov
sbb
rol
dec
mov
sub
or
call
cld
pop
enter
mov
cs
rclb
mov
fadd
sub
add
pop
sub
and
aad
shlb
jge
lahf
sub
xor
loopne
cmpsb
sub
ja
xor
ret
test
sbb
xchg
sbb
in
in
jae
repnz
and
xlat
inc
clc
jge
jl
shll
gs
std
jne
lds
pop
ja
imull
add
xchg
add
ret
cmpsl
mov
pop
add
addr16
jno
mov
and
dec
imul
inc
ficoms
ffreep
enter
das
sub
popf
repz
test
rolb
rcll
xor
mov
stos
xor
add
inc
cmpsb
inc
iret
test
in
dec
xchg
jecxz
xchg
inc
leave
test
xor
icebp
cmp
loopne
inc
adc
sub
rorl
jmp
fbstp
adc
fwait
movsb
insb
std
pop
pop
aas
adc
xor
dec
repz
outsl
mov
lahf
add
xchg
sbb
outsl
sarb
popf
mov
clc
inc
mov
int3
std
add
inc
add
mov
repz
adc
cmp
lods
repz
scas
pop
adc
cmp
mov
xor
loop
push
stos
adc
orl
mov
push
loopne
lds
leave
jo
add
iret
cmpsb
shll
fbstp
mov
cmp
movsl
lods
mov
xor
mov
jmp
in
leave
mov
insb
cld
pop
push
mov
xchg
cwtl
add
dec
in
or
outsb
sbb
adc
mov
push
rclb
jb
popf
mov
cli
aas
add
xor
jecxz
mov
mov
cmp
jg
pop
shll
lcall
scas
rol
pop
clc
and
add
mov
jnp
out
pop
push
lock
stos
adc
sub
jno
inc
jmp
shl
cs
cmp
addb
pop
push
imul
test
xor
inc
mov
mov
rcrl
insl
int
mov
ss
pop
fadd
sbb
addl
xchg
mov
pop
push
bound
leave
inc
or
xchg
out
mov
mov
mov
mov
outsl
or
es
xchg
pushf
int
xor
dec
shl
in
shll
jns
in
addr16
sbb
enter
pop
pushf
xor
jns
stos
es
bound
xchg
lods
dec
sub
leave
rolb
popa
fsubs
mov
stos
xchg
mov
clc
arpl
inc
adc
jnp
jae
push
jne
xchg
jae
add
jbe
inc
mov
mov
inc
xchg
movsl
mov
pop
jp
out
mov
test
rorb
and
mov
loope
sbb
loop
test
jo
inc
test
and
popf
mov
std
out
xor
jo
shrl
nop
cmp
arpl
fidivl
lods
and
fcomps
int3
lcall
aaa
push
repnz
mov
sbb
inc
sbb
test
lods
enter
mov
mov
loope
lret
pushf
adc
mov
unpckhps
testb
xor
imul
cld
inc
rcrl
adc
leave
pushf
adc
dec
popf
push
push
test
adc
pop
sti
sbb
push
pop
test
or
out
xor
xchg
arpl
add
xor
aaa
push
jb
inc
mov
xor
loop
andb
jg
adc
xorb
jnp
rol
arpl
dec
fwait
dec
sbb
aad
xor
adc
and
cmp
gs
mov
adc
jmp
leave
mov
mov
inc
out
sub
inc
outsl
test
mov
pushl
xlat
cmp
in
lock
xchg
jp
xchg
ss
aas
icebp
test
setp
stos
rcrl
icebp
sub
jmp
adc
jmp
testb
pop
xor
add
mov
dec
cmp
out
sbbl
outsb
scas
push
sbb
sub
in
stos
pusha
jp
add
out
jnp
jb
adc
arpl
inc
rcr
jp
jge
stos
sbb
add
mov
xchg
rcr
iret
mov
dec
test
divl
fisttpl
pop
movsl
push
xchg
push
xor
pcmpeqd
mov
mov
movsb
dec
adc
sahf
jbe
xor
pop
pop
cmpsw
push
jns
insb
les
rol
fs
in
pop
aaa
filds
add
mov
imul
jge
mov
lock
pop
sub
sbb
insl
sub
cmpsl
xchg
push
cwtl
jnp
or
mov
and
sub
dec
inc
cmp
nop
add
add
add
aam
in
outsl
push
stc
xor
dec
rcl
lds
ds
sub
adc
xchg
add
xor
or
dec
sub
pop
dec
xchg
ds
mov
push
push
out
test
jno
fmuls
sbb
push
adc
gs
mov
repz
push
inc
adc
fidivrl
popa
mov
loopne
lcall
popa
push
mov
jmp
bound
mov
sub
inc
imul
loop
adc
stos
loop
decb
out
push
inc
cmp
cmp
cwtl
jno
in
rclb
in
cli
stos
pop
test
xchg
push
repnz
mov
lods
inc
dec
pop
push
mov
push
or
mov
adc
stos
sbb
je
adc
mov
in
movsb
clc
lods
sbb
pusha
cmp
mov
lcall
sarl
int
sub
dec
or
jmp
xor
sbb
stos
sub
bound
pop
loope
jo
adcl
aas
push
push
inc
add
push
add
scas
outsb
daa
int3
xchg
shrl
mov
and
jno
ret
movsb
lea
fldl
dec
sarl
mov
mov
mov
out
aam
imull
cmp
movsb
jnp
in
lret
pop
mov
mov
mov
rcrl
fcmovb
movb
lahf
push
arpl
mov
ljmp
lret
stc
ret
dec
cmp
lahf
inc
nop
fnstenv
xchg
popf
into
adc
ds
popa
outsl
lods
xchg
lods
lock
add
pushf
or
pop
std
add
call
sbb
push
shrb
dec
aam
popl
or
push
mov
jge
mov
fbld
inc
and
sub
inc
insl
int
cld
addr16
in
insb
jle
inc
ja
ss
clc
push
andl
cli
sti
shll
mov
js
ljmp
movsl
mov
clc
daa
xchg
aas
call
cmp
pop
cmp
inc
cli
movsl
lock
mov
fdivs
loop
repnz
js
test
mov
lock
sahf
mov
or
sub
mov
lock
xlat
cmp
lea
mov
ret
or
push
pop
adc
imulb
dec
jb
rorl
pusha
movq
inc
std
mov
lcall
dec
pop
push
mov
jmp
jle
xor
xor
add
loope
imul
fsubl
test
in
jle
fcmovne
cmc
mov
nop
adc
jp
mov
out
xchg
jecxz
mov
sbb
jb
repnz
stos
int
cmp
mov
test
cs
xchg
imull
fists
data16
addr16
pop
mov
loope
orb
xchg
test
mov
dec
xor
cmp
xor
aam
lea
popa
out
pop
pop
fs
push
lcall
lea
sbb
jl
call
in
jmp
sbbl
add
mov
xor
pop
jp
insb
cmp
dec
adc
in
cmp
mov
imul
aaa
in
adc
mov
movsl
push
movl
mov
into
call
jecxz
data16
fcom
pop
adc
test
xchg
cmpsb
out
test
xchg
mov
xor
stos
add
scas
aaa
arpl
flds
or
nop
mov
lahf
or
push
dec
xor
cli
cmp
xchg
adc
out
jbe
es
xor
cmp
repz
cmp
lock
dec
es
adc
jle
mov
cmp
mov
daa
jae
jo
lds
dec
rcrl
or
enter
sbb
jl
es
ret
inc
xor
ljmp
fiaddl
je
in
push
push
int3
inc
xorb
jnp
shlb
das
jne
jbe
and
mov
stos
jbe
jbe
fs
fstl
aam
pushf
lcall
negl
mov
pop
mov
pop
pop
lahf
das
mov
push
xchg
jle
mov
aam
sbb
push
data16
lds
clc
mov
or
add
pop
jecxz
iret
mov
out
push
xor
je
xchg
lods
int3
cltd
mov
push
mov
sub
cs
mov
jge
repnz
imul
std
mov
cwtl
dec
outsb
mov
or
subb
jl
mulb
mov
xor
mov
cmovge
imul
pop
std
xor
jbe
dec
or
arpl
push
adc
mov
push
negl
pop
das
and
fsts
adc
cmp
lock
lret
or
xlat
ret
adc
call
fsubrs
sub
pop
jno
jns
cmp
mov
ljmp
aad
divl
or
cli
int
or
call
push
dec
add
iret
pop
mov
ss
xchg
mov
sbb
push
leave
je
cmp
push
cld
stos
dec
jg
pop
cld
xchg
push
mov
xor
xor
aad
jne
jge
aas
push
idivl
iret
outsl
cmc
sub
dec
insl
in
sub
or
sbb
outsb
mov
idivl
push
decl
cs
cmpsl
mov
jl
mul
or
inc
dec
or
xchg
add
mov
cmpsb
mov
cwtl
xchg
sub
sbb
and
fcmovne
dec
rcrb
popf
insl
push
jae
int3
in
dec
push
les
adc
inc
fsubs
ss
enter
pop
and
fcmovnbe
dec
jns
dec
lret
std
sahf
and
cmpsb
jns
dec
xchg
dec
sbb
sub
jnp
adc
inc
pop
outsb
cltd
push
clc
in
mov
adc
dec
leave
test
xorl
push
pop
ret
cs
int
cli
adc
sti
orb
dec
je
lret
xchg
cmp
adc
test
or
xchg
mov
add
icebp
jae
cld
xchg
and
into
ss
cmpsl
mov
dec
dec
dec
pop
xchg
sti
js
hlt
xchg
lods
adc
lcall
mov
push
inc
out
jmp
ret
sti
and
iret
std
jnp
xchg
test
ds
xor
add
clc
stos
pop
jb
add
jmp
fisubrs
stos
lret
ds
fcoml
repz
scas
sub
mov
mov
push
adc
jl
inc
repz
dec
inc
adc
loop
cwtl
mov
lea
mov
xorl
mov
jl
loope
loopne
rcrb
xchg
pop
loop
fwait
mov
imul
addr16
jmp
xor
xor
addr16
mov
fcompp
cmp
imul
and
les
inc
or
pop
cs
adc
adc
pop
aas
icebp
jg
hlt
pop
jns
out
and
dec
mov
xor
and
and
jge
scas
pop
shl
push
shlb
sbbb
mov
jbe
dec
faddp
pop
cwtl
adc
lret
fadd
jmp
pop
xchg
jne
mov
pop
push
push
in
cli
jnp
xor
jae
fwait
adc
cmp
mov
call
cmp
test
mov
adc
jmp
xor
movsb
mov
add
in
cmp
inc
lcall
push
ss
jle
insb
pop
mov
enter
jne
pop
stos
fwait
enter
mov
lret
mov
fadds
insl
adc
mov
or
xchg
or
xorl
mov
xor
lret
stc
push
jp
cwtl
push
and
mov
pop
mov
xor
mov
repnz
mov
ret
ds
push
fisubrs
test
xchg
mov
jo
and
divl
mov
pop
fstpl
mov
push
cmp
inc
test
mov
int3
push
cmpsb
int3
mov
inc
push
aad
adc
add
sub
inc
daa
addl
into
add
adcb
and
arpl
stos
mov
jle
loope
in
mov
out
push
movsb
adc
mov
cld
jnp
mov
faddl
fisubrs
adc
adc
jl
lods
add
fadds
xlat
data16
fwait
addl
add
cmc
loop
mov
xchg
xchg
xor
daa
sub
aad
incl
mov
rcll
faddp
into
out
jns
leave
dec
mov
aam
push
lret
std
les
ret
test
mov
cmp
lret
out
push
imul
pop
mov
mov
add
nop
in
mov
jcxz
mov
pop
sbb
jl,pt
test
and
mov
lahf
scas
mov
mov
sbb
jbe
aas
xchg
lret
jle
loope
test
or
test
xlat
sbb
icebp
inc
out
mov
mov
into
lock
or
push
jmp
popa
jmp
pop
std
push
lods
or
icebp
bound
call
adc
xor
jb
ja
iret
js
lods
push
orb
jno
test
or
xor
or
or
stos
cwtl
ss
push
xor
cltd
xchg
add
outsl
fcoms
imul
je
xchg
scas
mov
cmp
jg
fisubl
sbb
cltd
sub
mov
adc
ret
jne
jp
fmull
shrb
pop
in
lahf
call
mov
and
into
inc
mov
pop
push
inc
inc
imul
movsl
test
jno
mov
pop
push
or
pop
jl
push
mov
pop
int
lods
xchg
fsubs
cmp
jbe
xchg
jbe
pop
dec
mov
inc
pop
popf
cmc
fimuls
jne
pop
pushl
stc
add
mov
adc
cmp
inc
inc
clc
xor
xchg
ret
and
ljmp
xor
and
nop
and
push
mov
sahf
ficompl
inc
push
or
and
inc
jecxz
or
mov
es
xor
mov
call
jg
popa
adc
rcrl
bound
jno
jnp
push
aas
push
jnp
dec
push
cmp
add
in
sbb
push
pop
xor
push
js
rolb
shrl
jecxz
jns
lret
sbb
xor
je
testl
inc
jns
cwtl
lods
out
insl
inc
mov
push
xchg
js
xchg
and
cmp
sarb
ds
cmp
cmp
imul
aad
js
and
cld
adc
push
sahf
push
jp
dec
lahf
imul
jmp
les
jle
mov
mov
mov
push
sbb
inc
mov
cmp
fiaddl
std
rcrl
xor
mov
mov
aad
dec
aam
pop
cmp
ret
sahf
mov
cltd
pop
lcall
cmp
xor
stos
mov
and
cmp
mov
sti
mov
fisubrl
outsl
es
aad
loop
lock
pop
outsl
xor
stos
andb
aas
test
std
je
sbb
xchg
mov
pop
outsl
mov
xor
ljmp
mov
sahf
lock
testl
je
cmp
mov
pop
xchg
arpl
movsb
pop
push
ficompl
lock
mov
mov
into
sub
cmc
xor
mov
pop
pop
cld
adc
lahf
stos
js
mov
cvtdq2ps
fucom
test
sbb
ja
jecxz
adc
ror
jecxz
and
mov
mov
or
pop
adc
fwait
and
fs
jmp
subb
mov
pop
inc
xchg
push
push
sbb
mov
mov
xchg
xchg
popf
xchg
cmp
mov
and
rcr
ss
clc
inc
push
loope
out
add
into
arpl
insl
add
cld
addl
loopne
xlat
adc
inc
fcomp
in
rol
pop
push
mov
inc
ret
iret
add
inc
sti
add
mov
mov
cmpsl
in
add
shl
jne
pop
je
ret
sub
test
and
mov
mov
adc
call
insb
inc
mov
loop
dec
mov
fadds
xor
lods
adc
loope
mov
jecxz
int3
mov
and
insb
jo
xchg
inc
cs
push
stos
or
loop
pop
push
in
or
dec
mov
aam
sbb
ds
inc
or
pop
das
push
test
adc
jae
fistpl
pop
cmp
push
in
movsl
jmp
cmpb
xchg
mov
int3
aas
add
xor
jl
dec
stc
fmull
cmp
xchg
xchg
inc
in
into
jmp
sbb
xor
jge
cmpsl
mov
mov
adcl
movsb
fwait
lcall
and
lea
adc
add
jg
adc
cmp
mov
je
orl
insb
in
pop
mulb
scas
test
jmp
xchg
or
insb
pusha
push
arpl
mov
jmp
jnp
outsb
xchg
inc
pop
dec
sar
pop
int
lcall
nop
scas
pop
ret
xchg
pop
pop
and
mov
mov
pusha
xchg
jmp
xor
pop
and
lods
jmp
sbb
push
das
mov
test
lea
rcrl
mov
mov
fnstsw
lods
jne
jno
and
or
cmp
sar
inc
test
out
stos
mov
pop
mulb
push
lretw
mov
lea
adc
shll
insb
add
pop
mov
mov
dec
cmc
fcoml
cmp
dec
add
push
cltd
insb
in
icebp
test
lcall
psraw
int3
cmpsl
inc
loop
out
mov
pop
rcrb
push
sbb
dec
dec
lods
or
mov
fcmovbe
push
add
dec
mov
mov
cmc
daa
jnp
mov
gs
out
add
pusha
mov
mov
mov
adc
dec
fwait
mov
mov
scas
addl
mov
enter
mov
jns
mov
enter
mov
test
fstpl
mov
mov
mov
push
sub
out
stc
rorl
mov
fwait
hlt
int
cmp
inc
or
and
loopne
dec
add
imul
jmp
xor
imul
fwait
imul
sbb
and
insl
fstpl
enter
mov
mov
mov
inc
add
insl
std
loop
cld
cltd
nop
push
xor
mov
add
aam
inc
mov
pop
dec
imul
add
repnz
push
sahf
icebp
ljmp
jp
sbb
inc
adc
imul
inc
stc
add
sbb
mov
loope
pop
xchg
cmp
fs
jo
adc
lcall
adc
or
cmpsl
adc
mov
rcr
fnstcw
outsl
jo
gs
les
addr16
jbe
cs
popf
fs
jp
cmc
ror
popf
test
ljmp
out
cmpsl
sbb
popa
std
jge
inc
sti
insb
shl
xchg
loop
outsb
and
das
dec
ficomps
mov
add
xlat
and
pop
nop
insl
xor
repnz
mov
dec
mov
push
or
cmp
andl
decl
sbb
sub
in
scas
mov
orl
idivb
xor
mov
cmpb
and
dec
cmpsb
loop
adc
mov
mov
ret
add
adc
mov
andl
cld
aaa
jo
es
xorb
loope
sahf
push
cld
jns
daa
push
mov
sub
adc
jmp
repnz
mov
test
sbb
sahf
xor
inc
pop
xchg
stc
sbb
sub
dec
sub
push
sub
xchg
ret
outsl
pushf
rcl
inc
fdivp
call
xchg
xchg
sahf
test
xchg
imul
xchg
jnp
in
dec
inc
lock
mov
jb
popa
lret
sbbl
icebp
mov
xor
addr16
xchg
jecxz
mov
inc
inc
shl
and
insb
xor
xchg
rorb
data16
lret
insl
fwait
xchg
ss
scas
adc
mov
imul
movsb
rclb
mov
in
sbb
incb
mov
mov
cltd
out
pop
inc
gs
es
add
cmpsb
inc
nop
or
add
out
nop
xchg
shlb
fwait
loopne
xchg
push
jecxz
imul
loop
fwait
mov
jle
ss
add
push
mov
sbb
lret
add
pop
and
pop
nop
cltd
movaps
repnz
push
jmp
push
jae
movsl
aad
lock
and
andl
xor
imul
sbb
pushf
jb
sub
mov
leave
std
wbinvd
sbb
aad
mov
sahf
and
inc
lock
bound
push
test
daa
ljmp
outsl
js
outsb
dec
adc
lods
or
insb
pop
push
push
pop
push
mov
push
je
xchg
xchg
cmp
inc
pop
add
xor
dec
inc
outsl
ljmp
mov
test
inc
push
or
out
xor
test
mov
jnp
fcomps
mov
loopne
pop
clc
inc
xchg
push
sbb
or
imul
or
sti
and
sub
xchg
adc
push
movsb
push
stos
cmp
movsl
je
cltd
fldenv
dec
and
inc
cld
insl
sbb
sahf
push
pop
mov
push
dec
jae
es
xchg
fidivl
mov
aas
or
jne
push
mov
sub
aam
and
jbe
mov
inc
pop
adc
leave
and
cld
jg
gs
lret
mov
inc
jg
or
fcmovbe
jne
lahf
pop
ficoml
push
or
add
outsl
test
inc
sahf
dec
daa
andb
cltd
xor
popa
cltd
js
jo
out
pop
xor
lret
mov
inc
pop
addr16
inc
or
xchg
int
lea
mov
aad
mov
inc
push
loope
pusha
xor
and
mov
popf
stc
stc
clc
sbb
jbe
stos
addr16
jge
mov
mov
or
es
hlt
or
adc
fbstp
ja
mov
test
cwtl
pop
and
push
lods
ret
stos
out
add
out
inc
sarb
jl
pop
fdivs
loop
stos
loop
inc
movl
cmp
pop
int
imul
or
xor
rorl
sbb
xor
jl
pop
repz
and
dec
adc
pop
out
pop
push
mov
repz
out
mov
cmpsb
mov
lods
notl
pop
and
sub
adc
dec
loope
add
cwtl
mov
fisttpll
lock
and
adc
push
sub
push
pop
mov
test
into
stos
or
andl
insb
roll
lea
pop
aas
sbbl
or
jp
mov
notb
pushf
xchg
sbb
push
jl
je
mov
stos
fs
mov
shll
cltd
cs
movsl
xlat
inc
and
mov
and
dec
sub
std
lods
xchg
pop
pop
cwtl
and
daa
ret
movsb
lcall
push
in
lcall
mov
repz
xchg
cmpsl
pop
mov
sub
pop
sub
sar
mov
xchg
fincstp
sub
ror
xchg
xlat
lret
mov
fistpl
in
shr
std
push
jns
inc
and
dec
orl
push
pop
inc
loopne
and
rcl
cld
sbb
add
data16
shlb
test
and
sub
sub
shll
jbe
mov
in
mov
and
icebp
scas
push
push
ret
mov
andl
add
rorl
mov
xor
insl
inc
adc
push
xchg
in
scas
push
sbb
cltd
dec
loop
add
int
xchg
ja
or
sahf
je
dec
arpl
xchg
mov
add
push
call
push
cmp
pop
insb
push
scas
push
arpl
insl
pusha
in
xchg
pminsw
jb
cmc
insb
pop
and
ja
dec
pop
loop
xchg
mov
addr16
inc
jecxz
ds
repnz
inc
mov
fwait
repnz
lods
jle
lret
hlt
mov
fstpl
dec
in
push
jecxz
leave
in
mov
mov
movsb
inc
dec
in
jmp
jno
jp
jns
imul
fwait
cmpsb
imulb
je,pt
in
push
adc
dec
mov
sbb
and
fcmove
fnop
xchg
inc
mulb
or
lds
loop
js
int
or
jb
dec
mov
jle
xchg
and
sbb
xor
pop
xor
in
inc
mov
and
cmp
add
inc
popf
gs
xor
or
mov
inc
inc
jne
insl
in
dec
cli
jge
push
xchg
sti
jae
divb
pop
imul
notl
mov
insb
pushf
bound
push
mov
jb
loop
test
nop
shl
test
fisubl
add
gs
test
cli
dec
js
cmp
cmp
cmp
push
mov
sahf
pop
rcrb
xchg
out
sti
ds
repz
ret
mov
ret
fs
xorb
jge
lock
push
outsb
rorl
add
mov
cltd
xchg
adc
cli
mov
dec
scas
adc
hlt
sbb
push
je
and
lods
jne
xchg
sub
stc
xchg
xor
nop
int3
test
and
mov
add
xchg
imull
xchg
dec
push
sbb
pop
negl
sbb
aam
daa
cmp
cmp
push
push
mov
push
in
ljmp
dec
push
fstl
and
loope
sbb
lcall
inc
pop
pop
mov
adc
push
and
ja
negl
jl
std
xlat
js
adc
xor
adc
mov
dec
pop
rcrl
data16
stos
sub
sbb
in
pop
lea
add
sub
jae
bound
push
andb
push
jne
hlt
es
sar
addr16
pop
ret
inc
iret
jno
pop
and
mov
push
push
pop
mov
xchg
fildl
xlat
xor
clc
mov
fisttpll
int3
in
add
lock
in
sbb
xor
push
pop
fwait
pop
cwtl
inc
imul
xchg
std
scas
fucom
adc
xchg
dec
jae
sbb
test
inc
ficoms
xchg
or
push
add
mov
insl
and
jo
cmp
pop
push
or
hlt
mov
sub
inc
pusha
andb
rolb
jmp
out
rclb
aas
push
lret
add
dec
addb
push
jle
push
dec
nop
lock
push
xor
enter
cmc
xchg
scas
xchg
sbb
or
cwtl
pop
pop
mov
notl
mov
fldenv
mov
mov
mov
jle
cltd
rorb
pop
mov
scas
out
lcall
cmpsb
fdivp
mov
lcall
or
push
int3
pop
adc
andb
mov
and
test
xchg
push
cmp
std
cmp
mov
cmp
adc
cld
pop
test
popa
push
and
ds
xor
rclb
in
push
lcall
nop
jne
mov
rcl
popa
mov
loop
fnstcw
jns
jno
fnstcw
sbb
enter
dec
xor
push
ror
jae
xchg
rcrb
in
fsubl
scas
add
xor
mov
mov
cli
mov
movsb
mov
or
dec
lcall
mov
mov
and
jmp
cmp
cmp
mov
adc
xor
lods
jnp
push
jmp
xlat
adc
dec
xlat
gs
je
push
inc
jbe
nop
and
and
cmc
loopne
jl
cwtl
cmpsl
mov
negl
xor
dec
adc
ja
insb
idivl
outsl
out
jl
xchg
stos
data16
bound
jl
or
cs
imulb
mov
mov
pushf
scas
jg
lahf
aas
dec
int3
popf
enter
push
les
ss
lcall
or
mov
shlb
jns
jmp
dec
inc
xor
fldenv
loopne
sub
jge
mov
popf
mov
sub
popa
outsl
cmc
rcl
push
mov
jl
mov
jecxz
adcb
or
mov
dec
repnz
xor
lods
sbb
insb
mov
rcrl
imul
out
inc
pop
daa
adc
pop
and
pop
pop
jg
inc
mov
adc
add
and
daa
and
mov
outsl
scas
push
aas
mov
mov
pushf
inc
int3
cs
inc
in
jb
lea
push
in
xor
jmp
xchg
and
inc
rolb
sbb
mov
xchg
insb
inc
popa
insl
sub
out
movsl
mov
mov
test
sub
cmpsb
jnp
lea
ljmp
mov
vmaxps
xor
fdivr
fimull
dec
ret
imul
pop
and
testb
jno
push
adc
dec
or
xchg
sbb
add
mov
fisttpll
out
out
cmpsl
out
mov
je
cmp
fdivrp
shrb
cmp
out
xchg
and
mov
add
gs
sub
inc
pop
jge
push
cmp
push
clc
xchg
in
stos
fisubl
cmpsb
pushl
cmp
jae
movsl
fcmovnu
xor
ljmp
xlat
cmp
inc
shlb
adc
in
fwait
nop
push
push
bound
fiadds
out
sub
lods
and
sahf
scas
bound
ret
fnstenv
ss
add
hlt
int
jns
fs
insl
and
pushf
push
xchg
inc
int
jl
sahf
cmc
mov
xchg
mov
xor
jo
addr16
inc
inc
xchg
test
jl
jge
push
jecxz
fiaddl
pushl
mov
mov
sbbl
aad
push
adc
fwait
pop
push
fcmove
cmpl
movsl
sbb
or
cmp
mov
popf
push
nop
adc
stos
jmp
mov
sub
inc
sbb
dec
pop
jo
cli
mov
push
cmp
addr16
pop
test
sarb
les
xchg
ffree
xchg
in
add
pop
jno
push
cmc
mov
int
mov
aam
mov
lret
sbb
jbe
cwtl
cld
fimull
repnz
dec
jns
xchg
mov
mov
or
xchg
aas
mov
mov
inc
xchg
or
icebp
movsl
mov
sbb
or
repnz
mov
roll
cmp
and
push
mov
arpl
inc
push
xor
jge
xor
sub
sub
push
pop
insl
lea
inc
aas
push
fdivl
pushf
cltd
enter
jl
push
or
push
mov
pop
jb
in
xor
adc
bound
aad
bound
add
cmp
scas
out
or
stc
push
bound
int
cli
xchg
lock
push
pop
adc
or
xor
dec
call
shll
pop
mov
add
dec
testl
sub
inc
jae
mov
es
cmp
mov
std
mov
pusha
iret
jb
mov
leave
cmp
inc
jo
jns
sbb
aaa
leave
push
push
aad
addb
jle
jno
push
mov
out
xchg
inc
movsl
in
xchg
sbb
sub
cmp
xlat
out
xor
cmp
imul
pop
test
cld
popa
out
roll
push
mov
test
mov
jnp
add
mov
pop
pop
xchg
aaa
mov
jbe
mov
aaa
adc
hlt
stos
pop
pop
inc
fucom
out
pop
add
jo
ret
fdivr
popf
leave
fsubs
mov
shlb
ljmp
xchg
loop
mov
sbb
ret
or
ljmp
sarb
notl
cmp
dec
sub
lds
sbb
push
or
mov
sarb
and
mov
cltd
jge
xor
out
jbe
cmp
repnz
pop
shl
push
test
mov
mov
cmpsl
movsl
add
jle
ret
mov
dec
js
jge
pop
mov
test
dec
sbb
mov
insl
and
pop
test
jg
imul
pushf
fiaddl
inc
mov
jge
lahf
mov
inc
cmp
cmp
insb
push
test
sub
sbb
addr16
add
or
push
das
xor
or
pop
inc
adc
adc
lock
decl
xchg
pop
inc
fcoms
test
cld
inc
ss
js
sbbl
test
subb
movsl
pop
mov
rolb
pop
jb
iret
pusha
sbb
subl
pop
push
fldl2t
lret
andl
mov
inc
mov
fcmovb
adc
test
cmpsl
lret
cli
dec
cli
dec
das
out
cmp
mov
mov
lods
push
dec
loop
sbbl
ret
adc
push
jmp
leave
shll
call
cmp
in
pop
mov
mov
pop
adc
lea
or
rcl
dec
sarb
sub
push
jnp
cmp
movsb
or
pop
jnp
les
push
mov
xor
lahf
xlat
pop
jbe
dec
mov
push
imul
push
sbb
mov
orl
pushf
lds
clc
push
int3
movsb
movsb
xor
fwait
jmp
jno
arpl
movsl
or
movsbl
imul
adc
mov
pop
stc
das
dec
dec
jmp
xlat
daa
addr16
pop
mov
mov
lods
xchg
sub
popf
sbb
mov
xchg
mov
cmp
inc
dec
sub
adc
lds
sbb
or
xor
xor
mov
jecxz
and
icebp
std
mov
pusha
popf
jno
mov
loopne
xchg
divb
stos
or
lds
imul
call
mov
test
ret
sbb
inc
push
fldcw
das
xchg
pop
add
jno,pn
test
sub
ljmp
pop
rol
hlt
cmpsb
sbb
jb
jo
test
ds
mov
mov
pop
or
mov
mov
mov
jo
hlt
or
dec
xchg
add
jne
push
fbstp
lcall
fmull
ret
repz
mov
aas
cltd
pop
inc
xchg
sbb
adc
out
jns
sub
pop
sub
std
pop
mov
mov
pop
out
pop
shrl
add
fwait
or
cli
mov
popa
out
inc
fstpt
lret
pop
mov
push
rcrb
push
and
test
dec
mov
mov
cwtl
xor
adc
test
fisttpll
add
pop
xor
addb
gs
and
lret
inc
loope
push
push
and
pop
je
in
pop
out
sbb
pop
popa
pushf
pop
mov
cmp
inc
lods
jo
dec
or
std
jo
arpl
outsb
push
ret
fcmovu
jbe
adc
jg
ret
ljmp
adc
pusha
jge
pop
or
shrl
and
inc
add
jge
xchg
cli
or
adc
mov
cmpsl
pusha
cltd
adc
dec
lret
add
pop
dec
mov
inc
add
stos
sub
jnp
cmp
ss
jbe
lock
daa
sti
nop
mov
mov
pop
aas
push
popf
or
inc
push
popf
loop
mov
stos
loopne
and
jecxz
in
mov
pop
testl
adc
push
jns
orb
int3
icebp
ret
mov
test
sbb
ret
mov
fistl
rcr
or
xor
inc
xchg
shll
shlb
arpl
negb
clc
ss
sbb
outsb
and
das
adc
imul
mov
xchg
xor
and
jno
aaa
inc
movsl
stc
mov
popf
push
icebp
xchg
mov
add
mov
shrl
in
mov
aam
sbb
in
int
mov
icebp
xor
stos
jnp
xlat
imul
add
lret
in
loope
push
pop
arpl
cmp
push
mov
andnps
inc
ds
xor
xor
mov
lods
lods
popa
cmp
add
xchg
pop
inc
movsl
dec
ja
scas
jne
sbbb
out
movsl
sub
insb
shlb
mov
push
cmp
inc
push
fs
xchg
repz
mov
adc
push
jns
test
scas
lcall
movl
xor
mov
cmpsl
pop
icebp
repnz
sub
add
out
lret
mov
cld
fcoms
mov
aam
or
push
aam
xchg
sbb
fcmove
xchg
dec
mov
inc
sub
sbb
cwtl
pop
pop
imul
mov
cmp
pmaxsw
pop
mov
mov
fistl
cwtl
adc
mov
out
lret
cmp
pusha
or
push
push
and
mov
mov
add
testl
or
mov
ret
xor
inc
sahf
shll
daa
aaa
out
sub
jb
jae
jno
in
jnp
cmp
in
dec
sbb
jp
add
repnz
xchg
adc
push
repnz
mov
dec
stos
in
lret
xor
stos
dec
clc
mov
pop
fs
add
jmp
push
push
cmp
sbb
push
mov
cwtl
fnstenv
add
or
jecxz
enter
shlb
jge
pop
pop
mov
lods
and
xor
les
in
cmc
mov
xchg
dec
xor
add
cmpsb
int3
sbb
aas
mov
subl
mov
aas
ss
repnz
lahf
out
int3
or
lret
jmp
ljmp
mov
adc
aas
mov
ss
xor
mov
sbb
jmp
gs
test
popf
mov
mov
mov
fwait
cmp
push
and
push
lds
xchg
rorb
cmp
stos
sub
dec
add
jns
jg
bound
xlat
jmp
pop
lea
cli
addr16
dec
fwait
push
push
out
mov
mov
xchg
sbb
cs
jle
test
test
scas
pop
push
test
mov
lret
pusha
cmpsl
add
pop
mov
int
pushf
mov
nop
inc
jg
lahf
sub
fldenv
std
daa
subl
sbb
cwtl
sbb
mov
cwtl
mov
mov
stc
jo
dec
lret
xchg
fsts
xor
push
or
and
xor
mov
xchg
into
xrelease
lret
fcoml
sbb
stos
add
mov
sub
push
roll
in
pop
sub
adc
mov
fstp
jge
pop
jl
cmp
dec
mov
shlb
mov
enter
loope
insl
mov
mov
repnz
jb
fwait
pop
sahf
popa
leave
mov
jl
pusha
jae
adc
out
xor
fcomps
dec
push
jl
push
int3
ljmp
notb
into
into
pop
xchg
sti
rclb
cmp
or
mov
stos
inc
jge
vmovq
add
aas
inc
stos
add
repnz
stos
sbb
sti
mov
lods
sbb
sub
shrl
stc
cmp
imull
mov
adc
pop
xlat
test
xor
mov
mov
movsb
inc
adc
mov
lcall
inc
pop
lods
push
leave
pop
pop
adc
out
fincstp
and
lods
pop
std
test
inc
in
rorl
adc
fldenv
in
pop
jge
insl
movsl
aas
push
rep
lret
push
cmp
stos
test
adc
stos
push
dec
cmp
lcall
xchg
addr16
xchg
aaa
xchg
cmp
or
ss
dec
xor
mov
pop
fisubl
add
jo
inc
and
popf
pop
pop
dec
lea
popa
data16
xchg
cmc
xor
vpextrw
lds
fldenv
or
dec
aam
adc
or
int3
nop
add
dec
scas
jp
test
test
arpl
stos
inc
lock
xor
daa
shl
faddl
sbb
mov
jae
fwait
call
loopne
pop
test
pop
scas
loope
test
mov
push
ret
es
fstpl
mov
or
dec
push
cmp
sahf
jg
sbb
sbb
and
push
ja
jmp
add
leave
dec
pop
mov
jb
xor
aam
inc
sub
fwait
arpl
pop
mov
xchg
dec
mov
cmc
inc
sbb
cmp
dec
dec
add
push
mov
shr
fnstenv
lcall
adc
xchg
shll
and
out
repz
pop
inc
test
add
mov
xor
fnstsw
add
or
xlat
pop
mov
mov
insl
repz
inc
mov
lods
in
sub
cmp
mov
mov
cmpsl
sarl
int
jno
mov
adc
daa
push
subb
mov
add
mov
mov
test
or
pop
dec
xchg
jl
push
arpl
push
mov
adc
ds
sub
fbstp
xchg
sti
push
mov
in
cmpsb
lea
lods
in
xor
or
test
popa
into
or
test
jne
jns
mov
lock
mov
inc
sub
loopne
std
pop
dec
add
mov
test
cmp
inc
stc
mov
or
jbe
mov
mov
stos
add
xchg
mov
and
and
or
sub
push
inc
push
das
lds
rorb
outsb
test
repz
push
xchg
test
int3
sub
testl
pop
cmp
into
aad
into
lods
mov
adc
hlt
fbstp
mov
popf
aas
lods
mov
mov
cmp
in
loop
jb
mov
mov
lods
sbb
lock
jbe
mov
test
fnstcw
inc
je
out
jns
pop
mov
cmpsb
mov
cmp
fsubp
push
lds
lret
pop
xchg
sahf
push
daa
jl
push
jno
mov
aas
add
ret
mov
push
stc
and
aam
adc
outsb
hlt
xchg
les
test
dec
hlt
cmp
mov
mov
mov
mov
mov
into
bound
mov
ficoml
cmp
in
stos
lds
outsl
loopne
and
mov
jno
sbb
xchg
push
xorl
xor
push
cli
adc
aad
xchg
test
mov
pop
aad
ljmp
clc
xchg
outsb
or
xor
repnz
dec
rcrb
sub
das
jg
jl
scas
mulb
notb
repnz
je
int3
push
xchg
icebp
mov
cmp
cmc
mov
sbb
test
pusha
inc
fldcw
or
js
jge
push
test
out
mov
ds
in
test
sbbb
cltd
subl
xor
aad
leave
fs
es
add
mov
stos
sub
fstpl
jle
jecxz
ret
jo
ds
jecxz
pop
jle
fucomip
inc
ja
cmp
test
pop
jle
mov
sub
jne
sbbl
xchg
shll
fs
jns
pop
aad
imul
ret
fildl
xlat
lock
loopne
js
fbld
and
insb
lret
push
adc
push
icebp
xchg
pop
cmp
ljmp
imul
jmp
lea
test
xchg
int
sub
inc
outsl
imul
jo
adc
adc
ss
cmp
sahf
adc
loope
mov
and
in
pop
mov
add
loopne
jmp
push
call
pushl
xor
and
sarl
push
mov
lods
cmp
sahf
xchg
mov
test
dec
ror
pop
push
or
jno
sbb
mov
ja
ljmp
dec
in
cmp
cli
das
lahf
xchg
pop
ret
jmp
sub
iret
out
roll
adc
clc
insl
stos
cwtl
fstp
lcall
lods
mov
sub
cmp
fistpl
loop
pop
daa
or
inc
cli
arpl
adc
xchg
lcall
ds
fistpll
pop
call
loope
dec
outsb
cmp
daa
mov
test
mov
inc
jo
jp
loop
mov
and
andl
mov
push
sub
outsl
sbb
xor
ret
imul
test
ficomps
aaa
rorb
jo
pop
pop
stc
xchg
push
push
xor
push
data16
push
adc
sbb
mov
jecxz
sbb
xor
lahf
hlt
push
and
dec
aam
test
or
adc
mov
cmp
dec
push
xchg
xchg
arpl
pop
add
push
push
outsb
lods
decb
daa
arpl
or
sub
fisubs
hlt
movb
lea
nop
roll
fld
jnp
filds
ret
cmp
push
inc
iret
leave
lahf
jmp
mov
shrb
jo
lods
lahf
push
pop
adc
fcoml
in
mov
sub
adc
bound
and
hlt
fmuls
out
les
mov
jo
imul
aaa
mov
jns
sbbl
pop
data16
icebp
nop
popf
ss
out
mov
scas
cmpsl
xlat
fstl
mov
mov
sub
sub
aas
mov
jnp
mov
hlt
mov
and
pop
addl
add
aad
stos
repz
idivb
xchg
stc
popf
testb
call
xchg
loope
push
push
jns
mov
cmp
stos
movsb
into
push
test
sub
inc
popa
jne
or
sbb
incb
ja
data16
sbb
stc
push
lcall
ret
lret
cmp
lods
jg
mov
pop
cld
pop
push
mov
dec
xchg
fnsave
ficoms
pushf
push
xchg
daa
push
int
push
cltd
add
jnp
or
shll
mov
cmpsl
dec
mov
sar
jno
cwtl
subl
stos
test
mov
jmp
inc
inc
and
sub
mov
insb
cli
clc
bound
je
dec
out
jnp
movsb
into
inc
sarb
rdtsc
dec
cmp
adc
int
aaa
adc
iret
into
in
imul
mov
mov
jge
add
frstor
dec
and
ret
out
lods
fwait
pop
pushf
shlb
cli
rorl
ljmp
ljmp
test
lret
pop
add
mov
mov
sub
xchg
jb
add
test
ror
sub
add
dec
mov
scas
lahf
add
jl
cmp
rcrl
mov
loope
jb
xchg
cmpsb
jno
jno
jge
out
xor
dec
fimuls
mov
ror
fs
push
and
push
jg
mov
in
cmp
adc
pop
rcrl
adc
xchg
and
lcall
sbb
xor
sbb
mov
mov
xor
jl
adc
outsb
cmp
popf
jo
les
cs
xchg
test
lahf
addb
or
pop
push
sbb
adc
and
cmp
mov
shrl
sub
mov
icebp
lahf
aam
dec
cmp
jl
sti
aas
ret
cmp
lahf
popa
dec
nop
jge
test
dec
push
push
loope
mov
sub
mov
insl
into
pop
in
arpl
loope
cwtl
enter
test
mov
cmpsb
scas
jl
repz
adc
cmc
dec
aas
xchg
repz
jno
outsl
loope
or
xor
test
push
pop
xchg
std
lret
dec
lret
fcmove
mov
xor
out
scas
aam
mov
imul
xchg
jg
ffree
jmp
push
nop
pop
popa
push
or
cmp
pop
push
fldl
xchg
sbb
jb
and
mov
adc
lea
or
inc
ss
out
xlat
dec
push
jmp
fwait
push
jno
jo
hlt
push
push
lea
dec
scas
enter
xor
stos
mov
sub
test
std
push
inc
fldenv
mov
inc
nop
iret
fstps
cmp
fdivl
add
mov
jno
xchg
inc
lcall
popf
jecxz
add
adc
push
mov
mov
insb
iret
adc
and
jge
or
sbb
push
inc
shlb
stos
shlb
stc
and
aas
aam
inc
sub
push
es
jno
imul
mov
aas
cwtl
lock
push
test
mov
adc
sbb
xorb
pop
xor
jecxz
jo
iret
mov
mov
xor
movsl
inc
stos
js
pop
push
push
in
fistpll
sbb
into
flds
xlat
xor
xor
repz
test
push
pop
dec
mov
mov
decl
mov
pop
out
popa
jbe
push
xchg
rcll
aad
mov
insb
pusha
ja
addb
imul
sti
adc
and
popa
aas
pop
xlat
mov
cmp
cmp
lahf
clc
pop
mov
lcall
orb
pop
mov
lcall
cmp
mov
mov
in
scas
out
adc
lds
ljmp
mov
clc
shr
dec
lahf
mov
sarl
or
daa
add
mov
insb
dec
cli
xchg
mov
and
cli
add
movsb
add
push
iret
push
push
cmp
loope
dec
mov
out
arpl
mov
pop
mov
into
pop
out
fdivs
xchg
std
mov
xor
mov
hlt
jl
mov
ret
lret
xchg
cmp
mov
mov
jne
add
and
imul
aaa
adc
jnp
or
roll
imul
ror
push
cmp
out
push
and
bound
imul
xor
call
dec
fwait
mov
popf
lea
push
cs
mov
and
popf
inc
aas
and
fisttpl
pop
cmp
jmp
loop
es
xor
aad
aad
fmulp
push
dec
mov
idivl
in
loopne
je
dec
stos
jbe
loop
add
int3
in
dec
test
mov
push
mov
lock
jmp
mov
lock
inc
test
mov
test
fldl
jle
es
dec
xchg
pop
sahf
and
push
scas
cmp
mov
inc
in
pop
mov
mov
nop
dec
inc
mov
aam
mov
push
pop
or
lcall
pop
or
mov
jb
pop
loop
sbb
mov
cld
or
andb
dec
push
cmp
in
lea
pop
mov
mov
push
arpl
inc
mov
xchg
xor
adc
lds
sub
mov
adc
and
int3
pop
cmpsl
mov
lods
shll
inc
mov
jmp
out
leave
hlt
jno
shrl
and
insb
sarb
push
cmp
dec
in
inc
jmp
outsb
scas
pop
push
sbb
xchg
push
inc
sbb
push
add
rcll
inc
mov
fstpt
call
mov
neg
out
cli
mov
add
rclb
cltd
push
sub
fs
fsubs
mov
dec
sub
test
clc
test
pop
cmp
sub
call
sub
ret
mov
or
inc
fidivl
jbe
inc
inc
mov
add
xor
adc
cmp
adc
daa
sbb
and
xchg
cld
jp
aad
mov
and
adc
push
movsl
dec
mov
in
cmp
cld
scas
inc
xchg
in
out
mov
or
sub
jle
loopne
mov
or
movsl
adc
in
xor
cli
push
jo
push
xchg
mov
call
ret
jmp
lods
jge
and
pop
rep
mov
xchg
adc
jge
lock
push
lret
push
xchg
imul
jp
adc
dec
js
jle
xchg
jbe
dec
rorl
sbb
mov
pop
cmpsb
sub
daa
add
dec
je
mov
jno
jo
adc
loopne
test
mov
sbb
cltd
push
lea
pop
das
and
add
das
or
loopne
jae
push
xchg
pop
xchg
rol
cmp
es
xorl
xchg
push
out
or
mov
mov
inc
push
push
cmp
xchg
sarl
ja
outsl
cmp
cmp
sbb
xchg
cmp
out
adc
xor
xor
sub
lret
nop
scas
cmpsl
jmp
mov
pop
lea
out
cmpsb
mov
adc
addl
adc
stos
sahf
and
mov
daa
push
cltd
cmp
mov
mov
pusha
push
insb
xchg
int3
jg
adcb
cli
sbb
fidivrs
lea
xchg
fucomi
das
jmp
fwait
dec
xlat
pusha
dec
outsl
fbstp
mov
fists
aam
mov
xchg
lock
mov
sub
insl
loopne
test
andb
mov
out
loop
and
je
jno
pop
int3
out
pop
out
pop
xchg
dec
shll
loope
scas
xlat
clc
jg
jae
popf
lds
xorl
jb
jae
loope
inc
test
iret
lret
imul
or
mov
xor
jno
pop
js
aam
scas
test
ss
jbe
and
add
loopne
enter
enter
jns
push
cli
sbb
xor
add
bound
repnz
push
xchg
roll
xchg
sti
inc
jns
xor
pop
dec
pusha
xchg
fildl
add
mov
mov
into
mov
stc
mov
mov
fistpl
mov
loop
fistpll
scas
mov
inc
frstpm(287
mov
pop
xlat
roll
stc
xor
shl
xor
insl
shr
dec
mov
adc
mov
comiss
lds
mov
jmp
mov
inc
stc
dec
mov
inc
stc
jnp
sbb
icebp
inc
xor
xor
es
xchg
call
mov
mov
add
push
xchg
pop
xor
add
lcall
or
loopne
imul
insl
cmp
or
sub
jnp
jp
cmp
sub
shr
hlt
xchg
lock
shlb
imul
adcl
outsb
lock
scas
pop
add
test
or
sub
push
in
shll
pop
xchg
mov
in
std
es
pop
fucomip
loope
fcmovbe
fs
pop
das
push
notl
into
lret
in
stc
popf
imul
add
aam
sub
scas
ret
mov
lock
mov
popf
jno
lret
filds
push
pop
repz
imul
arpl
jecxz
cwtl
xchg
mov
or
xchg
adc
cmc
mov
cld
sbb
jle
mov
xor
adc
inc
rclb
jecxz
add
cmp
ja
or
jbe
leave
jge
mov
mov
cltd
iret
ficoms
pushl
sub
mov
fists
ret
cs
push
or
jmp
aam
rol
inc
xor
popf
sbb
mov
jmp
mov
mov
and
sub
mov
iret
mov
pop
push
dec
out
lret
std
popa
inc
sti
pop
cmp
adc
xchg
rcrb
stc
icebp
into
hlt
ret
ror
adc
jbe
pop
das
ja
out
incb
mov
loop
jae
outsl
movsl
pop
adc
xchg
mov
fstpl
mov
into
dec
imul
mov
call
mov
pop
sbb
mov
ja
jl
cmpsb
data16
out
cmpb
iret
adc
sub
outsl
movsb
mov
shlb
stc
push
mov
shr
lret
add
shr
mov
ret
jecxz
push
cmc
mov
lods
fcoms
lds
cmp
and
mov
shl
or
and
sbb
mov
jecxz
mov
mov
and
nop
mov
jae
into
jnp
data16
xor
adc
lea
bound
shl
cmp
cmp
pop
and
push
xchg
mov
test
add
in
inc
push
inc
xor
inc
rorl
lea
stos
pcmpeqw
bts
xor
int3
decb
sub
and
jnp
cmp
mov
test
pop
xchg
jg
add
in
xchg
shll
xchg
int
in
cmp
pop
add
imul
jae
push
lret
nop
sub
mov
push
push
jge
mov
scas
jge
sub
sarl
mov
mov
das
popl
jmp
jo
shll
jg
sbb
and
or
cmp
sbb
pop
pop
xor
add
and
sbb
insl
adc
outsb
xor
imul
mov
sub
add
xchg
fsubrl
pop
ljmp
movsl
dec
adc
push
add
xchg
or
cmc
mov
pop
cltd
das
jge
pop
sub
in
cmpl
lret
aad
dec
dec
in
pusha
sbb
jns
mov
nop
lds
dec
xchg
pop
dec
jecxz
mov
dec
sbbl
in
dec
inc
inc
mov
push
jmp
int3
pop
in
ja
stos
push
movsl
adc
jnp
add
push
xchg
mov
xchg
imul
pop
fwait
pop
fisttpl
mov
pop
cltd
mov
test
pop
mov
dec
push
xchg
mov
mov
sub
repnz
cmpsl
loop
xchg
outsb
dec
mov
cld
int3
clc
imul
cmc
inc
pshufw
scas
out
dec
ds
sti
xchg
jbe
ja
lds
inc
test
shl
cmp
scas
repnz
lcall
cs
das
popa
dec
ret
cltd
xchg
push
lret
pop
fsubrs
inc
adc
inc
pop
pop
fnsave
rorl
in
sbb
add
sub
pop
scas
cwtl
out
or
fwait
sti
push
shl
push
jne
inc
adc
dec
subl
fwait
cmpsl
imul
adc
adc
jnp
sbb
int
inc
adc
in
cli
insb
push
mov
insb
push
push
adc
add
push
xor
jge
pop
cmp
pop
mov
inc
cmc
mov
sbb
imul
scas
insl
jle
in
add
cmp
jnp
push
arpl
mov
push
daa
lds
shrb
enter
fnstcw
fisubs
imul
rcrb
and
push
xlat
stc
jb
mov
push
das
sbb
push
cmpsb
iret
adc
out
mov
mov
imul
adc
fnstcw
or
push
int3
pusha
lock
sahf
ret
stc
xor
jns
and
jle
inc
test
and
inc
mov
xorb
mov
movsl
ds
xchg
or
pop
shlb
jl
jge
shrl
ja
cmc
push
xchg
pop
lcall
mov
cmp
push
or
pop
js
sub
xchg
lea
and
mov
lds
pop
fstpt
outsb
cld
and
rorb
sahf
mov
jno
pushf
rcrl
cmp
ret
decb
mov
int3
sub
sbbb
mov
int3
insb
das
jl
loopne
nop
lods
mov
jp
stos
jnp
push
inc
shlb
xchg
jmp
fists
mov
xor
cmp
push
faddl
out
lahf
mov
movsb
and
clc
ss
loop
jno
stos
mov
in
pop
dec
lahf
test
jl
cli
ret
adc
shl
stc
push
shrl
mov
fs
ljmp
cmp
cmp
cmp
outsb
push
stos
cmp
scas
dec
pop
add
dec
loopne
push
pop
int3
adc
or
arpl
adc
lds
cli
andb
test
testb
pusha
sbb
mov
iret
pushf
ljmp
lods
test
ret
mov
lods
sub
in
movsl
pop
dec
dec
push
scas
aaa
loope
mov
add
adc
out
insl
inc
and
xchg
out
cmc
scas
mov
nop
mov
jge
mov
je
fmull
adc
sbb
lcall
mov
push
cmp
xlat
mov
test
popf
mov
imul
test
jne
fiaddl
cli
notl
pop
mov
inc
sbb
sbb
dec
bound
inc
push
aam
sub
add
mov
cld
push
lods
xlat
stos
mov
js
jecxz
xor
xlat
xchg
xlat
out
add
ljmp
cmp
cmp
sahf
mov
pop
ljmp
out
xor
cmc
push
insb
orl
inc
pop
inc
icebp
imul
mov
jmp
cli
mov
mov
iret
xchg
dec
sub
ret
mov
js
mov
ret
mov
dec
mov
pop
push
or
shrb
shll
int
add
sbb
jmp
addl
clc
sub
jecxz
adc
stos
jmp
jno
adcb
sub
cmp
rcrl
jl
outsb
imul
fwait
gs
mov
icebp
loopne
mov
lds
mov
inc
push
mov
push
jo
dec
rclb
fidivrs
xorl
dec
add
push
loope
fwait
cmpb
xor
icebp
fs
or
int3
lret
xchg
jge
daa
add
into
out
jo
in
push
testb
push
cmp
push
out
leave
scas
push
push
leave
xor
lds
xchg
shll
cwtl
lahf
jmp
push
in
and
fcom
inc
cmovno
or
test
test
xchg
mov
or
inc
xchg
sbb
mov
andb
movsl
or
dec
inc
or
in
jnp
or
jmp
inc
push
dec
js
pop
lea
mov
sub
jle
xchg
xchg
xor
and
out
fsubr
fs
fsqrt
or
jmp
cli
push
lea
push
inc
mov
das
jmp
clc
or
daa
imul
sub
data16
jb
mov
mov
rcrl
aaa
or
or
jae
orb
dec
cmp
xor
lods
aad
stos
nop
imul
inc
nop
xor
xor
cmp
add
call
mov
nop
and
jle
sar
mov
std
mov
scas
addb
or
cwtl
pop
lcall
sub
sub
xor
out
bound
insl
or
push
sub
pop
dec
stos
pop
int
daa
adc
cli
mov
push
lcall
add
fnstsw
sbb
cmp
ds
and
subb
sub
call
xchg
add
lods
dec
xchg
push
adc
repz
icebp
adc
inc
inc
fcmovnb
enter
mov
sbb
sub
stos
add
ljmp
out
loope
cmp
aam
sub
xor
mov
push
pop
fcoml
adc
cmp
imul
pop
outsl
cmp
out
mov
loopne
mov
jne
xor
movsl
push
popf
xor
ret
int
popa
push
ret
cmpsb
rcrb
jb
mov
lods
das
jl
xchg
or
push
xchg
gs
inc
ss
cld
and
xor
fbstp
aaa
mov
in
pop
fsts
xchg
lret
mov
fwait
jl
ret
add
insb
aam
gs
inc
jbe
lret
lods
rcll
mov
orb
jmp
call
sbb
or
stos
mov
dec
repnz
mov
pop
scas
mov
mov
adc
out
or
icebp
jmp
xor
arpl
ja
mov
xchg
std
pusha
mov
mov
mov
fs
mov
xor
cmpsb
ror
or
inc
add
dec
xlat
mov
ret
mov
and
jecxz
mov
insl
adcb
push
sub
dec
push
in
pop
movb
cmp
dec
mov
xor
fnstsw
mov
ds
mov
add
sahf
dec
mov
add
pop
or
or
pop
sub
inc
mov
insl
dec
jne
add
jbe
jo
outsl
push
sub
lods
push
test
scas
dec
jmp
lahf
ret
dec
cld
inc
push
pusha
xor
imul
dec
and
out
or
out
jecxz
sarb
mov
std
iret
popa
jge
cs
aaa
mov
lds
push
sub
or
jl
test
loopne
or
mov
dec
ds
scas
int3
mov
aas
jg
inc
call
rcll
sub
movsb
leave
push
add
mov
ljmp
stos
addr16
mov
ss
pop
out
dec
push
sti
bound
ret
out
add
aad
xchg
pop
push
xchg
push
add
fists
fwait
jle
add
insb
fistpll
dec
mov
or
call
aaa
lea
push
ja
mov
dec
mulb
lret
push
divb
mov
xor
mov
mov
or
iret
andb
das
xchg
ja
mov
xor
mov
mov
sbb
in
mov
mov
mov
outsb
add
add
inc
sbb
bound
mov
jb
cld
mov
jl
inc
test
int3
inc
and
or
inc
pop
sbb
gs
fcmovb
iret
inc
jbe
stos
shr
cwtl
inc
gs
push
pop
gs
jnp
call
loop
add
divl
fstpl
mov
jnp
sub
cmc
addl
lock
int
shrb
shlb
mul
push
repz
inc
jl
jno
xchg
lret
jmp
mov
sbb
jg
ja
jo
xor
loop
pop
or
pop
mov
fdivrs
cmp
jle
mov
mov
jmp
mov
iret
cs
xchg
pop
xorb
insl
pop
and
ret
xchg
mov
imulb
jae
int3
lret
xlat
cmpsb
add
int
stos
outsl
test
push
jno
pushl
mov
sbb
and
fisttps
cwtl
int3
repz
xchg
jecxz
xorb
pop
fadd
sbb
jecxz
mov
fsin
adc
jo
add
inc
xchg
sub
and
sbb
fildll
mov
dec
fcmovu
lods
dec
cmp
sbb
xor
daa
out
mov
daa
jb
mov
out
addl
scas
shrb
sbb
cmpsb
ds
sub
test
pop
dec
adc
dec
jo
std
aad
mov
xchg
dec
fdivr
cmpsl
aaa
xchg
cltd
mov
jno
cmp
jbe
clc
xchg
mov
jg
out
scas
push
fcomip
pop
xor
lock
mov
push
jecxz
and
sti
xchg
test
in
sbb
xchg
xlat
or
mov
lock
jge
push
mov
mov
xor
cli
out
aaa
jge
push
leave
lds
pop
pop
mov
push
notl
ror
pop
cmp
cmpsb
push
fsts
sub
sbb
in
or
dec
repz
and
int3
cmpl
pop
mov
in
mov
neg
push
jnp
icebp
aam
es
and
int3
loope
pop
and
aas
pop
add
push
fists
pop
and
or
out
xor
mov
inc
mov
movsb
push
insb
decb
icebp
cld
outsl
test
andb
ret
ret
and
sub
iret
dec
lds
jmp
lds
lods
cmpsl
daa
aad
arpl
jns
xor
sub
fcomi
mov
mov
mov
mov
iret
int
cmp
xorb
rorb
clc
movsl
lea
cli
push
jo
mov
stos
cmpsl
in
popa
std
push
dec
dec
jnp
divb
pop
imul
test
scas
cld
sbb
cld
aam
xchg
xchg
lret
daa
shll
mov
xchg
fldt
or
pop
in
jmp
push
push
les
and
fsubp
pop
lock
lods
cmp
inc
mov
mov
cmpsb
and
push
jbe
and
cmc
pushf
data16
mov
lcall
test
pop
repnz
mov
and
scas
adc
jge
jmp
xor
icebp
push
imul
lret
and
push
mull
repnz
dec
mov
xor
xor
mov
push
leave
test
les
pop
jbe
and
sarl
add
or
dec
mov
jb
leave
in
mov
jae
loop
xchg
cmpsb
mov
data16
mov
xchg
and
enter
mov
leave
dec
inc
call
pop
insl
push
ss
stos
cld
pop
cmpsb
sub
or
or
and
or
push
aas
dec
push
sbb
and
insl
dec
xchg
push
cld
std
add
test
mov
jnp
cmpsb
adc
ds
mov
mov
push
sbbl
mov
imul
inc
push
and
and
ljmp
scas
in
and
insb
pop
push
sbb
xchg
ljmp
dec
jno
xor
adc
dec
sub
push
sbb
mov
jne
adc
aad
mov
decl
div
out
testb
in
sub
xchg
adc
cmp
dec
movsl
cmpb
sub
pushf
mov
jnp
cmp
divl
mov
push
jmp
popf
sbb
jmp
xchg
cld
pushf
xor
hlt
mov
add
jae
pop
push
je
pop
mov
cmp
cli
popf
int3
pop
sub
out
push
push
mov
mov
or
int
lcall
jnp
pop
cmp
mov
and
jecxz
dec
stc
push
test
hlt
ja
sub
stos
dec
sar
pop
xor
fwait
pause
xchg
mov
cmp
jo
or
call
test
aam
jnp
test
push
cmp
and
stos
push
scas
testb
adc
mov
cmpb
add
scas
pop
movsb
pushf
push
and
shlb
add
stos
lcall
jne
out
push
push
cmp
mov
cltd
mov
dec
mov
mov
cmpsl
jns
movsl
test
xor
popf
push
add
lret
dec
dec
insl
jne
ficompl
in
add
mov
aas
insb
arpl
test
inc
mov
add
adc
test
lcall
pop
imul
jle
stc
jb
jns
mov
and
and
repnz
or
cmp
push
sub
jge
movsl
xchg
push
pop
faddl
ljmp
cmp
iret
push
cmp
clc
fnstenv
imul
adc
lcall
push
cmpsl
orl
sub
stos
cld
rorb
mov
je
xchg
lahf
inc
dec
mov
xor
jne
into
bound
jg
rolb
int3
and
stos
and
mulb
mov
push
mov
aam
jns
mov
mov
xchg
mov
sbb
sbb
enter
mov
scas
jmp
adc
add
scas
adc
cmpsl
jne
test
shlb
xchg
jg
test
inc
mull
dec
out
fcmovu
popf
mov
push
sbb
or
rorb
xor
test
dec
xchg
add
insb
push
pop
xchg
fmuls
pop
pop
jno
dec
inc
test
cwtl
inc
repnz
es
imul
cmp
mov
rcrb
jmp
or
mov
push
jmp
clc
cmpsl
mov
cmp
cmp
out
pop
lock
movsl
push
shlb
js,pn
lcall
nop
mov
outsb
mov
out
imul
push
pop
cmpsb
sub
test
daa
in
pop
aam
sub
mov
xchg
cmp
in
mov
popl
or
inc
insb
push
mov
lret
add
aam
mov
adc
or
adc
int3
push
sub
outsl
adc
out
and
into
nop
lea
mov
push
pop
xchg
fiadds
iretw
stos
outsl
call
xchg
pminsw
rcl
sbb
pop
pushf
or
negb
pop
add
pusha
xor
push
sbb
xchg
add
lcall
vpsubusb
xorl
lock
sahf
ret
adc
gs
adc
repz
in
cli
div
cmp
xor
shll
or
scas
add
mov
pop
cmpsl
push
popf
xchg
sub
ret
pop
cli
ror
push
mov
adc
fnstcw
mov
mov
stc
sbb
loopne
jmp
add
lods
lcall
xchg
call
mov
sub
je
orb
leave
xchg
sbb
rorl
shrl
inc
push
cmp
cmpsl
scas
shr
inc
js
pusha
movsl
fsts
sbb
adc
imul
loop
mov
push
cltd
xchg
ds
mov
mov
movsb
cld
or
lds
pop
mov
cmpb
lds
cmpsb
cmp
les
inc
jne
fs
aaa
fwait
push
mulb
mov
and
jg
clc
jle
xor
testb
sti
pop
rcrb
cmp
js
jecxz
loopne
sbb
and
lds
or
stc
das
jnp
push
jecxz
leave
insl
mov
ret
sub
leave
ret
inc
dec
int
je
test
sub
fcoml
cmc
push
or
mov
gs
inc
add
andl
jbe
adc
adc
mov
fwait
lods
cli
sbb
je
arpl
into
leave
adc
xchg
pop
jmp
fimull
jmp
mov
jp
jmp
mov
iret
cmp
xchg
cmp
pop
adc
jg
lret
sub
jbe
pop
and
test
fldl
in
es
push
sti
mov
frstor
pop
outsl
fcoms
cli
or
mov
je
mov
out
cs
outsb
insl
aam
xlat
insb
je
pop
test
inc
nop
in
cld
int
addr16
mov
leave
test
inc
cmpsl
mov
inc
adc
sub
push
in
fisttpll
addb
sbbl
leave
imul
sub
or
in
push
adc
push
pusha
push
scas
movsl
jl
std
and
or
jmp
cmpsb
pop
jge
pushf
or
inc
scas
in
sub
in
dec
mov
lods
push
inc
orb
fwait
jnp
sbb
jno
jge
sub
jl
push
shr
hlt
cmp
inc
popf
mov
jns
outsl
adc
subl
out
and
nop
inc
jg
dec
lock
bound
mov
cmpsl
mov
pop
mov
cld
lds
aaa
push
inc
fwait
cs
mov
fsubrl
jb
gs
popa
jnp
inc
jmp
inc
xor
dec
pop
push
dec
test
cmc
clc
push
xlat
sbb
insb
cwtl
cmp
add
imul
mov
mov
jns
push
incb
xchg
pop
outsb
scas
nop
out
lods
mov
jg
or
das
jg
mov
jo
cmp
lods
jb
pop
sub
loop
mov
aas
leave
sub
je
or
mov
pop
xchg
out
mov
xchg
je
jno
jbe
cmc
dec
inc
out
lods
cli
movntq
out
xor
add
nop
lea
xchg
or
cmp
add
mov
pop
js
jge
mov
rcrl
or
paddq
shlb
xlat
stos
push
sub
das
lods
dec
sub
mov
cmp
jbe
mull
jge
adc
and
std
inc
jno
pop
clc
pop
lods
loope
push
mov
jp
jne
in
mov
adc
xchg
test
sahf
cmp
jl
pop
repz
mov
jecxz
dec
sub
insl
dec
and
outsl
lret
aas
xlat
stc
push
dec
insl
push
fiaddl
nop
ss
mov
jae
shl
push
into
xor
mov
add
xchg
inc
mov
imul
pushl
sti
in
cmp
sub
iret
out
icebp
loope
lds
rcl
jae
pop
push
xor
mov
andb
ja
xchg
in
in
jo
inc
dec
stos
rcr
nop
out
xchg
cmc
call
pop
mov
mov
jg
mov
dec
adc
in
cmp
xchg
and
shrb
pop
mov
cmp
pushf
test
push
xchg
loopne
loope
adc
ja
and
xor
xchg
mov
call
fimull
fisttpl
fucomp
dec
pop
int3
data16
or
sub
out
xor
jo
cwtl
mov
or
aad
inc
ret
repnz
fnstsw
inc
sarl
std
xchg
add
fistps
in
lock
iret
xor
dec
jge
dec
and
push
mov
int3
xor
adc
sub
movsb
lcall
sti
popf
sub
scas
xchg
lcall
sarl
push
xchg
daa
nop
sbb
or
add
push
xchg
mov
jp
cmp
adc
pop
loop
cld
and
xchg
fstpl
mov
xlat
rep
ret
xor
out
add
cmc
ffreep
jg
mov
std
fs
sbb
cmp
movsb
xchg
sahf
xchg
daa
and
jp
sbb
ret
loop
fadds
cwtl
xlat
add
data16
imul
pusha
gs
or
ja
sbb
xchg
lahf
sub
xchg
repnz
lds
mov
or
xor
lock
popa
clc
icebp
fsubrl
fsubp
ja
popa
mov
and
xchg
mov
cmp
lods
dec
jmp
repnz
cmpb
sub
mov
sbb
mov
into
cmp
popf
inc
or
insl
mov
mov
sub
xlat
mov
push
pop
lods
dec
sub
xchg
push
xor
pop
lds
ljmp
lret
sti
inc
mov
jae
push
imul
loop
js
jge
sub
or
cwtl
add
sbb
insb
jmp
test
es
mov
inc
mov
loope
pop
add
les
pop
mov
jnp
loop
test
jmp
sbb
ds
dec
xchg
test
mov
dec
pop
pop
push
xchg
adc
cmp
fnsave
and
push
aad
daa
pop
sbb
stos
push
push
xchg
int
test
fdivl
xor
push
pop
push
xchg
js
add
sti
in
scas
ficoms
in
in
mov
je
pop
jge
and
push
repz
ss
jecxz
add
or
and
push
inc
pop
clc
xlat
rorb
xor
in
and
or
pop
xlat
cmp
sahf
test
movsb
mov
xchg
or
mov
rorl
sarb
test
or
repz
out
in
sub
cmp
xchg
in
mov
push
stos
outsl
dec
insb
inc
js
or
stos
int
mov
loope
shll
dec
fs
je
stos
sti
psllw
mov
popa
mov
out
adc
xchg
shlb
jo
push
push
imul
int
mov
cmp
mov
inc
mov
fiaddl
es
xlat
jle
jp
gs
xchg
or
and
sub
sub
ljmp
fistpl
xor
sub
push
and
inc
push
inc
push
jle
mov
mov
das
and
xchg
mov
fistl
sbb
outsl
out
pop
cmp
mov
bound
les
fpatan
sbb
in
mov
sub
addr16
mov
ljmp
loope
add
push
mov
jmp
and
xchg
add
push
into
fnstsw
or
adc
adc
test
fs
jnp
mov
mov
mov
pop
push
daa
loop
pop
or
fwait
xchg
jne
jle
addb
fcompl
ficoml
mov
jnp
and
add
orb
sahf
xchg
push
inc
cmpsl
add
aam
adc
or
ds
dec
inc
sub
sbb
out
iret
jnp
dec
mov
mov
cli
cmp
or
inc
pop
jl
jg
stos
mov
and
loop
dec
cmp
inc
push
push
and
scas
std
insb
scas
xor
popw
aad
daa
mov
loopne
mov
jmp
ror
add
mov
xchg
dec
mov
pop
clc
xchg
ret
in
in
imul
int
aad
cmp
add
xor
popf
mov
pop
pop
fistps
inc
pop
cmpsb
mov
pop
and
nop
pop
mov
je
fsubl
xchg
cwtl
ljmp
in
sbb
outsl
int3
sub
mov
imul
sarl
dec
jg
and
dec
jb
int3
rcr
out
fwait
sbb
sbb
outsl
je
or
fcomp
cld
dec
pop
push
inc
xor
mov
in
or
lahf
sbb
nop
inc
es
aam
std
in
pop
xchg
sarb
dec
das
rol
adcl
lods
loope
xchg
pop
sbb
lret
jb,pn
cmp
xor
cmpsb
out
iret
xchg
addr16
into
or
xchg
or
dec
xor
and
dec
xlat
dec
in
in
lahf
or
test
movsl
inc
dec
push
adc
enter
ret
cld
stc
icebp
sti
cmpsb
mov
xor
sbb
mov
mov
sub
imul
andb
dec
sahf
mov
shll
or
xor
jo
imul
or
push
pop
xlat
pop
xchg
jg
sbbb
pop
gs
pop
fldt
inc
mov
pop
jge
into
sti
dec
dec
push
pusha
cmp
sub
sbb
push
shlb
sub
ds
jbe
orb
andb
repz
jmp
xchg
xor
clc
and
adc
lcall
jge
lods
dec
andb
push
arpl
push
push
ret
outsl
int3
data16
push
pop
lahf
dec
fsave
cmc
xchg
push
stos
push
lahf
fbstp
push
jnp
push
mov
int3
nop
jle
cmp
cmp
jl
mov
jae
push
push
andl
int
pop
dec
xchg
dec
cmpb
mov
es
nop
jae
add
fstl
js
test
fistps
fwait
lods
into
mov
ret
fsubs
imul
cmp
mov
or
cmpsl
mov
bound
imul
xor
mov
jo
jmp
mov
outsl
insl
mov
rcr
push
and
pop
xlat
bound
push
rorb
out
dec
js
shrl
xchg
jbe
mov
stos
lock
pop
int3
xor
sbb
jg
ds
fadds
inc
adc
pop
in
call
aam
inc
adc
xchg
dec
fstps
jnp
mov
loope
push
aad
loopne
insb
cmp
insl
jecxz
sbb
adc
stos
mov
pop
mov
inc
out
mov
add
stos
xchg
sarl
pop
movsl
lea
push
ret
cwtl
daa
test
xchg
jb
cmp
decl
std
test
out
add
jmp
xor
fwait
test
pop
enter
mov
pop
ja
xchg
ja
mov
mov
adc
sub
data16
xor
sbb
mov
dec
adc
or
divb
cmpsb
mov
std
in
dec
sub
daa
idiv
add
xlat
ss
xor
js
out
outsb
jge
and
dec
mov
cmpsl
leave
jecxz
icebp
rcl
push
inc
pavgb
jae
sahf
push
and
mov
icebp
xchg
sub
out
pop
push
fdiv
mov
mov
cmpsl
or
push
punpcklwd
push
xchg
jnp
jl
inc
push
adc
jbe
pop
sbb
rcrl
mov
sbb
andl
ljmp
dec
xchg
cwtl
cwtl
movsb
movsl
mov
xor
sti
or
call
pop
pop
es
inc
jl
and
adc
imul
icebp
sbb
sub
mov
jno
mov
mov
inc
iret
jo
cmc
mov
daa
mov
xchg
es
dec
nop
push
test
dec
dec
jecxz
xor
cmp
xchg
push
and
mov
inc
xchg
jg
jne
inc
ret
jo
out
jmp
xor
push
xor
jno
ret
pop
push
pop
sti
and
lds
bound
xor
inc
and
inc
into
maskmovq
testl
fcmovbe
mov
adc
push
jp
hlt
mov
inc
xor
enter
push
add
cmpsl
cmpsb
fidivl
xchg
push
jg
mov
pop
inc
or
dec
add
push
fwait
mov
xchg
lock
lods
or
and
mov
cmc
lods
out
into
push
lods
negl
add
in
repz
jbe
xorl
sbb
or
pushf
hlt
sub
leave
ret
adcl
add
stos
inc
push
nop
sub
out
aaa
icebp
scas
js
xchg
sbb
push
xor
lods
loop
stos
mov
jle
mov
stos
push
push
xor
mov
in
lahf
fcmovb
mov
push
push
fadds
mov
cld
leave
xor
pop
sahf
push
in
lret
mov
incb
push
popa
ds
xchg
push
or
pop
add
mov
cltd
ret
inc
insb
negb
sub
aas
inc
mov
imul
dec
addr16
mov
add
jns
into
xchg
lods
inc
lahf
repnz
jmp
loop
fwait
mov
ficompl
jmp
mov
cwtl
fidivl
and
cmp
lahf
push
push
xchg
clc
adc
sbb
push
push
out
dec
loope
and
mov
nop
dec
ret
or
push
push
push
lds
cmp
fnstenv
xor
iret
cld
pusha
scas
jecxz
ret
les
pop
sbb
enter
add
jns
mov
aaa
iret
adc
ds
cmp
jge
lret
push
jne
test
sahf
mov
dec
scas
cmp
lret
shll
mov
mov
insb
xor
cs
movsb
pop
lods
addr16
std
xchg
mov
sbb
push
mov
daa
cmpsl
mov
loope
jnp
fcmovne
outsl
sub
stos
iret
inc
jp
test
xchg
lret
and
out
stos
ffreep
jecxz
test
insb
sbb
ss
call
cld
mov
jne
scas
xchg
cmp
push
push
pop
cmp
adcb
js
hlt
leave
and
push
lahf
mov
sub
stos
out
or
test
gs
or
mov
xor
sarb
out
fidivrs
mov
cmpl
imul
mov
adc
aad
movsb
cwtl
xor
sub
test
call
add
rcll
lret
insl
sarl
in
ret
div
rolb
pop
mov
out
mov
mov
adc
inc
iret
xchg
push
rorb
leave
jp
icebp
mov
cmp
das
add
dec
scas
pop
pop
inc
cld
inc
ret
xchg
lock
mov
ss
fbstp
fsubl
cmp
icebp
mov
test
mov
add
imul
mov
xor
out
repnz
imul
shll
adc
mov
sub
pushf
xchg
and
push
imul
jecxz
pop
adc
aam
dec
push
cmpsl
imul
sbb
outsb
add
mov
or
xor
adc
lods
mov
shl
mov
mov
orb
inc
pushf
mov
mov
dec
jecxz
nop
shll
fs
cld
cmp
pop
inc
jne
std
add
aad
ss
das
sti
arpl
or
test
popa
sbb
sub
jnp
jp
or
push
bound
cwtl
repnz
cmpsl
mov
or
pop
shrl
aas
fildll
adc
ljmp
push
mov
adc
pop
fxch
lea
fdivr
or
sbb
jmp
repz
mov
mov
jl
adc
jp
push
or
cwtl
xchg
fldenv
lret
push
mov
lret
lcall
jno
ss
adcl
pop
xor
adc
dec
xchg
test
adc
je
sbb
leave
in
and
loopne
inc
int
pop
inc
fsubs
test
mov
inc
movsb
ljmp
add
out
mov
pushf
inc
scas
cli
jnp
pop
dec
jns
push
loopne
pop
jbe
xchg
hlt
push
xchg
mov
mov
sarl
lods
es
leave
xor
cmp
shr
sub
and
add
decb
decl
mov
or
cwtl
rorl
rclb
inc
scas
lret
and
pop
les
xchg
imul
cmp
data16
in
fisttpll
jge
and
xchg
out
and
sub
jmp
jb
std
in
shl
outsb
inc
decl
mov
xlat
stc
and
std
data16
out
movsl
adc
jne
lret
lret
lret
hlt
xchg
lds
cmp
mov
xchg
cs
push
dec
lahf
mov
testl
lcall
push
jne
aaa
addr16
pop
repz
ss
mov
sarl
or
dec
jp
andl
and
xor
jnp
ficoml
mov
adc
testl
inc
push
and
lods
frstor
cs
mov
fsts
bound
cmpsb
addr16
das
sarl
dec
int
sbb
stos
or
mov
push
pop
sahf
mov
loop
cmp
insl
jb
jns
daa
sbb
insb
ror
sbb
inc
lret
pop
es
jbe
mov
repz
stc
and
mov
xor
insl
insb
lret
xor
and
ja
jle
push
inc
daa
inc
jne
inc
xor
mov
xor
loop
push
pop
jbe
adc
pop
xor
stos
gs
frstor
and
fstps
jmp
dec
sub
mov
adc
adc
push
test
jb
pop
ds
jmp
lods
jl
stos
add
popf
cmpsb
mov
andb
push
cmpsl
jo
cs
mov
cmp
add
adc
mov
inc
cli
cmp
and
add
ljmp
mov
sti
xor
dec
mov
push
cmc
mov
je
mov
xor
pop
je
adc
lcall
push
and
insl
jmp
mov
push
ljmp
test
stc
jnp
sub
mov
in
insb
loope
xor
lock
sub
ljmp
push
xchg
aad
mov
clc
pop
add
imul
jne
lods
rcrl
out
das
cmpsl
shl
sarb
jno
mov
xor
pop
add
push
jns
sub
loopne
adc
out
adc
fs
arpl
std
cltd
dec
and
fidivs
and
cmp
xor
mov
jmp
out
aas
je
add
mov
mov
mov
xchg
in
mov
mov
push
lods
out
cmp
lea
ja
add
in
andb
icebp
je
push
adc
divl
mov
sbb
mov
jb
int
cmp
stos
push
lret
xabort
add
mov
sar
cmc
xor
movb
mov
push
jb
add
xchg
and
mov
fidivrl
adcb
inc
fcmovnu
lods
and
and
pop
xchg
and
rol
dec
adc
movsb
addr16
adc
jl
xchg
sbb
or
sbb
adc
daa
cmpsl
mov
jae
repnz
mov
subl
dec
and
xchg
roll
std
mov
out
push
fs
outsl
inc
xchg
xchg
mov
push
dec
inc
cld
in
insl
rcl
ret
jb
mov
imul
cmpsl
add
add
sbb
mov
and
or
mov
dec
fistpll
inc
in
jo
lock
and
out
movsb
pop
and
out
arpl
dec
mov
mov
jb
loopne
cwtl
adc
add
xchg
mov
lret
xchg
fisubs
adc
sbb
sti
imul
pop
ret
or
xor
jmp
test
cmpl
sti
xchg
mov
lretw
adc
push
aad
inc
jg
outsl
fnstsw
jb
pop
pop
sbb
insl
pop
insb
xchg
aas
imul
push
inc
sbb
es
push
loope
fldcw
lea
popa
pusha
lret
cld
and
mov
insb
cli
xchg
or
jle
inc
mov
or
sbb
lret
repnz
mov
xor
push
sub
dec
dec
jne
xchg
in
psubsb
push
outsl
cmc
pop
cmp
push
repz
mov
sub
sbb
lock
add
rorb
sbb
adc
in
dec
mov
pop
dec
sub
loope
lret
fldcw
mov
xchg
xchg
sub
lret
jl
or
cmp
inc
movsb
pushf
push
xor
andl
out
aam
jmp
movl
ds
mov
inc
dec
jmp
insl
mov
dec
push
lcall
mov
dec
mov
js
cli
aam
dec
xchg
jge
sbb
push
and
cmp
pop
jge
les
nop
stos
and
push
fiaddl
jo
or
push
add
aam
hlt
sbb
sbb
orl
aaa
xor
das
mov
dec
pop
js
movsb
addl
jns
out
mov
mov
or
insb
cmpsb
push
insl
xchg
sbb
or
mov
rcr
mov
mov
mov
jns
in
shl
and
and
lds
push
sahf
or
insl
pop
mov
or
rcl
imulb
xor
ljmp
or
leave
inc
fsubp
pop
mov
xor
mov
sbb
fstps
stos
mov
sbb
cmpsb
nop
xchg
mov
mov
aaa
mov
fs
mov
enter
sahf
mov
push
aam
int3
or
inc
or
lcall
cmpl
dec
mov
mov
jbe
jne
pop
int3
das
shrb
adc
sub
jno
bnd
enter
in
rol
testb
sbb
clc
adc
bound
xchg
push
andb
out
lahf
scas
push
imul
jbe
mov
or
std
push
mov
fwait
leave
fwait
mov
sbb
inc
adcb
stos
lcall
out
sbb
inc
cli
sahf
or
push
push
xor
jns
cmp
outsl
cmp
ds
ret
sub
rorl
loopne
push
decb
pop
cmp
push
mov
xlat
iret
and
xchg
cmp
pop
jecxz
icebp
les
mov
sahf
aam
sti
inc
add
sub
mov
jmp
ss
add
ret
or
nop
push
cld
icebp
fidivrl
enter
push
mov
insw
push
loop
repz
ret
push
ja
mov
ds
lret
nop
fdivr
push
mov
push
inc
xchg
mov
xor
jl
xor
loop
sbb
mov
sbb
lods
arpl
add
outsl
cwtl
dec
cmp
enter
mov
in
notl
inc
test
mov
adc
adc
insl
bound
add
inc
inc
pop
cmp
loop
mov
add
shlb
in
xor
divl
push
ds
stos
fsubr
lahf
mov
xor
js
xchg
pusha
dec
insl
adc
push
nop
lea
dec
inc
add
xchg
add
test
jne
inc
lods
cmpsl
mov
or
jo
fldcw
nop
loop
call
outsl
sbb
addr16
xchg
mov
xchg
sbb
mov
jg
mov
or
and
jmp
movsl
mov
cmp
jp
or
int
add
jbe
clc
rcr
dec
jl
rcrl
hlt
addr16
addb
and
add
fiaddl
in
sbb
ja
xchg
rcrl
loopne
insl
pushf
jnp
inc
aas
lods
mov
or
mov
sub
sub
dec
dec
mov
mov
daa
cmp
push
test
sub
adc
clc
cmp
jmp
or
push
inc
in
pop
in
sub
shrl
cmc
ljmp
mov
fwait
mov
fwait
out
cmp
dec
pop
xchg
dec
lret
and
xor
lods
sbb
push
lds
ret
cld
call
movl
mov
xchg
lods
outsb
cli
cwtl
test
inc
pop
lea
popa
je
and
xor
dec
pop
mov
sbb
jp
jmp
jmp
ret
mov
push
push
clc
cs
adc
add
leave
lods
orl
lret
adcb
ret
pop
scas
and
lea
pop
adc
aam
sbb
or
or
divb
ja
shlb
daa
mov
dec
push
pusha
testb
lods
inc
out
imul
nop
lock
in
ret
fistps
popf
fildll
outsb
adc
call
sub
jge
ds
cmp
mov
and
jp
scas
jbe
decb
pop
and
pop
cmp
ret
loope
dec
inc
dec
inc
test
movsb
mov
push
jg
sbbb
stos
add
mov
and
jecxz
pop
aam
clc
sub
sub
icebp
jl
or
pusha
scas
cmp
sub
cmc
ret
loop
fildl
stos
or
ret
lea
xchg
cmp
adc
lock
imul
push
and
inc
aam
pop
movsl
jae
ss
sbb
sbbb
or
cmp
mov
dec
hlt
dec
fwait
xor
test
movsb
and
mov
inc
lcall
jae
pop
lret
push
aaa
xchg
sbb
flds
aas
sbb
dec
xor
jne
pop
test
into
repz
repnz
or
jmp
vpsllq
mov
cmpsl
mov
mov
jo
add
or
xor
sub
adc
repz
rol
mov
add
push
pxor
pop
fsubl
or
dec
test
mov
jmp
repnz
out
pop
add
out
inc
in
mov
lret
shll
cmp
xor
gs
jno
mov
pop
js
xor
insb
cmp
leave
adc
rcrl
push
sub
pop
int
pop
and
adc
xchg
data16
loope
mov
js
mov
add
sti
or
mov
mov
push
outsl
adc
pushf
xchg
popa
addb
out
xchg
dec
mov
rclb
xor
jno
push
xor
lahf
mov
mov
jg
inc
inc
pop
scas
popf
lcall
adc
int3
jae
push
out
scas
ret
push
lea
popf
xchg
pop
mov
int3
imul
pop
xor
loopne
mov
dec
lock
gs
stos
shrl
out
int
jle
test
pop
imul
inc
xchg
jp
jle
mov
mov
mov
rcll
jp
mov
in
js
pop
fs
adc
mov
lock
mov
out
iret
cmp
pop
stos
es
push
icebp
repnz
lret
lret
cmpsb
sbb
mov
push
adc
cltd
mov
jg
in
adc
mov
jne
and
or
xchg
bound
movsb
add
and
mov
movl
clc
pop
enter
les
inc
arpl
idivb
imul
das
push
lret
adc
fidivl
and
loop
jns
test
add
test
dec
sub
inc
out
cmp
idivl
mov
mov
sub
adc
add
inc
fdivr
cmp
inc
mov
pop
outsl
f2xm1
lods
jnp
andb
add
cmp
outsl
leave
test
cmp
mov
mov
aaa
inc
mov
pop
push
xlat
fcoml
cmp
add
cmp
and
or
ret
fmulp
sbb
aad
shrl
inc
call
mov
push
mov
movsl
std
and
pusha
dec
dec
xor
and
js
imul
fiadds
mov
xchg
pop
or
ljmp
mov
mov
call
push
pop
or
stos
imul
stos
icebp
add
rcl
aad
aaa
into
int3
mov
sbb
xchg
call
xor
and
in
add
icebp
leave
push
mov
cld
xor
ret
dec
jle
les
ds
std
js
insb
inc
adc
adc
es
add
or
or
jge
fwait
dec
mov
call
out
pop
pop
sub
movsl
and
xchg
push
mov
mov
jle
add
push
push
ljmp
sbb
mov
sub
sub
pushf
mov
push
fnstenv
imul
pop
push
cmpsl
or
dec
int3
jbe
leave
in
cmp
push
mul
frstor
or
mov
addr16
mov
sub
icebp
or
je
pop
in
jo
iret
mov
imul
addr16
mov
in
fdiv
pushf
testl
inc
dec
push
idiv
sahf
shlb
jecxz
sub
mov
nop
cmc
pop
inc
and
dec
sti
xchg
mov
aas
and
cmp
dec
insb
lahf
out
stos
mov
pop
insb
add
fmull
lret
xchg
jmp
xchg
mov
xor
aad
jo
lret
pop
add
lret
xor
nop
or
imul
xor
cmp
ds
dec
dec
sahf
sbb
xlat
mov
movsb
push
inc
or
imul
inc
sub
inc
nop
xchg
sbbl
jecxz
sbb
lahf
mov
int3
cld
ja
ja
sti
mov
scas
push
jle
xor
cld
iret
out
gs
xchg
push
sub
adc
fs
mov
es
push
iret
fmuls
dec
add
lret
shrb
jle
jle
loope
je
pop
mov
popf
int3
sbb
and
cmp
jnp
add
pushf
fsubrs
pop
insb
insb
pop
push
dec
mov
rcrl
push
pop
mov
scas
jg
notl
mov
daa
sub
jp
loop
aaa
pop
aaa
loopne
int
icebp
addb
dec
shlb
inc
pop
fwait
jbe
inc
mov
ffree
test
mov
movsb
sub
loop
data16
push
xor
lahf
ret
aas
jmp
pop
aaa
jl
jno
xchg
adc
mov
nop
adc
adc
les
sbb
lods
sarl
jne
shl
inc
push
fdivrs
dec
mov
out
mov
lods
mov
fs
ja
imul
xchg
sbb
push
inc
pop
inc
pop
fnstenv
cmp
push
pop
out
cmp
orb
ja
pop
clc
mov
movsb
out
push
ljmp
nop
lods
xchg
xchg
jns
sbb
test
add
test
inc
ret
data16
push
std
mov
jns
fwait
sar
add
add
inc
pop
and
adc
cmp
icebp
inc
or
push
popa
mov
jle
push
jno
inc
xchg
inc
aam
lods
mov
push
mov
pop
add
jmp
data16
or
enter
fwait
loopne
push
and
mov
aaa
mov
pusha
xchg
pusha
shrb
add
jecxz
icebp
pop
or
jb
insl
test
pusha
mov
sub
lret
and
inc
aas
mov
xor
ljmp
xchg
enter
shrl
pop
loop
inc
mov
push
push
add
mov
movl
fiaddl
loope
popa
add
adc
push
sub
inc
sarb
xchg
dec
ret
in
icebp
aaa
push
gs
imul
ret
xor
cltd
sub
xchg
xchg
mov
cltd
jg
aaa
sti
inc
movsb
out
test
cmpsl
lret
in
dec
scas
fwait
xchg
push
dec
pop
mov
bound
cmpl
fisubrl
xor
jnp
jno
rcrb
push
inc
mov
dec
lret
push
mov
lcall
inc
repz
mov
cmp
xlat
imull
pop
sub
enter
xchg
lock
mov
jp
jae
fistps
xor
fsubs
mov
loop
jno
pop
mov
and
popf
mov
xchg
or
dec
lods
cld
test
mov
sub
sub
sbb
sahf
hlt
sbb
add
push
add
dec
xchg
enter
cltd
jp
into
in
push
mov
push
mov
adc
or
mov
mull
pop
sub
mov
add
int3
adc
lods
inc
mov
test
rorl
test
loope
pop
cmc
pop
fstpt
mov
pop
xchg
lahf
scas
ret
fwait
test
xor
out
mov
pop
shrl
jno
rcrl
les
or
or
jmp
mov
pushf
ss
inc
mov
dec
ss
mov
xor
pop
jae
dec
mov
mov
sbb
gs
jge
mov
cmpsl
xchg
scas
xchg
cwtl
fiaddl
mov
xchg
ds
scas
ljmp
mov
sbb
sbb
xor
lret
push
xlat
or
fldl
ret
out
shll
push
outsb
jo
sbb
pop
cwtl
ss
icebp
int3
mov
push
pop
push
mov
stos
mov
stc
cmc
and
ss
mov
idivl
out
sub
out
push
lods
inc
xlat
mov
outsb
fmuls
inc
sbb
inc
cmp
pop
xor
rcrb
inc
aas
sbb
leave
pop
mov
add
rclb
cwtl
and
sub
in
xchg
stos
cmc
jmp
adc
inc
ja
clc
inc
xchg
dec
insb
repz
pop
add
add
pop
sub
adc
push
outsl
lahf
dec
popa
add
sahf
pop
es
or
sub
fs
xlat
loope
loope
repnz
mov
mov
js
out
imul
es
lods
ss
inc
xlat
mov
fwait
push
mov
stos
jbe
insl
xor
cmp
test
push
fists
out
gs
or
fdivrs
std
cmpsl
xchg
sbb
xchg
adc
push
repnz
pop
sub
addl
sahf
in
add
cmp
xchg
iret
ja
mov
scas
and
bound
lock
std
popa
mov
or
out
xchg
lret
repz
sub
pop
cwtl
fimull
jb
into
std
jmp
shrb
cs
mov
arpl
adc
in
mov
xchg
int
mov
cmp
rcll
mov
pushf
loopne
fwait
and
rol
outsl
cs
leave
jg,pt
jge
xor
ja
xor
sahf
fldcw
mov
nop
adc
jg
sub
lahf
lods
dec
xor
lret
pop
mov
xor
arpl
call
push
pusha
fisubl
push
pop
pop
dec
jg
jg
sbb
mov
push
xchg
or
cwtl
int
mov
mov
dec
dec
test
scas
sub
mov
jle
mov
push
push
orb
cld
push
sahf
fdivs
and
cli
lods
sbb
std
lods
movsl
jnp
lret
and
cmpsb
sahf
movsl
loopne
lds
loopne
mov
mov
cmp
inc
xor
mov
ljmp
jae
ljmp
cmp
dec
cli
push
daa
add
mov
cs
sub
xorb
sbb
sbb
movl
dec
into
aad
mov
jecxz
ljmp
pop
and
sti
repz
mov
jae
mov
sub
dec
idivl
outsb
xchg
mov
mov
sub
sub
sahf
js
xchg
xchg
push
and
adc
sbb
inc
jle
add
in
aad
ffree
idivb
loope
imul
jno
xor
cmpsl
rol
cmp
test
lret
test
pushl
ficomps
imul
add
in
mov
add
sti
sbb
adc
jmp
push
xor
into
cmp
xor
repz
ss
std
insb
xor
nop
cwtl
rorb
fbstp
cmpsb
lds
call
fidivrl
push
test
pop
mov
imul
pop
cmc
dec
cmp
sahf
clc
xchg
nop
fucomp
add
loopne
dec
stos
mov
jns
clc
mov
gs
mov
mov
shl
mov
pop
xchg
repnz
int3
dec
aas
loop
mov
jl
push
ret
shll
cmp
or
sar
mov
adc
fisttpll
insb
loope
pushf
daa
shll
cmp
ret
push
and
or
hlt
into
xchg
xor
outsl
xchg
or
mov
testl
pop
lret
push
jp
pop
jecxz
xchg
sbb
xchg
mov
jns
jle
or
hlt
add
loop
cmp
jl
xor
fbstp
push
cmc
push
std
insl
jmp
int
dec
clc
inc
gs
out
subl
rolb
push
cmp
xor
push
in
push
lock
ss
push
lods
loope
imul
scas
jge
test
in
mov
inc
cmp
ja
in
mov
sub
pop
add
ja
xor
and
outsl
stc
mov
and
xor
movsb
pop
imul
mov
mov
and
jns
rolb
fcmovbe
jne
mov
aad
andb
sbb
fs
pusha
loopne
shrb
rol
scas
cmp
sub
shl
cltd
mov
jp
xchg
pushf
in
xor
push
xor
sbb
sub
insl
sbb
mov
mov
lret
les
sub
jb
mov
mov
test
jno
push
push
outsb
mov
or
bound
add
adc
into
adc
stc
xchg
test
nop
dec
out
inc
popf
pop
push
cmp
jns
jne
fsubl
fstl
sub
push
lcall
adc
inc
shll
nop
and
push
cwtl
pop
pop
adc
jb
or
pop
and
inc
adc
adc
cltd
test
shrb
pop
push
clc
sbb
xor
scas
fwait
gs
xchg
dec
adc
insl
in
push
stos
insb
mov
sbb
mov
js
pop
rorl
repz
jge
movsb
add
fcoms
das
aas
pop
lcall
xchg
xchg
sahf
fisttpl
push
mov
cld
iret
mov
popa
sbbb
aad
lcall
dec
sti
insl
repz
pop
sub
cmp
mov
pop
iret
stos
adc
shll
jge
xchg
lea
or
lcall
inc
cmc
mov
aaa
orb
enter
mov
or
add
cmp
outsb
and
sub
cmp
outsl
lds
and
sbb
iret
mov
mov
or
jecxz
push
shll
rclb
push
fwait
test
ljmp
xchg
stos
lods
mov
inc
or
mov
pop
mov
cmp
mov
cmp
cli
repnz
ftst
ret
adc
mov
pop
addr16
and
pop
cmpsb
jnp
pop
arpl
jo
nop
mov
ficoml
cmp
jne
inc
jmp
inc
cld
in
shlb
xor
das
jl
inc
in
push
inc
insb
test
adc
in
shrb
push
negb
addr16
inc
ja
xor
add
mov
mov
nop
jbe
scas
and
mov
sbb
sbb
out
lcall
enter
aaa
sub
inc
sbb
push
dec
mov
add
cmpsl
loopne
jne
rcpps
sub
repz
sbb
loop
adc
call
fsts
or
out
test
mov
lahf
dec
rcrb
das
sub
add
icebp
xchg
mov
and
imull
xchg
jl
jbe
pusha
mov
out
loope
mov
push
jl
xchg
in
daa
inc
cmpsb
sbb
notb
cmpl
jg
ret
xor
inc
outsl
mov
xchg
cwtl
rcrl
leave
or
int3
dec
nop
xchg
mov
adc
imul
stc
daa
imul
jnp
jp
jno
sub
fstpt
or
pop
dec
insl
leave
cmc
mov
mov
inc
dec
sbb
dec
push
aam
clc
in
push
jae
sub
ret
and
cmp
jb
mov
and
sub
add
mov
add
jno
data16
iret
enter
sbb
or
jns
mov
mov
and
dec
shlb
pop
sbb
rolb
ror
mov
sbbl
insl
inc
push
xchg
cmp
xor
leave
mov
xlat
push
pop
xchg
jo
fistps
pop
xlat
fisubs
inc
sbb
movsl
dec
shl
sbb
leave
jbe
push
pop
adc
xchg
jecxz
cmpsl
out
out
jg
or
inc
cld
dec
cwtl
orb
pop
cltd
loope
fstl
mov
mov
fdivs
jmp
out
sarb
add
push
in
mov
push
jnp
adc
pop
std
nop
and
push
push
pop
sub
or
cltd
jo
mov
pop
shrb
in
sti
mov
cmp
adc
inc
inc
aad
aaa
fnstcw
cmc
mov
sbb
and
data16
cli
lock
popf
sti
jl
sbb
out
and
inc
add
push
movsl
out
sbb
mov
fstpl
sbbb
icebp
gs
fcmovbe
sub
push
cmpsb
push
cmpsb
sub
ja
lea
and
or
xor
or
add
bound
les
cmp
cli
cld
in
lahf
mov
std
mov
popa
adc
cmp
sbb
jl
rclb
pop
into
mov
and
shrb
test
xor
cmp
mov
mov
dec
mov
or
cwtl
xor
rep
inc
repnz
sbb
rclb
add
or
dec
jbe
out
xor
movsl
in
or
sub
xchg
ljmp
push
sar
call
dec
out
jmp
add
and
inc
add
and
pop
mov
jae
inc
push
or
rol
sub
xchg
mov
dec
mov
mov
xchg
jne
push
mov
sbb
movsl
add
imul
mov
xchg
push
into
dec
hlt
ret
adc
fwait
gs
jb
xchg
test
xor
sbbb
jno
adc
lcall
xorb
xor
adc
in
push
aas
fcomp
lret
fstl
jl
and
sbb
out
stos
sbb
imul
xor
cmp
aad
and
and
stos
into
mov
outsl
pop
and
dec
add
inc
rorb
jmp
or
dec
push
out
or
mov
inc
scas
cmp
fists
cmc
insb
test
xchg
fldcw
mov
mov
xor
pusha
jb
fisttps
xor
icebp
xchg
out
imul
pop
push
and
daa
xchg
cmp
loope
add
or
mov
inc
test
in
add
dec
test
jecxz
rol
inc
xchg
ret
popf
rclb
mov
outsl
adc
xchg
sarl
adc
xchg
dec
add
ficompl
scas
push
hlt
in
push
mov
sub
rorl
fmull
in
add
push
adc
mov
mov
loopne
mov
xor
add
pop
xor
push
push
bound
movsb
aaa
jb
push
adc
flds
push
aam
ljmp
into
adc
mov
mov
lods
mov
loopne
insb
loopne
sbb
mov
add
outsb
pushf
std
out
repz
addr16
cmp
fdivrp
mov
push
inc
mov
mov
xchg
addr16
lea
std
mov
jp
loope
jmp
xor
orl
jae
push
jb
jg
popf
mov
ds
ret
push
sbb
mov
push
std
orb
mov
mull
clc
inc
idivb
fisttps
jne
sti
mov
lods
packuswb
inc
sbb
stc
out
or
loop
xor
push
fbstp
inc
es
fidivrl
push
adc
nopl
cmp
inc
ss
fcoms
in
aad
add
fidivs
test
and
and
sub
fwait
xchg
cmpsl
loope
or
into
or
or
mov
mov
es
addr16
xor
fisttpl
pop
pop
stc
jl
mov
enter
ss
pop
jle
jb
pop
movsb
out
xchg
sti
bound
movsl
cld
mov
or
add
adc
cld
fcmovnu
cmp
jo
cmc
mov
mov
cmp
out
pop
mov
pop
or
outsb
inc
push
jb
pop
adc
pop
popl
sub
lcall
in
fidivrl
jge
mov
add
daa
subl
mov
adc
fsubrs
jne
cmp
jle
pop
mov
mov
rclb
jnp
das
add
jne
xlat
shll
test
notb
cwtl
sub
lahf
xchg
pop
lds
movl
mov
jae
mov
adc
inc
jmp
xchg
mov
imul
loope
aad
inc
cmc
aad
into
out
push
popa
cli
in
in
fists
fcmovb
fwait
je
into
sbb
sub
test
push
mov
push
popf
xchg
xor
test
pop
adc
xchg
jg
in
fwait
jae
jbe
lea
or
pop
cmpl
dec
sbb
mov
lock
mov
jnp
sub
lods
fists
xlat
push
pop
sbb
repz
sti
popa
call
and
mov
dec
sbb
jns
lea
push
rclb
test
lcall
xchg
lods
fimuls
jp
or
imul
push
sahf
mov
cmpsl
jge
ja
ljmp
xor
test
xor
stos
dec
push
iret
lods
loop
lret
fdivrl
insb
fistpll
fwait
shl
push
pushl
mov
sub
scas
inc
rcl
and
ror
sarl
into
pop
std
sub
dec
pop
mov
jb
lods
bound
push
xor
mov
mov
je
fisttpll
outsb
inc
icebp
fimuls
test
and
js
inc
jno
rorb
mov
out
pop
dec
imul
sbb
xchg
sub
outsb
inc
lret
and
and
sbb
mov
arpl
ljmp
clc
cmpsb
dec
ja
xor
pop
jmp
push
mov
mov
push
fdivl
push
fadd
ds
and
push
dec
inc
inc
in
lds
fwait
cmp
imul
push
mov
push
in
fldcw
add
push
addb
and
push
pop
hlt
das
shr
cmp
scas
daa
insb
mov
jnp
xchg
stos
jp
and
jp
stos
adc
rclb
cmp
pop
fstp
add
mov
mov
sbb
movsb
shrb
jae
pusha
ficomps
sbb
push
pusha
cmp
push
xchg
inc
int
sbb
adc
mov
and
mov
cmp
aaa
xlat
fisubrs
push
mov
das
mov
jnp
ficomps
jmp
mov
inc
xchg
inc
mov
jmp
add
add
aam
jp
add
mov
daa
imul
and
test
faddl
xor
lock
jl
add
sub
lahf
cmp
loope
adc
push
je
lea
loopne
lea
mov
test
mov
insb
push
xlat
push
cmp
cmpsl
mov
sub
inc
xor
xor
jne
ret
xor
insb
scas
add
jno
das
jbe
adc
lahf
cld
mov
cltd
popa
cltd
repnz
aas
call
inc
data16
xchg
xchg
mov
cmpb
loopne
sbb
sbb
je
jno
clc
mov
ljmp
jno
scas
cltd
adc
scas
push
pop
adcl
pushf
inc
arpl
outsl
es
mov
adc
loope
jl
xor
cmpb
sub
aaa
subb
pop
lret
xchg
fidivrs
leave
adc
dec
into
push
popa
sbb
pop
push
mov
inc
xchg
gs
dec
pop
cmp
scas
adc
sub
call
dec
push
xchg
sub
or
sub
ds
mov
adc
mov
jns
jne
call
ret
roll
and
mov
inc
inc
jns
fwait
into
adc
inc
push
mov
mov
ficompl
das
sbb
fisubrl
push
xchg
cmpsl
mov
test
mov
pop
inc
adc
mov
lcall
icebp
stc
jb
mov
fdivrs
lret
xlat
std
ret
cmc
or
test
or
xor
fidivl
and
mov
sbb
iret
mov
pop
inc
push
popa
sbb
js
into
in
std
jp
data16
fsts
cs
push
lahf
nop
outsb
inc
xchg
pop
ja
sbb
mov
in
cmp
push
popf
sbb
test
lea
mov
xchg
leave
aad
scas
ror
and
cmpsl
int
and
cs
daa
push
dec
or
data16
mov
mov
clc
push
pop
xchg
add
cmp
sub
add
outsl
xchg
push
mov
in
aaa
inc
rcl
xlat
pop
cmpsl
pop
cmp
xchg
imul
aas
test
test
sar
inc
add
lahf
dec
dec
push
ret
mov
lds
fdivp
pop
push
fwait
jl
arpl
jle
ds
fs
fsubl
mov
mov
jbe
pop
jp
mov
addr16
dec
jmp
ja
out
cmp
fsubs
outsb
mov
jns
das
pop
mov
fstps
mov
mov
enter
jl
and
int3
xchg
jecxz
es
pushf
and
adc
lret
ror
fs
mov
xchg
cmc
fwait
es
jo
add
push
movsl
pop
test
scas
pop
pop
or
test
scas
icebp
mov
enter
sub
andb
int
adc
jae
imul
add
pop
je
iret
adc
inc
mov
mov
jp
test
push
push
lock
mov
mov
div
cmp
iret
mov
addr16
add
sbb
outsb
jo
or
idiv
pop
pop
xlat
push
rclb
jmp
mov
ds
jl
xchg
and
xor
xor
cltd
scas
fisubl
int3
mov
cmpsl
das
in
aam
fmuls
push
movsl
xchg
mov
ja
aaa
sub
cmp
xorb
loopne
mov
lods
push
jge
or
jmp
xor
cmc
stos
xor
outsl
pop
gs
push
imul
mov
lock
mov
loope
add
ds
adc
daa
ss
jno
mov
movsl
sub
push
push
sub
dec
pop
std
or
mov
aam
adc
pop
or
cwtl
or
cmp
cmp
pushf
outsl
shrb
cmc
or
and
mov
adc
mov
divl
iret
push
movb
cmp
fistpl
movsb
pop
scas
xor
lods
fldcw
loop
test
push
xchg
into
push
in
mov
inc
adc
test
cmp
push
imul
sbb
add
and
sti
jo
jge
cmp
testl
stos
int3
aam
adc
aam
fidivrl
imul
adc
test
outsl
fildl
xor
add
cmp
imul
arpl
incb
jecxz
in
lds
xchg
sbb
inc
mov
test
pop
push
and
jle
mov
aas
xchg
inc
and
pop
or
scas
stos
popf
fsubp
cmp
jne
cld
lret
shrl
mov
imul
rclb
sbb
and
pop
test
add
or
mov
mov
xorl
xchg
xchg
mov
xor
inc
hlt
push
mov
incl
sti
push
fdivs
inc
cli
xchg
ljmp
fidivs
movb
rorb
push
mov
lods
jne
fistps
fcomps
mov
sub
pop
int3
movsb
inc
mov
minps
add
xchg
push
push
pop
add
dec
dec
jg
adc
xchg
sbb
mov
sub
leave
sub
jp
jns
push
inc
dec
lret
repz
icebp
fcoml
fildl
test
sbb
push
fists
xchg
push
sbb
inc
out
fwait
mov
dec
into
or
repz
mov
mov
mov
jnp
push
or
out
cmp
or
mov
sbb
jg
aas
pop
cwtl
inc
lds
dec
movsl
jmp
out
inc
or
mov
sbb
cs
mov
lcall
imul
iret
out
mov
sbb
in
and
in
cmp
loopne
pusha
popf
pushf
xor
push
cmpsl
push
or
lcall
arpl
fldt
jp
jecxz
cmpsb
mov
jae
xor
inc
sub
xor
cld
xor
inc
js,pn
addr16
cmp
in
xor
xor
sbb
mov
sbb
push
xor
cmp
push
outsl
mov
mov
inc
mov
pop
mov
inc
aaa
or
inc
pop
loop
xor
mov
setp
adc
cmpsl
fldenv
sub
ds
sbb
inc
mov
pop
mov
hlt
jne
aam
pop
repnz
daa
popa
or
push
lods
lret
shrb
lret
adc
pop
test
mov
movsb
jmp
test
and
pop
push
jnp
pop
xor
push
cmp
mov
aaa
mov
sbb
cmp
push
and
movsb
pop
dec
xchg
add
ss
cs
xchg
prefetchnta
call
jns
sbb
lods
aas
push
scas
mov
test
push
fcmovb
hlt
adc
fnstsw
pop
enter
roll
push
or
jl
sub
xchg
sub
mov
adc
je
mov
icebp
lods
dec
and
pop
das
mov
jo
xchg
flds
sub
pop
icebp
push
cltd
xchg
lret
jecxz
aaa
loopne
inc
cs
cmp
movsb
shlb
shl
jp
dec
or
cltd
or
dec
pop
inc
dec
jne
inc
sti
mov
push
xchg
popa
shlb
test
cli
fsubr
cs
xor
in
cmp
dec
xchg
or
mov
sbb
adc
negl
movl
adc
push
aas
xor
mov
cmp
pop
scas
shll
cmpsb
xlat
push
xor
and
ret
movsl
jnp
jne
sarl
test
call
int3
les
int
nop
lea
movsl
jbe
fcmovne
inc
push
push
mov
pop
cltd
sarl
cltd
jp
lods
cltd
cmpsb
mov
sti
or
roll
mov
dec
xorb
inc
stos
add
push
shll
push
add
data16
outsb
pusha
dec
adc
xchg
sub
inc
pop
pusha
pop
adc
push
mov
mov
xchg
mov
leave
sbb
repnz
cmp
das
jmp
adc
push
pop
pop
xchg
add
xchg
lock
mov
jae
out
xchg
aam
es
inc
imulb
xor
cli
outsb
fistpl
dec
orb
test
and
sbb
into
bound
inc
ljmp
and
ret
push
xor
xchg
and
pop
mov
mov
cwtl
cmpsb
mov
and
mov
jmp
test
jmp
imul
movsb
xor
sbb
mov
fcmovu
push
cmc
fildl
dec
inc
cmp
or
js
jge
jp
fmul
dec
stos
lock
movsl
xor
push
arpl
jae
call
jl
shlb
aaa
repnz
mov
dec
cwtl
push
jl
xchg
dec
leave
cmp
test
mov
test
mov
and
dec
leave
pop
pop
sub
loope
dec
pop
sub
xchg
add
xorb
lock
mov
and
and
clc
test
cmpsl
sub
or
cmp
loop
lret
inc
mov
mov
add
addr16
lahf
sub
jb
push
fisttpll
fucom
lods
inc
pusha
test
hlt
inc
adc
imul
or
or
ljmp
cli
jns
mov
scas
jbe
pop
repnz
rcl
or
adc
jnp
mov
pop
nop
pop
sub
dec
jp
je
sahf
aam
cmc
dec
cmpsl
inc
sti
loopne
cmpsl
mov
stos
ffree
inc
mov
cltd
loopne
jae
sbb
lock
dec
iret
adc
scas
hlt
add
add
jns
stos
mov
add
sub
mov
repz
cmp
xlat
das
popa
std
repz
xor
orps
mov
imul
mov
push
xchg
jno
or
jae
xor
inc
dec
ret
decl
push
mov
dec
cmp
sub
lea
dec
mov
fimuls
push
dec
into
outsl
xchg
sbb
xor
mov
ret
xlat
leave
fnstenv
pop
xor
repnz
dec
xchg
jmp
mov
inc
mov
leave
ljmp
roll
mov
and
orb
push
lahf
das
add
mov
shl
and
test
xchg
sbb
and
and
test
adc
pop
and
movsb
xor
cli
mov
add
mov
shll
repz
idivb
mov
and
cli
push
sub
fs
aam
jns
je
push
aad
ss
fsts
mov
jb
dec
lods
faddl
arpl
lods
rclb
outsl
repnz
notb
movb
in
inc
cmc
or
mov
movsl
sti
xchg
or
pop
scas
sub
orb
out
push
inc
jl
mov
adc
mov
xchg
push
int
cs
ret
cmp
outsl
loope
mov
xor
cmp
imul
mov
mov
xchg
pop
mov
add
jmp
jp
inc
test
stos
or
es
adc
push
xchg
shll
in
or
mov
cli
push
and
repz
push
fwait
mov
ss
jnp
sahf
lock
sbb
adc
jmp
popf
push
dec
negl
gs
ret
add
dec
mov
hlt
outsb
notb
ds
mov
pop
cmp
mov
push
xchg
xchg
pop
cmpsl
ja
out
fldenv
pop
int3
xor
roll
mov
out
push
dec
jp
xchg
xchg
and
cmp
gs
int3
out
adc
bound
sbb
adc
pop
dec
pop
rorb
xor
and
dec
mov
xlat
mov
add
insl
out
movsl
js
adc
loope
xlat
add
sub
sbb
loopne
popa
lock
jge
jmp
jmp
push
dec
pop
mov
pop
test
jle
pop
das
cld
jns
daa
scas
rorb
incb
cwtl
mov
in
loopne
lea
adc
mov
add
insb
mov
adc
cli
movsl
imul
sbbb
fdiv
lret
roll
outsb
mov
fidivs
adc
push
outsl
inc
mov
push
or
sub
xlat
cmc
jmp
lods
cmp
and
push
call
das
dec
dec
push
xchg
lds
xchg
das
andl
dec
int3
pop
jg
insl
jno
inc
sbb
and
mov
add
adc
push
mov
ljmp
sbb
cmp
scas
xor
rolb
jae
cmp
test
xchg
dec
xor
mov
je
cltd
adc
out
in
mov
or
xor
add
outsl
and
stc
fldl
leave
add
push
pop
cld
bnd
cltd
xchg
shlb
push
and
out
sarl
je
mov
cltd
rcrb
jmp
into
cmpsb
push
adc
cmpsb
ss
movsl
lods
clc
mov
les
int
adc
fmul
fs
xor
add
mov
hlt
sub
scas
mov
popf
rcrb
fwait
push
es
rclb
cmpl
mov
jg
push
push
inc
dec
leave
test
inc
cli
adc
push
mov
nop
inc
xchg
or
outsb
and
clc
add
push
pushf
jno
fcoms
sub
repnz
push
sbb
mov
insl
mov
repnz
sbb
dec
sub
or
clc
jl
mov
jb
lods
loope
sub
fistpl
in
sbb
inc
or
sbb
adc
jnp
sti
fbstp
mov
ja
repnz
push
push
mov
cld
sub
pop
aad
sub
hlt
test
imul
pop
ss
fiadds
sbb
jmp
pop
push
sub
inc
push
add
fisubrl
sbb
gs
lock
fs
xchg
test
arpl
pushf
call
cmpsb
inc
xor
jae
mov
shr
inc
push
scas
leave
jp
imul
dec
imulb
xchg
sahf
inc
dec
dec
movsl
lods
dec
arpl
fiaddl
iret
cmp
repnz
cmp
cmp
inc
fiadds
lods
pushf
add
pop
adc
loop
xchg
jp
pop
add
xchg
cmp
popf
and
mov
mov
add
int
cmp
mov
push
stc
mov
xchg
pop
xchg
push
sbb
sbb
mov
add
mov
hlt
cltd
adc
fstl
xchg
out
lock
mov
mov
aaa
popa
jnp
iret
mov
arpl
psubsb
rclb
jge
pop
sub
mov
mov
cmc
push
and
dec
hlt
stos
cmp
xor
icebp
push
ffreep
or
push
scas
pop
mov
imul
movsb
lahf
subb
push
scas
push
adc
mov
xor
and
clc
dec
adc
aam
fucompp
sub
push
jge
mov
fisubrs
dec
dec
jmp
addr16
sbb
les
xchg
into
int3
sti
jno
add
loopne
jb
push
pop
imul
lods
aam
xlat
jno
adc
jp
fbld
cli
insl
shll
pop
push
repz
mov
imul
push
test
cmp
inc
scas
stos
jbe
pop
popf
sub
dec
add
in
adc
mov
jg
aaa
and
xor
mov
push
or
mov
enter
adcl
in
xlat
fs
out
out
insl
add
sub
adcl
nop
push
cmp
fldenv
adc
jmp
std
movsb
out
js
lds
pop
sub
rcrl
mov
mov
je
test
aad
mov
iret
mov
and
lock
je
or
aaa
cmp
fimuls
fistpll
adc
testl
push
pushf
lret
dec
pop
push
jp
adc
mov
adc
test
icebp
or
cli
je
jmp
test
or
fldenv
xorl
addb
sbb
lea
ss
push
or
subl
jo
mov
iret
test
stos
cmp
dec
cli
jmp
rcrl
jno
xor
sti
xor
pop
jne
jecxz
fdivrs
cmp
mull
call
push
mov
fstl
jmp
jnp
mov
nop
jae
rcrb
int
cs
push
iret
mov
ds
jg
pop
ficoms
push
ret
jmp
sub
fsubrl
jno
or
fstps
push
loope
inc
mov
daa
push
nop
add
cmpsb
sub
rorb
mov
xchg
jmpw
push
jp
or
fcomi
add
out
in
fs
pusha
fisttps
push
or
out
and
test
mov
xor
jge
das
lods
data16
stc
xor
xchg
adc
pushf
pop
loop
decb
inc
fnstenv
leave
daa
out
add
push
ret
pop
sbb
dec
sbb
shlb
lock
rcll
push
mov
push
in
adc
mov
shl
jo
xor
mov
out
dec
pop
push
pop
lds
and
cmp
aaa
dec
movsl
pop
and
inc
scas
push
inc
adc
sbb
push
sbb
jmp
dec
push
es
jb
mov
xchg
sub
out
mov
sub
rorl
shrb
xchg
fsubrs
sbb
adc
in
cltd
pop
cmp
es
inc
insl
and
mov
cmpsl
or
or
jne
inc
loop
scas
push
icebp
cmc
shr
fisubrl
cli
stos
xchg
mov
push
cmc
dec
mov
cmc
nop
iret
lods
sbb
mov
clc
lea
test
scas
mov
hlt
push
sbb
adc
int
and
sub
dec
ret
add
mov
outsb
repnz
fstl
push
pop
mov
cltd
xchg
cmp
and
cmp
sbb
or
int
mov
int3
js
loope
dec
sbb
daa
jmp
jge
and
test
out
sbb
mov
addr16
dec
repz
js
ret
mov
cmp
orb
adc
dec
cltd
out
jb
jae
add
fmul
and
into
call
stos
xlat
out
ds
mov
adc
mov
lahf
dec
int
pop
add
frstor
insl
or
push
shr
adc
xchg
mov
ljmp
lea
cld
shrb
push
ds
cmp
sbb
cmp
adc
adc
in
lret
cmp
in
push
dec
movb
sti
mov
subl
loop
inc
mov
and
xor
jne
mov
mov
xor
cmp
ljmp
out
jne
popa
sub
fistpl
imul
inc
push
mov
inc
jecxz
jne
notb
dec
sbb
lcall
es
mov
and
adc
out
sbb
and
shlb
ss
mov
and
and
pop
dec
std
je
inc
inc
and
inc
cmpsb
xchg
pop
shlb
repnz
mov
fndisi(8087
les
jecxz
jg
lock
push
scas
cmp
pop
mov
fadds
mov
cmpb
ja
and
in
sub
aad
subb
inc
xor
loop
in
jb
or
sti
pop
pushf
sub
or
jmp
inc
in
mov
sub
xchg
popa
cwtl
js
ljmp
push
pop
push
orl
mov
clc
add
pop
add
data16
lods
out
ja
xchg
cmp
lret
jb
in
inc
lret
mov
lret
insb
fdivrs
es
out
dec
jl
pop
xor
addl
neg
add
jnp
lea
mov
xchg
arpl
addr16
push
dec
add
jb
sub
inc
filds
dec
and
in
and
hlt
lret
jmp
and
ss
lea
test
dec
cmpb
lods
dec
mov
inc
push
mov
and
jns
push
cmp
stos
mov
inc
jns
adc
mov
enter
call
aam
imul
movsb
je
mov
cs
dec
mov
ret
mov
ret
mov
mov
ficoml
aam
sub
ret
add
and
shrb
xor
loopne
add
inc
movsl
or
push
subb
pop
xor
or
and
push
push
adc
mov
jge
push
fisttpl
jb
mov
loopne
cmpsb
jp
in
mov
clc
insl
pop
xchg
stc
inc
in
leave
rolb
in
jbe
adc
fdivrl
or
rep
dec
in
cltd
and
and
mov
mov
clc
clc
fcmove
js
sarl
cs
pop
push
jge
pop
adc
es
outsb
and
fnsave
mov
lods
repz
lods
rclb
fdivrs
cmp
leave
mov
pop
or
cmpsl
xor
add
pop
push
push
push
cmc
xor
mov
add
arpl
jl
aad
or
insl
out
sbb
inc
loope
sub
jmp
jns
jle
xor
or
shl
aaa
push
xchg
jns
movsl
pop
jno
test
add
xor
xchg
add
popa
push
push
push
pop
sub
mov
into
or
push
loope
push
js
aaa
cmp
lock
jnp
in
aaa
push
test
and
jecxz
shll
test
inc
std
sub
cmp
pslld
push
xor
mov
pop
mov
lcall
push
cmp
push
data16
sub
xchg
cmp
cli
into
or
xor
pusha
pop
jbe
push
gs
mov
push
dec
test
ror
orb
dec
dec
pusha
xlat
je
cmp
test
push
or
imull
sub
sarl
push
push
push
add
sti
inc
hlt
hlt
mov
fldcw
popa
lea
idivb
aam
mov
push
jge
lret
jl
pop
jp
push
xor
insb
pop
pop
enter
pushf
jge
xchg
jle
xchg
sub
out
mov
sbb
shl
out
pusha
or
dec
and
lods
mov
test
adcb
stos
jge
sbb
test
sbb
push
jmp
jne
xor
xor
js
cmp
xchg
xchg
push
mov
int
or
xchg
lcall
arpl
mov
inc
add
cmpsl
int
es
out
push
adc
push
movsb
push
clc
sub
ret
jmp
lock
in
push
repnz
ljmp
dec
test
mov
js
mov
test
bound
mov
shl
xchg
or
push
cmp
dec
aas
add
push
inc
jnp
jecxz
cmp
movsl
or
int
sub
push
cmpsb
xchg
dec
pop
push
inc
loopne
test
out
out
add
inc
fwait
pop
sbb
jle
sbb
fistl
fistps
out
lahf
cli
and
jmp
sub
mov
in
pop
cwtl
adc
xchg
cmp
dec
out
fstps
cmp
cmpl
pop
cmp
mov
sahf
cwtl
fisubl
sbb
jg
mov
add
mov
pop
mov
daa
mov
addr16
add
jo
mov
sub
xchg
adc
lret
adc
pusha
or
out
lds
or
mov
inc
hlt
aaa
inc
cmp
push
xlat
inc
clc
pop
mov
push
mov
aaa
imul
xchg
test
ret
into
mov
mov
les
idivl
icebp
push
addb
mov
jbe
jno
cltd
imul
notl
jle
ret
movl
and
inc
mov
dec
push
bound
jge
or
out
or
in
cmpsb
and
xor
rcrl
xchg
in
out
adc
fcmovu
pusha
cmp
sbb
xchg
cmp
or
sub
sub
mov
cmpsl
push
andb
shrb
aaa
and
jne
jns
clc
and
insb
bound
pop
inc
jno
fwait
xlat
fsts
out
xor
jmp
sbb
lret
movsl
sub
fdivp
mov
and
push
cmp
outsl
stos
cmpsb
cmc
incl
bt
jnp
add
adcb
fidivs
sbb
cmpl
mov
push
mov
jb
lea
insl
fs
pop
bound
jle
inc
jp
outsb
scas
or
add
enter
pop
jecxz
and
dec
adc
ret
sbb
bound
call
mov
pop
sub
call
fsubl
insl
jmp
pop
sub
xchg
ja
test
jg
xor
inc
push
lcall
sub
lcall
xchg
outsl
xor
jno
aam
sub
xchg
xchg
inc
mov
jp
xchg
inc
insl
jo
bound
pop
mov
outsl
sub
ficomps
gs
insb
push
lods
ret
add
or
and
sbb
adc
add
adc
mov
pop
pop
rcrb
jg
imul
fimuls
pop
inc
add
inc
in
aam
mov
add
stos
iret
testl
std
cld
dec
mov
push
scas
jmp
and
fldcw
mov
mov
dec
dec
mov
js
sbb
adc
outsl
cwtl
jnp
xor
stc
sub
js
push
mov
test
shll
loop
insl
adc
stc
push
insb
insb
test
adc
sub
notb
imul
inc
xor
push
inc
out
lcall
loop
sbb
add
cmpl
mov
shll
mov
adc
jo
jge
mov
inc
sbb
aaa
jns
jno
repnz
mov
push
xchg
jne
xor
scas
sbb
aad
fildll
jne
jns
xor
enter
mov
andb
arpl
negb
sar
not
xor
xor
imul
jb
insl
jns
int
inc
outsl
mov
rcrl
jns
cli
sahf
adc
sahf
mov
fstps
or
dec
call
sahf
cmp
push
mov
and
xchg
inc
sbb
lods
in
mov
jo
inc
cwtl
push
pop
int3
mov
les
loop
movsb
fiaddl
sbb
movsl
cli
and
in
nop
arpl
into
mov
mov
xchg
scas
add
xor
mov
into
in
jno
test
mov
imul
jmp
mov
add
adc
test
sbb
fcmovne
cmp
dec
mov
imulb
test
icebp
mov
or
es
sbb
inc
dec
mov
dec
xchg
ret
aaa
lcall
loopne
and
inc
mov
push
dec
inc
or
push
push
out
add
jecxz
push
mov
sarb
add
and
pop
adc
add
jae
sti
arpl
pop
sti
jmp
adc
into
movsb
jbe
dec
push
mov
call
adc
fisubrl
xor
outsl
pop
and
and
jmp
es
cli
std
and
popf
jae
mov
jno
push
mov
movsl
das
cmc
xor
adc
dec
pop
adc
insl
clc
or
sub
fs
int
stc
das
add
inc
sub
inc
mov
sbb
or
push
fcomi
jb
in
jecxz
int3
decb
mov
mov
sbb
ljmp
into
cmp
xlat
out
mov
imul
fistl
mov
lahf
cli
cltd
mov
push
test
jecxz
adc
test
mov
sbb
xor
pusha
push
movsb
in
xchg
sub
popa
xor
out
stos
sbb
sub
push
aad
push
fs
mov
sub
jge
ret
clc
or
xlat
and
or
mov
and
iret
popf
and
xor
pushf
mov
aad
jo
jg
sub
or
cltd
andb
mov
repz
cltd
cmc
outsb
inc
jb
jge
cmpsl
jmp
mov
cli
add
and
or
and
test
dec
popf
clc
es
xchg
cmp
movsb
xchg
mov
lock
stos
aas
jne
and
push
xchg
nop
ja
pop
push
xor
movsl
rcr
adc
popa
icebp
movsb
rorl
pop
jl
in
mov
iret
aam
jns
cmovg
in
lods
fwait
mov
mov
inc
andl
lret
incl
in
inc
sbb
cmp
and
icebp
cmp
imul
inc
les
mov
notb
inc
lcall
cli
or
push
sub
mov
or
xchg
dec
pop
mov
push
adc
push
stos
mov
dec
mov
int
mov
and
rcll
dec
jg
mov
enter
in
jbe
divb
adc
stos
in
in
or
pop
inc
ret
dec
dec
mov
insl
jl
pop
push
jne
sahf
push
idiv
cmp
test
je
sub
sub
xchg
rclb
fdiv
xor
subl
mov
lret
add
mov
std
dec
dec
inc
test
out
sub
mov
addr16
repnz
je
add
jge
or
sbb
imul
sub
adc
fs
in
lret
std
lahf
jnp
jns
hlt
jno
popa
sub
push
inc
mov
insb
xor
insb
cmp
sarb
test
mov
das
sbb
and
ror
insb
mov
mov
adc
int3
push
jo
or
xor
xchg
dec
test
jmp
mov
inc
fisttpll
jno
or
outsb
mov
dec
insb
das
stos
push
andl
and
cmp
mov
movsl
jbe
mov
add
jmp
int3
dec
stos
call
test
add
mov
sbb
cltd
lahf
stos
rcrb
mov
xchg
xchg
je
cmpsb
out
push
inc
jo
pop
sub
and
mov
std
mov
addr16
adc
push
cwtd
cmp
adc
out
stos
sti
repz
mov
nop
test
scas
packuswb
pop
mov
adc
movsb
movsl
push
test
cmpsl
jnp
and
mov
out
and
push
imul
nop
pop
jae
jecxz
scas
lods
jae
cltd
dec
dec
inc
jns
pop
and
ret
adc
mov
mov
push
jmp
stc
call
nop
adcl
test
lods
mov
mov
rcrb
daa
mov
out
push
push
stos
push
and
xor
adc
xchg
loope
lea
xchg
scas
arpl
jg
pop
bound
or
mov
xor
and
xchg
fsubs
pop
rcrb
and
and
je
and
stc
shll
stos
inc
and
push
andb
movb
popf
cmp
pusha
mov
dec
xor
xor
mov
mov
pop
inc
addr16
test
xchg
push
aad
and
ret
add
leave
mov
cmpsb
sarl
push
or
aam
imul
jne
dec
dec
movsb
in
push
dec
dec
out
aaa
rcr
lretw
mov
icebp
les
mov
sahf
dec
ds
adc
jmp
jg
sbb
jge
xlat
scas
xchg
mov
out
push
adc
sbb
mov
fcom
push
pop
bound
mov
cmpb
in
bound
sub
xchg
pop
push
xor
push
xor
or
push
xchg
ds
sbb
iret
xchg
lods
insb
inc
mov
sbb
xchg
lds
popa
loope
fsubl
mov
adc
mov
jmp
adc
sbbb
fisubl
jae
test
lret
out
cld
ret
mov
mov
ss
mov
and
aaa
push
inc
sbb
sbb
fsubl
repz
and
push
lods
adc
pop
icebp
jo
mov
jmp
aas
insb
js
sbb
sahf
ljmp
mov
mov
jp
mov
cmp
push
dec
clc
mov
aas
enter
and
adc
repnz
xor
fsubrs
xchg
jg
adc
shr
xor
leave
lock
shrb
adc
sbbb
cli
ret
loopne
inc
fwait
leave
add
jo
or
cs
xchg
decb
lret
outsb
out
pop
jo
push
subps
xchg
sub
aam
fstpt
push
adcb
cmpsb
xor
sbb
mov
imul
roll
inc
mov
mov
inc
loopne
push
cmpb
in
jp
outsl
and
enter
mov
test
sbb
adc
iret
and
xchg
or
push
adc
repnz
pushl
fdivrl
nop
mov
xchg
lods
ret
pop
lods
mov
push
out
pop
push
ret
xlat
test
inc
faddp
arpl
in
pop
or
mov
push
pusha
repnz
sbb
jl
enter
push
jbe,pn
and
dec
cmp
fdiv
cmpsl
sbb
and
or
sub
rolb
mov
mov
push
dec
mov
cmc
imul
divl
mov
mov
cmp
pusha
jmp
pop
daa
dec
lods
adcb
in
pop
add
mov
cwtl
lahf
dec
and
fcomps
mov
adc
jmp
mov
fstpt
cmpb
cmc
xchg
add
out
stos
sub
scas
jb
jmp
arpl
pop
cli
or
shl
pop
mov
push
add
pop
out
cmpb
inc
sbb
xchg
push
pop
dec
push
and
or
pop
and
mov
xchg
rep
add
mov
es
fldenv
inc
pop
test
dec
jbe
lods
jecxz
mov
push
sbb
fldt
scas
jno
subb
add
cmpsl
adc
lods
ret
js
stos
or
fadds
mov
lret
popa
fildl
cli
iret
jge
pop
iret
jne
test
aas
lock
sbb
lahf
xchg
jmp
jns
adcb
dec
ret
and
pop
pop
in
jbe
ror
lock
jp
shrb
addr16
ss
xor
push
pop
inc
sbb
or
test
les
add
or
mov
and
pop
testl
push
sub
mov
sahf
xchg
icebp
push
leave
sub
cld
mov
fistpl
fwait
je
jg
adc
stc
sub
adc
jg
xor
scas
jae
inc
sub
in
jns
sub
and
inc
notb
and
xlat
xor
lahf
arpl
leave
xor
inc
push
fstpl
andl
push
call
scas
test
jbe
lret
cld
mov
pop
mul
int
fstpt
mov
scas
fldt
enter
addr16
int
jge
movsb
dec
pusha
sbb
mov
pop
mov
dec
in
push
inc
cmp
adc
rcrl
in
outsl
pop
add
adc
xorb
cmpsb
cmpsl
insl
out
add
fists
ljmp
sbb
fcmovu
xor
insl
cmpb
jp
inc
xlat
or
mov
sub
inc
push
rorb
push
out
ret
xchg
xchg
repz
popa
and
ret
sti
mov
inc
mov
imul
sbb
inc
dec
repz
outsb
xchg
or
inc
adc
cltd
sbb
rorl
pop
gs
add
jp
jae
ja
cld
jge
scas
sbb
sub
pop
decb
stos
pop
scas
imul
test
jns
dec
dec
xchg
push
cltd
mov
add
sub
loop
mov
lret
pop
orl
movsl
dec
test
repnz
in
andl
jg
sub
add
mov
cmp
mov
ljmp
xor
decl
ficomps
xor
mov
int3
mov
xchg
dec
sub
arpl
push
or
pop
sbbb
pop
pop
es
jbe
inc
jo
or
inc
sub
imul
jae
shl
aas
and
adc
push
xchg
xchg
leave
add
cmp
cmp
fdivs
test
cwtl
ja
js
int3
ss
push
xor
ficompl
pop
fdivr
pop
add
and
test
lret
adc
push
mov
inc
sub
push
insb
insl
ds
mov
adc
or
loope
bound
movsb
xchg
movsl
sbb
pop
push
scas
or
push
test
test
mov
jge
mov
sub
pusha
push
fsubrs
sub
mov
popa
iret
inc
sbb
dec
jns
lods
loop
mov
sti
stc
stos
xchg
dec
cmp
add
inc
loopne
mov
loopne
cmpsb
cltd
xor
inc
mov
jle
and
xchg
jno
cmpsl
loope
jmp
jl
xchg
cltd
push
in
mov
into
and
repnz
jl
mov
scas
movsb
call
dec
sbb
dec
push
or
add
pop
imul
inc
pop
lods
call
int3
cltd
add
or
outsl
ja
rcl
jge
aam
mov
push
cs
or
mov
sub
loop
std
sub
test
pop
cld
mov
mov
rcll
fnstenv
mov
iret
mov
xchg
lock
outsl
jl
aad
std
in
ljmp
nop
ficompl
jae
ljmp
mov
jp
pop
mov
adc
imull
cltd
into
cmp
pop
push
mov
mov
enter
pushf
fidivrs
jb
mov
and
inc
lods
mov
cltd
ficompl
clc
test
mov
push
sub
jp
jns
dec
or
fmul
imul
icebp
jb
jecxz
lods
insb
rcrl
push
popa
sbb
and
jmp
addr16
mov
roll
shll
sahf
xor
push
pop
pop
mov
sub
sbb
cmpsb
outsb
jp
jmp
stos
or
sub
mov
es
xlat
test
dec
cmp
adc
iret
add
outsl
fnsave
cmovb
xor
or
setae
fdivs
xchg
jne
or
scas
les
add
lods
jns
add
in
push
push
dec
push
int
xor
push
in
sub
mov
clc
outsb
push
jno
imul
xor
mov
sbb
cmpsb
out
sarb
mov
xorb
or
inc
or
mov
ja
pop
mov
cmpsb
in
jns
arpl
dec
vpsrld
lret
cmp
mov
adc
and
outsl
or
dec
loop
js
mov
mov
int3
in
test
xor
xor
rolb
jo
inc
sbb
pop
and
xchg
imul
sub
cmp
sub
xor
call
sbbb
addr16
mov
cld
inc
or
add
xor
xorb
sarb
fildl
pop
fs
add
mov
adc
and
outsb
jno
imul
imul
out
pop
orb
xor
sbb
jae
dec
push
xor
lock
mov
push
jge
dec
dec
pop
es
mov
call
cmpsl
dec
pusha
pop
xor
decl
int
shl
pusha
xchg
push
aam
sbb
ret
push
sub
cmpsl
out
je
enter
out
stos
call
lods
add
mov
sub
inc
pop
pop
js
std
loope
mov
xchg
out
inc
jno
adc
pop
adc
push
scas
mov
fimull
mov
xchg
xchg
loop
push
rcrb
adc
iret
mov
pop
scas
popf
stos
mov
and
mov
fists
ret
inc
xor
jle
pushf
pop
or
out
push
mov
xchg
gs
add
mov
stc
mov
es
popa
daa
in
repz
push
pop
cmp
push
adc
jo
dec
sub
jne
mov
out
cli
roll
sbb
xor
iret
jg
jnp
cmp
outsl
imul
and
mov
jmp
add
mov
iret
xchg
mov
and
sub
mov
pop
popa
mov
cli
push
iret
xor
or
pop
mov
cmc
insb
mov
lods
dec
cli
aas
mov
add
xchg
aad
mov
out
push
xor
cmp
daa
xchg
in
or
data16
test
mov
loopne
fdivrp
aas
rcrl
aas
adc
or
xor
aaa
inc
mov
jo
xchg
push
cmpsb
and
aaa
repnz
mov
int
jno
ds
loopne
add
pop
mov
push
and
int3
mov
out
jl
xchg
adc
xchg
pop
mov
add
dec
idivb
xor
pop
dec
lcall
test
and
rcrb
xchg
cmc
ds
pop
or
push
xorl
lahf
push
and
xorl
arpl
sub
pushf
leave
or
popa
call
mov
jmp
hlt
push
test
outsb
or
xchg
sub
hlt
pop
ret
xchg
das
ss
in
sub
mov
push
movsl
and
icebp
fmul
ret
lds
test
jnp
negl
or
jl
mov
push
inc
cmc
lea
adc
lods
lock
lds
dec
mov
in
mov
dec
xlat
ret
mov
pop
push
sub
les
or
pop
dec
add
mov
add
js
inc
fnsave
dec
lret
mov
add
mov
jne
in
mov
xorl
loope
popa
gs
scas
test
xchg
lahf
push
repnz
stos
ja
push
sahf
mov
inc
call
in
js
cli
sub
lcall
enter
or
leave
fistpl
mov
jae
les
insb
sub
pop
cmp
repz
out
mov
jl
push
sbb
aas
add
inc
and
jp
fsts
stos
and
or
mov
imul
lods
inc
cmpl
insb
loop
pop
aam
loopne
mov
inc
out
pop
push
lcall
sbbb
mov
push
das
inc
mov
sbb
xor
jmp
ds
adc
jmp
leave
and
pop
scas
push
inc
mov
cmp
push
cmp
mov
jmp
mov
mov
cmp
mov
ljmp
and
inc
loop
sub
dec
jecxz
xchg
aam
push
push
rcrb
jnp
or
out
jnp
das
dec
sub
mov
sub
loop
imul
dec
jno
xbegin
ljmp
sarl
xchg
adc
xor
inc
jle
mov
mov
sub
lea
sahf
iret
andb
xlat
cmc
js
cmpsl
push
inc
bound
leave
push
shrb
lahf
or
leave
pop
mov
push
pop
sbb
push
sub
loope
jecxz
test
dec
rorb
xchg
lea
imulb
fbld
test
cmovnp
pop
xchg
xor
pop
in
clc
pop
dec
cmp
inc
movsb
xor
cmpl
cwtl
sub
lds
push
or
insl
mov
cmp
lock
jge
test
shrb
mov
push
jns
xchg
cltd
sbbb
cmp
icebp
inc
add
imul
ss
and
mov
dec
scas
les
sub
or
ja
fiaddl
pop
push
mov
adc
and
and
shlb
lret
sub
insl
fisttpl
iret
push
les
sub
push
sbb
mov
mov
movsb
scas
movsl
jl
inc
or
icebp
lret
std
or
inc
movb
sub
scas
lods
daa
sub
dec
das
out
cltd
fisubl
loopne
subb
pushf
aad
and
xor
jne
mov
adc
pop
push
push
roll
fcomps
add
add
xchg
les
and
bound
mov
aad
xchg
jl
sub
mov
and
leave
push
lock
mov
aaa
mov
jbe
incb
imul
mov
movsb
add
sbb
pop
and
inc
and
insb
je
ret
daa
dec
push
push
dec
add
movsl
sub
xchg
xchg
sbb
xor
push
mov
pop
pop
jne
imul
jmp
jo
jb
fldl
popa
rolb
ret
mov
sbb
xchg
orl
out
jp
mov
in
mov
jo
hlt
sahf
xchg
mov
push
loope
pop
mov
sahf
enter
gs
jo
xchg
pop
jl
and
js
adc
mov
rolb
mov
fwait
into
push
xor
mov
sub
pusha
and
scas
fimuls
cmc
movsl
shrb
or
fcompl
dec
fidivl
fldenv
or
mov
ljmp
pop
movsb
mov
fs
dec
xchg
pop
std
insl
xchg
push
test
add
push
dec
cmp
jmp
xor
cmpsb
or
into
lahf
lret
jne
mov
add
mov
or
jnp
jl
lahf
push
enter
imul
lods
mov
xchg
cmpsl
adc
add
inc
arpl
mov
mov
xchg
jle
cmp
and
popf
inc
fsubs
mov
jae
test
mov
and
or
cmp
popf
cmpl
sbb
sub
js
pop
lods
lods
pusha
mov
jae
leave
das
mov
jg
insb
mov
pop
popa
imul
jge
mov
mov
xchg
push
jmp
pop
insl
not
hlt
inc
sahf
repz
xor
ficoms
lahf
jnp
mov
cltd
mov
int
sar
inc
repz
in
inc
sarl
sbb
lret
push
sti
xchg
insb
push
dec
xor
inc
mov
test
sbb
jle
push
jle
lret
push
inc
jge
fmull
icebp
sbb
or
inc
mov
sub
jmp
clc
mov
sbb
sub
mov
mov
jno
adc
hlt
adcl
pop
xor
mov
mov
mov
out
ret
add
cmp
lcall
inc
rolb
rclb
add
cmp
sbb
pop
sahf
lods
jae
pop
jecxz
cmp
or
js
xchg
repz
out
aad
mov
dec
sbb
and
cltd
call
mov
notl
dec
cmp
pop
xchg
xor
daa
mov
dec
jbe
pop
mov
lret
mov
add
repz
popa
adc
push
inc
ss
loopne
cld
add
stos
mov
xor
mov
adc
jb
adc
bound
dec
lahf
push
dec
dec
jecxz
push
mov
movsb
or
rclb
stos
mov
ficoml
std
push
mov
push
ds
add
sub
mov
fcoml
mov
and
pop
daa
cmp
xchg
jb
push
test
mov
js
je
std
or
outsl
mov
subl
rcl
dec
jecxz
es
ret
filds
xchg
cmp
jno
shlb
add
iret
popfw
repz
out
cmp
cltd
jbe
sub
out
xchg
dec
pop
mull
xchg
cmp
scas
xor
mov
out
pop
xor
call
inc
test
mov
push
xor
jbe
mov
add
std
roll
sbb
aam
int3
pop
outsb
stc
cmp
dec
push
sub
or
jnp
data16
imul
and
cltd
inc
ja
mov
js
pushf
mov
xchg
pop
xor
cmpsl
movsl
int3
pusha
xlat
sahf
je
incb
loop
andl
ljmp
arpl
ret
out
rcll
test
push
into
cmp
mov
idiv
icebp
in
push
fsubl
or
add
lret
mov
lods
ret
aaa
cwtl
push
inc
neg
sbb
or
adc
int3
mov
cmp
outsb
jmp
std
imulb
adc
pusha
xchg
cwtl
imul
push
pop
pop
ret
std
mov
pushf
sub
inc
inc
into
adc
mov
test
pop
ljmp
lahf
hlt
inc
xor
mov
pop
and
push
jns
or
xchg
test
cmp
popa
push
pop
sub
inc
dec
cld
in
loop
xor
sub
jae
pop
cmpl
rcr
and
jmp
jg
mov
push
sbb
aas
jmp
icebp
inc
mov
jmp
mov
jbe
lcall
and
lcall
xor
loop
or
jp
repnz
aas
pushf
lret
je
jbe
sbb
push
push
push
xor
lods
mov
jns
adc
andb
xchg
fwait
inc
loopne
mov
pop
divl
sbb
inc
pop
lds
clc
add
stos
jno
ret
sub
inc
push
repz
jg
or
cmc
mov
aas
mov
stos
outsb
mov
sub
cmpl
mov
push
jge
pop
push
push
or
sub
loop
addr16
push
inc
xchg
jo
pop
sub
mov
jno
test
cmpsl
fincstp
stos
lcall
outsb
mov
cli
lea
push
or
loop
cs
inc
cmp
into
jb
jg
xlat
and
push
inc
cmpl
sti
jno
sub
sbb
fsts
lahf
loop
idiv
out
xor
mov
scas
lahf
out
mov
rcrb
jp
outsl
xchg
push
ftst
xchg
dec
sbb
pop
hlt
jl
xchg
and
lds
in
out
imul
sub
push
mov
push
adc
mov
imul
iretw
jo
cmp
or
rcll
cmpb
aas
daa
cli
stos
push
stc
pop
inc
push
cmp
adc
mov
and
cltd
sbbl
fcomps
xchg
cmc
stc
lret
mov
lods
dec
bound
add
add
xor
push
decl
xchg
rolb
cltd
imul
jecxz
and
mov
loopne
push
insl
xor
fnstenv
xchg
cmp
or
out
loopne
inc
xchg
sbb
mov
pop
or
xchg
mov
or
mov
pusha
faddl
sti
inc
out
arpl
sbb
dec
scas
mov
testl
js
fwait
popa
dec
mov
mov
jne
xchg
cmpsb
scas
pusha
jmp
pop
add
mov
push
or
call
test
add
pop
dec
iret
jbe
pop
inc
push
test
xor
es
fsubl
inc
jmp
mov
cmp
xchg
lea
jge
push
bound
in
cmp
add
xchg
dec
push
push
pop
cmpsl
xor
ja
ror
pop
or
inc
movsl
sub
dec
int
bound
and
idiv
popa
dec
outsl
jle
sub
add
pop
and
inc
mov
in
outsb
xchg
cmpsb
mov
sub
sub
es
enter
andb
shll
frstor
andb
in
mov
lock
or
xor
repz
sub
inc
rol
jae
shl
rorb
add
mov
inc
fsubrp
jo
jmp
fidivs
fcos
stos
dec
call
adc
mov
sub
and
popf
stos
int
shlb
inc
dec
xor
stc
push
jmp
cwtl
int3
call
jle
cmp
movlps
xor
inc
or
xchg
push
aad
addr16
fcomi
push
je
mov
ss
cmpl
fidivs
pop
fs
cmp
repnz
fs
pop
jne
fstps
or
movsl
xchg
jmp
dec
push
cmpsl
sbbb
nop
mov
cmpsb
sahf
xor
movl
adc
imulb
and
mov
xchg
adc
and
in
push
loop
adc
cmp
cld
div
aas
test
pop
mov
lea
and
dec
in
sub
xchg
out
enter
jo
ret
or
fdiv
jl
dec
lods
lock
pop
push
sbb
outsb
adc
stos
jno
std
xor
call
add
mov
sbb
idivl
push
inc
lret
jb
out
cltd
add
cli
pushf
aam
loope
in
cli
jp
insl
sub
or
xchg
nop
das
mov
fwait
test
mov
pop
mov
sbb
xlat
pop
inc
sbbl
test
or
jbe
push
loop
push
sbb
add
add
mov
js,pt
shr
add
mov
cltd
scas
push
les
mov
out
push
iret
or
or
push
push
ss
push
cltd
sahf
jno
das
idivl
psllq
pop
int3
insl
repz
repnz
cli
sbb
sub
jns
inc
xor
icebp
inc
test
loope
gs
int
or
and
lahf
pop
jg
mov
into
int3
jp
xor
shrl
adc
mov
inc
xchg
jg
xor
js
bound
push
push
hlt
xlat
mov
jmp
adc
loope
sub
xor
insl
mov
xchg
andb
std
or
scas
cli
popf
test
ret
cmpsb
rolb
popf
xor
lcall
hlt
lock
fldcw
mov
ret
lret
stc
sbb
mov
mov
dec
dec
mov
sub
xchg
clc
aad
call
addr16
loopne
xchg
outsb
push
je
mov
jp
aaa
xor
out
cmp
cmp
sbb
insl
xchg
cmp
lcall
jl
xor
mov
clc
pop
pop
and
icebp
fimuls
lods
cwtl
pusha
je
test
adc
mov
or
jmp
out
insb
or
cmp
xchg
je
pop
notb
lods
int
test
mov
or
stos
pop
push
mov
shlb
shl
mov
adc
ficomps
imul
or
aam
inc
sub
add
xorb
into
add
push
sbb
add
hlt
dec
ljmp
dec
add
in
mull
pop
inc
jge
or
cmp
sbb
int3
cmp
mov
dec
jp
pusha
clc
mov
jmp
mov
imul
dec
mov
ficomps
insb
shrd
jecxz
jg
cmp
xor
mov
aam
mov
sub
mov
nop
push
sub
rcrl
movsb
add
mov
stos
fninit
aam
test
in
push
xor
pop
sub
xor
dec
adc
inc
in
sub
or
xchg
sbb
pop
inc
push
dec
lds
add
adc
testl
dec
ss
push
and
sbb
das
mov
test
pop
mov
inc
mov
daa
stos
fs
sub
mov
data16
les
sub
mov
xor
or
pop
inc
std
mov
aaa
sub
xchg
pop
mov
movhps
or
rolb
xchg
aad
test
xchg
dec
lahf
loopne
sub
and
dec
sbb
and
pop
or
aad
test
stos
sub
jecxz
lret
ret
and
jmp
push
dec
mov
test
inc
insb
xor
je
into
mov
ret
cld
xchg
mov
sub
test
insl
or
cmp
loope
jecxz
xchg
jae
aas
mov
movsl
icebp
call
out
mov
mov
ja
rclb
jge
dec
fs
scas
fcoms
adc
shl
pop
mov
aad
add
inc
js
dec
xor
add
std
xchg
dec
pop
and
xchg
out
push
aad
jae
pop
ret
testl
sahf
dec
repz
or
ljmp
pop
and
scas
sub
in
lret
sbb
pop
jmp
dec
jnp
pop
xlat
cmp
insl
movsb
cmp
insl
cmp
mov
lods
dec
pop
inc
adc
cmpsl
dec
push
xor
lahf
movsl
dec
adc
faddl
outsb
fidivrl
mov
push
fdivs
sarl
sbb
mov
roll
inc
scas
adc
repz
dec
in
xchg
inc
push
pop
mov
movsl
pop
addb
mov
imul
movsl
enter
adc
sarb
and
ja
mov
xchg
mov
jmp
lea
cwtl
push
and
cli
and
leave
rcrb
mov
push
adc
gs
daa
mov
push
icebp
sahf
cmp
frstor
aas
mov
stos
inc
and
push
testl
lret
stos
xchg
jecxz
jno
iret
sbb
push
lret
sub
cmpsl
mov
sbbl
mov
and
lea
mov
fmulp
out
or
jb
xlat
stos
jo
xchg
mov
std
loope
push
xor
mov
sub
jle
loop
lods
test
cmp
fldenv
outsb
sub
bound
cmpl
pop
cmp
clc
jl
mov
sbb
add
in
inc
xor
lret
mov
mov
inc
dec
and
sbb
insb
add
inc
jl
inc
fnsave
xor
jp
aam
stos
push
or
pop
mov
mov
jns
inc
adc
lcall
mov
adc
shlb
push
jg
rcrl
adc
repz
inc
xchg
xor
mov
dec
movsb
adc
aam
insl
fildl
mov
jp
add
or
repz
leave
scas
sbb
js
into
mov
or
push
loopne
and
aad
sbb
lods
ret
das
aas
pop
jle
out
push
outsl
ret
mov
jne
jg
mov
mov
jmp
mov
sbb
push
negl
pop
push
ficompl
aam
dec
and
icebp
popa
mov
clc
ja
inc
shlb
imul
cli
mov
dec
rorb
pusha
lret
pop
push
or
aaa
ss
imul
xor
test
aam
pop
mov
lcall
pushf
shl
nop
lds
inc
and
push
pop
mov
outsb
mov
imul
jns
rclb
repz
js
jne
inc
test
int
inc
es
add
cmp
shlb
std
sbb
call
stos
outsb
bound
int
push
mov
jp
shr
push
shrl
test
testb
push
js
insb
subl
and
mov
es
mov
stc
mov
mov
lods
into
sbb
out
fiadds
xchg
xor
mov
inc
add
shlb
fwait
and
pusha
les
popa
into
pop
dec
les
fiadds
push
mov
xor
arpl
mov
xlat
mov
js
popf
mov
int
gs
nop
sub
outsl
inc
cmp
ret
mov
and
shlb
sar
adc
pop
arpl
inc
fiaddl
adc
xor
loopne
in
out
aaa
xor
mov
fcoms
inc
xorl
or
sbb
in
cli
add
js
or
push
lea
push
insl
cs
das
cmp
shlb
mov
xor
jge
fidivrs
lahf
jnp
lea
jb
mov
add
pushf
test
cmp
mov
loopne
adc
stc
mov
ja
std
sub
lret
cmp
cmpsb
mov
std
es
and
mov
andl
inc
cmpsl
ljmp
imul
pushf
sub
popl
nop
cmp
lret
fldl
or
xchg
loopne
mov
scas
pop
cmpl
scas
cmpsl
fdivs
jbe
test
fucom
cli
mov
mov
stos
scas
iret
testl
cltd
cmpsb
mov
cli
repnz
mov
movsb
push
mov
outsb
push
shll
push
sub
ja
pop
dec
popf
jns
mov
mov
xor
lcall
lret
jmp
dec
lea
xor
mov
mov
push
and
xchg
mov
shl
jnp
push
lods
mov
cld
ficoms
in
xor
stos
sub
add
out
scas
jmp
add
xchg
cmpsl
loop
xor
aam
add
call
icebp
xor
sub
stc
fwait
iret
dec
ret
inc
in
rcll
rcrl
clc
js
or
mov
mov
mov
ret
push
icebp
outsl
mov
mov
iret
jl
add
push
fsub
pop
xor
xchg
aaa
gs
fwait
pop
mov
or
mov
sbb
cs
test
mov
sahf
int3
scas
pop
dec
cmpsb
pop
cs
arpl
pushf
shrb
dec
dec
sub
enter
jmp
loopne
pop
test
dec
sbbb
shrl
sbb
ss
adc
aas
mov
rcrl
inc
mov
lret
mov
adc
xchg
mov
xchg
and
inc
lods
stc
faddl
sbb
js
adc
lret
dec
dec
push
cmpsl
cmpsb
outsb
imul
sti
inc
nop
das
xchg
jbe
in
add
add
out
int3
lea
mov
dec
and
inc
mov
xor
lcall
shrl
mulb
in
stc
mov
stos
movsl
rolb
push
cmp
sbb
dec
inc
adc
std
stos
jb
je
fisttpl
das
mov
ljmp
ljmp
jge
loop
sar
add
das
lea
in
cmpb
roll
repnz
test
cwtl
or
imul
popa
subl
xchg
lcall
pop
xor
addr16
push
loope
loope
push
mov
imul
imul
fisubrl
aam
mov
or
inc
std
in
shlb
ret
popa
pusha
pop
dec
pushf
add
cmp
mov
fwait
in
inc
scas
aam
push
andl
decb
sbb
jns
and
jmp
mov
mov
push
dec
pop
and
mov
adc
outsb
fwait
xchg
and
inc
in
mov
dec
fcoml
clc
jp
dec
lcall
adc
ret
arpl
or
aad
jno
sbb
push
push
pop
xchg
xchg
mov
and
dec
lods
std
push
cmp
in
sub
push
rcr
adc
inc
sahf
sub
xlat
jp
push
sub
mov
or
sbb
ret
testb
adc
lods
out
and
aam
mov
xor
sub
sbb
outsl
sub
lock
int3
data16
cld
cmp
dec
xor
rcrb
cmpsl
ffree
dec
imul
mov
cmp
xor
fdivs
testl
push
mov
gs
cmpl
loop
push
iret
fldcw
pop
cmp
xchg
test
jne
mov
in
jg
add
xor
dec
arpl
xor
push
scas
inc
inc
into
jo
ficomps
jae
add
popf
sbb
inc
inc
cmc
scas
out
mov
popf
loope
mov
rorb
adc
xchg
cmp
mov
aas
insb
dec
jge
pushf
xor
or
jl
int
mov
inc
add
iret
cmp
adc
aas
lock
and
cmp
jns
int
mov
push
ror
lcall
xor
pop
ds
mov
cmp
mov
loopne
inc
mov
add
add
jmp
adc
out
xchg
sahf
popf
test
out
and
sti
and
mov
xchg
jmp
outsb
les
rorl
roll
lret
jp
ret
rolb
roll
shr
pushf
test
push
lods
arpl
sahf
sahf
scas
sbb
push
mov
sub
push
inc
mov
scas
push
pop
lds
addr16
sbb
jmp
jmp
ret
pop
sbb
mov
dec
push
mov
test
dec
loope
inc
repz
pusha
mov
pop
popf
rcrb
lods
jo
aad
mov
and
fmuls
cmp
mov
sub
add
dec
adc
inc
sti
and
mov
xchg
movsl
and
xchg
inc
and
sahf
adc
dec
push
jns
xor
popf
sub
outsb
popl
lret
xor
mov
jecxz
insl
lahf
sub
cltd
and
movsl
jecxz
sub
dec
adcb
adc
push
mov
ret
lock
inc
push
xlat
pushf
sub
scas
and
fldcw
fst
and
xlat
out
ret
inc
movsb
dec
xchg
sub
popa
pop
jl
gs
daa
dec
and
in
mov
sbb
in
insb
and
inc
cwtl
dec
cmp
add
mov
push
in
cmp
stc
gs
add
jecxz
pop
ja
stos
aam
scas
stos
lcall
or
adc
andl
shl
insb
cli
push
test
lods
xchg
mov
jns
mov
scas
mov
mov
pop
jmp
call
jmp
xor
mov
aas
adc
pop
dec
or
pop
jns
mov
ret
fsubrs
std
dec
sahf
cmpsl
jo
and
addb
daa
mov
loopne
push
dec
add
mov
xor
sub
cmpsl
add
lcall
stc
popf
dec
cmp
or
and
adc
push
and
mov
hlt
sub
adc
mov
rorl
sti
and
push
je
popf
ret
std
adc
xchg
push
stc
pop
add
adc
mov
cltd
enter
les
test
sbb
fldl
mov
jmp
cmc
mov
das
ss
and
imul
dec
dec
cs
push
adc
aam
or
lret
xchg
adc
lahf
xchg
add
cmc
and
jle
jle
in
ja
dec
jmp
test
mov
enter
pushf
xchg
xchg
push
int3
fsts
test
es
xor
dec
inc
push
xor
xchg
pop
adc
push
fnsave
in
lock
pop
adc
push
push
mov
xchg
hlt
pop
push
cmp
mov
outsb
jns
jae,pt
mov
dec
popa
mov
lcall
loop
pop
add
and
in
add
xchg
fisttpl
insb
and
daa
js
flds
inc
jmp
cmpsl
pop
popf
cmp
jmp
cltd
dec
pop
mov
dec
xchg
jne
test
pop
add
int
and
dec
shlb
stc
jno
pop
pusha
shlb
jne
shl
lahf
sbb
pop
test
aad
mov
pushf
cmp
mov
mov
cmp
or
ds
jp
adc
sub
fcomps
push
divl
and
adc
test
pop
and
jnp
aas
add
repz
mov
into
sbb
ds
aas
adc
cmp
repz
inc
sbb
cwtl
clc
jno
fwait
scas
out
adc
es
push
lods
pusha
push
mov
sub
enter
popf
stos
mov
add
push
jp
pop
fisttps
js
iret
xor
gs
mov
jmp
jg
jmp
cs
in
cltd
sar
pushf
mov
pop
repz
and
fstpl
xchg
jno
hlt
movsb
pop
push
pop
pop
repnz
jae
push
xchg
in
sbb
pushf
loop
pusha
or
add
lods
cmc
outsb
shll
lcall
pushf
push
nop
xor
xchg
xor
aam
xor
push
dec
jnp
inc
js
in
cmp
ja
mov
sbb
mov
and
xchg
fisttpll
dec
xchg
xchg
bound
dec
sbb
xchg
out
mov
inc
popa
or
icebp
sbb
mov
in
or
neg
arpl
lret
mov
add
jb
rclb
mov
or
aas
sbb
loopne
insb
aaa
stos
mov
mov
fmul
outsl
and
dec
ret
lods
dec
adc
lcall
pcmpgtw
aad
fmul
dec
cmpsb
sub
enter
lret
sub
out
imul
js
jg
cmp
xor
ljmp
fs
push
out
push
inc
repz
mov
insb
jo
rorl
addr16
js
add
pop
mov
sarl
pushfw
xor
shl
rorl
xor
mov
pop
cmp
pop
cmpsl
out
mov
jg
mov
xor
pop
mov
arpl
add
imul
loopne
cmp
lds
in
adc
js
scas
popa
jae
sub
imul
out
adc
lds
shrl
mov
dec
push
mov
push
mov
mov
inc
xlat
mov
mov
femms
ja
pop
sbb
push
popa
push
cmp
mov
shr
mov
pop
stos
xchg
push
mov
mov
aad
mov
jle
mov
xor
adc
jnp
xchg
or
cmp
sarl
shlb
xlat
lcall
cmp
rclb
xchg
loopne
into
daa
ret
lock
sbb
insl
lock
shrb
idivl
dec
push
push
je
pop
enter
xorb
movsb
test
jae
fwait
cmpsb
jg
scas
sbb
movsl
and
leave
shrl
out
aaa
loope
and
mov
lret
and
scas
or
adc
dec
inc
dec
and
jmp
inc
inc
enter
lret
rcl
pop
mov
jge
pop
outsb
lcall
jne
mov
in
mov
movsl
in
data16
jnp
mov
add
dec
iret
push
xor
scas
add
xlat
jl
push
xor
xchg
ljmp
inc
insb
xor
push
jbe
or
shrl
jl
cld
and
xchg
adc
fmul
sti
push
mov
sbb
xchg
mov
pop
mov
jno
and
sarl
sub
jnp
jns
xchg
int
xor
jnp
movsb
and
pop
mov
xor
pop
mov
dec
fmul
sub
xor
mov
xorb
xchg
pop
sub
sub
les
adc
scas
xchg
test
xor
or
dec
pop
pusha
mov
push
stc
cmp
mov
and
pop
movsl
xor
xor
icebp
orl
mov
shlb
cmpsb
mov
sub
lods
fidivrl
aam
or
xor
push
inc
std
pop
mov
add
dec
mov
call
jg
jl
movb
insl
mov
lds
rcrl
sbb
pop
out
sbb
outsb
cmp
movsl
ret
cmp
or
jp
add
pop
in
inc
sub
aam
fistpl
sarl
hlt
call
adc
pop
xchg
stos
mov
mov
or
mov
and
xchg
push
mov
pop
das
pop
fistps
jecxz
repz
and
adcl
insl
cmp
jbe
arpl
sbbl
imul
and
fiaddl
jmp
sbb
xor
and
mov
cmpsb
and
or
inc
test
pop
pop
mov
xchg
xchg
ret
mov
and
imul
dec
dec
stc
pop
mov
pop
insb
add
mov
and
jecxz
jne
in
jb
in
pushf
int3
into
out
fs
jecxz
mov
movsl
mov
fcompl
in
sub
xor
mov
outsb
push
icebp
mov
outsl
and
iret
in
test
push
outsb
push
jnp
push
xchg
into
adcb
popa
and
push
jne
ds
cmp
fs
mov
push
aas
push
dec
ficomps
into
add
cmp
arpl
push
sbb
inc
addr16
cld
pop
clc
loope
xor
fnstenv
cmpsl
divb
orb
sbb
gs
push
pop
push
popa
inc
xchg
loope
idivl
sub
add
popf
cs
das
xor
jmp
and
sbb
mov
push
mov
cld
int3
dec
adc
dec
pop
scas
inc
inc
in
mov
into
sbb
dec
push
jg
outsb
scas
in
in
push
sub
ljmp
rcl
adc
das
add
pusha
adc
sbb
int
repz
loop
lcall
roll
cmp
add
mov
sub
imul
jno
mov
mov
call
in
push
pop
sbb
rcrl
std
cmp
mov
xor
sbb
add
mov
loopne
je
and
ds
cmp
mov
push
sbb
std
loope
fdivrp
jecxz
mov
int3
scas
adc
pop
sbb
push
ss
mov
lds
aas
rclb
cmpsb
arpl
mov
inc
fldt
mov
in
cmpb
maskmovq
testl
out
jl
mov
test
fabs
lods
out
push
dec
pop
and
dec
int3
jb
ret
fsts
sbbb
xor
lea
cltd
mov
test
pop
das
and
inc
dec
lret
jbe
dec
call
lea
and
leave
mov
mov
insl
imul
or
mov
jg
mov
xchg
push
out
in
lahf
data16
aam
sub
sbb
dec
cmp
in
xor
addr16
jnp
or
pop
pushf
shll
test
mov
in
movsb
xchg
idivl
mov
dec
imull
pushf
sbbl
lock
mov
stc
jmp
cmp
xchg
mov
adcb
mov
scas
jo
aad
sub
imull
sub
popf
pop
adc
pop
mov
cwtl
dec
cmp
stos
int3
faddl
sub
aam
movsl
pop
dec
sub
fstpl
add
sbb
xor
mov
and
pop
call
insb
fmull
in
movsl
daa
icebp
jne
xchg
xor
push
aas
mov
cmpsl
adc
or
pop
out
dec
mov
cltd
pushf
dec
adc
aaa
sbbb
lea
das
pop
std
cmc
notb
mov
mov
and
jp
mov
mov
fildl
lds
lods
mov
mov
addr16
add
jle,pn
fwait
lret
data16
dec
out
das
out
inc
sarb
jle
xchg
push
fs
in
xchg
xchg
lock
or
test
push
in
scas
adc
inc
fidivrl
lret
xor
addr16
push
xor
stc
jle
inc
pop
in
pusha
ret
mov
adc
test
sbb
inc
ja
stc
fwait
inc
mov
outsb
in
shl
daa
loope
ficoml
xchg
adc
cmp
aam
mov
cmova
in
notb
xor
pop
ja
jg,pn
cmp
scas
cmp
jecxz
jo
adc
mov
repnz
cmp
fimull
jmp
jp
in
fistl
pop
test
lods
push
jbe
divb
xchg
jecxz
xor
aam
ss
inc
push
xchg
das
imull
or
adc
or
cwtl
mov
xchg
adc
aas
pop
mov
pop
cmp
push
push
pop
and
sbb
mov
sbb
test
popf
in
fstl
jge
add
jne
fsts
push
sar
mov
xor
push
xor
std
xlat
pop
into
xchg
inc
jmp
bound
lea
jl
fsubrl
inc
mov
outsl
stos
mov
adc
xor
jecxz
test
mov
inc
push
push
or
pop
xchg
insb
jg
inc
cmp
jb
jnp
cmp
mov
pop
inc
negl
iret
xchg
add
outsb
loop
mov
xor
call
movsb
je
js
mov
lret
add
data16
scas
lcall
loope
sbb
sbb
cmc
fisttpll
int
iret
fsts
fyl2xp1
xor
sbb
fadd
rcl
adc
jg
xchg
filds
mov
out
iret
xchg
mov
cmpsl
arpl
cmp
cmp
jae
aad
jmp
jmp
jne,pn
dec
inc
loopne
push
pop
sahf
mov
xor
dec
dec
xor
pop
add
pushf
jg
or
clc
push
loop
sub
imul
xchg
sti
sub
mov
scas
dec
loope
dec
mov
lret
push
mov
pushf
inc
jl
scas
aam
mov
sub
dec
sub
fs
ret
stc
mov
cltd
xor
cmp
les
cmpsl
hlt
adc
clc
xchg
fdivrs
ljmp
out
dec
dec
jle
popf
add
clc
xor
or
stos
sti
and
fwait
cltd
xor
or
dec
cmp
push
test
jp
sub
repz
test
filds
pop
xchg
cs
mov
mov
pushf
addr16
mov
pop
mov
add
push
out
push
mov
test
call
out
xchg
cltd
push
je
cmc
push
and
scas
add
add
sbb
add
adc
dec
lcall
cmp
shrb
in
xlat
mov
add
icebp
pop
jb
jmp
fs
addl
xchg
mov
sub
jae
pop
nop
mov
incb
adc
fwait
movsb
adc
or
aam
xorl
xchg
inc
bound
pop
mov
mov
xlat
rol
call
mov
addr16
fstpl
mov
mov
ret
push
push
lock
adc
cmc
jecxz
data16
or
les
lods
dec
loop
or
cmp
negb
in
fsin
sbb
outsb
add
jmp
xchg
push
pop
int3
sbb
xchg
pop
sub
jge
les
mov
sub
sbb
cmp
jp
adc
or
pop
mov
pop
popf
mov
mov
out
and
arpl
mov
leave
sub
mov
sbb
mov
mov
jmp
sar
sub
popf
es
rcl
add
add
push
jnp
aad
scas
cwtl
cli
lods
lea
pop
roll
pusha
mov
loopne
xchg
sti
xor
pop
fldcw
ret
and
pop
xchg
aad
mov
pusha
adc
xor
dec
mov
stos
inc
jl
mov
loopne
js
and
pop
pop
fdivrs
jmp
pop
idivl
fstps
sbb
xor
lcall
pusha
imul
jb
pop
lret
jg
cwtl
push
xor
sub
imul
adc
jmpw
add
outsb
mov
adc
add
xor
mov
sub
pop
aas
xchg
fwait
pusha
mov
sbb
mov
bound
stos
jb
mov
push
lock
or
insb
icebp
jbe
insl
dec
or
cmp
push
ljmp
jecxz
cmp
fsubs
gs
in
or
lahf
mov
sbb
ret
mov
adc
push
and
or
push
and
push
je
div
pop
ja
out
ret
fisttpl
test
add
test
scas
cmp
or
and
lret
or
ljmp
sbb
add
addl
lock
inc
enter
push
jmp
push
push
xor
mov
lods
push
int
xchg
sub
add
cmp
xchg
out
or
gs
push
pop
adc
lock
adc
pop
std
cwtl
fsubs
out
push
bound
mov
shl
sub
ret
jge
int
fstpt
push
lods
dec
push
fcomip
mov
lahf
pushf
inc
lds
pop
insb
insb
mov
shlb
lret
daa
pop
or
mov
xlat
ss
int3
sti
mov
lret
outsb
dec
and
fcomps
loopne
addr16
mov
inc
pop
jno
pop
cmp
or
pushf
pop
aam
jmp
push
push
or
adc
ljmp
dec
cmpsb
fbstp
cmp
xor
imul
mov
pop
adc
dec
pop
mov
jo
xor
mov
or
dec
mov
mov
push
clc
or
mov
jmp
mov
insl
mov
lds
fildl
imul
push
cmc
mov
push
xchg
mov
cmp
test
sete
outsl
xchg
mov
dec
push
insl
push
daa
or
push
out
subb
pop
lods
aad
cmp
fidivl
in
aas
xchg
or
or
arpl
add
rolb
push
fwait
mov
push
mov
mov
xchg
aas
push
aam
xchg
lock
dec
inc
int3
or
add
push
fiaddl
in
push
stos
pop
icebp
adc
mov
mov
test
dec
cmp
js
fdivr
inc
and
dec
cmp
sbb
inc
insl
push
std
adc
scas
xchg
enter
adc
wbinvd
lret
or
stos
sbb
mov
in
dec
jg
sbb
in
inc
adcl
jmp
nop
out
dec
andb
xor
cmpsl
adc
in
cmpsb
loop
or
sbb
shlb
xor
test
push
push
outsb
add
mov
xchg
push
add
jb
jecxz
mov
and
push
in
js
outsb
lahf
mov
data16
add
mov
addb
dec
dec
cmp
pop
and
inc
out
pop
test
xchg
in
or
inc
cmp
mov
xchg
mov
mov
orl
bound
dec
jmp
out
push
or
hlt
roll
jae
flds
jno
mov
jbe
aaa
shlb
inc
in
sarl
jns
ret
mov
out
cmp
sbb
push
popa
lret
scas
xchg
movsb
int
out
push
dec
mov
ja
mov
cltd
cli
shll
cmc
js
mov
jp
mov
into
or
sbb
jns
or
push
sti
jle
mov
fistps
or
test
loope
lcall
jne
ret
mov
jge
push
out
movsb
push
xchg
rclb
push
popf
icebp
xlat
jnp
mov
or
sarl
or
mov
std
xlat
addr16
push
pusha
pop
lahf
jo
inc
les
jnp
arpl
and
pop
xor
cmp
cmp
sub
repnz
pop
rorl
dec
test
test
mov
lds
jecxz
dec
rorl
fwait
lods
imul
daa
aad
lods
jecxz
dec
ja
mov
push
push
jnp
jl
scas
mov
push
test
add
decl
sbbb
jg
sbb
loope
rcll
cmc
pop
mov
cmp
adc
repz
cmpsb
xchg
int
icebp
push
popf
out
andl
lods
jae
mov
pop
outsl
pusha
or
mov
jo
inc
jns
enter
mov
xchg
push
lods
add
sbb
cltd
jmp
and
push
add
repz
ss
mov
insb
outsl
pop
pushf
xorb
std
mov
jle
jl
jns
mov
sbb
js
js
cmp
push
aaa
loop
jo
push
xchg
inc
in
inc
mov
push
vmread
sti
lcall
subb
inc
scas
jb
adc
dec
push
jo
xchg
lret
je
mov
cmp
cltd
lret
or
mov
ljmp
fistpl
xchg
adc
in
dec
movsb
loop
pop
call
dec
aas
xchg
into
mov
xchg
jnp
shrl
mov
inc
dec
fst
in
inc
mov
fidivs
jno
jp
test
sub
pop
add
xor
imul
lods
insl
sbb
sbb
and
add
xorl
roll
cli
int3
test
imul
adc
sahf
scas
loop
pop
cs
jne
popa
mov
aad
sarb
sbb
jb
test
inc
pusha
xchg
je
fistpl
fstl
mov
sbb
scas
repnz
push
sti
and
sbb
adc
pop
cmc
fsubrl
imulb
bound
mov
das
or
subb
push
ljmp
cmp
aas
cmp
notl
outsl
cmp
out
xchg
add
ret
scas
sbbl
jl
dec
push
int3
addr16
js
pop
roll
and
inc
negl
daa
das
push
stos
add
mov
icebp
jns
add
mov
jge
les
mov
push
mov
aam
in
mov
xchg
pusha
adc
imul
jmp
adc
and
cmp
fwait
jle
mov
inc
and
in
push
dec
pop
icebp
lock
das
xchg
movsl
cmp
push
sbb
cmp
pop
clc
sub
cmp
imul
sub
pop
rcrl
insb
sbb
pop
repnz
das
into
push
mov
ret
call
mov
test
cmp
xor
and
sbb
ret
gs
inc
add
and
push
cld
scas
ds
ficoml
push
pop
pmaddwd
mov
adc
xchg
or
jecxz
push
pop
enter
loopne
int3
imul
stos
pushf
movsl
fisttps
or
push
push
and
cltd
mov
test
cli
adc
cmpsb
sbb
scas
cmp
adc
mov
nop
mov
inc
dec
stos
std
inc
inc
int
aas
sbb
out
pusha
ss
mov
outsb
mov
mov
dec
dec
aas
cwtl
mov
push
jnp
push
adcl
add
addr16
mov
lods
dec
or
data16
jo
push
ret
jp
mov
data16
in
xchg
dec
cmp
mov
mov
andb
fwait
xchg
ss
arpl
hlt
int
stos
pushf
inc
lea
pop
daa
pop
pop
xor
adc
jns
loop
jle
sub
data16
clc
xchg
push
jp
fxch
xchg
mov
sub
mov
daa
and
mov
mov
cmp
mov
or
andb
cmp
ret
mov
inc
jnp
repz
sub
arpl
lret
add
adc
je
stos
test
sub
loopne
xchg
int
fldenv
pop
xor
lea
insl
xor
cmp
inc
lods
jp
jns
mov
orb
push
testb
push
test
bound
in
sahf
movsl
rclb
adc
push
adc
icebp
xor
test
outsl
scas
dec
mov
leave
jmp
jmp
jne
shl
sub
ljmp
sbb
add
push
pop
mov
cmpsb
movsl
pusha
adc
sti
lcall
jns
mov
sub
xor
leave
mov
push
dec
fistps
add
mov
iret
cmp
mov
fs
sbb
mov
dec
sbb
add
bswap
push
xchg
fistpl
in
xchg
leave
and
les
ret
sub
xchg
ret
mov
push
hlt
and
and
sbb
mov
insb
lret
mov
mov
push
fsubp
fs
fwait
scas
addl
push
out
mov
jo
push
xchg
stos
mov
xor
hlt
aaa
push
dec
pushf
test
cld
mov
sbb
cmpsb
stc
mov
add
out
jl
xchg
cwtl
sub
roll
sar
mov
mov
mov
cld
cmovl
xlat
test
imul
jecxz
sub
ret
mov
jge
les
fisubrs
mov
cmp
leave
push
rclb
mov
mov
adc
xor
xchg
imul
and
or
adc
xchg
mov
push
cli
dec
loop
cmp
stc
pop
jl
xlat
imul
aad
jge
adc
xchg
jmp
xchg
fwait
jns
nop
es
mov
mov
rcrl
das
shll
pop
mov
pop
and
imul
ds
mov
pop
push
lea
out
and
mov
mov
fidivs
mov
mov
enter
push
scas
hlt
outsb
mov
cmp
in
push
cmova
imul
call
and
inc
sbb
pop
xor
int
lds
or
mov
shlb
daa
sarb
ror
mov
out
loope
and
cld
jg
loope
shrb
push
in
imul
scas
in
ds
mov
push
add
cmp
and
fcoms
aam
adc
js
in
sbb
sbb
sub
lock
inc
cmp
fnstcw
jnp
mov
sub
adc
sbb
test
insb
out
cmp
mov
push
aad
lods
pop
jnp
cmpsl
insl
fildl
and
ds
pop
test
fisttpll
inc
or
out
push
testb
dec
test
sub
pusha
out
int
mov
sbbl
stos
mov
inc
in
jp
mov
test
sbb
pop
movsb
xchg
add
mull
or
cli
movlps
sbb
movsb
incb
dec
outsl
push
mov
add
push
xchg
add
xor
cmp
xchg
popa
cmc
mov
in
adc
dec
fdivrs
fdivs
pushf
stos
outsw
mov
rep
clc
xchg
pop
dec
cltd
je
in
mov
scas
push
andb
nop
jl
adc
sahf
lods
push
rcl
xchg
xchg
test
xor
call
ds
into
sub
mov
les
xor
jno
mov
adc
ret
imul
mov
sbb
loop
pusha
and
fcomi
cmpsl
popl
lret
loopne
lods
sub
fwait
sub
push
adc
fcmovnbe
lahf
inc
sti
flds
jo
sarb
not
lods
push
ds
ret
mov
mov
es
and
movsb
imul
vhsubpd
xor
dec
mov
aaa
sub
pop
into
mov
adc
std
insb
and
cs
je
in
stos
pop
adc
fists
aas
sub
sub
fldl
push
jmp
push
xchg
pop
lret
sbb
aad
ret
aam
rcrb
test
in
and
mov
test
pcmpeqw
sbb
mov
pop
shll
loope
cmc
bound
add
outsl
jne
or
pop
xor
inc
jl
or
sub
lret
push
mov
icebp
sub
inc
xchg
dec
add
xchg
cmp
into
ss
sub
shr
mov
lcall
inc
mov
repnz
sbb
xchg
fidivrs
out
cmp
xchg
xor
insl
xchg
sbbl
add
sub
dec
dec
stos
and
mov
mov
in
imul
sub
loopne
mov
mov
test
out
adc
push
mov
fnsave
add
mov
jns
jnp
enter
mov
mov
dec
sahf
push
les
rcrb
inc
cmp
mov
clc
in
daa
fiadds
pop
cmp
ja
lret
pop
fstpl
int3
sub
sbb
and
idivb
xor
aam
mov
xchg
mov
mov
add
es
lret
inc
div
mov
or
decl
pop
push
int3
shlb
test
dec
inc
mov
not
adc
adc
mov
mov
sub
push
movsb
mov
push
adc
mov
andb
sub
inc
sbb
loopne
fmul
adc
xor
stc
push
cmp
pop
jne
or
mov
push
adc
lea
inc
enter
or
stos
or
jecxz
ret
mov
cmp
adc
xor
mov
pop
sbb
add
xabort
push
or
inc
stos
aad
cltd
ret
iret
inc
jae
std
mov
push
out
mov
loop
add
int
loopne
mov
mov
inc
dec
inc
add
inc
xchg
pushf
mov
mov
in
xchg
outsb
ds
rol
jecxz
push
sbbl
mov
and
negb
xchg
lds
dec
pop
les
dec
in
pop
mov
push
cmp
pop
jge
adc
lret
enter
outsb
sbb
outsl
mov
loopne
xor
push
mov
adc
jge
call
test
lock
dec
clc
mov
xor
ljmp
lahf
addr16
push
mov
sub
xor
roll
ret
sahf
loop
insl
adc
jnp
xchg
es
icebp
pop
jle
add
data16
mov
xlat
test
jge
mov
mov
cmp
ss
sbb
out
push
insb
cmc
or
sti
int3
int
scas
jb
xor
jbe
mov
jge
pop
cld
sbb
jbe
nop
in
dec
mov
mov
push
out
adc
nopl
int3
and
cmp
lds
not
in
in
pop
mov
leave
and
fwait
jle
lea
clc
int3
xchg
into
pushf
shll
inc
inc
adcl
daa
mov
pop
ret
and
adc
jne
mov
imul
es
pop
out
clc
pop
mov
nop
out
arpl
out
in
or
jb
xchg
cmp
mov
or
jg
jle
sub
add
fst
fwait
gs
stos
mov
add
xor
mov
xor
ja
pop
mov
adc
iret
js
add
cmp
and
mov
jne
mov
icebp
cmpl
mov
dec
xlat
mov
test
adc
pop
test
cmp
jno
ret
aaa
jns
sub
cmp
dec
push
xchg
enter
stos
and
ljmp
mov
mov
mov
pop
pop
cmp
packuswb
push
in
inc
or
inc
pushf
push
cmp
jmp
les
inc
jo
ret
sar
sbb
lret
xor
cltd
sub
mov
pop
dec
lock
bound
shll
enter
xor
mov
xchg
into
push
pop
notb
mov
mov
stos
movsl
or
mov
int
push
in
ja
into
jne
sub
js
or
shll
mov
shll
pop
roll
push
pop
stos
push
inc
push
lock
sbb
adc
mov
bound
sub
mov
lods
cmp
rcll
pop
gs
testl
lretw
dec
adc
inc
lcall
sub
pop
imull
nop
dec
mov
jmp
fdivr
and
cmc
cmp
nop
or
sti
aas
aaa
clc
push
sub
popf
mov
and
inc
out
cvttss2si
push
or
mov
aad
lahf
mul
mov
and
push
mov
imul
dec
faddl
cmpsb
mov
test
sahf
out
dec
sbb
cmpsl
pop
pop
fyl2x
dec
sbb
jae
scas
gs
mov
popa
sbb
fiadds
fcom
jae
jo
inc
mov
add
ret
mov
imul
imul
mov
cld
movsb
push
rcr
call
mov
mov
jbe
sbb
lahf
cmp
ror
lret
jae
stc
or
stc
lea
sarl
jecxz
stos
cmpsl
pop
pushf
push
loopne
lods
xor
inc
les
repnz
fadds
jns
insl
sub
mov
push
cwtl
test
inc
sub
stos
mov
cmp
shll
cwtl
loop
jecxz
jno
ret
mov
and
imul
aam
push
inc
mov
or
mov
sbb
lods
sbb
mov
movsl
mov
aam
call
pop
xor
fldt
inc
xor
sub
loopne
sbb
call
jp
test
cltd
in
lcall
push
cwtl
push
lock
in
jb
pop
dec
ss
sbb
sub
adc
ret
clc
fs
fwait
and
clc
mov
sbb
pop
jno
out
sub
addb
and
shrb
push
popf
add
inc
sub
and
bound
cmp
xor
flds
mov
add
push
cmp
adc
xor
inc
mul
cmc
dec
dec
pop
inc
lret
jecxz
imul
jmp
adcb
lods
adc
pusha
and
ret
jmp
rclb
stos
in
pop
movsl
adc
loope
mov
cmp
lahf
xchg
lds
into
into
sbb
mov
pop
inc
cmp
je
sti
dec
mov
sbb
filds
les
insb
stos
mov
cmc
subb
mov
cmp
xor
xor
dec
les
jno
pop
inc
xor
push
rcr
orb
fs
push
mov
sti
mov
pop
mov
fs
cmp
or
sub
jbe
iret
xchg
shrb
pop
je
out
push
repnz
cmp
mov
lock
push
movsb
mov
stc
pop
mov
add
xchg
pop
outsl
stos
cmpsl
out
mov
sbb
and
bound
and
fnstenv
movsl
cli
jge
push
or
fcomip
sub
les
sub
jnp
mov
lock
gs
ljmp
push
pop
xchg
push
sub
movsb
sub
jmp
lea
xchg
mov
stc
lea
mov
sub
rcr
adc
cwtl
xchg
sbb
cmp
rcrb
dec
orb
js
cltd
adc
js
mov
fwait
dec
xchg
cwtl
enter
add
add
into
outsb
mov
push
add
bnd
in
xlat
jg
xlat
ret
sub
cmp
push
add
adc
jno
push
push
inc
je
sbb
mov
cmpsl
xchg
lahf
inc
cli
sti
shlb
cli
xchg
insb
lret
out
shl
sarl
int
adc
popa
or
inc
xor
int
ret
jns
daa
jg
or
enter
shll
sub
sub
jge
insb
cmp
lcall
sub
mov
data16
push
gs
cmp
mov
pop
sub
mov
jp
ja
or
inc
mov
in
lcall
cmp
mov
mov
and
lds
in
xor
fucom
pop
xchg
gs
add
std
inc
xor
push
movsl
lret
insb
adc
orl
cmp
mov
les
inc
adc
test
leave
lret
mov
jg
cmp
mov
or
mov
add
jg
sbb
mov
lea
movsb
aaa
jmp
inc
mov
shrb
jg,pt
dec
test
lods
sti
add
out
loop
adc
imull
clc
add
jns
inc
test
fadds
adc
imul
mov
xchg
and
sub
fwait
xchg
pushf
xchg
ret
jg
clc
rclb
and
jg
outsl
sbb
jno
sub
test
test
push
add
cmp
inc
popf
jg
cmp
add
addr16
sarb
popa
shr
pop
adc
stos
xchg
or
subb
rcrb
mov
mov
ja
sub
out
ljmp
sbb
mov
jne
inc
push
xor
push
pop
fimuls
inc
roll
mov
cmp
dec
sbb
cwtl
lcall
sub
xchg
inc
mov
mov
pop
mov
inc
push
in
popf
pop
adc
pusha
mov
add
jle
mov
rolb
mov
iret
and
cmp
cld
lock
push
or
pop
cmpsl
testb
jg
movsl
lahf
test
add
mov
bound
mov
mov
mov
xchg
jecxz
sbb
push
popf
iret
xchg
or
shlb
dec
movsl
movzbl
std
mov
add
stos
add
push
add
push
jbe
inc
orb
movsb
xor
out
mov
jg
loop
or
stc
pop
repz
adc
addr16
sbb
pop
es
mov
ljmp
cmp
add
scas
ljmp
adc
jp
inc
sti
mov
arpl
mov
cltd
cmp
push
push
stc
andl
jl
mov
pushf
mov
cmp
js
mov
sti
push
xchg
xchg
outsb
pop
xchg
rcll
jb
jb
dec
xor
mov
loopne
xchg
daa
call
sbbl
aas
inc
push
fstps
adc
leave
add
mov
mov
sahf
jnp
out
andl
aam
cli
fbstp
add
subb
dec
pop
addr16
out
mov
inc
ds
fstpt
fcomp
sub
lock
jmp
fld
das
xchg
or
sub
out
sub
fsubr
data16
mov
pop
cmp
fwait
ret
stos
cmp
cltd
add
push
mov
xchg
dec
rol
push
arpl
jne
jns
sub
test
lahf
sahf
inc
xor
or
icebp
mov
insb
jmp
rcrl
pop
popf
pop
repnz
xor
and
aam
cmp
push
ss
insb
cmp
hlt
shl
add
sub
stos
mov
fisubl
stc
push
sbb
test
pop
adc
jae
xchg
rcrb
jle
cs
xlat
pusha
mov
test
inc
jns
xchg
push
stos
pop
xor
iret
int
fwait
sahf
inc
xchg
or
jmp
xor
pop
cmpsl
jb
pop
bound
pop
lods
push
bound
lock
fadd
repnz
jmp
lahf
jmp
cmp
aas
cmp
cwtl
outsb
sbb
add
das
outsl
mov
add
xchg
mov
mov
popa
pop
mov
mov
arpl
movsb
adc
icebp
orb
loop
js
dec
inc
stos
popa
jl
ret
ret
ss
loop
mov
xor
stos
test
gs
or
add
fcompl
shr
sub
pusha
montmul
cmpsb
subl
pop
cmp
inc
cwtl
push
jg
jns
jle
sub
cmp
movsl
mov
es
and
in
mov
mov
scas
fwait
add
int
rclb
repz
inc
jns
mov
pop
fisttps
mov
clc
mov
add
inc
cmp
mull
or
xor
and
add
sub
sbb
push
sbbb
lods
jbe
scas
repz
inc
adc
andl
in
mov
mov
pop
mov
sbb
lds
shlb
push
lret
outsb
sahf
mov
cmp
mov
push
jp
pop
push
sbb
mov
scas
test
jae
dec
mov
aas
test
bound
pusha
int
add
dec
movsb
adc
lods
scas
mov
cmp
mov
jmp
shll
arpl
or
test
or
into
mov
and
dec
jp
test
jnp
outsl
jle
lret
std
test
imul
pop
or
xchg
inc
jb
aas
or
xchg
repz
mov
xor
jne
ss
cwtl
cmp
dec
hlt
fnsave
cmp
mov
or
enter
mov
jo
movsl
jns
xchg
jns
rclb
inc
je
fstpt
xor
repnz
push
push
mov
ss
push
dec
rorl
mov
mov
in
dec
out
mov
xchg
adc
scas
sbb
inc
mov
ret
jecxz
sbb
imul
mov
push
xchg
push
frstpm(287
loop
push
scas
ss
shll
xchg
pop
inc
inc
and
jl
and
insb
lods
or
push
sub
lea
and
pop
mov
push
in
andb
iret
push
xor
aam
push
ss
inc
nop
ret
push
addr16
jb
loope
out
xchg
and
je
mov
setl
add
pop
rorb
imul
fcomps
movsb
call
shll
in
push
mov
mov
pop
fstl
xor
rcrb
mov
aad
ss
mov
movsl
add
pop
leave
call
jo
cmp
mov
imul
loope
sbb
adc
mov
fdivrs
pop
fimull
xor
push
sub
lahf
fidivs
cmpsl
push
pop
popa
das
add
xor
jmp
addb
fwait
in
lret
push
lock
cmpsl
jl
flds
inc
xchg
pop
add
sbbb
cs
pop
and
outsl
xchg
xor
inc
xor
mov
xor
std
rclb
sbb
or
ljmp
sbb
ret
fisttpl
test
dec
sub
push
sbb
jns
mov
add
mov
ret
and
sbb
test
xorb
aad
pop
push
add
mov
jne
pop
aad
mov
xlat
jno
call
fidivrs
arpl
add
cltd
cmp
aaa
cmp
mov
push
pop
testb
dec
mov
cmpl
ret
bound
jecxz
dec
stos
leave
cmp
stc
lret
nop
dec
lods
jb
mov
pop
cltd
dec
mov
xchg
jbe
inc
ja
or
or
sub
imul
jns
push
cmp
cmp
aaa
mov
scas
mov
lret
dec
dec
jecxz
add
mov
bound
aad
mov
cltd
arpl
lock
pop
dec
push
mov
loop
outsb
mov
mov
cmp
mov
push
push
shll
sti
cmp
cli
xor
repz
pushl
out
dec
adc
fstpt
arpl
jne
jecxz
int3
sbb
orl
js
movsl
mov
mov
int3
fldcw
enter
fprem
ljmp
jno
repz
adc
jne
dec
push
mov
and
mov
pop
sbb
jne
pop
das
cmp
mov
inc
clc
scas
push
adc
fldenv
popa
mov
push
xchg
xchg
inc
dec
mov
and
pop
jae
lahf
icebp
push
push
dec
shll
mov
push
add
in
jg
in
test
les
out
cmp
scas
stos
unpckhps
xchg
imul
scas
movsb
jg
lea
fwait
xorb
cmp
aas
cltd
or
cmpsl
push
xchg
sar
and
repnz
mov
sarb
xor
xchg
je
mov
push
cli
sub
or
jnp
psubusb
mov
xor
repz
inc
fidivl
lods
pop
inc
sar
in
jns
ret
ljmp
leave
aad
std
subl
dec
out
mov
cli
inc
test
pop
arpl
push
pop
std
cs
nop
mov
imul
rcrb
pop
push
je
mov
aad
mov
and
test
lahf
lcall
std
mov
mov
int
jnp
sub
loopne
cld
call
std
add
rcrl
mov
cs
fdivp
mov
scas
inc
mov
ficoms
inc
cmpsb
xchg
fimull
ss
mov
lahf
xlat
cltd
aaa
push
rorl
subb
hlt
inc
mov
xor
inc
jno
mov
lods
lret
xor
cmp
insb
jo
lahf
lret
lods
dec
mov
shll
mov
sub
inc
std
enter
fildll
jp
xchg
add
out
cmp
movsl
push
scas
inc
mov
pop
jp
push
add
clc
test
roll
or
add
sub
js
sbb
decb
push
adc
jl
xchg
cld
loope,pt
out
xchg
jecxz
inc
xor
push
push
fistpl
and
mov
mov
jg
insb
andb
cmp
xchg
pop
mov
xchg
pushf
add
jmp
and
jmp
or
imul
xchg
cwtl
xchg
in
gs
pop
pop
pop
inc
aam
and
xor
dec
push
jno
add
pop
sub
imul
arpl
daa
mov
lods
add
push
mov
mov
fs
stos
adc
pusha
test
lock
xor
mov
shl
or
lock
mov
add
popa
ljmp
lret
cltd
leave
and
out
or
push
mov
add
xchg
cmp
std
repz
fsubrl
cmpsb
jmp
rol
push
mov
pop
fmulp
pushaw
xchg
xchg
cmp
cwtl
mov
loop
pop
ljmp
adc
and
jle
dec
mov
das
sub
pop
mov
pop
xor
cltd
mov
fidivrl
mov
push
cli
cltd
arpl
and
jp
sub
lea
push
ret
dec
movsb
xchg
push
adc
mov
cmp
mov
sbb
lahf
stos
dec
loop
pop
inc
lcall
scas
enter
arpl
mov
pcmpeqd
mov
pop
into
cmp
lret
sub
cli
arpl
xchg
mov
lahf
push
xchg
outsb
mov
int
jno
sub
shll
lock
lods
loop
sti
mov
jbe
js
xchg
out
sub
cld
jmp
add
aas
jg
cmp
jnp
mov
jle
aas
imul
ret
cld
inc
xor
jle
cmp
pop
not
mov
call
and
test
test
imul
ficoms
aaa
cmp
imul
mov
pop
insl
fmull
in
les
cwtl
or
adc
movsw
sbb
cmpsl
pop
inc
es
ficoml
mov
cmp
sub
cwtl
or
int
push
lods
mov
icebp
cmp
rcl
jno
inc
sub
push
jae
out
js
loop
dec
stos
es
ret
mov
jg
inc
lock
out
inc
mov
movl
add
jo
mov
inc
arpl
push
inc
sahf
and
out
push
insb
add
inc
mov
jns
push
inc
pusha
fcmovnbe
popf
xchg
jmp
push
lds
sub
sub
bound
in
aaa
lret
orl
jbe
fadds
out
rcrl
lret
es
out
sbb
sub
mov
jmp
fisttpll
aas
mov
out
xchg
mov
mov
iret
imul
ja
es
call
jns
mov
jns
lret
lret
cld
dec
xchg
stc
pop
arpl
cmpsb
jmp
add
xor
into
mov
sti
jo
rorb
or
scas
inc
jl
or
in
into
in
xchg
mov
jp
sub
xchg
inc
push
in
xchg
ljmpw
jb
xchg
jl
xor
mov
lret
lods
mov
mov
sub
loope
rcll
add
xor
sarl
movsb
repz
sbb
pop
xchg
cmpsb
adc
stos
fists
lret
inc
xor
mov
mov
sti
xorb
stc
gs
jp
sbb
fwait
pop
jmp
push
xchg
dec
lahf
mov
jnp
pop
jge
aad
imul
mov
mov
bound
jecxz
push
pop
mov
aas
aad
call
and
xchg
fistpll
or
push
loopne
sbb
jbe
mov
or
push
pop
cwtl
and
and
cmp
cs
mov
test
cmp
xor
idivl
scas
and
imul
pop
inc
movsl
xor
fbld
jecxz
out
aas
fs
dec
xacquire
repz
lods
rcrl
stc
inc
bound
sbb
shll
das
pop
enter
cmp
nop
pop
push
out
lock
xor
xchg
out
aaa
shlb
dec
roll
jl
roll
mov
push
je
or
mov
std
xchg
mov
je
cmp
mov
fidivl
xchg
out
pop
jl
cmp
or
mov
into
fnsave
fdivl
add
sbb
pop
and
lret
jns
dec
jo
popa
movsl
repz
jge
pop
or
loop
adc
pushf
inc
movsb
push
rorb
cmpsb
sbb
adc
imul
stos
jmp
bound
movsb
sub
dec
xlat
lret
cmc
scas
xor
mov
dec
mov
cmp
btc
cmp
mov
aam
in
push
movsb
mov
mov
adc
jno
sahf
out
xor
add
je
mov
sbb
and
pop
dec
mov
cmpb
ja
dec
lods
sbb
call
sub
lds
ret
in
rcrl
pop
and
dec
neg
add
shlb
xchg
jns
sbb
aaa
outsl
cld
dec
ja
mov
dec
mov
xchg
fisttpl
or
push
inc
lcall
mov
insl
or
adc
push
sti
sub
popf
dec
adc
mov
mov
inc
mov
sub
loop
or
rol
stos
cmpsl
adc
data16
scas
repz
dec
push
filds
jb
sarb
mov
or
jmp
pop
jge
in
mov
xchg
faddl
sub
ds
enter
into
cmp
test
push
inc
pop
mov
inc
xchg
out
xchg
in
push
ds
jo
gs
cltd
jno
sarb
fcompl
xor
cmp
push
lea
push
shll
lret
int3
ret
test
dec
in
lret
cwtl
push
fcmovb
into
sub
mov
dec
pop
fsubs
gs
or
xor
dec
lret
daa
lcall
orb
push
jg
push
add
mov
in
add
call
push
fwait
and
sbb
cmc
js
out
out
push
add
test
xchg
call
inc
jg
lods
cmpsl
jo
roll
iret
fadds
hlt
or
jmp
jg
cwtl
aas
aad
mov
testb
push
inc
push
stos
leave
sbb
sti
lods
push
testl
pop
pop
push
jno
aaa
cmp
xchg
dec
imul
sbb
and
xchg
mov
arpl
mov
mov
enter
add
add
nop
test
cld
push
fldt
mov
xor
and
jp
faddl
je
jo
push
add
loop
cwtl
sub
out
mov
inc
test
dec
pop
or
mov
jno
pop
pop
mov
enter
mov
add
fdivrs
push
aam
sbb
idivl
xor
stos
pop
mov
push
outsl
add
mov
pop
idivl
inc
adc
es
or
pop
inc
sbb
cmp
xchg
rcl
lods
jle
test
int
and
xlat
sti
cltd
ja
repnz
sbb
jl
fdivl
inc
push
push
xchg
lock
or
inc
or
xor
je
out
jae
insb
mov
dec
xlat
jae
pop
fcmovb
or
and
fsubs
fisubl
dec
fwait
loope
push
imul
or
push
jnp
cli
cmp
aaa
pop
out
ja
lcall
xor
orb
lea
fwait
push
cmp
xor
mov
cmp
mov
push
movsb
push
addr16
bound
cwtl
leave
hlt
push
fnstsw
dec
clc
decb
cmpsl
call
xor
push
pop
jp
push
cmpsl
add
add
les
addb
test
xor
cmp
add
add
lret
inc
fidivs
cmp
sbb
shrl
aam
sbb
or
push
in
in
pop
push
mov
xor
arpl
in
cmc
jl
mov
add
cmpb
icebp
gs
jbe
mov
xor
mov
sbb
test
or
pop
jo
lods
pop
cmovbe
inc
fdivrs
mov
ficoml
pop
xor
dec
push
sbbl
adc
sarl
rol
ret
mov
mov
mov
xor
repnz
mov
mov
inc
mov
sbb
dec
nop
jp
cli
inc
sub
xor
add
mov
dec
popa
cmp
scas
sbb
mov
jbe
dec
mov
cmp
dec
push
inc
dec
dec
xchg
mov
ljmp
in
cmp
xchg
push
rcll
jo
loope
pop
xchg
ficoms
int
lods
add
mov
sbb
or
jp
es
fnstsw
add
popa
cli
pop
pop
or
loope
mov
sahf
jmpw
addr16
gs
xor
cmpsb
xchg
icebp
inc
sub
mov
dec
in
fildl
mov
or
insb
jb
loopne
push
orb
test
add
insl
js
dec
ja
fwait
and
or
xor
dec
outsb
je
push
adc
mov
adc
loop
cmp
repz
aam
and
insl
lds
insl
lret
mov
bound
mov
repz
sub
push
insl
ds
mov
in
push
or
loop
add
pushf
push
cmp
cmc
xor
jno
ljmp
push
jg
popa
rcrb
iret
insl
add
addb
push
nop
icebp
aam
cli
repnz
nop
scas
cmp
pusha
xor
aam
sbb
loopne
pop
out
push
scas
enter
movsl
fmul
mov
std
addb
mov
dec
jg
pop
mov
cmp
sbb
pop
mov
test
xchg
sbb
outsb
loopne
lock
roll
aam
adc
out
out
pop
mov
das
xlat
mov
loop
inc
insl
mov
inc
incl
jmp
movsl
xor
xor
xchg
mov
push
imul
in
cmpsl
in
scas
notb
lret
sbb
jbe
pop
mov
daa
cmp
fdivs
pop
jecxz
addr16
icebp
dec
fstl
ficoms
arpl
sbb
dec
addr16
dec
cmpl
mov
sbb
pop
adc
lods
and
imul
cmpl
decb
ja
addr16
xor
ret
je,pn
push
xlat
push
mov
sbb
pop
jmp
sarb
shll
lea
out
jecxz
aaa
jge
sub
cmp
sbb
test
jle
lahf
enter
or
mov
jp
ficomps
or
add
popa
repnz
mov
adc
mov
daa
das
adc
xchg
cmpsl
cmp
mull
int3
popf
pop
pop
mov
and
xor
imul
test
addr16
sarb
and
in
mov
je
cmp
aad
add
data16
out
sub
sbb
das
repz
in
cmpsb
test
cs
push
clc
test
fstl
push
push
call
mov
sbb
imul
push
cmp
clc
sahf
xchg
pop
imul
dec
mov
adc
xchg
sahf
lahf
ret
leave
xchg
push
and
push
arpl
cwtl
jae
jmp
cld
bnd
and
adc
lcall
pop
xchg
add
or
in
stos
cwtl
pop
add
jle
or
scas
repz
int
scas
push
sbb
push
push
mov
push
add
fdiv
xchg
push
push
jp
stos
push
pop
gs
repz
fsubs
sbb
test
jge
out
jb
cmc
imulb
mov
pop
mov
xor
fsub
cmpb
cltd
pop
sti
fistpll
out
into
mov
adc
cltd
push
dec
addb
add
mov
adcl
dec
mov
mov
xor
movsb
sbb
or
ss
pop
sbb
fwait
outsb
jno
js
sub
and
stos
cmp
jno
dec
fisubl
sub
mov
jp
iret
cmp
push
testl
sbb
out
mov
ret
iret
bound
xchg
xlat
mov
jle
lock
cmp
lret
inc
std
mov
leave
test
inc
aaa
fcmovbe
jmp
mov
xchg
or
ss
loop
xchg
in
mov
in
dec
pusha
cmp
scas
fmulp
pop
lcall
fucomip
inc
and
gs
loopne
into
pop
loope
aas
cmpb
gs
sub
xor
cwtl
xor
fbld
int3
jecxz
jne
popa
ds
jnp
pop
sub
fiadds
leave
cs
bound
pop
sub
mov
jo
cmpsl
pop
popa
cmpsl
ret
or
nop
pop
dec
jmp
mov
xor
outsl
inc
mov
inc
roll
fstpt
aas
mov
loop
inc
rcr
imull
adc
aaa
inc
jo
das
rcl
add
mov
negl
pop
data16
js
sub
js
lret
xchg
insl
imul
adc
int
fstcw
iret
push
cli
into
xlat
aas
fimull
aas
add
dec
sbb
fstl
adc
icebp
and
or
bound
icebp
or
loopne
lods
dec
mov
dec
orb
shll
jle
cmp
xor
jl
mov
in
out
mov
sbb
sbb
cmp
aaa
outsl
and
fidivrs
sbb
movsl
add
std
div
xor
mov
push
repz
adc
and
xor
cmpl
pop
leave
pusha
xor
push
sub
insb
cmp
leave
leave
icebp
ret
xchg
lahf
mov
or
push
bound
outsl
push
cmp
loop
shr
cmp
in
call
ja
mov
ss
mov
cmp
push
testb
mov
pop
loope
int
lret
push
lds
jecxz
jge
pop
inc
into
fstl
dec
mov
pop
mov
pop
pop
inc
jns
int3
mov
mov
xchg
leave
pop
sbb
xor
repnz
xlat
btc
or
loop
je
push
nop
daa
in
add
testb
inc
xchg
mov
sbb
test
mov
jo
mov
push
adc
mov
aas
les
push
loop
jno
ret
adc
xchg
or
or
insl
int3
mov
test
repnz
fsubl
adc
xchg
push
icebp
ja
ds
ss
mov
outsl
push
jp
sbb
push
sub
scas
test
jle
mov
aad
jge
pop
ficompl
mov
pop
add
xchg
add
pusha
and
in
pop
int
sbb
mov
xchg
xor
sti
adc
sub
js
cmp
mov
ljmp
push
nop
or
jo
rorb
dec
add
xchg
in
clc
xchg
aas
sbb
aad
dec
into
push
and
push
movzwl
mov
loope
test
mov
ljmp
lods
push
inc
inc
imul
dec
inc
cld
lahf
mov
jp
ds
aam
mov
xchg
push
out
add
aas
movsl
ret
hlt
xor
xchg
mov
das
ja,pt
fcmovu
sbb
cmp
idivb
mov
pop
add
test
push
hlt
pop
data16
mov
add
dec
dec
cmp
cltd
jl
mov
dec
test
cmpsl
std
cld
jl
adc
fcoml
push
int3
mov
shlb
inc
pop
adc
incl
pop
push
sbb
inc
ret
fidivrs
aaa
mov
sub
mov
stc
mov
in
fnstcw
dec
cmc
cmpsb
adc
xor
and
gs
or
mov
xchg
or
push
fsts
aas
icebp
subb
xchg
pop
and
nop
out
adc
test
lcall
pop
rorl
adc
out
rolb
mov
mov
adc
cs
in
inc
dec
mov
out
sub
std
cs
sbbb
dec
in
pop
mov
cs
daa
jge
lret
addb
mov
jp
xchg
pushf
pop
lret
and
pop
sbb
loopne
mov
xor
es
pop
push
and
mov
pop
jecxz
sbb
inc
jb
fistps
or
inc
add
test
subb
pop
int3
mov
cmp
jne
or
popa
sub
pop
sub
stc
negb
jnp
in
data16
outsl
xor
cmp
pop
leave
or
fsts
sub
mov
cmp
adc
jnp
testb
cmpsl
outsb
cmp
movsl
push
fdivl
outsb
push
stos
mov
sbb
xor
bound
mov
clc
shll
or
add
ret
sub
fildll
jmp
out
cmc
and
fdivrp
das
mov
inc
add
fs
in
push
push
cli
adc
loope
and
das
fiadds
push
xor
mov
nop
out
stos
out
jmp
cmp
enter
fcoml
inc
in
rolb
fimull
sub
adc
jae
pop
jns
ds
cmp
aaa
call
mov
mov
pop
in
xchg
inc
flds
xlat
pusha
jo
add
imul
or
push
xchg
neg
les
sti
sbb
sub
je
or
hlt
and
jae
popa
dec
inc
call
aad
mov
sbb
imul
decl
stos
shll
or
mov
loopne
aaa
imul
add
shll
sbb
stos
and
out
add
scas
cmp
rclb
jmp
add
shll
into
clc
pusha
xchg
xchg
das
fsubrs
xchg
into
inc
stos
and
pop
and
es
daa
ljmp
movsl
fs
fildl
jbe
xor
pop
inc
push
xchg
imul
mov
cld
ja
push
adc
add
jns
jbe
ds
in
loop
ja
les
fs
jecxz
push
popa
icebp
mov
inc
clc
hlt
test
cmp
leave
sbb
dec
or
insb
push
into
mov
mov
xchg
lret
mov
repnz
jns
jmp
mov
mov
test
scas
fwait
lds
xchg
hlt
or
mov
and
or
cmp
popa
adc
add
ja
jb
lret
je
mov
mov
pop
sbb
xlat
dec
xor
mov
inc
addl
dec
ja
fldenv
cmp
inc
fidivl
xchg
adc
push
movsb
int3
xor
dec
dec
call
mov
outsl
jge
in
neg
sarb
repnz
add
ljmp
fbstp
sub
pop
mov
push
nop
jno
popf
xchg
call
xchg
sub
sub
ret
mov
outsb
inc
or
lea
dec
cmpl
std
push
hlt
lods
imul
pop
and
pop
ljmp
gs
mov
pushf
lcall
mov
out
dec
lret
mov
sub
lock
or
lds
pop
notl
sub
cmp
js
repnz
leave
mov
jno
out
add
mov
mov
lahf
and
xchg
imul
popa
insb
dec
mov
add
jmp
dec
mov
ss
mov
push
or
sbb
sub
clc
cmc
test
sbb
out
jno
sbb
or
xchg
jge
ret
and
shr
out
ret
or
jecxz
out
or
jbe
push
ret
mov
mov
mov
mov
jmp
push
push
pop
sub
mov
mov
stc
lock
jns
push
adc
xorl
out
pop
xchg
pop
or
shl
mov
gs
pop
push
pusha
push
dec
test
inc
jge
arpl
in
test
jmp
idivl
mov
pop
mov
shr
shr
lcall
push
adc
daa
mov
test
or
inc
out
mov
call
xor
pop
jle
xchg
adc
dec
iret
push
das
sarb
lods
clc
cmp
xchg
ret
pop
rcr
into
sbb
sti
and
jl
cmc
xor
inc
jno
jp
mov
mov
add
mov
mov
pushf
sbb
sbb
mov
arpl
out
lcall
inc
popa
sub
mov
orl
xor
icebp
cmp
scas
push
xor
sbb
cli
jl
sbb
jo
inc
push
ret
pop
repz
add
jo
scas
divl
ret
cs
test
mov
and
adc
and
stos
jne
jne
test
stos
push
add
mov
add
mov
cmp
sub
jle
loopne
js
xchg
lahf
or
pusha
ds
sub
enter
iret
mov
insl
loopne
fwait
add
xchg
rorb
pop
and
jns
dec
mov
mov
pusha
mov
inc
insl
mov
mov
mov
les
push
movsl
cli
mov
adc
out
in
xor
test
icebp
adc
movsb
mov
rolb
xchg
sub
mov
jg
or
adc
jne
dec
mov
lcall
xor
push
adc
std
mov
push
sub
imul
mov
jno
sbb
aam
adc
mov
test
adc
sub
dec
sbb
leave
rorl
jno
push
not
cmpsl
pop
xlat
jmp
or
xor
sahf
or
xor
call
xchg
les
sbbl
insb
jmp
insl
jae
repz
out
mov
jp
mul
lret
mov
sar
lock
loop
lods
push
js
sbb
xchg
inc
push
add
mov
push
dec
adcb
cs
pop
or
adc
dec
mov
shrl
cmpsl
enter
popf
mov
and
xor
jnp
hlt
rclb
mov
push
sbb
stos
les
sarb
leave
or
adc
int3
arpl
adc
jge
lcall
cmp
test
out
ja
inc
sbb
loop
lods
adcb
xlat
sahf
mov
popf
ds
push
loope
outsl
int
mov
push
pusha
sbb
das
xchg
xor
dec
das
icebp
or
push
lds
mov
sti
in
daa
mov
mov
adc
test
and
lds
xchg
aad
sbb
pop
icebp
sbb
xor
gs
out
jne
sbb
lds
ret
popf
sbb
dec
insl
jge
iret
fisttps
in
dec
add
aam
into
inc
mov
test
cmp
das
cld
adc
pop
fmull
into
pop
lret
or
insb
push
xchg
or
outsl
mov
push
gs
shl
outsl
cmp
sbb
fisubrs
lds
push
iret
dec
sbbl
shl
pop
pop
inc
and
sarb
and
mov
push
and
popf
cwtl
fwait
rolb
xor
pop
pop
cmp
and
sub
aas
cli
xchg
fcmovnb
inc
gs
lcall
or
outsb
pop
push
or
pop
or
cmp
push
mov
out
iret
loopne
rorl
sub
cltd
sarb
mov
xorb
mov
add
mov
push
inc
movsb
jg
cmpsb
jg
gs
cld
loopne
inc
or
mov
shrl
cwtl
daa
fnstsw
into
mov
repz
xor
xchg
add
cltd
and
int
mull
jge
add
inc
mov
adc
mov
pusha
divl
dec
and
int3
iret
popa
sbb
ds
fisubrs
lret
fsubrl
fidivs
adc
das
in
sarl
xchg
or
cmpsb
push
sub
flds
mov
sbb
rolb
mov
xor
xor
addr16
nop
rcll
sbbb
sbb
adc
sub
pop
mov
ret
adc
xor
sqrtps
jmp
sub
dec
enter
lahf
dec
je
stos
jg
dec
scas
cltd
push
xchg
clc
testb
daa
jne
adc
mov
lds
cmpsl
in
xor
dec
and
inc
xor
mov
int3
aaa
mov
inc
inc
and
sbb
push
mov
adc
imul
fisttpll
sbb
and
mov
test
rep
lret
leave
xor
push
std
dec
fstps
cmp
mov
cmpsl
sbb
mov
jo
lds
in
into
and
iret
imul
cmpsb
push
pop
fmul
testl
cmp
dec
outsl
mov
test
ss
mov
xchg
ret
loope
bound
mov
sbb
xchg
mov
jbe
xor
rcll
mov
or
imul
mov
cmpsl
or
push
enter
or
dec
in
repz
mov
sbb
adc
loopne
push
xchg
sbb
mov
aam
cmc
imul
imul
or
cld
mov
mov
and
sub
cld
hlt
gs
decl
out
jbe
test
insl
or
cli
dec
aad
call
dec
xchg
ja
outsb
das
push
pop
addr16
push
mov
lahf
pop
xor
dec
divl
add
sbb
pop
inc
sti
xchg
fcmovu
clc
in
pop
in
rclb
int3
mov
cmc
fdivp
hlt
sbb
stc
push
out
les
bound
xorl
arpl
jo
insb
jae
cmp
inc
push
in
jecxz
sub
cmpsl
jb
cltd
ret
rcrb
and
loop
clc
sbb
adc
mov
push
mov
dec
sti
sti
imul
dec
ret
js
and
int
test
stc
int
or
popf
divb
hlt
inc
lahf
pop
addr16
mov
push
mov
jno
sub
fwait
sub
inc
push
mov
lods
std
repz
jns
dec
add
notb
js
ss
jne
xchg
add
jbe
lds
inc
gs
adc
es
mov
clc
insb
out
test
int
pop
adc
xchg
dec
shlb
fs
rolb
mov
in
sub
pop
mov
or
ficompl
push
dec
or
sub
jmp
fisttpll
mov
imul
jo
std
in
test
sahf
rcl
test
pop
scas
pop
xor
add
sbb
cmp
push
mov
les
cli
call
add
xchg
push
cmc
arpl
jp
movsb
arpl
push
mov
bound
xchg
xchg
pushf
aam
and
xchg
insl
push
aam
jae
nop
jo
out
adc
data16
inc
insl
test
push
movsb
add
mov
xor
push
dec
stos
mov
imul
loop
lods
pop
ljmp
xchg
dec
popf
cmc
ficoms
dec
jecxz
sub
dec
pop
loope
xchg
jns
cmpsl
outsb
push
sub
test
sub
fdivrp
ss
pop
mov
int3
jp
insb
adc
bswap
scas
mov
and
and
aas
clc
xchg
jns
inc
sbb
outsl
jo
insb
inc
shrl
mov
lret
roll
mov
push
xor
add
outsl
push
push
sub
nop
mov
loopne
add
push
xchg
cmp
or
and
out
jl
adc
add
cmovnp
push
lods
imul
std
push
cmp
testb
icebp
push
cld
jbe
push
jge
xorb
test
push
adc
loope
movsl
ret
add
adc
xor
jnp
mov
fiaddl
sarb
outsb
xchg
cmc
mov
shlb
mov
rcl
xchg
loopne
enter
inc
ss
aad
inc
shl
push
jge
sbb
loop
rclb
lret
pop
lahf
mov
lret
and
or
dec
xchg
xor
adc
scas
stc
in
and
lcall
dec
jp
clc
adc
into
sarb
ljmp
dec
shlb
lock
mov
jg
sub
pop
adc
shl
mov
mov
pop
push
cltd
add
pop
and
sbb
movl
adc
data16
adc
fnstsw
ret
inc
pop
jecxz
push
mov
inc
cmp
pop
xor
ja
inc
sbb
xchg
leave
push
ret
add
inc
xor
mov
add
rcrb
adc
aaa
lea
pusha
mov
sbb
dec
imul
cmp
mov
xor
rcr
dec
dec
fs
jp
loope
idivl
inc
movsb
xchg
lock
pop
sbb
addl
call
inc
add
add
aas
jge
ds
cmp
cwtl
mov
add
mov
test
test
adc
and
in
adc
lock
movsb
lcall
icebp
cwtl
jp
jno
pop
mov
mov
mov
ljmp
inc
cmovb
cwtl
jl
sti
jbe
ret
jmp
imul
mov
jge
mov
adc
or
into
xchg
sbb
cli
xor
fsubp
fisubrs
test
imul
xlat
lret
jbe
into
jmp
pushf
shl
cmc
add
adc
sbb
xor
mov
mov
je
mov
xchg
insl
repnz
cmp
pop
pop
sti
lods
movsl
pop
jno
mov
or
xor
outsb
sub
push
call
or
incb
lea
adc
int3
fmuls
movl
lods
jp
sahf
aas
jecxz
sbb
js
loope
xchg
jle
frstor
dec
scas
mov
lods
es
shlb
arpl
add
jae
aas
cmp
xchg
daa
ja
lret
inc
pop
mov
in
addl
fnstsw
push
out
jne
push
mov
repz
rorb
pop
lcall
icebp
outsb
push
cli
outsb
out
mov
pushf
cmc
repz
in
loopne
pop
pop
pop
ret
nop
and
into
dec
adc
sub
mov
repnz
push
inc
sar
push
jmp
ds
fsubl
insb
ret
adcb
call
scas
or
jb
stos
loope
outsb
loopne
addr16
stos
push
push
ret
into
cwtl
les
mov
sahf
mov
or
loop
nop
pextrw
fistpll
imul
push
pop
mov
inc
mov
test
shrl
pop
mov
dec
adc
jl
dec
jo
jmp
shl
inc
xchg
cmp
sub
insl
lock
clc
icebp
xchg
mov
xchg
test
jmp
inc
movsl
inc
arpl
cwtl
or
lock
pop
fwait
sti
sti
and
and
xchg
jl
inc
in
adc
repnz
push
daa
ljmp
and
cltd
mov
push
es
add
shr
pushf
xchg
pop
pusha
fidivrl
ds
out
dec
jmp
and
repnz
push
clc
cmp
in
daa
and
mov
cltd
inc
das
scas
cmp
cmp
movsl
sti
cmp
je
gs
std
outsl
xchg
mov
hlt
inc
and
imul
jge
lahf
mov
jecxz
dec
inc
or
out
dec
sahf
fbld
push
dec
rolb
jmp
cld
push
neg
dec
nop
sbb
popa
rorb
xchg
popa
push
add
cli
mov
add
sub
int
orl
ja
rcrl
or
fs
mov
push
adcl
jo
fidivrl
jg
inc
inc
inc
add
imul
pop
es
add
int
jle
sub
sbb
dec
push
inc
pushf
sub
int
fstps
loope
fwait
pop
fnstcw
jl
cmp
repnz
xchg
jbe
pop
sbb
repnz
pop
outsb
insb
xchg
out
iret
icebp
push
insl
scas
mov
cltd
aas
jno
pop
mov
sbb
push
sub
cmp
xor
mov
arpl
lret
mov
mov
and
jecxz
nop
in
fsub
test
cmc
scas
les
sti
cmpsb
movsl
or
out
jno
lcall
test
jne
fsubs
sub
dec
andb
mov
inc
and
jg
mov
jne
addb
outsl
add
dec
and
jl
jg
out
sub
push
jmp
push
sbb
xchg
ret
daa
or
lret
bnd
mov
xchg
inc
cmp
iret
out
sarb
jg
daa
outsl
dec
ja
push
xchg
inc
xchg
cltd
popf
push
dec
and
adc
mov
pop
sbb
and
pusha
cld
jecxz
cwtl
mov
mov
fsubrs
xchg
lret
ret
imul
adc
push
jp,pn
sub
cmpsb
pop
jl
sub
xchg
sub
test
cmpsl
lods
push
inc
push
pop
repnz
mov
out
xchg
lock
divb
jle
in
xor
cmp
or
pop
pop
imull
sub
lock
mov
push
sub
and
cwtl
mov
sti
out
xchg
dec
cld
sbb
xor
sbb
pushf
les
and
sti
jmp
adc
add
pop
push
cltd
fcmovnbe
xchg
pop
adc
shlb
ljmp
cld
jne
pop
dec
movsl
gs
or
sbb
faddl
adcb
clc
add
mov
mov
sbb
fsubs
push
scas
mov
or
xchg
mov
cmpl
stc
nop
es
mov
ds
data16
dec
out
test
xchg
and
jg
imul
popf
ret
mov
fsubr
sbb
subb
mov
rol
xor
mov
subb
ss
dec
scas
or
stos
and
mov
and
arpl
js
ss
xor
pop
push
cli
addr16
test
iret
mov
add
leave
inc
les
fcoml
dec
andnps
test
js
adc
xor
mov
jle
xchg
add
adc
sbb
pop
in
int
sarl
dec
movsb
movb
test
push
lret
and
and
mov
mov
ja
xchg
gs
negb
pop
xchg
leave
push
sub
lds
out
nop
push
inc
je
sub
pop
cli
xor
repnz
pushf
repz
rcll
xor
mov
xchg
cmp
dec
add
stc
or
int3
pop
push
mov
dec
fsubrs
dec
cmpsb
fldl
xchg
mov
or
pop
xchg
dec
push
jns
mov
push
inc
insl
adc
jnp
fdivl
adc
sbb
cmp
pop
lcall
insl
stos
inc
or
arpl
mov
out
inc
push
sub
sub
repz
push
fwait
inc
add
andl
daa
xchg
insl
cmp
xor
les
jb
xchg
lods
lret
cmpsb
popf
add
inc
inc
xchg
aad
adc
push
cmpsb
fistpl
loopne
scas
psubusb
sti
icebp
jecxz
pop
out
ficompl
loop
shlb
fdivrs
dec
or
out
addb
sbb
and
sub
jae
fisubs
adcb
sub
and
inc
mov
int
pop
leave
ljmp
push
mov
jae
shll
sub
imul
and
cmp
cltd
fsubrs
sbb
std
fs
sahf
xor
pop
and
xor
adc
and
ret
gs
push
push
mov
mov
xor
dec
mov
fnsave
xor
arpl
sbb
sahf
popa
int3
stc
inc
stc
push
int3
mov
js
nop
mov
les
jecxz
push
cmp
lahf
ret
pushf
push
sub
stos
popf
add
fildl
push
pop
pop
iret
aam
mov
adc
or
inc
sub
dec
fdivs
xchg
fwait
jp
test
insl
mov
jae
cwtl
aad
std
mov
imul
mov
mov
icebp
hlt
inc
add
xor
or
ljmp
push
lock
xor
cltd
ja
out
add
xor
adc
xchg
add
movsl
mov
test
sbb
adc
outsb
pop
mov
repz
pop
cmc
push
push
insb
cmp
shl
dec
push
mov
inc
test
push
insb
push
jne
std
fsubs
jmp
out
push
inc
mov
mov
cld
ljmp
mov
das
mov
xchg
push
sub
pop
testb
scas
xchg
push
xchg
push
jp
push
jno
mov
fisttpl
push
xor
dec
pop
int3
jl
ss
pop
ficomps
cwtl
pushl
xchg
add
movsl
nop
mov
dec
lret
xchg
jne
pop
les
push
aas
sysret
xor
mov
xchg
fisttpl
or
out
or
imul
xorl
aaa
stos
jnp
scas
jmp
xchg
stos
mov
mov
adc
aad
mov
adc
popa
add
outsl
icebp
notl
cmp
rcl
pop
fistps
jl
jnp
sbb
pop
pop
add
pushf
and
daa
mull
pop
dec
sub
stos
imul
jo
pop
outsb
sbb
into
pop
adc
xchg
popa
in
ja
test
movsl
and
insl
inc
mov
dec
mov
dec
jp
lods
cmp
inc
or
fisubs
inc
xor
or
mov
in
sub
repz
mov
enter
sahf
xor
jne
mov
mov
or
or
clc
fidivs
push
inc
inc
aas
pushf
xor
add
jp
mov
pushf
add
adc
ja
mov
mov
mov
jae
test
pop
std
fadds
add
jg
xchg
pusha
stc
xchg
and
push
jnp
adc
push
sbb
scas
cwtl
jmp
cmp
fcmovb
arpl
jmp
mov
lock
ss
lret
lret
sti
stos
popa
sbb
insb
and
in
leave
insb
bound
jge
push
pop
mov
int
or
inc
jbe
mov
inc
xchg
jecxz
adcb
daa
pop
push
xor
dec
sbb
out
sub
mov
nop
dec
mov
idivl
pop
cmp
call
push
jne
mov
hlt
iret
sbb
dec
cmp
cmpsl
sti
dec
dec
pop
mov
mov
cmp
pop
jbe
and
test
dec
pop
addr16
mov
in
movsb
mov
xor
pop
aas
shrl
data16
push
adc
loopne
adc
push
into
scas
mov
cltd
cwtl
jnp
jecxz
lret
and
add
pushf
mov
cmp
in
add
and
int
push
pop
cmp
leave
dec
fstpl
cmpsl
js
lock
arpl
in
test
sbb
fimull
out
xchg
fists
stos
push
push
mov
sub
pop
jle
jle
xor
repnz
call
mov
addr16
jecxz
ds
test
jnp
out
inc
insl
aaa
add
rorl
stos
or
in
push
and
ljmp
xor
cmp
pop
or
sub
push
test
lahf
in
fs
repz
mov
add
cmp
es
sbb
jbe
xor
dec
int3
sbb
mulps
into
xor
and
clc
mov
xor
cld
adc
decl
imul
inc
loop
arpl
add
scas
add
in
push
std
stos
xor
sahf
cwtl
leave
jae
pusha
lcall
jno
xchg
mov
inc
sub
inc
dec
popf
pushl
xor
popf
dec
sti
pop
mov
mov
and
repz
out
ja
iret
sbb
repnz
sbb
xchg
movsl
dec
enter
inc
loop
push
jmp
sub
or
inc
jle
jecxz
pop
mov
lods
push
stc
sub
add
mov
lret
add
rolb
sub
cmp
fs
mov
fbld
dec
mov
stos
imul
ret
xor
cli
mov
pop
jae
push
mov
lahf
insl
les
loope
cli
add
dec
mov
fwait
loope
mov
or
iret
mov
dec
fnsave
mov
and
lds
pop
scas
dec
add
adc
gs
ret
jle
jmp
mov
and
pusha
jge
add
add
mov
dec
cmp
push
pusha
daa
int
bound
or
and
and
ds
roll
loope
or
adc
shl
cmpsb
or
mov
pop
fdivl
push
test
adc
inc
mov
mov
add
push
push
and
push
mov
jl
cmp
sub
sbb
imul
mov
dec
fs
sbb
xchg
popa
int
popf
mov
xor
or
push
xor
and
add
lcall
lods
rcll
mov
or
jno
xor
xchg
cs
loop
inc
dec
mov
call
sub
ret
push
js
icebp
lcall
lods
add
dec
xchg
dec
hlt
xchg
hlt
mov
fmul
jg
mov
dec
jo
jns
pop
xchg
popf
sar
adc
repz
mov
inc
pop
out
xor
inc
mov
bound
mov
mov
cltd
xchg
and
fldenv
fwait
testl
cmp
fs
or
pop
leave
rcll
and
mov
mov
cmp
addr16
dec
dec
loopne
clc
and
rcr
and
xor
pop
sub
outsb
ss
js
in
mov
ljmp
outsl
mov
dec
mov
sbb
dec
dec
insb
lret
inc
pop
mov
scas
xchg
pop
or
add
fsubp
sub
stos
dec
fs
lea
mov
andl
lahf
fldcw
mov
inc
sbb
sbb
pop
cmc
inc
lea
ds
das
jae
or
xor
aaa
repz
hlt
leave
fwait
jl
mov
fldz
ficoms
adc
or
imul
lea
in
cltd
popa
pop
out
stc
mov
mov
push
lods
pop
cld
js
sbb
cmp
inc
add
push
imull
sub
in
movl
pusha
ficoms
pop
or
cmp
push
pop
jns
mov
xchg
lret
insb
dec
push
test
and
cltd
xlat
or
andl
and
and
pop
daa
jae
ror
jb
mov
cltd
arpl
jns
in
test
imul
imul
lahf
repz
xor
int
mov
pop
jae
xor
out
mov
and
data16
aam
mov
int3
imul
movsl
lock
loopne
rcll
lds
inc
outsl
sub
aam
add
ljmp
xor
inc
cltd
push
xor
sbb
xor
push
xchg
pop
stc
cmpsb
sub
mov
add
scas
push
repz
loop
sbb
xchg
mov
push
mov
push
mov
mov
je
fcomps
ss
pop
bound
xor
dec
mov
xchg
dec
pop
xchg
push
aam
dec
out
jl
ljmpw
faddl
lea
sahf
mov
movsl
xor
and
je
sbb
movsb
push
jg
fldcw
adc
xchg
xlat
rol
mov
cmp
aad
sub
pop
leave
jne
push
jmp
xor
lret
xchg
xchg
fnsave
pop
in
dec
js
into
push
daa
push
rcrb
push
mov
dec
xchg
jge
neg
dec
loopne
ret
dec
jmp
cmpl
mov
data16
cmp
shrb
xor
mov
jo
in
insl
movsl
push
loope
sub
jne
sub
sti
enter
jbe
repz
push
mov
cwtl
into
dec
dec
inc
cli
dec
add
cmp
cmp
lea
lock
imul
lods
lods
arpl
scas
xor
push
pop
repz
roll
cmc
mov
jne
pop
int3
rclb
out
and
sbb
xor
sbb
stos
push
out
mov
stos
adc
mov
sbb
add
adc
movsb
out
cld
iret
xchg
pop
mov
jg
dec
pshufw
xchg
or
add
cltd
inc
xor
fidivrs
in
or
aas
test
pop
xchg
cmp
fsubl
push
pop
cmpb
sbb
jecxz
jne
push
stos
and
shlb
imul
lcall
mov
push
daa
mov
jmp
or
sti
push
xchg
mov
jmp
jg
xchg
mov
sub
cmc
outsb
je
imul
mov
mov
addr16
mov
xchg
pop
mov
push
outsl
inc
dec
pop
jmp
xor
data16
js
or
lods
cmp
inc
out
in
sub
insb
mov
jp
outsb
je
rcr
fdiv
ret
inc
sub
add
and
mov
xchg
cli
cmp
out
addr16
scas
fmul
xor
pop
ret
inc
daa
jge
push
jmp
add
fistpl
int
xchg
enter
xor
aas
fisttpll
in
outsb
push
fsubp
fnstcw
lds
aam
xchg
mulb
ror
call
or
insb
lret
fldl
push
and
mov
push
div
dec
add
xor
jge,pn
out
movsb
jg
fstpt
and
imul
inc
xchg
mov
cld
add
ja
fbstp
mov
adc
stos
add
adc
movsl
mov
mov
xchg
xor
outsb
je
mov
incl
fmuls
or
adc
loopne
cmc
jno
nop
pop
daa
mov
aas
pop
cmc
inc
sub
addr16
daa
sbb
mov
lods
xchg
cld
pusha
bound
div
or
or
dec
xchg
mov
and
aas
movb
in
leave
inc
movsb
push
rol
mov
cmpsb
jmp
ss
cmp
adc
iret
xchg
cmp
mov
in
rcll
dec
add
sbb
test
repnz
or
lods
pop
lods
fcomp
jmp
inc
jb
or
lcall
jb
pop
loop
cmp
jns
mov
mov
cli
cwtl
js
xor
push
rorl
mov
stos
fistpl
call
loope
pop
or
in
dec
inc
mov
out
aas
das
mov
stos
sbb
test
arpl
xchg
xchg
imul
mov
mov
or
imul
mov
adc
mov
int
mov
sub
pop
adc
xor
cli
add
pop
stc
jns
test
jae
dec
mov
adc
lds
rclb
ja
lods
pusha
rcl
lods
inc
and
sub
xchg
jl
sahf
xchg
sahf
mov
movsl
fnsave
push
inc
jno
ss
cmp
add
or
xor
loopne
pop
pop
xor
mov
pop
aas
scas
jns
or
cmc
rorb
ljmp
fdivrl
ljmp
out
mov
shrl
mov
jl
loop
loope
and
mov
push
mov
pop
sub
and
adc
pushf
lds
pop
sahf
jecxz
iret
out
rcrl
sub
lcall
sbb
and
cwtl
adc
gs
jg
psrad
pop
aad
loop
push
jp
push
fidivs
jnp
cmp
and
sub
jns
push
inc
mov
inc
mov
cld
cwtl
push
std
pop
adc
fidivrl
mov
divb
call
popf
stc
insb
in
inc
mov
add
sbb
jecxz
test
dec
mov
or
mov
or
iret
push
loop
or
fsubr
jne
mov
lock
mov
sti
outsl
test
stos
movsb
rolb
dec
stos
sbbl
sbb
in
push
aad
xor
loopne
mov
cmp
loopne
jecxz
mov
aaa
cmp
cmp
jge
mov
jg
repnz
mov
adc
pusha
inc
push
xor
inc
mov
xor
pusha
inc
push
mov
test
sti
push
pop
or
add
sub
in
dec
cmc
dec
push
push
jmp
mov
adc
stos
packssdw
pop
ds
push
iret
sbb
movsb
dec
mov
push
out
out
dec
or
rorb
pop
sub
sbb
in
mov
fisubl
pushf
addr16
push
mov
jnp
push
dec
loopne
mov
pushf
inc
push
adc
mov
mov
xchg
pusha
fsub
mov
or
xor
ffree
mov
push
jge
dec
ljmp
data16
iret
jg
repz
and
inc
add
inc
out
addr16
loop
ss
pop
and
jo
sub
pop
dec
add
and
or
mov
decb
adc
inc
inc
fcomps
movsl
in
or
sbb
sbb
push
pushf
in
jae
mov
cli
loop
cmp
add
xchg
jecxz
enter
icebp
ja
ja
adc
les
cmovs
rorl
imul
ljmp
jmp
ja
dec
add
cmp
xchg
push
sbb
ss
mov
aad
dec
pop
xchg
dec
mov
sub
fistpll
rorl
roll
loope
andl
inc
add
and
push
mov
cld
cmp
adc
mov
pop
dec
lahf
jne
add
repnz
jbe
xor
je
das
bound
hlt
mov
and
adc
or
dec
loop
repz
cmpsb
pop
sbb
scas
pusha
stos
aam
sahf
sbb
lcall
dec
leave
and
sub
arpl
ucomiss
jp
arpl
adcb
inc
mov
sbbl
jns
cs
pop
rolb
jge
movsb
mov
das
adc
stc
mov
inc
push
jnp
push
in
clc
or
ljmp
out
out
sbb
cmp
pop
fstl
mov
or
in
pop
or
jae
icebp
and
mov
sbb
pop
scas
add
inc
and
inc
ret
call
xorl
cs
stc
xchg
jle
adc
xor
lods
adc
xor
es
jl
and
cli
stc
mov
cmp
add
or
ret
push
inc
mull
insb
inc
cs
gs
lock
andb
pushf
cmp
dec
jb
pop
les
or
pusha
nop
in
lds
pop
aad
jo
adc
push
inc
push
or
sub
inc
xchg
lret
sbb
add
and
dec
pop
mov
iret
fsubp
clc
outsb
push
fwait
jne
shrl
dec
fimuls
push
test
popf
rcrb
push
jns
mov
rcll
popa
mov
sub
in
lea
inc
add
mov
js
mov
xchg
mov
cmp
lcall
inc
push
mov
shll
inc
pop
iret
dec
enter
sub
stos
and
sub
push
xor
mov
cmp
lock
xchg
jne
fnstcw
das
aas
and
xchg
mov
push
ror
sub
pop
ror
xchg
sub
movsl
mov
xlat
xor
dec
scas
jbe
fucomp
ret
jo
jo
sub
jg
jae
xchg
push
ja
xlat
xor
push
dec
jo
push
lea
shrl
mov
mov
ja
lods
call
adc
fistps
in
jge
loopne
xchg
jl
dec
push
xchg
nop
inc
mov
push
stos
rorb
popa
dec
stos
jbe
push
enter
inc
cwtl
jl
test
mov
xchg
testb
sub
fwait
stos
jmp
dec
shll
cld
movsb
test
jbe
or
ret
les
fdivl
inc
sbb
out
mov
xor
insb
js
fiadds
sbb
cmp
and
dec
push
xor
pop
pop
pop
sarb
cmp
jp
push
dec
pop
mov
sub
xchg
pusha
add
dec
daa
rcr
stos
popf
mov
stos
xor
movsl
arpl
test
push
cmp
mov
or
lret
dec
lcall
dec
out
mov
sub
xor
inc
lahf
xchg
repz
insl
sub
jecxz
and
sbb
imul
cltd
pop
lahf
enter
add
xlat
xchg
cld
or
push
jge
out
sti
mov
sub
fbld
loopne
movq
sbb
sbb
ds
push
stos
jb
ss
mov
push
xor
cwtl
cmp
jae
lods
sub
shrb
int3
pop
call
cmp
cmp
insl
jp
pushl
fs
movsl
pushf
fwait
negb
iretw
xor
dec
nop
push
cmp
push
test
pop
ss
stos
push
fistl
mov
fidivs
push
sbb
lea
fcmovnbe
lods
jo
or
and
fmul
lods
mov
pop
test
scas
sub
out
aam
push
mov
lock
rcrb
lcall
lahf
push
mov
loop
xchg
call
jbe
mov
or
movsl
nop
aaa
xlat
inc
sub
push
cmp
jecxz
iret
cltd
jbe
adc
dec
shl
xor
adc
movsl
pop
xor
and
adc
cli
mov
sar
and
std
push
pop
dec
les
ret
out
xchg
and
jne
jmp
je
pop
cmp
pushf
sub
xchg
lods
push
xlat
imul
and
jle
ja
inc
sbb
inc
fidivl
lcall
mov
sbbb
js
lods
stos
mov
xchg
mov
cs
ffree
sub
cmp
int3
mov
pop
mov
adc
pop
shr
sbb
or
insl
sub
xor
and
adc
or
xchg
stc
and
out
pushf
into
daa
insl
out
cmp
popa
jmp
inc
lods
ret
sub
or
ficompl
mov
enter
js
mov
lock
push
adc
mov
imul
sbb
cltd
dec
cmpsl
test
mov
leave
sub
insb
cmpsl
arpl
cmp
mov
xchg
add
mov
je
adc
je
repnz
push
mov
mov
test
push
jle
int
cs
sbb
daa
call
push
ljmp
movsl
das
pop
outsl
mov
xchg
test
mov
push
stc
fistpl
pop
movl
cmpl
in
fisttpll
loopne
sbb
mov
mov
sub
insl
inc
push
add
xchg
dec
mov
in
push
sahf
push
xchg
pop
hlt
enter
in
mov
jo
daa
xchg
jo
ret
xor
scas
pop
push
cmp
mov
jns
cwtl
pop
fcmovne
les
dec
scas
xchg
movsl
sbb
andb
mov
mov
fwait
and
scas
dec
call
push
cmc
cwtl
xchg
in
and
mov
rolb
xlat
loop
dec
push
insl
sbb
test
popa
jb
or
sbb
stc
insl
jae
adc
aaa
std
cwtl
mov
push
mov
mov
andl
push
push
pop
paddb
pop
arpl
pop
sub
and
fcompl
mov
stos
jno
ret
xchg
addr16
cmpsl
sub
sbb
hlt
push
fstpt
xchg
jecxz
int3
in
fucomip
sub
push
or
pop
insl
lahf
stos
sti
xorb
mov
sbb
add
mov
inc
and
rcrb
loop
xor
icebp
hlt
fs
sub
or
pop
pop
sbb
adc
inc
icebp
iret
loope
das
mov
mov
xchg
and
or
stos
mov
cmp
and
add
lock
in
jmp
push
add
scas
nop
pop
dec
add
fmuls
jae
push
inc
lds
js
adc
fdivrp
icebp
inc
xchg
sti
push
loope
pushf
xor
je
icebp
push
adc
imul
call
nop
nop
push
enter
or
out
xchg
mov
in
or
scas
test
mov
sub
push
sbb
pop
jno
sub
fdivrs
mov
mov
int
leave
test
xchg
jnp
inc
mov
xchg
xor
xorb
ja
push
lret
iret
dec
sub
and
sbb
mov
out
lods
mov
enter
repnz
cmpsb
xchg
jnp
pop
push
xchg
pop
adc
xor
push
mov
fdivrl
xchg
adc
push
loope
and
cmpsb
dec
stos
lods
ja
fisttpll
lret
outsb
mov
pop
popf
cwtl
sbb
stos
in
fbld
imul
shl
imul
push
enterw
xlat
xor
movb
shl
cmp
jmp
cmp
mov
lahf
lahf
add
xchg
cmc
loope
rcll
push
dec
fcomp
sahf
sbbl
and
push
sahf
xchg
lret
shll
pop
jl
mov
inc
out
in
repz
mov
pop
loopne
je
ljmp
add
sarb
ds
and
pop
clc
sti
ss
mov
cmc
lret
cmp
cmp
push
adc
or
xor
mov
xor
in
sbb
cltd
cltd
in
lock
daa
jno
adcl
pop
popa
jmp
mov
test
mov
leave
sahf
push
adc
push
movhps
fadd
cmpsl
adc
out
lahf
clc
inc
dec
test
cmp
clc
xchg
in
sub
or
sbb
pop
mov
mov
out
inc
dec
testl
sbb
sbbb
xor
jo
dec
loopne
sti
gs
cld
dec
mov
jmp
pop
xor
imul
fnstcw
push
and
scas
xor
mov
and
ret
sti
mov
fchs
popa
xchg
cli
xchg
cmp
xorb
pusha
push
test
ja
stos
pop
xchg
in
dec
xchg
int3
leave
dec
xchg
mov
xchg
mov
subb
or
ret
or
and
push
in
fninit
repz
test
sub
stos
rol
push
shlb
inc
hlt
cmpsb
insl
pop
push
pop
pop
gs
adc
cwtl
cmp
ds
rclb
adc
sti
mov
in
rcll
movsb
pop
clc
adcb
filds
data16
ss
mov
out
or
rolb
pop
testb
pop
inc
aam
sbb
xchg
es
inc
jl
stc
gs
cs
cmc
mov
xchg
negl
mov
lahf
arpl
and
les
std
fcompl
sub
mov
xor
lahf
xchg
cmp
jae
inc
xlat
jo
sbb
kaddw
xchg
inc
inc
mov
sbb
loope
jecxz
loop
filds
mov
mov
push
in
iret
or
aaa
iret
icebp
adc
arpl
scas
stos
lods
push
call
sarb
ret
add
cmp
inc
xchg
or
sbbb
lret
andb
orb
pop
popf
cmp
adc
xchg
jne
inc
je
jns
fsubs
test
mov
rcrb
scas
sub
pop
cmp
mov
dec
xlat
test
cmp
test
push
decb
bnd
and
jbe
push
mov
enter
jmp
mov
mov
lods
jecxz
fcmove
xchg
mov
sub
cmpsb
push
ret
mov
cwtl
fists
hlt
and
mov
inc
add
nop
adc
fdivr
pop
mov
pop
sbb
bound
test
or
adc
add
mov
jae
outsb
xchg
add
push
xor
adc
inc
xor
push
xor
fidivrl
cltd
jp
mov
xchg
cmpsb
cmc
adc
xchg
mov
fmul
mov
add
mov
lret
push
lods
push
addr16
pop
data16
inc
aaa
fcmove
sbb
aaa
jae
and
fistpll
inc
inc
in
push
test
loopne
xchg
push
adc
pop
mov
clc
and
sbb
mov
lcall
fildl
jp
test
fisttpl
xchg
push
xchg
mov
jecxz
loope
push
ss
cld
arpl
cmc
jg
mov
mov
push
stc
ljmp
ret
xchg
cld
pop
pushf
sbb
fdivl
mov
imul
mov
icebp
push
mov
lret
sbb
idivl
insb
xchg
and
inc
xchg
lcall
mov
lods
mov
or
xchg
test
fmulp
xchg
mov
or
sti
insb
mov
stos
cli
xchg
rcr
iret
addl
mov
sbb
pop
xchg
shll
sarl
add
rcrl
pop
cmp
adc
inc
xchg
sub
mov
lahf
ret
jp
adc
xchg
cltd
mov
add
shlb
aaa
orb
mov
scas
jmp
scas
mov
out
sbb
sub
movups
dec
movsl
push
fnstcw
push
pop
das
shrb
jmp
cwtl
add
das
sbb
daa
stos
data16
or
push
mov
pusha
xor
iret
scas
xchg
mov
outsb
fdivs
pop
inc
cmpsl
mov
mov
movsl
mov
testl
insb
mov
jne
pop
jp
xchg
cwtl
ljmp
movsw
iret
sub
scas
daa
or
jle
inc
mov
inc
push
add
icebp
jns
test
das
cmp
sub
xchg
and
mov
jae
imul
add
xchg
arpl
xchg
xlat
mov
mov
or
xor
xor
data16
jno
cmc
ret
aam
lods
xor
jae
std
cmp
sbb
jb
dec
sbb
push
jecxz
in
fildl
mov
es
stos
pop
es
mov
sub
scas
cmpsl
addl
mov
jbe
and
add
lods
xchg
xchg
scas
addr16
xor
cmp
enter
gs
pop
f2xm1
cmp
mov
stos
fmuls
lds
or
js
add
mov
dec
aaa
out
inc
sbb
push
dec
push
in
push
and
push
push
xchg
fs
push
inc
mov
mov
xchg
fdivrl
dec
mov
sarb
jbe
nop
arpl
cli
fs
cmpl
faddl
mov
pop
sbb
and
repz
or
fisubrl
adc
and
inc
jmp
mov
ss
dec
daa
xchg
rsm
addr16
aaa
mov
push
orb
mov
mov
cmp
out
scas
fisubrl
xchg
inc
jb
inc
hlt
js
cmp
push
push
xor
das
ja
out
and
xchg
push
pop
mov
in
cmp
cltd
or
pop
fbld
pop
or
sbb
testb
outsl
clc
adcl
pop
xor
jl
in
xor
xor
movsl
das
mov
push
xor
push
sub
mov
pop
es
mov
pop
clc
jecxz
repz
mov
adc
or
cmp
aam
adc
dec
test
sahf
xchg
loope
mov
leave
mov
sahf
js
or
cmc
dec
mov
rolb
lcall
sub
or
xlat
addl
dec
outsl
cmc
inc
test
loopne
or
sub
mov
sti
cmp
lahf
adc
xchg
ds
pop
aas
stos
pop
pushf
push
pop
cmpsl
sbb
adc
packsswb
adc
sarb
addr16
xchg
loop
nop
xchg
mov
sub
shr
adc
mov
pop
xchg
cmpl
adc
int3
sub
dec
pusha
xchg
or
icebp
fwait
inc
nop
cltd
mov
mov
push
adc
xlat
xor
add
mov
push
mov
push
jne
or
jae
push
push
cmc
lret
test
lret
mov
aad
loop
andb
aas
push
clc
push
mov
and
mov
stos
int
pop
loopne
jl
pop
je
mov
je
test
iret
jp
add
jge
adc
das
lds
ret
fcom
sar
mov
nop
seta
xlat
adc
cmc
sub
and
sbb
pushf
pop
lahf
and
fildl
arpl
je
sbb
movsb
cmpsl
mov
movsl
mov
sbb
pushf
inc
stos
shr
push
call
pop
dec
dec
repnz
mov
test
stos
mov
sbb
mov
out
enter
cmp
xchg
test
div
inc
fwait
sub
dec
pop
jns
cmp
leave
push
cmp
loopne
or
pop
out
mov
fcmove
mov
test
push
shlb
ja
int
subl
repnz
ret
insl
icebp
mov
daa
jge
stc
ja
jbe
xor
sti
add
sbb
loope
push
insl
dec
mov
lcall
repz
jnp
loop
fisubrl
loopne
repnz
push
mov
xlat
add
inc
pop
aas
or
jne
pop
inc
mov
add
inc
gs
divl
push
mov
jns
xchg
mov
test
ficoms
inc
mov
sub
mov
repnz
fs
shr
bound
mov
fstp
xor
jp
jl
pop
inc
clc
add
push
std
adc
inc
test
xlat
idivb
or
out
mov
mov
dec
jmp
pop
pop
cmp
jge
shl
dec
enter
rcrb
jg
ret
dec
mov
lds
xchg
pop
or
leave
mov
aad
jo
xor
out
adc
pusha
loopne
addl
dec
sub
out
imul
cmpsb
adcl
idivb
xlat
loope
icebp
mov
xlat
outsb
and
add
push
and
or
js
ljmp
cmp
pop
push
insl
fisubrl
xlat
sbb
hlt
push
dec
aas
flds
cmp
pop
gs
pop
pop
popa
add
aaa
push
icebp
jo
xor
ja
fimull
sub
call
pop
fwait
jl
leave
pop
mov
mov
daa
ret
icebp
test
add
stos
jns
repz
data16
int
mov
pop
pop
gs
lret
sub
dec
cli
inc
iret
pop
into
mov
xchg
sti
sbb
mov
adc
jnp
pushl
pmuludq
add
popa
mov
sti
inc
sub
out
mov
fistpl
jg
lds
stos
fcmovnb
jb
ret
jmp
adc
mov
ret
in
mov
mov
aad
sbb
sub
rorb
xor
add
outsb
clc
fstpl
push
xchg
dec
push
rolb
push
jae
xchg
jmp
mov
sti
lds
dec
fidivrs
rcrb
ja
or
data16
mov
mov
out
and
push
mull
sarl
sub
sub
sbb
dec
lret
ss
fstl
test
mov
mov
loope
pop
and
subl
and
xchg
loop
push
nop
mov
push
adc
jg
pop
sbb
inc
fsubr
dec
mov
dec
leave
jecxz
adc
jnp
pop
jecxz
dec
adc
xor
jge
ficompl
ss
cmpsb
and
test
stc
or
pop
popf
xrelease
or
out
xchg
xor
fnstsw
arpl
sub
sbb
sbb
sbb
adc
int3
out
fisubl
sbb
movsb
adc
mov
xor
push
push
xor
sti
adc
pushf
clc
jecxz
test
xchg
ds
fcoms
xor
push
rorb
xchg
jmp
out
mov
call
pop
loopne
and
int3
sbb
inc
dec
imul
loop
mov
je
lods
in
or
cmpsl
out
dec
dec
shll
xchg
pop
movsb
movsb
cmpsl
xchg
pop
cmpsb
sahf
fucomi
jae
lret
les
xchg
subb
jl
push
rorb
lcall
ror
lahf
pop
pusha
addr16
inc
dec
xchg
incb
xor
or
xchg
sarb
rcl
daa
sub
mov
mov
adc
rolb
mov
xchg
fstpt
sub
adc
push
adc
dec
popf
hlt
mov
gs
test
out
cmpsl
push
pop
scas
push
push
subl
loopne
shrl
ds
adc
or
push
scas
push
mov
into
mov
repnz
sub
add
incb
lret
lahf
jge
mov
arpl
jp
dec
lock
pop
mov
jmp
sbb
repnz
mov
jno
fimull
ja
ja
ja
push
sti
sbbb
or
hlt
xchg
sbb
pop
xor
rdtsc
cmpsl
xchg
lahf
xchg
push
mov
jb
lahf
cmpsb
add
jae
cmpsb
jle
ja
mov
jl
mulb
call
arpl
test
cli
lret
shll
ret
hlt
jp
mov
or
dec
sbb
ja
sbb
jo
ja
ljmp
hlt
nop
test
sub
push
dec
inc
dec
xchg
mov
xor
adc
bound
mov
jmp
xchg
mov
fstps
arpl
pop
and
aad
in
pop
push
insb
pop
in
dec
ss
cmc
mov
pop
push
mov
notl
shlb
dec
clc
ljmp
bound
jbe
aam
mov
in
stos
pop
mov
popf
out
das
lea
jl
push
mov
movsl
cmp
sbb
test
pop
insb
or
out
int3
cli
stc
imul
jnp
out
xor
int
push
mov
rcr
int3
pusha
add
ret
dec
andb
dec
mov
and
inc
xchg
insb
push
negl
in
xchg
xor
add
mov
fadds
cmp
sub
mov
mov
lods
push
pop
sbb
push
filds
rclb
mov
outsl
adc
jmp
push
rol
bound
mov
pop
mov
ret
mov
add
lret
sti
push
mov
dec
cmp
or
ja
xchg
ljmp
call
cmp
mov
cli
jne
scas
mov
mov
imul
decl
dec
and
cltd
mov
out
mov
mov
sub
dec
cmp
subl
pop
dec
imulb
xchg
pop
repz
mov
pop
push
imul
lds
add
or
mov
push
mov
adc
and
jnp
cmpsb
mov
push
clc
call
in
dec
es
fsubr
jg
jecxz
icebp
jle
mov
mov
cmp
fistl
orb
xor
ss
movsb
imul
cwtl
fnsave
cmp
hlt
push
push
mov
negb
pop
lods
ret
xlat
nop
cli
jns
sarl
pushf
scas
scas
pop
sbb
lods
sbb
pop
or
cmp
mov
lds
daa
std
fstpt
cmp
ds
push
xlat
loope
mov
rorl
xchg
xor
test
xor
jae
ficomps
and
mov
push
in
mov
adc
sub
cwtl
cmp
or
push
jo
or
pushf
cmp
jecxz
test
in
mov
or
movsl
addl
dec
stc
cld
pop
out
sbb
jae
mov
jo
cli
rol
and
jmp
cmp
call
mov
das
jl
stos
sub
insl
adc
ffreep
dec
movsb
dec
ret
and
add
ret
or
ret
sub
add
ret
repnz
jbe
cmpsl
jo
mov
scas
sub
cmp
int3
dec
push
cmp
dec
push
dec
xchg
jle
push
sarl
inc
gs
fdivl
dec
out
sbb
test
or
lcall
aad
sub
es
inc
iret
jbe
add
cmp
fistpl
push
cs
push
push
xor
and
test
int
adc
jb
fnsave
mov
dec
andb
jp
mov
mov
stos
inc
dec
sahf
lcall
push
int3
ficoms
int
lcall
sbb
mov
cs
inc
xor
icebp
roll
adc
push
jg,pn
pop
sbb
jl
xchg
mov
subl
addr16
sti
into
insb
or
dec
jmp
jg
pop
repnz
clc
movsb
xchg
aad
push
int3
loop
out
adc
mov
icebp
xor
aam
pop
push
sub
mov
lret
int3
ljmp
test
sbb
cs
pop
mov
push
mov
mov
mov
outsb
xchg
dec
sahf
adc
pop
iret
jp
test
addb
pusha
jnp
out
fcoms
aas
js
sbb
add
adc
dec
or
out
mov
mov
mov
push
outsl
out
cmpsl
insb
and
inc
leave
or
push
in
out
andl
push
xchg
mov
inc
bnd
xchg
scas
test
xchg
sbb
or
push
dec
lahf
push
clc
or
pop
cld
lds
or
sub
minps
mov
xor
xchg
adc
lret
ds
or
ret
popf
mov
enter
cmpsl
mov
fcompl
sbb
loope
jmp
popa
push
fldl
cli
test
ret
push
or
mov
sbb
mov
xchg
inc
push
cltd
repz
pop
dec
push
sbb
push
aam
sti
arpl
mov
xor
jnp
cli
mov
sub
push
loopne
ja
addb
fldenv
in
imul
popf
aas
mov
pusha
sbb
cmc
andb
jns
imul
imul
jp
rcll
arpl
rcrl
adcl
je
sti
add
xor
fucomip
pusha
jge
fs
loop
jb
cmc
and
dec
mov
push
push
mov
xchg
mov
mov
std
xor
sbb
bound
dec
insl
popw
sar
mov
mov
enter
mov
or
out
shll
popf
jno
xchg
push
pushf
je
les
add
sub
iret
js
lret
pop
pop
ror
jl
orb
movsb
sub
dec
push
xchg
push
jo
pop
iret
and
dec
mov
dec
jo
sub
mov
xchg
xor
jmp
and
in
daa
aad
lret
sti
inc
cli
xchg
dec
ret
xor
fs
popf
cmp
stos
push
add
aaa
popf
inc
mov
aaa
push
js
mov
xor
push
sub
frstor
jnp
pop
xchg
cld
sbb
aam
xor
js
in
lods
lret
sbb
add
and
mov
lods
jae
sub
mov
sub
adc
pop
xchg
in
cwtl
cmp
pushf
je
iret
add
dec
xor
push
or
mov
jp
js
push
push
push
adc
dec
xchg
push
rcll
dec
jg
int3
sub
or
int
xor
adc
imul
icebp
orl
xorl
ret
and
daa
mov
ret
push
aaa
cmc
fsubl
bound
mov
loope
push
in
sub
jmp
jp
shr
ret
jmp
int3
popf
dec
adc
pop
adc
nop
sub
lret
les
jae
outsb
jge
fwait
jle
adc
mov
xchg
arpl
dec
xchg
pop
inc
movsb
cmc
pop
fwait
mov
movsb
mov
push
scas
loop
cmp
cs
mov
and
rep
sbb
dec
imul
xchg
ds
popf
mov
clc
push
jb
jo
stos
sub
xor
rcl
pop
adc
push
push
or
das
push
daa
add
pop
bound
rorl
jp
pop
inc
mov
ja
gs
add
das
cld
inc
in
pop
push
push
xchg
leave
and
xchg
lcall
shll
cwtl
add
jl
mov
push
dec
jb
jmp
mov
xchg
pop
inc
fists
dec
or
sub
fldl
cmp
outsl
test
xor
aaa
fucom
pop
fsubrl
pop
jbe
jp
cmc
mov
stc
aaa
mov
loop
inc
test
sbb
rcrb
inc
scas
adc
sub
test
sub
fisttps
sbb
int
cmp
push
mov
pushf
sahf
fldl
imul
dec
aad
xchg
inc
inc
sbb
into
imulb
sub
test
sub
icebp
fsubrl
dec
scas
add
adc
push
popa
xchg
shlb
xor
std
iret
pop
or
scas
dec
adc
or
orb
mov
test
and
push
jno
stos
jne
pop
aam
repz
lods
mov
lock
jnp
mov
add
mov
sub
cmp
add
jns
jecxz
lods
pop
shlb
dec
ror
bound
idiv
pop
pop
imul
test
gs
adc
add
test
test
inc
outsb
sbb
and
mov
push
and
and
inc
jecxz
cmp
sub
inc
scas
inc
and
push
push
cmpsl
mov
cmp
dec
in
cltd
fwait
and
lds
ret
sub
fcmovu
test
punpckhwd
mov
or
fcompl
add
cmp
dec
mov
mov
ret
int3
sbb
or
sbb
mov
or
xor
addb
nopl
insb
bound
scas
mov
sbb
jno
and
add
aaa
mov
mov
shr
xchg
negb
mov
xor
dec
lcall
aaa
jge
lcall
xchg
jmp
dec
addr16
lods
in
repz
xchg
jge
lods
push
xor
movsl
lret
jg
mov
frstor
in
dec
and
mov
inc
jno
fbld
mov
add
icebp
icebp
aas
insb
add
adc
inc
mov
push
stos
push
jle
inc
adc
ljmp
je
ljmp
mov
adcb
pop
jl
cmp
divl
push
push
mov
jae
dec
shlb
push
cwtl
dec
add
es
cs
negb
pop
divl
ja
aam
js
es
and
add
or
lcall
ljmp
jmp
lock
xor
test
mov
xor
cs
inc
or
inc
adc
stc
mov
mov
mov
rorb
jg
adc
dec
adc
push
fimuls
cmp
test
add
test
das
aam
dec
mov
add
mov
pop
dec
or
inc
lahf
std
and
xor
lds
out
dec
add
inc
mov
mov
movsb
jle
stos
jne
add
push
cmp
jecxz
cmpsl
and
and
movsb
cmp
outsl
icebp
mov
fisubrl
mov
cli
lahf
iret
out
push
push
call
inc
push
mov
in
push
test
xchg
lds
ja
and
add
mov
or
or
dec
push
inc
cwtl
jge
add
movq
and
pop
add
shr
lahf
mov
add
stos
push
push
mulb
mov
mov
xchg
bound
imul
cwtl
ja
arpl
sub
inc
popf
hlt
test
leave
ljmp
ret
mov
cmp
jne
loope
cld
dec
mov
mov
scas
sub
out
sub
sub
mov
sbb
mov
orl
mov
pop
mov
cmp
or
out
fst
adc
lods
or
or
and
add
leave
dec
xchg
jmp
jne
xchg
shlb
dec
loopne
cmpsl
imul
shrl
sub
xchg
cli
out
push
pop
and
adc
fidivrs
sbbl
mov
mov
dec
mov
mov
icebp
inc
aam
mov
imulb
and
xor
and
in
idivl
movsb
shll
xchg
adc
mov
out
add
pop
xlat
stc
dec
cmp
sahf
fnstenv
mov
jmp
and
scas
addr16
cmp
jae
mov
cwtl
cwtl
mov
and
cs
sbb
inc
loope
push
loopne
adc
in
fcompl
dec
mov
cmpsl
movsl
movsb
imul
ja
roll
adc
jge
rclb
ss
pushf
pusha
cmpsl
pusha
lahf
pop
push
xchg
sbb
mov
and
jns
jmp
cmp
int
xchg
jbe
push
pushf
test
mov
push
lahf
dec
jb
push
shrl
in
fstl
pusha
dec
fidivrl
mov
and
mov
lods
or
cmp
movsl
add
and
push
dec
push
ficomps
inc
loope
es
dec
lret
in
scas
adc
add
mov
lret
aad
pop
cmp
add
mov
aas
mov
jmp
sub
ljmp
testb
xor
cs
test
inc
pop
or
sub
dec
sbb
mov
adc
subl
pop
xor
sti
jns
movsl
pop
and
xor
mov
adcb
xchg
mov
js
sbb
pushf
insb
mov
add
aad
lds
jo
mov
sbb
sbb
adc
aad
lods
and
pop
mov
xor
jnp
xchg
hlt
sbb
notb
fmulp
cmpsb
cmpsl
out
dec
sbb
pushf
inc
push
mov
test
cmp
ret
adc
insb
adc
or
imul
mov
insb
das
ret
mov
push
pop
and
inc
fisttpl
mov
dec
mov
push
xchg
mov
js
clc
pop
std
fistpl
dec
pop
lahf
in
popf
hlt
scas
mov
cmp
and
jne
cmc
push
dec
notl
das
add
or
lods
repz
adc
movsl
xor
mov
push
popf
mov
adc
or
fdivp
paddusw
adc
xor
cmp
movsl
sub
adc
sbb
jge
shlb
leave
pop
in
imul
loop
pshufw
xor
iret
jge
jns
imul
data16
and
les
add
mov
scas
jle
mov
cmp
loopne
aad
les
sub
shl
add
not
movsb
mov
or
stos
popf
pop
insl
mov
fsubr
test
scas
mov
inc
cmp
mov
das
stc
add
pop
sub
pop
pusha
push
insl
shll
jl
mov
pusha
addb
dec
lahf
sub
repz
xchg
xchg
ja
testb
andl
pop
xor
loope
mov
inc
jecxz
outsl
or
push
xor
push
sbb
cmpsl
out
adc
jmp
push
outsb
rorb
inc
push
outsl
nop
or
imul
and
lods
cmp
or
push
fidivl
xor
out
xor
sbb
negb
mov
dec
lods
push
jmp
ds
push
and
push
cmc
sub
adc
xchg
cld
gs
cmp
test
mov
scas
lds
sbb
xorl
jae
add
or
or
push
push
xchg
daa
popa
pop
fcmovbe
pop
push
inc
push
loope
mov
cmpsb
push
inc
mov
xlat
stc
dec
jo
pop
aad
cmp
adc
jns
or
cwtl
loop
jno
cmp
xor
stc
jnp
sbb
int
in
cld
cmp
mov
out
mov
and
dec
pop
aaa
xchg
xchg
cmp
test
and
leave
sahf
addr16
and
mov
into
js
pop
push
out
mov
popf
and
adc
dec
dec
sub
jg
push
in
ja
dec
into
mov
sahf
sarb
push
dec
insl
dec
push
fsts
add
arpl
movsl
pop
cmpsl
cmp
adc
cwtl
scas
iret
call
not
dec
fsubl
movsl
mov
enter
xor
dec
xor
nop
sti
pop
push
hlt
in
cmp
ret
sub
outsb
aas
jl
jne
sbb
cli
cs
push
adc
add
dec
push
dec
mov
push
gs
cmp
nop
xor
pusha
cmpsb
cltd
ficomps
pop
inc
xchg
mov
pusha
gs
cmp
icebp
in
xchg
push
scas
test
flds
mov
or
ss
lcall
jbe
mov
push
inc
div
insl
inc
inc
sbb
push
cmpsb
cs
inc
xlat
ds
sub
mov
popf
stos
adc
adc
pushl
and
out
dec
jbe
mov
xchg
and
out
add
xchg
jmp
ss
push
fiaddl
push
xor
sbb
outsb
das
cmc
mov
bound
nop
and
mov
clc
les
stos
fs
or
mov
mov
jb
jecxz
mov
mov
sbb
sub
fadds
enter
jno
ficoml
and
mov
test
cmp
stc
pop
rcll
pop
push
xlat
insb
sahf
ljmp
in
aam
shl
sarl
es
lock
imul
div
pop
mov
xor
adc
push
dec
sarb
in
jecxz
pop
cmpsb
mov
mov
and
hlt
rcl
xor
cmp
repz
shll
pusha
arpl
push
jp
push
mov
pop
dec
insb
aas
jae
push
sbb
and
lahf
mov
dec
scas
pop
xor
jle
and
mov
mov
sti
push
fimuls
xor
jo
inc
cmpsl
sarb
and
stc
xchg
pop
adc
gs
pop
add
mov
pop
repnz
push
nop
push
fisttpll
sub
jno
xchg
jb
popf
ja
sbb
jecxz,pn
shl
adc
in
jecxz
mov
inc
pop
sub
cli
int3
xor
les
out
push
xchg
mov
lahf
mov
jg
jno
jmp
dec
lret
xchg
mov
testl
stos
out
andl
shlb
bound
je
xchg
pop
inc
xchg
mov
insb
adc
push
lock
lcall
cmp
in
leave
popf
lds
cmp
dec
cmp
lret
and
fs
movsl
outsb
aad
push
shr
nop
cmp
xchg
add
shrl
lea
test
fucomi
and
aas
adc
scas
lds
loope
push
pop
mov
xorb
cltd
dec
xchg
scas
mov
shr
sti
push
fidivs
push
adc
cld
jno
sbb
jne
inc
xlat
bound
cmp
xchg
cwtl
bound
clc
repnz
pop
push
clc
and
or
or
rcrl
add
insb
jmp
mov
mov
lea
inc
ljmp
mov
nop
repz
loop
push
dec
or
mov
pop
xor
ljmp
mov
jne
pop
mov
mov
mov
data16
add
or
outsb
sbb
jmp
pop
pusha
ds
cwtl
inc
inc
sbb
mov
sub
hlt
or
pushf
xchg
inc
sti
jmp
xor
mov
xor
imull
jnp
into
add
in
mov
mov
jbe
pop
cmpsl
jbe
mov
enter
test
sbb
test
lahf
cmpsb
inc
pop
push
shll
jmp
popf
xchg
lods
addr16
repz
cli
cmpsl
add
into
xorl
mov
mov
pushf
les
and
lods
jecxz
sbbb
incb
cmpsb
mov
in
push
lds
push
ret
in
push
or
adc
addr16
push
push
cmp
mov
addr16
add
push
lret
xor
jnp
pop
xor
or
and
int
arpl
iret
mov
movsl
stc
stos
dec
scas
mov
jbe
mov
adc
movsl
ljmp
sub
data16
adc
jmp
add
les
cmpl
retw
or
inc
adc
mov
shrl
rcrb
negb
rorl
and
mov
jb
xchg
inc
mov
cmpsl
cmp
mov
sbb
je
pop
loope
aam
aam
out
push
insl
xchg
cltd
inc
test
pop
push
gs
add
stos
jne
mov
sti
rorb
jb
gs
xor
jne
jl
daa
cmp
jge
das
int
and
leave
iret
and
lahf
xchg
js
ss
cmc
add
dec
push
mov
js
mov
ljmp
daa
shll
ljmp
jg
pop
cmp
pop
loopne
leave
in
enter
jb
dec
andl
adcb
test
jge
ret
inc
pushf
dec
stos
mov
loope
push
clc
aaa
pop
cld
insb
out
or
js
popf
imul
push
pop
movsl
sbb
out
addr16
popa
fisubl
div
push
xchg
jecxz
lret
cwtl
jb
es
push
dec
mov
shll
fildll
or
fidivs
xor
imul
adc
mov
mov
jmp
inc
call
cmp
dec
sbb
fildl
icebp
mov
nop
nop
jno
mov
xchg
mov
jnp
mov
mov
jg
stos
js
daa
fistpll
add
sub
cmp
inc
and
xchg
cmp
lock
jae
adc
imul
scas
outsb
pop
daa
jne
push
jmp
leave
in
movsl
jmp
lods
add
out
test
scas
add
or
cmp
stos
cmpsl
adc
or
pop
or
pushf
insb
mov
enter
sub
cmove
insb
mov
pop
icebp
add
add
scas
jge
xchg
or
push
jbe
gs
cltd
xor
push
into
fmul
push
jge
xchg
mov
mov
mov
push
mov
lods
push
xchg
dec
stos
test
mov
sub
aas
adc
insl
pop
push
pop
mov
mov
adc
pusha
or
mov
add
aaa
xchg
dec
mov
or
lods
fidivl
jnp
imul
jmp
insb
negb
cmp
loopne
xchg
sbb
xor
push
ja
nop
jmp
sbb
xchg
push
sti
xchg
mov
bound
xor
push
aad
lcall
and
sbb
lret
push
lea
lret
stos
ds
dec
loope
fdivrs
pop
and
clc
stc
ds
stos
lret
lcall
and
jmp
pushf
aam
in
sbb
iret
adc
push
popf
fisttpll
ret
and
jle
xor
lcall
mov
pushf
add
or
icebp
out
das
mov
cltd
in
or
sub
mov
popf
jmp
bound
pop
pop
sub
sbb
xchg
inc
lcall
repnz
lahf
shll
lcall
in
insl
jnp
jb
test
enter
pushf
mov
lcall
dec
fbstp
fcomip
push
xchg
in
or
stos
outsl
add
add
pop
in
imul
stos
sbb
push
xchg
pop
sub
dec
sub
enter
mov
fnstenv
jno
inc
mov
daa
xor
mov
in
das
mov
cmp
mov
sbb
add
leave
pop
or
mov
and
daa
xchg
jnp
out
sahf
jge
sbb
setle
sbb
push
xor
scas
int
stos
sub
fldenv
mov
add
movsl
jnp
adc
push
sub
lret
int
sub
or
mov
and
push
mov
xor
data16
pop
imul
jl
addl
mov
daa
enter
pop
inc
into
jmp
or
rolb
add
inc
test
push
andb
xchg
mov
insb
sub
adc
mov
pop
or
jl
ffree
push
les
clc
ret
test
sarl
or
daa
push
and
test
mov
xlat
loope
arpl
popf
xchg
inc
cmpl
push
add
into
mov
sub
fimull
or
add
mov
xor
arpl
fnstsw
addr16
mov
inc
dec
mov
hlt
insl
push
jecxz
shlb
fldl
pop
push
nop
mov
pop
dec
mov
ss
sub
rorb
dec
repnz
inc
mov
inc
nop
inc
jne
pop
adc
sbb
sub
cs
cmp
mov
adc
dec
push
pop
insb
dec
add
push
dec
daa
and
fs
shrb
bound
cld
dec
fwait
loopne
jmp
jle
push
movsb
cmp
call
pop
mov
and
cmpsl
xchg
stc
dec
cmp
call
pusha
cmp
mov
mov
daa
ss
jg
mov
nop
lret
mov
jb
jle
or
mov
mov
mov
int
mov
lret
lea
pop
stos
push
mov
mov
jae
lea
pop
push
or
movsb
dec
lret
out
or
mov
and
cmp
inc
inc
xor
sub
push
mov
fisttpll
adc
int3
comiss
shrl
gs
jl
or
xor
mov
and
in
pop
andb
mov
scas
hlt
pop
adc
loop
jl
and
push
mov
imul
push
add
and
cmp
pop
gs
mov
jnp
pop
adc
push
adc
push
xchg
dec
sub
add
add
add
jo
sub
je
repz
mov
pop
mov
mulb
cltd
movsb
lret
cmp
or
cs
add
lret
xor
ds
nop
jne
pop
sbb
or
mov
test
xchg
fstl
lcall
shrl
mov
jmp
arpl
mov
push
int
test
popf
ficompl
push
and
sbb
fdivl
fbld
jge
sub
mov
adc
adc
pop
inc
out
xor
adcb
lret
jp
xchg
jns
push
ficoms
popf
mov
repz
xchg
fsubl
jg
sar
jg
mov
pop
or
not
or
jne
ss
in
pop
pop
push
push
dec
add
gs
sahf
ficomps
ja
xor
hlt
ljmp
inc
xchg
add
ds
cld
or
lcall
pushl
movsl
outsl
mov
inc
mov
add
filds
mov
cld
add
push
iret
cmpsb
imul
dec
std
stos
dec
mov
cmp
mov
mov
test
cltd
jnp
in
scas
loopne
aaa
cmp
pop
out
or
mov
push
mov
mov
pop
cmp
jecxz
adc
or
repz
loop
lcall
imul
cmc
xor
clc
adc
dec
pop
inc
mov
arpl
cmp
mov
ja
lock
mov
shrb
call
jge
mov
mov
nop
jle
cmp
or
imul
imul
push
dec
mov
pop
mov
jl
push
hlt
movsl
js
inc
cwtl
sub
and
cmp
lods
loop
inc
ret
dec
fstps
stos
insl
or
cli
loope
lods
fildl
jo
loop
stos
adc
stos
cmp
sub
mov
jb
sub
pop
mov
fprem
std
cmc
jg
divl
jmp
mov
mov
loopne
mov
sbb
bound
scas
cmc
pop
aad
xor
inc
mov
fisubrs
ja
test
push
lock
push
add
mov
std
leave
xchg
int
lahf
mov
mov
sbb
cmp
dec
icebp
mov
into
ss
aam
dec
sub
scas
leave
lods
jo
add
xchg
cmpsb
leave
fidivrl
mov
push
aas
stos
mov
aad
loop
xchg
cmp
push
xor
fsubrl
data16
outsb
stos
fistl
hlt
test
sub
adc
stc
fwait
mov
inc
sub
lret
lods
cmp
xchg
insl
outsl
arpl
std
push
mov
and
sub
int3
add
jge
rol
pop
popa
cmovo
sub
adc
cmpsb
mov
jp
fwait
loopne
nop
lds
push
stos
arpl
into
pusha
das
es
sbb
shr
mov
mov
lret
scas
push
js
movsl
in
inc
sarb
xacquire
int3
addr16
rcll
leave
inc
idivl
dec
test
leave
pop
mov
nop
aam
arpl
mov
dec
outsl
and
push
mov
mov
sarl
inc
jbe
imul
xor
into
push
jae
fstl
fiadds
mov
xchg
mov
push
or
aas
push
fldenv
jae
cmp
cli
cltd
rcrb
aas
shrb
push
mov
test
sbbb
into
out
cmpb
jle
fnstcw
xlat
popa
mov
sub
adc
repz
pop
ficomps
decb
call
fs
stc
rcll
pop
push
dec
or
sbb
mov
cmp
push
stos
lret
cmp
adc
adc
cmp
jnp
inc
mov
pop
movsl
in
outsl
lds
popf
inc
movsl
movswl
aad
sbb
leave
mov
push
outsl
mov
add
inc
sub
sub
xor
pop
mov
jmp
sbb
and
je
mov
inc
fdivl
add
hlt
idivl
dec
cmp
shll
xor
ret
and
mov
popl
mov
scas
scas
ret
testb
das
mov
call
bound
xor
test
pop
dec
mov
add
sbb
repnz
and
jne
pop
or
in
mov
and
sbb
insl
in
xor
ret
daa
pop
loopne
jbe
sbb
mov
jb
lock
xchg
stos
cmpsl
xor
jns
ret
cmpl
mov
mov
sahf
jle
mov
sti
sbb
push
ficoms
dec
cwtl
inc
in
outsb
inc
sbb
in
or
push
icebp
mov
lahf
loope
sub
xchg
sub
cli
push
jb
aad
ljmp
pop
push
sub
test
scas
xchg
or
sbb
jo
sub
push
adc
add
mov
mov
xor
or
std
leave
mov
xchg
ret
mov
iret
popa
pop
ss
mov
sahf
scas
xchg
pop
mov
adc
sub
lock
enter
pop
inc
add
out
aaa
sub
mov
nop
orl
repnz
push
or
mov
jno
scas
insl
xchg
lret
pop
cmp
out
addr16
clc
xlat
mov
sub
jnp
and
repz
fdivp
xor
hlt
dec
fnstenv
mov
and
jne
sub
fisubs
decl
pop
sub
sarb
cmp
jns
hlt
cmp
push
outsl
mov
test
pushf
cmp
fdivr
or
outsl
addl
mov
repnz
mov
add
jl
lahf
jge
outsb
aaa
lea
sbb
mov
jmp
imul
mov
push
mov
sub
xchg
aam
adc
inc
inc
add
cwtl
dec
push
jecxz
and
sbb
cmp
fs
xlat
divb
xchg
push
sub
mov
cmp
sub
pusha
cwtl
adc
fstpl
cli
and
repnz
jl
or
sbb
fs
pusha
mov
cmc
push
imul
movsb
mov
xchg
inc
xor
sahf
push
sbb
xchg
inc
sbb
mov
insb
fcmovnb
or
repz
pop
adc
rcr
sub
fs
or
sahf
push
test
or
xorb
adc
arpl
jnp
daa
sbb
lds
inc
hlt
out
dec
jecxz
repnz
shll
mov
add
outsl
gs
fisttpl
fwait
dec
test
stc
cld
jae
sti
push
es
lods
mov
push
out
into
xchg
out
cli
std
mov
js
dec
ret
and
shr
mov
pushf
push
pop
xchg
imul
rclb
xchg
mov
arpl
add
aad
mov
push
sub
xor
sbb
jno
mov
ljmp
or
xchg
sub
mov
sbb
mov
jg
aaa
adc
push
push
fiaddl
sahf
loop
add
scas
int3
frstor
fiadds
movsl
pop
pop
lock
popa
dec
loope
shrl
mov
lretw
cs
jl
rclb
into
insl
cmp
jo
mov
dec
jne
nop
dec
sti
inc
test
xchg
add
adc
lea
dec
mov
or
adc
adc
cltd
leavew
pop
movsb
pop
fldt
fstpt
aad
push
add
stos
dec
pop
sbb
push
cwtl
lret
testl
arpl
sub
adc
sub
cli
cmc
and
add
push
jl
sbb
stos
add
sahf
pop
xor
and
jne
test
cmpsl
shlb
nop
loop
cmp
sbb
pop
shlb
ror
jne
scas
lret
jae
rcrl
mov
push
out
lret
stc
clc
shll
mov
cld
sbb
add
dec
mov
jl
pop
stos
cli
inc
xchg
pop
les
sbb
lds
or
pop
rcll
push
fwait
mov
lret
sbb
leave
cmp
or
jmp
sti
add
subl
cmpsl
lret
push
lret
fistl
lds
inc
pop
testl
and
push
mov
std
ljmp
xchg
mov
out
imul
enter
xor
idivb
add
sahf
sbb
pop
mov
xchg
ds
jbe
out
ret
pop
push
jnp
dec
mov
inc
dec
add
rorl
clc
cmp
mov
out
addb
and
loop
dec
mov
pop
scas
jns
adc
leave
mov
outsl
test
imul
sub
mov
xor
into
fwait
push
mov
cltd
xlat
stc
sub
nop
push
push
jle
aas
jmp
mov
jno
ja
push
insl
mov
pop
loop
es
sub
push
fisubrs
outsl
out
pop
or
push
mov
pop
test
cmp
adc
pop
sbb
gs
gs
sbb
test
fiaddl
insl
push
xchg
cmpsb
add
jecxz
sub
push
jae
push
aas
mov
inc
cmp
pop
icebp
ss
js
pop
push
nop
and
jo
stos
adc
call
lods
cmp
sub
and
jns
gs
pop
adc
aas
and
pop
mov
mov
pushf
sub
into
leave
popa
xor
cmp
test
test
push
neg
lcall
and
jp
pop
hlt
mov
call
jmp
mov
xchg
push
out
fnstsw
and
sbb
rcrl
xchg
mov
pushf
xor
pop
aaa
orl
mov
sub
jbe
aas
ss
notb
hlt
push
das
out
xor
js
jnp
enter
mov
jl
inc
push
xchg
xchg
adc
jge
cmpsl
add
jns
mov
orl
je
negb
cmpsl
int3
cmp
mov
lock
arpl
jg
jge
xor
pusha
movl
repz
and
jmp
mov
inc
sbb
subl
movsl
or
add
lds
push
pushf
adc
fsubs
pop
push
cmpsb
movsl
xchg
loopw
sbb
lea
aam
into
fiadds
xchg
stc
mov
inc
scas
add
data16
cmpsb
lock
fisubl
xchg
lret
push
mov
ss
ret
repnz
or
push
cmp
jecxz
mov
mov
adc
ret
pop
or
mov
mov
and
imull
pusha
js
jns
test
jnp
xor
std
mov
xchg
xchg
inc
jbe
mov
or
int
pusha
mov
cwtl
or
inc
and
shll
cmpsl
jbe
xor
or
adc
jg
jmp
add
lods
jecxz
adc
xchg
repz
mov
imul
inc
xor
push
jae
ret
sub
cmp
jge
dec
mov
inc
adc
lea
das
push
xchg
dec
mov
sbb
pushf
pop
adc
fisttpl
push
dec
mov
fs
adc
jge
enter
rorb
into
nop
sub
xchg
push
shrl
sti
ret
push
dec
loope
or
js
stos
lds
sahf
mov
ja
call
pop
ret
xchg
or
in
in
test
or
inc
mov
fs
mov
push
fidivrl
out
out
movsl
or
clc
arpl
cmpb
std
adc
and
and
insb
sbb
mov
xchg
aaa
xor
add
decl
jo
cmp
pop
jg
sub
mov
les
mov
lret
pop
loopne
xor
inc
mov
addb
pop
jle
sbb
xchg
dec
or
aaa
in
sub
loop
pop
sahf
dec
std
mov
inc
fimuls
sub
test
stos
push
jl
sbb
and
gs
dec
in
outsb
jne
in
adc
inc
lods
subb
test
testl
in
inc
cmc
sahf
lock
or
loope
divb
push
data16
mov
loop
sub
scas
push
and
test
dec
and
sbb
sub
push
inc
mov
dec
lods
sub
or
sub
mov
sub
or
jge
cltd
fcoml
pop
dec
add
imul
loope
sbb
jle
mov
in
add
inc
sbb
mov
cmp
lcall
repnz
leave
push
or
add
mov
and
rolb
or
dec
test
sub
iret
dec
add
pop
pop
out
jae
inc
xor
lods
mov
push
jl
or
xchg
clc
dec
xor
xor
xchg
pop
leave
lcall
push
ficomps
roll
mov
outsl
aaa
add
adc
pop
jae
aad
jbe
or
jo
mulb
fidivl
inc
push
adcl
xchg
xchg
xchg
daa
or
sub
insl
cmp
adcl
js
scas
jno
jns
mov
or
pop
mov
es
add
stos
das
dec
addl
mov
cmp
test
sbb
and
push
gs
popa
and
sbb
lods
lds
iret
cmpsb
mov
jbe
dec
cld
mov
rcrb
jns
push
jmp
outsl
sahf
xor
push
ret
inc
and
mov
jnp
cmpsb
lds
xor
hlt
pop
ret
loope
inc
loop
xchg
js
sbb
pop
mov
jno
jb
cmpsb
mov
fsubs
pop
loopne
ja
inc
jns
adc
and
xor
sbb
int3
sti
push
sbbl
mov
cld
cmp
lret
aad
inc
test
test
pop
gs
dec
sbb
aam
daa
or
mov
mov
fcmove
insl
cmp
cmpsb
pop
adc
dec
sub
adcb
loope
sub
sbb
add
test
mov
push
and
aad
and
enter
mov
pop
in
mov
fcoml
lods
mov
sti
insb
arpl
in
pushf
inc
test
movsl
negl
cwtl
jb
aad
mov
movsl
cmc
sub
inc
test
xchg
pavgw
scas
push
fs
cmp
je
arpl
mov
fstps
test
dec
xlat
popf
mov
mov
div
mov
lahf
jle
jp
push
mov
flds
mov
js
out
adc
ds
xchg
add
xor
cmp
push
mov
arpl
pop
lock
sahf
hlt
fdivs
ret
jne
scas
scas
inc
sbb
cmp
xor
sbb
lcall
orl
pop
jb
add
aad
and
adc
cmc
push
inc
test
cmp
lds
and
cltd
xor
movb
int3
inc
mov
mov
jne
jnp
inc
mov
lock
divl
add
xchg
daa
mov
or
shll
imul
pop
mov
bound
test
test
jle
lods
push
mov
adc
fcmovnb
mulb
nop
jmp
lock
sarl
adc
mov
inc
lahf
ja
inc
or
out
pop
inc
dec
lock
mov
mov
add
arpl
lock
pop
mov
mov
mov
icebp
mov
xchg
bound
jge
pop
mov
adc
sub
adc
add
call
jmp
mov
add
xchg
dec
nop
cmp
fsubrs
add
xor
push
fsubrs
xchg
imul
xchg
lods
jb
adc
jns
lcallw
test
mov
jg
leave
sbb
mov
inc
inc
pusha
testb
inc
mov
idivl
outsl
cmp
lock
loope
xchg
jne
ret
repnz
out
dec
or
jnp
cmpsb
and
xor
cltd
inc
or
je
xchg
je
and
mov
mov
std
fnstsw
push
pop
pusha
mov
mov
adc
std
test
mov
cld
fucomip
mov
mov
mov
inc
jnp
inc
imul
aam
push
jae
fidivrl
push
adc
jnp
jnp
in
shrb
je
pop
repz
imul
xor
test
mov
mov
xchg
cmpsl
test
lcall
sub
jb
jp
sbb
bound
push
lahf
cli
loopne
arpl
mov
sub
cmp
ljmp
jno
xchg
cli
sbb
jl
hlt
repnz
sti
jle
ljmp
iret
xchg
andb
push
test
push
mov
aam
add
mov
dec
cltd
cltd
or
mov
add
nop
mov
test
lret
pop
xchg
das
mov
sbb
fiadds
add
sahf
dec
jmp
rcrl
xor
repz
and
push
dec
jp
fdiv
add
pop
xor
clc
xor
cli
push
je
xlat
lahf
adc
adc
push
dec
sti
jns
fidivrl
sub
and
movb
mov
insl
cmpsb
daa
lods
jmp
lret
inc
or
fs
pop
pop
cwtl
ds
aas
fld
sahf
inc
popa
xlat
jne
lea
or
push
dec
adc
mov
adc
mov
lock
ffreep
cli
mov
add
mov
xchg
mov
cli
pop
xor
mov
push
push
push
pop
cmp
aam
out
inc
inc
aad
inc
clc
mov
pop
and
mov
je
adc
shlb
push
push
stc
sahf
mov
cmp
cs
ss
out
xchg
scas
mov
loope
fcom
cmpsb
jge
xchg
stos
in
pop
push
xchg
mov
mov
fwait
mov
jecxz
lods
xor
gs
mov
rol
fdivrl
lods
dec
call
pop
cmp
ret
mov
push
push
mov
mov
dec
jnp
loopne
in
bound
jl
movsb
mov
inc
inc
and
push
mov
jb
lods
pop
jae
and
and
fmul
hlt
cmp
dec
and
icebp
push
xor
xor
je
hlt
cmp
push
fnstcw
dec
cmc
rcrl
push
cltd
fadd
jmp
sub
cmc
sbb
aaa
pop
inc
inc
div
in
mov
repz
pop
pop
inc
aam
push
jne
adc
pop
shll
pop
ja
addr16
mov
faddl
cmp
or
out
dec
sbb
push
inc
pop
pop
mov
ljmp
xchg
std
pop
xchg
movsb
pop
sbb
cmp
dec
ficoms
cmp
push
lret
mov
sub
mov
or
imul
movsl
jae
lcall
insl
jb
mov
inc
push
loopne
add
push
add
jne
addr16
stos
pop
cmpsl
lds
rcrb
sbb
ljmp
or
rorb
add
cmp
stc
lret
pusha
fwait
pop
imul
loope
xchg
shlb
ret
jbe
call
cwtl
notb
in
mov
mov
fdivrl
inc
dec
xchg
in
add
inc
sbb
cmp
fimuls
adc
lock
adc
and
or
pop
jmp
xor
sahf
pop
add
data16
mov
mov
fcomps
notb
xor
push
pop
mov
dec
sub
fstpt
jb
mov
in
movl
sub
rclb
in
xchg
add
and
add
ja
pop
cmpsl
stc
cmpsl
sub
inc
movsl
mov
loope
jl
push
add
gs
insb
enter
lea
dec
pop
movsl
push
dec
into
test
dec
testb
mov
push
lds
mov
js
movsl
call
pop
or
mov
adc
hlt
xchg
rcr
rcl
fldt
or
dec
pop
push
cmp
jnp
push
cli
lods
pop
xchg
je
adc
aam
mov
cmp
push
mov
sahf
sub
push
cli
mov
mov
jmp
mov
xchg
shrb
inc
and
popa
mov
mov
mov
sbb
cmp
adc
clc
imul
stc
and
insb
test
addr16
lds
sub
xchg
inc
jle
loope
push
imul
aaa
stos
stc
loope
cmovle
xchg
aaa
or
sbb
inc
mov
jns
inc
and
pop
mov
dec
dec
pop
and
mov
add
mov
pop
add
xor
mov
ljmp
cmp
adc
adc
subl
push
fadds
out
mov
into
aaa
outsl
cmp
icebp
and
add
popf
cmpsb
and
adc
cmp
loopne
lret
push
inc
push
mov
pop
mov
or
negl
fimull
sbb
push
jg
xor
cmp
in
mov
mov
pop
ficoms
pop
fistps
xchg
add
adc
ljmp
outsl
ja
sahf
repz
and
int
sti
mov
push
in
aaa
or
xchg
push
add
xchg
mov
test
dec
loopne
int3
loopne
pushf
call
sub
mov
jns
dec
xchg
fwait
ja
pop
and
sbb
movsl
pop
pop
push
adc
push
inc
mov
pop
sbb
xchg
xor
mov
verr
xor
fldl
push
gs
sbb
loopne
sub
jl
cmp
jle
adc
rcrb
xor
jl
test
rcr
je
and
test
xchg
js
add
pop
outsb
fwait
cmpl
dec
and
pop
addl
ret
mov
scas
loop
scas
cmp
jge
loopne
lret
mov
mov
stos
jnp
xchg
dec
mov
add
pop
or
push
lds
pop
popw
stos
aam
jae,pt
push
mov
cmpsb
xchg
inc
btr
mov
pop
inc
xchg
cld
jmp
popa
or
push
scas
mov
push
clc
jge
jle
or
cmp
enter
sbb
jno
fwait
push
and
adc
rolb
mov
push
jecxz
out
adc
ljmp
js
lods
inc
xorb
push
mov
lret
pop
scas
mov
cmp
and
popa
fsincos
cli
adc
or
fsubl
cli
inc
add
sbb
outsl
mov
mov
mov
xor
cmpl
jno
fiadds
faddp
fs
pop
adc
ss
mov
ret
aad
aad
ret
xchg
jnp
adc
sub
sbb
imul
aas
fdivp
jp
fcoms
add
cs
push
cli
test
lret
dec
arpl
jmp
xor
sub
cmpsb
mov
ds
adc
stos
aad
pop
scas
out
dec
mov
lahf
aam
sub
outsb
jo
int3
sbb
mov
push
inc
lahf
fsubr
lock
std
fcos
jl
ror
sub
aad
orl
pop
daa
stos
xchg
fistpll
pop
or
fnstcw
shld
xor
ja
push
lahf
sarb
push
fidivl
loopne
lret
mov
xlat
and
negb
pop
mov
orb
push
pop
imul
clc
fstpl
je
filds
stos
hlt
push
ds
loope
lahf
xchg
lds
sub
test
hlt
fwait
sub
mov
push
out
pop
insl
xchg
add
dec
cld
fscale
leave
aam
jne
lcall
ss
or
push
mov
mov
mov
cmp
xchg
jae
dec
mov
and
dec
push
shll
jmp
rcrl
dec
fnsave
hlt
outsl
and
sbb
xor
xchg
jne
ss
cmp
pusha
repnz
subb
xchg
test
es
mov
mov
pop
push
mov
xor
lea
or
leave
mov
pop
iret
mov
insl
imul
push
and
xchg
test
and
mov
aaa
dec
into
mov
sbb
inc
pop
jg
pop
test
mov
dec
lods
push
ja
insl
push
out
pop
pop
mov
cmp
adc
lcall
mov
int3
sub
inc
sub
sub
push
and
pop
xchg
arpl
aam
stc
lock
pop
andl
repnz
aad
fisttpl
iret
adc
push
mov
icebp
into
out
fidivrs
and
dec
outsb
xchg
nop
adc
adc
cwtl
aaa
add
bound
or
lcall
icebp
shll
jmp
push
adc
add
das
mov
xchg
out
mov
xchg
xchg
mov
cmc
mov
sarb
mov
adc
negb
sub
xor
je
incb
push
push
fs
aam
adc
sahf
jmp
add
leave
pop
sti
sub
mov
hlt
js
xchg
lahf
lds
xchg
in
sbb
dec
and
sbb
sarb
sub
popf
outsb
jnp
xchg
imul
ror
pushf
sbb
mov
call
push
int3
mov
dec
mov
or
pop
mov
not
dec
cmp
ret
fst
dec
lock
cmc
call
loope
rcrb
das
cmpsb
js
rolb
in
sarb
loope
mov
pop
push
std
lods
sbb
jmp
loope
sub
mov
insl
mov
pmullw
push
and
icebp
jnp
call
dec
fistpll
lret
xor
test
daa
xchg
sbb
xlat
mov
mov
dec
test
aam
popa
cltd
add
fstl
or
push
inc
push
mov
xor
sbb
adc
je
or
inc
sbb
sub
lea
repnz
call
mov
add
insb
pop
add
sbb
push
test
adc
xor
dec
xchg
imul
push
mov
sub
call
out
ds
fmull
dec
repnz
int3
ds
xchg
mov
fadds
xlat
mov
mov
fcompl
sub
add
fmull
and
add
cmc
cmpsl
je
mov
lock
imul
adc
xor
push
add
popf
dec
pop
mov
sub
jns
out
xor
sbbb
adc
cld
cmpsl
cmc
adc
push
cmp
cmp
stos
jb
or
mov
sahf
mov
ljmp
pop
xchg
and
cwtl
sub
imulb
inc
scas
repnz
dec
inc
popa
push
fcmovnu
mov
pop
ds
adcb
pop
inc
cs
mov
repz
dec
psubsb
pop
mov
es
std
mov
ds
jecxz
int
rcll
mov
inc
jnp
ret
ds
inc
mov
jl
cmp
scas
lods
cmp
cmp
or
mov
inc
mov
mov
aam
or
test
leave
test
xlat
mov
fidivrs
mov
adc
jp
push
andb
push
arpl
add
xchg
mov
cld
btr
push
sbb
rcr
iret
outsb
mov
push
cs
repnz
sti
add
sub
test
int
xchg
outsl
xchg
out
xchg
imul
fistpll
mov
sub
test
ret
mov
mov
repnz
cmp
ljmp
fs
inc
icebp
jge
dec
xchg
movb
adc
mov
out
jbe
and
cli
inc
jmp
js
jae
test
inc
xor
jbe
and
arpl
in
and
loop
mov
test
xchg
and
cmp
xchg
or
repnz
add
movsb
lcall
xchg
pop
xchg
int
pop
fmuls
je
testl
xchg
movl
mov
insl
mov
popf
pop
ret
in
insb
mulb
out
cli
pop
mov
rorb
add
cmc
cwtl
insl
int3
push
or
gs
xchg
imul
ds
and
arpl
inc
sub
rcrb
das
pop
pop
fcoml
push
outsl
jae
fs
cmpsl
mov
jno
stc
fwait
push
push
cmp
or
cli
pop
mov
cltd
xchg
mov
jo
or
mov
mov
repnz
insb
mov
add
mov
mov
jp
fucomi
adc
mov
imul
dec
or
hlt
or
xor
ret
add
loopne
ja
ret
loop
sbb
ja
sub
pop
jno
sub
std
lahf
push
pushfw
jp
mov
dec
or
jnp
shlb
pop
rorb
cmpsl
cmp
nop
outsl
fcomip
gs
test
movsb
dec
xor
jl
lret
push
inc
sbb
pop
daa
movsl
outsb
pop
cmc
call
mov
dec
bswap
iret
jbe
dec
sbb
cmp
fists
int
inc
out
mov
xchg
addb
push
push
subb
frstor
into
js
rorb
pop
inc
test
xchg
mov
arpl
lods
sub
mov
leave
outsb
test
mov
jne
orl
fs
leave
mov
inc
dec
adc
sbb
cmp
add
xor
inc
fcmovnb
mov
inc
or
arpl
imul
xlat
bnd
xchg
aad
test
adc
pushf
add
test
push
jb
outsl
aam
scas
xchg
push
daa
add
add
xchg
cmp
xchg
jb
pop
enter
movsb
inc
scas
fildl
movsb
push
cmp
fcmovu
adc
in
pop
enter
js
inc
testl
jge
cmp
adc
jmp
sahf
inc
iret
iret
rclb
pop
rcr
dec
aad
mov
add
xor
xchg
addr16
mov
dec
push
mov
lds
out
lds
jns
cmp
cmp
sub
or
sti
popf
mov
aaa
jecxz
lods
popa
andnps
adc
jp
ljmp
inc
lret
inc
push
insb
movsl
dec
xchg
aaa
mov
dec
mov
sub
sub
and
js
insl
pop
add
daa
adc
jo
jbe
push
jl
ret
pop
ja
push
sub
insb
sub
scas
xchg
fisubrs
pop
iret
lea
or
mov
fwait
pop
jl
xor
lret
xchg
cli
mov
sub
sahf
mov
and
shll
fs
ds
sbb
dec
enter
mov
dec
push
inc
fidivrl
incl
adc
cmp
lea
jbe
std
cmp
sbb
scas
mov
push
jne
or
rclb
lods
fstpl
mov
cwtl
loop
adcb
push
sub
js
inc
push
mov
mov
fidivrl
inc
cmc
cwtl
push
xchg
xchg
cltd
jp
jg
push
sbb
into
jecxz
lahf
dec
std
shl
das
jg
mov
push
fcoml
sub
pop
xchg
xor
adc
push
mov
mov
xor
cmp
push
lods
in
sbb
or
and
push
aad
imul
and
cmpsb
jo
in
push
jl
cmp
das
dec
std
insl
stc
xchg
sahf
push
mov
mov
in
stos
lods
mov
ljmp
int
adc
pop
jle
push
iret
pusha
add
dec
dec
push
sub
js
lahf
test
repnz
int3
mov
or
mov
repz
insl
mov
int3
stos
push
adc
in
cs
cmpsb
rorl
cmp
cmp
lods
lds
scas
xlat
gs
fisttpl
mov
lds
pop
jle
mov
cli
mov
xchg
xchg
pop
orl
cmp
jo
mov
add
mov
into
test
jp
adc
out
jmp
push
test
ret
std
xchg
test
cld
scas
stos
sbb
stos
or
inc
sbb
mov
lea
xchg
lret
lret
add
dec
inc
fisttps
aam
cmp
add
stos
sub
cmp
arpl
jno
xchg
scas
xlat
mov
test
ja
cmp
scas
xor
mov
ret
in
xchg
mov
or
nop
test
and
lods
stc
sti
cltd
test
or
cmp
cltd
movsl
add
popa
cmp
bound
repnz
lret
pop
outsl
sub
roll
and
pop
jbe
xchg
jae
lea
jg
add
add
sub
xorl
pop
insb
mov
pop
mov
mov
aaa
inc
outsb
mov
aaa
andb
mov
mov
push
or
jge
pop
scas
xor
sub
rorb
mov
inc
pop
and
in
sub
push
add
jmp
push
fstpt
inc
test
fs
cmp
cmp
xchg
dec
jp
sbb
push
mov
orb
in
iret
sub
mov
xchg
je
inc
imull
mov
inc
push
push
rorb
xchg
popf
push
in
pop
pop
insl
adc
pop
cmp
xchg
xor
xchg
pop
enter
mov
and
movsb
imul
dec
or
inc
mov
fs
push
fcom
out
jae
out
outsl
sbb
ja
fsts
lahf
pop
daa
dec
mov
lds
adc
shrl
mov
cmp
pusha
sarb
or
push
dec
sahf
lcall
lcall
aaa
inc
mov
xor
lret
arpl
sbb
fimull
and
int3
dec
add
add
ret
jecxz
ret
imul
test
hlt
out
fidivs
sub
movl
fsubr
sti
jge
out
and
dec
xor
mov
or
add
cmc
loop
jnp
pop
out
jg
cmp
cmp
xor
sub
fmulp
xchg
sti
push
dec
jmp
les
sub
popf
sub
or
push
lds
outsl
mov
inc
sbb
or
push
pusha
jbe
mov
adc
cmpsl
mov
mov
hlt
shlb
sub
jnp
or
jl
add
push
sahf
push
and
add
push
xor
gs
test
mov
shll
xor
imulb
cwtl
popa
push
sub
popa
sbb
push
mov
mov
leave
in
mov
mov
pop
sbb
sbb
pusha
inc
movsb
sub
sub
sub
jo
gs
rorl
outsb
dec
xchg
sbb
mov
push
mov
movsb
rol
insb
cli
popf
xlat
mov
dec
jns
out
or
movsb
repnz
in
mov
pushf
xchg
lock
sbb
sahf
push
mov
in
mov
arpl
mov
cmp
repz
jle
addr16
sbbb
pop
gs
insl
jb
out
pop
push
cmp
lret
jbe
fadds
jb
in
push
and
push
test
ss
hlt
lea
mov
js
mov
pop
jns
and
inc
arpl
ds
outsb
fnstcw
or
into
mov
test
dec
pop
cmp
mov
xchg
mov
mov
idiv
jbe
mov
xor
sbb
cmpsl
in
fsts
adc
add
movsb
xchg
enter
call
xchg
aas
test
repz
pop
adc
popa
in
or
cltd
lret
clc
test
mov
sub
shlb
inc
cli
mov
test
xor
jno
jmp
pminsw
in
push
enter
out
pushf
testb
lea
push
jge
lahf
jb
adc
inc
pop
jecxz
push
out
cs
sub
ret
dec
sub
out
adc
adcb
call
jno
lds
negb
add
cmp
xorl
gs
shlb
insb
cld
rcll
scas
adc
jmp
mov
roll
imul
out
mov
xor
pop
ficoms
inc
jno
mov
sub
pusha
xor
loop
stc
and
lods
xor
int
mov
and
xchg
lods
jecxz
xchg
mov
xchg
pop
adc
jns
movsb
mov
test
add
test
mov
push
and
lea
jns
pop
pop
jmp
rcrl
sarl
xchg
ja
pushf
int3
jnp
and
xchg
push
clc
test
ja
sbbl
rcrb
pop
out
enter
xor
and
pop
inc
data16
aas
adc
bound
repz
sarb
scas
cmp
nop
iret
fstpl
mov
xchg
std
negb
push
and
pop
mov
movsl
loop
xchg
sub
add
popa
sbb
ret
xchg
jecxz
push
test
push
fwait
mov
adcb
mov
jge
mov
add
sub
adc
push
pop
and
out
sbb
cmpsl
int
dec
jl
roll
mov
scas
negl
fsubrs
jmp
mov
int3
sti
cwtl
mov
mov
mov
mov
js
mov
mov
pusha
fstps
push
fldl
lods
rcr
inc
stos
inc
fldl
dec
nop
sbb
mov
jno
jb
mov
dec
data16
push
js
inc
das
xor
sub
inc
xor
icebp
dec
pop
sti
mov
sub
adcb
pop
insb
dec
outsb
cmp
jge
addr16
cmp
cld
repz
mov
leave
es
inc
aam
xchg
incb
push
adc
mov
pop
and
mov
je
insb
cmp
mov
push
outsb
mov
sbb
xchg
ss
lods
push
das
je
mov
es
cmp
sub
push
xor
mov
cmp
stos
add
xor
cs
xchg
push
mov
inc
fwait
or
aam
mov
out
aad
xchg
decl
push
xor
test
xlat
scas
adc
and
sbb
mov
sbb
adc
inc
aad
dec
pop
push
pushf
pop
fwait
add
push
cld
adc
popa
cmpsb
pop
stos
imul
push
mov
xchg
xor
mov
mov
hlt
add
mov
or
stos
mov
mov
dec
mov
adc
mov
xchg
stos
jae
xchg
and
mov
std
mov
or
jbe
loopne
pop
ret
inc
pop
sarb
je
and
fdivl
ss
dec
cmp
or
mov
fdivl
or
sub
jno
jno
mov
mov
lahf
shl
nop
mov
adc
imul
jo
bound
mov
decl
pop
mov
insb
lret
pop
cmp
mov
cmpsl
mov
push
sbb
xor
inc
out
jle
divb
jg
push
cmpsl
das
sahf
fsubl
sub
cmp
flds
or
mov
adc
pop
lret
lods
xor
push
nop
inc
xchg
stos
sbb
and
inc
inc
stc
lea
dec
fistl
sub
pop
cmp
mov
shrl
mov
inc
pop
test
std
in
pusha
js
cltd
mov
mov
lods
or
sti
push
mov
or
push
icebp
and
loopne
mov
mov
cwtl
outsb
movsl
call
adc
loope
xchg
loope
xor
lods
mov
rcll
dec
insl
dec
jge
fldenv
or
mov
sbb
pop
xchg
jo
test
mov
jo
jg
call
insl
push
pop
jl
std
mov
jbe
push
sbb
mov
xlat
inc
notl
push
cmova
xor
icebp
out
inc
nop
and
xchg
mov
sahf
in
sahf
push
fcmovu
jecxz
jns
and
dec
mov
fsubp
icebp
imulb
stc
adc
pusha
fidivrs
mov
fwait
lea
data16
gs
and
pop
nop
mov
mov
in
int3
xor
fcompl
movsl
xchg
scas
xlat
idivl
adc
xor
xor
jno
push
jbe
call
or
jmp
repz
in
add
js
adc
aas
nop
sub
mov
jg
out
and
sbb
push
cmc
imul
shrb
outsl
dec
dec
cmp
cltd
push
xchg
push
sbb
inc
sbb
ret
int
mov
clc
push
pop
push
mov
add
xor
daa
pop
mov
inc
sub
add
sti
sbb
pop
das
push
cltd
hlt
xor
shl
shll
add
cmp
sub
jecxz
fsubrl
insl
pop
sub
sbb
pop
pusha
sbb
ror
pop
decb
or
rol
inc
pop
lcall
aam
leave
sub
dec
cmp
sub
js
add
or
arpl
aam
and
sub
sbb
out
rol
clc
push
pop
mov
lods
mov
outsl
les
out
jne
jne
loope
jp
addr16
test
or
jl
pop
jbe
movsl
jl
jp
xchg
fwait
test
mov
pusha
mov
sub
test
xchg
nop
aaa
cwtl
and
fdecstp
scas
lret
and
ss
inc
mov
push
add
dec
add
movsl
mov
cmpsb
jbe
inc
and
xchg
clc
ja
and
add
adc
daa
mov
jns
rcr
pop
cmpsl
cli
mov
push
pop
add
mov
mov
fmul
out
arpl
sub
fcoms
stos
bound
add
xchg
sub
ret
fstpt
repz
lds
loope
mov
in
mov
bound
cmp
push
lock
lret
and
cmpsb
rorb
rol
mov
iret
mov
and
xchg
sub
fnsave
clc
jle
mov
pop
sub
out
mov
out
out
lcall
jbe
clc
lret
ret
adc
dec
imul
mov
sbb
sbb
mov
mov
xchg
mov
sbb
xor
adc
aaa
in
pop
leave
ljmp
inc
lods
sbb
bound
int3
xor
inc
sub
call
and
inc
cmp
push
mov
inc
sti
jmp
fs
daa
pop
pop
dec
jmp
cltd
mov
inc
ja
lret
jmp
cli
mov
lock
push
in
xchg
fisttpll
mov
jecxz
mov
fimuls
add
lock
dec
push
divb
insl
xchg
jp
mov
aam
filds
mov
int
cmp
and
enter
sub
into
cli
xchg
lds
repnz
outsl
movsl
test
loopne
pop
push
xchg
cmp
cltd
lea
jae
pop
xchg
and
icebp
sahf
das
stos
lods
adcl
push
push
add
data16
add
jno
push
imulb
pop
or
xor
add
arpl
test
mov
cs
mov
fwait
or
out
fs
stc
fiadds
ljmp
sti
and
ljmp
jg
shrl
pushf
lods
lcall
inc
cmpsb
xchg
push
and
cmp
lods
xor
std
jecxz
adc
inc
int
popf
sub
or
sti
xlat
sub
or
lret
adcb
inc
and
push
pushf
mov
fiaddl
repnz
in
jecxz
movl
xor
lods
inc
adc
fwait
loop
aas
or
leave
icebp
pop
mov
push
xor
xor
push
or
icebp
cmpsl
movsb
jp
lret
repz
int
push
sub
into
daa
cmp
xlat
loopne
xchg
xor
xchg
mov
rorb
arpl
jmp
rolb
call
sbb
push
clc
or
cmp
xchg
push
mov
xchg
mov
lock
cmp
xchg
decb
hlt
addr16
in
push
sub
jnp
std
and
mov
loop
psrlq
push
pop
push
xchg
mov
movsb
dec
ret
cmp
sub
xor
addr16
insb
pop
mov
fwait
sbb
cmp
or
fidivs
mov
cmp
popf
mov
cli
stc
xor
movsb
add
dec
in
lret
insl
shr
mov
out
fidivrs
xor
fisttpll
int
outsl
pushf
js
iret
add
pop
xchg
xor
lds
jnp
inc
cmp
jl
add
sahf
fnstenv
xchg
inc
xor
mov
inc
movsl
test
out
pop
lock
iret
sub
fadd
les
out
cmpsb
sub
add
dec
mov
out
sub
push
aam
sub
lret
add
and
and
sbb
and
cltd
and
adc
jns
xchg
push
icebp
push
mov
aam
mov
stos
pop
push
pop
ror
and
popf
sbb
and
mov
or
xadd
and
sti
shrb
pop
push
mov
out
lock
jmp
repz
cmpsb
push
jle
out
das
xchg
fmull
xor
inc
jmp
aaa
negl
mov
jecxz
inc
mov
sbb
jecxz
sub
push
insl
pop
xchg
add
adc
shrl
mov
out
cli
jecxz
push
cmp
xchg
mov
insb
push
xchg
mov
pushw
sbb
fistps
dec
sbb
popa
int3
call
addr16
mov
and
xor
std
jl
xor
inc
dec
test
mov
sub
push
xchg
aam
adc
fisubrl
cmpsl
mov
jne
pop
movsb
pop
push
into
jge
stos
inc
pushf
out
xchg
imul
xchg
or
loope
gs
push
lahf
sarb
out
decb
push
or
jmp
sbb
add
dec
test
lods
enter
in
xchg
outsb
jmp
out
cmpsl
popf
mov
push
sbb
fwait
scas
in
mov
imul
inc
insl
and
add
fldenv
stos
jl
es
cwtl
push
stos
xchg
mov
xchg
jnp
jge
xchg
cmp
push
jp
pop
fadd
je
sub
add
aaa
cmc
dec
sub
xor
lret
mov
mov
movsl
mov
inc
mov
or
sarb
jl
loopne
je
leave
jns
mov
mov
inc
jge
rol
or
jge
sub
mov
inc
leave
adc
lods
push
jecxz
adc
adc
cmp
das
mov
mov
lods
negb
add
les
mov
xchg
cmp
add
xchg
out
jne
std
xor
or
lea
inc
mov
pusha
movsb
adc
push
inc
sbb
popf
jmp
mov
ja
jl
xlat
ret
or
lods
mov
inc
roll
loope
enter
add
sub
loopne
xor
and
imul
stos
mov
lea
dec
and
dec
test
stc
dec
js
shlb
xor
mov
and
dec
clc
inc
ret
and
icebp
pop
jne
out
int
fwait
test
add
icebp
or
inc
lahf
push
lahf
push
xor
mov
xor
out
jle
mov
cwtl
xchg
outsb
outsl
and
pop
jnp
es
lock
mov
sub
cmp
sub
ja
push
or
xchg
rcrl
push
sub
and
push
and
les
into
jecxz
ds
bound
cmp
push
in
adc
popa
jae
imul
push
mov
mov
xor
addr16
sub
enter
ljmp
mov
mov
add
loopne
push
rol
dec
pushf
test
jl
or
pop
inc
aad
or
data16
and
xor
xor
gs
cmp
push
sahf
nop
inc
add
mov
mov
add
add
dec
cltd
dec
scas
dec
mov
sub
js
mov
jno
mov
pcmpgtb
jmp
or
outsl
or
icebp
xchg
sbb
dec
iret
cld
in
dec
negb
stos
dec
cmp
les
out
int
insl
out
or
ficoms
mov
js
nopl
aam
fdivs
cmpsl
mov
sub
outsl
aad
or
dec
jno
aaa
xchg
ds
je
adc
and
sbb
jae
xchg
test
outsb
xor
mov
int3
jns
ja
sub
out
sbb
push
fscale
mov
addr16
clc
inc
aam
movb
xchg
lret
lret
dec
call
xchg
dec
jnp
imul
adc
jne
stos
insb
mov
nopl
xchg
dec
lahf
insb
push
mov
das
cli
fldl
sarb
sarb
cwtl
mov
mov
insb
add
js
cmpsl
and
int3
inc
xchg
jp
xor
pop
adc
add
jmp
out
js
fdivl
sbb
or
sbb
repnz
push
xor
std
shrb
leave
cld
std
inc
fsubs
in
xor
loop
jg
aaa
and
cld
or
mov
cmpl
fcom
cli
test
aad
push
repz
sbb
jo
add
dec
xor
mov
movsb
xor
movsl
imul
negb
mov
push
out
mov
cwtl
mov
mov
xchg
pop
mov
adc
cmp
xchg
push
push
lock
push
in
cli
pmulhw
sbb
cmpsl
lds
fs
aad
lock
inc
sbb
ja
or
popa
pop
jmp
es
clc
aaa
xor
mov
lcall
in
call
mov
xlat
or
roll
cwtl
ret
jmp
int
pop
xchg
mov
daa
lcall
arpl
xchg
push
push
mov
jp
adc
xor
cmp
out
push
hlt
pop
stos
cld
mov
pop
loop
sub
pop
shll
and
and
mov
push
rolb
mov
clc
lock
xchg
cld
clc
cmp
mov
sbb
mov
xchg
andb
in
jecxz
call
out
mov
and
out
aam
js
mov
aas
sub
sub
cmp
fcmovnbe
jl
out
inc
sub
pop
add
dec
rclb
add
or
mov
iretw
jo
add
jp
mov
mov
pop
jp
sbb
std
cmp
adc
scas
pop
sbb
dec
xchg
mov
pop
dec
xchg
push
push
std
inc
ja
pop
xchg
mov
and
das
inc
sbb
xchg
xor
aaa
xor
aad
out
push
incl
cmpsl
xchg
fadds
push
mov
jbe
enter
sbb
mov
pop
cmp
repz
inc
lea
fbld
or
int3
cs
mov
cld
dec
gs
mov
xor
push
hlt
dec
lock
pusha
bound
push
adc
addr16
mov
dec
inc
testb
loopne
xlat
lods
mov
cld
inc
into
lea
jnp
jmp
sub
or
xorb
push
sub
mov
cld
xchg
pop
xor
mov
cmp
bnd
lret
fwait
les
enter
in
jmp
clc
jle
ret
iret
jg
inc
sbb
sbbl
and
in
cwtl
in
mov
xchg
mov
dec
jbe
jp
mov
xchg
in
int
paddusb
popf
mov
or
repnz
mov
fs
cli
adc
push
in
jecxz
test
je
mov
or
or
and
mov
clc
iret
push
dec
dec
test
in
ljmp
mov
jmp
add
inc
ljmp
cmp
jmp
scas
lahf
xor
xchg
ja
fdiv
xchg
fldenv
and
xchg
or
loop
mov
mov
rorl
insl
inc
sub
adc
add
and
call
lods
loope
jge
mov
mov
pop
jne
or
mov
xchg
hlt
jecxz
repnz
leave
mov
movsl
ds
mov
dec
aaa
jge
outsl
clc
ljmp
scas
sbb
cmp
scas
pop
cmp
outsl
lret
mov
mov
inc
jmp
bound
mov
xor
xor
mov
cmc
jp
insl
enter
push
mov
cmp
fmull
and
sbb
pop
sahf
mov
inc
and
loope
scas
inc
pushf
cld
or
mov
mov
cmc
arpl
ja
movb
icebp
push
out
xchg
cld
lock
aaa
and
cltd
push
xchg
mov
add
dec
std
js
cmp
out
xor
xor
mov
aaa
pop
jne
xor
jmp
mov
inc
outsb
in
pop
das
gs
cmpsb
cltd
xchg
bound
je
pop
adc
mov
and
iret
push
cmc
imul
out
call
ljmp
sti
push
call
outsl
int3
and
and
pop
aam
negb
cmp
or
cltd
xchg
in
mov
xor
jmp
pop
mov
push
dec
idivb
xor
xor
enter
stc
shr
clc
in
and
xor
pop
call
in
insb
mov
fsubrp
popf
fadds
in
out
push
lahf
mov
xchg
push
dec
cwtl
add
pop
xchg
xchg
add
or
add
sbb
mov
mov
in
test
adc
cmp
mov
rolb
inc
cmpsb
cltd
outsl
cli
test
cmpsl
mov
jmp
outsb
mov
dec
loope
jae
add
shll
pop
daa
push
mov
xor
cld
subb
add
mov
js
jl
add
fsub
call
cmp
sub
ret
xor
pop
mov
ds
cmpsb
sub
mov
aaa
dec
lahf
jns
or
sbb
dec
mov
shlb
cmpsb
push
std
stc
rcrb
pop
xor
ss
in
arpl
mov
aam
push
mov
int3
and
push
loop
or
ja
lds
js
loopne
mov
es
insl
aaa
aam
inc
cmc
repz
mov
push
jle
jg
fmull
add
andl
arpl
lds
jb
sub
mov
mov
jae
dec
cmp
lds
jge
ret
cmp
in
ret
fwait
js
push
out
mov
test
popa
push
pop
mov
push
mov
sbb
js
std
or
pop
fidivrs
and
std
ja
xor
pop
jmp
sub
sahf
dec
jns
mov
ficoml
adc
mov
xor
or
xchg
mov
cltd
adc
xchg
xchg
rcl
mov
xchg
jmp
pushf
ja
in
mov
push
in
idivb
decb
mov
push
mov
cmpsl
push
jne
mov
jnp
cmpsb
mov
cmp
sbb
addl
clc
add
push
cmp
cmpsl
fidivs
and
andl
es
repz
sbb
cs
int
inc
dec
subb
sbb
jne
jbe
sbb
stc
xchg
clc
lret
gs
aad
test
cmpsl
xor
fwait
jne
pushf
add
out
inc
pop
test
jge
jg
out
call
lock
xor
imul
addr16
outsl
orb
fdivs
fucomp
add
and
adc
xor
imul
mov
lea
mov
cltd
mov
faddl
inc
call
int
xlat
fs
pop
stc
das
shlb
push
push
xchg
push
adc
xchg
or
out
ja
add
mov
stc
pop
pop
gs
xchg
jbe
dec
in
dec
outsb
data16
sub
movsb
insb
jns
fnsave
add
lahf
and
ljmp
pushf
popf
into
testl
subb
clc
pop
idivb
fwait
jecxz
jg
fldt
cmc
stos
push
sti
mov
inc
jmp
push
ljmp
test
pop
push
push
mov
insl
daa
dec
int
push
mov
pop
adc
jne
dec
and
add
popa
xchg
es
pop
mov
jae
aad
cmp
imul
lods
cld
ret
ja
imul
lock
cmp
dec
pop
dec
cs
fisttpl
ja
js
sbb
les
pop
out
push
sbb
repnz
pop
push
cmpl
into
xor
or
jle
bound
mov
test
lahf
inc
std
cltd
test
inc
stos
xchg
icebp
ds
push
push
neg
and
push
fwait
jb
add
insb
jae
imul
idivl
xchg
out
pusha
jmp
lea
cld
lods
addr16
sub
pop
cld
xchg
xchg
adc
inc
repz
inc
mov
push
push
fdivr
jnp
icebp
add
into
repnz
pop
stc
mov
mov
ds
loop
faddl
adc
fistps
or
cmp
aas
sub
push
adc
insl
sti
popa
sub
mov
mov
sbb
dec
stc
adc
outsl
pop
xor
retw
push
xor
test
inc
cmp
pop
xlat
das
inc
test
inc
iret
repz
int
hlt
jno
jecxz
jne
push
push
sar
push
movsb
ja
xchg
dec
sbb
scas
mov
popf
movsl
pop
ret
cmc
mov
out
outsb
dec
sub
inc
popa
mov
xchg
sub
test
adc
sbb
fildl
cmp
in
jecxz
test
push
push
or
cmpsl
shll
test
xor
gs
sbb
lea
jle,pn
pop
scas
test
inc
repz
sub
sub
fmuls
cltd
jno
push
out
fnstcw
cli
fdivrp
fnstenv
and
test
mov
mov
insb
inc
and
jbe
adc
inc
mov
jle
imul
rclb
add
into
or
or
xchg
cmp
imul
arpl
add
xchg
dec
jne
dec
or
pop
dec
sub
das
dec
and
int
adc
adc
jno
sti
xor
aam
shrb
mov
cmpsl
push
dec
adc
inc
sub
jb
fstps
js
jns
int
mov
out
mov
pop
pop
push
mov
mov
or
cmp
ficompl
pop
xchg
mov
mov
or
pusha
add
adc
aaa
mov
shrl
loope
inc
xor
ficompl
pop
cmc
pop
jl
mov
int
cld
repnz
test
sbb
sbb
lcall
subl
mov
xor
pop
lods
bound
mov
push
test
ljmp
xorl
ljmp
rcr
arpl
inc
icebp
mov
shll
cmp
jne
sbb
stc
jne
fiadds
mov
mov
aam
xchg
insl
repz
stos
lods
jns
cwtl
lahf
mov
outsl
sub
sarl
mov
xchg
andl
mov
cwtl
mov
lock
jmp
cmc
xlat
mov
iret
ds
std
push
pop
dec
pusha
xchg
call
popa
adc
and
xchg
cmpsl
mov
inc
ljmp
cmp
sub
pop
jle
or
lahf
addr16
fsub
adc
pop
cmpl
rcrl
mov
setb
mov
xor
adc
std
or
pop
push
out
inc
in
jge
std
push
lods
and
dec
insb
add
xchg
xor
dec
adc
fiadds
and
pop
loope
mov
or
movsb
repz
rorb
sbb
push
pop
in
lret
ja
fstps
or
enter
sbbl
lret
sub
push
xor
les
jge
or
cld
int3
int
inc
sti
cmc
sub
xchg
mov
nop
mov
push
test
test
arpl
fstpt
jno
pop
push
mov
cmp
mov
push
jnp
shrl
sbb
lods
fisttps
loop
pop
ljmp
and
adc
xor
mov
jle
test
add
lahf
sbb
mov
pop
leave
mov
and
js
push
fdivs
aam
pop
jno
call
push
fmul
les
inc
dec
push
ret
and
cmp
mov
pushl
xchg
lods
cmpsl
jg
jl
sub
cmp
lret
jb
xlat
cmp
inc
xchg
mov
adc
xor
fidivrl
cmp
outsb
sbb
sbb
jge
hlt
stos
mov
jmp
sub
dec
mov
lret
cltd
cmp
fisttpll
das
stc
icebp
out
test
sbb
popa
inc
mov
cmc
lcall
xchg
adc
in
push
dec
sbb
adc
nop
xchg
mov
push
sbbl
cmc
data16
fwait
mov
lcall
movsb
call
mov
ja
mov
sbbb
lret
repz
int
lea
daa
rcrb
and
mov
in
push
mov
mov
insb
and
sbb
fiadds
enter
testl
mov
push
repnz
jmp
lea
aas
das
sbb
into
arpl
mov
pusha
les
aaa
xchg
inc
cmp
mov
jmp
ljmp
inc
jnp
dec
jmp
jmp
dec
pop
pop
sub
lret
adc
push
out
movsl
imul
push
push
out
cwtl
mov
stos
add
sbb
shlb
popf
sarb
push
loope
adc
pop
movsb
rcr
jp
pop
mov
lds
pop
icebp
or
adc
mov
add
fucomp
cmp
jo
notb
sbbb
sbb
out
in
or
push
adc
cmc
fidivrs
or
stos
pop
adc
push
out
addr16
ret
dec
mov
sbb
push
pop
sbb
mov
jae
xchg
xlat
cmp
ficoms
xor
data16
outsl
dec
or
cmp
test
add
add
test
push
jmp
xchg
jge
ljmp
mov
out
push
mov
inc
scas
int
pusha
sbb
dec
jle
mov
mov
fdivs
outsl
inc
imul
and
arpl
lock
call
or
out
adc
xorl
fbstp
mov
insl
mov
out
pop
mov
sbb
xlat
sub
movsb
mov
int
stos
xchg
push
jo
add
and
sub
lods
and
mov
fnsave
adc
test
xchg
addr16
scas
in
ret
or
add
arpl
mov
bound
push
es
pop
in
sub
daa
imul
sbb
pop
jle
push
xor
fisubs
pop
cmpsb
call
movsl
or
in
inc
mov
pop
lahf
inc
inc
xor
out
adc
jno
cmp
xchg
outsl
repnz
les
out
push
mul
jnp
lods
mov
pop
inc
fldl
inc
adc
cmp
cmp
int3
mov
pop
sub
mov
hlt
and
mov
adc
and
bnd
test
sub
xchg
and
mov
std
imul
jge
iret
leave
sbb
ret
pop
out
pusha
out
test
out
inc
loopne
movsb
or
xor
push
stos
cli
leave
cwtl
into
pop
mov
or
scas
jne
popa
sahf
cmp
adc
xor
iret
or
movsb
in
daa
inc
and
sbb
jns
push
scas
jle
or
stos
in
sub
and
jnp
fldt
mov
or
test
scas
mov
test
loop
jg
sub
ror
jnp
punpcklbw
jp
in
jb
das
pop
adc
adc
frstor
inc
in
popa
mov
jno
mov
cld
sub
mov
sahf
pusha
sub
mov
jo
push
aam
cmp
dec
cli
scas
shlb
mov
or
mov
jns
xchg
out
mov
repnz
jbe
pop
scas
jmp
das
call
into
fmuls
call
mov
and
cwtl
mov
dec
cmpl
jbe
cld
subl
shlb
sbb
mov
jno
in
aas
fwait
add
jb
jl
sbb
pop
xchg
movsl
pop
lahf
xor
push
jmp
popa
xlat
nop
stos
mov
adc
cmp
in
add
jecxz
les
pop
leave
sub
hlt
loop
out
jecxz
addb
ds
and
and
sbb
cmp
rcr
inc
inc
scas
aaa
gs
test
je
mov
inc
cmp
jbe
and
dec
add
xchg
fs
ficoml
pop
dec
xorb
pop
sub
push
loopne
fyl2x
xlat
mov
pushf
cmp
out
mov
int3
jo
jmp
lcall
pop
pop
lahf
addr16
insb
out
or
dec
sub
mov
mov
mov
mov
pop
sbb
movl
push
pop
shlb
sbb
lods
mov
repz
pop
fiaddl
testl
out
cmp
movsb
xchg
fnsetpm(287
imul
std
out
aad
aaa
mov
fs
push
mov
iret
cwtl
add
movsb
push
mov
add
or
shrl
adc
repz
mov
mov
pop
je
call
xor
lods
shll
mov
fdivp
lods
pop
sbb
out
push
xchg
jl
gs
stc
sub
repnz
mov
jne
mov
pop
enter
mov
jns
mov
hlt
mov
xor
jmp
cwtl
mov
clc
pop
leave
xor
shr
xchg
pop
xor
scas
dec
roll
insl
sub
hlt
stos
fwait
dec
add
mov
mov
mov
leave
jae
add
fsts
mov
pop
xlat
cld
ret
test
push
lods
mov
adc
inc
cmpsb
lods
cmp
popf
sbb
popa
pop
daa
or
xchg
inc
xchg
test
pop
ficoms
or
cwtl
fsubrl
fbld
jecxz
andb
mov
pop
sub
dec
xor
mov
popf
int
jmp
jp
cmpsb
test
and
out
incl
je
sbb
insl
ficoml
or
pop
push
add
fbld
shl
xor
rcr
mov
fcompl
mov
mov
mov
cmp
negb
xchg
inc
jmp
sub
inc
jb
inc
xchg
loopne
jecxz
leave
loopne
mov
lret
or
push
test
test
pop
pop
mov
push
shld
mov
mov
insl
mov
mov
enter
dec
subb
movsl
sbb
cmp
push
push
fs
xchg
or
lock
mov
xchg
popf
and
dec
mov
and
aad
aad
outsb
aad
cli
inc
outsl
fiadds
lock
lock
dec
cmc
push
pop
sbb
repnz
lods
and
pusha
pop
ficompl
lret
lret
subl
rclb
dec
ja
inc
sbb
pop
jge
lods
mov
rorb
cmc
mov
out
xchg
xor
jo
and
lods
call
fidivrs
jns
xchg
out
sbb
jb
addl
dec
sbb
jle
pop
mov
jno
jo
test
mov
lcall
pop
push
adc
and
mov
mov
loopne
outsl
cmc
dec
mov
or
jp
aaa
fidivrl
jl
mov
pop
lock
pushf
cmp
in
cmpsl
xchg
addb
push
pop
test
in
movsl
fsubs
sbb
push
fisubrl
inc
sarl
fldenv
xor
xor
inc
in
push
dec
mov
cltd
movsl
and
cmovb
mov
out
stc
ret
add
outsb
movl
dec
push
divb
mov
inc
vpsubw
push
pop
dec
xorl
pop
xor
stos
lods
jecxz
or
out
mov
mov
mov
repnz
test
xor
clc
test
adc
mov
ret
mov
push
jb
mov
sbb
orb
js
sub
insl
icebp
mov
cwtl
mov
data16
or
adc
repnz
pop
sub
jbe
aam
lcall
dec
mov
ret
into
add
je
les
xor
or
ret
mov
or
hlt
cmc
fistpll
sub
mov
inc
jno
mov
sbb
and
xchg
push
mulb
pop
dec
inc
xchg
pusha
mov
adc
push
jmp
out
cmc
shll
ljmp
mov
mov
shll
xchg
xor
leave
xchg
out
adc
fmul
in
movsl
imul
lea
insb
cwtl
adc
push
xchg
bswap
into
jno
cmp
lds
add
lret
add
mov
std
xchg
pop
cmpb
sbb
aas
fnstsw
pop
test
inc
xor
int
icebp
rolb
popa
outsl
daa
mov
imul
or
push
insl
je
jo
mov
sbb
cld
inc
mov
test
inc
inc
ss
subl
push
pop
push
jmp
into
xchg
aaa
inc
adc
shrl
loope
sub
shll
dec
xchg
mov
sub
mov
push
les
movsb
mov
jge
sbb
test
jmp
mov
lcall
add
lahf
call
addr16
push
into
cmp
sbb
mov
push
push
push
aad
xor
jo
in
sub
sbb
add
es
push
inc
pop
jl
mov
mov
sub
adc
inc
jae
cmp
sahf
mov
cmpl
movsl
or
int
divl
roll
adc
or
popa
jns
lret
call
mov
lds
std
int3
sub
mov
xchg
mov
loopnew
xlat
ret
jae
lock
lahf
test
ds
sbb
rorl
cli
inc
jae
xorl
fdiv
test
outsl
cld
inc
notl
int
jno,pn
movsl
test
push
push
popa
inc
sub
push
jae
adc
mov
xorb
xor
std
mull
dec
pop
negl
rol
hlt
adcb
cmp
fincstp
pop
test
je
xor
fisubrl
fs
stos
lret
cltd
ds
shrl
cmpsb
in
push
popl
ja
cmp
lock
or
into
inc
mov
dec
sbb
lods
xor
cmpsl
push
or
mov
adc
je
cmpsb
cwtl
test
push
mov
fs
dec
ffreep
mov
ds
clc
dec
sbb
and
loope
xchg
adc
data16
aam
add
dec
pop
dec
and
adcb
sub
pop
dec
jge
pop
mov
je
mov
imul
rcrl
push
push
out
loop
pop
add
mov
into
push
int3
add
cmp
cmp
out
or
sti
stos
ds
inc
xor
inc
repz
bound
mov
push
mov
leave
cmpb
xchg
scas
sub
imul
lret
in
or
add
lea
shlb
add
shl
test
pop
pop
adc
mov
push
jae
inc
incb
test
mov
xchg
adc
jl
aaa
cmp
dec
jmp
sahf
rcrb
pop
idivb
cmp
lea
adc
mov
cmp
inc
add
mov
in
mov
sbb
dec
xchg
lds
cmp
divl
or
aad
aas
xchg
cmp
fcmovbe
adc
cs
lods
cmpsb
scas
lods
pop
lret
rolb
adc
sbb
add
pop
inc
sbb
cmp
test
inc
mov
mov
mov
in
pop
cmp
scas
cmpsl
or
or
and
dec
int
pop
mov
insl
add
mov
or
and
ds
out
sahf
sub
or
cmp
pushf
and
out
mov
int3
add
xor
shr
xchg
repnz
insb
cmc
icebp
fnstenv
out
cld
loope
jp
mov
sarl
push
fbstp
and
or
mov
adc
push
and
adc
add
or
sbb
dec
push
dec
jg
add
jg
jne
and
pop
dec
pop
aas
jnp
repnz
xchg
ret
and
into
dec
sub
sub
mov
xor
or
das
dec
arpl
outsb
sbb
fucomp
push
cmp
loope
lahf
pusha
leave
and
pusha
sub
xchg
in
lret
fisubrs
sbb
sbb
pop
es
cld
in
movsl
cs
mov
inc
stos
add
sbb
inc
cmpsl
pop
mov
inc
mov
ss
mov
loope
idiv
sbb
dec
xchg
inc
cmp
fists
jnp
inc
cmp
inc
divl
dec
popa
out
ret
inc
sub
cmpsl
icebp
rol
pop
lret
mov
or
pop
movl
test
dec
cwtl
clc
mov
les
ljmp
cmpsl
or
mov
data16
lods
mov
and
jae
and
jae
mov
xchg
fs
ja
and
inc
test
aad
pop
xlat
test
pop
incl
rorl
loope
shrl
adc
out
imul
insb
aas
sbb
mov
enter
fcmovb
adc
lock
cmp
mov
jno
pop
int3
in
stos
in
sbb
fcomps
cli
sbbb
cmpsb
clc
pop
or
es
cltd
and
loop
es
pop
mov
mov
movsb
ss
sbb
xchg
xor
mov
lret
xchg
push
sub
push
lahf
mov
outsb
inc
or
or
sub
ds
cld
and
popa
std
jecxz
xor
mov
jge
xchg
movsl
push
mov
lock
shrl
fs
sbb
and
mov
aad
sbb
push
test
push
mov
jge
mov
lret
or
jge
enter
xor
inc
in
jae
movsl
sub
loop
dec
jge
pop
ret
mov
xchg
nop
imul
call
pop
xchg
bndldx
push
outsl
sbb
pusha
mov
xchg
ja
fsubrs
dec
mov
js
adc
dec
and
incb
sbb
lcall
ljmp
xchg
mov
mov
jns
std
adc
cmp
into
lods
filds
rolb
cmpsb
outsb
pop
out
push
push
mov
xor
mov
out
mov
xchg
daa
in
fcoml
pusha
mov
mov
push
mov
or
mov
fwait
iret
loope
rcll
jae
stc
rcl
mov
pop
in
inc
fildl
std
sbb
pop
aam
mov
add
mov
cld
inc
push
jb
mov
add
loope
out
imul
pusha
incb
iret
imul
test
push
adc
jbe
xchg
mov
xor
test
add
push
jbe
insl
mov
in
into
sti
fsubrs
jns
int
je
dec
xchg
test
les
pop
add
rol
push
cwtl
mov
and
popa
push
sbb
jg
popf
or
stos
adc
push
cmc
pop
aad
push
and
inc
outsb
jae
mov
jle
pusha
in
shll
jg
sub
adc
shll
jns
jo
or
addb
shl
xchg
gs
mov
adc
push
pop
aam
jns
ds
nop
les
scas
cmp
in
lods
mov
xor
cmpl
out
jp
mov
xchg
mov
jbe
sub
push
lahf
push
sbb
cmp
sbb
cli
nop
pop
aaa
xor
xor
inc
rcrl
dec
lea
mov
inc
rclb
arpl
ret
dec
call
jne
enter
test
lods
mov
fildl
or
mov
mov
nop
cmp
mov
js
xor
ret
sbb
dec
xor
mov
test
fidivrs
int
loope
jg
fidivrl
out
jle
cmp
or
cmpsl
inc
insb
pop
movsl
out
rcrb
dec
xchg
jb
push
cmp
mov
push
out
sub
cwtl
inc
fucom
sbb
inc
pop
mov
xchg
mov
imul
pop
enter
push
push
imul
popf
fdivrs
push
mov
sbb
mov
and
jo
ror
xor
sbb
loop
lods
inc
adc
ljmp
cwtl
insl
imul
movb
fs
das
in
jecxz
movsl
into
clc
daa
fisubrl
fs
dec
fld
cmpsl
and
test
pop
fistpl
push
je
xlat
imul
cltd
call
shlb
fadds
xchg
dec
notl
push
test
push
lea
hlt
leave
ljmp
sbb
sbb
sahf
imul
dec
in
pop
paddsw
mov
ficoml
dec
xor
or
fstpt
dec
sub
lods
and
insb
mov
insb
test
push
or
xchg
pop
cld
das
fnsave
jl
inc
cld
and
enter
adcb
sti
mov
pop
push
lret
mov
test
out
jle
push
xlat
scas
fsubrl
fs
lahf
xchg
jb
cltd
push
inc
jbe
mov
mov
or
sbb
popf
ljmp
dec
lds
lds
xchg
adc
or
popa
icebp
jge
xchg
mov
jg
fwait
iret
ljmp
fsubrs
and
xor
mov
int
cmp
or
sarb
inc
pop
stc
stc
js
mov
out
xchg
movsl
mov
clc
jae
insl
imul
in
sbb
test
xor
or
xchg
lock
sub
call
in
roll
inc
jp
fstl
jns
pop
aam
push
repnz
sub
push
push
mov
addr16
icebp
loopne
or
push
mov
push
pushf
jo
cld
pop
enter
fstpt
xchg
mov
jno
add
or
stos
pop
ds
fcmovne
add
mov
mov
xor
mov
or
pop
roll
cwtl
aad
enter
int
loop
cmc
shlb
dec
inc
jb
les
jle
dec
or
sbbl
pop
sbb
insl
es
test
mov
repnz
mov
xor
mov
pop
dec
pusha
or
in
mov
dec
fcmovnu
jl
pushl
ret
lcall
test
test
lcall
push
stos
mov
sub
add
test
jne
int3
ds
or
cli
movl
jl
mull
data16
push
inc
jmp
cmp
movsl
flds
or
stos
or
fldcw
pop
std
movsl
dec
sbb
push
or
dec
inc
cmp
mov
in
lret
imul
mov
stos
xchg
push
aad
jns
test
aaa
out
cmpsb
mov
scas
fnstenv
mov
cmpsb
out
movsl
push
es
or
imul
sub
push
das
sbb
jns
shll
shl
push
jmp
xchg
lret
adc
adc
mov
icebp
movsb
roll
rol
pop
and
ss
fsub
in
rcl
pop
popf
pop
fucom
pop
sub
xchg
mov
sbb
mov
repnz
and
cmpsb
popa
jp
in
jp
mov
insl
out
pop
aas
out
sbb
gs
cmp
pop
pcmpgtw
subl
lods
pushf
jl
daa
lods
and
mov
out
sub
fisubrl
xor
and
push
lods
mov
out
idivl
andb
and
stos
data16
and
sqrtps
inc
in
fdivl
push
lock
push
mov
in
jge
inc
jae
lret
fld
adc
xor
jp
mov
and
mov
test
outsl
sahf
sbb
pop
fwait
stos
inc
rorb
dec
dec
mov
jle
test
rolb
fisubrs
arpl
and
sub
in
and
roll
les
ficompl
sbb
out
fwait
je
inc
adc
shrl
mov
xchg
mov
xor
mov
sub
pop
mov
xchg
cmp
jno
inc
mov
and
xlat
add
adc
or
lea
outsl
mul
jecxz
mov
loope
sub
in
fldl
out
jns
mov
jae
lods
cmp
mov
jl
push
jns
popl
mov
decb
je
mov
popf
decb
cmp
test
fstpt
aad
jae,pn
imulb
lods
push
inc
or
les
dec
test
cs
pop
push
jle
mov
mov
outsb
in
sbb
ja
test
fmulp
dec
stos
fiadds
mulb
inc
ficompl
lret
outsl
sbb
and
sub
inc
push
pop
outsl
sub
scas
loop
add
dec
mov
dec
xchg
jl
xchg
mov
enter
std
pop
push
imul
int3
xor
add
ret
push
xchg
cmp
pop
push
mov
sbb
mov
adc
sbb
dec
es
mov
sbb
nop
adc
fldenv
or
jecxz
inc
sub
push
js
mov
mov
cmp
or
xchg
lret
push
dec
les
pop
dec
pop
add
outsl
jge,pn
cmpsl
lcall
jp
repz
pop
test
icebp
jg
cmpsb
jae
lret
mov
daa
pop
sbb
and
dec
test
cwtl
ja
movsb
push
push
loopne
fisttpll
jb
das
or
adc
sbb
and
xor
cltd
lea
and
in
out
rol
sbb
add
jmp
stos
jecxz,pn
ficoms
pushf
scas
add
sub
ret
cmp
icebp
aaa
sbb
sbb
jle
jp
adc
cmp
xchg
add
out
leave
jl
imul
push
or
sub
inc
xchg
xchg
int
jmp
cmp
out
cli
loop
lods
mov
rcrl
popa
pop
mov
push
ds
cmp
pushf
out
cmp
push
jb
loope
int
dec
jb
arpl
push
adc
and
push
or
lret
mov
xchg
enter
push
out
add
cli
scas
mov
mov
jmp
or
cmp
mov
in
leave
rcrl
push
sub
es
adc
aad
popa
test
movsb
jg
in
out
dec
adcb
lcall
jmp
mov
push
rorl
sub
jae
jns
repnz
jg
mov
nop
aad
addl
insl
jle
push
lahf
sahf
xchg
cwtl
mov
pop
pop
fsubr
outsb
xor
repnz
sbb
xor
inc
jb
int3
icebp
jp
jne
subb
inc
insb
shrl
pop
outsb
adc
jb
icebp
shll
and
cmp
sti
inc
lods
sub
or
out
cltd
sbb
cmpsb
dec
stc
aas
xor
dec
out
aad
arpl
cwtl
add
popf
bound
sub
add
sti
fcomi
adc
pop
push
xor
mov
ret
dec
push
sbb
inc
inc
pop
sub
mov
aaa
lods
jl
mov
imul
add
push
xchg
pusha
pop
lods
inc
hlt
ljmp
inc
sbb
insl
pop
jo
stos
inc
xor
aaa
mov
lea
fld
divl
pop
or
rcrb
in
jne
cli
dec
bound
mov
pop
lock
ss
inc
mov
testb
push
dec
test
lret
mov
or
push
movb
outsl
jp
call
add
rcrl
xchg
fidivrl
add
hlt
mov
out
dec
sbb
xchg
stos
mov
iret
mov
or
lds
fcompl
mov
cmp
jmp
scas
sbb
rorb
movsl
inc
mov
jno
aam
pop
rorl
ja
ret
or
test
outsl
repz
xchg
in
inc
pushf
inc
jg
es
jp
jae
stc
jp
repz
jae
int3
icebp
add
sbb
dec
mov
ljmp
xchg
fisubl
add
mov
scas
decb
out
js
ret
cmpsl
ljmp
mov
sarb
sbb
lds
xor
or
popa
add
jge
enter
stos
adc
fisttpll
and
test
and
ds
pusha
cld
cmp
je
push
cmpsl
cmpsl
jecxz
das
rorb
pop
push
xlat
bsr
dec
mov
fdiv
and
add
nop
push
add
insb
jecxz
adc
pop
sub
jne
lods
fistl
push
mov
sbb
cwtl
mov
psrld
scas
stos
and
es
in
fcoms
inc
aaa
lods
and
stc
push
mov
xor
dec
mov
fnsave
lods
lret
sbb
bound
xor
jo
pop
mov
or
xor
xor
dec
stos
cs
xor
xor
ds
and
ljmp
pop
sbb
aam
mov
cmp
shl
adc
testl
lahf
jae
cmp
loope
cmp
ljmp
sbbb
idivl
test
shll
fwait
sbb
bound
call
xlat
test
cmp
xchg
dec
pop
mov
popa
dec
in
jbe
arpl
and
jmp
mov
cmpsb
fists
test
int3
out
frndint
inc
jb
addr16
mov
sbb
aad
inc
fstpl
fldl
out
lods
imul
pushf
mov
jmp
push
cld
push
add
rcrb
ret
mov
pop
mov
loopne
adc
xchg
mov
imul
bnd
push
sbb
int
adc
or
insl
pop
movsl
sbb
leave
jecxz
enter
adc
cmp
outsl
jg
aam
sbb
lods
add
mov
cltd
adc
sahf
out
stos
in
test
cs
dec
mov
cmpsl
jo
lea
xor
jb
cltd
lods
adc
inc
pop
repz
dec
pop
in
inc
cmp
jo
inc
inc
jle
fcoml
rorl
add
in
pop
das
cwtl
xchg
mov
mov
call
stos
scas
fisttps
sub
clc
cltd
arpl
imul
jp
lods
adc
out
push
lahf
mov
shl
inc
xchg
xor
sub
push
xor
jae
shll
hlt
pop
jle
inc
mov
punpckhdq
xorl
sub
out
or
filds
cltd
clc
xor
add
sarb
cmp
mov
aad
inc
pop
pop
push
cmp
pop
pop
paddusw
cmp
jae
xor
mov
inc
fcomp
incl
add
in
add
mov
idivb
cmp
mov
scas
mov
hlt
lret
clc
push
imul
lea
add
sti
in
sbb
jno
call
cld
sub
sub
adc
lea
sbb
scas
scas
imul
mov
and
push
cmp
dec
dec
sub
jae
aad
lret
xlat
lret
es
jmp
jl
dec
int3
sti
push
jp
sbbb
push
pushf
push
mov
dec
mov
add
jle
mov
sbb
fsubr
popf
jcxz
adc
mov
sub
jnp
inc
test
adc
and
xchg
ljmp
cmp
or
out
xor
jbe
pop
movsl
mov
lock
cmp
push
sbb
mov
out
fbstp
or
testb
cltd
pop
pop
popa
sbb
mov
test
xor
mov
inc
fs
idivb
stos
sub
xor
clc
in
pop
test
mov
mov
ficoml
mov
les
mov
loop
jp
loopne
jno
les
lahf
stos
repnz
iret
fsubs
and
push
mov
pop
out
insl
mov
ror
jge
js
shrb
cli
ret
mov
aam
sub
mov
inc
adcb
push
dec
call
add
push
mov
jae
and
cltd
mov
and
xchg
movsl
sub
fs
cs
movsb
nop
out
jge
dec
adc
ja
out
cwtl
loopne
outsb
dec
movsl
inc
int
pop
ss
pop
subb
adcb
cs
in
inc
xchg
fildll
shl
inc
jecxz
mov
sti
cmp
adcl
push
dec
xlat
adc
mov
cmp
dec
shlb
in
lahf
mov
jl,pt
add
or
jg
fidivrs
inc
mov
imul
loopne
cltd
loopne
dec
xchg
dec
mov
loope
jno
mov
fisttps
add
popa
cmp
aam
data16
jp,pt
shr
mov
push
mov
jae
in
cli
pop
pop
into
jge
xor
outsl
popf
xchg
shlb
jle
mov
or
adc
xchg
and
sub
xor
aas
enter
adc
fwait
shrl
ljmp
std
push
divb
xchg
in
jbe,pn
sbb
cmpsl
imul
insl
iret
jbe
pop
ficoml
mov
lea
aas
mov
push
stos
mov
js
sbb
not
pop
ret
add
push
aam
or
or
xchg
mov
jmp
push
push
in
cltd
add
inc
lods
js
pop
jmp
jne
les
push
ss
sbb
pop
sbb
sub
cmc
dec
cmc
xor
xchg
shrl
scas
fwait
mov
sbb
adc
sti
into
push
or
push
or
inc
popa
xchg
sub
mov
dec
cmc
ror
jno
adc
addr16
testl
adc
or
push
pushf
rorl
xchg
int
cmp
nop
inc
pop
es
sub
xchg
ret
fistpll
jo
jb
nop
call
out
sahf
ljmp
push
mov
jnp
cmp
fldt
cmpsl
cmp
adc
cmc
daa
pushf
mov
aas
inc
jbe
push
mov
es
inc
sub
dec
dec
repz
mov
pushf
fs
mov
dec
rcll
shl
mov
dec
outsl
push
pop
inc
lods
mov
imul
sbb
ret
ja
mov
xor
divb
pusha
add
mov
mov
push
dec
jle
pushf
scas
bound
adc
and
mov
adc
pop
and
dec
push
mov
xchg
ds
dec
pop
mov
jp
stos
popf
jg
or
pop
dec
dec
jp
addr16
sarl
cmp
or
divl
testl
les
int3
add
fiaddl
mov
cld
push
xchg
mov
xchg
push
fcomps
lret
arpl
xor
jno
push
xor
xchg
lods
lret
ret
int3
jle
int3
mov
dec
jnp
std
cltd
js
and
jp
rorb
lods
mov
and
das
enter
sbb
in
mov
cmp
fs
push
insl
ss
lret
movsl
addr16
adc
repz
aam
mov
pop
pusha
test
int
dec
inc
es
pop
aad
mov
dec
sub
inc
imul
iret
pop
sarl
and
les
test
cld
and
mov
lds
inc
lea
mul
jg
hlt
int3
les
out
imul
icebp
adc
sbb
cltd
dec
jb
cmp
xchg
sub
push
cmp
and
cmpsl
rorl
out
and
ss
aaa
pushf
sub
inc
mov
lds
inc
out
inc
adc
push
or
jae
xchg
pop
sti
xor
xchg
loopne
daa
es
scas
ret
xorl
mov
popa
and
sbb
fsubp
xor
push
fdivl
bound
cld
nop
pop
divb
push
pop
data16
or
cwtl
mov
jg
imul
ja
pop
testl
stos
mov
out
ljmp
mov
jge
fists
push
rorl
outsl
inc
es
pop
out
mov
cmc
cld
or
jmp
mov
cltd
rorl
inc
pop
lret
rorl
fisubl
js
mov
bound
mov
sbb
dec
and
dec
sub
sbb
jle
pop
sbb
fmuls
movsb
jl
or
adc
in
pop
mov
pop
adc
arpl
arpl
sub
std
ja
call
dec
push
push
pop
and
divb
into
dec
mov
sbb
loope
call
and
inc
sbb
xchg
inc
cwtl
shrl
mov
icebp
insl
jge
inc
lea
mov
cs
push
sub
loopne
inc
jle
insl
data16
jo
call
in
cmp
cmpsl
leave
loop
mov
lea
inc
addr16
fldt
cmpsl
je
adc
add
ret
nop
inc
pop
jmp
cmpsl
xchg
xchg
inc
std
sub
sbb
orl
cmp
arpl
stos
or
mov
mov
movsb
xor
sub
pop
fsubl
cmp
lock
movsb
or
xchg
arpl
and
cmp
and
paddsb
mov
mov
mov
daa
scas
aad
scas
aas
into
xchg
jecxz
cltd
cwtl
stc
add
pushf
or
dec
loop
xchg
in
ds
cmpsb
icebp
rclb
jl
subl
js
dec
lods
sub
ret
das
mov
inc
mov
loop
fldt
fisttpl
pop
int3
dec
add
cwtl
fmuls
icebp
or
jge
popf
stc
sti
adc
out
pop
jae
xor
sti
sbb
mov
scas
mov
adcl
mov
test
das
mov
push
xchg
mov
shlb
aad
jno
in
outsb
push
mov
push
data16
dec
and
bound
pop
data16
ljmp
rolb
add
pusha
cs
aam
cmp
inc
pop
scas
out
pop
int
repz
subl
imul
xlat
mov
popa
dec
mov
inc
repz
loope
sbb
cltd
sub
loop
inc
out
pop
or
rorb
mov
or
pop
jne
jle
mov
jb
mov
fidivs
xchg
xor
lock
jle
loop
pop
mov
xchg
subl
rorl
cmpsl
dec
push
shlb
mov
mov
jno
lret
scas
xchg
mov
stos
jmp
pusha
inc
add
sub
inc
mov
xor
jecxz
sbb
stos
cmp
xor
aaa
mov
adc
and
pop
rcll
inc
loope
loop
xchg
shl
dec
mov
dec
inc
out
fxtract
jb
fiaddl
test
pop
pop
push
cmc
loope
popf
jno
xlat
arpl
mov
jo
rcrl
sbb
shr
or
push
rclb
lcall
fistps
outsb
pop
and
bound
add
dec
punpcklbw
dec
stos
push
mov
or
cli
or
ljmp
jae
fwait
clc
jae
inc
scas
adc
add
dec
stos
add
cs
mov
rclb
ss
outsb
fbstp
jmp
add
fwait
dec
inc
cmpl
sub
or
insl
mull
mov
add
ljmp
fistpll
and
mov
enter
out
call
mov
inc
aas
in
or
fstps
mov
scas
cmp
pop
ja
push
imul
or
or
xchg
xor
es
xor
fs
add
push
add
hlt
mulb
sub
or
cld
inc
lods
mov
icebp
mov
in
dec
jno
xchg
xchg
mov
aaa
out
data16
sbb
jno
adc
sub
jnp
xchg
mov
jmp
pop
das
stc
push
out
add
aas
mov
push
jecxz
push
push
aaa
imul
call
pop
push
loopne
jno
adc
fmull
out
xlat
jle
dec
cld
sbb
sbb
aaa
int
roll
push
jne
loop
inc
inc
push
adc
cmp
add
push
dec
loop
lcall
xor
mov
addr16
and
rcrl
sarb
daa
das
xor
jl,pn
enter
mov
popa
sub
jg
add
ds
sub
out
pop
rcrl
into
scas
mov
lds
mov
aad
sub
aam
pop
ja
add
mov
mov
mov
outsb
out
adc
int3
imul
jl
xchg
jle
adc
jmp
pop
pop
leave
cmp
movl
inc
mov
fisttpl
mov
jmp
xchg
pop
or
xchg
cmpsl
les
jo
into
jmp
pop
mov
test
xor
dec
adc
and
add
mov
cli
inc
or
inc
pop
mov
into
dec
fstpl
sahf
sbbb
inc
outsb
jnp
mov
sarl
sub
popa
out
stc
xor
add
stos
lea
out
dec
mov
cmpsl
fldt
dec
jnp
inc
push
jl
adc
and
jp
fcmovnb
push
sub
add
xlat
aas
mov
sti
add
push
data16
dec
jnp
sub
cwtl
loop
mov
mov
cmp
pop
aaa
jnp
push
adc
xchg
fnsave
jge
xor
lret
out
xor
mov
mov
sahf
adc
out
rcll
loop
enter
test
jnp
int3
je
jb
repnz
loop
adc
iret
jmp
fisttps
dec
fwait
in
mov
lahf
cmp
incb
or
pop
adc
call
mov
out
pop
repz
xchg
inc
lret
dec
pop
test
cmp
sbb
sbb
clc
xor
leave
mov
inc
repz
and
icebp
pop
out
and
inc
mov
loop
xor
mov
aad
ret
pop
xchg
pop
mov
notb
test
pop
jg
iret
in
mov
pop
pop
push
arpl
mov
pop
clc
mov
or
xor
frstor
adc
xor
shll
jl
add
sub
inc
inc
dec
lods
pusha
dec
adc
or
mov
push
test
push
cmp
shrl
or
test
fisttpll
test
mov
adcl
cwtl
daa
dec
adc
xchg
testl
mov
sahf
xlat
inc
sub
mov
mov
movsl
inc
mov
pop
mov
dec
sub
idivb
imul
lret
pop
in
iret
scas
jns
inc
sbb
test
dec
repnz
icebp
nop
or
lret
xor
jl
jnp
movsb
mov
outsb
insb
jnp
and
or
sub
jno
rcrb
add
mov
mov
cmp
cmpsl
add
inc
mov
call
mov
arpl
xor
pop
repnz
dec
addr16
outsl
dec
test
xchg
clc
bound
pop
adc
jnp
mov
cld
push
pop
icebp
testl
pop
and
je
rcr
inc
stos
mov
adc
sub
mov
xor
mov
or
and
sbb
add
cmp
jns
jle
aaa
lods
mov
lret
lods
movb
push
sub
adc
xchg
cmp
sub
test
fdivs
fwait
xorb
and
cmp
loop
fadds
sub
pop
nop
ss
scas
movsl
and
js
enter
jo
cmp
or
xlat
pop
sti
enter
gs
mov
loope
bound
rcrl
das
xlat
and
inc
pop
out
cmp
lods
and
sbb
stos
std
xchg
xlat
outsl
adc
imul
cmp
dec
pop
shlb
adc
adc
xchg
ljmp
ljmp
ss
push
cmpsl
push
mov
out
loop
add
shrl
pop
dec
dec
mov
xchg
jp
mov
xor
add
mov
icebp
loopne
cwtl
push
or
and
add
lods
jae
movsl
cltd
cli
loope
or
jb
xor
bnd
fmuls
orb
inc
or
mov
aas
jmp
test
insl
imul
and
fcmove
lret
mov
andb
imul
es
movsb
sub
jle
in
aas
jns
sarl
mov
mov
or
jp
in
sub
cmp
add
mov
mov
fs
and
xchg
add
add
lcall
inc
or
mov
add
fisubs
aaa
nop
fildl
mov
sub
mov
loopne
jmp
inc
mov
dec
hlt
ret
imul
pop
test
mov
rcr
int
inc
fidivrl
dec
lods
push
push
scas
lds
std
testb
test
adc
out
shrl
stc
mov
aam
mov
pop
rcll
xor
jl
pop
mov
cs
loop
js
fisttps
rcll
xchg
and
or
cmp
adc
cs
push
jecxz
aad
iret
cmp
fcomp
sbb
mov
push
stc
push
movsl
popf
lds
xor
call
mov
mov
cmc
fsubrl
mov
adc
arpl
mov
filds
fisubs
shll
into
sub
cmpb
pushf
mov
daa
sarb
in
push
iret
mov
scas
dec
sbb
dec
iret
int
pop
rclb
jo
jmp
loope
mov
push
fildll
sbb
cmpsl
xchg
cltd
movsb
pop
lret
or
repz
or
iret
xchg
pop
xchg
cmpsb
jle
lcall
loop
mov
lods
mov
mov
fwait
cs
lds
pop
jnp
cmp
xor
inc
mov
in
push
xchg
jle,pn
push
push
sbb
clc
cmp
push
mov
cmc
shll
push
cmp
fcoms
bound
bnd
adc
adc
push
xchg
test
jae
pop
sub
pop
sbb
push
out
aam
jae
pop
sbb
xchg
cltd
cmc
jno
movb
imul
cmp
lahf
pop
addl
jmp
mov
das
jmp
aam
ret
fisttpll
aad
lods
jmp
loope
mov
fcmovnbe
ljmp
popf
loop
daa
nop
ds
addr16
mov
repnz
lods
xor
dec
pop
mov
pop
movsl
cmc
adcl
pop
insl
cmpsb
orb
jp
or
ss
popf
jae
mov
fsubrl
fidivl
jle
aas
out
dec
fs
aam
xor
movsl
jge
lahf
cmp
ret
movsb
arpl
xor
add
ljmp
sub
stc
xor
jmp
mov
fisubrs
pop
leave
push
gs
ja
push
inc
mov
movsb
shll
fcoms
adcl
out
mov
dec
or
sub
ret
mov
movsl
test
clc
js
jne
jne
subl
fnstcw
jg
sub
inc
std
pop
sbb
das
test
sub
and
inc
jmp
adc
jmp
iret
lock
loop
jae
mov
cmp
and
xlat
add
movsl
lret
aaa
push
bound
inc
jmp
cltd
mov
sub
sub
mov
dec
jmp
fsubrp
xor
sbb
stos
enter
sbb
int3
lret
sbb
les
in
addb
and
fdivrl
mov
sbb
enter
add
jle
dec
push
push
mov
jbe
shlb
out
mov
xchg
test
jp
lret
loopne
lcall
push
dec
imul
test
sub
sbb
out
xchg
xchg
add
and
mov
stc
xor
or
xor
cs
inc
lds
push
insb
jne
jl
add
leave
dec
das
cltd
push
rolb
repnz
fwait
mov
popf
dec
fucomi
jns
imul
nop
mov
pop
gs
mov
jns
shll
mov
mov
rcl
inc
in
mov
sahf
jecxz
push
sahf
xlat
add
xchg
cli
shrl
mov
loop
idivb
imul
adc
fsts
arpl
fcmovnb
xchg
xchg
jecxz
dec
xor
incl
dec
jno
add
xchg
enter
mov
cmp
push
cwtl
leave
and
pop
add
ret
ret
mov
inc
xor
jmp
cmp
testb
xor
mov
push
test
pop
jg
add
xchg
mov
repz
dec
mov
add
cmpb
and
dec
lret
lcall
adc
add
ja
xor
stos
add
shll
xor
cmp
and
push
cmp
movsb
out
sbb
adc
rcrl
dec
sbb
or
lods
xor
jl
push
lea
rcrl
jge
adc
test
push
adc
cmp
jae
cmp
lock
mov
hlt
xlat
cmpsl
mov
in
mov
cmp
cmpsb
fistl
popf
push
push
test
pop
lcall
into
or
jp
xchg
inc
int3
loop
lea
lods
mov
call
xchg
daa
cmp
imul
jecxz
les
ss
rcll
add
movsb
cmpsl
jg
daa
sar
sysenter
lock
and
adc
cmp
and
jmp
call
fcoms
inc
xor
pop
dec
test
addr16
shl
imul
cmp
leave
add
mov
push
mov
pop
fs
sbb
inc
pop
mov
pop
dec
cmp
testb
imul
sahf
inc
inc
push
rcrl
mov
or
inc
sub
sbb
jge
mov
aad
lea
nop
cmp
cmp
add
aas
ret
dec
or
push
jnp
test
in
xchg
add
leave
daa
xor
int3
cmp
pop
std
pop
out
xor
in
add
outsl
mov
andl
xchg
outsb
je
into
xor
mov
inc
jb
arpl
inc
xor
push
adc
adc
push
out
mov
lea
arpl
cmp
xor
out
rcrl
subl
aas
pushf
jp
imul
add
and
lahf
jmp
mov
int
adc
pop
test
xor
inc
les
pop
inc
xor
mov
inc
test
arpl
pop
ret
movsl
sbb
mov
adc
fists
sbb
es
xchg
iret
cli
sbb
add
mov
int
push
loopne
mov
mov
sub
out
xor
popf
out
cmp
shrb
ja
add
idiv
sub
cli
pop
sbb
jp
add
ljmp
sub
cmp
out
push
addb
out
cmpsl
imul
sbb
and
cmp
cmp
out
lds
aaa
ss
loop
aas
xchg
jl
lret
xor
pop
inc
add
sub
jle
xor
mov
fdivrs
cld
pop
popf
mov
pop
dec
xor
jno
inc
jnp
aaa
dec
jae
xor
fisubs
dec
ror
fmull
dec
add
mov
roll
out
mov
scas
lahf
js
ss
cmp
pop
mov
xchg
cmpsb
add
call
mov
rcrl
je
pop
pop
ret
pop
dec
jp
je
pop
insl
xchg
aad
in
fists
inc
aaa
stos
out
cmpl
imul
and
add
out
lods
cmpsb
xchg
xchg
dec
jbe
bound
in
sub
dec
and
arpl
stc
ret
dec
mov
js
pop
sbb
aas
mov
push
repnz
aaa
pop
xlat
xchg
mov
xor
push
jne
ja
lods
lcall
call
imul
cs
jb
mov
into
aaa
push
je
add
xchg
mov
inc
mov
dec
and
sbb
gs
inc
push
popa
jp
out
ljmp
scas
push
jge
lret
data16
jecxz
ss
xor
ja
fldenv
sbb
push
imul
dec
movsb
pop
data16
jl
fpatan
faddl
ds
insb
push
orl
pop
adc
adc
push
mov
cmp
cwtl
andb
inc
sbb
sub
xchg
addb
xchg
test
movsb
sbb
mov
outsb
and
cmc
fldcw
stos
cmp
dec
mov
pop
and
jb
sbb
pop
scas
arpl
es
lods
xchg
imul
aam
mov
insb
jnp
mov
rclb
xchg
jno
out
mov
fmul
addr16
mov
insb
sub
shll
mov
stc
scas
xchg
xor
and
mov
fmull
rcrb
lahf
mov
xor
or
aas
jne
popa
cmp
xorb
jl
shlb
cs
pushf
or
ja
rorb
push
fcmovnbe
inc
lret
mov
lahf
xchg
jp
pop
mov
ds
mov
cld
xchg
rcr
pop
sub
loopw
repz
cmp
add
sbb
out
jns
dec
add
fwait
outsb
add
mov
or
mov
xchg
iret
jbe
out
fsubr
jecxz
enter
arpl
inc
jge
add
pusha
xor
dec
stos
and
cmp
push
jns
popf
or
jno
mov
int3
nop
mov
sbb
sbb
dec
mov
pushl
mov
pop
call
fildl
pop
les
jae
daa
or
sahf
sbb
aas
jle
xchg
clc
push
jmp
loopne
mov
arpl
inc
je
xor
fs
sub
mov
test
xchg
dec
push
sbb
dec
jae
popa
xorl
mov
rcrb
pop
push
ljmp
inc
imul
iret
push
mov
jo
jle
repz
pshufw
sarb
push
mov
mov
ja
pop
imul
sahf
lds
jo
and
add
adc
xchg
dec
xchg
inc
mov
xchg
mov
pop
xor
popa
add
pop
mov
inc
jb
push
push
add
cs
fldcw
adc
mov
mov
addr16
pusha
inc
jle
push
xor
push
pop
stos
mov
or
shlb
adcb
lahf
mov
stos
push
gs
jno
repz
sbb
push
ja
loope
jne
or
push
incl
in
pop
and
leave
cli
and
pop
outsb
push
int3
jns
int
fldcw
inc
pop
adc
sub
cmp
xchg
fisttpl
add
pop
call
adc
push
jns
bound
xor
in
outsl
ja
imul
adc
xchg
jecxz
les
dec
loope
dec
sub
les
ret
mov
or
stos
out
sbb
popa
iret
cmc
test
jmp
repnz
mov
xor
xorb
gs
dec
aas
daa
mov
adc
mov
xor
in
in
int
rclb
lret
jnp
adc
adc
stos
push
incl
into
mov
jecxz
inc
dec
mov
sbb
hlt
mov
je
mov
je
add
inc
add
push
loopne
xchg
scas
xor
xchg
or
test
int3
out
aam
or
es
rcr
mov
and
fnstenv
mov
and
fildll
popa
lock
cmp
add
call
shrb
fcoms
cli
xchg
bound
out
pop
push
sub
je
fldt
pop
mov
jae
jnp
mov
lcall
push
aaa
aaa
pop
shrb
jmp
lahf
pop
dec
js
adcb
jns
sbb
add
jno
dec
and
into
add
inc
mov
jecxz
jmp
fldenv
push
aaa
and
add
sub
lcall
pop
add
loop
faddl
je
popa
dec
jmp
cmpsl
lcall
leave
sbbl
je
cmp
push
inc
cli
mov
pop
and
fbstp
test
adc
push
mov
out
lea
movsb
or
inc
popa
bswap
jb
adc
bnd
enter
mov
dec
jae
sub
nop
std
pop
cmp
adc
lock
mov
fdivl
icebp
mov
jb
iret
arpl
mov
sub
shl
fisttpll
jge
gs
fcoms
insl
in
xlat
sbbb
subl
mov
clc
mov
es
jmp
cltd
cmpl
jle
shl
scas
out
push
into
scas
lock
iret
inc
cmp
add
jp
fimuls
inc
in
and
xor
inc
notb
fwait
mov
shll
les
dec
ret
mov
cwtl
ret
jl
jo
data16
inc
fistps
lock
out
movsl
dec
jb
push
loope
idivb
and
out
ret
std
outsl
lock
jne
je
push
jno
dec
ret
enter
pop
fisubrl
dec
push
pop
jb
pop
push
ja
push
loopne
int3
mov
aaa
mov
clc
adc
mov
repz
sub
cmc
cld
gs
popf
cli
ficompl
mov
jb
inc
pop
test
test
cld
aam
xor
adc
scas
inc
jmp
enter
xchg
out
fstp
jnp
rorl
aad
xor
test
add
adc
insl
ret
dec
fsubrp
or
push
or
cs
unpckhps
int
mov
enter
jae
add
lret
or
and
dec
mov
movsb
sbbl
cmp
sub
mov
cmp
sub
cltd
mov
imul
mov
out
jp
enter
mov
and
lds
lods
adc
xchg
fsubs
bnd
fnstsw
ja
cltd
inc
and
and
movsb
and
das
adc
test
cltd
shlb
adc
sbb
xor
int3
mov
cmp
lods
sub
fistps
popa
mov
mov
dec
aas
ret
add
fsubl
add
inc
sub
mov
push
xchg
cli
fnsave
add
sub
out
jle
movsl
and
cmc
fildl
pop
jmp
adc
or
pop
fwait
sbb
out
or
int
cmp
in
jecxz
fdiv
cli
sahf
pushf
in
pop
sbb
xor
jae
ds
popf
and
in
push
inc
or
aas
mov
xchg
adc
loopne
jns
inc
ja
stc
fsubrl
add
leave
push
data16
and
jp
add
cmp
jns
xor
or
ficoml
pop
inc
push
cmp
pop
jno
and
sub
clc
aaa
popf
dec
inc
leave
cmpsb
popa
ds
int3
lret
lea
xor
cwtl
fnstsw
into
cld
add
mov
sbbl
mov
mov
cmp
aam
mov
inc
mov
mov
mov
cmp
ljmp
push
dec
jl
mov
lds
imul
imul
push
fisubrs
ret
int3
call
sahf
cmpsl
add
sub
movsb
aas
inc
fsubl
xor
and
sub
loope
mov
sti
xchg
clc
icebp
push
xchg
dec
test
or
mov
add
xchg
cmp
cmpxchg
mov
and
shlb
loop
cmp
fisubrs
sbb
fildll
dec
rcll
inc
xchg
xor
and
iret
mov
dec
mov
add
xchg
mov
cmc
ret
lock
dec
mov
or
movsl
pop
jns
loop
dec
lds
or
and
adc
notl
and
fst
push
sub
and
dec
push
dec
push
push
outsl
addb
adc
push
and
enter
inc
push
cli
insb
lods
cmpsb
mov
pop
mov
cmp
jbe
sub
or
test
pushf
sbb
aad
push
pop
cmp
mov
adc
push
jns
pop
cmpl
or
rcll
in
test
push
aas
pop
inc
pop
and
insb
or
xchg
push
and
push
in
jecxz
pusha
ja
push
inc
out
lahf
divb
popa
pop
mov
fcomp
dec
icebp
stos
flds
rcr
cmp
mov
pop
mov
inc
sub
mov
sub
jns
in
sub
int
xor
dec
sbb
sahf
jae
repz
fdivrs
add
push
xchg
xor
mov
imul
push
movb
mov
mov
loope
orl
ret
ror
dec
test
shrl
jp
sbb
fidivl
sub
repz
je
sub
pop
sarl
fidivl
jl
mov
in
fwait
pop
xchg
lcall
xchg
stos
xor
sarl
in
mov
push
idiv
pop
shr
cli
into
inc
push
ficoms
loope
repnz
popf
sbb
mov
lods
jg
int3
cwtl
inc
test
leave
pop
test
dec
mov
in
enter
movsl
xor
test
xchg
cmp
jbe
dec
jo
lret
push
pop
push
sub
movb
xchg
rcll
sbb
mov
hlt
int
xchg
cmpsb
in
mov
xor
daa
out
adc
aad
jns
or
loopne
cmp
out
jae
js
sbb
ja
fcomps
xchg
sbb
xchg
loop
xchg
xchg
add
mov
cmp
adc
cs
xchg
out
das
cld
pop
outsl
mov
or
subl
jns
cmc
mov
xchg
fists
in
cmp
dec
ds
push
movsb
sbb
jb
fstpt
pop
test
inc
or
jb
fcompl
loop
xchg
and
pop
xchg
fcos
add
out
and
rcll
cmp
cmp
mov
sbb
pop
jl
sbb
in
in
sbb
popa
pop
xchg
add
stos
or
pushf
add
push
fbstp
jae
rol
mov
dec
lret
popf
jb
pop
dec
and
inc
scas
mov
jle
int
jne
sub
pop
sub
into
jbe
push
mov
pusha
or
out
xchg
xor
ret
scas
jl
fmulp
ds
iret
call
adcb
xchg
mov
push
xchg
les
sub
push
xchg
ss
add
outsl
add
loop
in
jl
mov
mov
inc
and
popa
push
jmp
in
and
movsl
loope
mov
add
dec
mov
cmpsb
sahf
push
das
ds
pop
or
testl
pop
pushf
orb
rolb
sbb
lods
pop
arpl
mov
push
dec
fadd
sets
and
inc
test
cs
mov
inc
xor
fwait
scas
sbb
loope
inc
popf
xor
xlat
pop
push
gs
mov
add
inc
mov
in
or
mov
dec
lahf
out
test
push
cmp
mov
stc
jecxz
push
std
xchg
lods
int3
clc
or
out
xchg
movsl
dec
ret
jae
insl
ljmp
icebp
add
mov
lcall
or
call
es
insl
scas
mov
popa
push
mov
push
cmp
repz
mov
fs
push
cs
leave
js
out
push
movb
dec
movsb
cs
and
js
pop
add
mov
repz
enter
dec
xchg
test
int
popf
cmpsb
jb
sbb
cmpsb
sub
inc
cmp
mov
sbb
inc
test
pusha
mov
sti
push
fcomip
mov
sub
or
insb
das
add
sub
clc
xchg
rcrl
xor
xlat
jns
hlt
enter
push
aam
ficoms
cmpsl
push
sbb
out
rcll
push
push
sbb
pop
mov
mov
outsl
sahf
cmp
mov
jp
fs
sbb
inc
and
ss
push
add
inc
shll
cmp
stos
sbb
sbb
mov
and
fistps
cwtl
inc
fs
lea
pop
xlat
dec
xchg
repz
mov
and
cltd
pop
enter
mov
or
sbb
mov
pusha
dec
or
mulb
jae
push
fs
mov
pop
lds
pop
cmp
add
fiadds
scas
rcrl
enter
cmpl
mov
psubd
jbe
dec
into
adc
mov
pusha
xlat
out
inc
xchg
pop
sbb
gs
es
mov
cltd
mov
jp
adc
inc
jne
sbb
mov
mov
enter
fbld
stc
stc
and
adcb
push
clc
imul
mov
push
loope
xchg
pop
dec
add
pop
and
pop
ss
mov
inc
mov
movsl
and
pop
xor
fisubrl
xor
or
adc
xor
fdivs
mov
dec
daa
jno
call
mov
dec
test
in
sti
mov
mov
lock
mov
fcmovnb
add
andl
or
scas
shll
stc
mov
jno
mov
orb
push
sahf
add
cli
rcll
sti
pop
and
pop
loopne
inc
fs
lods
pop
push
ja
sbb
ss
sbb
push
insl
and
les
in
cwtl
iret
mov
xchg
into
xchg
outsb
add
sub
and
jb
notl
cmp
call
out
inc
fadds
stos
mov
dec
and
call
popa
add
inc
lea
mov
outsl
lret
push
dec
dec
das
and
dec
int3
insl
mov
dec
insl
jb
jae
fs
cmpsl
aaa
mov
insb
inc
sbb
xchg
pop
mov
add
sub
xchg
lods
cmp
out
cltd
cmp
fildll
insl
dec
xlat
jbe
or
xchg
stos
das
xorl
adc
dec
int
cmp
cmp
sbb
xor
add
cmp
jnp
lret
incl
jae
jae
adc
jno
pop
aam
and
cmpsb
inc
mov
jo
in
xlat
test
mov
jmp
xchg
add
dec
jae
int
mov
inc
xchg
push
jge
mov
pop
jo
mov
xchg
jp
cld
xchg
ret
insl
sub
jp
loop
movsb
in
or
mov
mov
mov
int
mov
sub
dec
or
mov
mov
enter
pushf
dec
rcll
inc
in
mov
sub
rolb
cmp
nop
repz
xor
jo
ds
stos
out
pop
push
mov
sti
push
shll
scas
ret
loopne
and
cmp
jecxz
outsl
inc
das
mov
mov
out
pop
int
dec
addl
push
fsubp
mov
xchg
push
jmp
ret
movsl
push
in
dec
cmpsb
inc
aam
repnz
lds
mov
mov
mov
jle
arpl
into
jge
sub
xlat
dec
xor
jae
out
iret
jl
xchg
pop
loopne
out
push
pop
xor
out
jno
in
test
seta
mov
int
insb
sub
sub
into
in
sub
int3
jecxz
fisubs
sub
sub
adcl
cs
popa
ds
insb
sub
pop
jg
and
mov
shll
sahf
cltd
mov
and
test
pop
fs
js
ficomps
push
inc
sbb
fisubrs
rorb
add
mov
jne
daa
clc
mov
and
lods
cmpsl
jp
mov
push
outsl
inc
sub
subl
inc
mov
aaa
das
movsl
mov
pop
pop
mov
mov
nop
push
ret
mov
mov
jecxz
xchg
or
pop
dec
subb
mov
test
mov
and
outsb
or
loope
pushf
push
hlt
daa
cwtl
sbb
pmulhuw
ja
cmpsl
cmp
xor
mov
popf
mov
add
cmp
xor
movsl
push
cld
or
insl
addl
or
clc
mov
dec
sbb
dec
mov
xchg
ret
or
jno
shl
sub
pop
mov
movsb
pushf
cmp
jecxz
sbb
add
mov
nop
pop
mov
and
jl
mov
hlt
loopne
push
outsl
mov
stos
aas
fdivs
mov
inc
out
cs
cmpsb
jecxz
inc
add
lahf
cmp
scas
cmp
std
jecxz
daa
pop
mov
jle
popf
sti
int
scas
mov
test
mov
rclb
fcmovb
fadds
ss
out
insb
cmp
ja
cmp
cmp
stc
mov
jno
mov
repnz
mov
and
stos
inc
cli
jmp
into
sub
dec
imul
mov
sqrtps
cmc
xchg
push
lcall
adc
test
sub
pop
stos
dec
push
add
xchg
xor
pop
call
mov
sub
adc
fwait
push
xor
movsl
in
inc
ss
int3
mov
aas
test
sub
nop
fs
mov
imul
bound
cmpsb
pop
lret
repz
sti
mov
sub
mov
fistl
mov
je
fldenv
arpl
sub
inc
xchg
mov
push
inc
xor
push
mov
hlt
add
mov
push
gs
cli
mov
aad
out
fistps
aas
repz
and
or
mov
out
movb
jge
pop
stc
xchg
into
loope
push
in
out
add
xchg
lods
mov
inc
push
aam
popf
sti
movsb
dec
insb
arpl
or
jp
mov
mov
mov
push
loopne
faddl
mov
cmp
lock
data16
jno
cwtl
sahf
xor
and
lods
insb
aas
jnp
ret
popa
inc
cmp
adc
cwtl
clc
jle
xor
xor
mov
jp
add
loope
es
cmp
sarl
sbb
cmp
jns
stc
pop
scas
pop
bound
movsl
aaa
dec
stc
es
mov
sbb
sub
add
fwait
js
push
ss
lods
jmp
ret
out
mov
loope
lcall
test
pop
lea
pop
in
cmp
mov
test
mov
sub
out
xor
int
inc
mov
fsts
cmpsl
mov
dec
mov
push
sub
mov
push
outsl
sbbl
insl
pop
dec
insb
mov
jecxz
jge
mov
out
gs
mov
adcl
ljmp
test
push
pop
mov
shlb
int3
pushl
scas
aam
xchg
dec
int
lcall
rolb
iret
lock
add
in
adc
fs
mov
xchg
xchg
dec
pop
int
sub
inc
iret
sub
jb
mov
push
dec
fistps
scas
or
mov
ret
push
gs
jne
loope
xchg
fimull
cmpl
pop
jb
adc
xchg
xchg
out
push
fsubp
loopne
adc
or
ss
mov
pop
mov
fadds
ss
lcall
scas
out
sbb
ret
jg
movb
lock
test
add
add
mov
dec
sahf
mov
sarb
mov
push
inc
cmpsb
scas
inc
push
pop
sbb
add
jmp
cmpsb
pop
adc
hlt
sub
push
sbb
cmp
fsubl
pushf
int3
shll
xchg
sub
push
fsubrl
bound
andl
fisubs
jne
push
sub
cwtl
cmp
cltd
into
push
xor
in
inc
ficoml
movsb
jno
stos
clc
dec
bound
or
icebp
fidivrs
pop
sbb
addb
bt
roll
orl
cmpsl
jmp
out
cmc
xor
mov
cmc
imul
add
test
mov
jg
mov
pushf
jnp
lods
insb
std
fidivrl
xchg
mov
add
pusha
xor
aad
fdivs
adc
jl
dec
jno
and
mov
push
dec
frstor
sbb
sarb
pop
mov
dec
js
push
xor
aam
fisubrs
cmp
cwtl
and
dec
insl
adc
jg
xchg
les
std
mov
xor
in
jne
add
gs
pop
nop
adc
mov
or
pextrw
inc
push
and
or
pop
xchg
addb
pusha
dec
decb
orb
fcmovu
iret
push
lret
cli
jle
or
loop
inc
adc
sbb
outsb
lock
icebp
insl
dec
faddl
lea
mov
inc
mov
std
mov
pushf
xchg
lret
mov
jo
and
sti
jbe
mov
xorl
roll
cmp
lods
add
orl
shll
adc
leave
ljmp
sub
movsb
sbb
jne
test
outsl
cmp
and
insb
add
daa
adc
add
push
shll
ret
sbb
nop
mov
shrb
pop
mov
jp
push
cmp
jnp
aas
inc
pop
dec
dec
popf
sbb
rolb
into
mov
ja
mov
push
xor
shr
adc
shrb
sbb
jae
fdivs
dec
push
not
adc
dec
fcomi
lock
inc
jne
sub
movsb
xor
dec
out
cld
adc
stos
dec
push
in
movsb
mov
shlb
scas
pop
add
es
xlat
pop
rol
xchg
aad
int
xor
adc
je
inc
pop
and
call
cmp
cmp
arpl
cwtl
xor
arpl
adc
mov
or
push
test
cmp
sub
lods
js
push
sub
cmpb
int
ret
inc
imul
jae
pop
xchg
fidivrs
mov
decb
mov
loope
shlb
subl
jo
rol
add
or
dec
andl
cmp
cmp
jae
sbb
mov
outsb
sbb
cmpw
mov
mov
fidivrl
fdivl
aaa
test
sub
jbe
adc
pop
les
popa
push
mov
fidivl
stc
xorl
pushl
or
sub
cmp
mov
pop
pop
sub
dec
and
fisttpl
pop
mov
into
cmp
or
ficoms
ret
inc
into
imul
shrl
push
int3
jmp
push
lods
or
mulb
test
jnp
outsl
es
xorb
imul
cmp
or
aaa
xor
repz
xchg
jo
mov
in
mov
push
adc
inc
leave
push
in
jbe
into
popf
mov
orb
jmp
js
movsl
cmp
iret
dec
test
pop
addb
stos
sub
xlat
dec
das
je
repz
cltd
rcrl
data16
xor
mov
or
mov
jb
es
ja
cmp
insb
pop
data16
push
and
push
cmp
cmpsl
push
mov
sbb
ret
outsl
cmp
sahf
mov
shlb
test
push
scas
mov
imul
out
ret
bound
push
mov
push
mov
test
sub
push
cmp
sub
gs
inc
pop
or
in
push
cwtl
push
int3
push
frstor
xor
xlat
mov
mov
icebp
xor
cmpsl
divb
inc
cld
mov
push
dec
pusha
inc
add
ss
out
or
mov
pop
adc
test
dec
in
outsb
mov
cs
fists
pop
and
pop
je
cmp
jns
xor
jl
and
sub
test
mov
dec
mov
insb
insl
pop
push
cmc
inc
mov
stos
icebp
adc
movsl
push
arpl
pop
or
ja
xor
mov
xchg
cwtl
movb
movsb
sub
or
jge
jo
xchg
in
pop
ret
or
int3
arpl
mov
test
out
imul
cmpsl
mov
int3
sahf
mov
cmpsl
sbb
hlt
sub
xor
sub
hlt
mov
jns
dec
pop
ret
or
push
adc
mov
add
aaa
jnp
rcr
inc
clc
lret
fcomp
xor
and
scas
fdivrs
mov
xchg
stos
xor
pushf
push
mov
movl
push
and
sub
dec
int
jle
pop
push
push
fldl
mov
xor
jb
roll
and
dec
cmpsb
jge
inc
fucom
cmp
adc
int3
dec
call
mov
push
cmp
mov
outsl
pusha
push
test
jge
ljmp
mov
insl
xor
movsb
jp
jmp
jp
loopne
aas
push
xchg
jg
mov
and
pop
sbb
sub
pusha
xchg
jo
pop
mov
mov
shll
adc
push
icebp
push
mov
cs
jb
shl
cmp
mov
insl
and
jecxz
inc
xor
xor
add
adc
pop
or
xchg
jecxz
cmpsb
jecxz
test
shll
mov
push
mov
cmp
push
cmovg
out
mov
add
lods
stc
cmc
sub
loope
lret
push
fs
xchg
imul
aad
dec
xchg
adc
xchg
jo
xchg
dec
int3
sti
adc
dec
ljmp
arpl
push
pop
xorl
lea
lret
push
dec
inc
mov
stc
push
insl
loopne
push
jns
das
xchg
cli
cmp
pop
aas
addr16
and
hlt
xchg
sub
inc
add
orl
pusha
push
es
dec
sbb
adc
push
fldenv
cmp
div
sbbl
push
icebp
mov
mov
mov
dec
fucomp
test
jno
test
pop
mov
push
imul
outsb
ret
aas
dec
push
out
xchg
sub
and
insb
fsubl
sbb
mov
loop
lds
jb
pop
push
out
push
inc
fidivrs
mov
or
daa
sti
mov
aaa
add
inc
mov
bound
cmp
sub
jno
add
jno
jge
xor
addr16
mov
aam
stos
dec
sub
sbb
cmp
test
pop
jmp
pop
cmp
xlat
das
data16
jg
jbe
or
cmpsl
push
dec
js
adc
jno
adc
adc
addr16
mov
and
inc
fcoms
test
mov
lret
jns
hlt
pop
sbb
enter
mov
add
cmp
xchg
sbb
fcmovb
push
cmpsl
in
and
cmp
mov
les
and
dec
or
rorb
aad
adc
mov
retw
ror
movsb
or
icebp
loopne
mov
lods
in
pop
repz
out
or
rorl
fcmovnb
clc
xor
cmpsl
leave
cwtl
imul
lcall
push
out
xchg
in
push
fstpt
and
add
test
push
cmpsl
ss
in
fidivs
push
jmp
shlb
xorl
sbbl
cmp
pop
dec
cmp
mov
adc
sub
or
add
pushf
jmp
jno
pop
xchg
sub
roll
ja
sbb
pop
cmp
mov
cmp
pop
mov
shll
popf
mov
loopne
dec
jno
jmp
sbb
out
push
shll
mov
das
or
mov
fs
mov
mov
add
xor
push
and
lods
xchg
aam
or
mov
icebp
mov
loop
aaa
hlt
roll
xor
jnp
mov
push
xor
cli
test
xchg
jmp
mov
mov
ss
xlat
pop
mov
cwtl
sbb
xor
jbe
fwait
js
in
into
and
clc
stc
sub
mov
gs
jge
clc
sub
out
mov
js
ret
mov
sbb
rolb
cmp
jae
and
fwait
les
sub
mov
push
and
pop
cmpsl
adc
repz
xor
mov
sbb
dec
mov
cwtl
and
fimuls
mov
mov
arpl
out
push
dec
fisubs
mov
imul
sbb
outsb
ljmp
jno
ljmp
nop
orb
icebp
repnz
sub
fsubs
sub
std
dec
pop
insl
fcmovne
jle
dec
adc
sbb
aad
lds
ds
jle
mov
mov
loopne
xor
ficomps
lret
pop
lock
mov
loop
mov
xor
mov
jne
mov
xchg
shrl
pop
shl
imul
fs
aad
xchg
fcmovnu
push
aaa
jb
outsb
push
cmpsl
and
pop
les
adc
push
inc
and
pop
loop
mov
call
xchg
cld
hlt
or
imul
je
inc
jmp
push
mov
jo
xor
jge
rcll
push
rcrb
leave
clc
pop
push
stc
mov
fiaddl
popa
jns
push
repz
dec
mov
lret
pop
push
pop
xchg
scas
mov
cwtl
xchg
or
and
outsl
loope
lods
dec
lods
lods
loopne
xchg
lcall
push
inc
lret
jae
daa
xchg
cmpsl
sbb
or
jno,pn
add
mov
mov
cmp
in
les
insl
pop
xchg
sub
jmp
sbb
lahf
cmp
push
adc
out
xor
mov
sti
mov
lcall
cmp
jle
cmp
cmp
cld
int
daa
xchg
inc
lea
mov
sbb
and
cmp
inc
popa
mov
sub
pushf
add
pusha
dec
enter
and
jb
adc
notb
jnp
int
dec
dec
mov
mov
and
add
fcmovu
scas
sub
gs
add
push
aas
fidivl
data16
ret
rol
sti
xor
adc
repnz
aad
stc
imul
mov
adc
popf
and
mov
dec
mov
fiadds
movsb
bound
sbb
icebp
push
xchg
popf
popa
fldenv
hlt
fsubrs
dec
jb
and
les
xor
imul
inc
jo
leave
push
notb
sti
pop
mov
repz
bound
xchg
gs
addr16
adc
adc
repnz
push
push
ret
pop
xchg
xor
cli
add
mov
cmpsb
cli
mov
out
imul
add
sbb
call
dec
inc
in
shrb
cmp
cmpsl
das
cld
jns
mov
jge
mov
cmp
dec
std
cmpsb
test
adc
loope
cmovns
loope
sub
loope
pop
imul
in
test
fiaddl
jl
sbb
push
loopne
stos
push
aaa
ljmp
scas
and
xchg
sub
je
lock
xchg
scas
push
inc
xor
jo
decb
mov
ficoms
cld
sub
mov
popf
cltd
and
fildl
mov
add
push
movsl
xlat
push
push
jb
add
leave
fs
pop
fisttpl
cmpb
lock
icebp
mov
push
lret
out
mov
add
cli
mov
lods
sbb
push
mov
or
cli
out
pop
pop
mov
fidivrs
lds
pop
xchg
dec
test
and
fucom
insb
fwait
sub
cld
sub
mov
js
aad
js
add
in
lds
test
aam
out
cwtl
roll
push
add
leave
xchg
jns
jbe
jae
aas
rorb
mov
in
jbe
jns
xchg
push
shrl
fs
cmc
lods
xor
pop
sub
std
push
add
inc
cmpsb
data16
stos
pop
cmpl
adc
repnz
jl,pt
in
test
mov
cmp
or
ret
movl
orb
test
pop
push
std
aas
shl
lods
push
movsl
add
push
outsb
mov
sbb
leave
mov
cli
mov
push
xor
insb
push
mov
jb
in
and
notl
shr
out
xchg
rcl
lods
mov
lret
cs
or
cmc
add
lret
xchg
stc
lahf
je
test
jb
add
or
push
cmc
jnp
enter
add
fldt
sbb
xchg
or
push
dec
pop
pop
pop
out
sub
xorps
jmp
pushf
hlt
aaa
add
out
ss
mov
push
jp
xor
mov
loope
dec
pop
fisubl
push
daa
test
xor
addr16
mov
cltd
pop
mov
ror
or
stos
adc
push
adc
push
mov
pop
movsb
or
nop
arpl
addr16
imulb
mov
lods
imul
loop
cmp
shl
nop
lods
stc
push
test
cmpsl
cs
sbb
aam
test
aam
js
fwait
adc
lret
int
and
sbb
sub
mov
jge
outsl
sbb
sbb
out
lcall
aas
shrb
rclb
mov
jmp
xchg
jecxz,pn
jae
add
fmull
jl
or
adc
xor
int3
adc
sbb
dec
sbb
in
inc
push
cmc
jl
fadds
sub
push
sub
jmp
sub
stos
in
or
jae
outsl
jmp
insb
icebp
psraw
cmp
fisttpl
ss
enter
mov
fcomps
sahf
repz
xchg
jge
sub
les
ret
pop
mov
push
cmp
adc
mov
rolb
pop
lods
cmpsl
mov
and
adc
lret
push
xor
lret
hlt
inc
inc
cmpsb
xor
mov
dec
and
add
lret
xchg
pop
mov
jg
jbe
cmp
and
pop
bound
xorb
pushf
mov
add
lcall
inc
loop
cli
aaa
sbb
sti
fadds
mov
pop
dec
cmp
imul
in
cmp
daa
in
xchg
or
adc
adc
and
sub
add
mov
pop
mov
dec
push
sbb
fldl2t
adc
pop
das
xor
mov
loopne
mov
incb
int3
loopne
xlat
inc
xchg
mov
jae
jo
icebp
add
mov
jbe
lcall
shll
fmuls
rorb
mov
in
mov
adc
cmp
into
es
inc
push
mov
mov
stos
and
pop
leave
in
mov
mov
sbb
sub
sub
negl
out
popf
jecxz
sub
les
mov
imul
mov
fs
pop
push
pop
cmp
call
data16
mov
sahf
or
xchg
outsl
movsl
out
push
xchg
sbb
in
mov
orl
nop
daa
inc
fistl
mov
or
lea
orl
cmp
das
pop
mov
es
adc
adc
cli
pop
ljmp
jmp
in
mov
cmc
fs
in
std
movsl
xchg
add
jecxz
andl
in
cmp
cmp
mov
mov
push
xor
add
es
xor
push
into
test
in
mov
mov
inc
jne
lock
add
mov
lods
jbe
add
repnz
ret
sbb
jnp
mov
outsl
cmpsl
cmpsl
es
mov
mov
or
cli
xorl
loope
add
imul
dec
cld
roll
fistpll
rorl
ljmp
mov
scas
xor
int3
push
adc
loopne
das
add
adc
cli
add
jae
sub
xchg
sti
mov
rclb
mov
pop
pop
push
xchg
sub
inc
cmc
and
ficoml
inc
xor
mov
push
adc
shlb
lret
or
movsb
pop
pop
nop
inc
pop
in
js
lds
lds
mov
ja
adc
mov
mov
ljmp
cs
jbe
and
fsubl
sahf
push
js
inc
ja
frstor
xchg
cmc
rorb
jecxz
lds
test
sub
ucomiss
sub
pop
or
cld
leave
adc
jg
push
test
mov
jmp
dec
pop
test
imul
pop
ret
dec
pusha
or
push
cmp
sti
jae
add
mov
fwait
cmp
aam
or
xorb
fwait
mov
dec
daa
fcomps
stos
pop
nop
in
mov
fucompp
jg
xchg
dec
or
sub
call
xchg
movsl
and
aas
fistpll
push
imul
push
shlb
into
mov
dec
inc
pusha
addr16
xor
xchg
add
inc
push
xchg
jns
adc
sbb
add
mov
lret
out
cmp
loop
ljmp
jmp
mov
mov
incl
movsl
shlb
int3
test
aaa
or
data16
jb
insb
icebp
cmpsl
add
bound
imul
ljmp
ficomps
xor
in
sub
sbb
addb
push
mov
in
mov
push
xchg
ss
sbb
hlt
push
xor
xchg
out
dec
push
insb
out
lock
mov
inc
xchg
loopne
xchg
popl
inc
loopne
fidivs
sbbl
mov
test
jbe
or
in
lret
lods
push
subb
xor
cmp
jo
and
daa
xchg
pop
stos
test
sub
es
lcall
inc
sbb
mov
dec
adc
jmp
outsl
fsubl
pop
push
adc
and
popa
fldenv
in
lods
sahf
push
xlat
mov
fsubs
cmp
push
filds
xchg
push
scas
scas
repz
out
xchg
cld
gs
xchg
push
sub
push
push
push
dec
cli
and
inc
imul
call
dec
cmp
fstl
dec
popa
bound
mov
or
fs
fstl
aam
fldt
mov
decl
fstl
subl
inc
stos
mov
or
xor
ficompl
inc
mov
cs
or
pushf
pmaxub
daa
jp
notl
repnz
push
pop
pop
mov
cmp
rclb
clc
aaa
fildl
outsb
fimuls
sub
cmp
dec
push
clc
jbe
nop
in
pop
mov
test
and
cltd
lcall
leave
dec
push
mov
cltd
pop
lret
pop
push
rorl
pop
lret
jnp
das
mov
add
ds
sub
cld
mov
lock
sbb
jno
inc
lcall
add
lret
shl
jl
loopne
mov
cmc
test
dec
addr16
flds
mov
push
aaa
cmp
jbe
or
mov
outsl
and
add
lds
int3
lret
mov
pop
sbb
sub
push
ret
push
fcoml
inc
jg
and
jno
out
mov
popf
mov
sbb
ret
xor
iret
loop
fdivs
ds
sbb
stc
push
pusha
nop
push
in
jae
leave
cmpsb
ja
pop
mov
and
shrb
jne
call
nop
movsb
in
xor
push
test
xor
mov
int3
jbe
or
sbb
rcr
das
imul
jns
fidivrs
pop
inc
sbb
push
lea
adc
inc
lret
inc
sub
cs
mov
push
leave
add
xor
xchg
imulb
xchg
arpl
sbbl
ret
pop
dec
out
push
imul
cmp
inc
cmpl
sub
sahf
aas
jne
xchg
mov
sub
fisttps
or
add
sti
cltd
push
aad
sub
pop
xor
sub
test
pushf
dec
neg
outsb
jle
jne
ret
or
fstpt
mov
dec
or
ss
nop
aam
cltd
xchg
ljmp
dec
ljmp
adc
push
push
xchg
mov
xor
fistps
sbb
testl
ss
rcll
push
sub
bound
test
push
push
pop
dec
test
inc
push
xchg
fs
push
cmc
mov
inc
adc
xor
adc
scas
sub
mull
cmp
pop
mov
daa
or
insb
icebp
mov
xchg
sti
inc
and
fldenv
jno
xor
stos
or
int3
xchg
arpl
cmp
test
or
ss
mov
sbb
or
mov
dec
fistpll
jl
push
mov
xchg
jmp
jo
adc
cmp
pop
popf
mov
add
loopne
cwtl
jl
jg
daa
dec
xchg
sub
and
push
mov
das
sti
jg
xor
adc
push
inc
lahf
fdiv
in
ret
xor
pop
das
add
push
and
stc
shll
xor
adc
push
add
outsl
aam
pusha
hlt
pop
ds
lods
sub
adc
dec
mov
fsubs
adc
add
scas
dec
ret
add
bound
cld
int
xchg
jnp
or
cmp
sbb
sbb
fnstenv
clc
xlat
xchg
mov
rcrb
addl
scas
gs
mov
in
and
das
and
imul
xchg
loope
mov
outsb
adc
les
push
pushf
bound
cmp
jecxz
test
std
xor
jge
add
or
mov
xor
add
pop
sub
adc
in
xlat
jno
jb
pop
and
out
mulb
sub
insl
mov
cli
cmp
test
je
pushf
imul
cmpsl
pop
and
cmp
hlt
and
ja
jle
lcall
xchg
sbb
push
xchg
cld
jp
adc
sub
les
rolb
pushf
inc
mov
push
or
shll
jae
das
mov
jp
cmpsb
ret
into
out
pop
imul
pop
jg
or
popf
add
cmp
movsb
out
inc
dec
popa
mov
inc
aas
ret
cmp
mov
push
lock
jecxz
sar
sbb
inc
mov
pop
das
ficomps
lahf
sbb
in
std
cltd
lret
or
movsb
dec
leave
lret
push
xor
shll
into
adc
pop
cld
lods
insl
jno
pop
cmc
mov
pop
jb
jne
mov
shll
and
sub
dec
test
out
xchg
cwtl
addl
mov
cmp
movsb
xchg
push
push
mov
loop
decl
clc
sub
sahf
adc
dec
bound
push
push
dec
cmp
lods
lret
push
push
and
pop
das
jae
stos
and
aam
pop
jnp
xchg
xor
shll
popa
mov
pop
out
jno
aad
loopne
mov
push
filds
int
pushf
callw
and
outsl
or
ja
dec
push
mov
pop
mov
cmp
xor
cmp
add
jae
add
nop
dec
sbb
adc
stos
sub
cmpsb
pop
inc
enter
sahf
xchg
mov
jae
cmpsb
pop
ret
cli
imul
jnp
aas
pushf
jbe
scas
sbb
dec
push
leave
shl
dec
test
jo
lock
int3
stc
dec
mov
push
push
int3
push
sub
cmc
inc
insl
sbbb
mov
xchg
out
push
mov
jle
or
repnz
lods
inc
pop
pop
cmp
cmc
les
pop
mov
adc
jnp
lods
loopne
insl
sbb
sti
test
jo
adc
add
adcl
psubsb
hlt
pop
xor
add
mov
int3
mov
sti
mov
xchg
gs
ret
mov
out
dec
xor
cli
aad
cmpsb
in
mov
stos
pop
pusha
mov
mov
lock
aad
and
xor
mov
jnp
js
shrb
cmpsb
in
mov
das
out
push
jno
cmpsl
icebp
sub
test
aad
push
scas
aam
rorb
je
jo
sarl
jge
enter
ret
icebp
adc
fsubs
mov
bnd
pop
lret
cld
pop
test
aas
dec
cmp
pop
push
pop
cmpsb
mov
into
push
arpl
subb
xor
mov
fs
ds
andl
adc
inc
xchg
and
mov
push
and
int
popf
shrl
cmp
outsl
sti
data16
xor
xor
stos
cmpb
addr16
into
mov
push
dec
enter
insl
and
dec
js
daa
adc
fdivrp
lret
inc
gs
add
add
mov
xor
ss
xchg
pop
mov
mov
cld
outsl
xchg
push
ljmp
std
test
jnp
pop
shlb
jns
inc
dec
jb
xchg
sbb
pop
faddl
sub
enter
notb
and
or
xchg
call
aaa
jne
out
lea
lock
loope
adc
fisubl
loope
sub
xchg
mov
lock
out
adc
into
pop
add
adc
sarb
xor
mov
dec
xchg
mov
inc
push
cmp
mov
dec
test
adc
and
shll
jmp
jnp
xchg
xor
cmp
dec
pop
pop
jl
movsl
mov
jne
xor
or
es
cmp
cmpsb
pop
hlt
out
adc
and
jo
or
enter
lock
bnd
loopne
and
lcall
sub
in
cmp
jp
flds
mov
inc
addl
repnz
lea
cmp
jmp
dec
jae
dec
sbb
mov
ror
xchg
in
mov
jnp
push
mov
dec
xchg
scas
adc
orl
stos
cli
cmpsb
or
andb
cmp
mov
sub
scas
out
dec
out
sbb
sub
in
neg
or
lcall
dec
dec
mov
pushf
insl
in
outsl
subb
xchg
stc
mov
sub
lds
movsl
int3
das
iret
jo
push
mov
sbb
stc
out
jo
scas
xor
inc
jnp
in
jno
pop
je
addl
cld
xchg
int
and
negl
pop
out
ja
lds
xchg
jl
xorl
push
jne
sbb
xor
popa
pop
push
push
icebp
orl
and
lock
jmp
test
inc
inc
out
add
stos
jmp
mov
or
cltd
dec
inc
sub
jno
mov
lahf
xchg
inc
dec
sbb
mov
xchg
and
sti
jl
lods
push
jo
das
mov
ret
xor
dec
dec
pop
mov
das
xor
outsb
ja
test
fs
mov
aam
and
iret
repz
je
cmpsb
sbb
adc
xchg
sahf
jns
inc
fnstcw
dec
stc
out
push
sarl
adc
xor
sub
into
mov
cmp
loop
sub
push
inc
call
loop
jmp
fs
ja
sub
or
xchg
push
xchg
sub
test
push
fldt
cwtl
enter
out
add
jge
cli
push
push
mov
fidivl
xor
es
mov
xchg
out
fcoms
and
icebp
and
icebp
fwait
lcall
sahf
mov
jae
dec
shl
mov
xor
aaa
lea
adcl
inc
es
and
adc
inc
jns
ds
add
das
xchg
movl
shll
dec
std
sub
int3
fwait
jmp
adc
sub
jmp
push
out
test
cmp
inc
cmp
jl
in
mov
aaa
movsl
addl
add
sbb
repnz
aas
popf
fadds
mov
fadds
loope
mov
clc
imul
aam
mov
in
mov
pop
sarl
rorl
in
imul
icebp
push
in
les
mov
pop
outsb
mov
shrb
sub
adc
push
cmp
inc
stc
xlat
jmp
mov
lock
int
inc
popf
inc
sbb
mov
mov
xor
pop
adc
into
xor
jb
jg
dec
cmc
push
mov
push
mov
scas
xorl
lods
pop
out
dec
fcomps
sbbb
pop
ss
aas
cmp
and
pop
lods
in
ljmp
jge
and
fcoms
cs
sbb
sub
mov
in
adc
pop
out
mov
cmp
movsl
lret
les
mov
popa
xchg
mov
xchg
das
jb
inc
ror
shl
sbb
subl
jae
rcrl
adcl
pop
inc
sahf
lret
cld
pop
int3
sahf
inc
push
lods
imul
jp
sub
mov
lods
sahf
mov
fs
mov
bound
lret
loop
xor
lcall
pop
jno
ja
and
or
or
movsl
sbb
mov
mov
addb
push
add
mov
popf
push
hlt
push
roll
cltd
mov
dec
inc
in
xchg
mov
push
cs
pop
pop
mov
sub
adc
xchg
xor
mov
mov
in
mov
rorl
add
cli
cmp
out
inc
fwait
jae
imul
push
jecxz
xlat
xchg
fs
orb
rcrb
js
and
inc
inc
stos
inc
pop
cwtl
push
add
and
mov
lahf
aas
popa
xchg
mov
fistpll
movsl
inc
fcomip
or
bound
aam
pop
mov
mov
mov
sti
stos
and
push
insb
insl
outsl
push
mov
repnz
mov
es
xor
ret
sbb
mov
sbb
es
mov
xchg
cmp
loopne
push
lea
scas
push
call
pop
mov
add
lea
shlb
mov
adc
xchg
cmp
aad
cltd
int
ljmp
incl
add
xchg
int3
add
popa
mov
xor
mov
sahf
pop
sbb
and
jp
fmul
push
jae
fidivs
mov
adcl
mov
push
bound
hlt
mov
imul
xchg
xchg
dec
mov
xorl
fcoms
pop
or
and
dec
cmc
adc
sub
jno
mov
loopne
mov
xlat
push
and
cmp
inc
cli
into
pop
cli
pop
stc
dec
dec
cmpsb
and
mov
das
jp
pop
cmp
lret
sti
stos
add
push
cmpsb
aaa
mov
aaa
xchg
and
push
daa
dec
out
mov
fsub
test
jle
repnz
fwait
adc
pop
lahf
ja
fs
cwtl
push
movsb
insl
movsl
ljmp
loopne
jbe
jecxz
cmp
jb
pop
and
cwtl
test
adc
aas
push
push
push
rolb
insl
lods
jg
repnz
out
lret
mov
xorl
out
mov
mov
daa
xchg
int3
xchg
push
repz
push
add
pop
fldln2
les
dec
ficoms
dec
mov
jmp
sbb
dec
ret
dec
mov
fstpt
sbbb
ljmp
or
fstpl
movsb
ret
add
mov
subl
mov
stc
mov
mov
mov
sar
call
fs
daa
jo
movsl
push
jo
daa
lods
pop
push
xchg
sbb
lods
fstpl
std
and
pop
push
clc
pop
add
lcall
dec
xchg
xor
mov
loope
cmc
fsts
sub
rcl
mov
xchg
mov
mov
sahf
mov
jo
xor
push
xchg
xlat
inc
jo
sbb
insb
pusha
pop
mov
mov
cld
sbb
lret
hlt
sub
mov
xor
fistl
push
jbe
nop
mov
push
mov
pop
out
xchg
mov
pop
outsb
mov
movsb
mov
mov
in
dec
stos
jp
rol
cli
popa
fs
leave
fdiv
push
mov
mov
mov
clc
jmp
cmp
lret
roll
mov
jb
or
rclb
mov
jne
pop
ds
cmp
push
nop
xchg
fildll
inc
je
in
scas
sub
out
inc
in
adc
xor
or
fidivrs
xchg
xchg
sahf
push
rolb
in
jge
arpl
mov
xchg
fwait
scas
dec
insb
jno
loope
xlat
or
jns
es
add
mov
mov
pushf
sbb
dec
imul
sub
pushf
test
or
stc
cmp
mov
xor
pusha
push
hlt
jb
push
jne
xor
pop
xchg
or
dec
sahf
xorb
push
mov
push
adc
test
cmpsb
mov
push
sar
cmp
jno
or
xchg
adc
fidivs
pop
xor
enter
push
imul
mov
lds
push
mov
imul
inc
shll
or
mov
jecxz
lret
and
pop
inc
add
movsb
and
popf
test
jp
dec
xor
jns
aaa
shlb
int3
lret
adc
ret
cs
les
neg
xchg
and
pop
push
dec
lods
lods
test
orl
cld
mov
add
mov
adc
dec
cld
sarl
fisubrs
lods
mov
lea
mov
or
subb
mov
inc
imul
push
mov
aam
mov
or
mov
dec
sub
loop
ljmp
push
std
inc
je
xchg
mov
rclb
sbb
mov
adc
xor
aaa
cltd
scas
sbbl
lods
inc
add
or
mov
stos
mov
add
dec
mov
pop
test
xor
push
or
arpl
mov
sub
std
xlat
out
adc
rol
repnz
test
je
out
sbb
xchg
and
mov
pop
fs
fwait
sub
ret
mov
leave
mov
push
loope
fidivrs
loope
lcall
jnp
adcb
gs
mov
dec
sub
inc
pop
jns
jge
data16
je
xchg
sbb
sbb
mov
ret
or
loope
push
into
lret
test
jae
mov
mov
xchg
xchg
add
mov
cmp
sbbl
dec
sar
jns
cmp
in
mov
jecxz
jno
rcll
out
push
mov
push
inc
or
or
inc
and
and
or
xchg
fcoml
push
jb
lods
mov
lds
jb
jl
sbb
int3
addr16
stos
push
jno
mov
mov
fadds
jnp
lock
call
test
push
fsubl
add
sub
call
jmp
add
or
pop
gs
into
sub
mov
jecxz
sbb
sub
hlt
mov
xchg
lahf
mov
call
sarb
leave
inc
js
imul
scas
mov
xchg
jg
les
stos
jbe
push
orl
out
and
push
xor
popf
pop
loop
jae
addr16
pop
lods
int3
roll
test
sub
test
lods
cmp
sub
push
addb
ja
add
jnp
std
pop
jmp
push
jle
jbe
imul
shl
dec
sub
test
jae
mov
xor
out
test
or
add
mov
es
ret
rol
jge
int
pushf
and
and
inc
cld
jbe
add
pop
daa
push
pusha
sbb
test
fimull
fwait
lret
mov
int
sti
int
lods
add
sub
xchg
in
push
stos
push
sub
out
pushf
pop
fdivr
cmp
mov
sbb
hlt
stos
insl
sahf
fcoml
mov
cmp
dec
pusha
addb
sarl
in
nop
lahf
and
into
enter
adc
add
pop
adc
mov
pop
and
inc
mov
adc
jp
or
cmp
fistpll
jge
subb
and
dec
adc
jl
pop
mov
repnz
pushf
addb
and
jno
jns
mov
fiaddl
shrb
icebp
fnstcw
sub
dec
xor
pop
pop
in
nop
mov
in
sub
pop
add
add
mov
push
lods
xor
cltd
int3
cmpsl
xchg
push
insl
test
sbb
mov
stos
scas
push
int3
mov
xchg
xor
test
or
pusha
lret
pushf
pop
mov
push
inc
push
sahf
mov
lds
in
push
rcll
cmpsb
rorl
push
popf
lahf
popf
fldcw
aam
popa
inc
add
ljmp
adc
add
ljmp
int3
test
je
cmp
sub
mov
test
add
fwait
shrb
or
in
xchg
xchg
addr16
rcll
push
jae
popf
mov
lcall
and
int
mov
push
fwait
xchg
jecxz
jnp
out
aaa
test
xor
nop
in
rolb
mov
inc
je
stos
xor
sti
or
in
clc
add
dec
lret
cmp
insl
cmp
ret
cmp
mov
loop
stos
stos
call
test
xchg
mov
daa
mov
rclb
ss
hlt
sbb
ret
cltd
lods
imul
leave
clc
addr16
inc
jae
repz
out
jge
push
pop
lcall
pop
movsb
js
jmp
and
je
sbb
dec
add
popl
pop
adc
inc
daa
test
dec
shrl
lahf
push
in
rclb
mov
xchg
ss
push
test
or
ss
mov
insb
fwait
xor
push
sti
ljmp
adc
sub
inc
push
and
cmp
mov
jae
dec
mov
jb
add
cmpl
cmp
xor
out
test
shl
cmp
mov
jo
mov
das
scas
mov
adc
int
out
js
repz
xor
stos
mov
inc
inc
dec
push
xchg
mov
dec
in
mov
xchg
dec
xchg
and
test
bound
push
mov
xchg
stos
cli
mov
sub
cltd
mov
add
inc
test
jp
sbb
mov
add
jge
jle
and
dec
xor
shl
sub
and
sbb
jne
clc
mov
or
ret
pushf
cmp
pop
jae
mov
outsb
mov
mov
pop
jle
inc
or
cwtl
int
xor
sarb
sbb
addr16
ds
mov
sub
or
pop
push
mov
push
inc
cmp
sub
lret
and
add
ja
mov
scas
pop
fistpl
add
loopne
lcall
cmovae
dec
or
lret
mov
sub
pushf
mov
loopne
add
inc
jp
scas
inc
push
pop
mov
and
fistps
and
pop
sub
or
mov
mov
ja
or
inc
dec
mov
jo
mov
push
mov
std
dec
jecxz
mov
sbb
xchg
dec
xor
xor
inc
insl
mov
push
pop
dec
pop
or
push
nop
les
je
xor
or
jne
sbb
orb
in
into
jp
aad
test
inc
stos
scas
fmull
sub
xor
insb
arpl
dec
mov
dec
push
jbe
push
push
cs
movsl
dec
jnp
cmp
js
dec
inc
insb
push
les
inc
dec
inc
cld
stos
jne
dec
jo
loop
lahf
sub
bnd
or
int
in
clc
jp
sub
sub
rcrb
leave
ret
push
push
jg
xchg
inc
lcall
aam
cmp
push
dec
cs
aam
sti
stc
cmpsb
ret
or
dec
popa
mov
fiaddl
aam
inc
and
lret
adc
jns
cmpb
and
int
xchg
pop
mov
das
and
and
cmpl
out
cltd
outsb
rol
iret
lahf
and
and
das
or
mov
mov
jg
cmp
sbb
adc
cmp
mov
or
jb
dec
sti
cmp
test
repz
xor
pop
pop
push
ret
call
es
push
popa
nop
cmp
js
mov
cmp
push
add
ret
stc
push
aaa
lret
xor
xchg
lcall
mov
add
test
add
push
mov
shrl
in
xchg
or
jecxz
xchg
pop
cltd
cs
pop
pop
inc
xchg
fsubs
cmp
or
cwtl
jno
jnp
add
and
jnp
leave
setnp
fsubr
sti
mov
jmp
xchg
subb
insb
xchg
cltd
and
fisubl
rcrl
popf
fsubrl
mov
ss
push
pop
jle
pop
jmp
jb
out
mov
cmp
mov
xor
shlb
jno
negl
jns
cmp
dec
xor
daa
es
mov
lock
rcr
push
jo
push
sub
pop
inc
dec
aad
in
bnd
fstl
or
push
cmpl
lea
fldl
rcl
mov
dec
aaa
mov
mov
mov
xchg
out
pop
ja
cmp
dec
or
out
addr16
lcall
mov
pop
daa
pusha
aas
cmc
push
push
jno
mov
jecxz
dec
sahf
sbb
inc
dec
sub
mov
outsb
and
and
in
test
es
or
bound
mov
ret
mov
and
pop
sbb
fistps
cltd
lods
sub
call
jae
roll
sti
stc
mov
popa
mov
in
xchg
out
xor
xlat
pop
add
ja
dec
repz
sti
pop
nop
mov
lods
popf
xor
inc
ret
xchg
pop
xchg
push
test
xchg
ret
pop
ja
out
fs
popf
inc
push
imulb
outsb
and
add
scas
mov
jbe
test
gs
cmp
mov
fsubrl
lods
ret
loop
insb
cmpsl
add
fwait
repnz
js
lret
ret
jb
xchg
adc
adc
or
jle
mov
ret
pop
xchg
loop
inc
imull
and
jge
push
fwait
das
add
push
mov
cmp
stc
shll
cmp
push
arpl
and
sub
add
les
or
sub
inc
in
push
add
mov
xor
shrb
adc
mov
add
push
inc
rclb
mov
dec
add
aaa
sub
sub
jae
lret
insb
in
add
cmp
ret
and
scas
push
negl
jnp
dec
pushl
cmc
cmpsb
aam
cmp
ret
jp
fwait
aam
lods
arpl
mov
sbb
add
push
mull
mov
xor
test
push
mov
incl
lahf
xchg
movsl
loop
scas
and
xchg
xchg
cmpsl
mov
bound
jle
jp
and
in
jo
mov
mov
and
mov
iret
shrl
inc
ljmp
ret
popa
xor
cmp
push
sbb
add
ds
shlb
mov
mov
mov
xchg
dec
mov
pop
mov
les
push
rcr
inc
test
mov
out
xchg
push
enter
push
push
ds
add
push
pushf
fisttpl
les
add
xchg
cmp
add
stos
inc
xor
movsb
mov
push
mov
cs
mov
xchg
adc
popa
loop
imul
lret
mov
cmp
adcb
mov
test
mov
sahf
cmpsw
push
rcll
cli
lods
mov
sub
pop
fwait
or
inc
xchg
push
xchg
inc
push
pop
xlat
mov
dec
les
cmc
mov
lret
scas
jle
jmp
aaa
cmp
rol
xchg
or
outsl
lods
nop
loopne
adc
rol
testl
in
fwait
sahf
push
aaa
or
icebp
orb
cmp
mov
cmp
aas
test
js
outsb
ja
sbb
inc
bnd
cltd
shrl
mov
aad
adc
clc
cmc
lahf
cmp
pop
and
sub
scas
fists
add
mov
aad
jne
xor
lods
mov
test
bound
and
nop
mov
pop
data16
jae
add
jno
pusha
fisttps
loope
aad
mov
ret
sbb
dec
fidivl
sub
cmc
fisubs
inc
cmc
pusha
pop
mov
out
adcl
jmp
loopne
lahf
xchg
mov
outsl
cltd
in
andb
mov
inc
push
cmp
bound
and
fldcw
pop
dec
or
mov
sbb
push
mov
lret
outsl
mov
out
sub
jnp
xchg
inc
fucom
jecxz
popa
pop
or
stc
addr16
cwtl
imul
push
add
popf
call
mov
pop
roll
icebp
xchg
mov
out
push
sub
sahf
ja
mov
dec
jne
add
jb
in
dec
inc
call
sub
sarb
jge
call
jno
jno
pop
insb
insl
cltd
xchg
in
cs
cmc
add
fs
mov
cmp
out
jne
repz
inc
mov
ja
sub
mov
sub
sbb
bound
and
mov
out
mov
clc
push
mov
dec
xlat
xor
cmpsb
loop
js
cmp
out
icebp
aas
mov
loop
shl
sub
mov
mov
bound
arpl
sar
pop
pop
xor
jle
sub
pop
mov
xchg
aam
js
mov
or
pop
sbb
test
out
cld
fnstsw
and
adc
and
int
daa
cmpsb
or
jmp
std
mov
sbbl
xor
push
mov
addr16
add
xlat
in
push
into
or
and
sahf
addr16
mov
mov
mov
mov
sti
add
fidivs
nop
movsl
mov
aam
push
pusha
jnp
jno
repz
pop
mov
call
flds
insl
pop
call
lock
gs
daa
ss
ret
popa
jno
call
fimuls
daa
cmp
adc
inc
xchg
cwtl
iret
xor
mov
data16
xor
test
std
push
loop
sarl
test
test
xor
cmp
cltd
popf
fs
sbb
dec
arpl
addb
int
and
xor
loop
bnd
fnsave
xor
outsb
or
arpl
pop
lret
bound
push
pop
cmpsl
xlat
lds
je
cmp
push
imull
mov
bound
test
gs
cmp
sbb
cmp
lret
fisubs
jae
mov
das
mov
negl
cmpsb
cmp
in
push
lea
fistps
int
xchg
test
pushf
mov
lea
jmp
xchg
mov
and
imul
pop
in
adc
addr16
lcall
jmp
pop
and
cmpsl
jmp
mov
xor
or
or
dec
cltd
adc
mov
jmp
test
fists
push
and
cs
imul
inc
sbb
xor
enter
mov
lret
cltd
addr16
dec
in
pop
aaa
inc
xchg
lcall
add
lds
and
cwtl
inc
jne
or
bswap
fisttps
shlb
cmpsb
ficomps
add
test
mov
pop
xchg
push
lds
aam
loopne
sbb
stos
add
iret
insb
sub
daa
cld
mov
outsl
das
mov
mov
ret
jge
clc
mov
dec
add
lcall
and
leave
leave
jmp
jp
push
mov
js
dec
fdivrl
iretw
adc
and
scas
or
push
mov
cmp
out
rcr
test
fldl2e
movsl
stc
xor
inc
mov
xchg
mov
or
rcrl
outsl
cs
xorl
mov
dec
ja
sub
mov
loope
mov
outsb
es
add
cmp
xchg
xlat
icebp
jg
neg
sub
lea
or
cmpsl
sbb
loop
ret
fsubrs
and
and
xchg
or
or
cmp
or
loop
in
adc
lret
xor
insl
mov
sbb
dec
pop
mov
cwtl
mov
dec
enter
in
rcrb
divb
ljmp
stc
addl
in
hlt
lds
call
cli
cmp
mov
jge
mov
dec
daa
pop
test
lods
adc
pminub
negb
jl
cmp
js
mov
fiadds
lret
inc
stc
push
mov
bound
dec
or
pusha
ret
and
pop
cmpsb
ficoml
mov
fnstcw
mov
cmp
xor
in
cmp
or
push
sub
jecxz
int
push
lea
cmp
decb
xor
insl
test
nop
push
push
cmpsl
adc
daa
clc
cmp
cmp
test
mov
sbb
push
lcall
mov
aas
and
ss
inc
mov
std
mov
push
push
xchg
cs
mov
icebp
push
jle
in
dec
scas
fwait
mov
rolb
xor
jbe
out
and
pusha
fildl
jbe
mull
adc
sahf
out
in
incl
scas
in
stc
xchg
out
data16
in
pop
nop
lahf
mov
stos
add
fdivs
aas
mov
lods
lcall
in
jp
pop
pop
mov
fldpi
out
adcl
fcompl
ds
add
ret
dec
movsb
fwait
cmp
addr16
jo
dec
scas
loop
dec
shll
movsb
jge
sub
ret
jne
sti
inc
add
loopne
jp
lret
inc
or
out
sbb
mov
das
stc
dec
lret
add
stos
inc
out
and
fisubrl
mov
inc
pop
cmpsl
cmp
ret
sbb
pop
cmp
mov
sub
pop
add
xor
dec
push
push
stos
cmpl
lcall
pusha
les
cmpsl
xchg
sbb
inc
inc
mov
xchg
cs
xor
test
mov
lcall
jge
shrb
jb
lods
push
leave
lahf
out
lock
mov
cmp
cmc
push
jns
adc
iret
icebp
mov
dec
sbb
inc
aaa
push
icebp
ja
fidivs
push
pushf
pop
inc
push
jbe
sbb
sbb
ljmp
pop
and
and
jnp
pop
shll
cmp
and
aas
adc
mov
adc
das
rol
sbb
mov
xor
mov
pop
pop
shll
shlb
sti
mov
in
test
rorb
fwait
mov
gs
or
pop
push
sti
mov
sbb
movsl
mov
push
cltd
jle
or
mov
adc
sbb
sub
es
popa
arpl
push
jne
cwtl
inc
pop
je
jbe
push
fadds
adc
mov
lahf
fs
mov
push
xchg
leave
sahf
into
jg
cltd
ds
inc
push
add
dec
xchg
cmp
cli
pop
or
jl
loopne
js
sbb
ds
push
test
stos
or
or
pop
aam
or
jmp
adc
add
jb
jae
gs
shrl
repz
lahf
cmpsb
je
push
mov
imul
xchg
inc
inc
mov
push
aas
icebp
inc
inc
sbb
xchg
je
push
cmc
pop
test
or
or
andl
cmc
arpl
jmp
out
lds
xchg
roll
fadds
fxch
fs
or
sbb
adc
xor
cmp
dec
add
dec
enter
leave
mov
imul
jecxz
push
testb
into
inc
icebp
cltd
cmc
mov
or
mov
add
mov
aad
jp
push
and
les
jp
sarl
jmp
adc
sub
ja
and
gs
pop
sub
or
test
jmp
mov
dec
push
imul
inc
xchg
out
jnp
xchg
pushf
stc
lods
scas
push
pop
ret
dec
xchg
mov
push
inc
jne
adc
cli
xchg
ret
sbb
dec
rcrl
subb
mov
ret
mov
dec
fldenv
jg
je
jns
clc
sub
adc
xchg
add
add
push
pop
aam
cmp
cmp
jecxz
ret
xor
scas
jo
icebp
xlat
rcrb
or
mov
stos
repnz
xchg
mov
fdivp
sub
bound
shll
mov
lock
and
mov
xor
inc
call
inc
push
pop
and
jno
fcomip
and
jl
aas
push
pop
adc
or
xchg
inc
mov
push
int3
shl
shll
sarl
sbb
push
loop
arpl
or
inc
jo
lods
rcll
sahf
nop
xchg
sbbl
lret
cmc
ret
bound
outsl
cmp
mov
or
push
pop
push
enter
push
std
jecxz
insb
jl
sbb
gs
int3
sbb
and
push
xlat
adc
xrelease
rcll
repz
mov
pop
dec
jl
and
inc
ret
sarl
mov
out
and
shl
rcrl
xor
add
syscall
imul
push
aaa
sbb
jo
pusha
aad
mov
roll
adc
jnp
cltd
add
ret
in
mov
adc
jb
cltd
mov
aad
or
xchg
push
mov
push
mov
daa
mov
and
es
dec
jecxz
ret
mov
out
sub
inc
hlt
das
aas
sarl
pop
rcrl
xchg
inc
mov
data16
sarl
mov
sbb
fstpl
mov
push
xchg
enter
into
inc
dec
out
push
cmpsb
mov
scas
mov
or
adc
sbb
xor
and
mov
jno
into
bound
pop
mov
and
mov
cs
clc
pop
scas
hlt
cmp
cmp
dec
jge
jecxz
sti
dec
adc
xchg
jns
cli
data16
lret
rcll
ljmp
push
xor
add
mov
repnz
divl
jle
cmpsb
mov
fs
dec
sub
mov
adc
cld
sub
lock
mov
mov
and
push
popf
inc
movsl
imul
cmp
cmp
mov
ja,pn
out
test
push
push
dec
fidivl
cli
lock
sub
inc
adcb
cmp
cmpsb
cmpsb
xchg
mov
push
cltd
add
and
stc
adc
mov
xchg
jmp
mov
ret
ljmp
mov
mov
in
mov
push
mov
mov
movsb
inc
cmc
and
xor
or
adc
subl
mov
loopne
jnp,pt
shll
imull
mov
scas
cwtl
xchg
shll
test
mov
jecxz
adc
xchg
xchg
daa
test
xchg
lea
sar
aas
repnz
into
mov
push
scas
pop
out
sbb
mov
adcl
pop
add
loope
jb
xor
push
xchg
lds
sahf
cli
jp
aaa
sbb
int
mov
std
mov
sub
jae
lret
ja
loop
imul
movsb
popa
xlat
sbb
mov
xor
sub
imul
xchg
cmp
adc
in
mov
inc
das
arpl
gs
nop
dec
dec
sbb
sbb
jp
sub
daa
and
xor
les
sahf
pop
cwtl
les
xchg
loopne
mov
cmp
movsb
adc
mov
mov
aas
add
enter
leave
adc
pop
cmp
xchg
pop
mov
fwait
shr
mov
xor
out
lock
stos
xchg
movsb
ds
mov
inc
pop
leave
and
stc
cmp
sbb
loopne
arpl
out
mov
andb
insl
push
mov
xchg
ret
jecxz
sbb
mov
aam
jno
pop
inc
pop
pop
lock
pop
sbb
cmp
arpl
int
leave
shrl
xor
icebp
inc
dec
outsl
sbb
lds
aas
cmp
imul
jge
xchg
data16
push
ret
jg
pop
mov
cmp
mov
imul
and
or
decl
imul
ds
pusha
or
jle
frstor
dec
pop
cmp
arpl
and
push
sub
cmp
fbld
daa
mull
inc
adc
cmc
aas
jo
inc
sahf
shrl
out
cld
outsb
push
or
test
dec
aaa
ror
jl
daa
repnz
ss
push
fcomps
out
test
cli
sub
or
cmp
int
and
inc
or
ret
sub
or
sbb
sbb
mov
lods
mov
inc
cmp
lret
imulb
push
inc
mov
mov
in
mov
into
movsb
dec
xchg
aad
xor
and
push
dec
and
sbb
into
in
mov
leave
adc
fimuls
fs
mov
sahf
shl
ja
shld
lahf
push
add
out
in
and
addb
xchg
jge
pop
rorb
pushaw
mov
andl
xor
push
and
xchg
add
loope
mov
insb
out
arpl
mov
xor
xor
mov
fs
int3
data16
mov
mov
jo
gs
rcl
sbb
fcoms
fldl
mov
or
mov
bound
mov
or
sbb
icebp
mov
push
loop
sti
inc
and
in
dec
loop
sbb
push
or
int3
cmp
mov
jmp
xchg
adc
cmp
mov
sbbb
add
rol
or
dec
lods
outsb
std
jo
dec
or
lods
pushf
xchg
jg
sbbl
fisubs
les
popa
mov
cltd
mov
leave
and
sahf
stc
mov
je
fimuls
jmp
push
cltd
mov
aam
pop
inc
mov
clc
pop
cmc
dec
pop
testl
pop
cmp
and
mov
int
les
push
and
rcll
fstpt
sub
dec
lods
pop
sub
push
xor
pop
rcll
add
daa
aaa
and
cmc
jo
or
mov
decb
xchg
sub
pop
mov
lods
cltd
mov
add
mov
mov
sub
call
loop
into
sub
mov
int
mov
pop
push
sbb
mov
mov
sub
and
mov
jno
mov
mov
testl
xlat
cmp
dec
cmp
out
out
out
push
pop
mov
dec
adc
repz
call
icebp
push
mov
mov
add
in
mov
mov
in
aam
sub
xor
outsb
mov
mov
lahf
xchg
cmp
hlt
sub
mov
lahf
enter
and
xchg
lret
jg
xor
dec
int
and
push
cwtl
push
and
imul
scas
dec
and
mov
mov
notb
aad
out
icebp
ficoms
sbb
int
mov
mov
sub
fcmovnbe
in
pop
loopne
adc
pop
dec
xor
and
rcll
out
aaa
sbb
pop
dec
sahf
mov
sub
push
sahf
call
stc
cmp
pop
and
test
in
inc
ss
pushf
pop
cmpsb
hlt
ja
imul
aam
pop
dec
push
enter
jbe
test
mov
lods
sub
jne
mov
xor
int3
clc
test
cmp
and
xor
or
shll
lods
stos
dec
add
mov
fmull
pop
stos
imul
test
mov
js
test
inc
cmp
inc
adc
jg
repnz
pop
push
adc
dec
mov
push
shr
xlat
lret
pop
or
mov
fists
clc
sbb
cmc
lcall
jp
inc
dec
dec
hlt
sbb
pop
daa
or
add
sbb
sar
scas
enter
push
clc
shrl
jnp
sbb
add
mov
sub
stos
shlb
sahf
xchg
jmp
imul
in
outsb
sti
mov
aaa
inc
gs
cmp
sahf
sbb
cmpsl
lahf
dec
mov
inc
enter
adc
das
add
push
cmp
jbe
pushf
fidivrs
test
and
sbb
clc
mov
dec
xor
gs
inc
rcr
sub
add
jnp
sub
rorb
cltd
repz
fwait
das
jbe
daa
stos
mov
mov
das
jmp
xchg
int
or
mov
lock
xor
xchg
out
arpl
arpl
adc
push
cmp
mov
adc
dec
pop
fcoml
add
cmpb
jnp
clc
loop
xlat
loope
scas
pop
pop
sub
dec
dec
cli
mov
idiv
repnz
std
push
out
add
sub
jecxz
sub
sub
and
jb
aad
xor
int
test
sti
xor
pop
fcompl
fwait
into
sub
xor
xchg
and
or
fcmove
xor
iret
mov
sti
pusha
frstor
addr16
mov
dec
xchg
ja
outsl
jns
test
popf
or
push
rcl
or
popa
mov
jns
and
add
jmp
inc
pop
xchg
xor
add
lea
mov
xchg
inc
inc
out
fwait
inc
push
clc
test
mov
mov
pop
aaa
push
sub
pop
insl
sub
pop
bound
loopne
sub
jg
aad
mov
inc
dec
pop
xchg
cmpb
jmp
add
jge
cmp
fimuls
xchg
imul
divb
jns
and
movsb
pop
sti
mov
jns
mov
sbb
add
nop
outsb
xchg
inc
test
inc
cmp
or
inc
cltd
idivl
xchg
ficoml
inc
popa
push
xchg
out
cmpsl
adc
add
push
lea
leave
jnp
jo
stc
in
cs
ss
lea
or
and
inc
fdivrs
aam
push
xchg
test
loope
dec
mov
pop
shrl
rolb
pop
loopne
xor
push
out
dec
in
push
bound
fwait
cmp
dec
push
repz
push
mov
cwtl
aas
or
mov
es
iret
mov
fldl
push
dec
popa
loopne
pop
test
pop
mov
pop
aas
jecxz
clc
lea
xchg
xor
pop
testb
add
repz
jge
or
aaa
cltd
imul
mov
adc
cmp
and
xor
add
loop
rcll
pop
stc
icebp
dec
notb
mov
pop
jns
xorl
mov
jno
aaa
cwtl
sbb
ljmp
add
fwait
pop
out
add
push
push
rolb
std
imul
xchg
clc
leave
js
movsb
lds
mov
and
iret
and
paddw
rcll
sbb
and
mov
filds
mov
loope
clc
out
add
out
sarb
cmpsl
movsb
sbb
fsubs
cmp
pop
mov
pop
lods
mov
dec
in
mov
xchg
cmp
mov
sarl
sti
fdivr
push
mov
loope
sbb
xor
fdivrs
pusha
int
shll
mov
mov
lds
jno
dec
jp
shlb
add
aas
loope
jnp
out
and
dec
push
iret
mov
mov
or
jle
into
test
lock
sub
sub
arpl
cmp
andl
sub
imull
dec
jmp
dec
pop
ret
or
int3
fs
jg
mov
sub
aaa
push
in
inc
cwtl
push
xchg
outsl
pusha
mov
pop
lret
or
insb
gs
adcb
cmp
fstps
push
imul
adc
inc
mov
push
cmp
mov
clc
stos
xchg
sbb
orb
mov
pop
jns
adc
sub
cmpsb
cmp
icebp
ret
mov
cmp
cmc
jne
and
pop
in
inc
adc
mov
sahf
pop
lret
movsl
fsubl
test
bound
lahf
jge
je
outsb
mull
pusha
mov
es
sub
int3
icebp
push
int
or
in
ljmp
cmpsb
cmp
arpl
das
popa
sbb
inc
js
jb
cmpsb
and
xlat
mov
cmp
test
js
js
mov
cvtdq2ps
shlb
add
aas
and
xorb
cli
jo
dec
and
or
cmp
lea
mov
sbb
jne
sub
mov
push
mov
cmpsb
mov
adc
inc
push
push
lods
lret
dec
xor
adc
arpl
cmp
cmpsl
movsb
add
jb
pop
sbb
lret
push
outsl
in
push
jge
and
sub
mov
mov
mov
les
cltd
mov
and
mov
inc
or
push
or
aad
lcall
dec
fsts
into
and
loope
fisubs
pop
repnz
inc
frstor
xchg
rolb
sub
xchg
add
les
shrl
jno
imul
dec
sub
fs
mov
xor
rcrl
filds
mov
jg
movsb
jmp
lret
sahf
add
cli
push
mov
pop
aam
lea
mov
sub
roll
cmp
loope
gs
addr16
pop
jno
sahf
test
stos
sub
std
pop
push
imul
sub
shrl
lock
mov
dec
fsubrl
or
or
cmc
pop
out
cmp
xor
xor
test
jecxz
out
ror
xchg
or
add
jnp
adc
in
sub
imulb
out
inc
stc
pop
fdivrp
push
popa
cld
stc
adc
sbb
xchg
call
mov
les
mov
fidivrl
cwtl
test
and
leave
inc
mov
inc
pop
in
in
inc
arpl
gs
xchg
pop
jo
mov
and
mov
xchg
test
in
xor
sub
ds
pop
mov
dec
inc
imul
arpl
lcall
repz
xchg
push
cmovp
roll
sbb
incl
pop
addr16
popf
arpl
enter
pop
enter
js
data16
sub
js
cmp
mov
pop
xchg
leave
mov
pop
stos
notb
and
mov
mov
jne
stc
js
inc
lret
or
mov
daa
out
movsb
test
mov
shrl
aad
push
and
or
clc
sub
pop
std
clc
sbb
jb
mov
cmp
add
inc
addr16
ret
mov
jl
adc
jge
rcll
mov
sub
shr
outsb
mov
adc
mov
lods
inc
dec
aaa
cmpsl
cli
out
arpl
jne
in
push
out
push
mov
or
bound
push
js
cmp
jns
cmpsb
ftst
add
aas
shrl
cmpsl
pop
aas
test
addl
push
jmp
sbb
fistpll
loop
bound
push
mov
mov
dec
adc
jno
stos
repz
out
sbb
push
and
sbb
ja
mov
mov
jb
dec
mov
xchg
mov
mov
pop
ret
lahf
mov
mov
out
jmp
cmp
stc
mov
pusha
or
sub
and
cmpsb
inc
sbb
ret
xchg
stos
test
sub
xchg
addl
push
mov
push
loope
fsts
test
jae
fsts
pop
jae
imul
repnz
js
rcrb
leave
or
adc
subl
cltd
jbe
data16
dec
lock
fisttpll
jmp
enter
or
repz
xor
scas
mov
pop
sub
and
insb
call
imul
push
mov
sbb
cmpl
dec
add
xor
lds
outsl
daa
gs
hlt
mov
test
fcmovb
loopne
mov
fmulp
popa
dec
mov
shll
mov
in
jb
mov
xchg
rorb
mov
jnp
adc
cli
leave
mov
loop
push
in
jns
mov
mov
mov
rclb
dec
insb
xor
rcrl
lret
pop
flds
jge,pn
inc
jge
xor
sbb
xlat
mov
cmpsb
mov
xor
push
mov
ljmp
repnz
or
pop
inc
mov
fxch
push
xor
clc
jecxz
data16
lret
add
stc
push
cmp
cmp
sahf
and
xchg
push
sub
jg
cmp
movsl
or
mov
loope
les
das
in
imul
lods
repnz
jecxz
outsl
imul
add
pop
mov
ds
test
add
sub
push
test
mov
xchg
testb
or
fxch
in
cmp
add
sbb
mov
sub
iret
ret
outsb
pop
fnstenv
addr16
and
mov
xchg
in
clc
mov
enter
cmc
push
imul
fs
scas
je
inc
ss
cltd
sbb
and
into
loope
xchg
movsb
sub
es
divl
adc
stos
sub
jnp
sarb
or
xchg
lods
lods
je
jg
xchg
sbb
and
call
int3
dec
icebp
cmp
addr16
fsubs
gs
lods
sbbl
cmp
or
cmp
adc
shrl
xor
scas
jmp
push
es
sub
adc
mov
sub
enter
push
mov
shrb
mov
push
aam
mov
divl
fxch
fwait
xchg
test
loopne
ficoml
leave
mov
xor
cmpb
xor
jno
nop
adcl
jnp
cmpb
insb
push
enter
or
daa
stos
int3
xchg
xor
hlt
scas
or
in
je
inc
or
dec
mov
repnz
jge
xchg
out
jg
jae
daa
push
mov
sub
insb
and
cmp
cwtl
fisttps
test
test
sub
mov
push
shll
push
sub
loopne
inc
mov
popf
push
pop
cmpsl
and
dec
inc
mov
leave
mov
loopne
xlat
dec
lahf
shlb
stos
sub
scas
imul
push
iret
mov
fidivrl
and
lret
out
in
mov
cmp
xor
jb
push
or
rcll
pop
popa
mov
mov
cmc
addr16
pop
or
les
mov
stos
fadds
push
int3
js
mov
xchg
add
push
add
and
push
data16
ret
xchg
insl
call
insb
xchg
fsub
xchg
sub
fst
jle
into
inc
clc
pop
fidivrs
gs
in
jp
call
and
push
cmp
stos
out
jb
mov
jns
mov
jl
movhlps
jo
push
insb
mov
mov
std
jb
loop
mov
inc
out
scas
fisubrs
pop
pop
repz
adc
rcll
loopne
roll
and
fdivs
mov
ss
gs
lods
cltd
mov
mov
cmc
cmpsb
mov
test
push
mov
or
test
arpl
nop
lods
mov
or
push
lahf
push
jl
mov
loop
push
ds
jns
mov
and
das
es
aam
testl
and
mov
out
pusha
les
mov
mov
xchg
jp
adc
outsb
pop
loop
rcrb
lock
stos
or
jecxz
mov
cld
pop
lcall
push
popa
out
pop
arpl
pushf
pop
xor
sub
rolb
pavgw
cli
repz
test
cmc
fsubrs
mov
jg
adc
mov
xlat
outsb
adc
cmpsl
addr16
fwait
adc
mov
mov
xchg
jb
dec
push
inc
mov
lods
daa
repz
jno
mov
and
aas
testl
cli
arpl
sbb
es
lret
repnz
test
icebp
mov
ss
das
push
insb
insl
inc
rcrb
nop
push
cmc
out
inc
das
xchg
movsb
ret
adc
pop
pop
arpl
bound
cli
xor
lods
dec
int
cmp
or
int
enter
dec
pop
or
leave
inc
es
nop
fstp
int3
lret
icebp
jecxz
inc
fdiv
mov
xor
movsl
push
xor
mov
incl
leave
pop
jb
scas
cld
in
mov
jl
lcall
inc
or
inc
pop
pop
xchg
lods
cwtl
in
cli
aas
movsb
aam
or
mov
lea
cmp
std
pop
out
addb
sbbl
fisubrs
test
jne,pn
pop
inc
pop
or
mov
or
mov
out
std
aad
iret
fdivrl
data16
adc
xchg
int3
fadds
push
enter
dec
fdivl
fsts
cmc
jle
adc
adc
sbb
sub
jne
bound
push
aas
idivb
andb
std
mov
test
dec
push
ja
mov
pop
jnp
add
push
push
push
sub
xchg
out
repnz
jecxz
lock
dec
repnz
rcrl
rep
inc
stc
es
lahf
ret
ret
dec
add
lock
rcll
dec
adcl
addr16
out
dec
xchg
xor
push
cmp
clc
test
mov
bound
sti
cmp
ljmp
and
fwait
adc
jmp
add
mov
mov
pop
push
mov
sbb
add
or
push
jne
pop
and
lods
push
jnp
push
dec
fsub
mov
idiv
push
cmp
mov
add
mov
mull
mov
xor
jle
xchg
mov
call
mov
out
or
dec
mov
shr
shlb
sub
pusha
sub
dec
lods
out
lret
rolb
out
jne
inc
stc
das
xchg
add
push
pop
jecxz
and
mov
in
fs
mov
out
xor
loopne
push
and
xor
shrb
ds
js
push
mov
xor
int
out
jb
cmp
or
jnp
cwtl
mov
xchg
adc
pop
sbb
fcoml
cwtl
mov
push
mov
sub
xchg
push
add
test
jns
int3
in
or
pop
lret
xchg
xor
outsb
or
xor
jecxz
jge
mov
dec
push
cmp
leave
in
and
add
jno
leave
dec
inc
mov
mov
pushf
leave
fcomps
and
push
imul
call
add
pop
pop
dec
cmp
daa
mov
sbb
mov
push
cmp
xor
in
lods
pop
pop
push
push
ret
and
jg
fistl
inc
mov
pop
mov
pop
mov
xor
ds
outsb
xorl
jge
lds
sub
mov
iret
mov
pop
in
mov
bound
aas
mov
pop
loop
scas
in
xorb
cli
and
dec
roll
lea
dec
test
out
clc
ret
xor
inc
or
jno
sub
and
xor
dec
push
fs
insb
in
in
popa
cmpsl
test
cmp
mov
testl
out
sti
jno
add
test
xchg
mov
jbe
mov
je
push
btr
mov
pop
xchg
jne
or
xchg
int
adc
pop
hlt
jp
cs
aad
imul
mov
movsb
pop
mov
iret
mov
adc
aaa
mov
sub
sub
leave
shll
rclb
cmp
iret
outsl
mulb
mov
aas
sub
push
adc
scas
arpl
cmp
or
ds
mov
or
sbb
aam
fdivs
bnd
push
pop
add
in
pop
aas
fsubrs
cmpsl
pusha
cli
in
test
in
jl
std
scas
shlb
dec
int
lcall
aaa
mov
dec
push
out
adc
sbb
xor
negb
jmp
orb
out
popl
pop
ljmp
mov
mov
inc
mov
mov
cmp
jecxz
frstor
mov
pushf
not
mov
std
les
adc
push
in
fyl2xp1
imul
mov
and
cld
sbb
lds
jmp
add
sub
movsb
js
sti
mov
pop
and
mov
dec
lods
bound
push
jbe
scas
das
in
cmp
es
jg
mov
call
mov
dec
mov
popf
bnd
cld
and
add
into
xchg
jae
push
sub
adc
aad
out
cmpsl
push
jle
sub
leave
int
mov
loop
cld
rcr
xlat
or
sub
and
jns
xlat
mov
add
std
or
mov
and
pop
add
jecxz
fwait
in
test
daa
leave
mov
jns
xchg
js
lock
negl
pop
iret
mov
rcll
jl
mov
scas
xchg
push
jbe
xor
jle
push
or
jl
outsl
xor
shll
cmpsl
in
pop
lock
sub
sbb
mov
call
movsb
dec
fld
xor
je
clc
mov
pop
xor
adc
and
lret
fwait
push
out
mov
imul
fimull
in
push
scas
mov
nop
lret
push
scas
fdivl
sahf
or
xchg
mov
mov
mov
sarb
insb
dec
adc
test
xchg
ljmp
andl
mov
popf
sbb
mov
cmp
in
in
lock
cmpb
pop
ss
imul
dec
js
mov
cs
push
or
ss
mov
mov
stos
or
ret
inc
sub
fcom
push
push
sbb
ja
pop
lods
push
arpl
icebp
and
and
mov
dec
stos
je
cmp
add
or
aaa
mov
sub
clc
test
loope
lahf
sbb
arpl
inc
mov
clc
std
push
xchg
test
add
push
mov
push
push
sti
jg
lahf
mov
dec
lods
xor
pop
in
shrb
adc
cmp
aas
mov
out
or
sub
add
pop
pusha
cwtl
adc
pop
pop
xchg
sub
dec
lods
lcall
je
movntps
inc
stc
mov
mov
mov
or
hlt
in
mov
inc
jb
and
or
test
mov
sbb
xchg
and
sbb
mov
and
popa
cmp
push
mov
jp
push
call
lret
popl
insb
jne
or
xchg
out
add
jle
pop
push
repnz
ss
in
inc
mov
shl
aaa
sbb
cmpsl
imul
popf
ss
sub
ret
push
sbb
movsl
xor
sbb
roll
adc
fidivs
imul
and
mov
dec
ret
xchg
lods
sub
pop
lea
add
adc
pop
out
xchg
adc
mov
xor
mov
push
adc
nop
es
adc
ss
mov
cmpsb
rolb
mov
in
fsubrs
cli
xchg
mov
mov
mov
add
or
faddp
outsl
fdivrl
iret
repnz
das
and
mov
add
pop
push
add
or
inc
pop
pop
mov
jle
lcall
mov
ds
dec
lds
lret
lods
mov
data16
loopne
rol
push
mov
insl
and
stos
es
jmp
sbb
xor
xchg
test
adcl
enter
daa
scas
and
daa
out
rclb
add
js
dec
cwtl
jno
ret
push
movsb
movaps
sub
xchg
pop
xor
ret
movsb
inc
or
es
enter
adc
mov
in
out
sub
es
std
jae
aas
sti
cmp
jb
dec
adc
and
arpl
negl
out
lcall
outsl
dec
pop
xchg
call
loope
sub
xchg
add
adc
mov
mov
fsub
xchg
cmp
dec
das
fistpll
xor
add
xor
cs
ret
sarl
jp
popf
xlat
adc
xor
dec
mov
sahf
mov
lret
lret
xor
mov
and
add
xor
js
pop
ret
jae
std
cltd
outsl
rclb
stos
mov
adc
mov
mov
mov
inc
lcall
fimuls
neg
aaa
in
push
sbb
pop
dec
sbb
cmpsb
call
jno
shl
mov
imul
insb
std
cmp
xchg
iret
int3
mov
push
or
jg
xor
mov
out
lret
pop
sbb
dec
je
mov
outsb
cwtl
adc
xchg
mov
loop
jbe
add
fidivl
cmp
xor
jmp
data16
pop
sbb
pushf
imul
mov
movsl
xchg
aad
push
mov
pop
push
and
jecxz
insb
sub
or
outsl
mov
and
pop
jb
inc
adc
test
gs
or
sti
sub
inc
mov
outsl
sti
push
in
dec
mov
push
test
rcll
sbb
stc
adc
fldenv
leave
test
sbb
cmp
sbb
xor
add
jns
into
div
popf
xchg
dec
push
inc
jnp
push
mov
push
pop
mov
xor
jo
insb
jp
ror
push
mov
loop
ss
adc
xor
lcall
pop
mov
sbb
mov
or
shlb
mov
inc
lcall
sahf
insb
and
adc
push
jnp
repnz
div
fbld
stos
pop
inc
jle
lods
repz
fdivrl
mov
sbb
out
repz
adc
loop,pt
jnp
fisubl
pop
adc
sub
cmp
lahf
sbb
jp
jns
mov
popf
mov
je
push
shll
dec
and
and
lock
leave
dec
nop
lods
jp
jl
in
mov
cmp
aam
nop
call
inc
clc
push
mov
out
xchg
adc
add
push
pop
xchg
xor
pop
dec
test
and
dec
loopne
iret
sub
aaa
je
dec
cmp
dec
pop
xchg
sbb
push
orb
jae
maxps
adc
dec
mov
nop
dec
in
dec
push
inc
je
mov
mov
pop
inc
loop
sbb
jle
xchg
xor
xchg
xor
ficompl
xchg
testl
push
loop
sbb
js
popf
notl
sub
pop
iret
fdivrp
pushf
cmc
dec
sub
add
nop
mov
loope
outsb
fsubrp
add
dec
jp
cmp
or
in
or
sti
push
add
or
scas
jae
iret
jnp
dec
push
test
mov
outsl
mov
aad
lahf
ja
push
push
and
dec
push
pop
jo
ja
mov
mov
xchg
mov
dec
cmpsb
xor
jle
div
mov
xchg
inc
sbb
mov
or
aad
dec
jecxz
add
sub
mov
dec
cmpsb
outsb
or
mov
pop
inc
mov
adc
sbb
xchg
shlb
mov
movb
cmpsl
lods
pushf
sub
dec
out
sub
sub
xchg
pop
mov
mov
arpl
repnz
lahf
fcoms
push
push
in
mov
popa
outsb
jae
repz
mull
adc
fs
in
imul
arpl
dec
sub
push
fimull
push
mov
mov
jp
out
adcl
push
popf
repnz
push
mov
pop
cmp
lcall
mov
mov
xlat
mov
mov
mov
sbbl
and
mov
jg
decl
in
insl
mul
add
sbb
addr16
les
mov
push
mov
push
lret
ret
pop
rolb
xor
push
sbb
scas
and
in
cmp
in
fisubl
xchg
cltd
stc
or
mov
jns
call
lret
lret
iret
ret
mov
adc
push
adc
pusha
in
jnp
frstor
cmc
xchg
loopne
push
push
push
pop
shll
outsb
or
fsubrl
push
jp
ss
imul
jl
ja
ret
jmp
mov
sbb
push
pop
es
stos
push
sahf
sti
pop
icebp
loopne
mov
adc
enter
mov
leave
sbb
hlt
mov
mov
pop
das
inc
repnz
xchg
mov
sahf
repnz
jne
mov
mov
cwtl
les
push
scas
adc
push
fmul
dec
sbbb
xor
icebp
mov
push
repz
popf
inc
std
sbbl
or
hlt
movb
dec
and
fisttpll
cld
adc
into
and
in
mov
ljmp
push
mov
aam
sahf
mov
outsl
aad
mov
mov
dec
and
jno
frstor
mov
push
leave
rorl
cmp
loopne
fcmovbe
cmp
jbe
mov
add
cwtl
decb
in
cs
int
and
cmp
dec
out
and
jo
sarb
xor
and
xchg
push
aaa
or
or
sahf
cmp
inc
jecxz
jmp
xlat
push
add
dec
repz
rcr
and
sbb
out
in
mov
mov
popa
inc
test
fs
mov
adc
mov
sbb
movsb
lcall
sahf
sub
mov
push
add
dec
sarl
mov
pusha
lods
fdivrl
lcall
in
ljmp
call
xchg
xchg
scas
scas
xchg
jb
mov
cmp
std
js
cmc
nop
in
popf
push
fisttpll
mov
movsl
pop
xchg
sub
loope
loope
das
ror
jecxz
out
aad
cmpsb
jne
cltd
sub
nop
sbb
sarb
sbb
icebp
mov
lcall
cmpsb
push
lret
nop
rolb
jg
dec
add
hlt
jmp
lods
mov
movsl
je
out
mul
xor
add
nop
jo
fiaddl
sbb
mov
mov
dec
test
cmp
mov
ret
jb
add
xor
sti
xlat
adc
push
jnp
outsb
out
pop
and
fsts
and
sub
sbb
xchg
lcall
sub
push
int
scas
jp
push
pop
push
test
rcl
out
pop
inc
data16
repz
aad
pop
mov
addb
and
loop
sub
jle
push
xlat
ds
xor
icebp
sti
cmp
gs
lods
fwait
mov
mov
lods
jge
loope
fistpl
sub
inc
mov
inc
xchg
inc
seto
mov
pop
dec
lahf
js
in
loopne
shr
std
test
enter
test
ljmp
aam
fildll
in
pop
add
sbb
ljmp
cmp
inc
fistpll
loope
jge
or
pop
loopnew
add
add
dec
lods
mov
sti
fcoml
jmp
inc
mov
add
popf
cld
xor
outsl
add
or
push
mov
outsl
aas
test
jecxz
sbb
inc
arpl
push
dec
in
loope
or
mov
movsl
add
out
xchg
icebp
inc
cld
inc
xor
push
cld
dec
negb
je
jbe
lret
mov
push
xchg
push
or
scas
push
sbb
out
lea
cld
xchg
cltd
fdiv
jbe
mov
mov
es
nop
sbb
andb
mov
push
push
or
push
aam
cmp
pusha
push
or
mov
ljmp
std
sbb
lret
and
pushf
mov
test
jge
adc
pusha
inc
pushf
cmc
fnsave
xchg
bound
in
push
les
pop
sbb
mov
adc
and
add
pop
std
nop
repz
jns
test
gs
mov
jmp
idiv
faddl
cmp
or
push
test
xor
cltd
mov
stos
jg
add
add
xchg
lods
mov
jnp
lock
mov
inc
push
push
cmp
imul
push
xchg
inc
ljmp
shll
lret
add
xor
or
sub
and
out
imul
mov
mov
inc
sbb
cmp
lock
sbb
ss
jmp
mov
sub
imul
inc
mov
xchg
aam
push
fistps
add
popa
sub
aaa
pushf
push
int3
add
aam
xchg
dec
push
push
mov
in
xchg
sbb
inc
mov
push
out
jmp
gs
and
daa
jmp
xor
jge
and
orl
jecxz
fwait
mov
nop
clc
dec
das
ficoms
nop
push
fs
adc
mulb
or
shlb
iret
adc
enter
cld
cwtl
xorb
shll
popf
lret
xchg
xor
es
add
out
push
in
bound
jge
sub
xchg
call
pop
sbb
or
cmp
mov
add
or
add
fdivr
pop
lods
pop
push
jae
rcrl
sti
jecxz
xor
pop
int3
lret
aam
je
repnz
fadds
repz
ss
cmp
sub
or
dec
add
and
psubw
inc
mov
std
xchg
push
ja
iret
imull
mov
lods
fs
shrl
repnz
call
sbb
shl
and
cld
adc
jl
lret
ja
loope
mov
in
pop
and
mov
addps
sti
sbb
adc
stc
or
nop
cmpsb
scas
scas
xchg
jns
dec
jmp
fs
popa
xchg
sbb
sub
sahf
hlt
adc
test
cmp
int
jae
shlb
jnp
pusha
mov
in
mov
jmp
lahf
push
xchg
jae
cmc
ret
jmp
mov
lds
pop
xchg
out
movsl
push
pusha
jl
test
stc
and
jb
test
dec
fdivl
fildl
scas
shll
stc
push
xchg
add
jnp
test
sbb
idiv
aad
fdivrl
dec
fldenv
xlat
cltd
cmp
jns
roll
mov
dec
je
or
nop
xchg
mov
cmp
sti
pop
cmc
test
frstor
xchg
ret
add
sbb
je
ja
push
mov
ljmp
cmp
sbb
mov
mov
leave
aad
and
mov
repz
fnstsw
mov
pop
dec
mov
int3
cltd
movsb
sub
mov
pop
das
arpl
lds
add
mov
mov
fadd
or
int3
ds
mov
jp
mov
lea
add
push
xor
jb
shlb
fisubs
gs
adc
mov
and
jns
sbb
insl
cmpsl
xchg
mov
lret
bound
lock
lock
movsb
ret
das
adc
std
fwait
or
push
fildl
scas
pusha
and
mov
dec
je
mov
xorb
je
fcomp
push
jle
sub
jne
int
aas
in
mov
dec
pop
cli
mull
inc
das
dec
orb
nop
sub
iret
cmp
ret
cmp
lods
sub
in
bound
rolb
jmp
cmp
inc
push
dec
or
jge
or
mov
fistpl
jmp
mov
cmpsl
dec
mov
mov
roll
and
xchg
movsl
lahf
ss
imul
insl
adc
scas
push
ficoms
shll
imul
xchg
fs
add
pop
stos
jnp
sbb
les
lret
dec
sub
or
and
outsb
xlat
pushf
dec
in
push
sti
jnp
mov
dec
subl
fsubl
inc
mov
sub
xchg
sti
outsb
jo
mov
push
test
data16
push
lret
pop
insb
lea
js
xchg
push
mov
fxch
cmpl
or
push
fs
and
insb
repz
push
xor
lds
jp
sbb
sbb
outsl
xchg
and
out
insb
jg
push
iret
pop
push
push
inc
xor
jp
adc
mov
mov
sbb
push
test
cmp
xor
outsl
enter
mov
pop
jmp
xlat
mov
mov
or
orl
sub
rcrb
dec
mov
sbb
pop
out
pop
les
jge
shlb
roll
mov
out
jbe
add
lcall
xchg
xor
scas
mov
fdiv
inc
movsl
negb
push
cmpsl
add
lds
decb
mov
sti
inc
xchg
shl
imul
sbb
push
and
or
push
mov
idivb
out
out
ficompl
lahf
and
icebp
push
mov
lea
pop
sub
pop
mov
test
jp
cmc
hlt
enter
sarl
ds
aas
xchg
cmp
sub
shr
jle
sbb
push
aas
es
cmpsl
sub
test
shll
push
pushf
scas
inc
jmp
push
rcll
imul
pop
insl
addr16
mov
stos
iret
push
or
repz
stc
jl
and
jg
push
rep
ss
jbe
sub
or
clc
and
ds
sbb
jbe
int
fs
add
push
push
adc
cmp
in
das
jl
push
xchg
inc
pop
das
lea
mov
mov
ljmp
mov
sbb
sub
adc
or
mov
mov
js
arpl
lds
aaa
pop
dec
mov
jmp
push
fildl
cmpsl
pushf
fstps
xchg
jecxz
jg
xlat
adc
adc
or
push
dec
xor
mov
pop
imul
dec
xor
mov
iret
shll
outsl
and
je
aad
push
in
and
push
stc
jg
out
sbb
push
push
add
roll
addb
xchg
xor
lock
or
xchg
enter
xor
test
sbb
cli
ds
int3
xor
pop
int
cwtl
add
lea
sbb
loope
jae
loop
cmp
mov
mov
in
xchg
std
ss
push
imul
push
xchg
xorl
out
sub
pop
xchg
lretw
or
cmc
dec
jecxz
mov
daa
push
mov
call
pop
inc
inc
mov
jge
fmulp
lret
push
je
sub
xchg
daa
into
sahf
jg
fsubl
push
push
jno
jae
cld
or
or
not
imul
jle
pushf
mov
aam
outsb
ljmp
gs
stos
lcall
int3
leave
xlat
andl
jge
inc
push
sbb
dec
mov
and
ljmp
fs
into
pop
xorb
mov
xorb
pop
adc
lret
xor
jno
mov
sbbb
add
mov
repz
sub
sbb
sub
into
cmpsb
adc
lods
repnz
je
jl
repz
in
ret
xchg
inc
push
pop
ss
fidivrs
add
adc
sarb
sbb
mov
shl
in
and
pushw
xchg
sub
xor
xor
jmp
movsl
push
cmp
ret
lds
adc
aad
inc
and
cmp
push
std
leave
cmp
fildll
insl
dec
xchg
out
dec
out
arpl
pop
mov
pop
or
addb
frstor
sub
inc
push
out
incl
fwait
mov
mov
cmp
and
pusha
xchg
daa
test
test
mov
cld
adc
mov
mov
adc
push
add
enter
add
mov
scas
push
pop
outsb
sbb
leave
repnz
pop
cmpsl
leave
iret
push
xor
push
nop
sarb
in
sbb
pop
xchg
imul
pop
cmc
imul
mov
hlt
sub
cmp
nop
push
or
aad
imul
ss
sbb
and
mov
jno
loopne
mov
jb
cmp
push
mov
pusha
pop
mov
push
idiv
call
lahf
rol
rcr
dec
or
stos
inc
std
add
xor
es
fsubs
xchg
mov
iret
sbb
out
lods
fsubrl
cld
add
inc
imul
inc
out
cmc
fstpl
mov
mov
mov
dec
scas
push
in
scas
mov
jmp
pusha
inc
imulb
rorb
repz
push
nop
lods
and
xchg
rolb
or
orb
sti
imul
dec
call
sub
lock
pop
mov
incb
push
jmp
add
xlat
sti
pop
sbb
pop
leave
pop
scas
rclb
jnp
mulb
push
gs
out
mov
rolb
cltd
loopne
icebp
in
jno
nop
fwait
cmp
fwait
pop
inc
jb
ret
insl
mov
sbb
loopne
out
sti
fxch
push
mov
push
ficomps
inc
imul
insb
imul
mov
add
jb
movsl
sti
icebp
xchg
and
stos
pop
pop
or
add
and
in
rolb
insl
and
mov
outsb
jge
pop
jns
inc
pop
xor
js
jns
cli
cmp
fmull
fs
sti
pop
divb
gs
mov
fisubs
adc
or
aad
fdivp
cmp
cli
ljmp
je
jge
cmp
jge
popa
movsb
adc
outsb
stc
adcl
pop
lea
cmp
jo
scas
jecxz
jl
mov
mov
push
xchg
mov
mov
bound
ret
dec
js
inc
xchg
out
ror
or
sub
xchg
out
sub
outsl
clc
or
insl
mov
cmc
ljmp
pop
mov
gs
repz
adc
lds
push
daa
insl
cmp
add
jle
ret
jle
mov
movsb
push
popa
addr16
test
xchg
lret
cmpb
jecxz
sbb
push
cld
jmp
xchg
and
xchg
sbb
aad
or
xor
addr16
push
or
fsubrs
das
dec
push
xchg
dec
jp
sbb
hlt
les
ss
jnp
inc
ss
aas
jle
add
mov
lea
shl
push
js
es
das
repz
mov
test
pop
mov
cmp
adc
jecxz
rcll
cmp
cmp
add
loope
sub
pop
inc
inc
dec
mov
inc
mov
cs
xchg
push
cmp
sub
adcl
sbb
push
es
lret
mov
adc
pop
cli
pushf
aas
xor
mov
dec
push
xchg
xchg
data16
pop
cli
out
into
aaa
aam
push
add
and
idivb
bound
out
pusha
cmp
sub
inc
les
repnz
sbb
inc
mov
lods
movsb
in
sbb
dec
std
inc
push
inc
pop
xor
lcall
cmp
mov
test
movsl
or
nop
out
mov
push
test
cmp
rcrl
cltd
stos
add
and
jae
jno
orw
mov
out
push
sbb
rolb
or
or
jb
or
mov
pushw
and
xchg
pop
sub
push
inc
jg
cltd
pop
or
mov
pop
mov
xchg
xor
scas
or
adc
cmp
dec
imul
loopne
cmp
ja
mull
cmp
sbb
jecxz
push
jns
mov
xchg
pop
clc
add
push
push
sub
push
outsb
jecxz
adc
stc
pop
or
nop
mov
xchg
int
sbb
ss
jge
mov
ret
add
pop
xor
out
jmp
and
pop
jle
loopne
cltd
in
mov
inc
dec
cld
lods
icebp
loopne
lds
icebp
mov
xor
mov
jle
mov
jl
jnp
fsts
fwait
mov
popa
in
ds
shlb
outsb
xor
sbb
aad
sbb
pushf
adc
test
xchg
lcall
mov
subl
ds
rcll
es
mov
push
dec
sahf
sub
dec
add
xor
xchg
jmp
fwait
mov
push
xchg
add
scas
fsubrp
fidivl
std
repnz
adc
movsl
sbb
rorl
xor
xchg
sbb
or
pop
adc
xchg
lods
inc
movsl
xor
stos
xchg
push
rorb
jl
mov
xchg
fisttpl
cs
add
xchg
loop
insb
pop
cmp
shl
mov
adc
dec
inc
inc
push
sub
mov
mov
mov
jno
sub
and
dec
insb
shl
fs
add
xor
push
pop
mov
add
insl
out
push
xchg
xchg
sbb
mov
in
enter
jns
fwait
mov
sbb
test
popf
iret
aam
shlb
dec
sub
mov
or
sub
and
leave
xchg
ds
adc
js
adc
push
imul
cmp
cmpsl
sbb
movsb
fisttps
jns
push
adc
xor
inc
sbb
xor
adc
or
add
loop
adc
and
fwait
pop
out
repz
cld
dec
out
xor
xchg
cltd
fisubs
je
sbb
mov
cmp
int
xor
adc
scas
or
icebp
cltd
fstpl
cmp
sbb
stc
pop
aaa
xor
mov
aad
jno
mov
dec
lret
lea
push
inc
mov
cwtl
dec
pop
push
push
ja
cmp
adc
push
sub
xchg
data16
and
adc
xor
fsubr
scas
inc
in
lock
mov
or
add
mov
push
out
jp
push
xor
lret
or
stc
sbb
add
and
ds
or
cmp
lret
aaa
stc
xchg
out
fildll
dec
jl
xlat
xor
mov
test
jae
nop
xchg
xor
pop
lea
add
mov
adc
pop
lods
pop
call
mov
int3
lea
mov
jge
in
xor
mov
movsb
fnsave
push
sub
xor
sub
push
adc
cmpsl
or
aad
in
mov
aas
or
cltd
daa
out
je
mov
test
mov
ds
push
daa
loop
movsb
add
xchg
jb
sub
jno
ret
sahf
jl
or
mov
subl
xor
ror
pop
mov
pusha
dec
inc
inc
mov
lahf
popf
test
repnz
xchg
adc
aas
mov
outsb
inc
and
scas
lods
jmp
push
adc
fcoml
add
pop
mov
ret
mov
out
test
xchg
or
cmp
pop
mov
push
cmp
mov
dec
adcl
or
add
out
aam
inc
and
ds
test
mov
setae
add
call
cmp
cmp
jmp
push
loope
cmp
mov
stos
lret
cmpsl
sub
mov
cmc
mov
ret
jg
mov
dec
in
jecxz
sbb
adc
or
pop
imull
mov
adc
adcl
cmpsl
add
mov
pop
push
and
pop
repz
lret
mov
cmc
adc
je
lods
mov
jns
mov
pop
cltd
pushw
cmpsl
out
sbb
jae
jl
inc
add
inc
cld
ljmp
movsb
aaa
insl
ret
and
sarb
mov
pop
movsb
push
scas
fdivrl
jge
andl
or
imulb
orb
pop
cmp
ficoml
lret
inc
je
insl
out
cmpsl
mov
data16
inc
inc
dec
cmc
push
jmp
rcrl
pop
inc
lock
adc
push
nop
int3
aaa
in
dec
fwait
aas
and
test
iret
ss
aam
in
iret
pop
nop
xor
cmc
lods
dec
pop
or
fbstp
cmp
jo
mov
and
in
xor
fstpt
ja
iret
dec
mov
push
or
sub
fwait
adc
imul
or
popf
or
fsub
mov
push
pusha
jmp
idivb
jne
pop
push
out
pop
sbb
rcrb
ds
fnsave
out
pop
push
dec
xchg
sbb
push
nop
aam
aaa
fsubp
mov
push
cmp
dec
push
loope
mov
imul
in
mov
call
pop
push
sub
mov
into
lcall
movl
dec
fiaddl
sub
jb
push
xor
shrl
fisubrs
sub
stc
adc
in
mov
jne
das
test
out
out
imul
ds
or
lea
or
inc
push
sub
shrw
fs
lods
js
ja
mov
leave
mov
sarl
push
repz
mov
leave
add
sub
lcall
lret
adc
sbb
add
leave
dec
fisttpl
out
imul
add
push
aas
mov
rcll
pop
push
addr16
in
push
xchg
xor
pop
addr16
sahf
dec
cmpsb
dec
xor
nop
jbe
inc
js
loope
inc
dec
js
scas
dec
mov
cmpsl
lcall
fstps
sub
call
xor
insl
adc
adc
inc
fsubs
mov
or
std
sub
jg
loopne
cmpsb
imul
mov
mov
pop
fwait
dec
outsl
negb
cwtl
xor
in
dec
andb
lods
xchg
and
daa
mov
idiv
lcall
mov
in
cmpsb
pop
mov
mov
add
ret
pop
or
or
push
jge
sub
xchg
in
add
push
lds
mov
outsl
nop
pop
jbe
stc
dec
sub
lea
aaa
nop
les
out
or
inc
iret
dec
imul
dec
out
lds
mov
fs
sti
cmpsl
pusha
addr16
lret
jo
pop
out
stos
fimuls
jns
xchg
sub
fsubl
in
xor
add
aaa
lea
daa
push
sub
pop
sub
fcomps
daa
mov
adc
sub
mov
dec
rcl
stos
sbb
movsb
pop
ljmp
xchg
in
clc
mov
mov
mov
dec
stc
stos
pop
loopne
inc
data16
lcall
and
push
adc
fs
pop
mov
lock
arpl
sub
push
xor
popa
cmp
andb
iret
add
lods
js
mov
mov
es
push
aad
adc
hlt
repnz
jl
test
hlt
jmp
sub
aaa
les
or
dec
mov
mov
fstpt
xor
daa
movsb
into
pop
mov
sbb
outsb
incb
sbb
xchg
mov
or
cmpsl
mov
mov
push
adc
mov
out
pop
test
xchg
push
xor
mov
mov
test
sub
sahf
mov
sbb
mov
into
inc
sti
inc
adc
push
sub
clc
or
loopne
in
dec
xor
cmp
js
cmp
add
and
and
inc
push
mov
in
mov
xor
aas
cmc
int
xor
push
dec
pop
and
fwait
sbb
mov
or
aas
or
shl
and
push
test
decl
ss
push
stc
dec
sub
dec
into
test
mov
repnz
push
dec
sbb
dec
testb
add
std
mov
jno
dec
or
lea
sbb
inc
mov
sub
cmpsb
out
mov
pop
inc
cmp
cmp
or
mov
les
hlt
push
or
inc
and
enter
add
pop
insb
xchg
xchg
jge
pop
push
dec
es
inc
dec
ret
or
idivl
push
dec
mov
orb
shr
std
adc
inc
cltd
pop
bound
nop
pop
fdiv
adc
push
mov
test
xor
add
or
mov
inc
outsb
scas
sbb
int
inc
stos
int3
aam
xchg
mov
out
stc
cmp
int3
cld
jb
push
stc
ret
pop
mov
mov
jle
out
popa
push
rolb
outsl
hlt
arpl
clc
arpl
outsl
imul
lret
inc
sbb
stc
aam
stc
mov
mov
insb
rcrl
xchg
int
leave
hlt
pop
push
pop
pop
sub
cli
jle
dec
out
push
jge
lods
popl
adc
dec
xor
xlat
push
sbb
arpl
out
clc
push
es
jl
push
xor
mov
jae
das
sub
imul
mov
imul
fisubs
iret
sbb
das
ljmp
mov
clc
sub
add
or
and
sarl
pop
pop
pop
and
adc
cmp
inc
sub
pop
push
jno
push
sub
push
daa
lock
jle
out
daa
mov
pop
lahf
hlt
add
scas
loop
fmull
xor
imul
jo
les
nop
mov
dec
cmpsb
scas
cld
faddl
hlt
jl
stos
ja
popf
pop
mov
insb
mov
sahf
cltd
sub
sbb
in
jbe
push
cld
push
pop
push
sahf
or
xorl
in
and
leave
push
outsl
loopne
xchg
mov
add
in
fisttps
sbb
inc
mov
cwtl
cmpsl
sbb
stos
lret
xchg
mov
or
ret
enter
pop
orl
jp
push
or
mov
pop
mov
out
xor
gs
push
or
adc
in
push
aam
int3
dec
fwait
mov
js
jno
inc
adc
or
loop
out
cmp
xor
jne
push
mov
push
xchg
xchg
int
sub
mov
ret
jle
ret
jbe
xor
das
jo
lds
add
pop
lods
add
arpl
sub
and
xor
jb
loope
js
dec
stos
xor
shlb
das
pop
mov
pop
and
push
pop
dec
shlb
inc
shrb
cmp
sti
inc
ljmp
pop
sbb
and
loope
and
cmpsb
cltd
cmc
mov
xor
outsl
inc
adc
push
cmpsl
or
pusha
mov
aaa
out
xchg
sub
mov
pusha
mov
loopne
in
jg
jo
xor
sub
fists
loope
pusha
pop
outsb
jnp
mov
mov
jge
sub
push
mov
pusha
mov
mov
fists
cmp
xor
outsl
pop
sbb
jae
add
adc
in
xor
and
add
mov
sub
mov
cmpsl
bound
ret
inc
xchg
aas
pop
pop
mov
ret
sbb
sbb
cmp
lcall
and
pusha
enter
xchg
fs
imul
mov
aad
mov
fdivrl
negb
adc
cmpl
lahf
pop
cmp
and
mov
sarl
pop
mov
jb
es
stc
nop
daa
dec
push
roll
and
inc
and
mov
inc
dec
pop
pop
xchg
cmp
pop
pusha
out
inc
cltd
lock
jp
imul
mov
sbb
sbb
mov
sahf
pop
mov
pop
std
or
cwtl
call
dec
aam
xor
add
mov
or
ror
xor
push
lret
and
scas
lcall
shrl
out
or
add
loop
int3
adcl
pop
pop
sub
movsl
pop
cwtl
adc
push
scas
mov
inc
fsts
sti
cmp
dec
pandn
pop
jg
movsl
lahf
sub
and
sbb
sti
dec
add
andl
sub
in
scas
pop
scas
inc
adcb
mov
movsw
sbb
inc
mov
in
dec
mov
or
dec
or
cmpb
fbstp
mov
pop
in
xchg
daa
in
push
xchg
or
dec
mov
cmp
adc
mov
jnp
mov
add
inc
xlat
in
lahf
into
imul
xor
sbbl
in
je
imulb
push
in
inc
fdivrl
xor
movq
out
mov
les
inc
pop
inc
mov
insl
cmp
add
xchg
std
mov
dec
pushf
adc
ret
inc
lret
push
dec
mov
movsb
test
mov
mov
adc
mov
xchg
push
and
ret
xchg
xchg
cmp
sub
jg
orl
popa
lcall
repz
out
dec
pop
dec
dec
arpl
bound
data16
inc
dec
shll
ss
pushf
hlt
insb
les
cltd
or
xor
popf
cmp
enter
es
cmp
out
cmp
adc
pop
pusha
popa
stc
mov
mov
cmp
imul
pop
pop
lret
lcall
fdivrl
and
in
mov
xor
movl
add
jne
sbb
jg
cld
hlt
fwait
das
push
shr
incl
push
enter
stos
mov
pop
imul
mov
cmp
jp
lods
aad
icebp
pop
pop
xor
aad
sub
ss
popa
xor
hlt
xchg
dec
daa
mov
dec
pop
sbb
mov
bound
inc
loopne
xor
cmp
dec
jne
push
mov
xor
fbld
rcr
inc
test
mov
jge
imul
sub
fistps
scas
jp
xor
sbb
test
xchg
cmc
les
push
insl
jbe
cmpsb
mov
iret
jbe
inc
daa
dec
aad
imul
imul
or
cmc
cwtl
pop
mov
aas
shll
add
pushf
dec
cmp
roll
mov
repnz
or
pop
inc
push
repnz
lcall
cmp
pop
adc
jl
or
mov
and
imul
and
notl
daa
lea
mov
push
dec
ljmp
sub
jecxz
sti
imul
pop
insb
in
push
xchg
out
inc
enter
cs
aaa
arpl
sub
clc
jnp
cmp
jo
shrl
mov
inc
jmp
push
leave
dec
mov
loop
mov
or
or
mov
adc
sahf
call
icebp
pop
inc
or
loopne
push
lds
sahf
les
test
mov
lahf
in
adc
sub
push
cmp
lret
sbb
cli
jae
daa
jge
add
je
pop
mov
xor
cltd
mov
add
fiadds
fwait
out
push
lahf
pop
push
stos
dec
cwtl
shl
push
test
jbe
out
icebp
ljmp
cld
jns
ret
nop
out
mov
movsb
push
cmc
repnz
jo,pn
add
mov
mov
mov
jmp
xlat
inc
adc
inc
lds
out
xchg
pop
xchg
aas
inc
xor
sahf
mov
add
mov
inc
dec
fsubrl
popf
xchg
decl
stos
xchg
jbe
addr16
cmpsl
jo
ret
ljmp
push
pop
xor
push
mov
test
mov
idivl
sbb
mov
out
fxch
mov
je
adc
adc
test
stos
sar
mov
aas
insl
cmp
mov
mov
cmp
mov
pop
inc
inc
add
push
nop
mov
stc
inc
dec
je
sbb
mov
and
xor
mov
pop
cs
sub
shrb
sub
xor
sub
xchg
xor
pop
mov
mov
sub
pusha
sahf
xchg
dec
js
jl
in
test
cmpl
cmpsl
jns
ret
stos
xor
dec
inc
push
pop
jle
mov
ret
ds
insb
pop
inc
inc
sbb
aaa
scas
or
orb
stos
movsb
test
mov
icebp
jg
mov
test
aad
imul
popa
add
push
in
mov
add
rcl
or
pop
scas
dec
fildll
shr
adc
add
lret
scas
adc
xor
mov
pusha
fs
jns
aad
push
adc
push
shll
out
insb
pop
fadd
push
cmp
push
lea
cmp
pop
into
or
lcall
dec
lea
jecxz
out
xlat
dec
sbb
inc
in
cli
jno
xor
jne
xchg
jns
es
outsl
mov
out
sbb
js
jp
inc
int3
cltd
rorb
call
push
cmp
fldt
clc
or
sub
push
inc
mov
jne
pop
xchg
push
sahf
lahf
inc
sub
xchg
aaa
jae
inc
fdivrs
mov
xor
mov
push
push
jne
pop
and
sbb
and
pusha
cmp
scas
inc
pop
push
mov
cmp
jb
lret
aaa
push
mov
test
push
pushf
push
in
data16
mov
in
inc
mov
shl
cmp
popa
mov
addr16
lea
jnp
xchg
xchg
add
cmp
adc
daa
fisubs
or
inc
pop
aaa
mov
stos
lahf
jecxz
rcll
jecxz
push
out
sbb
push
out
xor
mov
hlt
sub
in
sbb
mov
pop
xor
jo
pushf
or
add
fldcw
dec
mov
mov
cmpsb
movsb
pop
xor
lea
pop
test
outsb
out
aas
in
std
push
fisttpll
jo
cld
aam
insl
push
cmp
adc
rcr
sub
sti
mov
shll
sub
pop
cmp
jmp
or
xchg
pop
xor
sahf
insl
aad
inc
inc
dec
mov
push
push
inc
mov
lcall
pop
test
cmp
adc
dec
xor
adc
jp
sarl
sub
fiadds
xchg
mov
out
addl
push
ss
add
mov
xor
xor
cmp
and
and
push
test
ja
add
xlat
pop
dec
ja
or
cmp
iret
cmp
push
aam
dec
xlat
push
shl
lock
sbb
sarb
add
ficoml
stos
xchg
xor
add
scas
inc
sti
and
or
ljmp
fstpl
and
mov
pushf
fs
push
and
push
call
or
cmp
std
in
bound
push
aad
or
sbb
aad
and
jo
xchg
mov
pop
adc
stos
repz
jae
sbb
lds
jp
jp
inc
frstor
bound
or
popf
sub
lahf
testl
dec
into
leave
js
or
fwait
loopne
mov
dec
sbb
dec
fcoms
ret
pop
gs
int3
mov
dec
lret
mov
inc
add
push
inc
fdivrs
pop
add
push
and
push
hlt
push
roll
mov
sti
scas
es
cmp
add
icebp
mov
test
jns
jle
ficoms
cld
mov
pop
loopne
adc
jbe
les
test
iret
xchg
sbb
sbb
fadd
mov
das
pop
jno
and
scas
test
adc
bound
xchg
xchg
jp
aam
cmp
mov
lret
and
in
xchg
jle
or
mov
push
or
test
push
aam
sbb
sbb
xchg
inc
fs
and
jbe
call
repnz
mov
jge
cltd
cmp
pop
dec
aaa
ds
jnp
xor
adc
jnp
dec
mov
sub
adc
cs
cmp
pop
lret
test
xor
push
out
dec
and
mov
into
jmp
sbb
xlat
int3
xor
or
lds
insb
incl
test
insl
jne
in
push
mov
mov
xchg
dec
cmp
mov
in
sbb
fs
sbb
aas
xchg
pop
push
or
pushl
adc
xor
aad
push
push
ret
movsl
xchg
mov
inc
loopne
fildl
push
push
cli
sbb
out
jne
jg
pop
xor
in
sarl
xchg
xchg
push
push
xor
inc
sub
fnstcw
stc
xor
pop
movsl
into
and
jnp
ja
imul
hlt
mov
add
sbb
inc
das
push
movsb
nop
movsb
rclb
adc
mov
push
push
sarb
pop
sub
in
es
dec
movsl
jno
cli
add
movsl
test
scas
ss
addr16
iret
lock
lcall
aaa
adc
jnp
rcrl
xor
add
pushf
mov
inc
sub
in
adc
pop
mov
loopne
ljmp
mov
lahf
cmpsb
movsl
add
xorl
adc
or
orl
lds
adc
push
imul
pop
mov
int
std
mov
mov
stc
add
jmp
rcll
arpl
cmp
movsb
gs
negb
ret
xchg
out
push
xchg
add
lret
flds
ficoml
movhps
jns
push
xor
mov
repz
xor
ret
andb
outsb
xlat
or
mov
add
mov
lds
lret
aas
mov
add
mov
push
and
cmpb
test
push
out
mov
shlb
pop
fsubs
lahf
jbe
test
hlt
pop
hlt
mov
lahf
js
sbb
sub
outsl
jg
adc
aam
cld
scas
fldt
shrl
movl
stc
sarb
xchg
int
decb
cld
fldt
jle
mov
nopl
sub
jo
and
inc
sahf
jae
xchg
lahf
pop
mov
add
movl
and
mov
pop
cs
outsl
mov
push
xor
lods
adc
jnp
stos
ret
popa
add
and
push
mov
bound
adc
cli
and
loope
dec
xor
xor
mov
int
xchg
push
ljmp
inc
mov
push
pushf
mov
mov
or
icebp
fidivs
rcr
lea
jae
jbe
xor
sub
out
leave
cmp
pushf
gs
jge
cmp
ret
rol
test
iret
jne
xor
jno
sbb
mov
mov
mov
idivl
icebp
fildll
fnstenv
arpl
ss
add
mov
fs
movsb
and
mov
fnstcw
or
mov
adc
mov
mov
les
sbb
mov
test
clc
jmp
mov
in
test
fnstcw
inc
add
dec
jne
add
or
dec
dec
mov
sbb
fs
push
cwtl
lds
add
push
mov
pop
jmp
jo
mov
adc
mov
lods
rcrb
add
dec
mov
or
lret
test
push
ret
in
test
push
mov
ja
jo
fsts
stos
in
movsb
mov
es
movsb
in
mov
and
jnp
ret
in
fdivrp
ds
enter
push
ret
pop
and
jne
pop
sbb
nop
sub
aas
adc
sti
test
out
inc
cmpsl
pop
push
pop
push
test
dec
pop
push
adc
inc
std
pop
std
scas
je
sbb
adc
cmc
pop
lahf
call
popf
mov
ret
pushf
and
xchg
rcll
fucom
and
aad
pop
xchg
add
inc
clc
inc
inc
adc
bound
push
in
rolb
imull
xchg
mov
xchg
ds
jp
pop
stos
imul
insb
mov
ss
iret
imul
xor
or
sub
setns
fdivl
mov
lret
mov
mov
cmp
bswap
sub
pop
or
ljmp
mov
decl
mov
mov
push
enter
mov
xchg
mov
push
mov
mov
add
js
pop
sahf
pop
lret
xor
xor
mov
jns
xor
jns
push
sbb
rorb
repz
aas
stc
aaa
pop
add
jg
shl
dec
push
cmp
jg
pop
push
ljmp
pop
imul
scas
jns
mov
loop
lret
stos
leave
mov
outsb
out
sub
movsb
rcrl
sti
or
push
shr
pushf
mov
inc
imul
pop
repnz
push
pop
and
push
adc
test
xor
pop
fwait
adc
lea
stos
test
jns
mov
enter
orb
iret
push
scas
inc
adc
adc
mov
dec
jae
cmp
jmp
popa
fs
mov
jns
push
and
push
add
fcomps
loop
mov
es
sub
insl
pop
mov
je
xchg
push
loope
cmp
cmc
pop
pop
into
test
cmp
mov
sub
cwtl
jne
das
jecxz
rolb
js
movsl
into
push
addr16
mov
lcall
mov
fwait
sub
lods
bnd
fists
ret
xor
mov
cld
rcll
aaa
push
ret
dec
sbb
sahf
xlat
mov
test
test
outsl
lcall
inc
mov
push
jecxz
push
icebp
push
test
push
cltd
mov
inc
cmp
sbb
pcmpgtw
insl
rorl
cmp
or
add
cmc
xchg
jns
xor
cmp
movl
cmpsb
adc
pop
push
or
fmul
cwtl
fdivs
jae
xor
mov
data16
roll
testl
sbbl
mov
and
dec
popf
leave
and
andl
js
jnp
out
sub
icebp
jo
int
ret
adc
nop
ja
jne
mov
ja
xor
or
insb
adc
cmp
aad
sbb
inc
sub
ss
gs
add
sub
mov
in
cwtl
mov
jbe
sub
dec
and
xor
test
jecxz
ljmp
lcall
test
push
xchg
sbb
sub
imul
sub
loop
fsubrl
or
push
addr16
mov
add
jecxz
enter
inc
sti
dec
into
daa
xchg
push
push
rcrl
popf
jecxz
aam
aas
ljmp
mov
cli
sahf
movsl
test
lods
dec
cmp
and
sarb
and
mov
ljmp
popf
scas
adc
sbb
roll
adc
int
scas
arpl
pop
movsb
int
and
outsb
mov
enter
xchg
mov
add
xchg
rcrb
gs
rolb
push
xor
jns
jno
push
and
mov
sub
mov
lock
fcom
mov
adc
and
addr16
cmp
cmp
cwtl
outsb
shl
add
jp
loop
and
iret
inc
ds
mov
mov
repz
dec
lahf
lock
in
push
pushf
mov
mov
xor
xchg
lea
loope
xchg
imul
popf
popa
aam
lods
sbb
mov
jp
testl
bound
inc
mov
add
push
test
xchg
adc
mov
cmc
pop
fdivs
xor
repz
mov
iret
test
into
dec
fbstp
jp
pop
cmc
fs
jmp
fldt
movsb
jp
pop
test
pop
scas
fucom
pop
sub
subb
scas
jle
scas
inc
rorl
push
test
addl
fdivrl
xchg
inc
fildl
cs
push
clc
andb
cmp
jecxz
push
sahf
out
cmp
and
sti
out
fnstsw
dec
and
movsb
push
bound
xor
push
cmp
and
pop
lods
imul
bound
xorps
das
push
xchg
loope
push
inc
pushl
adc
shrl
mov
mov
pop
xor
mov
mov
sbb
popl
sub
mov
adc
outsb
imul
orl
adc
xchg
lods
in
cwtl
add
mov
mov
jle
dec
mov
xchg
inc
jo
xchg
pusha
leave
mov
outsl
push
movsb
je
pop
xchg
jnp
mov
adc
aad
sti
inc
stos
adc
cmp
mov
jae
push
cmp
daa
frstor
push
fisttpll
sub
or
test
cmp
lahf
push
mov
pop
shrb
je
inc
cmpsb
fcoms
std
xchg
xor
stc
push
movl
xchg
adc
jne
dec
mov
roll
aas
je
cmp
jns
cmp
pusha
mov
cmp
cld
enter
lret
bound
enter
xchg
pop
mov
mov
mov
inc
mov
aas
mov
lods
pop
push
mov
mov
cltd
inc
adc
stos
push
inc
lods
mov
nop
pop
mov
iret
adc
add
loope
jg
lret
or
aam
int
sub
out
sti
sub
xchg
xor
out
in
iret
mov
movsb
adc
out
insl
or
xor
stos
or
ret
movsb
jae
cmp
es
lods
or
mov
inc
or
dec
test
scas
repnz
jecxz
mov
std
push
xor
repnz
test
mov
fwait
add
mov
ror
sbb
jmp
lahf
inc
cld
mov
les
xchg
fcmovnbe
push
aas
adc
aaa
mov
push
js
popa
out
lcall
movsl
jmp
push
pop
mov
rclb
jg
insb
mov
testb
mov
mov
daa
lret
lret
test
movsl
outsb
add
jns
mov
mov
or
pushf
out
cli
and
inc
jge
or
lock
es
repnz
les
cmp
dec
lds
push
orl
les
hlt
stos
movsl
xchg
push
push
mov
pop
lods
push
shl
or
or
movsb
das
push
fnstsw
call
lret
push
mov
in
pop
decb
addl
icebp
idivb
ret
es
sbb
adc
pop
mov
dec
or
iret
pop
movsb
push
cwtl
inc
sbb
cmc
cli
rcrl
in
fidivs
ss
js
cld
fldcw
fcompl
push
xor
aas
jb
fdivrs
xor
enter
cld
cmp
cmp
push
leave
push
jnp
jae
push
push
in
mov
mov
xor
addr16
data16
sub
outsb
jno
jg
push
popf
jnp
xor
mov
movsl
inc
mov
or
push
fnstsw
or
repz
ret
xor
push
mov
ljmp
xor
jne
popa
nop
jns
dec
je
or
in
stos
push
cmpsb
push
push
xor
dec
jae
loopne
roll
nop
push
es
shlb
sarb
and
inc
imul
cli
sub
jmp
xchg
cld
addr16
pop
xchg
add
jbe
mov
jnp
daa
in
gs
xor
inc
pop
sub
jl
mov
fiaddl
and
decb
add
ret
scas
popa
sub
repz
js
pop
je
mov
rcrb
cmp
out
mov
mov
xchg
imul
lret
inc
cltd
in
cltd
imul
mov
movsl
inc
adc
imul
repnz
and
xor
jge
inc
scas
popa
call
ja
addr16
aas
adc
bound
jle
sbb
xchg
cmp
and
das
mov
adc
sbb
pushf
rclb
and
sub
inc
cmpsl
adc
sub
pop
xchg
sbb
mov
xor
cmp
rcr
shlb
dec
je
dec
sbb
push
daa
mov
aaa
loop
sbb
lods
jnp
mov
add
lods
sub
jge
push
inc
pop
fdivrl
jbe
adc
inc
outsl
sahf
adc
btr
std
repnz
or
mov
cmc
pop
jne
fucomip
sbb
and
pop
jns
loop
inc
je
orb
jne
call
int
aas
int3
push
stc
jmp
lcall
sbb
jge
out
in
xchg
or
xorl
dec
mov
mov
push
pop
push
push
inc
icebp
out
fnstsw
outsl
jmp
xlat
insl
test
arpl
xchg
mov
das
sub
outsb
mov
icebp
adc
sahf
loop
mov
lea
ret
faddl
scas
outsl
outsl
xor
jae
pushf
adc
pop
xor
jl
or
cli
jecxz
lods
test
popf
cmp
jg
lret
mov
btr
sub
shlb
pop
mov
xor
and
andb
in
adc
nop
ja
call
jp
jns
push
out
and
into
in
and
adc
and
dec
enter
xlat
rol
std
push
and
scas
test
push
loopne
pop
addb
jg
push
pop
out
dec
lods
test
xor
sbb
and
push
cmp
mov
cmpsl
and
or
dec
addr16
sub
xchg
and
pusha
mov
mov
into
cmpsb
cltd
bound
data16
adc
cmpsl
dec
clc
lods
jnp
or
xlat
pop
sub
push
int
dec
xor
add
int3
and
mov
or
jmp
mov
test
sbb
sti
aam
lea
shll
xor
mov
adc
arpl
cmp
pop
push
or
add
adc
outsl
out
leave
and
adc
jnp
shll
movl
sub
insb
int
ret
lods
sub
stos
sub
or
mov
mov
adc
jnp
and
xchg
testl
les
push
pop
cmp
inc
pop
test
rolb
out
aad
lcall
jno
add
xchg
jmp
push
dec
cwtl
in
jle
sbb
jae
inc
push
adc
nop
adc
loopne
sub
sahf
sub
jb
or
dec
rorb
cld
xchg
rorl
ja
pop
jne
dec
cli
xlat
inc
fstp
pop
pop
mov
adc
jae
inc
jmp
xchg
popf
jp
push
fnstsw
flds
rcrl
sub
inc
test
push
jbe
dec
pop
mov
aad
pop
xchg
mov
fsts
clc
jp
and
fs
dec
test
in
cmpsb
sbb
lock
out
nop
daa
test
pop
test
inc
dec
pop
movsb
subl
xchg
sbb
pop
out
cltd
inc
insb
adc
lahf
std
loopne
pop
or
adc
ljmp
xchg
push
jecxz
das
mov
outsb
stos
pop
mov
rep
adc
divb
and
and
push
vpaddsb
mov
push
pop
jns
es
cld
sbb
outsl
hlt
sub
pushf
inc
mov
dec
dec
push
cmc
add
iret
std
clc
testl
aaa
rorl
adc
xchg
std
loopne
mov
sbb
pop
lahf
adc
add
cltd
out
sbb
clc
scas
mov
loope
inc
imul
into
outsb
mov
or
int3
andl
in
dec
mov
dec
dec
add
push
inc
popf
shll
lds
mov
ret
into
aam
xchg
mov
scas
xor
arpl
mov
repnz
scas
inc
out
jbe
inc
cmp
test
or
lret
addr16
push
pop
rorb
inc
int
dec
cmp
jb
xor
push
mov
aas
fwait
addr16
jecxz
xchg
enter
aaa
pop
es
lahf
gs
aad
push
sbb
sub
insb
mov
mov
lret
mov
jle
enter
int3
lret
jmp
stos
pop
mov
xor
out
push
cli
pop
and
sub
add
mov
mov
jmp
das
and
pop
test
mov
pop
mov
hlt
jne
sub
jmp
in
test
fucomp
out
adc
stc
not
fcmovu
iret
imul
cld
je
orl
mov
imul
idivl
mov
mov
sbb
aas
dec
mov
mov
rcr
daa
shrl
int
push
mov
fidivs
mov
filds
out
stos
stos
cmp
int
and
test
orl
arpl
mov
jns
insb
stos
pop
adc
and
mov
fs
clc
das
lods
sbb
cmp
popf
std
rcl
adc
inc
cmp
nop
cmc
popa
ja
mov
or
adcb
dec
and
cmp
cmp
test
js
dec
test
mov
jnp
push
mov
test
dec
rcrl
inc
mov
jne
lahf
inc
mov
mov
in
lea
mov
gs
sbb
lea
andl
or
push
fwait
popa
icebp
imul
or
in
xchg
fldt
out
inc
jge
rclb
fdivrp
mov
fwait
mov
ficoml
daa
xchg
movsb
enter
scas
stc
cmc
and
jl
test
js
dec
repnz
ja
les
mov
out
inc
aaa
js
ret
in
or
or
push
sbb
jl
push
sub
mov
push
sbb
es
adc
xor
shll
mov
dec
imul
aaa
sti
pop
mov
repnz
mov
sbb
adc
fdivl
cmp
sub
xor
cmp
adc
es
outsb
fistl
cmp
lods
data16
push
and
cltd
inc
loope
pop
push
sub
sahf
push
mov
movsb
inc
int
test
in
std
fcmovnu
jp
stos
sti
int
mov
insb
dec
push
out
and
push
clc
mov
call
mov
xchg
mov
mov
test
lret
push
out
fwait
jl
push
testb
stos
pusha
out
das
js
mov
mov
out
iret
push
xchg
sbb
scas
add
xchg
cltd
shl
inc
sub
cmp
sbb
in
int3
fistpl
js
xchg
and
mov
int
scas
adc
mov
or
cli
pushf
push
aas
adc
icebp
push
ficomps
jmp
mov
jns
mov
mov
push
enter
jb
adc
push
sbb
mov
mov
jmp
jns
pop
dec
loope
push
aad
in
shlb
push
jbe
and
xor
add
pusha
lea
mov
or
arpl
or
into
stos
push
int3
adc
xlat
in
pop
dec
mov
ret
insb
scas
add
shrl
mov
movsl
les
in
xchg
xor
mov
and
and
outsl
and
outsb
scas
mov
mov
xchg
or
xor
sbb
push
bound
loope
pop
or
mov
mull
adc
fdivs
cmpsb
mov
push
add
mov
xchg
cmp
xor
cli
add
sbb
pop
repnz
fcompl
push
inc
or
mov
adc
pop
add
jmp
add
jmp
test
add
mov
cltd
les
dec
xchg
push
jg
aam
scas
add
cld
mov
adc
fwait
leave
sub
cld
pop
into
jns
push
cli
loope
stos
lods
sub
lahf
push
sub
xchg
push
incl
cli
xor
cmp
popa
and
sbb
in
xor
arpl
jno
sahf
push
dec
mov
adc
adc
push
ret
mov
push
jecxz
and
int3
inc
movsb
jp
in
push
mov
test
pop
or
inc
fwait
or
cmp
pop
stc
int3
test
enter
popf
test
or
sbb
xchg
repz
xchg
aad
xchg
xor
cwtl
int
mov
sub
mov
xchg
loopne
add
stc
arpl
scas
inc
fs
fwait
dec
add
push
sti
mov
test
xorl
sti
or
add
outsb
adc
push
push
subb
inc
std
xchg
outsb
int3
orb
loope
push
xor
lahf
jecxz
jae
test
test
aaa
int
in
mov
jle
ficompl
mov
mov
push
xchg
or
mov
movsl
fidivrs
xor
jne
sahf
stc
in
shll
lea
sub
cmpsl
scas
inc
cmc
cltd
imul
fstpl
cmp
std
mov
scas
es
sub
lahf
insb
test
jb
aas
and
pop
xchg
cmp
mov
aaa
lods
push
lock
pop
jmp
outsb
jno
or
in
aam
pop
push
pop
in
mov
jno
xchg
mov
mov
jnp
sahf
mov
push
fdivl
mov
mov
lahf
push
push
faddl
in
fwait
push
jl
adc
popf
adc
dec
or
pop
lods
xor
jmp
cmp
push
cs
inc
mov
fcomps
cmp
incb
rorb
out
xchg
repz
pop
inc
xchg
enter
xchg
cmp
popf
and
aad
ret
insl
in
adc
in
imul
mov
adc
mov
push
pop
addr16
xlat
push
xchg
xor
fstpt
insb
mov
inc
testb
addr16
js
lods
adc
xchg
xor
dec
mov
out
ljmp
jle
inc
jo
jge
push
push
leave
aas
stos
filds
sub
add
cmc
mov
out
xchg
adc
mov
scas
mov
add
add
insl
sar
mul
sub
push
mov
pop
mov
lea
stc
mov
pop
aad
xchg
mov
dec
xor
lret
cwtl
mov
shrl
lcall
out
and
mov
xor
lret
push
call
mov
lods
aad
aaa
xor
adc
sbb
pop
push
add
push
push
push
xlat
or
leave
mov
pop
lds
cmp
sarl
cmp
mov
lret
mov
cmp
movsb
sbb
push
shll
mov
ret
add
popf
js
xchg
dec
mov
in
sbb
jp
mov
adc
loop
out
adc
out
mov
pop
mov
mov
lds
aad
mov
rol
push
aas
rcrb
fnstsw
cmp
add
repnz
mov
push
cwtl
out
icebp
mov
push
push
pop
lret
lods
mov
mov
outsl
xchg
adc
arpl
xchg
pop
test
fsub
shl
fists
sub
jo
add
inc
sbb
cmpl
repnz
into
add
pop
cmc
movsb
lret
stos
pop
into
mov
repz
lahf
roll
repz
fs
pop
or
push
add
mov
xor
ficomps
jae
xchg
inc
inc
push
lahf
out
add
sbb
dec
nop
cli
mov
add
xchg
mov
dec
inc
push
sti
xchg
mov
pop
sub
or
pusha
repnz
cmp
popa
faddp
and
scas
xchg
repz
stc
lret
and
imul
out
shl
mov
fldenv
sbb
sub
repnz
adc
pop
mov
imul
and
stos
lods
fxch
and
int
and
popa
sbb
cmp
xor
dec
test
pushf
push
andl
lods
addl
lret
lods
mov
out
fisttpll
out
or
cltd
rorl
sub
dec
adc
sbb
sub
mov
jo
push
out
mov
mov
adc
cmp
mov
sbb
add
in
test
int
dec
fldt
jne
mov
mov
hlt
mov
xchg
jl
bound
mov
fcmove
pop
fwait
mov
and
inc
push
pop
adc
in
pop
lret
cli
scas
or
or
aas
cmp
inc
jmp
int
stc
dec
mov
add
xor
add
insl
jae
inc
mov
pop
adc
ret
sti
xchg
div
sbb
push
push
hlt
loopne
and
sbb
push
js
pop
lcall
jg
rcrl
sub
int
mov
xchg
xchg
flds
adc
cmp
loope
lods
pop
inc
add
pop
and
mov
mov
xchg
push
pop
sbb
pop
mov
dec
jmp
insl
mov
mov
adc
dec
out
filds
pop
stos
jg
jge
cmpb
lcall
and
add
adc
es
sbb
jnp
dec
jp
lds
out
ficoms
adc
and
ja
mov
lret
mov
ffree
adc
mov
arpl
lods
jne
jle
jmp
sbb
imul
xor
xlat
sub
mov
xchg
inc
cmpsl
jae
add
dec
mov
out
sbb
or
push
pusha
popf
add
in
cmp
xchg
xor
shlb
push
sub
dec
jecxz
add
es
dec
mov
outsb
mov
sarb
mov
or
or
sbb
mov
add
jbe
pop
lret
int3
les
mov
mov
mov
xchg
xchg
jp
mov
in
xchg
or
imulb
and
cltd
pop
rcrl
jmp
into
cwtl
xor
sbb
scas
out
push
xchg
mov
sbb
lret
mov
mov
jne
sti
jne
xor
fs
and
push
aad
aam
push
rcrb
pop
cmp
lods
movsb
cli
lret
adc
in
push
or
add
jnp
push
cmp
pop
dec
xchg
bound
add
dec
xchg
jae
in
push
cmpsl
push
mov
cmp
cmpsl
cmc
mov
std
pushf
stos
rcrb
stos
scas
adc
mov
call
jl
jmp
adc
pop
arpl
mov
jle
ss
or
or
mov
mov
in
xchg
lods
int3
or
loopne
cmp
sarb
rclb
and
addb
jmp
fistpl
pushf
movsl
jg
lock
daa
nop
in
lods
in
fbld
xchg
sbb
mov
div
pop
sub
outsl
cltd
in
sbb
mov
mov
or
push
fsincos
into
arpl
pop
cmp
and
in
clc
stos
jp
std
faddl
dec
jle
mov
dec
and
inc
pushl
pushf
js
jle
lahf
sbbl
gs
ss
pop
xor
xorb
jecxz
sbb
pop
mov
dec
mov
adc
hlt
mov
jmp
push
inc
mov
test
sbb
push
dec
pop
push
ja
push
sahf
inc
nop
xchg
jns
xchg
imul
test
pop
test
mov
in
enter
fcmovb
xorl
mov
ja
ds
and
pushf
mov
daa
push
adc
pop
js
out
mov
aas
cmpsl
inc
pop
testb
andl
into
dec
cmpl
je
adc
icebp
inc
inc
jmp
repnz
xlat
fistps
test
sub
add
insb
movsb
inc
outsb
mov
fdivrp
sub
jo
jo
sbb
lods
imul
jmpw
mov
xorb
and
insb
dec
push
pushw
xor
inc
fildl
fstl
push
fsts
pop
sbb
inc
push
mov
dec
and
es
fisubs
sbb
add
pop
sub
jmp
xchg
addr16
out
jbe
fnstenv
je
push
int3
ret
cmp
aad
mov
imul
adc
scas
out
sub
fstl
out
xchg
std
lret
icebp
shlb
shlb
pop
xlat
test
mov
mov
mov
jo
cld
sbb
inc
or
cltd
into
inc
in
push
mov
jge
dec
cli
popf
push
add
fisubrs
jecxz
cmp
xor
clc
leave
dec
or
cli
push
inc
dec
adc
cmp
nop
jmp
xchg
test
dec
mov
mov
mov
das
mov
push
int3
xor
insl
out
dec
mov
cmc
test
dec
test
cld
or
jmp
push
add
stos
dec
movsb
js
sub
cmc
subb
negl
xchg
scas
orb
mov
pop
pop
mov
mov
mov
and
mov
sub
cmp
xor
aad
sub
ljmp
fnstenv
popf
test
cwtl
mov
cltd
popf
jle
mov
inc
or
fmuls
loopne
dec
test
std
and
add
jle
les
shrl
pop
aas
outsl
sub
push
lret
div
xor
or
inc
adc
add
addl
cld
mov
inc
or
cmpsb
xor
dec
sahf
pop
xchg
aad
sarb
mov
mulb
fstl
int
mov
mov
xlat
shlb
lock
shlb
dec
aam
fsubs
aam
arpl
and
jecxz
bound
iret
lcall
push
inc
outsl
sar
clc
and
lahf
mov
sbb
push
cli
add
fisttps
movsb
xchg
inc
sbb
pop
shrl
cmpl
cmp
or
out
add
out
rorb
mov
test
sbb
xchg
xchg
inc
adc
cs
xor
push
adc
loop
hlt
mov
sub
call
popf
adc
test
and
sbb
popf
mov
ficomps
xchg
push
lret
sub
ror
or
les
sub
push
xor
mov
sub
fidivrl
in
xor
inc
and
pop
xchg
xorl
sar
push
inc
add
dec
in
popf
in
pop
lret
fs
xor
hlt
cmp
xlat
pop
and
jns
adc
iret
cmpsl
sub
pop
out
jbe
xchg
addr16
repnz
dec
and
jecxz
mov
push
pop
lahf
xchg
sbb
jecxz
xlat
roll
mov
jl
mov
push
movsb
push
loop
les
data16
je
mov
pop
les
inc
fdivl
cwtl
mov
push
cmp
push
nop
jmp
leave
cmpb
adc
xchg
mov
into
xchg
arpl
adc
and
fbld
xor
jmp
push
jne
cmpsb
outsl
loope
jmp
mov
xchg
dec
add
lds
mov
jmp
adc
pushl
mov
xor
out
or
sub
js
add
repz
ds
popl
gs
sbb
jnp
jno
leave
and
mov
pushf
scas
xchg
daa
pop
movsl
gs
movsb
inc
pop
shlb
cmpl
sub
inc
sbb
push
xchg
add
lock
testb
lods
jns
scas
push
rolb
gs
addl
imul
mov
push
ja
ret
mov
lahf
mov
sub
mov
stos
aas
sbb
mov
mov
divb
das
fdivs
inc
fdivrs
xchg
pop
inc
aad
fistpll
pop
mov
out
jb
test
rol
test
icebp
add
sub
popf
mov
cmp
ss
mov
sub
out
sub
mov
xchg
int
lods
xchg
in
mov
mov
sbb
jno,pn
popa
lods
and
jecxz
inc
and
aam
mov
sub
aam
mov
out
cmp
test
push
imul
cltd
cmpsb
fmuls
dec
shll
nop
lds
arpl
cwtl
mov
inc
fwait
int3
fldt
jge
cmp
pop
pop
movsl
mov
sahf
out
add
add
pop
push
cltd
ds
mov
pop
ficomps
pusha
add
stc
and
mov
xor
stos
insl
or
movsb
add
ljmp
pop
jae
add
testl
test
push
jle
ljmp
cmp
jg
inc
jmp
mov
fmuls
ljmp
stc
inc
mov
pusha
call
call
ljmp
mov
mov
inc
mov
lahf
mov
dec
sub
bound
dec
add
and
pop
imul
enter
pop
jg
xor
cmp
aaa
outsb
idivl
arpl
jne
cmp
mov
add
js
push
dec
sbb
push
sahf
scas
dec
dec
rolb
stos
dec
xchg
sub
xchg
fcmove
mov
negb
ja
push
or
mov
pop
adc
clc
jns
push
out
adc
mov
mov
cli
in
or
repz
adc
addl
cmp
outsb
sub
mov
insb
out
insb
mov
sub
mov
test
mov
fadd
cmp
lods
in
cmp
or
daa
rcrb
mov
inc
and
test
bound
push
push
xlat
leave
mov
imul
aaa
test
mov
mov
loopne
xchg
xchg
xchg
divl
in
mov
push
arpl
sbbb
fisubrs
popf
ret
sbb
add
lcall
pop
sub
fsubrl
dec
push
push
jecxz
and
sbb
jge
fistl
sub
cmpsb
ret
enter
clc
sbb
and
push
mov
mov
es
int
jp
popa
repnz
mov
pop
mov
test
inc
incb
pop
repnz
mov
cltd
mov
jo
out
ljmp
or
aam
jno
pop
sub
pop
pop
pop
cmp
aam
mov
adc
adc
pushf
outsb
fs
and
ret
sub
cmp
outsl
imul
test
int
mov
jg
les
popa
jmp
outsb
fadds
pop
int3
mov
fisubrs
repnz
cmpsb
mov
ret
fiaddl
jg
jns
mov
adc
dec
scas
es
aas
shrb
and
subl
sub
and
push
dec
push
and
pop
mov
test
gs
mulb
or
push
jbe
and
sub
mov
inc
mov
movsb
stc
mov
iret
test
sbb
mov
jmp
mov
iret
in
scas
jmp
and
scas
mov
dec
imul
cltd
or
es
mov
lcall
or
or
sbb
jns
int
sti
pop
sti
mov
repnz
xchg
fisttps
adc
insl
mov
fildll
fbstp
js
jmp
push
int3
test
jno
sbb
lret
scas
in
add
sub
aam
and
movsb
mov
jmp
mov
inc
dec
and
call
call
cmp
inc
xchg
xor
add
xchg
in
pop
sub
mov
call
nop
pop
mov
fldcw
cli
ret
scas
jp
pop
or
sub
pop
jne
adc
inc
inc
mov
in
or
scas
sbb
mov
or
ja
and
pop
mov
aas
ja
and
dec
mov
adc
sbbb
add
sub
test
jge
mov
mov
fidivs
mov
je
out
push
lods
mov
dec
inc
imul
scas
add
jns
sahf
jecxz
mov
jmp
lods
mov
sbb
mov
mov
out
pop
xor
jmp
fstl
cmpsb
mov
jmp
mov
movsl
cwtl
test
mov
lea
mov
fs
dec
push
icebp
mov
popa
and
je
fstl
in
inc
xchg
data16
mov
mov
mov
pop
mov
xor
test
aas
and
fmul
mov
cli
cmp
lret
mov
cmp
rorl
sub
gs
addb
loop
inc
in
inc
das
repnz
or
cmp
xlat
cmpsb
cld
inc
hlt
xchg
push
paddsb
arpl
sti
loop
js
gs
push
in
pop
in
stc
inc
icebp
push
sub
popf
mov
in
xor
mov
sbb
or
sub
jle
jge
loopne
movl
xor
popf
aam
das
pop
sahf
lcall
negl
nop
nop
bound
xchg
xchg
mov
cld
and
scas
sub
scas
repnz
sbb
test
lret
and
nop
je
and
es
in
add
pop
iret
sub
cmp
or
imul
mov
loope
imul
ss
pushf
cmp
push
sarb
cs
out
cmpl
stos
xlat
sub
in
loop
shlb
vmaxps
jecxz
sub
mov
aad
fs
push
faddl
dec
fstl
pop
pop
sbb
fisttpll
rcrl
add
push
sbb
or
sub
fimuls
movsb
cs
outsb
mov
bound
adc
arpl
scas
insb
cmpsb
jo
and
shll
dec
and
ficomps
jno
cwtl
xchg
xor
mov
mov
cwtl
sbb
pop
loop
les
gs
sarl
cld
lods
rorb
daa
sub
inc
adc
jmp
ja
push
mov
mov
icebp
icebp
js
icebp
mov
cmc
add
and
int3
int3
lret
fs
sub
xchg
aam
mov
mov
xchg
sub
adc
mov
mov
gs
or
shl
in
dec
sbb
mov
sbb
dec
ds
pop
xchg
xlat
imul
test
fidivrs
bound
mov
mov
mov
and
xchg
in
push
fisubrl
add
jge
hlt
into
cmp
test
into
movsb
lock
and
or
gs
jp
lret
dec
add
jge
push
scas
sti
jmp
in
inc
bound
dec
fcmovnu
sub
out
in
xor
cld
addr16
out
inc
outsb
ret
daa
mov
xor
clc
lea
sub
inc
insl
std
adc
xchg
sbb
jp
cmpsl
addl
pop
xlat
xchg
in
lahf
push
leave
sub
nop
js
cltd
xchg
sub
and
out
push
clc
cmpsl
xor
dec
mov
or
cmp
lods
imul
into
pop
adc
xchg
or
icebp
or
loope
pop
rcrb
sub
cs
cli
es
jecxz
pop
lods
outsb
or
subl
iret
cltd
cli
jp
mov
pop
inc
fwait
lret
das
fwait
scas
push
pop
sub
jne
not
movsl
out
jne
fists
dec
jns
pop
xchg
cld
dec
pop
xor
mov
cs
addr16
pushf
sahf
insb
imul
icebp
mov
insl
pop
jbe
mov
or
mov
nop
xor
pushf
cmpl
adc
mov
xor
flds
loop
subb
insb
aas
lret
pop
sub
and
or
stos
sbb
aaa
sub
add
sti
mov
ret
or
sbb
in
dec
pop
inc
push
pushf
adc
popa
fsubrl
andb
ljmp
xor
lods
les
outsl
les
xor
ljmp
add
ljmp
pusha
xor
pop
pop
sub
mov
or
and
clc
sbb
aam
sbb
cmpsl
inc
out
lea
inc
leave
fstpl
rol
xor
jno
add
add
sbb
and
fisttpl
andb
push
shll
add
jp
fxch
call
sub
sub
and
pop
and
loopne
pop
jle
dec
aaa
addr16
mov
mov
mov
loop
add
inc
mov
lea
ds
jnp
cld
std
or
ds
dec
jns
mov
jo
sub
mov
sbb
push
inc
mov
movsl
aas
ss
dec
inc
out
mov
mov
jo
xchg
inc
or
loope
clc
test
mov
hlt
xchg
adc
inc
xlat
inc
mov
ja
and
push
cs
cwtl
push
out
jecxz
and
mov
pop
dec
loope
fnsave
add
scas
icebp
add
xchg
dec
xchg
xchg
jg
pop
aad
aas
sub
divb
test
rolb
aas
outsl
fsubrl
mov
xor
out
outsl
lock
dec
jge
sub
movsl
scas
mov
inc
andl
push
mov
dec
cli
pop
in
xchg
int
xor
add
jnp
cmp
aad
add
adc
sub
es
rep
mov
sbb
sbbl
cli
mov
jnp
cvtps2pd
rorl
repnz
inc
outsl
fbstp
test
in
jg
push
insl
cmpsb
adc
mov
mov
inc
jp
fstpl
imul
push
sbb
imul
fisubrl
or
pushf
out
pop
jo
sbb
jmp
repz
jl
push
inc
clc
sub
jae
inc
mov
out
sub
lock
shrl
inc
and
cmp
stos
sub
insl
iret
fcmovnu
lods
iret
pop
adc
mov
mov
pop
xchg
cs
cmpsl
fdivrp
test
cmp
repz
xchg
mov
pop
rcr
push
push
xor
fdivp
sahf
dec
out
repnz
push
xor
fwait
inc
test
xor
test
lret
aam
push
mov
sar
or
pop
mov
adc
faddl
xchg
jp
andb
bound
loop
in
push
popf
add
sbb
jecxz
adc
fidivrl
pop
xor
rcl
test
js
daa
mov
adc
mov
and
dec
lock
subb
inc
mov
rcr
aam
incl
sbb
in
push
push
enter
loopne
sub
add
or
ljmp
mov
dec
sbb
pop
fwait
arpl
rcll
pop
mov
out
fstl
cmp
sbb
mov
jecxz
sti
jnp
xlat
stos
test
mov
divb
sbb
dec
out
stc
mov
pop
stos
insb
pop
nop
ss
iret
mov
das
mov
in
adc
lahf
fmul
and
out
and
adc
xor
push
out
enter
mov
insl
lods
gs
popf
mov
decl
stos
gs
mov
cmpps
push
or
rclb
lret
push
int
pop
pop
bound
popa
xchg
or
frstor
mov
push
cltd
in
out
push
or
loopne
fs
inc
push
test
cmp
sbb
inc
aaa
jmp
sub
mov
data16
divb
cli
ljmp
inc
aam
outsb
adc
ljmp
dec
aam
adc
cmp
arpl
cmpl
popl
dec
jl
pusha
bound
in
fwait
cs
xchg
call
jecxz
mov
popf
xor
fsubs
test
cmp
scas
ficoml
fisttpl
push
adc
mov
pushf
cmp
ficomps
jg
xchg
mov
and
iret
push
cmpsb
xor
mov
push
xor
shl
aaa
and
dec
or
fisttps
add
int3
imul
bound
sbb
sbb
mov
mov
and
xchg
inc
insb
mov
push
sarl
pop
sub
sub
or
fs
loope
xor
cmpsl
mov
mov
enter
out
xchg
mov
scas
mov
xchg
or
pop
sbb
jns
aam
fwait
mov
adc
sarb
inc
cmp
jmp
insl
aam
jecxz
pop
fistps
push
jo
xchg
pop
jae
mov
popa
fwait
adc
add
cli
repnz
xchg
movsb
inc
jns
xchg
movsb
or
jecxz
and
push
dec
inc
push
int
fisttpll
pushw
ret
out
jge
dec
lret
mov
mov
dec
xchg
repz
or
xor
push
or
dec
lcall
cmp
or
xchg
xchg
pusha
xor
mov
sti
xchg
sbb
xchg
sbb
fstps
insb
pop
add
movsb
cwtl
popf
push
fsubl
fisttps
popf
pusha
dec
xchg
daa
mov
aam
aad
inc
stos
inc
jnp
mov
cmp
pusha
push
enter
sbb
mov
inc
jecxz
jnp
cltd
pop
aaa
push
push
mov
clc
sub
insb
pushf
xor
repz
scas
out
ffree
ja
lahf
cmp
inc
jle
and
movsb
cmp
stc
lahf
cwtl
xchg
mov
pop
cmp
pushf
jmp
add
iret
ret
sub
cmp
lods
stos
sarl
sub
sub
sbb
loopne
adc
arpl
iret
movsl
add
out
jno
imul
mov
scas
cmp
popa
push
inc
dec
cmp
cmp
call
cmp
jg
adc
aas
xor
cmp
imul
nop
call
jnp
mov
or
sahf
fldl
cmp
jo
es
inc
dec
push
xor
dec
ss
inc
add
mov
pop
mov
in
cmp
pop
push
mov
sbb
fdivl
adc
push
mov
inc
insb
std
ffreep
inc
push
mov
je
inc
pushl
das
or
and
or
or
adc
inc
add
push
mov
cmp
idivl
stos
mov
push
outsb
into
leave
xor
movsb
mov
push
mov
dec
dec
sbb
in
daa
aad
mov
jmp
pop
push
nop
xchg
jnp
scas
stos
add
mov
jb
arpl
xchg
inc
cld
lea
fisubrl
pop
jp
adc
ljmp
pop
push
lret
es
mov
cmp
cmp
aaa
aad
xchg
inc
mov
xchg
mov
jg
les
or
int
mov
xchg
cmp
sarb
jne
mov
and
push
ret
mov
pop
add
sbb
and
std
jecxz,pn
in
jle
fldcw
dec
mov
jno
dec
jae
pop
sti
rolb
jp
ss
pop
mov
jo
mov
cmp
ficomps
push
dec
xchg
inc
shll
test
frstor
sbb
std
je
or
jecxz
cwtl
mov
mov
pop
or
popf
adc
and
mov
ja
mov
int3
sbb
push
add
movsb
mov
subb
outsb
push
pop
outsl
xor
mov
xlat
or
adc
mov
inc
xchg
lcall
and
rcll
fisubl
pop
aam
lds
mov
imul
in
andl
mov
xchg
aam
rolb
sahf
rcll
std
lods
mov
add
push
dec
test
jg
test
cmp
push
clc
or
cmpsb
ret
dec
xor
pop
pop
imul
stc
jbe
jecxz
add
movsl
inc
ffreep
add
jle
stos
jg
cmp
xor
out
mov
les
xchg
mov
xor
pop
mov
jecxz
jne
xor
ljmp
inc
rolb
out
adc
or
cmpsl
push
sarb
mov
cmp
pop
jmp
addl
jecxz
outsb
rolb
adc
cmpsl
jnp
xchg
fsubrs
mov
inc
jne
jae
jmp
xchg
leave
inc
adc
mov
jnp
lret
call
std
int3
pop
push
or
fldl
hlt
sub
add
add
add
cmp
aam
and
sarb
ds
xlat
lcall
into
aas
cltd
pop
inc
inc
mov
inc
inc
addr16
cmpsb
in
cmp
in
mov
add
insb
lock
inc
std
lods
xor
push
xchg
pop
mov
sub
mov
mov
push
test
int3
std
jecxz
imul
in
xor
or
ja
fs
cs
dec
inc
das
xorl
imul
dec
push
data16
mov
jns
int
aam
push
shll
ret
cmc
insl
push
add
pop
pop
popa
imulb
lea
wrmsr
test
pop
push
sbb
cmp
fstpt
fwait
jno
nop
int
mov
mov
jle
inc
iret
or
or
std
inc
xchg
add
add
not
sbb
in
jmp
in
add
out
jecxz
mov
xchg
out
or
lea
lcall
pop
aam
loop
and
stc
repz
sub
and
mov
addr16
jno
fadds
jno
mov
pop
nop
xchg
icebp
test
fmull
push
push
leave
mov
push
out
sahf
andl
test
push
push
call
cli
adc
call
movsb
xchg
adc
popf
adc
adc
xor
clc
inc
pop
into
shrl
and
shll
xor
cmc
jbe
adc
pop
arpl
add
pop
dec
sub
push
sub
sub
and
mov
jl
filds
addr16
cmp
cltd
cmp
jge
xorb
add
sub
pop
mov
dec
pop
dec
in
out
adcb
nop
lods
push
fucomi
stos
sbb
ds
inc
das
jbe
pop
pop
pop
xchg
cmp
jge
bswap
mov
insb
lcall
push
insl
or
push
ljmp
push
cmp
fs
xor
repz
and
inc
call
mov
adc
xchg
out
pop
pop
scas
sub
mov
outsl
je
movsb
pop
xchg
adc
inc
mov
gs
jmp
mov
adc
mov
mov
lods
inc
stc
pop
cmp
xchg
cli
and
call
mov
mov
ds
sub
sub
push
push
cmpsl
sbb
stos
inc
adc
icebp
call
mov
scas
xor
xor
mov
mov
into
jmp
cmp
outsb
leave
cmp
lods
je
pop
mov
repz
xchg
dec
out
pop
in
ret
mull
test
pop
lcall
lea
or
xor
push
sbb
pusha
add
shrd
mov
insb
icebp
push
mov
sub
sub
pop
add
push
std
mov
jno
jns
sub
mov
dec
inc
rcrb
dec
push
cmp
jno
repz
mov
jg
and
sbb
cmp
addr16
dec
fsubl
mov
pop
mov
mov
sub
adc
testb
add
in
in
aas
sbb
lahf
or
mull
pop
xchg
shlb
mov
test
sub
dec
add
fnstenv
pop
jl
adc
xor
aaa
or
lret
mov
and
iret
cmpsb
imul
imul
test
shll
jg
cmpsl
shrl
push
jp
in
btr
enter
xchg
or
sbb
pop
mov
cmp
in
int3
push
aad
js
sub
jecxz
cmp
add
movsl
push
push
fwait
outsl
dec
dec
dec
dec
cs
sarb
ja
dec
int
xorl
lods
andl
jmp
rcrb
xor
xor
dec
ret
aam
stc
xor
xchg
pop
inc
popf
jmp
push
adc
test
leave
sbb
xchg
inc
je
lock
fdiv
dec
jmp
cwtl
xchg
mov
call
stc
gs
loop
arpl
lret
outsb
inc
bound
out
adcb
inc
movb
das
cld
cmp
or
sbb
push
jb
xchg
ret
ret
jbe
fstpl
je
sbb
or
push
ljmp
mov
xchg
jmp
imul
movb
out
rclb
imul
sahf
aas
daa
or
jno
lods
sub
lahf
cmp
jne
mov
lods
loop
pop
leave
pop
adc
iret
cmp
je
outsl
rorl
mov
jmp
inc
fs
add
pop
jl
lock
and
movsb
sub
outsb
xor
imulb
jnp
add
fs
fildll
in
orb
pop
adc
or
loopne
pop
icebp
inc
xchg
push
sbb
ret
stos
mov
cmp
mov
dec
cmp
mov
lock
xchg
test
push
cmp
push
mov
sarl
inc
outsb
cs
cmp
in
dec
mov
mov
push
dec
lea
dec
mov
pop
int3
xchg
insb
jo
cmp
mov
dec
je
jge
mov
cs
mov
sbb
mov
pop
push
test
rclb
js
stos
adcb
sbb
xchg
inc
int
and
shlb
fcomp
popa
pop
clc
test
adcl
cmpsl
loope
sahf
mov
fisubrs
and
inc
or
call
jo
mov
cmp
pushf
lahf
lcall
aaa
adc
ljmp
lret
stc
pop
insl
gs
lcall
inc
fcompl
adc
ret
jno
std
pop
test
enter
cmp
flds
arpl
jg
push
mov
xorb
xor
ds
xchg
fcomp
mov
inc
mov
or
fmull
mov
sti
mov
inc
pop
jbe
pop
inc
jmp
and
jbe
loop
pop
stos
test
jle
test
or
loope
jl
inc
aam
pop
lcall
icebp
adc
and
lcall
and
shld
adc
cmp
rcll
paddusb
lcall
cli
in
aaa
lock
and
cld
inc
cli
jno
in
pop
out
jmp
jl
pop
mov
cmp
into
xor
push
fnstcw
test
mov
inc
mov
xchg
pop
lock
outsb
dec
in
inc
adcb
ficompl
dec
cmpsb
xor
into
ja
jno
mov
xor
jecxz
cmp
jo
adc
lods
or
loop
pusha
jge
addr16
daa
or
xchg
aam
shl
sub
jg
sbb
out
push
mov
add
push
repnz
jge
cmp
es
cs
adc
xor
addl
inc
cltd
stos
cld
sub
mov
xor
and
lods
shrb
arpl
lcall
movsl
jge
test
aam
icebp
movsl
jno
cmp
or
jnp
mov
sahf
insb
adc
sub
movsl
inc
push
sbb
add
mov
push
sbb
pusha
test
and
mov
add
popa
mov
lods
jl
xor
sub
lahf
and
imul
lcall
xchg
or
dec
inc
shlb
mov
sub
es
or
movb
jmp
es
adc
or
or
sub
sub
popa
les
pop
aad
mov
add
dec
sub
std
add
mov
xchg
notb
dec
mov
inc
xor
xchg
lahf
or
mov
dec
call
faddl
cmc
sbbb
adc
out
jbe
mov
cltd
aaa
or
cwtl
ret
jne
adc
cli
mov
push
daa
cmp
xor
xchg
das
mov
fwait
push
xchg
cmpsb
pop
cmpsb
cli
or
mov
lods
in
push
lahf
dec
xchg
scas
sbb
mov
je
inc
sub
ret
push
test
mov
jle
fdivrl
imul
mov
mov
clc
pop
call
add
test
test
mov
pop
test
add
mov
mov
test
insb
cli
cmpsl
xchg
in
xor
jae
jne
jnp
dec
mov
xchg
inc
mov
stos
cmpsl
cmp
pushf
in
ret
add
pop
xorb
adc
mov
imull
push
test
mov
or
out
sub
push
sub
inc
xchg
cwtl
pop
mov
std
and
xchg
inc
sub
nop
pop
mov
push
frstor
cmpsl
vucomiss
aas
lds
out
jo
jge
sbb
pop
dec
mov
loope
dec
mov
mov
mov
pop
sub
inc
les
sbb
out
fimuls
je
sarl
adc
or
imul
fbld
dec
sub
ss
std
bound
jle
adc
cmpsb
loope
in
push
cmp
das
jecxz
push
jmp
or
mov
xchg
fidivl
or
xor
into
stos
int
dec
ja
dec
cmp
cmpsb
inc
int
insl
leave
push
aaa
notb
lret
mov
sbbl
sub
push
out
movsb
push
pop
cltd
and
outsl
dec
or
ja
adc
loope
stos
cmc
clc
lock
xlat
es
xchg
pop
fs
push
mov
cld
or
js
mov
xchg
mov
xor
jns
or
pusha
cwtl
cmp
push
int
add
cltd
add
push
loope
pop
fstl
sbb
and
pusha
mov
ffree
int
cmp
mov
cmp
sbb
gs
imulb
subl
adc
nop
daa
add
push
sub
cli
mov
ja
and
mov
jbe
add
sarb
sub
insb
in
or
popf
xor
inc
xchg
inc
or
sub
lahf
adc
sbb
nop
mov
mov
ljmp
daa
add
mov
xchg
movsl
add
sbb
dec
daa
in
mov
movsb
lds
xchg
arpl
fs
stos
inc
ret
lahf
imul
mov
cmpsb
mov
and
and
cmpsb
sub
xlat
neg
stos
inc
jmp
outsb
push
sbb
pop
jecxz
or
es
xchg
mov
stc
jecxz
xchg
mov
sbb
adc
sbb
test
jmp
subl
push
rcrb
inc
xchg
pop
jl
xchg
mov
jno
ljmp
insb
ljmp
sbb
xchg
pusha
popa
aad
inc
sub
addr16
stos
test
and
inc
push
data16
mov
dec
inc
xchg
std
xor
fs
cmc
into
pop
arpl
pop
jns
mov
lret
test
sbb
mov
mov
sbb
mov
sti
jb
aad
and
jmp
jge
push
and
icebp
lret
cmpsl
inc
lcall
addr16
int
out
pop
push
loope
sub
mov
jb
out
jne
adc
mov
jbe
xchg
adc
push
or
cmc
loopne
sub
js
add
pop
movsb
push
xor
addr16
xchg
xlat
daa
jp
cmp
dec
jo
push
adc
insl
in
pop
add
mov
jb
mov
test
lahf
sub
out
add
dec
xor
mov
aaa
inc
lss
adc
jae
clc
mov
pusha
add
pop
jmp
dec
movsb
mov
mov
or
inc
cmp
or
mov
int
cwtl
or
xchg
adc
and
test
mov
cmp
roll
xor
mov
or
lea
ret
and
sbb
or
push
idivb
stc
inc
mov
lods
lahf
sarb
test
pop
insl
lret
repnz
xor
dec
hlt
dec
add
int
push
mov
mov
sahf
arpl
jecxz
scas
cmpsb
dec
dec
xlat
dec
or
and
jb
stc
mov
push
loope
stos
fisubs
insl
call
clc
call
mov
orb
inc
jge
xchg
sbb
pop
addr16
dec
mov
insb
lahf
shl
outsl
cmovle
daa
and
mov
andl
xor
xor
pop
adc
gs
call
mov
lret
mov
cmp
popa
test
push
mov
adc
fiaddl
inc
lahf
push
decb
sub
aas
dec
popf
push
push
or
jge
xchg
push
cmp
adc
pop
ror
mov
jmp
out
cmp
or
jnp
mov
hlt
xor
sti
sahf
push
add
mov
add
mov
xchg
popa
js
xorb
pop
adc
cwtl
xor
imulb
fcoml
int3
cs
fmuls
bound
sbb
addb
pushl
arpl
xor
mov
or
iret
ja
imul
pop
lahf
jp
rolb
loop
jg
fsubrp
xchg
jnp
aad
pop
adc
pop
leave
pop
pop
push
inc
repz
imul
sahf
mov
nop
mov
adc
js
sub
jnp
add
lods
mov
mov
test
push
cld
imul
mov
scas
decb
xchg
out
push
ja
add
xchg
push
or
repnz
inc
and
pop
stc
test
pushf
mov
xchg
mov
mov
push
stos
movsb
inc
xchg
push
fs
out
repz
shrl
fidivrl
add
insl
ret
out
jae
cmp
add
outsb
movsb
inc
out
rclb
mov
movsb
sub
sbb
sbb
and
sbb
sarl
outsb
dec
enter
sbb
cmpsb
inc
and
add
rcrb
mov
push
push
fisttpll
ret
pop
fisttpl
push
pop
and
scas
add
lret
fcompl
jne
out
jo
jb
lea
xchg
loope
xchg
lods
int3
bound
inc
ja
aaa
mov
add
aad
popf
pop
sbb
mov
mov
stc
sbb
daa
push
dec
in
inc
ds
push
sbb
fisubl
mov
movsl
mov
daa
call
arpl
mov
sub
dec
xchg
push
cmp
mov
insb
lods
aam
mov
in
les
aad
daa
mov
sub
jne
xchg
outsb
xor
and
and
or
cld
lods
mov
xchg
cmp
add
stos
addb
fisttpll
inc
insb
pop
or
mov
mov
sub
add
aaa
lahf
pop
push
add
sahf
mov
mov
cmp
pusha
and
sbb
ds
test
sbb
out
pop
mov
mov
out
hlt
sub
aaa
repnz
inc
fisttpl
loopne
lcall
rcll
ret
or
mov
or
xchg
js
js
dec
push
adc
or
inc
scas
dec
test
out
out
out
xchg
lahf
sbbb
loopne
jp
sbb
incb
xor
movsb
add
repnz
nop
mov
fidivl
repz
adc
call
pop
cmpsb
mov
sub
pop
jae
push
daa
iret
xchg
push
jle
jae
pop
sub
test
inc
jno
pop
out
jecxz
mov
and
push
lea
out
xor
test
insb
rcl
jbe
cmc
cmp
shlb
jbe
sti
cmp
repnz
in
mov
ds
mov
cwtl
es
lods
xchg
aad
subl
push
push
aaa
jecxz
addr16
cmc
icebp
xchg
lret
outsl
push
xchg
outsb
lahf
out
xor
xchg
jge
xchg
hlt
sbb
dec
xchg
lods
xchg
jne
lods
jg
pop
push
lahf
sbb
in
sub
mov
ret
jge
fwait
xchg
mov
cmpsb
shll
cmpsl
jg
lock
aas
dec
adc
repnz
lcall
jns
mov
fmuls
repz
adc
test
mov
shll
fwait
mov
imul
in
adc
inc
repnz
sbb
pop
jne
daa
stc
les
adcl
jle
dec
lahf
jnp
call
movsl
mov
call
pop
jmp
jg
push
dec
and
mov
notb
xchg
scas
adc
stc
scas
jbe
sbb
in
push
mov
jmp
stc
or
and
stos
out
fucomi
lcall
cmpsl
mov
out
enter
lock
xchg
adc
jp
cmp
stc
xchg
push
rorb
and
cmp
pop
or
leave
sbb
add
in
leave
mov
add
fstpl
stos
in
pop
rorl
shlb
lods
aas
lock
clc
popf
testb
jae
push
out
xchg
sbb
aas
pop
pcmpgtb
jnp
cld
rcrl
and
lcall
movb
popa
push
rol
lock
es
or
gs
incl
cmp
push
xchg
adc
aam
dec
cwtl
pop
push
pop
cmp
fildll
xchg
dec
or
out
dec
popa
xor
fwait
out
lret
hlt
pop
dec
dec
or
lahf
xchg
and
ss
stos
and
shrb
in
sub
cld
aaa
cmp
fidivl
fwait
jno
addr16
test
cmpsl
xchg
sub
imul
pop
xor
inc
push
jp
sub
inc
lods
lods
adc
ja
leave
cmpsb
shrb
addb
lahf
test
mov
icebp
ret
adcl
mov
push
mov
imul
mov
ds
mov
mov
negb
into
aaa
aas
cmp
mov
and
popa
cmp
call
in
aaa
xor
sbb
lret
lahf
nop
sub
int3
or
or
pop
dec
outsb
mov
dec
stos
jmp
lock
iret
fistl
xchg
mov
adc
sti
sahf
inc
mov
jns
dec
outsl
repz
push
mov
or
jno
aam
fwait
sahf
dec
xor
mov
dec
mov
cltd
faddl
push
xor
stc
pop
push
lods
inc
pushl
ds
push
or
xchg
aad
and
cmp
lcall
or
std
sub
lock
outsb
or
fwait
insl
pusha
add
inc
sbbb
sub
int
rcll
outsb
xchg
xchg
mov
cli
je
dec
rcrb
adc
loopne
arpl
lods
outsb
mov
sub
xor
jb
adc
pop
add
insb
ds
out
dec
in
sbb
add
jbe
hlt
cmp
call
jmp
add
outsb
push
ds
clc
orb
stos
jl
popf
leave
xchg
push
sub
mov
call
and
xor
jo
shll
nop
gs
jg
adc
mov
pop
outsl
and
or
mov
insb
inc
cmpsb
cmp
or
imul
or
dec
push
add
mov
fwait
xor
mov
jno
mov
push
cmp
mov
lret
sub
mov
push
inc
lcall
cmp
mov
push
mov
js
xchg
mov
test
dec
xor
xorb
orl
outsl
jl
aaa
loop
mov
lcall
in
push
sbb
pop
ret
outsl
jo
mov
inc
divl
dec
dec
sbb
repnz
lret
mov
add
jmp
inc
popa
sbb
cmpsb
mov
leave
jmp
xchg
je
daa
lahf
nop
lret
pop
mov
adc
loopne
adc
cmp
mov
and
fldenv
mov
inc
lcall
push
mov
push
outsl
pop
data16
lret
movl
inc
cmpsb
adc
mov
sti
movd
jp
add
jae
out
sub
das
ret
mov
js
xor
sub
bound
ficoml
mov
dec
jne
insb
sub
cld
add
push
je
mov
pop
lds
pop
push
mov
das
xchg
sub
jmp
jmp
aas
dec
mov
sbb
xor
into
and
in
adc
lcall
sarl
mov
or
cmp
push
dec
jb
mov
lods
push
mov
je
idivl
sbb
and
shl
mov
int3
sbb
mov
push
stc
ds
or
mov
lahf
inc
and
ds
cmpsl
stos
push
xor
fsubp
leave
daa
cmc
lds
aad
mov
xchg
push
getsec
lock
xchg
sub
lock
pop
stos
cmp
imul
pop
je
nop
and
dec
or
mov
mov
ud0
pop
inc
push
testl
jns
mov
jp
movsb
scas
adc
fidivrl
test
dec
adc
adc
ss
jecxz
add
inc
inc
jo
dec
inc
jp
dec
inc
leave
outsb
cmp
shrl
pusha
out
jo
out
pop
pop
pop
jge
in
into
icebp
into
lods
nop
pop
sbb
mov
aam
and
dec
sahf
push
cltd
xchg
xchg
sbb
mov
xchg
inc
cmp
sti
xlat
outsl
filds
xchg
adc
and
adc
cs
adc
test
fidivrs
stos
loopne
inc
add
add
and
add
pop
sbb
dec
xor
popf
jge
mov
shlb
jge
loopne
loop
sbb
xor
out
and
test
cmp
in
je
pop
xor
jbe
push
inc
lds
adc
mov
in
mov
sahf
popa
jmp
aad
adc
scas
mov
sbb
jo
push
push
pop
cmpb
or
loopne
sbb
mov
jnp
faddp
arpl
cmp
fimull
scas
ficoml
test
cwtl
dec
xor
sbb
ss
fstpt
fwait
mov
add
sti
outsl
cmp
test
jl
xor
jg
or
in
push
repnz
jg
mov
jl
push
pusha
rclb
lods
xor
adc
dec
dec
mov
add
pop
imul
jns
add
jnp
loop
inc
fdiv
cwtl
test
jno
in
mov
scas
mov
add
enter
shlb
mov
or
shll
inc
pop
cmp
in
dec
sub
arpl
sub
push
push
insl
jbe
hlt
xchg
adc
xchg
mov
pop
xor
push
std
dec
and
mov
fwait
push
movsb
sub
rolb
push
lods
mov
xchg
gs
lea
aas
ret
cltd
test
mov
jp
mov
movsl
lahf
lea
pop
mov
and
adc
jge
jecxz
notl
fsubl
mov
hlt
inc
mov
xchg
imul
push
mov
retw
and
pop
loopne
loope
in
add
sbb
aad
lods
pop
insb
pop
data16
in
mov
xor
mov
movsl
int3
xchg
push
popa
aaa
cltd
jo
shl
sbb
jne
or
sub
inc
stos
les
mov
fs
arpl
pushf
cmp
stc
popf
vmovd
or
fstl
xor
fldl
loopne
add
cmpb
mov
push
cmp
jb
mov
xchg
sbb
mov
xchg
in
xor
push
jmp
cwtl
aas
cmp
fiaddl
stos
cmpsb
out
add
pop
xor
push
dec
xor
dec
mov
aam
in
add
cld
inc
les
push
and
rcll
fwait
jle
push
daa
test
sub
divl
cmp
jno
ret
das
pop
ret
jmp
inc
adc
cltd
data16
popf
test
fcomps
mov
mov
pop
push
daa
imul
gs
or
loop
ss
fadd
leave
lea
sbb
xor
mov
stos
lock
call
and
mov
and
stc
outsl
and
add
xchg
mov
sbb
clc
jp
inc
and
cmpsb
mov
mov
inc
push
dec
xchg
adc
mov
repz
xchg
xchg
mov
mov
test
add
pusha
sub
ret
test
cmp
popa
add
xor
movsb
add
inc
outsl
mov
adc
lret
inc
mov
mov
addr16
jecxz
enter
call
aaa
mov
cmp
xor
repnz
sub
adc
mov
gs
fiaddl
cmp
sub
xchg
mov
jg
call
scas
mov
test
mov
stc
out
push
bound
int3
cmc
movsb
mov
mov
punpckhwd
shll
cmc
cltd
test
scas
mov
jno
fwait
gs
cmp
xchg
adc
ret
jecxz
rcrl
int3
cmp
sbb
cltd
ficoms
loope
pop
es
sub
dec
xchg
jno
cs
gs
inc
push
sbb
mov
mov
pop
xor
xchg
lods
addr16
or
inc
lds
push
inc
or
xchg
cmp
lret
insl
mov
cs
sub
les
mov
inc
testb
addr16
outsl
shl
cmpsb
scas
insl
pcmpgtw
mov
aam
fcomps
addr16
or
jne
dec
inc
push
iret
add
jae
push
cmpl
into
cwtl
cmpsl
mov
push
js
rclb
mov
lock
test
sti
ja
rcrb
dec
xlat
andb
mov
jmp
cmp
and
hlt
sub
mov
std
and
pushf
das
sarl
and
xchg
aas
ja
ret
enter
mov
test
add
push
int
shll
cld
cs
lods
push
mov
push
xor
ljmp
mov
es
leave
ffree
dec
hlt
sarl
inc
ss
dec
aad
inc
adc
imul
xor
push
mov
or
push
incb
push
xchg
cli
lahf
mov
push
es
push
clc
arpl
adc
lods
pop
jno
hlt
movsl
jb
and
xor
jmp
push
pop
sbb
add
push
fnstenv
stc
rorl
lret
xchg
movsb
adc
xchg
mov
stos
rorl
mov
sbb
inc
es
pop
mov
inc
push
sbb
andl
jns
xchg
jl
arpl
ss
mov
mov
sub
rorb
jmp
fnstcw
ret
push
rcrb
sbb
repz
notb
lods
lahf
mov
hlt
sub
aam
inc
out
mov
test
inc
arpl
fucom
ficomps
or
bound
addb
unpcklps
push
dec
loope
cmp
dec
add
jl
fsubrl
clc
push
in
add
out
xchg
shl
push
movsb
cmpl
ret
inc
rorb
adc
and
fwait
inc
pop
push
and
int
jne
xchg
vmread
jp
sub
push
xlat
mov
lds
dec
sahf
add
ss
das
in
pop
sbb
push
mov
sbb
scas
dec
or
dec
push
sti
in
push
mov
xchg
loope
fs
das
push
subb
repz
sti
lods
jnp
or
jo
nop
add
testl
jmp
jns
jo
pop
movsb
adc
ret
mov
jbe
adc
scas
xor
aas
fdiv
or
jle
jno
mov
inc
lcall
mov
sbb
xor
jg,pn
lahf
pop
adc
adc
lds
xchg
andl
ss
cmp
mov
mov
pop
iret
sub
mov
push
je
jp
xchg
dec
dec
dec
mov
jb
mov
xchg
hlt
xchg
out
and
leave
dec
mov
fmuls
aas
and
or
ljmp
jle
fisubrs
push
push
test
adc
mov
inc
sbb
pop
mov
pop
mov
adc
push
in
icebp
or
inc
pop
xchg
or
xor
push
mov
xlat
stos
mov
in
inc
stos
push
mov
jecxz
jns
popa
or
jecxz
imul
or
inc
pushf
mov
sti
bound
lea
or
xor
adc
notb
je
inc
mov
clc
hlt
mov
inc
dec
loope
test
leave
imul
push
xchg
pop
jne
out
xor
fs
dec
addr16
adcb
xor
sbb
cmp
in
or
lock
dec
rolb
mov
mov
cli
mov
sbb
ret
xor
pop
bound
cmp
push
adc
lret
call
cmp
nop
jmp
lcall
add
sti
lock
movsl
cmp
mov
repnz
int3
mov
inc
lea
outsl
dec
dec
pop
sbb
aad
inc
mov
or
inc
ljmp
sbb
push
cmp
lcall
xor
pusha
xchg
fistpl
maxps
mov
out
xchg
adc
inc
xchg
aam
out
mov
adc
sbb
addr16
dec
es
pop
out
ljmp
daa
mov
cltd
xlat
xchg
rorb
xchg
call
jb
mov
aad
dec
inc
xchg
inc
fidivs
mov
pop
mov
scas
jne
xor
mov
and
mov
mov
fs
push
mov
fistl
popf
adc
sbb
jne
data16
ljmp
push
cltd
and
insl
and
dec
stos
cltd
lahf
inc
ret
cmp
mov
cmpl
sub
fdecstp
test
jle
out
xchg
inc
mov
je
mov
loope
jle
lea
jmp
sub
lahf
mov
sbb
nop
pop
aad
pop
sub
loope
in
push
inc
jmp
daa
and
in
sbb
sbb
dec
mov
out
test
sbb
mov
cmc
inc
push
fs
orb
mul
sub
add
and
and
push
and
ja
push
dec
jmp
jle
jge
pop
enter
push
mov
mov
rolb
dec
inc
jb
loopne
xchg
and
pop
add
dec
es
lods
ljmp
sbb
mov
inc
and
pop
dec
insb
mov
xchg
mov
jae
adc
mov
mov
gs
je
dec
addr16
add
out
arpl
dec
pop
dec
mov
aad
pop
lods
nop
sbb
dec
pop
xor
pop
xchg
outsb
pushf
lahf
in
test
js
dec
outsl
push
std
subl
dec
sub
jmp
inc
mov
fmull
ja
adc
fldenv
rol
das
lret
aaa
jmp
in
dec
and
sahf
nop
icebp
lret
jb
push
cmp
mov
mov
ficoml
sbb
pusha
xchg
int3
or
dec
xchg
jge
shlb
adc
xchg
shr
xor
outsl
loop
sub
xchg
pop
imull
lea
mov
inc
jne
sbb
xchg
sbb
cmp
lods
scas
js
aam
sbb
mov
jns,pt
test
dec
inc
pusha
addb
shrl
stos
jne
inc
aam
cmp
iret
icebp
lret
xchg
imul
pop
das
scas
mov
xor
repz
mov
enter
fstps
adc
jl
jno
jge
mov
aam
decb
mov
fnstcw
rclw
add
aad
push
movsl
pop
daa
mov
ss
movsl
xchg
fsubr
jnp
or
pushf
and
cmp
je
imul
mov
test
fcoml
subb
imul
shlb
out
loopne
fnstenv
jmp
js
push
xchg
out
mov
or
cmc
pop
icebp
push
lahf
mov
mov
mov
fstps
mov
mov
inc
and
std
add
push
lods
push
dec
movsb
push
adc
add
pop
rcll
pop
int
sub
mov
popa
dec
rol
sti
in
repz
insb
je
add
enter
or
pop
ret
daa
in
mov
or
dec
push
xchg
pop
rcrb
ret
test
pusha
jno
arpl
fsubrl
int
jl
add
stc
xor
fnsave
or
outsb
mov
mov
xorl
cli
int3
fs
lods
add
imul
and
std
je
sub
insb
cld
cmp
mov
mov
in
cld
dec
cmp
lods
stos
ret
dec
es
pop
test
add
rolb
mov
mov
dec
and
frstor
inc
nop
sbb
or
cmp
sub
mov
sub
jo
xchg
imul
test
repnz
or
cmp
subb
add
lahf
xchg
sahf
push
mov
add
in
pusha
insb
test
jb
xchg
xor
xor
xchg
shlb
addb
lret
icebp
and
sarb
adc
mov
into
adcb
xchg
mov
mov
fadds
lds
push
je
mov
out
out
mov
mov
mov
pop
loop
aad
aaa
in
adc
gs
jle
pop
cmp
push
jg
mov
stos
pop
mov
mov
pop
add
sbb
fstps
das
pop
bound
cmp
add
push
fldcw
sbb
fs
daa
mov
or
mov
adc
std
test
xchg
and
fnstcw
ds
sub
inc
jbe
rcrl
je
in
mov
or
aam
mov
or
mov
and
scas
pop
xchg
jnp
pop
mov
std
jno
ja
test
cmpb
adc
mov
and
sub
jnp
xor
xor
int3
mov
stc
outsl
es
xor
sbb
sbb
or
xor
push
mov
sub
pop
imul
ss
call
sarl
or
mov
test
pusha
mov
fimuls
test
mov
mov
adc
xchg
xor
das
jno
inc
clc
das
sti
jns
ss
out
dec
xor
imul
dec
lds
xchg
xor
xchg
test
stos
mov
inc
adc
jne
ja
or
jecxz
sub
cs
push
sbb
cmp
sub
ds
inc
or
xor
cmp
rolb
jmp
scas
jb
into
xchg
xor
add
repz
call
hlt
imul
test
mov
sbb
xchg
xor
mov
jne
mov
cmp
jle
cmpsb
inc
fs
cmpsl
add
cmp
mov
dec
ljmp
dec
sbbl
movsl
xor
shlb
dec
xchg
cmp
testl
pop
loope
adc
push
cld
xchg
xorl
sbbl
mov
mov
icebp
dec
popf
mov
scas
xchg
pop
inc
rcrb
loopne
bound
inc
xchg
ja
in
lahf
mov
jmp
lds
sub
mov
mov
idivl
or
xor
jae
xchg
xchg
and
pop
addl
nop
xorl
call
sti
rorl
out
and
sbb
jg
push
aas
xchg
push
int
sbb
xchg
aas
outsl
imul
add
add
mov
mov
adc
sarl
andb
seto
or
sbb
pop
push
dec
dec
jp
mov
jmp
stc
push
rolb
jg
mov
mov
scas
in
adc
fidivl
or
xchg
cli
pop
jecxz
mov
in
and
sbb
sub
mov
xor
cmp
pop
dec
sub
loopne
mov
out
icebp
xchg
int
dec
fidivrs
mov
sahf
lock
xrelease
insl
add
xor
mov
inc
notb
adcb
mov
adcb
mov
push
lods
xchg
mov
shll
cmc
xchg
or
jne
out
movsl
rcrb
and
sub
jg
ljmp
imulb
mov
push
xor
pop
fldenv
fldt
mov
adc
fidivs
int
aas
jl
fs
addb
xchg
lret
icebp
shll
cli
pop
mov
push
in
push
dec
xorb
mov
sub
loope
xorl
cli
and
mov
sbb
out
idivb
pop
ljmp
sub
pushf
sbb
xor
jns
mov
int3
inc
pushf
lret
sbbb
and
iret
daa
xor
rol
shl
sbb
testb
insb
push
push
jp
inc
outsl
inc
xchg
test
inc
sbb
inc
xchg
adc
mov
out
and
inc
mov
pop
imul
jae
and
sbbb
add
lods
add
arpl
aam
scas
inc
mov
jne
and
xchg
ret
inc
adc
movsb
cmpsb
pop
outsb
jo
pop
and
xlat
or
enter
aas
xchg
jg
arpl
test
call
ret
xor
pop
xor
push
or
hlt
xor
dec
sbb
or
push
in
ret
xchg
adcb
pop
cld
popf
mov
imul
pusha
or
xchg
cmpsl
je
dec
repnz
inc
xchg
rorl
sbb
or
mov
js
xor
pop
cmp
inc
fdivr
ds
imul
mov
or
bound
push
loop
mov
loope
cld
nop
fstpl
bswap
int
mov
push
leave
test
mull
lret
xchg
and
fsubs
sub
xchg
inc
fidivl
addr16
popf
repz
jbe
xchg
subb
pop
and
inc
inc
cs
frstor
arpl
xchg
mov
hlt
sub
xrelease
jbe
inc
jmp
rcr
es
fisubs
ds
inc
push
pop
jb
adc
or
mov
fldl
in
mov
rcll
cmp
jbe
xchg
xor
inc
xorb
imulb
popf
push
sub
mov
imul
sbb
das
push
xchg
ficoms
loopne
push
jmp
lret
lea
scas
insb
test
adcl
add
stc
jp
adc
push
std
push
rcl
or
loopne
xor
xchg
xlat
and
push
outsl
test
f2xm1
pop
mov
mov
lahf
adc
icebp
cmpsb
add
notl
xchg
scas
inc
outsl
cmp
dec
or
arpl
mov
imul
mov
and
sbb
push
test
jne
pop
cmpsl
pop
popf
xchg
cld
mov
scas
jl
mov
jmp
cmp
pop
lret
fidivl
jo
mov
sbb
rcl
or
cli
cmpsb
xchg
adc
cmc
pop
push
call
data16
push
dec
bound
xchg
mov
xor
gs
xchg
dec
dec
mov
xor
jo
ds
in
xor
sub
ds
imul
xor
adc
add
outsb
pop
sahf
mov
shrl
inc
jbe
add
jno
mov
jl
iret
and
or
sub
dec
clc
loop
leave
into
push
loope
inc
jecxz
cmp
arpl
rsm
xchg
aam
jnp
iret
inc
cli
cmpsb
lret
out
cmp
pusha
cli
jne
xchg
pushf
int
mov
fstp
jns
loope
inc
fnsave
cmp
movsb
adc
addr16
cmpsb
xchg
fisttpl
adc
mov
in
sbb
subb
cmpsl
xor
out
push
sub
sub
or
subl
and
mov
mov
loop
mov
dec
adc
rclb
xor
pop
cmp
cmp
mov
out
shl
or
icebp
mov
push
repnz
jne
mov
loope
lds
xor
fsts
sub
adc
sub
in
ret
and
mov
dec
pop
or
jmp
cmp
mov
mov
dec
xor
test
insb
in
cmp
sub
mov
or
jg
jne
arpl
adc
movsl
jl
nop
lret
nop
aam
popl
or
sbb
cmp
movsb
in
lds
xor
jle
pop
inc
sub
inc
fsubs
xchg
push
call
xchg
es
cli
add
out
cmc
outsb
ret
add
inc
sar
xor
stos
rcll
sub
pop
push
or
ss
movl
outsl
ja
and
cmp
dec
sbb
lret
rorb
push
out
in
sbb
out
lret
inc
and
or
lea
fsubl
pop
lods
push
xor
xor
add
cld
push
nop
xchg
mov
insl
pop
lds
les
cli
in
incl
shlb
test
push
add
sub
lods
imul
ljmp
cmp
and
mov
aad
push
sarl
in
daa
leave
mov
pop
mov
aas
fistl
add
mov
xchg
js
add
xchg
bound
push
idivl
jne
push
cmc
imul
push
nop
bound
mov
loop
mov
sbb
inc
sbbl
mov
or
mov
lods
movb
push
xor
adc
lock
jns
mov
inc
fdivrp
ret
sub
cmpsl
addb
dec
sbbl
adc
mov
sub
mov
movsb
leave
out
outsl
push
adc
popf
jne
pusha
fldl
add
imul
outsb
addr16
inc
cwtl
adc
dec
xor
mov
adcl
push
push
push
gs
pop
sub
scas
mov
jno
dec
rorl
jmp
insl
pusha
jle
push
fmuls
dec
sbb
imul
mov
xor
cmp
sub
jno
stos
pop
pop
lahf
mov
negb
dec
jb
and
push
pop
cmp
rcl
int3
mov
sbb
sti
mov
fists
xor
pusha
fsts
test
jmp
insl
rclb
sub
test
lret
cmp
dec
dec
add
mov
lcall
jmp
bound
dec
das
arpl
pop
lahf
aas
jno
xchg
mov
mov
ficomps
sbb
cli
cmpsb
mov
inc
and
push
scas
xor
in
pop
cmp
xchg
push
out
push
and
mov
lea
pop
pop
pushf
mov
push
mov
fwait
push
jbe
pop
test
lea
xchg
mov
mov
push
cmp
jge
shl
push
cld
ja
aaa
sbb
sub
das
xor
lahf
loope
nop
xchg
or
and
jnp
movsl
dec
cmp
push
es
stos
xor
arpl
inc
lret
pop
and
hlt
insb
hlt
sub
outsl
or
add
je
xor
cltd
push
cmp
adc
jnp
sbb
outsb
push
cmc
imul
jne
dec
or
gs
movsb
and
xor
pop
cmpl
test
jmp
sub
sahf
add
stos
xor
or
lods
dec
push
negb
dec
sarl
cmp
stos
push
xchg
pop
push
add
lea
cmp
mov
push
adc
jl
gs
aas
mov
dec
or
sahf
ja
sti
inc
fnstsw
pop
in
jmp
add
and
insb
mov
aaa
jle
imul
add
xchg
js
push
cmpb
jl
pop
xchg
arpl
xchg
fsubrs
mov
adc
cmpsb
pusha
mov
imul
in
sub
fs
loope
jge
xchg
fstl
mov
pop
sbb
xchg
xchg
or
cld
adc
add
cwtl
mov
xchg
pop
jae
push
xor
xchg
push
dec
pop
cmpsb
out
je
lea
repz
push
movsb
xor
notl
icebp
xor
push
cmpsb
mov
cmp
pop
stc
in
nop
pop
cmc
and
out
jle
add
nop
xchg
and
push
fstps
xor
rclb
xor
jp
or
sbb
loope
sub
cli
mov
mov
rsm
ds
sub
add
sti
xlat
mov
lock
add
mov
sub
adc
fdivrp
xor
mov
orb
mov
lock
in
sti
xlat
ret
cmp
jle
das
mov
push
add
mov
fdivs
movl
stos
outsl
inc
xchg
xor
add
arpl
movsl
test
mov
xchg
push
push
or
mov
addr16
or
jns
leave
jl
shll
and
sbb
js
add
jp
ja
or
iret
mov
std
push
xchg
jno
mov
cld
rorl
adc
js
les
push
lret
adc
push
xor
cmpsb
test
mull
mov
stc
pop
mov
jmp
and
in
cmp
and
rcll
repnz
inc
push
pop
push
and
roll
inc
repnz
push
dec
jmp
icebp
mov
rol
scas
nop
push
fcmovb
add
fldcw
adc
fs
js
out
jge
sbb
faddp
pop
cs
lods
mov
and
sub
adc
cmp
sti
mov
or
lods
repnz
clc
and
sub
inc
outsb
shlb
push
stos
push
dec
not
sbbb
aaa
ja
rorl
xor
xchg
xchg
jbe
aas
imul
out
lea
push
inc
mov
addps
cmp
mov
push
je
imul
ret
mov
and
nop
out
scas
out
xchg
cs
loope
rcrl
insl
addr16
into
lret
aad
cs
ficoms
cmp
adc
stos
in
push
pop
gs
cmp
xchg
fisttpl
mov
in
and
mov
pop
inc
dec
push
imul
ja
jnp
test
movsb
lea
inc
jne
cld
and
ret
jecxz
cmp
xchg
popf
outsb
sahf
pop
mov
xchg
add
add
addb
xchg
aad
clc
ret
or
add
or
jbe
jl
jmp
mov
int
push
inc
pop
jb
inc
push
sbb
pop
lods
mov
inc
out
test
out
daa
ljmp
cmp
div
fcmovu
into
sub
loop
mov
popa
aam
insl
out
xor
popa
insl
dec
add
push
rcr
jecxz
mov
loopne
fldl2t
stos
pop
aas
popf
lea
mov
inc
inc
sbb
fabs
inc
and
xchg
rcll
pop
pop
ret
sub
cwtl
and
lods
sbb
imul
and
leave
add
cmpsl
cmp
addl
dec
push
dec
das
sub
jae
lea
mov
pop
popf
popa
xor
or
mov
clc
imul
jl
cmp
in
scas
pop
xor
outsl
dec
xchg
push
shll
add
mov
popf
adc
jl
fiadds
jnp
outsb
imul
or
les
sbb
imul
int
lea
xor
add
sub
and
sub
sub
jle
jle
aad
and
adc
push
push
repnz
out
mov
ficoml
jae
lcall
push
jno
sti
sbb
outsl
push
adc
and
out
sbb
mov
mov
idiv
mov
scas
imul
xor
mov
lret
mov
mov
mov
nopl
loope
cmp
adc
out
imul
jne
mov
xchg
pop
loope
bound
shl
adcb
out
pop
push
pushw
add
xorl
fs
ljmp
push
orb
push
or
sbb
imul
cmpsl
mov
adc
and
lcall
stos
jecxz
dec
mov
push
mov
xchg
data16
mov
aaa
inc
sarb
cmp
inc
mov
pop
xchg
lods
mov
lock
jno
mov
sbb
shll
xchg
cmpsb
inc
lret
jne
fstps
rep
ffreep
fmulp
mov
sbb
sub
out
push
mov
sbb
outsl
cli
lcall
or
cwtl
cmp
shrl
add
andb
test
ret
sbb
add
pop
mov
movsb
insb
xlat
xlat
adc
cld
in
sti
xor
pop
xor
push
call
cmp
jns
sub
stos
repnz
ret
incb
leave
stos
imul
outsb
jo
shrb
ret
push
push
sub
out
xor
and
ss
mov
xchg
cmp
or
dec
cwtl
sbb
cld
subb
lock
je
mov
or
mov
dec
movsl
cmc
jne
add
jl
fdivp
mov
cmp
lret
adc
sarl
fbld
cmp
inc
xchg
adc
jbe
jmp
jp
and
popa
mov
int3
jae
or
dec
adc
pop
xchg
pop
iret
adc
ret
add
aam
mov
jb
lock
xchg
in
jno
xchg
clc
test
pop
jnp
mov
daa
jl
sbb
xchg
in
cmp
mov
out
fucomi
frstor
popa
xor
lock
imul
or
cmpsb
xchg
les
adc
push
lar
push
sbb
inc
into
stos
in
jg
mov
dec
cmc
inc
movsl
inc
xlat
cmc
js
jg
lret
jg
push
sti
inc
push
in
add
xor
xor
mov
xor
cltd
inc
ret
jp
shrl
xchg
addr16
jbe
jbe
or
and
xor
mov
fwait
loopne
sbb
mov
push
test
jno
xchg
mov
inc
ret
test
fisttpll
lret
jae
xor
sbb
pop
jno
dec
mov
mov
dec
gs
cli
or
xchg
lcall
push
mov
adc
sub
rcll
mov
fwait
jns
pop
dec
mov
jl
pop
sub
ljmp
jne
fisubl
sbb
dec
mov
out
push
inc
cli
lahf
mov
jo
mov
xchg
and
sbb
xchg
shlb
cmc
adc
fldenv
adc
cmpsb
add
push
test
repz
fbstp
push
mov
cmc
cld
int3
adc
cmp
xchg
sbb
mov
test
push
in
jnp
jle
movsl
addr16
loop
jl
mov
xchg
cld
iret
ficoml
sbb
leave
int
pop
sub
mov
pop
mov
js
jb
pop
mov
jl
fdivp
shr
fisubs
cmpsl
pop
mov
jns
pop
push
and
push
mov
loope
filds
jl
js
ficompl
and
in
fadd
imul
cmp
stos
jp
faddp
out
xchg
shrb
or
lahf
pop
inc
sarl
rorb
rcr
cli
inc
sbb
mov
and
rorl
mov
in
cmp
push
mov
inc
or
push
addr16
mov
xchg
xchg
xchg
stos
pusha
mov
add
fwait
dec
jbe
popa
and
push
cmpb
mov
cs
sahf
sub
test
in
mov
je
cli
andl
push
push
sbb
mov
notl
jae
in
inc
ret
jb
out
mov
filds
test
subl
mov
xor
enter
lods
mov
lods
push
mov
leave
leave
dec
or
add
jae
ljmp
insl
mov
ja
or
loopne
movsb
jl
out
xor
es
dec
enter
fwait
push
scas
pand
sub
adc
movsb
aaa
mov
cmp
in
sbb
dec
mov
pop
sti
mov
sti
mov
fistl
sar
iret
or
jg
stos
insb
push
int3
cli
scas
jne
fstpl
ja
insb
jp
in
cmp
mov
xlat
pusha
std
cmp
inc
xchg
mov
mov
in
sbb
xchg
fistps
call
xor
test
mov
mov
jecxz
ljmp
push
mov
movq
mov
dec
mov
imul
push
shrb
jb
cli
cmp
jg
mov
repnz
data16
fists
pusha
fsub
addl
sbb
dec
scas
movsl
sbb
jnp
xor
cmp
mov
xchg
sbb
hlt
sti
push
insb
mov
fwait
sbb
das
xor
and
dec
push
and
and
cmp
movsl
enter
push
jns
push
cld
gs
pop
sbb
mov
arpl
outsb
mov
mov
lahf
xchg
add
xchg
add
repz
dec
xchg
aam
dec
add
nop
or
hlt
pop
pop
sub
in
aaa
mov
aam
add
inc
negl
mov
dec
cmp
popf
imul
and
adc
pop
sbb
pushf
popf
pop
outsl
cmp
cli
cmp
and
push
jmp
sbb
jae
dec
and
xchg
sbb
ja
and
xlat
jo
cmp
lods
lret
dec
outsb
bound
dec
stos
imul
mov
push
xchg
dec
inc
mov
andb
cltd
jl
pop
jnp
and
scas
scas
insl
aaa
xchg
jb
aaa
test
mov
stos
lret
insb
movsl
lret
stos
xor
lods
dec
pop
popf
xchg
test
push
sub
popa
mov
nop
add
xlat
stos
int3
aas
daa
sub
stos
pusha
mov
cltd
and
cmpsl
sti
sarb
fcomi
loopne
jb
dec
adc
aad
std
mov
inc
fiaddl
insl
xor
inc
popf
jge
movsb
sahf
or
push
fwait
cmp
or
into
out
fistl
fisttps
divl
mov
jmp
jp
ret
or
cld
mov
aas
ljmp
mov
xor
cmpsl
ljmp
jp
std
lock
in
out
pop
pop
scas
push
lcall
and
data16
decb
cmpsl
movsb
dec
fimuls
push
or
flds
cmc
fildl
fchs
cmp
push
popa
popa
aaa
shlb
dec
sub
lret
add
fidivs
xchg
push
and
cmp
xchg
arpl
and
aad
mov
jne
in
jns
dec
xchg
cwtl
rcll
clc
push
or
lds
or
or
daa
pop
pusha
subl
test
mov
fs
xor
stos
clc
xchg
in
sbb
push
inc
lods
outsb
add
mov
push
mov
jp
out
xor
mov
mov
setge
push
inc
mov
test
mov
and
mov
xchg
sar
add
outsl
sti
mov
in
inc
pop
jle
fcom
fnstcw
into
in
sub
sub
ja
or
lret
ret
lret
jecxz
cli
sbb
inc
ss
push
leave
or
aam
mov
movsl
mov
std
and
lret
or
cmp
jno
pusha
push
repz
push
std
inc
xchg
and
je
adc
bound
or
jo
mov
imulb
xchg
es
adc
or
es
rcl
mov
imul
jp
xchg
popa
and
xchg
negb
or
cld
stc
in
dec
fs
lret
sbb
push
sbb
push
add
in
sub
push
pop
incb
xlat
push
add
xchg
das
pop
clc
xor
jmp
icebp
inc
mov
ret
addb
sbb
adc
xor
mov
sbb
iret
mov
push
int3
lods
xchg
mov
sahf
fwait
mov
movsb
inc
or
inc
jns
pop
push
aam
adc
pop
jecxz
adc
and
daa
pop
inc
fsubs
xor
dec
in
or
push
adc
cmp
clc
nop
xchg
leave
and
lock
mov
xchg
jbe
insl
aam
hlt
jl
leave
xor
mull
pop
cmpl
xchg
mov
push
ds
cmpsl
lret
cmc
mov
int3
fiadds
lret
gs
add
mov
jl
mov
dec
imul
jmp
and
dec
leave
pop
out
fdivr
lahf
cli
cld
ret
adc
sbb
aas
nop
lahf
aaa
mov
pop
pusha
or
jae
mov
std
jl
push
call
sub
xor
add
adc
cwtl
add
dec
in
xor
xor
xchg
je
jp
xchg
test
fwait
iret
pop
xlat
fldenv
mov
inc
popf
dec
ds
movsb
stos
mov
ret
out
out
hlt
loop
addl
sub
pop
cwtl
nop
cmp
jge
mov
push
inc
sbb
test
jecxz
sbb
mov
lock
sub
sbb
inc
inc
sarb
adc
sbb
inc
push
movsb
push
leave
lock
cmc
rcrl
cmc
sbb
aaa
jmp
jae
jnp
shlb
xlat
popf
inc
fmulp
dec
leave
jge
int
push
and
cvtdq2ps
mov
je
lsl
pop
sub
lds
scas
xor
iret
adc
in
adc
cltd
pop
sub
aad
imul
divl
mov
xchg
add
and
or
dec
cmp
test
xor
sbb
push
mov
clc
pusha
aam
repz
jg
mov
cwtl
mov
fs
jle
repnz
inc
mov
test
dec
pop
push
lods
fxch
inc
insb
and
icebp
loope
xchg
cmp
out
cltd
xchg
fsubrl
jae
pop
xor
cld
cwtl
or
fcomps
jp
insb
pop
cli
inc
fcmovnbe
jb
cmpsl
aad
lret
push
mov
adc
popa
pop
dec
dec
jno
inc
push
dec
shr
and
mov
xor
jle
dec
fmulp
stos
pop
ljmp
jo
xor
mov
cltd
in
add
mov
in
in
mov
fcmovnb
cmc
mull
jns
out
xor
pop
ficoml
scas
pop
stc
dec
mov
insl
push
imul
xor
jge
imul
repnz
xor
rcrl
mov
call
inc
push
out
jae
dec
aam
mov
cmp
add
outsb
roll
repnz
insl
leave
add
imul
xchg
xchg
mov
insl
inc
push
inc
stos
popf
jmp
dec
sar
call
dec
arpl
sahf
int
cli
ret
lods
sub
xchg
outsl
jae
push
dec
mov
inc
scas
sbb
in
std
cmp
stos
sbb
pushw
jno
xchg
adc
and
sbb
dec
dec
fstl
push
jmp
loop
cli
test
xchg
xchg
sbb
sub
pop
pop
out
adc
xlat
loopne
sbb
xchg
dec
test
mov
mov
sub
cli
cmp
sub
mov
inc
xchg
jmp
push
push
adc
sbb
mov
xchg
mov
xor
lret
push
xchg
scas
in
xchg
arpl
xchg
mov
adc
sbb
adc
popf
jbe
clc
mov
or
arpl
lcall
jg
in
nop
ss
mov
pusha
pop
cmp
add
loope
dec
jle
inc
data16
scas
cli
andb
mov
xorl
outsl
mov
and
es
inc
leave
gs
aad
xchg
or
jo
and
cmpsl
jo
pop
lods
inc
xchg
push
mull
sub
cmp
sub
inc
lods
lods
push
jno
sbb
xor
push
mov
cmp
jo
mov
cwtl
jno
push
popf
out
sub
pop
push
sarb
xor
mov
jg
test
arpl
and
jnp
jmp
sub
stc
in
mov
mov
ja
cmp
rclb
notl
inc
pop
aas
clc
mov
jl
out
lds
mov
or
adc
and
adc
lahf
sbb
enter
push
ret
fisttpl
negb
test
push
fistps
mov
test
xor
mov
mov
cmp
cli
cmp
jns
xor
cmp
sahf
cmp
jo
push
loop
and
loop
loop
xor
dec
sub
push
sarl
add
mov
and
data16
add
xor
pusha
sub
cmp
int3
push
pop
sbb
cli
xchg
js,pn
test
and
mov
or
bound
mov
aam
jecxz
aaa
jp
mov
xlat
fwait
das
jg
imul
mov
movsl
ja
sbb
jne
stos
dec
and
sarl
ds
rcrl
arpl
test
or
fs
rcrb
imul
clc
stos
push
sub
movsb
rcrb
xchg
movsl
jge
mov
into
dec
push
pop
sbb
lcall
lods
xchg
cli
push
cmp
lock
dec
mov
scas
dec
aam
adcb
add
mov
mov
rcll
aaa
fwait
xor
cmpsl
inc
pop
inc
shrb
jmp
push
cmp
in
or
outsl
stos
fwait
add
pop
jge
xchg
pop
divb
stos
adc
outsl
scas
dec
jae
sub
mov
adc
push
inc
mov
daa
out
cs
jmp
adc
in
cmpsb
xchg
dec
mov
ljmp
sub
je
out
aam
movsl
add
int
push
pop
push
ja
icebp
add
bound
jnp
insl
pop
add
jmp
adc
syscall
push
loop
xchg
fidivs
xchg
sub
bound
inc
fsubs
cmp
sub
pop
notb
dec
push
xchg
sbb
cmpsl
inc
push
js
pusha
xor
cmp
and
popf
xchg
adc
aam
dec
lret
test
jbe
pop
mov
andb
xchg
outsb
dec
cmpsl
pusha
mov
adc
sbb
addl
out
test
out
test
xor
mov
and
aad
ret
cwtl
xor
mov
push
sbb
les
mov
mull
lahf
in
js
jae
aam
or
cmp
cmp
int3
fmull
pop
in
test
mov
cltd
sbb
aaa
ret
mov
push
popf
in
outsb
clc
mov
rol
in
dec
loopne
mov
adc
lods
inc
std
mov
mov
sti
mov
mov
test
sub
imul
psrad
adc
or
lcall
sbb
je
add
aam
mov
in
lods
xchg
dec
ret
shll
jmp
and
jge
or
movsb
lahf
popf
ds
sarb
out
in
iret
aam
je
inc
pop
jne
dec
jb
arpl
jecxz
stos
jno
push
cmpsb
loope
hlt
mov
or
mov
into
les
xor
leave
push
int3
lods
sbb
rcrl
mov
jb
enter
dec
es
das
pop
and
test
mov
inc
mov
bnd
addr16
adc
mov
scas
xchg
loope
sahf
pop
je
repnz
adc
jae
add
aas
cmp
adc
daa
inc
mov
int
ja
idivb
cmc
jne
out
movb
sti
cs
adc
cld
dec
daa
pop
adc
idivl
mov
arpl
xor
cwtl
mov
xor
into
lods
xchg
imul
fs
inc
and
fstpl
fstpl
jns
sub
pop
xchg
imul
xchg
scas
scas
mov
mov
pusha
or
loope
dec
jno
aaa
xchg
filds
arpl
enter
mov
cltd
jb
mov
icebp
je
or
jae
int
jae
pop
ret
jl
cmp
ret
lea
imul
mov
mov
sub
and
fstpl
jl
adc
xchg
mov
mov
mov
add
sti
pop
inc
mov
insb
mov
jmp
lcall
lcall
mov
mov
or
not
push
pop
jmp
es
neg
popa
pushf
stc
mov
inc
dec
aad
mov
je
jns
sarl
xor
xor
daa
mov
dec
add
repz
xchg
std
imul
and
pop
mov
imul
repnz
adc
push
mov
push
into
inc
jmp
imul
sub
cwtl
stos
mov
pop
test
scas
push
in
cmp
ljmp
insl
sbb
repnz
push
jp
push
addr16
outsb
or
cmpl
leave
xorb
dec
test
pop
imul
add
lret
cmp
nop
xor
ja
lock
lock
dec
sti
jg
dec
imul
inc
lods
shrb
es
mov
popf
sub
inc
lods
mov
pop
stc
push
stos
and
repnz
cmp
scas
xor
mov
pushf
ljmp
mov
dec
jmp
cmp
sahf
les
cmp
or
in
mov
flds
enter
dec
es
sahf
mov
test
cli
cmp
sbb
add
lock
incw
cmp
mov
jne
jmp
out
xor
je
pusha
adc
sub
es
rol
inc
jae
popa
sahf
xchg
int3
sub
data16
subb
dec
mov
mov
cmp
push
mov
dec
arpl
cmp
mulb
psraw
call
std
add
cmp
movsl
pop
fs
cmp
adc
popa
mov
lahf
rolb
stos
outsl
hlt
fcmovu
and
sub
add
add
cmp
dec
dec
loopne
aaa
or
pop
dec
sbb
lahf
dec
loope
mov
sbb
enter
cmpsl
into
inc
push
or
dec
jo
lret
dec
and
dec
jl
dec
pop
loope
xchg
stos
les
pop
cs
add
in
adc
or
stos
movsb
adc
dec
jecxz
jl
nop
xor
add
jns
out
int
outsb
sbb
in
addr16
bnd
mov
inc
lcall
or
ss
pop
cwtl
test
push
test
into
scas
ss
jno
scas
pop
adc
mov
xchg
sbb
mov
in
lods
xchg
pop
cmc
lea
test
bswap
iret
jb
add
dec
xlat
mov
inc
add
jmp
cld
add
sbb
in
je
xor
mov
test
mov
in
mov
jo
paddw
ds
clc
shrb
ret
out
adc
repz
sbb
cmp
stc
sub
pusha
sbb
lahf
cmpsb
xor
mov
imul
aas
fisubs
sbb
mov
push
clc
ret
mov
popa
jp
loop
ret
and
lahf
mov
mov
mov
xchg
mov
stos
cwtl
es
filds
test
push
je
out
inc
lcall
rcrb
enter
mov
add
cmpsl
cmpsl
mov
lahf
dec
stos
dec
dec
add
add
cmp
mov
mov
enter
and
mov
mov
add
fimuls
jae
jbe
jb
and
mov
ret
pop
mull
popa
sbb
in
mov
cmp
imul
cmpsb
lods
data16
ljmp
popf
bound
inc
push
mov
jecxz
mov
or
jo
push
popa
jecxz
push
sahf
adc
and
mov
lret
bswap
dec
dec
ret
out
jmp
into
test
mov
loopne
sub
adc
int
mov
sub
jecxz
shl
push
mov
loope
and
arpl
push
aad
adc
inc
mulb
mov
cmp
xor
mov
sbb
and
pop
xchg
sarb
insl
push
les
xor
jae
icebp
inc
sbbb
jmp
cmp
dec
jg
aas
mov
dec
inc
mov
cmp
push
inc
dec
stos
daa
cld
xor
rorb
test
xor
movsb
les
dec
and
mov
or
js
adc
mov
dec
bound
cmp
movsb
cmc
sub
and
mov
fistps
mov
or
and
gs
in
or
sbb
shl
add
lcall
lahf
sub
subb
shr
ret
xor
arpl
dec
out
push
nop
mov
dec
fidivl
xchg
in
push
dec
pop
xor
jle
sti
rol
sub
cld
jge
dec
mov
xor
mov
int
decl
mov
lret
fucomip
mov
push
xorl
cwtl
repz
adc
aam
shll
mov
xor
mov
sbb
or
stos
fisubs
sbb
sub
mov
aam
repnz
jae
or
in
shlb
adc
subb
mov
dec
mov
lds
in
pop
or
inc
jle
sbb
cmp
or
hlt
xchg
pushf
fcoml
scas
pusha
arpl
ficoml
sbbl
sub
and
daa
popf
cmpsl
ljmp
movsl
mov
add
jbe
mov
insb
scas
xchg
shrb
fldl
add
jg
mov
gs
test
test
mov
mov
and
inc
adc
add
popa
in
pop
subl
pop
mov
cli
inc
dec
cmp
xor
outsb
stos
push
lcall
fsubrs
fsubrl
pop
add
mov
repnz
xor
push
cld
fsubl
jo
nop
mov
mov
sahf
loop
mov
jno
test
stc
and
jno
pop
push
addl
jb
mov
sbbb
movsb
add
out
pusha
pushf
mov
mov
jp
pop
xchg
jae
xchg
xor
dec
push
adc
fstpt
ss
pop
mov
aas
int
xchg
mov
movsb
popf
stos
jae
cmp
pop
sarb
ljmp
add
cmpsb
into
std
add
pop
outsl
jle
xlat
es
repnz
inc
mov
inc
arpl
hlt
or
lahf
push
add
testl
loope
fidivl
xchg
jnp
pop
push
imul
jmp
bound
xchg
fadd
pop
or
pop
decl
fidivs
scas
cmpsb
xor
inc
leave
in
mov
jo
fnstsw
jecxz
dec
popa
aas
pop
aas
ss
test
pop
imul
scas
popf
into
mov
dec
xor
add
xchg
bound
sub
mov
sarl
dec
pusha
dec
lods
mov
push
imul
sbb
test
rcrb
xor
cmp
cmp
pop
xchg
add
pop
sub
cmpl
dec
sti
fldcw
add
insl
xchg
ja
adc
lock
pop
int3
mov
shl
aaa
out
sub
jb
dec
pop
ret
push
cli
lret
aaa
lods
mov
dec
xchg
mov
fldcw
mov
imul
mul
mov
mov
jne
inc
push
mov
aaa
loop
jge
fisubl
xchg
notb
dec
repnz
cmp
dec
stos
xchg
pop
sub
mov
rol
xchg
out
in
push
aam
movsb
mov
les
adc
mov
xchg
sub
test
icebp
mov
ja
aaa
clc
pusha
mov
or
dec
shll
pop
sub
or
stc
aam
or
push
call
xor
mov
rep
mov
adc
mov
push
pop
mov
cmpsb
xchg
mov
jns
sub
jnp
and
test
push
ret
movb
stos
jnp
xor
xor
jnp
or
rolb
cli
mov
outsb
pop
in
les
pushf
imul
push
outsl
insl
call
popa
jns
shrl
dec
sbb
test
or
mov
cltd
hlt
cltd
or
or
push
inc
divb
add
inc
mov
mov
mov
mov
repnz
and
pop
imul
inc
cmp
xchg
add
fwait
std
pop
cmc
push
push
sbb
mov
add
sub
negl
and
pop
mov
mov
movsl
and
jg
movsl
push
into
cmpsl
in
mov
iret
xchg
pop
data16
push
std
dec
out
jmp
xor
insl
jbe
mov
mov
or
dec
out
and
dec
mov
inc
testl
loope
dec
int
xchg
dec
and
iret
mov
or
sbb
in
stos
ljmp
aas
jg
div
mov
imul
insb
lods
mov
mov
lret
dec
es
sbb
and
jp
mov
jo
aas
shll
inc
xchg
mov
sbb
nop
movsl
leave
mov
push
adc
jmp
movsl
and
inc
in
fmuls
or
push
jbe
lcall
ds
adc
mov
mov
imul
mov
jo
les
adc
fnstcw
fwait
jp
enter
add
cmp
and
test
push
mov
stos
out
loope
cmc
test
pop
adc
sahf
add
cmpl
xlat
fs
test
js
lahf
leave
mov
into
xor
jae
out
stc
push
push
imul
cmp
push
movsl
bound
paddusb
sub
ja
xor
les
test
fstl
fwait
pop
pop
xor
push
in
leave
icebp
pop
and
hlt
adc
mov
xorb
dec
cmpl
and
not
mov
mov
pop
pushf
lds
push
inc
mulb
dec
lock
loope
mov
push
icebp
or
outsb
insl
test
repnz
into
mov
daa
inc
pop
mov
movsl
pop
xchg
push
imul
jmpw
shll
icebp
or
loope,pt
ss
push
shll
jmp
and
inc
es
data16
cld
adc
inc
pinsrw
in
lcall
ljmp
adc
clc
je
adc
mov
fidivrs
sti
add
xor
stc
adc
add
mov
dec
out
xchg
mov
fcmovnbe
insb
adc
dec
mov
fmul
cmc
fwait
lret
shl
dec
or
pop
loopne
jb
lock
jnp
jle
jge
data16
push
cmp
js
inc
mov
ret
fmul
push
pop
bnd
stos
add
pop
xor
in
loop
jae
push
arpl
ss
dec
add
mov
dec
xchg
push
stos
enter
je
cmpsl
mov
pop
or
je
stos
rorb
mov
jle
jno
inc
mov
in
jg
cmp
repz
xor
imul
mull
in
dec
mov
xchg
lret
pop
out
fs
cld
aam
cmp
mov
sahf
lahf
xchg
adc
sub
shrl
mov
add
cmp
add
andb
pop
sbb
sbb
mov
icebp
inc
out
idivl
lcall
cwtl
clc
and
jl,pn
sahf
xchg
pop
aam
pushf
and
sbb
xchg
add
mov
mov
mov
ja
scas
scas
icebp
divl
out
push
insl
cmp
cmpl
or
out
aam
cmp
sub
sub
jp
sbb
inc
in
leave
inc
cmpsl
fistpl
insl
out
or
aam
aaa
sti
ret
ret
adc
out
xchg
daa
jns
xor
out
cmc
push
dec
lea
decl
loop
add
test
add
ss
xor
loop
fldt
cmp
ljmp
in
stos
or
lock
imul
xchg
push
cld
stos
call
mov
mov
push
js
leave
mov
xchg
jae
daa
int
sub
sub
jg
and
mov
cmp
std
movlps
push
jns
mov
push
lods
pop
int3
pop
adc
push
cmp
repnz
sbb
leave
pop
les
jge
cmp
test
and
lcall
mov
jne
xor
xor
push
dec
push
pop
mov
fisttpll
xchg
jmp
and
inc
aaa
jecxz
lcall
inc
sub
cld
pusha
mov
add
jmp
test
scas
aaa
adc
pop
mov
push
or
rorb
jmp
lods
ja
push
cmc
sbb
ficomps
dec
repnz
out
out
imull
push
adc
push
lret
mov
push
and
push
icebp
jo
cmp
lahf
xor
loop
and
popa
bound
mov
or
and
enter
xchg
fsubs
push
nop
add
cmpsl
pop
pop
aas
arpl
cmp
and
mov
cltd
and
xlat
loopne
dec
pop
pop
xchg
repz
or
jb
mov
xlat
pop
push
add
iret
cmc
mov
daa
xor
sbb
mov
orb
mov
xchg
lret
scas
dec
or
in
dec
lock
scas
aad
inc
lds
in
mov
push
jne
imul
daa
popf
loope
sti
adc
pushf
sarb
test
mov
push
inc
dec
mov
or
mov
fwait
or
shll
clc
out
xchg
mov
arpl
aaa
mov
enter
sbb
int
xor
stos
dec
cmp
mov
mov
stos
mov
rcl
sti
mov
and
stc
xchg
dec
xor
leave
ljmp
jmp
nop
xchg
jae
or
jmp
cmpsb
fnstenv
xchg
lods
jae
rcl
xor
cmc
cmc
mov
dec
js
jle
add
aaa
mov
arpl
sub
fiaddl
pop
fdivs
pop
nop
mov
dec
or
xor
sbb
arpl
cmp
push
cmc
jne
in
add
mov
push
nop
ss
and
int
cmpsb
push
or
in
dec
and
jnp
or
jae
popa
repnz
scas
fdivl
decb
push
lcall
ror
es
les
jl
sub
xchg
popa
pop
leave
cwtl
repnz
cli
shlb
mov
or
fs
lret
push
dec
inc
xchg
test
int
arpl
enter
iret
jge
int
pop
dec
add
or
mov
fisttps
out
push
repz
xchg
sub
adc
xchg
daa
cmp
cmp
inc
inc
test
inc
movsl
push
es
ret
xchg
dec
jmp
out
loopne
popf
shrl
lea
jg
nop
cmp
cmp
adc
jo
js
pop
lods
adc
dec
jge
lret
aas
and
clc
or
subb
repz
aam
sbb
cmpsl
or
jecxz
in
mov
jb
push
dec
ds
xchg
dec
mov
gs
sbb
add
rorb
ljmp
jae
cmpsl
cld
add
gs
movsl
pop
rcr
fcomps
lret
rcrb
adc
shrb
cmp
pop
jle
mov
int
int
jnp
pop
int
push
in
pop
dec
ja
stos
jns
mov
cld
mov
je
popf
dec
xchg
cmpsl
ret
mov
cmp
scas
mov
test
add
jg
mov
jecxz,pn
scas
jmp
dec
inc
sbb
movsb
je
dec
shrl
mov
mov
outsb
mov
adc
out
jno
xor
outsb
and
jecxz
dec
cmp
and
pop
pushf
rclb
or
jg
ret
shlb
mov
jmp
push
add
or
pop
decl
call
and
pop
dec
mov
adc
test
movsl
or
sub
push
xorl
outsb
mov
xchg
xor
clc
stos
push
hlt
cltd
shlb
xchg
loopne
jmp
lds
inc
add
sub
mov
push
cmpb
jle
jmp
mov
push
cli
push
sti
xor
jne
xchg
jmp
mov
mov
or
jg
mov
loopne,pn
iret
nop
hlt
sti
ljmp
cld
stos
aam
ret
test
sbb
outsl
je
mov
jns
jb
mov
cmp
push
imul
fdivs
xor
es
xchg
fwait
or
movsl
inc
or
jge
aad
xchg
add
loope
push
sub
lock
push
jno
mov
outsb
add
mov
mov
jge
inc
or
pop
or
rolb
jmp
mov
inc
sbb
or
push
es
pop
aad
mov
and
mov
xchg
pop
adc
dec
xchg
rcll
roll
out
xor
sbbl
aaa
and
xchg
push
mov
sub
xchg
ljmp
enter
movsl
int3
shrb
xchg
les
or
ljmp
pop
cmc
pop
aas
lcall
mov
lea
xchg
into
dec
push
notb
sub
int3
push
fmul
neg
adcb
sbb
rcr
and
xor
cwtl
arpl
pop
or
push
lcall
jle
shll
and
mov
clc
aam
fs
stos
xorl
hlt
fwait
sarw
popf
in
das
push
ficoml
jmp
test
mov
fwait
mov
mov
iret
stos
xchg
push
pop
or
dec
xchg
adc
lods
lods
mov
int
lea
cli
mov
lock
test
fsts
jmp
mov
lahf
push
loop
jne
shl
enter
xchg
jmp
out
js
call
out
je
adc
cmp
or
movsb
gs
mov
adc
cwtl
pusha
mov
pop
stc
or
adc
pop
xlat
jno
movsb
das
xor
dec
pusha
hlt
cmpsl
pop
jmp
imul
or
push
pop
pop
lods
movsb
repnz
je
mov
lret
push
les
adc
push
outsb
push
sbb
add
gs
jae
push
push
popf
imul
mov
daa
out
and
shll
stc
popf
scas
mov
lds
sbb
jo
lahf
xchg
push
test
das
enter
xchg
ljmp
cmp
cmp
je
adc
lds
out
dec
push
out
fmuls
add
xchg
out
and
iret
std
repz
adc
fcmovnu
add
iret
out
and
push
xchg
ret
adc
mov
enter
nop
fbld
xchg
or
jb
push
in
mov
scas
icebp
mov
rclb
imul
adc
adc
jne
gs
cli
bound
push
mov
imul
ja
dec
add
sub
xor
incb
and
popf
mov
pop
ds
xor
mov
out
lods
sub
dec
sbb
lock
ss
add
add
dec
mov
or
lods
mov
negl
in
cmc
testl
mov
inc
rcrb
cmpsb
jne
iret
cwtl
adc
mov
loope
mov
aaa
lcall
pop
mov
mov
pushf
pop
or
imulb
dec
aas
fiaddl
push
daa
pop
mov
cld
dec
icebp
pop
dec
push
insb
xor
and
sar
leave
xchg
mov
dec
xchg
cltd
mov
mov
dec
test
jno
lods
xchg
adc
inc
lea
add
add
pop
fldt
xchg
out
rcrb
push
mov
pop
test
or
sbb
cmp
jne
cmp
push
add
mov
add
inc
or
xor
push
cmp
jne
add
movsl
adc
in
xor
pusha
mov
and
push
sti
std
fs
cmp
fcmovb
xchg
jnp
xchg
pop
in
fwait
xor
add
cmc
fs
add
add
js
xchg
and
int
dec
jo
mov
jbe
imul
mov
jecxz
test
sub
add
lds
scas
fldenv
inc
add
in
push
fs
mov
push
dec
mov
daa
mov
addr16
out
shlb
dec
outsl
push
push
cmp
aam
push
imul
rcrb
aaa
push
orb
test
ret
int
test
loope
and
ss
xlat
xor
push
aam
or
dec
and
mov
insb
jne
in
jp
hlt
cvtps2pd
cmp
push
repnz
lods
add
imul
dec
dec
sahf
fcomps
push
in
dec
imul
or
sub
mov
stc
cs
mov
cmpsb
sbb
outsl
jnp
jne
jo
pop
loopne
movsl
pop
add
mov
mov
cmpsl
xor
or
dec
xorl
mov
imul
pop
scas
push
cmpsl
xor
scas
jnp
push
js
andl
mov
dec
ljmp
push
mov
aaa
gs
sub
xchg
cmp
adc
sti
jns
testl
into
cli
ss
js
ret
popf
repnz
push
mov
fnstsw
test
mov
iret
jbe
stos
test
mov
sbb
push
out
mov
and
cld
and
jmp
aam
mov
mov
or
in
enter
xchg
rcll
fs
sub
subb
sub
std
stos
lds
test
lahf
jbe
pop
xchg
fwait
inc
sbb
mov
shrd
sbb
mov
cmpsb
pop
popf
lcall
outsl
in
fstl
out
pop
scas
jp
les
mov
pop
add
stc
push
mov
jnp
sarl
pop
xchg
or
cmp
sti
mov
push
fistl
or
xor
jae
xor
jl
dec
mov
aad
pop
pushf
loopw
xlat
les
jmp
pop
mov
or
xor
stc
mov
sbb
push
mov
xor
sub
jle
xchg
movsl
outsl
jge
xorb
fildl
int
cmpsb
lea
cmp
sub
mov
xchg
xchg
or
iret
gs
xchg
into
jae
and
xor
cwtl
and
aas
pop
sub
mov
bound
rcr
mov
push
sub
ret
movsb
loopne
js
inc
jb
fadds
sub
inc
icebp
push
hlt
insl
xchg
jl
adc
add
xor
test
mov
mov
call
jne
mov
push
lods
test
lea
push
push
sbb
push
sbb
loop
mov
hlt
or
fdiv
lcall
aam
es
dec
bound
stc
push
xchg
out
fldenv
jo
testb
in
jo
inc
in
pop
cmp
pop
xchg
dec
sbb
addr16
sub
dec
rcll
pusha
push
mov
dec
gs
lcall
rclb
nop
fstl
add
cmp
pop
fistps
and
gs
cmp
ret
adc
data16
imul
imul
mov
decb
shl
push
jae
mov
xlat
insl
adc
mov
mov
testb
cmc
cmc
lods
dec
lds
cli
stos
lcall
dec
fwait
lahf
jecxz
mov
fcomp
mov
repz
pop
movsb
je
fs
pop
fcomi
xchg
jg
ret
dec
cmp
dec
pop
lret
in
xchg
cmp
xor
dec
jae
movsl
outsl
inc
je
sub
add
mov
pusha
sub
inc
jnp
sub
icebp
push
dec
xor
pop
mulb
data16
or
lea
jmp
les
mov
jmp
mov
or
scas
scas
stc
test
xchg
cltd
cs
pop
call
cmpsb
icebp
gs
sbb
jp
or
push
dec
loop
je
lods
js
adc
pusha
xlat
repz
and
iret
push
adc
data16
enter
push
enter
pop
lds
dec
lock
mov
fsubl
mov
dec
pop
outsb
rcrb
jne
stc
mov
pop
fbld
pop
mov
in
popf
lret
pushf
subl
inc
dec
arpl
call
lock
fcmovnbe
jno
subb
clc
in
adc
dec
jnp
jecxz
jl,pt
loopne
dec
sbb
mov
sbb
ss
xor
stc
fs
sbb
stos
stos
jno
inc
jo
arpl
pushf
mov
sahf
outsb
fwait
jecxz
sahf
adc
xor
lods
shrb
insb
sbb
aam
sub
stc
cmp
xchg
andl
fidivl
xor
popf
scas
dec
cmp
mov
dec
pop
cmp
xor
push
jbe
aaa
mov
rcr
int
jb
test
pop
loope
mov
pushf
push
mov
mov
insb
cltd
cmp
das
sbb
add
fstpt
repnz
jo
mov
dec
mov
push
pop
pusha
jp
call
jp
cltd
sbb
lock
xchg
lods
inc
dec
insl
mov
sahf
xchg
adc
test
aam
jo
pop
aad
sbb
adc
test
icebp
outsl
popf
pop
mov
xchg
pop
incl
push
cmp
cmp
mov
xchg
or
xchg
cs
sbb
cmp
cwtl
mov
into
test
jecxz
packsswb
add
pop
mov
xor
sbb
popa
or
jo
xchg
mov
shl
cmp
sbb
loopne
jbe
lods
lock
repnz
test
jp
rcll
test
movsl
fidivrs
or
xor
dec
packssdw
xchg
bound
outsl
and
xchg
mov
jae
addr16
inc
add
sub
rorb
es
xchg
in
push
testl
enter
not
das
ret
jle
inc
adc
xlat
paddsb
inc
mov
jne
ja
lcall
rorb
stos
sbb
enter
add
dec
cs
int3
inc
cmpsb
lock
cmp
test
xchg
aad
mov
out
aaa
cmp
loop
imul
outsb
ds
jb
adc
xchg
lcall
scas
mov
into
pushf
hlt
int
repnz
inc
and
in
jbe
push
pop
dec
push
je
pushf
mov
ljmp
pop
xor
add
cmp
outsb
or
xchg
addr16
cmc
cmpsb
lcall
push
cmc
mov
mov
lcall
and
cmp
into
push
pop
das
push
js
out
inc
out
sub
cwtl
divl
xchg
inc
sub
xlat
dec
push
mov
mul
add
mov
dec
fistpl
or
loopne
push
mov
mov
scas
arpl
mov
movb
sahf
je
jbe
int
xchg
xchg
outsb
test
mov
loopne
subb
ljmp
test
sbb
mov
enter
int3
push
loope
stc
iret
sbb
incb
or
push
inc
mov
sahf
or
mov
lret
ds
cmpsl
adc
jne
add
dec
iret
push
mov
ljmp
and
hlt
jmp
pushf
jbe
outsl
insl
xchg
pop
adc
cmp
out
sbb
or
or
adc
jp
xchg
cmp
data16
mov
fadds
scas
popf
mov
les
xchg
fwait
sub
rcrb
aaa
mov
sub
js
xchg
pop
cmp
aam
cwtl
dec
imul
jl
lahf
ss
dec
ljmp
xor
filds
lret
icebp
cmpsl
push
scas
add
sub
push
mov
dec
add
and
pusha
mov
insb
jle
xchg
cmpsl
movsb
andb
mov
push
stc
aam
jle
mov
jns
repnz
test
shll
adc
fnstsw
insb
xlat
jo
mov
jnp
sti
cmp
push
jbe
dec
mov
lcall
xchg
jne
xor
sub
jp
ret
lcall
ja
adcb
jmp
add
xor
adc
int3
inc
test
jle
popf
mov
lret
fidivs
mov
mov
xchg
ja
or
dec
pop
push
inc
sahf
or
push
jmp
push
aad
add
xor
inc
add
xorb
popa
lret
pop
lret
es
int
lds
mov
push
loopne
bound
xlat
jecxz
jge
and
cwtl
dec
jg
dec
xchg
call
cli
mov
mov
push
cmpl
inc
xor
out
gs
out
sti
xchg
adc
mov
adc
divb
rep
dec
hlt
ja
daa
cmpsb
orb
arpl
mov
mov
outsl
in
dec
test
jbe
cmp
sti
jle
or
stos
shlb
test
xor
pop
or
out
jne
inc
shlb
jecxz
xchg
pop
push
lods
mov
add
sbb
pop
adc
jge
mov
test
lcall
test
out
sbb
lods
mov
mov
push
mov
repz
pop
cmc
fnstsw
loop
push
das
push
jl
dec
xchg
test
test
jle
enter
sub
adc
out
sbb
loop
mov
push
mov
cld
in
fldcw
std
pop
scas
or
fldt
shrl
sbbl
fisubl
stc
jecxz
and
pop
dec
push
xorb
dec
push
mov
ror
loope
mov
fldcw
arpl
mov
mov
loop
lret
lret
dec
sub
jo
aaa
enter
cmp
dec
lcall
cmp
xor
ds
je
jl
test
movsb
push
rcrl
addb
ds
adc
testl
jl
in
mov
cmpsl
inc
mov
adc
cmpsb
aam
xor
mov
aad
mov
imul
lahf
aam
inc
scas
mov
int
sub
les
loopne
mov
jno
jno
xor
jg
adc
cmp
out
les
xor
out
shlb
insl
mov
inc
sub
nop
cmp
les
out
xorl
neg
add
sahf
in
int3
xchg
mov
rcr
pushl
scas
jo
sub
stos
push
dec
clc
pop
popf
lods
daa
fwait
outsb
fldcw
js
add
aam
push
test
aam
gs
push
jmp
add
std
mov
add
lods
mov
sbb
loope
rcl
add
hlt
and
lods
popa
mov
cmp
or
pop
aas
xchg
adc
into
cmp
lea
test
push
mov
xchg
sub
xchg
stc
mov
mov
sbb
icebp
sbb
outsl
push
cs
repnz
sub
cmp
add
push
mov
sarb
subl
icebp
jnp
subl
and
sub
imul
xchg
xor
or
les
cmp
sbb
sub
push
pusha
mov
jmp
inc
cmp
clc
push
xchg
xor
fs
sub
mov
xchg
loopne
jge
out
jge
or
adc
jp
pop
sahf
mov
and
addr16
loope
sbbl
xor
je
sti
push
mov
xchg
ja
aaa
arpl
cmpsl
movsl
icebp
xor
push
mov
jle
test
lds
fstpt
inc
pop
push
out
ljmp
movsl
ljmp
loopne
push
cmp
dec
and
int3
cs
movsl
outsl
mov
pusha
movsb
inc
cmpsb
loopne
add
inc
mov
lret
je
cmp
adc
stc
push
js
lret
outsb
mov
xchg
adc
xor
arpl
and
inc
cmc
pop
sar
in
sbb
fsubrl
imul
xor
dec
xchg
icebp
pushf
bound
stos
ja
idiv
inc
add
push
mov
in
insl
test
or
mov
dec
in
ffreep
or
xor
in
pusha
decl
sbb
rcr
or
xchg
out
iret
mov
orb
pop
dec
dec
loop
loope
push
xchg
cli
mov
xchg
add
push
and
std
addl
inc
xor
jp
outsl
jo
inc
lahf
dec
fisubrl
jae
mov
jbe
aam
pop
adc
jnp
adc
insb
jecxz
dec
test
enter
loopne
mov
out
mov
ljmp
cli
and
jnp
push
adc
jl
or
sahf
or
xor
fwait
jmp
mov
and
js
mov
test
jp
hlt
inc
aas
adc
sbb
adc
lds
mov
and
ja
pop
xlat
inc
and
xchg
xchg
rorb
jno
xchg
sbb
es
das
outsb
mov
cmpsb
rcll
sub
add
inc
scas
out
in
sub
mov
outsl
into
mov
xor
mov
sub
scas
cs
imul
inc
shlb
out
add
mov
or
and
fsubs
sub
in
sub
inc
dec
dec
arpl
inc
sti
mov
cmp
rcll
lcall
mov
sbb
leave
jl
jbe
test
call
shl
addb
clc
shlb
pop
jns
pop
sbb
pop
in
mov
aas
pop
xor
lock
sarb
je
movl
xchg
inc
xchg
and
loope
dec
mov
pop
jmp
enter
jl
add
std
lock
test
addr16
and
push
push
xchg
or
or
or
popa
stc
xchg
into
in
xor
push
les
scas
pop
pop
jmp
inc
and
mov
andb
cmpl
cmp
je
mov
dec
aas
loope
sub
sbb
mov
xchg
pop
add
and
outsb
rorb
pushf
dec
addr16
mov
push
pop
dec
ja
sbb
iret
subl
sbb
mov
dec
dec
adc
dec
cmpsb
or
pusha
popa
add
and
shll
lea
ljmp
mov
hlt
stos
in
xor
adc
daa
sub
pop
mov
dec
fisttpl
int
ljmp
enter
mov
add
xlat
scas
rcll
sbb
or
add
ret
cltd
mov
scas
cmc
scas
cmpb
fucom
xchg
pop
sbb
xchg
fs
mov
mov
mov
repnz
test
call
jne
inc
mov
sbb
cmpsb
mov
andb
sub
jge
popa
call
aad
imul
inc
rcll
cmp
sbbl
xor
sbb
pop
lret
nop
xor
pop
arpl
rol
xchg
scas
and
lds
lods
scas
dec
dec
aam
jmp
pop
mov
pop
das
leave
mov
out
addl
pop
sub
cwtl
push
pop
outsb
mov
xchg
or
and
imul
xchg
sbb
dec
test
dec
pop
mov
xor
mov
nop
daa
push
sbb
xor
mov
and
fisubrl
test
jb
leave
and
sub
repz
cmp
sub
adc
insl
sahf
mov
cmp
sub
mov
movsl
subb
dec
nop
xchg
add
xchg
and
sub
jg
pop
dec
cltd
mov
adc
mov
loopne
mov
add
gs
jae
in
or
int
pop
sub
cmp
mov
adc
lahf
push
push
dec
stos
fdivl
lods
aas
lret
mov
cmp
inc
dec
xchg
push
popa
pushf
jb
loopne
or
and
sub
add
and
push
ja
xor
mov
enter
pop
enter
rcll
shl
pop
adc
lods
es
loope
dec
subb
jbe
ja
rclb
sub
pop
daa
xchg
cmp
sub
sbb
xchg
filds
scas
gs
cmp
fstpl
int
ret
mov
out
test
push
loope
ret
fildl
popa
loope
xorl
out
in
push
lods
fildll
mov
lahf
cmp
dec
push
es
cltd
adc
nop
mov
pop
std
call
outsl
mov
out
out
popa
xor
pop
add
pop
je
or
lret
mov
dec
test
outsb
add
mov
icebp
pop
out
leave
xchg
pusha
lods
xchg
xor
pop
jb
adc
cli
sahf
dec
and
xchg
or
mov
or
pop
lahf
cmp
lcall
inc
mov
rcr
imul
push
addr16
push
xor
push
rclb
xchg
xchg
scas
push
in
fadds
fldl
cmc
push
or
and
cmp
insl
dec
les
scas
sub
adc
fstpt
cmp
mov
int3
ljmp
sbb
xor
xchg
idivl
insb
dec
addr16
push
xor
les
mov
scas
cmpsl
and
sub
push
add
ja
add
mov
fs
xor
adc
mov
divb
push
rcrl
push
repnz
jno
sahf
in
xlat
test
dec
pushf
sbb
mov
es
or
mov
mov
push
sahf
add
das
mov
xor
push
fisubs
xchg
repz
out
pop
ss
imul
call
jp
cwtl
es
push
fidivrl
dec
pop
aas
repz
loop
adc
rcrl
lahf
adc
fwait
gs
pop
add
lea
fs
fisttpll
popa
js
push
dec
cmp
mov
pushf
lds
lcall
mov
mov
cmpsb
scas
fstpl
inc
imul
mov
hlt
mov
sbb
xor
cmp
pop
mov
sub
pop
mov
mov
repnz
outsl
in
leave
es
push
or
mov
add
out
rcrl
inc
enter
sub
jecxz
sbb
mov
jae
pop
dec
jb
adc
mov
mov
int3
jbe
xchg
sbb
movsl
in
push
aas
leave
test
stc
cmp
fisubl
fwait
jns
ds
sub
cli
fstpl
mov
cld
mov
or
sbb
xchg
and
add
call
fadds
aaa
sbbb
sub
or
xor
and
test
insb
sbb
cmp
mov
add
cmp
cmc
loop
mov
cmpsb
cltd
push
xchg
dec
imul
int
shlb
mov
cmp
sub
xchg
pusha
addb
int3
adc
xchg
inc
rol
inc
sar
mov
jae
or
or
jge
roll
pop
test
adc
inc
add
pop
aaa
inc
ret
movsb
xor
and
mov
mov
dec
or
sub
sti
lods
push
int3
mov
inc
jo
adc
jge
cmp
nop
jl
ret
cwtl
push
rorl
jmp
pushf
mov
and
test
mov
out
push
jg
xchg
shlb
leave
pop
popl
loopne
adc
in
movsl
sub
add
adc
enter
or
sbb
enter
xchg
push
outsl
mov
xor
daa
nop
adcl
and
dec
and
cmp
add
dec
xor
mov
pop
mov
loope
hlt
loopne
jbe
mov
scas
shll
mov
sbb
popf
and
cmp
push
cmp
ja
fcomps
pop
adc
xor
jbe
push
dec
mov
data16
sahf
mov
mov
fadds
daa
fs
jne
mov
bound
push
cmp
pop
popa
and
or
rcl
in
imul
cmp
test
cmpsb
int
mov
mov
stos
gs
test
nop
cmp
dec
or
xchg
push
rclb
add
sub
jne
int
mov
xchg
loope
add
aas
push
jle
int3
add
addr16
pusha
mov
adc
lock
pop
out
inc
sarl
mov
mov
xchg
int3
jecxz
mov
mov
cmpl
subl
xor
xlat
daa
scas
dec
and
inc
gs
lock
xchg
mov
sbb
movsb
lods
pop
adc
mov
into
nop
leave
fstl
add
cwtl
mov
pop
pop
xchg
jb
sbbb
jae
pop
je
and
jb
adc
sarl
out
dec
or
fstpt
jno
add
push
dec
out
in
sbb
lods
jle
pop
mov
lcall
in
mov
jmp
out
xchg
ret
in
mul
pop
ror
stos
pop
scas
push
or
mov
mov
jle
jnp
or
lods
mov
dec
mov
pop
push
mov
iret
inc
pop
daa
sbb
inc
and
xchg
adc
stos
adc
and
mov
sbb
push
pop
pop
mov
mov
sbb
xchg
imul
in
fs
adc
or
shrl
mov
jo
xor
jecxz
lcall
sbb
pop
xor
add
insl
inc
popa
jno
adc
clc
in
pop
movsb
adc
mov
xchg
mov
push
lods
xor
nop
cwtl
xor
xchg
stos
iret
xchg
xlat
adc
scas
add
leave
and
xor
add
dec
clc
jecxz
inc
jno
std
rclb
ljmp
ja
scas
xchg
fwait
cmpsb
iret
add
cwtl
dec
inc
mov
push
mov
xchg
sarb
aad
cmp
repz
in
mov
ja
ljmp
and
fisubs
idiv
insl
push
stc
dec
or
mov
out
mov
out
inc
mov
mov
outsb
cmp
lds
and
sub
inc
das
out
testl
mov
jp
jle
mov
int3
xchg
cmp
pop
push
popf
outsl
push
int3
push
cmp
mov
jo
stos
push
or
outsb
test
or
popf
icebp
icebp
pushf
jmp
pop
xor
xor
mov
dec
cmp
xlat
in
mov
sub
lods
int
mov
stos
inc
mov
aam
pop
scas
in
in
sbb
inc
dec
das
or
push
rcrb
lcall
push
cmp
ror
sub
mov
repnz
out
cmp
das
andb
outsl
in
test
mov
pop
sub
mov
cld
in
mov
push
inc
into
cmpsb
sub
and
sbb
sbb
inc
int
xchg
lret
sbb
mov
test
jg
push
aas
pushf
out
mov
mov
and
xorl
pushf
adcb
clc
cmpsl
cmpsb
xor
push
sbb
cmc
and
jl
sub
movsl
jle
in
jg
and
mov
push
fsts
aas
sbb
imul
ja
jg
inc
ret
shlb
fldenv
cmpsl
rcl
xchg
xlat
push
ss
fildl
xchg
stc
lret
fdiv
sub
pop
or
pop
add
xor
addb
mov
sahf
bound
mov
rclb
mov
dec
scas
inc
cltd
dec
xor
insl
xchg
mov
pop
mov
push
lret
movsl
sub
sbb
sbb
jle
sub
xchg
xchg
sub
dec
ljmp
mov
mov
jnp
js
jns
repz
cs
sub
repnz
movsl
xor
mov
jo
jb
push
arpl
daa
frstor
xor
sub
lret
sub
push
std
push
push
imull
dec
arpl
xor
add
jl
mov
push
pusha
lock
aas
aam
push
ret
adc
data16
jl
or
cmpsb
mov
inc
cmpb
fcoms
or
jbe
sbb
pusha
jl
out
sbb
xchg
sti
cmp
lea
es
ret
sbb
sbb
std
inc
imul
lods
out
adc
mov
pop
adc
ljmp
cmpsb
mov
add
test
mov
xor
or
lret
iret
pop
xor
insb
lahf
mov
sub
fidivrs
and
jge
xchg
mov
dec
cmpsl
sbb
jnp
iret
fwait
adc
mov
push
jge
jecxz
sub
mov
rorb
addl
pop
test
sub
jne
dec
je
fwait
add
imul
movl
cmp
adc
shlb
lret
data16
in
std
mov
jnp
or
push
and
stos
cwtl
cmp
out
adc
mov
jo
mov
int3
pop
mov
add
bts
leave
jo
fnsave
sub
ds
jb
sarb
add
stc
test
aas
jns
mov
outsl
lock
cltd
divb
or
push
xor
inc
xchg
sahf
mov
inc
leave
fsub
pop
div
lcall
push
je
jmp
pop
xor
cmp
in
pop
add
sub
mov
popa
mov
jg
test
test
adc
push
fwait
pop
sbb
mov
push
js
xor
adc
inc
push
and
add
lcall
out
adc
xorb
cmp
adc
repz
mov
test
or
adc
mov
adc
inc
enter
rclb
dec
xchg
adc
jge
xor
gs
jns
mov
pop
stos
leave
sbb
int3
out
lahf
arpl
jbe
scas
hlt
cmc
xchg
jo
aas
pop
and
scas
or
or
jp
mov
loopne
or
mov
jo
ret
stc
arpl
push
xchg
nop
icebp
jno
jge
dec
aad
adc
into
push
xchg
hlt
sahf
in
lock
inc
out
data16
mov
adc
mov
lods
shlb
jg
mov
mov
xchg
adc
adc
dec
mov
aaa
dec
shr
jns
inc
testl
cmp
call
arpl
inc
xor
std
mov
insb
clc
jo
js
cld
cmp
jbe
jb
adc
ds
std
push
inc
das
ret
mov
mov
in
and
sarb
xchg
lcall
dec
call
lds
and
mov
ret
mov
and
leave
fldl2t
add
lods
ss
mov
in
sub
mov
frstor
mov
nop
push
xor
icebp
ret
pop
adc
push
movsb
mov
insl
in
xchg
jge
cld
pop
out
add
inc
cmp
mov
addr16
mov
call
inc
rol
test
dec
hlt
cmp
push
cwtl
insb
cmpsl
mov
jbe
cmp
out
inc
xchg
into
addr16
pusha
filds
loop
adc
stos
ret
jns
or
add
and
pushf
fstpt
mov
es
xor
and
sarb
pusha
call
inc
pop
jp
or
iret
cmpsl
ljmp
cs
cli
xchg
sub
leave
fisttpll
add
imul
jnp
cli
orl
cmpsb
sbb
popf
push
stos
push
jne
mov
sbb
scas
imul
push
cmp
jmp
imul
cmc
mull
cmc
xchg
fldcw
push
loope
sbb
lret
push
sbb
mov
dec
jmp
divl
test
andl
cmp
push
xor
loop
sub
jno
mov
cmp
jle
jae
push
add
push
mov
mov
adc
jg
outsl
push
jo
sub
mov
mov
xchg
cs
repnz
inc
div
or
imul
inc
xor
dec
cld
mov
lods
mov
mov
mov
mov
or
xchg
push
fwait
dec
xlat
lods
xor
push
fisubs
cmp
das
call
sub
pushf
push
inc
testb
push
inc
sbb
dec
je
test
orb
fnstsw
jbe
test
jmp
pop
mov
int3
adc
sbbb
lds
dec
cmpsl
lcall
out
movsl
fcmovnb
mulb
or
push
mov
pusha
cltd
cmp
test
or
jb
dec
push
mov
in
xor
loope
daa
cmp
iret
iret
repz
fistl
inc
push
xchg
xlat
sub
push
test
out
mov
fidivrs
das
stos
dec
inc
pop
lea
adc
fs
pop
mov
push
adc
sahf
mov
mov
js
push
stos
aas
pop
pop
or
xor
sbb
push
lea
xlat
xchg
or
push
inc
movsl
clc
in
out
add
stos
jl
inc
inc
jns
rclb
inc
or
insl
pushf
hlt
dec
out
adc
xchg
dec
push
stc
adc
inc
add
mov
je
mov
inc
sbb
shlb
inc
push
mov
pushw
xchg
in
fnstenv
cmpsl
les
ret
aaa
xchg
pop
push
rclb
jnp
jecxz,pt
pushf
out
sub
pop
testb
stos
fwait
icebp
loop
rorl
adc
mov
mov
outsl
std
clc
sbb
fwait
jne
out
add
adc
popa
push
sbb
pop
arpl
mov
pop
and
mov
pop
jp
cmp
out
in
cmp
stc
pop
xchg
mov
ljmp
add
test
aas
out
sub
push
xor
pop
pop
ljmp
lods
std
packssdw
fmull
and
imul
adc
scas
sbb
arpl
jae
outsl
out
lretw
jmp
jb
clc
aam
push
loopne
xlat
mov
mov
sub
xor
adc
addb
push
cli
in
mov
mov
mov
xchg
pop
enter
arpl
aam
dec
sti
push
push
sbb
and
adc
aas
pusha
movsl
xchg
or
sbb
mulb
sbb
dec
push
sub
repnz
cmpsb
sbbl
pop
test
cmp
out
popa
or
stc
sahf
mov
fisubrl
sbb
or
jae
fiaddl
ljmp
sarb
idivb
fwait
adc
adc
cmp
mov
xor
idivb
lds
in
push
inc
xchg
outsl
xor
cmc
sub
or
add
sbb
std
sbb
test
scas
rcll
and
std
jb
arpl
lret
jne
icebp
loopne
mov
sub
inc
sub
push
in
add
idivl
jo
mov
das
or
xchg
js
jp
js
sbb
repz
push
sbb
xor
jge
xchg
cli
jne
fdiv
and
daa
stc
popa
mov
popa
test
pushf
jmp
dec
dec
sbb
fs
xor
shll
mov
mov
mov
lahf
pop
loope
cmp
insl
push
push
xor
gs
sbb
in
lods
jmp
fs
push
push
pop
das
mov
iret
aaa
dec
stos
repnz
repnz
mov
jl
mov
sbb
sub
dec
cs
mov
jge
xlat
mov
push
inc
jle
cmpsb
or
jp
jecxz
fidivrs
jle
pushf
arpl
mov
outsl
inc
cmp
cmpsb
cmp
xchg
xor
push
aad
jl
fiadds
out
cli
shlb
mov
mov
or
call
bound
out
ss
out
push
jg
push
mov
je
js
adc
jl
dec
sbbl
xchg
push
pop
mov
cld
dec
or
enter
divl
mov
mov
ljmp
sbb
mov
adc
sbb
cmp
xchg
cs
mov
xchg
xor
shll
adc
hlt
out
fwait
sti
stos
subb
sub
pushf
ret
pushf
inc
jbe
adc
into
mov
pop
mov
dec
fisubrl
or
push
push
cwtl
adc
aad
pop
or
inc
cltd
out
mov
stos
mov
pop
in
add
inc
jl
push
fnstenv
inc
jns
sub
lds
xchg
scas
fstpl
inc
sbb
cmp
xor
movsl
add
enter
or
lahf
repnz
mov
xchg
jg
fstpt
cld
fsubp
je
jge
repz
test
idivl
decb
movsb
adc
xorl
adc
rclb
test
mov
or
mov
mov
stos
in
mov
push
cmpsb
or
xchg
xchg
adc
inc
jo
ds
fmul
gs
int3
lock
inc
aam
jle
or
rcr
fbstp
and
mov
das
mov
sub
test
mov
sbb
push
xor
cmovp
cltd
and
sub
pop
inc
js
cltd
mov
mov
sbbl
fwait
out
mov
and
xor
mov
hlt
adc
shrl
std
push
ljmp
cmc
push
add
gs
fcmovbe
or
mov
in
add
call
hlt
or
cmp
inc
pop
push
mov
push
stc
and
pop
das
xchg
insb
or
pop
jg
and
loopne
sarb
pop
inc
js
xchg
test
mov
decl
cmp
mov
popf
fs
stc
jg
dec
dec
dec
jb
mov
push
jb
add
cmp
jbe
jne
lods
ret
pop
andl
movsl
add
add
pop
pushf
mov
loopne
pushf
pushf
sbb
lods
outsb
scas
stos
pop
adc
pop
dec
sub
filds
cmpsb
push
inc
adc
in
call
out
push
imul
mov
xor
adc
fistpll
lea
jp
adc
push
test
mov
lea
rolb
mov
xorl
fcom
mov
hlt
imul
mov
clc
and
clc
cmpb
fsts
outsl
out
movsl
lret
aam
push
xchg
daa
inc
sahf
inc
imull
push
xor
mov
and
mov
xor
loop
mov
inc
lods
mov
dec
jnp
inc
dec
pop
cmp
push
inc
sbb
out
repz
fcmovb
and
mov
mov
pop
fstpt
sub
ret
xor
push
pop
inc
xor
mov
in
xchg
inc
int
repnz
pop
in
xor
popf
fistps
jl
mov
ret
mov
mov
and
jbe
or
imul
pop
push
fisubl
cmp
push
xor
adc
movsb
js
adc
in
dec
add
call
std
cmpsl
testl
data16
cld
xchg
insb
int
scas
imul
loop
in
or
jne
pop
into
xchg
mulb
mov
movsb
xor
stc
sarb
inc
push
test
pop
arpl
fsubr
mov
dec
aam
mov
cli
mov
inc
cmp
mov
mov
faddl
jge
loopne
popf
fldcw
cmpsb
mov
sub
pop
out
push
stos
sub
js
dec
mov
imul
xor
ficoml
mov
cmp
fnstcw
ret
shlb
adc
mov
inc
aad
cmpl
lcall
cmp
mov
inc
cmc
rcrl
rcl
mov
cmc
sbb
out
adc
sub
inc
inc
test
loopne
dec
addr16
dec
leave
add
ret
inc
cld
adc
pop
jae
pusha
inc
sbb
iret
cmp
movsl
mov
movl
notl
mov
movsl
push
lahf
jmp
incb
sub
pop
les
adc
scas
xor
lods
clc
sub
push
and
mov
in
inc
fsts
jae
cmc
push
movsl
jo
mov
push
out
stc
jb
iret
mov
dec
mov
add
jecxz
stos
xor
adc
fcoml
jne
add
push
dec
in
and
push
dec
fnsave
pop
or
sbbl
jb
loope
mov
das
dec
mull
in
ret
inc
bound
jmp
ret
cmp
sbb
int3
push
imul
mov
imul
ror
mov
mov
pop
movsb
in
mov
and
fwait
ss
push
adc
insl
inc
pop
sbb
pusha
out
xchg
push
sarl
mov
xchg
push
shrb
jbe
pop
ds
enter
aad
call
pop
ja
dec
test
xchg
add
xor
lret
add
adcl
cli
push
sub
jg
ds
out
add
xor
inc
adc
ret
pop
sub
test
repnz
enter
jge
cmpsb
mov
shll
xchg
lea
sub
push
aas
inc
leave
adc
stc
mov
icebp
test
adc
dec
clc
mov
int
das
mov
jg
pop
fisubl
xchg
ja
filds
ffreep
inc
add
sub
mov
inc
and
add
pop
xchg
int3
lahf
dec
mov
inc
test
inc
movsb
sbb
lret
push
stos
into
ficoml
or
rcrl
pop
lods
cli
xchg
cltd
pop
icebp
push
add
push
pop
sbb
mov
in
ljmp
lret
xchg
hlt
and
xor
fisubrs
xchg
hlt
mov
sub
push
jae
push
outsl
repz
outsb
mov
or
in
push
pop
lods
add
mov
mov
or
enter
loope
lea
cld
test
xchg
sti
gs
imulb
mov
jne
dec
pop
adc
xchg
adc
scas
jl
dec
cmp
jg
xor
mull
sub
movl
adc
fdivrs
pusha
xchg
scas
inc
pop
inc
sbb
movsl
out
pop
or
mov
xlat
addl
sub
xchg
fwait
dec
ja
rcrl
and
adc
cmpsl
cld
inc
mov
divb
ds
and
les
inc
sbb
pop
pop
xor
adc
addr16
sbb
imul
pop
subl
mov
mov
xor
shll
mov
cli
rep
xrelease
loope
mov
pop
shrb
jo
dec
fsubs
int
or
cmp
mov
pop
dec
inc
jo
mov
mov
xor
dec
test
out
or
lods
test
cmp
adc
fisubl
xchg
lret
push
or
les
adc
test
les
aam
xchg
jp
aam
dec
xchg
xor
push
jo
or
lret
sar
pop
sub
dec
mov
sbb
dec
iret
cli
and
sbb
outsb
add
mov
sbb
mov
lcall
inc
cmp
imul
enter
add
fs
cld
int
mull
fldcw
shrb
jbe
xor
nop
cmc
jl
fistps
pop
xor
push
imul
inc
jns
cmp
mov
out
std
xchg
fwait
inc
call
or
xchg
lret
and
das
inc
cmp
pop
out
shr
cmpsb
ret
pop
mov
inc
mov
cmp
and
pop
ljmp
ret
sbb
sub
jo
incb
lods
in
jg
mov
push
sbb
jecxz
dec
dec
fs
lods
addr16
das
call
lea
inc
fwait
movsb
stos
out
fstpt
mov
jg
mulb
inc
adc
xchg
fs
leave
jl
insl
xor
xchg
xor
and
and
push
jmp
daa
xchg
xor
sbb
movsb
fdivr
sbb
les
lock
in
jmp
shlb
inc
idivl
jnp
or
push
cs
shll
hlt
sbb
loopne
cmpsl
ss
jb
or
das
push
loope
movsb
cmp
pop
sub
dec
and
xchg
pop
ljmp
dec
lcall
inc
inc
inc
mov
or
ret
iret
ds
jne
out
stc
popf
jg
inc
aam
mov
cmp
ret
fsubr
jecxz
dec
call
ja
or
repnz
sti
dec
cmp
or
je
std
outsb
sbb
cld
adc
mov
mov
mov
aaa
cmp
and
lahf
int3
ljmp
pop
aam
sub
lds
cld
mov
outsl
or
ret
pop
adc
cli
sbb
push
jl
pushf
je
inc
adc
addr16
sbb
xchg
bound
stos
jmp
mov
sub
or
mov
dec
repz
ljmp
pop
sub
xorb
inc
mov
and
loop
test
jecxz
movsl
cmpb
fsubrs
add
mov
add
xor
scas
ljmp
cwtl
scas
mov
xor
arpl
call
les
bound
aam
shll
pop
stc
xor
add
popf
mov
cli
popa
test
ja
ja
call
adc
mov
pop
mov
in
jnp
aad
add
ja
jns,pn
sbb
je
negl
adc
mov
es
or
mov
shlb
fs
push
test
and
mov
pushf
sarb
scas
imul
es
cmp
sub
xor
push
or
jmp
ret
mov
in
clc
jge
mov
and
in
and
cmp
pop
aad
jo
fimuls
mov
test
jmp
mov
xchg
cwtl
es
dec
push
and
mov
sbb
pop
cmpsl
imul
shl
pop
rcrl
lret
cwtl
fwait
inc
bound
adc
and
lock
jne
in
push
mov
cli
in
mov
xchg
into
sti
mov
popa
and
push
lahf
sbb
dec
sub
shll
xor
jl
arpl
or
fnstsw
push
mov
jo
mov
adc
mov
mov
rorb
xchg
inc
popl
in
faddp
fsts
stos
push
mov
or
inc
out
mov
xchg
pop
mov
jle
andl
cld
rcrl
in
adc
cs
or
scas
iret
jecxz
fiadds
outsl
shll
mov
mov
jo
fnstcw
loop,pn
cld
popa
cs
insb
cld
pop
loope
xorb
je
lcall
in
jmp
fdivrp
xchg
lahf
mov
cld
dec
fsubp
fcoml
push
rcrl
xor
add
lods
in
inc
lahf
jecxz
test
inc
cltd
push
mov
cmc
inc
mov
jmp
xor
xor
adc
jge
push
in
scas
clc
add
stos
pop
mov
pop
cmp
es
aam
aam
lods
inc
inc
sbb
pop
out
arpl
xchg
add
xchg
lret
pxor
mov
cmpsb
inc
jmp
add
and
fdivrl
imul
and
repnz
pmaxub
mov
jno
dec
dec
cmp
mov
dec
jbe
aad
lds
jb
or
movsl
aaa
dec
xor
mov
add
push
ja
and
ret
pop
cmp
mov
push
sub
pop
mov
dec
dec
xor
test
jl
adc
xchg
push
js
rol
rorl
ficompl
or
xor
sbb
sub
or
fnstsw
insb
sbb
inc
dec
inc
in
mov
sbb
jne
jg
mov
pop
xchg
jmp
cld
jmp
push
movsb
cmp
sub
sti
xor
out
cli
push
fidivl
cmovg
cmp
test
xchg
mov
sti
nopl
nop
dec
sbb
xor
pop
in
mov
sbb
adc
shl
scas
adc
jno
loopne
lret
and
push
push
dec
lret
dec
imul
or
or
ljmp
pop
popa
push
in
xor
sahf
das
dec
pop
test
cmpsl
pop
jl
test
adc
and
or
test
mov
mov
dec
inc
fcomps
mov
negl
push
aam
cmp
ret
shl
out
insl
and
lods
push
pop
gs
lret
repnz
pop
push
lea
cmp
mov
adc
mov
sub
hlt
leave
jb
outsb
sub
mov
int3
lds
adc
pop
jns
addr16
push
dec
mov
cmp
das
popa
adc
lods
sub
lea
mov
daa
cmp
cmc
and
jle
movl
cwtl
fst
repz
fisubs
fcmovb
jno
push
cmpsl
js
pop
mov
or
pop
cmp
pop
mov
adcb
inc
inc
mov
jmp
xchg
xchg
subb
mov
cmp
outsl
dec
gs
mov
and
cmp
data16
jbe
xchg
cs
adc
les
dec
or
xor
rclb
fiaddl
pop
adc
clc
add
sbb
iret
pop
out
lods
orl
push
xchg
mov
das
subl
dec
stos
mov
js
dec
outsl
lock
jno
mov
xor
mov
adc
xlat
in
iret
cmpb
mov
dec
and
jnp
out
and
push
mov
repz
mov
jl
inc
mov
pop
mov
bnd
lret
ficoml
out
pop
stc
les
in
sbb
int
test
jne
les
in
ret
outsb
dec
or
stos
or
ja
rorb
adc
push
imull
push
push
stos
jnp
xchg
subl
leave
push
or
imul
nop
sarb
xchg
out
xchg
inc
test
push
sub
movsl
cld
mov
in
adc
inc
add
cltd
adc
push
test
imul
andb
aad
inc
in
pop
jo
sarl
sbb
push
jb
push
xor
cwtl
inc
fwait
adc
clc
sbb
std
loopne
gs
out
inc
cmp
stc
push
scas
xor
outsl
push
mov
mov
push
and
arpl
nop
mov
and
push
sbbb
fistps
cmp
and
dec
test
sub
in
cmp
cmc
pop
es
jo
xchg
into
pusha
pop
pop
enter
cmpsb
mov
add
iret
popa
jp
push
or
mov
and
mov
in
ret
bound
cmp
pop
inc
cltd
push
call
popa
inc
xor
std
and
nop
test
outsb
sbb
pusha
nop
sbb
mov
mov
pop
pop
nop
aam
int3
sarb
mov
and
or
ficomps
mov
mov
das
cmp
jnp
movl
push
and
lods
and
cwtl
fnsave
das
jnp
jo
cmpsb
aas
ss
cmp
push
inc
or
mov
mov
push
push
pushf
ret
mov
dec
clc
or
xchg
mov
arpl
cli
push
ja
jge
stc
add
loope
mov
cmp
lock
subb
xor
shll
xchg
pop
adc
push
repz
pop
in
mov
and
sbb
xor
movsb
int
sub
movsb
push
jge
test
push
mov
test
jbe
outsl
lcall
cmp
out
mov
mov
fwait
out
sahf
xchg
cmc
pop
aad
mov
imul
push
cwtl
add
xchg
ds
aam
sub
sti
div
insl
ljmp
xchg
or
inc
jle
in
mov
imul
mov
adc
xchg
mov
add
test
aas
mov
xchg
in
cmpsl
sub
mov
sub
les
shlb
cs
rol
js
pop
enter
mov
add
xor
adcb
stc
mov
cwtl
hlt
into
mov
fiaddl
lret
sbb
push
sub
nop
pop
int3
cmp
or
pop
pop
aas
mov
jno
push
mov
jge
mov
fildll
xchg
sub
mov
cld
dec
push
imul
inc
mov
imul
sahf
lret
mov
ss
imul
subb
add
push
je
cmp
mov
xchg
mov
sbb
movsb
sarl
and
jae
pop
sub
imul
push
in
dec
dec
in
movsb
push
test
test
xlat
fdivrl
add
pop
dec
jle
mov
or
lds
xchg
subb
das
repnz
push
push
xor
stos
jb
repz
mov
mov
mov
je
pop
test
mov
or
in
push
aas
lods
lea
in
mov
cmp
pop
clc
in
lret
ss
jecxz
mov
movlps
jno
out
inc
gs
es
inc
test
lock
dec
inc
mov
int
dec
dec
lock
in
fwait
cmp
lods
test
adc
cltd
addl
das
mov
xlat
jae
into
mov
xor
lahf
dec
cmpsb
cs
xlat
inc
out
iret
aas
pusha
out
ficomps
jl
push
out
xchg
xchg
scas
scas
xchg
cmp
dec
leave
test
out
push
and
fistl
pop
sub
xchg
arpl
or
sahf
orl
adcl
insl
shrb
sbb
cmp
je
insb
je
icebp
cmpsb
xchg
mov
xchg
jae
insb
pop
mov
pop
pushf
repnz
inc
jle
xchg
pop
dec
push
loopne
push
jo
fwait
add
mov
mov
add
clc
push
ret
adc
testl
xor
out
fwait
mov
lret
adc
int
fs
icebp
lcall
fcoml
das
sahf
addr16
dec
shlb
call
sub
loop
pop
bound
pop
sub
movsb
lds
popf
arpl
pop
inc
dec
cmp
mov
jmp
je
sub
cmp
mov
cmp
andl
lds
jl
std
inc
add
rolb
dec
cmpsb
jl
push
out
lret
mov
mov
dec
filds
push
mov
pop
loopne
mov
loope
mov
xor
test
pop
xchg
mov
out
lea
push
lret
jmp
sub
dec
mov
sub
inc
bound
xchg
xor
dec
push
enter
leave
dec
add
ret
mov
sti
aas
in
dec
sbbl
clc
lods
dec
jo
lahf
lret
enter
lods
inc
pop
enter
xor
mov
test
xor
xlat
into
stc
jl
inc
inc
icebp
into
fisubs
fwait
sbb
xchg
sbb
scas
mov
loop
add
adc
scas
sti
imul
negb
shlb
sbb
inc
jmp
or
jno
icebp
xor
insb
pop
dec
mov
test
ja
mov
mov
add
jnp
inc
test
fs
out
outsl
ss
in
sub
fs
cmpsl
mov
lret
ret
mov
shlb
cmpsl
cmp
or
add
test
std
adc
xor
dec
or
sbb
push
inc
lcall
and
mov
repnz
lahf
lret
ja
xor
mov
std
pop
movsb
pop
fwait
out
push
push
push
stos
sub
sbb
cs
addr16
into
pushf
mov
or
movsb
dec
mov
xor
xchg
jne
mov
push
add
cmpsl
adc
addl
add
fisttpll
and
add
pusha
sbb
mov
pop
push
addl
sti
ror
int3
clc
xor
out
sub
loop
data16
fimull
hlt
nop
jle
scas
lods
in
pop
push
std
daa
test
mov
xchg
shrl
fcmovnbe
mov
and
ret
icebp
cwtl
xor
into
jg
lods
adc
push
mov
inc
mov
mov
jecxz
les
insb
lea
mov
add
sbb
jle
sub
xor
push
adc
mov
data16
fstpl
cmp
xchg
sub
ficompl
add
sti
je
jne
xchg
aam
push
fistpl
xor
push
cs
push
jbe
mov
xchg
inc
outsb
jo
mov
into
out
ljmp
xchg
fimuls
inc
loop
xchg
les
ja
sub
jno
mov
jmp
cltd
fndisi(8087
jo
shl
es
and
adc
xor
or
or
idivb
aas
mov
or
xchg
ficompl
fstl
sbb
xor
jns
jmp
sub
pop
inc
fistl
mov
ret
cmc
jnp
rol
int3
push
mov
jnp
add
adc
lock
fistps
insl
or
cmpsl
xchg
out
out
loope
fiaddl
out
mov
dec
xor
shll
xchg
into
loope
daa
test
add
ds
lods
pop
jne
dec
and
or
fistps
out
outsb
das
test
add
adc
daa
mov
add
and
popf
inc
mov
mov
xor
mov
sub
mov
pop
xchg
xor
mov
sbbb
jg
and
add
dec
xchg
mov
xor
test
out
popa
mov
jns
fcompl
and
mov
mov
stos
mov
stos
vpmulhw
sbb
or
nop
push
push
sarb
imul
cmpsb
jmp
scas
stc
outsl
xlat
pop
bound
outsb
push
sbb
sub
mov
test
out
test
push
data16
push
lcall
dec
dec
pusha
loop
bnd
cmpsl
stos
xor
sub
push
mov
fdivr
and
mov
outsl
add
mov
pop
push
int3
pop
imul
je
push
xchg
ja
shll
daa
popa
sbb
aas
mov
mov
and
push
xchg
rol
shlb
or
jne
outsb
jmp
push
mov
push
testl
loope
repz
mov
push
test
int3
test
jl
nop
and
mov
sub
flds
mov
out
pushf
in
addl
popa
mov
jae
xor
test
aaa
push
and
cmpsb
inc
rcpps
ret
rcrl
mov
mov
iret
adc
movsb
xor
aad
addr16
xor
dec
add
aam
xlat
mov
xlat
mov
mov
or
xor
imul
outsb
andl
dec
jmp
mov
mov
xlat
inc
xchg
cmpsl
jbe
mul
inc
adcl
cmp
stc
mov
jbe
icebp
shl
fwait
xlat
sub
rorl
pop
adc
shll
in
xor
cs
inc
dec
lods
pop
sbb
lea
ret
cmpsb
push
flds
dec
push
hlt
cmc
inc
into
div
mov
pop
and
add
out
inc
in
fnstsw
arpl
sbb
pop
mov
mov
cmp
mov
in
ljmp
test
fists
xor
inc
pop
cli
aam
inc
cld
out
adc
xor
jecxz
add
addr16
cmp
cmp
sti
sti
or
rorb
hlt
mov
pop
mov
cmp
mov
insb
push
leave
push
sbb
or
popf
dec
cmp
pop
mov
stos
insl
and
clc
iret
lods
in
mov
cmp
sbbl
scas
scas
sbb
out
add
pop
push
test
jp
rolb
dec
add
sbb
aad
pop
inc
pop
push
lds
jbe
leave
fsubs
aam
mov
lea
mov
call
test
idivl
push
push
cmp
mov
adc
mov
mov
lret
pusha
bound
ss
mov
xchg
test
mov
adc
dec
jmp
ljmp
in
dec
sahf
btsl
and
add
fldt
push
pop
mov
outsb
or
mov
stc
mov
or
mov
out
mov
addr16
imul
aad
flds
iret
jp
jnp
imul
aaa
fimuls
mov
mov
out
cmp
xchg
fdivrl
pop
dec
pop
and
sbb
xchg
bound
cmpb
ljmp
and
mov
aas
sub
sbb
not
int
mov
dec
or
or
mov
inc
sub
or
lods
cmp
cmp
xlat
adc
sub
jae
xor
push
leave
fs
imul
clc
mov
jbe
in
jecxz
mov
inc
cwtl
cmp
imul
pop
jmp
lods
arpl
sbb
mov
or
jmp
data16
add
loop
xlat
pop
scas
aaa
sbb
pop
cli
daa
inc
jnp
mov
sub
lea
push
cmp
hlt
lods
insb
xrelease
cmp
pop
into
daa
notb
xor
mov
int
jnp
push
aas
mov
mov
jbe
lret
sti
cltd
ret
scas
sbb
out
lret
add
mov
jg
popa
pop
mov
mov
adc
ljmp
or
rcll
xchg
movsb
js
icebp
in
dec
in
sti
mov
xor
cmp
push
dec
mov
cmpsl
es
xchg
and
mov
push
andl
shl
fwait
jge
pop
sbb
xchg
cmp
jge
xchg
inc
add
fsubp
enter
xchg
mov
test
sbb
sbb
hlt
add
rclb
and
inc
enter
jle
mov
repz
lret
mov
and
mov
stc
push
cmpsb
mov
mov
arpl
xor
mov
fsubs
sbb
mov
shr
imul
int
and
jb
mov
push
xor
rep
mov
mov
inc
adc
imul
push
push
adcl
mov
or
pusha
and
sbb
xchg
pop
aaa
jb
mov
inc
xor
cld
jg
imul
stos
movsb
filds
gs
push
test
dec
lret
fadds
out
sbb
pop
mov
sbb
icebp
xor
mov
cwtl
scas
out
cmp
das
loopne
outsl
xchg
or
mov
mov
cmp
pop
outsb
test
insl
or
or
jmp
shrl
pop
lret
cwtl
and
pop
jno
jmp
inc
inc
mov
mov
mov
dec
imul
outsb
insb
cmp
xchg
pop
into
popf
push
ja
jmp
xlat
mov
mov
adc
mov
int
and
adc
mov
push
int
mov
add
hlt
mov
dec
ret
shrb
push
pop
inc
movsl
cmpsb
int3
push
push
dec
pop
hlt
pop
bnd
es
cld
mov
clc
repnz
pop
mov
jle
ljmp
std
lahf
daa
mov
pop
mov
jns
inc
ret
mov
xor
mov
mov
mov
test
jbe
cmp
add
outsl
mov
icebp
pop
push
add
test
mov
jmp
sub
push
clc
pop
mov
outsb
xchg
loopne
dec
inc
lcall
push
cmp
pop
icebp
mov
es
xor
divl
mov
push
xchg
cmpsb
push
mov
loopne
cmp
aas
sbb
mov
sbb
sbb
xor
orl
in
adc
xlat
add
adc
insb
out
cmp
fmuls
sub
outsl
sub
inc
mov
inc
mov
pushl
lods
xor
push
jp
dec
xor
pop
ret
jbe
xchg
pop
or
shlb
sbb
push
les
sub
icebp
inc
xchg
push
adc
ljmp
pop
dec
aam
fwait
dec
mov
sub
sub
int3
and
fwait
sahf
jo
adc
cmp
lds
sbbl
clc
pop
mov
cs
je
dec
nopl
rcrb
cltd
cltd
stos
popa
shll
fs
bt
outsl
jg
jg
scas
fsubl
aas
arpl
dec
fistpll
mov
sub
sub
inc
mov
adc
cld
in
lock
iret
jns
dec
jecxz
jb
xchg
mov
fwait
pop
mov
stos
stc
adc
xchg
cmpsb
or
dec
mov
data16
mov
dec
pushf
int3
sub
pop
cmp
add
stos
pop
cmc
xlat
out
mov
pop
push
aas
jns
adc
in
pop
and
test
inc
ret
jbe
clc
xchg
dec
arpl
cmpb
idivl
pusha
sub
stos
mov
sbb
or
lods
mov
sbb
mov
lods
fwait
sub
adc
sbb
pop
mov
fidivrl
or
es
aam
add
out
jb
xor
adc
lods
jg
mov
mov
pop
jle
xchg
pusha
shlb
jae
cs
xor
pop
test
fiaddl
xchg
ss
adc
outsb
pop
jae
ds
sub
das
mov
mov
push
rcr
lret
cld
lret
arpl
movsl
xchg
into
test
data16
jns
sbb
dec
stos
pop
aas
outsb
sub
cld
xchg
xor
scas
fisubrl
mov
push
and
into
movsl
jo,pt
mov
stos
sub
or
mov
inc
mov
sub
jns
enter
push
std
out
cmpl
push
aaa
sub
ss
sub
jno
fisubrs
addr16
and
add
jbe
xchg
mov
pop
sub
mov
imul
ds
lret
mov
mov
sahf
ja
xchg
jmp
cs
xchg
loop
iret
lret
sti
mov
iret
jecxz
jae
push
mov
pop
jg
jp
pop
pop
xchg
pop
jmp
xor
je
stos
push
sbb
pop
adc
mov
orb
hlt
jne
in
cmp
cmp
add
aam
lret
sbb
add
popa
push
inc
stos
sub
sbb
in
cmp
mov
dec
into
jns
mov
jmp
cmp
and
sahf
push
mov
mov
dec
int
jecxz
mov
aam
cmc
dec
mov
aas
ljmp
or
dec
imul
mov
leave
lret
ja
ss
std
mov
shrb
pop
and
cwtl
lahf
sub
outsb
mov
lds
xchg
rcrl
xchg
out
mulb
push
out
sbb
and
popf
mov
mov
sub
lret
inc
pop
out
sbb
inc
pop
dec
or
daa
ss
add
add
xor
jb
xlat
sarb
les
iret
xchg
pushf
les
imul
shlb
loopne
imul
mov
mov
xchg
lcall
inc
sbb
inc
and
imul
loope
add
lahf
outsb
loope
xchg
divl
push
aas
fisttps
or
jle
pop
lcall
fbld
mov
mov
arpl
jbe
cli
lcall
pop
cmpsb
enter
dec
xchg
adc
out
cltd
add
popa
lods
insl
jle
jmp
add
mov
cmp
push
xor
js
loopne
jmp
loop
aaa
push
ljmp
xor
add
bound
cmp
mov
call
stos
xor
sbb
adc
pop
lea
xchg
xchg
andb
dec
pop
add
xchg
jnp
outsl
sbb
adc
daa
mov
aas
and
insb
dec
push
sub
jo
ret
pop
dec
cmpsl
push
cmp
and
jl
xlat
and
sbb
add
imulb
inc
mov
jno
aaa
push
and
pop
aaa
sbb
dec
inc
and
inc
rol
addr16
popa
xchg
push
nop
jmp
mov
and
and
incb
pop
outsb
inc
gs
pop
pop
cmp
push
loope
xor
nop
lret
ljmp
jmp
dec
repz
xor
mov
js
hlt
cmc
pop
sbb
stc
mov
es
mov
sbb
fisubs
mov
mov
or
xor
ret
leave
test
mov
jo
cmpsl
scas
sub
stos
stos
jb
iret
mov
mov
sbb
or
and
push
addr16
test
call
cmp
mov
jne
mov
dec
add
ret
pop
jo
jl
add
pop
xlat
lods
and
cmp
push
gs
and
int
push
pop
shll
pop
loopne
mov
stc
je
outsl
test
into
sub
mov
or
mov
inc
dec
stos
add
dec
add
pop
sub
notb
xchg
not
int3
xor
sub
stos
ljmp
push
andb
jge
adc
sbb
daa
lret
push
add
aad
jbe
mov
jge
mov
shll
pop
scas
xor
and
outsb
sbb
popf
mov
shlb
outsb
pop
aam
or
test
insl
das
popf
gs
pushf
jg
stos
jae
mov
push
sub
mov
xor
scas
adc
cmpsl
xchg
mov
insb
fcmovnbe
insl
mov
xchg
movsb
daa
xor
jae
mov
pop
sbb
lods
sti
popa
pusha
mov
mov
inc
pop
dec
add
pop
ljmp
and
sub
dec
lds
xchg
or
rorw
pop
inc
push
sub
lcall
add
push
cmp
adc
and
mov
sub
push
xchg
or
mov
clc
fildll
xchg
xorb
sub
mov
shlb
call
mov
xor
stos
pop
mov
add
push
fldenv
inc
es
into
into
mov
jmp
jge
aam
pop
xlat
pop
mov
sbb
out
mov
inc
push
cmovne
add
mov
addl
push
dec
inc
enter
pavgb
outsb
cmp
mov
push
in
pop
mov
inc
movsb
aaa
mov
das
iret
js
test
aaa
dec
leave
adc
jne
scas
fwait
insb
mov
in
sarb
sbb
add
rorb
cld
mov
fimull
or
and
mov
lcall
xchg
inc
mov
pop
in
lahf
iret
pop
stos
flds
mov
mov
sub
fadd
lds
mov
sbb
mov
jecxz
lret
mov
sub
stos
in
inc
scas
xchg
adc
int3
mov
jg
lret
or
ljmp
cmp
mov
es
lea
dec
loope
sub
lds
sbb
mov
in
setnp
push
daa
test
scas
adc
cmpsl
push
insb
pop
jl
sub
loop
mov
js
push
push
lea
cmp
insl
and
movsb
pop
and
ffree
andb
xchg
cmp
pusha
cmp
add
xor
loopne
xor
out
mov
sub
in
cld
cmpsl
cmp
pop
insb
bound
mov
or
fiadds
and
jecxz
bnd
in
dec
xchg
push
es
insb
xchg
cmp
or
mov
mov
aad
into
hlt
xlat
jmp
mov
jne
push
mov
inc
push
jae
mov
sbb
loope
out
mov
adc
push
lea
pop
mov
stc
mov
push
lods
ds
jo
lret
lods
into
lods
daa
xchg
rcl
jg
sar
cmp
clc
add
sbb
cmp
adc
or
cwtl
ljmp
add
push
in
sahf
mov
out
ret
jns
add
andb
mov
add
sub
cwtl
out
jg
shrl
rolb
add
mov
sbb
js
scas
add
das
lock
mov
fsubl
enter
cmp
push
mov
lds
pop
add
ljmp
cmp
inc
imul
mov
fsts
mov
xchg
mov
add
xchg
adc
lea
data16
popf
adc
xor
ret
repnz
mov
lods
inc
shr
ds
pop
dec
aam
pop
iret
xchg
push
pop
push
arpl
cmp
dec
xchg
loop
jecxz
out
sbb
mov
jns
and
pop
xchg
mov
pop
pushf
xchg
jb
adc
jmp
xor
and
inc
shlb
and
xchg
ds
add
in
mov
xchg
punpckhdq
bound
sti
dec
test
sahf
push
xor
call
inc
mov
jl
adc
test
in
jge
sbb
negl
sahf
inc
or
pop
jns
lret
stos
mov
push
test
fwait
cmpsb
push
xor
arpl
sar
decb
insb
sbb
push
xlat
inc
lret
jle
push
adc
fsubrl
adc
ljmp
jnp
or
mov
cltd
adc
jne
push
nop
jne
lea
popf
mov
test
icebp
mov
nop
dec
leave
dec
cmc
ds
mulb
out
jo
inc
jns
push
mov
sub
lds
shrl
fistps
dec
les
mov
cmp
rcr
out
popf
xlat
dec
mov
xor
notb
mov
adc
int3
sub
dec
add
mov
adc
enter
mov
jno
pop
adc
dec
int3
adc
lcall
inc
push
imul
mov
push
mov
cltd
sbb
icebp
lods
xchg
mov
adc
cmpsb
xor
mov
dec
and
cmp
aam
int
xor
and
add
jle
hlt
mov
fldenv
cmp
push
int
in
push
mov
repnz
jnp
sbb
cmpsl
icebp
xchg
out
lcall
mov
inc
js,pn
fnsaves
aaa
aam
shl
sahf
popf
movsl
cmp
ja
loopne
and
out
and
lcall
jge
ror
insl
adc
mov
mov
and
sbb
add
jne
icebp
cmc
andb
enter
jnp
jmp
leave
fidivs
push
pop
aaa
insb
and
ss
mov
or
pop
int3
jo
jo
movsl
mov
push
rcll
pop
mov
ficompl
out
and
xchg
xor
lahf
dec
data16
in
sbbb
push
cmp
sub
or
je
inc
fsub
adc
aaa
stos
int
jb
mov
inc
lret
idiv
in
stc
ret
mov
je
sti
out
test
ficoms
dec
xchg
pop
int
xchg
mov
xor
add
lret
dec
insl
shrl
add
sti
aad
cmp
and
icebp
adcl
jne
mov
or
call
push
pop
in
jg
push
into
pop
popf
dec
mov
in
mov
mov
push
scas
lea
mov
xor
xor
mov
dec
das
mov
pop
into
and
and
and
inc
pop
dec
dec
js
add
lret
loop
and
into
jne
lods
pop
daa
repnz
mov
shll
fistps
inc
test
mov
in
ljmp
xor
mov
out
push
cmp
arpl
xchg
gs
iret
inc
mov
mov
jne
sub
in
adc
pop
lock
jo
xchg
pushf
pop
push
insl
hlt
stos
out
in
push
pop
sbbl
dec
add
adc
cltd
sti
unpcklps
in
in
data16
sbb
and
je
cmp
mov
cmp
clc
int3
fidivrl
int
sub
sub
loopne
pop
xor
cmp
lret
test
add
in
mov
mov
push
xchg
fiadds
fsubrs
xchg
cmp
mov
sbb
pop
fwait
mov
inc
xor
insb
pop
in
dec
inc
jo
adc
mov
and
pushf
faddl
nop
push
jne
jnp
dec
into
push
movsb
outsb
xchg
stos
fldcw
adc
cmpsl
xchg
mov
out
out
ficoms
outsb
xor
clc
lahf
push
sub
xor
adc
pop
lds
scas
xchg
xchg
adc
mov
jl
sbb
push
iret
dec
pop
fadds
adc
jge
inc
lods
mov
pop
loopne
stos
pop
ljmp
xchg
dec
sbb
lret
pop
scas
xlat
in
sbb
pop
pop
inc
fcmove
sbb
int3
add
or
in
insl
or
jl
adcb
and
test
gs
enter
adc
lret
out
sbb
jo
sahf
mov
das
rolb
movsb
js
pop
mov
cmp
sahf
push
mov
daa
push
ds
dec
mov
ret
mov
stos
loop
in
dec
adc
lahf
jmp
shrb
inc
xor
xor
push
mov
xor
and
jmp
xor
test
mov
push
sbb
pcmpeqb
ja
mov
push
mov
sbb
sub
insb
pop
jle
mov
mov
lods
xor
cli
faddl
sub
or
pop
pop
pop
fwait
jmp
push
mov
push
sbb
arpl
scas
sbb
pop
push
ss
outsb
dec
test
jl
cmpsb
shlb
ja
mov
inc
jns
pushf
jb
push
and
clc
cmp
sti
jno
xchg
and
js
add
xor
sbb
adc
xchg
enter
or
fwait
call
dec
push
mov
insb
sub
pop
repnz
pop
in
test
outsb
insb
ret
add
ret
clc
sub
and
jo
dec
insb
cs
pop
popf
pop
loop
pop
dec
repnz
scas
out
inc
mov
sub
jb
jge
xor
test
xchg
cmp
pushf
jo
stos
adc
mov
cmc
mov
add
jb
lods
sbb
xchg
es
cmc
pop
pop
jp
mulps
cmp
pusha
sbb
cmpb
jae
dec
mov
xchg
sbb
mov
cs
add
fwait
dec
push
mov
push
es
xchg
sbb
arpl
sub
inc
mov
xor
or
xor
movsl
psrlq
xchg
fisttpl
adc
lea
jl
int
cmpsl
lods
mov
xor
jle
enter
inc
cmp
out
push
jb
push
xchg
data16
mov
out
lret
cltd
aad
mov
push
pop
push
cltd
dec
pop
jg
enter
dec
repnz
das
shlb
and
xchg
jmp
push
aam
sub
cli
adc
das
aam
xlat
mov
jecxz
adc
add
jno
or
jns
inc
sbb
mov
movsb
ljmp
xchg
mov
lods
daa
stos
ja
cmp
int3
imul
inc
out
std
mov
imul
push
xchg
clc
filds
or
scas
les
movsl
jnp
dec
mov
ss
xchg
cld
mov
shlb
mov
pop
or
mov
add
dec
jne
xor
enter
mov
negl
iret
dec
push
pop
mov
adc
add
loope
cld
test
jbe
mov
mov
mov
stos
or
aam
lcall
dec
rorb
mov
mov
dec
out
mov
or
and
ljmp
xchg
fsin
jmp
xchg
mov
cmpsl
and
xchg
jmp
jno
xor
mov
or
xor
mov
dec
push
push
fcoml
aam
pop
int
mov
mov
inc
loop
pop
dec
scas
pop
push
loope
rcrb
enter
scas
mov
pop
cmpsl
cmp
loope
adc
sti
jbe
mov
cld
repz
lcall
mov
cld
mov
inc
mov
xchg
fadd
mov
nop
cmp
les
imul
inc
xchg
stc
mov
mov
fisubs
jle
rcl
lret
add
inc
out
add
mov
xchg
push
push
inc
push
xor
adc
std
in
cmpl
push
and
test
dec
cmpsb
mov
js
inc
daa
adc
mov
dec
fadd
mov
xor
je
jg
adc
std
out
add
xchg
adc
rorl
icebp
mov
insl
xchg
xchg
inc
add
sub
mov
daa
nop
enter
out
into
xchg
adc
xor
pop
jnp
jb
movsb
in
sbbl
icebp
mov
pop
filds
fwait
dec
xor
pop
in
inc
out
adc
daa
mov
imul
test
ds
sbb
mov
adc
xchg
mov
rcrb
and
sub
mov
mulb
mov
mov
cmp
xor
xlat
insb
pop
int3
sbb
push
mov
idivl
repz
add
mov
int3
mov
imul
lods
inc
test
test
jmp
js
jp
mov
and
fisttpl
push
or
mov
js
mov
cmpsl
fcomp
mov
sub
je
stc
xor
dec
xor
or
mov
lods
cmpsl
jle
filds
adcb
lock
push
adc
and
sbb
hlt
call
jge
out
sbb
push
mull
xchg
sbb
icebp
mov
sbb
stos
xchg
imul
insb
repnz
add
lds
mov
cmc
push
jmp
sbb
cmp
fildl
xchg
clc
mov
loopne
cs
aas
aad
sbb
shr
aad
sbb
and
push
ss
xchg
icebp
mov
dec
or
sub
or
mov
clc
out
iret
in
cmp
fisubrs
ds
add
dec
jno
scas
in
add
cmp
roll
dec
iret
push
lods
leave
mov
pop
mov
and
sub
add
dec
arpl
popf
daa
call
fldl
jmp
bound
test
jge
mov
stos
xor
scas
push
cmp
cmp
push
pop
stc
aad
jb
push
dec
cmp
fldt
sti
push
jno
xchg
movsb
cs
push
sub
mov
or
push
cmpsl
test
jno
lcall
lock
lods
nop
andb
add
mov
aaa
fbstp
nop
or
stc
addr16
mov
out
roll
stc
cld
imul
xchg
addl
mov
scas
lahf
test
and
jb
inc
push
push
dec
push
and
nopl
mov
shr
sbb
daa
sbb
jl
mov
push
fnsave
push
movsl
andb
jbe
and
push
fstps
sahf
adc
addb
dec
movsl
cmp
hlt
fsubr
xlat
daa
test
pop
call
ffreep
loop
jl
hlt
in
mov
fnsave
fldl
mov
jg
xchg
lahf
adc
add
ja
faddp
pop
lret
mov
lea
imul
add
rcrl
jno
fsubr
inc
pop
insl
je
arpl
or
fcompl
aam
int3
inc
movsb
xchg
xchg
pop
arpl
push
and
imul
and
clc
pusha
loop
xchg
loopne
cli
jl
pop
out
out
jnp
clc
out
push
mov
cvtps2pi
inc
arpl
aaa
sbb
jecxz
les
loopne
movsb
cmp
movsb
sbb
cmp
sub
jbe
int3
adc
push
rolb
cmp
pop
aad
std
pushf
push
inc
jnp
gs
mov
loopne
sbb
stos
popa
adc
sbb
xor
jae
hlt
xchg
gs
dec
pop
mov
dec
fmul
jge
pop
in
jae
mov
dec
jle
in
dec
mov
sbb
cmp
dec
in
shr
nop
jle
push
add
xor
les
aad
cmpsl
pop
movsb
sub
insl
into
cmc
loopne
xor
lret
addr16
sub
stos
push
pop
fildll
sbb
pop
or
das
and
jae
pop
test
dec
jno,pt
sbb
mov
loopne
ljmp
push
jo
loop
mov
sbbw
mov
insl
cltd
fmull
data16
inc
aas
mov
sbb
test
or
sbb
movsb
rclb
aam
jl
cmpsb
ret
pop
sti
mov
inc
cs
cs
daa
ss
xor
lahf
aad
cld
ds
xchg
push
xchg
mov
pushf
clc
cmp
in
push
mov
icebp
mov
repz
jno
mov
dec
xor
sbb
lods
dec
rorb
addr16
cmp
ljmp
and
mov
pop
or
insl
jns
lods
xorl
sbb
and
in
mov
sbb
adc
pusha
sti
cmc
sbb
inc
ljmp
jg
mov
xchg
and
testl
sub
inc
fisubrl
imul
or
orb
add
stc
sub
mov
inc
lds
adc
jbe
out
sbb
mov
stc
mov
arpl
in
jge
xchg
xchg
pop
pop
aad
xchg
sbb
xor
dec
les
mov
les
mov
movsb
das
jo
cmp
jb
fsubrl
inc
fnstsw
fcomp
fists
scas
inc
sbb
repz
jns
lret
pop
mov
sbb
push
dec
xlat
cmp
cmpsl
jno
and
int
loop
dec
or
not
js
inc
mov
jnp
imul
scas
rorb
ds
test
test
xlat
sbb
pushl
adc
pop
push
adc
and
fldl
int3
pop
mov
pushf
stos
push
fcoms
sub
orl
es
and
addr16
rclb
sti
mov
xchg
iret
lea
jmp
imul
lds
out
mov
jnp
scas
dec
mov
mov
test
sbb
nop
movsl
outsl
push
test
xor
pusha
sbb
mov
loope
mov
icebp
mov
dec
xchg
sbb
add
nop
pop
xlat
repnz
pop
push
lcall
mov
sub
sbb
sbb
popl
leave
pushf
test
jnp
aaa
outsl
push
xchg
or
loopne,pt
and
and
mov
sub
fldlg2
dec
stos
mov
scas
jmp
cli
aas
xchg
pop
push
inc
into
push
pushl
cmp
adc
jecxz
shlb
sub
shl
adc
lds
xchg
push
int
in
dec
xor
imul
or
lcall
lds
dec
add
add
mov
push
lret
jo
mov
jge
jns
in
add
dec
mov
notl
pop
mov
shr
adcl
pop
shlb
sub
js
insl
jb
jne
push
dec
xchg
cmp
adc
mov
or
cmp
out
inc
std
popa
cmp
add
das
add
fstl
cli
cmpps
jmp
cmp
mov
lret
push
dec
jl
xor
pop
in
xchg
scas
mov
orb
sbb
xor
cmpb
repz
les
xchg
popa
dec
and
ficoml
xchg
aaa
test
repz
insl
sbb
push
mov
dec
pop
pop
call
and
mov
enter
mov
or
jns
bound
dec
jle
iret
and
imul
jecxz
shl
or
lods
xor
sahf
jle
sub
aas
jae
xchg
daa
inc
call
jno
es
mov
push
in
mov
cld
movsl
mov
mov
xlat
adc
sub
mov
pop
pop
adc
test
jb
lods
add
out
inc
in
adc
cmc
mov
repz
sub
or
pop
fldenv
adc
jmp
aad
call
or
outsb
mov
sahf
repnz
incb
addr16
mov
jns
sub
pop
push
xchg
lods
in
lahf
inc
test
push
ds
les
ds
fs
jne,pn
and
gs
dec
aad
fstpt
imul
insb
xchg
lods
bound
jo
int
jle
nop
leave
sbb
leave
lea
push
push
xchg
and
fldl
movsb
mov
arpl
jmp
addr16
add
ss
inc
xchg
cmp
pop
fdivs
ficompl
stos
pusha
push
shll
sub
pop
cmp
in
or
inc
fisubl
cmc
test
fsts
mov
dec
rolb
adc
std
clc
sub
lret
test
das
ds
cmp
inc
subb
in
mov
inc
jp
jb
loopne
dec
add
rorl
pop
hlt
and
jmp
repz
stc
dec
repz
popf
imul
mov
adc
insb
test
ret
inc
fwait
and
lcall
popa
dec
xchg
mov
movsb
jmp
push
cmp
sahf
sbb
fsubl
mov
xchg
xor
shlb
fnstenv
scas
mov
jnp
mov
sub
adc
adcl
jecxz
cltd
pop
pop
sbb
aas
rclb
cmpl
jl
jmp
sbb
les
outsl
insb
insb
cmp
cmp
xchg
cld
shl
ds
ret
lea
jb
ret
cld
movsl
addl
adc
cs
outsb
inc
cmp
das
xor
or
mov
into
inc
mov
mov
lods
enter
lret
lds
jle
mov
pextrw
mov
dec
jns
imul
add
pop
xor
mov
push
jecxz
lds
mov
imul
push
cmpsb
sti
push
pop
mov
leave
mov
add
push
xor
pushf
pop
in
imul
xchg
pop
pop
adc
pop
aas
pop
aad
push
jns
add
pushf
loope
fwait
sub
imul
movb
push
and
testl
mov
cmp
cld
lods
jg
or
mov
scas
repnz
adc
jg
pop
cmp
stc
adc
sahf
adc
xchg
xchg
sub
xchg
lcall
add
in
mov
mov
cmp
faddl
jns
add
pop
pop
leave
add
fcmovnb
pop
jmp
xchg
jp
mov
fmuls
stos
inc
xchg
dec
mov
cmp
xor
cmp
int
push
ret
push
outsb
call
fldenv
sub
lods
xchg
mov
sub
dec
jmp
mov
in
push
jecxz
sbb
jns
out
dec
mov
aaa
je
sahf
scas
or
pop
jl
adc
cltd
shl
movsl
cmp
dec
popa
add
rcll
mov
mov
push
cmc
dec
stc
test
ret
mov
icebp
pop
lahf
cmp
or
push
dec
cld
xchg
mov
xor
stos
rorb
xor
dec
xor
and
int3
mov
mov
in
popa
mov
lret
cmpsl
in
mov
lahf
sub
add
enter
movsb
pop
sbb
aad
cmpsl
jmp
xor
je
push
inc
lock
sbbl
and
cmp
xchg
les
cli
je
adc
shlb
mov
or
test
mov
push
cmp
lds
mov
inc
and
add
dec
jl
mov
outsl
sub
or
insl
cmp
fidivrs
push
test
in
xchg
cmp
xlat
cmp
andb
loop
icebp
dec
lret
inc
fst
addr16
pop
push
mov
enter
and
and
sub
sbb
call
imul
loopne
push
push
rcll
mov
sbb
dec
push
mull
add
mov
dec
sub
das
popf
adc
and
fcoms
stos
cmpsb
nop
inc
mov
ds
ja
sar
sub
das
jge
mov
push
and
mov
lods
adc
imul
bnd
sbb
mov
shrl
xchg
push
out
gs
fs
cmpsb
js
adc
ficomps
sub
mov
or
fucom
dec
mov
jp
mov
xchg
jg
pop
push
fisubrl
cwtl
out
pop
pop
bound
jbe
push
mov
mov
xchg
cmp
cmp
cld
inc
filds
mov
ljmp
les
jne
push
add
cwtl
jmp
jbe
mov
sbb
aam
add
pushf
jb
inc
stos
and
jl
and
fdivl
fdivrs
scas
out
test
add
stos
cmpsl
cmp
out
cvttps2pi
stc
or
mov
pusha
push
push
fbld
aaa
or
into
push
rcrl
cmp
aad
sub
or
cltd
mov
maskmovq
idivl
test
andb
push
das
imul
cmc
sub
lret
dec
int
mov
add
sti
in
xchg
jmp
shrb
loopne
mov
pop
aam
push
addr16
or
xor
daa
in
inc
cld
insl
ret
out
sbb
lock
imul
add
add
sbb
scas
jmp
jecxz
dec
inc
mov
pop
popl
bound
push
rcrb
mov
loopne
sarl
lea
bound
call
adc
lcall
outsb
out
sbbb
lods
inc
lea
cmpsb
push
sub
adc
xor
sub
jle
int3
jbe
mov
mov
jle
outsb
sbb
int
inc
lret
aad
xlat
adc
sub
cld
aad
inc
shrb
cmc
pop
cmpsl
out
jmp
rol
jb
mov
out
sbb
ret
cli
ja
add
sbb
imul
stos
out
sub
pop
arpl
mov
negl
cmp
adc
movsl
cmc
or
cld
push
and
out
cmp
pop
std
lea
pop
ja
or
jb
cltd
pop
cmp
sahf
fisubl
fadds
hlt
out
enter
or
dec
jg
lods
jle
int
cli
inc
cmpsb
pop
sub
mov
mov
in
cltd
mov
sub
std
dec
gs
scas
adc
push
div
jle
xor
mov
lret
out
pop
mov
ret
inc
mov
pop
sbb
lods
inc
mov
adc
les
push
mov
push
popf
mov
mov
inc
lret
jmp
xchg
jmp
jbe
jecxz
cli
mov
bound
cmp
xlat
aas
mov
pop
enter
aad
xchg
sub
push
mov
jmp
jge,pn
or
loope
jl
jns
hlt
xlat
call
fsubs
and
xchg
int3
and
scas
push
loopne
scas
aad
das
les
pop
adc
sti
je
inc
bound
fstps
adc
jge
addl
jae
pop
lret
sbb
fisttpll
push
int3
loopne
cmp
cmp
fwait
lahf
stc
adc
adcb
mov
pushf
xchg
pop
iret
inc
jl
xchg
and
repnz
push
pop
cwtl
test
out
sarb
inc
clc
dec
and
ss
je
rclb
inc
pop
cmpsl
jae
xchg
ds
pop
and
xor
mov
test
out
xchg
out
push
cli
pop
and
mov
xchg
lds
jne
daa
jno
cld
mov
push
aam
repz
cmp
xchg
pop
roll
push
mov
jno
test
fsubl
sub
dec
shlb
fildl
mov
lret
sahf
jnp
add
sti
in
push
out
mov
mov
dec
push
dec
loop
out
les
ss
jmp
xchg
xor
lods
mov
out
ror
cmp
mov
ss
mov
adc
sub
shrb
stos
dec
int
jmp
cmpsl
stos
ret
jno
sub
popa
or
mov
movsb
mov
sbb
mov
sub
sbb
aaa
jmp
push
movsb
loopne
xor
insl
push
mov
iret
inc
mov
mov
pushf
pop
mov
daa
mov
leave
push
and
ljmp
xchg
dec
dec
iret
push
loope
stc
mov
lock
mov
clc
push
out
lock
push
in
andb
fadd
lahf
jb
lock
into
adc
nop
shlb
out
lahf
shlb
rorl
push
stos
inc
xchg
cmpsb
sti
jp
sbb
jb
popa
push
inc
xorb
rcrl
mov
aas
mov
dec
xor
and
in
fcomip
cmpsb
cmpsl
cmc
mov
inc
sbb
xchg
inc
fstpl
or
xchg
ret
push
add
adc
hlt
add
mov
test
clc
push
sbb
fwait
xchg
jne
mov
rcr
push
sbb
fmulp
arpl
xor
loop
push
repz
push
add
xor
js
sbb
sbb
mov
cmpsb
stc
cli
add
adc
mov
and
stos
orl
inc
repnz
movsl
dec
add
outsl
loop
in
dec
test
inc
fwait
cmp
sbb
mov
lods
sarb
push
push
or
push
aad
push
rorl
mov
in
dec
xor
lcall
or
ror
jns
cmp
mov
push
xchg
dec
push
mov
stos
push
inc
in
bnd
outsl
xor
push
fcoms
dec
rolb
xchg
lea
je
dec
roll
in
mov
xor
shlb
pop
or
ficoml
sarl
pop
pop
xchg
mov
decb
mov
jmp
dec
movsl
popf
mov
adc
loope
hlt
fstpt
mov
jnp
clc
mov
sbb
sbb
lods
mov
out
cli
mov
inc
xchg
scas
sbb
clc
dec
aaa
dec
push
test
adc
dec
test
aam
mov
stc
push
loope
aaa
or
adcl
test
ror
fwait
pop
mov
pop
inc
push
leave
mov
mov
shlb
push
cmp
adc
ljmp
aaa
les
and
add
es
jle
sti
xchg
aam
int
pop
xchg
lds
mov
cmp
add
fs
repnz
clc
inc
vcvtps2pd
xor
idivb
xchg
insb
push
sysenter
pop
mov
pop
xchg
fmulp
jne
repnz
pop
mov
mov
jp
movd
test
sub
sub
pop
stos
mov
frstor
lret
ja
dec
jbe
jge
jo
jmp
popf
xchg
popa
ret
lret
xor
jge
popa
lock
sub
mov
fdivrs
and
jno
call
js
mov
cmpsl
xchg
and
arpl
dec
sub
iret
adcl
nop
inc
cli
jp
add
sbb
clc
inc
mov
pop
cmp
jmp
scas
shrb
loop
lods
and
frstor
mov
push
cmc
mov
lret
add
dec
pop
mov
clc
mov
inc
mov
out
test
push
push
mov
xor
shlb
add
push
aas
adc
pop
inc
cmpb
testl
into
shl
fstp
pop
jne
xor
leave
mov
fsts
mov
insl
push
sbb
repz
stc
push
pop
test
sbb
xchg
gs
add
mov
pop
add
hlt
push
push
pop
in
cmp
push
insl
int
jp
push
fcompl
dec
ja
and
shlb
mov
out
in
mov
into
das
jns
in
cmp
mov
dec
mov
pop
out
ljmp
in
mov
jne
jnp
xor
cltd
enter
in
sbb
lods
lcall
cmp
mov
pop
idiv
mov
mov
aad
jmp
or
nopl
xchg
inc
ss
inc
imul
push
clc
clc
xchg
jne
aaa
jmp
ret
push
in
adc
xor
fistpll
jns
cmp
fsubs
movsl
push
add
inc
ret
and
xchg
cmp
arpl
int
dec
push
pop
lds
cltd
fnsetpm(287
addr16
sub
or
ficoms
and
lea
push
mov
int
std
test
cli
sbb
push
mov
movsb
cmpsb
ljmp
enter
pop
add
mov
lcall
xchg
outsl
xor
fisttps
xchg
je
lods
mov
mov
insb
clc
adc
xchg
xlat
xlat
pop
jae
pop
les
gs
daa
lret
xor
pop
int
inc
imul
rol
js
xchg
roll
adc
jl
push
push
dec
pushw
movsl
jb
dec
sbb
or
mov
in
test
lds
inc
mov
mov
cmpb
sti
dec
pop
mov
or
mov
push
inc
cmpsb
lret
or
inc
ja
div
add
data16
mov
sbb
xorl
ret
push
adc
fldt
mov
rol
mov
imul
and
icebp
pusha
and
push
scas
dec
fldl
mov
cmp
jae
adc
mov
outsb
adc
jo
push
shrb
scas
jno
sti
adc
lds
jecxz
push
lahf
push
or
fldcw
lods
mov
decl
adc
jbe
stc
cwtl
cmp
or
jb
mov
aam
dec
ret
out
fstp
sub
dec
stos
xor
in
les
jmp
push
push
xchg
jbe
shlb
or
sti
insl
imul
dec
bound
sub
inc
pop
sub
scas
sbb
xchg
lret
aas
mov
cmpsl
mov
push
repnz
test
pop
jne
mov
loopne
and
mov
shlb
adc
sbb
push
pop
test
mov
enter
xlat
and
fisubs
mov
in
push
iret
push
dec
mov
jp
mov
inc
imul
ret
leave
push
adc
mov
js
jle
hlt
das
ds
cmpsb
repnz
pop
sbb
fsubrp
xor
ret
add
xchg
mov
mov
jp
pop
xchg
iret
sbbb
int
and
jo
jnp
add
or
mov
sub
mov
bound
in
testl
in
push
aaa
or
pushf
sbb
or
dec
pop
jmp
and
mov
adc
movsl
aaa
xchg
sbb
lcall
xchg
mov
icebp
jl
ss
mov
jae
fisubl
push
fucomp
adc
ljmp
xor
loopne
lods
fwait
out
in
xor
pop
ds
xor
fmull
and
pop
jmp
mov
icebp
outsb
aaa
mov
and
cs
push
mov
xor
mov
dec
add
mov
pop
imulb
jmp
imul
mov
inc
add
jns
outsl
xchg
pusha
cwtl
mov
cmp
dec
xorb
sti
push
push
fcmovnbe
cmp
out
jmp
mov
mov
jo,pt
cmpsb
in
mov
test
shlb
imul
rcrb
sbbl
sub
pop
jp
cld
lods
addl
in
outsb
sbb
sahf
cmpsl
adc
push
mov
sbb
and
mov
and
sbb
inc
add
adc
leave
mov
and
push
out
addr16
add
inc
jl
pop
pop
pop
out
sbb
ja
mov
xor
fbstp
sbb
fstpl
sti
popa
jp
or
fs
dec
sub
mov
das
push
mov
clc
jle
sub
mov
and
push
push
push
sub
add
lret
das
pusha
pop
int3
mov
inc
test
addr16
add
inc
lcall
lock
stos
mov
jno
outsl
ret
test
clc
pop
mov
pushf
dec
sub
xor
mov
xor
xchg
dec
inc
pop
cmp
mov
orl
mov
mov
mov
hlt
lds
cmpsl
jae
xchg
push
int3
mov
pop
jb
cli
imulb
and
clc
roll
mov
inc
push
mov
pop
and
fnstenv
adcl
mov
or
mov
push
or
xlat
cmp
mov
jle
lret
push
jne
xchg
dec
mov
movsl
insb
jmp
adc
or
movsb
cld
mov
in
xchg
leave
les
mov
fsts
sub
iret
rcr
test
xchg
inc
in
enter
cmp
icebp
lret
inc
int3
imul
jno
jns
ds
adc
test
icebp
in
fsubrp
arpl
inc
stc
mov
or
js
aam
push
sub
clc
mov
scas
mov
or
mov
ss
or
into
cmp
cmp
add
rorb
jbe
xchg
adc
cmp
aas
lock
fs
sbb
and
mov
adc
or
mov
pop
or
js
loope
inc
sub
loopne
push
loopne
xchg
in
jmp
add
test
jge
cld
arpl
sbb
lds
addb
mov
jle
les
cmpsb
add
and
jb
not
ficoml
jl
sbbl
xchg
or
test
xchg
jg
dec
pop
sbb
add
std
xchg
ficompl
fwait
leave
xchg
inc
in
in
cld
loopne
push
push
push
jle
in
sbb
scas
adc
jns
push
lret
xor
push
push
jle
fwait
pop
cltd
push
xor
sbbl
xor
or
imul
sub
ljmp
pop
daa
xor
test
pop
jae
dec
pop
mov
jb
test
frstors
int
mov
jbe
push
mull
fsubrp
inc
add
fdivrp
xor
js
inc
push
xlat
pop
hlt
icebp
push
data16
lods
dec
movsb
mov
shl
insl
lock
sbb
inc
ljmp
jle
mov
jmp
stc
mov
mov
jbe
xchg
jae
mulb
and
mov
lods
rorb
lcall
adc
aaa
in
insb
rcrb
inc
data16
xchg
mov
adc
xor
fimuls
es
call
lahf
pop
cmpsl
std
dec
mov
lret
jb
add
jo
mov
pop
int
sbb
iret
jp
and
dec
xchg
movsl
test
push
outsb
push
std
stos
or
xchg
pushf
mov
shrb
in
imul
xchg
lcall
testl
mov
jbe
test
adcb
mov
cs
push
inc
sbb
out
mov
gs
imul
js
add
fnstcw
out
xchg
jp
lods
mov
test
ja
nop
es
arpl
popa
xor
out
test
test
idivb
or
sbb
cmpsl
mov
jmp
rcll
sub
shrl
pushf
mov
pop
ljmp
sbb
mov
icebp
add
inc
add
adc
mov
clc
dec
xor
push
fwait
mov
xor
int
sbb
fcoms
mov
push
or
jmp
add
jg
pop
sbb
push
sbb
sub
adc
push
daa
arpl
nop
push
dec
mov
shl
and
dec
out
mov
jge
cmp
cmp
and
mov
and
orl
roll
mov
out
inc
aam
pushw
mov
in
mov
in
ljmp
inc
cmp
aad
rolb
push
push
mov
pushf
jge
into
jbe
adc
subb
cmpsb
add
or
dec
sbb
jae
cwtl
into
js
enter
or
int
pop
aad
cmpsl
les
call
mov
mov
js
cmpsb
fistps
leave
addr16
scas
aaa
cltd
xchg
cmpsl
mov
lods
jno
xchg
xchg
mov
leave
or
dec
xchg
jno
icebp
pop
aam
push
cmp
gs
jo
popf
mov
das
xor
xchg
cmpsl
loop
inc
aam
mov
xchg
xchg
xchg
scas
adc
xor
inc
mov
pop
mov
jno
dec
sahf
ret
adc
dec
rcll
fbstp
fdivl
mov
add
jb
adc
pop
frndint
lea
into
mov
push
sbb
mov
hlt
testl
arpl
or
lock
cmpsl
flds
out
mov
mov
and
pop
scas
pushf
testb
jl
orb
ljmp
int
jmp
loope
inc
jae
stos
pop
dec
testl
cmp
sub
push
repnz
mov
inc
mov
fcmovnb
sub
xchg
int
test
push
xchg
jle
mov
divl
fisttpll
push
jae
xor
fisttpl
fdivr
das
mov
imul
out
and
sub
cmp
ljmp
add
mov
mov
mov
imul
loop
push
mov
das
addr16
cmp
sub
jecxz
mov
in
fld
jne
inc
add
into
insl
divb
mov
mov
das
adc
out
push
sbb
push
sti
call
xor
add
push
sub
imul
shlb
lods
leave
sbb
pop
fwait
jecxz
shr
mov
sbb
jge
imul
add
movsb
sub
mov
cmp
pop
push
mov
push
cmpsl
out
loop
sub
adc
sbb
jo
mov
add
inc
dec
in
add
xchg
xchg
and
fisttpl
stos
mov
mov
push
push
and
inc
pop
movsl
mov
mov
shll
arpl
fdivrs
push
repz
push
ret
hlt
cmp
movsb
mov
jecxz
dec
ss
push
addr16
lods
jne
add
push
out
sub
lods
jne
aas
jb
xchg
add
imul
fs
xchg
and
daa
mov
pop
xchg
loope
test
jl
or
mov
je
dec
adc
pusha
and
insl
and
iret
inc
insl
js
push
jl
jecxz
test
fidivl
dec
push
sub
aaa
lds
inc
loope
cld
in
push
jb
mov
xchg
xor
dec
jmp
mov
push
lods
xchg
aaa
dec
sbb
add
lahf
pop
popf
fucompp
jecxz
or
adc
jbe
pop
cmpsb
cmpsb
repnz
sub
mov
sbb
iret
xchg
adc
cli
lea
mov
pop
outsl
clc
ss
mov
scas
jnp
in
loop
fucom
stos
fists
adc
add
adc
mov
cld
pop
sbb
cmpsb
imul
adc
rcll
inc
xchg
mov
and
pop
aam
dec
push
mov
imul
or
es
es
xor
cmp
pop
popa
stos
fcoms
jl
es
jle
rcrb
dec
aaa
test
testl
push
mov
mov
dec
xchg
cltd
add
stos
cltd
jbe
jb
xor
pop
pop
adcb
ret
inc
cld
adc
xchg
incb
test
and
sub
push
mov
mov
cmp
movsl
std
push
sbb
popa
scas
pop
mov
sbb
into
into
xor
imul
add
or
mov
dec
cmp
lahf
leave
call
and
out
mov
add
mov
pop
cltd
aas
xchg
adc
cli
mov
sbb
cmp
pop
mov
adc
sti
outsb
cmp
jmp
xchg
mov
jecxz
adcb
xor
int3
div
cltd
ret
in
in
xor
pusha
mov
pop
cwtl
xchg
orb
inc
out
enter
sbb
sbb
in
add
inc
movb
pop
inc
ja
mov
movsl
call
or
ja
loop
cli
jmp
push
lret
lock
mov
sbb
lock
dec
pop
adc
dec
dec
mov
lea
fadds
not
in
fs
xor
mov
inc
daa
dec
enter
std
sahf
loope
xchg
or
or
jo
pop
adc
push
sub
fbstp
lods
jle
adc
or
mov
jge
movsl
cmc
mov
test
fmull
out
imul
or
xchg
cld
pushf
scas
lock
inc
inc
dec
mov
es
lcall
mov
xchg
mov
in
and
std
int
mov
inc
sub
insl
push
in
bound
mov
mov
data16
xchg
scas
insb
aas
rdtsc
lea
and
inc
mov
cmp
loope
data16
nop
or
stc
dec
push
lods
and
jg
add
cmp
pop
add
hlt
mov
inc
inc
jne
mov
popf
std
loopne
or
lods
xchg
push
rcll
sbb
jl
popa
aas
adc
mov
clc
inc
and
jecxz
mov
jle
pop
lock
inc
mov
out
push
inc
push
xchg
sub
loope
cmp
loop
jmp
es
and
mov
std
pop
outsl
xchg
out
arpl
js
addr16
inc
aad
andb
xchg
movsl
jno
cmp
insb
hlt
das
xchg
lahf
movsl
mov
dec
cmp
or
pushf
sbb
xchg
xlat
stos
dec
inc
imul
inc
or
and
ljmp
fisttpll
popl
aam
pop
roll
jne
cmp
inc
popf
mov
dec
sahf
mov
jo
rcll
xor
lcall
sar
sub
jmp
cli
aam
xlat
add
insl
jge
cmovno
pop
and
mov
sbb
and
or
push
pop
jle
fmuls
mov
cmp
xacquire
ja
or
mov
cld
ja
mov
sub
ret
jb
jl
add
dec
sti
out
mov
sub
test
insl
or
pushf
jp
push
fdivrs
cmp
rcll
into
mov
push
sarb
jge
dec
jg
mov
push
mov
mov
jae
sub
popa
sahf
pushf
es
or
leave
test
sub
aaa
int3
push
sbbl
jbe
and
dec
lret
imul
int3
sub
es
into
pop
xchg
or
fimull
shlb
outsl
lret
or
cmc
shrl
mov
mulb
sub
pop
pop
inc
fxch
cbtw
in
or
mov
mov
rcrl
hlt
jl
pop
jle
jnp
and
pop
pop
enter
push
fs
popa
sbb
call
call
xor
jae
daa
addr16
cmp
dec
shlb
push
imul
push
pop
mov
aas
dec
adc
ljmp
push
cmp
jae
ret
mov
push
mov
imul
daa
pushf
nop
inc
fnstcw
mov
hlt
and
mov
mov
ret
xchg
out
or
jns
fmuls
daa
lods
jmp
out
notl
lods
mov
lock
or
jb
cli
and
mov
and
or
sub
sarb
adc
jb
pusha
rcr
out
jl
mov
add
or
jbe
fidivrs
aaa
mov
push
sbb
out
arpl
inc
cmpsl
sahf
shl
dec
and
cmp
pop
lahf
shll
push
or
cs
into
xchg
decb
mov
xchg
dec
mov
iret
push
push
stc
dec
cmp
push
les
sub
dec
loope
movsb
je
fisttpl
xor
cld
in
sbb
add
jmp
mov
jb
test
mov
sub
adc
test
jnp
imul
mov
xchg
adc
inc
mov
xchg
pop
adc
inc
mov
ja
jge
mov
outsb
mov
cli
jl
rorl
enter
inc
jle
xor
mov
pop
sub
cmpsl
sub
in
sbb
sbb
jmp
popf
out
movsb
xor
adc
jne
popa
xlat
jo
out
enter
push
inc
insl
xchg
xor
in
dec
jno
cld
inc
pop
fistl
or
outsb
shrb
xchg
scas
call
sbb
movsb
push
mov
mov
nop
roll
mov
lret
out
xchg
push
incb
daa
cwtl
dec
sahf
sbb
addb
adc
xchg
insl
xor
adc
popa
jl
in
xor
adc
push
jne
clc
sbb
inc
push
fwait
and
fnstsw
lea
outsb
es
arpl
mov
jo
mov
mov
fmulp
rcrl
push
push
imul
push
dec
cli
push
adc
pop
mov
dec
in
pop
dec
call
adc
add
adc
pop
fimuls
cmp
xor
dec
rorl
xor
cld
scas
inc
push
insb
mov
xor
push
dec
dec
ficompl
iret
inc
push
lea
les
les
fwait
and
xchg
aaa
lock
aam
ret
rclb
call
cmp
std
in
scas
adc
sbb
aam
inc
rcll
fcoms
add
sbb
push
mov
cmp
decl
out
popf
shl
jp
sub
rolb
stos
cmp
ret
jne
jbe
xor
cs
mov
outsb
lds
fistps
inc
sbb
mov
mov
mov
xor
lret
inc
xor
add
cmpxchg
into
jbe
xor
fldcw
mov
ss
popf
xor
sbb
shrb
jge
inc
sub
push
mov
rcr
imul
gs
pop
ds
stos
stos
ja
int
xchg
xor
aam
adc
cli
inc
mov
aam
icebp
add
in
inc
lea
cmp
stc
mov
ja
sbb
aas
cltd
sahf
mov
ror
or
stos
inc
dec
hlt
mov
push
mov
dec
repz
jnp
jecxz
jmp
jecxz
ffreep
fwait
or
aad
mov
iret
in
addr16
push
xchg
ffreep
mov
and
inc
rorb
mov
orl
push
lret
int
aam
arpl
push
stc
and
add
ret
sarl
sti
out
mov
push
add
movsl
cmp
adc
xor
sbb
dec
call
test
rcrl
stc
pop
mov
and
movsl
out
push
pushf
fcoml
mov
sub
cwtl
jnp
lcall
fidivrs
mov
pop
xchg
mov
xchg
xor
in
lods
loopne
sar
or
or
jecxz
inc
lahf
pusha
bound
or
and
test
jle
push
jmp
roll
and
ret
adcb
mov
sbb
enter
fmull
inc
imul
dec
loop
jne
xor
lahf
or
fmull
mov
xchg
push
in
mov
jno
cli
fcom
shrl
cmpsl
pop
mov
sub
xchg
stos
lea
rorb
xchg
xchg
push
stc
mov
cld
mov
jmp
pop
xor
xchg
lods
sub
inc
cmp
mov
mov
stos
jne
xor
push
xchg
ret
jge
pop
cmp
lock
les
in
shlb
jno
fisubs
loope
sub
fcmovnb
mov
mov
std
jmp
ss
and
inc
or
xchg
lods
popa
push
imul
and
push
faddl
cmp
jg
cmp
inc
push
popa
icebp
lock
repz
or
add
adc
bound
jae
cmp
jecxz
inc
fucomip
clc
loop
loopne
nop
addr16
ds
xor
je
push
jecxz
lret
xor
mov
jb
movsb
mov
loope
rcl
divb
add
mov
lods
push
mov
gs
ljmp
pop
ljmpw
mov
and
lahf
insl
pusha
cmp
rcll
adc
pushf
les
or
or
mov
xor
pop
xor
sbb
push
push
mov
mov
mov
xchg
and
and
mov
jmp
lods
jae
lcall
les
cltd
mov
cmpsb
cmp
cli
push
add
rorl
xchg
aad
push
add
arpl
dec
mov
jns
insl
sbb
mov
adc
icebp
push
sub
stos
ret
cmc
addb
jae
mov
repz
fs
jge
xchg
sub
or
lods
mov
and
adc
xorb
out
pop
pop
in
shlb
xor
xchg
pop
mov
jecxz
push
bound
jle
out
int3
inc
imul
sbb
dec
addb
xchg
xor
fisttps
bnd
sbbb
jl
sahf
insl
inc
add
inc
add
push
pop
mov
xor
jnp
inc
test
enter
cld
pop
xchg
jge
imul
xchg
jnp
jge
ja
fnsave
flds
cmp
mov
cmp
mov
xchg
pushf
int
or
in
push
mov
outsl
clc
mov
mov
call
adc
xor
je
xor
imul
push
sbbb
or
loop
movsb
in
outsb
or
xlat
lahf
xor
mov
aaa
fcomps
xchg
in
adcl
push
ret
xor
pop
inc
cmp
leave
loop
gs
cmpsl
aam
shll
outsl
mov
fmull
stos
out
imul
jbe
outsb
insb
add
add
jmp
shl
pop
fwait
inc
ss
sahf
sub
loop
cmp
pop
rorb
mov
pop
lods
push
sub
iret
sub
xchg
mov
dec
stos
xchg
jl
je
pop
out
scas
pushf
es
inc
pop
imulb
cld
jg
test
xor
ror
inc
imul
inc
imul
lods
dec
jno
mov
sbb
xor
dec
jno
rcrb
movsl
int
mov
dec
mov
loopne
mov
cmpsl
sbb
inc
jmp
dec
mov
dec
ds
xor
pop
enter
scas
pop
mov
xchg
push
cli
xor
std
ja
es
jg
cmc
sub
adc
mov
lods
or
inc
cmp
mov
and
pop
fsubs
xchg
pushl
subb
mov
pop
mov
rolb
lret
jge
xchg
out
and
push
mov
daa
push
pushf
loopne
fidivrl
dec
ret
push
daa
xchg
push
sub
jl
mov
mov
push
test
rcl
movsl
mov
add
mov
inc
jmp
das
dec
mov
fmull
inc
jne
jns
enter
jp
jecxz
popf
cmp
mov
std
das
insb
cmc
clc
addr16
sub
push
pop
add
jmp
xchg
ret
loop
mov
cmp
mov
jo
add
mov
mov
cli
mov
bound
xchg
pop
addb
xor
insl
lahf
js
xlat
repnz
out
push
inc
fwait
adc
sar
inc
fwait
dec
pop
cltd
mov
les
pop
or
inc
mov
xor
clc
sbb
rcrl
add
int
sbb
xchg
push
cmp
add
stos
ds
sbb
dec
xchg
inc
sub
xor
ret
xchg
push
mov
loopne
scas
dec
int
xchg
xlat
lods
lret
push
je
in
lds
cmp
sub
xor
sbb
xchg
and
icebp
cmpsb
cli
jge
cmp
dec
adc
stos
sbb
mov
imul
pop
arpl
sub
push
out
andl
fstl
mov
mov
sub
xor
xor
rolb
icebp
outsl
inc
push
jo
cmpsl
into
xor
sbb
mov
adc
inc
mov
hlt
and
fdivl
ss
sbbl
outsl
mov
mov
mov
or
add
and
out
xor
ja
ss
vpmacssdqh
not
inc
lcall
imul
in
lret
pushf
cmpsl
sub
mov
mov
and
in
sub
xchg
movsl
pop
jp
inc
push
rolb
and
or
cmpsb
in
or
sbb
jl
push
aas
aad
imul
in
dec
mov
jbe
inc
into
mov
jno
stos
or
mov
mov
inc
lahf
fs
in
mov
popa
adc
lea
cld
out
in
mov
insb
fsts
xchg
push
clc
jl
jp
sbb
pop
test
negb
loop
int3
loopne
adc
into
sub
cmp
test
xor
xlat
out
int3
push
xchg
into
ja
mov
movsb
mov
push
sub
xchg
mov
hlt
movsb
mov
dec
in
dec
sbb
push
sbb
add
cmp
push
test
xchg
add
mov
and
pop
mov
imul
push
or
js
cltd
inc
xchg
popa
lret
jno
pop
inc
or
dec
and
frndint
aad
pop
jae
jmp
fwait
les
mov
push
inc
sbb
dec
scas
inc
and
fistpll
pop
jnp
xchg
push
sti
add
cmp
dec
push
cmp
hlt
sbb
xchg
int3
cmp
dec
testl
loopne
mov
jecxz
jl
fldt
and
ds
jns
push
sahf
mov
jp
push
inc
lds
cmp
in
inc
aad
mov
adc
lock
fdivrs
sbb
jp
xchg
out
icebp
out
repnz
jmp
sub
xor
daa
push
leave
xchg
mov
xchg
js
in
adc
xchg
aad
int
jnp
pusha
repnz
clc
dec
cmpsb
mov
adc
lds
sub
addr16
ds
add
sub
or
jp
or
push
and
and
sbb
add
mov
repnz
lds
or
sub
inc
or
mov
cs
in
mov
lods
cltd
push
nop
add
and
inc
jno
cmpsl
fstps
ljmp
jbe
jb
and
mov
pinsrw
cmpsl
dec
pop
stos
xchg
xor
push
and
mov
jl
cmpsb
daa
dec
push
pop
jb
add
inc
adc
xchg
or
push
mov
pop
push
bound
dec
adc
ja
stos
fsubl
cltd
push
dec
jp
rorb
pop
add
push
sbb
mov
movsb
idivl
sbb
add
push
push
pop
add
xor
mov
lcall
pop
pop
rcl
into
insb
repz
lahf
ret
leave
test
xchg
rcll
fadds
jno
fists
and
jb
dec
loope
punpckhwd
mov
sbb
xor
sbb
mov
and
imul
sti
les
aad
ret
imul
cmpsb
cli
out
rolb
jl
adcb
sbb
pop
bound
mov
xchg
arpl
inc
lret
arpl
jmp
fucomip
fs
inc
or
push
pop
fstl
lcall
adc
inc
out
fs
mul
imul
in
jecxz
jl
add
xchg
xor
xchg
mov
call
jl
cmp
or
mov
cmp
movsb
pop
into
sahf
cmpb
popa
fbld
mov
ficoms
and
push
jle
stos
out
inc
dec
and
iret
pop
mov
and
inc
pushf
sub
inc
cltd
mov
loopne
andl
outsl
icebp
push
xchg
push
cmp
dec
mov
jg
filds
mov
repnz
icebp
into
lock
and
pop
xchg
sarl
js
jmp
cmpl
jg
xor
mov
push
insb
shlb
or
sahf
adc
pop
rcrl
xchg
push
iret
jnp
add
cwtd
sbb
mov
cltd
mov
pop
mov
stos
mov
jns
fdivs
andb
testl
aam
mov
imul
or
jnp
lea
sub
or
jg
cmp
addl
loop
cltd
jle
lahf
adc
icebp
aad
add
adc
inc
icebp
in
pop
mov
add
pop
sbb
cwtl
in
pop
mov
mov
into
into
pop
sbb
dec
les
xor
mov
pop
cli
popa
gs
and
stos
cmp
insl
jb
or
xchg
mov
aas
mov
jno
jb
aad
sub
mov
adc
js
and
fsubrs
push
dec
shl
xchg
ss
repz
cmc
sbb
loope
cmc
movsb
fistps
mov
dec
sbbl
or
std
mov
or
outsl
ja
ja
ja
bswap
add
xchg
sarb
lret
out
and
cmc
movsb
stos
or
cli
mov
arpl
clc
dec
jp
popf
lock
jno
cmp
lods
sub
sub
repnz
insl
stos
jp
dec
and
push
dec
lret
leave
jl
xor
sbb
in
pop
lock
sub
xor
notl
lcall
mov
xchg
mov
sub
add
shl
add
fadds
push
and
push
xchg
cld
loopne
mov
mov
adc
jne
jecxz
dec
lods
sub
fdivl
repz
xchg
or
mov
in
leave
adc
lret
sub
xchg
jp
xchg
and
push
fistps
or
rorb
mov
mov
ss
scas
push
cmp
push
mov
mov
aad
arpl
loope
insl
fidivs
and
gs
es
adc
and
cmp
outsl
cmp
mov
push
and
or
and
orb
je
mov
pop
inc
push
mov
addr16
jmp
mov
test
push
loope
cmpsl
jo
jge
add
es
jo
jbe
mov
jge
outsb
mov
nop
pop
xchg
add
or
fdiv
mov
stos
xchg
in
out
decl
cmp
sub
call
cmp
add
das
sub
sbb
push
sub
cmp
add
dec
cld
xor
dec
mov
push
outsb
lcall
adcb
enter
lock
lcall
shl
sub
or
jno
cmp
adc
stc
dec
adc
sti
xor
mov
adc
cmp
sub
push
loopne
sbb
into
and
gs
std
mov
pop
pop
inc
dec
aad
push
loope
cli
idivb
mov
xchg
mov
repnz
xchg
rcrl
mov
mov
out
aaa
daa
mov
ret
int
push
xchg
xchg
cmpsb
adc
sub
mov
icebp
push
out
lods
aas
push
sbb
outsb
jns
rorb
sbb
in
push
xor
jbe
bswap
fldcw
mov
jmp
loop
daa
test
jb
movsb
ljmp
repz
dec
ret
and
and
cs
clc
pminsw
sub
sbb
movsl
dec
lret
dec
stos
ret
lods
decb
xchg
jo
pop
stc
lahf
test
je
roll
mov
in
rol
scas
pop
pop
adc
inc
bound
decl
and
cmpsb
xchg
ret
add
jns
movsb
loop
or
pop
or
fdivrl
pop
je
nop
sub
fadds
shll
and
xor
mov
test
nop
repz
aad
inc
mov
es
jns
insl
lret
xor
xchg
xor
and
aam
jne
ficoml
cmp
lods
lret
xchg
cmp
shr
mov
rcr
ss
sub
fwait
out
jg
pop
jl
stos
cmp
dec
fidivl
ljmp
xchg
jg
xor
xchg
clc
les
push
call
das
xchg
rolb
mov
int
pop
loope
mov
cmp
push
add
xchg
sub
scas
mov
push
stc
fs
sub
scas
loopne
jle
and
lds
bound
lods
lcall
jns
dec
or
sub
ljmp
jp
sbb
add
shll
imul
hlt
loop
mov
and
and
lods
rcrb
rclb
ljmp
mov
je
insl
jno
mov
fnstcw
je
push
adc
add
pop
cmp
jns
shl
adc
aam
push
dec
lcall
xchg
push
jecxz
test
fisttps
pop
fbstp
fs
pusha
xchg
aad
push
adc
shlb
inc
nop
flds
cmc
xchg
test
cmp
jecxz
out
daa
inc
sub
mov
je
xlat
mov
and
lret
cmp
out
mov
jo
dec
mov
pop
jnp
xor
in
add
aam
mov
and
push
mov
or
fwait
and
movsl
adc
clc
jne
mov
pusha
out
mov
movsl
nop
int3
push
fs
call
sbb
lods
loopne
add
dec
push
mov
push
imul
int
inc
test
mov
mov
arpl
and
or
and
ror
stos
je
leave
stos
lahf
aas
orb
xchg
popf
movsb
lock
mov
pusha
mov
or
fdivr
ret
add
fldcw
jl
jno
push
add
stos
sub
fnstcw
add
cld
aam
out
in
push
dec
jge
mov
dec
cmp
jle
ljmp
xchg
daa
fdivrs
pop
in
loopne
shlb
in
xchg
sbb
fmull
jge
adc
or
cmpsb
pop
dec
mov
inc
roll
aam
inc
or
inc
adc
pop
dec
sub
xchg
sbb
jnp
clc
jp
adc
cwtl
inc
add
and
cmp
mov
jo
xchg
sub
and
mov
or
pop
and
jne
stos
and
fnstenv
test
test
jbe
aad
ret
mov
inc
jp,pt
pop
cmpsl
ljmp
pop
mov
xchg
push
sub
iret
mov
xor
xchg
ljmp
outsb
jo
imul
or
out
sub
jg
scas
lret
sbb
sub
imul
shlb
stc
sbb
adc
pop
ficoms
jge
add
rcrb
sub
adcl
sub
enter
pop
std
cmp
ja
adc
jle
mov
dec
cmp
adc
pop
sub
stos
push
loopne
xchg
xchg
jnp,pn
call
sub
repnz
cwtl
mov
dec
lock
mov
add
ja
rorb
inc
inc
addr16
push
fimuls
hlt
add
leave
push
daa
andl
jbe
dec
das
dec
push
lcall
mov
jae
nop
movsb
testb
fadds
clc
lock
jne
lcall
push
fwait
add
sub
cmpsb
adc
repz
sbb
push
xor
fcmovne
xchg
and
adc
xor
mov
mov
bound
out
mov
push
cmc
sbb
mov
aam
dec
pop
add
dec
lahf
dec
ja
push
pusha
adc
imul
inc
std
mov
cmp
xchg
jno
mov
and
test
fmull
adc
and
mov
dec
mov
mov
loopne
pop
lods
xchg
wrmsr
dec
dec
dec
jne
dec
cwtl
je
fwait
div
xchg
sbb
std
mov
add
add
hlt
popf
cmp
dec
sub
xchg
frstor
sahf
xor
mov
pop
adc
orl
fbstp
rcll
add
rcrl
pop
or
lahf
jns
lods
imul
imul
jbe
adc
in
sub
ljmp
push
pop
pushf
popa
jnp
jecxz,pt
fsts
mov
es
dec
jecxz
mov
pop
sti
inc
cmp
icebp
pop
mov
xorb
pop
push
lret
cmp
movl
bound
jmp
jle
mov
fidivrl
push
adc
xor
mov
adc
or
imul
cmp
xor
pushf
aaa
repnz
push
push
xor
aaa
sbbb
mov
and
add
into
insb
shll
ret
cwtl
js
test
pop
testb
cmp
iret
iret
adc
push
push
xchg
out
xchg
xchg
bnd
js
fiaddl
pop
out
sub
hlt
mov
xchg
gs
test
movsl
mov
sub
sub
mov
pop
iret
and
lret
or
sahf
cltd
movsb
dec
bound
mov
movsb
xchg
xlat
lds
daa
sbb
test
sub
mov
adc
adc
or
imul
ja
hlt
cli
mov
jp
dec
cltd
hlt
movzbl
push
inc
sbb
or
clc
leave
mov
and
test
push
xor
popa
push
iret
mov
loop
pop
sub
sbb
dec
les
shrl
add
sarl
aad
fimuls
push
leave
outsb
cmp
imul
fwait
pop
adc
enter
jo
jle
clc
mov
fstpl
mov
dec
add
je
push
jge
sti
mov
fs
inc
jb
in
clc
dec
cli
jae
sbb
dec
in
jbe
inc
repnz
pusha
pop
stos
pop
add
inc
cwtl
rep
and
popa
xor
dec
mov
cmp
sbbl
lods
ret
lods
sub
shlb
mov
xchg
ja
dec
and
sarb
push
mov
adc
push
scas
mov
mov
iret
mov
mov
mov
push
mov
xor
cmpsl
xor
out
cmc
and
loope
jl
and
sti
gs
aaa
pop
iret
in
loope
scas
enter
jl
cmp
outsb
adc
push
out
ljmp
push
mov
in
test
into
ja
in
ljmp
mov
rorl
add
call
pop
sbbl
fiaddl
rcrl
mov
aas
dec
mov
jle
mov
xchg
sahf
xchg
mov
mov
int3
adc
lea
scas
popf
ss
dec
leave
mov
shl
sub
js
movb
or
cmp
mov
aas
jb
push
fcoms
sub
mov
dec
mov
sbb
cwtl
out
xchg
addl
or
sub
or
mov
cmp
adc
movsl
mov
jae
pop
xor
pop
js
jmp
and
stc
hlt
sbb
nop
adc
and
fbstp
push
dec
jns
aas
xchg
outsl
mov
sbb
iret
mov
cmpsl
in
dec
aaa
jg
adc
sbb
xor
mov
scas
inc
arpl
inc
inc
insl
xorb
dec
idiv
xchg
dec
jl
add
xchg
mov
cltd
mov
sub
adc
cmp
jp
cmc
xchg
xor
hlt
sub
ds
pop
bsf
loop
pop
jmp
lds
lods
mov
ds
cwtl
cmp
mov
and
pop
insb
pop
adc
iret
into
hlt
data16
lods
push
mov
mov
fadds
mov
adc
js
jp
push
clc
push
push
xor
push
jle
push
shrl
into
xchg
fsubs
gs
popf
mov
cmp
lahf
inc
pushf
add
adc
and
mov
mov
xor
imul
movsb
movsb
xlat
mov
push
imul
pop
aad
mov
mov
daa
sarb
gs
sub
testl
lahf
aaa
ret
arpl
and
ret
shll
mov
outsb
and
adc
lock
cmp
in
call
add
push
pop
dec
mov
aad
mov
push
xchg
sbb
fimuls
fisubl
mov
mov
jnp
mov
pop
cli
lahf
and
je
and
mov
adc
pop
sahf
inc
lret
jno
int3
add
jne
cs
aad
sbb
jnp
or
lcall
ret
aas
nop
movsl
js
mov
add
push
sbb
std
push
add
fistps
mov
ss
loope
cmpsl
jbe
mov
and
push
lret
data16
test
imul
pushw
push
mov
mov
mov
movsl
shrl
cltd
ret
lret
pushf
add
jecxz
loop
sbb
mov
repz
xchg
xlat
lcall
ss
cmc
mov
sbb
rcll
dec
pop
dec
add
jne
popf
mov
pop
sbb
lahf
sbb
jno
stos
in
loop
imul
ss
ret
push
and
repnz
cmp
lock
jbe
pushf
outsb
sti
sub
loopne
sub
add
xor
xchg
test
mov
adc
sahf
ja
rcll
jecxz
mov
xlat
or
imul
adc
nop
or
mov
or
fsubrs
xchg
outsl
push
cmp
sbb
xlat
fnstsw
pop
pop
sbb
es
and
int
test
cmp
mov
lcall
mov
inc
adc
add
fdivr
inc
mov
inc
jg
xchg
ret
mov
sahf
jge
fmuls
pop
jae
sub
fcmovb
push
sti
and
fsts
jne
mov
push
lea
and
push
fwait
rcrb
aaa
into
cmp
adc
or
dec
cmp
cmp
fwait
push
out
xchg
aam
decl
outsl
inc
push
and
add
xchg
xor
mov
mov
push
mov
loope
pop
inc
fsubrl
test
mov
loop
push
inc
jle
mov
sahf
stos
xlat
data16
je
pop
mov
xor
shlb
fsub
fstp
pusha
pop
mov
push
fnsave
or
pop
fdivrs
xor
inc
xchg
je
movsb
or
aam
and
in
insl
inc
mov
sbb
jg
pop
out
jle
gs
pop
xor
int3
jne,pt
hlt
into
xchg
lock
sbb
xor
mov
rolb
dec
jbe
stc
pop
or
inc
inc
cs
mov
pop
jl
pop
mov
cmp
mov
in
pop
pop
aas
mov
aad
leave
xorb
ret
data16
sub
and
sub
inc
add
rol
jge
mov
test
ret
sub
iret
mov
jno
dec
je
inc
loope
pushl
lahf
outsb
lret
cmpsl
pop
outsl
push
nop
lcall
lcall
iret
jno
repz
add
sbb
sahf
cwtl
lods
insb
or
jge
sub
mov
fcomps
lea
or
dec
addr16
mov
out
jl
leave
scas
shll
mov
aas
idivb
out
aam
mov
and
movsl
push
adc
cld
scas
inc
mov
or
enter
lcall
inc
data16
fidivrs
mov
lods
pop
lock
lret
push
xchg
mov
adc
inc
cmc
mov
insb
repz
cltd
inc
adc
jns,pt
aam
movq
pop
in
xchg
mov
mov
movsb
mov
pop
dec
popf
insl
jl
mov
std
dec
lea
inc
inc
fildll
cmp
leave
jmp
leave
ss
pop
mov
das
adc
xchg
jle
mov
mov
testl
mov
out
sti
xchg
stos
enter
cmp
sbb
fs
lahf
sbb
push
mov
xor
add
pop
mov
test
and
popa
aas
xchg
push
inc
cli
cmpsl
push
mov
rclb
add
inc
rcrl
jb
cmpsl
push
pop
mov
mov
cld
xor
jnp
js
bound
xor
xchg
dec
lret
dec
popf
mov
xchg
mov
cli
and
cs
gs
push
xlat
inc
sti
and
and
mov
fstpl
mov
add
pop
std
out
pop
data16
into
xchg
sub
movsb
ds
adc
inc
sub
jle
std
in
and
lods
int
mov
jnp
mov
xchg
daa
jne
out
pop
mov
mov
cwtl
orb
aaa
fdivr
orl
or
mov
adc
in
jg
lock
or
xlat
cmp
mov
sub
cli
ljmp
or
dec
push
enter
movsl
stc
sarb
mov
je
mov
nop
sbb
adc
jno
in
and
divb
jns
cmpsl
fnstenv
arpl
push
ret
pop
mov
and
sbb
cmp
adc
push
ja
insl
jge
clc
jb
loopne
xlat
loope
orb
lds
addr16
lea
mov
pop
sub
int
imul
push
mov
xor
cmp
push
out
in
inc
lods
mov
xchg
xchg
sub
rcr
xchg
adc
sub
dec
push
push
ljmp
out
aam
add
sub
arpl
fisttpll
mov
ds
pop
jb
adc
cmp
popf
in
stos
fwait
mov
jmp
icebp
stos
dec
xor
sbb
in
jbe
sub
push
andps
into
inc
mov
pop
lahf
add
lea
ror
mov
popa
mov
ljmp
jnp
jne
jno
mov
cmp
pop
mov
xor
or
cld
test
sub
es
xchg
shrl
and
mov
js
jb
adc
xor
cli
xor
adc
loop
jo
cmp
cmpsl
or
ret
lods
mov
lods
add
jnp
mov
sub
or
xchg
push
jp
emms
pop
cmp
mov
addr16
loop
cmp
insl
xchg
fcomi
stos
push
cmp
add
push
je
int
or
xchg
xchg
mov
leave
outsl
xchg
loop
mov
mov
iret
or
mov
cmpsb
xchg
lods
js
out
push
xchg
xchg
lods
pop
or
sbb
mov
push
fsub
ljmp
add
inc
dec
add
lret
add
mov
call
sbb
dec
mov
add
xor
sarb
mov
push
sub
sub
rclb
cmpsb
andb
adc
nop
xor
cli
xorb
push
in
xchg
outsl
mov
xor
push
pop
add
mov
rcr
mov
mov
adc
dec
js
jge
xchg
pop
mov
inc
xchg
cltd
std
int3
ret
xor
rorb
adc
jnp
mov
xchg
sbb
mov
mov
pop
xchg
movsl
je
jge
pop
xchg
gs
push
pop
jecxz
adc
sbb
or
or
push
in
insl
push
les
mov
push
push
fstps
pop
sbb
xchg
test
dec
mov
stos
adc
jp
dec
and
arpl
lea
push
out
jmp
cli
push
cmpsl
popf
and
fdivrs
out
outsb
fistpll
imul
lcall
stos
ret
insl
aas
hlt
sbb
push
or
nop
orb
adc
cmpsl
xor
xor
in
pushf
and
or
lds
js
enter
push
ret
adc
repnz
pop
add
mov
mov
xchg
sbb
xchg
and
add
inc
cmpsl
xchg
sbb
push
dec
sbb
pushf
cmc
es
fwait
ds
sbb
inc
shrl
mov
jg
xlat
insl
sbb
leave
lret
aaa
mov
dec
addl
mov
repz
pop
jge
push
pop
cmp
movsl
mov
jmp
out
sub
cwtl
add
aaa
and
xchg
push
push
aaa
xor
icebp
testl
scas
shll
sbb
pop
out
jmp
enter
fsubr
xor
es
xchg
sbb
dec
ficoml
xor
mov
aad
shrb
sbb
mov
cmp
xchg
lods
jnp
in
and
mov
cmp
lds
dec
call
inc
pushf
or
out
rep
pop
push
test
mov
sahf
lods
pop
daa
stos
mov
mull
mov
das
sub
mov
pusha
lods
fnsave
xchg
or
daa
out
add
aam
outsl
in
mov
out
repnz
jl
subl
jns
sbb
sub
xchg
xchg
push
dec
cmp
data16
pop
fildl
dec
mov
mov
pop
js
jmp
mov
decl
push
std
mov
dec
movsb
sub
cmp
xchg
adc
loopne
mov
mov
filds
sbb
or
addr16
cmp
mov
or
mov
sbb
pop
pop
imul
cmp
mov
dec
mov
int3
aaa
lods
or
fistpl
push
or
dec
jb
pusha
mov
movsl
movsb
mov
out
pop
sub
in
daa
fnsave
fwait
pop
cmpsl
daa
lods
mov
push
sub
lods
pop
out
jge
jl
test
add
popf
or
sbb
clc
dec
pushf
pushl
push
cmp
sub
std
cmp
movsl
lahf
adcb
aaa
pop
enter
cmc
push
in
scas
nop
add
lret
imul
mov
imul
jb
sahf
inc
lods
nop
jb
repnz
add
lods
and
pusha
and
mov
pop
inc
cli
test
cmpsl
push
mov
mov
mov
inc
mov
mov
or
jns
fisubrs
std
hlt
add
es
push
icebp
aad
dec
jl
es
std
pop
imul
lock
jne
stos
ljmp
daa
ds
sbb
in
sbb
out
notb
cltd
adc
mov
ret
popa
sbb
mov
sub
xor
push
sti
in
lock
clc
out
push
mov
shlb
xchg
adc
sbb
outsb
adcl
mov
jns
rcrb
insb
mov
fildl
xchg
fwait
int
push
int3
xchg
idivl
xor
pop
dec
out
inc
mov
fsubs
cmp
mov
inc
inc
imul
pop
aad
jae
dec
cmpsb
push
fdivs
push
call
jp
push
jecxz
adc
xor
sub
sbbl
jno
or
loopne
gs
aam
cmp
sbb
push
cmpsb
cmpsl
out
xor
icebp
stc
mov
sbb
rcrb
mov
dec
int
filds
or
dec
imull
sbb
mov
push
pop
cmp
das
cmp
cmp
mov
loop
mov
test
push
testb
push
movsb
loopne
rcrb
leave
mov
test
cld
mov
fisubs
xorb
jg
xchg
in
cmp
xor
mov
leave
push
cmpsl
lcall
mov
test
aas
lret
ljmp
xchg
mov
pop
mov
jp
add
adc
repz
pop
rorl
push
mov
lret
sub
loopne
inc
sub
pop
xor
dec
imul
pop
sbb
out
ret
gs
and
fwait
inc
mov
loopne
mov
les
push
xor
stc
mov
mov
addr16
cmp
dec
xorb
push
adc
sahf
pop
rcr
push
imul
rorl
es
inc
push
jge
out
ficompl
xchg
add
inc
push
lahf
cmp
mov
lods
xchg
test
xor
pushf
dec
sub
pop
fstpl
mov
fabs
mov
mov
cmp
imul
rcrb
repz
sub
or
jb
stos
incb
add
pop
ljmp
test
fisubrs
imul
jno
mov
arpl
fneni(8087
ja
or
adc
fcoml
lret
clc
inc
call
xlat
sub
fwait
xor
dec
decl
test
cmp
mov
push
jae
adcl
adc
and
je
ret
mov
dec
bound
and
cwtl
test
sub
xchg
or
jmp
mov
mov
test
jecxz
pop
in
push
imul
add
xchg
push
adc
push
lcall
push
outsb
sub
mov
fcomps
push
jno
outsb
inc
mov
data16
and
in
cmp
test
shr
rol
mov
dec
prefetch
and
add
jb
sbb
andl
adc
test
mov
pop
idivl
std
decl
cmpsl
xor
imul
popf
inc
mov
mov
mov
loop
cmp
cmp
out
loop
or
in
sahf
sub
dec
lret
int3
rorl
adc
daa
sub
cmp
pop
test
gs
or
jg
test
pusha
push
fldcw
fsubrl
mov
leave
lea
inc
jle
and
push
xchg
insb
add
in
push
popf
test
inc
sub
sbb
jge
push
fbld
pop
aas
lahf
lret
repnz
sysexit
in
pop
mov
data16
mov
notb
ljmp
and
ss
and
jno
mov
es
cli
xor
mov
lock
inc
mov
and
xchg
and
andl
cmp
xchg
inc
pop
jmp
out
mov
push
or
mov
lret
hlt
out
cmpsl
sbb
imul
rep
test
leave
jae
mov
lods
aam
int3
inc
insl
je
out
mov
push
xor
mov
pop
jecxz
cltd
lahf
shlb
fistl
inc
jge
mov
out
lods
int
stc
inc
pop
mov
out
adc
mov
and
popf
mov
sbb
popa
popa
jno
out
repz
imul
sub
pop
sub
lods
fsubr
lahf
xchg
xchg
das
mov
xor
rcrl
cmp
sti
xor
jo
jno
push
call
dec
cmp
or
pop
add
xchg
dec
rorb
inc
xchg
xchg
shlb
jge
ret
inc
aad
push
xor
cmp
fwait
push
mov
sub
jns
push
loopne
push
xrelease
cmpsl
iret
and
popf
cmp
decl
jno
enter
xor
jbe
and
mov
in
adc
loopne
pop
adc
fwait
mov
movb
lret
or
fwait
lahf
cmpsb
loop
mov
push
pop
jp
shll
in
adc
int3
sti
jge
mov
jge
jbe
mov
and
adc
mov
mov
or
icebp
push
lods
les
in
jecxz
dec
aas
and
inc
sbb
bound
in
dec
cmp
mov
jno
pop
std
mov
lds
sub
push
pop
movsl
lds
jg
and
add
lcall
mov
xorb
insl
push
cmp
push
out
in
adc
adc
push
jb
sub
aad
sub
mov
mov
outsl
dec
inc
jp
cld
lahf
repnz
push
or
jns
cmp
mov
jmp
cmp
fildll
mov
sub
sbb
pushf
adc
insb
push
mov
push
ret
mov
lods
nop
dec
inc
mov
outsb
jno
or
outsb
shlb
stos
mov
arpl
scas
pusha
sub
jnp
ret
mov
iret
and
jne
sub
iret
loopne
insb
jmp
adc
and
push
mov
sub
lods
aas
sub
jae
out
xor
std
mov
aaa
ljmp
out
test
out
push
outsb
sbbl
mov
push
inc
hlt
jmp
mov
or
push
insl
aaa
aad
loop
jb
inc
mov
adc
mov
test
inc
imul
data16
mov
mov
cs
int3
inc
push
lock
jp
jg
lds
add
aad
iret
dec
mov
mov
mov
lahf
lock
dec
add
fisubs
js
movsb
sub
in
xchg
pop
lcall
shr
rorb
imulb
negb
add
add
out
push
lods
js
fwait
ja
lea
mov
jne
rcrl
imull
add
test
inc
icebp
out
shlb
mov
add
inc
clc
fisubrs
push
cmpsb
mov
cmp
xchg
int3
xor
cltd
lock
cmpsb
aaa
nop
aam
fwait
mov
xor
dec
jmp
adc
inc
inc
add
addr16
shrb
pop
xchg
pop
lcall
mov
sub
inc
jle
jns
xor
div
dec
xor
out
xor
movsb
cmp
and
push
ret
test
fsub
inc
stos
cmp
in
xchg
and
loope
int3
das
bound
int
mov
and
xor
jb
jo
sub
daa
fxch
pop
mov
int
fstl
dec
mov
in
adc
push
outsl
js
mov
or
dec
sbb
mov
mov
xor
out
nop
lods
xchg
xor
test
insl
jno
adc
sbb
jns
jle
sub
dec
cmp
push
jo
pop
nop
insb
insl
sbb
sarl
leave
cmc
into
cmp
xchg
xor
je
xor
inc
ret
gs
jo
notb
fwait
sti
sub
daa
stos
mov
pop
dec
roll
or
lret
insb
daa
add
outsl
mov
loopne
fwait
sbb
psubusb
out
jle
cs
imul
mov
inc
iret
sbb
lock
loop
cmc
push
inc
outsb
fsubrl
outsl
or
jge
xor
popa
push
out
mov
add
sbb
cmpsl
dec
mov
or
ficomps
in
cmp
cmpsl
and
lods
pop
mov
insb
or
or
jg
xchg
out
sbb
or
leave
into
mov
adc
fists
jno
insb
ss
ss
inc
jecxz
add
leave
mov
add
sub
add
jmp
xchg
neg
jle
movsl
sbb
aam
testl
and
xchg
adc
cmpsb
rolb
mov
outsl
fucom
mov
lcall
call
mov
leave
xor
mov
mov
filds
push
sbb
mov
into
adc
mov
mov
rcrl
adc
jns
push
sti
pop
test
test
mov
adc
mov
call
in
add
enter
dec
repnz
loopne
shll
ljmp
mov
jb
mov
sub
cmc
outsb
pushf
hlt
push
xor
cmpsl
and
std
and
mov
jbe
sbb
test
jae
adc
js
push
insb
mov
lods
jns
mov
push
xor
mov
into
andb
fnstsw
aaa
jns
jae
jae
or
leave
in
repnz
mov
out
leave
jo
cmp
and
adc
adc
fbld
cmp
mov
outsb
xor
addr16
inc
push
int
lods
mov
mov
enter
push
mov
ret
add
mov
mov
loope
fisubrl
fdivrl
mov
adc
jl
inc
mov
lret
push
loop
test
out
fcomi
jg
int3
mov
das
push
sti
cmp
mov
dec
xchg
or
jl
clc
notb
insb
dec
stc
pop
ficomps
test
imul
add
fmulp
out
jno
sbb
test
lods
arpl
sbb
xchg
xor
stc
jnp
pop
fmuls
enter
mov
cs
cmp
xchg
idiv
adc
xor
xlat
xchg
xor
xor
imul
call
mov
pop
movsb
or
cmp
pushf
mov
sbb
imull
sub
mov
push
adc
fnstsw
cmp
lcall
in
imul
lods
push
pop
std
pop
jae
ret
sub
js
mov
inc
sahf
sub
mov
scas
enter
je
jg
jecxz
insl
out
adc
divb
mov
arpl
outsl
repz
mov
enter
shrb
dec
popf
int
add
pop
adcb
mov
mov
mov
cmp
aas
lds
jnp
inc
cld
out
xor
push
shlb
mov
lret
push
xchg
inc
js
lock
mov
push
jno
stos
mov
popf
ret
mov
rcrl
pushf
sub
jb
and
jmp
add
mov
stc
push
cmpsl
scas
loopne
test
cmp
or
xchg
xchg
into
addl
hlt
movl
imul
adc
inc
jbe
ljmp
mov
or
xor
je
xor
cld
mov
adc
in
ret
cmp
popa
lods
imul
push
cmp
mull
or
cli
lods
fadd
in
push
aas
add
scas
or
scas
insb
iret
leave
in
mov
xor
mov
sti
xchg
cmp
jp
cmp
inc
call
mov
pop
icebp
push
aam
push
fadds
ljmp
fsubl
pop
loop
repz
adc
leave
jo
aam
push
inc
cmpsb
test
cmp
pushf
mov
pop
dec
pop
mov
nop
push
jne
xor
push
pcmpeqb
cmp
or
es
inc
jl
lret
jmp
xor
push
mov
aaa
ljmp
push
sub
fwait
push
pop
int3
lcall
push
jb
cli
ja
jmp
mov
stos
les
mov
aad
pop
pusha
aas
adc
into
pop
leave
jg
mov
jecxz
mov
bound
xchg
xlat
dec
pop
jae
mov
std
jnp
lds
xchg
in
pop
ficompl
fs
nop
lds
scas
sbb
daa
and
in
enter
jo
sub
push
mov
ret
jmp
cmpsb
rcrl
lahf
hlt
lea
imul
cs
rclb
enter
sbb
shll
pop
rolb
pop
in
and
xor
inc
inc
scas
loope
mov
icebp
les
movl
push
dec
cmpsb
mov
pop
fs
push
sub
les
push
xchg
push
and
and
inc
mov
dec
pop
jle
lcall
cmp
fadds
fwait
adc
push
xor
jge
ret
add
mov
sbb
inc
outsb
aad
jb
push
loopne
pop
and
icebp
fcoms
rcrb
sarl
imul
mov
push
push
sti
call
iret
xorb
jge
pop
xchg
repnz
mov
mov
es
out
fcoms
std
mov
push
outsb
pop
test
fnstenv
shlb
or
insl
jmp
inc
addr16
cli
sub
lahf
loop
pushf
cmp
cli
mov
or
pushf
insb
rcll
inc
call
push
aad
or
out
clc
adc
mov
or
daa
rorl
mov
pop
jl
jnp
sti
cmp
cmp
shl
mov
aaa
adc
loop
fwait
pusha
fcomp
lds
mov
movsl
mov
aas
sub
jne
orb
xlat
inc
scas
test
outsb
cmp
mov
insl
insl
push
add
shlb
iret
xchg
in
add
sbb
mov
nop
es
pop
mov
lret
lds
mov
fwait
mov
inc
popf
jno
mov
or
or
adc
adc
push
aas
iret
or
mov
ss
xor
daa
xchg
push
aas
mov
mov
sbb
outsb
jns
adc
sbbb
mov
shlb
mov
out
mov
test
cltd
xlat
test
sti
cs
mov
sbb
inc
xchg
sub
push
cmp
pop
loopne
in
dec
int3
iret
adc
fs
mov
out
insl
fwait
cli
push
mov
mov
cmp
push
jne
das
ljmp
push
loop
push
aad
popf
enter
out
jae
scas
mov
insl
fldenv
rcrl
cmp
mov
sbb
pop
inc
mov
inc
mov
and
or
lea
dec
jno
lods
and
dec
mov
add
aas
inc
or
sbb
je
fiadds
andb
add
lods
cld
or
mov
popa
dec
mov
xchg
cmp
xor
fildl
lds
dec
dec
hlt
ja
stos
scas
dec
xchg
fwait
imul
dec
roll
test
shr
jns
or
mov
ss
jecxz
mov
inc
mov
mov
sub
sbb
rcrb
je
das
inc
mov
nop
hlt
fidivrs
sub
jmp
xchg
jmp
add
sbb
and
pavgw
cmp
ds
pop
inc
hlt
les
popa
outsl
dec
pop
sar
mov
int
dec
sbb
scas
sub
sbb
xchg
roll
adc
fistpl
cs
lods
jb
pop
aam
mov
mov
enter
pop
shll
xor
push
dec
cmp
leave
lds
inc
cmp
cmp
pop
push
loope
clc
in
or
adc
xchg
xor
cmp
movsl
out
cs
loopne
sub
repnz
jns
xor
and
sbb
xor
mov
ret
cld
aad
or
scas
xchg
inc
inc
ror
xor
xor
push
std
mov
or
xchg
cmp
jb
mov
loope
daa
jae
cmp
fsubs
std
push
sbb
push
adc
shll
les
fstl
repz
inc
and
mov
jb
leave
enter
imul
xchg
xchg
pop
icebp
jle
jne
or
lret
mov
sub
stc
cmpsb
pushl
jmp
dec
jb
mov
add
pop
xorb
aas
mov
pop
sbb
shlb
cld
jne
jle
in
jno
pop
js
and
xor
lods
outsb
fsub
add
fsub
mov
popa
push
adc
adc
test
inc
or
dec
jns
mov
lret
repz
push
xor
out
mov
push
xor
out
mov
xor
lcall
rcr
aad
push
daa
add
sbb
js
xchg
cmp
ds
push
push
daa
inc
lods
mov
lret
cmovs
lcall
mov
mov
push
inc
adc
sbb
scas
pop
inc
outsl
clc
rcrl
adc
inc
fldl
nop
xchg
xor
test
push
lods
cmp
inc
push
xchg
xchg
aaa
scas
cmp
cmp
pop
sbb
sbb
cld
push
pop
sbb
sahf
jns
icebp
dec
mov
cmp
rorl
shlb
rep
jecxz
xor
fnsave
push
mov
shrb
pop
xor
ficoml
pop
incl
mov
push
mov
scas
dec
push
sub
dec
jecxz
adc
inc
jno
adc
aas
xchg
rolb
fmull
pop
daa
pop
scas
add
addb
arpl
popa
xchg
mov
out
xor
andb
jno
out
cs
fldl
xchg
fstpt
repz
in
add
mov
enter
addr16
or
stos
sbb
daa
cmp
sahf
dec
lock
frstor
xor
mov
lahf
out
push
cmp
loope
icebp
mov
fsubs
nop
out
call
inc
arpl
iret
cmp
mov
mov
sub
xchg
sub
pop
xor
pop
or
inc
or
movsb
sbb
push
or
sahf
imul
decb
push
inc
jp
out
aas
fstpt
jecxz
jge
mov
push
adc
pushf
xchg
sti
pop
jle
es
test
jnp
xchg
fcmovne
cmp
out
sbb
dec
stos
sub
aam
scas
xor
movsl
pop
lcall
push
push
stos
in
push
fldl
sub
mov
xchg
shlb
dec
dec
xlat
mov
je
les
mov
cmp
sqrtps
jle
mov
push
dec
in
shrb
addr16
repnz
sub
adc
imul
jl
cmpsl
nop
push
add
inc
icebp
dec
imul
call
lods
scas
or
mov
sahf
pop
loopne
icebp
or
insl
push
rcr
shrl
test
push
test
sbb
daa
add
inc
sbb
xor
push
inc
lock
push
dec
xor
and
and
sub
lods
movsl
xor
pop
xor
fcmove
nop
fwait
jb
repnz
adc
and
cmp
add
sub
fiaddl
pop
call
std
cmp
xor
xor
test
aad
jmp
les
std
mov
scas
xchg
sarb
lock
or
and
cmpsl
or
sbb
sti
and
lock
jbe
divb
leave
stc
arpl
rolb
and
ss
adc
sbb
ds
addr16
jle
inc
or
stc
pop
and
inc
cmp
jg
fdivrl
cmp
dec
sbb
pop
xor
aas
dec
das
inc
sbb
adc
jno
roll
mov
int3
stos
cmp
dec
dec
ret
int
jmp
push
inc
fs
xchg
pop
add
and
fucomp
bound
xchg
insb
xchg
cmpsl
cmp
lea
dec
hlt
hlt
shlb
das
mov
push
jle
cmp
stos
jecxz
add
sti
fucomip
mov
lock
cmp
test
mov
mov
jae
lock
xor
push
or
out
cmpsl
xchg
lahf
sbb
add
call
arpl
dec
outsl
inc
jle
scas
loopne
mov
outsl
pop
inc
andb
icebp
repnz
mov
loope
sbb
and
jmp
xor
in
lahf
lcall
jo
decb
cmovae
or
lock
xlat
jl
clc
sub
test
mov
lods
mov
mov
imul
adc
stos
movsb
int3
mov
stc
aam
hlt
mov
and
aam
and
jo
mov
sub
mov
fwait
mov
mov
movsb
add
hlt
push
hlt
dec
mov
fistl
scas
push
adc
das
inc
cltd
jmp
out
loop
paddsb
ror
mov
into
ljmp
and
add
clc
fstps
lahf
into
jbe
push
cli
das
bound
call
inc
dec
mov
das
cmp
jl
adc
mov
cwtl
mov
lds
or
jg
pushl
leave
sbb
xor
sub
sahf
adc
out
dec
ffreep
mov
les
nop
jae
dec
cmp
jbe
cmc
sti
gs
xchg
mov
into
ja
je
push
xchg
jle
inc
out
sahf
pop
and
xorps
sub
movsl
mov
fldt
mov
xchg
imul
mov
push
sbb
cmp
or
dec
sbb
and
push
ret
imul
push
es
rorl
cmp
fcomps
and
mov
push
dec
mov
mov
inc
sbb
sbb
stos
lret
sub
dec
test
lods
iret
mov
mov
adcb
mov
push
rorb
mov
cmovs
mov
or
inc
mov
and
jmp
fldt
add
pushf
adc
cmp
push
idiv
cmpsl
pop
sub
or
adc
dec
push
les
jge
cmp
mov
iret
mov
cmp
sbb
ret
mov
mov
jbe
xor
aas
arpl
mov
xor
dec
rcrl
roll
xchg
xchg
pusha
mul
cmpsb
inc
hlt
add
add
and
push
pop
jmp
pop
cmovs
neg
and
xor
in
jle
or
test
cmp
push
cltd
jo
or
loopne
hlt
xchg
mov
jno
punpckldq
push
call
insb
jge
mov
aam
push
test
icebp
mov
sub
sbb
pop
test
push
lds
out
mov
pushf
jl
test
xchg
int
in
adc
nop
lods
dec
incl
repz
adc
int
push
test
jl
sub
sub
mov
fsubrs
fisttps
cmp
sbb
js
or
lods
rcrl
adc
push
pop
add
jne
pushf
repz
mov
mov
xchg
subl
and
pop
loope
sarb
jns
jns
sub
stos
aad
xor
and
xchg
dec
add
xor
leave
imul
sub
arpl
push
jl
sub
dec
lret
sub
lea
aam
xchg
test
data16
xchg
repz
movsl
out
into
movsl
mov
mov
jo
ret
imul
ja
and
sub
div
or
cmc
ljmp
roll
adcb
addr16
push
adc
pop
push
xor
jg
pop
scas
jbe
cltd
dec
sub
pop
sbb
push
mov
sti
dec
pushf
lock
aas
mov
xor
jl
xor
mov
xor
sbb
mov
out
jae
mov
scas
ret
jg
xchg
and
leave
push
sub
fwait
adc
pop
insl
es
cmp
adc
lods
je
int
sahf
xchg
and
adc
xchg
jg
fdivr
lods
in
mov
adc
mov
fs
inc
daa
xorl
bound
outsl
adc
add
stos
push
sbb
xor
jnp
sub
mov
mov
nop
add
xchg
cwtl
and
dec
fwait
ja
cmp
cmp
jae
xchg
mov
pop
and
mull
ss
inc
aaa
xchg
dec
out
shlb
push
sbb
insl
add
adc
je
push
sbb
stc
mov
and
dec
adc
das
xchg
sbb
cmp
inc
mov
lret
repz
inc
das
dec
aad
popf
daa
cmp
sahf
mov
jbe
mov
stos
xor
test
in
rorl
aam
sbb
xor
mov
push
pop
mov
add
push
xchg
inc
in
cmc
mov
adc
mov
pop
mov
or
lret
jl
xor
sbb
ja
ret
dec
popf
cmpsb
mov
dec
insb
rclb
ror
daa
fidivs
in
loop
and
pop
ljmp
pop
lods
dec
loopne
lods
insb
lods
and
js
iret
adc
mov
test
ljmp
dec
lcall
jnp
repz
lds
fidivrs
stos
loop
sbb
outsl
ljmp
push
lcall
sub
dec
add
push
and
push
push
push
mov
push
mov
mov
fsubrp
imul
and
jl
cmp
aad
jae
inc
enter
jb
adc
add
cmp
push
inc
or
outsb
cmp
je
out
movsl
insb
cmp
push
jl
xchg
stc
bound
xor
push
out
xchg
xchg
mov
push
xor
mov
mov
pop
jno
pop
negb
dec
imul
loopne
xor
icebp
aaa
mov
sbb
push
or
xlat
xchg
xor
jp
pushf
mov
scas
test
ret
push
push
iret
sbb
ljmp
mov
fxch
or
dec
adc
stos
sub
bound
cmp
test
shlb
aaa
imul
cmovo
xchg
test
cmp
pop
movsl
push
xchg
push
mov
outsl
mov
pop
in
sbb
imul
dec
addr16
adc
fwait
pushf
lock
xchg
int3
lds
rcl
pusha
dec
cld
sub
pushf
in
stc
add
lock
sti
add
and
mov
xlat
pushf
dec
mov
fisttpl
and
fcmovbe
ds
pop
fs
idivb
dec
push
jne
mov
cmpsb
into
pushf
sbb
inc
add
mov
inc
movsl
push
je
xchg
fildll
rcll
mov
jo
test
adc
inc
dec
ds
pop
cmpsl
pop
xlat
mov
or
aad
sub
ficoml
pop
push
cmpsb
inc
test
test
jge
or
dec
xor
stc
int3
je
and
inc
fiadds
add
test
stos
pop
and
mov
outsl
es
xchg
and
imul
sbb
lea
addr16
jle
inc
jmp
xchg
in
mov
and
dec
ud0
cmpsb
imul
pop
jo
push
mov
sbb
push
push
add
fwait
dec
mov
lret
mov
js
rcr
jmp
pop
sub
cld
int
mov
mov
mov
xchg
sub
aad
lcall
mov
movhps
and
ret
test
add
iret
sbb
jle
jle
jae
enter
in
or
rclb
das
or
and
push
sub
in
notb
mov
mov
mov
dec
xor
push
xchg
jne
cmp
inc
leave
sbb
mov
ret
and
fcmovne
and
lret
aas
mov
int3
insb
mov
dec
sbb
dec
add
pop
loop
sbb
repz
fcmovu
and
dec
div
test
mul
jecxz
pop
lds
sbb
out
imul
adc
add
jmp
xchg
loope
repz
xor
lcall
aas
aad
pop
in
fcom
pop
jle
pop
pop
pushf
leave
jmp
jge
movsb
push
cli
je
add
mov
or
xchg
je
ret
fstp
push
jnp
mov
adc
inc
or
mov
adc
cs
sub
into
clc
out
dec
push
mov
mov
addr16
mov
cld
ljmp
pushf
fistl
lea
or
pop
sub
or
outsl
je
lcall
das
xchg
sahf
es
adc
popf
pop
dec
mov
cmp
xor
mov
pop
adc
leave
inc
push
loop
dec
cmp
icebp
sbb
jl
enter
pushf
cmp
xchg
mov
incl
cwtl
je
push
pop
jle
sbb
mov
jns
xchg
loop
xor
fwait
cmp
jl
cmp
fnstenv
lock
and
rolb
add
xor
hlt
scas
or
loop
ds
outsb
bound
stc
pop
sub
jb
xchg
and
mov
jne
call
fbld
xchg
mov
in
jne
cmc
mov
sete
ss
sti
mov
loop
out
xchg
cmp
std
dec
inc
cwtl
push
jne
jl
in
fidivs
lret
cmpsl
mov
rol
mov
sbb
mov
fs
pop
lods
inc
scas
aas
roll
frstor
xchg
inc
adc
clc
ret
frndint
jl
add
sbb
and
xor
test
ret
sub
sbb
sahf
and
mov
xchg
jae
lcall
or
mov
out
inc
in
outsb
jmp
inc
fistl
and
adc
repnz
xor
inc
push
outsl
scas
jbe
rol
mov
push
mov
mov
dec
push
insl
ret
loop
push
pop
xchg
cmp
shrb
mov
jno
jb
gs
push
jmp
cmp
ss
dec
nop
sarl
ja
pop
jg
test
dec
pop
fisttpll
add
push
dec
cld
xchg
mov
jl
jb
mov
jecxz
xor
dec
pop
mov
testl
inc
faddp
mov
dec
push
sbb
inc
or
imul
or
in
pop
and
enter
push
xchg
movsl
jnp
mov
lret
incl
out
dec
ljmp
mov
aam
orl
out
push
fmull
in
outsb
in
push
mov
insb
mov
mov
in
pop
movsl
imul
push
pop
push
or
push
imul
mov
lahf
scas
xor
ds
outsl
jne
test
jge
or
stc
ret
int
cmp
cmp
and
add
xor
stos
sub
std
mov
push
ja
add
mov
or
and
and
stc
mov
xchg
push
mov
ss
mov
push
xchg
or
xor
xchg
or
fdivs
adc
lock
sar
xor
jne
iret
xor
add
jmp
pop
sti
push
sbb
mov
xchg
and
mov
pop
rcrb
out
stc
les
in
hlt
rclb
enter
movsl
push
idivl
add
nop
rcr
dec
xchg
imul
imul
es
push
fdivl
pusha
and
iret
pop
or
dec
js
ljmp
push
cmp
not
out
push
lret
lret
sar
push
xchg
add
enter
in
into
addr16
cwtl
out
and
sar
inc
mov
clc
mov
pushf
dec
dec
mov
out
or
mov
aam
repnz
adc
xchg
cli
leave
fs
loop
das
sar
movsb
and
push
adc
pop
popf
mov
mull
notl
out
adc
lcallw
add
push
add
dec
pop
fists
mov
push
adc
test
inc
outsl
rcll
insb
mov
je
xor
xor
xor
cmp
jb
mov
dec
sbb
divb
xchg
push
xchg
lret
cmpsb
inc
inc
xchg
and
cmp
out
iret
dec
and
pusha
std
mov
out
and
fldenv
pop
rol
mov
fildll
ds
jne
fisubl
cltd
add
mov
mov
fldenv
cmp
inc
cli
pushf
xor
lahf
dec
cltd
cmp
enter
sub
inc
sub
lcall
and
jb
mov
mov
pop
xchg
fildll
bound
stos
loopne
xchg
ret
ret
in
xor
jg
sbb
mov
add
in
int3
fsubrl
test
sbb
xchg
repz
movsb
xchg
test
mov
inc
cmp
sbb
inc
rcll
dec
popa
aad
cmpsb
pop
adc
lret
out
mov
xor
ds
mov
lret
mov
pop
scas
mov
inc
inc
or
xchg
loopne
or
mov
jp
insl
dec
in
inc
movsb
sahf
sbb
lahf
dec
dec
cld
pop
jne
sbb
mov
into
or
out
aad
pop
scas
fsubrs
push
cli
mov
mov
imul
jne
cmovb
mov
imul
shll
jp
popa
mov
xor
push
scas
imul
pop
popa
clc
sbbl
gs
movsl
fnsave
call
inc
or
mov
or
test
bound
in
xchg
xlat
daa
lret
sub
fidivrs
mov
ficomps
xor
iret
pop
pop
xchg
or
push
mov
xchg
inc
inc
mov
outsl
push
lret
leave
dec
and
mov
cmp
mov
jnp
jo
inc
push
pop
cld
add
lret
mov
or
arpl
sbb
mov
mov
and
jnp
jne
out
adc
jbe
cmp
push
lock
jno
xchg
xchg
inc
jnp
and
mov
jne
lods
rcll
out
stc
icebp
dec
and
out
dec
repz
xor
push
fbld
mov
cmp
maskmovq
notl
fsubrs
lods
mov
fwait
sub
aaa
inc
sub
mov
xchg
dec
loopne
dec
pop
mov
jae
and
inc
pop
mov
jmp
jle
adcb
sub
xor
std
ljmp
in
test
sbb
imul
mov
push
push
and
adc
fwait
xchg
add
jle
icebp
or
out
sub
in
lds
js
adc
ret
call
jo
outsl
fwait
xorl
int
shrl
sti
sarb
rcr
repz
pushl
push
mov
mov
out
lea
xor
shlb
pop
xor
push
popa
sarb
adc
push
fdivrp
fisubl
lods
xor
inc
inc
pop
scas
mov
xor
jae
mov
cmp
push
jns
xchg
cmp
cwtl
lret
mov
mov
push
add
sahf
daa
iret
ret
and
dec
inc
xor
mov
cmpsl
imul
int
mov
loop
clc
xchg
xchg
cmp
adc
es
js
cmp
xchg
dec
sub
cmp
ljmp
push
fbld
std
fnsave
int
outsb
cmp
pop
xor
adc
jle
loopne
inc
loope
add
jno,pt
push
shlb
xor
xchg
hlt
push
push
xchg
xor
pushf
shrb
popf
and
add
mov
push
dec
inc
jns
mov
cwtl
pop
mov
pop
icebp
fsubl
cmp
les
ja
aaa
cwtl
jl
pop
popa
stos
cmpsb
imul
inc
call
test
lcall
pop
clc
leave
outsl
ds
pop
xchg
stos
xlat
jp
int3
push
addr16
mov
mov
cs
mov
mov
fsts
data16
loope
mov
je
adc
mov
lcall
mov
push
inc
icebp
or
jnp
or
sub
pop
fidivs
les
sub
pop
shll
lret
adc
xor
xor
les
cmpl
jl
shrl
mov
call
inc
rcrl
scas
aas
scas
rcl
push
dec
ss
jo
xchg
jle
xchg
mov
and
jne
cmpsb
dec
mov
jmp
shl
cmp
gs
or
mov
xchg
div
add
inc
and
fisubl
push
pop
sbb
xlat
push
push
dec
out
clc
stos
push
pop
mov
out
aaa
repnz
fistps
imul
mov
les
fwait
sbb
inc
mov
rcrl
lds
lcall
cmpsl
dec
mov
test
dec
mov
test
sub
xor
push
or
push
xlat
pusha
test
sti
mov
xchg
sub
sbb
pop
fs
push
adc
sar
daa
mov
sub
fs
shlb
or
jl
push
mov
jle
mov
lret
mov
mov
mov
adc
mov
inc
lods
mulb
rdmsr
rorb
mov
shrb
es
insb
sub
add
push
inc
push
pop
mov
dec
mov
xchg
jo
mov
lods
xchg
jl
int
je
xor
push
inc
jge
jb
mov
test
frstor
adc
add
xchg
adc
mov
aad
xchg
ret
jecxz
xor
pop
sbb
inc
loope
lahf
pop
mov
sub
push
sbb
inc
mov
sbb
jns
mov
std
sub
test
cmp
lea
ljmp
int3
dec
stos
jns
or
stos
cmp
hlt
testl
outsb
in
push
cmpsl
sub
mov
flds
pusha
out
ja
stos
jg
add
lcall
mov
xchg
jge
fnstenv
or
dec
cmp
fidivrs
cmpsb
mov
add
pusha
add
or
mov
in
inc
pop
aad
gs
dec
inc
inc
test
inc
test
jae
cmp
enter
and
cmpsb
or
jbe
cmp
out
push
sbb
jmp
jle
es
sub
jg
repz
fs
arpl
or
and
lods
adc
imul
addb
lea
insb
in
icebp
repz
push
and
dec
jmp
push
mov
and
daa
les
inc
push
ljmp
imul
addb
popf
das
cmp
push
repnz
aas
imul
mov
push
lret
sbb
mov
mov
add
mov
pushf
push
cmp
mov
jo
imul
xor
cmpsb
xor
inc
xor
call
loopne
xchg
cli
enter
push
lcall
daa
shll
xor
jp
jo
out
pusha
jp
cmp
pop
mov
les
xlat
fs
sub
fcomps
into
pushf
pop
orb
jns
xchg
ss
popa
pop
or
lock
sub
mov
cmpb
ret
jge
pop
mov
sbbb
pop
lods
adc
lock
imul
push
pop
push
js
jl
insl
cltd
mull
jmp
mov
add
in
push
sti
dec
lahf
sub
cmpsl
loope
lret
es
les
sti
and
das
adc
rcl
sahf
add
loop
scas
push
mov
cmp
movsl
xchg
hlt
inc
in
cmp
jns
push
addr16
jo
add
stos
mov
fadds
and
into
mov
xor
mov
jl
push
ja
arpl
insl
cmp
into
pusha
jnp
fwait
popa
push
dec
cmp
out
push
lods
orl
adc
and
scas
push
jg
or
cmp
xchg
adcb
aaa
adc
inc
loopne
jno
jle
fs
repz
jno
xor
push
int
inc
sub
lcall
push
cli
insl
push
inc
push
mov
mov
fisubrs
mov
pop
mov
push
dec
insl
sub
xor
xor
dec
jne
push
out
adc
xor
jmp
gs
leave
inc
scas
fwait
mov
cwtl
cmp
fisubl
push
add
push
bound
adc
mov
test
gs
inc
mov
mov
out
dec
add
push
or
push
jg
push
push
aas
sub
aaa
addl
shlb
loope
mov
mov
repz
xchg
and
and
xchg
lret
bound
ja
mov
sub
ds
sbb
mov
iret
jmp
add
jns
ljmp
mov
dec
push
mov
ret
imul
mov
fs
outsb
push
int
movsb
shl
mov
pop
and
in
push
fisttpll
sub
loop
xor
cli
test
bound
pop
jno
aad
test
gs
fistpl
mov
adc
cmpl
mov
cmp
imul
mov
fisubl
mov
and
bound
stos
mov
in
stos
push
inc
mov
fisttps
movsb
jnp
leave
roll
jl
push
sub
shr
jge
shll
iret
cmp
xor
call
jle
mov
out
setg
xor
mov
jns
adc
inc
insl
pandn
mov
push
add
push
out
fwait
inc
js
inc
jl
pop
jne
push
mull
pop
cmp
fnsave
sbb
imul
sub
hlt
addl
mov
push
inc
les
sub
lret
adc
sahf
bound
sub
fwait
xlat
mov
cltd
fdivr
movsb
pop
mov
pop
push
push
repnz
leave
sbb
xchg
mov
fistl
mov
leave
daa
stos
inc
rorl
stc
test
paddd
and
cmp
mov
aad
xor
nop
jno
fwait
jno
rcrb
add
iret
mov
and
dec
mov
mov
rorl
mov
fiaddl
gs
mov
icebp
out
sub
and
sahf
pop
daa
insl
cvtpi2ps
lods
mov
push
add
je
arpl
xchg
shlb
push
loope
add
lds
mov
jmp
cmc
mov
aam
subl
frstor
shll
pop
inc
and
repnz
dec
pop
out
inc
fnsave
xchg
mov
cmpsb
xchg
fidivrs
jmp
call
daa
adc
jmp
mov
imul
rolb
mov
and
adc
cmp
adc
cs
or
and
sbb
xchg
rcl
push
loope
aas
stos
test
stc
inc
xchg
fcmovnbe
sar
stos
daa
dec
cltd
int
pop
pop
inc
fstpl
cmp
std
sahf
inc
inc
fimull
stos
inc
xor
test
lret
jle
jo
cld
andb
dec
add
or
and
testl
ljmp
pop
icebp
popa
sbb
es
mov
push
sub
pop
outsl
adc
stos
ret
add
adc
pop
xchg
jge
roll
adc
push
lea
mov
sub
adc
push
pop
rcll
sbb
es
jge
xchg
lret
jo
cs
mov
xchg
aam
mov
decl
in
jl
xchg
sbbb
mov
adc
sti
ficompl
nop
sub
inc
mov
inc
aas
fs
cwtl
imul
sub
jl
mov
push
cld
jo
mov
mov
xor
scas
adc
in
imul
adcb
jae
dec
xor
and
inc
insl
cwtl
popa
xor
inc
jb
jb
dec
mov
lcall
jle
bound
mov
ja
fs
pop
adc
mov
imul
xor
in
xchg
jne,pt
xor
inc
cmp
stc
sti
cli
pop
js
les
mov
cmp
mov
cmp
into
mov
out
mov
xchg
imul
movsb
add
shlb
test
and
cwtl
inc
dec
sbb
cs
add
jle
add
mov
pop
or
mov
cmp
pusha
push
nop
jb
adc
ljmp
xchg
rorl
repz
aas
imul
xor
sub
sti
lahf
sar
mov
leave
jmp
xchg
mov
into
jno
arpl
fwait
addr16
fisubl
ret
inc
add
push
jecxz
mov
fwait
ja
imul
xchg
bswap
pusha
and
mov
push
cmp
adc
sahf
push
jbe
mov
mov
in
inc
push
jg
popa
sbb
xlat
and
lret
mov
mov
mov
and
or
lock
push
aad
gs
daa
xchg
pop
test
dec
fs
mov
mov
test
jne
mov
repnz
pushf
push
ret
mov
mov
cmc
imul
xchg
xchg
aas
sbb
push
inc
cmpsb
inc
mov
iret
pop
push
cmpsb
mov
repz
scas
sbb
test
jbe
sti
jmp
xchg
iret
push
je
popf
loopne
mov
cmpsb
xchg
push
ljmp
xor
je
iret
mov
mov
loope
cmp
adc
xchg
loopne
int
xor
or
imul
adc
movsl
imul
mov
push
mov
adc
pusha
push
xlat
or
movsb
in
xlat
es
inc
push
out
cwtl
jno
xor
enter
inc
gs
ljmp
ret
jnp
icebp
jnp
add
pop
testb
mov
mov
xor
or
stc
inc
fimuls
adc
add
mov
clc
mov
in
add
push
test
out
aam
pop
loop
pop
repnz
enter
bound
lea
dec
mov
movb
and
gs
jg
dec
cmc
adc
xchg
stc
cmp
fadds
sbb
or
bound
nop
mov
jge
int
fcomps
stos
inc
cmpb
push
pop
jne
popf
mov
ja
mov
insl
stc
dec
inc
lock
mov
testl
fbstp
or
add
jnp
jmp
in
jnp
ss
xchg
mov
pop
aad
rcl
pusha
cs
xor
sbb
cli
sbb
shll
push
int3
cmpsb
pop
jns
cmpsb
jle
dec
jbe
rolb
push
out
add
int
cmc
imul
mov
mov
lods
jo
pop
aad
scas
clc
movsb
dec
mul
ja
mov
adc
pop
das
test
aaa
das
push
push
fs
lret
dec
lock
in
sub
ret
movsb
out
mov
push
out
test
inc
pusha
imul
das
dec
lret
push
xlat
xchg
addl
pusha
pop
ret
xor
test
lods
push
test
or
outsb
mov
test
add
and
inc
inc
jns
es
mov
iret
inc
jno
outsb
mov
iret
int3
push
push
and
mov
stos
mov
cmpsb
adcl
xor
out
mov
or
jp
cli
roll
xchg
jno
mov
jl
divb
rorb
addr16
xchg
jecxz
insl
data16
cmc
cmp
test
xchg
movsb
xor
xor
mov
adc
xor
xor
xchg
shrl
cmpsb
mov
pop
andl
bound
mov
test
inc
stc
shlb
jp
mov
cmpsl
je
sub
aam
xchg
and
push
ja
lock
cmc
sub
jmp
lds
aas
xchg
or
lret
mov
mov
ss
loopne
pop
xor
rorl
stc
mov
incb
cltd
ja
push
cmp
popf
xchg
jp
test
in
xor
lret
and
cwtl
cmc
fisttpl
in
xor
loope
rol
cmp
cmp
pop
out
into
inc
les
cmp
cmp
push
and
fwait
add
adc
jmp
mov
repz
mov
push
push
loopne
jl
aas
cmp
jbe
pop
jnp
dec
insb
stos
sarl
mov
addb
jbe
add
scas
lock
lock
cs
cld
cltd
cmp
jo
test
rclb
and
mov
mov
mov
push
ss
pop
test
xchg
inc
and
cmp
mov
shl
into
ret
cld
in
scas
push
int3
jp
sub
jecxz
lods
sti
jle
das
out
movl
mov
sub
sbb
adc
mov
jl
outsl
mov
jle
sbb
mov
clc
push
pop
rorb
jns
mov
xlat
int
imul
or
xor
cmp
popl
stc
sti
sub
arpl
xchg
ret
jmp
rcrb
push
sbb
push
test
jns
and
sub
out
imul
fiadds
mov
lds
mov
xchg
pushf
mov
push
mov
cmpsb
adc
adc
lea
mov
sahf
or
sub
adc
test
stos
faddl
sbb
imul
and
pop
dec
cmpsb
out
adc
daa
movsb
xor
cmp
lods
bound
adcl
pop
out
data16
inc
xchg
pushf
inc
movb
mov
jae
testb
pop
call
xchg
mov
add
lods
dec
pop
xchg
push
es
dec
inc
ret
jae
es
scas
rorl
lds
push
pop
xchg
out
call
cs
jl
fcoml
lea
jg
popa
in
add
fdivl
add
fwait
push
dec
shlb
or
fbld
iret
int3
lock
pushl
adc
inc
in
push
jg
inc
pop
sbb
push
xor
cmp
test
es
mov
data16
les
dec
enter
dec
or
sub
repnz
movsl
adcb
jo
mov
ret
push
mov
cmc
pop
jmp
sub
fmul
add
mov
xor
adc
push
lret
xchg
int
stos
aam
and
mov
push
inc
shlb
test
hlt
fs
xor
mov
cmc
mov
lds
push
and
push
push
mov
insb
inc
add
sbb
popf
sahf
mov
xchg
mov
xchg
adc
cli
das
pop
jb
insb
mov
fadd
push
sbb
enter
xchg
ret
test
pop
roll
push
fiadds
dec
js
jmp
jle
xor
stos
and
inc
sub
push
xchg
nop
sub
or
mov
mov
mov
aam
stos
jl
add
cmp
cs
pop
sbb
adc
sub
aaa
sbb
mov
mov
movsb
aam
incl
pop
sti
sarb
jb
sbb
movl
mov
shl
popf
mov
arpl
mov
mov
shl
add
int
pop
dec
push
mov
cli
xchg
gs
pop
mov
xchg
mov
out
sub
dec
xchg
mov
rcll
shlb
sar
pop
ret
mov
mov
outsl
sub
sbb
dec
cld
ss
cmpsb
cwtl
jb
sbb
mov
adc
pop
in
mov
mov
jno
lret
xor
sub
pop
imul
fsincos
test
mov
sbb
dec
xchg
lock
imul
xor
xchg
cmc
mulb
icebp
int
dec
sbb
xor
test
cmpsb
test
in
loop
sub
popa
xchg
push
sbb
mov
aad
or
arpl
push
adc
add
inc
push
cmp
inc
jns
stc
imul
adc
inc
popf
pop
mov
mov
scas
adc
and
push
shll
test
add
jo
cmp
fidivrs
xor
xchg
pushf
and
fwait
ja
push
add
mov
shl
mov
pop
call
addr16
repnz
or
fistps
imul
sbb
lods
sub
inc
jbe
rcll
mov
xchg
es
lock
sub
push
sarl
or
cld
mov
xor
mov
cld
int
dec
repnz
dec
mov
cmpsl
jns
enter
jmp
add
cli
in
mov
push
mov
mov
lea
lock
out
mov
adc
jne
clc
or
scas
jl
in
dec
popa
cmc
xor
push
or
add
mov
arpl
sbb
pop
adc
es
sub
imul
cld
insl
loope
sbb
pop
sub
mov
adc
or
xor
push
jge
mov
jmp
jns
xchg
outsl
out
or
xchg
sub
mov
inc
mul
xchg
push
outsb
loope
mov
cs
mov
outsl
pop
push
xor
frstor
mov
xor
mov
mov
jne
xlat
shll
xor
daa
mov
cmp
mov
xchg
add
pop
sahf
call
gs
jae
xor
adc
lea
xchg
loop
clc
push
jge
mov
lock
ja
call
jle
xchg
jmp
cmp
pop
cmpsb
sbb
pushf
lcall
and
jecxz
lock
aad
mov
mov
mov
adc
ficoml
push
pop
mov
jp
push
aas
adc
adc
lock
push
push
pmulhuw
sub
movsb
cmpsb
xor
outsl
sbb
hlt
addr16
in
and
xchg
sub
mov
lret
jl
sub
push
call
push
out
int
mov
out
rcll
jns
dec
nop
out
add
sub
xchg
rcr
sbb
mov
pop
fidivs
cld
fnstsw
sbb
call
xor
idiv
or
enter
adc
xchg
pop
add
in
test
cmp
int3
rolb
addb
test
les
popf
cmp
ret
and
gs
xchg
shl
xchg
ffreep
loopne
out
setle
mov
add
add
packsswb
call
xchg
and
jbe
jns
stc
jno
test
jno
ror
xor
int3
xor
jmp
shlb
daa
call
mov
std
cltd
sahf
arpl
pop
test
inc
jbe
mov
cmp
adc
mov
adc
es
sbb
push
fwait
call
lcall
and
or
inc
loop
aam
mov
push
dec
mov
pop
cli
hlt
shll
mov
pop
sub
ss
fsubp
sub
ss
mov
cmp
rcl
mov
cmc
inc
xchg
nop
int3
loop
addr16
or
and
sub
jp
xor
imulb
bound
sub
repz
jnp
fs
mov
dec
pop
fldcw
and
cld
xchg
pushf
jne
lahf
fdivs
pop
mov
xor
add
testb
ljmp
adc
push
iret
repz
int
xchg
inc
sbb
xor
dec
jns
int
addr16
xchg
sbb
lret
aaa
fisubrl
mov
adc
es
pop
add
add
lock
dec
cmp
test
pop
cmpsl
push
mov
xchg
sbb
mov
xlat
pop
daa
lret
loopne
push
movsl
lahf
lret
adc
and
shrb
push
or
lret
xchg
aas
aaa
mulb
fcoms
pop
out
sub
pop
pop
jnp
int3
jge
out
test
lock
pop
mov
roll
xor
mov
pop
sbb
xlat
xlat
and
and
and
bound
testl
push
mov
fcmovnbe
push
sbb
repnz
pop
lcall
rolb
mov
pusha
sbb
jns
cltd
mov
xor
inc
hlt
lret
test
fwait
cmpsb
ret
adc
push
mov
push
rorl
cmp
pop
ja
in
in
dec
je
pcmpeqw
xor
xchg
out
mov
insb
imul
and
ss
adc
loopne
insl
xor
sbb
and
dec
sbb
mov
and
das
fistps
pop
movb
sbb
fstpt
or
adc
pop
adc
shll
pushl
jmp
aam
mov
mov
clc
inc
mov
pop
daa
jecxz
xchg
push
pop
std
inc
dec
fisubrl
inc
shrl
sub
cltd
dec
popf
andb
mov
movsl
cmc
sahf
dec
mov
dec
lods
shlb
mov
fstp
popa
push
cltd
shl
push
stc
pop
clc
mov
jl
mov
sub
add
inc
shlb
int
pop
popf
test
ja
push
fcmove
jge
mov
ret
xchg
or
test
push
mov
push
adcl
or
inc
bnd
scas
arpl
cmp
dec
mov
pop
sub
mov
pop
shlb
sub
jbe
int3
cmp
mov
rcrl
rcrl
paddsw
xchg
jmp
sbb
fwait
cli
cmpsb
sub
jb
lock
sbb
or
or
clc
cmp
push
bnd
mov
incl
cli
jecxz
sbb
arpl
xchg
sbb
dec
sub
add
dec
xlat
in
push
jb
movsb
add
ja
mov
add
mov
sbb
pop
adc
aam
cwtl
in
cs
shlb
in
roll
mov
mov
dec
inc
dec
sbb
add
jbe
sbb
cmc
xchg
loopne
xchg
adc
cmpsl
lds
sbb
dec
or
lret
push
dec
iret
and
repz
subl
shrl
lahf
loop
mov
mov
dec
mov
test
into
loope
aas
cmp
adcl
fmulp
mov
mov
popa
cmp
test
aaa
subl
ds
adc
cwtl
inc
and
out
xchg
test
daa
rcrb
xchg
icebp
lods
insl
orb
xor
pop
push
js
jmp
inc
xor
outsb
adc
cli
mov
xchg
ljmp
or
testb
movsl
push
ljmp
out
cmc
call
jecxz
mov
inc
loop
clc
xchg
lods
adc
jae
adc
xchg
outsl
shrb
roll
lods
lcall
adc
xor
mov
mov
inc
loope
fsubl
arpl
je
cmp
or
mov
lahf
test
push
cli
mull
out
sbb
loope
cmp
ljmp
dec
sar
push
cld
mov
mov
outsb
jno
stos
dec
pop
in
lret
and
aad
subl
out
push
sbb
add
mov
xchg
pusha
mov
fidivs
mov
sbb
or
push
loopne
cmp
jge
pusha
jae
add
mov
pop
push
and
pop
das
inc
add
push
pop
imul
int
scas
adc
rcrb
lret
or
shll
popa
xor
lret
ja
cmp
push
loop
and
paddsb
mov
push
adc
sbb
enter
inc
or
push
push
mov
in
pop
insl
in
fcomp
loope
imul
or
sub
int
lahf
rorl
push
loope
icebp
jle
or
cld
pop
sub
jp
mov
jecxz
inc
xchg
jecxz
adc
pusha
ds
push
mov
adc
push
hlt
cltd
pop
iret
rolb
sbb
inc
enter
or
xchg
mov
mov
loopne
fidivrs
test
into
add
lahf
add
lods
push
std
pop
sub
xchg
or
rorl
mov
pushw
fs
jge
gs
in
insb
dec
inc
inc
inc
test
outsb
les
out
lret
and
mov
jns
std
jnp
or
and
inc
loopne
test
adc
dec
lret
push
and
xchg
cmpsb
push
sub
inc
adc
rorb
xchg
jo
and
xchg
fwait
push
sub
mov
xchg
push
jl
cmpl
jnp
in
cltd
adc
and
mov
push
pop
jl
test
add
shll
inc
nop
ficoml
mov
mul
test
adc
cmpsb
rcll
sbbl
sub
lcall
cmc
sub
in
mov
iret
pop
pushf
jae
jno
adc
push
push
or
push
imull
push
into
mov
mov
push
cld
cltd
sti
xchg
ret
sti
mull
sbb
ror
orl
int3
repnz
loop
jno
stos
and
imul
or
ljmp
enter
fwait
sbbb
lahf
pop
xlat
fwait
je
leave
sbb
push
xchg
and
or
insl
dec
inc
inc
pop
ficomps
stos
leave
mov
dec
lcall
ret
lret
jnp
iret
icebp
mov
fnstsw
fs
stc
dec
xor
out
push
push
push
fstpl
adc
lret
inc
push
hlt
ja
dec
arpl
or
adc
repz
idivb
loop
setl
mov
lret
fisubs
lcall
xchg
dec
xor
jmp
push
pushf
fs
or
add
ja
rcrl
mov
jg
mov
cld
cmp
out
imull
vphaddudq
sbb
mov
movb
in
xchg
mov
dec
sub
loop,pn
and
push
push
jg
mov
adc
pop
movl
sub
out
inc
hlt
aas
mov
cmpl
lea
push
orb
jae
ret
cmp
mov
divb
es
jecxz
pop
pop
hlt
aad
push
pop
iret
pop
push
fldt
jg
dec
mov
push
lret
imul
push
ja
sbb
cmp
movsb
jo
aam
push
pop
mov
pop
jbe
lret
stos
cli
mov
jne
aaa
dec
dec
imul
lret
lock
xor
imulb
push
jecxz
sub
mov
popf
sahf
add
clc
jne
and
jno
sahf
xor
aad
cmc
sub
lahf
jb
popf
ret
mov
loop
stc
dec
dec
pop
int
add
mov
dec
mov
insl
mov
mov
jae
push
sbb
add
mov
xchg
pop
fdivrs
sti
punpcklbw
sub
mov
scas
aas
ret
insl
jecxz
adc
push
mov
daa
loopne
int
in
fisttpll
lret
mov
mov
push
scas
push
pushf
dec
push
subl
cs
ja
mov
dec
icebp
ret
repnz
pop
add
std
xchg
in
int
jne
mov
adc
sbb
scas
mov
pop
inc
push
push
jle
mov
push
adc
cmc
xor
loope
repnz
xor
ret
out
shlb
mov
fldl
mov
fstpl
lds
jb
dec
lea
add
ljmp
ret
inc
lret
lea
jg
jae
sub
cmpsb
xchg
inc
stos
in
adc
xor
or
add
sbb
adcb
insb
addr16
pusha
adc
jne
jnp
shrb
fnstsw
mov
insl
pop
pop
cmpsb
mov
sub
inc
sti
pop
movsl
sar
sbb
push
adc
fdivs
xchg
adc
mov
jmp
cmp
push
push
shlb
mov
push
jg
jo
push
in
aad
scas
push
mov
mov
ljmp
and
call
fmuls
or
adc
jge
dec
cmp
cmpsl
ss
mov
sub
jae
dec
das
dec
and
adc
xchg
stos
cs
jns
add
xorb
dec
test
je
and
push
int
cmp
or
jbe
adc
addb
inc
xchg
outsb
mov
and
fildl
mov
mov
jne
adc
xor
add
ljmp
iret
cmp
insb
inc
push
xchg
lretw
hlt
cmc
inc
add
dec
add
dec
mov
bound
sbb
test
imul
dec
imul
enter
mov
sub
xchg
push
mov
sub
aad
insb
mov
push
icebp
pop
push
xor
sti
fists
shll
mov
jb
cmpsb
leave
cmc
mov
mov
loop
adc
and
and
test
jmp
jns
xlat
leave
cmp
nop
jnp
test
pushf
int3
push
arpl
jecxz
xor
and
leave
scas
test
popf
lret
mov
mov
add
mov
fisttpll
xor
sti
or
pop
lret
pop
cli
mov
lock
fcoml
or
aam
rcrb
and
and
lret
and
ljmp
fcmovnbe
je
xchg
insb
xor
pusha
out
mov
pop
and
or
xchg
test
sbb
xor
out
mov
add
into
iret
fstpt
repnz
in
stc
daa
cmp
lds
je
add
xor
lcall
daa
fwait
jns
cmp
or
call
adc
jnp
jecxz
dec
int
add
jl
ds
insl
je
loop
or
push
lret
lods
pop
aam
sub
addr16
out
mov
aad
xor
sbb
push
inc
add
lock
inc
aad
sbb
jb
fiaddl
sbb
call
adc
push
push
adc
je
mov
pop
or
cli
fcompl
sub
daa
loopne
cmpl
cli
pushf
mov
inc
ljmp
repnz
subb
and
cmp
inc
pusha
test
outsl
js
lea
and
adc
or
pop
xor
add
jmp
mov
sub
pop
sub
test
hlt
outsl
orl
insl
pop
and
lcall
sub
pop
aam
std
scas
cmp
xor
push
fisttpll
xchg
aaa
je
mov
out
push
mov
push
mul
lcall
sarl
out
ret
cmpsl
push
int3
js
aad
add
cmpsl
int
sbb
sbb
xchg
inc
fbld
aas
push
test
xorl
stos
shrb
sbb
xchg
pop
pop
scas
lret
fidivs
ja
push
dec
sbb
lcall
sti
pusha
add
or
adc
dec
rolb
xlat
aaa
push
mov
xor
adc
sbbb
gs
shll
cwtl
aam
push
push
fs
pop
lods
jg
and
repz
xchg
jmp
dec
push
add
adc
mov
es
adc
push
xchg
dec
fwait
add
adc
subb
cmp
lahf
xchg
jno
mov
hlt
dec
adc
ljmp
push
sbb
stos
jecxz
jecxz
call
stc
dec
xlat
dec
dec
add
push
inc
xor
enter
pop
divps
dec
cltd
pusha
cli
pop
inc
sub
fldenv
and
add
stos
cmp
insb
jge
mov
adc
jae
mov
cmp
xor
sub
out
push
inc
and
test
inc
push
test
in
push
rorl
adc
clc
les
cmp
sub
cmp
mov
fs
es
out
inc
stos
dec
jo
inc
sub
sbb
ds
and
call
not
or
inc
fnstsw
int3
jecxz
idivb
leave
aam
cwtl
imul
addl
push
out
and
dec
cltd
dec
in
mov
clc
inc
insl
lock
jp
lret
arpl
inc
xchg
xchg
popf
adc
or
and
fisubrs
repnz
insb
cmc
or
mov
pop
js
mull
cmp
shlb
jge
or
xchg
bound
jmp
push
lcall
arpl
icebp
and
inc
ret
cltd
xchg
dec
jno
cli
adc
je
and
adc
mov
inc
sbb
pusha
leave
mov
lds
lds
pop
pop
mov
decb
xchg
xorl
bound
stos
pop
sbb
dec
push
out
mov
nop
jnp
inc
ds
inc
iret
pop
jl
dec
and
rclb
add
xor
mov
in
fstpl
sti
out
jno
push
jmp
flds
push
and
fsubrp
jb
cmpsl
xlat
addr16
jp
bound
jns
movl
xchg
or
push
fdivrs
jnp
jb
inc
mov
int
mov
dec
mov
jecxz
inc
cltd
xor
sbb
rcrl
cs
sbb
adc
orl
mov
insb
lds
jg
jo
push
push
enter
ss
sbb
fsts
mov
aaa
cli
dec
aam
test
mov
mov
insl
mov
js
adc
dec
shl
icebp
out
push
pop
inc
jge
xchg
cmp
add
aaa
mov
dec
outsl
arpl
int
jle
or
cld
mov
mov
xchg
xchg
add
add
and
ss
jnp
call
jb
adc
ficoms
enter
cmp
loopne
lods
jp
sub
xchg
mov
mov
iret
cmp
adc
fsubrs
fs
lret
xchg
jp
mov
arpl
inc
imul
push
sub
xchg
fildll
decl
mov
test
hlt
mov
bound
mov
mov
mov
add
push
jae
dec
std
filds
jp
icebp
loopne
and
clc
xchg
jmp
jle
push
das
xor
dec
hlt
jmp
xor
pop
jl
xor
les
arpl
addr16
xchg
pop
xchg
mov
sahf
repnz
pop
fnstcw
adc
cwtl
add
fwait
xchg
cmp
push
popf
sti
mov
xor
jbe
mov
pop
in
push
or
or
jbe
mov
sbbl
xchg
popf
mov
lcall
add
mov
pcmpeqb
or
mov
sub
sub
jns
movl
or
push
je
lods
imul
cli
addr16
inc
or
ficoms
mov
jmp
fbstp
xor
into
xchg
dec
imul
in
sbb
xlat
insl
pop
and
iret
xlat
sbb
ss
in
mov
dec
lret
nopl
iret
rcrb
cli
inc
stos
pop
mov
mov
and
ret
pop
mov
push
inc
sbb
fldenv
dec
push
roll
ljmp
loopne
fwait
sbb
int
test
iret
jg
cmpsb
cmp
jae
jo
data16
push
adc
mov
mov
inc
fs
repnz
mov
lcall
popf
or
arpl
loope
sbbl
std
icebp
pop
insl
push
push
arpl
ret
push
sub
inc
pusha
scas
in
stc
rcll
or
sub
aaa
into
aam
stos
ret
pop
arpl
inc
mov
mov
out
mov
sarl
dec
out
jl
ret
and
scas
cli
and
sbb
les
outsb
jp
inc
lahf
mov
iret
in
pop
mov
cmp
ja
movl
mov
sti
insl
mov
cmc
test
add
mov
test
xchg
mov
mov
mov
mov
icebp
bnd
ret
add
mov
pop
nop
sbb
mov
in
or
jae
sti
cmc
mov
pop
imul
jns
mov
sbb
cltd
sbb
sub
daa
or
jmp
jle
insb
jg
add
out
or
cld
or
insb
lea
mov
cmpsb
or
jge
adc
fmul
into
add
inc
imul
pop
push
sarl
jp
lea
push
mov
iret
jno
loope
sub
or
mov
shll
shll
out
and
popf
hlt
mov
movsl
mov
and
pop
and
lretw
cmc
xchg
inc
mov
popa
pop
cltd
xchg
inc
push
xchg
add
mov
sbb
lods
loope
push
aaa
insl
adc
xchg
and
or
jmp
push
push
into
daa
fldenv
cmpsb
xor
arpl
in
imul
cld
xor
jo
xchg
sbb
add
pusha
push
or
out
adc
jb
test
jg
not
or
mov
jl
or
scas
dec
mov
cmp
sti
cmc
in
aad
xchg
insb
lds
dec
repz
fcompl
inc
mov
sahf
pop
pop
pop
loopne
pop
dec
test
ja
iret
bound
call
push
std
fsubl
vpmacsdqh
in
pop
mov
push
clc
add
int3
ja
addr16
mov
jae
in
iret
cld
sar
push
dec
dec
decb
rorl
sti
daa
outsl
adc
inc
pop
lods
call
inc
insb
pop
std
in
sahf
out
sub
jle
jge
out
pop
fildll
outsl
push
sub
cmp
or
lods
or
adc
lock
or
out
bswap
bound
xlat
in
shr
pop
push
lret
sbb
ud1
fcoml
icebp
sbb
push
dec
insb
nop
in
and
sbb
stc
je
or
or
sbbl
scas
mov
pop
test
sbb
jge
aas
addr16
mov
repnz
cmp
cmp
and
icebp
ficoms
or
sub
les
ljmp
imul
dec
add
arpl
mov
or
cltd
out
push
xchg
ss
add
push
lcall
xchg
fmul
clc
push
in
mov
cmp
and
dec
test
inc
sahf
fbstp
or
mov
fisubrs
cmp
or
fcomip
orb
loope
pop
fstps
pop
cmp
ljmp
out
bts
cmp
out
in
scas
mov
push
test
sbbb
js
xlat
stos
les
dec
enter
dec
xor
push
flds
or
and
or
pop
insb
es
dec
aam
stos
pop
cld
jne
icebp
bound
or
cmpsb
push
push
outsb
inc
test
leave
lods
mov
pop
ret
add
sti
inc
enter
mov
xor
repnz
cmc
push
add
sub
es
movsl
push
jp
inc
adc
add
pop
mov
push
pop
je
adc
sbb
movsb
mov
adc
fiaddl
sub
inc
push
stc
xor
mov
mov
cmpsb
mov
sub
popf
fwait
mov
and
push
inc
xor
inc
daa
pop
and
jmp
ljmp
inc
jg
std
add
in
in
dec
fistl
insb
rolb
jno
or
mov
sbb
ds
push
insb
adc
jb
push
out
popa
mov
in
mov
mov
mov
insb
pusha
aad
les
loopne
xchg
hlt
mov
loope
or
sub
inc
lcall
jno
imul
jnp
pop
xchg
mov
aaa
pop
sub
sbb
je
fwait
or
jns
jp
les
je
adc
cmpsb
inc
sbb
jb
fsubr
sub
mov
push
ret
ficompl
bnd
xchg
aas
ret
cmc
sbb
xchg
sub
cld
rcr
xchg
mov
mov
addr16
cmpsb
outsb
fwait
add
sbb
bnd
or
adc
loopne
outsb
dec
jae
fcomps
jns
push
pop
mov
lahf
mov
mov
fcoms
mov
mov
fnstsw
push
pop
pop
adc
lock
jmp
adc
jmp
lods
test
rcrl
stc
gs
call
shll
adc
inc
cmp
addr16
dec
push
mov
jns
ret
jle
into
dec
insl
out
fstpt
fndisi(8087
movsb
adc
mov
inc
and
scas
pop
adc
adc
imul
clc
mov
sub
jae
mov
adc
xchg
mov
addb
xor
mov
mov
xchg
ljmp
lahf
and
es
adc
push
push
jno
imul
push
xorb
jnp
loope
fcompl
fnstsw
pop
inc
mov
xchg
mov
out
cmp
scas
mov
sbb
jo
xor
movsl
lcall
sbb
mov
ret
or
aad
pop
xor
or
movb
jns
dec
cli
inc
add
sbb
adc
push
es
xchg
sub
inc
out
cld
in
std
arpl
xchg
cwtl
pop
insl
loop
adc
pop
loop
sub
or
outsb
hlt
mov
jmp
in
imul
ja
cmp
xchg
mov
fdivs
ret
sbb
imul
pop
dec
sub
leave
add
mov
clc
inc
es
mov
dec
dec
jecxz
arpl
jp
test
sbb
nop
mov
lahf
lret
repnz
pop
hlt
pop
cltd
mov
lret
cltd
rep
fmulp
fidivl
cmpsb
shrb
xor
and
mov
mov
mov
fbstp
repz
pop
dec
xlat
in
ret
orb
aas
gs
add
mov
lret
shlb
cwtl
mov
addb
lea
lret
jno
mov
sbb
lret
scas
pop
add
push
mov
mov
sti
lods
sub
imul
stc
mov
xchg
ffree
fnstenv
jno
inc
std
les
in
mov
paddd
call
sbb
test
push
rorb
xor
cmp
xorb
addr16
js
adc
mov
pop
data16
sbb
in
cmp
jo
adc
dec
push
or
mov
and
xorb
push
cld
jl
add
add
movsl
xor
jp
les
mov
mov
push
push
stc
jge
and
or
jb
mov
xor
xor
mov
lock
je
stos
lods
cmp
lods
insb
mov
add
jns
imulb
out
jns
arpl
fdivl
pop
jge
mov
mov
cmp
pop
fcom
insb
cmc
aam
add
push
test
push
mov
mov
dec
jle
jle
jle
cwtl
sbb
dec
fisttps
and
lahf
xor
adc
xor
sti
repz
lea
fmul
or
sub
lds
test
add
in
jnp
pop
mov
xchg
and
add
jge
pop
std
xchg
sub
popl
lcall
jo
sub
je
insb
fidivs
scas
add
stc
iret
fstl
xor
xchg
stc
or
mov
pop
cli
shll
lods
out
inc
scas
adc
sub
cmovo
ja
fnstsw
iret
shrb
mov
xor
pop
stos
lods
add
fs
fs
mov
enter
mov
pop
into
fsubrs
jbe
int
or
es
fcmovnbe
aaa
cmp
jo,pt
xor
js
dec
lahf
rclb
les
enter
outsl
pushf
std
icebp
imul
les
lds
iret
es
push
sbb
test
jmp
test
mov
push
lock
bound
mov
xorb
fcmovb
add
adc
das
les
ja
jns
cmp
in
popf
rorb
in
test
mov
sub
pop
xchg
enter
jne
xchg
cmp
jmp
cmc
sub
nop
pop
xor
pop
lods
sub
add
ficoms
dec
aaa
sub
push
mov
test
mov
jl
js
push
movd
incl
inc
js
cmp
adc
pop
mov
mov
bound
jmp
cmp
pop
push
cmp
or
into
fisttpl
cld
imull
push
or
xchg
xor
push
cmpb
inc
mov
ror
push
jne
cmp
add
outsb
jb
ss
jae
dec
xor
or
or
and
int3
daa
xchg
mov
cld
or
outsb
xor
or
xchg
sbb
lds
decb
jecxz
ss
pusha
pop
sub
rcll
sub
cmc
rol
inc
xchg
xlat
fisubrl
lods
pop
sub
loop
push
repnz
adc
push
iret
mov
and
adc
repz
cwtl
mov
or
mov
push
aam
xchg
or
inc
adc
in
das
cld
fcomip
add
notl
add
sbb
stos
je
mov
pop
mov
sbb
inc
jb
lcall
stos
inc
mov
push
mov
in
lods
xor
or
push
shr
in
addb
add
out
into
push
leave
inc
push
push
mov
nop
and
or
int3
fisubl
inc
fsubrs
mov
loopne
adcb
dec
pop
es
or
inc
cmp
shll
push
pop
jns
mov
and
or
std
stc
and
mov
xor
mov
std
ja
jno
jo
mov
pop
movsl
pop
lret
psubq
jnp
xchg
xorl
ret
mov
dec
je
sar
sbb
sarb
aam
xchg
add
xchg
jno
sbb
sbb
je
jge
mov
xor
insl
mov
adc
lods
lea
pop
stos
jge
dec
clc
sub
andb
out
iret
and
sbb
subl
test
and
stos
push
stos
add
xor
inc
scas
insb
add
add
aas
daa
in
jmp
mov
es
psubd
loope
and
pop
das
mov
jmp
adc
test
js
mov
daa
inc
add
mov
dec
cli
je
or
inc
test
and
cli
mov
adc
xchg
xchg
jb
and
shlb
push
popa
cmp
cmc
fmuls
arpl
jg
outsb
mov
popf
sub
cwtl
lods
jp
jbe
daa
push
cmpsl
mov
sti
lret
movzbl
dec
cmpsb
add
int
sub
adc
pop
in
shlb
sbb
sub
scas
sbb
jns
rdmsr
filds
ror
das
pushf
or
or
mov
test
and
add
sub
ret
push
fimull
push
mov
push
fsubl
das
lods
pushl
push
xor
pop
mov
push
imul
call
and
shrb
cmp
adc
mov
lea
jno
adcl
dec
pop
pop
xor
popf
pop
pop
jle
jp
or
jns
aaa
sbb
dec
leave
ljmp
cmp
std
push
inc
rolb
and
mov
lahf
inc
mov
jl
and
xchg
sbb
jmp
leave
pop
cmp
mov
xchg
shlb
push
sub
iret
sub
push
xchg
out
xorl
adc
xor
sarb
sti
sub
xor
push
jbe
jno
xchg
mov
jmp
lea
std
test
sbb
je
mov
push
cwtl
xlat
xchg
sbb
ss
jge
xchg
aaa
lret
cmp
adc
cli
adc
jge
addr16
bound
pop
stos
lcall
adc
xchg
push
jl
jl
rorb
bnd
in
lods
rcrb
test
outsl
or
cmpsl
cwtl
jo
mov
pop
stos
add
xchg
xchg
sbbb
inc
fdivr
add
mov
jno
int
scas
mov
xchg
add
adc
dec
rclb
repnz
push
mov
jecxz
fsubrl
shl
adc
xchg
adc
inc
and
and
test
test
xchg
add
adc
mov
in
ss
pop
mov
sub
cli
and
mov
enter
pop
subb
pop
or
int
add
daa
inc
mov
cwtl
pop
ret
es
je
imul
jb
negl
sbb
cmpsl
xor
ljmp
cltd
leave
add
add
incb
push
xchg
jnp
xorl
or
xchg
push
cli
push
pusha
jl
std
mov
repz
repz
out
lods
in
loope
push
xlat
lods
jecxz
adc
sub
xlat
pop
popa
adc
test
rcrb
stc
mov
sbbl
mov
add
out
andb
clc
sub
inc
xor
push
cwtl
pop
test
fiaddl
jb
mov
sarl
sbb
xor
dec
mov
and
push
push
lea
roll
add
xchg
mov
add
add
cmp
out
adc
pop
add
nop
mov
aas
inc
andb
stos
mov
mov
sbb
dec
lods
scas
add
jns
mov
push
add
in
les
inc
fmuls
int3
xor
ret
out
jmp
and
pop
aaa
decl
movsb
mov
repnz
xchg
push
ljmp
xchg
jmp
pop
or
in
xchg
mov
fdivs
jno
dec
xchg
loopne
cwtl
aad
popf
test
addr16
xor
or
pop
ja
icebp
jae
mov
jecxz
pushf
or
push
fidivl
out
fcoml
pop
sub
aaa
lock
sti
cmp
push
rclb
pop
mov
mov
or
push
xor
push
mov
mov
loope
push
sbb
and
sub
arpl
cmp
stos
sbb
inc
and
sub
ret
adcb
loope
adc
pop
xchg
pushf
xcrypt-cbc
cmpsl
xchg
dec
int
lret
cmp
jae
dec
daa
adc
cmp
inc
fdivs
cmp
cmpsl
mov
mov
xor
shlb
imul
push
shl
mov
jae
mov
arpl
lret
push
and
shl
shrl
andl
xor
jnp
cltd
dec
adcl
repnz
dec
push
jbe
leave
lds
sub
aad
cmp
adc
stc
test
push
imul
sub
subb
mov
out
int3
dec
jne
push
mov
movsl
imul
aaa
andl
xchg
rcr
mov
les
aas
leave
dec
sbb
shlb
repz
icebp
jge
cltd
stos
sbb
jl
mov
cmc
lods
mov
jecxz
jmp
mov
sub
hlt
sbb
pushf
or
and
lret
xchg
push
leave
inc
lret
jns
or
cmpsb
aad
pop
mov
sbb
pushf
insl
enter
cld
pop
shll
hlt
test
push
and
loopne
push
cmp
sti
push
in
jo
test
lods
sbb
mov
push
scas
sbb
les
lret
inc
inc
xchg
into
popf
not
inc
sahf
rorl
dec
xchg
cmpsl
sbb
and
fidivl
out
sbb
sbb
dec
and
mov
jmp
or
gs
nop
shrl
pop
pop
in
push
iret
shlb
mov
test
nop
pop
dec
cmpsl
inc
pushf
xor
in
shr
jns
cltd
es
dec
fdivl
outsl
lahf
into
mov
mov
out
xchg
inc
lea
fdivs
sbb
nop
sbb
xor
stos
pop
repz
pop
mov
pop
push
dec
out
add
dec
xor
xorl
fidivrl
sbb
sbb
push
pop
xor
fninit
inc
pop
or
leave
cmc
push
repz
imul
jbe
rol
push
and
dec
enter
inc
inc
push
fistps
xlat
push
enter
pavgw
sub
das
je
sbb
adc
and
or
addr16
pop
xchg
xchg
outsl
xchg
xchg
addr16
jbe
inc
fs
sub
jnp
lret
jne
mov
xlat
cli
enter
test
push
pop
inc
add
push
sbb
imul
ds
adc
jge
loop
mov
mov
push
aas
sarl
push
cmp
in
ja
xchg
sar
ja
sbb
imul
shrl
mov
adc
xchg
and
in
sub
xchg
sbb
xlat
xchg
push
mov
inc
int
mov
xor
sbbl
filds
lock
das
les
add
push
sbb
and
jnp
test
shl
scas
lcall
pop
addr16
rorb
push
lret
and
scas
push
popa
cmp
xchg
xchg
add
push
not
push
daa
xor
and
stos
push
mov
xor
sub
lods
mov
or
jbe
int3
cmpsb
add
mov
pop
jb
fsub
sarb
scas
sub
jne
movsb
add
ja
mov
xchg
stc
cmp
cmpl
testb
xor
pop
push
and
les
jns
add
test
adc
shrb
push
outsl
and
inc
out
sbb
insl
sub
icebp
fs
dec
int
push
bnd
aas
pusha
mov
sbb
xchg
mov
mov
testl
roll
jo
mov
cmp
push
test
push
inc
fldt
mov
movsl
pop
std
xchg
mov
cltd
lods
cmpsb
adc
add
push
lret
movsb
inc
movsl
push
mov
fldenv
dec
pop
movsb
and
cmp
xchg
xchg
jp
insb
and
hlt
pop
dec
sub
pop
or
push
int3
enter
in
insl
dec
shrb
popa
pop
clc
hlt
jmp
xchg
jae
nop
cmpsb
xchg
cmpb
pop
push
inc
pusha
loope
into
jg
test
ja
add
pushf
bound
js
inc
aaa
dec
js
adc
jl
xchg
xchg
stos
mov
stc
mov
inc
dec
sbbl
or
mov
testb
and
push
jns
pop
jl
push
and
test
aaa
cmp
pop
adc
enter
cli
adc
shlb
mov
jae
mov
add
in
or
pop
fwait
add
push
mov
adc
dec
xchg
and
sbb
jg
out
sub
mov
push
xchg
pop
fisubl
sub
xchg
lahf
aaa
pop
jae
paddusb
sub
mov
insb
pop
out
idiv
xorb
sub
sub
mov
sbb
imul
pop
stc
popf
aas
sbb
dec
pop
mov
xor
insl
inc
orb
adc
push
sub
xlat
mov
popa
pop
and
mov
dec
aas
xor
rolb
outsb
xchg
mov
mov
sbb
mov
sti
mov
lods
pop
xlat
das
aad
and
pop
add
adc
test
xchg
add
xchg
xchg
ljmp
enter
jnp
pushf
push
sbb
and
xlat
or
jp
movsl
sub
data16
outsb
ficomps
ds
and
push
stos
cmp
clc
je
mov
daa
iret
stc
push
xor
sbb
pop
les
movsb
nop
mov
mov
jnp
loop
sub
sarl
dec
xchg
cmp
mov
mov
out
sbb
dec
mov
push
or
sub
and
push
mov
mov
int
orl
mov
pop
cmp
push
pop
dec
mov
cmpsl
imul
sbb
add
xor
and
or
fsubrs
inc
xchg
add
jmp
lahf
jg
inc
jne
add
and
les
stos
mov
ret
and
inc
push
cmp
fidivl
mov
paddd
cmpsb
lret
je
pop
mov
or
jne
dec
arpl
rcrl
pop
jno
aam
and
outsb
pop
gs
test
pop
in
sub
pushf
mov
data16
std
lods
inc
mov
int3
xchg
bound
pop
dec
loop
pop
xor
mov
je
scas
das
imul
shrl
xor
mov
sub
in
push
inc
push
ficoml
test
out
push
insb
inc
fisttpll
inc
mov
cld
fimull
xchg
ss
xchg
insb
bound
fndisi(8087
dec
lea
xchg
or
dec
test
repz
dec
dec
sbb
lock
push
movsb
mov
dec
mov
jl
push
in
mov
push
or
xor
or
adc
leave
jno
cld
push
mov
in
sub
fadds
mov
pop
push
xor
sub
or
sub
cmpsb
push
inc
mov
test
xchg
mov
in
push
add
inc
icebp
jbe
into
cmp
fdivrs
pop
lods
push
sti
repz
test
inc
mov
jmp
cltd
cmp
mov
mov
jb
mov
xor
in
or
xchg
push
mov
sti
test
popf
in
pop
stos
push
sub
push
add
out
sbb
ror
aam
stos
push
lret
cmp
loopne
mov
push
mov
mov
iret
test
mov
sbb
pop
pushf
mov
insb
jecxz
fadd
mov
aas
ret
adc
push
lock
idiv
jo
mov
aas
pop
insb
mov
call
rorl
outsb
dec
idiv
pop
dec
xor
dec
movsb
in
pop
adc
scas
xchg
call
ss
sbb
out
mov
pushf
ret
sti
ffreep
test
mov
dec
sbb
movsb
mov
and
std
pop
in
std
pop
cmc
sbb
sub
movsb
lods
test
test
pusha
inc
jno
push
cltd
inc
idiv
stc
jno
and
fwait
mov
push
sbb
and
add
aam
inc
adc
rolb
mov
jge
mov
inc
mov
xor
or
adc
mov
inc
loop
sub
jle
or
jo
cltd
loope
sbb
dec
imul
xchg
mov
inc
cmp
and
jne
shlb
and
vrcpss
mov
add
andb
cmc
mov
mov
test
lock
inc
adc
pop
or
xchg
out
mov
aad
cmc
imul
fistl
icebp
sahf
and
pop
push
addr16
lds
jecxz
adc
xchg
and
mov
in
neg
test
sub
mov
lds
ror
sub
scas
fs
hlt
neg
cmp
and
jnp
or
loope
sbb
loop
xchg
mov
leave
sbb
lcall
pop
insb
sbbl
add
or
mov
mov
pusha
adc
popf
xchg
push
gs
sub
jno
bound
mov
in
xchg
in
movsb
push
xor
jle
bound
test
xchg
roll
stc
add
dec
cmp
out
icebp
adcb
sub
add
mov
push
lea
mov
das
cmp
xchg
lret
mov
dec
cmovge
in
aas
mov
and
icebp
imul
fisubl
cmp
mov
popf
sbb
and
sti
gs
jmp
push
fiadds
mov
xchg
xchg
or
adc
cmp
cmp
jg
inc
cmp
mov
aad
leave
add
push
or
cltd
sbb
leave
and
jae
adc
jae
fisttpll
in
push
dec
fdivs
push
hlt
mov
sahf
jbe
daa
ret
jl
scas
dec
and
popf
fdivrl
cmp
xor
jmp
das
jb
sti
rcll
shlb
push
lock
outsb
ss
pusha
jp
xchg
xchg
frstor
es
dec
addr16
pop
sahf
jl
jg
cmp
shlb
lock
sti
faddl
rcr
sbb
mov
xlat
fmul
rep
pop
sbb
daa
cmp
outsl
push
loop
cmc
ret
mov
push
push
jae
sub
and
sbb
pop
dec
cmp
test
aaa
out
or
es
inc
nop
add
jle
mov
or
adc
leave
out
mov
sbb
int3
mov
lods
loopne
pop
sub
leave
push
mov
mov
arpl
sub
in
xor
in
push
sbb
pop
cmpsl
mov
lods
or
xchg
mov
adc
or
push
pop
sbb
stos
inc
dec
std
test
sahf
xchg
xor
pop
aaa
sub
sahf
mov
pushf
sbb
push
dec
fistpll
in
cmp
mov
repnz
and
lea
leave
test
sbb
shr
xorb
push
adc
add
jp
mov
pushf
xor
out
push
sbb
int3
cmp
pusha
nop
dec
or
cltd
dec
mov
clc
sub
repnz
out
in
pop
xor
adc
push
jle
mov
mov
mov
xchg
js
enter
pop
push
dec
sbb
rcll
insl
das
imul
inc
pop
push
mov
cld
call
mov
or
cli
fstpl
out
mov
popf
jge
adc
mov
sub
lret
int
and
imul
data16
cltd
lods
jns
push
push
mov
jle
and
std
xor
jne
fwait
cld
mov
sub
inc
ret
dec
xor
cs
push
xchg
testl
inc
jno
cmpsl
out
outsb
pop
movsb
in
mov
sbb
add
aas
inc
test
dec
cmp
and
jmp
mov
gs
add
dec
xor
fcoms
sbb
in
jmp
jb
das
clc
add
sbb
jecxz
lcall
iret
jno
sti
pcmpeqb
std
inc
push
fs
jmp
jno
mov
push
lea
adc
push
jo
mov
add
mov
into
or
pushf
stc
addr16
in
xchg
dec
lods
cmp
inc
lahf
and
add
std
pop
mov
xchg
jp
push
je
cmp
and
mov
mov
daa
pop
addl
stos
push
movsb
loop
out
scas
cmp
pop
nop
enter
aas
movb
popa
cmp
cld
dec
push
cmc
outsb
fwait
dec
test
mov
shl
sbb
aam
test
cmp
pop
iret
jge
add
pop
adc
lret
cmpsb
xchg
ds
and
cld
inc
adc
scas
push
stos
mov
dec
int
dec
and
or
arpl
lds
push
rcll
loope
jg
inc
add
pop
push
mov
mov
pop
mov
sbbb
dec
in
es
arpl
in
scas
or
pop
push
lods
pop
mov
mov
push
xor
push
ret
into
mov
push
xchg
add
je
mov
repnz
subb
pop
out
pop
pop
xor
dec
pop
incl
push
or
aaa
not
push
lret
and
cmc
push
loope
rcll
insl
adc
movsb
add
mov
lods
mov
push
test
inc
mull
mov
push
loope
dec
fsts
vcvttss2si
cld
leave
add
repz
es
jmp
lods
sub
lea
mov
adc
lret
nop
and
out
popf
gs
mov
sbb
jne
jle
mov
fists
mov
add
mov
mov
inc
ds
fwait
pop
and
or
cmp
sub
jle
aam
jns
popa
push
imul
sahf
lret
jg
add
mov
nop
mov
push
push
das
mov
repnz
cmpsb
arpl
xchg
lahf
int
and
int
mov
rorb
clc
mov
cmc
je
gs
ljmp
jl
sub
inc
ljmp
cli
mov
push
shrl
in
cs
enter
lcall
xor
push
stos
add
outsl
in
mov
push
xor
jmp
pop
loop
das
shr
xchg
in
xlat
and
mov
imul
mov
fwait
inc
lahf
mov
push
shll
jecxz
xor
mov
loope
xor
inc
in
sbb
dec
mov
repnz
cmp
aam
sub
movsb
nop
mov
insb
pop
iret
mov
or
cmp
xchg
stc
mov
repz
ljmp
adc
pop
sub
and
ret
mov
lds
movsbl
jne
gs
out
adc
cmp
mov
cld
xor
add
mov
fsubs
nop
jge
les
inc
cmp
pop
dec
mov
test
xor
and
hlt
leave
mov
xchg
in
mov
mov
jb
shr
test
mov
xchg
push
mov
xchg
and
mov
inc
jp
sbb
pop
loopne
mov
repz
jbe
lahf
nop
mov
or
ss
js
mov
fs
sub
aam
fsub
stos
jnp
cmp
fbld
rclb
dec
nop
or
pop
mov
xchg
xor
insb
call
and
mov
jbe
cld
stc
icebp
sub
lds
cmpsb
mov
cmp
hlt
imul
pop
fsubrl
scas
xor
mov
imul
pop
lds
xor
rcl
mov
jbe
xchg
ljmp
push
mov
ljmp
mov
outsl
sbbl
shr
push
mov
rolb
pop
jle
xor
les
xor
mov
inc
add
aad
sbb
scas
mov
mov
cmp
into
or
inc
sbb
push
add
sub
lahf
out
int3
mov
imul
dec
imul
rcrb
lock
adc
imul
shrl
xor
sub
and
mov
mov
rcrl
adc
or
jae
outsl
mov
clc
fidivrl
fwait
mov
adc
dec
mov
push
fidivrl
out
xchg
in
pop
sbbl
popa
or
sarb
scas
je
es
xchg
insl
dec
mov
sarl
dec
inc
das
sbb
and
push
mov
jge
adc
insb
outsb
fwait
xchg
pop
popf
stos
jno
les
pop
jbe
push
adc
or
xchg
xor
jl
push
loop
and
dec
inc
imul
shlb
inc
lock
sbb
enter
xchg
pop
mov
add
adc
lcall
jnp
mov
mov
jl
call
pushf
or
mov
es
int3
pop
popf
sbb
jmp
rcr
jae
sub
lret
sub
movsb
and
lds
pop
mov
xchg
stos
lcall
out
pop
outsb
les
and
xlat
fnstsw
dec
pusha
in
add
pop
xchg
movsl
sahf
inc
aaa
mov
push
rcl
addb
pop
lret
jmp
push
xchg
jae
pop
and
stos
cmp
daa
push
popa
std
jns
xchg
ljmp
or
dec
insb
ss
cmpsl
jns
or
sbb
sub
stos
call
rclb
jo
pop
push
shrl
mov
sbb
push
je
mov
roll
cld
lret
filds
xchg
lcall
xlat
sahf
lret
or
push
push
loope
aam
int
xor
xor
sbbb
test
jns
cmp
xchg
dec
pusha
in
cmp
ljmp
lds
sub
xchg
mov
ret
mov
jae
cmpsb
out
mov
cmp
in
sub
mov
sub
negb
inc
mov
scas
inc
xor
mov
stc
push
rolb
push
and
sahf
cwtl
out
cltd
push
push
fstps
inc
fwait
call
cmp
sbb
and
packssdw
sub
pop
arpl
mulb
or
ja
fldcw
fmull
xorl
test
sbb
es
add
scas
aam
xor
inc
call
jo
mov
cmp
jo
addr16
cltd
cmpsl
pop
mov
popa
movsb
push
repz
jbe
es
xchg
sub
rcl
movsl
movsb
sub
add
lret
pop
pop
mov
xorl
std
outsb
mul
and
sbb
push
pop
adc
lods
sub
xor
xchg
dec
mov
ret
xor
call
mov
mov
js
ds
popa
jg
sbb
fists
mov
ficomps
add
int3
or
mov
push
or
cli
jmp
mov
cs
shl
mov
nop
test
mov
cmp
add
push
sbb
ffreep
ficoms
ja
mov
jnp
aad
xchg
inc
sahf
es
mov
sub
and
daa
out
aaa
mov
inc
jnp
mov
push
xchg
push
add
lods
rolb
cmp
and
inc
addr16
mov
cltd
jmp
push
pop
outsl
pop
stos
jnp
pushf
inc
fnstenv
mov
insb
std
cltd
and
inc
jne
pushf
ss
mov
in
adc
in
dec
dec
addr16
cmp
out
cwtl
ja
pop
outsl
sub
and
leave
and
rorb
sub
xor
mov
xor
sub
dec
cmp
add
dec
mov
push
pop
stos
gs
xor
outsl
add
and
call
cmp
inc
dec
add
push
xchg
cmp
hlt
data16
xchg
push
cmp
xor
aas
and
mov
or
enter
ss
sahf
jns
and
adc
mov
or
cmc
sub
adc
add
ret
jno
jae,pn
sti
cmc
loope
les
outsl
xchg
out
mov
xchg
mov
faddp
cs
cmp
cmp
adc
fucomp
mov
add
pop
mov
and
lods
cwtl
iret
jecxz
in
stos
movb
xchg
inc
adc
push
cmp
xchg
fidivs
pop
push
adc
lods
mov
movsb
mov
gs
vorps
jns
aam
jecxz
push
in
jnp
out
lcall
cmc
jecxz
shrl
das
arpl
icebp
or
inc
popa
push
scas
jecxz
dec
xchg
cmp
xchg
sub
sahf
jle
cmp
add
mov
mov
es
or
mov
ror
sbb
xchg
clc
addr16
sbb
cmpsb
enter
stos
loopne
mov
outsb
ds
push
outsb
inc
cltd
xchg
dec
movsb
pop
imul
mov
inc
lods
xchg
sub
mov
push
pusha
xchg
in
cmp
mull
shll
out
je
lahf
notl
fcomps
out
out
jae
dec
mov
add
ss
mov
mov
mov
lods
pop
sub
or
outsl
push
adc
mov
out
cltd
clc
rclb
into
jecxz
mov
mov
fwait
lret
xchg
add
ret
incb
sbb
mov
sbb
sbbb
fldl
dec
dec
pop
push
int
loope
mov
add
mov
loope
inc
into
lahf
sbb
lods
pop
cmp
xlat
rorl
adc
sbb
sbb
popf
jne
xchg
clc
cmp
int
mov
pushf
test
xlat
or
popf
pop
sub
test
dec
push
rol
xor
ret
jbe
or
sbb
xchg
les
gs
xchg
fcomps
mov
testb
dec
pusha
sub
push
ret
inc
insl
icebp
and
or
bound
pop
mov
and
in
adc
incl
frstor
pop
mov
sbb
xor
mov
push
push
lds
cltd
es
adc
cmc
loopne
inc
cmp
lcall
mov
adc
mov
dec
aas
push
arpl
test
fstl
js
xlat
into
and
cwtl
xchg
cmp
call
pop
ljmp
sub
mov
mov
dec
pop
std
fwait
mov
roll
jo
test
pushf
in
jae
pop
inc
xor
mov
xor
outsl
les
icebp
fisubrl
mov
popf
in
jmp
sub
sbb
ljmp
mov
inc
mov
and
mov
xor
sahf
popa
and
cld
out
ds
mov
push
shrl
mov
inc
lods
aad
out
xchg
daa
cmpb
or
inc
out
cli
adc
push
stc
mov
adc
xor
xor
pop
bswap
inc
xchg
imul
inc
ja
mov
cwtl
jg
dec
sbb
jns
add
dec
outsl
dec
mov
add
sbb
decl
in
mov
addr16
mov
and
loopne
add
out
ret
lock
arpl
push
dec
xlat
mov
enter
es
xor
jbe
xchg
in
inc
mov
push
dec
aam
xor
inc
inc
pop
push
lds
inc
cmc
fnstcw
sahf
inc
enter
add
sbb
mov
js
mov
hlt
adc
sbb
and
inc
inc
pop
inc
xchg
dec
mov
fmull
xor
leave
mov
sub
push
xor
mov
loop
push
sbb
test
or
push
push
xor
xor
adc
mov
dec
flds
das
sbb
icebp
sbb
ror
pop
jbe
popa
mov
pop
adc
adc
push
xchg
push
dec
dec
cmp
cmpb
aam
call
mov
fs
and
arpl
outsl
sub
pop
mov
stos
cmp
mov
adc
fisttpll
xchg
or
mov
adc
add
mov
jg
jl
dec
sarb
adc
int3
out
add
xor
push
test
and
rcll
inc
es
cmc
dec
std
out
mov
pop
stos
or
mul
enter
push
xchg
mov
pop
popf
shlb
or
add
shl
jae
mov
xor
sub
loopne
or
fs
rorb
loopne
inc
mov
sbb
and
and
fdivp
stc
or
or
js
mov
shll
insb
xor
fcmovbe
adc
js
pop
pop
bound
mov
pusha
sbb
pushf
insl
ret
mov
pop
pop
loopne
cmp
pop
into
cwtl
xlat
popa
loope
mov
mov
cmp
shrl
pushf
pop
test
test
mov
mov
mov
pop
push
jo
add
andl
int3
pushf
mov
inc
les
mov
push
and
rcll
mov
aam
xchg
imul
jne
lret
and
mov
xor
sbb
cltd
dec
dec
xchg
cld
add
jmp
mov
cmp
in
int
daa
pop
aas
push
cs
bound
or
daa
mov
test
arpl
and
push
ret
xchg
loope
ret
loop
jbe
jmp
lods
push
add
mov
ds
inc
dec
mov
cmc
imul
cmp
pop
cli
data16
push
mov
pop
popa
loopne
scas
add
jns
shll
lock
stc
mov
dec
pop
lock
xor
cmp
pop
or
or
inc
mov
and
add
mov
mov
mov
mov
cld
repnz
mov
mov
mov
add
mov
jg
aad
cmp
test
fwait
test
je
xchg
sbb
ja
dec
push
into
mov
daa
adcb
push
push
jae
pop
pop
das
mov
xchg
cs
sahf
xor
fldcw
enter
imul
xchg
pop
out
xchg
bound
jecxz
mov
enter
and
sbb
jmp
jne
jnp
fsubp
pop
cmp
enter
int3
mov
lock
jno
mov
shlb
xchg
lret
xor
pop
lcall
nop
jg
jg
popf
or
lret
xchg
test
fistl
jge
mov
push
jle
sar
std
xchg
decb
mov
int3
push
fwait
pop
sub
popa
pop
add
ja
fxch
push
jbe
jl
inc
fucom
cmp
push
pop
sbb
in
mov
add
xchg
stc
enter
xchg
fcmovnbe
lea
add
push
adc
mov
lods
add
sub
ja
movsl
inc
mov
xor
pop
in
mov
sub
xchg
fisttpl
xchg
mov
adc
push
cld
call
pusha
imul
aas
push
jne
push
mov
mov
inc
xchg
inc
mov
mov
jp
jmp
xor
pop
jle
and
cwtl
test
sub
nop
pop
sub
push
dec
fdivrl
pop
insl
dec
out
cmp
enter
lods
insl
mov
mov
test
cmp
or
sbbl
fucomp
or
dec
pop
lret
fisttps
mov
xlat
scas
sbb
test
stos
xchg
push
lds
sub
lahf
loop
shlb
sbb
mov
mov
or
insb
cmp
add
rorb
dec
cmc
push
cmp
add
xor
call
push
test
pusha
xchg
pop
cmp
jbe
lea
jo
add
xchg
cwtl
add
push
mov
mov
and
or
jmp
sarb
iret
xlat
dec
and
xor
repnz
lods
cs
cwtl
sti
jo
dec
enter
fisttpll
and
pop
inc
shlb
and
lcall
push
icebp
and
pop
es
scas
popf
scas
inc
jne
and
xchg
outsb
and
inc
cli
fsts
call
mov
les
cmc
sbbb
test
xchg
and
add
repnz
leave
pop
dec
das
inc
fnstsw
aad
ss
iret
dec
mov
or
xchg
jge
imul
shl
pop
setne
cmpsl
repz
xchg
daa
fadds
sub
pop
aam
pop
cli
rcr
jle
sbb
sub
mov
sbb
jmp
mov
push
dec
adc
add
cli
inc
mov
lret
cmp
rorb
inc
fwait
adc
dec
push
aas
xchg
stc
loopw
xor
sub
xchg
cltd
dec
pop
test
and
dec
js
addr16
adc
pop
ljmp
jg
sub
test
push
push
jecxz
push
jne
mov
mov
xor
pop
test
loope
or
xchg
in
mov
mov
roll
lea
loop
mov
dec
lret
and
lret
xor
jmp
cmp
fwait
inc
mov
push
cmp
stos
inc
cli
int
jne
out
xor
lcall
xchg
shrl
sub
inc
pusha
dec
mov
fnstsw
test
pop
mov
mov
insl
stos
push
inc
mov
push
cmp
imul
add
dec
fxtract
jae
jno
sbb
mov
shlb
jbe
imul
loope
loopne
ljmp
jmp
xchg
adc
xchg
test
jbe
or
adc
mov
subl
or
mov
das
mov
jg
inc
jne
out
movsb
cmpsl
xlat
jne
jle
les
shrb
icebp
and
add
mov
ret
jnp
scas
insb
sub
pushf
sbb
aam
lret
jae
or
cmp
cmp
xor
ds
push
mov
enter
bound
sub
rcl
jbe
cmp
lods
dec
enter
mov
jbe
xor
lds
inc
fs
ret
push
in
cmp
lea
push
movsb
pop
jbe
aas
andl
mov
or
sub
iret
sbb
adc
and
sub
sbb
imul
xchg
add
pop
and
imul
cld
dec
or
jo
sub
cmp
jl
dec
dec
mov
jl
fdiv
fdivl
mov
cltd
jnp
push
mov
popf
push
cmp
xor
rcl
xor
inc
stos
pop
mov
jp
sahf
jne
ret
xor
and
pop
fildl
mov
cmc
inc
push
ljmp
and
test
mov
loop
cmp
cmp
js
or
fsub
bound
lods
mov
inc
push
mov
sbb
sbb
outsb
or
negb
adc
lods
enter
pop
jb
in
xchg
or
scas
xchg
into
aad
push
mov
aas
jno
fisubrl
or
and
repz
jae
xlat
mov
shll
push
dec
popa
sbbb
into
fcoms
mov
dec
faddl
add
dec
mov
sbb
adc
adc
cmp
or
addr16
jno
cmp
popa
aam
loop
add
jg
hlt
xor
and
mov
inc
arpl
decb
pushf
imul
aas
imul
jle
sub
mov
pop
sub
adc
or
je
repnz
push
jno
push
mov
jno
adc
pusha
sub
popa
stc
mov
enter
fwait
stos
cmpsb
aad
cmp
sahf
fcmovne
jle
dec
cmp
jg
out
cmp
dec
mov
push
insl
cld
xor
lcall
cmp
dec
ds
adc
out
push
clc
ja
int3
cs
cmp
movsl
jns
ds
popf
in
add
sub
icebp
jecxz
dec
popf
hlt
dec
and
push
sahf
js
aad
test
lea
adc
sbb
dec
lds
jne
dec
add
dec
pop
imul
xchg
fs
cwtl
divl
out
pushf
fistps
inc
fiaddl
dec
or
dec
nop
cmp
mov
mov
ja
xchg
movsb
movsb
sub
aas
jge
dec
gs
cmp
shr
fisubl
jns
iret
jb
mov
push
stos
sub
in
lret
insl
push
fwait
push
addr16
int3
insb
sub
push
push
int
xchg
jnp
dec
mov
loop
inc
jae
pusha
enter
sbb
rclb
push
pop
cmpsl
mov
jne
jl
jmp
jno
out
sub
xor
ss
dec
test
stos
out
into
clc
sub
cwtl
jg
jecxz
dec
decl
fs
cmp
fsub
mov
repz
xor
cld
mov
lret
mov
pop
push
xor
negl
mov
xor
jle
dec
enter
call
je
adc
mov
push
push
jnp
loope
mov
into
mov
sbb
xor
and
lret
xchg
inc
mov
pop
les
mov
idiv
shll
dec
jle
pop
jo
test
dec
mov
lds
cs
fcom
jge
inc
push
adc
push
sub
fbstp
and
mov
pop
cwtl
cli
push
icebp
mov
xchg
daa
fisubs
or
cmp
push
into
add
xchg
pop
mov
xlat
dec
filds
pop
sub
push
or
xor
xor
js
sbb
xor
xor
add
mov
das
pop
fndisi(8087
push
insl
lahf
and
fistps
cli
movsb
push
mov
out
push
out
mov
out
ret
mov
jae
and
add
jecxz
cmp
rcrb
adc
adc
addb
sbb
orb
lods
add
lods
push
jl
sub
jo
mov
in
mov
or
sub
icebp
jo
or
fistpll
cmp
pop
xchg
mov
cmp
das
xchg
push
inc
sbb
insl
int
mov
lea
mov
cmp
xchg
cmp
mov
sub
inc
fisttpll
mov
jl
test
popf
add
iret
pop
xchg
sub
into
mov
jns
rclb
add
inc
fidivrs
clc
adc
push
jge
fdivl
es
in
mov
mov
repnz
xchg
push
ret
cld
pop
cld
cld
fmull
jl
les
mov
mov
jmp
dec
daa
js
add
xchg
cmp
dec
pop
insb
fidivrl
ljmp
lret
fidivrs
shrb
and
push
aad
fmul
push
jne
loope
lahf
imul
pop
sbb
jl
mov
mov
fwait
stos
cmp
lock
pop
mov
pop
aas
mov
mov
cmp
jnp
out
jb
lret
pop
sbbl
inc
sbb
ja
movsb
movsb
push
aad
or
in
lods
addb
pop
or
nop
shlb
inc
mov
xchg
icebp
scas
mov
dec
pop
shll
in
mov
dec
push
cmp
mov
ret
cmp
test
sub
out
dec
dec
sbbl
stc
jae
mov
dec
jl
call
push
scas
mov
loop
loop
fsubrp
push
sbb
or
or
add
mov
inc
test
inc
mov
js
out
cwtl
stc
add
ja
test
ja
mov
add
ljmp
pop
jnp
fidivrl
jmp
mov
jg
aad
cltd
push
ret
shrl
pop
shr
xchg
test
mov
fimull
add
xor
jmp
hlt
push
sbbl
push
scas
dec
jne
bswap
push
sahf
ja
mov
out
add
xor
sbb
mov
pop
sahf
mov
push
arpl
in
push
out
push
or
inc
mov
dec
lods
out
fmull
sahf
orb
xchg
inc
dec
scas
into
and
or
dec
imul
mov
ret
adc
mov
add
xor
jmp
test
mov
mov
pop
cmpsl
and
xor
aam
jl
inc
nop
pop
jmp
push
dec
ret
imul
outsb
out
sub
fsubrp
fdivl
mov
lds
inc
mov
xchg
or
lods
pop
daa
dec
addr16
sbbl
insl
popf
add
cwtl
sub
js
add
push
arpl
jnp
mov
inc
add
jae
and
and
mov
mov
jnp
inc
add
shrl
push
ja
sub
inc
add
cmpsl
cmp
fimull
mov
mov
in
out
idiv
adc
push
adc
dec
into
popf
shlb
push
gs
jl
lods
arpl
mov
addr16
out
dec
lods
sub
xchg
out
mov
add
adc
pop
xorl
lds
mov
mov
divl
inc
decl
mov
jbe
add
jno
cli
sub
outsb
imul
lods
push
push
add
cmpb
sub
push
testb
sbb
clc
and
aas
adc
inc
inc
data16
adc
testl
or
pop
inc
pop
cmpl
out
stos
movsl
xchg
mov
hlt
lcall
popf
daa
push
push
xor
stos
addb
jne
leave
mov
lock
scas
inc
mov
inc
clc
cwtl
cld
pop
jge
cmc
outsl
and
xchg
mov
pop
dec
adc
cmp
inc
sub
lret
rorl
in
and
xchg
jge
sahf
xchg
aas
ljmp
out
xor
mov
dec
add
mov
rcrb
daa
push
pop
jo
mov
test
sub
inc
xchg
mov
mov
fwait
cmc
inc
divb
mov
aad
mov
xchg
dec
mov
shl
or
jbe
aas
iret
outsl
js
mov
mov
mov
mov
daa
add
and
stos
lidtl
inc
inc
sbb
xlat
nop
push
movsl
mov
adc
call
and
ret
sub
mov
hlt
idivl
jno
push
repz
jne
xor
push
jg
in
push
mov
mov
out
mov
mov
jmp
sub
lods
dec
fadd
in
iret
sub
or
pop
pop
je
fldcw
fldl
and
mov
jle
stc
test
out
fisubl
jae
cld
mov
es
xchg
and
notb
jne
iret
mov
push
aam
mov
std
int
out
or
mov
xlat
or
mov
and
ss
repnz
inc
iret
jns
int3
mov
xchg
xor
leave
or
mov
icebp
jb
sub
add
lret
out
shr
lret
mov
insb
xchg
jl
xor
mov
xchg
sbbl
push
xchg
pop
push
adc
add
fsub
aaa
imul
mov
out
pop
cli
jp
pop
xor
adc
loope
mov
mov
add
push
or
outsl
jle
fsubrl
outsb
fwait
call
mov
add
out
divb
call
adc
sbb
stc
add
lea
cmp
add
mov
mov
pop
in
jo
adcl
ds
push
push
jno
inc
js
jl
sahf
in
and
scas
lcall
and
push
mov
add
mov
sbb
xchg
dec
cld
imul
shl
push
xchg
xor
or
dec
mov
mov
fwait
test
mov
pop
mov
mov
lds
push
xorps
lock
imulb
add
sub
mov
iret
and
mov
jmp
mov
iret
popf
mov
and
pop
out
nop
stc
das
adc
dec
das
fnsave
setae
inc
fistpll
and
adc
fcoml
je
mov
pusha
mov
stos
stos
add
cwtl
in
je
mov
mov
test
cwtl
sbb
mov
push
mov
cld
fwait
pop
daa
adc
pop
stc
orl
push
xor
insl
or
aam
shrb
insl
gs
mov
jmp
dec
mov
int3
enter
adc
jb
ds
inc
xor
shr
jnp
sbb
das
es
std
cmp
jnp
ja
andb
sub
data16
add
dec
jmp
sbb
ds
and
imul
ret
mov
aad
jne
dec
frstor
ja
call
jge
pusha
push
lods
ljmp
repz
adc
cmp
xchg
mov
loope
mov
int
ficomps
xchg
pop
mov
into
fdivrl
cld
and
aas
jmp
jmp
ljmp
gs
and
mov
test
mov
sub
sbb
lret
outsl
dec
outsb
xor
jmp
rolb
sub
inc
mov
hlt
insl
fistps
fsubs
movsb
lock
and
push
xchg
leave
mov
lcall
push
adc
dec
stos
sbb
mov
fiadds
pop
cmp
imulb
pusha
insb
add
js
std
gs
insb
fisttpl
jbe
inc
xchg
inc
add
pusha
and
mov
enter
nop
jae
loopne
fiaddl
jb
scas
mov
fcmovu
sbb
cmc
pushf
pop
cwtl
fimuls
cmc
inc
cmpsl
sbb
sub
inc
fistl
test
jo
andl
stos
insb
xchg
pusha
mov
push
xor
and
clc
mov
inc
xor
cmp
adc
daa
push
imull
mov
mov
imul
cmp
push
ja
aam
fwait
ss
dec
jecxz
rcrb
mov
pop
sbb
push
adc
mov
addr16
hlt
roll
sub
adc
mov
xchg
adc
sub
xchg
aad
jb
mov
jecxz
lock
mov
movsl
imul
sub
in
leave
dec
movb
sub
jb
mov
inc
xor
ss
add
push
addr16
pop
ret
mov
imul
pusha
cwtl
xchg
ljmp
imul
adc
lock
push
fisubl
fisubrs
dec
and
inc
cmp
mov
inc
xchg
cwtl
rcrl
fisubs
mov
mov
cmp
fsubrl
cmpsb
lock
jge
enter
mov
add
push
pop
test
sub
mov
cmpsl
pushf
test
das
push
bound
dec
inc
dec
jp
aad
mov
js
push
sbb
daa
les
mov
pop
or
dec
cmpsl
test
cltd
movzbl
lahf
xchg
and
xchg
jmp
sbb
jp
lods
into
punpckhbw
mov
lds
mov
mov
dec
xchg
sbb
sbb
push
xchg
jno
mov
fstl
push
push
stos
test
outsb
mov
and
das
fwait
scas
leave
sbb
ljmp
pop
pop
inc
movsl
mov
repz
jns
mov
jns
push
xchg
sub
or
sbb
xlat
arpl
int
rorb
test
enter
nop
and
xlat
sub
push
push
cmp
loopne
call
lret
dec
fadds
or
lock
dec
ret
imul
cltd
mov
ljmp
fcomps
jno
ja
fisttpll
pushf
fnstsw
dec
outsb
mov
ds
pop
xor
xchg
push
pop
mov
popf
js
jo
popf
lcall
cs
dec
cmpsl
sbb
sub
hlt
popf
jno
push
push
lods
loop
and
ja
sub
lret
cmc
jmp
scas
andb
lret
push
fbld
xor
ljmp
jno
dec
push
andl
stc
dec
push
adc
adc
jne
out
push
sbbb
push
cmp
inc
shl
pop
adc
fdecstp
adcb
mov
rolb
out
xchg
mov
cwtl
inc
dec
stos
xor
add
jle
inc
xchg
dec
and
xchg
or
inc
notl
pusha
add
ja
pop
sub
clc
clc
fildll
cs
or
sbb
and
xor
test
mov
fdivr
xor
dec
addr16
mov
ret
aam
jno
ds
pop
push
lods
mov
adc
cs
xchg
int3
cmpsl
call
cmp
jmp
cmp
lods
or
push
test
or
sbb
popf
pop
push
es
cltd
mov
cmpsl
push
dec
lods
mov
mov
movsb
stos
int
imulb
fstpl
dec
roll
ljmp
push
push
in
ret
jg
into
and
mov
ss
jg
sub
jge
cmp
arpl
cltd
sub
jg
fiaddl
stc
push
fsts
mov
and
mov
add
jbe
adcb
xor
adcb
rolb
icebp
sbb
je
nop
mov
jp
cltd
sub
and
into
mov
stc
insl
mov
rclb
imul
dec
stos
jmp
and
mov
sub
adc
add
sub
sbb
das
xor
out
xchg
fcoml
inc
shl
fs
insl
mov
aas
sbb
sbb
scas
call
out
push
in
and
cld
in
pop
mov
dec
xlat
clc
xor
sub
and
aad
psrlq
adc
ror
jo
fisttpll
orb
lds
sub
dec
inc
in
add
xchg
loopne
ret
lds
int
outsl
push
adc
out
cmc
pop
dec
pop
adc
jmp
outsb
mov
jecxz
dec
xor
aad
mov
add
push
test
dec
repz
mov
mov
or
arpl
ret
into
movd
loopne
loopne
stc
xchg
fistpll
std
mov
xchg
cmpsb
lods
dec
mov
daa
pop
lcall
iret
lret
pushf
int3
pop
cli
cmp
dec
xor
test
lods
cmp
push
pop
add
jmp
xchg
nop
inc
ss
std
mov
int
pop
leave
xchg
leave
std
cltd
push
and
arpl
repz
jg
pop
in
iret
lea
pop
push
ds
jmp
rorb
rorl
inc
negl
lcall
dec
fnstenv
add
cltd
jmp
cmpsl
dec
dec
push
jecxz
pop
enter
enter
loope
dec
scas
inc
aaa
into
in
mov
xchg
enter
pop
aam
pop
and
or
fsubl
js
sub
iret
in
dec
movsb
ljmp
add
es
test
stos
mov
push
mov
psubd
sub
in
scas
sbb
outsl
jg
in
pop
ficompl
pop
or
sub
dec
icebp
cmpsb
je
pop
imul
inc
shll
push
jno
mov
outsb
adc
test
insl
add
roll
push
les
cmp
ja
xchg
add
subl
icebp
xchg
sahf
pop
ret
pop
insb
data16
cmp
lahf
jecxz
cmp
cmc
test
add
mov
mov
cmp
cli
repnz
cs
fdivrp
out
es
fmulp
dec
jbe
sahf
sbbl
push
adc
xchg
notl
insl
adc
mov
and
bound
popf
push
push
add
call
out
add
xchg
mov
jb
sub
cld
dec
scas
out
jne
mov
push
cs
ss
mov
ret
daa
dec
cmc
adc
clc
adc
or
jg,pn
and
push
xchg
out
xchg
les
aad
jle
inc
dec
pushfw
repz
sub
push
sub
adc
jg
out
mov
xor
xor
push
adc
stc
add
push
jno
add
call
test
fmuls
test
mov
sahf
inc
sub
test
shrl
and
add
push
loopne
jle
fwait
loope
sub
xchg
add
imul
jb
push
inc
fstp
add
jge
dec
and
sub
inc
sub
mov
cltd
enter
leave
pop
xor
xor
sub
ss
sub
cmp
inc
and
pop
xchg
ljmp
test
ficoms
lahf
dec
in
in
or
mov
cli
xchg
and
dec
add
sub
push
stc
add
push
cmp
add
sbb
dec
cmovns
in
sbb
gs
add
cmp
imull
out
push
xor
xchg
fidivl
ficomps
imul
pop
push
stc
popf
fs
out
fstl
cmp
dec
add
or
mov
movsb
cmp
lods
ja
pop
pusha
cmpsb
adc
add
ret
pop
inc
lods
shrl
xor
fists
addr16
loop
lcall
mov
cltd
loop
dec
mov
add
cwtl
xor
incl
jmp
addr16
aaa
dec
adc
repz
adc
push
pop
fs
inc
jae
lock
shrl
imul
sbb
inc
xor
mov
xor
mov
call
test
and
test
icebp
add
icebp
imul
jmp
sbb
js
push
adc
add
adc
mov
test
xor
loopne
sarb
inc
mov
inc
and
fistpll
mov
cs
loope
fidivl
sub
jne
push
jp
gs
xchg
xor
add
push
dec
mov
stos
mov
sarl
or
fmull
fisttpll
mov
pop
in
testb
repz
imul
pop
adc
nop
and
fdivrs
push
dec
xor
jae
mov
xchg
test
mov
add
nop
push
adc
push
xchg
test
loopne
cmpsl
jb
imul
and
push
sbb
imul
and
cmp
xchg
xor
mov
mov
push
jecxz
or
jecxz
outsl
pop
or
pop
in
addr16
mov
mov
add
les
jnp
std
mov
out
push
xchg
std
mov
push
pop
cmpsb
int3
cmp
cmp
mov
cmp
cmp
xlat
mov
sub
push
daa
decb
mov
and
jo
in
js,pn
int
jp
pop
push
mov
mov
clc
nop
enter
adc
pop
push
call
loop
sub
outsl
sbb
loopne
sbb
in
mov
xchg
mov
es
xlat
ret
sbb
xor
xor
lcall
cld
dec
cs
repz
push
push
jae
jge
inc
push
jmp
lret
loopne
fisubs
jmp
pushf
inc
pop
lods
sub
xor
xchg
icebp
push
sub
mov
or
inc
mov
dec
pop
inc
mov
in
loope
es
push
mov
mov
outsb
xchg
jo
jb
roll
adc
pop
and
in
das
and
iret
xchg
push
je
aam
mov
mov
int
mov
adc
dec
aam
push
test
mov
jmp
int3
or
int3
idivl
mov
mov
loopne
or
jb,pn
test
mov
and
jno
add
cli
push
mov
jle
subl
std
bound
mov
mov
sbb
movb
stc
stos
adc
mov
adc
push
ss
sub
fwait
repz
leave
cmp
popf
mov
push
sub
out
popa
das
insb
shl
sub
out
cmc
pop
shlb
adc
mov
mov
and
xchg
int
jo
outsb
adc
orb
scas
fcomps
mov
aad
pop
xchg
inc
inc
jg
je
xor
ret
std
inc
or
mov
ss
inc
js
int
inc
or
insb
inc
or
jge
and
dec
and
test
ds
push
dec
popa
in
popf
lea
ret
sub
push
out
scas
push
mov
xchg
sub
push
lret
psrlw
repz
ljmp
aaa
mov
dec
daa
test
cmp
not
cli
adc
fsubs
jp
pop
xchg
jns
mov
stos
leave
pop
push
sbb
and
imul
icebp
cmpsb
cld
inc
into
push
ss
dec
push
lods
xchg
out
cmp
add
outsl
xchg
pop
jne
xlat
lock
vdivpd
cli
sub
fstl
mov
mov
insb
pop
mov
subl
jo
in
xor
out
xor
cmpb
aaa
xor
loopne
pop
mov
negl
mov
outsl
push
push
out
shrb
mov
jle
aas
sub
mov
pushf
inc
mov
adc
mov
inc
gs
cmp
ljmp
es
jle
inc
stc
xchg
add
mov
pop
push
pop
mov
adc
sub
and
sbb
jb
insl
xor
pmovmskb
dec
add
jg
lahf
inc
or
fs
insb
stos
pop
push
dec
lahf
push
or
and
xchg
out
cmpsb
jnp
movsb
add
xchg
or
or
mov
call
mov
push
addr16
mov
jb
pop
fwait
mov
adc
xor
xor
iret
sub
inc
pop
test
xor
cli
hlt
call
bound
push
dec
cmp
ss
pusha
arpl
in
divb
stc
pop
or
adc
aam
sub
mov
popa
sub
xchg
sahf
inc
stos
or
hlt
je
jo
cmp
adc
jo
out
arpl
mov
int
aaa
test
cmc
int3
mov
lods
ljmp
retw
cld
or
add
adc
shrb
sub
test
aas
in
dec
imul
xchg
fstpt
out
data16
cmp
stos
mov
cs
inc
mov
scas
daa
repz
es
out
jne
roll
push
xor
ja
mov
stos
dec
cmp
mov
adc
mov
jecxz
pop
mov
pop
mov
mov
lahf
loope
cmp
insb
and
out
push
xchg
mov
push
clc
push
add
hlt
into
repnz
jne
xchg
xchg
notb
xchg
jecxz
xchg
xor
scas
or
aas
mov
inc
stc
test
test
decb
loope
jl
repnz
into
xchg
int
mov
stos
xchg
fwait
sub
ljmp
inc
lret
imul
lret
xchg
sbb
dec
or
test
aas
xor
mov
cpuid
or
roll
jo
scas
scas
outsl
jb
setno
add
dec
mov
jno
mov
jecxz
popf
adc
out
mov
xor
jmp
sbb
pop
out
adc
dec
adc
adc
dec
add
fiadds
arpl
ficoml
or
loopne
mov
imul
lret
or
mov
mov
pop
rorl
and
dec
dec
pop
popf
fimull
xchg
pop
jnp
or
adc
in
jle
xlat
jl
xor
sub
push
cmpsb
add
push
jae
test
dec
xchg
push
jmp
xchg
jnp
addr16
loop
movsl
test
testl
lea
jo
push
adc
aam
nop
insl
or
popa
shl
ja
je
lods
sub
lock
cmp
inc
inc
neg
fadds
sbbb
push
jo
xor
cmpsb
cbtw
in
es
inc
adc
mov
or
je
mov
push
sub
fiaddl
repz
or
andb
or
mov
addl
dec
arpl
xchg
mov
cmp
jecxz
rolb
and
filds
mull
cmp
dec
rorb
aad
icebp
rorl
test
hlt
add
adc
lret
daa
push
lds
adcb
lcall
iret
xchg
and
in
inc
pop
push
mov
aaa
shrl
sarb
dec
fcomp
addr16
lock
jne
not
shll
movsl
jecxz
aaa
into
xchg
std
jecxz
ljmp
imul
xchg
test
outsb
lahf
or
es
inc
add
arpl
xor
je
adc
js
out
shr
push
cltd
add
repz
repz
dec
jo
ljmp
and
pause
test
adc
and
lcall
fsub
mov
and
insb
xor
pop
les
dec
xchg
push
inc
add
push
es
mov
or
insl
xchg
inc
add
xchg
out
outsb
mov
sbbb
das
xor
xchg
fdivrs
mov
and
jge
xchg
adc
cltd
and
cmc
xor
mov
jecxz
and
cmp
sbb
pop
cmc
cmp
les
sar
inc
jno
mov
cpuid
push
push
rcrb
lods
inc
dec
pop
pop
mov
idiv
xor
xchg
push
mov
cmc
stc
mov
test
loopne
cld
jae
and
in
add
mov
jnp
sub
cmp
or
push
mov
xor
mov
insb
out
loope
cltd
mov
out
test
fmull
inc
or
mov
fistl
xor
dec
push
sahf
inc
sbb
fidivs
hlt
jno
aaa
lahf
aam
cltd
int3
dec
loop
pop
aas
jle
or
cmp
nop
mov
mov
add
pop
nop
and
out
insb
shr
mov
cmp
push
sbb
fbld
stos
adc
inc
pop
push
and
add
xchg
or
fmul
pop
popf
movsb
mov
ds
dec
add
mov
cmpsb
mov
imul
and
jbe
aad
into
lods
pop
adc
jnp
or
rol
adc
inc
xor
inc
push
and
lahf
push
cmp
and
in
inc
push
adcl
mov
cmp
js
sub
stos
mov
jne
mov
and
idivb
pop
mov
and
outsl
cmpl
xchg
popa
xchg
and
cmpl
push
outsb
mov
or
ret
mov
mov
cmpb
jge
inc
js
jne
clc
std
dec
or
dec
ljmp
push
outsl
jns
jo
sub
sarb
sbb
das
jb
and
andb
adc
cmp
js
push
mov
mov
ja
or
inc
aas
dec
push
test
and
adc
stc
mov
mov
ret
jnp
sub
lcall
or
insl
mov
out
mov
inc
rol
imul
loope
pusha
in
dec
cmp
jnp,pt
pop
sbb
mov
addl
mov
nop
add
les
pop
cli
jmp
jns
popf
js
jne
ficomps
or
dec
adc
les
or
lret
or
nop
in
sub
mov
lea
clc
scas
shrb
push
rcl
scas
cmp
test
sbb
push
mov
lret
je
flds
jle
inc
cmp
in
and
rclb
jnp
sub
or
jnp
push
inc
inc
aam
aad
sbb
add
leave
push
inc
hlt
xchg
dec
pop
punpckldq
or
push
lods
mov
cmp
pop
cli
jp
jnp
icebp
dec
jg
push
adc
out
aad
lea
adc
or
inc
fimull
divl
inc
sub
fcompl
and
mov
push
movhps
inc
ret
dec
mov
out
push
jne
repnz
stos
mov
ret
scas
cmpl
movsb
lret
shlb
mov
test
mov
dec
fiadds
and
insb
mov
mov
push
cmp
or
push
push
sbb
movsb
inc
add
les
pop
dec
cltd
mov
jno
mov
jnp
mov
mov
fnsave
xor
clc
xchg
mov
ret
incl
fs
data16
adc
sahf
mov
cmpsl
push
pop
xor
aaa
mov
aam
pop
and
push
xlat
fbld
and
and
ss
clc
into
add
adc
add
loop
jge
push
mov
imul
std
int
lock
push
xchg
and
mov
daa
in
jae
into
ret
xchg
xchg
lahf
lret
mov
cmpb
sub
fldl
int
hlt
adc
dec
sbb
in
cmpsb
jo
insb
sub
sub
jae
xchg
inc
js
stos
loopne
jo
in
cld
and
mov
cwtl
inc
lret
pop
stos
das
test
and
scas
fisttpl
pop
lds
xchg
push
ljmp
dec
sbb
sbb
and
lds
lods
add
dec
out
shrl
out
and
jmp
call
dec
sbb
fucomi
mov
mov
pop
enter
xchg
shlb
xchg
bound
call
ss
mov
ss
add
pop
cltd
pusha
dec
mov
jns
adcb
pop
enter
call
in
fucom
sbb
aam
xchg
cs
pop
mov
and
sbb
or
insb
orl
mov
inc
push
es
popf
pop
lods
shl
fdivp
test
xchg
cmp
mov
lret
cld
sub
inc
pop
jle
nop
jb
into
cmc
or
inc
or
into
mov
fiadds
icebp
pop
dec
div
xchg
jne
push
xchg
ljmpw
mov
leave
popa
add
mov
int
je,pt
mov
xchg
gs
add
repnz
sbb
js
jl
icebp
out
insl
inc
nop
push
pop
dec
or
shlb
rcl
hlt
stc
xchg
pop
push
jb
popf
lds
mov
dec
cwtl
pop
pop
xor
mov
mov
sbb
mov
inc
and
or
jbe
leave
ljmp
fs
mov
test
or
cmpsl
sahf
cld
xor
fdivp
mov
lret
inc
jae
mov
clc
fisubrs
inc
hlt
pop
jecxz
repnz
mov
lock
cmp
mov
out
sbb
push
out
push
sbb
into
jmp
and
inc
mov
jecxz
or
cmp
mov
and
das
mov
mov
mov
adcb
add
mov
pop
pusha
adc
sbb
sahf
scas
inc
int
inc
lds
add
loop
ret
cmc
mov
subb
pop
push
sub
push
jb
fldt
into
in
nop
mov
cmc
mov
orb
popa
sub
add
int
imul
sbb
dec
sti
push
mov
pop
and
fiaddl
lahf
xlat
fistpll
or
xchg
push
lock
xchg
sbb
mov
and
adc
inc
pop
imul
mov
xchg
sub
daa
loope
cli
cmpl
stos
shll
orb
mov
shll
and
pop
mov
inc
les
out
add
mov
je
clc
les
mov
xor
cmp
dec
cmpsb
leave
clc
inc
fldenv
repnz
nop
cmp
dec
rcll
cmp
mov
fs
pushf
outsb
push
xchg
sbb
pop
daa
push
inc
jl
imul
fcoms
shrb
push
xchg
popf
imul
jne
adc
mov
sahf
js
test
idivb
faddp
clflush
rorl
lret
lret
mov
push
jnp
dec
aaa
mov
pop
sbb
cltd
js
dec
adc
add
lea
je
push
fnsave
xlat
sbb
cld
addr16
jbe
fstpt
mov
scas
xor
fcoml
push
shll
ss
xor
int
fimuls
pop
pop
push
sbbb
or
add
rcll
inc
dec
jmp
and
fstps
mov
cmp
lret
decb
inc
sub
pop
and
sub
dec
sub
sub
repnz
aaa
dec
jns
dec
cmp
cmp
mov
mov
fstpl
push
movsb
stc
xchg
out
das
ret
jne
testb
or
mov
inc
and
push
push
imul
fwait
rcrb
dec
add
sub
mov
dec
test
inc
stos
bound
mov
mov
inc
xchg
loopne
popa
add
movsb
lret
sbb
and
or
addr16
scas
test
inc
lea
xor
lds
imul
mov
xchg
pusha
adc
xchg
lret
arpl
and
mov
shlb
push
idivb
or
push
jg
push
mov
jmp
out
lcall
nop
or
push
jns
mov
pop
addl
sub
dec
nop
mov
je
flds
rorl
pop
cld
stos
cmp
push
mov
subl
cwtl
mov
in
aas
mov
lcall
inc
jp
jno
pop
cmp
in
test
xchg
mov
ret
rorl
pop
aas
movsb
push
shl
insl
sbb
mov
or
jno
dec
push
adc
jp
mov
adc
hlt
pop
or
sbb
or
repnz
and
aam
mov
dec
ja
sbb
adc
adc
addr16
mov
and
out
xor
test
mov
push
outsl
fsts
iret
insb
mov
and
push
inc
adc
sti
xchg
push
pop
repz
pop
add
sti
fs
push
sub
adc
dec
cmp
popf
cltd
in
xor
dec
lock
nop
cli
mov
and
xchg
inc
pushf
lods
dec
push
popa
or
sub
rorl
dec
xor
sahf
or
jge
aam
push
push
sbbl
dec
popf
clc
leave
stos
pop
fsubs
mov
or
ret
bnd
imul
sbb
leave
fcompl
dec
test
xlat
jge,pt
aam
imul
mov
pusha
movsl
push
inc
adc
pop
mov
inc
push
outsb
idivl
enter
pop
stos
fstl
js
sub
jecxz
xchg
loop
cmpsb
scas
push
push
outsb
push
cmp
jge
imul
in
rorb
push
lret
mov
ret
cmp
cmp
mov
mov
cld
rcr
push
mov
lock
arpl
mov
sub
and
lahf
pop
push
lret
fwait
mov
push
sub
stos
xor
adc
or
dec
push
sbb
es
mov
test
rorl
test
es
cli
push
pop
scas
testl
frstor
mov
lods
mov
sbb
movsl
xor
stc
ja
add
xchg
shlb
mov
jl
scas
dec
psubq
xor
insl
sbb
and
movsl
sahf
sub
adc
cmc
dec
mov
xor
push
scas
mov
hlt
mov
push
movsb
jo
push
or
out
xchg
pop
mov
xchg
repnz
pop
out
imul
mov
dec
or
dec
xchg
push
sub
iret
insl
cltd
cmp
sahf
inc
add
ss
mov
shrl
std
fstp
scas
jl
imul
or
and
pop
idivl
cli
and
mov
sbb
pusha
sbb
test
stos
shrl
and
fsts
adc
les
sub
ds
nop
cmp
cmc
pusha
out
out
loope
adc
push
stos
inc
je
jb
sub
xchg
fcmovnb
or
push
cmp
inc
scas
int3
adc
xchg
adc
iret
rcll
xor
aam
leave
jle
xchg
mov
and
mov
xor
add
popa
out
dec
movsl
sti
sbb
cmp
data16
cmp
cwtl
out
adc
lea
dec
pop
js
clc
nop
mov
pop
or
rcrl
divb
add
mov
ss
sbb
je
mov
push
repnz
cmc
sahf
pusha
xchg
pop
loope
sahf
movb
inc
xor
jbe
adc
inc
dec
bound
cmpsb
out
imul
sbb
jp
adc
inc
loope
push
rol
iret
dec
outsl
push
sbb
or
call
scas
mov
pop
adc
pop
dec
add
cmp
cmp
adc
push
mov
imul
mov
add
ret
repz
fidivrs
mov
es
adc
jo
mov
into
push
rcrb
sub
xlat
add
sbb
and
enter
pop
aaa
cmp
lret
push
in
addl
adc
mov
lock
gs
xor
lahf
ds
push
pop
mov
pop
nop
xchg
xchg
adc
adc
jno
mov
into
aad
mov
frstor
mov
loope
into
insl
pop
add
inc
loope
pop
fst
aaa
pusha
in
and
xchg
in
sub
pop
test
adc
scas
sarb
aas
cmp
movsl
or
mov
outsb
adc
cmc
cmpsb
and
push
inc
repnz
push
data16
iret
cwtl
insl
cmp
sub
adc
mov
repnz
test
sti
faddp
loope
andps
and
cs
mov
add
dec
aas
inc
fdivrl
mov
sbb
popf
push
fistpl
mov
cmp
or
call
ret
in
mov
int
push
std
lock
in
pusha
xor
ret
lock
pop
add
push
sub
ja
mov
pop
push
rcll
jbe
push
popa
insb
dec
arpl
fs
pushl
les
cmpsl
das
pop
xor
aad
mov
adc
pusha
subb
ds
mov
add
push
dec
in
flds
and
out
sub
int
add
dec
mov
jno
cwtl
pop
pop
lds
cmp
in
out
lods
test
adc
xor
imul
inc
sub
es
or
inc
leave
stos
mov
push
andb
pop
mov
add
outsb
mov
out
in
ljmp
stos
lea
dec
or
scas
sbb
enter
dec
pop
jo
bound
sub
cmp
fsubp
mov
into
lret
cmp
jl
cltd
xchg
cmpsl
fidivl
push
call
xchg
xor
mov
mov
enter
stc
repz
dec
jb
pop
or
push
repz
ds
test
lcall
fmul
mov
inc
dec
add
gs
das
imul
inc
jecxz
or
adc
hlt
std
dec
stos
stc
sahf
pop
out
fs
das
repnz
mov
pop
rcrl
mov
add
cld
pop
aas
mov
jnp
lcall
aad
popa
fdivs
sub
popa
add
xchg
pop
sbbl
push
dec
adc
test
testb
mov
and
rorl
push
outsl
shrb
xchg
frstor
mov
and
outsl
dec
add
jb
xchg
adc
insl
or
adc
cmp
in
das
test
lods
pop
icebp
les
mov
jl
das
jns
pop
add
lea
push
loopne
in
and
add
loop
std
inc
pop
pushf
mov
add
add
adc
push
pop
or
sbb
inc
sbb
mov
inc
test
scas
and
imul
fmuls
mov
cmp
and
xor
xchg
aam
inc
outsb
xorl
mov
stos
cmpsl
push
or
mov
cmpsl
mov
ss
push
mov
push
sub
ror
fdivrs
mov
out
add
popa
enter
add
cmovno
jp
imul
incl
lret
xor
or
inc
sub
jbe
pop
clts
xorl
aaa
sbb
stos
jmp
and
loopne
jbe
pop
out
imul
inc
adc
inc
flds
insb
outsl
ljmp
push
add
and
ljmp
mov
pop
loopne
and
test
jae
cwtl
mov
in
inc
test
lret
fwait
pushf
pop
xchg
cs
inc
adc
lret
mov
stos
or
shr
push
sbb
mov
sti
or
loopne
lock
xor
xchg
cmp
or
sbb
push
and
int
sub
and
aam
stc
clc
cmp
ljmp
mov
repnz
dec
cli
pop
in
ror
and
mov
ja
sub
pop
fsts
movsb
pop
push
pop
aas
out
shll
aam
xor
mov
fldenv
mov
fcoml
jge
test
mov
idivl
imull
inc
int3
cmp
fsubs
je
mov
inc
mov
and
je
mov
loope
mov
xor
xchg
and
mov
rorl
insb
mov
or
pop
into
jo
sbbb
fbstp
dec
pushf
movsb
gs
movsl
scas
push
ja
add
xchg
js
xabort
xchg
stos
jns
mov
or
gs
and
ds
mov
sbb
push
nop
sub
cld
and
ds
add
sarl
sub
pop
jp
sbbl
popa
pop
lods
aam
mov
rclb
out
mov
or
std
pop
int3
std
add
cmpsl
mov
js
cmp
mov
dec
test
xor
sahf
ss
fildl
adc
and
xor
inc
in
aaa
dec
and
pop
pushf
xchg
add
int
pop
fcmovnu
lcall
cmp
mov
out
je
inc
and
sbb
xor
cltd
push
or
add
clc
ljmp
push
or
cmpsb
mov
sbb
test
lods
dec
add
sti
add
rorb
mov
dec
sbb
arpl
mov
out
ss
ds
mov
popa
xor
lcall
push
mov
dec
lea
inc
sub
push
cmp
mov
in
out
test
sti
pop
sbb
iret
push
addb
add
push
jnp
and
pop
pop
js
fwait
push
xor
das
popf
pop
mov
sbb
sub
aad
inc
xor
xchg
test
cmp
mov
mov
es
pop
mov
iret
xchg
addb
push
aaa
add
pop
xchg
push
xor
mov
mov
push
mov
icebp
ficomps
jmp
std
cld
pop
push
cld
sbb
dec
jl
xchg
sbb
fisttpl
dec
jmp
dec
out
mov
in
and
test
jns
ret
mov
fldt
push
shr
jl
test
sti
mov
add
icebp
ljmp
cmpsb
das
and
add
scas
popa
xor
pushf
pop
fdivr
ss
mov
mov
push
popa
jg
scas
out
or
and
inc
xor
ljmp
fistps
xor
out
pushf
in
lock
enter
sub
push
mov
mov
fwait
or
and
xor
xchg
pushf
or
fwait
clc
scas
shlb
stos
xor
cli
xchg
fbld
int
lds
test
push
sub
xlat
mov
pop
add
xor
icebp
sbb
imull
fdivrs
mov
decb
xor
sbb
outsb
inc
or
mov
sahf
lea
sbb
adc
lds
fisubrs
xchg
mov
or
xchg
xchg
adc
pop
pop
push
cltd
es
icebp
loop
out
jg
repnz
pushf
add
movsl
push
pop
push
sub
idivl
push
mov
pop
push
xchg
add
roll
mov
cli
cltd
add
cmp
in
inc
inc
std
movsb
js
push
jmp
lds
jmp
jbe
xlat
mov
adc
lea
dec
popa
ds
push
sbb
xor
sbb
addr16
xlat
je
bound
inc
pop
int
adc
loopne
les
dec
sti
push
pusha
push
dec
cmpl
mov
dec
pop
pusha
mov
int
xchg
movsb
or
and
lcall
cmpsb
out
sbb
imul
dec
jmp
lahf
les
mov
pop
test
adc
push
clc
mov
jno
in
inc
fnsave
mov
enter
dec
or
adcl
xchg
mov
xchg
jle
add
xchg
push
cs
movsl
push
in
adc
xchg
loope
repz
xchg
int
jecxz
add
jmp
sti
repnz
cmp
mov
lods
push
inc
push
mov
push
lods
cmp
cli
mulb
mov
leave
push
adcb
test
and
cld
jecxz
jge
negl
push
jb
hlt
or
push
scas
ficomps
xchg
xchg
mov
int3
fxtract
dec
outsl
adc
xchg
mov
sbb
add
mov
add
or
in
scas
rcrl
stos
mov
fadds
pop
add
sub
pop
xchg
jo
sbb
dec
jb
lea
lea
mov
sahf
xor
sbb
ljmp
jle
out
sbb
shrb
adc
cmp
cwtl
clc
adc
das
je
roll
movsl
pusha
add
and
mov
movsb
jnp
testl
push
hlt
push
xor
add
push
push
add
mov
bound
push
movsl
pop
testb
cmp
jecxz
inc
scas
cmp
mov
xchg
mov
in
daa
lret
inc
jg
mov
cmc
ret
ljmp
dec
cmp
lds
push
shlb
jecxz
adc
pop
repnz
xchg
ss
loop
jnp,pn
imul
sbb
add
xor
xor
mov
mov
fstpt
ljmp
sbb
insb
and
jmp
lds
popa
xchg
imul
xchg
fsubrl
pop
aaa
pop
nop
xchg
pop
in
fimuls
mov
mov
and
adc
jb
mov
sbb
pop
stos
mov
xor
ds
cmpsl
or
ljmp
xor
enter
repnz
mov
outsb
outsl
and
test
inc
shrb
xchg
cmp
loop
xchg
into
pusha
into
imul
in
jo
je
xchg
xchg
neg
sub
and
sbb
pop
lcall
ljmp
into
test
pop
lods
frstor
cwtl
cli
push
inc
cmpsb
cwtl
xor
icebp
push
xchg
out
out
int
fdivl
adc
sub
jp
xchg
or
jle
repnz
inc
push
data16
sarb
sbb
jmp
pop
das
scas
mov
bound
fdivp
cmp
aaa
std
stos
dec
xchg
repnz
pushl
mov
repnz
dec
xchg
add
fmull
mov
popa
repnz
ret
outsl
ljmp
push
in
fistl
sar
mov
dec
iret
sbb
out
pop
inc
mov
xor
mov
cmp
ror
aaa
xchg
mov
xor
jmp
xchg
sbb
push
adc
mov
aad
dec
call
mov
daa
push
add
xchg
fimuls
mov
sahf
xor
sub
sar
inc
jmp
lods
push
pop
pop
cmc
xlat
jae
jecxz
rol
pop
clc
cltd
adc
jno
fistps
mov
dec
lds
xchg
mov
jno
xor
dec
mov
das
les
or
jnp
sbb
xor
pop
mov
popa
lcall
lea
adc
cli
in
mov
fnstenv
jno
sbb
int3
push
xchg
sub
rorb
aam
outsb
lret
xor
push
jle
and
cltd
adc
into
ds
xor
stc
xor
stc
mov
pop
cmpsb
fidivrl
popa
inc
sbb
adcb
nop
adc
sti
subl
shrb
mov
repnz
xchg
xor
mov
stc
sti
cltd
call
rolb
cmp
mov
popl
das
out
add
push
not
fisttps
scas
ret
popf
das
mov
test
or
gs
fdivl
jmp
mov
adc
and
xor
lret
cmp
xor
inc
inc
push
mov
push
loope
xlat
test
fmull
lods
hlt
xor
out
hlt
xlat
push
notb
outsl
out
sbb
test
pop
sbb
mov
fistps
orl
jge
adc
iret
rorl
inc
fists
iret
mov
cs
out
test
jge
push
cmpsl
ret
jo
scas
popa
sbb
mov
mov
or
xchg
popa
imul
cmp
fidivrs
mov
and
inc
int
loopne
gs
sbb
mov
xchg
mov
int
mov
jmp
pop
lds
mov
scas
xchg
and
xor
jge
adc
sub
inc
cmp
testl
pusha
fcmovb
push
cmp
dec
popa
int
xchg
pop
and
mov
pushf
lods
jno
mov
gs
xchg
sbb
fs
mov
xor
in
pop
sub
xor
jo
jle
arpl
movsl
cmp
ret
push
dec
test
and
push
xor
xchg
mov
fldt
imul
pusha
xor
push
inc
stc
jo
pop
adc
fdivl
ficompl
sbb
mov
das
scas
jle
stc
in
movl
push
out
mov
cmpsb
push
dec
data16
negb
mov
add
mov
jmp
in
xor
sub
dec
mov
lds
fsubl
fiaddl
mov
in
dec
cmp
mov
pop
stc
aam
push
lods
stos
nop
mov
scas
daa
xchg
test
and
mov
pop
stos
mov
lock
in
popf
fnstenv
inc
xor
jmp
mov
xchg
inc
orl
fldl
pop
mov
test
daa
ds
cmpsl
mov
jle
jo
call
xlat
lahf
icebp
repz
cmpsb
gs
push
insb
mov
push
mov
dec
fdivs
inc
fdivrs
in
fs
in
out
jmp
sub
xchg
dec
adc
test
andl
faddl
leave
fldcw
jns
xlat
out
and
je
add
std
sbb
inc
jp
stos
xchg
add
enter
in
push
or
or
dec
push
in
ret
inc
or
out
add
mov
retw
or
dec
ret
je
out
mov
icebp
hlt
cs
adc
or
sarl
shrb
lahf
mov
testb
mov
cs
jnp
jl
lahf
rcr
push
mov
jb
mov
xor
out
mov
push
mov
in
dec
fs
add
mov
xor
pop
dec
in
andl
cltd
shl
or
sub
mov
scas
add
in
pushf
adc
mov
and
mov
movsl
and
mov
and
jno
or
sub
sub
sub
sub
pushf
mov
cmp
ret
ret
sbb
sarb
imul
adc
mov
adc
or
add
xchg
das
jg
pushf
dec
mov
cli
lods
loopne
sbb
int3
testl
mov
lcall
test
cmc
test
ds
cmp
addr16
pop
xor
mov
sub
roll
mov
inc
add
int
leave
outsl
cli
push
lcall
jno,pt
lea
arpl
jo
xor
or
sub
stc
adc
mov
add
xlat
das
mov
or
test
pop
sub
je
mov
push
clc
in
and
pop
mov
arpl
ret
push
xchg
add
pop
es
outsl
mov
fildl
inc
scas
add
movb
inc
sbb
dec
jns
notl
filds
insl
int3
or
fidivrs
mov
in
xchg
lahf
std
inc
sbb
mov
cmp
and
or
add
xchg
sub
iret
xchg
out
xchg
fsubs
cmp
push
pop
mov
jl
arpl
lahf
or
cmpsl
adc
aaa
cmp
mov
ret
xchg
out
adc
in
jo
cmp
cmp
rcrb
pop
ficoml
lea
mov
and
xor
dec
repz
or
and
jle
addr16
mov
out
imul
jecxz
or
mov
push
mov
add
xchg
mov
sub
sub
into
js
test
lds
add
scas
mov
push
sbb
pushf
scas
push
pop
and
push
mov
inc
stos
push
sti
inc
scas
jecxz
insb
inc
xchg
pushf
jp
lea
cmpsb
cs
in
adc
mov
aam
mov
or
fdivs
xchg
xor
mov
add
sbb
mov
insb
mov
mov
jmp
lret
adc
push
test
xchg
mov
ret
pushf
iret
mov
jl
pusha
in
sahf
ret
jae
hlt
addr16
push
and
pop
fidivs
add
jmp
mov
out
sahf
add
add
dec
mov
adc
inc
sbb
dec
push
movsb
pop
xorb
mov
adc
sub
and
mov
mov
sub
dec
add
repz
iret
add
cmpsb
arpl
ljmp
xchg
sti
jge
gs
repz
imul
cli
or
cmp
fadd
out
addr16
in
int3
bound
mov
xchg
outsb
cmp
mov
pop
movsl
xor
mov
test
lret
jb
cmpsb
sbb
adc
sbb
xor
addb
rcrb
mov
rcrb
push
cwtl
call
jo
xor
ss
pop
inc
adc
or
add
xor
shlb
pushf
inc
outsl
cmp
loope
shlb
cmpsl
pusha
push
cmc
push
fbld
push
enter
add
lock
push
sarb
data16
sbb
iret
xor
inc
xchg
sbbl
pop
sti
or
cmp
aad
out
stos
jp
sbb
sub
pusha
cmp
sti
and
add
pop
imul
lret
sub
mov
bound
and
jle
cmpsl
add
xchg
xchg
sbb
fisttpl
pop
push
jecxz
cmp
adc
rclb
pop
jl
mov
les
mov
cs
enter
push
jmp
in
cmpsl
pushf
dec
scas
dec
mov
fists
adc
cli
adc
cmpb
xchg
mov
repnz
pop
lret
int
push
mov
sub
and
add
jge
jmp
lods
cltd
roll
cmc
sub
leave
mov
dec
fs
pusha
or
mov
lret
mov
xchg
mov
mov
int3
pop
mov
jae
mov
or
enter
xor
pop
and
sbbl
int
data16
jnp
bound
in
xor
cmpsb
bound
push
enter
inc
mov
ss
sbb
lret
jl
or
notb
ljmp
mov
dec
mov
sahf
cmp
push
aaa
ret
mov
in
nop
stc
xor
adc
inc
dec
pop
mov
mov
out
sub
add
mov
call
in
sub
arpl
leave
xchg
mov
insb
sbbl
cmpsl
mov
cmp
ss
daa
mov
adc
pop
adc
add
inc
popf
mov
or
mov
imul
mov
mov
test
add
data16
inc
and
inc
and
add
movsb
aam
inc
ljmp
ffreep
push
xor
call
in
pop
or
adc
xchg
lea
mov
cmp
cwtl
inc
mov
enter
sbb
lea
pushl
add
xchg
and
fs
cmp
aas
pop
lahf
push
movsl
fisttpl
outsl
js
push
int
push
aam
xor
popf
mov
nop
add
inc
mov
push
inc
test
pop
or
lret
dec
or
mov
add
mov
inc
jo
pop
lret
mov
xchg
mov
int3
mov
xchg
xchg
mov
jnp
mov
mov
stc
push
aaa
sbb
pop
ss
sahf
or
push
xchg
fdiv
pop
mov
sub
out
pinsrw
mov
stos
mov
cmp
inc
adc
jp
lcall
push
int3
iret
leave
fmul
outsl
mov
and
jge
sub
xlat
sbb
mov
mov
sub
rclb
xchg
xchg
xorb
adc
lock
cmpsl
ljmp
loope
out
adc
es
cmp
sbb
push
jp
test
arpl
lds
pop
repnz
adc
pop
jbe
fldt
push
shll
shll
ds
gs
leave
cltd
neg
dec
out
dec
push
mov
call
movsb
faddl
push
les
cmp
mov
pop
xor
sbb
sbb
inc
jle
test
cwtl
or
adc
repz
push
jl
mov
add
jb
notl
aaa
sub
jns
jmp
fsubr
fwait
cli
movsl
or
cmp
sbb
sarl
mov
aam
shlb
test
mov
inc
jae
scas
cmp
dec
or
out
and
pop
popw
add
outsl
int3
cmp
lods
stos
xlat
into
test
xchg
push
cwtl
into
cmpsb
andb
and
cmp
hlt
aad
xor
iret
or
scas
inc
jg
cmp
or
or
jnp
shr
call
call
adc
div
int3
stos
sub
and
add
inc
arpl
sti
fs
sub
jle
out
xchg
push
mov
repz
movsl
inc
lcall
lcall
push
pop
idivb
movsl
mov
fwait
sub
out
add
and
fildl
popa
mov
add
xchg
iret
insb
or
std
lret
mov
dec
dec
das
fists
pop
in
mov
adc
or
fldl2t
inc
fs
das
sub
dec
ja
push
test
mov
xchg
ret
aas
clc
inc
rorl
push
push
push
cmc
pop
outsb
xchg
aas
xor
scas
enter
add
mov
aad
loopne
push
imul
adcl
rorb
andl
notl
pop
shll
dec
cmc
out
sub
xchg
nop
sarl
xor
dec
jmp
xchg
gs
cs
rcrb
dec
jl
mov
cmpsb
jle
stc
xor
xchg
mov
adc
cmpsl
inc
out
cs
xchg
enter
mov
sbb
je
shrl
mov
adc
pop
xchg
dec
std
jne
test
sbb
adc
fadd
sub
add
scas
ficoml
cwtl
jp
pusha
out
in
jb,pt
inc
ficompl
inc
rcl
sbb
into
mov
mov
fstpl
cmc
sahf
lcall
rcrl
jne
fs
hlt
mov
das
cmpsb
mov
outsl
mov
cltd
inc
and
lock
loop
xchg
push
dec
add
das
scas
daa
jle
es
inc
insl
xlat
pusha
ret
xchg
inc
fwait
pop
sub
rcrb
in
nop
ljmp
xchg
cmp
imul
xchg
jno
inc
push
sbb
push
lods
dec
stos
pop
pop
mov
fs
and
mov
inc
pop
mov
pop
out
cmp
jge
lods
and
pop
lcall
or
stos
add
ja
push
lret
jg
push
pop
jle
shlb
mov
repz
cld
adc
mov
movsb
push
fsubl
cmp
into
or
or
in
stos
enter
test
adc
mov
mov
mov
adc
test
or
xchg
xor
jns
adc
clc
ja
dec
or
jg
mov
sub
sub
jg
jae
jno
std
sbb
mov
push
mov
and
push
mov
dec
movsl
mull
test
iret
xor
fs
add
or
push
pop
cmp
dec
pushf
aas
repz
add
in
out
scas
mov
sub
rorl
and
aaa
mov
jae
stos
and
enter
cltd
xchg
aas
or
mov
and
out
mov
jg
jno
adc
jne
cmp
ja
lcall
adc
add
ret
pop
sub
xchg
sbb
inc
or
sub
mov
arpl
mov
lcall
scas
sbb
test
in
xor
subb
icebp
addb
and
stos
cmpsl
push
std
bound
cmp
or
scas
arpl
mov
imul
xchg
push
and
push
xchg
add
hlt
fs
mov
and
mov
incb
cmpsb
loop
jnp
sub
pushl
repnz
jge
testb
hlt
cmp
int3
pop
js
push
dec
fwait
push
mov
jl
push
aaa
movsb
mov
mov
push
xlat
xor
sub
pusha
jns
outsb
or
xchg
aaa
xlat
add
sub
add
fldt
les
leave
pop
icebp
dec
fists
aad
cmp
lea
sbb
xor
mov
adc
dec
push
sbbl
add
imul
xchg
dec
clc
dec
adc
sbb
pop
xchg
mov
push
inc
xchg
xlat
dec
adc
jecxz
mov
movsb
lods
test
sub
outsb
push
lret
mov
push
pop
fs
xchg
ja
shlb
in
sti
loop
jbe
cltd
cmpsb
or
cli
lcall
inc
xchg
mov
iret
jne
test
push
inc
or
ret
mov
xchg
sbb
mov
and
mov
shll
mov
xchg
fstl
pop
lock
xchg
mov
mov
adc
jecxz
push
shrb
lock
aad
cli
in
add
mov
dec
push
mov
push
jbe
iret
mov
adcb
pop
js
cli
adc
mov
dec
ss
mov
stos
pop
dec
arpl
jb
int3
fs
ret
ljmp
mov
fsubp
enter
cmpsb
popa
call
sub
add
push
in
adcb
lret
xchg
sarb
mov
push
adc
iret
mov
int
int3
mov
and
push
mov
jmp
dec
jp
sti
or
xchg
jmp
mov
loopne
cmc
in
inc
adc
jp
lret
mov
jo
shlb
cmp
cmpsl
cmp
inc
das
ret
and
sbb
push
and
sub
push
cld
cmpb
sub
push
xor
ja
add
mov
adc
iret
subl
fs
mov
sbb
scas
in
jecxz
and
mov
aaa
in
pop
rcl
repnz
je
ret
mov
mov
cmp
cld
mov
jmp
jo
fs
xor
rol
fwait
out
jne
cmpsl
push
add
sbb
decb
std
roll
mov
loop
cmp
arpl
stc
or
adc
jno
or
push
adc
mov
out
push
or
movsl
push
ret
fisubrl
out
add
out
and
inc
add
icebp
data16
outsl
push
dec
out
dec
inc
cs
xchg
pop
or
ret
lret
cmp
stos
push
in
lcall
popa
cmc
mov
outsl
addl
cli
pop
sbb
fstpt
mov
mov
mov
jb
push
add
rcrb
lret
cmp
cli
dec
std
jge
scas
jne
cmp
dec
or
shll
cmpsb
cmp
xor
js
movsl
pop
mov
push
aad
cmp
xor
lahf
ret
cli
xchg
orb
movsb
sub
lds
daa
test
repz
push
pop
jle
sub
rcrb
xorl
mov
cmp
cmpsb
rorl
xchg
jl
sbb
outsl
fs
sub
push
push
mov
sub
or
sti
pop
and
mov
mov
lods
pop
mov
pop
lret
clc
push
adc
ficoms
imulb
or
fistps
push
out
cmc
mov
pop
jl
push
cmp
das
mov
lahf
sub
jb
xlat
adc
sti
and
rolb
aas
xchg
stos
in
insb
daa
sbb
jge
stos
sub
sbb
dec
cmp
xchg
xchg
fwait
stc
sbb
aas
jns
add
pop
sahf
add
lahf
icebp
loope
sbbb
aas
cmp
rcrb
adc
data16
fidivrl
push
jae
out
push
sbb
cmp
fs
push
hlt
inc
cmpsb
mov
test
jbe
stos
pop
mov
pop
les
je
pop
lds
sbb
add
adc
cld
jmp
int3
pop
dec
and
push
iret
dec
mov
mov
mov
sbb
stos
imul
fwait
ja
jne
xor
cmp
mov
push
fmull
jp
cli
mov
cmpsb
dec
or
scas
dec
in
mov
in
pop
dec
sub
jns
lods
inc
push
test
cmp
data16
mov
xchg
push
dec
stos
ficoml
sbb
ret
inc
jnp
mov
mov
pop
lahf
int3
lret
sbb
jb
add
dec
pop
mov
int3
cmpsl
stos
cmp
rcrl
or
or
std
sub
lret
xchg
ss
movl
stos
lret
es
xlat
and
dec
dec
loope
fsubrs
arpl
gs
and
cmp
xchg
mov
ret
sahf
sbb
jbe
mov
jb
mov
lds
mov
fisttps
add
jle
dec
iret
pusha
lods
imul
in
ficompl
fwait
add
ja
jne
jno
sbb
cltd
out
dec
orb
les
mov
sarl
jg
pop
xchg
jns
mov
cmp
cmp
clc
fldenv
aad
inc
adc
pusha
cmp
fsubrl
dec
xor
enter
movsl
out
scas
lea
dec
ja
out
int3
push
test
stc
pop
and
mov
or
push
or
into
int
adc
lret
insb
frstor
insb
call
or
push
shlb
lock
dec
stos
lock
ret
mov
jg
movb
mov
es
or
cltd
lcall
jg
lret
cs
pop
repnz
idivl
into
xor
in
jp
das
movsl
add
cltd
out
xor
add
jle
ror
fcmovne
gs
in
mov
imul
mov
pop
out
adc
movsb
fldt
inc
cwtl
cld
sub
es
pop
pop
xchg
sbb
add
insb
mov
enter
out
xor
jle
push
gs
push
xchg
pop
jns
pop
cld
mov
popa
arpl
jne
in
push
scas
out
jmp
sub
std
or
lods
mov
or
mov
enter
xor
mov
push
into
jmp
dec
daa
cmpsb
in
fdivr
xchg
cmp
xchg
mov
mov
xor
ror
cmp
addb
in
imul
dec
dec
xor
pop
push
mov
or
imul
mov
loopne
add
add
cmpl
icebp
jmp
pop
mov
js
jecxz
jne
ja
jp
inc
icebp
jle
and
test
and
pushl
mov
pop
test
push
fistpl
ja
push
in
mov
jecxz
or
aam
mov
dec
arpl
mov
push
pop
adc
cs
cmpsl
inc
jbe
jnp
inc
xorl
and
nop
in
pushf
test
shll
inc
test
jl
push
cs
mov
pop
ret
outsb
push
jo
pusha
mov
dec
test
imul
loop
loop
lret
inc
mov
imul
lods
test
pop
jp
negl
push
les
fildl
ljmp
in
cs
arpl
fsubrl
test
pop
out
sbb
ret
and
ret
xlat
loop
sub
jnp
pop
adcb
dec
test
mov
sbb
mov
mov
jmp
jmp
dec
popa
aas
in
add
jmp
pop
popf
dec
add
jb
andl
ficomps
sbb
or
inc
xchg
cmp
lcall
xor
adc
out
xor
pop
push
inc
pop
test
stos
lea
imul
test
adc
jge
inc
test
stc
mov
enter
xor
add
outsl
shll
js
mov
mov
push
inc
fistl
cs
andb
inc
shr
xchg
hlt
mov
dec
push
arpl
pop
pop
idiv
sbb
sub
mov
xchg
pop
out
sub
adc
push
jecxz
dec
cmpsl
adc
lea
test
cmp
jbe
jne
pop
inc
add
mov
push
and
jge
into
jle
jmp
push
adc
cmp
xor
xchg
inc
mov
sbb
arpl
inc
lods
jp
push
or
into
mov
dec
test
ret
pop
loop
mov
insl
std
jecxz
dec
xor
sbb
pop
mov
push
stos
xor
jns
aas
shlb
xchg
push
add
dec
out
sub
stos
movsb
push
sbb
xor
jnp
popf
push
ja
sbb
sub
inc
stos
add
cs
mov
mov
pop
sbb
adc
add
and
dec
in
inc
dec
rcl
push
mov
mov
shrl
dec
sbb
and
aas
pusha
addr16
push
out
sbb
fldcw
insb
nop
push
fwait
or
jbe
or
stos
inc
pop
je
cmp
pop
ficompl
fadds
int
and
push
hlt
and
js
rol
sbbb
adc
jbe
mov
pop
imul
jnp
aam
pusha
testb
pop
adc
aas
js
or
mov
jmp
jmp
in
daa
dec
repnz
ret
not
mov
in
sbb
mov
jb
and
addr16
mov
and
dec
mov
fs
dec
xor
jb
lret
and
movsl
icebp
cmp
negl
jae
flds
or
pusha
repz
adc
jno
pop
ror
inc
fidivl
sub
jmp
add
pop
mov
or
jl
in
xor
repnz
ds
and
xchg
inc
adc
mov
test
sub
mov
mov
or
addl
mov
fwait
cld
push
jbe
mov
loop
mov
xchg
dec
jo
aad
aaa
mov
push
mov
mov
out
sbb
stos
xorb
xchg
rcrl
test
dec
or
inc
js
not
or
or
pusha
test
stos
in
or
mov
or
fsubl
je
ljmp
out
out
aas
push
repnz
xchg
ficoms
ret
rol
repz
jg
leave
xchg
cld
loopne
fwait
inc
arpl
mov
les
gs
lret
aad
push
adcl
je
and
or
push
push
xor
sbb
lcall
fwait
lahf
mov
cmp
aaa
pop
test
ja
pop
and
mov
lods
aam
fsub
pop
sahf
jg
ret
xchg
loop
dec
leave
shr
or
mov
mov
out
xor
mov
push
aas
fwait
jl
dec
pop
mov
je
add
in
dec
arpl
out
ficomps
cmpsl
cmpl
enter
pusha
fnstenv
mov
jmp
js
lds
mov
shll
xchg
fldenv
xchg
movsl
xor
or
inc
int3
insl
lret
dec
out
jmp
outsl
and
frstor
mov
mov
add
add
xchg
hlt
cld
hlt
sub
adc
icebp
push
jge
ljmp
push
mov
in
add
test
mov
sbb
or
pop
in
push
push
xor
lahf
push
cwtl
insl
mov
insl
out
daa
lahf
fwait
dec
shlb
and
xor
or
in
sti
add
lret
or
inc
cltd
stos
sub
sbb
sbb
out
or
mov
inc
add
or
xchg
or
shrd
add
bnd
fisubs
ss
or
scas
lret
dec
inc
sbb
dec
jno
scas
fidivrs
add
ret
xlat
test
push
push
cmpsl
xchg
mov
and
pop
and
add
jo
clc
push
ja
ret
mov
add
ljmp
add
dec
ds
stos
fcmovb
jmp
int
loopne
lahf
mov
sub
pop
andl
rcl
pop
mov
hlt
stos
mov
or
push
movsb
outsl
sti
sub
int
xchg
sarl
enter
push
mov
testb
adc
int
add
sbb
sbb
cld
das
mov
push
push
mov
pop
push
leave
mov
shll
scas
sti
idiv
sub
in
mov
push
jno
push
aad
outsb
imul
and
ret
fdiv
cli
andb
and
shll
mov
jno
sbb
mov
cmp
dec
jge
aas
push
fyl2x
lds
pop
dec
lods
addr16
jns
inc
movsb
repnz
mov
lock
jno
lret
and
or
arpl
push
lock
sti
insb
loop
cmp
mov
cld
sbb
lods
stc
jne
cmp
loope
lcall
sub
mov
mov
cmpsl
pop
mov
leave
pushf
ffreep
setbe
pop
dec
mov
lock
mov
sub
dec
mov
popf
dec
loope
push
mov
es
cltd
inc
fdivrs
xor
js
ret
dec
inc
push
sub
cmp
mov
idivb
test
mov
mov
addb
xchg
mov
or
xchg
inc
or
insl
in
fcomip
jb
add
test
mov
sarl
gs
icebp
push
pop
xor
jp
loopne
jmp
int
scas
push
inc
inc
stc
out
das
push
addr16
adc
xchg
out
mov
jo
out
xor
jae
repnz
sub
add
orl
rcll
mov
xchg
jp
mov
sbb
jg
sbb
push
outsb
sarl
aad
cmp
cmp
mov
mov
jmp
ja
jnp
lahf
cs
jle
cmp
push
shr
sbb
jae
lcall
aad
repnz
jmp
mov
ret
cmc
or
push
movsl
and
xor
shl
pop
out
lret
mov
fsubp
movsl
pop
in
push
icebp
pop
push
stos
and
jnp
pop
jns
sub
jns
mov
push
loope
mov
and
or
bound
dec
sbb
in
fcmovu
out
push
pushf
aaa
or
cli
jg
mov
sbb
push
dec
cwtl
mov
mov
and
dec
in
cmp
mov
in
adc
mov
cmpsb
lods
dec
sub
inc
lahf
ljmp
mov
mov
adc
mov
pushf
icebp
sub
add
or
xchg
ret
iret
aam
dec
bound
popf
xchg
ret
pop
or
orl
xchg
loop
mov
push
dec
mov
data16
push
xor
into
test
test
xor
add
test
fidivrs
dec
push
jl
inc
sar
in
push
jp
sub
jmp
mov
dec
mov
mov
jbe
ret
or
shll
arpl
int
gs
push
add
dec
pop
add
xor
in
inc
out
jg
mov
adc
and
in
lods
lods
dec
jmp
arpl
icebp
xchg
test
cltd
push
lret
addl
mov
pop
sbb
lock
jb
fsubrs
jp
push
daa
cmp
xchg
inc
lret
aas
push
test
xor
call
or
mov
outsb
ja
popa
fwait
dec
sbb
out
mov
scas
stos
cwtl
rcrl
sbb
gs
dec
add
call
mov
mov
adc
jno
out
lock
icebp
aad
rcr
cmp
jl
nop
std
cmpsl
movsl
pop
or
mov
jno
push
fimuls
push
adc
cmpsb
cli
adc
outsb
mov
push
mov
xchg
popa
push
sub
fcomps
push
imul
das
xor
pop
cmp
xchg
jl
enter
aas
outsb
cmc
push
sub
loope,pn
push
cmp
xor
cwtl
push
jo
and
cmp
fucomi
and
das
leave
fnstsw
mov
jmp
adc
repz
je
out
or
dec
insb
dec
mov
mov
mov
xor
outsb
mov
lcall
lea
hlt
jmp
jmp
mov
pop
mov
jb
add
aam
and
xor
loop
loop
clc
fs
aas
lds
jns
movsl
pop
rorb
sbb
jae
test
mov
pushf
sbb
dec
std
outsl
mov
mov
es
pop
inc
fcomps
sbb
mov
pop
pop
addr16
mov
add
test
cld
lret
xchg
int
test
push
pop
popf
pop
sbb
sub
out
lods
sbb
cmp
loope
mov
push
mov
mov
out
orb
imul
xchg
cmc
movsl
push
loop
sbb
imul
fcompl
outsb
xchg
adc
xor
sarl
sub
mov
jbe
mov
adc
sbbl
ljmp
xchg
mov
jne
adcb
aas
inc
fisttpll
loope
sub
in
or
pop
push
pop
sbb
cmp
mov
testl
jns
mov
lods
xor
stos
jnp
cmp
xchg
dec
mov
push
dec
mov
mov
jb
pop
sbb
incb
orb
fnstsw
push
push
or
pusha
ret
aad
cwtl
leave
shrb
shll
sub
divb
cmp
leave
and
cmpsl
arpl
adcl
xchg
das
out
call
jno
dec
scas
stc
mov
cli
inc
fistpl
scas
xchg
mov
mov
mov
add
sub
mov
jns
jl
jo
mov
mov
mov
movsl
rol
sti
test
mov
jmp
cmp
mov
mov
push
lods
push
push
mov
fmuls
pop
frstor
repz
sbb
or
addr16
sub
in
jno
mov
mov
or
outsl
pop
or
sbb
fld1
add
int
cli
adc
mov
sbb
xor
icebp
lea
jb
push
xchg
sar
sub
push
pop
mov
jnp
scas
call
and
popw
fisubl
and
xor
mov
and
sbb
cmp
jno
pop
jle
xor
out
mov
inc
mov
orb
add
sub
pop
addr16
push
inc
inc
jg
sub
fcmovu
push
mov
push
bound
add
addr16
inc
sub
mov
sbb
icebp
adc
mov
mov
cmp
push
hlt
inc
xor
stos
icebp
fsubrl
add
shlb
adc
lock
and
jne
mov
jecxz
pop
les
sti
pop
mov
test
mov
sbb
lea
stos
ljmp
mov
ret
lahf
ja
sub
mov
adc
je
jge
adc
dec
das
mov
xchg
mov
lcall
cmp
mov
mov
movsb
xchg
test
loope
inc
push
data16
sahf
repz
push
pop
loop
out
lret
adcb
add
push
jge
jne
pop
xchg
shlb
jmp
push
insl
push
jb
push
push
push
push
or
outsl
dec
xchg
mov
xor
lds
adc
add
sub
nop
jb
std
subb
dec
sti
mov
mov
outsb
pop
fisttps
add
push
mov
popa
movsb
rorb
sub
mov
xor
scas
sub
sti
outsb
cmp
push
imul
mull
popf
iret
rcll
add
sbb
mov
mov
gs
int3
addl
ja
inc
cmp
sbb
insb
and
repnz
fsubrp
fwait
add
ss
and
xchg
pop
subb
lahf
aam
sbb
out
push
mov
das
push
xor
fwait
lcall
add
lock
jne
mov
xchg
ljmp
mov
scas
aam
cmpb
jp
cmpb
popa
flds
test
push
test
pop
jnp
cmc
fs
xchg
jno
push
push
lods
mov
stos
leave
js
mov
jmp
fs
imull
push
add
pop
shl
mov
aaa
rclb
popa
into
xchg
inc
xor
push
sub
push
ja
roll
sbb
xchg
cli
lods
adc
mov
mov
sub
xchg
insb
adc
lret
and
push
subb
aas
or
ljmp
and
xor
outsb
movsb
inc
jnp
imul
mov
cmp
push
movl
xchg
xor
mov
jo
ljmp
mov
lret
ret
push
stc
push
sub
ljmp
add
int3
out
movq
icebp
add
lock
and
jno
mov
pop
fldt
cli
mov
sbb
and
xchg
mov
mov
mov
xchg
cmp
in
inc
mulb
pop
cmp
dec
in
dec
xchg
sub
or
inc
les
mov
mov
mov
mov
push
cwtl
add
jle
sbb
in
in
add
pop
in
jns
mov
daa
sub
lret
cli
lcall
rolb
cld
aam
mov
push
filds
add
in
lret
inc
rclb
rorl
ja
loop
fucomip
add
pop
pop
adc
sub
aas
inc
test
dec
std
dec
mov
or
clc
addr16
lods
dec
add
or
jb
std
stos
jg
pop
mov
pusha
mov
xchg
xor
data16
out
lock
fidivs
inc
cmp
jg
add
inc
stc
cmpsl
scas
dec
mov
fisubl
pop
in
cmpsl
insl
mov
divl
movsl
insb
inc
incl
pop
out
xchg
into
adc
fmulp
xchg
sbb
mov
btc
mov
inc
loopne
clts
xchg
push
cmpsl
adc
adc
iret
rcrb
pop
xchg
jb
and
cmp
push
cmp
movsbl
cs
aad
imul
jmp
lret
in
loope
cwtl
mul
cmp
dec
cmp
adc
and
mov
mov
inc
pop
dec
adc
int
ljmp
stos
push
in
int
add
mov
or
pop
inc
or
mov
movsl
jb
jbe
fdivs
fistpl
leave
and
xchg
or
imul
xlat
stos
pop
and
movsl
cmp
shll
test
mov
lea
mov
push
jmp
adc
jecxz
daa
and
inc
out
cmp
xor
sub
pop
lahf
lds
mov
insl
bound
and
xorl
or
pop
out
fwait
bound
pop
sbb
xchg
jmp
fwait
int3
lea
mov
sarb
jns
rcll
scas
pop
sbb
dec
xor
sarb
sti
sbb
dec
pop
loop
popa
repnz
mov
fisttpl
pop
jne
imul
xchg
cmp
ret
jnp
movsb
sti
cwtl
or
in
jb
xor
xor
push
add
and
mov
fisubrs
add
or
in
js
ss
outsb
sbb
jne
cmc
stos
push
out
push
data16
and
sti
popf
mov
lds
pushf
mov
add
out
add
ficoms
loope
xor
scas
push
inc
roll
push
cmp
push
lahf
or
ja
pop
es
cmpsl
adc
sub
aam
push
lahf
mov
hlt
push
cwtl
in
cmp
test
arpl
mov
and
push
mov
and
xchg
aaa
ret
mov
mov
pushl
jb
lret
fstps
shrb
push
mov
mov
jecxz
out
jnp
movsb
cmp
jp
sbb
pop
xor
and
push
and
daa
push
call
cmp
cmp
call
dec
mov
pop
push
daa
nop
mov
cmp
add
ljmp
aad
jns
xor
sbb
aad
lods
lret
ds
lahf
aaa
mov
dec
mov
push
dec
cmp
cmpsl
sub
jo
lea
loopne
andb
and
mov
pop
xor
enter
pop
cwtl
or
mov
cmp
aad
sbb
adc
pusha
adc
les
push
jno
loop
jo
jnp
out
mov
aad
jno
fistl
cmpsb
mov
mov
ljmp
pop
popa
inc
or
jmp
fdivl
or
flds
mov
jne
add
mov
push
insb
xor
aad
xchg
imul
xchg
sub
mov
xor
mul
xor
xorl
icebp
int3
testl
arpl
ret
mov
les
pop
insb
addr16
xor
mov
inc
sub
adc
int3
test
adc
repnz
ret
loop
jmp
pop
push
dec
pop
xchg
pop
xlat
inc
into
cmc
cmpsb
adc
sbb
sub
enter
push
and
gs
insb
sub
lods
pusha
inc
mov
cwtl
pusha
xchg
jl
andb
mov
dec
xor
fldenv
mov
xchg
aaa
shll
pop
or
cwtl
cmovbe
insb
adc
jl
push
sti
add
xchg
push
loopne
sti
mov
sub
mov
xor
inc
sbb
inc
ret
mov
push
pushw
call
mov
mov
or
mov
jnp
mov
enter
cli
cmpsb
xor
sub
push
pop
sahf
aad
dec
push
scas
out
rcrl
jb
xchg
cs
xchg
xor
subb
push
rol
jbe
ret
mov
push
stos
jb
inc
mov
sbb
popf
addr16
fsubl
sahf
mov
jno
sub
cmpsb
in
addr16
pop
ds
repz
les
xchg
jne
push
adc
push
xchg
pop
popf
push
inc
sub
loop
pop
ljmp
push
enter
int3
je
and
push
pushf
sti
mov
cmp
jmp
js
je
mov
fldenv
jns
mov
adc
loopne
sub
imul
loope
pushf
xor
pop
and
fwait
inc
and
jmp
gs
pop
movsl
insl
pop
mov
xchg
cmc
and
dec
outsb
out
add
jecxz
or
cmc
mov
sub
jb
mov
adc
jo
mov
sub
aas
cmp
dec
lahf
xor
nop
adc
ret
inc
sahf
xor
push
sbb
dec
adc
push
or
sbb
xorb
ljmp
ljmp
adc
shlb
jns
push
xchg
jecxz
sub
jb
push
mov
pop
int3
add
xor
ljmp
cmp
out
push
jo
lds
out
add
mov
mov
dec
xchg
adc
leave
pop
xor
scas
jp
xlat
dec
aad
mov
cmc
jne
sbb
int3
dec
in
xor
mov
lods
cltd
mov
std
scas
outsl
adc
cld
scas
lcall
xor
push
arpl
xchg
loopne
daa
scas
xor
movsl
adc
mov
inc
addr16
inc
test
jmp
add
mov
adc
xchg
mov
call
lcall
repz
cli
ja
fbstp
je
xor
or
call
outsb
idiv
adc
fldcw
scas
sub
add
cmpsl
inc
mov
sahf
jnp
sbb
les
sbb
leave
rcrl
fdivrl
in
mov
bound
push
add
and
xacquire
enter
cmpsl
inc
outsb
cltd
pop
psadbw
shll
pop
mov
xlat
test
mov
xor
dec
aaa
jle,pn
and
fmuls
mov
lds
mov
jbe
out
mov
in
sub
add
outsl
lods
in
mov
test
cmp
lret
mov
imul
lea
test
push
inc
or
pop
push
sbb
testb
inc
test
sahf
mov
xchg
les
or
popa
or
test
jle
jle
test
and
bound
es
iret
ret
sbb
loop
and
pop
sarb
fidivrs
insl
xor
inc
mov
movsl
and
imul
add
repz
mov
dec
ja
popa
ljmp
mov
push
dec
in
inc
inc
jnp
ret
push
xchg
rcrb
sbb
and
sar
fcomi
cwtl
mov
repz
andl
cmp
subb
bsf
sbb
cmp
cmp
xor
inc
sbb
mov
cltd
imul
fcomps
xchg
jno
push
adc
ret
je
dec
dec
adc
outsl
mov
ds
ja
push
mov
push
popf
jg
mov
mov
inc
rolb
repz
push
mov
adc
push
aaa
insl
sbb
setno
push
cmp
daa
or
jp
pop
imul
iret
lcall
xchg
add
sub
jl
imul
int
mov
out
push
and
aas
inc
adc
dec
repnz
push
sub
sub
outsl
adc
push
incb
mov
xor
cs
hlt
adc
insb
es
xchg
mov
out
sub
sbb
dec
xor
jmp
push
push
sahf
pusha
jg
call
in
imul
jl
fwait
cmp
adc
repz
fcompl
inc
cmp
fisubs
xchg
dec
cmpsb
push
stc
mov
sarb
inc
mov
push
bound
lea
and
jecxz
ljmp
and
test
jecxz
mov
stos
fidivrs
sbb
icebp
sbb
mov
cmc
rolb
std
int3
outsb
cmp
pop
std
out
mov
rcl
insl
add
push
in
pusha
pop
stos
outsl
pusha
aas
jge
loope
push
inc
in
and
jge
bswap
add
xor
ds
in
mov
ds
push
movsb
ds
adc
mov
les
mov
jne
mov
push
pop
test
int
add
fisttps
inc
es
lret
shrl
dec
add
fldlg2
cmp
jp
in
mov
subl
pop
mov
popa
sbb
jno
fstpl
pusha
sbb
sub
pop
std
xchg
xchg
jmp
fisttpl
loopne
add
mov
int3
faddl
aas
cs
ret
rclb
rorb
leave
cs
pop
dec
inc
push
mov
pop
and
in
rcr
add
loop
mov
repz
push
sub
das
dec
bnd
pop
push
mov
mov
icebp
pop
dec
and
je
popf
or
test
or
movsl
dec
pop
out
jnp
xor
push
jns
inc
cmp
cmp
cli
inc
inc
and
xchg
test
adc
jge
mov
mov
pop
insl
mov
xchg
cmp
jne,pn
xchg
add
jbe
mov
xchg
add
invd
and
or
jb
xchg
mov
dec
lods
and
cmp
mov
pusha
js
mov
outsb
out
stc
ret
mov
xchg
cs
or
and
daa
adc
mov
jnp
repnz
xchg
mov
adc
add
cmpsb
dec
jo
mov
stos
adc
fcomps
lods
lret
clc
adc
jecxz
prefetch
insl
add
imul
dec
push
mov
adcb
jne
mov
loope
test
mov
adc
mov
dec
push
and
in
jae
pop
outsl
insl
or
pop
xchg
sub
mov
rcr
jne
imul
or
repnz
adc
jl
push
mov
mov
push
aad
filds
and
dec
stos
sbb
mov
lahf
sub
out
std
mov
arpl
xchg
add
jge
cli
dec
add
sub
or
movsb
xchg
or
into
leave
dec
repnz
clc
sub
jl
out
adc
cmp
fcomp
outsb
ss
jbe
popa
and
mov
mov
jp
imul
mov
lods
lahf
mov
mov
fnstsw
popa
mov
cmpsb
mov
add
lret
mov
bound
and
repz
mov
jecxz
sub
arpl
mov
out
sbb
pop
test
rorl
mov
xor
xor
or
cltd
cmp
test
mov
test
aad
js
aam
out
fs
mov
or
shrb
fdivr
add
mov
sbb
jae
xor
add
cmp
mov
push
mov
sub
add
and
notb
lahf
hlt
pop
xchg
pusha
push
movsb
add
cmpl
ficoms
into
ljmp
movb
faddl
pop
dec
mov
addr16
inc
mov
jae
mov
pop
pop
lds
mov
out
dec
or
xchg
pop
dec
loope
test
pop
or
arpl
mov
or
int
daa
mov
dec
scas
filds
pop
insl
arpl
lods
adc
jg
mov
lahf
or
aas
stos
imul
loopne
add
imul
xchg
hlt
hlt
outsb
test
sub
iret
inc
jbe
xchg
sbb
pop
scas
ljmp
aad
dec
and
cs
pop
or
stos
jge
loop
fs
daa
aad
and
shrb
cli
xor
ret
xchg
or
sbb
adc
adcb
sbb
adc
inc
imul
insl
shrb
sbb
rcll
cmpsb
out
mov
js
in
xor
daa
push
adc
and
fmull
mov
adc
shrb
dec
mov
add
shll
mulb
scas
outsb
mov
insb
into
pop
ljmp
nop
jl
ss
jmp
bound
xchg
dec
out
mov
arpl
repz
shl
push
jl
xchg
addl
push
add
inc
pop
mov
cmp
xor
xchg
je
cmp
and
cmp
scas
jb
xchg
sub
and
cmpsb
push
fdivrl
idiv
imul
dec
jbe
dec
in
imul
aam
jg
adc
jb
andb
addr16
push
daa
aam
out
in
cmp
loop
test
jae
mov
bound
jno
lahf
js
and
jp
and
inc
mov
jne
pop
hlt
mov
cmp
lods
xchg
nop
jno
push
pop
mov
xchg
pop
stc
pop
out
xor
testl
enter
cld
and
dec
and
xor
outsb
daa
cmp
xchg
mov
rcrl
stos
cs
das
mov
add
stos
pop
sbb
dec
gs
enter
xor
dec
adc
fsubrl
repz
inc
dec
stos
shrb
xchg
xor
xchg
jmp
fdivrl
loope
movsb
xchg
rcll
mov
xchg
and
xchg
sub
ret
jge
xlat
js
addr16
ds
fwait
xor
and
jmp
push
cmpsb
lea
mov
dec
jmp
xor
adc
cmpsl
dec
or
dec
jge
cmpsl
fiadds
shlb
xchg
ljmp
xlat
test
insl
das
lcall
adc
leave
call
in
iret
fcoms
mov
aam
mov
jg
ss
sbb
scas
mov
push
xchg
push
repz
or
cmc
nop
inc
adc
xchg
sti
out
loope
add
mov
ret
or
jne
shlb
fstpt
enter
loop
sbb
or
pop
push
and
jbe
fistpl
mov
push
out
mov
add
jmp
movsb
lds
jle
sbb
push
pop
cmpsl
div
movsb
stc
pop
xor
test
jl
push
or
in
int
lods
loop
mov
lods
dec
mov
std
mov
sub
push
cmpsl
out
sbb
xor
std
dec
out
inc
or
cs
out
lods
rorl
nop
or
cmp
aad
sub
push
cmp
into
fdivs
sub
inc
xchg
sahf
cmp
in
jp
mov
in
push
push
add
pop
inc
dec
test
dec
arpl
jno
pop
cmpsl
jne
sub
in
mov
xchg
stos
aaa
sbb
aas
int3
aas
adc
das
sti
add
jo
in
jns
dec
rol
sub
pop
inc
rcr
pushl
cmp
addr16
das
jae
aas
aam
lret
popa
dec
add
scas
xor
jbe
lock
sbb
cltd
aad
pop
inc
push
lods
dec
add
cltd
sbb
dec
push
xlat
mov
xchg
mov
dec
mov
fidivrl
cmc
lea
pushf
loop
mov
enter
sbb
jae
push
xor
and
dec
insl
aam
daa
dec
out
rclb
mov
loope,pn
jo
mov
popa
js
jp
sarl
ret
and
mov
addl
push
leave
sbb
or
arpl
push
jp
fwait
popa
ds
jl
and
xchg
inc
mov
pop
jmp
enter
pop
jbe
popf
jge
mov
insl
xchg
mov
aam
push
pushf
repnz
push
ficomps
mov
sahf
sarl
cmp
lods
dec
sbb
addr16
dec
out
mov
lcall
sbb
push
les
push
popa
mov
adc
pop
fldenv
inc
test
jbe
out
push
fstpt
pop
jge
ret
iret
pop
dec
mov
mov
and
add
xchg
insb
pop
add
loope
sub
shlb
lea
popa
mov
mov
out
aas
jp
pop
sbb
cmp
cmp
push
cld
push
mov
add
inc
mov
adc
pop
in
push
push
mov
loopne
ljmp
aam
and
das
imul
rcr
jge
mov
or
aad
adc
out
into
jmp
out
lret
mov
es
testb
pop
and
add
loopne
es
gs
mov
dec
mov
inc
jl
jp
inc
mov
cmp
mov
push
adc
jb
lcall
test
gs
pop
inc
sub
fbld
push
xchg
sub
es
pop
sub
repz
sub
jae
mov
jae
shl
sub
adc
adc
jbe
scas
jae
mov
push
jle
outsb
sbb
sub
outsb
fwait
outsl
mov
pop
fldt
loop
stos
pop
cmpsl
lods
xchg
incb
lds
fcmovnbe
in
mov
sub
int3
inc
mov
inc
les
in
sub
stos
dec
enter
clc
out
dec
imul
mov
das
lds
stc
or
xor
add
mov
xchg
in
sbb
xor
jle
stos
push
sub
push
sub
xor
sub
dec
mov
stos
pop
xor
mov
outsl
call
ss
pushf
shlb
ficompl
cltd
int
bound
mov
and
movl
fwait
arpl
cmp
push
in
mov
mov
clc
pop
lret
dec
std
xchg
fisubl
rorb
jge
out
cmpsl
ret
lcall
xor
sub
shlb
fildl
scas
add
lea
inc
sub
filds
jns
insb
mov
cmp
or
test
repnz
mov
xchg
popa
imul
dec
jle
sub
std
jmp
cmp
jge
xchg
sbb
inc
xchg
sub
xchg
cmpb
push
popf
mov
jns
or
repnz
xchg
divb
test
sub
xor
xlat
repnz
fsubrs
ljmp
push
sar
pop
leave
jmp
mov
dec
std
adc
sub
adc
xchg
lea
aad
sub
aad
int
fs
fdivrl
addr16
and
sbb
daa
stc
jecxz
mov
xor
cs
sub
shl
ror
fstps
adc
ljmp
inc
pop
enter
and
ljmp
out
mov
cwtl
and
and
test
cwtl
addr16
aad
xchg
mov
fs
addb
ljmp
insb
popa
cmc
sahf
sahf
jnp
into
aaa
and
jns
mov
and
lods
out
mov
lcall
fcmovnb
adcl
dec
jne
inc
push
outsb
pushf
loope
add
mov
pop
loopne
dec
mov
out
fidivrl
cli
imul
in
cmp
test
push
push
push
test
push
xor
inc
push
xchg
jb
jnp
mov
mov
inc
jle
mov
cmp
mov
adc
test
fwait
ret
aad
lahf
push
sbbb
lret
stc
push
push
fstpt
mov
in
in
daa
dec
sub
inc
test
jecxz
pop
insl
add
jae
push
addr16
shll
xor
xchg
or
pop
push
pop
je
pop
test
ds
scas
sbb
aam
in
cmp
cld
test
xor
jge
or
cmp
jo
push
add
sti
rclb
hlt
sub
shlb
pop
mov
cmp
adc
insb
mov
fnsave
loopne
sbb
mov
pop
dec
dec
cmp
fmull
xlat
loopne
cltd
ljmp
jp
out
fwait
icebp
in
movsl
jnp
je
and
fcoml
or
adc
data16
adc
dec
dec
dec
lret
pop
or
data16
test
sbb
outsl
lods
pop
stc
adc
inc
lahf
test
dec
and
lret
push
jmp
sbb
or
pop
jge
and
inc
xor
jb
ret
cwtl
ret
ja
xchg
movd
sbb
out
pop
iret
stos
stos
xor
push
dec
aaa
inc
movsl
inc
shrb
mov
cli
repnz
mov
push
add
xor
jmp
jge
pop
mov
jno
jbe
addr16
pushf
rorb
rclb
jne
notl
mov
jle
sub
adc
cmp
or
xor
pop
mov
lea
fmulp
cmp
or
outsb
dec
lds
mov
into
dec
jns
out
cmp
mov
pop
inc
ljmp
mov
in
adc
int
xchg
out
or
test
icebp
ds
xchg
add
fimull
insl
mov
adc
xor
nop
xchg
sub
jae
stc
jp
add
aam
popf
icebp
fcomip
fists
push
jae
or
add
mov
cmp
insl
adc
pushf
syscall
push
ror
cmp
enterw
mov
fistpl
push
fsubrs
add
pop
pop
cli
jnp
mov
popa
sbb
icebp
lock
sarb
jmp
std
out
xor
push
adc
jbe
lahf
rcr
pusha
push
jno
mov
mov
push
out
xor
idivl
xchg
test
mov
inc
clc
repz
pxor
mov
roll
fcoml
mov
cmc
test
adc
sahf
mov
sbb
rcrl
push
mov
mov
ret
adc
jl
mov
call
sub
xrelease
lds
pop
test
outsl
mov
lahf
out
push
jnp
or
mov
faddl
sub
add
out
popa
dec
dec
push
test
cmpsb
inc
movsl
scas
mov
loopne
jns
dec
test
adc
jo
adc
xchg
or
sub
mov
pop
fwait
mov
insl
sbb
adc
cmp
jmp
ja
cmpsl
lahf
fbstp
in
push
xchg
iret
stos
mov
cmp
out
stc
enter
loop
ret
iret
nop
scas
sub
sub
test
mov
pop
loopne
aad
and
rcr
movsl
bound
xchg
pop
jl
je
or
bound
mov
add
push
jb
xor
ficoms
js
and
xchg
mov
mov
inc
out
divl
and
sbb
scas
icebp
xchg
mov
mov
cmp
insb
mov
cs
dec
incl
flds
cltd
sub
std
fdivl
dec
rcrl
pop
int3
mov
int3
mov
mov
stos
out
jnp
xor
lret
int
imul
fdivrs
sub
adc
inc
dec
mov
les
pop
push
dec
stc
test
shll
mov
jmp
jge
movsl
fcmovnbe
pop
movsb
subb
out
out
push
mov
call
clc
adc
lds
movsl
inc
test
jp
cs
pushf
jp
xor
jl
inc
aad
jne
ficompl
inc
pop
adc
xor
das
mov
xor
push
sahf
mov
imul
fistl
dec
mov
cmp
es
xchg
mov
pop
cwtl
mov
dec
out
mov
pop
xchg
xchg
ret
sub
icebp
xchg
mov
test
pop
pop
jbe
push
dec
cmp
mov
in
jne
out
mov
mov
pop
je
ljmp
pop
cmp
nop
lcall
ret
push
aad
and
insb
out
lsl
int
mov
inc
aas
and
call
jge
test
lahf
mov
in
sub
and
xchg
pop
mov
mov
inc
aad
sub
pop
pop
addb
cmpl
fcomip
and
mov
cmp
sbb
aaa
les
push
jge
fists
push
pushf
pop
popa
mov
stc
orb
ss
fimull
cmp
fucomip
stos
lea
fwait
pusha
lcall
fildll
lahf
dec
les
xchg
lret
mov
scas
and
xorl
icebp
aad
jg
or
arpl
mov
sub
call
mov
mov
cmc
pop
xor
dec
xlat
or
jmp
fisttpl
ds
test
and
mov
out
test
insl
stc
shll
xlat
sti
push
aam
and
aad
daa
mov
jl
inc
pop
pushf
mov
lods
aam
test
loopne
test
pop
in
xor
stc
sti
stos
cli
and
shll
in
sbb
push
int3
xchg
test
push
jbe
adc
add
sub
ljmp
jae
enter
leave
xchg
adcb
and
jbe
mov
sub
push
adc
es
notb
jnp
dec
int
scas
jg
ret
pop
ds
shll
sub
pop
fstps
lret
ret
inc
sti
xor
je
mov
addl
jne
add
ret
std
pop
incb
dec
ret
daa
lock
movsb
std
out
lcall
fsubrs
jecxz
adc
mov
cwtl
cltd
in
rclb
popf
dec
icebp
cmp
inc
popa
fadd
fcoms
mov
jne
xor
stos
inc
inc
arpl
xor
insb
outsb
sarb
adc
mov
pop
inc
popa
jge
and
out
sub
dec
mov
movl
test
lock
lods
jb
jb
inc
fcomps
repz
jp
test
jl
arpl
cmp
insb
jne
cmp
fnsave
repnz
sbb
sarb
fistl
jp
pop
sub
pop
test
out
cmp
sbb
nop
test
pop
out
enter
push
adc
shrl
dec
cmc
fnstenv
mov
pop
mov
push
xchg
push
mov
and
cmc
test
out
gs
fstps
cli
out
loope
sarb
mov
mov
in
mov
or
test
sub
mov
mov
out
push
lret
js
test
jnp
push
prefetch
or
jmp
lods
shlb
jl,pn
es
sub
or
sahf
cmp
fcmovb
fmull
mov
mov
testb
into
test
shlb
aam
jmp
push
out
mov
movsl
repnz
aam
jns
mov
clc
and
add
and
dec
jo
push
inc
adc
or
mov
mov
xchg
push
push
and
adc
adc
push
mov
mov
add
mov
addr16
sub
adc
cld
sbb
popa
repz
jecxz
cmp
dec
out
push
pusha
lret
mov
aam
jmp
repnz
cmc
cmp
xor
add
pop
push
xor
orl
imul
scas
inc
mov
mov
std
mov
outsb
push
rorb
out
or
xlat
lcall
sahf
push
mov
call
ss
cmp
addr16
sub
xchg
jl
pop
pop
mov
mov
and
cld
pushf
jmp
ror
mov
sbb
lahf
sbb
push
arpl
mov
shrl
pop
and
shrl
xchg
rorb
lret
dec
inc
mov
insb
std
hlt
xchg
xchg
add
mov
lods
mov
rclb
fldenv
add
pusha
xchg
push
jbe
cli
mov
mov
and
fidivrl
mov
mov
jecxz
xor
push
mov
sbb
jg
mov
lea
cmp
or
sti
aad
jg
inc
and
cmpsb
rcrb
sti
pop
and
stc
or
dec
xchg
ds
inc
mov
and
data16
push
mov
out
out
jno
lds
cwtl
fcmove
inc
in
push
xor
out
cmp
push
mov
push
pusha
out
movsb
inc
cmp
and
add
ljmp
je
xor
dec
sub
dec
lret
clc
in
ds
and
int
mov
jle
push
test
aam
divb
xchg
pop
push
push
sarb
lret
js
pop
mov
into
fisttpl
lcall
outsl
insl
lods
cmp
and
aaa
dec
and
test
lret
mov
add
nop
push
mov
std
jl
jbe
aam
or
pop
or
mov
test
nop
rcr
sahf
dec
adc
push
sbb
int3
adc
mov
and
popa
std
mov
cli
fldt
loopne,pt
push
adc
pop
lods
adc
inc
adc
mov
mov
cmp
push
std
mov
dec
inc
imul
and
xchg
cmpsb
cmpsb
xor
jl,pt
fistl
adc
scas
dec
dec
fld
add
and
add
pop
pop
in
imul
xlat
cld
or
out
mov
sbb
sub
loop
outsb
int3
xchg
adc
aaa
stos
and
xchg
lret
leave
or
lcall
test
xor
fs
push
pusha
clc
cmp
rcrl
mov
mov
jbe
lea
inc
or
jp
cltd
das
jns
push
ror
cs
scas
jg
dec
jbe
outsl
loop
pop
cmp
test
mov
shll
cmpsb
mov
sbb
mov
adc
std
mov
movsl
mov
negb
sbb
lea
and
shll
or
or
mov
mov
cs
pop
jae
repnz
cmpl
mov
ds
jne
fadds
repnz
negl
mov
int3
pop
add
pop
test
cltd
push
notl
int3
xchg
gs
es
sub
inc
pop
mov
pop
xchg
pushw
fidivrs
loop
xlat
sub
je
pop
fs
and
loopne
jg
jg
cmpsb
sub
jl
popf
shl
add
add
cs
out
popa
pop
push
or
pmaxsw
push
pop
cmpl
or
or
loope
and
and
dec
and
shll
hlt
pop
cmovo
pop
mov
out
mov
sbb
push
mov
clc
jmp
jb
cmp
clc
mov
fwait
add
cmp
fidivrl
dec
in
icebp
cmp
packsswb
cmp
test
cld
js
mov
lret
neg
cs
sub
sbb
in
leave
and
cwtl
xor
shlb
push
lods
mov
insl
mov
scas
les
sub
jae
mov
xchg
mov
clc
std
mov
xchg
add
cmp
lcall
dec
push
inc
add
xlat
dec
xor
xorl
test
out
adc
les
jb
cmp
push
es
cs
mov
insl
xchg
ja
cmp
rorb
cwtl
fwait
jmp
popf
push
popf
arpl
mov
shl
movsl
nop
out
or
xor
subb
xor
cmpsl
mov
or
rolb
push
scas
adc
push
inc
loope
mov
fisubrs
or
into
fidivrl
adc
and
lcall
das
jle
enter
push
into
push
aaa
ds
andl
mov
insb
cmp
and
cltd
xor
out
mov
orl
jg
scas
in
lods
pop
or
push
imul
cs
pop
push
rcrb
cmp
insl
movb
faddl
call
sbb
repz
fldt
push
arpl
and
push
sub
rorb
pop
fs
inc
xor
mov
popf
std
fcmovnu
sub
xchg
cmp
jecxz
les
push
hlt
sub
out
jbe
mov
shrl
push
in
clc
or
test
pop
xchg
sub
push
rcrl
out
pop
sbb
pop
pop
jg
push
xchg
cmc
sub
fistl
lock
mov
cmpb
xchg
sub
sahf
ss
lahf
fldenv
jb
enter
or
sti
mov
pop
and
push
clc
shll
or
mov
xchg
add
stc
les
cltd
dec
stos
pop
rcr
out
shrl
data16
dec
movsb
rcrb
daa
stc
cmpsl
ljmp
add
inc
dec
mov
and
xor
in
int
insb
pop
sarl
das
outsl
push
imul
adc
shr
cmp
stos
sti
push
inc
hlt
arpl
jb
out
xchg
fdivrp
mov
mov
pop
imul
mov
test
out
out
outsb
cmp
mov
sub
adc
std
jg
out
addb
cmpsl
xor
mov
or
int3
push
imul
jg
rcrb
mov
aaa
inc
push
jmp
fwait
cmp
int
insb
sub
fwait
std
arpl
les
xor
out
xchg
dec
js
ret
mov
xchg
scas
and
ljmp
outsl
push
shlb
ja
mov
dec
mov
les
xchg
push
or
andl
insl
orl
lds
add
inc
into
or
sarb
inc
es
adc
loope
lock
out
and
jae
or
popf
adc
xchg
push
xchg
mov
das
cmpsl
mov
enter
das
push
addr16
dec
loop
loope
movsl
fwait
pop
ja
push
pop
pop
dec
push
fcmove
xchg
adc
xor
adc
arpl
pop
call
pusha
mov
jnp
in
fwait
int3
arpl
stos
inc
xor
adc
xor
int3
stc
xchg
sti
shll
ds
or
fimuls
and
int3
adc
scas
push
ljmp
sub
add
jle
lret
into
xchg
sub
lods
xchg
dec
inc
int3
or
xchg
test
push
or
and
ffree
xlat
stos
cmp
cmpsb
inc
shlb
movsb
int3
scas
sbb
mov
out
lods
popa
test
das
jl
and
push
sbb
in
and
xor
push
in
cli
retw
lock
sub
in
cmp
push
ds
pushf
scas
fsubr
sbb
push
xchg
jae
cwtl
jnp
inc
pop
inc
add
dec
ja
jb
iret
frstor
test
cwtl
mov
mov
xchg
movsb
stos
outsb
inc
lret
inc
jb
fwait
add
mov
sbb
jmp
xorl
lods
or
add
add
mov
inc
outsl
test
mov
inc
mov
mov
lcall
shlb
fidivrs
dec
testl
jle
loopne
inc
addr16
out
or
lock
pop
jmp
jns
mov
jne
rorl
sbb
dec
mov
mov
popa
mov
jg
ljmp
push
jno
imul
cmp
inc
sbb
loope
sarl
enter
negl
mov
dec
mov
inc
sbb
mov
lods
cli
adc
jne
movl
jecxz
push
jp
mov
repnz
fcmovne
idivl
dec
cld
int
fistl
lods
in
test
ja
insb
xor
add
aaa
inc
aas
and
cmpl
leave
pop
pop
repz
jge
inc
push
cli
pushf
cmpsl
lods
mov
xchg
std
stc
fimuls
xchg
mov
leave
jbe
pusha
mov
add
inc
daa
mov
cmp
sbb
fs
dec
sub
jae
pop
pushf
lcall
test
fwait
jnp
imul
test
dec
lret
pop
mov
popa
call
cltd
sbb
call
incb
mov
pop
adc
inc
adc
dec
pop
mov
mov
inc
inc
add
dec
adc
push
xchg
lret
std
sbb
imul
test
sub
push
push
jbe
sub
loop
cli
jp
pop
les
sub
ret
lds
add
mov
shll
cli
mov
mov
lcall
cmpsb
fwait
in
pusha
lcall
or
mov
xlat
pusha
dec
or
jl
lcall
or
lods
adc
repz
call
push
jecxz
jno
stos
rorl
jmp
adc
cmp
adc
stos
fsub
push
cmpsl
push
push
pop
dec
mov
dec
int
sbb
or
rcl
add
mov
in
int3
pop
mov
or
cmc
sub
in
adc
sub
hlt
xchg
jb
stos
cmp
fdiv
popf
mov
mov
sbbl
fnstsw
cmp
incl
pop
stc
stos
cmp
shll
imul
add
dec
popa
xor
icebp
bound
test
mov
dec
dec
push
mov
popa
pop
add
add
cmpsl
std
scas
xchg
push
cmp
inc
jo
cmc
fs
xchg
mov
add
xchg
cli
lds
pop
jecxz
cld
xor
sbb
pop
push
decb
sub
aas
dec
fdivrl
into
cli
fdivrs
inc
pop
jp
mov
sbb
psadbw
pop
cmp
or
sub
add
jge
out
xor
adc
mov
push
and
testl
jmp
jno
mov
push
pop
movl
mov
xlat
std
or
sbb
in
das
pop
mov
add
inc
adc
sub
andl
insb
or
pop
scas
ja
repnz
xchg
pop
mov
addl
cmc
imul
clc
inc
sbb
stos
sub
jo
push
pop
or
pop
testb
cmp
fldt
adc
mov
mov
ljmp
lock
je
in
adc
push
punpckhbw
fiaddl
roll
aam
pmuludq
sti
mov
sub
dec
jg
and
insb
imul
ret
jno
bound
cmp
sahf
lock
sub
mov
cmp
fimull
or
fwait
sbb
mov
jp
nop
aaa
jecxz
or
mov
inc
outsb
loopne
inc
mov
cs
mov
popa
xor
jp
jmp
jl
cmpsl
or
pop
cmp
adc
ja
fstl
repnz
mov
loope
jg
inc
test
nop
test
mov
sub
pop
out
or
mov
mov
sub
mov
out
mov
push
mov
mov
das
pusha
mov
mov
push
adcb
jmp
jns
mov
iret
adc
loopne
in
scas
adc
cwtl
xor
push
push
sub
push
jnp
lcall
sub
daa
push
sub
test
sbb
lock
xchg
or
test
xchg
sbb
xchg
xchg
mov
mov
rcr
mov
scas
cmpsl
cmp
inc
pop
push
in
or
test
inc
mov
into
mov
cmp
ret
fisubs
out
and
push
add
sbb
dec
data16
outsl
lret
hlt
iret
cmp
faddl
hlt
in
dec
nop
xchg
cmp
sbb
mov
mov
and
add
adc
jne
sub
push
test
leave
cmp
lods
jge
scas
imul
shrb
push
jae
data16
pop
push
or
adc
in
imul
hlt
outsl
pop
mov
das
adc
mov
std
mov
mov
jbe
ds
out
cli
hlt
xorl
out
and
jl
dec
push
jle
test
pop
sbb
xchg
incl
mov
jnp
jp
mov
pop
sbb
push
cmp
lods
push
sub
xor
sub
jnp
jns
es
mov
icebp
in
cltd
mov
cmp
push
std
incb
mov
add
xor
shr
jl
jle
test
and
rol
fwait
xchg
aaa
inc
push
add
cld
adc
add
bound
fstl
xor
std
cmp
fnstenv
push
sub
ja
push
in
or
scas
pop
push
outsl
adc
jg
pushf
lea
sti
jmp
sbb
adc
push
cmc
push
jg
outsl
and
sub
push
enter
mov
or
jmp
mov
repnz
pop
push
inc
adcl
or
scas
dec
adc
sbb
mov
arpl
jp
pop
or
subb
or
sub
mov
movsb
mov
inc
popf
int3
mov
xchg
nop
sub
and
pop
jmp
mov
pop
pop
or
jae
call
pop
pop
mov
or
cld
pop
add
stos
sub
push
dec
int3
xorb
xchg
mov
pop
ja
dec
nop
lods
pop
adc
dec
ds
pusha
cld
mov
mov
mov
mov
cmpsl
inc
sbbl
adc
xor
push
aaa
decb
jns
test
loopne
jnp
add
aas
repnz
movsb
fs
pop
je
xchg
out
adc
hlt
sub
or
jbe
in
pop
dec
and
rcr
adc
cmpl
mov
hlt
xchg
ja
sbb
xchg
out
pop
test
outsb
pusha
mov
xchg
sub
ret
in
scas
add
cmp
push
or
inc
movsb
in
fadds
psubusw
inc
nop
xchg
push
or
sub
inc
sbb
sbb
mov
in
pop
xor
stos
jae
mov
test
ljmp
insb
ret
lds
push
xchg
outsl
xchg
jge
add
int3
push
mov
sarb
cmpsb
and
int
std
add
out
out
fsubrl
add
sbbb
push
outsb
shll
sub
cmp
adc
call
sub
mov
cmpsb
mov
mov
cli
in
loope
xor
data16
pop
fstpl
flds
sub
out
cmp
mov
pop
xchg
cld
cs
inc
sahf
or
rol
or
orl
jl
mov
adc
pop
loop
sub
lret
jp
loop
jno
mov
std
pop
ss
or
push
in
and
rcrb
mov
xchg
test
cmp
test
pop
inc
mov
ret
sub
pop
mov
lret
xor
loop
mov
sub
jp
sub
xchg
xlat
and
dec
in
es
inc
in
push
lds
test
in
pop
lret
cmp
xchg
jo
loopne
push
test
xchg
mov
imul
les
popa
out
fcmovnb
pop
xor
dec
and
dec
pop
mov
push
inc
mulb
cmc
mov
imul
cvtps2pd
rcll
xor
test
xor
lods
xchg
into
xor
push
fisttps
int
jae
mov
ss
xor
add
pop
mov
imul
dec
enter
add
dec
inc
mov
rcrb
ljmp
xchg
cmp
scas
and
mov
cmpsl
pop
push
clc
shrb
xchg
fidivrl
sbb
lcall
cld
sub
xor
adc
xchg
xchg
sub
jb
out
shl
in
testb
pop
adc
fsubs
sub
inc
mov
fisttpl
jg
pop
addr16
inc
data16
stos
dec
add
adcl
mov
cli
mov
mov
xchg
outsl
repz
jb
and
add
inc
loope
adc
add
loop
push
test
sbbl
ret
int
adc
cs
movsl
insb
pusha
mov
xor
cmp
scas
out
clc
iret
cs
shrb
push
adc
ds
fadds
mov
shl
pop
or
dec
sub
in
cli
bound
hlt
dec
lea
fists
mov
lret
jecxz
and
xchg
cld
or
sbb
lahf
and
add
nop
xchg
fs
adc
xor
int
sarb
push
pop
dec
inc
shrl
fisubrs
decl
xchg
jp
sarb
cltd
mov
xchg
sbb
mov
add
jecxz
sbb
mov
and
and
cmp
aad
lret
sbb
lret
add
sub
das
cli
test
int
mov
pop
pop
int3
mov
xor
ljmp
fistps
jo
pushf
jb
mov
adc
lds
and
adc
sub
dec
or
sbb
ficoml
sub
mov
loop
push
cs
loop
jg
popa
cltd
lcall
cmp
adc
pusha
rcl
add
push
addb
jbe
xor
jno
insl
inc
shrb
rorl
aas
mov
sub
mov
and
cmc
cmpb
mov
stc
fiadds
jge
loope
dec
sub
mov
scas
repnz
jns
jg
and
mov
inc
mov
xchg
mov
ljmp
mul
cmp
mov
pushl
inc
xchg
movsl
xorl
mov
inc
adc
out
mov
dec
cmc
mov
notl
jbe
stc
loop
xor
out
pop
movsb
out
aaa
cmpsb
jbe
jge
movsl
inc
popa
bound
sub
ja
frndint
mov
push
stos
and
jns
xchg
repz
lahf
sub
inc
push
js
clc
adcl
mov
adc
into
push
or
in
cmp
in
pop
scas
mov
mov
les
mov
push
out
mov
or
out
pop
lcall
xlat
insb
movsl
repz
sti
inc
clc
adc
hlt
and
xchg
cs
addr16
push
mov
test
movsb
sub
scas
mov
inc
dec
xchg
ljmpw
xor
add
push
repnz
mov
scas
jno
mov
movsl
adcl
push
mov
std
movsl
sbb
cmp
scas
rol
mov
fcmovu
imul
sub
ret
xchg
sahf
ds
push
jmp
aam
repnz
push
lods
shlb
jmp
pop
mov
scas
loope
cmp
sub
jl
adc
and
call
repnz
add
sub
scas
test
xchg
out
adc
dec
pop
fdivr
push
push
sbb
imul
outsb
cli
or
out
pop
lcall
pushf
dec
addr16
sarb
push
cmp
in
pop
iret
inc
enter
jno
jge
pop
xchg
add
push
jl
aam
enter
push
push
cmp
pop
sub
shlb
sti
push
adc
orb
cmp
push
cmp
adc
mov
inc
pop
mov
aam
add
xchg
stc
dec
decb
jbe
adc
ss
jns
imul
int3
cmpsl
adcl
pop
icebp
xchg
das
or
xchg
or
xor
pop
clc
bound
sbb
pop
add
jge
std
mov
xchg
test
cs
cmp
lods
lcall
mov
ss
sbb
jnp
mov
orb
sub
mov
in
inc
mov
mov
or
repnz
and
add
pop
orl
mov
push
scas
cmp
jmp
mov
lret
or
xchg
sub
fadd
push
push
or
pop
jp
jp
cmp
sub
filds
adc
sbb
xchg
push
xchg
dec
pop
enter
push
jb
les
int
clc
cmc
mov
ljmp
aas
data16
outsb
add
sbb
fildl
fsubrs
jbe
jne
adc
outsl
sahf
mov
xchg
xor
jmp
mov
stc
add
pushfw
clc
dec
push
mov
dec
rclb
xor
mov
loop
outsb
sbb
stc
jns
decl
push
sti
aaa
mov
scas
or
iret
int3
xor
lock
decl
xor
mov
bound
adc
mov
nop
fcmovne
dec
inc
jbe
sbb
jnp
mov
imul
dec
outsb
xor
shr
add
cltd
xor
push
xchg
xor
sbb
imul
add
mov
cmc
pop
arpl
pop
cmp
mov
inc
aaa
lock
mov
rolb
mov
test
repz
push
jp
sti
inc
lock
cmpsb
fsave
sub
ret
push
outsb
das
loop
add
sbb
movsl
popf
mov
lds
std
and
lahf
cmc
mov
fldt
jmp
shll
add
mov
js
je
push
js
add
lds
inc
pop
push
dec
push
cmp
cmpsb
dec
test
mov
fldcw
jnp
bound
outsl
inc
cmpsb
popf
cmp
movsb
sbb
iret
enter
popf
sbb
pop
or
xchg
pop
mov
xlat
in
pop
and
test
in
add
dec
xlat
adc
adc
jbe
cmp
shlb
xlat
add
mov
fs
insb
ljmp
mov
testl
pop
scas
ss
xchg
mov
jecxz
jns
inc
mov
sahf
push
and
cmp
subl
xchg
sbb
mov
cmc
stos
or
mov
add
mov
add
imul
mov
scas
sbb
sbb
xor
mov
sbb
mov
pop
aaa
push
outsl
jl
xchg
mov
mov
mov
sbb
cmp
jns
insl
sbb
inc
sub
insb
addr16
jle
inc
jge
mov
lock
jmp
xor
sarb
pop
sub
and
or
cwtl
cmp
add
push
lret
std
push
inc
mov
addl
cmp
push
test
or
in
sub
outsl
in
adc
shlb
loope
inc
fnstenv
jo
mov
add
daa
push
negl
enter
clc
sbb
xchg
mov
xchg
fs
cmp
sti
or
mov
xorl
sbb
cmp
sbb
push
int
leave
ret
adc
lods
xchg
mov
repz
xchg
loope
jnp
fwait
insb
jb
and
test
ret
outsb
loopne
mov
lahf
xchg
pusha
cwtl
test
cmp
out
test
leave
js
out
dec
scas
inc
fwait
sub
adc
lret
daa
aaa
fnsave
adc
clc
adc
sbb
in
xchg
into
test
out
hlt
xchg
xchg
cmpsl
enter
jp
inc
lods
fsubrp
lds
jecxz
or
cmp
jecxz
fs
out
cli
das
pop
popa
xor
xor
mov
push
inc
shll
std
xchg
xor
cmp
sbb
daa
int
cwtl
pcmpgtw
fidivl
sub
push
fdiv
jae
cmp
dec
movsb
push
and
cmpsl
cmp
jno
bound
mov
adc
adc
push
xchg
ja
push
hlt
push
inc
xchg
dec
xchg
addr16
movsb
push
jle
int
out
pop
movsb
dec
je
repz
dec
xchg
push
jbe
imull
and
xchg
mov
aad
jl
icebp
stos
cmpsb
movsl
in
push
mov
mov
dec
test
js
push
mov
ret
xchg
mov
xchg
mov
mov
xchg
pop
fdivl
pushf
cli
out
mov
and
mov
insl
imul
sub
fadds
ds
sarb
incl
mov
xchg
cmp
or
outsl
push
cmp
jae
loopne
xchg
addr16
test
pop
inc
pop
test
loope,pt
or
dec
in
jl
sub
jo
bound
arpl
fstp
fimuls
icebp
pop
push
call
shrl
pop
dec
cmp
push
xor
aam
dec
rorl
adc
pusha
icebp
pop
mov
jmp
cmp
jg
jge
and
add
popf
imulb
daa
rcll
jbe
mov
dec
lea
rolb
out
lcall
sbb
mov
in
cltd
fsin
add
rorl
shl
leave
imul
insl
jb
sub
push
push
lret
adc
popa
push
lcall
repz
mov
mov
ret
out
cli
pushf
loop
shlb
clc
insb
adc
add
in
cmp
push
mov
inc
fistl
cmpsl
mov
nop
or
cmp
imul
out
sub
es
lods
add
dec
mov
popf
cmp
inc
cmp
xchg
adc
and
or
push
pop
inc
mov
xchg
rorl
pop
mov
cmpsb
movsb
dec
pop
mov
adc
jno
mov
push
cmp
and
push
mov
mov
sub
pusha
adc
sub
ret
mulb
adc
cmpsl
out
jns
adc
dec
or
mov
lahf
lret
sub
inc
add
or
sub
or
gs
sub
pshufw
or
xchg
aad
add
dec
stc
xchg
in
xlat
sbb
in
pusha
les
jmp
ret
xchg
cld
or
gs
jo
xchg
add
loope
inc
testb
popa
filds
inc
lret
mov
cmp
data16
and
mov
je
inc
adc
lods
clc
movsb
push
outsl
adc
decb
add
dec
mov
jmp
add
and
fwait
rcrb
icebp
insb
aaa
push
dec
cmc
mov
aad
sub
xlat
inc
ds
lret
lea
cmp
aaa
mov
xchg
cld
push
test
sub
cmp
jne
fnsave
mov
inc
jno
pop
pop
adcb
pop
fisubs
jmp
jecxz
negl
js
cmp
sarb
or
fcmovnb
and
leave
out
std
out
xchg
cmp
push
sahf
rcll
jg,pt
adc
sbb
roll
call
mov
pop
aad
add
mov
arpl
test
mov
lods
xchg
mov
dec
and
jb
cmp
add
add
adc
inc
pusha
and
jb
and
jge
call
xchg
adc
push
push
and
xor
lcall
in
enter
add
mov
iret
fbstp
cld
add
lret
notb
pusha
dec
int3
xchg
fcom
jecxz
fcompl
cmpsb
daa
mov
test
xchg
fistl
inc
cmp
aam
enter
mov
outsl
xor
push
in
and
sub
sbb
sbbb
sbb
cmp
push
inc
aas
enter
xchg
movsl
xchg
ja
mov
mov
in
inc
aad
mov
cmpsb
pop
jae
mov
add
nop
cld
lahf
mul
int3
fadd
out
aaa
push
es
inc
jmp
movsb
in
cmp
and
push
in
push
int
add
insl
push
add
jecxz
dec
out
jbe
xchg
cmp
sbbb
adc
cmp
push
jg
sbb
mov
add
push
pop
sub
insl
nop
xlat
xchg
jnp
pusha
shlb
cmp
addb
ljmp
orb
es
adc
xchg
dec
cli
pand
popa
ljmp
jno
and
dec
test
pop
cmp
daa
pop
popf
pop
sbb
mov
lcall
mov
fwait
mov
lret
fcmovnu
xchg
ss
mov
pop
enter
out
es
sbb
pop
sti
in
cld
mov
es
cltd
xlat
jnp
cmpsl
mov
sub
push
jle
inc
sbb
sub
dec
adc
xchg
jg
movsl
pop
arpl
in
and
jae
inc
aam
adc
stc
push
ds
jg
jecxz
cld
adc
das
daa
enter
in
sbb
jbe
or
jecxz
iret
ret
insl
imulb
aad
adc
lcall
fcomp
pop
sub
addr16
and
ret
je
mov
lret
fcompl
jge
int3
mov
mov
fisttpl
lods
and
jb
dec
andl
rclb
fmull
sbb
mov
lea
sub
pusha
lods
push
fstpl
std
shll
xchg
div
pop
in
jae
push
repnz
mov
jb
sbb
aas
xor
sbb
stc
mov
xchg
xchg
icebp
xchg
cmp
sbb
out
dec
sahf
dec
mov
pop
test
inc
dec
mov
and
loope
addr16
ret
test
sbb
mov
popa
add
xchg
scas
jecxz
movsb
sbb
rolb
cwtl
and
cmp
push
sbb
ljmp
mov
mov
sbb
lds
addr16
shll
adc
jo
push
xor
cmp
xchg
sbb
call
in
sbb
add
mov
shll
mov
sbb
into
es
push
mov
sbb
sub
xchg
or
push
outsb
icebp
mov
lods
and
push
jno
ret
hlt
push
arpl
mov
mov
sbb
mov
in
mov
repnz
sub
sbb
pusha
jmp
fucompp
leave
push
lret
fildll
stos
in
sub
movsl
test
vfnmadd132sd
loop
mov
pop
jecxz
and
mov
push
addr16
mov
mov
fstps
orb
and
push
in
and
bound
jo
pop
repz
cmpsl
sarb
aam
cmp
jne
pusha
lods
or
lds
inc
daa
and
inc
or
push
sub
xchg
or
addr16
mov
addl
dec
clc
loope
out
push
call
mov
push
push
sbb
fdivl
or
mov
fwait
les
dec
inc
push
out
pop
and
inc
sub
sub
loope
xchg
mov
fildl
notl
fsubs
shrb
mov
push
lret
add
push
test
mov
sub
test
out
or
sar
push
adc
dec
push
push
pop
pop
shll
lcall
in
mov
jmp
pusha
or
jne
cltd
mov
cmpsl
lock
ds
ficomps
insl
pop
flds
out
jne
push
ds
push
imul
add
out
xchg
sbb
pop
scas
es
adc
lods
lsl
fucomp
jb
cmpb
mov
test
xchg
loope
add
pmuludq
in
cmpb
mov
rcrl
jns
jo
popf
into
mov
dec
lret
xor
mov
inc
xchg
out
loopne
int3
xchg
add
sbb
sub
cld
mov
pop
add
es
imul
mov
fisttps
cmp
xchg
aaa
xchg
sub
ret
mov
xor
in
sbb
mov
xor
or
pushf
popa
or
enter
push
fadd
outsl
push
jb
xchg
or
fdivs
cli
sbb
mov
lret
mov
mov
or
mov
xchg
pop
bound
popa
roll
sahf
xorb
and
cmpb
cmp
cvttps2pi
stc
xchg
fwait
jl
push
roll
inc
xchg
clc
mov
cmc
adc
dec
iret
mov
xor
mov
in
cmp
or
push
in
and
idiv
inc
push
mov
sub
or
stos
add
xchg
popa
mov
mov
dec
pop
sub
add
leave
inc
rep
mov
scas
push
psllq
pop
leave
jo
in
and
int3
in
or
loop
pop
pop
lds
push
inc
xchg
into
movsb
mov
sub
adc
shl
sbb
ljmp
mov
data16
rorl
adc
js,pt
arpl
sbb
xchg
ret
lods
out
add
rclb
fimuls
lcall
dec
pop
pop
mov
cmp
mov
pop
pop
mov
xchg
pop
notb
je
out
dec
xchg
push
mov
mov
lret
sbb
mov
test
inc
daa
test
into
mov
push
mov
daa
inc
push
jns
or
mov
lret
push
cmp
mov
das
mov
out
pop
arpl
push
inc
test
cs
fisttpll
ret
addr16
mov
add
jmp
adc
dec
cld
mov
test
cli
js
arpl
xor
fcmovu
rcr
lret
pop
scas
cmp
js
pop
fcoml
mov
mov
mov
xor
wbinvd
lcall
pop
arpl
jns
je
inc
fists
movsl
stc
fists
decb
xlat
mov
fldt
push
mov
sahf
mov
jo
out
outsl
scas
shll
dec
cmpsb
out
cltd
icebp
xor
push
sub
daa
dec
cs
decb
xchg
pop
leave
fwait
mov
dec
inc
push
aad
cmpsb
sub
push
dec
xchg
mov
mov
icebp
nop
call
dec
inc
lcall
loopne
fistpll
sahf
cmp
dec
cld
inc
jge
mov
push
and
pop
nop
push
pop
cmp
out
jge
or
fstp
adc
pop
stc
cld
sbb
sti
enter
jne
mov
add
xchg
jge
hlt
mov
xchg
push
add
xor
aas
pop
add
cmp
les
or
fcoml
cld
cmp
add
pushf
or
sub
hlt
bound
aaa
xor
dec
or
cltd
mov
shrb
icebp
xor
and
pop
cltd
sbb
iret
sbb
mov
cmp
xor
popf
lahf
lcall
popf
je
ret
adcb
pop
testb
bound
mov
lret
sbb
lock
add
bnd
sbb
sub
jle
das
je
xchg
sub
add
push
inc
adc
add
xchg
lcall
filds
push
fs
dec
fsubrl
sbb
and
add
sti
push
xchg
rcrl
adc
in
sub
iret
incl
and
pop
stos
pop
dec
dec
fstpl
test
stc
adc
or
test
or
pushf
ret
jae
outsb
xchg
loop
xor
test
icebp
ds
jbe
fs
push
xor
cmp
loop
push
std
lahf
sub
ret
xchg
sub
scas
jnp
push
push
dec
xor
enter
lods
addr16
out
ljmp
xacquire
test
negb
or
jae
cmp
out
adc
inc
mov
fbld
lods
sub
mov
clc
or
jae
and
mov
and
jbe
jo
std
mov
enter
cs
mov
inc
test
mov
and
dec
lret
xor
and
sub
cmp
pusha
push
shr
es
dec
lcall
jbe
xorl
sbb
pop
dec
movsb
or
pop
pop
nop
sub
pusha
adc
in
repz
mov
xchg
sbb
in
stc
cmpsb
inc
inc
out
pop
in
outsb
dec
add
xor
pushf
mov
pushf
xchg
cmpsl
test
aam
xchg
test
push
in
std
mov
mov
mov
sarb
pop
cmp
pop
bswap
xor
push
pop
cmp
cmpsb
sbb
outsb
pushf
int3
mov
pop
push
pop
jns
lock
shll
mov
dec
mov
cmpl
aas
and
in
in
xor
movsl
sbb
jno
pop
sub
loopne
mov
scas
add
push
jae
mov
loope
fwait
shlb
sub
icebp
adc
inc
imul
dec
pop
daa
std
daa
jle
arpl
lret
pushf
mov
push
mov
xor
sub
loopne
sbb
push
mov
je,pt
or
mov
js
or
push
cwtl
iret
dec
addr16
adc
lock
jle
dec
ret
and
lods
sub
adc
leave
outsb
test
pop
fnsave
test
xor
test
stc
jo
test
mov
sub
sub
dec
popf
rolb
mov
cli
imul
pusha
cmp
test
shlb
jb
ss
rcr
pop
xchg
nop
repnz
xor
rorb
test
in
jmp
sbb
mov
xor
xor
mov
push
adc
cmp
add
sbb
mov
bound
mov
ret
and
fisubs
ficompl
cmpsb
jmp
xchg
dec
push
sti
jnp
pop
ja
gs
or
repz
jmp
fnstenv
and
ret
jl
sbbb
push
cmp
adc
xor
xor
test
mov
rcrl
dec
pop
aad
sub
imul
fidivl
jb
cmp
fistps
scas
push
sub
in
arpl
outsb
addr16
cltd
dec
stos
jnp
mov
in
push
inc
mov
jb
jmp
bound
fmull
xorl
scas
push
jns
fbld
mov
insb
adc
pop
lods
call
adc
jo
test
jne,pt
inc
xchg
sbb
xchg
sbb
shrb
lds
in
pop
ret
dec
push
dec
rcrl
popa
das
test
pop
sub
shll
xor
adc
je
imul
clc
dec
adc
icebp
adcl
xchg
and
jmp
push
and
notb
inc
cmp
sub
fmuls
cmc
mov
out
add
fdivl
in
or
inc
add
inc
xchg
pop
push
sahf
dec
iret
add
xchg
dec
xchg
insl
ljmp
sarb
arpl
test
and
push
fucomip
inc
movsl
push
daa
mov
insl
andb
daa
lods
jo
mov
cmp
roll
test
addr16
dec
mov
les
xlat
pop
dec
xorb
sub
outsl
jae
lock
mov
mov
in
pop
sbb
jg
xchg
mov
movsl
das
jb
jp
xchg
mov
int
rclb
out
call
push
loopne
mov
xchg
andb
pop
adc
mov
xchg
dec
sbb
dec
or
xchg
or
cltd
popf
jecxz
inc
jnp
mov
outsb
bound
int3
sbb
pushl
ud1
cmp
xchg
gs
mov
scas
jl
add
lret
fstpl
push
mov
idivb
sarb
loopne
adc
push
inc
into
ds
adc
adc
inc
mov
xlat
sub
lea
aad
mov
movsl
cmp
inc
lods
xor
xor
inc
insl
enter
dec
movsl
xchg
into
fiaddl
adc
sbb
adc
mov
das
sub
xor
cmp
sarl
sub
cltd
lcall
test
sbb
sub
inc
push
sbb
mov
aaa
cli
jbe
fsubl
dec
xchg
pop
xchg
in
dec
xor
cwtl
test
jbe
jae
and
fucomp
xchg
and
adc
test
dec
movsl
and
inc
data16
addr16
cmp
and
aam
mov
lcall
sub
push
cmc
add
add
pop
pop
in
in
orl
or
call
cmpsl
pop
inc
in
and
add
mov
cmp
cwtl
imul
sbb
mov
dec
ficomps
or
nop
imul
push
xor
mov
cmp
add
mov
sub
in
dec
pop
lret
xchg
push
jne
pop
sub
int
jne
push
out
loope
push
mov
or
cmc
push
ds
push
stc
popa
xchg
jo
nop
stos
xchg
pop
and
stc
outsl
sbbb
jb
std
jle
out
push
in
adc
xchg
or
push
into
push
adc
fstl
test
adc
lret
mov
out
fsubrp
and
bsf
adc
pop
xchg
push
mov
push
and
add
xor
add
and
in
sub
dec
mov
mov
dec
mov
hlt
test
jb
mov
inc
jo
pop
inc
ljmp
cli
inc
lret
pop
movsl
daa
xchg
jmp
aas
cld
stc
fdivs
push
lock
fldl
enter
pop
mov
mov
xor
in
in
xor
push
cltd
lods
movsl
sbb
sub
or
pushf
movsb
pushf
or
add
mov
pop
dec
mov
je
add
hlt
hlt
mov
dec
cs
int3
jecxz
add
or
cmp
daa
shl
nop
aad
inc
sub
rorl
add
nop
les
fsqrt
push
loopne
leave
xchg
add
pop
jp
fwait
inc
adc
add
dec
aaa
std
add
jge
lock
dec
clc
stos
das
push
mov
or
call
inc
scas
mov
ret
jo
mov
loop
addb
pop
stos
and
jp
mov
cmp
dec
sbb
dec
mov
push
fsubr
fucomip
cmp
scas
cmpsb
lcall
int
imul
popl
push
lock
sbb
daa
cmpsl
sub
sub
sbb
pop
out
mov
xor
cmpsl
xor
ljmp
push
xchg
mov
push
in
mov
cmc
iret
and
xchg
aaa
sbb
fs
adc
pop
adc
daa
mov
dec
add
ds
pop
xchg
je
add
jp
mov
lock
xchg
pop
stc
or
cmp
leave
lcall
mov
xchg
mov
xor
mov
imul
dec
sbb
xlat
mov
mov
push
cli
sbb
je
mov
iret
push
in
clc
sti
insl
xchg
or
cld
lds
into
rcrb
sub
or
mov
loop
cmc
fistpl
xlat
push
stos
fmull
mov
das
pop
cmpb
es
cmovns
stos
in
cmpsb
test
fwait
dec
dec
xchg
loopne
dec
adc
cmp
pop
sbb
data16
push
mov
and
iret
push
or
stos
xor
inc
and
mov
or
and
out
lods
or
xchg
fidivl
imul
sbb
sti
push
push
adc
adc
mov
lods
leave
shlb
rcll
jle
mov
subl
into
jns
inc
xchg
mov
jno
xchg
pop
rorl
sbb
mov
xor
clc
out
fisubs
jb
out
sub
push
jmp
and
mov
mov
jne
aas
int3
sub
test
ret
arpl
repnz
lahf
push
mov
jne
or
sbb
and
pop
push
dec
adc
pop
aad
adc
xchg
pop
cmp
ret
int3
and
xchg
out
mov
dec
and
add
cmp
cmc
imul
adc
ss
les
icebp
scas
xchg
je
popf
out
sbb
mov
sti
pop
xor
sbb
sti
int3
ss
push
ret
mov
lock
mov
xlat
xchg
inc
popl
adc
movsl
aam
shll
push
ja
outsb
jo
sbb
push
in
xchg
aaa
clc
imul
adc
repz
sar
cwtl
repz
mov
push
push
aad
icebp
push
movsb
aaa
loop
jg
fs
push
cmc
ja
shrb
mov
aam
adc
jns
mov
mov
xor
mov
shlb
out
mov
pop
dec
pop
xchg
loop
xlat
iret
push
adc
insl
push
and
xchg
ret
js
test
pop
mov
sahf
pop
leave
fwait
rcll
mov
cmp
add
pop
nop
fwait
rcr
out
lock
add
jno
mov
and
xor
mov
stc
and
add
mov
fidivl
insb
adc
ljmp
divl
std
xor
add
leave
shll
dec
mov
dec
dec
std
mov
sarl
repnz
aam
push
insb
sbb
dec
stos
and
test
cli
lds
enter
jmp
outsl
mov
push
aad
dec
adc
adc
filds
mov
fistps
sub
lock
shl
insb
add
push
fisubl
daa
movsl
sub
mov
pop
bound
das
xchg
cmc
imul
je
pop
pop
inc
pop
ret
jno
mov
xchg
xlat
ja
mov
cmp
push
adc
sub
daa
push
mov
gs
push
push
xchg
gs
lods
jge
inc
jl
jle
fwait
jno
fmuls
mov
xor
push
fidivl
cmp
add
or
cmp
adc
adc
mov
mov
aas
inc
mov
aad
or
adc
enter
pop
and
ret
loope
in
out
clc
mov
mov
sub
push
sub
cli
in
push
ror
bound
inc
pop
or
push
insl
cmpsl
daa
cmp
xor
mov
adc
or
sarb
xor
fs
cmp
repnz
add
xchg
jne
cmp
cmc
push
rcrb
sbb
sub
jnp
mov
lret
repz
rcrb
or
and
inc
inc
push
adc
xor
sbb
adc
push
stos
inc
add
aaa
jne
cmp
bswap
xchg
lahf
sbb
dec
loop
push
or
adc
mov
xor
xchg
testb
inc
push
push
iret
and
mov
jbe
pop
pop
insb
int
sahf
sbb
push
int3
lock
mov
ds
add
stos
cli
ss
cwtl
dec
in
push
movsb
jno
or
aad
insb
aam
scas
xor
test
mov
jne
xchg
sub
and
lock
gs
xorb
sbb
cltd
xchg
fisubrl
sbb
test
sbb
dec
cwtl
sub
pop
xchg
cmp
mov
jae
popf
push
insb
scas
or
fscale
notl
aaa
mov
and
jl
cmp
es
sahf
sbb
mov
pop
jp
fmuls
fildl
sbb
call
xchg
xor
cmp
sbb
sbb
imul
mov
js
dec
xor
in
shl
lods
dec
add
xchg
xor
mov
out
jl
or
mov
faddl
int3
mov
pop
sub
and
inc
push
call
aam
repnz
sbb
movsl
lret
repnz
jo
cmpsl
dec
inc
jb
jno
fstpt
add
pop
fidivs
inc
in
fistl
daa
xchg
fildl
xor
fwait
mov
jp
pop
cli
fildl
xor
rclb
inc
dec
fists
cmp
inc
sub
imul
repz
cmpsb
pop
adc
push
mov
out
jnp
sub
cmc
test
xchg
xchg
aad
push
jl
pop
stos
fadd
push
lret
add
ljmp
js
loop
fst
xor
push
add
aam
or
adc
sti
pusha
push
jp
scas
leave
shl
mov
mov
adc
xchg
lea
pop
insb
lahf
es
pslld
push
jbe
and
push
sbb
pushw
lods
mov
outsl
js
add
xlat
and
jmp
imul
notl
pop
cltd
pop
mov
mov
cmpsl
mov
pop
dec
fs
into
mov
cld
data16
push
in
jae
xchg
pusha
xlat
in
arpl
dec
cmpsl
cmpsl
cmpsl
sti
and
outsl
jg
sbb
das
add
push
ficomps
jg
push
and
xchg
inc
aaa
pop
push
add
sti
scas
mov
cli
cmp
xchg
aam
das
fwait
xor
mov
push
stos
enter
mov
pop
andl
push
inc
sub
mov
inc
into
jbe
and
push
cmc
in
push
and
jge
jbe
pop
roll
imul
lods
push
rorl
enter
fst
add
xchg
jecxz
jno
idiv
es
push
je
pop
push
and
insl
in
test
pop
fninit
lret
jne
fidivs
out
repz
dec
mov
xor
add
push
in
xchg
adc
sarl
sbb
inc
sub
test
or
push
outsl
adc
sbb
lea
out
adc
std
jbe
ret
addl
push
xor
nop
pop
pop
xchg
mov
sub
rolb
jb
repnz
sub
and
movsl
nop
repz
test
xchg
fildl
lret
push
out
gs
mov
cld
pushf
sbb
rcrl
xchg
mov
mov
push
jnp
les
shl
push
fimuls
mov
push
mov
pushf
pop
and
mov
or
test
push
mov
je
mov
lea
lea
testl
out
popa
push
sub
mov
dec
dec
mov
xor
mov
xchg
sbb
push
xchg
imul
cmp
jne
loope
sarb
into
aam
sbb
adc
cltd
and
jbe
lea
movsl
add
mov
movups
fucomip
mov
bound
dec
mov
jge
mov
pop
xlat
aas
bound
call
adc
mov
xor
jl
mov
inc
insb
sbb
sub
push
int3
inc
push
in
xchg
cmp
adc
jmp
arpl
fs
or
and
add
pop
inc
xor
je
inc
dec
cmp
or
or
xor
shrb
push
mov
push
dec
cmp
pop
xchg
in
aam
test
sbb
dec
rcrb
cmp
mov
xchg
mov
hlt
xchg
pop
mov
mov
mov
stos
cmpsb
loope
test
and
fiadds
out
sbb
inc
inc
pop
faddl
mov
pop
cmp
into
add
xor
dec
cmpsl
xchg
bound
mov
jns
pop
bound
lds
paddq
adc
addr16
jae
jnp
cmp
jns
dec
pop
ret
adcb
nop
clc
pop
pop
call
mov
inc
ds
hlt
or
push
das
icebp
push
cltd
in
or
je
je
cmc
jmp
mov
lahf
ja
lock
out
cmp
pop
cmp
out
xor
flds
push
shlb
xor
ret
dec
xchg
stos
mov
mov
push
push
or
and
aam
lahf
sbb
mov
add
sbb
shll
mov
jno
jmp
enter
sub
rep
xor
dec
add
dec
mov
sbb
dec
insl
or
cmp
mov
or
in
push
inc
movsb
daa
mov
lret
sbb
pushf
or
ljmp
cmp
test
dec
xor
lahf
cs
aaa
jmp
xchg
mov
mov
shlb
fldenv
inc
ret
subl
xor
push
pushf
cmc
movb
and
or
dec
stc
push
rcl
sbb
pop
lods
mov
mov
dec
mov
sub
add
and
syscall
jg
pusha
xchg
inc
pusha
push
es
ljmp
lret
pop
jb
movsb
and
jo
xchg
fwait
mov
push
sub
lahf
fisubs
ret
pop
mov
aas
xchg
sub
dec
test
mov
ss
xor
call
mov
ljmp
mov
push
pop
or
rorl
push
mov
leave
adc
inc
jmp
adc
xchg
rol
pusha
les
xor
dec
ret
clc
cmp
mov
push
mov
jo
aas
pop
push
out
push
scas
hlt
mov
sbb
mov
clc
lahf
sub
or
pop
mov
insb
cmpsl
and
std
push
int3
sub
mov
scas
rcl
push
and
loop
sub
cmp
shlb
and
sub
scas
aam
mov
jge
fwait
jmp
pop
shl
movsl
in
cli
inc
sub
in
jnp
faddl
cmc
or
dec
cltd
in
xor
daa
sbb
and
add
xchg
push
fmull
movsb
pop
loope
fmull
test
inc
or
in
test
mov
sub
loop
jmp
jne
add
rolb
mov
dec
popf
jno
int3
mov
inc
mov
insb
addr16
adc
sbb
jno
ss
cltd
insl
add
push
jmp
jne
mov
xabort
pusha
dec
imul
jo
dec
dec
pop
notl
sbb
fisttps
inc
mov
aad
imul
xor
and
rcrb
call
aam
cmp
stc
xchg
jns
lock
ja
pop
cld
cwtl
popa
std
mov
cmpsl
leave
scas
in
pushf
and
pop
push
dec
dec
xor
adc
mov
adc
adc
or
adc
adc
push
pop
add
lods
cmp
cmpsb
out
xor
mov
out
dec
xchg
subb
mov
cltd
add
stos
cmp
and
inc
loope
sarb
mov
es
clc
sbb
mov
out
cmp
xchg
pushf
adc
cmp
add
adc
cmpsl
mov
mov
leave
addb
adc
je
push
mov
movsl
out
push
movsl
mov
out
and
add
cmp
aam
leave
test
fwait
outsb
or
sub
rorb
jp
imul
mov
mov
cmp
pop
mov
dec
dec
jnp
xchg
mov
sub
movsl
lahf
ret
mov
scas
mov
xchg
scas
add
in
adc
sub
call
call
sbb
imul
pop
les
push
sub
dec
sbb
xchg
adc
mov
lods
ja
testl
jmp
pushf
aad
test
fisttpl
adc
mov
add
cltd
mov
inc
repnz
and
mov
je
popf
fnstenv
inc
jo
inc
inc
mov
stc
insl
out
dec
roll
in
inc
dec
and
jle
and
daa
jae
js
dec
mov
mov
mov
push
push
mov
jbe
cmp
cli
insl
test
scas
mov
push
aas
hlt
adc
ljmp
loope
cltd
sub
inc
pop
mov
jg
repz
in
popf
ficomps
iret
xor
inc
int3
in
jle
mov
je
loop,pn
inc
mov
push
hlt
push
push
pusha
sbb
lods
xorl
jnp
cmp
sbb
mov
testb
jl
rolb
loop
sub
fwait
push
cmp
mov
arpl
int
shll
dec
pop
sarl
sub
sub
xchg
cltd
mov
jecxz
call
pop
add
cmpsl
mov
inc
loope
pop
aaa
ret
insl
and
inc
in
in
icebp
fstpl
cwtl
xchg
jae
adc
stc
cmp
cmp
sti
aad
pop
adc
dec
mov
pop
fidivrl
push
dec
std
ret
cmp
call
sub
test
shll
mov
loop
jg
ljmp
insl
xor
arpl
cltd
orl
and
leave
and
push
bound
int3
jno
push
cmc
inc
mov
pop
jmp
sti
out
shll
out
push
or
push
int
jns
test
fbld
inc
outsb
push
adc
xchg
or
lods
addl
fwait
push
hlt
stos
add
add
sub
cmp
out
jno
js
hlt
adc
sub
jmp
push
pop
jno
push
fildll
scas
jnp
popf
push
cmpb
icebp
fcoml
mov
gs
adc
sub
xor
arpl
test
out
lods
js
inc
cmp
iret
push
sub
push
pop
mov
pop
ljmp
in
mov
scas
xor
outsb
ret
lahf
cmp
sub
cli
jns
mov
pop
repz
xchg
push
dec
pop
push
xchg
arpl
into
push
adcb
sub
cmpsl
jle
insl
nop
je
dec
xchg
xor
fsubl
and
sbb
pop
dec
cmp
lcall
fadd
dec
mov
inc
xchg
add
push
dec
cmp
jge
das
movsb
scas
jmp
inc
cmp
mov
jne
pusha
xor
mov
mov
add
movsl
pop
les
lret
mov
pop
cmp
cmp
adc
popf
dec
clc
xor
ss
dec
loop
jns
ja
jb
cmp
into
cmp
decl
movl
jg
mov
dec
jmp
push
shlb
xchg
stos
movsl
sub
test
hlt
cmp
cmp
pop
inc
rcll
sti
loope
inc
and
mov
repnz
jo
xor
adc
repz
ja
aam
pop
mulb
cmp
mov
fldl
push
fwait
sub
cmp
add
mov
icebp
cmp
aaa
das
test
mov
pushl
fcom
in
lods
in
push
add
mov
xchg
mov
dec
rorb
outsl
jbe
push
xor
xchg
imul
lds
std
sahf
out
push
pop
mov
sub
cli
out
movsb
lods
repnz
and
or
mov
adc
nop
jno
jmp
xor
aaa
test
xlat
jmp
sbb
pusha
repz
movsl
mov
shl
clc
and
out
push
jl
rorl
or
lahf
ljmp
rcr
sar
sbb
push
mov
iret
ret
stos
dec
das
pop
dec
mov
movsb
mov
fcmove
sti
adc
mov
ficoms
mulb
repnz
jp
add
mov
inc
pusha
subl
shrl
mov
xlat
insb
dec
and
and
in
mov
cmp
jae
loope
push
pop
pop
cmp
push
leave
dec
loopne
ret
mov
cmp
jl
push
xor
mov
jns
mov
test
icebp
dec
xchg
in
jmp
or
push
add
jle
mov
call
push
xor
dec
out
out
push
pop
aad
xchg
stc
inc
or
aad
insb
mov
test
inc
push
aam
fwait
push
fbstp
insl
call
push
adc
insb
jp
lahf
adc
or
in
popf
adc
pop
xorl
push
push
repnz
imul
or
sbb
sbb
mov
mov
test
xor
call
push
fsubrs
out
or
cmp
mov
int3
or
lcall
mov
les
test
jge
mov
mov
pop
and
imul
sub
mov
jle
imul
loop
call
lret
push
mov
or
bound
out
movsl
or
insb
pop
jbe
mov
stos
shlb
outsl
jbe
les
aaa
pop
jbe
or
sti
jle
pop
fwait
and
das
test
les
cltd
mov
es
xchg
add
adc
cwtl
push
mov
leave
mov
sbb
pop
add
jne
std
and
test
mov
and
fs
mov
and
inc
arpl
lret
sbb
into
pop
in
scas
insb
adc
arpl
sti
add
jmp
adc
aaa
jno
cmp
xchg
pushf
lds
pop
insl
jmp
pop
ja
ja
pop
push
sbb
fadds
jl
push
xchg
enter
mov
cli
push
xchg
in
nop
push
jo
cmc
std
cmp
fisubs
dec
xchg
fldl
add
rolb
cmp
add
xchg
insl
fcompl
lahf
xchg
sbb
lret
outsl
mov
sbb
sbb
arpl
sbb
adc
js
and
pop
xor
mov
xchg
pusha
mov
lret
xlat
iret
mov
enter
pop
mov
pusha
add
inc
sbb
fidivl
cmp
rcpps
mov
mov
loop
int
mov
data16
push
mov
roll
insl
cmp
ret
fmul
jmp
mov
test
cs
cld
mov
stos
mov
push
das
jecxz
sub
idivb
aad
jns
pop
mov
lcall
js
mov
arpl
loope
dec
es
popa
in
aam
xor
into
adc
mov
push
push
pop
jo
inc
clc
mov
out
add
repz
mov
and
mov
mov
adc
addr16
int3
movsl
add
add
sub
out
fdivrl
xchg
or
cli
inc
jmp
aam
cmp
fcmovnu
jb
cmp
add
push
test
scas
pop
mov
and
xor
jbe
jo
aad
cwtl
inc
js
mov
sbb
mov
push
in
into
insl
fiadds
daa
sub
jbe
inc
in
es
movsl
stos
dec
jmp
std
and
lret
pop
dec
ficoms
cmp
jo
ret
mov
fs
out
sub
push
cmp
lea
gs
data16
divb
out
ja
dec
fcmovnb
nop
jno
pushl
jne
add
fisubrs
loope
repnz
mov
shll
imul
jno
gs
insb
push
or
dec
loop
mov
mov
cli
sbb
sub
mov
sub
mov
outsb
cmp
mov
pop
xor
stc
test
jle
cmp
mov
pushf
pop
cmpsb
mov
fdivs
or
outsl
scas
mov
rcr
mov
mov
cmp
lcallw
jmp
rorb
loope
jp
fildll
push
fimuls
pop
sub
fs
jmp
mov
shrl
jl
in
or
insb
adc
push
dec
fdivp
rolb
xor
inc
inc
pop
inc
pushf
into
pop
sbb
aam
sahf
les
xor
inc
rclb
sub
push
mov
push
pusha
mov
lea
xchg
xor
dec
adc
insb
aam
cmp
xor
inc
arpl
push
cmp
mov
pop
test
stos
push
out
push
data16
mov
sbb
and
imul
mov
lock
adc
shll
inc
ret
jb
rcrb
daa
mov
mov
add
icebp
mov
push
and
sub
add
jae
es
xor
sti
fsts
into
or
pop
fcomps
test
or
pop
mov
mov
incb
std
cmp
or
movsb
mov
mov
js
sbb
shll
push
lcall
cli
ljmp
int3
pusha
push
jecxz
cmp
mov
mov
pop
pop
lods
jl
stc
fisubl
push
mov
repnz
dec
push
daa
decb
pop
jecxz
ret
mov
sbbl
mov
decl
mov
inc
and
and
and
xchg
popa
mov
jno
outsb
pop
out
sti
push
push
js
mov
mov
jl
ss
std
adc
nop
inc
and
pop
mov
jmp
mov
in
shlb
mov
push
xor
xchg
adc
ret
mov
imul
xchg
sub
jbe
cmp
es
pop
mov
int
pushf
jns
fwait
cli
out
pop
movsl
sbb
stc
dec
adc
xlat
int
push
jb
xor
add
repnz
int
shrb
outsl
jbe
adc
xor
xchg
pop
cld
jmp
addr16
jl
jge
jb
mov
cltd
daa
cmpsb
jle
jb
and
arpl
hlt
inc
dec
iret
fnstcw
jl
jl
add
xor
arpl
sub
scas
jno
mov
mov
int
test
ret
mov
movsl
xchg
test
mov
sbb
jle
cld
mov
push
dec
jp
xorb
hlt
mov
clc
adc
push
int3
push
cmpsb
cmp
sub
mov
xchg
pop
pushf
jle
jl
sarb
dec
xchg
ja
inc
and
xchg
std
pop
fdivr
dec
jp
imul
or
ret
mov
or
sub
adc
out
imul
sbb
sbb
jnp
test
insl
in
mov
push
sub
sub
cmpsb
aas
push
sbb
mov
and
lock
inc
imul
mov
sub
inc
fidivrl
sub
pop
fs
ja
jne
and
mov
dec
cld
in
popa
cmp
int
popf
clc
push
in
mov
cmc
pushf
test
mov
ret
adc
test
dec
out
roll
xor
mov
cmpsl
sbb
sub
cmp
incb
inc
fistpll
pop
xlat
mov
inc
mov
cmpsl
add
mov
daa
arpl
das
add
hlt
inc
ret
call
loopne
mov
out
sbb
mov
and
frstor
mov
lods
iret
std
sbbb
add
cli
push
test
push
repnz
out
repnz
mov
les
mov
adc
int3
rcl
cs
or
cmc
aas
mov
lds
cli
mov
imulb
inc
jg,pn
or
sub
dec
push
enter
lahf
inc
movsl
enter
in
sbb
movsl
stos
push
pop
mov
sbb
mov
mov
add
adc
int
adc
adc
inc
fsubrl
jl
jmp
mov
cmc
add
sbb
sahf
leave
adc
lds
stos
add
scas
xchg
clc
and
sbb
mov
xchg
out
xchg
ja
and
outsl
push
jno
sbb
je
testl
cmp
dec
jmp
outsb
xor
repz
mov
and
mov
xor
popf
sbb
rcr
mov
sub
mov
jg
bound
mov
cmp
or
mov
loope
inc
movsl
das
push
sub
lahf
cmp
js
in
popf
jb
adc
push
pop
scas
jbe
lcall
add
cmp
xchg
icebp
push
dec
sbb
xor
jns
push
jne
mov
aam
push
rcrb
mov
loopne
cmc
pop
rcll
or
cmc
mov
into
gs
dec
mov
int3
bound
mov
xchg
divb
ret
out
mov
sbb
sbb
rep
call
sbbl
scas
add
in
pop
sbb
inc
pop
xchg
fs
imulb
aam
mov
sbb
cltd
shll
pushf
loope
outsl
mov
ljmp
mov
je
cmc
xchg
data16
sub
xchg
addr16
jmp
imul
jno
xor
jno
mov
mov
ljmp
fs
imul
scas
mov
into
jp
cmp
mov
clc
inc
pop
scas
push
add
or
push
lods
pop
push
mov
movsl
xor
mov
aam
mov
mov
or
adc
testb
orb
xlat
test
icebp
mov
fsub
dec
jnp
mov
xor
out
and
lods
mov
mov
sbb
mov
popf
jne
les
data16
nop
adc
fisttpll
mov
lcall
mov
inc
jno
icebp
into
lret
xor
stos
and
dec
xchg
pusha
push
shl
ds
addb
arpl
xchg
adcl
scas
dec
dec
add
push
jne
mov
mov
out
popf
push
fdivs
stos
xor
imul
cltd
push
cwtl
mov
lcall
ret
push
mov
fstpt
sbb
aad
loope
adc
and
sbbb
gs
sbb
cmp
sbb
push
mov
sbb
cmpsl
jae
pop
jae
sahf
pop
mov
call
dec
cmp
push
xlat
mov
push
mov
mov
icebp
push
fidivs
out
bound
jae
xchg
mov
lcall
call
cmp
rcr
jns
or
leave
mov
xchg
sbb
das
js
test
sbb
.byte
lahf
pop
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
ss
movsb
or
add
add
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
add
add
mov
push
mov
pop
mov
jmp
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
xor
mov
add
mov
sub
push
or
pop
sub
movzwl
push
movzwl
popl
mov
sub
dec
or
sub
jne
mov
rclb
movsb
dec
mov
mov
sbb
fidivrs
lock
lds
insb
rolb
push
in
mov
jmp
aas
push
pop
jge
pop
jnp
insb
mov
push
pop
inc
dec
mov
mov
lret
adc
pop
push
les
popa
dec
pop
fcompl
imul
jo
in
push
insb
rolb
ja
out
add
repnz
rcrb
mov
imul
imul
outsl
insb
rolb
cmp
add
adcb
mov
insl
sbb
pop
dec
lds
in
xor
mov
roll
aas
jecxz
pop
fwait
push
enter
in
imul
les
adc
cmp
cmpsl
sub
pop
dec
cli
cs
push
mov
xchg
rcrl
cmp
pushf
inc
aad
cmp
dec
xchg
cmp
addr16
gs
mov
sbb
mov
mov
bound
xchg
sti
adc
dec
mov
xchg
pop
xchg
mov
ret
jb
mov
sarl
mov
push
ljmp
pop
cmp
int3
pop
xchg
mov
iret
lea
jae
push
mov
fldenv
cs
push
mov
lods
mov
mov
mov
push
pop
enter
mov
mov
and
add
stos
fisttpl
mov
ja
xchg
xchg
int3
pop
xchg
mov
jae
aam
out
mov
pop
dec
mov
xchg
mov
push
rcrb
sbb
dec
push
sub
xor
add
pop
cmp
push
mov
or
mov
out
rcll
mov
imul
xchg
je
bound
cwtl
out
dec
mov
jae
pop
movsl
adc
or
ret
add
xor
inc
cmp
dec
je
sub
mov
leave
xchg
mov
rolb
stos
cmpsl
lods
pop
negb
cmp
mov
push
int
sub
jae
sbb
sub
mov
int
xor
xorl
pop
out
cmp
negb
sbb
call
lcall
xchg
fwait
call
cli
cmp
popf
cmp
and
je
outsl
aad
mov
push
cld
loope
vunpcklpd
lcall
fisttpl
stos
xchg
cli
push
je
lret
in
inc
not
cld
repz
mov
mov
pop
sbb
jl
jno
incb
push
jmpw
loop
adc
test
mov
test
out
or
push
jecxz
xchg
lcall
xlat
or
jge
ss
ret
out
bswap
push
mov
pop
in
or
mov
out
cmpsl
je
add
inc
jle
jnp
fstpt
inc
inc
std
inc
inc
hlt
loopne
adc
add
das
adc
add
add
push
repnz
insb
push
idivl
pop
testb
add
sbb
aaa
jb
adc
jo
cmpl
mov
xor
inc
cmc
aaa
xchg
stc
jge
dec
sub
ja
add
rcll
cmp
aaa
xchg
xchg
sarb
sarl
pop
aaa
xchg
jle
xor
inc
clc
in
sbb
cld
in
fidivl
xchg
xchg
sarl
pop
aaa
xchg
jle
adc
jne
aaa
xchg
sbb
aaa
xchg
sbb
loopne
in
sub
add
and
mov
dec
insl
mov
es
sbb
fldl
imul
popf
es
mov
repnz
sbb
daa
lret
sbb
cmc
popf
sbb
lcall
aaa
xchg
cmpsb
js
sub
sbb
aaa
xchg
sub
pop
fwait
add
aaa
ja
bound
and
divb
xchg
pand
stos
dec
cmc
aaa
xchg
test
and
stos
aam
xchg
frstor
popf
sbb
aaa
add
xor
sbb
fcmovnb
sbb
divb
xchg
test
xor
sbb
aas
add
fstp
nop
sbb
pop
lcall
mov
fidivl
je
xchg
cmpsb
dec
in
es
iret
cmpsb
cmp
loope
decb
or
fdivrs
shrl
cmpsb
xchg
aaa
xchg
sub
aaa
fbld
adcb
ficompl
cmpsb
sbbb
ficompl
std
cmpb
mov
cld
pushf
inc
xor
fidivl
add
xor
sbb
aaa
xchg
test
sbb
cmc
popf
pand
mov
adc
mov
aaa
xchg
pand
xchg
or
aaa
xchg
sbb
sbb
sbb
aaa
ljmp
ds
std
mov
cmp
add
mov
cmp
pop
out
scas
xor
cmc
push
sub
jmp
fwait
mov
cmp
pop
push
mov
in
push
sub
fidivrl
and
sar
mov
stos
es
mov
cmp
pop
mov
das
add
aas
mov
jne
fidivl
xchg
daa
mov
stos
es
mov
cmp
pop
jmp
pop
out
test
jbe
fidivl
xchg
daa
mov
stos
sbb
inc
cmp
aam
sbb
jp
sbb
faddl
mov
shl
aam
xchg
sbb
jge
and
sti
mov
stos
sub
sbb
xchg
out
jl
nop
and
aaa
ljmp
aad
sbb
jp
sbb
fsubrl
xchg
sub
subl
fcoml
imul
pop
loope
shlb
subl
fcoml
test
mov
les
xchg
cmpsb
xor
aaa
xor
fisubl
xchg
sbb
aaa
jnp
adc
adc
xlat
push
mov
addl
pushl
scas
push
mov
jge
popa
fnstenv
mov
sbb
xlat
nop
sbb
inc
xchg
sbb
mov
inc
sbb
rclb
aaa
xchg
cmpsb
ds
pushf
outsl
jge
pushf
push
loopne
xchg
sbb
sbb
xor
cmp
sbb
cmc
pusha
in
inc
pop
movsb
mov
out
fcom
push
fcomp
pusha
fcmovu
inc
jbe
adc
pop
out
jmp
xor
adc
and
movsl
test
loop
cwtl
subb
in
pusha
out
xor
cmp
je
adc
lock
cmp
mov
mov
sbb
aaa
xchg
sbb
aaa
xchg
sbb
aaa
xchg
sbb
aaa
xchg
sbb
aaa
xchg
sbb
aaa
xchg
sbb
aaa
xchg
dec
pop
aaa
jmp
in
aaa
xchg
fprem1
aaa
xchg
sbb
aaa
xchg
sbb
aaa
sahf
sbb
aaa
xchg
sbb
aaa
xchg
sbb
aaa
xchg
in
ss
sbb
aaa
xchg
sbb
aaa
xchg
sbb
aaa
xchg
sbb
aaa
xchg
xor
mov
pop
and
dec
ss
rcrl
mov
popa
add
pop
push
setb
fildl
loop
mov
cld
and
rcrb
add
out
ret
jge
xchg
pop
mov
lds
mov
lret
cld
inc
stos
lds
adc
push
sbb
ja
in
aad
movsb
lret
aam
xchg
cmpl
mov
mov
add
jmp
jb
mov
jns
sarl
sbb
adc
hlt
jmp
jo
int3
xchg
stc
ret
dec
push
inc
shl
mov
push
movsb
xchg
mov
push
movsb
lret
mov
xor
cmp
push
repz
lcall
inc
scas
cli
xchg
cmp
push
stos
cmp
decl
push
add
inc
push
cmpsb
fsubrs
lcall
shl
xchg
cmpl
mov
adc
push
pop
cmp
outsb
jb
cwtl
lcall
xor
adc
sbb
nop
cmp
out
int
xor
ss
cmp
test
and
push
sub
pop
icebp
cld
dec
insb
add
test
ss
out
sbb
push
loop
rcr
popf
xchg
testl
in
add
xrelease
jno
enter
fs
pop
pusha
mov
enter
xor
loopne
sahf
cs
jns
int
stos
sub
ja
sub
scas
inc
movsb
aam
test
shrl
sbb
dec
lods
push
add
add
dec
pop
movb
cmp
add
aaa
xchg
sbb
xchg
stos
push
dec
xor
jo
xchg
jnp
mov
add
lret
insb
loope
ljmp
cmpl
in
popa
inc
repnz
adc
jg
out
rcr
fwait
fs
sub
stos
ljmp
dec
lcall
mov
push
mov
sbb
out
bound
roll
clc
dec
imul
jns
inc
daa
jmp
sahf
cltd
test
das
int3
shl
mov
cs
loopne
lret
xchg
xlat
or
fwait
mov
mov
dec
popa
or
lret
lock
subl
sbb
or
fistps
fistps
jg
fimuls
cmp
fimull
add
mov
xor
cld
lea
int3
add
add
or
add
adc
in
push
add
in
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
push
add
jmp
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
in
push
add
add
add
in
push
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
push
add
push
add
add
push
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
push
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
je
insl
add
add
add
add
add
add
add
sub
add
cmp
sub
add
push
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
jp
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
movl
inc
adc
add
add
add
int
and
inc
and
daa
mov
test
jnp
outsb
pop
jns
loopne
mov
mov
cmp
lret
lods
inc
cmp
int3
add
lods
ja
mov
cmp
hlt
outsb
inc
mov
int
sub
in
push
sahf
aad
xlat
or
adc
jmp
subb
cmp
dec
int3
inc
add
push
inc
loope
mov
ffreep
cli
das
out
mov
fwait
xchg
push
enter
xchg
imul
jns
adc
rclb
dec
lea
test
push
sub
aam
xor
and
adc
xor
rolb
dec
jp
sarl
ret
into
lcall
ss
jns
repz
sub
push
inc
movsl
jae
add
inc
jb
push
dec
lds
sarl
adc
pop
push
pop
imul
lcall
cmp
std
mov
sub
and
dec
mov
enter
or
es
in
outsb
aas
mov
aas
xchg
sahf
loope
sbb
add
js
xor
cmp
loop
xchg
daa
inc
lret
pop
sarb
mov
aas
and
inc
sub
int3
add
dec
sub
push
xchg
pop
xchg
adc
pop
shll
cmpsb
or
dec
pop
fsts
push
adc
cmp
fiaddl
xchg
push
fstl
pop
jae
call
add
and
push
xchg
cmp
mov
mov
stc
lock
imul
sub
push
shlb
adc
dec
mov
mov
mov
mov
subl
popa
mov
scas
push
jno
out
adc
stc
je
inc
scas
pusha
lea
or
push
je
mov
mov
jmp
adc
push
dec
faddl
movsb
push
in
jnp
stos
fs
xor
xchg
sbb
imul
xor
add
shl
mov
mov
dec
sti
sbb
test
in
lods
push
add
int3
gs
pop
inc
fistpl
xor
fmulp
jl
and
mov
xchg
push
sahf
sub
sub
mov
xchg
push
ds
inc
pop
fdivrl
insl
xor
sub
xchg
push
or
push
fisubs
in
or
sarb
or
ja
fstp
fwait
sub
sarb
hlt
dec
push
xchg
mov
xchg
push
fstl
sbb
in
xchg
call
notb
jp
stc
add
sarl
cli
sub
pusha
pop
push
lret
pop
push
mov
enter
mov
lock
nop
jne
aas
rorb
imulb
sbb
or
cmpsl
jle
shrl
fdivs
pushf
repnz
or
cmp
hlt
subl
inc
sub
add
mov
adc
push
test
arpl
leave
mov
xor
fldenv
in
push
test
js
iret
pusha
decl
mull
ja
sub
idivb
stos
mov
les
into
mov
aas
imul
out
sub
jo
push
imul
cmp
jb
lea
lcall
sub
je
test
xchg
xor
mov
loop
or
mov
shll
dec
sti
je
jne
sbb
xchg
dec
fbld
adc
jae
xlat
mov
cmp
mov
push
insl
push
inc
inc
jecxz
mov
jp
mov
push
ds
int
int3
orl
push
fbld
add
sub
imul
adc
dec
ja
xor
insb
nop
mov
icebp
pop
sarb
insb
xlat
xor
bound
call
xchg
add
imul
push
lock
loop
jb
or
mov
and
pop
shrb
cmp
sbb
xor
mov
mov
pop
gs
mov
paddusw
mov
lock
test
dec
cwtl
clc
sbb
dec
xor
in
push
clc
inc
dec
xchg
repz
sbb
jae
dec
dec
jne
std
mov
ljmp
fs
jmp
pop
adc
dec
sbb
push
pusha
cld
out
ret
xor
xchg
movsl
xorl
scas
adc
in
rorb
imul
mov
inc
fsubrl
lea
xor
cmp
jmp
enter
pop
push
or
call
ss
cs
in
sub
cli
je
stc
pop
push
dec
dec
addr16
ror
inc
and
sub
jle
fwait
insb
cmpsl
inc
int3
fsubrl
nop
mov
jne
repz
stc
popa
pop
shr
sbb
insb
xchg
cmp
lret
mull
movsl
or
or
mov
xchg
mov
xor
pop
push
lods
notl
test
repnz
loopne
lahf
shr
popa
push
icebp
sar
xchg
jbe
imul
lret
xor
or
mov
cwtl
out
sbb
mov
pop
rcrb
pop
jle
out
pop
xchg
push
dec
orb
movsl
loope
cmp
xchg
pushf
outsl
jnp,pt
inc
push
xor
pop
loop
mov
mov
jg
stos
inc
test
test
sub
mov
lahf
rcrb
sbb
test
inc
mov
sar
js
insl
sahf
mov
aad
fld
pop
test
cld
mov
mov
mov
dec
dec
xor
lcall
xchg
movsl
sahf
sub
das
sub
pop
fdivrl
mov
in
divb
fwait
inc
jmp
repz
cld
add
pop
enter
fucomip
dec
or
je
mov
fnsave
and
cmc
adc
and
push
das
test
mov
xchg
icebp
cs
sbb
mov
gs
inc
cmp
xor
daa
fwait
cld
pop
sahf
or
add
xchg
jae
insl
leave
xchg
adc
rorl
mov
stos
mov
scas
outsl
adc
stc
dec
dec
fbstp
test
add
xchg
ds
aaa
mov
dec
sbb
dec
mov
cwtl
inc
or
loopne
out
jmp
push
sub
lds
lock
xchg
xchg
jne
lret
rcrb
lods
popf
cmpsl
dec
icebp
adc
mov
push
pop
adc
sub
xchg
cs
jne
jge
fisttps
out
mov
das
test
xor
sub
repnz
mov
loope
mov
fwait
pusha
setae
jne
push
subb
push
rcrb
std
shr
mov
aad
pop
pop
adc
adc
insb
mov
xor
sti
inc
jb
mov
leave
or
outsb
outsl
out
push
cmp
xor
addr16
cwtl
imul
push
pop
int
and
fwait
cmp
lret
add
push
mov
push
or
sub
sbb
out
xor
pushf
ja
sbb
pusha
mov
ljmp
sbb
mov
rcrb
or
repz
sub
push
movsb
std
xor
cli
sub
mov
sahf
jae
cwtl
lcall
scas
xlat
cli
sbb
pop
and
mov
sub
jmp
push
pop
ss
enter
xchg
push
push
jg
sti
in
dec
push
cld
mov
bnd
ret
and
std
sub
add
test
cs
lret
mov
pop
lods
fwait
sbb
sbb
push
pmulhw
outsb
js
or
push
inc
or
into
dec
cli
insb
pop
mov
test
sar
enter
in
daa
sarb
clc
pop
mov
xchg
sbb
sti
pop
sub
lods
sbb
add
and
fdivs
in
adc
pop
shrl
sbb
jmp
and
hlt
jecxz
pop
insl
lock
lahf
loopne
add
cmc
fs
fisttpll
pop
mov
push
in
mov
mov
cli
out
fnstsw
xchg
sub
xor
dec
or
jle
pusha
out
lea
xchg
mov
imul
jb
out
push
or
stos
inc
xchg
add
stc
add
rclb
xor
fstl
fisttpl
fildl
iret
daa
mov
int
cltd
adc
dec
es
add
stos
and
fldt
insb
ja
icebp
cmp
xchg
sbb
lea
mov
into
sbb
or
aas
stos
mov
call
cmp
stc
inc
push
mov
pop
mov
decb
dec
movsl
mov
xchg
mov
or
lock
pop
outsb
xchg
sub
pop
cmp
in
shr
jo
xchg
stc
fcmovu
dec
push
push
pop
and
xchg
jmp
cmp
cmp
jecxz
and
test
mov
fwait
mov
pushf
mov
xlat
sub
test
sub
mov
mov
jnp
xor
rcrl
mov
cmp
cmpl
insb
loop
pop
mov
inc
cmp
lahf
sbb
ror
fcomps
dec
mov
ss
iret
jp
or
jb
inc
in
xchg
jmp
ss
or
cmpsb
out
jecxz
jecxz
dec
loop
cmovo
outsb
pop
ds
adc
int3
test
mov
scas
std
adc
mov
push
shl
mov
fistps
mov
mov
cmp
inc
lods
rorl
mov
arpl
repz
mov
lret
add
xchg
dec
mov
adc
xor
mov
mov
mov
fstl
sub
sub
mov
mov
enter
sti
push
xchg
xchg
dec
sub
mov
pop
stos
mov
cmpsl
cwtl
lea
insb
pop
pop
pop
lea
pusha
cmp
push
in
sub
test
adc
aad
cld
xchg
xchg
fisttpl
je
int3
pop
punpcklwd
lods
dec
inc
jmp
mov
ret
mov
mov
mov
ficompl
ror
jecxz
adc
mov
xor
adc
adc
cltd
mov
lahf
js
lret
scas
mov
out
leave
das
or
pushf
fidivrs
jo
mov
cmp
imul
inc
cltd
jp
lds
push
cltd
mov
pop
and
or
adc
fcomi
into
mov
jnp
call
push
dec
addr16
pop
dec
addb
loopne,pt
lock
push
inc
xor
pop
mov
gs
dec
mov
aam
xlat
mov
stos
mov
ffreep
sbb
loope
arpl
inc
cmp
fidivrl
mov
pop
mov
jl
scas
dec
mov
pusha
push
inc
xor
xor
sbb
mov
push
xor
clc
scas
nop
push
pusha
aad
sbb
cs
jae
pusha
pop
mov
xor
cltd
inc
lds
lret
shll
je
insb
or
sub
xor
loop
mov
scas
imull
jbe
pop
cmpsb
mov
leave
pop
mov
outsl
or
iret
and
xchg
pushl
jmp
sbb
testb
mov
add
ja
cmp
or
je
popf
or
lret
jecxz
push
mov
ret
adc
popf
scas
jno
xchg
addr16
add
stos
lahf
out
enter
ret
xor
loope
inc
push
jp
push
incl
outsb
jb
pop
subl
dec
call
xorl
arpl
lret
sbb
xchg
cwtl
pushf
xchg
adc
or
fwait
std
ds
cmpsl
icebp
mov
mov
clc
add
outsb
lahf
out
push
push
push
int
and
jmp
cmp
sub
int3
adc
fisubl
test
jle
mov
mov
ss
sub
push
push
add
stos
jne
xor
sub
sub
sbb
test
inc
lea
mov
pop
stos
xor
inc
jne
or
jb
and
jmp
into
mov
lea
loopne
jno
outsb
pop
sti
mov
daa
js
xor
movsb
push
imul
sub
out
adc
cs
xchg
push
in
mov
mov
movlps
xchg
inc
rcrb
jns
clc
fwait
mov
jl
shl
in
out
in
xchg
fldl
cmp
xchg
mov
cmp
pop
xor
in
mov
cmpsl
mov
or
or
sbb
incl
ds
sahf
jno
test
and
jo
jle
data16
pusha
ret
mov
inc
or
loope
fldl
sarl
aam
adc
dec
add
outsl
rcrb
dec
pop
cs
fdivl
cmp
jne
jle
and
ja
push
jae
insl
or
iret
data16
int3
sub
jae
adc
pop
adc
fcmovnbe
mull
xor
call
sub
dec
mov
xlat
add
lret
xchg
stos
dec
pop
and
mov
and
lds
dec
data16
enter
pop
fildll
inc
hlt
pop
aam
push
popf
or
es
xchg
dec
es
test
fsubl
aad
mov
scas
enter
ds
ret
dec
dec
scas
lret
loop
imul
mov
push
pushl
je
mull
sbb
push
mov
fcom
pop
stos
daa
test
add
adc
pop
push
and
scas
adc
rcrl
addb
dec
inc
pop
int3
mov
push
lock
lcall
das
pop
add
dec
sbb
sbb
int
adc
out
jnp
dec
ljmp
sub
pop
sbb
sub
call
pop
sbb
adc
es
push
bnd
lock
push
mov
or
push
fdivrl
popf
fcomip
mov
xchg
xchg
call
sbb
outsl
push
mov
jb
or
push
adc
dec
fistpl
adcb
sub
mov
enter
xlat
notl
test
sbb
call
xchg
cmp
cmpsl
and
mov
sub
push
arpl
push
jle
sub
lods
insl
data16
pop
mov
push
add
lret
pop
push
imul
xchg
or
sub
push
push
shl
lock
lds
lds
and
cld
in
jns
shll
and
shrb
push
sahf
fidivrs
and
ja
fdivrp
out
cmpb
popf
inc
xchg
push
imul
jo
cmpsb
rorl
stos
jp
xchg
mov
lcall
mov
xor
imul
cli
cs
mov
xor
xchg
aam
xlat
mov
inc
adc
xchg
mov
dec
ljmp
cmp
add
pop
push
mov
mov
pop
jb
mov
and
stos
popa
mov
adc
xor
jne
leave
add
sub
repnz
adcl
repz
loop
je
xchg
fsubr
decl
mov
xchg
push
aad
aam
jmp
scas
xchg
xor
pop
sub
mov
les
jne
mov
xor
inc
in
xlat
iret
push
stc
jns
fmuls
dec
mov
iret
adc
test
aas
testl
leave
cmp
out
push
ret
stc
jle
cli
mov
and
in
sub
pop
fildll
fcmovne
mov
dec
mov
cld
push
aad
in
cmp
pop
mov
lods
jl
sti
fwait
or
mov
int3
imul
sub
das
push
cmp
popa
movsl
adc
xlat
push
mov
xchg
or
sbb
je
dec
cmp
fisttpl
sub
sub
mov
add
les
xor
and
insl
lcall
xor
pop
sbb
lcall
dec
push
stos
andl
subb
inc
push
cmpsl
add
jns
and
cmp
inc
push
pop
mov
inc
mov
jbe
mov
pushl
xchg
mov
push
sub
fidivs
scas
sub
and
sahf
rorb
add
pop
arpl
pop
push
loop
sub
enter
mov
data16
loop
test
pop
push
sub
rcr
push
das
ljmp
jno
daa
push
inc
insb
adc
pop
sbb
pop
into
sbb
inc
inc
mov
fwait
push
and
jp
call
mov
push
sub
jle
cmp
outsl
test
test
push
adc
into
mov
push
and
push
imul
inc
daa
sub
lahf
push
cli
xor
inc
outsb
push
scas
sub
dec
test
lret
popf
ds
mov
xchg
fcompl
pop
lds
movsb
scas
mov
or
popf
cld
loop
pop
mov
or
xchg
cli
pop
mov
push
xchg
push
in
sub
cmc
loope
inc
inc
popa
ret
sbb
in
sub
lock
xchg
xchg
push
sub
jnp
in
jp
jp
cmp
inc
data16
mov
jg
mov
xlat
das
shll
frstor
addl
add
dec
js
fisttpl
cmp
aam
cmc
je
mov
push
inc
lods
rcll
sub
loopne
pop
xor
rolb
add
imul
inc
add
mov
add
xor
adc
popa
aad
cmp
xor
insl
lcall
inc
mov
in
repz
add
into
fwait
clc
lea
pusha
pop
mov
mov
xchg
jg
ja
cmp
lret
es
jns
jbe
lcall
addr16
jge
jg
ds
jno
jno
jae
xchg
jmp
xlat
fidivs
lea
cli
arpl
push
loopne
mov
loop
ja
movsl
push
push
sub
insl
lahf
arpl
mov
insl
pop
stc
jbe
repnz
sbb
xchg
adc
and
sbb
push
aaa
jns
iret
sub
jle
jnp
sub
mov
popf
xchg
xor
fcmovbe
xchg
mov
push
inc
jge
outsb
fldcw
inc
push
fwait
inc
andl
jbe
das
xchg
pop
popl
fstpl
jns
pop
mov
aaa
mov
fwait
pop
gs
cmp
ret
jp
xorb
imul
out
dec
dec
into
jbe
in
xchg
mov
xor
in
add
mov
fwait
pusha
push
cltd
mov
adc
adc
js
inc
jnp
shl
sahf
vpminsw
shr
outsb
cmp
inc
cmp
sub
cmpsl
rcr
mull
inc
in
aam
aas
push
xor
cmp
lock
pusha
fadd
jns
call
xor
mov
iret
addr16
sbb
jecxz
into
inc
add
add
inc
mov
pop
sidtl
cld
sbb
dec
inc
dec
push
jae
jp
out
stos
insl
test
mov
dec
mov
xchg
jnp
inc
add
or
or
mov
mov
sub
movl
int3
mov
jge
int
push
ljmp
push
repnz
aam
and
sub
loop
cltd
cmp
std
add
aas
mov
jno
mov
add
lods
sbb
outsb
mov
inc
movb
das
int
leave
inc
push
sub
sub
arpl
sbb
mov
xchg
les
sbb
out
mov
rorb
sub
and
in
sbb
push
sbb
movsb
pop
lea
mov
rclb
pop
in
mov
fadd
add
imul
cwtl
jl
fists
sbb
jecxz
jecxz
or
sbb
or
jbe
sbb
xor
xor
cld
mov
push
push
iret
stos
stc
daa
xchg
and
or
fisubl
xchg
jne
sbb
pop
pop
jmp
pop
dec
ret
cltd
xchg
or
mov
outsl
in
daa
cmp
js
pop
xchg
cmp
out
dec
shl
std
xchg
les
mov
ja
aaa
test
inc
lods
cld
dec
mov
xchg
push
jo
jb
iret
mov
adc
pop
popa
xchg
xchg
cltd
aaa
lea
pop
inc
xchg
aas
inc
sub
xchg
out
xor
movsl
xlat
lock
popa
sub
pop
jge
stos
mov
or
in
aaa
decl
loop
gs
fistl
shlb
ret
sti
cmc
adc
xor
jg
lds
jl
in
stos
out
inc
fisttpl
cmp
xor
ffreep
aaa
mov
mov
cmp
insl
icebp
inc
fbstp
ficoml
jno
mov
das
inc
arpl
add
addb
push
lds
or
pop
sub
mov
enter
fbld
xchg
mov
int3
mov
leave
test
in
ret
and
out
repz
repnz
pop
pop
add
enter
imul
outsl
fldcw
pop
je
leave
xor
js
push
movsb
test
scas
inc
jno
stos
call
mov
sbb
mov
popa
repz
cmp
jo
mov
cmp
pop
and
jge
test
and
rcrl
int3
divb
hlt
mov
jns
xor
ljmp
pop
add
jno
mov
xchg
xchg
in
xor
mov
mov
add
push
sbb
cs
cli
xchg
and
xchg
lcall
aad
dec
stc
cld
ffreep
movsl
dec
inc
call
or
xchg
mov
dec
add
stc
push
sub
cmp
inc
xor
stos
fcomp
clc
xchg
add
add
shrl
fwait
mov
mov
lds
and
subl
mov
jle
mov
enter
lock
fs
repnz
mov
add
push
daa
cmpsl
xor
mov
sti
xor
add
sarb
xchg
in
sub
cltd
mov
data16
cmp
jmp
pop
dec
stc
inc
xor
out
mov
jnp
xchg
mov
stos
dec
pop
jo
xchg
push
test
jmp
mov
or
test
adc
inc
push
inc
pop
inc
adc
xor
jo
mov
shlb
jbe
mov
shl
mov
mov
pushf
dec
sub
xchg
ror
pop
orb
inc
sbb
loopne
cmpsl
das
cmp
push
test
fdiv
dec
mov
push
mov
push
pushf
cmp
xchg
ss
mov
mulb
dec
or
std
in
mov
mov
mov
pusha
loope
mov
add
sahf
or
cmp
fldcw
dec
ja
xor
mov
bound
xor
incb
inc
sub
ljmp
inc
repz
add
dec
and
sbb
scas
mov
dec
fwait
xchg
and
std
inc
lock
inc
jns
cmc
insb
mov
cmp
jnp
test
div
imul
addl
ficompl
rorl
rorb
adc
in
test
adc
lea
jmp
jo
nop
enter
popa
add
in
pop
nop
imul
sub
mov
mov
push
inc
into
push
sub
lret
push
sbb
add
push
fisttps
jge
pop
call
dec
int
aaa
jne
fnstenv
pop
test
jne
xchg
inc
scas
scas
insb
and
pop
xor
push
xchg
iret
pop
lock
das
push
test
imul
jp
mov
fnclex
mov
pop
xorb
jmp
pop
xor
xor
stc
aad
mov
shrl
sub
icebp
xchg
adcb
adc
stos
push
out
hlt
scas
data16
insb
aaa
sbb
add
sti
lcall
loop
stc
xor
and
shlb
mov
jecxz
and
les
cmovb
rcrb
dec
pop
push
sub
insl
mov
sbb
push
pop
xor
or
call
mov
hlt
push
repnz
repnz
enter
mov
arpl
pusha
xor
pop
sbb
loop
fdivs
or
jno
shrb
push
fisubrs
aad
pop
imul
loopne,pt
xchg
pop
cmp
data16
sub
cmpl
js
popa
movsb
int
xlat
jp
add
sti
out
mov
cmpb
jg
push
adc
xor
push
faddl
jecxz
into
popf
test
cmc
adc
stos
mov
add
add
mov
hlt
dec
push
cmc
pushf
fmuls
push
cmp
out
push
adcl
pop
enter
push
pop
xlat
jge
pusha
sub
pop
rcrl
pop
nop
mov
leave
popa
or
into
lods
lret
sub
xchg
lods
jecxz
lret
jbe
xchg
dec
sbb
out
xchg
int
aad
inc
aam
pop
aaa
jbe
mov
vphaddwd
in
cli
adc
push
xchg
outsb
clc
imul
add
cmp
dec
inc
lods
mov
imul
sbb
jns
int
lcall
xchg
test
push
test
fimull
enter
pop
sub
movsl
lahf
out
data16
cmp
fidivs
add
loope
mov
ret
pop
loop
lret
jne
xlat
sub
bound
sub
xchg
dec
sub
cmp
inc
ret
or
mov
sbb
jno
add
in
pop
xor
out
ret
outsl
add
mov
push
add
repz
cli
movsl
pop
lahf
icebp
push
notl
lret
mov
mov
adc
ds
repz
movswl
int
ret
push
cmpb
sub
adc
daa
faddp
push
push
add
lock
or
fdivrp
adc
xchg
push
push
or
shrl
mov
gs
cltd
pop
inc
lret
ret
add
jno
call
mov
pop
lock
adc
loopne
mov
loop
loope
push
mov
jg
xor
movsb
mov
xor
fsubr
jecxz
ficompl
out
mov
daa
push
dec
mov
lock
xchg
inc
sbb
je
fpatan
push
cmp
mov
incl
xor
std
sbb
subb
in
push
scas
add
sbb
xor
mov
push
stc
cmp
in
daa
pop
jl
cmp
xor
outsb
stc
out
xchg
mov
xchg
sbb
mov
xor
and
xchg
movsl
push
push
cmp
sbb
jne
aad
push
out
call
mov
gs
push
out
sahf
in
mov
stos
xchg
pop
and
push
cmpsb
xor
in
mov
mov
das
mov
jo
jbe
movsb
into
fisubrs
pop
add
pop
xchg
fldenv
inc
lods
sbb
aad
notb
jmp
mov
mov
add
outsb
test
scas
scas
sub
ljmp
sub
lahf
jl
push
mov
push
and
adc
je
push
jae
in
sahf
add
insl
cmp
and
loop
jl
cmp
stos
cmp
dec
mov
popf
imul
fwait
cwtl
pop
mov
fwait
int3
js
loop
loope
cmpsb
stos
ds
rorl
xor
arpl
cmc
inc
mov
test
sub
jbe
xchg
outsb
out
nop
push
mov
repnz
clc
mov
jb
and
cmc
cld
or
lret
inc
mov
mov
mov
xor
add
test
jecxz
mov
push
cwtl
stc
iret
cmp
inc
mov
shrl
cmp
or
mov
adc
fwait
cs
push
cmpsl
pop
mov
in
mov
leave
or
push
mov
jae
pop
mov
xorb
and
mov
pop
mov
push
jg
jle
stc
cmp
pop
stc
popf
xchg
inc
sub
in
cmpsl
mov
std
push
sbb
xchg
mov
adc
ljmp
test
jnp
js
sahf
push
cmp
sbb
mulb
cmp
pop
lods
push
and
nop
adc
mov
push
fcmovb
push
nop
repnz
xor
add
pop
cmc
scas
jno
int
or
dec
xchg
aad
test
adc
cli
jne
int3
add
movsl
push
pusha
cmp
daa
leave
sarl
jno
pop
iret
and
punpckhdq
dec
xchg
cmp
or
push
pop
add
faddl
mov
cmp
mov
mov
test
mov
jge
push
clc
das
outsb
int3
adc
or
fwait
add
mov
addr16
dec
mov
fnsave
test
in
dec
inc
or
filds
xor
cwtl
cmp
aad
in
xor
sbb
inc
sbb
mov
mov
loopne
or
insb
xchg
loope
aas
push
jb
sbb
mov
lret
stos
adc
inc
shll
mov
jb
push
push
sub
jl
repnz
sub
scas
xor
sub
aas
mov
sub
dec
jb
cli
adc
es
out
imul
adc
cmp
adc
fs
or
fisttpll
sbb
dec
lret
scas
scas
jnp
out
int3
imul
cmpl
adc
packssdw
lods
imul
dec
push
sbb
push
jbe
sbb
xlat
ss
pop
popa
cmc
rcr
xchg
dec
or
push
addb
push
fstps
and
mov
adc
xchg
leave
push
mov
mov
aaa
popf
dec
cmp
inc
jp
mov
fs
int3
int
ljmp
cltd
add
mov
cmp
in
lods
cli
jmp
xlat
insb
xor
cmp
or
jb
mov
inc
dec
pop
mov
imul
scas
sub
scas
dec
xor
mov
ss
push
in
iret
sbb
xor
push
test
and
mov
pop
inc
bnd
jo
xchg
cltd
push
xchg
inc
dec
stos
lods
mov
cmp
cs
repnz
pop
and
mov
shll
xchg
xchg
in
mov
dec
push
aas
movsl
insl
ret
pusha
fcoms
mov
jecxz
push
jns
outsl
jl
jns
insl
sbb
pop
pop
sarl
adc
sub
push
mov
sbbl
mov
adc
test
xchg
mov
rcrl
aaa
out
cmpsb
mov
enter
mov
fwait
pusha
xor
fisubs
pop
jnp
cmc
and
loop
imul
push
and
mov
dec
scas
pop
in
scas
aas
xor
xor
mov
inc
popw
subl
pop
movsl
jp
aas
dec
mov
test
mov
inc
js
pop
cmpsl
inc
and
pop
cmp
shrl
les
mov
jo
out
cs
stos
xor
mov
mov
cwtl
sbb
xchg
xchg
pop
mov
cmp
push
stc
xor
aaa
mov
mov
test
push
mov
dec
pop
and
pushf
pushf
xchg
push
test
mov
adc
add
xchg
or
cwtl
lods
adc
int3
inc
lock
xchg
ss
lret
addl
dec
movsb
mov
mov
adc
int3
adc
clc
sub
sahf
movsb
prefetch
xor
push
lahf
jl
adc
shrb
inc
add
hlt
pop
push
sbb
pop
mov
cmp
mov
jge
xor
xchg
inc
inc
adc
cmpsl
fs
sub
cmpsl
dec
mov
push
pop
sbb
mov
js
xor
mov
movb
add
mov
in
adc
and
roll
and
inc
clc
movsb
or
push
stc
xor
adc
xor
xlat
pop
stos
scas
add
es
fsub
cs
mov
mov
cmp
loop
scas
adc
adc
mov
fwait
enter
sbb
sbb
stc
adc
pop
mov
inc
or
scas
dec
call
imull
enter
inc
ret
jne
sbbb
sti
push
xchg
subb
adc
loope
sub
sbb
rorl
rcr
nop
loop
inc
sub
cmp
sbb
ja
inc
and
cwtl
pop
loope
out
rcrl
dec
xchg
outsb
sbb
stos
arpl
xorl
pop
mov
or
pop
push
arpl
mov
adc
pop
stc
dec
mov
cmpsl
cld
data16
jne
mov
mov
sub
cmpsb
push
or
push
push
lock
dec
and
andps
negl
je
mov
add
mov
xor
pop
idivl
and
enter
adc
std
pop
lcall
fildl
sbb
add
test
mov
jb
pop
loopne
xlat
mov
scas
dec
mov
test
fimuls
and
mov
xchg
lea
mov
xor
rcl
adc
dec
cmc
jo
inc
xor
cmp
sub
sbb
in
adc
inc
sub
inc
xor
in
adc
xchg
xor
call
lods
xlat
jno
stc
lods
inc
mov
sbb
adc
iret
outsb
mov
leave
push
lcall
cli
push
ds
sti
jl
push
mov
fmull
add
and
popa
jg
sub
rclb
push
loop
adc
das
push
mov
cld
mov
aam
or
lahf
mov
fbstp
and
sbb
and
lahf
in
xchg
inc
xchg
xchg
and
rclb
cmp
ret
sbb
mov
xchg
push
xlat
call
push
lret
xchg
push
jl
mov
ret
mov
fcompl
jnp
or
test
or
repz
ds
adc
ds
sbb
ljmp
gs
and
dec
fucomi
and
xor
aaa
jno
xor
or
lds
in
or
movsb
mov
scas
adc
daa
imul
fcomip
adc
repnz
les
mov
ds
rcrl
mov
push
xlat
sbb
sub
xchg
int
call
out
insl
aas
subl
pop
xlat
pop
jne
outsl
stos
fldl
loope
andb
icebp
setbe
cltd
stc
mov
sahf
push
insb
adc
dec
jle
out
sbb
pushf
sbb
xor
xor
sahf
push
es
mov
idiv
mov
or
incl
sti
pop
sub
mov
dec
outsl
or
iret
clc
ja
and
push
cwtl
outsl
cmc
jns
cmp
ret
lcall
cltd
sbb
aas
popa
ja
add
fnstenv
push
mov
and
out
movsb
xchg
ret
in
jp
or
int
adc
xchg
mov
mov
jnp
jmp
inc
jnp
sahf
inc
sub
jmp
dec
cmp
push
xchg
repz
pop
fwait
xchg
insl
sub
push
pop
orl
xchg
in
adc
inc
clc
shll
jbe
lret
jmp
imul
mov
and
push
dec
cmp
sub
jnp
out
imul
insl
cwtl
jae
adc
int
pop
gs
incb
sub
mov
sbb
lods
mov
xor
aad
fnstsw
inc
mov
jne,pn
inc
cwtl
or
adc
push
clc
pop
loop
clc
clc
cs
adc
add
cld
sbb
xchg
mov
faddl
sti
and
jecxz
mov
mov
push
call
mov
repz
iret
shr
movsb
jmp
fstpt
sub
pop
insb
test
jbe
push
out
out
push
lea
aas
icebp
imul
xor
inc
push
cmp
push
nop
test
and
jp
pop
arpl
fadds
pop
xor
lds
sub
stos
rclb
test
jns
test
mov
leave
sahf
push
and
or
les
jae
xchg
add
jne
dec
lahf
rcrb
push
sahf
xchg
cmp
jp
cmp
stos
test
xchg
cmpsb
adc
xlat
xlat
jbe
xor
push
je
cmpl
sti
aad
mov
xor
insl
inc
imul
inc
out
js
sar
mov
mov
dec
movsb
xchg
popf
push
xor
pop
adc
inc
xor
and
aaa
mov
aas
dec
push
mov
xlat
or
or
jno
decl
and
inc
cmp
sub
mov
cli
stc
sbb
cmp
push
movsb
inc
pop
ficomps
jp
pop
xchg
add
aad
xchg
or
and
adc
clc
push
fstps
or
lock
mov
aas
mov
and
jge
cs
xlat
add
int
fsubl
inc
or
xor
add
lret
xor
xchg
sbb
aad
ja
inc
stc
mov
adc
inc
dec
jb
cltd
outsb
push
or
stc
push
mov
fdivrl
fs
mov
sub
mov
pop
movlps
ret
push
jg
and
mov
mov
add
imul
or
out
mov
fdiv
pusha
sbbl
stos
add
in
ffreep
nop
mov
jns
cmp
es
jl
fimull
adc
es
jecxz
cwtl
mov
adc
iret
add
clc
loope
mov
jmp
ja
push
lock
xchg
lods
push
jle
or
dec
inc
outsb
addr16
xchg
sub
int
or
test
dec
mov
mov
jns
mov
and
mov
inc
inc
dec
roll
lret
jp
dec
dec
mov
dec
ret
push
addr16
pop
test
data16
pop
arpl
fnstcw
mov
sub
inc
dec
push
fldenv
rolb
cmc
movsb
push
cli
ret
sarb
inc
push
lret
mov
cmc
rol
sub
add
mov
fwait
mov
jnp
and
fistl
add
sub
inc
fdivrp
xchg
hlt
pop
adc
enter
xchg
adc
pop
xorl
sub
mov
clc
mov
pusha
xor
lret
iret
jno
movsb
ljmp
jg
lock
pushf
or
sti
and
and
in
nop
mov
stc
inc
mov
sub
fcomi
xchg
xchg
stos
jns
jg
mov
push
sub
stos
pop
movsb
ret
sbb
int
andl
sbb
sti
inc
ret
push
stos
leave
cmp
adc
fwait
pop
push
pop
mov
push
sbb
xchg
movsl
test
bswap
les
inc
jg
int
int3
xor
sub
push
lea
add
mov
cmc
adc
ljmp
fidivl
mov
add
in
shlb
ljmp
sbb
roll
push
in
rclb
xchg
fidivl
or
clc
outsl
arpl
mov
popa
inc
pop
rorl
jne
jp
pop
cmp
ficoms
pop
out
popa
test
cmp
data16
cmp
xor
shlb
aad
repnz
lcall
int3
push
jo
decl
xor
inc
or
mov
aam
pop
pop
jmp
dec
cmp
and
rorb
sub
leave
imul
mov
addr16
xchg
push
ss
jle
inc
std
in
das
fcoml
repnz
cmpsl
bnd
pushf
test
adc
fmuls
dec
lods
hlt
in
stc
daa
cmp
inc
pop
adc
xchg
jne
xor
inc
adc
stos
pop
lret
add
in
mov
pushw
sub
sub
jmp
cwtl
sbb
jg
cli
ss
mov
mov
and
lret
pop
push
or
out
xlat
sub
jns
insb
into
xchg
vpor
xchg
xor
dec
jmp
cmp
ret
jge
or
inc
addr16
or
iret
mov
jbe
inc
push
in
lahf
cs
out
ds
sbb
push
into
mov
dec
push
mov
adc
pusha
lahf
push
and
arpl
cwtl
loope
sub
pmullw
popf
orb
and
pop
cmp
push
pop
loope
aam
into
js
stc
inc
xor
xor
movsl
or
inc
dec
pop
lods
pop
insl
flds
push
data16
or
jnp
stc
inc
ds
add
fimull
hlt
stos
inc
or
mov
cmpsb
add
cld
outsb
pop
shll
int
pop
cmp
xor
rorb
ror
push
add
push
stos
jns
sbb
dec
xchg
cmpsb
lret
jmp
sahf
aaa
adc
pop
knotd
enter
adc
fwait
inc
call
sahf
imul
jp
cmp
pop
lea
push
inc
push
mov
add
pop
fsub
mov
popf
cmp
ficompl
mov
sub
sbb
sub
outsl
inc
fadd
rcrl
out
faddl
testl
daa
aaa
or
dec
icebp
inc
or
ja
add
mov
cmp
pop
imul
mov
xchg
adc
int
aad
jle
mov
mov
push
sub
jbe
iret
sbb
and
dec
fistps
loope
test
leave
mov
add
inc
cwtl
pop
sahf
repz
imul
leave
xor
jle
cmc
rcrl
mov
sbb
jbe
dec
imul
jae
pop
xchg
jmp
cmp
sbb
in
mov
pop
push
sbb
inc
mov
jae
ljmp
mov
push
pop
addr16
es
cmp
inc
cltd
jno
rcl
sahf
in
xchg
dec
xchg
js
gs
in
inc
and
sbb
pushf
dec
jns
cmpsl
pop
aam
add
xor
mov
or
movsl
arpl
pop
add
xchg
dec
insb
cli
mov
mov
or
inc
lahf
test
jno
fldcw
mov
arpl
mov
sub
fwait
sub
inc
cltd
xchg
dec
and
rorl
xor
int3
icebp
in
cmp
das
jno
adc
xor
out
outsl
inc
mov
cmpl
and
sbb
into
test
imul
out
mov
mov
hlt
mov
test
pop
sub
pop
daa
outsb
rcl
imul
test
push
lahf
push
scas
insl
push
ret
xchg
jo
fwait
sarl
xor
sbb
and
cmp
sub
outsl
cmp
aam
lock
fsubrl
std
cmp
jg
inc
adc
add
mov
push
addr16
jmp
pop
imul
inc
xchg
mov
sbb
fldenv
dec
jp
mov
aam
pop
test
dec
mov
ljmp
dec
push
fists
clc
ficoml
jmp
mov
rcrl
repnz
mov
adc
inc
jno
into
dec
nop
aam
sub
cmp
sahf
xor
mov
xor
out
xchg
cmpb
fcmovb
ljmp
add
inc
inc
push
cmp
mov
mov
adcb
std
leave
imul
sti
mov
sub
movsl
js
inc
mov
push
popf
leave
iret
out
jo
jecxz
cmpsl
sbbb
adc
mov
fidivrs
push
jp
fadds
dec
pop
ret
push
mov
filds
jecxz
jecxz
test
xor
iret
mov
aas
adc
imul
hlt
and
jb
mov
cmp
xchg
push
sub
cmp
mov
sub
jne
or
add
shrl
or
mov
mov
or
jge
add
in
lahf
gs
and
dec
and
lea
test
pop
cltd
cmp
xorl
lds
adcl
fcomp
mov
dec
lret
out
push
adc
add
outsb
and
inc
sub
test
and
dec
stos
mov
push
outsb
pop
call
insb
sahf
dec
mov
scas
pop
mov
add
pop
mov
cmp
mov
adc
cmp
push
jp
hlt
sbb
pop
xchg
stc
sbb
inc
push
cmp
scas
fcmovu
cmp
jns
mov
mov
mov
fiaddl
rclb
mov
push
push
adc
pop
notb
push
insb
fnstenv
sbb
mov
mov
lahf
iret
lahf
enter
mov
xor
fildll
inc
mov
inc
lret
dec
aad
dec
aaa
and
xchg
test
sbbb
aaa
les
into
xor
mov
inc
pop
loop
inc
repz
cmp
mov
frndint
and
pop
rolb
mov
fwait
inc
loope
sub
jp
aas
and
xchg
scas
adc
adc
inc
dec
popf
jmp
xor
sbb
rol
pop
cmpsl
sub
and
push
fwait
sub
jbe
xor
dec
add
add
test
fxch
xor
jae
cs
push
mov
scas
xchg
daa
cmp
pop
repz
sbb
lahf
dec
push
xor
sbb
leave
lret
adc
mov
lret
add
mov
cmp
jg
inc
jns
dec
leave
dec
sbb
sbb
les
clc
data16
stc
and
aaa
cltd
mov
sub
icebp
adc
pop
ss
out
cltd
shrl
out
in
or
pop
xchg
hlt
ja
fdiv
push
call
jae
and
lcall
jp
xchg
cmp
push
out
repnz
out
pop
dec
fstps
dec
sbbb
jb
jl
out
mov
xchg
cmp
sbb
dec
cwtl
lret
movsl
std
mov
inc
iret
and
xchg
and
mov
addr16
lods
and
fcoms
out
jecxz
xchg
jo
pop
cmp
out
xor
nop
sub
nop
cs
pop
das
aad
repz
pop
mov
fwait
add
lret
iret
pop
or
in
lea
push
adc
cmpsl
xchg
jmp
push
js
rclb
add
push
dec
mov
push
loope
ficomps
mov
ds
test
fs
addr16
sarl
push
lea
in
iret
jns
divps
lcall
mov
mov
sbb
out
jle
movsb
jb
popf
push
and
push
movsb
cmpps
lock
loopne
cmp
sti
std
cltd
sarb
push
in
popf
pushf
data16
push
and
xor
repz
push
inc
add
icebp
add
mov
scas
cmp
aad
dec
call
dec
shll
add
adc
mov
imul
jmp
pop
and
mov
sub
mov
jbe
movsb
pop
rcr
in
aad
pop
loope
pop
mov
aas
nop
clc
sub
or
std
xchg
xchg
pop
sub
in
or
pop
inc
in
mov
push
jecxz
xor
loope
jmp
dec
jno
xchg
pop
cmp
and
and
xchg
or
in
mov
sarl
sub
lret
push
rorl
xchg
aas
hlt
incb
loop
adc
arpl
adcl
mov
aad
out
sbb
push
test
es
int3
les
cmp
lock
mov
mov
sbb
inc
dec
mov
adc
lahf
mov
notb
lea
int
mov
scas
jb
xchg
pop
xchg
jbe
iret
sub
ja
daa
inc
xlat
push
lock
negb
sbb
mov
mov
shll
jecxz
inc
les
xchg
mov
adc
sbb
clc
daa
jo
xchg
and
push
jae
mov
fucomp
scas
bound
stos
in
xchg
sbb
test
jne
sub
out
push
xchg
out
stos
jecxz
mov
lret
xor
subl
in
push
aas
mov
popf
xchg
lea
scas
mov
cmp
xor
inc
add
dec
push
mov
sub
shrb
adc
popa
mov
adc
mov
repz
add
pop
xchg
pop
rcll
mov
stos
std
movsb
daa
pop
sbb
sbb
cmp
push
push
loope
mov
pop
shll
call
cli
mov
pop
aad
out
mov
xchg
mov
aam
and
sbb
movsl
into
and
daa
xchg
movsb
cmp
mov
cmp
pop
dec
cmc
addb
rcrb
lcall
xor
loope
movsb
shl
or
mov
or
test
pop
fxam
pusha
sti
xor
inc
push
xor
out
jp
in
jae
lock
mov
es
icebp
icebp
andl
push
sbb
ja
hlt
shrb
out
fs
iret
and
mov
adc
pop
or
sahf
das
inc
int3
stc
push
jl
loopne
jo
test
dec
data16
cwtl
jns
mov
mov
movb
aaa
jb
loopne
in
stos
outsl
gs
daa
xchg
in
adc
xlat
popa
dec
pusha
jo
cmpl
aam
cli
test
aaa
outsl
arpl
push
dec
test
pop
cmpsl
cmp
outsb
je
int
cmc
imul
jb
cmp
cmp
arpl
push
mov
cmp
fadds
fwait
sbb
outsl
roll
std
or
jle,pn
clc
outsl
pop
mov
jnp
and
xor
sbb
jl
loope
mov
inc
push
sbb
mov
dec
packuswb
and
int3
js
push
pop
push
sub
sbb
inc
lret
inc
in
sub
movsl
pop
dec
xor
scas
aas
jbe
mov
mov
push
loopne
adc
scas
mov
stos
in
mov
sub
sub
enter
inc
lods
adc
add
das
lock
push
xchg
inc
mov
fists
in
loope
inc
shll
cs
inc
mov
rorb
mov
add
movsw
lcall
std
mov
mov
into
arpl
push
pushf
pop
inc
pop
and
cmpsl
jno
dec
nop
cltd
jbe
adc
inc
xlat
sahf
and
jmp
dec
cmc
mov
nop
and
mov
lods
stos
bound
jecxz
sbbb
sbb
mov
out
add
xor
rcrl
jle
lahf
pop
mov
leave
shll
and
xchg
arpl
jo
rolb
mov
leave
sub
push
adc
push
inc
and
jno
xchg
sarl
scas
cli
data16
int3
mov
push
inc
ds
mov
fs
pusha
hlt
mov
or
jecxz
dec
hlt
fstpl
jns
ret
pusha
mov
xlat
cmp
sub
notb
lret
cmp
or
sbb
bound
push
mov
enter
insb
mov
sahf
mov
mov
inc
dec
cs
pop
cs
call
xchg
fdivrl
push
nop
lcall
jo
mov
jnp
lods
andl
bound
push
test
xor
add
orb
sub
sbb
fldl
cmp
or
push
repz
pop
push
rorb
xor
leave
imul
daa
cs
lock
mov
pop
in
fnstenv
pop
jmp
es
imul
inc
xor
inc
sbb
add
aad
pushf
pop
mov
lods
lock
cs
enter
inc
pop
int3
std
jb,pt
cmp
mov
and
adc
jne
inc
and
ret
roll
shl
mov
stc
or
sbb
cmp
out
in
popf
iret
lock
dec
adc
sub
xor
mov
scas
scas
loope
jp
jmp
test
xchg
ficoms
pop
mov
outsb
mov
stc
es
lods
xor
pop
or
sub
insl
and
push
mov
dec
stc
ja
sbb
into
outsl
pop
push
stc
subb
xchg
push
sbb
xchg
fildl
cmpb
inc
int
shrl
addr16
jle
or
mov
stc
xor
lret
add
add
sub
sbb
jmp
mov
lcall
or
in
or
call
sub
push
push
iret
add
icebp
add
enter
jno
dec
es
or
stc
jp
inc
add
stos
je
cmp
dec
movsb
fadds
test
pop
into
xchg
enter
push
jge
mov
and
leave
and
es
mov
insl
jo
mov
fildll
mov
xor
push
sub
mov
xchg
cmpl
pop
cmp
xor
cs
loopne
je
jae
clc
leave
adc
pop
jbe
rcrl
pop
cmpsb
outsl
jne
int
pop
or
jmp
and
xchg
xor
imul
ds
aas
push
mov
mov
gs
sarl
pop
sbb
popf
push
enter
into
insl
aas
loop
cmp
xchg
je
dec
loopne
sbb
pusha
and
and
xchg
aas
dec
out
fsubrs
mov
push
pop
jecxz
jne
adc
cs
cmp
xchg
xchg
test
xor
mov
xchg
adc
inc
push
iret
mov
jmp
dec
pop
inc
test
xor
sub
sub
rep
mov
sub
pop
lods
fildll
jmp
cmp
pop
mov
gs
jnp
ret
das
faddl
iret
mov
sub
aas
jl
xor
add
sbb
jns
sbb
mov
xlat
xchg
sbb
pop
and
fidivs
pop
scas
mov
inc
mov
inc
shll
scas
mov
add
stos
sub
hlt
leave
cmp
in
ds
sbb
dec
push
or
sahf
mov
iret
xor
xchg
enter
sub
mov
jb
gs
xchg
pop
and
or
xlat
insl
pop
sti
pop
hlt
inc
scas
pop
inc
jnp
leave
fidivrs
mov
push
or
in
bound
shlb
adc
insl
lods
das
fs
clc
sub
lahf
mov
pop
shl
adcl
jmp
inc
mov
inc
cmp
dec
xor
cli
leave
sahf
gs
jecxz
cld
imul
fdivrs
xchg
repz
xchg
js
fsubs
inc
dec
xor
mov
fdiv
data16
mov
inc
mov
or
punpckhbw
mov
pop
sub
scas
sub
scas
dec
mov
lcall
dec
mov
test
lcall
mov
sti
out
jle
jo
stos
jns
cld
xchg
and
cmp
adcb
sub
sub
jge
mov
adc
or
dec
mov
push
cmp
jo
xor
pop
mov
repz
in
sbb
leave
xor
mov
jle
out
mov
js
jecxz
push
mov
in
pop
xor
adc
pop
mov
adc
inc
fidivrs
sbb
or
jo
stc
inc
repz
and
cmp
addb
cmc
inc
jle
enter
lock
sarb
push
pop
insl
mov
cmp
jge
jns
push
stc
das
dec
xchg
sub
orps
dec
dec
cltd
sbb
repnz
or
dec
fistpl
fisubrl
popf
or
pop
lahf
ljmp
loope
nop
or
push
sbb
add
adc
out
imul
cwtl
and
push
clc
stos
xlat
adc
aam
std
es
and
ss
popa
mov
fldl
sub
push
push
outsb
jno
pop
xlat
add
inc
pop
pop
xor
or
push
sub
xchg
push
mov
adc
rcrl
imulb
icebp
add
and
or
xchg
xor
sub
fs
push
out
shlb
mov
andl
mov
sbb
stos
cs
push
test
adc
test
pop
xchg
dec
push
and
sbb
jae
movsl
mov
jae
and
sbb
out
jnp
mov
insb
arpl
cmp
rclb
jnp
mov
bound
sbb
icebp
add
dec
or
sub
je
mov
push
cltd
mov
mov
roll
notl
push
mov
rolb
lret
mov
mov
scas
inc
push
push
and
xchg
shll
shrb
cmp
and
clc
ret
int3
popf
les
push
les
popa
das
jns
pop
ja
mov
insb
mov
ffree
enter
fists
in
mov
xor
xchg
sub
mov
cmpsl
xchg
dec
push
popf
negb
jns
cwtl
or
gs
outsl
pop
inc
outsl
adc
test
imul
xor
push
jno
rcrb
dec
inc
dec
jmp
jne
jns
sbb
or
adc
cltd
std
fstpl
inc
nop
adc
push
sbb
lods
push
fildl
jecxz
outsl
sahf
dec
jl
shlb
xchg
iret
jae
xchg
jbe
and
jo
lahf
sub
xor
cmp
movsb
scas
test
push
mov
and
sub
sbb
xor
cltd
xor
pop
sub
sbb
sub
pop
xor
mov
fiaddl
jno
hlt
mov
js
pop
xor
cld
roll
dec
xor
sti
and
jne
adc
mov
inc
pop
dec
hlt
sti
jmp
mov
sbb
dec
lods
stos
pop
sub
inc
in
insl
lret
lcall
repnz
fsubrl
test
iret
aas
mov
addr16
aaa
cmp
leave
or
mov
jbe
leave
gs
and
inc
das
jmp
ds
fistps
sbb
adc
add
mov
xor
sub
lret
cvtps2pi
int3
push
sub
loopne
in
leave
pop
aaa
lahf
jns
aam
scas
xchg
inc
add
add
call
lods
jl
xor
mov
fdivp
insb
cmpb
loope
pushf
idivb
fisttpl
xor
dec
das
mov
mov
cmp
xchg
push
mov
add
in
inc
outsb
jo
sub
dec
jp
stos
mov
and
lret
cmp
repnz
and
lods
add
mov
inc
scas
in
daa
in
cmp
cmp
iret
jb
inc
add
dec
xor
xchg
in
pusha
lods
push
mov
add
out
sbbb
xchg
lret
xchg
hlt
jl
bound
movsb
sub
gs
ret
loop
insb
rep
std
pop
pop
test
outsl
adc
xchg
popa
inc
test
shll
mov
adc
outsl
loopne
jno
clc
lret
fwait
push
pop
inc
sub
cli
lahf
ret
cmpsb
mov
push
rorb
mov
push
xchg
imul
out
insb
xor
js
movsb
adc
pop
out
mov
cmp
mov
or
movl
xor
lcall
cmp
loopne
jbe
ljmp
movsb
loope
sbbb
and
in
ja
pop
lock
cmp
out
push
popf
in
mov
sub
int
mov
fidivrl
pushf
xchg
lret
sbb
stos
lods
out
inc
push
jp
or
lahf
outsl
cltd
pop
sbb
fsubr
fs
mov
icebp
pushf
sbb
push
or
call
mov
add
pop
mov
pop
loop
test
loope
xlat
pop
ret
mov
push
imul
mov
subb
cs
scas
push
fnstsw
aas
xchg
stc
sub
push
sbb
repz
cmpsl
lret
movsl
pop
pop
ror
sahf
int
pusha
jno
or
mov
fwait
dec
xor
and
mov
inc
mov
sub
adc
sbb
cmc
les
imul
push
fcomps
mov
push
pop
xor
lods
jge
jecxz
push
rcrl
shll
scas
ror
clc
fidivs
sub
in
roll
mov
xlat
stos
scas
mov
fistpll
jo
mov
shll
jb
icebp
int3
push
js
cmp
out
lock
cltd
ja
pusha
incb
in
js
pop
ja
and
dec
mov
mov
repz
je
xchg
lcall
and
or
bound
aaa
pop
mov
aaa
es
repnz
sub
dec
outsl
dec
les
sub
fidivrl
mov
scas
pop
sahf
stos
cmp
xchg
icebp
call
xchg
jecxz
lret
jmp
into
test
mov
dec
mul
add
ja
leave
sbb
adc
shrb
inc
and
push
arpl
sahf
fmuls
test
mov
xor
sarl
adc
lods
dec
xor
xor
dec
int
popa
fdivp
aaa
add
fildll
push
sub
adcl
inc
shlb
fisubrs
sub
or
adc
push
sbb
jge,pt
xchg
jmp
cltd
push
outsl
mov
jb
mov
ljmp
inc
pop
jo
in
mov
stc
jecxz
push
test
int3
sti
aas
mov
add
out
inc
rcrb
mov
data16
pop
lock
sbb
mov
mov
and
mov
in
fmull
mov
sub
add
sub
pop
sub
inc
push
popa
std
push
fwait
sub
cmp
or
cmpsb
arpl
mov
dec
das
fidivs
sbb
addr16
mov
jo
fs
lahf
in
cmpsl
adcl
push
fmul
into
les
in
test
pop
and
add
je
jns
mov
mov
pop
sbb
xor
jno
fsubr
rep
xchg
es
in
arpl
push
and
cmc
ds
inc
mov
dec
lret
mov
or
sub
negl
adc
imul
push
cmpsb
mov
je
call
lret
cmc
je
add
mov
cltd
clc
xlat
hlt
jge
xchg
jae
xlat
lea
cltd
sbb
add
xchg
jg
out
jb
lret
add
jg
out
test
neg
or
mov
loope
pop
jnp
cmp
dec
call
fisttpll
mov
jne
xor
xchg
inc
xchg
jbe
mov
sti
jg
cli
addr16
mov
adc
add
push
and
fmul
jno
repz
test
mov
xchg
cmpsl
push
lret
es
mov
lret
shlb
add
push
or
sbb
ret
xor
cmpl
jp
jmp
fmulp
pop
lea
mov
ja
sub
cmp
and
ud2
pop
imul
rolb
pop
mov
jmp
dec
pop
mov
fisubs
shrl
sub
push
or
jl
sub
jns
cmpsl
jle
mov
pushf
iret
push
sbb
mov
in
cmp
mov
cmpb
add
dec
pop
push
out
es
idiv
jns
cmp
sti
jle
mov
loop
sti
js
xor
xor
lock
dec
lock
jge
adc
or
fwait
push
inc
fcoms
gs
fsqrt
pop
sub
fwait
cmp
sub
jne
mov
push
or
pop
in
add
sub
jle
or
orl
jo
adc
mov
pop
inc
pop
xor
inc
cli
in
aaa
adc
mov
cmp
test
mov
test
or
outsl
popa
lods
adc
sub
lods
add
inc
daa
dec
out
xchg
mov
sti
jmp
repnz
add
loope
mov
cld
xchg
sbb
mov
push
out
or
xor
insl
int
mov
stc
data16
cmpsl
mov
sbb
leave
mov
ljmp
pop
adc
or
push
lcall
shll
or
add
popf
out
pop
xchg
and
mov
push
mov
mov
rcl
mov
mov
mov
stos
repz
enter
popa
push
inc
mov
push
pusha
and
bndldx
andb
mov
cmp
mov
icebp
jns
dec
sti
cld
mov
or
aaa
mov
test
cld
xlat
adc
movl
mov
push
and
or
sub
adc
test
sub
push
fcoml
lds
cmp
pop
js
std
push
cld
scas
hlt
scas
sti
xchg
xchg
jecxz
scas
jmp
inc
jnp
mov
data16
sbb
push
push
lea
movsb
into
cmp
rcr
mov
push
notb
adc
es
mov
cmp
add
push
icebp
pop
popf
cmpsb
in
rcl
mov
mov
mov
int3
aam
and
imul
adc
aas
dec
repz
loopne
movsb
or
idivb
aam
cmpsl
jne
ret
jbe
mov
idivl
imul
push
pusha
out
daa
iret
pop
shll
mov
sbb
push
push
call
mov
outsl
aas
push
sub
icebp
pop
in
stos
sar
lret
mov
sahf
ja
rcrl
or
add
adc
leave
fimuls
and
sub
cmc
cltd
test
mov
lcall
jb
imul
jle
and
jo
movsl
clc
pop
push
jnp
mov
mov
xchg
push
mov
shrl
jge
and
add
fildll
cli
aad
jns
fstpl
in
jne
xor
ret
scas
imul
dec
enter
sub
fldenv
inc
movsb
and
mov
gs
loop
nop
fs
inc
das
mov
cmp
shll
adc
jns
xchg
push
mov
pop
pop
ja
inc
jmp
or
sub
inc
and
jle
push
cmp
add
lahf
ret
push
leave
insb
in
daa
sub
mov
test
test
call
mov
mov
xor
jne
mov
imul
and
jbe
add
imul
fstl
xchg
mov
into
mov
adc
xchg
xor
push
incb
nopl
fs
into
xchg
stos
or
dec
mov
dec
lret
xor
int
ss
or
arpl
cmpl
scas
int3
fsubrs
test
sbb
divb
push
mov
push
push
xchg
dec
popf
push
and
ja
test
mov
pop
and
adc
sbb
mov
out
pop
inc
fildl
push
dec
push
push
cmc
in
mov
das
jle
cmp
jo
movsb
shll
outsb
aaa
xor
mov
pop
clc
in
data16
xor
add
pop
cmpsb
push
enter
adc
xchg
jbe
lock
sbb
or
jp
jmp
js
adc
sub
movl
push
stos
daa
push
inc
lock
scas
sub
stos
fs
loop
ret
stos
pop
mov
push
ret
lret
add
pop
sbb
or
and
push
imul
mov
je
pusha
jbe
mov
repz
push
xor
cld
adc
jmp
pop
js
shlb
stos
mov
lahf
test
xchg
inc
push
iret
mov
loope
xchg
lahf
sahf
ret
mov
ret
cmp
cld
mov
loop
lret
dec
push
and
mov
pushw
push
test
mov
sbb
in
insb
out
cmpsl
aam
shrb
aas
pusha
bts
or
shrb
and
jecxz
cmp
cltd
push
push
cmp
and
dec
call
and
sub
jmp
cmp
mov
push
xor
aas
xchg
push
inc
pop
add
mov
int
clc
xchg
fisubs
ja
in
push
jns
push
mov
mov
xchg
xorl
sbb
in
decl
stos
adc
fldl
sbb
loope
popf
bnd
shl
mov
adcb
push
out
and
jns
mov
in
inc
mov
incl
arpl
ret
scas
xor
enter
fisttpl
movsb
mov
popf
jb
movsl
cltd
js
cmp
sub
in
inc
mov
mov
insb
mov
cmp
pusha
adc
jmp
sarl
lret
mov
aad
xchg
ret
jne
int3
mov
pop
xorl
arpl
cmp
inc
fdivl
insl
fadds
mov
jp
cmpsl
sub
movl
test
test
js
shll
lds
call
packuswb
mov
hlt
in
shlb
lcall
or
bound
mov
stos
mov
add
outsl
insb
mov
xorl
dec
ljmp
mov
fmuls
jne
lods
push
shll
rcrb
test
pop
mov
cli
stos
fs
xchg
lea
out
and
jnp
movsl
test
xchg
gs
dec
movsl
pop
cld
cmp
movsl
insl
lock
or
or
push
das
jmp
inc
sbb
or
les
fidivrl
ja
or
daa
adcb
out
sbb
mov
add
mov
icebp
imul
xor
inc
repz
xor
call
push
gs
or
lcall
bound
cltd
pop
mov
dec
cltd
sub
scas
ja
scas
xor
lods
add
xor
xchg
sti
mov
push
cwtl
mov
and
sbb
movsb
pusha
fisubl
loope
movsb
add
push
and
cltd
mov
daa
mov
jle
jbe
fbstp
inc
cmc
mov
fisttpll
adc
aad
adc
mov
pop
out
cmp
incl
cmpsl
inc
push
sbb
dec
das
cmpsb
fisttps
cmpsb
enter
sub
sub
cmc
inc
push
adc
inc
mov
lock
js
sti
sub
xchg
mov
lods
cmpsb
sbb
fistl
scas
jmp
and
sub
xor
fildll
ret
cmpsb
jae
sub
stos
divl
cmp
aam
inc
add
mov
and
rol
mov
pop
comiss
adcl
jge
sarl
pop
xchg
jl
dec
or
pop
dec
out
or
push
int3
mov
pop
loop
pop
not
stos
rol
and
in
push
xchg
mov
jns
sahf
mov
jg
mov
pop
add
inc
mov
sar
fs
inc
xor
sbb
push
sbb
xlat
lods
inc
sub
cmp
mov
mov
data16
negl
cmp
lahf
xchg
jmp
dec
or
cmc
fwait
add
stos
addb
inc
mov
xchg
or
rcrb
iret
dec
mov
in
notl
ret
cmpsb
mov
aas
xchg
pop
pop
pop
clc
lods
mov
icebp
mov
add
insb
in
pop
js
test
gs
out
jne
pop
lcall
js
mov
test
adc
adc
mov
mov
pop
jb
repz
dec
scas
fs
xchg
mov
dec
adc
jg,pt
test
or
fsub
out
in
gs
test
or
add
addr16
sbb
jbe
rcrl
call
or
test
add
mov
cmpsb
leave
and
popf
mov
daa
add
xor
inc
test
cmp
std
jb
adc
leave
cmpsl
push
jecxz
scas
pop
sbb
dec
cmp
jns
clc
and
cmp
cmp
stos
out
dec
sub
mov
or
or
aaa
fistps
sbb
cs
dec
dec
repnz
dec
xchg
insb
mov
xchg
dec
iret
xchg
cltd
mov
pop
testl
scas
mov
jl
push
pop
out
push
es
data16
pop
ljmp
xchg
xchg
pushf
call
popa
test
mov
and
and
xchg
mov
push
pushf
ret
mov
mov
xchg
bnd
stos
aad
and
and
outsl
push
add
dec
mov
cwtl
fwait
loopne
pop
jae
aam
mov
xchg
xchg
cltd
jg
popa
addb
hlt
push
cmp
shl
aas
sub
adc
xchg
adc
cmp
adc
lcall
pusha
sub
lods
out
rcrb
or
mov
mov
divl
and
loope
cs
rcrl
outsl
pop
inc
lret
stc
pusha
cmp
push
jp
loope
test
mov
mov
pushf
sarb
inc
mov
gs
js
and
cld
push
pop
das
pop
push
cli
xor
sbb
cwtl
test
push
daa
aam
pop
pop
leave
jecxz
fcompl
fdivl
pop
mov
arpl
adc
push
outsl
or
or
xchg
push
cmp
cmp
jl
add
pop
inc
mov
or
xor
ret
and
jns
ret
inc
shll
jl
or
and
cmp
in
int
outsl
addr16
outsb
inc
inc
clc
mov
push
pop
packuswb
cltd
orb
jns,pn
in
xchg
mov
mov
xchg
pop
lock
lahf
sbb
add
and
in
add
fnstsw
loopne
cs
sbb
push
ds
jo
insl
aas
mov
je
js
lea
sbb
push
out
pop
xchg
loopne
addr16
in
popa
and
rcrl
iret
enter
jl
dec
lcall
inc
pushf
add
mov
sbbb
xchg
inc
dec
mov
scas
scas
adc
mov
sbb
pop
shll
pause
mov
xchg
inc
loopne
outsl
xchg
xchg
dec
dec
int
dec
push
inc
inc
push
mov
lcall
aaa
xchg
mov
dec
daa
insl
imul
inc
and
orb
mov
xor
mov
or
jne
jp
rorl
mov
clc
sbb
out
out
mov
test
push
add
movsl
or
dec
jnp
or
rcrb
push
pop
or
dec
mov
out
es
xor
sbb
dec
in
push
jo
dec
mov
loop
cmc
fiadds
jne
in
jl
inc
aad
stos
push
ds
pop
popa
scas
lret
in
subl
sahf
imul
pop
scas
not
inc
cmp
sub
jb
cmc
sub
and
cli
sbb
daa
adc
inc
fs
jecxz
gs
adc
orl
rol
cwtl
add
mov
push
fisttpll
inc
pusha
inc
aad
xor
into
popf
ds
inc
jno
sub
fistpl
inc
mov
add
shl
lds
push
sbb
aaa
sub
cmpsl
and
pushf
es
pop
popf
loop
cwtl
mov
loope
popa
add
and
mov
jo
push
lods
clc
setp
lcall
dec
sbb
stos
addr16
in
pop
or
and
mov
shll
cltd
mov
cmpsb
pop
dec
xchg
or
sbb
cmc
in
xchg
pushf
lds
dec
adc
adc
decl
out
or
mov
cmp
or
dec
es
and
mov
xor
psrld
ret
pop
out
add
jp
and
mov
out
flds
das
les
sub
cld
dec
icebp
sub
rcrb
sarl
push
insl
push
and
test
cmp
xchg
cmp
or
iret
jmp
fmuls
loopne
push
lods
pop
fsubrl
mov
lods
cmc
shr
fwait
xor
inc
xchg
fistl
out
sub
mov
inc
mov
or
sbb
scas
xchg
inc
push
jecxz
add
mov
xchg
xchg
dec
in
xor
push
sub
les
xor
jp
jb
or
mov
daa
sahf
add
xor
aaa
jge
or
mov
and
ss
ljmp
mov
mov
ja
cld
andl
sub
aad
adcl
imul
push
mov
xor
adc
xchg
sbbl
stos
push
mov
pop
rcll
shl
adc
cli
push
jecxz
xor
mov
fimull
and
clc
clc
jle
in
out
pop
sub
insl
das
cmc
add
inc
rorb
push
pop
repnz
mov
or
pop
mov
inc
lds
xchg
dec
leave
push
xchg
shrl
xor
pop
mov
scas
mov
and
xlat
bound
pop
cltd
inc
sub
outsl
stos
mov
out
mov
mov
push
add
loopne
test
mov
add
push
xlat
testl
std
adc
mov
movsl
adc
or
imul
inc
psubsb
pushf
or
iret
clc
dec
dec
mov
repnz
mov
xchg
adc
cmpsb
jno
mov
xor
subb
icebp
js
xchg
divb
sub
sbb
add
add
sbb
xchg
pusha
idivl
inc
mov
mov
xor
out
ja
pushf
sub
clc
adc
push
imul
hlt
out
fisubl
cmpsl
push
and
mov
jle
mov
push
cs
fstps
scas
fisttpl
mov
mov
insb
ret
xchg
xchg
cmp
call
xchg
push
test
sub
adc
add
and
add
or
icebp
adc
out
sub
push
xchg
mov
outsb
pushf
cmpsb
je
pop
js
aam
mov
cmp
jmp
je
adc
std
xor
mov
rcll
xor
iret
xchg
jp
test
xchg
adc
jns
stos
inc
data16
gs
rcrb
or
shll
push
fnstcw
enter
mov
xlat
loopne
jno
lret
loope
xlat
add
pop
fldcw
mov
int
incb
int3
push
mov
mov
cs
cwtl
mov
and
xchg
and
jbe
scas
jb
outsb
lret
dec
inc
cmp
test
push
adc
add
jb
rcrb
mov
out
decb
mov
fwait
or
repnz
test
lret
iret
xchg
das
aam
pop
pop
cmp
push
cmp
shll
je
pushf
jbe
mov
stc
test
push
inc
movsb
adc
bound
rol
addr16
fcoms
sbb
xlat
fwait
mov
push
lret
imul
inc
mov
xchg
inc
daa
adc
pop
icebp
mov
lds
data16
jo
adc
out
ret
pop
outsb
ss
and
repz
pushf
incl
dec
push
adc
or
sub
outsl
out
imul
mov
mov
test
dec
pusha
in
loope
push
lret
mov
pop
sbb
push
push
or
mov
add
out
jle
jo
ficomps
xor
aad
inc
jo
sub
fwait
aad
cmp
pop
int3
ret
fildll
cmp
repz
outsl
sbb
sub
mov
addl
lock
les
xor
sarl
dec
das
or
shrl
enter
mov
dec
and
aad
int
jnp
cmp
int
jl
push
into
lods
rcrb
out
pop
xor
sbb
pop
push
push
div
sub
lahf
loop
jne
test
mov
pop
inc
xor
popf
inc
pop
outsb
lea
rcll
adc
fsts
mov
lret
dec
jp
cmp
add
sar
pop
adc
add
call
aaa
bound
mov
aaa
imul
inc
loope
sbb
lods
xchg
fwait
sbb
ljmp
int
cli
inc
sbb
leave
sub
lods
imul
jmp
pop
inc
mov
sti
pop
stos
sbb
cld
sbb
fwait
es
mov
sub
popa
cmp
sub
call
pop
mov
dec
dec
ds
push
and
sbb
ja
test
sub
push
push
jb
into
cmp
mov
sbb
cltd
bound
cli
notl
push
hlt
sbb
push
xor
cmpsb
repz
ljmp
popl
pop
mov
repnz
adc
aam
pop
push
pop
sub
nop
data16
das
movsl
lds
in
pop
dec
mov
clc
mov
mov
mov
jns
or
subl
mulb
out
sub
or
lret
dec
mov
cmpsb
xor
fisubrs
xchg
jge
fistps
std
mov
push
add
es
lret
jge
inc
mov
loope
cmp
adc
repnz
out
add
inc
fwait
cmp
in
pop
sub
mov
decl
inc
stos
mov
or
inc
mov
cmp
cmpsl
cmc
lret
push
jno
popa
xchg
add
int3
lock
in
pop
mov
jg
xor
sti
inc
fbld
fsubrl
shrb
xchg
mov
adc
pop
mov
int
addb
cmpsl
outsb
dec
adc
xchg
call
jl
inc
jne
jp
add
cli
shll
mov
std
popf
addr16
dec
sub
fmuls
mull
inc
mov
jg
fnsave
push
push
push
cmp
cmpsb
push
fnstcw
popf
mov
aas
test
cmp
xchg
inc
movsl
out
lcall
lahf
aaa
rorl
icebp
push
stc
aad
ja
fcmovbe
mov
loopne,pn
insb
fisubs
das
cmpl
cwtl
xor
dec
push
and
mov
sbb
sbb
sub
mov
psubusb
xchg
in
aad
mov
xchg
nop
loop
push
rcll
adc
xor
fisttpll
cmp
mov
and
xlat
dec
xor
fldt
sub
mov
ss
and
je
std
dec
dec
sbb
call
mov
fldl
stc
outsb
int
jmp
mov
push
and
or
sbb
clc
psrlw
and
pop
push
jne
into
inc
push
lods
lods
adc
outsl
pop
dec
orl
ror
roll
pusha
xor
jno
and
lret
cmp
sarb
pop
pop
sbb
repz
testl
test
into
test
std
cld
clc
xor
adc
add
lcall
mov
stos
adc
inc
dec
inc
cmp
and
xor
popa
xor
push
inc
jmp
sbb
dec
mov
mov
cmp
add
enter
mov
jnp
ret
scas
sarl
push
mov
cmp
or
or
inc
out
adc
fcoms
mov
pop
adc
testb
sbb
movl
add
adc
jnp
lret
mov
call
andb
outsl
out
adc
ret
test
roll
cmpsb
xchg
mov
dec
mov
xchg
ret
enter
adc
xchg
hlt
and
lret
mov
cmpb
xor
mov
pop
popa
jp
mov
lock
aaa
bound
mov
in
sub
inc
pushf
xor
mov
movsb
xor
and
jecxz
mov
adc
inc
mov
xor
in
adcb
sub
loop
fnstsw
int
inc
and
or
cmpsl
sub
or
pop
mov
and
test
aam
mov
jae
adc
in
mov
ret
jecxz
xchg
mov
push
inc
cmp
pop
add
fmuls
pop
addl
or
test
pop
sub
stos
mov
inc
das
inc
les
inc
jno
int3
movsb
outsb
push
push
rcrb
or
sub
daa
mov
or
dec
in
xorb
in
repnz
sub
sbb
mov
push
repz
insl
xchg
insb
mov
inc
xor
or
out
out
leave
sbb
jmp
xchg
dec
inc
stos
outsb
pushf
sub
xchg
int
lahf
dec
mov
aas
or
mov
jmp
stos
das
xchg
aam
addb
xor
ucomiss
test
sub
mov
or
mov
ss
mov
mov
ror
xor
jl
das
pop
repnz
sbb
insb
xchg
mov
xchg
je
loopne
jle
imul
lock
adc
add
orl
daa
mov
pop
add
aaa
fidivs
pop
addr16
xor
cltd
push
inc
fdivl
pusha
sbb
mov
inc
popf
sbb
mov
test
stos
pop
and
outsb
jl
mov
fsubrl
in
pusha
movsl
pop
add
fwait
imul
fildl
sbb
inc
mov
pop
xchg
inc
cmc
iret
mull
mov
xchg
divl
adc
inc
fs
dec
mov
lods
inc
pop
sub
add
adc
mov
cwtl
lahf
mov
xchg
and
outsl
push
xor
jmp
pop
stos
xchg
xchg
jae
inc
dec
je
mov
inc
pop
mov
sbb
sbb
in
push
mov
jmp
ljmp
adc
mov
roll
adc
cmp
out
cwtl
mov
rorl
sub
aas
xchg
mov
push
fadd
imul
bound
xchg
xchg
cwtl
inc
mov
aam
cmp
cmp
aam
push
sub
leave
stc
xor
vpunpckhdq
or
pop
mov
in
insl
out
out
in
mov
jae
out
fcoml
sub
fdivr
shlb
cld
lcall
sarb
and
psraw
mov
xchg
pop
sub
or
cmpsl
pushf
xor
xor
xor
insl
mov
and
enter
and
jbe
xlat
mov
push
push
xchg
jb
cmp
pop
jne
xchg
rep
jl
jmp
test
mov
xchg
push
call
pop
fiadds
clc
mov
jge
shl
push
lret
ljmp
or
pop
push
fwait
pushl
add
jmp
mov
mov
dec
fsubl
pushf
es
mov
imul
ljmp
mov
pop
pop
mov
xchg
mov
cld
test
cs
mov
mov
ja
pop
mov
jecxz
push
jp
sbb
jae
fstps
rcr
bsr
jnp
int3
lret
repnz
inc
sbb
addr16
sub
push
mov
vfrczpd
push
push
pop
loop
test
mov
repz
addr16
mov
mov
xor
jge
jle
or
mov
psadbw
fiadds
or
add
jo
push
xchg
test
pop
adc
inc
icebp
leave
cmp
mov
add
imul
les
clc
popf
mov
sti
mov
mov
xchg
cltd
lods
dec
out
xchg
sbb
cmp
sarl
ret
fisttps
jmp
fistpll
mov
xchg
je
in
lea
popa
sub
scas
adc
mov
push
mov
jle
shlb
fcoml
cmpsb
aaa
mov
xchg
xchg
scas
lods
sbb
cltd
xor
jecxz
rcr
mov
sti
mov
mov
sarl
aad
xchg
test
mov
push
out
sti
push
xor
out
stc
imul
push
jl
ret
adcl
pop
popa
or
or
mov
mov
repz
cmp
les
stc
fucompp
nop
aad
clc
jp
ss
int3
nop
imul
aas
sub
xlat
jp
test
imul
cmp
sub
cwtl
fsubp
or
push
jg
or
push
sub
mov
icebp
cmp
in
push
push
sub
mov
mov
ljmp
test
cld
fcoml
pop
push
int3
aas
dec
imul
jge
inc
mov
fisttpl
xchg
jae
or
pop
fmul
repz
jg
addps
repz
aas
ficomps
xor
and
test
xchg
mov
test
and
gs
fldcw
aaa
lock
fwait
out
xor
pushf
mov
nop
cld
adc
test
jnp
mov
sub
xchg
sub
sbb
dec
inc
adc
push
inc
mov
pop
push
outsl
pop
roll
jb
jle
popf
or
push
jge
insb
xchg
cltd
loopne
pop
fwait
jae
jmp
xchg
or
add
pushf
hlt
outsb
push
testb
enter
stc
mov
ljmp
xor
shl
mov
mov
adc
pusha
scas
mov
in
int
lret
adc
adc
pop
jns
push
pop
mov
leave
fsts
jae
in
std
ljmp
sarl
mov
cmp
or
xchg
js
lock
adc
inc
sbb
mov
mov
int3
dec
mov
addl
hlt
mov
mov
pop
sti
push
call
pop
dec
popa
in
xor
movsl
ret
jne
add
inc
push
mov
push
pause
or
mov
sbb
sahf
aad
push
push
int3
test
lret
add
insb
sbb
add
mov
mov
cmp
fbstp
push
out
test
sahf
xor
inc
fs
idiv
xor
fbld
dec
inc
inc
iret
shrb
hlt
iret
popf
sbb
mov
outsb
fldenv
xchg
adc
lahf
cmp
dec
imul
out
inc
popf
outsb
mov
xor
adc
cmpsl
push
xchg
shlw
jmp
sub
repz
dec
cmpb
inc
int
push
adc
mov
cmp
pop
jecxz
push
xor
fidivrs
rolb
and
xchg
in
mov
or
les
scas
and
jno
daa
xlat
jle
inc
sub
out
pushl
fldl
imul
in
in
sbb
bnd
into
shl
push
ja
repz
jb
jle
inc
daa
iret
sahf
lcall
stos
push
mov
popf
jp
into
dec
popa
jmp
jl
inc
std
pop
enter
or
lahf
and
jnp
fldl
mov
dec
or
push
and
inc
sub
cs
push
in
cli
lret
inc
mov
imul
int3
cmp
sbb
mov
cli
mov
pop
sub
repnz
inc
loop
stc
jno
dec
jb
add
push
popf
aaa
push
sbb
rol
jbe
fnstenv
jge
pop
adc
mov
lret
mov
int3
popl
repz
out
fistpl
int3
pop
aad
insl
popf
movsb
das
xor
stos
push
outsb
cwtl
xchg
leave
rolb
pop
jge
dec
imul
dec
cmpl
add
orl
int
imul
pop
mov
adc
test
cmc
xor
and
mov
in
test
or
inc
ja
or
lahf
iret
scas
ret
cmpsb
pop
push
and
sahf
mull
nop
call
inc
cmpsl
mov
mov
daa
iret
pop
je
cli
cmpsb
add
xchg
call
cmp
xor
icebp
mov
ljmp
inc
test
push
adc
lods
jb
inc
loope
adc
mov
jmp
into
ret
jmp
std
repz
cs
cmc
repz
into
popa
dec
lds
pop
ss
scas
adc
inc
dec
and
cmp
sub
pop
xor
jne
dec
int3
iret
sbb
sbb
enter
adc
mov
shrd
cmp
out
jmp
add
xchg
jns
cmp
mov
or
iret
loopne
and
jg
pop
pop
mov
call
add
sbb
sbb
sti
imul
into
sub
ret
inc
mov
ss
jmp
or
add
push
scas
filds
aam
jle
and
sub
arpl
ret
cmp
push
ror
adc
adc
cwtl
xchg
inc
fwait
dec
rcr
or
pusha
fildll
fs
mov
cmp
sub
test
mov
jl
pop
fcmovnbe
popf
in
push
cmp
popa
cmp
adc
mov
outsb
push
push
xchg
fsubrl
iret
setl
jl
mov
fsubrl
xor
cwtl
out
jb
xlat
mov
pop
idivb
testb
mov
pop
xchg
mov
xchg
inc
cmp
xorl
or
icebp
xchg
fstpt
dec
cmp
jno
sbb
sub
adc
inc
jl
icebp
push
inc
add
mov
cmp
hlt
adc
xchg
fimull
xchg
dec
and
pop
outsb
mov
les
pusha
pop
addb
jae
pop
mov
jae
ss
jne
scas
fbld
pop
insb
aaa
out
leave
sbb
mov
nop
cltd
or
aas
and
inc
pop
push
aam
loop
popf
add
sub
mov
cmp
mov
ljmp
int
jg
or
xchg
sti
inc
xor
mov
in
imul
xor
loope
xchg
mov
test
stos
stos
nop
popa
pop
xor
cmp
lea
mov
sti
ds
lock
xchg
outsb
adc
bound
xchg
dec
or
add
and
or
push
cmp
sub
sub
test
xchg
pop
sbb
rclb
ret
xor
or
xor
fdivr
mov
stos
xchg
or
lds
gs
lock
jp
popa
into
inc
pop
fcmovu
inc
repz
adcl
jge
mov
mov
pop
les
inc
inc
jo
mov
jnp
inc
sarb
ja
fwait
notl
cmp
lock
or
fildll
adc
ljmp
dec
or
and
in
ret
mov
cmp
or
push
and
into
rorb
jp
div
xchg
or
mov
inc
pop
add
repz
dec
ret
add
sub
fldenv
in
stc
push
enter
mov
stc
and
and
int
cmpsl
out
and
stos
mov
divl
sti
sub
xchg
jbe
or
int
ja
dec
enter
and
test
and
and
stos
add
mov
jmp
lock
and
out
in
jae
jle
sbb
ja
cmp
frstor
fcmovne
pop
jns
rorl
adc
inc
push
mov
pop
push
push
xor
or
lret
push
stos
mov
mov
in
push
and
fildl
insl
or
cld
mov
into
jmp
dec
dec
jnp
inc
adc
fisttpl
xchg
in
and
icebp
clc
xor
push
imul
bswap
cli
xor
stos
push
ret
and
pmaxsw
into
xchg
inc
mov
jno
sub
jmp
enter
dec
ds
inc
xorl
cmpsb
addr16
cld
mov
loop
inc
ss
ret
cmpsb
fwait
cwtl
test
insl
and
jmp
and
mov
push
xor
test
aas
sub
push
ljmp
fistl
jno
mov
and
and
dec
dec
xor
std
jne,pt
pop
mov
hlt
aaa
sahf
loope
mov
popa
jl
mov
popa
or
cmpsl
push
das
pop
fdivr
add
pop
pop
adc
fs
out
inc
cmpsl
out
insl
popf
call
cltd
test
sub
adc
lahf
fidivrl
leave
lret
lahf
jp
inc
jbe
les
cmp
fyl2x
mov
xchg
xchg
jge
mov
or
loope
cli
stos
pop
dec
repz
das
insl
lea
cmp
cmpb
aad
ror
inc
xor
jne
in
xchg
fidivl
rolb
ljmp
add
ja
std
push
xor
aam
in
mov
lock
sub
and
call
adc
add
push
sub
ret
fdivr
lret
push
idivl
lds
out
sbb
rorb
js
insb
dec
jo
arpl
jle
push
push
out
cli
cmp
inc
cs
pop
xchg
jg
test
cmp
mov
xor
jge
or
add
dec
jg
inc
shrl
fisttpll
push
in
repz
fcompl
xchg
pop
pop
out
sarl
popf
xchg
test
int
cmpsb
inc
or
mov
hlt
pop
cwtd
mov
add
sub
popf
push
int3
rcll
aad
mov
pop
clc
test
test
cmp
out
and
jg
inc
aam
test
and
aaa
stos
leave
sahf
fildl
pushf
cmp
test
xor
fisttpl
or
lock
sub
push
xchg
sub
icebp
scas
fsub
inc
jl
xlat
mov
mov
push
leave
fcoml
xchg
dec
cwtl
push
mov
xchg
mov
scas
xor
adc
shl
jo
mov
ljmp
aaa
rolb
jae
icebp
jns
sbb
pop
sbb
pop
mov
xchg
std
mov
or
fsubl
fldcw
dec
add
fnstcw
jp
pop
nop
mov
sahf
cmc
sub
mov
add
mov
pop
sbb
sti
mov
pop
fmul
dec
cs
ret
jmp
sahf
or
push
push
xor
mov
int
inc
xchg
cwtl
pop
cvttps2pi
outsl
iret
out
sub
push
jmp
jge
clc
fs
cmp
ret
jp
imul
icebp
rclb
popa
pop
and
or
out
dec
push
push
fbstp
mov
xchg
cmc
push
loope
add
mov
das
jle
or
jle
xor
packuswb
xor
xor
mov
decb
and
idiv
cmp
hlt
negb
mov
cmp
mov
push
stos
gs
cwtl
out
and
push
mov
fwait
pop
xor
cmpsl
xor
push
mov
adc
sar
notb
xchg
aam
mov
inc
fs
jg
pop
nop
stos
dec
jge
nop
es
addr16
jnp
or
fistps
test
pop
pushf
cwtl
mov
pop
sar
inc
mov
fstpl
xchg
jae
adc
dec
cli
stos
push
lds
dec
in
jp
add
mov
xchg
test
and
cmp
js
add
xchg
cld
add
cltd
popf
ss
dec
adc
xchg
ss
pop
inc
push
or
je
fstps
and
push
sbb
pop
adc
icebp
xchg
xchg
mov
stos
sub
add
mov
aas
sbb
dec
dec
faddl
inc
sub
push
push
or
loopne
xchg
push
ret
scas
test
out
lcall
icebp
add
and
mov
mov
mov
lret
adc
mov
dec
add
mov
mov
jp
push
xor
dec
ret
stos
and
sub
cmc
lret
lock
sbb
add
or
pop
jo
and
lcall
mov
inc
mov
sbb
mov
pop
into
ds
xchg
add
dec
out
outsl
std
ret
cmp
iret
mov
fimull
dec
xchg
lcall
mov
jnp
inc
ss
lea
out
in
dec
popf
dec
pusha
fstps
jl
xchg
fldl2e
js
xlat
shrb
or
subb
jecxz
cltd
pop
mov
repnz
xor
scas
cmp
or
adc
imul
jge
xchg
test
lods
sahf
mov
lock
pop
aad
and
sar
dec
mov
subb
adc
lret
xchg
mov
and
in
mov
ljmp
sbb
add
mov
sub
sub
mov
outsl
and
arpl
mov
lret
shl
mov
xchg
push
inc
lret
orl
push
addr16
mov
lret
adc
loop
push
pop
adc
xor
add
out
out
scas
inc
das
pop
xorl
lcall
xor
mov
xchg
sub
addr16
inc
mov
test
or
in
inc
dec
enter
jnp
mov
rclb
mov
mov
push
cmp
cmpsl
lret
fdivrp
jo
mov
test
dec
movsl
lds
mov
xchg
inc
mov
stos
sub
fld1
dec
or
mov
in
bound
shrb
imul
xor
subl
testb
sub
mov
bound
cmpsb
mov
jb
cmp
fwait
rcll
in
xor
and
lahf
imul
cld
xchg
push
adcl
sub
jb
adc
add
daa
lods
push
push
xchg
mov
cwtl
or
ret
js
mov
and
xor
fistl
adc
cld
hlt
sub
fisttps
sub
clc
mov
fnstcw
test
jge
jo
cmc
add
pop
pop
xor
int
add
dec
sub
mov
adc
imul
mov
cmp
sub
notl
int
mov
daa
lock
mov
lods
xor
lds
inc
gs
out
std
ljmp
inc
cmp
and
imul
loope
adc
out
xorl
xor
mov
dec
repz
mov
xchg
push
scas
icebp
lea
imul
aas
mov
fiaddl
pushf
loopne
aas
out
shll
pop
mov
in
mov
mov
mov
les
push
stos
addr16
stos
cld
outsl
scas
sbb
imul
inc
sbb
rorb
mov
mov
ret
fistpll
and
out
mov
mov
aam
mov
es
or
adc
mov
mov
xchg
js
gs
int3
mov
stos
pop
push
pop
or
push
mov
dec
and
push
lods
inc
add
stos
pop
push
rol
push
rcrb
or
lods
add
jecxz
popf
push
pop
shlb
fmul
sbb
add
out
outsb
addr16
daa
lock
add
into
mov
jne
or
in
mov
ja
out
cld
sti
cli
jle
repnz
stos
pop
add
test
add
jp
sahf
mov
arpl
xor
push
test
push
cli
push
mov
into
jmp
int3
movsb
fwait
or
insl
outsl
jns
and
rcrb
lret
mov
dec
mov
jge
mov
jp
jmp
imul
fwait
gs
adc
lods
push
push
fbld
ljmp
fstpt
cmp
fcoml
int3
fnstsw
ljmp
xchg
xor
pusha
push
addb
stos
push
sahf
adc
cmp
dec
clc
cmp
pop
cmc
xchg
in
roll
ret
mov
pop
xchg
clc
xor
xchg
movsb
rorl
sub
sub
mov
push
mov
lcall
cld
mov
sub
inc
pop
adc
dec
into
mov
and
in
sbb
scas
rcrb
lcall
xchg
adc
js
pop
add
pop
sub
popa
mov
cmp
ret
popa
sub
in
cmp
aas
jae
push
in
pusha
in
and
pop
mov
or
jnp
sbb
jnp
cs
addr16
in
sub
cmp
rcrl
fmuls
pop
push
jecxz
inc
cli
or
cmpl
popa
or
shlb
xor
xchg
out
loope
ret
xor
xor
repnz
daa
mov
leave
mov
push
xor
add
mov
cli
mov
shll
cld
add
ja
push
cmp
dec
mov
stc
lahf
xchg
gs
xchg
inc
stc
sbb
adc
cmp
sub
cld
adc
lret
xchg
imul
fnstcw
iret
scas
lret
pusha
lods
add
dec
cmp
push
das
iret
mov
jns
arpl
fildll
add
pop
add
dec
aam
inc
fsub
jle
icebp
fsubs
push
outsl
xlat
lahf
pop
push
push
cwtl
loopne
loopne
mov
fndisi(8087
jle
or
sbb
jnp
repnz
sbb
jmp
xchg
jmp
in
arpl
jns
mov
arpl
testw
ja
and
mov
mov
test
in
or
lods
dec
push
mov
fld
insl
sub
and
and
shrl
cli
mov
cwtl
xor
lcall
insb
aaa
addl
xor
pop
mov
jmp
push
in
test
jecxz
daa
push
lds
add
int
dec
jae
lahf
int
pusha
pop
inc
or
mov
add
sub
lock
lods
movsl
sub
adc
cmp
cmpsl
adc
sbb
fwait
mov
inc
inc
outsb
in
test
jecxz
mov
stos
das
popf
inc
jno
jmp
mov
pop
sub
adc
sub
mov
jmp
cmp
and
xchg
mov
inc
push
xlat
mov
in
lahf
lcall
sbb
sahf
pop
or
lods
cmp
out
outsb
test
cmp
xchg
mov
push
cli
mov
dec
add
pusha
mov
lock
cmpsb
repz
xor
popa
inc
lret
out
jo
cmp
leave
outsb
popf
insl
pop
dec
xchg
push
fisubs
insl
or
xchg
sti
outsb
lahf
fldenv
scas
pop
or
push
xchg
mov
shl
xchg
scas
sahf
pusha
mov
xchg
ret
daa
sub
cmp
ja
and
fldt
pushf
cmpxchg
push
jb
sub
call
js
xor
test
icebp
jbe
out
cmc
cli
cmovnp
mov
popf
pop
pop
enter
lds
hlt
mov
xor
in
pushf
stos
or
mov
imul
leave
pop
fimull
jo
mov
jbe
ljmp
rcrl
je
jmp
lods
shl
add
dec
mov
xor
fidivrl
mov
xor
lahf
cmpsl
lret
ja
xchg
jnp
stc
jnp
aaa
pop
call
inc
mov
and
daa
mov
dec
icebp
nop
adc
imul
xor
xor
or
inc
mov
in
pop
jmp
lret
repnz
mov
mov
add
and
xor
adc
sbb
pop
pop
shlb
push
out
sbb
fincstp
adc
in
insl
jp
ss
add
stos
inc
lahf
pop
imul
roll
add
daa
sbb
stos
mov
ds
dec
insl
mov
jbe
jne
mov
lret
test
jo
add
ds
inc
jnp
pushf
jmp
pop
xor
jp
mov
aam
sbb
xchg
mov
push
xor
iret
pop
mov
push
test
sahf
mov
aam
push
fs
add
mov
into
pushf
xor
inc
test
test
push
vmread
arpl
orl
lods
pop
mov
mull
mov
orl
xlat
out
inc
sbb
and
loopne
test
jle
sbb
jne
inc
push
xor
rcl
je
out
mov
pop
xchg
xchg
out
push
cmp
mov
repnz
ret
int3
fiadds
shll
divl
pusha
jbe
int
cltd
es
mov
xchg
lcall
stos
loop
out
sahf
inc
inc
lcall
adc
mov
outsb
gs
xor
xor
xchg
xor
sbb
imul
mov
outsl
and
int
repnz
addr16
mov
fwait
repz
xor
jl
ss
sub
pop
aaa
scas
pop
mov
int3
fcmovbe
icebp
inc
jmp
xor
lret
pop
xchg
xchg
test
popa
out
jne
push
fstpl
push
jmp
pop
sbb
fwait
je
push
pop
dec
and
imul
push
cmpsb
inc
cmpsl
out
pusha
push
push
shufps
push
nop
push
inc
lods
xchg
mulb
pop
xchg
adc
and
cmp
cmp
insb
scas
mov
inc
cwtl
adc
and
ss
stos
imul
aas
aas
adc
xorl
xchg
and
movsl
sub
push
jg
lahf
sub
pop
mov
ret
inc
cmp
and
mov
ftst
push
loop
inc
into
sbb
xchg
xor
les
stos
adc
popf
int
iret
pop
ret
push
loopne,pt
cwtl
mov
xchg
mov
sub
adc
jnp
clc
xlat
mov
in
into
out
add
bound
adc
popf
mov
cltd
pop
mov
sbb
pushf
outsw
jmp
push
mov
pop
push
cmpsl
jnp
stc
sbb
push
incl
xlat
or
xchg
jbe
sub
dec
std
lea
cmp
dec
jmp
mov
mov
jne
xchg
mov
push
int
cmpsl
arpl
jecxz
and
dec
aaa
cmp
cmp
aam
out
sub
fimull
sub
dec
sbb
jae
adc
pop
lock
mov
mov
dec
leave
fs
repz
push
test
adc
in
addr16
outsl
addb
popf
mov
clc
nop
push
lds
add
jmp
mov
cmp
test
sbb
push
push
pop
roll
sub
xor
aaa
sub
push
repz
fnsave
jp
add
jns
je
and
mov
lcall
lods
lods
add
es
xor
inc
adc
inc
pop
or
loop
xor
lret
repz
and
cmp
cmp
xor
rorl
aad
lock
shlb
mov
push
mov
mov
jg
lret
cmpsb
dec
adc
addb
adc
dec
lret
jge
adc
fstpt
add
mov
aaa
jbe
es
sub
xor
loopne
out
stos
lock
mov
sbb
sbb
jno
pushf
cmp
add
xchg
les
in
sub
lret
loop
sbb
cs
add
mov
lods
mov
aaa
cmp
ficomps
cmp
popf
insl
cmp
jg
leave
rcl
test
iret
jmp
xchg
and
pop
mov
and
cwtl
int
jo
je
ret
outsl
mov
mov
outsl
lods
adc
push
das
les
stc
mov
ds
imul
das
test
lods
into
hlt
sub
pop
inc
cmp
inc
adc
xor
out
repnz
pop
add
enter
rcl
mov
stos
movsl
xchg
test
sub
sti
les
inc
fistps
cmp
cs
out
adc
enter
pushf
test
cld
jg
leave
out
int3
jo
lret
push
push
scas
out
stos
xchg
mov
fcmove
vpavgb
dec
shrl
lret
sub
cld
push
lea
lods
into
dec
sahf
pop
decb
lock
pop
lods
add
sub
mov
jne
add
mov
fsubrs
or
sbb
or
mov
lock
push
sbb
scas
fnstsw
outsl
pop
scas
xchg
dec
push
push
ss
sub
lret
es
test
sbb
gs
lahf
inc
out
movsl
int
mov
jmp
or
testb
das
dec
repz
xor
pop
mov
sti
test
add
mov
xor
adc
dec
mov
or
filds
jns
jle
das
xchg
sub
cmp
xchg
enter
mov
sbb
pusha
pop
pop
incb
sahf
aam
iret
and
loop
xor
cmp
mov
into
push
int3
pop
inc
mov
xchg
adc
test
faddp
addb
inc
pop
sub
pushf
insl
dec
dec
ret
jle
loopne
jecxz
gs
jno
jno
mov
xchg
pusha
jo
and
les
jbe
adc
mov
shr
int
daa
xchg
outsl
and
mov
pmuludq
outsb
popf
or
in
pop
rcrl
mov
inc
jg
repz
xor
cwtl
push
xchg
xor
decl
xchg
fisubl
test
jns
vpaddq
rcrl
test
or
fadd
das
sbb
std
sub
cli
lret
push
pop
lahf
pushf
or
mov
and
insl
fildl
inc
sub
mov
and
lock
inc
out
or
pop
adc
pop
loop
ficompl
pop
mov
cmp
leave
push
aam
or
cmpsl
out
testl
fbstp
or
lcall
dec
cmp
push
jb
out
stos
sbb
mov
stos
adc
or
xchg
xor
ss
or
in
lods
xor
adc
or
xlat
nop
insb
pop
int
into
mov
mov
pop
mov
fimull
stc
roll
sbb
jbe
es
pusha
imul
cmp
fwait
mov
call
jb
sbb
or
cld
and
adc
lret
int
jge
sahf
jbe
in
loop
xor
pop
push
iret
repnz
pushf
cmpsl
pop
mov
les
mov
xchg
jge
inc
push
data16
sbb
push
fwait
xlat
data16
add
shrb
imul
xor
xor
cli
sbb
outsb
or
call
frstpm(287
int3
jb
shll
xchg
cs
gs
repz
adc
fiaddl
adc
shrb
sub
outsb
push
hlt
sbb
fldenv
sbb
add
inc
incb
arpl
daa
in
je
es
repnz
mov
daa
adcl
and
mov
dec
lcall
nop
jecxz
inc
mov
stos
jbe
ljmp
jge
fbstp
in
xor
fdivs
faddl
out
mov
mov
ret
mov
pop
pop
test
mov
les
inc
dec
jle
in
mov
xchg
adc
push
ret
add
add
fdivl
mov
mov
sbb
outsl
js
icebp
jb
test
into
pusha
xchg
push
add
std
or
nop
test
mov
mov
adc
xchg
stos
mov
out
xchg
test
and
inc
xlat
pop
mov
inc
cmc
xchg
pop
jle
xor
xchg
lret
pop
jp
cmp
mov
push
std
test
cmp
int3
mov
jb
cmpsb
cmpsb
jo
loope
add
cmc
add
cs
sub
fldl
xchg
sbb
rcrb
inc
movsl
in
fdiv
leave
or
mov
stos
sbb
add
sbb
jno
pop
loop
push
mov
pop
xchg
sar
fisttpl
xlat
incl
add
out
leave
lea
lcall
jb
repnz
xchg
push
mov
sub
je
and
dec
bound
cmp
xchg
lea
movsl
lcall
cmp
sub
sub
xor
repz
data16
push
cmc
out
clc
das
sbb
and
test
pop
pop
imul
cmp
rcrl
das
mov
mov
clc
outsb
addr16
pop
repz
scas
test
sub
pop
sbb
cmpsb
test
push
push
subb
aaa
insl
pop
xchg
shll
sbb
push
dec
mov
ss
push
shl
in
imul
jo
mov
repnz
outsb
xchg
mov
dec
in
mov
xor
mov
mov
rorb
and
pop
dec
sti
cmp
mov
pushf
xchg
mov
shrl
push
dec
fidivrs
push
shrb
stos
push
iret
insb
xchg
adc
pop
lret
mov
adc
adc
mov
std
xlat
sbb
xchg
push
xchg
daa
jle
mov
push
imulb
adc
add
mov
pop
mov
in
adc
incb
movsb
mov
punpckhbw
fdivs
dec
mov
int3
pop
push
aas
imul
add
iret
inc
mov
jb
jo
push
mov
rcrl
pop
scas
test
add
cwtl
je
out
ret
sub
js
xor
rclb
mov
xorb
jne
shl
mov
xchg
jge
jno
sub
pop
jp
daa
push
dec
and
sahf
mov
stos
push
lahf
xchg
jae
jge
jae
repz
cmp
lods
dec
or
movsb
out
adc
push
cli
lcall
mov
jns
xor
jns
mov
sub
test
in
or
or
test
mov
sti
inc
sarb
loope
cs
fcomp
outsb
jb
cs
push
xor
jbe
imul
movsl
addl
sub
jmp
in
mul
jns
fisttps
xor
xchg
test
pushl
adc
insb
mulb
in
add
mov
push
clc
adc
mull
sub
jns
mov
iret
jge
dec
out
cmp
imul
mov
ljmp
mov
repnz
mov
fxch
mov
inc
es
push
mov
aaa
pop
mov
in
mov
test
sub
rclb
adc
adcb
test
pop
call
dec
mov
cmp
pusha
lds
lock
es
iret
andl
cmp
fwait
bound
xor
arpl
push
jmp
std
mov
ficompl
or
lea
ds
into
push
add
mov
daa
xor
in
test
fimull
xchg
pusha
repnz
repnz
cli
mov
sbb
dec
sub
adc
push
or
adc
rorl
mov
push
push
call
cmp
stos
lea
pusha
loopne
cmp
push
aam
mov
xor
iret
jns
cmpsl
ja
imul
loopne
cwtl
sub
mov
cld
adc
cmc
mov
xchg
ljmp
sub
cwtl
pop
loop
dec
sub
jns
jo
cmp
mov
add
lods
cs
inc
dec
cwtl
xchg
int
jb
scas
mov
es
push
aas
mov
xchg
mov
lret
mov
jg
ret
and
mov
and
dec
inc
in
stc
sub
into
jae
leave
ret
loopne
jg
lea
fisttps
pop
in
xchg
jmp
sub
add
and
xchg
dec
or
jae
ror
fyl2x
inc
out
mov
test
xor
mov
popf
dec
scas
addr16
icebp
scas
or
aaa
scas
hlt
xor
cmp
push
in
test
inc
ds
ljmp
popa
orl
push
mov
and
or
or
stc
cmp
push
pop
dec
js
in
gs
in
mov
cmpsl
fstpt
pop
stc
push
jecxz
cmp
add
cmc
out
inc
and
xor
out
repnz
cld
jge
xrstors
cmc
loopne
mov
cld
adc
sbb
push
orb
xchg
push
and
icebp
out
add
push
js
cmpsb
inc
mov
out
mov
xor
cmp
out
mov
push
cmp
decl
sub
bound
addr16
bound
notb
push
xchg
dec
cmpsb
pop
dec
mov
orl
add
push
fs
push
popf
or
xchg
mov
cli
xchg
pusha
mov
imul
mov
mov
xchg
cmc
jno
flds
and
and
ret
dec
bound
mov
pop
ror
enter
gs
add
pop
je
mov
sahf
sub
ret
aas
push
stos
notb
arpl
push
xchg
jp
and
arpl
push
cmpsb
fs
mov
push
xor
data16
nop
mov
gs
daa
arpl
frstpm(287
ljmp
leave
enter
outsl
pop
stc
push
push
or
sti
adc
dec
mov
lods
test
inc
sbb
popa
xor
in
inc
mov
pop
and
mov
xchg
fwait
cmp
mov
aaa
pop
push
xchg
sub
sub
insb
sti
inc
adc
imul
jg
adc
mov
leave
aaa
pop
insb
jp
xchg
lret
jmp
aam
in
in
std
push
bound
adc
test
orb
adc
sahf
repnz
leave
or
call
cmp
mov
in
lahf
in
movsl
sbb
cld
mov
call
adc
mov
mov
mov
lds
xor
into
popf
fwait
sbb
mov
clc
add
sahf
ret
sbb
push
mov
jg
inc
gs
nop
sbb
pop
testb
jmp
and
pusha
add
jae,pt
pop
mov
pop
push
fidivrs
sbb
fiaddl
out
mov
mov
jle
mov
lods
insb
sub
filds
jnp
cli
xchg
xchg
daa
mov
mov
sbb
aad
xor
add
push
lret
scas
push
inc
mov
lods
aad
or
cltd
out
jecxz
xchg
mov
enter
and
sahf
pop
xchg
in
in
dec
and
xor
jl
jne
scas
sub
add
xchg
push
pusha
sub
int
push
or
push
mov
lea
lock
jno
int3
test
mov
dec
add
lods
sbb
popf
sbb
lret
les
cld
push
add
and
mov
scas
sbb
xor
setae
dec
push
movsl
out
loope
fldt
out
xor
in
add
jbe
sbb
jg
stc
mov
std
in
adc
inc
out
lods
aad
fldenv
ja
push
shlb
fsts
mov
mov
adc
sarl
mov
xor
scas
das
mov
pusha
ja
push
out
mov
or
cmp
mov
dec
dec
sbb
out
sub
pop
gs
and
clc
sbb
jg
xchg
les
ljmp
std
in
rcrl
loop
je
rorb
mov
in
xchg
and
push
adc
outsb
mov
and
adc
adc
les
es
fisubs
xchg
sub
mov
pop
dec
fsubl
ffreep
dec
lods
jmp
addl
shlb
test
lcall
iret
pop
loope
xchg
sub
pop
mov
mov
or
add
xor
aas
sub
mov
mov
adc
sbb
gs
mov
push
push
cmp
push
in
push
fbstp
fsubrs
cwtl
cmpb
xor
mov
ss
mov
or
sarb
dec
int
das
xchg
mov
pop
jecxz
xchg
ja
inc
add
movsl
pop
or
mov
pop
xchg
sahf
cmp
aad
cmp
leave
xor
lret
hlt
shrl
and
xchg
test
mov
mov
jl
cmpsb
std
sbb
xchg
pop
cmp
mov
mov
push
inc
movl
push
and
push
aad
jg
outsl
sbb
xchg
ja
jge
or
cli
ret
test
insb
push
fimull
mov
lea
popf
arpl
mov
sahf
cwtl
mov
jp
xor
jne
pop
adc
loop
or
or
scas
aas
lret
inc
pop
pop
mov
iret
xor
xor
or
ret
sbb
shlb
cmp
or
inc
mov
loop
push
lcall
mov
loopne
push
xchg
out
stos
lods
or
xchg
mov
inc
cmp
scas
push
fldenv
aam
pop
inc
add
xchg
push
mov
xor
lock
add
stc
mov
xor
rcr
push
cltd
sar
push
pop
push
sbb
loop
pop
jecxz
adc
aad
xchg
sbb
icebp
add
pop
nop
sbb
pop
mov
stc
xchg
pop
and
and
mov
into
cmpsl
fcoms
push
cmpsb
push
pop
push
push
gs
push
cmp
in
dec
inc
xor
push
test
dec
mov
xchg
test
xchg
and
ror
cwtl
sub
inc
jmp
lret
test
push
mov
sbb
xchg
inc
mov
cltd
sbb
js
fwait
rcl
fiaddl
mov
xchg
mov
and
lea
daa
movsl
ljmp
in
lock
sahf
xchg
call
and
push
or
dec
jns
adc
gs
cli
enter
xchg
aam
sbb
add
test
fsubr
jb
jecxz
in
push
and
and
test
lock
lock
aaa
fstpl
in
push
nop
ja
push
xchg
aas
movsl
jb
mov
lret
adc
jmp
jno
inc
add
jae
xchg
leave
cmp
add
iret
adc
push
add
jnp
inc
push
int3
push
xchg
lret
pop
add
jne
inc
add
pop
sbb
sarb
scas
and
cltd
dec
in
lea
mov
pop
push
ret
movsb
in
push
pop
into
xchg
mov
push
lods
push
js
cmp
xlat
daa
sub
fcoms
mov
mov
sub
add
lea
jg
xor
add
add
mov
pop
sbb
les
or
scas
mov
sahf
cltd
mov
daa
push
mov
shlb
sub
adc
shrb
xlat
test
pop
movsb
ret
into
pop
jns
dec
inc
ss
int
mov
mov
ja
mov
jle
or
inc
pop
xchg
push
repnz
call
test
jae
insl
xor
cmp
xchg
shl
jge
lahf
mov
xor
daa
mov
pop
push
outsb
sbb
in
lret
push
mov
stos
lods
fdivl
xor
shrl
lcall
pop
or
or
enter
mov
push
and
lcall
fs
push
mov
jmp
dec
fldl
in
andb
enter
adc
fidivl
sub
fstpt
mov
push
and
test
icebp
push
mov
pop
mov
clc
mov
addb
mov
jmp
mov
mov
jmp
mov
xor
cmp
mov
faddl
xor
es
sbb
jne
adc
mov
cmp
jne
and
repz
mov
sub
jbe
pop
or
adc
xor
lahf
mov
and
mov
std
adc
ja
in
daa
int3
loopne
push
rolb
adc
sub
pusha
daa
mov
mov
cmc
pop
shrb
mov
mov
mov
sbb
shrl
push
ret
enter
dec
inc
ljmp
jmp
pop
push
jb
xor
mov
cmp
pop
insl
ja
divl
mov
mov
daa
sub
jle
and
push
mov
shll
out
mov
test
xor
adc
flds
neg
sub
mov
dec
cmpsl
dec
sbb
adc
xchg
push
cmp
mov
mov
out
int
andb
mov
push
mov
push
mov
cmpsb
and
mov
mov
mov
sbb
dec
ror
mov
jecxz
in
mov
sub
ljmp
aam
inc
mov
js
jecxz
jno
mov
stos
sbb
push
sub
arpl
aad
cmp
popf
daa
pushf
and
mov
cmpb
sbb
or
lods
push
jle
test
xchg
add
popa
ljmp
cmpsl
mov
mov
sub
cmp
test
pop
into
xor
dec
jg
dec
hlt
sub
push
outsl
inc
add
aaa
and
into
or
iret
testb
sbb
je
add
aaa
push
xchg
scas
and
in
dec
dec
pusha
adc
xchg
fnsave
outsl
ljmp
pop
add
sbb
dec
jge
stos
roll
sbb
push
xor
mov
call
xchg
rcr
popa
in
mov
inc
push
pop
mov
pop
aaa
or
and
bound
ljmp
outsl
or
push
adc
lcall
aas
pop
push
fsubp
out
imul
cmp
enter
scas
sar
sti
scas
stos
push
stos
loopne
call
jmp
repz
lock
std
test
into
inc
out
mov
test
xlat
adc
pop
roll
mov
cmp
stos
enter
xorb
pop
lods
mov
call
jge
push
bound
fwait
jnp
mov
scas
clc
loopne
and
add
int
jnp
sub
stos
inc
xchg
ret
push
inc
mov
das
sti
cmpsl
test
leave
push
and
inc
xchg
pop
add
adc
push
arpl
mov
int
cmpsb
into
aam
xchg
pop
ret
push
adc
out
int
xlat
pop
pop
pushf
pop
out
cmpsb
lds
mov
rcrb
push
xchg
push
mov
mov
mov
jmp
stos
push
push
xchg
mov
pop
pop
push
xor
insb
xlat
shlb
or
test
daa
or
ret
push
mov
pop
popa
pushf
das
xor
mov
mov
mov
out
xchg
cmc
scas
icebp
sbb
mov
adc
adc
dec
xor
popa
nop
mov
xlat
xchg
sarb
shrb
or
popa
out
adc
inc
popf
test
mov
mov
push
push
adc
inc
dec
xchg
test
sub
nop
fucom
das
jno
or
pop
adc
sub
shlb
mov
dec
aad
push
jecxz
popa
test
ret
fsts
xchg
pop
dec
into
cmp
dec
xchg
insl
aam
popf
sbb
mov
cmp
push
jmp
pushf
jb
push
movsb
jmp
popf
out
hlt
sub
jnp
inc
call
jp
mov
or
xor
adc
xchg
mov
add
sahf
xchg
lock
imul
ss
cmp
std
mov
xchg
ficompl
movsl
imul
pop
iret
push
or
nop
loopne
dec
divl
ljmp
dec
xchg
pop
popa
mov
les
or
gs
dec
dec
xor
sti
pushf
dec
jmp
sbb
add
push
jg
lds
add
fwait
pop
mov
hlt
push
mov
lea
add
scas
rorb
sub
push
lods
dec
hlt
lock
push
je
ja
dec
add
fwait
cwtl
mov
mov
test
fcoml
pop
int3
int3
cmp
negb
pop
imul
cmp
out
mov
adc
push
sbb
loopne
mov
sbb
dec
loop
data16
sbb
pop
filds
clc
outsb
cmpsl
iret
fs
in
in
jbe
subb
mov
cmp
cmp
or
popf
jecxz
or
fildl
inc
jno
lock
pop
out
inc
pop
test
sbb
cmp
fs
mov
jecxz
cmp
repz
mov
cs
fcoml
mov
pusha
fdivrl
xchg
insl
pop
std
daa
jle
push
adc
sti
cli
inc
lds
lock
or
and
loope
testl
fdivrs
dec
leave
mov
mov
cltd
sub
stc
and
mov
setno
mov
mov
dec
pop
ds
or
dec
popa
pop
shll
dec
lcall
jb
mov
mov
arpl
lcall
lea
lcall
aad
bound
jl
fs
pop
sub
mov
andb
push
loope
std
mov
mov
push
je
sub
ds
adcb
sub
adc
push
mov
pop
jns
cltd
pop
scas
das
or
fwait
int3
std
inc
pop
shll
lods
in
inc
ret
pop
sub
and
jno
or
leave
inc
mov
or
jp
jl
add
out
sbb
aaa
rolb
xchg
or
ljmp
jle
inc
rolb
mov
mov
or
repz
icebp
call
das
icebp
mov
fistpl
cwtl
pusha
leave
sub
popa
lahf
cmp
adc
je
mov
arpl
test
enter
sbb
push
inc
cli
pop
stos
aas
adc
outsb
into
push
imul
into
pop
in
adc
adc
dec
popf
dec
xor
sbb
push
jmp
iret
jge
call
xchg
icebp
cli
aas
and
or
aaa
adc
lahf
hlt
enter
and
dec
into
dec
std
inc
lods
insb
ret
dec
cmp
adc
cs
push
adc
imul
push
aaa
data16
and
pop
adc
mov
flds
xor
int
sbb
pop
lods
aad
pop
mov
and
shrl
jno
adc
or
adc
aaa
je
rorl
ljmp
repz
dec
sbb
xchg
dec
inc
add
mov
sbb
lock
jb
push
mov
sbb
in
gs
and
mov
xchg
rol
mov
fnstsw
or
dec
cmpsb
je
mov
jno
adc
addr16
imul
mov
push
and
xchg
popf
lahf
decl
out
enter
or
inc
lods
xchg
xor
push
adc
sub
sub
jg
ret
call
stos
mov
mov
in
mov
push
leave
arpl
jb
lret
fiaddl
shll
add
inc
icebp
dec
add
or
enter
dec
xor
pop
jge
xor
or
rcrl
repnz
pusha
lods
jbe
lock
adc
xchg
lods
incb
inc
lock
ja
xchg
cwtl
adc
and
mov
xor
mov
fidivrs
jae
or
jne
jecxz
fsubr
jnp
stc
pop
add
iret
lods
pushf
in
pop
into
loopne
insl
test
pop
loop
xor
mov
sub
aaa
dec
popf
imulb
inc
out
adc
xchg
sbb
jmp
xorb
loop
mov
inc
outsl
idivb
and
push
adc
lock
sbb
mov
xchg
loop
pop
rclb
ja
lds
loope
mov
popf
adc
enter
mov
lock
fldt
mov
jbe
inc
andl
pushf
inc
xor
lcall
es
xchg
lock
shlb
cmp
sub
in
pop
inc
sbb
cmp
or
xor
xor
mov
jns
orb
cwtl
adc
jno
inc
lea
push
push
pusha
decb
lea
gs
xchg
cmp
loope
mov
dec
add
ja
mov
and
sbb
outsb
in
xchg
mov
lret
xchg
daa
pop
fxch
jo
xchg
push
sbb
loop
or
es
mov
sbb
push
sub
jl
inc
test
sub
xor
add
pushf
andl
xlat
outsb
pop
gs
sbb
xchg
cs
push
hlt
or
cmp
sub
pop
push
mov
shlb
ret
xchg
pop
jge
sub
jle
cmp
fldenv
add
mov
loope,pn
shl
push
or
sub
lods
and
loop
push
dec
subb
adc
loop
or
sub
inc
test
in
outsl
into
das
mov
scas
xorb
fstpl
dec
ret
add
xor
or
mov
mov
mov
outsb
test
shl
cltd
int
and
cmp
ja
mov
push
nop
sub
not
cmp
jo
jp
xor
xchg
lahf
jecxz
fistpl
js
adc
cmpsl
sbb
js
scas
add
pop
je
dec
or
or
push
sub
lods
in
fstl
xchg
cs
mov
sub
mov
cltd
addr16
xor
lds
clc
mov
out
fdivs
xchg
mov
dec
xlat
fs
lcall
in
sbb
pop
cmp
daa
xchg
xor
xor
mov
jae
sarl
xlat
ja
ret
adc
cmp
int3
xchg
gs
stos
sub
mov
dec
mov
mov
xchg
jnp
mov
jbe
fs
int3
xor
pop
test
in
leave
lods
pop
adcl
mov
cli
pop
push
insl
cmp
fwait
shlb
fisttps
subb
inc
fstps
addl
dec
fisubrs
mov
jno
push
push
cmp
jno
inc
repnz
jbe
pop
sti
push
daa
in
and
inc
lods
xchg
test
mov
pushf
pshufw
push
xchg
jl
mov
clc
fidivrl
sub
mov
outsb
mov
sbb
cmp
movsl
mov
cld
out
and
sub
add
sub
ljmp
fs
mov
bnd
cmp
jge
jl
cmp
lret
adc
dec
test
lret
mov
not
inc
ficoms
mov
xchg
in
stos
xor
test
xchg
dec
imul
dec
out
mov
xchg
icebp
cld
xor
push
fdivrs
push
dec
aam
dec
in
mov
cwtl
loop
pop
test
and
sub
loopne
add
mov
negl
xor
les
jae
inc
xor
divb
mov
mov
sbb
aas
jmp
mov
fs
cmp
add
adc
mov
cmpl
push
pop
ss
push
sub
nop
out
test
cmp
jne
xor
outsb
push
fcompl
dec
std
rcll
dec
rcl
out
mov
add
adc
push
ja
dec
fcoml
inc
call
popf
mov
out
and
inc
movsl
mov
negb
push
sbb
add
rorl
push
insb
xor
sbb
pop
mov
jo
add
test
dec
daa
loopne
mov
cmp
xor
in
xor
cmp
popa
imul
roll
pop
jl
loop
and
aam
scas
add
pop
stos
cmc
dec
add
sub
cmc
xor
mov
repz
dec
pop
fwait
mov
push
inc
and
roll
imul
cmp
pop
or
enter
test
bound
xor
ljmp
sub
push
xchg
sbb
dec
fists
jne
lcall
jmp
inc
rolb
sbb
arpl
popa
ds
jb
inc
lret
mov
je
cltd
mov
mov
push
lods
adc
pushf
lahf
out
sbb
mov
push
xchg
dec
mov
pop
lahf
xchg
and
cmp
out
loope
xchg
pop
mov
fnstcw
enterw
lods
add
cmp
push
jp
sbb
pop
ds
mov
cmc
mov
dec
int
push
xor
rolb
mov
sbb
or
push
mov
add
outsl
sbb
jmp
mov
bound
mov
lret
stos
xchg
dec
inc
push
cmp
push
pop
mov
jbe
mov
inc
ss
mov
adc
and
mov
loope
dec
ja
repnz
xchg
je
inc
xor
pop
test
repz
repz
push
lods
inc
in
xchg
fsub
fcmovne
aam
hlt
clc
insl
xor
pop
movsl
sub
inc
sbb
mov
clc
pop
movsl
xchg
xchg
push
push
shll
popf
mov
xchg
mov
in
mov
xchg
shrb
lock
sahf
clc
push
ljmpw
inc
sahf
add
in
stos
aad
pop
mov
jmp
sub
stos
int
mov
dec
lock
push
mov
cwtl
inc
mov
fdivs
fidivrs
xor
jne
mov
movsl
shl
cmp
cmpsl
aam
sbb
or
push
mov
xchg
jle
push
ret
mov
cmpsb
sub
mov
ja
das
xchg
scas
mov
inc
dec
pop
daa
jg
dec
insl
pusha
in
cmp
xor
xchg
dec
mov
ret
mov
aaa
jp
stos
cmp
xchg
mov
pop
add
push
push
fadds
movsb
popa
andl
xchg
addb
hlt
jl
adc
pop
enter
inc
adc
shl
pop
dec
stos
pop
pop
loop
sbb
sahf
dec
mov
push
movsb
adc
add
aas
push
in
sbb
in
mov
xor
xchg
ret
les
ss
shl
sahf
mov
sub
outsb
scas
filds
fdivrs
fdivr
sub
sub
push
mov
test
cmp
fidivrs
pop
and
mov
xor
inc
inc
repnz
outsb
jb
cvtdq2ps
cltd
adc
xchg
or
out
mov
fimuls
push
imul
scas
push
dec
push
cltd
in
sti
outsl
ja
lods
push
and
mov
push
xor
loop
enter
pop
ja
mov
in
jl
out
xchg
jge
mov
test
jmp
je
test
ljmp
dec
add
cmp
jge
aas
call
out
stos
mov
lock
xchg
test
cmp
aad
dec
jecxz
paddq
cmc
ret
shll
testb
int
dec
push
out
jbe
push
dec
neg
out
mov
repnz
nop
push
addl
jge
xchg
lods
add
fs
sbb
rcrl
fptan
sbb
fistpl
xchg
sahf
mov
xor
add
and
gs
push
fnstenv
and
mov
push
rolb
cmc
data16
pshufw
adc
add
ret
pop
outsl
imull
fdivrs
roll
mov
in
mov
mov
ss
call
jno
add
add
adc
leave
insl
sub
cwtl
fstps
cmp
push
xchg
aaa
loope
mov
enter
in
pop
dec
inc
sbb
sub
repz
std
out
insb
clc
lods
gs
dec
cmpsb
test
inc
out
jmp
lods
rcll
fidivl
lahf
cmp
push
xor
xor
mull
movsb
je
lret
mov
xor
lcall
fimuls
jno
in
int3
push
add
inc
sbb
cmpsl
or
pop
xchg
cli
xchg
out
pop
sub
lods
lods
pop
push
popf
movsb
jb
and
mov
mov
lret
pop
mov
mov
pop
std
inc
jmp
cmp
fs
xchg
scas
adc
popl
or
pop
add
divl
aam
sub
jmp
aaa
out
pop
and
jne
adc
jno
jo
cli
lock
test
xor
or
pop
mov
enter
sbb
add
jle
data16
push
test
or
xchg
imul
mov
sub
adc
mov
jns
sub
pop
and
mov
mov
lds
in
sbb
imull
sub
or
xchg
scas
call
dec
jno
aas
push
or
adc
jle
movsb
xlat
out
nop
test
pop
addl
insl
jg
mov
xlat
sbb
loop
sub
adcl
xchg
add
daa
jle
sbb
xchg
iret
mov
shlb
sti
inc
fisttpl
pop
dec
loop
and
addr16
xor
adc
hlt
addr16
jbe
out
mov
push
mov
int3
and
pop
push
pop
inc
loope
or
jle
xchg
ret
cli
push
jb
int
mov
ret
pop
adc
and
xor
sti
push
mov
inc
cwtl
xor
pop
cmpsl
mov
rorb
mov
sbb
dec
loop
cmc
test
xor
push
out
add
xchg
adc
ret
in
test
fisubl
add
pop
pop
sub
push
pop
inc
aaa
out
roll
cltd
notb
mov
pop
dec
mov
xchg
mov
outsb
fsubr
pop
insw
lods
mov
jmp
icebp
ret
cld
mov
cmp
repnz
lock
into
popa
inc
movsl
pop
out
xor
stc
pop
lds
mov
inc
or
lahf
jecxz
and
mov
cmpsl
orb
mov
mov
xchg
or
clc
icebp
std
mov
lret
dec
cwtl
fwait
dec
xchg
lock
or
sbbl
dec
xchg
aas
cmpsl
xor
sbb
test
dec
xor
loop
mov
jo
inc
icebp
adc
jno
mov
jg
daa
mov
xlat
pop
jb
jnp
cmp
sbbl
sbb
add
insb
and
inc
mov
cmp
je
loope
and
xchg
aad
cmp
inc
test
mov
shl
scas
xchg
adc
imul
push
push
aas
ds
mov
or
ret
mov
mov
imul
cld
and
shll
ljmp
into
push
add
data16
fcom
sbb
mov
pop
mov
pop
inc
test
mov
dec
xor
pop
imul
inc
hlt
mov
fmuls
loopne
sub
and
xor
test
cmpsl
xor
fists
cmc
xlat
mov
test
je
mov
fndisi(8087
je
cmp
dec
bound
xchg
sahf
xor
mov
dec
and
jl
mov
leave
add
jecxz
jmp
mov
mov
sahf
ljmp
outsb
imul
xor
mov
enter
pop
dec
cs
jae
shll
mov
sbb
cmp
push
pop
cwtl
sbb
jg
mov
in
pop
arpl
ljmp
subl
cwtl
adc
jnp
add
cli
stos
nop
stc
jl
insb
pop
cli
shlb
push
push
inc
lret
mov
shlb
cmp
cmpsl
push
or
dec
aaa
inc
cld
stos
cmp
inc
das
fsubp
jb
inc
fisubl
mov
pop
or
decl
inc
push
pop
jns
daa
pop
pop
clc
mov
sbb
fstp
pop
sbb
adcl
out
mov
xchg
icebp
xlat
push
push
mov
add
sbb
adc
pop
mov
cmp
inc
test
lret
stos
xor
subl
stc
push
xor
sub
cmpsb
ret
xor
mov
or
fcomip
out
xchg
xlat
mov
or
mov
sbb
in
mov
icebp
insl
jns
sub
jbe
mov
and
mov
mov
add
loope
push
mov
out
dec
inc
push
stos
mov
in
add
mov
xchg
popf
pop
aas
data16
and
mov
into
xor
xor
in
xor
ss
inc
test
xchg
filds
les
cmpsb
and
push
or
mov
shll
shrb
inc
push
popa
call
mov
mov
fsubs
push
mov
mov
es
jecxz
ret
sub
fwait
test
addr16
mov
scas
cmpsl
cmp
leave
in
outsl
sub
adc
lahf
push
imul
pop
mov
cmp
int3
xchg
insb
push
push
sub
lret
addl
stos
or
mov
push
dec
jb
mov
jae
push
xchg
rcll
pop
femms
idiv
std
jbe
shlb
add
push
cmpsl
cmp
popf
mov
out
in
push
pop
mov
lahf
fisubl
jecxz
movsb
mov
pop
cmpsl
dec
mov
packsswb
mov
lods
cmp
add
popa
aas
push
fmull
xor
and
inc
mov
iret
movsl
movsl
and
push
push
sti
xor
ljmp
lret
shr
adc
daa
xlat
inc
push
rcrl
ja
sbb
test
jle
and
dec
push
xchg
lods
jle
mov
ficomps
sbbb
cmp
icebp
mov
pop
or
add
jg
or
lock
faddl
push
inc
dec
jmp
call
sub
cmpsb
xor
and
scas
arpl
jg
fiaddl
fstpt
push
inc
scas
jae
mov
pushf
insl
inc
cltd
adc
dec
movsb
mov
jp
xchg
xchg
jo
pushf
into
mov
add
lock
imul
xchg
fiaddl
push
bound
xor
inc
bound
jns
gs
popa
inc
in
cmp
adcb
pop
bound
andl
inc
pop
out
in
out
scas
cmp
scas
lds
push
out
into
fs
mov
add
jl
aas
popa
or
test
sub
in
mov
xchg
push
iret
mov
pop
dec
lret
faddl
aad
jb
insb
inc
movsb
push
mov
dec
jecxz
es
xor
pop
mov
daa
leave
stc
mov
lods
ss
addr16
fwait
ret
mov
stos
or
jl
sti
jecxz
aaa
test
das
cmp
cli
and
fildll
test
dec
adc
pushl
scas
outsl
xor
xchg
add
popa
pop
imul
fmull
orb
pop
inc
jg
stos
call
daa
pop
rorl
int3
sbb
loope
xchg
cmpl
xor
lods
cmpsl
push
xchg
pop
decl
mov
push
sbb
gs
pop
adc
inc
inc
mov
mov
xlat
jno
rcl
mov
adc
or
or
xor
into
xchg
xchg
test
sub
lret
dec
jmp
adc
pusha
mov
les
pop
mov
popa
ret
pop
insl
and
arpl
js
mov
jnp
daa
stos
pop
rcll
mov
mov
ds
push
pop
pop
sub
in
xor
insb
flds
pop
push
enter
or
fs
dec
jno
cmpsb
ja
loope
cmpsb
jbe
mov
or
lds
xlat
into
pop
je
shrb
sub
popf
lock
push
sbb
stos
lods
addr16
lods
cmp
mov
or
sbb
loop
sub
rolb
arpl
inc
shld
jo
stos
sub
and
filds
mov
movsl
movsl
or
stos
andl
aaa
cltd
pop
into
mov
cli
sub
xchg
stc
mov
cld
and
sti
pop
adc
fwait
or
sahf
mov
mov
mov
test
push
jo
mov
and
mov
dec
mov
in
push
xchg
loopne
xchg
loope
xorb
inc
pushf
or
xchg
jae
cmp
lds
xor
leave
out
and
lret
dec
arpl
lahf
rcrl
imul
fdivrs
popf
sub
insl
push
int
nop/reserved
mov
ljmp
mov
lret
adc
xlat
test
mov
ljmp
inc
je
xchg
in
sarl
in
cmp
insl
insb
notl
test
cwtl
mov
add
iret
in
movsb
push
fs
fucomip
test
sbbl
push
jle
sub
xchg
cmpsl
outsb
adc
cwtl
arpl
and
sbb
aad
iret
push
adc
add
inc
cli
inc
lcall
jge
sub
and
pop
pop
adcb
mov
fdivs
push
ljmp
fmul
scas
daa
lods
and
jl
mov
xor
push
fstp
stc
fdivs
mov
int3
cmp
lret
sub
push
jne
sub
cmpsl
fldt
shrb
enter
and
inc
mov
std
lock
pop
sti
int3
cmc
cmp
bound
mov
pop
dec
inc
insl
ror
dec
stos
jmp
sahf
mov
xchg
or
rcll
aad
aad
dec
lods
or
pop
loopne
icebp
fs
out
dec
cltd
imul
arpl
and
mov
pop
scas
push
imulb
mov
decb
ret
or
jmp
mov
cwtl
mov
cmpsl
iret
add
stos
mov
in
roll
sahf
scas
loope
push
mov
fistpll
dec
addr16
sbb
enter
mov
loopne
push
mov
and
mov
loopne
mov
dec
mov
lods
lock
mov
lock
in
pushf
jge
das
pop
mov
lcall
cmp
and
mov
sub
int3
cmp
pop
xlat
imul
fcoms
out
push
add
xorl
daa
in
jnp
pop
dec
lds
push
dec
pop
add
push
xlat
and
ds
cwtl
adc
or
jp
sbb
mov
gs
mov
or
fwait
sahf
test
adc
xor
das
xor
notl
mov
or
std
aam
pop
mov
lock
ret
lods
stc
outsl
add
inc
orl
ss
mov
mov
mov
add
popa
inc
shrl
mov
add
pop
mov
fsubrs
xor
and
lcall
fsubrs
pop
mov
popf
imul
jge
pop
enter
leave
out
push
sbb
push
or
inc
not
sub
and
xlat
bound
add
je
sbb
rorb
int
cmp
lds
jns
rcll
mov
adc
mov
xor
mov
dec
cmp
lds
shlb
inc
popa
in
mov
cmp
cmp
cmp
xchg
dec
sbb
jns
inc
fwait
out
pop
fwait
cmp
add
iret
sbb
sbb
pop
shl
or
push
pop
out
pop
mov
dec
mov
and
push
mov
pop
fistpll
inc
addr16
mov
fwait
xor
repz
daa
inc
subb
push
js
jle
jae
cmp
dec
mov
mov
xor
imul
push
and
cli
xchg
js
lret
xor
inc
hlt
sbb
xchg
mov
xchg
sahf
and
fwait
repnz
mov
pop
mov
cmp
or
leave
cmp
sub
fwait
and
cmpsb
bound
loop
sbb
dec
int
lods
inc
inc
cmp
mov
xchg
xor
mov
pusha
jnp
daa
vmread
sub
loope
jnp
icebp
add
sarl
dec
int3
sbb
cltd
mov
jle
lock
jge
or
inc
inc
pop
mov
repnz
fcomi
mov
testb
out
mov
dec
adc
in
mov
or
out
inc
adcl
cmp
popf
adc
mul
fucomp
int
jl
inc
xchg
fists
in
aas
bound
pop
mov
jmp
stos
rclb
insb
faddp
jb
and
sub
imul
pop
jne
pop
lea
lea
gs
test
pop
cltd
jns
ljmp
jg
pop
or
and
add
cmpl
stc
pushf
sbb
dec
push
mov
xor
es
cmp
pop
out
rcl
test
dec
icebp
dec
xchg
and
push
push
aas
pop
in
lods
jo
ljmp
call
lcall
mov
sahf
cmp
xchg
aas
jg
mov
cmp
pop
lcall
cmp
int3
addb
pop
sbb
cli
pop
mov
push
dec
mov
xchg
push
arpl
in
testl
xor
pop
jne
scas
mov
test
imul
popf
lret
inc
lock
mov
lea
jl
xchg
add
inc
xchg
lock
cld
or
or
js
mov
ficoms
popa
mov
fwait
inc
xor
mov
mov
fsubp
dec
push
aas
lcall
sub
loope
add
das
mov
and
lret
sub
mov
orb
jo
add
jae
and
and
or
not
aad
jns
pop
lea
xchg
pop
jmp
mov
jge
add
pushf
cwtl
dec
mov
test
mov
xchg
scas
jmp
cmc
mov
jne,pt
adc
cmp
mov
inc
movsl
add
in
mov
pop
notl
and
in
shl
aad
push
mov
ret
dec
mov
imulb
sub
push
pop
shr
lds
lcall
inc
push
mov
add
les
xor
loope
in
pop
out
daa
ds
and
xchg
aad
dec
inc
ds
gs
clc
push
cmpsb
add
and
nop
pop
push
popa
xor
adc
jne
xchg
out
jae
ja
push
loopne
mov
push
add
ds
cmp
hlt
cmpsl
jne
sti
dec
mov
jmp
mov
mov
mov
je
in
ret
loop
or
and
cmp
lret
push
nop
arpl
cmp
xor
in
enter
rcrb
push
or
pop
inc
mov
ret
adc
outsl
add
dec
sahf
jle
roll
into
push
jne
pop
mov
jno
inc
adc
mov
sbb
stc
add
js
cld
sahf
mov
inc
xchg
sahf
push
in
mov
mov
and
insb
xlat
add
cs
xchg
push
ss
lods
xchg
xor
daa
adc
mov
repnz
adc
inc
adc
mov
jbe
js
cmpsl
pop
push
jae
movsb
xchg
cmp
and
icebp
insl
pop
mov
pusha
fldl
insl
mov
sbb
add
stos
addb
xchg
add
stos
insb
fsts
test
imul
inc
out
daa
fcoml
xlat
add
aam
cmp
ret
and
adc
inc
shrb
push
add
mov
mov
xchg
mov
loopne
js
cmpsb
movsb
xor
mov
je
or
mov
hlt
sahf
fisubs
push
imul
pusha
mov
add
and
mov
mov
outsl
dec
dec
decl
xchg
in
jns
mov
call
mov
xor
and
pop
adc
sti
cmp
jae
js
fldt
pop
add
icebp
mov
shrl
imulb
into
scas
jmp
sbbl
jg
into
dec
or
pop
xor
cli
lock
and
cli
mov
rcl
push
popf
mov
scas
das
xor
in
bound
inc
sbb
mov
popa
cwtd
aaa
inc
cli
xor
push
lds
add
fistpll
inc
xchg
push
stc
popa
pop
push
mulb
outsb
sub
xor
cmp
pop
sub
dec
mov
fisubs
lcall
int
loope
and
ss
push
mov
jne
filds
mov
mov
xor
ljmp
mov
ficoml
xor
push
mov
inc
popf
xorb
add
mov
jnp
lret
shrl
dec
ss
scas
stos
xchg
sub
sbb
cmp
mov
jo
or
jle
testl
push
cld
pop
push
int
jo
jg
into
mov
hlt
add
dec
in
xchg
daa
sub
call
and
mov
out
data16
lcall
mov
pop
mov
push
mov
dec
jo
imul
inc
cmp
mov
into
pop
xchg
cmp
xchg
shrb
adcb
sar
ss
push
das
enter
jns
loope
arpl
inc
orl
mov
sub
mov
inc
das
mov
test
add
aaa
arpl
xchg
or
in
insb
pusha
mov
test
movsb
dec
outsb
pop
aaa
aas
dec
iret
hlt
mov
mov
dec
mov
lret
xchg
enter
jb
test
dec
lds
jp
mov
adc
add
popf
and
adc
inc
inc
add
mov
popa
movsb
dec
clc
push
jl
leave
adc
lea
into
push
cmp
out
mov
mov
shlb
scas
mov
shl
aas
mov
cmp
adc
ret
add
ljmp
clc
mov
cmp
sbb
jge
leave
pushf
sbb
movsl
nop
imul
les
stos
xchg
nop
loope
sub
mov
add
sub
repnz
movntq
pop
dec
mov
addl
jnp
pop
mov
xchg
mov
jne
mov
sub
inc
adc
inc
cmp
mov
clc
and
hlt
inc
cmp
mov
aaa
les
aas
jp
or
xlat
mov
mov
fs
call
call
xchg
fwait
cmpsb
mov
ljmp
push
xor
mov
lcall
or
aaa
mov
gs
jbe
imul
cmp
jo
sub
leave
push
rcll
mov
addb
fstpl
scas
jmp
movsb
in
add
add
xor
add
cmp
xchg
imul
dec
mov
iret
shrl
popf
mov
scas
push
push
and
inc
cmp
fwait
push
mov
repnz
or
ja
push
jne
mov
repnz
and
adc
cmp
push
xchg
jb
movq
movsl
pop
stc
jl
in
jp
aaa
mov
xchg
and
lds
mov
imul
test
push
pop
mov
sti
sti
std
aaa
inc
and
es
jno
ret
or
mov
add
ret
and
cwtl
push
data16
cmp
je
add
shll
mov
lea
cs
dec
pop
push
lea
sar
xor
iret
rclb
in
mov
mov
outsl
mov
in
xchg
scas
dec
xlat
cld
lock
shlb
lahf
iret
xor
sub
add
movsb
sub
xor
js
add
adc
cmp
insb
aam
imul
ret
movsl
dec
mov
cmp
lock
xor
dec
test
mov
xchg
nop
movsb
aad
sub
adc
pusha
ja
xchg
inc
jle
mov
stc
mov
xchg
cmp
ja
adc
xchg
ret
test
loopne
cmp
mov
loop
out
test
ja
test
std
iret
sbb
mov
pop
int3
jne
inc
xchg
inc
xchg
inc
pusha
and
sti
divb
cmpsl
push
pop
mov
and
out
adc
iret
add
push
and
add
push
es
mov
jo
enter
inc
add
adc
cmc
clc
and
movsl
mov
addr16
mov
ret
clc
jb
aaa
mov
cmpsb
cs
fs
pop
xchg
sar
sbb
add
dec
imull
clc
mov
xchg
pop
filds
pop
addb
xor
test
aam
das
push
mov
push
dec
adc
lret
aam
out
fiaddl
scas
rolb
rclb
out
hlt
cmp
shrb
fsubr
xor
fidivl
pop
psubq
and
cmp
xchg
fwait
mov
inc
imull
sahf
xor
inc
lret
pop
ret
lcall
cs
lret
inc
int
fcmovb
xlat
out
xchg
or
and
sbb
cmpsl
pop
xor
lea
xchg
mov
pop
jns
out
stc
sti
adcl
dec
push
or
imul
xlat
push
repz
cld
jge
mov
mov
and
xchg
mov
dec
adc
and
iret
outsl
jmp
leave
loopne
lea
pop
das
xchg
pusha
sbb
es
jb
cli
sub
mov
push
faddp
addr16
ret
pusha
mov
mov
pop
int3
dec
icebp
xorl
add
push
pop
xchg
cmpsl
push
dec
loope
jb
mov
inc
test
imul
daa
pop
xchg
pop
ret
mov
test
xlat
aam
xor
sbbb
loope
push
mov
insl
and
push
stos
mov
mov
orl
loope
aam
iret
dec
mov
push
js
pusha
sbb
sti
mov
mov
jp
sti
leave
adc
in
sub
pop
rol
ja
es
cmp
mov
cld
fcmovne
sub
stos
cmc
cmp
push
jl
int
mov
lret
add
sub
neg
mov
mov
popf
ret
cmp
mov
test
push
mov
pop
dec
or
inc
loop
data16
in
pop
aas
scas
rorl
jbe
imul
sub
cld
out
sbb
fidivrs
adc
mov
jnp
xchg
movsb
cmp
sub
dec
sbb
mov
das
mov
adc
mov
cmp
or
out
pop
aaa
add
or
lock
add
loope
aas
insb
idivl
in
loope
push
imul
cltd
add
xor
mov
fsts
int
mov
fldenv
nop
sarl
repz
sbb
rorb
mov
lea
fimull
mov
mov
iret
push
and
add
xchg
mov
cmc
cmp
out
jle
sub
mov
or
sbbb
cmp
lret
cs
inc
pop
jns
cmpsl
add
sub
pop
test
push
shll
mov
arpl
js
mov
out
adc
lret
push
rorb
sbb
outsb
test
fwait
loop
mov
jns
mov
mov
jnp
push
sbb
roll
decl
pop
data16
push
xchg
cwtl
jmp
pop
xor
xchg
jb
cmpsb
divl
or
incb
xchg
push
out
popa
mov
into
inc
adc
xlat
outsb
adc
xchg
popl
add
dec
rorl
jne
and
mov
pop
jbe
jns
int3
pop
test
lret
arpl
adc
add
adc
or
jno
mov
js
hlt
jg
fadds
jl
shll
and
repnz
mov
sbb
jl
sbbb
add
lods
loopne
cmpsb
push
call
sub
addr16
adc
mov
in
cmp
push
frstor
cltd
xor
mov
fistpll
adc
adc
fistl
imul
push
sbb
cmp
mov
pop
ret
jae
push
out
xor
mov
lods
enter
adc
idivl
js
xchg
xorb
sub
std
lods
in
dec
jle
call
xchg
push
mov
fsubrl
ja
mov
and
dec
out
enter
fsub
dec
insl
mov
add
and
mov
push
jmp
push
arpl
test
inc
inc
mov
mov
imul
frstor
je
push
jno
sub
shl
and
pop
iret
sub
out
or
dec
adc
and
out
iret
insl
push
push
pop
add
adc
cs
leave
cs
test
dec
add
leave
or
gs
xchg
test
xor
ss
mov
cmp
dec
sti
js
xchg
addb
inc
dec
inc
or
ljmp
pop
push
jno
mov
jae
xor
pop
and
dec
outsl
lret
ret
das
les
sub
adc
sub
dec
mov
into
repnz
xchg
push
dec
pop
mov
popf
inc
jmp
mov
std
xor
jl
adcb
add
mov
incb
sub
ss
sbb
lret
dec
lcall
mov
sbb
js
lcall
xchg
sbb
pop
lock
jne
fidivs
scas
mov
outsb
pop
fdivs
insl
test
xlat
pop
dec
and
mov
or
in
jecxz
xchg
and
out
and
xor
outsb
sub
sbb
mov
mov
imul
push
shlb
add
mov
push
lcall
inc
push
stos
jne
popa
mov
dec
pop
nop
sbb
add
cmp
adc
pop
stc
jo
xor
in
inc
inc
pop
cmp
js
fnstcw
out
mov
outsb
movsb
mov
cmc
bound
std
nop
stc
iret
es
out
mov
sbb
dec
xor
movsl
mov
jns
arpl
hlt
push
push
or
in
in
mov
dec
pop
mov
mov
clc
mov
movsl
push
lods
les
into
and
sub
inc
mov
out
mov
push
movsb
stos
adc
movsb
mov
jmp
inc
jecxz
cs
cmp
jmp
stc
add
lret
jae
inc
pop
push
mov
ja
insb
sbb
mov
mov
push
pusha
js
push
push
fistps
ret
loopne
dec
sbb
icebp
mov
add
fnsave
testl
movsl
les
mov
adc
jmp
or
push
sub
cmpsb
es
xor
cmp
cmpsl
insl
add
xchg
mov
sbb
cltd
in
xor
out
mov
out
cli
xchg
cmc
inc
xchg
jbe
cmp
nop
cmp
cmp
cld
fldcw
xchg
sbbb
fbstp
les
xor
test
int
cmpsl
lods
sub
xchg
fisubrs
pusha
push
repz
inc
add
mov
and
ljmp
es
push
iret
pop
pop
push
rcrl
std
jmp
inc
shrb
mov
pop
lret
fdivrl
and
das
fistpl
jecxz
adc
fbld
insb
negb
cmpsl
test
xchg
fs
sbb
arpl
push
imul
mov
xchg
pushf
lock
int3
popf
dec
add
lea
xor
inc
sbb
fsubs
and
sbb
push
fidivrs
rorl
stc
nop
cli
popf
mov
jb
pop
jnp
sbb
pop
inc
lahf
push
push
jg
or
in
dec
out
add
imul
cmp
fwait
imul
pop
icebp
mov
mov
pusha
and
push
sbb
mov
mov
sti
mov
mov
fwait
pop
les
push
or
mov
int3
jae
xchg
mov
inc
test
xor
sub
jmp
inc
cltd
dec
inc
add
stos
fldt
shll
and
cmp
addr16
and
mov
or
in
repz
data16
repz
sbb
pop
aad
out
call
or
shll
pop
mov
inc
inc
xor
inc
and
xchg
xor
cli
popa
jbe
jmp
sti
mov
addr16
ss
ja
loope
imul
xchg
dec
popf
int
inc
sub
add
sbb
cmp
sub
push
std
mov
mov
shll
push
outsl
mov
cmp
jg
repnz
jmp
cltd
ficoms
fnstcw
lret
xchg
lea
cmc
mov
aam
and
jns
xchg
mov
fnstsw
ret
fldenv
sti
mov
jo
pop
shrl
inc
mov
in
call
rcl
mov
inc
adc
daa
stc
fiaddl
dec
jb
movsl
xor
adc
ret
or
fistl
sbb
mov
mov
mov
pop
xor
inc
ror
mov
pop
sbb
popf
fldl
leave
mov
add
inc
mov
int
mov
pop
mov
shlb
xlat
test
lret
loopne
cmp
shlb
call
fmull
dec
and
cmpsb
sbbb
jmp
pop
push
loop
mov
cli
or
cltd
xor
cmp
jp
scas
lret
push
dec
aaa
jge
loopne
jp
and
test
mov
adc
jae
fdivrs
sbb
push
add
rorb
je
lcall
out
mov
or
sub
pushl
cmp
and
jp
add
dec
jg
rcrl
jo
sbb
xchg
lret
test
inc
xchg
sbb
aam
jno
rcrb
sub
add
icebp
mov
jecxz
cmp
lret
jo
or
scas
xchg
lock
jle
aaa
call
pop
push
xor
xlat
xchg
dec
add
andl
fidivrs
mov
int
mov
mov
mov
or
test
push
xchg
arpl
sbb
xor
dec
mov
mov
aaa
mov
repz
jg
mov
inc
stos
addr16
or
bound
stos
cmpsb
inc
push
jb
lock
jmp
lret
ret
adc
mov
adc
sbb
pop
jnp
xchg
and
nop
popa
or
or
int3
adc
cmp
jno
mov
lods
and
in
mov
mov
push
ljmp
das
sub
fists
hlt
mov
popf
fs
add
push
jb
shlb
inc
xlat
inc
mov
insl
lret
cmp
add
out
in
xchg
push
push
xchg
loopne
mov
mov
test
push
push
xchg
mov
add
mov
fisttpl
sahf
xchg
push
addr16
aad
pop
xchg
dec
adcl
xor
imul
adc
or
mov
pop
ret
lret
lods
push
mov
loope
jns
aam
sub
or
push
test
sub
mov
loop
in
aaa
xor
pushf
and
or
mov
mov
lahf
cmp
cmp
jbe
add
jl
aad
push
jno
fbld
push
or
arpl
pop
pop
jno
lods
mov
loope
iret
inc
jae
inc
mov
stos
int3
cli
xchg
push
inc
sbb
aad
pop
aas
imul
out
test
fs
cmp
rcrl
xor
sub
std
push
mov
loop
lahf
lea
pop
incl
stos
push
inc
mov
movb
jae
scas
sbb
add
cwtl
out
lahf
xor
or
xchg
push
or
dec
add
sti
cmc
sub
adc
test
xor
lret
lcall
aad
lea
lock
dec
xchg
inc
fs
test
dec
mov
out
jle
repz
fistpl
ljmp
daa
subb
xchg
dec
cmp
mov
mov
aam
inc
leave
pop
jns
and
or
xor
test
popf
or
out
mov
mov
xchg
repnz
pushf
adc
dec
adc
imul
jle
push
inc
popf
push
inc
aas
repnz
add
out
aad
push
int3
push
rcl
inc
into
sub
mov
ret
cs
lret
inc
mov
sub
repnz
dec
out
fs
mov
ljmp
push
sbb
int
adc
sub
push
mov
repz
stos
inc
daa
stos
addb
jge
ret
mov
sbb
inc
ds
repnz
lds
sbb
int
mov
addr16
mov
xchg
pop
pop
pop
jbe
ds
insl
and
or
pushf
and
cs
fisttpll
loop
leave
mov
pop
outsb
in
and
in
mov
jg
and
out
sbb
loopne
xchg
outsl
push
pop
rcr
sub
cmc
mov
adc
dec
rcrb
dec
test
sbbb
test
imul
mov
fs
cmp
mov
lods
out
xor
lret
jbe
inc
pop
jle
dec
jge
idiv
mov
sbb
imul
scas
clc
mov
ret
inc
repnz
xchg
inc
and
xchg
imul
push
mov
push
nop
mov
mov
cld
sub
scas
push
mov
mov
jle
das
rol
sub
inc
jb
lods
cmp
mov
xorl
jnp
xchg
ljmp
cmc
mov
mov
or
hlt
or
xor
ret
in
sub
pop
dec
shll
bnd
jo
out
call
bound
dec
pop
jge
pop
in
cld
jne
dec
mov
loop
jb
int3
mov
mov
outsb
add
test
lret
inc
movsb
inc
push
jae
bound
push
mov
ljmp
jbe
jle
or
js
popa
or
cli
out
cmp
iret
jmp
pop
decb
inc
pusha
and
jp
sub
scas
popf
jl
pop
pop
push
push
repz
subb
and
sub
jle
jbe
cmpb
xlat
xor
cmp
scas
aas
dec
cmp
scas
sahf
aad
pop
mov
push
mov
mov
lea
pop
mov
negl
test
mov
fwait
jbe
fidivrl
sbb
inc
xor
pop
xor
xor
inc
jo
push
inc
or
loopne
les
adc
mov
dec
out
mov
gs
hlt
pop
push
repnz
adc
cmp
add
ror
jb
leave
jo
lock
rclb
out
adc
pop
mov
fdivrl
or
sub
lods
cmpsb
je
jnp
test
movsl
and
test
scas
or
loopne
test
nop
pop
cmp
aam
jle
xchg
addb
aad
pop
mov
repz
adc
jae
cltd
jecxz
add
dec
push
adc
adc
mov
ja
rorb
cmp
aas
aas
dec
das
dec
daa
arpl
mov
fwait
and
and
push
into
mov
cli
clts
add
or
loop
lea
dec
inc
scas
enter
in
outsl
jle
fcmove
push
ja
ffreep
mov
inc
mov
jmp
sub
sub
sarl
or
add
mov
sub
and
mov
adc
fdivr
mov
leave
fcompl
cli
push
insb
mov
pop
scas
inc
jne
mov
testl
inc
sbb
pop
mov
stc
dec
push
mov
sub
shr
push
into
fistpl
loopne
push
or
mov
into
fbstp
sbb
inc
and
xchg
test
dec
imul
xor
jle
and
dec
pop
mov
pop
and
or
mov
xchg
movsb
fbstp
cmp
outsl
out
push
dec
or
inc
adc
sub
loop
push
add
xchg
icebp
mov
or
lock
add
pop
sahf
add
aam
push
aam
mov
addb
sahf
cli
sbb
adc
jg
push
or
inc
mov
rcr
sub
shrb
or
adc
aaa
aaa
xor
das
incb
cmp
jle
stos
sbb
sti
rorb
or
dec
clc
add
sar
test
lcall
pop
mov
xor
xor
mov
jl
and
pop
xchg
lahf
sbb
pop
sbb
sub
movsl
fcoml
rclb
lods
ja
stos
shlb
subb
cmpl
dec
push
adc
je
std
mov
cli
xor
mov
cld
aaa
mov
and
adc
or
push
movsl
jp
mov
mov
cmc
push
inc
xchg
cld
testl
sub
out
test
pusha
rcrl
mov
sub
xchg
xor
push
inc
mov
lods
mov
repz
std
cmp
sub
orb
add
cmp
cmpsb
and
pop
xor
sahf
lret
movsl
and
mov
dec
pop
or
lret
mov
push
push
insb
shlb
lods
adc
sub
fsts
adc
lahf
stos
cmp
dec
xchg
mov
sti
jmp
ss
loop
scas
popl
test
rcll
mov
push
mov
fsubrl
jne
lods
stc
xbegin
cli
dec
in
sbb
sub
pop
inc
inc
cmp
push
or
sub
and
inc
mov
jnp
stos
imul
je
testb
andl
push
mov
inc
iret
adc
dec
inc
dec
mov
movsb
mov
imul
bound
xor
lods
push
sti
jg
or
sbb
sbb
pop
test
dec
arpl
subl
in
cmp
push
notl
sti
shll
adc
cmp
cld
adc
movsb
and
jecxz
lea
xchg
mov
or
mov
stos
stos
mov
lret
inc
xor
jecxz
cld
or
push
sahf
and
scas
repz
out
rol
cmp
shll
in
or
fistpl
pusha
aam
pop
dec
adc
add
cli
popf
in
enter
lret
ljmp
xchg
xor
out
mul
jo,pt
mov
mov
lahf
bound
fsubl
jo
in
sub
mov
xchg
mov
add
out
mov
mov
aad
jecxz
hlt
push
push
xchg
xchg
cmp
mov
mov
cs
pushf
sbb
test
pusha
repz
xor
jle
movsl
rorl
cltd
ret
or
in
adc
mov
inc
xchg
push
cmp
aas
or
fucom
ret
leave
mov
or
js
cmp
xor
scas
inc
fisubs
dec
mov
popa
insl
clc
shl
sbb
subl
andl
lds
mov
pop
imul
rorb
daa
jmp
xchg
mov
popf
xor
or
pop
mov
mov
mov
and
push
dec
insl
fistl
mov
jp
push
test
cmc
cmp
sbb
aaa
jmp
int3
and
cmp
pop
adcl
shrl
jae
pop
ret
clc
aam
das
xchg
inc
lds
jmp
ja
xor
aad
sbb
xchg
and
inc
mov
into
pop
mov
mov
out
into
aad
cmp
jge
imulb
mov
jno
ss
pop
xchg
sbb
inc
ss
and
mov
addr16
inc
adc
in
cld
inc
push
jb
js
or
xlat
mov
or
dec
inc
inc
insl
ds
int
les
loope
ljmp
je
inc
addl
or
sarl
and
or
cs
jb
ss
inc
stc
sbb
mov
nop
je
push
loop
js
push
jns
mov
out
mov
icebp
mov
adc
xor
rcrl
ret
dec
fsubs
sub
push
jmp
xchg
jmp
jae
out
gs
or
repz
pop
cmp
sti
mov
pop
arpl
push
insl
jge
out
cmp
inc
adc
loop
sub
or
sarb
jne
loope
insl
cmp
xor
cmp
lret
out
aas
dec
mov
mov
mov
mov
mov
movsb
jne
jg
jnp
scas
mov
push
jg
clc
je
push
rorl
push
xor
mov
dec
add
mov
in
cmp
shrl
jne
adc
push
test
fstpt
push
lds
push
jg
xor
fs
jle
dec
scas
push
xchg
pop
jp
xchg
stc
mov
pop
pop
outsb
jo
popa
sub
jmp
push
push
mov
fstpt
and
ret
pop
mov
sahf
rorl
add
leave
lcall
lea
mov
sbb
push
test
int
mov
mov
jle
adc
or
neg
push
data16
roll
sub
icebp
mov
arpl
out
mov
sbb
out
pusha
ljmp
out
adc
add
mov
fisubrl
push
stos
push
popa
sbb
jbe
push
cmp
and
dec
pop
das
jo
mov
fimuls
fcomip
sub
xor
imul
vandpd
outsl
test
sahf
fnstcw
mov
stos
inc
int3
xlat
lcall
shlb
pop
xor
sahf
push
dec
add
push
and
cmp
push
or
adc
in
arpl
mov
inc
in
dec
adc
out
cmc
adc
aam
lret
xor
pusha
rcrl
add
fdivrl
ficomps
mov
lcall
xchg
sub
insb
pop
mov
pop
xor
movsb
sbbl
fcomip
or
sub
inc
cli
lcall
sbb
inc
and
lods
aad
or
push
xor
out
into
lcall
pushf
pop
jbe
mov
stos
lds
sub
leave
pop
lods
pop
sbb
xor
sti
loope
dec
ret
inc
ficompl
add
addr16
rcll
push
sbb
inc
shrl
sub
mov
jp
repnz
sbb
iret
xor
lock
add
or
fdivrl
push
lcall
enter
sbb
out
sub
or
stos
int3
add
pop
mov
mov
jbe
fnsave
loop
or
sti
mov
loope
push
scas
test
xchg
dec
xchg
lcall
mov
add
popa
mov
mov
pop
pushf
sub
lret
inc
mov
push
jo
cmc
pop
sub
out
or
mov
sbb
leavew
clc
hlt
xchg
rclb
and
and
sub
mov
jg
js
xlat
adcb
fsubrl
jo
pop
and
pushf
pop
lods
lret
push
inc
shrb
in
push
popa
push
mov
xchg
fs
push
push
aas
add
inc
sbb
aad
mov
sbb
cmp
dec
xchg
inc
inc
daa
lea
js
xchg
in
mov
test
xor
push
cmpsl
or
mov
xor
mov
out
shl
pop
pop
mov
or
aad
xor
insl
ja
leave
repnz
mov
adc
lea
dec
inc
sbb
jmp
enter
adc
xor
cmp
scas
adc
sub
stos
lock
sbb
insb
sbb
jmp
out
lock
enter
mov
inc
cmp
jno
decb
push
mov
fwait
lret
lcall
mov
cwtl
mov
fstp
je
int3
inc
enter
pop
loope
movsb
leave
in
cmpsb
es
orb
inc
ljmp
sub
sarl
mov
int3
test
and
mov
mov
sub
mov
cmp
into
cmpl
out
jbe
adc
or
cwtl
mov
pop
mov
test
inc
push
pop
mov
ret
cmc
test
out
cmp
movsl
imul
mov
mov
int3
jno
lock
mov
jns
scas
add
cli
mov
mov
sub
lret
cli
outsl
pfrsqrt
sahf
insl
scas
test
jmp
imul
or
movsl
pop
popf
xor
xlat
push
lds
and
data16
arpl
push
cltd
subl
xlat
sbbb
popa
xchg
rcr
pop
jmp
jl
inc
or
mov
lock
cmp
hlt
mov
mov
hlt
and
mov
add
adc
pop
sbb
pop
popf
cmp
rep
pushf
movsl
lret
fdivrl
and
pop
push
dec
add
mov
mov
jmp
outsl
repz
push
xchg
xchg
jnp
jecxz
adcb
or
cmpsl
cltd
lods
mov
cmp
and
into
aaa
cmpb
int3
xor
dec
out
cltd
jo
lods
add
fcomps
dec
mov
pop
cmp
inc
inc
pop
ret
add
or
scas
mov
inc
mov
adc
inc
dec
inc
int3
mov
ret
cmp
push
xchg
ds
sub
std
sbb
mov
cmovg
xor
sub
mov
pop
insl
cmp
add
xor
ficompl
pop
imul
lcall
cli
jmp
or
pop
sti
push
pop
sub
sti
mov
cmp
add
add
xchg
out
nop
xchg
bound
and
mov
adc
aas
movb
mov
inc
mov
out
pop
xchg
out
sub
nop
adc
jns
or
inc
xchg
inc
lcall
mov
jns
lods
xor
push
fdivrl
push
sub
into
push
xor
jno
cmp
sbb
sub
mov
push
cltd
ret
iret
ret
xor
movsb
seto
mov
push
es
inc
pop
jge
mov
fldcw
aas
jg
xchg
popl
movsl
neg
icebp
push
and
stc
imulb
jle
mov
incl
in
xchg
in
add
sbb
aaa
cli
dec
popf
pop
cmp
in
push
sti
xlat
cmpsb
divl
push
cli
fcomi
xor
ja
outsl
nop
loopne
push
cmp
inc
movsb
cli
sbb
or
mov
fcmovnb
stc
iret
mov
cmpsl
add
fbstp
xor
jp
pop
fstpt
test
pop
ljmp
jmp
cmpl
je
sti
into
cmp
inc
insl
loope
mov
test
inc
push
enter
jge
xchg
push
js
call
and
and
and
sub
mov
mov
add
pop
sbb
aad
stos
mov
mov
sub
jb
or
out
inc
lcall
stc
mov
dec
outsl
iret
cmp
scas
mov
cmc
xchg
fs
ja
aad
xor
jae
dec
xchg
xor
xchg
stos
inc
daa
std
push
test
and
mov
pop
mov
pop
mov
jg
lret
pop
dec
sbb
dec
jp
push
outsl
and
mov
lea
sub
iret
push
and
fdivrl
out
cmp
push
add
inc
pop
stos
adc
pop
mov
mov
and
sub
pop
les
push
inc
adc
imul
fcompl
and
jmp
cwtl
xchg
loope
xchg
lret
dec
inc
jmp
jg
test
loop
fidivrs
bound
push
adc
loop
fs
sbb
addr16
cli
mov
rcll
scas
sti
leave
aad
pop
imul
rcrb
sub
stos
in
pop
outsl
pop
out
clc
jbe
imul
loopne
cmpsl
outsb
cmp
outsl
subb
or
cmp
clc
dec
ficoms
push
jp
jl
mov
aam
cmp
mov
push
dec
in
mov
in
mov
pop
repz
shr
popa
sbb
mov
lret
or
jmp
test
inc
mov
rol
insl
mov
ret
xchg
jmp
out
adcl
mov
nopl
sbb
stos
stos
dec
out
jg
push
adc
and
mov
in
adc
pop
mov
dec
jbe,pt
bound
mov
cmp
out
out
ret
mov
pushf
andb
or
mov
and
data16
adc
mov
adc
inc
pop
mov
add
mov
shll
repz
push
xor
imull
outsb
insl
or
lret
outsb
loop
adc
add
mov
pop
in
push
push
fmull
sbb
and
fmuls
adc
ficomps
adc
adc
lret
mov
lret
data16
mov
jmp
sbbb
aam
daa
lret
es
push
mov
or
cwtl
enter
loope
out
mov
jnp
mov
nop
movsl
stos
cli
test
out
dec
xchg
hlt
mov
out
sbbl
lods
cmp
and
pop
loop
loopne
sub
daa
pop
pop
mov
lret
sahf
mov
jmp
out
push
jo
pop
or
lea
adc
mov
mov
aad
inc
jl
mov
mov
aaa
adc
mov
jmp
fsubl
ljmp
mov
adc
into
in
pusha
stos
fstps
dec
xor
lea
insb
in
lret
pop
cmpsl
xchg
mov
test
pusha
mov
pop
je
adcb
and
stc
insl
sub
sti
jl
xor
push
popa
fnstsw
push
inc
jb
jbe
sub
pushf
sbb
in
push
add
out
testb
aaa
aas
ja
cmpsl
mov
adc
fidivl
add
xchg
sbb
scas
or
cmp
xchg
jmp
es
dec
mov
fwait
das
lds
pop
pop
loop
lcall
xchg
insb
pop
dec
sahf
dec
repz
les
test
mov
and
and
xchg
inc
imul
mov
fiadds
bound
cmc
arpl
dec
out
loope
sbb
sbb
out
jae
fisttpl
in
lret
cmp
adc
inc
test
adcl
mov
pop
adc
roll
gs
lea
or
sahf
sbb
fcmovu
icebp
mov
jns
jne
lods
push
mov
lahf
popf
jo
cmp
sbb
aam
sbb
dec
loop
adc
adc
dec
fldt
add
movsb
lahf
in
outsb
push
adc
sub
mov
lock
nop
sub
or
push
sbb
jb
mov
xor
icebp
imul
lcall
or
cmc
inc
sbb
xchg
xchg
outsb
rclb
mov
jo
gs
dec
and
out
pop
fists
inc
ss
push
mov
inc
gs
mov
dec
mov
mov
les
adc
movsb
cli
inc
idivl
mov
add
mov
or
out
aas
nop
aas
pop
cmp
or
lea
sti
xchg
adc
cs
mov
incb
push
jns
pop
push
nop
pushl
pop
add
int
mov
add
xchg
imul
add
sub
cmpsb
pushf
addr16
or
mov
jmp
shl
jo
mov
xor
imul
sub
fcoms
mov
scas
test
scas
inc
daa
shlb
jnp
inc
pop
jle
inc
jne
or
pop
or
cwtl
dec
xchg
lods
pushf
or
xor
pop
push
ja
mov
cli
jo
jg
pop
out
repz
pop
movsl
addr16
inc
out
hlt
inc
sbb
add
mov
sbb
rorl
rorl
lcall
hlt
dec
mov
sti
add
sub
push
pop
push
fs
xchg
mov
loopne
adc
repz
ljmp
lods
scas
push
pop
or
out
and
dec
mov
jb
push
jmp
mov
pusha
testl
push
jo
xchg
sbb
push
addr16
test
ds
pushf
std
jno
sub
clc
mov
add
mov
mov
inc
push
xchg
mov
add
xchg
xor
loop
scas
rcl
push
xor
aaa
xchg
jl
sub
fsubl
jle
and
inc
lretw
jg
out
imul
push
mov
lcall
adc
adcb
scas
adc
xchg
or
dec
mov
sub
xchg
inc
push
je
movsl
arpl
loope
xor
lds
int
mov
push
inc
mov
das
mov
popa
push
pusha
pop
lods
sub
outsl
push
fsubs
cmp
shr
inc
sub
jge,pn
add
sub
jbe
es
iret
pusha
or
add
add
and
cmp
inc
xchg
rep
and
imul
das
ret
data16
push
call
into
inc
scas
pushf
mov
loope
fwait
ja
gs
rol
std
insl
aaa
sbb
rcl
cmpsl
mov
xor
mov
push
push
rolb
mov
jbe
fidivrs
movsl
dec
repz
test
fs
inc
cmp
cmp
out
rcll
enter
xchg
mov
dec
add
mov
dec
push
mov
ret
pop
pop
dec
cmpb
cmp
lcall
int3
dec
fdivs
outsl
jmp
loope
dec
cmpsl
pop
xchg
int3
arpl
inc
mov
mov
pop
nop
jno
shlb
pop
es
jne
fs
jb
int3
lcall
xchg
scas
jg
push
rolb
pop
xor
stos
fadd
bound
daa
mov
pop
xchg
ret
sbb
push
inc
push
cli
xchg
clc
jns
sub
les
mov
repz
add
xor
inc
in
push
jns
iret
ficompl
inc
sbb
dec
mov
add
sti
sub
cmp
sbb
shrb
cmp
lods
fsub
orb
into
jp
xchg
shlb
out
mov
inc
sub
sahf
jno
mov
stos
jle
mov
mov
pop
movsb
or
movsb
adc
sbb
sbb
adc
cwtl
call
pop
aaa
push
push
les
repz
cmp
out
pop
jo
in
sub
xor
mov
imul
jae
outsb
cmp
cmp
sub
and
sub
js
xchg
ret
out
mov
mov
ret
push
rorl
mov
mov
lret
push
fisttpl
mov
int
xchg
std
je
pop
subb
and
nop
jns
fwait
push
adc
lods
cmpsl
stc
sbb
or
inc
add
add
call
addr16
mov
adc
stc
faddp
push
lret
testl
sbb
stos
mov
shlb
in
jbe
inc
xlat
jo
mov
cmp
fidivl
test
jmp
ljmp
clc
cmpsb
rep
jmp
push
mov
mov
scas
sahf
insb
jp
repnz
xor
divb
imul
or
lret
jmp
fcompl
test
jns
addr16
iret
xor
xchg
subb
js
repnz
idivb
mov
int
mov
popa
mov
shlb
int3
sub
dec
mov
int3
lret
les
sub
movsl
or
add
in
dec
or
es
insl
rorb
mov
and
jnp
mov
mov
mov
inc
std
pop
rclb
pop
mov
lret
add
pushf
mov
or
push
inc
sbb
xor
xchg
cwtl
cmp
adc
push
into
gs
sub
xchg
jl
pushf
out
sub
inc
add
mov
xor
rolb
push
repnz
mov
arpl
adc
dec
es
pop
jp
icebp
cmpsl
sub
xchg
insb
gs
sbb
jl
pop
out
mov
or
insb
fistl
cs
push
push
push
xor
movsb
movsb
xor
sar
and
mov
cmc
and
pop
jo
or
add
and
test
test
cs
ficoml
cmp
push
fisubrl
test
cwtl
dec
bound
test
outsl
mov
mov
and
jmp
idivb
pop
mov
popf
adc
in
cltd
cli
fiadds
or
cmp
jns
sub
incl
repz
mov
enter
out
push
push
push
cmp
jl
push
mov
add
popa
xor
jmp
rcr
mov
push
mov
fiaddl
and
jae,pt
int3
xchg
leave
outsl
lret
and
pop
movsb
jno
jno
sub
test
ds
mov
xlat
adc
adc
in
shlb
mov
movsb
jns
in
mov
jns
stc
xor
jle
pop
insb
xchg
lcall
testb
add
stos
mov
leave
pusha
sbb
movsl
add
packsswb
sbb
mov
nop
jno
and
mov
mov
mov
rorl
dec
nop
ficoms
sub
push
stc
out
add
cmp
dec
enter
std
xchg
scas
xchg
popl
cltd
jnp
mov
jle
out
bound
enter
ret
rolb
pop
fs
add
call
lds
clc
data16
and
xlat
mov
dec
inc
pusha
inc
hlt
adcb
cmpsl
xchg
inc
pop
mov
test
sub
pusha
cmp
jns
dec
xchg
fdivl
repnz
mov
outsl
inc
scas
mov
pop
adc
lahf
pop
sub
mov
pop
outsb
int3
mov
lret
loop
jge
sbb
jecxz
jg
rcrb
pop
cmpsl
push
xchg
testl
push
flds
cmp
adc
xchg
shl
cmp
sub
pop
adc
pop
pusha
in
mov
sar
insl
enter
faddp
push
xor
cmpsl
xchg
mov
ljmp
test
shll
je
lods
add
and
sbb
jg
dec
pop
nop/reserved
out
lahf
jecxz
mov
inc
adc
test
cmpsl
xor
lds
cmp
xchg
mov
xchg
jne
sbb
aaa
daa
sarb
loope
or
cmc
out
push
movsb
pop
dec
push
and
mov
cwtl
loopne
mov
inc
inc
in
lret
inc
sbb
pop
push
dec
or
or
jp
loop
adc
cld
adc
fs
xchg
push
xchg
cwtl
fucom
and
jns
add
movb
sub
dec
sub
cli
xchg
aas
jb
icebp
fs
neg
pop
mov
js
sahf
mov
push
aam
fcom
xor
mov
mov
sbb
adc
xor
and
into
cli
int
mov
xlat
fistps
adc
mov
fadds
jo
int3
add
je
jl
icebp
and
cmp
add
pop
push
mov
test
add
loopne
mov
mov
sbb
xlat
mov
cmpl
xor
sbbb
sti
mov
aas
inc
pop
pusha
jge
and
push
aaa
mov
adc
pop
gs
cmpsl
aaa
addr16
sub
xlat
call
xchg
in
xchg
add
inc
ret
add
movd
aas
sub
inc
hlt
mov
pop
popa
add
sub
push
incb
lods
fadds
imul
sub
icebp
ds
xchg
cld
fildl
mov
mov
cmpsl
pusha
fisubs
cmpsl
or
jge
jo
mov
cmp
sbb
jb
pop
das
push
add
add
in
cld
lods
pop
mov
sbb
sub
scas
adc
leave
clc
or
sbb
mov
and
bound
cmp
mov
sub
or
scas
inc
cmpxchg
xchg
or
pusha
xchg
sub
mov
mov
xchg
add
add
aaa
sbb
sbb
je
mov
mov
inc
push
mov
dec
fisttps
mov
mov
push
sub
pop
xchg
es
lods
mov
sbb
mov
fisubrs
and
add
dec
jo
push
and
mov
mov
js
pop
lret
data16
mov
dec
ljmp
lahf
addr16
push
push
hlt
add
incl
fisttpll
pop
sbb
push
mov
jo
loopne
or
xchg
or
lds
test
aas
cld
mov
out
shll
insl
js
inc
into
lds
faddl
add
or
out
xor
movsl
dec
loopne
dec
or
es
notl
or
mov
dec
add
imul
xchg
adc
pop
sub
xlat
into
lock
xor
sub
andb
sahf
pop
rorl
out
inc
sub
pop
inc
xorl
jle
cmpsl
out
jo
inc
xor
pop
roll
pop
div
sub
leave
add
mov
xbegin
adc
pushfw
jb
sub
js
out
cmp
fldlg2
lret
stos
adc
push
cmp
call
and
cmc
mov
insb
jne
cmpsb
out
mov
and
mov
adc
mov
xchg
movsb
pop
dec
xor
into
add
or
xchg
lret
nop
aam
jmp
mov
and
mov
sbb
push
sbb
sbbl
jbe
cwtl
ror
leave
sti
outsb
rorl
add
mov
arpl
mov
mov
lock
lcall
mov
sahf
adc
insl
cmp
lea
test
cli
enter
pop
push
pop
pusha
roll
out
outsl
mov
decb
adc
xchg
out
xor
fldt
cwtl
pop
jae
jno
push
adc
pop
adc
xor
inc
mov
loope
lcall
scas
stos
xchg
cmpsb
aaa
lret
pop
xchg
mov
pop
sbbb
and
lret
pusha
out
mov
ja
cmp
cwtl
cmp
add
gs
jae
jmp
jnp
xor
test
and
jl
loop
scas
ljmp
out
xchg
push
call
jge
push
push
fs
repz
mov
dec
stos
pop
int
and
dec
in
pop
test
push
mov
sub
mov
in
pop
lahf
mov
sahf
and
inc
idivb
dec
inc
mov
add
push
mov
fidivrl
push
dec
and
mov
mov
test
aaa
mov
aas
mov
std
jmp
movl
test
aam
sbb
rorb
ficoms
andb
int
and
test
pop
jg
and
imul
insb
ret
add
cmp
mov
addr16
pusha
fistl
sbb
xchg
xor
pop
pushf
inc
sub
inc
shrw
js
ret
mov
aad
jne
lahf
sub
addr16
or
fcmovnbe
out
add
cmc
movsl
mov
repz
mov
outsb
push
cmc
cmpl
push
test
push
jecxz
push
xor
jl
mov
adc
je
lods
data16
mov
mov
or
adc
and
sub
out
ret
pop
push
jl
mov
ret
fs
leave
mov
sub
cld
loop
sbbb
cltd
dec
je
lret
or
lock
gs
mov
mov
mov
fisubrl
mov
pushf
push
xchg
push
out
cmp
lret
xchg
mov
inc
or
push
icebp
and
cmpsl
es
inc
cli
jg
std
mov
mov
lds
lcall
and
mov
and
push
or
dec
sub
ret
pop
dec
outsl
sub
adc
dec
test
iret
std
mov
sbb
pop
int3
cmp
clc
xor
loopne
roll
movsb
std
sub
fists
mov
mov
add
xlat
ds
mov
cltd
arpl
push
pushw
mov
dec
ds
jg
mov
sub
cmp
xor
xor
cmp
outsl
popf
push
out
and
ror
shl
inc
pop
sahf
push
sbb
imul
add
stos
dec
test
jge
outsb
jnp
or
aam
mov
add
jo
pop
pop
shlb
ja
dec
xchg
js
mov
dec
sahf
cmovle
movsb
inc
mov
inc
in
cmpb
dec
jge
stc
lret
out
bound
adc
push
fsts
cltd
out
inc
adc
jmp
sbb
adc
iret
adc
jmp
adc
jecxz
or
lret
loope
lock
xchg
outsb
insb
movsl
xor
mull
dec
add
sub
xchg
loopne
push
jb
cmpsl
inc
addr16
jnp
shll
cltd
mov
sbb
imul
push
nop
fcomps
icebp
fnstcw
mov
into
addl
sbb
ja
sub
ds
pop
dec
xchg
hlt
push
test
loopne
sbb
iret
mov
mov
sahf
je
inc
inc
xchg
mov
mov
fldlg2
sub
jnp
pop
icebp
loopne
sti
mov
xchg
test
dec
xor
loope
lcall
pop
push
in
jae
adc
data16
loopne
ljmp
fidivl
sbbl
arpl
inc
rorl
push
cld
popf
popf
test
bound
imul
sbb
cmp
shll
subl
sub
pushf
mov
and
xchg
scas
push
xchg
push
frstor
pop
clc
in
call
shll
test
cmpsl
std
jl
imul
std
mov
lret
mov
cld
dec
decb
movsl
push
inc
pop
ret
fists
lcall
push
inc
shrl
test
inc
dec
xor
cmp
push
subl
cmp
xor
enter
cmp
sub
pop
add
cmp
push
in
arpl
xor
daa
cmp
or
inc
xorl
jns
adc
mov
dec
mov
scas
fwait
dec
push
movsb
add
sub
jmp
pop
addl
push
data16
cwtl
inc
or
sub
icebp
cltd
sbb
adc
and
mov
ror
sahf
cmp
das
les
mov
daa
sarl
xor
and
iret
jno
or
fwait
int3
xchg
adc
mov
mov
negl
pop
mov
cmp
or
sbb
jmp
mov
andl
cmp
adc
jae
mov
or
out
fidivl
push
push
xor
mov
aam
mov
nop
jg
repz
add
push
jns
test
add
out
and
cmp
jecxz
inc
insl
sub
sbb
fmul
sbb
mov
cmp
inc
enter
shlb
ret
and
loop
nop
xor
xchg
push
icebp
incb
aaa
test
push
mov
sbb
mov
and
and
outsl
fldenv
add
cmpsb
adc
push
mov
rorb
sahf
jmp
mov
fisubrl
flds
enter
adcb
lret
fdivs
out
scas
add
push
movsl
clc
xor
stos
mov
mov
mov
adc
xor
popf
enter
sahf
sub
mov
add
adc
pop
sbb
insb
loope
xlat
sbb
dec
mov
ss
test
scas
js
cmp
aad
jnp
mov
test
loopne
jecxz
mov
push
mov
ret
xchg
jl
mov
je
rsm
pusha
and
add
fstps
push
insb
push
mov
pop
pushf
iret
addr16
add
lds
xlat
loop
fs
jns
pop
and
and
push
xchg
or
mov
cmp
inc
push
push
xchg
loope
testb
hlt
lds
xchg
cmpsl
imul
dec
test
loop
xchg
pop
mov
fisttpll
jmp
inc
mov
icebp
cmp
dec
mov
gs
cltd
loope
lahf
mov
dec
in
test
add
fnstenv
push
pop
in
jo
jp
cmpsb
mov
jecxz
cmpsb
mov
test
lock
mov
jb
push
pop
out
subb
adcl
mov
inc
movsl
call
mov
leave
cmpsl
das
dec
push
mov
cli
push
inc
push
popa
call
dec
add
xorb
sbb
pop
ret
sub
cmpsl
cld
xchg
js
mov
int
pushf
imul
mov
sub
add
dec
mov
push
mov
push
pop
fsubs
push
inc
insb
push
and
fbstp
push
xchg
push
push
pop
popf
call
std
cs
movsb
movb
shlb
cmp
mov
mov
push
mov
testl
pop
push
pop
mov
push
jecxz
loop
add
stos
icebp
sbb
sbb
push
jb
stos
add
dec
jb
cwtl
sub
sarl
data16
outsb
inc
sti
sub
sbb
push
out
inc
pop
adc
fcompp
mov
sbb
jnp
cmp
imulb
push
mov
mov
bnd
jecxz
out
inc
sbbl
test
sti
ret
dec
dec
fs
push
push
cltd
bound
das
jb
dec
xor
outsl
jge
sbbb
sub
out
lock
pusha
push
arpl
out
jge
in
andb
mov
sahf
mov
mov
movsb
std
insb
fs
adc
rcr
cmp
rcl
je
xchg
sbb
mov
or
pop
xor
loop
push
jbe
ja
adc
enter
das
and
mov
out
fcomp
call
xor
inc
push
xchg
pop
not
cmp
outsb
push
adc
sbb
arpl
arpl
cmp
dec
push
fsubs
call
int3
in
in
dec
push
outsb
fisubrs
mov
push
pop
mov
push
add
xor
xchg
ficoml
rcl
mov
pop
and
mov
dec
mov
add
mov
push
sbb
inc
cmp
rorb
add
in
xchg
stc
sbb
scas
mov
or
mov
adc
inc
test
nop
ss
mov
push
sub
test
ret
sbb
outsl
dec
push
decl
and
pop
mov
xor
inc
test
dec
push
push
mov
mov
mov
ss
jge
repnz
xor
cmp
add
sbb
push
icebp
add
push
rcll
in
jle
lods
jmp
cmp
or
nop
and
adc
clc
call
push
push
mov
mov
hlt
jae
loope
gs
mov
sub
dec
fstpl
cs
xor
push
les
jae
mov
leave
shlb
iret
sbb
test
jmp
and
hlt
jl
push
call
sub
add
stos
xchg
mov
dec
mov
push
div
mov
xor
mov
cmp
pop
movb
cli
cmp
movsl
rcrl
mov
add
pop
push
cmp
jmp
cli
push
mov
cmp
int3
mov
test
push
dec
xchg
cwtl
xor
fldcw
xor
movsb
adc
inc
inc
mov
pop
mov
mov
outsb
and
bswap
in
inc
mov
jb
or
sbb
jae
mov
pop
inc
mov
cmp
pop
pop
subb
repz
mov
pop
or
and
repnz
jns
jbe
jl
int
hlt
clc
add
or
fnstenv
int
mov
icebp
clc
push
test
in
pop
icebp
push
jp
cmc
out
xor
cs
pop
sub
pop
outsl
inc
jp
pop
aad
mov
inc
mov
cmp
les
xor
mov
das
push
xor
dec
idivl
sub
jecxz
adc
lods
pusha
xor
lock
sahf
jmp
xchg
enter
notl
mov
xorl
shr
frstor
push
fs
inc
bound
cld
add
xchg
ja
push
out
ror
dec
call
mov
aam
pop
ret
xchg
inc
inc
dec
pop
les
fsts
test
and
mulb
xor
inc
push
jecxz
pop
movsb
pop
mov
popf
sti
test
push
into
fs
bound
dec
pop
call
fbld
jns
mov
xchg
fisubs
mov
or
aaa
pop
sub
lods
cltd
cmp
lock
stc
mov
rorl
fsubrl
and
sbb
sub
out
cmpsl
pop
int
loopne
add
ljmp
mov
dec
lret
xor
outsb
fidivrl
cmpsl
xor
sub
or
mov
loop
aam
ds
or
xor
inc
add
loopne
pop
mov
faddp
or
jne
mov
iret
inc
dec
push
into
in
dec
jmp
aam
or
pop
outsl
jno
loopne
adc
add
mov
add
pop
das
sbb
sub
mov
lret
gs
cmp
shrb
adc
adc
dec
or
ja
sbb
lcall
pushf
mov
fisttpll
std
xchg
outsb
nop
lea
sbb
lea
jns
loop
stc
loop
jo
xor
andl
sub
sbb
mov
aaa
and
sub
cwtl
roll
shll
add
mov
ljmp
aad
repnz
mov
aas
inc
dec
push
mov
les
sti
negl
sti
mov
inc
push
loope
lret
mov
fwait
push
and
pusha
frstor
xor
shll
adc
lods
sbb
cld
pusha
loopne
jnp
cwtl
inc
gs
adc
push
jbe
and
cmp
sub
jle
cmp
sbb
jb
fnsave
std
sahf
or
in
inc
add
aam
imul
es
rolb
sbb
lods
jns
adc
dec
jns
mov
add
lods
scas
jnp
stc
pusha
fincstp
mov
idivb
maxps
pop
mov
adc
sub
push
cltd
mov
icebp
andl
push
stos
xlat
pop
scas
mov
sub
andb
int3
into
mov
aad
shrb
hlt
or
jo
stos
dec
push
sub
out
in
fsubrl
xor
insl
fdecstp
mov
popf
mov
dec
into
inc
insb
or
pushf
cmp
mov
push
sahf
pusha
es
hlt
mov
dec
mov
stos
ljmp
sar
jae
orl
xorl
mov
or
xor
fcmovnu
fldenv
cmp
aam
ret
sub
or
and
jp
jp
push
push
mov
xor
pop
or
lret
js
xor
outsl
add
adc
mov
jle
xor
sub
rcll
pop
jne
dec
sub
push
pop
and
mov
push
xchg
or
jns
jle
adc
mov
inc
aad
ret
aaa
jb
cmp
bound
pop
scas
dec
dec
cld
ja
xchg
jbe
pusha
adc
pop
xor
add
mov
cmp
xchg
fwait
jle
push
mov
out
and
icebp
xchg
aam
aam
xchg
lahf
imul
jl
inc
mov
lret
xor
fwait
ljmp
or
in
out
roll
imul
sbb
ss
imul
sarl
jle
scas
pop
jmp
loop
clc
out
mull
loope
cmpsl
xchg
push
ror
xor
add
pusha
hlt
dec
jno
add
and
inc
or
dec
or
outsb
adc
cmp
les
test
cld
adc
mov
les
in
stc
fadds
div
pop
out
dec
lods
pushf
add
pop
popa
rcll
mov
mov
sub
xor
inc
les
pop
arpl
repnz
fsubr
jns
addr16
ficoms
js
xchg
push
lcall
xchg
xchg
xor
push
les
sub
fildll
sub
pop
mov
xchg
sbb
test
loopne
ret
inc
sbb
test
movsb
arpl
sub
pop
sahf
fadd
ds
pop
test
push
int
pop
loopne
imul
push
inc
and
lea
sar
pop
push
pop
jg
dec
xor
pop
sub
shlb
pop
inc
test
lahf
push
and
mov
inc
daa
cmpsl
sub
ss
adc
rcll
xchg
icebp
push
out
jae
push
pop
fisubl
sbb
dec
cli
cmp
jae
pop
jbe
mov
dec
add
xchg
out
in
paddsb
cmp
xchg
xchg
jp
cmpl
aam
js
inc
push
and
bound
cmp
lret
add
mov
jge
xchg
cmp
ja
mov
fstps
testl
pop
pop
mov
fwait
pop
test
icebp
inc
cmp
fnstsw
jl
or
in
popf
shll
imul
pushf
loop
mov
imul
sbbl
in
sbbb
es
rcll
adc
insb
je
aaa
inc
cmp
push
adc
or
aad
pop
jne
not
mov
adc
xchg
dec
pop
sahf
mov
int3
sbb
sbb
lds
mov
mov
lock
fimuls
adcb
adc
cld
xchg
outsb
ret
lock
shlb
dec
addr16
mov
cmp
mov
adc
ficoms
hlt
js
or
jg
je
shl
mov
testl
push
sub
sub
fnop
xor
das
rcrb
or
pusha
fsubs
insl
sbb
sahf
pushf
test
shrb
inc
out
jnp
or
jl
test
fcmovnb
lea
xor
jno
sbb
iret
aas
lahf
adc
addr16
xor
or
push
add
adcl
cmp
scas
or
pop
je,pn
ds
jns
cltd
xchg
jmp
imul
je
nop
pushf
push
cmp
dec
inc
sbb
mov
testb
and
sbb
andb
fcmovb
test
mov
lret
int3
movsb
mov
inc
mov
mov
ds
orl
jo
leave
add
xchg
ljmp
mov
fwait
xorb
push
sbb
sti
repz
call
loop
pushf
xchg
adc
mov
cmp
pop
insb
xchg
inc
cs
sub
xchg
insb
xchg
pop
imul
test
mov
jecxz
adc
shlb
mov
ret
ret
nop
mov
imul
rcr
scas
out
xchg
inc
cmp
test
xchg
add
fcoms
sar
push
mov
xchg
mov
mov
adc
nop
cltd
clc
mov
xor
imulb
pop
insb
xchg
push
cmp
mov
andb
out
xor
sahf
daa
call
mov
jmp
repz
iret
or
neg
cltd
aad
fwait
cli
stc
ja
adc
inc
xchg
add
jbe
sarb
sti
idivb
lea
mov
arpl
sub
movsl
fcompl
push
mov
pop
jne
out
icebp
sbb
and
inc
pop
dec
pop
in
jne
xchg
mov
movhlps
fwait
add
jae
xchg
sbb
je
sub
pop
sbb
push
in
loop
fildll
stos
sub
cltd
pop
lea
std
les
jmp
add
ficoml
mov
jg
in
jl
iret
xor
inc
cwtl
les
inc
xchg
jmp
loopne
insb
mov
or
xchg
mov
mov
and
aam
stos
push
xor
jecxz
push
inc
les
mov
cmp
push
push
sub
cwtl
loope
or
push
pushf
xchg
aas
out
jg
lcall
push
lahf
sub
lds
xchg
xorb
loope
leave
jg
fdivl
out
mov
hlt
mov
sub
test
dec
mov
xor
dec
inc
xchg
sub
dec
je
xor
or
cmp
mov
js
mov
rcll
imul
adc
cmpsl
lock
pop
decb
jmp
push
faddl
jecxz
push
cmpsb
cmp
sub
sbb
adc
and
pop
or
jo
mov
pop
mov
divl
scas
je
int
push
int3
in
jle
sub
dec
nop
movsl
js
scas
cs
gs
mov
xor
pop
sub
lds
lea
mov
dec
lretw
rorl
test
push
es
testl
jae
push
push
in
pop
fidivl
loope
scas
inc
shlb
lds
clc
mov
out
add
mov
stos
clc
ret
pop
sbb
fcoml
lea
or
icebp
jge
adc
roll
addl
and
stos
out
ljmp
jecxz
loope
sub
sub
arpl
mov
cli
popa
rcrl
rdtsc
lret
pop
lret
mov
mov
adcb
sbb
addb
test
xchg
jns
push
mov
push
mov
fsubrl
jae
stos
das
fiadds
mov
jae
mov
adc
or
pop
pop
pop
loope
std
pop
hlt
fstpt
mov
gs
sbb
push
xchg
inc
adc
xchg
push
repnz
icebp
inc
push
out
in
pop
xchg
aad
lock
push
arpl
xorb
push
push
stos
and
dec
mov
and
lret
and
loope
les
outsl
les
je
dec
sub
dec
jo
aam
adc
lret
out
mov
cmc
cwtl
xor
idivl
iret
clc
outsl
es
xchg
pop
xchg
dec
fld1
jns
adc
adc
lret
sub
mov
dec
adc
xor
out
sub
pop
jnp
sub
into
cwtl
dec
inc
and
inc
and
repnz
pop
cmc
in
and
mov
jmp
jnp
or
hlt
jbe
in
and
inc
xchg
ds
add
clc
sub
fs
push
notl
sbb
das
jns
mov
test
mov
imul
add
rcll
out
jl
push
fwait
pop
mov
sub
xor
repz
ret
cld
das
add
inc
sbb
das
out
jne
mov
hlt
mov
mov
jne
pushf
pop
insl
es
xor
push
in
iret
fcomp
sub
mov
aad
sub
cmpb
xchg
out
add
mov
shrb
aas
sahf
push
sub
aas
mov
push
mov
jg
pop
pop
sub
sbb
ud2
gs
ror
aad
loope
cmp
adc
push
pop
xchg
aam
cmp
cmp
dec
das
sub
fwait
add
mov
mov
dec
xor
mov
mov
cmc
lret
int
mov
sbb
js
sub
pop
outsl
mov
fistps
scas
in
adc
arpl
jp
jo
add
cmc
push
lds
adc
sub
jns
lret
pop
mov
sti
jae
add
sbb
mov
mov
xor
xchg
sbb
xchg
sarb
mov
push
add
cmp
pop
inc
pop
mov
mov
mov
fisubl
dec
repnz
cmp
jno
test
fst
and
mov
sarb
test
pusha
dec
imul
cmp
ljmp
xor
cmp
cmp
jbe
ss
mov
mov
faddl
stc
repnz
push
xor
adc
inc
adc
mov
inc
fldt
xchg
push
pop
push
stos
imul
cmp
hlt
mov
shrl
dec
in
xchg
insb
enter
bound
lds
loop
rep
das
das
fisubrs
sbb
in
xchg
fs
andb
pop
jle
stos
pop
nop
add
inc
idivl
adc
aam
xchg
popa
adc
xchg
and
push
sbb
std
mov
aas
mov
push
jae
dec
mov
or
inc
sti
loope
mov
mov
in
xor
movsb
or
cld
ja
xor
dec
mov
add
sub
and
mov
nop
cld
sbb
mov
mov
nop
cmpb
in
pop
cmp
xor
cmp
jo
insl
dec
mov
lea
jp
dec
xorl
push
xor
and
jmp
test
negb
call
cld
cmp
addl
out
adc
imul
out
inc
add
mov
or
or
dec
cld
and
dec
add
pushf
mov
das
add
loopne
aas
mov
ja
hlt
sbb
mov
outsl
pusha
sub
add
fstps
add
jecxz
xor
movsb
lahf
and
stos
in
outsb
pop
jge
push
xchg
inc
sbb
mov
shrl
push
fisubl
imul
adc
ret
jp
mov
fs
rcll
mov
movsb
stc
lahf
inc
fnstsw
mov
lock
inc
repz
dec
divb
fsubrl
pop
cli
das
cmpsl
cmpsl
sarb
xchg
cltd
add
and
and
xor
xchg
cmp
loopne
mov
xchg
xor
mov
push
ret
icebp
inc
mov
xor
lods
xchg
jns
scas
sub
push
dec
in
int3
inc
sub
fwait
sbb
test
xchg
daa
loope
push
in
mov
out
addb
inc
movsb
xor
daa
sub
and
xchg
pop
outsb
pop
fcmove
cmpsl
int
add
shll
fistpl
xor
out
inc
arpl
cltd
inc
cld
stos
add
stc
out
cmpsl
or
stc
mov
enter
insl
push
cld
cmp
ja
mov
out
stc
add
xchg
mov
cmp
push
cwtl
or
mov
sbb
ja
add
ret
mov
cmp
lcall
xor
mov
or
dec
cmp
jne
push
pop
adc
dec
inc
lretw
ret
pop
mov
fwait
ja
pop
popf
lret
test
shll
xchg
push
nop
sahf
dec
jbe
xchg
pop
mov
ss
or
push
and
lret
dec
std
mov
ret
or
and
or
gs
clc
mov
pop
xor
stos
sbb
lahf
daa
popa
int
adc
paddd
inc
add
lcall
cmpsl
outsb
cmp
jb
sbb
mov
xchg
out
inc
or
shlb
xchg
out
pop
inc
aas
mov
mov
ds
or
dec
pop
in
mov
mov
inc
add
pop
or
jg
mov
dec
sbb
loop
outsl
ja
sub
cltd
sahf
std
mov
sahf
jg
popa
cmp
push
or
sbb
cltd
cmp
out
or
lock
addr16
movsl
cmp
cmpsl
js
sarl
iret
push
jmp
icebp
leave
addr16
push
push
shlb
test
les
jmp
push
stc
mov
cli
decb
ja
dec
push
push
xchg
or
or
jp
adc
fstpt
pop
jmp
lods
or
leave
fdivr
aam
xchg
movsb
sub
cs
mov
xor
xor
ds
cmp
jbe
push
inc
mov
or
sub
pusha
mov
cmp
imul
fisttps
xchg
adc
inc
repnz
sarb
clc
xor
insb
shll
pop
mov
fdivrl
sarb
mov
dec
into
test
push
pusha
jp
in
xchg
pop
xchg
rcll
mov
jecxz
mov
or
jbe
popa
stc
loop
sbb
push
cmp
pop
pop
jae
shrb
mov
cmc
shrb
jnp
or
sub
xchg
sbb
lock
and
pop
jns
lock
nop
push
pop
adc
movsb
rcll
stos
jle
xor
sti
imul
push
or
or
xchg
ss
xor
test
test
nop
sbb
lods
inc
stos
lods
push
lahf
mov
ret
adc
and
jecxz
xor
jno
aas
mov
pushf
pop
mov
test
lret
sub
jae,pn
push
cmp
mov
stc
add
xchg
movsl
mov
not
push
dec
sbb
mov
mov
xor
nop
sarb
lahf
xlat
mov
lahf
mov
lret
pusha
loope
jbe
lea
in
mov
jnp
lea
fisttpll
ja
adc
xor
pusha
test
push
les
pop
shrb
scas
push
clc
jecxz
cmp
imul
cmp
faddl
iret
add
mov
int
test
push
scas
call
imul
sbb
inc
mov
inc
in
and
cwtl
xchg
pop
adc
ja
test
push
stos
sub
stc
rcl
cltd
aas
pop
cs
xchg
pop
jmp
bound
mov
mov
jle
jb
inc
or
ljmp
cmpsb
push
sbb
fisttpl
add
pop
mov
outsl
push
mov
pop
adc
mov
lret
movsb
xor
mov
std
fcompl
fdiv
pop
cmp
call
clc
mov
pop
data16
jne
fsubl
jmp
popf
inc
cmp
mov
pop
add
pop
mov
in
scas
sti
inc
pop
in
pusha
movsb
and
xchg
jg
sbb
int3
mov
das
push
pop
sbb
inc
pop
add
dec
in
jecxz
out
xchg
aas
mov
xor
xor
loopne
add
pop
fsts
popf
jo
inc
movsb
cmp
int3
xor
xlat
movsl
movb
iret
sub
or
push
and
dec
negb
jl
sbb
jns
xchg
jb
scas
imul
adc
arpl
clc
sti
mov
movsb
mov
repnz
mov
stos
lret
dec
xor
daa
cld
movsl
pop
pop
test
lret
cmp
xchg
lock
imul
xchg
cmp
lea
pop
or
and
imulb
or
xor
nop
jns
mov
push
push
shll
xlat
mov
icebp
jmp
pop
movsl
pop
push
enter
loopne
imulb
ds
sub
push
rcrl
mov
sbb
outsb
aam
dec
out
aam
mov
fstpl
or
lret
insl
adcl
gs
repz
push
lds
mov
add
cli
cld
cmp
cmpsl
ja
scas
lret
pusha
ret
jns
cmp
mov
mov
js
cwtl
sbb
inc
push
sub
lea
xchg
jmp
repz
test
stc
imul
lret
adc
push
jne
gs
mov
stos
icebp
js
out
sbb
jmp
lret
sub
mov
imul
sub
sub
xlat
lahf
lods
add
adc
or
push
jns
lds
sub
aas
test
jnp
mov
into
je
xchg
or
cmc
push
cli
insl
test
int3
and
aas
xor
mov
sbb
xor
push
adc
imul
aaa
rorl
cmp
inc
jl
dec
mov
lea
cld
std
push
and
xchg
add
push
cmpl
inc
inc
xchg
add
adc
inc
or
aam
mov
outsl
sub
ret
push
ror
mov
xchg
in
sbb
testb
push
mov
mov
push
inc
inc
pop
lret
sub
cmp
inc
sub
mov
mov
scas
imul
sbb
mov
adc
cmp
jo
rorl
repnz
hlt
or
clc
jg
sbb
int
dec
push
mov
arpl
mov
sub
in
mov
jne
cmp
in
lds
pop
and
iret
sbb
in
in
ljmp
in
mov
jbe
add
adc
bound
or
xchg
dec
std
xchg
pop
dec
les
out
loop
in
lret
jbe
icebp
call
sbb
mov
aaa
xchg
sarb
into
out
jg
cmp
fidivs
cs
mov
add
mov
mov
sub
pop
in
push
sbb
lods
test
in
fnstsw
fisubs
mov
sbb
icebp
clc
jbe
negb
push
movsb
test
leave
shlb
cltd
adc
or
iret
jo
inc
call
mov
std
and
and
and
aaa
out
out
jnp
aad
imul
dec
adc
rcll
cmp
subb
aaa
lods
rclb
sbbb
stc
es
push
pop
push
or
lods
test
aaa
int3
cmp
adc
push
sti
dec
mov
mov
aam
movsb
sar
add
ss
repnz
push
inc
pop
pop
sbb
pusha
insb
mov
inc
clc
lods
dec
fs
inc
ss
dec
sub
cwtl
dec
std
movsl
ss
pop
lods
xchg
adc
dec
push
outsb
mov
lds
jno
pushf
push
mov
add
mov
pop
mov
add
mov
xchg
loope
jg
mov
xchg
add
jecxz
lods
aas
push
push
cmp
push
inc
inc
and
scas
jb
outsb
and
fs
mov
inc
mov
lods
js
xchg
mov
add
fistpl
dec
js
cmpsb
js
lods
stos
or
shll
rolb
inc
stc
inc
pop
cmp
stos
loopne
fsubrl
into
jo
ljmp
in
xchg
ror
xor
out
jns
scas
loope
test
mov
movl
push
pop
adc
push
mov
cmp
cmp
movsl
xorb
arpl
xor
jl
jle
shll
fwait
aaa
imul
xor
dec
lret
insl
sbb
cmp
js
mov
mov
mov
cmp
mov
pop
mov
and
add
or
mov
push
mov
mov
mov
lock
idiv
jo
cmp
dec
lahf
pop
mov
mov
cmp
add
ss
divb
dec
stc
lock
in
push
add
dec
repz
pop
mov
movsl
rcrl
loop
lods
jno
test
icebp
scas
pop
sbb
cmpsb
sahf
push
js
dec
mov
nop
lea
add
sti
loop
push
scas
sub
or
or
jle
jae
or
xor
fidivs
repnz
test
xchg
loope
pop
jno
loopne
adc
sbb
sbb
repz
pop
mov
data16
sub
cmp
incl
in
or
popa
lods
and
inc
test
mov
dec
add
cmp
dec
jmp
ret
dec
jne
jp
add
pop
dec
sahf
cmc
mov
add
push
jmp
iret
mov
xor
shr
lret
or
sbb
mov
arpl
divb
cmp
mov
es
add
filds
push
gs
and
and
scas
nop
stos
dec
aas
test
mov
int3
lret
or
and
sub
push
jno
xchg
mov
lds
mov
push
sub
shlb
sub
in
sbb
aaa
pop
xchg
or
cli
add
cmp
cmp
adc
sbb
lret
lcall
jnp
mov
mov
incb
hlt
addr16
jbe
or
cmp
mov
sti
lods
test
xchg
rolb
xchg
popf
or
mov
int3
cmpsb
js
shrb
jle
dec
jae
and
leave
dec
out
test
in
sti
test
dec
rcrb
dec
stc
mov
int
pop
sub
cmc
fwait
sbb
fwait
pop
int
test
and
adc
sbb
call
lcall
fimuls
addr16
dec
mov
mov
lds
sar
dec
and
sbb
jp
data16
cmc
js,pn
hlt
and
mov
out
adc
and
or
mov
shr
out
cwtl
test
mov
rorb
jl
fsub
cmp
and
mov
fs
notb
xor
pushf
mov
pop
shlb
mov
roll
dec
faddl
call
je
jecxz
mov
testl
cmp
or
jmp
movsb
pop
testl
fstl
sub
aam
adc
mov
loopne
sbb
aad
jle
repz
std
jnp
imul
stos
pop
and
cwtl
lock
and
mov
xor
pop
push
add
lods
fdiv
int
pop
pop
mov
inc
daa
mov
mov
std
and
jecxz
add
and
jbe
aaa
sub
je
jge
sahf
lods
inc
sub
out
inc
lret
pushf
mov
rolb
pushf
jb
fcoml
and
xorb
jno
cwtl
es
in
push
xor
flds
notb
popl
lock
jle
add
xor
add
inc
lods
adc
xchg
add
mov
add
lock
cmp
fsubr
ret
dec
mov
xchg
jbe
out
pop
adc
sahf
lods
sub
ljmp
rorb
data16
or
inc
adc
scas
inc
cmp
fidivl
movb
imul
lock
and
inc
rorl
mov
or
add
pause
mov
fcmove
pop
das
fs
roll
mov
pop
sbb
pop
movsl
mov
aam
pushw
shll
ret
xor
xor
push
xchg
popa
mov
cmpb
les
xchg
lcall
jecxz
adc
pusha
imul
or
repnz
sub
stc
adc
icebp
xchg
jo
xchg
js
fldt
aaa
ret
mov
imul
mov
test
out
mov
and
jns
cmp
incl
aam
adc
sbb
xchg
pusha
popf
mov
outsb
loop
out
inc
cmp
div
sbb
loop
ljmp
inc
sbb
or
jp
repnz
aad
imul
jno
mov
dec
test
lret
lret
ret
pop
xchg
imul
inc
jns
lret
iret
andb
enter
mov
roll
fnstenv
subb
inc
sbb
xchg
cs
mov
repnz
cmpsb
scas
ds
testl
shl
in
pop
cmp
sub
int3
mov
insl
hlt
and
xchg
adc
pop
js
in
sti
out
inc
enter
sbb
fcomps
les
mov
enter
xchg
cmp
add
outsb
iret
sub
xor
or
fdivrs
loope
into
mov
leave
mov
xor
fists
mov
aam
in
in
and
aaa
lea
rorb
stc
test
or
inc
adc
adc
jge
aaa
loope
push
not
push
lret
loopne
or
mov
addr16
andl
pop
loop
jg
fistpll
dec
and
push
inc
add
int3
test
jne
sub
sarb
xor
fisubl
imul
daa
js
add
push
xor
xor
push
rcr
push
push
mov
xchg
idivl
fwait
sub
fstpl
inc
in
jmp
jl
mov
ds
pop
pop
leave
xchg
sbb
mov
jg
sbb
fisubrs
mov
repz
sbb
adc
push
sub
inc
cwtl
mov
xor
dec
and
cwtl
sub
add
push
in
inc
je
jle
jg
mov
fsubp
das
and
scas
mov
daa
pusha
xor
xor
pop
cmp
imul
sar
inc
loop
mov
mov
std
lods
pop
inc
out
cwtl
test
sbb
mov
xor
mov
mov
jecxz
pop
xlat
and
push
out
jmp
mov
add
mov
mov
test
xorb
dec
push
xchg
sbb
mov
mov
popa
jle
insl
lods
std
lcall
pop
jge
mov
add
rorl
popa
insl
hlt
sub
pushf
imul
mov
mov
stos
inc
dec
cmp
arpl
iret
pop
movsl
test
inc
push
inc
scas
shll
sub
addr16
shll
dec
lahf
nop
out
fadd
inc
cmp
pusha
test
cmpsl
adc
and
jle
out
sub
popf
mov
mov
lcall
add
sub
sub
or
add
lahf
fwait
aam
mov
mov
jno
pop
faddp
cmp
mov
popa
loop
mov
inc
pop
lret
adc
dec
mov
mov
ja
push
hlt
test
push
mov
or
lea
je
sarb
pop
mull
ret
sub
or
leave
add
icebp
sub
inc
loope
fbld
mov
out
in
xchg
dec
xlat
jo
pop
and
jl
pop
adc
and
add
iret
sbb
mov
adc
fstps
outsb
sbb
xor
in
cmp
cmp
fcoml
cwtl
push
sub
out
in
pusha
in
rclb
cld
add
sahf
pushf
dec
or
mov
sub
out
test
fadds
xchg
loopne
xor
xchg
cmpsb
jo
movsb
iret
sub
mov
dec
xor
sbb
cmpsb
pop
mov
cmpsb
mov
sbbb
push
mov
negb
sbb
push
and
xchg
mov
sbb
call
mov
cs
lods
fsubl
dec
xchg
dec
push
xor
movsb
jge
xchg
mov
xor
pop
insl
mov
nop
loop
insl
ljmp
mov
xchg
dec
or
jo
fprem
inc
push
sbb
outsb
push
lea
cs
pop
jo
cmpsb
inc
push
push
and
shrl
mov
xchg
ret
push
sub
cltd
cwtl
mov
mov
xor
xor
cmpsb
lcall
das
bound
faddp
es
pop
pushf
pop
mov
mov
mov
sbb
xlat
insb
lcall
xlat
popf
cmp
or
pop
jecxz
bound
shll
sti
lock
xor
imulb
sbb
int
idivb
cmp
add
test
pop
inc
sarb
js
cmp
or
pushf
add
fmull
mov
lock
subl
fistpll
xchg
push
popaw
sub
add
fists
or
or
mov
into
insb
add
mov
push
push
pop
ret
adc
adc
adc
mov
cld
loope
mov
sub
jg
fsts
movsb
cmpsb
add
pop
iret
jno
ret
popa
in
aad
popf
rolb
add
aad
ret
leave
clc
mov
and
xchg
rorl
mov
fists
push
mov
in
dec
dec
scas
dec
in
inc
aas
sbb
cli
dec
insb
subl
loopne
add
out
adc
arpl
mov
andb
pusha
inc
nop
mov
cmp
adc
xor
out
mov
and
adc
mov
ficomps
push
and
lock
or
shrb
mov
jle
xor
fadd
jmp
lea
xor
jb
pop
add
adc
lods
mov
iret
mov
das
mov
and
cmpsl
pop
cmp
movsl
fcoml
mov
outsl
pop
popf
je
sbb
out
jmp
and
inc
adc
jmp
cmc
push
pop
mov
pop
dec
add
jnp
fldl
pop
call
js
inc
jno
mov
imul
lock
out
loope
inc
cmpsb
xor
lock
ja
xchg
pop
dec
push
mov
stos
rdmsr
dec
sbb
push
xchg
pop
out
test
repnz
in
stos
repz
insl
cmc
jmp
sti
je
mov
sub
lcall
aad
pop
xchg
dec
push
int3
in
loope
in
sbb
xor
add
inc
lahf
stc
imul
pop
ss
inc
jo
cmp
mov
mov
les
hlt
sbb
add
pop
cmp
rol
jl
popf
jmp
dec
test
xorl
outsl
popf
pusha
jnp
xchg
movsl
sub
jb
adc
mov
pusha
mov
mov
cld
dec
fstpl
cmp
icebp
add
jge
sub
lret
mov
psubb
aaa
popf
or
dec
sbb
xchg
jb
js
xchg
xchg
rorl
dec
mov
or
dec
add
int
aas
add
sbb
sbb
push
call
adcb
testl
scas
call
inc
stc
pop
inc
je
inc
push
inc
sbb
mov
xchg
pop
fwait
mov
pop
mov
push
std
pop
jl
mov
je
sbb
pusha
push
jb
mov
adc
and
aas
fnstcw
dec
pop
xor
cmpsl
roll
adc
ret
les
clc
sub
jg
mov
jmp
cmp
mov
int
jle
nop
rol
cmp
sub
inc
call
xchg
cltd
fimull
xchg
ss
cmp
mov
xor
push
push
adc
scas
stos
out
push
pop
iret
push
push
cwtl
jae
dec
ljmp
or
loop
lods
mov
bswap
mov
ss
lret
add
jmp
and
mov
loope
les
or
dec
aaa
xor
jge
rclb
mov
dec
pop
jge
stos
and
xlat
mov
lret
jmp
ds
jp
mov
mov
push
mov
insb
push
inc
cwtl
inc
pop
pop
pop
int
shlb
clc
shlb
fistl
fsub
push
lock
xchg
xorb
hlt
in
xor
out
enter
mov
inc
push
pshufw
lea
arpl
addr16
mov
rcr
ja
push
int
inc
inc
inc
jp
inc
sti
xchg
enter
fiaddl
xor
cmpsb
outsl
loop
pop
ret
into
or
pop
iret
out
push
inc
aad
ja
lcall
push
adc
xor
mov
xchg
movsl
idivb
test
mov
push
jae
add
shll
pushf
icebp
jge
fldl2t
in
add
inc
xor
mov
in
pop
out
sbb
out
jne
or
test
push
cmp
mov
mov
enter
inc
insb
jnp
cmp
mov
inc
cwtl
sbb
jo
push
icebp
scas
int
stos
xchg
mov
lahf
in
ljmp
out
add
mov
mov
mov
and
das
out
lret
mov
fisubrs
fwait
mov
adc
sbb
int3
out
enter
xor
sbb
stos
dec
fistpll
cmpsl
or
adc
arpl
sub
jmp
bound
jl
xchg
xor
enter
cmp
call
jno
insl
xorb
push
fildll
and
int3
add
stc
jp
into
dec
jmp
popa
sahf
pusha
stos
popa
loop
push
pop
sbb
inc
dec
cs
out
push
cmpsb
add
push
std
mov
xchg
adc
push
outsl
mov
loopne
cli
sahf
dec
push
cld
and
mov
aad
out
ljmp
mov
incl
push
outsb
cmp
es
mov
cmp
aaa
add
iret
jns
jno
popa
mulb
scas
fadds
ja
mov
out
jmp
add
sbb
imul
lret
push
lods
dec
loop
sti
gs
sbbl
ja
push
js
lock
hlt
mov
mov
jb
push
add
sbb
fcoms
cmp
cmpsl
scas
cmp
pop
dec
mov
adc
movsl
add
mov
hlt
insl
fnstenv
or
scas
ljmp
movsl
push
nop
mov
pop
jns
mov
pop
insb
in
movsl
loop
clc
in
popf
stos
adc
movl
push
or
movsl
pop
or
mov
stos
push
std
mov
mov
idivb
cmp
dec
cmp
push
adc
xchg
jle
mov
pop
test
pop
and
cmpsb
xor
or
and
sti
xlat
fucomi
jle
add
push
add
outsl
jmp
sub
xor
icebp
adc
push
sbb
mov
ret
jnp
pop
sub
sub
iret
fisttpl
jl
push
popa
inc
pop
aam
je
js
jle
adcl
push
movsl
jae
fwait
into
lahf
jnp
pop
int3
cs
test
stos
sbb
sahf
andb
mov
push
cli
loop
add
mov
and
jno
lahf
movsb
jl
sbb
fadd
cmp
imul
push
aas
inc
outsl
test
inc
mov
lahf
stos
ss
xchg
popf
xchg
fdiv
test
aaa
add
adc
push
jecxz
cmp
pop
outsl
fistps
aas
aam
sbb
cltd
add
lds
outsb
and
jg
cmp
stos
xchg
pushf
out
repnz
fcomps
pop
pop
adc
push
dec
add
adc
pop
pop
jnp
ret
aas
mov
les
fwait
insl
sti
int
fdivs
sub
cmp
jnp
ss
movq
and
pop
fnstenv
jno
aam
in
sub
movsl
xchg
and
jbe
lds
test
leave
popa
mov
mov
lods
addr16
clc
pusha
xor
stos
sub
jne
stos
leave
cmp
push
jecxz
les
adc
sub
jb
or
mov
dec
fildll
out
mov
cmp
sub
xchg
mov
andl
sbb
mov
pusha
adcb
mov
lods
jl
imul
clc
push
mov
mov
mov
push
cmpsb
xor
mov
and
sub
fnsave
dec
mov
jmp
sub
push
in
dec
imul
ret
lea
jge
imul
cmp
adc
into
nop
jp
sub
pop
cltd
push
xchg
mov
aaa
dec
inc
stc
jns
jb
movsl
pop
add
mov
cmp
jmp
popa
mov
ret
loope
mov
dec
xchg
mov
xchg
call
and
xor
enter
mov
pushl
pop
cmp
mov
lret
sbb
push
and
push
pop
and
or
std
and
cmpsb
fwait
push
sbb
aad
xor
and
inc
xor
dec
mov
pop
ja
insb
out
fisttpll
adc
pop
outsb
test
pop
stc
adc
adc
in
xchg
popf
dec
sbb
mov
sub
mov
xlat
cltd
movsl
fcmovbe
cmc
rclb
gs
jle
sub
dec
pop
andl
inc
dec
insl
out
jo
dec
cmp
dec
lods
pop
sahf
mov
mov
xor
mov
out
lcall
cmpsb
loop
jns
adc
sbb
adc
jle
mov
inc
dec
loop
int
push
push
jno
sbb
xchg
cmpsl
adc
pop
mov
ret
and
mov
dec
dec
lcall
loope
gs
cmpsl
or
andl
xchg
or
inc
andl
repnz
ss
add
leave
jle
adc
mov
pop
mov
outsl
mov
push
sbb
rclb
arpl
test
or
addl
ss
and
pushf
es
js
cmp
jae
xlat
add
stc
cmp
mov
sbb
xlat
jl
ret
movsl
sbb
daa
das
sbb
dec
mov
sub
mov
push
jno
sbb
mov
lea
xchg
jae
and
jge
add
out
out
mov
fistpll
lods
mov
push
pop
xor
mov
pop
dec
test
inc
cs
mov
arpl
and
std
mov
cmpsl
add
jbe
mov
stc
fistpll
leave
fdivrs
push
mov
inc
subb
mov
mov
mov
fdivl
sahf
mov
lcall
or
mov
fwait
popf
negl
cmp
sar
xchg
ficomps
repnz
xor
or
shrl
daa
jecxz
and
push
mov
dec
imul
or
dec
sbb
mov
push
push
push
stos
xchg
pop
xor
cwtl
cli
dec
dec
mov
shlb
loope
std
xor
jo
jecxz
or
push
jns
mov
aad
xchg
xor
inc
ret
mov
or
dec
fidivrl
add
int3
cwtl
xchg
aaa
cmp
inc
arpl
in
mov
negl
out
pusha
jb
jg
mov
addr16
lahf
rcrl
popa
mov
mov
lods
or
cwtl
ret
cld
pop
ficoml
nop
ja
sbb
fidivs
mov
call
enter
mov
cld
mov
mov
fiaddl
stos
push
popa
jb
dec
mov
addb
shl
dec
pop
jecxz
jp
mov
ret
fisubrl
xor
clc
inc
jbe
sub
fbstp
push
or
mov
loop
rolb
and
pop
push
add
sbb
inc
lret
mov
bound
mov
mov
sub
jp
or
mov
and
rolb
fsubl
in
push
mov
sbb
inc
cmc
and
icebp
ljmp
push
enter
mov
fcoml
mov
jnp
mov
sbbl
push
shr
mov
nop
scas
adc
shr
int
clc
daa
mov
xchg
cs
mov
outsl
or
xchg
pusha
fisttps
mov
dec
push
sub
cs
dec
and
dec
lock
ja
fsubrl
insl
loopne
pop
aad
sbb
and
movsb
gs
dec
sub
or
dec
popf
mov
fidivs
shl
rol
mov
mov
mov
jmp
imul
inc
sbb
hlt
out
xor
mov
in
fwait
dec
mov
stos
mov
addr16
jo
mov
pushf
cmpsl
pop
sub
out
or
pop
shll
sbb
sub
inc
jecxz
push
into
or
push
dec
cmpsl
push
cli
push
pop
mov
sub
lahf
cmp
stos
inc
sbb
mov
push
sahf
inc
hlt
pop
mov
dec
sub
cltd
xor
jbe
and
adc
dec
cmp
leave
dec
dec
dec
sbb
imul
divb
push
push
push
js
jne
loop
cmp
xor
les
jg
add
xor
lret
xchg
xchg
fisttps
sub
jb
fs
test
mov
loop
shl
mov
pop
jmp
and
stos
dec
mov
dec
sbb
daa
sub
in
sub
push
stos
fdivrs
adc
mov
jle
inc
mov
fxch
lret
scas
xchg
cmpsl
adc
cmp
jmp
jno
sti
pop
loopne
push
add
outsl
sub
mov
sti
es
pop
lret
movsl
jl
stc
pop
pop
ss
mov
lahf
out
mov
sahf
lahf
fisubs
xchg
inc
pop
adc
out
test
lret
enter
call
jle
mov
popf
sbb
inc
out
and
rorl
mov
sub
scas
xor
stc
arpl
jl
sti
lret
and
ja
jg
mov
popa
pop
jecxz
in
lock
adc
iret
adc
icebp
mov
scas
inc
ret
loop
jmp
push
push
sub
cltd
inc
scas
les
shr
add
cld
push
xchg
fiaddl
stos
sub
sub
in
cmp
sub
pop
fs
inc
sbb
cmp
mov
pop
in
xor
outsb
xorl
ss
sub
rcl
push
and
js
push
pop
movsl
imul
jae
hlt
jmp
pop
out
fdivr
out
inc
mov
clc
jcxz
xchg
ret
cmp
dec
dec
push
cs
out
adc
sbb
pop
pop
inc
push
xchg
mov
mov
roll
leave
ljmp
addb
gs
fs
cmpb
jg
or
add
jge
mov
cli
pop
aas
mov
inc
sub
sub
ret
push
nop
iret
ret
push
cmp
cmpsb
jecxz
mov
pop
aaa
push
jnp
mov
ja
fidivrl
roll
pop
push
int
cmpsb
inc
push
aam
pushf
mov
xor
scas
mov
xor
and
repz
add
dec
dec
cmpsb
aaa
pop
lcall
bextr
xlat
fiadds
movsb
mov
mov
cli
adc
faddp
mov
xchg
dec
lock
xchg
es
jle
xchg
mov
or
cmpsl
pop
dec
mov
and
push
out
cmp
sahf
push
out
sbb
xchg
sbb
pushf
sbb
movsb
inc
jmp
mov
mov
dec
add
or
cmpb
mov
sub
push
push
stos
lods
push
cmpsb
mov
sub
fistps
pop
or
icebp
cmp
and
lcall
add
rcrb
insl
jmp
cltd
dec
ss
insb
xor
xor
lcall
imul
pushl
stos
cmpsl
or
cwtl
popf
and
jae
mov
sub
and
divps
repz
cmp
fisubrl
loopne
gs
jns
jb
xor
pop
jp
mov
lods
je
cmp
bound
cwtl
push
inc
daa
es
xor
push
test
inc
insl
clc
and
ja
xor
decb
cmp
cli
jp
outsb
adc
addl
hlt
cmp
bound
mov
scas
aam
test
js
stos
out
cvtps2pi
push
push
lret
ja
or
fisubs
mov
ja
inc
std
aaa
xchg
in
out
int
int3
mov
mov
mov
jb
or
xchg
cs
or
jp
addr16
pop
and
dec
sub
pop
addb
sti
js
addl
cmp
sub
push
push
xchg
mov
mov
adc
sbb
dec
hlt
lock
outsl
jno
mov
test
inc
adc
cmpb
das
sahf
cld
jg
mov
ja
add
loopne
xchg
not
ficompl
rorb
div
in
cmpsb
push
movsl
sub
scas
loop
popf
mov
lods
test
pushf
dec
xor
stos
push
mov
movsl
pop
pusha
sbb
mov
in
int
aam
push
shl
shrb
jp
out
fdivr
adc
cmp
jo
lea
adc
jns
mov
inc
xchg
jae
in
cs
test
xchg
cltd
xor
push
mov
and
xchg
aaa
leave
add
outsb
jns
stc
aad
outsl
outsl
int3
fmul
dec
scas
xlat
mov
enter
mov
repz
cmp
cmpsl
or
push
inc
lock
stos
insb
jbe
notb
outsl
dec
sti
mov
shll
shlb
push
mov
cs
cmp
adc
test
xor
mov
xchg
iret
ret
pop
jne
adc
mov
gs
xchg
ds
xchg
or
or
mov
pop
and
sbb
xorb
scas
sub
out
pop
push
xchg
xchg
jnp
arpl
xchg
inc
jp
mov
adc
pushf
push
cmp
rcr
mov
jp
inc
outsb
lods
fisubrl
mov
push
sbb
add
lcall
add
and
jae
movsl
sbb
ja
int
jge
jbe
out
pop
pop
mov
mov
int3
fcmovnu
xchg
dec
scas
inc
inc
adc
dec
outsb
xor
push
push
es
and
in
and
sub
lods
xchg
xor
fmuls
and
push
or
cmpsl
or
cmp
testl
mov
push
in
mov
test
ja
sahf
jmp
jno
loopne
aam
mov
mov
cltd
inc
fwait
jbe
pushf
out
pop
cmp
dec
fidivrl
daa
dec
rcrl
sub
imul
push
xchg
sbb
ror
inc
jns
mov
sub
add
mov
repnz
or
loop
jecxz
nop
and
mov
fdivp
hlt
out
push
cmp
out
imul
xchg
imulb
jle
arpl
push
sysexit
mov
cmp
mov
adc
sub
or
xchg
fs
lods
out
stos
fs
aam
or
sub
mov
cld
xchg
scas
out
ja
mov
jns
dec
adc
cmpb
xchg
cmp
xlat
xor
int3
and
mov
mov
jae
movsb
out
pextrw
pop
mov
loop
pop
stos
shrb
gs
xchg
jg
rcl
fwait
repnz
or
sbb
in
addr16
call
sti
in
nop
adc
adc
popa
adc
inc
sti
in
ret
cmp
fwait
inc
aad
addr16
icebp
xor
fsubl
hlt
adc
mov
mov
jae
xchg
clc
lahf
adc
in
insb
in
jns
movsl
inc
push
cli
loopne
adc
sti
dec
aaa
cmp
jno
dec
jbe
cwtl
push
sub
aam
ljmp
daa
ljmp
icebp
lock
rclb
pop
cmp
sub
test
sub
jmp
out
divl
adc
mov
mov
jo
push
mov
xchg
push
fldl
and
lock
pushf
je
fs
test
add
adc
push
or
fadd
mov
adc
fwait
xor
push
push
mov
jo
inc
xchg
sarb
cmp
clc
fldenv
movb
mov
call
test
js
mov
mov
dec
pushf
stc
outsb
mov
jge
xlat
inc
arpl
daa
rorl
mov
stc
xlat
jno
adc
test
and
jg
sbb
sub
sub
cmp
xchg
aad
cmpsl
cmp
jb
or
out
scas
cmpsl
dec
mov
movsb
push
popa
aaa
cwtl
pushf
fists
xlat
icebp
in
sbbb
mov
sub
or
mov
fs
mov
mov
lock
mov
out
lods
hlt
pop
cld
pop
stos
push
stos
icebp
pop
sbb
fxch
cmpsb
in
je
and
cmpsl
mov
fisubs
sbb
add
mov
xor
lahf
add
dec
adc
std
dec
inc
icebp
dec
mov
out
adc
push
sbb
add
cmp
and
mov
addr16
sub
imul
jle
mov
ds
cmp
pop
out
adc
lcall
in
outsl
mov
jbe
out
loope
ret
ret
or
push
xor
mov
dec
and
fiaddl
jb
int3
mov
fisttps
dec
mov
rclb
test
lods
sbb
int3
lcall
loop
xor
sbb
stc
cmp
or
adc
mov
inc
push
ret
add
int
sub
mov
cmc
popf
loopne
test
xchg
xchg
jge
aam
push
js
jmp
aam
imul
jle
adc
dec
lock
fnsave
bound
xor
jo
mov
inc
aad
popf
nop
aad
pop
push
jb
mov
sub
clc
push
mov
clc
fdivr
mov
dec
std
pop
into
dec
out
jmp
cmc
je
fcmovnbe
pop
lods
movsb
inc
out
xchg
cltd
jmp
sub
jbe
ds
mov
xchg
nop
pop
pop
lret
insb
sbb
pusha
xor
sahf
popf
jnp
scas
bound
stc
cltd
loop
sbb
sbb
adc
ljmp
sub
in
mov
jb
mull
pop
lret
test
jg
addr16
mov
mov
xchg
adc
repz
aaa
scas
xchg
aaa
out
jmp
mov
lret
cmp
cmpsl
ret
fildl
cli
xchg
xchg
arpl
jg
enter
and
call
cltd
or
fsubs
dec
mov
pushf
sahf
sbb
inc
rorb
jae
std
add
scas
int
and
dec
cld
test
mov
fdivl
jns
sbb
popa
add
push
mov
in
sbb
popl
jle
fadd
xor
sub
hlt
mov
inc
xor
rcrb
cmpsb
notb
lods
jp
pop
mov
fnsave
xor
xchg
adc
sbb
in
in
jns
sbb
repz
cmc
pop
incl
out
mov
and
jmp
mov
and
inc
aas
in
sbb
inc
push
addr16
fistpl
cltd
jnp
mov
pop
mov
cmpsl
inc
push
cs
or
pop
inc
cmp
in
xchg
loop
and
mov
mov
rol
sti
cmpsl
cmp
movsb
mov
add
dec
imul
and
adc
cmp
enter
cmp
xor
seto
sub
in
inc
pop
xchg
xor
xchg
scas
in
sbb
or
daa
mov
mov
adc
out
dec
aaa
sub
in
adc
int3
jbe
loope
sahf
shl
mov
sbb
imul
add
nop
xchg
mov
xchg
rcr
inc
aas
loope
pusha
dec
xor
stc
and
sub
push
mov
ret
xchg
das
cmp
daa
xlat
jmp
lds
mov
ds
stos
jae
repz
scas
lret
jno
mov
or
or
daa
cmp
je
ret
push
sahf
cmc
jns
xchg
push
or
ja
fnstsw
call
jbe
or
stos
aam
add
mov
xor
fisubrl
arpl
xorl
and
fiadds
mov
mov
idiv
out
and
addr16
fidivl
mov
in
sbb
in
lret
in
test
sti
psllw
push
and
fistpl
gs
icebp
iret
mov
pop
shlb
in
sub
or
and
and
jmp
or
cwtl
mov
xor
add
movsl
xor
lret
jp
movsl
addb
pop
cmc
pop
enter
xchg
pop
call
fstpl
push
pop
pop
sbb
iret
andl
fmuls
sbb
push
in
inc
mov
je
scas
inc
push
jbe
mov
rcrl
les
or
adc
mov
lahf
xor
pop
sub
xor
out
mov
stos
test
imul
int3
je
out
imul
sbb
jge
test
adc
pop
mov
jnp
mov
sub
mov
adc
lods
mov
xchg
inc
sub
and
dec
scas
sbb
sub
sub
dec
idivb
cmc
inc
stos
xor
jae
mov
pop
xor
popf
push
jno
in
es
scas
roll
mov
xor
les
pop
cli
pop
in
pop
loope
add
sub
cmp
add
xchg
sub
lea
mov
popa
sub
cmp
test
inc
push
cmc
add
and
cmp
jmp
in
sarb
xchg
xlat
stos
in
scas
push
testb
and
sub
dec
jg,pt
push
in
mov
int3
jae
stc
xchg
movsl
fldl
jo
xor
mov
leave
cltd
lret
or
lahf
clc
cmp
out
arpl
pop
dec
sub
gs
imul
cmpsb
mov
jg
xor
movsb
cmp
cli
jb
rcrl
mov
shll
xor
xchg
cld
xchg
addr16
inc
add
push
loop
adc
xor
mov
popf
mov
iret
hlt
insl
sub
mov
dec
push
lea
xor
imul
and
pop
stos
std
lret
ficomps
aad
rcrb
mov
inc
dec
xchg
cmp
xor
out
lock
xlat
push
push
mov
shlb
stc
std
sahf
push
pop
jp
xchg
lret
mov
sbb
pop
sahf
clc
adc
ds
call
push
pop
add
xchg
adc
test
dec
push
out
push
imul
fstpl
mov
mov
mov
iret
addl
sbb
xor
inc
mov
sub
mov
movsl
jno
insb
push
je
out
test
cmp
icebp
ja
shrb
in
lcall
outsb
sbb
fimull
add
and
lret
mov
sbb
pushf
mov
xor
mov
movsb
jns
mov
jno
or
jns
fsubrs
leave
push
and
ret
mov
fstps
inc
mov
mov
xlat
repz
into
icebp
fucompp
call
and
mov
adc
in
insl
aas
cmp
and
out
std
sbb
push
mov
xchg
mov
mov
imul
push
sub
into
mov
xor
rol
mov
daa
mov
jae
push
cs
clc
gs
jne
loopne
mov
sarl
mov
shrb
sbb
cli
and
dec
dec
xchg
xor
dec
aad
lds
out
cmpsl
dec
data16
mov
push
inc
negl
std
dec
pop
fs
pop
scas
jb
xchg
lods
scas
test
xchg
sbb
movsl
inc
fdiv
sub
xor
push
fwait
jns
xchg
mov
dec
iret
jns
cwtl
aaa
mov
and
int
mov
movsb
cmpl
pop
dec
je
mov
pop
cmp
push
pop
mov
mov
pop
jl
sbb
pop
push
es
incb
pop
in
mov
daa
clc
adc
mov
rcrl
lea
popa
or
xor
mov
js
xor
push
lcall
arpl
sti
in
jl
xor
mov
and
in
mov
pop
push
lods
stos
loope
lahf
ja
xor
mov
stos
sti
loopne
sub
push
push
bound
addb
leave
ja
pushf
lret
pop
mov
pop
ret
and
mov
clc
lcall
fstl
cmp
mov
add
adc
decb
in
sub
ret
xor
jg
in
mov
pop
adc
adc
sbb
stc
mov
xor
push
flds
adc
repnz
sbb
pmulhw
fwait
mov
scas
sbb
mov
add
lods
mov
add
sbb
cwtl
mov
out
pop
or
popa
or
leave
fwait
pop
inc
outsb
add
scas
out
out
shr
lret
icebp
iret
cli
cmp
cmc
out
test
test
cmpsl
idivl
xor
sti
out
sub
push
clc
je
ficoml
fsubrs
dec
jae
pop
scas
mov
mov
ss
pop
movsb
fisttps
les
cltd
movsl
xchg
daa
and
xor
sbb
ljmp
mov
xchg
in
sub
addr16
mov
add
imul
movsl
popa
and
or
mov
sbb
enter
cmp
push
cmc
movsb
dec
fcompl
mov
adc
cmp
xor
cmp
xchg
ficompl
je
mov
pop
and
xchg
xchg
pop
sub
fs
js
sub
sub
fadd
jo
push
mov
add
fnsave
sbb
out
bound
mov
inc
add
movsb
aam
leave
mov
shr
dec
mov
insb
insb
out
push
push
jnp
out
jae
push
lds
inc
popf
repz
push
jbe
sbb
ss
mov
lret
popa
ds
jne
push
fisubrs
adc
inc
fnstenv
xchg
sbb
mov
loope
jle
jno
jecxz
daa
xchg
mov
clc
cmp
adc
cmp
push
call
loopne
ljmp
int3
cli
fdivrp
popf
add
movsl
loopne
jecxz
cmpsb
lea
das
pop
adc
fwait
notb
mov
mov
in
jae
je
pop
mov
dec
dec
imul
jmp
adc
jne
push
filds
cmp
mov
jge
mov
sub
in
iret
push
lock
mov
aas
dec
movsl
rolb
adc
aad
mov
jmp
aas
jmp
cmp
mov
or
mov
add
cmp
xchg
pop
mov
adc
stos
aam
out
std
outsl
daa
add
mov
addr16
mov
and
adc
in
je
popf
scas
push
ljmp
sbb
mov
sti
ja
and
or
jns
test
imul
push
mov
mov
pop
into
cld
int3
in
dec
dec
shll
arpl
or
xchg
aad
test
insl
pop
testl
das
cmp
jo
push
pop
test
cmc
test
adcb
mov
add
mov
xchg
orb
push
mov
mov
cwtl
ss
inc
push
mov
mov
and
fisttpl
adc
cs
test
shrb
fisubrl
pop
push
dec
andb
and
xchg
andb
test
jmp
add
int3
dec
subb
aad
add
or
les
rcrb
roll
stos
ja
mov
mov
int
cmpsl
leavew
je
lahf
sub
lock
xchg
mov
scas
rcll
mov
pop
popa
mov
popa
loopne
jns
insb
outsb
xor
inc
mov
lahf
jmp
repnz
dec
mov
add
push
dec
cmp
adc
icebp
dec
jno
mov
cs
sbb
lret
rol
push
pop
cmpb
test
iret
mov
sti
loopne
mov
mov
lret
out
sub
sbb
inc
sbb
jecxz
inc
inc
cmp
push
test
in
inc
repz
jg
jecxz
adc
push
xor
shrl
adc
xlat
inc
inc
ret
lea
les
mov
mov
loopne
mov
js
xchg
sbb
add
nop
add
push
std
sub
fistps
push
xor
mov
xchg
mov
and
loope
out
push
xchg
sbb
pop
adc
repnz
or
jge
and
imul
test
mov
xlat
jnp
or
in
xor
loopne
push
and
fdivrp
push
lea
pop
fcomip
and
pop
add
das
clc
imulb
xchg
mov
in
popf
or
cltd
test
cmp
or
sbb
xchg
hlt
in
stos
test
sbbl
add
loope
sub
jbe
dec
fsubl
std
ds
cmp
fstps
xor
add
aad
pop
iret
pop
mov
inc
mov
sbb
aam
fwait
pop
pop
and
into
mov
fptan
xor
fsubs
dec
and
mov
jl
fmul
xchg
cmpsl
or
push
insb
repz
or
sub
mov
arpl
cmpsl
mov
and
movsl
int3
arpl
mov
inc
inc
sub
outsb
add
test
mov
sub
inc
add
imul
push
pop
push
hlt
bound
push
outsb
dec
mov
jle
ds
nop
jne
hlt
ret
stos
insb
mov
adc
cli
jl
sbb
jnp
xorl
and
mov
push
daa
xchg
mov
in
push
imul
jmp
testb
arpl
or
push
int
in
add
cmc
xchg
xchg
jle
push
and
lods
scas
sub
pop
imul
mov
mov
cmpsl
repnz
scas
jl
sbb
imul
aam
popa
les
call
xchg
mov
cltd
inc
jge
push
add
iret
jge
test
dec
pop
jnp
cs
dec
add
in
sub
lcall
aam
lock
in
pusha
sub
call
ljmp
aad
insl
lret
pop
icebp
mov
push
push
mov
mov
jae
cmpsb
inc
in
fildl
mov
add
loope
adc
or
add
push
jbe
cmp
mov
arpl
rorb
mov
add
pop
outsb
pushf
lea
sub
inc
mov
jo
sbb
inc
or
bound
cmp
push
cmp
cwtl
cpuid
fsubr
mov
shlb
adc
dec
mov
insl
push
jg
jae
fwait
mov
jbe
jo
lret
scas
pop
fucom
jecxz
sub
jno
fsub
cmp
mov
cvtdq2ps
jecxz
orb
jl
inc
aad
mov
stos
std
pop
out
punpckhwd
outsl
or
xchg
dec
pop
and
arpl
mov
pop
fs
out
xchg
and
mov
aas
sub
sbb
pusha
and
aam
icebp
push
or
nop
fwait
inc
lods
lock
mov
ret
outsl
dec
cmp
lds
push
sbb
and
dec
inc
aam
loopne
lret
mov
and
aam
test
ljmp
dec
push
inc
js
cmpsl
into
sub
outsl
inc
popl
push
xor
in
into
popa
cmp
mov
test
mov
test
adc
sti
dec
mov
or
pop
pop
xchg
add
xchg
inc
cmc
aas
enter
adc
inc
sbb
xlat
int3
add
xlat
pop
xlat
stos
jmp
popf
xor
mov
cmc
adc
stc
je
popa
sbb
jb
push
mov
scas
cmp
mov
shlb
xlat
sub
jbe
ss
inc
mov
mov
mov
mov
movsl
fidivrs
cmp
sbb
mov
pop
dec
std
adc
arpl
jnp
xchg
pusha
xchg
xor
xchg
mov
mov
sbb
xchg
adc
pop
mov
xchg
xchg
xchg
in
sub
sbb
jp
pop
mov
dec
and
xchg
jno
add
jo
pop
jbe
mov
jge
fwait
push
pushf
repnz
add
cmp
mov
inc
push
fstpl
mov
push
fnstsw
pusha
fwait
mov
adc
pop
popa
cmp
or
mov
xor
cmpsb
pop
dec
dec
lret
xor
adc
aad
push
cld
lret
pop
adc
shlb
sub
inc
push
lcall
mov
mov
xlat
pop
xor
mov
inc
inc
ret
adc
jecxz
pop
and
inc
jmp
daa
shlb
nop
adc
sbb
sub
lods
sub
cmp
pop
pop
xor
mov
scas
mov
inc
cmpsl
jno
dec
outsl
les
xor
cmp
xor
adc
mov
popf
mov
stc
stc
cli
icebp
mov
stos
popf
int3
shl
push
into
shll
inc
andl
or
leave
mov
pop
cmp
ds
push
mov
sub
push
mov
adc
add
cs
out
dec
jmp
mov
enter
xchg
filds
fists
fisttpll
fdivl
lahf
sub
jmp
ficomps
cmp
or
aad
jp
inc
mov
pop
int3
jge
insb
inc
mov
xor
cmpl
jae
stos
or
ret
and
dec
mov
lret
fbld
jno
cwtl
pushl
dec
push
push
mov
lret
jae
push
int
divl
popf
or
loopne
sub
cwtl
dec
push
mov
popa
int3
icebp
push
xor
outsl
aas
inc
addl
mov
cmc
lods
lcall
sahf
and
jo
dec
mov
data16
push
inc
cmp
leave
adcb
in
mov
or
mov
insb
sbb
aam
hlt
pop
cltd
pusha
push
in
xchg
sub
in
test
adc
cmp
adc
cwtl
jmp
push
test
mov
xchg
inc
cmp
mov
call
in
rolb
jge
fwait
mov
icebp
mov
dec
add
push
movsb
rolb
push
div
or
bound
popa
mov
je
je
jg
loop
or
outsb
insb
jno
dec
mov
xchg
clc
daa
and
icebp
js
mov
jno
scas
jp
int
loop
and
das
inc
cmpsl
cmpsl
add
fwait
add
std
cmp
jne
or
xor
in
xchg
mov
filds
sbbl
cmp
jle
inc
mov
mov
mov
cmp
mov
pop
pop
lsl
into
lahf
xchg
jno
push
jo
mov
pop
stos
dec
mov
jge
mov
jb
das
loop
icebp
xor
inc
popf
mov
mov
decl
and
sbb
invd
lcall
mov
lret
jge
out
leave
adc
outsb
andl
jl
mov
push
and
pop
test
push
xchg
shrl
enter
cld
in
pop
mov
fs
sub
stc
es
fistl
in
out
jl
sti
xor
ljmp
pop
inc
push
push
push
cmp
je
scas
stos
lea
and
inc
movsb
add
insl
clc
neg
aas
lret
mov
mov
dec
pushf
xlat
jae
xlat
mov
out
daa
cmp
add
or
jle
inc
add
outsb
mov
jno
es
sub
arpl
jnp
mov
das
jl
mov
jmp
lock
cmpsb
fucomp
sub
push
push
add
mov
mov
adc
and
adc
or
lods
lahf
fs
arpl
shll
cmp
rolb
les
sbb
hlt
cld
add
lcall
mov
jle
push
popf
orb
or
cmpsl
pusha
add
or
popl
adc
jnp
jmp
sub
rcr
push
in
or
adcl
jmp
int3
mov
out
aad
pop
sub
fimull
cmp
and
mov
popa
sbb
mov
lahf
sarl
push
push
mov
cwtl
popf
xchg
js
cli
in
lock
ljmp
ss
mul
jg
in
jmp
adc
lods
sub
or
inc
sahf
and
in
push
cmpl
jp
push
test
push
adc
push
cmpb
adc
aad
int3
mov
shlb
or
test
jecxz
cmp
push
int
aad
movsl
sub
xchg
movsb
movsb
sub
sbbl
jp
mov
sub
sub
push
sub
mov
movlps
dec
inc
sbb
cmp
dec
leave
mov
jns
pop
add
jle
test
mov
mul
mov
xchg
sahf
repz
cli
lret
ret
clc
mov
in
xchg
aaa
pop
insl
dec
rorb
add
sbb
insl
nop
push
loope
mov
add
lods
adc
std
pop
std
aam
pop
es
cwtl
jae
xchg
imul
inc
cwtl
mov
jle
in
fmull
and
filds
mov
imul
movsl
pop
loopne
inc
mov
dec
inc
or
rcrl
and
mov
pop
in
mov
sub
fdivp
cmpxchg
dec
push
cmpsb
not
dec
out
xorb
movsb
repnz
in
sub
mov
arpl
mov
mov
jp
mov
push
lea
fistl
mov
xchg
outsb
fwait
jle
pop
icebp
ffreep
std
out
jno
fisubs
jp
out
aam
jns
leave
pop
std
sarl
xchg
dec
repz
out
stos
add
cmp
loopne
insb
pusha
js
sarb
sub
jle
dec
leave
mov
std
clc
adc
not
pop
sub
jmp
insl
popa
outsb
mov
xlat
mov
inc
jmp
call
outsb
pusha
ret
int3
cmc
loop
iret
pushf
out
and
xchg
pop
out
shrl
sub
movsb
gs
jb
inc
sub
adcb
sub
aam
jecxz
aam
nop
jge
ret
scas
test
xor
das
cs
push
jg
push
xor
add
push
mov
pop
mov
inc
movsl
lret
xchg
lods
and
jnp
add
cld
jp
rorb
sahf
popa
push
mov
cli
dec
cmp
xchg
ja
push
pushf
lock
imul
mov
cmp
shll
mov
mov
inc
loopne
xor
xchg
call
leave
adc
mov
mov
out
push
add
jns
add
fs
or
call
dec
push
add
lods
mov
and
jo
popl
sbb
add
enter
hlt
notl
push
shlb
movsl
adc
cmp
mov
les
je
repz
pop
inc
push
or
arpl
inc
cmp
ss
inc
xchg
outsl
xchg
ret
mov
and
xchg
loope
outsb
faddl
sbb
adc
shll
and
mov
mov
stc
pop
pop
js
arpl
outsb
jno
sbb
jecxz
loope
cltd
cmpsl
repz
cmpl
push
icebp
das
sbb
pop
in
xchg
stos
popl
cmp
iret
mov
adc
sahf
iret
arpl
or
mov
in
in
sbb
out
shlb
aaa
xor
sbb
add
inc
dec
add
mov
pop
lods
sub
outsl
add
xchg
in
push
out
scas
ret
add
dec
inc
cmpsb
jb
sbbb
cmp
stos
pop
insl
ret
jl
int3
ret
loopne
dec
out
dec
sbb
ret
or
out
arpl
adc
push
ret
testb
pop
add
mov
scas
sbb
fstps
sub
fxch
faddl
inc
leave
mov
jns
cmc
pushf
in
fdivs
inc
sub
jmp
pop
fwait
lea
subb
adc
mov
mov
add
out
adc
ss
and
xchg
add
xchg
xor
cmp
xchg
sahf
jb
addr16
jp
xor
filds
adc
lret
adc
popf
loope
xchg
ja
cmpsb
add
push
ja
out
fcmovu
aad
and
pop
xchg
dec
mov
inc
fwait
xchg
cltd
inc
out
push
movsl
fmuls
mov
jae
leave
inc
pop
push
out
push
jbe
xchg
push
test
call
cmc
lock
lock
mov
popf
add
lock
xchg
push
sub
xor
out
mov
push
xor
lods
cmp
in
mov
dec
inc
mov
into
dec
sub
loope
test
mov
jbe
pusha
jl
mov
xor
bswap
les
sbb
adc
inc
push
in
pop
mov
add
push
jne
lods
mov
insl
shr
push
out
jae
js
pop
sbb
xor
pusha
fcmovnu
scas
cld
jecxz
cs
jo
inc
xlat
push
fimuls
mov
arpl
push
sbb
mov
test
inc
and
cltd
jl
or
ror
push
popa
es
roll
jb
bound
lods
mov
rorb
adc
xchg
sub
test
sub
sub
push
adc
adc
nop
stos
scas
cli
stc
dec
out
mov
rcrl
sbb
add
dec
loope
cmp
push
cmpsb
and
nop
inc
std
xchg
dec
insb
movl
ror
shl
aas
dec
inc
sub
push
add
add
jb
cmp
enter
sbb
adc
jno
push
adcb
int3
jge
aas
push
pop
aam
out
xor
in
pop
cs
stos
hlt
push
jl
jmp
xchg
in
das
pop
dec
or
stos
test
mov
and
scas
mov
or
xchg
aad
insl
dec
lods
or
jle
cmp
hlt
inc
lock
pop
push
cli
ja
adc
xchg
sahf
arpl
mov
mov
sbb
mov
push
and
out
add
scas
inc
mov
pushf
xor
jg
xor
pop
insb
pop
lea
xor
addr16
xchg
or
xchg
out
ret
mov
adc
mov
stc
push
mov
adc
enter
jg
adc
mov
add
jbe
icebp
stos
dec
cmp
js
push
mov
sahf
ds
andb
mov
inc
xchg
jle
sbb
out
xor
ss
jae
cmp
rcrl
test
dec
dec
mov
adc
popa
aad
ficoms
int3
pop
add
mov
cltd
subb
jns
dec
sbb
jle
adc
dec
test
popf
addb
stos
jbe
orl
push
cwtl
lods
dec
lret
xchg
jae
cmp
add
in
cli
mov
pop
aad
scas
xchg
inc
jns
inc
xor
xchg
pop
xor
lret
mov
aad
or
mov
insl
add
mov
adc
dec
out
mov
mov
repnz
push
ss
mov
dec
push
mov
and
icebp
dec
sbb
gs
jmp
xor
mov
mov
add
sbb
je
sbb
push
pop
mov
xchg
mov
lods
mov
insb
dec
ss
fsubp
fdivs
daa
data16
jle
mov
bound
cmc
imul
daa
mov
mov
push
arpl
xlat
and
jo
sbb
gs
lods
lret
fstl
mov
rclb
adc
push
test
mov
mov
xor
lret
jns
push
gs
add
popf
sbb
mov
fadds
cmpsb
xor
push
dec
xor
jns
sti
inc
sbb
call
or
push
fst
cmp
hlt
out
sbb
add
adc
mov
fldt
mov
push
in
mov
adc
ja
mov
pusha
jmp
adc
inc
ljmp
cmpsl
xchg
out
jle
mov
out
xor
mov
xor
bound
sahf
push
imul
inc
adc
out
mov
jb
dec
sbb
cld
push
jl
mov
fcmovu
outsb
imul
popa
loop
loope
adc
jmp
out
fcmovnu
mov
jb
test
outsl
repnz
adc
mov
add
daa
xor
aas
lahf
jb
scas
xchg
pusha
aad
xor
xchg
jmp
xchg
ficompl
repz
adc
pop
scas
lock
loopne
nop
xor
push
inc
test
andl
mov
fs
in
test
mov
jmp
leave
insl
push
sbb
das
cli
xchg
jns
jbe
pop
test
fisubs
loope
dec
adc
setno
out
idivb
scas
adc
call
arpl
fsubs
decb
fldpi
xor
sbb
in
stos
mov
lea
add
test
stos
cs
insb
pushf
dec
xor
mov
popf
or
nop
xchg
sub
popa
mov
lods
hlt
ljmp
out
inc
in
in
inc
ljmp
xlat
xchg
arpl
and
addr16
cmp
mov
push
scas
mov
negl
pop
gs
sub
mov
das
pop
std
or
jg
ljmp
sbb
and
outsb
rol
in
pushf
shll
adc
mov
xchg
push
shl
adc
rorb
or
sbb
insl
out
jle
movsb
sub
movsb
out
dec
mov
cmp
enter
cli
mov
sti
pop
sub
add
inc
xchg
lahf
repz
imul
loope
pusha
sub
pop
add
mov
loop
and
test
add
dec
sub
xor
jle
xor
xlat
mov
addb
jmp
add
adc
xor
fwait
xor
pop
adc
or
out
fadds
sbb
into
fiadds
test
sub
lret
fwait
je
jp
jae
into
push
icebp
mov
inc
push
jns
or
push
inc
mov
sbb
inc
xor
xor
stos
jae
dec
xlat
cmp
pop
push
sub
ds
jle
jge
loopne
jbe,pt
mov
nop
jno
cmp
dec
add
mulb
or
sahf
movsb
movsb
dec
or
test
sub
js
bound
inc
shrl
mov
jmp
cs
mov
js
cmp
psadbw
adc
adc
xchg
imul
push
mov
xchg
aas
insl
pusha
bound
loope
cld
push
sahf
mov
mov
int
std
test
push
adc
adc
dec
mov
in
aas
aaa
or
push
loopne
outsl
sti
in
outsb
insl
test
mov
mov
jnp
icebp
push
cmp
fwait
inc
sbb
push
lret
cmpsb
out
xor
lds
repnz
or
mov
push
mov
imul
popa
jae
std
pop
out
mov
cltd
data16
orb
cmc
pop
rcll
add
adc
inc
frstor
movsl
xchg
iret
xchg
mov
test
sbb
mov
movaps
mov
add
sahf
subl
jne
pop
gs
test
out
pop
jmp
and
mov
jo
lds
xor
fdivs
jns
mov
hlt
jnp
scas
in
rcr
rclb
pusha
pop
inc
scas
jb
push
adc
adc
push
ja
and
faddl
jnp
sbbb
fisttps
jne
into
loopne
insb
andb
lds
sti
movsl
jno
and
add
inc
xbegin
cmc
mov
mov
jnp
test
scas
adcl
xor
flds
cmc
jecxz
cmp
jle,pn
or
pop
and
mov
mov
cmp
lods
pop
das
mov
or
sbb
stos
dec
dec
adcl
adc
inc
iret
int
jge
test
dec
pusha
inc
aam
mov
stc
jns
cwtl
cs
mov
cmpsb
mov
imul
mov
xor
lret
mov
mov
dec
lahf
or
pushf
dec
roll
mov
cmc
call
out
ret
addb
jmp
xchg
fidivs
jge
inc
mov
xor
adc
icebp
xchg
cmc
inc
and
xchg
cld
dec
or
pusha
cmp
das
insb
iret
cwtl
enter
lcall
inc
jnp
ja
rolb
xchg
insb
repz
push
shrb
pop
outsl
mov
lds
sahf
mov
mov
xor
sbb
and
mov
cs
aad
adc
jg
jmp
mov
outsb
movsl
fcmove
in
jmp
ficompl
jnp
cmp
mov
hlt
xlat
mov
add
pop
mov
std
in
test
scas
js
imul
enter
aam
fldenv
push
pop
mov
or
repnz
mov
or
mov
mov
mov
inc
fidivl
mov
push
lods
into
lea
xchg
pop
pop
and
lahf
pop
lods
call
xor
rcrb
and
pop
push
sub
cmp
sub
nop
add
inc
mov
dec
adc
xor
in
dec
popa
pushf
lods
ret
xchg
out
xchg
orb
pop
adc
out
cmp
inc
add
inc
jb
xlat
inc
out
nop
adc
ss
scas
xlat
lds
in
mov
sbb
mov
xor
add
insl
push
cs
fwait
sti
fwait
out
lcall
or
push
xchg
inc
int3
sbbl
lods
add
in
loopne
sub
test
dec
mov
imul
jle
ret
data16
mov
sbbb
adc
and
adc
mov
or
cld
lret
xchg
inc
jns
xchg
mov
push
mov
fnstcw
sahf
cmp
ret
jne
inc
sub
pop
and
mov
dec
pop
mov
mov
rclb
cltd
sub
and
mov
ret
mov
push
sub
loopne
add
ss
lret
sbb
stc
push
sub
adc
ret
repz
repz
imul
sbb
cmp
add
cwtl
jbe
in
inc
pushl
arpl
ret
loop
and
scas
push
mov
testl
jo
aaa
xchg
and
xor
insl
out
lret
fsub
jne
scas
push
lock
repnz
adc
in
movsl
push
sub
cmp
idivl
push
es
mov
mov
mov
and
ficoms
out
mov
data16
mov
or
repz
mov
ror
clc
out
adc
fisttps
jmp
mov
and
cmpsl
lcall
mov
cmp
sbb
addr16
fs
inc
daa
push
stc
xor
std
aad
jo
dec
lahf
icebp
cli
inc
fidivrs
adc
in
movsl
push
movl
nop
mov
pop
mov
sti
lahf
pop
sbb
sbb
cmp
xor
push
andb
mov
jns
sub
repnz
xchg
imul
sbb
xchg
and
jg
mov
and
cwtl
rcl
shlb
xchg
push
mov
xor
ds
stos
stc
loopne
xchg
jecxz
jno
js
rorw
fwait
insl
jns
adc
cs
test
fbstp
pop
adc
ja
push
ljmp
xor
js
add
insb
push
dec
stc
sbb
cld
mov
mov
idivl
fnstcw
sahf
outsl
dec
test
mov
shll
lahf
call
add
mov
xor
rcl
inc
in
mov
or
cmpsl
sti
mov
mov
or
popf
or
push
mov
push
dec
pop
mov
shll
sub
subb
cld
xor
mov
gs
sbb
int
outsl
jnp
ret
js
int3
out
dec
mov
cmp
xchg
andb
and
aaa
incb
dec
rclb
xor
stos
add
pop
inc
xor
or
stos
xchg
pop
loopne
sti
sub
mov
sbb
inc
or
add
cmp
xor
inc
jge
dec
aam
or
cmpl
js
mov
call
mov
addr16
dec
into
lret
push
idivb
or
push
add
ds
xor
adcl
pop
sbb
dec
push
sub
sbb
mov
js
xor
rcll
movsl
scas
call
mov
rcrb
cmc
rcrl
lds
insl
les
stc
mov
push
sub
add
test
inc
ret
cwtl
inc
in
xchg
loopne
outsb
push
and
dec
mul
cmp
test
pop
mov
inc
stos
test
fcompl
xor
addl
into
jmp
insl
out
ret
lods
add
sub
and
nop
aaa
jbe
js
add
movsb
sbb
js
sub
mov
mov
test
sub
pushf
xchg
iret
xor
jb
sub
clc
fdivs
pop
mov
xchg
jle
lret
stos
sub
scas
fbstp
lret
ljmp
lahf
sti
add
aad
xchg
push
xchg
inc
mov
adc
sbb
imul
cmp
sbb
cmp
fbld
outsl
xor
add
cmp
sbb
dec
fidivrl
push
rcrl
ds
jno
inc
out
es
leave
or
insb
test
or
aad
or
les
adc
rclb
test
or
push
lds
fisubrl
mov
mov
mov
mov
imul
xrelease
pop
push
rcrl
addr16
push
sbb
inc
add
push
push
mov
inc
test
jne
cs
mov
test
or
addr16
insb
dec
daa
and
rolb
sbb
dec
cmp
xor
and
testl
ja
lock
push
adc
repnz
pop
jl
sbb
or
je
mov
adc
popa
fsubs
fwait
and
or
push
out
adc
pop
rcrl
loope
lds
sbb
in
lods
loope
mov
push
cmp
cmpsl
or
dec
xchg
in
cmpb
mov
arpl
add
xlat
test
xchg
jns
sub
xor
dec
pop
lcall
ja
mov
inc
out
xor
das
cmp
jb
ds
scas
mov
repz
jp
pop
jl
test
dec
mov
adc
imul
jecxz
and
and
mov
movsl
pop
adc
test
sbb
jno
cltd
push
and
popf
mov
dec
in
or
or
lock
test
sbb
xchg
push
mov
in
inc
push
or
outsb
jno
fdivrl
adc
lea
add
sub
stc
xchg
fnstsw
das
cmp
add
jnp
in
lret
add
ja
cmp
xchg
lahf
fs
imul
pop
push
jno
inc
inc
outsl
or
popf
data16
lret
adc
xchg
inc
sub
mov
pop
cmp
jecxz
xchg
gs
scas
out
add
mov
pop
mov
add
hlt
iret
mov
faddl
dec
imull
adc
pop
jg
mov
scas
jle
cmp
xor
ret
jmp
insl
jge
add
lds
cmp
sub
fcoml
push
inc
add
mov
dec
adc
test
cmp
adc
fsubrl
fcomp
popf
add
loopne
dec
repnz
scas
pop
pop
add
stc
dec
push
add
cli
cld
push
fucomip
add
mov
test
test
sub
sbb
push
sbb
lret
pop
mov
sbb
jns
cmpsb
xor
and
fadds
lret
cwtl
push
std
ret
pop
and
or
orb
cs
in
cli
lds
pop
mov
fwait
mov
mull
push
sbb
push
shll
lods
xchg
jecxz
inc
dec
arpl
adc
enter
adc
mov
ja
xor
push
and
xchg
mov
icebp
cmp
enter
inc
movsb
push
in
dec
pop
mov
add
les
jl
mov
cmp
sbb
push
mov
xchg
mov
pusha
cmp
mov
lds
or
dec
cmp
dec
push
movsb
sbb
arpl
pop
push
nop
hlt
sti
cmp
mov
imul
call
push
out
pop
xchg
inc
add
add
add
shll
push
cltd
jnp
inc
mov
push
sti
or
pop
cmc
cmc
call
popw
aam
cs
dec
add
sbb
ds
aas
aaa
mov
popf
or
pop
bt
adc
fcoms
cs
je
divl
ret
add
pop
movsb
jg
adc
dec
or
out
xor
lret
cmp
in
sahf
pushf
inc
inc
shlb
mov
stc
push
adc
std
jecxz
adc
mov
aas
jl
and
sbb
fisttpll
push
inc
ret
xchg
sbb
mov
ja
push
mov
rclb
mov
pop
out
arpl
insb
lret
pop
scas
mull
jmp
fistl
insb
popa
or
push
sub
jne
xchg
and
push
pop
mov
mov
psubusw
jns
inc
xor
dec
movsb
rcrl
sbb
in
jbe
xchg
outsl
sub
lock
mov
sarl
xchg
xor
inc
divl
mov
lret
sarb
xchg
iret
xor
pop
dec
or
jg
enter
les
lods
arpl
add
xchg
fwait
xchg
insl
dec
xor
mov
sbb
cmp
add
js
sbb
fcomps
mov
lret
jl
mov
mov
mov
pushf
leave
mov
cld
lock
fpatan
pusha
jge
pop
inc
jne
cmpsl
mov
loope
lods
lea
sbb
mov
pusha
fildl
popf
xchg
cmpsb
rcr
mov
mov
stos
in
sub
rol
pop
jecxz
lock
push
shrb
sub
lahf
push
outsb
sti
mov
sbb
insb
push
mov
iret
repz
push
loope
stos
icebp
jne
mov
int3
mov
pop
inc
testb
add
lret
fdivl
in
jmp
xor
dec
pop
ss
mov
add
in
pop
cli
mov
mov
pmulhw
jle
lods
scas
jl
add
cmp
adcl
xchg
jbe
pop
imul
lds
fimuls
sbb
xor
rcrb
enter
push
test
cs
cmc
jb
outsb
out
mov
testl
data16
pop
xchg
adc
insb
mov
or
xchg
xlat
dec
test
call
cld
or
int
jmp
loope
add
mov
or
cmpsb
mov
jne
dec
adc
xchg
mov
out
lods
call
xchg
mov
insb
rolb
xchg
mov
xorl
mov
test
jmp
jae
cs
lahf
les
push
cli
in
dec
adcl
fisttpl
cli
data16
adc
pop
jb
repz
rorb
decl
push
push
aaa
popl
or
mov
fs
inc
mov
jae
add
movsb
push
dec
lret
pushf
clc
sahf
das
loopne
sbb
les
shlb
or
ds
pop
insl
mov
insb
xchg
add
or
push
addb
push
sarl
jne
pop
scas
es
xor
jns
leave
aad
fldenv
ja
jno
sbb
mov
mov
adc
shll
cltd
ja
inc
dec
mov
leave
or
lcall
inc
lcall
mov
ja
ficoms
jne
sbb
jmp
sbb
pop
dec
and
adc
test
popl
dec
and
push
inc
dec
mov
mov
and
push
stc
shrl
mov
and
lret
lock
hlt
mov
outsl
xor
ret
xor
mov
sbb
lret
jmp
jecxz
xchg
mov
add
gs
dec
jns
stc
decl
pop
sti
cli
popf
dec
rorl
pop
cs
jl
and
push
jle
mov
dec
sahf
das
jno
cli
pusha
or
pop
and
insb
jno
das
insb
dec
or
jne
jae
arpl
add
push
repz
inc
aaa
orl
mov
mov
into
xor
dec
lcall
mov
push
fimull
aam
sub
testl
cmp
cmp
jge
mov
sbb
les
adc
lret
inc
out
mov
fs
popa
lea
mov
or
sbb
stc
insb
mov
inc
out
int
or
inc
or
push
mov
mull
inc
rcr
mov
imul
repnz
sbb
dec
xchg
jmp
add
push
adc
mov
jle
xchg
jb
mov
rcll
jne
mov
clc
cmp
sub
and
xor
cmp
mov
pop
xor
stc
jbe
ljmp
push
mov
xor
xchg
jae
jle
xchg
push
mov
loop
dec
xchg
data16
sbb
mov
or
jnp
cmp
jle
adc
pop
xlat
sub
cmpsl
sub
and
push
and
and
xchg
mov
mov
sahf
mov
nop
inc
test
cmpsb
in
mov
out
mov
xor
dec
sbb
xchg
gs
jb
cmp
pop
pop
neg
call
xchg
lock
or
mov
scas
icebp
cmpsl
lret
adc
adc
and
push
inc
hlt
daa
imul
or
or
rolb
out
xor
adc
add
or
push
xor
sbb
pushf
mov
pop
je
test
loopne
jae
out
jb
orl
inc
xor
mov
mov
push
or
push
dec
scas
push
sub
cmpsl
aam
inc
rcl
pop
movsl
inc
xor
pop
pusha
sub
cmp
cmp
cmp
jg
pop
lds
jecxz
dec
aam
test
inc
mov
movnti
popf
and
shl
aam
loopne
lods
stos
and
and
or
repnz
loopne
pop
xor
std
ficomps
prefetch
fcoms
rclb
lods
cwtl
and
jb
mov
dec
lea
cmc
xchg
and
idivl
ret
mov
inc
popf
push
cmp
xchg
in
mov
dec
std
popa
mov
pop
mov
rcr
cmc
shlb
out
ds
sub
inc
sahf
and
mov
mov
sbb
push
add
out
cld
fldl
pop
shl
divb
cld
mov
jge
xchg
xchg
ja
cmp
xchg
jmp
fstpt
or
lods
stos
inc
add
and
mov
or
pop
cmp
adc
stos
add
cwtl
pop
cli
fadd
daa
inc
cltd
out
shrl
aad
fsubs
lock
pop
xor
leave
mov
mov
push
in
loop
cmp
and
aaa
sbb
rorb
or
jle
negl
push
std
movsb
cmp
rcrl
leave
enter
popa
xor
hlt
or
das
lods
add
lret
lea
lds
je
pop
cmc
sbb
sahf
loop
mov
in
and
jge
xor
out
sub
mov
fs
jae
jnp
xor
insb
test
jmp
shl
ret
lcall
imul
inc
popa
cld
cmp
push
shll
cs
bound
pop
cs
jns
xchg
cltd
adc
fadds
sbb
repz
call
int
push
push
int
add
enter
and
push
cli
mov
sub
enter
addl
test
clc
push
ljmp
and
add
repz
shlb
repz
mov
imul
mov
sti
insl
das
mov
mov
jns
sbb
stos
jb
push
pop
rcll
adc
nop/reserved
inc
add
roll
pop
dec
mov
sub
movl
outsb
pop
mov
push
or
mov
test
xchg
cmpsb
mov
adc
mov
lods
xchg
lds
inc
jmp
jp
xchg
inc
xchg
rcll
cmpsl
lods
shl
lret
dec
mov
mov
jbe
loope
sbbl
leave
popf
xor
pop
int3
fiadds
and
in
enter
jle
mov
jl
cmp
push
cmp
jns
inc
add
push
dec
xchg
fstp
icebp
imul
mov
inc
lds
out
inc
scas
cmp
clc
sub
mov
mov
ja
subl
ds
sub
sbb
shrl
xlat
in
mov
int
int3
mov
aaa
stos
sub
imul
mov
push
push
and
dec
inc
xor
ds
mov
inc
cmpsb
add
inc
xor
mov
xchg
scas
jmp
addr16
jb
arpl
xchg
repnz
add
mov
jmp
mov
mov
fsubs
outsl
jecxz
mov
add
xor
jno
adc
add
stos
call
pop
iret
and
fsubrs
scas
movsl
cmp
ret
das
cmp
pop
xlat
testb
call
ficompl
ljmp
idivl
lea
add
dec
pop
jae
sub
mov
mov
repnz
aaa
clc
int
decb
mov
and
popf
jge
pushf
loop
shlb
pusha
xor
fbstp
loop
ljmp
add
mov
pop
out
xor
insl
lcall
sub
pushf
das
xchg
add
cmc
orl
xor
jne
cmpsb
ret
jno
add
inc
cmp
xchg
add
sub
fidivs
xchg
sub
in
enter
pop
loopne
cwtl
jg
push
leave
int3
scas
push
cld
movsb
mov
mov
jg
mov
std
jne
xchg
popf
inc
add
dec
add
add
xor
andl
cmp
mov
inc
jle
in
arpl
cld
call
daa
loop
cmp
aas
icebp
enter
loope
aaa
adc
neg
dec
bnd
movb
push
jecxz
xchg
xchg
stos
ss
popa
dec
fyl2x
ficoml
and
ss
in
out
mov
es
push
or
sbb
movsb
aam
js
ret
movsl
jle
inc
adc
and
and
movsl
repnz
inc
pop
pop
daa
stc
adc
ffreep
sbb
pop
pop
mov
pop
and
mov
inc
das
xchg
cmp
sti
out
mov
std
mov
adc
scas
mov
imul
cltd
cmpb
lods
and
dec
outsl
jbe
das
mov
loop
dec
mov
repnz
jo
mov
rcrb
jno
faddl
lock
cmp
dec
and
leave
mov
sub
mov
add
repnz
fsubrs
sti
out
dec
push
pop
xchg
pop
lds
cmp
fnstsw
shl
out
mov
daa
pusha
jbe
jae
jae
rorl
xchg
xor
mov
jae
test
repz
jmp
push
ds
jle
lahf
mov
xchg
aad
loope
inc
xor
mov
lock
fs
and
frstor
and
push
outsb
pop
int3
shrl
rclb
loop
jl
pop
lods
ret
push
add
xor
and
mov
add
sbb
sub
add
es
jbe
js
subl
push
ds
adc
sub
xchg
sahf
pop
pop
repz
jnp
pop
out
xchg
repnz
cmc
jo
mov
int
or
fisubrs
ja
int3
inc
std
fisubrl
sub
jp
xchg
rol
out
xlat
out
push
or
mov
subb
mov
movsl
loopne
push
lock
lods
repz
lea
sub
or
ret
mov
dec
mov
cmp
jnp
faddl
shrl
gs
dec
adc
jno
push
mov
insb
cltd
inc
mov
in
jecxz
xlat
xor
mov
cmp
xor
xchg
in
xchg
sub
fs
cmpsl
jns
dec
and
cmpsl
xchg
push
xchg
mov
inc
rolb
daa
or
stc
xchg
jns
lock
push
or
xchg
jp
pop
ret
sub
xor
mov
mov
mov
xchg
in
mov
push
nop
cli
je
cmp
out
xor
jg
sub
xor
mov
mov
ret
mov
adc
ror
orl
and
mov
fbstp
sub
hlt
jge
out
or
add
cmpsb
icebp
fwait
xor
scas
mov
sbb
push
mov
mov
xchg
push
scas
push
repz
dec
ficoms
fs
lmsw
jmp
adc
push
mov
js
mov
cli
xor
push
jmp
mov
data16
shrl
andb
or
loopne
inc
sub
dec
mov
ljmp
test
jmp
mov
repnz
out
mov
in
into
mov
push
bound
pop
mov
jp,pt
sbb
sbb
sub
negl
movsb
mov
dec
cmc
inc
movsb
loopne
cmc
arpl
fsub
adcb
loopne
mov
dec
aad
lea
dec
pop
aad
gs
jecxz
cmp
movsl
adc
mov
inc
inc
xor
sub
jno
xlat
adc
ljmp
add
pop
pop
push
adcb
bound
loopne
cwtl
adc
fs
mov
adc
cmc
mov
daa
test
dec
aad
fwait
movl
mov
lods
icebp
sub
das
stos
movb
add
mov
xchg
cmpsl
mov
lea
nop
dec
mov
jnp
adc
outsl
insl
pushf
or
xchg
cltd
loop
jae
stos
jae
fldcw
lds
fmul
insl
cwtl
or
sbb
data16
xchg
shll
inc
out
scas
leave
ret
shrb
mov
lock
fcmovne
push
xchg
repz
fldl
in
or
lock
repnz
mov
fstl
dec
in
cmp
cmc
filds
cs
sbb
inc
pop
sbb
stos
scas
mov
insl
jns
pop
insl
testl
pusha
xchg
and
movhpd
jmp
fbstp
sbb
cwtl
stos
dec
fcompl
adc
jg
sbb
add
int3
mov
js
push
ds
lods
or
lcall
cmpsl
sbb
sbb
out
dec
push
lret
vpcmpeqb
clc
stos
mov
inc
xchg
movsb
sub
mov
repz
xor
adc
adcb
and
jns
push
push
sub
xor
movsl
push
or
cmp
xchg
jmp
inc
jno
imul
inc
inc
ret
gs
aaa
lahf
lret
jns
je
loope
adc
into
xor
jmp
leave
outsb
push
dec
or
xor
paddb
jns
mov
outsb
inc
sti
sti
cmpsl
mov
mov
push
leave
push
cmc
imulb
cs
xor
mov
xchg
jo
cli
pusha
in
int3
push
adc
mov
imul
lret
pop
leave
pop
pop
dec
fdivl
inc
in
pop
cwtl
pusha
repz
pop
outsb
inc
sub
sub
cmp
test
xor
movsl
dec
push
pop
cwtl
dec
mov
push
clc
in
push
enter
sbb
hlt
filds
movsl
adc
jecxz
inc
or
push
pop
repz
cmpsl
push
push
inc
mov
gs
lcall
cmp
push
jns
or
mov
int3
in
fstpt
fldenv
cmp
xor
dec
jae
stc
adc
fcmovnu
ficompl
jp
stc
pop
test
inc
leave
es
imul
xchg
xor
sub
lods
hlt
cmp
jmp
out
and
jmp
pop
mov
sarb
or
and
add
movsl
mull
dec
push
pop
dec
ret
out
sub
and
jne
add
pop
insb
shrb
daa
mov
push
adc
loop
mov
in
xor
xchg
sub
shr
or
mov
adc
pop
mov
xor
xchg
test
addr16
cmp
outsl
aam
add
and
pop
cld
hlt
iret
mov
cwtl
xchg
xchg
or
jmp
pop
sbb
adc
adc
mov
data16
test
pop
lods
aad
mov
cmpb
and
fisubl
inc
or
shr
aas
cwtl
jnp
subb
cmc
pop
add
ror
push
imul
test
ret
ret
fs
xor
fbld
xchg
std
inc
pop
adc
inc
movsb
sub
or
aaa
add
mov
aad
cmp
and
aas
pop
stos
in
addr16
lcall
mov
sbb
outsb
xor
rorb
dec
ret
scas
mov
mov
ret
movsb
mov
sti
and
cmp
lahf
mov
outsb
in
loope
in
sub
out
shrb
pushf
stc
inc
and
aam
scas
inc
movb
mov
movsb
enter
jl
adc
or
and
aas
ja
mov
mov
jle
fistpll
movsl
sub
je
xchg
add
sti
stos
xchg
mov
and
jp
dec
xchg
inc
adc
inc
in
or
xchg
mov
add
pop
insb
arpl
mov
stc
repnz
ljmp
test
cld
lret
and
sbb
in
das
dec
xchg
adc
add
add
popf
lea
stc
push
leave
cli
adc
push
xor
mov
popf
fs
push
cmp
jecxz
lods
and
mov
mov
pushf
dec
adc
clc
sbb
sbb
rorl
pop
loopne
mov
aad
cmp
inc
loop
xor
dec
cmp
leave
divb
test
data16
pop
stc
dec
mov
sbb
cmp
cmp
ret
xchg
enter
mov
inc
mov
les
lods
pop
scas
cltd
cmp
loop
pop
xor
xchg
cmc
pusha
icebp
addr16
inc
out
mov
test
cmp
inc
mov
inc
test
xchg
push
sub
push
cs
jmp
je
jno
daa
and
int3
aaa
add
mov
pop
dec
insl
frstor
adc
popa
sub
ret
pop
repz
inc
mov
mov
addr16
sub
push
gs
add
ret
lcall
mov
mov
roll
dec
cmp
pop
ljmp
cltd
addr16
fwait
inc
jne
aad
jecxz
int
sub
std
stos
lea
ret
lods
jp
dec
sub
popa
lahf
push
dec
addl
insl
inc
and
jne
rcrl
dec
aam
pop
fcomps
mov
and
outsl
rcrl
mov
aaa
add
rorl
push
shlb
cmpsl
sbb
clc
shlb
pusha
xchg
loopne
adc
test
addr16
loop
mov
movsb
sbb
push
pusha
sbb
cmp
cli
and
lock
scas
leave
mov
sub
arpl
pop
dec
push
inc
dec
arpl
aaa
ret
cmpsl
outsl
lahf
inc
cs
push
xchg
xor
push
inc
or
test
sbb
aaa
fstpt
mov
cwtl
pop
mov
aaa
push
pinsrw
lea
lea
adc
lds
out
and
cmp
jecxz
mov
jl
mov
inc
adc
sub
orb
nop
mov
popf
mov
push
mov
mov
in
addl
inc
pop
cmpb
push
lods
xor
divb
jae
fwait
out
add
insl
add
and
inc
test
jmp
add
es
out
or
mov
mov
cmp
cwtl
cmp
jo
cmpsb
adcb
sub
test
inc
adc
lods
dec
lea
lret
pop
add
repnz
adc
mov
jg
fcmove
stc
aad
adc
lcall
pop
xchg
inc
jmp
or
jge
sub
jge
outsl
movsl
leave
adcb
std
inc
stc
iret
adc
std
add
xor
scas
jp
stos
dec
mov
add
push
aas
cmp
inc
int
aam
mov
loop
jno
add
mov
pop
lret
pop
xchg
cmpsb
cmpsl
outsb
xchg
inc
stc
inc
test
test
mov
inc
mov
mov
mov
aam
daa
jg
rorl
lcall
and
shr
inc
je
add
stos
dec
insb
sbb
fisubs
aam
xchg
rcrb
nop
lock
mov
add
repnz
sub
push
dec
addr16
add
mov
mov
mull
cmp
arpl
filds
pop
fbld
and
mov
mov
std
jne
ljmp
fildll
dec
jne
js
or
outsb
dec
xchg
dec
aam
cltd
sub
les
mov
ds
hlt
pop
jmp
fimuls
jge
int
shll
lock
ds
mov
mov
fbld
dec
mov
xor
push
frndint
inc
outsb
mov
repz
xor
gs
aas
pop
popf
xchg
jbe
pop
lods
cmp
xchg
cmp
test
ficoml
aas
pop
jmp
push
cmpsl
mov
cmp
nop
xchg
cmp
popf
or
mov
stos
pusha
or
adc
sbb
dec
lods
xchg
xor
cmp
or
adc
je
ds
shll
jmp
mov
pop
ss
es
xchg
inc
ss
pop
and
pop
arpl
inc
cmp
repnz
adc
xchg
in
scas
inc
push
pop
clc
sub
mov
mov
cltd
push
inc
mov
add
hlt
jg
mov
stc
je
imul
filds
call
mov
in
mov
pop
push
mov
jnp
fmull
jmp
dec
xchg
add
xchg
push
push
out
adc
push
out
adc
pop
mov
rorl
popa
loopne
cmp
pop
xchg
push
arpl
mov
fistpll
cmp
dec
xchg
xchg
out
sub
sub
cmc
xchg
iret
aad
mov
pop
sti
lods
adc
push
loope,pt
imul
mov
dec
cmp
mov
inc
jae
jne
int
aas
loop
sahf
stos
scas
xchg
shl
inc
xchg
adcl
lds
mov
in
push
jmp
xor
ljmp
sub
vrcpps
into
in
movsb
push
mov
movsl
cmp
push
cmpsb
cmp
ja
loope
pop
rcrl
pushf
mov
andb
fcompl
out
pop
call
bnd
divb
or
mov
fsub
mov
fimull
cs
mov
lcall
std
enter
add
and
push
mov
add
mov
inc
cmc
mov
push
mov
ds
push
pop
pop
mov
jmp
loop
mov
daa
lods
sub
dec
popa
lods
jno
adcl
jne
cmpl
imul
ljmp
jo
mov
ret
cmp
jmp
mov
pop
lahf
daa
jne
jno
mov
test
fadd
dec
aaa
sbb
mov
mov
push
pop
iret
nop
mov
jle
and
jo
sub
js
jb
xor
push
daa
insb
in
dec
sub
ds
pushf
lods
mov
xchg
scas
sub
dec
scas
cmpsb
sbb
cs
inc
dec
addr16
call
aaa
push
pop
cli
pop
inc
add
inc
ss
insb
call
fbld
stos
loop
dec
cmpsl
jle
int
daa
pop
pop
pop
in
lahf
in
sub
adc
cld
shll
xor
movsl
test
sahf
cmp
push
daa
or
fsubp
xchg
jle
aas
jb
cmp
add
cmpl
pusha
ficompl
insl
sub
mov
or
dec
sbb
lds
dec
in
pop
inc
stos
mov
add
cmpsb
xchg
movlps
jle
sbb
push
jae
imul
jmp
adc
lret
rorb
cmpsl
push
int3
dec
jl
add
or
loopne
sbb
jae
mov
popa
xor
hlt
lods
cld
jno
jnp
cmp
adc
fs
out
xchg
insl
inc
nop
jge
shlb
xchg
je
icebp
inc
in
call
mov
pop
xlat
js
mov
addr16
pop
in
shlb
mov
cmp
sub
mov
mov
rcl
xor
jl
popa
sbb
out
cmp
dec
sub
pop
dec
repz
insl
fs
cmc
jbe
or
hlt
cmp
adc
jl
sub
adc
in
cmp
push
mov
dec
lret
dec
lret
jl
inc
dec
dec
mov
stos
mov
insl
in
xor
aas
sbb
clc
dec
sarl
js
sub
daa
push
and
cmpsl
jae
push
push
adc
les
jmp
pop
mov
mov
xchg
addl
jge
dec
pop
push
add
sub
mov
out
inc
sub
or
fwait
mov
and
movsb
xor
arpl
loopne
in
scas
mov
sub
int
pop
mov
mov
fcomip
or
mov
sbb
je
add
lods
adc
insb
inc
pop
js
mov
call
xor
jmp
pop
iret
test
add
decb
pop
and
mov
adc
ss
aad
loope
fisubrl
insb
cld
call
out
mov
push
rorl
dec
movl
add
inc
lods
out
inc
xchg
fs
mov
mov
stos
test
dec
fdivr
sbb
repz
pusha
outsl
pop
aaa
or
or
mov
stc
mov
hlt
popa
mov
outsl
out
repnz
xchg
and
jecxz
push
imul
das
jmp
data16
push
das
inc
cmp
xor
aas
scas
fidivl
repnz
pusha
xor
mov
mov
in
dec
aam
adc
aas
sub
pusha
xchg
lods
and
test
xchg
xor
or
sahf
and
lea
push
iret
shlb
notb
dec
pop
and
shlb
mov
hlt
les
insl
fildll
shll
pushf
dec
ror
rorl
cmpsl
sti
and
mov
mov
add
mov
movsb
std
mov
pop
push
loope
fiaddl
pop
rorb
cmp
mov
das
pop
push
xchg
roll
dec
nop
jg
add
add
cmc
std
sub
and
icebp
adc
movsb
lret
or
jae
in
gs
imul
push
inc
adc
cwtl
and
mov
outsl
xchg
dec
outsl
mov
cmp
insl
pop
push
adc
pusha
inc
insb
push
test
fidivl
adc
shlb
sub
in
outsl
inc
hlt
jp
test
in
mov
fisttpll
pushf
push
addr16
and
mov
mov
popf
mov
add
push
cwtl
repnz
and
test
pop
pop
dec
dec
and
bound
or
gs
andb
test
push
and
fnstenv
adcb
sbb
cmp
and
imul
push
movsl
sbb
inc
push
and
outsl
mov
cmpsl
leave
arpl
push
je
pop
sub
add
push
jns
cmpsl
xchg
testb
test
addb
xor
pop
jb
adc
aad
xor
sbb
bound
jb
jae
hlt
les
arpl
scas
dec
pusha
incl
idiv
cmp
orb
pusha
sub
addr16
es
insb
xchg
jg
inc
dec
gs
and
push
or
push
pop
dec
jnp
cs
and
fs
jg
push
xor
out
insb
icebp
sbb
adc
adc
leave
jmp
in
jb
nop
adc
and
sub
jg
aam
sbbl
repnz
adc
xchg
mov
adc
push
push
popf
jg
decl
mov
sub
in
test
push
dec
lods
clc
xor
sbb
add
xchg
imul
mov
rol
movsb
mov
test
cmpsb
or
and
sbb
movsl
jecxz
inc
pop
insb
pop
mov
pushf
xchg
fstpl
andb
mov
pusha
add
or
sbb
inc
cmpsb
out
and
add
mov
mov
nop
mov
js
pop
xor
push
sub
gs
sbb
sahf
dec
adc
divb
dec
cltd
ja
push
pop
mov
fstps
in
and
xchg
mov
lods
mov
xchg
shll
and
pop
leave
add
pop
cmp
notb
xchg
xchg
in
xchg
xchg
testl
pop
pop
mov
test
jne,pt
cmp
dec
mov
lahf
dec
mov
xor
push
enter
or
jns
add
inc
movsb
pop
xchg
insb
das
inc
es
mov
adc
subl
daa
pop
cltd
cmpl
add
sub
mov
push
dec
fwait
cmp
leave
out
cmp
gs
dec
mov
clc
add
sub
in
mov
fbstp
or
and
xchg
arpl
popf
lea
mov
mov
mov
out
push
mov
mov
int3
fdivrl
hlt
jbe
js
xchg
dec
mov
paddusw
in
lods
nop
aas
or
push
pop
in
adc
lea
sub
pop
jne
mov
mov
pop
mov
push
shl
leave
jmp
xlat
mov
push
add
mov
test
jecxz
adc
push
mov
xlat
xlat
push
daa
outsb
lahf
pop
inc
je
adc
das
fildl
ja
daa
mov
inc
enter
into
sub
add
leave
ljmp
push
or
mov
pop
andb
inc
push
push
arpl
stc
inc
js
arpl
adc
adc
mov
dec
cmp
neg
fiaddl
sbb
sbb
push
jno
adc
xchg
sbb
mov
mov
xchg
dec
shll
sub
adc
ret
mov
and
mov
stos
scas
orb
lea
push
or
jns
into
pop
arpl
xor
lods
xchg
ds
dec
paddd
or
bound
jg
push
dec
pop
mov
pop
mov
mov
cmpsl
pop
sbb
pop
in
test
in
pop
sbb
sti
mov
sbb
in
add
sbb
out
sbb
xchg
pop
outsb
stos
push
in
inc
mov
imul
call
mov
orb
ret
aaa
add
push
inc
rcll
mov
pop
xchg
push
pusha
out
or
cmpsl
pop
pop
aas
sahf
jno
out
lds
and
rorb
lret
pop
and
dec
lret
inc
mov
add
mov
cmpsb
neg
divl
ret
or
repz
int
jecxz
ret
scas
out
lea
rorb
mov
ljmp
clc
mov
fsts
inc
testb
rcrl
sub
sbb
out
mov
rolb
scas
popa
dec
insb
mov
dec
pushf
stos
cmp
bound
repnz
or
bound
negl
andb
dec
dec
mov
call
in
or
popa
pop
cs
gs
les
mov
mov
mov
sbb
sbb
shl
xor
fs
inc
fildll
fiadds
jb
mov
mov
call
adc
adc
and
push
mov
cmp
faddl
push
adc
test
cs
jecxz
aad
outsl
addb
push
test
call
mov
and
mov
sub
pop
call
pop
xlat
or
jge
daa
cwtl
int3
xchg
int3
aaa
add
jp
push
add
pop
rorl
cwtl
xor
and
push
leave
mov
pop
dec
or
pop
cmp
aaa
enter
lcall
aas
lcall
and
and
jo
movsb
repnz
frstor
adc
mov
sbb
inc
ret
sub
sar
icebp
push
push
sbb
aaa
dec
adc
adc
xor
in
in
xchg
xor
dec
and
push
cs
ja
mov
xor
inc
sti
sbb
cld
lcall
xchg
mov
movsb
or
inc
mov
mov
push
or
xor
popf
dec
inc
cmp
clc
xchg
es
adc
mov
adc
lods
or
movsb
stos
add
jo
add
pop
fdivrs
fildl
shrl
cli
lahf
cmp
stos
inc
outsb
ret
and
or
inc
xor
mov
and
bound
imul
inc
sahf
jmp
enter
or
push
fnop
mov
or
mov
or
mov
pop
sub
lcall
in
test
mov
lods
and
fwait
dec
cmp
mov
mov
sub
pop
xor
xor
das
push
and
dec
clc
sub
mov
pop
jmp
sub
add
stc
fistpll
lret
fnstsw
adc
jno
xchg
adc
mov
or
dec
in
lds
jle
and
add
in
xchg
sub
in
add
inc
lahf
sub
xchg
mov
stc
push
and
adc
aad
xor
fstpt
or
xchg
popa
pop
out
xchg
add
or
mov
aaa
push
inc
xor
sbb
adc
dec
xchg
pop
push
pop
lods
or
cmc
fiaddl
add
cli
out
jle
cwtl
aaa
xchg
mov
sbb
push
or
hlt
repz
out
xchg
xlat
inc
mov
pop
push
and
inc
mov
fwait
push
out
jb
mov
lea
pop
mov
insb
jne
jge
jl
imul
mov
xlat
addb
lahf
movsb
pop
ljmp
xchg
mov
inc
xchg
mov
roll
adc
and
dec
fwait
pop
sbb
fldenv
hlt
or
mov
nop
xchg
fwait
ljmp
and
xchg
pushf
enter
push
mov
repz
mov
pop
mov
test
int3
mov
jmp
jecxz
add
lahf
or
cltd
jp
test
mov
comiss
cmpsb
xor
dec
cmp
jb
mov
jmp
mov
xor
jmp
jae
xor
push
test
mov
adc
mov
cltd
push
ficompl
pop
out
out
scas
popa
jle
dec
inc
xor
cwtl
mov
cmpsb
mov
in
out
scas
xor
pop
inc
adc
pop
jno
jp,pt
inc
lock
jbe
loop
ja
iret
sub
imul
aad
jp
ds
cmpb
out
push
int
aad
jb
or
add
adcl
mov
cwtl
test
or
and
and
outsl
cmp
dec
pop
add
push
leave
test
xchg
das
mov
leave
xor
pop
adc
cld
adc
dec
inc
or
mov
pop
sbb
sbb
jno
push
jecxz
aas
pop
pop
adc
inc
cld
add
test
in
out
jne
mov
jo
mov
pop
ss
sahf
cmp
jo
cmc
out
repz
jbe
stos
adc
inc
mov
pop
gs
mov
xor
sub
je
hlt
or
clc
bswap
enter
add
gs
mov
loopnew
js
mov
sbb
call
jo
bound
sub
pop
inc
xchg
xor
cmc
pop
mov
out
jmp
clc
lahf
inc
xchg
roll
in
sbbb
adc
nop
bound
or
in
add
in
xchg
imul
and
ftst
daa
adc
jno
pop
icebp
xchg
mov
adc
out
sub
push
mov
mull
stos
mov
aad
in
adc
xchg
cmpl
lcall
sub
imul
xorl
stos
pop
rclb
shrb
pop
nop
test
dec
rcrl
cwtl
mov
xor
mov
outsl
cmp
and
and
or
int
dec
inc
shlb
adc
les
js
mov
bound
dec
sbb
mov
push
push
fdiv
push
fdivrl
fucom
pop
js
mov
pop
in
bound
and
dec
cld
mov
ret
sahf
popf
mov
sahf
dec
inc
loop
sarl
push
popf
push
pop
push
jae
jmp
sub
pop
xor
les
lret
adc
xor
mov
xchg
push
sbb
leave
cmp
push
dec
pop
aam
adc
add
mov
mov
rcrl
cmp
sub
mov
mov
mov
mov
jecxz
pop
mov
mov
imul
pop
fstp
cltd
push
dec
xchg
out
movsb
aam
sub
insl
es
sbb
push
mov
cmp
test
popf
and
push
test
xchg
loope
adc
and
insl
mov
lock
mov
xchg
lock
inc
in
bound
cmp
cwtl
cmpsb
lret
push
lock
mov
mov
and
or
in
xchg
sub
and
jae
mov
sbb
mov
mov
push
stc
sub
in
adc
or
jbe
dec
movsl
lock
xchg
add
dec
in
pop
fwait
xchg
push
inc
push
std
inc
adc
dec
xchg
dec
inc
sbb
inc
leave
mov
adc
imul
mov
jp
int
gs
andb
icebp
sbb
mov
jp
rolb
inc
aad
lcall
std
jne
pop
mov
cmpsl
pop
ret
push
pop
cmp
test
and
adc
and
inc
jmp
inc
sbb
in
push
fsubl
ficomps
loop
repnz
jo
inc
cmovg
dec
xchg
xchg
sti
inc
xchg
mov
sub
add
cmpb
clc
insl
lret
into
and
mov
sarl
push
inc
sbb
push
add
adc
push
les
out
rcrl
dec
pop
push
xchg
icebp
dec
mov
inc
addr16
pop
fwait
cmc
ret
rclb
rorl
mov
cltd
or
adc
nop
xchg
pop
cli
data16
sub
insl
inc
xchg
jb
sub
mov
mov
xchg
or
jle
mov
arpl
jb
push
add
lret
mov
cmpb
mov
fists
push
out
stos
jg
push
ja
add
je
jo
xchg
add
test
adc
fwait
adc
cltd
pop
in
adc
xor
enter
ss
in
loopne
movsb
lock
arpl
jmp
sbb
dec
rcll
add
mov
jbe
sub
mov
add
fstpl
adc
add
icebp
sahf
lcall
pop
in
pusha
xor
dec
test
dec
enter
testl
mov
inc
adc
lcall
jnp
add
jae
cmpl
push
mov
sub
pop
adc
in
inc
xlat
stos
pushf
pop
test
xchg
cmpsl
ss
mov
add
inc
add
popa
inc
leave
mov
jle
and
aad
repz
mov
dec
mov
adc
popa
sub
cld
imul
or
cmp
cmpsl
flds
or
push
sbb
mov
push
sbb
sti
inc
sub
vcvttsd2si
mov
loopne
sbb
mov
in
mov
push
push
push
jno
sarl
mov
mov
cld
in
loop
mov
mov
mov
fistpll
aaa
push
lcall
js
out
add
push
mov
cli
in
xor
mov
call
in
test
jnp
pop
nop
iret
out
cmp
cmc
xorl
clc
roll
dec
dec
daa
sub
test
xchg
loope
shr
jo
aas
stos
cs
int
sbb
mov
sti
or
sti
jo
or
adc
adc
inc
scas
outsl
sbb
cmpsb
pop
sbb
dec
mov
outsl
mov
dec
dec
mov
in
xor
je
sbb
jmp
pusha
outsb
and
lret
repz
jle
push
xchg
shrb
cmp
in
lods
pushf
loopne
scas
mov
push
stc
lret
and
and
jmp
ficompl
scas
jge
cs
mov
xchg
mov
dec
cmp
adc
adc
sbb
push
lret
dec
adc
addl
test
adc
out
jno
jle
pop
repnz
fsub
push
xchg
push
add
adc
ret
into
mov
sub
test
daa
pushf
mov
mov
xor
lds
cmpsb
int3
mov
sbb
loope
test
dec
cmp
add
inc
out
jne
add
xor
pop
pop
add
cld
scas
mov
xor
push
add
pusha
scas
adc
or
xor
sbbl
adc
lds
aas
shll
jns
push
shrl
decl
and
cmc
div
std
and
sbb
mov
push
cld
mov
bound
push
in
out
push
call
mov
orb
rcl
xchg
lret
sar
adc
repnz
shrl
cmpsb
add
in
dec
insb
xchg
xor
push
mov
xorl
mov
cltd
dec
in
cld
imul
aad
repnz
mov
mov
icebp
mov
pop
mov
movsl
push
lahf
add
xchg
jg
push
mov
cs
lret
mov
insl
mov
push
and
arpl
rcl
ds
shlb
xor
xor
xor
mov
mov
and
shll
bound
sbb
cmp
add
fbld
ror
push
xchg
shlb
mov
lods
bound
inc
movsb
mov
out
inc
ret
add
data16
movsb
dec
fdivr
lcall
out
fisttpll
pop
test
movl
repz
push
addr16
and
and
xchg
xchg
jl
shll
and
and
sbb
call
addr16
pop
push
outsb
rcll
adc
push
lea
or
and
call
pop
lret
mov
adc
int3
sub
dec
loopnew
out
cmp
or
add
xor
pop
outsl
push
rclb
mov
sti
nop
jle
bnd
ss
aad
push
cmp
xor
lods
or
jmp
dec
adc
ficoms
addb
inc
lcall
pop
add
push
into
stos
ja
das
sbb
xchg
ja
or
mov
and
xor
bnd
into
pop
mov
call
jmp
xchg
inc
bound
add
xchg
and
sbb
mov
jmp
inc
dec
iret
mov
dec
fidivrs
mov
pop
mov
lret
cld
cmpsb
cld
adc
int3
mov
pop
push
xorb
push
xor
pop
jno
sbb
pop
jns
add
mov
dec
js
dec
inc
je
outsb
mov
mov
jne
add
insb
mov
fmuls
in
mov
in
cmp
add
jne
inc
adc
mov
sbb
mov
cmp
out
outsb
mov
xor
jg
sbb
lea
sub
xchg
lcall
pushf
mov
xor
mov
mov
adc
and
jb
stos
test
roll
mov
lahf
imul
clc
mov
or
mov
lcall
xchg
fdivp
loopne
sub
pop
leave
lcall
cs
mov
push
push
lock
cmp
js
leave
inc
clc
mov
pop
shlb
mov
cli
int3
popf
adc
out
pop
sub
fildll
cmpb
daa
xlat
xor
cmp
enter
push
jae
xor
add
mov
arpl
loope
fmul
test
pop
adc
imull
scas
push
lods
out
pushf
pop
cmpsb
pop
cmp
das
movsb
adc
add
mov
arpl
xchg
mov
fisubrs
mov
es
inc
push
xchg
or
sbb
xchg
lret
cwtl
filds
sub
mov
mov
imul
dec
into
inc
jge
movb
dec
out
inc
in
sbb
pop
push
ret
inc
std
adc
mov
and
inc
and
in
dec
cmp
das
mov
xor
or
mov
xchg
adc
rcrb
cmp
mov
cmp
je
out
adc
pop
mov
testl
arpl
sbb
insb
cmp
arpl
pop
hlt
add
xor
jp
cmpsb
jl
mov
inc
cmp
push
hlt
xchg
push
cmp
repz
stc
inc
dec
cmp
mov
data16
jecxz
out
icebp
adc
pop
dec
in
jae
mov
add
je
mov
push
mov
xchg
pop
dec
ss
fs
cmp
sub
push
loopne
sub
loope
jno
ja
fdivl
and
jl
or
cmp
jnp
xor
aam
mov
mov
dec
cmp
or
pushf
mov
or
cmp
clc
jne
sbb
jge
add
dec
scas
stos
add
das
out
dec
das
sub
clc
xchg
jge
aam
xor
call
lods
nop
mov
movsb
adc
out
int
es
in
cwtl
jno
xchg
adc
lods
sub
arpl
dec
lea
cmpb
in
sbb
in
inc
mov
mov
lret
popl
lea
jl
pop
cmovne
test
shlb
fwait
push
cmp
divb
call
mov
inc
xchg
mov
icebp
sbb
out
adc
out
daa
pop
call
sbb
sbb
xor
adc
stos
gs
scas
test
dec
or
push
lods
push
mov
push
or
add
leave
das
icebp
leave
mov
les
mov
fildll
mov
push
push
xor
loop
pop
lds
clc
xor
jl
xchg
cmp
cmp
lret
cli
stos
aaa
cmp
cmp
jmp
outsl
subl
inc
in
mov
jg
mov
lcall
aaa
sub
sub
leave
push
or
jo
mov
push
or
std
mov
lcall
sub
mov
lds
into
cmp
inc
mov
cli
mov
call
outsl
imul
arpl
inc
ja
jne
mov
loopne
enter
sti
repz
pop
push
xchg
push
cmp
loop
bound
mov
or
ss
es
mov
lock
gs
pop
pop
or
push
mov
add
mov
cmp
int
mov
pop
adc
jns
xchg
ljmp
jmp
xchg
mov
dec
xchg
pop
pop
cs
aad
inc
push
cmc
xchg
cmpsl
xchg
pop
xchg
mov
and
adc
pop
push
sbb
sarb
cltd
test
aad
lds
sub
jae
adcl
cltd
and
enter
sahf
int3
jns
push
into
inc
xchg
push
xlat
or
out
xor
and
cmpsl
cmp
push
push
imul
sbb
jge,pn
sbb
outsb
cmp
aaa
cmp
push
pop
popf
enter
insl
mov
stos
adc
push
insl
or
mov
jge
das
jbe
and
dec
xchg
sahf
jl
mov
adc
sbb
adc
mov
cmpsb
cmp
pop
push
mov
popl
mov
mov
out
popf
push
es
dec
mov
cli
andl
push
mov
and
sbbb
dec
adc
enter
jno
in
push
test
mov
inc
xor
sahf
adc
and
add
gs
mov
mov
pop
jno
outsb
mov
dec
iret
and
ljmp
or
cmpsb
xor
test
loope
mov
ljmp
scas
sbb
imul
lret
into
pop
in
xchg
ja
xor
js,pt
push
ds
andl
inc
int
lods
mov
imul
scas
add
scas
jp
rcrb
fdiv
pop
mov
mov
int
popa
cmp
jp
mov
mov
iret
test
scas
pop
cli
pop
cltd
push
jne
loopne
es
lock
mov
in
aas
inc
mov
xchg
out
nop
sbb
mov
in
mov
cli
jecxz
pop
dec
mov
ret
jle
push
and
jno
int
mov
sbbl
add
arpl
fisubrs
pop
push
dec
imul
cmp
dec
lock
and
sahf
push
jnp
in
inc
add
jno
aam
gs
loopne
inc
fldt
daa
pop
cmpsl
aam
push
in
in
aam
mov
xchg
add
mov
jbe
repnz
fstpt
mov
insl
inc
ljmp
sub
xchg
bound
xchg
dec
popf
adc
push
push
divl
test
xchg
xchg
out
jnp
in
pop
in
rol
loopne
test
outsb
inc
test
notb
cmpsb
xor
and
push
sbb
push
aas
xchg
adc
test
or
and
push
push
push
cmpsb
fucomp
dec
shl
mov
push
push
es
jp
inc
and
dec
fldt
jb
popw
sbb
mov
lea
push
test
and
add
xor
push
mov
je
or
shrb
xchg
push
mov
shlb
cmp
pop
popa
inc
jbe
pop
add
arpl
rorb
inc
lds
loop
insb
adc
add
push
jne
test
push
xchg
cltd
add
pusha
repnz
iret
scas
pop
popf
aas
add
das
and
lock
and
dec
jbe
mov
das
and
cmp
sub
and
dec
inc
or
add
popa
cmpl
cmp
test
lcall
in
lret
rcrl
mov
loop
inc
das
fimuls
mov
daa
fbstp
xchg
pop
dec
cmp
mov
mov
fsub
lret
inc
pop
adc
and
push
testl
popa
mov
aad
outsl
dec
insb
adc
push
push
sti
mov
ss
push
jne
push
mov
inc
mov
dec
pextrw
mov
mov
mov
add
sbb
jns
jge
push
ret
mov
mov
std
push
pop
and
mov
add
dec
mov
inc
fwait
sub
cmp
fsubrl
mov
mov
scas
mov
pop
or
sub
outsb
pop
cwtl
mov
or
dec
cmc
daa
push
push
loop
sub
adc
xor
int
sbb
dec
aam
adc
mov
cltd
outsb
adc
pop
mov
scas
mov
inc
cmp
out
stos
out
cmp
test
out
push
lcall
imul
arpl
fcomp
ret
sbb
xchg
add
out
adc
dec
mov
xor
jbe
mov
fwait
mov
jl
into
pop
add
xchg
jle
aad
push
test
jmp
xchg
jecxz,pt
loop
xchg
fsts
mov
fnsave
sub
movsl
fwait
ljmp
cltd
xchg
pop
lock
dec
adc
js
jge,pn
fldl2t
inc
cmp
cltd
jg
mov
adc
inc
into
mov
pop
dec
inc
movsl
pop
rcrb
mov
cmp
jb
stc
and
outsl
xchg
into
leave
mov
insl
push
pop
pop
daa
or
xor
ljmp
imul
movsl
jno
cmc
mov
pop
ficoms
mov
push
sahf
push
jo
mov
push
and
mov
lock
ljmp
push
pop
cmpsl
std
je
popf
xchg
inc
clc
test
fcmovu
pop
test
imul
mov
or
sbbb
in
lods
adc
jae
icebp
jns
pop
mov
sbb
jmp
pop
dec
jno
es
xor
lcall
fbstp
ret
jb
mov
outsb
pop
mov
push
rcll
jle
adc
mov
jnp
pop
out
mov
fwait
cmp
push
jae
icebp
adc
push
jbe
mov
sbb
add
divl
fists
cmc
outsl
jmp
xor
cmp
dec
jns
mov
fisubl
jmp
add
leave
in
movsl
andl
scas
pop
xchg
outsb
adc
pop
ljmp
out
in
add
mov
inc
dec
jge
ficoml
add
lret
sbb
je
and
and
nop
fdivs
lea
xlat
xchg
aad
pop
iret
xchg
cmp
jg
aam
jne
and
or
jns
adc
popl
and
das
lods
and
ficompl
push
xchg
test
dec
jae
cwtl
and
ficompl
call
ret
pop
xchg
inc
add
sbb
cmp
iret
inc
sub
mov
xchg
or
adcl
mov
scas
push
or
lds
inc
cmp
dec
out
or
add
jl
push
rcll
out
jne
or
addr16
addr16
cmp
sbb
jmp
imul
into
mov
ss
getsec
pushw
mov
mov
in
push
sbb
cmp
outsb
call
sbb
je
pop
icebp
popa
cli
dec
add
aaa
stos
pushf
mov
push
jmp
imul
int
jmp
inc
push
pop
xchg
mov
imul
ret
mov
lret
add
das
inc
enter
cld
iret
cli
rcl
mov
push
dec
gs
cmp
aam
jmp
lds
into
sub
dec
repz
or
pop
ja
movsb
jae
data16
jo
sti
xor
pusha
loop
mov
push
mov
addb
dec
xchg
jge
mov
insb
test
icebp
push
pop
inc
mov
pop
xchg
pop
sub
and
cmp
xor
pop
xchg
jno
mov
lcall
addr16
adc
es
push
outsl
loope
sub
xchg
popf
int
sub
sbb
mov
in
cmp
mov
int3
add
push
leave
fildl
push
fstl
jge
push
cld
idiv
test
dec
scas
mov
sbb
sbb
adc
mov
hlt
mov
cmpsb
loopne
xor
push
push
gs
push
aam
jo
pusha
dec
pop
lods
mov
fwait
pop
loope
outsb
jp
test
lcall
dec
dec
mov
or
lds
add
pop
mov
les
sbb
call
test
les
or
arpl
ja
insl
cld
push
sbb
hlt
pop
insl
outsb
inc
xchg
push
ret
mov
iret
movsb
cmpsb
mov
inc
mov
cltd
fnsave
ret
push
xchg
pop
inc
jns
stos
in
add
pushf
int
inc
sbb
sub
push
js
in
dec
out
out
add
pusha
arpl
fld
pop
jae
adcb
es
sub
imul
xchg
ret
lds
or
push
fisttpll
mov
es
repz
cmc
shl
and
xor
dec
fs
xorl
fcoml
scas
or
lock
sbb
rclb
sub
mov
addr16
or
inc
or
sub
cwtl
xor
pop
jne
repz
je
popf
in
xor
je
sbb
pop
in
pop
dec
lret
jne,pt
or
jno
push
les
inc
arpl
sahf
adc
xor
jecxz
dec
gs
adc
movsl
mov
test
stos
cmp
mov
cmp
jo
test
adc
or
add
mov
ror
mov
push
stc
bound
aam
dec
js
std
ret
add
popf
xchg
xlat
popf
outsb
cld
mov
lea
fisubrl
mov
sarb
test
shrl
sbb
int
add
leave
rcr
mov
jge
outsl
sbb
dec
leave
adcl
popf
in
enter
push
inc
mov
inc
push
or
into
and
pop
cmpsb
sbb
dec
aad
gs
adc
in
adc
jecxz
cmp
rcl
lret
inc
mov
movsl
mov
inc
rcl
mov
inc
int3
and
push
stos
out
lcall
sub
jg
jg
cmp
ret
mov
mov
lods
sbb
jnp
mov
lret
jo
push
and
pop
arpl
lods
dec
sbb
cmp
scas
or
push
mov
lret
pusha
and
mov
nop
mov
jno
pop
xchg
cmp
xchg
es
pop
mov
sbb
sub
sbb
xor
sub
nop
xchg
xor
and
scas
jae
int3
mov
into
cwtl
stos
bound
fsubrl
jo
cmp
fcmovnbe
addr16
mov
filds
sub
cld
int3
pop
add
sub
test
and
je
and
mov
pop
mov
pushf
in
outsl
arpl
repnz
std
xor
inc
mov
rcl
aam
inc
dec
add
sar
repnz
scas
cmp
add
mov
push
push
loop
repnz
pusha
iret
std
lcall
clc
adc
add
cli
mov
cwtl
leave
iret
adc
dec
inc
adc
mov
jg
out
jnp
imul
out
ja
and
inc
adc
imul
add
push
add
dec
aam
jb
pop
xor
outsb
sub
pop
inc
adc
add
sahf
shl
mull
loopne
xor
pop
and
test
mov
mov
add
lods
mov
sub
xor
pushf
pop
xor
mov
mov
mov
popf
sbb
mov
or
mov
and
push
jb
scas
adc
imul
stos
mov
insl
mov
jecxz
out
push
xor
loope
dec
aaa
adc
test
arpl
iret
push
inc
sbb
mov
ds
sti
scas
cs
inc
push
pop
cmp
or
xchg
clc
xchg
xchg
lock
subb
and
dec
lret
shll
sbb
xchg
fildll
xor
mov
lret
push
push
jle
mov
inc
sub
aas
sub
and
imull
adc
pop
add
cli
rcl
xchg
mov
mov
xor
dec
pop
out
sarb
sub
jmp
imul
dec
xchg
xor
outsb
pop
inc
rcr
mov
cmp
jmp
lret
xchg
xchg
dec
jbe
add
and
and
sub
pop
mov
or
adc
mov
and
xrelease
in
sbbl
mov
pusha
sub
and
push
arpl
or
cli
xor
dec
rolb
jb
push
lret
scas
cmp
xor
pop
in
pop
roll
nop
sti
je
jge
jno
je
push
js
dec
adc
sahf
xor
or
mov
adc
pop
jae,pn
mov
and
lea
mov
lock
das
inc
fbstp
or
xchg
nop
das
sub
nop
or
icebp
test
jo
iret
and
xchg
test
movsl
in
push
sbb
or
ljmp
pop
jns
repz
cmp
adc
pop
adc
push
mov
mov
xor
test
pop
pop
mov
in
pop
cmc
mov
nop
in
scas
inc
gs
jp
jb
inc
das
daa
rcr
call
movsb
divb
out
in
pop
in
xchg
push
sbb
cmp
fimull
xchg
inc
rcr
xor
sub
pop
sbb
cmp
hlt
cmp
or
push
mov
aam
sbb
add
mov
mov
and
mulb
lahf
sub
xchg
add
ficomps
sub
adc
mov
push
hlt
bound
out
inc
dec
sub
mov
test
aas
inc
jecxz
xor
xchg
sub
jecxz
cmpsl
std
pop
dec
push
sbbl
push
gs
push
push
test
xlat
xor
es
dec
lock
xchg
add
stos
leave
lock
call
adc
pop
inc
rol
xchg
cmp
sub
out
pop
xchg
jno
test
cmp
aam
stc
jnp
pop
cmp
sbb
jmp
cmp
and
dec
test
and
test
adc
add
sbb
sub
call
das
sub
or
xchg
sub
cmp
adc
xchg
fdivs
inc
sub
cmp
push
mov
gs
dec
push
mov
cmp
loop
outsb
rorl
rcrb
adc
cmpsb
in
call
aas
call
addb
cltd
inc
outsb
xchg
inc
dec
scas
sub
pop
stos
add
push
xor
fbstp
sbb
ljmp
mov
es
in
push
les
push
xchg
aas
lahf
lahf
sub
jne
test
cld
inc
mov
and
in
scas
push
out
incl
daa
pop
sbb
or
sbb
cmp
pop
jns
loope
dec
fwait
or
mov
test
out
cmp
sbb
mov
idivb
sub
push
push
es
scas
sub
jno
inc
dec
int3
repnz
pop
add
daa
jp
mull
push
sbbb
test
jmp
dec
mov
push
stos
and
or
push
push
mov
xrelease
push
and
mov
jecxz
aaa
std
pop
mov
push
je
and
pop
test
and
sbb
leave
xchg
fisttpl
jmp
ret
inc
cld
push
out
sbb
test
sub
mov
mov
pop
sti
mov
lahf
aam
sti
inc
loopne
jmp
xchg
push
lds
pushf
shl
loopne
mov
lods
jns
call
xor
and
or
push
dec
mov
adc
or
push
cld
stc
stos
divb
in
push
jnp
imul
sbb
les
mov
fmull
xor
pop
rcl
out
mov
lahf
push
div
sub
mov
push
push
sarb
or
jl
pop
sub
pushf
or
push
movsb
repz
dec
rcrl
ja
mov
push
cli
shrb
cmp
inc
inc
inc
cmp
mov
sub
dec
cli
mov
jg
cld
mov
lret
xor
std
cli
mov
mov
sub
insb
inc
hlt
dec
mov
mov
bound
enter
cmp
dec
add
lahf
mov
stc
sbb
cmp
roll
test
ljmp
xchg
cwtl
mov
pop
and
sbb
mov
jmp
gs
cmp
xchg
xchg
test
scas
mov
mov
adc
fildll
xor
add
gs
popf
into
sbb
sbb
add
mov
clc
decl
rclb
push
cmp
mov
push
push
cmp
add
add
add
popa
out
adc
or
pop
insb
rorb
and
and
sti
jge
add
insb
push
and
mov
ja
add
movsl
sbb
mov
pop
and
nop
dec
mov
dec
sbb
jecxz
repz
or
cmpsl
nop
or
cmp
pop
mov
cmpsl
jge
daa
xor
add
pusha
mov
and
shrb
xchg
add
and
sbb
adc
hlt
cld
sar
add
or
into
insb
popf
cmp
add
mov
mov
jne
sub
mov
jnp
lahf
and
or
xchg
mov
jo
add
xor
js
in
hlt
pop
sub
loopne
xor
ficompl
stos
sub
adc
add
push
aas
and
test
mov
xchg
xor
inc
daa
mov
inc
xor
inc
dec
fidivs
cmc
adc
add
iret
xor
fbstp
setno
pop
pop
enter
shlb
add
aam
nop
std
or
imul
inc
push
and
aaa
sub
or
fsubl
mov
cwtl
xchg
mov
cmc
or
add
pop
adc
fadds
out
imul
cmp
sarb
cld
inc
sbb
jp
aas
dec
ficoml
xor
push
pop
sbb
mov
add
in
mov
imul
out
lcall
fwait
in
addr16
mov
sbb
test
pop
pop
int
inc
jge
int
loopne
sub
insb
jb
mov
imul
inc
repz
aad
xor
inc
inc
adc
cmp
das
dec
jo
mov
sbb
sti
daa
int
pop
inc
rorb
dec
adc
sbb
shlb
sbb
out
lds
pop
sbbl
jbe
mov
sarb
xchg
cmp
mov
insb
push
push
outsb
push
mov
dec
sbb
cs
mov
leave
inc
mov
cld
imul
inc
scas
and
ficomps
cli
jecxz
add
lahf
inc
js
lcall
movsl
cmp
aaa
cltd
mov
xlat
cmc
loope
out
or
push
pop
mov
addr16
cmovae
dec
lods
xchg
xor
orl
push
xor
cmp
clc
sbbb
sub
jl
imul
pop
adc
pop
rcl
gs
mov
inc
int
cmp
sbb
loop
push
mov
adc
aad
xchg
mov
pop
sahf
mov
addr16
negb
sub
dec
dec
mov
push
jg
int3
arpl
pop
jl
dec
fwait
aaa
or
cmc
mov
stos
popaw
and
jge
add
add
lock
scas
ds
cmp
add
inc
shll
shlb
hlt
fcoml
popl
or
insl
jl
or
or
test
sub
sub
mov
test
lahf
nop
outsl
test
js
push
push
mov
mov
xchg
and
mov
imul
jge
pop
mov
daa
movsb
dec
xchg
shrl
mov
out
lcall
cmp
outsl
jne
push
mov
mov
jle
cltd
icebp
mov
mov
ret
lcall
mov
jb
xchg
and
lcall
lea
insl
adc
lret
fdivrl
mov
pop
xchg
testl
adc
hlt
sub
add
cmp
and
mov
das
mov
adc
xlat
out
xchg
rorl
mov
psrlw
cmc
push
inc
lds
sub
data16
ja
mov
mov
pusha
divb
std
jp
xchg
cmp
fnstcw
stos
das
mov
test
sub
movsb
push
cmpsb
divl
jp
jno
bound
dec
lahf
jnp
insl
or
xchg
cmp
mov
aam
or
gs
pop
dec
daa
out
inc
fisttpll
lds
shll
pop
test
shlb
pop
pop
mov
lock
jmp
dec
xlat
push
jmp
int3
cmp
jg
jbe
jle
pop
xchg
push
cwtl
jp
rolb
insb
jae
jns
jb
push
adc
push
rcl
mov
repnz
mov
daa
lcall
ja
mov
jge
faddl
inc
cmp
loop
xchg
aaa
jp
dec
ss
popfw
add
jnp
data16
lcall
cs
movsb
icebp
mov
dec
adc
into
sub
out
lds
inc
es
xchg
cmp
int
inc
sub
cld
arpl
mov
lret
add
lret
ja
dec
inc
leave
or
add
mov
je
xchg
jge
pop
push
jl
stos
inc
aas
pop
push
int3
pop
push
fwait
dec
xchg
lock
mov
mov
lahf
mov
call
imul
push
mov
mov
movsl
cmpsb
or
insb
in
ljmp
int3
xchg
and
push
mov
inc
cmp
inc
push
dec
shr
cltd
push
add
mov
repnz
inc
dec
fs
mov
das
out
xor
int3
mov
insl
insl
jle
outsb
lods
sti
arpl
push
aas
sar
jp
adc
push
lds
ja
inc
adc
mov
fsubrl
ja
xor
out
mov
in
andl
scas
or
sbb
stos
iret
mov
imul
out
out
xchg
push
ret
jecxz
inc
jb
in
sbb
int3
pop
aas
shlb
shrl
mov
out
mov
mov
ja
pop
jg
jmp
aas
dec
cmp
lock
sub
jo
sbb
movsb
mov
nop
mov
pop
js
aas
shlb
jnp
mov
lods
adc
mov
popf
xchg
sub
out
jns
arpl
repnz
outsb
cmp
jae
jne
cmp
das
loop
iret
dec
pop
and
add
mov
and
and
lgs
gs
popf
das
xchg
outsb
cmp
int
add
push
outsb
push
inc
cltd
push
and
cwtl
fcoms
mov
add
xor
das
jns
mov
pop
add
jg
or
and
addr16
adc
jl
in
xor
popa
sub
std
inc
mov
lret
imul
fiaddl
mov
in
pop
shll
cld
andl
fldl
outsb
push
pop
cld
push
mov
inc
js
fs
adc
sub
cmp
arpl
lret
insb
orb
pop
push
int
enter
or
jl
lds
sbb
subb
insl
jmp
nop
mov
cmp
mov
mov
in
add
mov
xchg
nop/reserved
test
in
cli
ret
ss
dec
cmp
sub
rcll
mov
faddp
popa
cmp
aad
xor
icebp
movsl
xchg
inc
xchg
pusha
fldenv
jae
adc
add
and
in
cltd
addl
iret
lcall
and
mov
insl
mov
aad
sub
movsl
dec
dec
push
popf
flds
pop
iret
mov
jae
orl
jecxz
xchg
mov
mov
jp
pushf
push
dec
stos
sbb
mov
and
test
adc
mov
pop
fmuls
dec
sbb
dec
or
test
ja
xchg
push
lahf
fisubl
ret
cmp
xchg
outsl
repz
test
je
int
or
xor
js
or
out
shrl
adc
loope
enter
push
pop
sbb
lret
popf
je
leave
jg
mov
adc
ja
sub
jb
mov
lods
sbb
ss
jnp
jmp
inc
pop
or
mov
jmp
sub
dec
jnp
cmpsl
or
xchg
cmpsb
mov
sub
cli
cmp
cmp
ret
outsb
mov
loop
filds
sub
push
unpckhps
inc
aam
out
push
repnz
popf
mov
push
pop
rclb
cmp
ret
mov
in
xchg
mov
inc
sub
test
out
popf
jne
call
cli
dec
add
xor
mov
add
jge
cltd
inc
in
shl
and
pop
insb
hlt
mov
dec
pop
scas
sub
test
out
loop
push
testl
stc
cmc
xor
rcrb
repz
push
sbb
push
andb
test
pop
dec
cwtl
pop
sub
jl
inc
pusha
cmp
test
repnz
lods
mov
imul
mov
xchg
xor
lea
arpl
rcrb
arpl
cwtl
mov
and
or
loop
fsts
ss
ja
arpl
je
or
int3
xchg
imul
mov
cli
cltd
mov
push
ljmp
sub
mov
push
ret
add
xchg
lock
sbb
cmpsb
xor
mov
data16
fsubl
xchg
in
push
mov
mov
dec
mov
cwtl
add
pop
jbe
gs
fwait
addr16
adc
int3
pusha
add
cmpsl
into
sub
mov
enter
push
push
popa
inc
mov
in
adc
jns
jns
mov
mov
jmp
jg
and
out
or
fdivrs
jge
pop
pop
mov
bnd
psubb
or
dec
pop
popa
mov
lahf
cltd
sub
les
stos
push
sbb
jl
mov
stos
and
adc
repnz
pop
pop
movsb
dec
shrl
add
ss
decb
icebp
jae
lret
jb
adc
cmp
stos
xor
inc
adc
mov
jo
and
jnp
lock
iret
sub
push
adc
jge
inc
cmp
daa
push
imul
andb
jmp
fnsave
in
cli
dec
rorl
pop
fildl
pop
mov
insl
enter
cmp
pop
inc
lods
and
mov
pop
decb
lock
jne
out
xor
das
xor
add
adc
add
enter
pop
or
fldcw
ja
clc
lds
int
ror
rep
hlt
sar
pop
pop
mov
cltd
add
loop
div
sahf
rcl
in
addr16
mov
push
arpl
or
mov
sbb
pop
sbb
icebp
sets
and
enter
sbbl
dec
inc
je
xor
andb
iret
jne
mov
pop
lds
add
lea
inc
roll
fadds
loop
rcrb
inc
cmp
inc
pop
lods
sbb
je
out
mov
in
and
stos
cmp
dec
dec
aad
jmp
mull
lret
and
adcl
test
add
inc
ds
sub
addb
cmpsl
lds
popa
rcll
movsl
rcr
int
mov
sub
mov
jbe
xor
lea
jnp
cmpsl
and
push
xchg
ret
out
stos
mov
mov
in
mov
inc
pusha
imul
enter
xor
xchg
arpl
push
ficoml
sbb
stos
sarl
pop
aad
dec
cmp
fnsetpm(287
aad
test
mov
push
mov
sub
stc
fwait
jns
sbb
in
jmp
add
push
xchg
mov
out
lahf
call
neg
es
push
add
mov
call
test
mov
popf
das
and
mov
xor
mov
add
jae
push
ret
or
pop
and
push
lods
hlt
or
cmpsb
jae
arpl
xchg
xchg
sub
fistl
aas
es
pop
mov
mov
test
and
fidivrs
sbb
xchg
inc
and
dec
lret
loopne
adc
mov
mov
sbb
inc
ds
das
pop
mov
aas
ret
jns
or
cmp
mov
in
xor
lcall
xor
mov
dec
test
mov
push
out
mov
and
dec
add
xchg
movb
pause
add
pushf
jg
in
pushf
mov
add
scas
bound
cld
xchg
xor
gs
test
mov
mov
lods
push
cmc
or
mov
push
mov
jecxz
xor
mov
stos
ret
aam
push
faddp
or
inc
std
pop
mov
divl
leave
int3
jne
lods
mov
xchg
add
cmp
jae
test
xor
loope
lea
es
int
mull
adc
mov
inc
adc
xchg
mov
cmpsl
and
test
vmovaps
enter
movb
lds
lea
jg
or
pop
sub
xor
movl
das
pop
shrl
scas
sbb
adcb
jns
cmpsb
jle
cmp
cmp
jg
mov
out
sbb
jmp
dec
cmc
insb
outsl
adc
mov
xor
mov
ljmp
mov
lea
aas
repz
les
mov
pop
sti
pop
divl
js
add
sbb
ljmp
and
lods
mov
inc
push
sub
fiadds
aam
xchg
inc
js
and
mov
imul
mov
cmc
hlt
cmp
movsl
and
movsl
gs
or
outsb
add
cmp
sbb
xchg
mov
movsb
mov
clc
cwtl
int
mov
add
mov
rorl
roll
mov
mov
scas
xor
sar
je
lret
out
adc
mov
popf
movsl
xlat
enter
jo
fwait
aaa
leave
jae
repnz
and
es
outsl
or
mov
ucomiss
jp
lock
into
mov
call
rorl
les
sbb
xchg
int3
repnz
pop
fwait
adc
bound
daa
cmp
jecxz
cmpsl
mov
dec
push
sti
xchg
in
cli
xchg
pop
lea
mov
outsl
and
cmp
pop
pop
mov
aad
or
mov
xchg
pushf
test
mov
enter
xor
add
gs
sub
scas
fisubrs
aaa
dec
sahf
popf
repz
push
lods
pop
outsb
aam
ss
repz
xchg
sub
xor
fs
mov
adc
push
cmp
fidivs
push
ds
cmp
fadds
push
xor
mov
popa
movsl
and
idivl
push
cli
jae
test
mov
inc
mov
pusha
andb
jns
jnp
and
jmp
cli
jle
testb
and
cmp
cmp
aaa
and
sbb
into
sub
ret
mov
mov
ud0
jnp
inc
push
iret
mov
xor
movsb
test
je
sub
mov
icebp
push
repnz
in
shll
sbb
insl
shll
jb
cmp
outsb
test
or
pop
call
dec
shll
or
push
cmp
nop
lahf
fcmovnbe
inc
jge
loop
dec
mov
in
mov
or
mov
xor
sbb
je
jge
pop
xor
push
adc
add
xchg
push
fs
jb
out
mov
push
inc
dec
lea
insl
lds
adc
int
mov
mov
into
xor
cs
sub
subl
hlt
jmp
hlt
into
adc
scas
xor
jecxz
adcl
adc
pop
adcl
xlat
cwtl
imul
leave
jbe
cmp
xchg
xchg
hlt
mov
inc
cmp
lds
hlt
jmp
cltd
lcall
xor
inc
popf
push
insb
mov
inc
cmpb
lods
loop
pop
jp
stos
mov
popf
push
bound
lahf
fiaddl
stos
stos
aaa
in
fistl
dec
add
cmpsb
pop
dec
out
out
stc
out
push
push
in
in
xor
out
jecxz
jo
mov
mov
jno
sub
fldl
jb
adc
mov
or
mov
loopne
clc
xor
adc
lods
mov
sbb
cmc
in
mov
inc
repz
pusha
popf
dec
aam
stc
inc
sbb
and
lret
adc
dec
pop
push
xor
and
mov
je
fwait
insb
clc
sbb
in
mov
mov
jmp
shrb
xchg
push
lahf
adcl
jnp
adc
imul
xchg
scas
fs
adc
aaa
test
pop
scas
sub
and
sbb
and
or
scas
sub
push
push
sbb
sarb
adc
bound
int
cmp
cwtl
push
pop
ja
imul
sbb
cmpsl
jae
mov
jmp
inc
adc
ja
in
outsb
mov
push
addl
shl
xchg
out
je
mov
lock
add
mov
std
mov
cmp
out
pop
rcr
xchg
rcll
cli
sub
mov
sti
xchg
insb
cs
shlb
mov
mov
sti
inc
add
aas
fistpl
mov
push
cmpb
loop
das
jmp
sub
adc
mov
dec
loop
jb
sub
jmp
jmp
mov
clc
aam
pop
data16
stos
push
dec
sub
test
jae
push
pop
cmp
dec
or
adc
inc
xchg
gs
inc
jmp
loop
fcoml
xchg
jmp
imul
icebp
xor
movsb
int
sub
lea
cmp
xor
out
daa
push
push
call
test
cmp
inc
popa
push
push
cmp
jmp
and
cli
ret
mov
cld
movsl
inc
or
and
mov
mov
xor
ud0
inc
cmpsb
aaa
add
cmp
sub
adc
fisttps
ljmp
mov
sub
cmp
pusha
notl
sbb
fwait
outsb
imull
adc
jno
movsl
and
ljmp
fistpll
mov
fs
cmp
loopne
out
in
arpl
hlt
dec
movsl
loope
loop
inc
xor
xchg
mov
data16
mov
imul
pop
mov
sub
lds
cld
sbb
mov
mov
pushl
dec
inc
pop
sbb
notl
jle
cld
pop
lret
xlat
push
add
xor
mov
lret
xorl
insb
dec
adc
cmp
xchg
cmpsb
andl
mov
sbb
mov
lock
sahf
idivb
mov
idiv
test
cmp
rcll
add
mov
ret
xchg
rcrb
test
scas
out
ljmp
jne
aad
into
mov
or
ret
out
add
jo
clc
and
dec
and
mov
jl
xlat
mov
pop
mov
pop
rolb
int3
jmp
in
jl
inc
xchg
repnz
loopne
dec
jo
ljmp
das
pop
mov
movsb
rolb
addr16
mov
fcomip
lcall
int3
add
push
adc
and
jne
rclb
out
or
insb
test
mov
cld
adc
xor
subl
ret
and
enter
xor
xchg
ret
fnstsw
pushf
xchg
into
mov
lds
xor
sti
mov
imul
leave
lods
or
sub
and
push
jno
loop
mov
outsb
shrl
cmpsb
ret
mov
stc
add
mov
loope
loope
ret
cltd
jnp
fnsave
sbb
test
fmull
paddusw
and
or
data16
iret
insl
cvtpi2ps
xlat
add
lret
or
imul
and
stos
cmpsl
inc
push
or
daa
insl
xchg
pop
mov
push
jmp
in
out
lret
loop
mov
aad
insb
mov
lret
or
imul
data16
pusha
negl
fmul
add
cmpsb
inc
fs
lock
mov
adc
ds
mov
test
addl
mov
pusha
data16
push
cmpsl
jge
cs
push
scas
ljmp
pop
mov
sub
add
dec
clc
ljmp
xchg
jge
adc
or
mov
sbb
cwtl
pop
jns
sub
std
in
shrl
xchg
jno
test
fstpl
mov
mov
cld
fimuls
jmp
lahf
dec
adc
xor
dec
push
xchg
fmulp
xchg
mov
test
sbb
insb
test
inc
adc
add
add
push
gs
scas
mov
sbb
mov
call
push
ljmp
and
cmp
shlb
cltd
notb
mov
mov
pop
scas
xor
lea
push
in
and
ficompl
or
insb
mov
popf
rcl
xchg
int
xor
repz
adc
pusha
scas
push
lret
jmp
push
cmp
icebp
xchg
mov
cmpsb
fiadds
aaa
mov
movsl
bound
mov
mov
pop
rcll
mov
cmc
push
insl
das
push
shrl
test
fs
mov
mov
scas
addl
jbe
incl
outsb
adc
mov
mov
and
sub
std
adc
pushf
ror
das
imul
mov
loopne
ja
fcoml
cs
mov
ret
xchg
sub
push
rorb
push
fistl
test
lock
stos
out
push
into
xchg
aad
cmp
loope
add
daa
pop
rol
cs
ds
mov
push
aam
sbb
mov
lahf
adc
nop
int
sbb
sbb
fcomp
ret
aam
jns
out
pop
shlb
in
xor
adc
fildl
cs
xor
ljmp
mov
roll
sbb
dec
hlt
lcall
es
sub
lods
mov
adcl
orb
test
aaa
jmp
mov
add
rorl
mov
lahf
mov
xchg
test
clc
push
jp
xor
daa
sbb
mov
mov
or
imul
leave
test
mov
sub
outsb
testb
pushf
push
cltd
mulb
mov
jbe
dec
fs
movb
ret
mov
lds
shll
sub
imul
mov
scas
and
pop
aaa
add
aaa
sbb
insb
cs
iret
sbb
nop
mov
test
jbe
outsl
lcall
adc
cmp
mov
fs
jb
fstpt
leave
cmc
les
shlb
mov
shll
aam
dec
clc
fidivrs
cmp
in
cwtl
outsl
pop
dec
inc
mov
cmpl
dec
add
push
lods
scas
sub
arpl
fisttpl
mov
sti
cli
xchg
jo
xorl
outsl
jo
icebp
jmp
jno
pop
das
ja
int3
add
arpl
nop
pop
and
mov
jl
push
stc
add
sub
pop
fisubl
pop
int3
arpl
pop
sbb
mov
repnz
int3
lret
leave
sbb
int
and
lret
icebp
xchg
les
mov
iret
or
dec
gs
lea
dec
pop
fildll
cmc
repnz
rorb
sub
mov
das
jno
sbb
sbb
sub
and
outsl
insl
imul
dec
pop
mov
cmp
gs
ja
pop
imul
dec
repnz
std
adc
out
ss
les
lock
xchg
xorb
lods
mov
pop
repnz
xchg
fisubrs
push
bound
and
and
push
dec
pop
pusha
sub
jmp
jne
ja
xchg
inc
xchg
lods
cmpb
inc
out
pop
mov
inc
in
mov
int3
pop
jecxz
sbb
jle
jmp
sahf
and
out
fists
popa
push
movsl
inc
pop
cmp
push
pop
movb
pop
sub
lret
or
or
fisubrs
mov
pop
sub
xchg
add
lahf
cmpl
jo
pop
xchg
xchg
push
out
fnsave
xchg
leave
fidivl
enter
xor
add
subl
movsl
notl
sbb
dec
scas
sahf
mov
push
jge
call
xorb
sub
xor
aad
and
ficoms
cmpsb
lcall
out
push
sub
sbb
test
daa
mov
jne
cwtl
adc
lcall
mull
mov
insb
out
mov
push
and
int3
mov
xchg
sarb
testl
mov
add
cld
jbe
decb
mov
jp
bnd
inc
xchg
into
hlt
scas
push
repnz
xorl
mov
arpl
mov
fbstp
jmp
mov
push
jl
xchg
out
test
pop
or
rcr
pop
fcomip
lahf
mov
xchg
repz
mov
push
es
lcall
jmp
sub
andb
cmp
and
dec
pop
pushf
push
pop
mov
aam
add
imul
pop
ljmp
in
sub
insl
sbb
jmp
es
lcall
sub
jecxz
in
out
mov
repz
jecxz
jbe
pushf
cmp
sbb
push
mov
mov
jb
into
pop
lods
cmp
inc
sbb
push
ss
fldl
leave
pop
imul
mov
cltd
rol
shl
push
enter
or
nop
dec
push
jg
lea
test
add
jg
testl
jecxz
sbbb
sub
add
sub
inc
es
xor
sub
sti
pushf
mov
jnp
jmp
stos
xlat
lret
push
sbb
pop
movsb
xchg
addr16
roll
into
sub
js
lret
and
aam
bound
ja
jl
mov
aam
pop
cmp
fcompl
int3
shll
pop
lea
add
stos
fcmove
dec
sahf
test
xchg
mov
icebp
aad
and
mov
pusha
mov
out
pop
imul
mov
xchg
stos
fimuls
out
in
movsl
mov
cmp
icebp
test
icebp
outsb
cld
xor
cld
fbld
ljmp
in
ret
movsb
ds
pop
inc
fnstsw
cltd
jne
dec
pop
jno
scas
popa
sub
int
adc
mov
cli
pop
rcll
mov
sub
ss
cs
icebp
in
inc
popf
xor
push
cs
jns
mov
sub
push
pop
push
inc
push
lods
cmp
sub
mov
sub
out
loop
lahf
dec
or
out
sbb
mov
jbe
dec
shl
ret
imul
jbe
xor
pop
jae
lret
addr16
xor
lret
in
cmp
mov
je
scas
shr
jno
adc
or
popf
ss
je
scas
xor
jmp
jns
mov
cmp
cmp
mov
dec
outsl
sbb
and
orb
imul
jb
data16
mov
add
imul
in
call
mov
jbe
push
jg
adc
stc
insl
enter
cmc
pop
pop
and
mov
mov
mov
out
adc
pop
add
nop
pop
js
scas
and
stos
imul
pop
or
enter
ret
popa
push
dec
std
jae
dec
divps
enter
rorl
xchg
fs
or
pop
adc
pop
or
lret
scas
mov
pop
sub
inc
jg
testl
dec
xor
or
or
sbb
sbb
idivb
test
xchg
and
sbb
xlat
popf
add
and
call
sahf
jge
pop
aaa
adc
ljmp
out
inc
cmp
in
lods
in
fisttps
dec
stos
fldl
xor
sbb
les
in
hlt
jg
adc
sar
clc
enter
ja
inc
bound
cmp
shrb
or
scas
adc
xchg
mov
rcrl
testb
int
mov
daa
xor
lods
xor
call
fildl
xchg
push
adc
jnp
mov
xchg
push
add
pop
pop
shrl
jae
push
sbb
test
movsl
lcall
test
pop
in
mov
xchg
negb
iret
xchg
mov
mov
inc
pop
xor
popl
fwait
push
sbb
ja
movsl
mov
push
fnstenv
jmp
lret
and
jbe
jbe
pop
pop
popa
mov
arpl
dec
dec
sbb
bound
lret
jnp
xor
mov
divb
test
rcrl
jge
insb
cmpsb
pop
and
mov
mov
in
or
and
test
adc
sbb
dec
rclb
std
jge
stos
or
sbb
add
xchg
jge
mov
lds
cmpsb
mov
insb
ret
xchg
mov
outsl
and
and
nop
lcall
cmpsb
les
scas
add
inc
popf
mov
sub
js
in
xor
and
mov
or
hlt
and
rorb
mov
pop
mov
jno
mov
cld
pop
inc
test
xchg
gs
jmp
imulb
sbb
xor
xlat
add
arpl
cmpsl
xchg
cmp
sar
xor
test
int
outsb
inc
arpl
sbb
adc
mov
leave
xor
jne
fsubrl
add
stos
xchg
pop
adc
xor
sbb
repnz
jns
loop
dec
mov
jno
stc
dec
sub
mov
lods
mov
stos
mov
push
cli
xor
mov
xchg
or
sub
push
cmpsb
lods
jp
mov
stos
bound
mov
scas
fmuls
add
mov
jno
arpl
dec
pop
fcmovnu
inc
xor
test
push
adc
mov
stos
fwait
aad
pop
fistl
insb
mov
fmul
lds
cmp
and
add
in
stos
inc
mov
pop
icebp
jg
mov
ds
and
std
jno
sbb
sub
xchg
xchg
adc
pop
mov
and
fstps
std
mov
std
filds
ds
mov
add
incl
insb
add
imul
outsl
fdivs
xor
ret
daa
sarl
out
add
lret
imul
daa
mov
inc
or
andb
sar
add
mov
ret
and
pop
inc
popf
mov
daa
inc
pop
js
iret
rcl
adc
fimull
daa
fcmovu
mov
cmpl
jmp
mov
inc
mov
js
jle
loope
add
mov
jnp
xchg
mov
bound
lods
push
fbstp
ret
cmpsb
lret
push
pushf
stos
xchg
lock
dec
and
and
jmp
movsl
xchg
mov
or
dec
or
mov
lods
stos
ss
mov
mov
aam
popf
mov
or
rcrb
shr
dec
push
mov
repnz
inc
sub
adc
xchg
repnz
push
cwtl
shlb
pop
push
test
dec
fisubl
mov
pop
add
cmpsb
sub
rcll
inc
dec
ljmp
sub
clc
test
inc
scas
add
inc
dec
sbb
and
fxch
daa
hlt
ret
roll
dec
xchg
xchg
push
sbb
call
test
les
jmp
scas
int
mov
call
lods
clc
insl
or
mov
rolb
mov
imulb
xor
sub
ret
add
addb
cltd
mov
outsb
test
push
subl
dec
xchg
or
pop
add
jmp
leave
pop
dec
sbb
pusha
shrb
std
cmc
pop
das
mov
divl
and
call
inc
loopne
push
sbb
push
push
inc
hlt
jecxz
mov
jbe
cmpl
adc
mov
mov
std
hlt
pop
pop
dec
cltd
out
mov
dec
ja
push
lods
and
add
fdivp
xor
mov
jns
lret
pop
sti
je
mov
adc
adc
push
or
cwtl
mov
or
sbb
push
aam
sub
hlt
aad
test
jmp
into
fistpll
jmp
movsb
sub
fbld
mov
xchg
mov
xorl
sbb
subl
and
adc
stos
jae
jge
lcall
arpl
stos
leave
cli
jb
out
loope
xchg
and
ljmp
repz
ss
jae
inc
repnz
cmpsb
fs
pop
stos
fcmovu
sbb
in
mov
sti
in
test
inc
xchg
test
pop
pop
ret
in
pop
push
insb
popa
mov
sbb
outsl
xchg
mov
mul
movsb
call
cwtl
mov
xchg
pop
and
cmp
imul
fs
sub
outsl
test
xchg
mov
addl
mov
push
push
jle
ss
or
filds
xor
pop
and
cmp
outsl
sahf
cmpsl
flds
sbb
jnp
sahf
pop
sub
xor
dec
dec
sub
push
mov
pop
adc
addr16
add
cmpsl
mov
cmp
mov
add
jno
sub
pop
push
pop
inc
imul
xor
fsubrs
mov
cmc
mov
leave
pop
iret
mov
jb
std
mov
movsb
fs
xchg
push
addr16
ret
mov
stos
cld
in
loopne
les
out
adc
pop
arpl
or
cld
out
loope
cli
xlat
push
icebp
or
xchg
addr16
push
push
sbb
mov
xlat
xor
stc
jo
out
pop
test
adc
add
cmp
pop
sbb
je
rcrb
pop
mov
out
adc
push
push
out
iret
test
cmp
jae
or
into
mov
shll
daa
sub
xchg
pop
pop
pop
stos
cmpsb
je
scas
or
enter
scas
ffreep
dec
add
push
shll
inc
or
sub
mov
push
push
mov
dec
and
mov
add
enter
jnp
push
loop
push
in
repnz
adc
xchg
xchg
hlt
in
lret
out
xchg
push
mov
out
sbb
rcll
int
insb
ret
aam
mov
shrl
push
mov
add
test
je
mov
stc
adc
mov
repz
ds
sbb
sbbl
sub
mov
in
repnz
in
dec
enter
insb
fcoml
xchg
lret
clc
or
out
pushf
mov
mov
pop
sbb
repz
sub
in
mov
nop
pop
push
out
mov
inc
int3
ffree
push
xchg
xorb
mov
mov
test
in
jg,pt
xchg
es
dec
aad
adc
xchg
out
fmul
jno
rcll
loop
pop
and
test
sti
sbb
push
nop
add
cmp
adc
mov
or
jno
pop
loope
pop
addb
insb
mov
mov
in
push
and
clc
jg
dec
or
jo
ret
cmpb
rcll
mov
xor
rol
in
leave
cmp
xlat
iret
pop
sbb
xchg
inc
test
push
push
aas
mov
ja
cli
or
sahf
or
adc
loopne
stc
xchg
jmp
inc
mov
add
jmp
push
popf
js
dec
lds
pop
lea
pop
jne
xchg
cmp
jnp
lcall
cmp
sub
adcb
xchg
pop
xor
aam
or
stos
mov
xchg
enter
add
fwait
jmp
jne
mov
ja
sbb
rcll
rolb
clc
or
cmp
ret
sub
push
ljmp
out
outsl
stc
ds
aam
hlt
aaa
aaa
lahf
xchg
out
inc
mov
lret
cwtl
xchg
daa
movsl
adc
mov
ss
xlat
adc
inc
out
mov
repz
cmp
lahf
sub
xchg
xor
popa
fists
sbb
fstl
mov
std
ljmp
xchg
mov
pop
xor
pushf
jbe
mov
in
dec
sbb
pop
adc
push
fs
mov
pop
rcrl
inc
gs
mov
leave
add
les
fcoml
xor
inc
mov
test
sbb
test
mov
jge
inc
lods
out
cmc
adc
sub
iret
test
rcll
daa
pop
mov
cmc
cmpl
or
inc
out
fildl
dec
and
push
cmp
xchg
mov
xchg
and
push
cmp
aam
andb
pop
pusha
out
lahf
sub
push
add
push
jo
adc
push
lret
arpl
and
jns
cmpsb
in
xor
out
pushf
mov
cmp
mov
in
add
loop
insb
lds
imul
jb
out
mov
sarl
gs
mov
sub
and
cmp
ljmp
lock
jo
aaa
adc
ss
ljmp
out
js
pusha
gs
mov
inc
mov
jmp
out
cmp
rolb
cmpsl
enter
iret
push
mov
call
mov
mov
ret
outsb
fsubrs
ret
push
mov
adc
add
mov
dec
pop
scas
push
pop
pusha
xchg
test
push
jge
mov
fstpl
push
jmp
adc
test
jp
cs
outsl
cmp
mov
mov
add
pop
cli
addr16
imul
sub
push
pusha
mov
sahf
adcb
fs
cmpsb
mov
dec
daa
cli
aam
jbe
push
pusha
pop
fnstcw
lods
sahf
mov
pop
sbb
daa
loope
mov
mov
inc
stc
xchg
pop
mov
mov
push
pusha
sub
cmp
daa
bound
aas
dec
arpl
mov
cmp
push
das
xor
roll
test
lods
mov
jae
fstpl
xor
inc
lock
aam
lds
dec
adc
cld
and
dec
icebp
call
int3
mov
push
loopne
add
mov
pop
shrl
mov
xor
popa
shrb
sbb
shll
fnstenv
pushf
ja
mov
adc
stc
add
ljmp
inc
jmp
dec
push
lock
inc
xor
enter
jg
sti
cwtl
add
shll
pop
cmp
enter
jns
push
lods
cmp
fsubr
sbbl
push
xor
adc
mov
pop
adc
push
imull
aam
mov
std
std
mov
addb
lods
int3
loop
stos
pop
scas
cmp
aad
bound
into
out
lock
movsb
add
jne
jo
shll
cltd
sbb
ret
cmp
sbb
add
cmp
test
popf
popf
das
xchg
xchg
in
jno
repz
pop
flds
push
cltd
push
jle
or
and
pushf
mov
cmpsl
mov
cld
inc
mulb
inc
cmp
ds
and
divb
les
in
or
test
rorb
jecxz
cld
repz
fistps
lea
mov
inc
test
lcall
pop
add
xor
shlb
push
loope
fstl
sahf
cmp
outsl
inc
int
call
mov
jo
dec
sub
add
sahf
fistpll
ret
xor
and
push
cmpsl
jae
sarl
mov
mov
pop
push
or
dec
pushf
xchg
dec
inc
jno
ret
subb
and
pusha
bound
jae
jnp
gs
pop
push
jmp
notl
insb
out
xchg
pop
jae
sbb
adc
rcrl
out
insl
fnsave
fistl
lods
or
jl
lret
mov
movl
fsubrs
pop
push
movsl
fnstenv
mov
push
outsl
aad
dec
cmp
xor
mov
push
mov
pop
push
test
cmpsl
sbb
cmp
cmp
mov
inc
out
std
lods
lods
inc
mov
cmpsl
jmp
dec
xchg
int3
adc
ss
out
jmp
add
adc
push
das
xchg
inc
pushf
dec
pop
adc
cmc
mov
fadd
and
lock
mov
sub
shl
adc
cmc
pop
sbb
mov
mov
lret
out
cli
hlt
sub
push
loop
cmc
xchg
aad
sbb
or
dec
bound
lods
xor
jecxz
xchg
insb
dec
pop
test
aaa
mov
xor
cli
sub
aad
ret
and
add
lret
mov
aad
xchg
cmp
outsb
xor
hlt
lret
fdivrl
fldenv
aas
repnz
ljmp
xchg
iret
xchg
test
dec
pop
pusha
push
js
cmp
std
fistpll
push
sbb
and
add
cmpsb
lea
and
inc
push
in
call
pop
inc
out
pop
dec
mov
andl
or
inc
sbb
aam
dec
lret
js
xchg
xor
cmp
mov
fisttpl
jp
and
popf
pop
cwtl
jecxz
add
add
out
mov
mov
sub
xor
push
inc
mov
mov
adc
push
xchg
pop
idivl
or
or
in
sbbl
stos
xchg
jns
pusha
and
ss
inc
pop
loopne
push
mov
orl
sbb
call
mov
cmp
sub
and
ficompl
jp
sub
and
jbe
popf
mov
pop
cmp
dec
cmp
mov
dec
xchg
hlt
push
adc
add
push
in
sub
fldcw
daa
mov
inc
mov
int3
sbb
lock
xchg
adc
lea
dec
mov
leave
pushf
fstps
or
adc
xchg
sahf
mov
hlt
sub
push
jne
stos
lret
pusha
push
sbb
add
sbbl
adc
outsl
lods
jecxz
stos
adc
or
aas
sarb
pushf
sbb
push
mov
stc
push
cwtl
fidivl
mov
sbb
jl
xor
jne
test
imul
scas
ret
pop
adc
and
in
pop
aad
out
test
stos
fimuls
scas
inc
enter
dec
ljmp
fldenv
sti
in
push
cmp
mov
cld
icebp
cmc
sti
mov
inc
lahf
mov
dec
fidivrl
jle
mov
cmpsb
xchg
mov
popa
mov
gs
dec
mov
leave
xchg
xchg
repnz
lds
jae
sub
dec
movsl
in
iret
mov
xchg
push
jb
dec
ljmp
movsl
add
jnp
add
sahf
cmp
ss
and
jae
mov
push
pushl
out
in
in
sub
push
push
sbb
clc
xor
xchg
scas
inc
cmpsl
popf
icebp
add
es
or
std
loope
out
or
mov
push
jo
ss
xor
fsubr
movsl
mov
push
mov
sbb
adc
xchg
pop
ss
icebp
movl
test
push
aas
je
xchg
or
add
outsb
fldcw
std
mov
in
test
xor
inc
aaa
pop
push
test
xorl
in
cmpsl
dec
push
or
push
icebp
xor
ljmp
nop
sub
push
aas
insl
push
inc
mov
mov
repz
add
jp
in
mov
pop
fldl
inc
mov
jo
mov
inc
popf
xchg
jle
loop
xor
dec
sti
rcll
lcall
rorl
pusha
subb
test
adc
pop
pop
lcall
les
fildll
jle
push
mov
cmp
push
xchg
mov
add
cmp
hlt
aaa
sbb
pop
ja
cmpsb
and
add
movb
sbb
sub
and
jl
cmp
mov
imul
js
nop
aad
outsb
jg
insb
gs
mov
add
scas
jbe
adc
enter
lahf
cwtl
mov
and
in
jno
dec
and
jmp
fdivrl
mov
pushf
xchg
stos
xchg
cmp
aad
sub
daa
ret
test
les
jnp
ds
adc
inc
mov
test
addr16
dec
incl
mov
sar
and
out
dec
lahf
fwait
push
sub
mov
rorl
mov
mov
xchg
sbb
fldl
jg
aas
dec
xchg
mov
imul
pusha
mov
add
mov
lock
ljmp
hlt
mov
mov
je
notb
stc
xor
inc
mov
jbe
or
push
cmp
aaa
bound
int
adc
sahf
fcomp
lds
shrl
mov
xor
xchg
xchg
iret
stos
sub
test
int
sbb
xorl
loop
fildll
dec
addl
outsl
hlt
ljmp
push
data16
setge
cmp
pop
popl
mov
fildl
or
imul
pop
bound
aam
outsl
cmpb
xor
repnz
push
fmul
pop
sub
repz
sti
pop
out
fists
adcb
or
pop
cmp
scas
shrl
fs
sub
outsb
jbe
mov
nop
or
imul
movsb
test
add
sbb
and
les
test
insb
repnz
shrb
std
cmp
ds
scas
frstor
xchg
dec
xor
pop
mov
ret
shl
pop
push
dec
inc
cmp
xchg
inc
mov
enter
xor
jns
stos
lret
out
fldenv
idivl
push
mov
inc
bound
sbb
rclb
cmp
out
bnd
hlt
sbb
in
int3
iret
adc
test
test
and
lods
xlat
jns
push
xchg
ja
jmp
sahf
cmp
push
ror
arpl
or
add
cmp
aad
les
inc
out
mov
imul
jmp
push
inc
xchg
lock
push
xor
in
in
inc
pop
cld
bound
dec
clc
ret
loopne
in
mov
shrl
lret
ljmp
mov
adc
loop
imul
push
mov
popa
and
mov
adc
cli
in
sub
push
mov
stos
mov
sub
add
lret
ljmp
sahf
jge
int
dec
call
scas
and
fucomip
scas
loop
jge
sbb
xorb
lret
je
test
adc
jmp
add
cld
push
or
popf
lea
or
cmc
add
push
xchg
or
bound
mov
mov
shll
je
mov
pop
or
and
or
and
cmpsl
xor
fidivrl
inc
cmp
inc
jg
pop
lds
mov
imul
aaa
adc
pop
mov
mov
js
jns
mov
lret
dec
push
loop
cwtl
in
ljmp
cwtl
or
cmp
mov
ja
enter
shr
faddl
sbb
pop
xchg
pop
lret
scas
push
sub
adc
pop
out
punpckhwd
in
push
fdivrl
mov
in
mov
clc
mov
pop
add
and
push
cmc
and
pop
push
lock
stos
fcmovu
mov
out
pop
push
mov
fldcw
imul
push
mov
sub
xor
adc
out
push
int3
lahf
repz
je
ljmp
clc
bound
dec
jne
daa
call
int3
xor
dec
test
mov
mov
add
jae
lods
dec
sub
jae
js
fdivl
push
pop
mov
cmp
rol
add
out
jae
push
sarb
jnp
xchg
add
push
push
mov
nop
cmp
jmp
and
imul
dec
pop
or
mov
lock
cmp
inc
add
or
pop
sub
cmp
es
mov
arpl
bound
es
or
xchg
or
push
push
mov
mov
stos
inc
push
movsb
adc
jno
add
lahf
sbb
sbb
in
dec
add
mov
movsb
cs
inc
imul
movsb
shlb
orb
mov
push
and
jno
cmc
push
jno
in
ss
jae
js
stos
push
push
sbb
xor
push
nop
aaa
fisttps
cmp
fcmovnu
gs
fimull
jge
xor
into
jne
jb
or
cwtl
and
xorb
xor
xchg
mov
sub
notl
xor
ret
mov
leave
jecxz
sub
in
je
add
inc
pop
aam
dec
or
fstl
or
xlat
pop
sahf
mov
pop
ja
mov
mov
movmskps
jnp
imul
test
outsl
lds
push
cmp
outsb
xor
pushf
cmp
mov
push
inc
inc
pusha
leave
aam
cmc
cmpsl
shlb
push
dec
ret
jbe
cwtl
jg
xor
mov
jecxz
inc
lock
test
shrl
js
test
and
movsl
xchg
inc
mov
test
and
or
out
inc
insl
add
in
cmpsl
cwtl
adc
out
inc
les
xchg
and
pop
mov
popf
push
in
and
in
insl
jbe
adc
ficoms
loopnew
rcll
cmc
test
outsl
add
aas
mov
or
pop
sbb
outsb
and
test
xchg
arpl
lcall
scas
ret
je
std
mov
and
mov
repz
ljmp
mov
fildl
scas
cmpsl
and
mov
cmpsb
add
and
ret
pushf
movsb
movsb
add
ljmp
push
mov
ret
mov
int
syscall
popf
icebp
jp
sub
lods
inc
lea
push
sbb
pop
sbb
mov
inc
fadd
cmp
dec
loopne
movsb
out
js
cli
mov
cmpsb
mov
outsl
mov
in
mov
sbb
add
pop
mov
and
cs
arpl
fsubr
sbb
adc
cli
or
outsl
divb
sbb
mov
es
or
je
mov
rol
push
test
dec
in
add
lcall
pop
out
scas
jl
outsb
aas
lods
in
icebp
std
jne
lea
and
es
mov
ficomps
lock
mov
jne
mov
jno
mov
pop
push
jle
out
pop
xchg
jbe
fdivs
adc
xchg
imul
xor
mov
mov
push
lock
cwtl
and
pusha
adc
mov
lret
mov
lahf
xchg
imul
ffreep
adc
scas
movsl
pop
mov
xorl
test
mov
sahf
mov
je
aaa
mov
subb
lea
adc
or
loope
or
aam
push
test
dec
or
stos
ret
das
jb
adc
add
cs
and
push
mov
out
or
cs
sub
repnz
dec
pop
ljmp
or
jge
cmpsb
mov
xor
adc
add
pop
lret
sti
cld
mov
rcrw
mov
icebp
pop
mov
clc
sub
lret
jl
into
push
mov
movsl
imul
xchg
cmp
cld
inc
inc
push
dec
sbb
repz
add
cmp
pop
ss
fmuls
loop
fstpt
xor
outsb
es
clc
inc
or
stos
push
lahf
test
inc
inc
js
xchg
out
roll
xor
adc
dec
cmpsl
jg
int3
movsb
subl
xor
mov
inc
add
in
cwtl
fbstp
inc
fstps
ret
movsl
fwait
mov
or
cmp
cmp
sbb
movsl
xchg
and
mov
mov
add
popf
jns
dec
fs
push
mov
push
out
lods
sbb
inc
movsb
jno
lret
daa
in
mov
xchg
mov
hlt
xor
sbb
mov
cmp
push
ja
out
data16
mull
int
push
hlt
sub
mov
xor
mov
inc
or
clc
mov
mov
inc
aad
xchg
icebp
push
push
in
outsl
dec
sub
enter
xor
pop
in
or
mov
dec
dec
scas
pop
call
cmpsb
imul
add
xchg
or
pop
fs
pop
shll
add
or
iret
jp
mov
inc
ljmp
clc
in
stos
cld
push
pop
jge
pop
add
adc
mov
mov
pusha
add
jp
add
outsb
mov
pop
dec
outsl
out
jo
cmp
xlat
fadds
out
fsts
add
xchg
jno
pop
add
lds
mov
mov
xor
out
call
fiaddl
pop
pop
mov
cwtl
xchg
xchg
icebp
pop
jecxz
or
and
add
dec
scas
repnz
cmp
ds
jno
jp
ret
inc
and
pop
sarb
adc
int3
push
aad
pop
mov
and
dec
incl
or
shrl
pop
push
fs
pop
ss
pop
pop
mov
jl
or
ret
sbb
inc
sbb
outsb
xchg
js
lods
test
cmp
sahf
and
mov
lcall
pop
lcall
mov
pop
mov
xchg
ja
push
lret
scas
es
mov
icebp
mov
xchg
scas
in
or
mov
pop
pusha
push
mov
stos
pop
sbbb
push
and
enter
jae
repz
jecxz
gs
pop
pop
leave
pusha
pop
mov
bound
arpl
dec
xor
hlt
jecxz
cmovno
sbb
inc
in
into
xchg
into
dec
into
cld
inc
imul
loopne
add
movsb
sbb
int
es
and
imul
out
mov
mov
jmp
dec
icebp
cld
mov
adc
gs
jle
mov
addr16
inc
rcll
sub
stc
sub
sub
dec
mov
pop
cmp
jmp
mov
in
aam
push
push
adc
ficompl
mov
xchg
inc
adc
xchg
xchg
xor
insl
roll
inc
lods
gs
fimull
js
pop
sbb
dec
lret
add
mov
out
cmpsb
jb
xor
std
dec
fisttps
aam
adc
in
loope
xor
out
mov
and
insl
hlt
fisttpll
aam
pusha
movsl
sbb
mov
nop
lret
nop
fisubrl
popf
push
data16
mov
lds
cmp
push
pushf
jno
add
pushf
cmp
in
sbb
mov
ror
mov
sub
or
aam
ret
out
imul
fdivs
mov
cmp
push
shlb
mov
pop
rcl
mov
hlt
ds
mov
adcl
and
and
and
xchg
sub
xchg
fs
or
push
inc
pop
into
jne
push
mov
inc
sub
sbb
out
lret
push
lahf
cmpsl
enter
mov
mov
push
fadds
inc
bound
inc
inc
jle
xor
lcall
lods
call
dec
mov
mov
push
out
iret
lret
pop
dec
add
jecxz
enter
mov
pop
js
mov
cld
mov
mov
lods
pop
lods
jge
scas
cltd
sbb
or
push
in
aad
lret
mov
xor
sub
mov
sub
cmp
pop
sbb
insb
fisttps
idiv
add
dec
mov
dec
lock
ljmp
fs
testl
pop
stos
mov
sbb
ja
fcmovnu
das
cmpsb
cmp
inc
mov
aad
xor
js
jo
and
adc
mov
icebp
mov
jno
rep
xchg
cmpl
cmp
cmp
or
mov
mov
in
ja
leave
mov
sbb
sbb
std
fsubr
cmp
faddl
pop
pop
test
push
and
lds
subb
pop
mov
daa
fisttps
pop
mov
into
mov
and
xchg
xchg
jmp
push
mov
or
and
cmp
mov
push
and
jae
mov
divb
negl
mov
or
popf
ror
dec
sti
mov
xchg
sbb
les
sti
in
frstor
mov
push
icebp
xor
inc
outsl
in
sbb
jne
add
div
xor
cmp
mov
push
sbb
lret
mov
sub
aam
dec
inc
pushf
mov
mov
sub
cmpsl
push
pop
test
lods
rcll
sahf
jbe
pop
je
dec
xchg
imul
mov
or
dec
nop
nop
jmp
mov
pop
adc
mov
mov
inc
pop
add
xchg
fidivl
inc
adc
rorl
lret
mov
aas
xchg
dec
iret
lret
mov
outsb
jnp
mov
rolb
sbb
shlb
ret
push
rcr
test
ljmp
std
imul
mov
pop
nop
addr16
in
cmp
jb
sarb
rolb
lock
mov
dec
dec
dec
push
sub
insb
push
lea
cmp
loope
movsb
cmc
jne
repnz
stos
call
repnz
cmp
outsl
dec
jne
mov
push
mov
mov
in
lea
adc
xor
xchg
dec
mov
les
jae
ljmp
orl
jle
pop
cmp
xchg
jns
xchg
dec
sub
cmp
and
jmp
add
push
push
out
gs
in
add
and
push
cmp
mov
push
sahf
sbb
xor
fcomps
inc
sbb
or
inc
nop
clc
mov
or
push
sub
jne
and
cmp
mov
imul
outsb
and
jne
and
pop
mov
adc
and
nop
sbb
or
addb
loopne
rolb
test
aad
fwait
ret
repz
leave
cmc
push
cmpsb
xor
data16
dec
xchg
xor
test
mov
xor
pop
pushf
mov
and
mov
insl
pop
jle
int
mov
sub
arpl
aad
push
imull
fdivrl
fisubrs
jp
fs
mov
or
test
arpl
wrmsr
xor
and
int3
xchg
aas
cmc
fistps
sbb
icebp
and
test
jno
ss
fs
ficompl
mov
xorb
sti
orl
jnp
leave
mov
pusha
scas
xor
test
packssdw
call
jnp
or
das
adc
dec
adc
inc
dec
in
aad
int
mov
add
cmp
xchg
insl
pop
jp
daa
imul
shll
int
ffree
lods
add
std
xchg
push
mov
pop
mull
xorb
es
imul
cld
xchg
les
jmp
imul
lahf
and
aaa
push
gs
stos
pop
ja
push
scas
adc
out
pop
in
int
dec
fwait
subl
push
in
and
cmpsl
cwtl
fwait
inc
jl
loopne
testl
sub
into
dec
sub
sarl
mov
add
fildl
push
mov
pushf
cmp
xchg
adc
nop
les
sahf
push
or
insb
add
push
add
lds
addb
lock
inc
stos
mov
sar
sub
neg
and
xchg
fidivrs
pop
inc
xor
pusha
jmp
mov
push
cli
jle
cmp
sbb
add
movsl
push
mov
xchg
xchg
sub
add
cmpsl
pop
add
sbb
fstps
loop
sbb
cwtl
test
xchg
push
jbe
mov
imul
adc
push
ds
mov
cwtl
lret
sub
scas
or
in
testb
or
jl
mov
inc
or
adc
fnstenv
or
repz
lahf
xor
aaa
loopne
add
xor
cmp
jb
cmp
lahf
jge
mov
mov
add
jp
hlt
adc
pop
pop
nop
fstps
push
sbb
movsb
js
loopne
push
sbb
std
mov
loope
and
cmp
pop
jmp
add
sbb
aas
xchg
loopne
or
sbb
mov
rcrl
dec
sbb
outsb
inc
sub
iret
xor
lret
imul
lea
cmc
or
mov
dec
ret
jge
push
arpl
aam
dec
fmul
fsubl
adc
sub
je
mov
scas
lret
add
aam
add
push
push
out
jns
jmp
xor
dec
mov
add
outsb
push
mov
sbb
jl
leave
scas
cmc
sub
sti
mov
enter
movb
and
push
mov
mov
fsubrl
lock
xor
dec
xchg
es
xor
ss
mov
sbb
out
subl
je
dec
add
mov
xchg
ds
or
enter
jbe
push
je
inc
push
xlat
xor
jnp
dec
adc
or
adc
mov
mov
vandps
btc
daa
pusha
test
aas
dec
and
mov
mov
mov
ds
xor
sub
divl
popa
pop
sub
inc
leave
sbb
xor
test
and
dec
inc
pop
lret
and
sti
adc
ds
mov
ds
data16
or
aad
cmp
mov
icebp
push
dec
mov
int3
or
jmp
or
or
dec
pop
pop
idiv
jle
fneni(8087
jge
inc
iret
or
mov
adc
mov
inc
cli
std
push
add
pop
mov
push
or
push
mov
dec
in
xchg
insb
xchg
mov
xchg
ljmp
mov
sub
cmpsb
pop
push
incb
je
sub
cmp
xchg
mov
pop
push
pop
das
loop
imul
scas
int3
mov
fcomi
pop
out
jle
fcoml
mov
cmp
lods
dec
pop
pop
add
mov
in
addr16
pop
mov
addr16
push
pushf
or
xchg
rorb
lret
adc
roll
jl
test
shll
dec
sbb
dec
fisttpll
andl
jno
mov
pop
dec
rcll
xor
sbb
repz
incb
andl
rcrl
arpl
and
fbstp
adc
and
cmp
mov
and
cmp
paddw
cltd
push
shrb
adc
adc
mov
jg
jecxz
adc
cltd
fdivrl
scas
cs
mov
pop
sub
cli
jge
xchg
pushf
dec
or
pop
and
aas
inc
and
rol
idivl
push
dec
or
test
sbb
mov
sub
or
add
test
out
loop
adc
lcall
movsl
dec
jb
push
dec
rcll
pop
gs
pushf
mov
mov
cli
add
xor
in
jnp
cs
pusha
mov
pop
movsb
jbe
mov
fwait
add
sarb
and
sub
add
mov
mov
mov
ds
enter
push
es
sub
xchg
orb
sbb
int3
out
test
fnsave
adc
mov
ror
jae
mov
cmp
mov
incb
and
imul
xchg
cwtl
dec
aad
inc
mov
mov
in
je
and
push
xchg
je
push
pop
out
out
cmp
xchg
xor
divl
jo
mov
adc
sbb
sub
cmc
ret
push
cmpsb
sub
in
push
sbb
pop
lock
iret
das
nop
jns
xorb
shrb
in
pusha
push
in
test
add
xchg
insl
cmp
sar
arpl
or
xchg
and
sbbb
scas
outsl
push
xchg
jl
sub
lahf
inc
jle
arpl
jecxz
inc
dec
inc
leave
std
insb
iret
jmp
arpl
repz
sti
and
outsb
lock
xor
pop
sahf
shrb
notb
lcall
jae
pop
lods
mov
xlat
cmp
mov
push
jo
pop
sbbb
mov
popa
leave
imul
stc
mov
adc
les
or
mov
rcll
mov
cmp
sub
movsb
out
add
imul
ss
mov
xor
or
fmuls
jmp
stos
push
xchg
xchg
sbb
sbb
sar
adc
and
inc
sti
jae
push
ja
push
lods
fidivrl
std
das
or
dec
pop
fnstcw
repnz
repnz
out
ret
cmp
into
cmp
out
push
mov
cltd
enter
lods
aad
adc
sub
popa
sbb
lret
mov
and
fld
sbb
add
aad
insl
mov
fldenv
scas
mov
and
add
in
xchg
repz
outsb
mov
push
cmp
xor
test
cmp
xchg
mov
jg
scas
outsl
scas
out
iret
mov
xor
push
cmp
sarl
mov
add
outsb
mov
jno
mov
jnp
cltd
mov
cmp
push
loope
psubw
movl
lds
out
jmp
into
cld
outsb
xor
arpl
test
dec
dec
imul
jg
jmp
sub
or
fisttpll
int
jle
lds
dec
ja
xor
mov
push
lahf
xor
cmp
dec
insb
mov
sub
stos
in
test
test
pminsw
fdivr
shl
mov
pop
or
cmc
mov
fidivrl
sbb
push
add
aaa
inc
leave
mov
inc
into
or
pop
jo
mov
bound
sub
fsts
lods
push
or
popa
lods
fs
jns
mov
lods
adc
pop
sub
cld
loope
dec
bound
mov
pop
pushf
mov
push
subb
jge
lcall
imull
filds
inc
xor
jl
mov
cli
int
mov
sub
loop
insl
mov
mov
pop
lea
add
data16
in
into
mov
bound
cmp
ss
hlt
mov
sub
dec
es
inc
in
sub
outsb
jl
sub
and
testb
xchg
adc
mov
dec
add
sub
fdivrs
std
lds
push
jne
call
icebp
out
adc
lods
lcall
mov
inc
jp
rclb
andl
out
hlt
loop
in
outsb
xchg
addb
push
les
cltd
inc
nop
sub
xchg
fsin
ljmp
push
int
cmp
inc
ror
xchg
add
xchg
jae
fimuls
jmp
cmp
or
add
lahf
aaa
lods
push
pop
movsb
movsl
mov
in
xor
je
call
inc
xchg
testl
adc
into
into
cmpsb
pop
daa
sub
cmc
cmp
roll
ds
jge
or
mov
mov
js
imul
popf
xchg
pop
fnstsw
pop
lds
stos
xor
mov
and
ja
or
imul
loopne
test
fisttpll
mov
ror
clc
pop
cmp
cmp
stc
jno
rcl
xor
cmp
mov
mov
cmpsl
sbb
test
push
xor
sub
xchg
fisubrl
adc
mov
cli
orb
dec
cmpsb
test
add
or
lahf
sub
xchg
movsl
lret
fiadds
mov
mov
ficomps
imul
rcll
loopne
insb
ret
mov
je
pop
rcr
sub
and
push
pusha
cmp
jge
push
push
dec
sub
mov
fwait
jp
push
or
jns
xor
cwtl
mov
aas
jns
inc
fists
mov
push
in
iret
xchg
addr16
lcall
pop
jge
jbe
cwtl
push
stc
out
sbb
xchg
int3
mov
xor
adc
inc
aaa
stos
jl
les
dec
psubb
jne
dec
cld
and
and
sbb
les
sub
jmp
iret
mov
lahf
inc
nop
jmp
loop
int
sub
xor
jae
cmpsl
ret
mov
fwait
inc
loop
xchg
ljmp
inc
or
lcall
dec
aaa
movsl
push
pusha
inc
and
adc
adc
rcr
adc
push
and
pop
mov
push
jmp
pop
imul
pop
xchg
or
sub
sbbb
lods
test
jge
mov
lret
and
int
lret
stc
lahf
clc
or
cmp
dec
flds
das
lret
sbb
int
pop
and
scas
mov
je
pop
hlt
rolb
jae
xor
jle,pn
pop
int3
or
pop
xchg
sub
pop
in
imul
test
or
sbb
mov
sahf
mov
xlat
dec
into
or
sahf
mov
lahf
stos
mov
out
loop
sub
leave
nop
cld
stos
test
rol
enter
mov
add
les
xchg
daa
ja
mov
lcall
inc
xchg
push
xor
cli
jmp
cmpsb
push
call
data16
jns
pop
fs
adc
dec
cwtl
adc
ret
aam
cmpsl
call
or
ror
out
pop
fs
sub
xor
pusha
addl
aad
popf
dec
cld
fisubrs
popa
fstpt
push
leave
push
mov
push
mov
lods
cmp
lret
cmp
ss
cmc
cmp
mov
arpl
and
inc
xor
stc
ret
jnp
xor
jmp
mov
add
clc
call
lock
or
mov
in
push
xchg
std
sahf
test
stos
cld
add
pop
aas
mov
adc
cmp
mov
movsl
sub
lcall
imul
data16
dec
sub
xlat
in
or
flds
sub
mov
push
mov
sti
xor
and
sub
mov
lcall
ljmp
pop
int
mov
sbb
push
jbe
inc
and
lcall
insb
sub
das
push
insl
sbb
adc
leave
jp
dec
jmp
popa
mov
xlat
add
orl
lcall
fcoml
lods
ret
pop
sbb
ja
mov
and
int
stos
jp,pn
jl
popf
out
cmp
xlat
stos
aad
xor
push
pop
jge
lods
mov
xchg
ds
cmp
push
mov
pop
sbb
add
xchg
movsl
fs
jl
rcrb
repz
dec
inc
jge
ja
adc
fildl
pop
xchg
and
imul
popl
pop
xor
or
mov
adc
push
cmp
or
shr
inc
dec
jecxz
pop
mov
sub
jae
enter
pop
pop
addr16
fcomps
cmp
ljmp
dec
fldcw
pop
dec
out
mov
cmpsb
leave
jmp
int3
std
out
fcoml
fisttps
push
or
insb
outsl
imul
dec
ljmp
xor
or
mov
dec
xor
pop
in
cwtl
xor
loop
cmp
jo
adc
and
sub
in
enter
inc
dec
sarb
mov
fisubl
xor
xchg
cmp
xchg
mov
xor
in
push
cld
jecxz
and
sbb
divb
outsb
inc
dec
int
mulb
fldl
cmp
jbe
cmp
dec
xchg
push
add
dec
rcrb
js
and
xchg
cwtl
mov
cmp
mov
ljmp
stc
adc
loopne
popa
mov
int3
sub
jl
mov
mov
lea
rcl
xchg
lods
sub
in
pop
popa
xchg
pop
cwtl
loopne
jle
insb
jb
sbb
and
sti
jecxz
mov
inc
fildll
push
sub
mov
cmp
repnz
inc
inc
xlat
cmpsl
pop
sub
push
mov
scas
sub
inc
push
pop
fdivr
fistpl
push
sti
mov
xchg
jle
ret
daa
dec
out
add
lods
dec
add
clc
fbld
dec
add
jb
push
push
dec
or
push
aad
or
loop
sahf
out
je
mov
sarl
lock
fwait
jae
fadds
jno
lock
fs
pushf
in
addb
adc
adc
dec
jae
movsb
dec
cmc
cmp
xchg
movsl
adc
ficomps
xorb
fstpt
cld
mov
cli
mov
ljmp
scas
incl
fmull
fucom
out
cwtl
sbb
insl
aas
rorb
pop
ret
jg
lds
pop
add
data16
mov
xor
dec
inc
sbb
xchg
mov
mov
inc
mov
punpckhdq
aaa
and
or
sub
push
out
cltd
sbb
ret
pop
lahf
push
out
jae
xor
cmovns
fdivr
xor
scas
push
adc
sbb
cmc
xchg
scas
stos
mov
sahf
sbb
ja
mov
cmp
cmp
stos
lcall
and
lock
dec
xor
push
pop
shr
lea
sub
cwtl
enter
in
adc
testl
shrb
loop
push
mov
add
xchg
sbb
stc
xlat
lcall
mov
or
insb
inc
mov
mov
dec
adc
daa
mov
aaa
add
aad
xchg
pop
dec
les
jge
inc
add
xchg
dec
mov
js
icebp
call
loopne
mov
xchg
ja
jb
sar
mov
cmpl
stos
std
icebp
push
adc
popf
mov
repz
sub
icebp
dec
pop
pop
andl
sub
nop
ljmp
mov
mov
mov
cmp
scas
xchg
mov
stos
outsl
cli
mov
lods
in
clc
lahf
and
push
aas
pusha
cmp
dec
cmp
stc
sub
sbb
cli
dec
imul
xlat
push
ss
add
popf
push
or
and
sbb
stos
jb
aaa
mov
and
mov
lret
inc
mov
or
test
pop
dec
xchg
push
lds
pop
arpl
and
push
xor
and
push
insb
sub
lcall
lcall
mov
mov
xchg
push
pop
or
and
pop
imul
pop
xor
sbb
jns,pn
lcall
sub
in
cmp
pushf
push
lea
rclb
dec
fildll
adc
push
xor
fimuls
inc
fidivrs
repnz
cmp
cld
cmp
xlat
lcall
mov
icebp
lea
mov
or
push
loop
push
fcmovbe
insl
push
mov
xor
je
cs
xchg
cltd
es
fidivrl
or
dec
and
int
inc
mov
outsb
jb
xchg
pushf
pop
jb
aad
pop
sbb
outsl
scas
pop
dec
adc
mov
sahf
int3
jno
pop
adcl
shll
stos
and
stos
jnp
mov
xchg
pushf
lods
mov
fistpl
xor
xor
xor
sbb
add
ret
inc
mov
sahf
push
inc
insb
icebp
mov
dec
mov
ficompl
sub
pop
jge
push
push
popa
xchg
dec
fimull
enter
xchg
and
mov
fistl
xchg
jb
adc
mov
pusha
sbb
je
data16
mov
lds
pushf
imul
fisubl
lret
cld
lahf
dec
sub
jg
cmp
lods
xchg
cli
inc
insb
fwait
mov
and
cmp
nop
in
mov
ror
leave
mov
cmp
xor
jb
jg
cmpsl
and
push
push
loop
jle
rolb
movsl
subl
push
sub
roll
jnp
mov
mov
pop
or
popf
popa
int3
or
fldenv
pop
in
insl
iret
xlat
jnp
call
inc
cltd
cmp
nop
pop
sbb
jecxz
out
out
inc
xchg
mov
call
test
insl
sub
das
loop
cmpsb
pop
sub
inc
sub
mov
jbe
inc
fwait
sbb
and
mov
cld
in
pusha
ds
xchg
pop
leave
outsb
outsb
repz
lret
lock
or
loop
mov
xor
mov
adc
add
or
inc
mov
push
cmpsl
mov
and
mov
mov
aas
daa
clc
mov
or
ja
orb
ljmp
hlt
lea
xor
cltd
mov
leave
popf
cmpsb
adc
jne
xor
mov
push
inc
sbb
roll
loopne
aas
insl
mov
adc
jb
mov
or
dec
and
adcb
and
cmp
pop
leave
cmpb
cmp
addr16
data16
push
pushf
mov
xlat
mov
push
in
test
push
int
mov
stos
and
jne
rcll
fcomps
cmp
bound
outsb
cmpsb
jbe
stos
ret
out
in
pop
out
jg
repz
push
sbb
pop
pop
sar
lret
test
sahf
call
mov
pop
outsb
pop
mov
lock
pop
jg
xor
cmp
xchg
lods
call
sbb
and
scas
jno
inc
test
or
out
and
lods
dec
fsubrs
in
jg
lods
cmp
xchg
sub
jmp
mov
push
sbb
xlat
adc
sub
scas
lret
lahf
and
cmc
outsl
xlat
cli
dec
fs
push
loopne
pusha
xor
ja
jne
mov
out
mov
out
xchg
nop
sub
jbe
fidivs
mov
mov
lods
inc
lcall
enter
pop
and
pop
mov
mov
ficomps
movl
xchg
cmpsl
inc
cmc
sbb
adc
sub
pushf
mov
mov
mov
subb
repnz
popf
jmp
and
or
cltd
sbb
or
xchg
push
ljmp
popf
sbb
mov
and
sub
adc
or
out
jae
mov
and
aad
bound
hlt
add
cs
into
jle
and
and
mov
pop
jns
ror
inc
add
pop
cmp
dec
fwait
lock
sub
pop
ret
dec
xchg
mov
out
mov
ret
les
int3
arpl
cmp
sbb
push
divl
push
add
pop
cli
add
lods
aas
aaa
xchg
or
andps
negb
cltd
xorb
lods
sahf
push
mov
sub
aas
movsb
mov
dec
jl
cmp
cmc
out
push
mov
sbb
sub
pushf
out
inc
je
or
fdivs
push
clc
sarb
shll
jne
outsl
xchg
mov
mov
mov
jno
movsb
test
cltd
lea
pcmpeqw
fistpl
jnp
dec
das
enter
movsb
add
js
int
or
lcall
out
and
subb
add
cmpsl
sub
push
mov
scas
daa
icebp
out
sbb
hlt
in
in
pop
dec
mov
out
lea
out
je
jmp
fistl
sbb
fwait
into
inc
mov
adc
data16
shlb
fsts
dec
mov
fwait
ret
imul
xchg
repz
sbb
std
movsl
stos
inc
shll
push
adc
push
ds
mov
jmp
enter
call
lret
mov
mov
das
leave
shrl
sbb
mov
scas
jecxz
outsl
clc
js
addb
decb
arpl
fdivl
push
imul
push
pop
sbb
sbb
movsl
stos
or
inc
mov
add
jnp
frstor
ret
aad
rolb
test
shll
fisubrs
lahf
iret
lahf
aam
int
mov
in
stos
adc
insb
cmp
add
cmp
mov
test
flds
dec
dec
jp
jmp
ret
sub
or
xor
ret
add
cmpsb
mov
jmp
add
out
push
push
dec
push
fstps
dec
mov
pop
ss
pop
je
xor
cs
daa
jg
inc
rclb
mov
or
xlat
clc
scas
test
push
sar
leave
sub
cltd
leave
xchg
es
stc
xor
stos
push
mov
in
pop
xchg
jmp
in
cmpsl
inc
dec
ficompl
loope
pop
cli
dec
outsb
adc
fildll
or
sbb
cmp
lock
adc
imull
in
mov
pop
lea
mov
fimuls
add
out
and
ljmp
adc
cs
adc
loope
scas
jmp
adc
aad
xor
push
dec
mov
jp
outsl
xlat
pop
cwtl
movsl
and
insl
mov
push
ss
sbb
push
dec
mov
hlt
ret
sbb
jne
xor
push
stc
sahf
jl
xchg
jge
imul
jmp
sbb
jae
imul
repz
bound
push
mov
in
pusha
stos
addr16
pop
xchg
cmpsb
mov
add
push
sbb
fs
lock
ret
imul
jmp
jbe
incb
mov
pop
scas
mov
test
inc
cmp
adc
std
xor
push
jecxz
cld
pop
sbb
test
mov
mulb
popf
add
ja
aas
psrld
out
mov
rcl
int
pop
test
xchg
mov
inc
lret
syscall
mov
jae
addr16
mov
stos
shll
add
je
sbb
mov
and
adc
mov
dec
xor
in
popa
jl
pusha
add
and
add
in
xchg
jno
inc
out
cli
sti
add
jg
sarb
jb
mov
into
incl
pop
xchg
push
dec
sub
pop
aas
sub
fnstcw
adc
mov
pop
frstor
imul
pop
add
leave
jo
mov
sahf
or
xchg
push
repnz
fimuls
out
pop
rcrb
jl
pop
movl
cmpsl
test
add
nop
test
aas
mov
iret
xor
in
pop
adc
push
or
xor
jae
call
cmpsb
mov
int
aad
or
loope
jb
jmp
inc
nop
cmpsb
sub
push
sahf
add
lods
lcall
mov
dec
insb
sub
jp
pop
xor
mov
icebp
out
mov
sub
adc
sub
outsl
fcoms
cli
push
leave
mov
dec
mov
fdiv
mov
out
frstor
call
fisubs
pop
inc
and
je
in
mov
jne
addr16
cmpsb
mov
cmp
sarb
lods
nop
mov
xorl
ljmp
jge
xchg
loope
clc
sbbl
pop
inc
test
sbb
cs
add
jg
in
lods
mov
loope
and
pop
jae
aam
loopne
dec
adc
mov
mov
repz
movsl
inc
sbb
loop
out
mov
pop
push
mov
add
daa
jle
adcl
pop
xchg
xor
ret
cmpsb
xor
in
popf
lcall
jecxz
fstl
aaa
or
push
daa
lods
pop
jbe
and
cmp
pop
js
or
push
mov
and
aad
add
enter
data16
nop
sbb
sbb
push
out
sbb
call
and
inc
rclb
cltd
xchg
test
inc
ds
adc
lods
sub
push
fs
cmp
rcl
cwtl
icebp
or
mov
roll
inc
inc
dec
vpmaxub
int
ja
jmp
aad
daa
fsubrs
add
add
xchg
ret
pop
int
cli
jle
shrl
lods
mov
jle
mov
pushf
rorb
and
fs
xchg
sbb
fidivl
mov
jb
imul
test
je
push
lret
repz
je
popf
ljmp
adc
adc
push
enter
rorb
roll
sub
jae
int3
xchg
xlat
xchg
push
or
cmp
addl
adc
aas
aas
in
push
add
scas
int3
jb
add
mov
fisubl
int
inc
add
cli
cmpsl
icebp
push
dec
sti
cmp
in
xchg
mov
or
icebp
xor
xor
out
std
inc
lock
pop
mov
insb
xor
arpl
arpl
sub
push
loope
cmpb
ret
loop
insb
imul
call
inc
inc
push
mov
or
popf
jns
mov
mov
dec
push
lea
insl
push
lods
jl
js
out
outsb
xchg
jg
inc
leave
sbb
arpl
es
dec
xor
and
xor
xorb
mov
push
and
popf
pushf
popf
or
arpl
pop
dec
lret
or
xchg
outsl
ljmp
xchg
and
mov
dec
jle
mov
adc
in
push
inc
call
loopne
jle
sub
or
xchg
incb
cmp
ds
outsb
ja
call
call
fnstenv
pop
lods
movsl
mov
out
filds
ds
sbb
aam
push
xchg
xchg
repnz
and
pop
mov
mov
mov
cld
in
mov
jmp
jle
addr16
dec
aad
ffree
pop
mov
inc
xor
mov
fcomps
push
xchg
add
adc
lods
cmp
cmp
cmc
stos
mov
rclb
jmp
std
das
in
mov
pop
idivl
enter
and
rcll
mov
out
test
mov
ja
dec
or
pop
sub
les
orb
pop
loopne
insb
mov
add
push
or
popa
test
xchg
jae
popa
fs
adc
iret
idivl
xor
movsb
sbb
xor
push
jns
cmp
xchg
inc
mov
pop
push
cmp
in
jmp
push
fdivrp
sbb
jecxz
dec
leave
sbb
pop
pusha
mov
sbb
sub
shrl
lret
nop
mov
les
push
jge
add
inc
sbb
inc
fidivs
push
pop
in
jl
pop
mov
push
push
sbbb
inc
xor
into
js
add
xchg
test
mov
aas
jbe
jecxz
push
es
adc
push
add
add
mov
out
jg
inc
jl
es
adc
pop
sub
out
hlt
push
mov
pop
and
imull
roll
int3
push
mov
inc
mov
out
pop
enter
xor
in
and
outsl
icebp
int3
push
fildl
pop
dec
push
add
push
aas
add
mov
xchg
fimull
arpl
fs
pop
outsl
scas
mov
mov
out
stos
outsb
mov
and
in
lds
push
mov
shl
repnz
jns
fs
xlat
sub
and
mov
sbb
dec
lds
pop
sub
xor
aas
jecxz
adc
inc
jne
ss
lods
mul
jp
dec
push
dec
into
xchg
imull
jge
jl
sub
and
in
movsb
push
lret
cmp
sub
adc
push
push
ret
mov
mov
push
leave
popa
int
les
xchg
subb
and
sahf
dec
out
cmp
mov
push
loope
mov
and
test
rcrl
xchg
in
or
and
ja
jns
negl
push
arpl
or
dec
lods
jbe
xor
mov
and
xchg
push
adc
bound
in
add
insl
xchg
xchg
and
mov
jmp
out
or
bound
mov
lcall
push
cli
inc
int
test
inc
inc
mov
aad
push
and
je
negb
lock
fcoms
pop
imul
inc
push
mov
dec
aad
fwait
mov
push
inc
jnp
aad
jbe
push
adc
outsl
push
fmuls
ror
aad
jb
dec
inc
int3
pop
or
imul
jnp
jmp
mov
imul
jle
inc
loopne
push
jge
and
rcrb
or
stos
and
xor
cltd
cmp
or
hlt
dec
push
cmp
xchg
rcrb
jmp
pop
fcoml
and
test
jle
ret
adc
mov
or
mov
sbb
jo
sbb
arpl
mov
jns
jecxz
and
lods
sbbl
mov
repnz
adcl
std
nop
cmp
int3
fdivrs
std
mov
dec
mov
cmp
pop
daa
and
mov
mov
and
mov
test
pop
push
ret
push
ret
dec
add
pop
in
ret
fcmovne
cli
add
cmp
mov
xorl
outsl
testb
jg
incl
cmp
add
sbb
ds
lahf
pop
pop
imul
adc
cwtl
dec
sub
jl
lcall
adcb
cmp
adc
jmp
iret
mov
jnp
push
jae
dec
or
test
xchg
rclb
push
pop
fdivrl
xchg
sbb
xor
push
mov
xor
mov
bound
mov
jne
jl
adc
jecxz
test
out
push
inc
sub
dec
sub
cmp
xor
push
add
add
mov
jno
insl
in
dec
push
enter
dec
fldl
mov
jp
mov
mov
adc
mov
cmp
mov
inc
push
loope
mov
mov
jno
imul
push
xor
jb
dec
xchg
loope
lods
jo
pushf
adc
adc
lahf
insb
outsb
jae
adc
sahf
jge
jbe
dec
xor
push
push
ja
mov
cmpsl
mov
hlt
repz
lcall
mov
cmp
shrl
adc
mov
divb
das
mov
into
pop
in
sbb
clc
movsl
js
dec
xor
pusha
cmp
js
insb
xchg
mov
xchg
jo
sar
dec
xchg
cmp
inc
push
lret
test
or
xchg
dec
sub
cmpsb
xchg
outsl
test
mov
in
mov
ss
or
repnz
mov
mov
push
jle
xor
dec
icebp
das
aas
push
jmp
pop
pop
mov
sbb
int
imul
sub
mov
shll
pop
cmp
push
outsl
ret
jp
fistpl
repnz
shl
xor
jg
pop
cmc
and
stos
pop
xor
jmp
fwait
gs
xor
iret
pushf
test
adc
xchg
in
mov
dec
xlat
sub
jle
shrl
lods
popa
jns
arpl
popa
mov
leave
push
jge
lahf
pop
xchg
rorb
and
inc
lods
pop
jp
in
popa
inc
rclb
test
fsubrs
inc
lret
lock
stc
imul
insb
pop
js
ret
inc
iret
mov
mov
push
push
or
xchg
movsb
mov
js
mov
or
test
adc
and
test
aas
xchg
push
or
mov
xchg
popa
fwait
mov
insl
jle
pop
mov
push
scas
and
push
insb
outsl
loope
addr16
dec
jge
jnp
rcll
gs
mov
inc
cmp
pop
pop
mov
or
enter
sub
adc
adc
sbbb
dec
inc
ret
mov
loopne,pn
jo
enter
scas
pop
add
adc
test
pop
push
inc
xchg
and
jmp
sbb
cmc
mov
pusha
mov
mov
std
mov
mov
decb
das
cmp
mov
adc
outsb
stc
push
not
sub
sub
leave
mov
mov
in
jle
movl
pop
fadd
jmp
addr16
cmpsl
xchg
bound
hlt
out
and
mull
insb
imul
fs
mov
or
into
cltd
es
or
shll
into
loope
push
mov
icebp
icebp
in
dec
loope
pop
dec
pop
mov
mov
cmc
push
mov
mov
cli
insl
add
es
pushf
or
cld
cli
push
mov
dec
mov
out
enter
push
push
pop
xchg
test
imul
shrl
pop
mov
inc
lods
movsb
loopne
adc
xlat
pusha
xor
popa
inc
and
add
mov
in
mov
sub
push
outsl
sti
rorl
and
push
jmp
sbb
dec
in
cs
dec
mov
test
cmp
sti
mov
xchg
ss
data16
dec
sbb
movntps
inc
mov
incl
insl
in
out
mov
mov
outsl
xor
sub
mov
xchg
push
pop
jns
mov
mov
in
push
sbb
inc
aad
and
add
cltd
add
test
or
in
fnstcw
cmp
add
cmpsb
or
iret
arpl
gs
data16
dec
pushf
mov
ss
daa
in
pop
push
leave
pop
inc
fsubl
lds
lea
out
in
mov
repnz
fnstenv
in
dec
mov
mov
fstl
addr16
mov
fwait
in
dec
push
repz
imul
addb
negl
or
inc
add
jno
mov
fcomip
adc
out
in
jb
add
mov
push
lds
mov
push
jo
out
jmp
pop
inc
push
decb
sti
ja
test
xor
dec
mov
pop
sub
push
clc
mov
and
gs
pushf
mov
scas
pushf
mov
lock
mov
data16
gs
pop
enter
call
jmp
sti
int3
mov
outsl
in
xrelease
mov
stos
dec
adcl
or
adc
daa
jno
mov
cmpl
xchg
inc
or
shlb
xor
loop
jp
stos
or
cmp
repnz
push
prefetch
sti
sub
xor
repz
push
cs
out
xor
lock
lods
mov
test
mov
cwtl
mov
jle
jne
movsl
mov
inc
ret
or
and
adc
inc
movsl
cmc
or
outsl
jmp
es
test
mov
add
jg
jns
aam
add
scas
iret
xchg
add
sub
arpl
mov
dec
sbbl
sbbb
mov
xchg
cmpsl
cmp
mov
xchg
faddp
roll
cld
jno
xchg
dec
mov
sbb
nop
pop
loopne
daa
mov
xor
loopne
inc
sub
mov
cld
mov
enter
movsl
adc
mov
out
mov
dec
sbb
adc
jecxz
inc
adc
jl
mov
or
mov
inc
dec
loop
add
rcrb
jmp
xor
fcompl
xor
mov
inc
std
xorl
rorl
aas
into
lret
fisttps
js
or
lea
and
sub
arpl
jp
sub
mov
roll
mov
pushf
setbe
xor
incb
test
mov
xchg
lods
mov
lock
inc
cmp
xchg
movsb
xor
lods
call
sub
js,pn
pop
pop
popa
mov
cs
dec
mov
fsubl
adc
inc
adc
push
bound
cmc
popa
dec
cmpsb
out
inc
scas
mov
cmp
outsb
push
es
inc
mov
jg
push
and
cmp
in
mov
xchg
bound
inc
inc
movntps
je
pop
int3
sub
flds
and
fsts
cs
repnz
inc
jae
in
fistpll
out
xchg
jg
cpuid
fldl
xlat
inc
cmp
xor
sbb
adc
xor
sub
outsl
repz
faddl
push
add
movsl
cmc
pop
adc
jbe
pop
dec
mov
or
out
fnstenv
lods
out
push
mov
cmp
arpl
mov
sub
inc
les
dec
add
xor
sbb
jmp
add
or
jecxz
test
ljmp
loop
icebp
loop
mov
ja
cmp
and
and
cmpsb
xor
sbb
jp
jnp
adc
jno
inc
fstpl
lret
daa
and
and
bound
fidivrs
inc
dec
stos
adc
xor
jne
mov
xor
test
pop
mov
loope
imul
jle,pt
sub
jne
inc
aas
shlb
rcr
or
push
mov
pop
pop
sbb
or
imul
add
jns
xor
jg
mov
std
jmp
sti
scas
clc
loop
sub
sub
jbe
ret
lock
adc
aas
push
hlt
out
mov
and
push
cld
lahf
or
stos
sbb
xor
cmpsb
xor
xchg
mov
xchg
adc
aas
stos
mov
sub
test
mov
xor
sub
xchg
jmp
sbb
jmp
aam
aaa
mov
jbe
and
sub
mov
bound
xchg
or
mov
xchg
loopne
adc
push
adc
xlat
adc
loopne
pop
lea
popa
sub
jle
push
push
mov
xor
aam
test
nop
fdivrs
add
xor
sbb
or
mov
jle
jb
lods
xorl
pop
lds
rcl
scas
hlt
sub
cmp
lea
sub
out
popa
mov
scas
test
jl
pop
pop
shl
insl
ja
jns
std
adcb
imulb
js
mov
aam
dec
enter
sbb
shl
scas
pushf
pop
mov
push
addr16
inc
pushf
rol
push
sbb
clc
jecxz
inc
sahf
mov
push
addr16
dec
ja
add
lcall
int
and
cmp
aas
sbb
mov
mov
push
pop
rol
fcoms
fiaddl
or
sti
push
mov
xchg
ds
dec
xchg
sub
fs
decl
mov
pop
sbb
add
loopne
push
mov
add
sub
xchg
cmp
loope
mov
cs
xchg
in
cmp
enter
arpl
andb
sti
popf
gs
out
rolb
jne
pushf
out
loope
jl
ljmp
hlt
pop
sbb
ret
mov
repz
cmp
pop
arpl
test
int
xchg
mov
addb
sub
adc
cmp
or
shl
mov
xlat
std
dec
push
jle
cmp
xor
mov
dec
in
add
dec
loope
lahf
es
mov
inc
fcmovbe
pop
or
ret
mov
js
repz
inc
or
in
insl
fs
cmp
les
imul
mov
movsl
pop
add
inc
jne
jg
das
fs
loopne
popa
adc
jae
mov
jae
add
push
inc
push
clc
push
test
and
sbb
cmpsl
push
sbb
call
out
loopne
bound
sahf
es
lret
adc
in
es
sub
icebp
mov
xor
into
rol
jbe
xchg
or
aad
loope
mov
enter
fisubrl
adc
jne
jb
faddl
popa
shlb
sar
dec
or
pop
and
xor
cmc
jns
pushf
cmpsl
dec
test
cmp
test
and
inc
mov
aaa
mov
mov
stc
dec
cli
dec
cmp
push
mov
movsb
xchg
jnp
bound
addr16
jbe
mov
mov
insb
orl
iret
call
pop
jecxz
jb
mov
pop
fldenv
in
add
jns,pn
mov
test
add
xchg
lcall
mulb
push
fnstenv
dec
loopne
into
push
hlt
push
lcall
sub
fchs
inc
adc
xchg
fs
fmuls
jns
mov
imull
dec
push
xor
insl
xor
aam
fadds
jns
sbb
iret
dec
out
xor
push
push
or
mov
mov
sub
inc
mov
aaa
pusha
cmc
loop
sub
in
jo
notl
subb
mov
mov
fwait
sahf
xchg
push
cmp
adc
xchg
dec
push
inc
sub
xor
ffree
es
imull
xchg
jmp
add
add
mov
sahf
inc
pop
jge
imul
push
call
jnp
jg
adc
fstpt
clc
lret
pop
es
jl
dec
out
ljmp
loopne
loopne
pop
iret
inc
cmpsb
jmp
jle
lods
pop
icebp
xchg
lods
sbb
jecxz
xchg
xor
andb
pop
pop
or
orl
inc
pop
pop
push
cmp
fwait
lahf
out
cmpsb
imul
dec
and
mov
dec
ljmp
or
bound
pop
xor
cltd
data16
xchg
daa
push
jmp
jae
imul
fwait
int
jmp
les
into
cld
popf
push
ror
jne
mov
jl
adc
add
int
sbb
mov
xor
cmpsl
ja
lea
mov
pop
push
add
adc
movsl
mov
out
out
add
lea
push
cld
xchg
or
je
dec
sbb
test
adc
into
xor
mov
or
out
sbb
mov
cmp
pop
and
pop
push
inc
insb
mov
movsl
dec
pushf
push
sbb
xchg
dec
adc
pop
cmp
ficomps
jecxz
or
xchg
stos
lock
push
fisubrs
mov
mov
cmp
sbb
enter
loop
inc
or
insl
ljmp
mov
mov
testb
fidivl
clc
xchg
jg
or
push
push
cmp
in
cld
sub
int
cmpb
jmp
scas
mov
xor
dec
mov
sti
subb
mov
stc
dec
lock
mov
arpl
xor
cld
scas
sub
pop
cltd
sub
push
mov
xor
stos
cmp
fcom
js
out
and
mov
hlt
pop
inc
pop
jnp
xlat
clc
cmp
lods
fsubrl
mov
mov
lods
add
jb
lock
jl
xchg
sbb
mov
test
jb
ja
lret
out
add
jp
mov
pop
pop
sub
jg
in
or
sbb
movsb
add
iret
or
sbb
inc
cmp
out
popf
push
add
popa
sbb
in
and
mov
pop
roll
std
test
in
iret
xchg
pop
push
js
repnz
jg
sub
push
repnz
sarb
cltd
mull
sbb
jb
inc
mov
in
cmpl
mov
ja
lret
roll
stos
loope
pop
cmpl
push
push
mulb
loopne
repz
lods
inc
push
mov
cmpl
in
pusha
cmp
fistps
push
mov
aaa
repz
lock
dec
lds
fdivrl
fsubrl
sub
scas
aas
sub
add
outsb
mov
data16
leave
dec
insl
enter
mov
xchg
adc
xchg
ss
and
jecxz
into
in
push
addr16
nop
sub
jne
into
dec
repnz
cmp
test
ret
mov
jle
xchg
bound
and
cs
aad
mov
mov
jmp
and
pop
repz
add
je
out
icebp
and
xor
out
rcll
and
push
pop
cmc
mov
inc
popa
add
xchg
push
negb
sub
popf
or
into
xchg
or
out
ss
sub
test
aaa
add
fs
test
shll
mov
jbe
xor
cmp
mov
pop
cmpsb
xchg
fstl
pop
xchg
mov
mov
xorl
movsl
xor
outsb
lret
push
std
stos
leave
cmc
pop
add
scas
fisubl
xchg
mov
push
test
inc
jne
fnstcw
cmc
lds
dec
mov
cmp
xchg
add
rolb
ds
dec
sub
mov
loop
push
jnp
es
xchg
sub
xchg
jmp
xchg
out
mov
je
lock
push
jnp
sbb
xchg
xor
and
mov
mov
hlt
lea
stc
pop
or
push
dec
frstor
mov
fcompl
pop
cli
into
push
mov
into
xchg
mov
mov
jne
ja
lahf
int
push
sub
unpcklps
push
xor
out
inc
outsl
movsl
push
js
aad
pop
loopne
add
xor
sub
mov
shrl
fstp
test
and
adc
mov
data16
pop
popf
mov
pop
and
cmc
ljmp
mov
cmp
ss
pop
jns
sahf
or
packssdw
dec
ret
ljmp
out
fnsave
or
and
xchg
push
ret
sub
out
or
push
dec
lods
enter
cmc
jge
mov
jle
gs
insl
out
pop
shl
lock
repnz
mov
mov
jb
out
pop
xor
jecxz
jno
out
out
adc
repnz
push
sbb
fstl
insl
lods
mov
or
dec
xchg
sbb
xor
mov
out
subl
xlat
jp
pop
mov
add
adc
cwtl
add
ss
outsb
test
stos
orb
pushf
xchg
pop
and
cmp
sbb
addr16
movb
ror
loope
sbb
mov
jns
mov
cmp
and
cwtl
pop
push
dec
jo
stos
sbb
jecxz
inc
sahf
pop
or
xor
or
cmc
aam
dec
repnz
cmp
std
cwtl
lds
pusha
or
or
dec
adc
pusha
push
sbb
mov
bnd
test
stos
fwait
push
or
rcrl
pop
stos
xor
js
mov
jmp
enter
xor
popf
bound
sub
jne
jg
mov
mov
push
sub
adcl
fwait
out
repz
xor
xorb
pshufb
sbb
inc
cmp
mov
xor
sti
loop
xor
sbb
mov
inc
movsb
mov
insl
mov
dec
mov
pop
rcll
xchg
dec
sbb
sbb
mov
rcrl
lcall
mov
std
push
mov
jns
sbb
sti
ret
fisubrl
inc
push
sti
divb
arpl
pop
push
push
xchg
sbb
xor
insb
gs
cmp
mov
push
mov
push
orb
sbb
mov
sub
and
and
xchg
inc
mov
mov
sahf
pop
mov
mov
ret
sbb
outsl
insl
test
cwtl
xchg
sbb
stos
dec
sub
pop
inc
cmp
js
jnp
dec
adc
stc
pop
ficoms
and
leave
lea
sub
sub
mov
lock
loop
icebp
into
sbb
aaa
jne
push
lahf
mov
push
xchg
jb
mov
push
outsl
sub
hlt
mov
push
inc
lret
jb
push
mov
enter
imul
dec
xor
cwtl
mov
out
fadds
fwait
sbb
xor
adc
js
ja
roll
leave
xchg
pop
fs
loopne
or
jp
into
xor
add
lret
cli
push
cmpsl
bound
movsl
rorl
mov
lea
in
push
les
mov
divl
cmp
dec
jb
xchg
sub
icebp
mov
dec
and
mov
adc
cli
inc
mov
mov
jge
imul
adc
jl
mov
cs
out
in
sahf
dec
sahf
or
out
lret
mov
por
stc
add
pop
dec
sub
xchg
cmp
xchg
ret
add
xor
hlt
sbb
inc
mov
push
jge
mov
xor
and
shlb
ret
jecxz
imul
mov
inc
in
sub
pop
shll
in
das
mov
iret
repz
popa
xchg
push
das
ds
jbe
jo
xchg
cli
out
leave
pusha
idivl
testb
arpl
xchg
loope
jmp
inc
imul
pop
hlt
fsubl
loopne
sbb
push
add
lods
mov
xor
loope
lods
jl
xchg
cmpsb
dec
or
push
mov
push
adc
fnstsw
gs
pop
movsb
cmp
subb
inc
pop
xorb
xchg
inc
shl
or
mov
cwtl
inc
popf
pop
arpl
out
lret
jecxz
mov
div
xchg
movsb
shlb
repnz
stc
cmp
adc
lods
daa
shl
enter
push
enter
mov
test
push
xor
xor
pop
shll
in
movsl
xchg
jge
or
fcoms
lods
stos
xor
movsb
push
or
lea
inc
mov
adc
lds
mov
fldenv
pop
aad
cwtl
add
inc
add
mov
jp
dec
mov
cmp
lahf
loopne,pn
loopne
movl
fcomps
decl
jo
int
iret
cltd
shrb
es
sub
add
pop
mov
clc
nop
sbb
mov
ja
out
xchg
sub
adc
pop
mov
jnp
and
xor
inc
ds
pop
lret
jo
jecxz
sar
lea
xchg
ja
dec
pop
adc
mull
lret
mov
cmpsl
mov
add
fs
push
pop
mov
dec
cmpsb
and
pop
std
push
cs
rorl
jl
push
ds
mov
das
andl
inc
add
jae
fwait
mov
leave
scas
push
test
mov
or
or
arpl
cwtl
and
shl
mov
ret
adc
inc
lods
adc
sub
jo
stos
cld
jmp
popa
std
pushf
mov
inc
addr16
cmc
loop
xor
dec
xchg
outsb
jo
push
test
push
ss
out
cmp
hlt
mov
lods
mov
pop
in
test
inc
and
cmp
fsubrp
push
ret
imul
xchg
cs
jl
lcall
enter
nop
inc
es
jp
jge
je
add
mov
movsl
aaa
mov
inc
sub
jle
mov
fimuls
and
inc
es
inc
push
xor
shl
sbb
in
shll
cmpsl
jno
ljmp
testl
in
aaa
nop
in
lds
jne
sub
dec
add
mov
mov
push
enter
sbb
std
adc
dec
fldt
dec
fwait
sbb
fistps
out
out
and
jmp
push
pop
das
orb
lods
cmp
sub
jp
cmp
bnd
in
in
mov
adc
icebp
and
push
mov
or
sbb
loop
hlt
push
push
sbb
popa
aad
jne
mov
lods
jp
or
mov
xor
dec
in
rcrb
xchg
and
stos
lock
mov
push
cmp
das
cmpsl
gs
push
lods
mov
mov
mov
aad
in
push
jg
testl
pop
jno
mov
div
mov
inc
bound
inc
sti
lea
ret
stos
movsl
sahf
inc
imul
mull
mov
cld
push
inc
ret
int
pop
fadd
mov
je
mov
add
std
outsl
mov
xchg
mov
sbb
xchg
mov
and
fistpl
push
add
test
out
scas
fcomps
pop
or
or
aas
cmp
add
sub
ret
jg
fmull
mov
ja
enter
xchg
sbb
jg
pop
daa
or
xor
jge
pop
push
mov
and
adc
pop
cmpsb
subl
jbe
jb
jl
out
lcall
repz
xchg
cwtl
popf
dec
lret
inc
aam
lret
fistpl
insl
sub
ljmp
out
cmp
push
mov
testb
jno
adcb
fwait
cli
xor
fstps
out
sub
cmp
popa
aas
popa
mov
mov
xchg
les
mov
ret
repnz
and
pop
test
fmull
pusha
mov
inc
fs
pop
push
mov
jne
xor
in
lret
lds
mov
inc
aaa
sub
out
test
test
mov
shl
aad
jge
addr16
cmp
enter
cmp
sub
xorl
shr
out
push
pop
jno
lret
psrlw
vunpcklps
and
pop
mov
out
stos
ds
lcall
pop
cmpsb
and
iret
sbb
loop
mov
sarl
sbb
xor
jecxz
dec
jmp
inc
adc
xchg
shlb
adc
div
outsl
aas
mov
sbb
cmp
inc
add
cmp
sub
jno
pop
mov
es
fisttpll
sbb
push
cltd
push
pusha
pop
divl
imul
cwtl
mov
int
sub
mov
adc
sbb
fs
std
dec
xchg
inc
loopne
ret
push
and
push
jnp
fcoms
push
sub
adc
decl
lea
insl
mov
xchg
aaa
nop
dec
divb
repnz
cmp
sti
xchg
fimull
xor
sahf
fidivl
mov
lds
mov
sbb
mov
sti
jecxz
adc
cld
shlw
popf
sbb
enter
imul
sarl
data16
mov
jae
fidivrl
mov
jecxz
inc
push
mov
mov
xor
orb
fbstp
bound
sub
pop
sbb
imulb
pushl
inc
int3
adc
jbe
and
imul
lea
jbe
add
pop
mov
es
jp
insl
jmp
out
lds
psubusw
or
inc
lcall
push
scas
jg
aas
movsl
dec
xlat
dec
sarl
push
pop
aad
pop
xchg
jno
sub
adc
mov
mov
mov
jl
xor
mov
fmuls
lret
lahf
mov
pop
sbb
inc
in
push
test
dec
jo,pt
inc
jbe
stc
push
hlt
push
push
hlt
into
xchg
push
add
pop
push
in
adc
movsb
add
xor
push
ret
push
sbb
xchg
or
call
inc
mov
push
pop
mov
sbb
add
repnz
ljmp
jecxz
add
clc
jae
in
mov
cmpsb
mov
test
xor
leave
mov
test
sti
mull
or
add
testb
clc
mov
push
mov
call
cmp
arpl
mov
les
cs
iret
lods
jb
and
inc
pop
insl
push
fstpl
inc
lcall
sbb
out
sub
enter
and
ljmp
in
imul
rcrb
sbb
inc
push
add
pop
mov
xorb
push
cs
xor
mov
xor
push
stc
sbb
sbb
into
inc
lcall
rcr
adc
pop
mov
iret
or
int3
dec
add
mov
lcall
mov
push
adc
mov
mov
jmp
mov
and
mov
imul
cmp
mov
mov
aaa
loop
lret
cmp
pop
dec
jne
fsub
dec
into
aaa
dec
xor
pop
and
lret
mov
lret
arpl
cwtl
nop
jle
dec
fimuls
cmpsl
call
and
sbb
pop
add
mov
movsl
mov
mov
dec
jl
leave
mov
icebp
mov
xchg
xchg
sbb
sahf
outsb
mov
adc
fwait
pusha
fcomps
ljmp
lods
xor
inc
orl
and
jbe
cmp
cmp
out
dec
les
arpl
mov
fwait
popf
cmp
lret
lahf
lds
out
push
xchg
pop
or
mov
scas
xchg
xor
cwtl
sub
mov
xor
jne
jle
cmp
mov
jbe
aad
push
jecxz
inc
push
lcall
js
lea
jns
xchg
das
into
push
jns
outsl
mov
sbb
add
movsb
out
adc
sub
mov
mov
mov
leave
pop
lock
adc
jl
ja
mov
mov
and
lods
lahf
xor
push
dec
mov
jmp
or
vmwrite
or
cmp
xchg
daa
xlat
jg
mov
idivb
pop
dec
mov
in
inc
add
insb
mov
insl
add
inc
and
sbb
lods
push
xchg
js
idivb
ljmp
fcompp
mov
jnp
les
xor
mov
loopne
inc
sub
push
xor
inc
notb
mov
jne
xchg
nop
dec
xchg
push
xchg
int3
adc
pop
repnz
loopne
xchg
adc
dec
clc
fs
or
dec
pop
js
test
or
in
mul
mov
sbb
mov
push
in
inc
ljmp
cmp
cmp
outsb
lock
icebp
popa
ret
mov
inc
cmc
test
mov
mov
rorb
movsb
bound
and
imul
mov
aad
jmp
fcomps
aad
cmc
scas
pop
xchg
rorb
loopne
loop
int3
ljmp
outsb
ja
jne
imull
inc
mov
pop
push
jns
mov
sbb
fbstp
dec
dec
movsl
sub
out
adc
loopne
lret
push
aad
clc
xorb
int
lret
and
dec
adc
out
push
movsl
clc
mov
cmp
data16
fisttpll
idivl
xchg
clc
jge
jecxz
pushf
xor
or
cltd
cmp
inc
shll
xchg
rcr
cmp
dec
iret
negb
into
sub
xor
out
stos
int3
adc
mov
insb
cmpsb
jne
lods
mov
scas
int
pop
adc
pop
or
push
lock
or
cmc
shlb
mov
mov
mov
imulb
lahf
mov
icebp
xor
or
sub
xchg
add
daa
cmc
and
out
lods
push
add
lods
ret
pop
push
shll
jg
cmpsb
pop
mov
scas
insb
cmp
mov
mov
push
push
lea
push
pop
fidivrl
dec
in
pop
sbb
enter
cmc
push
sar
dec
inc
lock
push
sbb
mov
mov
shlb
out
cli
lds
out
rorb
xor
shlb
mov
test
cmp
pop
and
mov
xchg
pop
insl
sbb
cli
push
push
imul
pop
enter
in
jg
hlt
jl
fsubrp
aad
jg
imul
aaa
sbb
out
inc
cli
mov
pop
mov
ljmp
imul
dec
push
test
sbb
lds
mov
scas
dec
add
and
inc
in
xor
add
push
xor
jl
sbb
cmpsl
jecxz
vhsubpd
pop
in
push
jmp
push
repz
lods
mov
push
loope
push
ds
pushf
adc
xor
pop
popw
aam
mov
imul
push
fisttps
loopne
clc
das
xchg
adc
lahf
mov
loopne
pop
lods
push
mov
shlb
loope
mov
jge
dec
loop
xor
jle
xchg
and
xchg
xchg
aas
int3
call
ja
jmp
adc
clc
jg
or
xchg
pop
mov
sti
js
xor
imull
mov
and
sub
leave
arpl
prefetch
adc
hlt
movsl
add
and
idivb
mov
rcrb
shrl
fsubrl
sub
xchg
or
cld
fistl
xchg
sub
in
inc
jns
mov
add
out
push
dec
movsl
lahf
aam
negl
inc
cs
lods
xorl
and
mov
and
mov
arpl
pushf
mov
inc
nop
lahf
cmp
cli
mov
ficoms
movnti
xchg
push
testb
jae
mov
push
mov
inc
fmul
jg
lds
push
aaa
lods
clc
xor
arpl
sbb
je
sub
stos
and
mov
cmp
js
xchg
xor
fiaddl
stos
stos
syscall
scas
pop
lahf
or
jb
or
inc
adc
int3
add
fidivrs
mov
ror
daa
fs
lahf
or
jecxz
push
jmp
jg
inc
add
mov
loop
loopne
dec
dec
push
mov
sub
or
adc
lret
pop
lahf
add
lea
inc
sub
mov
sub
pop
add
pop
pusha
push
repz
aad
mov
outsl
outsb
inc
rcrl
mov
xor
push
adc
and
mov
and
dec
filds
add
jecxz
dec
cmp
test
or
insb
xor
mov
mov
cs
push
xor
insb
pop
sub
cmpsl
push
insb
dec
shll
lock
dec
or
pusha
sub
aam
mov
stc
xchg
ret
cli
inc
addr16
leave
pop
ljmp
jecxz
orb
xchg
pop
mov
addr16
fwait
call
sub
lock
dec
xchg
mov
rcll
jno
xor
jae
cmp
stos
mov
cmc
stos
push
push
mov
sub
andl
xchg
mov
cltd
fmul
add
clc
adc
mov
sub
xor
jmp
stc
mov
repnz
xor
ds
adc
bound
fdivs
sahf
push
bound
cmp
pop
xchg
pop
popf
add
sbb
dec
mul
adc
lret
aam
mov
fdivs
mov
call
dec
add
divb
xchg
mov
lods
cmp
sub
pusha
arpl
xchg
out
gs
test
inc
pop
xchg
in
pop
int3
in
lods
or
xor
jp
cld
es
dec
and
or
pop
test
and
cmp
lods
and
mov
std
lea
mov
or
pop
jp
sbb
jle
dec
js
inc
xchg
fs
or
sarl
cs
iret
jno
test
pop
clc
pop
addl
or
cmp
or
mov
or
jae
mov
jae
jno
fcomps
or
push
jp
jmp
inc
jns
jo
mov
mov
pushw
xor
cli
ds
sbb
xchg
sysenter
cmc
adc
inc
repnz
pop
ret
ret
test
add
mov
xchg
dec
out
inc
fimull
rcrl
xchg
xchg
jno
bound
popf
jno
mov
or
rcll
jp
out
fisubrs
aad
test
aad
scas
sarb
mov
inc
rep
std
out
sbb
test
sarl
mov
pop
mov
xchg
or
lcall
pop
shrb
or
lret
push
ret
lahf
push
loop
mulb
push
sbb
cli
xor
arpl
jmp
icebp
pop
out
fisubrs
mov
jo
sub
es
test
jno
mov
outsb
int
stos
mov
fwait
leave
and
aaa
sub
cmpsl
add
test
in
imul
pop
icebp
add
ljmp
popa
test
cmp
insb
les
imul
add
mov
jl
les
dec
xchg
sub
push
push
xchg
ret
dec
jo
mov
sbb
sbb
pop
clc
inc
mov
scas
cli
push
lret
clc
ret
les
jmp
popa
inc
jle
stos
pop
stos
stc
xchg
inc
mull
outsb
aam
test
pop
call
mov
push
and
push
fbstp
dec
xlat
mov
mov
ret
sub
loop
adc
dec
cmp
dec
adc
xor
mov
aam
out
in
jp
fstpl
xchg
mov
call
icebp
mov
hlt
mov
xchg
add
in
push
gs
ljmp
outsb
mov
mov
out
push
lcall
arpl
jne
pop
xchg
shrb
cwtl
jne
cmc
daa
jmp
mov
lods
lods
add
sbb
sbb
aaa
enter
enter
and
xor
and
pop
sti
dec
mov
cltd
in
pop
lret
cmp
xor
mov
mov
das
call
stos
inc
xchg
mov
and
and
insb
xchg
mov
pop
mov
xchg
lods
lds
in
push
cmpb
pop
xor
jmp
mov
pop
lock
adc
inc
in
ret
pop
push
icebp
xor
pop
clc
sar
lcall
jp
daa
sub
into
mov
cmp
fbstp
xor
bswap
aad
gs
xor
movsb
and
or
jl
add
mov
lcall
cld
mov
les
add
inc
leave
dec
int3
popf
insl
test
lea
dec
ljmp
mov
xlat
out
jg
inc
dec
rcll
jb
cld
icebp
or
jmp
push
push
cmpsb
rcrb
lea
stc
fwait
dec
shll
sub
inc
sarb
aad
fildl
std
push
mov
sub
push
dec
loop
stos
sub
add
push
pop
test
jbe
negl
cwtl
dec
push
jp
and
aam
addr16
out
add
sbb
clc
cmp
cmp
xchg
insb
scas
xchg
cmp
test
mov
and
repz
ffree
dec
jo
test
loope
cmpsl
fisttpll
fincstp
mov
mov
jbe
lds
dec
cld
bound
inc
xor
daa
xchg
enter
cmp
pop
dec
jg
sarb
and
leave
loope
loop
mov
inc
cmp
mov
es
mov
dec
pushf
adc
adc
inc
mov
adc
sbb
movsl
mov
jmp
mov
lcall
loopne
lret
inc
and
test
out
jmp
jb
cmc
lods
jg
fisttps
bound
pop
subb
xor
jle
dec
clc
imull
mov
inc
mov
aam
stos
outsl
loop
push
in
sbb
adc
imul
mov
inc
in
rcrl
xchg
hlt
push
stos
add
cs
mov
ljmp
test
sti
or
inc
lds
leave
enter
lods
pop
cwtl
mov
scas
popa
sbbb
push
loopne
jno
out
imul
sbb
push
cmpsb
pop
xchg
ret
ljmp
das
out
jbe
lret
test
add
xor
aad
hlt
mov
xchg
push
lock
push
xor
mov
mov
mov
mov
jo
testb
imul
adc
test
loopne
movsl
lret
mov
mov
inc
cwtl
das
cmpb
adcl
cmp
xor
xchg
icebp
int3
out
push
bound
lea
cltd
test
push
lods
cwtl
int
in
jns
xor
outsb
xchg
add
or
inc
dec
dec
mov
and
dec
mov
or
or
or
pushf
jecxz
xor
pop
in
in
sbb
cmpsb
and
adc
pop
or
dec
sbb
mov
lds
cmp
and
ret
in
xchg
xchg
cmc
dec
cmp
push
or
das
inc
mov
inc
xchg
fmuls
pop
stos
movsb
add
mov
jecxz
push
lock
pushf
cmc
jne
jo
nop
ficomps
or
je
mov
iret
mov
test
mov
lret
sbb
sbb
call
popa
hlt
mov
je
mov
add
push
movsb
mov
and
data16
int3
jno
adc
inc
lret
mov
lcall
dec
pop
sbb
int3
fdivrp
std
daa
cmpsl
rolb
rolb
fdivr
adc
inc
in
ret
fmuls
or
imul
lahf
sub
stc
lods
push
lea
xchg
cltd
xorb
fistl
jge
xor
aas
roll
mov
fsubs
std
mov
sub
mov
fisttpll
dec
loope
sbb
add
and
insl
gs
dec
pop
dec
mov
fistps
fld
lret
pop
dec
aam
sub
outsb
and
sub
jns
fcmovnbe
cmp
pop
test
repz
mov
jns
leave
sbb
test
sahf
xchg
add
lods
lock
data16
stos
and
cmpsb
rclb
sbb
lcall
mov
and
pushf
nop
jns
jno
out
lods
test
cmp
or
sub
mov
adc
test
xchg
jne
pop
inc
push
pop
sahf
or
mov
movq
addl
in
xchg
out
lods
cmp
outsl
add
sbbl
mov
es
lock
movsl
xrelease
enter
jns
xchg
pop
inc
pop
jo
xor
mov
pop
sti
mov
pop
inc
je
mov
sub
icebp
jbe
scas
pusha
mov
sub
adc
push
test
dec
popf
push
sbb
dec
mov
push
jp
inc
mov
fidivs
xchg
mov
addr16
xchg
andl
ret
ret
lcall
inc
mov
cld
push
pop
pop
imul
xchg
ljmp
inc
aad
push
pop
inc
mov
xlat
mov
shrb
mov
jle
sahf
fildl
lods
jnp
adc
scas
push
test
pop
xor
fstpt
and
or
sahf
or
hlt
lock
jbe
push
aas
cmc
sahf
repz
sti
outsl
push
test
mov
in
pop
jbe
lock
push
mul
fimull
das
xchg
fcmovnbe
dec
sub
lods
inc
jns
stos
inc
jle
pop
sti
xchg
and
aam
fdivl
mov
and
jns
jmp
loope
jg
icebp
call
fdivrs
aam
fadd
shrb
cmpsl
scas
sub
cmp
loope
aaa
jae,pt
dec
dec
repnz
loope
mov
ds
outsb
mov
dec
mov
enter
cltd
mov
shlb
or
shlb
cmpsl
int3
mov
mov
std
dec
jno
xor
dec
mov
das
aad
jnp
out
cmp
loope
shrb
mov
insl
pop
and
test
push
sub
pop
xor
das
mov
iret
outsb
fldl
mov
mov
pushf
mov
gs
sbb
fucomp
jo
lds
fs
or
dec
push
out
nop
and
pusha
test
call
lods
cltd
ret
mov
or
mov
or
fdivr
daa
ret
popa
mov
scas
ljmp
lret
cmp
jne
icebp
jae
pop
jecxz
sbb
mov
in
dec
repz
jmp
adc
xchg
sub
in
cmp
jle
xchg
in
aas
or
cmp
lds
adc
mov
and
mov
and
inc
fisubrl
fwait
pop
dec
in
pop
sbb
pusha
ficoml
cmpl
push
push
xor
aad
inc
mov
mov
mov
test
pop
mov
and
sbb
add
cmp
push
pop
fcompl
dec
fnstcw
jno
popf
das
in
xchg
outsb
pop
dec
push
aaa
into
out
add
cmp
xchg
pop
in
add
mov
dec
repz
imul
stos
inc
in
pop
fstpt
fcompl
repnz
das
mov
fidivrl
mov
jnp
inc
xchg
icebp
pushf
divl
repnz
sbb
lds
add
cmpb
cmp
dec
fadd
mov
adc
mov
sti
push
pop
pop
and
test
lods
mov
push
and
fwait
into
mov
jmp
jmp
popa
mov
out
adc
lret
outsb
loop
xchg
loop
ds
aad
mov
fs
inc
mov
jecxz
push
mov
and
jb
adcb
push
dec
scas
fisubrl
xlat
idivb
sub
fldt
push
lds
mov
dec
roll
movsl
mov
mov
js
jb
iret
popf
call
dec
push
lea
pop
mov
test
pushf
dec
subb
aaa
inc
push
ds
push
icebp
or
jge
cld
push
imul
ret
add
xchg
sti
dec
xor
add
or
mov
js
movsb
pop
cmp
jmp
aaa
bsf
or
ljmp
jbe
jecxz
mov
or
sbb
in
test
xor
lret
adc
jge
jns
xchg
lret
mov
loop
xchg
int
repnz
in
ds
jmp
inc
je
adc
inc
mov
xchg
push
dec
lods
jge
aad
lods
cmp
mov
arpl
push
xor
shlb
adc
testb
xor
mov
and
mov
inc
cmpsb
jo
add
add
adc
xchg
mov
push
scas
pop
xchg
mov
lods
and
fucomi
std
and
fldl2e
aas
in
repz
adc
jl
subb
repnz
cmpsl
add
les
es
stos
xor
imul
mov
jge
inc
xchg
mov
mov
mov
mov
int3
stos
jmp
add
add
jb
add
std
rclb
adc
and
rol
arpl
mov
and
dec
push
inc
js
jns
dec
lods
sahf
jno
jmp
jge
inc
andb
ljmp
pop
and
sbbl
or
ror
ret
loope
sti
cmp
out
push
mov
xor
adc
movsb
lock
mov
add
cmp
mov
mov
mov
cmp
fstpl
pop
push
add
das
out
or
mov
aaa
xor
xchg
push
adc
pop
xor
movsb
push
sbb
inc
inc
loope
xchg
add
adc
dec
and
mov
xchg
dec
add
gs
add
loopne
and
add
hlt
repnz
inc
add
mov
stos
cltd
les
sub
and
sbb
insb
gs
mov
mov
out
aam
xchg
ret
repz
test
inc
outsl
xchg
add
cmp
lcall
aam
jnp
sbb
jl
add
xchg
adc
sub
stos
push
loop
ret
jns
xchg
xor
push
or
cli
cs
cli
fdivl
popa
push
shll
in
pop
movsb
xchg
mov
mov
cwtl
or
in
mov
into
pop
outsl
cmpsl
arpl
mov
lods
bound
or
aas
sti
adc
adc
fwait
orl
xorl
mov
pop
mov
outsb
jb
daa
inc
add
xchg
call
sub
mov
in
ljmp
mov
pop
cli
xor
xor
mov
push
and
addl
sbb
or
and
lahf
insb
push
test
sub
xchg
shlb
xchg
cld
int
stos
jnp
hlt
sub
shl
leave
stos
dec
jp
add
inc
adc
hlt
inc
addr16
push
hlt
xor
mov
loopne
scas
xlat
imul
test
jno
or
cmp
mov
mov
sub
inc
sub
xchg
rorl
mov
mov
dec
inc
cmp
inc
movsb
jge
cmp
loop
out
pop
lods
jb
lret
pop
nop
jnp
cli
loop
pushf
cmpsl
lods
es
fbstp
ljmp
int3
or
dec
xchg
nop
cld
icebp
aas
out
cli
mov
ljmp
cmp
sub
or
add
ja
ret
iret
add
inc
loope
dec
xlat
push
jae
jnp
xor
xlat
dec
not
sahf
mov
pop
pop
ror
outsl
outsl
daa
sub
cmc
fisttpll
mov
mov
inc
sub
lock
cmpsb
mov
pop
jmp
mov
outsl
sbb
sub
lods
lds
out
ret
dec
and
jl
adc
je
mov
adc
and
cmpsb
sub
push
push
sub
cmc
dec
shlb
lcall
lcall
insl
test
mov
dec
lods
mov
cmp
test
inc
dec
add
inc
scas
xlat
dec
cli
xor
cltd
dec
js
lods
dec
inc
insl
or
insl
ljmp
in
xchg
inc
mov
push
sbb
and
in
enter
mov
in
scas
push
gs
sub
out
in
jne
pusha
adc
mov
xchg
dec
jne
dec
aam
push
arpl
push
in
in
leave
in
fistpll
inc
cli
or
sarl
push
addr16
push
jno
in
js
std
fmuls
or
add
mov
adc
out
rcrb
pop
mov
xor
in
lods
jo
aas
pop
popf
mov
or
xor
dec
mov
or
xlat
add
addr16
inc
pop
fidivl
out
rorl
mov
mov
cmp
push
cmc
jmp
push
push
and
fwait
mov
repz
or
ret
mov
std
dec
sahf
pop
jl
sbb
inc
adc
mov
mov
lahf
hlt
cs
sub
cmpsb
fsubrl
add
mov
mov
and
test
movsb
pop
call
sbb
adc
in
or
aad
fmull
rorb
inc
gs
pop
mov
xchg
push
lret
pop
fwait
stos
pop
sub
add
jle
ja
or
cwtl
fwait
mov
test
fisubrs
pop
test
mov
js
data16
mov
cmpsl
hlt
cs
int
push
in
push
sub
adc
fwait
in
cmc
or
xchg
add
and
orl
fsubp
insl
mov
adc
int
mov
adc
xchg
jno
sub
arpl
cmp
pop
cli
ret
aam
aaa
mov
mov
add
inc
push
rorb
push
call
mov
jo
movsb
sub
mov
outsb
clc
les
adc
push
mov
sbb
cmpsb
rorb
fdivr
push
add
and
jge
in
add
loope
cmp
mov
xchg
and
sahf
mov
jno
addb
add
hlt
mov
mov
jae
adc
jle
dec
add
sbb
lods
adc
pop
imul
push
cwtl
les
in
mov
insl
subl
out
jnp
add
sub
insl
inc
push
add
push
jl
cmp
mov
clc
ja
jnp
xchg
stos
add
scas
sarb
out
cmpsl
push
pop
xchg
aad
lods
addb
dec
push
jl
popa
rclb
push
pop
dec
sbbb
je
test
sub
dec
cmp
jmp
xor
js
mov
mov
fistpl
sbb
fs
aaa
cld
popa
mov
jnp
sbb
xor
mov
int
add
int
dec
lret
movsl
push
dec
pop
in
mov
cmpsb
ret
push
sub
push
adc
pop
cltd
loop
push
not
sub
push
outsb
jne
xchg
dec
mov
xor
adc
cmp
mov
jmp
mov
push
hlt
mov
and
roll
in
mov
int3
lret
inc
lock
adc
and
pop
jne
idivl
cmp
mov
push
sub
insl
pop
xchg
push
orl
fwait
test
xchg
xchg
les
add
jae
fcmovnu
aas
xor
mulb
aam
enter
roll
lahf
push
inc
dec
dec
les
adc
or
mov
scas
inc
xor
add
cmp
aam
mov
in
mov
out
adc
push
pop
test
push
rclb
push
imul
scas
sarl
cld
push
mov
outsb
arpl
jbe
push
sahf
pop
cmp
mov
mov
test
mov
mov
jb
sbb
arpl
pop
or
dec
mov
rclb
mov
aam
cwtl
dec
mov
cmp
repnz
clc
sbb
fstp
push
xor
cmpsl
aam
ret
pop
xor
mov
es
movsb
daa
cs
inc
repnz
push
or
mov
jmp
sub
repz
mov
push
push
loope
pop
mov
push
pop
mov
mov
sub
sbb
xchg
jecxz
stc
xor
xchg
sbbl
leave
xor
pop
js
pop
push
fisubl
outsb
scas
test
in
mov
dec
jg
sub
ret
das
sub
idivb
sub
and
mov
pop
xorl
mov
negl
dec
or
in
lods
inc
add
or
xchg
les
xchg
and
sti
gs
mov
xlat
mov
adc
pop
mov
shlb
cwtl
das
loope
sbb
push
xor
loope
mov
pop
mov
or
xchg
cmpsl
aas
movsb
dec
leave
stos
or
dec
push
adc
popf
aam
jp
sbb
shll
dec
das
push
cmp
xor
test
lds
das
dec
inc
imul
push
int3
mov
xor
out
adc
dec
jl
lea
mov
fistpl
cwtl
ss
pushf
or
jle
pop
nop
sub
mov
mov
pusha
or
lods
inc
pushf
lahf
lcall
or
adc
sub
out
push
dec
ret
sahf
sbb
test
pushf
fcmovnu
push
movl
mov
test
scas
xor
mov
out
sahf
and
lret
addr16
mov
jb
sti
imull
push
daa
dec
mov
jns
push
or
mov
mov
dec
inc
rclb
data16
dec
cmp
aad
test
lods
aaa
add
shl
inc
jl
mov
outsb
out
xor
movl
loopne
dec
in
gs
add
int
std
or
cli
dec
pop
dec
rcll
cmp
push
icebp
and
imul
jg
adc
jbe
cli
aad
inc
jge
or
cmp
jmp
pop
ss
pop
fldcw
xor
fisttpll
dec
cmpsl
shlb
xchg
xchg
jb
add
jnp
test
and
cmp
xchg
xorps
ret
dec
gs
xchg
inc
lds
mov
sar
push
xor
lds
sub
or
jbe
inc
inc
aaa
push
fldl
test
dec
push
sar
call
cmp
fnstcw
cmp
mov
cmp
xchg
bound
or
jo
aam
sti
jno
test
adc
ret
fiadds
std
dec
jae
or
sbb
in
sub
ficompl
sbb
lods
sahf
sti
pusha
cmc
jbe
cli
addl
add
and
lret
test
mov
sbb
cmp
or
mov
xchg
dec
je
clc
push
test
xor
out
jmp
movl
dec
push
add
sbb
ljmp
add
in
xor
inc
cmc
mov
pop
fmul
xchg
adc
mov
bound
movsl
movsl
scas
out
dec
loop
adc
lods
repz
inc
xor
xor
mov
jge
mov
push
or
aaa
cmp
lock
mov
inc
cmc
jmp
mov
test
and
orl
movsb
xchg
imul
pusha
fnstsw
mov
and
clc
ss
dec
cwtl
or
sbb
aad
cmpsl
test
xchg
dec
mov
lret
sbb
lcall
sbb
sahf
cmp
mov
dec
fiaddl
push
push
mov
and
mov
ja
gs
mov
aas
lods
pop
adc
jmp
xchg
orl
movsl
out
add
push
inc
cwtl
in
add
adc
fwait
sarl
inc
repz
sub
jbe
and
add
orl
jp
xchg
subb
icebp
sub
mov
adc
popf
sbb
int
jg
iret
sarl
and
iret
rcrb
and
in
test
scas
addl
push
mov
push
jl
jae
or
sub
push
nop
mov
push
stos
movd
adc
in
test
out
sub
adc
dec
mov
aad
jp
fdivl
repnz
mov
push
lcall
out
cld
pop
or
dec
cmpsb
dec
jecxz
inc
into
add
sub
and
mov
xchg
xchg
icebp
and
push
movsb
hlt
imul
outsl
movsb
sbb
arpl
hlt
adc
and
xor
xchg
push
mov
in
push
add
adc
xchg
dec
outsb
mov
into
call
xor
mov
cmc
dec
mov
gs
mov
out
cmp
pop
lret
push
adc
js
mov
repnz
call
stc
cltd
inc
test
insl
xchg
fdivrs
mov
lret
out
dec
insl
jns
idiv
cmpsb
mov
mov
sub
fwait
hlt
mov
aas
cmp
mov
add
dec
push
or
fcmovnb
jb
andb
fs
int
rep
int3
sbb
cs
sub
jmp
sti
pushf
outsl
add
je
lret
test
outsb
push
mov
xor
dec
fisubl
imul
repz
movsb
movl
sbb
push
loop
popa
pop
jns
stos
inc
xor
xor
jle
dec
mov
inc
daa
data16
cmp
loope
mov
sub
and
fcoms
fldcw
sbb
aam
fcom
xchg
adc
lcall
inc
add
shll
mov
ret
pop
xor
push
es
mov
dec
push
hlt
dec
dec
test
jae
xchg
xor
add
loop
jl
scas
cmp
sbb
dec
push
pop
push
outsl
mov
icebp
jge
sub
aaa
out
cld
push
mov
xchg
xchg
rclb
push
xor
push
mov
jmp
sbb
pop
ljmp
rcr
fnstcw
outsb
pop
arpl
mov
negl
mov
and
jb
insl
and
add
fisttps
dec
sahf
iret
sub
mov
push
sbb
adc
inc
cli
mov
sahf
xchg
cmp
xchg
cmc
rcll
shr
add
mov
mov
pop
movsl
imul
insl
in
mov
jg
leave
scas
jp
cmpsl
jne
and
out
insl
dec
xchg
xor
sub
adc
outsb
je
ss
pop
add
or
aas
stos
mov
sbb
pop
add
and
xchg
rolb
cli
sub
mov
fsubr
idivl
adc
jl
inc
jae
cwtl
imul
adcb
sbb
shr
inc
cmp
jge
pop
shlb
and
dec
insb
sahf
xor
idivb
jo
lea
mov
jge,pt
add
ds
sti
in
inc
or
call
fsubrs
jg
negb
decb
ljmp
pop
imul
lods
inc
mov
sbb
fcompl
int
mov
fnsave
rcl
in
fbstp
mov
dec
mov
jecxz
fs
ljmp
leave
pop
lahf
fistps
insb
inc
shl
inc
loop
addr16
pop
imul
mov
push
sub
and
fstpt
sub
pop
mov
or
lds
iret
push
adc
mov
shll
push
fwait
test
rcl
out
pop
jo
ret
mov
inc
fs
inc
mov
cltd
jb
push
push
fistps
mov
xor
add
dec
scas
push
xchg
jmp
cmp
fstp
push
and
mov
mov
insb
cmp
sbb
or
sahf
or
negb
js
push
xchg
or
int3
inc
test
fisubrs
aaa
sub
mov
add
fisttps
fnstenv
adc
in
loop
cmp
out
fadd
mov
inc
cmpsb
xchg
clc
adc
jbe
mov
in
cli
fidivl
inc
jmp
add
mov
jbe
lahf
aam
fidivl
jmp
push
push
cs
xor
movsl
lcall
lahf
movsl
into
xor
xor
int3
dec
sbb
jge
xchg
mov
cmpsb
jmp
jo
jmp
pop
sbb
and
xlat
pop
dec
dec
and
sub
movsb
or
fs
add
add
push
mov
cmp
mov
ret
xor
mov
push
sub
push
sarl
inc
push
push
fwait
scas
leave
popf
movsl
and
lods
sub
dec
mov
gs
or
les
jns
aas
test
ja
sbb
mov
dec
imul
shlb
add
mov
lea
sub
call
add
and
push
mov
push
sub
mov
out
imul
mov
jno
push
stos
mov
int
or
in
ja
add
gs
out
mov
fs
popa
sti
xor
ret
lcall
daa
mov
inc
mov
or
jns
fnstsw
rcr
nop
adc
movsl
scas
in
test
es
cwtl
xorb
lcall
mov
adc
or
mov
in
call
cs
dec
adc
pop
fcomi
or
dec
dec
mov
or
scas
mov
xor
sub
mov
or
stos
repnz
jle
std
push
shl
daa
xchg
repz
jns
clc
fldt
mov
lret
inc
out
jge
out
xchg
or
adc
in
mov
adc
pushf
int3
sub
repz
add
sbb
jmp
jecxz
fisubs
stos
dec
jmp
addr16
dec
jb
add
jbe
cs
xchg
jno
mov
movsb
dec
push
sar
cmp
or
mov
or
jg
jnp
cmp
subl
mov
sub
stc
test
cmpsb
xchg
mov
and
scas
nop
rep
adc
cmpsb
add
xchg
stos
or
xchg
stc
xor
xchg
je
icebp
add
daa
xchg
push
cmp
or
aaa
rorb
stc
ja
pop
aaa
test
pop
cld
mov
divl
pop
xchg
ficoml
or
out
hlt
cmp
orb
rcll
movsb
ret
dec
xchg
sbb
stos
aaa
lods
arpl
xor
cmp
inc
or
ficompl
or
in
sub
pop
add
test
xlat
insl
mov
int
das
mov
lret
fldcw
lods
jmp
pop
fidivl
or
out
mov
jle
test
mov
in
popa
or
insl
out
xchg
sub
sub
push
cmp
nop
xor
add
cmpsb
cltd
pop
fcom
addr16
inc
mov
dec
int3
into
test
fistpl
sbb
push
and
lret
and
xchg
out
mov
nop
mov
push
push
popl
cmp
push
xchg
inc
sbb
sahf
mov
ret
jne
xor
adcb
lcall
insl
mov
test
dec
outsb
sbb
jb
xchg
dec
xlat
mov
js
mov
xor
jmp
cmp
dec
push
xchg
fisttpl
lcall
jbe
loopne
clc
pop
jmp
push
adc
sbb
jg
xor
mov
je
repz
hlt
ret
nop
inc
adc
mov
cmp
jecxz
xchg
mov
adc
jmp
xchg
iret
cwtl
mov
or
ficoml
pop
jo
add
inc
xchg
sbb
out
mov
cmc
inc
sub
rcr
adc
push
test
mov
add
roll
shr
sbbb
fimull
add
pop
popa
bound
dec
inc
mov
cld
addr16
and
test
loope
clc
stos
insb
in
mov
xor
mov
pusha
clc
rcl
jae
sbb
shrl
mov
sbbl
mov
cld
into
adc
push
in
or
in
and
jbe
lret
loop
fadd
std
movsl
push
xchg
or
test
popa
insb
push
outsl
nop
add
mov
mov
jb
je
ret
lahf
out
lods
lods
testl
shrl
ds
mov
rcll
cmc
and
popf
push
mov
or
or
stos
ret
aad
cmp
cld
mov
lret
loop
sbb
jne
sbb
jmp
or
adc
stos
dec
test
inc
jno
es
imulb
pop
int
out
and
scas
adc
imul
dec
cltd
arpl
sbb
jns
bound
dec
or
stos
in
pop
out
xor
pop
rclb
sarb
fst
in
insl
hlt
in
push
mov
and
mov
sbb
xor
xchg
hlt
jmp
cmc
add
dec
aaa
pop
into
je
lret
push
sti
mov
sub
out
pop
mov
push
bnd
or
ficompl
mov
and
daa
rolb
pop
jnp
fnstcw
sbb
mov
mov
ja
push
aas
or
fidivs
cmp
cmp
sbb
inc
stc
scas
jb
popa
xor
cmp
mov
xchg
cmpsl
rol
ljmp
fidivl
xchg
adc
shlb
mov
pop
in
int
std
push
imul
iret
push
adc
in
movsb
mov
out
jmp
add
push
sbb
cmp
dec
mov
add
inc
jb
shlb
mov
and
test
lods
je
sub
fimuls
and
popa
aaa
pop
and
mov
inc
mov
inc
inc
ljmp
mov
aas
in
fldl2e
call
mov
dec
adc
fisubrs
in
lsl
cmpsb
and
lock
lahf
jmp
pop
imul
aam
mov
add
sbb
jmp
xor
cli
movb
rorl
cmp
je
inc
adc
sub
fsubrs
arpl
dec
and
clc
imul
cmp
sbb
pop
addr16
dec
pop
addl
rolb
clc
jo
loopne
arpl
std
and
aas
pop
cs
jo
and
jne
jae
sbb
mov
mov
lods
test
cmpsl
test
xchg
std
push
dec
jl
push
subl
subb
cmpsb
pop
cs
xor
cld
iret
push
stos
pop
mov
stc
cld
addr16
mov
lret
hlt
or
ret
mov
xchg
mov
std
push
cmp
mov
lret
mov
arpl
mov
imul
daa
ret
shrl
es
adc
sub
sbbl
shll
xchg
or
out
cmpsl
jo
insb
sbb
iret
push
mov
in
ret
lret
aam
aaa
mov
xor
and
jae
sbb
xchg
in
stc
xchg
cmp
setns
testb
adc
aam
stc
sbb
and
movsl
ss
cmp
mov
push
xchg
mov
das
push
maxps
sti
es
xchg
cli
ja
push
adc
inc
mov
loop
xor
ret
das
int
mov
ds
mov
push
dec
mov
lret
jbe
sbb
mov
pop
ret
inc
jp
std
jae
sbb
idivl
in
sub
leave
or
adc
push
loope
sbb
cmp
ret
mov
aad
jmp
push
insl
daa
inc
cli
jp
call
sub
and
add
ljmp
andb
inc
pop
mov
aaa
or
shl
mov
daa
stos
xor
adc
add
dec
xor
fimuls
scas
std
xor
push
lds
xchg
mov
pop
ds
sahf
pop
sbb
adc
pop
es
xchg
aam
cmp
lock
cltd
jmp
outsb
or
shl
mov
addr16
std
leave
call
pusha
adc
shrl
push
mov
icebp
xor
loopne
aad
ret
lea
test
jecxz
imul
mov
addr16
mov
pop
scas
push
or
outsl
enter
lods
xchg
and
xlat
jl
addr16
call
jg
and
mov
gs
mov
jecxz
fcmovne
sbb
sub
cmp
std
ret
fisttpll
mov
mov
pop
call
push
lcall
or
outsb
jge
ljmp
rcrl
push
push
arpl
jb
rorl
xor
sub
leave
sbb
push
dec
dec
jge
je
negl
rcr
andb
jge
sub
pop
push
aam
push
mov
push
ficomps
movsl
jp
sub
clc
pop
out
movsb
loopne
iret
movsl
int3
dec
jmp
les
cmp
push
lds
mov
sub
fisubrl
stc
jg
inc
aas
ret
aad
dec
push
or
mov
cmpb
test
sbb
pop
sub
int
out
bound
sbb
and
in
xchg
bound
or
adc
nop
mov
cltd
mov
xchg
xchg
pop
loop
or
ss
cs
mov
in
sub
call
and
jne
leave
cmpsl
outsb
cmc
iret
mov
mov
xchg
lods
xor
outsl
and
inc
mov
addr16
imul
repnz
jg
mov
sbb
or
jnp
test
push
pop
lahf
repz
in
rcrb
enter
inc
inc
or
hlt
adc
lods
pop
push
and
std
out
call
pop
aad
vmaxps
lret
es
jne
dec
cmp
push
ljmp
push
repnz
jne
enter
add
jbe,pt
ret
or
arpl
aaa
cmpsb
sbb
or
stos
jmp
xlat
test
ret
xchg
bound
adc
lods
loope
sahf
out
jle
and
mov
cli
call
jge
pushf
push
xchg
cmc
inc
ss
lock
xorl
inc
test
leave
cmp
repz
xor
xor
and
and
lds
jo
popa
jle
lcall
mov
leave
sbb
mov
sbb
adc
scas
decb
repnz
add
insl
cmp
or
jb
popa
insl
ret
popa
jne
cltd
arpl
inc
adc
es
push
hlt
sub
mov
mov
out
pop
scas
inc
push
jg
cmp
xor
sub
inc
cltd
jl
push
sbb
aaa
jbe
jmp
jo
lea
aad
mov
pop
fadd
xchg
cmpsb
or
aam
xlat
mov
push
fucomip
sbb
push
jb
and
lcall
sub
mov
cs
stos
js
sbb
mov
pop
gs
adc
pop
mul
outsl
or
or
out
push
lods
orl
mov
lret
insl
repz
scas
inc
sti
out
jmp
xchg
sbb
push
shrl
xchg
divb
sbb
sbb
shr
jnp,pt
call
rcrl
cmpsl
mov
jg
mov
mov
xlat
pusha
addl
cmp
xchg
jno
jns
inc
cmp
mov
xor
lret
and
sbb
pop
shl
xlat
dec
push
and
repnz
jb
mov
add
scas
cmp
pop
mov
push
inc
ja
mov
adc
shrb
loope
xchg
jne
out
loop
ds
imull
dec
sub
test
pop
jb
jge
ror
cs
imul
add
mov
pop
in
sar
fs
push
push
fidivs
popfw
inc
nop
rol
cmp
arpl
cmpl
fcmovnu
ficomps
fnsave
cld
xchg
push
std
add
push
das
in
mov
loope
mov
sub
push
cs
insl
test
xor
jb
lds
gs
sub
sbb
jbe
push
mov
fistpll
es
add
scas
and
andl
xor
hlt
nop
cld
dec
into
adc
aad
incl
jns
push
cld
or
movsl
pop
stc
mov
cmpsl
sub
imull
cmp
icebp
ficompl
push
dec
addb
adc
je
pop
or
lods
bound
leave
jae
fcomps
xlat
mov
adc
test
xchg
or
sti
movsb
nop
insl
add
xor
repnz
mov
push
jae
adc
inc
push
and
pop
lock
fdivrs
inc
pushf
mulb
lahf
mov
push
xlat
aaa
pop
xorb
dec
sti
inc
sbb
pushf
les
lret
inc
mov
sbb
rcrl
mov
xchg
stc
fcompl
fadd
das
xchg
pop
jb
cwtl
adc
rolb
xor
lods
loope
push
icebp
xchg
sub
enter
pop
jae
mov
jl
dec
push
fistpll
jg
fldenv
nop
sti
popf
lahf
sti
pusha
les
stos
popf
push
mov
stos
push
pmulhuw
cmp
add
ficoml
cmp
add
movsb
pop
dec
inc
dec
sti
sub
notb
mov
idivb
das
aad
out
jp
std
movsl
mov
mov
imul
adc
sarb
mov
dec
fistl
sbb
mov
cs
jbe
jno
test
movsb
xlat
jo
arpl
cs
inc
pusha
pusha
gs
mul
dec
arpl
cwtl
popa
sbb
mov
dec
dec
pop
aam
imul
inc
cmc
mov
out
push
roll
mov
adc
mov
jne
scas
ss
popa
jmp
pop
xchg
jnp
or
xchg
or
das
mov
mov
les
xchg
pcmpeqb
in
movsl
pop
fstl
subl
xchg
fiadds
and
aaa
push
mov
sti
dec
aas
dec
jl
cmp
adc
pop
dec
sub
pop
test
aas
lock
mov
jbe,pn
out
out
cmpsb
jb
inc
xchg
adc
fs
call
ret
fdivs
mov
sub
out
adc
pop
and
in
add
loop
test
cld
movsb
jb
loop
xchg
sub
test
sbb
mov
cmp
jns
cmp
addr16
ret
sbb
sub
cltd
cmp
in
popa
sti
cmc
fldt
dec
orb
jge
mov
push
pop
and
cmp
icebp
pop
push
incl
pop
inc
sbb
xor
addr16
inc
notb
inc
xchg
and
fbstp
pop
push
xchg
pop
sbb
cld
stc
fisubrs
jbe
xchg
lcall
cmp
dec
push
xchg
xchg
inc
push
stos
inc
dec
jo
jmp
mov
insb
pop
mov
out
fcmovu
jns
jmp
add
outsl
xor
outsl
push
addr16
mov
ret
push
and
hlt
add
jp
sar
addl
test
cmp
sub
jge
xor
les
adc
xor
test
or
ss
sub
mov
pop
popf
dec
movsb
inc
lds
inc
aas
mov
lea
cmp
adc
xchg
sbb
sbb
dec
jae
repnz
aam
sub
roll
pop
popl
imul
sbb
ficoml
cmp
imul
xor
in
xor
enter
inc
xor
aaa
adc
mov
loop
and
dec
mov
cmpsl
int3
das
jb
leave
jl
dec
push
inc
adc
cmpsb
dec
ja
xchg
mov
jne
fwait
xor
xor
add
mov
push
mov
adcl
xchg
fcoml
push
inc
sbbl
imul
inc
xor
fcmovnb
or
mov
jns
popf
icebp
test
pop
mov
jnp
ds
lds
push
and
maxps
enter
ljmp
push
test
xlat
cwtl
cli
pop
scas
add
loop
inc
sahf
fucom
leave
mov
sub
notl
sub
push
mov
jne
out
push
sbb
imul
cmp
aam
adc
and
cmp
push
dec
jge
add
sbb
jmp
sbb
or
inc
lds
ljmp
data16
fsubrs
xchg
stos
cmp
mov
sub
xor
inc
xor
sbb
push
stos
jo
in
xor
jge
xor
sti
xor
add
fimuls
ret
adc
notl
pop
in
and
div
rol
jnp
mov
fbstp
pop
sbb
divb
sub
ret
loope
inc
dec
test
cmpsl
loope
and
sub
add
out
mov
rolb
push
fildl
lret
push
test
mov
cltd
loopne
cmp
out
ja
ja
push
jnp
jae
cmp
jmp
fs
add
std
and
mov
in
in
or
addl
pop
repz
pop
xchg
daa
in
in
insb
add
sbb
frstor
pop
ret
cmp
mov
and
test
push
sahf
pop
sbb
and
push
scas
sahf
push
notb
ss
xchg
ror
cmpb
jne
loop
pop
std
jecxz
mov
mov
and
repnz
aaa
pop
jnp
daa
lea
jmp
xor
fcmovnbe
add
and
out
sbb
push
jbe
mov
arpl
movb
sbb
xchg
ret
or
adc
jle
jno
xchg
add
xor
lods
cmc
pop
add
pop
adc
cmp
nop
xchg
stos
inc
jo
dec
movsl
push
adc
lods
bound
add
sti
in
xor
outsl
sub
xchg
adc
xor
pop
or
mov
add
add
jp
mov
xor
les
mov
xchg
inc
dec
sbb
push
popa
push
rcrl
fcmovnu
push
imull
pushf
loop
add
add
out
xchg
ficomps
insb
and
cmp
or
mov
stc
xchg
cmp
pop
addr16
jno
out
pop
mov
fsubr
scas
inc
cmp
cs
pop
pop
or
loop
fldenv
xchg
jno
test
adc
int3
sbb
cld
sbb
ds
jnp
jne
push
cmp
xchg
adc
rorl
sbb
push
adc
mov
jle
adc
es
dec
inc
fwait
jno
mov
sti
das
adc
test
add
mov
pop
mov
out
add
testl
cmpsb
ds
out
jnp
cwtl
aad
outsl
cld
aad
addr16
mov
dec
clc
stc
lds
sub
test
jge
loopne
sbb
jg
gs
fimuls
scas
and
pusha
icebp
popa
push
dec
das
jge
push
mov
pop
pop
lods
js
cld
inc
lahf
cmp
je
pcmpeqb
lds
addr16
fisttpll
push
and
stos
lods
cli
jnp
mov
jge
xor
in
test
iret
add
jg
rcrl
mov
jge
xor
adc
fldcw
push
pop
dec
addr16
lds
cmp
inc
gs
insl
mov
push
mov
adc
dec
cltd
adc
jb
mov
add
int3
loope
pop
mov
pop
cmpsb
roll
popa
xor
cmpl
jl
xchg
movsl
jno
xor
xchg
mov
repz
bound
xchg
or
sub
cli
mov
icebp
arpl
push
jnp
gs
test
xor
pop
mov
mov
push
add
jge
shl
ret
fnsave
inc
ja
scas
dec
or
sbb
stc
add
ficoms
lret
and
or
inc
cmpsl
cltd
subb
ret
inc
sbbl
test
xor
ret
jl
out
hlt
adc
inc
shlb
jge
stos
hlt
loopne
jp
sub
loope
ficoms
push
or
add
rorl
iret
ret
in
fnstcw
push
repnz
sbb
add
les
das
mov
js
or
pop
adcb
enter
sub
cmp
pop
pusha
outsb
jno
jle
shrb
inc
mov
into
push
dec
cmpsl
and
sub
xchg
cmp
jle
add
inc
out
cmp
lods
dec
test
or
clc
roll
jle
into
call
scas
js
in
test
push
pop
fdivrs
loop
out
movsb
add
jo
sbb
sarb
push
stos
dec
inc
add
add
push
pop
sbb
jecxz
jmp
std
fistpl
lds
dec
cwtl
cmp
xchg
js
or
es
sub
pop
lock
mov
ja
sbbl
pop
jbe
sbb
imul
cwtl
test
fcmovne
sub
or
add
dec
ret
insl
pushf
xor
or
mov
aaa
dec
cwtl
stos
loop
lock
xchg
mov
sub
sub
sub
push
mov
sbb
add
pop
lock
cmp
mov
lcall
xlat
dec
test
in
or
sub
add
adc
sub
or
mov
adc
iret
jge
cmp
cmc
out
clc
adcb
lahf
arpl
add
outsb
sub
mov
jne
pop
or
clc
adc
imul
pop
mov
scas
dec
dec
out
push
aam
jne
mov
jne
in
adcb
ss
outsl
pop
adc
movd
fsubs
pushw
adc
in
cmp
push
or
jmp
das
outsb
mov
cmpsb
loopne
fmuls
mov
popf
cmp
daa
jmp
frstor
fdivl
hlt
sub
ret
test
or
jle
jge
jcxz
dec
mov
int
mov
out
jl
lods
aam
imul
inc
pushf
shlb
ret
shl
mov
push
insl
mov
xor
xor
aas
pop
test
mov
fdivrs
add
xor
mov
cmpsb
iret
cltd
fidivrs
sbb
or
mov
xor
es
inc
mov
daa
stos
pop
add
pusha
sti
cmp
out
leave
mov
jecxz
rcrl
or
add
ss
mov
dec
or
in
sar
inc
add
jno
stc
out
lods
scas
xlat
pop
aam
or
xor
pop
lods
cwtl
int3
mov
dec
lods
das
idiv
fisubrs
scas
fcoml
cmp
inc
xchg
or
lds
aad
sbb
aad
sbb
mov
sbb
sbb
xchg
adc
scas
inc
mov
shrl
sbb
mov
mov
mov
fstpt
out
insl
cmpsb
mov
outsl
add
frstor
enter
dec
push
nop
jp
push
js
shl
cwtl
add
cmp
pop
js
popl
imul
xchg
cmp
jae
das
out
xor
cmp
lods
movups
fs
in
ds
mov
hlt
sub
mov
xor
int3
je
and
or
jae
mov
and
dec
dec
mov
cmp
xor
pop
fiaddl
pop
loope
lcall
mov
into
xor
imul
pop
cld
adc
gs
loopw
in
xchg
rcll
push
mov
fcomp
mov
jb
sbb
bound
cmpsl
ljmp
pop
bound
dec
sub
iret
out
adc
js
stos
or
pushf
or
pop
add
addr16
xor
outsl
add
sbb
stos
jp
and
pop
ljmp
and
dec
add
add
mov
movsl
dec
mov
adc
loopne
sbb
popf
rorb
jno
rol
ss
add
fs
inc
inc
fistps
mov
int3
push
jp
sub
adc
pushf
lcall
push
add
mov
arpl
ror
lret
jmp
icebp
push
gs
pop
int
push
mov
xchg
loopne
sysenter
dec
cltd
in
sti
and
sub
test
int3
add
jne
jg
jae
pop
test
hlt
xchg
rorb
lods
pop
adc
mov
pop
mov
pusha
insl
shl
sub
enter
pop
push
cmp
fnstcw
sbb
fcompl
push
fbld
mov
mov
arpl
shrl
negb
cmp
out
push
cli
pop
addr16
shr
jbe
pop
in
adc
ficompl
xor
jmp
fnstsw
inc
and
mov
jmp
popf
mov
xchg
and
or
push
ljmp
shll
mov
adc
js
fcoms
inc
pop
sbb
dec
sbb
mov
sbb
andb
adc
out
xor
mov
add
pop
adc
pop
lods
gs
cli
dec
jmp
pop
dec
sahf
push
cmp
cmp
orl
pop
adc
adc
sahf
xor
bound
mov
mov
insb
bound
xor
cmp
scas
adc
outsl
mov
clc
pop
and
cmpsb
add
or
outsl
pop
push
stos
loopne
pop
or
aad
inc
mov
mov
inc
fistpl
or
adc
ja
mov
lahf
enter
int
pop
jg
test
pop
dec
stos
xchg
push
stc
pop
mov
push
aas
or
sar
jne
out
mov
fbstp
inc
dec
popa
sub
pop
movsl
pop
aaa
flds
aad
ja
sbb
lahf
and
lds
fcomps
repz
test
pop
bound
les
les
push
sti
inc
sbb
daa
cwtl
xchg
dec
cli
push
adc
add
test
arpl
sub
inc
xchg
repnz
dec
test
jle
mov
adc
xor
jbe
lods
mov
repz
xchg
into
pop
adc
fdivrs
mov
and
movsb
popa
xchg
das
xchg
aam
lahf
xchg
je
stos
addl
adc
xlat
push
rcll
push
pop
push
pop
push
dec
cmp
adc
adc
mov
add
dec
sub
adc
loopne
aas
inc
roll
adc
lret
cwtl
cld
sbb
mov
jnp
mov
std
fwait
je
push
test
mov
push
in
pop
cmpsb
into
mov
pop
dec
dec
and
dec
sub
dec
inc
arpl
pop
sbb
cs
repz
mov
fldl
data16
lds
rclb
into
mov
rclb
loop
lock
rolb
stc
and
mov
add
xlat
int3
sub
sub
cmp
inc
or
in
cli
lcall
fwait
adc
push
std
lcall
xchg
sub
mov
mov
sbb
jl
push
or
sbb
js
jns
rcrl
es
pop
out
push
loope
jne
xor
inc
orb
add
andb
scas
imull
clc
dec
lds
out
jg
loope
outsb
push
lods
ret
add
lds
js
adc
int3
cmp
repz
push
sbb
outsb
sub
pusha
push
stc
cltd
out
imul
dec
jne
lcall
outsb
mov
jg
mov
push
inc
push
ret
jae
mov
test
jl
cmpsl
xchg
inc
in
mov
sbb
jno
imul
inc
mov
cmp
dec
pop
cmp
xchg
cmp
mov
adc
movsb
pushf
aaa
inc
mov
iret
add
cmp
dec
das
pop
jo
add
or
dec
add
aam
cld
fnstenv
repz
cwtl
cmp
inc
out
pop
cwtl
movsb
dec
leave
insb
es
int3
jbe
or
out
pop
add
scas
outsl
xor
sbb
cmpsb
push
fildl
sbb
outsl
add
mov
lock
dec
loope
add
leave
and
rcrl
jl
ret
xchg
out
cli
scas
lea
cmpsb
lods
lods
movsb
mov
push
test
in
adc
push
lods
or
cmpsb
push
clc
sub
sbb
lock
mov
out
dec
lret
sbb
loopne
inc
sub
sub
mov
fsubl
std
jg
std
lea
dec
jno
out
cwtl
mov
xor
test
xor
lahf
or
fldt
push
cmp
mov
adc
sub
jns
pusha
int
sbb
or
std
push
ss
pop
xrelease
push
cmp
test
in
daa
das
mov
insb
ljmp
push
xor
jp
jl
dec
xchg
inc
mov
xor
mov
pop
leave
mov
mov
sub
add
insl
pushf
jnp
cmp
fs
out
js
add
adc
cli
mov
popf
pop
mov
je
add
xchg
mov
sbb
icebp
hlt
or
lock
sbb
jmp
jge
or
pushl
repz
push
sbb
arpl
shll
mov
xchg
mov
scas
rcll
imul
andl
sub
mov
cmpsl
sub
out
shlb
test
stc
fistl
fiadds
clc
popf
mov
xchg
add
jbe
inc
push
adc
jg
decl
and
lods
xor
fwait
dec
jecxz
push
add
mov
push
cmc
sahf
in
in
adc
xor
mov
popa
sbb
in
movsb
cs
testb
andl
mov
pushf
out
imul
mov
mov
push
aad
sbb
sti
aaa
pop
jge
std
leave
ja
in
lret
cmp
push
or
inc
orb
out
es
mov
leave
test
aad
jae
jno
jns
call
mov
dec
int
jb
and
int
and
jnp
xor
mov
and
adcb
cld
popf
shll
jno
cmp
js
mov
add
lcall
aas
fists
jge
ja
je
popa
jge
or
shrl
sbb
and
mov
push
adc
sbb
test
jle
imul
bound
daa
sub
mov
pop
mov
aad
fs
or
cmpsb
stos
dec
rcr
jp
repz
jb
lret
ret
add
or
fnstcw
mov
mov
push
xor
mov
cwtl
sbbl
sarl
jno
dec
gs
scas
sbb
cwtl
jp
sbb
add
mov
dec
pushf
out
insb
xchg
xor
rorl
out
mov
pop
loop
push
mov
cmc
jl
mov
jb
shll
sahf
aam
pop
test
loopne
jno
imul
jns
xor
loope
mov
add
mov
sub
jecxz
sub
mov
ss
and
xor
out
mov
cld
loopne
pop
pop
pop
shll
adc
in
test
xor
test
cli
inc
sbb
jg
pop
mov
insl
out
icebp
sbbb
sbbb
add
lock
push
fldenv
dec
je
into
sbb
xor
test
ss
mov
and
das
add
nop
shl
aad
aam
and
or
add
icebp
pop
push
dec
dec
pop
jecxz
pop
mov
in
pop
sahf
push
sbb
hlt
push
scas
sbb
mov
push
test
push
fwait
push
inc
out
stos
test
cli
addl
cmp
push
push
rol
ret
rcll
sbb
xor
jae
push
imul
push
cmp
mov
add
jmp
dec
test
je
cwtl
mov
cmovg
push
mov
test
bound
insb
dec
lea
gs
push
mov
aaa
dec
rcll
lea
add
mov
insb
or
gs
dec
stos
stos
pop
insb
and
adc
lock
popl
jp
mov
sub
rorb
shlb
mov
ljmp
push
pop
push
jp
push
mov
hlt
filds
in
xchg
push
paddb
mov
jle
xchg
jae
inc
sbb
insl
push
xor
rcl
mov
data16
mov
mov
adc
or
xor
je
lcall
sahf
sub
inc
xor
sub
sti
or
into
mov
aaa
sahf
add
lcall
sti
shll
push
stc
sub
iret
cmc
dec
insl
jbe
ficoml
cmc
fcoms
fwait
xchg
lock
fwait
jne
and
jbe
dec
pop
data16
push
in
xchg
outsl
pop
jbe
arpl
pop
sub
xchg
scas
and
mov
adc
mov
in
je
jmp
dec
push
push
out
std
enter
add
pop
je
jecxz
imul
jnp
push
std
or
xor
adc
icebp
inc
cmc
insl
lds
xor
sub
jmp
clc
lds
inc
xchg
mov
cmc
xchg
sahf
orl
mov
cmpsl
loope
and
cli
add
xorl
subb
jnp
movsb
lret
lods
and
clc
mov
mov
shl
enter
pop
mov
jns
push
pop
arpl
mov
or
mov
add
xor
fwait
pusha
xchg
lret
arpl
ror
jg
lds
jecxz
xchg
nop
sbb
movsl
cltd
push
and
mov
neg
cmpsb
lahf
out
stc
fidivrs
inc
jb
lods
dec
push
mov
jbe
adc
sbb
mov
or
mov
iret
sbb
push
fmuls
adc
push
icebp
lret
ja
je
insl
data16
mov
loope
jg
xor
cmpsb
inc
daa
add
outsb
sbbl
adc
xchg
xchg
mov
fldcw
pop
addl
ficomps
push
fs
mov
imul
xchg
ret
mov
daa
mov
mov
push
fisubrs
mov
insl
lcall
xchg
sub
insl
stos
xor
aam
add
outsl
cmp
lods
out
cmc
shlb
and
pop
cmp
xlat
mov
lock
mov
cwtl
jb
insl
push
xchg
sbb
fisttps
fsubrp
out
pop
idivl
and
dec
in
sbb
ljmp
sbb
push
cmc
ss
push
insl
jecxz
hlt
imull
jbe
jmp
sub
jp
nop
sub
cltd
fdivrl
sbb
sub
cs
mov
or
stc
push
mov
sbb
sarl
clc
xchg
dec
sub
push
sub
jne
pop
jnp
aam
dec
cmp
xlat
mov
pop
sbb
jae
push
mov
ja
add
sub
cmpsb
scas
lahf
xchg
xchg
jno
add
sub
and
ss
sub
mov
sahf
lea
movsb
or
cs
mov
xor
xchg
adc
adc
adc
loope,pn
inc
xchg
and
or
cmpsl
pop
mov
jno
fstpl
jge
jno
or
ss
jmp
inc
dec
rep
sbb
enter
out
jecxz
push
jge
fwait
lret
cmp
in
out
inc
inc
xlat
testb
fwait
imul
sbb
and
adc
xor
rorb
inc
inc
in
push
icebp
or
pop
hlt
or
add
call
adc
ret
ja
lds
pusha
nop
fwait
js
add
movsb
jge
xor
cmp
mov
jo
xor
rorb
mov
ret
mov
push
test
cmc
movsl
data16
in
stos
mov
popa
pop
fidivrl
xor
xor
scas
mov
incb
cmp
jle
adc
mov
mov
or
mov
push
inc
popa
outsl
arpl
jns
xchg
inc
jns
xor
jg
icebp
dec
mov
xchg
cld
jae
jmp
cmp
into
xor
daa
sub
insb
gs
jb
xlat
xchg
test
lea
add
mov
mov
pop
add
adc
lds
add
out
or
aas
aad
mov
out
mov
mov
pop
data16
repnz
jmp
insw
xchg
push
push
popl
mov
popa
push
pop
loopne
sti
das
pop
add
insl
cmp
mov
cmpsl
mov
adcl
mov
incb
dec
leave
add
push
xchg
mov
ret
add
sub
sarl
mov
jb
std
fldenv
and
and
lods
out
mov
pop
cmp
push
xchg
dec
cmp
mov
mov
outsb
pop
pop
inc
mov
iret
pushf
jge
xchg
push
es
xchg
ljmp
dec
jae
repnz
xor
shrb
shl
jle
movsl
add
mov
popa
mov
incl
jbe
test
imul
add
cmpsb
mov
fdivl
js
mov
rorb
pop
add
sbbb
push
daa
fsubl
xchg
in
sbb
outsb
jg
add
test
repnz
xchg
shrl
mov
and
sbb
jmp
stc
loop
jg
or
jg
divb
push
loope
cmp
sub
sarb
ja
push
cmpsl
mov
sub
sub
or
arpl
in
fadds
mov
cmp
arpl
enter
inc
mov
push
mov
mov
cld
and
imul
lea
mov
je
add
inc
rol
xchg
mov
cmpsl
loope
mov
pushf
dec
pop
mov
addr16
mov
cmp
adc
arpl
add
inc
sbb
stc
scas
inc
xor
fnsave
mov
mov
jo
dec
insl
or
fldl
mov
push
dec
or
or
add
imull
sar
adc
sbb
xchg
aaa
cwtl
jmp
aas
jge
hlt
push
push
add
movsb
push
sub
mov
out
push
mov
into
rcll
xchg
addr16
mov
out
adc
mov
clc
movsb
or
daa
xchg
mov
std
inc
jl
jle
inc
mov
dec
mov
pop
sahf
pop
pop
sbb
leave
jo
sbb
cld
sub
scas
aas
fs
push
fwait
sub
and
push
cmp
fidivs
sbb
cwtl
push
sbb
mov
out
rorb
or
inc
call
jno
sub
fwait
jecxz
jae
ret
shl
mov
sbb
push
lret
inc
in
add
inc
push
call
sbb
outsb
daa
lods
or
popf
jge
sti
and
nop
push
les
push
add
in
xlat
or
xchg
pop
shrl
out
and
outsb
sahf
mov
pop
adc
or
mov
clc
mov
or
push
cmpsl
nop
insl
xchg
inc
push
cmp
sub
call
les
cmp
pop
testb
cltd
les
dec
xchg
jae
add
cli
sub
mov
into
pop
mov
xor
sets
add
dec
std
pop
cmp
arpl
sbb
sarb
es
stos
push
fiadds
cwtl
imul
sub
mov
out
jb
stos
mov
and
push
or
outsb
pop
imul
xchg
arpl
mov
xchg
jno
paddsb
mov
fwait
lods
rol
sti
cmp
jg
mov
mov
psllw
jbe
movsb
lcall
and
ret
decb
pushf
pop
call
ret
loop
mov
mov
xchg
bt
push
push
add
dec
push
test
push
movsl
int3
in
test
cmp
cmp
int
push
push
pop
add
fwait
test
jge
jecxz
aaa
lods
pop
rcrl
repz
push
xchg
es
jo
movsl
inc
push
adcb
mov
gs
aaa
adc
imul
mov
dec
and
outsl
fisubs
mov
push
ret
xor
lcall
pop
push
es
icebp
push
daa
mov
hlt
inc
incl
or
mov
fs
xchg
xor
cmpsl
shrl
jle
rcr
xchg
xchg
mov
insb
mov
fildll
mov
sub
cwtl
hlt
lea
test
pop
lds
out
in
mov
jno
lock
and
and
cmp
inc
int3
hlt
xor
jbe
lret
ljmp
sub
mov
sbb
inc
jo
mov
outsl
inc
sbb
pop
adc
out
pusha
push
xchg
sti
xor
call
gs
in
sub
dec
pop
stc
jmp
dec
mov
imul
insb
aas
push
lret
lcall
insl
push
pop
pusha
pusha
mov
mov
outsl
sahf
add
sub
xchg
icebp
mov
shrl
js
movsl
mov
imul
xor
or
pop
mov
adc
insl
jecxz
inc
mov
in
in
js
sbb
and
into
dec
adc
or
xor
fnstcw
xor
pop
jbe
enter
cld
pushf
aad
jg
jns
not
jecxz
fisttpl
adc
mov
sub
add
call
subb
add
push
cld
or
fisubs
movl
int3
popf
dec
arpl
push
mov
into
xchg
jo
mov
stc
movsl
cmp
xlat
pop
push
aad
push
mov
rcll
test
pop
and
not
daa
pop
adc
idivl
adc
lcall
xor
xchg
inc
loope
xor
call
dec
repz
inc
mov
fcmove
enter
into
in
stos
lods
mov
inc
mov
push
loope
pop
ds
je
jg
test
jmp
pop
dec
sbb
sub
or
inc
push
inc
leave
in
xor
insl
int3
sub
push
popa
push
movhps
push
addl
pop
push
inc
bound
mov
mov
and
cld
sub
aad
rcll
cmp
dec
outsl
or
ja
pop
in
mov
aaa
leave
sub
insb
push
sub
and
frstor
add
outsb
gs
shrl
dec
add
pop
pop
mov
or
push
add
mov
lret
push
inc
mov
xor
mov
mov
or
pminsw
fidivl
push
imul
sarb
mov
outsl
and
push
aad
push
data16
lcall
jecxz
xchg
push
imul
fmull
lock
inc
out
rorb
arpl
inc
nop
leave
ficompl
cmp
mov
jle
jecxz
sbb
mov
pop
dec
push
and
xchg
pop
daa
and
mov
lret
ret
call
out
lahf
jl
addb
adc
stos
xchg
xor
inc
stc
sbb
push
pop
fidivs
lahf
in
lret
sub
or
ljmp
mov
clc
mov
adc
jecxz
int3
sub
aad
aad
push
dec
lahf
arpl
or
inc
ret
pop
sti
hlt
push
sub
add
movsl
mov
in
int3
push
and
aas
outsl
inc
cld
imul
cmp
mov
xchg
xor
xchg
push
nop
lcall
fxtract
fists
imull
add
inc
or
xor
mov
mov
ret
mov
das
mov
enter
adc
or
js
sbb
push
fwait
pop
test
dec
push
fwait
loopne
sub
ds
sub
xor
cs
cli
ja
adc
cmp
cmpsl
push
movsl
loopne
cmp
fisubrl
fidivs
pop
cld
sub
jecxz
in
adc
pushf
hlt
sbb
or
cmpsl
sbbl
bound
push
loope
shrl
push
pop
out
cld
xchg
xor
jne
iret
insb
mov
dec
xor
lock
jnp
adc
sbb
xor
mov
sti
negb
mov
outsl
xchg
int
adc
jo
xchg
aam
rcrb
call
mov
pop
enter
stc
xchg
std
xchg
adc
lods
adc
aam
into
mov
outsb
pop
stos
loop
ret
insb
xor
pushf
mov
and
sbb
jg
jg
pop
pop
loop
std
fucom
pop
repz
dec
clc
xlat
pop
addl
outsb
scas
mov
mov
ret
loop
push
out
out
inc
adc
jle
call
lea
mov
sbb
or
mov
mov
xchg
out
and
addl
shl
mov
adc
mov
lock
or
mov
in
and
aad
into
ja,pn
loop
push
sbb
mov
cmpsl
mov
and
sub
loopne
or
mov
xor
add
negl
add
push
fldcw
mov
mov
add
xchg
out
out
scas
loopne
sbb
pop
leave
lods
nop
shll
adc
cmp
jl
inc
jmp
out
shll
xorl
sbb
leave
xor
pop
orb
and
sub
movl
fnsave
ja
aam
pop
jb
mov
adc
fisubs
or
orb
scas
aaa
daa
nop
push
daa
jecxz
xor
insb
icebp
mov
push
movsb
mov
mov
mov
clc
sbb
cmp
int3
sar
sbb
sub
and
dec
adc
xor
jae
inc
jns
ret
xchg
jle
lods
mov
and
pop
mov
jns
sti
inc
pop
jmp
adc
or
xchg
fldl
out
fisubrs
sar
insl
mov
push
fadd
clc
notl
sbb
mov
fs
popa
je
pop
fists
insb
adc
dec
xchg
xor
pushf
stos
lods
lea
lahf
push
push
outsl
push
xchg
xchg
push
inc
push
addr16
or
lea
inc
push
decb
mov
leave
mov
nop
rcrb
insl
mov
push
mov
inc
push
xor
daa
enter
and
push
cmp
es
xor
sbb
repnz
js
pop
lods
sub
cli
in
and
add
xchg
je
stos
sarl
push
cli
adc
loop
jns
lea
outsl
push
mov
dec
sbb
fsubrs
jbe
inc
cltd
repz
push
pop
aaa
add
push
push
mov
loopne
mov
adc
cmpsl
hlt
jno
fcmove
mov
fneni(8087
rcrb
or
rcrb
mov
xor
in
enter
inc
repz
cmpsl
insb
jnp
call
adc
dec
ljmp
lds
pop
js
or
and
in
sahf
mov
mov
loope
popf
mov
jbe
arpl
lret
pop
movsl
cmpsb
mov
ja
mov
mov
inc
rorb
cmp
jl
movsl
lret
lods
scas
add
int3
aas
js
adc
ds
pop
lea
and
jecxz
arpl
inc
xchg
xor
mov
hlt
rdtsc
xor
push
test
inc
dec
test
aam
fwait
mov
lcall
out
mov
daa
mov
stc
stos
ds
cmp
cmp
xchg
adc
sbb
and
jae
sbb
outsb
in
and
jg
out
cmp
add
sahf
xor
xlat
mov
inc
mov
mov
imul
jmp
mov
sbb
aaa
adc
dec
or
jl
pop
push
dec
mov
adc
fdivs
pop
data16
hlt
pop
push
push
shl
and
int
or
clc
cmpsl
adc
adc
mov
enter
lar
enter
addb
mov
jle
testb
test
bound
cld
outsl
jl
push
mov
pop
loop
adcl
insb
jmp
fdivrl
or
mov
add
jne
pop
aaa
mov
dec
xlat
pop
hlt
icebp
sub
mov
jnp
sarl
nop
push
adc
inc
cs
dec
and
sub
loop
mov
test
ds
xor
add
pop
es
shr
hlt
imul
pushf
or
lahf
push
pop
add
aas
movsl
mull
pop
mov
mov
jno
lods
cmp
xchg
xchg
pop
xchg
or
aas
test
or
or
out
std
or
fsubs
popa
mov
adcb
pop
cmp
pushf
pop
pop
add
xchg
dec
cmp
out
aam
pop
add
pusha
into
or
mov
xchg
add
pop
notl
les
sub
mov
add
subb
in
jecxz
iret
popa
scas
inc
mov
sbb
pop
enter
aam
fnstsw
inc
adc
nop
or
iret
iret
shll
mov
add
mov
repz
mov
add
lods
mov
stos
js
pop
xor
ficomps
lret
repz
jmp
mov
push
in
add
dec
fmuls
roll
pusha
stos
lcall
dec
cmpsb
ds
iret
fs
or
mov
sbbl
cmpsl
loope
mov
dec
sarb
movsb
addr16
testb
fcmovnu
lahf
fs
xchg
fldenv
cmp
mov
es
or
lret
mov
out
ja
popa
fucom
push
ss
aaa
shl
stos
stos
dec
test
or
and
ret
fs
jg
jb
pop
inc
daa
mov
out
out
dec
xlat
cwtl
push
mov
push
mov
dec
push
inc
inc
or
insb
cmpsl
pop
xor
inc
cld
xor
jecxz
scas
clc
scas
adc
inc
push
xchg
icebp
pop
add
pop
xor
sub
xlat
sbb
and
mov
adc
adc
or
push
xchg
shlb
pop
lret
rorb
scas
popl
mov
insb
shlb
sarb
es
scas
push
aas
aaa
popf
testb
mov
xchg
test
lret
cmp
lock
jo
outsl
jno
xchg
in
pop
or
aas
mov
xchg
mov
mov
mov
push
aaa
add
mov
push
adc
mov
sbb
xor
xchg
pop
or
xor
add
shrb
dec
pushf
mov
adc
in
dec
pop
pop
aad
mov
inc
sbb
pop
mov
jo
dec
dec
xchg
in
lock
sbb
fbld
sbb
cmpsb
ja
jg
popf
js
push
clc
xchg
mov
mov
stos
jns
jae
in
jl
into
push
jnp
mov
sbb
cmpsl
xchg
fwait
fs
in
addb
adc
push
or
out
xchg
jb
fcomp
mov
fwait
mov
ss
test
pop
ljmp
adc
enter
add
int3
push
jl
and
sub
xor
cmp
and
inc
push
and
mov
and
cmp
mov
cltd
fwait
xchg
in
lcall
inc
mov
fisubrl
push
mov
inc
or
xchg
cwtl
lret
fidivl
fimull
int3
inc
sbb
out
pop
gs
mov
pop
cmp
pop
xchg
or
push
mov
add
clc
mov
fs
call
push
std
pop
lea
and
pop
sub
fstps
cmpsl
add
cmp
pop
mov
fucomp
bound
dec
mov
adc
mov
and
pushl
pop
mov
sarb
mov
or
cmp
test
add
popl
aas
or
or
xor
scas
in
scas
jb
cltd
lret
popa
pop
cmpsb
jmp
pop
adc
hlt
pop
mov
in
pop
push
dec
cmp
cli
lcall
jbe
xor
cltd
sarl
sbb
or
sub
sbbb
sbb
or
cltd
lock
dec
mov
pop
mov
push
adc
pop
mov
jns
push
adc
aas
xchg
add
lret
mov
testb
mov
jne
std
xchg
aaa
cmp
test
sbbb
cmp
or
jae
sti
mov
add
mov
test
sbb
pop
mov
sbb
stos
xchg
mov
neg
ljmp
cltd
mov
push
or
lods
ds
mov
mov
loop
pop
loop
leave
inc
mov
outsb
cmpsb
pop
inc
fadds
inc
shll
int3
dec
mov
leave
push
cmp
push
insb
mov
mov
dec
jno
and
loop
inc
cmp
notl
ret
outsl
sub
fdivl
loopne
inc
outsb
popf
inc
sbb
or
arpl
pop
shl
push
pop
addr16
insb
imul
test
mov
repz
push
je
cwtl
xchg
ds
pop
cs
in
dec
and
inc
outsb
test
jno
mov
xor
ds
add
inc
es
jne
leave
adc
mov
into
push
mov
lcall
mov
push
daa
out
js
xor
mov
pop
xchg
out
mov
push
pop
push
pop
lret
mov
dec
jle
mov
jb
jnp
into
cmp
test
sub
scas
push
outsb
repz
outsb
push
xchg
movb
push
mull
les
adcl
xchg
fists
sbb
and
movsl
push
hlt
push
loopne
inc
in
lahf
sahf
ror
or
pop
and
std
xchg
shll
fs
ja
xchg
fs
out
jae
rcll
xchg
mov
clc
inc
pop
lds
push
lods
aas
mov
cmp
insl
mov
out
ljmp
xor
int3
mov
scas
sbb
xchg
xchg
add
ljmp
mov
push
pop
adc
sub
divl
ds
mov
mov
mov
mov
rclb
sub
pop
jp
test
cmp
push
cmpsl
xchg
std
xor
mov
sbb
out
sub
cs
loope
popa
dec
mov
adc
icebp
mov
xchg
movsl
jmp
rcll
push
outsb
repnz
sbbb
loope
mov
push
into
and
adc
push
jp
movsb
and
and
xlat
fcmove
sbb
shlb
scas
mov
rorb
add
sub
mov
test
dec
out
xchg
loopne
rcl
xor
mov
xor
inc
dec
sub
mov
or
in
mov
push
dec
mov
push
xor
push
dec
sub
mov
in
stos
xchg
outsl
xchg
jg
scas
mov
aam
sarl
insl
in
enter
inc
xchg
iret
or
sub
ret
xor
mov
xor
mov
adc
xor
clc
xchg
sar
call
aaa
pop
xor
lock
mov
jmp
pop
decl
mov
add
outsl
es
leave
and
nop
test
ja
xchg
aad
inc
outsl
dec
out
mov
pushf
push
les
push
fwait
jbe
mov
jmp
mov
ret
xchg
jae
outsl
jb
ja
mov
jmp
nop
dec
xchg
int3
mov
lea
inc
test
jnp
push
jecxz
dec
ficoml
call
push
testb
mov
ss
aad
push
sbb
adc
arpl
cmp
xlat
xor
adc
popf
pop
cwtl
loopne
push
adcb
adcb
mov
mov
fs
pushl
in
sub
lret
lds
std
sahf
xor
test
out
incl
ds
das
adc
leave
fidivrl
icebp
dec
mov
push
xchg
cmc
inc
mov
cmc
nop
inc
cli
icebp
cmp
push
dec
lea
xor
jnp
cltd
sbb
and
ljmp
insl
pusha
inc
jns
aad
adc
jae
fisubl
sahf
jl
mov
jp
call
stc
jno
mul
fsts
xor
cld
clc
dec
jmp
cmpsl
push
ret
testb
push
cmp
mov
mov
or
and
fsubl
ja
leave
mov
xchg
inc
xor
insl
cmp
lods
in
daa
jmp
iret
inc
movsl
sti
loopne
mov
and
rclb
icebp
lahf
pop
cmp
sar
pop
aas
adc
dec
xlat
cmp
pop
xchg
aas
into
xor
jno
rcrb
das
fimull
and
sbb
lret
cld
into
ret
inc
mov
hlt
jle
mov
jbe
out
call
enter
or
test
leave
and
inc
push
lds
and
jne
out
rcrb
ljmp
ljmp
sbb
scas
lahf
adc
sbb
orb
mov
cwtl
ret
loop
ret
mov
clc
mov
push
jp
cmp
and
adc
pop
jecxz
ror
mov
cmp
and
inc
xchg
mov
or
in
ja
mov
dec
lcall
es
je
jge
dec
push
sub
pop
fdivrl
into
inc
ret
xor
push
cmp
mov
cmpl
into
pop
idivb
jbe
jae
mov
mov
insb
xor
imul
jmp
lods
shl
ja
or
shrl
scas
add
jge
and
push
push
push
inc
adc
ret
aaa
sub
mov
jb
in
sub
push
mov
add
aaa
ds
int
lret
int
jg
fwait
sub
xchg
stos
shll
aad
dec
movsl
repz
add
out
out
push
stc
cmpsl
out
add
in
aaa
adc
loopne
outsb
and
push
cmpsb
mov
rolb
sbb
aad
subl
stos
add
or
push
mov
mov
xlat
mov
cld
mov
xchg
fldenv
lcall
mov
cmpsb
dec
push
mov
inc
cmp
sbb
push
inc
mov
jmp
sbb
mov
das
daa
and
push
aaa
clc
cmp
xor
sti
cmp
je
sbb
mov
iret
lock
insb
daa
mov
cwtl
jg
xchg
push
push
or
sbb
mov
ldmxcsr
add
adcl
lret
or
xlat
stos
mov
jae
addb
mov
mov
aaa
jmp
push
cmp
inc
data16
cmpsb
cmp
mov
pop
add
fnsave
notb
gs
scas
getsec
dec
and
lds
inc
sbb
dec
mov
clc
sub
dec
data16
das
sbb
aas
mov
push
outsb
aad
inc
and
clc
scas
or
dec
daa
lods
push
mov
sub
xchg
xchg
test
xor
rcrl
jg
pusha
jnp
imul
xchg
adc
lret
cld
mov
lods
push
mov
insb
gs
push
mov
mov
cmc
lods
mov
or
ja
popf
add
hlt
ja
xchg
and
xor
xchg
or
lock
sub
ss
lea
push
jnp
mov
dec
jns
fdiv
push
xchg
push
aaa
xchg
xchg
aad
ljmp
jb
lds
inc
push
mov
sbb
out
and
setns
sub
in
push
stos
add
lret
mov
pop
push
pop
das
push
mov
mov
xchg
aam
fmull
jno
pop
push
mov
stc
inc
add
and
rcl
hlt
push
or
cld
je
into
ljmp
nop
push
or
sub
pop
ret
mov
add
into
xor
out
add
sub
cmp
out
call
aaa
xchg
je
sbb
pop
pop
xlat
addr16
popa
and
mov
jo
inc
adc
mov
aam
inc
pop
in
dec
loop
out
mov
jbe
cli
outsl
and
out
out
lahf
rclb
mov
fistpl
sub
mov
inc
daa
cmp
and
clc
dec
mov
ret
je
lock
fld
out
xorb
jno
pop
ljmp
int
push
outsb
xchg
cmpl
add
sub
shl
inc
outsl
imul
mov
addr16
out
mov
and
std
cmp
inc
gs
call
push
dec
push
xor
mov
xlat
out
jp
or
rcrb
ja
jbe
lods
call
xor
push
fbstp
inc
idivl
cmp
in
push
mov
jno
enter
ror
lcall
dec
and
mov
fdivrl
and
jns
push
sub
add
aam
mov
jge
das
and
mov
jb
fwait
cmp
in
sbb
xor
jle
xor
pop
mov
shlb
dec
push
xlat
rcll
xchg
repz
fisubrs
int
dec
xchg
daa
lret
push
sbb
rorb
pop
push
mov
xor
nop
jb
fmuls
stos
pusha
add
cs
daa
leave
mov
sub
fisttpl
sti
cmpl
in
popa
mov
push
mov
sub
addl
mov
je
push
or
ficompl
outsl
adc
cmp
xor
lods
cltd
push
out
movsl
loop
out
imul
in
cmp
imul
loope
sbb
xchg
push
mov
cs
inc
sub
in
push
xchg
imulb
stc
cmp
cmp
out
cmpsl
outsl
enter
adc
mov
cmp
xlat
test
sbb
and
pop
adcb
loopne
pop
repnz
ffree
inc
jmp
cwtl
movsb
dec
add
mov
and
imul
popf
xor
les
push
sbb
rol
mov
sbb
mov
dec
sbb
fs
js
jecxz
push
push
icebp
daa
xchg
stos
repz
sbb
lods
and
xor
jb
repnz
or
int3
sbb
or
aaa
mov
sub
xor
leave
dec
pop
leave
ja
loopne
scas
and
push
lcall
dec
pop
xchg
movl
mov
mov
dec
je
std
inc
aaa
js
push
sub
jmp
loope
adc
xchg
sub
jo
hlt
dec
cmp
or
ja
rep
mov
dec
pop
filds
mov
fcompl
dec
and
idivl
cltd
dec
lods
bound
hlt
xchg
sbb
jmp
mov
rcrl
or
les
push
dec
fnstsw
divb
movsb
sbb
in
data16
push
cmpsb
push
jnp
dec
inc
outsl
and
dec
sahf
sbb
jmp
sarb
popa
xchg
jecxz
andps
adc
add
xchg
cs
mov
scas
lds
icebp
out
scas
mov
clc
fisubrl
inc
mov
xor
sbb
xchg
fs
xchg
cmp
jge
xor
cli
mov
cmpsb
lea
stc
popa
pusha
jne
xchg
inc
test
mov
push
lcall
dec
out
cmp
fld
ja
mov
cmp
cmp
mov
and
inc
stos
inc
push
add
loope
fwait
dec
mov
fisubs
in
nopl
sbb
add
ret
jns
dec
push
stc
sub
inc
cmp
or
add
or
inc
add
aad
xchg
dec
bound
scas
and
mov
and
data16
and
xlat
jl
pop
ljmp
mov
lock
lods
out
pop
mov
jb,pn
pusha
popa
test
jo
xchg
addw
pop
cmp
pop
lock
pop
xor
lock
mull
daa
dec
shr
fnstenv
cmp
cli
popa
aas
cmpsl
std
or
mov
gs
adc
mov
fdecstp
out
inc
imul
sti
imul
sub
xor
pop
xchg
add
xchg
les
fwait
xchg
add
sub
mov
mov
das
lea
js
sahf
push
rcll
ret
sbb
ret
sbb
or
nop
add
sub
lock
into
add
jno
into
cmp
adc
rorb
jge
mov
bound
insb
mov
shlb
ds
popa
dec
popf
shrb
or
int
lret
add
or
cmpsw
ret
js
mov
sbb
sub
out
sub
sub
pop
mov
cmp
cmp
xor
outsl
inc
mov
scas
jmp
arpl
lods
arpl
adc
jle
lcall
add
cmp
jns
stos
sbb
cmp
pop
mov
xchg
test
adc
pushf
add
push
test
push
out
mov
lds
mov
mov
jmp
imul
mov
push
push
movb
push
idivl
mov
test
dec
dec
add
cmpsb
out
pop
lret
mov
pop
inc
mov
outsb
leave
sbb
div
mulb
add
jb
test
sti
push
leave
movl
mov
dec
cmpsb
iret
xchg
shlb
repz
mov
arpl
dec
into
xchg
mov
repnz
mov
mov
add
scas
jb
xor
mov
dec
cwtl
lods
gs
test
mov
iret
pop
faddl
mov
int
pop
sbb
cwtl
dec
cld
add
fsubrs
or
sbb
pushf
push
push
fistl
push
sahf
mov
test
sbb
fsubrl
push
loopne
pop
jne
ds
xchg
negb
stos
insb
repz
dec
pop
in
ss
dec
mov
call
push
sahf
test
in
out
jl
xchg
push
ret
fstpl
cmp
xchg
icebp
mov
ret
dec
jnp
xor
xchg
xchg
pop
xchg
mov
xor
or
push
mull
aam
push
dec
jmp
enter
mov
push
js
insl
pop
xor
sbb
insl
mov
pop
rcrb
and
mov
cwtl
cmc
fmul
xor
js
sub
aaa
inc
lods
sarl
sub
push
pop
inc
mov
arpl
add
sbb
fisttpl
jae
adc
adc
cltd
lret
pop
adc
pop
push
mov
cwtl
sub
movsl
frstor
inc
mov
gs
hlt
clc
sahf
cs
sbb
cmp
mov
stos
xchg
push
loope
andl
and
mov
add
int
aaa
bound
xchg
adc
repnz
insl
jmp
or
jge
call
jle
adc
cmpsl
int
int3
jp
sbb
add
mov
iret
lahf
fsubr
clc
push
ss
in
adc
out
inc
fiadds
aaa
push
cmp
and
dec
mov
call
loope
add
or
dec
sahf
inc
lcall
xchg
pop
icebp
stos
mov
dec
loopne
dec
dec
add
dec
adc
mov
les
mov
push
jl
ret
mov
lods
nop
add
sar
dec
jbe
mov
sub
pop
pop
icebp
xorb
dec
or
out
sbb
sahf
or
dec
jge
add
xchg
push
bound
rclb
fs
and
es
inc
dec
scas
in
push
addr16
add
add
pop
mov
push
push
jo
mov
cmp
leave
sub
add
mov
jno
dec
xor
and
ss
mov
xor
mov
jecxz
adc
fcompl
cld
mov
loop
scas
insb
xlat
inc
adc
xchg
in
rcrb
or
out
xchg
dec
xchg
cmp
xchg
sub
jl
jle
xor
mov
or
mov
sub
push
lret
fdiv
mov
mov
or
stos
cwtl
popf
shll
sbb
mov
xlat
fdivrl
mov
movsb
mov
lock
mov
imul
pop
push
or
sub
addr16
aaa
movsl
jnp
je
pop
aaa
and
jae
bound
sub
jnp
push
fsubl
scas
mul
mov
lock
add
push
mov
addl
sub
jmp
mov
jl
mov
pushf
aam
mov
pop
mov
pusha
xchg
and
jno
call
mov
sbb
test
bound
jae
adc
movsb
mov
mov
lock
cld
add
mov
inc
add
inc
and
and
outsb
dec
mov
aaa
hlt
repnz
mov
xorb
ds
cs
mov
jmp
jb
lret
cmp
xor
pop
stos
dec
push
decl
mov
sbb
bound
add
add
or
jl
xor
push
add
cmp
cli
xor
inc
mov
rolb
pop
inc
ret
xchg
fists
fs
lcall
mov
cs
ficompl
mov
jb
inc
mov
gs
jb
xlat
add
insb
rclb
test
mov
daa
sbb
mov
pop
dec
int
push
faddl
push
outsl
mov
push
mov
call
int
popf
fisubs
fsubrl
pop
dec
pop
jno
jecxz
lock
add
loope
jmp
subb
int3
lcall
incl
leave
adc
mov
cmc
das
or
xchg
xor
mov
add
adc
cld
cli
pop
pop
insb
insb
clc
test
gs
sbb
push
call
rcrb
les
pop
xchg
ljmp
das
dec
add
movsb
jo
mov
ret
enter
inc
jge
dec
mov
leave
arpl
test
mov
add
push
cmp
xchg
sbb
adc
xchg
add
call
sarl
ds
imul
xchg
fmuls
insb
ss
shll
jno
add
outsb
outsl
lret
jne
and
mov
xchg
out
rolb
add
popf
call
out
test
mov
push
or
test
push
dec
and
jecxz
imul
inc
mov
inc
xchg
pop
or
jl
add
jg
cmpsl
arpl
dec
jnp
push
push
xor
loopne
aam
aam
xchg
insl
aam
aam
cltd
pop
and
out
cwtl
std
sbb
mov
jp
iret
lret
inc
sub
sbb
jb
mov
aad
js
shrl
es
sub
and
cmpsl
arpl
movsb
cmp
je
dec
das
xor
push
xchg
shlb
test
and
sub
pop
inc
lcall
cmpsb
push
jae
mov
gs
cmp
push
and
mov
call
pop
adc
add
fnstcw
mov
insl
adc
push
mov
lds
incl
jns
push
es
xor
in
add
pop
jo
dec
mov
mov
xorb
ret
push
push
roll
mov
aas
iret
gs
ss
lret
jecxz
bound
push
pushf
xor
cmp
pusha
fwait
add
gs
push
push
push
imul
pop
xor
push
and
push
ret
aad
cmp
sbbb
outsl
pop
ja
stos
and
fisttpl
lea
clc
or
hlt
xor
out
scas
pop
xchg
mov
js
xor
xor
xchg
ds
xchg
lea
mov
movsb
incb
xor
das
xchg
lcall
mov
mov
clc
mov
mov
mov
loopne
push
dec
xchg
jb
mov
js
fwait
jle
xchg
pop
jne
ret
dec
and
inc
mov
loope
sbb
mov
jmp
xchg
push
mov
arpl
sbb
sub
pop
xor
sbb
ret
aad
add
ss
mov
leave
xor
sarl
pop
add
cmp
dec
int3
adc
loopne
test
mov
clc
xor
push
and
mov
mov
mov
out
push
lret
sarb
dec
inc
cld
jns
mov
lahf
arpl
shr
mov
inc
stc
adc
dec
jne
lods
mov
jns
scas
nop
or
add
jmp
jecxz
cld
inc
push
jno
nop
fsub
push
mov
pushf
in
popa
inc
xor
or
xchg
pop
mov
outsb
call
push
mov
lcall
push
mov
rcll
popa
add
jp
sbb
ret
xchg
aas
jl
aad
in
xor
push
and
and
adc
jb
ret
push
add
imul
mov
mul
popf
push
ljmp
add
inc
fwait
pop
xchg
nop
ja
lahf
sub
mov
mov
push
faddl
loop
ljmp
hlt
mov
xchg
xchg
cwtl
mov
xchg
add
shl
cmp
pop
icebp
jp
stos
in
xchg
gs
pop
insb
sti
lods
sbb
hlt
jge
in
sbb
mov
mov
add
pop
insb
pop
add
clc
repz
repnz
cmp
mov
in
fwait
cmpsl
ficompl
movsb
lds
jnp
sbb
push
mov
jb
pop
sbb
std
and
pop
mov
jecxz
pop
stos
sti
mov
shrl
ja
xor
add
ret
cmp
hlt
xchg
lods
ret
jno
bound
or
shlb
adc
inc
mov
push
mov
pop
sub
subl
push
clc
test
enter
mov
adc
push
xor
addr16
setae
fnsave
fiaddl
test
jge
outsb
mov
push
pop
scas
test
push
push
leave
fucomi
repnz
mov
xor
lods
or
xor
dec
adc
cmpsl
jmp
lcall
fistl
push
je
dec
sbb
out
push
out
and
out
mov
pop
fwait
add
lcall
jl
cmp
ss
fcoml
xlat
xchg
mov
or
pushf
enter
rcrb
or
sbb
test
loop
mov
push
mov
into
enter
dec
test
in
and
sbbl
shlb
push
aas
sub
lahf
xor
cmp
jmp
in
imul
add
pop
and
sbb
and
and
das
xchg
mov
stos
cmpsl
clc
test
mov
jb
inc
pop
popa
outsl
pusha
adc
inc
xchg
push
mov
jno
jb
movsb
push
nop
or
cltd
gs
mov
or
push
bound
mov
out
adc
fwait
cmp
mov
loopne
xchg
in
pushf
aas
jbe
push
mov
pop
xor
inc
push
js
add
mov
mov
les
rcrb
ss
and
inc
sub
sbb
mov
punpckldq
inc
jle
lret
cwtl
stos
pop
xor
xchg
stos
inc
dec
in
clc
adc
mov
push
inc
int
repnz
cmp
jle
xor
push
fldcw
nop
movzbl
int3
inc
or
loopne
jle
pop
jp
add
je
scas
cltd
shlb
out
popl
mov
mov
nop
push
mov
popa
icebp
push
addr16
fistpl
repz
movsb
into
mov
test
dec
repnz
outsl
sarb
hlt
dec
out
jg
test
or
aas
mov
pop
out
out
fisttpll
lds
movsl
xlat
rorl
mov
loop
lcall
push
pop
dec
orb
enter
stos
ficoms
and
dec
and
pusha
or
and
sub
adc
sub
mov
inc
repnz
ljmp
cmp
inc
stos
add
pop
insl
cli
divl
jge
sbb
lock
or
jb
shrl
jmp
test
push
xchg
adc
and
dec
mov
mov
jge
sub
or
jno
or
jecxz
sbbl
add
dec
ja
dec
xor
add
sub
push
clc
jmp
or
rcll
jae
jno
sarb
dec
dec
sbb
sbbb
out
out
popa
pop
out
cs
mov
in
xor
fcmove
fiadds
and
imul
xchg
aaa
test
lock
xchg
int
leave
int3
repz
jbe
and
movsb
bnd
stos
add
xorb
inc
xchg
add
clc
stos
aaa
or
inc
movsl
fsubs
div
xor
or
cmp
xchg
mov
jb
xchg
icebp
fmul
in
mov
cmpsl
push
push
dec
or
lahf
in
fmulp
push
sub
stc
decb
rorl
imul
ret
or
lret
jbe
fnstsw
mov
xchg
fwait
jle
adc
push
popa
cwtl
push
faddl
sbb
mov
mov
rclb
imul
inc
ret
mov
mov
mov
pushl
add
sub
dec
in
pop
data16
enter
jmp
subb
push
sbb
inc
pop
jo
xchg
int
imul
fisttpll
ljmp
movsb
loop
and
mov
daa
or
cmpsb
mov
std
push
iret
int3
xor
cmp
ja
mov
cmpsb
pop
in
dec
inc
mov
push
xchg
dec
mov
add
jno
jp
pop
movsl
push
jp
es
cwtl
push
pop
dec
inc
xchg
ret
mov
sbb
stos
mov
out
mov
inc
lods
les
jns
lret
movsb
or
lods
stos
fadds
sub
xor
stc
pop
jno
pop
dec
dec
or
test
xor
lea
lods
sbb
dec
cmp
movsl
inc
xor
xor
dec
add
xchg
inc
or
xor
pop
cli
outsb
mov
cmpsb
lret
adc
imul
ss
mov
and
push
clc
add
mov
sub
hlt
loop
cmp
cmc
add
in
fdivrl
push
add
jno
or
push
dec
add
dec
hlt
aas
pop
leave
fsts
mov
test
pop
dec
ror
cs
pop
vmptrld
mov
add
test
lcall
jae
cmpsb
mov
test
inc
std
loope
test
orl
fnstsw
cmpsb
mov
dec
mov
push
fldcw
push
dec
mull
fmuls
jmp
cmc
mul
adc
adc
jae
ljmp
repnz
fldt
sarb
or
add
repnz
rol
mov
jnp
or
icebp
lcall
xor
xor
add
insl
cmp
add
pop
popa
push
xor
and
push
or
ret
pop
insb
mov
mov
mov
mov
mov
int3
in
xchg
sbb
out
ret
and
imul
mov
sarl
inc
cmp
mov
add
xchg
lods
or
push
jnp
mov
adc
mov
ret
pushl
in
jno
jne
fistpl
fsubrs
adc
jne
fadd
and
icebp
xor
lea
mov
adc
push
ljmp
shlb
cmp
scas
fiadds
adc
sti
cli
das
mov
lcall
cmpsb
mov
orb
jl
mov
push
pop
ficoml
and
xchg
add
aam
mov
imul
pusha
or
adc
pop
cmp
shlw
loope
jp
sub
xor
xor
cmpsb
lret
and
jae
sub
dec
fldt
insb
xlat
xchg
fnsave
mov
cmp
mov
mov
ficoml
divl
je
xor
adcb
and
faddl
lds
movsl
cmc
in
push
mov
dec
insb
stc
pusha
add
cmp
ffree
push
cmp
lcall
sti
dec
sbb
test
push
pop
and
lea
lock
jp
test
push
dec
nop
xor
pop
jnp
mov
adc
push
insl
rcll
xor
sub
xor
inc
pop
cmp
sbb
push
xor
mov
mov
ret
xor
lods
pop
mov
insb
add
xor
xor
cmpsl
xchg
push
mov
cwtl
hlt
fwait
xor
lea
inc
cmpsl
or
cmpsl
push
push
xchg
mov
dec
out
cmpsb
shrl
cmp
mov
jne
rolb
mull
dec
jl
jle
or
sbbb
out
jnp
cmp
daa
stos
pop
inc
fadd
sub
dec
xor
daa
xor
filds
mov
rep
out
mov
repnz
xor
dec
aad
xor
push
into
enter
loope
inc
dec
sbb
test
jg
mov
adc
int3
mov
out
icebp
pusha
pop
mov
call
push
dec
mov
jg
mov
test
add
roll
notb
fsubs
bound
push
or
sub
popf
mov
outsb
nop
push
lea
mov
sub
int
jle
pop
int3
sti
lea
jns
aam
adc
adcb
pop
inc
and
roll
insb
cld
mov
mov
mov
ret
cmp
push
pop
ficomps
inc
mov
in
aam
fcoml
movsb
push
dec
pushf
lahf
pop
mov
cmp
xchg
jp
aad
das
outsb
inc
imul
rorb
push
mov
cltd
inc
sbb
lock
xor
mov
incb
out
sbb
aaa
xchg
addr16
ds
sahf
popa
sti
loop
cs
in
stos
and
in
sbb
jecxz
aas
lea
stc
test
lods
add
jae
push
push
push
pop
addr16
jle
pusha
lahf
mov
inc
fcoml
push
dec
push
jbe
mov
jno
pop
lods
loopne
idiv
push
loopne
pop
daa
and
pop
and
mov
add
pop
rep
mov
in
int3
inc
pushf
mov
stc
sbb
push
mov
ret
jno
push
jns
mov
mov
xchg
movsb
fcmovne
jg
jge
mov
and
lret
stos
jmp
push
stos
jmp
fcomp
push
jne
dec
xor
push
ds
xlat
sub
mov
inc
cmpsl
adc
dec
andb
lahf
dec
shl
mov
rcll
stos
scas
dec
mov
arpl
sahf
jle
test
stc
je
inc
ljmp
mov
sub
scas
mov
push
sbb
leave
or
and
stos
bound
mov
stos
fidivrl
fxtract
mov
hlt
outsb
sti
imul
sub
fs
stos
aam
jmp
cltd
pop
push
xchg
push
faddp
arpl
pop
ds
jb
push
mov
subb
pusha
insl
push
push
or
sbb
mull
push
jo
cmp
xchg
int
or
jp
add
add
add
rcll
push
adc
sbb
pop
push
xchg
fdivrs
dec
pusha
out
jge
arpl
dec
outsb
inc
addr16
inc
repnz
adc
add
stos
and
jne
mov
jne
lcall
stos
lret
es
xchg
xor
mov
and
or
push
and
mov
je
jae
lods
shl
inc
cmp
fisubrl
ja
addl
push
sbb
fbstp
scas
and
or
sbb
mov
pop
insb
xor
or
mov
scas
lahf
pop
rclb
pushf
mov
mov
shlb
push
inc
sti
jns
hlt
dec
int3
lret
fisttpl
rcr
add
xlat
xorl
add
mov
out
sbb
arpl
and
pushf
xchg
sub
mov
dec
dec
xor
and
insb
inc
mov
push
loop
pop
mov
push
fimuls
cmp
cmp
inc
shll
fxam
lds
je
mov
xlat
out
inc
xlat
adc
push
cwtl
pop
cli
rclb
and
mov
nop
icebp
and
and
mov
jge
js
jne
and
scas
push
jns
mov
ficompl
push
ficoml
stos
or
jle
dec
in
das
frstor
jg
pop
js
xchg
out
popa
sub
movsb
mov
xor
testb
pop
mov
push
push
pop
insb
sub
out
and
mov
movb
in
xchg
das
repnz
shl
mov
or
pushw
or
addr16
jae
mov
outsl
xchg
clc
cld
pop
test
pop
rorb
dec
lea
sub
in
adc
iret
mov
jbe
out
scas
sub
xchg
add
aad
ret
repnz
insl
aam
roll
loopne
push
mov
icebp
insl
cltd
or
inc
mov
jbe
ret
inc
lds
add
inc
das
fsubrp
bound
movsl
jno
in
mov
xchg
pop
or
fstps
test
in
sbb
pop
ds
dec
sub
sahf
cmp
ret
mov
xor
add
mov
into
repnz
or
sahf
mul
xchg
mov
insl
push
lds
in
jnp
jb
xor
pop
out
mov
mov
adc
adc
aas
pop
int
jle
add
pop
push
sub
rcrl
arpl
loopne
push
mov
push
out
ficoml
and
sti
jmp
int
arpl
mov
andb
inc
movhpd
xchg
repz
stc
jb
movsl
subb
decl
inc
xchg
gs
push
mov
movsl
xchg
leave
sbb
lods
fbld
ds
rorl
sbb
rclb
incl
dec
lock
adc
cmpsb
xchg
test
test
js
adc
xchg
and
lahf
imul
mov
pop
pop
out
mov
enter
stos
ja
mov
mov
pop
cmp
sbb
inc
lock
inc
inc
lcall
dec
jno
out
mov
pop
in
jne
mov
cmc
pop
adc
dec
pop
jne
mov
clc
outsb
sub
mov
je
dec
fs
mov
les
outsl
lret
sbb
dec
lods
aaa
aaa
cli
dec
push
test
cmp
pop
in
clc
mov
fs
jbe
pop
xchg
cmp
lods
xchg
jno
gs
rorl
popa
and
dec
jp
add
aas
xor
jnp
mov
xor
add
lods
jle
out
pusha
push
xor
mov
cmp
xchg
xchg
fs
stos
jnp
push
in
pop
icebp
ljmp
ficomps
dec
fwait
jo
push
out
fiaddl
jmp
roll
js
mov
adc
mov
mov
arpl
cltd
dec
push
adc
add
or
mov
mov
cld
jmp
popa
repnz
daa
stos
ret
lcall
and
and
adc
test
mov
inc
adcb
lea
push
xor
test
outsl
shr
cwtl
and
xchg
push
xlat
imul
jns
out
and
pushl
pop
je
inc
xchg
jecxz
xor
cmpsl
mov
aad
add
lahf
sbb
insb
loop
daa
fistl
lea
jg
loop
repz
loopne
repnz
mov
adc
adc
mov
push
sbb
inc
adc
data16
ss
loop
icebp
out
jno
sbb
jge
cmpsl
mov
mov
out
and
mov
gs
sub
shlb
arpl
clc
jmp
in
in
xchg
mov
jmp
js
std
sti
das
mov
jne
pop
jns
fdivrl
xchg
push
in
mov
adc
mov
jbe
dec
fcmovnbe
adc
xchg
int3
mov
add
cmpsb
loope
adc
sub
dec
enter
mov
decb
dec
or
adc
or
jae
testl
ret
xchg
sbb
dec
adc
pop
mov
sbb
xlat
mov
inc
leave
pusha
jmp
pop
dec
lahf
pop
scas
dec
inc
stos
imul
repz
or
fisttpll
pop
mov
jmp
andb
adc
cmp
xor
inc
into
dec
jge
shll
mov
pop
xchg
jge
pop
shrl
or
fwait
iret
mov
jbe
mov
jno
movsb
mov
lds
pop
push
mov
inc
repz
xor
jg
adcb
or
add
sbb
adc
add
addr16
shll
sti
int
gs
rol
aam
imul
les
in
or
jmp
repnz
fwait
fwait
push
lret
pusha
cmp
push
outsl
sahf
dec
cltd
xor
lods
or
inc
xchg
loopne
pushf
lds
out
dec
push
adc
out
and
cs
mov
int
inc
lods
loop
pop
insl
push
mov
shll
loop
mov
out
roll
je
mov
inc
lahf
mov
push
mov
cmp
pop
push
sbb
cmpsb
lods
js
ret
out
mov
adc
or
cmp
mov
push
mov
jl
gs
sub
roll
dec
in
cld
call
mov
mov
mov
pop
clc
ret
fcomp
push
jae
stos
or
js
pop
cmpsb
xchg
out
addl
push
lret
mov
popf
xchg
mov
subb
rep
out
test
xchg
pop
push
jecxz
sahf
shrb
jl
mull
xor
lret
lock
cltd
and
add
or
pop
into
mov
mov
gs
enter
sarl
cld
pusha
aaa
jne
cltd
push
in
pop
pop
sarb
hlt
inc
xlat
jbe
rcrl
in
pushf
jp
xor
jbe
lret
add
mov
clc
mov
insb
pop
cltd
adc
fsubs
cmc
xor
rorl
out
push
les
ljmp
mov
data16
repz
ds
subl
push
negl
test
divl
daa
pop
xchg
in
lods
jno
add
sbb
in
rcrl
or
xor
sub
sbb
repnz
inc
push
push
jge
leave
pop
inc
mov
pop
gs
pop
repz
sti
push
mov
xor
mov
push
dec
rep
das
lods
cmc
sbb
scas
push
sarb
jae
jle
insl
jge
sti
test
mov
ret
leave
addr16
outsb
into
les
adc
dec
shll
cmp
mov
mov
sbb
jb
stos
mov
out
scas
ret
addr16
dec
jne
and
cwtl
sub
fs
dec
sbb
or
mov
ds
or
and
or
xchg
ds
mov
lods
inc
mov
mov
adc
mov
push
jnp
jae
mov
xchg
hlt
inc
setle
or
jo
add
sbb
loop
ss
xchg
xor
aam
shll
mov
bound
jecxz
std
push
xor
push
xchg
addr16
cli
fimuls
add
dec
sbb
loopne
int
stc
mov
shll
sbb
scas
insl
mov
add
lcall
mulb
ror
imul
leave
xchg
cmp
mov
pop
jl
jmp
xor
xor
mov
popa
dec
cmpsb
adc
jne
insl
push
dec
es
and
xchg
dec
popf
sub
sarl
int3
dec
adc
in
sahf
lods
jns
ret
lret
xchg
jmp
std
cltd
add
pop
cmp
push
xchg
daa
movsl
or
loope
xor
or
scas
fsubr
xchg
scas
popa
pop
lret
sahf
jne
mov
and
inc
add
sbb
xor
into
xchg
shr
and
in
outsl
stos
scas
push
fcmovnbe
mov
mov
pop
ret
mov
icebp
ficompl
mov
pushw
and
pop
jl
lods
decb
mov
scas
idiv
pop
or
adc
cmpsb
pop
idivb
aam
rol
add
fistl
push
ret
and
xorb
ja
addl
xlat
dec
js
in
rcr
add
dec
out
jns
push
dec
push
sub
jg
jecxz
jo
mov
xor
xchg
lcall
push
lahf
xchg
add
xchg
mov
push
mov
cmc
jl
aam
popa
sub
jne
in
cmp
fdivr
add
push
jecxz
mov
scas
jo
ret
mov
pop
jns
fsub
adc
xchg
pop
test
loope
mov
jecxz
out
jge
das
and
mov
out
pop
cmp
arpl
clc
jno
cltd
leave
cmpsb
or
xor
addr16
es
mov
imul
sarl
xlat
mov
ss
mov
test
fisttpll
repnz
cmp
int
mov
test
in
pop
cli
mov
lods
and
adc
outsb
les
xchg
sbb
and
lock
add
cmp
fildl
push
push
lret
stos
pop
xchg
xor
insb
mov
std
dec
mov
xor
int
leave
cmp
push
fdivrs
push
sub
sub
jp
dec
mull
xor
cmc
dec
das
mov
cmp
out
cmp
push
mov
jp
aas
lods
or
test
and
imul
insb
iret
and
sub
or
fnstsw
mov
pop
sarb
xchg
add
xchg
movsb
outsb
push
adc
out
cmc
xor
sbb
adc
out
sub
gs
stos
popa
xor
mov
stos
ss
clc
iret
cld
inc
shr
pop
mov
scas
in
push
jl
fisubl
sub
mov
mov
push
dec
int3
jge
je
outsb
mov
fstp
out
fistps
js
pop
cmpsl
mov
test
int3
push
xchg
int3
cmp
ja
test
icebp
mov
pop
xlat
fcmovbe
pop
imul
xor
sbb
arpl
adc
test
jmp
pop
mov
dec
mov
sub
xor
into
fucomi
mov
lods
mov
push
add
mov
pop
jge
lcall
mov
mov
push
rorb
cmp
fsub
mov
ret
imul
aam
pusha
mov
int
mov
cmc
das
scas
call
jbe
push
xchg
sub
push
dec
sub
jns
loop
jns
in
xor
je
sbb
xor
jns
push
push
jae
pusha
mov
lcall
mov
shrb
mov
ja
stos
test
in
mov
ss
cli
roll
iret
mov
sarb
cmp
sbb
xchg
les
ljmp
cli
and
adc
fdivrp
pop
push
nop
mov
or
mov
cmp
ret
icebp
outsl
out
sub
popa
sbb
jno
arpl
hlt
pop
iret
xor
mov
xchg
outsl
dec
mov
int
stos
out
sub
dec
and
jne
mov
pop
push
das
movsl
cli
add
in
arpl
cmpsl
out
jmp
fcmove
push
push
movsl
jb
xchg
lcall
sbb
cld
adc
enter
loopne
mov
inc
fisubrl
sahf
addr16
push
lods
dec
adc
xor
xchg
mov
out
and
jp
pop
arpl
push
jle
les
mov
outsb
or
mov
lret
cltd
or
and
mov
cld
jp
cmp
sbb
jmp
cld
dec
inc
inc
cmp
xchg
and
sahf
loopne
out
and
dec
cmpb
mov
clc
or
dec
push
mov
jp
lea
dec
test
je
sub
les
xlat
dec
call
lret
add
mov
outsb
lret
inc
and
hlt
push
aad
insb
sti
jmp
jb
mov
push
mov
hlt
inc
mov
and
test
sub
mov
je
test
popa
mov
shll
nop
push
xchg
mov
rol
scas
sti
jg
inc
repnz
jne
cmp
mov
shrl
in
jae
or
pop
mov
cs
int
clc
push
inc
jmp
mov
inc
sbb
mov
nop
scas
pop
and
repz
cmp
mov
nop
jp
sbb
outsb
les
pop
pop
divl
dec
int3
jecxz
adc
adc
ss
out
insb
stos
loope
mov
jne
fstl
mov
push
inc
adc
adc
inc
and
gs
sub
sub
roll
mov
loopne
jl
add
ror
in
push
push
test
js
lods
xchg
add
std
mov
cmp
fbld
dec
xchg
jp
jae
js
push
push
rcl
rclb
in
mov
jle
inc
aad
imul
jnp
lods
xchg
icebp
test
fwait
mov
out
jle
pop
ds
das
out
inc
adc
outsb
stos
xchg
mov
dec
inc
inc
inc
imul
mov
rol
std
pop
adc
inc
and
or
mov
xchg
iret
xchg
arpl
shrb
idivb
pop
cs
push
or
ds
adc
nop
mov
and
cmpsl
test
in
leave
sbb
ss
and
daa
shr
adc
outsb
enter
das
and
insb
leave
les
jmp
add
sub
pop
xlat
scas
mov
scas
add
mov
push
xchg
cmp
lret
rcrb
mov
jbe
mov
mov
pop
lock
fsubp
les
mov
stc
rcrl
lea
loopne
push
cmp
push
sar
daa
or
stc
xor
ljmp
dec
rorl
rclb
dec
ds
mov
mov
inc
inc
or
pop
xorl
sbb
cmovle
adc
ja
xchg
out
mov
pop
mov
dec
sti
cmpl
jle
sbb
mov
lods
jo
mov
fs
fwait
notl
and
push
mov
mov
adc
jo
rorl
add
push
fwait
and
test
cld
mov
addb
incl
or
cld
xor
iret
addr16
cmp
dec
xchg
out
cmc
lods
lock
shrb
movsl
ljmp
mov
sub
inc
adc
jmp
clc
aad
imul
mov
data16
wrmsr
loope
ffreep
call
iret
lock
cmc
repz
jnp
and
ds
sahf
cwtl
ljmp
pop
mov
xchg
imul
dec
movsl
fstpt
cmpsl
jmp
jmp
test
push
loope
mov
out
inc
imul
div
cmpsb
popf
push
xor
push
movl
cmpsl
push
popf
and
xor
mov
int
addl
imul
out
mov
ss
cmp
movsb
scas
and
addr16
jno
imul
or
ds
ljmp
xor
inc
es
pushf
ret
lea
sub
stos
or
mov
rcl
pop
into
stos
sarb
sub
fwait
push
cmp
sbb
sahf
ds
dec
mov
mov
xchg
test
leave
jp
pop
pop
mov
pop
cli
mov
aas
jmp
push
das
rcl
imul
pop
mov
or
mov
and
out
dec
addl
jno
add
pop
roll
lret
in
bound
jmp
jae
gs
int3
jbe
or
mov
pop
pop
adc
mov
xchg
sti
gs
inc
pushf
dec
lret
int3
xchg
fstps
dec
inc
into
sbbb
fsubrl
xor
fnsave
jo
mov
int
mov
outsb
std
inc
adc
pop
pop
cld
push
cmp
and
fs
sbb
test
inc
loop
adc
call
shrl
jb
sub
int
and
sbb
ret
mov
xchg
xchg
cmp
mov
cld
push
cld
and
cmpsl
ss
inc
xchg
shr
js
mov
or
mov
xchg
cmpb
or
daa
add
push
mov
out
mov
and
scas
pop
cwtl
fdivs
std
in
or
sti
ds
js
out
iret
sub
mov
frstor
lret
repz
test
stc
insb
push
daa
push
in
jbe
gs
jg
sbb
gs
cmp
sub
add
push
dec
test
inc
xor
rolb
ja
mov
adc
les
mov
or
pop
mov
sarl
jl
push
jns
dec
sbb
mov
int
mov
push
les
inc
ss
mov
xor
sbb
popf
divl
movb
cmp
pushf
cmp
cmp
sbb
test
aam
mov
dec
stos
jne
fwait
aaa
or
loopne
cld
cwtl
inc
push
add
dec
insl
push
sbb
es
dec
das
outsb
js
dec
das
pop
mov
push
xor
rcrb
mov
xchg
mov
push
das
les
hlt
std
leave
pop
jge
pop
xor
loop
ret
push
xor
clc
and
push
mov
fyl2xp1
sub
jp
or
jmp
adc
je
inc
vdivsd
xor
push
jge
out
sbb
xor
mov
out
stos
add
les
outsb
shr
push
inc
dec
subl
ja
subb
lods
lea
and
mov
xor
shlb
iret
inc
in
ja
and
je
pop
jae
loop
mov
mov
or
jbe
dec
shlb
push
sti
movl
cmpsb
xchg
or
sti
mov
add
cs
xchg
dec
pop
pop
rolb
xor
or
inc
nop
nop
pop
and
push
inc
push
fstpt
test
sub
and
pop
in
je
rolb
cmp
cmc
and
jg
in
in
add
xor
cltd
pop
dec
mov
or
repz
sub
cltd
xchg
mov
pop
cmpsb
mov
add
pushf
mov
loope
lds
cld
mov
sub
jmp
sti
clc
ljmp
cli
shl
lea
cmp
bound
das
jge
movsl
mov
ret
add
inc
loopne
lcall
pop
push
cmpsb
arpl
nop
and
xor
jmp
clc
xorb
lods
test
fdivrs
loope
js
sub
insl
lahf
push
cli
ror
xchg
mov
xchg
cli
in
movsb
mov
popl
dec
xor
rol
pushf
test
jno
push
and
mov
movsb
xchg
ret
or
sbb
std
cmp
sbb
jns
xchg
das
jnp
cmpsb
push
div
loopne
jmp
and
push
mov
loop
cltd
fsubrp
xor
aam
lods
out
add
or
adc
jmp
lock
lock
dec
add
add
ss
mov
ret
popf
mov
subl
cltd
outsl
gs
jl
popa
ret
arpl
rcll
mov
stos
lods
in
xor
xchg
ljmp
arpl
push
subb
pop
pop
scas
dec
inc
lea
mov
cmp
cmc
jo
icebp
ret
lret
data16
cmp
push
mov
cmp
sub
jns
adc
rcrl
orb
add
cmp
iret
sysret
mov
stc
and
pop
xor
mov
ss
leave
pop
xor
push
cmp
js
imul
add
testl
or
mov
inc
cmc
fstl
xchg
lods
iret
outsl
mov
mov
in
mov
out
out
push
cmp
lea
mov
dec
in
stos
mov
add
mov
jl
xchg
xor
xchg
xchg
imul
insb
aaa
mov
imul
icebp
outsl
mov
sahf
sbb
or
pushf
or
mov
inc
mov
and
sub
or
mov
and
push
jbe
mov
cs
lret
add
and
and
inc
sbb
push
arpl
adc
xor
pop
rcrl
insl
cmpsl
ljmp
in
enter
mov
int3
add
xor
out
bnd
aad
popf
push
push
push
mov
sbb
mov
adc
test
lahf
jmp
xor
sub
jg
lea
inc
cli
push
jecxz
data16
or
jne
mov
dec
inc
jge
clc
fsubrl
clc
sbb
xlat
sbb
add
inc
jno
inc
inc
pop
or
push
rcrl
mov
cmp
aam
scas
lods
inc
lret
xchg
mov
mov
cmp
and
mov
fwait
push
jmp
xor
cmp
leave
mov
loopne
sub
adc
adc
sti
aad
dec
dec
fnstsw
inc
dec
mov
insb
add
dec
pop
int3
xor
mov
dec
push
movsl
data16
mov
push
mull
mov
jle
cli
es
insl
pop
pop
push
inc
push
out
mov
push
call
jmp
xchg
stc
and
xorb
push
mov
jbe
mov
jmp
call
rcll
jl
dec
movsb
stos
bound
inc
stos
adc
in
shrl
enter
dec
push
pop
insb
out
cmp
xchg
cli
push
in
in
cmc
xchg
fs
out
cmc
push
cwtl
aad
or
add
jp
mov
and
lods
das
addb
imul
mov
popl
inc
push
fmull
jl
ret
sti
insl
mov
clc
lcall
cmp
pop
in
inc
pop
inc
das
dec
sub
fcmovnu
sbb
loope
imul
mov
xor
fsubrl
mov
push
jnp
fldt
pop
into
dec
sbb
inc
ret
insl
adc
fcmovb
adc
icebp
cmp
cs
sti
push
lahf
pop
scas
dec
mov
jle
dec
pop
loopne
call
mov
shrb
inc
insl
xor
mov
xchg
push
pop
notb
adc
movsb
adc
pop
fadds
mov
les
cmp
bound
or
cmp
sbb
stc
cmp
fistl
outsl
dec
out
xchg
ja
push
aas
push
fsubr
ret
inc
pop
mov
pushf
cmp
adc
adc
adc
xchg
call
add
adcl
arpl
cmp
jbe
jno
pushf
ljmp
xor
jmp
adc
lret
icebp
mov
lret
and
xor
adc
adc
mov
scas
sbb
push
mov
push
jecxz
adc
mov
ret
add
int
sbb
and
sbb
aaa
cmpsl
test
pop
jl
jg
adc
cmp
sub
add
popf
movsl
xchg
xor
xor
sbb
orl
fwait
in
stos
loope
mov
push
mov
imul
inc
lcall
pop
int3
imul
je
inc
std
jmp
mov
cmpsl
int3
xchg
push
roll
data16
outsb
sub
or
inc
sbb
mov
fcmovnu
call
stos
jo
xchg
xor
subl
mov
dec
jno
add
mov
and
lea
inc
imul
inc
dec
aad
mov
and
mov
adc
movsl
push
lahf
lds
xchg
ret
stos
lret
mov
sub
mov
mov
adc
lock
mov
inc
cmpsl
popa
add
popl
leave
add
shll
cli
pop
xchg
cmp
xor
loop
das
cmc
cmp
jbe
inc
loope
pop
mov
mov
sub
cmp
mov
sbb
inc
jno
lds
mov
mov
jle
push
push
sti
adc
jno
test
fwait
cld
jg
cld
sarb
je
jg
les
dec
inc
imul
cmp
inc
ficoml
add
cmp
push
adc
iret
push
mov
push
jno
loop
ss
fwait
push
js
dec
add
jns
in
nop
cmp
and
mov
loope
lcall
or
adc
sub
fcmovnbe
sub
mov
xchg
mov
pushf
je
ja
mov
xorb
inc
ja
shll
testl
xor
lock
jo
xor
pop
in
in
sub
push
stos
test
test
dec
popf
hlt
and
data16
or
and
enter
popf
mov
dec
mov
shufps
xchg
inc
mov
out
lcall
repz
or
arpl
imul
push
stos
pop
fdivp
pop
jbe
xor
scas
sub
pop
mov
sti
inc
inc
sbb
jno
mov
in
cmp
cmp
pop
dec
mov
fcomip
add
inc
outsb
aad
fstps
cmp
lds
or
add
jae
adc
xor
pop
xor
pop
pop
call
call
mov
stc
out
cwtl
aas
adc
push
aaa
xchg
or
das
xor
jne
mov
scas
mov
in
daa
loop
popa
xchg
mov
les
subb
pop
into
fdivrs
ja
insl
mov
lea
mov
mov
inc
aad
icebp
adc
cmpsb
icebp
dec
fidivl
dec
dec
mov
aaa
test
cmp
arpl
scas
aad
sub
pop
dec
repnz
and
mov
jnp
sarb
movsl
mov
aaa
jae
jmp
and
stos
pop
jno
adc
insb
mov
sub
cmpsl
push
scas
mov
lock
pop
mov
in
jns
push
mov
mov
jo
mov
xchg
mov
cmc
or
add
aaa
insl
ds
