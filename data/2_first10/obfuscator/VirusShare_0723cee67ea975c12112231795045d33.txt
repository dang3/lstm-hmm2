add
add
add
add
xor
add
jo
add
rolb
add
inc
add
addb
add
and
add
add
add
add
add
dec
add
addb
add
and
add
add
add
push
add
add
add
int3
loop
add
add
add
mov
add
add
pop
add
sldt
mov
sldt
loopne
add
or
add
xor
add
pop
add
cmp
add
addb
addb
add
test
add
and
add
add
add
add
add
rolb
add
mov
add
add
mov
add
add
add
add
add
clc
add
add
cmpsb
add
or
add
and
add
add
add
add
add
and
add
add
add
in
add
add
mov
add
add
add
add
add
dec
add
add
test
add
and
add
add
add
add
add
jo
add
mov
add
and
add
add
add
add
add
cwtl
add
add
add
jl
add
and
add
add
add
add
add
rolb
add
add
add
mov
add
add
add
addb
xor
add
sbb
add
and
add
add
add
add
add
or
add
pop
mov
add
add
add
mov
add
add
add
add
add
xor
add
push
add
add
mov
add
add
add
cmpsb
add
sbbb
addb
add
and
add
add
add
push
add
add
add
mov
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
and
adc
add
add
call
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
stos
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
cmpsb
les
add
stos
stos
stos
stos
stos
cmpsb
insb
clc
test
or
stos
stos
stos
cmpsb
clc
test
add
stos
stos
cmpsb
insb
decl
stos
stos
stos
stos
stos
cmpsb
clc
test
stos
stos
stos
stos
cmpsb
insb
decl
stos
stos
stos
cmpsb
decl
stos
stos
stos
cmpsb
insb
decl
inc
stos
stos
stos
stos
stos
cmpsb
js
clc
mov
stos
stos
stos
stos
cmpsb
insb
clc
xchg
clc
jl
stos
stos
stos
stos
stos
cmpsb
decl
or
stos
stos
stos
stos
stos
cmpsb
insb
clc
xchg
orl
stos
stos
stos
stos
data16
decl
js
insb
int3
add
incl
js
mov
add
clc
cmp
clc
inc
jbe
add
call
jbe
or
decl
inc
xchg
xchg
or
push
jl
stos
inc
jno
or
stc
aas
pushl
stos
stos
jno
stos
outsb
insb
clc
cwtl
jl
stos
stos
stos
stos
stos
data16
cmp
jbe
stos
stos
stos
stos
stos
outsb
insb
decl
stos
stos
stos
stos
data16
js
pushl
stos
stos
stos
stos
stos
outsb
insb
inc
inc
inc
js
jl
stos
stos
stos
stos
stos
data16
les
mov
inc
stos
stos
stos
stos
stos
outsb
jl
insb
insb
insb
insb
inc
inc
insb
inc
stos
stos
stos
stos
stos
data16
out
mov
mov
stos
stos
stos
stos
stos
stos
data16
outsb
outsb
outsb
insb
insb
insb
inc
stos
stos
stos
stos
stos
stos
stos
stos
cmpsb
data16
out
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
data16
stos
stos
stos
stos
stos
ret
incl
ud0
addb
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
incb
pop
cld
ud0
add
int3
fnsave
outsb
gs
imul
roll
rolb
cmp
mov
fsubrl
adc
fsubrl
inc
add
mov
pop
loop
scas
mov
jmp
sti
xchg
jo
mov
in
ret
mov
fs
and
mov
xchg
aas
test
cmp
ljmp
push
ret
stc
sarl
aaa
inc
in
fwait
repnz
or
cmp
inc
cwtl
mov
sub
adc
cwtl
insb
mov
mov
frstor
testl
imull
sub
lahf
stc
sti
lea
pop
loope
cwtl
xor
imul
inc
ja
sbb
pushf
push
int
cwtl
push
hlt
loop
xchg
into
mov
pusha
push
cltd
dec
into
dec
cmp
leave
arpl
ds
xor
xor
rolb
or
xchg
jnp
lret
incl
in
cmp
and
sbbb
leave
hlt
mov
cwtl
mov
daa
clc
cmp
ds
adc
shlb
push
jae
mov
adc
insl
ret
cmp
subb
out
sbb
stos
mov
sub
dec
stos
sahf
vphadduwq
int3
jae
movsl
push
jo
ds
or
mov
sub
push
shrb
jl
mov
push
xor
mov
and
fimuls
imul
test
mov
in
insl
jnp
pushf
lret
mov
jbe
dec
cwtl
jecxz
addr16
inc
mov
adc
dec
adc
sub
xchg
add
repz
arpl
fsts
add
sahf
jne
add
jne
call
or
icebp
gs
addr16
inc
dec
cltd
and
cmp
out
stc
clc
rcrl
icebp
das
adc
mov
hlt
inc
into
pushf
pop
pop
lcall
fwait
in
sub
dec
or
nop
inc
daa
jns
test
out
adc
add
xlat
add
jecxz
sti
dec
shlb
shrb
in
or
mov
insb
xchg
call
jne
or
jns
into
mov
push
repz
xor
mov
mov
nop
jg
inc
ja
cmpl
in
repz
aas
cmpb
jne
xchg
int3
in
push
clc
fisttpll
xchg
mov
mov
movsb
mov
bound
shll
cmp
cmc
lds
aam
repnz
rcr
jg
mov
dec
inc
xor
nop
fisubl
dec
fwait
push
adc
sbb
nop
out
pop
cmp
jb
mov
cmpsb
sub
mov
push
push
into
mov
cmp
nop
cmp
sbb
fwait
dec
xchg
mov
int3
mov
xchg
icebp
ds
push
add
enter
dec
push
mov
les
jecxz
push
inc
lret
inc
into
sbb
fdivrl
mov
rcrl
cmp
sar
push
cmp
cmp
mov
jae
add
outsl
ret
cmp
and
sbb
or
std
shrb
sbb
cli
pop
sbbb
rcrb
inc
sbb
pop
jb
jno
dec
stos
jns
jnp
push
enter
pop
add
int3
lods
sbb
aam
out
pop
stos
test
xor
dec
aas
cmc
inc
and
ret
sbb
jmp
pusha
lret
mov
sbb
lret
mov
push
inc
fistps
idivb
leave
jbe
push
adc
jle
lret
sub
xor
addr16
mov
mov
and
rcrl
outsb
in
mov
roll
js
ffree
push
pop
scas
lods
ror
mov
adcl
bnd
sbb
mov
mov
mov
jecxz
dec
fwait
inc
jmp
mov
xchg
push
dec
cwtl
jbe
cld
xchg
les
rolb
jbe
popa
outsl
icebp
inc
outsl
xor
cmp
fsubs
pop
sbbl
fcmovnu
fwait
outsb
inc
js,pn
mov
jle
rcrl
imul
movsl
xor
pop
inc
icebp
lret
lcall
mulb
xor
inc
hlt
jno
mov
mov
insl
int3
daa
push
dec
add
out
sbb
scas
and
dec
int
ja
jo
ja
mov
xchg
adc
int3
pop
mov
and
jmp
enter
xchg
pop
xchg
test
jne
jecxz
insl
gs
loop
enter
jl
cmp
jnp
pop
stc
sub
pop
pop
mov
mov
int3
cli
xor
push
lret
jne
sbb
sub
das
clc
frstor
fwait
notb
jo
adc
inc
mov
cmc
dec
addb
mov
fbstp
mov
pop
jecxz
clc
ret
cli
loope
push
imul
imul
cmpsb
mov
push
jge
jbe
das
mov
nop
inc
xchg
rorb
adc
mov
push
lcall
xchg
mov
jl
insb
mov
orb
lahf
jne
ss
enter
jmp
clc
push
outsb
or
ljmp
lret
sub
push
lods
daa
into
sub
sbb
xchg
loop
dec
out
adc
cmpsl
mov
or
lods
add
push
xor
pop
sahf
sub
loopne
frstor
mov
pop
xchg
lods
xchg
xor
adc
jle
xorb
cs
mov
adc
daa
sub
sbb
mov
push
test
add
stc
xchg
dec
mov
mov
pop
pop
dec
jb
add
xlat
emms
xor
pop
sbb
dec
jg
insb
pop
mov
test
fcomi
jnp
mov
dec
movl
dec
pushf
xchg
imul
shl
mov
mov
sub
adc
sub
sbb
jb
xlat
hlt
adc
scas
aas
std
push
and
lock
lods
test
mov
mov
jl
notl
xor
pop
xchg
orl
aaa
and
xchg
test
xor
xor
dec
das
mov
dec
in
push
cmp
dec
xor
ret
test
lret
call
outsl
pop
add
jge
mov
dec
dec
mov
int
ficompl
test
lcall
push
aaa
xorb
inc
sbb
or
ficoms
cmp
or
dec
sarl
mov
jg
arpl
xchg
scas
dec
into
popa
popa
add
lahf
scas
inc
xor
stos
add
ljmp
aam
mov
imul
inc
orb
mov
and
cmpsl
pop
mov
sbb
out
lret
cmp
lcall
out
sub
and
test
and
push
les
stc
les
fistps
aam
sti
inc
sbb
adc
sub
aaa
dec
lods
sahf
data16
inc
sbb
add
outsb
imul
xchg
sahf
test
sub
stos
dec
xor
negl
repz
decl
shrl
out
sbb
into
mov
fs
or
xchg
adc
nop
lods
lods
pop
lods
sub
in
lcall
ret
pop
mov
mov
in
jnp
push
popa
fisubs
mov
push
pop
inc
loop
popf
clc
push
sahf
sti
lret
pop
and
inc
stc
sbb
roll
adc
pop
popa
or
stos
fdivrs
adc
push
ret
mov
popf
bound
repz
and
lods
cmc
mov
cmp
pop
push
lods
je
lcall
push
test
cs
add
sbbb
fdivs
sub
pop
jge
push
rsqrtps
and
mov
lret
xor
scas
cmovno
inc
lahf
xor
cwtl
inc
jmp
nop
pushf
cltd
testb
repz
scas
mov
sub
xchg
xor
adc
push
fwait
mov
aaa
adc
xchg
jmp
aas
cmc
js
mov
scas
scas
clc
mov
push
xchg
xchg
out
int3
jp
shrb
cld
ja
fdivr
ret
jl
jmp
orb
jnp
fbstp
xchg
mov
mov
jae
mov
and
inc
stos
xor
fwait
and
pop
add
cmp
cmp
xor
scas
in
push
push
lods
in
ljmp
cmp
les
cmp
stos
push
jnp
xlat
adc
xchg
test
incb
insl
fwait
movsb
mov
fldcw
ret
mov
and
ret
test
and
es
cs
dec
insl
pop
xchg
jmp
int
mov
gs
popf
xchg
jae
lock
push
and
pop
jl
push
dec
loop
sub
rorb
mov
xchg
jns
mov
xchg
cmp
mov
cld
fdivr
insl
mov
dec
std
je
jle
aad
dec
sub
pop
mov
xlat
scas
int
rorb
mov
ja
inc
popfw
scas
xor
outsb
dec
icebp
mov
lock
cld
push
mov
sub
pushf
sbb
movb
sub
lock
cltd
lock
pop
inc
insl
pop
lea
aaa
mov
shrl
fs
sti
sbb
sub
daa
sub
mov
add
mov
test
and
into
mov
aaa
cmpsb
adc
inc
movsl
or
daa
push
inc
xchg
xchg
retw
inc
add
mov
inc
push
cmp
rcrb
pop
stos
pop
sub
jne
jns
leave
enter
setae
pop
jle
leave
fcoms
sbb
roll
jno
pop
imul
xchg
shrl
pop
cmp
dec
xchg
xor
mov
fwait
lods
jb
mov
scas
aad
shlb
cmp
rclb
push
pop
fdiv
jp
pop
shlb
aas
mov
loopne
cmp
or
inc
cltd
xor
mov
insl
add
lea
shrl
push
je
xor
in
call
mov
xchg
call
scas
mov
sbbb
ret
and
or
lds
das
stc
dec
mov
ret
jns
std
pop
or
lods
lds
mov
sti
pop
idiv
xchg
or
and
rorb
repz
dec
imul
mov
cmp
ja
mov
add
lock
pop
jnp
push
xchg
sub
or
xchg
insb
mov
mov
jecxz
hlt
pop
mov
add
pushf
and
or
dec
imul
fnsave
adc
sub
test
or
add
and
xchg
inc
popf
pushf
adc
xchg
and
data16
mov
imul
xchg
mov
or
pop
mov
pop
xchg
push
lret
mov
jae
jmp
pop
aam
xchg
stos
test
leave
ret
sbb
jbe
pop
add
push
cmp
lret
cmpsb
dec
xor
imul
sub
dec
push
pushf
adc
sub
cmpsb
enter
lods
dec
and
xchg
mov
clc
ss
sahf
xchg
adc
xor
setl
and
mov
lds
add
sub
sahf
dec
push
mov
xchg
mov
movsl
push
jmp
scas
sub
sub
and
fdivl
sbb
bound
rorl
sahf
and
rep
fisttpll
test
cli
or
hlt
pop
lcall
cmpsb
clc
add
mov
xor
bound
inc
into
push
or
les
pop
or
dec
imul
sbbl
ja
mov
mov
xor
in
fnstcw
dec
imul
in
fs
sbb
nop
or
sbb
cmp
mov
dec
sub
xchg
dec
fcoms
std
cmp
xchg
in
mov
call
repnz
xchg
lods
cmc
sbb
dec
roll
scas
out
sub
iret
into
ss
push
out
mov
cs
dec
jb
test
inc
cmp
popl
sbb
inc
cmp
ret
clc
stos
leave
outsl
push
xor
loope
jl
fstps
mov
add
sbb
jle
les
leave
push
dec
inc
lock
or
rol
add
test
mov
or
lcall
or
jnp
add
out
push
jp
std
lret
jb
mov
push
mov
mov
xor
xchg
dec
stc
ss
aad
mov
pop
repz
insl
rolb
mov
int
xchg
push
mov
imul
push
xchg
push
or
xor
loope
mov
rclb
fbld
leave
inc
or
sbb
mov
sbb
in
dec
repnz
inc
dec
jnp
xor
adc
dec
add
imul
inc
xchg
push
inc
into
mov
lahf
fs
mov
js
prefetch
in
mov
ja
cltd
cltd
shrb
push
testb
push
fldenv
inc
mov
lods
in
test
repz
jl
in
out
nop
fidivl
pop
mov
jb
lods
repnz
push
fmuls
sbb
and
and
jg
ret
dec
jmp
dec
inc
add
xor
push
xorb
adc
inc
jb
xchg
lods
sbb
inc
or
add
sbb
xor
bound
jno
sub
pop
sar
cld
inc
push
jl
out
int
xchg
jne
or
repnz
mov
into
and
cld
xchg
lahf
push
jmp
cli
jp
sbbl
mov
lods
das
sti
dec
pop
mov
movsb
shlb
sub
sub
lea
stc
mov
push
sbb
jb
call
mov
pop
xor
stos
lea
insb
lock
std
cmp
test
dec
stos
stos
jae
mov
jnp
lcall
arpl
imul
bound
inc
and
or
idivb
andl
rcl
mov
lcall
into
lret
mov
cmp
sti
adc
dec
outsl
sbb
jns
jnp
nop
in
call
push
scas
out
jbe
lret
out
fidivrs
int3
int3
cld
adc
cld
nop
sysexit
cmpsb
in
jmp
pop
outsl
xor
mov
pop
shr
mov
dec
mov
ljmp
sub
or
add
sub
stos
push
sbb
addr16
rcr
fs
out
ss
out
fnstsw
sub
sub
add
jmp
icebp
sahf
scas
inc
cmpsb
pop
jns
leave
cltd
mov
bound
es
cmp
inc
jge
sbb
adc
push
push
adc
and
mov
push
jg
mov
cmp
inc
add
or
cli
aad
loopne
mov
pop
mov
stos
int3
jno
aaa
push
add
push
loop
sub
ss
sbb
orl
sbb
or
xchg
cli
inc
movsb
push
fdivs
jbe
inc
xchg
dec
sbb
enter
fmull
mov
xor
fnsave
cld
cmp
inc
or
mov
jne
aas
or
cmp
repz
xchg
xchg
pop
pop
jle
out
sub
mov
inc
pushf
movsb
arpl
mov
lods
notb
push
add
loope
scas
mov
lods
movlps
stos
jge
xchg
je
xchg
into
sbb
in
out
push
inc
sarl
outsb
push
or
xchg
or
les
stos
jno
test
push
cmp
pusha
xchg
addr16
and
sbb
pusha
xchg
adc
fisubrs
stos
cmp
stos
push
outsb
lcall
cmp
xorb
add
sub
fsubl
in
push
movsb
add
fistpl
shl
leave
mov
arpl
rolb
repnz
and
sub
loope
mov
outsl
dec
out
mov
stos
mov
in
mov
dec
cltd
aas
jo
mov
popf
rclb
fbstp
cmp
lods
mov
sahf
inc
push
or
dec
sub
mov
push
lods
call
out
je
ret
adc
pop
enter
push
lahf
dec
pusha
xor
kaddb
pop
popf
adc
inc
je
je
jns
cmp
divb
imul
mov
pop
sbb
inc
dec
out
dec
xchg
inc
sub
mov
arpl
rcr
andl
push
and
and
add
shrl
lds
cmc
mov
sti
add
xchg
mov
jno
push
and
sbb
dec
ljmp
rcl
stos
or
movsb
icebp
dec
mov
mov
arpl
xchg
cmp
ret
subb
hlt
lret
loopne
in
jl
jmp
std
testb
xor
cmc
inc
ja
inc
xchg
mov
sbb
mov
add
inc
test
je
push
sub
test
call
ljmp
lahf
ja
xor
ljmp
or
shlb
sub
ja
sbb
sbb
push
pop
dec
xor
and
pusha
out
cmp
or
push
in
cmp
and
jg
je
adc
testl
bnd
iret
mov
xlat
lahf
repnz
mov
test
pusha
pop
ds
push
inc
mov
stos
pop
dec
xor
jno
mov
inc
leave
add
ja
pop
sbb
jge
iret
dec
bound
ror
sub
push
add
xchg
or
cmp
je
and
das
cmovg
test
movsb
imul
dec
xchg
push
dec
jle
xchg
dec
daa
xorb
push
imul
icebp
inc
pop
cwtl
push
or
mov
xor
xor
das
ds
jnp
in
inc
xlat
pop
xchg
jge
mov
cmp
xchg
mov
jno
pop
fwait
scas
data16
xlat
stos
and
ss
xchg
cmp
int3
mov
lret
pop
sbb
mov
and
popf
pop
ss
adc
je
in
and
sub
jns
lahf
mov
pop
lods
sbb
adc
dec
lcall
lock
repz
bound
jbe
mov
jl
ja
inc
mov
push
dec
adc
dec
mov
popf
dec
ret
movsb
dec
insb
mov
xlat
sti
repz
stos
add
test
xchg
sahf
int
dec
adc
ficoml
xchg
cmp
push
stc
testl
mov
cmp
pusha
inc
dec
rcpps
pop
pushf
sqrtps
lahf
inc
nop
cwtl
xchg
mov
cmc
lahf
xlat
mov
xor
xchg
mov
fiadds
rcr
shlb
and
aas
pop
jge
fsubrl
add
insb
mov
pop
or
cmp
ja
repnz
int3
cmc
enter
and
ss
adc
fists
repnz
stos
dec
inc
movsl
rclb
pop
pop
leave
xor
xchg
lcall
mov
cmp
inc
data16
and
aam
loope
jg
dec
sbb
xchg
or
adc
in
pop
aam
and
cmpsl
jecxz
adc
rcll
ljmp
fdivs
or
sub
sahf
popf
std
dec
push
sbb
mov
aaa
jae
out
push
dec
icebp
xchg
jnp
ret
es
cld
cs
test
add
jae
fsubrl
pop
xlat
sbb
rcr
xchg
pop
cwtl
sbb
ss
cmpsb
xlat
xor
es
inc
addr16
test
je
sub
mov
pop
movsl
cmp
cmp
sti
add
push
in
pop
dec
rcr
jg
cmp
mov
xor
push
lock
shl
sbb
call
mov
movsb
imul
or
xchg
dec
fidivrs
mov
insl
push
push
scas
dec
leave
sbb
jae
lods
pop
fstps
cmp
aad
push
not
paddusb
and
jmp
stos
in
push
addl
icebp
fsubp
bound
mov
test
inc
xor
jnp
ret
xchg
push
cmp
clc
jmp
dec
mov
xor
shrb
push
es
jmp
scas
out
jne
rcrb
or
push
sti
add
into
sub
out
jbe
xlat
bound
insl
ja
test
mov
out
cmp
mov
sti
mov
mov
shrb
push
add
push
cmp
sbb
in
lds
cmp
pusha
and
pop
or
jns
xorl
out
jg
sub
cmp
push
repnz
and
ja
inc
dec
ljmp
test
and
iret
nop
imul
out
inc
aad
mov
xchg
adc
xchg
add
push
add
outsb
ljmp
mov
push
shlb
mov
mov
es
mov
mov
cli
into
orb
or
pushl
sbb
jno
arpl
push
pop
imul
shll
xor
into
xchg
sbb
cli
xchg
jns
cmp
lahf
aam
jp
fcompl
add
test
ficompl
jmp
mov
cmc
das
test
rcll
jg
push
lea
jge
and
std
in
stos
add
out
dec
in
sub
insb
shlb
xchg
rcrb
xor
iret
ss
rcll
jle
mov
cwtl
cmp
fs
and
sub
push
cmp
ja
push
fsubr
negl
add
ss
decl
out
mov
push
pushf
in
lret
adc
mov
pop
in
dec
shlb
pop
and
cli
roll
xchg
popf
stos
leave
xlat
sbb
mov
inc
cmp
insb
bound
jnp
xorb
jp
xor
xchg
repz
int
fs
shrb
cmc
push
ficoms
xorl
test
mov
jge
lret
lcall
and
aad
jbe
ss
fiaddl
xchg
divl
inc
mov
scas
aad
fimull
mov
or
jle
pop
or
or
insl
sub
fstpt
inc
aas
out
mov
push
inc
ds
pop
adc
data16
and
jo
scas
fprem
xor
gs
mov
enter
repnz
jns
dec
enter
cmc
and
loop
nop
js
leave
lcall
jl
fidivl
bswap
or
pop
ret
sub
jbe
movsb
rclb
aam
mov
sbb
or
sbb
loope
jae
inc
addr16
scas
jne
mov
mov
push
stc
lock
jle
in
divl
jp
push
dec
xor
out
test
ret
into
cld
jge
or
movsb
sub
outsl
mov
out
mov
setl
sar
pop
cmp
mov
cmp
jg
adc
add
out
xor
xchg
shr
bnd
push
jnp
cmp
in
ja
cmc
fldl
insb
mov
add
pop
pop
repnz
leave
rcr
xor
xchg
mov
inc
hlt
mov
shll
add
sbb
subb
call
cmpsl
dec
cld
fldcw
mov
lods
push
aam
sub
inc
xchg
imul
xchg
xor
mov
push
ljmp
pop
fwait
lret
xor
hlt
imul
int3
cmpb
pop
jne
divl
dec
popa
rorl
xchg
xor
and
mov
add
cld
daa
arpl
push
cmp
cwtl
jno
or
outsl
loop
mov
jo
cmp
pop
in
mov
push
add
bound
sbb
imulb
das
inc
and
dec
mov
scas
xor
lret
push
sub
lods
sub
aas
and
add
mov
and
pop
inc
leave
subb
xor
inc
dec
pop
push
or
sub
sti
addl
xchg
popf
insl
int3
fisttpl
orl
adc
push
pop
inc
rolb
add
loope
mov
imul
in
jle
xchg
xchg
push
and
fsubrp
add
je
and
adc
adc
and
les
hlt
in
xchg
pushf
or
jne
or
ss
xchg
jle
scas
push
ds
or
mov
test
inc
sbb
or
cmpsl
fwait
push
sub
test
sbb
sbb
iret
scas
mov
sub
mov
dec
push
inc
or
cltd
arpl
ficompl
push
xor
adc
mov
adc
mov
bound
fstps
mov
lahf
cs
in
inc
jae
sahf
inc
lods
in
adc
insl
cmpsl
mov
lret
fcom
push
mov
jp
imul
scas
inc
sub
jp
loope
adc
fcmovne
adc
xor
pushf
in
std
sbb
pop
out
cld
fldt
fcomps
addr16
lea
mov
hlt
inc
sahf
or
clc
inc
xorl
leave
aas
aaa
mov
bound
aaa
sub
cli
stos
std
pusha
clc
mov
fists
stos
insb
and
mov
cmc
div
adc
or
sbbb
loopne
shrl
je
sub
in
adc
test
je
jnp
lea
push
stos
es
aam
iret
addr16
jb
in
mov
add
test
int
push
and
and
add
sbb
sub
cmc
cmp
push
mov
add
and
sbb
dec
and
cmpsl
push
inc
incb
or
movsl
dec
aad
lds
out
lods
add
aam
call
int3
pop
btrl
cli
rclb
inc
lods
xchg
loop
mov
push
jo
fcmovbe
rcll
repz
in
rorl
testb
lea
mov
aad
mov
mov
mov
jno
cmp
lahf
adc
adc
mov
cmpsb
outsl
push
mov
cmp
gs
ljmp
out
fnsave
jnp
sahf
xchg
or
mov
mov
test
mov
cmp
incl
aad
jo
add
hlt
outsb
in
fs
dec
out
adc
push
mov
ljmp
imul
mov
sub
dec
sbb
push
push
inc
inc
sbb
mov
push
ficompl
add
xor
mov
jne
addr16
jne
pop
lods
mov
sub
iret
mov
int3
loop
inc
jo
jg
pop
mov
imul
out
insl
jmp
pextrw
push
fwait
jb
sbb
xchg
movsb
mov
push
stos
jle
pop
adc
fists
or
mov
cmpl
lret
ffree
jp
sar
test
mov
aaa
mov
jl
nop
cmpsb
dec
xor
movsb
xchg
out
dec
push
lahf
enter
push
cwtl
popa
adc
mov
stos
inc
mov
mov
mov
add
aad
out
inc
or
repnz
in
mov
add
ret
cli
and
sub
and
roll
or
push
aad
out
mov
test
sbb
outsl
dec
dec
fbld
cmp
cli
adc
jns
xor
push
mov
sub
dec
inc
mov
jl
ret
icebp
daa
bound
or
sahf
popf
lds
jo
aam
push
js
stos
hlt
xor
add
push
in
cmp
aaa
jno
xchg
jbe
hlt
stos
push
adc
scas
fistpl
das
rclb
or
mov
loopne
mov
repnz
gs
jne
xchg
insb
ss
adc
movsb
add
or
push
jo
xchg
mov
push
mov
vpcmpeqb
daa
psrld
pusha
mov
add
sahf
mov
add
sahf
sbb
fxch
mov
cmc
pop
pop
stos
cmp
test
push
out
jno
sub
out
scas
inc
out
lcall
call
xor
into
adc
xchg
out
insb
sbb
push
mov
push
or
mov
js
popa
inc
cmpsb
add
aam
es
outsb
pop
sub
jo
int3
cmpsb
xor
mov
inc
lea
xor
mov
adc
mov
mov
dec
iretw
in
popa
mov
call
jae
cmc
roll
push
int
push
loop
xchg
xchg
outsl
xchg
mov
cli
pop
stos
adc
fdivr
push
sbb
add
and
or
pop
xlat
out
aaa
imul
push
pushf
push
adc
pop
scas
test
fildl
arpl
pusha
xchg
fwait
mov
jecxz
xor
fwait
daa
adc
mov
outsl
and
jnp
cmpsb
fwait
popf
xor
dec
xchg
push
add
or
mov
mov
and
mov
adc
adc
bnd
in
insb
sub
add
adc
mov
call
xchg
stc
mulb
pop
call
aas
adc
sbb
push
jl
outsb
iret
shl
sbb
or
push
inc
lds
push
jecxz
imul
les
test
enter
ss
out
pop
das
jae
dec
clc
mov
call
mov
xchg
mov
test
adc
adcl
clc
mov
inc
or
mov
cmp
add
shrb
cmpb
aad
mov
aam
clc
popa
jae
fstpl
sub
xchg
or
push
mov
mov
rcrl
ljmp
lods
and
mov
push
xchg
and
aaa
push
jmp
mov
sbb
dec
push
ljmp
fldcw
sbb
clc
and
fidivl
jns
mov
mov
shrb
loope
idivb
gs
sbb
das
nop
nop
out
lcall
fnsave
mov
loope
daa
test
icebp
stos
mov
add
push
and
push
or
add
mov
cmpb
jecxz
mov
mov
lcall
or
adc
fcomi
loopne
movsl
es
dec
jge
jg
pop
outsl
sahf
sbb
xchg
cli
outsl
pop
sub
in
cltd
xor
int
outsl
push
mov
pop
les
mov
jnp
fcmovnb
popa
push
pop
mov
add
cmpsl
adcl
mov
dec
sub
call
xor
cmp
jl
jbe
dec
shrl
scas
adc
pop
in
roll
nop
adc
loopne
push
jmp
mov
add
imul
les
arpl
push
push
mov
sbb
jg
das
adc
xchg
pop
mov
roll
mov
stos
pop
cmpsl
or
or
jg
aad
xor
or
pop
iret
lahf
xchg
enter
sub
xor
inc
inc
sub
jl
mov
rorl
imul
jne
les
out
pop
aas
fmulp
sahf
ljmp
mov
aam
test
dec
out
insb
and
add
sbb
pusha
mov
sbb
adc
xchg
mov
pop
cmpl
jne
outsb
ds
call
rclb
lock
pop
das
mov
fnstcw
repnz
xor
mov
lcall
cli
mov
popa
jns
xor
bound
sub
pushl
in
adc
xchg
mov
add
out
or
push
movsb
jle
jnp
fs
inc
mov
bound
test
imul
pop
mov
sti
cwtl
inc
pop
aad
or
push
lds
add
out
or
jb
pop
push
xchg
pop
and
or
xlat
xor
adc
mov
jbe
ss
push
cs
mov
jae
faddl
adc
cmc
and
xchg
mov
psubd
nop
xor
rorl
data16
dec
mov
xchg
push
mov
test
incb
dec
aad
in
movups
lea
lods
das
aaa
out
and
cmpb
xor
push
cmpsl
xor
push
xor
test
and
mov
pushf
xchg
dec
pop
dec
mov
mov
test
and
shll
push
and
out
add
mov
sub
sub
ja
addb
or
scas
sbb
repnz
pop
and
inc
iret
or
and
dec
fists
repnz
negb
in
xor
xchg
sub
inc
or
es
scas
int
cmc
roll
jb
pop
enter
pop
scas
push
call
inc
rorb
outsl
add
inc
lds
xchg
mov
mov
lds
push
nop
sbb
mov
or
imul
dec
mov
push
dec
leave
cld
cmp
sub
loope
imull
call
dec
les
push
lret
sub
xor
test
push
fnstcw
mov
cld
xor
push
sbb
in
js
sbb
dec
push
jae
lcall
loope
lds
push
sub
rcrb
stos
and
xor
fidivl
nop
les
xchg
dec
bnd
mov
in
repz
incb
popf
and
adc
lea
lcall
mov
aaa
loop
cmp
sbb
mov
insb
inc
xor
dec
add
stc
cmp
jns
or
pushf
test
add
imul
xchg
sti
pop
cmp
cmp
pushf
sub
mov
out
mov
xchg
rorb
mov
test
or
inc
jle
dec
shr
movsb
push
subb
ret
cmp
mov
dec
push
pop
inc
mov
jne
push
sbb
int
arpl
std
into
add
jg
pop
loopne
ljmp
or
ja
stc
sbb
addr16
xor
ja,pt
jmp
cli
adc
loopne
xchg
mov
cmp
mov
les
loope
jb
outsl
pop
out
dec
pop
popa
jmp
pop
fsubrl
and
xchg
pop
lcall
cwtl
mov
mov
fisttpl
dec
in
fwait
aas
shrl
icebp
fstpt
xchg
rcrl
sub
jo
aaa
les
add
push
xchg
push
cmpsl
repz
or
aad
sub
pushf
fs
stos
sbb
mov
rol
daa
pop
xlat
fstpt
jne
jp
cmp
in
jns
popa
bound
mov
insl
lcall
mov
repnz
cmpsb
pushf
sub
dec
or
lret
inc
sahf
xchg
clc
fwait
movsl
js
push
mov
push
in
jmp
scas
sahf
ds
rorb
pop
sbb
inc
push
repz
test
dec
in
add
cwtl
pop
adc
call
adc
pop
shlb
loope
cmpl
sbb
xchg
test
fs
pop
stos
dec
push
jbe
fsubl
gs
add
lds
test
inc
sbb
jae
adc
fsubrl
mov
xorb
cld
test
mov
cmp
or
push
mov
arpl
xor
xchg
std
cwtl
in
xor
pop
sets
or
lahf
cwtl
out
xlat
sub
dec
cld
stc
adc
dec
sub
int
mov
mov
dec
mov
pop
adc
and
enter
test
popa
aam
in
mov
loop
mov
std
mov
sub
lret
dec
adc
mov
push
jae
ljmp
pop
mov
repnz
dec
pop
daa
outsb
pushf
insl
mov
sbb
push
mov
or
clc
mov
jbe
pop
js
xor
jg
cmpl
cmp
mov
mov
add
loope
int
inc
nop
push
cltd
jg
cmp
inc
adc
fwait
dec
mov
aad
filds
mov
xchg
sahf
les
js
jp
xor
ds
sbb
aam
out
jne
mov
mov
test
add
repz
mov
fsubrl
cmp
addr16
mov
pop
arpl
jmp
push
add
xor
aam
loop
nop
insl
cmp
out
in
insb
xor
imul
sbb
lods
leave
lods
shl
mov
ds
jno
test
lods
lds
hlt
add
imul
lret
push
xchg
pop
or
dec
pop
neg
ret
outsb
or
dec
int3
ja
or
cmp
jb
icebp
inc
adc
pop
aad
iret
xor
lock
cs
in
in
cmp
add
js
mov
sub
sub
push
xor
cli
cs
push
int3
sbb
dec
popf
xor
push
les
cmp
lods
pop
iret
mov
pop
push
mov
popf
pop
xchg
sarb
lret
mov
hlt
add
aad
xlat
lahf
lea
fwait
mov
mov
int3
fcmovnb
adc
stc
add
fdivr
xorb
xor
cmpsl
hlt
dec
adc
cwtl
adcl
xchg
iret
jecxz
jae
lret
movsl
inc
out
xor
ljmp
and
addr16
stos
lods
and
or
jg
aas
imul
cmp
add
adc
and
cmpsb
sar
lods
sub
les
jl
mov
fildl
pusha
jns
cltd
pusha
mov
rclb
icebp
mov
add
jl
adc
lods
cld
testb
sbbl
lods
mov
pop
add
rol
into
lods
repz
sub
fwait
and
xchg
pop
lods
in
dec
push
mov
mov
dec
mov
add
cmpsl
cmp
mov
orl
xor
dec
push
add
push
add
repz
sbb
jle
xor
xor
jno
dec
insb
pusha
fsubrl
push
cmpsl
xor
mov
push
mov
and
stos
jns
cmp
out
xor
dec
enter
stos
push
jo
and
aam
pop
mov
mov
or
lods
pop
or
mov
into
int3
js
or
mov
add
ljmp
jb
pop
xor
psubq
cmp
popa
nop
lock
lahf
pop
outsl
sbb
mov
inc
arpl
cltd
shll
lret
cmp
loop
add
cmp
ja
dec
push
pop
out
sub
and
repnz
sti
jl
pop
push
arpl
mov
pusha
adc
out
lret
lret
mov
out
arpl
std
imul
jbe
hlt
mov
or
repnz
xor
sub
ficomps
lock
or
nop
int3
pop
and
idivb
adc
stc
mov
aad
ljmp
cli
xchg
xor
movb
pop
addr16
adc
xor
adc
lods
leave
popa
jne
mov
outsl
mov
in
jmp
jns
and
push
nop
ds
push
lods
int
sbbl
sahf
mov
fadd
mov
mov
call
dec
test
mov
out
iret
leave
inc
add
mov
dec
outsl
bound
sbb
sub
xlat
inc
jns
fwait
mov
jg
sbb
pop
cmp
out
cmc
jecxz
adc
dec
stos
dec
js
movb
bound
imul
leave
adc
adc
testb
in
mul
pop
pop
or
cwtl
sub
mov
movsb
outsb
push
outsb
cmp
jl
jo
mov
loop
mov
mov
test
pusha
sar
mov
call
icebp
pusha
mov
mov
mov
sub
jbe
pop
xor
jl
lods
sbb
cmc
cmp
movsl
repz
rorl
push
sbb
in
push
das
lods
cld
sub
and
cvtps2pi
jmp
lret
push
sub
push
aad
gs
xchg
add
stos
mov
mov
and
inc
addr16
mov
out
and
add
fiaddl
movsl
sbb
aad
jnp
outsl
fisttpll
xchg
inc
jnp
pop
and
jl
push
mov
and
jecxz
sahf
out
sub
mov
pop
fstps
pop
adc
mov
adc
arpl
pop
pop
addl
jnp
mov
pop
std
or
mov
pop
iret
mov
das
ds
cmpl
dec
out
inc
xchg
insb
jp
lock
cmp
adc
sub
push
leave
pop
clc
mov
lea
jo
mov
sbb
rcrb
mov
ret
jmp
lods
pop
flds
jns
shll
dec
stos
sahf
jge
fimull
cmp
mov
dec
inc
out
sbb
pop
lock
add
pop
scas
sbb
fidivs
in
jmp
icebp
or
inc
outsl
sti
out
aas
xchg
js
sub
out
ds
lock
sbb
dec
and
lcall
xchg
mov
pusha
call
xchg
movhlps
in
test
adc
out
mov
cmp
dec
in
push
cld
movl
in
pop
fnstenv
enter
fwait
xchg
mov
sbb
lock
mov
addr16
push
adcl
test
imul
loop
sbb
xchg
sti
sub
stc
pushf
shlb
les
mov
enter
sbb
pop
test
aaa
bound
std
add
add
ret
iret
data16
pop
out
sbbb
pop
pop
xchg
adc
dec
pop
stos
mov
cs
jmp
sub
rclb
pop
out
push
add
enter
xchg
outsb
roll
int
std
icebp
les
mov
outsl
sub
lcall
dec
adc
dec
or
loope
ret
jmp
aam
jns
lret
inc
push
out
popa
scas
lods
ret
push
mov
inc
push
mov
or
mov
les
push
and
inc
mov
jb
inc
jbe
adc
addb
sarl
fisttpl
mov
mov
pop
push
add
pop
and
shlb
sub
xchg
xor
lcall
mov
mov
dec
and
enter
mov
add
cmp
mov
sbb
push
or
xchg
push
and
xchg
xor
mov
testb
fnstsw
mov
outsl
add
pop
mov
or
dec
sahf
nop
negl
xlat
in
pop
in
cmp
push
popa
inc
add
jecxz
sub
sbb
jg
xor
lods
clc
lods
fisubrl
or
lcall
loopne
push
sbb
xlat
iret
hlt
lods
mov
jne
imul
dec
xchg
xor
sub
cmp
inc
pop
ret
mov
out
lods
gs
inc
orb
aas
add
mov
int3
aas
mov
cmp
cmp
ljmp
dec
cmp
aad
out
repnz
jbe
xchg
jno
push
adcl
or
jle
mov
prefetch
mov
and
jmp
out
bound
inc
or
xchg
lahf
jmp
add
stos
dec
jl
push
jmp
xchg
push
mov
xchg
push
lcall
jbe
decl
jbe
fdivrs
shrl
xchg
add
sbb
cli
rol
xor
push
push
ret
xchg
pop
shl
ret
sbb
xchg
push
call
mov
sub
mov
je
inc
mov
pop
mov
add
sub
ljmp
jb
xchg
in
shlb
mov
push
sti
popfw
movsl
sbb
pop
jne
stos
popf
xor
push
popf
or
cmpb
mov
mov
cmp
in
roll
mov
adc
sbb
pop
sbbb
sub
xchg
sbb
je
mov
xor
adc
pop
inc
mov
cs
int
add
aas
add
ret
mov
ficoml
jno
lret
push
arpl
adc
fisubrs
jl
add
ss
add
pop
push
inc
nop
pop
cwtl
insl
imul
ja
negb
addb
cmp
shlb
out
jle
shll
xor
push
xchg
das
push
and
dec
lock
test
push
dec
fstl
incl
loope
xlat
leave
inc
out
push
int3
jbe
insl
ret
mov
mov
jb
cmpsl
subl
testb
pop
iret
inc
lcall
push
loop
dec
push
adc
ret
mul
pop
push
mov
fsubrl
sti
nop
out
lods
add
mov
jbe
xor
xor
adc
jp
cmc
push
js
cmpsb
cmp
ds
pop
mov
imul
inc
dec
ds
sahf
shrb
pop
mov
cs
notl
dec
adc
jmp
jecxz
push
aam
jle
popf
xor
rclb
in
ja
sbb
dec
jmp
ret
or
cld
ja
and
and
aam
cmp
aas
data16
nop
adc
lahf
loop
lds
adc
ljmp
sbb
add
jp
or
scas
xchg
mov
xor
xchg
mov
mov
andl
pop
add
cs
repnz
mov
stos
test
dec
loopne
dec
iret
jnp
or
sbb
jbe
lret
lcall
pop
or
cld
cld
outsb
sbb
outsb
push
divb
jp
add
mov
retw
cltd
int3
gs
pop
icebp
dec
inc
arpl
int
int
gs
popf
movsb
jnp
push
cmc
fimull
shrb
xlat
mov
int3
nop
lcall
hlt
pop
mov
ljmp
lods
cwtl
enter
adc
jno
xchg
lcall
data16
push
outsl
jb
fcmovnbe
data16
mov
xchg
inc
cmpsl
jno
lods
pop
in
adc
mov
jnp
xor
push
or
mov
scas
adc
fs
clc
xchg
or
nop
adc
mov
mov
std
mov
iret
cmc
imul
popa
pcmpgtw
cmp
enter
movsl
add
pop
cmp
adc
outsb
adc
into
mov
sbb
adc
rol
lret
mov
out
std
xlat
sub
repz
sub
or
test
xor
sbb
mov
jge
mov
repnz
adc
out
test
xor
aaa
scas
sub
ss
mov
pop
cld
in
pusha
cmp
dec
pop
ret
mov
ret
ljmp
pop
aad
sahf
dec
sub
cmp
sub
dec
add
dec
fs
dec
sbb
sbb
stos
xor
in
sbb
test
jle
sub
xlat
test
popf
xchg
sub
in
pushf
out
and
jns
jmp
fwait
push
jae
mov
inc
sti
and
mov
je
sub
cld
aaa
imulb
pop
jp
in
nop
sub
jnp
incl
lahf
aaa
loopne
int3
xchg
jne
out
cmp
cmp
mov
mov
cmpb
aaa
push
jmp
ret
xchg
xchg
repnz
push
sub
rol
lcall
call
adc
adc
aam
sub
je
repnz
stc
cld
pop
orl
pushf
fsubl
or
push
sbb
lea
or
imul
jnp
push
jno
sub
in
sub
jbe
decb
push
aas
push
push
addr16
sti
int
mov
dec
js
stos
inc
cltd
cli
int3
mov
lds
js
fsubl
pop
iret
adc
mov
dec
scas
in
mov
push
and
ljmp
inc
pmuludq
bound
lret
pop
mov
sub
out
xlat
xor
test
mov
mov
ret
aam
pop
orb
xchg
xchg
test
dec
nop
adc
pop
repnz
pop
stc
dec
lock
mov
mul
cmp
cli
mov
sub
daa
cld
pop
imul
aas
lcall
or
rolb
fiaddl
push
fwait
loop
dec
repz
lcall
sbb
ss
jb
sbb
movsb
loopne
mov
cmp
inc
sbb
seto
imul
test
cmp
jnp
sbb
add
fistpll
lret
outsb
push
push
inc
call
test
add
mov
test
imul
repnz
jnp
mov
push
lret
jns
lods
fbstp
dec
jmp
or
mov
cmp
xchg
repz
arpl
lds
push
pmulhw
cmp
xchg
adc
sti
mov
and
pop
mov
pop
sbb
inc
insl
fimuls
inc
pop
scas
mov
jo
repnz
and
or
test
loopne
repnz
sahf
imul
inc
push
call
adc
lods
fimull
lret
loop
lahf
or
mov
mov
and
inc
add
into
adc
mov
pop
cmpsb
xor
lea
mov
cmp
movsb
cmp
mov
or
sbb
mov
xchg
pusha
faddl
sub
inc
push
cmpsl
bound
jno
sub
sahf
sbb
fs
sbb
add
hlt
and
shr
in
mov
or
push
test
inc
mov
movsb
pop
xor
stos
and
inc
imul
pop
rolb
loopne
push
ljmp
mov
cltd
sti
push
push
mov
xchg
imul
adc
xchg
outsl
outsb
clc
sbb
addr16
lahf
test
xor
jo
pop
mov
add
jl
stc
xchg
daa
dec
fwait
sub
ror
mov
push
inc
cmp
call
mov
bound
clc
xchg
xor
divl
mov
call
lods
pusha
xchg
psrld
repnz
ds
fnstsw
jne
in
cmp
dec
dec
push
out
jae
push
mov
push
cmp
loop
mov
cmp
add
add
jb
inc
sbb
xchg
jb
repnz
xor
aam
mov
pop
sbb
cmp
loopne
addr16
add
bound
xor
sti
cld
fwait
mov
mov
sti
fwait
out
push
adc
cmp
push
in
gs
or
push
dec
loope
repz
repz
clc
xor
ss
and
sti
mov
sub
add
hlt
sbb
stc
inc
jae
mov
push
lahf
pushf
adc
lds
fistps
jns
mov
and
mov
aaa
sub
bound
icebp
es
stos
mov
add
and
dec
cmc
mov
mov
cltd
in
test
lock
stos
rorl
cmp
or
mov
out
insl
fdiv
lods
arpl
push
bnd
and
and
xchg
push
adcl
push
out
jb
std
leave
in
or
dec
cwtl
push
jmp
or
xchg
pop
fsubrs
add
fsubl
mov
jns
shl
add
popf
sbb
dec
or
es
jbe
repz
lods
mov
push
pop
pop
iret
scas
and
sbb
xor
adc
popa
ja
leave
xor
cld
cmp
mov
stos
and
pop
loope
rolb
sbb
xchg
and
fcoml
and
mov
lcall
xor
loopne
mov
lret
outsb
test
andb
iret
aas
add
stc
jae,pt
pop
in
push
mov
mov
aaa
nop
ret
ja
stc
int3
dec
int
pop
xchg
lahf
mov
pop
enter
pop
test
test
pop
and
push
inc
pop
adc
xor
ss
lods
jb
inc
ret
cltd
negb
cwtl
fidivl
or
shlb
xchg
push
fmul
dec
stos
lods
sub
and
jg
outsl
pop
push
subb
sbbb
jbe
sub
mov
xchg
cltd
dec
ja
scas
data16
lahf
and
adc
jne
imul
push
ja
lea
mov
test
push
push
jmp
cli
repnz
outsb
nop
jb
dec
dec
mov
rcll
iret
jae
pop
scas
xor
mov
loop
roll
fnstcw
pop
mov
add
dec
inc
loope
push
je
and
inc
sbb
mov
sub
inc
push
adc
addr16
pop
into
cmpsl
sub
pop
loop
pop
pop
mov
xchg
ss
lock
int
mov
dec
popa
xor
mov
jae
or
sub
mov
cmp
int
shll
pop
jmp
add
xor
hlt
and
icebp
inc
loopne
lcall
out
dec
cmpsl
cs
mov
fisubs
jp
xor
ljmp
fdivrl
pop
add
arpl
insl
pop
rol
sbb
in
adc
popa
arpl
push
and
sub
sahf
push
cmp
out
or
pop
xchg
sub
inc
sbb
cmpl
mov
xor
dec
sbb
dec
inc
add
push
xchg
sbb
cld
les
in
sub
jnp
push
lods
sbb
mov
jno
mov
out
imul
xor
push
movsl
out
sti
leave
aas
mov
jmp
outsl
mov
daa
test
or
sub
mov
push
cmc
sub
notl
inc
pop
fsubl
std
pusha
out
scas
aad
pop
test
repnz
adc
lea
lcall
les
nop
call
je
push
push
pushf
repz
pop
push
loope
mov
xchg
mov
fxch
inc
mov
push
xchg
xlat
or
fsubs
push
mov
pop
pop
dec
addr16
xor
push
cltd
jae
outsb
xchg
jo
push
cmpsb
sbb
iret
fcompp
fnsave
jecxz
mov
sub
test
push
mov
push
and
repz
repz
mov
sbb
mov
ljmp
loop
jle
aas
rolb
jge
push
sahf
aad
push
xlat
xor
in
sub
sbb
jmp
cwtl
sub
mov
xchg
gs
xor
dec
cld
mov
mov
loop
adc
cwtl
and
nop
lock
jmp
sahf
xchg
out
xor
jae
call
fdiv
icebp
sub
fisttps
push
out
hlt
inc
in
adc
inc
movnti
in
lcall
stc
sbb
sti
fs
or
adc
fcoms
jp
fisttps
sbb
sub
or
jnp
outsl
pop
push
into
shl
cmp
cmp
jp
scas
or
iret
jnp
xor
sub
pusha
mov
pop
jmp
imul
fs
rcl
fdivl
rclb
mov
enter
push
and
call
aas
mov
mov
sbb
int
lea
aaa
aaa
out
shrl
js
dec
ret
cmp
mov
xchg
scas
stos
cld
vpcmpeqw
es
jle
pusha
xor
aad
push
push
enter
pop
adc
sbb
add
xchg
xor
int3
and
and
mov
fists
arpl
jecxz
pop
aas
jmp
push
mov
xchg
xor
xor
fwait
loopne
cltd
jl
jmp
test
pop
jmp
pop
lahf
pop
sub
fldcw
xor
adc
cmpsl
lods
pop
dec
sub
jnp
and
shl
mov
and
cmpsb
pop
xchg
adc
repz
adc
pop
outsb
pop
push
jbe
and
daa
rcr
insb
std
scas
addr16
or
push
pop
jecxz
inc
insb
jnp
shrb
mov
enter
or
inc
negb
dec
lock
nop
sbb
inc
xor
lcall
out
mov
push
les
xlat
in
mov
lcall
je
and
inc
push
hlt
and
jle
test
es
lods
repnz
pop
rcll
scas
mov
dec
call
stos
mov
jl
pop
test
push
xor
push
push
jp
ror
cli
inc
std
jmp
loop
inc
jnp
sbb
out
mov
mov
stc
inc
mov
insl
repz
mov
lcall
ja
and
in
scas
push
scas
jge
mov
and
out
push
shl
mov
lds
fwait
insb
shl
mov
jbe
repz
icebp
repnz
inc
pop
lret
adc
repz
cld
jo
or
or
mov
and
enter
lock
int
push
test
push
cmp
sub
call
enter
inc
xchg
enter
mov
sti
mov
dec
pop
outsb
hlt
mov
sbb
inc
pop
push
les
mov
mov
inc
cli
add
mov
sbb
stc
bound
xchg
push
push
xor
es
lret
addr16
push
mov
mov
mov
ror
leave
and
jae
and
or
mov
arpl
cmpsb
pop
lahf
out
int3
or
insb
nop
xchg
les
sarl
mov
xchg
idivl
fistps
jno
push
pop
push
jo
xchg
imul
pushf
add
mov
rorl
jg
ljmp
mov
jo
cli
call
ss
push
push
test
notl
lret
push
es
pop
in
lcall
testb
or
icebp
mov
orb
enter
mov
mov
ds
add
jmp
pop
xchg
jg
dec
add
cmpsb
mov
cmp
shl
add
lock
cmpsb
mov
xor
jecxz
popf
imul
decl
fucomip
xchg
repz
cmp
pop
roll
xor
cmp
popa
jbe
mov
add
jge
sub
pop
dec
lock
jnp
subl
int
cmpsl
ss
mov
call
xor
push
mov
mov
jne
inc
scas
push
xchg
lods
ror
mov
outsl
in
dec
rolb
lea
mov
clc
mov
pop
mov
bound
les
add
cltd
data16
push
xchg
out
mov
aad
pop
sti
or
and
pop
pusha
xchg
aaa
dec
enter
and
ja
cli
shrl
jmp
std
fsubrl
sti
adc
fimuls
pop
test
mov
jns
call
pop
and
pop
popf
push
imul
sahf
xchg
data16
push
push
inc
nop
xor
cmp
push
mov
repnz
aam
and
cmp
lds
sahf
rol
xchg
pop
movsl
adc
push
xchg
cmpsb
movsb
dec
sbb
inc
mov
movsb
pop
or
ds
jo
dec
mov
cmpsl
jns
stos
cmc
pop
adc
test
movsb
cmp
xor
adc
int
cmp
inc
jnp
sahf
rol
cli
mov
adc
cmpsl
shlb
loopne
sbb
dec
pushf
out
cli
cmc
dec
addr16
arpl
add
dec
mov
xor
nop
test
xor
loop
ja
mov
mov
cs
pextrw
cmp
mov
mov
lock
cli
mov
sbb
leave
ds
in
adc
out
add
cmpsb
xchg
call
adc
cmp
xchg
and
lea
jge
push
sub
add
popa
aam
inc
cli
sub
jg
xor
testb
adc
dec
stos
lods
or
aas
subb
xchg
sub
pop
mov
mov
jmp
mov
int3
add
dec
vaddpd
push
aad
push
inc
push
repnz
push
cmp
pushf
push
mov
icebp
ljmp
cmp
xchg
ror
imul
add
inc
imul
pop
imul
pop
jae
jnp
in
jnp
lds
dec
push
add
inc
ljmp
push
jne
jo
adc
pop
sbb
loope
xor
mov
je
adc
jnp
xchg
lret
repz
jmp
fldt
jae
push
arpl
add
push
cltd
sbb
loope
mov
xchg
es
mov
pop
pusha
jno
fsubrl
mov
daa
xchg
pop
loope
repz
fnsave
shrl
jle
mov
cmp
scas
call
mov
aas
ljmp
mov
imul
or
pop
lock
aas
mov
mov
fnstcw
jbe
dec
sarl
outsl
dec
stos
cltd
int3
pusha
sarb
repz
std
xchg
loope
test
std
nop
pop
sub
cmp
or
mov
mov
push
or
pop
jae
lcall
or
aad
gs
ds
jbe
sub
lahf
push
inc
stc
leave
dec
fildll
push
pop
inc
sub
jmp
pop
fidivrs
clc
sub
pop
xchg
adc
jae
fdivrs
addr16
add
pop
jp
xchg
and
cltd
pop
sbb
xchg
jp
sub
mov
xor
scas
cmpsb
subb
cmp
enter
jne
pop
std
jnp
outsl
movsb
add
prefetchw
pop
or
pop
or
test
into
cltd
push
std
fdivr
stc
sub
sahf
push
pop
clc
arpl
fs
dec
cmc
and
jecxz
mov
or
push
jno
insl
push
arpl
push
jno
out
iret
adc
mov
push
int3
dec
icebp
not
mov
pop
inc
mov
xorb
test
mov
jne
aad
jmp
in
lcall
neg
fs
les
sub
out
test
inc
pop
push
jge
dec
inc
setbe
push
fcomps
leave
xchg
mov
inc
pop
jmp
and
lds
imul
jg
mov
sarl
pshufw
pop
sarb
mov
les
mov
mov
xor
sbbl
push
xchg
add
jmp
fucomp
sbb
int3
call
loop
sbb
jmp
cmp
inc
jae
fdivrs
shr
gs
xor
dec
das
ds
mov
outsb
repz
sti
add
pop
push
in
shll
lcall
mov
mov
cmpsb
imul
mov
mov
rcll
add
cmc
push
fistl
fucom
inc
cmp
inc
dec
mov
cmpsb
fsts
and
and
ret
in
ss
xor
lret
sbb
pop
and
es
jae
jno
mov
sahf
ljmp
out
xlat
inc
push
ss
into
push
aas
jl,pn
mov
inc
dec
xchg
cmpsl
sub
mov
inc
test
mov
into
mov
cltd
jmp
sbb
or
mov
mov
or
cwtl
mov
outsb
xlat
sub
mov
push
and
mov
scas
jl
addr16
jno
loop
pushf
sbb
push
push
push
mov
lret
cli
sub
out
adc
or
or
or
dec
cmp
push
addb
mov
or
cmp
fdivrp
outsl
cs
insb
adc
cld
push
mov
push
sbb
stc
out
cld
mov
aas
mov
push
in
adc
sbb
fwait
sub
pop
lcall
ficomps
jo
ja
push
fsubl
xchg
push
jmp
add
fbld
pop
popf
mov
jecxz
jmp
xor
xchg
lret
mov
or
lods
call
and
xchg
jo
add
mov
push
cs
ljmp
mov
sbb
shll
inc
mov
cmp
push
int
push
cltd
cmp
adc
fldcw
inc
cmc
push
aam
mov
ja
add
or
addr16
mov
mov
imul
out
daa
and
push
decl
sub
xlat
fisubrl
jbe
stc
lcall
mov
add
pop
xor
push
in
cmpb
std
test
fwait
add
sub
mov
lret
sbb
addr16
ja
push
movb
push
pop
mov
rol
push
xchg
rorl
push
pop
jl
sub
lds
xor
hlt
lods
pop
mov
xor
pop
in
sbb
sub
fstl
push
stc
dec
and
sbb
mov
push
lcall
mov
pop
popf
pop
mov
push
mov
ljmp
jle
orl
pop
add
inc
sbb
dec
mov
popf
fstpt
mov
sub
xchg
test
jb
jbe
leave
out
cmp
mov
push
clc
sub
cltd
loope
hlt
jge
xor
mov
imul
mul
cwtl
xorb
ret
mov
push
inc
lret
mov
sub
int
mov
fdivp
jno
shl
mov
std
popf
sti
add
std
sbb
es
or
fdivrs
jb
test
hlt
mov
sbb
mov
cmp
das
and
repnz
shll
jecxz
xor
rol
push
add
adc
pop
xor
push
popa
pop
cmpb
adc
mov
cld
cwtl
cld
int
sub
cs
dec
imul
pop
cs
adc
cmc
jecxz
xor
push
insl
repnz
adc
mov
or
int3
enter
mov
out
mov
jmp
dec
jge
and
cld
adc
adc
or
or
shr
loop
mov
jnp
sub
adc
insb
mov
lahf
arpl
push
test
mov
int
scas
pop
insb
out
pop
adc
fimull
enter
repz
bound
lds
repz
or
sbb
and
xchg
pop
mov
imul
inc
sbbl
aaa
ret
sub
loopne
cmp
dec
pop
jnp
jne
push
fistl
out
mov
and
lods
dec
dec
push
in
cmp
pusha
aam
jecxz
dec
nop
or
sbb
push
sti
daa
sub
xor
mov
orb
sub
dec
insb
stc
mov
rolb
xorl
leave
insb
push
sub
xchg
adc
cmc
into
mov
mov
or
popa
imul
je
js
lret
data16
mov
pop
cld
lcall
dec
mov
xlat
daa
pusha
xchg
pop
popf
lods
pop
test
xor
mov
shl
xchg
fbld
sbb
and
loope
es
xor
dec
jbe
mov
psraw
lcall
gs
push
push
int3
es
sub
xor
adc
fs
add
xchg
clc
cmp
fistl
sbb
add
xchg
out
mov
fst
stos
push
loope
sarb
adc
popa
push
mov
fwait
and
mov
dec
imull
add
sub
loop
ds
jb
pop
ss
shlb
or
jae
lods
and
mov
cmp
cmp
mov
dec
sbb
aam
int3
cmpsl
and
jg
rolb
adc
outsb
mov
and
enter
xor
iret
fisttpll
add
xor
xor
dec
lds
mov
or
imul
push
cli
dec
and
pushf
dec
fnsave
jl
ds
add
xor
out
pop
fmulp
fldl
or
mov
bound
out
out
testl
cmp
mov
jae
cmp
out
fidivrs
lret
addr16
or
xchg
movsb
ficompl
dec
sbb
je
cwtl
ss
xchg
out
out
push
push
leave
cmp
mov
mov
ja
sbb
mov
jno
add
sbb
xor
cld
std
and
adcb
inc
dec
hlt
das
scas
dec
es
movsl
and
xor
mov
pop
jp
pop
push
and
mull
jle
and
mov
mov
in
jns
lods
cmp
jo
or
inc
pop
mov
jae
mov
jno
pop
pop
or
iret
sub
sub
sbb
pop
int
jecxz
cli
cmpsb
and
xor
ret
cmp
fimull
gs
sbb
icebp
pop
filds
repnz
push
out
fdivrs
ficoms
jb
roll
mov
divb
mov
jne
stos
adc
inc
sbb
xchg
inc
mov
mov
dec
dec
pop
mov
mov
fsubrs
and
jl
loope
in
sbb
outsl
push
xchg
push
leave
mov
pop
clc
js
cmc
push
mul
inc
jg
jp
push
xchg
pop
sub
leave
call
add
orl
div
outsb
enter
into
fistpll
mov
fsubrp
sbb
shlb
cmp
jns
aaa
stos
inc
sbb
ds
and
push
push
lret
movsl
mov
xchg
dec
in
jno
and
jne
or
fsubl
pushf
cli
rcll
mov
fcmovbe
out
std
adc
fisubl
es
mov
enter
ret
push
xchg
fistps
clc
xlat
and
loopne
into
ds
pop
or
push
jecxz
sub
in
clc
loopne
sbb
cmp
sbb
ret
ljmp
xlat
xchg
sbb
nop
inc
pop
mov
arpl
mov
in
incb
dec
pop
fs
divb
stos
adc
jne
out
fistpll
add
add
je
ljmp
xchg
fdivrl
sti
xchg
jecxz
cmp
sbb
das
xor
push
test
ds
aas
cmp
mov
push
fiadds
in
clc
mov
push
stos
jp
aas
mov
adc
jp
jno
imul
into
sarl
sbb
xchg
lahf
xchg
popf
pushf
loop
lods
test
and
shlb
push
cmp
and
push
xor
lret
out
ret
sti
imul
jb
out
std
dec
mov
cmpsl
clc
push
and
dec
sbb
sbb
jne
push
inc
adc
fists
test
ss
lahf
stos
add
pushf
mov
rorb
xchg
jbe
dec
pop
ja
xor
or
arpl
in
dec
nop
addr16
loop
cmp
je
repz
scas
sub
cli
mov
dec
lret
es
outsl
popf
push
lcall
imul
pop
repz
mov
pop
pop
cltd
nop
stos
cmovns
shll
sarb
int3
push
xor
nop
push
sub
jg
xlat
lret
pusha
mulb
inc
ficoms
in
jge
cmp
imul
scas
clc
pop
out
adc
rclb
push
pop
jo
lret
lds
xchg
inc
enter
test
in
sbb
movsl
fcomip
xchg
fstl
xchg
xchg
mov
push
dec
shrl
sbb
je
mov
xor
adc
into
icebp
mov
adc
mov
sahf
pop
or
sub
or
outsb
movsb
lods
scas
test
sub
add
aad
xor
daa
xchg
out
mov
sbb
jg
arpl
jne
jecxz
xchg
sbb
xchg
jl
out
push
mov
xor
dec
pop
fisubrs
jmp
jp
mov
push
fcmove
dec
insl
imul
dec
mov
popa
insb
insb
mov
dec
sub
shlb
jnp
lahf
xchg
bound
sbb
xor
pop
cmp
ja
and
pop
jne
push
jl
mov
lret
cmp
dec
call
xchg
js
adc
pop
cmp
xor
fists
push
cmpsb
pushf
dec
push
inc
jae
icebp
jb
push
pop
mov
and
imul
adc
ret
mov
jbe
push
jl
sub
movsl
lods
jp
sub
dec
push
test
push
jg
mov
dec
xchg
mov
fidivl
out
adc
add
pushf
pop
idiv
in
pop
adc
dec
repnz
stos
and
mov
insl
cs
loope
outsb
add
cld
jecxz
inc
shl
clc
je
les
ds
test
daa
jnp
xlat
xchg
cli
pop
mov
cmp
pop
dec
jne
sbb
cmp
in
mov
xor
add
dec
lahf
inc
push
and
aas
int3
jle
xchg
cld
gs
push
or
out
test
add
inc
fdivrl
outsl
cmp
adc
popf
ljmp
lock
mov
mov
or
xor
fmull
outsb
sbb
movsb
das
mov
insb
stos
jns
inc
lods
addr16
cwtl
xor
filds
cmp
in
sarb
aad
and
mov
clc
xchg
or
repnz
sahf
filds
sti
aas
or
imul
add
popf
iret
adc
adc
arpl
int3
add
in
mov
add
push
leave
mov
sarl
cmpsb
in
pushf
sbb
mov
push
jo
cmp
outsl
dec
and
and
mov
jae
cltd
mov
leave
lahf
mov
xor
pop
in
js
mov
dec
mov
adc
insb
or
mov
pop
faddp
push
push
stc
shl
test
data16
push
push
jecxz
dec
inc
push
call
lea
adc
test
push
clc
lods
std
sbb
pop
out
clc
xor
push
out
notl
jmp
mov
sbb
xchg
cmp
in
dec
rol
in
pop
dec
test
popa
popf
sbb
mov
push
mov
shll
xchg
inc
sbb
or
and
jbe
push
ss
aad
movsl
in
mov
push
orl
into
jmp
push
adc
lock
jno
movsl
push
jmp
fstpt
add
jg
clc
push
xor
in
sti
sti
push
push
mov
sbb
into
or
pop
sbb
and
insl
mov
loopne
mov
sbb
cs
xor
cmp
cmpsl
and
dec
jnp
sbb
xlat
sub
jp
jns
adc
arpl
rcrb
outsb
es
sahf
and
xlat
dec
pop
xor
or
xchg
lret
scas
mov
lock
out
fnsave
fstl
xor
lahf
data16
push
negl
nop
int3
inc
sbb
add
scas
adc
insb
pusha
aam
adc
enter
ss
add
das
push
and
sahf
xor
xchg
cltd
repz
pop
ret
push
outsl
push
pop
ds
push
jae
sub
pop
push
cmp
push
sub
mov
fdivrs
out
jle
test
mov
or
inc
mov
xchg
das
outsl
pop
les
xor
xchg
and
xchg
out
loope
jbe
inc
arpl
dec
mov
fdivl
sarl
adc
das
push
mov
imul
adc
xchg
jmp
pushf
xchg
test
dec
xor
retw
ljmp
fiadds
push
jp
rorl
decb
adc
jne
adc
pop
cmp
push
xchg
clc
out
inc
shrl
ljmp
lcall
mov
enter
ljmp
mov
adc
mov
or
push
jecxz
loop
in
and
and
jns
out
mov
xor
adc
movsl
cmp
lods
xchg
jnp
cmp
push
sbb
sub
in
stc
mov
out
push
cwtl
add
js
daa
or
fisubl
leave
pop
sbb
cmp
inc
xor
mov
out
and
int
cli
lret
adc
sahf
aam
pop
mov
movsb
mov
or
dec
jg
loope
xchg
mov
in
pop
test
test
out
insl
mov
arpl
and
jg
lock
in
cwtl
jecxz
mov
nop
mov
push
cmp
inc
repz
js
push
adc
cmp
filds
lret
mov
jae
add
shl
jmp
dec
bound
xor
push
out
rorb
test
test
aaa
mov
cs
jecxz
fimuls
jl
push
xorl
leave
stc
aad
sbb
lods
xchg
addr16
daa
into
rorb
ja
pop
fisttps
test
add
ss
aaa
mov
pop
inc
add
jbe
dec
ficompl
test
das
xchg
add
fwait
adc
pop
push
mov
rorb
enter
xchg
popa
nop
push
mov
xor
cli
pop
das
hlt
adc
xchg
js
adc
push
adc
dec
inc
or
out
js
nop
out
fwait
xor
pop
mov
inc
stos
pop
sub
or
in
and
lret
mov
in
or
cli
xor
sub
sub
and
test
jae
pop
ror
out
stos
lahf
pop
push
in
les
xchg
stc
in
xchg
nop
lock
adc
aam
add
or
in
divl
inc
in
push
or
mov
add
aad
mov
xor
ds
es
imul
ss
push
mov
loop
sub
std
fs
push
daa
test
repz
inc
scas
les
add
mov
das
fmul
pminsw
push
psrad
mov
sub
and
out
jle
cmpsb
testb
or
f2xm1
or
push
jo
adc
imul
cmpsb
xor
or
pop
pusha
xor
push
loopne
cmpsl
sbb
or
dec
inc
hlt
orl
jg
adcb
test
frstor
cmp
fcomps
sub
adc
cltd
add
test
sub
js
and
xor
out
rcll
cmpsl
xchg
mov
add
iret
out
jecxz
jo
insb
mov
pushf
adc
inc
out
cmp
insb
xchg
push
xchg
popfw
shl
loope
fisttpll
mov
xchg
mov
sub
adc
jmp
test
mov
ljmp
and
cmc
add
mov
push
jmp
xor
mov
in
sub
push
std
inc
lahf
push
int
jo
rcrb
rolb
test
in
mov
mov
push
inc
sub
in
xchg
cld
mov
imul
data16
stos
inc
movsb
mov
xor
sub
dec
test
or
pop
sarb
pop
push
sbb
jmp
in
push
lret
scas
jnp
insl
loop
cmp
jnp
out
mov
sbb
mov
mov
lcall
mov
xor
sbb
push
stc
xchg
je
add
jb
pop
jl
or
push
inc
out
stos
repz
fs
dec
jnp
fwait
mov
sarl
std
lods
pop
test
int
cmp
ja
sbb
hlt
add
push
lahf
dec
imul
dec
sub
cmp
inc
fs
push
cmp
and
mov
cmp
outsb
sbb
je
rol
inc
sbb
jbe
arpl
cmc
pop
pop
lds
neg
int3
lock
dec
sub
jb
pop
bound
dec
stc
sub
inc
sbb
sub
dec
cmp
sbb
stos
repz
icebp
and
pop
mov
sub
mov
cwtl
push
push
loop
mov
stos
insb
mov
xor
aaa
jns
lcall
dec
inc
inc
pop
xchg
frstor
loop
xor
xchg
add
dec
call
jae
dec
enter
nop
pop
sti
call
pop
mov
mov
mov
sbb
xor
sub
stc
pop
adc
add
int
std
shll
mov
jp
stos
ror
jo
cmp
int
mov
stc
xchg
fcomps
xor
sarb
hlt
mov
or
mov
mov
sahf
jo
sbb
lds
sbb
das
ret
pushf
sarl
cwtl
jbe
fldt
loope
adc
or
xor
xlat
inc
pop
sar
dec
decl
mov
jns
test
mov
or
out
in
iret
rol
shll
ds
pop
xorl
dec
mov
xor
mov
fwait
xchg
test
push
and
lock
sbb
jl
aas
test
sbb
xor
mov
pop
and
push
ja
mov
mov
cmpsb
jae
and
enter
push
js
icebp
adc
add
inc
out
sub
xor
fcompl
dec
ljmp
nop
mov
ds
and
or
xor
or
dec
push
lret
fcmovnbe
sub
and
cltd
aad
out
pop
push
movsl
or
jae
adc
sub
jmp
jb
subb
mov
pop
pop
pop
xchg
dec
movsb
js
outsl
or
inc
xchg
add
scas
addr16
adc
cwtl
dec
inc
lods
and
out
pop
andl
out
xchg
int
aas
std
add
sarl
and
mov
add
add
mov
xor
sahf
inc
mov
lret
mov
xchg
xor
mov
fsts
xchg
orl
lods
or
pop
or
or
mov
sahf
lea
jbe
das
inc
cwtl
loop
mov
shlb
add
mov
arpl
lret
xchg
aas
sub
gs
in
and
loop
or
jo
and
pop
jl
lcall
jp
jbe
lahf
mov
daa
adc
fidivrs
or
loop
mov
sub
or
je
inc
adc
nop
leave
into
out
pop
addl
aas
jo
popf
popa
out
jne
mov
mov
xchg
sti
stc
jnp
dec
pop
in
push
sub
daa
shl
push
pop
stc
mov
arpl
push
into
mov
dec
lcall
xchg
jmp
or
add
or
pop
mov
movsl
mov
sbb
jg
xchg
mov
dec
sahf
push
fdivr
xchg
xor
loopne
ss
adc
jmp
inc
dec
cmp
add
rorl
push
push
push
repz
nop
lods
pusha
cmp
rol
out
mov
nop
mov
pop
xchg
mov
xor
ljmp
movsl
sub
dec
cwtl
aas
shl
jle
orl
mov
lods
mov
mov
lods
lock
lea
jmp
xchg
sbb
xor
push
sub
test
pop
stos
outsb
mov
xlat
jne
xchg
icebp
aaa
mov
inc
das
repnz
es
xchg
xchg
add
cmpsb
andb
sbb
std
jmp
je
imul
je
sbb
adc
lock
in
gs
mov
cld
ja
daa
leave
ret
dec
adc
rolb
out
inc
movsb
jns
mov
mov
hlt
push
iret
sub
sti
mov
iret
iret
dec
test
mov
incl
std
outsl
jb
movsb
pop
das
ds
mov
pop
mov
jns
outsb
jae
jl
stos
scas
sub
es
addr16
daa
repnz
mov
mov
xchg
jbe
dec
inc
and
xchg
shr
fstpt
test
mov
xor
es
mov
shrb
fisttps
inc
js
loopne
imul
or
mov
iret
sbb
out
cmp
jle
push
stc
dec
push
cs
pop
jecxz
dec
fcoml
mov
jge
mov
out
lea
das
jns
add
jnp
xor
outsl
sbb
or
bsr
xor
and
mov
popa
push
xor
and
sahf
push
stc
and
pop
test
or
aas
aad
mov
inc
inc
test
ret
sbb
fsub
cmp
int3
mov
jp
in
out
mov
mov
mov
adcb
cmp
adc
loopne
xchg
in
xchg
lods
or
cld
aas
in
push
insb
dec
and
dec
pop
xor
mov
sbb
xor
jo
sub
mov
mov
mov
xor
sbb
push
or
cmp
push
push
lds
popf
adc
sbb
push
mov
aad
out
sbb
roll
pop
popf
js
aad
add
xchg
xor
adc
xorb
shlb
mov
cld
mov
adc
das
imul
adc
in
mov
jle
cwtl
in
into
inc
js
sub
int
out
rcrb
stos
mov
lahf
sahf
xchg
push
and
sub
stos
cmp
popf
dec
decb
stos
in
sbb
mov
inc
test
lret
loopne
xchg
in
xlat
inc
lret
jbe
loope
sbb
xchg
testl
aad
xchg
push
sbb
sbb
cmpsl
pop
jmp
pop
leave
imul
mov
icebp
and
xchg
inc
push
movsl
stos
or
jae
cmp
xchg
mov
outsb
call
xchg
mov
pop
or
mov
sti
std
les
imul
shll
sbb
push
cmp
movsb
jb
mov
lea
and
mov
push
pop
pop
add
mov
xchg
inc
cli
setb
jbe
mov
sarl
sub
push
xchg
cmc
xor
out
push
sub
andl
inc
add
inc
inc
sbb
out
bound
js
negl
outsl
loop
dec
jb
add
out
mov
dec
nop
inc
inc
push
jae
nop
jno
cmp
xchg
ja
scas
int
push
outsb
std
xchg
dec
sub
cltd
ss
mov
push
and
out
lock
dec
loopne
fidivrl
pop
into
mov
or
inc
loope
lret
sbb
decb
jb
stc
mov
adc
cs
test
dec
mov
arpl
cli
int
and
xor
orb
das
dec
cmpsl
iret
xchg
or
stc
int
pop
imul
dec
mov
or
mov
imul
movsl
int3
or
mov
ja
movntq
xchg
adc
push
lods
loop
mov
mov
ret
outsb
inc
add
jmp
out
lods
imul
inc
and
add
fdivl
sti
xchg
adc
mov
in
sbb
dec
lods
arpl
jmp
or
adc
and
dec
jge
aad
pop
xor
xor
xchg
fisttpl
stos
out
or
pushf
hlt
add
mov
in
outsl
mov
aad
pushl
fwait
lock
and
mov
repnz
aam
mov
stc
push
in
dec
arpl
sbb
or
lods
add
lret
mov
mov
jo
jg
mov
lret
ret
enter
jae
cwtl
mov
add
mov
lods
sbb
mov
sbb
adc
mov
push
ja
inc
aad
push
ss
out
test
cwtl
loopne
jns
fistl
sbb
cwtl
movsb
or
frstor
jne
jo
dec
repnz
psubusw
sar
add
push
inc
push
mov
ficoms
cmp
push
std
or
mov
sbb
or
sahf
lods
fcmovnu
test
adc
inc
xchg
inc
imul
fwait
push
sub
ss
mov
icebp
mov
mov
ja
add
or
and
fadds
mov
shlb
push
sub
mov
or
movsb
std
out
int
xor
dec
adc
out
xorl
insb
loope
idivb
push
mov
xor
aam
cli
dec
popa
out
push
fdivl
cmp
cld
into
sar
mov
and
imul
sahf
inc
pop
in
pop
pushf
rclb
push
jnp
std
pushf
lods
sbb
mov
inc
cmp
inc
jbe
loop,pn
jl
pop
addr16
cmp
lock
mov
nop
sub
xchg
lods
xor
loop
pop
jno
mov
jle
int3
sub
jb
push
cwtl
pushf
jge
sub
cs
lock
and
xchg
sarb
jb
jb
rorl
out
fsubrp
sbb
dec
fisubl
mov
inc
int3
add
lahf
jns
push
xor
sbb
cmpsb
das
out
std
gs
daa
ljmp
and
leave
popf
sub
mov
out
xlat
xor
xor
lods
adc
push
sub
mov
cmpsb
pop
movsb
jp
cli
xchg
lcall
or
push
imul
adc
ss
cmp
or
mov
mov
pop
mov
xchg
adc
clc
jmp
sub
dec
push
loopne
pop
scas
mov
je
add
dec
add
push
mov
insl
sbb
mov
mov
mov
and
jle
xchg
inc
cmpsl
bnd
inc
mov
in
jnp
sub
xchg
xlat
inc
adc
or
out
jecxz
outsb
loop
movsl
add
dec
or
int
mov
hlt
daa
sbb
or
daa
call
cwtl
xlat
idivl
pop
icebp
shll
pop
out
xchg
adc
jbe
add
xor
inc
gs
dec
xchg
sahf
xchg
xchg
mov
jmp
mov
aas
xchg
cmp
gs
or
or
xchg
cwtl
out
dec
inc
inc
dec
cmp
aaa
nop
iret
icebp
xchg
ljmp
inc
sub
inc
pop
ja
mov
movsb
mov
xor
aaa
push
jbe
sub
pop
xor
ja
test
xchg
in
inc
out
sub
sub
cmpb
hlt
cmp
cmp
dec
xor
dec
lcall
lcall
sbb
ja
jno
scas
cli
jg
shl
and
ficompl
dec
jmp
aad
mov
sbb
insb
mov
sub
ret
and
and
xchg
adc
pop
add
clc
adc
ja
mov
ret
push
mov
or
scas
in
xor
inc
jle
ljmp
int3
mov
shr
and
fdivrl
scas
mov
xchg
push
dec
popa
in
sbb
xchg
in
out
call
divl
adc
adc
lds
rcl
lea
aas
and
andl
jl
and
or
ret
jge
jo
mov
mov
pop
pop
inc
cld
je
sarl
or
outsl
and
loop
push
mov
in
add
push
ds
out
les
std
cwtl
out
pop
hlt
pusha
xchg
cld
dec
mov
sbb
xchg
mov
mov
adc
imul
sub
xor
jbe
std
fwait
push
and
lea
scas
mov
adc
inc
test
into
mov
xchg
sub
jno
mov
mov
sub
movsb
pop
jge
rorb
cmp
data16
xchg
pop
push
jmp
rcll
lods
fnstenv
cmc
xor
cmp
jg
mov
pop
cmp
xchg
pop
xor
mov
ds
jne
push
insb
jbe
lods
inc
sub
and
inc
lret
cltd
fdivrl
subl
fwait
icebp
imul
fisubrs
sti
mov
aas
push
sbb
outsl
and
shlb
adc
repz
leave
mov
fmull
sbb
pop
xor
dec
and
push
lret
mov
clc
dec
aas
or
std
pop
je
push
adc
fdivl
lea
adc
sahf
sbbl
sbb
addr16
es
jmp
cwtl
mov
sbbl
jp
push
ds
lods
xchg
faddp
andb
test
jbe
outsl
cmpsb
jl
lock
or
jg
nop
xor
pop
push
call
sbb
pop
jo
ret
das
fdivrs
in
jecxz
xchg
decl
paddsb
in
dec
aam
or
sti
sbbl
outsl
pop
push
lods
mov
mov
popa
popf
scas
pusha
sub
lret
dec
lret
pushf
pop
fcmovnbe
cmc
sbb
lret
jge
popa
or
jg
aad
cld
call
negl
jns
jecxz
jo
iret
mov
and
xchg
out
add
mov
fdivs
xor
je
popa
push
jns
cmp
mov
jno
sub
movsb
ja
xor
pop
daa
ret
movsl
outsb
jmp
sti
cmpsb
xor
je
mov
fsts
mov
jg
popa
jbe
imull
call
mov
inc
das
imul
movsb
sbb
mov
add
rcl
out
repz
mov
ljmp
stos
sbb
fimuls
in
mov
add
dec
cmp
push
dec
jl,pn
in
sub
add
pop
sbb
ljmp
inc
call
pusha
fnstcw
cmp
lret
jb
dec
mov
jnp
sbb
loop
in
je
mov
sbb
loopne
cmpsb
sahf
shlb
xchg
pusha
movsb
sbb
imul
mov
add
jne
mov
aaa
test
les
cmc
pop
lret
fs
fadds
loopne
xor
xor
addr16
mov
xor
push
inc
insl
mov
bound
cmpsl
test
mov
mov
push
push
imul
int
xchg
sub
data16
sarl
lahf
mov
outsb
push
mov
pop
lock
lea
leave
mov
or
adc
jne
pop
xor
push
insl
push
aad
xchg
mov
pusha
xchg
xor
mov
adc
inc
add
sub
popf
fs
je
xor
test
jbe
fcoml
mov
dec
adc
xor
sub
cmpsl
mov
sub
int
or
testl
filds
rorb
imul
push
mov
adc
or
mov
outsl
cmp
xchg
js
je
roll
iret
mov
jge
inc
stc
lret
popf
cmc
push
cmpsl
and
sub
and
pop
lret
mov
jecxz
xlat
pop
lret
sub
mov
mov
mov
outsb
inc
inc
js,pn
mov
jnp
or
push
ss
xor
and
rorl
out
subb
in
xor
test
adc
add
mov
xchg
cmpsb
jno
imul
jns
fcomp
mov
leave
inc
sbb
inc
jno
jno
jns
rol
js
push
mov
cwtl
mov
jns
sahf
fsubs
nop
mov
adc
cmp
sahf
imull
aaa
iret
inc
sub
add
in
or
mov
inc
push
and
ss
mov
in
cwtl
xor
jl
loopne
sti
mov
xor
and
and
xor
jne
repnz
cmp
xor
jl
and
rcll
insb
push
mov
mov
nop
ss
dec
or
and
pop
jecxz
jecxz
push
stos
mov
mov
or
mov
mov
adc
or
aas
or
jo
dec
jl
mov
ljmp
inc
je
cmpl
jmp
pop
and
sbb
sbb
mov
or
ja
adc
mov
add
or
mov
rcll
rcrb
sar
insb
push
ljmp
dec
loopne
adc
add
dec
ret
outsl
xor
lret
jns
jbe
aam
cltd
mov
adc
data16
int
sub
mov
pop
repz
xor
push
mov
xor
and
xchg
cmp
or
ja
mov
lods
push
cli
repz
movsb
cwtl
or
and
inc
jg
inc
dec
in
mov
inc
xchg
mov
out
adc
repnz
sahf
lcall
cli
les
jne
dec
jge
sub
mov
in
sbb
js
fdivs
inc
call
lods
sub
cmpsb
xchg
pop
out
stc
push
les
testl
mov
mov
xor
xchg
xor
addr16
fists
cli
js
push
hlt
dec
loop
dec
inc
pop
dec
mov
mov
inc
cmp
xor
push
adcl
xor
add
imul
enter
mov
aad
hlt
xchg
cltd
rcll
mov
aam
inc
imull
and
inc
mov
mov
adc
out
cmp
lods
mov
add
shll
in
adc
dec
or
das
ret
cmp
cmp
loop
mov
xchg
adc
rorb
or
idivb
mov
cs
push
xlat
inc
cmpsl
into
cmp
cwtl
and
xchg
adc
jae
mov
jmp
inc
cmp
das
fnstsw
or
cmp
dec
push
adc
lods
dec
xorl
jmp
jnp
and
sub
adcb
iret
and
scas
pop
xor
cmpsl
fsubl
ja
gs
xchg
dec
jge
or
ljmp
add
mov
flds
arpl
cli
fdiv
mov
loop
add
push
push
push
mov
repz
test
jecxz
and
scas
jae
ds
imul
lock
sbb
inc
daa
sbb
js
dec
pop
sti
aad
xchg
dec
xchg
mov
inc
adc
je
mov
mov
adc
mov
dec
in
jecxz
push
jecxz
adc
mov
and
and
aaa
pop
mov
jne
movsl
inc
es
leave
cs
add
pop
inc
and
sub
pop
adc
pusha
add
dec
sub
lock
cmp
sub
ljmp
xchg
dec
or
jge
enter
push
sub
daa
scas
enter
imul
sarl
stc
call
or
xchg
cmp
cmp
and
fmuls
sbb
dec
repnz
ss
mov
push
jle
sbb
xchg
mov
and
pop
pusha
xchg
dec
std
lret
bsr
popa
bound
dec
mov
mov
xor
movsb
ljmp
cmp
inc
cmp
jnp
mov
sarb
mov
arpl
les
mov
pop
adc
jecxz
adc
scas
cmpsl
or
jo
jno
fisttps
jl
jo
mov
enter
stos
mov
sub
int3
gs
jecxz
call
and
movsb
or
sbb
rclb
shlb
dec
adc
iret
roll
ret
inc
loopne
or
test
int
pop
scas
push
mov
jmp
cmp
push
mov
in
mov
mov
mov
aas
dec
and
mov
mov
scas
pop
in
add
mov
ret
pop
xor
addl
fisttpl
mov
and
jl
sbb
sbb
sub
jns
mov
jge
or
lea
lock
push
cmpsl
mov
or
into
fs
inc
insb
jnp
cli
outsl
add
sub
test
jl
sub
adc
and
xchg
and
jb
jae
popa
xchg
pop
and
repz
mov
repz
out
fldl
rorl
push
cmp
xchg
jecxz
in
cmp
shr
movsl
bswap
sbb
cmp
add
and
xor
adc
jns
or
imul
inc
lods
lock
push
inc
sti
dec
mov
mov
pop
ja
cmpsb
inc
xchg
inc
adc
arpl
imul
test
inc
movsl
loopne
jno
fs
xchg
loope
andb
adc
rcl
mov
dec
shrb
movsb
rolb
dec
lods
jmp
jg
jmp
lea
inc
cmp
int3
push
push
xorb
bound
enter
or
js
and
cli
dec
icebp
add
inc
dec
mov
fstpt
sbb
add
rcl
ja
data16
adc
pop
sub
pop
xor
cmpsb
lock
and
sbb
ficomps
movb
adcl
jmp
add
test
jle
dec
pop
cli
adc
mov
push
ret
pop
std
sbb
fnstenv
dec
ds
xor
fs
or
inc
push
std
sub
mov
loopne
lret
add
rcl
arpl
jp
fwait
mov
movnti
lods
sbb
hlt
aas
sbb
sbb
jge
aam
inc
insl
sbb
arpl
daa
enter
dec
xor
push
cmpsb
je
jo
or
jno
loope
xchg
xor
adc
pop
xchg
cltd
ja
push
dec
loop
lods
xchg
cmc
es
xchg
mov
inc
mov
mov
mov
lock
cmpsb
sarb
push
xor
cmp
dec
addr16
popf
jg
push
nop
cmp
sub
popf
pop
roll
inc
add
les
lcall
lods
lock
call
ret
sbb
push
mov
push
or
in
cmp
push
xchg
lret
inc
js
addb
aad
push
popl
clc
add
test
lcall
enter
xchg
sub
adc
push
jbe
fcomps
push
sti
aam
and
jae
fwait
or
mov
cli
jg
xchg
into
loope
repnz
enter
fwait
mov
into
loope
sub
xchg
out
xor
ret
sub
ja
mov
sub
cmp
mov
int3
clc
sub
inc
cmc
test
es
loopne
push
cltd
rclb
test
shrl
adc
mov
mov
xchg
lea
cmp
icebp
in
out
in
call
divb
mov
enter
sti
push
iret
int
fidivs
pushl
div
shlb
loopne
cmp
loop
stos
sub
ret
adc
test
sub
lock
out
lds
inc
dec
mov
std
sahf
in
stos
or
cmp
sub
push
imul
mov
ljmp
xchg
movsl
mov
test
test
test
bound
mov
xchg
inc
mulb
outsl
aad
rolb
or
or
cld
pop
mov
ficompl
lea
mov
scas
negl
lods
jle
mov
sub
jb
test
and
fidivs
mov
shlb
pop
scas
and
or
aam
mov
inc
sub
rcr
and
cltd
inc
inc
jecxz
mov
insl
andl
sub
or
mov
sbb
inc
mov
icebp
sbb
cwtl
cld
in
cmp
es
lods
std
test
sar
jbe
lds
sbb
pop
fists
cs
iret
pushf
sub
cwtl
xchg
fistpll
cmp
sti
xor
jp
lds
xchg
mov
std
cmp
mov
and
shlb
rcrb
adc
or
xchg
jge
adc
jb
outsb
sub
pop
push
in
and
mov
mov
stc
cmpsb
mov
jecxz
xchg
pop
lods
outsb
aas
jg
ss
mov
cmp
out
cs
inc
scas
bound
clc
fisttpll
loop
gs
arpl
sbb
aam
jle
cmp
iret
fnstenvs
xchg
jg
mov
pop
leave
fidivs
xlat
add
test
and
or
add
shlb
mov
mov
mov
js
dec
ds
ret
setg
sar
and
mov
aad
jg
pop
add
mov
mov
jle
jl
mov
aam
inc
cmp
lods
mov
add
mov
fucomip
or
mov
mov
inc
fucom
cmpb
decl
iret
xchg
inc
mov
mov
mov
shrl
shlb
mov
push
add
pop
fs
arpl
rclb
xchg
sub
dec
jg
aas
fs
aas
mov
cltd
sbbl
fldenv
dec
adc
push
and
push
sahf
xchg
shrb
mov
loopne
jp
cmp
clc
sub
sbb
push
in
dec
clc
orl
es
xchg
lret
loopne
add
je
gs
gs
add
outsb
xchg
fnstcw
test
rorl
ja
mov
out
dec
hlt
pusha
cmpsb
push
dec
sbb
inc
xor
inc
aad
lret
test
adc
lcall
cmp
jno
adc
out
dec
mov
push
out
out
mov
fs
dec
in
dec
imul
jb
adc
data16
leave
test
iret
push
xchg
movsl
xor
xchg
pop
nop
and
lret
outsb
into
int3
test
popf
lret
dec
fsts
jmp
in
push
shrl
mov
dec
mov
frstor
and
nop
dec
aas
addl
mov
mov
push
pop
test
push
cmpsb
jne
mov
inc
push
test
sub
xchg
and
adc
outsb
test
shlb
out
cmpl
and
insl
sbb
leave
popf
ja
mov
in
pushf
xor
xchg
fiadds
das
mov
loopne
dec
lcall
mov
dec
lahf
and
aam
or
aas
fadds
push
xchg
cltd
jno
cld
or
stos
adc
enter
pop
enter
rorb
imull
leave
fnstsw
stos
filds
jns
xor
pop
mov
dec
add
sbb
shrb
cltd
stc
fistps
js
jg
loopne
cs
aas
and
movsl
xchg
cmc
out
fiadds
mov
test
jg
pop
repnz
mov
sbb
les
aas
pop
insl
cmp
in
hlt
mov
test
ljmp
fsubrs
xor
dec
es
cmp
pop
mov
mov
shlb
add
pushf
add
icebp
aam
mov
daa
popf
add
inc
push
mov
pop
bound
push
pushf
xor
jmp
int
sbb
arpl
xor
xor
mov
mov
out
mov
call
sub
mov
cmp
int3
cwtl
ficompl
mov
stos
xor
lcall
jns
out
jl
cmp
mov
and
pusha
aam
jo
scas
push
les
mov
sub
test
outsb
xor
fcompl
and
scas
ljmp
bound
leave
out
movsl
sbb
std
les
jns
jecxz
aad
push
ss
push
lods
mov
fisttps
ss
fiadds
and
sbb
enter
es
repz
jl
outsl
test
xchg
ror
fnstsw
je
mov
addl
scas
mov
out
nop
jmp
pushf
dec
lea
pop
mov
icebp
dec
int3
push
popa
into
lcall
daa
add
lret
inc
add
pop
in
cmpsb
jb
addr16
mov
loopne
ja
pop
dec
adc
ret
movsb
push
dec
pop
dec
xor
mov
cmpsl
cmpsl
lock
adc
in
sbb
enter
jns
ja
sub
or
cmpsb
fs
sub
xchg
cs
insl
stc
jno
jb
add
xor
fucom
popa
mov
daa
cmp
or
movsb
push
rorl
fwait
cmp
das
rcrl
imul
pusha
out
dec
or
add
in
test
sub
mov
push
ret
rolb
pop
push
in
pusha
mov
stc
mov
andb
jecxz
stos
jecxz
iret
mov
stos
fstpt
xlat
xchg
pop
addl
mov
ficoml
lods
sqrtps
cmp
mov
outsl
insl
cmp
cli
in
rorl
loope
adc
push
int
lds
pop
mov
shlb
jmp
cmp
inc
loope
push
xchg
pop
push
movsb
pop
mov
jae
mov
fwait
pop
xor
out
fistpl
xchg
mov
xchg
pop
repnz
and
add
sub
fildll
mov
fistpl
jge
jmp
xchg
push
jbe
push
push
push
pop
jmp
or
sub
shlb
push
push
push
repz
ror
or
mov
std
lret
sub
pop
xchg
mov
cmpsl
add
mov
addr16
fidivrs
fs
mov
dec
adc
mov
dec
out
pop
pop
push
add
pop
fsubs
leave
pop
out
push
iret
xchg
jl
test
push
cld
cmp
push
mov
add
adc
imul
dec
and
mov
daa
in
mull
mov
movb
pop
pop
jne
fdivrl
psubusw
orb
sti
out
scas
call
cwtl
lahf
pop
sub
add
loop
or
push
nop
repnz
pop
mov
jmp
mov
cmp
fnstenv
call
sbb
xchg
cld
mov
mov
setg
or
jb
imul
adc
ljmp
shlb
cmp
pushw
pop
pop
mov
xchg
cmpsb
lret
js
pop
aas
dec
fldenv
jbe
inc
xor
adc
add
add
gs
lret
repz
push
xchg
adc
cld
xlat
daa
stc
cmpsl
mulb
adc
in
mov
jne
jmp
inc
xchg
mov
push
dec
jns
push
testl
in
ficomps
ret
or
pop
outsb
adc
pop
pop
dec
jbe
push
gs
std
sub
lds
aam
inc
ljmp
jmp
sbb
inc
dec
mov
add
lea
adc
mov
ljmp
out
call
loope
jns
push
sahf
xchg
repnz
sahf
movsb
mov
mov
adc
aad
push
pop
push
ret
in
lret
mov
mov
adc
adc
mov
mov
jmp
xor
pmuludq
add
push
push
xor
sbb
push
xor
mov
adc
ja
jg
int3
mov
insb
add
bound
mov
stos
add
dec
sbb
sbb
ret
rorl
pop
sbb
scas
hlt
rcl
lahf
mov
pop
shlb
rclb
fisubl
pop
pusha
cmp
jnp
in
mov
xlat
cmpsl
sbb
cmpsl
sub
and
and
inc
push
dec
in
mov
in
mov
daa
xchg
into
arpl
dec
xchg
mov
fldenv
in
cmc
cmp
adc
add
add
inc
jo
repz
cwtl
cmc
call
insb
leave
icebp
stos
test
mov
test
sub
push
ljmp
pop
xor
and
and
push
add
pusha
add
or
push
push
gs
cmp
jno
mov
lods
cld
push
jg
aam
hlt
push
int
adc
gs
aad
sub
push
lea
int3
dec
iret
and
repz
dec
cmp
ja
mov
outsb
jle
sbb
adc
mov
adc
pop
movsb
cmp
jge
pop
lods
stos
enter
adc
enter
add
mov
aad
mov
dec
lods
cwtl
fildl
fwait
push
aad
fwait
cmp
cmc
push
mov
dec
xchg
add
scas
inc
in
scas
add
popa
fdivl
aaa
ret
inc
jecxz
loope
xor
and
jecxz
lcall
sub
loop
out
ret
push
pop
daa
pusha
and
cmp
imul
pop
xchg
adc
movsb
es
mov
dec
out
arpl
pop
inc
shr
ja
insl
cmp
pop
and
cmc
aaa
add
loope
fisubs
push
sbb
das
subb
fimull
outsl
dec
scas
in
std
mov
lahf
jne
mov
sbb
xchg
test
outsb
xlat
cmc
fisubrs
fisubs
test
xor
pop
pop
jno
dec
or
or
or
xchg
pop
or
out
xchg
mov
pop
and
jb
scas
test
push
mov
outsl
mov
mov
lcall
aaa
and
push
mov
pop
cmpl
mov
cmpsl
push
xchg
lret
xor
and
rclb
rclb
jne
adc
add
es
mov
lods
adc
repnz
add
sub
mov
xchg
aaa
cmp
arpl
movsb
leave
sbb
push
mov
cld
sub
add
or
xchg
dec
mov
int
ficomps
adc
std
test
mov
aam
sbb
and
jmp
dec
pop
movsb
bswap
lahf
repz
add
lock
cwtl
in
push
dec
aaa
xorl
outsl
add
andb
jae
mov
xrelease
sbb
push
cmp
imul
dec
mov
pop
outsl
sbb
sub
fadd
xor
mov
lcall
cmp
push
gs
mov
or
sbb
mov
adc
aas
push
jnp
stc
fidivrl
add
xchg
push
jne
xor
dec
leave
push
in
lcall
and
push
ljmp
mov
adc
add
pop
pop
mov
mov
fiadds
mov
int3
sub
out
lea
adc
test
jno
lds
shl
mov
shr
mov
sti
and
insb
insl
fs
mov
pop
add
pop
sti
or
aad
fstps
sub
or
ror
inc
jge
pusha
mov
movsl
dec
pop
mov
cmp
daa
sub
das
dec
iret
outsl
cmc
imul
xchg
and
test
out
xchg
adc
sub
pop
sub
jne
aad
jp
xchg
xor
stc
mov
jo
cmp
and
or
sub
mov
int
sarl
push
shlb
push
cmp
inc
push
outsl
ljmp
mov
xchg
outsl
sbb
ja
inc
pop
inc
ficomps
cmp
jne
enter
push
movsl
dec
xchg
lret
jbe
push
sahf
les
push
rcll
dec
sub
lods
scas
or
jbe
std
adc
fs
addr16
movsb
mov
sub
add
das
aam
push
add
dec
das
jns
imul
out
xor
mov
adc
pushf
loope
fldl
and
mov
icebp
push
pop
movb
data16
mov
std
cmpsb
pop
cld
xchg
cmp
mov
das
pop
iret
jb
into
mov
sub
stos
pop
xorb
fstpl
dec
sub
hlt
pop
cmc
popf
jno
and
outsl
or
addr16
jae
adc
or
adc
add
sbb
popf
movsl
roll
addb
rcrb
int
dec
jns
idivb
lds
and
push
dec
iret
ret
jmp
jp
out
push
or
xchg
je
mov
jae
and
hlt
mov
mov
mov
addr16
in
in
js
sbb
pop
icebp
mov
jnp
aaa
ret
add
inc
sbb
adc
shr
dec
imul
stos
bound
scas
cmp
push
addb
add
push
xor
push
stos
outsl
cmc
add
imul
ffree
adc
out
jmp
dec
in
repnz
inc
and
aad
in
scas
adc
cmp
xchg
lret
jnp
push
mov
mov
gs
push
popa
aad
mov
add
lret
mov
ret
mov
jg
popf
imul
cmp
in
xor
cltd
push
bound
out
and
and
push
pop
cwtl
jns
rcrl
or
xor
mov
push
cs
add
sbb
xchg
push
popa
out
and
ljmp
mov
mov
dec
xchg
jne
pop
pop
mov
mov
mov
lock
mov
inc
mul
imul
enter
pop
mov
insl
pop
xchg
or
test
shlb
dec
xchg
call
xchg
jge
mov
scas
jbe
mov
bound
or
xchg
pop
ds
dec
sbb
jle
push
lock
add
adc
loope
scas
lock
xlat
or
xchg
scas
call
int
subl
mov
push
add
cmp
mov
popa
cmp
mov
pop
stc
xlat
mov
mov
sbb
popf
push
push
fdivp
fdivrl
shll
push
mov
mov
rcrb
aam
call
movsl
int3
push
xorl
jg
xor
out
sub
sbb
pushf
adcl
pushf
int3
lock
jne
jb
cmp
addr16
xchg
dec
sbb
popf
jb
addr16
push
fwait
and
jl
ljmp
ja
pusha
adc
cs
arpl
xchg
mov
sbb
loopne
shlb
outsl
adc
push
sahf
dec
ja
jo
divb
mov
js
loopne
ljmp
push
sbb
stos
stc
out
in
push
xorb
add
notb
aas
adc
aas
out
xchg
jle
stc
daa
nop
pop
fcomps
push
push
cmp
push
mov
test
rsqrtps
enter
in
mov
adc
add
dec
and
in
les
cld
adcb
push
pop
and
cmpsb
mov
push
int
pop
shlb
push
aad
addr16
pushf
and
pusha
ljmp
or
leave
stos
inc
loop
inc
adc
cs
movsl
das
xchg
and
adc
test
dec
mov
test
add
int
jmp
xor
pop
mov
jmp
mov
mov
test
sbb
test
rcrl
stos
cmpsl
adc
fidivs
mov
add
inc
je
mov
and
out
mov
push
or
test
movsl
adc
cmc
dec
bound
stos
jge
aad
rolb
addl
lods
xor
push
sub
arpl
je
pop
add
std
loopne
int
out
jle
xchg
push
jge
mov
lahf
fnstsw
int3
enter
and
mov
ficomps
xor
xchg
and
pushf
mov
pop
cmp
xchg
jnp
in
popa
mov
lret
inc
movsb
cmp
nop
ljmp
fbstp
aad
les
xor
xor
inc
mov
xchg
dec
popa
mov
aam
daa
adc
mov
stos
sub
add
push
dec
imul
jle
fs
fadd
shrb
and
arpl
call
imul
push
jge
sub
add
test
mov
pop
pop
and
aas
data16
repz
gs
push
lcall
fwait
xor
stc
push
and
jnp
enter
outsl
or
or
mov
testl
cmpl
ljmp
push
stos
call
pop
aam
jl
add
shl
addr16
xor
sbb
movsl
cltd
sahf
cltd
pop
sub
popa
lea
mov
fidivrs
xchg
inc
stc
push
xchg
lea
test
sub
xor
or
sub
lods
out
cmc
cli
cmc
popf
jbe
xor
popa
xor
outsb
xor
mov
sbb
sbb
pop
ljmp
inc
xchg
push
cli
cli
pop
or
dec
std
movl
out
dec
cwtl
xchg
popf
mov
cmp
pop
cmc
dec
adcl
stos
pop
jo
push
push
jae
mov
adc
cmc
ljmp
movl
popf
xchg
lcall
or
dec
inc
cmp
lock
jecxz
gs
sub
test
js
mov
daa
in
imul
and
lds
cmp
dec
xor
fcmovnu
rcrl
jnp
ror
fsts
clc
leave
pop
jmp
dec
xchg
lret
in
or
mov
hlt
repz
hlt
sub
push
dec
jge
lahf
popf
ret
jg
pop
jl
dec
sti
dec
xor
push
dec
sbbl
mov
repz
stos
dec
pop
fidivs
pushf
xor
dec
pop
callw
jg
outsb
leave
mov
jg
sbb
xchg
jo
ficomps
jnp
adc
hlt
inc
aas
pop
loop
clc
pushf
or
sbb
sbb
stc
lock
push
sub
adc
dec
mov
scas
lea
scas
dec
or
xor
in
xchg
push
mov
inc
xchg
and
jbe
in
inc
mov
or
mov
jo
dec
imul
push
lcall
leave
ret
push
call
fs
cmc
pop
xchg
and
inc
outsl
dec
lret
lods
sub
push
add
pop
xchg
push
xchg
pop
out
sbb
sub
jge
and
push
cwtl
movsb
mov
mov
jne
inc
dec
pop
ficoml
jle
repnz
xchg
dec
mov
mov
dec
stos
mov
sbb
pop
dec
setnp
dec
push
add
leave
xchg
add
popl
aaa
test
aas
mov
jbe
xlat
cli
stos
dec
jo
add
mov
mov
xor
and
mov
jecxz
adc
xor
xor
jmp
jecxz
incb
in
in
xchg
mov
mov
cmp
adc
xchg
in
out
mov
pop
inc
imul
and
inc
and
xorl
jecxz
sub
lea
por
inc
jle
test
add
stc
roll
stos
scas
cwtl
repz
mov
pop
lea
rorl
cmp
std
test
aas
mov
or
dec
popa
and
jno
sbb
scas
sbb
mov
insl
xor
sub
push
xchg
sub
mov
adc
sub
mov
dec
popf
int
enter
xchg
test
les
rcrb
movsl
xchg
cmpb
mov
scas
addr16
jo
or
mov
call
inc
sub
mov
adc
test
pop
push
sbb
jmp
sarb
xor
cmp
mov
mov
sbb
jbe
cmp
and
jecxz
dec
mov
jbe
xor
push
add
xor
aas
dec
xchg
xchg
popf
lret
imul
fcoml
dec
insl
stos
call
ror
and
shll
dec
mov
inc
add
andl
cwtl
fistl
add
dec
jne
loopne
fwait
and
inc
in
or
out
jno
sub
fnstcw
fs
dec
jne
outsl
xchg
imul
push
or
icebp
or
jne
lods
and
mov
sbb
insb
rolb
inc
mov
aas
inc
fisttps
xor
xabort
arpl
aam
mov
sub
scas
xchg
mov
je
mov
push
add
or
xchg
jmp
adc
or
fs
xchg
js
repnz
outsb
mov
cmpsb
sti
mov
outsb
fidivrl
jbe
ja
insl
jae
mov
ja
jle
inc
fcmovnu
inc
in
xlat
movsl
jnp
aaa
mov
cmpsl
sub
xor
jne
mov
sti
stos
push
push
cmp
dec
or
repz
cmc
xchg
popf
fld
push
aam
or
dec
sbb
je
fisttpll
or
cmp
cli
ja
jns
pop
ror
dec
fwait
xchg
jae,pt
jno
jp
mov
pop
dec
dec
xchg
lea
popf
icebp
cmp
push
pop
mov
outsl
fwait
pop
icebp
jo
cli
xchg
test
mov
mov
dec
xor
sti
jg
mov
sub
mov
cmp
lea
in
push
test
aam
or
mov
add
ret
jnp
xchg
pop
call
fimuls
test
xchg
or
mov
xchg
sub
push
test
and
addl
scas
shlb
xchg
and
dec
cld
push
flds
mov
mov
and
pop
mov
or
add
jbe
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
add
inc
add
jo
add
add
add
add
add
add
add
