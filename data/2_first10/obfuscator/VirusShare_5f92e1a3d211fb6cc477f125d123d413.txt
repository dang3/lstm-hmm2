push
call
ret
ret
xchg
shlb
push
aas
jge
leave
mov
adc
mov
aad
mov
adc
ret
sub
pop
or
pop
xchg
les
cmp
sub
cmp
orl
lcall
movsl
mov
shrb
scas
pop
test
inc
mov
ret
icebp
mov
sub
mov
and
jmp
mov
dec
nop
pushf
xchg
test
rol
jle
test
push
inc
or
fnstcw
pusha
add
jae
loop
push
rorb
es
outsb
cmp
int3
stos
notl
out
shlb
dec
xorb
aad
ja
mov
mov
leave
inc
sub
int
mov
push
shl
xor
or
sub
pop
outsl
sub
insl
iret
mov
fs
scas
or
in
xchg
out
lcall
sti
iret
arpl
sub
xchg
insl
mov
out
adcl
mov
repz
push
leave
ret
inc
daa
ja
adc
inc
lret
lds
scas
pusha
jge
add
scas
out
jnp
xor
lahf
jnp
push
out
nop
es
mov
jecxz
jo
push
mov
xor
std
mov
movsb
mov
test
inc
icebp
imul
mov
sbb
sub
push
mov
les
ds
xchg
xchg
fidivs
ds
push
mov
mov
xchg
pop
xchg
incb
test
nop
dec
pop
lret
mov
out
cmp
subl
and
xchg
push
and
jns,pn
addr16
pusha
aaa
mov
cbtw
inc
mull
or
jnp
hlt
jnp
js
clc
sbb
fwait
jno
loopne
adc
mov
mov
daa
dec
add
iret
repnz
stos
sub
test
lea
jno
fwait
pop
xchg
adc
ja
arpl
xchg
insl
mov
lock
sbb
jl
add
sbb
inc
or
xor
sub
andb
int
aam
ljmp
jmp
aaa
dec
push
xor
jl
repnz
mov
or
mov
outsb
push
pop
lret
in
cmp
cmp
imul
js
push
mov
test
mov
and
dec
mov
sub
inc
fdivp
jns
or
pop
inc
mov
xlat
roll
ss
mov
mov
nop
fadd
fsts
enter
jns
xor
xchg
push
test
sbb
popa
call
fucomi
dec
aad
shr
xor
loopne
xchg
scas
inc
int
fimull
loopne
push
dec
sub
push
shlb
adc
cltd
in
cli
xor
sbb
dec
pop
mov
popf
cmp
cmpl
sub
mov
dec
in
pop
scas
aad
int
sub
lods
cmp
lea
test
es
pop
sbb
jae
add
jle
dec
sti
cwtl
lds
sbb
ja
in
fs
inc
adc
jmp
cmpsl
jns
xor
ret
cmpsb
imul
and
jle
pushf
inc
test
aad
popf
xchg
mov
aaa
cmp
push
popa
add
mov
cmc
mov
jp
das
and
lea
push
sub
rolb
cmp
addr16
lahf
je
leave
rorb
xchg
shlb
in
cltd
es
stos
mov
fsubrl
or
not
rclb
aam
xchg
dec
mov
sub
into
filds
push
stos
inc
pop
fcomp
inc
lds
js
pushf
repnz
std
lock
sti
inc
std
ret
fstps
inc
nop
out
aaa
cs
fsubrs
out
push
cmpsb
rcrb
inc
mov
ret
push
das
push
idivw
ss
fincstp
inc
xchg
int3
mov
aad
sub
outsb
insl
insl
sbbl
cmpsb
ret
movsl
sub
mov
pop
xchg
int
mov
outsl
and
ljmp
or
adc
imul
decl
mov
adc
pop
cmp
jo
movsb
push
fdivrl
xchg
xor
cmpsb
fld
and
xchg
sbb
mov
adc
pop
fdivr
mov
insl
inc
rcrl
pop
fucomip
aas
test
dec
icebp
mov
sub
cmpsb
sub
adc
push
add
roll
rcrl
inc
cmp
ret
hlt
mov
out
divb
sub
ja
out
cmp
jle
jle
mov
push
push
mov
imul
xchg
pop
adc
xchg
aam
cmpsl
dec
cmp
push
and
int
adc
pop
xchg
out
add
repz
stos
add
fcoms
jmp
push
orl
mov
sbb
daa
je
call
add
push
push
stos
test
inc
mov
jecxz
test
mov
aam
cmp
inc
out
sarb
std
xor
mov
insb
pop
repz
repnz
mulb
jnp
add
or
xchg
jne
fwait
jns
iret
cmc
iret
popa
lret
test
lds
fidivrs
mov
mov
movsl
mov
out
and
and
rcl
sub
mov
pop
sub
mov
stc
dec
cmp
call
shl
mov
movsl
and
xchg
or
aaa
add
xor
incl
les
xchg
mov
std
xchg
dec
and
je
lret
or
mov
test
mov
xchg
adc
dec
mov
pusha
icebp
mov
pop
pop
lahf
addr16
imul
sub
jae
jne
test
pop
push
popf
sub
repnz
fimuls
mull
sub
mov
adc
push
push
add
das
popf
fwait
mov
test
inc
sti
xchg
repnz
mov
inc
scas
pusha
push
sbb
xor
rorb
pop
aas
insb
pop
adc
cwtl
xchg
clc
jecxz
stos
inc
dec
jecxz
xchg
sarb
mov
ret
push
mov
outsl
out
pop
add
sub
aaa
pop
inc
xchg
sbb
rorl
outsb
sbb
lcall
sarb
shl
je
push
cmp
or
in
cmp
mov
push
and
aas
jp
test
lcall
push
xor
push
sysexit
test
scas
cli
push
popl
push
dec
mov
cmp
mov
out
sbb
xchg
fisttps
pop
or
filds
fs
call
xchg
jge
adc
sub
out
movb
fistps
loope
xchg
orb
sub
lods
mov
cmpl
push
mov
lds
inc
fidivrl
mov
nop
jns
int
and
add
cmp
inc
filds
fdivl
mov
jl
xchg
mov
int
cmpl
ds
pop
ret
or
test
sub
dec
inc
push
movsl
mov
rolb
movsb
in
int
push
push
stos
push
in
aam
lret
push
iret
push
imul
push
imul
jp
cmp
fcoms
push
call
sub
arpl
push
push
cli
mov
mov
loope
movsl
push
adc
std
scas
stos
mov
out
pop
mov
mov
test
aaa
mov
jge
adc
sbb
out
sti
incb
in
pop
or
popf
mov
outsb
sbb
mov
jae
xor
cli
adc
xchg
out
xor
fidivrs
out
inc
gs
lods
int
adc
or
cmp
xor
xor
push
push
jo
cltd
int3
stos
and
push
hlt
push
pusha
dec
call
adc
push
lret
imul
aad
inc
clc
pop
sahf
xor
popf
sti
push
in
fwait
cmc
inc
jmp
sahf
jne
inc
lods
xchg
adc
add
push
stc
push
jl
mov
nop
add
cli
jge
inc
sub
mov
lods
testl
cmovge
das
iret
sbb
jae
popf
sbb
loopne
push
and
call
and
add
cld
adc
addl
xchg
push
sub
jp
outsl
dec
mov
aam
hlt
bound
sbb
dec
cmpsb
cs
test
xchg
repnz
scas
add
cltd
cmpsl
mov
jns
sbb
jne
outsl
xor
cmp
test
loopne
dec
hlt
sbb
xor
mov
jge
xchg
xchg
loop
jl
call
mov
out
nop
aaa
shll
inc
out
ret
jl
mov
inc
cmp
out
cmpsb
or
push
jae
ds
test
jne
in
xor
stos
loopne
sbb
sti
inc
sub
mov
sbb
aas
cmc
imulb
mov
sub
and
lea
addr16
negl
call
mov
rclb
aaa
repnz
aas
cmp
sbb
jecxz
loop
sbb
mov
xor
adc
pop
sarb
or
mov
or
sub
sub
mov
gs
push
pop
mov
cmp
cli
cmc
sub
dec
inc
insl
xorb
jecxz,pn
cmp
lea
fisubl
push
popf
pop
adc
adc
aas
add
jg
xchg
mov
adc
sahf
aaa
mov
xchg
aaa
mov
fs
sbb
call
add
imul
scas
adc
aad
je
arpl
sub
mov
es
dec
inc
xchg
jmp
cmp
mov
mov
pop
mov
xchg
into
cmp
xor
aas
jge
int
repz
pop
ja,pt
or
jbe
dec
cmp
aad
loope
pop
loop
jnp
push
xor
ljmp
test
or
repz
push
sbbl
adc
xor
xchg
mov
call
or
mov
rorl
jnp
shl
and
pop
sbb
mov
es
gs
cmpsl
sbb
cmp
fisubrl
sub
cmp
ljmp
lds
cmp
lahf
cld
test
testl
nop
push
leave
popf
and
xor
loop,pt
mov
dec
testl
mov
sbb
dec
in
jae
in
mov
adc
loop
lods
mov
std
inc
add
jb
test
dec
movsl
push
jl
cmpsb
inc
stc
mov
jns
push
insb
bound
ss
mov
push
pushaw
and
pop
and
cmp
inc
xor
cmpb
test
xchg
jmp
push
mov
push
mov
mov
mov
pop
or
loope
popf
sub
es
inc
insb
shrb
add
lea
sarb
cmp
test
push
dec
cltd
pop
test
daa
sbb
sbb
push
addr16
adc
pop
mov
test
subl
dec
cli
inc
adc
out
out
dec
test
je
ja
loope
jmp
push
iret
adc
pop
jnp
fcmovu
xchg
and
test
sub
mov
adc
inc
push
test
push
loop
push
inc
addl
sbb
cltd
popf
rcrb
shlb
xor
testb
daa
xchg
clc
pop
push
dec
and
sub
repz
mov
xor
mov
std
outsl
xchg
lock
mov
sar
scas
jb
jp
jmp
dec
cmp
inc
imul
xchg
sub
inc
shl
movsl
push
dec
insb
inc
ret
push
or
aam
sbb
mov
sub
gs
sbbb
int
nop
cld
sahf
outsl
call
pop
adc
lcall
daa
dec
add
jo
rcll
ret
inc
mov
add
mov
and
jecxz
and
xor
jbe
push
clc
mov
mov
arpl
pop
in
out
push
std
push
addr16
imul
inc
ja
xchg
repnz
test
sub
fmuls
nop
dec
push
cmc
xor
iret
inc
mov
ret
addr16
mov
scas
icebp
push
inc
xchg
insl
jno
decl
lret
je
push
adc
push
push
loopne
movsb
cmc
fs
push
and
jecxz
push
jno
xchg
mov
mov
pop
and
adc
movsl
push
dec
into
fildl
nop
addb
inc
xor
fnstenv
int
xor
pop
fldt
rclb
and
fdivp
xchg
cmpsl
adc
inc
jmp
xchg
push
movsl
and
js
lcall
stos
add
add
repz
cmp
mov
rcrl
outsl
int3
rcrl
aam
mov
mov
rorl
aas
testl
add
aad
scas
loop
dec
stos
ds
and
sbb
mov
dec
fstpl
loop
jl
sub
cmp
dec
jge
push
push
push
movsl
out
jl
xchg
inc
cmp
or
in
jmp
mov
ja
xchg
add
dec
sahf
xchg
repz
fldenv
lods
aas
xchg
ja
mov
add
aad
push
xlat
mov
add
sub
adc
fnsave
or
mov
mov
cmp
mov
cmp
sub
mov
jecxz
rcr
mov
xor
cmc
fldt
cld
mov
inc
jle
fdiv
adc
pop
dec
stc
jae
sub
shrb
fstpl
adc
icebp
imul
sbb
adc
cwtl
push
xor
push
pop
lock
inc
icebp
pop
pop
movsl
lock
cwtl
rcrl
in
pop
in
mov
std
lahf
xor
mov
dec
cld
fnstenv
mov
leave
into
fdivs
ja
rcr
xchg
push
test
and
sbb
bound
pop
cmpsl
push
push
cmpsb
or
iret
xchg
add
rcll
pushl
inc
adc
inc
js
jmp
rorb
pop
nop
aam
jbe
mov
pop
jno
loope
lods
test
out
mov
cmc
cmp
xorl
clc
pop
mov
orb
mov
das
mov
push
pop
and
pop
movsl
repz
in
aas
pop
movsb
inc
cli
dec
bnd
xor
pop
fistps
inc
enter
mov
jno
iret
adc
push
test
fdivl
push
pop
sub
sub
inc
popa
mov
push
add
ficompl
xchg
loope
xchg
jmp
or
movsl
mov
mov
xchg
movsl
add
mov
mov
inc
dec
pushf
addr16
xchg
mov
mov
iret
inc
popa
mov
lds
inc
cld
jae
rorl
ljmp
xchg
mov
arpl
bound
aad
decb
icebp
test
sbb
dec
inc
push
pop
stc
xchg
test
or
cmp
imul
pop
xchg
sbb
ficompl
jmp
adc
je
lea
icebp
xchg
mov
icebp
fwait
int
jno
mov
pusha
mov
movsb
pop
mov
leave
adc
mov
sbbl
cmp
mov
imul
cmp
jno
inc
inc
sub
dec
adc
or
nop
dec
aas
xor
mov
dec
and
dec
stos
dec
pop
push
lcall
add
pop
or
and
outsb
adc
xor
mov
push
imul
xchg
movl
push
clc
pop
sub
xchg
xchg
or
out
das
mov
in
pop
movsl
lods
add
cmp
jg
hlt
imul
mov
sub
test
or
jno
push
mov
sbb
mov
cmp
pop
pop
sub
cli
fidivrs
jbe
stos
mov
jmp
fldenv
insb
sub
mov
push
mov
pop
xor
cmpsl
adc
pop
mov
aam
push
push
push
mulb
jle
mov
xchg
inc
punpckldq
mov
and
sub
int
and
mov
leave
lods
cwtl
js
push
scas
fldt
inc
pushf
cmpb
pop
aam
add
into
lock
push
arpl
cmpsl
xchg
pusha
mov
cmp
lea
push
jb
lds
sbb
xchg
divb
pop
nop
shrb
adc
iret
int
ficoms
stos
fs
shlb
add
adc
fsub
lahf
mov
loop
mov
sbb
sub
mov
jb
xchg
dec
cwtl
aaa
fistpl
xor
sahf
push
movsb
cmpsb
cltd
decl
in
or
mov
js
push
jl
ss
dec
cmc
addl
jb
imul
mov
adcb
nop
ret
iret
sub
fnsave
jb
leave
cmpsl
cmp
pop
sub
cmpsb
sahf
in
bound
add
mov
sub
fs
ret
das
jp
test
imul
loop
push
dec
jecxz
lods
inc
push
mov
adc
pop
jbe
aam
xchg
enter
lods
pop
sbb
mov
mov
repnz
outsb
arpl
movb
jecxz
in
jg
loope
repz
test
out
sbb
xchg
push
test
xchg
imulb
xchg
xchg
rcrb
mov
push
hlt
jle
ficomps
stos
das
sarl
jle
xor
movl
push
nop
lods
inc
mov
int3
pop
xor
mov
adc
push
shlb
xor
dec
sti
sti
aad
push
sbb
in
sub
mov
pop
mov
mov
lods
sbb
mov
push
and
hlt
push
jne
outsl
scas
stos
inc
fcoml
cmp
pop
xchg
push
insl
lods
iret
mov
mulb
pushf
es
xchg
pop
imul
iret
enter
movsb
xchg
cmp
mov
adc
sbb
and
xchg
sbb
into
shrb
push
mov
mov
inc
xor
sub
mov
xchg
fidivs
scas
movsl
es
lods
rorb
loope
dec
ffreep
outsl
sbb
popa
outsb
adc
int
gs
lods
mov
dec
mov
mov
or
fiaddl
pop
int3
mov
int3
sub
inc
sbb
aas
jbe
stos
ficoms
movsl
mov
fadds
popl
sbb
ret
je
les
mov
std
stos
aad
cmp
sbb
dec
aaa
lods
sub
pop
out
jb
add
ret
data16
std
dec
imulb
cmp
outsb
cmp
sbb
out
xor
movl
insb
loop,pt
inc
push
push
inc
and
ret
subb
mov
cmpsl
sbb
push
mov
int
pop
sub
cmp
jo
xchg
pop
sub
jge
enter
pop
mov
es
mov
lcall
imul
and
out
adcb
clc
fsubrs
roll
lahf
jge
addr16
daa
xchg
iret
mov
jbe
fmull
pusha
movsl
xor
js
lea
mov
mov
sbb
dec
nop
clc
ljmp
leave
adc
jle
lahf
sbbl
dec
mov
jge
push
loop
loop
loopne
inc
jmp
jno
or
and
and
jle
flds
fnstsw
xchg
mov
xchg
ljmp
shl
sbb
jp
push
or
aas
loop
jle
or
in
fnstsw
sub
iret
inc
movsb
sub
lods
add
jle
or
fmulp
xchg
fmulp
mov
fs
mov
popf
in
cmp
daa
jge
int3
outsl
arpl
pop
mov
dec
call
push
fwait
cmpsl
fbstp
push
or
push
repz
jo
mov
xchg
push
stos
pop
lods
pop
adc
pushf
ja
lea
and
out
rorl
xchg
mov
aam
pop
cwtl
pop
lret
mov
leave
lahf
xor
lds
and
lcall
push
push
ds
cwtl
rorl
cmp
push
xchg
pop
out
mov
outsb
cmp
jb
icebp
xchg
jle
movsb
repz
aad
sub
adc
mov
rorb
xor
pop
mov
movsb
mov
mov
loopne
cwtl
test
xor
xchg
fcomp
mov
xor
adc
or
arpl
out
sbbl
jge
add
mov
adc
int
inc
or
inc
xchg
hlt
sub
xor
fwait
xor
jb
ficompl
out
push
dec
inc
sub
fmuls
shl
leave
ss
rcrb
jbe
dec
xchg
mov
bound
and
and
push
pop
leave
inc
mov
cli
mov
fwait
lcall
inc
push
pop
lea
xor
je
jl
fists
pop
loopne
mov
cvtpi2ps
mov
and
inc
enter
inc
inc
out
inc
jno
in
in
xchg
jb
jno
sahf
xor
popa
test
push
rsqrtps
cld
aam
sqrtps
jo
ficoms
pusha
leave
test
sbb
movaps
sti
ds
stos
push
mov
sbb
hlt
lcall
out
insl
xchg
pop
lods
das
lret
push
jne
into
push
xor
enter
cmpsl
out
pop
testb
insl
insl
xor
popa
popa
sbb
pushf
pop
addw
fdivs
push
and
in
iret
cwtl
pop
test
cmp
push
cmpsl
cmp
add
and
les
aad
addb
xchg
and
rclb
shrb
or
out
outsb
mov
push
dec
sub
inc
pop
imul
lahf
repz
dec
jl
popf
aas
cs
call
xor
jne
fsubs
stos
mov
shlb
sti
fdivp
js
push
mov
mov
push
loopne
inc
clc
and
pop
popf
bound
in
scas
insl
push
js
push
adc
mov
cld
sub
xchg
roll
dec
data16
mov
movsb
fldl
mov
insb
cmp
cmpsl
mov
pop
mov
sbb
es
dec
or
daa
adc
test
mov
jbe
or
sub
shll
sub
cs
dec
gs
ret
and
cmpsl
pop
ss
cmpsb
pop
in
cmp
dec
mov
sub
pop
repz
xchg
pushf
sbb
xor
mov
cmp
lods
and
mov
sbb
jnp
add
insb
sti
mov
insl
jo
jl
rorb
stc
nopl
dec
add
xor
js
xchg
sbb
fwait
in
shrb
repnz
pop
cs
cmp
push
xchg
adc
aaa
ret
pop
push
cmpsb
push
imulb
sub
mov
sub
add
outsb
fimuls
insl
sbb
add
enter
sub
inc
mov
cmp
ljmp
lock
add
outsb
fistl
xor
dec
mov
jg
iret
or
xchg
jl
mov
pop
testb
xor
adc
cmp
out
sub
lret
adc
cmpsb
fsub
push
push
repz
sahf
fisubl
sbb
push
push
mul
pop
int3
inc
cmpsl
xchg
gs
jge
hlt
mov
jbe
ds
dec
sahf
inc
dec
test
lret
inc
pop
pop
pushf
adc
inc
mov
pop
mov
cltd
jg
movsl
out
jae
stos
pop
pop
insb
into
ficompl
add
pushf
xor
push
sti
fdivrs
fildl
dec
loope
daa
mov
adc
imul
dec
dec
stos
mov
inc
fimuls
inc
xor
ss
cmp
cmpsl
inc
cmpsb
lret
sbb
sbb
mov
addr16
test
aam
mov
shrb
imul
std
lock
or
stos
mov
clc
add
mov
arpl
xchg
ret
loopne
xor
sbb
aad
out
lock
jne
shll
sub
aad
out
mov
add
gs
mov
mov
or
sbb
ficomps
mov
popfw
cmp
mov
and
and
into
repnz
cmc
xchg
and
push
pop
sbb
lock
std
mov
add
adc
fcmovb
imul
ljmp
add
lahf
push
in
popf
jle
push
push
mov
sbb
into
lods
lret
adc
jno
and
jecxz
fcmovb
xor
test
rcrb
pusha
insb
pop
adc
dec
mov
dec
mov
aam
ljmp
mov
push
and
mov
sbb
int
xchg
data16
pushf
sti
shlb
cwtl
cwtl
adc
sbb
pop
stos
xchg
mov
push
cmp
call
bound
pop
cmp
xor
mov
jg
inc
sti
clc
sbb
and
push
pop
xor
lahf
and
cwtl
xlat
and
leave
sub
mov
inc
movsb
lock
lock
add
xchg
ret
out
push
mov
mov
jl
adcb
imull
add
ficoml
push
pop
inc
jne
sub
push
fisubrl
icebp
cmp
dec
jecxz
mov
idivl
shrb
adc
sahf
xorb
xchg
stos
dec
lds
cmp
jl
stc
aad
pop
inc
push
popfw
mov
jo
jle
xchg
insb
rcll
jg
pop
sti
fstpl
jp
leave
add
xor
mov
sbbb
push
mov
imull
ja
es
fucomip
sub
jae
and
aas
add
mov
inc
in
pop
in
fwait
xchg
stos
fbld
lock
cmp
mov
into
xor
fld
pusha
rclb
and
adc
add
mov
xchg
sbb
xor
addr16
mov
pop
lcall
xlat
push
adcl
mov
fisttpll
fnsave
add
mov
push
jecxz
test
cmpsl
mov
add
mov
inc
mov
mov
pop
xchg
clc
xor
dec
fldl
dec
xlat
mov
xor
dec
sbb
int3
push
jne
mov
and
jb
pop
shlb
mov
mov
pop
sub
cld
add
test
andb
cli
xor
in
inc
testl
sbb
loop
enter
out
or
cs
xchg
jge
push
jo
loope
mov
jne
test
sbb
mov
notb
out
test
pop
sub
xchg
in
cwtl
dec
mov
stos
lods
dec
movsb
push
les
push
fdivs
mov
or
loop
stos
stos
das
test
pop
mov
frstor
or
fidivrl
jb
mov
push
repz
repz
mov
gs
sub
push
lret
fwait
repnz
xchg
sbb
sub
jecxz
sbb
ja
ds
dec
in
dec
cmp
adc
add
fwait
pushl
imul
lahf
or
push
and
xchg
cmpsl
push
mov
fstl
sub
in
dec
mov
addr16
outsl
mov
loope
aam
mov
sub
xor
jge
inc
scas
mov
je
jbe
xor
add
push
mov
lahf
ss
ret
xor
pop
mov
push
sti
push
pop
std
cmpsb
cmp
or
mov
aaa
or
shlb
xchg
enter
mov
test
inc
or
stos
in
cs
shl
fcoml
out
lock
jnp
arpl
push
movsb
pop
test
arpl
inc
push
jle
mov
aam
popw
lret
xor
mov
hlt
mov
inc
add
add
sub
fisubl
jb
leave
or
frstor
stc
fcmove
jne
mov
xchg
xor
loopne
mov
adc
xchg
hlt
frstor
loope
icebp
pop
subb
gs
add
call
leave
cli
dec
ss
adc
ss
pop
xor
sub
sub
xlat
push
dec
das
mov
add
pop
jne
cmp
cmp
call
test
xor
std
mov
or
int3
mov
add
popf
addr16
es
ds
imul
push
mov
cmc
mov
movsb
lds
sbb
xchg
jg
mov
loopne
dec
pop
fdivrs
adc
daa
sbb
sbb
testl
ret
stos
xor
jnp
ret
adc
sahf
cltd
les
mov
jge
arpl
cmpsb
sub
xor
or
mov
mov
aam
jmp
inc
je
shll
inc
cmp
jmp
fmul
mov
or
movl
mov
fnstenv
pop
flds
fwait
mov
add
push
mov
lock
push
les
dec
pop
mov
jmp
adc
inc
test
lds
in
cmp
rcr
movsb
popa
push
sub
cmpsl
iret
cmp
sbb
clc
pop
sbb
movsl
or
ret
add
mov
jo
lods
ret
int
mov
movsl
out
sub
mov
and
fwait
lret
adc
dec
aad
xchg
push
mov
lods
test
inc
cli
aam
jecxz
cmp
fs
fidivrs
fisubs
int
fs
or
das
in
cmp
dec
outsl
scas
pop
in
loopne
es
push
arpl
mov
pop
rorl
jg
popa
mov
xbegin
sti
xchg
xor
rcrb
inc
jae
and
mov
loopne
iret
push
jle
lret
sbb
pop
push
sub
ljmp
fisubs
dec
popf
pushf
lcall
fimuls
movsb
ss
mov
push
sbb
adc
push
stos
roll
hlt
push
adc
test
xchg
lock
movsb
mov
pusha
int3
mov
out
mov
pop
add
push
fwait
fwait
sti
xchg
test
jno
adc
and
ja
out
or
test
push
jo
out
mov
mov
insb
je
bound
rcrb
ficomps
fsubs
clc
je
jo
sub
imul
out
xchg
inc
and
mov
outsb
mov
mov
and
in
push
mov
movsb
pop
iret
dec
lds
xchg
lods
dec
jne
cltd
xchg
push
test
notl
mov
ljmp
push
sub
add
fnstenv
pusha
xchg
or
es
cmc
out
mov
out
in
movsb
divl
popw
inc
lods
or
imul
icebp
leave
movsl
sti
dec
scas
or
adc
pop
xchg
and
dec
mov
mov
inc
incb
fcomps
dec
cmpl
shll
mov
and
loop
outsb
xchg
push
push
jg
mov
mov
aad
sahf
lret
fisubs
sahf
pop
dec
dec
fs
pop
lahf
push
mov
faddl
test
xor
xchg
dec
inc
pop
lcall
fistpl
xchg
sar
stc
xlat
jns
in
or
pop
ljmp
imul
outsl
addr16
es
mov
orb
xchg
mov
inc
stc
int3
cmp
jp
std
pop
push
jmp
cmp
or
and
pushf
test
lret
push
loopne
pushf
mov
dec
inc
cwtl
ljmp
and
inc
lea
js
and
and
movswl
loop
insb
jo
aad
dec
xchg
xchg
mov
jns
xor
adc
mov
daa
and
lds
push
push
insl
sub
cwtl
cmpb
lret
cld
push
in
mov
std
or
cmp
test
mov
rol
out
das
cs
cmpsb
mov
adc
jg
and
inc
lds
mov
hlt
jno
jg
dec
maxps
cmpsb
sub
jmp
xchg
out
lods
ds
sub
mov
popf
push
scas
dec
leave
inc
add
lahf
push
cmovns
jle
loope
out
mov
ss
sbbb
pslld
cmp
push
xor
inc
mov
and
mov
scas
divb
sbb
pop
xchg
inc
mov
inc
insb
and
inc
mov
push
stc
inc
jge
dec
jp
mov
sub
cmp
pop
pop
leave
orl
xchg
push
mov
xchg
decb
pop
mov
push
mov
mov
adc
repnz
sub
mov
dec
mov
mov
stos
ret
add
pop
sbb
stc
push
add
imul
cmpsl
inc
pusha
mov
mov
jmp
inc
xlat
pop
pop
stc
mov
push
pop
por
dec
js
incb
rorb
sarb
stc
mov
mov
pop
iret
jecxz
mov
push
xchg
adc
leave
mov
sbb
inc
add
push
sysexit
or
test
shl
repz
xchg
shrl
jnp
or
lret
fisttpll
mov
mov
scas
movsb
fwait
imul
xor
sahf
popf
in
shrb
jge
fdivrl
xor
add
imul
repnz
xor
cmp
sbb
test
ds
in
jg
lods
xor
sub
inc
xor
lods
pusha
aaa
fwait
leave
xchg
lret
fsubrs
call
into
repnz
add
lea
xchg
sbb
adcb
inc
movsl
inc
ja
mov
adc
lods
jae
add
mov
in
test
mov
pop
mov
pop
sbb
mov
loope
mov
mov
cmp
mov
push
jecxz
call
inc
jle
xor
aam
jle
jno
add
out
xchg
test
sbb
rol
pop
addr16
xchg
and
js
daa
xor
xchg
add
cli
mov
cld
cmp
stos
imul
pop
fisubl
cltd
and
iret
orl
mov
dec
add
je
clc
push
or
sub
mov
fidivl
inc
inc
pop
popa
ret
cld
pop
cmp
in
popa
mov
adc
test
daa
adc
dec
out
fcomps
out
loop
xchg
call
or
mov
jecxz
push
sbb
aas
out
rolb
add
into
adc
test
faddl
sub
mov
inc
not
out
cld
movsb
lock
xchg
fmul
shr
sbbb
cmc
dec
aas
sub
mov
push
adc
dec
in
and
fmuls
lcall
inc
or
push
pop
popa
dec
mov
fsubr
aad
pop
test
int
xchg
sbb
arpl
sbb
mov
push
call
xchg
push
stos
mov
pop
cmp
mov
negl
shll
cmp
in
outsb
pop
xchg
decl
fisubs
fldcw
jmp
hlt
dec
pop
fs
pop
lret
inc
xchg
fidivl
mov
jge
or
sub
nop
inc
push
loopne
sbb
mov
sbbb
mov
ds
mov
aam
loope
lds
xlat
or
in
iret
dec
add
f2xm1
lds
fistl
cmp
fmulp
ljmp
jb
cmc
push
lea
sqrtps
aas
mov
insb
inc
dec
stos
fisttpll
es
rcl
stc
add
ds
mov
push
fs
das
clc
dec
mov
mov
adc
scas
xor
pop
or
test
cmpsb
hlt
in
mov
or
adc
cld
pop
addb
imul
dec
test
mov
mov
mov
dec
push
dec
jmp
aad
lock
outsl
adc
rorb
dec
fidivl
sub
and
mov
push
lods
fstps
add
test
lods
out
pop
and
sbb
jbe
out
ss
xchg
sub
push
aas
jecxz
cli
pop
ror
repz
mov
sahf
jno
mov
fnstsw
cld
mov
mov
cltd
mov
ss
mov
adc
subl
enter
loopne
and
pushf
mov
sub
push
mov
dec
jl
mov
cli
and
xor
aas
scas
sub
push
cmp
iret
sbb
mov
repnz
xchg
lret
test
mov
cmpsl
fwait
mov
ss
jns
adc
cli
std
push
test
mov
test
enter
repz
xchg
ret
inc
mull
adc
rclb
test
ret
out
mov
in
mov
call
out
fisttpl
jmp
fdivs
ja
dec
int
fnstsw
xchg
sbb
mov
mov
mov
cmp
dec
aas
cmpsl
cli
dec
test
dec
xor
sbb
lock
fidivrl
lea
xor
push
stos
jae
push
push
push
mov
dec
and
and
ret
mov
pop
movsb
sub
mov
add
mov
jp
hlt
adcb
mov
cmp
mov
push
cld
leave
rcrl
lods
sub
sahf
js
fwait
es
xor
pop
scas
ljmp
outsb
xchg
imul
rcr
std
push
dec
pushf
lcall
imul
xchg
fisubl
or
push
data16
imul
or
jne
inc
fsubp
mov
les
push
xchg
nop
insb
ret
lods
fs
je
pop
mov
push
mov
mov
sub
dec
add
lock
repz
adc
adc
out
mov
cmc
jmp
xchg
enter
dec
scas
aaa
cmp
bnd
aam
and
jmp
inc
adc
in
clc
test
bound
mov
stos
aad
fnsave
or
test
push
test
jl
and
mov
xchg
inc
and
in
xor
jb
dec
out
in
fcmovbe
and
sub
mov
ficoms
jne
sub
rclb
out
or
pop
aas
add
mov
fs
xor
push
mov
mov
idiv
mov
test
xchg
addl
sbb
push
in
add
scas
cmpsl
mov
adc
stc
mov
pop
mov
mov
mov
jp
lock
or
cmp
jg
push
pop
add
je
shlb
in
push
xchg
hlt
adc
nop
push
mov
daa
lret
xor
xor
aad
lock
dec
stc
mov
mov
int3
xchg
push
jecxz
add
leave
ficomps
add
int
inc
fdivrl
fstpl
adc
arpl
mov
into
mov
push
fmuls
push
push
jge
add
ljmp
mov
mov
lret
push
ds
push
xchg
mov
lods
push
inc
out
push
dec
std
sbb
ss
jecxz
sti
dec
pop
add
xor
or
repnz
sub
sahf
lock
mov
addl
shll
jle
pop
mov
lcall
push
out
ret
mov
sbb
outsl
xchg
in
imul
jo
jle
scas
sub
arpl
push
pop
push
dec
sti
push
cwtl
pop
adcb
test
mov
jge
sbb
popf
das
or
fcompl
rcll
jns
outsl
in
xchg
cmc
pop
aas
or
mov
call
and
xlat
icebp
mov
aad
pop
cmpsb
call
incb
push
add
pushf
fdivr
shlb
sub
push
dec
mov
mull
xchg
cmpl
shr
pop
sbbl
ret
inc
add
pop
mov
and
adc
push
loop
push
pop
mov
pop
mov
jnp
xor
aad
clc
repnz
pop
mov
jns
cld
cmp
jb
cltd
imul
jmp
mov
ds
andl
lcall
jge
ja
xchg
test
pop
xchg
mov
fnsave
lock
iret
loop
and
and
jg
lea
sarl
mov
fsubs
lcall
loop
insb
lods
push
jecxz
pop
mov
movb
sbb
sub
lcall
mov
rol
lock
insb
jle
out
in
mov
adc
mov
in
push
mov
mull
pop
ja
fwait
and
jne
add
and
cmpl
jnp
jl
testb
arpl
inc
cli
mov
gs
das
or
bound
xchg
and
arpl
mov
outsl
lds
dec
mov
pop
ficoml
and
xchg
adc
adc
mov
mov
pslld
or
dec
les
and
sbb
fldenvs
mov
out
add
xchg
es
cmp
movsl
fwait
fs
leave
xchg
enter
clc
cwtl
jbe
notb
leave
pop
jae
sub
icebp
push
pop
je
rep
test
ljmp
rclb
fprem
pop
and
lods
add
mov
and
jb
ss
jbe
cld
pop
adc
cmp
daa
cmp
mov
xchg
adcb
ficomps
inc
inc
xchg
inc
or
sahf
inc
lock
mov
sahf
jecxz
inc
fwait
imul
test
sbb
test
ss
popa
jae
and
dec
movsb
cmp
aam
add
icebp
push
sahf
int3
scas
jmp
push
je
or
mov
lret
pop
mov
aaa
or
cs
into
addr16
mov
stos
popf
adc
xchg
pop
mov
gs
cmc
dec
insl
pop
idivb
iret
stos
hlt
add
dec
je
sub
xchg
mov
lret
pop
mov
add
ret
outsb
dec
xor
or
roll
leave
outsb
out
ds
mov
lahf
iret
mov
lcall
jl
add
mov
and
xor
in
stc
pop
inc
fsubs
and
mov
jbe
fsubs
aas
faddl
js
cld
ret
cmpxchg
les
inc
faddp
mov
lods
and
and
arpl
cwtl
mov
lods
in
test
push
jge
outsl
push
cld
lahf
sbb
mov
jae
loope
push
stos
int
jb
lret
sarl
loopne
mov
pop
and
gs
xchg
cmp
push
sub
js
push
jae
testb
mov
pop
movsb
mov
mov
mull
bnd
frstor
mov
cs
mov
mov
cmpl
push
movb
mov
repnz
in
adc
jnp
xor
popf
aaa
xor
mov
push
ret
scas
hlt
pop
ds
xor
shll
push
xor
push
xchg
push
pop
icebp
jae
jne
inc
cmpsl
ret
imul
jne
daa
cli
shl
jmp
lahf
fwait
enter
mov
push
into
sub
xor
testl
push
mov
inc
arpl
mov
sub
xchg
ljmp
scas
pop
mov
push
scas
mov
mov
daa
push
sahf
test
outsl
enter
add
and
sbb
repz
lcall
push
nop
in
lock
sbb
pusha
pop
in
and
sbbl
loopne
lret
test
push
pop
adc
adc
pushw
in
cmp
adc
mov
mov
loopne
test
fs
pusha
cltd
dec
inc
addl
shrb
stos
and
pop
mov
dec
cmpl
rcrb
inc
movsb
jecxz
fwait
enter
and
cmp
xchg
das
mov
cwtl
test
pop
jne
inc
inc
xchg
ret
stos
mov
dec
jbe
push
sar
xchg
insl
ss
mov
cmp
xlat
orb
addr16
mov
mov
jmp
mov
adc
bound
daa
movsl
sbb
pop
daa
or
jecxz
xchg
into
xchg
jno
invd
add
mov
sbb
and
push
ror
imul
test
jns
push
js
clc
fwait
in
jo
shl
jne
pop
or
mov
add
scas
push
cltd
sbb
dec
sbb
jns
cld
inc
jg
ljmp
mov
sbb
mov
sbb
pop
push
jmp
mov
mov
dec
sbb
imul
aad
and
sub
and
movsl
fwait
outsb
jle
jl
scas
cmpb
jae
shrb
mov
sub
cmp
add
js
sub
sbb
fbstp
adc
xlat
ret
and
test
sub
sub
fisttpl
jbe
std
sub
mov
aas
mov
push
push
imul
cmp
das
jl
xor
adc
and
lods
adc
adc
cmp
jae
push
in
lods
mov
push
or
xchg
outsb
adc
inc
mov
sub
add
cmp
mov
jle
sarb
add
dec
xchg
xchg
jle
dec
push
mov
adc
dec
mov
mov
jno
rclb
adc
gs
icebp
idivb
ja
faddl
call
mov
fnstenv
or
push
jecxz
pop
out
mov
sub
mov
js
or
adc
mov
std
lret
jb
leave
popa
out
aam
movsb
push
sti
dec
scas
xor
xor
dec
sub
call
pusha
insb
test
sub
lds
fmuls
mov
inc
ret
cmpb
mov
cmp
mov
add
mov
pop
sbb
jecxz
jle
or
in
call
add
xchg
out
xchg
mov
movsb
push
and
inc
cmp
int3
jge
ret
aas
lahf
leave
imul
cld
sbb
leave
popa
data16
roll
sbb
pushf
mov
dec
cmp
mov
mov
scas
insb
jg
jns
push
arpl
rclb
pusha
test
pop
and
mov
mov
out
cmpsl
add
ret
aad
sbb
jg
lods
cltd
repz
sbbb
pop
insl
aas
das
in
lcall
and
fs
xor
add
push
xchg
out
dec
xchg
flds
or
mov
fnstcw
jg
sub
and
push
jp
mov
mov
pop
test
xchg
mov
jge
shl
popa
lea
pop
fcoms
inc
test
sbb
fisttpll
jns
jno
test
push
mov
mov
inc
dec
dec
inc
or
and
mov
adc
mov
lret
rep
test
add
aad
pop
cmp
inc
lock
add
jecxz
mov
shll
mov
xlat
fcomps
cs
xchg
add
fsubs
inc
ret
fwait
add
jnp
in
shl
nop
rorl
fisubl
je
mov
push
jmp
sub
adc
lods
aas
or
out
cltd
test
loop
repz
jbe
in
mov
lock
xor
fnstsw
xor
dec
sub
sbb
test
cli
ret
cmp
xchg
movsl
push
pop
xchg
bound
icebp
icebp
cltd
shrb
dec
push
pushf
loopne
pmulhw
pop
mov
imul
mov
mov
mov
arpl
test
cmp
lret
mov
imul
mov
push
sbb
call
sahf
and
or
fisubrs
nop
clc
out
test
out
dec
sub
cld
inc
mov
imul
jo
insb
das
icebp
jmp
cmpsl
adc
loop
jle
fdivr
push
leave
jmp
dec
jno
push
adc
cmpsl
xchg
icebp
pop
jmp
cltd
jbe
or
ds
faddl
fnstenv
mov
mov
jnp
and
mov
imul
sub
cs
add
push
jae
fldcw
push
movsl
pusha
inc
clc
outsb
add
lret
inc
outsl
push
cmp
fisubs
push
call
xor
mov
jge
in
test
add
cmp
popf
jmp
or
mov
shrb
clc
cmp
lds
jno
loope
cmp
dec
cs
mov
test
adc
add
lds
push
out
sbb
jo
xchg
or
ss
jnp
fisubrl
cmp
lret
xor
test
xlat
dec
jns
inc
je
jns
add
out
add
sti
movsl
add
sbb
fcomps
scas
jne
cs
mov
dec
adc
pop
shlb
pop
jae
pop
cli
mov
mov
aad
adc
pop
cmpsb
xchg
lods
jns
lods
xor
fwait
mov
fcmovnb
in
mov
xor
bound
jb
sbb
test
jno
loopne
adc
lock
rcrl
xor
jl
inc
xor
jno
mov
mov
adc
repnz
push
sub
shlb
scas
add
stc
cs
adc
sahf
lret
dec
mov
or
sti
jp
xchg
sbb
test
xlat
mov
pop
ficoml
leave
xor
ds
loop
mov
repz
mov
addr16
mov
pop
je
mov
cmpsb
dec
pop
ds
adc
mov
pushf
cwtl
pop
xor
dec
ds
and
fistl
stc
mov
test
pop
gs
and
dec
call
xchg
push
mov
iret
mov
push
out
sbb
in
fucomip
pop
hlt
hlt
cwtl
mov
mov
aad
adcl
dec
push
repz
sahf
ja
mov
mov
adc
sti
movsl
pop
pop
add
arpl
test
movsb
pop
sub
loop
adc
cmp
adc
leave
daa
xor
daa
hlt
pop
mov
cmp
enter
jecxz
mov
push
loop
ja,pn
frstor
adcl
fxrstor
mov
test
mov
add
mov
fiaddl
push
test
sbb
nop
mov
sub
iret
jbe
fidivs
je
test
js
cs
xchg
aam
mulb
jo
mov
inc
sub
push
xchg
inc
jp
mov
add
mov
lret
push
lods
and
push
loop
adc
pop
sbb
push
add
push
push
sub
int3
test
aad
cld
inc
fisubs
aas
loop
add
das
idivl
xchg
add
repnz
int3
outsl
jmp
jl
cmp
adcb
pop
xchg
test
xor
test
sbb
push
jae
mov
or
cmp
mov
outsb
sbbl
sbb
sbb
cmp
xor
inc
sub
cmp
sbb
push
andl
iret
mov
xchg
pop
aas
lcall
mov
jbe
shll
sarb
add
push
and
rorl
scas
pop
mov
lock
xchg
dec
mov
sub
pop
lods
inc
outsl
test
mov
aas
push
jbe
lock
aad
add
xchg
cmp
fsubl
icebp
aad
jl
sbb
xor
call
dec
mov
mov
sahf
faddp
adc
mov
mov
int3
clc
cmp
push
aam
cmp
mov
mov
imul
push
cwtl
es
sbb
jg
sbb
repz
xchg
mov
ficomps
cmpb
jecxz,pt
jg
xor
inc
mov
push
push
mov
scas
nop
rcrb
scas
lahf
jp
dec
mov
lret
add
cmp
cmp
movsl
in
xchg
pop
push
pop
leave
std
lods
fwait
int3
loope
mov
daa
xchg
lds
mov
cld
hlt
sub
sub
mov
rol
stos
pop
xor
cmpsl
mov
btr
inc
mov
lock
lods
mov
cmpsl
icebp
test
loopne
outsl
mov
mov
mov
jbe
fcomps
call
add
call
dec
out
ror
jle
jmp
push
adc
addr16
pop
fmul
mov
push
xor
idivb
xor
dec
shlb
xor
sbb
sbb
addl
icebp
mov
mov
push
into
shl
std
sub
mov
adc
xlat
bound
lods
test
dec
xor
mov
int3
jnp
inc
dec
fimull
gs
dec
lods
aaa
fcompl
jne
pop
imul
sbb
lahf
in
push
es
sti
adc
xbegin
and
ds
jmp
loop
inc
or
add
ret
enter
addr16
aas
push
in
test
fld
pop
fdivl
popa
mov
andb
fadd
fildl
or
punpckldq
cmpsl
lods
cltd
push
sbb
push
pop
jne
adc
gs
jp
das
shl
cltd
scas
jo
lods
cmpsb
and
lahf
dec
lds
lcall
popf
andl
pop
hlt
and
jo
cmp
loop
inc
shlb
push
std
pusha
inc
ljmp
repz
mov
fs
mov
or
arpl
jo
xchg
shlb
dec
pop
nop
cli
jle
jbe
jns
or
and
les
push
xchg
out
pushf
jge
push
jae
outsb
loope
ror
dec
sub
movsl
or
in
int3
inc
adc
sbb
sbb
inc
cmp
xchg
mov
daa
mov
imulb
mov
into
movsl
loop
or
pop
adc
sbb
sbbb
stos
sub
mov
mov
jp
and
in
bound
jmp
ss
and
xchg
cwtl
add
fwait
int
and
sub
adc
int
mov
fidivrs
cmp
repnz
jecxz
imul
rcrb
or
out
jg
pushf
aam
cmp
ss
mov
dec
insl
loop
push
lock
inc
in
test
iret
xchg
cwtl
pop
out
inc
pop
out
mov
lcall
je
dec
clc
loop
pop
mov
mov
inc
inc
cwtl
fwait
xorb
xchg
pop
in
pop
add
and
rolb
add
loopne
pop
cli
push
and
sub
xchg
mov
mov
mov
insl
movsl
dec
aam
adc
aam
push
outsb
les
jl
sahf
sub
sarl
sbb
clc
ret
dec
mov
loop
loope
xor
clc
mov
aaa
dec
and
xchg
pop
es
in
je
xchg
les
or
pop
arpl
sahf
mov
xchg
dec
test
mov
sbbb
xchg
push
mov
pop
jecxz
sub
sarl
jns
ss
cli
gs
and
xchg
push
xchg
out
cmc
popf
fcomps
mov
jns
mov
xor
shl
pop
cmp
ja
push
xlat
xchg
add
repnz
jbe
mov
cltd
dec
psrlq
mov
sbb
push
addr16
js
adc
lret
xor
gs
jg
sub
xor
lret
add
movsb
out
lcall
pop
push
dec
cmp
rolb
push
dec
inc
add
inc
movsl
mov
xchg
pop
mul
sub
sub
lea
mov
xor
repz
lods
adc
int
in
pushf
xor
sbb
and
and
lea
push
jne
das
sbb
out
cmp
sbb
arpl
fsubs
cmpsl
clc
jmp
inc
mov
in
call
add
xchg
jbe
fdivrs
ret
aad
push
xor
sbb
cmp
in
add
pop
mov
dec
sub
push
jle
fisubl
cs
cltd
icebp
push
fcoms
dec
repz
into
mov
int3
js
cmp
into
sub
push
ss
dec
notb
sub
lahf
mov
cli
inc
inc
pop
aam
ja
and
jo
sub
scas
dec
cmpb
adc
clc
lock
clc
adc
loopne
lea
lret
cli
fists
ja
aaa
and
addr16
push
jno
outsl
scas
test
js
jmp
xchg
scas
mov
pop
scas
push
push
shrl
jp
add
daa
ficoms
sti
jle
pop
insl
or
xchg
inc
adc
jb
xlat
fs
mov
lret
das
dec
lsl
fisubl
aaa
int
adc
push
es
or
and
imul
sub
icebp
ja
mov
xchg
in
push
jb
stc
mov
incb
sub
inc
icebp
inc
xchg
jp
xor
mov
sbb
or
adc
loop
lods
cmp
jno
std
sbb
mov
cltd
pop
or
sahf
xchg
sbb
xor
jno
push
adcb
and
push
adc
push
pop
push
enter
adc
cmpsl
pop
pop
test
jne
rorl
cs
addl
adc
sarl
mov
loope
int3
xchg
sbb
mov
in
cld
das
in
xchg
xchg
lret
push
shrd
fstl
or
jmp
mov
pop
inc
pop
pop
mov
inc
pop
leave
sbb
inc
imull
iret
push
sahf
sbb
jne
out
xlat
jb
out
xor
push
dec
shr
mov
dec
scas
jp
fmuls
enter
roll
mov
insb
xor
push
pop
cmc
or
loope
pop
sbb
scas
push
sti
test
mov
ja,pt
adc
jg
dec
clc
lret
push
clc
ljmp
push
insl
xor
movsl
and
add
push
or
jno
hlt
add
insl
mov
add
cmpl
fs
stos
jns
sbb
aam
and
xor
mov
inc
mov
cmp
adc
sarl
lcall
adc
pop
sub
cmp
inc
mov
loope
std
xchg
clc
addb
mov
xor
sahf
dec
jnp
cmp
pushf
fs
dec
ror
daa
mov
loope
ffree
bound
in
outsb
loope
mov
sub
sub
and
adc
add
out
mov
test
test
dec
xor
or
scas
ffreep
and
loop
mov
sarl
xchg
sahf
dec
mov
mov
push
js
sbb
call
pop
flds
outsb
xchg
xchg
xchg
lods
mov
fs
mov
mov
adc
loop
jmp
push
movsl
hlt
mov
fs
jge
mov
mov
mov
stos
mov
lock
mov
mov
cltd
dec
lods
fiadds
adc
xor
imul
mov
outsb
adc
adc
mov
mov
les
xor
popw
cmpsb
rcll
mov
cmp
iret
cmpsl
sahf
lret
addl
dec
jmp
mov
push
fsubl
jmp
pushf
push
dec
js
cmp
scas
aad
xchg
fidivl
xor
aas
in
es
push
xlat
sbbl
xor
stos
dec
jbe
not
adc
pop
mov
xchg
ret
icebp
imul
mov
push
lahf
jg
add
imul
fists
and
adc
int
add
mov
dec
arpl
xchg
ss
data16
pop
mov
pop
adc
sub
mov
jb
cli
in
std
sbb
sti
fimull
shlb
loopne
xor
jmp
sarl
sti
or
pop
cmp
pop
lret
pop
and
mov
out
int3
inc
ss
jne
add
cmpsb
push
sbb
push
in
movsb
repz
push
out
or
ds
das
sub
jno
test
imull
xor
les
adc
jbe
dec
mov
int
mov
adc
aam
js
jecxz
mov
push
pop
inc
lock
jg
sub
out
stc
das
mov
adc
mov
xchg
pop
mov
xor
sub
mov
xchg
pop
sbb
push
ds
lret
nop
shll
stos
ret
lret
call
lods
pop
sub
xor
pusha
xlat
and
pop
inc
pushf
xor
test
hlt
xchg
cwtl
jns
cmc
ror
sbb
adc
jbe
insl
push
xor
mov
sub
mov
cmp
xor
push
repz
cmp
mov
ret
mov
mov
ds
popf
js
xchg
adc
pop
pop
mov
addr16
mov
divl
mov
lods
shlb
ficomps
mov
test
int
and
rsm
sub
or
or
aad
mov
push
xor
outsl
addr16
stc
cmpsl
mov
inc
loope
rcll
cltd
ret
jmp
ljmp
mov
inc
repnz
fcmovb
fldt
ss
lcall
andl
push
scas
push
xorb
mov
sub
fisubrl
ja
nop
arpl
mov
cltd
mov
out
adc
cmp
jmp
push
mov
jnp
push
inc
push
movl
das
sbb
testb
aas
fcoms
iret
repnz
push
mov
jbe
test
mov
loope
mov
sub
cmp
adc
xlat
scas
push
pop
data16
idiv
xlat
lret
cld
mulb
ret
stc
dec
inc
fwait
or
jno
xchg
sbb
shrl
fstpl
gs
into
xor
mov
mov
mov
hlt
mov
pop
xchg
mov
jg
push
mov
adc
pop
in
cld
std
adc
out
pop
es
dec
push
out
bound
jno
loopne
pop
or
addr16
int3
xor
mov
xor
clc
sub
mov
push
imul
out
jp
mov
and
add
sbb
or
js
adc
daa
loop
call
das
enter
pop
test
ds
push
addr16
and
mov
adc
insl
push
mov
jmp
ficompl
mov
xor
inc
ret
xchg
arpl
lods
inc
ret
mov
hlt
sbb
pop
sti
xchg
add
in
icebp
dec
adc
dec
out
jne
cli
arpl
movsl
pop
fbstp
pop
loope
push
movsl
pop
popf
cmpsb
ja
dec
push
mov
dec
jmp
fsubrp
test
xor
cli
clc
inc
inc
fwait
push
jmp
lods
test
pop
and
icebp
insl
lret
push
arpl
stos
sbb
cmp
mov
pop
in
aam
rcr
push
aaa
mov
std
fisubrl
mov
cmp
scas
inc
roll
test
xor
jle
cs
sub
outsl
fucom
add
sub
es
mov
jl
mov
dec
push
pop
out
mov
or
push
in
inc
mov
cwtl
inc
pop
dec
les
fsubs
jmp
lea
pop
mov
out
or
add
dec
sub
scas
clc
test
sbb
add
mov
xor
dec
xor
and
or
cmpsl
push
rorb
fsubp
and
push
xor
mov
pop
sbb
xor
dec
in
test
push
mov
mov
mov
out
fcomip
sub
aad
mov
push
push
test
jbe
fildl
rclb
cmc
mov
jle
imul
enter
and
cld
and
xchg
stos
inc
jne
icebp
js
dec
popa
xor
inc
dec
jge
fwait
mov
adc
lcall
out
nop
cmp
gs
fsubrs
lret
mov
lods
cmpsb
or
lds
lret
aas
ss
flds
mov
xchg
hlt
ficompl
mov
jne
inc
insb
ret
or
fiaddl
sub
out
mov
in
jge
sub
mov
adc
mov
loopne
jae,pt
hlt
loop
notb
movsl
adc
cmp
jmp
push
sub
push
ljmp
pop
into
sahf
cmp
jne
inc
jae
xor
rcrl
add
test
inc
and
fstpl
pop
jo
roll
sbb
dec
cld
mov
push
adc
push
push
mov
scas
adcl
bswap
mov
mov
pop
test
into
or
sub
subl
in
mov
inc
pop
insb
xchg
xchg
mov
pop
std
pop
daa
mov
call
cld
inc
js
in
pmaddwd
push
inc
mov
xchg
shlb
add
outsb
ljmp
and
jge
ljmp
push
pop
sub
xchg
pop
out
jnp
scas
add
mov
sbb
insl
push
scas
sti
pop
and
bnd
pop
insl
inc
and
inc
pop
and
sbb
inc
pop
pop
inc
push
gs
clc
loope
lret
roll
bound
xchg
ljmp
jmp
lea
scas
cmpb
push
dec
rolb
xor
dec
test
mov
jecxz
xchg
and
xchg
jmp
xchg
sbb
cmc
sbb
mov
mov
cmpsb
dec
in
dec
lahf
das
fcmovnu
push
push
dec
lret
nop
mov
adc
cld
cmpsl
jns
jb
rcrl
jns
pusha
into
xchg
push
ljmp
test
adcl
cmpsl
pop
das
ds
push
lahf
or
aam
and
push
scas
arpl
std
stos
iret
sub
fdivrs
pop
adc
mov
jecxz,pn
scas
push
scas
and
repz
pop
out
cmp
roll
mov
fucomip
pop
add
fbstp
icebp
movsb
jle
fdivrl
push
jb
add
out
shll
inc
add
mov
lock
mov
sarb
pop
mov
rcl
mov
and
lock
outsl
add
test
jns
orb
mov
iret
mov
js
xrelease
addb
test
lods
sbb
or
cmc
push
mov
xchg
std
jecxz
in
jb
int3
pop
inc
jmp
jl
hlt
xor
pop
movsl
mov
cmc
call
ds
xor
sahf
jge
pop
aad
jne
push
cmp
rcr
ret
mov
or
adc
add
jno
adc
sub
aaa
fiaddl
jl
push
ret
jno
sbbl
add
call
push
out
add
fldl
pop
pop
pop
sub
imul
daa
mov
dec
adc
fs
testl
mov
and
inc
mov
pop
push
jo
cs
fimuls
inc
lahf
pushf
and
cli
sbb
xchg
sbb
fistps
mov
add
sub
xchg
lods
std
das
movsb
xchg
xchg
sarb
into
push
or
outsl
lds
addl
inc
push
aaa
xchg
dec
cmp
lahf
xchg
clc
cli
pop
push
or
lods
int
iret
mov
int
and
das
and
ss
add
repnz
mov
and
mov
mov
mov
adc
and
xchg
xchg
pop
lret
in
or
pop
sarl
pop
lahf
jno
aam
ljmp
mov
addr16
adc
xlat
lret
sub
or
and
int
jg
subl
icebp
jo
das
in
in
mov
test
addb
mov
rclb
out
pop
mov
lahf
xchg
repnz
int3
cmp
pusha
insb
int3
or
xchg
dec
pop
cli
frstor
in
xor
sbb
cld
cmp
ret
rorb
push
pop
in
sub
mov
cmp
xchg
sahf
lock
xchg
lock
lret
mov
mov
es
loope
shll
cmpsl
sub
lds
call
andl
mov
rorb
ret
shll
inc
test
stos
or
arpl
sbb
or
cmp
pop
int3
xor
cmpsb
addr16
jecxz
sbb
adc
xor
jp
insl
sahf
xor
mov
cmpsl
mov
aam
popa
lcall
sbb
add
jg
push
mov
sahf
push
cmpsb
xchg
and
lret
pop
or
sbb
jmp
fcmovnb
int3
sbb
or
dec
es
fiaddl
fidivl
push
xchg
push
pusha
inc
sub
stc
xchg
in
jae
cld
mov
stc
leave
ret
sbb
lret
fstpt
or
xchg
pop
xor
push
outsb
push
je
fwait
test
test
in
lahf
jno
cmp
inc
lcall
stos
xchg
mov
mov
jge
lea
sbb
inc
push
or
stc
add
sub
mov
jmp
imul
pushf
mov
xchg
bound
je
enter
mov
inc
lret
fldenv
rcr
aaa
shlb
mov
pop
dec
jbe
insl
and
jnp
cmp
inc
pop
lahf
dec
jecxz
js
sahf
add
je
into
and
jns
mov
jo
in
dec
hlt
pop
aam
loopne
out
arpl
insl
std
test
push
jl
xchg
dec
ja
dec
shrb
inc
mov
sbb
add
push
jno
or
and
cmp
dec
pushf
cwtl
fisubrs
push
and
hlt
shrb
jmp
pop
push
test
and
sbb
adc
in
imul
sbb
and
and
jbe
mov
sbbb
mov
sub
outsb
adc
fwait
jle
fidivl
loop
sbb
mov
repnz
sub
adc
adc
and
xor
sub
add
mov
push
xchg
out
outsl
adc
sahf
dec
pcmpgtd
jns
mov
movsl
pop
mov
or
scas
imul
adc
ja
push
fisubs
gs
mov
add
mov
jo
loopne
push
loopne
add
xor
push
or
jecxz
sti
xor
sbb
dec
jo
pushf
add
flds
lods
addr16
mov
addr16
sub
pusha
sub
lcall
xlat
mov
xchg
stos
dec
adc
cmpsb
mov
jg
aad
je
and
ret
loop
sbb
mov
mov
mov
lret
outsl
xor
cmp
xor
nop
cmp
and
fmull
movsb
mov
sub
popa
imul
adc
ds
stc
mov
adc
data16
pusha
fisttpll
je
dec
mov
pop
cmc
dec
test
and
jg
into
pop
repnz
jno
mov
mov
jno
xchg
pusha
dec
in
jbe
jae
inc
out
not
cmp
jl
push
jne
xchg
pushf
ss
xor
xbegin
les
pop
popa
cmp
int
push
push
lcall
negb
iret
jmp
mov
xchg
lock
lcall
into
pop
test
adc
adc
pop
shl
xor
fwait
mov
mov
cmpb
and
add
dec
test
lods
xor
sbb
imul
clc
add
test
test
adc
xlat
jne
cmp
aaa
or
insl
xchg
push
dec
lods
std
mov
test
rolb
fstl
subb
cmp
add
fcmovnu
fstps
test
jno
aam
sti
push
dec
mov
mov
sbb
pop
push
and
inc
incb
jle
dec
cmc
dec
pop
adc
es
mov
idivb
xor
pushf
fldt
jbe
fmuls
push
daa
jl
aam
cmp
xor
mov
mov
cmp
mov
aam
or
adc
out
inc
adc
mov
mov
or
mov
aas
xor
dec
imul
inc
std
cld
shrl
int
aas
pop
xor
scas
xor
xor
mov
sbb
or
sahf
ja
rcll
jmp
stos
xor
cltd
mov
rcl
push
dec
adc
push
cmpb
iret
add
jp
mov
in
jp
nop
mov
xchg
xchg
fdivl
pop
add
jmp
lea
popf
xor
or
lds
xchg
inc
hlt
dec
push
int3
add
cmp
test
push
add
fists
cli
add
in
les
xor
ja
dec
repz
or
xchg
lock
cmp
cld
faddp
out
push
mov
insb
sbb
sbb
adc
jb
jae
scas
adc
jge
mov
adc
xor
jnp
pop
jecxz
nop
pop
mov
xor
fists
jb
inc
or
adc
das
aaa
aad
and
mov
idivl
cmp
negl
cmp
lret
stc
push
cmp
out
xchg
push
mov
inc
or
and
aas
mov
mov
jecxz
pushf
outsb
mov
cltd
inc
aas
addr16
es
or
adc
dec
outsb
jo
ds
sbb
js
cmpsl
das
into
and
sub
sbb
sub
imul
stos
mov
data16
in
aaa
push
ret
popl
push
adc
mov
div
mov
and
int
adc
daa
repz
dec
pop
js
ja
add
pushf
lahf
int
scas
mov
mov
testl
push
push
cmp
fstl
mov
cmp
cli
adc
xchg
inc
repz
mov
scas
outsl
adc
inc
or
or
scas
rolb
xchg
sahf
lock
pop
leave
mov
enter
pop
xlat
jmp
test
daa
mov
mov
scas
or
ret
popa
sarb
aaa
js
inc
and
xor
pop
and
pop
lods
mov
dec
mov
mov
test
addr16
pusha
and
sub
movsb
mov
jb
add
mov
js
lcall
fdivrl
popa
cmp
add
push
fmull
cmp
pusha
repnz
hlt
sarb
mov
iret
push
sbb
outsb
fs
lods
push
jle
icebp
push
add
shr
cli
jbe
ss
mov
daa
jecxz
and
data16
ljmp
push
mov
add
xor
mov
pusha
fistpl
std
push
aas
sub
push
and
test
popa
roll
lock
rol
fistps
in
loopne
xor
xchg
adc
scas
xor
mov
adc
fistl
loope
bound
sahf
cli
std
push
lret
ljmp
in
into
add
add
scas
stos
or
es
ficompl
pop
add
add
arpl
ds
pop
int
xlat
push
jle
int3
leave
call
imul
mov
xchg
lea
test
push
inc
xor
add
orb
or
clc
out
cmpsl
je
outsl
in
icebp
mov
cmovbe
popa
mov
pop
jne
aaa
cmpl
inc
push
inc
sbb
sbbb
sub
pminub
jle
fmuls
adc
ljmp
dec
cmp
int3
add
int
dec
fadds
dec
loopne
cmp
mov
xchg
shrl
xor
inc
mov
ss
or
out
lods
add
push
sub
dec
int3
xor
add
dec
add
and
jo
jge
lods
mov
dec
hlt
and
imul
out
ljmp
lahf
and
leave
shrl
fcoms
int
int
cld
in
jg
add
cs
jnp
pop
stos
sti
fmuls
adcb
xchg
and
mov
push
in
push
mov
and
dec
into
push
mov
ret
adc
lret
popa
es
jns
xchg
repnz
and
dec
add
push
fwait
xchg
pop
mov
fnstsw
ds
mov
inc
jl
sub
inc
adc
cmp
or
aaa
and
pop
aam
inc
stos
repnz
dec
lret
or
out
push
outsl
test
inc
xchg
lock
ljmp
mov
fwait
or
pusha
xchg
das
ss
ljmp
jmp
fmuls
test
out
mov
adc
outsb
sub
js
bound
.byte
cmpsl
adc
cmp
nop
add
add
cmpsl
dec
hlt
adc
pushf
mov
push
loope
jge
lock
test
add
js
gs
jo
out
stos
inc
and
in
cld
insb
popa
push
fwait
mov
and
mov
inc
mov
imul
aaa
rorl
dec
pop
leave
inc
les
push
jg
mov
std
ds
add
into
scas
pop
sahf
pop
cltd
mov
fdivs
cmpb
push
fs
add
mov
pop
aad
jae
or
outsb
mov
rclb
lret
test
ret
cld
ds
push
adc
dec
lahf
dec
cmp
outsb
add
inc
sbb
push
arpl
movsb
into
pop
aad
data16
adc
inc
dec
dec
or
mov
dec
addr16
enter
cwtl
stc
ds
call
push
mov
mov
mov
push
pop
cmpsb
out
cmp
mov
mov
ficompl
iret
sbb
mov
xor
jg
and
xor
push
lods
pop
out
out
mov
push
std
inc
iret
or
loop
fyl2x
xlat
clc
fnsave
scas
ds
xlat
jl,pt
in
dec
idivl
mov
out
push
in
frndint
xor
orl
fnstcw
push
or
testb
pop
cmpsl
dec
ljmp
ljmp
mov
call
inc
test
rorb
cmp
or
insb
jecxz
xor
add
lret
jg
insl
fwait
lcall
arpl
es
cmc
and
cwtl
mov
lods
or
and
push
divl
sbb
lret
movsb
fdivrl
mov
cmpsl
adc
jae
sahf
adc
jp
jne
aas
mov
xchg
pop
test
sbbl
je
icebp
or
.byte
.byte
add
add
in
jns
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
in
jns
add
add
add
add
mov
add
addb
add
in
jns
add
add
add
add
add
add
enter
add
add
loopne
add
in
jns
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
in
jns
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
in
jns
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
in
jns
add
add
add
add
mov
add
addb
add
in
jns
add
add
add
add
add
add
addb
add
add
in
jns
add
add
add
add
add
add
cwtl
add
add
add
add
xlat
jns
add
add
add
add
add
add
test
add
add
add
in
jns
add
add
add
add
add
add
mov
add
add
xlat
jns
add
add
add
add
add
add
enter
add
add
in
jns
add
add
add
add
add
add
fadds
add
add
add
xlat
jns
add
add
add
add
add
add
call
add
add
xlat
jns
add
add
add
add
add
add
clc
add
add
add
add
xlat
jns
add
add
add
add
add
add
or
add
in
jns
add
add
add
add
add
add
sbb
add
in
jns
add
add
add
add
add
add
sub
add
in
jns
add
add
add
add
add
add
cmp
add
in
jns
add
add
add
add
add
add
dec
add
add
in
jns
add
add
add
add
add
add
pop
add
add
in
jns
add
add
add
add
add
add
push
add
add
xlat
jns
add
add
add
add
add
add
js
add
add
add
in
jns
add
add
add
add
or
add
add
add
xlat
jns
add
add
add
add
or
add
add
add
xlat
jns
add
add
add
add
or
add
add
add
xlat
jns
add
add
add
add
or
add
add
add
xlat
jns
add
add
add
add
or
add
add
add
in
jns
add
add
add
add
or
add
add
add
in
jns
add
add
add
add
or
add
add
add
in
jns
add
add
add
add
or
add
add
add
in
jns
add
add
add
add
or
add
push
add
add
add
in
jns
add
add
add
add
or
add
push
add
add
add
in
jns
add
add
add
add
or
add
push
add
add
add
in
jns
add
add
add
add
or
add
push
add
add
add
in
jns
add
add
add
add
or
add
add
add
add
in
jns
add
add
add
add
or
add
add
add
add
in
jns
add
add
add
add
add
add
push
add
add
xlat
jns
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
jo
add
call
add
add
add
add
add
sub
add
in
add
add
add
int3
stc
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
cmp
add
add
add
add
add
add
incb
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
in
add
add
add
loopne
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
or
add
add
add
add
add
add
add
add
cmc
les
add
add
add
add
add
add
add
add
in
add
add
add
inc
iret
add
and
add
in
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
in
add
add
add
jl
add
or
add
in
add
add
add
mov
add
add
add
in
add
add
add
mov
add
or
add
in
add
add
add
cwtl
iret
add
add
add
in
add
add
add
pushf
iret
add
add
add
add
add
add
add
in
add
add
add
lods
iret
add
pop
add
add
add
add
add
add
add
and
add
in
add
add
add
hlt
in
add
xor
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
inc
inc
cmp
sbb
out
jmp
push
dec
jbe
ret
lahf
enter
repz
pop
scas
repz
popa
std
pop
jle
xor
xor
imul
inc
mov
pop
out
dec
jb
imul
cmpsl
pop
scas
xorl
cmc
imul
jmp
and
adc
xchg
in
jmp
imul
pminsw
pop
add
jle
mov
outsb
mov
pop
nop
add
inc
push
ficomps
clc
mov
sub
ja
mov
fstpl
test
or
rolb
adc
pop
shl
in
xor
mov
les
sub
es
jp
jbe
pop
mov
dec
outsl
jb
xchg
in
and
loop
xchg
adc
iret
sub
sbb
dec
jl
sub
xor
mov
lret
call
rcll
jae
lcall
in
sub
call
adc
cmp
rol
mov
dec
inc
xor
cmc
xlat
push
xchg
xor
ret
adc
sub
jle
sbbb
pop
clc
cwtl
sub
test
pusha
repz
imul
insl
inc
imul
movb
add
mov
dec
iret
pop
jmp
rcrl
lret
je
sub
xchg
push
mov
sbb
xor
into
popa
mov
fcoms
rcrl
cmp
jb
into
xlat
fistps
cmp
cmpsb
not
shll
or
imul
dec
lods
and
cld
icebp
stos
fcmovne
add
es
adc
lret
mov
xor
pop
fnstsw
xchg
cmc
xchg
stc
add
fcoml
adc
sub
or
popf
popf
add
lret
inc
jle
out
addr16
xor
out
aaa
push
lods
test
cwtl
loope
xchg
mov
in
add
fsub
inc
lods
sub
mov
rcrb
test
mov
add
nop
mov
sbb
jmp
pop
mov
jle
ss
or
push
rcll
push
or
mov
cmp
inc
and
xorb
mov
jle
and
repnz
push
das
int
repz
or
push
imul
jmp
cmpsb
jl
mov
inc
addr16
inc
cmc
jmp
imul
ret
xchg
loope
pop
cwtl
imul
jno
jne
js
into
repz
in
fisubs
js
pop
cmpsb
push
xchg
loope
fadds
dec
das
push
and
bound
xchg
imul
punpcklwd
pop
pop
add
cld
fnstenv
test
cmp
out
xlat
popa
outsb
mov
mov
mov
mov
int
in
mov
stos
shll
ja
sti
fldl
pop
adcl
lods
pop
dec
mov
daa
dec
ret
pop
sub
mov
jno
fnstenv
pop
mov
cli
pushf
add
jge
dec
xchg
lret
hlt
lds
adc
and
ss
pushl
mov
es
orps
mov
mov
push
sub
mov
add
jmp
sub
lock
dec
addr16
adc
bnd
dec
popf
and
sbb
sbb
mov
push
mov
jno
lgdtl
pushf
adc
rcrb
movsb
mov
adc
iret
rorl
xor
cmc
push
jo
mov
jb
adc
and
dec
icebp
adc
and
cmp
xor
push
jns
inc
les
jecxz
dec
mov
or
cmp
mov
lea
das
lcall
iret
push
sub
stc
enter
lds
pusha
das
xlat
add
int3
adc
fstl
add
push
popf
xchg
cmp
cld
inc
pop
mov
ljmp
mov
mov
sbb
je
mov
sahf
add
arpl
ss
dec
or
rolb
mov
lea
jb
sub
mov
push
dec
aaa
inc
loope,pt
imul
lcall
add
xchg
fsts
lahf
inc
push
hlt
adc
add
jecxz
push
fwait
adc
pushf
cmp
add
out
pop
pop
jge
mulb
mov
push
cmp
push
add
cmp
out
test
testl
scas
aas
clc
shlb
clc
aam
mov
orl
into
in
and
cli
sarb
lods
cmpsl
jmp
adc
or
gs
mull
loope
push
pop
sub
xor
xchg
adc
cwtl
cmc
mov
ret
push
add
sbb
jbe
in
test
or
inc
mov
adc
inc
mov
repz
push
mov
mov
jno
setge
outsb
push
lret
inc
sbb
std
mov
inc
std
imull
inc
dec
add
pushl
sub
jle
je
cmp
inc
in
adc
jg
cwtl
mov
push
xor
mov
leave
cmp
dec
push
pop
mov
pop
cmp
cltd
sbb
or
push
mov
pop
psubd
adc
xor
push
xchg
cld
cmpsb
testl
into
dec
sub
and
fcoms
xchg
shlb
add
scas
push
hlt
lock
dec
inc
cld
lret
jnp
nop
lods
ficoml
xchg
leave
and
in
fsubrs
push
test
ljmp
scas
out
leave
mov
imul
mov
or
or
sbb
and
call
mov
push
dec
jo
add
adc
jle
arpl
mov
inc
xchg
xlat
out
cmp
int
test
sbb
pop
mov
dec
imul
loope
lea
sub
push
test
xchg
idiv
jbe
cmp
mov
and
xchg
lahf
out
jmp
lret
in
mov
cmpsl
repnz
cwtl
push
mov
das
fstps
mull
and
sbb
inc
lods
cmpsb
loope
push
arpl
mov
or
nop
aad
xchg
movsl
cmp
dec
int3
imul
or
mov
mov
jnp
adc
les
fists
in
aam
mov
cmp
dec
int3
stc
fs
leave
jbe
xchg
push
jbe
add
fucomi
pop
loop
add
out
dec
jmp
and
xchg
jnp
sub
cwtl
out
roll
add
test
outsl
add
push
push
imul
push
cmp
aaa
or
pop
xor
insb
shr
add
shll
jbe
xchg
insl
mov
push
mov
bound
inc
pop
mov
leave
and
push
aad
sub
pop
dec
loope
test
lock
cli
les
fcoms
stos
xchg
test
and
inc
negl
ret
rolb
pushf
pop
push
iret
imul
xchg
cmc
pop
jbe
mov
sub
aad
xchg
js
fwait
xchg
sub
in
out
sahf
push
mov
or
loop
and
cmp
push
mov
cmc
stos
in
pop
rcrl
mov
adc
mov
sahf
fs
xchg
or
fisubrl
fbld
cmc
and
xchg
shlb
sub
adc
xor
hlt
sahf
inc
inc
fadds
xor
inc
sub
mov
xchg
mul
add
imul
fxch
sbb
lret
mov
mov
or
into
rcrb
sbb
sbb
leave
inc
into
xor
or
and
sti
je
loop
and
ss
cltd
or
popa
scas
fsubp
cmp
pushf
je
cli
mov
stc
ljmp
fwait
rolb
and
rcrb
daa
pop
mov
stos
out
and
leave
scas
sub
cld
mov
add
pushf
ret
lret
enter
mov
jbe
mov
jbe
pop
std
movsl
xchg
inc
test
pop
mov
mov
push
sub
out
addr16
cmp
lea
icebp
lret
mov
aas
and
adc
push
lret
rcrl
outsb
cmpsb
cmp
test
sbb
test
adc
jb
aam
movsb
inc
ss
jg
fbld
mov
daa
and
out
shlb
addr16
mov
xchg
add
loop
lds
movsl
and
les
mov
mov
push
ljmp
fwait
mov
push
jp
lds
and
ret
sbb
loope
orb
icebp
fimuls
int3
mov
fs
outsl
call
test
jg
or
xor
enter
xor
sbb
or
shl
xchg
xchg
sbb
inc
jae
js
push
callw
icebp
aam
cmp
ror
scas
pop
adc
jle
cmp
push
jmp
outsb
movsl
test
mov
out
cmpsb
push
inc
sti
lcall
dec
mov
ss
inc
adcb
ret
push
div
cmpsl
ja
sarb
xchg
and
xchg
dec
xor
xorl
out
lret
adc
iret
inc
movsb
lock
scas
xchg
les
stos
movsl
adc
shlb
push
adc
sub
mov
jne
and
mov
loopne
mov
adc
out
int3
lods
cmp
arpl
insb
and
jp
mov
call
jg
leave
fs
mov
inc
adc
ljmp
mov
lret
pop
pop
call
es
xor
in
mov
sbb
push
fists
add
test
cmpps
out
cmp
and
aad
rcll
nop
ljmp
scas
cmp
inc
dec
das
mov
add
sahf
inc
test
sub
sahf
jmp
adc
in
pusha
lret
jmp
or
cmp
or
std
loopne
aaa
mov
dec
xchg
es
faddl
cli
xchg
mov
into
stos
xor
bnd
inc
fucomip
pop
mov
jb
adc
sub
push
loope
lret
maxps
shrl
push
push
adc
lret
mov
pop
shl
push
stc
add
nop
js
or
lods
push
adcb
add
pop
mul
jge
fmull
lret
sbb
mov
sti
push
mov
ret
insb
mov
pop
inc
and
or
popf
outsb
dec
inc
mov
jbe
subw
xor
arpl
xor
js
xchg
adc
push
push
ret
icebp
fnsave
inc
mov
fs
push
inc
xor
inc
std
pop
popa
add
jae
int3
jbe
adcb
in
mov
addb
pop
sub
mov
iret
mov
loop
pop
outsb
jl
inc
and
scas
pop
mov
aas
jne
sbb
test
push
lahf
fidivs
mov
cmp
pop
mov
xorl
add
aaa
add
ds
inc
loope
pushf
loopne
subb
int3
and
sbbl
bound
push
fs
pop
push
mov
mov
cmpb
sub
out
push
mov
dec
aas
mov
lcall
cs
out
sbb
inc
adc
xchg
xor
ret
pop
or
adcl
std
int3
inc
cmpsl
xorl
xor
add
mov
addr16
lods
pop
jge
lret
rcl
dec
push
cmp
jg
ja
add
ret
ret
testb
int3
mov
andb
adc
sbb
test
mov
jmp
movsb
xchg
or
push
jecxz
adc
xor
cmp
mov
and
pop
jo
dec
and
dec
pusha
out
xchg
inc
orb
jns
adc
pop
rorb
jno
push
nop
cltd
pop
xor
shlb
jns
cltd
js,pn
fisubs
clc
mov
lret
and
cmp
lods
inc
clc
stos
pop
movsb
out
popa
insl
xor
sti
and
sbb
movsb
inc
ret
ljmp
lahf
sbb
dec
cs
ss
js
stc
jae
int
das
inc
fdiv
sbb
jo
sbb
cmp
loop
aaa
sub
out
adc
aaa
repz
jne
cmpb
clc
mov
xlat
in
jp
divl
bound
and
jb
lods
outsb
fistpl
add
xchg
dec
xor
inc
jns
dec
cmp
int
jmp
dec
or
out
mov
imul
xchg
je
adc
push
fwait
cmc
lahf
dec
ret
jg
or
mull
in
fnstcw
testl
stc
pop
mov
mov
pop
mov
mov
test
in
push
xchg
mov
push
std
mov
add
mov
xchg
data16
mov
shrb
outsb
adc
adc
mov
mov
xchg
mov
inc
push
dec
aaa
sahf
mov
jnp
and
mov
adc
arpl
jns
cmp
sbb
mov
sahf
test
cmp
and
jb
and
dec
test
xchg
mov
xchg
cmpsb
cmp
dec
mov
push
loop
shll
imul
xlat
pop
cmpsl
mov
out
fsub
push
clc
mov
or
je
mov
dec
out
lods
test
jp
clc
insl
clc
dec
out
stos
mov
xchg
cltd
add
jno
out
scas
jmp
or
pop
push
adc
mov
pop
aas
cmp
rorb
mov
mov
insb
popa
pop
sbb
inc
shl
xor
jmp
fdivs
and
sub
cmp
out
nop
xchg
ja
lret
inc
mov
notl
push
cmp
jns
orl
push
add
mov
xchg
imul
mov
inc
push
pop
or
cmp
sti
inc
pop
sbb
pop
xchg
inc
les
loop
inc
or
cmp
pop
mov
adc
insl
pop
mov
sub
or
mov
add
inc
ljmp
push
inc
push
ds
cmp
mov
inc
fsubl
mov
in
mov
jbe
outsb
lret
jns
pop
sub
jge
cmc
pushf
adc
jae
andb
sti
cmpsb
cmp
mov
iret
jbe
fmuls
mov
push
cltd
mov
push
mov
push
cmp
xor
and
mov
or
jp
pop
push
push
nop
xor
addr16
and
in
cmpsl
push
sahf
ljmp
or
xor
add
add
sbb
mov
mov
icebp
sbb
add
cmpsb
push
pop
stc
addr16
bound
xchg
lcall
mov
adc
loopne
push
push
jle
bound
arpl
xchg
dec
out
movsb
loopne
sbb
adc
notb
jp
and
dec
add
xor
sub
cmp
leave
xchg
inc
inc
or
and
or
mov
mov
jg
mul
div
jge
cltd
sbb
es
call
push
les
insb
mov
xchg
insb
aad
push
mov
fildl
jg
mov
sbb
pop
jmp
shl
and
popf
push
stos
inc
adc
jns
and
mov
adc
jne
add
test
stc
push
or
cmpsl
das
fucomp
add
push
shll
push
push
fiaddl
inc
push
pop
jno
and
xor
mov
push
pushf
mov
inc
jl
cmp
cli
repz
inc
cmp
lds
sbb
or
cmp
iret
movq
mov
in
out
pop
xlat
es
or
xchg
cmc
shll
mov
xchg
dec
loopne
pop
out
enter
add
or
dec
push
lea
cmpsb
cmp
mull
test
lods
or
je
aam
sub
popa
jl
enter
pop
dec
push
xchg
and
pop
adc
cmp
ficomps
jae
push
repz
pop
ss
out
push
sub
mov
int
frstor
mov
sbb
mov
xchg
mull
ficompl
iret
xchg
lods
rolb
sub
cmp
mov
jle
cli
mov
mov
sbb
push
test
mov
mull
int
inc
into
test
fs
mov
pop
test
clc
mov
jb
fimuls
fidivs
imul
imul
pmulhw
push
cmp
inc
lahf
test
ljmp
push
notb
cld
lahf
in
pop
pop
dec
push
lds
lahf
xlat
repnz
mov
inc
push
push
dec
inc
es
je
adcb
stc
loop
loope
mov
mov
in
xorb
mov
mov
enter
dec
loop
fcmovb
push
lcall
nop
jecxz
imul
cli
jge
add
xor
jb
stos
sti
dec
call
push
maskmovq
testl
lods
jge
mov
dec
jmp
xor
cwtl
dec
insl
jmp
mov
xchg
decb
add
push
mov
or
xor
imul
or
mov
xor
xchg
jl
dec
inc
mov
jl
clc
out
into
xchg
xor
cmc
push
imul
xchg
scas
scas
push
shr
xchg
jb
cmp
sbb
mov
dec
daa
dec
lret
pop
cmp
mov
push
insl
pop
leave
loop
lods
xor
push
push
sbb
pop
jnp
xor
or
pop
cs
jle
add
adc
mov
das
dec
xchg
int
lds
mov
call
push
add
clc
dec
stos
lods
ss
push
arpl
push
dec
pop
push
in
test
cmp
testl
xchg
call
into
jmp
adc
mov
sarb
push
xchg
mov
fimuls
addl
xchg
jnp
repz
push
sub
out
cmova
dec
fdivp
enter
mov
out
clc
stos
stc
rorb
inc
aas
pop
mov
mov
add
push
pop
and
and
sarb
dec
popa
jo
mov
add
push
int3
mov
rcrb
enter
pop
test
repz
jecxz
idiv
add
daa
fdivl
subl
xorl
mov
jl
jecxz
sbb
push
xchg
or
mov
outsb
movsb
aas
pusha
loopne
pusha
pop
xor
or
fistpll
mov
xchg
jmp
icebp
into
leave
mov
fwait
hlt
aam
push
cmpsl
sbb
push
repnz
sbb
shrl
popf
xchg
pop
push
loope
sbb
lods
out
int
sub
cld
mov
and
adc
aaa
rorl
int3
inc
jecxz
fwait
roll
leave
inc
jns
lea
call
xchg
adc
mov
xchg
push
jle
sarl
aam
push
fwait
stos
pop
mov
adc
sbb
nop
shlb
jb
mov
xorl
cmp
add
add
cmpsb
push
pushf
pop
rcr
mov
add
and
lds
imul
leave
cmp
shll
add
pop
dec
push
sub
pop
jno
mov
ror
or
les
xchg
push
fcom
jmp
xchg
mov
jmp
adc
push
or
mov
pop
sbb
jle
enter
cmp
jg
and
xchg
mov
xchg
stos
sub
outsb
adc
mov
testb
lret
mov
mov
mov
lcall
sti
pop
mov
outsb
es
add
and
push
or
in
sub
testb
sbb
cmp
jnp
loop
outsb
shr
imul
lret
fnstcw
and
fcmovbe
outsb
push
jmp
inc
adc
mov
mov
jo
iret
push
clc
cmp
push
cmp
xor
fstpt
jbe
mov
out
int3
dec
push
insb
addr16
hlt
fbstp
fucom
push
test
xor
ds
sbb
lret
or
adcb
push
call
pop
cmp
sbb
push
inc
mov
das
outsl
cmp
les
testb
cltd
push
test
sub
push
jne
push
pop
cmp
inc
xacquire
lds
loop
int
es
mov
ret
fnstcw
add
pop
jl
adc
lds
or
xchg
ret
out
adc
and
out
pop
ds
mov
fs
clc
or
jge
popf
and
in
decl
movsl
outsl
or
mov
push
rcll
mov
out
jg
inc
int3
cmpl
jle
imul
in
add
mov
loop
push
and
mov
shlb
sbb
xchg
dec
fmuls
sbb
fdivr
scas
jno
ror
incl
dec
push
loop
adc
dec
mov
mov
aaa
loope
mov
orb
cmpsb
dec
add
cmpsl
fisttpl
sub
cwtl
call
inc
push
add
clc
jno
leave
xchg
bound
inc
push
pop
rcl
in
push
sbb
andl
jl
mov
mov
sbb
rcr
inc
push
add
push
popf
fisubrs
add
jecxz
into
sahf
push
xor
xor
or
clc
rorl
dec
outsl
shlb
test
dec
jo
mov
sti
jns
sbb
jmp
shlb
mov
or
push
cmc
add
sbb
out
clc
in
pop
insl
add
push
xor
jne
fdivrl
xor
sbb
pop
jmp
fsubs
jne
cld
ja
xchg
das
pop
fstp
inc
or
insl
popa
aad
push
rcl
push
ss
pusha
mov
outsb
js
mov
dec
adc
pop
fmull
stc
adc
mov
jecxz
test
xlat
inc
jb
lea
mov
mov
pop
xor
or
sub
pop
jg
imul
rcll
cli
decl
ds
lret
sbb
jns
scas
out
cmp
add
scas
xor
data16
negb
sarl
in
jmp
pop
outsb
or
int3
cmpsl
cmp
jg
add
push
adc
std
js
sbb
repz
xor
dec
jle
jbe
in
or
cli
adc
add
sbb
arpl
cmpsl
mov
lret
push
push
movsb
in
jge
or
add
xor
mov
mov
divb
aas
test
mov
push
notb
aad
sbb
dec
aad
jmp
out
roll
pop
sti
movsb
xchg
jmp
jne
and
pop
jo
stos
sbb
pop
xchg
mov
push
and
cwtl
pop
add
jg
cmp
test
sub
scas
stos
cmp
inc
push
push
push
jbe
int3
cmp
or
cmpsb
jl
and
mov
iret
in
in
pop
adc
inc
jne
mov
cmp
mov
adc
xlat
stos
sub
cmp
cmpsl
mov
fdiv
mov
jmp
mov
lods
mov
addr16
sar
add
sub
xchg
rorb
test
call
iret
leave
insl
pop
mov
push
mov
pop
xor
dec
pop
cmp
les
clc
add
cmpsb
mov
mov
mov
pop
push
out
icebp
js
lret
outsl
les
sarl
insb
sub
hlt
push
pop
out
mov
lcall
push
les
mov
pop
xor
loop
cmc
lcall
cmp
adc
out
jecxz
pop
cmp
fs
cli
or
inc
rorb
sbb
lret
fisubs
int3
add
imul
lea
xor
inc
scas
xor
cmp
mov
std
pop
jns
lcall
jl
mov
mov
add
sti
adc
or
sbb
sub
insl
sarl
stos
je
and
nop
hlt
inc
jmp
popf
mov
aas
hlt
and
fwait
xchg
push
fs
jp
mov
push
pushf
adc
mov
xor
dec
dec
out
cli
jmp
sub
lods
and
pop
or
dec
push
sbb
int
loope
mov
jbe
arpl
insb
adc
lret
mov
and
icebp
push
mov
dec
daa
sub
push
loopne
aam
xchg
aad
int
insl
into
mov
add
dec
inc
std
lods
stos
jnp
outsb
or
and
cmp
in
mov
fucom
int3
cmp
cmpsl
sub
and
test
sbb
push
sub
xor
xor
test
loop
lock
aad
pop
dec
jg
or
ss
hlt
ss
test
add
pop
div
jbe
push
je
icebp
test
out
shrl
cld
pop
sar
lcall
sti
dec
fcmovb
pop
xor
add
je
add
fnstenv
loop
mov
dec
xchg
aaa
pop
push
pop
loope
xchg
jg
push
dec
pop
xlat
out
outsb
push
aam
fcmovne
or
push
cmc
in
repnz
inc
push
push
adc
adc
jmp
leave
or
sub
out
dec
cs
ret
repnz
pop
jg
mulb
mov
mov
push
pop
pop
or
frstor
hlt
and
push
call
inc
cmp
fmuls
push
fldcw
jmp
push
fwait
pop
aam
or
sar
or
outsb
mov
add
jle
and
jecxz
movsl
sarb
sub
mov
push
test
push
add
movsl
icebp
jo
mov
cmp
cld
or
mov
mov
ss
adc
pop
push
xchg
sub
jmp
fisubl
jl
jle
dec
mov
fucomp
inc
imul
enter
jecxz
and
or
add
bound
mov
xlat
jbe
and
and
sbb
push
push
fnstenv
pusha
jle
std
or
add
lea
cmpsl
hlt
stos
std
push
inc
out
and
cmpsb
lods
mov
in
mov
ljmp
decl
dec
lret
roll
mov
lret
and
xchg
jnp
lods
lret
push
push
sbb
pop
xor
icebp
test
pop
adc
imul
dec
push
cmpsl
orl
ss
or
pop
pop
in
cmpsl
mov
fs
cmpsl
cwtl
in
js
scas
xchg
inc
mov
in
aaa
in
or
dec
inc
or
sarb
scas
out
push
mov
xor
fisubl
mov
call
push
arpl
cmpb
int
jo
lock
mov
ljmp
mov
nop
clc
dec
mov
inc
mov
sub
mov
mov
cmc
outsl
xorl
cmc
cmp
out
adc
out
gs
rcr
inc
cmc
iret
stos
ljmp
xor
xor
int3
xor
add
dec
rcll
xchg
into
cmp
ret
mov
cmpsl
inc
call
fwait
mov
jp
jae
add
and
jmp
mov
cmp
lea
sbb
clc
aam
jmp
push
inc
outsl
mov
mov
jge
adc
add
arpl
push
js
push
fbld
or
rcr
fists
loop
in
loop
push
mov
or
and
dec
rcr
int
lcall
xchg
push
in
out
push
dec
jmp
sbbl
adc
push
lret
int3
mov
addr16
sbb
and
xchg
add
mov
sub
dec
push
enter
inc
popa
sub
and
mov
push
push
arpl
mov
imul
test
cmc
sti
jbe
or
xor
rcl
mov
fimull
test
ljmp
sub
xor
movsl
enter
mov
loopne
test
hlt
sub
mov
push
and
or
pop
bound
inc
cmp
and
mov
jl
add
push
pop
sub
sub
mov
mov
mov
test
sub
pop
ss
shll
dec
lods
dec
mov
mov
repnz
lcall
push
aad
push
pop
movsl
and
pop
scas
int
xchg
cmp
aas
push
out
add
push
cwtl
daa
and
and
add
jecxz
fadd
pop
lods
inc
mov
sar
mov
cld
das
lret
rol
xchg
lock
in
inc
pop
clc
dec
mov
push
cmp
outsl
in
sbb
push
mov
cs
in
pop
mov
inc
loope
and
mov
dec
subb
xchg
into
sbb
repnz
push
push
gs
addr16
loope
mov
fcoml
xor
sahf
stos
xchg
or
cmc
sbbl
pop
enter
popf
mov
fimull
xchg
out
xchg
jl
scas
into
loopne
cli
or
jno
pop
push
call
movsb
dec
adcl
inc
adc
test
cld
sbb
dec
xchg
call
push
cmp
push
jmp
into
xchg
mov
shll
sbb
fwait
jl
push
pop
push
xchg
rcl
cmc
or
icebp
test
in
out
cmc
cmp
loope
mov
mov
lds
xor
in
jmp
add
xor
cmpsl
popf
xorb
movsb
inc
cmp
fimuls
adc
pop
mov
or
push
inc
rolb
adc
xor
push
lods
loopne
add
insb
loope
cmp
adc
cmp
aaa
and
jns
lahf
aas
sbb
jns
into
ja
scas
in
mov
add
je
loopne
xchg
push
pop
clc
dec
dec
in
sub
outsl
pop
mull
sbb
loope
outsb
jae
inc
daa
test
inc
add
and
xchg
jno
je
ja
mov
sarl
jne
fcmovbe
xchg
mov
or
mov
jns
popl
repz
test
mov
pop
push
ds
jno
mov
mov
arpl
fsubrl
test
aam
outsl
idivl
jbe
sub
es
ror
cmp
test
xchg
lcall
push
xor
jne
lea
sub
cmp
adcb
pop
or
xchg
push
jbe
pop
pop
mov
arpl
test
adc
or
vpmovb2m
insb
jae
jle
insb
inc
xor
orl
and
pop
jo
mov
mov
mov
push
rcrl
popa
adc
fisttps
cmpsb
pop
daa
cmc
cmp
cmc
inc
pop
test
call
mov
rcrb
hlt
mov
shlb
jmp
add
jge
mov
mov
dec
jmp
xchg
inc
push
xchg
lds
pop
add
wbinvd
leave
jb
scas
pushf
mov
rolb
mov
loop
out
push
icebp
dec
sub
faddp
sbb
fidivs
xor
xchg
stos
jg
xchg
stos
sub
repnz
mov
mov
insb
xchg
movsl
sub
or
and
xor
out
iret
mov
xor
mov
inc
cmc
dec
xchg
lahf
aad
addr16
sub
fsubl
mov
mov
pop
and
xchg
add
inc
or
and
int
mov
push
adc
bound
inc
push
mov
adc
and
dec
lock
in
repnz
xor
or
cmp
adc
mov
shll
test
push
sbb
mov
mov
clc
lret
ret
call
or
jg
test
fisubrl
pop
lret
fcomip
mov
adc
push
mov
mov
pop
xchg
mov
in
xlat
dec
iret
xchg
mov
mov
mov
sarl
repnz
mov
sub
fwait
add
cmp
dec
jbe
inc
mov
subb
scas
inc
arpl
lods
mov
ret
dec
scas
push
sti
pop
test
scas
sbb
dec
das
mov
push
sahf
inc
sub
scas
and
add
push
fdivp
jnp
xchg
repz
ret
movsb
adc
mov
insb
xchg
mov
aam
mov
loope
add
xchg
mov
outsl
dec
cmp
shlb
faddp
fwait
enter
clc
insl
or
dec
lahf
mov
test
gs
sbb
and
xlat
fdivrp
dec
gs
arpl
pop
xor
jb
cmpsb
xor
add
fsubl
mov
sub
lds
add
lret
sbb
push
inc
cwtl
or
sbb
xchg
iret
rclb
push
push
fcmovnb
cmpsl
loop
outsl
call
sub
jo
stc
adcl
add
loopne
lahf
fs
fistps
add
sbb
lods
sub
adc
xor
push
xorps
lods
lods
mov
imul
jmp
mov
cld
data16
push
push
dec
or
adc
lahf
insb
mov
aam
push
lock
lock
insl
scas
aam
arpl
push
sahf
bound
lcall
mov
add
and
push
jle
mov
cmp
loope
in
pushl
xchg
std
add
xchg
imul
imul
inc
sbb
cmp
out
fcmovnb
push
sub
ljmp
cmpsb
ret
push
xchg
push
stos
cmpsb
push
jl
insl
test
gs
xor
xchg
inc
mov
inc
in
and
mov
clc
fs
stc
lods
and
jo
imul
sbb
ret
sbb
jo
pop
mov
sub
mov
test
popa
mov
stos
test
fsubs
add
pop
rorl
sti
pop
mov
mov
adc
or
pusha
mov
mov
rclb
sbb
pop
or
divl
push
insl
icebp
inc
mov
in
adc
into
lret
test
xor
xor
push
push
test
mov
outsb
flds
repz
jae
add
mov
test
push
jnp
add
enter
addr16
pop
push
iret
repz
lcall
jl
fidivs
insl
dec
leave
in
pop
push
je
sbb
push
fdivl
dec
push
cmp
negl
sub
mov
outsl
cmpsb
dec
iret
sub
loopne
lea
cli
mov
dec
rorb
data16
lods
fiaddl
cli
inc
lods
sete
loop
repnz
and
stos
inc
iret
dec
dec
repnz
lds
in
mov
sti
fcmovnu
arpl
inc
rcrb
jne
lds
ret
and
mov
fwait
jbe
addr16
cmc
and
pop
daa
aaa
leave
and
out
mov
mov
cltd
in
pop
pop
imul
add
jnp
mov
pushf
lods
cmpsb
jge
mov
std
inc
mov
jle
mov
bound
test
xchg
dec
add
imul
add
pop
test
lret
jp
dec
lret
shl
shlb
loop
fdivr
int
pop
jecxz
ret
fs
test
insb
xchg
sbb
int
std
adc
xor
sahf
mov
dec
pop
pop
fs
mov
stos
jg
outsl
dec
mov
mov
pop
and
lds
mov
dec
fmuls
sarl
fstps
mov
or
push
fwait
leave
bndldx
out
jne
leave
mov
jp
hlt
leave
mov
mov
lds
cmp
and
mov
mov
ficompl
shl
ljmp
push
cmpsb
into
aam
add
cmpsl
js
aas
mov
pushl
sbb
xchg
aam
inc
sbb
add
sbb
jbe
mov
icebp
repnz
cmp
ljmp
mov
jnp
and
inc
imul
jno
pop
sbb
mov
daa
nop
je
leave
sub
push
ja
push
push
jmp
fst
jg
lods
lods
adc
dec
hlt
in
push
cs
xchg
iret
mov
in
cld
aad
or
push
xchg
ja
dec
loopne
lahf
jbe
or
sub
cli
add
repnz
loopne
andb
or
loopne
push
mov
decl
cli
out
xor
push
pop
test
mov
dec
pushfw
cmp
and
mov
pop
xorb
test
into
adc
mov
cld
inc
mov
dec
es
push
and
movsl
inc
sub
loop
sbb
cltd
in
insb
cmp
test
cmpsb
in
xchg
stos
dec
jne
jb
cmp
sti
jg
int
pop
lods
loopne
lret
and
push
enter
cs
scas
dec
push
adc
jno
cmpsb
adc
sbbl
insb
jge
pop
inc
mov
push
mov
in
or
pop
or
scas
cmp
and
hlt
xor
sbb
sub
xor
dec
les
mov
jle
sub
sarb
jmp
sbb
xchg
enter
inc
in
outsl
call
inc
pop
jl
mov
out
ret
in
and
jle
sbb
scas
push
xor
adc
dec
enter
into
inc
out
sub
push
or
addr16
mov
sahf
jg
adc
xchg
bnd
sub
fstpt
test
scas
mov
fwait
xchg
sub
cmpsb
gs
js
fldl
inc
imul
jns
adc
iret
in
jnp
in
call
adc
dec
icebp
jmp
test
add
jg
push
jne
cmp
addl
xchg
xchg
movsb
sbb
fsubl
adc
sahf
sti
sti
push
cs
dec
jae
mov
push
aam
inc
sub
jge
cmp
jle
mov
iret
stc
mov
loope
popf
lods
fsubs
pop
inc
lret
or
pop
push
mov
cli
xchg
clc
rcl
sub
repz
xlat
xor
adcb
stc
pop
push
jg
sub
arpl
aam
or
mov
jno
xor
addl
cmpsl
rcl
pop
pop
aaa
dec
cmp
cmp
mov
mov
sbb
movsb
out
dec
push
out
jae
lahf
push
in
pop
test
push
mov
cwtl
test
in
dec
pop
and
stos
inc
pop
cmp
and
mov
rcrb
mov
lahf
cltd
push
xchg
and
mov
mov
cs
sbbb
test
mov
lahf
pop
incl
mov
rcl
test
ja
push
pusha
xchg
mov
jno
leave
xchg
loop
mov
cmc
sub
imul
dec
xor
xchg
es
push
ret
cwtl
lahf
fdivrp
mov
xlat
mov
repz
pop
push
jecxz
xor
mov
jne
bound
bnd
in
and
clc
test
jns
repnz
mov
ret
xor
andl
jmp
sar
sub
pop
movsl
cmp
xor
lock
mov
dec
sahf
imul
scas
hlt
jge
mov
pop
push
aad
mov
loope
pusha
and
jle
push
cmp
std
insl
lods
jb
ds
push
ja
enter
test
lock
pop
sbb
push
sub
and
mov
jbe
cmove
fcompl
cmp
mov
push
mov
add
adc
adc
mov
cmp
and
inc
pusha
lds
mov
dec
sbb
sbb
sahf
sbb
cld
inc
push
lods
sbb
mov
outsl
cmpsb
mov
pop
push
fidivrs
pop
xchg
push
loope
scas
jge
push
jl
xchg
loopne
mov
add
loope
fiaddl
jb
adcb
shlb
inc
xor
out
je
sub
ret
mov
or
lods
out
xor
test
int3
cld
lods
inc
jmp
and
jne
idivl
in
cli
adc
mov
pop
mov
xor
in
pop
daa
test
int
cmp
push
adc
aad
je
das
cltd
out
pop
iret
and
iret
cmpsl
movsl
xchg
dec
fnclex
aas
lds
adc
dec
push
add
cmpsb
or
pop
push
sub
ja
or
imul
mov
mov
mov
jp
sbb
xchg
pop
lods
movsb
pop
or
test
push
mov
es
movsl
outsl
xchg
jbe
mov
mov
icebp
jae
xor
pop
cld
push
or
clc
jge
test
add
add
pop
jge
mov
sbb
add
xlat
push
adc
insb
dec
mov
mov
sti
xchg
call
cmp
jp
fadd
clc
movl
lahf
push
imul
leave
hlt
add
sbb
aas
jl
dec
add
fs
fs
cmpsl
mov
adc
outsb
or
cltd
push
cmp
pop
aam
push
ljmp
or
into
movsb
and
mov
xchg
push
gs
icebp
idivb
dec
sub
rorl
push
or
fs
adc
fmull
xchg
mov
cmpsb
and
cwtl
rcrl
jnp
mov
push
leave
mov
sbb
lcall
mov
inc
pop
std
mov
fisubrs
pop
cmp
mov
fidivl
xchg
mov
xchg
jnp
ret
fwait
mov
iret
jbe
je
arpl
cwtl
pop
cmpl
push
mov
shlb
add
mov
push
xorb
mov
fistps
insl
or
movsb
pushf
aam
pop
add
out
mov
fwait
and
sbb
dec
mov
jge
sub
lea
bound
aam
sub
ljmp
cmp
in
inc
inc
cwtl
jb
lods
ljmp
out
popa
les
int
icebp
cmp
and
jle
repz
sbb
fsubp
lods
out
or
sub
lods
push
jne
mov
mov
xor
push
jne
mov
and
call
adcl
insl
ret
and
sbb
cli
in
fs
stos
jbe
mov
mov
pop
jbe
jae
add
add
sarl
es
ljmp
or
push
mov
hlt
je
sbb
xor
cmp
mov
negb
repz
xorl
adc
loop
loope
fsubl
sub
mov
mov
jle
stos
mov
mov
or
sub
xchg
cs
mov
inc
stos
popa
std
or
xchg
pop
dec
add
add
lods
cmp
cmp
jns
mov
sub
lcall
and
fwait
xor
fs
jnp
cwtl
pop
xlat
jnp
or
push
push
fxam
cld
aad
dec
jne
enter
rolb
lret
xchg
mov
or
test
iret
push
xor
mov
pop
xchg
adc
pushf
in
fisttpl
adc
icebp
and
mov
shlb
cmpsl
insb
stc
dec
lea
xchg
mov
dec
fucomi
test
std
sbb
pop
lds
fwait
stos
aaa
hlt
dec
push
cmp
sbb
adc
jp
cs
sbb
in
push
dec
stos
push
daa
stos
jno
mov
in
jbe
push
sbb
in
jb
je
lea
sub
in
les
push
push
imulb
mov
and
xchg
push
mov
dec
data16
cmp
mov
outsl
rcr
out
lret
inc
mov
out
lea
out
lods
cmp
nop
mov
pop
out
insl
cmp
push
inc
mov
jae
or
inc
mov
adc
sub
cmp
push
push
mov
dec
lahf
dec
fmuls
dec
std
dec
sti
inc
movsb
add
jecxz
or
lret
aaa
rcrb
jmp
arpl
shr
jmp
and
cmp
shlb
sti
insl
pop
fwait
mov
and
aaa
clc
add
mov
push
and
loope
jo
mov
push
adc
clc
dec
jg
inc
xchg
leave
fistps
ss
mov
fwait
int3
sub
mov
push
xchg
mov
subb
adc
cmpsb
xor
mov
scas
aam
jne
outsb
cmp
loop
push
hlt
or
jge
cmp
fldl
data16
jne
pop
fsub
sub
in
push
mov
cmp
scas
mov
add
lret
cmp
popa
xchg
sarl
mov
sahf
mov
and
xchg
mov
adc
sbbb
mov
cmp
cltd
dec
inc
movl
mov
xchg
test
and
leave
pop
adc
mov
popa
mov
imul
cmp
jp
push
lret
in
and
push
test
add
pop
hlt
lods
push
enter
popf
add
pop
ds
mov
jne
push
outsl
lcall
push
and
leave
and
lret
pop
int3
and
cwtl
aad
ret
jge
cmp
idivb
imul
add
pop
pop
lods
rcrl
in
hlt
pop
push
push
push
push
ret
fsubs
pusha
mov
xor
ja
mov
testl
arpl
pop
cmp
dec
adc
aad
daa
inc
orb
aas
pop
es
jae
push
cmpl
std
xchg
push
jae,pn
mov
andl
aas
lods
testb
lea
rclb
inc
sub
sbb
popa
sahf
and
mov
mov
jl
jecxz
sub
mov
fstl
push
clc
iret
push
pop
lods
int3
ret
xchg
in
inc
cs
loop
das
repnz
xlat
test
outsb
int3
cmpsl
mov
xchg
std
ja
sahf
es
aas
cmp
cmp
dec
mov
rcl
jbe
in
pop
ret
cmp
fnstcw
inc
push
mov
fidivl
call
leave
push
and
cmp
mov
lret
jne
or
mov
outsl
ljmp
test
jp
outsl
push
enter
adc
and
enter
rcrl
test
xor
sbb
xchg
mov
das
add
push
xlat
subb
cmp
or
jge
sub
inc
sub
add
jge
push
sbb
xor
sti
lds
mov
mov
pop
add
or
mov
xor
lret
aad
mov
fcoml
fistl
call
and
jl
inc
fisttps
fmulp
fidivrs
dec
push
js
cld
int
push
mov
in
mov
inc
cwtl
int
xchg
fldenv
push
pop
popf
mov
in
sti
pop
and
sti
push
and
pop
pop
rcrb
xor
and
ljmp
movsb
stos
push
es
ret
test
mov
sub
cwtl
stc
xchg
xchg
add
jl
ror
lret
rcll
mov
push
out
xchg
adc
push
mov
lret
call
inc
push
mov
inc
scas
and
mov
add
xchg
xchg
jl
mov
jge
adc
push
loop
shlb
popa
xchg
jb
mov
mov
fisubs
push
loopne
ss
sbb
pop
mov
ficoml
das
adc
stos
push
mov
cwtl
faddl
hlt
cmp
cld
mov
in
or
lcall
test
or
jge
fs
test
fisttps
call
orl
pop
xchg
insl
lds
or
mov
xchg
or
arpl
addr16
mov
icebp
mov
add
loopne
ret
push
push
mov
scas
or
add
mov
rcrb
jmp
aam
outsb
repz
aaa
xorl
and
mov
mov
jbe
mov
xor
sbb
push
or
pop
sti
dec
xchg
daa
movsl
sbb
jne
mov
sub
pop
arpl
xlat
mov
nop
mov
push
loope
ret
inc
xor
pusha
sbb
lds
inc
cmpb
pop
sub
into
fcmovnb
pop
iret
leave
adc
nop
std
fnstenv
push
repnz
mov
add
sbb
iret
pop
cmp
jmp
sbb
insl
pop
stos
loopne
adcl
jnp
pop
or
mov
mov
stc
icebp
in
out
lods
loopne
pop
shrb
xor
sub
shll
insl
fwait
gs
cmp
push
aam
inc
cmp
pinsrw
cmp
iret
add
xor
push
xchg
fsub
sbb
out
dec
cmp
xchg
mov
jp
or
pop
xor
das
sub
jno
pop
push
xchg
rorl
sbb
jno
mov
mulb
and
jno
cmpsl
pop
mov
xchg
cwtl
outsb
inc
xor
pop
test
sbb
push
sbbb
js
arpl
or
mov
xor
fwait
pop
lock
enter
xchg
lea
pop
mov
pop
pusha
mov
jecxz
jg
clc
jnp
cmp
and
sbbl
or
sub
scas
rorb
mov
xor
jno
and
jmp
loopne
sub
out
xor
sbb
sbb
orb
imul
int3
cmc
out
sbb
lea
xor
push
popa
jo
sbb
call
repnz
js
outsb
mov
fldcw
in
jnp
lock
mov
fs
lret
imul
loope
jo
cmp
lcall
sbb
mov
iret
test
mov
and
cmp
jl
xor
dec
inc
outsb
or
jns
adc
fcomp
pop
pop
jo
lret
inc
pushf
mov
sbb
dec
inc
sbb
leave
jp
fwait
sarb
call
in
mov
test
int
jnp
in
popa
lods
test
roll
xchg
in
xor
dec
push
xchg
xchg
inc
les
es
clc
imul
inc
je
fs
neg
nop
or
daa
andb
stos
dec
jmp
and
inc
pop
aam
cmp
push
pop
popf
into
test
cli
adc
xchg
int3
jbe
aam
xor
std
ret
push
and
sbb
adc
sub
pop
xchg
iret
mov
mov
test
mov
lcall
xlat
repnz
xchg
cmp
xchg
add
dec
leave
mov
dec
jge
loopne
or
cmp
sbb
cltd
aad
imul
fstl
into
and
rcrl
rcr
cmp
es
clc
or
fidivs
sbb
dec
cmp
push
mov
cmp
and
pop
pop
cld
push
pop
cmp
mov
pop
loopne
movsl
popa
dec
xchg
jb
mov
sub
or
xlat
mov
jno
adc
ja
pop
insl
lods
arpl
daa
pop
add
jmp
mov
andb
mov
adc
stc
dec
sub
repz
dec
mov
sarb
jbe
out
jge
dec
push
cmp
in
sti
push
cmp
jae
shr
es
xchg
into
cmp
testb
add
stos
jo
inc
cmpb
xchg
and
mov
bound
into
jp
ret
mov
xor
in
add
xor
dec
test
leave
es
loop
mov
adc
mov
in
xchg
pop
fwait
sbb
or
in
adc
popa
out
outsl
sbb
push
loopne
dec
pop
clc
push
inc
js
jae
push
std
mov
dec
add
push
xor
popa
es
dec
std
cmpsb
mov
push
sub
sub
js
fcomps
jl
mov
insb
dec
shll
fwait
add
mov
cs
rcll
mov
add
xchg
pop
mov
aaa
cmpsl
xchg
ljmp
fs
ss
jmp
mov
repnz
rorl
mov
jg
mov
mov
push
xor
xor
test
lret
mov
bound
jns
imul
dec
dec
sbb
mov
sbb
mov
fs
jle
sbb
and
dec
imul
push
outsl
jg
std
stos
xor
outsb
mov
jbe
test
ja
rclb
xor
adc
inc
mov
insl
adc
jmp
jnp
outsb
xchg
aad
sub
cmp
cmp
push
mov
add
rcll
ja
inc
fisttpl
add
shrb
push
sbb
xor
cmp
pop
mov
mov
test
jmp
adc
inc
repnz
cs
nop
imul
pop
pusha
test
xchg
xor
ret
inc
imul
mov
pop
or
fldenv
ss
rcrl
sub
mov
push
ret
jne
std
xchg
dec
sbb
mov
in
mov
shll
xchg
gs
add
fsubrs
jecxz
movsb
add
xor
xchg
stc
sti
xchg
pop
aam
inc
fcomip
add
filds
das
jbe
scas
mov
or
pop
fwait
push
test
push
fiadds
mov
arpl
adc
xchg
push
and
jecxz
push
adc
xor
cmp
aam
fcomps
xchg
into
jl
add
outsl
jnp
loope
rcl
cltd
sub
ss
or
stc
cltd
test
fucomip
scas
fucom
cs
insb
out
outsl
or
nop
cmpsb
sub
lret
pop
mov
inc
ja
into
outsb
loopne
mov
and
std
fucom
insb
lcallw
xchg
cmc
mov
push
xchg
cmpb
inc
mov
push
stc
push
pop
push
jbe
fsubrl
cmp
cmc
mov
lret
rorb
pop
mov
add
aam
insl
pop
jge
or
pop
lahf
lcall
in
icebp
fnstsw
mov
inc
ljmp
sub
mov
rcrl
aas
push
pusha
loopne
adc
movsl
add
cmp
orb
jnp
hlt
mov
scas
or
push
cmp
iret
mov
xchg
mov
lret
test
out
scas
cmp
add
out
movntps
push
loopne
sub
pusha
adc
mov
jbe
cmp
sbb
fildll
mov
dec
sahf
shll
ss
mov
test
mov
push
sbb
mov
pop
gs
jo
pusha
lds
jne
xor
or
in
inc
push
and
and
cmp
mov
out
lods
push
sti
pop
insb
in
push
cmp
mov
xor
jnp
push
xchg
aaa
leave
fwait
aam
popa
shll
movsb
popa
sub
pop
inc
arpl
shrb
ret
outsb
ficoms
add
push
out
cmp
ds
cli
js
pop
shl
stc
shrb
lods
push
fildl
sbb
dec
scas
push
std
test
adc
and
pop
cmp
clc
out
push
mov
jmp
test
dec
daa
fidivrs
sub
mov
add
test
test
js
mov
lea
mov
imull
idiv
jbe
mov
imul
add
mov
fwait
xchg
xor
adc
nop
shll
xor
repz
clc
pop
xor
outsl
mov
mov
add
mov
nop
mov
sub
enter
cli
sahf
add
xor
pop
stc
out
sbb
fmul
sbb
sub
jge
xchg
mov
lods
lcall
jne
js
lahf
scas
insb
outsb
movsb
pusha
sbb
dec
icebp
out
adcl
outsb
ficompl
xlat
jnp
lcall
mov
add
and
call
mov
in
push
pop
adc
ljmp
call
adc
mov
dec
sbb
push
lods
roll
pop
stc
sub
pop
mov
lock
xchg
fs
repz
fimuls
sbb
adc
fcoms
mov
adc
and
cltd
lret
jl
imul
jle
ss
adc
add
push
out
in
test
lcall
sub
imull
leave
mov
hlt
insl
int
addr16
and
mov
jg
data16
xor
dec
movsl
sub
jnp
aad
and
push
sub
dec
push
cli
pop
ret
pop
mov
outsl
or
sub
lret
imul
orb
test
fistps
ret
pop
or
cmp
mov
ss
inc
arpl
test
fistl
fucomip
sbb
fucomp
das
mov
scas
cmp
push
dec
fistps
iret
sti
ds
fstpl
mov
repz
mov
es
rcr
fsincos
sub
xor
arpl
popa
adc
fdivr
push
jl
fcmovnu
add
hlt
cld
imul
push
and
pusha
loop
in
ror
imul
lods
mov
mov
and
sbb
pop
sahf
out
cmp
imul
mov
mov
loope
in
cld
rclb
es
push
lea
jp
lods
popf
sub
insl
dec
xchg
gs
sbb
loopne
mov
sub
test
push
in
ljmp
les
aam
repz
nop
in
mov
xor
sbb
cmp
shlb
sbb
scas
jno
lock
cmp
ljmp
or
push
push
lahf
cmp
xor
mov
sbb
icebp
pushf
cmp
mov
movsb
pop
test
push
pop
lcall
jmp
xor
fwait
xorb
aad
or
push
xor
mov
loopne
adc
xor
push
js
mov
xor
cmpsl
repnz
movsb
stos
mov
inc
rcrb
rcrl
pop
pop
iret
filds
xlat
mov
inc
int3
scas
push
cmp
push
sub
push
imul
out
push
adc
adc
mov
or
adc
inc
jg
stos
dec
movsb
jle
push
std
mov
adc
or
pushf
mov
shrl
mov
push
xchg
mov
nop
sahf
dec
sti
cmp
and
jecxz
sub
xchg
mov
lret
pop
jno
pusha
mov
cli
jbe
stc
jbe
and
mov
inc
cli
jle
xchg
out
imul
pop
dec
roll
fwait
into
pop
int
or
mov
ret
mov
scas
test
loope
ret
jns
inc
mov
add
mov
popa
sub
mov
mov
and
cmc
hlt
out
pop
les
add
add
and
mov
push
mov
jmp
xchg
jnp
mov
mov
jmp
roll
addl
xchg
jmp
push
out
testl
add
and
scas
std
and
jbe
ljmp
adc
pop
dec
cld
stos
jno
push
jne
mov
push
loopne
gs
pop
and
pop
jbe
mov
mov
cmp
dec
popa
xchg
pop
cmp
popa
ljmp
mov
adc
scas
xlat
je
mov
outsl
cmpsl
pop
scas
xor
add
outsl
popa
je
add
and
push
shrl
nop
addr16
cmc
orb
jmp
insl
sbb
mov
sarl
sahf
int
sbb
inc
stos
xchg
dec
test
das
dec
shr
test
and
jl
mov
fnstenv
sahf
pushf
lods
int3
xor
ss
mov
mov
jne
iret
fcoml
pop
push
jb
mov
sar
lds
adc
and
cmp
test
inc
mov
jne
xor
push
add
dec
inc
sub
sbb
cmpsb
lds
sahf
dec
out
dec
sahf
fnop
das
subb
cmp
in
mov
pop
xor
daa
leave
jge
les
mov
cmpsb
inc
or
adc
shlb
push
out
pop
call
out
xor
mov
push
fldl
mov
jge
adc
mov
out
lock
xchg
rcr
or
jo
lcall
frstor
out
subl
in
sub
cmp
shr
je
imul
mov
test
inc
jb
add
addr16
ret
mov
in
loop
inc
fstl
ss
sbb
shl
cmp
leave
mov
sbb
loopne
mov
push
outsl
ret
mov
je
imull
adc
bound
dec
mov
cmp
lock
fnstsw
pop
popa
aam
lahf
mov
movsl
bnd
out
call
in
adc
mov
add
add
xchg
ror
and
push
pop
stos
mov
pop
sub
dec
cmp
push
test
movsb
jp
push
jns
add
add
ljmp
sbb
xchg
jae
fdivrs
dec
fildl
shlb
js
out
inc
dec
and
mov
test
cmp
push
push
jmp
adcb
mov
cmp
out
adc
mov
mov
adc
icebp
add
jno
jmp
cmpb
sub
mov
xchg
mov
jmp
jne
sbb
notb
push
xchg
adc
push
aad
dec
cmpsb
fwait
dec
cwtl
rcr
lods
add
arpl
xchg
pop
push
xor
repz
push
pop
mov
out
xorl
rcrb
decl
xchg
mov
cmpsb
mov
mov
dec
mul
adc
fistps
test
fcmovnu
mov
push
ds
fwait
xor
jb
adc
cld
test
push
push
stos
mov
pop
lret
rol
adc
flds
rolb
in
ljmp
in
mov
cld
mov
xchg
xlat
sub
rcr
jns
addl
sahf
xor
arpl
lahf
push
ret
mov
test
aam
inc
adc
out
mov
push
jno
pop
stos
pop
add
xchg
fadd
push
mov
cmp
inc
pop
dec
or
push
push
dec
out
insb
pop
or
lock
cmc
push
mov
cmp
sbb
insb
repnz
push
xor
push
dec
xchg
mov
sbb
pop
dec
es
adc
mov
sahf
mov
cmc
popa
movsb
dec
sbb
cmpsl
enter
cmp
xor
pop
sub
mov
and
cmc
jmp
dec
lahf
sub
fidivs
das
clc
mov
add
cwtl
ret
loope
jg
fnstsw
mov
mov
ret
dec
add
int
or
xchg
jo
mov
push
scas
dec
inc
mov
xor
jmp
data16
pop
xor
pop
jb
sbb
inc
ret
sub
xchg
sbb
pop
push
lcall
cmp
mov
fnstenv
repz
pusha
push
jb
movsb
or
push
dec
lock
mov
mov
icebp
cwtl
test
push
sub
xor
repz
repnz
outsb
xor
loopne
add
inc
xchg
lods
test
pop
sbb
in
lcall
ret
cmc
nop
mov
clc
and
jp
mov
sub
pop
inc
test
lea
push
pop
jns
pop
xchg
hlt
orl
call
fldl
pop
add
inc
jno
push
sbb
loopne
and
subl
iret
faddp
imul
xorb
out
xor
add
jbe
loopne
notl
stos
sbb
cmp
into
jmp
icebp
pop
mov
push
adc
pop
pop
shl
out
mov
jge
cli
fcom
scas
sbb
mov
cwtl
movsb
aas
or
pop
loop
mov
sbb
inc
lods
mov
mov
inc
out
inc
cld
cmp
aas
pusha
xor
roll
or
mov
adc
loope
xchg
sub
dec
inc
movsb
rcrl
xchg
rcrl
pop
mov
mov
xchg
stc
cmpsl
pop
repz
adc
add
js
popl
fists
shl
xchg
jecxz
pop
movsl
mov
shl
iret
jne
mov
pop
rsm
jae
gs
bsr
in
inc
movsb
xor
loope
xchg
rolb
pop
push
fdiv
xlat
hlt
out
inc
dec
inc
push
jb
pop
and
in
lock
mov
fwait
nop
insl
mov
mov
jne
lret
pop
jne
xchg
sbb
ret
cmp
sbb
enter
loope
push
mov
test
ss
cli
movsl
call
test
mov
bnd
push
rcl
mov
fsincos
fimull
out
aaa
jecxz
xchg
lods
ljmp
push
sbb
inc
push
iret
mov
add
or
pop
mov
pusha
mov
movsl
cmpsl
jo
mov
mov
cmp
and
dec
mov
dec
stos
dec
inc
jne
imul
ret
push
xor
popf
repz
scas
inc
in
in
std
push
pop
je
push
out
xchg
pushl
imul
cwtl
inc
sti
fistpl
cmp
mov
lcall
leave
ret
in
sbb
jnp
dec
adc
mov
pushf
imul
xchg
add
sahf
scas
jne
adc
pop
outsl
jp
cmp
repz
cmp
inc
cmpsl
xlat
push
xlat
insl
in
mov
or
mov
mov
lcall
lea
mov
mov
push
xlat
mov
je
aas
or
out
mov
pop
jp
cs
sub
pop
cmpsb
cmpl
pop
push
lahf
pop
pop
cmp
repnz
or
sbb
iret
das
xchg
and
xchg
lods
bnd
push
adc
mov
fcmovnu
subb
pop
loopne
jg
movsl
int3
incb
mov
jno
add
inc
lock
sbb
jbe
shr
push
enter
adc
fstpl
out
push
loopne
sbb
repnz
cli
movsb
pushf
push
pushf
lahf
je
in
ja
pop
jnp
movsb
sbbl
adc
scas
call
sbb
mov
jno
adc
aas
lea
fsts
ret
push
mov
adc
loop
fwait
sbb
xchg
std
adc
cld
sahf
inc
sarl
nop
pop
sbb
ds
jp
enter
cmpsb
insb
lock
fisttps
sbb
shrb
push
mov
pusha
adc
js
lea
pop
mov
sub
int3
fnstsw
pop
or
jo
ret
jno
repz
mov
dec
testl
popa
int
lock
add
mov
pop
mov
scas
or
pop
test
pop
sti
pop
pop
jb
jnp
dec
push
mov
fldcw
jge
ret
jle
push
popf
mov
push
xchg
cmp
push
cmp
push
or
mov
xchg
jg
mov
push
rcll
lahf
fists
push
mov
mov
loope
in
adc
sub
cmp
insb
loopne
xchg
mov
pusha
inc
jmp
xor
imul
mov
data16
outsl
cmp
ss
add
xorb
daa
cmp
jmp
popf
mov
mov
rcrl
lret
xchg
movsb
jo
pop
add
push
out
in
cmp
stos
fs
popa
pop
push
pop
mov
push
hlt
jbe
lods
out
sbb
mov
jno
pop
movsl
sub
pop
rclb
adc
lcall
pusha
jl
lea
fwait
rcr
movsb
movsl
inc
mov
jge
js
les
addr16
out
leave
xor
orb
stos
mov
mov
ss
out
sub
push
into
sbb
arpl
addr16
jb
stos
xor
mov
push
xor
jg
add
inc
push
and
rolb
inc
sub
pushf
adc
outsl
les
stos
es
loopne
std
xor
push
xor
or
push
and
sti
lds
xor
add
fwait
cltd
push
mov
mov
pop
arpl
and
call
dec
push
test
jp
daa
out
out
repnz
jp
shrb
or
es
fisttpl
repnz
cmp
mov
add
cmpsb
test
pop
ret
xchg
out
pop
loop
cmp
dec
push
cmp
popa
punpckldq
lahf
mov
sbb
repnz
out
inc
es
mov
shr
add
adc
iret
sbb
sub
inc
aaa
in
sbb
cltd
xchg
pop
sub
mov
pop
jae
cmpsb
xor
into
in
call
pop
cmp
stos
test
jb
jns
adc
popa
sub
xchg
sbb
ss
sub
mov
pushf
pushf
in
fldcw
clc
dec
pop
mov
push
sbb
jnp
bound
test
mov
add
xchg
inc
adcl
sub
loope
int3
jg
pushl
insl
outsb
int3
and
jecxz
or
push
pop
cmp
jbe
push
jne
out
sbb
repz
into
push
pop
xlat
out
mov
mov
sbb
arpl
test
dec
jne
mov
loopne
dec
notl
pop
ror
add
fxtract
jp
mov
lea
sub
lods
enter
aam
push
arpl
inc
out
test
shll
lea
ret
mov
sbb
jnp
insb
push
pop
inc
jecxz
leave
add
mov
inc
loope
push
jl
mov
int
imull
mov
sbb
imul
ror
lods
inc
or
xchg
movsb
fmull
sbb
stos
addr16
out
addl
loopne
addl
adc
shl
mov
cmp
push
div
dec
xor
jmp
xchg
in
cmpsb
cmpl
pop
mov
add
pop
sub
in
fistl
mulb
data16
lret
mov
adc
xchg
jno
sub
adc
dec
imul
arpl
jecxz
imul
clc
add
sub
nop
mov
mov
movsb
dec
setae
adc
and
enter
lds
mov
shll
add
mov
push
cmpsb
cwtl
push
xchg
lea
loop
push
mov
mov
jl
and
aaa
repz
addl
xor
cli
out
sarl
ret
push
js
arpl
movsb
popf
stos
adc
fs
sahf
inc
stos
in
xchg
mov
xor
cmp
popa
popa
clc
fadds
push
icebp
sub
iret
arpl
pmulhw
loop
xor
lds
mov
dec
mov
loop
and
mov
mov
push
sub
inc
aas
mov
jle
sub
pop
or
in
xchg
inc
mov
sub
pop
xor
aam
cmp
mov
pushf
xor
jb
addl
pop
sbb
jecxz
ret
dec
inc
adc
jmp
inc
sbb
jb
pop
imul
sarl
std
pop
pop
js
and
dec
add
test
and
adc
mov
push
add
in
cmpsb
into
call
add
lahf
gs
aas
lret
dec
scas
dec
inc
movsl
xchg
sahf
mov
lea
xor
pop
mov
xchg
repz
dec
jg
adc
mov
xor
lea
and
sbb
jns
jo
ficoms
xor
jle
mov
or
cld
aam
or
push
jnp
jbe
inc
aad
lods
xor
ljmp
cwtl
stos
inc
aas
cmpsl
jns
ds
pusha
into
stc
repnz
lret
testl
lret
mov
dec
pop
sub
shlb
in
mov
jnp
pop
call
xchg
mov
fwait
dec
inc
imul
sbb
mov
adc
and
fildll
mov
xlat
fisttpl
jg
shrl
sub
test
shr
lcall
lret
fdivrs
cltd
stos
add
push
jle
enter
mov
not
clc
int3
popf
into
lret
movsl
mov
jecxz
sub
cmove
iret
push
and
fs
sub
fimuls
sbb
shll
mov
mov
ret
cwtl
out
mov
imul
jp
lret
orl
lods
and
aad
and
push
push
clc
aam
mov
mov
jmp
push
loopne
call
mov
jo
push
push
push
push
fists
mov
inc
iret
adc
sahf
mov
xor
push
push
dec
xor
adc
add
popa
popa
jg
inc
mov
sub
mov
inc
inc
pmulhuw
xor
sub
cltd
shlb
pop
xchg
stc
stos
ret
dec
lcall
xchg
cmp
jecxz
adc
jecxz
dec
jecxz
sbb
mov
pop
and
jno
lret
jmp
fs
std
jno
pop
inc
or
dec
cmp
sahf
and
and
push
mov
sbb
jmp
lret
sbb
adc
mov
mov
and
inc
test
test
dec
xchg
mov
mov
xor
add
cs
sub
cmp
dec
pop
cmp
or
xchg
inc
push
sbb
or
ss
mov
dec
or
btc
xor
mov
std
dec
ret
mov
and
icebp
inc
xchg
adc
ret
loope
mov
int3
int
jno
adc
sub
xchg
cli
xor
mov
bound
cmp
pushf
dec
or
sbb
in
call
lea
test
jae
adc
stos
cmp
icebp
push
adc
test
xlat
bound
pop
arpl
inc
negl
mov
sub
mov
cmpsl
or
rcrl
inc
aaa
sbb
pop
andb
mov
lret
adcb
lods
iret
in
and
lea
sahf
sbb
inc
cmp
mov
cmp
push
sbb
mov
inc
cmp
ja
stos
jnp
mov
push
out
jmp
test
stos
in
mov
dec
scas
cmpsl
inc
cmpsl
outsl
pop
mov
in
fcompl
aas
push
insl
ja
jae
jecxz
xor
ljmp
repz
ret
mov
sub
sar
mov
or
xor
mov
cmp
push
mov
pop
inc
ljmp
bound
push
roll
scas
divb
mov
cmpsl
bound
cltd
cwtl
cmp
jnp
xor
jmp
sub
push
jno
pop
mov
popa
movsb
pop
hlt
adc
cmc
cmpl
xor
push
push
adc
pop
in
cmc
xchg
fwait
movsb
hlt
dec
mov
inc
call
shll
fwait
std
test
and
xlat
outsl
and
jno
jl
jmp
out
mov
jns
fbstp
inc
xchg
pop
pop
mov
push
fs
lods
jp
sbb
add
mov
es
sbb
adc
sti
repnz
push
or
mov
cli
stc
es
mov
imul
cmp
mov
fidivrs
push
loop
sub
cmp
dec
outsb
push
cmc
outsb
movsl
test
hlt
dec
add
fidivrs
mov
jb
mov
push
movsl
inc
cmp
mov
out
insl
bound
ret
sub
mov
bound
test
xor
imul
xor
movsl
int3
rolb
lcall
je
xor
mov
mov
icebp
aam
sbb
xchg
popf
js
or
xor
dec
outsb
or
jecxz
adc
movsl
sub
les
aam
sub
mov
mov
mull
xchg
jl
repnz
daa
decb
loopne
inc
sahf
loop
push
inc
out
inc
pop
push
sub
jp
aaa
jo
inc
in
in
mov
pop
ljmp
popa
pop
jae
pop
rcrl
lods
adc
je
push
xchg
dec
inc
xchg
sbb
repz
adc
fs
in
into
popf
inc
add
push
pop
jo
jl
stos
mov
xchg
mov
mov
out
js
cs
je
jg
xor
sub
lea
nop
mov
jo
sub
fcmovnb
mov
out
mov
mov
adcl
inc
dec
push
jp
jo
in
push
cmp
fcmovnb
into
je
cmpsb
cwtl
mov
or
insl
faddl
movsl
in
adc
pop
or
ret
xchg
out
or
sbb
dec
jmp
lds
fnstenv
jne
lea
mov
or
jnp
inc
jl
mov
pushf
or
jae
inc
push
push
push
test
cli
stc
aas
sbb
xor
adc
sbbb
std
icebp
ficoml
or
dec
jns
or
mov
imul
movsl
inc
rorb
outsb
lods
test
mov
stos
insl
dec
leave
or
ret
scas
mov
cld
dec
loopne
mov
hlt
push
pop
std
rclb
loop
cmpps
dec
push
inc
enter
sub
cmp
aaa
loope,pt
mov
je
jge
xchg
mov
mov
mov
push
push
in
mov
fs
aad
pop
dec
ja
push
mov
das
arpl
jno
jg
push
xor
sub
in
clc
stos
movsl
sbb
lds
add
lcall
and
sub
mov
ja
shrb
add
in
xchg
push
aas
pop
cmpsb
mov
daa
xchg
fimull
sahf
in
aas
dec
push
sbb
pushf
fsubrl
outsl
icebp
sbb
loopne
dec
pop
cltd
mov
xor
sub
divb
or
push
mov
push
fbld
sub
mov
cltd
mov
mov
jmp
sbb
bound
stos
popf
mov
vaddps
and
and
sbb
jbe
pop
das
and
inc
cmpl
adc
into
inc
cmp
add
mov
std
jb
jns
call
pop
mov
cmc
incb
dec
pusha
and
add
sbb
in
insb
fistpl
jge
cli
mov
std
and
aam
lods
jmp
ret
mov
nop
adc
ja
mov
add
testb
cmpsl
scas
std
sub
and
add
dec
push
adc
loopne
push
sbb
sub
add
mov
pop
das
fistpl
pusha
in
lock
imulb
and
out
add
aad
out
shl
repz
jge
out
mov
movsl
dec
or
adc
fistpll
or
es
xchg
pop
xchg
shll
ds
jo
lods
mov
mov
ja
jnp
jp
enter
test
adc
mov
pop
sar
jmp
push
cmp
mov
jmp
adc
cmp
add
mov
test
xchg
popf
movsb
cwtl
pop
shlb
add
movsl
pop
fs
loop
adc
ja
test
cmp
das
inc
cmp
lock
cmc
enter
sub
test
sbb
mov
loopne
lret
mov
leave
sbb
das
push
and
pcmpgtd
outsb
mov
leave
jecxz
cmc
xchg
xor
push
iret
hlt
daa
xchg
adc
stos
pushf
sbb
imul
ja
test
push
ljmp
jnp
push
bound
or
mov
and
lock
pushf
inc
xor
and
push
and
push
fcomps
mov
scas
jb
clc
mov
mov
adcb
es
sbb
loopne
lahf
pop
mov
inc
aaa
ja
add
data16
jmp
mov
inc
call
into
mov
xchg
cltd
xchg
xor
lret
adc
and
pop
or
inc
insb
push
jmp
out
and
push
lea
lods
jne
popa
aam
dec
insb
aam
adc
mov
cwtl
and
mov
sarb
dec
cmp
sub
xor
push
lcall
and
add
mov
push
add
mov
clc
jle
jb
dec
mov
dec
sbb
daa
ja
add
popa
add
test
xchg
or
xchg
adc
sub
push
test
fwait
mov
dec
aad
call
pop
mov
adc
sub
jmp
mov
lcall
mov
inc
xchg
sahf
sahf
leave
add
stc
stos
push
xchg
adc
lock
pop
pop
xchg
scas
adc
mov
iret
jl
fisubl
cmp
mov
pop
fs
xchg
mov
ret
sbb
jg
sub
mov
add
mov
jae
mov
mov
out
dec
jae
dec
dec
aas
mov
add
xchg
lods
xor
push
outsl
test
mov
pop
nop
pop
adc
sarl
jbe
je
aaa
add
inc
shll
aam
shrl
or
enter
mov
nop
test
cmp
mov
pop
push
pop
or
mov
xchg
adc
adc
addb
fnstsw
out
xchg
daa
sbb
mov
pop
movsb
lcall
xchg
orl
fs
sbb
call
mov
mov
ret
mov
repz
test
cmp
dec
dec
andb
rolb
loope
add
sbb
inc
sub
in
outsb
outsb
mov
xchg
int3
outsb
mov
adc
cmp
sbb
scas
cli
dec
adc
pop
lcall
mov
scas
mov
jp
fisubl
cwtl
fwait
sbb
sbb
fiaddl
mov
out
ljmp
cmpsl
mov
movsl
out
or
test
sub
rcr
mov
xor
mov
popa
push
roll
push
mov
push
cld
in
cmp
out
jmp
icebp
das
and
adc
jle
sbb
lods
fdiv
jl
and
sahf
mov
stos
xor
pusha
fwait
xchg
pop
push
out
fcom
addr16
pop
xchg
add
clc
dec
aam
sbb
sub
mov
mov
loopne
bound
inc
jge
fimull
inc
jne
sbb
sub
cwtl
lock
mov
adc
ljmp
iret
lock
mov
mov
mov
cmp
call
cld
sub
inc
ds
jns
sbb
mov
or
hlt
inc
repnz
stos
mov
sbb
jbe
test
bound
adc
sbb
xor
and
push
sbb
lea
js
repnz
xor
mov
orb
lods
and
adc
or
std
sub
cs
inc
xor
or
js
mov
sbb
mov
push
and
sub
repz
push
pop
sub
mov
das
dec
idivb
pop
push
xchg
inc
sub
or
scas
xor
push
adc
rolb
pop
and
pop
test
fldz
dec
sub
push
pop
xchg
testl
pushf
test
mov
xchg
addb
repz
testb
inc
mov
mov
dec
div
and
sub
fisubrl
cs
add
cli
and
xchg
add
adc
les
lret
in
pop
mov
inc
xchg
dec
and
cmp
fadds
lcall
add
lcall
push
jns
jg
fwait
pop
out
add
fcoml
xchg
sub
out
loop
jmp
mov
int3
inc
pushf
mov
cli
mov
adc
add
adc
jmp
push
cmpsl
test
sub
sbb
push
dec
loopne
neg
and
ja
jle
jne
sub
add
lods
das
add
xchg
aad
mov
into
sub
or
das
rcrb
mov
lahf
add
aas
rorl
cwtl
dec
jge
movsl
out
pop
xchg
mov
or
sbb
adc
lds
in
in
faddp
lahf
or
mov
and
pop
js
std
xorl
and
push
fwait
and
outsb
ljmp
inc
cwtl
es
push
inc
fnstsw
push
clc
mov
ljmp
fists
mov
xchg
imul
mov
ljmp
sub
in
sub
and
pop
in
imul
bound
add
lods
shl
add
mov
mov
into
xchg
insb
mov
adc
mov
xchg
int
enter
sub
jne
movsl
and
test
xor
xchg
in
mov
sarl
pop
ja
inc
fsubrl
or
scas
lea
adc
sub
jns
sar
lcall
sbbb
arpl
pop
clc
and
hlt
or
inc
mov
push
sbb
jl
jns
in
sbb
daa
nop
mov
sbb
cltd
inc
aas
mov
je
jmp
pop
repnz
sbb
call
jp
std
ss
mov
mul
movb
sub
test
push
cmp
inc
mov
aas
cmp
test
int3
lret
jnp
in
movsb
pop
imul
pop
sub
movsb
in
adc
or
add
jb
jle
out
jge
push
cltd
adc
push
int
and
lds
adcl
jmp
xorb
outsb
jg
cmpsl
bound
jae
cmc
jae
inc
outsl
int
insl
sbb
inc
or
mov
mov
adc
add
jbe
cmc
jo
cmp
mov
jne
adcl
hlt
sub
scas
sub
insl
hlt
inc
mov
ds
jns
bound
mov
pop
or
fucomip
shl
lahf
cmp
jns
jno
sub
mov
negl
imul
jo
cmp
and
cmp
push
cmpsl
aam
cmp
adc
in
inc
stos
mov
push
mov
mov
in
repz
int3
jmp
int3
adc
scas
scas
sbb
aas
out
sbb
push
nop
mov
xor
stos
adc
fdivrl
lcall
add
mov
add
mov
cli
and
mov
std
push
fisubrs
faddl
outsb
rorl
arpl
inc
push
xchg
dec
or
idiv
test
xor
or
hlt
or
movsl
mov
sahf
aas
shll
xchg
or
lods
push
sub
sti
xor
movsl
sbb
xchg
add
sahf
jbe
stc
pop
test
fiadds
push
jp
mov
mov
mov
and
jne
mov
sbb
mov
in
lcall
fistps
sub
int
mov
sbb
mov
pusha
ret
rcll
into
adc
xor
sub
add
test
inc
jns
cmp
fsub
inc
jecxz
mov
xchg
scas
fsubs
push
vpmuludq
in
dec
inc
divb
sahf
dec
inc
fnstsw
inc
cmpsb
mov
lock
lret
mov
add
dec
pop
jne
mov
dec
push
into
ds
leave
dec
and
ljmp
arpl
and
clc
sahf
lock
mov
mov
cwtl
xchg
fsubs
ds
add
sbb
xor
inc
sti
xor
outsl
lock
pop
jns
mov
rorb
push
mov
or
adc
dec
adc
inc
xorb
cmp
call
and
dec
rolb
add
pop
adc
mov
out
push
stos
data16
xchg
mov
shll
enter
mov
inc
jl
push
scas
call
clc
les
dec
das
mov
gs
dec
bound
dec
std
pop
jnp
mov
subb
sub
pop
popa
loopne
jle
popf
in
das
ret
imul
or
sbb
jp
mov
jbe
stc
xchg
sbb
mov
or
mov
mov
xchg
jecxz
out
push
lahf
icebp
adc
add
outsl
rorb
inc
and
shl
xchg
sbb
or
rclb
lods
cltd
adc
sbb
test
mov
sbb
cwtl
cld
sub
adc
mov
lods
call
test
inc
fs
insl
fadds
inc
mov
dec
jp
sbb
out
lock
push
and
pop
icebp
add
jp
jno
mov
pop
call
sbb
adc
rcrl
adc
pop
pop
mov
dec
and
pusha
sbb
aad
sbb
orb
mov
sub
xlat
mov
ljmp
jg
ds
fcmovbe
push
inc
popa
adc
scas
mov
xchg
movsb
sub
ljmp
and
mov
xchg
mov
mov
gs
rorb
sbb
fdivs
push
xlat
or
jae
out
mov
or
pop
jg
inc
jno
cltd
out
nop
popf
ret
in
push
rol
lahf
jecxz
and
sub
insl
dec
dec
fiaddl
xor
jl
pusha
jnp
out
nop
fmul
call
clc
lcall
push
aad
push
adc
mov
nop
jle
jns
sbb
mov
popf
mov
mov
jmp
ret
mov
inc
mov
add
scas
cwtl
xor
addl
cmpsl
outsb
loopne
int
lret
xchg
sub
call
or
mov
pop
sbb
inc
dec
popa
int
les
xor
mov
loop
mov
pusha
or
push
sbb
jmp
sub
inc
and
popa
adc
jp
adc
jae
rcr
sbb
push
cltd
mov
js
fxch
imul
enter
mov
jge
jmp
out
pop
ret
pop
mov
cltd
dec
pop
addr16
mov
lret
or
stos
push
std
jns
mov
xchg
in
cltd
xlat
shll
test
fs
outsl
xchg
xor
aam
es
cmp
pop
and
cld
fstl
mov
xor
jecxz
push
mov
repnz
arpl
subb
mov
popa
test
cmpsl
jb
out
lcall
sbb
stos
adc
aad
ljmp
xlat
cwtl
in
jmp
js
push
call
leave
sbb
aam
lcall
mov
push
lods
adc
insb
push
sbb
addr16
cmp
dec
lock
repnz
cmp
stc
pop
scas
into
cltd
inc
shlb
or
leave
xchg
mov
or
mov
inc
xor
pop
ljmp
jbe
push
loope
out
loopne
addb
mov
iret
push
dec
stos
sbb
add
mov
lods
jecxz
fnstsw
lcall
cmpsb
xchg
rcr
push
add
xor
lea
adc
add
out
outsl
push
adc
clc
xchg
in
imull
adc
mov
xchg
lcall
mov
mov
int
int
lcall
addb
inc
aad
jo
mov
std
pop
pop
jb
and
ret
out
call
cmp
lret
sti
inc
push
mov
popa
sbb
xor
out
lahf
mov
adc
call
push
lock
lods
cmpsl
pop
mov
lahf
add
inc
daa
jae
mov
ss
std
push
jbe
aas
leave
inc
movsb
jl
pusha
mov
je
sbb
je
dec
or
mov
inc
pop
adc
pop
dec
call
sub
rcll
call
inc
cmp
push
lret
add
movsl
cmp
xor
pusha
adc
push
push
inc
fdiv
jnp
inc
sbb
scas
test
mov
inc
cmpsb
lock
inc
into
ljmp
add
jns
movzwl
inc
andb
xor
pop
sbb
insb
adc
pop
stos
dec
mov
ja
jmp
or
popf
dec
fmuls
jne
mov
fdivrl
daa
loop
xchg
or
mov
sub
lock
cmp
sbb
aad
pop
inc
repz
jl
adc
push
ret
nop
cli
std
mov
ss
je
sbb
ss
pop
arpl
movsl
mov
pop
push
xchg
xchg
mov
gs
xor
ja
clc
mov
loope
mov
fwait
arpl
ljmp
leave
jmp
cli
pandn
mov
fwait
xchg
imul
lret
adc
mov
or
jle
mov
je
loope
sti
into
push
jle
and
out
adc
jnp
out
fs
jns
jo
leave
fcomip
add
comiss
mov
mov
outsb
and
mov
sti
pop
inc
adcl
push
jmp
xchg
sub
inc
cmpsl
cwtl
sub
xchg
jmp
ffree
sub
dec
lcall
mov
inc
ss
loop
mov
and
push
iret
mov
xorl
ret
cmpsb
push
fstpt
int
sbb
pushf
lea
push
es
mov
lahf
aas
xchg
push
mov
insl
push
jg
dec
or
sub
and
sbb
push
frstor
test
add
sbb
aad
outsl
and
jae
mov
jp
push
mov
in
push
push
pop
jl
mov
jae
push
inc
inc
jecxz
xchg
and
repz
cmpsb
mov
je
sbb
or
in
mov
sbb
rcrb
out
mov
push
cli
outsb
add
cld
mov
ljmp
xor
divb
inc
fisttpl
insl
mov
jl
jbe
pop
jle
pop
mov
jne
push
ja
mov
ret
adc
mov
pop
pop
cmpl
push
dec
mov
pop
out
sarb
xor
fmuls
cmp
xchg
xor
fisttpl
sbb
mov
sahf
lcall
imul
outsl
mov
sub
mov
fwait
mov
xchg
sbb
mov
pop
out
outsb
jo
fistpll
fsubr
repz
fxch
shlb
xchg
cmpsb
xchg
scas
adc
enter
leave
bound
sub
aaa
adc
mov
xor
add
call
rcrb
dec
dec
mov
std
inc
dec
cs
cmp
fmuls
leave
add
push
adc
push
inc
or
xor
inc
pop
cmc
mov
push
xor
push
enter
shrb
adc
dec
je
push
cwtl
inc
xchg
imul
adc
pop
loopne
xchg
fwait
sub
ret
sbb
popa
push
sub
in
in
push
stc
lea
mul
in
jo
cli
arpl
hlt
inc
imul
jle
jae
xor
in
not
repnz
or
jmp
cmp
dec
sub
mov
mov
dec
shlb
cmpb
jno
jg
test
lahf
pop
mov
scas
int3
add
xchg
mov
pop
sub
pushf
mov
sbb
fwait
inc
sti
pop
sub
hlt
shrl
bound
addr16
scas
mov
inc
es
xchg
jno
les
dec
and
add
jne
pop
data16
jnp
mov
xor
sbb
xchg
dec
loope
sti
ror
test
in
loop
mov
fisubrs
mov
pop
loope
outsl
xor
std
imul
jbe
stos
mov
fistpll
call
or
push
inc
icebp
call
out
loop
adcl
sbb
lods
dec
sub
rclb
mov
mov
adc
inc
ficomps
outsl
shll
dec
inc
fnstenv
sub
mov
mov
and
shrl
jl
arpl
push
in
jle
in
ja
jp
ja
pusha
testb
iret
lret
xchg
scas
bound
lods
lcall
mov
lahf
add
xor
mov
loopne
mov
lret
jnp
daa
faddl
in
aad
mov
movsb
push
pop
filds
dec
aam
test
out
imul
cmpsl
jp
sbb
pop
leave
jecxz
dec
push
xor
mov
mov
clc
mov
out
add
cmp
test
loop
ds
xor
mov
jo
mov
out
aas
add
cli
jns
sub
ret
imul
jae
sub
dec
lods
xor
mov
jo
fisubrs
inc
jmp
fldl
pop
pop
cli
in
shlb
or
adc
in
lods
and
add
inc
leave
xchg
jle
push
fwait
pop
fwait
xchg
push
and
dec
sub
imull
das
lret
jmp
sbb
adc
mov
popf
lret
mov
popa
js
add
and
sub
mov
scas
pop
inc
mov
out
add
jo
add
mov
ds
jae
loope
cmc
insl
jge
int
mov
jle
out
or
icebp
daa
mov
icebp
repnz
jl
xchg
push
mov
rolb
jno
xor
fsubrl
inc
dec
dec
cli
fiadds
sbb
dec
bound
push
mov
jge
js
push
loop
push
xor
sub
jp
jle
das
addr16
cmp
pop
pop
fwait
in
loope
into
push
mov
sub
sub
xor
mov
les
stos
mov
inc
xor
inc
fcompl
inc
adc
push
js
inc
add
jno
pop
add
loopne
lcall
cmpsl
arpl
fisubs
iret
nop
fdivl
sbb
sti
call
mov
mov
loopne
lock
or
mov
jg
insb
int3
fdivs
ljmp
or
stos
fldenv
into
xchg
inc
repz
and
call
push
sar
mov
cmp
mov
add
fbstp
imulb
flds
xchg
sbb
adc
ret
dec
jns
mov
xor
pop
inc
lods
fucomp
ret
je
pop
xchg
das
pop
aaa
ficoms
xchg
mov
mul
adc
out
and
sarb
cmp
mov
sub
iret
ficompl
push
pop
lahf
loopne
inc
and
adc
imulb
sub
stc
push
out
mov
icebp
rolb
fisttpl
mov
push
fwait
jmp
test
mov
shll
outsb
cmp
cmp
pop
clc
nop
jecxz
gs
ja
ja
int
xor
and
mov
rorl
inc
xlat
repz
out
add
jl
in
add
jnp
sbbl
cli
loop
pusha
outsl
inc
outsl
mov
mov
dec
push
mov
pop
sbb
nop
rolb
in
cmp
xor
mov
mov
fbstp
mov
setb
sbb
sub
lods
imul
fsubl
mov
cwtl
ja
mov
sub
mov
lcall
xchg
mov
out
dec
mov
push
stc
sub
lret
mov
jge
add
dec
push
dec
push
int
sbb
xchg
in
mov
push
imul
xor
jecxz
or
push
mov
sbb
or
incl
push
cmp
fstpt
pop
dec
in
negb
cmpsb
xor
out
adc
adc
jge
or
icebp
xchg
adc
and
cmpsl
add
lock
into
outsb
out
xchg
mov
mov
or
enter
cmpsb
xchg
clc
mov
aam
jecxz
push
sbb
push
mov
jo
lods
sahf
leave
pop
mov
test
call
dec
lahf
popa
pusha
pop
loopne
imul
xor
fsubrl
pop
scas
jns
adc
push
sbb
ret
and
jbe
cmp
mov
popf
lock
movsb
mov
lods
xchg
es
call
pop
cmp
loopne
arpl
lock
sub
mov
dec
dec
adc
cmp
inc
dec
fadds
aaa
adc
adc
cvttps2pi
xchg
and
inc
xor
mov
int3
add
jo
dec
cmp
movsb
pusha
stos
mov
dec
lret
lock
sti
cmovb
cli
ficompl
sbb
in
dec
shrb
je
scas
aaa
aaa
cltd
sti
imul
xor
push
add
pop
xor
xlat
mov
pop
cli
mov
loope
jp
lods
or
sub
sbb
xchg
and
cmpsl
xchg
and
add
jnp
arpl
cmp
inc
daa
xchg
or
ret
ds
insl
mov
out
jnp
cld
hlt
add
loope
and
xor
adc
mov
call
scas
xchg
mov
shl
dec
addl
rorl
and
dec
jg
pop
ficomps
cmp
xchg
mov
jne
test
jp
or
addr16
mov
ja
adc
es
inc
inc
mov
push
mov
push
add
call
cs
sub
dec
mov
in
test
cli
and
incb
sbb
inc
lcall
out
dec
lock
lods
xor
fldenv
inc
jns
mov
dec
imul
pop
test
enter
adc
idivb
jge
decl
adc
pop
dec
pusha
push
insb
sbb
popf
lds
loopne
jle
dec
jne
js
fadds
xchg
ljmp
imul
frstor
lds
pop
fsubs
mov
inc
sub
inc
add
mov
loope
mov
mov
fidivrs
fiadds
mov
dec
shl
adc
xor
imul
jns
mov
jp
jg
cmc
fsubrl
sub
dec
xlat
jecxz
incb
push
ret
pop
sub
pop
sub
mov
and
pop
mov
leave
adc
inc
call
add
mov
xchg
scas
orl
inc
in
and
mov
xchg
data16
mov
cmp
pop
inc
or
sub
push
dec
mov
push
mov
xlat
sub
les
xor
lods
repnz
hlt
into
mov
or
mov
shlb
mov
divb
daa
mov
mov
xor
orb
loop
xchg
ja
dec
adc
inc
jne
sub
aaa
jmp
out
mov
jae
das
inc
and
jno
cmp
adc
jp
jge
xchg
sub
mov
ljmp
aad
xchg
inc
cmpsl
hlt
bswap
shll
xor
sbbl
shll
add
pop
add
sbb
lods
into
sti
aas
in
icebp
sbb
fdivl
mov
mov
mov
ret
js
leave
cld
int3
lock
cs
pop
sbb
xor
out
sbb
sub
in
movsl
orb
push
cmp
imul
loop
mov
pop
jg
adc
shl
mov
push
push
pop
inc
fsubr
add
mov
inc
aam
outsl
adc
push
pop
aas
inc
push
pop
mov
cmp
or
mov
and
into
or
or
cli
xchg
out
xor
cmp
xor
pop
mov
adc
jne
cli
les
mov
lret
cltd
lock
cmpsb
cmpsl
enter
mov
mov
gs
push
scas
mov
test
je
inc
adc
daa
jnp
ja
shl
cmp
popf
or
fmuls
push
inc
cmpsl
mov
push
sub
pop
subl
decl
mov
mov
jns
lds
test
or
push
xchg
call
cmpsb
xchg
mov
add
xor
enter
pop
pusha
sahf
fldcw
dec
push
sbb
push
test
sbb
xlat
xor
subl
rcrb
pop
xchg
cmp
fcmovnbe
leave
jmp
jmp
cmp
inc
sub
outsb
ret
push
sti
adc
aam
mov
lock
jne
das
xlat
jg
push
aam
shl
shr
jmp
insl
sbb
sub
arpl
xorb
lahf
sbb
arpl
xor
sti
rcll
dec
jle
or
jge
and
stc
add
dec
push
sbb
cs
pop
into
movl
lret
push
dec
fcomp
sub
adc
in
addl
stos
mov
ret
inc
ds
dec
or
sbb
fcmove
jecxz
mov
imul
jo
jge
xchg
stc
mov
cwtl
and
mov
lahf
fiaddl
scas
popf
ljmp
fwait
repnz
push
mov
push
and
shll
jl
xchg
mov
int
jne
push
or
jne
add
fdiv
pop
mov
test
add
jne
cld
aaa
jl
inc
inc
sbb
repnz
xor
imul
sub
jae
and
xor
and
pusha
jno
es
adc
ss
xchg
mov
dec
fwait
pop
imul
stos
inc
scas
stos
sbb
int
mov
je
js
mov
mov
sarl
xchg
sub
in
push
popa
and
aad
mov
ja
xor
mov
test
iret
arpl
idivl
bound
popa
mov
xchg
out
push
inc
fadds
jns
lahf
xchg
jnp
xlat
in
lcall
and
test
xor
out
xor
fcoms
loop
nop
ret
das
mov
mov
mov
sbb
push
mov
jg
inc
cmp
scas
and
jno
pop
pop
mov
adc
cmp
jb
mov
inc
stos
aam
xchg
add
mov
mov
sarl
imul
bnd
dec
jno
hlt
in
loopne
adc
lret
adc
sbb
xor
into
adc
rcrl
or
repz
ss
faddp
fidivl
lret
dec
cmp
mov
loope
cs
or
sbb
test
insb
pushl
js
notl
push
adc
dec
je
push
rcll
dec
mov
int
call
out
popf
pop
jecxz
jmp
dec
test
xchg
pop
xor
clc
dec
gs
mov
and
add
cmc
mov
jbe
sbb
pop
fimuls
leave
sbb
mov
out
test
cs
insl
inc
adc
cmpsl
xchg
les
sbb
xchg
jg
cmp
jmp
icebp
ds
lcall
mov
cmpsl
sarl
push
and
mov
dec
adc
testl
mov
clc
ljmp
leave
cmp
subl
jl
cs
aam
jecxz
arpl
jne
push
mov
scas
cmpsb
in
cmp
sarb
es
out
nop
add
mov
push
insb
cld
pop
lds
sbb
xor
cwtl
mov
jge
push
dec
mov
pop
imul
xor
ja
mov
imul
xchg
xor
leave
daa
pop
ja
sbb
xchg
insl
aad
inc
mov
add
xor
test
jne
repnz
cmp
mov
imul
jne
mov
mov
or
pop
dec
inc
into
fisttps
ret
cmc
test
jl
mov
gs
lock
jecxz
aam
and
or
sbbb
sbb
repnz
icebp
pushf
pop
les
imul
inc
push
cli
push
mov
inc
mov
pop
dec
pusha
dec
mov
scas
xchg
stos
sub
movb
scas
jmp
out
xor
insl
jae
dec
cs
add
enter
fldcw
adcb
es
loopne,pt
les
fildl
add
loop
inc
sahf
repz
ret
fdivrl
pop
xchg
pop
inc
incb
add
sahf
push
dec
pop
je
sbb
mov
jl
mov
push
test
clc
or
sbb
js
imul
in
ss
ja
xor
add
cld
js
pop
mov
insb
push
sbb
inc
jns
sbb
and
leave
mov
push
jae
insl
out
shlb
aas
pop
mov
and
or
sbb
nop
cmp
rorb
mov
enter
jmp
loopne
or
add
sahf
fstpt
mov
or
shlb
lea
fistl
sti
sarl
ficoms
mov
dec
mov
popf
mov
test
in
ja
mov
sbb
cmp
xchg
mov
stos
or
push
test
sbb
mov
sti
cmp
sbbb
push
xorb
out
push
shr
mov
sti
push
and
jecxz
bound
jbe
aad
hlt
mov
adc
cmc
jnp
mov
popf
and
push
and
repz
jg
iret
cmp
lahf
aam
mov
mov
imul
push
fistps
cmc
out
cmp
sbb
fs
imul
jbe
or
daa
jle
pop
jnp
inc
cs
xchg
mov
shl
cwtl
imul
sbb
test
mov
in
push
push
sub
stos
cmp
dec
loopne
sub
je
mov
and
adc
jno
test
xchg
sub
cmpsb
xor
push
scas
int
sarb
add
iret
aam
sahf
jmp
test
in
rcrl
icebp
adc
shl
xchg
push
cmc
lahf
je
cwtl
add
movsl
and
and
dec
sti
sub
push
mov
popa
insb
or
data16
in
enter
jp
test
repnz
fsts
sbb
rcll
sub
js
movsl
mov
stc
pop
pop
xor
das
sbb
and
push
jmp
int
inc
subl
dec
test
ja
mov
shr
add
in
sbb
mov
inc
fidivrl
stc
dec
js
addb
jp
out
call
cltd
jnp
loopne
or
icebp
ljmp
ss
pop
repz
and
pop
cli
movsb
shlb
jae
pop
popf
movsl
inc
movsl
sbb
xchg
dec
lea
loope
stos
fidivrl
int3
popa
out
mov
push
pop
inc
lods
mov
jge
push
stos
inc
pop
push
mov
push
daa
mov
iret
inc
lret
je
jp
inc
repnz
jne
aad
inc
xchg
pop
mov
mov
xchg
mov
sarl
rorb
xchg
call
ror
and
sub
addr16
out
aam
xchg
jae
sub
mov
out
clc
hlt
sbb
stos
mov
adc
adc
jg
inc
gs
xchg
inc
dec
repz
mov
mov
dec
cltd
or
push
sti
bound
xchg
movsb
in
je
insb
shrd
xor
pop
pop
and
test
xlat
cmp
into
and
pusha
xchg
addb
aad
push
inc
fwait
push
mov
jg
cmp
outsl
data16
pop
inc
rcr
push
test
adc
sbb
xchg
add
push
les
test
push
addr16
mov
pop
dec
aad
out
cmp
lcall
repnz
or
shll
push
decl
jp
jb
addl
test
into
jnp
mov
xor
sbb
mov
addr16
cli
fcmovne
and
lods
mov
pop
aam
mov
and
or
mov
pop
fnsave
scas
adc
jb
fists
xchg
sbb
clc
iret
sbb
pop
mov
jb
shrl
push
rcrb
mov
sbb
repnz
xor
cmp
sub
test
testb
in
inc
push
cmpl
ret
or
cld
inc
stc
mov
add
jo
xchg
jne
xchg
xor
cltd
xor
cmc
add
or
loop
andb
mov
int
popa
mov
bound
in
sub
mov
mov
test
and
sub
mov
adcb
loope
scas
arpl
nop
push
lret
mov
sbb
call
dec
mov
push
ret
jle
fidivrs
je
cmp
popf
adc
add
mov
jl
lret
psubusw
mov
cltd
push
cmp
add
jge
mov
div
mov
cmpsl
xchg
movsl
adc
fwait
imul
iret
imul
and
shll
jle
ret
int3
and
mov
lahf
sub
test
jmp
into
pop
cmpxchg
mull
pusha
mov
xor
shlb
jge
or
imul
and
iret
into
ret
xchg
mov
inc
dec
cmpsl
pop
add
mov
test
dec
push
es
lea
lds
cmp
xchg
or
lret
mov
cmpsl
ret
push
pushf
inc
xchg
jne
pop
dec
stos
pop
incb
cltd
push
enter
mov
sbb
sbb
fdivl
add
lods
add
xlat
ret
jmp
lods
ds
lea
addr16
adc
aam
mov
dec
testb
lock
xchg
adc
pop
xor
leave
sbb
pop
inc
jno
test
hlt
jle
popa
fwait
adc
hlt
daa
xlat
daa
or
dec
popf
mov
leave
mov
mov
inc
fisubrs
pop
push
pop
jmp
icebp
imul
cmp
out
mov
leave
xor
add
xor
push
lods
push
push
mov
movsl
xchg
jge
jecxz
adc
fadds
je
inc
sahf
mov
add
stc
in
ds
fcoml
adc
mov
insb
cmc
and
movsb
pop
inc
inc
nop
sbb
std
bound
lea
mov
push
dec
mov
adcl
push
dec
pop
xor
movsl
push
dec
leave
dec
jle
mov
call
fbstp
dec
fstp
test
adc
aam
push
adc
or
mov
adc
aad
enter
repnz
test
add
loope
dec
rcrb
dec
shll
cli
mov
stos
xor
adc
sub
mov
lds
jns
mov
fidivrl
jmp
fnstenv
ja
sub
add
xor
rolb
lret
sti
clc
loopne
dec
subl
sub
mov
orb
aam
jno
dec
jle
jp
adc
out
xor
cmp
lods
push
aaa
inc
shlb
in
add
add
xor
in
lock
loope
mov
or
imul
push
xchg
aad
data16
xchg
cwtl
pop
iret
nop
shld
cmpsb
cltd
and
shlb
xchg
es
call
fnsave
loope
mov
imul
into
mov
and
shll
mov
mov
xchg
jle
mov
sub
sbb
mov
jno
xor
in
mov
mov
sbb
jbe
adcb
cmp
outsl
inc
movsb
jo
mov
es
push
cmp
push
cli
mov
nop
push
lahf
popa
fnsave
mov
jmp
cli
sbb
inc
add
or
in
je
mov
jae
adc
rcrl
daa
ljmp
mov
pop
adc
sbb
jne,pn
insb
sbb
pop
in
rcrb
outsw
lea
das
or
or
rorb
rcr
xor
push
add
daa
pop
sub
push
clc
sub
shl
push
xchg
fstpt
mov
mov
scas
mov
sub
xor
dec
sub
xor
rol
sub
fidivrl
hlt
stc
xlat
adc
sub
dec
movsl
adc
or
jle
sti
sbb
xchg
mov
lods
in
lahf
inc
cmc
insl
stc
in
fnstcw
inc
xchg
lods
mov
inc
mov
add
xor
jp
jno
or
xor
cmp
jp
pushf
jge
sub
lds
insb
cmp
loope
adc
inc
jle
and
sbb
mov
xor
sarl
xlat
mov
pop
sbb
xor
pop
enter
popa
sub
cmpsb
into
adc
adc
int
jecxz
mov
cmp
mov
jg
ljmp
xchg
roll
ret
into
xchg
or
cltd
xchg
mov
mov
cmp
mov
test
jnp
inc
mov
icebp
add
lahf
mov
dec
int3
lret
mov
push
adc
push
push
cmp
push
inc
lret
clc
add
jnp
idivl
fxch
adc
mov
add
mov
mov
in
or
jmp
es
mov
mov
adc
cld
aas
adc
fmulp
and
sub
jg
mov
add
push
sub
jp
pop
imul
sub
leave
pop
xor
icebp
addr16
jo
icebp
jnp
adc
lea
movsl
or
push
mov
adc
pop
pop
test
sub
or
out
mov
out
pusha
xor
incb
outsl
push
cmp
or
xchg
stos
add
lds
jecxz
sbb
jl
mov
pop
mov
adc
add
cmp
mov
adc
sbb
fwait
test
cltd
mov
nop
jns
or
xor
sahf
sub
test
push
cltd
test
ret
lock
rorl
pusha
mov
lret
dec
add
imul
sub
add
mov
cmp
out
cs
int3
lods
cld
sbb
lock
in
lds
lret
add
push
out
sahf
aaa
cli
mov
ja
sbb
inc
pushf
mov
dec
rorb
add
repz
out
aas
lret
mov
cmpsl
mov
jne
sub
je
add
or
insb
pop
lods
lock
enter
dec
xor
fs
lret
dec
inc
mov
xor
jle
jecxz
mov
loopne
adc
and
and
cmp
dec
test
jg
test
xor
mov
push
mov
jno
aam
cmp
bound
xchg
jne
and
loopne
mov
shl
mov
push
jb
mov
push
mov
cmpsb
nop
adc
pop
xchg
sbb
adc
es
mov
mov
or
push
jae
xchg
movsb
cs
fcmovnu
test
cmp
int
insl
pushf
cmp
dec
sbb
insl
fisttps
xchg
lcall
in
mov
jno
ret
pop
test
into
jne
stc
leave
out
decl
push
and
in
cmc
xchg
aas
popa
lea
pop
clc
pop
pop
mov
imul
pop
push
mov
bound
addl
mov
push
add
loope
mov
mov
push
or
pop
scas
mov
mov
cmpsl
ljmp
lcall
dec
mov
lds
int3
dec
adc
fs
mov
int3
jnp
mov
ffreep
jg
inc
js
lret
xlat
fisubrs
fsubr
xor
jmp
sbb
push
mov
fadds
jp
js
mov
xchg
add
lret
jo
jno
add
pop
insl
je
sahf
aad
ret
mov
aad
mov
xlat
inc
or
mov
clc
mov
sbb
loopne
xchg
repz
lds
mov
call
sbb
fucomp
ds
rclb
lods
jl
dec
sti
repnz
cli
push
test
jmp
pop
hlt
xor
iret
pusha
lds
bound
pop
jb
pop
or
push
imul
arpl
test
hlt
lods
ds
cmp
mov
rcll
movsl
data16
push
fnstenv
lcall
mov
mov
test
push
push
popf
scas
ja
mov
pop
mov
dec
popf
sar
je
sbb
and
pusha
jno
pop
pop
test
cwtl
xor
insb
arpl
imul
xor
sti
jbe
js
mov
in
cli
inc
mov
cmp
test
or
mov
in
enter
xchg
inc
aad
sub
or
pop
mov
add
loopne
sub
jmp
jb
xchg
pop
movsb
out
and
push
mov
in
int3
iret
and
lcall
push
fs
pop
imul
add
jl
imul
xchg
in
and
neg
loopne
push
dec
lret
scas
sub
lods
cmpsl
push
pop
out
xor
adc
rolb
xorb
fdiv
lds
cwtl
fs
dec
in
xchg
inc
loop
dec
and
pop
xlat
sbb
sbb
rorl
inc
and
aam
lcall
pusha
dec
leave
ljmp
daa
push
in
loope
rcrb
adc
fistpll
cltd
dec
movsl
mov
xor
pop
dec
pop
xchg
and
addb
andb
pop
pop
loopne
xor
cmp
mov
mov
cmpb
stc
fbld
mov
daa
gs
roll
rcl
pop
insl
sbb
ljmp
inc
mov
out
xchg
xchg
inc
mov
pop
movl
xchg
pusha
dec
fcompl
in
add
in
push
xchg
js
ljmp
jbe
mov
mov
adc
push
push
inc
adc
and
daa
cmpsb
cmp
ret
and
mov
jecxz
xlat
iret
scas
push
mov
push
shrl
xlat
ret
nop
test
adc
repz
out
xchg
jmp
lcall
cmpb
rcll
push
loopne
add
and
pop
icebp
ss
testb
or
lret
icebp
adc
nop
ffree
mov
jns
dec
dec
sub
xor
int
or
out
sub
sahf
adc
repnz
dec
adc
mov
dec
addr16
cli
lods
dec
test
push
and
mov
xchg
fistl
xor
lock
xor
xchg
add
cli
jg
daa
test
add
out
push
sub
xor
sbb
imul
and
xor
add
out
pop
outsb
inc
adc
out
sarb
xlat
add
mov
int
or
out
cmp
mul
xchg
roll
or
les
ret
out
adc
cmpsl
and
push
push
push
push
push
mov
jo
sub
sti
pop
xchg
jne
push
movl
adc
mov
push
fmull
mov
nop
and
sti
pop
insb
aas
and
dec
hlt
fdiv
inc
lods
xchg
fisubl
and
cmp
mov
push
dec
jg
sub
pop
push
in
dec
inc
adc
push
enter
icebp
cmpsl
aas
xor
jge
test
pop
outsb
cmpsb
test
mov
pushf
dec
mov
cmp
nop
pusha
movsb
jle
mov
mov
sbb
pusha
lds
mov
or
and
sub
cmpsb
mov
mov
outsl
xor
pop
sub
mov
shlb
sbb
xchg
mov
das
or
ficompl
mov
les
iret
mov
adc
cmp
js
xchg
es
mov
leave
fwait
pop
push
xor
in
mov
clc
jne
fnstenv
cs
repnz
dec
jl
dec
aas
mov
popl
bound
js
pop
call
scas
fisubrs
je
jno
sbb
or
push
mov
xlat
cmp
lret
jbe
sbb
and
cmpsl
nop
mov
xchg
mov
lods
jo
out
mov
pop
pop
and
es
xchg
adc
xchg
rorl
rclb
jbe
rcrb
daa
pop
cmp
in
cld
pop
mov
sbb
je
pop
cwtl
pop
iret
fdivp
ds
aam
popa
outsl
mov
rcll
loope
ret
dec
mov
sub
sub
ljmp
sahf
pushf
pushf
pop
dec
pop
adc
cmp
or
imul
adc
bnd
fistl
das
or
iret
insl
lea
into
or
cmp
xchg
pop
pop
in
icebp
sub
in
test
mov
das
cli
jle,pt
out
cmp
mov
mov
jmp
mov
pushf
mov
cld
out
pop
adc
addr16
roll
mov
aad
jno
push
inc
sahf
fists
rol
and
mov
jns
inc
ljmp
ds
popa
fs
jb
push
dec
xor
stos
mov
xchg
fsubl
mov
cltd
scas
sub
xchg
nop
mov
jecxz
xlat
dec
mov
int3
ja
or
sbb
clc
or
cmp
das
das
push
test
loopne
pop
push
fadd
cli
mov
pop
sbb
inc
addr16
mov
mov
sarl
or
sub
xchg
clc
dec
cmp
mov
inc
pop
movsb
or
shll
lret
out
clc
xlat
xchg
idivl
sbb
add
and
incl
cmp
lods
sbb
int
je
jae
xchg
shll
sbb
daa
dec
inc
jbe
jge
jae
mov
fdivs
push
stc
jg
adc
dec
adc
adcl
mov
clc
adc
out
lock
xchg
sub
xchg
mov
mov
sbb
jp
cmpsb
sbb
mov
pop
das
xor
clc
xchg
clc
inc
testl
fwait
pop
aam
decb
stos
test
sub
adc
icebp
pop
mov
int3
add
adc
sub
sahf
ret
gs
mov
xchg
sub
cltd
xchg
mov
mov
lds
pop
hlt
adc
lods
mov
and
pop
sbb
lcall
test
push
xor
or
mov
mov
rcr
jg
adc
shll
mov
cmpsb
in
or
xor
cmc
push
mov
jnp
pop
adc
adc
sbb
lret
inc
mov
cmp
jbe
aam
xchg
inc
das
pop
xor
xchg
adc
pop
jnp
cmc
cmp
and
int3
aam
sbb
lret
push
mov
lods
push
xchg
dec
leave
mov
push
add
lcall
fadds
fsubr
pop
jg
popf
fiaddl
mov
sub
jns
sub
imul
loop
fsubr
test
jnp
loope
fs
mov
or
movsl
stc
push
sub
sbb
and
out
pop
cmpl
fidivs
sbb
aaa
fiaddl
dec
pop
arpl
std
push
xchg
sub
inc
mov
sbb
and
or
jle
pusha
sahf
mov
xchg
movsl
loop
push
icebp
jno
inc
je
xor
fiaddl
insl
ljmp
sub
ljmp
pop
inc
icebp
cld
outsl
xor
and
push
sub
xor
icebp
cmp
sub
jmp
mov
lret
cmp
pusha
inc
int3
jbe
inc
bound
add
push
push
nop
lcall
rclb
dec
data16
pop
sbb
je
mov
cmp
test
mov
xor
imul
mov
add
mov
mov
into
adc
in
cmp
ffreep
divl
inc
sbb
rcrl
mov
xor
lock
lock
push
imul
lahf
jb
mov
pop
lock
loopne
dec
mov
cltd
mov
pop
cld
push
adc
les
out
fsubr
cmpsb
mov
adc
mov
daa
ja
push
mov
fcomp
and
fwait
lret
out
cmc
dec
xorl
repnz
jo
dec
pop
sbb
pop
mov
fwait
lds
cmp
ljmp
in
ret
imul
sti
int
mov
pop
xchg
mov
mov
ror
lahf
cmp
xor
js
and
popa
xor
add
and
xchg
arpl
cmp
das
lret
add
sbb
push
cmp
cmp
mov
adc
div
sbb
ret
jmp
call
inc
bound
inc
adc
fsubl
push
fsubrp
int3
mov
loopne
cpuid
xchg
cli
rcrl
outsl
stos
mov
push
or
hlt
xchg
das
call
leave
fisubrs
lods
inc
std
mov
xchg
xor
mov
jnp
adc
mov
movsb
fwait
inc
push
bound
inc
push
mov
sub
xlat
sub
call
cmc
mov
ret
push
into
sbb
mov
or
outsb
loopne
push
jns
push
jp
cld
adc
xlat
out
sar
and
xor
call
lods
repz
xor
cmpsb
lcall
out
adc
mov
cli
mov
cmpsb
jns
push
jns
dec
cmp
mov
lahf
sub
pusha
xchg
fldt
daa
and
lods
imul
in
addr16
in
push
xorb
in
ror
nop
pop
dec
aas
ss
cwtl
push
dec
enter
inc
pop
sub
push
add
xchg
inc
mov
mov
les
push
enter
jo
pusha
cs
int
imul
aas
rcll
cmp
mov
xor
lret
scas
movsb
jmp
stc
fcoml
mov
icebp
imul
xor
jecxz
shll
xchg
in
enter
sbb
mov
cmp
xor
stc
lret
imul
fcoml
mov
and
inc
xchg
psrld
and
push
in
loope
lcall
vmwrite
dec
int3
aam
sbb
jecxz
outsl
gs
das
adc
inc
jle
subl
push
int
jg
or
call
add
cmpl
adc
lcall
adc
push
push
dec
test
push
adc
jle
filds
outsb
movsl
fdivs
loop
outsl
lods
pop
cmpsl
add
sub
inc
rorb
jl
hlt
xor
pop
add
mov
out
insb
sti
adc
add
pop
add
dec
mov
cmp
lods
sbb
jecxz
xor
movsb
lret
and
or
clc
pop
sbb
lcall
std
sbb
in
popf
jl
jne
add
pop
sub
lahf
sub
dec
push
and
cltd
sbb
aaa
adcb
jg
xchg
inc
inc
adc
aaa
dec
inc
stc
cli
jnp
rolb
or
sahf
push
or
mov
ss
scas
xlat
mov
or
dec
xchg
cwtd
add
out
es
imul
testl
cmp
mov
rorl
pop
lods
push
nop
out
repz
add
fsub
test
push
iret
lods
pushf
cmp
pop
add
insl
out
push
sahf
jb
add
stos
popf
add
mov
and
adc
mov
jo
ret
xor
ja
bound
push
adcb
ja
mov
xor
mull
mov
dec
mov
push
or
jl
xlat
mov
push
push
not
setns
and
test
mov
mov
cli
lahf
scas
mov
outsb
inc
les
adc
adc
inc
ja
clc
loopnew
mov
jb
popa
loope
mov
fwait
dec
hlt
mov
mov
mov
mov
loope
stos
insl
cmpsl
rorl
lahf
hlt
jno
loope
adc
adc
push
xor
cmpsb
dec
insl
xor
xor
out
xchg
push
push
ret
gs
sbb
jmp
dec
xchg
popf
xlat
aaa
mov
in
loopne
and
cltd
iret
and
ud1
jecxz
dec
jmp
add
mov
adc
dec
xor
les
inc
push
mov
push
movsl
pop
jecxz
sub
imul
ja
popa
mov
or
jmp
imul
mov
dec
lret
or
imul
fistpl
push
mov
add
sub
xor
arpl
or
mov
in
fdivrl
loope
sarl
xor
call
pop
lcall
pusha
cmp
mov
and
lahf
popf
xor
sub
stos
xchg
jmp
inc
sahf
inc
arpl
push
dec
pop
mov
cmp
hlt
dec
outsb
ds
out
add
mov
in
push
insb
inc
lds
xchg
sub
xchg
or
out
push
push
out
mov
jns
and
in
sbb
inc
xor
push
cs
cltd
xchg
scas
pusha
icebp
data16
imul
push
dec
es
in
mov
or
loop
mov
ss
jnp
movsb
and
cmp
mov
push
shrl
dec
mov
call
sbb
scas
stc
sbb
clc
repnz
jp
xchg
dec
sar
cmp
jmp
in
mov
sub
mov
ds
stos
rcl
pop
inc
add
push
sbb
lcall
jnp
test
cmp
cwtl
test
fidivrs
gs
add
cmp
xlat
sub
mov
imul
push
cld
xor
mov
and
call
rcrb
bound
out
imul
filds
loop
loope
xlat
out
dec
cmpsl
adc
lock
push
add
or
inc
stos
add
fiaddl
inc
fnstenv
dec
mov
aas
mov
cmpsb
pusha
xlat
mov
push
push
dec
mov
lea
scas
sar
mov
and
dec
mov
push
jne
push
stc
dec
sahf
inc
cltd
dec
dec
add
mov
or
mov
inc
mov
lret
mov
push
fstpt
xor
cmp
nop
ja
mov
dec
fldl
into
add
subb
cmp
stc
ds
lds
xlat
aad
sub
sub
dec
nop
jno
sar
adc
fwait
lock
adc
mov
sbb
inc
pop
mov
pop
aam
addb
sub
gs
mov
mov
outsl
rcrl
call
xchg
mov
test
adc
dec
stos
mov
loopne
addr16
test
mov
push
outsl
outsb
in
dec
push
lahf
movsb
and
inc
xchg
push
add
or
ret
mov
ret
rcrl
adc
inc
stos
pop
jmp
cmp
add
test
pop
iret
xor
jl
or
sbb
xchg
dec
rcrb
test
push
aad
jp
test
mov
pusha
inc
inc
hlt
sub
std
loope
bound
popa
mov
out
movaps
loopne
fidivrl
shlb
fwait
dec
hlt
inc
scas
pavgb
xlat
push
imul
mov
xchg
sbb
xor
sub
mov
sub
lods
pop
jmp
fmull
sbb
imul
filds
pop
inc
nop
insb
adc
mov
repnz
adc
add
xchg
jmp
sarl
dec
or
inc
cs
adc
testl
jbe
mov
mov
in
push
repnz
movl
aad
dec
push
add
int3
lahf
mov
xor
filds
or
mov
fcoml
mov
jo
insl
lret
jnp
push
push
in
fnstsw
subl
jno
out
lcall
pop
mov
stos
out
sub
mov
mov
rcrb
pop
jecxz
movsb
dec
pop
repz
cwtl
insb
mov
mov
jg
int3
xchg
shl
and
shl
sbb
arpl
shlb
push
jnp
add
push
pop
xchg
push
das
fnstcw
push
push
cmp
or
inc
cld
ret
es
sbb
or
xor
rorb
dec
dec
and
repz
cmp
or
lret
push
nop
cmpsl
lcall
imul
xorb
shlb
xchg
xor
adc
pop
sbb
mov
insb
inc
mov
in
inc
inc
sahf
dec
adc
xchg
test
jl
icebp
sahf
scas
sub
inc
jb
jno
jmp
out
dec
ret
or
mov
daa
xchg
rep
xor
out
scas
add
and
cmp
xchg
add
cli
push
sub
lock
fwait
cli
movsl
call
loopne
aaa
pop
and
push
jae
ret
adc
test
les
shll
nop
mov
movsb
fmull
sarb
adc
jnp
repz
and
push
ret
scas
sub
push
rclb
jbe
out
sbb
clc
sbb
sub
insl
ss
pushf
mov
pushf
inc
aas
popa
mov
insb
cli
add
sub
popa
aaa
or
lahf
bound
push
adc
cmpsb
xchg
popf
push
or
fnstsw
int3
jns
sub
and
xchg
mov
inc
mov
mov
mov
xchg
aam
inc
mov
mov
xchg
xchg
jmp
mov
xor
push
or
inc
sub
test
xlat
adc
js
and
movsb
shll
push
loope
cmp
jge
das
dec
mov
mov
in
std
mov
fcompl
xchg
test
jb
sbb
outsl
popf
flds
mull
repz
xor
push
or
lea
and
xchg
insl
dec
fcoml
and
movsb
push
lods
inc
nop
push
adc
sub
inc
pop
jnp
fisttpl
sar
xor
or
fmulp
adc
inc
lcall
mov
xor
enter
adc
inc
inc
cmovbe
icebp
das
out
sbb
lcall
mov
aam
xchg
outsb
pop
out
jae
fsubl
nop
pop
push
nop
pusha
jne
lods
xor
cmpsl
add
pushf
jnp
mov
and
enter
jno
sarb
jp
jne
push
cmc
test
mov
pop
fsubp
inc
lock
data16
push
sbb
add
or
pop
inc
pop
cmpsl
inc
in
jno
sbb
imul
jmp
sub
xchg
sarl
adc
nop
add
pushf
sbb
lahf
and
in
cltd
popa
test
dec
and
pop
mov
movsl
add
lahf
notl
jns
in
insl
sub
xchg
add
and
stos
jle
pop
jae
cmp
es
outsl
andb
into
push
jg
adc
mov
stos
call
mov
cmp
xor
mov
or
inc
sti
lcall
xchg
jp
inc
cmp
ret
sbb
dec
and
lret
adc
xchg
xor
mov
cs
ficomps
xchg
push
int
in
repz
pop
ret
jmp
testl
mov
ja
and
push
das
notb
mov
pusha
gs
ror
push
dec
push
repnz
aad
sbb
xchg
push
popf
or
sti
mov
aas
outsl
jle
sub
mov
nop
push
ljmp
insl
call
sbb
cld
outsb
movsl
cmp
xor
cmpsb
insb
push
mov
out
push
cmp
scas
adc
xor
jns
add
mov
test
xor
test
rol
test
adc
and
push
push
mov
repnz
ror
hlt
xchg
dec
fstps
lea
cld
pop
out
inc
movsb
push
mov
jl
stos
add
xchg
cmp
enter
rcr
mov
xchg
or
rcr
lods
sbb
sub
lods
mov
push
or
mov
dec
inc
inc
mov
fiaddl
std
je
call
mov
loop
adc
imull
std
call
outsb
stc
cli
ret
fdivp
sub
sbb
icebp
dec
das
xor
mov
pop
scas
cmp
clc
rcrl
adc
lret
cwtl
pop
push
and
dec
cmpsl
push
mov
out
leave
ffree
inc
lret
psadbw
outsl
cmpsl
push
scas
inc
lcall
inc
adc
cli
inc
aam
movl
mov
shrb
decb
stos
mov
rcll
jns
or
jb
pop
fbld
cmp
jmp
pop
add
fnsave
xor
clc
test
inc
mov
fisttps
lods
sbb
or
scas
jo
mov
mov
loope
xor
sub
jmp
push
jne,pt
jle
sbb
fs
pop
call
movsb
add
cmpsl
inc
mov
sub
aam
ret
sub
inc
js
fwait
inc
jmp
daa
mov
jg
rcrb
sbb
pop
cmp
add
add
ja
repnz
scas
adc
mov
push
jo
pop
mov
pop
cmp
enter
xchg
xor
lret
out
jmp
dec
iret
cld
inc
lods
insl
jge
fdiv
mov
sbb
pop
scas
js
loope
mov
adc
std
push
jle
shlb
addb
mov
loopne
in
shl
push
mov
scas
aam
dec
ret
scas
inc
xchg
xor
sti
leave
pop
subps
xor
pop
adc
mov
and
push
adc
xor
push
iret
cmp
push
jg
cmpsb
outsb
xor
enter
xchg
ret
adc
out
outsb
jb
lock
xor
in
popf
jecxz
imul
bnd
jp
ds
das
popf
lcall
jle
mov
ret
cld
jbe
gs
xchg
xor
push
pop
fptan
js
filds
push
mov
sti
js
sub
fwait
or
or
dec
ljmp
and
pop
movsb
mov
xchg
xchg
andb
jnp
arpl
add
jmp
sbb
popl
das
scas
dec
ror
inc
ja
stos
loop
sub
jo
lahf
lret
outsl
sub
je
sarb
test
data16
in
jno
incb
repz
push
inc
jno
jo
pop
fs
dec
filds
mov
xchg
lods
add
js
rclb
in
sbb
and
movsl
add
xor
nop
rcrb
jle
mov
in
fidivrl
push
inc
or
add
adc
and
and
push
or
gs
dec
pop
inc
sti
outsl
or
dec
jne
leave
enter
inc
js
into
fisubrl
mov
cmp
rolb
push
mov
imul
cltd
pinsrw
mov
xor
xchg
std
movl
xor
or
stos
subl
rorb
inc
cmp
jecxz
inc
movsl
jne
or
mov
in
push
mov
mov
xor
test
mov
mov
data16
movsl
mov
bnd
test
mov
mov
ljmp
aaa
in
push
cmp
mov
add
or
jb
jmp
jl
xor
sbbl
mov
aaa
out
outsl
dec
icebp
mov
gs
sbb
cmpsl
mov
addr16
into
loop
hlt
shl
stc
push
repz
sub
lods
lret
mov
js
or
inc
popf
stos
push
ds
xor
das
mov
push
cwtl
sbb
in
and
pop
cltd
dec
push
in
aad
lret
cmp
add
sub
inc
push
mulb
push
cmp
leave
mul
rolb
cld
cmp
push
outsb
data16
and
nop
dec
pop
push
jg
pop
inc
pop
popa
ljmp
mov
call
pop
adc
in
dec
and
sbb
push
push
fdivrl
pop
sub
sub
repnz
aas
ss
xorl
jns
jns
mov
ret
inc
or
xor
ja
xlat
je
sbb
adc
hlt
loop
loope
aam
push
sbb
cs
mov
xor
xchg
les
lcall
insl
lods
sbb
add
ret
iret
mov
inc
lsl
fildll
xchg
addr16
dec
cmp
ja
daa
mov
jmp
pop
cmpsb
push
pop
ret
pop
push
sub
daa
mov
inc
adc
out
subb
les
out
sub
pop
sub
xchg
pop
cmc
data16
aas
pop
mov
cmc
mov
aam
cmp
cld
mov
lret
sbb
jne
sar
lret
push
mov
add
sbb
xor
inc
pop
stos
sbb
fistpl
inc
mov
jb
jne
jne
xchg
sbbb
fiadds
test
pop
sub
dec
dec
sbb
xchg
data16
fcmovne
lret
movsl
dec
je
frndint
mov
ljmp
cmovg
add
rcrl
and
sbb
das
rcl
je
xchg
mov
rcrb
bound
jne
lcall
lcall
call
jne
dec
insb
insl
mov
adc
jne
inc
jbe
xchg
insl
push
mov
xchg
cwtl
shll
xor
xor
popf
out
push
and
pop
rcrb
pop
ret
addb
push
dec
jae
add
lcall
cmp
add
mov
mov
xchg
and
or
xor
rorb
mov
int3
movsl
add
mov
cmp
jge
fldpi
call
cwtl
add
dec
into
popf
and
mov
xchg
sbb
mov
sub
xchg
leave
inc
std
in
xor
mov
sub
popa
jge
mov
pop
pop
adc
aam
adc
jno
or
dec
jbe
fadd
mov
ret
clc
add
insb
rorb
xor
xor
xchg
roll
jp
jge
arpl
icebp
loope
dec
orl
jle
arpl
paddsb
shl
cld
adc
movsb
mov
js
testl
push
es
cld
int
lret
or
push
mov
inc
pusha
mov
cmc
lcall
mov
test
cmpl
adc
stos
wrmsr
xor
fucom
ret
push
cmp
cs
push
mov
fwait
xchg
repnz
xchg
mov
sub
sbb
push
insl
fcmovnbe
xchg
test
jle
xchg
in
pop
clc
push
cmpsb
shl
and
stos
sbb
mov
sub
enter
mov
and
pop
and
aad
data16
mov
jns
out
lods
add
mov
pop
sbb
jge
and
mov
js
sub
xor
test
jo
aam
sub
orb
and
mov
dec
out
leave
cmpsl
add
call
psadbw
sbb
mov
test
test
inc
pushf
xor
popf
movsl
sub
pushf
xchg
test
or
loopne
mov
xor
push
push
mov
sahf
xchg
jnp
cmpsb
push
cli
loop
insb
pop
xor
cld
adc
movsl
jmp
and
fnstenv
push
in
notl
sub
mov
aam
popf
jecxz
xlat
jae
cmpsb
in
mov
mov
mov
fistl
imul
in
loope
xchg
adc
xchg
push
push
mov
and
cmp
enter
cmp
es
fistpl
mov
mov
test
xchg
xor
push
test
xor
cmp
out
jp
ret
rcrb
out
jb
lods
das
add
dec
outsb
insb
cli
jbe
inc
insl
testl
add
push
ficomps
ljmp
inc
repz
mov
inc
dec
push
les
dec
cmp
test
or
out
test
jg
mov
arpl
testl
push
lret
test
addr16
push
dec
mov
lcall
je
mov
int3
fld
cmp
sub
pop
inc
ret
mov
insb
pop
mov
mov
enter
xchg
xor
cld
push
in
ret
xor
sub
push
push
aaa
xchg
jmp
pop
mov
push
xchg
lahf
inc
inc
jb
mov
int3
pop
inc
rcrl
notl
or
in
xlat
sub
aad
sbb
outsb
sti
std
test
je
mov
pop
dec
mov
jb
pop
out
gs
pop
test
xor
jge
iret
aaa
cmpsl
loopne
daa
push
insb
nop
cmp
xchg
jns
in
out
mov
out
adc
dec
test
neg
pop
insl
mov
stc
adcb
sbb
das
les
xchg
lret
mov
test
sub
test
das
mov
fcompl
jecxz
and
cwtl
and
scas
jle
adcl
sbb
xchg
xchg
sbb
in
flds
inc
fadds
dec
or
add
sti
out
mov
push
mov
sbb
mov
rcrl
repnz
xor
popa
cltd
cwtl
scas
cs
pop
jb
pop
fwait
jle
ret
inc
icebp
add
xchg
cld
add
add
pop
lods
in
jbe
cmp
mov
scas
push
rorl
subb
sub
pop
shrl
cltd
cli
sbb
mov
shl
sub
dec
xor
and
outsb
add
inc
push
and
outsl
jle
loop
sbb
push
jle
insb
iret
lret
adc
cmpsb
std
push
push
cmp
ds
jb
lcall
jl
inc
inc
inc
aaa
dec
cld
sbb
fwait
fs
or
cmp
push
mov
cltd
out
dec
sbb
jl
movsb
pop
fdivrs
pop
fiadds
inc
lock
lcall
inc
mov
clc
outsl
pop
jl
imul
dec
push
and
xchg
lods
js
fs
push
xor
aaa
push
push
out
mov
xor
sbb
arpl
push
dec
sub
rclb
shll
fdivs
scas
sub
jb
add
int
lods
lds
dec
jbe
mov
lea
out
rcrb
push
fmuls
mov
sarb
jbe
rcl
jmp
adc
cld
xchg
adc
inc
loop
mov
adcl
call
xchg
sub
add
nop
pop
fidivl
mov
cmp
gs
push
imul
push
repz
into
push
adcb
xchg
test
cli
jns
jae
es
push
push
jne
xchg
out
out
inc
push
int3
cmp
out
jnp
imul
dec
dec
mov
fldcw
jecxz
dec
jle
sub
mov
mov
xor
rol
cs
push
stos
outsb
mov
aam
adc
cwtl
into
outsl
ljmp
or
iret
inc
cmc
bts
gs
pop
loopne
jl
stos
js
imul
je
fadds
leave
xor
push
in
jecxz
daa
pop
sbb
lret
jmp
adc
ljmp
in
add
jb
je
popf
ss
and
aad
dec
mov
mov
pushf
pop
in
push
sub
fidivs
pop
leave
test
in
sub
mov
mov
stc
add
loop
loop
aad
sub
movsw
sub
hlt
xchg
push
adc
dec
and
or
mov
lret
push
or
jle
stos
enter
dec
repz
cltd
aaa
dec
mov
les
push
mov
sbb
mov
repz
shl
mov
cld
pushf
cmpsl
jmp
test
lahf
out
ljmp
loop
ret
je
out
pop
andl
pusha
inc
int3
cmc
dec
sub
mov
filds
lds
sbb
jp
cbtw
fiaddl
dec
fisubl
dec
push
gs
mov
mov
enter
jne
cmp
mov
push
leave
cmp
ret
enter
daa
lcall
jle
pusha
nop
in
sub
push
and
sbb
dec
inc
mov
enter
xor
std
inc
jnp
xor
xor
out
test
lcall
or
sbb
in
ret
stos
pop
test
out
xor
sub
cld
sbb
lea
cmpsb
xchg
sbb
push
lods
dec
mov
mov
imul
pusha
jp
jmp
sbb
je
movsb
shl
arpl
ficoms
cmp
xor
int
arpl
mov
jp
mov
cmp
aam
xchg
into
lods
sub
lea
jl
enter
in
push
jnp
inc
or
loop
dec
inc
in
mov
adc
mov
lea
test
cmpsl
rcrl
call
jbe
and
xchg
mov
insb
mov
cli
or
arpl
cli
push
mov
xor
adc
dec
mov
cmp
stos
aaa
pop
lods
jno
sar
or
sbb
fcmovbe
out
jmp
xchg
repnz
and
push
sub
test
adc
pop
mov
mov
clc
imul
pusha
adc
inc
test
cwtl
or
xchg
add
xchg
add
aas
lret
push
push
and
and
fsubrs
shl
push
movsl
scas
mov
inc
mov
push
add
add
push
nop
ds
insl
pop
and
enter
out
mov
jne
pop
adc
test
xchg
xchg
adc
out
sub
out
dec
loope
fbld
js
fistpl
popf
mov
and
cmp
cmp
sbb
sub
lea
dec
mov
dec
gs
xlat
movsb
repnz
xor
inc
hlt
pop
mov
es
fildll
inc
sbb
gs
call
ret
pop
mov
and
add
xchg
jnp
mov
and
adc
gs
std
dec
add
dec
mov
das
cmp
xor
outsb
fs
fiaddl
and
xor
arpl
fwait
cmp
iret
sbb
punpckldq
lods
scas
pop
jmp
add
imul
aas
das
jno
aam
or
jno
mov
sub
arpl
mov
lcall
paddw
loop
repnz
test
in
and
or
fistpl
pop
push
cs
std
sub
mov
repnz
jbe
inc
mov
mov
repz
addr16
sub
stos
addr16
and
jb
movsb
and
cs
in
lods
arpl
pop
fwait
sub
xchg
mov
shrl
sub
cmp
sub
xor
aaa
push
out
push
iret
call
rcrl
cmpsl
cmp
xchg
push
popl
pop
jnp
rorb
loopne
pop
cmc
pop
jp
adcb
mov
push
xchg
sbb
rcrl
fidivrs
xor
lret
roll
dec
cli
cmp
negb
or
stos
imul
jnp
inc
xor
push
inc
ja
repz
add
sub
dec
pop
inc
sar
mov
enter
fiadds
and
sub
mov
xchg
lret
popa
scas
sbb
aaa
mov
out
xchg
shrb
sti
movsb
and
in
or
mov
ffree
xchg
pop
pop
sbb
pop
xchg
sub
test
or
inc
loopne
mov
mov
ss
jle
clc
push
jb
xchg
or
fisttpl
push
out
call
dec
fs
inc
mov
and
jg
cmp
pop
xor
mov
sbb
shlb
movsl
arpl
mov
pushf
or
in
clc
cmpsb
inc
cmc
fidivrl
mov
stos
in
adc
popa
stc
insl
sub
cmp
push
movsl
out
mov
pop
push
pop
add
repnz
xchg
mov
jno
shrb
jb
jne
cmp
out
mov
cmp
cltd
and
insl
push
dec
mov
xchg
shrb
adc
pop
xor
jae
add
xlat
dec
jp
out
cmpsl
xchg
mov
and
mov
clc
pop
pop
dec
push
jg
es
sbb
dec
adc
xor
sub
test
cltd
jge
mov
pop
out
icebp
enter
add
mov
and
shrb
push
hlt
stc
xchg
or
jnp
jbe
inc
cld
pusha
mov
ja
in
shrb
decl
ret
filds
pop
lea
testb
mov
js
sub
jb
mov
fisubs
inc
movsl
add
sbb
xchg
add
cmpsl
mov
call
fadd
dec
idivl
lret
sub
stos
sbb
mov
lret
pusha
in
fsubl
sub
add
cmc
mov
push
add
out
xchg
mov
movsb
sahf
test
dec
sbb
inc
sysret
jns
and
pusha
push
dec
pop
xor
out
dec
push
jp
fmull
dec
inc
mov
inc
jnp
push
rcl
inc
pop
sub
pop
jae
loope
or
jae
cld
imul
call
adc
or
push
out
sbb
push
mov
inc
cmovae
mov
cmpl
data16
test
mov
iret
mov
mov
jae
push
out
jne
sub
jmp
sub
adc
jne
and
dec
mov
mov
out
arpl
ret
outsl
out
or
sti
cmp
jae
rclb
xor
decb
roll
push
insl
loop
jb
mov
pop
pop
mov
out
aas
test
cltd
or
xchg
shrb
pop
add
xchg
icebp
mov
xor
outsb
lods
es
aam
adc
pusha
fstl
popf
mov
das
fwait
leave
ljmp
into
mov
jmp
fwait
ljmp
es
outsb
pop
xor
push
add
out
das
rcll
pusha
stos
lcall
in
dec
fadd
outsb
in
push
lods
sbb
ds
and
xchg
mov
inc
push
sbb
notb
jno
dec
lods
loop
mov
inc
push
ret
jo
test
add
add
xor
xchg
sbb
and
negb
aam
pop
arpl
ror
int3
mov
sub
fcmovnbe
jbe,pn
lods
and
push
mov
fdivl
idivl
inc
jb
lods
xor
push
in
or
into
ret
ja
xor
hlt
rcr
sbb
and
bound
xchg
frstpm(287
xor
ret
cmp
push
mov
jp
insb
cmovno
xor
adc
xor
hlt
mov
xor
xchg
mov
enter
aam
jnp
inc
mov
xor
imul
stos
hlt
fs
cmp
in
mov
xor
push
xchg
shlb
aad
js
cmp
cmp
and
ja
xor
mov
push
mov
es
cmp
push
jb
push
ja
or
stos
into
sti
cs
push
fstps
or
adc
adc
sbb
cmp
jb
ss
dec
inc
pushl
cmp
xchg
adc
dec
pop
pop
lcall
sti
mov
in
push
mov
sub
pushf
int3
mov
ficoml
mov
xor
out
pop
mov
and
cli
jg
or
loop
cmc
out
mov
inc
cmp
jg
pop
xchg
xor
dec
fndisi(8087
mov
mov
mov
lcall
jo
sub
cmp
pushf
adc
add
dec
icebp
cmp
mov
pop
jno
aad
push
fimuls
pop
or
dec
sbb
cmpsb
ss
dec
add
in
lret
mov
xchg
adc
or
bound
ljmp
mov
add
daa
xchg
outsl
sbbb
bound
ret
jmp
pop
fidivl
int3
xchg
cltd
fwait
add
pop
cmpsb
out
mov
icebp
fsubrs
mov
iret
sbb
mov
insb
adc
jge
bound
mov
dec
into
jo
cs
mov
rorb
adc
insb
fiadds
inc
fcmovb
pop
xor
dec
mov
in
cmp
loopne
ja
out
loopne
push
ds
rcrb
inc
mov
jbe
lds
aaa
and
pop
mov
xchg
jne
mov
jge
jg
push
sbb
loopne
mov
and
sbb
xchg
jle
lds
adc
aaa
mov
movb
xchg
mov
ret
pop
mov
xor
scas
add
xchg
jl
push
into
jnp
add
into
pop
and
cmp
xor
icebp
adc
and
push
pop
push
in
shlb
and
jno
cld
ret
into
test
pop
pop
lret
cwtl
test
dec
out
hlt
and
ret
out
aad
aas
sbb
add
mov
xor
add
loopne
fistl
mov
push
xor
push
in
jne
xchg
sti
in
xor
push
cmpsl
loopne
jecxz
sahf
pop
fbld
rcrb
adc
push
mov
sbbb
mov
xchg
dec
add
test
ds
mov
std
cmp
scas
fsubrs
xchg
insl
jno
stos
xlat
leave
or
dec
xchg
mov
les
fsubs
repnz
mov
hlt
sbb
mov
insl
das
iret
inc
fisttps
stos
sbb
fldt
dec
pop
fstpl
insb
popa
mov
insb
mov
loope
mov
pop
mov
sub
in
adc
cmp
es
fistpl
or
daa
xlat
daa
xor
jne
scas
cmpsb
mov
push
pop
out
leave
icebp
and
push
out
insb
fisubrs
cmc
and
je
and
fidivrs
and
js
sub
aam
iret
mov
sarl
xor
js
fsubr
jecxz
mov
add
push
popf
xchg
xlat
sbb
fs
jle
mov
push
test
ds
ja
push
incl
je
mov
mov
fidivs
out
sbb
scas
pop
fmuls
sbb
cmc
jo
mov
add
sub
sahf
jbe
repnz
jmp
inc
mov
push
jg
cmpsl
jo
fwait
push
mov
popa
in
adc
fsubrp
shll
jecxz
fdiv
mov
inc
loop
sbb
sub
add
xor
loop
mov
cmp
scas
lods
xchg
sbb
popf
inc
arpl
jmp
pop
movsl
ret
mov
lods
jg
cmpsl
push
fdivrp
sbb
mov
ret
xchg
xor
testb
xchg
xchg
mov
outsb
push
pop
jmp
loope
dec
fcomip
pop
mov
scas
jg
mov
pushw
push
fldt
inc
mov
inc
pop
divb
mov
addr16
sti
insb
push
lcall
mov
andb
xor
movsb
fisubrs
jl
loop
mov
imul
in
in
push
insl
cmp
xor
sub
popf
push
mov
mov
lea
ds
mov
pusha
pop
mov
pop
in
push
mov
daa
or
addr16
fimuls
fcomps
mov
subb
ret
xchg
mov
push
fcompl
cwtl
cli
pop
leave
ret
loop
jae
jg
mov
pop
out
dec
xchg
loope
sahf
inc
stos
cmp
roll
pop
gs
lret
fsubrp
stos
repnz
stc
add
inc
mov
cmc
xlat
add
icebp
pop
mov
or
stos
in
std
lea
pop
sbb
add
inc
dec
cmpsl
sahf
int
or
add
rorb
sbb
rorl
movsb
sbb
in
nop
hlt
mov
lret
aad
cmp
pop
adc
xorb
clc
call
imul
mov
jg,pn
push
mov
clc
mov
xor
push
mov
add
les
mov
mov
int
mov
movsb
jmp
jp
shlb
fwait
out
push
pop
sbb
fsts
mov
inc
sub
scas
sub
jecxz
or
aam
mov
dec
nop
and
sti
inc
cmp
nop
pop
adc
sub
pusha
adc
rcrb
bound
xchg
jle
je
jg
pop
dec
addr16
rcr
out
inc
jle
lahf
test
ss
cmpsb
pop
or
daa
dec
loopne
xlat
cmc
lods
cltd
lcall
adc
lcall
rorl
fnstcw
iret
aam
pop
push
outsl
daa
jp
in
test
stos
adc
mov
or
pop
mov
sub
xchg
mov
mov
leave
mov
push
ja
lret
mov
and
aaa
mov
fstpt
mov
xor
inc
xor
jb
shr
test
mov
xchg
push
daa
and
insb
jmp
in
sbb
pusha
push
aaa
subb
mov
dec
xchg
pop
movsl
lds
repz
jmp
mov
mov
dec
clc
icebp
mov
xor
pop
repz
ret
sub
xchg
mov
cmp
sahf
lods
pop
ret
dec
mov
pop
jno
push
mov
ja
push
pop
mov
and
arpl
mov
roll
pop
fcoms
push
sbb
test
and
insl
es
shlb
nop
mov
cmp
cld
scas
jecxz
jl
sub
andb
cwtl
cmp
mov
lds
push
pop
dec
sbb
add
mov
xchg
jno
push
xor
into
inc
repz
push
arpl
lret
in
aaa
and
lods
in
outsb
sbb
cmc
sbb
pusha
cmp
cmpsl
stos
es
out
fs
jno
pop
mov
mov
fnstsw
push
pop
lahf
sub
adc
out
fmulp
jge
fildll
xlat
mov
aam
push
jmp
or
mov
add
push
lods
sbb
cmp
mov
mov
pop
sahf
fidivl
icebp
pushf
inc
push
les
imul
rcr
gs
rcl
or
fucomip
sub
mov
lea
add
lea
pop
dec
popf
fidivs
add
hlt
in
xor
push
xlat
bound
and
xor
or
popf
xchg
pop
mov
in
cmp
and
call
mov
or
cmpsl
cld
mov
xlat
in
call
xchg
setp
popa
fmull
jns
xchg
cmp
mov
cs
pop
mov
push
stos
jo
inc
ret
andb
andl
and
pop
push
mov
dec
adc
into
pop
dec
push
xor
mov
xor
mov
mov
sub
and
lcall
add
xor
xchg
mov
test
rorl
inc
in
cmpsl
lahf
outsb
xchg
pusha
jecxz
cmpsl
icebp
into
cmpsl
ds
and
shll
insl
push
xor
popa
pop
out
cmpsl
aas
leave
mov
scas
rolb
mov
sub
sarl
jne
insb
push
mov
mov
or
mov
mov
and
pop
jl
cwtl
shlb
imull
mov
cmp
das
clc
stos
ljmp
pop
push
and
and
ds
add
jle
jb
int
loope
jns
addb
push
arpl
push
sub
outsl
call
adc
xchg
adc
inc
test
push
inc
mov
pop
mov
call
insl
mov
lcall
out
cmp
in
jne
xor
jbe
mov
dec
and
xchg
sbb
cltd
mov
mov
data16
imul
loopne
inc
shr
test
or
cmp
bound
dec
fldenv
lea
push
cmpl
adcb
jecxz
add
cmp
lods
aaa
add
xchg
lock
aad
xchg
sbb
testl
movsl
fs
mov
xchg
push
cmp
fwait
sub
inc
adc
or
mov
scas
in
loope
jne
push
push
pop
inc
sarl
xchg
fistps
ret
les
add
imul
gs
sbb
cld
repnz
inc
pushf
lcall
xchg
jmp
ror
xchg
xchg
ljmp
pop
mov
sbb
pop
add
popf
mov
imul
or
out
cmp
shl
sbb
sarb
insb
fildl
iret
xor
filds
aas
dec
inc
pop
jp
loopne
or
les
adc
add
dec
jle
in
push
cld
movsb
rclb
test
fs
cmp
adc
sbb
rcrl
mov
adc
ss
jae
sbb
ret
cwtl
fcompl
inc
adc
lods
xlat
xchg
int
jne
inc
inc
inc
push
mov
push
cmp
jnp
rcrb
mov
pop
xchg
jge
mov
fdivr
xchg
xchg
or
sub
cld
scas
fcomps
cltd
loope
or
xor
cmpsb
das
imul
xchg
into
fsts
xorl
fmull
stc
adc
inc
test
out
cs
pop
jns
jo
mov
loopne
cmp
inc
sub
call
jns
test
xchg
bound
jae
lea
lahf
xchg
or
inc
add
out
mov
stos
je
mov
sub
mov
lods
in
pusha
ja
outsl
add
push
pusha
stos
xchg
or
mov
fimull
jne
mov
pop
sti
jbe
out
sub
xchg
pop
lret
adc
in
lds
fstpl
sbb
push
loope
jae
add
mov
pop
adc
push
or
add
xor
out
inc
mov
xchg
push
jno
xor
dec
addb
rclb
dec
jno
xor
ret
add
jg
push
cmc
cmpsl
lret
push
outsb
jge
mul
js
iret
lock
loop
dec
cmp
and
or
sbb
cmp
add
js
push
inc
xchg
mov
jne
sbb
mov
push
pop
push
xchg
mov
inc
stos
pop
push
fisttps
push
xor
lock
fwait
and
pop
mov
mov
pop
or
mov
and
test
repz
fbstp
icebp
mov
xor
cltd
inc
push
mov
outsl
sub
push
adc
push
jno
ficoms
nop
and
fbld
cld
sub
cmp
setno
outsl
push
in
popa
push
out
stos
shll
xor
je
out
lahf
nop
leave
dec
mov
mov
inc
mov
xchg
in
clc
add
fwait
mov
mov
sub
dec
pop
jno
stc
mov
sub
add
outsb
repnz
mov
cmp
adc
dec
sbb
mov
jns
jns
out
xlat
cmp
into
push
cmp
mov
repnz
sub
jge
dec
adcb
jp
mov
xchg
add
imul
or
frstor
daa
xchg
adc
ffree
scas
cs
lret
cmp
cmc
or
mov
outsl
or
sub
dec
stos
mov
and
mov
or
sub
mov
mov
xor
sub
dec
push
fimuls
faddl
fcoms
jo
mov
test
mov
cmpsl
fisttps
jns
imul
idivl
jle
and
mov
stos
movsb
xchg
rcl
psubd
insb
sub
rol
push
mov
inc
mov
cmp
popf
mov
insb
or
push
loopne
or
dec
sbb
lret
mov
add
mov
pop
fldt
inc
xor
sbb
push
mov
inc
push
shlb
ficomps
outsl
adc
lcall
in
int
mov
mov
call
mov
sar
popa
movsl
or
cmovp
jecxz
xor
lcall
clc
std
xorb
pop
int3
inc
xchg
sahf
push
rcll
out
pushf
sahf
sbb
push
mul
adc
jno
cmc
mov
call
mov
data16
mov
addr16
mov
in
repz
xchg
cmp
xchg
testl
insb
or
or
jmp
xorb
dec
in
call
xchg
jae
dec
dec
cld
movsl
push
mov
lods
int
push
movsl
xchg
lret
dec
fs
cltd
lahf
les
in
les
shr
dec
ja
mov
mov
push
shlb
xor
fdiv
xlat
sub
movsl
call
mov
out
pop
dec
jp
mov
in
lret
arpl
insb
leave
ficompl
repnz
outsl
dec
shlb
pop
pop
pushf
ja
outsb
xchg
jl
icebp
rcrb
addr16
ja
dec
fistpl
mov
repnz
dec
inc
push
pop
mov
nop
jne
xor
mov
fcomp
ja
dec
stc
stos
in
xchg
mov
mov
bound
inc
mov
popl
cmc
lods
lcall
call
mov
and
and
pop
sbb
mov
and
cltd
jae
pop
cmp
stos
dec
add
mov
stos
gs
pop
fisubl
inc
outsb
adc
mov
les
test
cli
xchg
repnz
xor
rcrb
cmp
scas
add
jo
mov
or
orl
call
jmp
aaa
push
aas
pop
mov
pop
adcb
add
mov
push
inc
pop
push
cli
jae
adc
jl
sbb
push
cwtl
cmp
sbb
outsb
ret
imul
pushf
mov
pop
lock
cmpb
xchg
dec
mov
pop
repz
repnz
mov
fbstp
pop
xchg
cmpsb
mov
fwait
test
or
mov
mov
mov
xchg
cld
notb
add
out
arpl
les
in
or
ss
pop
cmp
xor
loop
adc
mov
inc
pop
pop
inc
gs
cli
xor
adc
xlat
idiv
loopne
cwtl
je
in
in
push
test
les
xchg
adc
fidivs
imul
out
imul
add
sbb
andl
inc
xchg
movb
or
pop
mov
dec
xchg
out
decb
dec
or
fldenv
lea
adc
mov
pop
xchg
mov
sbb
jge
jge
xchg
outsb
pop
add
test
add
cmpl
jb
pop
cs
push
loope
sbb
jg
ds
xchg
cltd
incb
mov
xchg
fstpl
pushf
out
movsb
inc
popf
shr
fwait
lock
cmp
shlb
mov
adc
fwait
shrb
mov
pop
xchg
push
les
mov
add
adc
arpl
popl
iret
lcall
outsb
fcmovne
mov
add
adc
sbb
inc
and
jae
mov
popf
psubusb
cld
dec
mov
daa
dec
into
rcrl
push
std
sub
and
lock
ljmp
in
pop
ljmp
adc
mov
jg
into
test
adc
popa
fbstp
lea
jae
filds
mov
jecxz
dec
mov
ss
pusha
lcall
in
repnz
dec
outsl
pop
or
cmc
inc
jmp
daa
xchg
mov
sarb
and
lock
mov
js
movsb
sbb
orb
xchg
adc
adc
loope
das
pop
aas
daa
push
outsl
mov
aam
loop
mov
mov
sub
movsl
push
push
sub
push
adc
mov
fadds
inc
lods
stc
push
lret
lea
dec
shr
movsl
sti
push
push
xor
pop
fdivrs
fisubs
leave
push
out
inc
fwait
bound
add
ja
jns
cmp
push
iret
js
mov
xor
add
pop
adc
jmp
insl
push
jmp
jecxz
hlt
mov
add
lock
loop
scas
xchg
push
aas
inc
loopne
inc
jmp
scas
mov
mov
pop
sti
xor
fistps
xchg
sti
and
dec
mov
or
cwtl
xorl
adc
es
hlt
mov
gs
mov
jl
dec
push
divl
push
sub
jle
cmp
pop
or
aad
das
int
push
test
push
cmp
pop
push
add
aam
dec
stc
inc
push
movsl
mov
add
mov
aad
and
rcr
in
lock
push
sbb
mov
ja
mov
sbb
or
scas
cmp
or
mov
inc
ss
std
popa
xchg
jbe
jmp
xor
xchg
push
xor
inc
pop
mov
shll
inc
mov
mov
out
out
es
mov
addr16
cmc
daa
stos
or
mov
insb
lock
leave
mov
cmp
mov
mov
sub
add
test
fs
aam
fwait
xor
in
pop
push
dec
sahf
lock
adc
cmp
pop
insb
and
sub
xchg
cmp
shll
push
jb
jb
fistpll
jl
mov
cmp
cmpsb
cmpsb
fstps
out
test
jno
dec
or
xchg
xchg
pop
dec
iret
lcall
xor
add
mov
int
pop
xchg
push
cld
jge
sbb
call
mov
mov
push
orl
mov
inc
into
pop
push
insl
in
fwait
int
stos
out
ret
shlb
xchg
mov
enter
out
and
push
les
inc
pusha
sahf
inc
in
push
lcall
psadbw
xchg
mov
stos
cmp
ret
pop
fwait
shl
mov
and
jne
xchg
rcr
mov
out
js
jle
in
pusha
pop
mov
add
add
push
and
push
testl
mov
and
popa
fldt
jp
jo
lcall
push
dec
push
sub
or
push
lock
pop
fs
sbb
lret
or
sti
sbb
xchg
scas
inc
loopne
cmpsl
adcl
aam
cmp
mov
ror
nop
repnz
mov
imul
inc
std
jle
out
or
push
pop
les
dec
outsb
test
dec
mov
xor
addb
push
add
pop
xchg
icebp
mov
dec
jecxz
loope
test
ljmp
mov
push
sahf
xchg
pop
mov
sbb
stos
fcmovnb
xor
das
sahf
iret
push
cmp
xor
pop
cmpl
cwtl
cmp
jo
stc
repnz
sahf
bound
int
cmp
dec
add
and
add
fimull
lea
push
les
daa
out
in
aam
ror
sbb
inc
popa
imul
jne
test
mov
ljmp
inc
mov
frndint
movsl
clc
or
cmp
mov
in
imul
push
push
stos
rclb
fldl
fdivrl
loop
mov
fcmovnu
add
aam
mov
push
je
xor
cmc
rcrb
in
and
cmpsl
mov
pusha
rcll
rorl
jecxz
clc
mov
push
addr16
lock
inc
addr16
push
dec
cmpsl
insl
orb
fcoml
into
in
fcmovnu
dec
inc
mov
mov
dec
mov
clc
repnz
addl
sbb
mov
insb
les
sub
out
enter
test
pushf
jle
cmp
inc
movl
push
lret
imul
divb
daa
mov
or
jg
stos
je
or
cld
jmp
imul
rcll
pop
pop
xchg
dec
push
xchg
sub
pop
les
cmp
lret
jae
jbe
jg
sbb
mov
lahf
bnd
sbb
lds
mov
scas
call
and
push
aaa
mov
inc
and
xchg
inc
adc
fwait
dec
sbb
dec
mov
aam
jl
push
mov
dec
in
movsb
or
mov
add
popa
ljmp
sub
xchg
test
pop
fucomi
aad
ljmp
incl
roll
fimuls
divl
ja
mov
clc
icebp
scas
dec
or
xor
dec
xchg
pop
out
addr16
pop
jmp
add
fnstsw
sub
fcoml
add
push
ret
fisubl
inc
call
addl
add
jge
into
aad
mulb
roll
out
leave
ss
mov
adc
inc
xlat
push
jle
and
lret
rolb
lcall
xor
lds
xchg
push
or
mov
jge
scas
scas
scas
dec
mov
addl
xor
lock
fdivs
mov
aam
scas
out
test
xchg
cli
ds
xorl
jo
pop
hlt
and
out
sub
and
cmp
fwait
lock
ja
adc
jge
enter
sar
push
notl
xlat
enter
iret
push
xchg
pop
pusha
pop
fstp
daa
push
xchg
xchg
rol
aad
xchg
jmp
stc
mov
shrb
lea
jae
int
cld
push
pop
jmp
cwtl
mov
pop
mov
fcom
sarb
adcl
or
jle
ja
cmc
jl
or
mov
jns
enter
leave
lcall
es
int3
mov
sbb
fxch
add
rolb
daa
or
push
dec
daa
and
xlat
dec
rcrl
sahf
ret
imul
dec
dec
aad
xchg
cmp
out
out
sub
pushf
jno
test
mov
imul
cltd
pushf
mov
ss
loope
sub
add
push
jnp
mov
data16
test
sub
mov
negb
jmp
xlat
and
push
mov
mov
ficoml
out
cmpsl
mov
adc
in
divl
cld
or
pop
cmc
nop
and
and
xlat
mov
and
mov
jno
out
sarb
lods
pop
gs
es
es
xchg
sub
or
std
loope
or
cmp
push
scas
cmp
in
adc
insl
das
lock
loope
mov
pop
repz
cmp
imul
cli
push
push
lret
xchg
jne
int3
pop
add
mov
or
and
push
add
ret
inc
mov
subb
mov
push
sub
sarb
dec
mov
ror
lods
pop
fcmovbe
add
add
ja
repnz
lahf
jno
inc
xchg
or
int3
mov
lea
in
dec
aaa
repnz
test
int3
dec
js
fbstp
test
mov
dec
outsl
and
mov
jecxz
outsb
xchg
pavgb
dec
aam
mov
adc
stc
pop
adc
jmp
pop
imul
and
sbb
fidivrs
mov
scas
cltd
loopne
push
lahf
push
xor
inc
jb
data16
ret
clc
cmp
cwtl
or
adc
cld
cs
and
sahf
negl
mov
fcoml
adc
pop
roll
out
sti
mov
jmp
repz
int
pop
push
aas
adc
pop
fistl
lods
aad
adc
xor
jmp
mov
mov
ffreep
xchg
xchg
adc
add
enter
sbb
adc
les
sbb
cmp
int3
js
lret
mov
pop
bound
std
mov
les
jmp
sub
cld
popa
in
cmc
insl
mov
sub
push
lret
gs
sarl
lds
pusha
jne
test
push
stos
int
inc
test
cmp
jge
enter
ja
std
movsl
fisubl
mov
jge
xor
pusha
dec
fistps
mov
stos
mov
jg
int
jo
je
rsm
ljmp
mov
fistpll
mov
popa
inc
cli
repnz
mov
adc
add
xor
pop
mov
int3
shlb
jns
outsl
jo
sbb
icebp
mov
mov
inc
xchg
cmovo
push
mov
mov
add
jbe
iret
mov
adc
xchg
daa
jno
lahf
or
adc
hlt
and
mov
inc
and
imul
mov
in
sbb
in
mov
int
mov
sarb
jb
cmp
sbb
push
das
in
mov
add
loopne
sub
loope
inc
jne
fidivrs
jecxz
mov
jecxz
sti
jge
lahf
lret
icebp
mov
fiadds
sbb
xchg
jp
enter
movsb
and
xchg
stos
sbb
imull
jnp
mov
jo
imul
ds
aad
icebp
and
jg
mov
loope
jmp
cli
dec
mov
imul
xchg
ret
sti
stos
repz
cmp
ds
pop
sub
xor
xchg
mov
pop
fs
lock
lret
movsl
rcr
nop
fiadds
adc
and
sub
and
xchg
inc
cmpsb
and
mov
push
mov
test
lret
shlb
movsb
push
scas
pop
fwait
in
jmp
rcr
arpl
or
popa
fstps
mov
faddl
test
mov
pop
aad
xchg
mov
iret
dec
fisttps
mov
mov
lea
push
pushf
dec
and
jae
jns
addr16
lock
pop
push
movsb
xchg
ret
nop
data16
or
repnz
movsl
push
and
icebp
inc
dec
adcl
jbe
mov
dec
lahf
fists
hlt
mov
push
lods
mov
jg
jo
imul
aas
imul
pop
fimull
cmc
test
mov
sti
pop
xchg
inc
mov
leave
std
push
out
cmp
leave
xor
das
cmpsl
mov
xchg
push
loope
fucomip
stc
adc
inc
sub
cmp
jo
mov
cmp
pop
fcoml
std
rcl
in
insb
xlat
xor
out
sbb
adc
add
fs
fst
jle
gs
lcall
dec
data16
cmpsb
jp
orl
xchg
aad
mov
lahf
cmpsb
xchg
lock
stos
sbb
add
sbb
inc
stc
icebp
fsubs
mov
push
or
cs
jns
mov
mov
jle
mov
in
movsb
lods
or
cmp
xchg
dec
jbe
mov
pop
daa
or
sub
dec
ret
jmp
int3
mov
lea
mov
push
pushf
fstps
mov
dec
gs
pop
in
pushf
stos
int
push
and
stos
ss
sahf
mov
xchg
jnp
jnp
out
push
xor
dec
or
cwtl
cmp
stc
add
mov
fstps
dec
push
test
int
sbb
nop
mov
pop
xchg
leave
dec
add
sbb
mov
pop
add
xor
sub
mov
dec
stos
add
test
xor
aaa
arpl
jns
xor
push
and
add
orl
cmp
add
into
xor
adc
aas
add
sbb
mov
mulb
pop
popa
cmp
or
push
jnp
push
xor
ror
scas
gs
cmc
ret
xor
ljmp
aas
jecxz
pop
das
sbb
jnp
dec
push
mov
pop
imul
repz
fisubs
pop
mov
lea
addr16
push
fidivs
movsl
repz
pop
push
ret
mov
jp
insb
mov
aas
in
fstpt
adc
imul
mov
lds
dec
in
push
mov
jle
mov
pop
and
dec
pop
adcl
pop
sub
push
jg
int3
fsubrl
mov
aas
push
ss
jbe
jl
add
int3
fmulp
jmp
enter
popa
dec
mov
faddl
enter
icebp
stos
push
iret
gs
xor
pop
push
adc
pop
shll
movsl
fcmovu
push
mov
sti
mov
sbb
fs
jmp
add
loop
pop
mov
jle
xchg
cltd
and
or
rcl
adc
xor
cmp
movsb
push
lods
test
xchg
fistps
in
adc
sub
repnz
jl
pop
pop
xchg
sub
jns
and
outsl
inc
aam
jnp
inc
dec
jne
int
in
shl
icebp
jb
add
lcall
lods
loopne
adc
mov
xchg
aaa
insl
rolb
inc
int
out
mov
ds
push
push
test
xchg
sbb
mov
push
lret
fwait
pop
test
mov
mov
loopne
lds
rorb
jecxz
cmp
cltd
popf
cmpl
shlb
negl
mov
mov
mov
add
jno
push
push
push
loop
cltd
sub
xor
jnp
out
sbb
pusha
and
mov
sbb
jmp
mov
mov
cmpsl
mov
movsb
jl
into
cmpsb
jg
adcb
mov
sarl
xchg
popa
nop
shll
dec
insl
or
and
mov
and
inc
in
push
adc
sub
push
imul
sub
lcall
mov
xorl
mov
ds
daa
mov
jno
pop
xor
in
mov
push
pop
adc
scas
mov
ja
add
xor
sub
je
pop
cli
in
loope
ss
inc
or
ficoms
sub
pop
xchg
or
bound
push
idiv
fstpt
hlt
mov
dec
les
icebp
adc
decb
push
push
add
or
add
sub
pop
sub
and
push
movsb
call
jg
test
imul
push
push
fidivrl
and
pop
pop
popa
cmpsl
mov
and
or
sar
sub
pop
movsb
ja
test
sub
jmp
fisubs
xchg
imul
jbe
mov
add
daa
and
jb
mov
into
orl
arpl
mov
cmp
push
in
mov
cltd
shll
xor
dec
push
sub
pop
push
inc
outsb
xor
inc
lock
stos
std
rcrl
lock
xor
mov
leave
rep
repz
xlat
lahf
xchg
pusha
dec
loopne
push
inc
add
in
sub
popf
and
jl
inc
shlb
fnstcw
or
mov
sub
xchg
pushf
imul
outsl
bound
xchg
nop
push
or
pop
sub
pop
mov
mov
sbb
pop
dec
cli
fs
idivb
mov
shrb
shl
push
pushf
xchg
lds
fdiv
cmp
lods
lret
ljmp
mov
dec
xchg
jl
xorps
ret
dec
int3
or
push
mov
subl
mov
mov
icebp
mov
lods
outsl
insl
lea
enter
mov
sbbb
stos
pop
clc
mov
xchg
cmp
fidivl
ds
data16
pushw
jne
shl
into
adc
ds
xchg
lods
sub
mov
sbb
aam
xor
lret
hlt
xor
imul
pop
fmuls
and
out
jo
inc
cmp
mov
xchg
mov
loope
push
mov
mov
int3
sarl
sub
pop
pop
sub
lea
and
cld
jmp
mov
mov
mov
enter
rcrb
out
push
push
or
sbb
rorl
gs
imul
pop
mov
xor
in
pop
loopne
push
jnp
sar
add
and
jecxz
push
cmp
enter
and
cmpsb
cwtl
out
jns
mov
fwait
addr16
inc
lcall
and
jnp
jecxz
decb
lret
das
add
sub
filds
daa
cmpsb
jae
lods
pushf
push
iret
pop
sub
sbb
les
mov
jb
lock
sbb
rcl
lret
jg
addb
jne
cmp
inc
sbb
cmpsl
mov
cmp
mov
adc
fcomps
and
out
xchg
mov
jle
sub
fildl
adc
mov
adc
jl
cmpl
dec
xor
cwtl
ret
dec
push
decb
pop
or
orl
sub
rcll
jg
enter
mov
jmp
xor
or
cmp
push
out
mov
inc
gs
lock
dec
ljmp
cltd
push
xlat
adc
adc
sahf
cwtl
pusha
push
add
sub
mov
cmp
lds
mov
aad
movsb
adc
je
cmp
adc
push
movsb
mov
sub
and
adc
mov
pop
decb
dec
repz
pop
jb
or
hlt
ret
and
xchg
iret
cmp
pop
dec
data16
jle
push
rclb
ss
out
push
sub
mov
jb
sub
test
sbbl
dec
icebp
mov
loope
ret
sbbb
mov
push
cmp
mov
ret
cmp
mov
out
ret
outsl
xchg
out
mov
xchg
lods
in
sub
push
test
jnp
push
mov
pop
mov
cmp
test
pop
lret
xchg
pushf
iret
test
push
dec
int3
xchg
mov
aas
adc
loope
outsl
in
adc
xor
loop
and
fmull
inc
dec
dec
xchg
ljmp
out
xchg
adc
xchg
lcall
xchg
clc
enter
xchg
mov
cmp
push
fistpl
insl
jb
jmp
sub
xorb
ljmp
jns
mov
mov
push
inc
sahf
aas
xchg
add
xor
shl
sbb
adc
inc
jb
clc
push
lock
lahf
pop
ss
adc
gs
mov
fdivs
dec
jns
out
push
leave
push
out
sbb
lods
mov
aaa
push
roll
addb
push
push
loope
aas
das
sub
push
or
cli
pop
daa
dec
xor
sbb
push
nop
pushf
xlat
xor
ficompl
dec
or
lahf
jnp
insb
xchg
sub
lds
cmc
mov
dec
dec
out
test
mov
popl
es
mulb
sub
xchg
push
cli
outsl
ret
fisubrs
test
pop
scas
es
mov
flds
stos
or
inc
std
enter
push
or
mov
add
out
mulb
mov
and
push
sbb
mov
stc
sti
mov
push
push
das
addl
fbld
bound
aam
jbe
dec
add
arpl
bound
in
fiadds
mov
fs
push
xor
add
pop
xlat
push
pop
lret
jb
push
pop
fst
or
mov
mov
mov
xor
jecxz
rcll
xchg
pop
ss
add
stos
popa
mov
lcall
xlat
cmp
pop
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
mov
pop
call
hlt
sbb
fidivrs
add
add
mov
lea
nop
mov
push
mov
pop
add
mov
mov
push
mov
pop
pushl
jno
jmp
or
push
and
fstps
fwait
pop
mov
add
movzwl
sub
call
jl
pop
mov
es
mov
cmpb
jnp
add
mov
adc
sub
mov
dec
dec
dec
movzwl
sub
jne
movswl
cmpsb
repnz
pop
adc
inc
jno
ror
inc
out
in
mov
incb
dec
repnz
adc
mov
fwait
xlat
mov
out
dec
jno
fwait
sub
int3
imul
jno
adc
lea
or
jns
xlat
and
test
xor
cwtl
repnz
insl
imul
bnd
add
push
lods
imul
cmp
pop
jns
inc
jb
xchg
pop
push
adc
xor
and
mov
lahf
add
and
cld
cld
rcrb
pop
adc
xor
or
push
xchg
aas
jno
imul
ds
sahf
fistpll
out
and
ljmp
sbb
repnz
cmpsl
dec
dec
dec
test
test
pop
test
mov
inc
cmpsw
ret
jnp
in
scas
cwtl
push
adc
mov
add
cwtl
cmp
repz
jb
xor
lods
fists
pusha
jo
mov
test
sub
adc
ja
xlat
push
ret
sbb
push
ss
push
arpl
scas
out
push
push
test
loop
nop
stos
mov
sbb
mov
pushf
xchg
mov
or
icebp
lods
dec
mov
fstl
pop
inc
test
pop
dec
or
inc
inc
xchg
xor
xchg
cmc
mov
or
mov
xor
movl
fisubl
jg
cwtl
ljmp
mov
fldcw
scas
mov
xor
xor
in
int
xchg
pop
fistl
push
data16
je
outsl
orb
adc
lret
orl
scas
adc
subl
fstl
mov
sub
xchg
cmc
inc
xor
fwait
mov
jae
adc
aas
jp
mov
and
mov
sbb
jo
dec
push
incb
orl
xor
addr16
scas
pop
enter
insl
lods
pop
xor
aaa
clc
loop
add
cmpsl
mov
cli
mov
sti
sbb
pushf
js
pop
xchg
dec
inc
push
pop
mov
pusha
pop
xchg
xchg
rol
fcmovu
cmc
push
jae
insl
dec
cli
dec
add
and
push
cmp
xor
xchg
sarl
xchg
insl
lods
call
jle
cwtl
sub
adcl
push
push
stos
repz
insl
test
lds
lods
xchg
xchg
stc
xchg
insl
sbb
shlb
gs
and
pop
jge
popf
xchg
or
mov
rcrl
aaa
std
cwtl
add
std
cwtl
add
add
and
call
test
arpl
arpl
fsubp
in
iret
clc
inc
loope
roll
enter
mov
xchg
ds
pop
push
inc
shll
fsubp
and
cmp
pop
push
in
shrl
mov
push
inc
shll
fsubp
and
test
sbb
faddp
sbb
inc
mov
or
mov
and
and
pop
in
es
ficompl
in
cmovns
dec
aas
repnz
xor
movsl
and
mov
std
mov
bound
sub
inc
push
int3
sub
rcrl
fcmovnb
in
shl
rcrl
arpl
and
out
hlt
and
rcrl
ja
push
and
xchg
cmpsb
mov
push
mov
and
and
movhps
xor
push
and
lock
pop
loop
sbb
fiadds
lahf
stos
lret
insb
sbb
and
js
and
lock
and
lock
sub
faddp
popf
fs
out
push
sub
rcrl
loope
sbb
pushw
xchg
pusha
adc
fsubrp
fwait
cli
test
in
stos
daa
scas
outsb
fistps
data16
push
mov
or
lea
in
add
adc
ficoms
sbb
lock
outsl
cs
rcrl
loope
pushf
mov
rcrl
and
xchg
and
pop
add
in
mov
stos
test
and
sub
and
lock
adc
faddp
movsl
neg
clc
fdivr
sahf
push
in
cmp
inc
push
pop
cmp
cmp
faddp
andb
sbb
fcmovb
sbb
faddp
sbb
out
in
or
icebp
in
mov
jmp
bound
ja
sub
mov
or
jo
sbb
mov
gs
fdivl
sub
mov
xchg
mov
jo
sbb
mov
gs
adc
and
and
out
jno
scas
ja
loope
ja
sub
mov
xlat
pop
loop
jle
and
mov
inc
push
push
and
out
jno
scas
ja
loope
ja
sub
mov
cmp
int3
push
push
and
out
jno
scas
ja
fcomp
ja
sub
mov
cmp
fcoml
rcrl
and
xor
sub
xchg
ret
and
rcll
adc
and
and
out
jno
scas
ja
mov
push
insl
fsubrl
adc
cmp
pop
jle
xchg
dec
mov
and
lcall
in
adc
test
and
out
popa
imul
rorb
outsl
addr16
mov
in
adc
test
jle
cmpsb
lock
mov
jecxz
sub
rcrl
fsubrp
mov
and
rcrl
push
pop
and
xor
fistl
add
rcrl
sbb
pop
and
shr
push
addl
faddp
popf
sbb
faddp
add
faddp
sbb
pop
and
xchg
mov
and
adc
rcr
lahf
pop
fstl
adc
rcrl
adc
push
call
mov
pop
daa
sbb
xchg
pop
rol
and
scas
inc
cs
xchg
fsubrs
outsl
adc
and
sub
dec
movsl
inc
outsl
ficompl
xchg
daa
xchg
loop
cmp
test
dec
shll
mov
ss
out
gs
jl
mov
outsl
jno
xchg
or
fsubl
fadd
sbb
faddp
sbb
faddp
sbb
faddp
sbb
faddp
sbb
faddp
sbb
faddp
sbb
fiadds
adc
push
pop
adc
lds
sbb
faddp
sbb
faddp
sbb
fcmovnb
sbb
faddp
sbb
faddp
sbb
fisubrs
sbb
faddp
sbb
faddp
sbb
faddp
sbb
fdivrp
shrb
dec
mov
pushf
insl
mov
and
and
repnz
aaa
inc
insb
sahf
negb
rcl
add
sub
inc
les
sbb
mov
outsl
mov
dec
sub
sub
fcoml
pop
sbb
loopne
fwait
sbb
subb
push
push
dec
sub
sbb
fdivl
lods
inc
or
repz
push
mov
ja
lds
jl
push
insb
out
mov
jmp
loopne
xchg
gs
and
xor
loop
stos
fsubrl
imul
aam
mov
rolb
sub
sub
mov
sysenter
lods
xor
lret
stos
or
mov
dec
pushf
xchg
out
addr16
sub
scas
adc
jge
dec
mov
ret
sbb
sbb
inc
out
test
sbb
mov
outsb
insl
fadds
sub
sub
or
out
or
cwtl
sar
lea
push
push
icebp
mov
cmp
jg
push
jmp
add
sub
insb
pop
call
or
or
fdivs
fists
cmp
push
xchg
mov
dec
xor
arpl
xor
loop
inc
or
sbb
mov
inc
xchg
insl
insb
push
jp
cmc
sub
jmp
shlb
sbb
int3
xor
stc
fisttpl
mov
mov
or
lcall
jne
and
out
lcall
loope
aaa
mov
leave
inc
pop
out
mov
jg
jb
sub
xchg
jg
pop
xor
dec
push
arpl
mov
stos
fmuls
dec
jl
adc
cmpsl
loop
fdivp
pusha
jmp
mov
jno
push
ljmp
mov
cld
fistpl
inc
inc
sbb
mov
rcrl
test
pop
shl
dec
sarb
out
mov
cmpsl
add
cmpsb
sub
sub
test
and
push
das
and
and
xor
ret
call
stos
out
dec
imul
push
addr16
pop
jbe
pop
stc
aaa
icebp
mov
or
rol
jecxz
add
stc
jl
sbb
clc
scas
adc
jb
dec
xor
es
sti
xchg
lcall
rorb
adc
mov
scas
add
loopne
sbb
mov
icebp
sahf
xchg
or
cmp
jb
mov
jmp
movsl
adc
cmp
push
mov
loopne
push
enter
sbb
xchg
inc
xchg
add
add
add
or
add
adc
in
add
cmp
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
add
hlt
jmp
add
in
add
push
in
add
or
add
pop
in
add
adc
add
popa
in
add
push
in
add
imul
add
sub
add
jno
add
aaa
in
add
jns
add
inc
in
add
sub
add
popa
fs
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
add
leave
in
add
add
add
fucomip
add
add
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
push
add
push
add
add
push
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
push
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
je
insl
add
add
add
add
add
add
add
sub
add
cmp
sub
add
push
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
mov
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
ret
scas
mov
add
add
add
cltd
sub
aaa
xlat
xchg
and
inc
and
repz
inc
push
lret
dec
push
and
in
jge
roll
add
addr16
mov
out
popa
pop
add
push
repz
stc
and
jno
push
jno
sbb
cli
xchg
lcall
lahf
inc
mov
inc
jnp
mov
mov
cmp
adc
sar
aas
shll
jb
pop
loopne
aad
sub
outsl
cltd
lea
ffreep
loope
std
adc
mov
mov
jle
dec
insl
jge
fiadds
xchg
pop
out
mov
mov
sub
xchg
xor
mov
loop
xchg
mov
jo
mov
addr16
ja
push
into
lods
int3
fsubrs
mov
mov
cwtl
add
push
ret
mov
subl
iret
mov
pop
mov
and
or
cmp
inc
or
test
push
adc
push
fldcw
int
in
fisubrl
fcompl
cld
ljmp
xchg
sti
repz
xchg
cli
pop
inc
sbb
jbe
push
sbb
addb
data16
mov
in
mov
sbb
fists
test
push
js
or
out
pop
loope
into
sbb
data16
push
sub
or
cld
mov
inc
test
ret
push
shlb
jo
or
in
xor
out
xorl
popa
jne
repnz
mov
inc
sbb
pop
add
ds
aaa
inc
or
ret
lret
pop
adc
arpl
fisubl
push
mov
pop
sahf
jp
arpl
mov
push
mov
push
pop
faddl
mov
ljmp
xchg
sti
inc
mov
shrl
aaa
xchg
cmp
adc
inc
or
add
cmp
push
roll
imul
stos
add
push
dec
sbb
lcall
test
xchg
mov
and
inc
in
jb
jp
xor
push
mov
push
aad
sub
jp
push
idivl
out
je
icebp
leave
pop
fistpll
sub
das
jae
mov
pop
sbb
and
test
pushf
outsl
scas
int3
shlb
fidivrs
lods
out
mov
pop
test
adc
scas
mov
or
imul
jecxz
inc
push
mov
adc
push
int3
fs
out
repnz
or
int3
add
insb
cmpsl
pusha
test
in
mov
movsl
fcmovnbe
mov
inc
cmpsb
xchg
cltd
sbb
popa
faddp
cmpsl
mov
xorl
sti
xor
je
movsb
outsb
loope
int
dec
pop
and
pop
cs
xchg
fisubl
cmpsb
mov
push
lock
aad
arpl
jne
fmull
in
cmp
push
mov
inc
aam
adc
arpl
stc
add
inc
fisubrl
vshufps
pushf
pop
stos
adc
mov
and
ja
mov
push
jl
shll
xchg
test
add
push
rorl
jmp
fimuls
stos
in
jmp
inc
adc
cmp
popa
and
fisttps
push
lock
adcl
and
decl
cmc
jno
ja
jl
faddl
loop
mov
inc
mov
sbb
inc
mov
cmpsb
or
ljmp
xorl
fwait
xchg
jbe
insb
lock
std
and
dec
push
or
into
sub
stc
push
ss
push
push
cmp
mov
add
adc
bnd
xor
test
cld
out
in
push
add
dec
dec
xchg
sbb
push
or
out
adc
insl
pop
fistpl
push
mov
mov
mov
fdivrs
cld
add
push
cs
loope
xchg
aaa
mov
push
mov
repz
stos
adc
lods
mov
sarl
arpl
jmp
subb
adc
pop
sbb
cld
push
dec
xchg
sub
lret
les
cmp
jmp
inc
push
call
pop
es
js
dec
jecxz
xchg
cmp
inc
movsb
push
scas
cmc
fwait
int
add
cmp
cltd
sahf
sti
xlat
mov
dec
add
mov
add
sbb
aad
cmp
mov
sti
pusha
sbb
mov
cwtl
and
test
inc
insb
icebp
rclb
hlt
cwtl
imul
test
push
out
mov
sub
ror
mov
xchg
jle
ds
loopne
adc
neg
cmp
lret
mov
stc
xor
mov
mov
clc
out
stc
adc
jl
xchg
add
aad
mov
push
adc
push
dec
scas
movsb
aas
sti
andb
mul
aad
les
add
or
in
int
outsl
mov
mov
pusha
push
cmpsl
adc
or
add
and
mov
jge
add
shll
aad
lods
and
xor
add
ret
aas
pushf
ret
sbb
addr16
or
push
inc
leave
iret
push
adc
sub
mov
sbb
fldenv
pop
lds
ds
mov
aas
mov
jg
pop
cmp
shll
pushf
fsubl
sbb
push
lret
jb
jno
sbb
rolb
stc
or
jb
stos
cli
out
std
clc
cli
out
jg
cmpsb
mov
cmp
test
test
and
cld
popa
cmpsb
add
fidivrs
or
lahf
pop
push
flds
push
scas
sbb
imul
std
andb
out
dec
jl
sub
not
inc
outsl
pop
pop
bound
out
fidivrs
add
dec
aad
movsl
push
pusha
daa
fcoms
movsl
popa
add
movntq
std
outsl
adc
mov
cmpl
cmpsl
js
fldenv
push
inc
xor
in
mov
mov
fildl
push
cmp
mov
cwtl
mov
fmull
in
fnstcw
into
in
rep
mov
ds
sbb
test
dec
stc
dec
add
fucomi
cmc
les
sar
repnz
jns
mov
mov
repz
movsb
pop
pop
dec
xor
scas
jne
sub
gs
mov
rcrl
fucomip
xchg
in
inc
add
leave
xor
pop
popf
outsb
sbb
fisttps
fnop
lock
lods
fnstenv
mulb
adc
mov
and
sub
lods
cwtl
lcall
sub
test
push
cmp
ja
xchg
inc
xchg
popa
mov
iret
mov
inc
and
jns
dec
into
and
in
jno
adc
imul
cmp
cmc
testb
xor
addr16
push
data16
and
mov
mov
int
add
push
pop
hlt
adc
mov
cmp
mov
loopne
aad
or
jecxz
stos
adc
mov
mov
insl
mov
ljmp
cmp
out
scas
daa
cli
popl
inc
jbe
dec
inc
popf
xchg
dec
sbb
xor
lret
imul
test
push
test
gs
and
fimull
cmp
movsl
cmp
mul
rcrl
jg
popa
push
mov
repnz
add
and
mov
adc
bound
jae
pushl
lds
in
stos
mov
jno
add
out
fidivrs
push
es
aaa
pop
mov
xchg
popa
lods
iret
bound
mov
enter
sub
cmp
pop
cld
mov
jp
stc
xchg
lcall
rcl
add
or
mov
jecxz
jmp
lea
push
enter
pop
mov
jl
aaa
ret
mov
lret
fnsave
inc
mov
lds
insb
into
pop
push
cmp
cmp
cmovs
arpl
push
dec
xchg
sub
stos
shll
movb
in
inc
xor
pop
xchg
cmc
fstl
pop
scas
sbb
or
jmp
add
arpl
out
lcall
dec
stos
jge
shll
out
and
sbb
cmp
and
mov
outsb
pop
shr
idivb
push
in
xchg
adc
loopne
nop
fisttps
call
test
outsl
mov
xchg
push
mov
loopne
cmc
negl
jle
cmp
nop
xchg
fdivrl
push
clc
add
mov
loopne
xchg
call
cmp
int3
adc
fs
sarl
dec
ret
aad
lock
insl
sub
push
ljmp
jo
jns
int3
int3
or
shll
add
mov
xor
push
sahf
pop
push
mov
ret
std
or
lea
insl
adc
push
cmp
xchg
outsl
jne
dec
mov
push
mov
add
jp
jb
adc
in
loope
adc
and
int
pop
fldenv
clc
out
adc
rcrl
das
xchg
outsb
std
add
jbe
ret
cmp
dec
mov
les
dec
xchg
add
push
and
sbb
stc
movsl
xchg
fprem
ja
push
mov
and
sbb
dec
ret
out
jb
inc
or
ss
xlat
sbb
icebp
arpl
inc
movsb
pop
adc
push
jg
xchg
mov
sbb
mov
rcrb
test
push
fs
or
cmc
pop
daa
lods
aaa
pop
and
sub
xlat
mov
mov
mov
imulb
sub
pop
jg
dec
in
nop
jl
fsubrl
sbb
cmpsb
stos
push
lds
mov
outsl
not
js
mov
clc
xchg
sub
notl
in
sbb
int
cmp
sbb
lahf
gs
data16
pop
cmp
xor
mov
aaa
mov
push
inc
arpl
push
mov
loop
stos
addr16
fnstenv
lock
mov
xor
popa
rorb
sub
shl
mov
push
mov
jbe
jge
sahf
test
jns
add
jmp
dec
pop
cltd
mov
inc
ret
and
lcall
sub
sbb
ret
cli
inc
pcmpeqd
fldcw
repnz
aaa
pop
jge
jmp
aam
bound
ljmp
insb
int
jp
pop
cmpsb
es
xchg
push
push
out
fldl
out
cmpsb
js
mov
and
pop
mov
push
ret
mov
inc
cwtl
aas
pop
mov
push
out
cmpsl
bound
fists
sti
add
testb
lcall
rcrl
out
mov
inc
or
out
dec
pop
jecxz
sub
imul
mov
mov
push
jnp
xchg
test
fs
clc
rorb
ja
jne
out
das
cmp
push
scas
lahf
in
call
aam
sub
out
and
dec
leave
mov
dec
fucomip
mov
push
add
cmp
ret
pop
movsl
outsb
add
cltd
mov
push
and
sub
mov
adc
in
in
sbb
jecxz
pusha
or
adc
and
and
icebp
ss
or
or
xor
or
mov
adc
mov
hlt
adc
mov
je
push
out
cmp
ljmp
aaa
daa
xor
aaa
xchg
sub
test
sub
nop
xchg
dec
sahf
and
sub
mov
cmc
add
adc
add
mov
xchg
repz
xor
jmp
jge
les
cld
dec
rcrl
lock
out
jne
xchg
jno
push
sbb
push
and
mov
pushf
int3
xchg
push
repnz
stos
mov
loopne
push
frstor
push
mov
cmpsl
ja
sbb
int
or
push
push
xchg
pop
push
popa
and
cmp
cmp
xor
test
cltd
jns
mov
jmp
fcoml
shlb
push
sub
xchg
push
mov
fsts
push
lods
movsl
sub
cmp
hlt
push
test
stos
in
subl
adc
lods
or
insb
cltd
xchg
or
enter
jo
idivb
sub
pusha
das
xchg
xlat
aad
jne
mov
lcall
movsl
ljmp
cmp
outsl
sbb
sbb
cltd
sbb
sub
icebp
iret
mov
mov
sahf
cltd
push
adc
stos
mov
mov
mov
or
mov
dec
dec
dec
adc
lock
cld
and
pop
xor
pop
adc
jne
pop
push
mov
in
or
lret
test
in
and
fldl
scas
lcall
call
movsl
mov
mov
push
scas
lcall
mov
mov
imul
loope
xchg
in
mov
xor
shl
inc
jp
ret
ret
push
or
fildll
mov
aaa
ja
xchg
jp
in
test
mulb
jmp
imul
push
inc
cmp
es
jp
xchg
inc
jg
add
loop
pushw
int3
psubq
out
fadd
jge
out
sbb
int
les
les
mov
mov
scas
imul
add
mov
leave
into
outsb
sahf
pop
sub
adc
jge
push
sarl
stos
scas
sub
iret
add
subb
subl
std
cwtl
test
ret
ljmp
hlt
xlat
outsb
sti
cltd
cmp
fiaddl
mov
adc
jmp
push
inc
dec
fisubrl
sbb
xor
lock
push
pusha
push
inc
jge
or
lods
inc
cmp
or
aaa
add
sub
fwait
lret
ss
cmpsb
clc
or
mov
or
in
inc
iret
adcb
xchg
mov
pop
lods
sub
lds
xor
jge
push
and
idiv
and
ss
cs
jl
int3
add
out
jecxz
scas
rcrl
jle
jmp
es
subb
cltd
mov
sub
push
cmpsl
imul
mov
shll
xor
xchg
jne
inc
jle
test
mov
sub
addb
xor
inc
repz
cs
pusha
adcl
loopew
or
sbb
push
dec
mov
nop
nop
out
adc
std
pop
fistpl
arpl
cs
fmull
pop
and
pop
aam
adc
sti
subb
cmp
pop
pop
incl
cmp
mov
cmp
divb
out
loop
dec
jl
cmp
int
xchg
cmpb
in
and
add
xchg
repz
aas
add
mov
lea
inc
bound
sub
pop
mov
mov
dec
pop
sub
lea
or
fsubrl
scas
testl
aam
inc
test
mov
jnp
push
data16
shlb
mov
add
or
cld
mov
sub
mov
push
es
cmc
fwait
lret
data16
outsb
leave
outsl
pop
xchg
xor
addr16
stos
aam
pop
aaa
arpl
and
je
fmul
xchg
push
dec
jnp
xchg
mov
dec
fs
mov
push
pop
xchg
call
cmp
ds
aam
aas
aas
stc
xchg
cmp
and
std
loope
mov
xchg
mov
sub
sbb
popl
enter
les
lock
lods
mov
mov
lahf
pop
pand
icebp
dec
aad
sbb
mov
add
mov
jmp
push
cmpsb
notb
cli
loop
or
adc
mov
jg
jmp
push
add
out
push
add
ficomps
dec
call
sbbl
inc
addb
into
sbb
mov
scas
ljmp
notl
push
add
fisttpll
mov
dec
mov
xor
aad
loope
mov
cmp
cs
inc
xchg
jns
add
and
xchg
adc
inc
inc
inc
inc
int
stos
xchg
out
push
dec
mov
fcomps
imul
mov
inc
and
push
jp
int
push
in
mov
icebp
lea
sbb
inc
ja
lds
sti
push
add
jae
xchg
xchg
movsl
shlb
or
jo
sub
ja
pop
pop
xchg
in
lods
out
decb
xchg
xchg
fistl
lahf
push
sub
dec
cmp
shll
int3
push
mulb
sahf
ds
leave
mov
test
cmp
mov
sbb
xchg
mov
aam
cmpsb
mov
sub
loop
mov
dec
add
pop
das
xor
sbb
into
lock
mov
leave
mov
pop
iret
aam
xchg
jl
cmp
ds
jns
lret
mov
jnp
sub
sbb
cld
in
mov
in
or
pop
out
cmp
dec
fwait
js
js
mov
fsubl
pop
mov
jp
mov
jbe
lret
test
test
mov
pop
jb
xor
aam
mov
testb
aam
mov
ja
mov
lea
fildll
lahf
gs
data16
ja
cld
adc
out
bound
popf
push
test
sbb
cmp
cld
add
push
cwtl
and
push
insb
sbb
insb
xor
nop
imul
repnz
test
out
pop
imul
sub
rolb
cltd
ret
adc
jno
sub
push
mov
xchg
daa
mov
not
xchg
repz
mov
or
pop
xor
mov
pushf
addr16
cmp
insl
adc
or
cmp
sub
shll
pop
jb
mov
adc
push
add
cltd
xor
jle
adc
ljmp
adc
aam
push
arpl
jle
xor
and
sbb
adc
xor
cli
and
xlat
jbe
jmp
insl
ret
mov
rcr
sti
push
xchg
mov
and
movsl
cmp
in
andl
mov
test
imul
out
push
je
mov
cmpl
xchg
pop
jo
mov
mov
sbbl
push
and
out
push
lret
xchg
xchg
mov
enter
push
outsb
jnp
mov
les
pusha
incl
or
cli
sub
out
mov
dec
and
mov
in
mov
fisttps
mov
cmc
jge
std
sub
addr16
jp
mov
icebp
pop
dec
ffree
and
push
jle
ljmp
cld
xchg
ret
or
int
cmp
add
push
leave
fimuls
sub
test
sbb
inc
jne,pt
cld
mov
popf
mov
dec
cmpsb
mov
ret
xor
cmp
sbb
cmp
or
adc
stc
xor
test
adc
xchg
jo
sarl
pop
or
loope
movsb
arpl
out
call
mov
bound
stos
inc
rclb
xchg
sarb
fisttpll
ss
xchg
dec
stos
mov
push
lcall
clc
insl
inc
push
stos
push
js
xor
fbstp
mov
add
adc
scas
mov
pop
jle
lret
sub
mov
push
cmp
fildll
adc
jp
adc
dec
pop
sub
inc
adc
pop
sbb
es
std
sti
mov
xor
int
or
jg
cltd
mov
js
dec
add
divb
out
mov
in
jae
mov
in
jp
scas
cmp
dec
inc
outsl
movsl
sti
aam
pop
loopne
lods
pushf
out
xchg
mov
jns
ljmp
dec
mov
lahf
repz
mov
fscale
sbb
fsubrl
mov
pop
fldl2t
movl
add
cwtl
daa
sbb
lahf
xchg
push
mov
loopne
lods
out
hlt
scas
shl
cltd
pushf
mov
stos
add
mov
testl
insb
out
cmpsl
inc
pop
xchg
fsub
cmp
mov
lds
add
mov
adc
stos
enter
and
outsl
mov
pop
adc
pop
mov
cmp
xchg
ss
jno
sub
ss
and
jle
cwtl
ss
daa
jle
xchg
sahf
mov
and
sbb
pop
hlt
or
jmp
bound
push
ret
cli
pop
loopne
hlt
sub
adc
cli
sub
je
mov
sbb
mov
loopne
inc
sbb
xor
push
call
and
shl
xchg
sbb
push
je
scas
dec
mov
pop
sub
ret
sahf
pop
mov
call
cmp
and
test
dec
insl
rcrb
shl
cld
popa
dec
and
pop
push
fidivs
xor
out
jp
pause
mov
and
fidivrl
dec
adc
or
mov
xchg
int3
and
jmp
xor
sahf
jge
push
pop
xor
rcrl
fadds
je
mov
mov
mov
dec
aaa
loope
insb
and
repz
sbb
mov
mov
cmpsb
jb
test
mulb
push
xchg
cmp
and
out
pusha
jae
add
test
ret
sub
mov
xor
xchg
scas
jmp
and
push
movsl
fisubs
dec
cmp
mov
add
pop
pop
push
inc
in
loopne
cmc
repz
sarb
sub
jb
xchg
jae
add
mov
test
push
inc
jle
adc
movsl
push
add
mov
add
adc
fcmovbe
loopne
sub
stos
add
mov
or
es
adc
out
pop
icebp
dec
and
xchg
test
inc
and
sarb
pop
fisubrl
and
jg
stos
mov
imul
shll
ds
adc
mov
addb
sub
push
loope
mov
inc
loope
xlat
int
mov
xchg
repz
jp
xchg
pop
pop
mov
callw
es
add
or
lret
push
and
push
in
sub
mov
fisubrl
mov
out
out
aas
test
lahf
jno
pop
dec
jns
push
pop
test
popf
mov
insl
xor
or
xchg
pop
leave
negl
ljmp
fcoml
cmpsl
test
pushf
or
dec
mov
mov
mov
lock
and
push
sbb
xor
aaa
xchg
mov
pop
lods
push
das
xchg
ja
pushf
fcmovne
xchg
call
ljmp
push
push
imul
mov
jbe
icebp
adc
and
sub
testl
ret
int3
imul
hlt
rcll
fwait
fwait
outsb
push
or
cld
pop
mov
or
cmpsb
iret
add
fistl
fucomi
ffree
mov
mov
lcall
mov
dec
dec
int3
pop
ss
lahf
das
in
repnz
dec
push
and
cmp
pop
jmp
les
mov
xchg
or
push
jge
fcompl
dec
imulb
mov
jns
push
dec
stos
inc
and
inc
jecxz
xchg
sub
mov
mov
xchg
out
jbe
dec
mov
loope
cmp
jns
std
pop
das
sbb
aam
addr16
jg
or
mov
jbe
int
inc
mov
stos
jle
mov
mov
out
jg
cmp
xchg
mov
xor
mov
mov
xchg
fldenv
jmp
outsl
cwtl
push
mov
sbb
gs
or
stos
fcoml
mov
cmpsl
repz
xor
add
mov
loopne
pusha
adc
mov
jle
xchg
out
inc
xchg
notl
sub
and
lds
test
hlt
sub
push
mov
mov
dec
ret
daa
sub
push
es
int3
xor
std
outsb
in
pop
push
test
rcrb
subb
je
add
lock
mov
push
mov
test
add
xchg
sub
sub
mov
pop
pop
mov
das
sub
test
arpl
test
pushf
inc
cwtl
push
xchg
stc
sub
jge
xor
jle
fwait
push
and
enter
push
icebp
es
jg
lea
rorb
inc
mov
aad
loope
dec
or
mov
xchg
and
adc
std
ja
fcomps
mov
or
gs
jge
jmp
fwait
pop
dec
lret
stos
cmp
push
paddusw
jns
aaa
add
sbb
add
cmp
lret
and
aad
lcall
testl
movsb
mov
nop
push
sbb
cmp
push
pop
xchg
and
xchg
popf
sub
add
rcrb
loope
fcomip
add
fwait
jecxz
nop
xchg
mov
addr16
int
outsb
cmp
pop
das
xor
mov
sub
cmpsl
cmp
stos
adc
call
inc
sub
test
mov
dec
push
add
mov
jno
push
pusha
or
jl
pop
ljmp
mov
adc
mov
jb
test
adc
mov
mov
mov
pop
pop
stc
fidivl
pop
add
mov
mov
cmp
rolb
lcall
test
je
push
dec
rorl
jg
mov
xlat
mov
mov
xchg
jns
aas
in
xor
cmc
xchg
push
aas
les
lret
sbb
push
and
ja
loop
mov
sub
push
pushf
cmpsl
jb
gs
sbb
in
jle
mov
lock
popa
push
outsl
dec
fsubl
aad
pop
cmpsb
in
jns
mov
in
fs
shlw
faddl
fisttpl
popa
and
push
or
imul
or
mov
enter
xor
mov
pop
add
jns
dec
rolb
push
cmp
add
add
adc
fyl2x
shll
ret
loop
sarb
jno
xchg
xchg
out
fdivl
fisubl
push
pop
inc
loope
cwtl
xor
imul
int
jmp
data16
dec
les
ret
or
stos
cmpsl
xlat
fstpl
xor
add
fnstsw
push
xchg
ffreep
ds
leave
icebp
sqrtps
dec
shll
jns
cmp
pop
mov
or
pop
std
fildl
push
xchg
popf
aas
mov
cmp
cltd
ljmp
in
push
adc
mov
adc
xchg
mov
mov
lret
fcmovnb
inc
inc
fwait
jae
loop
insl
mov
mov
jb
cltd
lcall
inc
dec
and
mov
rcl
xchg
mov
movsb
xchg
leave
xor
jb
push
in
mov
push
je
adc
cmp
sbb
sbb
xchg
movsb
pop
aaa
lds
jl
fcomps
mov
or
sub
adc
jge
pop
xlat
mov
and
ljmp
out
lds
lock
in
mov
nop
pop
adcl
ds
push
fadds
js,pt
jecxz
sarl
faddl
inc
lock
inc
dec
in
repnz
aas
subb
lea
sub
mov
mov
aad
sbbl
jb
inc
dec
cmp
out
xchg
lret
pop
add
sbb
sub
ljmp
stos
mov
push
mov
je
mov
mov
lds
cmp
xchg
iret
jge
xlat
cs
pusha
out
dec
clc
mov
inc
pop
and
dec
out
push
out
out
test
shrl
imul
xchg
loop
popf
and
sub
in
sarb
nop
push
mov
adc
addr16
mov
pushf
or
mov
sub
insl
fwait
sub
call
mov
inc
dec
adc
xchg
pusha
dec
push
fwait
enter
dec
ds
sub
mov
bnd
xchg
jo
push
lods
insb
dec
sarb
mov
pop
xchg
sarl
add
add
jns
xchg
imul
loop
push
ret
inc
frstor
jge
lret
scas
lcall
sti
mov
pop
test
pop
push
addr16
cmpsl
repz
mov
add
test
loope
into
lret
adcl
pop
into
pop
or
push
into
sbb
aas
pop
mov
mov
popa
test
cli
lods
cmp
and
out
xchg
mov
addr16
add
mov
push
sbb
inc
xchg
inc
xlat
aaa
pushf
add
repz
enter
mov
mov
jno
jg
cmp
dec
out
push
js
xlat
test
mov
mov
xchg
pop
cmp
out
mov
xchg
dec
jns,pn
bound
jp
mov
gs
and
push
imul
mov
adc
movlhps
call
ljmp
adc
fstpt
pop
mov
stos
pop
rclb
nop
shll
dec
or
xlat
mov
mov
sbb
ficoms
aas
jg
ficomps
inc
jp
stc
lcall
push
clc
fldl
mov
xor
mov
scas
fidivrl
in
xchg
ja
clc
lret
dec
jb
add
data16
push
sbb
xor
movsl
xchg
scas
mov
mov
or
mov
pop
mov
or
pop
jne
test
jmp
mov
add
cmpsl
xchg
push
mov
rorb
subl
inc
cmp
mov
cmpsl
pop
test
das
mov
icebp
loop
adc
dec
les
lret
xchg
test
mov
mov
mov
mov
pop
mov
push
rclb
or
jmp
xchg
lods
test
xor
add
iret
ja
inc
out
adc
out
pop
or
xchg
shrd
pop
jmp
test
pop
mov
arpl
notl
in
imul
lea
xchg
adc
sub
fimuls
xchg
jo
imul
pop
sbb
clc
imul
imul
fsubl
mov
test
fistl
out
jp
cmp
loope
adc
pop
test
shlb
dec
loope
lahf
cmpb
fildll
mov
lods
popa
push
lcall
xor
adc
call
cli
std
sbb
push
mov
movsb
test
outsb
adc
inc
gs
iret
mov
dec
addr16
mov
cmpsb
clc
fimuls
inc
popa
mov
mov
push
jl
mov
xlat
jg
into
rcl
aas
xchg
jns
push
sub
xchg
mov
sbb
test
inc
pop
xor
popa
pop
adc
and
mov
aaa
jecxz
imul
nop
push
jl
nop
int3
xor
sub
push
sub
xor
adc
test
xchg
test
je
pushf
aas
push
xorb
cmc
push
mov
xor
xlat
add
lods
stos
xchg
jp
fs
cltd
mov
jge
sub
xchg
sub
loope
pop
gs
insb
xchg
or
dec
mov
fdiv
adc
inc
push
shrb
xor
mov
repz
lret
sbbb
sub
jo
outsl
inc
loope
movsl
arpl
adc
invlpg
sbb
xor
pop
lahf
add
in
scas
fbld
mov
das
or
das
sbb
adc
lcall
fisttps
aam
shl
dec
in
xchg
adc
mov
incl
scas
int
std
incb
add
xchg
sbb
and
fidivl
xor
inc
shlb
jns
in
xchg
fwait
and
call
push
mov
dec
xchg
incl
pop
pushf
push
inc
adc
sbb
push
mov
and
jp
daa
push
imul
ljmp
and
or
pop
mov
sub
and
mov
mov
sahf
xchg
xchg
test
out
ficomps
cmp
scas
jecxz
xor
out
add
cld
push
popf
ret
mov
xchg
inc
jmp
addr16
xchg
dec
jge
inc
xor
out
popl
stos
mov
sub
push
cli
push
scas
jmp
mov
inc
andb
cmp
das
jbe
pop
push
pop
sub
mov
or
fnstcw
scas
inc
out
mov
loopne
xchg
das
jge
pop
add
add
lret
fs
mov
jmp
dec
adc
mov
cwtl
mov
pop
fidivs
pop
into
jb
movsl
xchg
xlat
jb
xchg
push
cmp
xchg
ljmp
or
cmp
add
sahf
xchg
fbstp
inc
faddl
call
push
nop
inc
push
fcomp
adc
add
scas
push
adc
jne
pop
test
cli
cmp
subb
lret
mov
mov
insb
or
fisubl
adc
mov
out
inc
mov
add
jle
cmp
jg
sub
cld
into
and
fcoms
and
push
mov
js
sti
xor
stc
push
cmp
out
negb
inc
dec
pop
and
clc
inc
xchg
xchg
stos
pop
ret
mov
inc
pop
lds
cmpsl
xor
test
xor
mov
out
cmp
int
adc
push
and
ror
add
xor
adc
dec
into
and
mov
jge
fistps
sbb
push
inc
pop
es
dec
cwtl
mov
jne,pn
aam
xor
movsl
xor
enter
bnd
aam
aad
arpl
ja
jecxz
sti
fisubs
jb
xchg
in
pushf
mov
insl
leave
pop
or
push
lea
dec
pop
push
sbb
xchg
add
cs
mov
mov
stos
mov
dec
shrb
arpl
arpl
in
imul
int3
lods
cmpsb
sub
mov
dec
test
bound
loop
cmp
ja
xor
xor
or
mov
in
mov
nop
xchg
mov
arpl
aam
jp
dec
sub
dec
bound
icebp
sbb
mov
push
repz
dec
mov
xor
jl
addr16
mov
mov
aaa
mov
ficoms
fldcw
adc
std
mov
jns
ja
fsubrl
testl
mov
mov
cwtl
xchg
movsb
push
shll
fadds
sbb
pop
push
rcl
xlat
mov
inc
xchg
es
aas
sbb
lea
jmp
stc
push
add
sti
gs
pop
jg
pushf
dec
sub
mov
mov
fisttps
add
mov
mov
pushf
inc
jo
xor
enter
mov
adc
mov
insb
add
sti
add
stc
xor
cwtl
fwait
lahf
out
pop
popf
addl
js
pop
pop
icebp
out
push
xor
mov
xchg
lcall
push
test
stos
pop
sbb
inc
jge
arpl
jb
push
gs
inc
mov
add
je
adc
jbe
pop
sub
lods
lods
or
add
test
scas
mov
push
out
mov
out
mov
sbb
cmp
lret
fmull
mov
bsr
push
fstpl
mov
push
xor
cmp
or
test
ret
cmpsl
xchg
xchg
jno
pusha
rcrb
sub
repnz
lock
popa
sbb
stc
int
aad
dec
in
sti
push
movsb
fimull
popaw
js
sti
icebp
int3
jg
mov
insb
js
xchg
movl
mov
adc
sar
dec
dec
std
jecxz
or
xchg
outsl
loop
shll
xor
fadd
test
repnz
pop
mov
gs
cltd
out
dec
sarb
mov
outsl
in
insl
jns
add
inc
adc
repz
lods
inc
cmp
cld
cmp
shrb
pop
xchg
sub
sti
nop
in
in
imul
inc
pop
push
push
inc
ret
arpl
popa
dec
test
and
xor
or
xchg
enter
outsl
sub
loop
in
sbb
mov
pop
rcr
sub
dec
adc
adc
jno
sub
adc
fs
pop
rorl
adc
mov
loop
jns
mov
ret
jo
xchg
jae
dec
inc
and
sarb
icebp
cmc
iret
hlt
pop
xchg
jnp
in
jo
mov
mul
xchg
les
lret
mov
in
mov
mov
jne
pop
jmp
cld
subb
jg
mov
or
xlat
mov
xchg
cmp
test
addr16
scas
sub
mov
cmp
sbb
pop
mov
out
xor
dec
les
push
dec
jmp
cmpsl
imul
xchg
sbb
xor
test
sub
mov
xchg
jne
fbld
jae
les
lds
adc
out
mov
ret
sbb
jbe
adc
pop
jl
inc
inc
mov
add
cmpsb
add
int
xchg
ljmp
dec
jg
imul
inc
mov
sbbl
gs
js
sub
push
js
stc
xchg
rol
xchg
xchg
adc
xor
arpl
or
dec
pushf
jno
add
xor
insb
xchg
jge
iret
jbe
das
mov
test
sbb
stc
sbb
orl
shrl
push
rorl
push
inc
movsb
xor
and
pop
pop
ja
cmp
ja
sbb
bound
fwait
adc
cmovno
aaa
data16
mov
and
pop
insl
mov
test
adc
push
dec
push
push
in
cli
idivb
add
fwait
pop
push
loop
lahf
and
push
repz
scas
sub
repz
push
pushf
xchg
enter
mov
test
ss
push
in
adc
mov
loope
xchg
sbb
repnz
in
into
iret
notb
or
fldt
fstl
nop
push
clc
cltd
pop
int
ret
cli
fadds
mov
flds
in
leave
adc
loope
lea
mov
sub
push
sbb
sub
mov
inc
mov
jle
xor
or
or
sete
cli
stc
mov
dec
sub
call
rcl
xor
lret
push
rorl
outsb
or
into
pop
or
mov
popa
and
push
mov
dec
pushf
daa
mov
outsl
jns
xchg
bound
ja
andl
addr16
mov
lret
add
frstor
loope
inc
imul
lods
push
jmp
rclb
je
mov
in
notl
dec
adc
jle
lods
dec
sahf
and
jg
mov
call
aas
mov
pop
dec
dec
test
hlt
cmp
mov
cmpsl
cmp
stos
pop
sub
mov
scas
jl
sub
xchg
xor
mov
outsb
or
lods
lret
ljmp
mov
sub
xor
and
jge
mov
dec
fdivl
add
sti
sbb
add
jb
scas
and
push
xchg
push
fsubs
sbbb
inc
decl
fcomps
adc
cmp
ja
adc
test
push
les
mov
sbbl
aas
push
mov
lock
mov
cld
adc
in
xchg
test
fstl
push
lahf
or
jle
leave
jl
insb
mov
loope
loope
pop
jl,pn
push
ja
pusha
out
insb
jl
stos
xchg
or
xchg
sti
aad
sbb
adc
gs
scas
xchg
and
add
insl
and
aad
jo
mov
ljmp
ja
xchg
inc
or
fimull
push
sub
inc
dec
ficoml
xor
xor
outsb
sub
cmpsl
jne
inc
jg
mov
mov
int
or
lock
push
mov
mov
pop
sub
mov
xchg
dec
cmc
ljmp
xchg
call
imul
into
std
inc
popa
jle
dec
data16
or
sarb
or
xchg
daa
mov
dec
mov
lret
mov
fsub
fisttpl
cmp
xor
and
pop
cld
xchg
nop
dec
mov
orl
shlb
cmp
andl
dec
mov
jp
lret
fsubr
xor
sub
xchg
mov
jl
lret
or
iret
std
cmp
fbstp
cmp
daa
mov
or
mov
xchg
fildl
fsubp
orl
xlat
stos
bound
enter
jo
push
or
ficompl
into
in
jle
add
lcall
in
rol
xchg
pusha
jnp
andb
lods
add
xlat
xchg
outsl
and
add
and
and
pop
into
push
ffreep
push
cmp
out
and
mov
sub
loope
sub
jmp
out
cmp
pop
hlt
test
insl
test
or
pop
sahf
stc
push
test
test
sbb
xchg
cmc
mov
jb
lcall
rcrb
pop
cltd
sti
aam
lahf
clc
mov
and
inc
stos
outsl
xchg
ss
cmp
mov
sbb
in
sbb
daa
test
xor
ljmp
gs
mov
fs
daa
ljmp
sbb
xor
or
int3
outsb
cli
insb
gs
in
jnp
or
insl
jb
xchg
jo
dec
ljmp
aaa
sub
xor
enter
jp
nop
xorb
xlat
sahf
mov
push
and
int
aaa
or
sbb
imul
mov
jno
fisubs
rclb
pop
clc
mov
ret
push
push
jmp
das
adc
push
daa
lea
roll
test
mov
xchg
arpl
mov
add
mov
or
loop
pop
stc
ds
pop
xor
pusha
add
push
icebp
neg
enter
jb
lea
mov
cmp
or
and
sbb
or
cmpsb
adc
sarl
sbb
xchg
sub
mov
insl
cli
mov
push
pop
xchg
in
sbb
pop
mov
inc
pop
repnz
xchg
popa
lods
imul
cmpsb
sbb
pusha
popa
dec
sub
test
lea
loope
cmp
pminub
pop
dec
adc
xor
jecxz
outsl
stc
inc
xor
push
jecxz
int3
in
cmpl
xchg
push
and
and
xchg
inc
jnp
aam
cmp
dec
adc
loop
jecxz
push
xchg
mov
sti
push
mov
les
sbbl
ficoms
xor
jbe
sbb
sub
mov
lcall
push
cmp
xchg
xchg
dec
sbb
ret
lcall
add
test
or
jb,pn
in
or
mov
mov
jle
pushf
cmp
test
pop
dec
hlt
dec
cld
out
in
adc
xor
hlt
sahf
subl
loop
pop
xor
sahf
std
add
push
and
inc
push
mov
arpl
mov
xchg
dec
into
js
inc
ja
gs
fsts
sub
and
inc
outsb
test
add
xchg
xor
cmp
pop
ja
and
jbe
or
sub
jae
xor
adc
xchg
in
scas
and
mov
leave
mov
ja
dec
cmp
cmp
jns
xor
sbbl
dec
out
dec
add
pop
lock
in
mulb
aam
sub
push
xorb
insb
mov
and
mov
in
movsl
pop
mov
cli
in
sbbl
mov
and
imul
cmc
repz
push
push
cmp
rcrb
add
je
sbb
jo
adc
aas
testl
adc
inc
mov
dec
in
mov
repz
push
push
out
das
mov
inc
cmp
cmpsl
pop
xor
fs
adc
sbb
xor
mov
test
mov
movsb
fnstsw
add
daa
cmp
mov
lret
xor
sbb
xorb
mov
icebp
aaa
ss
dec
mov
sbb
add
lret
fisubl
xchg
adc
into
frstor
enter
dec
jmp
pop
mov
int
mov
inc
outsl
sahf
push
in
xchg
sahf
insb
lds
cltd
sub
or
jge
add
shrb
icebp
push
jp
lahf
lock
out
or
out
cltd
xchg
jge
mov
adc
sub
dec
push
push
mov
sbb
sbb
ret
pop
xchg
sbb
inc
mov
push
shr
ja
stos
mov
jae
aas
les
movsl
aam
outsb
add
mov
in
icebp
icebp
scas
aad
jg
cli
push
mov
pop
in
sub
sbb
jge
testl
stc
and
cmp
mov
xor
xor
shl
cwtl
loopne
shlb
icebp
int3
imull
adc
fwait
and
inc
ss
shrw
mov
push
mov
cmpsl
outsb
add
adc
rol
movsl
xor
xchg
dec
sahf
mov
jecxz
dec
out
std
push
call
outsl
xor
lcall
push
fidivrs
adc
mov
dec
cmovno
les
push
shll
pop
in
dec
lea
pop
out
pop
add
outsb
rcl
mov
jns
inc
cmp
btl
push
cmp
roll
mov
imul
and
adc
jne
cmp
nop
ret
shlb
inc
push
mov
sti
shrb
jns
cwtl
cmp
sub
jae
pushf
lcall
inc
jle
clc
cmp
jbe
hlt
sub
jb
cmp
testb
add
cli
and
das
enter
mov
out
push
push
adc
das
pop
mov
fldt
sbb
pop
dec
fmull
rclb
dec
xor
xor
pop
xchg
push
xchg
mov
std
mov
insb
xor
cmp
push
cltd
dec
cmpsb
aam
in
pop
movsl
or
inc
dec
mull
repnz
or
fs
mov
scas
jg
pop
xchg
push
mov
sbb
push
or
sahf
int
addl
xchg
cmp
mov
std
mov
pop
into
pop
push
mov
cmp
scas
mov
jecxz
rolb
adc
xor
jo
imul
fisttpll
movsb
popf
xor
icebp
out
push
pop
dec
out
cmpsl
jecxz
mov
insb
mov
enter
xor
out
pop
add
lcall
js
adc
mov
jecxz
or
push
sbb
push
ss
jae
xchg
idiv
rol
push
adc
jb,pt
jp
out
inc
jl
cli
cmp
dec
out
inc
lock
int
or
lock
in
cmp
or
test
sbb
push
adc
mov
mov
sbb
jle
daa
ljmp
stos
pop
lds
jl
adc
xor
adc
ljmp
jge
dec
arpl
xor
icebp
bound
add
xchg
scas
inc
cmp
and
xor
push
fsubrl
out
les
andb
jns
jle
adc
fs
pop
cmpsl
push
inc
ja
xchg
pop
push
enter
enter
mov
popa
movsb
lahf
inc
or
xchg
lock
mov
pop
mov
xchg
sbbl
mov
das
loope
jle
stos
aaa
call
sub
cmp
add
sahf
push
adc
adc
lods
dec
orb
icebp
mov
into
scas
loopne
xchg
sti
ret
sbb
sti
adc
data16
push
jbe
mov
es
mov
and
mov
addl
sbb
popf
add
pop
shl
int3
popf
or
dec
push
mov
aaa
imul
sub
jge
push
xor
outsl
mov
fsubrs
fiadds
mov
mov
lret
lods
sbb
jle
mov
bound
mov
cwtl
notb
mov
pop
shr
movsb
add
in
inc
loopne
stos
sbb
mov
pushf
sub
in
test
and
sbb
sbb
aam
cmp
jae
movsb
or
jne
in
cmp
mov
sbb
and
outsb
shlb
out
sbb
icebp
xchg
nop
test
cmp
jo
mov
daa
popf
enter
outsl
imulb
test
mov
and
xor
popa
lods
aas
mov
jne
cld
mov
out
data16
mov
sbbb
jo
repnz
xor
mov
pop
data16
int3
movsb
in
and
dec
shlb
clc
mov
clc
cmp
jl
adc
xchg
xchg
ss
inc
fldl
pop
test
dec
lret
out
mov
cmp
arpl
lcall
inc
xchg
dec
ja
inc
popf
pop
lds
test
shrl
dec
cmpsb
jecxz
mov
sub
push
outsb
cmp
shlb
mov
fnsave
xchg
sbb
inc
je
cmp
sbb
push
jbe,pt
mov
sub
dec
add
je
outsb
stc
adc
fcompl
push
out
lret
adc
fdivs
dec
push
pop
leave
clc
ret
mov
je
cs
lea
imul
repz
clc
and
cs
lret
and
cmp
mov
dec
aad
mov
and
orb
cmpsb
jle
out
inc
adc
clc
aas
mov
jae
sub
adc
jg
lods
fbld
sbb
sahf
out
std
xchg
mov
jb
mov
sub
mov
mov
and
bound
push
pop
mov
sti
push
dec
lcall
scas
push
fidivl
mov
fwait
rcr
or
enter
dec
mov
jae
scas
ja
xchg
xchg
out
cmc
jecxz
and
je
daa
add
push
mov
fcoms
arpl
outsb
xchg
inc
or
aad
cltd
ret
mov
mov
or
xor
pop
fs
lods
clc
fmul
pop
and
mov
ret
xchg
and
mov
sub
idivb
sbb
cmp
pop
jge
sbb
movsb
nop
push
sub
out
les
fs
scas
and
nop
enter
outsl
leave
mov
in
mov
mov
adc
xor
mov
jns
loopne
dec
jb
adc
pop
mov
fstl
xor
cmp
std
insl
mov
daa
jle
push
sbb
inc
adc
mov
pop
mov
enter
mov
cmp
lods
daa
aaa
add
lcall
roll
out
mov
mov
jmp
stos
pop
push
repz
mov
or
pop
xchg
fnstsw
sbb
scas
shlb
pop
ljmp
aad
and
std
nop
adc
xchg
fidivl
push
lods
movsl
ds
outsb
pop
in
pop
nop
pop
inc
fsubr
sub
mov
out
mov
dec
int
jno
imul
sbbl
insl
dec
or
xchg
add
leave
xchg
test
pop
fs
sarl
cwtl
out
out
inc
inc
mov
xchg
and
lcall
ja
mov
nop
fwait
sub
test
jb
lahf
cld
stos
lea
test
les
or
loopne
inc
nop
loopne
iret
imul
test
push
lret
or
ljmp
sub
adc
inc
inc
jle
popf
push
push
dec
dec
js
sbb
add
and
lods
add
pshufw
stos
xor
cmp
push
inc
jnp
shrl
sbb
das
xor
push
lahf
js
mov
leave
ret
mov
das
loop
test
sbb
je
lock
mov
and
sahf
aad
sub
cltd
dec
arpl
aas
mov
call
pop
adc
ja
cmp
xor
cmp
inc
push
das
lods
test
pop
xor
popf
sub
ret
loopne
enter
jmp
adc
sbb
and
adc
cmpsl
cmp
imul
sub
and
imul
pop
mov
sbb
mov
mov
lret
xchg
rclb
ljmp
rclb
dec
xchg
cs
push
cmpsl
psllw
sub
cmc
cmp
hlt
gs
int3
mov
cmpsl
lods
pop
cmc
mov
wbinvd
lock
cmpsb
icebp
mov
and
test
daa
mov
sub
pop
sub
pusha
lods
testl
mov
das
pop
stos
mov
adc
gs
pop
cmpsb
subb
out
adc
pop
add
out
jge
pushf
lret
lds
xor
inc
sbb
shll
push
jns
imul
mov
addr16
mov
mov
ss
jle
inc
ret
sar
lcall
xchg
cmp
fistpll
jle
lods
sub
icebp
push
cmpsb
xchg
sub
pop
out
push
or
loop
jl
sub
rolb
mov
repnz
jns
pop
jecxz
ljmp
and
cmpsb
sub
faddl
cmpsl
cwtl
cmp
or
jp
dec
into
inc
push
in
jo
leave
sbb
aam
fcoms
pop
arpl
mov
fwait
lret
iret
fisttps
dec
cmp
int3
pop
fcmovu
cmp
flds
inc
mov
cwtl
mov
sub
jb
lock
ljmp
icebp
dec
sbbl
cmp
sub
stos
adc
imul
pop
jle
and
pop
mov
or
ljmp
shll
or
adc
lds
adc
fstpt
lods
movsb
pop
mov
int3
incl
cmp
movsb
sub
pop
push
addr16
or
mov
testl
shll
or
xchg
xor
mov
adc
push
mov
xor
jg
aam
std
imul
stos
out
or
je
xor
test
setp
cmp
in
xchg
clc
icebp
rcrb
mov
movsl
mov
dec
add
pop
jnp
push
pusha
mov
mov
rcl
sub
mov
jbe
dec
cmp
adc
pusha
adc
mov
adc
lods
jb
push
dec
imul
cs
lret
push
sub
iret
jmp
cmpl
in
imul
add
mov
clc
inc
popf
inc
xchg
dec
jo
mov
sbb
mov
adc
dec
ds
sti
int
cmp
scas
lods
sbb
cmp
aam
jmp
popf
sbb
mov
sbb
pop
push
int3
and
pop
xor
pop
xor
jp
ja
mov
cli
xchg
fnstsw
xchg
sbb
mov
in
sbb
push
out
cmpsb
push
inc
xor
mov
pop
fistpll
mov
imul
mov
sbb
inc
mov
xlat
pop
inc
mov
insb
push
jne
jecxz,pn
jo
jno
clc
fdivrs
adc
int
popa
dec
out
dec
jnp
insb
jno
sar
push
add
into
lock
cmp
adc
pop
inc
xor
in
xchg
sahf
sub
adc
lahf
cmp
mov
jl
pop
adc
ja
push
fprem
jne
loope
clc
sbb
clc
jl
jp
test
push
jb
jg
mov
ficoms
cmpsb
jo
xchg
inc
pop
out
mov
sbbl
mov
jle
hlt
sarl
aaa
movsl
imul
and
xor
xlat
xor
add
jo
test
adc
inc
xchg
mov
sbb
shl
sbb
sub
repz
mov
adc
outsb
jl
cmpb
cmpl
adc
push
jge
pop
mov
mov
pop
mov
int3
jno
stos
out
push
sub
mov
mov
sbb
cmp
inc
addb
orl
loope
xor
fcoms
cli
push
out
lret
inc
aas
jo
push
adc
mov
in
jge
push
push
mov
movsb
push
call
add
cmp
shlb
loopne
add
mov
mov
push
outsb
xchg
xchg
loope
mov
inc
cld
lret
insb
add
dec
pop
push
mov
xlat
ret
arpl
dec
cmp
pop
idiv
cvtdq2ps
sti
out
fisttps
repnz
jmp
je
jb
cmpb
dec
push
adc
xchg
cli
in
xlat
jge
aad
jnp
jnp
inc
popa
das
mov
lea
je
add
enter
jg
jae
push
popa
iret
rolb
adc
movsl
adc
cli
cltd
out
add
push
fs
cmp
cmpsb
js
mov
outsl
xchg
cs
fmull
aad
mov
dec
xor
aas
lods
inc
mov
loopne
jo
roll
jecxz
add
add
adcb
mov
ficoms
ret
push
dec
adc
mov
out
xchg
incb
inc
pop
mov
sti
sub
in
fistpl
or
repz
js
lcall
loopne
mov
push
repnz
adc
cvtps2pi
add
jns
fdivs
cli
cmpsb
cmpb
mov
jp
loop
push
push
adc
sbb
push
dec
lods
push
jl
cmp
cmpsb
cmp
lock
inc
or
dec
sbb
sub
add
mov
scas
sbb
jmp
jl
mov
jbe
je
xor
mov
jnp
adc
aas
rcll
jge
mov
out
adc
or
cli
je
mov
stos
lea
test
pop
add
cmp
js
mov
jmp
jg
pop
adc
stc
ficoms
jne
rcr
push
xor
mov
pop
mov
es
insb
xchg
dec
imul
scas
int3
and
push
adc
movsb
rcl
sbb
mov
setp
insl
pop
lea
test
flds
jecxz
jp
inc
cli
adc
sub
adc
outsb
mov
mov
push
mov
insb
fstpt
jns
adc
dec
and
jp
cmpsb
lods
jbe
xchg
sub
lock
push
ss
push
or
sbb
scas
dec
xchg
push
fbstp
fmull
out
adc
call
pop
xchg
scas
push
outsl
ficoms
out
daa
inc
mov
adc
or
and
aas
ja
lock
and
lret
add
xchg
pop
mov
sub
add
pusha
mov
adc
add
adc
inc
lret
or
loop
jmp
mov
dec
mov
int3
unpcklps
cwtl
pop
popa
testb
testl
push
push
xchg
popf
add
dec
mov
xchg
xlat
xchg
xchg
cmp
push
sbb
cld
jge
testb
imul
sub
imul
mov
and
mov
test
or
pop
adcb
sbb
jmp
iret
push
pusha
mov
jnp
lods
push
inc
inc
mov
xchg
daa
fldt
scas
pop
insb
mov
and
xchg
push
pop
jo
sub
in
push
ljmp
repnz
testl
sub
ljmp
cmc
ljmp
mov
test
test
sbb
pop
fwait
pop
imul
sbb
sub
xchg
jnp
adc
sahf
pop
in
rolb
and
jns
jle
inc
jb
cs
pop
mov
andl
subl
inc
mov
add
jnp
les
adc
js
mov
lcall
pop
or
sub
fcmovbe
test
add
jno
shr
jge
stc
daa
arpl
mov
frstor
and
adc
aas
fld
adc
adc
or
add
cli
je
gs
cwtl
ds
stos
dec
js
out
ljmp
call
sub
sub
lods
mov
movaps
xchg
add
lret
push
inc
fsubs
sbb
pop
mov
mov
lret
hlt
push
int3
adc
test
clc
arpl
pop
cmc
lea
pop
jmp
rcr
out
nop
insb
pop
imul
push
jp
sub
push
addr16
push
jne
pop
or
add
xor
pop
into
and
outsl
mov
xor
mov
add
inc
cmp
mov
loopne
cld
push
mov
pop
cltd
pop
and
xor
xor
and
into
pop
ja
dec
push
fnstenv
aaa
add
xor
daa
xchg
mov
out
arpl
sbb
pushf
sarl
or
mov
fmul
aad
icebp
or
xor
push
or
loop
repz
shrl
imul
adc
test
mov
mov
mov
mov
ret
daa
cld
xchg
stos
jb
cmp
sbb
dec
leave
lahf
xchg
das
mov
mov
mov
jb
jb
dec
lahf
fdivs
stc
bound
push
adcb
pop
repz
dec
enter
inc
jmp
fstpt
push
data16
jp
mov
cmpsl
lahf
cmp
je
xor
and
sub
les
pop
int
push
or
cli
cmp
mov
add
jnp
shr
mov
ljmp
movsb
xchg
imul
dec
sbbb
cli
push
out
sbbb
dec
sahf
roll
aas
push
xlat
lods
arpl
xchg
add
or
nop
add
adc
ret
mov
inc
std
inc
lods
push
fildl
add
lea
jae
mov
dec
add
cltd
mov
jl
insb
pop
push
add
pop
and
test
ret
orb
or
sbbl
add
xor
mov
cld
in
jecxz
jne
sub
jecxz
cmp
cmp
sub
outsl
and
jne
ja
in
lods
pushl
shl
xchg
clc
dec
mov
iret
cld
out
mov
dec
sti
jne
repz
shl
test
lods
mov
xchg
and
and
adc
test
inc
test
mov
pop
mov
mov
mov
adc
inc
xchg
push
mov
jp
jmp
jns
leave
lret
idivl
sub
lret
int
and
ja
pushf
dec
inc
pop
jmp
xor
rol
in
sub
sub
ljmp
or
and
ror
or
je
fisttpl
nop
ss
dec
inc
sub
xlat
xchg
push
fldt
cmp
shlb
adc
ljmp
mov
mov
or
cld
in
sub
fsubrl
cli
mov
or
test
mov
or
or
xor
push
xchg
jb
test
fcomps
les
xor
and
inc
ja
stc
mov
dec
dec
push
sbb
push
in
scas
leave
ret
or
les
in
pop
and
mov
mov
adc
iret
imul
mov
mov
rol
repnz
adc
push
and
mov
popa
sub
push
cmc
add
jae
jno
and
cmc
push
mov
gs
cmp
loope
cmc
std
pushl
stos
or
test
xchg
inc
in
push
cwtl
outsb
das
bound
cli
and
cmp
or
scas
ficompl
sub
shrl
push
mov
sarl
jp
jae
pop
sbb
add
into
shlb
jmp
dec
imul
lahf
adc
jl
add
inc
adc
cmp
es
sub
mov
lret
int
xor
mov
jns
jnp
stos
jo
int3
push
or
add
sub
std
pop
idiv
cmpsb
push
push
xchg
jnp
sbbb
dec
and
in
outsl
adcb
jo
jg
and
lds
aas
jo
and
dec
xchg
sub
jmp
sarb
adc
arpl
mov
pop
fisubl
push
lock
lock
push
sub
imul
test
inc
fsubl
leave
inc
aaa
lret
lret
scas
or
jne
bound
stc
pop
les
mov
push
scas
fidivrs
popa
arpl
mov
xchg
mov
jns
and
mov
mov
int3
test
fwait
lods
add
repnz
xor
push
lods
dec
add
inc
or
insl
xchg
push
fdivrp
aaa
mov
mov
xlat
fwait
xlat
std
mov
insl
movsl
xor
loopne
cmp
mov
outsb
stc
mov
test
insl
je
movsl
jg
sub
xorb
mov
subl
scas
rcrb
add
call
lcall
or
lcall
pop
sub
mov
and
cmp
cmp
leave
jae
jne
sub
dec
popa
ds
testl
push
push
pop
sarl
dec
and
jae
mov
mov
mov
pop
mov
xchg
mov
loope
int
mov
loopne
call
int
add
fxch
mov
inc
mov
sbb
loopne
cmpsb
inc
jns
jecxz
or
mov
fadds
std
std
sbb
and
or
add
mull
sbb
iret
in
movsb
inc
in
call
lods
or
mov
cmp
sti
add
js
bound
pop
jno
into
xlat
call
pop
push
adc
push
pop
pop
dec
rorl
fdiv
mov
test
fnstenv
repz
cmp
xchg
jne
cwtl
or
add
sbbl
pusha
popf
test
or
sbb
mov
inc
cltd
mov
sbb
or
hlt
fcomps
cmp
jne
sub
pop
in
nop
adc
clc
repz
mov
test
mov
mov
xor
dec
fsubr
mov
fcompp
out
fdivrl
inc
adc
ss
cmc
jnp
cmp
loop
idiv
out
rcrl
sbb
in
into
cld
xchg
add
inc
orl
mov
mov
lea
sbb
movl
or
stos
jo
aas
xchg
iret
dec
and
mov
mov
ficomps
enter
inc
push
and
lea
inc
inc
dec
adc
mov
push
push
stos
pop
or
sbb
mov
movsl
fcmovnbe
lahf
cli
pop
pop
push
inc
sbbb
imul
push
xor
in
add
jnp
aaa
sub
andl
jge
imul
pop
jb
in
stos
sub
push
or
les
into
jns
add
in
adc
into
mov
lock
out
jmp
cmp
push
insl
fimuls
daa
mov
jae
cmp
xor
leave
ljmp
cmpb
jle
ret
imul
sub
xchg
inc
jmp
or
sub
jmp
adc
mov
popf
dec
xlat
xchg
stos
les
insb
rcll
cmpsb
mov
scas
lcall
jbe
mov
int3
pushf
shl
mov
cli
lahf
test
popa
and
mov
loopne
xor
fistpl
scas
dec
mov
push
inc
add
sti
jnp
std
dec
dec
in
push
dec
shr
loope
fstpt
adc
cmc
lret
dec
push
mov
out
add
popl
movsl
scas
ss
add
enter
jl
fwait
cmp
xor
mov
imul
stc
sub
icebp
or
push
mov
push
mov
adc
xor
push
into
mov
xchg
xchg
cli
pop
mov
pop
insl
clc
das
shr
pop
mov
outsb
push
mov
jmp
cmp
movsl
andb
jg
xor
adc
cvtdq2ps
into
sub
es
cmp
scas
lea
push
sub
lcall
xchg
pop
dec
and
jo
dec
daa
xchg
adc
mov
cmc
sub
dec
inc
sahf
test
test
fdiv
out
adc
lret
add
lods
imulb
pop
cmpsb
popa
mov
cmp
in
jo
push
inc
inc
cmp
repz
adc
cmp
push
push
in
pop
es
push
or
xchg
cmp
push
or
inc
xchg
into
movsb
pop
scas
inc
or
addr16
adc
addr16
scas
ret
mov
pop
pop
sbb
mov
cmp
sti
add
enter
sahf
and
sub
mov
int3
jecxz
xor
pusha
js
shll
jns
xor
jmp
aad
or
mov
ja
push
push
icebp
jecxz
pop
sbb
inc
loop
cmp
sahf
xor
pop
js,pn
subl
pop
add
je
cwtl
jp
jl
icebp
aam
push
ds
xor
mov
mov
mov
je
shlb
adc
test
je
inc
xor
stos
mov
imul
and
pop
insl
or
jg
push
xchg
cs
dec
shll
sbb
jo
add
push
jl
in
dec
mov
dec
push
jp
add
mov
cmp
xchg
clc
mov
mov
pop
mov
movsb
rcll
std
dec
loopne
jns
jns
addr16
ficoml
push
and
int3
data16
inc
xchg
jp
je
fldt
lock
mov
cmp
mov
cld
dec
jecxz
mov
insb
int3
adc
ja
mov
fcmove
jb
loope
or
mov
cwtl
add
sub
pop
outsl
fistl
push
adc
fldenv
mov
lods
cbtw
xchg
xchg
lcall
fistps
adc
sbb
je
cmp
sbb
push
sub
test
shll
pusha
mov
cmp
repz
xchg
xchg
and
nop
xchg
lret
cld
and
cmp
push
add
add
xchg
push
rcr
or
pop
pushl
xchg
test
cmp
sbb
or
pop
inc
and
popa
mov
or
add
mov
inc
stos
aas
lods
mov
shld
dec
mov
rol
jle
add
pop
ss
push
sahf
mov
push
sub
gs
popf
jl
mov
stc
cmp
hlt
pop
cs
inc
rclb
and
push
pop
jle
fnstcw
leave
dec
mov
testb
lret
jge
addr16
cmp
cmp
mov
iret
inc
mov
sbb
inc
fdivr
stos
and
out
mull
jae
sbb
sub
out
sbb
rcll
popf
mov
cltd
push
in
mov
xchg
hlt
push
or
lods
mov
outsb
test
and
or
bound
xor
pop
inc
xor
pop
into
sbb
mov
popa
pop
stos
mov
mov
insl
cwtl
cmpl
sub
or
push
loopne
fdivl
in
loopne
mov
fs
push
mov
mov
sub
or
xchg
addr16
fisubs
push
mov
cltd
imul
adc
pusha
negl
fs
sub
lea
cmp
jp
dec
out
loop
inc
jg
xor
iret
jp
dec
popa
inc
ss
lcall
mov
cltd
or
enter
in
sahf
sbb
and
push
sbb
shl
xlat
lods
je
push
cmp
jg
pop
loop
inc
pop
xor
inc
stos
sbb
cld
sbb
das
cmp
and
loopne
pusha
insl
popa
mov
sub
adc
jbe
mov
fwait
jle
fcoms
nop
out
call
pop
push
stc
cld
sti
cmpb
lret
movsl
out
xor
push
pushf
scas
decl
mov
cmp
inc
pop
shl
mov
mov
popf
test
sbb
mov
add
cmpsl
inc
inc
cmp
dec
push
movsl
popa
lds
int
sub
inc
dec
mov
outsl
xor
addr16
aas
add
xor
inc
jmp
lods
rolb
dec
or
xor
out
popaw
and
and
push
pop
xchg
repnz
fidivrl
inc
lods
shlb
xor
test
sub
add
mov
push
or
pop
and
jo
or
mov
lret
lea
mov
hlt
les
inc
enter
pop
into
ficomps
and
dec
sub
mov
lahf
scas
inc
pusha
repz
ficompl
dec
stc
mov
shll
xchg
sbb
mov
daa
mov
cmp
out
add
sub
or
arpl
out
lds
adc
dec
lock
aam
clc
mov
sub
and
inc
xchg
movsb
add
jne
mov
aad
mov
test
ss
sbb
push
jnp
iret
je
mov
mov
mov
and
daa
mull
imul
fdivp
push
movsb
rcrb
dec
out
lea
loope
sub
mov
dec
cwtl
fbstp
rclb
mov
cs
sarb
jne
add
cmpsl
repnz
pop
rcll
jge
jle
mov
in
scas
je
cmp
sub
es
mov
jnp
cmp
push
icebp
bound
pop
xchg
ret
sub
hlt
loopne
xor
sbb
mov
sub
mov
lods
mov
repnz
adc
mov
and
icebp
push
stc
cli
outsb
mov
mov
xor
fs
and
repnz
in
inc
cs
xchg
sbb
pop
je
stc
mov
xchg
adc
outsb
push
scas
test
lods
iret
pop
cwtl
lds
xor
jp
mov
cmpsb
fiaddl
jg
adc
jp
mov
stos
in
cmpb
out
rol
in
leave
cmp
mov
cmpsb
sahf
mov
mov
cmp
mov
pop
lock
xchg
sti
ljmp
jbe
lret
rclb
lahf
mov
mov
mov
lahf
cmpsl
fnstenv
inc
add
es
ljmp
faddp
in
sbb
push
push
cmp
js
push
fldpi
imul
dec
xchg
icebp
dec
sbb
and
inc
add
dec
jne
jge
cmp
inc
jge
or
pop
jns
shl
mov
fiadds
jp
cmp
cmpsl
enter
inc
push
adc
std
movsb
pop
aaa
and
je
stc
ds
clc
lret
mov
in
jns
cld
dec
sbb
mov
subb
mov
and
cmp
in
decl
loope
push
push
cmp
sbb
sbbb
sbb
daa
shrb
xor
xor
ds
imul
not
scas
int3
cmp
paddw
out
les
cmp
mov
lea
fmul
inc
sub
jmp
cmp
xor
mov
test
cmp
xchg
sbb
xchg
and
cmp
bound
fidivrs
push
idiv
push
add
rcr
shl
inc
imul
lahf
mov
inc
inc
fs
xchg
inc
or
sti
and
ret
jo
cmp
mov
imul
jp
xchg
je
into
ss
fmuls
test
add
gs
sbb
lahf
iret
add
stos
jns
jbe
or
xchg
mov
pop
push
jbe
mov
adc
adc
mov
cmp
ficoms
nop
dec
mov
inc
test
pushf
into
or
addb
negl
es
jmp
jmp
cmp
mov
push
add
push
pop
inc
mov
fs
xchg
ja
faddp
mov
lds
push
inc
loop
ret
and
push
xlat
mov
test
ds
xchg
cmpsl
mov
loopne
push
mov
ds
aad
jp,pn
mov
xchg
mov
xchg
mov
mov
xchg
rorl
mov
ficompl
lds
je
mov
rclb
leave
lock
cmc
outsl
stos
in
shl
movsb
mov
fsubrs
mov
in
call
int3
dec
pop
stos
pop
jns
mov
jecxz
pop
adc
dec
dec
dec
icebp
mov
imul
outsl
popa
stos
es
pop
inc
sbb
outsl
or
orl
mov
in
mov
dec
popf
inc
movsl
inc
jno
dec
sub
dec
sub
jle
sbb
or
fsubr
add
adc
fcompl
rclb
dec
xor
loopne
sti
xlat
cmpb
xor
sahf
add
lods
pop
mov
xchg
pop
adc
fistpl
fwait
testb
mov
test
out
add
fcomp
cmp
pop
jg
mov
aaa
dec
cld
dec
loop
hlt
jecxz
repnz
movsb
inc
in
lret
sahf
inc
rclb
mov
mov
push
cli
das
popf
jbe
adc
pop
pusha
push
stos
iret
imul
dec
mov
inc
out
rorb
adc
aam
xchg
cmp
ljmp
dec
stc
mov
mov
push
sti
mov
cmc
imul
sti
shrl
roll
jns
inc
jle
leave
mov
aaa
arpl
orl
jo
push
xlat
lds
jl
or
iret
add
sbb
mov
mov
mov
push
mov
data16
lret
cmp
jb
gs
push
mov
cmpsb
mov
je
mov
movsb
jne
test
addb
xchg
dec
or
jb
cli
xchg
jl
inc
das
sub
inc
stc
aam
fsts
pop
dec
jne
call
mov
jmp
mov
jae
imul
cmp
andb
push
neg
push
rcrb
mov
je
test
fisubrl
jecxz
out
arpl
lahf
sbb
add
dec
pop
cmc
xchg
stos
add
pop
inc
lret
out
lret
pop
cmp
jecxz
sub
in
out
fwait
int
je
and
xchg
jle
imul
js
xor
loop
fmull
movsb
shll
lock
push
push
xor
iret
rorb
mov
adc
fstl
stos
fwait
ja
rorl
or
jae
inc
sbb
mov
cmpb
add
inc
ds
xchg
arpl
fidivrs
out
sub
pushf
jmp
dec
out
outsl
cmp
aam
mov
inc
mov
push
jge
jae
fs
pop
vpsrlq
pusha
jnp
stc
mov
es
mov
dec
and
into
popf
int
jb
mov
fcomi
in
jne
dec
loop
lahf
pop
cmp
popa
insb
dec
and
lds
sub
mov
add
in
in
ret
arpl
cmp
ljmp
call
mov
lods
ficompl
leave
cmc
pop
jmp
jb
and
movsl
sub
fstpt
bound
push
aad
pop
adc
mov
pop
orl
push
jo
dec
gs
sahf
cmpsb
push
in
subb
xchg
sbb
hlt
jp
lds
push
sub
push
mov
dec
add
xor
mov
ror
pusha
dec
add
xor
out
lcall
adcl
sub
mov
jp
adc
mov
addr16
lea
fcomps
testl
and
mov
push
xor
in
idivl
aaa
sbb
and
arpl
sti
es
and
in
push
or
mov
dec
mov
xor
mov
jl
fisubrs
lea
pop
mov
ljmp
enter
add
mov
push
ret
and
and
shrl
out
and
mov
test
subb
out
cs
insb
jne
das
push
iret
aaa
loop
data16
cmp
rcll
mov
mov
imul
adc
sub
je
sbb
das
add
fcoms
add
sbb
and
and
aad
pop
jno
je
jp
or
sbb
push
loope
jns
inc
mov
and
jno
les
in
push
xlat
dec
ficomps
and
add
mov
push
outsb
jp
inc
and
and
outsb
cs
or
std
ret
rorl
cmove
sbb
dec
mov
scas
jae
adc
enter
in
dec
push
fcoms
cmp
nop
movsl
test
lahf
shr
bnd
xor
cmpsl
aam
call
fs
fsubp
mov
daa
mov
test
pop
mov
int3
int3
adc
add
lahf
mov
pop
cmc
jecxz
lahf
adc
xorl
or
jmp
mull
add
add
jne
fcmovbe
addr16
jle
xchg
and
mov
jecxz
mov
lahf
xor
sbb
fcmovnbe
mov
jno
add
or
clc
lods
cs
or
cli
adc
xor
les
std
xchg
aad
xor
xchg
into
lods
jge
sub
push
push
clc
ljmp
inc
sbb
pop
aam
inc
cmpsb
dec
mov
shl
fldenv
mov
in
lcall
adc
xor
or
jg
pop
lret
jl
enter
pop
cmp
cmp
leave
cmpsb
sub
lods
mov
cwtl
ret
mov
xor
aaa
addl
dec
adc
inc
sbb
test
mov
test
adc
mov
ret
pop
xchg
jne
fnsave
mov
sbb
cmp
sbb
xor
adcl
imul
mov
mov
sbbb
shlb
popf
jle
jecxz
push
bound
dec
ss
shrb
xchg
push
or
push
or
and
fisubrs
mov
push
cmp
inc
sbb
mov
adc
scas
in
insb
adc
jbe
pop
movsb
outsb
xchg
mov
mov
inc
add
cmp
sub
mov
test
std
arpl
mov
std
movsb
or
xlat
fs
out
sbb
mov
or
aam
jle
int3
out
xor
lcall
or
xchg
out
or
pop
bound
mov
and
jecxz
xchg
daa
test
out
sub
stos
aaa
push
mov
sbb
rcrl
fcmovb
cmp
iret
mov
nop
test
mov
pop
push
mov
test
jae
jno
push
dec
sbb
call
aas
inc
out
fadds
jb
add
sub
rcrb
xchg
jmp
sbb
dec
mov
jo
ja
xchg
pop
mov
xor
push
orb
mov
push
aas
stos
aad
pop
xchg
into
mov
gs
push
jne
push
out
out
dec
jae
cmp
sub
loopne
in
lods
outsl
mov
jnp
jle
gs
std
vpmaxsw
cmpsl
adc
jmp
fdivl
mov
jnp
pop
addr16
das
inc
push
addr16
inc
clc
jns
pop
les
dec
aad
and
xlat
cmp
call
dec
rcrl
mov
mov
out
sub
arpl
je
test
mov
jbe
popa
imul
clc
test
jae
pop
cmp
movsb
xchg
dec
pop
xchg
lahf
nop
insl
sub
cmpl
shlb
fimull
sbbb
inc
dec
xor
pop
inc
jecxz,pt
mov
push
dec
repz
and
dec
sub
test
and
mov
out
sub
nop
pop
ret
mov
cmc
repnz
pop
jns
and
mov
daa
push
cmp
jae
movsl
std
pop
lods
mov
xchg
ss
sub
push
jo
fwait
cld
sub
jo
cmc
cmp
xor
and
negl
stc
enter
fildl
in
mov
shl
sub
sahf
sub
sub
xor
ljmp
outsl
mov
jo
in
dec
push
xchg
inc
fmul
in
fadd
lea
mov
mov
icebp
pushf
sub
into
push
adc
test
cmpl
xchg
push
or
push
int3
int3
stos
push
ljmp
push
cltd
mov
adc
les
hlt
lds
scas
mov
sbb
inc
pop
push
lahf
pop
dec
mov
ljmp
dec
push
xor
push
xchg
das
xor
das
cmp
xor
mov
push
and
loopne
push
sbb
mov
lcall
or
clc
aam
std
sub
outsb
imul
in
xchg
fists
in
and
cmp
sbb
xor
mov
repz
inc
mov
lods
incl
jno
cmpsl
mov
sbb
stc
aas
cmp
mov
movsb
push
or
xchg
sti
fldcw
xor
fildll
scas
push
xchg
jl
mov
inc
in
jmp
fldenv
add
add
test
aaa
in
cmpsb
push
out
dec
cmp
and
sbb
fwait
pop
fs
sub
clc
enter
inc
push
inc
fmull
dec
aas
test
sub
pop
or
dec
and
roll
xchg
push
mov
mov
sti
and
push
lahf
jae
cmc
pop
push
scas
or
or
andb
mov
ret
dec
push
sbb
fimuls
mov
inc
pop
pushf
and
pop
ljmp
mov
push
shr
lcall
ret
and
daa
inc
adc
jb
sub
cmp
jbe
mov
sahf
pop
movsl
sub
lods
mov
push
mov
push
xchg
movsl
fucomp
or
jne
push
into
cmp
sub
pop
mov
inc
xlat
arpl
pop
pop
jae
into
test
sbb
mov
inc
nop
pop
xchg
xchg
inc
inc
fiaddl
mov
push
add
lock
or
stos
jne
push
das
jecxz
or
sbb
cmpb
sbb
sti
inc
mov
movsb
mov
sbb
xor
sub
shlb
ret
lcall
pop
fs
fstp
popl
rcrl
sub
mov
xorb
mov
lcall
dec
fadds
enter
ja
jae
iret
rcll
aam
add
xchg
aam
sbb
out
insl
jmp
into
dec
js
jl
fwait
inc
idivl
movsb
ret
mov
xchg
iret
scas
cmp
push
push
stos
jo
in
mov
push
out
push
or
mov
icebp
mov
push
pop
sarl
outsl
scas
sbb
rol
insb
addb
lea
jb
sub
fidivrs
inc
mov
push
mov
xor
das
dec
fsubl
add
test
and
lds
fwait
es
test
sbb
mov
xor
fcompl
int3
fs
cmp
inc
sbb
insb
movsb
in
daa
adc
pop
aam
push
jns
xorb
mov
sub
lret
fwait
jns
mov
cmpsl
out
pusha
cmpsb
test
hlt
shr
js
xchg
leave
pop
stos
pop
int
aas
add
ja
test
sti
in
cltd
mov
adc
inc
push
pop
jns
mov
jae
inc
push
dec
lods
mov
jns
sbb
mov
cmp
inc
xchg
stos
cmc
dec
xchg
outsl
aaa
inc
inc
push
scas
in
and
push
fisttps
int3
imul
fiaddl
mov
insb
test
pop
sbbl
in
iret
pcmpgtw
sub
lods
clc
mov
jno
loopne
adc
ds
mulb
add
and
mov
pop
insl
pop
sbb
jl
loop
scas
xchg
jmp
inc
out
stos
jbe
jmp
pop
mov
dec
ss
aaa
mov
and
sub
inc
hlt
or
inc
or
fstl
pushf
adc
lcall
test
jmp
push
iret
bnd
jno
ret
cwtl
adc
ss
mov
in
nop
mov
cltd
cld
sub
cmp
add
sbb
xor
or
dec
loopne
std
fwait
js
movsb
xchg
inc
sub
fs
push
jns
or
lods
jecxz
xor
adc
repnz
cwtl
ret
mov
js
sbb
xchg
pop
aaa
aaa
test
xchg
sub
lret
int3
lret
out
vmwrite
xor
sub
test
pusha
popa
mov
push
sub
xchg
sahf
mov
mov
and
out
mov
mov
lock
mov
nop
push
xchg
adc
rol
mov
xor
push
sbb
xchg
pop
mov
nop
mov
insb
in
out
imul
push
push
fwait
mov
xchg
lcall
pop
push
xchg
mov
lods
adc
jmp
arpl
dec
jno
inc
jns
lret
jmp
icebp
and
adc
mov
mov
mov
sti
sub
cmp
bnd
movsb
movsl
pop
es
jo
data16
outsl
jecxz
xor
mov
sbb
movsb
mov
mov
or
mov
sbb
adcl
mov
jl
in
mov
in
test
pusha
std
sub
pop
ljmp
cmp
and
pop
mov
pop
lods
into
pop
xor
inc
push
sub
sbbl
cli
inc
inc
add
jmp
dec
orb
cltd
into
push
cli
cmp
mov
scas
jle
sarl
sub
push
das
insb
xchg
xchg
sbbl
hlt
div
jns,pn
cwtl
sub
fwait
xchg
rcrl
ja
out
add
faddl
fwait
call
or
mov
fmuls
lcall
push
cwtl
clc
push
mov
mov
jb
jb
mov
scas
jb
adc
test
jnp
push
ljmp
dec
inc
aam
out
inc
es
jmp
push
ret
pop
xor
push
push
hlt
push
mov
insb
xchg
inc
fsubrp
xchg
insb
sub
or
lods
loope
and
cmovle
push
in
sbbl
imul
incl
mov
sub
sub
lock
dec
rcrb
lock
add
in
xor
scas
fmul
or
aaa
adc
adc
push
mov
push
lods
add
pop
xor
jae
or
push
rcll
ldmxcsr
ret
hlt
lods
mov
bound
ret
push
ljmp
add
cmpsl
cltd
cli
ja
dec
sub
inc
mov
xor
mov
lock
mov
sub
sbb
outsb
sbb
inc
mov
loopne
enter
push
jns
inc
jno
fs
stc
arpl
mov
sub
fs
call
fwait
pushf
dec
ret
test
jne
into
popa
cli
test
cmc
imul
fcmovb
push
inc
push
mov
je
mov
int
jl
mov
pop
in
ret
dec
mov
xchg
scas
cli
sub
test
ds
xor
push
fs
test
inc
xchg
loop
inc
loope
mov
imul
dec
jmp
std
mov
imul
leave
les
cld
dec
gs
lahf
dec
out
xor
ds
fstl
popf
or
gs
icebp
aam
adc
mov
sub
roll
pushf
jnp
dec
leave
jns
cli
cmc
rclb
mov
lret
push
insb
add
rcl
stc
inc
adc
add
mov
pop
ror
hlt
push
outsb
cli
sbb
jmp
push
xlat
lcall
adc
aaa
push
jne
es
cs
mov
mov
dec
inc
lahf
stos
inc
sbb
cmp
push
mov
lock
mov
pop
stc
repnz
adc
add
mov
fcmovne
adc
pop
jecxz
xorl
out
mov
sbb
bound
mov
xor
popf
jb
outsl
add
add
not
push
popa
test
xchg
mov
add
and
mov
das
int3
cmpl
pop
pop
orl
and
test
loop
jg
in
xchg
pop
sub
sahf
pop
and
lahf
sub
mov
popa
push
mov
fistpl
bound
mov
add
jb
pusha
xlat
daa
fimull
ljmp
imul
stos
xchg
jbe
pop
or
ret
mov
and
jecxz
movsl
rcr
dec
jmp
pop
pop
fmull
cmp
mul
xor
mov
in
sbb
leave
sbb
cwtl
out
xchg
imul
cli
xchg
mov
sti
jecxz
dec
sub
pop
shrb
and
pop
rorl
pop
jnp
cld
cld
sub
mov
loope
scas
mov
movsl
mov
sbb
pop
inc
jecxz
mov
sahf
or
or
out
mov
sahf
mov
push
pusha
mov
sbb
leave
outsb
xor
in
pop
insb
dec
test
adc
adc
push
mov
loopne
lock
fcompl
cmp
mov
into
fwait
cmp
je
push
shrb
sbb
pop
lahf
mov
sahf
ret
lahf
andb
jle
sbb
mov
sub
cmp
jnp
lahf
lret
fdiv
inc
stos
xchg
mov
jl
mov
jae
dec
iret
iret
push
xchg
xchg
push
lods
xor
hlt
sbb
pop
xor
xchg
mov
loope
jmp
scas
add
mov
adc
subb
mov
xchg
add
xchg
mov
and
pop
mov
inc
push
pop
std
mov
pop
loopne
lcall
sarl
shrb
ret
or
sub
mov
mov
test
test
cmpsl
lea
aaa
jg
and
mov
insl
sub
dec
add
jns
add
pop
inc
cmpsb
pop
dec
mov
imul
add
xor
shl
nop
add
push
lcall
test
cmp
dec
push
rorl
arpl
out
int3
pop
out
adc
or
fwait
inc
adc
das
addr16
adc
jge
stos
fs
inc
shr
fwait
xchg
pushf
movsb
xor
mov
adc
rol
lock
cmp
jle
sub
xor
mov
aad
cmpsl
cmpsb
mov
dec
cwtl
hlt
mov
or
lcall
outsb
xchg
push
inc
xor
mov
dec
movsb
inc
str
aaa
aam
imull
aam
out
pop
mov
inc
inc
add
lret
push
lock
ret
mov
rclb
push
mov
idivl
jb
test
inc
test
cmpb
mov
mov
sbb
call
cmp
xor
imul
and
dec
adc
xor
jbe
dec
mov
test
enter
aam
mull
xchg
cwtl
sub
cld
push
xchg
nop
into
pushl
sbb
sub
jge
mov
lret
jp
cmp
loope
ffreep
sub
inc
dec
test
lea
xchg
outsl
mov
and
das
mov
aam
imul
push
iret
fistps
cmpsb
mov
cs
xchg
fildl
out
mov
xor
daa
test
pop
test
xor
mov
xor
iret
cmpsl
jecxz
fnstsw
mov
xor
mov
mov
bound
sub
ljmp
dec
fdiv
push
js
fdivl
xchg
jae
mov
lods
dec
mov
lock
call
or
stos
or
repnz
cli
xor
out
sbb
rol
arpl
sub
and
dec
adc
out
out
out
sbb
inc
push
stos
push
xchg
dec
jle
insb
dec
add
mov
aas
cmp
sub
lret
into
mov
xlat
mov
cmp
pop
out
daa
jge
pop
pop
push
adcl
mov
mov
mov
cmp
xchg
aas
les
xor
inc
xor
pop
push
xchg
out
pusha
lret
sub
xor
push
fsubl
outsl
fsubl
lds
ret
push
repz
pop
push
mov
idivb
insl
int
aas
mov
es
cmpsl
dec
inc
fwait
mov
sbb
fdivr
push
stos
mov
mov
shl
add
push
pop
push
outsl
fcompl
in
mov
mov
or
stc
addb
xchg
orl
xchg
fimull
pop
shr
into
fnsave
out
rolb
inc
mov
add
loope
push
stc
jne
sbb
or
add
ljmp
mov
in
mov
pop
jmp
icebp
xor
mov
fldenv
jnp
pop
test
cld
outsl
adc
cwtl
cmc
pop
lcall
adc
les
jge
push
push
hlt
mov
add
jge
es
dec
cmp
ds
dec
out
jae
ljmp
and
addr16
stc
jle
xchg
test
nop
push
jp
jg
push
jg
stc
inc
loopne
pop
test
ljmp
xchg
add
popf
sbb
pop
lret
xor
or
and
xor
mov
cmpsb
mov
stc
push
pop
test
in
negb
test
push
scas
lret
mov
hlt
sbb
popfw
negb
adcb
jge
leave
loope
cmp
adc
push
mov
cltd
adc
bound
lds
cld
inc
push
enter
shll
int
push
adc
ja
lods
sub
mov
pop
icebp
jmp
adc
lcall
push
mov
imul
jbe
hlt
xchg
jmp
cmpl
shlb
add
sub
push
mov
fnstcw
insb
dec
xchg
mov
outsl
je
mov
or
call
int3
push
andb
cmp
into
cmpsl
ret
inc
in
ljmp
mov
mov
cmp
ja
or
fwait
push
inc
sbb
sahf
clc
add
push
cli
decb
icebp
jmp
push
jno
adc
lods
dec
inc
aaa
icebp
in
fsubrl
lahf
xchg
and
adc
sub
shr
cltd
xor
std
mov
mov
test
mov
push
std
push
push
lds
lea
dec
mov
sfence
mov
inc
push
clc
sbb
and
ja
mov
popf
xchg
es
xchg
pop
sbb
pop
add
sub
gs
xchg
xchg
xor
mov
repz
xchg
xchg
adc
and
mov
pusha
lahf
xchg
in
test
cmpsb
pop
jb
jno
pop
jne
push
fwait
sub
aam
arpl
cmpsl
cbtw
pop
jns
jns
fwait
xor
outsl
imul
clc
aas
cmp
mov
jnp
and
jno
dec
add
cmpxchg
mov
add
cmp
or
pop
mov
adc
pop
and
bound
mov
jl
gs
xorl
xor
loope
int
add
in
pusha
test
lods
pop
jle
aam
sbb
cmp
out
dec
cmpsl
jb
add
mov
aas
inc
popf
jns
ds
lahf
sub
pop
rcll
daa
je
pop
mov
cmpsb
jmp
dec
push
inc
add
shll
and
or
inc
adc
loopne
sub
mov
je
insl
mov
nop
mov
xchg
xorb
or
xor
test
fisttps
sti
in
clc
je
sub
fld
addl
cmovnp
test
jnp
jae
test
lcall
insl
or
push
lds
cmp
nop
and
xchg
ss
shll
push
xchg
xchg
add
stc
and
and
mov
test
in
idivl
pop
xor
orl
imul
cs
add
jne
add
and
xchg
aam
push
sub
mov
rorb
adc
xor
sti
shll
xor
scas
mov
jg
sub
nop
add
adc
jns
out
xchg
jae
push
aad
jae
xchg
ficompl
or
mov
xchg
cwtl
xor
stos
clc
and
xchg
jo
js
filds
push
ljmp
push
lock
sbb
insb
mov
or
xchg
push
pop
adc
push
call
scas
cltd
mov
pop
mov
cmc
pop
divb
andl
lods
fs
sbb
mov
push
mov
xor
addr16
cmp
mov
jb
mov
jg
cmp
cld
xor
loope
xchg
scas
imul
repnz
mov
loop
add
out
xor
aaa
stc
ret
mov
hlt
sub
pop
inc
outsb
jp
push
inc
sti
sbb
jne
mov
test
mov
mov
push
and
cmp
push
not
xchg
dec
or
sbb
add
mov
aaa
repnz
in
in
jmp
arpl
push
int
pop
les
mov
aad
jb
inc
test
mov
fwait
iret
shll
mov
inc
mov
add
mov
stc
mov
mov
jge
leave
filds
inc
test
test
ret
cli
xchg
loop
mov
mov
aaa
call
data16
sub
daa
adc
iret
out
movb
insb
lock
mov
insl
or
dec
aam
mov
mov
add
or
call
out
arpl
aad
mov
xchg
clc
xchg
lcall
jecxz
hlt
sub
stc
pop
std
jno
inc
adc
jbe
push
lret
xor
lret
orb
rclb
icebp
pop
movsb
pop
mov
pusha
ss
mov
mov
mov
hlt
fstl
outsw
mov
sbbl
es
cmp
movsb
mov
lea
in
dec
fnsave
aas
xor
dec
cmp
inc
xchg
xlat
mov
or
call
icebp
pop
xchg
repnz
lea
popa
inc
in
pop
sbb
in
int3
cmp
orl
divb
fcomps
jo
mov
xchg
xor
mov
push
mov
mov
ficompl
dec
inc
xor
in
xor
ja
rorl
jno
iret
leave
sbb
loopne
test
cmp
jno
enter
push
jnp
jmp
mov
cmc
mov
add
fidivrl
inc
xor
cmp
or
popa
aam
push
dec
mov
movb
out
jo
push
aaa
push
in
popa
pop
sbb
pop
mov
scas
mov
clc
dec
sub
sbb
and
cmp
jle
fbstp
dec
inc
inc
xchg
out
decl
dec
inc
mov
sti
or
pop
mov
pusha
mov
in
xor
pusha
repnz
sbb
sbb
dec
out
mov
dec
rorb
push
mov
pop
test
adc
outsb
cwtl
scas
dec
sub
fdivrl
or
sarl
sub
sub
add
pop
and
mov
shlb
rcrl
sbb
inc
add
push
sbb
or
xchg
cld
test
aaa
and
pop
mov
call
push
repnz
xchg
cmp
movsl
daa
xchg
mov
push
popf
int
and
cmp
xchg
add
mov
movsb
loop
scas
jmp
jmp
add
fldt
cmp
loope
mov
popa
adc
push
je
sahf
shlb
in
rorl
jge
xchg
sbb
push
icebp
mulb
xor
out
mov
imul
ja
dec
xchg
pop
sub
xor
inc
sub
iret
insb
sarl
shlb
xor
xchg
or
mov
xchg
push
movb
loope
adc
xchg
jecxz
jae
rcl
mov
xor
dec
lret
pop
fstps
cltd
je
loope
cmpsb
pop
hlt
adc
sti
fistps
pop
adc
cmpsl
sbb
jmp
jb
scas
jo
aam
aas
cmpsl
jge
push
mov
mov
lcall
jae
pop
ret
push
hlt
mov
mov
testl
pop
mov
add
sub
ret
call
jle
push
repnz
aad
or
push
jg
mov
inc
lret
cmp
xchg
and
ror
scas
rorb
mov
push
cmp
jl
ret
popf
ss
inc
xor
add
or
or
mov
push
mov
xlat
sub
mov
push
jo
push
mov
push
push
adc
and
inc
xchg
xor
ret
in
jnp
cwtl
nop
inc
addb
jo
fs
mov
aad
pop
xchg
fistps
out
rcll
mov
jb
and
xchg
gs
mov
nop
aad
mov
dec
pushf
jge
lock
fistl
stos
pop
in
jne
xor
sub
adc
loop
sbb
pop
push
loope
lock
and
push
fidivl
mov
bound
out
clc
jns
sub
inc
mov
ret
cld
lret
cmpsb
xor
ss
cmpsl
pusha
inc
mov
fwait
ss
addr16
mov
out
pusha
aam
in
out
icebp
sahf
lret
sbb
xor
or
xor
cmp
mov
daa
push
fcomip
fisubs
adc
arpl
sbb
daa
jp
add
ficompl
jnp
jb
mov
loope
cmpsb
testb
scas
mov
cltd
lcall
dec
xor
mov
sub
wbinvd
mov
jbe
push
fwait
sub
mov
push
cmp
jne
in
mov
rcr
lock
adc
xchg
xor
dec
sbb
jg
sbb
sub
into
sub
mov
ljmp
xchg
or
rcl
adc
fidivl
fnsave
jecxz
mov
sub
sahf
aam
cmpsb
test
or
xchg
sbb
addb
pop
jmp
fwait
outsb
cmp
mov
cmp
ja
negb
shrl
jmp
cs
test
loop
pop
mov
stos
sbb
lcall
aad
loope
mov
mov
adc
daa
popa
sub
mov
std
xchg
or
mov
xlat
mov
fsubrs
inc
scas
mov
stos
outsb
lock
pop
gs
mov
jg
inc
xor
sub
pop
enter
dec
fsubrs
test
lahf
xor
addr16
data16
call
cmpb
and
insb
cs
in
movl
pop
daa
std
push
dec
and
cltd
inc
jmp
ret
adc
mov
adc
mov
out
movsb
sbb
add
cmp
dec
pop
jne
cltd
inc
fistpll
std
int
mov
jecxz
mov
cmpsb
or
lods
fs
inc
dec
jge
cld
scas
or
test
aam
hlt
xchg
cmp
frstpm(287
fldcw
sub
push
es
cmp
stc
out
mov
push
cmpsl
lock
push
test
cli
jne
daa
push
pop
movsb
adc
and
push
aam
push
pop
hlt
fcomps
xor
add
icebp
mov
or
jno
jmp
cmpsb
aas
fldenv
fisubrs
adc
mov
in
imul
mov
jmp
xor
mov
pop
mov
xchg
push
test
push
cmpsl
xor
rcrb
or
dec
imull
insb
fcmovnb
pop
pminsw
pop
lds
push
mov
scas
inc
outsb
jmp
pusha
mov
testb
bnd
and
in
add
sub
fnstsw
pop
in
xor
jo
pcmpgtw
test
mov
and
cmp
pop
adc
and
push
aad
dec
add
lock
dec
das
dec
adc
stos
outsb
shrb
jne
mov
rolb
cld
nop
xchg
cmp
enter
cmpsl
dec
jp
sub
insl
jb
leave
fdivrp
inc
jmp
lds
orl
add
fcmovu
pusha
add
xchg
les
ss
pushf
ss
cmc
je
add
fwait
addr16
jns
jmp
imul
or
jl
add
sahf
pop
push
lret
xor
dec
test
movsl
pop
mov
lea
paddd
mov
sbb
pusha
adc
jnp
inc
inc
cld
in
mov
rcrl
pop
xor
fisubrl
jo
imul
ljmp
faddl
stos
mov
sbb
fsubs
dec
rcll
mov
dec
sub
sub
mov
rcrb
gs
xchg
shrl
dec
pop
xlat
or
sbb
ret
cltd
push
jbe
inc
adc
das
push
lahf
pop
pushl
stc
loope
jge
adc
push
js
and
pop
scas
adc
addr16
ficomps
rol
ror
movsb
repz
ffreep
dec
jo
mov
roll
dec
outsw
xlat
sub
call
mov
pop
lcall
dec
outsb
mov
addb
jmp
repz
xor
inc
out
mov
or
jno
sti
mov
xchg
mov
ljmp
popl
xor
xchg
mov
movb
xor
fildll
adc
xchg
add
pop
out
loope
mov
addr16
test
xchg
add
stc
jns
sbb
int
cmp
rcrb
sub
dec
xchg
ss
xlat
test
movsl
mov
pop
mov
sarb
cltd
jb
loope
and
push
clc
mov
repnz
jmp
pop
jge
lods
jbe
int
sub
out
sti
or
cmc
sub
or
out
lods
das
inc
mov
inc
xchg
in
in
shrl
in
imul
popa
movsb
sarl
outsl
xchg
inc
cmc
pusha
xor
icebp
shl
cmp
cmpps
fs
test
add
fiadds
lahf
daa
xor
sarl
aaa
mov
adc
pop
push
movsl
sub
repz
pop
scas
mov
fsts
push
test
cld
xor
lock
lock
outsl
mov
fisttps
push
aaa
push
and
mov
xchg
mov
mov
jg
gs
jge
jl
jge
pop
call
lret
jbe
mov
cs
sbb
lea
add
xor
inc
and
in
mov
inc
jge
dec
call
aas
or
push
pop
ss
aam
sbb
std
pop
pop
and
jle
arpl
mov
adcl
xchg
add
push
dec
adc
std
mov
fldt
lods
test
ficoms
add
mov
dec
lds
mov
push
lret
into
cmp
stc
rcl
loop
pop
ja
cltd
pop
jg
push
icebp
paddsw
sbb
cmc
jno
pop
in
sbb
pushl
mov
inc
cmpb
lods
dec
mov
gs
inc
push
jmp
lods
rolb
call
xor
notl
mov
gs
pushf
jnp
jmp
cmp
jnp
or
popa
popa
out
xchg
xor
cmpsb
jne
dec
fs
movsl
out
popa
popa
out
xor
adc
fsubs
mov
repnz
lods
cmc
xchg
ret
outsb
mov
hlt
jle
xchg
fnstsw
xchg
out
xor
aam
loope
in
iret
data16
sti
ja
movsb
and
cld
lcall
adc
repz
sbb
adc
jno
jns
push
loopne
mov
xchg
and
xchg
cwtl
loope
add
imul
aad
or
and
lds
addr16
mov
stos
popf
xor
call
aad
ljmp
mov
js
dec
scas
or
adc
and
neg
arpl
rcrl
test
jae
gs
jge
fbstp
jmp
bound
adc
das
lret
sbb
inc
es
adc
sti
inc
shrb
mov
scas
bound
jns
sbbl
mov
sub
sti
outsb
int3
cld
sbb
xlat
data16
sbb
cmp
in
lea
mov
je
push
add
aam
lods
push
mov
jo
adc
movsl
pushf
or
cmp
add
mov
xchg
pusha
push
pop
inc
mov
adc
lea
cmp
and
sti
mov
xor
pusha
push
sbb
fsts
push
popa
pop
mov
icebp
push
hlt
jno
jno
and
xor
fdivrs
aas
daa
jg
jle
leave
out
sub
cmp
cmp
push
popa
fisttpl
outsl
adcb
sbb
shll
inc
mov
lods
mov
mov
loopne
sbb
dec
adc
imul
lcall
adc
cmpsb
inc
pop
flds
xchg
pushf
xor
jne
loope
push
out
jp
xchg
or
adc
outsl
in
mov
stos
pop
int3
or
test
sti
jnp
fiadds
mov
dec
or
jns
dec
mov
mov
jo
push
fcomi
mov
cmc
and
ja
pop
mov
and
xor
sub
adc
lods
mov
mov
xchg
push
push
ss
pop
jno
mov
sbb
test
in
add
adc
int
sbb
push
sahf
cmc
aas
adc
fldl
xchg
cmp
ret
addr16
pop
iret
insb
inc
dec
and
clc
pop
push
xchg
inc
notl
rcll
mov
cmp
add
xchg
lcall
lret
pop
loop
sbb
mov
inc
mov
aam
push
repz
push
ljmp
sbb
xlat
cmp
das
mov
push
repnz
push
mov
push
jle
mov
sbb
loopne
mov
push
or
xor
xchg
loopne
sub
loope
rclb
push
mov
or
test
sub
cmp
ds
aaa
cmp
decb
mov
ljmp
fsubr
sbb
les
sub
sbb
ljmp
mov
in
adc
xchg
mov
stos
jle
stos
sbb
inc
jle
push
loope
shlb
pop
andl
pop
fldcw
pop
push
je
mov
or
imul
mov
pop
rcrb
xchg
adc
cmp
push
faddl
push
int
daa
dec
inc
popa
inc
ror
cmp
fcoms
dec
sahf
mov
jb
rorl
mov
mov
dec
cs
mov
test
icebp
pop
dec
add
aas
sbb
rcll
or
push
mov
hlt
fistl
sub
in
jge
es
arpl
pushf
fisttpl
push
adc
sahf
dec
inc
shl
xor
or
inc
dec
subl
outsb
clc
or
add
mov
cmpb
sub
xchg
adc
popf
lods
lret
nop
in
pop
xor
jecxz
mov
push
rolb
push
pop
repnz
mov
in
ss
aam
ret
out
loope
jge
cmc
xchg
mov
pushf
inc
pop
sub
fmulp
std
jle
jb
xchg
popa
adc
gs
fs
fstpt
cmpsl
bound
mov
xchg
in
js
out
jp
xchg
ror
scas
xchg
stc
jne
xlat
ss
xor
xchg
or
or
fcom
cmp
ljmp
xchg
xchg
push
jns
hlt
scas
mov
inc
jmp
pop
mov
rclb
inc
out
mov
sarb
xor
sbb
sarl
add
shl
sbb
mov
mov
inc
mov
mov
mov
pop
les
cli
inc
adc
jmp
loop
pop
add
mov
hlt
or
sbb
mov
lds
pop
repz
aam
je
or
cli
adc
add
shrb
in
cmpsb
mov
lahf
lods
repz
pop
rcrb
mov
xlat
fnstcw
cltd
cmp
and
cmp
inc
movzbl
loopne
jle
test
and
or
lea
mov
pop
std
adc
cmp
cmp
dec
push
pop
cmpsl
ja
add
pusha
sahf
stc
xchg
sbb
lret
leave
push
cmpsl
jns
add
push
stos
sbb
sbb
pop
enter
cwtl
jmp
pushf
adc
stos
xor
lock
push
jmp
imul
lods
mov
jbe
jp
test
cmc
inc
iret
out
shrb
jnp
repz
push
adc
pop
daa
mov
xor
xchg
in
test
icebp
or
in
insl
mov
inc
lds
mov
and
lods
dec
repnz
add
sbb
icebp
jmp
inc
sahf
inc
int
push
push
mov
mov
repnz
int3
xor
and
xchg
lret
mov
pop
xchg
cmp
out
inc
inc
leave
xor
andb
adc
add
aaa
data16
or
mov
lods
out
repz
mov
lea
pusha
mov
inc
xchg
mov
pop
lock
cmp
mov
in
cltd
and
lcall
adc
xchg
into
sub
aas
scas
pop
out
sarl
cs
sub
shll
ja
cld
pop
in
insb
mov
xchg
mov
lcall
lcall
sub
fs
out
sub
push
add
xor
addr16
xchg
shrl
jno
and
xchg
rcll
fisubl
aas
jmp
mov
pop
leave
inc
mov
hlt
sbb
jmp
ficompl
dec
sbb
fucomip
add
mov
mov
mov
inc
inc
jge
xchg
daa
mov
inc
das
inc
mov
insl
pop
fsubrl
pop
or
call
jl
push
jge
incb
int
jno
lahf
push
or
cld
mov
mov
mov
or
push
out
shl
fistl
jne
clc
jb
stos
add
add
loope
mov
shll
pushf
es
pop
xor
sti
jb
testb
sti
pop
xor
adcb
psubq
repz
mov
sar
gs
in
pop
pop
dec
mov
fbld
mov
fstpl
sbb
push
rcll
dec
mov
rcrb
mov
inc
mov
mov
jp
in
cmc
sub
inc
subb
lcall
mov
mov
fcompl
jnp
loopne
cmpsl
mov
mov
pop
lea
pop
add
push
loopne
pop
mov
sbb
test
xchg
sbb
or
dec
adc
stos
and
pop
sahf
repz
push
es
scas
mov
imul
add
int3
dec
mov
sbb
sbb
jbe
jae
mov
pop
add
pop
jle
mov
in
push
inc
stos
dec
fsts
pop
in
scas
adc
aad
xchg
cli
pushf
mov
aaa
fisttpl
or
push
adc
xchg
outsl
cmpsl
or
cmp
daa
ja
inc
jge
mov
xor
adc
stc
shrb
cmp
stc
aas
rorb
and
out
int3
addr16
sbbb
test
iret
push
testb
sbb
into
lds
cli
jo
jno
jl
push
out
xchg
cmp
test
bound
xchg
rcr
sbb
xlat
add
cmpsb
popf
push
inc
sub
fs
js
or
testb
xchg
hlt
rcl
ds
dec
loop
lea
mov
loop
repz
movsb
ds
scas
jge
push
mov
inc
lcall
fdiv
jno
push
jle
inc
cmp
sub
mov
pop
adc
lahf
mov
ret
and
pop
rcll
mov
lcall
jl
or
push
cmp
mov
insb
inc
fcmovnu
stos
aad
out
sub
sbb
addps
pop
add
cmpsb
pop
dec
shlb
xchg
xorl
dec
aad
fsubrs
iret
fst
fs
aaa
in
aas
xor
int
push
clc
push
xchg
repnz
mov
stos
and
out
pop
in
xchg
stos
xchg
loop
and
mov
mov
arpl
dec
lahf
jl
in
xchg
xchg
add
mov
imul
sub
ret
jle
sub
pop
xor
subb
pushfw
js
ja
sub
xor
sbb
mov
mov
and
enter
je
out
dec
add
test
jb
inc
iret
in
push
adc
icebp
lahf
lret
mov
pop
jl
inc
loopne
and
pop
xor
lods
pop
mov
inc
push
mov
mov
mov
xor
lods
ret
or
lods
cmpsb
push
shlb
jmp
rcr
cwtl
pop
insb
loop
xchg
pushl
cmp
aad
rcll
xor
mov
fldcw
test
sub
mov
int3
insl
mov
jno
lds
daa
ret
cld
sub
xchg
notl
sub
adc
jecxz
les
es
mov
leave
mov
inc
shl
ljmp
hlt
negl
mov
pop
cmc
out
xchg
dec
inc
repnz
icebp
test
mov
and
or
cmp
stos
mov
clc
mov
inc
cwtl
testb
adc
insl
or
shl
add
mov
xchg
mov
in
rorl
loop
test
jmp
rolw
pop
pusha
mov
mov
pop
mov
mov
dec
add
js
push
pop
lods
inc
add
push
inc
push
aam
icebp
mov
imul
aas
out
out
sub
adc
mov
js
popl
sbb
xchg
inc
push
ret
pushf
and
add
add
fbstp
clc
or
mov
repnz
in
push
lea
sub
cltd
push
sbb
adc
jecxz
or
jg
pop
fnstsw
add
pop
daa
movsl
ds
outsb
test
add
fisubrs
lods
cmp
lds
ficoms
int
sbb
xor
pushl
faddl
inc
mov
clc
mov
xor
sarl
push
xlat
add
rcl
icebp
mov
add
or
repnz
mov
push
pop
push
lock
mov
addb
divb
add
or
rclb
push
and
outsb
or
inc
or
push
iret
add
pop
mov
xor
sbb
sbb
dec
mov
pop
outsw
pop
push
jno
outsb
add
mov
psrld
stos
adc
xor
insl
test
xchg
sahf
inc
nop
jbe
or
in
dec
inc
aaa
out
cltd
push
dec
inc
xor
lahf
mov
mov
mov
insb
jns
push
mov
in
jae
test
pop
mov
cmc
jp
fs
jle
popf
lcall
sub
sub
push
push
into
aas
cld
enter
xchg
pop
out
daa
dec
sub
je
xchg
jl
dec
sub
and
sahf
pop
xlat
mov
sbb
mov
and
iret
and
xchg
dec
push
and
jae
lahf
clc
aas
outsb
sbb
xor
js
insb
pop
sbb
push
jmp
call
lret
popa
pop
pop
sahf
cli
mov
loopne
cwtl
or
xor
fsubrs
flds
push
jmp
inc
or
pop
jge
shlb
mov
leave
mov
cmpsl
push
mov
push
pop
cs
sub
jg
sub
cmpsl
cmp
cli
mov
xchg
or
pop
adc
std
add
repz
xor
movsl
movsb
cmp
jmp
in
mov
imul
mov
jmp
aam
int3
mov
lock
push
dec
cmp
addl
into
cmp
inc
jge
stos
pop
mov
sbb
popa
xor
or
sub
pop
popf
mov
dec
mov
add
mov
out
iret
ds
adc
pop
dec
stos
inc
imul
rorb
pop
sbb
js
sub
sti
cmpsl
stc
mov
adc
sahf
mov
adc
outsb
or
xlat
arpl
xchg
or
fs
push
test
sarl
dec
or
stos
fldenv
enter
imulb
lds
clc
cmp
inc
test
jne
test
inc
add
mov
xchg
pop
lret
adc
jg
jmp
jne
xchg
xor
adc
or
xchg
add
in
aam
dec
push
sbb
icebp
fs
insb
je
stc
sbb
pop
add
ja
aad
xchg
js
repz
fcmovbe
movsb
add
mov
cmp
mov
aaa
jle
jne
dec
jne
cmpsb
hlt
in
cmp
pop
scas
fistps
or
shlb
sbb
jb
cmp
outsb
xchg
mov
dec
add
push
jae
lock
ret
pmaxub
sub
jmp
lea
push
pop
stos
and
imull
enter
pop
js
and
push
mov
push
mull
test
hlt
adc
pop
enter
in
repz
test
pop
jo
jb
in
push
orl
aas
repz
shll
xchg
lds
rorl
adc
jg
fwait
ds
popa
movsb
push
leave
ds
inc
cs
adc
dec
sbb
mov
sub
jl
mov
jmp
into
jmp
adc
push
js
or
jp
inc
mov
xchg
loopne
addr16
les
js
push
das
mov
push
fsubrs
or
leave
aad
inc
and
scas
cmp
adc
test
xchg
pop
mov
shl
aad
in
clc
call
xchg
popa
pop
add
insl
xchg
mov
add
mov
fsubr
jne
adc
xchg
loopne
scas
popf
addl
into
adc
dec
mov
sub
test
pop
into
or
mov
out
scas
dec
inc
and
mov
dec
in
push
dec
mov
sti
push
ss
jecxz
xor
sub
adc
es
int
mov
gs
in
inc
xor
jl
and
and
hlt
je
or
cltd
jae
pop
movsb
out
out
dec
test
jl
data16
fstps
adc
mov
jns
inc
push
cmpsb
jp
cmp
iret
mov
jne
cmp
adc
jnp
push
enter
cmp
mov
subl
loopne
aaa
jmp
xchg
xchg
imul
push
enter
inc
cmc
dec
and
mov
into
push
sahf
add
aad
mov
jno
add
daa
jno
push
or
xchg
sbb
cwtl
mov
jnp
pop
lds
dec
cmp
sahf
jns
fs
and
cli
xor
adc
mov
inc
imul
push
repz
sbb
and
xor
movl
lahf
push
sarl
jae
push
popf
int3
cmpsb
loopne
fisubs
cwtl
push
cmc
mov
push
flds
inc
in
xchg
call
push
sub
xchg
cld
lods
push
xchg
aaa
popf
xchg
adc
or
mov
cmpsl
popa
cltd
std
add
cmc
call
mov
test
xchg
aas
add
lahf
dec
popa
push
leave
ret
pop
notb
addr16
daa
xchg
jo
movups
jmp
sub
repz
xor
jo
cmp
push
push
in
popa
stos
shl
xchg
mov
sub
fsubs
pop
xor
fidivrs
aaa
gs
mov
jge
std
xchg
loop
xchg
jge
jl
leave
push
mov
or
mov
cmp
sahf
xchg
jnp
push
push
cmp
fdivs
add
aaa
pop
xor
push
cmp
sub
std
xor
xor
jg
loopne
sub
das
sub
popf
dec
cmp
xor
incb
dec
mov
mov
rcll
cmpsl
lret
lds
ljmp
jle
mov
pop
data16
popa
mov
push
jl
pop
nop
sub
daa
test
out
roll
xchg
aas
dec
enter
ret
mov
outsl
loope
pop
push
mov
cltd
mov
insb
mov
fcoms
dec
lods
and
or
add
sbbb
loope
pusha
in
adc
sbb
adc
hlt
enter
pop
popa
fsubl
jp
repz
mov
loope
or
inc
clc
ret
mov
dec
aad
or
jno
jg
mov
jg
sarb
sbb
mov
mov
pop
mov
mov
cltd
fistl
adc
cmpsb
test
jne
mov
adc
mov
sahf
stc
sub
cmp
add
movsb
cli
inc
lock
pop
daa
inc
out
fistps
lret
ljmp
and
sub
ret
imul
mov
ds
fdivr
inc
add
inc
daa
mov
insl
sbb
fsubrp
pop
movsl
push
and
lcall
lds
and
rcrb
in
pop
fildl
add
dec
aad
adc
cli
loope
mov
into
les
and
stos
jnp
and
jmp
jmp
mull
or
push
pop
cmp
jmp
sbb
and
push
xchg
lods
mov
pop
mov
adc
push
ja
inc
cmp
jo
fsubl
mov
movsl
and
stos
aad
aas
jns
and
inc
sbb
push
adc
loop
dec
jl
jp
pusha
cs
test
pop
nop
in
push
and
pop
cwtl
pop
rcrl
or
and
pop
xchg
clc
mov
test
xor
xorl
mov
js
mov
ret
mov
jg
daa
xchg
call
push
mov
push
data16
jecxz
addl
je
mov
insb
mov
jl
aas
xlat
inc
xor
dec
mov
inc
or
aad
xchg
cmp
mov
insl
xchg
or
clc
sbb
popf
jnp
mov
ficompl
jnp
ljmp
xor
mov
ret
pop
std
shrb
cmp
mov
or
mov
fs
cmpsb
cmp
imul
fsubrp
xor
imul
xor
sqrtps
rcr
cwtl
push
sbb
lock
cmp
cmp
mov
test
test
cs
pop
test
push
cmp
les
add
and
outsl
push
dec
inc
int
rcll
jge
add
jmp
cmp
jo
int3
nop
int3
pusha
push
adc
daa
cmpsb
xlat
cmp
mov
adc
aaa
fiaddl
add
and
inc
xor
nop
jg
ss
inc
sbb
add
insl
mov
in
sbb
mov
and
xor
dec
xchg
mov
lock
xor
adc
movsl
mov
bound
pop
jmp
xchg
shll
loope
rol
adc
mov
fldlg2
adcb
imull
pop
pop
mov
pop
or
ss
rcrl
sbb
scas
add
sub
pop
inc
add
incl
xchg
mov
xor
cmpl
push
adc
lock
nop
adcl
and
dec
push
jp
jo
stos
fs
dec
enter
xor
or
aad
out
sbb
push
dec
mov
mov
jbe
fdivrp
mov
mov
pop
dec
xor
push
cs
aad
pop
loopne
subb
cmp
xlat
movsb
mov
icebp
push
adc
js
std
lahf
mov
push
out
pop
lods
mov
notl
das
call
es
inc
adc
jl
push
mov
mulb
les
xchg
push
sbb
lods
stos
sbb
xor
icebp
sub
sbb
lret
and
xchg
push
mov
ret
dec
jp
fnstenv
mov
push
inc
jno
mov
mov
pop
ss
daa
or
jge
divl
sub
mov
cmp
pop
das
ljmp
push
cmp
push
jne
je
mov
inc
cmpsb
mov
lret
sub
into
lret
dec
aam
xor
data16
sub
xchg
in
or
or
stos
xchg
pop
mov
mov
pop
xchg
mov
paddb
stos
jle
cmp
xor
scas
cmpb
popa
add
lods
mov
js
mov
dec
or
orb
sti
or
xchg
adc
les
push
mov
adc
repz
dec
xlat
jle
dec
and
addb
fldenv
xchg
or
sub
cmp
pop
jnp
add
and
addr16
inc
add
push
inc
in
stos
or
and
fsts
pop
jg
or
movsb
hlt
jecxz
pop
and
nop
stos
cmc
jns
scas
fnstsw
jg
or
lret
mov
sbb
cmp
jecxz
aas
imul
jle
lds
jo
int3
push
mov
and
hlt
dec
cli
jmp
pop
add
or
iret
insb
ljmp
stos
jp
xchg
sbb
lret
in
cmp
sub
pop
xor
jnp
cmpsb
imul
scas
push
hlt
push
jle
icebp
insl
daa
mov
out
push
jae
into
jns
adc
cwtl
fs
inc
sub
ds
ret
ret
and
sub
cmc
cmpl
imul
adc
add
adc
adcb
jno
cvtpi2ps
mov
add
shll
xlat
adc
push
jp
dec
pshufw
loope
lds
inc
mov
outsb
ljmp
pushf
popa
aas
add
mov
xchg
cmp
inc
lea
cmp
jecxz
addr16
push
pop
mov
mov
ss
push
push
dec
mov
xorl
jnp
fimull
lock
gs
ficoms
jns
shl
adc
cwtl
out
mov
cmc
and
ds
jae
pop
das
inc
xor
sub
outsb
xchg
je
mov
cmp
ja
cmpsb
stc
inc
cmp
jne
jp
or
mulb
dec
inc
into
test
or
mov
mov
jo
jb
adc
xor
dec
dec
push
into
in
add
in
cmp
xorl
out
lahf
pop
dec
shlb
scas
rolb
mov
sbb
mov
xor
xor
cmpsb
adc
loop
dec
xchg
les
sar
mov
cwtl
loopne
dec
into
popf
rcrb
xor
and
jp
xchg
jge
int
dec
in
dec
fstpt
xchg
pop
sub
push
dec
sbb
dec
gs
int
adc
and
repnz
fisubs
xchg
jle
loop
outsb
adc
nop
push
rcrl
lret
dec
sbb
fsubr
fnstenv
setno
bound
fadds
out
jo
dec
test
mov
dec
movsl
inc
scas
stc
out
cmc
jle
loopne
inc
adc
or
or
jle
pop
pop
jns
mov
test
leave
jnp
xor
cmc
repnz
pop
pop
mov
in
inc
jmp
leave
and
sub
nop
dec
mov
out
and
mov
mov
movsl
ljmp
xchg
sbb
cmpsb
add
jmp
inc
xor
mov
push
loop
fcmovne
loopne
adc
out
or
lahf
xchg
pop
and
shll
mov
cwtl
push
xor
ret
push
repnz
sbb
pshufw
loop
and
push
sbb
sti
jmp
jle
push
dec
push
adc
int
sahf
add
sar
cmc
cmp
xchg
adc
sbb
push
cwtl
leave
test
mov
sahf
inc
or
data16
sbbl
or
jb
push
cmp
pop
jns
add
sbb
jne
outsb
daa
mov
fnstcw
lods
inc
pop
xchg
jg
or
pop
out
jns
test
movsl
and
or
sub
mov
push
lcall
scas
mov
lods
adc
jnp
fldcw
das
fstpl
mov
mov
and
in
pop
int3
cmc
test
adc
rcrb
xchg
xorl
int3
fmulp
loopne
push
popf
cmpsb
sub
dec
roll
and
dec
inc
push
idivl
jns
xchg
fisubrl
in
test
dec
xchg
stc
pusha
in
dec
sbb
sub
push
aam
hlt
push
mov
out
xor
add
dec
shll
push
adc
mov
or
test
insl
mov
cmpsb
add
loopne
add
cmp
jmp
repnz
bound
es
sahf
mov
fmull
movsl
sub
adc
mov
mov
stos
push
ret
popf
out
push
jno
xchg
loope
mov
lock
jo
out
fildl
mov
popa
cwtl
fstpt
xchg
ficoms
imull
adc
in
fwait
aaa
mov
iret
mov
adc
jl
es
cmp
cwtl
in
mov
sbb
jmp
shlb
jae
mov
les
xchg
rcr
subb
mov
mov
loopne
in
mov
nop
push
out
inc
pop
into
xor
mov
pop
mov
fdivrl
sbb
inc
or
pop
inc
and
das
pop
pop
cld
lea
into
mov
xchg
mov
sub
popl
sub
or
lahf
pop
jl
test
jmp
cs
stc
fstpt
cmp
fwait
xchg
sub
push
clc
ja
mov
add
jmp
mov
jl
lods
sub
aad
sub
dec
repnz
mov
xchg
pop
mov
ret
inc
dec
push
pop
xor
rcll
pop
xchg
adc
mov
jne
and
shr
loope
xchg
push
sbb
lds
mov
repnz
mov
mov
mov
dec
pop
inc
ss
aad
ret
pop
popa
lock
mov
sub
jmp
xchg
adc
out
mov
arpl
lahf
push
fisubl
out
xchg
fdivrp
inc
aam
rorl
xchg
push
mov
inc
aaa
adc
pusha
inc
mov
or
cmp
adc
fadds
and
stos
dec
test
ficomps
push
mov
sbb
xrelease
xchg
add
xchg
and
rcll
fsubrl
jmp
into
dec
inc
jge
imul
jb
pop
cmp
jp
popa
adc
movsb
insl
out
aam
or
insl
cmp
or
movhps
sbb
in
nop
sub
sbb
out
inc
lea
into
movsb
jmp
jecxz
add
push
in
pop
mov
bound
scas
sbb
stc
push
adc
aaa
jb
scas
push
scas
inc
testl
push
adc
and
dec
into
mov
roll
jne
xchg
pop
xor
cltd
pop
xor
sbb
lods
out
jge
jmp
mov
out
mov
lods
add
arpl
repnz
movsb
sbb
ret
add
xor
inc
add
jl
add
rol
adc
repnz
lret
xorb
and
fildll
pop
cwtl
mov
sbb
dec
inc
mov
xchg
loop
pop
cwtl
shrl
ja
popa
popa
cmp
data16
jo
in
adcl
pop
mov
in
fdivs
lock
in
add
add
cmp
enter
fisttps
sub
leave
jns
fwait
sbb
jne
cmpsl
stos
rcrl
mov
fs
shl
leave
movsl
movb
jp
pop
loopne
jnp
add
push
mov
jae
ret
dec
popa
push
lret
push
pop
shrb
movsl
lea
fistpl
push
lahf
mov
iret
movsb
negb
inc
jnp
xchg
arpl
sahf
stos
test
xor
outsl
and
mov
inc
adc
adc
pop
jns
push
sbb
push
pop
sbb
popa
cmpb
mov
shlb
stc
dec
fucom
jo
lahf
lea
cmp
jcxz
mov
push
roll
sbb
add
push
mov
pushf
xchg
gs
test
rcrl
mov
mov
mov
ficoml
or
lcall
flds
cld
sub
pop
inc
loopne
mov
jge
and
mov
scas
pusha
pusha
lahf
call
jp
scas
jecxz
std
pop
and
testb
outsl
insl
dec
mov
jns
movsl
daa
shl
insl
mov
add
test
mov
jbe
pop
mov
mov
loopne
stos
push
iret
lcall
out
dec
push
in
cs
mov
dec
dec
mov
inc
mov
lods
add
imul
psrld
mov
roll
aas
sub
jo
push
xchg
push
ficompl
mov
sub
imul
scas
popf
push
mov
in
push
pop
pop
sbb
cltd
rcrb
loop
mov
mov
movsbl
mov
addb
mov
fucom
pop
das
mov
add
ret
mov
xchg
fsubrl
outsb
push
arpl
xor
jnp
popa
cmp
sahf
xchg
dec
fisttpl
jbe
adc
js
stos
cltd
cs
xchg
test
push
imulb
loope
and
push
push
rorl
cmpsb
in
icebp
add
in
fiadds
adc
and
xchg
idivb
mov
shll
imul
cmpsb
clc
cmp
pop
in
xor
adc
push
cmpb
stc
xor
inc
push
test
test
mov
inc
mov
ret
xchg
and
rorl
push
pushf
gs
push
push
and
add
adcb
out
ret
fwait
test
sbb
popf
sub
add
mov
pop
mov
out
cmc
xchg
rclb
int3
dec
lods
imul
xor
std
cmc
roll
mov
jnp
imul
ret
cs
pushf
cltd
and
mov
mov
adc
jae
push
lret
adc
inc
gs
das
shl
and
lret
mov
insl
stos
loopne
outsb
pop
int
and
and
fs
loopne
or
sub
jge
mov
push
xchg
js
addb
pop
mov
in
dec
mov
rol
pop
jne
movsb
mov
cmpsl
ds
jns
xlat
sahf
test
popa
jnp
in
xor
outsb
sbbb
mov
jae
lret
call
mov
add
subl
sti
arpl
xor
or
jne
adc
xchg
fldcw
int
or
shr
and
cmpsl
adc
pop
and
mov
jnp
outsb
cmpsl
mov
dec
jae
aam
sti
aad
ljmp
call
jl
test
stos
divb
or
out
cmp
aam
mov
ljmp
lret
dec
add
lahf
push
add
and
enter
lahf
divb
mov
les
out
iret
push
fcomi
cld
push
cmp
shll
add
rep
mov
jns
fdivs
imul
cltd
xchg
cmp
cmp
notl
das
xor
or
ja
cmp
jb
rol
xor
cmp
dec
into
ja
hlt
lea
xchg
lcall
frstor
jle
call
clc
aam
mov
cmp
popa
xchg
cmpsl
stc
fisubl
sub
popf
lods
test
jne
and
cmp
xlat
imul
xlat
or
cmp
add
fidivs
cli
sbb
push
pop
scas
cmp
lahf
fwait
xlat
jns
xchg
fiaddl
mov
fldz
jae
cmp
sbbb
inc
mov
pop
push
xchg
pop
xor
outsb
fnstenv
push
js
popa
dec
xchg
scas
jno
out
xchg
repnz
cbtw
adc
test
inc
lcall
fidivs
mov
xchg
push
lods
cmp
enter
roll
xor
lds
mov
mov
sbb
mov
mov
jbe
lahf
mov
sti
loopne
loope
js
mov
pop
mov
inc
mov
adc
fs
jg
hlt
dec
aaa
rcr
push
sub
inc
mov
pop
and
inc
inc
addr16
js
aaa
pop
jo
xor
push
loope
push
xor
xchg
lahf
sbb
les
mov
xchg
imul
pop
xor
out
std
adc
sbb
cld
aad
jg
arpl
loop
out
imul
cmp
sbb
or
and
add
dec
outsl
cltd
rcll
js
and
pop
mov
push
mov
repz
ja
mov
negb
cs
gs
mov
and
sbb
out
shrl
filds
pop
sub
in
jge
inc
mov
lds
popl
mov
cltd
pop
loope
test
or
xchg
mov
ficompl
mov
scas
loope
dec
fbld
stos
cwtl
loope
dec
adc
sbbb
or
add
push
inc
xchg
inc
lret
mov
test
xchg
in
adc
fcompl
test
pop
adc
mov
xchg
data16
daa
in
icebp
push
cs
adc
outsb
nop
sti
add
sub
hlt
es
pop
outsl
shrb
ret
jb
xchg
leave
jns
xchg
jnp
sbb
mov
xlat
add
and
and
aas
ret
dec
out
mov
fsub
loopne
sub
mov
fs
mov
jnp
call
jle
jnp
adc
xchg
cmpsl
rcll
das
or
xor
mov
cli
mov
adc
inc
test
into
add
adc
ffree
repz
ret
movsb
xor
sbb
xchg
outsb
hlt
xlat
xchg
into
xchg
or
dec
fsubl
xchg
out
loop
cmp
or
jle
jg
sub
loope
repz
mov
xorb
fisttps
sbb
xchg
add
sti
pop
ret
inc
push
inc
mov
jecxz
push
shrl
push
scas
incl
pop
test
dec
mov
stc
daa
pop
sti
push
xchg
test
dec
call
sub
mov
repz
xchg
adc
fwait
test
mov
lea
in
arpl
add
es
idivb
cmp
sub
mov
push
mov
idiv
and
fs
mov
dec
insb
jg
loop
sub
and
es
adc
out
adc
icebp
sarb
jae
jmp
push
mov
xchg
mov
in
xchg
icebp
mov
cld
sub
insl
dec
mulb
cli
push
int3
out
ret
or
push
mov
inc
iret
imul
jge
jno
sti
subb
push
aaa
sub
sti
loop
or
fdivs
jmp
mov
sub
ja
bswap
adc
or
mov
and
mov
inc
je
int3
lea
and
jae
sbb
shrl
out
adc
popa
in
or
adc
jp
loop
pop
insb
adc
pop
out
adcb
sub
loop
jp
sub
imul
lods
adc
mov
aam
and
hlt
add
mov
pop
test
xlat
push
testb
mov
in
aam
int3
jo
jo
ds
test
fldl
jne
ret
das
dec
pop
inc
fwait
cwtl
pop
pop
or
das
cs
xchg
cli
dec
xchg
notb
out
fs
mov
xchg
pop
add
push
jae
dec
dec
pop
pop
fldt
lret
mov
je
pop
jb
mov
xor
xor
push
mov
cmp
jno
xchg
or
and
jmp
mov
fsub
imul
lea
out
xor
aaa
jbe
std
jg
push
clc
pop
sti
and
int
inc
mov
xchg
stos
fistl
or
and
pusha
rcrl
xor
sbb
fidivs
test
int
add
icebp
xchg
lods
mov
sti
jecxz
ficoms
pusha
aaa
xor
xchg
cld
sub
mov
mov
push
fs
lcall
add
push
cmp
push
mov
mov
outsb
cmpsl
and
sbb
jmp
fs
fsubp
push
mov
xchg
pop
add
add
aas
bound
pop
movsl
sub
arpl
pusha
xchg
psubsw
fcmovnb
mov
call
popf
loop
repz
adc
mov
jbe
lods
out
mov
jecxz
imul
or
ret
lea
xor
push
nop
rcrl
popf
xor
jecxz
cmc
jae
adc
push
and
pop
inc
outsb
dec
cmp
inc
inc
jo
sub
shlb
cmp
ret
pop
xlat
in
popa
movsl
aas
pop
and
scas
jno
push
xor
pop
rcrl
push
xchg
push
int
popa
orl
dec
jge
push
and
jbe
mov
lods
addl
fsub
not
sarb
pop
cmp
xchg
scas
or
leave
sbb
fsubrs
dec
mov
jecxz
push
into
xorl
fsubl
dec
dec
dec
std
test
jmp
int
data16
popa
add
xor
cmpsb
dec
sub
and
mov
out
loope
sahf
mov
add
aad
pop
jbe
xchg
dec
inc
aad
das
nop
inc
mov
clc
je
adc
pop
cwtl
push
sbb
sti
sub
js
les
or
in
mov
push
dec
lret
push
fcmovnbe
add
test
movsb
cmp
inc
and
push
call
lcall
aam
mov
push
rcrl
loop
int
inc
ja
mov
fsubs
mov
sbb
out
sbb
push
sub
push
fbstp
mov
mov
and
rorl
sub
mov
jmp
jns
iret
nop
out
mov
sbb
sahf
imul
and
fs
insl
add
jb
sqrtps
dec
sub
xchg
ret
dec
mov
jle
iret
lret
adcl
add
inc
cmpl
mov
dec
xchg
xchg
call
or
repz
movsl
sarl
mov
and
out
ret
std
sub
jbe
push
pop
inc
dec
and
push
mov
jecxz
inc
sbb
xchg
loop
jg
in
outsl
push
adc
sub
shlb
cli
sub
lea
inc
repnz
jg
dec
lods
les
das
or
push
jnp
inc
pop
ljmp
fdivr
ljmp
pause
sbb
xor
mov
icebp
add
test
dec
sarl
sub
cmp
andl
and
mov
sbb
adc
outsb
into
int
movsb
fnstcw
cld
popa
inc
xor
fstp
and
test
lods
pop
aad
add
lds
iret
into
xchg
ss
xchg
jmp
repnz
shl
daa
mov
imul
dec
int3
rcrb
mov
jge
pop
outsl
pop
jecxz
in
or
andb
pop
dec
das
jge
std
test
mov
push
xchg
push
cmpsl
mov
and
sub
adc
jmp
xor
mov
addr16
subl
mov
xchg
in
mov
jle
cmpsl
mov
sbb
cmp
push
push
xlat
lret
push
ficomps
adc
or
sbb
daa
int
xlat
jle
mov
push
mov
push
neg
jp
pushf
lret
xor
pushf
outsl
mov
cmp
sub
mov
xlat
in
scas
sar
jmp
jle
xchg
rcrb
fsubrl
push
ret
push
les
add
and
stc
je
mov
adc
icebp
enter
xchg
mov
mov
daa
mov
ret
adcb
es
lods
repnz
mov
ret
jge,pn
mov
addb
fwait
adcl
popl
scas
pop
jle
mov
je
loope
fistpll
les
cwtl
js
jg
jg
jge
sub
fwait
dec
fsubs
mov
lret
adc
std
mov
hlt
insb
pop
fcmovb
and
bound
jle
push
cmpsb
or
inc
pop
sub
fs
cmpsl
cld
mov
fs
je
xchg
cmpb
mov
dec
scas
sub
je
mov
pop
call
repz
lar
mov
dec
mov
ja
xor
pop
jp
loope
popa
add
mov
pop
call
pushf
cltd
push
loope
or
clc
outsl
pop
sti
adcl
inc
je
xchg
in
stos
pop
mov
mov
jns
lea
xchg
sti
cli
movsb
and
mov
mov
cli
test
pushf
pop
pop
lock
inc
pop
mov
cmp
or
les
fimuls
sub
pop
icebp
jbe
ficoml
add
or
inc
mov
and
pop
and
lcall
divl
xchg
js
and
ret
mov
cmpsl
scas
rcrl
adc
inc
sub
dec
xor
sahf
dec
mov
leave
mov
add
jp
and
movsl
loopne
xchg
ja
adc
add
jae
in
mov
sbb
addl
mov
add
dec
decl
inc
arpl
sbb
ss
or
stos
sbb
fldl
loope
inc
jbe
adc
xor
adc
sub
bound
xchg
testl
push
push
in
lcall
pop
add
sbb
out
jge
jb
adc
push
xor
dec
jl
dec
daa
lds
or
test
addr16
adc
decb
xor
lods
jns
cmp
adc
cmp
cmpl
mov
int
sti
adc
and
and
stos
or
sbb
call
rorb
lods
sbb
arpl
xchg
fisubl
mov
add
jbe
stos
or
adc
test
popa
cmp
sub
dec
and
addr16
inc
mov
sti
jl
loopne
popf
mov
daa
lods
punpcklbw
es
sub
dec
cmp
sbb
fisubrs
dec
xorb
enter
push
jge
push
sbbb
or
je
lret
sub
repnz
ficomps
test
dec
jg
out
hlt
orl
mov
adc
loopne
push
push
mov
outsb
xlat
ret
sar
mov
mov
sti
testb
or
push
test
xchg
loope
das
sti
cmp
jg
sbb
mov
dec
test
add
dec
incb
movsb
jecxz
pop
pop
shll
jecxz
push
xchg
test
jae
adc
jmp
mov
fcoml
pop
mov
jbe
mov
push
fimull
dec
cmpsl
dec
insl
pop
xchg
and
sti
outsl
add
cli
clc
sahf
fstps
out
test
stos
jmp
sbb
and
adc
and
add
sbb
push
pop
scas
cmp
inc
addr16
or
lock
dec
pop
xchg
testl
cli
lret
mov
cmpsb
pop
out
fisubrl
jbe
aad
sbb
dec
jbe
add
loop
adc
push
inc
push
cli
jnp
push
cs
pusha
xchg
bound
outsb
in
mov
jns
sub
jmp
popf
scas
insl
ljmp
xchg
lds
ds
add
ja
mov
pop
out
cmp
loope
insl
inc
ficompl
cmp
repnz
mov
xchg
in
push
pop
out
sahf
mov
pop
fs
jns
cltd
adc
loopne
cmp
cwtl
int3
mov
or
fcos
js
fcompl
and
sub
inc
pop
or
mov
and
push
iret
xchg
lret
int
movsb
hlt
xchg
loop
mov
mov
mov
pop
jle
test
das
sub
rol
cltd
testb
xchg
movsb
add
cmpsl
divl
mov
push
pop
dec
cmp
dec
pusha
das
ret
or
stos
rolb
inc
mov
outsb
add
cmp
sti
dec
pusha
xlat
xchg
jns
icebp
pop
sbb
xchg
mov
incl
outsb
into
jne
dec
dec
mov
flds
or
mov
adc
stc
notl
xchg
adc
aam
xchg
shr
xor
push
aas
outsl
push
lcall
sbb
push
inc
stc
and
jb
repz
cmp
and
push
aaa
stc
cmp
fldt
sub
jns
fistpl
xchg
das
inc
movsb
pop
push
nop
mov
cmpsl
arpl
inc
lods
xor
data16
clc
es
sbb
push
mov
scas
xchg
sbb
jnp
in
roll
sub
pop
mov
jnp
inc
lcall
push
gs
dec
cmpsl
mov
inc
xor
xchg
aaa
rcr
or
xor
push
xchg
filds
in
mov
push
stos
mov
sub
scas
dec
push
movsb
arpl
sbb
or
imul
mov
lock
dec
subl
je
test
test
out
inc
aaa
fimull
movsb
add
loopne
inc
dec
add
dec
push
adc
jg
mov
shl
pop
ss
sbb
jnp
lds
adc
cmpsb
sub
xchg
mov
lock
mov
push
mov
mov
pusha
push
imul
fucomi
sbb
cmpsb
ja
dec
jmp
push
xchg
fmull
das
lea
outsb
ret
pmulhw
xchg
cs
lds
hlt
loopne
rolb
jnp
jb
imul
add
jno
lock
lret
aas
xor
adc
call
imul
call
mov
into
outsl
push
hlt
enter
int3
dec
gs
js
xchg
add
or
jae
mov
pusha
sarb
inc
fnstsw
mov
scas
push
mov
push
mov
mov
add
test
cmpsl
mov
pop
out
outsb
mov
movsb
and
inc
cmpsl
lock
rolb
pop
stos
sbb
notb
in
sub
xchg
jmp
xor
xor
push
clc
fiadds
cmp
or
cwtl
idivl
add
andl
inc
cltd
xchg
xchg
sub
mov
insl
clc
ja
lcall
lods
mov
cld
rcrl
jno
iret
loop
mov
divb
jmp
dec
and
jecxz
cmc
iret
sub
stos
shll
push
cmp
aas
adc
and
lret
test
cmp
mov
xchg
and
xchg
mov
ja
add
dec
mov
inc
scas
call
xchg
sbb
mov
rorl
scas
cmpsl
xchg
lret
sub
mov
arpl
mov
inc
repnz
clc
rorl
sbb
mov
or
inc
jbe
test
das
daa
cwtl
xor
or
pop
sahf
add
insl
cmp
and
test
es
push
popf
or
rcrl
adc
loopne
mov
in
cmpsb
cltd
aas
mov
pop
mov
pop
mov
pop
out
cmp
sub
adc
les
jae
xor
fstps
cmp
pop
popf
jbe
push
xor
sbb
cltd
inc
loope
xor
outsb
mov
fisttps
ret
or
or
push
jg
rcrb
jmp
push
adc
in
xor
adc
sub
in
ret
out
dec
and
inc
cmp
push
mov
daa
inc
dec
out
dec
cltd
ret
mov
add
adc
inc
mov
inc
pop
lds
xchg
sti
inc
lea
dec
xor
xor
xchg
mov
jmp
mov
mov
or
push
dec
push
cld
icebp
mov
fsubs
jmp
rorl
movsl
add
xor
sbb
repz
cld
sub
out
mov
push
dec
cmpsl
sarl
push
sub
sub
push
dec
push
frstor
dec
xchg
sbb
mov
js
jmp
shrl
mov
pop
sarb
or
inc
push
int
lods
out
add
cmpsl
je
loopne
push
ss
fcmovnb
fisubrs
pusha
mov
mov
mov
lcall
xor
push
sub
mov
mov
jmp
movsl
int3
leave
or
and
and
cwtl
inc
mov
repnz
rolb
xchg
cld
and
ret
repz
push
mov
sbb
aas
or
dec
popa
test
adc
cmp
test
xor
mov
cmp
test
dec
stc
ljmp
push
mov
push
push
cmpsb
push
jmp
dec
cmp
sbb
jp
scas
fisttpll
arpl
out
lea
mov
inc
cli
aaa
sar
pop
fcoms
shll
in
movsl
dec
pop
xlat
lea
mov
test
les
inc
mov
mov
mov
je
int3
in
bound
scas
inc
ret
in
inc
adc
into
adc
out
incb
xchg
lods
dec
roll
into
outsb
loop
pop
mov
pushf
js
ret
ficompl
pop
mov
mov
jmp
inc
push
cmp
inc
sub
out
jl
pop
xchg
int
mov
mov
adc
xchg
adc
xchg
repz
pushf
jno
mov
and
jne
dec
xchg
mov
or
dec
in
ss
sub
dec
xor
mov
sub
loope
out
cmp
call
and
mov
fsubrs
and
dec
pop
jmp
jbe
xchg
pop
in
jbe
loopne
mov
cmp
int
shl
dec
sub
jne
mov
popa
les
shr
cmpsb
xchg
fwait
leave
aam
loope
jge,pn
lea
dec
sub
call
notb
push
dec
dec
out
xor
pop
jae
mov
rclb
sub
shrb
cmpsl
loopne
das
pop
or
jge
mov
into
out
fisttpl
mov
or
out
rolb
inc
push
adc
outsb
aam
stos
and
pop
or
or
rclb
push
inc
outsb
jle
mulb
fidivrs
mov
jmp
incl
ds
cmp
das
xchg
inc
icebp
aaa
mov
inc
lds
mov
xchg
scas
jnp
stos
cltd
test
js
gs
sub
lret
out
mov
xchg
into
out
ljmp
and
mov
in
jbe
lahf
rorb
addr16
and
inc
jb
scas
lahf
pop
push
fisubrl
out
jle
or
sbb
repz
fwait
jge
or
es
or
adc
test
jmp
pusha
push
jbe
sti
jge
pop
add
test
fadd
mov
cmpsl
fsts
push
clc
mov
popa
rorl
sub
scas
test
push
mov
jmp
xlat
sub
in
addr16
cmp
add
or
or
jp
push
jg
xchg
sub
cld
cmp
mov
fsubp
clc
jae
mov
outsl
jnp
or
mov
dec
xor
or
inc
jg
fwait
dec
and
sbb
fidivrl
pop
dec
std
lock
mov
nop
stc
out
mov
outsl
popf
add
out
dec
into
out
or
fisttps
lahf
or
adc
imul
jmp
push
shr
and
lea
xor
inc
xchg
sub
pop
imul
push
xchg
rorb
gs
sub
popf
adc
jmp
addb
arpl
ret
repz
jecxz
xor
ljmp
ds
cmpsb
in
dec
daa
rol
mulb
mov
push
jmp
and
xchg
jp
repnz
out
mov
pushf
cmp
or
push
std
fcompl
int
lock
mov
pop
xchg
loopne
pop
inc
daa
aaa
test
enter
pusha
sbb
les
cwtl
mov
xor
arpl
mov
iret
fidivrs
add
aaa
dec
nop
and
incl
jp
mov
xor
jae
mov
dec
cmp
in
jbe
jns
jb
nop
movsl
or
and
aas
add
adc
cmp
xchg
mov
jl
mov
fnstcw
adc
add
pop
lret
ja
xchg
cmpsb
pop
in
jo
icebp
sub
ss
sub
dec
cmp
nop
inc
pop
or
mov
clc
lahf
mov
sub
sbb
inc
fisubs
popa
adc
cmp
sbbl
frstor
mulb
call
cmp
out
push
fadd
sub
dec
push
inc
cmp
in
or
aas
adc
mov
cmpsb
add
subb
loopne
stos
mov
jnp
and
jo
push
xlat
lret
jae
mov
fwait
xchg
repz
and
pop
cmp
xchg
or
jmp
mov
movsl
add
mov
test
xchg
int
sub
mov
xchg
imul
mov
movsl
inc
pusha
sbb
iret
insb
mov
clc
or
mov
sti
and
push
sub
jmp
mov
pop
add
mov
adcb
out
pop
cmc
mov
mov
sub
pop
jge
loope
mov
outsb
mov
ficomps
movsl
push
pop
and
adcl
ss
out
pushf
add
or
pop
pop
jne
pop
inc
cli
lahf
and
sub
in
mov
inc
int3
mov
insl
and
push
mov
outsl
in
inc
out
dec
aad
push
mov
mov
xchg
orb
aam
push
mov
mov
icebp
xor
push
and
sbb
push
mov
aad
rclb
nop
sub
sbb
dec
push
sbb
mov
fisttpl
js
add
push
outsb
fs
sub
lods
mov
ja
loope
cltd
sbb
sbb
sbb
jl
and
orl
scas
bound
pop
test
xor
sub
pop
gs
mov
scas
sbb
sbb
sub
cmp
pushf
mov
incl
in
or
and
clc
in
jbe
cli
inc
mov
jb
fdivrs
and
adc
dec
pop
in
fisubrl
mov
int
add
add
push
cmp
stc
loop
pusha
inc
imul
adc
ljmp
clc
out
add
es
insl
int
xchg
out
and
push
cmp
fwait
xor
popf
daa
push
adc
int
add
movsl
sub
in
mov
mov
push
mov
add
negl
pop
ja
xchg
int
jmp
jl
sub
or
xchg
jge
dec
sbb
lahf
dec
or
jp
imul
testb
add
adc
sbb
rolb
xchg
inc
arpl
fdivr
inc
mov
xchg
jg
fldenv
lahf
sbb
sbb
ss
ljmp
jmp
push
out
mov
iret
add
pusha
pop
mov
notl
out
xor
std
push
fists
xor
ja
das
mov
pop
test
or
pop
fs
mov
push
aaa
sahf
cmpsl
sub
pop
xchg
sub
js
push
testb
mov
sahf
popf
or
add
clc
mov
mov
sub
notb
jmp
faddl
xor
loopne
sub
sub
scas
inc
aad
pop
xlat
cmc
mov
sbb
orl
cmc
dec
aas
repnz
sbb
jne
shll
cltd
insb
ficompl
jmp
popf
xchg
and
outsb
sub
mov
xor
push
cltd
cmp
mov
xchg
aas
jge
je
mov
adcb
in
dec
inc
and
add
inc
loopne
dec
dec
mov
lock
adc
shlb
xor
and
or
mov
mov
call
jp
fs
jne
add
sub
push
mov
xor
mov
xor
cmp
mov
cmp
std
imul
fcmovnb
loope
fdivs
in
imul
push
fmull
insl
and
and
dec
xor
dec
fmulp
add
lods
mov
push
lock
int
aaa
in
lock
sub
fldcw
shrl
cmp
je
pop
jns
jno
add
and
jb
mov
pop
outsl
pop
dec
aaa
pop
rorb
adc
pop
xchg
call
mov
ret
mov
orb
cmp
lret
sahf
in
aaa
or
fsts
push
mov
jg
jne
xlat
leave
fdivp
arpl
mov
mov
cmp
sub
cld
pop
lock
imulb
aam
push
add
adc
and
cmp
cmp
and
scas
or
aas
push
not
cmp
adc
clc
test
orl
rorl
ds
cmp
bound
cmp
cmp
xor
add
cmp
inc
stos
cmc
jl
out
sub
push
or
sbb
loop
lods
lret
aaa
insl
lea
stos
add
in
clc
or
cli
es
mov
mov
pusha
push
and
out
sub
mov
lods
mov
pop
cmpsl
bnd
stos
cmp
pop
or
pop
lret
sub
xchg
jge
or
lcall
test
dec
pop
cs
pop
mov
dec
mov
data16
enter
xchg
stc
std
nop
pop
imul
pushf
and
sbb
add
dec
movsb
sahf
sbb
out
and
pop
sbb
inc
cs
push
mov
cmp
mov
or
add
arpl
inc
ret
jne
hlt
lcall
pop
arpl
dec
pop
sub
xorl
popf
mov
and
jp
pop
sbb
rcrl
jae
push
shlb
or
sahf
adc
ja
jg
cwtl
pop
add
repnz
sti
inc
add
add
fstps
jge
movsl
inc
cmpl
imull
aad
sbb
rcrb
xchg
dec
add
mov
in
mov
insb
insb
xor
push
lock
sahf
repz
rolb
pop
xchg
push
jne
lds
sub
mov
insb
fsts
mov
scas
negb
mov
testl
xchg
lods
adc
push
stc
push
jg
test
ja
ffree
dec
sbb
add
gs
leave
cli
jbe
dec
pop
or
push
sub
jb
data16
popf
adc
jae
jnp
dec
int3
xchg
bound
in
mov
in
pop
jge
mov
ljmp
push
sahf
jno
into
gs
popf
mov
lcall
outsl
pop
dec
in
pop
pop
nop
test
mov
mov
dec
cmp
nop
loopne
and
add
pop
pushf
ret
out
xor
repz
in
jo
je
fcompl
scas
adc
pop
cld
sbb
xlat
cwtl
adc
sahf
bound
repz
jge
fimuls
xchg
mov
sub
cmp
fstl
clc
out
fbstp
xlat
vmovss
lret
mov
lock
mov
fcomi
js
insb
push
lods
std
push
add
into
mov
mov
adc
xchg
pop
mov
or
inc
adc
or
jl
adc
aaa
adc
shll
cmp
aas
pop
pop
iret
inc
sahf
push
mov
andb
fiaddl
imul
inc
cs
in
stos
cmp
rcrl
test
test
incl
dec
jp
lods
outsl
pushf
fsub
push
adc
push
add
add
push
inc
insl
inc
or
clc
pop
pop
mov
mov
cmp
lods
roll
inc
or
fstl
adc
sub
pushf
push
cmpsb
lahf
xchg
cmp
pop
adc
mov
add
ja
push
fidivl
mov
test
xchg
std
and
outsl
in
cmpsl
ret
mov
and
test
popf
adc
mov
out
lds
mov
lds
sahf
mov
lds
into
mov
cwtl
xchg
or
inc
or
and
out
cmp
mov
ror
clc
sub
jo
cmp
mov
push
popf
xchg
cld
je
xor
test
jns
popf
add
cmc
or
pop
cltd
cltd
popf
push
jb
pop
mov
test
push
or
xchg
mov
inc
jmp
xchg
pop
mov
pop
out
lock
mov
pop
sbb
xchg
mov
js
stos
sti
cmc
mov
sub
sub
xchg
sub
lahf
xor
mov
mov
xor
dec
ret
sub
mov
inc
mov
iret
jnp
xor
pop
jb
pop
fcmove
sahf
xor
jg
iret
mov
ja
call
pop
inc
fistpl
ja
or
dec
xchg
stos
out
push
ret
dec
xchg
add
jecxz
inc
cli
mov
add
pop
fprem
jne
lret
jle
adc
xchg
mov
mov
outsb
sbb
icebp
xchg
pop
test
pop
icebp
lds
jmp
outsl
mov
pop
fwait
test
sub
or
fs
in
xchg
cmp
mov
push
es
push
xor
inc
xchg
mov
inc
xchg
mov
nop
pop
cmpsb
test
loopne
imul
pop
ficomps
mov
mov
lahf
xchg
movsb
call
lds
iret
adc
adc
jle,pn
mov
push
stc
pop
add
xchg
pop
stos
leave
mov
or
pop
inc
xchg
rcll
pop
outsl
sub
cs
lahf
jmp
xor
shl
inc
jne
cli
idiv
inc
dec
movsl
mov
jbe
pop
sbb
xchg
jle
ret
cmp
sarl
and
dec
sbb
add
add
pushf
jnp
std
out
sbb
scas
push
mov
jae
inc
sahf
jno
loopne
mov
dec
fdivrl
jp,pt
int3
dec
shrb
push
test
data16
mov
adc
jmp
pushf
fdivl
cmp
adc
and
ss
int3
sbb
jo
push
aas
jp
push
and
lods
mov
pop
jmp
aad
rep
push
dec
popf
mov
mov
jmp
push
outsl
push
adc
pop
and
mov
cmp
jns
jo
arpl
mov
jne
push
cmp
and
dec
out
push
loopew
cwtl
cmp
in
out
mov
fyl2xp1
pop
jmp
in
or
and
and
mov
icebp
enter
cmpb
les
push
adc
xor
out
inc
sbb
jnp
lahf
loop
imul
inc
jb
and
hlt
insl
aam
sbb
jns
mov
fistpl
push
fidivs
stc
inc
push
mov
es
data16
xchg
shlb
rcll
dec
xor
scas
or
cld
xchg
shrb
push
idivb
mov
ss
xor
scas
mov
jle
decl
test
sbb
add
out
and
stc
call
xchg
xchg
jl
int
adc
lret
test
mov
ret
enter
mov
rcrl
jo
pop
fsts
mov
cmp
mov
sbb
iret
outsb
pop
mov
and
pop
test
lret
xchg
or
movsl
insl
push
xorb
cld
fstps
stos
jecxz
xchg
and
repz
or
cld
or
mov
aas
jmp
leave
int
mov
movsb
loopne
push
daa
inc
nop
lods
sbb
std
mov
addl
loop
inc
mov
xchg
sub
out
loope
mov
fwait
enter
mov
jg
arpl
jo
or
stos
loop
psrlq
nop
ret
jmp
adc
sbbl
and
shlb
shll
mov
dec
lea
jp
push
or
les
inc
cmp
notl
mov
jns
xor
inc
lret
bound
sbb
push
and
sbb
add
adc
and
test
cmp
cmp
cmpsb
les
sub
shrb
notb
push
add
dec
lret
insl
scas
push
xchg
cmp
inc
gs
lods
inc
cmp
sbb
loopne
or
and
sub
sbb
stc
in
xor
scas
or
in
push
fidivl
cmp
add
test
pop
sbb
lret
jnp
xchg
add
dec
aaa
mov
test
push
fmul
icebp
shr
push
call
mov
into
out
int3
lock
mov
sbb
mov
fisttps
lea
ret
pushf
imul
in
dec
movsl
pmaxub
fdivrp
and
loopne
push
xchg
mov
dec
mov
mul
aam
je
mov
pop
sbb
pop
pop
mov
dec
cld
mov
cmp
mov
dec
inc
inc
imul
je
mov
arpl
adc
mov
mov
lods
xorl
xor
pop
stos
out
loopne
xor
xlat
cmc
add
or
lret
movsl
loope
popa
cld
lds
rcl
rcll
shll
popf
decl
jnp
repz
fldenv
jle
shlb
xlat
dec
xchg
jecxz
popf
fwait
mov
loope
in
xchg
xor
xor
push
js
stos
jno
xchg
inc
mov
mov
bound
add
xchg
test
and
scas
dec
or
sbb
and
jbe
shrb
jl
std
call
and
or
ds
adc
add
push
adc
cli
mov
cmc
fisubrl
imul
mov
es
pushl
cmpsl
mov
push
jle
lcall
nop
and
cmpsl
jmp
jae
mov
sub
inc
lcall
lea
pop
inc
sbb
cmpsb
xchg
lea
add
into
bound
mov
adc
mov
pop
shlb
push
inc
pop
push
lods
cmc
int
ret
xchg
mov
jmp
aas
xor
inc
push
dec
sub
fdiv
adc
sbb
insb
leave
push
adc
ficomps
pop
cmp
xchg
in
jge
sbb
loop
fimuls
adc
or
outsb
mov
insl
test
xlat
cs
test
adc
sub
lock
jge
push
add
cld
pop
dec
pop
aaa
cmp
xchg
xchg
cltd
mov
rcl
xchg
xor
lea
adc
in
jbe
add
or
xor
in
imul
inc
mov
shlb
xor
incb
mov
xor
ljmp
xchg
xor
loope
xlat
das
in
je
pop
mov
and
leave
aad
out
xchg
fmull
mov
xchg
test
push
jae
jl
scas
sub
fisttpl
xchg
imul
sar
xor
jle
cmp
pusha
repz
lahf
loopne
movsl
cld
lcall
sti
adc
imul
in
out
ffreep
fisubl
push
es
jae
and
mov
aad
dec
cmp
ret
mov
stc
dec
sahf
cmp
push
call
sub
loope
decl
call
pusha
rcr
mov
rcll
shrl
jno
pushf
les
and
in
bound
push
or
or
scas
xchg
push
stos
out
jle
push
push
aaa
cmp
es
mov
lret
and
mov
shl
gs
sbb
push
and
cmpsb
adc
xor
inc
js
jg
xchg
dec
jne
out
fisttpl
jns
mov
lods
lock
out
jl
xchg
stos
sbb
xchg
lods
lret
lods
mov
repnz
rcrb
sbb
push
xchg
mov
iret
jno
fsubl
jne
cmp
dec
xchg
jl
xor
xlat
jbe
cmp
loopne
mov
aaa
and
dec
jno
fwait
stc
jle
mov
fs
sbb
add
shl
fistl
adc
xor
lock
jae
jmp
fisttps
ret
and
es
xchg
scas
mov
mov
sarl
movsl
rcll
mov
dec
push
push
jns
je
and
stos
jge
and
in
push
test
scas
jmp
enter
out
mov
outsl
or
mov
pop
mov
ja
out
or
push
pop
clc
dec
lods
stc
filds
aad
mov
jmp
gs
jnp
jp
sbb
mov
add
cltd
sbb
sti
cmc
and
hlt
jg
es
lds
push
loop
fnsetpm(287
sbb
lods
std
loopne
or
in
pop
cmp
popf
stos
fsub
leave
pop
mov
popa
or
les
cmp
loope
push
sbb
fwait
inc
aam
adc
movsl
jnp
sub
popa
bnd
push
iret
shll
scas
iret
sbb
push
daa
es
add
cmp
ffree
pop
sbb
mov
cmp
push
push
ret
push
or
xchg
push
mov
subb
pushf
int3
enter
sbb
jb
std
jp
in
mov
jecxz
lahf
mov
jge
std
cmp
jge
dec
addb
cmp
int
xor
pop
ljmp
mov
repz
and
sub
mov
cmp
sbb
ljmp
lds
dec
out
es
sbb
sub
or
loopne
ja
push
cmp
mov
sub
mov
sub
stc
jbe
mov
imul
daa
push
sbb
pop
loopne
xchg
stos
inc
push
mov
stc
dec
cmc
add
mov
jbe
mov
sbb
mov
sub
into
mov
xor
jmp
pop
mov
cmpsb
sahf
pop
mov
cmp
imul
or
iret
shrb
clc
leave
sub
and
imul
push
xchg
dec
fcmovnbe
lock
xchg
and
aaa
lods
shr
and
push
mov
mov
sarb
sub
mov
test
ss
aaa
out
jecxz
int3
sbb
mov
cmpsb
cwtl
pop
movsl
cltd
adc
add
sub
jnp
push
sbb
mov
dec
mov
repnz
test
xlat
je
in
xor
mov
repz
adc
push
rol
fcoms
cmpsl
out
fldcw
fs
out
rorb
jge
sbb
insb
xor
xchg
fidivrs
mov
xlat
cmp
in
push
dec
lods
test
xlat
int3
or
cmp
ljmp
mov
pop
mov
pop
jg
hlt
sub
stc
repz
or
std
mov
aas
std
jbe
add
push
in
pop
mov
mov
movsb
jnp
mov
dec
insl
dec
dec
push
cltd
jp
femms
fmul
push
sbb
push
or
pop
and
add
dec
mov
mov
mov
or
jp
jae
jne
icebp
mov
sbb
enter
adc
loop
idivl
push
adc
inc
mov
mov
cld
mov
jl
inc
and
out
ja
add
push
push
jno
mov
pop
cmp
ss
mov
mov
sbb
xor
stos
js
pushf
daa
dec
inc
xor
mov
add
repnz
and
fildl
pop
mov
jae
inc
sub
pop
stos
das
push
sub
mov
loopne
adc
adc
stos
cwtl
xlat
dec
int
mov
add
mov
hlt
sub
das
and
ss
adc
ljmp
xor
jg
add
ret
xchg
xchg
nop
mov
fsts
fsubs
icebp
xchg
mov
inc
dec
pop
xchg
sub
xchg
mov
sbb
adc
xor
mov
sbb
gs
or
cmp
jnp
xchg
nop
std
sbb
stc
jno
jbe
mov
loope
jmp
pop
xchg
dec
jno
testl
je
lret
enterw
aad
clc
xor
outsb
and
gs
imul
dec
ljmp
jne
fisubrs
lods
popf
inc
stos
pop
push
imul
imul
cmp
xchg
fcmovnb
and
xor
es
mov
mov
lret
cmpsb
das
js
mov
adc
idivb
lds
dec
push
data16
stos
cld
mov
daa
lock
cmp
cmp
adc
ret
xorl
jae
xchg
mov
push
test
push
aam
jbe
int
popa
xlat
lahf
out
cmpsb
xor
dec
fistl
out
mov
fldenv
cmpsb
adc
sub
sub
das
sbb
mov
out
mov
adc
inc
and
push
push
ficoms
mov
sbb
adcb
jnp
loopne
pop
mov
mov
jmp
mov
cmp
or
cmp
cmpsb
xor
enter
xchg
aad
push
sub
pop
pop
xchg
addl
mov
shl
jmp
add
jge
xchg
mov
mov
test
in
jb
stos
mov
lret
lea
jb
mov
or
jb
shl
lret
inc
pop
bound
stc
imul
js
mov
jge
lock
add
add
stos
sbb
and
js
fdivp
stc
adc
shlb
xor
scas
sub
ss
adc
mov
mov
seto
jno
xchg
fldl
ret
push
loopne
mov
cmp
mull
imul
mov
movsl
out
sbb
adc
cmp
and
movsb
adc
cltd
adc
or
xor
sub
addr16
pop
dec
dec
out
nop
push
bound
inc
sti
xor
stos
push
cmp
jno
in
inc
repz
call
mov
in
icebp
popf
pop
xchg
movl
xchg
pop
lahf
jecxz
jnp
iret
add
lcall
lods
iret
popa
jne
dec
and
pop
push
or
mov
jp
jo
jns
ffreep
shrb
mov
mov
jp
ror
inc
cmp
ja
mov
dec
push
cmp
subl
inc
dec
xchg
and
push
ffreep
and
push
mov
clc
es
push
stos
push
sub
push
ror
ficompl
inc
lock
in
fnstcw
cmp
lcall
push
lahf
sub
push
jns
fbld
mov
cmc
scas
out
hlt
push
ffree
out
jp
jmp
outsl
les
push
cwtl
and
mov
mov
mov
mov
daa
sbb
mov
or
mov
rorb
sub
mov
lcall
rcrb
movaps
lcall
jmp
jmp
or
push
xor
pushf
pop
sbb
test
xchg
pop
cwtl
bound
ds
and
popa
adc
rcrb
mov
pop
mov
mov
cli
push
and
sahf
xorl
dec
push
add
jg
add
loope
popa
fwait
es
inc
imul
mov
sbb
sbbb
xchg
sbb
jo
sbb
shl
mov
cwtl
shll
or
sbb
out
shrl
mov
adc
call
jl
fwait
mov
nop
ret
in
repnz
pop
pushf
jne
sti
outsl
data16
pop
add
jmp
sbb
pop
dec
dec
hlt
jae
adc
jp
in
pop
jbe
imul
fisubl
lea
sub
mov
mov
add
sbb
loop
push
jg
ds
les
insl
addr16
push
adc
adcb
fsub
xor
int3
je
test
xchg
push
inc
jmp
lods
sti
mov
in
and
js
xchg
xchg
adc
mov
inc
ss
js
aad
mov
inc
aam
movsl
adc
dec
out
mov
repnz
repnz
mov
out
cs
es
test
imul
fisubrs
adc
push
and
mov
and
movsb
pushf
jmp
aam
leave
sti
push
stc
data16
add
imul
cld
ret
sti
fidivrl
jbe
rcrb
or
lods
loopne
js
test
jmp
pusha
fimuls
rcll
dec
jo
dec
push
jp
mov
inc
push
add
ss
mov
call
sub
mov
or
icebp
je
popf
mov
pop
pushf
push
xchg
and
cmp
cld
xchg
xor
or
out
into
sub
xor
jb
push
xor
sbb
in
daa
mov
and
test
sub
add
pushl
xchg
ret
je
mov
pop
adc
jg
aad
sub
and
in
cld
into
aad
jno
pop
punpckldq
mov
jno
adc
pop
sub
cmp
sub
mov
inc
xlat
loop
loop
cmp
push
mov
or
gs
dec
stos
sbb
movsl
in
adc
leave
jne
xchg
or
aaa
jle
shlb
out
popf
call
popa
jno
fs
jp
psubsw
xlat
cmp
cmpsb
jnp
jne
and
mov
arpl
pop
xor
and
bound
sbb
pop
js
and
adc
dec
mov
inc
in
jle
xchg
in
sarl
mov
mov
out
cmp
jg
int
sub
jns
loop
sbb
dec
daa
cli
dec
cwtl
call
mov
sub
add
and
mov
adc
insb
loopne
aas
and
fldl
xor
aaa
loopne
jg
imul
out
aaa
lock
pop
scas
aam
mov
pop
mov
push
test
sarb
fsubs
shlb
adc
iret
dec
mov
sbb
mov
fdivl
sahf
and
enter
imul
repz
mov
out
ja
in
add
lods
inc
int3
xchg
scas
repnz
push
loope
and
stos
icebp
cmc
xchg
push
loope
mov
and
lret
sub
mov
jo
hlt
jb
les
out
adc
stos
xor
cmpsl
push
jns
jle
jp
loop
adc
dec
bound
or
gs
and
adc
push
jne
cwtl
rorb
fisubs
mov
dec
sub
lret
lods
sbb
jp
pop
push
xchg
inc
sahf
sub
push
mov
sahf
mov
pop
cmpsl
repnz
add
cmp
mov
adc
or
dec
sub
mov
push
aam
mov
lcall
lods
arpl
popa
fucomi
loop
sub
sbb
push
js
mov
add
les
xchg
xchg
das
out
rorb
mov
movsb
notb
add
add
cmp
test
inc
fstps
sbb
incb
repnz
and
mov
add
rcll
lret
dec
insl
lock
mov
mov
daa
out
aad
mov
in
cld
and
add
outsl
sti
jl
add
idivb
xor
shr
insl
ret
xchg
push
lret
mov
adc
sbb
mov
add
fstp
sysret
int
or
xor
nop
fcoml
push
mov
mov
gs
in
cmp
movsb
xor
push
push
clc
mov
clc
xchg
push
movsl
ret
cld
cmp
js
pushf
lahf
push
je
mov
pushf
ja
pop
xchg
mov
mov
add
push
icebp
jns
mov
lock
inc
adc
jne
mov
mov
movsb
andl
xor
push
je
out
sbb
or
nop
insb
adc
mov
xor
in
inc
mov
jecxz
xchg
rorb
daa
mov
cmc
hlt
test
and
pop
jo
jmp
dec
inc
push
push
icebp
leave
jae
incb
pop
sbb
xchg
lods
popa
scas
jae
addl
xor
mov
lahf
xor
mov
les
and
jne
int3
jne
add
mov
jle
icebp
xchg
test
push
out
outsl
jmp
outsl
xor
lds
mov
ja
lret
xchg
inc
lret
hlt
lock
repnz
movsb
fwait
lea
cs
or
clc
repz
fld
xor
xor
in
pop
mov
fcompl
hlt
pop
pop
out
out
das
cmp
cmpsb
into
cwtl
leave
daa
mov
fistpl
fdivl
adc
enter
in
pop
aad
mov
out
push
outsl
add
cmpb
xchg
xchg
stos
push
arpl
iret
out
jnp
lret
or
clc
jb
push
add
inc
xchg
sub
movsl
pop
pop
clc
cli
xchg
xchg
push
push
les
mov
cmp
add
and
lcall
mov
pop
cltd
test
sbb
jo
and
push
mov
cmpsl
cmp
pop
dec
and
loop
inc
dec
popf
or
push
div
cs
popf
xlat
insl
adc
movsb
jle
out
pop
ror
icebp
dec
fistpl
mov
pop
lock
jne
add
xchg
std
cmp
aaa
lret
mov
jae
es
and
add
in
dec
ret
out
dec
roll
mov
leave
mov
negb
xchg
cmp
mov
jl
sub
jo
jmp
insb
mov
or
in
push
call
lret
cs
jp
rcrb
pop
in
aad
mov
lahf
and
fstps
mov
or
push
sub
sahf
ret
loopew
mov
test
fists
rcrl
fdivr
aam
xor
jbe
icebp
daa
out
cmp
add
mov
idivb
dec
ds
pop
and
insl
lods
fnsave
mov
pop
inc
das
ljmp
lret
mov
and
or
int
cmp
cmpsl
imul
adc
filds
subl
xchg
jp
ss
inc
push
add
xchg
pop
in
mov
outsb
sti
lret
pusha
push
pop
xchg
xchg
imul
popf
sbb
test
cmp
push
cmp
stc
in
and
fwait
xchg
pop
mov
mov
aas
lahf
mov
lods
inc
mov
stc
mov
xlat
cwtl
add
fs
ss
outsl
push
out
and
dec
es
xor
lods
mov
or
int
add
mov
cmp
stc
dec
mov
mov
dec
mov
cs
loopne
add
mov
ja,pt
push
adc
xchg
faddp
insb
xor
xor
sbb
jmp
add
sbbb
pop
lret
sub
and
xlat
sbb
mov
sbb
in
pop
cltd
mov
fldcw
ja
sbb
mov
adc
xchg
cmp
out
das
sub
and
and
fisubs
sbb
lea
loopne
enter
cwtl
inc
rol
or
xchg
in
jle
test
lcall
jns
sarl
testl
dec
lods
add
dec
add
push
std
xor
xor
push
sti
mov
fwait
scas
sahf
mov
negb
ror
sub
rcr
mov
cmc
subb
outsl
sahf
pusha
cs
pop
cs
popa
mov
popa
mov
ret
popf
dec
and
jg
push
das
jecxz
es
cli
pusha
arpl
add
push
pop
into
mov
push
pushf
fdivl
fildll
lods
pop
daa
push
cld
push
mov
pop
pusha
lds
or
push
aaa
mov
or
fcoms
xchg
add
call
ss
stos
inc
in
test
mov
push
inc
xlat
fwait
push
and
cmp
push
pop
cmp
sbb
aad
dec
mov
xor
sahf
clc
lret
mov
pop
icebp
testl
outsb
fidivrl
pop
adc
movsl
fs
adc
mov
cld
outsb
gs
sar
int3
das
jge
mov
add
inc
sub
test
gs
or
incb
push
cmpsb
dec
sub
push
or
or
int
sub
push
les
add
jnp
ljmp
sub
iret
jbe
cmpsb
je
mov
mov
outsb
adc
aam
dec
jb
add
stos
sub
push
jge
lcall
mov
jge
imul
inc
fwait
inc
adc
mov
faddl
push
dec
adc
mov
nop
in
dec
jbe
sbb
test
inc
insl
push
test
jbe
jmp
das
sub
mov
aad
jmp
jbe
loope
call
pop
lods
xchg
out
movsl
cmp
fwait
cli
mov
cmp
xlat
sub
movsb
inc
mov
cli
cmpsb
mov
lods
mov
inc
call
cmpsb
test
loop
jp
dec
pop
arpl
inc
and
mov
shlb
daa
sbb
adc
inc
dec
aaa
repnz
cli
mov
sbb
dec
xchg
hlt
jo
std
sbb
jmp
cmp
and
adc
push
andb
test
shll
push
mov
test
dec
lret
bound
loope
les
ljmp
ja
in
test
add
pop
lods
cmpsb
xor
mov
add
fxch
cmp
test
adc
adc
shl
lods
mov
jecxz
pop
aam
inc
nop
inc
push
in
fiaddl
mov
mov
adc
decb
dec
pop
push
test
test
sbb
adc
fsts
fwait
inc
int3
push
stos
imull
ret
cmc
xchg
loopne
fs
mov
test
outsb
imul
mull
or
aad
cmc
jns
daa
ret
mov
mov
and
push
cld
sub
pop
jo
sti
dec
mov
sub
repz
push
gs
mov
jl
fstps
adc
or
mov
imulb
movsl
jns
xor
lret
aam
pop
inc
fadds
popf
lock
movsl
cmp
fisubrl
gs
out
fwait
cmp
push
fs
mov
push
sbb
aam
dec
imul
add
jecxz
or
add
filds
arpl
test
rolb
sbb
mov
aad
mov
lcall
push
sbb
or
xchg
out
mov
mov
movsl
xlat
les
aaa
scas
cld
cmpsb
sti
test
sub
pop
outsb
xor
sub
pop
and
inc
aam
xor
mov
inc
mov
jb
insl
sbb
loope
dec
mov
jle
lcall
mov
stos
xchg
test
jne
cwtl
lods
stos
lcall
push
xor
add
add
adc
mov
xchg
xchg
fstpl
jb
repz
scas
mov
xor
pop
jnp
push
push
sbb
cmc
xor
or
pushf
lods
dec
std
ds
xchg
scas
mov
vrcp28sd
repnz
add
rolb
xchg
es
stos
popa
mov
xlat
das
cmpsl
or
bnd
mov
fsubr
jno
push
sbb
fwait
lcall
sahf
pop
scas
enter
add
gs
scas
clc
mov
rcrl
imul
cmc
movsb
mov
xor
pop
push
sahf
fs
data16
sti
shr
pop
test
push
inc
cmpsl
ljmp
add
mov
jb
andb
sub
xchg
pop
dec
loopne
dec
sbb
aam
sbb
sbb
pop
pop
ret
add
pop
pop
addl
loop
and
pop
mov
add
pop
icebp
sbb
push
ss
add
bound
mov
ficoml
rorb
mov
sub
aaa
xchg
rcr
add
inc
mov
daa
out
sarb
jo
js
xlat
pop
iret
xor
add
outsl
call
inc
std
lret
or
rcrb
cmpsb
sub
es
and
movsl
pop
or
int3
inc
test
rol
ret
add
add
xor
clc
mov
pop
repz
jmp
mov
and
imul
xchg
movsb
inc
stc
test
jmp
sti
mov
xor
pop
xchg
mov
lods
xchg
sarl
push
mov
mov
or
ficomps
jbe
jmp
outsb
adc
popf
fsub
fs
jmp
cmc
inc
or
push
push
pop
push
in
int3
data16
and
int
pusha
push
pop
xor
aad
jge
sub
les
idivb
rcrb
xchg
jbe
push
ljmp
stos
imulb
ret
jns
add
push
repz
aas
xchg
mov
inc
inc
dec
dec
das
and
sbb
jmp
mov
mov
jg
push
jb,pn
sarb
cmp
and
fistl
rcll
outsb
sub
pop
pop
into
jne
cmp
stos
inc
sub
pop
sbb
fcompl
movsl
aas
bnd
sbb
dec
mov
xor
fldt
mov
clc
push
and
jae
dec
iret
cmp
and
int3
xchg
add
leave
mov
adc
lds
dec
lret
lds
mov
mov
rcll
inc
cmp
push
dec
dec
inc
jmp
inc
loopne
xchg
repnz
adc
mov
add
jnp
jmp
xor
xchg
in
mov
mov
or
ds
subb
gs
insb
int3
sub
jne
mov
lret
add
arpl
cmp
lds
int3
xor
cmc
inc
shll
dec
outsb
test
dec
sub
cwtl
mov
lahf
sti
lcall
shlb
ss
pop
scas
rol
daa
testb
adc
mov
mov
scas
sub
mov
cld
add
mov
movsl
adc
out
jecxz
cli
mov
mov
ja
dec
cli
mov
lods
mov
xor
push
mov
sub
addr16
jmp
mov
loope
scas
nop
mov
test
mov
push
xchg
xor
sbb
push
ljmp
mov
fldl
pop
ljmp
ljmp
mov
stos
push
in
aad
jge
test
stos
loope
flds
lods
push
out
cmc
sbb
mov
aas
cmp
pop
mov
cmp
pop
dec
lods
xlat
sbb
and
jmp
xchg
sub
jmp
sbb
lcall
mov
xchg
jge
inc
rcr
cmc
dec
gs
xchg
xor
xlat
dec
xor
rcrl
adc
push
cmp
add
fistps
scas
fucomi
sbb
loope
and
loop
mov
wrmsr
jmp
inc
aam
cld
adc
daa
cmp
or
pop
cltd
das
xchg
sub
mov
pop
f2xm1
popf
loope
leave
jo
mov
xchg
jecxz
mov
pusha
fs
or
pop
iret
or
sbb
mov
insb
push
idiv
or
pop
pusha
inc
pop
imul
jnp
adc
popf
mov
pushf
mov
mov
push
loop
and
cmp
inc
xor
inc
and
push
rcrb
outsl
cmpsb
and
push
mov
push
push
push
or
fldcw
mov
cmp
jns
adc
sbb
psubsb
sarb
mov
cwtl
pop
lds
sbb
jp
sub
jle
notl
test
pushf
mov
pop
imul
int
cs
dec
stos
mov
mov
enter
roll
xchg
and
in
insb
repz
ret
cltd
jg
jp
push
mov
add
and
rorl
adc
shll
jae
jmp
aam
cmp
ror
dec
dec
mov
or
mov
jae
pusha
sbb
adc
push
push
cmp
nop
es
add
or
mov
cli
push
pop
mov
adc
pop
sbb
lods
imul
ss
pop
jecxz
fldt
les
push
mov
stos
nop
into
cmp
cwtl
adc
adc
test
mov
in
push
mov
or
xchg
and
dec
pop
mov
pop
mov
imul
scas
out
popa
lock
xchg
mov
pop
lret
mov
xor
mov
lea
xor
movl
aad
in
cltd
mov
in
pop
roll
jecxz
fadds
push
aam
aam
inc
mov
push
jnp
mov
dec
inc
fsts
les
sub
and
add
movsl
mov
cmp
lret
loope
xor
pop
push
ss
jmp
imul
ss
lret
pop
out
popf
sub
xchg
repnz
mov
inc
mov
pop
cmpsb
sbb
fcoms
and
push
std
or
pop
cmpsl
sbb
in
repz
sbb
xchg
cli
adc
mov
push
jmp
xchg
push
and
rcr
sti
mov
add
mov
jns
mov
push
faddl
insb
and
ds
or
jle
int3
rcll
scas
addr16
jp
mov
add
mov
dec
fiaddl
data16
xchg
dec
cwtl
iret
cmpsb
pusha
dec
inc
js
ret
es
xor
out
lds
inc
xchg
cmp
mov
ja
js
mov
les
dec
arpl
add
out
sarb
lock
inc
enter
cs
inc
cmp
movsl
stos
cmc
subb
and
pop
xor
push
push
inc
sbb
cmp
add
cld
mov
divl
dec
sub
xchg
outsb
nop
cmp
loop
dec
in
adc
out
jg
mov
repz
push
sahf
sub
and
push
imul
ret
sbb
xchg
sarl
or
sbb
add
iret
mov
mov
mov
les
push
xchg
cmp
mov
mov
sahf
imul
outsl
cmpsl
jae
mov
push
inc
pop
nop
ljmp
push
or
or
mov
jne
adc
cmp
lods
or
adc
arpl
jbe
pop
cld
data16
es
sbb
cmp
stos
sub
xchg
add
sub
cmp
sbb
sbb
mov
mov
shll
ja
jbe
lret
in
adc
fdiv
inc
imul
scas
fbstp
int
arpl
add
mov
or
push
cmpsl
es
out
xor
negl
stc
dec
sbb
icebp
filds
mov
jns
loopne
xor
mov
aam
xchg
jle
mov
pushw
ret
sub
pop
dec
fistl
sbb
pop
rorb
push
mov
xchg
xor
cmp
lds
stc
std
aam
pop
pusha
bound
adc
fdivr
fdivrs
jp
cmpb
aas
cmp
mov
jge
pop
negl
inc
cs
fildll
stc
push
xchg
pop
push
loop
push
cmp
andb
jb
jb
sub
es
clc
or
push
mov
mov
push
pop
push
pop
inc
fadds
mov
xor
test
mov
fstpl
loope
scas
stc
fistpll
js
or
pop
mov
stos
mov
iret
cmp
lcall
std
pmaxsw
cmp
push
outsl
aaa
int3
xlat
outsl
out
std
int
push
dec
pop
ret
mov
dec
cmc
pushf
bound
sub
lock
mov
fisttps
adc
cmpsb
push
mov
xchg
mov
sub
dec
das
adc
popf
mov
push
pop
insl
loopne
inc
mov
insl
sbb
loope
fwait
cmp
scas
push
aas
fnsave
pop
adc
sti
xchg
push
in
dec
imul
out
sbb
sub
and
fprem1
xchg
push
cmp
filds
and
mov
jo
fwait
popf
out
push
mov
mov
les
mov
xor
rorl
into
xorl
xlat
or
xor
adc
cmp
movsl
and
rorl
jl
in
in
and
pushf
jmp
mov
push
lahf
mov
int3
sub
les
pushf
scas
dec
mov
push
mov
or
sbb
push
les
mov
imul
dec
lods
xchg
pop
xor
inc
loopne
ret
sahf
stos
repz
mov
iret
jns
pop
into
xor
pop
jne
cmp
mov
sub
movsl
and
shll
sbb
sbb
add
dec
popa
ret
insb
add
ret
filds
test
out
ljmp
adc
shl
movsl
cmc
adc
xchg
les
dec
mov
jb
jo
adc
enter
out
mov
ret
push
fucomp
roll
sub
lret
test
pop
subb
cmc
bound
xor
je
xor
xor
mov
pop
stc
pop
sti
in
and
loop
call
or
xor
dec
cli
xor
sbb
and
push
mov
aas
pop
pushf
shlb
scas
mov
aad
adc
hlt
call
int
shr
cmp
rolb
data16
leave
repz
and
cltd
inc
cltd
outsl
in
pop
rcl
popf
test
add
aas
sbb
pop
mov
cli
in
push
push
out
pusha
mov
fwait
lock
jmp
inc
push
push
stc
int3
icebp
std
jae
cmp
push
and
sbb
add
into
test
pop
ljmp
dec
dec
pop
js
sbb
push
mov
sub
cmp
faddl
mov
test
test
fwait
in
aad
dec
xor
imul
and
pop
inc
jge
in
loopne
sub
hlt
orl
adc
jbe
popl
cmp
add
cmp
adc
sti
scas
sbb
or
inc
or
fnstsw
push
adc
adc
add
icebp
xlat
stos
int
insb
outsb
push
jb
pop
mov
add
dec
outsb
and
push
add
mov
mov
cwtl
xor
loopne
cmp
lcall
cmp
mov
sub
fwait
pop
js
ss
test
adc
xchg
add
popa
push
jl
push
mov
iret
jno
mov
jg
sub
into
repz
das
push
fsubl
imul
lods
aam
sub
jbe
lret
out
cmp
insb
sbb
idiv
pushf
pop
icebp
es
push
adc
pop
xor
cmp
out
ss
insl
inc
fnstsw
sbb
jo
mov
das
push
hlt
jl
stc
dec
cmpl
dec
xchg
xor
add
bound
push
jnp
ljmp
push
test
lods
jne
xor
loope
xor
add
or
out
daa
mov
ljmp
fwait
ret
sahf
hlt
push
dec
adc
test
jecxz
sub
dec
xchg
xchg
pop
mov
sbb
out
cmp
lods
ja
dec
js
movsb
adc
xchg
inc
dec
arpl
pushf
or
fwait
mov
push
jle
lret
adc
push
inc
icebp
mov
fistpl
sbb
jg
ljmp
aam
inc
bound
mov
pop
add
into
mov
aam
sbb
push
xor
mov
dec
push
jle
sub
or
popa
fldt
cmpsl
cltd
xor
mov
out
jns
mov
fidivrl
xchg
scas
mov
push
push
inc
cltd
jecxz
add
jg
dec
xchg
sub
pop
cmp
iret
mov
dec
or
arpl
jmp
push
xchg
test
fdivrs
jne
and
aas
inc
jne
add
sub
ret
pop
outsb
xchg
xor
cmpsl
dec
xchg
gs
and
sub
push
and
outsb
lcall
pushf
movsl
cmp
shrl
pop
push
out
scas
cs
test
test
pop
mov
fimull
fnstcw
sub
pop
aam
sub
dec
push
in
sub
dec
insb
movsl
ljmp
in
lcall
jnp
es
loopne
pop
cmp
bound
jge
xchg
mov
aas
ret
or
iret
mov
ss
sbb
test
loopne
leave
cmpsb
aaa
dec
dec
jl
loop
ja
mov
cld
mov
test
pop
mov
cs
icebp
mov
adc
mov
inc
or
inc
cmpsb
rcll
jae
inc
xor
sub
jge
jo
jo
movl
ss
xchg
mov
xchg
sbb
sbb
ljmp
jb
sti
jg
insl
loope
xchg
aas
iret
test
pop
int
lret
cmp
dec
xor
cmp
mov
mov
fisttpll
stos
mov
push
or
xchg
shl
sti
imul
lock
push
cmpb
test
jo
sub
mov
les
stc
stc
mov
je
sub
cmp
pop
dec
repnz
push
fwait
lea
adc
out
cmp
add
inc
sbb
cltd
scas
test
cld
adc
mov
or
in
clc
stos
outsb
mov
mov
lds
cs
sbb
jp
and
jle
filds
loope
lods
adc
jnp
fnstsw
xlat
xchg
push
fcoml
lret
push
aas
femms
jno
push
jno
jno
popf
xor
sub
jno
dec
or
push
flds
insl
insl
mov
aas
sub
mov
cmpsb
testb
xchg
mov
out
outsb
xor
mov
movsb
sbb
push
cmpsl
mov
cs
mov
push
or
nop
ss
pshufw
mov
pop
ret
add
sub
call
imul
cwtl
inc
xchg
jl
xchg
loope
add
add
sbb
loop
mov
cli
rcl
pop
adcb
ss
jmp
dec
into
jp
mov
jp
mov
jae
aas
loop
outsl
jbe
in
jmp
fcomp
and
popa
sbb
lods
insl
mov
iret
pop
and
and
and
cli
mov
mov
call
mov
ret
xor
sbb
gs
pop
cmp
insb
fidivs
inc
pop
xor
pop
cmpl
dec
sbb
adc
push
adc
adc
es
test
fistpll
push
clc
pop
in
sti
mov
xchg
and
cli
popa
sub
dec
add
mov
inc
and
pop
iret
mov
add
sub
xchg
mov
incl
mov
stc
mov
mov
aam
inc
mov
cli
in
cmp
and
pop
mov
adc
mov
pop
xchg
mov
sub
fs
test
and
pop
adc
es
jecxz
repz
add
push
arpl
jmp
push
test
test
and
xchg
mov
fnstsw
jmp
xor
addr16
fisttps
add
es
cmpsb
push
stos
jbe
mov
popa
xor
jns
repnz
fnstsw
mov
inc
in
push
fsts
les
pop
adc
jb
call
nop
push
lcall
test
mov
cmpsl
dec
dec
ret
clc
xor
aam
fwait
mov
cmp
nop
sahf
and
lret
adc
in
pop
ljmp
leave
in
pop
decl
mov
outsb
pop
es
xor
fildll
ret
loop
je
push
xor
mov
imul
aaa
jno
inc
subl
mov
scas
or
imul
jmp
test
btl
add
mov
push
dec
icebp
je
sbb
cld
std
pop
aas
mov
mov
jg
insb
pop
shl
test
subb
lock
bound
add
jae
pop
mov
int3
push
mov
sub
dec
push
xchg
xor
pusha
shll
mov
mov
add
call
sahf
mov
adc
rorb
cs
out
inc
xor
notb
mov
xchg
mov
daa
mov
and
and
inc
mov
sbb
loop
cmp
call
stos
ja
mov
cmp
ss
lock
pop
mov
sti
inc
jb
lods
gs
ss
pop
adc
inc
mov
mov
pop
adc
pop
lods
mov
adc
mov
fistpl
test
mov
xchg
insl
cmp
test
addb
sbb
es
insb
les
popf
push
jae
lock
sub
push
iret
jecxz
adc
rclb
fdivrl
push
mov
call
cmpsb
xchg
and
icebp
les
inc
inc
add
cmpsl
push
js
push
hlt
dec
push
aam
das
add
out
sbb
sub
mov
fwait
push
inc
test
roll
mov
push
push
jo
mov
xor
aam
dec
jl
mov
push
cwtl
and
pop
cltd
adc
pop
mov
jnp
mov
sbbb
std
jl
repz
sbb
mov
dec
sbb
add
mov
aas
aas
cmp
sub
add
or
loopne
inc
mov
sub
sub
jg
imul
cmp
dec
sbb
push
or
test
mov
vmptrst
xchg
xchg
xchg
mov
jns
imul
call
jno
and
pop
jo
jg
ss
pop
jmp
out
xchg
scas
shlb
iret
dec
or
pop
fnstenv
test
scas
stos
sti
push
repnz
fisubrl
sbb
bound
fldt
int3
sub
insl
dec
mov
xorl
jo
pop
scas
or
not
cmc
mov
repz
push
jl
mov
adc
adc
cmpsb
subl
push
pop
hlt
xchg
cld
nop
imulb
sarl
adc
inc
daa
jg
stos
rolb
adcb
dec
repnz
ds
mov
or
mov
cld
mov
cmp
mov
mov
push
xchg
push
xchg
or
jge
ljmp
out
dec
aad
add
repnz
or
jno
mov
pusha
dec
or
popf
out
fcoms
enter
dec
sarb
lret
int
aam
pop
sub
add
aaa
movsb
test
cmp
jmp
fcompl
inc
cmp
add
mov
out
mov
shr
and
mov
pop
nop
imul
shl
jl
js
xor
sbb
stos
dec
add
mov
pop
push
mov
adc
ss
cmp
cmpsl
jae
mov
sub
jbe
out
dec
mov
jnp
lcall
call
jle
fs
push
aaa
rcll
cmp
pop
cwtl
and
push
movsb
cmp
fists
imull
out
sarb
daa
xchg
xor
adcl
mov
sub
jle
cmpsl
lea
jbe
jmp
arpl
arpl
mov
cs
out
das
ljmp
imul
push
jl
aaa
outsl
insb
jmp
aas
sarl
push
outsb
mov
xchg
aaa
dec
leave
xchg
cmp
rorb
lret
pop
push
leave
faddl
mov
or
push
push
mov
aaa
in
mov
push
sbb
lods
adc
jne
ffree
jge
sbb
mov
popf
bound
in
shlb
sbb
jne
add
push
push
out
adc
jmp
arpl
in
scas
jno
daa
mov
mov
pop
aam
jg
cmpsl
xchg
in
and
hlt
mov
movsb
adc
outsl
mov
dec
fisubrl
mov
mov
nop
jge
rcrl
mov
cwtl
xchg
fcmovne
movsb
insl
mov
jg
cmpsb
mov
int
in
aaa
scas
cwtl
in
and
push
xor
jmp
jmp
push
push
or
jp
adc
sub
dec
inc
add
shlb
arpl
push
pop
outsl
mov
imul
leave
inc
fs
or
sbb
iret
xor
xor
mov
lea
pop
repnz
fcmove
mov
test
dec
loopne
aas
insl
lcall
mov
inc
cmp
filds
mov
cmp
sar
mov
hlt
setg
cmpsl
xchg
push
daa
xor
cmpsb
or
xchg
xor
mov
add
or
and
into
aam
outsb
lods
mov
or
fisubs
jl
dec
and
loope
test
clc
push
push
ja
xchg
dec
inc
push
cmp
mov
in
add
std
popf
shll
xchg
movsl
jne
mov
aam
inc
push
mov
jae
xor
mov
xchg
aaa
adc
les
out
dec
rclb
mov
mov
and
jne
bound
ss
in
daa
cmp
jmp
clc
sub
cmp
sub
mov
enter
push
es
xor
dec
aad
jb
bound
pop
js
gs
xchg
js
xor
jg
xchg
movsb
or
jge
imul
lock
lods
mov
mov
pop
xor
add
insb
or
lds
mov
jne
outsl
addb
lods
imul
sub
xor
mov
push
fistpll
cmpsl
test
in
imul
aas
cmpsb
loop
sbb
push
fidivl
inc
mov
jb
dec
push
inc
xor
packssdw
movsb
mov
sahf
les
nop
neg
lods
push
ljmp
add
dec
idiv
ffree
inc
cmp
les
sub
call
cmp
sub
add
add
xchg
imull
stc
aaa
rcll
dec
in
arpl
lret
outsl
adc
push
sbb
lods
add
popa
push
test
or
xchg
pop
add
out
std
push
leave
es
mov
push
out
or
sub
dec
xchg
jp
clc
repnz
xor
push
daa
outsb
or
jecxz
jno
lret
dec
push
sub
mov
lock
addr16
imul
cmp
lods
fwait
jnp
dec
add
clc
sbb
ds
jg
lds
mov
lock
test
cwtl
adc
repnz
sub
xor
inc
cli
jb
mov
pop
sbb
mov
adc
imul
pop
sbb
cmp
jecxz
cmpsb
rclb
xor
test
mov
dec
repnz
dec
in
or
push
lcall
sbb
jno
icebp
mov
xlat
add
cmp
dec
jbe
mov
jnp
push
mov
insb
leave
out
les
aad
jg
fidivs
inc
adc
das
out
mov
je
pop
dec
pusha
mov
loop
jmp
pop
mov
inc
into
stos
push
pop
decl
iret
xor
or
inc
sahf
jp
adc
or
incb
sub
mov
adc
loopne
divb
inc
outsb
jmp
push
ret
and
es
mov
cld
or
xlat
ja
dec
xlat
inc
lahf
lea
mov
clc
adc
mov
add
cltd
add
push
idivl
mov
sub
adc
sbb
adc
cmp
pop
jb
subl
nop
inc
out
mov
inc
shrb
pop
mov
and
pop
lahf
je
ja
xchg
in
or
out
out
mov
pop
mov
adc
insb
xor
jne
in
sbb
nop
cmp
movsb
pop
jnp
sbb
aaa
mov
shl
mov
jle
pop
in
das
adc
ror
out
aas
sbb
lods
test
icebp
movsl
dec
lock
les
arpl
shrb
ljmp
xchg
and
popa
adc
lock
into
neg
stc
pusha
test
aam
aam
movsb
lods
push
xchg
jne
and
or
lret
inc
pushf
cmp
mov
loopne
rolb
adc
mov
in
loopne
js
jbe
push
call
mov
test
cmp
sbb
lcall
stos
bound
inc
add
xchg
dec
push
movsl
sub
std
lods
sbb
inc
jne
fstl
rolb
out
int3
icebp
jbe
cwtl
mov
xlat
into
push
pop
js
sar
hlt
add
lods
sub
shll
imul
pop
lock
insb
cmpsl
or
mov
mov
incb
fistpl
cmc
popf
cwtl
mov
js
xchg
push
push
imul
jge
sti
jae
fisttps
xchg
bnd
dec
scas
dec
nop
test
cld
sub
add
add
int
repnz
mov
push
jp
xor
pop
xchg
pop
aam
mov
and
dec
sbb
roll
xchg
adc
iret
dec
jge
xchg
push
test
adcb
les
jb
ret
sbb
cmp
sbbb
mov
mov
cmpsb
aam
sbb
stos
mov
xchg
mov
cwtl
dec
mov
stos
inc
or
aam
cwtl
push
fwait
jmp
pop
pop
mov
jno
mov
insl
xor
mov
repnz
jbe
sub
dec
jns
mull
loope
hlt
sbb
pushf
pop
jb
pop
push
inc
xchg
push
js
insl
pop
dec
push
push
test
xchg
xor
popa
aaa
loopne
imul
and
cld
sub
mov
sbb
iret
cmp
sahf
cmp
mov
sbb
sbb
adc
push
and
aad
ja
jp
je
hlt
inc
or
mov
jp
movsb
loop
mov
cmp
pop
cmpsb
test
aad
addr16
mov
pop
xor
lods
loopne
adc
testl
mov
sarb
push
cs
sbb
mov
test
jno
lea
js
jp
sbb
mov
enter
cld
stc
movsb
pop
aam
push
mov
mov
mov
cs
sbb
inc
roll
daa
dec
inc
sbb
mov
push
push
sahf
into
dec
or
sub
pop
jns
shl
imul
jns
mov
leave
lret
xchg
inc
sbb
xchg
inc
pusha
fstl
xchg
stc
jns
mov
scas
lret
adc
fistpll
test
push
lock
sbb
sbb
mov
jne
outsb
rorb
mov
mov
push
inc
and
sub
dec
movsl
pop
dec
dec
outsb
mov
push
jl
das
mov
sbb
adc
add
mov
loop
and
sarb
push
cli
sub
aad
outsl
mov
mov
inc
push
mov
insb
out
lret
je
pop
ljmp
int
test
adc
lcall
cs
add
adc
dec
cmpsl
ds
pusha
mov
movsl
jle
and
stos
push
xchg
lods
pop
stos
pop
xchg
stos
gs
pop
adc
aas
jo
xchg
jno
or
adc
mov
ret
mov
std
push
cmc
pushf
mov
sbb
imul
push
jmp
imul
sbb
js
jbe
mov
mov
lods
test
jno
mov
push
push
xchg
js
inc
pop
adc
fs
pusha
jae
xor
call
or
mov
cli
cli
movsl
push
mov
shrb
inc
sbb
icebp
dec
ja
jae
scas
xor
aam
add
mov
and
cltd
loopne
xor
mov
pop
sub
jp
es
popf
sub
loopne
xor
movsl
repnz
jo
jo
xchg
sub
scas
lret
int3
sahf
adc
sbb
inc
xchg
inc
pop
aaa
jle
movsb
cmpb
add
sbb
inc
dec
mov
lods
stos
mov
inc
dec
shlb
loopne
mov
insl
pushf
mov
mov
mov
out
xor
rorb
add
sbb
push
jo
fisubrl
or
fnsave
popf
inc
mov
mov
push
mov
mov
shll
sbb
sub
fldcw
jb
stos
xor
jns
ret
lds
bnd
mov
and
mov
movsl
xchg
add
loop
or
inc
pop
push
aad
pop
cmpsl
arpl
popf
pushf
cwtl
dec
lods
and
and
lods
test
arpl
mov
cmp
fsubrp
inc
loope
add
cmpl
mov
cwtd
add
push
adc
lahf
leave
dec
adcl
cmp
cld
xor
jo
rcrl
out
filds
mov
sti
addr16
push
pop
push
fcoml
outsl
dec
xchg
cmpsb
push
in
int
mov
ret
sub
sub
jnp
lahf
sbb
add
xchg
stos
jno
cmpsb
jno
push
inc
cmpsb
adc
rsm
sbb
pushf
les
fdivrs
repnz
push
jne
movsb
xchg
cltd
push
dec
xor
add
rcll
rcrl
cld
xchg
sarl
arpl
jmp
in
lret
xchg
lods
inc
fiadds
cmp
aaa
jo
push
sub
sub
repz
fdiv
call
cwtl
xor
xchg
enter
pop
shll
rorl
jle
aas
xor
stc
or
outsb
pop
mov
sub
cmp
sub
lea
aad
adc
mov
mov
xorb
mov
js
movsb
in
dec
push
adc
popa
dec
arpl
and
inc
das
mov
sub
xchg
mov
movsb
cs
loopne
pushl
js
adc
fbstp
test
add
xchg
mov
lcall
mov
mov
or
fcompl
push
xor
jl
dec
mov
sti
and
or
ss
mov
rcrb
movsl
in
and
pop
mov
mov
lcall
mov
cmpsl
mov
aaa
pusha
cmpsl
out
cld
js
lahf
orl
cmc
adc
aas
sbbl
cwtl
xlat
into
ret
mov
ret
mov
push
ja
or
mov
and
outsl
adc
fwait
jmp
jbe
mov
ret
mov
data16
xchg
arpl
lds
rcrl
mov
jle
js
adc
popl
xor
insl
push
or
or
or
out
and
xchg
repnz
pop
movsl
dec
repnz
or
xorl
lock
xchg
aaa
pop
sbb
pop
mov
stc
faddl
fildll
out
lods
out
outsb
scas
sub
test
jl
inc
daa
sub
mov
sbb
cmp
lret
xor
cmp
mov
xchg
xchg
arpl
std
call
stc
sbb
push
and
imul
dec
push
push
inc
sub
jo
and
dec
xlat
insl
mov
imul
push
movsb
jmp
enter
mov
int
out
xchg
lret
mov
add
add
movsb
gs
sbb
mov
outsl
mov
push
je
ljmp
xchg
jno
test
jae
mov
cli
loopne
jecxz
aam
fsubrl
pop
iret
mov
push
push
addr16
jg
push
mov
lahf
addr16
cmp
adcb
or
das
sarl
pushw
cmp
mov
popa
xchg
pop
popf
sbb
arpl
or
lcall
addb
incb
sbb
xchg
sbb
dec
mov
nop
add
pop
cmp
mov
mov
cmp
xor
or
xor
xchg
dec
std
pop
and
xor
push
dec
dec
addr16
lret
xchg
dec
pop
cltd
in
mov
jecxz
push
and
cwtl
xchg
mov
xchg
bound
mov
pop
flds
gs
repz
popa
cmpsl
jne
dec
les
push
add
inc
dec
pusha
jge
icebp
sarb
lock
xor
sub
out
add
jle
jnp
inc
es
or
xor
mov
in
push
dec
adc
sub
divb
int
out
rolb
add
jbe
push
mov
mov
xchg
andb
cmp
lock
hlt
cmp
pop
xchg
xchg
jmp
xor
sub
add
mov
xlat
add
out
data16
adc
mov
lds
dec
jmp
adc
mov
mov
test
arpl
aas
stos
loop
jle
xchg
and
pop
mov
cmp
stos
aaa
out
xchg
pop
jbe
xor
fcoml
daa
cmp
cmp
ja
xchg
xor
inc
dec
cmpsl
jl
ja
out
out
stc
rcll
mov
add
push
jle
rclb
mov
rorl
jo
repz
les
ja
lret
aaa
in
aam
adc
popa
sar
ss
out
sbb
bound
or
sub
jns
mov
mov
or
cmp
fisubs
or
and
js
ret
int
daa
xor
insb
push
mov
xor
popf
es
xor
or
dec
popf
adc
push
popf
sbb
iret
mov
repz
out
icebp
sbb
mov
xchg
sbb
pop
insb
mov
jns
out
lret
test
xor
pop
add
sbb
jg
inc
popf
cmp
out
in
mov
test
pop
orb
dec
test
insl
bnd
adc
gs
sbb
pusha
sti
xchg
mov
sbb
loopne
leave
fsubrs
mov
daa
cmp
xchg
nopl
pop
ja
repnz
mov
jb
std
punpckhwd
fnsave
roll
ljmp
push
inc
inc
mov
ret
add
jnp
jmp
add
ja
arpl
ficoms
loop
push
out
xor
pop
sub
dec
shlb
lret
ss
enter
je
push
out
xchg
sub
push
lcall
add
shll
clc
or
sub
pop
js
lret
adc
mov
std
sbb
add
test
cli
cld
and
int3
add
add
call
jbe
test
cltd
add
adc
cmpsl
or
js
xorb
xchg
push
mov
rcrb
cmp
dec
leave
jg
movsl
xchg
data16
jb
cmp
dec
push
xchg
xor
lret
les
jl
pop
sub
push
popf
std
popa
jge
pop
mov
push
loopne
mov
mov
test
or
arpl
rcr
xchg
jg
es
inc
ret
dec
mov
jge
movsb
cmp
das
fnsetpm(287
not
inc
mov
or
test
stos
cs
sub
pusha
jnp
mov
and
xor
sub
cmp
je
popa
inc
lea
push
jo
outsb
xchg
add
in
in
daa
and
fisubrs
xchg
rcl
enter
dec
out
ret
shl
jns
or
mov
outsb
mov
and
mov
int
daa
scas
sbb
cmp
pop
fldt
mov
xrelease
or
xor
mov
jmp
add
aad
rcrl
cld
dec
fldl
inc
xor
mov
or
push
and
push
ret
popf
das
ret
popf
cmpsb
sub
jne
adc
sbb
sbb
popa
push
cmc
xchg
fidivrs
xchg
dec
adc
shrl
data16
js
push
cmp
or
bound
sub
test
lahf
mov
jnp
mov
mov
movsl
or
nop
inc
sbb
add
pop
xchg
leave
xchg
nop
jnp
xchg
sbb
out
test
call
std
dec
sbb
pop
adc
xor
sahf
add
sbbb
mov
lret
sub
cmp
xor
int3
inc
mov
adc
mov
imul
pop
xchg
mov
data16
fxch
xchg
popa
push
gs
pop
bound
add
pop
icebp
je
lea
int3
sbb
movsl
movsl
inc
sbb
rcl
push
enter
sbb
xor
test
popl
gs
jbe
dec
jle
lock
and
mov
fisubrs
mov
mov
sbb
subb
stos
nop
test
cmp
pop
mov
loope
dec
test
nop
inc
inc
vminsd
cltd
xor
push
jp
insl
pop
add
inc
dec
and
cmpsl
pusha
sbb
fistpl
enter
div
add
outsl
sub
push
int
sbb
inc
shl
xor
test
cmc
ja
push
movsb
insb
push
sub
jl
xchg
outsb
lock
xchg
push
adc
pminub
xchg
repz
jns
cmp
inc
cmp
mov
mov
xchg
mov
int
cmpsb
fists
ljmp
clc
fwait
lcall
push
sti
pop
inc
push
inc
add
adc
lahf
dec
pop
mov
mov
inc
data16
mov
loop
cmpsb
test
xchg
cmpsl
std
xchg
clc
push
aad
push
mov
fldcw
xor
int3
and
aad
ljmp
inc
sub
and
fs
stos
cmpsl
xchg
cmp
and
inc
cltd
lock
xchg
les
sbb
pushf
aaa
scas
into
fwait
shll
mov
push
adc
or
aas
fcompl
xor
sti
add
daa
lock
pop
add
in
rcl
lret
mov
inc
fcomps
lret
stos
mov
ret
cs
sbb
pop
inc
mov
sbb
rorb
push
pop
push
int3
jg
cwtl
cmp
lret
push
adc
pop
mov
sub
sbb
fildl
xchg
jle
lea
pop
fisubs
push
ds
aad
dec
sbb
lods
out
jecxz
mov
ss
dec
shlb
jl
xchg
lret
call
pop
jae
in
mov
dec
movsl
ljmp
movsb
cmpsb
adc
adc
mov
cmp
iret
pushl
and
jmp
dec
dec
push
sub
dec
mov
push
mov
mov
mov
sub
mov
imul
out
push
mov
add
mov
jne
std
nop
mov
bound
push
andb
fidivrs
dec
mov
mov
loop
xor
xor
adc
xor
sbb
sbbl
inc
add
and
int3
mov
push
sbb
in
mov
add
and
mov
mov
xchg
gs
or
lods
lods
in
popf
in
xor
cwtl
arpl
shr
mov
scas
stos
push
imul
push
nop
add
pop
xor
call
push
push
inc
mov
repz
mov
and
ljmp
xor
sbb
or
mov
push
scas
ljmp
mov
cmp
xchg
and
cmpsl
cmp
and
outsb
rcrb
jl
mov
stos
sub
out
mov
das
icebp
mov
ljmp
arpl
pop
arpl
push
dec
push
mov
andb
pusha
aas
lock
sub
inc
mov
cmp
mov
hlt
ja
mov
jnp
push
pop
push
ljmp
mov
mov
xchg
icebp
sub
mov
sbb
outsl
pusha
cmp
call
add
jnp
pop
movsl
adc
ss
mov
mov
xor
ja
jle
mov
ljmp
push
ret
stc
xchg
icebp
adc
xor
andl
mov
mov
or
push
jne
pushf
xor
loopne
push
and
cmp
push
add
fisttpl
xchg
cmpsb
xchg
add
mov
jno
add
mov
pusha
stos
adc
mov
leave
shlb
lcall
into
sbbb
negb
popa
pushf
add
popa
repz
xchg
adc
sysexit
cmpsl
lock
xchg
jae
sbbl
mov
mov
sub
fnstsw
mov
dec
inc
xor
adc
jmp
xchg
mov
shll
jns
jo
push
lea
mov
xlat
or
movsl
jbe
cmp
scas
sbb
fs
adc
inc
test
addb
push
mov
lret
es
cld
ds
pop
enter
fisttpll
dec
or
les
in
sarb
fisubl
adc
repz
mov
sbb
shrl
sbb
push
out
in
test
pop
inc
adc
dec
in
leave
mov
jmp
lods
leave
mov
push
inc
mov
sub
xchg
sub
cmp
sbb
out
sub
xchg
push
and
mov
gs
fsts
dec
or
das
mov
popa
dec
test
mov
mov
sub
jo
mov
cmp
lahf
mov
inc
push
jle
iret
cmc
out
mov
gs
lea
cmp
cmp
mov
add
ret
dec
inc
sub
cmp
pop
sbb
xchg
cmp
jbe
mov
add
fsubr
cmp
aas
ss
out
push
mov
or
sbb
mov
mov
rclb
fs
lods
arpl
ds
pop
insl
dec
push
inc
push
out
jge
inc
inc
push
add
cmp
idivb
out
loope
das
mov
cld
pushf
jbe
imul
sub
dec
cld
in
xchg
hlt
inc
out
rcll
movb
xchg
dec
cwtl
pop
dec
imulb
push
rep
aam
fs
testl
or
lds
test
scas
int3
lea
js
push
or
fwait
into
xchg
stos
jmp
inc
or
mov
mov
idivb
dec
outsl
fidivl
std
shr
mov
mov
mov
xchg
mov
sahf
xchg
xchg
sbb
stc
pop
xchg
pop
pop
cmp
sub
push
arpl
test
nop
or
andl
in
mov
mov
pop
jmp
jbe
jbe
call
sbb
stc
loopne
push
fwait
push
sbb
or
pop
add
hlt
lods
adc
popf
mov
sub
stc
dec
dec
outsb
push
imul
adc
mov
insl
inc
mov
aaa
jnp
inc
mov
mov
and
jmp
cmp
rolb
xlat
std
mov
inc
jmp
lea
jb
push
xlat
std
jg
iret
mov
xchg
notl
outsl
lcall
push
cmova
pop
mov
inc
xor
and
sub
icebp
xor
repz
dec
test
sbb
enter
mov
arpl
in
movsl
inc
in
js
aad
pop
stos
jmp
or
ret
dec
and
loope
test
loope
mov
jae
xchg
cwtl
adc
gs
in
sub
mov
push
cmpsb
int
xchg
mov
push
lods
push
mov
mov
pop
fwait
xchg
dec
mov
sbb
mov
adc
test
sub
insl
adc
enter
fsub
and
xlat
repnz
mov
das
mov
or
and
dec
cmp
filds
inc
sub
arpl
dec
mov
mov
push
aad
arpl
jb
mov
push
pop
shlb
aad
push
fs
stos
nop
and
pop
in
and
aaa
loopne
adc
insl
mov
hlt
push
or
leave
test
mov
jle
sbb
in
dec
mov
mov
push
inc
lods
pop
cmc
fstps
fdivrs
push
jo
lahf
mov
ficoms
fdiv
js
cltd
inc
sub
jmp
sbbb
fs
xchg
cwtl
mov
jp
pop
testl
jns
sub
and
and
add
xlat
mov
decl
xchg
rcll
mov
clc
out
fists
xor
adc
test
push
sbbl
lret
bnd
and
imul
or
inc
inc
dec
popa
rcrb
test
test
jne
cmp
pop
inc
lods
out
int3
mov
sbb
jge
add
pushf
cmc
push
inc
lods
jns
dec
stc
and
jecxz
aas
ret
cmp
dec
xchg
scas
lock
fstl
dec
and
popa
stos
adc
subl
insl
test
jno
fistpll
test
sbb
sub
cmp
clc
aam
pusha
movsl
mov
outsb
cmp
add
int3
dec
xchg
dec
or
je
std
cltd
pop
repnz
xor
ret
jb
sub
stos
aas
rorb
mov
mov
dec
adc
xchg
xlat
int3
sbbl
xor
leave
cwtl
arpl
mov
and
lock
test
push
dec
outsb
out
jb
aas
loope
cmc
push
scas
cli
push
add
scas
inc
movups
xchg
nop
xor
lahf
and
enter
jmp
push
int3
in
mov
mov
dec
mov
insl
in
or
push
jge
xchg
js
sbb
sub
pop
and
bnd
and
sub
push
mov
mov
inc
scas
xchg
cld
ret
mov
popf
push
aad
daa
mov
mull
pop
mov
imull
jno
cld
push
xor
jno
jae
xlat
lcall
or
stos
je
inc
or
je
cmp
pop
or
ret
rolb
push
inc
ss
ss
mov
jae
fdivrs
shr
cmp
sub
movsl
adc
ljmp
insb
jmp
or
inc
and
push
fldenv
pop
mov
adc
pushf
pop
mov
ret
push
mov
xor
jo
mov
cmc
loopne
lret
insl
pop
decb
scas
and
xor
out
stc
xchg
ret
test
outsl
repz
out
adc
xchg
outsl
dec
and
push
into
insl
push
sahf
cwtl
pop
cmp
repz
sub
sahf
mov
test
ja
sbb
lea
add
es
jmp
push
fisttpl
mov
push
cmpsl
lds
jmp
fisubl
jnp
cltd
dec
mov
inc
sub
ljmp
insb
cmp
jecxz
adc
pushf
inc
xor
pusha
or
frstor
and
daa
cmp
push
invd
test
sahf
jo
and
test
jle
stos
lods
push
xchg
and
add
adc
pop
jecxz
mov
adc
mov
fsubr
mov
push
push
sbb
scas
jne
or
sbb
push
rorl
gs
iret
sbb
jl
add
cmp
mov
mov
jl
fildll
mov
int3
cmp
xchg
fadds
xchg
enter
leave
test
mov
dec
sub
ret
rcr
rcll
imul
outsb
adcl
adc
push
xor
lods
lods
jo
daa
fnstcw
clc
xchg
out
xchg
xchg
adc
dec
mov
cwtl
pop
lods
sub
hlt
sarb
subl
je
jns
inc
cmp
pop
xchg
adc
sbb
test
jecxz
xor
mov
xchg
adc
into
push
js
in
xor
fistps
mov
xor
or
fisubrs
xchg
and
push
pop
jl
stc
xchg
idivl
mov
icebp
jmp
cwtl
das
xchg
mov
hlt
fidivrs
inc
pop
adc
pop
ss
int
aas
fnsave
mov
sbb
lcall
loop
in
movsb
arpl
push
sub
dec
clc
push
and
jmp
dec
ret
jmp
or
xor
cld
cmp
cwtl
repz
outsl
enter
push
xchg
xchg
sub
cs
xchg
push
clc
mov
xor
xchg
sahf
and
xchg
mov
or
lcall
sub
sbb
fldt
pop
outsl
xlat
lds
inc
dec
add
sub
scas
pop
jl
test
xchg
test
ja
mov
sub
daa
mov
sbb
lods
inc
leave
repz
stc
add
dec
data16
mov
rorl
cld
cmp
outsl
cltd
dec
push
jle
outsl
jb
popf
leave
notl
lods
and
movsb
sub
ds
subl
ficompl
lods
cltd
mov
lods
sbb
jo
dec
int
lret
and
mov
fcoms
xor
push
imul
jmp
cmpb
dec
sub
jp
mov
sub
mov
mov
cmp
shr
jnp
stc
cwtl
insb
lret
or
jae
pusha
adc
mov
jno
out
test
mov
lcall
mov
outsl
dec
sbb
insl
scas
aaa
insb
sahf
in
and
sbb
pushf
mov
in
stos
or
xchg
pushf
mov
mov
nop
dec
push
sub
jl
dec
xchg
jmp
and
mov
mov
push
sbb
repz
fidivs
xor
pop
filds
js
in
push
adc
sbb
enter
repnz
sub
loope
out
jge
sub
out
call
inc
sahf
sub
test
inc
mov
jbe
sbb
mov
push
aam
pushf
aad
clc
cmpsb
jbe
ljmp
lret
int3
scas
stos
xchg
fincstp
dec
aad
and
loopne
iret
cmp
mov
add
push
popa
dec
cmpsl
js
and
cmp
sbb
push
mov
out
fisubs
pop
fldt
in
cld
push
mov
or
dec
setns
mov
mov
loope
lret
jb
push
mov
fbstp
sbb
cmp
adc
stc
sbb
stos
sarl
mov
lods
or
movsl
add
pop
nop
push
dec
sarl
push
mov
roll
popa
add
gs
gs
int
push
sbb
hlt
movsl
jg
xor
aas
leave
aaa
push
jecxz
inc
dec
ret
mov
int
jno
jge
pop
adc
ret
mov
sahf
cmp
test
mov
adc
mov
xor
pop
repnz
or
or
add
adc
dec
dec
xchg
cld
shlb
fisttpl
lods
rorb
mov
inc
aas
lods
sub
sbb
mov
jnp
std
jnp
xchg
add
push
inc
pop
mov
jge
repz
lds
and
pushf
jecxz
jmp
jl
mov
das
xchg
cs
sub
or
xor
cld
sar
es
into
mov
mov
insl
pop
fwait
jne
mov
ds
push
aaa
push
fadd
test
mov
xor
je
test
cmpsl
inc
cmp
out
xchg
mov
jle
sub
mov
pop
scas
sarb
mov
sub
jo
dec
cmp
popf
cmpsb
cmp
and
clc
mov
sub
inc
call
cld
adc
adcl
mov
fnsave
cmp
or
or
adcl
push
sarl
rorb
sub
mov
cmp
push
sbb
test
lds
lret
or
pop
mov
mov
add
jge
adc
stos
fstpl
jb
xor
rcr
jmp
push
ja
out
push
repnz
or
inc
out
ljmp
ds
or
lret
sub
mov
int3
jnp
sbb
mov
repz
lahf
jecxz
mov
mov
cli
or
lods
insb
pop
loope
pushf
sahf
inc
outsb
xchg
dec
rcl
and
mov
sub
js
mov
mov
cmpsl
in
sbb
sbb
cmpsb
std
lea
xchg
and
lods
stc
sub
cwtl
xlat
or
ret
les
addr16
pop
jne
fstpt
mov
insl
push
lcall
jge
mov
dec
mov
pop
sub
adc
add
negl
loopne
jp
inc
push
push
xchg
jmp
xchg
hlt
cmp
int3
cmc
repz
push
je
sbb
icebp
xchg
cmp
and
gs
sahf
rcrb
push
test
mov
shrb
or
lret
and
add
das
ss
cmp
loopne
int
mov
and
inc
xor
outsb
cmpsb
xor
std
add
or
cmp
pop
cmp
aam
xor
insb
mov
sub
xchg
scas
nop
aam
je
mov
xchg
addl
mov
xchg
sbb
mov
cmp
inc
fidivs
add
dec
scas
fdivrs
out
mov
es
cwtl
inc
sub
lahf
insl
test
and
addr16
sub
aas
or
imull
pop
stc
add
mov
aam
out
rcr
push
sbb
pushf
mov
cmp
repz
xchg
shll
sbb
mov
test
ds
addb
mov
lds
repnz
cs
pop
sub
movsl
pop
mov
sub
sub
outsb
ret
jg
mov
rorb
sbb
insl
lret
cmp
inc
clc
hlt
negb
ret
pushf
mov
pop
and
cmp
fstl
sbb
or
add
lock
mov
popf
cs
mov
mov
push
pop
lock
inc
out
sub
add
push
bound
inc
push
inc
lahf
pop
negl
cs
sub
out
decb
daa
and
js
stos
inc
and
fnstenv
mov
dec
and
add
stos
push
cld
and
and
pop
sbb
sub
lods
push
and
add
jg
inc
push
sub
iret
pop
pop
or
sbb
jns
jae
mov
cwtl
xlat
cltd
pop
stc
push
insb
push
imul
enter
daa
push
fs
push
inc
jne
xlat
cmp
xchg
lcall
xchg
lret
mov
in
xchg
inc
repz
xor
fwait
xchg
sbbb
fidivrl
aas
dec
stos
mov
shlb
iret
push
scas
mov
inc
or
fs
in
cltd
mov
out
ret
add
gs
adc
fstpl
ds
icebp
call
inc
xor
jecxz
mov
notb
mov
push
loopne
inc
lcall
mov
xchg
cmp
jl
sbb
jmp
lods
dec
jo
mov
daa
cmc
xor
mov
lds
mov
lods
pushl
scas
mov
adc
xlat
ja
jbe
imul
cli
hlt
sub
clc
mov
insl
out
imul
dec
adc
and
shll
add
jecxz
test
fcom
lret
out
mov
mov
popf
mov
push
mov
inc
mov
push
es
roll
pop
xor
xchg
dec
test
mov
pop
cmp
xchg
out
bound
ret
arpl
push
and
xlat
insb
mov
cmp
rcll
jg
loop
in
je
lahf
mov
shlb
or
ja
sub
pop
cmp
outsl
lahf
add
push
pop
add
aas
loope
test
jnp
gs
fdivl
pushf
jbe
cli
sbb
mov
mov
mov
mov
pop
adc
mov
mov
inc
jl
xor
pop
jns
icebp
in
xchg
lds
pop
icebp
push
lock
inc
sub
push
add
ftst
jno
and
in
sub
lds
rolb
and
dec
insb
jp
inc
jg
cmp
jae
xchg
loopne
movsl
test
cltd
test
cmp
pop
ret
out
mov
mov
mov
fdivs
xor
xchg
les
inc
loope
pop
dec
push
lods
add
mov
enter
xor
ljmp
lcall
movsl
rclb
mov
fs
xor
mov
cs
movl
loopne
leave
mov
inc
xor
roll
or
push
roll
adc
fcmovb
jge
sbb
add
cmp
mov
sbb
or
pusha
sbb
mov
cmc
or
jnp
pop
jbe
mov
cmpsl
fisubs
adc
test
adc
xchg
cmp
push
rsqrtps
lcall
fcoms
xchg
lock
xchg
dec
cmp
sbb
in
lahf
inc
call
dec
orb
icebp
mov
outsl
loopne
and
nop
mov
insb
mov
mov
ret
test
add
faddp
leave
sbb
loop
pop
pop
and
pop
sub
xor
push
mov
outsl
sub
xchg
scas
lock
mov
cwtl
fimuls
into
sbb
pushf
cmc
inc
mov
ret
xchg
cmp
andb
inc
or
add
dec
or
or
popa
push
push
push
and
pop
adc
shll
mov
jae
testb
xchg
scas
movsl
insl
in
lods
rcll
js
mov
pop
test
daa
pop
bound
cmpsb
jo
pop
ret
mov
ret
repnz
mov
xor
cltd
mov
pop
and
into
and
xchg
jbe
mov
sarl
mov
inc
lea
mov
ljmp
fdivp
xor
int3
adc
adc
sbb
test
dec
cli
mov
notb
pop
clc
mov
sub
fidivs
adc
fs
dec
lds
dec
rcrl
mov
into
aam
cltd
cmp
jle
push
dec
push
sbb
stos
pop
inc
pop
stos
inc
sbb
mov
pop
stos
test
scas
cmpsb
out
push
jnp
fmul
push
call
int
adc
iret
ss
add
pop
idiv
add
rorl
mov
imul
cmc
sub
jle
sbb
push
ret
cs
mov
mov
std
mov
inc
push
add
push
sbb
lods
xor
cmp
sarl
jb
and
adcl
mov
pop
and
mov
jle
mov
mov
sub
adc
fcomp
mov
icebp
jbe
in
popf
shll
jo
cmp
push
sbb
push
pop
rcrl
cmp
mov
jecxz
notb
out
jge
data16
pusha
pushf
fistps
add
js
lods
cwtl
push
xor
cmp
xor
push
xchg
pushl
cli
pop
xchg
repz
push
xchg
inc
repz
push
cmpl
jp
jmp
call
pop
ret
xchg
sbb
ja
cmpsb
push
sbb
dec
cmp
rolb
or
pop
lock
pop
sbb
mov
mov
xchg
cmp
int3
ficoml
sbb
shll
mov
xchg
cmp
inc
mov
lcall
jle
mov
in
std
xchg
mov
cmpsb
outsl
inc
es
lea
xor
add
jle
ror
fdiv
mov
cs
jo
cmp
lret
lock
imul
lds
lcall
mov
icebp
push
inc
dec
add
or
jg
pop
xor
dec
and
cmp
mov
sbb
push
cmp
mov
push
aaa
push
sub
rorb
xor
ljmp
imulb
mov
jle
sarl
inc
inc
adc
xor
das
or
adc
test
insl
mov
enter
out
les
pop
aad
rorb
mov
pop
ficoms
pop
pushf
scas
and
icebp
fucomip
jno
or
sub
ror
popa
pop
push
cmp
arpl
pop
ljmp
fsts
dec
test
xlat
sub
push
xchg
push
jo
mov
pop
and
ror
cmc
push
in
test
subl
mov
sahf
int
cmp
xchg
mov
pop
push
inc
push
xchg
sub
jb
jne
rcrb
xor
jp
orl
fiadds
imul
dec
loopne
rcl
mov
pop
pop
lods
add
testb
inc
movsb
mov
mov
rorb
xchg
fcomps
maskmovq
notl
xchg
add
mov
dec
push
mov
and
test
mov
gs
mov
lahf
clc
jo
add
mov
xlat
popf
sub
push
dec
xchg
or
in
add
xchg
xor
push
call
push
sbb
inc
cli
xchg
mov
dec
add
lret
lods
into
insb
lds
sbbl
cld
push
divb
jb
mov
nop
out
inc
adc
mov
cmpsl
sub
mov
stos
push
pop
movsb
cwtl
mov
jns
out
xchg
adc
in
add
je
jb
out
inc
pop
in
sbb
dec
mov
add
stos
mov
jl
fcmove
push
mov
and
repnz
ljmp
and
pop
cmpsl
inc
rcrb
stos
ret
cmpsb
and
fnsave
pop
mov
cld
add
arpl
jg
in
popf
pop
jns
sub
pop
out
out
mov
movsb
in
push
mov
maskmovq
mull
cld
mov
scas
lret
cmp
fs
and
sahf
sahf
adc
mov
arpl
outsl
xchg
in
push
mov
jne
arpl
cld
loope
inc
adc
shl
lret
lcall
call
mov
xchg
cmpsb
xchg
xchg
inc
int
fwait
mov
xor
leave
sub
popf
scas
adc
cmp
fnstcw
fs
mov
gs
mov
inc
xchg
xchg
xor
das
mov
lods
inc
sub
push
push
pop
in
in
rcll
faddl
ret
push
movsl
xchg
and
pop
sub
mov
dec
test
out
std
jno
sbb
cmpsb
adc
in
xchg
add
and
jmp
xchg
ret
mov
xor
out
ja
jecxz
inc
jg
pop
out
sub
or
dec
add
lods
dec
mov
lds
jmp
cmp
insl
adc
es
sahf
call
mov
es
xlat
pop
adc
fs
adc
fmul
rolb
jl
movsb
sub
cmp
movsb
mov
push
xor
mov
mov
add
mov
push
sarl
ljmp
sub
sub
push
cmp
sub
out
cmp
cmp
in
loopne
outsb
in
shr
adc
xor
fdivl
addr16
fisubs
rorb
out
cli
adc
push
out
roll
lods
dec
jo
push
inc
js
insl
aas
aam
jmp
push
adc
jecxz
mov
inc
or
lret
push
pop
scas
lds
sub
aas
pop
xchg
loop
push
lock
mov
xchg
leave
icebp
xor
std
je
push
repnz
cli
cmp
shrl
outsl
or
in
loop
or
leave
frstor
lods
lds
pop
or
mov
outsl
pushf
and
pop
dec
mov
inc
push
jno
xor
add
xor
repz
and
insl
add
pop
and
enter
mov
xchg
add
outsl
ret
dec
xchg
jge
push
int
jae
cmpsb
fidivrl
bound
push
data16
xchg
push
sub
bound
mov
push
lds
mov
inc
rclb
push
xchg
int
mov
insl
les
lahf
ret
js
mov
adc
addb
pushf
cmp
addr16
inc
dec
xor
xchg
xchg
adc
scas
outsb
jae
cmp
testb
rolb
call
insl
xchg
imull
pop
fists
or
mov
aas
aam
xchg
xchg
xor
pop
push
sbb
push
out
adc
in
cmp
and
cwtl
xchg
movsl
sbb
or
add
enter
jge
jnp
inc
sbb
loop
stos
mov
jmp
gs
lds
hlt
mov
movsb
cwtl
xchg
xor
xor
xchg
sub
jp,pt
xor
int
and
loopne
add
sbb
xchg
pop
data16
js
mov
imulb
xor
mov
js
xchg
pop
xor
je
fwait
pop
jo
cs
push
into
xor
xlat
add
out
dec
loope
rcll
mov
mov
fwait
and
fidivl
loop
pop
lods
cltd
dec
and
repnz
sarl
mov
mov
popf
jmp
add
xchg
outsb
insb
sti
ss
mov
jg
inc
jno
and
push
xchg
push
movsl
adc
test
test
insb
imul
jno
lret
test
test
sar
adc
sub
push
push
loope
dec
and
lods
popa
aad
int
push
ljmp
push
into
ffree
xchg
mov
push
push
stos
arpl
jg
insb
ljmp
push
or
jle
rorl
cmc
jmp
mov
cmp
in
mov
and
dec
iret
decb
xchg
dec
stc
aam
cltd
push
subl
push
or
inc
out
leave
sbb
std
orb
add
xor
sarl
jno
sub
pop
mov
dec
mov
imul
scas
fmull
test
add
cmp
push
sbb
add
push
push
pop
xchg
sub
fildl
stos
sub
add
sbb
loope
pop
inc
sub
xor
and
in
mov
adc
into
shrl
orb
or
pop
repnz
and
sbb
data16
dec
icebp
mov
mov
dec
xchg
xor
lea
pop
fbstp
sub
or
push
pop
iret
mov
inc
stos
jl
lahf
mov
jns
inc
lock
xchg
aam
movsb
shlb
ja
jecxz
sbb
cmp
test
sbb
add
inc
and
or
mov
inc
cmp
testl
insl
cmp
and
popf
hlt
jge
subb
sbb
dec
test
frstor
jmp
loopne
add
mov
pop
jb
scas
movsb
clc
test
lret
imul
lret
mov
sub
aad
sub
cld
or
sbb
jge
mov
xchg
jp
out
int
fildl
inc
jne
adc
jle
lahf
inc
add
push
inc
dec
cmp
cmp
lods
and
push
add
sbb
fwait
mov
push
push
outsb
in
shrb
adc
pop
sbb
orb
dec
add
mov
adc
jbe
inc
sbb
xchg
lods
popf
mov
inc
jg
push
jge
push
test
sub
xchg
jle
or
cltd
outsb
in
lods
sub
lahf
pop
pushf
mov
push
sbb
in
lods
sub
xor
push
dec
sub
and
cwtl
and
cwtl
xor
popa
in
add
xchg
arpl
sbb
pop
push
pop
iret
stc
mov
mov
ja
cmp
pop
das
loop
jg
outsb
arpl
pop
ret
fs
mov
in
psrlw
iret
test
lds
pop
jae
push
aam
xchg
iret
xorb
mov
mov
sub
add
mov
lea
sub
rorb
inc
pushf
lret
test
in
pop
mov
out
shlb
cmc
dec
push
scas
test
shr
cmpl
push
loope
imulb
lods
aam
jecxz
adc
sbb
insl
pop
in
mov
fistl
cmp
jmp
cltd
inc
mov
sahf
std
aas
repz
cwtl
js
cmp
addr16
and
push
mov
test
push
fadds
imul
cwtl
int
arpl
inc
cmp
pop
sbb
xor
shrb
movsl
or
std
pop
push
and
sti
push
mov
shlb
int3
std
inc
dec
xorl
outsb
xchg
nop
bound
shr
sbb
mov
imul
sti
cld
loopne
bound
ror
movsb
fcoms
jmp
sub
ds
mov
lock
jmp
fildll
insb
jae
pop
mov
sbb
jns
mov
ja
test
pop
pop
pop
inc
out
out
insl
push
or
ss
std
dec
push
jle
test
lock
sbb
int
inc
in
adc
lret
adc
mov
popa
mov
out
fimuls
push
lods
or
jle
pop
test
lods
add
out
in
flds
jmp
imull
mulb
xchg
scas
inc
addr16
sbb
pop
mov
loop
pop
add
jns
add
dec
mov
in
lret
sbb
mov
push
mov
mov
jb
jb
mov
hlt
xchg
cmp
push
xchg
add
cli
cld
and
pop
jns
loopne
push
lcall
into
xor
in
jecxz
pop
sarl
mov
into
mov
scas
mov
sub
cmp
xor
pop
mov
mov
pop
jg
xchg
xor
push
inc
hlt
aaa
adc
int
jno
pop
les
push
jno
fidivl
fadds
stos
fyl2xp1
jbe
mov
js
aas
push
and
xor
and
test
sub
ret
jmp
hlt
pop
aad
cwtl
push
imul
sub
jmp
mov
cmpsl
xchg
push
fisubrl
mov
pop
jb
mov
mov
movsl
fs
xchg
or
dec
movsl
jmp
xchg
jno
test
push
mov
out
stos
pop
xchg
gs
ficoms
cltd
adc
dec
jl
push
inc
mov
roll
push
dec
pop
jns
popa
jp
push
cmp
push
adc
jno
lds
xor
adc
daa
pop
fsubrl
jg
js
sbb
ret
or
adc
jo
hlt
aam
push
das
fisubrs
lret
xchg
cmp
mov
jecxz
jbe
sar
cmp
rcr
mov
dec
cmp
or
popf
and
stos
mov
test
fs
inc
movsl
or
or
pop
dec
cmpsl
inc
icebp
fmull
jmp
imul
test
jae
sub
adc
xor
addr16
inc
and
xor
rcpps
adc
jns
aaa
imul
in
adc
test
cs
dec
test
pusha
movsl
push
pop
jge
add
in
sub
popf
mov
sbb
sti
fisubs
adc
cmp
ret
stos
insl
nop
test
clc
cmpsb
xlat
sub
mov
push
xor
stc
or
pop
aaa
jl
ror
dec
popf
iret
cmpsl
ljmp
inc
sub
movsb
lock
jmp
mov
mov
sub
popa
push
ja
sub
imul
adc
les
fwait
lcall
out
cs
pop
and
cmp
aaa
in
or
push
cmp
bound
enter
or
lret
int3
roll
xchg
jge
mov
and
pop
sub
stc
nop
push
jne
cmp
insb
push
lahf
push
sub
ja
fisttps
add
stc
jae
add
inc
cmp
fiadds
xor
jo
fldcw
rcrb
in
add
dec
loopne
jo
ss
cld
je
sbb
sbb
aam
or
das
cmpb
enter
and
jp
fmulp
dec
mov
fsub
movsb
lret
cmp
movsl
stc
or
fcomip
movhps
iret
mov
add
sbb
ret
and
sub
add
xor
lods
and
ja
jg
pop
cmp
push
inc
cmpsl
cmp
mov
mov
jne
jmp
stc
inc
std
mov
cmc
mov
movsl
inc
mov
lock
pop
mov
lock
adc
ret
add
insb
xor
mov
insb
dec
lret
sub
cmp
mov
sub
sbb
out
add
push
mov
sahf
cmpsl
mov
jo
cli
shll
push
add
xchg
cmpsl
mov
pop
cwtl
mov
in
push
or
or
fwait
jae
add
cmp
lds
hlt
mov
test
xlat
js
lret
clc
pop
mov
xor
mov
sbb
cmp
cs
mov
aam
aas
pop
xchg
std
and
data16
mov
insb
pop
test
add
adc
iret
inc
and
dec
iret
stos
xchg
xchg
and
adc
out
movsb
xor
int
or
push
sbb
jmp
push
ss
sub
push
jno
outsl
cmp
rorb
shll
xor
lods
ljmp
xchg
cmp
int3
xchg
test
out
xor
jne
insl
dec
dec
loopne
xor
sbb
in
adc
dec
dec
lret
stc
and
daa
add
mov
mov
push
pop
mov
cwtl
lcall
ror
int3
aad
mov
jne
add
adcl
leave
lahf
jge
negl
jge
lock
sbb
inc
xchg
and
cmp
test
push
xor
push
repz
and
rclb
inc
jnp
push
push
cmp
int3
repnz
xor
out
sub
cmp
fidivl
clc
add
push
xchg
dec
pop
jb
fimuls
add
stos
rcr
mov
std
xor
cs
mov
mov
xchg
mov
lock
add
push
push
into
and
out
cwtl
and
sbb
ljmp
hlt
cs
int3
xor
push
icebp
push
pop
xchg
pop
out
pushf
shrl
ficompl
dec
push
cmp
push
cmp
shlb
xchg
subb
cli
push
inc
clc
xor
stc
test
movsb
jecxz
or
push
mov
mov
sub
jge
test
pop
adc
pop
jno
adc
test
jl
frstor
inc
push
jg
cmp
rol
mov
push
or
daa
sub
push
push
lods
out
dec
nop
mov
mov
outsb
pop
push
in
or
ret
lret
insb
xor
adc
and
or
inc
cmp
pop
mov
pop
aaa
jp
sbbl
add
push
lret
lods
clc
push
andb
or
mov
cmp
mov
jno
mov
outsl
hlt
lods
jmp
scas
pusha
out
mov
into
testl
add
cli
sbb
sub
repnz
test
xchg
mov
test
ror
es
in
jne
xor
cmp
ret
sbb
inc
enter
test
push
sub
add
xor
xchg
enter
lcall
dec
xchg
xor
cli
mov
lret
mov
sbb
loop
jg
push
sbb
mov
lahf
lcall
ret
push
test
subb
insb
sti
sahf
lock
xlat
add
outsl
mov
jmp
pop
xchg
in
push
pop
repnz
std
mov
cmp
es
xor
pusha
rcl
mov
lcall
sbb
pop
jbe
fs
sbb
cmpsb
cmp
and
mov
or
pop
sbb
clc
imul
sbbl
std
add
clc
adc
pop
add
jle
xlat
insl
setge
cmp
push
jo
and
popf
pop
jge
ja
lock
std
mov
test
pop
jae
mov
int
fwait
inc
mov
sahf
sub
xchg
jne
ret
add
loopne
mov
rcrl
stc
xor
mov
inc
stos
adc
mov
add
decl
rcrl
repz
int3
cmp
popa
sahf
jbe
bound
mov
insl
mov
lea
pushf
daa
push
inc
sbb
inc
pop
or
mov
mov
push
xchg
div
insl
mov
aas
xchg
das
pop
hlt
inc
adc
daa
rcrl
lea
and
daa
dec
push
scas
add
ja
fwait
and
lods
add
test
icebp
arpl
or
push
addl
and
jle
out
push
lea
jbe
ss
sub
scas
movsb
aaa
aaa
mov
xor
or
je
jge
cs
mov
push
lock
ja
jl
push
dec
cmp
pop
xor
sahf
mov
popa
xchg
mov
dec
cld
das
xchg
int3
pop
and
sub
xchg
popa
pop
test
push
sub
mov
dec
cmp
xchg
xor
jae
inc
vpavgb
pop
movsl
es
shrl
lods
fisubrs
stos
das
lock
jnp
js
xchg
xor
mov
dec
push
pop
aad
vpmovsxdq
xor
pop
movsl
sahf
data16
sbb
outsb
mov
push
inc
out
mov
in
inc
xchg
inc
push
daa
shll
mov
fs
pop
xchg
xor
cmp
cmp
test
stc
or
imul
or
lock
and
cmp
and
repz
flds
sahf
aam
rcl
pusha
xchg
dec
mov
mov
in
sub
xchg
cmc
leave
in
int3
adc
enter
fisubl
js
jno
adc
sbb
mov
ret
mov
jb
subb
adc
fcoms
inc
push
repz
int3
stc
insb
mov
fisubl
mov
mov
test
subl
stc
rcrl
or
and
rcl
or
ret
pop
jmp
xchg
out
adc
pavgb
pop
lea
in
inc
mov
sub
fbstp
push
dec
mov
gs
push
adc
int3
pslld
stc
es
adc
into
std
addl
ret
mov
imul
xor
cmpsb
inc
aas
ret
testl
push
enter
nop
cmp
int3
aaa
mov
lcall
and
out
push
stos
cli
mov
mov
adc
cmp
adc
sbb
scas
dec
mov
addr16
pop
add
daa
ss
call
pop
xchg
cwtl
out
mov
pop
pop
inc
and
aas
sbb
xchg
pop
sbb
push
jo
mov
leave
insl
dec
push
dec
dec
jle
sahf
dec
xchg
popf
repnz
fnstenv
xor
dec
sub
sub
xlat
imul
cmp
mov
js
cmpsl
pop
adc
xchg
in
sbb
fistpl
mov
in
lret
fsin
scas
popa
ljmp
lret
call
jp
jbe
jmp
mov
cld
cmp
mov
adc
lods
mov
mov
or
bound
imul
fxch
out
pop
jns
inc
mov
int
into
movsb
mov
lods
fwait
lock
addb
adc
add
out
imul
mov
lcall
daa
push
sbb
icebp
or
push
mov
xor
xchg
jg
repz
fnstsw
jmp
inc
cmpsb
test
push
bound
push
sbb
push
jl
push
sbb
or
cmpsl
jbe
push
cli
pushf
push
loop
int3
dec
js
in
push
push
stc
xchg
out
popf
aam
sbb
and
lret
icebp
mov
or
inc
arpl
jecxz
add
jno
sub
rolb
mov
adc
inc
leave
cmp
scas
outsl
inc
insl
rcrl
mov
mov
loopne
adc
xor
mov
pop
add
hlt
pop
push
add
test
sub
mov
lock
cs
xchg
jbe
pop
aam
lahf
fcompp
imul
xchg
mov
xchg
add
js
ds
ja
cmpsb
jle
dec
jle
nop
dec
xlat
pop
out
sbb
mov
rcll
out
jmp
mov
cmp
clc
sahf
div
lock
jae
fldl
rclb
movsl
add
fs
pop
push
popa
lock
adc
outsb
stos
rcrl
sub
jl
test
inc
jl
mov
data16
push
aad
cmp
adc
push
scas
jb
or
sbb
xor
pop
ficompl
mov
pop
arpl
jge
sbb
push
pop
gs
lds
sub
nop
js
cmp
lahf
pop
fldcw
call
mov
lret
cli
cmp
xlat
pop
pushf
inc
repnz
mov
dec
das
xchg
cltd
bound
cmpl
je
ret
lcall
ret
mov
sahf
inc
mov
repnz
jle
cmp
cmpsb
sbb
les
push
mov
push
int3
rorl
and
cltd
and
cmpsl
mov
and
leave
dec
mov
sub
iret
enter
xor
push
fistpl
xor
andb
pop
mov
ss
mov
add
lods
out
loop
decb
inc
ss
adc
std
fadd
jns
pop
cmp
inc
inc
jle
pop
jge
push
cmp
cmp
cmp
xchg
mov
jge
jg
ss
or
pop
and
test
mov
xor
adc
mov
mov
pop
sti
test
lret
adc
jl
fmuls
or
mov
pushf
int
outsb
aad
push
mov
popa
xchg
xor
dec
sub
lret
xor
jp
out
loopne
mov
jno
mov
mov
pop
loope
inc
iret
sub
fs
ret
mov
adc
data16
add
add
xchg
scas
sar
xor
pop
jmp
xchg
popf
push
jg
scas
push
mov
out
out
jmp
pop
and
sub
gs
fwait
adc
cltd
dec
int
les
test
xor
add
add
jno
dec
sbb
dec
jns
imul
fidivs
data16
sbb
mov
movsl
mov
jp
lea
adc
jp
pop
out
push
loopne
testb
push
repz
xchg
xlat
std
hlt
fsubrs
popa
cmc
jns
jmp
pop
bound
pop
xchg
xchg
xorb
fmuls
cwtl
out
or
pop
test
push
jmp
fs
dec
icebp
pop
cli
push
jmp
sub
pop
xchg
imul
jb
add
pop
jnp
rdmsr
es
js
mov
in
dec
into
aas
sbb
xor
xchg
cmp
lods
sahf
mov
lret
inc
cli
cmp
xchg
jecxz
inc
gs
js
sub
jnp
test
repnz
xor
stos
jmp
outsb
lods
push
sub
add
lds
inc
pop
xchg
or
or
push
mov
jp
xchg
inc
stos
inc
jns
insl
cmovnp
pop
pop
movsb
popa
sub
out
xlat
xchg
jbe
lods
aam
push
ret
add
push
ret
mov
mov
shll
into
test
jle
cli
lds
or
rorb
xor
push
pusha
sarb
xchg
loopne
inc
cmpsl
int
adc
sbb
push
and
inc
test
adc
out
xchg
mov
and
lahf
das
fisubl
dec
jns
or
sub
inc
ljmp
xlat
les
out
gs
inc
ret
xchg
rorl
orl
add
xor
fstps
in
lock
mov
in
jns,pn
cmpsl
inc
repz
mov
push
dec
adc
push
sbb
dec
daa
inc
aam
lds
rep
call
cmp
outsb
movsl
push
push
mov
sub
xchg
lret
inc
test
jp
in
fs
pop
pop
add
or
mov
pop
addb
jnp
xchg
jbe
adc
lock
cmc
push
out
or
test
cmpsl
ljmp
push
sub
mov
cli
inc
loope
xor
inc
loopne
shl
pop
pshufw
dec
int3
jbe
loope
mov
lds
insb
mov
mov
fmull
pop
test
pop
scas
dec
addr16
sar
lcall
dec
pop
add
pop
mov
inc
adc
sti
leave
cmpsl
popf
and
adc
ss
mov
or
shrb
sub
stos
dec
int3
inc
push
enter
mov
mov
adc
out
pop
xchg
and
cmp
mov
jl
jnp
test
pop
sbbb
fisubl
test
jmp
fs
test
mov
xchg
daa
jns,pt
movsb
adc
cmp
dec
mov
or
cmp
mov
ljmp
jns
xor
out
fstpl
jl
js
dec
sbb
rorb
cmpsl
jmp
arpl
push
push
adcb
xchg
fisubrs
pop
and
sbb
adc
out
in
movsl
gs
test
and
and
in
mov
enter
loopne
dec
jno
xchg
sbb
cmp
dec
lret
jb
sbb
inc
int3
mov
xchg
aas
bound
cmpsb
push
pop
lods
push
and
push
push
movsl
or
arpl
sub
mov
int
fmul
sub
push
inc
xchg
icebp
xchg
cld
les
jne
xchg
and
in
lds
mov
in
mov
faddp
mov
and
in
mov
sarb
mov
adc
and
adc
pop
dec
dec
push
imul
dec
push
mov
cmpsb
pop
inc
mov
sub
xor
xchg
xchg
in
es
clc
imul
mov
inc
enter
mov
addr16
jmp
lds
xchg
cmp
leave
xlat
arpl
je
pop
es
xchg
sarl
pop
cmp
test
lcall
mov
std
hlt
xchg
inc
xchg
lds
bound
xchg
imul
sbb
fmull
je
sbb
movsb
sub
movsl
mov
jl
aas
in
aad
push
rcll
or
pop
ret
fwait
pop
icebp
mov
fmull
jle
xor
sub
fisttpll
inc
xor
loopne
iret
sbb
push
outsb
lcall
sub
or
push
mov
mov
fdivp
pop
std
arpl
leave
ret
mov
sti
push
sub
jb
lea
pop
leave
push
add
jl
inc
in
insb
inc
out
sub
cmp
outsl
sub
imul
icebp
rcrl
icebp
add
mov
sbb
rclb
imul
call
cld
add
call
mov
pop
movsl
sub
jge
ret
mov
shll
into
jne
add
inc
mov
out
cmpsl
cmp
mov
mov
add
push
stos
jg
iret
xlat
sub
mov
adc
das
dec
and
dec
push
imul
mov
adc
and
into
ss
outsl
xor
cmp
dec
pop
pop
outsb
in
arpl
sbb
pop
sti
aam
hlt
outsb
xchg
insb
jo
inc
inc
jmp
jo
imul
iret
adc
xchg
ja
inc
pop
mov
or
cmpsb
pop
stos
lcall
gs
movaps
mov
lea
cmc
popf
ljmp
push
lcall
lcall
sbb
sub
xchg
push
rcrb
out
push
xor
filds
mov
dec
and
inc
mov
inc
pop
fmull
out
in
cmc
shl
stos
fdivr
dec
int
pop
pop
mov
andb
mov
mov
fsubs
inc
mov
imul
fisubrl
mov
mov
enter
in
lahf
adc
push
in
loopne
mov
xchg
cmpsb
dec
jl
enter
xor
outsb
xchg
inc
mov
cld
ljmp
mov
and
jno
pop
jmp
mov
xor
in
fldt
cmp
pop
sbb
push
repnz
imul
dec
jno
cmp
jae
aam
into
add
mov
sbbb
push
movsl
pop
aas
int
adc
or
stos
add
dec
divb
pop
or
or
push
fsubs
dec
imul
mov
dec
and
mov
push
pop
out
fdiv
sti
popa
xchg
jae
xor
cli
dec
xlat
jns
pop
xor
xor
sub
or
or
mov
cwtl
in
xchg
lods
xor
jl
xor
xchg
pop
testb
fmul
ret
test
or
icebp
push
push
dec
frstor
pop
sbb
push
mov
pop
add
test
repnz
cmp
mov
std
xlat
xchg
jge
pusha
iret
push
mov
or
and
lcall
jge
pushf
jmp
and
sbb
shl
push
or
cli
dec
jo
push
and
repz
ljmp
sarl
cmp
pop
dec
and
cs
in
sahf
idivb
jns
out
or
std
or
sub
out
or
dec
ficoml
pusha
out
cmpsl
sub
stc
cmp
aam
mov
xchg
xchg
add
pop
xchg
and
loop
in
fisttpll
adc
xor
lahf
test
xchg
adc
xchg
pop
pushf
push
push
sub
mov
sub
sti
mov
fnstcw
cmpsb
pop
enter
mov
pop
mov
adc
pop
cli
xchg
stos
movsb
mov
mov
call
mul
or
lcall
or
out
dec
aad
add
xor
loop
add
push
outsb
daa
cmp
loopne
subb
mov
sarb
push
push
lock
in
sub
pop
mov
ja
or
nop
adc
sti
test
push
popf
sub
mov
mov
push
push
pop
push
add
inc
ds
mov
sbb
pop
mov
les
mov
xchg
repz
inc
and
mov
sbb
call
mov
daa
pop
jle
pusha
lret
es
lods
dec
and
adc
lcall
arpl
aaa
out
cs
jb
xor
pop
dec
fwait
ret
rcr
sub
rolb
dec
addr16
cli
iret
mov
mov
mov
xlat
shl
mov
jbe
add
sub
test
fisubrl
sbb
dec
add
sti
lods
ss
mov
push
xor
jg,pn
test
fistpll
adcl
sub
add
xchg
mov
mov
cmpsb
ficomps
and
mov
imul
dec
lods
inc
stos
in
inc
mov
add
inc
jbe
sub
xor
xchg
imul
cmc
sbb
jle
mov
cmpsl
push
jl
inc
push
loopne
mov
andb
insl
inc
mov
repz
mov
pop
add
push
jns
or
imul
lock
in
call
add
push
mov
jo
cmpsb
pushf
jbe
xchg
add
xchg
jge
subb
inc
mov
mov
dec
mov
add
push
ret
xchg
sbb
pop
bound
adc
mov
xchg
in
ja
aaa
das
push
sub
outsl
jno
int
repz
mov
pop
jb
ljmp
arpl
push
repz
inc
sbb
je
dec
scas
in
push
enter
xchg
pop
and
sti
mov
cmp
cli
cmpsl
sub
pop
and
out
test
jmp
in
cmp
pop
push
sub
adc
cmp
mul
std
adcb
stos
aaa
rcl
mov
sahf
and
sbb
add
fistpll
jmp
jg
cli
fistpll
lret
sub
js
dec
test
out
mov
rcrb
push
add
push
in
pop
fcom
stc
lds
das
lahf
stos
jp
daa
subl
ret
xchg
dec
lods
std
mov
adc
fiaddl
xlat
loop
xor
rorl
sbb
pop
jns
arpl
dec
lret
and
rcrb
data16
sub
jo
mulb
out
jno
sti
and
popf
cmp
inc
add
push
and
das
jae
icebp
lret
xor
cmp
int
int3
arpl
or
test
xor
jae
jb
mov
push
xchg
cmp
adc
sbb
lods
jne
and
mov
iret
push
adc
outsb
leave
sahf
std
or
or
jb
divb
iret
xchg
push
aas
and
and
pop
dec
inc
jno
sub
jmp
cmp
ja
jle
test
fidivs
lods
subb
push
jl
sbb
ljmp
and
lret
xor
adc
repnz
pop
pop
inc
or
jae
lea
pop
cmpsl
and
xchg
pop
xchg
sub
mov
mov
sbb
aad
lods
add
xor
ret
fwait
cwtl
push
sub
mov
lahf
xchg
loopne
jne
es
int
sbb
bound
mov
cmpsl
push
mov
fiadds
outsl
cmp
loope
xchg
cld
dec
icebp
stos
jne
int
inc
push
mov
sti
imul
cs
aam
std
sub
or
lods
xchg
nop
mov
in
andl
sbb
cmpb
mov
movsb
adcl
nop
mov
mov
js
data16
mov
and
lret
repnz
scas
mov
cmp
test
mov
xchg
cmp
push
mov
xor
mov
leave
mov
ds
gs
jnp
int3
pop
jno
imul
cmp
xchg
popa
push
jnp
jae
js
xchg
lret
mov
pop
test
inc
movsb
pushf
mov
pop
cmp
scas
lods
lret
idivl
add
daa
cli
mov
pop
cmp
mov
es
imul
jmp
lds
add
test
xchg
leave
jge,pt
jg
daa
addb
pop
push
or
stos
into
add
inc
or
cld
cmp
jno
mov
cltd
insb
add
sbb
in
repz
xor
cmp
add
sub
hlt
lcall
sub
sbbb
in
mov
lds
popa
sub
test
push
sbb
repnz
xlat
cld
fwait
orb
pop
jl
xor
jl
adc
jbe
pop
imul
adc
movsb
mov
inc
test
shlb
sbb
pop
in
or
iret
push
and
int
mov
popf
push
xchg
pushl
ja
cmp
es
into
pop
in
mov
or
sub
push
test
sarl
or
jae
das
push
pop
sub
pavgb
shll
xchg
mov
fadds
stos
sarl
test
stos
mov
divb
mov
push
sub
in
lret
inc
adc
cmp
lds
sbb
mov
mov
jl
ja
push
or
pop
push
mov
lret
scas
outsb
shl
add
outsl
lcall
and
cltd
mov
push
xchg
fistl
push
and
inc
in
cs
and
ja
jg
sub
pusha
insl
cmp
pop
fstl
cmpsl
mov
clc
scas
repz
outsl
mov
xlat
sarl
sub
dec
adc
adc
sub
test
je
dec
xchg
mov
decl
mov
scas
inc
add
les
leave
xor
mov
mov
ficoms
data16
fcoms
imul
das
mov
inc
add
adc
push
mov
mov
xor
in
mov
lods
sub
or
xchg
mov
fwait
es
and
clc
rcl
adc
and
adcb
or
mov
idiv
dec
pusha
scas
sbb
lret
or
adc
ficoms
mov
rcr
sub
sarl
sbb
jo
ljmp
or
or
orb
pop
cmp
push
iret
ror
xchg
icebp
cmp
dec
data16
gs
push
or
dec
insl
fmul
pop
stc
inc
psubq
bnd
or
mov
mov
sti
jecxz
negl
rcrl
test
pusha
bound
bound
imul
out
inc
xor
imul
mov
bound
xchg
stos
loop
adc
cmpsb
mov
subb
fstpt
js
fcoml
pop
xchg
sub
fsts
jge
jg
fdivrl
pusha
lret
xor
or
lods
std
outsl
or
add
add
sub
sbbb
sub
inc
xchg
jne
mov
imul
ljmp
fadds
iret
mov
sbb
js
mov
fdivrl
sub
in
cmpsl
sbb
je
adc
xchg
push
push
repz
scas
jecxz
dec
jnp
loopne
mov
neg
aam
mov
mov
aas
mov
into
cld
daa
aam
lods
loope
mov
mov
or
or
stos
andl
push
lret
lret
inc
push
int3
lcall
loope
push
insl
loope
push
cmp
outsl
xchg
test
mov
bound
push
push
push
mov
dec
icebp
jmp
xchg
dec
mov
imul
mov
cmpl
jle
xlat
pop
cwtl
icebp
scas
loope
in
test
mov
mov
cmc
in
mov
lret
xchg
dec
jb
xchg
push
sbb
test
js
into
xchg
and
div
dec
pop
stos
popf
dec
into
lock
add
lock
or
push
jecxz
iret
xlat
or
xchg
push
or
sub
bound
ret
mov
inc
pusha
dec
fldl
movsl
scas
mov
mov
mov
addb
das
sub
push
xor
jbe
mov
mov
mov
xchg
repnz
push
outsb
shrl
lods
mov
sbb
inc
loope
sahf
popf
mov
pop
push
xor
or
mov
xchg
lock
push
out
rol
cmp
dec
loope
or
pop
push
test
add
add
jbe
and
and
insl
lret
sbb
andb
ret
mov
mov
out
lcall
iret
xor
pop
imul
filds
daa
sbb
leave
test
pop
pop
adc
mov
shr
and
pop
xchg
pop
shll
std
inc
mov
inc
hlt
pusha
mov
dec
mov
sbb
sarb
in
cmpsb
xor
pop
out
sarl
pop
in
sbb
std
adc
and
outsl
sub
fsubl
cmpsl
mov
les
xchg
enter
inc
rorb
cmpl
or
mov
test
js
inc
negb
cwtl
leave
pop
xchg
xchg
int
dec
cli
daa
or
or
aas
in
add
in
in
cltd
fildll
xchg
dec
dec
sub
cld
mov
insl
in
mov
cmova
xchg
test
sbb
enter
enter
movsl
lea
scas
mov
sbb
fstpl
jb
jecxz
insb
jle
lods
fsubrl
dec
sbb
ret
movsl
test
rorl
les
adc
daa
jns
inc
mov
jo
insb
out
fwait
or
lods
mov
testb
popf
lret
adc
roll
sar
je
in
fstpt
sub
mov
pop
and
popa
cmp
xor
pop
in
jle
push
push
dec
xchg
enter
idivl
jae
insb
arpl
and
testl
pop
mul
insl
jle
popa
cmpsb
mov
xor
hlt
push
add
cmp
popf
mov
cmc
loop
test
sbb
cmp
mov
out
jnp
fnstcw
movsl
dec
loope
push
inc
push
std
or
push
test
fimull
das
sbb
imul
lods
xor
dec
lret
sub
outsl
ret
push
fldl
and
xor
repz
cmc
mov
pop
cmp
adc
roll
push
or
lahf
mov
pusha
mov
movsl
dec
and
iret
sub
cld
nop
das
mov
mov
push
jl
ja
xlat
inc
iret
rolb
dec
bound
xchg
ss
ja
push
inc
dec
dec
dec
je
jg
adc
and
lcall
cld
xchg
and
jae
and
push
pop
ret
or
das
pop
popf
loopne
mov
or
popf
add
mov
js
xchg
sbbb
imul
xlat
sbb
and
shll
jp
outsb
inc
dec
dec
pop
cli
int
sub
mov
mov
incl
or
inc
rcl
mov
arpl
mov
cltd
dec
xchg
imul
pop
bound
loop
jle
movsb
sbb
lods
push
jb
inc
pop
xor
bound
mov
cmpsl
pop
or
push
adc
cmpsl
cmp
sub
add
xchg
lds
mov
push
add
mov
cmpsb
and
enter
cmp
aad
or
cmp
and
nop
pop
daa
mov
test
and
pop
mov
sti
dec
adc
iret
mov
lcall
in
sub
inc
inc
pop
and
mov
sub
xchg
sahf
sbb
dec
xlat
movsl
xor
mov
stc
jbe
mov
xchg
sub
out
lahf
jnp
rcrb
xchg
cmp
xchg
dec
daa
out
push
sub
xchg
mov
dec
mov
out
mov
rclb
lahf
pop
push
das
jbe
sub
adc
idivb
mov
push
mov
in
test
iret
xor
jle
mov
xchg
mov
mov
in
lret
push
cmpsl
mov
rol
fwait
push
mov
xchg
fdivs
icebp
imull
mov
lret
jl
outsl
out
repz
or
jg
xchg
inc
idivb
loopnew
ficoml
cwtl
sbb
xor
pop
pop
xor
int3
sub
inc
push
add
ret
sub
outsl
adcb
stos
insb
gs
insl
jb
dec
xor
pushf
or
int3
insb
fmulp
jmp
mov
sti
or
and
xor
outsb
cmp
pop
int
mov
jecxz
fdivl
ljmp
xchg
adc
sub
mov
xor
loopne
mov
sub
dec
cwtl
arpl
dec
insl
ds
xchg
dec
outsb
sahf
mov
call
sub
hlt
add
xor
pop
mov
mov
stc
or
push
into
call
cmpsl
xor
clc
sub
fnstenv
out
jnp
add
test
cli
push
pop
and
inc
sub
nop
adc
in
pop
out
mov
mov
jno
mov
sub
mov
mov
or
inc
add
outsl
jbe
jne
mov
or
sbb
inc
and
stos
hlt
rorl
loopne
push
sarb
nop
fs
mov
data16
test
xchg
pop
mov
and
mov
std
enter
fdivrs
lds
addr16
xchg
int
cmpsb
mov
ds
or
dec
test
fnstsw
mov
mov
push
faddp
mov
pop
frstor
jmp
daa
test
push
pop
js
jmp
xchg
xor
or
sbb
sbb
push
sbb
pop
enter
testb
sbb
incb
xchg
adc
shll
cmc
int
div
jae
xor
mov
fwait
sub
divb
jmp
jbe
dec
in
jl
outsl
out
in
mov
dec
dec
jmp
sahf
lock
shlb
mov
ds
and
popf
out
frstor
loop
loop
adc
es
mov
andb
shlb
push
in
lret
pop
dec
repz
xchg
loop
pop
rep
and
xchg
adc
dec
test
xor
std
xor
dec
xchg
jns
cwtl
arpl
or
mov
outsb
mov
fcoms
sbb
dec
dec
cmp
shll
shrl
pushf
mov
stos
add
xlat
xchg
adc
repz
or
nop
sbb
sti
inc
lock
fnsave
outsl
bound
ss
xor
not
jnp
or
out
lock
pop
les
in
imul
cli
hlt
stc
nop
xor
bound
daa
jl
mov
or
xor
repz
lcall
push
shlb
push
and
mov
push
add
test
iret
pop
mov
cmp
int
pop
mov
push
dec
add
add
popf
movsb
push
cmpsl
das
pop
ss
cmp
jo
and
ret
mov
sbb
or
fwait
push
ret
add
outsl
scas
and
sarb
xor
fisttps
mov
andb
push
ljmp
or
xor
shlb
leave
mov
pop
lret
ret
je
jae
out
xor
or
mov
xchg
sub
mov
ss
dec
lock
out
and
pop
std
mov
pop
xor
mov
xchg
adc
hlt
insb
push
mov
fisttpll
int
pop
outsb
pop
sub
xchg
fmull
jb
jae
pop
mov
shrl
aaa
add
lds
leave
cmp
mov
cmpsb
xor
jno
into
cmp
jge
sub
jnp
lahf
mov
loop
pop
pop
test
inc
sti
inc
push
pop
sub
insl
sbb
mov
ret
jg
mov
jbe
imul
fld
and
jbe
mov
mov
jo
xchg
mov
movsl
flds
lcall
add
lock
dec
cmpsl
jae
mov
mov
jns
pop
aas
or
xor
imul
outsl
dec
iret
stos
push
aam
push
mov
or
mov
shl
hlt
pushf
sahf
int3
mov
inc
inc
cmc
ret
mov
sbb
dec
xchg
bnd
push
pushf
sti
mov
and
mov
into
sbb
scas
pushf
push
mov
xchg
arpl
cltd
ret
mov
in
test
fimull
popf
das
pop
mov
out
into
test
jle
stos
pop
int3
imul
mov
jno
lcall
push
pusha
and
mov
je
lcall
cmp
repz
mov
pop
das
adc
jno
outsl
ret
push
sbb
jg
add
inc
daa
imul
jg
shl
sub
adc
xchg
pop
lods
mov
rorl
lret
mov
cltd
in
loope
inc
sbb
push
cmp
xchg
jg
mov
pop
mov
sub
sub
or
popf
cmpsl
push
mov
bound
movsl
jl
jnp
adc
push
ljmp
and
js
sub
or
dec
enter
dec
je
inc
cmp
jnp
scas
push
andl
jo
movsl
or
jns
push
cmp
pop
adc
repnz
mov
push
pop
jge
xchg
or
loopne
push
push
sahf
lcall
pop
push
leave
mov
outsl
sbb
hlt
fmull
shll
sub
fsub
rcll
pop
adc
sarl
in
mov
jp
and
sub
adc
jp
mov
and
imul
insb
movsb
fwait
jl
lds
clc
jo
test
shr
cmp
sbb
add
xchg
mov
out
jnp
movsb
cmp
sbb
jbe
inc
test
lcall
lret
enter
sti
xlat
dec
call
hlt
dec
and
cmp
pop
and
shrl
pushf
push
arpl
push
sub
mov
mov
aad
addr16
xorb
clc
std
test
jecxz
lcall
xchg
add
jmp
cmp
cmp
sahf
xchg
int
cmpsb
jns
scas
mov
mov
jmp
mov
inc
sbb
jle
mov
pop
mov
mov
loopne
daa
add
loop
push
movsb
or
lods
cmpsb
push
clc
insl
int
or
pop
insl
aad
sbb
sub
pop
or
cmp
test
xor
inc
mov
insb
test
ljmp
pop
ss
insl
inc
repz
daa
sub
cltd
push
ret
mov
loope
and
clc
push
inc
ds
and
inc
xchg
test
mov
loopne
pop
rcrb
das
int3
iret
jge
sbb
pop
jo
sbb
lahf
mov
addb
push
iret
sub
sbb
out
imul
divb
not
pop
push
adc
lods
repz
jmp
pop
lret
inc
lahf
mov
out
int
mov
lret
xabort
push
inc
xchg
mov
cmpsl
shr
hlt
mov
mov
jnp
jbe
mov
dec
lret
xchg
sbb
cld
xlat
add
test
jge
movsl
adc
xor
out
sub
sbb
or
lea
inc
movsl
mov
jle
xlat
xchg
fsubrp
out
fildll
mov
mov
adc
test
ds
push
stos
dec
pop
sbb
fcmovu
add
negl
int3
pop
ficomps
jo
mov
repnz
xor
dec
scas
ja
mov
and
lcall
movsb
aam
in
or
out
dec
push
js
or
fstps
dec
dec
js
jge
ret
sub
dec
mov
ja
push
nop
daa
pop
and
push
jl
inc
xchg
cmpsb
pop
lods
xor
mov
das
outsb
into
pop
push
sub
fstl
pop
lds
dec
inc
fwait
mov
xchg
xchg
test
dec
push
adc
add
stc
rolb
repnz
mov
lahf
inc
add
insb
std
push
in
pop
pusha
mov
shr
jns
movb
sub
and
arpl
inc
int3
jnp
push
fnstcw
leave
out
cld
mov
js
data16
mov
in
icebp
lock
rcrl
sub
cmp
jl
fcom
pop
movsb
ret
in
in
jecxz
out
push
or
add
jnp
push
xchg
push
sbb
inc
sahf
dec
test
pop
aad
loopne
xchg
das
notb
cli
xor
pop
iret
push
xlat
jl
pusha
pop
xchg
mov
pop
add
xchg
ficomps
cwtl
inc
xchg
out
sti
fsubrl
xchg
test
dec
outsl
fisubrs
dec
xchg
repnz
iret
and
inc
mov
dec
sub
aam
adc
outsl
mov
and
arpl
mov
jo
daa
out
jg
xor
xor
dec
insb
and
sahf
iret
mov
jne
inc
push
jp
popa
enter
les
int3
mov
es
sti
pop
add
in
call
ficoms
xchg
mov
add
sbbb
dec
push
dec
fnstsw
pusha
dec
inc
test
or
inc
pop
jae
scas
mov
or
push
jecxz
adc
or
pop
stos
inc
test
cmpsl
sub
mov
add
mov
aam
int3
mov
lea
add
outsl
lods
insb
fisubrl
repz
test
cltd
leave
adc
lret
movsb
push
ret
jnp
inc
inc
jg
push
mov
sbb
pop
stos
cmpsl
inc
testb
dec
outsb
mov
pushf
jg
scas
adc
in
or
pushf
mov
sub
sub
push
clc
pop
dec
pop
aad
loope
lods
xchg
jge
icebp
mov
dec
test
mov
xchg
ret
popf
and
hlt
adc
add
data16
xor
in
add
das
lods
xchg
mov
xchg
and
sbb
pop
lock
pop
mov
int3
mov
add
cmc
pop
test
cwtl
out
es
cmc
pop
jb
pop
mov
lock
xor
sbb
aam
sbb
popl
ficompl
push
out
sahf
enter
ss
sbb
sbb
cmpsl
sbb
inc
das
dec
les
cmp
jg
mov
or
mov
dec
dec
cmp
cmp
inc
push
push
in
out
aaa
loope
stc
jno
outsb
rcrb
pushf
push
push
popa
movsb
xor
mov
insb
pcmpgtb
pop
inc
mov
jle
jo
insl
int3
fwait
add
jae
movsl
xor
arpl
push
cmpsl
scas
mov
es
notb
jo
sub
iret
mov
xor
jno
and
leave
push
dec
lahf
pop
inc
fmull
push
addr16
loop
fimuls
lods
and
lahf
lods
or
ja
push
in
call
add
pusha
xchg
mov
sbbl
and
outsl
imul
push
mov
int3
or
mov
mov
jl
rcrl
ljmp
fsts
or
xor
sub
fdivrs
xacquire
pushf
inc
sbb
push
pop
popa
dec
aaa
push
lds
dec
lcall
mov
sbb
push
fs
and
pushf
movsl
leave
sahf
fwait
pop
or
push
push
xor
pop
fadd
mov
sub
mov
popf
add
lret
pop
adc
xchg
xor
inc
jl
jnp
loopne
mov
mov
movl
push
fucom
out
test
push
mov
lret
rcrb
int
push
cwtl
sbb
nop
lods
ljmp
xchg
push
sub
into
insb
xor
jae
in
daa
push
test
std
pop
mov
xchg
xchg
sahf
sbb
leave
pop
lcall
dec
and
in
lret
jl
lret
mov
cs
inc
xchg
mov
mov
not
pop
cmp
imul
ja
push
adc
shlb
jmp
jmp
xchg
dec
cwtl
xor
stc
mov
mov
lods
clc
pop
mov
das
xor
pushf
xor
inc
ja
sub
scas
dec
xor
clc
push
sub
cmpsl
je
ds
movsb
ds
icebp
and
sbb
cmpsl
scas
jp
lds
sahf
jno
test
ficoml
and
mov
add
push
mov
dec
cmp
add
cmpsl
std
jg
orb
xchg
imul
ret
imul
sub
pop
inc
jle
lods
mov
and
mov
mov
mov
sti
cmc
mov
jecxz
jecxz
popf
into
roll
lods
cmc
test
std
or
subb
mov
xlat
jecxz
mov
push
shll
xor
repnz
jecxz
jo
rorb
cld
mov
notl
clc
push
in
adc
push
cmp
add
cmp
and
pop
insb
pop
mov
jecxz
cmpsl
js
outsb
sub
mov
inc
jae
scas
or
inc
sub
sub
pop
xchg
test
or
inc
mov
fs
mov
xchg
sbbl
push
lds
push
das
add
cmpsl
mov
pushl
mov
ljmp
clc
pop
and
repnz
ss
jmp
push
xchg
fnstsw
loopne
fwait
add
and
pop
cmp
xchg
mov
insl
sbb
cmp
je
mov
jne
pop
icebp
or
xor
lods
adc
cs
pop
inc
pop
jle
sarb
mov
dec
dec
lods
sahf
fiadds
xor
mov
repz
sbb
icebp
lods
sub
aas
sahf
movsb
lret
pop
inc
in
and
movsl
notb
or
das
and
jb
jl
jne
aad
cmpsb
mov
sbb
sbb
dec
insb
daa
push
ljmp
and
push
daa
push
sub
mov
xor
xchg
sub
sarl
xchg
xchg
cmp
sub
inc
negb
mov
cwtl
pop
fisttpll
out
xchg
pop
test
pusha
iret
sub
add
and
adc
hlt
out
cmp
or
imul
gs
adc
ret
bound
and
bound
mov
nop
sti
cmc
push
out
in
jge
pop
cmp
xor
repnz
mov
inc
mov
mov
mov
inc
xchg
clc
dec
add
or
sub
xchg
jp,pn
ja
adc
jg
out
adc
pusha
inc
sub
imul
push
mov
xchg
shlb
jnp
ljmp
lea
repnz
cmc
arpl
scas
cmpsl
test
int3
push
and
fs
inc
xor
inc
sub
ljmp
pop
cmp
ret
adc
sbb
cwtl
fwait
and
jge
sub
jg
cmc
xchg
add
inc
fs
int
das
or
sti
push
jl
or
jb
iret
add
sbb
cwtl
movsl
fcmovne
in
rorb
fs
cli
jbe
xchg
jge
inc
inc
mov
jge
int
mov
rorb
mov
sbb
stos
jmp
push
loope
sbb
stc
xchg
es
xchg
dec
push
jecxz
and
sbb
mov
lods
insb
lret
insb
and
pop
pop
mov
dec
mov
mov
mov
shrl
leave
mov
lret
cltd
in
aam
out
dec
push
es
test
in
stos
loopne
mov
pop
pop
sub
jae
lcall
mov
outsl
insl
and
das
jnp
jmp
xor
dec
sbb
or
inc
int3
pop
cltd
dec
xchg
jno
xchg
ljmp
cmp
cmp
add
mov
aas
mov
or
or
gs
lahf
mov
xchg
dec
hlt
bound
sarl
pop
inc
iret
pop
and
je
xor
xor
dec
shrl
xchg
adc
or
xchg
xor
outsl
fistpl
lock
std
pop
mov
xor
add
test
aas
in
and
mov
mov
push
pop
cmpsl
xchg
mov
loop
out
out
jbe
inc
mov
int3
mov
gs
xchg
pusha
xor
push
jg
push
push
sbb
jge
hlt
into
xor
imul
xchg
pop
or
shl
dec
rcll
mov
add
adc
sbb
mov
scas
mov
das
lahf
subl
mov
insl
js
shl
jp
adc
cwtl
test
xchg
cmpsb
dec
pop
xchg
stos
xchg
xchg
idivl
inc
gs
lret
inc
aad
sbb
dec
mov
mov
in
sbb
inc
add
pop
lea
mov
nop
loope
adc
mov
cld
out
or
enter
cmp
sbb
mov
cmp
jno
mov
outsl
mov
stos
and
jg
add
out
out
cltd
shlb
and
add
out
jns
jle
fnstsw
div
jmp
fists
sub
jg
inc
test
sti
xchg
jbe
dec
dec
outsb
push
das
test
pop
out
lret
sub
dec
dec
or
and
inc
arpl
sub
lock
dec
pop
dec
xchg
aas
call
icebp
xor
jmp
sbb
data16
add
xchg
pop
xchg
sbb
ljmp
imul
push
sub
lods
int
ja
mov
or
icebp
cmc
and
loop
aaa
mov
sbb
pusha
bound
sbb
ds
sbb
arpl
imul
pop
mov
xor
push
stc
inc
dec
mov
jmp
pop
cmpl
mov
cld
jno
cli
stc
das
mov
jns
pop
push
leave
inc
xchg
jg
xchg
out
xchg
jmp
pop
int
mov
ds
pop
out
adc
sub
mov
cmpsl
jl
xlat
xchg
pop
fsubrl
inc
and
int3
adc
je
orb
push
push
addr16
nop
andl
orl
sub
mov
aaa
add
test
daa
ja
aas
dec
sub
sti
cld
inc
and
mov
jmp
adc
push
int
add
jg
mov
pop
dec
int3
xor
or
mov
mov
icebp
sarb
repz
push
mov
push
push
je
xor
ret
ss
dec
mov
cmp
pushf
jmp
repnz
fbld
mov
jl
sub
imul
pop
rolb
iret
mov
adc
sbb
jbe
sub
aam
daa
insl
push
sub
int3
pop
dec
sarl
mov
xchg
hlt
xor
pushf
aam
xchg
cmpl
add
in
ret
xchg
jno
jns
xchg
loopne
into
vdivpd
aas
cli
push
sub
or
imul
enter
iret
sub
sbb
pop
daa
hlt
push
xor
out
scas
mov
cltd
sub
testb
and
mov
enter
or
inc
push
xchg
push
bound
sub
clc
adc
ss
and
fistpl
call
test
and
adc
pop
mov
jecxz
xor
roll
inc
mov
or
or
jle
lcall
jne
sbb
dec
pop
test
insb
repnz
adc
or
addr16
adc
fadds
mov
jp
sbb
lahf
call
jnp
cmp
xchg
xchg
jp
push
inc
push
aas
adcl
fsubs
ljmp
xor
and
push
sbb
or
mov
aad
mov
fadds
mov
hlt
xor
loop
jae
cmp
xchg
push
mov
sub
jl
and
jg
xchg
aas
rcll
xchg
insl
cmc
iret
mov
push
xchg
rorl
icebp
sbb
jae
cltd
clc
pop
sub
repnz
or
sub
mov
iret
repz
xor
enter
dec
mull
sub
and
sbb
shll
imul
insb
mov
inc
repnz
ret
mulb
shrb
mov
inc
addb
jecxz
sub
sub
xor
cs
shl
mov
mov
fistps
inc
adc
pop
lods
loope
outsb
fidivrl
dec
pop
call
xchg
scas
clc
mov
int
cmp
movsb
push
rolb
rcrb
fbstp
mov
test
rorb
cmp
sub
cli
popa
push
cmpsb
out
xor
jl
aad
pop
mov
jno
mov
cmp
xchg
sbb
add
mov
call
lds
or
lcall
rorl
test
fmuls
pop
lock
pop
mov
sbb
fs
or
movsb
xor
mov
test
sar
popa
push
dec
je
pop
ror
cmp
sahf
pop
and
cmp
popf
popf
leave
xchg
mov
dec
and
subb
xchg
filds
pop
fwait
dec
repz
push
js
and
inc
into
les
push
mov
cli
push
jb
pop
pop
imul
dec
cltd
pop
clc
jae
push
das
adc
in
cmpsb
jp
push
push
mov
mov
xor
pop
je
repz
fisttpll
in
or
js
out
add
enter
outsb
fs
jbe
pop
xchg
fucomp
mov
imul
dec
push
mov
ljmp
push
xchg
fwait
mov
cs
or
les
dec
pop
rcrl
or
pop
jns
xchg
outsb
fwait
leave
in
mov
mov
jo
mov
addb
cld
lcall
mov
or
xchg
push
mov
shlb
data16
movsl
inc
lret
into
loop
sbb
in
mov
test
fcompl
push
mov
jmp
fisubs
fwait
push
xchg
dec
adc
adc
neg
lea
push
adc
test
subl
cmp
dec
push
inc
movsl
sbb
mov
jbe
iret
subl
inc
lcall
xor
dec
push
pop
pop
pop
adc
pop
cmp
dec
push
shlb
sbb
xchg
cwtl
std
dec
push
inc
and
xchg
inc
test
test
inc
loopne
rcll
mov
jge
and
push
push
sub
rcr
or
add
stos
fyl2x
inc
lods
insb
lods
mov
daa
jmp
lock
je
ret
fabs
shl
xchg
add
ret
lods
negb
in
fists
jno
fcoml
and
jne
and
ja
iret
jp
xor
sbb
jb
pop
mov
fs
adc
push
cmp
or
pop
inc
lret
int3
add
mov
mov
lea
rcrl
jmp
lcall
fistpl
mov
add
decl
fdivrs
scas
sbb
sbb
in
push
into
mov
pop
cmpsb
xor
pop
mov
lret
inc
scas
sbb
scas
xor
sbb
in
mov
pop
cli
add
and
cmp
xchg
sahf
mov
push
dec
mov
push
pop
mov
jnp
mov
xor
dec
or
xor
fmul
stos
push
mov
inc
inc
mov
aas
pusha
icebp
mov
and
xchg
sbb
icebp
popa
ficoms
inc
jno
mov
cltd
inc
aad
and
aam
dec
dec
cmc
dec
hlt
dec
cwtl
mov
dec
and
dec
and
xchg
data16
loopne
mov
xchg
cli
mov
ret
js
ja
jmp
sub
sti
call
dec
sub
cli
imul
pop
pop
shr
pop
mov
cmc
mov
addl
out
mov
mov
mov
in
mov
pop
insl
sub
shlb
jae
push
call
in
mov
fildll
pop
and
dec
pushl
int3
icebp
add
ret
mov
les
fistps
add
mull
cmp
imul
jmp
fnsave
call
leave
sbb
inc
push
xchg
jnp
lret
jae
xor
test
xchg
out
cmp
pop
mov
nop
movsb
inc
sbb
popf
rorl
inc
dec
xchg
scas
push
rolb
mov
dec
mov
rolb
inc
cmp
in
outsl
cmp
movsl
lea
mov
adc
out
pop
dec
sahf
mov
push
push
pushf
inc
push
push
jle
lods
pop
cmp
scas
aad
jg
jo
cmp
cmp
add
cs
jno
jmp
iret
jbe
ficompl
mov
es
push
aad
inc
sub
insb
mov
mov
xor
pop
and
mov
adc
fistl
jns
cltd
outsl
xchg
js
push
xchg
mov
push
add
gs
push
adc
and
add
pusha
divl
mov
add
xchg
add
add
push
cmp
arpl
or
jecxz
dec
jecxz
mov
xor
push
adc
bound
stc
into
int
iret
push
dec
fdivl
mov
aam
out
sbb
mov
js
fcmovne
and
jecxz
dec
inc
adc
dec
mov
fnstcw
stos
arpl
popa
add
mov
mov
sbb
loopne
xchg
dec
xor
outsl
sub
pusha
lret
inc
or
and
pop
lock
jle
mov
ljmp
adc
fs
sbb
jp
sbb
inc
cmp
push
enter
in
adc
into
xor
xchg
cmp
push
iret
les
xor
imul
cmp
mov
cmp
loope
les
xchg
stc
add
mov
dec
adcl
adc
pop
pop
addr16
ficoml
jl
xchg
ret
push
and
dec
pop
iret
bound
sub
jg
inc
jne
insl
es
leave
ss
sub
push
push
push
insb
push
add
lret
adc
mov
rol
xchg
fdivs
dec
movsl
lret
cld
jle
lods
lock
mov
jbe
push
inc
add
jo
dec
and
jns
push
pop
sub
dec
add
pop
mov
and
dec
push
jbe
cmp
push
test
sbb
les
out
xor
out
loope
or
test
dec
pop
jmp
in
xchg
mov
inc
inc
sbb
leave
mov
adc
xchg
in
in
cld
push
mov
mov
flds
and
fsubs
jbe
test
mov
sub
inc
push
loope
sarl
js
dec
roll
jns
mov
add
jg
bound
pop
pop
imul
femms
vpshlw
pop
dec
cltd
test
mov
call
hlt
or
lods
dec
roll
pop
loope
lcall
pushf
pop
cmc
in
sub
movsl
arpl
rcrl
ret
push
clc
adcb
dec
inc
adc
push
test
leave
dec
loop
add
push
xor
loope
mov
ja
cmp
jbe
data16
push
leave
loop
xchg
es
dec
dec
cs
mov
cltd
shlb
gs
jbe
mov
push
push
fs
adc
sub
sbb
nop
jmp
lahf
mov
sbb
dec
xor
iret
test
je
jae
jle
rorb
ja
and
xchg
fldl
aas
out
xchg
packsswb
sahf
in
sbb
ret
or
in
mov
mull
test
leave
push
add
fwait
out
xor
mov
mov
mov
jle
fs
mov
outsb
jns
sbbl
fs
xor
roll
xor
scas
xor
jmp
dec
cmp
not
sbb
sahf
es
pop
or
mov
xchg
mov
jecxz
mov
jl
rorb
jmp
into
in
inc
addr16
mov
mov
or
sar
cmpsb
rcrl
inc
mov
shrb
into
add
sub
aas
push
pop
xor
xchg
scas
imul
pop
mov
jl
or
inc
or
push
xchg
sub
mov
sub
jae
jp
dec
fidivrl
out
lds
insl
jns
out
lods
mov
dec
xchg
mov
icebp
sbb
test
fidivrs
frstor
fwait
es
test
decb
push
pushf
xor
add
pop
movsl
cwtl
lahf
ret
clc
xor
cli
lods
lcall
cmpsl
loop
lods
xchg
push
cmp
imul
and
jbe
fiaddl
xchg
insb
cmp
xchg
jmp
sbbl
add
or
popa
mov
int
aam
lret
push
xchg
xchg
mov
inc
fs
cmp
subb
push
xor
je
sub
aaa
movsl
sbb
sub
mov
pop
pop
ret
aas
lea
xchg
mov
push
repnz
and
xchg
mov
xor
fwait
jnp
lods
and
cld
cmp
pop
pop
divl
fldt
mov
fldl
es
nop
mov
inc
inc
imul
dec
push
xor
mov
push
loopne
inc
insb
xor
aas
out
mov
push
cmc
sbb
push
add
jne
xchg
add
mov
inc
stc
pop
cs
test
xor
repz
lret
xchg
mov
sbb
and
cmp
jmp
movsl
inc
xor
test
pop
int3
ja
push
ret
lock
mov
sub
fdivrl
cmp
jmp
cwtl
sub
roll
xchg
jmp
push
ret
call
add
xchg
inc
rcr
jle
cmp
cltd
xor
lds
aad
pop
call
sub
dec
inc
movsb
xchg
push
jns
pop
jae
lods
popa
mov
mov
bound
mov
xchg
xor
shlb
in
popa
or
jg
adc
push
out
push
leave
lods
push
es
push
lds
aaa
icebp
mov
gs
fiadds
sbb
push
inc
shrb
inc
cltd
cwtl
push
push
mov
or
shll
adcl
or
sbb
sti
mov
popa
add
sbb
imul
and
jmp
out
inc
sub
cld
shll
adc
in
insb
adc
or
cs
cmpsb
mov
pop
in
sbb
rolb
lods
les
jnp
subb
mov
mov
xchg
fs
jbe
popa
inc
fistl
xchg
das
jnp
cmp
ds
sbb
out
in
imul
div
mov
stos
add
xchg
cld
cltd
sbb
fmull
dec
xor
icebp
aad
hlt
inc
enter
add
in
xchg
pop
fwait
ljmp
loopne
xlat
jno
jo
lods
inc
lods
popf
or
cli
or
adc
stos
mov
lret
xchg
xchg
sbb
mov
jmp
push
pop
xchg
divb
int
fists
stc
mov
or
nop
and
lahf
pusha
or
aam
in
and
mov
pop
inc
int3
mov
inc
imul
ret
sub
xlat
aad
icebp
es
mov
cmp
dec
hlt
addr16
scas
lret
inc
adcb
test
dec
rcl
sbb
mov
gs
scas
xchg
cmc
test
push
adc
push
or
xchg
lret
lret
cmp
ret
mulb
sti
pop
mov
cmp
imul
inc
sahf
test
test
roll
lea
insb
out
xchg
sub
inc
cmp
scas
pop
push
lock
lds
cs
stos
loope
jne
popa
push
lds
fsubrl
andl
jle
push
xor
add
lock
js
stos
cli
jnp
cmp
out
fstp
in
cmp
mov
xor
xlat
cli
insb
push
inc
add
adc
xor
dec
stos
ljmp
cmp
gs
cmc
and
pop
rcll
and
jne
adcl
mov
pop
mov
push
popf
fcmovnu
roll
in
xchg
fidivrl
mov
xchg
mov
shlb
push
scas
add
stc
fbld
cmp
pop
adc
outsb
mov
push
push
data16
add
jp
mov
inc
loop
xorb
add
ja
cmc
pushf
dec
cs
arpl
adc
mov
jl
daa
repnz
in
fcmovnb
sbb
pop
mov
xor
aas
je
loopne
aaa
aad
and
pushf
shrb
aam
aad
negl
add
adc
lea
popa
cmc
jo
jle
dec
inc
int3
hlt
mov
jae
rcl
mov
adc
xor
dec
xchg
and
sub
popa
pop
lds
cmp
inc
in
cmp
fisubs
repz
jmp
cmp
out
lahf
lea
xadd
pop
aaa
fmul
pushf
ljmp
shll
in
gs
testb
sti
insb
jo
xor
subb
mov
inc
out
and
lahf
mov
dec
out
push
insb
pop
add
sbb
inc
push
sub
hlt
add
dec
in
mov
cmp
cmp
jne
ljmp
xor
dec
mov
mov
insb
pop
notb
or
data16
loope
aaa
pop
fs
mov
lret
test
rcrl
jg
js
adcl
inc
inc
xchg
gs
enter
repz
test
orl
cmc
push
push
or
push
out
sub
adc
into
mov
jns
jmp
jnp
push
sbb
pushf
enter
icebp
dec
enter
sub
mov
int
test
ret
xchg
cs
scas
xchg
xor
mov
xlat
and
adc
sub
push
imul
jo
push
mov
std
int
mov
aaa
push
pusha
mov
inc
aas
sbb
call
lods
inc
inc
cmp
pop
jl
fisubl
xchg
in
out
fsubl
shlb
jmp
pushf
cltd
xor
sbb
js
loop
test
pusha
inc
push
add
shl
or
lods
xchg
inc
xchg
sub
push
sbb
jge
inc
fmull
mov
insb
aam
cmp
pop
or
popa
repnz
bound
xchg
rcrl
fld1
sbb
push
xchg
mov
adcb
lds
andb
out
gs
adc
aam
mov
push
cs
or
jge
lds
lds
fcomp
lds
mov
cmp
push
adcl
jmp
lock
fs
cmp
add
inc
lods
xor
push
mov
dec
loope
fs
es
dec
imul
jg
fldt
stc
mov
mov
jbe
stos
adc
add
pop
push
into
lcall
jbe
pop
mov
sti
jb
in
dec
fimuls
add
push
xor
sbb
jb
inc
imul
inc
adcb
dec
xchg
xor
jl
loope
xor
dec
pop
test
dec
push
andl
add
pop
addb
in
push
push
popa
jb
in
insl
ljmp
mov
gs
push
imul
mov
rcll
add
mov
js
dec
cltd
mov
jp
mov
gs
rorb
lret
mov
loopne
sahf
popa
mov
call
or
xchg
push
scas
out
lcall
adc
int3
jno
cmp
stos
or
test
and
add
push
sbb
xor
hlt
shrl
cmpsb
lods
sbbb
xor
dec
loop
loop
sbb
xor
cwtl
xchg
push
jae
cmpl
and
push
mov
in
xchg
xchg
cmc
das
add
xor
imul
scas
push
cld
sub
mov
movsb
and
test
scas
inc
inc
add
stos
mov
lds
lret
sbb
fldt
insb
scas
xor
lds
inc
inc
or
and
mov
dec
mov
dec
xchg
fdiv
daa
mov
mov
std
and
xchg
cmp
push
cmp
rcll
mov
psraw
jmp
adc
xchg
cmp
fisttpl
dec
enter
adc
lret
or
dec
pop
in
adc
add
loope
mov
mov
test
mov
sbb
sbb
cmp
pop
fwait
push
cmpsb
lret
xor
add
sahf
pushf
testl
aas
mov
xor
in
jle
mov
adc
imul
add
cmp
sbbb
mov
adc
pop
or
popf
mov
pop
in
ret
adc
mov
cmp
mov
pop
push
sub
cmp
rcrl
xlat
push
mov
sti
mov
js
xchg
mov
add
divb
dec
add
pop
inc
fs
cmpsb
out
mov
inc
mov
xchg
push
or
xchg
lret
jg
test
test
fimuls
dec
jo
xor
xor
in
jno
test
dec
xchg
inc
clc
and
sarl
outsl
lret
inc
and
mov
pop
ds
cmp
cli
push
xlat
cmp
fmull
xchg
push
dec
mov
add
ret
jl
sti
adc
movsb
add
jne
xlat
sbb
xor
popf
lods
addb
ficoml
pusha
sbb
pop
sahf
mov
stos
jo
int3
push
push
clc
cli
jmp
add
jle
mov
adc
inc
adc
out
adc
test
lds
add
push
xchg
aaa
addb
inc
xchg
push
shrb
inc
or
clc
push
push
jge
fisttps
out
xorl
sbb
nop
test
mov
fsts
push
stos
cmpsl
movsb
ret
outsb
cmp
fcomps
dec
xchg
repz
xchg
cmp
loopne
push
test
frstpm(287
add
icebp
roll
pop
ret
adc
imul
dec
sti
mov
fisubrs
add
ss
fisubl
inc
les
xor
jge
sbb
mov
mov
dec
or
jmp
push
int
push
mov
mov
dec
movsb
stc
sub
add
sub
lea
es
jp
icebp
xor
push
or
xor
mov
push
xor
das
xchg
adc
mov
pop
repnz
or
mov
sbb
pop
out
push
push
sbb
fidivs
adc
dec
inc
push
fsubrl
enter
daa
lods
or
mov
xchg
dec
mov
xchg
dec
rorl
in
pushf
jle
dec
loope
xchg
pop
jbe
adc
pop
and
setnp
imul
sarb
pusha
jb
push
push
sub
mov
rcrl
sbb
xor
shufps
add
lahf
sub
push
ss
popf
sbb
hlt
sub
xchg
imul
jns
xchg
lea
repnz
cmpsb
cltd
lea
xchg
push
shll
stos
outsb
mov
jae
push
inc
ret
pop
ljmp
mov
push
sub
je
xchg
xchg
add
xchg
add
out
push
bound
push
lahf
xchg
mov
test
lea
jle
push
pop
inc
xchg
mov
push
and
mov
or
inc
pop
pinsrw
loop
jb
fsubrl
loop
cmp
and
stos
mov
icebp
fdivs
jmp
dec
adc
test
sub
inc
jge
jo
mov
es
or
xor
nop
sub
dec
jae
out
imul
imul
dec
fistpl
or
jns
js
in
imul
bound
pop
std
adc
cmp
xor
imul
mov
add
lea
iret
pop
push
ficompl
add
out
repz
test
repz
stos
dec
sub
in
or
and
fwait
xor
rcrb
sub
inc
mov
mov
mov
stos
sbb
pop
insl
repnz
sbb
or
leave
sbb
outsl
jmp
sub
repz
or
adc
cmp
cld
cs
or
jns
push
push
inc
mov
cmpsl
inc
mov
int3
jge
jecxz
lds
dec
or
fisubs
dec
out
mov
mov
sbb
bound
mov
jbe
repz
or
and
notb
into
int
jns
push
daa
shll
dec
mov
sti
xchg
cld
adc
inc
or
and
or
xor
add
mov
outsl
dec
push
dec
sbb
cwtl
fcmovnbe
shrl
jmp
and
nop
sbb
or
stos
std
jno
sbb
ret
push
and
push
out
mov
or
mov
scas
popf
cmp
push
aad
ret
ljmp
push
hlt
aas
adc
pusha
sub
mov
jl
inc
mov
xchg
stos
mov
sub
jmp
imul
lret
add
std
mov
int
mov
popf
mulb
jns
mov
mov
jmp
pop
mov
inc
or
mov
adc
pop
int
insb
push
aam
push
int3
add
pop
inc
cmpsl
add
pxor
scas
popf
or
in
insb
in
arpl
and
shll
je
cmp
lret
xchg
adc
inc
xor
popa
gs
jno
lock
mov
out
call
sbb
roll
inc
mov
push
sub
dec
mov
out
loopne
mov
jecxz
pop
jno
addr16
in
fisttpl
pusha
ja
xlat
inc
mov
mov
std
and
xchg
push
add
out
push
mov
ja
dec
pop
sbbb
add
and
and
xor
daa
stos
jb
adc
add
loopne
int3
sub
jno
stc
lock
das
jmp
lock
sbb
loopne
call
jnp
mov
stos
mov
pop
aad
xor
ja
sbb
popf
lods
pop
es
out
xchg
mov
mov
popf
outsl
xor
pop
or
xor
and
orb
adc
sbb
add
lods
inc
into
mov
rcrl
pop
jnp
jl
fld
and
xchg
inc
daa
hlt
cmp
lds
push
add
dec
cmp
rcll
mov
sub
pop
aam
jne
int
add
cmp
push
and
test
outsb
orb
inc
jge
or
outsb
mov
mov
dec
mov
add
fisttps
dec
jmp
leave
sbb
or
pop
ss
adcb
orl
arpl
inc
data16
movsb
sub
jle
enter
xchg
pushf
sbb
outsb
sahf
std
cltd
fst
es
adc
or
add
sub
push
cmc
shlb
aad
imul
dec
out
scas
fwait
pop
aas
mov
jno
dec
sarb
mov
or
cli
and
fmulp
xlat
adc
enter
jno
push
sub
push
push
xchg
lds
int3
stos
fldl
arpl
sti
mov
fs
mov
ds
insb
into
loopne
push
in
sahf
pop
mov
testb
and
pusha
in
jle
add
and
pushl
and
xor
outsl
lret
ret
loopne
cmp
add
test
pop
rolb
movsl
xor
push
jmp
pop
rcr
clc
jmp
push
mov
push
mov
push
je
sbb
adc
push
stos
jb
mov
fstpt
inc
mov
xchg
jmp
adc
std
adcl
repz
xchg
inc
gs
add
jmp
outsb
into
icebp
out
int
ret
cmc
and
pop
daa
mov
stc
mov
jmp
xor
mov
movsl
sahf
mov
insl
adc
sahf
add
push
test
in
add
sbb
das
pushf
mov
cmp
push
mov
sbb
aad
fsubl
push
pop
incb
repnz
xchg
xor
rcr
sub
aad
in
mov
pop
ss
fstpl
dec
xor
lods
pop
decl
imul
push
mov
pop
mov
mov
dec
out
roll
mov
dec
pop
leave
ljmp
mov
rclb
lcall
jo
xchg
frstor
adc
cwtl
mov
outsb
scas
pop
jne
das
and
add
gs
add
or
xchg
popf
mov
adc
mov
in
mov
test
cmpsl
shrb
aas
jbe
or
aas
repnz
mov
xchg
mov
pop
scas
pop
jmp
test
push
mov
lock
aaa
adc
fiadds
cwtl
inc
and
cmpsl
les
push
stc
aam
fists
pushf
xor
clc
dec
cs
jmp
lahf
push
adc
mov
cltd
and
mov
pop
aam
sub
or
mov
cmp
addl
sub
xor
and
xor
ret
sahf
loopne
std
xchg
dec
or
dec
jo
jl
sbb
orl
xchg
xor
dec
inc
lcall
ficomps
rorb
fidivrl
and
jb
jbe
sbb
or
fwait
test
push
out
mov
imul
int3
sarl
lret
push
je
cmp
lret
lret
jecxz
lods
mov
int3
std
cmpsl
sahf
sbb
add
inc
enter
ds
pop
jns
sarl
push
out
dec
aad
mov
sbb
xorb
sub
adc
loopne
jns
ror
loopne
out
jo
mov
daa
mov
mov
in
dec
test
insb
jno
mov
addb
lock
sbb
xchg
add
sbb
into
or
inc
imul
xor
lret
add
inc
insl
aad
fld
jecxz
in
or
mov
sub
and
mov
stos
loopne
bound
xor
pop
sbb
lods
daa
out
xorl
cmp
pop
mov
cmp
xor
jno
mov
lahf
addr16
xchg
mov
test
xchg
sbb
cwtl
xor
dec
or
dec
into
dec
insb
jmp
xor
mov
lahf
and
insb
pushf
pop
addr16
inc
lds
sub
push
ljmp
xor
in
pop
cltd
ret
fstpt
sub
mov
in
into
jecxz
test
insl
lcall
jae
sbb
add
cwtl
mov
scas
pop
daa
test
push
xchg
in
addr16
std
in
xchg
xor
sub
test
xor
imul
inc
adc
or
jno
pop
stos
pop
dec
notb
mov
dec
in
bound
ds
or
in
xor
loop
pop
leave
mov
and
addr16
mov
adc
data16
pop
lea
inc
cmpsl
add
lods
scas
sbb
js
pop
js
in
xchg
lea
call
ficompl
cmpsl
sets
inc
in
and
cmp
or
xor
ret
jmp
fcmovnu
adcl
dec
lahf
pushf
int3
outsl
push
repnz
cmp
add
out
push
sti
shrb
xor
outsl
cmpsl
xor
inc
jne
cmp
sub
push
cmp
in
mov
push
add
leave
test
push
sbb
in
popf
out
push
mov
xchg
xorl
xchg
out
loopne
shll
das
add
jne
repnz
daa
dec
out
addr16
mov
xor
out
jp
push
in
adc
push
fmuls
cmovl
movsb
ss
pop
push
ljmp
popa
mov
fisubl
fs
mov
dec
jge
jl
shlb
in
sti
push
sub
sti
js
jp
dec
adc
movzwl
lds
jns
mov
jle
mov
scas
adc
jl
pusha
add
ret
fs
mov
jg
cld
xlat
or
push
mov
and
mov
ret
lret
addr16
adc
pushf
iret
in
bound
out
dec
call
leave
sahf
jnp
das
push
ret
fidivl
jb
xlat
fcoml
aas
xor
cltd
or
test
pusha
fidivs
pop
popa
out
push
pop
adcl
aam
rclb
lock
push
mov
movsb
add
xor
mov
or
jns
in
sbb
sub
cmp
xchg
test
pop
mov
add
in
clc
push
cld
int
cmp
repz
cmpsl
repnz
stos
movsb
xor
stc
pop
lds
enter
push
jnp
rcrl
inc
push
and
push
xor
call
shl
pop
mov
into
adc
enter
jmp
popf
mov
push
push
and
je
fsubr
subb
xor
mov
xchg
fwait
notb
push
and
insb
mov
mulb
push
adc
popa
rcl
dec
dec
aad
mov
das
loop
cmp
jne
jl
fidivl
ret
xchg
sar
sar
fmull
dec
adc
push
sbb
jmp
fcoml
jmp
pop
ffreep
ja
mov
pop
jns
faddl
in
pop
es
call
jp
mov
je
xor
cmp
movsl
out
and
dec
mov
pusha
fsubrl
bound
xchg
lcall
jo
clc
xlat
adc
push
daa
sarb
rcrl
rol
pop
mov
adc
jle
aam
pop
sbb
adc
xchg
js
int
pop
pop
pop
mov
xor
or
xchg
or
cmp
stos
inc
xlat
sub
mov
popa
test
push
lock
negb
mov
mov
shlb
add
ja
push
mov
lret
scas
jmp
xchg
fdivs
insl
sbb
mov
sbb
sbbl
movsl
or
in
and
xor
push
cmp
inc
movl
xchg
sub
test
push
js
push
jae
mov
dec
rorb
cs
jmp
fwait
addr16
adc
pop
xchg
stc
icebp
jecxz
cmp
fstpt
js
std
shll
sub
mov
test
scas
jl
cmp
xor
fldenv
cld
mov
lds
inc
inc
rclb
pop
int3
or
xchg
fwait
inc
mov
stc
iret
sbb
daa
mov
jae
mov
xchg
xlat
mov
jne
mov
std
jne
pop
inc
push
sarb
ret
or
jecxz
cmc
and
and
aas
push
sub
cwtl
mov
in
outsb
addr16
repnz
xchg
xchg
mov
adc
into
outsl
mov
ret
inc
cmp
pusha
push
insb
xchg
and
and
push
xchg
dec
mov
jge
mov
loope
icebp
inc
imul
inc
and
test
jecxz
aaa
pop
call
js
ljmp
pop
mov
pop
push
icebp
push
sub
int3
or
imulb
sub
xor
or
or
hlt
xchg
repnz
add
cmpb
aam
xor
and
add
scas
shlb
pop
mov
mov
mov
mov
push
leave
out
scas
xor
xchg
cs
out
inc
inc
cmp
in
and
imull
sbb
mov
bnd
lea
cmp
ret
inc
fdivr
dec
pop
lods
mov
pop
cwtl
add
push
roll
je
sarl
dec
mov
fsubrs
jmp
icebp
add
cmovae
repz
lea
in
out
and
add
jno
xchg
je
cmp
pop
add
push
test
fwait
pusha
idivl
or
cmc
outsb
mov
outsl
test
test
in
jno
xchg
js
lods
repz
mov
jnp
int
dec
inc
cld
popa
ds
inc
stos
out
add
mov
repnz
in
test
jnp
or
mov
jmp
sbb
pop
adc
adc
aam
xchg
mov
add
mov
and
jo
or
aaa
mov
sub
lods
sbb
cmp
popf
mov
fs
mov
into
daa
xchg
outsl
jae
shl
sbb
pushf
in
add
ja
sbbb
xchg
mov
sub
sub
pop
ja
shlb
rcrl
inc
or
test
dec
mov
add
mov
cltd
repnz
cmp
std
enter
pop
xor
xor
mov
jo
push
test
adc
cmpb
mov
pop
mov
push
push
adc
cmp
es
inc
xor
push
mov
mov
inc
fnstcw
out
inc
dec
ds
pop
sbb
lock
pop
jg
into
push
jb
add
pop
cmp
fsubp
mov
stos
push
in
int3
int
lods
lret
dec
aaa
mov
pop
sbb
into
or
scas
pop
fadd
cmc
push
iret
mov
jle
lods
in
cmp
xchg
adc
mov
jge
sub
mov
mov
out
or
inc
iret
mov
mov
push
inc
xchg
sub
int3
pop
jae
movsb
loope
dec
xchg
and
sub
cmpsb
scas
loopne
cmp
test
lcall
lahf
ljmp
xchg
dec
hlt
je
mov
push
sbb
dec
cmp
les
nop
sub
mov
stos
mov
mov
in
jmp
inc
cmp
aas
xor
ficoms
jnp
sarl
sbb
data16
jl
into
pop
fimull
cwtl
leave
xor
adc
add
loope
xchg
notb
mov
and
cmp
pop
sub
stos
or
mov
xor
or
xchg
pop
lods
loopne
jge
fsubp
xor
imul
jnp
sub
cmpsl
jle
mov
mov
xchg
sbb
dec
jbe
lock
lahf
clc
and
cmc
inc
in
les
pop
mov
scas
dec
inc
inc
dec
add
ja
mov
mov
leave
negb
scas
pop
add
xchg
jne
pop
adc
adc
mov
fnstenv
adc
sub
repz
lods
setg
jns
sub
pop
lret
xor
xorl
js
pop
and
push
pop
pop
js
lods
loopne
mov
inc
vmovsldup
and
xor
and
or
or
push
xor
enter
inc
into
mov
adc
mov
enter
push
push
xor
sbb
cltd
lock
loop
pop
movb
inc
and
dec
shll
lret
bound
and
lcall
inc
gs
ret
testl
test
sbb
cld
aas
jnp
push
or
dec
xchg
mov
sub
call
stos
gs
leave
push
and
cltd
test
popa
call
push
cltd
out
or
dec
in
icebp
xlat
add
in
xor
push
xchg
fwait
sub
fcmovu
rorb
xchg
pusha
jns
dec
jmp
pop
and
xlat
repz
ja
mov
fcoml
dec
jnp
sub
cmpsl
xchg
cld
fdivl
sub
loopne
sbb
mov
cld
xchg
outsl
stos
roll
ljmp
arpl
mov
lret
in
imul
mov
push
mov
repnz
cmpsl
les
cmp
mov
ficoml
pop
xor
mov
test
nop
or
xlat
aas
inc
jp
jmp
sub
push
jge
fcoms
cs
stos
jp
insl
pop
and
addl
movsb
hlt
arpl
push
orl
test
fimull
adc
xlat
dec
mov
mov
and
ja
push
jns
jo
ret
cmp
sbb
into
mov
and
call
mov
fcmovnb
push
cmpsl
shll
popa
xchg
pop
push
fstps
fdivl
and
sub
inc
test
xchg
data16
xor
or
cmpsb
lods
inc
mov
push
pushf
mov
push
xchg
mov
arpl
test
sub
adc
in
add
xchg
aam
inc
mov
ret
xlat
test
or
fxch
into
dec
xor
repz
loop
int3
mov
movsb
scas
cmp
push
test
jle
cwtl
xor
sub
mov
dec
clc
pop
mov
test
lret
dec
xlat
or
dec
pop
mov
mov
stc
movsb
push
jns
aas
int
rorb
mov
fmulp
inc
cmp
mov
scas
mov
jle
gs
leave
inc
adc
ret
add
pop
scas
cmp
inc
ret
out
mov
fdivs
cmp
in
and
jbe
dec
roll
mov
mov
cmp
push
insl
mov
or
nop
or
jae
sar
outsl
mov
jo
dec
pop
lret
mov
or
ficoms
xor
sub
mov
lahf
or
enter
mov
push
adc
push
pop
or
fisubrl
dec
push
cmpsl
insl
popa
fiadds
sbb
mov
ja
rcl
jae
popa
fmul
mov
adc
mov
dec
pushf
ja
mov
add
cmp
push
in
mov
lret
cmp
js
out
cld
test
out
push
xor
fadd
xchg
cli
inc
sbb
add
or
call
in
mov
xchg
adc
lcall
icebp
shl
xor
xchg
cmpl
sahf
inc
packssdw
push
mov
sub
cmpsb
or
pushf
outsb
pop
inc
clc
aaa
ds
int3
cmp
ret
lahf
push
mov
jg
push
and
xor
mov
xchg
mov
addr16
mov
cmp
scas
and
cmp
bound
fcomps
dec
pop
mull
dec
mov
xor
jo
clc
lret
jbe
hlt
push
pop
filds
fidivrl
les
jbe
or
add
and
iret
adcb
and
dec
sbb
imul
xlat
or
js
stc
test
xchg
xor
sbb
mov
lea
sbb
add
sbbl
pop
iret
jnp
inc
insb
adc
imul
xor
pop
lods
scas
lret
mov
mov
mov
cli
dec
cld
int
add
iret
fadds
sbb
or
jne
fwait
jle
les
xchg
sbbb
hlt
movsl
and
pop
loope
lea
in
fnclex
xchg
hlt
inc
cmp
les
std
jne
adc
xor
in
cmpsb
sarl
pop
flds
pop
andnps
cli
inc
or
lods
cmpsb
aam
rcll
inc
add
ljmp
push
test
arpl
push
sub
lods
insb
shl
pushf
sbb
lret
lds
xor
fisubl
out
inc
inc
aad
fwait
xor
sti
into
inc
xor
les
xchg
cltd
push
xor
or
mull
dec
or
dec
mov
jl
cli
rcl
into
movsl
dec
jge
jne
and
aam
loopne
in
pop
ret
mov
jecxz
sti
sub
and
mov
dec
js
addr16
push
sub
mov
lret
cmovbe
xchg
pusha
mov
xor
sbb
adc
push
xchg
fwait
stos
dec
jmp
fistps
test
pusha
mov
ror
out
or
add
xor
lahf
inc
jle
loop
gs
pop
pop
shrl
movsb
jo
push
mov
ficoms
cld
out
cmp
and
iret
scas
xchg
sub
insl
ds
int
mov
fisttps
inc
mov
add
aaa
shld
cmp
lods
jo
add
mov
inc
icebp
ret
imul
test
adc
xor
and
and
sub
in
ja
je
mov
sarb
mov
pusha
addb
adc
mov
pop
stos
pop
pop
dec
ret
rorl
push
sub
push
ljmp
pop
and
in
ds
mov
mov
aas
pushf
xor
leave
jb
pop
loop
sbb
dec
ret
mov
fisubrs
xor
stc
xchg
jb
cmpsl
dec
fistpll
mov
xchg
cmp
adc
loopne
aam
sub
mov
pushf
pop
sub
sbb
idiv
rcrl
out
mov
push
movzwl
in
dec
xchg
nop
push
shl
push
xor
stos
mov
push
aad
inc
push
js
mov
mov
sti
xchg
cmp
xor
inc
xor
sub
inc
test
fmul
js
jecxz
mov
cltd
or
test
push
xchg
leave
cmp
inc
pop
and
pusha
mov
sarl
push
pop
cltd
cmp
mov
mov
test
lods
divb
out
xor
dec
inc
jp
adc
and
dec
inc
ficoms
xor
std
xchg
les
cli
pop
mov
hlt
sub
mov
aad
popf
jp
xchg
lods
xor
sbb
push
fimull
rolb
fstpl
decl
in
fldt
pushf
ss
push
push
fdivs
stos
add
dec
inc
dec
adc
mov
xchg
mov
push
out
sbb
pop
jp
pushf
mov
decl
hlt
gs
enter
and
ret
nop
push
push
cwtl
bound
cmp
outsb
inc
std
jecxz
add
adc
jg
aaa
mov
mov
sti
jbe
xchg
icebp
inc
cld
dec
jne
xchg
fnstsw
fistpll
lock
gs
int
pop
icebp
cmc
mov
inc
add
pop
mov
rolb
jnp
loop
mul
pop
in
mov
lcall
push
mov
add
aam
xchg
adc
in
xchg
mov
imul
mov
or
jmp
mov
ret
adc
inc
push
and
jnp
pop
insl
inc
and
xor
es
cltd
inc
insl
push
mov
and
es
and
mov
outsl
cmp
ret
and
and
rol
cld
cmp
mov
jns
pusha
inc
ss
sub
or
push
fs
into
push
inc
jecxz
jecxz
scas
pop
xchg
xor
stc
mov
rolb
xchg
ljmp
sub
sub
std
mov
icebp
lock
out
adc
or
or
mulb
popf
shlb
mov
lds
pminub
movsl
out
or
sub
mov
push
jb
imul
dec
test
cmp
jg
out
jb
push
jmpw
push
sbb
stc
mov
scas
mov
out
jb
sub
mov
ja
jmp
imul
dec
and
sub
lds
push
iret
cli
scas
push
jmp
je
sub
mov
pop
test
ljmp
pop
divl
data16
dec
add
push
inc
cwtl
rcll
fucomi
push
jns
mov
cld
pop
adc
mov
leave
jmp
adc
pop
push
add
leave
xchg
sbb
scas
lcall
mov
and
ss
mov
movsb
testl
hlt
ljmp
les
push
test
xor
rolb
and
lcall
test
loopne
fst
adc
add
and
enter
data16
sub
dec
sbb
movsl
mov
fnsave
sbb
popa
mov
hlt
fcomps
adc
lret
frstor
mov
cmpsb
and
push
jp
or
dec
jo
cmp
nop
iret
lahf
sub
dec
into
fnstsw
mov
test
aam
pop
leave
subb
or
add
hlt
jmp
lahf
jae
cmp
in
fninit
mov
arpl
stos
mov
xor
loope
push
repnz
arpl
in
or
and
aaa
aas
packuswb
mov
repnz
cltd
pop
add
out
mov
pop
movsl
sarl
pop
imul
rcr
jb
test
or
loopne
fdivs
in
dec
xor
into
dec
and
lods
iret
xor
in
jns
mov
and
or
mov
aaa
rcrb
mov
lods
and
popa
imul
loopne
push
or
inc
xlat
and
in
mov
inc
sti
push
push
popa
outsb
sbb
xchg
sub
sysenter
adc
test
fcmovu
lods
xor
jnp
lcall
mov
ficomps
sub
cmp
cmp
lds
xor
cmpsl
push
lea
lods
xchg
xchg
mov
xchg
je
popf
movsb
shl
pop
pop
out
dec
or
mov
push
mov
push
ret
mov
mov
add
pop
xor
adc
in
orb
cli
dec
xor
adc
mov
es
xor
pop
pushf
loop
adc
inc
popf
adc
out
add
jne
cmp
faddl
adc
add
mov
loop
in
hlt
or
push
pop
and
mov
jo
sbb
ss
adc
stos
dec
mov
fisttps
jecxz
or
rcll
xor
xchg
and
out
xchg
jbe
add
pop
cmp
data16
push
cmc
pusha
push
xchg
mov
or
cmp
sahf
xlat
inc
push
lcall
data16
movsl
jle
out
mov
jbe
fldt
adc
das
inc
mov
out
cwtl
into
inc
push
sub
adc
adcb
das
daa
sbb
xchg
sub
fldcw
mov
xchg
shr
movsb
test
push
cld
adc
mov
cmpsb
mov
iret
mov
outsl
arpl
aas
pop
mov
and
mov
inc
cmpsl
repz
push
or
adc
dec
loope
jne
pushl
cmp
adc
iret
vpmacsdqh
cs
mov
cld
mov
sahf
sbb
dec
in
in
inc
fwait
add
adc
jecxz
mov
mov
fcmovbe
int
and
repz
iret
push
mov
or
outsl
dec
mov
fucomi
mov
lods
inc
rcrb
sub
cmp
mov
popf
fisubl
test
aad
pop
outsb
push
or
dec
sub
repnz
inc
cld
add
sub
xchg
dec
and
cmp
iret
push
mov
sub
sub
inc
cmpsl
pop
fs
in
jl
cmp
cltd
jl
mov
add
pop
mov
and
push
lret
pop
fsubrl
cmp
push
stc
aas
jo
rcrb
repnz
mov
repz
into
nop
and
es
shlb
cmc
or
jo
out
lea
aaa
mov
in
leave
push
dec
mov
xchg
mov
clc
sti
inc
inc
mov
xchg
hlt
jl
xchg
int
dec
test
mov
icebp
in
js
subl
push
sub
xor
in
jl
add
fdivr
xchg
push
mov
push
loopne
mov
jge
outsl
aaa
xor
sub
push
or
push
mov
xor
inc
lcall
pop
mov
adc
pop
iret
fstpl
out
in
jo
jecxz
addr16
or
mov
cmp
dec
cmpsl
sbb
imul
cmp
xchg
mov
inc
jl
pop
rcrb
adc
testb
sbb
mov
xchg
mov
mov
xchg
sbb
ret
xlat
jno
lahf
fwait
mov
mov
mov
and
cwtl
ja
xchg
mov
test
xor
idiv
xor
jecxz
repnz
insl
and
mov
mov
sub
lret
add
mov
imul
add
into
loope
shll
rorl
repnz
pop
dec
fildl
movsb
stos
push
mov
mov
sahf
or
jo
sbb
mov
std
sbb
pushf
push
inc
xchg
mov
and
in
jmp
enter
and
loopne
in
stos
lret
inc
mov
adc
push
inc
sub
mov
jne
and
movsb
loopne
mov
cltd
iret
xor
cs
mov
or
sbb
test
dec
hlt
pop
daa
fxam
nop
jne
dec
and
push
ss
mov
jnp
sbb
mov
or
xor
jnp
inc
roll
out
push
cwtl
cmc
mov
sbb
push
test
mov
stos
out
xchg
popf
mov
inc
lret
testl
xor
stos
inc
sbb
shlb
in
ja
out
mov
adcb
lahf
sbb
es
inc
in
xchg
pop
jge
orl
shll
push
pop
fsts
mov
bound
popf
sub
cs
push
js
push
push
mov
push
dec
mov
cmpsb
push
push
pushl
cmpsl
push
jle
fisubrs
pop
icebp
lock
lahf
dec
mov
pop
or
lock
jmp
xchg
dec
ja
in
adc
and
ror
mov
aaa
aas
push
push
inc
and
pop
add
mov
out
cmp
outsl
add
xor
les
mov
cmpsb
lcall
sti
arpl
lcall
clc
cmpsl
mov
popa
push
or
and
orb
jl
mov
aaa
xchg
sub
push
and
jecxz
pop
mov
push
movsb
xor
popf
loop
jl
loopne
mov
pop
out
mov
and
out
lods
sbb
xchg
jb
xchg
loop
jp
and
jne
sub
das
cli
aam
call
or
dec
cmc
iret
test
xchg
mov
push
jmp
sbb
or
dec
popa
cmp
int
fcmovu
jno
movl
mov
adc
scas
push
std
adc
repz
sbb
add
negl
jae
jmp
popf
and
jb
rcl
pusha
sbb
cmp
and
andl
pop
xchg
xor
dec
lods
frstor
sbb
decb
mov
jge
mov
popa
inc
sbb
mov
mov
xchg
cmp
xchg
xlat
push
fsubrl
mov
rclb
mov
jg
movsl
pop
sbb
bound
pusha
jo
and
popa
loope
lcall
lods
outsl
add
adc
lea
jle
push
and
jecxz
test
mov
mov
mov
push
lds
push
xchg
popa
lret
add
jno
pop
nop
push
cmp
call
jo
mov
xor
xchg
out
ljmp
mov
cs
sqrtps
add
inc
dec
add
cmp
in
iret
rcrb
pop
sub
jb
jns
movsl
inc
xchg
dec
inc
test
inc
adc
jp
jb
mov
jg
mov
jl
subb
dec
out
sub
enter
jp
lods
filds
sub
mov
and
popa
inc
or
dec
mov
lds
inc
lcall
cmpsl
jge
inc
sysret
jo
pop
stos
mov
test
neg
pop
icebp
jl
sbb
clc
xchg
jno
pop
and
movsl
mov
mov
jns
push
test
stos
cmpsb
sub
roll
pop
xor
insb
mov
lods
pop
or
mov
mov
inc
push
test
std
xor
sub
mov
jns
adc
repz
xchg
or
add
lock
test
insb
fs
cltd
push
mov
imul
orb
fildll
mov
adc
adcb
pushf
sbb
inc
jae
addr16
lcall
sbb
dec
pop
cmc
add
daa
pusha
xchg
adc
add
add
mov
inc
out
jns
scas
cmpsb
xchg
out
test
icebp
inc
sbb
cli
pushf
sub
lcall
push
faddl
sbb
aas
mov
sub
adc
xchg
icebp
and
loope
inc
repnz
aam
and
shrb
cmpsb
movsb
mov
cmp
js
jle
push
add
enter
sub
mov
or
dec
js
sub
sbb
push
sarb
cld
sbb
push
pop
int3
cmp
or
pop
int3
jns
shr
jmp
jl
in
pop
mov
subl
fwait
xlat
sub
mov
push
in
iret
in
out
or
in
inc
pop
clc
jns
loop
fcoms
daa
popa
xor
adc
cli
in
adc
lahf
or
out
or
inc
rcr
sarl
std
mov
xchg
ret
pop
cli
add
in
or
dec
mov
add
inc
add
scas
jmp
dec
movsb
sub
les
add
push
leave
and
sbb
xchg
xchg
cmpps
push
adc
ljmp
jbe
dec
mov
icebp
sti
jnp
fisttps
mov
rcrb
sbb
push
cmp
aam
fstpl
fldcw
mov
hlt
adc
or
or
adc
out
mov
ds
dec
std
pop
es
sahf
popf
orl
pop
sbb
arpl
pop
xchg
clc
insl
mov
outsl
xor
pop
xchg
lret
jb
mov
mov
xor
negl
sub
jo
pop
push
lcall
or
cs
mov
mov
js
sbb
mov
andl
das
es
out
aam
bound
ja
lcall
outsl
cmpsb
mov
pop
mov
andb
sub
cs
enter
pop
jnp
mov
pop
sbb
jb
xchg
inc
cmc
cmp
cs
or
lahf
pop
data16
xor
add
ja
cli
jo
std
or
push
or
out
jmp
xor
in
xchg
xorb
inc
pop
fnsave
cmc
mov
and
inc
adc
sub
jne
adc
adc
jl
orb
sub
mov
mov
imul
ja
dec
xor
push
mov
jecxz
or
dec
lods
stos
xor
jp
jnp
sub
add
jl
mov
cmp
sbb
lret
clc
les
mov
jp
divb
xchg
lock
mov
lahf
fdiv
dec
xor
loop
lea
notb
stos
aam
cmp
push
in
mov
pop
sti
inc
pusha
test
mov
cmpsl
cli
pop
test
xor
xchg
add
adcb
pop
lods
in
xor
enter
movsb
or
mov
xchg
int3
or
mov
pushf
int
xor
bound
fs
push
jg
mov
sub
jg
sbb
popa
mov
push
push
push
sbb
mov
in
lcall
dec
add
js
out
mov
sub
inc
push
pop
jl
stos
imul
or
shll
adcl
push
outsl
pop
dec
and
push
popf
sub
outsl
bound
ret
jnp
xchg
in
fstpl
xor
pusha
xchg
repz
lahf
xchg
cmp
xor
repnz
popa
cmpsb
and
adc
pop
and
cld
cmpsb
mov
sbb
mov
push
adc
lret
aad
push
inc
push
ds
dec
gs
xor
and
mov
and
mov
sub
mov
push
out
pop
add
addb
test
ret
fidivl
pushf
push
fildll
in
mov
fbstp
push
sbbb
xor
sbb
jnp
dec
ficomps
icebp
int
arpl
mov
and
sbb
sub
mov
push
cmpsl
movb
sbb
push
mov
xchg
cltd
adc
pop
pusha
mov
lret
orb
das
hlt
rcrl
stos
loopne
mov
push
xchg
sbb
push
mov
jo
sbb
and
mov
mov
and
loope
lods
sbb
mov
pop
and
outsb
test
and
add
bnd
jns
repnz
and
rcl
sub
mov
cs
sbb
daa
arpl
or
fbstp
cmp
pop
mov
addr16
rorb
push
or
fwait
fwait
lea
sbbb
sbb
dec
mov
cmp
push
sub
cmp
dec
aaa
aas
cmp
add
add
dec
sub
icebp
imul
cli
iret
sbb
enter
adcb
stos
mov
wrmsr
dec
sahf
fs
fsubrs
shlb
push
inc
cmp
adc
aad
inc
dec
adc
jl
das
hlt
lret
icebp
pop
ret
push
add
ret
stos
cmp
jbe
cmp
and
xchg
pop
or
pextrw
cmp
lods
sub
dec
pop
out
push
ficoms
enter
pusha
jg
xchg
push
out
sbb
jno
xchg
cltd
pusha
test
inc
aaa
cmp
add
test
xor
mov
dec
sub
movsl
mov
mov
jns
mov
pop
lods
xchg
inc
mov
mov
cs
mov
and
addr16
sbb
aas
aas
imul
icebp
dec
push
mov
or
loop
inc
adc
fdivl
mov
mov
cmp
test
xchg
sahf
sbb
shll
inc
push
fiadds
es
cmp
outsl
cmp
hlt
pop
pop
aad
fs
mov
lods
fmull
sarl
fisttps
cmpb
movsb
fimull
add
and
inc
jnp
fisubl
cld
aam
cltd
push
pop
mov
jae
lods
mov
lods
aas
loopne
test
int3
jge
lcall
out
stos
mov
or
jb
cmp
mov
mov
paddusb
sub
stos
stc
movsl
fsub
cmp
cs
repz
pop
aaa
and
out
xchg
leave
xor
inc
pop
dec
sarl
dec
push
scas
add
mov
lods
aaa
jae
adc
mov
fldcw
dec
lret
add
mov
cld
mov
or
jns
orb
fs
jns
es
or
fs
loopne
fs
xor
push
data16
pop
xchg
add
inc
popf
ja
test
mov
andl
inc
push
lret
pusha
inc
xor
and
mov
push
mov
aad
dec
sbb
mov
or
call
iret
popa
shl
std
pop
repnz
rclb
lret
fistl
dec
test
or
and
insl
imul
imul
xchg
stos
cwtl
into
pop
pusha
stos
pop
inc
xchg
loopne
mov
rcrb
insb
mulb
mov
fadd
push
das
divl
imul
lods
scas
dec
mov
out
push
fstpl
sahf
lea
ds
jb
dec
mov
inc
sub
mov
scas
addl
loopne
ss
cmp
mov
sub
inc
in
jns
nop
dec
repnz
ljmp
push
push
push
cmp
lret
sbb
rcll
adc
jg
or
push
out
cmp
out
fmulp
popf
and
into
idiv
fdivp
inc
je
or
inc
sub
push
ret
push
adc
aaa
pop
and
adc
andb
mov
or
in
xchg
jmp
ret
cmpsl
push
push
inc
fwait
jo
js
mov
inc
in
scas
into
clc
jecxz
pop
enter
sahf
sbb
ja
pop
fcomp
and
cmp
xchg
inc
and
loopne
and
xchg
and
adc
adc
mov
mov
sbb
xor
or
xchg
mov
mov
adc
add
sub
repz
sbb
push
xchg
push
lcall
and
movsl
ja
loopne
or
push
sub
daa
mov
sub
or
into
gs
ret
addr16
cmpsb
daa
mov
mov
lock
mov
icebp
sbb
loopne
fwait
in
mov
subb
cltd
pushf
arpl
clc
and
mov
lods
mov
popf
inc
inc
sbb
mov
jecxz
mov
adc
mov
add
lcall
and
cmpsl
out
aaa
xchg
sub
rcrb
push
dec
xor
ljmp
stc
leave
nop
mov
pop
jo
adc
shlb
sahf
fsubrl
push
jge
inc
add
add
sub
xchg
in
pop
shll
jp
inc
ja
xchg
dec
imul
addb
repz
movups
xchg
and
daa
fwait
lea
xchg
dec
fdivs
cmp
sbb
jnp
adc
inc
je
sbb
xor
inc
int3
repz
dec
shrl
scas
add
xchg
pop
notb
or
cld
enter
test
inc
cmpl
mull
pop
int3
aas
mov
dec
aaa
mov
push
cmp
sbb
mov
inc
pop
out
cmp
jb
xchg
inc
add
mov
lcall
sarb
mov
ret
xlat
pop
inc
jle
pop
and
add
test
xchg
xor
sub
leave
jo
hlt
push
mov
imul
cs
lret
inc
sti
sub
loope
mov
jo
ja
in
das
pop
je
fdivs
cwtl
cld
mov
stos
clc
and
push
jl
aaa
cli
adc
sti
lcall
lcall
in
and
xor
mov
lods
stos
jl
out
mov
dec
xchg
cli
dec
aad
rorl
outsl
sub
mov
add
sbb
sahf
mov
outsl
jnp
nop
xchg
ja
mov
adc
bound
adc
shlb
sbb
dec
dec
add
ljmp
ja
es
pop
test
jne
test
xchg
sqrtps
push
mov
fildll
jae
lock
jns
mov
imul
divl
fdivp
sub
mov
imul
xchg
jge
pop
adc
jg
dec
lahf
pop
inc
mov
push
repz
jne
cmp
ljmp
pop
lea
or
int3
in
scas
sbb
aam
andb
jp
push
iret
jnp
add
movsl
cmp
shr
mov
xor
aam
bound
fs
aam
in
sub
and
pop
out
jecxz
mov
jmp
add
cli
bswap
mov
mov
and
or
mov
fsubrs
push
dec
jl
jmp
icebp
shll
in
xor
xor
negl
pop
cs
pusha
inc
leave
jg
call
adc
ficoml
and
ret
cmp
test
xchg
xchg
sbb
cmpsl
sbb
mov
mov
xchg
ret
push
inc
mov
std
sbb
int
aas
and
cld
bound
xchg
add
int3
mov
inc
stc
test
or
shll
addr16
lcall
xchg
push
push
arpl
xchg
cltd
loope
mov
lcall
sbb
fcoml
dec
xor
popf
sbb
shrl
int
xor
je
xchg
mov
mov
scas
cmp
mov
vprotd
cmp
sbb
lahf
xchg
mov
cmpsb
pop
out
int
mov
lahf
bnd
cmc
inc
add
outsb
xchg
xchg
scas
sbb
call
cmp
insb
xchg
insl
rol
mov
in
fidivl
and
shll
cmp
inc
mov
scas
and
inc
aas
dec
in
jae
mov
mov
or
xchg
xor
mov
xorl
lds
aas
mov
test
jbe
cwtl
lds
lock
push
mov
and
test
mov
sbb
jg
pusha
cs
imul
outsl
sub
js
cltd
insb
adc
pop
mov
jg
pop
push
jle
add
pop
neg
les
leave
inc
aam
xor
inc
test
jnp
ret
cmp
mov
jb
pop
pop
sti
std
mov
ljmp
ret
mov
add
cmp
push
xchg
mov
xchg
loop
add
js
jbe
sbb
mov
loope
sti
es
ljmp
adc
arpl
and
sub
pushl
movsb
lret
test
jbe
aas
xchg
or
pop
sbbl
aad
popa
inc
pusha
cmc
add
or
sar
loop
imull
cmp
jmp
mov
outsl
jmp
iret
cs
fldenv
add
adc
inc
inc
and
dec
jae
xor
sub
pop
jb
test
jle
push
push
push
das
cmc
inc
or
test
in
cmp
inc
pushf
sbbl
outsb
push
mov
xor
xchg
or
mov
mov
cmpsb
and
divb
iret
call
push
cli
mov
inc
sbb
sub
outsl
cmpl
dec
jmp
lret
fists
js
mov
shrl
push
xor
and
into
mov
push
or
xor
push
movsb
sub
jnp
and
mov
cld
or
ret
mov
out
and
mov
ja
out
pusha
aam
loopne
cmpsb
xor
imul
and
pop
in
xchg
aaa
movsb
jae
ljmp
mov
lock
push
mov
xchg
lock
cwtl
cmp
xchg
and
in
cwtl
xor
repz
dec
ds
xchg
add
jl
add
clc
inc
fdivrs
sti
int
sub
mov
mov
loop
lret
repz
fldt
sub
mov
loopne
xchg
in
mov
or
pop
pop
insl
jo
insl
and
lret
movsb
sub
addr16
or
rclb
jno
fnstenv
subl
lret
test
pop
stc
sahf
jns
mov
add
in
xor
push
out
adc
xor
cmpsb
mov
xor
push
mov
test
cmp
clc
call
cld
jmp
mov
xor
dec
xor
mov
and
iret
fidivs
add
out
inc
out
aas
xorb
add
and
sti
push
mov
cmpsb
daa
mov
xor
scas
pop
loope
mov
dec
pusha
xor
scas
pop
mov
fucompp
mov
cltd
in
mov
push
cli
mov
scas
inc
xchg
scas
lods
sub
popf
sbb
lods
shrb
lock
fwait
in
dec
cmp
cmpsl
push
cmpsl
negb
mov
adc
adc
dec
add
lock
push
sbb
dec
and
dec
rorl
lahf
icebp
imul
or
out
insb
ja
call
fmull
push
dec
xchg
dec
sub
aad
mov
loop
xor
mov
es
mov
shrb
xchg
xor
rcrb
cmp
addb
push
in
or
repz
call
je
dec
cli
loope
or
add
les
clc
fidivl
fimull
dec
sbb
add
les
pop
out
test
imul
andb
lock
xor
cmpsl
adc
js
arpl
cmp
jbe
int3
das
pushf
xor
shlb
aam
mov
mov
jecxz
fadd
sub
xchg
push
mov
adc
lock
int3
fcoms
sbb
mov
dec
das
xchg
add
mov
inc
bound
fs
scas
fld
adc
pop
mov
sub
jge
xchg
out
push
or
clc
rolb
popf
cmp
cmp
xlat
fcmovu
xchg
push
mull
push
inc
jbe
xchg
and
or
cwtl
not
cmpb
nop
pop
jp
fstl
ret
rorl
fnstenv
push
pop
ror
shrb
inc
imulb
or
cmpsb
sbb
in
inc
cld
cld
mov
outsl
loope
ucomiss
std
push
add
fisubl
sub
je
cmpsl
ret
dec
dec
sbb
push
push
mov
jno
xchg
das
adc
or
cmp
push
xor
xor
movsl
mov
dec
mov
pop
adc
js
or
inc
pop
dec
test
int3
shll
notb
dec
jno
inc
arpl
test
or
mov
dec
shll
mov
or
je
xlat
imul
scas
cli
in
dec
mov
movsb
fcompl
repnz
loopne
lds
mov
cmp
xor
xor
or
dec
jl
jg
add
imul
cmpsl
inc
aas
fidivrl
jne
xchg
into
or
pop
push
in
jns
lahf
mov
push
add
testl
sbb
popa
outsb
mov
cmpb
aaa
loop
or
adc
icebp
mov
add
sbb
in
test
out
adc
or
je
das
or
in
and
out
inc
xchg
ds
ret
or
cmc
or
push
xor
push
ud2
xor
cmp
rolb
lods
popf
mov
xor
inc
mov
adc
hlt
int
pop
inc
adc
outsl
jbe
push
shl
xchg
cmp
xor
scas
idiv
add
jnp
adc
adc
fidivs
jle
xlat
mov
jl
test
cmp
out
sbb
sbb
jp
push
cltd
aam
and
leave
adc
sub
cmp
testb
iret
mov
leave
mov
pop
and
xor
dec
jb
mov
push
sti
or
stos
pusha
sbb
sarl
xlat
cwtl
jne
fimuls
sbb
inc
jae
int3
jecxz
insl
roll
aaa
js
xor
sbb
inc
outsb
test
lahf
push
pop
test
bound
mov
imul
lahf
mov
movsb
popf
push
xor
xor
add
sub
mov
push
ret
add
pop
push
lahf
stc
mov
pop
inc
push
jns
test
rcrb
bnd
nop
inc
xor
ljmp
dec
push
nop
push
fldl2t
scas
inc
cmp
add
xchg
mov
xchg
add
xor
jbe
add
into
fcoms
xor
lea
sahf
mov
or
add
sub
sbb
outsl
xor
mov
lcall
mov
mov
int3
cmp
cmc
jne
loop
mov
insb
enter
add
in
cwtl
rcr
pop
aad
adc
push
inc
sbb
cmpsl
fstpl
or
jb
test
sub
ljmp
mov
mov
adc
into
sub
mov
std
in
fwait
icebp
std
popf
sbb
in
stos
sti
push
lock
loop
and
loop,pn
bound
cmc
mov
out
test
jecxz
jno
sbb
cmpsb
out
mov
and
inc
jle
xchg
inc
jge
pusha
adc
sbb
in
inc
sub
imul
xchg
push
test
test
adc
mov
cmp
sub
push
loopne
jecxz
imul
fsubrs
cs
leave
enter
add
adc
add
stos
xor
pushf
lcall
lret
xor
push
imul
loopne
add
les
sbb
inc
sub
rep
stos
xor
dec
popa
or
mov
lret
xchg
scas
fsubr
sub
push
push
cld
mov
mov
or
sub
jge
xor
push
inc
push
shrl
cli
add
mov
and
jmp
mov
xor
push
and
mov
aaa
loop
sarl
into
test
mov
or
push
or
jb
push
mov
bound
out
push
adc
sub
fistpl
movsl
and
jp
orb
das
push
mov
mov
push
mov
pop
adc
subl
cmpsl
insb
or
mov
lods
mov
pop
mov
popf
sub
fists
mov
lea
testb
gs
int3
push
les
mov
mov
xor
ja
ret
fidivl
cs
movsb
leave
mov
fidivl
lea
repz
stc
sub
lock
add
daa
and
xchg
mov
jne
jmp
pop
jmp
ljmp
aad
cld
dec
std
cli
fldt
push
push
jnp
test
adc
lock
fsubrl
mov
sbb
sub
js
xchg
add
sbb
or
mov
cli
loopne
popa
and
xchg
ret
jno
dec
leave
jnp
insl
bound
popf
jno
fidivs
iret
adc
mov
movsb
and
mov
xor
loopne
call
test
scas
stos
xchg
pop
adc
inc
mov
mov
fcomp
sbb
inc
insb
push
das
loope
cwtl
xchg
imull
sub
in
mov
and
sbb
ret
enter
ffreep
hlt
sbb
jne
xchg
pushw
sar
mov
jg
test
adc
popa
lock
lock
mov
or
int3
inc
movsl
xor
sti
cwtl
jecxz
inc
sbb
test
jp
xor
cmc
pop
aas
jge
or
arpl
shll
rolb
add
pushf
jno
pop
fs
push
sbb
aas
or
dec
mov
sbb
add
loop
or
in
mov
rcrl
leave
test
pop
adc
sti
lock
call
imul
outsb
ret
out
adc
pop
xor
popa
fisubl
push
mov
xchg
inc
mov
lcall
cld
das
sbb
xor
mov
lock
mov
jg
dec
sarb
jno
test
push
mov
adc
mov
and
add
jge
mov
int
xchg
arpl
sbb
out
jge
mull
mov
out
xchg
pushf
sub
repz
jnp
sbb
xchg
sub
xchg
cmp
xchg
pminsw
mov
stc
dec
pusha
das
push
mov
or
ja
lahf
fsubrl
adc
test
aam
mov
insb
aam
and
inc
insb
aam
repz
jns
and
adc
sbb
sbb
enter
shlb
cmp
xorb
mov
sahf
ret
insl
mov
sbb
fnsave
in
lahf
fimull
pop
sbb
push
cmpsl
js
jg
loopne
scas
jg
and
ret
in
addr16
aas
xor
jl
outsb
add
jge
hlt
sarb
mov
xchg
xchg
repz
ret
sub
push
in
xor
sti
ja
xchg
test
pop
ljmp
pusha
cmpsl
mov
push
sub
aam
pop
pop
pop
or
insl
pop
push
mov
adc
xor
cmp
loop
push
inc
sbb
stos
push
and
pop
idivb
or
push
inc
ja
jg,pn
dec
cmpsb
xchg
fidivs
mov
jb
jb
or
pushf
loope
jl
pushf
push
mov
sub
repnz
xor
mov
call
or
cmp
aas
pop
dec
fs
pop
subb
add
sar
adc
hlt
add
jns
loopne
sub
cmp
pop
pop
cmpb
pop
xchg
inc
xor
insb
sbb
inc
out
sub
sbb
jnp
jnp
in
xchg
dec
imul
mov
sbb
shrb
mov
push
test
sbb
xor
scas
cltd
sbb
mull
mov
inc
stos
sub
pop
cmpsb
sub
in
mov
xchg
lret
popa
sbb
pop
insl
mov
stos
adc
jmp
std
repnz
out
arpl
cmp
out
stc
ret
xchg
jns
rcll
mov
repnz
outsb
icebp
push
jbe
jns
or
or
xchg
xor
lahf
mov
jbe
mov
lock
frstor
pop
stos
sbb
dec
inc
rolb
imul
outsl
je
dec
loop
adc
cmp
addr16
rol
movsb
je
mov
call
xchg
insb
adc
mov
mov
inc
cmp
xlat
add
dec
rcll
xor
sahf
jbe
iret
cmp
sbb
outsl
mov
popl
adc
jne
mov
fcmovnu
lds
dec
movsl
push
mov
ficompl
nop
mov
push
mov
ljmp
cwtl
aam
ja
pop
pop
or
lret
stos
add
inc
xchg
mov
out
push
push
insb
or
cmc
push
adc
adc
pop
dec
sti
imul
mov
add
and
jg
mov
inc
sub
enter
pop
jecxz
push
push
lret
dec
loop
jno
mov
jecxz
lret
ja
pusha
dec
loope
aam
rcr
int3
jns
stos
leave
cwtl
sbb
loop
rclb
xlat
push
icebp
jns
lret
push
mov
push
addr16
mov
mov
fucom
fimull
mov
ljmp
ret
pop
jnp
sti
in
es
call
lods
add
jae
sub
cwtl
pop
add
pop
sbb
xchg
in
adc
inc
push
sub
xlat
shrl
stos
xor
fadds
jmp
dec
cmc
cmp
sbb
add
and
int
es
xor
fstpt
push
int
std
repz
les
lahf
bound
js
jl
push
addr16
sahf
and
testb
mov
sbb
arpl
jge
divl
pop
xor
dec
cld
nop
sbb
mov
lret
pop
xchg
sbb
inc
pop
jp
je
and
sub
fninit
popf
jecxz
jmp
pop
mov
stos
mov
mov
cmpsb
rorb
add
and
ds
and
jmp
in
les
cltd
push
push
push
fstl
in
frstor
dec
sarl
cs
bound
mov
pop
adc
fsubrl
push
dec
add
addl
xchg
or
dec
negl
leave
lods
fwait
out
or
frstor
imul
lock
jmp
je
xor
cmp
xchg
sbb
push
cmpsb
dec
insb
and
movsl
sbb
dec
cmp
cld
sbb
fdiv
lds
inc
add
jbe
push
mov
inc
jle
stos
add
and
ja
mov
scas
jo
scas
sub
cs
or
gs
mov
push
insl
mov
add
scas
pop
add
fsubrs
div
or
icebp
pop
adc
out
adc
nop
or
dec
out
je
mov
dec
test
add
jno
stc
dec
cwtl
jmp
push
sub
icebp
movsl
mov
cmp
aas
sbb
sub
gs
stos
int3
popf
adc
adc
or
pop
mov
mov
out
addr16
loopne
dec
cmpb
in
ja
add
jecxz
pop
icebp
jge
xor
mov
ja
cltd
mov
mov
fs
xchg
mov
gs
adc
cmp
jecxz
pusha
sahf
pop
mov
or
lret
jp
stc
std
lret
jns
imul
repz
test
mov
loopne
imull
ss
xchg
adc
les
roll
jns
lods
pop
dec
ss
mov
lret
arpl
popf
das
stos
cmp
fucomip
sarb
lods
stos
movsb
int3
fcomip
mov
sahf
outsb
inc
stos
fstp
bound
pop
test
in
jg
sahf
cmp
adcb
mov
cmpsb
pop
sbb
inc
aam
gs
jmp
cs
out
cli
or
pusha
int
pop
add
cld
sbb
pop
and
jg
out
dec
inc
xchg
pop
dec
enter
add
cwtl
xchg
dec
push
pop
push
cmp
psubsb
jmp
add
sub
mov
xor
sti
cwtl
fwait
mov
loopne
xchg
ret
mov
insb
mov
inc
sub
xchg
sub
out
mull
push
es
adc
add
mov
aam
pop
pop
jo
repz
and
jge
scas
push
pop
inc
loop
ds
lock
xchg
mov
imul
cld
mov
shlb
jg
shll
add
mov
xor
or
mov
sbb
int3
adc
jmp
add
pop
subl
dec
pop
or
mov
imul
push
mov
cmpsb
jns
insb
cmp
inc
mov
and
popf
lods
inc
sub
dec
dec
push
pop
pop
mov
adc
scas
xchg
mov
enter
mov
xchg
jmp
or
sbb
pop
cmp
rcl
stc
pop
dec
pop
shlb
cli
push
movsl
inc
sub
push
sbb
push
cli
divl
xchg
cmp
das
stos
and
fidivrs
dec
mov
push
scas
mov
leave
scas
sti
data16
out
jo
in
sarl
clc
fmul
in
inc
xor
int3
arpl
leave
in
xchg
inc
cmp
lcall
inc
mov
out
popa
fists
and
pop
or
add
sub
lods
pop
dec
jbe
xchg
sbbl
clc
jp
and
xchg
xchg
mov
cli
jno
jecxz
mov
mov
ljmp
jne
adc
add
ror
aas
call
test
rol
adc
add
lods
icebp
push
mov
mov
pop
and
mov
sti
nop
inc
subb
cmc
out
hlt
aam
inc
inc
sbb
mov
dec
push
imul
or
repz
test
and
cmp
mov
jbe
test
mov
jbe
scas
out
jb
jmp
aas
cltd
stc
dec
addb
dec
pop
leave
in
bound
stc
mov
imul
mov
enter
jle
js
adc
xlat
out
jo
rol
loop
ret
ds
inc
rol
aam
adc
inc
sbb
aaa
enter
xchg
sub
loope
lcall
in
dec
and
lahf
ret
jge
xchg
out
in
fs
loop
adc
movsb
jne
cmp
mov
fs
sub
and
mov
ljmp
nop
ljmp
mov
dec
icebp
xchg
and
sub
je
shl
xor
popa
shr
inc
nop
adc
in
pop
aaa
testl
cmp
pop
push
aas
in
jae
incb
mov
repnz
adc
sub
aam
jae
lret
adc
test
mov
ds
repnz
outsb
dec
aam
jno
fildl
outsb
and
or
imul
in
cmp
test
jne
inc
mov
dec
icebp
ret
push
adc
or
test
lea
cmp
inc
sbb
stos
insl
xor
lds
or
pop
movsl
or
popf
std
js
pop
or
bound
mov
stos
mov
push
cmp
cli
lret
rcll
and
clc
iret
dec
sbb
mov
mov
testl
pop
fisttpl
jmp
popa
push
ljmp
jle,pt
cmp
mov
jbe
andl
test
push
aas
dec
push
mov
push
xchg
mov
pop
test
test
inc
lods
scas
ljmp
loopne
jle
or
shlb
mov
imul
ret
pop
xchg
mov
out
int
dec
call
insl
data16
cmp
loop
cmp
and
lods
test
addr16
mov
jge
lods
add
in
mov
cmc
and
test
sbb
imul
xor
and
pushf
cmp
das
loop
movsb
daa
fdivrl
or
test
in
dec
sbb
and
adc
cmp
cmp
pop
out
aas
loopne
xor
cmp
cltd
pop
in
aad
dec
into
cmp
out
enter
pop
jle
cs
pop
inc
imul
in
pop
mov
cltd
ret
or
dec
ljmp
and
aam
sub
adc
mov
outsl
dec
lock
lret
das
in
lods
pop
test
jmp
xor
mov
add
out
fs
xor
xlat
andl
bound
imul
jecxz
in
adc
xlat
cs
fdivrl
xchg
fmul
dec
pop
pop
mov
filds
ss
mov
xchg
sbb
pushf
cmp
inc
lods
mov
mov
andl
push
mov
jl
xorb
adc
add
push
xor
lea
xor
sbbl
dec
repz
jmp
mov
dec
jns
outsb
add
dec
mov
test
outsl
push
push
cmp
sbb
clc
bnd
adc
or
sbb
or
pop
or
mov
call
outsl
cwtl
cmp
testb
push
arpl
rorb
add
ret
mov
cli
mov
test
add
ja
shl
das
fnstcw
sbb
or
gs
pop
les
es
or
outsl
mov
movsb
mov
add
inc
mov
clc
sub
fldt
inc
mov
push
add
loope
lds
movsl
or
add
dec
hlt
pop
sbb
clc
mov
mov
lock
pushf
adcb
add
sbb
jp
mov
pop
dec
call
popf
cmp
and
xchg
cmpsl
add
mov
jae
inc
push
sahf
cmp
movsl
stos
adc
push
jbe
or
mov
add
pop
outsb
sti
add
pop
aad
xor
cmp
test
push
mov
repz
jp
lret
mov
ja
dec
inc
mov
loope
dec
aad
or
and
mov
bound
lahf
lods
roll
or
dec
inc
mov
repz
iret
aas
outsl
ret
fwait
push
xor
push
inc
jmp
push
push
stos
jno
mov
stos
xor
xlat
pop
lret
es
cltd
push
add
cmp
sub
test
dec
mov
cmp
fcoms
xor
push
loope
fs
push
fidivs
sbb
lcall
shlb
pop
cmpsb
int
ret
pop
adc
mov
cmp
outsl
popf
mov
lret
aaa
xchg
jbe
mul
not
es
mov
stos
cmc
int
push
int3
addb
adc
es
movsb
ds
mov
and
add
sub
out
inc
xchg
xor
sub
jl
in
and
xchg
pop
mov
xor
push
mov
cmp
cltd
xor
ja
leave
dec
adc
pop
or
scas
mov
fcmovb
sub
jle
lock
les
lret
pop
call
inc
sub
insb
push
xchg
xchg
and
or
cli
mov
stos
icebp
fwait
xor
popf
lock
clc
in
cmp
push
cmp
adcb
and
pop
popa
jbe
sti
adc
outsl
test
cwtl
sbb
dec
push
aaa
sti
shlb
inc
ficomps
in
icebp
xor
cmp
xchg
inc
leave
sbb
outsb
and
fbld
push
mov
test
xchg
xchg
sub
jecxz
pop
push
in
push
mov
sarl
add
xchg
sub
outsb
pop
gs
or
pop
repnz
sbb
lock
call
dec
outsb
dec
pushf
cmp
addr16
adc
xlat
std
mov
mov
enter
jg
shl
movsb
movb
mov
push
sti
push
xchg
dec
push
in
stos
xchg
outsl
clc
int
push
xchg
jns
push
leave
dec
mov
mov
push
dec
leave
icebp
xchg
fidivl
sbb
ds
or
scas
adc
xor
lret
jb
sub
mov
aaa
mov
push
enter
pop
pushf
scas
sub
je
dec
aad
lea
arpl
out
or
out
je
shlb
cltd
mov
mov
xchg
push
pop
test
mov
xchg
jno
ret
lds
leave
repnz
add
adc
mov
test
dec
jp
imul
mov
or
xchg
popf
cltd
loope
pop
lcall
jmp
sbb
pop
cld
xlat
test
enter
movsl
jo
or
cltd
sub
xchg
xlat
pop
scas
cmp
int
add
push
mov
mov
xchg
rorb
jae
pop
and
mov
daa
cs
pop
mov
shrb
push
sti
mov
jle
loopne
es
scas
jns
pop
enter
sub
mov
sbb
aam
mov
loope
dec
sbb
inc
xor
arpl
xchg
mov
in
push
sbb
sbb
pushl
jns
push
test
cmp
out
jae
das
and
inc
sahf
movsb
fs
xlat
fisttpll
les
je
fildl
pusha
or
push
js
int
xchg
not
dec
outsb
adc
insb
xchg
cmp
mov
mov
sub
xor
imul
push
cmp
jp
test
jnp
les
pushf
std
fildll
adc
fstpt
fbstp
clc
push
xchg
enter
inc
inc
ja
test
inc
pop
sub
mov
subb
jmpw
mov
mov
xor
xchg
loopne
sbb
dec
orb
in
clc
xor
lods
or
lret
jmp
dec
das
sub
xchg
add
mov
push
push
sbb
and
idivl
shrb
dec
cmp
ret
out
vpacksswb
cmp
mov
jmp
ds
mov
jge
sbb
and
xchg
aad
xchg
sbb
int3
into
popf
jno
or
inc
jmp
push
adc
test
dec
repnz
sti
jp
out
jne
jne
outsl
scas
mov
xor
je
cmp
std
shll
xlat
cmpsb
repnz
or
cmp
adc
sti
test
push
fimuls
lods
xchg
push
add
dec
incl
xor
pop
push
fs
xchg
arpl
push
lock
dec
adc
sub
mov
clc
xchg
jl
mov
sub
dec
and
out
scas
addr16
mov
jno
ret
mov
idivl
cs
and
push
sub
leave
leave
cmpl
adc
xchg
rcrl
or
dec
leave
mov
mov
daa
or
cmp
cmp
imul
sub
loopne
lea
mov
jb
and
lret
aas
add
sub
inc
fldt
int
jle
lods
xchg
mov
xchg
inc
mov
mov
jp
cld
cs
fcoms
cmpsl
in
dec
or
mov
xor
cmpl
jp
push
and
mov
dec
cli
leave
xchg
rep
insb
sub
push
dec
out
fcom
leave
mov
or
sbb
sub
xchg
or
push
ds
pop
nop
aaa
jbe
sbb
mov
jmp
out
adc
sbb
and
leave
xchg
inc
iret
insl
fdivrl
addb
out
pop
cli
sub
xor
lds
daa
das
loope
arpl
mov
aas
xchg
std
push
sbb
or
aam
dec
adc
ss
cltd
cmp
sub
cmp
mov
inc
jne
inc
mov
mov
std
cmp
push
sub
push
inc
mov
dec
xchg
mov
sub
sub
jg
pushf
movb
stos
jge
mov
xor
cmp
repnz
es
aad
cmpl
and
cltd
push
mov
xor
and
cmp
pusha
jo
shrb
and
jmp
bound
fs
inc
push
fisttps
jbe
daa
jl
adc
fwait
dec
cmp
inc
stos
or
out
fistl
and
mov
loop
mov
cmpsb
hlt
xor
cmp
mov
push
cwtl
pop
add
loop
ljmp
cli
sbb
or
mov
mov
pop
push
repnz
hlt
xchg
lock
lods
sub
cmp
jge
insl
iret
pusha
lret
dec
lcall
mov
inc
jbe
push
push
je
repz
cli
jle
jne
mov
aaa
jmp
ljmp
dec
pop
sbb
inc
jb
sbbl
add
ret
movsl
mov
pop
mov
ret
jae
inc
sub
mov
add
js
jecxz
loopne
or
insb
ror
sbb
ljmp
and
xor
pop
or
and
fstl
xorl
xchg
mov
fs
dec
mov
lods
cmp
addr16
push
ror
jne
xchg
add
add
and
dec
fsubrl
sbb
int3
iret
in
adc
and
or
dec
sahf
ds
outsb
imul
pop
test
jmp
lahf
adc
loopne
xor
pop
and
xchg
out
lret
lods
bound
add
mov
rcr
adc
add
neg
mov
push
stc
adc
les
xchg
pusha
lods
in
imul
ret
cmc
push
data16
jae
outsb
ficoms
jno
pop
das
and
pushf
pop
gs
dec
mov
sub
cmpsb
ss
call
mov
lds
pop
sarb
mov
fwait
or
in
hlt
inc
jmp
adc
into
shll
mov
and
out
cld
dec
mov
ss
aas
mov
pop
pop
decl
fiadds
sbb
cs
and
add
add
pop
lds
in
ret
xlat
inc
aad
xor
bound
mov
sub
or
mov
imul
cmpsl
adc
push
mov
mov
push
ja
push
jbe
hlt
mov
out
mov
push
xor
xor
xchg
pop
adc
jne
push
xor
stos
lock
ja
shr
shrl
mov
and
aam
jg
arpl
test
jbe
sub
int
sbb
pop
sub
xor
or
cmpsb
cld
outsb
or
add
cmc
mov
sbb
mov
cmp
mov
stos
stos
iret
in
inc
dec
jno
ds
dec
inc
outsb
pop
fisttpll
gs
push
lds
push
xchg
xlat
rorl
jne
sbb
aad
xorb
arpl
add
mov
sbbl
mov
xor
daa
jns
ljmp
adc
jmp
into
stos
cmpsb
inc
xor
fisttps
dec
sbb
cs
jp
inc
push
add
call
testb
lds
mov
daa
fwait
ljmp
test
and
mov
inc
mov
repnz
loopne
movsb
fcompl
lea
mov
sbb
mov
sarl
or
xchg
cmp
sbb
arpl
mov
bound
fbld
cmp
icebp
movsl
out
sub
sub
je
fsubrs
mov
sbb
rol
add
add
or
mov
or
jae
jnp
or
cmpb
hlt
adc
in
in
aad
sbb
xchg
ror
setae
adc
addr16
sbb
pop
sub
sbb
adc
mov
or
pop
add
mov
dec
push
js
jbe
mov
mov
test
push
pushf
xor
and
add
lods
fstp
jecxz
or
rcll
xor
dec
push
out
iret
roll
in
xchg
add
or
push
popa
mov
jecxz
mov
pop
xchg
push
loope
jle
or
insb
daa
dec
int3
jmp
push
jge
outsb
push
ljmp
xchg
cmp
popa
jbe
pop
and
out
pop
xchg
jbe
jae
or
inc
clc
lcall
or
or
sub
in
scas
ja
xor
repz
xorb
push
cltd
int
fdivrs
loope
cli
movsb
daa
mov
lods
jo
mov
stos
dec
jl
xchg
xchg
dec
sar
gs
xchg
outsb
jecxz
mov
rcll
stc
push
lods
sub
jg
pop
outsw
out
movsl
fcmovnbe
cmp
jbe
and
test
push
xlat
cmp
fnstsw
dec
cmp
pop
add
push
in
cli
stos
pop
add
insb
stos
cmp
imul
fcmovu
pcmpeqw
mov
mov
sbb
std
popf
loop
mov
mov
pop
fimull
xchg
subl
xor
add
in
and
sbb
mov
adc
mov
dec
push
adcb
pop
ds
pop
or
ret
sub
sub
mov
sub
leave
push
inc
adc
icebp
jno
mov
jge
mov
adc
push
xchg
inc
and
or
sbb
enter
lcall
inc
inc
call
mov
lock
and
dec
fcomps
and
mov
and
pop
pop
pop
mov
adc
mov
xor
scas
adc
lock
jno
xchg
xchg
es
xchg
cmp
and
add
sbb
xor
mov
movl
push
ret
into
cmp
cltd
push
lea
push
and
pusha
out
call
outsl
inc
xor
and
mov
shrl
cmp
xchg
popf
imulb
in
mov
mov
cmp
cwtl
jle
incl
xor
jnp
test
addr16
daa
mov
popf
or
lcall
pop
rolb
and
out
or
add
mov
adc
xor
inc
mov
xorl
imul
cmp
push
mov
pop
mov
int3
movsl
mov
pop
or
push
inc
ret
call
lock
mov
sub
push
mov
dec
xchg
mov
arpl
shrb
lods
xorl
jnp
movsb
shr
sbb
stos
sbbb
aas
push
push
push
and
pop
je
repz
mov
test
jne
arpl
and
jg
std
cmpsl
lock
mov
or
neg
movsb
in
push
xchg
sub
cmp
in
jle
movd
push
push
sbb
rcll
or
adc
adc
cmc
lea
outsb
enter
sub
mov
jae
ljmp
lock
xor
mov
sub
or
sbb
repz
xchg
inc
sti
and
sbb
lcall
xchg
shlb
dec
jge
mov
lds
loop
adc
rcrl
sub
in
xor
sub
or
pop
sbb
scas
mov
xlat
and
lds
aad
mov
popw
and
lea
pop
xor
scas
and
arpl
mov
shl
xchg
jae
les
mov
movaps
aad
xor
imul
xor
add
mov
pop
fscale
loopne
mov
dec
adc
mov
jmp
push
adc
jns
movsl
dec
imul
jg
rorl
popa
cld
add
scas
cmc
outsl
push
sahf
mov
pop
ficoml
xor
shll
aaa
out
jae
fs
ljmp
pusha
sbb
push
mov
roll
inc
xchg
push
or
push
sahf
fdivs
gs
popa
js
clc
das
cmp
pop
fistpll
es
fiaddl
push
sub
sbb
sti
sti
inc
cld
jns
and
add
cmc
xlat
xor
xor
fnsave
sar
ja
loopne
xchg
xor
adc
aaa
fistl
lret
jnp
imul
push
jmp
add
mov
xchg
cmpsl
mov
mov
insb
lret
ret
jge
lret
lcall
push
pop
int
add
add
int3
cmp
cli
lea
pop
loopne
pusha
pop
jbe
loopne
iret
outsl
sbb
jge
sub
or
cmp
mov
adc
filds
filds
jne
mov
xchg
movsl
sub
push
push
pop
das
or
bound
add
sti
hlt
fstl
test
fnsave
add
jecxz
addr16
cmc
in
hlt
sti
push
xchg
dec
ja
mov
shll
popa
stos
fidivl
mov
push
xor
push
xor
lahf
mov
push
into
inc
push
add
mov
inc
outsl
xchg
or
das
jle
xlat
fldcw
dec
pop
jnp
cmovge
test
inc
insb
dec
into
xor
arpl
lods
jg
cs
mov
jg
sarl
ret
mov
in
push
outsl
out
mov
dec
pop
test
call
sbb
jno
out
cmpsb
push
movsl
fbld
loop,pn
dec
sbb
xor
mov
loope
shll
mov
mov
dec
fcoms
aad
shll
adc
fildl
jbe
jo
push
sub
push
ret
addr16
leave
lcall
push
ret
out
jo
push
xchg
aas
jp
mov
sub
inc
mov
dec
pop
cmpsb
cmc
in
push
fsubrs
adc
lea
lcall
jg
lcall
call
pop
mov
or
jae
shlb
out
add
imul
jmp
and
sbb
xor
and
or
fwait
cmp
sbb
call
je
das
fstl
sub
clc
ret
push
enter
push
jae
nop
dec
jge
movsb
jns
js
daa
in
shll
fcompl
push
xor
out
cltd
int
mov
inc
cli
xlat
and
jecxz
mov
rep
clc
in
scas
arpl
fstl
aam
mov
or
inc
and
xor
repnz
pop
jbe
pop
jnp
stc
sub
cs
ja
bound
cmc
sbb
repz
sbb
jl
mov
fnstsw
popf
or
mov
into
push
xor
push
sbb
fdivl
stos
dec
adc
ds
jle
fdivr
hlt
test
shlb
push
inc
inc
stc
imul
cmp
pop
dec
lcall
sbb
jl
sbb
repnz
notl
push
push
insb
jnp
push
sahf
adc
mov
pop
aad
mov
jg
lcall
lea
jl
xchg
nop
jg
mov
or
rol
je
push
jecxz
call
inc
mov
mov
inc
mov
out
mov
mov
ljmp
push
mov
mov
mov
mov
stc
jge
mov
cmc
push
sub
inc
pop
xor
movsb
sahf
js
mov
daa
mov
ja
jbe
sbbb
and
std
lcall
pushf
sub
push
xchg
mov
out
mov
or
nop
cmp
inc
inc
sub
dec
adc
shrb
xchg
in
xor
test
js
js
xchg
cwtl
out
and
pusha
pop
mov
cmp
fcmovne
lea
pop
mov
lret
test
imul
or
sbb
lahf
push
mov
aas
enter
or
leave
adc
mov
jae
js
int3
call
nop
lods
addr16
jnp
test
loop
cmc
pusha
xor
and
dec
pop
dec
mov
adc
popf
jno
je
push
in
dec
mov
mov
test
stos
push
xor
pusha
out
push
test
or
movsb
and
and
pop
pop
jne
mov
jnp
xor
pop
repz
addr16
test
dec
mov
cmp
xchg
shll
dec
shrl
push
inc
mov
push
xchg
cs
movsl
xchg
mov
xchg
lret
mulb
xchg
pop
pop
rcrb
mov
test
mov
jge
cmpl
inc
xor
and
or
xchg
orl
in
adc
and
pop
inc
aad
dec
and
insb
and
and
mov
addb
xor
sbb
jbe
into
mov
add
mov
push
cmpl
and
fdivs
dec
or
and
hlt
xchg
cld
push
insb
ss
xor
mov
addb
cmc
jb
add
lret
testl
test
jae
push
outsb
jle
push
adc
mov
or
sbb
mov
inc
mov
test
sbb
cmc
je
add
imul
lock
xorb
stos
repz
ljmp
icebp
rcrl
xchg
lods
jmp
clc
inc
or
leave
loopne
cmc
push
xor
aam
jecxz
dec
pop
adc
shrl
gs
lock
insb
fimull
loope
mov
dec
pop
sahf
or
cmp
mov
stos
push
je
fs
mov
stos
aam
xchg
pop
jmp
push
mov
cmpsb
jle
lods
gs
mull
cltd
inc
clc
into
add
rcrb
scas
repnz
add
sub
sbb
jno
lea
or
mov
test
xor
dec
cmpsb
mov
cmpsl
mov
out
pusha
insb
pop
cld
xchg
shrl
jnp
or
cltd
mov
adc
sub
cltd
xchg
out
cmc
mov
rclb
cmp
stos
jl
add
xlat
andl
aam
shr
ds
inc
mov
xacquire
push
dec
xchg
mov
cltd
sub
out
add
or
pop
out
sbb
mov
ja
xlat
pop
xor
pusha
sbb
in
adc
movsb
gs
inc
mov
cmp
ds
xor
lret
cmp
cmp
mov
int
test
push
xlat
stc
cs
xchg
cld
mov
imul
pop
mov
fnstenv
fldt
mov
outsb
inc
sub
xchg
and
cmc
adc
hlt
rorb
xlat
mov
push
add
xlat
xchg
and
popf
inc
lods
dec
sbbl
js
iret
inc
xor
push
in
pusha
push
sub
call
jns
push
mull
in
popf
mov
sahf
and
mov
jmp
fisttpl
push
adc
in
sub
xchg
arpl
lods
xor
add
adc
xor
jge
sub
mov
orl
mov
hlt
jl
hlt
repnz
lret
fnsave
push
mov
mov
push
adc
addr16
or
push
int3
inc
sbb
adc
jo
push
push
and
lahf
mov
lds
jg
jne
out
mov
xchg
fists
and
pop
cmp
push
mov
xchg
stos
shr
add
outsb
xchg
stc
imul
or
ret
inc
cli
cli
out
std
xchg
cli
mov
dec
dec
cmp
rol
insb
mov
popa
lcall
pusha
mov
or
mov
je
inc
lods
inc
cwtl
push
lret
xchg
mov
pop
inc
xor
idivl
push
xlat
sarl
adc
fdivrs
inc
and
sub
test
orl
movsb
cltd
jbe
push
mov
xchg
jg
jg
jb
daa
cmp
test
jne
fbld
in
xchg
add
mov
add
mov
inc
adc
loopne
jl
jge
dec
sub
popa
dec
cmc
call
adc
inc
in
frstor
push
xor
test
xchg
sub
inc
decl
jne
fsts
cmp
jmp
es
imul
pop
test
jp
shlb
and
dec
fwait
jle
adc
out
pop
jmp
mov
out
sub
dec
lret
mov
lcall
lods
test
cmpsb
jp
inc
pop
lret
pop
pop
fidivrl
mov
int3
push
hlt
ja
sbb
cmp
testl
in
push
cmpsb
lds
sub
and
sub
notl
pop
adc
leave
lock
scas
adc
dec
push
jmp
dec
rorl
push
fwait
xor
out
js
fstl
out
ja
pop
push
add
adc
and
and
cmc
cltd
or
lds
in
aam
lcall
jnp
fldt
daa
inc
jmp
pushf
outsl
adcl
adc
lcall
pusha
in
sbb
pop
sbb
aad
out
push
xchg
enter
call
out
pushf
jbe
cwtl
into
idiv
xchg
sub
mov
mov
sub
ja
mov
adcl
test
sbb
in
lods
xor
pop
jle
push
mov
mov
sub
ret
add
imul
and
enter
sub
or
ffreep
mov
xor
and
jns
mov
mov
add
shll
and
xchg
sub
xchg
xchg
mov
out
mov
adc
mov
mov
push
jne
mov
inc
out
dec
pop
inc
cmp
pop
pop
out
shrl
mov
popa
aam
ja
shlw
test
fiadds
and
in
dec
inc
push
mov
xor
outsl
xchg
shl
cs
xchg
aad
adc
shrb
mov
sarb
popf
ja
movsb
mov
jns
sbb
clc
push
scas
adc
mov
jle,pt
cmc
jecxz
bound
shrb
das
rcr
ss
sti
cld
jecxz
lods
mov
divps
loope
push
pushw
fwait
inc
inc
popf
insl
mov
das
pop
outsb
leave
dec
ret
adc
stos
in
push
cmpsb
xlat
xchg
mov
pop
daa
sbb
lret
jmp
pushf
xor
pop
pop
gs
dec
les
fsincos
out
jo
jg
jmp
lods
dec
outsl
sub
inc
dec
aas
and
inc
adc
int3
sub
add
dec
push
xchg
xor
lret
mov
shlb
dec
pop
out
call
adc
inc
les
popa
movsl
push
je
scas
test
int3
fisttpl
data16
sbb
add
jne
xchg
fdivr
add
stos
or
loope
mov
lods
add
nop
imul
shl
incb
sbb
cli
dec
in
dec
xchg
adc
repnz
rclb
push
out
and
cmp
cmp
mov
sahf
stos
push
fadd
ret
lahf
imulb
xchg
fmuls
ret
fstpl
dec
add
sub
incl
cli
test
xor
sub
mov
mov
or
aas
mov
push
xchg
sbb
scas
inc
fs
ljmp
icebp
sbb
and
cmp
sbb
shll
iret
bnd
ret
gs
std
cmp
lods
xor
sub
push
push
and
jp
cmp
inc
stc
fwait
cmp
xlat
rcrl
leave
roll
pop
cmp
pop
mov
sbb
and
ror
aaa
jle
idiv
jecxz
jns
aam
sbb
mov
jg
mov
mov
mov
jb
repnz
pop
cmp
jg
sub
adc
push
hlt
movsl
add
mov
push
sbb
mov
or
mulb
cmp
dec
pop
jecxz
pop
add
sahf
jne
lcall
ljmp
repz
addl
loop
mull
xor
mov
fwait
adc
popa
js
mov
shlb
xchg
test
mov
test
lds
jmp
popf
insb
push
cmc
push
dec
popa
mov
pushw
mov
pop
in
rclb
in
sub
addb
call
fcoms
jb
mov
fidivs
mov
add
pop
or
adc
nop
leave
into
sub
daa
leave
push
je
adc
lods
dec
stos
xchg
enter
mov
or
mov
xor
iret
sbb
cmc
push
movsl
ret
mov
pushw
out
sub
mov
and
imul
cmpsb
jbe
fisttpll
cmp
push
jbe
cmpsb
addb
cmp
pop
add
pcmpgtw
shrl
inc
repz
and
sbb
jnp
or
push
ljmp
fadds
gs
push
arpl
sti
jo
adc
mov
jbe
ret
out
push
shll
andl
out
or
cmp
test
fnstsw
mov
sub
shll
test
dec
cmc
add
cld
clc
cmpsb
adc
mov
mov
sarb
mov
int3
ja
xlat
pop
loop
mov
cmpsb
xchg
inc
mov
push
push
ss
dec
push
lahf
scas
pop
cmc
jp
inc
cli
jae
add
or
pop
pushf
test
jmp
and
subl
outsb
push
inc
dec
iret
xchg
mov
jbe
shll
test
cmpsb
dec
call
ss
fs
add
sub
out
stc
ror
leave
test
mov
mov
add
dec
xchg
aad
testb
mov
lret
pop
xchg
xchg
or
stos
mov
xor
xor
mov
fdivl
xor
sbb
inc
hlt
xorl
xchg
test
mov
add
ret
or
fcompl
inc
mov
testb
subl
ljmp
inc
int3
mov
mov
test
xchg
push
hlt
aaa
pushf
shll
and
mov
jg
loope
bound
enter
push
jl
and
mov
or
inc
xchg
scas
lret
aam
mov
scas
or
outsl
jb
lcall
je
jae
icebp
xor
aam
fnstenv
xchg
xchg
int3
mov
mov
pop
pop
fwait
xchg
adc
ds
xchg
pop
test
in
or
add
aam
push
and
fsqrt
imul
push
mov
sarb
daa
push
mov
std
sbb
dec
cs
jge
enter
ljmp
dec
mov
shl
dec
jnp
inc
sbb
ss
dec
repnz
scas
adc
xchg
jnp
movsb
imul
push
repz
bound
adc
fimull
jo
mov
lods
enter
mov
xchg
lods
sbb
fdivrs
mov
jecxz
mov
addr16
push
inc
lret
test
add
mov
and
mov
pop
push
cmpsb
or
add
loope
cli
in
push
inc
mov
mov
insl
add
xchg
xor
fidivrs
enter
jo
icebp
or
push
mov
cli
out
push
mov
or
xchg
outsl
adc
xchg
repnz
and
or
sbb
push
or
andl
dec
lahf
sub
rolb
jle
test
dec
hlt
jnp
lods
add
xchg
daa
cmp
jge
std
aas
std
int
roll
xchg
mov
cld
imul
jns
ljmp
mov
lock
mov
mov
fildl
sub
mov
dec
cli
inc
hlt
xchg
xchg
mov
test
xor
cs
or
sbbl
cmp
into
add
ss
clc
lcall
sarb
shlb
push
je
test
int3
or
imul
das
jb
hlt
stos
fcmovnu
pop
mov
inc
iret
sbb
push
inc
push
lods
jns
mov
in
inc
inc
mov
cwtl
outsl
xchg
test
cld
and
mov
loop
xchg
mov
dec
push
jns
or
es
xchg
loope
mov
dec
pop
pop
outsb
or
dec
push
sbb
adc
mov
enter
and
je
in
mov
sbb
gs
clc
aas
and
pop
lahf
mov
ljmp
xor
push
sbb
push
out
and
pop
in
in
repnz
push
rcrb
test
cmpsb
xchg
jecxz
jb
mov
into
jmp
pop
aad
push
test
out
dec
cmp
xchg
jbe
ja
inc
and
push
fwait
mov
dec
xchg
push
xor
jl
jo
sti
mov
adc
lcall
or
enter
lods
cwtl
sahf
hlt
dec
cld
jns
add
jo
dec
aad
mov
xorb
js
mov
push
dec
clc
cmp
cwtl
aad
push
int3
pop
lods
inc
xor
movl
je
xchg
pushf
out
lcall
push
or
jbe
sbb
add
and
cmp
pusha
jecxz
pop
shll
sub
div
pop
insb
cltd
jp
ret
mov
mov
out
pop
push
ja
cmpsl
sahf
cltd
push
jle
sub
mov
jle
pop
mov
repnz
leave
push
xor
ret
pop
push
and
scas
and
sbb
sbb
mov
xchg
push
push
ss
ljmp
sti
cmp
adc
pop
mov
fucomp
icebp
adc
cltd
les
or
push
leavew
adc
lock
test
inc
in
sti
out
mov
push
xor
sahf
mov
rclb
into
xchg
roll
movsl
xor
gs
fwait
inc
push
fnstenv
orl
cmp
pop
leave
cmp
aad
rorb
sbb
js
icebp
dec
das
add
lahf
or
xor
vxorps
arpl
je
loop
mov
xchg
or
pop
cltd
add
ja
shr
popf
lahf
vpunpckhbw
lret
scas
lods
mov
inc
repnz
xchg
subb
pop
pop
and
or
push
repnz
or
test
data16
pop
xor
negb
jbe
fwait
sti
xchg
ret
lret
xor
imulb
fistps
std
icebp
or
ds
arpl
mov
out
out
stos
shll
idivb
pop
xor
sti
out
pop
sbb
mov
jne
fistpll
sub
xchg
out
dec
fcmovu
ljmp
adc
adc
loopne
call
nop
mov
sub
cli
adc
jge
mov
es
sbb
bnd
cmp
sub
pop
pusha
mulb
fcompl
sbb
xlat
jle
cmp
inc
inc
in
sbb
je
mov
lahf
or
cmp
inc
stos
push
dec
mov
test
sub
out
mov
mov
ss
and
adc
push
jmp
cmp
daa
mov
sbb
sub
push
mov
mov
in
sbb
mov
mov
add
sbb
jns
hlt
loope
sub
jb
mov
movsl
iret
cwtl
movsb
notb
inc
push
loopne
lds
xlat
add
scas
mov
out
rolb
pop
xor
jo
xchg
fists
or
mov
stc
cmp
jp
mov
pop
shrl
cmp
es
pop
mov
stos
daa
inc
ja
pop
dec
xchg
cmpb
inc
icebp
xor
nop
or
dec
jne
mov
out
mov
mov
xor
sub
popf
jo
push
dec
mov
add
out
and
sub
cmp
or
cmp
pop
xor
mov
mov
dec
sub
lea
sbb
push
pop
sbb
adc
lods
iret
push
pop
sub
inc
dec
jno
jge
loope
pusha
aas
mov
into
mov
int
add
mov
jnp
cmpsb
jg
imul
sbb
push
adc
cmp
jb
cmp
cmp
cmp
push
xchg
in
mov
mov
or
add
popa
mov
fwait
jne
ljmp
repz
xchg
orb
pop
hlt
filds
xor
or
pusha
leave
out
adc
jns
and
stos
mov
fwait
sbb
ss
mov
and
movsb
int
dec
scas
xor
jp
lahf
and
mov
leave
stc
insb
push
mov
dec
jne
mov
movsl
sarl
gs
dec
js
scas
cmp
and
cli
add
pop
jne
cld
dec
cmc
mov
xorl
les
mov
out
mov
mov
repz
popa
adc
test
hlt
fcomps
rclb
jecxz
scas
xchg
and
mov
ret
ljmp
and
ljmp
imul
mov
aaa
stos
pop
sub
shl
lea
ret
lret
xor
mov
mov
dec
lods
inc
sbb
xor
vcvttpd2dqx
aas
ljmp
sbb
stos
jmp
cltd
outsl
aam
mov
sub
insl
bound
mov
cmp
lcall
xor
aam
mov
mov
mov
je
hlt
jbe
mov
push
testl
or
or
adc
stos
pop
out
ja
adcb
sbb
push
rcr
scas
lds
pop
jb
lret
cmp
push
inc
and
cmc
pushf
add
or
dec
add
xchg
push
imul
sbb
jecxz
in
push
and
xchg
test
scas
push
cltd
sbb
movsb
jb
xlat
cmpsb
pop
jg
cmpsl
fimuls
mov
arpl
lahf
adc
pusha
imul
push
jle
mov
not
xorl
or
addr16
movsl
pushf
adc
xchg
sbb
aad
les
out
and
scas
dec
aaa
sarb
ja
sbb
xchg
lea
clc
es
lret
sbb
fidivrl
jbe
mov
inc
push
cmp
jg
push
fwait
jb
ds
mov
imul
pusha
decb
inc
das
jl
test
jl
int3
xchg
inc
insl
xchg
sub
and
lods
or
cltd
stc
pop
clc
sub
jle
and
mov
adc
fcomp
cmp
outsb
xlat
rcll
or
push
testb
iret
sbb
fs
arpl
jecxz
push
push
add
sar
fwait
popl
outsl
rolb
inc
scas
pop
fwait
icebp
cld
rcl
sub
ljmp
push
sarl
ds
mov
inc
mov
loope
sahf
rol
xchg
dec
mov
insb
jns
xchg
lret
data16
xor
add
lods
nop
or
arpl
cmc
call
pop
xchg
cmp
pop
inc
movsb
mov
sbb
sbb
cmpsb
lea
dec
sbb
test
push
ret
addr16
test
mov
cmpsl
mov
push
mov
nop
int
aaa
push
or
dec
pusha
pop
pop
xchg
arpl
lret
loope
scas
call
xchg
adc
push
nop
mov
xor
jb
stos
cltd
dec
sbb
mov
repnz
xchg
imul
aad
xchg
add
sub
or
ficompl
add
imul
adc
xchg
ffree
sub
mov
je
and
or
shl
rcrl
stos
sti
sub
andb
mov
cltd
leave
mov
sub
cmpxchg
les
xchg
fs
div
fsubrp
fidivrl
arpl
jne
ffreep
movsb
scas
add
or
push
adc
subl
iret
shl
divb
xchg
cmp
and
fwait
loope
sbb
fdiv
sub
and
or
leave
out
mov
or
fimull
sbbb
push
negb
js
sbb
mov
shl
or
jae
mov
lcall
shll
adc
pop
or
cmp
nop
jns
jo
mov
dec
push
mov
lcall
jae
mov
lcall
ret
xor
jbe
pop
rcl
pusha
xchg
jnp
out
add
mov
aam
inc
add
adc
les
cmp
mov
cmpl
arpl
xchg
inc
xchg
mov
xchg
shll
or
xchg
mov
add
push
adc
mov
mov
loop
sbb
mov
sbb
out
cmp
add
ret
jne
fwait
push
shlb
dec
inc
pusha
xchg
repz
mov
scas
xchg
or
andb
movsb
jbe
in
jbe
or
in
push
shrl
mov
dec
fst
or
mov
das
mov
dec
mov
lds
mov
push
and
pop
push
pop
mov
adc
lret
xchg
sub
fucom
shl
jle
dec
ret
and
mov
mov
sarl
sub
mov
les
bound
cmp
xor
aaa
je
fnstsw
ret
lds
pop
dec
rol
fidivrl
movsb
xlat
mov
mov
cmpsl
inc
xchg
lds
jp
ret
mov
xchg
mov
xchg
aad
sub
dec
jl
insl
dec
lret
imul
adc
sub
push
rorl
fwait
jle
shlb
and
add
push
mov
mov
sbb
mov
pop
mov
and
cltd
jle
xor
dec
test
cmp
pop
mov
adc
iret
neg
daa
push
xchg
jecxz
lods
nopl
xchg
ret
xchg
call
ret
xchg
test
int
add
jmp
cltd
out
ja
push
into
scas
sbb
xchg
repz
and
leave
lret
mov
int
and
push
iret
add
iret
cli
aad
and
push
ja
xchg
pop
push
inc
test
loop
and
push
rclb
ljmp
cs
lea
add
hlt
sbb
movsl
mov
jl
adc
addr16
pop
addl
test
ret
push
neg
adc
xchg
addr16
adc
jle
xlat
push
add
cwtl
in
mov
or
sbbb
xor
sbb
add
in
sbb
xor
mov
es
icebp
pop
jecxz
test
inc
mov
push
loop
divb
cmpl
xchg
xchg
push
pop
in
les
adc
and
nop
cmc
inc
scas
aad
in
pop
mov
ficompl
repz
inc
adc
or
cmpsb
dec
das
jl
pop
xchg
sarb
rorl
pop
xor
inc
adc
clc
push
rorb
push
jle
scas
mov
add
mov
aad
into
cli
shlb
gs
shrb
xor
mov
roll
push
daa
mov
and
fnstcw
imull
cld
mov
and
aam
loop
push
xchg
out
ficompl
cli
fsub
add
flds
mov
push
mov
sbb
imul
ret
cmp
sti
add
mov
movsl
jns
jp
outsb
sbb
andb
jb
shll
in
lret
popf
add
add
sbb
jae
fidivrs
sub
pusha
and
das
aam
cmp
test
fstpt
xor
mov
fists
lock
mov
adc
roll
pop
inc
jmp
fs
pop
lods
cs
jnp
hlt
cmpsl
pop
call
jns
mov
out
pop
call
mov
sbb
fs
sub
mov
and
jne
xchg
rcl
sbb
pop
testl
test
ret
xchg
shrb
mov
fdivr
loopne
rsm
mov
jae,pt
inc
sub
pop
mov
dec
push
lret
test
sbb
aas
cmc
jp
gs
xor
loope
mov
sub
out
xchg
jo
fbld
pusha
daa
mov
dec
xor
push
mov
adc
inc
lds
cwtl
das
aam
adc
dec
push
mov
xor
scas
push
ljmp
ja
mov
inc
addb
cwtl
mov
mov
mov
mov
sti
ret
mov
jmp
pop
cmpsb
cmc
mov
mov
or
inc
ror
or
loope
inc
test
push
sub
xchg
ja
jg
ja
cmp
pop
stos
insb
adc
xchg
dec
shlb
jg
scas
dec
cmp
daa
into
jnp,pt
or
sub
fldcw
push
cmp
add
push
mov
xchg
inc
add
jno
daa
mov
push
setb
mov
sbb
adc
mov
rorb
jb
push
xor
inc
dec
fldt
and
jecxz
sbb
dec
mov
lea
adc
adc
jne
adcb
push
push
dec
int3
movsl
mov
fnstsw
scas
inc
lcall
or
ljmp
xchg
in
mov
push
pop
cltd
push
push
dec
in
clc
lds
pop
adc
jp
sar
pop
xor
cmp
in
leave
lods
mov
int
ja
inc
dec
repnz
pop
fst
lcall
and
call
xor
lds
out
cmp
mov
sub
push
das
jmp
sub
push
push
mov
repz
push
or
imul
stc
ret
pop
push
xchg
das
xchg
jp
nop
mov
cmp
mov
out
dec
mov
lret
ljmp
jo
sbbl
or
mov
sahf
push
out
adc
inc
mov
add
inc
adc
xchg
xorb
imul
ficompl
cld
add
dec
jnp
or
add
loop
lahf
ss
xchg
movsl
cs
out
das
out
lds
xchg
fnstsw
xlat
sahf
pop
inc
cs
pop
and
sbb
push
rep
push
arpl
lcall
add
jno
insl
xchg
push
std
fiadds
jae
test
fdivrs
or
inc
xor
rolb
cmpsl
xor
ret
ss
pop
popa
in
fcoms
imul
call
fcoms
cmpsl
push
mov
inc
repnz
pop
in
mov
scas
mov
pop
adc
lock
and
ds
cmp
fs
iret
enter
test
mov
mov
jle
inc
pop
divl
jb
nop
cmp
lods
lds
negb
cmp
mov
sbb
inc
push
or
fstpl
es
dec
lret
pop
dec
enter
cmp
push
ret
mov
or
mov
xchg
popa
xchg
lea
mov
jg
push
jne
mov
mov
idivb
dec
repz
aaa
popa
fldenv
cmp
test
lds
stc
daa
arpl
mov
lcall
jmp
or
dec
pop
adcb
mov
pop
mov
or
aas
gs
test
mov
push
rol
push
xchg
fsts
adc
xchg
cmp
or
hlt
xchg
pop
js
stc
pop
jge
subb
clc
rcrl
xchg
mov
lds
add
inc
dec
push
add
loop
ret
push
adc
add
or
inc
int3
fistpll
cltd
std
mov
call
xchg
insl
sbb
dec
add
aaa
sub
fsubrs
test
push
pop
addr16
int3
nop
lods
xor
push
sub
idivl
imul
out
in
xchg
cmpsb
adc
inc
xor
add
and
xlat
adc
pavgb
dec
lret
clc
jge
test
cld
xchg
jns
pop
xchg
divl
push
mov
movsb
fiaddl
rclb
sbb
test
stos
repz
in
fs
dec
cmc
lods
and
cmp
dec
jbe
cltd
xchg
xor
js
sub
cmp
mov
jge
mov
shl
mov
and
mov
lods
insb
and
je
movsb
ljmp
lds
ret
in
popf
js
scas
sbb
pop
sub
sub
cmpsb
mov
cmp
rorl
in
push
mov
out
jecxz
movsb
pop
mov
xor
sub
int
jb
test
mov
mov
imull
push
cmp
xchg
cmp
adc
icebp
xchg
xchg
xor
jg
lcall
adc
jl
mov
clc
push
pusha
loopne
mov
testb
push
lea
rolb
add
je
and
ds
pop
dec
pusha
push
movsb
in
jecxz
push
hlt
mov
mov
arpl
jecxz
xchg
xchg
xor
jo
insb
jl
outsl
push
jnp
pop
pop
sub
jmp
inc
aaa
xchg
into
lret
mov
push
call
sub
ret
pop
fcmove
xor
movsb
shlb
xchg
and
into
fdivl
add
dec
lods
sbb
pop
lods
fcoms
xchg
sub
or
dec
dec
inc
inc
pop
js
call
sbb
clc
in
divb
mov
push
movsb
mov
sub
and
dec
loope
lods
pop
cmp
jg
repz
int3
repnz
inc
sbb
imul
push
in
lahf
xor
mov
adc
and
shl
imul
fwait
nop
xor
xchg
xchg
rorl
jge
aam
xor
mov
movsb
jg
cli
cmp
mov
xchg
outsb
mov
push
and
pop
aam
jmp
popf
hlt
add
push
cmp
add
jae
adc
xor
not
add
daa
mov
mov
cli
daa
push
clc
cmp
imul
test
and
stos
jge
retw
roll
bound
out
scas
rcll
sub
xchg
xchg
aas
test
movsb
or
icebp
add
movsb
push
ret
data16
and
jp
push
mov
push
mov
sahf
icebp
jae
add
ret
xchg
icebp
fwait
mov
in
xor
jne
xor
push
orb
dec
loopne
test
mov
mov
mov
lret
lods
lods
or
aas
mov
fwait
sub
lret
mov
adc
dec
movsl
or
adc
jb
cmp
loop
pusha
imul
xchg
xor
inc
lds
pop
or
call
movsb
pop
test
cmpsb
fmull
pop
imul
nop
daa
idivl
mov
imul
jp
test
jae
xor
in
cli
and
dec
outsb
push
push
inc
push
xchg
cmp
and
roll
add
mov
pop
xlat
jg
jecxz
push
pop
je
je
fwait
pop
insb
aad
icebp
inc
xchg
and
fwait
test
pop
cmp
dec
ret
scas
out
pop
dec
pop
mov
mov
push
pop
pop
shll
inc
fidivrl
into
dec
jo
inc
inc
or
mov
das
pop
and
sub
subb
movsl
mov
sub
push
cmp
fdivrl
dec
push
dec
sbb
lods
cli
xchg
cmp
call
xor
fs
daa
pop
and
imul
int
ljmp
sub
jo
leave
fcmovb
fldcw
or
sub
jmp
pop
or
and
push
mov
and
and
lcall
jo
pop
hlt
mov
lcall
cmp
data16
and
xchg
jbe
scas
cli
je
aas
clc
enter
cmp
lods
xor
cmpl
pop
push
adc
sub
add
jp
imul
and
mov
addl
dec
push
mov
inc
jl
dec
cli
cs
mov
xor
aam
loopne
sbb
adc
push
ja
bound
mulps
sub
cmp
insb
sahf
push
insl
fisubrl
imul
xor
inc
sub
mov
test
cli
inc
xor
sbb
push
cmpsl
mov
mov
jmp
xchg
jo
add
add
add
add
push
inc
mov
mov
jmp
lock
push
or
das
adc
lods
daa
fmull
and
dec
pop
nop
xchg
jl
xor
loop
sti
incl
sarb
rorb
test
loop
xchg
test
mov
cmp
jmp
fdivr
lock
add
jge
sub
ds
rclb
fdivs
mov
cmp
push
ds
movsb
mov
sbb
pop
cld
xchg
mov
js
std
lret
jmp
fdivrs
lods
xor
cmp
and
pop
dec
js
sub
sub
popf
jecxz
stc
lea
imul
jmp
mov
jbe
sbb
arpl
dec
cmp
mov
and
sbb
lret
pusha
cmp
adc
adc
scas
fcoml
inc
cmpsb
icebp
ret
cmc
dec
mov
xchg
mov
cwtl
jg
lock
test
in
icebp
outsb
ds
pop
mov
mov
arpl
sbb
fadd
out
sub
lret
jb
mov
test
dec
sub
inc
in
dec
out
jne
xlat
lret
jns
and
lcall
je
test
dec
sbb
dec
loopne
into
lret
jb
lods
sub
scas
jmp
loopne
mov
pop
xchg
pop
mov
pusha
adcb
sub
mov
js
cmp
fcmovb
lods
inc
cmp
mov
inc
and
jmp
in
aas
popf
adc
sub
cmp
ss
ss
mov
mov
scas
test
jecxz
icebp
int3
adc
push
sbb
pop
imull
and
xor
cmp
push
cwtl
insb
pop
add
xlat
lock
jmp
test
jg
loop
add
dec
mov
cld
or
lock
xchg
mov
mov
shl
cli
jge
pop
stos
call
inc
rorb
addl
mov
out
clc
or
push
or
data16
adc
jne
addr16
mov
dec
mov
push
data16
cmpsl
inc
or
or
je
cmpsb
mov
daa
and
sbb
mov
and
pop
sbb
push
repz
aad
dec
mov
cli
in
sub
jmp
adcb
fwait
test
dec
fwait
inc
stos
inc
loopne
and
push
fucomip
addr16
mov
lock
xchg
add
ret
or
insl
inc
enter
sub
testb
xchg
adc
jne
cld
sbb
xor
xchg
or
cmp
scas
sbb
or
cs
testb
push
xlat
cwtl
adc
inc
popa
js
popa
inc
mov
push
inc
fsubrp
mov
cmpsb
add
push
xchg
test
test
int
sbb
mov
arpl
clc
and
pop
addr16
sub
mov
push
stos
bound
cltd
in
xchg
dec
xchg
int
push
sbb
lret
push
and
popa
pop
outsl
repz
cmp
aad
sub
enter
cli
mov
in
fxch
loope
jo
scas
push
mov
inc
add
clc
popf
cltd
daa
xchg
clc
push
push
cmp
addr16
mov
mov
push
jbe
jae
into
mov
mov
adc
push
es
inc
fistpll
jns
mov
and
xor
js
lahf
ss
push
mov
test
fwait
int
or
fwait
dec
stc
rorb
sub
sub
js
mov
cli
cmp
mov
adc
inc
jne
in
add
imul
xchg
add
mov
dec
aaa
lcall
insl
add
cmpsb
lahf
jp
pop
and
jb
mov
xor
scas
and
cmc
in
mov
insb
out
xor
cld
jge
and
dec
mov
mov
pop
insl
push
out
std
ret
or
mov
xchg
sub
mov
jg
es
xlat
test
cmc
rcrl
clc
enter
outsl
das
lods
fcoml
xchg
adc
xchg
xor
xor
add
aad
lcall
pop
xchg
push
push
pop
or
sti
add
and
push
cmc
aaa
adc
aaa
fs
icebp
xchg
mov
mov
in
aam
dec
in
iret
sub
cmp
dec
dec
out
shrb
out
jge
ds
inc
dec
inc
mov
and
adc
lcall
xchg
out
xchg
rcrb
imul
sub
ret
xor
out
je
loope
int3
dec
adc
pop
cmpsl
nop
xchg
repnz
xchg
daa
push
cmc
jmp
sub
or
rol
loop
call
cmc
aam
in
in
xchg
in
nop
xchg
inc
dec
ljmp
sbb
jne
call
pop
outsb
imul
aad
sahf
jo
jge
loope
data16
cs
mov
mov
shrl
dec
xor
mov
mov
mov
mov
out
adc
xor
jmp
sahf
lahf
sbb
outsl
aas
cmp
gs
jmp
flds
mov
mov
xchg
clc
in
fisubs
data16
or
cmp
gs
push
repz
movsb
in
pop
cld
mov
in
sub
cmp
mov
push
scas
or
addr16
xchg
add
imul
push
pop
jle
lea
ret
cld
push
enter
icebp
push
xchg
jns
repnz
cmc
hlt
mov
into
push
sbb
xchg
push
int
orl
and
lcall
testb
pop
adc
js
mov
ds
cld
mov
aas
sub
cmp
cmc
dec
add
cmp
sahf
mov
outsl
dec
push
xor
call
jp
call
iret
shlb
out
in
pop
cmp
cli
int3
out
add
out
notb
add
ja
shll
iret
or
lea
dec
or
or
mov
fisttpl
pop
xlat
cld
xchg
or
in
sub
out
pop
jnp
inc
dec
sbb
repz
fwait
xchg
lods
faddl
jo
nop
sarb
lret
add
shll
xor
stos
cltd
mov
dec
mov
or
dec
repz
mov
mov
pop
ds
jg
imul
cmc
negb
cmpsb
push
adc
mov
icebp
cmc
inc
or
adc
or
test
mov
sub
xlat
shr
mov
popa
shlb
and
incl
bound
dec
pusha
jb
mov
inc
mov
sbb
in
push
xor
xchg
and
or
xor
loope
xchg
hlt
mov
iret
pop
xchg
leave
stos
mov
lock
pop
movsl
mov
fwait
pop
shr
cmpsb
cmp
sub
out
int3
stos
jb
add
jg
std
cmp
stos
imul
loop
addr16
sbb
sub
into
cmp
cmp
jae
xchg
cmp
sub
adc
sbb
xchg
iret
icebp
jecxz
cld
or
xchg
lock
push
out
repz
icebp
test
mov
pop
mov
sbb
fs
pop
jp
stc
mov
sti
add
test
fdivrs
xor
call
mov
in
imul
adc
cli
inc
inc
xor
daa
push
jmp
cmpsl
sub
or
enter
test
mov
jle
pop
dec
mov
sbb
pop
cmp
xchg
int
fdivr
push
cmpsb
pop
inc
xchg
ljmp
dec
out
mov
add
pop
xchg
shlb
mull
lret
cwtl
andl
std
push
pop
mov
jnp
das
ljmp
arpl
lds
push
adc
jp
aam
rolb
jo
or
push
scas
sahf
lea
pop
pop
fwait
xor
cli
jae
out
xor
sbb
mov
cli
jp
jnp
xor
js
loop
fcmovnu
jge
rorl
add
cli
ficomps
xor
addr16
arpl
movsb
push
mov
dec
pop
call
int
and
rorl
jl
aaa
xchg
dec
adcl
into
in
dec
mov
pop
or
es
int3
xor
test
shrl
pop
cmpsb
dec
movsb
sub
or
add
jnp
sbb
outsb
fcomp
mov
xor
bound
sub
mov
nop
sub
scas
lods
inc
in
xchg
xchg
imul
ja
inc
or
pusha
iret
bound
mov
cmp
add
notl
jecxz
mov
lret
add
scas
xor
cmp
push
fildll
pop
add
fistpl
inc
movsl
loopne
repz
movl
push
xchg
int
divb
filds
aad
rclb
xchg
pushf
imul
mov
mov
rcrb
ja
jne
out
inc
jl
ljmp
neg
cs
inc
dec
ja
clc
sub
adc
mov
or
jne
addl
mov
mov
aas
lock
jl
and
stc
and
test
add
sbb
repnz
movsl
ljmp
test
ret
mov
jle
xor
das
shlb
out
out
inc
mov
mov
jae
inc
dec
loopne
push
mov
outsb
jge
or
dec
mov
jbe
les
sub
inc
hlt
xor
in
cmp
cwtl
addl
loope
cwtl
mov
pop
adc
sbb
sub
push
and
xchg
cmp
push
adc
stc
iret
sub
jo
fistl
in
lds
adc
adc
add
push
lcall
ret
push
adc
js
cmp
mov
callw
negb
adc
jmp
int
fcomip
mov
sbb
pop
gs
into
rorl
std
mov
outsl
es
dec
lahf
int3
test
enter
sub
int
js
mov
sti
jl
ja
adc
aaa
mov
or
push
adc
imul
inc
and
sub
in
in
dec
out
mov
pop
repz
inc
and
pop
mov
pusha
in
fnstcw
mov
xchg
add
xlat
xor
adc
mov
xchg
mov
push
ret
jbe
xlat
notb
ret
jle
pop
add
pop
sbb
sbbb
mov
xchg
outsb
and
lods
fs
mov
xchg
pop
fsubr
nop
inc
mov
pop
scas
xor
out
rorb
hlt
outsb
ret
repnz
dec
ds
mov
insl
inc
xchg
push
cmpsl
daa
pusha
xor
iret
clc
dec
and
cmpsl
push
je
mov
fwait
mov
adc
xor
hlt
test
cmpl
jnp
mov
sub
mov
dec
mov
and
addb
sub
sub
lock
fwait
push
add
mov
cltd
mov
pop
add
adc
loopne
sub
adc
inc
sub
test
insb
imul
insb
stos
aaa
mov
adcb
xor
scas
jne
push
stos
out
cmc
or
cld
cmp
sub
clc
jne
push
subb
mulb
inc
or
outsb
sti
test
into
test
clc
cmpsb
mov
xchg
mov
sarb
into
dec
pop
rorl
mov
imul
aas
mov
enter
lods
and
mov
mov
push
cmp
adc
fidivrs
add
jle
arpl
in
stos
cltd
shll
test
xor
popa
dec
lret
pusha
lret
mov
es
int3
mov
clc
int
stc
andl
loopne
je
call
adc
imul
int3
lret
push
ficoml
push
lret
std
dec
mov
imulb
out
jb
lock
adc
xor
inc
loope
xor
ss
jnp
inc
into
mov
mov
adc
rorb
cmp
mov
flds
push
sarb
dec
adc
dec
nop
jge
fisttpll
cltd
js
cmp
not
outsl
sbb
pop
scas
fimull
inc
inc
mov
lds
out
je
push
mov
add
div
out
mov
inc
jbe
sub
in
in
loop
iret
xor
in
loop
mov
pop
setns
cmpsl
lods
and
repnz
mov
or
push
xor
push
xor
add
push
lahf
inc
inc
mov
pop
mov
aaa
iret
push
inc
call
lds
in
stc
xor
fisubrs
and
mov
pop
xor
mov
xchg
inc
or
xchg
jbe
arpl
mov
scas
test
imul
enter
ja
call
fdivs
xor
inc
addb
mov
jbe
hlt
jge
adc
movsl
or
pop
mov
mov
pop
xchg
cltd
imul
mov
loop
icebp
bound
scas
das
fmuls
dec
popf
enter
jb
xor
pop
aad
mov
data16
cmp
iret
jne
out
scas
repz
pop
lods
aaa
testl
scas
jle
or
inc
mov
lods
fsubrp
scas
pop
stos
sbb
outsl
nop
daa
and
jg
sarb
dec
mov
outsb
gs
and
mov
xchg
ljmp
dec
add
jno
shrl
cmp
rcll
imul
and
xor
pop
negb
imulb
adc
pop
push
push
in
jle
clc
cmp
cmc
fnstsw
or
sarb
dec
adc
dec
jl
sti
xchg
adc
inc
mov
mov
sarb
scas
test
push
jl
mov
push
xchg
inc
xchg
leave
and
mov
ljmp
mov
in
jnp
mov
dec
inc
mov
mov
fstp
ret
lcall
sub
push
jmp
mov
call
fnsave
xlat
ss
int3
ja
mov
inc
xor
rcl
inc
call
push
loope
data16
xor
rcrl
and
xor
daa
sahf
add
xchg
xor
cmp
or
adc
mov
lods
push
sti
jmp
shlb
ja
lock
dec
cmpsb
mov
jl
loop
andl
xchg
rorb
cli
push
imull
adc
pop
mov
sub
fwait
xor
scas
hlt
ja
aas
push
mov
dec
add
adcb
push
popf
pusha
and
jo
jg
push
jp
and
cmc
popf
mov
stc
sahf
xchg
dec
sbb
es
mov
and
ja
or
das
xor
lods
aam
inc
dec
cli
sub
jne
std
xor
xor
xchg
dec
mov
ljmp
dec
jmp
mov
pop
stc
fcoml
adc
mov
mov
adc
sbb
and
into
jne
or
lcall
enter
shll
jnp
push
cmpsl
scas
push
lea
pop
adcl
adc
fnstcw
inc
les
std
shrb
mov
jle
mov
sub
push
div
popa
xchg
ds
notb
loope
xchg
jae
sub
repnz
add
ret
nop
jle
gs
lds
sbb
repnz
xorb
mov
mov
sbb
inc
mov
pop
in
jge
xchg
cltd
fldenv
orl
shlb
in
scas
imul
stos
mov
xchg
dec
and
push
out
out
sub
fnstsw
lret
test
out
jecxz
inc
test
adc
sub
jbe
loop
sbb
dec
subb
mov
and
outsb
jne
rolb
sub
mov
fldt
cmp
loope
and
ss
mov
outsb
shrl
xchg
sahf
dec
jne
mov
clc
into
lahf
mov
cmpsb
nop
mov
dec
js
jmp
push
pushf
inc
mov
jb
arpl
aaa
xchg
in
mov
mov
loopne
pop
inc
pop
repnz
or
mov
mov
xor
inc
sbb
adc
jmp
jb
mov
jbe
stos
or
ljmp
sbb
push
mov
sub
and
out
mov
push
inc
daa
repnz
push
and
test
lahf
adcl
dec
push
outsb
in
add
adc
dec
xor
roll
sub
xchg
fs
in
jmp
outsl
push
sbb
iret
mov
das
lahf
ds
jne
pop
fcompl
jbe
pusha
xlat
push
pop
test
leave
leave
dec
imul
arpl
xor
jbe
daa
int
push
lea
decl
adc
leave
sbb
loopne
pop
sbb
dec
sbb
mov
iret
insl
outsl
and
fisttps
in
addb
loop
cmp
repnz
add
stc
rcrb
push
ficomps
sub
jp
stos
push
bound
jge
shlb
or
fnstenv
cmp
test
imul
jo
push
push
fs
popf
repz
mov
push
inc
or
and
push
sub
cmp
aas
ljmp
dec
add
cs
or
out
jbe
xor
data16
fdivl
add
clc
insl
or
push
shrl
sbb
adc
orl
dec
stos
dec
loop
rolb
fstl
in
imul
clc
pusha
mov
cmc
add
dec
gs
pop
mov
mov
add
push
mov
sahf
sar
roll
sub
dec
and
lea
ja
cld
cmpsl
or
out
mov
cwtl
jae
aam
sub
out
stos
mov
mov
fists
pop
jbe
mov
cmp
inc
aad
repnz
lock
es
bound
mov
push
jmp
test
mov
push
cli
fs
les
js
rcrl
adc
cmp
test
push
icebp
push
and
mov
test
push
jns
inc
dec
ret
sbb
add
sub
xor
cli
ret
ss
cmp
push
pop
movsb
outsb
sub
jns
mov
dec
push
push
sub
push
adc
push
mov
push
jne
mov
xor
mov
push
mov
mov
push
sub
ja
sti
add
adc
scas
out
inc
sub
ds
mov
sub
or
hlt
js
shl
jmp
push
jmp
mov
jb
repz
xor
pop
pop
push
inc
lods
dec
sub
pop
sub
lds
inc
insl
jo
xor
adc
pushf
fldenv
add
cs
iret
out
jb
pop
jae
ja
imul
inc
mov
jbe
dec
dec
cmp
sarl
icebp
ja
shr
stos
mov
std
cld
push
fmuls
and
enter
xchg
xchg
adc
sti
lods
shlb
btc
mov
lea
or
inc
aam
ds
pop
jae
mov
mov
pop
lahf
dec
leave
sahf
cmp
and
push
daa
cmpsb
xchg
pop
test
pusha
jg
lds
aas
sar
cld
mov
push
fndisi(8087
jbe
push
and
pop
fs
sub
stos
jmp
test
lahf
or
cli
ja
insb
rcl
test
mov
aas
popa
lea
scas
rclb
sub
notb
ret
out
data16
pop
shlb
in
add
mov
inc
and
mov
enter
fwait
cli
xor
out
xchg
fadd
arpl
loopne
push
jl
push
mov
push
push
inc
xlat
sbbb
testb
and
mov
pushf
xchg
daa
push
push
out
popl
sarb
insl
hlt
dec
dec
pop
jg,pn
dec
inc
push
xchg
sub
push
dec
xchg
add
jnp
mov
jmp
inc
mov
stos
jno
fs
jmp
xor
jo
sbb
xchg
cmp
mov
push
lods
mov
fisttpll
das
push
sbb
ja
inc
movsl
js
orl
imul
xlat
hlt
jb
xor
cmp
sti
jg
or
push
cmpl
or
es
test
enter
pushf
das
addb
and
aad
pop
inc
in
fidivrs
and
sbb
inc
js
inc
es
push
out
jp
push
ret
aam
jno
push
orb
aas
xor
clc
push
inc
sahf
cmp
push
pop
adc
pop
push
jo
jno
mov
adc
or
dec
adc
add
xor
test
sbb
aam
inc
mov
outsl
xor
mov
pop
scas
aam
ljmp
and
dec
push
sub
aas
cvttps2pi
push
imul
lcall
int
sub
inc
fisubrs
adc
xor
out
dec
or
das
dec
loop
cld
push
outsb
ficoml
loop
mov
aam
xor
enter
test
push
pushf
push
mov
inc
xchg
movsl
jno
mov
pop
in
push
adc
fisttps
movsl
jbe
push
add
je
cmp
mov
mov
leave
cmp
mov
mov
mov
adc
cmpsb
lcall
jge
pop
and
xchg
scas
add
mov
push
jo
lret
mov
dec
xor
dec
inc
xorb
cltd
push
dec
and
fdiv
push
cmp
adc
sbb
xlat
aam
in
cli
insl
popf
xchg
and
push
cmp
dec
icebp
mov
dec
add
cld
jb
aad
fnstenv
lcall
mov
orl
mov
push
lea
inc
scas
push
mov
xlat
lea
add
cmp
pop
or
and
imul
shr
fstl
mov
das
or
cmp
sahf
pop
jnp
mov
hlt
lds
mov
aas
ljmp
xchg
pop
scas
sahf
xchg
addr16
fsubp
repz
pushf
out
jmp
or
push
mov
ret
test
mov
mov
movsb
jno
jae
clc
xorl
push
mov
pop
jle
stos
ljmp
adc
xchg
cmc
inc
cmp
sbb
es
cmp
mov
dec
cmpsl
fisubrl
shl
test
sbb
mov
adc
push
inc
dec
push
mov
and
das
dec
cmp
fs
or
mov
test
imul
out
cmp
loop
std
sbb
mov
push
lcall
fmull
mov
loop
cmp
cld
mov
mov
hlt
add
daa
cmp
lods
into
test
cmc
rcll
test
push
and
xor
subl
dec
mov
push
rcrl
add
mov
roll
sbb
add
movb
pop
sarl
cmp
out
mov
aas
out
mov
xor
das
inc
or
mov
mov
test
and
and
and
adc
cmpsl
or
movsb
js
stos
sub
stc
icebp
ljmp
mov
dec
incb
and
mov
push
loope
push
mov
mov
mov
mov
mov
mov
fildll
or
push
test
push
xchg
andb
mov
ljmp
inc
mov
loopne
loop
xchg
mov
test
xchg
mov
movsb
pop
hlt
mov
inc
xchg
sbb
repz
or
fadd
pushf
int
data16
fdivrs
je
std
mov
iret
out
inc
push
mov
es
xchg
adcl
sbb
mov
adc
pop
mov
pop
push
out
and
scas
cmpsb
out
lret
cmp
xchg
jl
xor
rolb
push
sub
shll
out
xchg
jo
mov
jmp
pushf
or
outsl
iret
or
sub
push
mov
test
and
aam
pop
adc
inc
pop
and
testb
lea
incb
arpl
enter
dec
inc
in
lds
roll
js
adc
add
add
xchg
popw
js
loopne
mov
sub
or
push
push
call
adc
dec
imul
test
shll
dec
in
inc
add
js
push
movl
stc
inc
les
stc
push
leave
mov
mov
pop
jae
mov
enter
inc
les
inc
js
push
movsl
out
adc
add
enter
scas
xchg
loop
test
jl,pn
mov
testb
outsl
mov
mov
push
xchg
mov
lret
aas
adc
push
aas
lret
or
scas
sub
or
fisubs
and
sub
out
xor
mov
jg
hlt
ds
mov
loopne
sub
insl
xchg
paddusb
push
mov
neg
lea
adc
in
xchg
xchg
xor
push
adc
pop
fstpl
xor
pop
dec
and
shl
mov
rolb
fidivl
inc
add
repz
fcmovu
in
sarb
lock
test
sub
adc
fs
pop
ret
movsb
test
scas
fsubl
mov
test
lock
cwtl
lret
push
gs
mov
sub
cmpsl
popa
pop
push
in
outsb
test
push
add
add
push
ljmp
loopne
mov
sub
xlat
jecxz
clc
fists
dec
mov
add
push
rorl
lahf
shrl
cltd
cltd
xchg
fnstenv
loopne
push
jg
sbb
ds
ds
popa
shl
xchg
sahf
jae
push
roll
inc
das
or
movsb
inc
xor
push
add
aad
mov
rolb
sub
stos
or
repnz
mov
jae
adc
adc
pop
ljmp
call
mov
and
ret
pop
jg
cmp
cmp
push
xor
xor
lret
addb
jg
lods
sbb
cs
push
xor
push
subb
mulb
gs
push
ret
movsl
pop
dec
jns
in
cmc
cwtl
in
dec
mov
and
js
outsl
push
mov
dec
mov
test
add
add
popa
add
sub
std
add
push
mov
and
dec
subb
jg
push
lods
push
outsb
adc
aas
scas
adc
hlt
fwait
stos
xor
outsb
or
push
ret
add
adc
insl
push
outsl
inc
ret
mov
pusha
xchg
xchg
in
xchg
xchg
inc
cs
mov
popf
xor
mov
add
pushf
sub
pop
aam
mov
scas
movsb
xchg
test
mov
mov
movsb
call
flds
pop
inc
ret
fbstp
ss
int
cmpsb
mov
out
sti
test
lds
subb
aas
jb
push
add
push
push
cmp
cmp
ret
rol
test
push
lahf
jle
int3
pop
lea
jmp
out
adc
mov
out
dec
out
jmp
nop
xchg
sub
rcl
mov
pop
icebp
cmp
mov
mov
adc
fst
pop
dec
pop
bound
mov
iret
jnp
gs
shrl
loope
stos
arpl
loop
enter
mov
and
sahf
fiadds
stos
or
xchg
pop
cmp
lds
mov
inc
and
leave
cmpsb
fmull
fisubl
inc
sbb
rcll
or
or
push
push
xchg
cmpsb
or
cmp
sbb
push
aam
mov
fs
jecxz
xor
repz
sbb
shll
mov
pushf
rcrl
popl
adc
ficomps
movsl
sub
jnp
shr
popf
mov
inc
cmp
mov
sbb
jmp
pushf
xor
cmp
pusha
mov
cs
inc
cmc
adc
push
or
add
jmp
fimuls
xor
hlt
cli
cmp
int3
ret
ret
sbb
andl
popf
push
dec
fadds
int
mov
in
aad
les
fdiv
lret
or
addr16
sti
mov
test
mov
mov
lds
pop
sbb
cmpsb
jb
or
lahf
add
je
stos
lret
pushf
mov
xlat
cld
ljmp
out
hlt
cmp
sub
cli
mov
add
fildl
xlat
pop
or
imulb
cmp
sbb
sets
scas
js
out
pop
mov
sub
and
adc
xchg
js
mov
sub
pop
mov
or
sbb
jle
and
mull
shll
ja
stos
sub
out
jl
out
notl
jne
jno
stos
xor
nop
add
dec
mov
dec
push
mov
jg,pt
and
xchg
adc
aam
leave
cmp
sbb
fstpl
dec
sub
mov
mov
dec
lea
in
adc
and
pop
movsl
int
push
testb
loop
jg
roll
cmp
mov
push
aad
jnp
sahf
lods
testl
popa
xor
aam
xchg
fldenv
add
jo
int
cmpl
cmc
sahf
sbb
pusha
mov
fsts
or
mov
jno
loop
ljmp
fisubl
iret
shlb
mov
fildl
scas
bound
push
fadd
mov
dec
hlt
mov
xlat
stc
loopne
cltd
jmp
inc
and
pop
insb
jns,pt
adc
cmp
dec
repnz
cltd
test
cltd
pop
and
mov
push
call
fs
test
inc
outsl
icebp
inc
dec
outsl
jns
mov
aas
shlb
add
test
push
imul
cmpb
sbb
mov
test
les
pop
pusha
out
dec
cmpsl
cmp
jns
and
add
lret
and
aad
xchg
popf
mov
dec
iret
aas
cmp
mov
sub
aas
pop
clc
jecxz
dec
imul
cs
sbb
repz
xor
shll
pop
rcr
push
iret
pop
adc
mov
pop
scas
enter
push
into
dec
stc
pop
insl
add
ljmp
insl
jmp
dec
lret
or
aam
mov
arpl
dec
xchg
xlat
mov
push
aas
adc
sbb
test
mov
push
add
ds
fcmovnu
dec
jmp
aas
push
mov
jl
sub
mov
mov
pop
shl
iret
rcl
inc
or
rclb
adc
dec
sub
cmpsb
negb
icebp
insb
sub
fwait
pop
psubsb
cmp
popf
lret
sbb
push
mov
jg
aaa
cltd
aam
inc
lahf
stos
add
adc
inc
aam
sbb
shlb
test
int
push
add
loop
pop
jle
sub
inc
les
stc
add
mov
or
mov
sbb
sub
mov
lea
jecxz
inc
adc
mov
cmpb
jno
or
sub
in
cwtl
inc
xchg
js
subl
mov
cwtl
in
sbb
xchg
add
fs
and
data16
or
mov
aas
cltd
cmp
leave
jecxz
or
in
les
out
in
call
mov
rolb
cli
xor
test
lret
fdivrl
pcmpgtw
imul
jge
inc
stos
cmp
pop
jns
bound
adc
lahf
cmp
xchg
xor
in
adc
rep
dec
mov
das
fcmovbe
idiv
pop
js
pop
xchg
cmpsl
or
je
jbe
and
in
shlb
mov
or
mov
mov
dec
loop
cmp
in
cmp
mov
ja
inc
push
dec
mov
inc
pop
sbb
scas
dec
jl
sbb
push
jge
sbb
jl
inc
scas
push
sti
call
cmpsl
jmp
stos
push
test
push
lods
inc
lds
xchg
jmp
and
mov
ljmp
nop
cmp
xchg
mov
inc
fisubrs
jge
in
mov
in
jno
cmp
cmp
pop
adc
dec
int3
insb
or
ret
xchg
or
lods
push
xchg
xchg
in
outsb
mov
mov
dec
ja
pop
in
das
fincstp
or
outsb
push
and
fisttps
cld
test
pusha
movsl
ja
inc
nop
dec
jo
lcall
jb
xchg
movsb
or
flds
or
pop
push
mov
jecxz
scas
outsb
pop
mov
sbb
sbb
jae
aam
cltd
arpl
pop
inc
std
cmp
inc
mov
stos
cmp
test
scas
push
mov
mov
and
mov
pop
icebp
xchg
mov
and
xchg
push
pusha
sbb
test
and
mov
hlt
jg
enter
je
xchg
dec
push
shlb
cmp
sbb
push
js
in
and
aam
mov
test
or
xchg
arpl
push
mov
mov
and
addr16
mov
dec
mov
daa
cmp
lahf
pop
insl
faddp
test
aaa
dec
mov
std
shrl
lods
jnp
ljmp
call
jecxz
inc
jnp
aaa
lcall
jne
lea
jno
imul
xor
mov
push
sub
cmc
gs
rolb
xchg
mov
test
mov
pop
cwtl
push
jg
inc
cmp
aaa
cmp
mov
out
xor
mov
mov
repnz
sahf
sbb
cmp
lods
jl
ficomps
and
mov
or
fcoml
repnz
movsl
and
jns
jmp
mov
arpl
pusha
sbb
loopne
pop
dec
xor
and
out
mov
fcoml
in
pop
into
xor
push
mov
aaa
stc
sbb
pop
arpl
and
sub
pop
fsubs
popf
inc
aad
sub
pushf
cmp
fwait
mov
or
xchg
shlb
sub
es
stos
push
ja
int
pop
push
aas
lock
movsb
add
adc
cmp
sti
imul
push
xchg
jo
je
adc
cmpsb
dec
subb
mov
jno
or
push
or
pop
xor
scas
aaa
push
repz
mov
inc
mov
jmp
sub
mov
rorb
jbe
push
out
xor
imul
daa
cmp
enter
outsb
xchg
out
lahf
movsl
mov
pop
enter
aas
iret
jp
aad
insb
movsl
rolb
pop
dec
sbb
sub
push
fsubrl
xchg
sub
sbb
adc
bnd
ds
add
inc
test
push
clc
in
divb
mov
pushf
jmp
sti
jecxz
push
test
lds
jno
lret
mov
aas
and
divb
mov
inc
sbb
call
ds
icebp
xor
pop
pop
std
mov
lcall
dec
and
sarb
push
push
repnz
fwait
inc
sub
sbb
xlat
mov
cltd
xchg
lds
pop
pop
lods
jmp
pop
scas
insb
pop
pop
rcll
jb
push
in
data16
mov
pushf
lods
ret
adc
cmp
icebp
push
pop
jmp
lods
popf
sarl
cmpsl
jp
lods
jle
out
dec
clc
andb
pop
sub
in
shll
lret
fldenv
xchg
iret
movsl
xor
mov
mov
dec
push
sbb
and
sub
fstpt
incb
or
mov
cltd
xor
int3
and
xor
push
sbb
sti
push
shlb
mov
jl
add
jge
pop
in
popf
xor
rclb
rorl
sbb
ljmp
adc
jne
push
dec
dec
loope
fdivrp
cmpl
jb
sar
fbstp
or
idivb
pop
adc
icebp
mov
enter
dec
lahf
pop
adcl
shll
jecxz
and
pop
test
inc
sub
ja
lahf
dec
aad
inc
add
jae
dec
or
inc
enter
sahf
sub
jg
mov
mov
aad
mov
cmp
adc
mov
add
pop
faddl
inc
sti
gs
mov
int3
repz
mov
ss
mov
mov
les
ss
ljmp
in
jo
pushf
push
les
int3
xchg
mov
mov
add
xlat
in
mov
mov
out
bound
les
cmp
pop
xchg
mov
sbb
xor
dec
push
mov
sarl
push
popa
inc
mov
and
std
int3
int
xor
add
mov
xchg
leave
sub
call
mov
jmp
mov
fimuls
cmp
jmp
movsl
cld
sbb
add
sbb
sub
push
out
loopne
and
sub
mov
cmp
out
dec
adc
out
xlat
push
mov
sbb
dec
mov
shlb
sbb
or
movsb
mov
add
push
xchg
dec
mov
push
in
inc
inc
in
mov
fwait
sub
addr16
dec
xlat
imul
hlt
sbbb
scas
pop
mov
mov
lds
pop
dec
les
lock
pop
scas
pop
xor
data16
ficoms
xchg
punpckldq
xor
std
sbbl
arpl
mov
testb
rorb
mov
inc
daa
jl
push
mulb
jb
outsl
scas
mov
popf
std
add
pusha
mov
jo
push
push
sahf
daa
or
mov
pop
sub
push
cmovg
xchg
repz
cmp
jae
and
test
or
push
mov
fiadds
pop
sbb
icebp
sbb
sub
out
icebp
enter
mov
xor
shrb
push
movsl
fmull
sbb
adc
push
stos
push
movsl
inc
cmpsl
push
cmpsb
mov
jo
les
test
dec
xor
cltd
push
clc
fsts
mov
iret
dec
insl
ret
push
or
movsb
mov
push
aam
push
jo
in
fldcw
cs
jl
jns
xor
ljmp
lods
jg
and
adc
sub
push
jl
lahf
add
lret
add
xor
jmp
into
daa
cmp
fistl
pop
pop
scas
adc
jno
pushf
sbb
jp
in
add
insb
sub
or
ja
sub
add
ret
mov
pop
jl
push
in
push
inc
push
sbb
nop
out
and
push
mov
popf
repnz
mov
jb
scas
int
nop
stc
data16
ret
imul
xor
sub
pop
aaa
xlat
sbb
pushf
outsl
inc
cmp
stc
push
and
add
fisubrl
inc
call
aam
jbe
cld
mov
pop
imul
sub
loopne
rorl
sbb
test
lcall
call
shl
out
pop
mov
sbb
sahf
ljmp
fmull
xchg
js
pop
jo
and
pop
stos
sbb
cmp
in
out
mov
push
and
int
push
push
xchg
cwtl
sub
and
mov
rorl
mov
and
mov
mov
dec
inc
pop
aad
aaa
xor
repz
sbb
sbb
rolb
in
arpl
repz
out
cmp
imul
filds
jnp
or
js
xchg
xchg
cmpsl
scas
sahf
icebp
mov
lods
and
das
in
sti
mov
ret
loope
lds
or
pop
jle
sub
es
push
mov
pop
add
inc
ds
repnz
mov
jmp
lods
lret
or
daa
mov
and
lock
test
mov
pop
add
scas
dec
push
pop
mov
jg
xorl
aas
in
adc
jecxz
fdivl
cs
adc
inc
sar
bts
sahf
jne
js
xchg
add
lret
xchg
jo
mov
jne
leave
movups
loopne
xchg
je
dec
stos
testl
inc
cmp
mov
iret
cmp
aas
push
jb
pop
add
mov
cmp
adc
xchg
add
lahf
out
pop
cltd
lock
mov
inc
popf
loope
cmp
xor
roll
mov
cli
icebp
jo
adc
jmp
inc
outsl
push
outsb
sub
aam
push
push
xlat
mov
jp
repz
pop
add
or
xor
or
popf
push
imul
push
daa
mov
and
cmpsb
sub
outsl
inc
dec
pusha
mov
test
bound
pop
jbe
jmp
hlt
movsl
xchg
lea
sarl
orl
aad
cld
mov
stc
fs
cld
aaa
addr16
or
sub
mov
inc
bnd
mov
adc
xor
add
imul
jns
scas
add
inc
push
lret
xor
or
call
gs
out
out
pop
push
test
outsl
pop
cmpsb
jns
lret
inc
or
add
scas
fidivrs
hlt
mov
xchg
scas
pop
cmp
pop
inc
int
mov
iret
mov
mov
aas
adc
movsb
xlat
mov
mov
scas
adc
mov
or
fcmovu
push
mov
das
jmp
xor
cmp
adc
cs
sub
sbb
insl
lods
mull
mov
dec
loope
shll
movsl
outsl
inc
add
push
mov
fadds
jno
js
fs
mov
sub
cmp
shrb
incb
sbb
or
and
rcrb
lret
arpl
fidivl
and
shlb
dec
lods
cmp
mov
lds
imul
lret
pop
lret
or
add
roll
lret
push
inc
iret
cmp
xchg
lea
call
jmp
sahf
lods
out
in
lcall
pop
mov
lea
cmpb
xorb
adc
sub
mov
mov
and
shr
adc
lods
js
loop
dec
fstl
loopne
data16
jle
pop
sub
dec
out
cmp
sub
mov
cmp
lock
sahf
pop
cmpsb
xchg
sub
mov
dec
jmp
cmpsl
leave
ja
jne
mov
xor
insw
mov
sbb
xor
loope
xchg
insb
mov
fsubrl
dec
and
enter
mov
push
out
and
xchg
adc
xchg
mov
mov
xchg
stos
xor
mov
push
aas
pop
ret
xor
lock
dec
mov
or
sub
push
clc
rorl
dec
xorb
cmp
dec
add
int
push
dec
sahf
mov
sti
jae
clc
loop
push
or
das
rcrl
mov
add
mov
ljmp
lret
mov
adc
mov
and
inc
pop
sub
mov
xchg
lds
sbb
in
xchg
sub
inc
xchg
sbb
mov
mov
imul
jmp
push
mov
and
rolb
mov
sarb
xchg
dec
xchg
in
ror
xor
into
std
and
shl
inc
out
xchg
or
inc
pop
mov
lret
xor
lea
cmp
rclb
push
add
dec
int3
les
cwtl
daa
dec
call
pusha
sbb
sbb
pop
or
push
mov
push
leave
movsb
and
fiadds
dec
xlat
jge
push
std
push
and
mov
pop
ret
or
ret
rcrl
scas
or
imul
cwtl
mov
jmp
push
bound
adc
dec
out
test
mov
test
lods
fildl
or
mov
cmp
sbb
inc
lcall
test
loope
pop
daa
pop
fsub
das
cmp
int
and
adc
mov
push
jmp
push
test
push
xchg
insl
cmpsl
xchg
or
test
js
dec
xor
mov
mov
xchg
les
fsubrs
push
leave
outsl
cmp
pop
hlt
gs
ret
push
pop
bound
mov
jmp
sbb
inc
cwtl
mov
mov
xchg
mov
or
scas
pop
idiv
sub
pop
pop
fwait
scas
lods
sub
inc
imul
dec
adc
sub
sub
out
ljmp
lret
call
inc
nop
adc
mov
adc
sarl
hlt
or
sbb
cmp
into
mov
sti
mov
adc
lahf
push
rol
mov
mov
mov
test
fdivr
cmpsl
sbb
dec
xchg
jb
mov
test
std
mov
push
xor
cmpsl
addl
xchg
test
pop
and
sbb
int3
aam
mov
lret
es
jne
or
pop
movsl
mov
cld
xor
lea
pushf
mov
xchg
aam
jg
sub
and
sbb
jecxz
rcrb
std
mov
pop
mov
ss
jo
mov
cltd
fdivr
add
dec
out
xor
push
movsl
fmuls
insl
mov
jne
lcall
adc
xchg
stos
fldcw
sahf
insl
cs
xchg
fisubrs
inc
test
out
mov
jo
sbb
or
mov
or
or
out
int
ret
pop
scas
xor
stc
sahf
mov
addr16
mov
hlt
frstpm(287
and
icebp
adc
jae
push
pusha
cmp
out
loop
inc
mov
jl
add
pop
mov
jecxz
jmp
and
test
mov
cmp
cmc
insl
and
push
popf
push
shr
cmpsb
dec
shlb
jp
add
push
fwait
jns
mov
cmp
adc
nop
pop
lods
les
and
cmpsb
jns
sub
out
stos
adc
sub
dec
push
jae
add
sub
add
mov
scas
or
pop
pop
insl
mov
mov
jne
addr16
xchg
mov
cmp
test
adc
mov
xchg
mov
repnz
sbb
shl
adc
inc
pop
leave
mov
pop
pop
xchg
xchg
jo
mov
scas
sbb
inc
out
push
jl
incb
test
adc
imul
push
cmc
roll
lcall
adc
cmp
jge
add
cmp
mov
aaa
adc
dec
mov
and
cmpsb
push
jo
imul
jae
mov
sbb
pop
mov
add
adcb
add
adc
jl
xorl
mov
pminsw
xchg
jb
mov
sub
jnp
jecxz
adcb
sub
xor
fst
aas
repz
push
adc
leave
or
decb
imul
cltd
adc
xchg
cwtl
sbb
stc
or
or
adc
or
jl
jp
dec
stos
bound
cmp
notl
nop
jl
jp
pop
fs
pop
jecxz
loop
out
pop
push
jno
imul
mov
cmp
sbb
dec
xchg
add
jp
into
cmp
inc
cld
jnp
insb
inc
mov
mov
sub
stos
notb
fadds
cmp
sub
push
jl,pt
pop
fsubrl
iret
test
jmp
repnz
xor
jbe
sbb
dec
add
iret
inc
cli
pusha
jl
outsl
fs
cmp
jnp
hlt
in
and
ja
pop
mov
sub
sti
mov
pop
jmp
dec
adc
orb
js
in
lds
imul
sbb
or
ret
xchg
add
dec
xchg
xchg
mov
inc
jno
jno
jno
daa
lock
dec
not
sbb
jbe
fmuls
shll
add
sub
mov
cmp
sub
sbb
xchg
test
sbb
xor
sbb
in
dec
stc
insl
push
pop
cmpsb
lahf
in
mov
enter
or
in
cmpsb
jle
icebp
scas
sbb
stc
dec
mov
lret
jle
negl
pop
sarl
nop
sbb
add
mov
mov
pop
shlb
jo
loope
add
xchg
dec
iret
outsl
adc
fildll
mov
repz
jecxz
mov
shrb
shlb
sbb
adc
cmp
add
insb
jp
sbb
arpl
push
pop
fs
ret
or
aas
mov
xchg
int
test
mov
gs
clc
add
xor
out
int3
or
aaa
cmp
rcrl
insl
xorb
cmp
pop
xchg
inc
dec
push
icebp
repnz
and
xchg
cmpsl
dec
xchg
sbb
in
mov
adc
out
jo
gs
arpl
push
aaa
mov
pop
mov
mov
out
rol
in
cmp
ret
push
pop
call
rorl
jmp
ret
add
lods
mov
sbbl
jmp
fisubrl
in
pop
xchg
pop
lods
test
jl
or
in
cwtl
mov
imul
jno
xlat
cltd
int
xor
adc
cmp
ret
roll
mov
jns
jne
add
xchg
testl
sahf
nop
mov
stos
das
bound
lods
test
sub
mov
imul
xchg
in
cmpl
mov
mov
adc
push
xchg
fwait
in
dec
inc
mov
xor
pop
call
xchg
aaa
mov
pop
sti
loopne
mov
test
pop
je
push
or
sub
cmpsl
inc
and
inc
mov
divb
and
mov
arpl
mov
dec
adc
pop
std
addl
int
out
sub
jmp
add
rorb
les
xchg
push
jge
mov
les
sub
fwait
js
pop
sti
pop
jmp
outsb
in
sbb
arpl
mov
push
mulb
sub
xchg
inc
cs
std
cmp
pop
sub
imul
stos
movsb
sbb
loop
mov
scas
xchg
or
pushf
mov
xorl
mov
jmp
pop
stos
mov
idiv
ret
adc
jp
mov
mov
sub
inc
pop
push
mov
mov
jne
sub
repnz
mov
xorl
fldl
outsb
sub
arpl
pop
lds
das
gs
sbb
jmp
lret
adc
mul
push
lret
jo
inc
pop
xchg
lods
cmpb
cld
sbbl
mov
ret
dec
mov
lock
xor
movsl
jmp
stos
ret
arpl
push
mov
xor
sbb
movsl
push
stos
and
adc
mov
je
cli
inc
push
mov
ja,pt
or
dec
lret
fnsave
inc
hlt
dec
or
mov
gs
repnz
fcomps
insl
pop
test
fdecstp
std
push
rclb
mov
stos
xchg
sub
mov
xchg
adc
push
pop
sti
pop
int3
popf
into
mov
fstps
dec
xchg
dec
inc
lret
add
fistps
mov
out
cmp
loop
aas
mov
daa
cmp
inc
adc
rol
lods
push
xor
mov
xor
sbb
mov
in
xchg
aas
cmp
es
dec
add
imul
or
lret
push
cli
xchg
or
aas
sub
lahf
dec
fisttps
stos
cmp
xchg
lds
in
pop
sub
dec
mov
inc
ja
out
ja
jg
lea
stos
mov
lods
pop
sti
mov
cltd
lret
jmp
aam
add
inc
nop
dec
or
fs
and
jne
jp
clc
hlt
loope
mov
and
scas
push
pushf
repz
cmp
push
mov
mov
out
mov
add
test
pop
addl
dec
mov
std
jo
pop
jp
xchg
iret
xchg
inc
stos
out
outsl
mov
add
fdivrs
dec
push
fcompl
mov
dec
sarb
sbb
inc
daa
sbbb
ljmp
push
ss
push
mov
sbb
push
mov
inc
out
pop
cwtl
mov
pop
cmp
push
adcl
cmp
std
popf
lret
insl
jmp
test
fisubl
test
out
sub
and
push
push
adc
cltd
loopne
xchg
and
and
jne
inc
ret
xlat
jl
push
pusha
add
push
aaa
call
push
pop
push
xchg
jne
mov
mov
and
orl
aas
lcall
xlat
push
cltd
es
aas
mov
xchg
out
aad
jae
push
aaa
stos
jne
fistpll
out
dec
sub
xchg
push
xchg
pop
mov
sbb
inc
dec
stc
sub
and
xchg
xchg
icebp
mov
xor
mov
inc
sbb
js
xchg
dec
xchg
adc
mov
movsb
gs
es
call
pop
sbb
xchg
lea
rcll
insb
int3
ds
adc
add
outsb
int3
or
push
data16
repz
cmp
jae
xor
sahf
push
rcrl
js
fisttpl
test
xor
lds
or
out
cli
repz
int3
popf
rol
add
loope
enter
sub
xchg
dec
lcall
xchg
mov
mov
lahf
aad
and
sub
pushf
fcomps
mov
roll
movsl
push
mov
cmp
sti
mov
sub
ds
movsl
add
jmp
mov
adc
test
mov
mov
sub
sub
jb
sbb
mov
jmp
or
adc
aam
or
mov
jnp
pop
xor
scas
jbe
xchg
pop
push
mov
mov
adc
cmp
mov
inc
rorl
xor
es
mov
out
mov
test
cmp
shlb
in
jecxz
xchg
shrb
cmpsl
inc
in
jae
arpl
mov
mov
out
xchg
loopne
add
addr16
or
popf
xchg
jecxz
mov
sbb
jae
aam
enter
into
shrb
mov
dec
jno
cmpsl
mov
inc
cltd
negb
push
fdivl
cmp
adc
mov
pop
pop
pop
fcomps
popa
dec
add
sub
jl
lret
add
inc
dec
push
or
call
scas
or
roll
imul
dec
push
jle
mov
adc
cmp
movsl
mov
cmpsl
ja
out
imul
adc
sahf
lock
push
sub
into
sbb
aam
cltd
sbb
xchg
xor
fnstcw
ret
inc
add
jp
cld
repz
divb
addr16
lods
iret
xor
push
sub
pop
inc
lods
jge
insl
or
cmpsl
mov
test
jmp
in
andb
shll
pop
iret
adc
pop
fcoml
push
mov
aas
add
dec
or
es
cltd
sbb
aas
mov
icebp
sbb
outsb
inc
push
add
mov
jnp
adc
cmp
sbb
loope
adc
pop
xor
in
push
xchg
fdivrl
in
inc
clc
mov
mov
dec
mov
icebp
cmpsl
xor
ds
sub
push
inc
pop
lret
sbb
jo
daa
pushf
dec
mov
or
jnp
cmp
cmp
test
or
mov
sbb
sbb
faddl
sti
imul
inc
mov
fstl
int3
sbb
in
push
push
in
stos
fnstsw
jb
sbb
daa
loope
jl
mov
jno
jo
dec
add
jae
adc
inc
out
adc
movsl
mov
ficoms
je
xor
xchg
sub
cmp
rclb
pop
pop
jmp
psllw
orb
out
rcl
stos
mov
or
add
fists
cmp
jae
mov
scas
aaa
and
fs
lods
lock
fwait
sub
fwait
pop
gs
and
inc
mov
addb
dec
mov
jo
xor
sub
out
pop
lds
fiaddl
fdivp
push
and
xor
mov
outsl
mov
push
mov
sbb
mov
or
adc
cli
cwtl
loop
test
popa
icebp
add
cld
and
mov
xor
or
lds
daa
jb
cltd
loopne
inc
mov
push
cli
cmp
es
mov
mov
in
lds
ret
pop
add
mov
sub
test
mov
fwait
xor
inc
mov
sub
imull
adc
imul
lahf
push
push
pop
shll
stc
test
lret
mov
mov
jo
fwait
mov
jp
xlat
in
inc
xchg
inc
inc
test
pop
ret
jo
aam
lcall
icebp
test
or
in
aas
stc
xchg
adc
push
adc
leave
aaa
push
xchg
cwtl
and
xchg
lock
scas
insl
sahf
mov
mov
es
daa
xchg
sbb
push
and
addl
shll
add
inc
sbb
incb
xchg
jnp
xchg
push
xor
pusha
xor
push
dec
nop
inc
dec
ja
adc
or
fdivl
push
loopne
pop
aad
and
or
mov
xor
sbb
xchg
jo
dec
ja
popf
sbb
out
cmpsb
in
dec
daa
push
fstpt
xchg
pop
ret
test
mov
sbbb
adcl
push
fs
insb
push
rclb
cwtl
xchg
push
jnp
idivl
jnp
push
stos
mov
xchg
mov
inc
and
mov
sbb
xor
jmp
sub
push
fiaddl
mov
jb
lcall
mov
push
mov
lods
mov
jg
test
loopne
jp
push
arpl
sarl
cli
ljmp
mov
int3
sahf
inc
pop
outsl
cmp
cmp
mov
add
add
sti
aam
out
std
sbb
sub
inc
fsubs
mov
lret
aas
ljmp
cwtl
pop
mov
lds
or
push
insl
pushf
pop
cmp
jge
push
push
pop
add
std
xchg
sbb
fs
insl
les
mov
leave
xlat
sub
adc
pop
jno
daa
adc
in
into
jns
pop
ja
out
cmp
bound
mov
xchg
clc
enter
pop
mov
dec
jne
dec
stos
int3
adc
and
lock
mov
and
fistps
sbb
xchg
add
sub
or
cmp
loop
cmp
shll
cld
mov
out
adc
or
and
fiadds
loop
arpl
cmp
stos
jle
test
orb
aad
xor
insb
jae
mov
push
icebp
lods
je
and
xor
std
xchg
xchg
dec
dec
push
xchg
push
hlt
dec
pop
inc
out
or
add
jbe
insb
in
fcompl
push
les
cwtl
aam
or
mov
mov
in
cmpsb
popaw
movsl
popa
cmp
push
fstpt
lret
dec
mov
add
mov
hlt
negb
xor
insl
push
jne
xlat
sub
cmc
mov
add
out
push
fdivs
pop
and
lea
xor
lods
xchg
or
pop
xchg
bound
xchg
xor
dec
and
out
ja
push
pop
cmp
inc
fnclex
test
pop
push
orb
mov
shll
in
in
dec
rclb
adc
jle
mov
scas
jnp
mov
or
std
xchg
jbe
mov
les
pop
rcrb
jge
push
sbb
gs
jle
pop
xor
loop
xchg
jmp
xchg
aam
cs
mov
ljmp
adc
inc
jb
jns
jl
sbb
repz
movsb
lcall
iret
or
gs
pop
add
inc
mov
cmp
add
repnz
mov
push
push
iret
adc
lret
out
sbb
jl
jg
and
add
mov
int3
fiadds
mov
or
jmp
lret
sbb
push
jno
punpcklwd
push
xor
adc
inc
int
mov
sub
lds
dec
andb
mov
cmp
repnz
das
imul
xchg
push
and
psraw
xor
insl
lods
lods
push
sub
cltd
pop
test
jp
and
mov
mov
cwtl
add
adc
sub
sbb
aam
fstp
aad
or
out
bound
cmpb
stos
or
sub
sub
and
subl
push
dec
dec
sbb
aaa
jmp
xchg
pusha
push
mov
lock
ret
insb
cmpsb
pop
jno
outsl
jmp
sbb
adcb
and
mov
jno
push
jg
xchg
add
mov
loope
movsl
into
mov
in
mov
ljmp
dec
xor
push
sub
cld
stc
into
inc
and
mov
sbb
fsubrl
iret
pop
jecxz
xchg
or
mov
arpl
xchg
add
push
add
mov
sbb
inc
pop
mov
mov
adc
call
aad
push
sub
sbb
push
cltd
jle
mov
mov
hlt
inc
xchg
cmpb
xchg
push
shrb
cmpsb
add
push
pop
sub
sub
jmp
enter
je
les
mov
mov
mov
adc
and
shlb
std
orl
fisttpl
out
in
pop
aad
dec
aam
insb
add
xchg
aam
push
jae
add
or
cwtl
outsl
dec
jne
xchg
pop
gs
orl
fdivl
cltd
lcall
out
aad
jbe
xchg
mov
andl
movsb
roll
ror
arpl
mov
imul
in
inc
sub
add
cmpl
scas
jle
xor
or
inc
dec
mov
mov
leave
push
jge
je
inc
jne
imul
lods
sub
ljmp
push
ljmp
pop
xchg
lods
psubq
enter
xchg
xlat
daa
jmp
dec
dec
or
out
cmpsl
sub
mov
mov
add
pop
icebp
dec
ret
push
sbb
loopne
mov
lods
fwait
sbb
mov
jns
jle
ret
pop
sbb
mov
sti
xchg
cs
mov
pop
xchg
cmp
inc
mov
pop
movsl
popa
xchg
jle
push
outsl
int3
popa
or
dec
mov
sub
outsb
push
cmp
push
fcomi
aad
int3
out
dec
adc
push
xchg
sti
mov
jmp
jbe
icebp
fisubrs
lret
mov
enter
cs
loop
mov
stos
mov
cmp
arpl
stos
cli
nop
xchg
nop
adc
std
xchg
pop
imul
pusha
push
movsl
lahf
mov
or
mov
cltd
or
shr
xor
arpl
xchg
jecxz
mov
jno
mov
insl
mov
leave
xchg
adc
in
addr16
xor
lds
popa
adc
mov
cmp
add
or
lret
sub
nop
inc
scas
xor
mov
mov
imull
xchg
xor
jecxz
lcall
push
fnstsw
mov
pop
lcall
pop
movb
out
shrb
ds
jecxz
mov
sub
ret
fidivs
scas
jno
lock
divb
jae
lock
ffreep
lret
in
push
mov
push
pop
test
adc
mov
sahf
clc
inc
mov
incl
dec
pop
aaa
fimull
xor
int3
sub
xlat
xchg
push
xor
in
pop
cmp
push
ja
ljmp
mov
cmpsl
adc
dec
ljmp
std
xlat
xorl
jmp
xchg
dec
stos
cld
inc
daa
mov
cmp
xor
or
cmc
cmpb
sbb
loopne
dec
lods
stos
cmpb
outsl
jle
aaa
mov
mov
test
cld
mov
mov
jecxz
xor
cmpsl
cmpsl
movsb
jp
pop
cmpsl
sbb
pop
pop
sub
add
inc
das
or
bound
addb
push
loop
cmpsb
cmp
push
dec
movsl
and
jnp
idivl
insl
push
xchg
jb
pushf
popl
icebp
and
cltd
or
cmp
lcall
pop
mov
stos
mov
fsubs
sub
sahf
mov
lock
loope
les
or
cmp
mov
inc
cmp
insl
sub
pop
ljmp
insb
pop
cmp
cmp
mov
and
int
sub
mov
jle
test
out
jbe
inc
or
loopne
xor
fidivrs
test
xlat
pop
mov
mov
bound
pop
pop
popf
cmp
aad
scas
adc
inc
test
xlat
or
orb
into
insb
addr16
xor
adc
lret
add
das
pop
xchg
shl
cmp
gs
dec
push
xchg
inc
lods
roll
sbb
jb
push
fs
arpl
cmp
cmp
mov
xorb
push
in
add
dec
jmp
out
dec
mov
mov
jmp
jo
std
in
loop
sahf
shll
cld
or
loope
flds
xor
repz
ja
test
pop
and
mov
mov
push
add
fisttps
dec
or
in
jno
mov
cmp
push
rclb
cmpsb
add
or
dec
or
int3
rcll
mov
jmp
cmpb
cld
xchg
movsl
xor
dec
adc
xchg
loopne
cltd
mov
adc
cmp
sbb
addr16
mov
xchg
xchg
sbb
mov
inc
add
je
mov
add
fsts
pop
in
pop
push
sbb
fwait
in
bound
adc
or
jne
int3
stc
pop
xchg
inc
dec
xchg
lret
xchg
pop
adc
dec
lea
jmp
push
dec
cmp
jb
ret
int3
stos
aad
outsb
cmp
add
rcrb
loop
adcl
scas
ss
xchg
adc
aam
add
mov
push
xor
lock
enter
mov
xchg
push
inc
loop
sbb
pushl
stos
push
add
push
popf
push
add
adc
outsb
xchg
aam
js
adc
std
cwtl
leave
cmp
mov
aad
or
or
and
popl
ljmp
mov
push
dec
sub
sub
pop
mov
lahf
ret
mov
mov
and
mov
push
fisubrl
cmp
xlat
pop
xchg
pop
cmp
dec
push
ljmp
enter
pop
aas
stc
addr16
aaa
les
mul
sbb
test
xlat
jo
aas
fnsave
jnp
test
sub
jecxz
loope
inc
jne
inc
repnz
push
or
mov
js
push
rorb
inc
int3
or
jae
out
aaa
jmp
das
sbb
ror
and
jo
push
jcxz
jnp
fadd
dec
ret
inc
mov
mov
cld
jmp
fidivrl
sbb
jecxz
xchg
pop
mov
mov
and
aam
xor
xor
inc
jnp
lret
lds
xchg
or
das
add
jmp
mov
pop
adc
popl
mov
loop
dec
xchg
inc
pop
adc
adc
out
mov
dec
pop
and
xor
stos
cmpsl
roll
push
sub
mov
jg
int3
loope
xchg
into
add
pop
jb
push
jns
jl
jbe
insb
pop
shlb
mov
into
cs
ljmp
inc
ljmp
push
loope
aas
jg
aas
mov
adc
add
mov
jmp
add
xchg
mov
cwtl
pop
shll
add
mov
cmp
add
shl
cmp
push
pmulhuw
cs
adcl
jno
or
lods
pop
push
imul
lcall
mov
jg
jecxz
orl
fmuls
arpl
push
xorb
add
and
loop
imul
pop
nop
mov
jmp
push
mov
ja
jae
scas
xchg
popl
mov
push
into
std
jbe
mov
push
xor
jmp
into
dec
fs
loopne
int
arpl
adc
ja
ds
lds
jns
testb
idivl
fs
incb
in
push
jns
movsl
out
clc
andb
push
popf
sbb
sub
push
setl
lret
xor
sahf
mov
xor
sbb
mov
dec
push
ja
icebp
in
js
rcrb
fs
clc
xor
sbb
hlt
xor
lods
add
add
mov
in
xchg
xor
outsl
pusha
rcr
push
insl
inc
aam
arpl
mov
scas
lods
std
inc
mov
lea
dec
sub
cmp
les
inc
push
fldl
xchg
jp
cmpsb
fidivrl
mov
loopne
call
add
xor
jecxz
mov
testl
inc
xchg
mov
jo
lods
test
jmp
stc
pop
int
or
sbb
dec
dec
jns
shl
pop
push
and
lahf
xor
dec
add
jno
lret
jae
ret
loopne
fadds
and
lock
or
adc
fisttpl
lods
ss
fcomps
inc
pop
inc
sahf
lea
mov
fidivl
pushf
repz
adc
addr16
mov
ds
outsl
mov
mov
iret
int3
aaa
xchg
fldl
mov
jl
pop
out
push
cmp
test
lock
jge
js
and
rcrb
ss
scas
xor
dec
sub
fwait
mov
add
into
adc
push
scas
jnp
pop
push
cmp
loopne
je
xor
xor
or
mov
insb
pop
ss
fidivs
stos
aad
pop
push
in
and
sbb
inc
xor
mov
in
mov
xchg
jp
jnp
gs
stc
retw
jbe
add
stos
stc
fimuls
bound
cld
cwtl
push
xchg
push
sbb
jl
mov
jo
or
dec
adc
sub
or
rorl
orb
jnp
add
bound
test
xlat
fiaddl
and
out
inc
cli
add
addb
dec
mov
sbb
leave
inc
cmc
fmuls
into
arpl
int
xchg
mov
test
lods
add
shr
inc
cmp
lock
dec
cmp
outsl
lds
popa
xchg
pop
inc
popa
xor
es
ret
aas
jnp,pt
inc
dec
cmp
cmp
fcomps
jns
sub
and
add
sbb
mov
xlat
je
push
clc
aad
mov
in
add
sbb
decb
push
cmp
mov
jp
outsl
je
push
out
jg
imul
cli
dec
cltd
std
lea
rolb
sbb
int3
aad
adc
and
jno
testb
dec
and
xchg
ljmp
dec
jle
lahf
push
mov
cmp
leave
dec
jbe
sahf
aas
mov
lods
aam
mov
xchg
and
jecxz
mov
gs
jmp
mov
inc
add
add
add
lods
mov
je
push
jno
lods
fistl
addr16
and
xchg
fildl
jge
out
out
mov
inc
jae
adc
and
pop
push
mov
jmp
lret
mov
push
xor
jecxz
jge
in
roll
test
xor
push
daa
mov
adc
add
loopne
pushf
cmp
push
sti
jo
xchg
int3
leave
mov
scas
adc
mov
fwait
je
ljmp
mov
pop
out
xchg
cltd
std
les
jg
jecxz
loope
pop
inc
and
ja
repnz
xchg
bound
fistl
push
inc
push
bound
aam
ja
scas
xorl
mov
bound
xor
mov
roll
mov
and
mov
xor
loopne
repnz
inc
push
pop
sbb
dec
ja
movsl
pop
fwait
xor
lds
adc
test
push
iret
enter
sbb
mov
or
aas
icebp
std
ljmp
hlt
mov
cli
inc
jl
lahf
iret
arpl
mov
imul
cmp
sub
xchg
daa
adc
dec
jbe
mov
aas
add
dec
imul
jl
push
push
push
rol
push
test
push
push
fs
mov
mov
add
pop
dec
loop
out
insb
cmp
xchg
jge
or
fists
dec
fs
shrb
pop
sbbl
jmp
jnp
cmc
push
xchg
shlb
adc
or
decl
xchg
scas
mov
sub
arpl
aaa
and
inc
sbb
mov
inc
stc
mov
insb
dec
add
add
dec
pop
mov
and
adc
outsb
aad
jp
pop
ret
in
add
sub
xchg
js
dec
xchg
stos
push
in
in
sbb
lods
add
outsl
or
cmp
and
dec
lods
sbb
mov
cmpsb
push
shlb
adc
mov
or
mov
test
xor
add
arpl
mov
stos
cmp
pop
lods
fadds
add
pop
out
in
cmp
sub
add
mov
add
mov
dec
and
cli
cltd
fisubs
imul
fsubp
cmp
mov
ja
fsub
lcall
mov
stos
mov
lds
xor
mov
mov
out
mov
jo
call
ret
add
sar
scas
test
pop
cmp
js
out
and
cwtl
pop
ret
sahf
aas
xor
jae
fs
add
push
adc
inc
movsb
fcoms
mov
int
add
das
cmp
clc
popa
fsub
stos
imul
pop
int
lock
test
sub
mov
mov
lods
adc
lods
movsl
or
or
inc
mov
repnz
cmc
shrl
mov
ss
jecxz
rcrb
lods
in
roll
pop
jbe
and
push
sarb
inc
test
sarb
inc
jge
jp
inc
lock
add
in
movsb
cmpsb
jnp
es
bound
and
out
or
or
mov
mov
dec
mov
and
jle
imul
push
mov
pop
push
jns
xchg
jns
rcl
mov
inc
pop
fcomps
or
adc
movsb
or
enter
adc
or
xor
pop
adc
es
scas
cld
inc
icebp
cmc
addr16
lahf
jecxz
or
arpl
lret
cltd
push
mov
add
sub
mov
push
sub
leave
aas
push
sub
push
and
pushf
loop
aas
cld
cltd
mov
outsl
in
mov
mov
or
shl
mov
lods
mov
ss
xor
push
cwtl
stc
push
movsb
enter
pop
xchg
psubsw
sub
lock
pop
and
popa
push
mov
mov
push
sarl
dec
aaa
cmp
movsl
pushf
out
test
xor
push
cmpsl
shlb
or
pusha
aas
gs
ljmp
cld
nop
loopne
xchg
hlt
rol
or
jg
xchg
addb
and
xchg
imul
and
lock
add
or
lahf
outsb
test
fcmovnb
arpl
gs
scas
das
insl
push
movsl
inc
lcall
add
nop
xlat
inc
and
mov
adc
cmp
jno
mov
add
push
and
xchg
repz
add
push
xchg
jnp
and
xlat
lds
or
aas
lock
mov
inc
popa
inc
bound
fdivl
or
sbb
xchg
xor
in
rclb
sti
sbb
mov
adc
dec
or
les
les
sti
cs
or
adc
sub
xor
aam
inc
div
add
call
xchg
and
mov
pop
add
addr16
push
push
cld
in
push
inc
fisttpll
jns
jp
cltd
leave
cmp
xchg
cmpsl
repnz
sub
in
mov
adc
jmp
and
test
add
mov
cmc
xlat
mov
ret
mov
ja
lods
sub
lret
push
dec
pop
repnz
fldcw
leave
dec
loope
loopne
dec
jp
in
push
mov
roll
stc
orb
dec
das
enter
data16
cmp
mov
imul
adc
aam
adc
nop
cmp
cld
jmp
sbb
jno
adc
xchg
add
hlt
bound
cltd
xor
jle
rclb
push
aam
mov
xchg
pop
dec
fs
ds
stos
jne
pop
lods
mov
test
ret
popa
push
test
pop
mov
sub
jl
lods
imul
jp
in
jo
push
push
xor
xchg
cmpsb
inc
loope
xchg
outsl
and
or
imul
scas
add
push
xchg
popf
add
sbb
lods
and
scas
iret
adc
fxch
repz
lret
sub
pop
or
jns
lret
loop
fbld
cltd
adc
mov
pop
or
jae
pop
xchg
or
sbb
push
mov
pop
arpl
or
outsb
xlat
imul
das
aad
push
mov
lcall
in
out
pop
test
and
ret
xchg
scas
stos
mov
test
mov
movsl
inc
gs
sub
out
push
cmp
mov
lahf
cli
jl
imul
sbbb
inc
mov
repz
ljmp
sub
in
push
xchg
movsl
mov
or
fiaddl
lds
in
in
rol
cli
xor
inc
mov
sbb
cltd
scas
xchg
lret
jns
push
gs
pop
pop
leave
mov
dec
pop
loope
sbb
sbb
sarb
push
sub
push
adc
mov
cmc
cmp
loope
jmp
fildl
or
popf
xor
mov
sbb
mov
and
test
jbe
dec
cmpsb
xchg
dec
repz
stos
cwtl
xor
mov
sub
mov
shl
popf
xchg
mov
dec
movsb
test
inc
adc
push
lock
jb
in
jl
test
mov
mov
or
movsl
leave
das
test
add
adc
fwait
inc
adc
cmp
ret
inc
fmulp
push
and
fiaddl
movb
jo
insb
cmpsl
jne
aaa
mov
sti
roll
mov
shll
imul
sahf
aas
aaa
mov
add
nop
test
insb
push
or
aam
mov
enter
notl
push
orb
and
out
ret
jnp
sar
mov
lret
cmc
mov
sbb
xchg
cmp
jae
xchg
pop
sarb
push
test
orb
loopne
test
in
adc
inc
jne
int3
ss
xchg
jnp
pop
js
sbb
inc
out
or
js
ret
mov
scas
adc
sti
fsubs
lods
mov
cli
add
jp
sub
fildll
pop
jb
or
imul
stos
jne
aaa
xlat
adc
sub
insl
popf
lcall
loop
pop
cmpsl
data16
fsubr
xor
ret
in
aas
jbe
fs
mov
xchg
aad
in
pop
aad
into
mov
lods
mov
adc
ds
fdiv
cwtl
movsb
adc
adc
std
inc
ret
cmp
cltd
push
fldcw
test
ds
repz
aad
scas
icebp
aaa
gs
ljmp
idivl
hlt
jne
add
scas
mov
das
std
mov
imul
sub
loope
mov
fidivl
popa
inc
xchg
nop
bound
xchg
push
xchg
xor
test
xchg
inc
in
int3
ret
out
ret
stos
pop
outsl
xchg
push
and
movsl
es
and
sub
lret
jnp
test
xchg
roll
cmp
push
lret
jbe
jno
sub
pusha
jns
add
pop
jp
push
and
pop
cmp
push
or
fdivrp
mov
xchg
fnstenv
ret
cmp
or
das
pop
ret
sbb
dec
fwait
loop
out
mov
mov
mov
into
and
mov
push
push
cld
fdivrl
cs
mov
sbb
fcmovb
pop
inc
pusha
mov
out
out
pop
push
cld
jg
xchg
push
xchg
push
nop
sbb
ss
hlt
jns
jmp
mov
imul
in
testl
inc
sub
vpaddd
inc
jmp
pop
jne
push
and
mov
stos
dec
fwait
or
das
sbb
lahf
mov
push
inc
xchg
xchg
mov
ret
aad
mov
arpl
push
dec
bound
repnz
shlb
cld
fwait
push
ret
push
daa
inc
addr16
cmp
sub
push
dec
icebp
pusha
test
movsb
inc
test
cli
mov
lcall
aam
xchg
push
sahf
subl
mov
adc
dec
leave
sahf
push
push
popa
mov
rcr
lcall
sub
adc
mov
incl
inc
ret
shr
mov
xor
jge
jg
inc
in
in
repz
inc
push
mov
mov
mov
sbb
rolb
jo
jecxz
jg
test
jne
sbb
pop
cmp
adc
lock
sti
dec
inc
push
mov
roll
in
jbe
inc
cli
mov
mov
mov
jmp
and
dec
and
mov
lahf
xor
ret
repnz
call
inc
jns
dec
fcmovb
push
pop
cmc
shll
mov
les
adc
mov
vpsubq
loop
scas
scas
push
mov
inc
je
adc
adc
cmp
int3
loope
enter
ljmp
shll
nop
addl
adc
mov
jne
push
jmp
lods
lret
dec
addb
iret
inc
stos
push
pop
dec
xchg
sub
test
pusha
hlt
or
fcomi
or
sub
shll
mov
cmp
pusha
sbb
in
rcll
mov
sti
mov
sbb
shlb
pop
xor
sub
push
mov
or
lds
add
data16
mov
dec
xor
call
push
and
repnz
mov
lock
lods
mov
mov
outsl
stc
push
outsl
xor
out
movsl
fbstp
xor
insl
mov
add
repz
or
add
xchg
or
ja
mov
mov
pop
int3
popf
pop
repz
lahf
into
pop
cmpsl
dec
insb
mov
jle
mov
inc
xchg
xchg
sub
add
and
add
push
pop
daa
test
out
push
adc
or
inc
xchg
stc
cmp
pop
scas
pop
push
repnz
cmpsb
push
sub
mov
call
inc
sti
inc
mov
out
push
movsb
mov
lret
sub
push
into
push
loop
mov
mov
xor
inc
stos
mov
cs
or
mov
jge
jno
mov
scas
jae
popf
xchg
and
orl
xchg
xor
dec
iret
jne
xor
out
frstor
popa
loopne
dec
cli
jmp
fs
xchg
loop
rorb
fimull
mov
jns
jg
hlt
aas
sbb
or
int3
cmpsb
mov
push
nop
out
out
xchg
add
push
lahf
je
data16
addb
pushf
jns
mov
ret
jl
repz
inc
add
aad
mov
jns
ja
sbb
out
fwait
cmp
jae
dec
ljmp
cmp
pop
jmp
inc
push
jle
or
addb
imulb
js
gs
ljmp
jg
push
sub
fcompl
test
jo
jo
adc
lcall
mov
sub
push
mov
lcall
adc
cmpsl
jmp
mov
mov
test
iret
sbbl
js
in
push
fcoms
mov
xor
add
ret
mov
movl
repnz
xor
and
cmp
jns
sahf
dec
dec
ja
mov
daa
bnd
pusha
iret
stc
mov
pop
push
mov
xlat
in
add
fldl
xor
cld
and
mov
xchg
jae
ror
in
mov
loop
out
jns
loope
xchg
mov
addl
inc
xor
xor
xchg
or
inc
xlat
xchg
ret
fildl
ja
or
in
rcll
testb
sub
mov
inc
pop
xor
dec
iret
mov
shl
push
xchg
and
movl
ss
cmp
lcall
jns
adc
mov
repnz
cmpsl
mov
in
aam
jle
push
xchg
dec
cmpsb
cmpsl
repnz
shll
xor
lods
cmc
adc
lods
inc
mov
test
in
and
cmpsb
inc
inc
andl
stc
xchg
cmc
mov
pop
pop
jle
hlt
cmc
popf
push
xor
push
or
jnp
sahf
inc
dec
sahf
xchg
repnz
and
mov
dec
loop
dec
ljmp
enter
or
mov
sarb
daa
xor
mov
int
loope
mov
mov
and
into
nop
add
push
dec
pop
ja
mov
inc
add
xchg
inc
jg
xor
mov
pop
xor
cmp
enter
andb
add
sub
mov
pop
or
call
cmp
ja
xor
aad
adc
xchg
sti
popf
adc
bnd
jb
je
or
xchg
loop
imul
outsl
sub
cmp
stos
cmpsb
and
aaa
movsb
movsl
or
loop
int
or
mov
filds
sahf
adc
add
mov
insl
pushl
sub
jne
sbb
test
aas
data16
inc
mov
mov
push
outsb
xchg
in
jae
cwtl
decb
xchg
fcmovb
sbbl
sub
or
add
push
aas
jmp
cmp
jo
aaa
cld
pop
xor
push
xchg
xor
repnz
xchg
das
loop
and
inc
aad
mov
add
aaa
mov
and
xorl
adc
repz
aas
dec
cld
ja
pop
movsl
pop
js
insb
in
add
sarl
and
mov
dec
mov
pop
push
jecxz
sub
xchg
outsb
mov
mov
sbb
in
sbb
pop
je
adc
std
rcrl
ja
js
mov
scas
and
std
sub
sti
add
push
add
insl
pop
push
xlat
jnp
jmp
popa
push
jae
mov
popf
add
push
pop
clc
pop
int
cs
or
xor
ror
add
sub
mov
out
jge
mov
aam
ja
push
dec
cmp
mov
fwait
test
fimull
pop
clc
pusha
rclb
stos
cwtl
cmp
sub
aas
jl
push
loope
aam
jae
push
push
popf
gs
xchg
ficompl
popf
lea
mov
daa
sbb
das
sub
inc
adc
add
testl
pop
insb
out
icebp
loope
push
clc
add
aam
in
sub
cmp
xor
imul
fwait
clc
ficoms
in
ficoms
push
pop
ss
push
rcr
jo
ljmp
xor
inc
sahf
in
mov
adc
out
jbe
push
fnstcw
jge
test
or
or
arpl
xchg
aas
xchg
sarl
loopne
dec
dec
addr16
cmpsl
or
fsubp
push
mov
inc
cmp
xor
mov
test
roll
pop
xor
mov
ret
jge
data16
mov
xor
adc
je
lods
lret
int
sub
push
mov
adc
dec
cs
sbb
jne
or
mov
ror
mov
lret
inc
test
mov
add
pop
xor
mov
inc
add
rcrl
scas
popf
mov
pop
sub
pop
dec
leave
fbstp
xchg
scas
push
outsl
or
lcall
inc
insl
sub
in
sbb
inc
adc
repnz
sahf
mov
add
sbb
push
daa
dec
cli
or
pusha
pop
es
cmp
adc
fiadds
scas
andl
inc
mov
idivb
int3
ds
cmp
jecxz
stos
movzbl
sub
ja
mov
sahf
jl
or
inc
mov
pop
inc
js
mov
add
cmp
out
pushf
in
jg
xor
cmp
push
sub
mov
xor
mov
lret
ljmp
xchg
xor
xchg
push
cmovae
stos
insb
cmpsl
out
add
adcl
lock
pushf
pop
pop
out
ret
sbb
cmp
aad
push
out
inc
subl
inc
out
cmovbe
lahf
cltd
cli
add
jne
divb
push
jle
iret
fdiv
jo
mov
mov
dec
inc
ret
mov
leave
adc
jns
loope
shll
mov
mov
call
sub
clc
insb
jmp
imul
fidivs
pop
ret
stos
test
out
lcall
testl
dec
mov
sub
insb
sbbb
push
cmp
jmp
inc
popa
adc
adc
mov
inc
shl
and
pop
add
outsb
mov
loop
mov
ss
repz
jle
test
mov
into
mov
push
idivb
aad
rorb
push
stos
jmp
push
add
stos
out
aad
add
cmpsl
push
add
sub
cs
ljmp
test
fcmovbe
xchg
push
mov
cmp
push
neg
sbb
dec
inc
mov
xchg
pop
jae
push
lds
xchg
icebp
mov
sti
dec
pop
mov
push
shl
pop
or
rorl
in
xlat
sbb
test
adc
dec
sti
and
push
lods
lods
mov
xor
dec
jecxz
shlb
fucomip
mov
xor
xlat
sbb
rorl
seto
aam
xor
cmp
mov
jg
xor
inc
ljmp
fwait
and
push
sub
sbb
push
jmp
enter
es
mov
rclb
sbb
ss
leave
cmc
xor
pop
xchg
push
cmp
and
popa
aad
mov
jmp
mov
fldt
cmc
in
outsl
enter
sub
or
lds
fwait
outsl
outsb
aas
scas
sub
clc
aad
setge
or
and
sarb
push
push
xchg
and
shll
in
scas
fsubp
mov
lds
imul
sarl
add
lcall
test
and
js
ljmp
lods
adc
adcb
cmpsl
sub
out
cmp
stos
jp
push
xor
mov
xchg
in
inc
je
lock
pushf
imul
ljmp
fwait
push
inc
add
jnp
in
dec
rcll
imul
jmp
loope
les
jmp
adc
adc
dec
adc
push
and
and
xor
ds
sbb
lret
out
fdivs
sbb
pop
cmp
and
mov
push
xchg
out
push
js
xor
pop
mov
or
push
out
jecxz
aaa
mov
mov
stc
pop
imul
pop
mov
mov
cwtl
popa
mov
rclb
pop
adc
mov
aam
sub
into
imul
aaa
lret
dec
sbb
jae
push
loop
inc
sbb
imul
or
repnz
dec
ja
loope
andl
pop
in
mov
mov
or
lods
mov
aad
out
dec
push
popa
dec
int
loopne
push
ret
push
lds
push
fwait
jns
push
jg
mov
and
lods
loop
adc
inc
aas
and
mov
hlt
pop
hlt
arpl
sbb
fsubs
cmpsb
adcb
dec
setno
stos
dec
sti
jg
cmp
pusha
in
and
gs
xchg
add
push
mov
push
push
pop
xchg
inc
inc
in
cmp
inc
jns
or
xor
and
jo
movsl
pop
xchg
cwtl
pop
addr16
dec
add
and
inc
or
jmp
mov
jl
pop
mov
sub
mov
xrelease
repz
mov
clc
pusha
push
mov
sti
addb
jmp
sahf
push
cwtl
adc
pop
xor
popa
inc
in
push
fwait
inc
call
sub
std
push
cmp
add
dec
cmpl
inc
push
jp
cwtl
xchg
sbb
repnz
loop
test
xor
cld
fs
cmpsl
sub
addr16
cs
imul
or
movsb
aaa
and
fsubrl
movsb
cld
dec
fldl
adc
aam
and
mov
fsubr
or
lcall
xorl
xchg
push
movsl
cltd
int
jno
sahf
pop
mov
xchg
adc
push
inc
rol
out
mov
popf
and
xchg
scas
lock
aam
jae
push
movsl
les
call
sub
test
cmp
lods
xchg
cs
push
sbbl
or
out
bound
mov
mov
inc
adc
inc
push
pop
lret
inc
adc
in
movsb
xchg
aam
mov
or
mov
adc
pop
jns
sub
leave
mov
andb
adc
jns
inc
dec
jbe
stc
imul
inc
push
push
inc
imul
test
int
mov
xchg
dec
mov
push
gs
mov
dec
cltd
pusha
xchg
les
out
xchg
sti
dec
push
insl
push
insb
adc
in
outsl
xor
mov
lods
xchg
icebp
sbb
testl
sub
movsb
lock
mov
dec
test
jmp
shlb
jno
pop
add
mov
xchg
dec
test
xchg
shr
and
inc
cmp
fdivl
xchg
mov
xchg
jne
mov
lods
in
es
mov
imul
cmp
imul
lock
sub
lcall
xor
xchg
cmp
push
repz
add
lods
insl
xchg
push
scas
movsl
faddl
adc
xor
add
mov
jno
jnp
mov
sbbb
push
rorl
stos
pop
shl
pop
pop
lods
rolb
inc
fistl
xchg
jbe
xorb
mov
popa
jae
xor
subb
loope
jp
lret
lods
dec
and
mov
lods
cmp
cmpsl
mov
cmp
stos
mov
loopne
push
mov
inc
and
sub
dec
or
adc
sahf
frstor
fildl
enter
cli
stos
or
xchg
lds
in
cmp
leave
sti
rolb
sub
mov
mov
sti
inc
sbb
stc
testb
cli
or
jb
data16
adcl
adc
adc
pusha
pop
fdivrs
cmpsb
fadds
push
rorb
mov
dec
test
cmp
repnz
add
mov
rorb
adc
cltd
jno
rorl
push
das
pop
cmp
xor
jb
mov
int
xchg
inc
mov
jno
aaa
jmp
pop
fcompl
push
and
imul
sarb
shrl
loope
push
jno
rcll
mov
xor
sub
add
xlat
cmpsb
or
loopne
mov
mov
scas
aam
movsl
sub
sub
pop
fcom
orl
jg
adc
inc
mov
sbb
popf
xor
in
jecxz
sbb
mov
xchg
pop
std
xor
push
mov
sub
lea
jo
pop
xor
or
call
loop
and
push
xchg
xor
les
xchg
pop
pop
cmc
sub
jno
mov
push
fbld
push
aam
movsl
inc
cmp
mov
sub
nop
sbb
mov
mov
xchg
cmp
xor
mov
adc
mov
pop
and
sub
aad
xor
data16
icebp
bound
jmp
loopne
mov
push
fs
xor
fucomi
arpl
addr16
xchg
sbb
aaa
cmp
js
xor
or
push
mov
inc
cmp
outsl
and
sbb
stos
mov
mov
adc
imul
dec
inc
xor
xchg
mov
call
cmp
push
cmpsl
cli
ffree
add
add
test
ja
mov
lcall
mov
push
mov
xor
xor
lds
adc
inc
aas
dec
cmc
pop
mov
or
jle
bound
push
aad
imul
lahf
sbb
xor
pop
mov
mov
lcall
ret
leave
mov
push
fistps
loope
mov
push
sub
js
jne
out
adc
inc
adc
and
pusha
jmp
lock
in
mov
cmp
les
push
jle
xchg
lods
into
mov
test
mov
add
dec
mov
adc
or
sahf
and
jg
xchg
push
sbb
fsubrp
pop
xchg
testb
je
push
inc
mov
jp
sbb
aas
pop
in
jae
push
pop
mov
dec
or
cmpsl
filds
aaa
or
stc
or
cmp
jo
pop
inc
in
adc
sbb
adc
mov
push
jmp
sbb
cmp
ffree
xorl
lahf
into
decl
dec
push
addb
dec
mov
xor
hlt
sbb
xchg
out
mov
mov
cmp
ja
mov
pop
sub
cmp
ja
pusha
not
dec
pop
sbb
mov
mov
lds
pop
ss
adc
js
pop
jbe
sti
add
jnp
xchg
shll
and
sub
mov
fimuls
sub
stos
outsl
mov
fisubs
lods
xor
les
pushf
sub
xor
add
clc
iret
add
mov
gs
mov
scas
cs
mov
xchg
push
out
xchg
outsb
into
in
inc
lea
and
sbb
pushf
mov
std
lahf
fisttpl
dec
dec
lcall
jb
fcoms
add
or
add
ljmp
mov
or
clc
xchg
sbb
xchg
inc
mov
jle
punpcklbw
mov
lea
pcmpgtw
imul
mov
aam
pop
xor
je
cmp
xchg
mov
jne
push
mov
cld
or
jns
fdivrp
cmp
das
les
jp
push
push
add
add
push
fs
push
pushf
adc
dec
inc
cmp
loopne
pop
std
inc
mov
rol
inc
pusha
mov
push
push
mov
mov
sub
hlt
addr16
mov
repnz
test
loopne
sub
lods
xchg
test
add
test
mov
jp
xchg
outsb
ds
das
xor
push
je
dec
mov
and
add
out
jns
out
mov
mov
or
outsb
or
cmpsl
lahf
mov
ja
inc
stos
inc
pop
fmuls
sbbb
das
pop
xor
scas
daa
in
mov
push
mov
sti
inc
fildll
cmp
lret
sub
std
in
flds
shll
pop
adc
mov
movnti
pusha
aaa
xchg
out
xor
add
sub
dec
xor
rorb
or
xchg
dec
and
push
jno
pusha
mov
lods
xchg
xor
ds
pmullw
or
push
jns
inc
pop
xchg
mov
enter
add
pop
mov
test
push
mov
sbb
sbb
pop
add
enter
xor
sahf
mull
bnd
fsts
pop
xor
adcb
test
cmp
jbe
sbb
cltd
inc
clc
jmp
adc
lahf
ja
mov
add
movsl
push
decb
adc
inc
enter
adc
nop
fldl
adc
jle
ljmp
cmp
dec
lock
xor
bswap
or
lock
repnz
loopne
cmp
xchg
daa
jae
cltd
fmull
mov
movsb
push
repnz
add
pop
mov
mov
add
lods
out
inc
push
lret
das
lcall
mov
pop
mov
dec
adc
xor
inc
mov
or
cmp
out
and
out
xchg
addb
shll
stc
arpl
add
inc
push
outsl
andl
mov
inc
mov
pushf
ret
sbb
mov
add
pusha
jb
add
int
dec
idivl
imul
mov
add
popf
cmp
adc
lods
xor
hlt
mov
dec
jno
out
stos
push
xor
dec
stos
mov
out
iret
lods
xchg
cmp
pushf
fstpt
nop
insb
cmpsb
test
cmp
std
cwtl
sbb
fistl
pop
sub
jle
push
push
aas
xchg
testl
push
out
ret
loope
stc
jnp
aam
fnstsw
jle
sbb
pop
inc
cmp
sbb
push
sub
das
test
pop
cmpsb
sub
fisubs
icebp
jle
ja
icebp
fsubrs
inc
inc
dec
leave
push
cmp
out
repz
mov
mov
mov
xchg
inc
mov
loop
outsl
les
imul
jno
sbb
mov
push
jp
imul
inc
mov
xor
push
scas
xchg
ror
pop
pop
ret
xorb
sbb
aam
jg
aam
lret
mov
repz
lock
mov
jbe
adc
stos
cmp
mov
sub
push
jnp
ret
mov
imulb
jmp
pop
push
dec
sbb
pop
fwait
es
mov
jg
push
rol
dec
lods
shll
mov
sbb
dec
repz
or
scas
add
sub
imul
fcmovnu
enter
mov
adcb
fisttps
xchg
push
xor
icebp
insl
nop
jno
aad
fldcw
jne
scas
aaa
and
pop
stos
insl
adc
or
push
or
out
sbbb
add
stos
les
push
cld
adc
xchg
or
dec
mov
xchg
inc
jo
push
repnz
mov
sti
add
das
adc
push
in
popf
jne
pop
push
out
push
rcll
sbb
and
dec
inc
test
out
popl
adc
adc
test
stos
mov
enter
dec
scas
sub
icebp
imul
xorb
xor
sbb
call
test
outsb
sbb
cli
pop
pop
cs
leave
leave
notl
dec
mov
stos
jge
sti
xor
stos
push
dec
pop
adc
imul
lret
and
loopne
mov
sbb
fimuls
mov
or
popa
and
maskmovq
divl
enter
cmc
cltd
xchg
add
repz
cmp
xor
scas
pop
mov
call
repnz
cmp
jae
testl
cli
sub
fiadds
push
mov
jg
in
int
push
push
cmp
jge
mov
pop
dec
pop
outsb
fistpl
xchg
inc
fistps
dec
jbe
cmp
sbb
dec
jg
jle
enter
leave
movl
add
shll
xchg
out
scas
push
pop
dec
push
push
enter
subl
bound
sbb
dec
test
jl
int3
fcoml
call
je
mov
les
shlb
repz
aaa
push
cmp
push
sbb
xchg
arpl
dec
insl
nop
mov
arpl
adc
daa
jbe
or
inc
fdivrp
out
stos
test
or
or
movsb
sbb
loop
pop
pop
dec
gs
imul
push
inc
pop
jmp
mov
cwtl
mov
lret
xorl
adcl
mov
or
pop
dec
xor
and
xchg
out
mov
xchg
or
fdivl
mov
xlat
or
add
inc
stos
stos
lds
data16
cmp
mov
shlb
adc
mov
dec
lret
push
sub
push
push
test
push
ss
cmpl
push
addr16
fs
iret
pop
pop
outsl
sbb
lock
aad
fwait
popa
in
dec
popf
mov
out
lret
sub
insl
lcall
mov
ret
data16
loop
jl
mov
call
push
xor
movd
fldlg2
cmp
pop
out
dec
push
pop
add
push
xlat
insb
jns
dec
sbb
popf
mov
mov
das
jmp
roll
push
jmp
inc
xchg
push
cld
insl
shl
push
adc
push
data16
lahf
pop
sbbb
shlb
leave
orl
or
pop
jmp
std
xchg
sahf
nop
sub
pop
jne
repnz
xor
xor
dec
inc
inc
lock
cmp
mov
jg
sbb
mov
shlb
sub
mov
ret
daa
les
sbbl
inc
pusha
xor
cmp
fistl
pop
mov
mov
inc
ret
xorl
add
nop
and
or
pop
jno
mov
cmp
jns
int
xchg
mov
and
and
sub
fdivrs
xchg
mov
stos
icebp
loope
int
cmp
mov
loope
inc
int3
mov
mov
mov
mov
sbb
xchg
popf
lds
je
jp
jbe
adc
aaa
add
addl
jo
xor
ror
ss
loopne
out
pop
cmp
mov
test
es
xlat
mov
adc
les
inc
mov
cmp
subb
out
add
je
repz
stos
jecxz
cs
outsl
pop
push
outsl
rcrl
lcall
pop
pop
pushl
jo
rorl
mov
aad
dec
out
fdiv
or
movsl
sbb
sar
jl
mov
pop
mov
sbb
test
lds
mov
mov
leave
fidivrl
jmp
fcomps
pop
cld
mov
push
nop
mov
and
pop
mov
data16
test
dec
jo
test
cvtdq2ps
js
mov
movsb
xchg
ds
xchg
sub
push
jge
int
xchg
lds
mov
shll
inc
cld
inc
ljmp
cmpb
jae
lret
in
into
mov
inc
ds
adc
pop
fstl
ret
pop
roll
int
aam
jecxz
push
mov
fstps
dec
test
xchg
push
mov
push
shl
leave
mov
dec
xor
mov
jmp
mov
push
aaa
imul
cmp
sub
ret
mov
movsl
mov
adc
or
iret
adc
dec
sbb
push
jno
scas
bnd
lock
sbb
pop
test
cmpsl
ljmp
cmp
sbb
push
xchg
cmp
add
rorl
cmp
je
xchg
mov
or
mov
test
sub
iret
jo
fisubrs
test
pop
dec
test
or
imul
sbb
lock
fwait
jp
sub
sbb
das
cmp
arpl
lea
imul
fstl
mov
push
ret
stos
mov
test
mov
sbb
xchg
sub
es
jo
pop
sbb
into
add
in
add
sub
dec
mov
movsl
push
xchg
aam
add
out
aad
or
das
leave
sbb
inc
test
dec
mov
sbb
lret
aam
pushf
and
call
rolb
push
fmuls
pop
pop
mov
je
dec
ror
test
inc
daa
into
imul
inc
mov
inc
ret
jbe
pushf
test
sbbb
jmp
mov
cmpsl
add
mov
mov
lock
lcall
stos
cmp
inc
adc
pop
sub
inc
imul
lods
fs
out
xor
lds
lds
dec
push
repnz
test
sbbb
mov
push
or
out
jp
pop
hlt
xor
pop
sub
inc
add
fisttpll
repz
sub
xchg
push
pop
dec
mov
arpl
add
mov
mov
clc
js
mov
xchg
fstl
xchg
mov
pop
loope
test
sbb
fxch
xchg
leave
inc
aam
lods
mov
xchg
imull
push
ja,pn
adc
insb
add
das
leavew
fsubs
pshufw
adc
sbb
pop
aas
repnz
aad
daa
xchg
and
rcrl
fadd
arpl
pop
dec
dec
mov
mov
aaa
shlb
andl
jecxz
int
js
lock
insb
stc
fidivrl
stos
mov
mov
sub
addr16
push
repnz
pushf
sbb
xor
js
dec
shr
aam
and
adc
pushf
es
or
lahf
stc
nop
dec
in
add
mov
cmpsl
mov
sbb
pusha
hlt
dec
icebp
je
pop
in
adc
std
or
inc
js
push
mov
jle
push
or
lcall
popa
add
mov
or
mov
stos
repz
subl
icebp
xchg
xchg
clc
aas
add
pop
insl
dec
lret
and
mov
out
out
or
or
lods
add
pop
clc
mov
and
sbb
adc
aas
or
test
pop
adc
push
dec
pop
hlt
jb
mov
push
test
aas
push
inc
inc
pop
leave
jbe
add
les
enter
repz
add
scas
aas
fidivrs
inc
xor
or
imul
mov
add
ds
xchg
daa
sbb
adc
mov
int
jno
inc
fwait
xchg
mov
out
xor
loope
mov
mov
repnz
pop
adc
movb
push
pop
xchg
jp
inc
hlt
test
sub
cmc
adc
mov
mov
pop
jl
cmpsb
adc
out
sub
push
sub
dec
add
jbe
out
lea
and
and
ret
xor
out
outsb
mov
repz
imull
sbb
sahf
jge,pt
jmp
cmp
jo
adc
xlat
das
pop
aaa
lret
mov
fidivs
dec
in
push
cmp
jmp
shrb
push
shlb
test
jg
loopne
dec
and
pop
push
cmp
add
fs
fdivl
sti
jle
push
daa
add
jo
pop
jnp
shll
in
jmp
test
cmovb
lock
cmp
add
jecxz
adc
aas
sarl
or
or
rep
scas
sbb
or
mov
sub
add
std
arpl
mov
cs
sub
adc
sub
or
adc
not
stc
dec
pop
std
sbb
add
pop
shr
jae
lds
sub
xchg
add
cld
mov
and
roll
inc
mov
mov
xchg
mov
xchg
negb
inc
push
movsb
stos
rorl
inc
test
dec
sbb
rcl
sbb
movsl
jb
scas
mov
or
ret
push
out
ja
adc
mov
inc
rorl
push
out
fstps
hlt
lock
out
pop
sub
dec
int3
sub
push
dec
xlat
stos
xor
aas
data16
aas
cmp
pop
fmul
jae
adc
bound
pop
mov
repz
jb
lock
jno
sti
sbb
or
mov
dec
and
insw
syscall
adc
lods
adc
scas
in
lods
fprem1
push
pop
push
shlb
sbb
or
and
mov
cmpsl
aas
mull
inc
shlb
lods
jle
jns
dec
loopne
xchg
aad
xor
jmp
insb
xlat
call
and
adcl
shrb
stos
cli
mov
bound
mov
sub
add
push
add
push
and
cmp
call
pop
pop
xor
cld
push
insl
cmp
mov
jmp
ljmp
test
popa
dec
cmpb
xchg
mov
push
mov
arpl
daa
jns
aad
jb
lret
je
jnp
enter
cli
outsb
lods
sbb
cltd
xchg
call
std
xor
mov
jne
mov
lcall
rcl
adc
mov
or
cmp
fs
sub
jle
loopne
cmp
and
subb
inc
movsb
int3
cli
dec
pop
jo
push
stos
das
fiadds
imul
mov
adc
xor
or
sbb
inc
mov
fsubrl
inc
mov
in
iret
test
sub
sbb
sbb
movb
cwtl
into
adc
sarb
insb
test
aam
or
daa
jb
bnd
xorl
adc
mov
xor
mov
xchg
inc
stos
ret
pop
cmp
lcall
iret
movsb
jp
jle
fs
jge
lds
cld
test
je
shrl
mov
fmul
push
in
popa
rcll
aad
jne
fwait
iret
pop
push
mov
dec
cld
or
test
lods
jo
cmpl
jecxz
push
jmp
mov
inc
mov
push
sub
mov
mov
jne
pop
mov
pop
or
adc
rorl
test
lcall
cmpl
cmpsl
sbb
fdiv
ret
cmp
sahf
add
adc
lret
xor
xchg
inc
cltd
jmp
mov
fcmovne
sti
xchg
xlat
sub
mov
iret
inc
xor
adc
and
loop
int3
add
pop
jns
lcall
jae
push
scas
repnz
nop
aaa
jns
lods
xor
cltd
out
cmc
mov
jge
sbb
and
adc
push
adc
and
jge
mov
lahf
jecxz
pop
sarl
lea
pextrw
add
push
jp
into
add
test
inc
sbb
paddq
cmp
subb
mov
mov
cwtl
sub
mov
jle
into
mov
daa
xchg
xchg
mov
sbb
cli
stc
push
fistpl
pop
hlt
hlt
pop
mov
out
cmp
loope
dec
int3
outsb
and
or
std
sbb
or
adc
jb
adc
movsl
iret
xor
push
dec
call
jge
jo
xchg
push
push
lock
ret
jne
mov
sub
test
stos
dec
out
in
es
mov
shrl
fldt
in
mov
mov
fldl
ja
cmp
aaa
stos
js
adc
fistl
mov
mov
jae
cmp
loopne
and
test
dec
mov
cwtl
cli
negl
sbb
jbe
stos
push
out
xchg
push
mov
repz
data16
outsb
mov
dec
in
daa
sbb
mov
lret
and
and
movsb
mov
iret
xchg
dec
pop
pop
leave
rcl
std
lods
lea
es
outsl
xchg
mov
movsl
mov
push
xor
xor
sbb
push
add
jbe
sub
jp
loope
jle
fs
push
or
les
sub
into
sub
ficompl
cmc
inc
mov
mov
ds
push
jp
adc
push
mov
ja
sbb
xchg
test
in
je
adc
test
jg
fsts
bnd
popf
pop
adc
hlt
cmp
shll
sub
pop
or
cmp
mov
mov
pop
mov
xor
aad
cltd
xor
cmc
push
cmc
lea
std
inc
jbe
or
cmp
insl
xchg
movsb
pop
ss
loope
mov
mov
rcrb
xchg
movsl
bound
add
es
insl
daa
cli
push
sahf
xor
popa
push
into
cmc
scas
inc
ret
and
mov
mov
imul
es
insb
test
loopne
mov
cmp
outsb
sub
in
test
pop
inc
add
addr16
aas
repz
push
xchg
and
cmp
das
hlt
or
pop
imul
dec
inc
fnstenv
test
sub
lcall
fisttpl
cmp
dec
fs
es
orb
xchg
sub
xchg
subl
xor
mulb
js
loopne
loope
mov
mov
daa
adc
xchg
movsl
loope
stos
dec
pop
fnstcw
popa
xchg
sub
aad
sbb
out
das
sbb
fcmovnu
mov
out
push
ret
jp
std
lods
xor
adc
cmp
hlt
and
add
inc
mov
push
mov
mov
and
lods
xlat
popf
das
jae
pop
cmpsb
and
in
sub
xor
shl
cmpps
jle
mov
push
push
repz
sub
sahf
in
mov
test
lret
xchg
inc
adc
mov
push
imul
lock
in
pop
sub
xor
and
rcrl
cmp
inc
cli
sbb
or
movsb
dec
ljmp
mov
and
clc
xchg
xchg
push
inc
test
pop
out
mov
inc
in
inc
jnp
enter
dec
inc
xchg
and
ja
push
push
imul
sahf
jo
xor
movsb
cmpsb
std
lahf
jge
adc
fldt
shll
cmp
mov
adc
shrb
das
and
adc
int
pop
pop
movsl
imul
inc
jg
enter
test
lods
xor
sbb
lret
stos
jno
mov
aaa
adc
aad
mov
cmp
mov
cmc
jbe
and
pop
lds
xor
lods
nop
jno
popf
lret
cmp
jecxz
xchg
lods
ja
mov
out
xor
insb
sarl
sbb
inc
adc
mov
hlt
fcmovb
out
mov
xorb
add
mov
shl
xchg
and
adc
test
rcl
ffreep
sub
add
jp
dec
jmp
pop
stc
fistpll
jecxz
ret
push
xor
shll
or
lahf
or
inc
sub
cmpsb
mov
inc
push
iret
imul
push
sbb
sbb
stc
in
push
push
cmc
pop
adc
mov
dec
xchg
dec
pushf
inc
daa
cli
mov
popf
in
mov
mov
mov
in
push
adc
shrb
adcl
sbb
mov
push
test
and
dec
fwait
or
xchg
or
pop
sbb
jp
out
data16
movsl
dec
lret
cmp
dec
les
inc
mov
stc
adc
insb
icebp
fwait
sbb
jns
cmp
jbe
insb
xchg
xor
ljmp
or
mov
push
sub
adc
dec
out
mov
or
pop
xlat
adcb
pop
nop
mov
and
insl
scas
scas
lock
jmp
or
imul
inc
out
imul
cmp
fidivl
xor
loop
mov
pop
scas
sbb
adc
addr16
out
inc
insl
imul
mov
xor
stos
pop
cmpsb
adcb
and
in
cmp
xor
outsl
sub
inc
repz
sbb
fsub
mov
outsl
add
enter
dec
sbb
add
mov
bound
push
je
rorb
popa
fs
inc
cmp
scas
inc
fs
pop
mov
rcll
es
js
mov
push
xor
mov
mov
fldl
data16
pop
pop
mov
adc
cwtl
push
lods
adc
lahf
cmp
push
outsb
and
idivl
andb
or
sub
xor
cmp
stos
sub
xor
pop
pop
mov
and
in
xlat
lcall
xor
mov
dec
aas
sbb
lcall
inc
aam
nop
ret
push
jl
cmp
mov
gs
pop
xor
push
or
test
aas
out
enter
xchg
stc
in
bound
dec
lahf
in
sar
xchg
into
pushf
cwtl
sbb
pop
and
xchg
int
jne
lret
inc
xor
lret
imul
inc
inc
ds
sub
cmp
or
test
cmp
std
or
inc
xchg
inc
lods
ror
and
mov
pop
test
movsl
sub
dec
push
inc
js
mov
jle
or
stc
ljmp
mul
ret
dec
nop
int
add
push
std
mov
mov
dec
in
xlat
stos
pop
aas
lret
sbb
mov
pop
bound
push
decb
push
sub
test
add
and
js
sbbb
lea
jmp
pop
dec
out
or
stos
aas
inc
dec
test
jno
or
andb
insb
or
lock
xorb
adc
adcb
loopne
mov
in
cmc
nop
jb
or
das
ja
mov
repz
sahf
js
orb
popf
pop
lods
fidivs
ss
jge
add
add
and
imulb
ret
mov
pop
mov
or
cwtl
ljmp
insb
cmp
iret
lds
in
out
xchg
pop
xchg
ja
mov
adc
or
aad
mov
mov
push
dec
js
and
cmp
cld
xlat
bound
sbb
mov
pop
xor
mov
shlb
shrl
aad
fwait
mov
or
notl
sbb
sub
sbb
xor
dec
push
and
in
mov
jno
push
xor
pop
adc
mov
repnz
outsl
lahf
jbe
jle
push
loope
ja
sub
pusha
sub
inc
mov
stc
adc
cs
test
mov
pusha
jp
sbb
cmp
or
andb
arpl
scas
mov
and
pop
dec
push
dec
xor
nop
push
nop
aad
jne
aas
xchg
pop
adc
das
mov
insb
insb
mov
sbb
jmp
out
lock
xor
pop
test
mov
imul
dec
sub
mov
mov
inc
movsl
inc
jmp
dec
loopne
fsub
call
lcall
push
int3
mov
pusha
mov
lods
sahf
pusha
push
or
ficompl
add
xchg
pop
pop
xor
jno
cmp
push
test
xor
jb
adc
ds
or
push
into
sahf
cwtl
mov
cmp
jb
mov
jno
movsb
xor
mov
test
xchg
cmp
sbb
je
inc
sub
pop
mov
sbb
loop
pusha
sbb
sbbl
lret
cmp
add
movsl
pop
movl
dec
loope
jle
jb
fs
push
push
dec
jmp
pop
or
adc
js
mov
push
out
imul
lret
fcmovnbe
std
fbstp
adc
or
fsubl
into
leave
mov
cmp
leave
hlt
or
inc
push
scas
add
xor
adc
shl
popa
daa
es
lea
dec
loopne
adc
cwtl
and
pusha
call
push
cmp
leave
inc
lret
movsb
add
cmpsb
adc
mov
xor
xchg
outsb
mov
cmovne
stos
scas
sti
rcll
fstp
ret
pop
divl
push
bnd
dec
mov
mull
movsb
imul
call
sub
xchg
ret
sarl
cmpsl
mov
push
jnp
xor
mov
sub
stos
cmpsl
fsubrs
insb
sbb
insl
push
ds
sbb
out
test
stos
sbb
loop
lods
bnd
jp
nop
mov
cmp
add
aam
cmp
jbe
outsl
cmp
fnstcw
dec
sbb
aam
popf
adc
das
mov
and
sub
rcl
mov
push
fnstsw
cs
dec
fwait
sub
mov
in
repnz
push
and
adc
push
scas
mov
sbb
jae
cmc
arpl
int
and
mov
push
inc
ja
sub
xor
test
jp
mov
xor
fisubrl
xor
sub
and
rol
push
lock
sub
sbb
sub
bound
mov
fwait
jecxz
arpl
xchg
cmpb
shrl
addr16
or
mov
xor
inc
subb
xlat
notl
lahf
shrl
mov
lcall
adc
inc
sti
fnstenv
jl
test
jb
mov
inc
dec
mov
mov
rorb
in
out
sbb
pushf
xchg
inc
or
sbb
roll
push
aaa
pop
test
and
stos
in
mov
aam
imul
cmpsl
and
in
rcl
repnz
jecxz
test
jb
cmc
into
push
inc
lahf
or
data16
js
ja
clc
incl
dec
inc
std
and
xchg
lcall
jecxz
int
xor
shr
fld1
jle
arpl
lods
mov
aaa
js
inc
loope
pop
rcrb
inc
or
mov
mov
fistps
or
cli
enter
aas
int
jns,pt
cmp
enter
leave
aad
dec
test
inc
fsubp
into
sti
ret
lds
popf
fs
jno
push
cmp
jge
js
lahf
jge
dec
pop
sub
lcall
in
xor
movsb
imul
shrl
nop
fucomi
fucomp
or
sub
or
pusha
add
mov
or
jns
into
dec
sub
sbb
in
insb
ds
mov
lahf
insb
sbb
mov
int
cwtl
repz
stos
push
and
push
aad
mov
dec
adc
lea
lret
pop
sub
int3
aas
lods
rcl
push
adc
mov
mov
and
stc
jne
lock
pop
clc
stos
jae
xchg
pop
test
xchg
sbb
cld
inc
out
stos
pop
mov
test
daa
xor
int3
lea
rcrb
fdivrs
sub
icebp
or
stos
fnstcw
inc
push
or
dec
adc
test
and
es
inc
sub
pop
in
repz
mov
mov
loopne
cmp
pop
mov
mov
sub
push
icebp
jae
roll
test
int
arpl
xchg
pop
xchg
jne
call
lret
and
mov
add
mov
push
enter
and
jae
mov
dec
nop
or
fidivrl
mov
sbb
inc
push
push
mov
in
sbb
jns
repz
cwtl
test
adc
pop
mov
jmp
outsb
imul
fstpt
shrl
dec
scas
ja
mov
mov
pop
cpuid
sbb
jge
xchg
mov
add
sub
sub
in
inc
adc
xchg
into
mov
adc
cmc
aaa
stc
fisubrs
ret
push
jp
push
lea
xchg
mov
je
sub
lret
pop
in
jb
cwtl
or
sub
or
mov
nop
scas
call
pop
push
xor
cli
sbb
pop
lea
sbb
xchg
adc
cli
imul
adc
aas
popf
sbbb
int
test
ret
mov
fnsave
in
or
outsl
and
jecxz
adcb
fsubs
lcall
sbb
cmp
std
mov
add
pop
pushf
mov
shrb
push
test
movsl
push
cmp
adc
add
jmp
xchg
mov
push
aaa
test
or
mulb
dec
ljmp
cmpxchg
jb
mov
adc
mov
in
lods
scas
bnd
sbb
dec
into
mov
ficompl
mov
xor
insb
add
imul
popf
stc
mov
xor
jne
xchg
mov
fstps
scas
mov
shlb
addr16
cmc
mov
ja
or
js
adc
cmc
jg
ljmp
push
mov
jecxz
push
sbb
and
dec
scas
test
jo
xor
mov
mov
mov
test
int3
and
pop
mov
and
push
cmp
push
pop
in
mov
ficoms
mov
stc
cmp
out
push
or
out
xchg
stos
mov
out
imul
and
and
mov
jmp
xchg
cmp
in
sbb
inc
es
xor
dec
mov
das
and
addr16
push
icebp
cmp
sbbl
jecxz
pushl
mov
loope
repnz
inc
adc
cmpsb
sub
mov
sbb
pop
test
iret
dec
jb
fcomps
dec
xor
std
dec
lahf
lods
icebp
inc
mov
ja
in
testl
je
jmp
cmpsl
shrb
push
sub
dec
lods
je
jmp
xchg
inc
stc
enter
mov
or
pushf
adc
idiv
cmpsb
pop
js
test
cmp
inc
dec
mov
or
aaa
or
ljmp
push
std
cmp
dec
mov
fs
jnp
popf
loopne
dec
jmp
inc
mov
incl
sbb
mov
adc
sbb
lods
lret
jl
cmpsl
out
sbb
sub
adc
loope
out
add
or
xor
jl
mov
xchg
mov
and
mov
repz
or
xor
push
lret
insb
mov
popa
pop
test
ss
cmp
repz
jp
sbbl
nop
shrl
outsb
push
adc
imulb
fcmovnb
in
cwtl
iret
scas
call
aaa
and
std
adc
les
test
rcll
ja
mov
insb
jecxz
push
xor
inc
cld
popa
notb
xor
push
jns
adc
mov
push
pusha
loope
add
jle
mov
and
aas
jecxz
add
nop
xor
daa
adc
sub
je
mov
pop
or
insb
enter
lcall
icebp
and
sbbb
pop
pop
neg
push
and
stc
in
mov
lods
cltd
jae
or
scas
cmc
add
or
cltd
into
test
js
sahf
and
add
push
aas
xlat
aam
push
roll
ljmp
add
pop
jns
dec
mov
aaa
mov
and
loop
cmp
hlt
mov
xchg
or
cld
ficoml
sbb
jnp
and
pop
enter
xor
sbb
xchg
mov
ror
pop
add
xchg
sahf
jns
lahf
js
adc
cwtl
inc
dec
mov
xchg
jge
xchg
sbbb
or
sub
inc
fchs
cld
rol
mov
ljmp
icebp
mov
sub
into
ljmp
xchg
pop
arpl
daa
jmp
xchg
int3
repnz
loopne
adc
mov
jg
mov
mov
or
xchg
ret
daa
movsb
or
nop
jge
jns
adc
add
push
mov
negl
jb
add
pop
xor
sarl
cmpsb
dec
lcall
int
outsb
push
adc
das
je
xchg
sub
add
jmp
daa
push
mov
push
out
ret
insl
fidivl
dec
xlat
lret
inc
gs
leave
dec
fidivl
jle
xchg
pusha
pop
enter
fwait
cmp
jbe
jno
mov
loope
sub
out
jecxz
sbb
js
popl
push
jo
testb
jmp
sub
add
inc
repnz
xchg
addb
out
movsl
test
cmovno
mov
loop
mov
mov
sbb
shlb
test
out
imul
call
and
enter
add
pop
fwait
repnz
xchg
jle
inc
test
enter
int
sub
outsl
std
mov
adc
hlt
jp
jp
shrb
jle
ficompl
aad
jecxz
cs
mov
fldenv
inc
aas
sbbl
jg
mov
push
jno
out
and
push
jp
push
xor
shlb
popa
xchg
mov
push
sti
lods
fstl
mov
mov
or
or
add
cmpsb
sbb
mov
lds
ret
cld
inc
mov
pop
jns
imul
loopne
xchg
push
xor
repnz
idivl
jo
mov
sub
out
stos
pusha
adc
mov
pop
add
adc
andl
adc
or
ljmp
adc
inc
jns
push
xchg
pop
int
and
cmpsl
xorb
in
mov
pusha
push
hlt
push
popa
xor
jge
sbb
mov
ja
leave
xchg
sub
movsl
mov
hlt
cmpsb
mov
loopne
out
cli
xchg
adc
aad
fisttps
mov
push
xchg
inc
or
pop
jmp
leave
les
jae,pt
push
notb
jmp
insl
xchg
repnz
incb
xor
pop
insl
dec
cmp
adc
cmpsl
inc
mov
adc
inc
movsb
xchg
mov
push
cli
dec
idivl
xchg
xchg
mov
rclb
lods
fwait
outsl
clc
and
mov
or
xor
mov
or
maxps
add
test
sbb
dec
sbb
out
loope
sti
xor
dec
mov
ja
adc
mov
out
push
roll
int
int
jle
popa
push
jecxz
insl
js
pop
sub
aad
xor
push
jl
sarb
push
push
push
cmp
stos
sub
js
imul
out
clc
imul
add
cmp
cmp
cli
insb
rcrb
adc
sub
lods
add
and
mov
inc
pop
aas
pop
lea
pop
jle
xor
loop
xchg
in
mov
sbb
inc
xcrypt-ofb
mov
pop
flds
xchg
ret
hlt
stos
flds
enter
mov
pop
mov
xchg
clc
and
xchg
and
loopne
movsl
pop
stos
or
xlat
aam
sub
sub
sub
mov
call
push
jp
je
aas
jle
inc
add
jbe
fisttpl
movsb
jbe
jbe
mov
stos
cmp
cltd
scas
call
push
mov
es
data16
jb
imul
outsb
cmp
adcl
sbb
das
push
dec
pushaw
mov
aaa
push
fmull
jp
call
adc
sarb
lret
add
add
popf
les
outsb
and
popa
in
in
lret
add
lods
sbb
pop
jbe
in
and
inc
fwait
cmp
sub
insb
or
jmp
mov
sti
fwait
lcall
push
inc
dec
imul
dec
adc
pop
loop
lcall
in
bound
pop
pop
jnp
ds
push
clc
add
or
jp
mov
pop
call
xchg
test
sbb
add
mov
roll
sub
sbb
out
pusha
mov
jp
inc
lahf
imul
out
negb
mov
aas
pop
adc
lock
mov
xchg
sub
cld
mov
pop
scas
push
pop
adcl
xchg
mov
cs
int3
push
cmp
xchg
test
sub
nop
pop
popa
dec
mov
jmp
add
push
lds
mov
jmp
sbb
mov
lods
lds
in
adc
sbb
adc
xchg
cmpsb
ja
mov
pop
jl
negl
xor
flds
xor
repz
jne
or
xor
jno
dec
decl
mov
mov
push
sub
jne
pop
lock
xchg
call
cmp
imul
stc
sti
out
dec
cwtl
das
test
jg
hlt
sti
insl
pop
jle
cmc
sub
push
sar
lods
imul
or
mov
dec
negl
xor
jb
xchg
cmc
jp
popf
fcmovnb
pop
lds
cld
test
inc
lahf
ret
xor
lret
mov
and
xor
sub
scas
subl
jl
cmp
mov
xor
lea
push
cs
inc
in
jge
mov
aas
pop
fs
sub
aaa
in
sub
lds
mov
aaa
inc
inc
les
icebp
and
cmp
int3
ja
inc
push
in
jp
cmp
inc
pop
and
mov
xchg
or
aaa
pop
xor
nop
mov
mov
bound
test
iret
mov
adc
pop
cmp
mov
fstpt
inc
xor
mov
xchg
mov
sti
sarb
out
std
mov
mov
jg
out
adc
int
vpsubsw
daa
cmpsb
pop
ret
sahf
fisubrs
xchg
iret
loopne
loop
gs
clc
jmp
out
inc
repnz
popa
mov
pop
outsl
gs
repnz
xchg
js
jg
inc
jge
lods
mov
popf
into
dec
inc
mov
int
dec
sub
aam
insb
or
mov
and
sbb
adc
xor
jo
xchg
mov
or
js
lret
or
inc
push
mov
ficoms
mov
jl
jp
mov
out
jle
mov
ljmp
stos
shll
cmp
lods
addr16
jl
popa
mov
fwait
jno
insl
imul
adc
ljmp
test
cmp
cwtl
mov
std
mov
sarb
mov
fisttpl
jle
mov
in
arpl
outsb
loopne
xchg
pop
jmp
pop
cmpsb
and
inc
push
cmp
icebp
xlat
movsl
in
test
shrb
xor
enter
cmp
fdivrs
popa
sub
icebp
push
add
mov
or
push
shlb
fimuls
incl
mov
xchg
mov
lcall
aas
pop
cmp
mov
jne
iret
xor
fstps
mov
fsubrp
cld
js
outsl
jnp
inc
mov
lret
int
jmp
imul
lret
scas
adc
movl
inc
loope
xchg
dec
push
incl
dec
dec
ficoml
stos
add
mov
inc
jae
jmp
movsl
mov
lret
or
aad
mov
mov
inc
icebp
inc
dec
lock
pop
add
xor
xor
or
fsts
adc
aam
sbb
sbb
pusha
imul
loope
or
mov
or
cmp
adc
inc
cmp
push
mov
in
push
aas
test
push
inc
aam
jnp
movsl
mov
sbb
xor
pop
mov
ja
into
inc
sbbb
jo
int
mov
and
loop
ret
push
loopne
and
mov
stos
cmove
sbb
pushl
mov
mov
push
in
add
fdivs
mov
rcll
pop
daa
insl
jmp
jnp
push
test
aas
addb
ds
dec
pushf
dec
fimuls
loopne
sbb
jb
dec
addb
data16
inc
dec
and
aas
dec
jecxz
scas
jns
pop
loop
cmp
push
pop
cmp
ficoml
xchg
pop
jmp
mov
add
push
popa
add
cli
dec
dec
repnz
fcoml
imul
aad
pop
lods
dec
jecxz
or
cmp
out
loop
sub
sbb
cmc
into
loop
in
hlt
mov
imul
xchg
dec
mov
cli
cld
or
cmpsb
add
gs
jns
stos
loope
adc
cld
pop
das
push
rolb
loopne
scas
outsl
adc
fistpl
jmp
jne
pop
dec
xor
mov
sti
push
dec
mov
aaa
rcrb
cmpsl
xchg
in
std
or
jb
mov
cmpsb
jns
sub
jge
mov
sub
rcl
and
push
bound
jg
jne
xorl
mov
fildl
ret
test
push
xor
lds
cmovo
push
jmp
push
mov
adc
lret
inc
cmp
dec
ss
push
jecxz
mov
rclb
mov
lcall
lret
lods
ret
sbb
sbb
jb
sub
and
xchg
push
aaa
fwait
shl
sbb
xor
dec
sbbb
xor
xchg
sbbb
outsl
mov
fndisi(8087
test
mov
sar
popfw
push
sub
aaa
ljmp
loopne
push
int3
jmp
test
ret
mov
cwtl
sbb
push
loop
or
int
repnz
push
mov
mov
or
mov
cmp
in
push
mov
cmp
aas
pop
mov
mov
mov
xor
fldenv
mov
out
adc
pop
movsb
out
pop
push
aas
cli
fsub
rorb
outsb
jns
or
cli
pmaxub
mov
das
cmp
loope
decb
mov
stc
cs
mov
cmpsl
xchg
ret
push
adc
lcall
aas
dec
fst
lods
pop
es
or
test
dec
icebp
test
add
insb
push
push
dec
outsb
out
cmpsl
cmp
add
sbb
sarl
popf
jne
pop
ja
jne
dec
adc
and
add
pop
xchg
or
mov
add
fadd
lahf
lds
adc
cmp
push
repnz
sub
push
xchg
fidivrl
xor
call
mov
cmp
je,pt
fstpl
rclb
cmpsl
les
shl
cmc
pop
adc
cmp
mov
push
ljmpw
insb
push
add
stos
stos
sbb
hlt
or
mov
out
out
xchg
add
stos
jo
mov
fadd
addb
fidivrs
mov
xlat
mov
nop
sbb
inc
fwait
xchg
sub
or
xchg
xlat
sub
insb
fdiv
dec
xor
fs
jae
fiadds
mov
cmpsl
add
loop
movsb
aaa
sbb
mov
xor
ficomps
lods
inc
jge
cld
aad
dec
into
aad
out
inc
sub
jns
push
jns
pushf
sub
pop
mov
mov
mov
push
mov
movb
pop
jmp
pop
bound
inc
sbb
xor
dec
loopne
lahf
popf
cmp
jno
scas
les
pop
icebp
mov
aaa
outsb
adc
mov
mov
dec
into
shlb
imul
rol
in
pop
inc
mov
or
mov
xor
lods
push
xchg
arpl
dec
fs
iret
xchg
sbb
cmc
jmp
ret
dec
ss
mov
mov
xchg
popa
cltd
jae
push
inc
adc
adc
shll
je
adc
aas
and
lods
and
or
or
insl
cwtl
adc
sub
arpl
gs
arpl
push
xor
mov
sbb
pop
inc
sti
xor
ljmp
aad
jo
pop
xor
or
xchg
faddp
sub
adc
jno
mov
xchg
xor
repnz
addr16
jmp
test
dec
jle
in
cwtl
into
stc
cltd
outsl
scas
insb
and
xchg
push
pop
inc
pop
test
mov
jae
dec
xor
es
xchg
ror
movsl
jl
jg
dec
jmp
leave
out
cld
add
cmp
xor
mov
test
inc
dec
fiaddl
xor
or
add
inc
xchg
jo
adc
sub
scas
test
loop
adc
leave
and
ret
rcll
and
sub
fmulp
xchg
lahf
inc
mov
xchg
inc
mov
adc
es
scas
mov
nop
fstl
divl
inc
xchg
out
iret
cltd
jbe
jge
fiaddl
outsb
leave
out
pop
bound
push
pop
mov
mov
gs
cmp
mov
loop
mov
loop
or
pop
movsl
in
push
mov
das
adc
push
add
icebp
pop
lret
cltd
mov
cld
fidivl
lahf
mov
xchg
adc
fimuls
arpl
mov
pop
ss
hlt
xor
jae
pop
shlb
push
push
es
mov
stos
hlt
imul
arpl
adc
jp
pop
push
sub
sub
ja
mov
sub
push
dec
jae
add
aad
loop
in
sbb
aad
or
inc
mov
xor
push
cmpsb
inc
cmp
ljmp
xchg
scas
ds
mov
sub
out
adc
cmpsl
xchg
sbb
xorb
sub
push
stos
jne
mov
and
mov
dec
ljmp
jae
int
repnz
mov
js
aaa
jns
js
dec
dec
lret
jns
aas
dec
sub
std
lds
xor
cmp
cltd
imul
or
inc
add
stos
add
loop
pop
lock
popf
out
xchg
add
sbb
test
xor
repnz
movsl
adc
test
pop
fwait
out
insb
pop
xchg
jp
xorb
leave
sbb
out
xchg
mov
fwait
jl
add
push
scas
and
or
scas
or
fnstsw
xchg
and
mov
inc
or
dec
sahf
call
inc
or
shll
adc
sbbb
mov
mov
cmc
xor
xor
testb
out
cmp
aaa
js
mov
aam
mov
popf
jns
jmp
arpl
sahf
cmp
repz
cmpb
sbb
daa
jge
cmp
sahf
stc
xor
daa
movl
mov
mov
popf
pop
mov
leave
imul
nop
cmp
sub
scas
rclb
out
mov
dec
xchg
rclb
test
mov
cltd
cmpsl
fimull
aam
inc
loopne
les
pop
fadds
mov
mov
xor
ja
sub
aaa
mov
mov
add
lret
loopne
test
aaa
cmp
xchg
push
fwait
ljmp
xchg
push
dec
adc
jb
push
in
test
ja
outsl
and
push
stc
subb
jl
in
sti
xchg
and
fcmove
fadds
aad
inc
call
xchg
pop
test
lcall
sbbb
jne
inc
push
mov
fsts
movsb
add
mull
mov
in
push
or
dec
jno
mov
popf
imul
push
inc
pop
sti
push
lcall
xor
test
lret
mov
pusha
add
jmp
mov
aaa
addb
iret
cld
loopne
sahf
cmp
das
add
repz
or
shr
dec
cmpsl
and
aas
dec
fcompl
cld
jle
sub
ljmp
inc
sbb
mov
mov
lret
gs
jg
sbb
adc
pop
mov
sub
in
inc
inc
test
fwait
pop
ret
jg
mov
aad
push
outsb
or
cmp
adc
mov
js
jnp
adc
mov
push
add
dec
mov
enter
aad
fbstp
dec
or
cmpsl
daa
es
jge
lret
jmp
xor
divl
xor
loop
jg
push
xor
outsb
pop
hlt
sbb
lcall
pop
nop
cld
ja
mov
or
xor
or
jge
inc
nop
incl
pop
xor
lods
adc
ficompl
sarb
cli
cmp
fwait
mov
adc
loopne
and
or
or
push
xchg
sbb
shl
adc
push
push
and
adc
adc
pop
stc
pop
fiadds
mov
int
jno
insl
and
pop
or
mov
sbb
jnp
sbb
and
js
and
xlat
fsubr
into
rcrl
inc
outsb
outsb
and
jmp
mov
and
into
mov
call
and
adc
sub
mov
enter
xor
fisttpl
and
sub
shrb
or
dec
jge
mov
jmp
xor
jmp
in
jl
popa
mov
jne
mov
sub
and
xchg
jnp
in
push
scas
nop
negl
inc
loop
fmul
stos
ffreep
std
pop
lret
pop
shl
jne
mov
imul
adc
cld
lock
mov
loopne
inc
xor
insl
pop
adc
cmc
jp
sbb
cmpsb
movsl
inc
or
cwtl
xchg
or
hlt
inc
pusha
fwait
adc
and
mov
imulb
in
or
adc
jp
mov
aaa
call
std
mov
push
mov
dec
sahf
insl
leave
mov
dec
pop
sahf
lcall
or
push
into
or
ss
push
mov
divb
pop
enter
aam
add
mov
xchg
test
leave
enter
cmp
addl
jns
call
inc
push
and
fwait
sbb
mov
dec
aam
mov
dec
jle
add
jno
jne
aam
jb
dec
cmp
hlt
insl
xor
into
fstps
jmp
mov
popf
adc
aaa
pop
outsl
push
mov
mov
idivl
test
cmpb
and
and
mulb
sahf
mov
xchg
or
gs
xor
adc
mov
lcall
jae
push
out
aas
add
mov
repnz
lock
aaa
jnp
cmpsb
out
out
int
aaa
and
dec
lret
mov
push
loop
and
jae
sahf
xchg
mov
and
xor
inc
jb
loopne
xchg
sti
dec
hlt
add
pop
add
icebp
add
push
inc
add
sub
sbb
sub
aas
cmp
jl
and
jp
std
loopne
fstpt
adc
clc
movsb
xchg
imul
jl
imul
enter
sbb
ja
mov
xor
sbb
mov
dec
push
cmp
gs
xchg
xchg
cmp
mov
insl
xchg
push
in
and
pop
repnz
mov
daa
adc
add
inc
hlt
mov
test
sub
es
hlt
sub
je
ret
and
push
lock
xor
add
insl
push
jle
movsb
loopne
sub
sbb
and
popa
lock
or
into
dec
aaa
mov
adc
in
and
jne
push
xor
cwtl
inc
push
je
xchg
fnstcw
lds
sbb
arpl
addr16
or
hlt
mov
push
es
mov
cltd
test
pop
jg
imul
mov
je
inc
push
enter
rolb
inc
xchg
xchg
stc
mov
int
add
jb
jmp
jne
mov
push
xlat
cltd
dec
pop
test
add
shlb
lods
daa
jae
das
dec
sbb
bts
cmp
leave
fidivl
fidivrl
inc
jle
rcll
mov
fstp
ficoml
subl
fwait
jmp
dec
out
and
and
test
cmp
mov
ds
jmp
sbb
dec
lahf
fistl
aad
loop
sub
inc
es
jno
push
dec
ljmp
inc
sub
stos
jg
insl
lret
cmp
push
sbb
loop
out
lods
fisubs
out
das
repz
les
pop
pop
fisubrl
pop
js
mov
xchg
and
cwtl
insl
fcoml
jg
jns
fsubrl
addr16
xor
mov
or
mov
shrb
xor
push
sbb
mov
dec
std
inc
xchg
das
sub
jae
fwait
addl
idivb
mov
xchg
fs
fwait
push
sbb
push
jae
movsb
shl
cmp
dec
mov
in
sbb
lahf
jmp
out
and
sub
mov
push
mov
jb
in
add
in
stc
paddsb
cmp
test
sbb
mov
cmpsb
into
xor
loop
lods
icebp
mov
sub
leave
shl
xor
ret
addb
or
call
scas
addr16
ficoms
jns
add
jo
ss
ja
mov
or
mov
negl
xlat
aad
jl
nop
movsl
fcomps
jnp
adc
ja
or
and
cwtl
pop
popa
js
jp
and
das
adc
test
out
fisubrs
das
mov
lcall
scas
shrb
out
stc
add
jmp
jo
pop
mov
das
mov
stos
cld
gs
mov
sub
stos
jno
ja
scas
xchg
cli
add
ficompl
xchg
mov
mov
jg
loope
jl
xchg
ficompl
cwtl
addl
push
cld
mov
xchg
push
in
scas
mov
stc
jbe
mov
jmp
xchg
ret
movq
frstor
mov
adc
jg
sbb
mov
rorl
lds
inc
call
lret
cwtl
aad
dec
push
cmpsb
dec
loopw
pop
mov
sbb
inc
fbld
jl
outsb
add
mov
aad
pop
scas
les
lock
mov
xchg
add
mov
lods
jg
cmovae
mov
sub
hlt
int
mov
dec
push
add
lods
stos
xorb
fidivs
ret
mov
mov
pushf
sub
js
lret
or
add
repnz
push
mov
repnz
fdivrp
fucomi
sbb
inc
dec
or
rcl
xchg
xor
mov
xlat
or
das
sub
dec
cmp
add
mov
or
push
into
or
movsb
movl
jl
inc
fs
mov
js
pop
fidivrl
pop
cmp
repz
dec
mov
outsl
in
jnp
fcmovb
inc
sarl
cmc
adc
or
mov
pop
xchg
inc
cmp
xchg
roll
sti
sub
mov
push
lock
xorl
lds
movsb
push
iret
pushf
out
stos
mov
xlat
pop
call
hlt
or
test
dec
sub
or
xor
out
push
dec
cmp
loop
call
xchg
and
sub
lock
and
inc
xchg
jb
dec
or
icebp
mov
mov
icebp
aad
jmp
in
push
adc
vcvtsd2ss
add
pop
push
fldt
aaa
jo
or
add
xchg
and
insb
add
movl
stos
sub
push
mov
pop
or
mov
mov
pop
pop
xor
aad
loop
cmc
mov
lea
adcl
movsb
stos
fistpll
mov
rcll
scas
push
arpl
cmp
bound
ljmp
and
ja
movsb
lcall
and
jbe
ss
mov
xlat
push
jae
pop
jle
or
xor
addb
xor
mov
adc
cs
enter
stos
lret
mov
daa
repnz
pop
adc
sbb
std
inc
stos
repnz
imul
lods
loopne
pop
push
sbb
arpl
adc
xorb
mov
lret
dec
in
xchg
int3
out
inc
dec
xor
jnp
jb
lret
add
in
jmp
dec
iret
cmpsb
bound
and
mov
xlat
pusha
pop
and
dec
test
and
jg
push
sarl
xchg
cmp
or
xchg
mov
bound
fsubp
ja
js
js
inc
mov
test
fstp
mov
arpl
mov
stc
sub
inc
jg
pop
mov
aam
mov
lret
mov
mov
stos
push
hlt
out
inc
and
popf
out
inc
mov
xchg
ss
or
sub
loop
cmp
xorb
sub
jmp
fsubrs
ficoml
xor
xor
add
jns
pop
pop
negl
out
dec
scas
lea
mov
ja
ret
cmc
or
iret
mov
je
mov
outsb
mov
lods
and
xchg
mov
push
jg
insb
ja
into
jnp
mov
inc
je
faddl
mov
xor
arpl
loopne
cmc
inc
push
dec
ljmp
repz
jl
fldenv
mov
adc
loopne
addl
xor
data16
add
sbb
pushf
rcrl
xchg
dec
jg
insl
push
faddp
cmp
jg
add
sbb
pushf
xor
loope
lahf
vmwrite
xlat
adcl
std
jns
popl
into
inc
popa
push
imul
test
in
fs
lret
mov
adc
sbb
cmp
mov
rclb
stos
out
and
mov
cmp
mov
cmpsb
leave
leave
test
cmp
lret
dec
mov
shll
dec
mov
cwtl
adc
aas
inc
shl
pusha
xchg
xchg
push
icebp
shl
stos
pop
inc
lods
xor
dec
ret
ss
xlat
mov
hlt
mov
xor
shl
push
add
es
adc
xor
jns
test
ja
ds
jecxz
rorl
sbb
out
stos
cmp
jmp
scas
mov
mov
out
repnz
ljmp
or
cmc
movsb
inc
es
push
pop
push
scas
bound
popf
sbb
iret
mov
out
inc
repz
hlt
rcrl
push
int3
cmp
clc
mov
jecxz
add
adc
es
test
sbb
cmc
add
out
xor
rorl
inc
in
jae
hlt
pop
loope
mov
mov
mov
lock
pusha
daa
out
add
push
shl
imul
mov
sti
xor
dec
test
mov
pop
cwtl
in
sub
shll
jne
pop
cs
test
iret
cli
in
repnz
mov
ljmp
push
push
xor
mov
fwait
mov
push
push
loopne
inc
fdivrs
inc
cmp
and
push
insb
popa
inc
inc
cltd
pusha
mov
add
incb
bound
mov
sbb
adc
call
popf
ljmp
cmp
and
sub
or
jae
jno
out
xchg
add
pop
sahf
sbb
je
adc
pop
xchg
test
rcrb
fwait
inc
dec
push
pop
push
mov
movsb
mov
pop
dec
inc
adc
and
mov
call
out
pop
xchg
das
pop
fwait
mov
out
xchg
out
ret
pushf
test
jae
bound
jle
mov
fidivs
push
aad
dec
sub
or
adc
cmp
sbb
test
loop
ret
mov
aaa
jp
sbb
sub
sti
cmp
mov
mov
adc
loop
js
test
decb
inc
data16
jmp
lret
push
pop
dec
mov
add
sub
and
sub
fiaddl
and
movsb
stos
mov
rclb
mov
filds
aam
into
dec
cmp
mov
pop
add
fdivs
add
iret
test
cld
mov
inc
out
xor
push
pop
int
push
mov
pop
mov
imul
cltd
xchg
loope
xchg
mov
mov
sbb
xor
xor
xchg
dec
rolb
or
jg
mov
mov
out
mov
push
in
andb
jp
cli
lahf
push
push
subw
data16
jno
pop
pop
sahf
mov
xlat
jns
adc
popa
stc
mov
push
and
xor
mov
gs
sbb
loopne
aam
xor
lahf
cltd
jp
inc
and
movsb
jmp
add
int3
pop
scas
popa
push
mov
xor
mov
sbb
aaa
and
sub
sbbl
leave
push
lods
pop
inc
pusha
sub
es
sub
inc
mov
outsb
adc
adc
jns
pop
mov
sbb
jle
adc
movsb
lods
int3
cmp
jnp,pn
adc
int3
sub
and
sbb
leave
sti
dec
aaa
mov
test
mov
mov
add
ret
sbb
test
adc
lock
repnz
ror
add
sub
jno
mov
decl
mov
icebp
scas
push
adc
fs
push
adc
add
push
jle
ljmp
sbb
and
mov
aaa
sbb
push
cmp
xchg
aas
jle
mov
xchg
mov
lock
mov
jb
sub
cltd
addr16
dec
fcom
push
in
fsts
push
pop
cmp
add
stos
push
lods
loopne
mov
xor
cmpsl
imul
cli
loope
cltd
push
shll
inc
mov
jle
lret
in
mov
cmp
dec
add
pop
sub
adc
fistl
xchg
fsts
jae
std
lods
mov
push
xchg
jbe
cmp
pushf
and
push
cmp
add
in
fdivr
repnz
ds
mov
xchg
or
daa
out
stc
adcb
mov
push
lcall
adc
cmp
dec
inc
push
loop
lret
mov
jne
pop
sbb
or
ds
das
add
xor
or
je
rcll
xchg
pushl
lods
pusha
sbb
xor
or
mov
negb
ret
mov
pushf
sub
ficompl
or
test
mov
jnp
jno
push
imul
mov
and
shll
sub
notb
mov
les
sub
sar
aad
fsubl
jp
push
jnp
insl
push
jmp
add
lea
sub
pop
mov
adc
cmp
mov
cmp
mov
dec
in
cmp
or
xchg
jo
sbb
test
pop
loope
jl
and
sbb
int3
add
in
xchg
pop
repz
lret
pop
adc
cmp
cmp
fisubrs
in
movsl
xor
sub
mov
and
data16
inc
fs
adc
dec
mov
jmp
and
loop
mov
xchg
insl
inc
js
and
mov
sahf
push
pop
mov
in
movsl
mov
jae
test
adc
das
cmc
or
insb
cld
bound
push
cs
push
scas
scas
testl
and
clc
sub
fdivr
shll
out
arpl
cmpsb
fsts
mov
adc
mov
mov
xor
shl
lret
shlb
mov
inc
sub
and
push
int
jle
std
incb
cmp
cli
fisttps
in
mov
or
and
push
xchg
cmp
std
mov
subl
inc
stos
and
test
mov
pop
addr16
iret
out
shrl
mov
addb
fidivrl
fstpt
cltd
dec
mov
pop
sub
loop
cmpl
mov
jo
mov
push
dec
and
movsl
lret
aam
add
dec
in
or
and
lret
add
icebp
outsb
je
std
mov
lahf
mov
repz
sub
lods
ret
enter
pop
rolb
aam
jg
mov
mov
jne
mul
imul
sub
nop
pop
mov
dec
call
adc
dec
popf
aad
std
dec
rorl
sahf
mov
push
pop
cmp
xchg
and
mov
addl
push
imul
in
es
test
xor
adcb
es
cmpsb
mov
repnz
mov
cwtl
mov
scas
xlat
fcoml
fidivl
idivl
push
mov
jecxz
mov
cmovo
in
loopne
adc
jp
jb
and
inc
nop
loop
push
outsb
dec
and
iret
mov
mov
es
je
cmp
sub
fwait
in
or
idivb
test
xchg
jae
xorl
sbb
jle
push
out
std
ret
imul
mov
cmp
leave
inc
rep
adc
fdivs
adc
xor
adc
aaa
ss
fisubrs
lcall
call
stc
mov
int
test
aad
fisubl
in
scas
cli
adc
repnz
insb
cmpsb
or
popl
cltd
pop
in
pusha
inc
dec
aam
fnsave
mov
mov
inc
into
fstl
into
lods
lea
test
into
inc
sub
dec
out
and
xor
fsubr
inc
movsl
mov
xorb
dec
les
mov
push
lret
cmp
cmp
and
xchg
push
xchg
mov
jnp
ret
movsl
stos
sbb
dec
ja
mov
mov
dec
push
stos
cld
pop
enter
leave
or
rol
and
push
stc
pusha
sub
pop
or
jge
mov
rorl
cmp
imul
inc
pop
or
push
and
push
xchg
addl
ds
test
mov
aad
imul
cmp
loopne
stos
daa
jecxz
push
xor
jns
ljmp
mov
ss
mov
popf
push
push
jmp
lds
cmp
mov
std
out
arpl
cmpsb
popf
in
xor
ret
andl
repnz
imul
divb
adc
xchg
add
sbb
jbe
hlt
in
sub
push
mov
mov
lds
imul
sub
inc
and
nop
ret
mov
std
lods
stos
push
pop
jmp
in
jbe
xchg
mov
cmp
xchg
push
sarl
test
pop
ljmp
mov
loope
jbe
data16
push
movsb
push
cli
aad
dec
insl
jae
dec
int3
cmpsb
jg
cs
inc
in
mov
bound
out
adc
sub
mov
loop
xchg
adc
pop
test
imul
jp
xchg
cmp
int
jecxz
fcoml
push
mov
xchg
jl
sub
out
xchg
subl
jg
mov
xor
ds
push
jno
jle
les
rcl
or
jb
mov
dec
lock
lcall
pop
push
adc
dec
push
lahf
popa
or
lock
mov
jle
or
data16
add
ja
rorl
pusha
dec
cltd
add
sahf
xchg
jne
xor
add
movsl
sarb
in
xorl
aam
inc
ror
rorb
push
scas
pop
jecxz
push
mov
add
and
ret
out
dec
pop
jge
or
mov
fmull
shl
pop
lret
add
sbbl
mov
pop
mov
stc
fdiv
imul
imul
cmp
mov
pop
lods
negb
lret
lock
in
les
adc
or
popa
test
xchg
cmp
stos
mov
cltd
fwait
movsb
jecxz
popa
push
xlat
inc
es
sub
call
rorl
scas
sub
sbb
lret
stos
rcll
jbe
push
pop
mov
movb
les
ds
inc
and
xor
jbe
mov
cmpsl
divb
test
rcrb
add
in
mov
inc
das
pop
repz
.byte
.byte
