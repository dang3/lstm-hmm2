jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
movb
mov
pop
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
push
push
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
ret
nop
nop
nop
nop
push
mov
sub
push
push
push
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
movl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
imul
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
test
jne
incl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
inc
cmp
mov
jl
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
add
push
call
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lods
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
stos
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
jne
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
push
push
mov
mov
mov
xor
xor
xor
mov
dec
test
jl
inc
mov
movl
cmp
jge
mov
mov
mov
mov
lea
movzbl
shr
mov
or
and
mov
lea
mov
sub
xor
mov
shl
shr
and
add
cmp
jge
mov
add
mov
mov
inc
jmp
mov
dec
cmp
jge
mov
add
mov
mov
add
mov
mov
add
jmp
mov
add
mov
mov
inc
xor
xor
incl
decl
jne
test
jle
add
mov
mov
inc
mov
movb
pop
pop
mov
pop
ret
nop
push
mov
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
mov
test
je
mov
test
jl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
dec
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
dec
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
mov
cmp
jg
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
jne
mov
pop
pop
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
dec
mov
mov
movl
or
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
jle
mov
mov
cmp
je
mov
mov
cmp
je
mov
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
inc
add
mov
mov
inc
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
cmp
jl
mov
mov
mov
inc
xor
cmp
mov
mov
jge
cmp
jge
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
jmp
mov
inc
inc
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmp
jl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
mov
add
cmp
jl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
pop
pop
sub
pop
mov
pop
ret
pop
pop
or
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmpw
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
cmpl
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpw
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
cmp
jbe
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
add
mov
inc
cmp
mov
jl
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
add
movl
test
jbe
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
mov
mov
push
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
inc
add
cmp
mov
mov
jb
mov
push
call
mov
push
push
push
movl
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
sar
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
sar
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cltd
sub
sar
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
inc
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cltd
sub
sar
inc
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
add
mov
push
mov
call
add
movl
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
sar
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
mov
add
test
movl
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
mov
sub
sar
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
mov
add
test
movl
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cltd
sub
sar
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cltd
sub
sar
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
sar
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
sar
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
mov
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cltd
sub
sar
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
sar
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
sar
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
sar
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
sar
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
add
xor
test
jbe
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
mov
push
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
inc
add
cmp
mov
jb
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
mov
mov
sar
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
lea
movb
rep
stos
stos
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
mov
test
jne
mov
push
push
call
jmp
mov
or
xor
repnz
not
dec
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
inc
movb
inc
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
lea
push
mov
push
push
push
push
movl
call
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
lea
push
mov
push
push
push
push
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
mov
push
mov
jmp
int3
int3
int3
int3
int3
mov
nop
nop
nop
nop
jmp
int3
mov
push
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
jmp
mov
push
mov
jmp
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
movl
lea
lea
sub
lea
mov
mov
push
push
push
call
mov
push
push
push
mov
call
add
mov
push
push
call
push
call
mov
mov
push
call
push
movl
call
mov
add
push
push
push
push
call
mov
mov
mov
mov
shr
mov
rep
mov
and
rep
pop
pop
mov
pop
ret
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
movl
call
mov
mov
mov
push
push
push
push
push
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
push
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
pusha
lea
mov
cld
movsl
movsb
popa
movb
lea
mov
sub
sub
mov
call
mov
mov
push
push
push
push
mov
call
mov
mov
push
mov
mov
mov
mov
mov
push
push
push
call
pop
pop
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
push
mov
mov
mov
mov
mov
push
push
push
call
movl
pop
ret
nop
nop
nop
nop
mov
push
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
add
call
mov
mov
pop
ret
nop
nop
nop
nop
call
call
mov
push
push
call
ret
nop
nop
nop
nop
nop
mov
test
je
mov
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
add
movl
test
jbe
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
mov
mov
push
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
inc
add
cmp
mov
mov
jb
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
sar
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
sar
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
sar
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
sar
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
sar
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
sar
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
lea
movb
rep
stos
stos
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
dec
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
lea
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movb
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
jne
mov
and
cmp
je
mov
and
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
mov
jmp
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
ja
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
test
jle
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
mov
add
inc
cmp
jl
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
mov
mov
mov
xor
lea
movb
rep
stos
stos
mov
or
xor
repnz
not
dec
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
lea
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
add
xor
test
jbe
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
mov
push
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
inc
add
cmp
mov
jb
mov
push
call
mov
push
push
push
movl
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
mov
mov
sar
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
lea
movb
rep
stos
stos
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
dec
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
lea
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
imul
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
imul
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
movb
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
imul
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
inc
cmp
mov
jl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
movb
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
push
call
mov
add
cmp
jle
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
movb
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
jle
test
je
mov
lea
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
xor
push
mov
mov
mov
push
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
push
call
mov
add
cmp
jle
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
movb
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
push
call
mov
add
cmp
jle
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
mov
call
xor
push
mov
mov
mov
push
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
push
call
mov
add
cmp
jle
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
ret
nop
nop
nop
mov
call
push
push
push
mov
push
mov
mov
add
mov
mov
lea
push
call
mov
push
push
push
mov
call
mov
mov
xor
add
xor
cmp
jbe
mov
mov
mov
xor
mov
push
mov
push
push
call
mov
mov
add
inc
add
cmp
mov
jb
mov
push
call
mov
push
push
push
mov
call
push
push
push
mov
call
mov
cltd
sub
mov
sar
add
add
mov
mov
mov
mov
push
mov
call
mov
push
push
push
mov
call
push
push
push
mov
call
cltd
sub
mov
mov
sar
mov
mov
add
mov
add
mov
mov
add
mov
mov
push
mov
call
mov
mov
mov
push
add
mov
lea
mov
push
push
lea
mov
call
add
mov
push
push
push
call
mov
cltd
sub
sar
mov
add
mov
add
mov
mov
add
mov
mov
push
mov
call
mov
push
push
push
mov
call
push
push
push
mov
call
mov
mov
cltd
sub
add
sar
inc
mov
mov
push
mov
call
push
mov
call
add
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
mov
cmp
jb
sub
jmp
sub
mov
mov
mov
cmp
jb
sub
jmp
sub
mov
cmp
jae
mov
ret
nop
mov
mov
push
mov
push
mov
xor
cmp
jbe
cmp
jbe
mov
jne
mov
cmp
jae
mov
cmp
jne
cmp
jbe
xor
cmp
jae
mov
cmp
pop
pop
jae
cmp
jbe
mov
jne
mov
cmp
jae
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
je
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
push
push
mov
push
push
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
jne
mov
mov
mov
mov
lea
push
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
jne
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
jne
mov
mov
mov
mov
lea
push
push
mov
push
push
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
jne
mov
mov
mov
mov
lea
push
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
jne
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
mov
mov
mov
push
push
mov
mov
mov
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
nop
pop
pop
pop
mov
pop
ret
push
mov
mov
call
push
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
je
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
push
mov
push
push
push
call
add
cmp
je
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
push
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
lea
push
push
mov
push
push
call
add
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
je
mov
mov
mov
lea
mov
push
push
push
push
mov
call
add
cmp
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
je
mov
mov
mov
mov
lea
push
push
mov
push
push
call
add
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
je
mov
mov
mov
mov
lea
push
mov
push
push
push
call
add
cmp
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
jmp
mov
mov
mov
mov
lea
push
push
mov
push
push
call
add
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
je
mov
mov
mov
mov
lea
push
mov
push
push
push
call
add
cmp
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
je
mov
mov
mov
mov
lea
push
push
mov
push
push
call
add
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
je
mov
mov
mov
mov
lea
push
mov
push
push
push
call
add
cmp
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
mov
mov
mov
push
push
mov
mov
mov
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
movl
mov
mov
mov
mov
mov
mov
nop
pop
pop
pop
mov
pop
ret
nop
push
mov
mov
call
push
push
push
movl
pusha
lea
mov
cld
movsl
movsb
popa
movb
lea
mov
sub
sub
mov
mov
mov
lea
push
push
push
push
call
mov
lea
mov
rep
mov
mov
lea
push
push
push
push
call
pusha
lea
mov
cld
movsl
movsb
popa
movb
lea
mov
sub
sub
mov
mov
mov
lea
push
push
push
push
call
mov
lea
mov
rep
mov
mov
lea
push
push
push
push
call
pusha
lea
mov
cld
movsl
movsb
movsb
popa
movb
lea
mov
sub
sub
mov
movb
mov
mov
lea
push
push
push
push
call
mov
lea
mov
rep
mov
mov
lea
push
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
pusha
pushf
lea
lea
add
mov
lea
lea
add
mov
call
popf
popa
mov
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
pusha
pushf
lea
lea
add
mov
call
popf
popa
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
call
push
xor
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
je
mov
lea
movzwl
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
push
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
lea
push
push
mov
push
push
call
add
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
je
mov
mov
mov
mov
lea
push
mov
push
push
push
call
add
cmp
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
je
mov
mov
mov
mov
lea
push
push
mov
push
push
call
add
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
je
mov
mov
mov
mov
lea
push
mov
push
push
push
call
add
cmp
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
mov
mov
mov
push
push
mov
mov
mov
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
movl
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
add
movl
pop
pop
mov
pop
mov
pop
ret
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
pusha
pushf
call
test
jne
mov
mov
mov
mov
mov
mov
movzwl
add
mov
movzwl
mov
mov
popf
popa
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
push
mov
push
lea
push
push
push
push
push
movl
call
mov
lea
mov
rep
mov
mov
lea
push
push
push
push
call
mov
lea
push
push
push
push
call
mov
lea
mov
rep
mov
mov
lea
push
push
push
push
call
mov
lea
push
push
push
push
call
mov
lea
mov
rep
mov
mov
lea
push
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
add
xor
test
jbe
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
mov
push
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
inc
add
cmp
mov
jb
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cltd
sub
mov
sar
mov
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
test
je
xor
test
jle
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
inc
cmp
jl
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
jmp
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
ja
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
movl
test
jle
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
jne
mov
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
xor
push
push
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
mov
lea
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
je
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
xor
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
mov
pop
ret
pop
pop
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movb
mov
xor
lea
rep
stos
stos
mov
xor
lea
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
cmpl
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
call
add
test
je
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
rep
movsw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
call
add
movl
mov
mov
add
lea
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
inc
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
inc
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pushl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
incb
cmpb
jb
movb
xor
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
push
call
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
push
push
push
push
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
pop
pop
ret
nop
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movb
mov
xor
lea
rep
stos
stos
mov
xor
lea
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
rep
movsw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
call
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
inc
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
inc
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
lea
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pushl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
incb
cmpb
jb
movb
xor
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
push
call
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
movb
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
lea
push
push
push
call
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
lea
push
push
push
call
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
je
sub
je
dec
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
cmp
jne
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
push
push
call
test
jne
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
cmp
jne
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
push
push
call
test
jne
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
cmp
jne
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
push
push
call
test
jne
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
cmp
jne
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
push
push
call
test
jne
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
cmp
jne
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
mov
cmp
jne
mov
and
cmp
mov
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
mov
add
mov
mov
cmp
jne
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cmpw
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
jmp
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
jmp
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
jmp
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
jmp
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
jmp
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
mov
push
push
call
cmp
jne
call
movl
jmp
push
push
call
test
jne
mov
test
je
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
cmp
jne
mov
test
jne
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
mov
xor
cmp
jne
cmp
je
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
xor
pop
pop
ret
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
push
push
mov
call
push
push
mov
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
push
push
mov
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
mov
test
je
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
movl
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
movl
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
movl
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
mov
mov
push
push
push
call
mov
push
call
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
pop
pop
xor
pop
pop
ret
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
push
mov
mov
call
push
xor
push
push
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
mov
lea
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
je
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
xor
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
mov
pop
ret
pop
pop
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movb
mov
xor
lea
rep
stos
stos
mov
xor
lea
rep
movl
mov
push
call
add
test
je
movb
mov
xor
lea
rep
stos
stos
mov
mov
add
lea
mov
mov
mov
push
lea
lea
mov
call
add
mov
mov
lea
rep
movsw
lea
lea
mov
inc
inc
rep
lea
mov
mov
push
push
lea
push
pushl
call
mov
incb
cmpb
jb
movb
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
push
push
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
pop
pop
pop
ret
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
add
xor
test
jbe
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
mov
push
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
inc
add
cmp
mov
jb
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cltd
sub
mov
sar
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
mov
sub
sar
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pusha
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cld
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movsl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movsb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
popa
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
incb
cmpb
jb
movb
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cmp
mov
jne
mov
mov
jmp
inc
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
pop
pop
pop
mov
pop
ret
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
push
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
movl
pop
mov
pop
ret
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
movl
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
je
mov
and
cmp
jne
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
jmp
cmpl
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
mov
mov
nop
cmpl
je
cmpl
jne
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
jne
cmpl
jne
movl
cmpl
jne
movl
push
mov
push
push
mov
push
call
mov
imul
mov
push
mov
push
push
mov
push
call
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
jmp
cmpl
je
cmpl
jne
cmpl
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
push
push
mov
push
call
cmpl
je
cmpl
jne
cmpl
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
jmp
cmpl
je
cmpl
jne
cmpl
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
push
push
mov
push
call
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
jmp
cmpl
je
cmpl
jne
cmpl
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
jne
cmpl
jne
push
mov
push
push
call
add
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
mov
xor
lea
movb
rep
stos
stos
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
dec
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
movb
mov
mov
mov
mov
mov
mov
movzbl
imul
imul
lea
lea
mov
rep
mov
mov
mov
xor
or
call
mov
mov
mov
movzbl
imul
imul
lea
movb
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
xor
push
push
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
lea
movb
rep
stos
stos
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
mov
xor
lea
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
imul
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
xor
cmp
je
mov
lea
mov
mov
cmp
jne
cmp
je
mov
mov
cmp
jne
add
add
cmp
jne
xor
jmp
sbb
sbb
cmp
je
push
call
mov
mov
push
call
add
mov
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
xor
push
push
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
movl
mov
mov
movzbl
imul
imul
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
cmpw
jne
mov
mov
mov
test
jne
mov
test
je
cmpw
jne
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
xor
push
push
mov
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
imul
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
mov
lea
mov
mov
cmpw
jne
mov
mov
mov
test
jne
mov
test
je
cmpw
jne
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
xor
push
mov
mov
mov
mov
mov
mov
cmp
je
cmpl
je
push
call
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
push
call
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
mov
call
mov
mov
mov
mov
fildll
mov
mov
fstps
fildll
fstps
flds
fdivs
fstps
flds
fcomps
pop
pop
pop
fnstsw
test
je
lea
lea
push
lea
push
push
call
add
test
je
mov
push
jmp
lea
lea
push
lea
push
push
call
add
test
je
mov
push
call
add
push
call
mov
pop
ret
nop
push
mov
mov
call
mov
xor
push
push
cmp
push
mov
mov
mov
je
cmpl
je
push
call
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
push
call
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
mov
mov
xor
mov
fildll
mov
mov
fstps
fildll
fstps
flds
fdivs
fstps
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
flds
fcomps
fnstsw
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
lea
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
je
mov
mov
add
lea
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
mov
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
incb
cmpb
jb
movb
xor
nop
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
mov
call
push
xor
push
push
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
imul
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
test
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
xor
push
push
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
mov
call
mov
xor
push
push
cmp
push
mov
mov
je
cmpl
je
push
call
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
push
call
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
xor
mov
fildll
mov
mov
fstps
fildll
fstps
flds
fdivs
fstps
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
flds
fcomps
fnstsw
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmp
jb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
cmp
jb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
cmp
jae
cmp
jb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
push
call
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
mov
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
je
mov
mov
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
dec
mov
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
shr
rep
mov
and
rep
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
mov
sub
push
mov
je
sub
je
dec
jne
mov
mov
and
add
cmp
ja
xor
mov
jmp
mov
push
push
call
cmp
jne
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmp
jb
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
call
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
mov
test
jne
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
call
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
pop
pop
xor
pop
pop
ret
mov
push
push
call
cmp
jne
pop
mov
pop
xor
pop
pop
ret
push
push
call
test
jne
pop
pop
mov
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
pop
pop
mov
pop
pop
ret
mov
mov
cmp
jne
and
cmp
mov
jne
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmp
jne
cmp
jne
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
call
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
mov
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jne
and
cmp
jne
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
xor
pop
pop
ret
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmp
jle
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
xor
test
jle
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
inc
cmp
jl
pop
pop
xor
pop
pop
ret
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmp
jle
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
xor
test
jle
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
inc
cmp
jl
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jne
and
cmp
jne
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jne
and
cmp
jne
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jne
and
cmp
jne
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jne
and
cmp
jne
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
xor
pop
pop
ret
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
push
push
mov
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
mov
add
mov
push
push
call
mov
mov
push
push
push
push
mov
call
mov
push
push
push
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
mov
mov
push
push
push
push
call
push
push
mov
push
mov
push
call
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
mov
push
mov
push
push
push
call
mov
push
push
push
push
mov
call
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
xor
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
jne
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
lea
mov
add
int
add
movsl
in
add
hlt
out
add
mov
sti
add
jno
add
int
add
inc
hlt
add
cmc
out
add
jl
add
xchg
add
pop
add
adc
add
adc
sbb
adc
add
add
syscall
push
sysret
or
or
femms
push
mov
mov
call
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
xor
mov
mov
push
push
mov
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
dec
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
test
mov
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
mov
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
push
call
movl
mov
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movl
movl
movl
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
movl
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
movl
mov
sub
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cltd
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cltd
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cltd
xor
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cltd
idiv
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jge
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cltd
idiv
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cmpl
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
mov
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
mov
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
mov
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
mov
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
mov
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
mov
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
mov
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
mov
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
add
xor
test
jbe
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
mov
push
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
inc
add
cmp
mov
jb
mov
push
call
mov
push
push
push
movl
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
cltd
sub
mov
mov
mov
mov
sar
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzwl
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
nop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzwl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
jb
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzwl
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
nop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
cmp
je
mov
cmp
je
mov
cmp
je
movzwl
mov
cmp
jne
mov
mov
cmp
je
mov
movzwl
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movw
nop
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzwl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
jne
movzwl
movw
movw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
nop
pop
pop
pop
pop
ret
push
mov
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
movzwl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
jne
movw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
nop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
je
movzwl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
jb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
dec
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
jb
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jae
movzwl
movw
movw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
nop
pop
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
cmp
je
mov
cmp
je
mov
cmp
je
movb
nop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
call
mov
test
je
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
add
xor
test
jbe
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
mov
push
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
inc
add
cmp
mov
jb
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
movl
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
sar
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
push
mov
mov
call
push
push
push
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
jl
mov
test
je
mov
test
je
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
inc
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
mov
push
push
push
call
mov
push
push
mov
call
mov
mov
push
mov
call
add
movl
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
inc
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
mov
push
push
push
call
push
push
mov
call
mov
mov
push
mov
call
add
movl
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
inc
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
inc
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
push
xor
mov
xor
lea
mov
mov
rep
stos
stos
mov
xor
lea
mov
rep
stos
stos
mov
xor
lea
push
rep
stos
stos
mov
push
push
call
mov
push
push
push
mov
call
mov
mov
add
mov
push
push
call
mov
push
call
mov
mov
push
push
push
call
mov
add
mov
push
push
call
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
add
lea
mov
push
push
push
call
lea
push
call
mov
lea
lea
push
push
call
mov
push
push
push
call
mov
add
lea
mov
push
push
call
mov
push
call
add
lea
mov
push
push
call
mov
lea
push
push
push
push
call
mov
mov
push
push
push
call
add
cmp
mov
jne
lea
push
push
call
mov
push
call
add
lea
lea
mov
push
push
call
mov
push
push
push
call
add
lea
mov
push
push
call
mov
push
call
mov
add
lea
mov
push
push
call
pop
pop
pop
mov
pop
add
ret
nop
mov
call
push
push
push
mov
xor
lea
movb
movb
rep
stos
stos
mov
xor
lea
push
rep
stos
stos
mov
push
push
push
call
mov
push
push
push
mov
call
add
xor
test
mov
jbe
push
mov
mov
xor
lea
lea
rep
mov
push
push
push
push
call
lea
lea
push
push
call
mov
lea
push
push
call
inc
cmp
jb
pop
mov
push
call
mov
add
lea
movl
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
push
mov
xor
lea
movb
rep
stos
stos
mov
push
push
push
call
mov
add
mov
mov
push
push
call
mov
add
test
je
mov
xor
lea
sub
rep
mov
mov
mov
lea
shr
rep
mov
lea
and
push
rep
mov
push
push
push
call
mov
lea
test
jne
mov
push
call
add
movl
mov
pop
pop
pop
pop
add
ret
nop
nop
mov
call
push
push
push
mov
xor
lea
movb
movb
rep
stos
stos
mov
xor
lea
push
rep
stos
stos
mov
push
push
push
call
mov
push
push
push
mov
call
add
xor
test
mov
jbe
push
mov
mov
xor
lea
lea
rep
mov
push
push
push
push
call
lea
lea
push
push
call
mov
lea
push
push
call
inc
cmp
jb
pop
mov
push
call
mov
add
lea
movl
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
push
mov
xor
lea
movb
rep
stos
stos
mov
push
push
push
call
mov
add
mov
mov
push
push
call
mov
add
test
je
mov
xor
lea
sub
rep
mov
mov
mov
lea
shr
rep
mov
lea
and
push
rep
mov
push
push
push
call
mov
lea
test
jne
mov
push
call
add
movl
mov
pop
pop
pop
pop
add
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
mov
push
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
lea
push
call
mov
push
push
push
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
add
mov
push
mov
push
call
push
call
mov
xor
mov
mov
mov
push
mov
push
mov
mov
mov
mov
call
cmp
jne
push
mov
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
add
xor
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
mov
push
lea
push
push
call
add
jmp
mov
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
lea
mov
rep
stos
lea
mov
push
stos
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
push
push
push
mov
call
mov
mov
xor
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
mov
push
lea
push
push
call
add
jmp
mov
mov
push
push
push
call
add
lea
lea
mov
push
mov
push
push
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
push
mov
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
lea
mov
rep
stos
lea
mov
push
stos
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
push
push
push
mov
call
mov
mov
xor
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
mov
push
lea
push
push
call
add
jmp
mov
mov
push
push
push
call
add
lea
lea
mov
push
mov
push
push
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
push
mov
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
add
xor
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
add
xor
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
mov
push
lea
push
push
call
add
jmp
mov
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
add
mov
mov
pop
pop
pop
pop
add
ret
mov
call
push
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
lea
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
add
mov
push
push
push
call
mov
add
mov
push
push
call
push
call
mov
mov
lea
lea
push
mov
push
push
push
push
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
mov
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
lea
mov
rep
mov
push
stos
push
push
stos
call
add
lea
lea
mov
push
mov
push
push
push
push
push
call
mov
push
call
mov
add
cmp
mov
push
push
push
je
mov
push
call
lea
push
call
add
jmp
mov
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
lea
mov
rep
mov
push
stos
push
push
stos
call
add
lea
lea
mov
push
mov
push
push
push
push
push
call
mov
push
call
mov
add
cmp
mov
push
push
push
je
mov
push
call
lea
push
call
add
jmp
mov
push
call
mov
push
push
push
call
xor
mov
mov
mov
mov
push
mov
push
mov
push
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
mov
lea
push
push
push
call
jmp
mov
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
push
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
xor
xor
mov
mov
mov
xor
xor
push
mov
mov
mov
push
push
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
ret
nop
nop
nop
push
mov
mov
call
push
push
push
movb
xor
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
xor
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
xor
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
lea
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
lea
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
lea
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
mov
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
mov
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
mov
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
mov
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
mov
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
mov
push
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
xor
push
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movw
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
mov
push
push
mov
sub
push
mov
je
dec
je
sub
jne
mov
test
je
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
mov
and
add
cmp
ja
xor
mov
jmp
call
pop
pop
xor
pop
pop
ret
call
pop
pop
xor
pop
pop
ret
mov
push
push
call
cmp
jne
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
pop
pop
xor
pop
pop
ret
mov
push
push
call
cmp
jne
mov
test
jne
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
jne
call
pop
pop
xor
pop
pop
ret
mov
push
push
call
cmp
jne
mov
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
mov
xor
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
xor
pop
pop
ret
mov
push
push
call
cmp
jne
mov
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
mov
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
mov
push
push
call
cmp
jne
mov
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
movl
xor
pop
pop
ret
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
add
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
add
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
push
mov
push
push
push
push
call
mov
add
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
add
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
add
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
add
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
mov
push
push
push
movl
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
movl
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
call
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
jne
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
mov
mov
push
push
push
call
mov
push
call
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
pop
pop
xor
pop
pop
ret
mov
nop
add
adc
add
adc
push
add
or
adc
pop
add
dec
or
adc
or
adc
or
adc
add
adc
add
adc
add
adc
add
add
lar
add
push
pop
invd
or
pi2fw
pi2fd
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
call
mov
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
test
jbe
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
mov
push
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
inc
add
cmp
mov
jb
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
sar
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
add
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
movl
test
jle
mov
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmp
jne
cmp
je
mov
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
test
je
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
subb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movb
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
mov
cmp
jne
mov
mov
cmp
jne
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
add
xor
test
jbe
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
xor
mov
push
push
push
call
mov
add
inc
add
cmp
mov
jb
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
mov
sub
mov
sar
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cltd
sub
mov
mov
mov
sar
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
addl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
xor
mov
mov
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
dec
mov
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
incl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
mov
push
mov
push
lea
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
lea
or
xor
add
repnz
not
sub
lea
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
movl
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
or
xor
repnz
not
dec
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
pop
pop
pop
mov
pop
ret
push
mov
mov
call
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
xor
mov
mov
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
or
xor
repnz
not
dec
mov
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
decl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
mov
mov
push
push
lea
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
lea
or
xor
add
repnz
not
sub
lea
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
movl
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
or
xor
repnz
not
dec
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
pop
pop
pop
mov
pop
ret
nop
push
mov
mov
call
push
push
mov
push
mov
xor
mov
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
movb
mov
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
movl
test
jle
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
mov
mov
inc
add
cmp
mov
mov
jl
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
mov
mov
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
shr
rep
mov
and
rep
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
xor
mov
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
cmp
mov
mov
jle
lea
mov
jmp
xor
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
mov
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
test
jne
mov
test
jne
push
call
mov
mov
mov
add
inc
add
cmp
mov
mov
jl
pop
pop
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
inc
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
xor
test
jl
lea
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
movl
mov
inc
add
cmp
mov
jle
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
pop
pop
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
lea
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
mov
push
push
mov
cmp
push
mov
ja
je
sub
je
sub
je
dec
jne
mov
mov
cmp
jne
mov
and
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
rep
mov
mov
mov
cmp
jne
push
push
push
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
push
call
mov
mov
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
push
call
mov
mov
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
pop
pop
xor
pop
pop
ret
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
mov
add
mov
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
mov
push
push
push
movl
call
mov
add
mov
push
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
mov
mov
push
call
mov
push
push
push
movl
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
mov
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
push
call
pop
pop
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
call
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
pop
pop
xor
pop
pop
ret
sub
je
sub
jne
mov
push
push
call
cmp
jne
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
xor
pop
pop
ret
mov
push
push
call
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
call
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
lea
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
incb
cmpb
jb
movb
xor
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
mov
call
push
push
push
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
add
lea
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
incb
cmpb
jb
movb
xor
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
push
push
push
push
call
call
mov
lea
push
push
call
mov
push
call
mov
mov
mov
mov
shr
rep
mov
push
and
rep
call
push
push
call
call
pop
pop
pop
ret
push
mov
mov
call
push
push
push
movl
movl
cmpl
jne
jmp
mov
mov
cmp
je
movzbl
cmp
je
mov
inc
mov
mov
push
mov
push
mov
push
call
add
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movl
cmpl
jne
jmp
mov
mov
cmp
je
mov
cmp
je
cmpw
je
cmpw
je
cmpl
je
lea
mov
mov
mov
or
xor
repnz
not
add
mov
mov
push
mov
push
mov
push
call
add
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
mov
push
xor
cmp
mov
mov
je
mov
cmp
je
mov
mov
cmp
mov
je
mov
cmp
mov
je
mov
cmp
je
cmp
jae
push
mov
mov
imul
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
push
push
call
add
pop
nop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
xor
push
push
mov
mov
mov
mov
mov
cmp
je
mov
cmp
mov
je
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
cmpl
ja
mov
mov
mov
jmp
mov
mov
sub
mov
mov
mov
test
je
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
imul
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movzbl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
mov
mov
mov
mov
push
push
push
call
add
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
push
push
push
push
push
call
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
lea
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
mov
lea
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
lea
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
cltd
sub
mov
mov
mov
add
cltd
sub
mov
sar
sar
sub
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
sub
cltd
sub
mov
mov
mov
add
cltd
sub
sar
sar
sub
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
push
mov
push
mov
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
add
cmp
mov
jle
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
xor
mov
cmp
setne
dec
and
push
push
call
add
inc
cmp
mov
jle
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
push
call
test
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
jmp
lea
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmp
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
call
mov
test
jne
pop
pop
xor
pop
mov
pop
ret
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
cmp
jne
testl
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
jmp
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
jmp
cmp
jne
testl
jne
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
jmp
cmp
jne
testl
jne
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
mov
test
jne
mov
push
push
push
call
add
mov
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
jmp
cmp
jne
testl
jne
mov
test
je
push
call
test
jl
push
call
test
jl
push
call
test
jl
mov
test
jne
mov
push
push
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
movl
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
call
test
jge
cmp
jne
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmp
jle
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
test
je
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
xor
test
jle
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
mov
add
inc
cmp
jl
mov
mov
push
call
test
jge
cmp
jne
mov
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
push
push
call
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
push
call
add
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
cmp
jle
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
test
je
xor
test
jle
push
call
add
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
inc
cmp
jl
mov
cmp
jne
testl
jne
mov
test
je
call
call
call
call
mov
mov
push
push
push
push
call
pop
pop
pop
pop
ret
nop
nop
push
push
push
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
push
push
call
mov
sub
mov
lea
sub
add
inc
add
sub
sub
dec
mov
add
mov
add
mov
mov
push
push
push
push
call
pop
pop
pop
ret
nop
nop
jmp
dec
call
call
mov
call
pushl
sub
call
pusha
test
xor
pushf
cmc
pushf
ror
call
jmp
bsf
xadd
add
and
mov
rol
pushf
mov
cmc
add
mov
pushl
pushf
call
jmp
mov
pushf
mov
mov
pushf
pushf
lea
jmp
shr
push
mov
push
pushl
call
movzbw
xchg
das
mov
jmp
mov
pop
pusha
movw
pushf
mov
movzbw
bswap
lea
js
movzbw
lea
jmp
pusha
push
mov
pushl
lea
jmp
bswap
stc
test
xor
clc
test
cmc
jmp
bt
pushl
popf
push
push
lea
jmp
add
call
jmp
call
call
pusha
nop
jmp
push
rcl
add
movzbl
bsr
dec
xor
shl
shr
inc
cmp
not
setge
sar
not
or
add
dec
add
sub
sub
shl
xor
xor
not
cmp
xor
rcr
mov
push
mov
add
pusha
mov
mov
push
lea
jmp
inc
cmc
test
bt
call
mov
pushf
lea
jmp
inc
bts
sar
mov
and
xor
stc
sub
pusha
call
cmc
xor
bt
sub
mov
call
pushf
jmp
pushl
popl
push
lea
jmp
pusha
mov
jmp
repz
popl
push
movw
movb
lea
jmp
movsbl
bt
bsf
btc
mov
test
mov
and
sub
add
jge
push
mov
jmp
call
pushf
push
mov
movb
lea
je
push
mov
mov
push
pushf
lea
jmp
mov
push
movb
pushf
call
pusha
repz
popl
mov
lea
jmp
pushf
jmp
not
movb
jmp
pushl
popl
pushl
pusha
pushl
lea
jmp
cwtl
call
mov
push
pushl
mov
movb
lea
jmp
call
movsbl
shld
and
shr
mov
bt
btc
add
shl
ror
sub
stc
pushf
mov
pusha
cmp
shl
call
jmp
pushf
mov
jmp
pushl
popf
mov
mov
lea
jmp
pushf
push
call
push
jg
repz
push
lea
jmp
repz
popl
pushf
push
lea
jmp
ror
mov
adc
rcr
mov
clc
add
jmp
push
push
call
pushf
popl
jmp
pusha
pushl
popl
pushf
lea
jmp
lahf
rcl
aam
mov
cmp
sub
call
not
clc
sub
pusha
bt
and
jmp
mov
repz
popl
pusha
pusha
movw
lea
jmp
aam
movzww
test
xchg
call
jmp
pushl
pushl
mov
push
lea
jmp
pusha
jmp
push
lea
cld
xchg
bswap
std
jmp
pushf
mov
pusha
pushf
mov
lea
jmp
call
inc
jmp
pushl
popf
pushl
push
lea
jmp
mov
jmp
call
das
pushf
mov
rol
not
mov
jmp
not
mov
pushf
call
movb
mov
pushf
pushl
lea
jmp
call
pushl
popl
pushf
push
movb
lea
jmp
sub
sub
jne
sub
push
call
sub
cmc
cmp
call
pushf
pusha
jmp
rcl
mov
call
neg
sbb
mov
shrd
and
bsr
or
mov
cmc
add
pushf
jmp
push
mov
pushf
push
pushf
pushf
lea
jmp
add
add
pushf
stc
xor
test
mov
pushf
sub
pushf
call
pushl
popl
push
lea
jmp
pushl
call
push
call
or
mov
pusha
bt
sub
pushf
cmp
jmp
sub
mov
adc
inc
adc
mov
cmc
clc
cmc
pusha
sub
clc
cmc
shl
movl
call
pushl
rep
movsbw
mov
add
stc
mov
pushf
movl
pushl
popf
mov
lea
jmp
mov
bt
sub
cmp
jmp
adc
adc
adc
mov
or
mov
test
add
push
mov
pushf
mov
pusha
lea
jmp
or
bts
mov
mov
stc
pushf
test
bt
add
call
cmc
pusha
add
pusha
jmp
add
jmp
inc
dec
rol
or
neg
pushf
movw
push
inc
sub
rcr
sub
stc
shr
dec
mov
jmp
pushf
movb
lea
movb
push
call
call
push
mov
movb
pushf
pusha
lea
jmp
pushf
mov
jmp
add
pusha
test
bswap
pushl
movw
neg
jmp
jmp
jmp
lea
mov
shl
mov
add
not
xor
pushf
mov
pushl
bt
bt
pushf
add
clc
mov
pusha
shrd
movb
jmp
rol
bt
jmp
cmp
sub
call
pushf
mov
jmp
pushf
bt
cwtl
jmp
jmp
je
pusha
mov
push
pushl
jmp
mov
movb
push
pushf
movb
lea
jmp
lea
jae
mov
push
push
jmp
aaa
rcr
shl
bts
mov
or
clc
stc
pusha
mov
pushf
call
lea
btr
add
and
mov
sub
pushf
call
setae
call
mov
push
mov
pushf
pushf
movb
movl
lea
jmp
jmp
pusha
push
inc
pushf
push
sub
jmp
call
pushf
popl
movb
pusha
jmp
setnp
mov
sbb
mov
push
pushf
sub
clc
shl
pushf
pushf
mov
push
pushf
jmp
cmp
pusha
test
sub
call
jmp
movb
jmp
mov
jmp
cmc
bt
sub
jmp
add
jmp
lea
jp
pusha
rep
cmc
cmc
xadd
mov
bsr
bswap
bsr
lea
mov
clc
cmc
call
cmc
sar
sar
mov
cmc
cmp
cmc
push
xor
bt
pusha
push
sub
test
jmp
push
pusha
push
mov
call
push
movb
mov
movb
pushf
mov
lea
jmp
movzbw
rcr
movzbl
adc
mov
cmc
shr
mov
cmc
cmp
add
call
and
adc
pusha
and
movzbl
mov
call
stc
shr
cmp
or
stc
cmp
test
test
xor
pushl
lea
jle
inc
push
decl
jmp
shl
setnp
rcr
stc
mov
call
xor
call
mov
push
mov
pusha
pusha
lea
jmp
not
not
xor
rol
movzbl
bt
sub
pusha
jmp
pushf
movl
sub
cmp
movb
shl
push
jmp
call
sti
test
sahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
cmc
setp
dec
add
rcr
pushf
neg
lea
rol
pusha
and
bswap
movzbw
mov
cmc
movb
clc
test
sub
pusha
mov
push
jmp
lea
bt
sub
push
call
mov
mov
pushl
ret
pushf
pushf
popl
movb
mov
pushf
pushl
popl
pusha
push
pushl
mov
lea
jmp
jmp
movzbw
cmc
test
cltd
rdtsc
cmc
cmp
push
sub
movb
pushf
mov
movb
call
pusha
pusha
mov
pushl
call
cmc
bt
xor
cmc
call
xor
lea
cmc
pushf
bt
cmc
cmp
pushf
push
lea
ja
aad
test
neg
lea
mov
stc
lea
shrd
xchg
sub
aam
aad
call
pushl
popl
pushf
pushf
pushf
movb
lea
jmp
pushf
pushf
cbtw
pushf
dec
cmc
bt
cwtl
pushf
bt
test
sub
pushl
movb
pushf
mov
pushf
movl
movl
movw
lea
jmp
movsbw
btc
mov
rcr
test
clc
add
call
test
pusha
jmp
inc
stc
test
bt
jmp
test
bt
shr
mov
mov
call
pushf
mov
pushf
std
pushf
pusha
cld
call
pushf
pushf
repz
popl
pusha
pushf
movb
pushf
lea
jmp
xor
bt
cmc
ror
call
mov
jmp
jmp
xor
cmc
pushl
bt
pushl
rol
cmc
xor
pusha
pushf
sub
cmc
stc
sub
pushl
pushl
lea
jne
push
mov
pusha
pushf
lea
jmp
bswap
or
sar
shrd
notl
rol
ror
mov
cmc
stc
sub
push
and
mov
pushf
popl
call
lea
jae
pushf
mov
movw
movb
lea
jmp
movw
mov
movb
mov
mov
mov
lea
jmp
pushf
popl
pushf
call
add
pushf
call
pushf
popl
call
call
mov
call
call
jmp
jmp
cs
jmp
pushf
pushf
repz
popl
mov
push
pushl
push
lea
jmp
bt
mov
rol
cmc
mov
call
bsr
stc
mov
test
clc
stc
xchg
clc
test
sub
push
push
pusha
jmp
add
movl
movb
call
jmp
xadd
shl
mov
shl
mov
cmc
clc
push
pushl
add
call
movb
movb
lea
jne
jmp
pushf
mov
mov
pushf
lea
jmp
mov
jmp
pushf
popl
push
pushf
call
bts
ror
stc
bsf
mov
mov
xor
mov
and
mov
call
test
cmc
test
neg
jmp
bt
xor
shr
mov
pusha
sub
movb
xor
movb
bt
stc
cmc
rol
push
movb
call
call
pushf
popl
call
mov
pushf
pushf
lea
jmp
mov
jmp
mov
pusha
movw
lea
jmp
pushf
mov
pushf
popl
movb
mov
pushl
popl
push
mov
push
pushl
lea
jmp
pushl
popl
push
push
lea
jmp
xadd
add
mov
rcr
add
mov
mov
pusha
call
pushf
pushl
mov
jmp
pusha
pushl
popl
pushf
pushf
pushf
lea
jmp
rol
mov
mov
sar
neg
bsf
sub
mov
cmc
add
call
shl
neg
cmp
mov
call
push
mov
mov
pusha
lea
jmp
push
pushf
pushf
popl
pushf
pushl
popl
push
movw
lea
jmp
pushf
jmp
jmp
jmp
pusha
call
pusha
call
jmp
sub
call
jmp
lods
nop
nop
nop
nop
nop
jmp
btc
dec
mov
pushf
stc
clc
add
movb
movb
mov
pushf
lea
jmp
pusha
repz
popl
pusha
movb
pushf
lea
jmp
bswap
rcr
setnp
movzbw
mov
test
mov
cmp
not
push
clc
jmp
mov
movb
pusha
pushf
pushf
lea
jmp
mov
pusha
lea
jmp
pushf
mov
jmp
stc
cmp
daa
mov
call
stc
push
stc
add
pusha
movb
mov
call
call
repz
popl
pushf
lea
jmp
pushl
popl
pushf
push
lea
jmp
lea
jle
mov
pushf
lea
jmp
mov
pushf
push
pushf
lea
jmp
push
pushf
popl
movb
call
mov
pusha
push
movb
push
lea
jmp
pushl
test
mov
sub
pusha
push
mov
mov
movb
lea
jmp
call
pushf
mov
call
mov
decl
push
lea
jne
pushf
mov
call
pusha
mov
push
mov
movw
pusha
pushl
lea
jmp
mov
call
cwtl
pusha
pushf
setle
mov
call
movb
jmp
movb
call
pushf
pushf
pusha
rep
rol
and
mov
btr
bsr
sub
bt
mov
call
je
shr
stc
ror
mov
sub
mov
cmc
not
call
jmp
pushf
mov
mov
lea
jmp
pushl
mov
push
pushf
mov
pushf
popl
jmp
add
lea
jno
pusha
pushf
popl
pusha
pushl
popl
pushf
mov
pushf
lea
jmp
push
div
movb
mov
pushf
jmp
cmp
cmc
call
jmp
sub
sbb
mov
jmp
stos
hlt
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
jmp
int3
int3
push
cld
out
push
cld
out
jo
cld
out
aas
jg
out
pop
js
out
bound
cld
out
xchg
jg
out
pop
js
out
mov
or
out
jnp
cld
out
aam
cld
out
pop
cmp
aam
cld
out
aas
jg
out
jnp
cld
out
mov
cld
out
ljmp
out
push
jnp
out
aam
cld
out
bound
cld
out
add
out
in
cld
out
sarb
pop
test
out
pop
cmp
jo
cld
out
mov
push
cld
out
push
cld
out
push
cld
out
sub
cld
out
js
cld
out
ljmp
out
cmpsl
jp
out
in
cld
out
leave
cmp
pop
cmp
mov
cld
out
leave
cmp
add
out
pop
cmp
sub
cld
out
mov
cld
out
push
jnp
out
jae
cld
out
leave
cmp
hlt
or
out
loope
cld
out
leave
cmp
xchg
jg
out
xor
cld
out
insl
cmp
out
mov
push
cld
out
push
cld
out
push
cld
out
fistpll
out
aaa
jl
out
fistpll
out
aaa
jl
out
mov
cld
out
bound
cld
out
dec
jnp
out
xchg
out
in
cld
out
add
out
leave
cmp
call
or
out
iret
jg
out
xchg
jg
out
loope
cld
out
aam
cld
out
aaa
jl
out
pop
test
out
xchg
jg
out
sbb
out
jo
cld
out
hlt
or
out
call
xchg
out
pop
js
out
pop
test
out
mov
push
cld
out
push
cld
out
push
cld
out
push
jnp
out
fistpll
out
add
cld
out
pop
cmp
lcall
out
xchg
jnp
out
loope
cld
out
xchg
jg
out
mov
cmp
xor
cld
out
ljmp
out
sarb
js
cld
out
aaa
jl
out
mov
js
out
bound
cld
out
xchg
out
jo
cld
out
jo
cld
out
loope
cld
out
iret
jg
out
jp
cld
out
mov
push
cld
out
push
cld
out
push
cld
out
aaa
jl
out
ljmp
out
jp
cld
out
xchg
jnp
out
fistpll
out
leave
cmp
aam
cld
out
insl
cmp
out
movb
out
call
jnp
out
sbb
out
js
cld
out
jnp
cld
out
sarb
jo
cld
out
js
cld
out
jae
cld
out
pop
test
out
add
cld
out
call
cmp
add
cld
out
mov
push
cld
out
push
cld
out
push
cld
out
xchg
jg
out
call
test
out
call
cmp
xor
cld
out
pop
js
out
xor
cld
out
jae
cld
out
dec
jnp
out
pop
cmp
add
cld
out
xor
cld
out
mov
xchg
out
aas
jg
out
mov
cmp
mov
jns
out
dec
jnp
out
sarb
aaa
jl
out
aam
cld
out
fistpll
out
std
jbe
out
pop
js
out
mov
push
cld
out
push
cld
out
push
cld
out
pop
js
out
cmc
jg
out
xchg
jnp
out
pop
cmp
aam
cld
out
aam
cld
out
mov
cld
out
push
pop
cld
out
cmpsl
jp
out
jnp
cld
out
cmpsl
jp
out
dec
jnp
out
jnp
cld
out
js
cld
out
pop
test
out
aaa
jl
out
movb
out
std
jbe
out
fistpll
out
mov
cld
out
add
cld
out
jp
cld
out
pop
js
out
movb
out
mov
push
cld
out
push
cld
out
push
cld
out
xchg
out
pop
cmp
add
cld
out
xor
cld
out
fistpll
out
fistpll
out
add
out
fistpll
out
cmc
jg
out
in
cld
out
jae
cld
out
mov
cmp
jo
cld
out
pop
test
out
jnp
cld
out
sub
cld
out
pop
test
out
pop
cmp
aam
cld
out
pop
cmp
add
out
sarb
ljmp
out
pop
cmp
fldl
cld
out
mov
clc
bt
add
pushf
pushl
push
jmp
movw
pushf
mov
jmp
std
popf
pusha
pushl
lea
jmp
btc
bswap
mov
bt
test
bt
add
pushf
mov
movw
pushl
lea
jmp
aam
movzbw
sar
daa
mov
bsf
movzbw
daa
cmp
pop
lahf
rcl
dec
pop
setge
bswap
bt
pop
lea
sar
aad
shl
pop
bsf
dec
pop
cmc
cld
pop
rol
pop
clc
pop
shld
sbb
and
movzbl
pop
add
popf
pushf
mov
movw
movb
pushl
ret
sub
mov
add
movb
push
mov
pushf
popl
jmp
pushl
popl
mov
push
push
push
lea
jmp
pusha
push
mov
lea
mov
push
cld
cld
push
call
pusha
dec
pushl
call
jmp
lea
not
jl
mov
push
jmp
call
call
pushl
add
mov
push
mov
pushf
lea
pushl
lea
jmp
push
jmp
mov
call
pushf
popl
pushf
pushl
popl
pushf
movl
pushl
mov
lea
jmp
mov
push
push
pushf
popl
pushf
pushf
pushf
pushf
pushl
popl
pushf
push
lea
jmp
call
push
mov
mov
mov
mov
pusha
mov
lea
jmp
jmp
pusha
push
mov
movw
repz
popl
mov
pusha
lea
jmp
mov
movb
pushf
mov
lea
jmp
pushf
jmp
dec
inc
mov
lea
jns
dec
pushf
cmp
mov
sub
clc
jmp
push
not
mov
jmp
jmp
mov
pushf
pushf
pushl
lea
jmp
pusha
repz
popl
push
pusha
movl
lea
jmp
sar
mov
cmc
sub
jmp
movb
mov
pushf
push
movb
movw
lea
jmp
not
mov
push
test
push
sub
pusha
clc
and
pushf
pushl
pushf
pushl
mov
pushf
mov
movb
push
pushf
popl
pushl
lea
jl
pushf
pushl
popl
movb
pushf
pusha
pushf
lea
jmp
mov
pushf
pushf
pusha
repz
popl
movb
pusha
pushf
lea
jmp
pusha
mov
pushf
mov
lea
jmp
not
setge
mov
dec
jno
setg
mov
push
test
jmp
pusha
movsbw
movzbw
mov
pusha
call
mov
call
movb
push
pushl
popl
push
movb
mov
pushf
lea
jmp
movb
call
jmp
mov
pusha
lea
jmp
pusha
xor
test
sub
bt
push
sub
pushf
pushf
mov
mov
movl
lea
jmp
clc
pusha
sub
call
pushl
test
sub
push
lea
js
inc
push
stc
cmp
sub
cmp
mov
pushl
call
pusha
pushl
mov
pushl
pushf
push
lea
jmp
mov
push
lea
jmp
mov
jmp
mov
pushf
popl
pushf
jmp
pushf
jmp
pushf
mov
pushf
pusha
repz
popl
lea
inc
or
push
bswap
shl
mov
dec
push
xchg
push
bt
bt
bsr
push
shrd
bsf
ror
push
rol
jmp
mov
pusha
movb
push
pushf
repz
popl
push
push
push
push
lea
jmp
js
clc
pushf
pushl
popl
stc
test
clc
add
cld
jmp
mov
movw
lea
jmp
dec
pushf
cmc
stc
mov
sub
cmc
stc
clc
test
xor
call
rcr
add
lea
neg
setne
rol
xor
jg
not
clc
and
adc
bsf
mov
stc
pusha
add
jmp
mov
push
pusha
lea
jmp
push
pusha
movb
lea
js
push
pushf
call
repz
popl
push
push
mov
lea
jmp
pusha
sub
test
shr
pushl
jmp
call
aad
mov
push
rcl
mov
bt
pusha
stc
not
test
not
stc
clc
cmp
and
push
movw
mov
jmp
cmp
cbtw
rcr
mov
bsr
mov
stc
sub
pusha
mul
jmp
sbb
mov
rol
ror
bt
mov
push
call
shl
btr
lahf
call
and
push
clc
stc
xadd
clc
push
pusha
pushl
popl
movl
movl
bts
mov
bt
xadd
xor
movb
sub
stc
pop
ror
rcl
xor
mov
lea
lea
sub
rcr
ror
shr
mov
xor
rol
mov
rol
adc
add
push
shl
mov
shr
mov
clc
add
pushf
neg
not
stc
sub
add
bsr
xor
test
bswap
lea
add
push
dec
lea
sar
inc
shr
movzbl
clc
rol
and
movzbw
mov
mov
cmc
not
stc
pusha
test
call
repz
popl
mov
push
lea
jmp
mov
xor
inc
shl
test
mov
pushf
add
push
shld
pusha
jmp
pushl
popl
push
movw
pushf
lea
jmp
bt
jmp
call
pushl
popl
bt
push
mov
add
jmp
mov
pusha
push
push
lea
jmp
pop
call
fnstsw
call
xor
decl
cmp
decl
lds
pop
dec
or
es
jg
mov
sahf
mov
inc
pop
incl
int3
cmpsl
pop
incl
add
incl
fisubl
mov
incl
inc
sbb
incl
out
add
hlt
jg
andl
cmp
mov
jge
incl
test
inc
divl
fstpl
sub
sbb
pop
incl
incl
incl
jmp
push
decl
decl
ja
lahf
decl
xor
decl
and
decl
jbe
pop
decl
mov
jg
nop
fs
lcall
inc
imull
call
xchg
divl
iret
sbb
nop
out
jae
popa
xchg
aas
call
sub
call
jns
nop
xchg
mov
shr
pop
call
js
movl
pusha
movl
pushf
movb
lea
jmp
push
movl
call
clc
scas
sahf
daa
clc
gs
inc
sahf
xor
jno
enter
das
cmpsb
test
mov
sbb
adc
fnstcw
pop
je
inc
xor
adc
fmuls
fidivrs
dec
jp
mov
xor
ficoms
mov
and
xlat
test
cmp
cmpsl
pusha
ds
xchg
lcall
imul
dec
scas
test
or
mov
ficomps
sbb
popa
mov
insl
jge
jo
jg
jae
mov
scas
out
sub
inc
lss
nop
ds
fistpl
push
adc
xor
enter
icebp
mov
sub
or
jl
outsl
inc
push
insl
in
aad
mov
sub
xor
fstpl
outsl
xchg
pushf
sarl
mov
push
or
inc
mov
xchg
mov
sbb
push
cmpsb
inc
adc
shll
and
adc
mov
dec
arpl
dec
pusha
aaa
scas
or
fnsave
pop
mov
pop
pop
sbb
dec
loop
dec
and
das
fwait
test
xor
icebp
bound
and
nop
inc
and
scas
out
mov
sbb
out
push
enter
xchg
xlat
lcall
jbe
gs
add
lcall
insb
mov
push
or
popf
cwtl
stc
adc
shlb
movsb
jge
jl
push
jb
lods
dec
mov
rcrb
push
lahf
scas
jmp
ss
dec
or
popf
icebp
mov
pop
xchg
cmpsl
int
fstps
fs
cmp
out
mov
dec
stc
jne
jl
js
popa
das
mov
push
or
ss
mov
pop
and
shll
inc
aas
loop
cmp
nop
movsb
cmp
inc
and
pmaxub
xor
mov
frstor
test
push
aad
notb
test
sbb
ret
mov
push
test
and
dec
mov
push
sahf
inc
lret
lods
jmp
fldcw
push
xor
sti
lret
pop
cltd
xlat
mov
xchg
out
movsl
xor
push
fimuls
pop
stos
in
sub
fisubrl
mov
enter
push
out
in
and
cli
lods
sub
cmp
cmp
test
mov
xlat
sub
loope
scas
xchg
and
pop
adc
or
stos
test
jno
dec
fimull
pop
mov
enterw
js
test
outsb
inc
push
jb
or
jb
jge
into
popf
lods
jl,pt
movsl
fstpt
xor
subl
xchg
mov
push
sub
add
cmp
test
dec
pop
mov
pop
adc
pop
movsb
out
cmc
mov
adc
inc
testb
cmpsb
mov
insb
sub
mov
jne
xor
loope
mov
dec
mov
push
push
arpl
jl
cmpsl
mov
dec
ror
jecxz
out
and
xchg
ret
sbb
jecxz
cmc
sub
xor
push
pushf
fcomip
sub
xchg
mov
and
cmp
push
mov
sarb
push
pop
pop
jne
aaa
in
mov
mov
adc
mov
mov
pop
int
push
shlb
aas
in
mov
int
insb
xchg
or
pusha
jge
mov
lcall
insl
test
cltd
loope
push
jno
into
or
pop
cmp
test
pop
fs
das
pop
dec
test
scas
xchg
cmp
add
stos
cs
fs
or
loope
mov
mov
xlat
jge
aad
push
mov
fisttpl
cmp
andb
in
cli
cwtl
push
inc
out
pop
xor
cmc
inc
jl
int
ret
shlb
das
shll
xchg
aad
mov
shl
sbb
cmp
push
test
mov
test
pop
mov
jge
ret
mov
movsl
sbb
jno
cmp
fidivrs
or
mov
cmp
ljmp
jl
and
adc
pop
add
repz
adc
in
lods
lret
jb
dec
imul
lcall
jnp
inc
rorb
aam
in
and
sub
shlb
xlat
popf
sbb
loope
jg
inc
push
in
xor
cltd
fnsave
pop
je
mov
mov
inc
sahf
mov
add
jmp
xchg
out
pushf
mov
jbe
andb
and
adc
xchg
sbb
jb
imul
mov
sahf
ret
in
loope
in
push
adc
out
xor
add
jl
cmp
mov
jp
xchg
add
pop
xor
sub
mov
xchg
add
lds
push
int
lcall
das
push
jge
leave
in
add
mov
and
stos
add
xor
inc
dec
adc
pop
fsubrs
cmc
mov
popf
std
pop
addr16
out
mov
inc
inc
fsubrl
xchg
sub
pusha
mov
ret
std
pushf
and
xchg
daa
push
bound
iret
mov
stos
loopne
shlb
and
sub
rclb
sbb
dec
mov
gs
adc
or
popf
cmp
daa
lahf
insb
repnz
jmp
mov
and
negl
movsl
xchg
lds
fsubrl
nop
fwait
out
or
add
into
aaa
push
pop
or
in
or
shrl
add
ds
dec
jb
mov
enter
or
xchg
int
out
and
or
fwait
hlt
mov
sahf
dec
jns
or
lret
pop
mov
mov
and
sub
clc
xchg
aad
mov
test
and
dec
es
pop
mov
or
aad
mov
mov
push
lea
xlat
std
fsubr
cmp
cld
fsub
dec
daa
leave
inc
pop
mov
dec
fcompl
mov
mov
cltd
add
cmp
add
push
cmp
cmp
andl
cli
lock
aad
cmp
mov
mov
sti
inc
rclb
lcall
insb
adc
rclb
dec
in
adc
ja
popa
jmp
mov
lea
or
in
adc
ljmp
adc
sar
mov
fdivrl
inc
or
cmp
movsl
ja
mov
sub
fwait
jecxz
adc
stc
sbb
push
mov
out
jnp
ret
lahf
or
sbb
mov
pop
popl
loopne
shrl
push
mov
mov
sbb
out
cmp
push
xor
out
dec
jbe
sbb
jne
push
cmpl
inc
cli
cmp
out
sbb
icebp
daa
sub
clc
xor
adc
cmp
ljmp
xchg
mov
andl
lods
pusha
push
mov
mov
fimuls
popa
adc
push
out
nop
loope
sub
adc
or
xchg
mov
xor
push
lea
xorps
or
cmp
divl
aad
cwtl
aaa
or
adc
xchg
repnz
je
mov
or
in
add
pushf
push
pop
push
lahf
push
into
loopne
sbb
inc
mov
add
js
gs
mov
inc
fsubrl
or
addr16
cli
xor
and
adc
sahf
pop
xorl
sahf
mov
or
mov
roll
lcall
mov
mov
test
push
rcr
sub
fstps
inc
and
mov
insb
loopne
jbe
xor
xchg
lock
shlb
test
ficompl
ja
mov
adc
addr16
xlat
adc
aam
fsubrp
push
dec
add
popa
mov
sbb
or
daa
xchg
add
mov
outsb
divl
xlat
sub
leave
mov
sub
cmpl
sub
sahf
std
push
jne
jae
pop
mov
add
pop
mov
jb
decb
scas
aad
data16
adcl
and
push
xchg
dec
pushf
shll
add
call
dec
clc
cmpl
lds
int3
inc
sarl
adc
adcl
and
xchg
sub
and
outsb
mov
repz
mov
jge
mov
std
sub
add
scas
mov
pop
arpl
test
test
inc
xchg
xor
or
push
adc
sbb
insb
fisubrl
es
push
in
pop
and
inc
jecxz
pop
scas
inc
nop
pushf
scas
pop
fcmovbe
loope
andb
push
aad
xchg
rcrb
jno
lods
outsb
or
testl
fdivrs
stc
push
push
lods
mov
mov
lret
push
adc
scas
ret
add
cmc
mov
or
sbb
jo
fdivl
push
or
xorb
fwait
aad
jb
push
jns
aas
sti
push
int3
mov
adc
aam
pop
clc
xchg
sub
mov
shl
pop
aam
pop
sarl
sbb
dec
pop
call
stos
mov
punpcklbw
lods
mov
cmp
jne
jne
and
mov
sbb
out
xchg
cmpsl
sbb
mov
aad
aas
mov
adc
fdiv
orl
into
adc
test
jmp
mov
adc
dec
jae
cmc
pop
mov
inc
dec
pusha
jg
cmp
jbe
pop
scas
js
jae
push
arpl
rorb
outsb
cltd
shlb
sub
in
mov
call
xchg
or
xor
or
add
add
jp
out
std
xchg
loopne
out
out
mov
hlt
shl
pop
adc
dec
mov
ljmp
jo
iret
ror
sbb
aaa
arpl
fcoml
xor
and
sti
aas
aaa
dec
popfw
mov
push
lahf
mov
mov
movsb
cmp
test
cmp
leave
push
sub
repnz
sub
movb
xor
xchg
fistps
dec
cwtl
add
cwtl
scas
sahf
negb
lea
bound
js
dec
jno
insb
push
jnp
cltd
mov
mov
xor
cltd
aas
nop
sub
daa
cmp
vhsubps
mov
dec
push
push
hlt
jae
sahf
mov
test
cmp
push
add
mov
ljmp
adc
xchg
mov
jb
aad
sub
pop
dec
or
sub
jae
or
popa
dec
scas
out
and
mov
xchg
inc
jbe
aam
repz
or
cmp
lods
sub
rclb
das
repnz
scas
mov
fwait
ret
mov
addr16
mov
fwait
pop
popf
push
shrb
jp
push
bound
cltd
vminps
scas
inc
repnz
popa
mov
adc
out
jbe
jge
in
sarb
dec
out
out
adc
push
sbb
mov
shrl
mov
mov
mov
std
cld
inc
cmp
push
rorl
dec
int
in
loop
sbbb
insb
cmpl
mov
fisttpl
sti
sub
mov
push
adc
jae
add
jp
adc
jmp
push
filds
out
popf
jmp
outsl
cmp
pusha
movl
sbb
sahf
pop
mov
ss
pop
lods
sub
pop
pushf
or
sub
mov
mov
jmp
shll
ds
test
lock
jg
add
dec
and
es
call
push
mov
popa
cli
fmull
mov
and
ror
sbb
je
inc
push
fiadds
and
mov
movl
push
iret
inc
lea
xlat
jg
addr16
dec
lods
add
xor
push
cmpsl
pop
gs
inc
push
das
add
add
out
repz
loop
xlat
jmp
and
fs
mov
inc
fildl
xorb
push
inc
jge
pop
cltd
insl
enter
inc
cmc
jb
pop
aad
mov
es
int3
xchg
push
popf
xor
xchg
cmp
cmp
in
je
xchg
sub
in
ret
daa
ret
cmp
lcall
mov
push
add
rorb
std
fwait
ret
in
lds
add
cmp
das
stos
and
ja
add
nop
roll
fistl
cmp
repnz
stos
cmpsb
dec
mov
out
in
inc
cmpsb
loopne
mov
dec
pop
dec
jnp
sti
push
std
push
rorl
mov
pop
pop
ficompl
shll
mov
dec
push
mov
nop
imul
pop
xchg
mov
pop
jmp
fnstenv
jp
push
insb
das
les
dec
xor
pop
push
and
dec
push
cmp
mov
sub
mov
shll
and
dec
loope
xor
xlat
dec
add
xor
mov
cmp
mov
inc
shll
dec
cmc
or
jmp
setle
jns
daa
push
rorl
and
xlat
lret
push
into
pop
mov
add
insb
sub
ror
fcompl
mov
mov
lahf
pusha
mov
xchg
adc
push
loope
cwtl
and
xchg
sub
xor
cwtl
mov
add
std
pushf
out
pop
icebp
cs
je
xchg
pop
mov
fmuls
nop
fisttps
sbb
adc
cs
scas
pushf
sbb
mov
ss
xchg
cmpsl
in
adc
jmp
jnp
inc
mov
test
ljmp
jb
jnp
rcl
js,pn
cmc
dec
dec
faddl
cmp
out
sbb
shll
mov
pop
mov
in
cs
mov
inc
pop
sti
adc
loop
lods
in
mov
push
mov
test
lock
adc
loop
sahf
cmpsb
or
add
jle
mov
outsb
js
add
lcall
xor
scas
aad
jp
orb
jnp
cwtl
dec
scas
xchg
sub
dec
and
fwait
mov
lock
clc
xor
adc
pop
mov
ljmp
int
loopne
lea
loopne
or
xlat
sub
sub
dec
pop
shll
lea
test
pop
faddp
jnp
push
pop
rcl
mov
mov
pushf
and
mov
pop
jle
aas
and
pusha
mov
dec
inc
in
int3
pop
and
cltd
ljmp
lahf
xor
sbb
xor
in
in
xchg
out
insb
cmp
inc
dec
dec
sarl
mov
dec
jbe
cmp
jnp
cld
fstpt
outsl
xchg
aas
mov
mov
lcall
sub
mov
pop
sbb
pop
mov
loop
push
inc
jb
sbb
add
ret
inc
inc
test
xchg
nop
into
in
mov
shll
das
mov
dec
ret
fsubr
movsl
sub
cmp
and
stos
leave
test
movb
js
addr16
lret
xchg
mov
les
jmp
jmp
test
pop
adcl
imul
sub
in
jae
fistl
lock
xor
pop
iret
xchg
add
dec
addr16
push
jbe,pt
cmc
mov
sti
add
or
daa
or
js
rclb
sub
dec
int
pop
push
repnz
mov
lds
gs
into
pop
mov
sbb
mov
mov
sub
xchg
xchg
in
mov
mul
add
insl
jmp
popf
clc
test
arpl
lods
add
inc
jge
push
je
lahf
jae
inc
sti
mov
lret
push
inc
sub
xor
movsl
cli
mov
das
int
jmp
js
call
mov
and
fs
cltd
adc
mov
pop
xor
movsb
push
inc
popa
testb
ror
sahf
test
lret
les
add
push
or
ja
loopne
xor
clc
outsb
mov
rcrb
xchg
adc
out
pushf
out
xchg
addr16
sub
xor
int3
sub
inc
sub
bound
or
jnp
pop
mov
pusha
pop
jmp
inc
jg
les
addr16
int3
pop
ret
push
fildl
scas
mov
mov
jg
popa
test
shl
adc
xor
cwtl
ss
sbb
or
test
outsb
push
pop
and
fwait
in
xor
pop
jl
xchg
adc
sub
add
gs
fidivl
je
pop
icebp
pushw
mov
dec
iret
mov
xchg
xchg
jne
orb
or
mov
sub
mov
jb
fcmovbe
mov
push
mov
push
in
xchg
and
and
sub
sbb
xor
mov
fcomi
mov
jp
iret
lea
in
in
cmp
inc
pop
cmp
xchg
add
es
pop
mov
pop
enter
and
jne
out
sub
mov
test
outsl
sub
ja
push
sub
loope
or
dec
cmp
imul
mov
mov
movsb
repz
scas
mov
aam
or
rorl
rcr
repnz
cmc
out
add
cmpsl
stos
jb
or
push
shrl
into
lock
adcl
mov
sbb
jmp
aam
outsl
mov
cmp
mov
mov
aas
jne
and
dec
daa
push
dec
in
lock
mov
idivl
aad
lret
popf
pop
cmp
pushf
mov
fadds
pop
jecxz
adc
js
xor
add
iret
inc
xchg
out
sbb
mov
mov
in
mov
insb
and
pusha
or
je
jnp
arpl
imul
retw
cs
sbb
dec
or
adc
inc
hlt
sub
out
jl
jo
fadd
pop
mov
ror
lods
push
pop
fldenv
scas
inc
sbb
or
push
bound
jb
subb
fsubrl
adc
pop
sbb
mov
cmpsl
mov
movsl
add
jne
add
stc
push
sbb
es
pop
inc
enter
add
cmp
imul
sub
sub
testl
mov
mov
lods
adc
xchg
stos
jl
lret
test
dec
rcrl
pop
or
call
ss
arpl
pop
aaa
cmc
push
pushf
ljmp
sti
fimull
repnz
movsb
call
mov
adc
inc
pushf
iret
or
xor
out
stos
mov
sbb
shll
pop
pop
add
outsb
out
aaa
out
in
cmp
xor
jg
clc
cmc
int
addl
fcoms
stos
pusha
add
int3
movsl
shrl
cld
rclb
fwait
in
xchg
fisttpl
les
and
lea
sbb
or
mov
aad
mov
push
shrb
popa
lret
in
push
jbe
fcom
outsb
xor
fwait
pop
data16
xchg
punpckhbw
test
mov
lcall
push
daa
adc
push
mov
pop
xor
jl
aam
or
mov
cmp
fnstenv
stos
mov
push
cmp
lods
sbb
adc
cltd
push
fs
sub
xchg
add
jl
add
pop
lret
push
push
pop
mov
lea
push
and
sub
loope
out
movsl
sub
jl
add
xchg
imul
pop
mov
pop
sub
idivl
jnp
pop
out
call
mov
movl
dec
leave
mov
test
sbb
mov
cmp
movsb
sub
xor
arpl
je
out
mov
repz
dec
pop
aad
cld
in
int
int3
adc
fidivs
les
dec
or
xchg
je
or
aaa
cmp
enter
jo
pop
add
push
or
xchg
cmc
cmp
shlb
dec
sub
decb
adc
push
push
or
and
pop
xchg
leave
cld
xor
mov
popa
sbb
outsl
pushl
xor
popf
jb
dec
inc
fcoml
loop
lock
call
jne
insb
clc
and
bound
or
mov
push
mov
xchg
movsl
fbstp
mov
out
popf
adcl
lds
ljmp
mov
inc
sub
mov
in
mov
lcall
mov
pop
jmp
pop
push
push
cmp
jge
dec
add
or
std
xor
test
repnz
roll
dec
jp
add
scas
insl
cmp
les
and
pop
call
jb
pop
aad
add
pop
push
dec
jbe
sbb
adc
rolb
xor
stc
xchg
push
lds
sbb
hlt
mov
dec
xchg
inc
iret
mov
add
je
test
shrl
gs
orl
xlat
push
sub
jne
mov
pop
cltd
xor
std
cmp
xchg
shl
fisubrs
xchg
in
mov
dec
cmc
fbld
jnp
stos
jne
jecxz
cmp
mov
jae
popa
sub
rol
jp
mov
adc
inc
or
movsb
lods
fstl
mov
mov
repz
mov
mov
test
pop
inc
cmp
jecxz
lods
popa
test
or
popa
sbb
dec
es
jo
mov
and
jp
leave
xchg
andb
fistl
fsts
scas
test
mov
sbb
dec
js
stc
lret
or
push
and
daa
jne
into
data16
mov
inc
cld
popf
incb
sub
std
fistl
cltd
out
test
or
loope
inc
into
xchg
std
scas
shll
shll
dec
repnz
sub
pop
push
push
pop
mov
inc
add
outsl
ja
pop
inc
loopne
cmp
cmp
ret
mov
lret
or
iret
dec
loope
fistl
jp
loope
mov
aaa
jp
cmc
mov
xorl
pop
jo
lcall
jae
xchg
dec
mov
or
cmp
pop
mov
push
cs
xorl
cmp
jge
fidivs
mov
pop
mov
jl
outsb
add
lods
cld
es
mov
push
addr16
stos
and
mov
sbb
fsubrl
or
cwtl
xchg
repz
mov
outsb
mov
enter
mov
add
sbb
xor
je
in
lahf
loope
add
dec
sub
movb
pop
insl
add
pop
add
cmc
scas
inc
or
sahf
and
addb
or
mull
mov
je
or
gs
lcall
add
call
push
pushf
jmp
jno
xchg
xchg
in
push
enter
testl
jbe
daa
and
sahf
jnp
mov
xchg
fcomip
jmp
mov
push
shrl
and
in
xorl
adc
lahf
sub
cmp
std
rolb
mov
stos
aam
dec
push
out
addr16
sahf
movsb
inc
mov
dec
ficomps
jne
icebp
sub
push
ret
lahf
std
mov
ljmp
and
sbb
fildll
mov
push
sub
lcall
js
repz
in
loopne
xor
cmpsb
ja
bound
dec
pop
jne
rcr
jb
rcrb
xlat
outsl
xor
mov
insb
stc
mov
mov
jge
cmc
push
and
rorb
cld
mov
mov
push
or
xchg
and
leave
sub
xorl
call
inc
jcxz
mov
xchg
out
lds
popa
movsl
jge
mov
loop
lods
cld
std
stos
push
dec
fs
pusha
add
fcmovnbe
fisubrl
fdivl
mov
mov
das
xor
adc
sub
jle
sbb
and
and
dec
add
out
add
lds
dec
ret
or
jmp
adc
dec
jg
stc
push
aas
sahf
ss
test
mov
push
dec
and
or
and
push
xor
or
pop
add
or
adc
adc
subb
jne
xchg
mov
mov
xchg
pushf
sbb
fldl
push
cwtl
inc
in
loop
test
mov
adc
adc
arpl
js
std
repz
jmp
loope
mov
test
jns
inc
into
dec
push
add
arpl
stos
push
pop
and
out
out
push
xlat
dec
hlt
nop
jg
push
cmp
and
and
pop
xor
daa
or
cmp
mov
jmp
mov
pop
add
and
daa
jmp
adc
sbb
scas
out
mov
dec
ja
les
adc
int
sbb
out
xchg
test
daa
movsl
mov
push
jp
inc
xchg
test
mov
jl
push
lcall
adc
jle
enter
in
inc
pop
divl
rorl
cli
rolb
xchg
pop
fdivs
mov
loopne
push
jne
aas
add
aad
cmp
in
mov
lods
std
aaa
mov
xchg
adc
cmp
mov
sti
stc
out
mov
jns
pop
and
out
std
mov
repnz
es
pop
push
fcoml
sbb
fdivl
xchg
or
test
les
int
pop
pop
out
jge
lock
in
cmp
js
fstps
pop
and
mov
xor
pop
out
sub
mov
insb
call
mov
or
sbb
cmp
call
pusha
adcb
jl
repnz
inc
sub
xchg
xchg
add
outsb
repz
mulb
jecxz
jae
xchg
fisttpl
fisubrs
data16
sbbb
or
or
out
inc
mov
jns
dec
adc
push
inc
sbbb
mov
lret
or
aas
outsb
jp
imul
sbb
lods
xchg
xchg
xchg
sub
adc
xor
das
gs
cmp
clc
xchg
test
cli
cmpb
adc
adc
jp
subb
popf
cmp
es
sti
leave
and
out
pop
mov
push
lahf
cmp
test
and
inc
inc
mov
push
stos
and
mov
sub
lods
daa
out
fisttpl
xor
in
or
inc
fwait
aad
xlat
dec
or
pusha
mov
gs
pusha
inc
out
je
add
scas
jl
fcmovb
popa
pop
testl
decb
pusha
sbb
jmp
imul
pop
jo
inc
fimull
jmp
push
mov
jle
sub
jbe
ja
mov
sarl
cmpsl
popa
ja
sub
loopne
mov
loop
aam
and
or
push
scas
inc
push
arpl
fldenv
add
mov
dec
xor
mov
imul
cli
addr16
lock
xchg
pop
push
add
and
mov
sbb
xchg
scas
cmc
aad
sub
xlat
insl
ret
add
xor
sbb
xchg
mov
andl
scas
dec
xchg
mov
in
cld
mov
in
fcompl
outsl
rorl
sahf
int
or
ficomps
ret
ret
aas
cmp
out
mov
test
xlat
push
clc
popa
xor
pop
cmp
mov
add
mov
out
fnstsw
shll
pop
fcomip
and
cwtl
jmp
leave
std
cmp
adc
scas
or
sbb
inc
inc
jno
lds
sbb
int
dec
ficoml
sarl
push
sub
jl
mov
mov
mov
lahf
push
lcall
imul
pop
xor
pop
jo
jl
pop
repnz
js
addr16
or
ss
dec
gs
js
loopne
and
ret
div
stos
jne
xor
mov
xchg
lret
vpandn
loopne
pop
cmp
jp
push
add
xor
xchg
int
stos
push
dec
jae
mov
outsl
adc
repnz
in
jg
test
xchg
int
mov
and
test
mov
jnp
cli
sbb
mov
jno
divb
loope
insb
cmc
mov
shlb
outsb
bound
cmp
fsubs
stos
jae
rcl
test
jecxz
xor
in
or
add
mov
out
sbb
lcall
dec
xchg
and
icebp
mov
sub
dec
js
dec
pop
fld
sbb
sbb
cli
and
jne
iret
xchg
mov
mov
in
pop
rorl
cmc
ficompl
cmpb
jle
cmp
ret
inc
cmp
dec
das
jg
aad
sub
addl
andb
inc
push
fidivs
or
cltd
testl
sti
mov
lret
cmp
fisubrs
and
mov
add
or
mov
mov
out
xor
pop
mov
add
fs
mov
loopne
lea
dec
cmp
cmp
xchg
cmp
push
test
add
ds
pop
mov
in
pop
adc
cmp
or
shrl
insl
or
sahf
testb
lods
pusha
cs
cmp
add
lock
ret
mov
mov
cmpsl
push
and
xchg
out
inc
or
inc
lds
mov
sbb
push
mov
mov
and
mov
xor
cmp
xchg
push
cwtl
js
aaa
scas
xchg
push
in
mov
mov
and
cs
sub
or
fdivs
add
pop
jmp
sbb
mov
adc
and
xchg
cmp
lods
push
sub
test
fidivl
mov
fnstenv
or
out
test
lret
and
insb
and
lea
inc
int3
fidivl
dec
lds
inc
in
and
jbe
rorb
add
sub
leave
hlt
in
mov
inc
add
cmp
movsb
fiaddl
test
dec
mov
pop
insb
add
cmp
dec
jge
push
inc
jnp
jle
xor
add
push
fwait
and
cmp
mov
dec
loope
dec
daa
lods
push
dec
sti
imul
ja
jb
js
jmp
inc
repz
mov
dec
xchg
xor
std
ficoms
cmc
fisubl
adcl
push
fcoml
mov
mov
mov
ja
pop
push
cmpsb
adc
into
ficoml
cmp
xchg
add
jmp
jno
dec
add
mov
mov
mov
dec
fidivl
push
push
jg
divl
fsub
sub
xor
pop
cwtl
mov
nop
popa
mov
out
xchg
das
jae
lret
addr16
add
jbe
adc
mov
lods
lahf
xor
popa
pop
push
dec
out
xchg
negb
repz
cwtl
xchg
mov
cmp
mov
idivb
mov
dec
add
sub
pushf
pop
fbld
push
mov
push
xor
stos
or
out
push
jmp
cld
rcrl
mov
push
lcall
inc
xor
cmp
and
cmp
lods
mov
cmpsb
sbb
xchg
cmp
adc
add
mov
incb
es
or
std
cmp
push
push
xor
movsl
call
push
sub
cltd
dec
adc
cmp
out
js
das
js
mov
call
sbb
adc
ret
mov
mov
fidivrs
es
sub
adc
add
lret
push
dec
sub
mov
negb
test
faddl
push
lcall
cmp
scas
cs
mov
and
scas
jns
hlt
fdivrs
scas
bndstx
test
lock
pushf
movsb
dec
sti
jle
lea
jo
les
xchg
repz
pop
lods
cmc
test
and
loop
fstl
cltd
insb
pop
jmp
test
push
pop
ja
andl
or
sbb
push
adc
adc
out
or
jae
fistpl
lcall
and
andl
add
jmp
jmp
jmp
push
mov
mov
mov
mov
mull
sbb
xchg
xlat
pop
lds
mov
aas
fnsave
push
add
loopne
push
bnd
adc
addr16
cmpsl
das
mov
test
xor
pop
sub
adcl
cmp
lods
adc
mov
dec
inc
divl
sbb
push
lret
les
adc
pop
mov
cmp
scas
nop
pop
push
in
jne
in
shlb
sarl
fs
jno
fwait
jo
jmp
sbb
ret
mov
cmpsb
lea
rcr
or
xchg
and
cltd
pop
jge
les
push
push
mov
sbb
inc
test
iret
daa
iret
popf
push
inc
enter
xlat
in
inc
gs
push
cmp
xchg
and
adc
jp
xchg
dec
add
xchg
inc
mov
pop
mov
push
in
es
sbb
les
pop
lret
roll
sub
jecxz
loop
xor
mov
sbb
scas
pusha
outsb
mov
daa
jne
call
fucomip
push
cmp
lods
ss
loopne
xor
xor
stos
sbb
loopne
and
mov
xor
lea
das
and
cmp
mov
jmp
ljmp
jno
out
jecxz
int
xchg
iret
fs
dec
rclb
push
lret
pop
pop
imulb
push
pushf
test
pop
mov
repz
push
mov
fmuls
in
xor
dec
xchg
loop
in
cmp
push
call
es
mov
nop
push
inc
scas
adc
ds
js
iret
rcrb
aaa
push
lret
test
lret
shlb
sbb
dec
in
jb
and
mov
gs
dec
rcll
jo
in
cmp
cltd
lds
jbe
pop
test
pop
or
mov
sub
js
sahf
adc
and
mov
add
and
rorl
cwtl
push
mov
fimuls
loope
mov
inc
cwtl
nop
dec
lahf
sar
jbe
mov
ret
fucomp
sahf
loopne
or
dec
lret
icebp
popf
fidivrs
mov
mov
int
mov
adc
add
adc
xor
pop
popa
testb
mov
and
call
push
push
fwait
push
mov
in
ds
xchg
add
or
mov
adc
push
inc
dec
fbstp
inc
sarb
xchg
or
aam
dec
enter
mov
lods
adc
cmp
adc
imull
jno
jno
xchg
or
push
lahf
cmpsl
mov
jbe
idivb
aaa
pop
jp
into
movsl
and
stc
xchg
pop
sti
inc
lock
mov
push
jp
dec
rcrb
and
push
push
out
iret
clc
jmp
in
insb
mov
push
cli
loope
xchg
sbb
mov
lods
add
sub
incl
cwtl
jmp
mov
jnp
inc
leave
cwtl
adc
jge
hlt
lods
xor
out
rcrb
xlat
scas
mov
je
sub
and
aas
jmp
xchg
push
stos
pop
pusha
push
dec
push
out
rcll
mov
in
mulb
xchg
mov
cltd
push
mov
bt
ss
cmpb
or
imul
mov
ret
adc
mov
push
mov
fs
ror
xchg
and
clc
test
lret
push
out
jb
call
jno
adc
jb
js
icebp
clc
jno
lds
outsb
push
jo
cmc
scas
mov
xchg
stos
mov
cmp
inc
nop
and
xchg
or
push
push
cmpsb
repz
mov
add
mov
out
lods
int3
mov
mov
out
push
cltd
dec
xchg
push
hlt
jge
jg
insl
out
pop
test
mov
pop
dec
push
call
in
push
in
testb
cmpsl
divb
xor
out
pop
push
cmp
xchg
loop
aam
imul
imul
or
clc
mov
push
shr
lcall
push
test
ds
cmp
cmpxchg
lret
xlat
test
sub
pop
cmpsl
pop
dec
aam
dec
movb
sub
repnz
mov
cs
sbb
push
inc
arpl
out
jae
out
into
dec
call
cli
mov
jge
mov
fcomi
ljmp
sahf
adc
dec
add
test
mov
jo
loope
inc
xchg
add
adc
mov
mov
in
rolb
push
arpl
test
test
xchg
les
add
js
mov
js
iret
sub
fcmovnbe
mov
pop
xchg
sbb
sub
mov
shl
fcmovne
pop
adc
mov
movb
mov
sbb
sbb
pop
incb
pop
xchg
inc
xor
cwtl
jno
inc
fmull
add
int
sub
cmc
sbb
xchg
in
std
stos
or
cmp
adc
call
pusha
enter
push
mov
pop
and
aaa
mov
mov
cmp
fisttpl
in
mov
cmp
pop
xlat
adcl
or
incb
mov
test
rorl
sahf
in
adc
lods
in
mov
out
pop
aas
xchg
out
dec
popa
jmp
out
mov
add
adc
jnp
mov
mov
imul
rclb
outsl
and
pushf
stos
xor
call
or
gs
fistpll
divb
xchg
lock
push
test
mov
orl
and
mov
inc
cmpsw
pop
sub
loopne
inc
imul
gs
les
pop
mov
jae
sahf
inc
dec
mov
xchg
mov
js
pop
mov
mov
sbb
aaa
adc
mov
inc
testl
jns
lret
lret
xor
rorl
imul
adc
test
lock
dec
arpl
xchg
and
dec
xchg
cmpsl
or
mul
mov
add
or
push
sbb
cmp
jns
fdivrp
ficoml
mov
pop
lods
or
jbe
adc
and
mov
add
bound
mov
sbb
push
mov
sub
or
mov
and
test
cmp
dec
or
jp
mov
xor
sub
push
inc
dec
dec
jmp
xor
idivl
mov
mov
divl
mov
jg
fadds
mov
into
into
add
movsl
xor
inc
inc
repnz
push
icebp
or
addr16
adc
movsb
jo
dec
and
cmc
sti
aas
ja
and
xchg
push
addr16
mov
jl
jo
push
and
cmp
fs
fidivrl
lcall
hlt
jo
pop
sti
push
sub
sarb
bound
lahf
jl
dec
and
stos
adc
dec
test
sub
ret
out
cltd
sti
push
bswap
xchg
in
xor
sub
gs
add
gs
pop
jmp
jno
lock
xchg
sub
or
cmp
mov
push
lods
aas
and
imul
jno
das
mov
jmp
jl
lret
sbb
lret
and
insl
mov
movsb
mov
repnz
jno
sbb
jge
loopne
mov
or
push
sti
adc
pushf
mov
push
pop
push
mov
pop
xor
out
stos
popf
mov
shl
sub
xchg
add
jbe
rcrb
mov
daa
orb
xchg
in
out
test
mov
jge
jne
stos
and
mov
ss
or
aam
cmp
popa
mov
test
cld
jecxz
add
or
pop
sahf
and
push
test
sarl
cmp
loope
push
enter
lods
mov
mov
dec
jnp
call
push
sub
imul
test
mov
sbbb
pop
pop
jg
sbb
mov
adc
es
inc
dec
leave
jmp
mov
pop
inc
push
cltd
ficompl
sub
and
faddp
jb
pop
mov
pop
cs
jo
xchg
xchg
pop
add
test
jecxz
xor
jne
iret
sub
dec
fistl
pushf
and
add
or
xor
hlt
in
and
leave
aad
jg
lock
and
sbb
jb
or
mov
fdivrl
in
add
data16
stos
jnp
clc
mov
cmp
lock
dec
ja
dec
lret
in
aas
mov
dec
leave
test
dec
add
xor
lock
mov
pop
aad
adc
rorb
adc
in
in
jae
jecxz
mov
mov
into
pop
popf
pop
mov
decl
in
dec
xor
aam
hlt
push
das
inc
fiadds
xchg
adc
mov
mov
aad
jmp
push
loop
daa
pop
pop
in
xchg
orl
dec
and
jge
push
sbbl
repz
scas
inc
adc
mov
mov
push
push
fisttps
loop
mov
stc
test
lods
inc
mov
jb
lods
loope
in
loope
mov
add
mov
movsb
mov
cwtl
iret
data16
ljmp
inc
cmc
or
add
xor
mov
call
and
bswap
pop
jno
sbb
pop
adcl
sub
mov
adc
sbb
mov
cmpsb
pop
pop
xchg
test
adc
enter
push
adc
adc
jmp
sbb
jbe
add
loope
inc
xchg
and
sbb
push
or
adc
pop
fildl
addb
jae
lcall
jmp
sbb
jne
pop
inc
sub
lods
lods
cmc
adc
dec
adc
jle
test
out
iret
inc
aas
mov
fnstcw
jne
push
mov
into
loop
jecxz
xlat
nop
enter
mov
push
daa
lea
mov
movsl
push
cmp
mov
jge
pop
sahf
dec
divl
and
sub
js
cli
repnz
push
lret
inc
mov
out
xor
fsubr
cmp
call
rcrb
test
adc
scas
jge
jno
rcrl
push
orb
mov
add
popf
sbbb
lret
cmp
add
pop
dec
mov
jne
push
es
mov
and
xor
andb
sub
rolb
ss
repz
stc
adc
cltd
sbb
shll
pushl
gs
adc
in
ret
and
cmpsl
in
jge
hlt
in
iret
jae
scas
lret
in
mov
ficoml
loop
sub
aas
int3
sbb
addr16
adc
push
pop
inc
jns
jbe
dec
cmc
adc
aas
insl
jmp
or
lods
dec
cmpsl
ss
insb
call
roll
sbb
aaa
cmp
pop
mov
jae
dec
push
xchg
test
xchg
mov
lret
adc
sbb
lods
lods
mov
outsl
sbb
or
mov
out
imul
into
mov
mov
jg
fnsave
push
cmpsl
inc
sbb
insb
xor
jbe
jno
lret
imul
leave
mov
dec
xchg
inc
pop
mov
jp
test
test
and
in
dec
out
push
mov
dec
inc
add
iret
xchg
mov
lahf
fcomps
fisubrs
lcall
cmp
push
push
mov
mov
add
mov
push
jge
daa
and
xadd
and
add
sbb
sbb
add
and
incl
mov
xor
test
call
jmp
xor
bt
std
pushl
popf
push
movb
pushl
ret
lock
das
call
push
mov
out
mov
jo
icebp
repnz
dec
insb
sub
adc
movsb
xchg
cmpsl
aaa
cs
mov
xor
cmpsb
mov
fucompp
push
lods
and
decl
and
pop
adc
jp
stos
mov
sbb
out
xlat
in
sbbb
inc
mov
jp
jnp
addr16
and
or
ljmp
sbb
ficomps
rorl
jns
test
xchg
adc
xchg
cmc
or
movsb
jg
mov
push
push
and
fildl
lret
les
xor
cmc
add
adc
inc
push
cmp
test
repnz
xlat
inc
mov
out
cmpsl
scas
adc
imul
add
test
fsubrs
lods
popa
add
sbb
loope
in
movsl
inc
lahf
cld
mov
jbe
pop
jg
dec
lret
aas
xor
stos
push
mov
pop
popf
jne
lret
dec
or
inc
stc
icebp
sbb
addr16
nop
mov
int3
xchg
xchg
stos
loope
aad
std
icebp
dec
sub
in
inc
aas
ds
lds
test
jno
add
stos
mov
jns
inc
xchg
cmc
mov
mov
pop
fcomps
xor
das
pushf
jnp
jg
xchg
enter
dec
inc
popa
clc
stc
xchg
stc
mov
scas
lds
adc
pop
jno
xor
jg
add
sub
fstl
repnz
aad
rcrl
aaa
cli
xor
jae
xchg
aad
scas
lret
loope
pop
cmp
sbb
call
dec
leave
push
outsl
clc
pusha
andl
lods
out
cmc
and
inc
fstpt
out
fcmovnbe
or
mov
dec
insb
jo
push
lods
aad
sbb
popf
dec
xorb
pushw
pop
stos
and
adc
cltd
and
dec
mov
jo
sbb
rol
arpl
loope
cmpsl
inc
pop
cmp
fdivs
push
xlat
popf
bnd
sub
sub
pop
pop
das
cld
leave
jmp
jp
sarb
in
inc
popf
xchg
scas
nop
dec
mov
daa
dec
dec
mov
arpl
cmp
cmp
inc
sub
cld
dec
rcll
loopne
inc
push
cmpl
mov
adc
and
xor
imul
cmpsb
movsl
adc
sub
imul
ja
stos
mov
or
cmp
fildll
enter
push
mov
jmp
repnz
sub
xchg
mov
dec
jge
dec
rclb
cli
push
mov
xchg
and
test
inc
inc
addl
call
fwait
xchg
daa
test
mov
and
je
sarl
xchg
hlt
lock
push
imul
jns
fcoms
repnz
ds
fcompl
inc
ficoml
test
lds
dec
ficomps
pop
imul
sub
xchg
or
out
push
jb
inc
cld
xchg
mov
adc
loopne
mov
sub
pop
ds
je
inc
addb
ret
bound
movsl
pop
fwait
xor
sbb
test
mov
movsb
out
pop
loopne
mov
movsl
mov
icebp
mov
add
je,pn
dec
mov
shlb
dec
mov
jle
rorl
cltd
adc
clc
add
dec
pop
insl
add
jnp
sub
loop
dec
sub
loope
pushf
stos
out
mov
add
cmc
dec
test
push
cmp
and
pop
sbb
xor
fwait
push
adc
dec
subb
mov
and
and
cmpsl
and
imulb
imul
enter
xchg
dec
negl
adc
inc
lcall
mov
pop
push
pop
push
std
clc
sub
adc
loopne
cmpsb
iret
imul
mov
push
fmul
push
lea
mov
xchg
mov
push
and
hlt
insb
cmc
movsb
and
gs
push
xor
push
fwait
in
adc
adc
negl
out
pop
enter
test
push
insb
mov
add
mov
adcb
adc
sbb
mov
test
lcall
loop
popf
pop
push
out
inc
push
cld
or
incl
fwait
mov
and
repz
sbb
cmp
outsl
pop
jno
cld
add
je
std
or
dec
lds
inc
jl
push
es
cld
pop
mov
insb
in
loop
pop
stc
in
popl
retw
sub
cli
call
xor
movsl
add
xlat
repnz
sar
pextrw
push
inc
add
cmp
mov
add
scas
cmpsl
out
adc
std
inc
rcl
push
or
push
mov
popa
dec
lods
jo
lock
add
mov
out
xchg
push
pushf
push
xchg
fbstp
jmp
jbe
test
xor
or
stos
lods
ss
loopne
cwtl
and
sbb
scas
sub
or
jmp
or
fs
xchg
out
fcoms
add
pop
fmul
pusha
fisubrs
lret
mov
dec
jns
sbb
out
xor
lcall
test
xor
pusha
sbb
les
sahf
iret
adc
nop
test
adc
and
cltd
fst
xchg
xor
mov
pop
stc
js
push
sbb
pop
xor
in
daa
push
loope
cs
in
add
fisubl
xor
scas
add
push
xchg
cltd
push
xor
test
mov
movsb
dec
sbb
or
cmpl
fnstenv
mov
cs
cs
adcb
ja
mov
mov
sbb
hlt
fwait
sub
push
mov
add
mov
mov
repz
xchg
add
mov
test
sbb
in
je
inc
mov
lret
out
mov
jns
dec
movsl
sub
inc
lock
fcoml
push
call
into
mov
lock
repz
enter
test
popf
and
mov
test
mov
push
xchg
or
dec
enter
mov
bound
icebp
and
adc
sbb
or
sub
mov
push
dec
cmp
pop
popf
xchg
inc
in
loope
pop
jmp
shrl
pop
mov
push
fildll
jg
mov
fistl
test
loope
sbb
xchg
add
ret
sar
inc
inc
xor
cmpsl
or
jns
mov
sub
or
pop
andb
mov
insb
adc
inc
cli
and
mov
ja
push
mov
cli
sbbl
repnz
mov
out
xor
repnz
sbb
int
mov
push
incb
jns
pusha
dec
into
fisubs
pop
out
sbb
push
and
sti
stc
mov
ds
loop
sub
mov
pop
movsl
inc
xor
mov
add
or
es
xchg
push
or
enter
jl
mov
lds
fnstcw
repz
adcl
xchg
sub
in
fwait
shlb
xor
inc
mov
fabs
in
ficoms
push
or
cmp
addr16
ds
and
or
out
jnp
sub
jo
fwait
adc
cmpsl
adc
mov
sub
ja
mov
movsb
inc
xchg
in
xlat
sub
mov
jbe
stos
xchg
out
mov
jmp
pop
ficoml
les
and
mov
fcoms
fwait
pusha
out
fidivs
sbb
sbb
sti
and
clc
fimull
fistpll
mov
les
ja
sarl
and
icebp
xor
jp
cld
sbb
xchg
std
fmuls
popa
adc
pushf
repz
leave
fcompp
sub
mov
cltd
and
xchg
sbb
movsl
fistps
sbbb
xchg
dec
aad
pop
dec
pop
adc
adc
mov
mov
cltd
or
mov
lods
adc
jnp
and
lret
out
fxch
pusha
pop
push
int
mov
pop
repnz
mov
in
push
mov
xchg
outsb
pop
mov
xchg
xadd
ror
or
xchg
and
inc
shrb
xchg
jle
dec
enter
stos
mov
mov
cmp
sub
xchg
sub
ret
inc
cmp
and
in
mov
stc
xchg
mov
cmp
and
out
lods
outsb
lret
adc
jp
pop
xchg
mov
mov
dec
ret
mov
incb
int3
mov
and
repnz
pop
xor
cmp
clc
cmp
sub
aas
push
jb
rcll
push
dec
mov
or
cmp
std
and
push
fs
pop
jb
and
sub
cmpsb
mov
or
mov
sub
lret
roll
mov
jno
cld
cmc
and
pop
or
in
stc
push
mov
dec
xchg
jne
and
xlat
rcrb
mov
push
ja
sbb
cmp
movsl
mov
xor
rorl
mov
inc
jae
push
push
push
rorl
arpl
es
xor
jo
in
push
das
aad
push
or
sub
aam
pop
push
lods
cmpl
mov
add
outsb
aas
push
popa
fstl
jnp
sub
add
inc
mov
cmc
dec
sbb
inc
inc
fiaddl
xchg
ja
int
popa
inc
insb
orl
dec
sbb
lcall
add
push
sbb
ret
int
pop
xchg
out
js
hlt
outsb
xor
mov
daa
pop
fisttpll
das
inc
pusha
jbe
pusha
add
add
cmp
lret
push
xor
rol
cmp
cmpsl
pop
int
insb
imul
xchg
and
aas
or
mov
add
push
push
push
and
rcr
sbb
in
inc
shll
enter
into
pop
jle
jl
into
adc
mov
scas
pop
cmpsl
cmp
add
pop
movsl
add
out
js
sub
cli
sbbb
dec
aas
pop
and
cltd
xchg
add
adc
in
dec
js
inc
rcrb
shrl
push
adc
mov
int
xchg
popf
jb
dec
sbb
cmp
decl
mov
cmp
xlat
adc
mov
imulb
fidivl
inc
cld
sbb
push
mov
pop
pusha
adc
fs
insb
lldt
imul
mov
jecxz
repnz
pop
or
lret
scas
or
or
push
stc
ljmp
stos
cmp
out
std
jns
and
sbb
repz
push
adc
and
push
mov
lock
xor
push
loope
addr16
in
dec
inc
xchg
out
push
out
sbb
jmp
sar
xchg
jl
stos
out
aaa
roll
enter
mov
mov
xchg
dec
and
cs
inc
sarl
out
inc
fs
push
pusha
xor
ret
jecxz
icebp
out
jns
aas
inc
xlat
mov
int3
fcmovnbe
lock
mov
enter
call
sbb
nop
das
pop
mov
outsb
add
fisttpl
test
xchg
pushf
movl
jmp
les
push
movzwl
cmp
cmp
fwait
or
sbb
and
arpl
push
jge
fucomi
jge
repnz
icebp
xor
fldenv
movsb
sub
leave
pop
test
fcomps
or
iret
or
aad
pop
ljmp
sbb
mov
lea
dec
jns
pop
and
negl
test
cmp
mov
xchg
cmp
cmp
adcl
negb
je
shrb
pop
scas
sbb
sbb
ljmp
cmpsb
sub
cmpsl
add
aas
push
add
and
push
sbb
imul
mov
adc
mov
test
mov
sbb
xchg
cltd
jne
lcall
jmp
pop
nop
inc
shl
and
cmp
and
cmpsb
push
sarb
iret
pop
das
cs
adc
and
push
fabs
je
arpl
sub
dec
sub
jo
mov
push
inc
or
hlt
test
cmp
fistpll
aad
dec
fnsave
imulb
loope
rclb
dec
jnp
movsb
stc
xchg
sub
jae
cmp
lods
out
mov
out
rorb
iret
nop
mov
imul
mov
clc
xchg
sbb
sbb
fdivrs
fisubl
out
mov
ror
cmp
sbb
ss
cli
dec
out
inc
dec
fnstsw
ret
inc
lods
cmp
aaa
mov
xor
sub
and
aam
push
sbb
in
cmc
lret
loopne
js
cmpsl
xchg
adc
jo
push
inc
mov
lods
fwait
orl
sbb
xchg
inc
in
dec
jge
fildl
pushf
xchg
and
pop
xchg
mov
pop
aaa
leave
scas
jmp
mov
and
cwtl
xchg
das
pushf
adc
pusha
test
cmp
push
mov
inc
cld
add
add
dec
dec
scas
stos
mov
rclb
pop
shrl
mov
pop
fs
sub
jl
dec
leave
and
cld
stos
jle
jb
jge
je
and
shrb
enter
sti
jge
xchg
hlt
or
stos
mov
mov
mov
inc
mov
fwait
or
cltd
mov
scas
icebp
or
mov
aaa
mov
stos
outsl
pop
test
jp
shlb
xchg
decb
xchg
xlat
inc
xchg
sbb
sarb
pop
mov
out
pop
fsts
aas
lea
and
cmp
jae
mov
push
imul
out
or
mov
lock
je
lahf
push
add
sbb
xchg
lret
cmp
adc
or
sbb
imul
inc
push
out
push
leave
enter
inc
pop
movsl
out
and
push
fidivrs
lock
adc
das
leave
enter
fldl2t
icebp
sub
imul
fs
jl
xor
dec
fnstcw
sub
mov
dec
inc
rol
cmp
push
iret
pop
push
in
lds
and
pop
sbb
loop
leave
pop
push
xchg
xchg
popa
inc
mov
call
jns
adc
add
xlat
pop
leave
sbb
lock
cmc
mov
bts
stc
and
push
mov
clc
xchg
sub
in
mov
divl
cwtl
pusha
fisttpll
xor
jo
push
int
jmp
cmp
mov
cmp
mov
ret
aam
add
popa
in
sub
mov
subb
xchg
and
loop
fisttps
xor
push
stos
cwtl
sbb
fistpll
cmc
sub
rorb
ljmp
int3
jmp
or
movsl
mov
lds
repz
repnz
xor
adc
cmpsl
mov
xchg
mov
add
dec
enter
sub
push
mov
dec
pushf
add
aad
push
mov
mov
rorb
in
xchg
std
xchg
cmp
jmp
inc
adc
xor
je
sbb
lds
inc
lcall
push
sbb
test
dec
pop
ljmp
mov
dec
inc
iret
js
lret
nop
loop
pop
clc
push
jmp
cmp
xchg
cmp
std
loope
xlat
push
dec
cmc
inc
fisubrl
movsb
popf
mov
ret
cmpsb
inc
and
out
in
lea
mov
or
and
push
pop
jne
and
faddl
inc
int
imull
leave
fsubr
data16
aas
and
int3
xor
push
xchg
push
jmp
shrl
xor
cli
cmp
mov
lret
jle
call
fwait
and
rorl
stos
in
iret
pop
push
mov
mov
push
xor
push
das
jae
into
stos
test
repnz
mov
clc
dec
push
out
gs
call
pushf
aas
dec
into
insb
lods
cmp
cmp
inc
lret
fidivl
mov
lea
adc
mov
mov
faddl
bound
cltd
in
shlb
push
test
sub
xchg
push
dec
pop
popl
mov
or
mov
enter
fsubl
fistl
mov
jmp
and
lds
lahf
mov
mov
scas
pushf
adc
outsl
jns
loopne
aaa
arpl
das
cmp
xchg
mov
out
pop
mov
pop
sbb
test
aam
inc
repz
loop
xchg
fsqrt
fcmovb
adc
shll
popf
test
sbb
mov
hlt
xlat
sar
js
cld
adc
sbb
enter
add
rorl
push
std
push
xor
ds
lock
xchg
ljmp
or
mov
in
cltd
adc
outsl
lret
mov
inc
mov
int
ret
call
sti
inc
mov
int3
dec
or
xor
jg
mov
and
mov
mov
jp
movsl
repz
or
imul
pop
sbbl
leave
and
sub
daa
fstl
sub
stc
ja
rorb
addb
das
shlb
js
out
movsb
cli
push
lds
lcall
xchg
fwait
in
jecxz
jbe
pop
sti
push
lock
xchg
mov
movsb
sbb
xchg
sub
insb
ficompl
cwtl
cld
adc
incl
in
in
lret
shrl
xor
pop
xor
je
testb
lods
stc
cmp
mov
in
shll
push
mov
arpl
adc
jne
sbb
lods
fimull
xor
sub
rcrl
aad
add
jecxz
pop
inc
cwtl
adc
pop
div
sub
stc
inc
ret
int3
mov
outsb
test
push
jl
movsl
faddl
mov
int
loope
inc
std
jmp
call
or
ljmp
pop
sbb
mov
cwtl
inc
ror
inc
cmp
dec
cmp
rep
jne
add
std
mov
adc
addl
call
mov
xchg
iret
sahf
xchg
int3
aam
push
xchg
mov
pop
adc
movsl
hlt
fwait
sub
inc
lods
mov
les
repz
pop
jl
sub
or
push
adc
scas
or
bnd
dec
jbe
out
and
jmp
out
lods
xchg
mov
imul
pop
sahf
aaa
push
adc
inc
and
dec
xorb
xlat
cmp
lods
and
adc
inc
xchg
sbb
fstps
fisubs
shr
push
dec
dec
repnz
mov
xchg
or
hlt
jo
xlat
inc
xchg
shrl
out
xchg
push
lret
xchg
adc
mov
and
xor
xlat
push
mov
mov
xchg
sarl
push
dec
xchg
mov
fildl
je
hlt
cld
jge
andl
fdivrl
add
xor
lcall
xchg
or
jne
xchg
sbb
jmp
sbb
aas
lret
xchg
adc
cwtl
xchg
dec
leave
push
sqrtps
mov
mov
mov
pop
dec
pop
pushf
inc
es
cmp
jp
outsl
dec
mov
xchg
add
or
jo
enter
scas
and
or
sub
xor
xor
loope
xlat
imul
xorl
pop
jl
ljmp
outsb
addr16
add
fstpl
pushl
sti
aas
imul
mov
subb
imul
ss
iret
xchg
fmulp
repz
push
ljmp
jg
mov
in
ljmp
sbb
push
add
xlat
xor
fdivl
in
mov
cmp
loopne
pop
pusha
pushl
adc
dec
cmp
outsl
dec
push
in
sub
mov
inc
xchg
push
mov
loop
xor
cmc
jbe
iret
fsubrp
jge
jg
jb
or
sub
imul
pop
aas
cmpsb
push
mov
jbe,pt
icebp
addr16
aam
aas
stc
pop
jo
jnp
movsb
jnp
inc
push
fs
mulb
sarb
inc
loope
xchg
js
and
add
jno
imulb
popf
push
imul
dec
xchg
icebp
xor
or
jg
in
adc
add
pop
sbb
outsl
sub
pushf
xor
outsl
mov
movsl
mov
adc
rorb
imul
mov
dec
push
out
hlt
cmp
roll
pop
inc
cmp
mov
jecxz
inc
pop
ficomps
fbld
xor
and
pushf
xor
stc
call
jmp
pusha
pusha
mov
movl
jmp
pushf
pusha
bt
xor
test
bt
xor
cmp
xor
pushf
pushl
xor
stc
xor
cmp
xor
pushf
xor
test
xorl
stc
cmc
pushl
popf
movb
pushl
ret
movl
pusha
pushf
pushl
lea
jmp
bt
xor
call
add
mov
xor
mov
frstor
in
dec
lds
pusha
xchg
add
mov
sbbb
or
mov
fadd
sar
push
lock
ret
xor
mov
push
in
cmpsl
fildll
pop
pop
xchg
insb
fistl
rclb
pop
cli
sti
xchg
jnp
mov
inc
adc
xchg
sti
mov
int
addb
add
sbb
mov
pop
jle
sub
inc
push
pop
fs
fcmovnbe
sbb
xor
mov
repz
inc
outsl
outsb
ret
cli
xor
push
pusha
and
imulb
mov
js
test
mov
adcl
jle
pop
scas
jge
cmp
adc
jo
movsl
loope
in
in
lock
lock
pop
mov
adc
jg
inc
fidivl
cmp
mov
ljmp
aad
jo
lcall
xchg
dec
inc
repz
mov
jns
xor
in
test
clc
cmp
enter
or
jae
out
pop
sbb
bound
xor
xchg
pushf
push
pop
dec
jle
and
xchg
dec
and
cmpsb
mov
scas
stc
add
and
adc
mov
sbb
xor
out
mov
fwait
jb
popf
xor
mov
push
or
jg
adc
or
jg
sub
hlt
ret
sbb
hlt
jae
fisubrl
mov
inc
mov
fxch
arpl
insl
cmpsb
dec
scas
sub
or
inc
cmp
and
mov
jmp
add
aad
inc
lret
sbb
mov
cmp
cmp
dec
jecxz
movsb
call
or
into
lods
sub
es
sti
mov
mov
and
xchg
xchg
cltd
fnsave
imul
lock
inc
push
add
dec
jns
mov
aas
pop
cmp
cmp
aaa
aas
dec
leave
mov
loope
jnp
in
idivl
lods
fwait
pop
enter
daa
insw
mov
pop
sbb
lcall
cmp
dec
popa
cwtl
mov
not
sub
or
push
mov
je
mov
push
dec
adc
xor
cmp
sbb
cmp
dec
push
stos
mov
push
cmp
ja
inc
test
lods
sub
dec
and
shlb
insb
outsl
sbb
outsb
or
icebp
mov
cltd
jnp
push
pop
pop
jl
xor
fidivl
sub
jmp
fld
dec
dec
push
or
adc
leave
pop
xor
cmp
mov
les
scas
pop
loope,pt
or
insl
fdiv
or
daa
in
and
adc
xchg
sbb
ret
jne
jo
or
popa
lods
cmp
and
xor
jle
sbb
lahf
out
mov
and
test
mov
rcrl
xchg
inc
and
push
dec
jge
push
adcb
pop
xchg
push
push
cld
addr16
mov
sub
out
mov
fisttpll
mov
xor
xchg
sti
pop
into
popa
fdivrl
mov
repz
lods
sub
push
xchg
fmulp
mov
testl
in
push
or
dec
jmp
and
mov
cld
fcomps
insl
pop
jmp
pop
jns
fdivrs
or
in
xchg
sub
out
loopne
mov
mov
in
out
cld
shrl
rorl
imul
and
mov
aam
in
add
sub
push
ljmp
adc
fs
ljmp
lds
enter
icebp
mov
xchg
sbb
or
imul
jp
aaa
cmp
outsl
movsl
in
cmp
push
jge
repnz
xor
int
aaa
jns
cwtl
add
adc
push
pop
lret
sbb
into
pop
fldt
push
cmp
mov
mov
jl
mov
add
gs
and
jo
fidivs
cli
movsl
lods
jne
add
insb
xchg
jge
jns
jno
pop
fdivs
add
in
aaa
sbb
decl
loopne
cwtl
xor
cs
jecxz
ja
mov
loop
stos
cmpsl
mov
xor
gs
test
xor
xor
mov
dec
fs
gs
mov
aas
pusha
xchg
mov
push
cmc
jae
lret
push
pop
mov
push
cmpsl
xchg
mov
ljmp
adc
cmp
lret
dec
jecxz
sarl
insb
lahf
mov
cmpsb
sti
arpl
ret
adc
rorl
les
into
cmp
ret
xchg
sub
mov
xor
and
push
xchg
sbb
jbe
stos
outsl
aad
push
xor
daa
push
mov
jnp
push
rolb
pop
es
or
pop
pusha
jo
sbb
je
push
das
push
test
sbb
cmp
jnp
ret
int3
popf
test
and
imul
in
add
sbb
cmp
nop
psllq
dec
std
pop
jne
lods
inc
ds
cmc
jge
icebp
stos
test
aas
ss
push
shrl
mov
loop
pop
or
cmp
lcall
out
fistpll
shll
fisttpll
inc
xchg
fwait
stos
es
jne
add
ret
loope
push
xor
xchg
pop
lahf
pop
add
int3
popa
mov
and
push
lea
xlat
scas
push
std
xor
ror
ret
push
mov
cwtl
out
xor
pop
fidivrs
sbb
mov
xchg
dec
push
je
cmp
mov
fwait
pusha
sub
xchg
sarb
scas
dec
xor
popf
repnz
addl
jmp
popa
xchg
lcall
mov
adc
popa
mov
adc
leave
into
sbbb
sub
jbe
mov
pop
jmp
stos
rcrl
add
mov
or
aad
jno
and
cmp
dec
mov
push
dec
pop
fdivs
adcl
cld
orb
or
dec
leave
push
and
fmul
pop
xchg
enter
jge
sarb
icebp
fimuls
das
adc
sub
js
js
out
push
aaa
dec
and
push
ret
in
dec
or
adc
push
push
cmc
icebp
mov
push
cmpsb
and
out
jecxz
pop
xchg
cld
jecxz
test
shll
call
ds
int
push
fisubs
cs
aad
ja
xchg
push
out
fcoml
pop
in
cltd
in
adc
pushf
jnp
inc
xor
mov
jecxz
icebp
inc
adc
or
aaa
mov
inc
lock
negb
sub
fcom
jle
mov
mov
data16
sub
test
loop
push
cmp
pop
aaa
sub
jb
sbb
lods
les
push
rclb
in
in
test
inc
out
aas
jge
mov
lcall
outsb
out
add
jnp
outsl
nop
leave
call
mov
dec
cmp
push
pop
jmp
sbb
push
sub
fistps
test
pop
push
mov
roll
xchg
mov
mulb
test
dec
cmp
mov
popa
movsb
insb
mov
pop
arpl
push
int
scas
loope
add
fbld
add
lret
adc
jmp
insl
add
mov
ds
cmp
sbb
mov
jbe
mov
inc
int3
pop
arpl
xchg
pmuludq
in
push
jo
xchg
mov
xchg
cmp
add
jge
test
jecxz
je
dec
pushf
add
lds
insb
mov
pop
fwait
das
jnp
pop
mulb
jb
push
std
sbbl
xchg
call
lahf
icebp
pmuludq
loopne
fistps
mov
and
imul
pop
icebp
jle
dec
xchg
pop
cmpsl
xor
jp
jl
jbe
xchg
das
outsl
imul
and
arpl
adc
pop
rep
xorl
or
in
shrl
jbe
pushf
sbb
cli
repz
aam
xchg
cld
ljmp
cmp
pop
repnz
adc
fidivs
push
mov
icebp
jle
cmpsl
sahf
lods
mov
mov
arpl
aad
test
stos
repz
ret
cmpsl
jne
shr
or
sti
add
mov
fs
xchg
mov
mov
pop
pusha
insb
jg
test
rcrb
stc
sbb
mov
jl
js
jne
dec
cli
inc
mov
push
xchg
insb
sub
cwtl
push
dec
test
test
push
jae
mov
sbb
repnz
sub
mul
and
sbb
popa
in
negl
shlb
repnz
in
jbe
movsb
ljmp
nop
mov
sub
jmp
pop
dec
sbb
int3
push
test
jo
push
fdivrs
sub
inc
mov
cs
push
test
lds
or
outsb
mov
jge
cli
mov
sbb
cmp
pop
lods
test
iret
roll
iret
popa
cli
adc
dec
hlt
sub
mov
sub
and
jnp
add
cmpsb
xor
or
popf
sub
lret
shlb
sti
stos
inc
and
xchg
cmpsb
in
cmp
add
dec
out
ret
and
lret
push
sarl
jecxz
lret
rol
mov
inc
nop
mov
fs
shrl
mov
rorb
fisubrs
xlat
ss
sbb
fmulp
inc
in
insl
inc
or
fnstcw
popf
mull
cwtl
mov
in
pop
lock
testl
adc
sub
sbbb
lods
jae
outsb
ja
aas
aad
push
jmp
rcr
mov
fidivrl
in
xchg
jl
and
cmpsl
dec
test
lock
insl
adcb
jnp,pn
outsl
mov
pop
ljmp
jp
scas
sub
bound
scas
loope
ret
or
xchg
out
daa
xor
xor
push
and
lahf
es
push
adc
lret
or
les
and
popf
cmp
lods
daa
cltd
fstpl
iret
pop
push
clc
jecxz
cmpsb
xor
sub
lret
lods
mov
je
and
pushf
call
mov
lds
mov
sub
mov
mov
add
xor
push
cmpl
cld
cmpb
lods
test
cmp
mov
rorb
or
mov
fimuls
pop
sahf
bound
jo
sub
fisubrl
pop
inc
lret
sbb
fcoml
jne
out
lods
add
stc
call
push
fistps
inc
pop
imul
inc
jge
add
mov
aaa
into
addr16
adc
sub
jp
scas
insb
std
add
out
in
xchg
sbb
sub
push
inc
bound
cmp
jbe
inc
cmc
mov
insl
jb
scas
popf
dec
aad
aam
or
jp
adc
aas
push
push
int
aas
cltd
inc
mov
negb
xor
inc
iret
pop
pop
jae
add
mov
shr
cli
push
test
push
jne
or
dec
pop
call
jge
jo
ret
shlb
sbb
mov
addr16
push
mov
lock
stc
xor
mov
add
frstor
sub
bound
cltd
cwtl
je
push
and
faddp
ljmp
pop
add
aam
frstor
pop
push
xchg
mov
cs
xorl
test
inc
cld
xchg
sub
xor
mov
hlt
jl
adc
iret
gs
jnp
fcomps
mov
das
add
cmpl
mov
push
dec
aaa
add
test
xor
mov
test
jg
mov
aam
xor
or
nop
jnp
xchg
rclb
call
jo
sub
and
outsb
sbb
mov
mov
cwtl
mov
pop
lods
into
pop
jo
cli
movsl
aam
enter
inc
test
adc
jle
out
int3
sub
dec
insb
stos
ror
lcall
leave
pop
das
mov
push
adc
cltd
push
or
adc
mov
cmpsl
push
push
ds
jmp
xor
hlt
loopne
jns,pn
sub
pop
pop
cmp
cmpsb
or
mov
andl
lret
cmpsl
and
ror
jb
pushf
adc
pop
fstpl
jo
pop
push
loop
cmpsb
and
mov
adc
popl
fs
add
xchg
stos
dec
xchg
int
jmp
cs
movd
push
pop
add
and
rorl
xchg
dec
inc
push
cli
xchg
inc
aad
xchg
cmpl
mov
test
lods
lret
push
mov
out
jmp
jns
outsl
and
popa
add
jg
icebp
push
jl
pop
call
push
fimuls
in
hlt
mov
loope
sub
and
sbbb
pop
inc
rorb
add
jno
push
dec
rcrl
mov
add
sbbl
leave
and
lret
popf
jmp
fildll
push
popl
xchg
aas
push
add
ja
jl
mov
push
std
jecxz
iret
and
pop
mov
adc
daa
data16
adc
cwtl
ss
xor
mov
pusha
pop
xchg
mov
insl
clc
clc
add
repz
repnz
xor
addl
mov
jge
mov
stc
fdivs
push
les
xor
push
in
into
test
or
dec
xlat
mov
mov
jp,pn
pop
mov
pusha
push
out
sbb
dec
pushf
je
shrl
iret
xchg
xchg
mov
or
pop
xlat
iret
std
pushf
cmc
scas
xchg
xchg
push
jb
rol
pop
rol
push
enter
hlt
mov
movsb
pop
fdivrs
mov
and
imul
fldl
adc
pop
mov
mov
and
andl
adc
sub
mov
sbb
cli
pop
scas
xchg
sahf
aad
push
jmp
aaa
das
mov
or
cmp
adc
mov
jns
and
les
inc
cmp
dec
dec
xlat
push
sbb
push
dec
push
aas
shll
mov
idivl
jmp
jns
jmp
and
mov
repz
and
outsb
cmpsb
notb
lret
fnsave
mov
sub
push
lcall
es
ror
js
sar
sub
bound
push
add
cltd
pop
pushf
adc
lock
bound
ja
jecxz
and
lods
mov
cmp
popf
xchg
stos
mov
sub
je
popa
dec
fildl
xor
in
mov
mov
inc
inc
aaa
lcall
mov
adc
and
jmp
adc
or
xchg
xor
mov
daa
mov
out
push
push
ss
rorb
xchg
inc
lods
les
dec
ljmp
sarb
fwait
or
or
dec
pop
orb
cmpsl
in
sti
loopne
cmovne
sahf
inc
test
lcall
push
or
mov
sub
jb
cs
jl
gs
adc
stc
push
mov
notb
xor
sub
imul
std
inc
dec
bound
imul
lea
adc
aad
push
xchg
ret
cli
mov
pop
xchg
sbb
xlat
mov
addr16
mov
negl
jnp
jno
mov
imul
mov
dec
pop
into
ret
imul
mov
movsb
jno
fwait
hlt
add
adc
mov
aaa
mov
out
mov
fists
dec
jecxz
fcmovnb
cmp
out
out
or
push
cld
sub
scas
inc
out
andl
out
lret
nop
rcl
jecxz
add
decl
and
pop
stos
adc
xchg
or
add
dec
lret
ret
push
push
push
push
xchg
lock
jae
dec
sub
aas
ljmp
adc
adc
mov
mov
xchg
out
and
stc
lcall
sub
jle
pop
divps
push
cltd
adc
mov
arpl
inc
fisttpll
out
pop
out
xor
add
push
xor
and
gs
adc
sub
inc
sbb
sbb
add
pop
js
pand
cmpsb
push
je
jo
push
in
or
mov
popa
or
pusha
xchg
inc
xor
adc
xchg
push
adc
mov
and
mov
push
pop
adc
imul
and
jp
mov
push
mov
cmp
add
mov
inc
adc
cmpsl
push
mov
or
es
fsubs
mov
pop
fwait
adc
mov
call
daa
push
dec
push
test
scas
inc
mov
mov
adc
mov
or
xchg
cli
js
inc
mov
jnp
out
pop
fwait
xchg
and
test
jns
clc
orb
in
repz
xor
xchg
pop
insb
movsb
or
sub
pop
in
jmp
cmp
xchg
fistpl
arpl
insb
sbb
pop
sbb
data16
push
inc
shl
and
push
stos
push
push
ljmp
push
out
cwtl
pop
test
mov
in
bound
gs
jno
outsl
repnz
cmpsl
mov
pop
sub
push
cmp
inc
pop
sub
push
into
lods
add
jns
mov
sbb
mov
js
fwait
gs
les
add
mov
jge
push
pusha
jmp
jb
push
outsl
cwtl
ror
jo
arpl
xor
dec
imul
sbb
repnz
push
xchg
loop
imul
insl
ret
iret
es
jg
pop
cmp
in
imul
sub
mov
mov
mov
in
xchg
xor
cmpb
xchg
pavgb
jecxz
out
sub
in
jecxz
rep
cmp
fdivrl
leave
push
aad
xor
xchg
inc
das
mov
out
add
testb
es
push
jl
test
push
inc
lret
add
mov
cli
jno
mov
dec
lret
mov
lahf
pop
xchg
aad
cmc
inc
lods
jo
ret
lock
and
lcall
push
and
in
pusha
out
cli
or
or
jle
sbb
jl
testb
push
cli
jo
adc
cmc
hlt
repz
xor
sbb
test
popf
out
or
sti
xchg
fsts
fwait
hlt
cmp
lret
fwait
xchg
cli
neg
cmp
repz
jne
sti
popa
push
loopne
arpl
mov
ja
leave
lret
dec
inc
movsl
xor
shrb
sub
cmp
cmp
xchg
dec
rorl
xchg
outsl
mov
lds
mov
jno
dec
es
mov
fdivrp
xchg
es
xchg
add
out
or
xor
or
mov
sarb
cmp
cmpsl
cmc
jno
enter
lret
and
cmpsb
iret
mov
mov
in
and
push
inc
gs
dec
pop
dec
mov
lahf
fsubrs
push
lret
dec
fwait
mov
sub
mull
jmp
push
lea
out
push
pop
imul
cld
mov
mov
jnp
es
clc
cltd
xchg
js
xchg
mov
xor
inc
add
les
jge
xor
push
cmc
xor
stc
cmc
xor
stc
mov
xor
call
xor
cmc
call
xor
test
xor
cmp
xorl
pusha
xor
test
xor
pusha
stc
xor
cmc
call
movl
jmp
jmp
add
movsl
add
inc
loopne
bound
aaa
inc
push
je
xchg
daa
xlat
mov
dec
ds
aad
sub
movsl
int
push
outsl
cltd
and
mov
jl
mov
mov
andb
push
mov
loope
dec
and
inc
cmpsl
inc
lahf
add
lcall
sub
gs
mov
daa
mov
lahf
fmulp
loopne
cmp
or
rolb
xchg
scas
mov
or
je
or
outsb
pop
dec
in
dec
testl
xchg
insl
mov
das
stc
dec
sbb
lods
mov
xchg
rolb
icebp
xchg
hlt
add
mov
hlt
clc
pop
lock
call
cwtl
push
mov
xor
mov
mov
popf
sub
les
sar
in
inc
and
fsubr
es
lods
jecxz
sbb
and
xchg
lahf
sub
ljmp
mov
xor
outsl
push
gs
adc
sbb
xor
iret
test
jge
cs
jno
push
cltd
scas
add
daa
inc
mov
in
add
pop
pop
orb
inc
add
xchg
and
sar
xchg
or
adc
jmp
or
inc
fwait
pop
idiv
xchg
push
mov
js
inc
sahf
out
xchg
and
ror
imul
iret
aas
pop
push
cli
jmp
insb
xor
dec
inc
out
loope
pushf
out
mov
aas
lret
xchg
mov
mov
xlat
push
xchg
lods
into
popf
pop
adc
das
test
pop
in
or
in
push
sbb
scas
mov
sub
xorl
xchg
mov
sub
jecxz
into
mov
inc
outsb
mov
out
pop
pop
add
lahf
fdiv
fwait
jge
dec
and
xchg
mov
dec
rclb
cmp
cs
mov
icebp
gs
jno
and
std
fdecstp
xor
push
jecxz
xor
sbb
sahf
sbb
mov
fnstenv
mov
repz
shl
gs
arpl
addl
adc
leave
or
int
lds
cmp
popf
shll
push
lret
pushf
mov
xchg
pop
inc
bound
pop
cmp
ds
lods
fsubrl
xchg
dec
mov
cmpsl
push
mov
cmp
jns
out
jae
lock
fstl
and
nop
shll
ret
cld
std
cli
out
movsl
or
jnp
jb
inc
push
and
outsl
jge
fcmovnb
dec
shrb
mov
fwait
pop
jge
jns
push
pop
rorl
popf
cmp
inc
jmp
inc
xlat
ss
fbstp
lods
inc
std
aad
xrelease
dec
int
cmp
into
push
inc
jns
sti
jns
mov
subl
bound
fistpl
and
dec
pop
scas
inc
and
lods
add
into
shll
or
sub
or
jp
mov
aaa
push
push
mov
iret
jle
daa
scas
push
inc
icebp
in
mov
jns
mov
xchg
rcll
cs
add
stc
nop
push
dec
movb
movw
mov
movl
push
pushf
pushf
lea
jmp
movl
pushf
mov
pushf
lea
jmp
movl
pusha
movb
push
movl
pushf
pushf
pushf
pushf
lea
jmp
mov
xchg
or
dec
out
jnp
pop
mov
jg
sbb
int3
movsb
mov
imul
sbb
in
pop
jp
pop
adc
push
repnz
jecxz
mov
pop
push
cmp
mov
xchg
xchg
lcall
sbb
hlt
or
pop
mov
js
cmp
lahf
xchg
addl
shl
cmp
sbb
push
or
lahf
mov
lcall
fnstenv
test
sub
fsubrs
movsl
adc
or
testl
test
les
aas
mov
mov
rcrl
or
mov
xor
orb
mov
cwtl
popa
sub
xchg
adc
stc
in
in
adc
fcoml
push
sub
testb
inc
xchg
adc
popa
in
lods
adc
sub
inc
xchg
xor
in
mov
ljmp
jb
dec
dec
dec
fldenv
inc
data16
mov
std
ss
imul
or
loope
cltd
sub
adc
lds
ja
rorl
and
xchg
nop
inc
inc
push
ja
and
lods
loop
les
add
or
mov
add
rcrl
add
add
lods
in
test
xchg
jecxz
pop
repnz
mov
mov
pop
cmpsl
jb
movsb
pop
lock
xchg
adc
xlat
iret
addr16
neg
xor
hlt
sahf
xchg
out
repnz
mov
add
lods
test
push
repnz
xor
jg
in
mov
fistps
mov
or
xchg
push
jnp
roll
add
push
or
xchg
jp
lods
fwait
clc
sbb
sub
push
negb
aad
cmp
pushf
in
push
dec
mov
inc
lcall
pop
sarb
and
std
cmc
lea
xlat
popa
in
jle
hlt
loop
dec
outsb
test
sub
sarb
sbb
mov
jb
xchg
lahf
mov
out
out
in
mov
adcl
aaa
inc
push
sbb
subl
jp
cwtl
xchg
rolb
push
push
out
jmp
bound
lret
sti
xchg
inc
mov
sbb
sub
inc
fidivs
jno
inc
fs
incb
pusha
push
addr16
add
mov
cmp
mov
loopne
adc
push
fldl
cmp
call
out
aam
adc
add
push
fiaddl
xchg
lea
fnstcw
insb
jl
das
js
push
or
mov
mov
and
mov
jmp
add
cmp
dec
ret
push
imul
adc
lea
sub
jns
xor
push
jg
mov
xchg
aas
mov
mov
mov
inc
shll
jnp
pushf
addl
shlb
inc
or
cltd
cmp
mov
lods
xor
sarb
into
pop
std
sbb
mov
add
dec
adc
or
ljmp
hlt
adcl
rclb
push
xchg
and
sbb
pop
push
mov
push
dec
jmp
cli
add
adc
lds
orl
mov
mov
push
cmp
and
fcmove
fnstcw
rcll
mov
and
lds
pusha
call
out
aad
ja
cmpsl
ss
in
mov
cmp
dec
cmp
xchg
stos
push
rcl
mov
xor
sarb
mov
or
jp
fdivrl
mov
jns
xchg
push
sub
into
sti
je
or
data16
gs
aam
sbb
ja
enter
cs
inc
mov
ss
cld
inc
scas
push
sub
rolb
pop
out
gs
test
push
mov
add
dec
or
push
testl
rclb
push
xor
push
ret
test
push
out
imul
scas
or
push
lods
inc
cmpsl
xor
cmp
push
lcall
mov
loopne
jge
mov
scas
dec
cmp
imul
psadbw
push
dec
jb
repz
jbe
jle
fcomps
stos
aaa
test
lret
push
jmp
ret
pop
lret
loopne,pt
and
mov
into
lds
mov
loope
addr16
or
addl
pop
mov
dec
add
jo
pop
repz
andl
fs
jnp
mov
mov
xchg
cmpb
stos
in
pop
cmp
jnp
inc
loope
dec
xor
mov
mov
push
xor
cli
imul
repz
adc
movsl
fsts
imul
sbb
xor
adc
dec
clc
sar
sti
inc
xchg
jo
xchg
out
push
ficoms
outsb
xchg
movsb
inc
mov
dec
addr16
mov
xchg
push
sub
mov
dec
cmpsb
xor
adc
cmp
lock
int3
mov
imul
outsb
push
mov
test
mov
sub
mov
sub
mov
and
div
xor
adc
inc
cmpsb
inc
ljmp
or
sub
dec
inc
jmp
imul
inc
ret
mov
jae
aam
adc
jg
inc
add
add
addr16
cmovg
fdivr
add
repnz
cli
js
iret
test
les
pop
in
test
pop
daa
inc
adc
cld
or
cwtl
xor
mov
aam
rorl
xchg
and
es
outsl
xor
call
xor
movsl
ljmp
cwtl
ds
stos
ret
sub
nop
mov
inc
out
sti
mov
mov
and
mov
adc
les
test
mov
aas
xlat
arpl
test
push
psrlq
cmpsl
test
lods
insb
pusha
mov
in
stos
dec
mov
dec
test
push
rcll
call
xchg
fisttpl
or
lcall
mov
mov
cld
pop
into
cmp
jecxz
mov
add
fistps
lcall
sbb
mov
jecxz
mov
xor
faddl
jl
or
cmpsb
fwait
jns
or
data16
ja
or
fbstp
enter
xor
pop
cmp
out
jne
sub
cmp
sub
or
iret
cmp
dec
fsub
fsubs
in
pop
cmp
js
mov
fs
call
sub
mov
dec
mov
add
iret
ret
mov
hlt
mov
scas
sti
scas
bound
scas
out
mov
mov
aas
jg
sbb
mov
fwait
jae
in
insb
add
sbb
pushf
sub
push
es
cmp
sbb
sahf
scas
pop
repnz
jbe
nop
mov
lahf
mov
int
jb
jmp
or
in
iret
sbb
stc
xchg
mov
adc
out
dec
mov
out
add
lock
add
daa
push
lods
inc
add
push
push
lea
jmp
pusha
pushf
popl
cmc
xor
cmp
jmp
bt
xor
pushf
xor
pusha
clc
xorl
call
pusha
movl
jmp
xor
cmc
stc
xorl
cmc
xor
pushf
cmc
xor
movw
cmp
xor
clc
jmp
pop
stc
cmp
mov
fcompl
loopne
and
fcom
inc
inc
insl
fdivrl
out
sub
xor
shll
and
adc
enter
cmpsb
and
xchg
in
sbb
ljmp
push
test
mov
divb
cs
into
bound
stc
cs
inc
pop
mov
fistpll
adc
ja
mov
xchg
stc
icebp
jp
ja
shl
sub
cmp
push
das
inc
cs
pop
in
xor
add
dec
mov
mov
push
adc
fsts
scas
jge
mov
xchg
xchg
enter
sbb
dec
in
jg
in
mov
dec
jo
push
lcall
dec
mov
push
push
mov
loope
stos
aaa
mov
mov
pop
push
in
jg
ror
pop
jg
add
sbb
cld
insl
sub
pop
stos
inc
mov
sbb
pop
dec
dec
enter
leave
mov
shlb
lock
sub
adc
xchg
mov
jle
cmp
bt
and
mov
stos
decb
popf
or
loope
add
andl
sbb
xchg
enter
cmp
cmp
daa
pop
lret
mov
sahf
pop
mov
loope
rcr
add
xchg
ficoms
and
mov
push
sarb
xor
inc
mov
jecxz
xchg
xchg
aad
xor
fimull
mov
ret
mov
ret
loop
rep
and
mov
sub
lcall
cmp
pop
cmpsb
in
dec
scas
loopne
mov
cmp
push
dec
leave
ds
loope
cld
sub
repz
pusha
push
or
cwtl
xor
add
dec
adc
shlb
push
xchg
mov
xor
mov
jnp
lods
fidivrl
outsl
inc
xor
insb
icebp
mov
dec
sbb
mov
lret
inc
cmp
add
daa
bound
call
dec
sub
test
test
in
mov
cmc
xor
push
ret
jge
lret
repnz
imul
jnp
push
aad
mov
adc
xlat
aaa
ja
jns
jo
ss
jne
dec
fucomi
hlt
arpl
sub
jmp
add
sub
int3
dec
sar
dec
jg
in
sub
adc
sbb
or
flds
sbb
push
aas
jg
test
jmp
outsb
or
mov
mov
outsl
xlat
mov
ljmp
cmp
shlb
pop
rcll
add
dec
in
add
mov
addr16
dec
fildl
mov
and
or
leave
ficoml
or
loopne
dec
lds
lods
stos
bound
lret
sbb
and
mov
icebp
scas
push
push
dec
add
xlat
std
sbb
adc
aas
jns
push
and
pop
add
sub
mov
fdivs
outsl
leave
fists
notl
mov
dec
and
push
loop
mov
cli
mov
inc
sti
push
dec
nop
jmp
in
and
nop
negl
inc
es
ret
notb
mov
pop
insb
mov
pop
sarl
std
sti
cli
mov
xor
ljmp
cmpb
pop
idiv
xchg
adc
in
push
cwtl
add
hlt
out
jmp
testb
pop
loopne
jo
pop
dec
imul
pop
dec
lock
pushf
adc
mov
call
popf
push
fistpl
cmp
pop
xor
inc
ror
in
int3
sub
test
jae
push
add
push
xchg
mov
jno
push
dec
pop
repnz
ss
push
pop
push
cli
mov
sbb
push
bound
aaa
inc
and
sbb
enter
mov
int3
sti
ja
mov
mov
arpl
push
hlt
push
in
std
add
dec
adc
push
xor
cmp
mov
mov
add
and
cld
mov
add
idivl
inc
push
test
add
inc
mov
mov
cmp
mov
or
or
push
xchg
inc
or
xchg
aas
dec
cld
addr16
fildll
or
cld
or
or
mov
arpl
loope
sbb
sbb
pusha
dec
icebp
repnz
jge
or
xchg
iret
push
sub
js
in
inc
ret
pop
test
es
push
mov
mov
inc
pop
dec
addl
outsb
pop
sbb
fidivs
cmc
dec
hlt
push
pop
inc
adc
dec
add
mov
mov
aaa
jecxz
mov
rcl
hlt
mov
push
mov
cmp
dec
in
and
shlb
std
jbe
pop
mov
test
mov
imul
mov
inc
or
sbb
inc
cmp
shlb
daa
imul
mov
cltd
xchg
dec
mov
pop
pop
xorl
lock
les
pop
popf
in
adc
or
sti
lret
fidivrs
mov
addr16
and
mov
pop
fcoml
inc
subl
cld
or
sub
adc
xor
sbb
dec
push
addr16
adc
test
lret
sub
jo
fldt
repnz
cmpb
cmp
fldenv
push
fs
push
dec
adc
xchg
loopne
inc
rcrl
push
ficomps
repz
mov
fisttps
sbb
orl
xor
pop
or
adc
shrl
mov
or
sub
cmp
or
mov
jb
mov
mov
ja
mov
cmp
mov
and
inc
xchg
les
stos
and
fsubrl
roll
int
add
push
int3
xchg
sbb
cmp
add
dec
push
adc
outsl
cltd
or
ds
sub
outsb
pushf
xor
sti
mov
sbb
dec
test
or
adc
iret
and
push
adc
sbb
pop
push
shll
or
lea
fs
out
xor
stc
call
and
das
imul
push
pop
enter
rolb
cmpsl
push
aas
mov
jmp
mov
ds
xor
mov
gs
pop
push
jmp
cmp
cltd
movsb
push
jbe
and
xchg
sbb
out
mov
pop
nop
aas
adc
int3
iret
xchg
leave
adc
mov
cmp
mov
mov
test
push
hlt
sbbb
call
adc
xor
jno
ds
insb
ljmp
lcall
or
cmp
sub
sub
mov
mov
adc
pop
jne
stos
or
jbe
mov
lret
and
ja
add
or
jl
pop
mov
push
lock
mov
adc
sbb
mov
les
dec
lret
int3
stos
pop
out
loopne
sti
mov
jp
stos
fldl
aad
push
jnp
and
and
mov
stos
xchg
ret
cwtl
nop
enter
test
rcrl
dec
mov
dec
fcmovb
xor
jmp
mov
orb
in
jmp
fs
xchg
lds
rclb
sub
icebp
mov
subl
inc
fisubrl
mov
enter
ss
add
xchg
or
fiaddl
fisttps
loope
mov
lock
lock
rorl
pop
cmp
out
aad
xor
push
xchg
push
mov
ret
jo
lret
xchg
cli
jecxz
cmp
xchg
lea
mov
in
mov
inc
mov
cltd
mov
imul
ljmp
pushl
pusha
dec
adc
addr16
cmp
and
je
or
jge
pusha
push
aad
push
sbb
push
in
addr16
lcall
add
shll
std
aad
inc
xor
mov
pop
xor
pop
lock
sahf
lret
movsl
inc
adc
std
fstps
fcom
mov
mov
mov
popa
cltd
mov
jno
fs
inc
and
jbe
int
jge
mov
mov
jmp
in
jl
push
push
mov
outsl
and
int3
push
jns
push
add
adcl
pop
cld
rorl
inc
out
add
out
loopne
adc
dec
ret
std
sbb
sub
repz
xor
adc
loopne
adc
ret
mov
inc
sub
pushf
pop
lods
in
xor
test
fwait
lret
pop
pop
aam
mov
adc
adc
imul
test
mov
sub
nop
cmp
push
cmp
mov
outsl
xchg
and
jae
sub
lcall
cmp
cli
ljmp
or
or
rclb
push
clc
xlat
cmp
cld
xor
sub
jl
mov
cltd
js
movsl
std
inc
lock
cld
jge
add
cltd
outsb
insl
mov
pop
shll
mov
pop
jp
scas
adc
jae
or
xor
mov
inc
stc
insb
icebp
adc
mov
xor
jge
add
iret
sub
pop
fldt
and
movntps
dec
std
dec
mov
in
lods
imul
cmp
fnstenv
xlat
and
daa
inc
mov
xor
xchg
insb
jne
sbb
lahf
inc
mov
ljmp
push
loop
das
addr16
lds
loop
rcll
pop
cmp
data16
in
shl
mov
mov
repnz
mov
mov
dec
mov
les
sbb
push
fisttpll
testb
lds
loopne
in
out
js
rorl
inc
and
pop
add
jns
in
in
jnp
add
cs
pop
sub
bound
aam
in
fadd
xchg
fwait
push
dec
andb
idivb
test
push
icebp
pop
fucomi
movsb
mov
sub
xorl
hlt
lret
pop
fchs
rorb
gs
jo
cmp
dec
xor
std
roll
xchg
call
mov
xlat
sub
pop
jae
mov
or
mov
sub
lahf
loop
mov
jp
pop
in
sub
and
fwait
cmp
vpsllq
aad
dec
scas
les
inc
pop
xchg
or
loope
ljmp
dec
out
lret
mov
mov
xor
add
ss
aas
aaa
out
cmp
je
xor
cli
xor
mov
fisttpl
out
aad
mov
dec
fcmovne
jle
inc
mov
mov
jb
cs
hlt
mov
jae
jnp
lds
xsavec
push
imul
in
or
loopne
frstor
sbb
jecxz
xchg
sbb
xchg
sti
xchg
inc
ds
push
jg
into
adc
pop
xchg
push
or
jg
movsl
push
xchg
cs
xor
ret
mov
xor
out
test
cmp
in
jmp
inc
pop
push
loope
hlt
pushf
imul
pop
aam
das
jl
into
stos
lahf
in
nop
jge
mov
int
cmpsb
pop
aaa
push
add
jl
sub
push
stos
xor
mov
outsl
inc
cmp
std
jge
mov
adc
fldcw
mov
mov
mov
out
and
sub
cwtl
imul
push
mov
pop
xlat
jp
mov
sar
hlt
std
test
stc
cmp
dec
pop
add
je
pop
inc
or
jo
out
xchg
push
outsl
jle
shrb
inc
push
arpl
out
lahf
sub
pop
push
add
hlt
and
xchg
int
js
addr16
and
stos
dec
ret
into
cld
aaa
fwait
mov
mov
inc
dec
mov
cmp
push
jae
hlt
push
sub
mov
or
add
call
imulb
pop
jb
pop
and
call
and
jl
fisttpl
and
pop
xchg
xor
xor
xor
icebp
bound
mov
xor
int3
imul
xchg
mov
in
xchg
in
add
push
inc
mov
int
divb
ljmp
es
daa
lahf
fucomip
aaa
xor
inc
fstl
sub
sub
pop
int3
repnz
lahf
inc
out
or
aad
cmpb
ret
add
and
push
fwait
xor
aam
decl
xchg
or
popl
gs
mov
add
inc
jo
ficoms
jnp
dec
fisubrl
pop
xchg
inc
into
stos
inc
movsl
stc
push
inc
sub
sub
jl
leave
lods
adc
dec
dec
stc
and
cmp
cmpb
xchg
and
xchg
jo
push
adc
xchg
xchg
sti
dec
out
cmp
mov
mov
cmp
lods
sub
mov
andl
sbb
jnp
add
loope
inc
cmp
jbe
add
xor
movl
xor
cmc
xorl
stc
xor
bt
xor
call
dec
pushl
pop
mov
push
das
outsb
ja
icebp
push
shll
xlat
outsl
sub
or
out
scas
fisttpll
xchg
pop
pop
mov
xchg
mov
divl
adc
push
jecxz
out
mov
lret
and
add
fnstenv
mov
mov
scas
enter
push
jle
mov
fisubs
stc
cmp
lock
mov
adc
repnz
or
fbstp
rcll
or
mov
js
bound
mov
pop
fwait
adc
mov
pop
inc
lret
inc
cmp
in
ja
lea
mov
or
lret
add
push
dec
hlt
inc
push
test
scas
or
mov
ret
lahf
jns
int
adc
mov
lds
pop
fldl
and
cmp
add
call
orb
ds
insb
and
jge
inc
fwait
ret
fiaddl
dec
push
jp
xor
popa
pushf
test
mov
int
int
mov
cmp
and
cltd
push
insl
sub
loopne
adc
cwtl
dec
dec
pop
out
loop
testb
add
ret
shrb
addr16
sbbb
call
enter
mov
incl
mov
mov
leave
sub
cmp
fistps
dec
nop
loope
int3
pop
or
loope
pop
sub
sbb
xorl
pop
cs
ja
addr16
cmp
or
mov
inc
je
scas
xor
inc
pushf
test
cmp
in
insb
test
fstps
xlat
cmp
cmpsl
push
outsb
daa
fidivrs
fimuls
cwtl
mov
adc
xor
add
or
push
loop
mov
sub
push
mov
xchg
or
pop
cmp
dec
jno
sar
jg
mov
mov
mov
and
adc
outsb
push
add
push
or
es
repnz
cmp
in
jnp
lahf
sub
in
dec
testl
mov
sub
cmpsl
adc
mov
jae
bound
inc
mov
or
sub
iret
and
dec
mov
mov
adc
push
xor
sub
test
xor
fprem1
and
stos
xchg
testb
cltd
fnstsw
cmp
pop
ret
inc
add
xchg
sub
inc
popf
xchg
dec
or
inc
ja
adc
mov
mov
es
jnp
pop
dec
xchg
inc
mov
lret
cmc
push
in
lcall
je
fadds
arpl
cmp
xchg
push
sbb
or
cwtl
pop
sub
scas
outsb
stos
inc
loop
xchg
mov
shll
pop
ret
cmc
mul
jns
jbe
into
xchg
loopne
xlat
sub
mov
mov
push
or
cmpsl
daa
mov
orb
add
push
lds
cmp
iret
test
ret
mov
add
jecxz,pn
push
xor
movb
lret
mov
pop
fs
and
loope
hlt
mov
sub
push
cwtl
mov
cmp
push
outsb
in
jo
and
ja
cld
pop
adcl
mov
push
nop
push
int
xor
pop
adc
mov
dec
adc
imul
lea
jnp
cmp
mov
mov
ret
fs
cltd
sbb
cwtl
and
lahf
inc
cwtl
nop
leave
js
fcomps
inc
push
ja
sub
popf
xchg
jne
and
jnp
dec
sbb
mov
scas
mov
mov
sub
inc
jb
lods
pop
addr16
leave
add
loopne
sbb
add
test
pushf
cwtl
shrl
fadds
adc
pop
cwtl
sahf
xchg
and
add
ja
inc
jmp
and
inc
xchg
mov
stc
push
mov
addl
inc
jbe
cmpsl
cmc
imul
xlat
movsl
hlt
mov
pop
xchg
sbb
push
sub
ret
adc
cmp
xlat
cs
mov
push
lahf
fwait
aam
int
repz
call
and
fprem1
and
negl
mull
push
mov
sub
xlat
out
mov
ja
jge
sahf
cmp
ficoml
jbe
pop
loop
mov
inc
sub
push
imul
and
ljmp
negl
out
jle
jge
ret
or
pop
mov
psrlq
stos
dec
mov
push
sarb
movsb
push
out
mov
fwait
pop
cwtl
out
inc
xor
xchg
in
das
in
and
sub
mov
jne
rclb
or
add
pop
add
and
jle
sub
mov
mov
push
icebp
sub
rol
mov
or
mov
lods
adcl
fisttpl
cmp
imull
fcoml
ja
nop
sahf
iret
sbb
sbb
jo
rclb
dec
in
popf
mov
add
test
popa
ret
lea
pusha
clc
add
inc
mov
lods
hlt
mov
add
out
and
rorb
push
push
stos
js
in
push
testl
inc
leave
dec
mov
stos
imul
or
aam
mov
in
lret
sub
xchg
lods
cmp
pusha
fwait
cli
lcall
push
mov
ss
or
pop
mov
xlat
out
inc
adc
scas
ljmp
cmp
pushf
aad
in
push
cmpsb
mov
pop
pop
mov
ds
add
cli
fidivl
add
jnp
jb
movsl
popf
and
pop
or
shl
sbb
into
sub
insb
add
dec
or
inc
sbb
insl
and
ja
xlat
stos
pop
mov
loop
fld
dec
add
dec
fwait
scas
int
or
sbb
in
fisubrl
mov
jmp
xchg
shr
inc
pop
mov
in
sub
mov
fcomps
push
cmpsl
and
jae
sti
data16
jo,pt
jb
data16
insl
add
push
pusha
clc
inc
pop
push
cmpsb
push
sbb
insl
push
clc
fsubs
fildll
fs
fistl
inc
stc
js
inc
dec
sub
shrl
mov
in
push
lcall
repz
xchg
mov
pop
mov
outsl
mov
add
adc
jae
pop
push
sub
pop
xor
jecxz
or
mov
test
jae
test
mov
jmp
cltd
inc
push
add
cmp
fisubrs
fsts
mov
lea
lds
adc
xor
dec
mov
hlt
sub
jnp
mov
and
cmp
cmc
jge,pn
sub
gs
jp
pop
sub
int
aad
cmc
jmp
xchg
out
stos
adc
xchg
sysexit
push
out
adc
inc
movsl
insl
minps
inc
dec
cmovno
scas
loop
pop
dec
add
mov
jae
lcall
mov
push
sbb
addr16
sbb
iret
mov
ret
sbb
jb
lods
imul
push
pop
sbb
mov
lcall
xchg
repnz
das
mov
test
call
mov
inc
enter
jnp
jl
mov
pop
divb
add
call
out
divl
mov
int
leave
mov
je
dec
data16
jae
test
ret
mov
mov
cmp
fcom
addl
add
lods
mov
fimuls
mov
fstpt
push
jecxz
push
enter
pop
dec
sub
popf
jb
outsb
lds
aaa
mov
adc
leave
leave
cmpsb
das
aaa
add
xchg
push
in
push
insl
add
pslld
lds
jp
call
push
or
pop
and
shl
std
fstpt
loopne
cmp
aam
les
jge
mov
cmp
sbb
test
xchg
daa
arpl
cmpsb
cwtl
imul
xchg
xchg
sub
xlat
and
leave
sbb
cmp
lret
mov
nop
mov
rcrl
mov
clc
mov
xor
daa
mov
movsb
add
push
popf
adc
sub
jmp
jg
pop
push
or
ss
aas
sbb
sub
test
adc
loop
in
jns
push
mov
shl
icebp
in
push
mov
xor
dec
cmp
mov
in
sbb
aam
and
into
lahf
loopne
ss
xchg
dec
ret
push
test
ja
inc
fstps
dec
fistpll
fstps
sub
mov
mov
ret
aas
clc
pop
dec
and
inc
cmpsl
dec
pop
lods
xchg
dec
les
je
lret
fnop
decl
push
push
in
xchg
dec
push
mov
stos
rcrl
xor
invd
xchg
out
lea
cld
mov
stos
inc
xchg
shl
add
jg
in
sub
push
cmpl
inc
negl
adc
arpl
in
lret
add
mov
add
xchg
pusha
and
ss
addr16
push
mov
xor
hlt
cld
or
notb
push
lahf
stos
or
js
push
ss
bnd
lods
in
xchg
cmp
roll
divb
fwait
scas
fstp
jb
pusha
int
mov
cwtl
testl
cwtl
cwtl
cmp
pop
sbb
and
addl
leave
sahf
loope
push
lcall
hlt
adc
icebp
xchg
int3
stos
sbb
inc
adc
clc
adc
loope
addr16
sahf
add
cwtl
mov
jae
mov
lods
or
add
sbb
inc
adc
add
xchg
divb
push
xchg
mov
fcomps
cmp
xchg
jb
js
data16
ret
shll
jecxz
mov
and
rcr
outsl
dec
pushf
add
adc
xchg
pop
and
ds
push
or
fcoml
jbe
mov
enter
sbb
jnp
gs
cmp
or
int3
dec
or
jb
sub
dec
add
pusha
add
adc
lret
pop
aas
push
ret
fdivrl
mov
pop
or
mov
loope,pt
xchg
mov
fisubrl
cmp
popa
push
jg
jnp
jnp
lcall
push
sbb
aad
sbbl
enter
pushf
sbb
das
jb
js
fcmovbe
out
mov
out
arpl
and
aam
xor
cmp
popa
outsl
add
mov
mov
mov
inc
push
shlb
pop
pop
inc
mov
fs
rclb
and
inc
dec
lods
jo
call
repnz
jp
push
sbb
xor
in
int
leave
call
sbb
inc
adc
clc
xchg
out
xor
dec
xor
int
ljmp
add
sbb
les
xchg
insb
or
addr16
dec
pop
cli
sbb
inc
jns
daa
lds
lods
xor
nop
leave
addl
pop
scas
insl
push
pusha
mov
fmulp
test
mov
inc
mov
lds
mov
orl
dec
add
js
inc
mov
stos
daa
loopne
aaa
xor
mov
or
data16
push
adc
clc
dec
insb
mov
out
xor
jl
push
into
loope
outsl
xchg
or
insl
dec
xchg
push
and
pop
or
xchg
and
sar
imul
xorb
xchg
push
mov
dec
popf
cltd
mov
pop
xchg
mov
xor
xlat
inc
lds
fcompl
out
pop
mov
sub
dec
aaa
sbb
imul
adc
movsl
nop
aam
popa
or
cmpsb
fcompl
fsubs
ds
aad
xchg
xor
ret
jns
test
or
jae
jl
adcb
aas
sub
sub
pop
movsl
push
push
lods
inc
sti
and
adc
push
adc
xor
xchg
roll
rclb
pusha
outsl
sub
dec
out
pop
ret
xor
jp
add
and
sub
jecxz
rorb
xchg
dec
in
dec
cmpl
dec
cmpsl
dec
rcl
jae
leave
shll
stos
adc
cmc
pop
dec
add
lds
xchg
outsl
pop
imul
pop
adcl
ret
jmp
xor
shrb
rclb
jg
js
hlt
or
icebp
inc
add
je
push
aaa
nopl
jecxz
sub
stos
xorl
test
pop
sub
clc
xlat
lods
out
sub
inc
fcomi
shll
test
adc
lahf
inc
xchg
xchg
sub
mov
jg
add
mov
icebp
push
out
dec
cmpsl
cld
mov
add
jo
stos
push
sbb
push
jmp
xor
dec
test
pop
mov
mov
pop
adc
sarb
and
jo
insl
or
lret
testb
lret
push
frstor
test
mov
mov
adc
rcll
jne
fcoms
int
pop
shlb
add
jnp
adc
jae
push
and
das
inc
mov
inc
stos
dec
inc
xchg
test
push
xor
mov
add
lods
popa
iret
test
int
adc
dec
repnz
test
test
jl
adc
and
jmp
and
mov
jns
jbe
mov
aad
pop
shrb
pop
mov
subl
notl
mov
sti
test
xchg
jo
mov
js
and
xchg
sbb
scas
xor
js
mov
and
pop
mov
in
dec
sub
push
mov
cmp
cmpsb
fcmove
push
test
popf
mov
cmc
xchg
jae
mov
repnz
jle
rclb
repz
andl
push
adc
cmp
adc
xor
xchg
adc
push
addb
test
mov
fisubl
add
push
xchg
das
insl
int3
dec
or
inc
adc
cmp
jl
dec
movl
mov
incl
adc
adc
sbb
mov
adc
and
lds
jmp
xlat
jecxz
ss
push
push
aad
mov
push
mov
pushf
in
test
outsl
dec
aaa
loop
dec
cld
dec
dec
inc
shr
dec
je
aam
inc
pop
js
mov
pop
outsb
adc
in
addr16
sbb
popf
adc
jl
out
dec
dec
je
mov
and
dec
bound
fisttps
stc
lret
mov
aaa
sub
cmp
mov
incl
jle
loope
and
adc
shr
sub
xchg
push
mov
loopne
xchg
adc
jecxz
and
push
out
sub
adc
or
fadds
loopne
and
addr16
test
mov
or
mov
popf
push
aad
jb
mov
mov
addl
sbb
inc
rorb
push
shll
inc
jmp
mov
lahf
and
pop
mov
lret
mov
push
test
add
or
jecxz
or
lods
fcompl
push
int
arpl
mov
mov
cs
shrl
and
daa
lock
stos
pop
pop
aam
int
js
das
sub
roll
jo
std
mov
sbb
xchg
adc
pop
mov
nop
sbb
fmulp
dec
xlat
pop
push
xchg
pop
inc
cmp
aas
mov
push
in
and
ss
add
push
out
and
roll
jnp
pop
xchg
push
hlt
outsl
xchg
sbb
jbe
jge
mov
icebp
adc
cli
setle
mov
mov
push
mov
pop
mov
pop
xchg
fiaddl
adc
xchg
xor
add
and
pop
add
xor
inc
idivl
dec
inc
daa
jae
or
ret
push
sub
or
rcrb
pop
push
push
add
shrl
cmc
adc
xor
lret
or
fwait
data16
ret
push
dec
jne
mov
ret
xlat
or
mov
cltd
mov
sub
stc
ficoml
pop
mov
gs
andb
jp
das
jge
sub
scas
cmp
ljmp
scas
test
repnz
xchg
bound
leave
adc
sbb
into
push
std
daa
pop
aad
arpl
push
out
jge
aas
data16
in
jg
insl
es
or
mov
pop
mov
sub
cmp
cmc
cs
sahf
mov
aaa
sub
xor
pop
ret
fcoml
insl
add
xchg
pop
push
adc
mov
mov
and
movl
cwtl
mov
loop
sbb
add
sbb
aas
pop
jne
jecxz
fistps
xchg
jae
popf
xchg
jmp
pop
sysret
rorb
sub
mov
jecxz
in
in
mov
inc
jno
cmpsb
loopne
and
cmp
stos
out
shll
aas
mov
or
adc
mov
push
mov
dec
pushf
into
data16
inc
test
or
mov
test
dec
mov
push
mov
adc
xor
shr
out
roll
lods
int3
lods
or
loop
pop
mov
add
ljmp
jno
or
xlat
inc
clc
stos
xchg
sbb
and
and
aaa
adc
popa
pop
pop
adc
les
pop
insl
inc
lret
add
outsb
imul
loopne
movsb
mov
pop
rep
sub
mov
std
xchg
in
std
mov
scas
fstp
adc
dec
mull
mov
cmp
stc
sub
push
bound
cmpb
mov
sub
add
shl
leave
daa
lahf
rorb
movsb
bound
std
out
enter
popa
push
icebp
iret
leave
inc
pop
jecxz
pop
pop
xchg
sub
push
and
bound
test
pop
xchg
ja
pop
sbb
push
ds
jmp
enter
sbb
push
push
into
pushf
fildll
sub
or
repz
xor
dec
lahf
xchg
shlb
je
enterw
dec
clc
xchg
or
jbe
push
and
push
or
jp
inc
xor
aad
shlb
leave
sbb
mov
sub
testb
push
mov
mov
xor
sbb
jne
cmp
lret
faddp
push
xchg
test
push
cli
adc
mov
push
stos
cmp
inc
mov
repz
jae
dec
lahf
rcrl
cmpl
aas
ljmp
jmp
imul
sub
sub
jp
xorl
in
pusha
dec
pop
mov
lret
xlat
mov
or
xchg
lret
adc
out
repz
sub
push
dec
pop
lock
and
jp
hlt
lock
mov
push
vandps
call
aas
shlb
mov
mov
sbb
adc
in
mov
clc
inc
gs
pop
push
or
mov
jae
add
pop
aad
jns
ret
jl
cmpsb
mov
xchg
add
pop
jecxz
test
jl
xlat
cmp
in
add
mov
pop
insl
std
fadd
dec
adcl
repnz
out
insb
es
dec
sarl
push
lds
and
test
xorb
jns
adc
push
in
sub
push
mov
and
daa
jle
ss
insb
and
fldenv
xchg
outsl
jo
lods
sbb
mov
fidivl
sub
sbb
add
inc
rcrb
jne
rolb
mov
dec
mov
das
in
cmc
xchg
popa
pop
xchg
in
cmpl
stc
jmp
cltd
cmc
test
lret
aam
sbb
and
xor
ds
mov
pop
mov
cmp
dec
loop
xchg
xor
sub
loopne
rcll
insl
cmp
add
mov
inc
sub
add
push
push
repz
shrl
ss
lea
leave
in
add
sbb
jo
inc
mov
xor
and
int
ret
push
mov
push
outsb
mov
adc
adc
ds
in
cld
sbb
mov
outsl
jg
mov
jmp
sbb
std
mov
xchg
daa
pusha
mov
mov
pop
sahf
movsb
fdivrs
push
cmp
lcall
adc
mov
ds
or
inc
into
add
lret
repz
sbb
or
rorb
mov
movsl
repz
adc
rcrb
mov
push
mov
repnz
pop
imul
push
loop
push
test
cld
loop
add
sbb
iret
int
sub
or
add
push
enter
cmp
fs
jbe
pushf
movl
push
push
movl
pushf
push
lea
jmp
movl
pushl
lea
jmp
call
xorl
jmp
pushf
popl
clc
xor
pushf
cmc
xor
stc
bt
xor
movb
xorl
stc
push
xor
pushf
stc
xor
cmc
xor
movb
cmc
xor
call
pushf
jmp
pushl
popf
pusha
pushl
ret
pushf
pushf
popl
jmp
movsb
fstpt
pop
cld
jge
fistps
jg
fsubrs
sub
in
int3
add
and
inc
fwait
inc
fs
jb
pop
push
shll
fidivrs
fcoml
mov
aaa
add
lds
pop
add
lcall
push
jg
hlt
ret
divb
dec
enter
mov
sub
inc
mov
xchg
test
lcall
nop
shrl
add
shlb
xchg
in
mov
mov
movl
sbb
adc
adc
adc
in
add
xor
xchg
sub
add
sahf
push
mov
shl
cmpsb
sub
pop
sub
cld
fisubrs
cs
xchg
sub
mov
inc
cli
lret
inc
data16
and
push
inc
cmp
cmp
cmc
cmpl
std
stc
xor
inc
add
or
in
imul
xor
mov
gs
repnz
das
stos
movsb
jb
push
jmp
mov
hlt
push
out
mov
jae
fs
dec
push
fstps
xlat
adc
mov
jbe
movl
mov
adc
adc
leave
jne
sbbl
push
out
or
js
cwtl
iret
inc
inc
push
mov
shll
and
jb
pop
or
or
push
dec
mov
jp
repnz
mov
cld
out
ljmp
idivb
inc
push
shll
push
push
scas
faddl
xchg
loope
test
lods
xchg
pop
jg
jae
inc
mov
pop
dec
mov
add
push
jne
int
adc
jecxz
test
pushf
sub
and
xchg
cmp
insl
test
mov
lret
fistps
inc
xchg
imull
lods
orb
cmp
lods
mov
fwait
jno
sbb
dec
movsb
out
sarl
mov
fs
shrl
xor
lds
cld
pop
cmpsb
andb
lds
push
xchg
cmp
fldenv
xlat
cmp
inc
jecxz
enter
std
cmc
lea
sub
sub
clc
mov
lea
xchg
or
sub
sbb
jp
or
add
int
fcomps
daa
push
add
push
or
push
xchg
jns
cmp
inc
dec
mov
cmpsb
cli
adc
lret
xor
in
psllw
pop
fdivs
ret
push
popf
int3
int
inc
sbb
mov
mov
push
js
lods
xchg
jae
arpl
lods
jl
jno
mov
sti
sub
rclb
cli
inc
arpl
xchg
aad
cltd
sbb
push
or
push
outsl
clc
leave
sub
inc
adc
jne
ljmp
cmc
insb
mov
sbb
cmc
and
fbld
sbb
push
cltd
and
xor
pushf
int3
push
insb
insb
fldenv
fcompl
pop
xlat
add
out
jnp
stos
push
xlat
push
fdivs
sbb
dec
cli
mov
out
les
ds
addr16
inc
xor
push
aas
inc
outsb
jmp
sbb
cs
dec
mov
out
add
or
push
popf
loopne
mov
dec
insb
in
dec
int
hlt
stos
lret
xor
pop
ret
jno
outsb
jmp
and
jne
push
iret
data16
adcl
pop
sbb
jp
test
xchg
adc
jno
jp
lret
sub
and
icebp
sbb
sbb
inc
xchg
pop
push
sbb
lcall
sbb
xchg
pushf
jnp
cwtl
out
hlt
cmp
or
aam
jb
ret
inc
sbb
and
mov
aas
out
pop
xchg
lret
cmc
shlb
mov
lret
jno
inc
cmp
or
sub
idivl
adc
insl
mov
adcl
call
fsubs
push
jnp
stc
test
inc
lds
mov
push
in
scas
fistpl
or
scas
pushf
sbb
lock
arpl
movsb
pop
sbbl
xchg
or
stos
lcall
xchg
repz
inc
push
int
das
cmp
sub
movsb
jge
lret
ja
xchg
fldenv
rolb
sub
aad
lret
test
mov
repz
mov
push
adc
xchg
or
shl
adc
inc
jno
adc
xchg
jns
jne
pop
dec
fbstp
pop
in
je
imul
sbb
lcall
das
pop
or
imul
jae
sub
mov
dec
ret
push
ljmp
push
inc
pop
and
sbb
aad
mov
dec
mov
inc
mov
xor
sub
inc
jae
mov
mov
clc
dec
iret
out
inc
jmp
mov
sub
test
mov
faddl
xchg
or
xlat
ret
sbb
jne
mov
mov
dec
xchg
xchg
mov
jb
in
fsubs
stos
clc
xor
jo
sbb
or
aam
xor
xchg
out
xor
inc
adc
xchg
aad
adc
sub
xchg
xchg
scas
mov
sti
fsubr
insb
xchg
and
es
inc
cmp
inc
cs
rorb
mov
pusha
jle
add
push
mov
shrb
adc
xchg
jbe
shll
loopne
inc
lret
orl
jge
movsb
out
rolb
xchg
pop
sub
cld
xchg
faddl
int3
mov
mov
dec
dec
sbb
add
movl
and
pop
push
dec
stc
jo
pop
pop
pop
aad
sbb
or
or
sub
pushf
push
cmp
int
xor
and
cmpl
inc
xor
or
ljmp
add
mov
icebp
nop
das
popf
add
push
nop
loop
call
pusha
lea
js
push
jmp
xor
clc
clc
xor
cld
pusha
pushl
popf
push
pushl
ret
pushf
push
call
jmp
push
mov
fs
mov
pop
xchg
mov
mov
cmp
sub
pushf
xchg
shl
and
cmc
insb
cmp
sbb
lret
lahf
mov
sahf
inc
ret
mov
add
inc
lcall
lcall
mov
mov
pop
ret
into
push
adc
dec
insb
movsl
lods
lds
shlb
sub
xchg
adc
ds
dec
aad
cmpsl
mov
lods
add
call
fldenv
stc
inc
out
jp
in
data16
ljmp
xchg
bound
in
movl
lock
or
shl
fnstenv
jne
push
test
jp
sbb
add
cs
gs
pop
sub
cmp
sbb
push
sarb
shl
jp
aad
les
adc
add
mov
movsb
sti
inc
and
and
sbb
adc
fprem1
sub
xchg
or
cmc
cmp
sbb
lret
pop
xchg
mov
jmp
and
cmp
out
test
mov
loope
jl
stos
aas
xchg
dec
xchg
movsl
mov
or
dec
or
add
cmpsb
fidivrs
out
inc
outsl
push
stos
mov
mov
inc
mov
test
adc
and
pushf
sub
stos
mov
jecxz
xchg
fnstenv
cmc
dec
ret
mov
out
mov
inc
add
xchg
jge
sahf
jmp
cld
popf
lcall
add
into
rcrb
dec
sub
cmp
xchg
mov
mov
fcoml
jle
mov
mov
sub
mov
sub
mov
mov
lret
cltd
inc
lds
out
pop
cmp
xchg
insl
lcall
sub
push
stc
jp
fs
adc
pop
pop
cs
movb
inc
mov
or
fcompl
sbb
xor
mov
xor
sarb
rol
cltd
pop
and
in
and
mov
lret
movsb
ret
ja
loope
sbb
sbb
pop
xchg
dec
popf
in
sbb
add
lods
or
je
dec
ljmp
test
cmp
imul
and
enter
insl
mov
test
push
stos
icebp
lret
ja
xchg
adc
lea
ss
mov
outsb
push
testl
int3
arpl
cwtl
mov
enter
add
mov
out
inc
mov
fists
add
xlat
cmp
fbstp
push
sbb
mov
add
jbe
fistpl
outsb
repz
ffree
xor
int3
das
fidivs
pop
negl
fisttpl
cmpsb
scas
addr16
cmp
sub
add
out
stos
jo
jb
ljmp
adc
ss
mov
movsl
mov
int
inc
ja
lea
jecxz
and
stos
jle
adc
xchg
jp
mov
outsl
mov
aam
cs
xor
daa
gs
lahf
sub
imul
into
push
lret
imul
mov
clc
stc
or
fiadds
or
inc
adc
lods
test
int
cmc
std
cmp
outsl
lcall
aad
add
xchg
cmp
jns
pushf
sbb
lock
dec
xor
nop
aas
cmp
mov
pop
es
ficomps
cltd
xchg
push
mov
lds
or
jbe
fistps
or
scas
ret
push
pop
jno
xchg
imul
push
scas
jge
into
push
inc
hlt
and
ds
jmp
decl
lods
fildll
repnz
stos
roll
jge
xor
inc
dec
and
ja
jmp
orb
pop
repnz
sub
fcompl
jl
dec
mov
sbb
pusha
sbb
add
aam
mov
mov
imul
push
aas
rcll
lret
je
js
cmp
jb
sbb
dec
cmc
fldenv
mov
sub
cwtl
ja
push
mov
xchg
lods
and
mov
sti
dec
push
mov
je
sub
lret
cmp
pop
xchg
dec
and
push
or
jle
bound
popa
add
ficomps
inc
or
stos
sti
ret
pop
int
nop
daa
shrb
int3
mov
xchg
subl
and
pop
mov
fidivs
jbe
ret
pop
mov
int3
sub
lret
dec
dec
cli
sbb
push
in
cmc
mov
xor
ret
pop
out
add
fdivs
fisttpll
outsl
daa
cs
xor
mov
xor
xor
ds
dec
in
xchg
loopne
adc
mov
and
pushf
lret
leave
or
cmc
mov
mov
pushf
lahf
add
arpl
pop
fists
dec
clc
cmp
int3
xchg
out
daa
stc
push
outsb
sti
adc
xchg
fnstcw
mov
out
push
and
xor
ret
xchg
into
mov
repz
js
mov
leave
push
adc
stos
mov
sub
arpl
stos
into
add
lret
fdivl
jl
jmp
loope
mov
add
push
fwait
xlat
push
xor
ja
mov
ss
cmp
mov
ss
out
cwtl
out
pushf
lret
add
mov
cmpsb
jne
lahf
pop
jae
stc
in
test
daa
push
and
add
adc
mov
imul
inc
pop
push
and
mov
and
xor
test
shl
std
sub
popa
out
and
add
inc
push
jle
xor
and
pop
loop
mov
gs
sbb
aaa
ds
dec
push
outsb
pop
cld
repz
test
or
mov
insl
lahf
in
pop
sub
sub
adc
pop
push
add
and
outsb
or
jo
mov
or
movsl
mov
stos
add
daa
mov
pusha
xchg
and
stos
mov
inc
sub
dec
lret
outsb
dec
push
idivb
imul
addl
leave
sti
pop
loope
rcll
cltd
cs
jne
movsb
cwtl
in
daa
pop
pop
adc
lret
and
icebp
mul
dec
xor
lods
mov
mov
dec
mov
test
push
jge
adc
inc
add
ljmp
lret
push
or
arpl
cmp
jns
lret
sub
outsb
mov
mov
shll
cmp
add
mov
jnp
enter
push
pop
mov
xor
enter
test
adc
xor
fisubl
rolb
bound
clc
je
sti
aas
xchg
add
pop
insl
push
mov
stc
inc
xor
out
adc
or
adc
loope
cmp
mov
inc
push
mov
push
jp
dec
push
inc
insl
fwait
pop
lock
loope
sbb
andb
and
ffreep
aaa
outsl
jnp
dec
xor
fwait
hlt
xchg
je
mov
push
popa
fwait
pushl
mov
stos
pop
inc
dec
loope
fmulp
outsb
in
subb
mov
pop
xor
sub
xchg
jae
bound
or
std
pop
inc
push
lds
inc
stc
or
xchg
cmp
sub
jae
add
or
lcall
jmp
fistl
push
push
bnd
mov
repnz
test
movsl
or
loope
xchg
dec
rcrb
xor
inc
fdivs
inc
shl
push
lods
xchg
js
outsl
fstpl
shrl
test
inc
jbe
bound
popf
int3
add
sub
add
cmp
lock
sub
ja
les
les
rcrb
and
inc
mov
push
jne
ret
lods
insb
test
push
or
and
lret
xor
inc
push
in
xchg
fdivrl
data16
dec
mov
shrb
movsl
add
mov
mov
shll
mov
cmp
aas
dec
fistps
stos
sbb
cmp
lret
fdivr
jno
daa
sahf
jl
les
das
imul
ret
pop
inc
enter
mov
add
nop
jecxz
sbb
or
andb
loope
jecxz
mov
jmp
movsl
push
out
xor
or
or
imul
bound
mov
in
jns
sub
push
sbb
test
shl
xorl
movsb
bnd
stc
xchg
pop
fistl
jge
rcrb
nop
pushf
sti
lcall
pop
pushf
push
ss
insb
inc
aam
or
mov
imul
hlt
push
or
mov
xchg
add
out
es
rolb
aaa
sbb
outsb
aaa
das
call
add
jo
mov
mov
out
add
push
ja
lods
xor
push
xacquire
cmp
pop
cmp
stos
push
test
cmc
mov
ss
sbb
ds
xchg
iret
mov
add
add
mov
in
mov
inc
popa
aam
in
push
sub
clc
scas
es
dec
bound
cli
cmp
dec
mov
jl
fildll
int3
fwait
jp
clc
neg
xchg
dec
pop
sub
xor
popf
outsl
and
rcrl
out
divl
adc
sbb
pop
sbb
rorb
xchg
insl
divb
xor
stos
es
xchg
inc
sbb
les
out
call
aam
aam
aam
mov
leave
lcall
loopne
outsl
enter
jns
movsl
popf
push
xchg
jne
loop
and
dec
lock
hlt
sub
mov
loope
pop
in
mov
or
push
pinsrw
pop
movb
jnp
pop
je
add
cmp
adc
push
adc
mov
ss
ja
fcoms
adc
jb
loopne
ret
sti
imul
jo
pop
into
lret
fdivl
pushf
sbb
xchg
jg
pop
add
xor
loope
in
call
in
cmp
aas
iret
add
or
fdivs
adc
push
adc
gs
outsl
test
lock
or
bound
cmp
xchg
mov
cmp
cmp
test
and
in
push
jmp
xor
mov
fisubl
mov
pusha
aas
fcom
inc
imul
mov
lock
mov
ja
movsl
adc
shl
scas
popf
lahf
inc
stc
xchg
mov
cwtl
shrl
aad
xor
jge
jne
jbe
cltd
mov
push
inc
dec
xchg
loope
sub
outsb
cli
ljmp
movups
dec
jne
jns
add
add
hlt
aas
and
lahf
cmp
mov
mov
ljmp
mov
mov
push
fmull
or
sub
aad
dec
xchg
lds
mov
xchg
sbb
pop
xor
jo
xorb
nop
outsl
cmpsl
int
movsl
adc
inc
scas
sub
repnz
cmpsl
adc
jae
scas
movsl
and
movsb
push
popa
mov
mov
movsl
shr
mov
clc
outsl
ja
rorb
xor
arpl
pop
popf
subl
push
cmp
aaa
and
scas
pop
dec
ss
mov
fimuls
outsl
adc
cmp
jmp
dec
out
xchg
pusha
mov
test
jns
scas
shr
sbb
aas
aam
and
cwtl
xor
xchg
and
out
aaa
xchg
fiadds
and
sub
push
jns
add
or
dec
test
or
mov
insl
fwait
lods
loopne
push
xchg
ljmp
mov
sbb
push
dec
fwait
js
xor
ss
mov
addl
lods
adc
pop
loope
xchg
int
out
popf
sub
pop
lret
or
jp
fwait
sbb
cmp
enter
xchg
mov
add
sbb
jecxz
into
xchg
push
pusha
cmc
sub
fldcw
xchg
movsb
inc
mov
jg
andl
fidivrs
inc
push
sarl
xlat
dec
pop
es
cmpsl
ret
fisubl
cld
push
xor
rorb
testb
fisttpl
insl
test
or
movsb
xor
inc
mov
repnz
mov
or
outsl
cmpsl
adc
or
mov
xchg
push
addr16
adc
jle
cmc
sbb
lahf
xchg
scas
in
fiaddl
neg
das
xor
rcrb
cmpsl
pop
jl
jbe
or
push
fidivrl
rorb
cmp
std
and
jp
call
das
stos
bound
jg
ret
jno
cmp
or
cmp
mov
in
inc
loope
jbe
adc
cli
nop
push
push
push
mov
arpl
sbb
push
xchg
arpl
inc
mov
pop
xchg
das
sbb
scas
rorb
aaa
sbb
imul
fsts
xor
pop
add
addr16
loop
in
push
or
dec
movsl
jnp
daa
push
or
xchg
adc
xchg
and
pushf
cwtl
sarb
fwait
pop
hlt
iret
adc
cmp
dec
xor
ss
sbb
dec
mov
jno
daa
pop
and
rorb
loopne
xchg
inc
ja
add
push
lock
fnsave
lds
or
sarb
jnp
enter
add
addr16
scas
lret
mov
push
fwait
mov
jne
sub
dec
rcrb
cmp
pop
adc
dec
ja
lods
repnz
mov
loop
lods
add
mov
bound
sbb
out
jg
out
jbe
mov
mov
addr16
pop
adc
data16
jo
dec
dec
pop
icebp
dec
mov
jbe
sbb
popa
pop
pusha
repz
lahf
lock
rclb
lret
int
push
out
cmp
add
cmpsl
aaa
sahf
pop
ret
addl
movsl
cs
mov
and
ret
sbb
leave
fmul
das
stos
xor
xor
pop
repz
loope
jns
xlat
mov
pop
lret
push
or
jmp
sbb
fisttpl
xor
scas
dec
aam
int3
rolb
fildll
andb
stos
in
clc
movsl
ljmp
data16
xchg
inc
sarl
or
xor
test
and
dec
mov
push
jp
into
adc
aam
sahf
push
cmc
fisubrl
icebp
shrb
dec
inc
mov
out
stos
outsl
dec
or
data16
loopne
stos
lock
xor
jle
mov
aas
sbb
nop
or
sbbb
inc
mov
ss
and
lahf
add
push
xor
jmp
pushf
jne
sbb
cs
aam
imull
mov
mul
mov
je
cmpsb
jl
xor
fistl
movsb
push
mov
cli
nop
inc
aaa
jbe
outsl
fisubrs
daa
imul
xchg
add
fldenv
fdivs
loopne
sarb
mov
ret
leave
push
and
int
inc
push
rorb
adc
inc
ss
push
inc
mov
inc
push
std
sbb
mov
jecxz
rcll
rclb
stos
push
fdivs
adc
insl
imul
test
repnz
popa
cltd
cwtl
push
jp
js
or
mov
jnp
push
dec
mov
fadds
arpl
lahf
push
pop
and
out
xrelease
pop
cmpsb
add
mov
bound
call
jo
jne
bnd
test
pushf
adc
dec
aaa
mov
lea
or
cli
xor
popf
lds
pop
inc
ficoms
lods
rorl
xlat
mov
loopne
ret
iret
bound
mov
xchg
int
push
inc
dec
fisttps
shll
mov
enter
and
adc
xchg
adc
fsts
dec
imul
mov
sbb
out
mov
lcall
fnstsw
jb
mov
les
inc
and
daa
add
fists
je
or
inc
and
sbb
push
and
add
mov
les
inc
incl
inc
cmc
call
test
aad
nop
imul
shll
add
pop
sub
and
inc
adc
test
cmpsb
xchg
or
xchg
dec
push
popf
push
jae
xor
fldcw
popl
pusha
addr16
test
xchg
and
lret
adc
sub
xchg
push
rorb
xor
sub
shl
jb
gs
int
packuswb
lods
and
outsl
jl
scas
or
aaa
sub
and
test
pop
mov
mov
js
hlt
pop
inc
icebp
and
adc
ficoms
stos
imul
push
and
outsl
bound
lret
push
dec
pop
or
pop
push
in
push
adc
cmp
xchg
dec
les
inc
cld
pop
shll
outsb
dec
and
inc
testb
jo
out
aad
into
dec
js
loope
out
call
mov
and
push
xor
lods
mov
ljmp
je
test
nop
loopne
sbb
std
xchg
outsl
inc
push
gs
cltd
ja
lea
xchg
pop
cmpb
iret
les
mov
pop
out
adc
movsb
push
repnz
iret
pop
movsl
jp
pop
stc
inc
push
int
int3
adc
enter
xor
imul
add
inc
mov
loope
push
sub
imul
lcall
push
adc
adc
divl
mov
lahf
mov
fcompl
add
mov
int3
nopl
ss
movsl
test
lods
xchg
and
scas
dec
sub
in
out
cmpsl
fidivrs
and
adcl
pushf
insb
repz
data16
in
jmp
cli
cmp
gs
pop
cmpsb
push
mov
pop
out
in
loop
add
jmp
xchg
sub
pop
cmp
push
or
jno
fmull
jns
lcall
xchg
mov
and
fcoms
rorl
lods
lcall
mov
mov
subb
mov
icebp
xor
loopne,pt
add
icebp
mov
dec
mov
mov
call
push
pop
add
popl
xor
in
stos
dec
xchg
inc
xor
mov
push
cmc
xsha256
cmpsb
rorb
cltd
je
jg
mov
pop
mov
sub
rcrb
xchg
icebp
imul
test
cmp
cmp
mov
mov
jb
push
mov
in
cld
xchg
rorl
lds
in
movsl
push
leave
pusha
jmp
stos
lahf
pop
mov
push
cmc
inc
pop
movsb
inc
adc
dec
and
lret
in
inc
push
cmp
inc
xchg
mov
push
enter
push
xchg
aas
movsl
push
push
cs
stos
fcoms
mov
bound
in
fwait
outsb
fwait
aad
and
mov
shll
addl
xchg
and
cld
cmc
or
insb
hlt
jmp
sbb
aad
and
sub
fists
cltd
lcall
daa
mov
jbe
aam
mov
push
mov
pusha
inc
int3
sub
call
jns
lret
lods
jg
pop
lods
xor
test
enter
std
jns
jmp
xchg
dec
mov
push
lcall
sbb
adc
adc
pop
mov
mov
mov
rorl
pushl
call
in
imul
adc
pop
test
sub
rcr
mov
add
outsb
push
loopne
xchg
mov
pop
nop
and
xor
jl
dec
xor
push
push
dec
push
fstpl
fcomi
shl
mov
mov
lahf
arpl
lea
imul
lds
rorb
ret
sub
rcll
addr16
sbb
jb
cmp
pop
pop
adc
insb
and
mov
mov
scas
push
je
addr16
jl
jb
daa
popa
adc
mov
shlb
js
jl
add
and
repnz
mov
or
pop
xor
mov
jl
cmpsl
ficompl
cmp
data16
inc
andb
sub
rorl
or
jmp
sbb
repz
repnz
bound
test
out
inc
push
or
sub
or
pop
push
sahf
insb
cld
pop
popf
push
push
jnp
cmpsb
out
mulb
add
sbbl
push
mov
push
mov
mov
test
call
icebp
pop
xor
outsl
cmp
jo
xchg
call
jae
jle
loopne
and
in
mov
push
movl
mov
les
pusha
sahf
jp
test
pop
pop
xchg
outsl
aam
out
int3
rcl
imul
fnstcw
adc
sbb
lock
xchg
jno
xchg
add
add
pop
call
sub
push
cmp
insl
inc
pminub
push
mov
push
dec
in
imul
sbb
loop
mov
push
add
in
lock
mov
push
pop
jg
mov
pop
dec
dec
and
sub
and
out
mov
add
dec
sbb
jmp
lods
mov
dec
mov
fs
enter
sbb
mov
pushl
or
cmp
cmp
fmuls
test
bound
test
cwtl
push
cld
insl
pop
inc
outsl
loopne
sbb
add
das
icebp
ss
mov
pop
fcmovne
in
xchg
loope
xor
popa
mov
sub
lods
jecxz
add
sbb
jmp
shrl
fmul
negb
push
sbb
xor
lahf
xchg
xor
cwtl
jne
pusha
xor
icebp
inc
or
cmp
fsts
sub
xchg
adc
push
lods
xor
push
push
mov
outsb
outsl
pop
inc
mov
add
mov
cwtl
or
aas
or
movsb
pop
ss
mov
dec
cld
sub
jbe
stos
sbb
cmp
xchg
out
shll
gs
lods
imul
add
push
fbstp
in
mov
aad
loop
repz
and
sub
mov
bound
pop
frstor
fsubs
sbb
and
icebp
loop
loopne
mov
pop
in
dec
loope
xchg
mov
sub
insl
imul
jno
xchg
sbb
lret
mov
out
shrl
xor
out
imul
or
cli
mov
push
icebp
sub
mov
pop
movsl
adc
mov
dec
out
sahf
adc
mov
or
int3
pusha
dec
icebp
push
xchg
aaa
and
push
mov
in
cmc
sub
hlt
jmp
fstps
pop
jns
mov
jecxz
sahf
cmp
inc
mov
mov
sbb
shlb
xchg
std
sahf
stos
push
icebp
and
mov
mov
inc
into
data16
je
mov
sahf
xor
stos
mov
sub
mov
mov
mov
jne
jp
jl
ds
enter
insl
int3
or
cmpsl
gs
pop
pop
and
sub
scas
cmp
add
daa
int3
sbb
mov
pushl
movl
movw
movw
push
lea
jmp
jmp
pushf
movl
call
pusha
pushl
movl
push
pushl
pushf
mov
movl
push
mov
lea
jmp
push
call
jmp
jmp
call
movl
mov
push
pushf
call
pusha
pushf
popl
cmc
stc
xor
cmc
xor
cmp
pusha
xor
clc
bt
xor
jmp
jmp
jmp
movl
jmp
xor
clc
stc
xor
clc
jmp
pushl
popf
mov
pushf
pushl
ret
mov
adc
mov
cmp
mov
push
mov
cld
cs
imul
imulb
pushf
push
pop
push
hlt
xchg
pop
movsl
add
outsl
push
gs
imul
ds
lret
cmpsb
inc
pop
aas
pop
push
pop
lock
sarb
push
adc
and
inc
movsb
ficoml
loopne
ljmp
jle
imul
add
decl
or
ret
leave
cs
fwait
sub
rorl
add
inc
xor
xchg
les
dec
fildll
xchg
das
mov
bound
lahf
push
ljmp
shll
sub
sub
mov
pushf
test
dec
inc
pop
dec
aam
cltd
sub
lods
test
dec
cmp
popf
addl
jno
enter
or
aad
imul
fcomip
popa
add
loop
adc
icebp
aam
inc
sub
jl
les
insl
test
repnz
enter
pop
adc
mov
cmp
cld
cltd
and
add
in
shrb
fidivrs
inc
lds
mov
sbb
ss
pop
out
stc
push
je
or
pop
cmp
xor
add
sub
inc
and
aam
dec
add
lea
jmp
push
pusha
movl
call
jmp
push
movl
pushl
jmp
pushl
popf
movb
pushf
pushl
ret
pushf
push
call
lea
jnp
push
movl
pusha
jmp
movl
push
mov
call
push
pushf
movl
lea
jmp
pushf
jmp
pushf
popl
stc
xor
cmc
pushf
xor
stc
stc
xor
push
cmp
xor
pushf
cmc
xor
jmp
pushf
pushf
popl
jmp
call
call
pushf
push
xor
mov
pushf
xorl
pushl
push
xor
stc
xor
cmc
xor
cmp
xor
push
xor
stc
xor
pusha
pushl
popf
push
mov
pushl
ret
stc
xor
test
xor
push
clc
xor
pushf
cmp
xor
cmc
xor
call
xor
push
pushf
xor
cmp
xor
jmp
xorl
clc
cmp
xor
jmp
pushf
movl
pushf
lea
jmp
movl
pusha
movb
pushf
pushf
lea
jmp
pushf
popl
jmp
adcb
in
notl
jo
ljmp
cmp
dec
mov
popf
out
mov
clc
pop
popf
movsb
and
cmc
sbb
lret
imull
shl
cmp
call
xchg
add
pop
sti
mov
decb
mov
jg
fnstcw
fistl
jbe
insl
rclb
jae
mov
jb
mov
aaa
sbb
push
shrl
fmuls
lret
inc
jl
dec
mov
pop
daa
xchg
out
and
cmp
sub
cmp
pop
xchg
ret
and
pop
movsb
cltd
cmc
pushf
jmp
xchg
dec
xchg
mov
std
mov
jb
insl
outsl
mov
arpl
jo
add
cmp
sahf
inc
enter
adc
mov
pop
fiadds
divb
hlt
aam
int3
adc
push
sub
mov
mov
arpl
jecxz
pushf
mov
rcrb
and
jno
jmp
ds
cmp
loopne
inc
cmpsb
test
pop
push
mov
adc
rorl
icebp
or
cld
add
push
out
stos
dec
jge
addr16
xor
and
mov
jb
mov
or
jl
lret
xchg
add
push
xchg
or
inc
xchg
sub
sub
lods
sbb
stc
cmp
xchg
sbb
mov
sbb
out
inc
dec
loopne
pop
ret
shl
je
mov
xchg
es
push
fcoml
sub
sbb
scas
xorb
jg
fidivs
fs
sti
push
mov
dec
mov
sub
aaa
jb
js
les
fisttpll
bound
mov
cmpsl
push
popa
jne
add
dec
adc
leave
xor
xchg
std
adc
popa
pop
mov
or
imul
lods
mov
or
mov
in
sbb
and
das
ss
leave
sbb
dec
xchg
push
xor
fwait
jbe
mov
mov
ss
in
gs
mov
jns
xchg
aas
or
pushf
cmp
fs
icebp
into
rcrb
fidivrl
pop
xor
dec
dec
cmp
icebp
mov
lods
xchg
sti
ljmp
jmp
jp
popf
stos
inc
scas
ret
clc
pop
add
pop
stos
fmull
push
xchg
cmp
mov
pop
jno
add
ds
arpl
sub
addr16
adc
and
inc
xor
ds
xor
popa
scas
les
lock
loope
lea
mov
and
mov
inc
cmp
mov
mov
je
movsb
adc
aaa
xor
xchg
mov
repz
sbb
dec
push
ss
inc
fld
scas
int3
push
add
arpl
sbb
int
loopne
xlat
inc
mov
repz
ss
std
cmc
loope
push
cmp
cmp
test
outsb
adc
xchg
xor
clc
nop
shl
xchg
leave
push
lea
xchg
xchg
inc
jp,pn
jbe
ja
shll
xor
dec
xlat
shr
cli
push
cltd
addr16
ret
jp
imul
jmp
push
mov
sub
or
add
or
mov
cli
adc
xchg
loope
dec
inc
rcrl
add
enter
dec
sbb
xchg
mov
cmp
movsb
mov
push
stc
mov
fdiv
mov
jl
adc
in
lods
push
xchg
in
push
movsl
fldt
push
in
dec
push
mov
pmaxub
stc
aam
xchg
testb
das
fdivr
jbe
out
roll
cmp
mov
cmp
decb
and
dec
or
push
psubsb
mov
dec
xor
les
sub
pop
out
aas
sbb
rorl
mov
out
call
adc
mov
pop
jle
lods
sbb
pop
add
rcr
push
mov
stos
fsts
stos
adc
add
loope
pop
lret
xlat
ljmp
negl
out
cli
mov
inc
push
scas
pop
cltd
testb
in
cmpsl
pusha
jle
jge
jne
jnp
in
int
nop
dec
xchg
push
mov
cmpsb
scas
cmp
inc
push
push
out
subl
mov
push
inc
mov
jp
sahf
rorl
ret
add
or
ret
lahf
mov
mov
jp
scas
add
cmp
fwait
mov
aaa
dec
pop
xchg
adc
mov
jo
cmp
loope
insb
test
jp
mov
xor
push
into
mov
sbb
test
push
mov
push
sbb
push
lods
mov
adc
lret
shr
jbe
push
mov
insb
mov
pop
movsl
jo
pusha
push
das
mov
inc
fcmovbe
jmp
push
sbb
jmp
bound
jno
mov
fsts
testb
jo
lds
xor
dec
or
mov
js
or
out
fcmove
hlt
or
popa
leave
sbbb
add
test
sub
xor
int
rorb
clc
xchg
fisubrl
xchg
or
daa
loopne
ret
pop
or
pop
adc
mov
cmpsb
mov
push
sbb
jle
xlat
sub
stos
rclb
mov
mov
cmp
sbb
xor
scas
xlat
pop
dec
in
inc
imul
push
xchg
adc
push
add
add
cmp
out
add
loop
xor
inc
movsb
lods
mov
push
dec
push
sbb
outsb
cmp
xchg
xor
inc
pop
mov
les
repnz
dec
mov
push
int
daa
mov
pop
out
movsb
xor
cmc
mov
inc
pop
repnz
imul
lds
xchg
push
sbb
sbb
push
jg
push
xor
das
cmp
fildll
repz
out
push
pop
lret
aam
dec
loop
in
jnp
nop
push
push
inc
mov
adc
xor
mov
mov
in
pushf
jb
insl
sti
notl
mov
daa
ljmp
sbb
popf
xchg
sbb
cld
adc
xor
out
cmc
add
xchg
mov
inc
ds
hlt
iret
push
jmp
add
cmpsl
cmp
jle
cmc
push
mov
das
test
xchg
mov
dec
jne
repz
sbb
sahf
sub
push
mov
cmpsb
xor
popa
fisttpl
and
sub
push
dec
xabort
mov
adc
push
lods
popf
inc
sbb
pushf
stos
mov
pop
lods
jae
and
jmp
popf
in
ret
out
and
xchg
push
hlt
mov
ljmp
jl
aas
pushf
sbb
je
dec
or
mov
loope
lret
lods
mov
xchg
pushf
adc
popa
mov
inc
je
lods
cmp
shl
je
or
inc
lds
or
in
daa
inc
push
lret
cmp
sub
jecxz
sbb
push
jns
push
jae
orb
pop
or
loop
xor
fldcw
xor
xchg
push
mov
add
add
repnz
pop
adc
mov
bnd
push
push
pop
testb
mov
jns
add
dec
fcom
in
test
test
fidivrl
int3
fsubrs
pop
jae
push
cmp
cs
inc
into
dec
ret
cmp
cld
add
es
dec
jecxz
rolb
cmp
pop
popf
jl
jecxz
pop
xchg
xchg
stos
cmp
orb
push
jne
mov
push
gs
rolb
test
ficomps
rcrl
jle
sub
push
int
cmpsl
jns
push
aad
cli
movsl
mov
dec
push
test
dec
ret
add
sub
sub
xchg
iret
into
lret
mov
jl
lods
mov
ljmp
fs
jbe
add
pop
jbe
sub
xor
leave
movsl
or
out
cli
sbb
movsl
and
xor
scas
inc
mov
enter
test
or
scas
movsb
sbb
inc
jl
add
jmp
mov
mov
mov
ss
bound
mov
js
mov
imul
pop
nop
mov
rorl
in
pusha
xor
outsb
mov
pop
sub
mov
mov
mov
sub
sbb
cmp
leave
push
jle
xor
push
addr16
adc
imul
icebp
cmpsl
repnz
xor
lcall
lods
mov
sbb
mov
cs
cmpsl
add
ja
loopne
loop
fstps
mov
stc
dec
mov
idivb
jg
adc
jmp
aas
xchg
daa
add
xor
add
aam
cmp
subl
fdivl
mov
pop
pop
fidivrl
adc
adc
in
out
mov
mov
adc
out
test
or
inc
repz
or
mov
call
pop
jae
push
or
dec
out
dec
gs
hlt
ret
jge
and
enter
iret
popa
fidivs
or
cmp
fcomps
and
adc
push
negl
mov
outsl
call
add
enter
xchg
jg
aas
int3
or
arpl
sbb
xchg
mov
dec
mov
enter
iret
loope
xor
cmpsl
mov
daa
aas
aaa
into
jmp
or
sub
clc
add
into
inc
cltd
inc
popa
not
insb
or
mov
imul
xor
jbe
lds
jecxz
and
mov
dec
sbb
or
push
enter
push
mov
push
mov
pop
loope
icebp
int
fwait
cmp
add
mov
les
jbe
nop
pushf
scas
pop
pop
repnz
jnp
sbb
in
hlt
mov
pop
dec
not
mov
xor
sbb
loop
cltd
mov
das
cmp
jg
stos
pop
jecxz
arpl
lcall
and
jo
or
clc
xchg
add
sub
inc
pop
or
lret
rcrl
incb
sbb
es
icebp
arpl
pop
ja
xor
mov
push
int3
sbb
adc
cltd
add
adc
ljmp
mov
loope
addr16
push
cmpsb
cmpb
adc
test
test
pop
lods
dec
jne
mov
mov
repnz
jb
js
int
je
out
fdivrl
xchg
icebp
test
mov
push
dec
insl
ret
pop
xchg
stos
mov
dec
and
jnp
testb
mov
out
test
aaa
mov
es
sbb
sbb
gs
cmpsl
sbbb
stos
jmp
inc
loopne
cmp
lcall
fwait
xor
loopne
push
jbe
cmp
pop
xor
and
cmc
jnp
mov
mov
cmpsb
pop
sahf
or
out
loop
xchg
push
xlat
dec
cmp
call
negl
push
sti
scas
jg
popf
sti
adc
push
mov
das
cmp
fbstp
inc
mov
jbe
push
lds
jp
leave
mov
ja
cmp
test
loop
sahf
rolb
in
out
cltd
xchg
sub
aam
xor
pushfw
scas
pop
scas
mov
sbb
cmpsl
mov
in
fldl
aas
outsb
push
push
shll
dec
mov
adc
add
scas
test
and
aam
js
cmp
repz
sub
adc
dec
fwait
or
into
add
test
ret
and
lods
mov
fdiv
and
push
mov
lahf
cli
lods
inc
icebp
negl
pop
loope
xor
xchg
add
aaa
jno
dec
movsb
push
and
repz
in
js
sub
inc
mov
rorl
aam
sub
lock
or
pop
call
mov
xor
jno
pop
cs
cmp
xor
scas
sar
inc
cmp
dec
push
sub
adc
jnp
mov
sahf
xchg
scas
in
xor
outsl
mov
rorb
repnz
xor
push
inc
and
insl
stc
push
gs
int3
add
jnp
or
ss
lods
adcb
popa
stc
dec
cmpl
pop
out
cs
or
jns
loopne
and
test
xor
mov
sbb
mov
fdivrl
mov
add
xor
ret
stos
daa
jbe
or
int
cmp
inc
or
mov
dec
push
loopne
cs
test
loopne
jbe
aam
dec
loopne
dec
sbbl
xor
push
clc
mov
adc
dec
pop
in
lcall
pop
mov
xorb
jb
cwtl
fstl
fidivrs
ja
dec
mov
fimull
push
ret
xor
insl
adc
push
adc
loopne
sub
out
ja
or
dec
dec
into
icebp
sti
mov
icebp
xorb
sbbb
nop
out
inc
rcll
add
sub
lret
dec
ret
mov
add
push
push
push
pop
cmp
fisubrs
arpl
jl
fdivl
shll
loopne
hlt
mov
insb
jmp
add
imulb
inc
lret
mov
mov
lahf
in
lods
sti
nop
lea
std
push
lods
inc
jle
repz
mov
sbb
in
adc
adc
decb
xchg
or
jge
and
adc
ljmp
jo
xor
mov
repz
jmp
xchg
idivl
jne
ljmp
icebp
xor
stos
cmp
lahf
sbb
sbb
sahf
jp
sub
das
insb
dec
getsec
vpsubusw
sub
jg
nop
push
stos
cmp
and
jle
repnz
insl
jnp
pmaxsw
jmp
popa
mov
xor
jno
and
pop
loop
xor
and
mov
int
add
hlt
dec
fwait
int
iret
lret
pop
jno
ljmp
pusha
mov
scas
insb
ret
repz
inc
push
je
ret
out
add
iret
repz
xlat
xchg
loopne
lret
inc
xor
and
lods
gs
cmpsl
mov
inc
ds
test
fs
dec
xchg
sar
sub
mov
pop
mov
push
pop
bound
out
jbe
sub
inc
mov
mov
lods
fcmovnbe
outsl
subps
push
fimuls
out
or
lds
gs
shll
nop
lcall
pop
xchg
ja
pop
lods
dec
dec
in
sub
pop
ret
pop
xor
dec
popa
sub
movsb
and
mov
pop
out
lret
cmp
pop
ljmp
pop
sbb
sahf
ja
cli
add
test
sbb
aam
mov
leave
out
dec
in
aas
fistps
push
in
xor
jecxz
ret
or
sti
inc
mov
mov
sub
daa
push
xchg
out
and
test
jl
nop
daa
pop
mov
scas
mov
mov
jmp
loopne
mov
sbb
push
out
inc
pop
sbb
mov
adc
lea
and
pop
imul
xchg
in
in
fistpl
ja
xor
jmp
pop
or
xchg
and
pop
mov
jl
cwtl
clc
mov
mov
adc
ja
ficoml
xor
aad
imul
idivb
jns
mov
cld
sbb
js
lock
mov
xor
mov
sbb
fcmovnbe
mov
loope
ljmp
je
sub
pop
push
push
mov
lahf
inc
mov
lods
pop
sub
cmp
fldl
add
sbb
sbb
ror
loop
xor
push
aam
repnz
das
loope
jns
lods
sti
pop
testb
adc
jp
fxtract
js
mov
nop
mov
lock
test
fmull
cmp
mov
subb
inc
repnz
mov
dec
cs
imul
pop
jmp
lods
inc
jae
int3
mov
lret
mov
fmulp
xor
nop
scas
jae
sbb
cmp
push
pop
push
cld
mov
and
add
hlt
stos
cld
lahf
inc
push
iret
pop
in
xchg
loope
jg
sbb
cmp
bound
aaa
ds
int3
pop
fisubrl
mov
mov
jno
lcall
bnd
orb
pop
pusha
pop
pop
xchg
xchg
sub
cli
pop
cwtl
es
jae
push
push
dec
inc
dec
dec
arpl
push
inc
lahf
add
mov
pop
fsubrs
or
scas
xchg
daa
jae
div
xor
dec
fxam
clc
popl
adc
cmp
add
test
and
sbb
add
jnp
clc
outsl
addr16
jg
jbe
in
sub
xchg
out
or
adc
jns
cmp
push
aas
dec
push
inc
adc
jge
sub
outsb
popf
cmp
jl
js
push
jnp
iret
push
sub
mov
addl
mov
cmp
xchg
mov
lret
and
shrb
lods
cmpsb
xor
push
dec
out
rcll
fcompl
dec
mov
in
fs
fidivs
scas
dec
stos
test
adc
fidivrs
mov
add
or
add
cld
xchg
aas
adc
lahf
test
loop
cmp
mov
or
jle
sbb
cmp
pop
fsubrl
xor
push
xor
iret
jbe
adc
inc
dec
leave
movsl
cmp
fbstp
inc
fs
push
mov
mov
sub
or
xchg
in
jnp
and
enter
daa
jg
inc
pop
ss
pusha
stos
xor
or
lock
sbb
loope
es
nop
or
and
lods
ret
or
scas
scas
int
test
xlat
aad
lock
jle
jmp
addl
hlt
or
jg
pop
lret
dec
orb
repz
stc
cmp
pop
sub
fstl
mov
adc
push
in
mov
sahf
sbb
addr16
jo
sbb
dec
sub
mov
push
mov
sarb
push
add
mov
movsl
cmp
daa
in
stc
add
cmp
cmc
mov
mov
mov
fstpt
test
lds
xchg
pop
stos
mov
mov
and
jmp
cmpsb
sti
push
dec
add
xchg
jae
mov
push
sub
mov
jae
inc
out
rclb
in
addl
test
adc
jns
push
sbb
insl
sti
ja
push
jge
popa
adc
loope
sub
dec
je
movsl
out
aad
and
cli
movsb
sbb
inc
jno
xchg
and
cmp
loope
lahf
add
rcll
jo
gs
leave
or
sbb
jge
dec
mov
aas
aad
or
mov
sbb
bound
jns
imul
xlat
das
lds
mov
cmc
fadds
insb
inc
push
jge
mov
mov
repnz
dec
inc
in
add
mov
fprem1
xchg
pop
xor
cltd
sti
xor
and
or
mov
mov
pop
mov
repnz
push
and
ljmp
add
pop
divl
dec
test
cmp
sahf
xchg
cmp
aad
dec
andb
mov
dec
jp
xlat
sub
hlt
inc
in
pop
test
test
and
enter
movsb
cmp
rol
mov
xor
xchg
inc
sbbb
or
lods
xchg
loope
pop
sti
push
in
pop
xor
fadds
and
jmp
lret
mov
push
ds
sub
push
lret
sub
and
fnsave
fsubs
mov
aad
cmp
outsl
into
ret
pop
cltd
test
xchg
mov
andl
mov
jecxz
jecxz
daa
push
and
aam
xor
loop
lock
enter
lret
jle
in
dec
xorl
lods
mov
in
leave
push
pop
sub
add
xchg
jno
mov
lcall
dec
mov
mov
mov
sarl
pop
js
popa
xor
leave
int
jno
ret
ss
lds
lods
cmp
adc
push
stos
jmp
into
data16
xchg
mov
int3
cmp
js
pop
ss
dec
mov
test
mov
adc
testl
and
and
outsl
jmp
ljmp
xchg
mov
xchg
outsl
inc
int3
insl
adc
mov
insl
mov
into
inc
jnp
leave
out
adc
and
inc
mov
cli
pop
mov
dec
popf
out
pop
fcom
lret
or
mov
pop
sbb
repnz
aas
in
aad
xchg
movsb
std
das
clc
and
sub
dec
add
ljmp
and
sti
sahf
xchg
jge
jb
aam
mov
rolb
or
js
jnp,pn
pop
js
jp
adc
pop
jp
mov
lds
out
sub
xchg
pop
imul
lret
loop
cmpb
pushl
push
jg
cltd
dec
fisubrs
jge
push
cwtl
aaa
pop
add
fcomi
repz
mov
or
mov
ljmp
mov
outsl
dec
fsts
cmp
mov
and
inc
stos
sub
in
xlat
inc
sub
pop
xchg
je
pop
pop
mov
pop
leave
mov
inc
dec
test
ror
fidivs
push
movsl
dec
seta
and
std
mov
int3
test
lods
scas
int3
cwtl
add
jg
data16
pop
adc
mov
dec
push
jbe
dec
subl
pushf
repz
icebp
dec
por
push
add
mov
jae
das
jae
fnstenv
pop
cli
in
inc
fnstcw
scas
add
stos
xor
leave
inc
cmp
inc
pusha
lock
ficompl
mov
dec
lock
arpl
xor
xchg
adc
sahf
sbb
je
lahf
lds
pop
out
jnp
push
shlb
jecxz
jae
out
xchg
movsl
and
addr16
xchg
adc
jmp
shlb
test
lcall
inc
mov
sbb
ja
mov
pop
icebp
mov
xchg
addb
adcl
leave
pop
pop
push
js
outsl
into
adcb
or
mov
bound
cmp
leave
add
mov
xchg
ffreep
daa
lea
sbb
push
cmp
lea
lret
pop
ret
sub
cmp
shrb
sbb
sbb
aas
ret
stc
lods
gs
dec
fiaddl
jge
popl
ret
push
dec
in
jbe
mov
out
sbb
lock
mov
cli
jbe
mov
sahf
mov
cmp
out
and
fisubrl
lods
pop
or
adc
cmp
mov
pop
cs
or
into
in
call
mov
cltd
ljmp
sbb
shrl
hlt
dec
outsl
push
cmp
mov
lcall
in
push
cmpb
sub
into
mov
xlat
sub
andl
fadd
je
lock
popa
pop
in
js
mov
cmp
orb
fistpll
mov
pop
dec
loop
jmp
insb
push
inc
cmp
and
cmpsl
mov
add
into
cltd
mov
jmp
and
insb
sub
outsl
adc
and
lods
cmpsb
inc
or
enter
ljmp
nop
loopne
std
orl
movsl
xchg
sbb
cld
shrl
orb
out
push
push
int
adc
hlt
roll
repz
cli
pop
sbb
bound
decb
dec
mov
sbb
pop
push
mov
jb
sti
jae
cmp
nop
iret
mov
js
add
cmpsl
push
mov
xchg
leave
repz
loopne
test
jl
mov
aaa
dec
daa
sbb
inc
shl
fldl
mov
imul
dec
lcall
dec
aad
out
cmpsb
loopne
fs
mov
jno
popf
cltd
sub
arpl
hlt
sbbb
jge
inc
negl
sti
aas
clc
pop
adc
cmp
icebp
xor
ret
ds
add
pushf
dec
xchg
lahf
gs
das
aas
inc
push
pop
sarl
mov
pop
outsl
lea
daa
jo
leave
andl
popa
dec
sarb
test
packsswb
dec
sub
leave
icebp
nop
insl
and
mov
inc
imul
jnp,pt
pusha
cltd
push
add
and
inc
adc
js
adc
dec
jg
adc
dec
fsts
mov
push
push
mov
es
jle
stos
dec
shrl
xchg
shll
xor
aaa
pop
test
mov
xor
sbb
inc
mov
adc
pop
xor
lcall
mov
push
ja
imul
push
frstor
icebp
push
mov
mov
dec
scas
mov
jbe
push
mov
iret
test
lret
mov
pop
push
or
mov
lods
xor
jnp
and
sub
or
ret
sub
dec
adcb
sub
mov
sub
in
push
mov
jp
call
lret
out
imul
ljmp
xor
or
lahf
pop
loope
jecxz
xlat
jns
ljmp
test
loop
cmp
sbb
jge
xchg
cld
jle
nop
jmp
inc
xchg
pop
jmp
cmp
dec
pop
std
inc
cltd
aaa
and
fisubrs
sbb
nop
and
ret
addb
xchg
sub
lea
mov
fidivs
outsl
dec
mov
sti
imul
gs
and
out
es
add
cli
fdivs
cmp
loop
pop
pop
lret
nop
frstor
cmp
cmp
inc
fcoms
xchg
xchg
sub
or
push
push
mov
aam
lret
rcr
xchg
test
xchg
cltd
test
movsl
in
inc
lret
popf
mov
movsb
and
xlat
jo
cmpb
jge
dec
sub
ret
lcall
data16
lds
orb
mov
add
jbe
inc
and
pop
sbb
pop
sti
jmp
sti
aad
fnstcw
cmpsl
xor
nop
sahf
sbb
and
nop
and
mov
mov
jmp
cmp
lahf
mov
mov
adc
test
fldenv
push
xchg
mov
jae
push
xchg
punpcklbw
jne
inc
jae
jo
repnz
test
insb
cmpsb
inc
xor
shl
pop
push
call
mov
or
fdivp
xchg
xlat
lock
mov
xchg
add
je
and
jno
jno
fs
pop
xchg
or
clc
into
inc
adc
xchg
or
sub
aaa
xchg
inc
cmpsl
mov
or
xor
lea
jo
and
aaa
popf
add
push
popf
pop
push
out
pop
imul
mov
ficomps
inc
mov
call
hlt
add
fnstenv
or
fs
or
push
xor
out
xchg
add
cmp
xchg
stos
adc
mov
push
inc
aaa
mov
or
mov
mov
or
and
sub
dec
xchg
shrl
stos
jnp
inc
push
movsl
sbb
repz
mov
jecxz
movsl
movsl
mov
cmp
into
adc
fstps
dec
fadds
dec
pop
cmp
xor
ds
xor
dec
inc
add
mov
in
mov
mov
test
cmp
cmc
pop
lds
in
sbb
xchg
sbb
xchg
sub
mov
add
out
fnsaves
lods
jl
sarb
iret
mov
rolb
add
xchg
cmp
fwait
mov
jmp
mov
test
sbb
cmc
mov
lea
scas
push
cmp
out
mov
popf
fs
clc
outsl
imull
dec
mov
cwtl
push
sbb
jno
repnz
stc
nop
pop
test
adc
push
aam
cld
and
test
fildl
pop
ret
push
inc
daa
imul
fldenv
adc
scas
push
das
movl
dec
and
lods
sbb
adc
xchg
sti
lea
adc
xlat
xchg
and
std
xor
imul
and
cmp
movsb
sbb
imul
das
outsb
pushf
out
cltd
paddsb
hlt
push
int3
push
pop
iret
inc
pop
xchg
arpl
xchg
std
sub
cmp
pop
cmp
jl
in
push
mov
cmp
out
fisubrl
in
dec
ds
repz
adc
cli
int3
mov
sbb
ljmp
adc
scas
xchg
adc
sub
xor
je
mov
jno
lret
scas
xchg
xchg
int
cwtl
cmp
les
mov
pop
int3
sbb
push
paddsw
xchg
cmp
jg,pt
lahf
fildll
sub
out
jb
adc
xchg
mov
sub
arpl
imul
stc
jmp
inc
icebp
push
mov
imulb
jl
add
jbe
sbb
int3
loop
pop
int3
dec
mov
and
gs
in
iret
insb
and
jae
cmp
enter
sbb
add
dec
mov
push
and
push
test
or
dec
push
ljmp
es
mov
lahf
testb
ljmp
push
adc
pop
xlat
cmp
test
insb
sbb
push
and
testl
lds
jle
mov
shrl
pop
mov
sub
pop
dec
cs
fdiv
mov
std
in
pop
sbb
cltd
fnsave
fmull
pop
mov
cmp
inc
xchg
scas
mov
or
fdivrs
mov
aad
inc
push
cmp
mov
mov
sti
ficompl
bound
insl
sbb
mov
js
push
lcall
pushf
loopne
setg
shld
cmp
jecxz
jmp
mov
sbb
xor
mov
cmp
jle
rcrl
inc
pop
fsubrl
fisubrs
js
push
sahf
pop
mov
shrl
jecxz
popf
pop
and
sbb
push
mov
mov
mov
sarl
fists
mov
aaa
xchg
add
and
mov
rcrl
data16
pushw
mov
rorl
imul
mov
imul
jmp
push
into
fists
shrb
cld
jmp
xchg
fnstenv
movsb
in
rorb
out
cltd
clc
icebp
lock
push
push
mov
push
test
bound
aaa
movsb
lcall
xchg
jae
jne
mov
sub
hlt
rcrb
mov
test
cmpsl
jg
and
jl
mov
fidivl
push
popl
fmul
mov
jo
inc
jmp
and
dec
loop
pop
lods
and
inc
imul
mov
sbb
jae
jl
es
out
mov
daa
mov
pop
shrb
or
xlat
enter
decb
sbb
inc
mov
add
cmp
aad
mull
jg
push
int
and
shlb
inc
cwtl
ds
out
aam
xchg
and
leave
clc
mov
pop
lahf
fdivs
xchg
mov
adcb
in
xchg
cmp
pop
fnstenv
push
mov
int3
pop
mov
and
call
cmp
cld
fs
add
push
mov
out
addr16
mov
jnp
ss
sbb
pop
lock
push
cld
or
je
inc
mov
insb
inc
in
imull
sahf
cmp
inc
dec
xchg
gs
test
jmp
lea
scas
rcl
scas
fdivp
popf
jg
into
cmpsb
cmc
cmp
pop
and
lcall
fcoms
push
adc
xor
mov
and
inc
xor
dec
xchg
and
push
jae
push
adc
inc
or
das
cmpsb
push
mov
fnsave
xchg
fidivl
pusha
sub
jmp
cltd
mov
push
sahf
shrl
sub
test
fistpl
sub
pop
nop
cmpsb
xor
test
adc
xchg
xor
and
lods
dec
lret
mov
fdivs
xlat
add
xchg
jecxz
lock
mov
jl
cmpb
scas
jnp
dec
sahf
fbld
les
mov
repnz
sti
xor
mov
pop
pop
xor
imul
push
fs
addr16
mov
clc
jno
daa
adc
xchg
imulb
leave
in
clc
test
sbb
push
add
and
pop
icebp
dec
add
cmpb
mov
lcall
movsl
cwtl
push
xchg
aam
mov
lods
call
sbb
bound
or
push
clc
movl
fiadds
jle
icebp
lods
jecxz
mov
jg
inc
loop
js
scas
out
inc
mov
sti
push
add
pop
nop
sub
add
aam
sub
xchg
and
push
ret
addr16
cmp
sub
cmp
pop
in
inc
mov
xor
aad
rcrb
arpl
fildll
sarb
jmp
stos
dec
adc
mov
dec
cmp
fs
pop
sbb
xchg
aad
adc
popf
pop
addr16
push
jge
fwait
and
push
mov
nop
das
into
and
out
loopne
shr
clc
je
adc
jo
adc
xor
pop
pop
lods
adc
dec
cwtl
test
iret
inc
and
sbb
adc
in
test
pusha
or
push
fnsave
sub
rcrb
pop
add
xlat
adc
imul
outsl
adc
loopne
out
add
and
add
popa
dec
jno
ret
es
outsb
push
pop
fsubl
mov
dec
addr16
pop
pop
mov
loopne
das
jnp
mov
inc
push
push
add
mov
outsl
out
imul
movsb
inc
jns
mov
xor
loopne
aam
icebp
adc
xchg
dec
cwtl
add
imul
scas
stos
aad
rcrb
mov
icebp
sahf
mov
xchg
push
mov
cld
push
sbb
mov
clc
jbe
xor
test
mov
sub
lahf
iret
push
xchg
push
int3
mov
cld
jnp
cmp
add
testb
cs
sub
adc
mov
ret
scas
cwtl
movsb
sbb
xchg
dec
lret
stos
or
sahf
inc
pop
lcall
fldenv
and
test
fwait
dec
enter
in
rorl
sub
xchg
std
adc
lock
sti
mov
insl
fisubl
push
push
bound
ja
in
movsb
mov
xor
jecxz
adc
stos
jno
and
call
adc
xor
cmp
dec
add
push
movsl
andl
cmp
fcoms
push
mov
shl
outsl
pop
ljmp
aas
sub
sbb
lret
lds
popa
js
outsb
lret
xchg
mov
lahf
jo
int3
jmp
adc
in
mov
mov
add
divl
test
arpl
enter
jno
pop
shrl
fs
std
cmp
adc
jmp
push
int
aaa
xchg
outsb
cmp
xchg
cmpsb
arpl
pop
add
outsb
daa
mov
jo
dec
pop
iret
or
ljmp
outsl
clc
dec
rclb
dec
and
popf
pop
sar
push
test
pop
popf
mov
or
sbb
adc
mov
stos
mov
lcall
scas
hlt
adc
cmp
push
jns
ljmp
loopne
pop
add
pop
std
sbb
adc
xor
mov
bound
in
inc
imul
shll
ss
xchg
sub
xchg
outsb
in
cmp
test
adc
ret
jb
xchg
push
mov
test
xor
cmp
jno
mov
adc
les
aam
push
jne
fmul
inc
mov
mov
lcall
or
ret
stos
push
fisubrl
pop
insl
xorb
xor
mov
add
cmp
mov
jbe
inc
fldl
test
ficoms
sbb
adc
loop
dec
and
push
jle
xchg
and
int3
add
jmp
pop
push
stos
dec
clc
fucomi
jle
popf
fistpl
js
push
pop
daa
fcmovbe
int3
push
int
movsl
jg
clc
dec
mov
mov
sbb
cmp
sbbl
les
and
sbb
fnstenv
pop
negl
ss
aam
popa
dec
cld
dec
adc
or
pop
jo
mov
pop
and
fstp
xor
lret
sbb
pop
xor
sbb
inc
lea
add
sbbl
orl
sub
pop
sbb
push
pop
or
icebp
mov
cmpsb
inc
nop
sbb
dec
or
mov
add
leave
out
ljmp
adc
dec
jae
jge
adc
adc
insl
fsubs
push
push
sar
std
push
repz
mov
loop
aaa
test
push
testb
fistl
adc
push
and
int3
and
inc
das
stos
test
call
leave
xlat
cmp
sub
mov
iret
mov
lahf
js
lret
cltd
into
xorl
imul
mov
adc
dec
fistps
fcompl
das
and
lods
sub
aaa
mov
push
and
push
mov
xchg
sti
add
fdivrl
aaa
fisttpll
pop
add
xor
and
dec
movsb
sbb
or
outsb
ljmp
and
mov
inc
adc
jg
jb
xor
cmp
mov
aam
les
xchg
jp
pop
jae
xor
and
nop
incb
jo
movsl
add
cltd
dec
dec
ss
mov
jbe
sub
je
pop
lods
cmp
test
mov
dec
mov
insl
mov
cld
jl
jae
les
lret
out
les
imul
mov
xor
mov
test
add
aaa
cs
mov
repnz
mov
push
add
or
mov
sub
ljmp
inc
aad
shlb
push
je
mov
ss
mov
pusha
push
repnz
imul
dec
loopne
sub
stos
mulb
popf
and
sub
rcl
mov
cmp
call
loop
jmp
scas
mov
fildl
lods
sub
adc
dec
lods
cmp
out
repz
in
lcall
cmp
mov
sbb
push
aad
addr16
js
ds
inc
fmuls
je
mov
xchg
sub
int
and
xor
jbe
icebp
mov
push
negl
adc
pop
scas
gs
inc
mov
mov
or
loopne
imul
ds
mov
cmc
dec
faddl
in
inc
xchg
sub
sbb
or
rcll
xchg
push
in
inc
imul
ljmp
repnz
mov
xor
sub
sub
loop
jmp
inc
imul
push
lods
push
stos
inc
scas
pop
insl
sbb
lret
xor
fldenv
xchg
mov
mov
push
adc
lock
aas
daa
sbb
or
ja
jp
imul
adc
sbb
icebp
nop
ret
push
dec
inc
fsts
sub
mov
ret
cwtl
xchg
lret
mov
repz
filds
repnz
lock
dec
sub
insl
pcmpgtd
int
jb
stos
mov
mov
iret
and
test
and
pop
imulb
sbb
insb
push
jl
cmpsb
pop
mov
test
sub
leave
ja
sbb
ds
test
jnp
xor
sub
push
mov
out
mov
aad
test
mov
push
mov
push
shrl
call
into
outsb
jnp
subb
dec
mov
sbb
push
fwait
arpl
nop
inc
ds
push
lea
mov
adc
loopne
sarl
add
jno
std
jns
shll
arpl
xchg
push
cld
mov
and
ret
repnz
out
jo,pt
push
in
lret
sub
lods
or
div
cmp
jg
adc
clc
fstl
cmpsb
xchg
imul
test
pop
dec
les
xlat
stos
aaa
add
std
fs
aam
adc
xchg
pop
rcrb
adc
repz
jae
int3
mov
xchg
in
bound
add
or
leave
mov
xchg
jo
test
adc
jle
adc
mov
pusha
mov
fcmovnu
fnstenv
lods
cmp
in
in
cmpsl
cmp
inc
sub
inc
rcrl
add
cmpsb
in
jnp,pn
mov
popa
push
xor
xor
shrb
xchg
es
mov
and
mov
jg
or
cmc
add
mov
dec
daa
xchg
mov
or
data16
stos
push
pop
mov
testl
movsb
mov
fsubrs
xor
ds
xchg
jmp
mov
stos
repz
hlt
movsl
add
cmp
or
sub
jns
pop
das
js
pushf
sbb
aaa
mov
cli
pop
mov
jecxz
iret
add
les
mov
and
sub
aaa
mov
fadd
test
stc
leave
xchg
cmovge
ja
push
jle
out
add
aaa
jnp
repz
cmpb
arpl
into
out
lods
pushf
jo
and
stos
arpl
jb
lds
fdivl
pop
jno
aad
iret
xchg
push
add
sbb
jl
outsb
mov
xchg
and
jo
sbb
sbb
fwait
and
das
mov
outsl
fwait
adc
cmpsl
negl
into
mov
xlat
out
adc
xor
xchg
outsl
clc
pop
sarb
mov
mov
test
jmp
fisubrs
dec
jns
outsl
add
out
dec
push
xchg
inc
jg
shrl
push
push
enter
stos
jp
sbb
cmpsl
or
insl
jno
adcb
inc
fisubrl
fisubrl
jo
mov
mov
mov
jbe
mov
jl
movsb
ja
push
aad
mov
into
inc
aam
outsl
cmp
adc
mov
cmc
orl
inc
clc
add
stos
and
sub
mov
jae
jecxz
mov
or
add
inc
bnd
stos
cltd
scas
sub
mov
jb
sbb
inc
fwait
jecxz
push
fldl
movsb
xchg
sub
aas
fcomip
ja
jmp
add
clc
adc
scas
std
push
xchg
and
cmpsb
adc
adc
xchg
mov
sahf
enter
sbb
mov
or
adc
jge
adc
mov
mov
cld
and
jns
ds
repnz
test
mov
ffree
sbb
cld
popf
repnz
dec
lahf
out
inc
in
cmpsb
push
mov
push
jge
dec
stos
cmp
jo
dec
arpl
out
sub
mov
sbb
mov
cmpsb
xor
and
sarw
xor
leave
shl
jb
inc
push
lds
iret
mov
addl
pop
out
adc
addl
mov
cmp
jecxz
les
frstor
shrl
inc
popf
lods
jge
cmp
mov
scas
jl
dec
xchg
scas
in
xlat
imul
cli
cmp
xor
jge
pusha
fldcw
inc
sub
push
xor
adc
repz
xor
push
mov
in
dec
shl
fisubs
ja
jmp
bswap
aas
ds
mov
insl
fwait
push
push
pop
iret
push
fmull
push
test
fimuls
sub
cwtl
mov
cmpsb
sbb
shrb
mov
test
xchg
fisttpl
fdivr
es
outsl
aaa
lahf
out
popa
dec
mov
pop
inc
push
loopne
sub
call
out
aaa
push
inc
mov
pusha
das
movsb
inc
cmpb
outsb
jne
or
xchg
dec
andl
adc
out
out
mov
or
jp
jbe
shrl
shr
inc
mov
pop
adc
lret
test
mov
sbb
mov
in
mov
xor
cmp
or
inc
xor
bound
sbb
jecxz
std
jns
shrl
cs
inc
pop
ret
cld
lods
in
fidivrl
xchg
in
sub
test
in
inc
mov
cbtw
and
mov
add
sub
or
lods
in
scas
iret
xor
xor
push
inc
ds
enter
xchg
cli
sub
rcrb
int3
push
lret
mov
adc
ficomps
mov
sub
cld
cmpsl
mov
fnsave
pop
pop
xor
inc
loopne
sub
imulb
sub
cld
imul
dec
adc
loopne
sub
cld
jge
jge
xor
and
outsb
push
add
hlt
push
jp
add
loop
jo
xor
lret
add
andb
aas
adc
sub
clc
hlt
lea
ja
push
cmp
and
cmp
xor
push
jecxz
test
cli
jb
sbb
stos
jnp
and
sti
pop
orb
and
or
xchg
andl
imul
push
ljmp
fs
sbb
pop
movsb
clc
lock
sbb
pop
inc
xchg
jne
mov
imul
cmp
andl
cmc
add
nop
nop
ds
xchg
xor
ficoms
fisubl
jp
ja
pop
addb
popl
fisubrs
aas
and
mov
push
sbbb
mov
out
ret
jo
mov
xor
lods
cmp
push
pop
dec
dec
inc
mov
lea
and
push
adc
int3
pop
mov
insl
sarl
inc
rcll
jmp
out
sbb
sbb
repz
push
in
enter
in
out
cs
cltd
aad
and
add
insb
lcall
faddp
push
mov
sub
fwait
push
xor
mov
andl
ficoml
jp
test
out
mov
orps
jb
call
and
inc
clc
push
xchg
fimuls
lods
mov
ds
cmpsb
adc
cmp
mov
adcl
aam
mov
mov
dec
mov
fcomp
mov
add
dec
mov
xchg
sbb
out
scas
adc
cmc
ds
les
addr16
sahf
mov
and
pop
cld
pop
xchg
push
adc
xlat
aad
push
fdivrp
cwtl
cmp
ds
call
jp
xchg
mov
aam
ret
cmp
xchg
adc
lods
jg
les
loope
cmp
mov
stc
rcrl
mov
pop
pop
pushf
jp
pop
push
xchg
xor
push
dec
mov
popf
pop
mov
xor
jnp
jne
imul
popf
ret
pushl
loope
mov
xchg
rolb
pop
sub
or
imul
and
insl
dec
and
sbb
nop
mov
or
jbe
inc
sub
cmc
dec
inc
cld
jnp
jmp
outsb
xchg
pop
fimuls
add
dec
xlat
adc
adc
cmp
adcb
in
inc
fistl
inc
xchg
xor
aas
push
mov
pusha
mov
jmp
jnp
dec
sub
es
sub
in
fs
rcrl
mov
xchg
movsb
cmp
or
das
cmpsb
scas
inc
nop
mov
cmpl
mov
cmpsl
mov
call
lds
ret
and
loop
add
int
jnp
iret
fsubrs
jmp
out
xchg
cmp
adc
xchg
mov
pushf
rorl
sub
inc
mov
mov
repnz
lahf
sbb
jp
fidivl
mov
cwtl
pop
stos
mov
scas
dec
rcr
inc
jge
pop
rorb
add
xor
mov
push
push
in
popa
andb
xor
lods
dec
subb
jmp
jg
popa
pop
mov
add
fwait
mov
repnz
sahf
adc
sbb
mov
ss
insl
or
mov
push
popf
xchg
add
lahf
out
inc
int
pushf
loopne
sbb
shll
ds
mov
hlt
xchg
or
lahf
rolb
arpl
sub
mov
mov
dec
cmp
pop
test
cmp
xchg
xchg
jns
mov
jae
or
test
icebp
push
and
pop
dec
leave
inc
loope
or
aas
loopne
adc
adc
mov
jbe
pop
mov
sar
mov
push
cmp
in
jecxz
xchg
sub
je
int3
out
push
clc
jo
or
or
cmpsl
loopne
inc
push
inc
divl
cmp
mov
cs
dec
test
fnstenv
or
dec
xacquire
int
imul
in
cwtl
push
lcall
pop
mov
xchg
sbb
ret
insb
mov
testb
jno
dec
bound
cmp
js
adc
fs
lret
sbb
and
mov
cli
push
push
psrlq
pop
or
sub
pop
nop
xor
idivb
xchg
mov
mull
dec
test
movsb
mov
sub
in
js
sub
xlat
test
sub
mov
outsb
daa
jg
insl
adc
dec
movsl
xlat
or
fnstsw
mov
xchg
loop
mov
xor
test
jp
or
mov
fcoms
scas
and
pop
daa
mov
mov
out
out
mov
fsubs
mov
inc
jns
ja
or
fidivs
adc
or
shlb
js
sub
je
and
and
mov
cmp
icebp
mov
cwtl
cmp
adc
xchg
xor
push
fistps
lret
loope
adcb
or
aad
lcall
hlt
shll
lcall
mov
lahf
cs
and
cmp
outsl
shrb
xchg
adc
cmp
mov
js
inc
ds
out
cmp
push
jmp
inc
or
mov
nop
imul
push
fdivrl
add
mov
sahf
jg
pop
sub
repz
add
ss
mov
orl
add
or
mov
mov
movsl
mov
std
inc
popa
xchg
pop
inc
dec
fdiv
add
filds
scas
js
mov
mov
mov
mov
lcall
jnp
fwait
jbe
mov
pop
test
add
cltd
lods
mov
jp
dec
aam
into
add
lahf
mov
and
mov
outsl
xor
shll
dec
lcall
gs
push
repnz
lods
xchg
mov
call
cmp
arpl
cmp
lret
sbb
mov
jbe
push
popa
cmpsb
out
popf
jmp
jno
ret
sbb
in
pop
and
aam
pop
pop
in
push
cmp
filds
orb
push
add
push
add
jns
fistpll
inc
pop
dec
in
xchg
and
add
out
and
lock
aaa
gs
adc
jae
xorb
mov
cs
shll
rcll
sub
jbe
adc
std
inc
imul
cmpsb
push
call
cmpsl
arpl
sub
movsl
ljmp
in
push
jl
dec
cmc
ret
data16
lret
and
aam
aad
in
gs
push
scas
lods
pop
mov
clc
and
dec
enter
xorb
dec
std
stc
imul
cmpsl
or
movsl
jo
lds
test
jne
in
jge
mov
cmp
push
jmp
dec
repz
mov
jl
inc
inc
or
popa
cmp
in
mov
pop
adcl
stos
xchg
cwtl
or
push
mov
lret
jae
cmp
push
pop
cmp
xor
jbe
xchg
and
scas
shll
xor
mov
mov
divb
cmpb
xor
push
jo
pop
mov
xor
nop
push
sbb
lea
std
fdivrl
inc
inc
lahf
add
xor
adc
dec
lahf
sub
jle
sub
sub
out
pop
sahf
push
push
data16
pop
arpl
out
outsb
push
xor
cli
outsl
gs
jge
mul
mov
jg
stos
rolb
jge
test
dec
std
adc
aas
xchg
imul
mov
jo
not
mov
push
pop
nop
popa
scas
inc
mov
adc
push
insl
sbb
sub
ret
jmp
shrb
sbb
in
sti
cmp
dec
cltd
aas
add
jmp
daa
clc
jb
sbb
fadds
out
xchg
flds
inc
mul
nop
cltd
cwtl
dec
mov
fs
movsb
in
int3
adc
testb
inc
loope
jbe
mov
mov
dec
add
and
sahf
in
xor
lea
test
stc
sub
adc
dec
stc
jne
subb
ljmp
xchg
pop
clc
push
adc
jmp
fsts
dec
orb
aaa
adc
adc
and
push
cmpsb
push
mov
mov
je
in
movsl
les
mov
mov
sbb
shl
xchg
adc
loopne
or
jns
or
aas
leave
push
int3
push
rclb
sub
nop
aam
in
adc
loopne
aaa
inc
fildl
cmp
subb
inc
push
sti
sub
and
adc
add
sarb
addr16
xchg
aad
xlat
loop
mov
lret
popf
or
xor
out
fisubrs
or
call
sub
mov
and
adc
daa
fcoml
test
and
je
adc
fwait
cmc
shlb
pop
jmp
push
sbb
pop
cmp
dec
inc
out
sahf
pop
mov
add
pop
xor
cmp
fcmovnu
enter
rcr
dec
loope
fmulp
fmuls
dec
inc
fninit
testb
sub
pop
icebp
orl
shrb
pop
lcall
mov
stos
test
mov
scas
mov
ds
or
xchg
out
ja
out
and
pop
pop
sbb
fnstenv
lahf
push
jno
dec
call
divb
pop
add
push
and
xchg
pop
push
popf
les
mov
xor
xchg
mov
enter
sbb
mov
test
adcb
cmp
icebp
adc
xchg
push
pop
int
jecxz
cltd
adc
adc
push
imul
and
dec
int
inc
adc
mov
enter
movsl
jecxz
loope
cmp
inc
xlat
adc
xchg
or
push
cmp
cmpsb
jmp
enter
out
ss
mov
add
outsl
cmpsl
sub
popl
and
adc
hlt
add
ja
and
xor
bound
cmp
jns
dec
addr16
aad
out
and
sahf
pop
mov
imul
adcl
movsl
js
enter
mov
ss
lahf
or
xor
int
lock
inc
and
jb
push
mov
aad
push
mov
lret
cmpsb
push
loopne
lahf
ret
int3
cmpsl
xchg
cs
int
fisubrl
cmp
cmpsl
add
or
jbe
xchg
or
sbb
mov
fistpl
subl
shll
mov
push
scas
jle
loope
add
jo
cmp
jl
xchg
fwait
dec
dec
mov
add
mov
cmp
out
popf
mov
clc
mov
lods
es
nop
mov
jns
in
and
shrb
aad
inc
xlat
sub
push
shrl
loopne
cld
loope
push
call
fcmovu
repz
and
dec
xor
mov
add
mov
dec
stos
jecxz
out
push
dec
adc
in
adc
jns
dec
sbb
xchg
icebp
mov
mov
mov
push
cmp
jp
dec
fwait
in
fstpt
mov
and
pushf
mov
popl
mov
jp
int3
cwtl
iret
cmp
data16
stc
jne
movsb
lods
aas
lea
loop
out
push
jae
jmp
jb
mov
inc
mov
jns
dec
push
cmp
push
fistpl
push
mov
cmc
scas
xchg
and
lret
in
imul
mov
popf
or
jecxz
inc
add
bound
push
or
pop
add
pop
test
incb
out
mov
leave
es
test
test
fs
push
fnstsw
adc
lods
std
sbb
mov
testb
mov
add
repz
outsl
aas
cmpsb
or
dec
pusha
push
in
xchg
and
fidivs
out
mov
mov
mov
jge
fmull
or
mov
push
push
or
xlat
xor
notb
sbb
bound
xchg
sub
pop
pop
mov
cmpsb
xchg
scas
icebp
mov
mov
sbb
cs
and
aad
ss
lock
leave
cmpsl
adc
mov
mov
cmpsb
aad
int
adc
or
outsb
out
popf
sub
or
out
fdiv
lcall
push
push
jmp
dec
pop
and
push
cmpl
stos
mov
jb
xor
ret
mov
dec
lcall
sub
mov
insl
bound
cmp
mov
outsb
inc
fsts
dec
pop
movsb
outsl
cltd
sub
add
cwtl
add
cmp
out
outsl
mov
out
in
xchg
inc
jge
jo
dec
mov
rorb
and
xlat
movsl
or
dec
loope
mov
xchg
fidivl
bound
pop
mov
xchg
add
sahf
orl
push
js
and
sarb
sbb
cmp
dec
and
clc
dec
cld
fidivrs
mov
rorb
mov
sub
push
push
enter
adc
mov
dec
sub
cmp
out
mov
lods
mov
adcb
dec
fisubrl
sbb
mov
mov
mov
fidivs
jbe
or
push
dec
pushf
cmp
xchg
into
fiaddl
mov
je
jmp
xchg
inc
push
ss
adcb
xlat
push
out
push
and
lock
outsb
addr16
push
movsl
rorl
mov
aas
and
fcomps
rcr
ljmp
cwtl
push
mov
xor
push
xlat
fs
mov
mov
xlat
or
aas
mov
divb
js
test
ret
dec
jge
shlb
fsincos
push
cwtl
leave
add
loope
adc
sbb
mov
loopne
inc
pushf
mov
xchg
imul
out
or
push
cld
aam
cmpsl
and
mov
xor
pop
andps
sub
out
xchg
nop
xor
sub
xchg
test
push
lods
imul
add
data16
in
mov
mov
lret
decl
inc
push
das
sub
ret
push
scas
aaa
mulb
imul
es
or
sti
pop
aad
or
stos
std
xchg
jno
push
xchg
cmp
nop
sub
push
into
xchg
pop
add
ja
icebp
xchg
or
and
insl
lods
xor
sbb
loope
fstpl
cmp
aad
xor
jns
jmp
mov
push
not
pop
test
testl
xchg
idivb
jbe
addr16
sub
les
or
shlb
cs
call
sub
dec
outsl
push
jecxz
fwait
call
je
and
loop
adc
enter
pop
dec
negb
push
pop
jge
or
push
sbb
icebp
imul
shrl
dec
push
push
mov
fwait
leave
inc
push
in
sbb
mov
push
js
jecxz
pop
or
cs
inc
pop
enter
pop
call
add
dec
jbe
data16
add
insb
lcall
fldl
imul
out
out
jecxz
or
xchg
sbb
in
adc
scas
dec
dec
pop
mov
fidivrl
pop
xlat
out
icebp
shll
push
outsl
sbb
push
mov
in
or
or
xchg
mov
int
rolb
xchg
dec
inc
data16
loop
aam
mov
or
inc
stos
test
repz
jne
pop
mov
or
sub
insl
sub
sub
push
shll
mov
shlb
out
xchg
rorb
pop
sahf
and
mov
test
iret
or
adc
jnp,pn
out
cmp
adc
fists
mov
xadd
push
fwait
out
jp
cmp
push
add
or
iret
lret
or
pushf
cmp
loop
mov
xlat
and
test
push
out
or
les
icebp
cmp
jle
pop
aaa
xor
ss
mov
sbb
add
jo
push
sbb
insb
cmp
in
jl
pop
mov
sbb
mov
jne
cmp
arpl
jns
xor
es
pop
pop
fbld
sub
fcoml
cld
inc
daa
push
out
aas
sub
pushf
pop
mov
mov
sub
sub
or
mov
lret
aad
stos
push
pop
push
clc
ja
cmc
add
rcrl
pop
inc
add
cmp
xor
dec
mov
sbb
or
lods
fs
icebp
imul
scas
loope
cmp
imul
push
shll
inc
pop
test
pop
jbe
fstp
enter
and
fmul
pusha
push
sbb
mov
pop
pop
icebp
inc
fbld
cld
sti
call
adcl
ret
jmp
je
xor
jle
test
lea
shll
jo
xchg
rcr
dec
je
test
fwait
push
popa
jecxz
mov
adc
jmp
fimuls
data16
lret
jno
mov
fidivl
shll
inc
inc
push
ljmp
push
stos
in
pop
sub
sub
pusha
xor
addr16
xor
xchg
rclb
dec
lds
shl
xchg
add
in
cld
das
data16
jae
das
sbb
in
cld
add
fistps
adc
cld
imul
xor
cmpsl
jle
dec
and
push
and
pop
popf
sub
mov
and
jnp
mov
pop
xor
popa
nop
sbb
in
pop
push
fwait
dec
and
adc
fs
fdiv
add
dec
mov
data16
jle
inc
mov
pop
push
sub
mov
decb
lcall
add
mov
sahf
xor
adc
aam
and
mov
sbb
mov
mov
adc
pop
xchg
or
popf
jb
lods
fstps
or
sbb
pop
ljmp
popf
dec
inc
add
outsb
lahf
xor
jge
xor
adc
loop
xchg
or
dec
cmp
xor
lods
cmp
add
rolb
je
add
sbb
or
dec
xchg
lods
jle
add
jg
inc
inc
insb
pop
xlat
xor
aas
lcall
fimull
add
mov
and
int3
dec
ret
stos
lcall
adc
pop
clc
pop
in
and
cmp
bound
inc
adc
or
xor
or
daa
gs
fsubrl
popf
stc
scas
cmpsl
iret
std
jns
xor
dec
gs
add
in
push
mov
in
iret
scas
bound
and
and
inc
rcrb
pop
stos
add
mov
mov
imul
sbb
lea
lcall
mov
das
js
inc
or
inc
adc
in
ljmp
xchg
or
xor
and
je
jp
test
pop
jne
cmc
scas
es
out
xor
inc
mov
inc
push
jge
pusha
jmp
cltd
xchg
jmp
jecxz
xchg
int
push
cmp
hlt
repnz
loopne
lret
add
cli
out
repnz
sahf
push
mov
mov
addr16
lcall
push
or
push
and
insb
jbe
sbb
icebp
pop
test
jg
jno
pop
lret
ljmp
popf
scas
in
xor
mov
movsl
cs
cmpsl
add
data16
xchg
mov
push
outsb
cmp
mov
inc
mov
or
nop
repz
sub
xchg
stos
dec
inc
pop
dec
bound
or
cmpsl
inc
adc
sbb
push
pop
stc
push
inc
rcrb
pop
mov
cltd
push
lea
mov
inc
add
sbb
add
adcl
stos
scas
sub
imul
call
cmp
sub
and
push
in
xor
pop
sub
dec
jns
or
mov
adc
ror
dec
lcall
aad
jmp
sub
aaa
in
in
add
add
push
jg
push
cmp
lret
mov
int
aad
jle
repnz
inc
sbb
in
lret
inc
in
mov
mov
jno
dec
mov
jnp
push
mov
inc
pop
mov
aaa
mov
lahf
bound
insb
adc
xchg
cmc
cwtl
decb
loopne,pt
arpl
mov
mov
lret
sub
mov
les
or
loopne
pop
or
sbb
insl
loop
xchg
iret
add
addr16
xor
dec
mov
jl
cmp
jnp
xchg
fwait
push
xor
es
push
pop
pop
nop
xor
out
fsts
xorb
mov
ss
xor
outsl
shl
sti
xchg
popa
fidivs
jae
bound
pop
push
cvttps2pi
cmp
add
or
xchg
or
int
cltd
xor
cltd
stos
xchg
xor
and
jg
inc
jbe
inc
fildll
test
stc
ja
jle
push
not
pusha
mov
push
mov
lds
je
sub
push
or
sub
add
and
lahf
movsl
jp
ror
lock
data16
repnz
shr
xor
push
cwtl
js
adc
xor
repz
xchg
subb
aas
in
lods
in
enter
mov
out
lcall
lret
mov
sbb
pop
adc
mov
cli
addr16
cld
xchg
mov
xchg
dec
scas
adc
xchg
sub
cli
xchg
mov
shll
jo
test
or
push
or
jl
jecxz
outsb
or
mov
negl
insb
inc
and
and
lds
mov
sub
addr16
lods
jl
lock
repz
lock
test
scas
adc
imul
test
ja
cmp
or
or
pop
pop
and
std
imul
inc
pop
insl
mov
lahf
adc
stos
push
pop
loop
rclb
jnp
mov
dec
push
mov
out
mov
jecxz
les
iret
mov
cmpsl
or
mov
mov
sbb
adc
fidivl
dec
lods
das
add
int3
in
mov
imul
xchg
add
cmp
mov
fdivrl
clc
int3
fistps
jb
faddl
bound
xchg
lcall
mov
dec
leave
add
scas
push
fbstp
dec
jb
or
jnp
jnp
xlat
adc
add
mov
and
inc
xchg
adc
xor
add
fisttpl
clc
rorb
push
and
cmp
lea
lods
adc
sub
fistpl
add
in
jge
and
sub
mov
scas
stos
shrb
lret
cltd
sub
jge
rcrl
sbb
sbb
xchg
push
mov
lcall
mov
and
out
xor
aam
ja
test
rorl
adc
sub
xor
lret
sbb
sub
push
adc
cltd
or
cld
sub
xchg
mov
inc
aas
addr16
cld
xlat
or
movsb
mov
je
imul
sbbb
in
jnp
mov
sbb
pusha
fbstp
dec
fimuls
stos
inc
test
mov
and
in
stc
call
dec
inc
notl
std
outsb
add
cmp
jno
xor
cs
xor
fdivp
fs
ja
bound
lahf
insl
roll
dec
xchg
pop
das
out
in
push
bound
fsincos
jb
ret
in
fdivl
jge
mov
sahf
aam
das
in
jne
inc
sahf
cmpsb
test
sbb
sarb
mov
out
scas
cmp
mov
xchg
arpl
xor
scas
mov
cwtl
mov
xchg
xor
outsl
outsb
sub
rcl
repnz
scas
in
inc
lret
mov
jge
stc
outsb
xor
cmpsb
arpl
js
push
pop
ljmp
or
movsb
or
dec
test
fists
mov
sahf
adc
lea
mov
dec
xor
lahf
xor
or
push
dec
xchg
fdiv
inc
addr16
mov
es
pop
dec
clc
pop
jo
and
mov
in
mov
loopne
call
daa
sub
scas
cwtl
lret
mov
ljmp
or
lods
xchg
jne
dec
sbb
sub
jge
sub
ret
xor
outsb
push
shl
ffree
pop
fimull
push
into
insl
outsb
pop
hlt
pop
mov
lods
stos
pushf
push
xchg
push
mov
mov
je
push
inc
and
and
cmp
imulb
scas
aaa
add
jecxz
mov
add
stos
mov
add
std
pop
xchg
ds
outsb
jg
cmc
jmp
push
push
inc
lods
adc
or
sahf
cmp
js
lcall
adcb
mov
cltd
imul
sbb
xor
jge
xchg
lods
dec
mov
lods
je
aam
scas
lret
in
in
cmpsb
icebp
lret
jns
xor
sarb
xchg
lock
mov
cmpsl
clc
sub
xchg
cld
enter
test
ret
pop
aaa
test
clc
shlb
into
data16
adc
out
mov
lods
cmp
or
adc
xor
out
or
test
cmp
insl
pop
into
les
in
mov
call
push
fld
call
fdivrp
adc
dec
loop
cmpsl
imul
leave
lds
fcomi
push
sbb
and
mov
or
push
xchg
xchg
test
xchg
clc
add
jle
lahf
fwait
mov
xchg
bswap
aaa
cmp
int
or
lcall
popf
and
imul
movsb
or
jne
shl
lahf
xor
inc
cmp
push
adc
mov
into
or
push
add
xchg
loopne
scas
wrmsr
icebp
push
repz
mov
insl
cmp
cmpsb
sahf
inc
mov
fwait
cs
clc
adc
iret
mov
xor
jmpw
cmp
cwtl
ficompl
xchg
test
sbb
xchg
mov
lock
adc
jmp
sbb
push
int3
sub
cwtl
imul
mov
and
dec
leave
rorb
pop
int
mov
dec
shr
push
stos
pusha
idivb
test
xchg
pop
fcomi
cmp
and
aad
inc
insb
lea
cld
jl
lcall
test
and
leave
es
sub
xor
imul
ret
mov
push
ret
xlat
mov
mov
fidivl
mov
adc
mov
jb
adc
int
enter
dec
ss
jg
lock
das
fidivs
gs
lods
movsb
cmp
inc
rcl
dec
mov
cmp
cmp
mov
scas
fidivs
cmp
pop
mov
je
enter
inc
cmc
inc
test
inc
sub
xor
mov
mov
shlb
or
bound
faddl
out
scas
jl
pop
pop
jb
insl
add
lret
in
mov
adc
jl
test
dec
insb
hlt
pop
enter
iret
inc
adc
stos
adc
cmp
int
popa
lock
cmc
sub
mov
xlat
ja
push
jbe
add
push
mov
lret
push
je
arpl
out
push
fcompl
daa
and
mov
aas
push
dec
jecxz
jne
mov
mov
scas
push
push
pop
loopne
lret
cwtl
cvtps2pd
lret
arpl
xchg
mov
cmc
das
fisubrs
mov
int
jl
inc
pushf
nop
or
fimuls
mov
adc
sub
test
push
jb
clc
push
xchg
lahf
jge
jbe
cmp
test
add
sbb
pop
push
aaa
sub
popa
cli
jno
movsl
jg
cltd
out
mov
loopne
into
add
sub
cmp
and
pushl
insb
in
push
divl
xchg
mov
pop
lods
add
ltr
flds
jl
or
adc
mov
xchg
cmp
rcrb
sti
je
shlb
aad
mov
repz
mov
loopne
repz
repz
dec
fimuls
popa
xor
push
sbb
push
xchg
mov
push
xchg
xor
insl
or
jne
lods
out
jne
pusha
hlt
lret
insb
jmp
mov
fildl
push
mov
jne
sbb
fidivrs
cmp
adc
cmp
dec
daa
sbb
xor
dec
adc
xor
mov
add
push
icebp
xor
and
inc
incl
js
lcall
xchg
fs
dec
inc
pop
xor
sub
nop
lcall
dec
mov
stos
and
dec
adc
enter
add
and
cli
adcl
mov
mov
inc
jmp
cs
and
mov
inc
pop
and
push
and
mov
or
push
cmp
add
loope
js
loop
leave
aad
fidivs
in
jg
movsb
and
ret
sub
xor
xlat
jne
jnp
out
hlt
xchg
add
cmp
cmp
adc
into
pop
add
mov
inc
pop
inc
insl
mov
fmuls
arpl
inc
ret
inc
popf
imul
cmpsl
test
mov
pop
cmp
add
jno
add
leave
inc
fldenv
mov
jg
iret
sub
xor
call
push
inc
mov
xchg
mov
adc
mov
movsl
aad
mov
dec
fnstenv
aam
pop
jmp
cmc
cmpl
call
mov
fstp
es
and
out
out
cmc
bnd
rcll
out
jp
sbb
leave
test
insb
lret
lret
repnz
shl
jl
lods
mov
mov
cmp
xor
pop
adc
push
scas
inc
adc
adc
imul
sub
js
jb
stc
mov
insl
jne
push
push
imul
scas
loopne
and
shrl
xchg
jmp
lods
cmp
shlb
aas
mov
xchg
sub
fimull
call
imul
aaa
sub
jl
arpl
je
rol
xchg
hlt
cltd
cli
jno
into
xchg
ret
push
movsl
mov
mov
sbb
sbb
fsubs
mov
or
iret
out
jge
loopne
mov
cld
dec
testb
push
or
hlt
insb
arpl
push
pusha
sahf
sti
ja
and
filds
jne
sbb
hlt
and
jnp
xchg
enter
int
fbstp
ds
aad
scas
xorb
jge
xor
jnp
data16
sbb
sbb
movsb
mov
scas
ljmp
jno
enter
out
orl
roll
aaa
and
les
ljmp
rol
mov
sbb
fidivrl
push
xor
adc
or
add
mov
and
jbe
xchg
xor
jne
lea
ljmp
std
jns
dec
test
loope
or
pop
mov
or
ret
sbb
shlb
lahf
push
pop
lds
mov
dec
mov
cltd
push
test
mov
daa
test
sbb
sub
mov
mov
nop
insb
jmp
mov
mov
push
cmp
cmp
xchg
dec
mov
xchg
scas
pushf
js
pmulhuw
mov
sub
xorl
and
or
push
mov
jp
xchg
dec
inc
xchg
aad
cltd
mov
sbb
les
rorl
mov
call
dec
fdivl
sub
mov
inc
fsts
xorl
sbb
andl
and
xlat
into
in
clc
mov
mov
js
mov
lcall
add
loop
mov
sahf
fisttpl
imul
jb
xor
inc
fbld
add
ret
mov
pop
lock
xchg
shrl
mov
xchg
adc
pop
dec
sbb
stc
add
call
pop
xchg
rorl
adc
shrb
add
int
or
sbb
pusha
rolb
ds
int3
pop
ss
outsb
negb
fs
push
pop
sub
int3
cmp
or
or
pop
aad
bound
nop
xchg
jmp
repz
dec
ret
cmp
cmp
cmc
sbb
rcll
push
inc
les
icebp
push
push
cmp
jl
or
inc
aaa
das
call
gs
ss
cmp
mov
loopne
adc
gs
mov
les
push
push
rcll
dec
dec
jne
mov
imul
loop
stos
pop
rorb
sbb
sub
inc
sbb
xchg
call
aad
out
inc
push
jb
adc
jae
adc
adc
mov
push
push
addr16
or
arpl
mov
out
iret
cltd
push
out
bound
lds
dec
inc
fists
in
cltd
cmp
inc
or
lock
out
pusha
xor
sub
add
xor
push
xchg
xchg
fwait
aad
ds
fsubrl
mov
movsb
addr16
sbb
sbb
jle
popl
xchg
out
nop
xchg
push
sarb
std
sbb
xlat
shl
xor
cmp
xor
enter
and
pop
pop
lds
cmp
xchg
out
stos
mov
sbb
repnz
jecxz
and
xor
push
sub
fisubrl
enter
in
mov
fldt
out
inc
and
mov
rorb
fsubl
outsb
add
out
in
or
push
lds
fadd
cwtl
icebp
sub
ret
int3
pop
stos
cld
sub
pop
scas
adc
js,pn
js
pop
cmp
in
pop
fidivrl
fldz
insb
xor
sarb
push
stos
sbb
mov
mov
dec
cmp
push
or
adc
popf
repnz
cmovs
jo
ficoms
ss
xor
mov
popa
fcomps
bound
push
mov
jmp
cmpsl
dec
jmp
inc
nop
enter
popl
mov
repnz
pop
jl
mov
cltd
cld
cmp
sbb
bound
sar
icebp
pop
cmp
pop
cltd
push
mov
in
mov
fimull
or
scas
bound
test
mov
add
cmp
out
xchg
mov
mov
cmpsb
xchg
hlt
gs
inc
and
pushf
xor
push
sub
xchg
xchg
lret
pop
test
push
mov
insb
stos
adc
sbb
ds
test
mov
xchg
adc
jmp
lret
inc
sbbl
dec
in
rol
gs
int
mov
adc
sbb
mov
cmp
sbb
mov
jp
cli
sub
pop
add
sahf
cmpb
repz
dec
int
fmull
adc
nop
repz
in
mov
movsb
sbb
jo
fstps
or
mov
mov
push
dec
inc
aam
xchg
imul
idivb
xor
sub
mov
push
movsl
mov
cltd
mov
jo
rorb
pop
jae
push
push
cmp
cs
sbb
lds
cmpb
xchg
dec
das
xchg
adcb
mov
mov
inc
cmp
dec
mov
xor
mov
loop
sub
cmp
addr16
aaa
push
mov
pushf
mov
lret
shrl
inc
push
jp
inc
lcall
movsl
adc
cmovns
xchg
fwait
xchg
call
mov
outsl
sub
adc
lock
mov
arpl
aas
push
fistl
or
outsb
xchg
jns
sbb
ja
add
push
fwait
repnz
mov
mov
mov
jmp
ss
cmp
pushf
aad
inc
les
clc
xchg
dec
cmp
scas
pop
pusha
inc
stc
fwait
push
ljmp
jecxz
inc
int
and
push
adc
inc
adc
js
mov
add
in
or
jp
or
inc
or
test
shl
sti
xchg
or
icebp
cs
stos
loope
pop
mov
cs
mov
icebp
ds
lret
mov
push
nop
inc
jnp
jmp
outsl
mov
std
sahf
sbb
xchg
je
ds
andb
xchg
fnstcw
and
cmp
popf
push
stos
push
mov
mov
pop
adc
dec
divb
rclb
or
stc
lock
mov
sbb
ret
lret
mov
es
fidivs
adc
cmp
dec
imul
test
cs
ret
add
arpl
and
mov
pop
std
cs
and
sbb
imul
pusha
mov
jb
xorb
out
sub
adc
pop
jb
sbb
repnz
js
das
push
mov
cs
dec
fs
mov
ja
scas
cmp
out
addr16
add
and
int3
test
mov
or
dec
push
jecxz,pn
mov
push
fstps
es
data16
ds
cmpsl
pop
ds
pop
dec
les
or
add
push
sub
xor
or
sbb
in
pop
jne
mov
pushl
sub
sub
push
add
je
push
push
cmp
pop
mov
xchg
div
or
enter
lret
dec
inc
jp
lret
dec
inc
leave
popf
test
orb
dec
jbe
xchg
mov
inc
pop
jecxz
leave
fcomip
sahf
lcall
je
out
inc
and
pop
or
fwait
or
dec
mov
fsubrl
pop
sub
mov
xchg
sbbl
and
loope
jg
jnp
fdivs
data16
jp
xchg
lock
adc
xchg
xor
mov
add
stc
lock
mov
out
fnsave
lods
mov
in
scas
cmpsb
sarl
sbb
sub
cmc
in
or
add
push
cmp
shll
lahf
out
dec
repnz
inc
negb
addr16
aas
test
insb
mov
loop
mov
loop
bound
cmp
jbe
fstl
inc
cmp
cmpsb
frstor
mov
ja
iret
push
push
or
xor
pop
out
jge
imull
ljmp
sbb
movsb
add
ljmp
xchg
jl
lods
xor
in
test
mov
aam
loop
or
add
sub
sub
jno
test
xor
loop
xor
outsl
jnp
inc
mov
popa
rcrb
ss
sbb
lahf
test
jne
lods
repz
and
dec
loop
daa
test
inc
fcmovbe
mov
jecxz
mov
xchg
mov
sub
addr16
cwtl
in
add
jbe
push
mov
push
imul
xchg
push
ss
jae
mov
sbb
sub
sbb
cwtl
hlt
aas
out
xlat
insl
ss
mov
dec
lods
and
shl
add
sahf
xor
cmpsb
dec
out
and
or
daa
std
shlb
jmp
je
push
sti
xor
pop
fwait
pop
mov
mov
int3
xor
pop
add
xchg
ljmp
int3
inc
mov
sub
push
mov
arpl
cld
xchg
push
push
cli
jb
mov
dec
repz
xchg
aaa
aas
out
add
sub
push
dec
loop
lcall
push
arpl
jmp
mov
mov
sub
lcall
jbe
lcall
in
cmp
push
mov
mov
dec
fiadds
sbb
and
sbb
mov
xor
int3
inc
xchg
lahf
mov
adc
pop
or
scas
out
pop
mov
stc
hlt
or
call
sbb
aaa
jmp
jl
cs
dec
es
xchg
push
xor
jnp
sbb
stos
repz
cmp
pop
pop
aad
jb
add
jmp
lret
and
movl
mov
xchg
das
js
jmp
inc
mov
jmp
ror
jo
cmpsb
gs
sbb
loop
in
imul
mov
xchg
and
push
sub
out
adc
cmp
es
inc
or
ficompl
insl
hlt
mov
pop
inc
sbb
or
aam
dec
mov
pop
jge
call
and
xor
and
cmp
shrl
loop
mov
sub
xchg
inc
and
out
push
cld
fstps
cmp
cmp
ds
xor
xchg
inc
mov
jo
ficoms
sub
pusha
mov
jne
jg
orl
xor
jp
call
ljmp
in
jle
inc
mov
scas
xorb
std
andl
loop
push
push
pop
negl
rorb
jg
and
nop
mov
sub
sub
mov
into
js
cld
push
test
subb
jb
mov
clc
push
sbb
popf
mov
mov
inc
jae
call
adc
and
rorl
ljmp
add
pop
inc
rclb
sbb
mov
stc
test
dec
stos
addr16
xchg
cmp
pop
lea
out
addr16
outsb
cmpsl
mov
xlat
into
xchg
sbbb
inc
mov
push
gs
cmp
arpl
jecxz
pop
mov
inc
aad
xor
sub
aad
test
sub
xor
aam
xchg
sbb
std
sbb
adc
push
jg
or
sbb
dec
in
jmp
cmp
cmp
scas
inc
fldl
push
int3
loopne
cli
or
arpl
mov
adc
cmp
loope
mov
xchg
out
jecxz
arpl
cmpsb
inc
and
mov
into
cltd
pop
out
sbb
push
js
mov
adc
popa
lret
push
pop
lods
mov
mov
sub
ret
in
out
std
jns
rolb
stc
jg
pavgb
sbb
aad
insl
aad
add
insl
hlt
in
jle
gs
testb
mov
push
int
add
fstpt
xchg
notb
or
je
insl
add
fdivp
test
sbb
fwait
cwtl
loope
popa
jp
iret
cmpl
frstpm(287
sti
jae
or
pop
adc
mov
lock
ret
scas
jnp
enter
push
mov
or
ficoml
sub
mov
outsb
adc
mov
sahf
ret
inc
lahf
sub
rcpps
les
mov
cwtl
dec
push
xchg
rolb
cli
nop
xor
mov
es
pop
push
mov
out
pop
sbb
or
ret
lods
fstl
fsubrl
jmp
cmp
lret
inc
cmp
sbb
popa
dec
or
cmp
or
push
sub
arpl
cmc
sbb
push
inc
int
in
test
bound
stos
xchg
ret
pop
fldt
movsl
sahf
dec
cld
int
neg
test
jno
dec
push
jp
sbb
push
pop
sub
mov
mov
xor
aam
in
add
jecxz
fmuls
int3
rolb
xor
push
cltd
test
push
dec
xlat
ds
xor
repnz
mov
adc
push
lods
and
cmp
mov
push
xor
and
pop
dec
add
cwtl
xor
aad
in
ds
sti
add
xchg
lret
fisttpll
dec
sahf
iret
jle
and
adc
shl
notb
iret
repnz
sahf
popa
scas
cmp
orb
jbe
sbb
inc
adc
insb
lahf
fnstsw
sbb
loopne
hlt
rol
push
jno
popf
xor
or
cs
pop
mov
int
rcll
xorb
xchg
cli
pop
je
dec
adc
loop
imul
mov
mov
xchg
fists
aad
sbb
pushf
fildl
pop
or
movsl
push
je
xchg
xchg
xchg
fidivs
or
mov
sbb
repz
cmpsb
pop
inc
loop
je
xchg
movsl
pop
aam
jl
aaa
out
inc
repz
jmp
and
or
jge
dec
daa
mov
lds
scas
fldl
mov
int
lods
sub
icebp
pop
movb
or
repz
pop
scas
mov
cmp
aaa
dec
imul
adc
lahf
sbb
xchg
imull
imul
push
in
pop
imul
sub
push
dec
mov
push
pushf
ret
xchg
pop
lds
inc
mov
imul
test
push
sub
les
pop
adc
mov
cltd
leave
sub
mov
jbe
cmp
aam
out
cmpsb
pop
pop
mov
sti
test
mov
repnz
aam
les
imull
xor
mov
scas
cli
fstps
jl
cltd
dec
sub
in
sub
test
shl
jne
popa
push
jmp
inc
pop
gs
pop
add
push
movsl
js
mov
lahf
cmp
loope
xor
stos
add
xor
and
sbb
cs
xor
inc
cmp
icebp
insl
data16
cmpsb
mov
mov
and
sbb
sbb
add
sahf
fldt
cmpb
mov
imul
sub
and
fistpll
les
jmp
sbb
incl
dec
lds
xchg
or
lock
imul
lcall
mov
xchg
push
mov
cmp
adc
aaa
cs
lcall
mov
inc
mov
adc
xchg
or
scas
or
lock
cmc
xor
loop
dec
ret
js
out
or
stos
repnz
fbstp
sub
cli
sbb
xor
adc
mov
call
cmp
jle
jg
jg
gs
jo
data16
mov
jne
sub
adc
js
add
lods
ret
and
inc
sbb
jecxz
mov
xchg
mov
mov
inc
popa
dec
imul
scas
cmpb
scas
cmpsb
inc
sbb
inc
mov
call
push
out
fcoms
sub
into
push
test
dec
pop
idiv
or
fs
repz
pop
xchg
rcrl
je
push
push
push
gs
cmp
test
out
or
dec
add
fisttpl
dec
pushf
pop
ret
xchg
sub
adc
inc
shll
xor
dec
test
xor
xor
jg
sub
shl
or
and
xlat
iret
add
pop
push
adc
pop
loop
push
jne
cmp
insl
sub
or
mov
pop
dec
stos
cmp
movsb
mov
scas
je
shll
add
scas
add
cmp
mov
mov
mov
lods
mov
dec
das
cmpxchg
icebp
xchg
sub
mov
repz
adc
rcrb
stos
rorb
and
inc
shl
je
sub
arpl
andl
sub
sub
stos
jmp
mov
scas
out
cli
scas
xchg
dec
jp
xchg
shrb
xor
call
lret
xor
pop
dec
adc
enter
ljmp
test
int
aad
cmp
ret
xchg
aam
scas
dec
dec
sti
imull
dec
lds
xor
cmp
aaa
bound
add
cmp
sbb
lret
insl
xchg
lods
or
fnstsw
aaa
sbb
cmpsb
fsts
push
add
cmp
lahf
sub
icebp
data16
ret
pop
xchg
inc
rcll
js
mov
fistl
jl
ds
fists
inc
xchg
xor
mov
add
mov
icebp
cmp
lock
stos
andl
push
cmp
hlt
adc
out
aas
insb
hlt
imul
out
mov
cmpsl
add
cmp
cmp
inc
loop
jge
lahf
ljmp
in
mov
jg
pop
push
or
inc
cmpsl
mov
cmp
shll
jne
mov
adc
cs
jecxz
ss
sbb
clc
jmp
inc
sbb
inc
mov
sbb
into
dec
aaa
xchg
test
movsb
filds
push
sub
push
xchg
add
jns
mov
mov
daa
into
sub
sub
add
sbb
aaa
fxch
jl
dec
adc
lret
fcomp
cmp
fldl
lods
xorb
xorl
jo
pop
ss
sbb
dec
or
je
repnz
sub
fldl
sub
dec
inc
cmp
stos
and
mov
int3
ret
inc
cld
adc
dec
insb
mov
lret
mov
cmp
in
push
add
jp
push
xchg
lds
jp
xor
int3
sub
pop
push
vpcomuq
test
cld
adc
stc
jmp
repnz
fs
in
loope
mov
xor
mulb
xchg
xchg
inc
das
movl
cmpsl
inc
ret
jmp
mov
dec
loop
lahf
test
movsb
sub
lahf
xlat
mulb
or
mov
stc
cmc
push
in
ja
fisttpll
sub
scas
out
das
leave
xor
fcmovbe
lods
sub
fistpll
lods
shl
jbe
loop
insl
and
repz
mov
popf
shrl
out
inc
stc
or
xchg
dec
sahf
jge
push
stos
js
push
jbe
mov
pop
loop
adc
and
mov
push
and
sbb
fnstenv
push
adc
dec
jne
or
adc
jp
les
popa
nop
xor
mov
adc
test
repz
jmp
lods
outsl
fs
movsl
bound
scas
cmpsb
inc
sbb
mov
dec
jnp
lcall
dec
adcb
or
paddw
sbb
stos
pop
lods
cmc
cmp
imul
inc
vpackuswb
out
xor
mov
jae
mov
popf
aam
add
add
inc
cmp
xchg
insb
rolb
jb
inc
es
push
mov
pop
lahf
jo
push
dec
push
hlt
mov
ret
mov
loop
imul
dec
subl
int3
iret
sbb
mov
sbb
or
ret
pusha
push
imul
sub
xor
clc
imulb
ret
adc
push
negl
loopne
mov
inc
mov
iret
ljmp
cld
mov
fwait
pop
push
sub
gs
or
fwait
adc
lea
xlat
imul
ficoml
lea
scas
dec
mov
add
shrb
cs
sar
dec
inc
std
push
fisubl
pop
or
out
cmp
fidivrs
sub
clc
jno
pop
loope
outsb
jmp
mov
in
stos
sub
cmpsb
inc
arpl
popa
pusha
pop
in
add
mov
jno
clc
je
mov
or
or
cmp
push
add
sbb
pop
xchg
and
sbb
xor
jb
xchg
and
ss
mov
fstl
scas
fstl
leave
jg
push
add
mov
cltd
and
cmp
cs
sub
out
in
or
stc
lock
cmp
jl
dec
sub
insb
sbb
movsl
xchg
xchg
cli
and
inc
and
sbb
js
inc
mov
ljmp
stos
enter
aam
lock
call
orl
insb
cmp
adc
or
lods
rcrl
jae
sbb
inc
popa
inc
iret
and
mov
ljmp
jmp
out
push
add
leave
fidivs
add
loopne
arpl
movl
dec
insb
enter
into
inc
mov
xor
cmp
fmulp
add
cmpsb
in
scas
icebp
dec
in
mov
pop
add
rcrb
cs
fsubrl
cs
push
sub
lods
std
cltd
jo
imul
pop
aam
sub
js
dec
decb
mov
mov
popf
test
jno
adc
push
fmull
in
pusha
pop
sub
sbb
int3
inc
and
jg
scas
push
and
outsl
sbb
leave
inc
jle
test
xchg
stos
pushf
repnz
jnp
outsl
int3
adc
push
adc
pop
testb
jne
orl
push
std
mov
lods
sbb
out
mov
ds
mov
jl
loopne
push
add
and
sub
divl
das
hlt
js
and
adc
push
ds
sub
bnd
dec
aad
mov
outsl
addr16
mov
sbb
mov
mov
adc
mov
push
push
dec
adc
jle
pop
xor
cli
push
xchg
or
jmp
adc
add
and
mov
cs
mov
or
or
ss
jbe
adcb
in
inc
sarl
notb
testl
xchg
ja
push
sbb
inc
loop
cltd
push
in
pop
out
xchg
pop
or
fdivrl
push
pop
and
sub
movsb
mov
cwtl
jmp
jns
jns
in
nop
test
and
test
mov
in
gs
jae
pop
lea
jp
cmpsl
cwtl
fs
clc
pop
mov
dec
in
adc
in
pop
dec
xor
push
mov
cmpsb
out
js
lahf
xor
mov
push
mov
dec
xor
fsubrl
cli
mov
insl
inc
mov
cmp
mov
sub
jae
lret
pop
aaa
movsb
sbb
filds
sub
pop
lods
sub
out
popf
add
mov
dec
aas
divb
mov
mov
xor
cmp
jbe
mov
test
call
dec
pop
nop
addr16
rorb
mov
arpl
nop
sub
movsl
fstpt
mov
add
sub
xor
loopne
ds
jmp
dec
cmp
mov
sahf
add
jmp
and
out
rorb
iret
xor
rep
int3
and
xor
pop
mov
sub
pushf
fstpt
cmp
jne
mov
pop
mov
bound
and
inc
pop
cmp
das
out
or
sub
stc
dec
mov
fldenv
dec
and
leave
imul
mov
pop
out
push
adc
cmp
jge
aam
cltd
shr
cmc
lcall
pop
sti
ja
jge
mov
pop
aaa
push
pop
or
test
jno
and
test
xlat
dec
sahf
mov
add
in
inc
and
mov
sbb
sub
cmp
jg
fucomp
mov
pop
mov
in
push
clc
pop
push
call
fstpt
repnz
in
pop
xor
xchg
insb
jl
mov
mov
or
push
test
and
cmpsb
xor
setg
inc
sbb
in
jl
mov
inc
push
test
or
into
inc
bound
in
cmp
jl
lock
icebp
loope
ss
jno
imul
loopne
xchg
push
shlb
and
xor
adc
in
movsb
xor
js
mov
push
mov
fsubrs
inc
imul
stos
gs
clc
data16
and
push
ljmp
xchg
insb
out
xor
mov
movsw
xor
and
mov
jne
bound
imul
xlat
cmp
dec
aaa
push
shlb
inc
jge
ljmp
pop
push
sub
jno
pushf
adc
sbb
ja
stos
imul
sub
mov
mov
cmp
xchg
lods
movsl
ret
sub
daa
mov
and
aad
cmpsb
fcompl
mov
sub
cltd
les
stc
mov
scas
incb
out
imul
mov
cmp
cli
sbb
pop
pop
popf
clc
adc
pop
and
scas
stos
in
sbb
rorl
cs
call
mov
cmc
cmc
mov
xchg
pop
sbb
add
loop
dec
xchg
mov
pusha
mov
and
inc
cmp
repz
jg
cmp
xchg
cmp
lret
lret
xchg
or
fldt
sub
mov
test
insl
inc
jg
add
pop
inc
jge
mov
es
and
sbb
insb
sub
xchg
pop
sbb
add
mov
sub
jge
add
dec
cmp
loope
test
adc
dec
add
fsts
popf
dec
mov
and
imul
aas
js
xor
loope
std
dec
xor
les
adc
dec
inc
rcr
out
sahf
sbb
xchg
cmpsl
negb
cmp
inc
pop
cmp
inc
not
and
fildll
sbb
lock
gs
or
cltd
aaa
data16
test
push
es
nop
jmp
push
jnp
pop
loope
or
cmp
loopne
and
jle
ja
mov
mov
sbb
rorb
sub
or
adc
in
add
jmp
pop
jmp
sarl
pop
mov
mov
jb
enter
stc
sahf
cmp
insb
lret
cmc
ret
mov
jle
cmpsl
mov
notb
test
sbb
test
mov
cmp
push
inc
pop
rorl
mov
std
inc
mov
mov
ja
adc
repnz
cmp
movsl
data16
push
cmpsb
push
lret
stos
push
fisubl
mov
outsb
and
and
push
and
cld
dec
xlat
popl
inc
push
cwtl
sahf
inc
movsb
xchg
sub
mov
sahf
push
gs
mov
cmp
stos
in
insl
cmp
shlb
lea
jge
xor
mov
inc
mov
cmpsb
mov
fisubl
xchg
pop
sbbl
jl
adc
repnz
imul
mov
sti
xchg
in
sbb
push
mov
jnp
xor
push
shll
scas
hlt
jmp
mov
xlat
ficoms
aad
js
push
sub
icebp
pop
lods
adc
int
and
les
xchg
and
mov
das
cld
sarl
jl
cmp
jae
push
dec
or
ss
ret
mov
ror
push
mov
dec
fsubl
push
daa
inc
in
rcpps
sbb
xchg
icebp
fisubrs
jb
jecxz
xor
inc
sbb
inc
jmp
sub
add
fstps
push
inc
mov
lea
sbb
inc
test
lahf
dec
dec
lea
mov
xlat
sbb
mov
cmp
push
xchg
jne
dec
pop
xlat
ljmp
jb
popf
sub
pop
and
fsub
pusha
leave
mov
pusha
push
cs
lret
int3
mov
lea
out
lods
pop
cwtl
int
adc
js
xor
jno
mov
cmp
cmc
add
js
xor
pop
add
push
ljmp
int
sbb
cli
jbe
popf
mov
adc
cmp
inc
mov
xchg
mov
testl
mov
inc
push
dec
mov
leave
push
adc
push
pop
int3
pop
add
cmp
xor
call
xor
insl
pushf
loope
cmpl
mov
or
popf
and
sbb
add
and
inc
adc
aam
stos
sub
repz
sbb
or
stos
ja
lahf
add
xchg
or
roll
fwait
add
mov
in
cmp
add
loop
aam
adc
and
lahf
rep
cmp
fists
subb
js
movsl
call
push
dec
adc
add
rorb
or
insb
sub
mov
psllq
jge,pn
mov
int
shl
loope
hlt
adc
adc
lret
loopne
adc
mov
ss
arpl
xor
roll
imul
test
cmpsb
push
push
movsb
mov
cmpsb
test
fistl
sbbb
sbb
push
shrb
int3
push
push
add
fildll
lods
and
lods
inc
int3
popf
mov
lret
sub
push
jp
movsl
adc
fmul
jne
cmp
rcl
decl
aas
js
ret
repnz
mov
jmp
fnstcw
dec
sbb
push
inc
arpl
stc
mov
pop
xchg
or
sbb
jae
shlb
lahf
aam
push
int3
sub
fnstsw
dec
sub
jbe
aaa
xchg
mov
repz
dec
fsubr
mov
out
daa
pusha
out
mov
jns
sub
push
gs
shll
and
pop
pop
lock
inc
scas
mov
scas
aam
sbb
call
add
or
or
sbb
iret
movsb
adc
add
xchg
mov
sub
sbb
and
cmp
adc
mov
shrl
and
cwtl
inc
inc
inc
imul
sbb
int3
xchg
or
int
daa
test
mov
rcrl
int
jmp
cmp
pop
iret
int
gs
push
add
shrb
push
lods
movsl
int
xchg
sub
rorl
stos
dec
adc
fsubs
jae
leave
repz
mov
popf
sbb
push
dec
xchg
scas
push
add
lret
pop
out
mov
mov
pop
dec
out
in
or
fwait
dec
lods
add
sub
xchg
cmc
xchg
push
push
out
loopne
shll
shll
fidivl
je
punpckhbw
lock
jb
adcl
xchg
in
xchg
xor
loopne
pop
mov
mov
jo
vfnmsub132sd
in
sub
or
fidivl
xchg
bound
addr16
jns
dec
xor
mov
inc
hlt
xchg
in
call
int3
enter
cmp
loopne
movsb
pushf
jae
push
incb
adc
jle
xchg
jb
cmpsl
adc
jno
icebp
sbbb
or
cmpl
cmpsb
movsb
mov
pushf
test
lret
out
je
cmp
fbld
jle
into
pop
sub
sarl
mov
xor
mov
jl
mov
xchg
adc
sub
add
out
ret
mov
shr
mov
xlat
das
popa
out
add
les
scas
leave
xor
or
cs
data16
or
lahf
cs
or
out
psubw
jge
mov
mov
inc
mov
cmp
aas
push
mov
push
add
dec
add
imul
out
mov
testl
and
call
call
daa
call
xchg
mov
and
cmp
mov
cmp
movsl
iret
inc
cmpsl
sbb
and
cmp
cmp
xchg
out
xchg
sbb
jmp
call
mov
lret
pop
cmp
push
mov
pop
data16
pop
jne
inc
lahf
std
dec
xlat
and
mov
fldenv
nop
aam
outsl
or
pop
fisubl
std
pop
lcall
lret
adc
mov
push
call
loope
xor
xorl
mov
dec
fstps
orl
js
and
jne
mov
dec
pop
adc
xchg
js
add
mov
fisubrs
sar
xchg
in
jne
push
push
imul
popa
xchg
lret
pop
bound
orb
mov
mov
insl
decb
mov
testl
inc
mov
push
cs
jbe
xchg
and
add
pop
outsb
mov
mov
dec
sbbb
sub
out
les
xor
bound
mov
sbb
and
pop
cmp
stos
sti
adc
add
pusha
inc
lret
mov
cmpb
pushf
imul
mov
andl
sbb
cs
push
fidivrl
shll
mov
fwait
xor
sub
mov
lock
test
incb
mov
enter
add
test
dec
test
repz
cmp
push
or
cmp
rorl
dec
inc
insl
lcall
add
inc
enter
xor
lcall
and
cmpl
pop
push
adc
fiaddl
cmc
pop
push
std
int3
xor
outsb
pop
push
shlb
in
jmp
rcl
mov
repz
aaa
push
add
sarb
push
movsl
inc
xchg
pop
inc
retw
pop
icebp
loopne
lahf
and
jp
pop
inc
iret
sbb
inc
and
fiadds
pop
jecxz
xchg
inc
push
dec
in
and
inc
xchg
aas
jcxz
gs
sub
leave
mov
mov
stos
cmp
imul
pop
add
pop
push
dec
mov
or
dec
stos
int3
arpl
bound
pop
xlat
pop
cmpsl
cmp
mov
pusha
aam
or
and
movsl
mov
mov
mov
shlb
shr
mov
out
les
and
jge
add
adc
add
arpl
fdivl
pop
roll
fnstsw
fsts
lds
test
dec
push
xchg
jle
imul
das
sar
cwtl
jecxz
mov
enter
pop
mov
out
pushf
pop
dec
jo
fwait
xchg
sub
xchg
xchg
popa
les
stc
inc
add
mov
call
cld
je
mov
bound
mov
int
ss
jbe
std
loopne
adc
push
mov
sbb
mov
out
jne
cmp
shrl
addr16
xor
inc
mov
xchg
int
push
mov
xchg
push
push
dec
test
jecxz
in
pop
int
dec
fldenv
inc
mov
adc
repnz
jae
ds
mov
pop
lcall
pop
cmp
lahf
outsl
aam
ficompl
lret
xor
pop
jge
pop
clc
push
mov
push
icebp
cmp
fdivrs
and
orl
push
in
cmp
xchg
imul
jmp
xchg
mov
outsl
and
lds
pop
jmp
mov
scas
adc
inc
frstor
cld
icebp
out
or
int3
jle
ja
in
insb
and
sbb
xor
adcb
daa
testb
orl
inc
int
cli
loopne
int
adc
xchg
jno
div
lcall
xchg
sti
inc
testb
out
mov
rcll
xchg
xor
aam
push
scas
cmp
xchg
or
rcrb
mov
dec
aaa
xor
pop
rorl
jge
sbb
jo
fdivs
xchg
mov
mov
lods
fwait
xor
jmp
mov
subb
mov
ja
pop
lahf
xchg
fs
sbb
hlt
test
jnp
movl
out
jl
test
gs
insb
jmp
test
add
jecxz
clc
jno
xchg
jns
hlt
xchg
mov
xchg
jp
xor
int3
push
add
cld
aas
jo
pop
xchg
rorl
inc
pushf
idivl
jb
rcrl
jnp
push
mov
jmp
je
movsb
sbb
in
std
push
jl
and
test
iret
out
aam
sub
and
mov
ds
mov
test
fstl
inc
mov
sbb
outsl
imull
outsb
aaa
xor
sbb
inc
and
repz
mov
or
movsb
and
jno
push
dec
push
cmp
insb
out
jno
stc
lds
adc
push
loopne
clc
xor
insb
lret
addr16
mov
adc
cmp
nop
cwtl
sub
fdivp
fs
dec
add
stos
rcrl
leave
pop
fcompl
fdivs
das
mov
mov
cmp
jecxz
push
xlat
out
nop
hlt
and
ret
lret
test
arpl
lock
xor
lods
dec
cmpsl
mov
lea
addr16
into
sub
clc
daa
rcr
sub
add
inc
rorb
inc
ret
or
push
call
adc
push
fstpt
mov
insl
testl
dec
stc
cmc
push
jge
insl
mov
xchg
pop
mov
lea
jmp
pusha
stc
sub
cmp
pop
leave
push
lcall
adc
add
test
aas
sbb
iret
data16
cmpsb
mov
lret
xlat
test
daa
pop
pop
shll
addr16
lods
push
cmp
lods
xchg
cmc
mov
push
add
adc
in
stos
in
sub
ljmp
xchg
inc
add
mov
mov
pop
les
xor
inc
inc
mov
and
cmp
dec
rcrb
dec
jge
jno
cmp
cmp
sub
andl
jecxz
aas
dec
sahf
mov
ds
ret
push
movsb
lret
pop
int3
pop
ret
mov
push
stc
or
std
push
call
lret
jp
cli
xchg
dec
inc
inc
scas
imul
pop
mov
jbe
add
sbb
leave
inc
push
mov
popa
ljmp
subl
out
xchg
dec
and
mov
sbb
adc
popa
push
push
xor
pop
and
pop
gs
or
jmp
inc
lods
xlat
into
in
popf
in
js
sbb
jno
add
shlb
outsb
int
test
repnz
mov
jl
aaa
cmpsb
test
daa
push
mov
jbe
push
test
js
testl
pop
xlat
nop
imul
cmp
adc
mov
call
push
xchg
shll
in
test
sub
ret
xchg
stos
imul
push
push
test
jbe
js
jg
mov
loop
add
xchg
lea
mov
sbb
loopne
cld
dec
dec
pop
xlat
rcrb
neg
xchg
sbb
sub
sbb
js
call
jle
dec
push
aas
rcll
gs
popf
xor
mov
pusha
test
mov
xchg
test
jnp
movsl
xor
clc
push
lds
ret
cwtl
add
mov
in
xor
jno
push
bound
insb
mov
mov
sub
inc
mov
leave
daa
gs
jnp
in
ljmp
adc
andb
stc
test
daa
push
les
negl
cmp
fisubs
inc
icebp
jge
lods
lods
popf
fists
or
ds
or
mov
sub
imulb
insb
add
in
jne
mov
mov
cli
icebp
pop
mov
xchg
or
jns
xchg
add
pop
jmp
pop
add
xlat
outsb
xchg
dec
in
sti
ja
pop
mov
popa
sbb
and
fildl
mov
and
xchg
jno
cwtl
clc
int
push
jo
movsl
xor
pusha
inc
sbb
setl
jge
aam
lods
dec
dec
loope
push
jno
aam
pop
lret
dec
xor
jecxz
sti
xchg
adc
sub
out
je
dec
or
adc
into
in
decl
out
les
bound
pop
xchg
xor
add
lret
mov
hlt
cmc
or
into
push
int
dec
or
sub
lock
test
rclb
push
and
fidivrs
sti
jp
inc
lret
dec
mov
xchg
inc
ror
pop
lret
push
or
ss
mov
aaa
clc
mov
mov
mov
jle
or
int3
shl
mov
sub
js
mov
lea
xchg
and
add
pop
lds
aam
dec
xorl
and
cmp
pushf
ret
pushf
jp
gs
popf
popa
mov
out
dec
gs
cmpsl
idiv
push
cmpsl
sub
leave
sbb
cmp
outsl
inc
aaa
or
xchg
xor
loope
test
das
inc
mov
and
cmp
sti
sarl
mov
sbb
jle
mov
pop
cmp
ret
mov
sbb
jns
ficoml
mov
data16
into
test
ja
xor
pop
in
inc
cmp
xchg
pop
cmp
in
inc
mov
cs
in
mov
jecxz
pusha
pop
xchg
fisubs
adc
mov
popf
jnp
fadds
jmp
or
adc
decl
call
and
notb
xor
or
int
xor
xor
loopne,pt
dec
clc
out
es
call
dec
lret
int3
adc
decl
call
insb
in
out
sub
cs
cmp
mov
push
xchg
xchg
jno
sbb
dec
in
mov
loope
jns
shlb
fadds
ss
movsb
inc
daa
mov
xorb
push
ljmp
js
add
cmp
lods
and
jae
pop
mov
loop
or
or
mov
ja
cmpb
mov
push
add
sbb
movsb
fcompl
xor
call
je
jle
xlat
lods
mov
dec
lret
test
cmp
insl
inc
dec
xchg
jns
mov
or
dec
enter
ret
lods
lcall
data16
cli
xchg
fisttpll
mov
das
insl
dec
popa
add
int3
rclb
or
add
das
dec
sub
pusha
pusha
pushf
mov
lea
jmp
movb
movl
jmp
pusha
movl
movb
pushf
jmp
pushl
popf
movb
pushl
ret
xor
clc
bt
pushl
popf
push
pushl
ret
pushf
popl
test
xor
stc
xor
stc
push
xor
bt
xor
bt
clc
xor
cmc
mov
xor
stc
pushf
xorl
jmp
pusha
movl
pushl
jmp
jmp
bt
xor
cmp
push
xor
test
jmp
pusha
mov
pushf
popl
call
movl
mov
mov
lea
jmp
push
jmp
xorl
pushf
xor
clc
cmc
xor
pusha
pushf
pushl
popf
pushf
movl
pushl
ret
out
es
ljmp
or
push
sbb
cmp
lret
jae
ss
mov
sub
jge
mov
push
mov
jo
out
push
rorl
dec
mov
inc
fdivr
add
ljmp
addr16
pop
cltd
bnd
sbb
inc
mov
fs
push
test
pop
sti
inc
and
imul
int3
cltd
lea
insb
roll
xchg
mov
leave
clc
or
dec
pop
in
imul
rclb
aad
push
mov
jbe
pop
mov
fidivl
dec
dec
mov
arpl
into
or
ret
push
cmpsb
mov
sub
rorb
lret
stos
pop
jle
push
ljmp
int3
adc
in
imul
pop
xor
inc
push
inc
pop
negb
jecxz
fstps
push
xchg
stos
shll
pop
mov
in
add
mov
xor
lock
repz
shl
mov
int3
inc
cmpl
adc
ror
fistpl
out
ljmp
pushf
dec
dec
and
and
add
lods
dec
xor
add
pop
pop
dec
daa
jb
xor
stos
push
xor
ret
cmc
mov
xor
pop
mov
scas
sub
mov
mov
nop
lds
mov
adc
pop
pop
push
push
std
mov
lods
icebp
imul
mov
xor
int3
and
cmpb
subl
ljmp
xchg
push
loope
ljmp
cmp
ds
fs
xchg
sbb
fldl
into
dec
push
mov
sub
jmp
orl
mov
push
movsl
dec
cmpsl
adc
fwait
adc
faddp
es
inc
and
push
repnz
push
jne
leave
ljmp
mov
insb
mov
or
pushf
cwtl
sar
mov
lret
xchg
and
mov
mull
pusha
cmp
xacquire
call
inc
into
push
sti
xor
and
push
mov
ret
xor
int
andl
leave
inc
jbe
js
out
cli
in
ret
inc
push
lods
xchg
jg
add
cltd
jecxz
push
ljmp
push
ljmp
add
ss
in
lock
shlb
xor
es
ss
insb
out
andl
and
jg
push
lahf
cmpl
pushf
sti
aad
sub
cli
rcrb
pop
and
mov
dec
movsb
gs
pop
mov
push
xchg
push
rorl
jo
shll
sahf
dec
jbe
xchg
sub
stc
mov
inc
xlat
and
lea
fdivp
jg
jae
imul
sub
xchg
fs
int3
fs
movsb
iret
cmp
aaa
pop
aas
out
push
sbb
addl
mov
lahf
xor
adc
mov
ljmp
mov
cmpsb
sbb
es
fcom
sbb
cmpl
sub
stc
mull
rcrb
mov
jno
lret
sub
xor
test
addr16
push
jge
pushf
lret
lods
outsl
ss
add
stc
or
inc
xchg
imul
fsubrs
xor
add
jno
aad
cmp
in
addr16
cmp
lahf
pop
and
sub
cmp
mov
dec
dec
cmpsb
and
jmp
daa
mov
mov
roll
lods
fisttps
mov
dec
pop
in
push
gs
in
and
int
shl
add
subb
jg
inc
ja
add
test
push
push
adc
shr
int
in
lods
cmp
movsb
dec
insl
mov
mov
cmp
mov
push
popa
repz
cmc
scas
test
xchg
mov
add
jmp
dec
cmp
adc
cs
push
xchg
sub
lods
lret
mov
std
mov
and
shll
sub
cli
push
lock
xchg
decl
sahf
cmc
insl
in
call
inc
mov
mov
scas
sahf
sbb
mov
leave
clc
jbe
inc
jne
xor
pop
adc
inc
sub
cmp
std
roll
fs
mov
arpl
mov
jo
dec
insb
sub
lret
arpl
xchg
data16
jns
ret
cmp
clc
imul
cmp
fcmovu
xor
aam
mov
and
fwait
sub
jge
repz
rorb
cmpsb
xchg
and
xchg
fwait
addr16
test
mov
lock
je
dec
mov
shlb
mov
and
sbb
sub
xchg
shlb
shll
fs
cmp
sub
mov
ffree
pushf
push
outsl
xchg
jbe
sbb
xchg
mov
sub
jbe
push
aad
adc
cmpsb
hlt
cmp
movl
test
imul
xchg
xchg
roll
adc
jnp
jle
xchg
dec
cmpsl
gs
popa
mov
testl
movl
push
pusha
lea
jmp
bt
xor
cmp
xor
clc
cmp
xor
cmc
xor
pusha
xor
clc
xorl
test
jmp
out
es
imul
popa
stos
cmp
test
repnz
mov
fs
std
jae
std
or
inc
bound
push
dec
fimull
cmpl
imul
sbb
jge
xlat
cmc
and
add
mov
mov
mov
pop
lcall
fsubr
cld
inc
les
sbb
jne
adc
lds
pop
xchg
dec
dec
mov
imulb
popf
xlat
jmp
ret
jno
mov
mov
and
sub
sub
jmp
jl
dec
addr16
or
dec
dec
pop
cld
jnp
test
push
sbb
dec
mov
push
inc
mov
shl
ss
lea
fildl
pop
je
call
dec
cmc
mov
mov
push
sbb
fs
jae
cmp
ds
jae
mov
sub
dec
sbb
dec
jne
xor
xchg
lods
xor
xchg
dec
push
adc
dec
lea
into
scas
test
mov
mov
lea
movsl
push
aam
outsb
mov
out
aas
pop
bnd
mov
dec
ljmp
jmp
and
adcb
push
adc
arpl
pop
push
dec
imul
mov
sub
into
sub
add
dec
push
cmp
out
or
sahf
xchg
sub
mov
pop
test
and
inc
pusha
test
mov
jb
mov
jb
ret
pop
ds
and
sub
jno
cld
gs
ljmp
lods
xchg
call
sub
cmp
inc
imul
ljmp
cmp
int3
or
daa
imulb
push
arpl
add
pop
mov
mov
in
imul
mov
cmp
jge
add
lods
adc
aaa
scas
cmp
mov
call
dec
mov
cmpsb
and
jb
rol
mov
push
mov
lcall
out
inc
mov
leave
cmpsl
scas
aam
loop
adcl
cmc
arpl
mov
scas
popa
dec
lcall
pop
data16
lcall
and
adc
nop
dec
adc
jbe
lods
jnp
push
lods
loope
or
xlat
push
neg
jbe
jne
xor
adc
fstpl
sbb
into
fsubrp
rorb
lock
shll
fnstenv
mov
push
popa
shlb
xchg
adc
rol
adc
mov
ja
dec
lret
or
pop
mov
insl
fdivrl
and
cwtl
dec
jae
add
movsb
pop
sbb
jle
mov
stos
icebp
std
insb
push
and
movb
xorb
mov
dec
dec
scas
push
xor
adc
cmp
push
cli
fmull
lahf
mov
loope
clc
cwtl
sarb
imul
mov
and
cmpsl
xchg
jb
mov
jmp
ss
ja
fistl
mov
daa
ficoml
mov
fildll
mov
subb
and
sub
adc
push
insl
pop
hlt
sub
adc
push
mov
pop
push
bound
mov
fdivl
icebp
rorb
sub
add
dec
cmpsb
pusha
sbb
loopne
outsl
jmp
adc
fldl
xchg
sub
lods
pusha
push
jmp
inc
rcll
mov
xchg
and
pop
add
xchg
mov
das
mov
or
or
inc
mov
adc
lods
fisttps
cli
in
imul
aaa
hlt
mov
inc
lods
ja
sti
cmp
push
test
jg
add
testb
mov
push
cmp
or
fcomi
sub
int3
mov
inc
testb
mov
jbe
sbb
pop
jg
jmp
pop
ljmp
inc
add
je
pusha
testl
popa
sarb
fistpl
mov
movsl
jge
mov
adc
and
movsl
pop
loopne
xchg
in
push
leave
and
mov
inc
sbb
std
frstor
js
jmp
push
insl
inc
aam
notl
inc
mov
shlb
sbb
fdivrl
sbb
dec
lods
fistpl
xor
fs
lea
or
and
xorl
sub
nop
out
mov
shll
out
mov
ret
or
cwtl
cmp
mov
adcl
push
and
lret
adc
dec
inc
adc
fadds
sub
repz
pop
clc
mov
jl
jmp
shlb
add
push
ja
adcb
aam
sub
inc
cmc
add
push
mov
scas
gs
cmp
jmp
loope
sub
or
xor
pop
cmc
inc
jmp
in
addr16
sub
adc
mov
icebp
jo
test
jnp
dec
jp
pop
jp
xchg
je
sbb
adc
xor
pop
stos
cmp
ljmp
jb
jg
mov
and
es
cli
add
mov
push
int
inc
and
sub
adc
gs
stos
inc
mov
and
jg
or
inc
ljmp
sub
pop
out
scas
inc
add
lret
lret
pop
mov
push
ja
scas
cmp
cli
sbb
xor
loop
adc
xor
xchg
fistl
imul
xchg
scas
ds
adc
dec
adc
jne
mov
arpl
push
test
push
and
leave
out
bound
movsl
sbb
or
popf
cmp
lds
jae
pop
cmp
cmp
movsb
pop
popf
and
test
jg
fldcw
sub
jae
outsb
repz
outsb
aam
push
adc
pop
sub
sub
jb
mov
repnz
lret
xor
les
mov
dec
je
jno
sar
imul
fcompl
pop
xchg
jae
loope
int
sub
xor
pop
pop
test
xchg
repnz
sub
and
mov
sbb
pop
sub
xchg
xor
sbb
xor
test
adc
pop
bound
ljmp
fsts
shlb
push
fwait
dec
or
test
movsb
jl
pop
aas
push
loop
movsb
mov
movsl
inc
int3
rcrl
sahf
adc
push
ss
int3
mov
add
int
ret
dec
mov
jl
cwtl
jnp
out
mov
sbb
filds
cmp
mov
cmp
std
add
and
and
add
xor
jp
add
pusha
call
leave
addr16
jg
scas
loope
cli
push
gs
enter
jle
sub
mov
orb
jp
pop
test
mov
cli
push
andb
das
out
aam
push
push
push
stos
in
and
daa
popa
jge
cmp
arpl
pop
pop
cmc
pushf
fs
adc
ficomps
loope
dec
inc
loopne
push
out
insb
xor
mulb
out
aas
pop
ljmp
sarb
push
and
pop
lcall
dec
xorb
daa
mov
lret
and
lea
jmp
fisubrl
jns
push
frstor
xlat
inc
pop
insl
sub
cmc
hlt
clc
xchg
repnz
test
mov
scas
xorb
and
outsl
xchg
clc
mov
mov
fistpll
in
imul
rorl
lcall
xor
in
es
or
shr
xchg
sub
fisubrl
cs
add
cmpsl
mov
jge
lods
subl
scas
adc
xor
pop
loope
add
sub
clc
inc
daa
test
lods
test
scas
enter
out
jnp
stos
test
xchg
xor
jmp
in
jae
mov
or
les
adc
pop
pop
cltd
iret
adc
mov
and
cmpsl
cmp
xor
dec
lcall
adc
sarb
xchg
jno
outsl
sar
mov
xchg
mov
ss
jmp
sub
in
inc
xor
push
xchg
jp
pop
mov
mov
jbe
mulb
cmp
add
mov
ficoml
sub
test
jns
jb
or
push
mov
inc
dec
loopne
mov
cmp
adc
xor
adc
movl
adc
lds
cvtps2pd
lea
cmp
ljmp
in
pop
sub
cld
scas
mov
add
icebp
push
xor
vphaddbq
and
aas
cmp
adc
add
addr16
jbe
and
hlt
stos
xor
jno
arpl
leave
fisttps
sbb
push
or
sub
and
std
fwait
or
cmp
pop
add
xorb
repz
push
testb
cld
and
lods
aam
lcall
sbb
lret
lahf
loop
hlt
jp
mov
pop
xor
push
ds
iret
cmc
add
lahf
push
adc
repnz
loope
xchg
test
push
and
jb
aam
repnz
cli
mov
mov
sub
pop
dec
jno
shr
int3
stos
movsb
mov
aaa
add
mov
mov
xor
pop
push
cmc
fwait
adc
test
or
xchg
iret
mov
testb
movsb
fsubrl
shll
cmp
pop
pop
shlb
jge
imul
mov
cwtl
cmp
mov
out
mov
or
cmpsb
fisubrs
fsubs
mov
stos
mov
icebp
push
lcall
outsb
adc
fs
add
pop
sub
scas
cld
sub
sbb
and
jbe
inc
jns
adc
roll
imul
jge
imul
mov
push
rolb
in
adc
pop
sub
jg
pop
dec
pop
insb
mov
and
mov
shll
mov
lcall
adc
popl
int
add
iret
mov
cmp
int
push
cmp
push
inc
and
stos
xlat
jg
mov
xchg
pop
nop
lea
popa
cmp
dec
movsb
mov
and
and
dec
pusha
cmc
cli
into
sbb
ljmp
pop
xchg
mov
xlat
lock
in
ret
inc
and
mov
cwtl
mov
in
add
loopne
icebp
leave
insb
shl
sub
loopne
mov
jnp
fmull
fnstsw
ljmp
jo
lods
push
mov
loope
add
aad
mov
inc
fwait
pop
xor
push
int
stos
dec
push
xor
movl
stos
or
push
fwait
xchg
lods
mov
insb
adc
pop
xchg
out
repnz
int3
push
aad
out
pop
cmpsl
push
lods
lock
push
push
push
sub
lret
mov
add
loop
and
cmpsl
mov
mov
xor
movsb
pop
or
sub
js
lods
gs
mov
add
mov
xchg
int
dec
shll
pop
pusha
sbb
mov
lds
subb
and
ret
or
pusha
das
mov
pop
mov
ja
sti
xchg
inc
outsl
dec
or
repnz
cmp
adc
xchg
xlat
sub
jne
sarb
mov
scas
dec
xorl
cltd
cltd
mov
jns
mov
push
push
popa
jle
in
sub
dec
test
int
pop
iret
jge
jo
mov
outsb
sbb
sub
xor
xchg
aad
pop
fadds
or
lds
push
cs
pop
sbb
jae
lods
test
mov
add
rcrb
stos
ss
add
rorl
mov
hlt
shrb
shrl
loop
mov
aaa
xchg
lock
and
aad
aad
das
xor
pop
mov
mov
dec
in
test
inc
pop
pop
int3
jbe
cltd
add
dec
inc
cs
push
push
pop
out
sti
bnd
scas
cld
fisubrs
dec
xchg
xor
neg
js
sbb
lods
cmp
cmp
sub
dec
outsb
mov
fwait
pop
pop
push
push
or
dec
xchg
je
or
repnz
std
dec
pop
jne
in
lret
jmp
out
out
sub
mov
fwait
or
mov
arpl
jmp
stos
clc
insb
and
mov
sub
mov
outsb
push
lock
mov
repnz
pushf
push
or
movsl
and
rcrl
jge
push
add
repnz
retw
mov
movl
movw
lea
jmp
popf
scas
rorb
push
and
push
aam
push
adc
fcoml
inc
loopne
sub
and
int3
call
ja
mov
dec
push
cmp
lret
pop
add
jmp
pop
mov
rorb
add
push
fisubl
decb
xchg
dec
inc
cli
or
push
cmpsl
ret
rcrl
mov
stos
add
fwait
mov
push
xor
lock
adc
inc
lret
lods
push
movsb
cmp
movsb
dec
mov
loope
and
je
gs
sbb
mul
add
mov
pop
push
cli
js
mov
std
sbb
rorl
int3
int
fildll
push
int3
shlb
arpl
dec
mov
push
mov
sbb
mov
scas
mov
aam
shlb
lcall
mov
push
mov
mov
adc
sub
repnz
insb
jg
scas
out
lods
mov
js
shll
mulb
adc
lea
jmp
les
leave
insl
pushf
test
ljmp
push
jnp
jbe
or
cli
inc
mov
test
cli
clc
cmp
push
ret
push
test
outsl
dec
inc
sahf
sub
pop
call
push
mov
fmuls
orb
clc
adc
push
leave
and
pop
loopne
ficomps
lret
sarb
fcmove
ds
xchg
lahf
scas
clc
jge
xor
or
dec
dec
xor
dec
clc
mull
aam
insb
or
jns
and
fstpt
pusha
add
fmull
mov
or
xor
jb
sub
xchg
addb
sti
cs
data16
and
leave
mov
xchg
add
adc
sti
mov
jno
push
lods
jmp
call
cmp
push
lds
stos
push
dec
xor
push
into
insb
lret
data16
inc
cmpl
push
dec
sarl
cmc
lods
stc
stc
jns
mov
pop
xlat
jne
ret
lock
pushf
sti
shll
and
aam
jge
push
sbb
scas
data16
adc
dec
pusha
cmpsl
adc
hlt
and
push
inc
xchg
push
cli
xor
push
aaa
movb
jmp
xchg
xchg
push
pop
and
insb
fwait
sub
shll
pusha
in
mov
xor
mov
jno
loope
dec
jne
jp
mov
inc
fldcw
sub
cmc
ljmp
repnz
push
arpl
xlat
in
fsts
mov
insb
shlb
loopne
jg
xchg
push
and
push
fstl
stos
sahf
clc
push
in
xchg
push
into
in
add
addl
int
pop
ss
or
sbb
xchg
in
fcomps
test
mov
rolb
leave
rcll
cmp
lcall
fistpll
push
gs
or
push
dec
dec
fmull
push
notb
sbb
test
imul
adc
pop
outsb
fld
dec
ds
mov
mov
inc
clc
hlt
mov
sbb
lret
jecxz
push
inc
lahf
ds
sti
pop
mov
xchg
jg
int
sub
or
pop
cli
test
xchg
xchg
sub
es
imulw
xor
loop
out
jp
pop
mov
push
adc
sub
popf
cld
aad
pop
cli
test
dec
adc
rclb
xchg
jb
xor
in
push
pop
test
pop
sub
mov
xor
cmpb
sub
hlt
insl
pushf
stc
fwait
jno
and
mov
lock
jne
ss
jae
data16
mov
iret
xchg
movsb
pushf
dec
sub
sbb
sbb
jle
mov
cltd
outsl
mov
or
inc
add
scas
pop
pop
lea
xchg
dec
mov
mov
imul
data16
pop
add
int
xor
add
xchg
push
push
sub
sub
jg
fdivrl
aaa
xchg
push
aam
xor
fwait
repz
sbb
and
cwtl
adc
ret
mov
pop
mov
inc
cmpsb
fdivrp
lods
lret
mov
enter
mov
dec
mov
adc
nop
leave
add
lods
subl
mov
pop
shlb
add
xor
es
and
adc
mov
leave
scas
aaa
mov
jb
mov
loopne
andl
xor
adc
add
sub
adc
fisubl
inc
rclb
pop
adc
stos
sbb
loope
xor
dec
loopne
xor
pop
arpl
inc
outsb
inc
jp
push
push
or
enter
stc
mov
pushf
fists
rcrb
out
jecxz
fildl
push
stos
aaa
push
stos
add
inc
jge
movsb
mov
in
pop
lock
cmpsb
lods
test
dec
mov
icebp
inc
aas
xchg
sbb
fcomps
mov
mov
ss
ror
orl
lret
jbe
icebp
repz
scas
cmp
mov
out
xchg
jbe
dec
lods
or
test
rclb
xchg
dec
inc
or
pop
iret
or
arpl
pop
out
inc
sti
ret
inc
outsb
lods
dec
add
inc
xchg
or
xchg
out
cmp
fildl
push
fwait
ja
dec
jg
add
lcall
push
stos
sub
scas
sbb
mov
in
call
inc
cmp
or
mov
pop
sbb
push
scas
push
iret
das
xor
lods
int
int
call
sub
push
shrb
insl
movsl
inc
ret
mov
xor
xor
lods
mull
cmpsl
fisttpll
stc
cmpb
pop
jl
cmpsb
sbb
pusha
icebp
out
movsl
cmp
add
cmpsl
adcl
cmpsb
addr16
mov
add
pop
adc
pusha
mov
shl
repz
xchg
cmpsl
dec
xor
lock
xchg
add
and
sub
jo
mov
cmpsl
sub
movsb
jg
sbb
sbb
aam
xchg
xchg
sub
push
sub
mov
sahf
mov
out
repnz
dec
rcrl
in
test
jl
cwtl
test
rolb
pop
add
test
jb
jmp
mov
mov
out
imul
mov
push
scas
cmpsl
pop
cmp
add
in
test
mov
fstps
into
daa
cmovge
dec
imul
gs
fdivrp
pushf
fnstcw
in
lea
or
loopne
fwait
loop
inc
xor
andl
aaa
xorl
ja
adc
add
push
test
in
fidivrl
movsb
shl
adc
idivl
and
fwait
xchg
das
ds
adc
lcall
sub
jle
adc
lahf
push
roll
jno
jmp
mov
loopne
mov
cs
repz
loopne
xchg
mov
scas
loop
std
fs
je
sti
orl
cli
or
sub
je
into
test
and
rorb
push
cmpsl
adc
aaa
loope
jmp
add
pushf
or
cmpsb
stos
add
cwtl
arpl
push
xor
sub
jle
mov
lods
in
popf
mov
inc
lcall
mov
ret
inc
pop
arpl
sub
add
mov
push
es
xchg
test
mov
addb
dec
rorl
and
scas
lock
in
repnz
push
dec
xor
outsl
inc
mov
push
cmc
iret
or
movsb
fwait
shlb
enter
mov
pop
leave
add
push
or
adcb
addr16
out
sub
loop
in
push
jbe
mov
repz
xchg
inc
aad
testl
dec
jle
push
cmp
xlat
pop
gs
xor
pop
sti
shr
inc
fadds
jle
pusha
mov
hlt
xchg
dec
push
ja
mov
incb
push
mov
dec
cmp
dec
lock
popa
shl
mov
sti
testl
sbb
adc
add
in
push
cmp
mov
mov
pop
stos
jns
popf
mov
inc
sti
nop
mov
pop
add
adc
jb
mov
xchg
hlt
lret
shlb
hlt
mov
iret
mov
in
cmp
movsl
adc
mov
mov
stc
push
jo
bound
mov
pusha
push
dec
sti
divl
mov
push
es
push
leave
rcrl
pusha
ljmp
jne
and
dec
mov
mov
inc
xor
lea
mov
and
sbb
inc
popf
ljmp
sbb
ret
push
pop
xchg
fs
jnp
cmpb
jae
popa
add
sbb
scas
rcll
orl
clc
jns
sub
fbld
and
iret
pop
mov
jno
jbe
pop
cmp
mov
fcmovnb
cmp
adc
das
aam
sub
inc
cmp
xchg
inc
mov
jb
xchg
or
pushf
push
jmp
aam
xor
pop
std
adc
inc
int3
jg
out
mov
dec
fidivrl
ret
iret
xor
pop
lea
xor
push
jno
push
inc
mov
or
or
ja
fcomip
addps
sbb
mov
cltd
cmp
xor
mov
push
test
push
add
cmpsl
addr16
lock
stos
jo
dec
xchg
stos
cltd
xchg
lods
sbb
jecxz
imull
rcll
pop
jmp
fwait
popf
push
jge
icebp
arpl
lds
fnsave
inc
or
inc
popa
nop
lds
stos
push
cmp
jecxz
sti
mov
dec
fs
jo
imul
in
test
sbbl
sahf
ret
pop
push
test
xor
cmp
mov
push
test
ret
push
sub
sub
je
shr
push
enter
repz
and
stos
fwait
add
mov
add
enter
lds
scas
loope
mov
lahf
scas
cld
scas
repnz
dec
pop
mov
adc
pop
hlt
jge
lds
inc
repz
jmp
out
test
imul
out
fldt
jp
and
icebp
jmp
or
iret
lret
aam
lods
jecxz
mov
inc
fbstp
loopne
in
es
jo
dec
idivb
out
leave
mov
jmp
out
in
test
cmc
movsb
mov
gs
into
sub
sub
sub
inc
js
fs
repnz
add
mov
and
movlps
test
or
pop
ficoml
push
mov
add
ds
jmp
sub
scas
aam
les
mov
outsb
rorb
rorb
fnsave
adc
sub
scas
stos
ret
movsl
and
subb
push
stos
cld
or
adc
ret
mov
jl
lds
cld
xor
dec
dec
pop
out
pusha
fimuls
pop
sub
lock
jmp
loope
mov
push
mov
push
mov
xchg
mov
mov
or
xchg
mov
xor
pop
pop
out
xchg
ficoms
mov
in
or
or
jecxz
fldcw
push
mov
and
dec
aas
ret
mov
xor
jnp
jno
mov
pop
push
call
xchg
ret
dec
adc
pusha
inc
aad
call
or
je
mov
xchg
cs
add
inc
xor
out
loope
mov
adc
fwait
scas
and
add
movsl
inc
mov
mov
out
dec
roll
or
sbb
scas
movsb
sbb
int3
sti
gs
movsb
fdivrp
sbb
inc
out
dec
ret
dec
insl
jne
inc
mov
jmp
dec
sub
dec
hlt
push
push
lea
xorl
mov
ret
xchg
xorl
add
sbb
mov
mov
pop
inc
mov
xchg
test
mov
imul
wrmsr
das
push
pusha
fistpll
mov
mov
fcom
call
ret
js
fwait
mov
sbbl
mov
mov
sti
adc
loop
clc
testl
add
add
cld
dec
test
scas
call
dec
dec
xor
sub
fildll
cld
adc
pop
in
iret
testb
jnp
sbb
xchg
out
negb
add
dec
mov
call
dec
jecxz
add
bound
imul
mov
sbb
pop
mov
inc
add
fs
and
adc
inc
stc
xor
in
cmp
sub
stos
stc
cmc
or
aaa
and
stos
ret
jmp
xor
daa
mov
or
jne
cmp
fdecstp
push
gs
jns
in
jbe
sarl
and
ss
repz
xchg
inc
cld
fwait
lahf
and
aas
das
testl
lahf
mov
mov
clc
xchg
or
dec
aad
mov
push
jae
pop
cmp
adc
inc
jb
movsl
lret
ret
mov
pop
jge
jmp
push
bound
pop
fsts
fisubrl
or
sub
stos
jb
or
dec
push
xchg
and
cmp
movsl
mov
sbbb
xchg
sbb
jbe
stc
js
fwait
lret
pop
pop
and
push
in
jnp
imul
cmc
arpl
imul
repnz
decl
out
dec
push
mov
shl
sub
mov
addr16
dec
inc
int
lea
outsb
push
xchg
cmp
push
dec
mov
mov
adc
dec
testb
cmp
fwait
ror
arpl
int
mov
divb
dec
popa
pop
xcrypt-cbc
cmpsl
jb
pop
or
repnz
adc
mov
sub
jne
fwait
or
push
mov
test
jnp
sti
sub
cmc
in
sbb
jnp
in
sub
cmpsb
inc
mov
popa
cmove
pushf
in
or
cmp
ret
cmp
pop
call
mov
cmp
ja
mov
dec
orb
repnz
dec
jle
inc
add
sub
mov
ds
push
xchg
xor
dec
sbb
outsb
xchg
add
adc
pop
out
push
cltd
cs
dec
ja
dec
inc
std
jbe
xchg
movsb
mov
jno
call
pusha
jl
in
mov
xchg
flds
arpl
popa
fstl
inc
aam
push
adcb
sbb
add
sahf
push
test
dec
inc
push
adcl
cmp
jle
jge
adcl
sbbb
fwait
aaa
movsl
xor
lock
in
add
je
xor
xchg
push
scas
xchg
xchg
inc
mov
fistps
mov
repz
sub
xchg
and
arpl
jno
sub
andb
lock
repz
daa
int3
lds
jo
int
sbb
loop
insl
sub
dec
mov
and
nopl
ret
test
fdivl
jl
inc
mov
sahf
cli
leave
aaa
xor
test
lret
adc
xor
sub
inc
dec
fs
mov
cmp
nop
mov
sbb
clc
adc
sbb
jmp
sbb
xor
fsubrs
movsl
ja,pn
xchg
and
fistl
insb
in
inc
dec
xchg
sbb
ds
xchg
inc
inc
and
jmp
push
jp
inc
push
imul
pop
adc
mov
cmp
jmp
mov
les
jle
pusha
in
clc
sbb
push
xchg
cmp
mov
sub
fnstenv
push
mov
shlb
mov
pop
cwtl
push
lahf
push
out
xchg
lahf
dec
fiaddl
fs
es
inc
xor
and
jecxz
adcl
icebp
xchg
cmpsl
and
xor
addr16
xor
aaa
mov
jle
loop
bound
pop
pop
nop
fisttps
cli
in
mov
aam
sub
sbb
popf
imulb
dec
mov
testb
xchg
xor
pop
aaa
xor
fcmovnb
xor
loop
ja
inc
push
cmpb
push
lea
enter
jnp
jl
mov
add
push
mov
sahf
dec
or
in
jbe
icebp
jle
mov
loop
cmp
xor
fs
insl
jns
lret
daa
xor
mov
mov
cmpsl
pusha
mov
dec
sub
xchg
inc
lea
ja
adc
push
cmc
add
or
fcompl
mov
rcll
or
addb
mov
push
push
push
sub
jns
scas
loope
ret
iret
sbb
call
pop
lds
and
loop
and
ret
adc
shrb
cmp
and
xor
push
jno
rorb
les
fnstsw
pop
rcll
mov
jmp
sub
mov
mov
dec
imul
mov
mov
sbb
xchg
loopne
fucomp
call
xchg
inc
xchg
cmp
xlat
repz
mov
movsl
aam
lods
ja
mov
inc
add
clc
nop
int3
add
pop
or
repnz
sbb
ret
cmc
add
push
int
dec
fwait
sub
test
addr16
fidivl
sbb
je
dec
ret
jo
das
in
sar
mov
enter
sbbl
xchg
mov
sti
jae
push
jnp
cmpsb
jnp
mov
cld
jo
sbb
ret
movsb
lods
mov
enter
loop
cld
movl
andl
push
mov
xchg
push
jl
sbbl
aam
sbb
lea
sub
mov
stos
cmp
sub
push
mov
aaa
inc
xor
cmpsb
mov
mov
pop
jns
insb
cmc
fwait
inc
sbb
popf
mov
mov
pop
lret
lds
xchg
mov
fsubs
cmp
dec
rorb
fwait
leave
fstp
popf
ss
jp
adc
xor
jp
aaa
repz
pop
mov
jno
divl
pop
ss
data16
stos
mov
mov
jae
bound
rolb
in
inc
mov
bound
xchg
cwtl
aaa
sti
xchg
mov
push
repnz
dec
mov
in
inc
shlb
xchg
das
sub
add
jbe
cmp
aaa
sub
sub
leave
cltd
enter
decl
push
stos
cld
mov
or
push
lds
adcb
xorb
mov
scas
f2xm1
xchg
push
fstpt
in
pusha
mov
repz
sub
push
and
movl
pusha
pusha
pushf
movb
lea
jmp
pushl
popf
pushf
pushl
ret
pushf
xor
stc
xorl
pushf
xor
jmp
xor
jmp
pushf
popl
test
clc
xorl
push
mov
xor
cmc
xor
clc
xor
test
cmc
xor
call
pushf
jmp
jmp
cmc
xor
bt
jmp
pusha
movl
pushf
pusha
call
int
pop
xor
mov
jns
stos
ret
mov
stc
add
fsubr
fwait
pushf
xor
cmp
dec
ds
mov
test
sbb
and
outsb
int
mov
jmp
jbe
lea
push
dec
sbb
mov
push
sbb
jb
cmpsl
mov
scas
sub
jae
jns
pop
add
std
pushf
inc
cli
inc
push
push
movsl
popf
repz
dec
cmp
mov
or
push
adc
aaa
inc
xor
mov
push
or
add
jecxz
cli
dec
leave
stc
sti
inc
inc
es
add
ret
sbb
mov
addr16
shll
lret
sbb
xchg
in
inc
cmp
arpl
jge
xchg
cmp
iret
imul
sbb
fucomi
push
into
cmp
enter
jb
andl
cmpsl
add
iret
mov
imul
lret
movl
xchg
test
gs
or
pop
iret
push
mov
lock
dec
adc
dec
and
inc
mov
and
lcall
jp
gs
xchg
or
cmc
scas
lea
add
aaa
push
in
fs
clc
sbb
cmpl
cmp
shrb
sub
mov
subl
dec
mov
ss
roll
fildl
imul
mov
add
and
lcall
pop
xor
aad
lds
nop
add
adc
cwtl
mov
repz
adc
fcoml
mov
pop
dec
loop
cmpb
lcall
addr16
jmp
jg
sub
setns
pop
decb
or
xor
mov
stc
fwait
mov
mov
xchg
int
mov
jp
push
push
sbb
rclb
xchg
movb
push
fsts
sbb
push
sub
mov
adc
or
jns
jecxz
sbb
inc
mov
popa
jmp
fcmovbe
mov
mov
push
dec
movb
fwait
ss
mov
dec
int3
movsb
adc
xchg
cmp
xchg
inc
cmp
adc
mov
cmp
mov
mov
lods
aas
loopne
dec
xchg
lds
mull
mov
mov
pop
scas
mulb
popf
xchg
mov
pop
mov
or
mov
out
dec
inc
jne
dec
inc
std
or
push
dec
mov
lock
clc
jne
sbb
shlb
insl
xor
les
jp
sub
jmp
arpl
jbe
int3
jo
jmp
aam
cld
int
arpl
test
adcb
jnp
cmp
sbb
test
push
and
push
push
into
movl
adc
or
inc
dec
js
lock
mov
std
jae
sahf
fdivl
lret
or
cmpl
pop
push
jmp
test
jle
test
ja
fdivrl
mov
or
push
ss
cmpsl
cmpsb
and
push
mov
mov
cmp
push
mov
mov
into
inc
cmp
stos
push
fldenv
ja
js
push
dec
inc
in
jmp
pusha
mov
push
pop
into
arpl
lea
cltd
xchg
cmp
jecxz
jecxz
add
lds
push
mov
xor
clc
mov
lret
mov
outsb
and
sbb
movsl
cmp
push
mov
cmp
in
sar
ret
inc
dec
push
mov
mov
and
mov
pop
mov
or
ret
jbe
push
iret
dec
jg
dec
pop
mov
jns
js
mov
addr16
inc
into
lahf
and
xchg
call
iret
pop
push
mov
xor
dec
inc
out
out
das
mov
pop
test
mov
scas
or
jae
push
xchg
popa
std
int3
int
push
jne
inc
or
and
cs
dec
inc
xor
xor
lods
movsb
fcoml
icebp
pop
movl
sub
scas
mov
sarb
arpl
xor
xchg
sub
inc
imulb
or
je
jl
mov
cmp
aad
test
and
inc
imul
stc
pop
pop
out
mov
sbb
mov
rcrb
lcall
jmp
pop
mov
or
iret
mov
jge
popf
inc
je
sahf
xchg
mov
cwtl
pop
mov
fs
mov
or
push
pop
push
xor
mov
cmpb
push
test
push
fisttps
jbe
sbb
mov
sti
iret
pop
fs
stc
pop
out
inc
cmpsb
shr
rcl
out
ljmp
and
mov
inc
sti
jns
add
and
xchg
inc
les
outsb
pushf
xchg
inc
roll
leave
cmpsl
jl
add
sub
xchg
sbb
out
rorb
jbe
lahf
sbb
aas
clc
inc
cmc
xlat
lahf
push
sbb
push
out
hlt
jle
xlat
and
jecxz
sub
stos
cmp
gs
and
push
cmpsl
lahf
pop
mov
inc
pop
push
xchg
dec
push
dec
outsb
pop
sub
and
enter
in
call
mov
pop
cltd
dec
aaa
in
mov
int3
ror
or
dec
pop
mov
fisttpl
int3
popf
in
xchg
mov
inc
stc
sbb
pop
adc
mov
inc
shlb
in
push
shrb
out
inc
adc
scas
sahf
jle
jp
lods
hlt
aaa
and
push
or
jo
sarl
jo
inc
cwtl
push
xchg
push
push
mov
nop
dec
inc
mov
gs
xor
cmc
scas
lods
adc
add
fisttps
out
imul
stos
int3
mov
mov
xchg
iret
mov
mov
and
mov
cltd
push
sbb
fwait
mov
mov
repnz
call
sub
jle
into
push
test
sti
andl
loopne
pop
jle
pop
sbb
clc
outsl
addr16
pop
fnstenv
call
test
sarl
and
out
push
xchg
cs
adcb
pop
or
pop
inc
mov
pop
adc
lcall
hlt
lock
sub
cmp
cmpsl
pop
nop
inc
sub
jne
sub
in
sbb
loope
sub
popf
mov
out
pop
fcomps
adc
inc
cld
push
push
or
imul
jae
dec
xchg
pop
fstp
icebp
out
pusha
and
cmp
jle
iret
imul
mov
xlat
cmpsb
mov
ja
cli
xor
pop
cwtl
xor
scas
mov
xor
ljmp
outsb
adc
mov
sbb
lahf
test
pavgb
out
cmp
adc
lock
jb
lret
fsubrs
rclb
lock
push
les
enter
add
movb
mov
and
lea
sub
movb
movw
lea
jmp
notl
iret
mov
push
and
test
aas
pop
loope
lods
pusha
push
dec
pop
fs
xor
add
sbb
test
cmp
in
or
sbb
inc
mov
jnp
xor
cs
xor
arpl
mov
push
adc
adc
fstpt
or
xchg
cmpsb
lds
add
push
mov
pop
test
jae
mov
or
addl
cmpb
ror
push
popf
mov
xor
mov
inc
push
jne
xchg
out
add
mov
sbb
jp
cmpsl
add
xchg
or
pusha
mov
lret
fisttpl
adc
mov
fcoms
mov
xor
loope
sbb
in
jbe
mov
es
xchg
bound
into
inc
push
in
add
or
lea
cltd
sub
int3
add
mov
mov
xchg
cmp
imul
adc
iret
xchg
mov
inc
inc
mov
dec
pop
fs
and
cmp
push
out
in
hlt
in
jns
ja
inc
ljmp
loopne
lret
outsl
cs
clc
xchg
gs
shl
popl
sbb
loope
mov
push
mov
aaa
mov
daa
lods
clc
xlat
jp
push
lods
inc
imul
lret
xor
fcompl
inc
pop
push
insb
out
into
fwait
push
fists
repz
int3
lret
ffreep
mov
add
gs
mov
fstpt
xchg
gs
or
outsl
out
sub
adc
data16
jg
sahf
out
testb
xchg
ret
pop
aad
notb
scas
hlt
jecxz
xor
add
jle
xor
hlt
and
dec
cmc
out
cmp
ficompl
cmp
lods
leave
fsubs
cmc
dec
push
and
insl
add
fisubs
pop
xor
and
jnp
jo
pop
sub
add
and
loop
pushf
jecxz
pop
sbb
pushf
fwait
xor
cmp
jp
ret
jo
jmp
push
lods
fistl
and
insl
test
pop
sub
call
sub
adcb
jl
call
inc
daa
imul
push
in
sar
es
xchg
sub
out
jns
mov
push
sbb
leave
pusha
and
out
rcrb
or
push
mov
int3
mov
pop
dec
enter
jbe
aaa
scas
test
cltd
divl
inc
fcoml
xlat
test
pop
rorl
xchg
adc
test
cwtl
les
push
push
outsl
push
inc
loop
cmp
mov
dec
add
inc
xor
scas
mov
push
roll
mov
push
or
cmp
push
fisubrl
jle
push
cmpsb
or
cltd
sub
inc
pop
push
jg
fdivs
jecxz
pop
in
xchg
add
mov
xchg
scas
lods
pop
fld1
push
imul
call
pop
hlt
cmc
jbe
mov
lock
add
rcll
shrb
fs
fdivl
fdivl
call
xchg
cltd
and
loop
ss
test
js
rorb
add
ds
add
jle
ror
xor
daa
imul
pop
mov
lea
pop
shrl
les
cmp
cmp
mov
lcall
imulb
cmp
jge
and
aam
ljmp
pop
in
pop
ss
mov
aad
push
push
xorb
mov
aaa
push
mov
add
xlat
xchg
enter
and
iret
mov
jb
test
pop
out
in
mov
sbb
sub
lahf
mov
push
xor
sbb
insb
mov
lcall
dec
jo
leave
inc
mov
dec
std
adc
lahf
testl
imul
pop
int
out
sahf
xlat
xchg
in
jno
in
imul
les
negl
scas
outsl
popw
test
inc
dec
jne
lds
mov
outsb
aad
pop
repnz
or
popa
mov
insb
mov
or
jmp
rorl
ljmp
sbb
push
fwait
pushf
out
notb
movsb
testb
push
cmpsb
jle
loope
pop
dec
mov
add
dec
gs
sbb
xchg
ja
jbe
popf
repnz
insb
lahf
aad
mov
mov
mov
add
imul
pop
mov
cmpsl
pop
ja
mov
mov
cmpl
insb
cmp
testb
cs
fsts
sarb
inc
aaa
lcall
les
out
les
out
pop
fs
iret
nop
leave
or
outsb
popa
add
iret
inc
fiadds
ljmp
sahf
es
inc
mov
mov
cmpsl
mov
mov
mov
xor
enter
xor
pushf
hlt
xor
daa
rcrl
rep
and
mov
mov
push
sahf
push
xor
cld
lret
sarl
fmuls
scas
lods
ret
cmp
loope
std
cmp
jnp
adc
pop
jns
dec
test
fwait
inc
mov
dec
jg
sbb
sbb
jge
pop
cmp
and
push
int3
mov
cltd
xor
out
jge
xchg
leave
inc
pushf
mov
or
cwtl
sub
mov
push
dec
pop
loop
or
es
mov
in
and
sarb
cmp
test
mov
inc
scas
or
ficoml
mov
pop
mov
or
jecxz
sub
xchg
inc
js
cmp
test
cmp
leave
inc
popf
lret
cmp
sarb
outsl
sub
pop
push
and
pusha
out
add
shll
adc
sub
dec
pop
cmpsl
imul
outsb
movsl
cmp
xchg
jnp
in
sbb
gs
push
xchg
int
mov
adc
or
ret
iret
std
jns
add
push
mulb
mov
pop
fnsave
push
aas
pop
xor
fldenv
mov
popf
sbb
rcr
ret
lods
xor
les
or
out
aad
adc
idiv
stos
pop
sti
repnz
mov
add
aam
xorl
std
inc
sahf
mov
ss
arpl
popa
aas
or
jno
adc
jnp
add
jns
testl
arpl
test
in
std
jns
call
jno
push
test
adc
scas
in
repz
lahf
pop
xchg
ja
ds
in
pop
loope
testb
mov
sbb
add
adc
pop
lret
dec
add
in
mov
data16
mov
movb
cmp
pop
adc
mov
fistpl
pop
movsb
movsb
adc
inc
cmp
sbb
dec
adc
es
adc
sub
sub
xchg
scas
pushf
sbb
out
jo
arpl
je
imul
pop
test
pop
out
movsl
add
call
jno
mov
mov
addr16
call
ss
or
call
jmp
test
ficomps
mov
bound
aam
stos
hlt
sbb
and
popf
arpl
in
jne
inc
xor
pop
inc
or
inc
push
xor
fwait
repz
pop
xchg
jne
vpmaddwd
add
mov
adc
fistpl
mov
pop
testl
lds
ja
pop
cmp
inc
mov
orb
mov
shrb
aaa
ret
and
mov
inc
fwait
push
adc
lods
inc
jno
aam
gs
push
inc
imul
sbb
negb
add
cmpsb
cld
and
aam
push
ja
pushf
jnp
popa
add
scas
out
leave
pop
and
sbb
inc
jmp
nop
pop
in
insb
mov
jmp
or
sahf
adc
jecxz
push
mov
repz
cmp
pop
pop
xchg
add
sbb
sahf
in
add
mov
adc
push
mov
jp
dec
call
dec
xchg
jp
cmp
bound
inc
gs
and
push
push
arpl
xor
leave
pop
rol
lds
inc
xor
jo
outsb
and
out
add
lds
cmpsl
sbb
sub
loop
lret
sub
jae
sti
stos
mov
clc
je
or
mov
lret
push
adc
and
arpl
sahf
pop
fcmovnb
dec
lcall
mov
int3
cmp
xor
aam
movsl
inc
add
push
aaa
shll
imul
cmpb
xor
mov
leave
fmull
xchg
jp
cltd
lea
repnz
or
dec
popa
pusha
pop
add
pop
push
gs
xor
sahf
mov
pop
mov
fimuls
add
mov
and
xchg
aad
scas
xchg
sti
sub
leave
mov
or
sbb
mov
in
das
pop
add
jg
shll
bound
out
insb
mov
push
xor
out
shlb
pusha
cmp
test
out
cmp
cmp
and
mov
mov
mov
rorb
lods
xor
fisttpl
or
mov
sti
std
stc
and
mov
incb
push
addr16
in
adc
lcall
adc
mov
cmp
nop
insb
ljmp
jg
mov
data16
sbb
pushf
popl
bt
bt
xor
bt
xor
call
xor
cmp
xor
pushl
xor
clc
xor
stc
call
call
test
xor
clc
push
xor
pusha
xor
push
xor
pushf
xorl
cmc
movb
xor
jmp
jg
push
dec
add
es
lret
stos
push
lahf
pop
pop
pop
mov
jecxz
fwait
pop
mov
inc
lcall
sub
xor
dec
xor
mov
mov
xchg
and
fiadds
jl
xlat
or
movsb
push
in
addl
push
ret
ja
pop
push
call
xchg
popa
in
outsl
and
ds
adcb
pop
mov
fsubl
mov
xchg
sub
cmp
inc
mov
jbe
push
dec
lods
sub
cmp
add
inc
sub
push
fwait
jp
pop
out
or
leave
cld
mov
adcl
bound
ret
cltd
pop
sbb
arpl
mov
dec
xlat
sub
mov
js
in
xor
dec
je
sbb
xchg
jle
xorl
adc
mov
push
dec
push
xor
aad
sbb
imul
pop
clc
cmc
mov
notl
sub
mov
mov
inc
pop
out
xchg
jae
cmp
push
and
cltd
shrb
fiaddl
mov
and
aad
test
rcrl
imul
sub
sub
jg
and
jp
in
mov
cmp
pop
call
push
les
cmpsl
xor
cld
and
pop
push
push
out
sub
icebp
insl
sbb
in
xchg
jae
and
jmp
jp
dec
loopne
dec
cmp
scas
out
push
movsl
jno
aas
mov
fs
cmpsl
cmp
xlat
cmpsl
inc
xchg
mov
movsl
nop
dec
pop
cmp
add
sub
sbb
push
stos
mov
push
aas
repnz
test
addr16
dec
adc
cmp
mov
push
fisubs
pop
mov
iret
jge
icebp
scas
pushf
pop
pop
int
push
inc
outsl
sti
jmp
mov
aad
js
lock
push
lcall
imul
in
addr16
sbb
scas
dec
mov
mov
loopne
sub
gs
pop
popf
lret
into
fldcw
mov
ja
nop
aaa
lea
imull
das
cltd
adc
pushf
mov
jge
mov
call
scas
in
aam
lods
push
sarb
ret
and
clc
das
inc
mov
jae
fwait
adc
mov
fsts
out
push
add
stos
cmp
aaa
jne
sbb
inc
cmp
je
pushf
insl
rcll
push
push
jnp
movsl
sbb
add
mov
ss
mov
jecxz
cltd
or
addr16
loop
pop
je
test
pop
icebp
ret
dec
mov
enter
insl
sub
inc
and
add
and
pop
icebp
cmp
cli
xlat
dec
sub
std
sahf
push
jbe
repz
cmc
cmc
insb
mov
jae
imul
inc
ret
movsb
test
xchg
dec
mov
push
pusha
jne
lret
inc
and
sbb
sbb
enter
pop
push
int
inc
mov
adc
pop
in
dec
clflush
dec
push
out
mov
sub
sub
dec
jo
test
lcall
jmp
cmp
and
add
inc
mov
xor
push
push
xor
stos
loope
call
into
out
sbb
sbb
sarl
lods
cmp
push
into
cwtl
cmp
ficompl
xchg
cmp
outsb
rcll
cs
fistpl
rolb
cmp
aaa
popa
addr16
in
dec
cltd
pop
inc
pop
push
in
ja
imul
sub
adc
mov
pop
into
push
scas
or
jnp
and
imul
outsb
add
xchg
pop
punpcklbw
mov
push
push
cmpsb
inc
push
xchg
iret
sub
jo
stos
ret
test
adc
bnd
ret
std
fstpt
xchg
dec
addr16
mov
cmc
mov
add
cltd
js
push
add
add
or
daa
sahf
loopne
test
out
dec
scas
out
push
rol
in
fwait
lret
divl
pop
cmc
adc
fisttpll
mov
out
push
nop
push
imul
insl
jae
ss
inc
push
fs
fistpll
fstl
add
sarb
lods
inc
xor
xchg
or
cmp
pop
leave
test
cmp
cmp
rolb
clc
pop
fimuls
mov
in
cmpsl
imull
test
fwait
push
ret
mov
gs
in
dec
pop
ss
adc
pop
mov
mov
mov
or
aam
add
cld
lret
insb
fidivrl
shll
imul
mov
sbb
out
xor
lock
scas
pop
jno
or
shl
jp
dec
nop
dec
mov
sbb
mov
les
out
sti
pop
imul
add
cmovs
sbb
xchg
repz
push
jb
je
or
inc
and
dec
mov
movsl
movb
pushl
pushf
mov
lea
jmp
pushl
popf
pushf
mov
pushl
ret
pushf
pusha
push
movl
mov
call
call
ds
mov
jb
inc
fldenv
push
icebp
xchg
rcll
rcl
jae
jne
insl
mov
mulb
arpl
mov
pushf
cmp
insl
cmpsb
aas
es
jl
push
loop
gs
or
sbb
xor
or
dec
rcll
js
dec
out
xchg
sub
sub
mov
cmp
xchg
std
aam
xchg
push
inc
fxch
fcomip
xor
mov
aaa
cmpl
add
enter
inc
lods
mov
rcll
add
adc
jbe
dec
out
inc
lahf
jb
int
rcl
mov
jb
pushf
sub
stos
push
push
int
test
mov
popa
push
dec
ja
sbb
inc
into
aas
testl
insl
mov
leave
dec
pop
lods
jae
dec
push
stos
or
mov
inc
xchg
pop
pop
mov
dec
loopne
add
cmp
jnp
or
or
ficoml
pop
mov
pop
ljmp
sub
xchg
and
hlt
cmpl
sbbb
mov
lds
xor
ficompl
adc
imul
push
dec
adcl
add
loopne
les
lahf
popa
pusha
outsl
pusha
adc
bsf
cld
dec
lret
idiv
or
and
xor
call
lods
cld
mov
cmp
and
cmp
arpl
lods
test
iret
mov
lahf
loop
and
mov
add
movsl
fisubs
pop
cmc
adc
iret
mov
int3
fistl
inc
push
int3
movsb
jb
dec
push
cli
mov
in
mov
pop
call
sbb
insb
lock
int
sarl
movsb
cld
or
jmp
in
out
sub
inc
sbb
cmp
xor
sbb
dec
cmpsb
dec
push
outsl
outsb
xchg
cmpsb
mov
mov
dec
jmp
loop
jns
and
out
cmp
push
ficoms
xchg
hlt
or
in
and
and
shrb
xchg
adc
sbb
and
pop
dec
loopne
dec
mov
movl
test
insl
cmp
sti
lcall
jns
test
pop
mov
dec
ret
test
sbb
cmpsl
cmp
jecxz
push
or
jl
in
mov
lods
sub
dec
js
int3
sbb
inc
sahf
fsubrs
pop
lock
add
lcall
ss
mov
mov
rolb
insb
adc
loop
sbb
dec
sbb
push
js
and
fwait
clc
je
xchg
daa
jne
xchg
lods
jnp
dec
and
sarb
call
jge
insl
lcall
loop
push
xchg
shrl
test
mov
fistl
out
ret
cltd
and
dec
dec
nop
loope
and
jb
sub
inc
xor
inc
mov
bound
cmpl
cli
mov
xchg
pop
sbb
mov
mov
and
sbb
jae
pushl
jo
outsb
xor
mov
lods
sub
xchg
jle
popf
xor
adc
lahf
sub
jb
icebp
jbe
popa
decl
inc
dec
mov
call
mov
scas
push
adc
push
cmp
test
fstps
xchg
jg
aas
std
dec
icebp
mov
add
inc
mov
pushf
xor
inc
xchg
cmpsl
mov
xor
xor
dec
hlt
inc
sub
out
push
mov
jle
push
xchg
cmpsl
mov
xor
lods
fsubrp
gs
cmpb
jbe
cmpsb
ja
cli
clc
int
int
jecxz
aaa
movsl
sub
fisttpll
inc
rorl
jb
cmpsl
xchg
jnp
mov
sti
ljmp
in
nop
lods
inc
pop
xor
mov
fs
xchg
inc
ficompl
push
push
movsl
push
das
mov
out
mov
sbb
lods
es
pop
sahf
jge
and
mov
mov
xchg
inc
adc
arpl
loop
mov
add
es
fldt
out
pop
push
xor
add
lods
lock
imul
into
lret
pop
xor
js
and
lret
jns
jp
push
outsb
mov
sub
out
pop
lret
xchg
loope
inc
push
push
aas
mov
jl
cmpsl
push
dec
ror
and
loop
sti
ja
leave
and
into
lret
sbb
loop
cs
cltd
dec
sarl
xor
sub
pop
sub
out
xor
mov
dec
pop
pop
xchg
ljmp
mov
push
push
mov
jns
xchg
psubsb
pop
adc
arpl
mov
jne
cs
cmpsb
cli
data16
mov
je
repnz
into
insb
lret
and
add
pop
mov
movl
pushf
lea
ja
pushf
movl
pushf
pushf
movb
pushf
lea
jmp
push
pushf
popl
cmp
jmp
test
xorl
stc
xor
test
test
xor
pushf
bt
xor
pushf
cmc
pushl
popf
pushl
mov
pushl
ret
pushf
pushf
pushf
pushf
movl
call
test
xor
bt
test
pushl
popf
pusha
pushl
ret
pushf
popl
push
bt
xor
clc
xorl
jmp
push
push
pushf
popl
jmp
pusha
pusha
movl
pushf
jmp
pushf
pushf
popl
cmp
xor
test
xor
jmp
inc
gs
mov
cmp
repz
dec
ret
ret
in
cmpsb
data16
cmpsl
pop
fisttpll
inc
mov
mov
rol
mov
cmp
xchg
pop
lea
cmpsb
jne
and
aaa
subb
jg
scas
scas
rorb
cs
adc
pop
jmp
jmp
jnp
mov
rclb
out
bound
sbb
mov
in
bound
adc
cmp
mov
outsb
stos
cmp
cmp
movsb
sbb
mov
adc
fucomi
mov
enter
mov
jle
fdivrs
ljmp
outsl
pop
andl
push
cld
clc
xor
add
test
and
out
outsb
pop
movsl
movsb
xchg
rclb
ljmp
imul
jno
test
xchg
push
jecxz
adc
jle
push
mov
sub
push
and
jp
mov
inc
insl
lcall
mov
inc
in
xor
aaa
outsb
cmpsb
adc
add
aad
inc
dec
ds
add
ja
sbb
xchg
jae
jb
stos
rolb
and
nop
mov
in
shll
mov
xchg
pop
push
sub
xchg
xchg
in
enter
xor
xor
scas
in
jns
mov
stc
xor
clc
outsl
pop
pop
sbbb
dec
dec
jno
fnsetpm(287
addr16
pop
rorb
fsubrl
ret
jl
inc
lahf
scas
cld
and
aaa
and
jo
push
out
gs
loopne
stos
loop
les
scas
outsb
xor
jbe
xorl
push
push
fsubrp
lcall
lods
loop
inc
push
popa
xchg
pushf
xor
jb
out
dec
mov
jmp
mov
notl
scas
popf
in
mov
pop
shll
fldenv
xchg
jae
mov
int
test
cmp
jmp
pop
movsl
mov
xchg
pop
sbb
sbb
aad
inc
mov
aas
add
jp
push
inc
xchg
fidivl
or
dec
into
cmp
lock
int
lock
sahf
sub
push
dec
test
and
shrl
mov
jecxz
ret
int3
pop
adc
mov
sub
push
insl
sti
xchg
or
shrl
stc
adc
ret
sub
mov
cmp
cmc
or
jp
jnp
sahf
dec
int3
cmp
inc
loopne
mov
loop
add
adc
daa
mov
jo
addb
into
sbb
dec
sub
aam
add
mov
dec
out
lock
cmp
adc
leave
hlt
lret
cmp
mov
ret
mov
dec
inc
fldenv
sub
cmp
rorl
dec
inc
xor
and
jmp
inc
movsl
mov
or
mov
es
subl
outsl
jmp
icebp
add
sub
and
ror
dec
pusha
pop
out
ss
es
cvtps2pi
rcl
sbb
sbb
lret
mov
adc
ret
mov
cmpsb
lcall
adc
divl
jnp
aad
repz
outsl
lods
dec
and
cmp
loope
add
es
mov
fistps
les
jo
ret
mov
push
fistpl
enter
rol
push
mov
stos
sub
pop
test
push
and
add
fstps
les
cld
cmp
roll
push
in
stos
outsl
sbb
fnsave
mov
adc
lret
rolb
mov
push
push
adc
mov
mov
addr16
andl
xor
mov
add
cmp
and
jmp
push
pusha
lea
jmp
fcoml
push
push
not
cwtl
pop
icebp
sub
shl
je
ss
push
jmp
mov
daa
pop
stc
push
out
enter
arpl
stos
icebp
sbb
ja
sub
adcl
clc
in
lds
enter
xor
push
sbb
push
push
addb
icebp
and
outsl
fistl
jg
repz
xchg
push
cmp
adc
cmc
cmc
or
movsl
fisubrs
stc
je
js
jae
sub
icebp
mov
jecxz
jle
scas
jae
jmp
insb
mov
popa
jo
mov
dec
xor
movsb
mov
bound
cli
xor
pop
mov
fs
mov
add
pop
loopne
or
lock
data16
mov
insl
pop
inc
cli
fwait
cwtl
and
cli
daa
push
outsl
test
clc
outsb
mov
jne
imul
inc
test
mov
mov
in
popfw
ds
ljmp
test
push
mov
xor
ljmp
popa
icebp
out
ret
xchg
pop
adc
mov
aam
dec
mov
push
sub
sub
test
push
inc
fimuls
stos
mov
push
aam
cmc
xchg
int3
movsb
repnz
mov
repnz
xchg
xchg
sti
insl
cmp
aam
inc
jb
pop
add
sahf
ss
pop
or
lahf
rorb
and
andb
rcl
add
ret
pop
lods
sbb
add
cmp
jle
and
push
mov
enter
repnz
mov
stos
or
inc
jp
cmp
dec
sbbb
shll
iret
lret
mov
adc
inc
clc
lock
nop
loope
in
pop
test
aad
cmp
or
test
call
push
push
aas
notb
inc
pop
push
adc
stos
test
dec
test
mov
mov
xchg
inc
mov
pop
cmp
cwtl
mov
popf
cltd
rorb
pop
fwait
cmp
push
stc
pushf
andb
in
fldenv
inc
insb
cli
ss
es
pop
mov
sub
xchg
push
inc
dec
fidivrl
bnd
jbe
pop
icebp
sub
cmp
test
xchg
fstl
xchg
leave
test
or
mov
jg
subl
jbe
cltd
pop
xchg
cmp
scas
lods
add
sbb
arpl
mov
test
arpl
cs
stc
mov
cltd
adc
fiadds
aam
add
clc
pop
xchg
mov
mov
fidivrl
in
clc
xor
or
sbb
cmpl
std
sub
in
sbb
arpl
add
pop
test
push
pop
in
push
jmp
add
ss
mov
stos
sti
pop
lds
adc
std
mov
notb
fistl
mov
jnp
fwait
leave
test
and
icebp
add
dec
inc
xor
cs
inc
push
adc
fstenv
dec
fwait
mov
and
lods
sbb
cld
mov
sbb
jp
jbe
cld
sbb
sbb
push
mov
push
cmpsb
and
ds
xchg
jmp
pusha
movl
mov
jmp
push
pushf
lea
jmp
dec
pusha
add
dec
inc
mov
ljmp
in
mov
mov
or
lock
xor
popw
cmpsb
jmp
insl
jle
mov
mov
les
jl
mov
scas
cmpsb
lds
clc
mov
jmp
mov
js
and
jl
cmp
sbb
jecxz
mov
or
push
pop
out
aaa
popa
xchg
mov
xlat
cmp
loope
test
xchg
jb
icebp
adc
mov
sub
pop
push
cmp
or
je
imul
lods
cmp
idivl
jne
and
cmpsl
iret
in
aad
leave
orl
adc
jl
addb
dec
test
mov
mov
push
inc
leave
mov
adc
jmp
xor
jnp
xlat
les
xlat
sbb
sub
aas
mov
xchg
scas
xchg
pop
push
xchg
sbb
stc
inc
pop
repz
stos
cmpsb
lods
fnsave
xchg
cmp
xor
movsb
shll
cmc
dec
jbe
rol
mov
mov
dec
push
sub
or
inc
or
mov
cs
hlt
mov
xor
adc
cmpb
jne
add
xchg
fidivrl
push
aam
stos
daa
lahf
lods
pushf
mov
aad
aam
push
repz
sbb
mov
sub
dec
dec
rorb
call
mov
movsb
stos
mov
enter
test
xor
jcxz
jns
call
pop
xor
sbb
addr16
cwtl
xor
ja
cli
std
cltd
lahf
push
push
sbb
imul
mov
xchg
and
mov
cmp
add
aas
xchg
adc
ror
out
std
jns
pop
and
jge
lret
lods
jae
imul
imul
push
dec
mov
mov
sub
das
out
xor
push
test
rclb
push
out
mov
xor
and
sbb
in
in
aas
sbb
enter
lock
imul
xor
outsb
sahf
xor
pushf
xchg
adc
mov
xchg
daa
push
ss
jo
imul
mov
or
mov
sub
in
jp
cmpsl
mov
jnp
fiaddl
mov
add
dec
inc
pop
pop
xor
aas
cmp
idivb
xor
out
or
xchg
jnp
ret
cmp
int3
mov
ffreep
ficoms
adc
add
cmovbe
and
push
ret
and
mov
and
psubsw
xor
mov
jae
loopne
cmpsb
jmp
inc
ret
aaa
insl
cmpsb
mov
push
lcall
dec
inc
push
cmc
in
fdiv
out
dec
loopne
xchg
pop
mov
test
mov
ficompl
mov
push
inc
clc
in
out
fstps
lret
push
repnz
fs
mov
outsb
sub
mov
jo
lcall
mov
or
xor
sti
dec
orb
addr16
fistpl
outsl
adc
xchg
out
lea
and
inc
pop
push
add
jp
mov
rcrl
repz
lock
sbb
dec
cltd
cli
inc
stc
dec
lods
inc
lea
shrb
mov
xchg
xchg
fsts
ret
xchg
jns
fnstenv
test
push
dec
loop
mov
stc
loope
daa
jns
mov
mov
cmpsb
lret
xor
stos
and
cmpsb
filds
cmp
add
or
out
mov
cmpsb
xchg
xchg
inc
int3
loop
sub
cmpsl
mov
fst
dec
les
ficomps
mov
adc
fxch
add
sbb
test
inc
mov
adc
bound
pop
inc
jns
mov
jb
cmp
sub
pop
fdivs
lods
sbb
sub
inc
adc
scas
insl
imul
add
xor
xor
clc
clc
xor
cmc
xorl
pushl
mov
pushl
popf
pushf
pushl
ret
clc
xor
stc
xor
mov
xorl
bt
pushl
popf
pusha
pushf
pushl
ret
and
sbb
dec
cmpsb
cmc
push
mov
ljmp
dec
out
outsl
test
je
leave
cwtl
cmp
mov
jecxz
push
daa
xor
stos
inc
xor
insb
lock
jae
mov
adc
xor
sub
enter
and
inc
add
imul
das
es
clc
cmpsb
mov
xchg
sbb
and
cltd
or
xchg
int3
push
push
adc
les
lcall
cmp
fwait
aam
rol
lret
or
sti
xor
pop
outsl
mov
fdivrs
jae
push
push
sub
fsubrs
xchg
shrl
push
jmp
or
jle
js
orb
mov
pop
ret
sbb
fistpll
sbb
push
rorl
cmp
jl
jne
ljmp
stc
push
sarl
lcall
call
mov
out
pusha
repnz
jecxz
mov
xor
add
push
pop
jbe
xchg
push
cld
loopne
sbb
pushf
or
in
cltd
sub
adc
icebp
push
scas
dec
sub
loope
add
xor
sbb
jmp
jmp
pushf
movl
jmp
jmp
call
call
mov
xor
mov
jmp
xor
push
xor
push
xor
bt
xorl
bt
test
xor
clc
jmp
pushf
movl
pushf
mov
pusha
lea
jo
push
pushf
push
pushf
movb
lea
jmp
pushf
pusha
movl
call
jno
sub
ljmp
sub
sbb
push
cld
push
xor
out
es
enter
xor
lcall
mov
cmpsl
loopne
jmp
sbb
pop
push
push
fmull
mov
mov
inc
push
iret
mov
fimuls
insl
lods
into
mov
push
adc
pop
mov
mov
movsb
cmp
loop
sbb
outsl
push
movsl
jmp
pusha
mov
add
or
pop
dec
cld
mov
mov
inc
dec
in
jb
or
jbe
daa
in
cs
mov
adc
jmp
adc
cmpl
add
aaa
xchg
inc
out
popa
push
dec
mov
scas
inc
cltd
xor
das
mov
jle
mov
test
bound
movsb
push
loopne
aam
cmp
shlb
lahf
sbb
jo
mov
xchg
push
jl
fs
dec
fwait
xchg
and
push
dec
xor
and
inc
jno
mov
mov
xor
xchg
bnd
and
inc
cmp
push
insl
mov
or
daa
out
cmp
mov
pop
fimull
cmp
sbb
fbld
cltd
lret
sbb
adc
cmp
push
adcb
out
ja,pt
movsl
and
jbe
jecxz
xchg
and
ret
imul
cld
pop
not
sub
push
in
outsl
movsb
xor
mov
jecxz
adc
repz
xchg
cli
xchg
sub
mov
pop
scas
mov
fidivl
loope
rolb
jp
mov
pop
popf
out
or
push
fs
imul
hlt
xchg
cltd
aaa
pop
cmpsb
outsb
insl
orb
sub
mov
movsl
insb
cltd
shrl
fcmovne
popa
sarb
jo
in
push
inc
pop
out
inc
filds
adc
mov
mov
mov
adcb
int
pushf
test
jge
lcall
xchg
into
leave
cmp
mov
addl
nop
daa
stos
ret
int3
pop
jb
gs
or
xchg
iret
add
sti
bnd
mov
gs
pop
cltd
js
lea
push
sbb
int3
nop
jmp
lea
cld
enter
popa
inc
add
mov
test
cmp
scas
cmp
add
daa
dec
adc
shrb
push
jno
shrl
dec
cmp
cld
pushf
and
in
sarl
rorb
repnz
xchg
ja
mov
dec
out
inc
div
dec
push
jae
les
out
jl
pop
xchg
fld
adc
in
pop
push
inc
inc
and
int3
mov
xchg
jb
dec
in
fildll
jecxz
fidivs
int
push
lcall
sar
jge
stc
sbb
imul
cmp
stos
cmp
cltd
outsb
push
adcb
or
jb
leave
or
add
lods
jno
es
inc
xchg
and
lea
cmp
dec
inc
jmp
outsl
mov
xor
outsb
mov
pusha
xor
push
cld
xor
mov
cmp
mul
jno
mov
subl
lock
xchg
mov
sti
mov
test
popa
xchg
and
xor
adc
add
ds
sbb
pop
aas
enter
pushf
mov
mov
sti
sbb
push
test
jle
sub
and
mov
imul
pop
imul
das
stos
cld
mov
jg
fwait
or
and
push
push
imul
pop
pop
push
dec
xchg
scas
shll
cld
nop
subl
pop
mov
or
fucomp
push
cmp
repnz
in
mov
mov
xchg
and
clc
mov
jg
test
adc
ficompl
pop
cmpsb
mov
add
xrelease
mov
jbe
data16
adc
fs
mov
ds
scas
cmpsl
popf
inc
sub
xchg
mov
aas
jno
insb
sti
sahf
icebp
sbbl
pop
push
mov
sub
rcl
jecxz
dec
stos
enter
shlb
pushf
xchg
and
mov
fisubrs
daa
mov
inc
rorb
or
jmp
stc
mov
test
cmp
jge
and
sub
push
xor
out
imul
insb
in
mov
xlat
arpl
push
or
loopne
and
mov
pop
cmpsb
dec
lods
addr16
stc
out
pop
imul
xchg
adcb
imul
cmpsl
out
outsl
xchg
lcall
sti
xchg
in
mov
movl
xchg
stos
aad
inc
push
in
jp
or
xchg
and
sarl
enter
ss
icebp
call
mov
mov
inc
movsl
mov
and
push
or
sahf
or
jg
andl
ds
mov
mov
dec
int3
nop
mov
mov
rcrl
cmp
cmp
mov
ret
fldt
mov
es
pop
cmc
mov
int3
decl
mov
cmp
jle
jns
push
loope
push
cld
loope
aaa
and
adc
mov
pop
push
outsl
or
adc
pop
call
rcl
std
push
lods
push
mov
int
mov
xchg
scas
mov
xchg
xor
in
icebp
and
xlat
mov
test
lods
lock
jl
and
daa
sbbl
cmp
inc
mov
orb
inc
fistps
testl
mov
adc
xchg
xchg
sbb
pop
test
cmp
lods
int3
stc
cwtl
lahf
jg
push
and
pop
add
ret
dec
push
repz
mov
push
arpl
xor
pop
fcmovnbe
bound
jbe
fildll
imulb
int
nop
inc
cs
addl
js
stos
cmpsb
mov
js
mov
or
sub
cmp
sarl
xchg
mov
cli
or
or
rol
icebp
sbb
sub
xchg
test
pop
xchg
mov
paddsw
fnsave
mov
and
hlt
jo
xlat
sbb
pushf
ja
sbbb
inc
cmp
dec
popa
jmp
xchg
push
imul
ja
inc
out
insb
mov
je
jmp
and
cmpsb
jae
rcr
js
cmpsl
and
xchg
les
mov
cmp
sub
sti
das
inc
mov
mov
pop
sbb
nop
addr16
sbb
jmp
mov
inc
push
rep
push
lcall
je
xchg
pop
in
clc
and
les
xchg
roll
nop
adc
ret
pop
push
pop
mov
fnstsw
jle
daa
lahf
sbb
and
icebp
mov
out
xchg
inc
mov
in
inc
rorb
int3
fdivp
lds
or
mov
inc
mov
mov
out
pop
test
xchg
mov
int
dec
or
dec
sub
xchg
jle
jp
mov
adc
add
das
jbe
pusha
daa
loopne
loop
loop
xor
ret
ret
inc
in
mov
int
dec
push
pop
mov
dec
cmp
jno
hlt
jge
cs
mov
pushf
test
xchg
sub
cld
inc
jnp
call
cmpb
xchg
ret
cmp
push
in
lods
cld
xor
dec
arpl
iret
fdivr
pop
das
and
out
lds
cmpsb
or
mov
mov
in
push
test
and
cmc
lcall
pop
mov
mov
daa
push
sub
fs
push
jae
jo
dec
or
outsb
ret
push
movsb
pop
scas
xchg
fistpl
xchg
out
push
loope
push
popf
xchg
add
das
push
push
loopne
inc
and
lds
dec
pop
push
lea
jmp
mov
xor
clc
stc
xor
push
xor
call
call
pushf
xor
test
xor
jmp
fdivs
xor
mov
ljmp
scas
push
mov
leave
test
xchg
hlt
fwait
and
mov
xchg
arpl
and
mov
ss
or
outsb
jecxz
adc
ret
rcrl
mov
into
cli
xchg
push
mov
or
xchg
jl
mov
jge
cmpsb
sbb
dec
sub
outsb
or
fists
rcrl
inc
push
dec
xor
adc
inc
call
xchg
pop
adc
lods
sti
enter
cmp
push
sub
ret
cmp
mov
std
mov
data16
rorb
stc
cmc
or
and
push
es
sbb
cmp
rcr
sahf
repz
jno
call
or
test
dec
and
test
pop
xor
in
pop
fstl
lahf
decb
outsl
inc
outsb
add
add
loop
add
cmpsb
sbb
jnp
mov
fidivrs
push
movsb
push
mov
cmp
sahf
dec
adc
cltd
aas
mov
cmp
mov
cltd
rcrl
ret
or
jne
lea
cmpsl
stc
in
mov
pavgb
out
cmp
mov
ja
xor
xor
or
pop
enter
xchg
push
sub
out
lcall
push
and
add
call
add
jns
push
ljmp
movsl
test
mov
or
jb
mov
dec
gs
xor
cmpsl
xchg
jmp
outsl
fs
das
adc
xor
adc
imul
and
adc
adc
loope
xchg
inc
inc
shll
mov
add
mov
in
je
mov
lcall
pop
in
or
int3
or
int3
and
movsb
jge
daa
pop
or
lahf
lock
xor
aaa
fisubl
fwait
xor
jo
popf
fmull
pop
fmulp
add
pop
cmp
mov
addr16
lret
xor
cld
mov
js
pop
idivb
xchg
push
mov
sub
add
push
or
dec
adc
mov
pop
push
or
sahf
daa
and
call
xchg
movl
pop
movsb
test
dec
mov
mov
pop
ss
mov
or
or
xor
repnz
jae
scas
pushf
jbe
aam
hlt
incl
sub
gs
popa
fdivs
mov
mov
outsl
pop
fsubs
or
insb
mov
cmp
loop
pop
popf
pop
mov
stc
loope
loope
cwtl
imul
les
jns
pop
mov
dec
push
dec
test
push
add
and
popf
push
jbe
cltd
adcb
pushw
addr16
dec
mov
push
mov
inc
inc
nop
push
mov
and
xlat
adc
imul
sub
pusha
mov
mov
stos
test
loope
or
push
jae
xchg
push
adc
pop
push
out
iret
xor
fwait
and
adc
imul
mov
clc
jnp
test
sbb
out
orb
icebp
lods
js
dec
or
push
mov
ljmp
jle
mov
inc
iret
fstpt
sub
or
push
pop
insb
and
xor
pop
movsl
sub
lods
add
in
cmp
cmp
pop
repnz
mov
test
decl
cld
aam
and
adc
cld
jge
xchg
jp
loop
les
pop
cltd
and
in
out
and
cmp
and
sub
lods
cmp
xor
xor
mov
prefetchw
stos
test
adc
je
outsl
or
in
imul
shll
jp
lds
mov
xor
call
push
das
push
dec
int
loopne
cmpsb
fs
cmpsl
pop
call
dec
int3
les
aad
or
imul
cli
dec
cs
and
pop
xor
sbb
xor
les
inc
jle
mov
popl
scas
aas
imul
and
mov
mov
imul
cli
cs
rcll
pop
cmp
into
stos
sub
pop
mov
xor
mov
sub
sbb
mov
xchg
shlb
mov
arpl
adc
pop
shl
js
shll
nop
push
sbb
cmpsb
scas
inc
mov
bound
cmp
xor
jno,pt
aas
rclb
or
int
inc
inc
js
nop
in
loopne
gs
pop
mov
out
enter
mov
xor
shlb
lret
stos
pmulhw
pop
pushf
inc
faddl
fstps
xchg
cld
fidivl
mov
xchg
bound
xor
and
int3
scas
dec
xchg
ret
or
push
mov
inc
dec
fildll
imul
or
push
test
xchg
mov
adc
push
xchg
or
test
xor
xchg
cmp
pop
dec
fiaddl
shl
fildl
ja
out
mov
or
pop
call
sbb
xorb
rcr
mov
mov
or
shl
movsb
or
dec
lcall
ljmp
test
mov
add
lcall
mov
in
es
jl
aaa
sub
fimull
pop
dec
push
insb
dec
inc
jne
adc
add
fwait
pop
test
push
push
movsb
xorb
add
or
sub
aaa
das
out
push
call
mov
pop
enter
add
adc
sub
dec
sahf
jmp
mov
rorl
pushf
jnp
out
xor
dec
les
push
outsl
or
add
cmp
jle
insl
enter
scas
fistl
add
jmp
stos
inc
lods
and
sub
mov
jns
cmp
add
adc
or
jle
in
movsl
push
cs
pop
xchg
fists
jge
cmpsl
inc
cmp
imul
stos
sti
call
sub
ret
sbb
lahf
push
add
repz
adc
or
div
sub
jbe
mov
mov
in
mov
sbb
add
dec
cwtl
pop
mov
fsubrs
pop
aaa
cmp
fs
out
mov
sbb
icebp
push
add
sbb
or
sub
jb
je
cwtl
adc
ds
or
cltd
xor
ljmp
insl
repnz
and
cmpsl
ja,pn
js
mov
testb
or
mov
repz
aad
in
call
inc
or
aam
mov
outsl
xchg
xchg
iret
and
mov
rorl
stos
jecxz
loope
bnd
dec
rorl
cltd
sahf
adcb
jecxz
in
ljmp
push
inc
mov
xor
mov
popf
enter
int
adc
repz
mov
test
out
cmc
mov
bndstx
push
mov
push
mov
inc
dec
fnstsw
mov
xchg
xor
sub
test
xor
pop
push
mov
sahf
add
out
sub
jb
mov
arpl
push
sbb
loopne
fisttps
cwtl
insb
or
push
je
sub
lds
test
in
fidivrs
add
mov
ja
push
adc
scas
dec
les
es
test
cmp
repnz
jmp
dec
and
movl
pusha
pusha
pushf
push
movl
mov
mov
lea
jmp
push
jmp
jmp
dec
add
adc
xchg
xor
shll
adc
dec
xor
imul
enter
rcrl
push
cmc
mov
mov
cmp
adc
in
adc
sbb
dec
adc
pop
ss
aad
add
inc
adc
or
pop
mov
mov
sub
xchg
mov
in
xchg
or
test
sbb
aad
lods
rep
or
inc
test
adc
es
sbb
test
stos
and
in
and
add
fdivs
addr16
hlt
and
push
xchg
imul
mov
lret
imulb
mov
imul
inc
sbb
cmp
inc
lock
scas
jl
stos
jecxz
xchg
clc
out
test
mov
pop
insb
mov
nop
push
adc
or
scas
jb
add
addr16
pop
sub
jnp
add
inc
inc
call
inc
pop
cmp
pop
xchg
cli
mov
push
sbb
pushf
xor
xor
mov
out
rcrl
outsl
push
cmp
jmp
jg
popa
sarl
xchg
dec
sar
inc
push
cmp
add
out
iret
insl
es
lea
push
popa
lahf
inc
outsl
int
ljmp
hlt
push
ja
cld
sbb
into
and
push
or
icebp
int3
arpl
mov
mov
in
pop
push
repnz
adc
cld
add
dec
xchg
ret
adc
push
stos
add
rorl
imul
dec
cwtl
popa
gs
sahf
fmuls
xlat
and
aas
add
call
insl
sahf
dec
in
sarl
push
cmpsl
inc
cltd
xchg
scas
cs
xchg
scas
cld
fcmovnbe
inc
push
push
cld
mov
and
into
sub
push
insb
cmp
dec
jecxz
out
loopne
pop
ja
mov
dec
outsl
popf
xor
imul
lcall
sub
stos
test
shrb
inc
sbb
in
sbb
jmp
cmc
into
movsb
pushf
inc
push
sub
shll
jne
call
jno
sbb
jne
dec
loope
shlb
jge
outsl
add
fcompl
aam
push
lret
ss
cmp
iretw
add
pop
aad
imul
mov
lret
pop
xchg
jns
out
inc
rorb
sub
inc
sbb
arpl
andl
bound
mov
jo
mov
bound
sub
push
mov
adcb
pop
pusha
pop
or
and
out
std
rcl
mov
xor
stos
push
mov
pusha
cmp
fildll
pmaxsw
jmp
pop
aaa
mov
fnstcw
js
addr16
das
add
pop
or
mov
add
mov
les
mov
lea
je
cs
ja
adc
enter
gs
rorb
cmp
insb
sub
inc
dec
fwait
das
sti
shr
ret
sbb
sbb
xchg
dec
inc
ret
or
pop
push
in
je
adc
xor
pop
and
cmc
xchg
call
and
inc
or
cmp
xor
sub
fwait
xor
cld
dec
mov
and
pop
shrl
xchg
popa
adc
bound
nop
inc
xor
mov
scas
dec
mov
xor
pop
add
sub
mov
fstpt
or
cs
mov
ss
ss
cmp
push
pop
shlb
fcoms
cwtl
mov
pushf
jb
inc
add
push
xchg
and
mov
sbb
or
jns
loop
mov
orb
pop
jns
xor
push
cmp
mov
xorb
arpl
sbb
sbb
mov
add
mov
and
xchg
xor
movsb
pushf
pop
fldenv
push
imul
and
leave
or
loopne
movsl
dec
adc
and
lods
mov
scas
std
adc
xchg
mov
pop
cmp
cs
dec
fwait
inc
push
mov
dec
jg
xchg
fst
clc
ret
jne
inc
cli
cmp
movsb
push
pop
push
bound
mov
je
leave
pop
xchg
jg
ret
jae
inc
xchg
xchg
jge
in
push
jno
in
add
insb
adc
inc
test
mov
adc
idiv
jmp
mov
insb
enter
dec
les
es
enter
jnp
int3
pop
movsw
fsub
jb
mov
add
addr16
sub
pop
stos
std
or
ja
lods
rcrl
mov
shr
mov
pop
inc
pop
icebp
and
mov
pop
test
ror
in
imul
inc
adc
cmp
pop
jne
mov
dec
push
enter
pop
jecxz
arpl
icebp
xchg
cmp
sbb
push
inc
rcrb
jle
cld
xchg
subb
mov
xlat
xchg
pop
mov
push
sahf
in
call
gs
inc
mov
rcrb
or
xor
lahf
loop
sub
inc
mov
in
int
inc
mov
xchg
scas
fnstsw
fnstenv
dec
iret
push
push
mov
mov
xchg
sub
add
movsl
mov
mov
ret
int
mov
or
lds
lret
inc
and
or
addr16
pop
dec
jge
in
fsubrl
inc
repnz
push
out
cmp
sti
test
dec
dec
xchg
sti
sbb
add
sbb
inc
call
push
fistpll
movsb
clc
imul
mov
into
js
jns
outsb
add
xor
pushf
icebp
xchg
ljmp
jb
dec
adc
fdivs
inc
movsb
mov
gs
stc
add
cmp
jmp
lret
push
sub
jl
mov
cmp
inc
mov
inc
or
mov
jne
jo
or
or
out
insb
movsl
inc
or
std
pop
addl
repz
test
ja
lahf
arpl
inc
pop
ss
dec
lds
fnsave
decl
cmpsl
add
leave
jo
push
shrb
popa
stc
leave
or
mov
push
cmp
mov
push
and
pop
push
std
dec
and
mov
jo
xor
and
imul
jl
mov
les
into
lods
add
divl
pop
dec
cld
dec
int3
pop
lock
ret
or
std
and
mov
or
stos
jbe
ja
sbbl
sbb
sbb
push
mov
push
cmp
xchg
sbb
movsl
jle
jne
fmull
add
lea
lahf
push
jnp
imul
outsb
mull
sub
jge
pushf
rorl
seta
sbb
pop
arpl
mov
cmp
test
sbb
es
testb
cli
leave
inc
push
in
repz
pushf
dec
popf
sub
jo
jmp
or
jle
fsubr
sbb
add
and
pop
adc
pop
inc
push
dec
and
out
stc
dec
xchg
shr
out
sub
and
sbb
dec
outsb
sbb
xchg
cmpsl
ja
enterw
xchg
adc
cltd
out
cmp
mov
cmp
jae
lods
xor
cwtl
jmp
jle
cmp
rcl
fcoml
dec
es
jmp
iret
and
add
cmp
xor
mov
repz
cmovo
std
push
push
lods
movsl
and
jle
mov
test
arpl
lcall
fdivs
outsb
add
push
mov
mov
and
jo
add
and
loope
std
sub
push
xchg
pop
outsb
push
mov
mov
repz
and
ljmp
stos
es
cmp
loop
out
addl
movsb
cmp
leave
cwtl
xchg
pop
push
mov
jl
clc
pop
xchg
std
pop
jmp
xchg
in
xlat
dec
mov
out
stos
popa
rcr
pop
inc
lret
stc
test
popa
mov
bound
lds
dec
jecxz
leave
test
mov
cmpsl
fs
add
push
scas
lret
mov
ret
xchg
lea
rolb
adcl
jecxz
xrelease
into
int3
movsl
fistpll
sub
nop
int
xchg
pusha
xor
pop
movsb
pushf
mov
or
cmp
xor
enter
inc
sarb
inc
pop
gs
xlat
jle
inc
ror
xor
add
pop
mov
lock
cmp
inc
rcll
outsl
rorw
cmpb
pop
sarb
fldl
mov
stos
mov
sub
les
cmp
push
push
enter
cmpsl
movsl
jae
dec
ja
and
pop
popf
xlat
push
repz
fnsave
fistpll
adcl
hlt
cmp
inc
dec
lret
push
sti
dec
add
rcrl
xchg
sarl
in
mov
out
fs
jecxz
je
addb
xchg
adc
fabs
stc
pusha
ficomps
lods
movsl
fcmovnbe
fcomps
pop
jae
les
ror
or
and
mov
push
sahf
cmp
test
fiaddl
out
orb
xor
mov
inc
into
sub
sub
cwtl
faddl
xchg
les
mull
fistpll
push
shrl
push
rcrl
mov
in
push
subl
jecxz
cmp
clc
fiadds
and
or
fcmovne
push
int3
mov
test
lcall
mov
bound
sub
xor
or
jle
inc
adc
jle
xchg
out
jge
loope
dec
icebp
shr
and
mov
cltd
xchg
std
jns
push
addr16
xchg
add
subl
add
and
xchg
jno
mov
mov
mov
push
mov
pushl
popf
pushf
mov
pushl
ret
call
lret
pop
mov
out
addr16
cmpsb
push
rep
mov
add
into
add
ss
push
sahf
int3
mov
mov
iret
dec
addr16
xchg
clc
cmpsl
cmpsb
push
enter
xchg
add
pop
xchg
imul
je
or
sub
xor
iret
pop
jb
sbb
cmp
mov
pop
mov
movsb
mov
dec
adc
daa
xchg
mov
cmc
cmp
mov
fwait
pop
sbb
sbb
pop
inc
sbb
inc
xchg
xor
imul
movsl
aam
mov
inc
insl
and
js
imul
movsl
jns
arpl
adc
int3
cmovs
mov
repz
dec
pop
xchg
aam
mov
xorb
mov
imul
jp
les
jae
dec
arpl
pop
mov
push
mov
ret
sub
lret
pop
js
test
jne
cmpsb
ret
int3
inc
cltd
lahf
in
lods
in
outsl
sahf
dec
daa
mov
ss
call
cwtl
dec
and
mov
inc
rorl
inc
jecxz
and
stos
xor
push
push
dec
lods
jp
adc
mov
mov
cld
dec
pop
pop
cmp
inc
pusha
mov
xchg
xchg
push
iret
dec
add
fdivs
jmp
aas
aaa
cmp
loop
sbb
mov
xor
ret
mov
rcll
adc
adc
enter
ret
mov
mov
bound
and
mov
jp
adc
clc
nop
xchg
cmp
arpl
aad
stc
popf
xchg
and
push
mov
push
adc
cltd
sbb
arpl
xchg
enter
out
and
cwtl
les
xchg
add
push
jle
loope
orb
cmp
in
idivb
sbb
pusha
cltd
imul
hlt
push
sub
je
pushl
cmp
sarb
scas
and
in
jae
sbb
cwtl
push
mov
lock
pop
xchg
scas
xor
sub
in
repnz
jl
jle
cmp
in
loopne
rolb
mov
push
clc
repnz
mov
mov
lea
jecxz
cs
add
pop
int3
adc
outsl
gs
sbb
mov
push
test
mov
inc
lods
bound
repnz
mov
xchg
inc
inc
push
int
push
or
sub
ret
and
je
xor
mov
mov
mov
adcb
repnz
data16
or
in
sbb
das
lods
jnp
outsl
sub
sub
aam
mov
sbb
movsb
movl
test
inc
sub
sbb
pop
lahf
andb
popf
ret
mov
push
imul
int3
sub
adc
std
and
pop
adc
fdivrl
xlat
or
mov
sub
pusha
inc
sub
call
jge
testl
mov
cli
mov
mov
xcrypt-ecb
cmpsl
int
andl
jae
sbb
sbb
cmp
daa
push
test
adc
xor
in
test
mov
sar
test
repz
divb
pusha
push
cmp
and
aas
push
pop
dec
fcompl
stos
es
popa
flds
in
push
mov
rorb
test
add
mov
sbb
aaa
popa
mov
repz
loop
jle
adc
xchg
popf
mov
sub
jge
or
mov
iret
pop
fcompl
shlb
std
in
sti
xor
and
jp
shlb
mov
inc
in
mov
dec
repnz
adc
xchg
lret
hlt
and
jne
or
inc
fsts
pop
flds
pop
sbb
stc
mov
cmpb
pop
push
and
jg
pop
jecxz
stos
movsb
add
add
sbb
mov
inc
imul
test
sbb
ret
add
ja
stc
mov
push
lret
sub
ja
loope
sbb
xchg
leave
arpl
xor
push
push
push
cmp
mov
leave
cs
sahf
mov
imul
nop
ffree
aaa
or
mov
test
and
insb
mov
and
dec
loopne
imul
fisttpll
inc
jo
data16
mov
add
pusha
scas
mov
jg
ds
imul
pop
jb
push
mov
sbb
std
mov
js
lret
dec
leave
jno
sarb
cli
fldenv
test
jb
push
insb
or
push
xorl
pop
push
mov
push
into
mov
movsl
cltd
xchg
jb
dec
enter
testb
imul
push
fiadds
popa
std
push
mov
in
lcall
popa
dec
lret
ret
inc
cltd
sahf
jns
fisubl
lods
sub
inc
int
adc
ret
sub
push
jmp
xor
mov
sbb
in
push
test
mov
jnp
sbb
mov
movsb
fstps
cmpsl
cmp
pop
pop
add
dec
imul
into
rcll
pop
cltd
mov
push
fwait
lock
mov
xor
mov
out
pop
jne
xchg
mov
mov
push
xchg
cmp
cltd
or
xchg
adc
pop
aad
jae
jbe
movsb
loope
mov
adc
add
and
add
or
mov
lods
or
incl
adc
add
mov
repnz
cmp
adc
movsl
arpl
adc
lret
in
add
push
dec
ss
jnp
mov
je
sub
lret
and
sbb
or
popa
mov
test
mov
cmc
jae
das
into
bound
rcll
lret
aas
push
jmp
subl
push
push
xlat
into
pushf
push
fnstcw
xchg
jp
fimuls
mov
or
mov
push
hlt
scas
mov
and
pop
popf
nop
sahf
add
mov
data16
mov
mov
out
cmpsl
sbb
out
xchg
xchg
in
call
in
das
mov
or
dec
xchg
sbb
jp
pop
aas
lret
loop
mov
aam
cmp
ds
mov
enter
sub
sbb
cltd
int
stc
lock
repnz
sub
stos
fisubl
test
popa
dec
pop
or
xchg
loop
lea
mov
stos
iret
inc
ljmp
jp
dec
pop
test
xor
xor
ja
ficompl
je
fdivs
enter
fistl
loop
lahf
dec
dec
hlt
mov
mov
shlb
insl
jmp
add
sub
ret
inc
xchg
push
mov
jl
insb
cmpsb
aad
mov
insb
jns
call
mov
inc
mov
ror
cmc
cmp
xchg
add
mov
mov
lret
fs
push
daa
aas
xchg
mov
test
sbb
loop
push
cmpb
sti
mov
xchg
push
outsl
cmc
add
dec
xor
cmp
push
cmp
in
lret
scas
lock
dec
mov
pop
xor
pop
cwtl
xor
hlt
insb
dec
adc
fsts
out
sbb
icebp
test
nop
xchg
outsb
sbb
add
pop
jmp
loope
xchg
mov
int3
jae
lret
mov
test
mov
jb
xchg
mov
lahf
fisubs
xor
or
pop
das
shll
mov
xor
and
pusha
mov
or
call
dec
shl
sub
hlt
jnp
push
aas
aaa
push
popl
pop
pop
push
mov
pop
cmpsl
xchg
pop
sbb
les
fiadds
mov
push
lret
cmp
sbb
jmp
mov
inc
jb
lock
cmp
sbb
outsl
cs
cld
out
push
lahf
add
mov
add
xchg
pushf
repnz
cmp
roll
jecxz
push
fwait
pop
jecxz
dec
dec
sub
data16
in
and
jle
sub
add
sbb
or
rolb
jmp
jns
scas
call
mov
aad
mov
aaa
lret
push
pop
adc
rorl
jmp
insb
in
out
jo,pn
and
jmp
mov
test
imul
sbb
adc
pusha
xorl
dec
add
scas
call
jl
cltd
stos
aas
jbe
daa
std
or
popf
stos
sub
and
addr16
in
push
je
and
filds
ret
movsl
lods
cmp
xchg
ret
pop
popa
negb
dec
loopne
xlat
sub
pop
dec
loop
jne
out
xorl
shrl
out
xchg
aam
sti
scas
or
sbb
cmp
adc
roll
popa
sar
mov
je
push
inc
addr16
cmpsl
into
xchg
pop
cmp
jnp
push
mov
inc
xor
push
aam
lods
imul
repnz
fnsave
mov
mov
jle
push
mov
lret
push
xor
aad
inc
mov
and
scas
push
xor
pushf
data16
xor
in
out
not
dec
cmp
in
stos
or
sarb
dec
xor
adc
fstpt
movsl
cmp
enter
shrb
cmpsb
bound
rorl
test
jae
cmp
mov
test
pop
adc
js
sbb
test
push
push
mov
xchg
mov
int3
or
out
popf
cltd
mov
loopne
add
popa
cmp
rclb
daa
mov
xchg
popa
les
movsb
fstpt
inc
fsub
xor
or
pop
int3
push
sub
xor
push
fwait
in
or
shlb
shlb
mov
cmpl
adc
cltd
sub
jp
rorl
cwtl
jmp
out
popf
cltd
mov
inc
mov
or
out
test
icebp
or
ss
pop
jb
add
mov
push
imul
mov
pop
out
add
dec
out
lds
jmp
inc
push
jbe,pt
dec
or
int3
jnp
pop
insl
imul
sbb
xchg
icebp
cs
mov
mov
in
fcoml
push
repz
adc
cmp
xchg
into
sbb
dec
lcall
sbb
sbb
jae
add
mov
jg
js
fisubl
mov
cmpb
jge
sub
mov
into
xchg
aam
inc
push
dec
inc
fcoms
fsubs
xchg
mov
mov
shll
and
mov
clc
cmpsl
push
std
sbb
push
or
mov
mov
sub
addr16
jns
mov
pop
push
jno
push
or
push
adcl
aad
cli
mov
jnp
loope
inc
xlat
movsl
mov
adc
loop
lret
mov
xor
sub
int3
insb
mov
out
loop
xor
dec
mov
or
lods
adc
lds
cmpsb
aas
into
loop
in
and
push
xchg
adc
aad
movsb
cmc
and
ret
mov
push
push
and
push
sbb
repz
push
xor
lcall
ds
jbe
sbb
sbb
daa
and
jl
mov
jl
pop
sub
ss
jbe
not
stos
lods
xchg
fbld
pop
push
pop
fistps
fidivs
dec
push
adc
push
movswl
in
xchg
bsf
mov
lcall
fidivrl
and
pop
ret
shlb
jle
cli
sub
xor
outsb
jae
mov
pop
icebp
adc
mov
mov
jo
jg
cmpsl
fs
lret
inc
shrb
adc
inc
pop
call
mov
mov
dec
inc
flds
adc
movsl
inc
popaw
inc
clc
decl
out
jnp
ljmp
push
stc
sub
inc
pop
add
jg
and
fcoms
push
lea
cmc
pextrw
pop
lods
dec
jmp
xor
fiaddl
scas
ds
rcll
cmp
jnp
sahf
cmp
adc
mov
popa
pop
dec
shr
ret
inc
mov
and
mov
cli
sbb
xlat
movsb
and
push
cmp
out
mov
adc
mov
movsl
and
pop
sub
dec
clc
mov
jl
or
xchg
outsl
clc
sbb
lock
ljmp
xor
xchg
jbe
out
int3
mov
and
push
sbb
fnstcw
lret
push
jns
out
inc
sahf
jae
mov
jae
xor
out
daa
mov
cmp
mov
xchg
sub
add
xchg
sub
push
lcall
or
dec
mov
push
or
xchg
xor
push
xor
loop
sub
and
movsb
pop
pop
aaa
push
test
mov
dec
cs
stos
rclb
adc
xor
jb
cmp
out
cmp
pop
lret
andl
or
xchg
cmpsl
std
or
insl
jmp
sbb
add
xchg
dec
sti
test
sbbb
add
push
inc
fcomps
leave
in
mov
cld
stos
bound
iret
xchg
aam
jbe
xchg
dec
lcall
cli
fbld
nop
cmp
mov
mov
fidivs
cmp
out
sbbb
clc
sbb
inc
js
shrb
andb
jle
sbb
fwait
pop
pusha
jae
jle
cli
insb
dec
jae
popa
das
ret
adc
sbb
jp
popf
cmp
out
lahf
pop
ja
aaa
fldl
push
or
fdivs
jo
cld
repz
push
out
scas
or
jne
sbb
mov
popf
repz
pop
xor
mov
add
jmp
adc
sahf
leave
xchg
xchg
sub
into
cmp
lret
mov
test
push
outsl
jns
pop
xchg
mov
jle
dec
insb
pop
ret
sub
add
rclb
mov
xor
inc
aad
lea
dec
and
add
mov
mov
call
lods
dec
xchg
mov
dec
push
fs
pop
dec
aad
pop
dec
push
cwtl
cs
lret
or
mov
leave
repz
dec
mov
imul
fmuls
int
arpl
je
loop
fs
xor
ficomps
out
scas
ljmp
push
dec
pop
repz
hlt
mov
pushf
popf
pop
scas
dec
cmc
xor
mov
lock
mov
into
sahf
fisubl
movsl
xchg
and
arpl
into
sub
sbb
cmp
add
dec
pop
out
test
fwait
out
xchg
mov
and
adc
push
repnz
mov
imul
sub
mov
stos
in
rcrl
ljmp
add
and
inc
dec
scas
inc
pop
mov
lock
repz
loope
mov
call
mov
mov
pop
pop
xor
mov
adc
or
mov
popf
cmp
loopne
rorl
mov
sbbb
imul
daa
push
sub
lock
out
pop
push
insl
jl
pop
aaa
jae
mov
imul
lods
push
mov
idivb
jbe
push
cmp
aaa
xor
addr16
popf
inc
xchg
xor
shrb
out
sbb
pop
mov
test
ja
stos
jle
sbb
test
mov
mov
jno
jbe
pop
mov
dec
fwait
inc
aaa
sbb
mov
xor
mov
fcomps
pop
sbb
loop
mov
addl
push
inc
and
scas
lret
scas
inc
push
sbb
jns
or
imul
test
xorb
les
out
cmc
enter
testb
daa
pop
push
icebp
mov
mov
mov
and
je
fidivs
popf
ret
cmp
xchg
sub
mov
shrl
out
out
mov
or
loopne
sub
inc
ja
jmp
pop
mov
sbb
stos
arpl
pusha
pop
mov
notl
adc
lods
sub
jo
push
out
pop
pop
fsub
ror
call
lcall
jns
fwait
xor
out
inc
add
cmp
cmp
aam
imul
in
xor
or
mov
jl
or
rorl
hlt
mov
sub
out
pop
or
ja
insb
movb
orb
jl
mov
mov
pusha
int3
jbe
ds
fmull
cmp
fwait
inc
adc
push
mov
jge
sub
push
dec
pushf
mov
adc
aam
inc
std
inc
popf
cmp
mov
adc
ljmp
cld
movsb
jp
or
inc
jl
inc
push
push
jmp
scas
pop
jne
outsb
ret
stos
jl
push
cli
pop
repnz
fucomp
mov
push
es
mov
popf
loopne
mov
inc
xchg
pop
movsl
and
or
loop
pusha
add
push
daa
or
xchg
or
pop
ja
jne
cmp
adc
mov
outsb
mov
inc
sahf
mov
adc
stos
popa
xchg
and
pop
es
movsl
std
mov
push
xchg
add
out
shr
xchg
das
into
push
aad
out
imul
mov
push
cmpsl
lock
mov
cltd
xor
xor
test
das
shrl
sub
dec
js
rolb
xor
aas
pop
into
pop
mov
test
add
mov
cwtl
jp
andb
mov
fs
and
xchg
mov
mov
in
mov
lods
sbb
mov
xchg
stos
stos
xor
scas
inc
jb
add
mov
loope
in
insb
pop
vcvtpd2psx
test
nop
jns
mov
ret
mov
fbstp
cmp
inc
addr16
rcrl
imul
lret
das
mov
loop
std
in
mov
std
and
fcomip
mov
lds
cmpsb
and
cmp
movsl
add
pusha
push
jns
fcomps
fisubrl
repnz
xor
inc
in
mov
adc
movsb
fwait
cmp
fldt
ds
sub
cmp
dec
stos
push
pop
sbb
loope
stos
insl
clc
or
jecxz
mov
or
mov
repnz
test
dec
in
in
movsb
sbb
jae
jl
repnz
aad
jae
push
adc
mov
cwtl
sub
idivl
int3
repz
popf
fdivl
cmp
cmp
add
push
jmp
test
cmp
repz
lret
jl
adc
arpl
pop
push
pushf
stos
pop
lahf
fsubrs
mov
rcrb
cmp
or
sbb
inc
adc
mov
cmpb
and
or
lds
scas
popf
test
mov
or
jecxz
sbb
rcrb
mov
push
lahf
pop
idivb
scas
xlat
imul
jmp
mov
dec
inc
fisttpl
push
hlt
jl
cmp
adc
sti
outsl
in
add
dec
xor
ret
push
leave
and
mov
mov
inc
and
insb
rcrb
ljmp
je
xchg
ss
hlt
ljmp
cmp
xor
roll
fidivrl
js
inc
bound
out
mov
movl
fs
inc
pop
and
pop
clc
shrb
dec
pop
inc
mov
shrl
mov
mov
sbb
mov
mov
ljmp
lock
std
jo
mov
hlt
in
mov
mov
push
std
loop
cmp
fcoms
std
scas
inc
sbb
sub
ret
sbb
lret
push
or
mov
xor
aas
test
pop
shll
jecxz
mov
push
sbb
clc
add
mov
mov
pusha
pop
movsb
lret
inc
cwtl
fisttpl
test
repnz
test
lds
mov
data16
jl
inc
mov
inc
pop
xchg
mov
hlt
and
add
lods
xchg
push
lock
jne
adc
icebp
out
sub
in
out
popa
popf
adc
and
cmp
in
mov
push
ss
jp
pop
inc
fmul
loopne
cld
dec
sahf
jge
pop
sahf
jbe
inc
popa
popf
adc
lcall
sub
push
in
and
stos
sub
mov
push
push
in
inc
dec
mov
dec
mov
ss
in
call
into
cmp
jecxz
icebp
jbe
mov
and
sarb
pop
mov
fnstenv
fadds
shlb
pop
out
mov
xchg
dec
sub
mov
lahf
scas
cmp
adc
sbbl
insl
or
add
js
into
inc
pop
ss
mov
jmp
fmuls
sbb
mov
adc
inc
xor
loop
dec
das
pop
dec
scas
in
daa
outsb
push
repz
loop
jae
stc
fsubrs
mov
ljmp
sbb
adc
jns
sub
out
bound
bound
stos
inc
scas
add
lcall
aad
mov
lods
xor
fwait
jp
dec
in
and
inc
jae
adc
sahf
divb
cmp
push
enter
test
bound
pop
inc
jae
mov
scas
fdivr
hlt
dec
aam
es
ljmp
popf
divb
les
decb
out
push
pop
sbb
cmpsb
mov
push
shrb
pop
js
stos
fnstenv
data16
or
lcall
xor
xchg
fidivs
pop
xor
mov
arpl
cmp
fcos
mov
aad
scas
call
cmp
or
testb
pop
call
int3
decl
and
stos
push
cld
hlt
lahf
dec
lret
pop
sbb
in
lock
adc
pop
arpl
sub
xchg
cmp
icebp
mov
dec
jp
es
cmc
or
bound
xchg
jns
pop
mov
or
cmpl
adc
pop
pushf
push
mov
es
sti
adc
jae
jp
leave
pop
or
push
add
sbb
xchg
in
cmp
cmpl
mov
es
or
inc
cmp
push
loopne
fwait
leave
pop
sub
ds
je
mov
xchg
lds
mov
sahf
in
cmpsb
into
sti
cltd
push
mov
mov
push
jne
adc
or
lret
push
dec
loop
ror
add
into
and
or
dec
jb
and
ss
shr
and
push
mov
in
pop
xor
data16
sahf
aam
jb
jl
adc
adc
cwtl
xor
sbb
fisubrs
cwtl
cs
lcall
lret
and
push
mov
in
lret
hlt
aaa
pop
lea
xor
jo
push
sbb
mov
inc
mov
bound
mov
repz
push
in
loop
cmpb
ficompl
mov
daa
cmp
xor
or
ret
sub
or
mov
xchg
mov
or
push
sub
cmpsb
or
shrb
xchg
ds
fbstp
mov
call
ret
movsb
mov
add
insl
xchg
imull
push
dec
ret
jmp
lret
inc
and
pop
fmull
fidivs
insl
mov
ret
inc
fcomps
mov
mov
lods
test
cmpsb
inc
inc
mov
hlt
pop
test
shll
das
jg
out
xchg
decb
dec
in
dec
mov
pop
lock
push
test
outsl
jle
mov
xchg
adc
or
jnp,pt
in
mov
aad
xchg
gs
iret
push
cmpsb
shrb
lret
pop
ficoms
xchg
sbb
ret
adc
pop
clc
mov
add
jne
pushf
add
popf
fcoml
fnsave
adc
push
lcall
or
repnz
jle
mov
test
ds
dec
test
out
aaa
push
add
sti
add
cmp
fscale
lods
insl
ret
call
sbbl
fstps
or
nop
fnstsw
add
lret
mov
lret
or
in
cmp
dec
mov
int3
mov
xor
or
jle
lods
ficomps
daa
inc
ds
ss
adc
pop
jno
mov
inc
pop
jbe
xchg
and
xchg
testb
mov
popa
cmpl
dec
push
xor
leave
or
pop
xor
mov
push
clc
mov
int
mov
inc
dec
and
and
adc
mov
dec
xor
xchg
jge
mov
inc
mov
sbb
and
adc
aad
jl
adc
out
or
xor
clc
push
lods
scas
cmp
adc
push
sub
xchg
jp
insb
xor
mov
sti
out
cmp
push
sbbl
xchg
stc
dec
fs
ret
inc
mov
or
mov
xor
sub
mov
push
mov
sbb
mov
xor
mov
cltd
adc
movb
cli
lahf
loopne
andl
test
dec
jp
add
lods
in
mov
in
push
mov
inc
adc
cmc
xor
ja
jbe
lret
or
cmp
inc
and
pop
ret
lret
ficompl
mov
mov
or
leave
cwtl
clc
adc
loope
mov
aam
out
inc
repz
jle
negl
or
pusha
cmc
and
fimuls
pop
ljmp
in
sahf
rorb
sub
xchg
sti
pop
xchg
cmp
dec
in
push
aam
pop
or
xchg
xor
lods
mov
sub
adc
out
fistpl
lahf
imul
addb
pop
xchg
mov
mov
loope
jne
test
xchg
mov
enter
jo
jae
cli
push
lods
aam
add
cmp
mov
push
push
sub
imul
pop
lock
inc
repz
mov
cmpsl
dec
adc
push
cli
jle
mov
cmp
mov
outsb
les
and
mov
cs
std
jl
icebp
enter
adc
and
sub
cmp
jne
dec
cmp
cmp
clc
or
rcrl
mov
faddl
cmc
jle
mov
dec
lds
adc
mov
imul
lods
cmpsl
pop
add
inc
inc
and
icebp
push
int3
fadd
inc
sbb
iret
imul
int3
test
in
icebp
sub
std
nop
xchg
xlat
xchg
xor
mov
popa
cmp
popa
dec
push
jns
mov
cmpsb
push
incb
dec
mov
stos
or
xor
clts
ss
movsl
jmp
mov
mov
push
out
fucomip
loop
xlat
or
insl
cmpsb
addr16
xchg
jmp
jl
mov
and
ss
mov
push
mov
xchg
push
xchg
iret
pop
sbbw
pop
push
sub
adc
xchg
adc
or
lret
push
or
and
or
mov
mov
sbb
push
imul
jbe
into
mov
push
insb
dec
push
xchg
nop
add
cmp
sub
pop
mov
repz
or
fildl
jo
stos
cmpl
pop
dec
and
ret
adc
popf
jbe
adc
daa
lea
xorb
mov
cs
cmpsl
ret
pop
imul
cmp
cmp
lea
dec
cli
sub
mov
push
pop
lcall
loope
test
jge
push
in
ja
sarl
mov
xchg
adc
mov
and
sbb
adcb
mov
mov
icebp
stos
cmp
hlt
sahf
push
into
pop
push
or
imul
mov
in
xchg
orl
out
fwait
arpl
and
fbld
dec
mov
and
mov
lock
in
bound
bound
js
out
fnsave
dec
dec
pop
in
lret
xlat
push
fdivs
mov
dec
sbb
pop
sub
fldenv
bound
fildl
inc
sbb
inc
lock
stos
sub
js
mov
and
outsl
test
je
pushf
adc
subl
dec
mov
stos
mov
icebp
xor
xchg
push
scas
addr16
push
pop
outsl
jg
dec
adc
sub
out
mov
mov
cmp
dec
insb
mov
cmpsl
mov
xlat
sbb
test
jge
jge
push
lret
imul
stc
mov
ljmp
jno
pop
fwait
xchg
and
inc
pop
mov
xchg
lret
aad
push
mov
shl
add
popf
int3
cmp
shll
shl
jae
enter
mov
leave
mov
aas
add
xorl
adc
push
dec
lcall
repz
and
inc
ja
cmpsl
xchg
xchg
scas
push
add
fdiv
xor
out
pop
stos
rcll
mov
push
mov
sub
xor
int3
pop
pop
js
mov
adc
sub
popa
ss
pop
out
cmp
mov
pusha
pop
loope
andb
call
xorb
in
jbe
ret
cmc
sbb
add
mov
fwait
lahf
pop
gs
aam
xor
inc
inc
test
popa
pop
add
jb
clc
test
inc
and
cmc
jl
push
lea
jmp
movl
call
or
lret
movsb
arpl
xor
dec
mov
mov
clc
out
ja
enter
add
pusha
mov
fnstsw
push
movsl
pop
in
jne
fistpl
das
xor
xor
into
out
mov
and
cmp
push
mov
push
aad
loopne
repnz
imul
add
movsl
jecxz
sub
mov
mov
inc
sbbl
outsl
scas
fwait
dec
push
xchg
mov
sub
sub
in
dec
mov
std
pop
push
xor
ficoms
dec
lea
sub
fldt
adc
jmp
jnp
inc
lret
test
pop
xor
mov
jnp
fwait
push
lret
mov
fwait
hlt
xchg
inc
ljmp
leave
mov
mov
mov
fs
pop
icebp
fistps
imul
je
movsl
dec
movsb
push
loopne
mov
mov
into
popf
xlat
jecxz
mov
xchg
and
pop
jg
cli
aaa
jg
xor
sub
xchg
jecxz
sahf
adc
jge
mov
mov
push
mov
sub
addr16
sbb
xchg
and
mov
xchg
lods
dec
enter
jp
mov
adc
jle
cmp
xor
jne
data16
popf
inc
sub
mov
cmp
stc
dec
push
int3
mov
xchg
jns
add
and
jp
cmpsb
push
int3
les
push
repnz
shrb
push
aam
jb
mov
pop
push
pshufw
cld
les
jns
xor
xorl
int3
cmp
push
scas
and
pop
pop
xlat
pop
jb
sub
sub
cmp
mov
cmovp
cmp
jae
mov
std
mov
mov
mov
ss
stc
and
les
jnp
or
shll
xchg
push
cltd
mov
jg
test
aaa
les
out
inc
push
lods
in
mov
pop
std
inc
test
xlat
js
dec
pop
adc
std
pusha
jbe
lcall
xor
jnp
and
and
mov
dec
ss
add
adc
cmp
dec
sub
push
lods
mov
outsl
scas
xchg
pop
je
xor
cmp
mov
inc
testl
push
iret
inc
cmc
stos
or
adc
mov
inc
rcrl
decl
rclb
or
dec
jo
jecxz
sbb
cli
fisttpll
pop
ss
pop
rcrb
repnz
or
and
jg
dec
add
stos
inc
mov
icebp
shll
pop
mov
mov
sbb
sub
scas
and
xchg
cmp
test
mov
das
bound
sub
mov
cli
sbb
call
cmp
pushf
movsb
jmp
cli
test
inc
inc
pop
lret
rcrl
test
je
dec
push
inc
fucomp
loopne
outsl
cmpsb
or
mov
out
xor
push
and
xchg
mov
jbe
add
test
jg
int
xor
pusha
daa
push
sarl
insl
lods
adc
iret
inc
mov
clc
out
mov
std
sbb
mov
jns
push
shrl
mov
rcl
insb
jle
ror
xor
jno
ret
ret
mov
pusha
sbb
mov
xchg
imul
fildl
dec
push
push
push
jne
dec
sub
push
jnp
rcll
outsb
test
fbstp
insb
adc
movl
fisttpl
js
xchg
mov
daa
stc
jge
inc
cmc
mov
add
inc
pop
xchg
outsb
data16
mov
loopne
scas
add
jle
fnsave
rorl
xor
das
fisubrs
daa
mov
xor
call
push
xor
and
add
es
sub
jge,pt
push
jl
das
aam
sbb
clc
loopne
nop
jno
xchg
outsl
aam
add
stc
mulb
je
jmp
cmpsb
mov
mov
xchg
dec
dec
dec
out
cmp
mov
cmp
mov
sbb
adc
imul
nop
leave
dec
fisubl
jle
enter
inc
pop
xor
jg
sbb
mov
and
loopne
push
dec
movsl
out
lret
leave
daa
clc
push
icebp
sub
scas
daa
xchg
jle
jmp
xchg
filds
shrb
int3
push
xor
dec
cwtl
cmc
xchg
lea
loop
or
pop
bound
fsubs
ljmp
add
clc
mov
add
sahf
xor
jl
add
jno
inc
pop
xchg
sti
shl
and
xchg
das
dec
iret
cli
xlat
cmp
xor
lret
jb
aad
mov
sbb
xchg
into
push
adc
xor
hlt
test
mov
jbe
fs
adc
adc
push
shrl
out
sub
cmp
call
stos
inc
out
xor
scas
add
inc
std
test
int3
mov
popa
xor
mov
popa
nop
xlat
dec
rcrl
cmpsl
mov
dec
jp
cmc
cwtl
mov
xor
aaa
into
dec
mov
pop
xor
jne
les
sub
lods
or
addb
insl
inc
scas
das
mov
insb
sub
sarb
dec
sbbl
cltd
enter
pop
out
push
cmc
addr16
adc
pop
cltd
pop
ficoms
imul
sub
loop
hlt
subb
mov
pop
lds
push
lods
push
je
add
fsub
dec
cmp
or
cmc
adc
push
xchg
jge
sbb
sbb
js
xor
push
inc
push
ror
or
shlb
push
call
fsts
and
es
pop
in
push
bnd
jmp
int
jg
dec
int
les
sbb
cmp
xor
repnz
loope
fidivl
pop
in
sbb
clc
aas
jg
repz
icebp
and
sbb
push
push
jge
cli
test
mov
and
lahf
sbb
rcr
shr
jbe
rolb
push
mov
xor
popf
push
lcall
bound
mov
mov
stos
out
mov
insl
mov
lahf
les
daa
or
cmp
fstps
rcl
pusha
out
push
js
xor
in
enter
mov
cmc
and
cmc
mov
xor
insb
rclb
pop
fwait
mov
hlt
and
xor
jp
out
insb
pop
jns
xchg
cs
mov
movsb
dec
dec
xchg
rorb
loopne
subb
fcomps
mov
loopne
add
in
movups
popf
fisttpll
or
push
test
fisttpl
dec
popf
pop
popa
das
push
loop
cmp
stos
sub
jle
adc
iret
cs
add
push
orb
fwait
pop
sbb
in
in
lods
in
int
push
scas
dec
scas
outsl
or
sbb
mov
icebp
xor
push
xchg
ljmp
jo
jae
nop
scas
insl
fistl
mov
fldl
pop
in
lock
enter
in
or
imulb
fsubrl
fwait
lret
fsubrp
sarw
pop
call
daa
testl
jmp
jg
rorl
jb
leave
rorb
arpl
sub
jne
cs
mov
and
fdivrl
sub
mov
dec
int
fisubrs
addr16
xlat
pop
outsb
mul
jb
movsl
push
jecxz
push
in
jae
adc
cmpsb
xchg
mov
cld
cmp
push
mov
fistpll
clc
stos
sub
jb
in
frstor
mov
mov
aaa
jno
ljmp
mov
out
in
aam
repnz
xorl
sbb
and
rorl
inc
inc
xchg
shll
cmp
addps
xor
stc
and
adc
shll
test
cli
imul
sub
js
test
xor
jb
in
sub
sub
cmp
in
pop
mov
insb
mov
jae
mov
jg
or
fcoms
xlat
adc
cmp
hlt
adc
or
jle
loopne
orl
sbb
lea
dec
cmc
mov
push
enter
push
out
fisubrs
daa
cmp
pop
clc
pop
mov
das
test
dec
sub
mov
out
int
jg
incb
xchg
bound
inc
fidivs
test
dec
dec
aas
jns
sub
pop
testb
loop
mov
repz
adc
inc
jb
mov
lahf
int
mov
stos
sub
cmp
addr16
xchg
mov
lea
pusha
mov
dec
mov
push
adc
mov
and
std
mov
mov
outsb
faddl
inc
lea
cmp
lahf
pushf
pusha
jnp
sub
aad
xchg
push
mov
cli
add
cmp
and
inc
sbb
inc
lahf
inc
add
dec
stos
cmp
mov
shll
xchg
out
in
imul
inc
xor
inc
xchg
movsb
xchg
sub
sub
popf
xchg
aad
sbb
jne
or
test
outsw
xchg
iret
nop
dec
aaa
outsl
jge
jecxz
shl
rclb
mov
xchg
mov
xchg
xchg
imull
sbb
push
sub
jmp
push
rclb
les
pop
je
rorl
xchg
inc
es
jns
cmp
mov
sbb
mov
or
mov
jge
clc
loop
xchg
repnz
push
or
adc
jmp
jp
loop
mov
lret
push
mov
and
lods
mov
adc
add
adc
sbb
mov
add
push
adc
and
jbe
jecxz
or
jo
cmpsb
test
cmpsl
push
shlb
push
or
aam
mov
cli
add
cmpsl
rorb
rcr
jbe
sub
and
xor
and
neg
mov
outsl
sbb
or
bound
inc
scas
sahf
daa
clc
sub
ret
cmc
jo,pt
xchg
inc
mov
push
outsl
outsb
mov
push
add
sbb
aaa
xchg
adc
lret
cwtl
xlat
xor
outsb
xchg
push
mov
loop
repnz
mov
jmp
sub
pop
arpl
jg
xchg
aad
lahf
fdivr
mov
ret
hlt
lock
xor
inc
sbb
sub
xor
int3
dec
imul
out
xchg
cmpsb
enter
subl
scas
lret
push
add
pop
mov
outsl
sti
xor
stc
lods
scas
add
int
cmp
jo
mov
out
push
xchg
push
cmp
push
mov
mov
pop
mov
and
sub
pop
pop
inc
icebp
cmpsl
aas
scas
pop
pusha
mov
lock
mov
sbb
mov
cmpsb
push
jl
sbb
arpl
leave
inc
inc
mov
sub
adc
cmp
sub
xchg
xor
sbb
into
insb
dec
mov
dec
inc
movl
pushl
mov
push
lea
jmp
ss
push
outsb
popf
cltd
aas
pop
push
cld
jnp
scas
push
xchg
mov
shlb
or
adc
xchg
mov
nop
mov
clc
mov
icebp
or
adc
test
lret
mov
sub
dec
xchg
idivb
inc
or
pop
xor
jecxz
adc
fldl
jge
cmp
xor
mov
mov
adc
movsl
jne
jae
in
insb
dec
roll
sbb
cmp
mov
mov
mov
jnp
mov
mov
add
mov
jnp
lods
sub
or
out
test
jge
test
fstp
xchg
filds
jge
xor
mov
rcrb
stos
mov
insl
mov
out
sub
mov
mov
mov
xor
xchg
sbb
cmpsl
gs
pop
mov
inc
push
in
imul
mov
and
cmp
repnz
push
cmp
mov
or
or
pop
add
or
sub
movsl
in
inc
loopne
mov
pusha
out
cmp
bound
push
call
pushf
movl
mov
push
push
lea
jmp
movl
push
lea
jmp
cmc
xor
bt
cmp
xor
jmp
call
xor
test
xor
bt
xorl
push
cmc
pushl
popf
push
mov
pushl
ret
movl
mov
lea
jmp
xor
stc
xor
call
xlat
mov
add
into
test
or
pop
shlb
stc
adcb
test
lret
and
mov
dec
jge
xchg
imul
cmp
push
loope
dec
xchg
aad
lods
mov
jp
jmp
cmp
jo
sti
sbb
mov
and
jnp
add
or
iret
fnstsw
push
adc
jbe
call
mov
into
mov
cs
int
cmc
adc
cmpl
aas
mull
je
fwait
pusha
inc
insl
cmp
je
gs
in
cmpsb
cmp
negb
cs
movsl
add
cli
xor
jae
jp
xchg
cmpsl
cmp
popf
popa
cli
icebp
xchg
repz
pusha
popa
xchg
mov
loop
arpl
xchg
hlt
inc
fdivs
ror
repnz
push
outsb
add
test
xor
test
loope
shlb
lods
mov
stos
enter
adc
push
add
dec
popf
inc
shll
cmp
push
sbb
mov
pminub
push
pop
movsb
pop
jnp
push
sub
scas
mov
jg
mov
xor
mov
xor
mov
mov
aas
sub
nop
fdiv
add
xlat
lret
mov
add
sub
aas
xchg
sbb
cmp
or
and
fidivl
xacquire
andl
inc
push
fmull
cltd
ret
cmp
daa
xchg
cmp
xchg
fxch
add
call
add
or
mov
cli
jmp
stc
pop
fxch
arpl
setl
mov
and
sbb
stc
xchg
xchg
dec
pop
aas
push
jns
ffree
je
mov
pop
and
sbb
popa
xor
ret
lea
jnp
cmp
mov
orb
incb
insl
add
pusha
mov
sub
xchg
in
mov
add
lock
test
scas
xor
cwtl
lcall
aad
pop
sarl
or
cmp
mov
xor
inc
inc
lcall
sub
lret
xchg
cli
arpl
jno
inc
aaa
sbb
decb
shll
jno
lcall
adc
pop
xor
in
xchg
lcall
lret
insb
imul
dec
cmp
inc
aam
pop
roll
adc
inc
int
and
ds
cltd
scas
jb
adc
int3
xchg
shl
andl
aad
pop
aam
lods
je
pop
daa
pop
int
outsb
cmp
cmpsl
mov
sbb
mov
sub
addb
dec
repnz
pushf
sbb
fstl
ljmp
sbb
mov
xor
mov
daa
lret
or
pop
jle
or
push
dec
xor
aas
xchg
jle
or
pop
sbb
fdivl
inc
xor
pop
or
push
cmp
inc
xlat
int
int3
dec
or
scas
in
insl
or
jp
es
call
push
add
movsl
ficoms
xor
inc
pop
inc
dec
pop
adc
jns
daa
cmp
xchg
mov
jecxz
mov
push
pushf
iret
xchg
adc
insb
scas
mov
subb
jae
test
out
dec
push
sub
push
push
add
cli
add
test
adc
stos
mov
pop
dec
pusha
fldenv
popa
pop
test
inc
sbb
es
je
cs
pop
cmpsl
cmp
fwait
mov
sbb
cmp
cmc
mov
inc
sar
enter
movsb
mov
jno
push
gs
xchg
mov
cmp
outsl
mov
icebp
xchg
sbbl
add
in
and
outsb
cmc
hlt
or
inc
adc
test
jns
daa
inc
pop
and
xabort
out
add
pop
fxam
jecxz
push
mov
and
je
or
arpl
jmp
insl
sub
jle
imul
pop
imul
mov
sbb
ds
dec
jo
sbb
and
bound
fwait
test
xchg
jp
sbb
dec
ss
cs
push
int
inc
mov
xchg
lods
stos
cmp
arpl
mov
jp
mov
jbe
test
xchg
mov
mov
fdivrl
in
and
sub
pop
jbe
or
scas
dec
dec
mov
mov
mov
add
call
adc
js
pop
sub
mov
ss
jmp
pop
pop
fwait
test
adc
jns
scas
cmp
test
dec
aaa
xor
sub
push
cmc
arpl
push
push
and
fcomp
push
jl
sti
lods
mov
loope
jl
imul
add
cmp
sub
jl
lret
sbb
daa
rclb
xchg
push
lcall
mov
push
shld
mov
and
cmpsl
aad
fsts
pusha
or
stos
mov
and
into
dec
xor
cmc
test
push
jno
add
sub
std
jae
pop
or
dec
clc
out
mov
fdivs
loopne
push
jae
mov
loopne
in
iret
xchg
bound
mov
in
repnz
push
adc
xor
fistpl
jnp
push
add
ds
cli
enter
leave
push
xor
movsl
jmp
push
dec
push
ja
inc
xchg
sub
stc
push
in
mov
xchg
push
adc
mov
sub
outsl
cmp
xchg
mov
ret
pop
xchg
std
xchg
ret
scas
insb
cld
fsts
cmp
mov
pop
lcall
mov
cltd
imul
movsl
pop
jl
subl
out
scas
and
rcr
repnz
rcr
push
sbb
mov
les
mov
jne
xor
push
roll
repnz
sub
inc
insl
sub
cli
pop
shlb
jno
or
sbb
push
adc
rcrb
sub
add
inc
push
sbb
popf
dec
sbb
ror
in
ja
sbb
adc
rcll
cmp
xlat
fbstp
sbb
jne
popf
ret
aam
sub
push
push
sub
ljmp
les
adc
in
sub
xchg
adc
lods
pop
shll
mov
mov
jmp
fimuls
mov
inc
adc
sti
lock
es
in
mov
daa
mov
or
mov
dec
test
int
lret
loope
jne
dec
das
cmp
cltd
xor
xchg
dec
leave
sar
fisttpl
jnp
leave
shl
cli
repnz
lahf
xor
lret
cmp
and
pushf
adc
pop
sub
jnp
mov
fwait
add
nop
sbb
and
inc
fisttpll
sub
jbe
pop
mov
inc
mov
imul
and
mov
out
daa
gs
arpl
loopne
sbb
mov
add
fwait
xacquire
add
fldt
add
outsb
pop
add
sahf
mov
or
addl
add
add
jle
bound
in
sbb
in
scas
jb
pop
mov
jns
push
xor
bswap
rol
mov
jmp
mov
rolb
into
pop
mov
les
xchg
xchg
cmp
xchg
scas
jp
mov
and
into
gs
int
xor
push
addr16
cmp
inc
mov
scas
push
xchg
dec
test
jecxz
cmp
jae
jg
ja
pop
xlat
mov
bound
push
jo
sahf
push
mov
add
leave
fistps
mov
jge
popa
mov
mov
daa
mov
loopne
rolb
mov
aas
mov
adc
adc
and
xchg
into
cli
into
xor
sbb
pop
ds
jns
movsb
test
sbb
xor
or
mov
movsb
cmc
sub
sub
lds
sub
inc
pop
jno
xorl
rcrl
push
pop
push
jle
adc
pop
mov
adc
pop
repz
mov
push
sub
movsb
mov
jo
xchg
xor
add
cmpsb
repz
imul
pop
push
sarl
mov
jne
xor
inc
push
fs
js
ficoms
pop
sbb
les
mov
fwait
pop
sub
mov
and
push
mov
je
xor
pop
ja
xchg
insl
insl
push
pop
xchg
icebp
jg
popa
sbb
pusha
sets
pop
sub
xchg
lret
out
sbb
fs
push
loope
hlt
pushf
pop
mov
cmp
and
lret
pop
test
jge
ljmp
and
lret
dec
mov
int3
fistl
addr16
mov
out
mov
sbb
adc
aaa
lock
adc
cmp
out
and
or
jp
or
imul
sbbl
aam
andl
aas
fs
je
mov
repnz
cmpsl
test
sbbb
mov
popf
jl
test
sbbl
push
mov
jno
or
and
and
aam
add
jmp
movl
jmp
movl
push
lea
jmp
sti
xor
add
rorb
inc
test
imul
lahf
sbb
sub
pop
mov
mov
pushf
mov
mov
and
and
push
stos
or
test
push
mov
rcrb
test
aad
xor
stos
mov
arpl
or
inc
push
mov
in
mov
sub
push
mov
in
int3
in
inc
lahf
xchg
divb
xor
fwait
aam
int3
jnp
sbbl
popf
pop
lds
pushf
push
ficompl
mov
das
add
sub
cmpb
xor
iret
push
insl
shrl
mov
je
xor
cmp
cmp
sbb
mov
cmc
aas
push
sahf
outsb
jmp
scas
xchg
cmpsl
mov
nop
sub
outsl
dec
mov
mov
inc
mov
push
cmp
and
pop
xchg
fs
out
jbe
sub
mov
lock
cmp
fsub
cmc
insb
shl
filds
sbb
in
and
mov
ror
jp
mov
xor
add
das
xchg
out
sbb
test
and
pop
push
mov
insb
push
adc
inc
xor
scas
sub
xchg
shlb
xor
mov
push
sti
out
push
mov
xor
mov
mov
push
sub
sbb
sbb
and
cli
andb
imul
fdiv
dec
cli
mov
out
push
mov
jae
jns
inc
or
sarl
outsl
addr16
loope
xchg
mov
and
std
stc
xor
cmp
lds
sbbl
cs
mov
add
and
int3
test
fistpl
fimuls
out
pop
mov
push
or
xor
data16
faddl
outsb
push
cmp
mov
xchg
mov
jp
jno
lret
add
lahf
rol
fcomps
sti
sub
pop
or
call
push
add
mov
test
push
push
jbe
fiaddl
xchg
sbb
ja
mov
fisttpll
mov
stos
adc
aaa
inc
ret
pop
hlt
push
rorl
pop
fildl
add
leave
shrb
lret
clc
out
mov
sbb
add
add
add
jno
loop
push
xchg
std
decl
mov
stos
mov
mov
push
xor
xlat
aam
cmpb
pusha
sub
pop
jns
fwait
clc
mov
sar
mov
idiv
testl
xchg
mov
jno
mov
mov
sbb
mov
testl
jne
xchg
adc
lret
mov
jl
add
inc
pusha
fcoml
popl
cmp
stos
mov
jp
add
sti
mov
adc
popa
jg
dec
jo
dec
rcrb
pop
cs
push
pushf
aad
testl
jb
sub
lcall
mov
repnz
out
ds
test
fs
inc
and
sub
ret
mov
xchg
sub
pop
js
pusha
in
ds
sub
push
bnd
fistps
adc
ret
xchg
in
js
subl
push
push
or
pop
add
jae
loop
cld
out
es
inc
push
mov
ljmp
test
and
hlt
mov
movsb
cmp
pushf
repz
add
testl
sbb
jns
sbb
jg
cmp
out
xor
ret
push
cmp
stos
mov
aad
mov
dec
sub
pop
fwait
or
pop
add
inc
sub
xor
fmuls
push
xchg
mov
scas
out
xor
shrl
or
lock
repz
shrl
sub
push
dec
loop
mov
jp
pop
mov
mov
mov
data16
add
sahf
or
inc
shlb
or
push
mov
add
adc
sub
fs
insl
aaa
pop
cmp
inc
lds
sub
or
mov
movsl
add
sub
in
sub
fistpll
push
cmp
or
mov
mov
or
ret
cmp
xchg
dec
rclb
xchg
pop
push
imul
sbbl
add
sbb
fistps
mov
hlt
xchg
repz
out
adc
adc
jb
sahf
xor
loopne
push
and
das
call
sub
adc
lcall
xor
popf
mov
aad
movsl
mov
sbb
dec
xor
gs
popf
dec
dec
stc
cmc
scas
mov
and
sti
ljmp
lcall
add
adc
xchg
ljmp
ja
aaa
adc
mov
outsb
pop
nop
dec
and
sbb
in
add
out
inc
inc
cs
ficompl
pushf
mov
xchg
sub
fsubs
sbb
vpcmpeqb
add
fcmovbe
mov
adc
insb
jo
jecxz
rorl
movsl
xchg
pop
ljmp
leave
xlat
das
loope
ljmp
cwtl
mov
xchg
sub
pusha
notb
out
pop
lods
arpl
adc
push
pop
subl
xor
ds
shr
dec
std
jbe
cmc
or
pop
dec
mov
push
dec
out
mov
das
adc
insl
add
adc
js
mov
or
push
jne
js
nop
data16
mov
mov
fsincos
stos
cmpsb
pop
jge
stos
jp
and
pushw
cmpsb
mov
pop
and
push
gs
sub
push
aas
in
and
fldcw
out
dec
add
jns
popa
shrl
outsb
jl
fdivl
jmp
fstpl
xor
scas
push
cltd
add
cwtl
xor
loopne
cld
gs
or
inc
lahf
cmp
sbb
xor
push
test
rclb
out
jb
je
cmpsl
mov
sti
and
mov
ss
xchg
push
lea
loop
lods
cmp
xor
mov
sub
xchg
push
dec
mov
pop
test
cs
adc
in
fwait
daa
mov
mov
into
push
nop
sbb
fimull
fildll
ja
enter
add
out
popf
xor
fiadds
or
inc
sbb
mov
pusha
xor
inc
push
inc
popa
mulb
aas
fdivrl
repnz
iret
dec
or
mov
scas
ret
add
test
add
sbb
push
pop
test
shrl
in
pop
cwtl
imul
cmp
sahf
mov
nop
iret
cmp
inc
add
push
add
sub
xchg
adc
cmp
cs
pop
mov
rcrl
bswap
out
fiadds
das
icebp
aad
xchg
je
fists
out
aad
jge
gs
repnz
push
mov
popa
push
lock
jne
dec
mov
in
mov
orb
push
jmp
mov
xchg
fwait
jbe
sbbb
dec
fnsave
pop
lock
add
es
adc
xor
xor
std
mov
cmp
push
add
addr16
rorb
js
mov
outsb
mov
cmp
xchg
shrb
inc
mov
sub
xchg
adcl
loop
dec
testb
popf
adc
pop
mov
loop
fldenv
out
in
test
push
sbb
jl
push
mov
ljmp
push
stc
add
call
insb
fcmovnbe
scas
test
in
inc
fwait
daa
aad
cld
dec
inc
sub
and
dec
fsubs
aam
push
int3
and
scas
outsb
in
jno
clc
mov
jmp
add
mov
out
jo
dec
sbbl
push
xor
mov
add
mov
sub
out
cmpsl
mov
fiaddl
add
stos
and
addl
sub
imul
test
aas
cmp
stos
mov
cmp
scas
loop
je
xor
sub
stc
xor
fisttpll
lock
clc
inc
negb
pop
mov
fsts
jne
inc
lea
pop
push
sub
mov
arpl
daa
repnz
push
out
xor
lahf
xor
pop
push
test
scas
push
lret
add
jge
scas
movsb
rcrb
jl
lock
gs
push
lods
arpl
cli
sub
cld
gs
xor
sbb
rclb
cmp
jno
inc
mov
pop
cmpsb
je
enter
jle
cmpsl
xor
dec
in
mov
movsb
mov
dec
fxam
js
jecxz
mov
jnp
pop
into
pop
pop
mov
inc
rcl
and
enter
gs
imul
subb
popa
mov
mov
pop
lock
ret
jge
push
pop
or
xchg
arpl
outsb
sub
leave
push
leave
dec
jle
faddl
shll
in
push
jp
jns
and
inc
xchg
push
jns
sarl
int3
mov
testl
sbbl
lds
imul
leave
ja
punpckldq
sbb
mov
int3
sbb
pop
xchg
cs
inc
jno
daa
test
sbb
lahf
insl
imul
dec
cmp
fs
idivl
adc
lods
repz
ret
fs
in
jae
dec
popa
insl
out
inc
mov
push
mov
rcrl
mov
push
data16
mov
aas
lcall
jns
test
movsl
mov
xorl
sbb
je
test
cmp
and
cmp
fisubs
cmp
jb
cltd
arpl
pop
dec
push
xchg
bound
popf
nop
xchg
imul
std
int
jp
mov
aaa
mov
pushf
jmp
mov
and
outsl
ret
mov
fdivs
outsl
sti
data16
cs
and
jl
add
out
ljmp
popf
xchg
mov
cmp
ret
add
push
jno
jl
pop
pop
ds
mov
out
sub
mov
pop
movsl
ret
mov
pop
push
popl
xchg
out
aad
dec
mov
cli
cmp
dec
inc
cmp
lds
or
lret
xchg
and
into
dec
push
or
cld
loope
out
das
cmp
mov
and
lret
imul
and
stc
mov
std
jge
push
push
adc
sub
fstps
jo
iret
jecxz
ja
ja
dec
dec
add
stc
test
std
cld
inc
xor
push
inc
ljmp
and
mov
stc
daa
jb
scas
and
push
mov
int3
pop
adc
sub
gs
bound
sub
inc
xchg
inc
push
add
push
stos
mov
adc
std
ss
imul
and
lods
fisttpl
sti
dec
fildll
sub
setnp
lret
imull
stos
movsb
outsl
rcll
aam
outsl
cmp
in
cli
cwtl
in
jne
push
loopne
jb
jmp
pop
xor
fdivrs
loope
mov
dec
sub
mov
sbb
cmp
std
aam
mov
mov
jl
mov
addr16
xchg
hlt
mov
jnp
neg
stos
test
and
test
mov
data16
popa
pop
mov
in
pop
xchg
std
clc
daa
push
and
leave
mov
dec
inc
jg
mov
xor
cmp
mov
cmp
decl
gs
lds
jmp
insl
pop
cmp
pop
jo
repz
mov
jne
cmpsb
movsl
int
data16
inc
cmpsl
mov
rorb
cwtl
leave
bound
lods
lds
cmp
push
shrl
xchg
sbb
push
shlb
das
inc
add
js
subb
lods
movsl
xchg
ret
dec
testl
mov
test
jmp
jae
dec
mov
in
mov
xchg
mov
pop
iret
dec
or
test
add
gs
outsl
sti
pusha
pushf
popl
clc
xorl
stc
cmc
xor
clc
xor
pusha
xor
jmp
push
jmp
xor
push
pushf
xor
cmp
call
movl
push
push
push
pushf
lea
jmp
xor
jmp
cwtl
outsb
rorb
pop
mov
pusha
loope
mov
sub
sti
mov
fisttpll
inc
xchg
cmp
scas
lods
mov
jae
add
and
jo
sbb
push
lcall
mov
pop
push
prefetch
outsl
cli
and
imul
sbb
iret
and
inc
inc
out
sti
stc
into
outsl
sub
filds
scas
jmpw
mov
jns
fidivl
cmp
test
dec
test
jge
and
and
mov
mov
push
jle
dec
orl
pushl
cmc
dec
jo
inc
jno
push
sbb
cmp
testl
sub
inc
shufps
iret
ret
mov
push
mov
iret
sbb
add
cltd
aas
nop
dec
jmp
in
mov
jp
pop
outsl
add
cmp
push
and
sbb
push
inc
repz
jb
mov
iret
sbb
adc
push
daa
out
iret
stos
in
stos
jmp
sahf
mov
shrl
rcrb
adc
bound
pusha
mov
shl
jne
cmp
mov
push
jmp
out
cs
sbb
pop
in
and
test
pop
cmpsb
pop
ror
fisubrl
jb
int3
push
mov
sub
rorb
divl
push
fldl
xchg
in
sbb
cmp
xor
insb
dec
mov
lcall
outsb
push
mov
mov
cs
cmp
pop
dec
add
pushf
or
add
mov
sbb
shrb
mov
add
pop
fnstsw
fimuls
push
aad
aas
loop
or
push
xor
mov
mov
dec
shll
cltd
jae
push
sub
std
jle
mov
xchg
push
stos
xchg
and
jb
xor
xor
and
cmp
mov
inc
jmp
add
roll
xor
sub
out
and
xor
mov
dec
test
dec
cli
cltd
cmp
mov
jb
dec
add
stc
lods
sti
sahf
icebp
addl
pop
or
les
push
and
inc
inc
and
adc
repnz
icebp
cmp
subl
inc
imul
and
cmp
out
loop
push
in
mov
dec
outsl
mov
ret
jp
sub
fnstenv
flds
mov
or
sub
xchg
and
adc
gs
movsl
mov
cmp
nop
inc
faddp
test
dec
lret
in
dec
scas
scas
nop
adc
addr16
lret
pusha
push
jne
in
sub
test
fcoms
in
jle
mov
mov
mov
testl
dec
iret
inc
rcr
shr
dec
xor
push
mov
test
out
scas
aam
dec
imul
shl
addr16
sub
xorb
sub
push
xchg
mov
stos
xor
stc
dec
clc
pop
add
sub
xchg
loope
mov
lea
mov
inc
sbb
push
imul
cmp
rorb
push
cmp
inc
std
bound
outsb
mov
cmp
jge
lret
test
mov
pushl
ret
pusha
lret
bnd
arpl
cmp
addl
push
ljmp
mov
sbb
ud2
les
mov
push
cld
and
scas
in
enter
xor
sub
mov
add
push
lds
sahf
jge
fwait
cltd
aaa
jne
mov
add
mov
stc
add
sub
loope
repnz
push
dec
scas
mov
shll
push
stos
enter
scas
and
lock
mov
jbe
pop
mov
outsb
movsl
sbb
fmul
push
add
pop
les
out
push
insl
sub
inc
aaa
sbb
pop
mov
insl
insb
mov
out
test
sbbb
xchg
in
sbb
sub
lcall
and
leave
pop
pop
mov
push
test
lock
dec
sub
xorb
push
adc
shlb
cltd
mov
inc
push
neg
mov
mov
divb
rolb
jmp
cld
xchg
add
jo
fucomip
sti
add
pusha
and
insb
aam
out
jb
popa
icebp
add
adc
orl
testl
call
sub
inc
lock
dec
ret
push
pop
into
addb
push
rclb
mov
mov
enter
sbb
xchg
fisttpl
test
jge
pop
mov
jl
and
jp
ljmp
rorb
push
mov
sub
iret
inc
jae
ljmp
cmp
and
sti
pop
sarl
adc
test
es
jp
push
dec
nop
mov
mov
decl
and
testb
fiaddl
out
js
je
cltd
xor
dec
outsb
inc
jl
sbb
decb
int3
mov
push
ljmp
mov
sub
mov
daa
xor
repnz
and
gs
adc
mov
inc
push
mov
fsts
lret
cld
out
xchg
xor
arpl
push
mov
mov
dec
mov
imul
sub
mov
sub
mov
cmpb
or
bound
push
or
dec
inc
fwait
lret
push
xchg
pop
pop
icebp
fisttps
push
out
inc
data16
div
mov
and
arpl
outsb
ds
or
sbb
and
lret
and
addr16
and
push
xor
inc
icebp
test
xchg
into
mov
or
add
clc
cmp
mov
xlat
repz
lret
inc
jbe
sbb
or
js
pop
je
mov
je
aam
insl
fs
adc
int
xor
mov
xchg
mov
notl
add
test
faddl
lahf
mov
push
lods
stos
cmp
popa
sti
lods
mov
mov
lret
into
rcll
xchg
arpl
push
popa
jmp
xchg
lock
aaa
testb
rcrb
jae
adc
aas
shrl
repnz
mov
outsb
xchg
sub
loope
fwait
or
outsb
mov
ja
scas
xchg
mov
jle
mov
mov
jae
test
jp
xchg
arpl
xchg
mov
das
aam
push
jnp
mov
aad
dec
fstpl
jge
xchg
rcl
jg
arpl
mov
loop
nop
push
dec
cltd
std
in
outsl
adc
pop
lods
add
mov
add
sbb
adcl
push
dec
push
arpl
push
test
jb
mov
es
jno
idivl
mov
popf
ficomps
gs
adc
stc
or
movsb
sbb
sbb
adc
mov
lahf
lods
out
mov
cmp
clc
xchg
xor
mov
in
dec
jmp
jns
gs
stos
jmp
push
jmp
mov
jp
jl
sbb
jle
in
xchg
mov
incl
xchg
inc
cwtl
fmuls
mov
mov
cmp
or
jno
out
ds
fwait
jns
push
in
cmpsb
mov
sbb
pop
in
pusha
add
mov
nop
ficomps
mov
test
mov
scas
push
int
xchg
iret
insl
in
ds
iret
pop
cmpsl
in
mov
inc
push
cmp
add
cli
mov
cwtl
fnstsw
fninit
dec
push
stos
mov
fildll
inc
clc
sub
gs
stos
dec
fcomps
scas
out
mov
std
cmp
add
mov
adc
sub
lea
ljmp
mov
nop
rorl
int3
add
xor
xchg
jmp
and
mov
or
inc
sbb
xor
jl
xor
push
and
mov
jns
pop
lcall
and
push
xor
xchg
dec
and
dec
push
cwtl
and
mov
std
add
lret
ljmp
lods
mov
dec
xchg
inc
jno
push
lea
jl
imul
hlt
cli
dec
aam
sahf
test
je
fimull
jnp
dec
pop
lds
test
add
jp
pop
dec
mov
movsl
ja
sarb
js
fsubr
shlb
add
aam
fwait
cmpsl
mov
sub
lods
xor
push
adc
sbb
dec
push
cltd
push
jno
sbbl
jle
lods
sub
and
push
outsl
jmp
pop
xchg
shl
lcall
dec
addr16
movups
clc
xchg
jno
lds
int3
push
aaa
fadd
xchg
and
loopne
div
stos
cmpsl
push
test
push
pusha
and
or
iret
fsubrs
push
jp
xor
fs
xor
jb
loop
lods
fs
lock
pushf
imul
pop
out
test
or
fsubl
stos
mov
test
and
and
repnz
mov
cmpb
sub
test
cmp
mov
and
fsubrl
xchg
shrl
arpl
out
lods
and
jmp
or
aaa
mov
mov
jae
les
cmpb
jge
sub
ret
and
cwtl
hlt
mov
jno
push
mov
sub
fs
cld
jmp
insl
movsb
push
mov
ficoml
add
and
add
jl
imull
fwait
gs
lea
sub
jmp
pushf
ret
jp
mov
movsl
inc
fidivrs
or
mov
add
xor
xchg
bound
lret
cltd
xchg
sub
pop
fwait
daa
in
iret
decb
repnz
jmp
inc
incb
jle
xor
or
out
pushf
cwtl
push
lahf
sub
push
or
adc
in
xchg
iret
clc
sbbl
inc
fsubl
test
in
jecxz
cmpsl
add
jbe
cmp
mov
popa
cmp
jp
out
dec
cmpsb
lea
push
shll
push
out
push
pop
mov
dec
xor
fs
push
or
call
cmp
cli
adc
cmp
mov
push
cwtl
mov
sub
popf
or
sbb
js
lcall
adc
inc
iret
outsb
xchg
add
fidivrs
mov
stos
jbe
dec
pop
inc
iret
adc
mov
ret
mov
xlat
movb
add
cwtl
pushf
popl
pushf
clc
xorl
cmc
stc
xor
call
pusha
pusha
movl
pushl
push
mov
movb
lea
jmp
jmp
xor
push
xorl
jmp
xor
cmp
clc
xor
clc
xor
jmp
fcoml
divb
pop
fcomps
cltd
mov
pop
jo
mov
sub
push
daa
xchg
loop
cmp
and
push
pusha
je
jg
sbbl
in
pop
adcl
aad
sbb
inc
fs
xchg
push
fimull
xor
out
and
pop
cmp
mov
jecxz
xor
mov
addr16
sub
push
and
fsubs
sbb
popf
xchg
mov
jmp
cltd
insl
orb
pop
out
mov
xchg
push
mov
inc
lods
sub
comiss
lcall
in
loopne
jnp
insb
mov
lahf
inc
scas
jmp
jecxz
je
jbe
mov
cmp
into
adc
insl
mov
push
pop
jo
push
iret
cmpsl
mov
pop
sub
mov
out
jl
cmpb
jne
das
enter
stc
shlb
mov
cmp
xchg
push
jns
xchg
int
pop
ds
push
mov
jg
in
jns
das
xchg
push
sub
lea
push
fwait
jae
ss
mov
gs
das
sbb
mov
outsb
int
daa
ds
outsl
mov
push
sub
outsl
jp
repz
fsubs
insb
sbb
into
sbb
mov
out
icebp
or
addr16
aad
dec
imul
inc
ja
dec
std
cltd
adc
movsb
push
sbb
pop
idivb
jl,pt
cwtl
scas
push
test
sahf
fdivs
cmp
mov
test
pop
mov
lahf
inc
cmp
jecxz
jecxz
or
push
es
or
insb
jp
hlt
ljmp
ljmp
pop
xchg
sub
arpl
movsb
sti
test
xchg
scas
in
fs
mov
test
push
jb
push
jb
add
sbb
push
movsl
mov
xchg
adc
mov
out
daa
ds
inc
xor
and
rorl
cmp
sarl
inc
sub
lds
lods
dec
sub
mov
adc
lea
sahf
rdtsc
repnz
leave
mov
mov
sub
mov
or
cmp
add
lcall
sub
scas
ret
nop
stc
pushf
jb
arpl
inc
adc
or
rcrl
mov
pmuludq
es
lds
outsl
out
ret
arpl
nop
test
add
push
ret
cmp
std
ss
xorl
mov
outsl
add
js
jecxz
out
test
adc
pop
cmpsw
clc
fwait
cmc
out
mov
inc
xchg
jle,pn
lods
lret
mov
lret
inc
pop
sub
orb
mov
enter
stos
sub
push
fldl
lds
jb
test
leave
adc
xor
mov
out
shll
xor
popf
fcomps
sbb
jae
or
cltd
and
ret
mov
mov
jmp
jl
mov
mov
jo
pop
pop
scas
jo
out
push
stos
imul
adc
sub
sub
dec
les
jecxz
mov
jge
jnp
popa
add
addr16
sahf
sahf
cmp
ret
js
not
cltd
pop
jmp
mulb
in
mov
mov
fldl2e
jge
add
out
mov
aam
gs
dec
std
jae
data16
test
fstl
in
jno
icebp
fmulp
daa
loop
movsb
and
cmpsl
mov
cltd
repz
inc
cmp
or
test
mov
mov
ljmp
and
add
push
fsubrl
ds
xlat
jp
jne
aaa
les
nop
pop
jp
cmpsl
aaa
cmpsl
enter
pop
cmpsb
fildll
adc
lcall
es
jp
mov
sahf
add
shrb
mov
fucomp
sbb
mov
decl
add
pop
push
std
jecxz
std
rorl
mov
aam
jb
mov
jb
clc
testl
bnd
cmp
loope
xchg
fsts
dec
leave
pop
in
jne
in
push
repz
lods
les
jle
adcb
xchg
adc
lds
sahf
push
iret
movsl
lods
inc
scas
sub
inc
popf
jnp
push
repz
jle
push
lods
cli
vpmadcsswd
mov
sub
jns
mov
inc
mov
add
cmp
in
xchg
mov
xchg
jecxz
pop
xchg
addr16
int3
add
icebp
and
scas
sahf
xchg
jp
dec
inc
sbb
and
repz
ljmp
in
mov
xor
imul
sbb
pop
in
imul
mul
sbb
repnz
and
push
cmp
or
jno
insl
insb
mov
in
es
cltd
add
pop
inc
fs
jmp
or
xchg
jmp
clc
popf
sbb
roll
push
out
sub
mov
xchg
flds
push
jnp
dec
sbb
xchg
dec
cld
or
ret
aas
xchg
xchg
sub
dec
push
movsb
pop
fwait
mov
mov
dec
inc
les
pop
pop
popa
mov
sbbb
jle
mov
mov
imul
out
xchg
mov
out
add
aad
add
lods
out
test
xchg
pusha
fdivl
mov
dec
addr16
and
lods
mov
out
pop
lods
and
mov
lcall
std
mov
ss
mov
ret
int3
lds
add
stos
sti
mov
fbstp
pop
movl
mov
push
jle
out
xchg
lods
sub
jae
jle
push
int
adc
or
and
mov
cs
sbb
and
jns
in
test
dec
dec
into
cmp
lret
jnp
gs
outsl
lods
arpl
mov
lcall
call
inc
dec
or
dec
ret
lock
les
imul
in
mov
fstps
mov
stos
dec
jno
add
fadd
mov
pop
xor
mov
ror
push
jmp
pushf
call
xor
bt
bt
xor
pushl
pushl
pushl
popf
push
pushl
ret
sub
pop
fistpll
xchg
inc
push
dec
cs
scas
iret
mov
jno
xor
leave
xchg
into
int3
mov
dec
push
ss
adc
repnz
mov
ret
sti
cmp
test
bound
out
cwtl
push
xchg
xor
ret
inc
and
movl
and
and
push
das
fnstenv
jae
in
aas
and
in
outsl
pushf
pop
add
imul
jne
xchg
xchg
sahf
pop
aas
int3
or
cltd
sbb
mov
jo
enter
push
pop
lahf
fprem1
add
sbb
fisubrs
dec
sub
mov
pop
xlat
iret
in
adc
sbb
jbe
pop
push
in
sti
stos
out
xchg
fwait
repz
lahf
inc
xor
jl
fists
sbb
shl
je
xlat
iret
push
clc
xchg
hlt
jb
pop
je
xchg
jp
orl
bound
mov
repz
or
jl
fs
aaa
xor
in
stc
shr
mov
pop
cmpsb
decl
out
mov
sti
xchg
roll
sbb
pushf
xor
cmp
testb
adc
fildll
xor
jno
xor
fstpt
ss
mov
add
mov
idivb
cmp
mov
leave
jno
in
imul
mov
lret
jl
add
and
jmp
test
stos
cmp
ja
outsb
das
xchg
jmp
xor
shl
outsb
jno
inc
jns
jecxz
push
mov
popf
cltd
mov
sub
daa
mov
lcall
inc
notl
scas
and
outsl
addr16
gs
addl
cltd
add
sbb
xchg
sbb
call
fbstp
inc
mov
add
cs
dec
push
scas
iret
xor
jb
shrb
cmpsl
xchg
push
mov
mov
cmp
inc
fwait
shr
jb
addl
xchg
jg
mov
and
and
adc
sub
sbb
cmp
pop
test
pushf
jb
mov
addb
movsb
dec
lods
pop
mov
data16
inc
je
dec
mov
aad
fnsave
into
sbb
push
lea
mov
lock
lcall
pop
in
and
arpl
dec
pop
mov
sti
jb
push
add
or
mov
shll
xchg
mov
jecxz
xchg
in
xlat
cmp
and
inc
movsb
std
xor
cltd
pop
dec
test
jne
das
pop
adc
loop
pop
mov
adc
shr
incb
mov
rorb
xchg
shll
cwtl
pop
mov
sbb
movsl
xchg
outsl
xchg
gs
add
sub
inc
ds
fwait
test
push
clc
call
popf
xchg
aam
xchg
cmp
fdivrp
add
add
pop
jle
fwait
cmp
pop
ret
repnz
add
test
mov
jp
stos
mov
lods
mov
sub
mov
lds
dec
mov
clc
cltd
add
xchg
lds
daa
mov
jnp
pushf
popf
popf
mov
push
push
jp
test
and
stos
pop
loop
bound
xchg
outsl
mov
push
dec
lret
pop
inc
in
mov
addl
insl
lret
ja
and
fidivs
adc
imul
jecxz
repnz
jg
cli
mov
and
add
int3
fs
xor
lock
insl
push
pop
call
or
out
dec
dec
sub
aad
cmp
xchg
inc
in
dec
and
ret
outsl
push
iret
call
fldenv
mov
pop
sbb
gs
pop
lret
jecxz
pop
stos
in
jb
and
test
js
jge
jp
jle
js
sbb
cmp
pop
pop
mov
mov
imulb
cmp
push
dec
movsb
sub
int
in
fmul
dec
cmp
rorl
in
movsl
jae
pop
in
test
outsb
in
jp
and
insl
sbb
xchg
out
cs
icebp
outsl
push
frstor
je
xor
cwtl
sti
dec
mov
adc
mov
jl
sarl
xchg
fisubrl
loopne
jb
leave
movsl
mov
push
adc
dec
push
mov
push
fcoml
sbb
mov
mulb
dec
ss
cli
cltd
jo
xor
mov
dec
in
xlat
lea
jo
xchg
stos
ljmp
inc
pop
hlt
cmc
mov
mov
data16
scas
mov
xchg
cmpsl
shr
enter
pop
loopne
sbb
push
movsl
mov
lock
lcall
scas
cmp
dec
mov
aad
test
inc
cmp
jns
xchg
sar
ljmp
rcrl
imul
sbb
add
dec
add
and
out
cli
cld
clc
adc
push
mov
push
gs
aam
mov
cwtl
xchg
gs
and
jmp
gs
scas
mov
cmp
jle
dec
faddl
fwait
mov
xchg
dec
ret
ja
push
inc
into
pop
pop
push
adc
push
ret
in
xchg
mov
sbb
mov
dec
rorb
add
and
sub
adc
pop
js
pusha
fsubr
testl
push
nop
addl
dec
jge
sbb
dec
fidivrs
ja
adc
arpl
mov
repnz
je
add
jae
xchg
pop
push
test
xor
jb
mov
dec
jne
cmp
inc
xlat
icebp
push
adc
sbb
leave
or
adc
cmp
or
and
or
mov
xor
mov
xor
inc
pop
lods
sub
rclb
stc
mulb
popf
or
dec
je,pn
xor
or
jnp
jmp
inc
sub
sbb
test
xchg
aas
fwait
xchg
xorl
adc
and
jno
sbb
je
sar
sbb
les
sub
dec
mov
cmpsb
mov
je
orb
adc
lret
ja
push
pop
push
jmp
fidivl
jno
mov
sarl
or
sbb
in
cld
pop
xor
icebp
scas
into
mov
jmp
and
add
mov
mov
pushf
pushf
popl
test
cmc
xor
clc
mov
xor
stc
jmp
pushl
popf
mov
movb
pushl
ret
jmp
pushf
popl
clc
test
xor
cmc
xor
clc
call
push
pushf
popl
cmc
xor
bt
push
xor
pusha
mov
xor
stc
xorl
pusha
xor
mov
xor
pushl
movb
xor
bt
stc
xor
cld
pushl
popf
movb
pushl
ret
push
pushf
movl
push
pushl
lea
jmp
push
ds
js
inc
out
test
leave
leave
ljmp
dec
scas
jmp
out
insb
addr16
push
mov
fwait
lock
xor
sub
imul
adc
add
out
call
in
ret
loop
dec
pop
mov
xchg
or
pop
sbb
cmp
into
loope
jecxz
jmp
out
sub
xor
mov
mov
and
push
fldl
sarb
stos
cmp
jmp
jnp
add
sub
lahf
xchg
sbb
fs
jne
sub
rol
dec
cwtl
adc
repnz
fs
xchg
jno
icebp
pop
cmpsb
bnd
sti
pop
iret
pop
imul
neg
out
mov
pop
lret
lods
add
xor
js
pushf
stos
daa
and
cmpsl
ret
rcrb
mov
out
dec
aam
mov
out
in
dec
mov
pop
sbbb
sub
rorb
iret
push
add
pop
enter
pusha
test
jno
fwait
loop
pop
push
fadd
adcl
test
jae
sbb
inc
mov
jge
adc
mov
dec
fsts
negl
sub
jne
or
xchg
outsb
jl
fwait
mov
and
xchg
add
nop
or
sub
sti
es
imul
mov
dec
xchg
push
add
mov
jne
fdivs
mov
cld
mov
ficoml
pop
insl
sarb
insl
mov
xchg
and
push
sbb
and
push
mov
rorl
movsb
push
xchg
mov
scas
mov
jl
pusha
sahf
sarb
out
js
or
dec
pushf
shlb
or
inc
stc
jb
xor
roll
lret
icebp
dec
jp
cs
mov
mov
dec
out
sti
ds
xchg
scas
or
shl
and
jbe
jbe
mov
nop
into
mov
imul
fisttpl
dec
aaa
stc
dec
decl
mov
push
mov
push
xchg
movb
mov
jle
mov
imul
lods
mov
adcl
je
and
add
push
cwtl
pop
stos
rcll
sub
sub
rep
pop
aad
ficomps
inc
jne
ljmp
push
insl
cmc
out
cmp
push
fxch
push
or
pop
popa
je
add
sbb
sbb
dec
movsl
dec
sti
mov
add
jecxz
sarb
mov
test
std
cmp
jns
xchg
sar
push
mov
mov
andb
int
scas
xor
pop
xor
out
imul
push
icebp
in
cltd
push
pusha
jo
loop
cmp
pop
jno
mov
push
popf
push
inc
push
push
out
sbb
mov
mov
cmp
pop
inc
sbb
sub
inc
xchg
mov
stos
aas
jmp
sbb
std
ss
dec
sti
jno
jns
scas
andb
cmp
cmp
mov
push
rcll
sahf
push
pop
test
add
shlb
mov
aas
adc
cmc
xchg
js
cmp
std
mov
movsl
xchg
dec
or
out
outsb
mov
lcall
scas
out
sti
push
mov
int3
push
daa
cmpxchg
pop
loopne
aaa
adc
push
leave
dec
movb
inc
ficomps
add
stos
pop
sub
mov
xchg
shlb
pop
pop
cmpsl
mov
lret
mov
jne
inc
gs
adc
jbe
psubusb
jo
or
clts
adc
mov
cmpsl
popa
sbb
mov
push
sbb
aam
inc
jnp
cmp
jg,pn
ret
cld
cmp
sbb
pop
push
xchg
push
aad
dec
cmp
jo
lds
dec
pushl
or
sbb
hlt
sub
pop
jno
mov
and
bswap
clc
xor
dec
inc
repz
test
xchg
hlt
mov
insl
and
mov
dec
fs
es
std
lods
ljmp
mov
or
sub
fwait
aam
sub
push
adc
leave
fisttpll
pop
das
mov
gs
add
push
aad
mov
push
xchg
ficoml
push
mov
inc
xchg
mov
xchg
sbb
lret
and
sahf
xchg
and
inc
jg
mov
aam
outsb
and
sar
mov
mov
cmp
adc
push
imul
and
adc
and
cli
imul
push
scas
mov
mov
roll
sbb
dec
or
outsl
adc
lods
or
sub
test
out
test
pop
std
push
mov
cld
cmp
sbb
pushf
loop
shlb
fnstcw
xchg
jo
sub
in
jne
and
rorl
xor
pop
push
pop
xchg
xor
or
cmpsl
cmp
cld
push
mov
aad
mov
push
les
inc
xchg
call
hlt
adc
push
ret
mov
shlb
lods
aas
daa
push
cld
imul
in
stos
mov
jbe
dec
testb
pop
orb
sbbl
movb
dec
aam
sbb
in
pop
pop
and
xchg
cmp
pushf
push
jne
ficoml
leave
sar
scas
push
pop
test
push
mulb
push
lahf
scas
inc
mov
and
xor
rcrb
jnp
ja
inc
repz
mov
mov
sub
xlat
repz
out
repnz
adc
xchg
orl
jle
lret
sub
sub
dec
js
sbbl
push
movsl
inc
inc
rorb
je
sub
ret
pop
pop
adc
adc
rorb
add
pop
adcl
negl
add
add
or
cmpsb
push
push
cmp
lods
xor
mov
aaa
rcr
push
lahf
mov
mov
clc
cmc
mov
xchg
mov
lods
aaa
fidivl
in
das
fs
inc
sub
js
add
pop
cmp
dec
aam
pop
xchg
adc
les
cmp
arpl
lea
dec
clc
cmpsb
add
hlt
js
inc
loopne
mulb
rcll
cmp
imul
test
jge
mov
push
jp
in
and
lret
sbb
or
movsb
loopne
adc
dec
mov
fs
jmp
dec
fiaddl
lock
fdivl
dec
adc
cs
ret
dec
jecxz
stos
sti
cmp
xchg
add
cmp
loop
rolb
mov
adc
adc
ret
lods
cs
xchg
jge
test
lock
repz
daa
into
or
ret
pushf
push
lret
cwtl
mov
jae
pop
push
stos
jo
jno
xchg
or
call
clc
lret
cld
or
jmp
jo
femms
push
dec
clc
mov
mov
dec
fsave
je
push
push
test
xchg
pop
popf
aas
mov
adc
pusha
or
stos
outsb
sbb
sub
xor
fs
les
or
aad
nop
cli
xchg
or
adc
add
add
or
clc
sti
vpmuludq
push
out
push
daa
mov
mov
into
push
add
lcall
inc
mov
and
xchg
push
adc
dec
jnp
orl
ret
jb
movsb
js
jp
out
or
fstpl
push
add
jb
out
nop
sbb
dec
jae
dec
jg
inc
jg
insl
add
push
push
sti
mov
decb
fnstenv
test
insl
push
outsb
in
dec
ret
and
int
adc
fs
stc
into
mov
lds
pop
push
in
add
mov
int
js
out
hlt
mov
sbb
add
mov
inc
rol
mov
mov
mov
xchg
adc
cmp
inc
adc
xchg
and
ja
push
es
lcall
pop
push
sbb
pop
sbb
cmpsb
jg
loop
es
pop
sbb
xor
fwait
push
push
add
mov
pop
movl
sbb
icebp
shld
xchg
lcall
jp
stos
and
pop
push
xlat
push
out
popa
and
popl
aad
xchg
sahf
adc
jo
cwtl
les
and
dec
ret
aad
and
and
sub
lcall
and
and
push
jb
or
aam
pop
xchg
leave
adc
fildll
push
movb
push
aad
pop
jb
mov
and
sahf
movsl
adcb
lret
jbe
ja
sbb
lods
fcomi
jecxz
icebp
pop
jmp
in
sub
sahf
scas
les
xchg
mov
movsb
imul
orl
push
arpl
ret
out
repnz
xor
shl
lock
iret
jne
sub
xchg
imul
jle
scas
nop
fistps
bound
orl
add
fimull
mov
bswap
mov
lea
sub
xlat
dec
nop
sbbl
sbb
and
push
push
pop
pop
and
add
testl
cmp
sbb
dec
ret
into
dec
xor
testl
repnz
loopne
mov
loope
cmp
stos
ret
mov
call
into
pop
pop
pushl
cld
mov
mov
jge
jbe
js
jg
adc
push
enter
jp
mov
jmp
stc
jle
jp
push
cld
mov
push
cwtl
loope
mov
rcr
imul
and
mov
xchg
pop
mov
sahf
xor
jo
in
mov
sarb
sbb
sti
nop
inc
cmpl
mov
fstpl
jg
leave
mov
movhps
push
in
in
repnz
mov
test
cmp
daa
cmp
jnp
inc
ds
jne
add
int3
imul
and
in
cmpsb
notl
cld
xor
pop
add
in
fwait
pop
bswap
sbb
push
ljmp
cmp
cmpsb
icebp
das
add
int3
inc
cmp
or
pop
in
and
ljmp
push
mov
mov
xlat
lret
adc
bound
aas
into
dec
inc
rcrl
sbb
push
pop
jbe
dec
pop
adc
in
pop
ss
mov
jb
ljmp
or
xor
out
lods
and
jae
pop
xchg
lea
lea
mov
test
sub
repnz
sbb
xchg
or
sub
insl
inc
je
xor
popa
sti
icebp
push
cmpl
std
adc
jb
imul
push
jl
in
adc
mov
jb
mov
fs
out
pop
rolb
dec
vpsubq
cmp
sbb
ficoms
xchg
fprem1
mov
or
push
adc
inc
cmp
mov
cmp
ret
hlt
insb
jecxz
idivl
pop
adc
lds
inc
cli
cmp
imul
mov
and
dec
push
add
inc
shl
movsl
sbb
dec
add
popf
or
subb
inc
and
int3
push
ja
repnz
pop
or
outsl
inc
mov
ret
ss
push
sub
mov
xchg
adc
ss
mov
sbb
sbb
or
add
xchg
cmp
mov
dec
out
out
sub
and
enter
pushl
sbb
aaa
fistl
pusha
cmc
or
mov
push
rcr
jo
jbe
mov
shlb
mov
and
lcall
xacquire
in
and
jecxz
insb
lods
lods
add
and
jne
jg
imul
cltd
add
repnz
out
fldt
pop
or
cmp
mov
fwait
mov
jg
push
xor
ljmp
mov
mov
xor
gs
mov
imul
lea
ficomps
popa
xchg
jge
pop
xor
out
xorb
sub
lds
adc
mov
jne
jl
mov
add
cmp
jns
and
in
adc
in
es
pop
std
sub
and
push
jp
mov
ret
inc
repnz
cmp
jmp
xchg
into
lcall
nop
sub
call
add
push
inc
pop
cs
cmc
xchg
lock
rcrl
jecxz
add
push
xchg
fmuls
out
fisttpll
icebp
mov
mov
imul
mov
or
mov
or
pusha
mov
mov
in
movsb
mov
rcl
mov
inc
loop
lret
pop
repnz
popa
pop
jo
call
fadds
jl
jbe
xchg
jae
lcall
fucomip
jp
cmpsl
push
inc
cs
pop
dec
jle
int3
je
or
pop
aaa
xchg
xor
mov
mov
rep
out
push
inc
mov
loop
lret
addr16
cmpsl
or
ss
popa
and
jecxz
icebp
jp
mov
out
push
add
bound
add
or
mov
xchg
push
cmp
mov
adc
div
add
int3
je
mov
fmul
pop
sbbl
cmpb
fucomi
fcomps
jbe
ret
mov
inc
cmp
add
scas
out
xor
or
inc
mov
mov
sbb
lcall
cmp
les
notb
mov
cld
sti
iret
loop
lds
mov
pop
mov
mov
lods
xchg
push
dec
orl
sbb
and
sub
test
into
divb
stc
clc
popa
push
shll
insb
xchg
push
dec
inc
jnp
scas
xchg
imul
push
shr
adc
mov
and
call
xchg
adc
das
in
push
mov
sbb
dec
add
movsl
int
sti
repz
lret
std
mov
xchg
mov
and
cli
jg
and
ss
and
arpl
inc
mov
js
xor
push
add
cmpsl
jne
in
call
jmp
movl
call
movl
movb
lea
jmp
movl
pusha
push
lea
jmp
call
push
movl
pushf
lea
js
push
pusha
pushf
lea
jmp
pushf
popl
bt
call
movl
pushf
movb
pushf
pushf
lea
jmp
push
call
call
call
xor
pushf
xor
pushf
pushf
xor
mov
pushl
popf
pushf
pushf
pushl
ret
jmp
push
movl
pushf
lea
jmp
xor
test
xor
bt
cmc
xor
mov
std
pushl
popf
push
pushl
ret
pusha
pushf
popl
pushl
xor
cmp
xor
test
xorl
test
xor
clc
xor
pushf
mov
xor
stc
xor
pushf
clc
xor
movw
bt
pushl
popf
movb
mov
pushl
ret
pushf
stc
test
xor
pusha
bt
xor
bt
xor
clc
xor
cmc
cmc
xor
jmp
xor
bt
push
xor
pushf
xor
pushf
xor
clc
clc
xorl
jmp
xor
jmp
push
jmp
push
pushf
jmp
pushf
popl
pushf
jmp
jmp
xor
clc
jmp
pushf
clc
xor
clc
xor
call
pushf
pushf
popl
push
xorl
pushf
xor
push
xor
pushf
bt
xor
movw
pusha
xor
push
xor
pushf
cmp
xor
call
lret
sub
cwtl
cmc
add
jmp
pop
jno
mov
pop
dec
mov
push
pop
int3
add
das
push
push
xor
or
stos
mov
mov
test
and
enter
nop
jecxz
mov
test
lds
incl
jnp
data16
mov
sarl
mov
loope
pop
bound
repz
pop
cmp
push
sbb
and
jmp
fisubs
bnd
lods
sti
sbb
je
in
ja
repnz
add
mov
inc
mov
cmp
or
xchg
loope
jmp
outsb
mov
clc
aas
pop
inc
fidivl
sub
and
mov
mov
jmp
dec
add
lock
leave
ljmp
in
sub
andl
adc
cltd
int3
ljmp
jmp
stos
out
lods
mov
sbb
mov
jmp
adc
andl
sub
shrb
xchg
loop
mov
inc
lods
ljmp
mov
fiaddl
push
jp
pop
or
pop
push
imul
sbb
add
in
idivb
incb
inc
xchg
sub
in
fwait
inc
sub
stc
push
lods
out
nop
insl
enter
sub
xchg
inc
stos
jae
mov
mov
repz
inc
fidivl
cltd
das
fsub
jb
pop
jne
fdivrs
sub
imul
gs
adc
je
sbb
loope
cmp
mov
cld
mov
ss
leave
and
push
jecxz
js
sub
ret
imul
out
and
mov
fdivrl
mov
std
inc
add
fnstsw
out
std
lods
test
mov
sbb
sbb
fs
mov
xchg
push
or
enter
aaa
xor
orl
xchg
loopne
inc
rorl
xchg
mov
repnz
jl
loopne
lock
insb
lods
pop
pusha
adc
movsb
mov
aad
jne
xchg
jge
mov
inc
and
ret
std
xor
shlb
inc
lock
iret
xchg
add
insb
out
and
aas
xor
inc
mov
mov
mov
inc
jl
es
leave
cld
in
jmp
bound
xchg
fnstsw
push
add
imul
cmp
mov
push
xchg
int
ret
mov
inc
sti
sub
and
pop
pop
sbb
aad
fs
xor
leave
scas
enter
faddl
loop
xchg
aam
or
inc
inc
and
fcmovnb
int
or
jmp
aad
lds
movsb
add
mov
je
xchg
mov
enter
cmp
push
bound
jmp
outsl
pop
fcomps
cltd
jb
movsl
aas
rolb
loop
add
subb
xchg
fwait
andb
in
or
xor
inc
cmp
sub
lds
jle
and
in
xor
outsl
clc
cmp
sti
xchg
mov
arpl
xchg
xchg
xchg
or
into
push
adc
lahf
hlt
and
jl
cmpsl
mov
push
xchg
mov
bound
mov
sub
sub
pop
dec
sub
test
pop
inc
gs
test
mov
flds
in
mov
mov
push
jecxz
cmpb
movsl
sarl
xchg
clc
jl
and
push
and
andl
jmp
dec
push
scas
jp
inc
sub
sub
mov
out
xorl
cmc
jle
mov
stos
xor
fcompl
fbstp
jo
icebp
pop
push
clc
movsl
xor
movsb
jbe
out
dec
ret
sbb
dec
sbb
xchg
loope
add
loop
lret
dec
pusha
inc
pop
hlt
sub
xchg
cli
cltd
jp
pop
enter
xchg
adc
and
fsqrt
dec
inc
fidivs
cmp
push
fiadds
in
add
negb
sbb
lods
rep
mov
cld
int
push
xor
bound
mov
dec
in
test
loopne
xchg
inc
pop
xchg
in
hlt
fwait
in
sti
test
rcl
jnp
dec
es
fcompl
mov
enter
fiaddl
push
scas
cmpsl
jge
inc
inc
xor
data16
lcall
shrb
mov
popl
sbb
outsl
cmp
lods
dec
push
pop
hlt
xchg
push
push
cwtl
scas
add
mov
xchg
or
push
jge
push
rorl
pop
cmpsb
out
xchg
xchg
mov
push
add
and
dec
xchg
loopne
out
dec
push
lods
sub
and
inc
mov
enter
mov
jle
stc
adc
data16
sti
push
in
lret
xchg
push
loope
sub
mov
data16
mov
jge
jg
scas
inc
or
and
jmp
pop
pop
xor
aaa
das
enter
test
cmp
add
std
and
push
and
lcall
adc
frstor
stos
jns
push
aad
add
xor
or
mov
mov
dec
loopne
push
sti
fidivrs
nop
push
push
and
adc
decl
stos
js
xor
adc
cmp
rcll
inc
aaa
ficomps
test
sub
shlb
les
mov
inc
movsl
inc
mov
aam
mov
lods
aad
mov
sbb
imul
adc
outsb
test
xchg
mov
sub
loopne
dec
loopne
hlt
fwait
lods
outsl
data16
sahf
ret
movl
or
mov
sarb
mov
pop
movsl
pop
cmpsb
xor
xchg
jbe
lods
rcrb
and
inc
jb
into
popf
cltd
ror
insl
hlt
pushf
mov
repnz
mov
test
cmp
dec
mov
int
pop
dec
xlat
dec
sbbb
jae
dec
xor
test
dec
dec
xor
jnp
dec
test
leave
mov
addr16
lods
lret
lods
movsl
mov
sbb
push
push
insb
mov
push
je
in
cmp
adc
cmc
repz
daa
inc
scas
mov
js
cmpsb
and
jo
mov
jnp
cwtl
imul
cmp
mov
push
addr16
mov
xor
mov
idivb
orl
or
test
lret
mov
sub
shll
jg
enter
jae
shlb
test
loop
push
cmpsl
mov
inc
es
cli
das
push
mov
xor
pop
push
out
faddl
mov
movsb
repz
movb
mov
mov
xor
mov
add
push
mov
and
cmc
outsl
dec
cmp
and
sbb
add
jnp
add
int
fidivl
sbb
push
lret
pop
fdiv
sbb
divb
push
dec
data16
add
out
add
roll
sbb
jb
stos
push
push
enter
pop
les
lods
and
outsl
daa
mov
sbb
adc
xor
jg
and
ja
adc
subb
fisttpll
sbb
add
push
mov
cmpsl
pop
jl
imul
cmc
fsts
mov
pop
add
adc
test
pop
movsl
addl
and
loopne
push
inc
adcb
xchg
xlat
rol
in
xchg
sbb
cmp
xlat
lods
int3
add
push
add
jge
add
dec
mov
mov
mov
idivb
push
bound
sbb
cmp
sub
sbb
clc
or
mov
std
inc
sbb
ficomps
add
sub
mov
hlt
jge
adc
dec
cld
or
sub
add
enter
xor
enter
jo
push
mov
and
mov
cmp
stc
aam
sub
jo
mov
sbb
push
mov
stos
jge
pop
pop
mov
mov
loopne
stos
cld
loope
mov
cmpsl
in
mov
mov
sbb
stos
lcall
lock
xchg
mov
dec
sti
ja
pop
mov
movsl
jne
test
sar
fsubrp
stos
stos
ljmp
sbb
xor
dec
leave
pop
mov
cmp
and
fcmovbe
jne
das
inc
add
inc
arpl
lea
mov
in
lock
roll
cwtl
iret
notl
shrl
and
sarl
sbb
mov
mov
daa
mov
inc
and
stos
sub
orl
insb
inc
je
repnz
add
jle
pop
or
in
aam
jle
popa
xor
sarb
jp
xor
je
jle
out
outsb
mov
inc
mov
cmpsl
cmp
add
cmp
sbb
jmp
jae
sub
shlb
sub
push
xor
mov
mov
fisttps
mov
push
repnz
xchg
rorb
pop
adc
pop
cmp
cmp
mov
xchg
lret
jne
xchg
push
adc
pushf
inc
push
mov
lock
sub
lcall
nop
jno
and
imul
ror
insb
mov
or
sbb
push
lock
fadds
sti
cltd
adc
aad
and
and
add
test
or
aam
push
iret
outsb
out
pop
imul
inc
outsb
ret
jl
clc
adcb
inc
and
mov
stos
pop
out
push
jmp
push
lods
adc
in
popa
cmp
push
mov
jp
dec
pushf
mov
mov
sbb
add
xchg
and
or
jle
add
xchg
mov
aam
and
cmp
lcall
mov
shrb
mov
pop
mov
sbb
xor
dec
pop
inc
jns
and
ds
mov
adc
mov
push
pop
pusha
fdivrl
or
cwtl
adc
xor
add
push
xor
int
mov
mov
sbb
jo
adc
mov
jl
lahf
insb
and
into
insl
ret
scas
xorb
mov
mov
dec
xor
dec
out
mov
add
add
and
arpl
xor
cmc
cmpsl
test
cli
ret
inc
subb
jo
shll
jge
inc
loop
scas
mov
pop
shrb
xor
hlt
cltd
cmp
fwait
pop
fidivl
mov
bound
jp
mov
or
aam
loop
sarl
jo
stos
in
push
adc
pop
shll
mov
cmp
inc
out
js
cmpb
jmp
sbb
cmp
push
dec
addl
test
or
mov
lcall
imul
add
cs
cmpb
das
imul
xorb
aad
test
and
xorb
sti
inc
xchg
fs
jne
icebp
sbb
or
ds
or
push
cwtl
mov
xor
pop
and
inc
nop
ficomps
into
jmp
es
lea
leave
lods
cli
cwtl
mov
and
lret
sar
jns
inc
pushf
loop
cmp
pop
out
shll
cli
cs
sahf
aas
sti
xor
push
push
push
pop
frstor
es
push
and
pop
pop
imul
out
push
push
add
hlt
adc
pop
iret
cmp
inc
and
xlat
clc
pop
pop
and
push
popl
sbb
or
fsts
cmp
inc
jp
lods
lock
mov
xchg
lret
inc
pop
gs
xlat
adc
out
push
lret
in
arpl
xor
scas
inc
mov
xchg
or
in
mov
mov
sbb
mov
sub
hlt
cmpsl
dec
mov
jmp
je
repnz
lret
out
xor
mov
mov
jb
inc
or
arpl
xchg
enter
mov
or
and
sbb
aad
outsl
adc
leave
inc
mov
mov
fst
sbb
subb
dec
mov
lods
and
dec
jecxz
xor
or
pusha
sub
out
jae
fidivs
add
pusha
repnz
or
daa
mov
jmp
bound
cmp
and
pop
fistpll
add
enter
pop
mov
mov
fsubs
call
pop
aam
cmpsb
scas
in
aaa
shlb
loope
mov
int
movsl
inc
mov
and
lods
xchg
and
push
inc
mov
aaa
pop
js
aad
mov
or
aam
sarb
enter
mov
push
jns
adc
dec
mov
mov
loopne
lods
ret
shrb
movsl
mov
mov
mov
push
stos
jl
push
dec
push
ljmp
in
push
pop
mov
cmpsb
les
scas
icebp
ret
cmp
in
andb
jnp
jne
dec
inc
dec
ljmp
pop
cli
xchg
lds
imul
jg
or
inc
xchg
leave
pop
sbb
rorl
mov
lods
cmp
ret
add
sbb
cmp
imul
in
sub
or
ja
sbb
aas
inc
jo
push
sbb
xchg
mov
lea
add
mov
cmp
or
adc
dec
cld
fnstsw
aam
movsl
repz
and
in
or
xchg
sti
pop
mov
sbb
pop
or
out
shl
sti
jae
ljmp
sbb
mov
aas
push
push
and
scas
sub
pop
pushf
inc
cmpsb
push
scas
pop
aam
pop
inc
dec
jmp
pop
xchg
and
xor
nop
fbld
cmpsl
ds
ss
pop
shlb
adcl
mov
or
icebp
add
test
cltd
imul
fstpt
lahf
mov
shll
cmp
push
loope
xor
mov
daa
adc
adc
pop
xlat
add
add
inc
mov
sbb
dec
hlt
int3
aas
aad
jno
dec
mov
or
mov
test
ljmp
mov
ds
js
cmpsb
xlat
adc
and
mov
mov
into
out
mov
mov
loopne
sub
xor
jmp
mov
jl
xchg
push
cmp
xlat
into
mov
mov
test
jmp
mov
jmp
dec
and
inc
cmp
mov
inc
movsl
or
adc
sub
add
lods
loope
neg
fs
push
push
repz
mov
pop
xchg
pop
stc
ret
ja
ljmp
xchg
dec
les
mov
xchg
jnp
jbe
aaa
mov
fstpt
dec
insl
in
pop
xlat
jbe
jmp
pop
and
andb
stc
rolb
dec
cli
adc
fwait
cmp
cmpsl
loopne
test
rcrb
ficoml
repz
fsubrl
js
popa
push
fbstp
dec
sti
in
movsb
nop
xchg
aaa
cs
fcmovnu
push
testl
js
cltd
into
xchg
arpl
jle
sub
cmpsl
cmpsb
mov
and
mov
jae
xchg
mov
in
int3
outsl
cltd
std
mov
dec
cmpsl
inc
mov
scas
mov
fisubs
sub
push
jecxz
mov
jmp
xor
jbe
jno
dec
mov
add
cmpsl
shrb
push
cmp
or
ljmp
in
jle
imul
mov
in
call
push
in
scas
or
inc
movsb
dec
dec
xor
fbstp
sub
mov
cmpsl
mov
adc
in
add
mov
loopne
jmp
enter
int3
cmp
adc
mov
jb
xchg
adc
imull
ljmp
jo
sbb
sahf
push
outsb
call
xor
in
mov
push
adc
sbb
mov
mov
and
test
ficoml
inc
lds
sub
sti
mov
mov
mov
cmc
xor
xchg
pop
je
mov
je
xchg
cmpsb
mov
enter
stc
scas
inc
pop
pop
ljmp
aad
lods
sub
mov
sbb
aaa
dec
orb
pop
xchg
and
popf
dec
add
lret
xlat
jmp
imul
call
sub
int
fs
inc
inc
pushf
inc
inc
pop
mov
inc
inc
ret
insl
mov
and
aad
imul
cmpsl
mov
clc
movl
xlat
xchg
xchg
cli
dec
les
loop
adc
insb
add
stos
jne
inc
sbbl
shrb
inc
inc
pop
sub
hlt
into
je
inc
cmp
inc
dec
sbb
pop
push
cld
mov
iret
cmpl
mov
mov
roll
sbb
adc
push
int
lret
xor
lret
sub
decl
ret
xor
ret
and
and
gs
cmp
adc
cmp
ret
sub
xor
outsl
frstor
dec
out
ret
mov
out
inc
fcoms
inc
xor
xor
insb
adc
clc
xor
xor
ret
cmp
aas
fiadds
sub
orb
xor
dec
add
xchg
sub
fs
cmc
jmp
jecxz
cmp
sbb
out
xchg
sub
imul
cltd
fnsave
mov
xchg
popa
std
aaa
scas
aad
push
xor
push
imul
int3
or
idivb
test
jae
adcb
push
jbe
push
je
insb
mov
xchg
popa
xlat
mov
add
ja
and
lock
cmp
dec
fbstp
inc
xor
mov
arpl
dec
xor
mov
insb
cmp
adc
mov
xchg
roll
jl
mov
mov
dec
inc
test
stos
ds
das
xchg
std
mov
in
sahf
sbb
push
ret
dec
aas
xchg
adc
mov
stos
daa
and
sbb
jmp
outsb
repz
cld
inc
out
ficoms
mov
cmp
movsb
cld
mov
inc
mov
adcl
in
lods
cmp
cltd
repz
dec
mov
jo
movsb
mov
into
mov
jae
test
and
push
rorl
xchg
fs
mov
sub
nop
sbb
xchg
xchg
cmp
jmp
shrl
mov
mov
in
packuswb
into
adc
jge
nop
nop
xchg
cwtl
xchg
lcall
fldcw
and
cmp
inc
xchg
or
ja
shll
stos
or
push
cmc
dec
mov
push
add
inc
aad
in
aaa
sub
jg
mov
into
adc
pop
add
iret
sahf
in
js
jne
dec
lods
int3
cmp
mov
je
mov
pop
aaa
fcomps
cmp
icebp
das
pop
rclb
lcall
pop
stc
enter
ret
jno
jno
xor
mov
pushl
add
ficoml
mov
mov
cmp
add
add
push
mov
or
in
ret
sahf
fildl
repz
imul
stos
in
cmpsb
jle
in
inc
testl
test
ljmp
lret
jo
out
inc
fwait
test
adc
lods
rorb
mov
fisubrs
push
inc
pushf
mov
inc
stos
jne
pusha
xor
sbb
mov
rclb
xor
testb
and
pop
xchg
mov
push
xchg
fidivrl
sbb
dec
cwtl
dec
or
jb
mov
jle
sub
inc
cmp
sub
loopne
and
sbb
jae
dec
adc
or
pop
adc
out
daa
sbb
adc
xchg
cmp
in
push
cmpl
iret
lods
jns
cmp
jne
cmp
andb
cmp
jns
push
hlt
repz
jg
fnstenv
xor
paddsw
mov
or
aad
gs
test
sub
loope
and
and
cli
fyl2x
adc
paddsw
lret
mov
out
xor
lret
stos
dec
mov
ror
jne
pop
mov
mov
inc
cmp
mov
adc
xor
movsl
dec
aaa
mov
or
mov
inc
jmp
mov
fld
xchg
mov
jl
push
pop
lahf
in
imul
push
lods
lock
xor
iret
fnsave
cltd
in
test
mov
loope
cli
inc
cmp
lretw
test
ret
mov
push
xchg
and
pop
mov
push
push
xor
stc
cmp
imul
pushf
sub
jp
jl
push
fsubrl
add
and
pop
in
lea
dec
repnz
push
dec
iret
and
mov
insb
and
call
iret
adc
inc
fildll
out
mov
rorl
loopne
add
dec
mov
lret
jo
fidivl
test
mov
test
add
push
loopne
inc
pushf
push
add
test
or
divb
insl
jmp
xor
and
dec
or
xchg
imul
in
push
popf
unpcklps
adc
movsl
into
call
xchg
lods
mov
mov
sub
jle
dec
mov
lret
add
inc
mov
xor
sub
aam
sahf
stos
cmp
fstpl
frstor
mov
lods
adc
cmp
cmp
out
adc
dec
std
or
daa
add
xor
sti
add
push
out
pop
scas
mov
decl
lods
lcall
dec
pop
mov
repnz
and
loopne
std
je
xor
sub
es
mov
inc
and
addb
icebp
das
out
in
jnp
addr16
icebp
cmp
stos
xchg
pop
jmp
in
push
and
iret
ret
sub
aaa
sbb
lret
int3
mov
jno
ret
xchg
or
sahf
loope
jb
pmulhuw
js
xchg
push
movsl
push
jg
insl
mov
cltd
cmp
cmp
outsl
mov
pusha
clc
xchg
sbb
inc
leave
lcall
add
into
mov
adcl
push
xlat
fucompp
mov
adc
scas
pop
mov
lahf
push
data16
jge
stos
fcoml
or
sbb
add
cs
push
test
mov
popa
mov
pop
stos
jne
mov
dec
fdiv
out
fwait
push
aam
stos
cwtl
sub
jecxz
ror
out
push
popa
fnsave
and
push
fs
enter
pusha
pop
data16
mov
mov
or
pop
lock
mov
mov
inc
ret
xchg
in
cltd
ja
faddl
jmp
mov
mov
decl
bound
aam
test
push
pop
mov
arpl
mov
outsl
daa
insb
loope
dec
insb
popa
test
push
and
stos
shll
repz
fistps
fidivs
fisttpl
and
sbb
cmp
pop
and
leave
shll
or
xor
dec
fiaddl
mov
jbe
push
adc
lret
mov
aas
mov
push
sbb
ret
jp
scas
scas
mov
xchg
adc
adc
lahf
js
mov
outsl
cs
adcl
mov
aas
cwtl
push
stos
incl
in
icebp
lahf
jle
lret
sbb
inc
mull
inc
daa
sbb
mov
xchg
fisttps
mov
mov
jb
sub
mov
pop
outsb
add
dec
lret
pushf
jmp
lret
dec
popf
leave
pop
mov
outsb
sub
mov
and
das
mov
pop
inc
push
in
repz
jmp
repnz
data16
ror
and
sar
mov
out
int
inc
push
push
jecxz
xchg
std
in
hlt
lret
mov
mov
test
dec
inc
sbbb
sbb
jne
xchg
lock
movb
out
inc
inc
and
or
scas
loop
lea
jmp
inc
push
je
sub
cmp
cld
std
sbb
mov
ret
mov
pusha
adc
xor
xlat
pop
nop
stc
pop
lea
sub
arpl
and
add
mov
dec
pop
insl
sti
ja
sahf
gs
pop
ljmp
adc
cmpl
ja
xor
xchg
aam
lcall
push
mov
cmpsb
mov
dec
sbb
arpl
sbb
jne
and
sbb
pushf
adc
mov
jo
inc
cmp
mov
cwtl
jmp
popa
mov
jbe
nop
or
mov
pushf
aam
jle
sbb
es
in
xor
out
mov
scas
fidivl
and
and
cmp
jae
mov
insl
pusha
mov
push
das
dec
je
pop
imul
jne
popa
stos
mov
xor
dec
mov
lds
inc
mov
pop
push
dec
cmc
jo
call
or
rcll
or
popa
pop
lret
cli
cltd
jo
adc
rcl
clc
push
cmpl
jo
sub
fwait
cli
leave
iret
or
sarl
hlt
jmp
push
push
test
gs
lgs
cmp
pop
adc
inc
adc
pmaxub
pop
dec
jl
sub
mov
mov
pop
cmpsb
mov
and
push
out
or
popa
cs
insl
jo
in
xchg
outsb
in
mov
movsl
xor
sub
adc
inc
movsl
popf
fildll
setg
jae
mov
dec
enter
ret
cmp
xor
into
pop
dec
xor
add
and
push
add
dec
sahf
cmp
mov
sbb
jne
outsb
in
or
mov
call
add
jp
scas
xchg
outsb
data16
push
adc
cld
movsb
fwait
adc
xchg
lods
stos
jp
inc
cmp
movsl
fldcw
mov
dec
sbb
pop
mov
mov
addr16
dec
sub
lods
imul
stos
shrl
mov
push
out
cmp
xor
adc
push
subl
nop
popf
call
rol
popf
imul
jb
fdivl
aam
cs
add
arpl
icebp
inc
jl
adc
or
cltd
xchg
sahf
pop
out
ficompl
das
jne
mov
test
in
ja
scas
popf
cltd
push
sub
lret
imul
mov
inc
arpl
scas
xchg
sbb
fidivl
sub
sub
sub
je
push
fistpll
push
lods
adc
dec
or
aad
pushf
cmp
das
in
push
dec
and
jmp
mov
push
iret
daa
adc
push
add
adc
jae
pop
adc
push
cli
jo
add
xor
cmpsl
add
addl
aas
js
out
pushf
cmp
inc
xchg
add
cmc
daa
fcmove
push
or
movsl
aam
mov
daa
xor
inc
mov
iret
dec
das
jp
stos
lods
mov
add
cltd
outsl
xchg
dec
les
mov
jecxz
jge
push
pop
sub
movsb
int
out
arpl
add
jmp
jle
nop
mov
fucom
pop
imul
adc
mov
and
imul
inc
bts
mov
stc
insl
insl
adc
or
out
imul
aad
pusha
xchg
push
out
or
dec
inc
fldcw
mov
popa
mov
mov
imul
and
iret
mov
cmp
dec
cmpsb
inc
ret
xchg
ret
pushf
cmp
aas
enter
ds
mov
mov
and
jp
jo
push
adc
dec
dec
arpl
pusha
mov
add
sub
xchg
add
dec
leave
ds
mov
adc
cwtl
cmpsl
lods
mov
insl
mov
in
test
jb
push
dec
enter
push
pop
push
fwait
xchg
fsubrp
imul
lret
lret
mov
std
scas
jne
in
mov
je
xchg
repz
mov
mov
pop
inc
sub
orb
dec
jecxz
sub
push
nop
nop
das
arpl
jns
cmp
inc
les
sub
mov
movsb
push
mov
sbb
pop
pop
mov
shrb
repnz
ss
or
add
and
or
andl
movsb
jbe
test
jnp
xchg
ja
or
je
inc
cmp
rorl
mull
iret
fsubrs
cmp
je
popf
aad
sbb
aam
movsl
test
inc
es
cld
ljmp
pop
aaa
inc
mov
scas
jno
and
mov
call
dec
daa
add
fistps
les
outsb
sbb
and
clc
sub
xchg
jp
push
cmp
int
add
clc
mov
xchg
push
xor
cmp
pushl
xorl
push
xor
bt
pushl
popf
pushl
pushl
ret
pushl
popf
pushl
pushl
ret
call
or
call
in
sbb
sahf
push
loope
dec
mov
leave
sbbb
aaa
and
pop
lret
aad
or
dec
dec
aaa
daa
adc
in
rcrb
or
or
mov
sbb
andl
add
roll
push
jbe
mov
inc
stos
cmpsl
mov
std
ss
bswap
addr16
add
push
pop
mov
sub
out
or
jne
lea
mov
daa
lock
mov
cmp
lret
stos
mov
imul
mov
adc
fsts
ljmp
orl
fwait
ret
idivb
repnz
pop
insb
sub
push
inc
pop
arpl
or
out
dec
jle
jo
xor
nop
dec
call
lcall
jge
jbe
dec
sub
std
or
mov
push
ds
popa
fisttps
outsb
adc
mov
pop
ja
xchg
push
jne
leave
or
jae
dec
test
shll
in
cs
in
decl
push
cmp
push
xchg
repnz
jmp
lret
movsb
xorb
mov
sub
cmp
test
js
add
cli
addr16
mov
add
add
cmp
mov
mov
xlat
sbb
cld
sub
mov
or
sub
xchg
lods
or
pop
cmpsl
jne
pop
push
repz
repnz
clc
xor
clc
adc
into
cwtl
stc
adcb
cmp
imul
inc
std
ljmp
mov
addr16
mov
lock
loopne
rol
dec
adc
dec
push
pop
test
mov
xchg
inc
daa
push
mov
pusha
fldenv
inc
aaa
out
dec
add
xor
jnp
jmp
ss
sub
loopne
aaa
inc
mov
gs
in
cmp
xor
negb
enter
or
cli
dec
lret
push
push
or
idiv
jecxz
jno
fs
xor
sub
mov
fmuls
or
fldl2e
pop
push
cmpsb
pop
push
dec
testl
mov
ret
pop
fldenv
mov
sahf
ds
xchg
popa
incl
out
jb
popa
ret
icebp
insl
in
loope
test
repnz
or
lret
xor
adc
mov
pop
xor
repnz
xlat
add
scas
jns
mov
fsincos
dec
shrb
int3
rolb
mov
adc
push
push
add
xor
loop
cmp
outsl
mov
movsb
inc
push
jp
cmp
in
xchg
pop
sbb
icebp
jo
insl
sub
add
das
fbld
push
test
std
xchg
mov
imul
out
jp
and
sti
push
pop
push
mov
popa
test
cmpsb
mov
je
adc
sti
or
xchg
pop
shl
mov
sbbl
gs
in
cld
xor
ret
repz
xlat
inc
daa
lods
or
pushf
inc
and
addr16
loop
xchg
sbb
jbe
sarb
lock
call
leave
jmp
cmp
and
lahf
out
div
fiadds
lds
mov
sbb
or
int
paddsb
stos
sbb
dec
out
jecxz
pop
scas
call
loopne
sub
dec
mov
ds
mov
in
inc
jg
mov
push
sbb
inc
pop
pusha
sbbl
sbb
popa
mov
and
sub
sub
into
or
test
cwtl
test
jo
sbb
jmp
lods
pop
adc
shll
insl
adc
les
push
cld
pop
imul
dec
pop
data16
jnp
shrl
mov
sahf
dec
testb
mov
dec
dec
jo
sbb
push
xlat
aaa
jl
lods
inc
lahf
jo
sbb
or
nop
andl
fwait
dec
dec
clc
je
lcall
push
push
jb
bswap
in
inc
cmp
cwtl
sbb
mov
and
outsb
test
nop
mov
rolb
lea
addr16
inc
daa
lds
cmp
mov
inc
xchg
adc
lret
test
mov
mov
add
dec
mov
mov
mov
jmp
jl
out
sahf
sti
and
in
cmc
add
test
fstpl
ret
movsb
push
sbb
and
test
pop
nop
xor
mov
rcl
push
mov
out
push
pop
dec
popl
add
adc
mov
cmp
fistpll
or
mov
push
or
inc
scas
loopne
cli
jecxz
jle
pop
xor
iret
jle
jb
mov
sbb
or
adc
mov
xchg
sbb
mov
enter
sub
mov
inc
pop
lods
mov
stos
dec
adc
xchg
ljmp
fs
dec
ret
mov
jns
or
cwtl
fstps
add
daa
ss
shrl
movsb
mov
cld
or
cli
mov
popf
dec
int3
shlb
pushf
jp
dec
jb
jno
lods
std
cmpsl
testb
enter
imul
mov
inc
cwtl
or
push
sub
nop
bound
push
mov
imul
je
xchg
xchg
dec
into
cmp
lds
mov
iret
xchg
divb
into
iret
rclb
adc
addr16
fildll
xchg
add
inc
cld
mov
mov
gs
sti
dec
lds
xchg
into
push
inc
mov
lret
ficoms
and
out
jae
int3
arpl
test
push
cmp
clc
daa
jg
mov
adc
aas
ljmp
push
pop
out
cmp
icebp
xor
pop
rclb
in
outsl
sbb
leave
inc
cmp
xor
inc
std
test
mov
mov
cmp
lcall
movsl
push
ror
addr16
rorb
fcomi
sub
movsl
fisttps
mov
cmpsl
les
lock
icebp
jmp
mov
in
push
decl
lds
or
mov
jb
fwait
mov
push
inc
xchg
shlb
into
push
arpl
mov
adc
mov
adc
xor
in
jmp
adc
js
mov
cmpsl
and
fisttpll
mov
pop
in
mov
pop
xchg
lfs
aas
xor
fstp
jb
insl
add
imul
jbe
es
xchg
dec
mov
and
pop
ljmp
xchg
jbe
data16
dec
pop
lret
popf
fsubrl
mov
push
cmovb
dec
fsubl
cld
xchg
in
je
movsl
sbb
jo
dec
xchg
xlat
mov
jp
inc
rolb
inc
shrl
fstl
ds
out
and
xchg
sbb
pusha
dec
jecxz
cs
mov
fwait
mov
outsb
movsb
cmp
push
out
rcrl
pop
mov
mov
js
cmpsl
pop
push
sub
lahf
xor
lcall
es
into
or
ret
and
xchg
in
cld
inc
push
lock
push
cmp
adc
mov
clc
in
mov
stc
test
push
fs
ss
sub
push
leave
mov
lret
loope
or
jno
mov
or
sbb
icebp
add
dec
dec
sub
lods
sub
mov
cmp
shrb
cltd
cmpl
outsb
in
fwait
xchg
iret
out
xchg
ds
int
jnp
mov
mov
xor
enter
dec
outsl
and
rorb
int3
ss
insb
scas
pop
jae
sarl
add
testl
fld
inc
fcmovbe
mov
lret
inc
mov
scas
pop
cmpsl
sbb
ret
inc
stos
iret
shl
dec
sbb
pop
cmp
jmp
call
in
lcall
insl
repnz
leave
xchg
addps
sbb
ja
mov
cmpsb
xor
fbld
pop
gs
outsb
mov
and
inc
dec
out
adc
fistps
xor
and
mov
loop
dec
ja
push
das
jb
mov
mov
add
pop
jg
xchg
loop
mov
mov
pop
jb
scas
inc
addr16
fmull
inc
clc
cmp
out
mov
pushf
mov
shrl
pop
addr16
outsl
addr16
or
lods
cmp
clc
cmp
lea
packuswb
xchg
sub
mov
xchg
mov
push
nop
adc
push
lock
push
and
push
mov
ret
cmp
pop
jmp
out
sbb
add
jle
mov
mov
popl
mov
add
push
jecxz
lcall
test
adc
int
stos
sub
aad
gs
mov
add
jns
jg
test
pushl
popf
mov
pushl
ret
pusha
pushf
popl
call
pushf
movl
push
movl
pusha
pushf
lea
jmp
bt
xor
mov
xor
stc
cmc
xorl
stc
xor
jmp
call
xor
push
out
rclb
jo
jno
rclb
dec
inc
shrl
aad
jns
arpl
popa
pop
sti
lret
into
xchg
jmp
mov
dec
pop
jmp
and
leave
jb
add
cmp
loopne
mov
xchg
inc
jne
xchg
mov
or
dec
je
and
leave
aaa
sbb
imul
jmp
out
daa
jl
xorl
inc
arpl
xchg
and
and
imulb
mov
cld
in
xor
mov
sbb
adc
mov
sub
mov
incl
js
jne
xchg
fldl
gs
xchg
xchg
pop
lret
adc
scas
add
pop
adc
idivb
cmp
and
fisttps
aam
arpl
and
push
testb
jae
adc
xchg
jmp
push
adc
lcall
mov
in
mov
imul
xor
movsl
fwait
pushf
cltd
mov
in
gs
mov
mov
popa
sbb
notl
add
xchg
cwtl
adc
add
jae
sbb
pop
inc
ss
mov
movsl
pop
adc
push
xor
pop
mov
testl
call
mov
xlat
and
leave
inc
fstps
jmp
jp
push
add
mov
inc
lods
xor
fdivl
rorb
xchg
dec
dec
pop
std
cli
or
xor
cmp
scas
dec
inc
rol
nop
pushf
mov
lds
ja
mov
cld
dec
or
cmpsb
mov
lods
into
pop
cmpsb
iret
icebp
jmp
enter
push
xchg
and
xchg
and
pop
add
sub
cwtl
pop
cmp
xchg
mov
cmpsl
cli
ja
popa
lcall
inc
push
adc
cwtl
js
test
jp
push
push
fsubrs
ds
loope
sub
adc
mov
pop
roll
mov
orl
mov
and
jo
adc
loopne
js
sahf
pop
mov
jecxz
xchg
popf
push
mov
and
mov
xchg
adc
sbb
dec
xorl
pop
or
clc
rcrl
pop
hlt
pop
pop
loop
insl
mov
adc
dec
popa
sarl
in
inc
jge
fstps
dec
cmc
fadd
sbb
js
stc
or
xor
std
push
jmp
sti
js
bound
pushf
stos
mov
push
sbb
test
repnz
mov
adc
add
mov
pop
loope
cmp
call
inc
shr
mov
mov
fstpl
xor
popa
dec
scas
cmp
nop
call
inc
sbb
sarl
xor
cwtl
popl
adc
or
hlt
mov
mov
pop
sbb
leave
sub
xchg
jbe
mov
pop
mov
pop
mov
sub
jb
movsb
test
push
push
xchg
shll
push
mov
push
nop
aas
outsb
imul
test
push
add
stc
xlat
ss
jb
gs
cmp
test
xor
push
xor
pusha
xor
stc
jmp
jmp
pushf
movl
pusha
pusha
jmp
jmp
xor
cmp
xor
test
xor
pusha
movb
xor
jmp
xor
movw
xor
jmp
call
xor
pushf
xor
call
push
movl
pushf
pushf
movb
lea
jmp
movl
push
pushf
pushf
movl
push
pushf
mov
lea
jmp
xor
jmp
pushf
push
call
xor
pushf
xor
movb
xor
cmp
xorl
cmp
xor
clc
xor
stc
xor
test
pusha
pushl
popf
pushl
push
pushl
ret
xlat
xor
push
pop
cltd
cmp
xor
push
or
icebp
lahf
fwait
inc
adc
es
push
add
cs
mov
ret
dec
cltd
js
test
cmp
sbb
gs
sti
clc
lock
or
xor
and
dec
inc
jmp
mov
adc
add
repz
shlb
inc
add
je
addb
rcrl
test
dec
lds
sub
pop
add
call
mov
loop
sub
hlt
fidivrs
in
inc
cmp
mov
sub
add
xchg
push
ss
arpl
push
mov
add
dec
imul
test
jno
pop
insb
popf
adc
and
mov
ret
popa
ljmp
sbb
rclb
cmpsl
ljmp
mov
cld
movsl
push
gs
pusha
push
or
add
lods
dec
xor
fiaddl
pop
xchg
pop
rcll
sub
mov
xchg
testb
dec
inc
push
js
adc
pop
cs
xchg
cmp
nop
gs
out
repz
push
mov
movsl
test
mov
sub
xor
imul
pop
mov
xchg
and
adc
stos
loope
ds
mov
xchg
loop
loopne
cmc
fwait
jo
cltd
push
fnstcw
lea
xor
push
loope
inc
push
push
call
cwtl
sub
sub
sub
xchg
mov
adc
xchg
arpl
jmp
pminub
dec
or
and
dec
aad
mov
scas
sahf
push
mov
iret
popa
cmp
ljmp
les
ljmp
cli
or
jg
fndisi(8087
cmp
mov
es
sbb
outsb
pop
push
mov
push
stos
sbb
xchg
pop
push
add
jne
sbb
mov
push
xlat
dec
xor
cld
sbbb
push
lock
je
stos
insl
lret
adc
test
dec
adc
shrb
mov
mov
ja
sbb
push
insl
cld
mov
subb
jae
cld
das
es
mov
jg
imul
popa
pop
je
and
mov
jge
mov
sahf
push
xor
mov
insb
xchg
adc
adc
mov
and
mov
cmp
adc
sub
add
ja
testl
and
loopne
jbe
sbb
icebp
insb
inc
cmp
incl
data16
jge
sbb
sbb
aaa
imul
dec
xchg
and
js
inc
inc
pop
cmpsb
dec
mov
pop
icebp
xor
sahf
and
mov
mov
inc
dec
pop
push
insl
dec
iret
xor
jl
or
xchg
imulb
mov
cltd
push
hlt
nop
outsl
movsb
inc
sarl
std
fstps
ss
xor
aam
dec
rclb
sbb
lahf
mov
push
jns
fld
pop
std
stos
aaa
scas
jge
sbb
stos
ret
mov
sahf
dec
push
ret
push
push
in
cld
xchg
jo
call
ja
dec
enter
sbb
add
arpl
add
clc
push
ret
imul
insl
cmp
push
lahf
inc
stos
jae
loopne
jbe
push
gs
xchg
xor
jb
cmpsl
and
lcall
push
add
mov
adc
ret
mov
fcompl
arpl
out
push
rcrl
popf
out
mov
dec
loopne
lcall
xor
fbstp
xor
lcall
xchg
sahf
xchg
mov
cmc
jns
lods
jecxz
jmp
int
retw
mov
scas
push
jmp
mov
mov
in
inc
pop
arpl
jno
jae
adc
leave
popf
mov
fidivl
call
ljmp
cwtl
mov
popf
adc
xor
dec
loope
mov
jo
lcall
sbb
dec
push
xor
mov
ficoms
inc
cli
xchg
ret
orl
dec
in
push
fstpt
sarl
in
add
loope
cmp
imul
push
dec
sbb
sahf
in
sarl
rcrb
add
fs
mov
mov
fcomps
push
mov
lahf
and
jae
push
insl
inc
test
inc
mov
push
imul
mov
inc
jmp
bound
insl
and
mov
mov
pop
pop
rorb
xchg
inc
mov
mov
push
pop
mov
mov
inc
movsl
push
ljmp
xchg
push
les
xchg
pop
jle
pop
jmp
mov
movsl
lahf
and
pop
out
repz
aaa
cs
add
sub
test
into
data16
push
std
stos
aas
or
outsb
fstl
sbb
pop
mov
dec
ljmp
jmp
mov
mov
dec
fs
xor
add
mov
bound
lahf
pop
push
fistps
ror
addr16
lcall
mov
cld
mov
and
mov
jo
in
loop
mov
dec
fs
movsb
sbb
fsubrl
mov
push
add
mov
ss
mov
jmp
fwait
or
fstl
jbe
jmp
mov
enter
jae
jbe
es
aaa
dec
mov
ljmp
cs
push
inc
out
cmp
xor
pop
testb
clc
nop
pop
inc
sahf
pop
cs
dec
inc
push
mov
jl
cmc
fldenv
daa
mov
mov
iret
sub
stc
mov
add
aam
pop
lea
call
push
jnp
dec
sbb
mov
repz
xchg
daa
test
push
pop
out
pop
jbe
stos
mov
mov
mov
mull
inc
lods
fsubs
int3
sti
mov
sub
cmp
out
dec
inc
fdivrl
repnz
and
pop
lods
icebp
lahf
xor
pcmpgtd
loope
mov
js
mov
push
cmp
enter
xor
lods
lret
jmp
lock
loope
xchg
outsl
call
jmp
push
call
xor
test
xor
movw
xorl
pushf
xor
bt
xor
test
xor
bt
stc
pushl
popf
mov
pushl
pushl
ret
jmp
xor
test
jmp
call
call
jmp
xor
test
clc
xor
clc
cld
pushl
popf
mov
pushl
pushl
ret
pop
insb
in
inc
hlt
lock
xor
mov
cmc
adc
clc
cmp
stc
jb
aas
testb
popa
cmp
stos
daa
mov
daa
loopne
add
repnz
iret
out
out
test
in
imul
mov
sbb
mov
dec
push
ss
daa
mov
or
push
jg
and
cmpsb
jl
insb
decb
jo
xor
lea
jge
lods
mov
mov
mov
adc
push
mov
aad
cmp
movsl
push
out
inc
xlat
pop
scas
jmp
inc
hlt
pop
pop
pushf
subl
sbb
stc
jmp
and
sbb
lods
push
aam
js
ret
outsb
test
jge
inc
fwait
cwtl
notl
mov
mov
xchg
sub
pop
inc
into
push
testl
sbb
pop
leave
pop
frstor
in
ss
lahf
pop
outsl
fstpl
mov
xchg
jne
and
jb
jle
aad
or
xchg
mov
gs
fwait
jns
movsl
mov
dec
in
aaa
mov
inc
xorb
inc
push
mov
xchg
sub
aad
cmp
pusha
repnz
out
test
insb
push
fadd
push
push
jb
jle
jno
cmpsb
shlb
pop
push
add
jns
jbe
xor
xchg
das
in
imul
gs
xchg
mov
pop
clc
movb
pushl
popf
movw
pushl
ret
xchg
pop
repnz
add
pop
mov
and
lcall
xchg
xlat
mov
lea
cmp
dec
aas
lret
push
fcoms
test
dec
push
lods
mov
adc
mov
mov
jns
aaa
das
enter
movsl
rorl
adc
rolb
add
lock
sub
xor
rcrl
add
jno
push
bound
negl
cmp
enter
aam
mov
inc
mov
mov
inc
mov
push
dec
mov
sub
jb
addl
adc
clc
in
pusha
mov
pop
test
jle
add
mov
negl
rcrl
push
aad
mov
popf
mov
sti
mov
inc
das
sub
flds
mov
dec
outsb
and
js
insb
movsl
pop
jmp
xchg
sarl
mov
inc
lcall
mov
pop
fcoml
cltd
shll
xchg
bound
pop
or
inc
ljmp
adc
inc
cs
inc
leave
shr
adc
pop
es
mov
xchg
les
mov
popl
dec
cmpsb
in
fwait
adc
testb
cmp
cld
or
fildll
push
cld
repz
mov
xlat
jge
hlt
jmp
out
ja
sub
mov
fsubs
ret
dec
push
fs
je
pop
ljmp
in
jmp
faddl
in
js
mov
or
jmp
sbb
cmp
icebp
xor
mov
push
into
std
or
inc
pusha
lahf
sbb
sbb
push
fnstsw
sbb
dec
push
or
jle
jecxz
popa
mov
and
test
cmp
or
adc
lods
mov
mov
mov
divl
outsl
cmp
mov
cld
inc
inc
jns
loopne
mov
gs
es
push
xchg
cmpsl
mov
push
ds
push
jl
mov
std
sub
dec
inc
rol
cmp
lret
jae
sti
ljmp
outsb
mov
add
sti
inc
stos
and
pop
and
pop
mov
jmp
clc
scas
insl
add
sbb
sbb
mov
nop
mov
mov
pusha
push
cld
fcmovne
add
in
dec
sub
xor
clc
pusha
xorl
cmp
pushf
xor
clc
xor
clc
xor
cmp
cmc
xor
pusha
pushl
xor
jmp
pusha
mov
movl
movb
pushf
pusha
movb
movl
mov
lea
jmp
xor
pushf
pushf
xor
cld
cmp
pushl
popf
mov
push
pushl
ret
jle
jbe
cmp
cmp
pop
sbb
lea
mov
jp
mov
dec
mov
dec
aam
dec
addr16
pop
sub
or
lahf
jge
scas
cmc
out
jne
imul
or
mov
mov
xor
jp
inc
rcll
incb
ss
repnz
stc
jge
xchg
mov
aam
sub
xor
push
push
insl
pop
sbb
mov
cmp
xchg
iret
mov
fwait
scas
pop
pop
add
cmpsb
lods
jmp
jp
or
loope
mov
cmp
xor
jb
test
mov
or
cmp
add
sbb
ljmp
out
sbb
das
shlb
dec
mov
push
or
outsl
imul
pop
dec
add
sub
xchg
push
push
fstp
les
push
mov
arpl
pop
and
bound
nop
push
mov
sub
inc
lret
pop
test
jge
stc
sarb
aaa
shl
outsl
or
insb
subb
mov
xchg
lds
lret
xchg
stos
fldcw
jo
inc
push
push
or
outsb
mov
in
dec
mov
outsl
ficomps
sarl
ja
subb
inc
inc
pop
jo
mov
movsb
mov
xchg
dec
jnp
leave
add
and
loop
pop
and
cltd
sbb
lods
or
adc
xor
test
xor
orl
jo
fisttpl
cmp
int3
jle
test
adcb
out
outsl
mov
jne
sti
lock
addr16
sti
sbb
push
out
lea
jno
or
sbb
repz
enter
fiaddl
mul
mov
sub
fcoms
cmpsl
xchg
out
in
je
pop
xchg
js
mov
stos
not
mov
aaa
adc
or
push
sahf
cmp
fcomp
push
in
bnd
and
dec
jae
jmp
lods
jge
jge
fwait
cmp
pop
add
popa
adc
mov
inc
shrb
scas
popa
push
add
in
xchg
movsb
xor
push
adc
dec
cmp
inc
paddsw
xor
xor
outsb
cmpsl
mov
sti
sbb
add
sub
jae
jp
sbb
jecxz
xor
mov
xlat
pop
std
xchg
std
mov
xor
xor
xchg
xchg
inc
in
inc
inc
cmp
pop
es
jne
ss
pop
mov
daa
pusha
popa
jbe
xchg
xchg
lea
call
pop
jmp
push
cltd
fbstp
lcall
push
sahf
or
enter
push
jle
sub
fwait
or
ja,pt
xchg
testl
mov
push
clc
aam
push
and
daa
in
or
aad
shll
xor
mov
inc
in
sbb
push
hlt
loopne
int3
add
fdivs
xchg
sbb
in
sbb
insl
addb
ret
andb
sbb
adc
dec
add
sbb
test
aas
cmp
add
lret
push
mov
jns
sbb
popf
jge
push
xor
xor
add
add
xor
fiaddl
adc
sub
xor
sub
clc
sti
dec
addr16
jge
pop
sub
cmp
adc
gs
rorb
lods
adc
mov
sarb
jmp
in
clc
outsl
ss
scas
out
fsubrs
sbb
stos
inc
push
out
lock
xor
push
out
mov
aas
aam
push
mov
fcomp
jp
pop
stc
push
cmpsl
inc
dec
xor
sbb
mov
xor
addr16
jle
or
data16
mov
lods
cmc
adc
mov
inc
jmp
adc
fcomps
jle
and
and
push
call
fnsave
inc
jle
stc
fdivs
les
inc
add
or
ds
add
dec
pushf
test
outsb
sti
out
xchg
in
xor
in
fsubl
fbld
cli
jno
xor
mov
icebp
mov
mov
in
sub
mov
call
inc
sub
push
sarb
jnp
or
dec
fidivs
leave
out
test
into
sub
xchg
mov
movsl
jns
arpl
push
shlb
sbb
int3
push
or
add
xchg
divb
aam
adc
stos
mov
push
inc
imul
stos
in
lds
and
cli
jbe
xlat
push
cmp
adc
gs
cmp
lret
pushf
or
rcrl
mov
mov
adc
sti
movsl
ljmp
in
fs
inc
adc
mov
lds
cltd
nop
popf
clc
loopne
mov
pop
and
cs
push
pop
nop
popf
jns
or
or
mov
xchg
xor
aaa
add
cwtl
pop
dec
push
jp
lds
push
jmp
add
sub
dec
xchg
jecxz
pusha
lahf
into
int
arpl
test
mov
xchg
sbb
add
sbb
sbb
es
cmp
xor
bt
xor
clc
test
xor
clc
cmc
pushl
popf
push
pushl
ret
pop
insb
in
inc
pop
push
cmp
add
outsl
rclb
lock
push
jno
adc
adc
arpl
sbb
push
dec
pop
test
call
enter
sarl
pop
xlat
out
push
lea
push
push
add
and
shll
jge
jae
pop
or
and
aas
aam
pop
in
adc
jb
mov
xchg
cmp
jmp
xchg
add
adc
pushf
add
jmp
mov
sub
fwait
xor
mov
outsb
fsubl
mov
stos
add
push
pop
stc
mov
test
dec
push
fsubrs
sbb
cmp
jmp
push
dec
and
dec
cmp
bnd
fsubs
cmpsb
loopne
sub
ss
pop
aas
fstl
icebp
pop
and
enter
sub
pushf
adc
fdiv
bsr
mov
outsb
in
test
or
arpl
mov
dec
addr16
clc
movsl
adc
pop
push
mov
leave
adc
lds
imul
fistps
pop
mov
loop
or
xchg
sarl
xchg
push
inc
in
push
test
addr16
cli
pop
mov
mov
xchg
mov
dec
cld
out
dec
or
out
mov
movb
popf
sub
mov
sub
mov
dec
pop
aad
test
cld
imul
mov
in
loope
xor
rol
insb
mov
inc
adc
cli
icebp
pop
mov
adc
data16
or
push
add
jmp
sbb
xchg
cmpb
aaa
jecxz
mov
lahf
aaa
sbb
fmull
pop
sbb
or
pop
les
xchg
lret
aam
xchg
xchg
sub
xchg
pop
mov
clc
xor
sbb
adc
in
subl
push
and
adc
push
mov
cmp
out
jbe
adc
add
sbb
jbe
and
into
imul
xor
and
aad
mov
and
or
add
push
xor
cmp
test
xor
call
movl
pusha
pushl
jmp
pushf
popl
cmp
xorl
clc
xor
clc
clc
xor
pusha
xor
cmc
xor
pusha
xor
cmc
call
sbb
pop
push
push
and
popf
mov
add
mov
or
or
ror
push
jge
in
stos
jecxz
aam
je
dec
add
add
cwtl
mov
cmpsb
pop
jmp
in
mov
mov
pop
jno
mov
push
jmp
add
outsl
sub
sub
mov
imul
ds
insl
fs
shrl
test
fwait
xchg
mov
or
pop
fst
jb
or
jecxz
fiaddl
jae
cmp
xchg
les
inc
aam
mov
stos
and
mov
clc
decb
push
xchg
dec
ret
sbbb
lods
dec
pop
and
push
jb
scas
xchg
scas
mov
xor
push
inc
xchg
repnz
inc
and
loope
mov
js
jne
dec
add
adc
mov
inc
jecxz
add
in
mov
nop
iret
push
mov
inc
xchg
lock
mov
xor
les
sbb
and
ret
insl
lcall
dec
pop
in
clc
or
and
push
cwtl
loope
jecxz
imul
jmp
mov
fstl
scas
mov
xor
gs
and
repz
loop
inc
jmp
add
inc
fbld
shll
fadd
dec
loope
xor
cmc
push
adc
push
fwait
rcrb
test
dec
or
sbb
adc
inc
imul
xchg
add
enter
mov
jbe
and
call
add
push
fiaddl
inc
cmp
mov
int
cmpsb
ret
popa
inc
in
sub
loope
test
enter
adcb
lea
ss
pusha
clc
nop
lahf
aam
aas
dec
into
inc
aam
push
popf
test
fsts
or
jno
lahf
aas
jne
loop
lea
mov
push
outsl
xchg
test
mov
or
out
adc
sbb
es
aad
js
sub
mov
cmp
sahf
rcll
inc
sbb
inc
ret
jae
adc
push
and
insl
shll
push
insl
repz
outsl
cmpsb
sahf
ss
add
cmc
sub
lods
sti
pop
sub
inc
jbe
lcall
or
int3
mov
xlat
cmp
xchg
stos
sub
lea
xchg
mov
sti
add
fimuls
pop
lea
ret
inc
mov
push
jo
push
mov
add
dec
jmpw
cmc
scas
sbb
mov
cmp
filds
adc
jb
jae
das
or
pop
data16
ret
sbbl
fwait
repnz
jg
push
clc
scas
inc
in
js
jae
mov
orl
xor
out
mov
xchg
mov
int
pop
stos
shrl
mov
rolb
push
sub
int3
outsl
pop
xchg
adc
outsb
jge
adc
add
scas
repz
adc
decl
sbbb
cmp
push
lahf
aaa
out
clc
xchg
std
leave
idivl
cmpb
dec
cmp
inc
cld
aad
out
or
in
arpl
adc
xor
pop
sbb
std
adc
sbb
shrb
sbb
jae
xchg
call
xor
push
sbb
lea
mov
xor
iret
xor
cwtl
inc
xor
dec
xchg
xchg
stos
cli
inc
cmp
incb
pop
dec
dec
sub
xor
pop
scas
push
sub
ret
mov
mov
xchg
js
sbb
in
fisttpl
sbb
mov
pop
add
shlb
cli
jae
push
lret
inc
repnz
bound
into
sbb
push
mov
xchg
add
dec
mov
psubq
sub
nop
outsl
lahf
inc
jg
pop
stos
ds
enter
fimull
jns
int
stc
jmp
sahf
or
sub
into
fisubrl
fsubs
mov
jne
add
xor
adc
ljmp
fidivrs
dec
movsl
cs
cmp
jmp
inc
in
jg
sub
sbbl
sbb
pop
test
xor
in
rorl
mov
es
mov
dec
bound
push
adc
addr16
jno
testl
mov
mov
push
mov
sbb
cmp
stc
pop
rcll
jae
add
sbb
xchg
sbb
inc
imul
cli
xchg
sbb
mov
lods
add
pop
or
pushl
ret
and
dec
out
jnp
mov
popa
fldenv
iret
push
xchg
lret
ss
or
ret
jmp
int3
rolb
mov
xchg
jecxz
mov
jae
cli
insb
popf
outsb
iret
icebp
and
pop
mov
xchg
adc
es
pop
aaa
cmpsb
sarb
sbbl
in
and
sbb
pop
test
pushl
lods
fdivs
dec
sub
jb
mov
mov
pop
insb
cli
pop
or
rol
adc
fdivrs
inc
rcll
loopne
mov
push
scas
leave
or
mov
cmpsl
sub
insb
push
fistpll
mov
push
aas
xlat
mov
mov
movsb
inc
jge
js
push
sahf
lods
xor
insb
inc
push
pop
jo
int3
test
popf
insb
ss
jne
fdiv
mov
int
jnp
mov
inc
ds
inc
fdivs
push
adc
add
in
cmp
inc
pushf
add
push
inc
das
movl
dec
daa
nop
bswap
sub
mov
push
sub
xchg
mov
fidivl
jo
jnp
adc
enter
dec
ljmp
loopne
inc
sbb
rol
jg
sub
bound
add
and
add
fmulp
sbb
pop
sbb
mov
push
inc
jecxz
xlat
arpl
adc
imul
push
adc
add
inc
xor
out
std
in
or
mov
dec
or
push
pop
into
dec
icebp
call
cmp
lods
je
or
inc
popl
mov
inc
data16
pop
inc
insb
mov
fisubrl
lds
adc
pop
jo
test
xor
push
mov
add
sub
es
mov
and
xor
adcb
rcrb
xchg
lods
loope
mov
in
out
int
cwtl
push
in
mov
test
adc
je
mov
outsb
repz
sarb
adcl
ljmp
xchg
fiaddl
jecxz
adc
mov
sbb
ret
xor
xchg
xchg
daa
xchg
ss
lods
and
add
adc
call
cmpb
mov
cmpsl
inc
push
jnp
clc
mov
pop
gs
or
cmpsl
inc
lahf
cmc
in
or
sbb
xchg
sub
fdivl
xchg
repz
cli
mov
or
push
pusha
repnz
repnz
jmp
cli
jb
pushf
push
xlat
ds
aam
clc
pop
fwait
ljmp
je
loope
test
add
sbb
shlb
shlb
sub
cs
out
or
xor
dec
and
fbstp
lea
cmpsb
add
or
push
cltd
mov
outsb
xchg
rcll
jno
fs
test
jns
jae
xchg
mov
enter
cltd
pop
sub
or
add
push
cmp
add
iret
adc
fnstcw
adc
mov
pushf
repnz
dec
sbb
call
dec
icebp
mov
lods
and
sub
fildll
sub
lret
cmp
addb
xor
mov
mov
test
rorb
push
dec
cli
or
mov
cmp
leave
mov
mov
push
into
imulb
icebp
push
scas
lds
test
jl
adc
pop
repz
lock
mov
iret
xchg
sub
dec
pop
xchg
push
fisubl
mov
test
adc
shlb
sbb
loopne
sub
add
jae
lcall
dec
push
jo
in
jmp
ret
iret
mov
pop
mov
sbb
fs
pop
jbe
popa
pop
dec
push
out
mov
or
jbe
test
outsb
push
stos
subl
sub
ss
outsb
pop
stos
and
and
sbb
push
and
mov
xchg
das
add
stc
imul
daa
or
leave
mov
pop
cmp
mov
push
lret
inc
addr16
inc
cmc
adc
cmp
popf
cs
shrl
cmc
in
in
repz
add
mov
mov
out
add
adc
insb
and
xchg
xor
dec
add
test
add
adc
jmp
xchg
sub
pop
mov
call
popa
shll
outsl
push
fists
mov
xor
inc
inc
mov
stos
int3
punpcklbw
sub
push
testb
inc
dec
pop
and
pop
in
xlat
jecxz
pop
addr16
ret
loope
aas
jle
mov
add
or
xor
mov
divb
jns
call
jmp
mov
pushf
popl
call
pushl
popf
pushf
pushl
ret
pusha
pushf
popl
test
xorl
cmc
xor
clc
pushf
xor
bt
cmp
xor
test
xor
stc
xor
clc
xor
pusha
bt
xor
cld
call
enter
inc
sub
cmp
mov
cmc
adc
mov
popf
push
aaa
push
push
xchg
inc
add
loop
enter
stos
mov
mov
mov
hlt
insl
sbb
pop
add
add
jae
ret
sub
xchg
sbb
sub
cmp
ret
rorb
test
pop
out
xchg
out
movsl
orb
jne
ret
sbb
adc
cmpsl
mov
out
aas
gs
pop
xchg
inc
in
in
mov
pusha
xchg
sub
cmpsl
shlb
pop
push
inc
jno
jmp
jno
punpckhbw
push
cmp
gs
pop
andb
xchg
fld1
jl
decb
int3
mov
sbb
mov
adc
cwtl
les
fldl
push
ficoms
inc
push
orl
dec
inc
mov
cs
jp
fidivrs
fcmove
aad
dec
push
lods
enter
sarb
or
push
inc
sub
cmp
inc
es
add
xor
dec
loope
xchg
cmpsb
and
jle
add
jmp
push
adc
divb
call
cmp
dec
push
ficomps
outsl
ja
mov
mov
or
rol
xchg
push
adc
push
mov
add
mov
arpl
lret
mov
les
insl
add
push
adc
mov
and
je
std
and
add
lock
push
adc
dec
or
and
cmp
loope
cmp
adc
jb,pn
sub
fidivl
push
push
packsswb
xchg
lea
fmull
jmp
inc
or
push
add
sub
aas
rcrb
scas
int3
test
push
dec
sbb
sbb
fadds
or
call
jl
ret
xchg
adc
jmp
adcb
nop
inc
pop
xlat
jbe
xor
sub
popf
or
and
push
mov
sbb
mov
pushf
jg
stos
loopne
hlt
cs
sti
xor
and
mov
pusha
aaa
dec
pop
push
xor
dec
int3
push
jg
jmp
push
test
ficoml
cmp
pop
xchg
insl
test
aaa
and
mov
add
rorb
bound
mov
pop
mov
pop
popf
push
lret
inc
pusha
repz
push
push
add
subl
js
repnz
fistl
aas
jnp,pt
aad
sarl
xor
aam
out
stos
addr16
lock
jle
negb
test
pop
xchg
cmp
inc
adc
or
movsb
divl
mov
jmp
xor
bound
je
lods
xorb
sub
jne
lahf
mov
mov
lock
xchg
shl
inc
test
in
inc
adc
pop
nop
cld
mov
lea
adc
mov
inc
in
gs
pop
je
in
jp
jbe
es
inc
jno
mov
lahf
mov
or
cmc
mov
lds
lea
insl
cld
popf
repnz
xchg
rcrb
push
and
pop
jo
cltd
jg
push
icebp
std
cmp
sub
fstps
fmuls
dec
sahf
ret
int
adc
and
pop
mov
sarb
repz
daa
mov
test
mov
mov
mov
aaa
mov
dec
sbb
pop
fstl
adc
sahf
xchg
dec
scas
out
add
out
push
icebp
imul
xchg
es
fildll
push
out
sahf
sbb
mov
mov
ficoml
shr
sbb
inc
jle
popa
in
out
mov
xchg
lret
popf
roll
mov
aas
mov
insb
pop
xor
jbe
loop
jbe
ret
cltd
adc
pop
test
xor
sti
mov
das
int
dec
cmp
das
sarl
sbb
scas
rclb
sti
mov
bound
mov
sbb
ret
aaa
and
sti
add
insl
fimuls
push
into
shll
xchg
test
fdivrs
out
fldt
mov
lock
push
pusha
stos
aaa
frstor
mov
lds
sarl
jo
fs
js
scas
mov
in
cmp
scas
mov
ja
mov
xor
jno
inc
ja
cli
pushf
popf
inc
shlb
lock
popf
lods
je
or
sbbb
cwtl
outsb
mov
jecxz
data16
iret
pusha
shlb
loope
mov
and
and
xor
adc
and
cmpsb
add
lret
sub
bnd
test
cmp
out
lcall
das
lock
fisubrs
cld
inc
in
outsb
lods
aaa
hlt
es
and
mov
mov
pop
andb
mov
jae
mov
cli
xchg
int
jnp
and
ljmp
mov
ja
inc
jne
out
jl
inc
cli
sbb
fcomps
push
outsl
sahf
sub
jno
xchg
add
bound
jo
cmpsl
push
jp
sahf
push
add
ret
mov
pop
loop
ficoml
xchg
das
jmp
pop
jne
popf
outsl
lods
ret
add
aad
jnp
es
pop
dec
jmp
adc
inc
inc
jne
pop
jns
gs
sbb
test
push
jns
rclb
int3
xchg
pop
test
int3
pop
xlat
dec
out
cli
inc
dec
jb
lds
popf
jae
mov
push
call
jb
aam
inc
int3
pop
dec
xor
jge
cmc
je
cwtl
daa
pushf
cmp
sbb
push
pop
jmp
push
xchg
sub
fs
out
sub
mov
and
cmpsb
and
jbe
push
in
nop
push
loop
mov
data16
add
jae
sahf
repz
xchg
fcoms
inc
xor
sub
inc
ja
xchg
push
movsl
repz
and
dec
ljmp
loop
pop
rorl
pusha
xchg
scas
es
mov
insb
fisubl
idivl
mov
dec
outsb
mov
jmp
mov
adc
mov
and
xchg
inc
push
mov
sarl
jno
mov
inc
aam
in
jp
inc
fnstenv
and
lret
aas
push
push
push
mov
sbb
test
fistps
ret
jmp
outsl
xchg
daa
lahf
pop
push
xor
sbb
sbbb
es
inc
gs
push
push
and
dec
push
out
push
int
mov
cmpsl
jnp
mov
movsb
add
pop
push
repz
jg
ficoms
int3
or
pop
add
std
adc
or
roll
xorb
pushf
pusha
sbb
mov
sbbl
cli
icebp
mov
xchg
mov
pop
fdivrs
call
sarl
clc
shlb
jae
cmp
rcrb
loop
aad
xor
out
xorl
jg
cmpb
out
fmul
lea
xchg
rcll
adc
push
dec
shrb
rcrb
push
jecxz
fildll
xlat
dec
int3
and
mov
add
sbb
jns
pop
shll
leave
inc
cmp
push
cli
in
arpl
dec
out
mov
rorb
mov
pop
sub
into
stc
enter
jg
leave
pop
jp
xlat
dec
sbb
decl
mov
rorb
ss
jno
lods
mov
xchg
ja
dec
fdiv
rorl
pop
dec
mov
push
daa
testb
test
mov
pushf
cmp
scas
dec
pop
dec
inc
dec
dec
jae
sahf
push
aad
cmp
dec
mov
mov
sub
aas
popf
imul
ficomps
add
imul
sarl
imul
dec
ffree
in
jp
lea
inc
sub
lcall
sub
into
pop
imul
mov
xor
or
ljmp
cltd
pop
pop
shr
jp
jne
mov
cmc
stos
shrb
mov
pop
mov
pop
sbb
pop
cpuid
nop
or
mov
mov
fadds
mov
cmpxchg8b
imul
aaa
jb
mov
dec
dec
pop
dec
sub
mov
out
adc
dec
cmp
adc
pop
fdivl
xchg
jae
cltd
fst
push
iret
sub
nop
cwtl
cmpsl
icebp
mov
shrb
movsl
mov
shll
orl
xchg
cmp
out
enter
dec
xchg
orb
push
std
in
fdivs
cmp
dec
insl
inc
test
add
pop
je
sub
push
or
push
or
add
inc
dec
js
jl
loope
leave
inc
mov
xchg
shrb
lret
loop
nop
aam
push
stos
mov
push
ret
mov
cmp
and
testb
jmp
lock
and
mov
cmp
and
ficoml
push
movl
jmp
pusha
xorl
pushf
xor
push
cmp
xor
call
pusha
movl
pusha
movl
pushl
mov
mov
lea
jmp
pushl
popf
push
pusha
pushl
ret
jmp
xor
pusha
xor
pushf
xorl
stc
pushl
popf
pushf
movb
pushl
ret
pusha
xorl
test
cmc
xor
push
xor
jmp
mov
iret
dec
rclb
push
jne
ja
pop
cltd
cmp
fidivrl
fcoml
addr16
and
ret
cmp
cmpsb
jnp
adc
push
out
test
test
fcoms
bound
cld
push
xchg
sar
rcr
mov
aaa
call
jge
cli
xchg
stc
nop
cwtl
stos
pop
push
outsb
lods
rclb
rorl
pop
xor
int
or
loopne
sub
dec
clc
cmpb
or
push
outsb
mov
outsl
es
outsl
dec
xor
push
ffreep
js
add
jmp
les
aas
or
test
sbb
movsb
adc
mov
mov
mov
and
addr16
dec
xor
xor
subb
int3
xor
push
jecxz
imull
out
inc
fsubs
cmp
jnp
lods
mov
pop
push
outsl
sbb
enter
dec
mov
xor
and
xchg
das
sub
and
in
and
ret
loope
repnz
xchg
push
mov
cmp
mov
stos
cmp
and
and
cltd
loope
xor
pop
dec
in
shll
repz
xchg
mov
pop
or
jecxz
lcall
or
out
arpl
mov
push
lods
movsb
ret
fidivl
jmp
int3
jp
cmp
sub
mov
ror
ja
xchg
dec
inc
pop
or
loop
inc
popfw
nop
sbb
addr16
and
xchg
push
xor
in
fsubp
movsb
xchg
jmp
mov
jo
sbb
fiaddl
or
pop
cs
and
sbb
push
add
push
aaa
inc
int
lods
leave
mov
test
pop
out
push
push
lods
dec
das
stos
push
mov
add
jno
popa
nop
push
mov
add
xorb
mov
mov
lock
mov
sub
cmp
stos
lds
lock
jae
jmp
adc
jbe
mov
jo
lods
lcall
ds
sub
pop
mov
add
sahf
pushf
lret
add
dec
sub
mov
mov
inc
xor
push
push
cmc
divb
mov
pusha
pop
mov
pop
or
xor
cmp
xor
push
lcall
imul
jl
add
push
aad
dec
and
add
test
aad
jmp
aaa
mov
pusha
int
and
fstpt
lret
mov
bound
leave
cs
cmp
mov
and
jne
inc
psadbw
dec
loope
sti
cmp
test
rorl
sub
and
sub
xlat
push
sub
pop
andb
mov
mov
dec
sarb
adc
iret
add
add
jo
fistpll
pop
data16
jcxz
loop
into
add
cmp
xchg
int3
in
call
mov
or
lds
je
jae
jb
or
inc
mov
cmpb
sbb
mov
enterw
test
and
inc
cmp
cld
jae
ds
cmc
lea
rcr
ret
dec
adc
push
or
std
mov
std
lock
ds
cli
out
mov
cltd
ja
movsb
pop
cltd
out
lret
fdivl
xchg
mov
jg
cmp
adc
push
into
lahf
jge
mov
gs
pop
sub
pushf
adc
loopne
sbbb
dec
insl
sub
lret
fdivl
inc
xchg
mov
push
stos
push
pushf
cmp
push
aaa
clc
sbb
movsl
dec
loopne
dec
ret
inc
stc
pop
xchg
shlb
lods
push
in
add
mov
rcrb
daa
and
xor
fdivs
leave
or
in
push
rorl
adc
fstps
repnz
xchg
xchg
fsts
jae
lahf
hlt
mov
adc
sbb
pop
lret
xchg
pushf
xlat
xor
push
or
pop
mov
iret
aad
insb
mov
test
inc
mov
mov
cld
mov
int
xor
lds
mov
loope
add
cmp
mov
pushf
mov
pushf
popl
cmp
xor
pusha
xor
cmc
test
xor
stc
xor
bt
xor
call
mov
movl
push
pushf
lea
jmp
jmp
xor
test
pushl
popf
movw
mov
pushl
ret
movl
pushf
pushf
pusha
mov
movl
pusha
lea
jmp
pushf
pushf
movl
call
ret
cltd
sbb
std
movsb
sbb
test
mov
mov
or
enter
and
dec
orl
inc
popa
imul
in
and
stc
loopne
pop
out
pop
adc
mov
push
sub
cmpsl
in
in
testl
jbe
cmc
xchg
xchg
push
jbe,pt
inc
or
outsb
dec
jb
sub
pushf
jno
std
push
mov
cld
in
jle
sbbl
decb
jb
sbbl
sub
mov
add
or
pusha
push
pop
dec
subb
xchg
adc
cmpsb
push
xor
aaa
mov
xchg
cs
sbb
jo
in
sbb
scas
sarl
aad
mov
or
dec
sbb
cmp
dec
out
aas
les
andl
mov
cmpsl
xchg
test
push
setp
mov
dec
sahf
pop
fstl
jbe
into
xor
inc
cmp
inc
inc
ljmp
cmp
jae
add
adc
es
mov
sbb
or
sbb
dec
sub
mov
jmp
lds
pusha
pop
push
jge
fnop
add
cmp
fnsave
pushf
pusha
xor
cmc
pushf
xor
jmp
movl
pusha
movb
jmp
pusha
movl
call
lea
je
pushf
movl
jmp
pushf
movl
push
push
pusha
pushf
lea
jmp
call
pushl
movl
pushl
movl
movb
push
lea
jmp
xor
jmp
xor
pushf
pushf
xor
cmc
cmc
xor
bt
xor
clc
xor
test
xor
cmc
pushl
popf
pushf
pushf
pushl
ret
push
jmp
pusha
pushl
movl
pusha
movl
pushf
pushf
pushf
movb
lea
jmp
pushl
popf
pushf
pushl
ret
call
sub
dec
inc
ret
mov
xchg
xchg
adc
adc
cmc
xchg
push
outsl
outsb
lods
sbb
leave
loopne
cmp
inc
aas
pusha
pop
sarl
sbb
hlt
mov
sbb
push
call
or
pop
aam
stc
jo
jns
stos
and
rorl
rcrb
dec
pop
pop
stc
mov
inc
enter
fmul
stc
ljmp
lock
loop
aaa
xchg
adc
mov
add
ja
lods
inc
movsl
fwait
jmp
cmp
pop
int
aam
push
dec
xchg
sbb
ficomps
iret
test
call
dec
adc
ss
gs
push
lret
inc
cli
popa
jbe
fistpl
dec
scas
jl
sbb
lahf
pop
xor
je
aas
cmp
and
cmpsl
mov
jb
call
xor
out
jnp
xchg
or
ljmp
pushf
xchg
mov
jmp
pushf
ja
push
add
add
clc
xorb
in
outsl
insl
xlat
mov
outsl
pop
pop
test
inc
test
mov
push
mov
sahf
test
xor
cmp
cwtl
stos
ucomiss
adc
pop
fadd
pop
sub
inc
jg
dec
push
push
in
mov
in
cmc
cltd
jne
xor
rcll
and
xchg
enter
xchg
mov
push
jp
bound
push
jmp
mov
popf
mov
iret
rcr
pop
fldenv
pop
fmuls
push
iret
cld
ret
and
pop
xor
dec
mov
sbbl
mov
cmp
push
dec
cltd
sbb
mov
cmc
mov
imul
xor
xchg
fcmove
fcompl
fucomi
addr16
mov
cmp
stc
sub
xchg
shlb
ficoms
das
sub
fs
mov
data16
sub
sub
push
mov
jnp
popf
pop
std
mov
push
sarb
popf
xchg
inc
ret
fcmovnb
imul
enter
sbbb
fwait
adc
or
adc
xchg
xchg
out
pushf
cwtl
inc
mov
inc
jp
sbb
cmp
or
inc
or
movsl
imul
jmp
leave
hlt
pop
ret
jns
lahf
jbe
cmpsb
jge
xorl
push
jge
xchg
dec
xchg
dec
add
popa
outsl
bound
cmp
or
jno
insl
jmp
loop
mov
jbe
cli
test
cmp
outsl
inc
push
mov
xor
push
adc
jg
test
das
jge
xor
loope
jmp
fcomps
test
pop
in
pusha
and
ficomps
jnp
lret
fwait
aad
inc
or
add
inc
cmp
stos
ds
in
shll
xchg
loope
xlat
imul
push
scas
out
gs
mov
jbe
mov
jnp
cmp
cli
inc
fcmovbe
jg
sub
and
and
pusha
mov
lea
dec
test
arpl
fcoml
mov
gs
xchg
sub
out
cli
push
pop
push
lret
sub
test
xchg
jmp
and
jmp
mov
rcrb
xchg
and
add
outsb
call
ja
iret
cmp
push
pushl
xchg
sub
out
hlt
inc
dec
xchg
addr16
sbb
or
push
and
movsl
jae
cmp
add
cmp
mov
pop
push
mov
insl
in
mov
push
out
push
aaa
in
dec
cmc
dec
sub
push
push
inc
xchg
xchg
sub
mov
push
xlat
int
mov
xor
mov
cmpb
cmp
add
mov
xor
call
in
dec
sub
out
scas
out
or
mov
bound
das
pop
pop
xchg
mov
mov
outsb
pushf
sub
je
and
or
sub
xchg
pop
gs
mov
loopne
imul
sub
mov
dec
lds
leave
testl
in
mov
or
cltd
movaps
jge
loop
into
pop
fstl
pusha
fildl
dec
sub
call
test
cmp
xor
jns
pop
loop
or
cmp
xchg
mov
cmp
fcom
cmp
or
imulb
jle
push
jmp
ja
rorl
push
rcrb
jge
sbb
fwait
iret
sub
mov
lcall
mov
and
iret
push
stos
mov
arpl
ss
outsl
ja
repz
or
sahf
out
repnz
xchg
push
xchg
cli
repnz
out
negb
cmpb
lods
ret
xchg
cmp
jmp
int3
daa
je,pt
outsl
sub
jge
mov
js
imul
push
cltd
or
movhps
decl
jle
sub
adc
and
sti
fstpt
enter
sbb
xor
cmp
mov
ljmp
jbe
push
movl
fmuls
cmpb
mov
lds
pusha
jl
push
or
in
pop
xchg
jo
adc
es
arpl
sbbb
dec
outsl
popf
cltd
push
add
dec
xor
xchg
mov
push
mov
je
mov
xchg
xor
pushf
xchg
add
adc
lea
xor
push
and
xor
fistl
sbb
lahf
push
sub
dec
mov
cwtl
fdivp
ret
add
shlb
ss
sbb
mov
cmp
or
inc
and
loopne
xor
sbb
mov
sti
and
sbb
sub
fimull
add
imul
das
sub
fmul
pusha
scas
fimull
jge
adc
jmp
pop
sbb
cmp
in
mov
adc
enter
aad
push
lods
cmp
add
xor
clc
lods
lods
sbb
clc
mov
test
repz
cmp
das
rol
call
sub
pop
cmp
xchg
cwtl
mov
xchg
xlat
xor
xchg
or
popf
adc
mov
cld
push
jo
data16
adc
std
mov
push
or
lods
mov
mov
ret
rclb
adc
mov
xchg
or
cs
sub
jmp
pop
out
cmp
repz
ss
pop
imull
pushf
insb
or
lret
lret
fimull
test
in
mov
mov
push
add
mov
imul
push
inc
lock
int
push
dec
in
or
sub
mov
jl
mov
and
jbe
ds
insl
repnz
push
pop
out
gs
xchg
test
jl
push
mov
cmp
lcall
mov
ds
jmp
sub
sbb
ret
jnp
sbb
mov
mov
mov
push
adc
adc
or
mov
add
xor
hlt
jmp
into
lods
lods
test
adc
clc
push
push
dec
leave
and
cmc
push
out
inc
cmp
ja
movsb
stc
iret
cwtl
sub
icebp
aad
sti
mov
aaa
sbb
pop
fdivl
das
in
int3
add
sub
test
jg
push
push
lock
jbe
xor
sub
and
mov
add
xor
jno
int
ds
mov
and
ror
jns
fcompl
mov
andl
xchg
mov
fsubrl
pusha
cltd
xor
ja
int
jns
xor
iret
cmp
lret
je
push
lea
lock
pop
rol
xchg
pop
sbb
push
fdivrl
xchg
lret
arpl
add
test
adc
fdivs
or
mov
lods
leave
mov
inc
movsb
mov
jbe
dec
inc
sahf
lea
mov
mov
gs
sbbl
flds
xchg
cs
jae
lds
adc
cmpl
cmpsb
divl
mov
aaa
das
enter
adc
sti
mul
lods
dec
pop
fnsave
mov
push
test
lcall
pop
out
push
xor
pop
bound
mov
xchg
inc
jo
shlb
mov
xor
mov
jo
pop
test
lods
lds
mov
dec
dec
jecxz
mov
dec
xor
xchg
jge
adc
mov
push
mov
fdivrl
or
mov
popf
inc
stos
jb
orb
adc
inc
loop
scas
stos
ret
mov
test
push
movl
int
int
xor
xchg
xchg
sub
mov
repz
arpl
pop
out
adc
js
xor
xchg
jo
dec
xlat
add
pop
data16
push
out
lea
leave
icebp
bnd
fcompl
arpl
shr
pusha
das
pop
stos
inc
xchg
cmp
dec
fimull
pop
xchg
mov
push
or
mov
mov
mov
jns
sti
imul
cmc
push
jl
loope
xchg
loop
in
and
cld
fdivr
pushf
pusha
jns
mov
int
rcrl
adc
jl
test
and
and
adc
dec
pop
xchg
jns
imul
adc
gs
or
mov
push
jns
xchg
shr
mov
dec
mov
sbb
shlb
jb
imul
pop
push
add
push
pop
and
or
pminsw
xor
push
aad
and
xchg
mov
add
popf
sub
pop
shll
inc
ds
scas
ja
stos
cltd
mov
mov
bnd
or
test
jnp
jl
loop
dec
arpl
fsts
lods
lret
cmp
sti
sbbl
lahf
mov
cmc
xchg
stos
mov
orb
pop
outsl
cmpsb
sahf
aaa
lds
sbb
test
mov
add
cmpsl
test
out
add
xchg
shlb
mov
mov
aam
sub
mov
mov
cmp
test
cmp
stc
cs
add
mov
jbe
inc
adc
mov
jbe
sbb
call
lahf
fsubrs
ss
xchg
shll
cmc
adc
pop
lret
cmp
inc
ja
test
xchg
or
lods
push
lret
jno
cmc
daa
pop
sbb
dec
cmp
dec
cltd
xor
inc
pop
bsf
cmp
push
mov
aaa
cs
lock
sub
push
sarl
gs
imul
push
sub
call
fstl
into
addr16
jg
lcall
mov
cmc
and
sub
in
aam
ret
int
repz
push
xchg
xchg
stos
and
sti
cmp
dec
in
imul
push
and
or
sub
fldt
fisubrs
call
adc
in
cmpsl
popf
stos
shr
or
cld
cs
in
sub
xchg
mov
xchg
xchg
jno
mov
push
aam
mov
xor
xor
cwtl
pop
movl
les
mov
push
stc
adc
aas
orb
hlt
push
fwait
pusha
in
pop
sbb
pop
cwtl
sbb
fisubl
in
and
inc
cltd
xchg
stos
sub
mov
lcall
pushf
clc
orl
addb
scas
shl
loop
ljmp
shrb
cltd
roll
lds
lcall
and
filds
xor
mov
mov
dec
cmp
pop
cltd
rcr
ja
add
aam
or
fs
sti
fwait
je
stc
xor
mov
push
xor
pop
js
push
mov
lods
out
sub
fs
sarl
test
inc
cmp
and
mov
cmc
into
jl
popf
fwait
cmp
cld
xor
ret
fldpi
stc
cmp
mov
push
fs
xor
shl
adc
or
push
rorb
inc
shlb
test
cmpsl
pop
pop
cmp
xor
movsb
sbb
dec
mov
pop
mov
and
daa
push
and
jne
test
and
in
mov
ss
pop
mov
addr16
call
frstor
mov
jbe
and
adc
enter
mov
xlat
test
test
cmpsb
dec
dec
pusha
fcoms
dec
movsl
xlat
xchg
add
fnstenv
add
mov
mov
push
jmp
int
orb
push
std
hlt
mov
and
sbb
mov
lock
mov
mov
pop
lahf
add
pandn
jns
fninit
jns
or
xchg
mov
test
pop
and
aaa
sarb
cmpsl
adc
sub
xor
sahf
mov
mov
inc
push
dec
testl
fs
jmp
xchg
cmp
ret
ja
pusha
out
ljmp
and
xor
loopne
ds
adc
mov
sbbl
mov
lds
lcall
xchg
mov
pop
enter
rcll
mov
pop
dec
add
aam
test
jl
adc
nop
cmpsb
stc
pop
ljmp
xchg
stos
and
mov
ss
pop
lods
or
rep
jmp
sub
or
mov
dec
inc
xor
dec
adc
lea
inc
push
pushf
scas
cmpsb
les
adcb
jno
or
push
xor
jne
jo
xor
lock
rcll
aas
in
jns
xchg
repz
cmp
clc
add
pop
mov
or
dec
inc
pop
pop
mov
mov
outsb
push
pop
add
dec
mov
jmp
sub
sub
gs
inc
fldt
hlt
cs
jmp
sti
mov
popf
push
cmp
adc
icebp
mov
scas
bound
iret
ds
sub
dec
iret
inc
rorl
in
add
sbb
jp
lret
shl
sarl
adc
jl
adc
lahf
sbb
fiaddl
and
jge
gs
lock
inc
jne
std
outsb
adc
out
push
dec
insb
mov
lods
and
inc
jge
or
jnp
call
cmp
loopne
inc
in
jnp
xor
mov
fbstp
out
fs
push
push
in
mov
pop
xchg
lods
pop
into
rcr
insl
sub
pop
pop
pop
xchg
lret
stos
or
faddp
cmp
cmpsl
xchg
dec
inc
jae
insl
add
sbb
and
cmpl
xor
fstpt
cmp
sub
js
inc
mov
in
jbe
movl
jae
cmc
jmp
fsubrl
cmpsl
loopne
fcoml
mov
outsl
fdivrs
inc
mov
sbb
adc
mov
mov
lahf
sbb
sbb
repnz
cmp
hlt
out
mov
xor
push
out
out
ds
adc
xorb
les
xchg
mov
sub
inc
jae
xorl
iret
decb
popf
and
pop
das
mov
fcomps
jo
sbb
int3
gs
cli
sub
dec
xchg
sub
xor
ja
push
mov
stos
cmp
mov
leave
ret
lds
cs
rolb
xchg
and
push
sbb
mov
jbe
outsb
mov
xchg
in
mov
cmp
lods
incl
divl
xchg
xchg
sub
stc
ss
xchg
and
loop
xchg
push
dec
jb
sub
sar
into
and
dec
mull
cli
sub
sbb
push
imul
push
ds
out
jae
mov
lods
mov
xor
icebp
rcrb
mov
pop
mov
out
pop
negb
out
fcoml
and
lahf
xchg
mov
clc
mov
aas
mov
sbbl
mov
xchg
xchg
cmpsl
fsubr
clc
sbb
sbb
mov
xchg
in
int3
push
fcoms
inc
push
jmp
iret
in
jne
rorl
adc
fwait
aas
jo
jle
sbb
popf
pop
in
pusha
nop
aam
sbbl
ret
mov
pop
cmp
mov
dec
xchg
shll
pop
xor
dec
jb
jae
adc
into
outsl
inc
mov
jne
lret
xor
cmp
and
iret
inc
adc
mov
xchg
pop
sbb
subb
dec
rcrb
lods
es
les
aaa
cli
push
xlat
adc
xlat
push
mov
lock
data16
stos
test
jae
mov
lods
xchg
pop
push
mov
lea
popf
mov
jl
ret
lods
xor
nop
repz
and
mov
adc
pusha
xchg
cmp
push
lahf
inc
incb
loope,pt
shll
cmp
ret
test
fdivs
push
lds
mov
repnz
inc
repnz
fldz
outsl
cld
repz
xchg
nop
test
scas
sub
inc
dec
jb
push
jno
xchg
shll
std
adc
out
mov
mov
popf
sub
jne
xor
cltd
popa
dec
fnsave
jle
jo
int3
lods
sub
stos
aas
sahf
inc
lahf
out
ljmp
and
xor
dec
cmovl
lock
xor
dec
les
mov
sbbb
arpl
sarl
push
test
addr16
lods
jne
cmp
push
mov
jo
sub
mov
mov
sbb
leave
xchg
mov
mov
gs
pop
shll
and
fcoml
outsl
pusha
pushf
lea
jmp
jmp
pushf
pushf
pushf
popl
jmp
pusha
pushf
popl
cmp
xor
movb
xor
bt
xor
movb
movl
xor
clc
xor
cmp
xorl
cmc
stc
xor
mov
clc
xor
push
pushl
popf
push
mov
pushl
ret
pushl
popf
movb
push
pushl
ret
pushl
popf
pushf
pushl
ret
push
lea
jb
pushf
pushf
movl
call
call
jmp
movb
call
xor
bt
movb
xor
bt
xor
jmp
call
pushf
xor
clc
xor
test
xor
bt
pushl
popf
movb
pushl
ret
call
push
movl
call
pop
test
sahf
frstor
repz
xchg
inc
and
xchg
pop
int3
sbb
mov
xchg
and
pop
les
xchg
xlat
adc
jp
mov
cmc
adc
pop
outsl
sti
mov
ret
test
push
inc
dec
fimull
sti
cmp
movsl
mov
test
mov
mov
add
test
mov
cmpsl
ja
repnz
fildl
mov
add
sar
int
cli
cmp
mov
cs
mov
push
iret
in
idivl
loop
popa
add
test
out
bound
xchg
cli
jnp
fnstcw
adcb
cltd
xor
add
xchg
out
push
sbb
mov
sub
inc
and
icebp
lds
imul
adc
iret
dec
cwtl
std
xchg
lea
in
mov
sbbl
shl
mov
jmp
pop
in
mov
repnz
lds
mov
mov
repz
ret
gs
mov
cmp
lcall
roll
sarl
dec
test
fnsave
in
cltd
out
xchg
push
pusha
fcompl
or
mov
mov
out
add
mov
test
loop
daa
frstor
xchg
sahf
mov
outsb
pusha
outsl
cmp
inc
movsl
ret
stos
xor
mov
mov
lret
lret
loop
add
les
xor
sub
fimull
gs
dec
shrl
jmp
adc
dec
cli
mov
jns
and
add
or
add
fcom
push
xor
xor
outsb
int3
lcall
push
pushf
popl
jmp
push
movl
pushf
movl
pushf
pushf
lea
jmp
bt
xor
call
call
pushf
movb
movl
pusha
lea
jmp
pushf
jmp
pushf
bt
xor
jmp
xor
pushf
pushf
xor
stc
xor
test
pusha
xor
call
pusha
xor
movb
clc
xor
pushl
xor
call
pushf
push
xor
call
call
jmp
jmp
call
jmp
pushl
movl
push
movb
pushf
lea
jmp
nop
outsb
outsb
xchg
mov
fstps
xchg
adc
std
mov
push
das
or
mov
sahf
xchg
rolb
icebp
shlb
loopne
pusha
mov
shlb
mov
pop
pop
lods
es
sub
lods
jl
jbe
in
add
xchg
inc
clc
push
orl
cmc
scas
cmpsl
jbe
mov
fcmovne
out
test
cmp
int3
fs
dec
es
cltd
test
xchg
jno
bound
popf
mov
lret
xchg
aad
cs
push
dec
sub
pop
sbb
sub
mov
out
push
mov
fstps
sub
int3
inc
add
sub
pop
cmp
imulb
je
pop
lcall
test
adc
mov
add
dec
and
jnp
or
adc
push
stc
dec
pop
push
mov
mov
faddp
test
jg
fisubrs
dec
fcmovnb
imul
std
repz
int3
in
mov
in
cmp
pop
mov
test
adc
movsb
call
push
inc
jecxz
mov
add
push
dec
sub
ljmp
into
and
ds
mov
mov
push
movsb
insl
add
sub
or
test
adc
popa
pop
push
adc
xlat
ss
mov
notb
gs
sahf
mov
scas
sbb
std
or
adc
push
repnz
ds
fdivl
dec
pop
in
mov
jno
dec
shll
movsl
psrad
and
hlt
xchg
aaa
push
sbb
scas
sbb
jns
std
jns
and
cmp
cs
mov
in
mov
xchg
fistps
push
into
es
inc
or
bound
push
rcrl
cs
arpl
or
dec
popf
jl
jl
in
push
cmp
lds
cwtl
add
jmp
in
mov
mov
xchg
xchg
adc
cmp
jmp
push
sub
mov
sub
pusha
cmp
sti
fstps
fimull
jge
rolb
xchg
adc
mov
push
xchg
mov
xor
arpl
lcall
fwait
jge
in
test
mov
in
popl
and
sbb
test
sub
adc
loopne
cmpl
cmp
jmp
int3
or
or
xor
jne
popa
stc
pusha
add
push
mov
ja
and
sahf
mov
xor
and
mov
dec
lcall
xchg
xchg
shrl
dec
jecxz
cmpl
adcl
sbb
aas
lods
jno
dec
add
mov
and
repnz
dec
out
loope
mov
jmp
rorb
daa
xor
and
lcall
rcrl
sbb
jne
movsb
cmpsb
jmp
loope
or
test
jle
bound
adc
inc
xor
in
xor
inc
leave
sti
sbb
outsb
loop
ja
repz
xchg
das
sti
inc
filds
loopne
jmp
shlb
mov
hlt
bound
cmp
jle
push
pcmpeqd
adc
call
inc
andb
adc
push
xor
push
sub
pop
es
push
xchg
fld
mov
and
mov
test
jnp
adc
mov
or
sub
rolb
mov
out
push
lods
and
out
movsb
xor
out
mov
xor
repz
imul
pop
sub
jecxz
jle
and
lret
mov
inc
rcrl
jle
jb
or
ljmp
lea
dec
mov
mov
xor
lds
xor
cmpsl
and
aas
cmp
mov
jle
mov
pop
and
mov
inc
fcmovnbe
ss
sahf
fidivrl
out
mov
or
fs
jmp
xor
jl
rorb
shlb
in
or
adc
das
adcb
dec
xchg
insl
popa
mov
aad
add
ds
and
adc
cmpsl
mov
cwtl
andb
int
or
lret
xchg
push
iret
dec
lret
or
dec
push
cli
ss
popa
push
xorl
arpl
mov
sahf
out
or
int3
pop
repnz
sti
stos
mov
jg
scas
dec
fsubp
cmpsl
mov
nop
aaa
mov
mov
popa
sbb
xchg
sub
pop
ret
sub
lds
push
jecxz
dec
es
sub
out
mov
dec
fmuls
mov
mov
mov
inc
mov
mov
ja
jle
xlat
add
ret
xchg
fcomi
test
inc
jb
fwait
iret
ss
mov
pop
cld
test
data16
push
push
sbb
lods
aas
lea
loope
mov
daa
cmp
jo
scas
inc
adc
insl
cmc
fnstcw
jmp
or
xor
pop
shrb
scas
mov
jnp
fwait
loop
aam
rorb
arpl
mov
popa
les
ret
lret
mov
subb
icebp
add
arpl
or
orb
fwait
xchg
mov
mov
std
into
test
mov
sbb
lret
lret
filds
in
les
ret
jo
push
mov
pop
stos
add
adc
inc
push
cld
mov
ljmp
mov
push
outsl
adc
loopw
jb
mov
std
imul
cmp
enter
sbb
jge
sub
popf
inc
negl
mov
ret
push
out
adc
mov
das
les
in
sub
addr16
mov
mov
inc
mov
arpl
fwait
cmc
mov
rorl
inc
jno
pop
mov
xchg
jp
stc
fidivs
repnz
and
ds
sbbl
cltd
shrl
mov
pop
cli
ljmp
adc
orb
mov
shlb
inc
sbb
mov
xor
and
ja
lock
ret
xchg
sub
aad
push
cmpsb
pop
dec
aam
jmp
mov
xchg
dec
mov
xchg
aad
and
xchg
or
mov
push
in
fcoml
mov
in
cmpsl
xchg
adc
dec
nop
or
add
ds
xchg
push
dec
inc
ret
xchg
aad
jo
xchg
insb
bound
inc
fs
dec
sar
fs
das
jecxz
insb
pop
nop
or
insl
js
xor
jp
inc
lret
cmp
mov
mov
rcll
xchg
in
bound
subl
add
pop
xlat
sbb
nop
insb
jmp
xlat
push
sbb
dec
ret
cmp
leave
daa
mov
popf
into
inc
xlat
insl
pop
push
cmp
cwtl
divb
stos
cmp
inc
ror
cmp
es
aas
into
dec
xabort
cmpsb
jne
and
out
sahf
cld
fdivr
adc
out
or
int3
and
add
xor
int3
cmp
hlt
and
in
jnp
add
pop
iret
xchg
call
lods
jl
and
adc
xor
imul
push
cmp
fstps
jne
mov
inc
mov
mov
jb
js
cmp
jl
mov
sbb
jge
jmp
pushf
into
data16
bnd
jbe
fsubs
ds
add
add
int3
out
sub
pop
inc
out
ds
arpl
add
les
cmc
add
inc
jg
mov
lods
leave
loope
int
or
xchg
dec
jo
jns
sbb
mov
and
sti
cltd
les
mov
mov
out
xchg
mov
imul
out
arpl
add
cli
inc
mov
mov
mull
pop
mov
pushf
mov
mov
fdivrl
adc
repnz
push
push
lds
ret
jns
int
sub
insb
stc
or
jb
and
fcoml
cmp
jg
jmp
cmp
fwait
or
out
popf
pop
jbe
jg
xor
pop
sti
xchg
mov
jno
sbb
jecxz
jb
push
inc
rcll
mov
and
push
push
vfpclassss
insl
and
rorl
cmp
inc
testl
enter
mov
mov
lea
or
sub
lods
cld
xchg
xchg
daa
fcmovbe
sbb
movsl
push
sbb
scas
pushf
dec
cli
adc
rclb
in
test
cltd
insb
push
aad
xchg
shrb
dec
fcoml
inc
or
out
aam
call
jg
sti
stos
xchg
js
les
push
lea
push
scas
add
and
mov
mov
pusha
int
xchg
dec
mov
cmp
mov
stos
mov
sub
je
sub
xor
leave
sub
pop
mov
and
mov
jecxz
jno
pop
ss
js
loope
mov
loopne
jnp
popf
jne
xchg
add
sbb
test
popf
pmullw
fiadds
mov
xchg
xchg
adc
push
lods
in
fiaddl
push
lock
std
std
lea
xchg
outsl
gs
ret
jle
addr16
iret
popf
sub
pushf
mov
pop
mov
xor
cmc
das
cmp
jge
pop
in
fmuls
xlat
and
aam
push
roll
fldenv
adc
test
push
jle
add
sub
in
xchg
push
lods
push
add
or
ror
insb
adc
inc
push
lock
std
std
xchg
xchg
outsb
mov
adc
lret
rorb
imul
xchg
popf
ss
sub
int
jp
in
clc
dec
dec
push
push
les
in
fsubrs
adc
test
xchg
popf
lcall
inc
xchg
inc
imul
repz
xchg
push
xchg
mov
clc
leave
xchg
push
enter
fimull
lock
std
std
mov
xchg
outsb
xorb
cmp
pop
sub
mov
pop
adc
xor
push
lcall
loope
dec
dec
in
cmpsb
aam
push
movb
shlb
adc
test
xchg
cmp
jle
hlt
inc
jbe
inc
in
xchg
push
jbe
test
test
dec
inc
bound
adc
dec
push
lock
std
std
xorl
add
inc
jle
pusha
leave
lret
outsb
adc
pop
mov
xor
dec
mov
stc
in
clc
dec
dec
fsubl
aam
pop
lds
out
sub
mov
pop
movsl
std
pushf
popa
inc
fisubs
inc
ret
mov
scas
xchg
push
les
call
enter
fimull
lock
std
std
and
fs
lock
pop
mov
ret
sub
pushf
mov
pop
mov
xor
mov
jge
cmp
push
clc
dec
dec
jg
lods
aam
push
roll
fldt
test
xor
sahf
mov
cmp
inc
mov
shr
xchg
push
mulb
lea
mov
dec
popa
loop
pusha
enter
aam
push
lock
std
std
xchg
insb
pop
mov
ret
jg
push
jno
ret
and
pushf
mov
pop
mov
xor
bound
mov
in
dec
dec
dec
arpl
aam
pop
into
add
in
cs
test
or
andl
pop
xor
xchg
push
lods
adc
inc
rorl
mov
dec
arpl
and
enter
aam
push
lock
std
std
mov
insl
ret
ja
dec
sub
sub
rcrl
pop
popf
ss
cmp
jbe
in
sbb
lret
and
aam
pop
leave
add
jecxz
and
test
aas
std
xchg
roll
push
add
xor
xchg
push
xchg
fs
cmp
jmp
sbb
dec
push
lock
std
std
test
xchg
popw
mov
ret
je
repz
lret
and
pushf
mov
pop
insb
ss
mov
or
icebp
fmuls
mull
aam
push
int
mov
push
fs
std
sahf
jno
inc
add
mov
mov
or
js
rcrb
enter
flds
lock
das
pop
push
lret
and
adc
push
lret
mov
pop
pop
inc
mov
add
scas
sbb
frstor
xchg
push
loopne
jnp
in
or
mov
xchg
add
testb
ss
cld
inc
dec
iret
sub
daa
popf
movsb
xchg
xchg
mov
mov
pop
iret
sbb
adc
repz
scas
cs
sub
push
movb
push
mov
lahf
jp
mov
in
repnz
xorb
push
scas
and
out
xor
loope
shlb
cmp
fsts
dec
outsl
cmpb
lahf
into
mov
cmp
mov
mov
negb
orb
addr16
mov
loope
mov
out
mov
pushf
adc
inc
in
sub
and
xchg
xchg
jnp
lret
sbb
cmpsl
daa
insl
cli
out
sub
pop
arpl
clc
out
lock
std
std
mov
xchg
imul
adc
adc
int3
into
out
mov
mov
pop
or
ja
bound
cld
std
jge
stc
in
or
fbld
aam
push
int
mov
mov
iret
lods
xchg
push
popa
ficomps
inc
push
mov
in
xchg
push
lods
hlt
test
lret
fadds
jmp
push
fisttpl
lock
negl
xor
mov
in
movsb
xor
loop
push
push
ret
and
and
mov
mov
adc
insl
pusha
mov
cmpsb
push
icebp
scas
jl
aaa
insb
push
mov
mov
cmp
aas
inc
add
out
lods
xchg
fcmovnb
sub
push
fldt
xlat
xor
sbb
negl
jg
dec
lods
and
in
sub
xchg
enter
pop
dec
aad
inc
shl
xor
fyl2xp1
jmp
jmp
pop
cmp
out
push
test
push
xorl
sar
pop
and
loop
dec
imul
call
jmp
push
outsl
cmp
loop
ret
std
push
nop
cmpsl
inc
dec
lahf
and
mov
repz
repz
out
and
pop
ret
pushf
adc
inc
cli
fildl
and
xchg
loopne
push
mov
pop
sub
and
pop
arpl
lret
jp
out
lock
pop
pop
test
in
add
add
out
sub
arpl
push
xchg
dec
scas
push
adcl
movsb
sbb
sub
push
arpl
push
stos
cmpsb
jl
xchg
mov
mov
mov
ljmp
fstps
pop
scas
nop
xchg
mov
fldt
stc
iret
mov
lret
mov
das
jnp
push
adc
std
inc
lods
out
mov
or
aad
ret
inc
mov
test
jecxz
std
jnp
pop
pop
push
or
test
xor
cmp
push
cmp
rol
out
insb
adcb
jecxz
push
out
push
cmp
xchg
xor
mov
arpl
testl
xchg
and
mov
mov
jecxz
xor
or
lahf
adc
push
or
fs
sub
mov
sub
xchg
daa
imul
arpl
lret
ficoms
pop
in
lock
mov
test
test
test
add
fdiv
push
int
inc
test
xchg
sbb
sub
push
add
rorb
into
stos
sbb
popf
imul
jbe
mov
jge
xchg
mov
jecxz
add
sub
and
hlt
fs
mov
mov
sub
sub
lods
xchg
xchg
cmp
xchg
mov
mov
fildll
daa
pop
adc
repz
mov
ss
xchg
iret
dec
inc
aad
iret
push
addr16
sbbb
sar
stc
loopne
rorl
ret
jecxz
lods
pop
fcoms
xor
pop
incl
cmp
fidivs
out
outsb
xorb
leave
fildll
mov
xor
jb
mov
cmp
inc
fists
sub
cmp
mov
js
out
sub
into
xor
pop
add
lock
mov
adc
lret
push
sub
jg
jmp
ficoms
test
lods
lock
les
ja
mov
loope
add
inc
push
iret
pop
cmc
ja
jmp
add
or
movsb
sbb
jge
andl
add
jno
xchg
mov
jecxz
add
pop
outsl
adc
cmc
hlt
xchg
loope
xor
sub
dec
pop
mov
mov
fldt
fnstenv
or
mov
das
sbb
push
jle
dec
mov
cmp
movb
pop
pusha
add
aas
jge
out
sub
test
mov
in
orb
pusha
mov
out
jo
cmp
shlb
std
clc
push
sub
mov
call
gs
lods
mov
pop
mov
push
hlt
pop
push
mov
nop
addr16
call
inc
pop
mov
xor
movsb
sub
out
sub
into
jecxz
imul
xor
sbb
dec
in
ja
gs
ljmp
jmp
ficoms
cmp
lods
lock
repz
enter
out
loope
add
dec
and
aaa
into
movsl
sbb
or
das
inc
pushfw
and
jb
add
lods
sbb
dec
push
aaa
xchg
and
jne
fsubrs
stos
je
xchg
mov
test
lahf
addl
pop
in
addl
fs
lahf
xchg
cmp
or
mov
dec
fistl
sbb
mov
cmpsl
cs
in
dec
cmp
cltd
iret
dec
inc
aad
sbb
pop
cmpl
test
stc
in
std
push
test
pop
clc
xchg
in
mov
xor
out
jo
cmp
flds
out
outsl
sbbb
aam
xchg
lret
jmp
mov
std
mov
sbb
enter
fists
sub
mov
jecxz
mov
sbb
sub
pop
ret
into
xchg
sti
jnp
inc
mov
test
mov
push
pop
and
pop
arpl
rcr
jle
loopne
lock
pop
cs
adc
xlat
cmc
loope
ss
fdivs
push
rorl
mov
xchg
stc
orb
loop
into
mov
xchg
pop
popf
roll
jge
cmpsb
insb
pop
jnp
jnp
xchg
mov
jecxz
add
add
popa
add
lcall
sub
lcall
cmc
jbe
or
mov
bswap
xchg
adc
incb
in
in
fnstenv
imul
push
gs
and
lret
xchg
out
sti
loope
daa
cmp
sbb
out
xor
and
pusha
mov
outsl
mov
push
shl
out
pusha
sbbb
mov
xor
mov
xor
and
inc
inc
add
test
mov
nop
aaa
dec
mov
mov
jecxz
rorl
or
xchg
adc
ret
inc
fwait
add
jnp
pop
sbb
dec
sbb
das
and
pop
arpl
lret
jno
loopne
lock
std
std
mov
sub
dec
fnstenv
lret
lret
int
fs
pushf
mov
pop
mov
xor
jle
pushf
pop
jge
pop
in
sbb
xor
aam
push
movb
aad
adc
test
dec
xchg
popa
shrl
nop
nop
mov
push
mov
xchg
push
jbe
xchg
test
iret
mov
add
enter
rolb
lock
int3
ficoms
fidivl
ljmp
push
leave
sysexit
and
sub
xchg
mov
add
test
popf
out
mov
xchg
call
insb
add
xchg
mov
call
pushf
les
mov
lds
and
push
call
push
lahf
ljmp
cmp
push
jp
inc
mov
cmp
int3
inc
inc
aad
add
scas
pop
fimuls
stc
loop
cmp
xor
adc
xchg
xor
add
mov
cmp
aad
out
outsl
sbb
loopne
js
rorl
push
aas
test
xor
neg
outsb
xchg
nop
cmpsl
inc
dec
xchg
and
aas
mov
jnp
fsubr
and
pop
ret
into
adc
add
add
push
in
int
and
fildll
jmp
ficoms
fsubr
lods
lock
into
scas
xor
in
test
push
les
mov
cmpsb
lret
jb
add
stos
sbb
lea
pop
fcomps
sub
jne
shrl
cmpsl
jl
xchg
mov
jecxz
add
cmp
aam
mov
in
sub
lret
enter
push
int
cmpsb
lcall
int3
ja
or
mov
outsl
imul
adc
hlt
inc
stos
mov
nop
iret
dec
inc
aad
imul
fdivrl
dec
in
repz
enter
mov
xor
pop
outsl
mov
cmp
aad
out
imul
fiadds
cs
cmp
add
add
hlt
or
testl
mov
push
ror
sub
pop
enter
jae
cmp
push
sbbb
aam
fstl
sub
out
and
pop
arpl
ficoms
enter
fisubrl
xor
movsl
xor
fs
mov
outsb
and
jl
xchg
push
pushf
jmp
adc
leave
jb
add
push
in
leave
or
push
aas
sahf
jb
add
movsl
jne
xchg
mov
jecxz
add
add
add
jmp
sub
pop
add
jl
and
imulb
cli
mov
idivl
cs
pop
xor
iret
inc
dec
aad
mov
mov
andl
testb
aad
or
pop
shll
pusha
mov
mov
sub
mov
dec
fs
ss
rorb
loop
pop
xor
xor
cld
mov
nop
pop
dec
push
inc
lahf
mov
adcl
sub
into
mov
sub
xor
xchg
cmp
int3
sbb
mov
sub
pop
arpl
int3
ficoms
sub
