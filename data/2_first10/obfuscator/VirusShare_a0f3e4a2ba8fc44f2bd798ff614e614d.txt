add
aas
je
jb
imul
pop
inc
pop
pop
pop
add
add
inc
add
mov
repnz
lea
pusha
pop
lea
mov
pushl
push
pushf
pushl
ret
add
aas
aas
xor
arpl
je
outsl
outsb
inc
jae
fs
inc
push
inc
inc
inc
inc
inc
push
xor
inc
inc
pop
add
lret
mov
test
cmp
and
mov
pushf
clc
sub
jno
add
cmc
add
pushf
pushl
dec
movb
pushl
lea
jne
push
lea
jmp
and
daa
mov
xchg
orb
xchg
sbbb
push
mov
enter
cmp
inc
pop
in
push
jmp
cmpsb
pop
nop
rorl
adc
fbstp
jnp
popa
mov
movsb
pop
mov
xchg
dec
push
xchg
fwait
std
es
les
jge
in
test
inc
fs
and
inc
outsl
into
pop
ret
xchg
jnp
and
sbbb
out
and
inc
jge
dec
jo
mov
out
addb
xor
lock
cmp
stc
or
pusha
movb
lea
jne
call
mov
pushf
dec
test
mov
mov
shl
movb
jmp
jmp
jmp
add
data16
imul
pop
popa
insl
jae
pop
gs
je
cmp
cmc
add
call
push
movb
lea
je
push
pushl
lea
jmp
add
push
gs
imul
outsl
arpl
jae
add
clc
stc
pushf
jmp
push
call
push
lret
bt
sub
call
call
cmp
push
jmp
add
pop
inc
dec
arpl
add
and
inc
xchg
movsbw
pushf
pusha
setp
movl
jmp
push
call
es
js
mov
jmp
call
cmpsb
sub
add
push
jg
sbb
cli
aaa
mov
sbbb
jle
stos
aad
lret
jp
add
fldenv
ljmp
cwtl
pop
jecxz
addl
push
jg
cld
sub
mov
iret
ss
cmpb
dec
jge
sahf
ret
stos
push
out
push
repz
xchg
dec
ss
aaa
xchg
leave
push
test
push
je
sbb
cmp
ja
push
jno
leave
das
lods
shll
xchg
adc
lahf
int3
cmpsb
aad
aam
push
mov
sarb
fists
fisttpl
hlt
fwait
movsl
faddl
les
xchg
or
push
xchg
fwait
popa
enter
push
inc
push
xor
cs
insb
add
jmp
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
push
lea
jne
jmp
push
call
pop
lret
lcall
call
xchg
pusha
mov
iret
add
or
xchg
testb
pushf
imul
call
adc
neg
call
mov
bswap
not
pusha
lea
pop
pusha
xchg
movzwl
jmp
call
add
pop
imul
insl
pop
add
add
push
vmovaps
pushl
sbb
mov
cmp
pusha
lahf
test
stos
stc
mov
add
add
adc
cmp
xchg
cmp
dec
shll
mov
fwait
lretw
pusha
mov
not
setne
lea
pushl
popl
bswap
mov
movzbw
pop
movl
call
jmp
pushf
lea
je
pushf
mov
movw
push
movl
pusha
movl
movb
push
mov
pushl
mov
pushf
cwtl
cwtl
cwtl
movl
pusha
call
mov
pushl
pushl
ret
push
call
cli
rcrb
scas
loop
jp
orl
inc
jnp
ja
in
jno
imul
flds
lods
pop
lea
roll
hlt
mov
cmp
push
adc
sbb
sub
jecxz
mov
inc
call
fldcw
setg
xlat
jle
xchg
xor
ss
xor
dec
mov
mov
lahf
nop
testl
in
insb
loop
jmp
add
or
or
out
fwait
cmp
test
ljmp
inc
jmp
mov
xor
mov
or
inc
call
jmp
xchg
xchg
mov
in
leave
mov
cmpsl
jae
sub
xchg
out
sub
push
jmp
data16
sbb
mov
jbe
ja
loop
hlt
jg
popa
lret
ss
out
and
lahf
fbld
out
mov
push
add
mov
subb
mov
or
addr16
pop
mov
pusha
pushf
pushl
ret
lea
lea
mov
push
pushl
movw
pushf
popl
pusha
jmp
push
call
jmp
add
lea
je
call
push
call
push
lea
jne
not
mov
lahf
push
mov
push
movb
lea
jmp
pushl
lea
jae
pusha
inc
dec
mov
movb
inc
call
jnp
xchg
ljmp
sar
sbb
xor
ds
sbb
movsb
adc
push
loopne
mov
cmpl
dec
pushf
lds
movsb
jns
mov
mov
jp
cmp
ret
adc
addr16
jmp
xchg
mov
push
cmp
cmc
leave
push
pop
mov
pop
sub
adc
push
pop
mov
mov
fwait
inc
jmp
insb
pop
imul
movsl
test
mov
out
pushf
mov
lcall
mov
and
lea
jne
push
pushf
pushf
lea
jmp
add
pop
je
insl
gs
add
mov
or
mov
cmp
test
test
xchg
rcl
call
pushf
lea
push
call
orb
mov
xor
mov
xchg
mov
cwtl
inc
jno
movsb
mov
inc
mov
nop
adc
nop
orb
ljmp
xchg
mov
test
push
lods
add
popf
test
ljmp
add
mov
aam
add
subb
xor
or
sbb
xchg
sbb
add
rolb
loope
xchg
int
stos
loopne
or
xor
pushf
aaa
fisubl
xchg
xchg
decl
add
test
test
fsubl
adc
lds
dec
mov
repz
mov
adc
mov
jle
mov
pop
mov
jb
movsb
test
and
test
test
orb
test
enter
addr16
rolb
orb
sbb
pop
or
nop
lds
test
push
in
clc
fsubrl
add
loopne
dec
int3
lods
or
repz
daa
out
push
push
std
imul
mov
xor
in
imul
add
nop
sub
insb
push
lea
jb
and
pop
mov
sbb
pushf
push
test
movsb
xchg
lods
mov
cltd
test
nop
shr
push
aam
and
sbbb
add
enter
pusha
cld
into
int
inc
mov
sub
fisttps
inc
push
lods
xor
test
xlat
aas
rolb
test
shl
push
int3
leave
imul
push
dec
es
mov
iret
movb
sub
movsb
add
call
push
xchg
xor
xchg
inc
dec
pop
fdiv
mov
ja
add
mov
imul
dec
insl
or
mov
mov
lea
call
bt
cmp
push
pusha
lea
jae
bt
cmp
pusha
movl
lea
jae
jmp
push
call
mov
fs
je
lea
pushf
mov
movsbl
seto
lea
push
mov
xchg
movsbw
pop
bswap
cwtl
pushl
call
push
jmp
lea
jne
lea
mov
push
push
mov
pushl
lea
jmp
add
jae
jb
je
add
ljmp
add
cld
cmp
stc
popf
push
pusha
pusha
lea
jmp
push
jmp
call
aad
xor
adc
cld
mov
stos
lahf
enter
icebp
jne
inc
mov
xor
dec
mov
xchg
lcall
fs
mov
push
mov
enter
mov
scas
movsb
stos
mov
aad
cmp
pop
movsl
sub
and
into
xor
loope
mov
cmp
pop
dec
mov
fldl
xchg
ljmp
fs
cmp
xchg
stos
sti
popa
cmp
push
inc
xchg
adc
pop
les
pushf
pop
repnz
push
sti
push
arpl
mov
mov
xchg
aaa
xchg
fwait
push
add
jb
jne
insb
inc
insb
insb
outsl
arpl
lods
jb
sbb
mov
shlb
jb
clc
cmp
inc
add
xor
ror
ljmp
filds
xor
rorb
ds
addr16
movsl
outsl
cmpsb
dec
mov
stos
dec
push
mov
int3
or
jnp
and
movsl
sub
shlb
xor
lock
cmp
dec
mov
adc
dec
mov
cmpsl
fadds
stos
and
jecxz
lcall
hlt
xchg
xor
rcrl
sti
adcb
fwait
imul
lods
add
push
aas
dec
mov
sub
xor
data16
push
lock
push
push
dec
pop
repnz
mov
aam
adc
ret
in
fmul
or
int
shl
xlat
mov
jle
cmc
inc
mov
xchg
add
fiadds
xor
sub
xchg
pop
lret
jns
cs
mov
and
outsb
add
mov
enter
dec
test
xor
clc
loop
clc
pop
test
cmpsl
pop
lret
xchg
out
jne
mov
bound
adc
xchg
and
loop
popa
outsl
xlat
jno
xor
ss
pusha
sbb
inc
test
jg
pushf
add
shll
mov
fnstcw
lods
sbb
xchg
fwait
outsb
pop
test
ret
not
inc
stc
shr
rcl
sar
xchg
lahf
pusha
shr
mov
cmp
inc
mov
lea
stc
clc
test
pusha
xchg
sub
mov
bt
jmp
lea
mov
movzbl
pushf
call
push
call
mov
or
call
pushf
pusha
cmp
pushf
push
lea
je
call
lret
push
mov
fsubl
imul
sub
stc
js
or
imul
pop
or
adc
lret
dec
mov
outsl
adc
loop
mov
ret
mov
shl
mov
sahf
add
xchg
fidivl
cmp
xor
sub
int3
cmp
cs
std
cmpsl
push
movsl
inc
push
pop
repnz
mov
in
cmp
mov
mov
sbb
mov
mov
into
sbb
jo
mov
pop
repnz
aaa
push
arpl
test
mov
xchg
fwait
outsl
push
jbe
add
arpl
jb
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
pop
pop
pop
add
inc
and
and
aaa
popl
test
bt
bt
cmp
jmp
lea
call
jmp
lea
ret
push
call
subl
je
jne
jb
outsb
je
push
dec
fs
movsb
movsbw
mov
movw
mov
mov
movb
lea
jmp
push
call
insl
lea
je
pushf
pushf
pusha
lea
jmp
add
pop
outsb
arpl
gs
jo
imul
fs
je
sub
rcr
stc
mov
or
bsr
jmp
bsr
mov
pushf
sub
pushf
mov
call
pusha
cmp
cmp
pusha
jmp
dec
push
push
inc
push
cmp
cs
insb
add
int3
inc
mov
jmp
lods
xlat
cmp
push
jge
std
es
cmp
mov
jg
xchg
outsl
std
or
js
xlat
adc
std
pop
fadds
seto
fdivrs
sbb
jmp
jne
fsubrs
add
mov
ds
jne
fsubrs
insl
push
iret
movb
lea
ja
bt
bt
pushf
pusha
add
add
cmc
test
cmp
push
jmp
lea
je
push
lea
movsbl
mov
jmp
mov
lret
sbb
dec
cld
pop
mov
jo
lock
rorl
sub
jge
adc
adc
fisubrl
dec
mov
mov
enter
inc
nop
mov
add
or
dec
ret
fadds
insl
push
clc
mov
or
xchg
gs
xchg
push
jae
xchg
fwait
adc
cmpsl
adc
add
pushf
call
call
lea
jne
pusha
jmp
pusha
cmc
cmp
mov
lea
ja
ja
pusha
pusha
inc
inc
not
call
lea
je
cmp
clc
sub
cmp
bt
call
add
jb
outsb
add
xchg
inc
jno
negl
add
movd
pop
cwtl
fs
pushl
int3
and
xlat
dec
and
js
mov
xchg
push
xchg
sub
mov
inc
ds
pop
shrb
inc
mov
mov
in
movsb
psllq
ja
jno
xor
or
call
pop
std
je
pop
out
fcoms
insl
shlb
or
fwait
adc
into
sbb
and
fs
jmp
mov
push
lods
jmp
call
jmp
pushf
clc
pusha
shr
stc
call
mov
test
push
scas
into
xor
stos
xor
cmpsb
sub
ss
outsb
cld
sbb
es
vmulps
and
adc
adc
jne
adc
push
pop
mov
cs
inc
pop
out
in
fdivrp
push
xchg
cmp
mov
mov
jle
bound
xchg
fwait
adc
jg
add
popa
jo
outsb
fs
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
push
inc
inc
inc
pop
add
mov
bt
add
mov
jmp
cmc
jle
insb
jmp
cs
mov
sub
std
fistl
addr16
pop
fdiv
jg
pop
out
mov
pop
inc
jl
jno
andl
xor
xor
fcompl
out
sbb
pop
scas
xor
dec
mov
das
fwait
add
sbb
add
mov
ljmp
int
and
inc
pop
movsl
pushl
pushl
popf
pusha
lea
jmp
call
add
pop
inc
dec
jae
outsb
add
call
push
call
lahf
cmc
lret
bsf
add
inc
neg
mov
rol
ror
shl
mov
mov
stc
test
test
pushf
repnz
pusha
pusha
lea
jne
push
not
movb
lahf
sete
jmp
pushf
lea
call
jmp
lea
mov
mov
mov
pusha
pusha
lea
jmp
pushl
popl
pushl
pushl
ret
loopne
incb
icebp
push
repz
stos
push
test
mov
enter
loopne
int3
popf
sahf
sbb
lock
xor
gs
cltd
sub
repnz
imul
hlt
arpl
mov
and
jge
cmp
adc
cld
pop
enter
adc
mov
fs
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
and
call
jmp
lea
jne
bswap
movsbl
movb
lahf
push
lahf
lahf
mov
mov
lea
jmp
movb
pushf
pushl
ret
push
call
cmp
lea
jnp
je
pusha
movb
lea
jmp
not
movsbw
lea
movw
jmp
push
mov
pushl
popl
pushf
push
push
pushl
ret
pushl
cmpl
pushf
call
pop
jmp
add
dec
jae
bound
addr16
jb
jae
outsb
je
push
call
int3
mov
iret
rcl
add
bsf
mov
call
cmp
push
lea
jb
bt
cmp
call
call
pushfw
shl
rcl
test
shr
mov
pusha
xor
stc
pushf
pushf
ror
cmc
movb
pushf
stc
not
cmc
pushf
call
mov
lea
not
lea
lea
push
pushf
push
xchg
movsbl
lahf
pushl
popl
movsbl
movb
not
pushf
mov
movsbw
setl
pushl
movl
bswap
lea
jmp
pushf
jmp
add
aas
pop
je
jo
pop
imul
outsl
jb
imul
insb
pop
insl
gs
outsl
fs
je
jo
pop
imul
inc
inc
pop
pop
pop
add
enter
or
inc
and
dec
movl
push
mov
mov
movw
pushl
popl
pushf
pushl
ret
cmp
clc
imul
push
mov
lret
sbb
lahf
mov
ds
push
arpl
insl
shlb
cmpsb
jae
imul
mov
xor
xor
hlt
bound
xlat
loope
dec
mov
test
pop
xchg
fwait
adc
mov
or
test
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
pop
cmp
add
insb
leave
outsb
or
push
xlat
adc
negl
add
xchg
push
inc
push
in
pop
out
fisttpll
inc
jl
fiaddl
test
movl
xor
movsb
jae,pn
inc
xchg
xchg
add
and
or
add
pop
add
sub
orb
insb
sbb
fidivrl
jne
insb
outsl
arpl
add
insl
popa
insb
insb
outsl
arpl
push
call
and
push
push
jmp
pop
and
call
call
lea
jne
test
popf
pushf
pushf
push
pushf
lea
jmp
mov
lea
push
bswap
lea
movsbw
setnp
lea
call
bt
cmp
pusha
cmp
or
pusha
pushl
call
stc
test
bt
test
pusha
jmp
push
movw
call
movl
movw
push
pushl
popl
push
movw
pushl
ret
pushf
call
cmc
popf
pusha
pusha
lea
jmp
cwtl
mov
pusha
push
mov
pushf
lea
jmp
not
mov
lea
adc
or
sub
cmp
inc
clc
lea
bt
push
sub
cmp
cmc
bt
pushl
popl
jmp
imul
loope
lcall
gs
and
mov
repnz
jns
xchg
add
dec
inc
in
clc
pushf
ret
dec
lds
cld
int
test
mov
aaa
repz
or
jg
xor
cs
cltd
adc
xor
sbb
inc
insb
cmpl
call
sbb
or
mov
enter
mov
xor
add
fisubl
out
stos
inc
xchg
lahf
or
inc
jge
mov
sahf
dec
pusha
xchg
icebp
js
mov
sub
arpl
inc
dec
pushf
cmc
pop
mov
xor
shrb
mov
push
push
inc
shll
sbb
inc
add
orl
mov
add
jl
hlt
lcall
fcoms
js
adc
push
loop
mov
fwait
sbb
jmp
sbb
jmp
xchg
out
push
xor
dec
sti
in
xchg
push
test
scas
fwait
lahf
mov
das
rorb
xchg
std
mov
mov
dec
jae
push
push
jmp
or
push
in
cmpsb
sbb
xchg
fwait
sbb
dec
xchg
sub
cmc
pusha
repnz
movw
push
lea
js
jne
sbb
and
mov
bts
push
inc
rcr
sub
bsr
movzbw
lea
sub
test
test
clc
jl
sub
clc
test
pushl
push
jmp
call
lods
test
sbbl
in
xor
in
cs
cld
aaa
mov
sub
mov
roll
arpl
add
das
hlt
jle
mov
ret
mov
adc
scas
mov
xchg
sbb
scas
cmpsb
and
push
cmp
sbb
sbb
inc
rolb
pop
out
adc
inc
cltd
inc
and
jns
mov
xor
leave
js
inc
test
pushf
add
pop
rorb
and
xor
sbb
sbb
jno
cmp
dec
inc
dec
push
cmpsb
push
dec
mov
push
mov
add
orl
xchg
mov
cld
arpl
or
loope
das
test
jo
xchg
insl
pop
sub
sbb
pushf
int
out
cmp
test
cs
mov
and
adc
in
mov
sbb
pushf
add
test
aad
jmp
push
mov
sahf
incl
fwait
sbb
cmpsl
hlt
daa
cwtl
ja
or
mov
dec
in
inc
mov
mov
cmp
cmpsl
fwait
hlt
test
sub
test
mov
imul
add
cmp
pop
fs
sbbb
nop
inc
pop
mov
out
lret
fdiv
scas
sbb
in
pop
mov
jne
fwait
xchg
fwait
sbb
popf
jmp
pushl
stos
sets
mov
lea
pusha
lea
call
pushf
call
das
xchg
adc
roll
cwtl
xchg
pusha
add
rorb
stc
fstpl
loop
sub
clc
ljmp
les
dec
mov
iret
ds
push
aas
int3
xlat
xchg
nop
push
ss
aaa
push
mov
dec
xlat
add
and
xor
mov
jle
jo
push
js
out
mov
popa
mov
mov
mov
outsb
inc
nop
xlat
jmp
hlt
push
cmp
leave
pusha
xchg
mov
push
push
xor
iret
pop
pop
jl
ja
test
jge
adc
and
push
dec
lods
aam
pushf
fdivl
and
jnp
add
add
add
aas
aas
xor
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
pop
pop
add
mov
lea
ja
pushf
pushf
call
add
jae
jb
outsb
je
add
add
push
stc
add
and
jns
add
or
pushf
call
lea
call
push
call
mov
push
call
xchg
xchg
jle
dec
call
mov
or
adc
mov
cmp
arpl
cmpsb
pop
in
adc
sbb
adc
insb
test
fwait
and
cmp
push
movsb
sub
sub
xchg
fwait
pop
imul
push
xor
fs
insb
add
call
mov
pushf
mov
jmp
add
aas
aas
xor
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
inc
push
xor
inc
inc
pop
add
mov
pushl
pushf
popl
push
or
pusha
jmp
cmc
mov
pushl
cmpb
push
jmp
call
jmp
add
aas
aas
pop
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
pop
add
push
das
add
jne
setle
mov
push
pusha
pusha
pushf
lea
jmp
push
call
fstps
add
outsb
gs
je
pusha
mov
pushl
lea
call
push
call
pusha
std
pusha
pushl
popf
push
movl
lea
jmp
pusha
mov
xchg
lea
jge
not
movzbw
pushf
movl
lahf
mov
lea
pusha
movl
call
pushl
lea
jne
bswap
lea
pushf
mov
pusha
movb
pushf
popl
cmc
cmp
or
call
movw
lea
jne
stc
cmp
popf
pusha
lea
jmp
add
pop
insb
outsl
arpl
je
insl
gs
push
call
into
push
stc
add
pop
pop
fs
insb
outsl
outsb
gs
je
call
lea
je
jmp
cmc
not
push
movb
pushf
push
rol
stc
cmp
push
shr
pushf
lea
je
call
bt
sub
mov
pusha
lea
lea
mov
movzbl
sets
setl
movzbw
mov
movzbw
pop
mov
xchg
mov
movzbl
mov
movsbl
movsbw
lea
mov
call
jmp
lea
jne
pusha
push
lea
jmp
pushf
pusha
lea
je
bt
push
push
cmp
call
call
jmp
push
call
mov
mov
push
mov
push
mov
nop
lahf
mov
xor
ds
mov
add
push
mov
jne
fldl
pop
sub
bound
add
fcompl
jns
rcrl
movsl
es
xchg
fwait
add
addr16
pushl
popl
push
pushl
ret
movl
mov
lea
jae
call
call
add
pop
jbe
outsb
jo
imul
mov
mov
add
ret
add
add
lahf
movzbw
pushf
pushl
lea
push
movl
call
add
aas
aas
pop
inc
aas
and
popa
jae
arpl
data16
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
push
inc
inc
pop
pop
pop
add
cwtl
ret
add
bswap
movzwl
pushf
movzbw
call
movsbw
lea
jmp
push
pushf
lea
bswap
bswap
bswap
movzwl
bswap
pop
lea
pusha
bswap
mov
pusha
mov
call
lcall
outsb
mov
mov
sub
sbb
sbb
dec
dec
mov
mov
fstl
test
sbb
sbb
adc
popa
mov
xchg
xlat
mov
fcoms
xor
cwtl
add
in
cmpsl
shr
loopne
pop
rol
js
out
cli
pop
and
push
pop
lds
inc
lret
pop
mov
ja
out
pop
jp
and
inc
jge
loope
push
or
insl
push
out
add
scas
adc
add
and
cmp
popl
pushf
pushl
pushl
ret
mov
push
pusha
lea
jmp
pushf
not
movl
cwtl
jmp
pop
pushf
push
call
out
aaa
sub
pop
lds
pop
sbb
mov
jl
push
lods
fbld
enter
mov
lahf
mov
mov
arpl
dec
jne
dec
cmc
mov
cmp
pusha
imul
pop
mov
push
repz
lds
loop
int3
pop
mov
sar
xchg
sbb
mov
or
xchg
dec
xlat
stos
loope
enter
add
dec
adc
dec
iret
xchg
inc
dec
mov
outsl
mulb
inc
mov
push
adc
stc
pushl
push
shr
pushl
mov
clc
pusha
cmp
call
jmp
add
pop
gs
gs
pop
push
gs
pop
arpl
insl
outsl
outsb
add
add
pusha
clc
pusha
stc
or
jmp
pushf
call
mov
pushf
pushf
pop
mov
movzbw
setg
mov
movb
pushf
movb
mov
jmp
movzbl
pusha
movzbw
mov
lea
call
clc
mov
bt
jmp
pusha
pop
lea
mov
lea
mov
movb
pusha
mov
jmp
pushf
lea
ja
shr
sub
movsbl
mov
cmc
add
not
inc
mov
push
test
push
setl
mov
jmp
push
call
sbb
call
inc
and
pushf
pushf
push
pushf
pushl
ret
loop
addr16
jl
push
xchg
pop
push
loopne
rolb
std
std
pop
daa
xor
jg
outsl
pop
sarb
ljmp
nop
pop
or
lcall
cmp
inc
and
xor
mov
shll
mov
fs
mov
and
cmp
inc
jge
addr16
mov
fwait
push
jle
xchg
jns
js
lods
xchg
mov
xor
sbb
and
inc
dec
insl
inc
cmovns
fucomip
aad
repnz
lock
cli
frstors
jo
lods
lds
aas
and
xor
sbb
jl
jae
sbb
hlt
scas
btc
repz
sti
mov
hlt
push
loop
test
mov
xchg
fwait
push
and
and
out
add
push
call
or
fs
jne
stc
stc
pusha
pushl
popf
pusha
pushf
pushf
lea
jmp
test
movb
pusha
call
lea
movzbw
mov
bswap
bswap
mov
call
push
test
pushf
call
bt
clc
add
pushl
pusha
lea
jmp
cmp
shr
bt
cmpl
pushf
call
push
lea
je
push
pusha
pushf
mov
pushf
pushf
movl
pushf
movl
call
push
imul
push
ret
mov
push
notb
mov
xor
mov
cmp
add
jecxz
iret
lahf
movsb
and
sbb
sub
pop
out
cli
lods
cmpsl
fdecstp
inc
jge
push
dec
mov
jge
call
test
sub
xor
pushl
ret
add
dec
loopne
repnz
sahf
orl
adc
mov
into
cwtl
aas
imul
fistps
movsl
fadds
addl
jg
mov
and
push
mov
repnz
aad
jmp
and
popf
jp
dec
lods
jl
xchg
sub
adc
mov
push
add
adcb
in
leave
iret
iretw
inc
xlat
xchg
dec
cmpsb
dec
enter
rcrl
xchg
mov
out
test
lods
adc
loopne
push
fimull
inc
xchg
fwait
add
data16
add
repnz
xchg
mov
bound
xchg
lcall
nop
jge
dec
fwait
push
sbb
test
data16
mov
ljmp
xchg
pusha
addb
add
out
dec
jmp
jecxz
pushf
jo
lret
lods
jns
enter
push
fwait
sbb
adc
jmp
jp
or
shrd
xchg
sub
add
stos
push
or
ret
and
xor
cltd
inc
xchg
mov
sub
adc
xor
out
fs
sub
cltd
push
pop
loop
movsb
popa
cmp
sbb
jg
fs
sbb
mov
repz
xchg
dec
lret
ds
cmp
inc
into
push
push
pop
adc
test
xchg
daa
rcrl
jo
mov
xor
ja
stc
imul
push
stc
cmc
add
pushl
pushf
movb
push
lea
jmp
mov
movl
mov
pushl
mov
pushl
ret
push
pushf
pusha
lea
je
test
cmp
pusha
call
bswap
call
lea
call
call
add
pop
insb
outsl
arpl
pusha
lea
jne
bswap
lea
jmp
pushf
cmp
jmp
pushf
add
bt
bt
movzwl
sub
shr
mov
bt
pusha
call
add
jae
jb
jb
outsl
jb
call
lea
jb
test
cmc
xor
stc
push
movb
stc
ror
push
bt
not
pushl
mov
rol
call
incb
dec
mov
jp
mov
add
jle
cli
pop
stc
push
mov
jg
inc
xchg
xchg
add
add
or
mov
popa
xlat
sbb
sbb
icebp
sub
fwait
lea
sub
leave
lock
popa
rol
cwtl
mov
xor
sarl
add
or
mov
js
mov
pusha
jg
jg
mov
mov
pop
ficompl
mov
andb
adcb
mov
add
add
xchg
scas
sahf
lock
jno
xchg
outsl
mov
frstor
insl
or
mov
mov
es
popf
lods
mov
xchg
mov
or
pop
jg
test
jle
mov
mov
pop
out
sub
hlt
clc
push
mov
xchg
mov
std
add
adcl
mov
push
lret
adc
xchg
mov
cwtl
mov
rclb
pop
insl
jg
sbb
fld
jno
sti
add
hlt
sbb
int3
addl
pop
cmp
pusha
mov
mov
inc
pop
repz
fiadds
icebp
add
jo
loopne
sbb
jmp
stc
mov
test
lods
mov
js
mov
jecxz
add
push
mov
loope
and
pop
mov
enter
pop
mov
jo
dec
xchg
lea
pushf
mov
ret
or
or
add
xor
jle
sub
cwtl
mov
xchg
mov
pop
cwtl
xchg
push
lcall
xor
hlt
mov
nop
sbb
lock
lcall
adc
push
xor
insl
jno
ret
dec
gs
or
mov
inc
fldt
dec
jle
addl
mov
sbb
xchg
sub
lcall
mov
add
mov
or
xchg
xchg
mov
andl
adc
xchg
gs
dec
loopne
out
mov
outsb
xchg
push
test
rclb
adc
inc
lea
pop
mov
in
add
orl
popf
aaa
push
push
arpl
mov
jae
mov
out
in
xchg
lock
and
sbb
lds
roll
or
xchg
lea
mov
adc
jp
jae
dec
xor
pop
mov
rorl
cli
mov
mov
lea
inc
mov
dec
in
pop
mov
pop
mov
cmp
inc
add
fcmovu
mov
or
mov
rorb
pop
or
dec
mov
mov
cmpps
outsl
mov
dec
or
add
popf
lock
push
inc
push
or
lea
lds
mov
mov
pusha
popa
adc
xor
lahf
mov
sub
push
jle
sbb
xchg
mov
cmp
pop
test
cmc
into
mov
mov
rorl
push
mov
jae
xor
and
xor
fmuls
mov
and
cmp
xchg
fbld
shrb
dec
sbb
dec
iret
fldenv
lds
popa
adc
loope
mov
cs
dec
push
mov
inc
mov
xchg
cli
dec
push
xchg
and
xor
int3
pop
mov
jp
negl
sub
sub
loop
das
add
mov
cmpsl
mov
cwtl
mov
fidivrl
xchg
pop
clc
loopne
leave
in
lret
push
rorl
sahf
in
test
xchg
mov
inc
cmpsb
mov
in
fs
mov
int
orb
iret
xor
lret
dec
cmp
cmpl
cwtl
stos
mov
lcall
pop
mov
push
hlt
cmp
stos
stos
dec
data16
pusha
xlat
xchg
adc
imul
jae
ljmp
stos
pop
jns
dec
stc
loopne
shrb
loope
cmp
aad
rorb
cmp
jae
lahf
loop
pop
dec
add
cltd
pushf
mov
dec
adc
lahf
jno
sbb
and
ret
inc
ret
dec
imul
faddl
dec
nop
mov
aaa
xchg
fcomps
jns
ret
inc
jg
add
mov
sub
shr
mov
mov
fucomi
or
push
cmp
popa
mov
jl
rol
es
mov
popf
adc
repnz
cmp
inc
stos
mov
sub
mov
push
mov
lock
leave
scas
xlat
xchg
sub
mov
lret
lcall
mov
xor
sbbl
xor
lcall
dec
int3
mov
lahf
mov
pushf
pop
aam
lods
clc
xchg
imul
repz
mov
loop
push
pop
rol
push
dec
dec
cmc
icebp
mov
and
mov
xchg
sarb
pushf
test
daa
rcrb
cli
popf
sbb
out
in
scas
xchg
and
cwtl
mov
mov
fwait
loopne,pt
mov
adc
mov
leave
into
mov
lock
testl
lahf
push
int3
test
inc
xchg
mov
adc
jge
fld
sub
mov
mov
popa
or
adc
or
mov
js
cwtl
fisubl
inc
nop
pushf
or
push
fiadds
sub
imul
sub
fcoms
es
orb
lret
push
incb
outsb
test
mov
ret
cltd
and
or
xor
xchg
push
pop
cmp
xor
adc
and
out
xor
neg
mov
xchg
xorl
inc
bound
pop
sbb
mov
lcall
pop
xor
imul
cmp
pop
adc
sbb
sub
sbb
fstps
fnstenv
adc
jne
pushf
cmpsl
clc
int
add
xchg
jnp
add
leave
add
rol
stos
xchg
arpl
call
in
arpl
fs
shlb
shlb
lods
popf
pop
inc
insl
loop
add
mov
in
shlb
adcl
xchg
jge
add
lea
jae
add
jmp
lea
and
or
push
nop
popa
fstp
mov
dec
dec
test
fs
fsts
xorl
pop
add
movsl
pop
shrl
mov
test
mov
cmc
mov
push
xor
inc
loopne
mov
sbb
imul
add
shlb
bound
imul
pop
adc
push
fdivrs
lods
inc
xchg
jg
test
fcoms
and
rolb
adc
mov
mov
sub
or
cmp
out
sbb
ficompl
fldenv
mov
mov
mov
cmp
or
fimull
out
mov
xchg
fisubs
add
arpl
jns
add
call
add
mov
push
clc
fisubrl
pop
jae
push
xor
pushf
adc
mov
repz
and
or
sbb
outsl
jp
testl
popf
popa
lcall
cmp
push
or
pop
push
add
sub
lahf
add
stos
fadd
add
jne
pop
mov
dec
bound
adc
pop
test
inc
hlt
test
dec
insl
movsb
inc
pop
lcall
pop
jb
mov
add
insl
jne
xor
mov
adc
lea
movsb
insb
cmpsb
mov
out
add
aaa
imul
inc
movsb
dec
jle
mov
data16
call
pop
insb
test
popa
mov
jp
push
ret
push
or
adc
jge
je
fcmovnb
push
push
lret
xor
sub
dec
lret
in
fstps
filds
mov
popf
sti
cmp
popa
xor
icebp
cs
pop
ret
lods
pop
mov
std
ljmp
cmc
cmpsl
test
jo
pop
ficoml
scas
nop
ficompl
mov
ljmp
inc
icebp
popa
lret
test
addl
adc
adc
cmp
jle
push
pop
loope
test
pop
lock
inc
fbld
aas
call
lock
into
cmp
lahf
int
ret
and
jae
mov
push
clc
inc
mov
mov
popf
xchg
les
pop
or
inc
sbb
loopne
add
fmul
cld
into
pop
sbb
loop
pop
inc
ret
scas
mov
cs
jo
pop
fildll
rcll
xchg
jle
inc
insb
xchg
es
outsl
jbe
sub
add
movsb
cmpsl
push
or
les
or
xchg
sbb
adc
lea
dec
addr16
imul
iret
jle
mov
or
sbb
cmc
pop
rcrl
push
sbb
loopne
inc
nop
pop
xor
fidivrs
push
popf
cltd
dec
rcrb
aad
ds
inc
xchg
mov
or
lods
mov
movsb
fnsave
nop
pop
cmp
in
rorb
lret
mov
and
cld
mov
insb
dec
add
mov
add
test
push
jl
pop
out
inc
stc
popf
cmp
xlat
adc
addb
push
aad
test
push
fildl
mov
inc
jp
adc
inc
xor
add
add
xchg
inc
pop
mov
cmpb
fmull
popa
sbb
jg
mov
cltd
test
mov
cltd
rolb
xchg
test
jnp
pop
test
lods
mov
test
mov
or
adc
addl
or
flds
or
add
adcb
add
or
add
test
xchg
pushf
xchg
xchg
int
or
test
adc
cmpsb
test
rcl
sbb
mov
test
add
mov
mov
rorl
addb
xchg
subb
xchg
adc
adc
xor
rorl
fildl
mov
xchg
xchg
enter
enter
mov
add
add
addb
dec
mov
add
mov
fwait
lret
add
and
add
test
std
loopne
sti
add
inc
popf
lret
mov
adc
lods
or
mov
fldenv
rorb
loop
add
lret
cltd
movsb
xchg
movsb
push
movsb
xchg
test
mov
rolb
repnz
xchg
adc
andl
adc
lret
test
add
mov
adc
stos
or
stos
xlat
or
sbb
mov
push
addl
xchg
adc
mov
aas
add
cmp
mov
nop
test
xchg
rorb
mov
push
mov
xchg
or
rorb
mov
jmp
outsb
mov
repnz
test
mov
in
in
shrb
pop
fidivrs
xchg
nop
popf
stos
or
loope
mov
jmp
mov
mov
rclb
icebp
add
pusha
adc
lret
sub
subb
push
lock
add
mov
sub
add
xchg
cmp
or
lds
add
xor
jbe
arpl
cwtl
fbld
inc
hlt
leave
jl
push
mov
xchg
cmpl
ret
add
loop
cmp
push
repnz
mov
jns
inc
cmp
cltd
imul
addr16
xchg
and
push
pushf
xor
push
inc
or
mov
jns
and
insb
lea
jbe
f2xm1
pushf
cmp
lea
popf
into
loopne
stc
popa
push
clc
mov
das
lock
lock
xchg
imull
xchg
in
loopne
lahf
imul
add
mov
mov
xor
or
fidivrl
aaa
mov
pushf
sarl
fcmovbe
fsubr
xchg
clc
sbb
xchg
dec
popa
adc
leave
ss
push
adc
test
leave
sub
jns
or
mov
mov
rol
fimuls
test
stos
dec
mov
shlb
xchg
mov
mov
movsl
mov
stc
rol
insl
out
mov
ljmp
and
les
mov
lret
dec
clc
mov
cwtl
arpl
in
shlb
mov
inc
test
pushf
lock
cli
aas
cmp
fwait
fs
clc
ds
in
jno
pop
add
adc
loopne
scas
stos
imul
mov
pusha
ficoms
imul
or
push
dec
mov
and
sbb
sub
test
sbb
and
nop
sbb
adc
lahf
popa
mov
and
pop
fdivl
mov
cmp
xor
shlb
gs
push
out
test
sub
inc
jns
mov
xchg
incb
cltd
inc
jo
dec
jg
inc
mov
add
fwait
loopne
lahf
add
ds
jmp
nop
ret
jle,pt
or
comiss
icebp
mov
jae
add
sahf
cli
loop
incb
scas
mov
movsb
cwtl
xor
xchg
cmp
dec
cmp
lahf
loope
add
inc
xchg
push
popa
cmc
cmp
jnp
sbb
test
jp
jle
mov
adc
inc
leave
lcall
and
xchg
int
xchg
jae
adc
mov
cs
add
add
ficompl
pop
mov
je
in
mov
test
pop
sub
test
roll
imul
dec
lock
enter
add
lahf
ret
fld
push
cli
nop
fistpl
sbb
gs
mov
jbe
push
dec
popf
fadds
push
push
inc
add
stos
cmp
lods
xchg
cmp
dec
pop
leave
hlt
lea
push
jnp
pop
pusha
push
lret
dec
xchg
add
xor
add
sbb
jecxz
pop
cs
push
out
or
dec
xchg
es
xchg
add
leave
sbb
adc
add
dec
jb
cwtl
sub
mov
adc
loopne
xorl
mov
xorb
mov
lahf
xchg
stc
test
call
lcall
and
mov
pop
fsubrs
jnp
mov
pop
fldt
jmp
aam
mov
push
xor
inc
xchg
mov
cmpsl
mov
lea
mov
or
mov
dec
movsl
mov
fcoms
push
fsub
stos
gs
adcb
push
icebp
cs
jae
lock
cs
ljmp
ja
fidivrl
subb
sbb
std
int3
shlb
popf
jo
add
cmp
ret
test
mov
pop
lea
xchg
pop
lds
add
add
mov
mov
test
adc
xchg
mov
mov
mov
sahf
mov
add
jns
mov
sub
addb
mov
adc
xor
ljmp
sbb
fwait
xchg
inc
leave
mov
cwtl
mov
inc
xor
js
cmp
add
and
lret
fs
xor
sbb
sub
add
mov
bsr
cmp
scas
push
out
mov
fdivrs
cmpb
xchg
xor
mov
and
mov
xor
xor
nop
nop
ja
mov
pop
ds
xchg
mov
xorb
cmp
pop
xchg
sub
inc
aas
mov
add
popf
ficomps
mov
xor
mov
lock
xchg
add
xchg
pop
aam
shll
push
inc
lods
ret
adc
out
lret
inc
inc
mov
jbe
nop
addr16
popa
xchg
les
and
filds
mov
sahf
loope
mov
xchg
sbb
mov
cwtl
add
lcall
test
enter
inc
jle
mov
mov
mov
jne
inc
loope
adcb
mov
sbbl
ss
out
mov
mov
fbld
scas
ficomps
mov
mov
mov
ds
out
mov
icebp
fiadds
rorl
stos
test
aas
sbb
outsl
xchg
js
mov
add
sbb
rolb
hlt
loop
xchg
ret
mov
popl
adc
cmp
sub
pop
and
aad
xchg
ds
sub
xchg
fsubl
pop
push
adc
xchg
pusha
cmc
loop
sbbb
roll
mov
outsl
add
mov
push
mov
dec
jmp
and
test
adc
fists
and
mov
sub
repz
rclb
ret
pop
addl
mov
cwtl
and
sti
pop
dec
mov
mov
jg
stos
mov
ficoms
or
repnz
loopne
mov
and
jmp
xchg
nop
jmp
cmpl
or
test
pop
and
iret
mov
jae
jg
push
sub
lea
sahf
out
mov
adc
pop
mov
addb
jg
loop
add
out
pop
add
mov
cwtl
and
jmp
jmp
adc
test
fwait
imul
adc
mov
sbb
loopne
dec
es
xchg
push
lahf
mov
js
mov
loop
leave
ret
les
mov
mov
js
add
push
int3
loop
fldl
subb
mov
cmpsl
nop
int3
stc
outsl
cmp
repz
cmc
jmp
pop
hlt
pop
xchg
dec
jo
pop
mov
orb
lea
inc
pop
add
xchg
lret
lcall
xchg
xor
pop
int
xchg
xlat
loop
jo
and
bound
jg
adc
mov
lcall
pop
add
loop
inc
cltd
mov
sub
add
cmpsb
mov
push
jno
outsl
cvttps2pi
out
nop
loop
cld
mov
push
popfw
adc
decl
adc
mov
jae
inc
js
and
adc
rorb
cwtl
incb
test
adc
fcompl
or
rdtsc
in
aas
leave
push
jmp
imul
icebp
and
iret
loopne
lahf
sub
int3
or
shll
push
xchg
loop
loopne
fs
cmp
loopne
add
loop
repz
in
xchg
and
pop
cwtl
cmc
orb
inc
aas
test
add
xchg
push
repz
sub
loop
das
outsb
ret
scas
rorl
das
outsl
push
xchg
sahf
in
filds
pushf
scas
imul
pusha
addl
loopne
xchg
loopne
or
mov
mov
addb
mov
addb
pop
or
pushf
call
add
insb
sahf
inc
adcl
jp
xlat
and
jnp
stos
inc
and
mov
andl
jg
or
lea
or
mov
push
add
test
ja
adc
test
fdivrp
xor
jns
pushf
sub
mov
jns
mov
or
add
test
mov
mov
add
or
adc
lea
movq
push
adc
add
mov
add
adc
pushf
test
or
shrl
fistl
sbb
jmp
sub
mov
push
fmuls
popa
cmpsl
les
subb
nop
testb
ret
jns
xchg
mov
out
js
push
ds
arpl
daa
add
inc
pop
adcl
pop
in
scas
sahf
mov
mov
pop
and
mov
add
push
xor
cmpb
out
mov
filds
testb
loopne
push
push
inc
repnz
pop
ror
cmpb
stos
inc
lea
aad
negl
mov
pop
pop
test
and
aam
mov
sbb
add
roll
iret
fsubrl
xchg
or
int
inc
sbb
jo
cwtl
pop
inc
cmpb
inc
je
mov
dec
jecxz
push
xlat
lods
sbbb
repnz
dec
lds
mov
mov
mull
xorb
mov
punpcklbw
clc
lods
xchg
xchg
inc
sbb
inc
cmpb
jo
sub
jbe
xorb
into
lds
fnstsw
mov
mov
addb
pusha
in
and
cmp
adcb
pop
call
pop
test
cmp
inc
out
jbe
mov
stos
fwait
scas
outsl
xor
imul
mov
aad
mov
popa
addb
mov
cmpb
ret
push
mulb
mov
subb
ficompl
jb
xor
aam
cmp
inc
cmpb
pop
add
out
rcr
lea
aaa
sbb
mov
cmpb
jnp
add
pop
sub
nop
push
les
mov
sub
xchg
inc
inc
xor
inc
cmpsl
loope
jo
pop
sbb
nop
mov
inc
and
in
enter
and
push
jp
sub
sbbb
cmp
dec
jnp
leave
xchg
xor
dec
arpl
and
jecxz
cs
test
mov
jmp
sti
sahf
fisubs
orb
push
inc
frstor
push
idiv
mov
cmpb
adc
xorb
mov
mov
mov
outsb
es
pushf
je
pusha
test
test
push
add
pop
fldl
arpl
adc
addb
movl
jge
ljmp
jmp
xchg
and
loope
ret
into
and
mov
mov
enter
and
ds
fistps
cwtl
add
or
frstor
insl
mov
pusha
mov
lock
nop
mov
daa
sbb
mov
jle
jo
mov
cmc
add
fldl
sahf
lret
mov
sbbb
fcmovbe
inc
addr16
mov
scas
push
fdivs
cs
cwtl
sbbb
cmp
add
jmp
stc
cmc
cmp
call
lea
jo
push
call
fcmovbe
dec
leave
mov
xchg
mov
mov
jnp,pn
gs
jecxz
mov
lret
out
mov
adc
sbb
loopne
or
leave
int
and
inc
and
push
test
push
and
pop
sbb
icebp
jge
dec
push
or
cmp
cmp
pop
clc
iret
push
mov
mov
aaa
fcoml
xor
jmp
jmp
leave
push
lea
call
push
pushf
lea
jb
pushf
pushl
ret
pushf
call
push
call
and
add
add
push
in
call
push
jge
mov
push
mov
pusha
pushf
lea
jmp
pop
dec
stos
sbb
mov
sub
fsubrs
adc
out
incb
cmp
loope
sbb
cwtl
push
lds
das
mov
out
fpatan
sbb
or
sahf
sub
int
lahf
imul
jmp
rcr
hlt
xchg
fwait
rcrb
sbb
jg
fwait
and
adc
inc
and
add
add
jmp
stc
pushf
cmpb
pusha
pusha
call
pushl
popl
pushl
pushl
ret
repnz
pushf
lea
jne
call
bt
stc
clc
xor
pusha
cmc
ror
pusha
mov
not
jmp
pushl
popl
movw
push
movb
mov
pushl
ret
jmp
add
inc
gs
jae
outsb
arpl
jns
je
je
add
sub
add
mov
inc
or
push
adc
adc
andb
out
inc
data16
mov
pop
lds
sbb
cwtl
jmp
xor
mov
mov
js
orl
daa
fildll
push
mov
mov
ret
shll
push
jno
jge
dec
xchg
fwait
es
add
pop
mov
movsb
loope
gs
xchg
jmp
adc
int
push
fbstp
aas
lock
in
fsubr
xor
cmp
insl
mov
jno
movsl
leave
cmp
adc
sbb
xor
stos
fisubrs
pop
out
jge
lcall
cltd
dec
or
fwait
daa
in
in
add
jae
bound
jb
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
aas
inc
push
xor
inc
dec
dec
inc
pop
add
fxam
inc
call
nop
call
je
lcall
lods
mulb
push
sahf
and
sub
sbb
jmp
add
orb
sbb
out
fld
adc
inc
jge
arpl
mov
daa
scas
adc
insb
xchg
fwait
daa
push
std
dec
movl
pushf
call
sub
btr
mov
rcr
shr
xchg
shrd
shld
mov
btr
add
clc
movsbw
bsf
add
setge
mov
pushf
sub
jno
stc
bt
shr
test
cmp
call
pushf
movl
push
mov
pushf
pushf
pushl
ret
xor
or
push
mov
cmp
jb
jmp
pop
out
ja
fldt
pop
inc
jl
scas
mov
das
jns
mov
out
jmp
ret
test
pusha
xchg
fbstp
mov
daa
int
mov
jle
out
test
adc
push
pop
mov
add
add
mov
push
movsb
mov
js
and
imul
add
add
aas
xor
arpl
je
outsl
outsb
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
xchg
les
bswap
jmp
add
outsw
jo
outsb
add
iret
movzwl
pusha
lea
not
lea
jmp
jno
jb
mov
sub
fidivrs
pop
mov
repnz
pop
out
sahf
bound
fildl
or
rolb
inc
and
cmp
lcall
jecxz
inc
lahf
jmp
out
xchg
push
insb
jno
or
in
mov
lock
mov
mov
xchg
fwait
and
pop
into
add
add
pop
inc
dec
jae
jb
add
xchg
add
mov
add
shr
mov
cmc
clc
clc
test
cmp
jmp
add
aas
aas
pop
push
inc
pop
inc
push
inc
pop
dec
inc
pop
add
add
arpl
gs
jo
imul
cs
and
push
repnz
in
cmp
dec
js
jl
fimuls
cmp
adc
lds
lcall
xchg
jg
std
cmpsb
xor
sahf
gs
add
adc
add
nop
out
clc
movsb
pop
scas
aad
push
cltd
push
add
and
inc
repz
push
mov
scas
inc
imul
lahf
mov
xchg
add
adc
idivl
dec
mov
mov
scas
xor
dec
popf
mov
xchg
cmpsb
ret
subl
mov
mov
sub
and
shr
adc
incl
add
popa
bound
push
dec
imul
popa
insb
insb
jae
ret
mov
cmp
push
js
and
pop
loop
push
mov
mov
add
push
lret
in
lahf
inc
stos
lret
xchg
ljmp
add
lock
xor
mov
sbb
mov
lahf
fisubrs
adc
mov
inc
sbb
fcoms
shrb
sahf
stos
and
inc
in
inc
push
rcll
in
popf
imul
pop
pop
pop
loopne
cmp
push
mov
sbb
or
or
arpl
pop
push
jbe
lret
jp
jns
cmpsl
mov
das
mov
dec
adc
gs
sbb
das
push
mov
inc
loop
fiadds
ret
inc
adc
mov
fwait
sub
in
loope
gs
stc
push
lock
lahf
mov
mov
adc
push
jecxz
mov
inc
xchg
aas
push
push
fabs
inc
lea
lock
sub
mov
shlb
fwait
sub
push
jne
fs
jb
popa
je
push
gs
outsb
je
popa
insb
add
pushf
push
bt
and
call
call
jmp
add
pop
arpl
pop
fs
addr16
push
add
pop
inc
dec
popa
arpl
add
fs
je
pusha
cmc
push
pushf
cmp
movb
push
pushl
lea
je
pushf
mov
lea
jmp
pushf
pop
mov
cwtl
lea
jmp
add
aas
aas
pop
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
push
xor
inc
inc
pop
add
ret
shr
pusha
lea
jmp
shr
stc
cmp
jmp
movsl
mov
push
test
inc
stos
lret
jecxz
lds
mov
int3
imul
stc
aas
mov
icebp
dec
and
push
shlb
cwtl
dec
loopne
pusha
xchg
test
dec
enter
out
ror
sub
xchg
out
mov
add
jmp
fmuls
fildl
aas
rolb
insb
or
mov
cmc
cmp
dec
adc
movsl
push
jle
dec
fdivrs
push
shl
and
in
or
pop
in
push
ss
push
stc
ficomps
sahf
scas
xor
adc
add
testl
sbb
mov
add
sbb
test
repnz
pop
sub
test
test
sub
jnp
fidivl
cmp
sub
outsl
mov
jmp
mov
mov
shl
dec
lods
jmp
sbb
jns
gs
sti
jl
sti
jo
cmpsl
ds
xor
in
ret
fs
mov
adc
fwait
clc
fldenv
push
dec
adc
mov
and
adc
inc
adc
mov
sbbb
shlb
mov
add
push
mov
scas
in
xor
sub
pop
and
test
lahf
fiadds
aas
scas
pop
lods
pop
jb
xchg
fwait
sub
push
ss
call
push
out
shll
rorb
mov
pusha
shl
call
pusha
push
jne
xchg
mov
sub
add
jge
xor
pop
or
insl
inc
cwtl
xchg
mov
rorb
mov
mov
sbb
and
mov
stos
cmovbe
pop
je
aaa
jae
or
sub
loop
or
push
imul
push
lods
sbb
xor
dec
jo
shrb
pop
cli
sarl
jecxz
pop
push
stos
imul
jecxz
call
addl
lret
test
pop
xor
mov
insl
sbb
mov
out
cmc
rcrb
stos
pop
add
push
xchg
xor
push
xchg
mov
sub
push
xchg
inc
enter
andb
cs
pop
jmp
pushl
lea
je
ror
or
mov
not
bt
sub
movzbw
rcr
shr
jmp
insl
adc
test
sarb
cmovle
jne
je
mov
jae
and
pop
ljmp
dec
cli
lds
push
hlt
popa
aad
inc
jae
popa
test
jns
sbb
add
jno
outsl
lret
outsl
or
int3
xor
mov
mov
ror
and
rol
sub
stc
mov
call
les
pop
int
push
test
push
rcrl
fwait
and
les
sahf
xor
xchg
cmp
lahf
das
sahf
inc
movsb
inc
icebp
add
jno
jle
cltd
push
mov
insb
mov
ret
fwait
das
adc
pop
pop
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
add
add
jae
popa
addr16
outsl
js
add
add
outsl
data16
shlb
and
dec
pushl
pusha
call
pushf
pushf
cmpb
jmp
sub
je
xchg
fstpt
xor
mov
or
mov
sahf
adc
lds
and
js
or
dec
jns
push
lea
lahf
clc
imul
fwait
adc
roll
dec
repnz
mov
inc
bound
lahf
fisttps
cmp
jmp
inc
mov
je
dec
addr16
adc
fwait
mov
jb
jg
pop
aaa
lahf
mov
xchg
lahf
and
pop
out
rorb
lret
fsubrs
inc
jge
scas
xor
out
mov
into
inc
fcoms
fwait
sub
daa
je
mov
dec
sahf
leave
or
or
jmp
test
mov
js
test
jno
xor
mov
aam
push
and
sti
cld
stc
int
in
dec
adc
sub
ss
push
bound
and
ss
adc
rcll
das
and
aam
add
mov
jmp
mov
mov
jne
lds
jo
mov
pop
iret
inc
mov
addr16
xchg
fwait
sub
test
lcall
pop
jae
in
dec
mov
or
push
mov
fwait
outsl
movsb
jno
jns
mov
inc
mov
and
pop
mov
cwtl
mov
cmpsb
sub
jno
vpand
push
ret
sbb
and
sbb
or
cli
test
inc
addl
sbb
sub
stos
int3
cmp
mov
lahf
ljmp
sub
push
add
mov
addl
and
lock
push
xchg
fwait
sub
fisubrs
add
cmpsl
out
add
iret
repnz
sbb
out
sbb
loop
xchg
jne
push
xchg
popa
add
pop
mov
mov
ror
jno
imul
in
fistps
daa
ljmp
aad
cmp
fnstsw
or
sbb
sub
sub
xor
push
push
inc
sub
mov
push
inc
xor
sbb
popa
push
push
inc
cmp
sbb
or
dec
xchg
adc
in
xchg
mov
or
sub
hlt
xor
test
sub
xchg
fwait
rorb
mov
enter
cmc
jbe
mov
and
xchg
nop
add
jb
outsb
mov
inc
xchg
mov
xchg
hlt
mov
aaa
data16
pop
arpl
dec
ljmp
popa
out
cmp
bound
out
inc
mov
mov
xchg
repz
divl
xchg
mov
or
inc
mov
xor
fwait
shl
add
call
setne
lea
jae
lea
jmp
test
cmc
cmp
jmp
icebp
and
add
and
mov
mov
inc
mov
rolb
add
mov
jbe
dec
xor
clc
pusha
daa
jg
push
jle
shll
popa
push
pusha
icebp
add
adcb
pop
lock
pop
cs
stos
loope
push
adcb
ret
fiadds
nop
add
xchg
pop
stos
loop
pusha
xchg
mov
loopne
ret
cltd
pop
adc
sbb
inc
add
test
and
push
jecxz
pop
jg
cmpsb
cmpsl
dec
pop
jmp
push
mov
and
xchg
test
cld
mov
cmpb
loope
test
inc
add
pop
add
iret
xchg
sbb
jecxz
cld
xchg
add
scas
lds
jg
lcall
inc
sbb
or
cmpsb
pop
xorl
dec
sub
int
loopne
mov
and
pop
mov
enter
arpl
pop
xchg
jecxz
push
and
add
add
add
shrb
icebp
pop
mov
sahf
jl
pop
cmp
lret
mov
test
mov
mov
test
popf
test
inc
jg
scas
shr
inc
dec
sarb
call
jle
sahf
cmpsl
pusha
cmp
shll
imul
in
add
dec
shlb
shrb
test
jnp
add
add
add
test
xor
pop
aas
test
icebp
mov
cmpl
mov
cs
shlb
enter
pusha
sbb
add
mov
test
xlat
cmp
xchg
in
lcall
cwtl
sahf
adc
add
add
popa
sarl
ja
nop
fdiv
js
shrl
mov
addb
cltd
mov
fdivrp
xor
lock
imul
mov
push
ret
add
mov
movsl
shl
mov
aaa
xchg
ljmp
aam
pop
xlat
xchg
lea
sbb
xor
mov
pop
mov
movsb
mov
stos
jg
data16
lods
dec
push
or
leave
icebp
pop
add
stos
lret
push
lea
or
fwait
divl
mov
push
lcall
arpl
mov
add
test
icebp
mov
mov
int3
add
fsts
jbe
adc
mov
add
popf
ficoml
xchg
inc
xchg
sahf
stos
shlb
pop
push
jecxz
jmp
lea
mov
lret
or
add
sbb
popf
xchg
sar
lods
mov
mov
xor
lock
mov
cltd
mov
sbb
ja
ret
nop
xchg
jno
or
add
popf
mov
imul
mov
inc
cltd
scas
push
xchg
int3
inc
adc
or
ret
dec
dec
sarl
mov
add
xchg
and
mov
and
test
mov
adc
rclb
das
sbbl
add
xchg
mov
shlb
or
stos
dec
push
fadds
add
push
dec
test
in
adc
mov
hlt
nop
xchg
out
pop
add
jno
lock
es
test
outsb
popa
lret
dec
out
add
inc
inc
push
insl
addr16
in
pop
in
insb
inc
daa
add
popa
push
cwtl
cltd
rolb
lea
dec
lock
loope
push
roll
add
add
xchg
mov
insl
fxch
popa
jmp
pop
add
inc
pop
add
lret
mov
xchg
rcrl
insl
jmp
fimuls
jl
inc
sbbl
fmuls
cld
roll
jge
pusha
mov
adc
or
pusha
ret
xor
mov
add
mov
outsl
sbbl
inc
aad
xor
sbb
pop
ret
dec
inc
int3
cwtl
clc
out
fiadds
bound
notb
outsb
adc
add
nop
out
add
js
or
cmp
shrl
xchg
sub
and
insb
lret
addb
cld
dec
cmp
rclb
stc
mov
mov
mov
add
adc
dec
push
mov
xchg
push
add
add
jae
movsl
add
sbb
cltd
push
mov
inc
jnp
popa
les
add
loopne
lret
ret
jnp
loope
fnstcw
xchg
movsl
cltd
rclb
dec
pop
sub
and
adc
call
jo
hlt
push
xchg
cltd
mov
add
pop
add
xchg
pop
cmp
movsl
es
cli
jo
xchg
mov
xchg
jg
test
flds
or
lea
cmpsb
dec
xchg
in
jle
wrmsr
icebp
and
cwtl
cwtl
add
xchg
adc
xor
mov
mov
xchg
test
test
andb
sbb
mov
icebp
pusha
mov
test
mov
push
iret
nop
mov
mov
iret
inc
xchg
les
push
andb
mov
cwtl
popa
cmp
daa
push
mov
nop
bound
push
push
dec
xchg
add
xchg
in
movsb
icebp
daa
pop
out
ret
xor
and
gs
js
movsl
lahf
cmp
mov
mov
push
push
dec
ret
popf
enter
in
or
clc
jecxz
mov
lods
mov
loope
mov
loopne
and
kmovb
ja
add
call
mov
pop
xlat
xchg
stos
cmp
mov
cld
frstor
orl
cltd
inc
inc
mov
out
dec
sahf
clc
pop
clc
imul
aas
pop
iret
gs
jmp
sbb
push
enter
loopne
and
movb
dec
add
sbb
in
je
push
popf
fsubrl
andl
clc
fwait
mov
sub
mov
shr
adc
xchg
sti
ljmp
cli
jo
mov
enter
mov
add
test
xor
lds
mov
and
add
mov
ret
sbb
divl
jno
add
inc
lret
or
xor
dec
loopne
std
inc
xchg
addb
pushf
in
aaa
test
scas
cwtl
or
je
inc
sbb
dec
shl
mov
imul
cmp
mov
mov
mov
sbb
or
add
flds
inc
lock
push
cmpsl
inc
ret
jecxz
adc
and
inc
sbb
pop
rolb
adcl
inc
rcrl
test
popf
push
loope
adc
insl
rol
outsb
popa
icebp
push
mov
mov
addr16
xchg
mov
inc
xchg
xchg
sbb
xchg
ret
lods
stos
and
ret
add
add
mov
rol
loop
push
jno
push
xchg
adc
sub
sbb
dec
js
inc
dec
cmp
dec
clc
insb
xchg
sbbl
inc
or
push
mov
popa
xchg
lock
fiaddl
aad
and
ret
sub
je
inc
cmp
cmp
test
in
sbb
mov
test
aam
lods
call
jae
mov
add
cli
or
fadds
mov
push
and
fnclex
add
or
adc
daa
inc
cmp
pop
jmp
out
in
lock
mov
cmp
lods
ret
negb
mov
mov
cwtl
xchg
jecxz
inc
mov
mov
pop
cs
loopne
push
add
cmpsb
and
pop
mov
xchg
push
xchg
mov
mov
xor
pop
mov
call
cli
mov
addr16
imul
icebp
and
jmp
mov
scas
mov
xorb
and
pushf
mov
dec
add
lret
mov
cmpsb
aaa
test
nop
rorb
rorb
push
clc
mov
sbb
dec
push
rol
pushf
dec
mov
nop
nop
shrb
inc
jg
mov
xor
dec
rcll
dec
loope
add
test
lods
icebp
je
add
sub
nop
rorb
pop
sbb
or
pop
mov
enter
add
and
pop
mov
jle
in
std
cmpb
rorl
sbb
clc
out
out
add
inc
mov
mov
mov
xchg
and
enter
andb
repnz
or
mov
adc
int
dec
inc
mov
andb
lock
outsb
insl
inc
jg
xor
mov
not
in
and
bound
mov
jmp
cmpsb
adc
xchg
mov
out
es
xor
and
orb
ret
jg
add
imul
repnz
xchg
push
sbb
or
add
dec
into
cwtl
out
add
lock
push
test
mov
sub
mov
cltd
adc
fimull
out
sahf
xchg
sbb
arpl
lret
lock
sbb
pop
lahf
push
sub
dec
mov
sbb
subl
mov
adc
inc
mov
out
cmpsl
int3
xor
pop
mov
mov
mov
and
mull
xor
and
add
icebp
sti
adc
sbbb
orl
lfs
mov
push
adc
enter
movsb
or
addr16
xchg
mov
cltd
or
sbb
in
fimuls
mov
movsb
pop
or
dec
ret
enter
movsb
or
xchg
mov
flds
sbb
mov
popa
xor
cs
dec
jecxz
test
add
xchg
or
data16
les
or
ljmp
mov
dec
les
or
icebp
mov
ret
xchg
ljmp
fwait
lea
mov
popf
mov
or
pmulhuw
xchg
mov
mov
inc
or
mov
xor
mov
call
or
shrl
dec
xchg
adc
shll
mov
inc
mov
sarl
lock
mov
add
dec
lahf
lahf
adc
inc
mov
sub
dec
addl
push
cmpsl
xor
shll
xchg
inc
ljmp
incb
movsb
sarl
and
pop
dec
xchg
shll
and
xor
sub
inc
dec
movsb
lahf
cmpl
push
movsb
xor
shll
addl
sti
adc
add
inc
sbbl
inc
ljmp
mov
enter
dec
sahf
xchg
pushf
cltd
inc
mov
enter
dec
mov
mov
inc
mov
jge
dec
sbb
movsb
pop
cltd
inc
mov
enter
dec
sahf
xchg
xchg
cltd
inc
mov
enter
adc
ret
movsb
xchg
sbb
mov
shll
adc
dec
movsb
xchg
cltd
inc
mov
enter
add
fisttpll
xchg
sbb
inc
cmc
mov
add
dec
in
movsb
cltd
inc
ja
add
xchg
les
jge
call
arpl
fidivl
sbb
cmpsl
ret
test
push
mov
sbb
cmpsl
ret
test
sub
mov
inc
inc
mov
shll
xchg
cmp
addb
add
adc
inc
outsl
dec
scas
lahf
pop
push
inc
sub
dec
sbb
inc
or
shll
xchg
lahf
enter
call
es
shl
dec
addl
jge
rcll
mov
movsl
insb
dec
sbb
cmpsl
ret
test
sub
dec
movsb
xchg
mov
mov
in
add
shrl
sti
sbb
inc
lea
xor
imul
mov
xor
jp
roll
add
sbb
movsb
nop
cltd
inc
mov
enter
dec
mov
xchg
mov
inc
jmp
dec
lahf
xchg
stos
clc
dec
std
xchg
mov
inc
inc
and
adc
sbb
adc
mov
das
imul
ja
shll
or
push
dec
call
scas
adc
dec
imul
and
fldl
inc
out
shrl
inc
dec
movsb
lahf
mov
add
cmp
pop
out
mov
or
cmpsl
ret
test
sub
inc
dec
movsb
mov
lret
inc
les
fcoml
pop
clc
mov
push
jecxz
dec
sbbb
or
roll
subl
cmp
shll
xchg
pop
jo
inc
sub
dec
sbb
adc
mov
roll
pop
sbbl
inc
out
imul
aaa
enter
dec
sahf
xchg
mov
jecxz
adc
shll
xchg
jge
xor
cmpsb
xor
sbb
mov
inc
std
roll
dec
stos
or
in
push
dec
call
xor
shr
dec
fcompl
or
shll
xchg
jp
xor
mov
fbld
mov
inc
adc
pop
movsl
mov
movsl
jmp
ret
test
sub
inc
dec
movsb
lahf
mov
add
push
dec
pinsrw
add
add
mov
inc
scas
push
dec
mov
shll
xchg
xchg
or
or
xchg
cs
add
dec
lahf
lahf
adc
cmp
sub
xor
or
leave
je
scas
lcall
sarl
or
inc
lods
pop
dec
cwtl
jo
inc
sub
add
lahf
adc
adc
ljmp
cmp
ret
movsb
xchg
cltd
inc
shll
add
jle
fimull
ficoms
add
shl
add
xchg
int
xchg
xor
sub
sbb
sub
int
jbe
mov
call
and
sub
mov
bound
rorl
mov
cwtl
inc
andb
sub
cmpl
sbb
add
cwtl
mov
lock
push
icebp
and
mov
add
repnz
mov
add
nop
add
jae
jmp
xchg
sbb
test
ds
or
add
gs
mov
mov
add
clc
mov
xchg
and
inc
nop
dec
xor
pop
movsl
inc
clc
xchg
fildl
mov
popa
push
xorb
fisubrs
xchg
andb
mov
outsl
add
or
and
mov
shlb
xchg
lock
xchg
mov
addl
arpl
pop
mov
fcomps
push
lods
movsb
add
xchg
mov
shl
rcll
andb
sbb
sbb
and
lahf
add
scas
inc
sub
shr
or
imul
xchg
push
std
movsb
fisttpl
nop
rorl
and
jno
loop
lea
pop
mov
cmp
inc
cltd
orb
push
xor
dec
dec
xchg
scas
xor
or
add
push
push
xchg
lods
inc
mov
pop
test
shr
lds
sub
roll
push
int3
mov
je
mov
mov
movsl
and
mov
rol
and
add
add
mov
mov
ret
xor
mulb
cwtl
xchg
inc
cmp
pop
enter
ret
stos
mov
cltd
add
mov
aad
daa
xchg
inc
cmp
pop
xorl
je
mov
adc
xchg
xchg
mov
lds
test
and
add
mov
mov
jno
mov
or
aas
lret
mov
ror
and
mov
lret
mov
adc
and
or
and
add
mov
bound
test
mov
xchg
adc
mov
and
mov
xchg
icebp
das
adcl
or
js
xor
nop
inc
xor
mov
stc
sbb
pop
shlb
lea
sub
or
vminps
test
push
les
fisubrs
lds
xchg
and
jecxz
dec
and
sub
lret
add
sbb
lock
stos
test
inc
test
lods
or
clc
imul
xchg
lods
loope
call
out
loop
shll
xor
push
push
lea
popf
xor
ror
lea
out
in
fs
and
cltd
xchg
push
negl
mov
aam
xor
adc
add
inc
leave
add
sub
xor
fildl
cwtl
push
enter
or
dec
mov
shll
imul
roll
popa
adc
push
ret
inc
sbb
cwtl
shlb
add
sbb
push
std
addr16
das
test
dec
hlt
cmpb
xchg
mov
iret
or
xchg
das
sub
mov
inc
jne
popf
mov
add
mov
push
in
push
rcrl
xchg
add
lret
cltd
ret
fmuls
inc
mov
popf
mov
mulb
inc
data16
jmp
decb
scas
inc
xchg
push
arpl
xchg
push
subl
xchg
xchg
mov
add
add
mov
or
xor
mov
jecxz
sar
xchg
or
jl
add
ret
sub
out
ficomps
ja
sbb
add
add
mov
sub
mov
lahf
mov
popf
loopne
jp
arpl
cs
cmpsb
sti
movsb
push
nop
lds
in
add
mov
cwtl
adc
popf
cli
data16
add
mov
push
hlt
mov
data16
mov
lock
push
adc
push
addb
mov
mov
popf
call
popf
out
nop
add
movsb
popf
in
cwtl
fadds
loop
rolb
cmpsb
popa
movsb
andb
cwtl
fisttpl
addl
mov
and
mov
mov
xchg
adcb
dec
inc
add
andb
orb
orb
add
pusha
cmpsb
jecxz
andb
adcb
push
orb
addb
movsb
mov
orb
cmpb
cmpb
andb
mov
andb
orb
orb
add
mov
mov
xchg
adcb
push
orb
loope
in
orb
orb
addb
addb
mov
xchg
adcb
push
orb
adc
addl
mov
fwait
and
addb
adcb
push
orb
addb
movsb
mov
orb
addb
andb
add
addb
orb
stos
in
mov
xchg
adcb
push
orb
add
mov
pop
add
cmpb
mov
push
movb
mov
push
push
cmpb
mov
subb
adcb
push
orb
ret
addb
addl
mov
or
andb
adcb
push
orb
addb
movsb
mov
mov
ret
cmpb
mov
xchg
pop
lea
ret
mov
pop
push
dec
and
add
andb
orb
orb
add
mov
mov
xchg
adcb
push
orb
jmp
orb
orb
addb
orb
dec
movsb
fdivp
sbb
xchg
sub
popf
and
dec
and
xor
push
mov
and
pop
jl
popl
test
cmp
xor
push
dec
ret
push
xor
cmp
sub
push
pop
movsl
sub
popf
sub
push
inc
loop
cmp
dec
mov
adc
cmp
loop
sbb
pop
mov
add
inc
sbb
dec
mov
xor
sbb
inc
xor
push
cs
sbb
sub
insb
pop
xor
sbb
bound
sbb
dec
mov
shll
mov
sbbb
push
loope
cli
pop
pop
inc
cmp
pop
sahf
cmp
adc
cmp
adc
ss
adc
xor
adc
xor
adc
xor
adc
cs
adc
sub
adc
sub
push
inc
fwait
sub
push
inc
fwait
es
push
dec
fwait
and
repnz
ret
out
enter
push
int3
and
jmp
int3
ds
pop
int3
cmp
jmp
int3
cmp
out
inc
int3
cmp
out
inc
int3
ss
dec
int3
xor
out
dec
int3
xor
out
push
int3
xor
out
push
int3
cs
pop
int3
sub
out
pop
int3
sub
out
inc
int3
sub
out
inc
int3
es
dec
int3
and
out
dec
int3
and
out
push
int3
and
out
push
int3
ds
mov
mov
mov
mov
mov
mov
mov
mov
es
loope
mov
mov
mov
mov
mov
mov
mov
lcall
pop
icebp
cmp
lcall
dec
icebp
xor
cmp
xor
lcall
pop
icebp
sub
cmp
sub
mov
mov
dec
pop
cmpsl
pop
arpl
ret
insl
ljmp
xor
lock
push
mov
lods
add
jg
pushf
test
sbb
cmpb
arpl
xchg
fsubl
loope
xchg
orl
lods
lods
dec
pop
xor
test
mov
sbb
push
and
mov
xor
lea
insb
and
or
inc
lock
out
inc
test
std
sahf
mov
daa
mov
fadds
loope
nop
sarl
repz
les
xchg
cltd
adc
jne
mov
and
add
insb
jne
in
dec
loope
testl
test
sarb
push
add
adc
mov
sbb
fstps
xchg
cltd
sub
jae
jne
and
nop
aaa
addl
and
cwtl
ss
outsl
inc
push
imul
mov
popf
int
xchg
ror
inc
mov
fisubrs
int3
pop
ret
mov
lods
les
cwtl
test
nop
sahf
push
and
xor
mov
and
mov
mov
daa
add
sahf
xor
es
sbb
and
icebp
mov
push
cwtl
arpl
adc
and
mov
mov
fsubrl
or
js
subl
mov
ja
aas
sbb
cmc
or
cltd
xchg
xor
icebp
mov
lea
sti
insb
push
iret
add
fimull
add
mov
push
xor
in
xor
jmp
push
pop
hlt
lahf
sub
je
sub
ret
fldl
insl
cmpsl
sarl
pop
stos
and
hlt
add
or
hlt
mov
test
adc
push
cmp
int
scas
dec
icebp
sahf
sbbb
xchg
imul
sub
adc
sbb
sarl
popf
inc
mov
jge
jns
test
cli
sub
pmaddwd
loope
xchg
add
lods
xchg
inc
in
adc
ja
or
dec
mov
mov
and
cltd
adc
and
push
pop
xchg
or
adc
cs
test
xchg
lcall
cmp
lldt
and
adc
test
inc
and
pop
and
popf
out
cwtl
call
push
lret
add
and
aas
xlat
pop
popa
mov
push
aam
icebp
popa
dec
add
jecxz
pop
pusha
mov
hlt
clc
fwait
pushf
adcb
and
popa
aaa
pop
jo
popf
nop
mov
mov
xchg
imul
mov
iret
sbb
add
cwtl
adc
cwtl
pushf
mov
mov
test
lahf
jnp
xchg
sub
int
pop
stos
lret
andl
jnp
fiaddl
jnp
cmp
mov
in
lods
cmp
out
movsb
add
adc
mov
dec
xchg
aad
mov
test
and
pop
rclb
xchg
push
clc
cmp
adc
loopne
icebp
dec
sub
lds
outsl
pop
rep
test
mov
add
adc
xor
add
or
pop
arpl
cmp
popf
cmc
jg
js
imul
add
fadds
movsb
mov
fs
loopnew
mov
cmp
clc
cwtl
scas
and
mov
pusha
popf
jnp
inc
std
and
mov
mov
mov
cmp
cmpsb
and
dec
cli
in
mov
mov
cld
clc
mov
aad
mov
out
inc
stos
xchg
mov
mov
add
mov
lock
push
lcall
cltd
xchg
into
sub
out
shrb
loope
mov
seto
mov
pushf
imulb
push
add
test
add
mov
mov
jge
mov
mov
mov
mov
push
cli
es
dec
mov
or
mov
add
sbb
mov
jmp
push
xchg
jae
out
add
xor
out
aam
sbb
fnsave
sub
mov
out
adc
jmp
ljmp
mov
mov
add
cmp
aam
xor
movsb
lret
mov
push
fwait
dec
xlat
mov
fnsave
das
mov
stc
and
cltd
add
enter
fdivr
cwtl
hlt
mov
mov
add
xchg
daa
std
or
cmpsl
andl
out
adc
mov
xchg
xor
mov
mov
shlb
das
and
inc
icebp
mov
rcll
adc
add
push
cltd
nop
std
sbb
xor
fists
or
add
ss
adc
cmpsl
int3
jbe
in
mov
dec
and
pop
pusha
das
xchg
test
int3
daa
push
mov
and
mov
jns
inc
fs
shrb
adc
cltd
or
inc
mov
stos
inc
add
xchg
xchg
insb
hlt
dec
mov
cltd
add
xchg
in
xor
fsubl
xor
cmpb
and
fisubrl
xlat
push
pop
arpl
movsl
pop
insl
mov
push
mov
pop
xchg
stos
pop
lods
mov
or
mov
loop
xchg
outsb
lea
icebp
sub
lods
xor
dec
lret
out
outsl
xchg
push
sub
shrl
pusha
mov
testb
mov
pop
xchg
sahf
lcall
dec
scas
popf
test
popa
adc
pop
sbb
and
test
push
popf
sub
hlt
xlat
xchg
aaa
dec
arpl
int3
je
inc
popa
sti
push
shlb
or
adc
mov
das
sbb
lods
sub
roll
mov
xor
movsb
sbbl
leave
out
jne
sbb
je
mov
sub
sub
out
add
add
mov
shrb
cmp
out
pop
arpl
fstpl
push
inc
nop
in
js
sub
mov
gs
add
bound
call
mov
mov
outsl
mov
loope
std
rolb
pop
cs
sub
lret
sub
or
xchg
ret
pop
lcall
push
adc
cmpsl
push
orl
test
mov
cwtl
or
movsb
adc
ficoms
lea
rol
jae
popa
push
fsubr
out
mov
add
xor
nop
daa
repz
or
es
lock
sbb
orb
or
lret
xchg
enter
add
mov
add
dec
cmp
and
xchg
lret
add
cmpsb
rcrl
sbb
test
lods
sahf
mov
popf
push
pop
sbb
scas
add
shlb
ror
push
mov
test
test
leave
sbb
mov
stos
in
int
mov
aam
dec
or
sti
pop
andl
sbb
mov
dec
mov
or
add
in
ret
fwait
lds
in
xor
out
pop
mov
bound
outsb
or
jbe
and
fidivrl
arpl
xor
xchg
xor
nop
push
clc
cmpsl
xchg
inc
mov
or
xor
mov
out
xor
adc
xchg
mov
aas
cmp
daa
mov
into
adc
ret
pop
cmp
sub
inc
jmp
jp
or
fadds
mov
test
cmp
mov
jecxz
or
mov
out
sti
mov
roll
aam
or
add
pop
inc
test
notl
xchg
shlb
adc
inc
test
test
push
or
popf
cmp
out
cli
and
dec
lds
sub
in
adc
pop
xchg
test
rol
cmpb
mov
ja
fidivs
xchg
fiaddl
xchg
cmp
test
push
addl
push
ds
popf
mov
cmp
test
xor
scas
rcl
and
mov
test
inc
mov
daa
mov
sbb
lret
ja
push
aam
pop
popa
xchg
pop
mov
ss
mov
das
adc
push
mov
xchg
addb
lea
mov
add
cltd
mov
std
popa
jmp
xorl
jns
les
scas
inc
repnz
fimull
pop
push
inc
sub
int3
repnz
subb
xchg
xchg
movsb
test
jecxz
pop
sbb
or
or
or
out
push
in
adc
jl
mov
add
lret
test
cmp
cmpsl
andl
sbb
sub
gs
outsl
fmull
movsb
adc
mov
cs
rorb
xlat
subl
out
icebp
jmp
lods
scas
lret
lahf
inc
ds
rcll
fs
sahf
mov
cmc
add
xchg
adc
and
mov
fcmovnu
dec
mov
mov
leave
movsl
add
xor
dec
rolb
sub
mov
xchg
popa
mov
cmp
add
cmpsb
orb
xor
aad
dec
sbb
lods
add
stos
and
push
aad
lods
int3
adc
loop
or
adc
mov
mov
adc
sbbl
roll
pusha
lahf
out
xchg
dec
daa
shll
int
cmp
fadds
xor
sahf
addb
mov
sbbl
and
push
in
push
sahf
loope
movsb
cmp
mov
xchg
xchg
lods
inc
inc
push
mov
pop
and
fucomp
fimull
bound
cs
sbb
or
add
add
mov
jg
and
fdivs
test
mov
mov
and
aam
mov
shlb
fldt
pop
je
add
and
add
and
int
push
cmpsl
pop
and
movsb
popa
sahf
mov
cmpsb
add
push
dec
inc
push
popf
add
rcrl
dec
daa
in
notl
scas
test
gs
sub
xor
icebp
sub
lods
addl
add
hlt
fs
push
sahf
mov
mov
lret
or
aam
lea
int
movsb
das
popf
mov
fsubr
sub
push
shr
dec
test
xor
fisttpl
ss
sub
rcr
fdivrs
lret
mov
push
lret
movsl
add
mov
out
sub
sub
stos
int
lret
mov
push
xchg
mov
popf
pop
mov
mov
repz
popf
push
insl
test
out
dec
ljmp
popa
mov
icebp
cmp
jo
fadds
loope
nop
dec
sbb
mov
outsb
cmp
jno
mov
or
mov
xchg
or
lahf
or
int
andl
push
cli
in
push
jl
sbb
divl
dec
inc
or
inc
adc
je
mov
dec
cmp
fwait
loopne
dec
push
xchg
lock
out
xchg
cmpsb
sub
and
mov
mov
shl
add
inc
lds
andb
xchg
std
mov
mov
mov
cmp
inc
dec
lea
clc
js
and
xchg
orl
in
iret
lock
inc
mov
sarb
mov
mov
pusha
mov
cmp
lret
enter
mov
arpl
sbb
mov
mov
les
mov
std
mov
and
repnz
sub
mov
clc
dec
push
daa
sbb
push
inc
sbb
es
pushf
mov
loopne
sub
insl
cwtl
loop
and
xchg
out
inc
inc
cmpl
addl
mov
test
cli
mov
arpl
fstps
and
xchg
and
add
mov
mov
lods
repnz
stos
xchg
mov
xchg
lret
xchg
adc
mov
ret
cmp
test
stos
or
pop
add
pushf
std
test
aam
test
cli
xchg
enter
fwait
jae
and
or
mov
test
adc
out
js
mov
xor
jno
add
out
lock
inc
mov
dec
adc
cwtl
push
add
pop
mov
add
out
dec
les
or
xchg
mov
ret
lods
sbb
cmp
nop
dec
mov
dec
mov
pop
dec
add
mov
pop
test
inc
lret
mov
jecxz
adc
mov
pop
je
dec
push
sar
scas
inc
add
mov
or
rcrl
mov
dec
inc
dec
aas
dec
sbb
pop
dec
xorl
dec
cmpb
mov
insb
mov
cmp
out
or
cli
dec
xor
pop
cmp
fldl
push
popf
sarl
lds
adc
popa
add
cmp
adc
mov
clc
push
shlb
mov
push
pusha
or
testb
pusha
mov
cltd
mov
cmpsl
inc
mov
out
repnz
or
lock
ret
add
add
mov
mov
jnp
xor
add
xor
xchg
ret
inc
popf
jp
mov
inc
shlb
das
mov
loopne
sahf
pop
out
decb
pop
imul
or
stos
cli
rolb
mov
aas
cmp
mov
sahf
push
arpl
stos
fdivrs
popf
inc
fistps
ret
stos
cmpb
mov
xchg
dec
inc
rclb
cmp
mov
testl
push
in
js
popf
loope
incl
pusha
mov
push
jo
into
add
xor
lahf
ljmp
mov
aaa
adc
xchg
cmp
add
icebp
or
inc
pop
mov
fnstsw
add
mov
dec
adc
andb
loop,pn
rclb
mov
mov
stc
lahf
mov
ljmp
loopne
out
das
ret
dec
lret
or
push
add
and
dec
sub
or
test
es
sbb
sbb
mov
xchg
rolb
in
pop
scas
rol
cmpsb
mov
rolb
inc
push
clc
rcr
or
jmp
sbb
and
rolb
xchg
push
cmp
lret
cmp
ja
stos
clc
inc
test
add
int
bound
mov
addr16
cli
outsl
fistpl
leave
add
fsubl
add
push
jo
xor
push
inc
pop
mov
cltd
incb
stos
or
mov
sub
mov
cmp
lea
sbb
lds
add
push
in
add
push
pop
fldenv
mov
dec
aaa
clc
push
in
stos
xchg
in
cmp
test
stos
es
and
push
imul
lds
dec
add
mov
arpl
inc
test
addb
adc
xchg
ret
mov
fs
icebp
cld
lcall
fidivl
rolb
xor
cwtl
clc
pop
sub
xorl
jg
and
rcrb
mov
lcall
inc
mov
or
popf
and
cld
add
les
and
inc
add
xchg
add
fcompl
in
cltd
subl
mov
xchg
mov
cmpl
ds
lods
test
fwait
sbb
cmp
push
xchg
dec
lods
fldenv
dec
add
xchg
fadds
addr16
pushf
or
pop
clc
cmpsb
sbb
cmp
pop
rcll
stc
cmpsl
mov
out
les
adcb
mov
or
loop
mov
scas
cld
pop
cmp
sub
push
xchg
mov
sbb
push
movsb
push
adc
sub
dec
add
fwait
icebp
popf
dec
in
cmpsl
and
and
add
mov
cmpb
aaa
test
mov
js
sub
into
add
add
stos
mov
inc
lret
mov
push
mov
js
xor
dec
ficomps
xor
sbb
inc
dec
shlb
add
pop
or
test
cmp
scas
mov
into
pop
std
and
hlt
mov
adcb
dec
cmpsl
ja
test
popa
stos
sub
aaa
lock
sub
jbe
leave
dec
lcall
push
inc
jno
push
and
inc
add
addl
xor
jge
inc
stos
test
cltd
ret
cmpsb
xlat
mov
lret
sbbb
ret
pop
or
aad
nop
andl
sub
mov
dec
mov
cwtl
ds
mov
pop
out
pop
push
inc
push
or
mov
add
scas
push
sub
lods
bound
ret
sbb
mov
ss
inc
insl
pop
sub
imul
inc
push
jmp
pop
aaa
and
xchg
enter
daa
fsubs
xchg
sbb
sub
and
les
adc
inc
and
xchg
mov
push
rcll
add
shll
mov
dec
mov
test
call
mov
inc
mov
push
mov
jmp
dec
test
mov
dec
ret
pop
rol
pop
les
popl
fcmovnb
lahf
mov
add
push
inc
ror
mov
or
mov
movsb
push
xchg
shrl
test
rcl
test
and
dec
mov
or
int3
mov
or
dec
push
mov
or
test
rol
xchg
rorl
test
mov
add
mov
lret
add
push
roll
xchg
rol
test
movsb
xchg
sbb
lahf
sub
rorl
mov
fcom
test
ds
test
mov
mov
loop
mov
iret
ljmp
clc
add
icebp
es
mov
inc
or
in
pop
jmp
aam
adc
stos
adcl
inc
movsb
sbb
inc
and
das
enter
and
and
add
pop
je
xchg
pusha
hlt
mov
repnz
call
roll
popf
add
cmpsl
jp
xor
dec
ficompl
cmp
cmc
dec
sub
push
or
xlat
mov
pop
in
jbe
fs
cmp
addl
or
pop
push
adc
jo
fwait
or
out
mov
mov
rorb
dec
push
cld
iret
adc
mov
leave
in
xor
test
fisubrl
pusha
add
mov
rorb
test
mov
dec
cld
sub
xchg
jl
inc
shl
cmpsb
mov
jp
test
or
repnz
push
movsl
ret
jb
mov
pop
rcr
mov
push
add
rorl
stos
mov
rolb
popf
movsl
clc
fldl
and
lods
add
test
sub
mov
push
xchg
jecxz
dec
add
mov
inc
stos
dec
rcll
xchg
ret
movsl
int
and
test
int
adc
push
aas
dec
mov
lret
cmpsb
test
add
cmp
mov
sbb
aas
sbb
andb
cmovg
cmp
jge
aam
add
xorl
or
xchg
mov
inc
fxtract
mov
add
roll
adc
xchg
int3
andl
repz
lock
sbb
cwtl
dec
shll
leave
pop
test
or
out
fildl
sub
add
ret
or
and
gs
fwait
push
stos
sbb
xor
mov
sbb
test
xchg
inc
adc
dec
push
insl
sub
mov
adc
xchg
xchg
jle
gs
adc
in
and
es
in
add
mov
mov
lret
fmulp
xchg
mov
sar
clc
jns
xchg
loopne
ret
and
mov
xchg
les
mov
inc
mov
dec
bound
mov
or
stos
mov
mov
or
mov
mov
add
out
pop
mov
cltd
dec
sti
add
int
xor
pop
mov
or
mov
mov
and
out
cmpsb
push
movsl
lar
ja
cmpsb
or
idivb
mov
or
les
test
mov
out
add
or
insb
mov
lock
imull
loopne
loopne
les
dec
hlt
gs
gs
cltd
stos
lods
hlt
lret
in
aam
or
xchg
je
jo
mov
int
mov
cs
sbb
jmp
ret
popf
pop
jo
mov
or
add
mov
les
add
xchg
out
add
lcall
popf
inc
lds
ret
inc
mov
pop
xchg
mov
mov
lea
and
addr16
sbb
int3
and
cmp
xor
out
cmpsl
daa
das
add
push
stos
in
test
icebp
sub
out
xor
icebp
push
xchg
xor
test
pop
dec
xchg
lds
or
pop
xor
or
inc
les
lahf
call
jg
rcll
cli
and
xchg
cmpsl
mov
ds
and
jmp
cmp
out
in
push
dec
lods
mov
add
jbe
shll
fsubr
xchg
fnstcw
cmpps
add
ret
or
and
mov
push
mov
xchg
jbe
insl
test
cmc
xchg
loope
xchg
call
frstor
push
flds
mov
mov
push
sbb
addr16
xor
add
movsb
mov
fwait
mov
mov
lock
mov
movsl
or
sub
cmp
and
or
enter
mov
xchg
pand
popa
std
sbb
sub
and
mov
shrb
sub
mov
int3
jmp
xor
xlat
mov
jp
adc
stos
lea
rcrl
dec
mov
xor
pop
stc
dec
xchg
cmp
inc
push
xor
push
xchg
lock
xor
movsl
popf
cmp
xchg
or
jecxz,pn
adc
adc
inc
adc
xchg
inc
pop
bound
xchg
mov
call
xchg
leave
ror
mov
jmp
add
xchg
cwtl
mov
mov
sub
loop
add
imul
push
mov
inc
xor
and
add
add
and
daa
mov
xchg
push
add
xchg
sarb
add
or
and
mov
cli
push
cs
cmpsl
xor
adc
stos
hlt
and
mov
or
pop
lods
repz
std
inc
xchg
mov
add
inc
or
andl
or
inc
out
test
and
lea
ret
int
sub
outsb
aam
lea
rcr
mov
or
test
lret
movsb
xchg
popf
pop
or
push
adc
and
add
pop
add
out
fists
mov
add
mov
mov
fwait
into
dec
jnp
fcoms
add
mov
cmpsb
dec
push
fisubrl
test
inc
inc
shll
inc
adc
dec
add
jnp
arpl
xor
or
ljmp
inc
lcall
add
or
xor
inc
or
jle
xlat
call
iret
imul
mov
xor
add
stos
scas
adcb
lret
leave
call
call
fcmovnu
adc
enter
jge
jmp
push
jmp
dec
inc
push
mov
mov
fcomps
dec
inc
sahf
mov
xor
stos
int
dec
xlat
shl
cmpsb
fisubl
xchg
sbb
push
imul
rcrl
orl
xor
mov
test
jo
dec
cmpsb
mov
sbb
and
int
arpl
jo
lret
dec
pop
pop
jmp
fdiv
movb
mov
mov
mov
mov
call
mov
fwait
dec
dec
mov
pop
mov
stos
lock
mov
mov
or
mov
or
pop
mov
sbb
cmp
pusha
mov
stos
cmp
add
mov
or
cmp
sbb
and
sub
int3
flds
imul
mov
push
popl
or
fmuls
add
in
mov
or
shll
adc
inc
or
cmpsl
roll
mov
lds
out
lea
ds
lds
pusha
mov
popa
xor
dec
lret
iret
xchg
ficomps
push
xchg
push
std
inc
lock
mov
mov
testl
stc
lods
add
sbb
add
xor
ret
adc
outsl
clc
lret
mov
and
fwait
popf
pushl
test
adc
mov
loopne
and
nop
rcrb
in
aam
lds
fists
in
xchg
or
outsl
push
lea
mov
xchg
add
xchg
outsb
mov
adc
pop
cmc
mov
mov
sub
mov
inc
mov
pop
adc
stos
cmpsb
fsubr
popa
mov
out
xorl
push
jmp
int3
pop
lret
add
shll
push
into
ret
popf
test
popf
jne
test
test
test
popw
mov
sub
test
out
int
shll
adc
add
lahf
insl
lcall
ss
jb
test
addr16
mov
inc
popl
or
cmp
dec
loopne
push
mov
sbb
xor
add
and
movb
rolb
enter
lea
sbb
mov
test
xlat
jecxz
stos
and
movsb
lea
sub
stos
mov
loope
adc
lea
into
pop
cmc
dec
lcall
lret
lcall
lea
mov
xchg
lcall
enter
jmp
loopne
add
loopne
inc
fchs
ljmp
adc
adc
jp
sub
dec
out
push
xor
add
xchg
sub
sbbl
dec
or
aam
pop
imul
lahf
adc
lock
mov
adc
dec
lret
imul
cltd
enter
add
xor
xor
xchg
dec
cltd
mov
inc
subl
test
mov
mov
mov
push
test
cmpl
aam
sbb
adc
jbe
inc
test
and
add
sarb
loopne
mov
fcoms
arpl
jne
or
cwtl
push
lods
and
in
mov
jle
scas
cmp
jno
scas
shlb
push
popf
lock
rcrl
fiaddl
mov
xchg
in
add
flds
xor
dec
test
or
test
and
lock
jge
test
xor
pop
xchg
pusha
push
out
movsb
ret
imul
cmp
xorb
popf
xor
in
loopne
and
lret
push
popf
lods
repnz
enter
mov
fcmovnbe
and
mov
insl
movsb
sbb
lods
rorb
addl
xor
sbb
mov
pop
and
xor
es
mov
xchg
scas
lock
inc
inc
sbb
sub
cmp
cwtl
int
mov
or
fwait
mov
shlb
adc
mov
add
stc
das
and
dec
cltd
mov
push
sub
addl
iret
pop
adc
movsl
mov
fldenv
push
in
inc
andb
mov
jne
mov
add
ret
inc
dec
sbb
pop
lods
mov
test
push
scas
sub
enter
filds
pop
out
xor
out
mov
stos
daa
or
mov
cmpsl
shrl
sbbl
sti
xor
mov
ret
outsb
dec
iret
repnz
jmp
cmp
ret
lahf
sub
sub
push
adc
aaa
sbb
pushf
in
repz
add
loope
ljmp
movsl
mulb
fdivrs
pop
fcomp
push
movsl
ljmp
mov
pop
xchg
adc
inc
inc
lret
stc
inc
mov
or
mov
int
adc
es
inc
fwait
stc
les
jmp
movb
and
mov
xor
test
addb
jns
stos
fisttpll
lds
inc
dec
add
lock
fs
popa
frstor
test
lea
movb
and
call
or
arpl
xchg
push
out
jle
mov
cmp
inc
sub
sub
aad
xchg
fsubrl
xchg
push
test
jnp
aas
xchg
lret
stc
and
test
add
mov
aad
test
and
popa
xor
jecxz
faddp
dec
or
cltd
mov
mov
mov
pushf
test
push
mov
lods
test
aaa
pop
pop
dec
add
mov
sub
sbb
ret
push
int3
rorb
mov
loop
incl
div
sub
lret
fdivs
call
rolb
mov
jmp
inc
mov
pop
cwtl
mov
add
fcmovbe
rolb
addl
mov
fisttps
jmp
les
test
pop
or
lret
mov
mov
popa
imul
into
inc
nop
daa
test
add
jecxz
mov
iret
and
ret
sti
xchg
iret
out
daa
das
out
or
jmp
jle
test
repnz
adc
mov
lods
test
mov
movsl
das
jb
mov
mov
inc
les
and
jmp
pop
xchg
dec
int
pop
add
inc
arpl
test
ljmp
add
cltd
ret
xchg
add
or
add
stos
ret
std
mov
shl
cs
push
cmc
lret
outsl
sub
push
andl
xor
add
inc
lahf
or
xor
xor
test
lods
mov
fistl
or
add
orl
mov
popa
loope
std
sar
and
mov
xchg
mov
outsb
mov
popf
sub
dec
incb
dec
sub
or
loope
in
or
cvtdq2ps
movsl
and
in
dec
and
xchg
andl
xchg
or
or
gs
das
cmp
mov
fwait
xchg
dec
add
lahf
cmp
mov
std
into
stos
std
push
jns
lret
pop
inc
outsb
mov
ret
inc
cltd
out
mov
pop
fs
dec
push
out
or
jge,pn
cmp
sbb
adc
xor
mov
inc
mov
jmp
mov
cmpsb
inc
or
jmp
or
inc
out
data16
xorl
add
jno
hlt
cs
lret
roll
cmp
push
mov
jmp
lcall
mov
mov
add
out
fwait
dec
add
popa
push
rclb
cwtl
iret
adc
jg
addb
and
mov
dec
pop
xchg
test
aas
jmp
jns
arpl
push
xchg
mov
xor
mov
ljmp
or
inc
pushf
xchg
fldt
pop
cmc
ficompl
icebp
cmp
mov
cmp
pop
and
inc
mov
sub
clc
into
jnp
sahf
ror
jo
push
xchg
icebp
mov
sub
das
pop
xor
inc
cltd
xchg
fwait
dec
mov
out
push
or
sbb
inc
xchg
jl
ss
mov
ret
and
or
jmp
jno
js
std
fsts
ret
lds
add
mov
popf
push
adc
popf
aaa
cmp
fs
aaa
dec
and
push
imul
pop
add
inc
fisubrl
fisubrl
in
pop
imul
clc
sahf
das
adc
mov
sub
aad
inc
or
xchg
mov
adc
ss
jp
push
pop
bound
mov
cmp
int
inc
lea
test
and
fisubrl
leave
sahf
xchg
test
cmp
ja
mov
xchg
xchg
add
jbe
mov
mov
test
outsl
jbe
ret
pop
fisubrl
mov
mov
xchg
imul
xor
daa
fisttps
dec
and
hlt
inc
dec
fs
mov
mov
mov
inc
cmp
pop
sti
jnp
sbb
sahf
mov
dec
leave
rolb
popf
adc
mov
mov
jge
lods
scas
xchg
xchg
or
rcrb
dec
mov
nop
jae
test
leave
push
sbb
js
cmpb
repnz
dec
push
out
xchg
cmp
jmp
andl
add
stos
insl
mov
std
icebp
andl
ds
pop
fiadds
imul
dec
mov
jg
fldt
pop
xchg
dec
test
cmp
mov
mov
test
jb
mov
add
fwait
scas
or
mov
jmp
stc
into
aaa
mov
sub
xchg
jge
repz
cs
std
sub
adc
mov
ds
pop
mov
adc
lahf
js
cltd
loop
lock
push
mov
test
iret
out
out
lea
xlat
mov
and
cltd
lea
push
cmpsl
mov
xchg
cmpsb
das
pop
imul
add
testb
sbb
dec
aad
cld
pusha
lret
into
sahf
xor
pop
fldcw
ror
add
dec
mov
stos
mov
bound
sbb
stos
push
push
inc
pop
scas
dec
sbb
xor
fisttps
daa
xor
lret
xchg
pop
lahf
hlt
xlat
ret
daa
dec
sbbl
push
hlt
leave
movsl
inc
rolb
rclb
arpl
add
xor
dec
gs
mov
lret
pop
mov
add
shrb
xchg
push
fcoml
rclb
mov
or
xchg
adc
loopne
add
cwtl
xchg
fsub
js
out
add
lea
loopne
mov
sbb
sbb
aam
fwait
pop
pop
lcall
cmp
lahf
or
in
fs
jmp
iret
mov
out
shrb
scas
and
add
sub
movb
aad
imul
or
add
and
xor
sub
adc
mov
sarl
js
loope
push
sbb
sub
cli
lret
lahf
dec
ljmp
aas
call
cli
sbb
dec
pop
outsb
mov
subl
cltd
imull
adcl
jmp
movsl
adc
mov
jns
shl
xor
sub
fnstsw
xchg
insl
xor
out
mov
loope
jmp
inc
loopne
xchg
mov
enter
stos
in
mov
mov
insb
push
mov
sar
jl
jmp
out
out
std
dec
xchg
ljmp
pop
xlat
stos
cmp
daa
out
fnstsw
cmp
popf
sti
ret
movsb
mov
push
out
or
adc
jp
pop
loop
out
orl
ret
sub
push
outsl
outsl
mov
sub
icebp
adc
mov
add
mov
pop
call
rcll
or
pop
adcl
mov
ret
push
add
cmpsl
push
rorb
cmp
xchg
inc
and
cmpsl
jmp
int3
or
daa
test
or
ret
lret
aas
inc
inc
mov
repnz
cmp
pop
add
jg
dec
les
push
mov
jmp
mov
adc
jns
rcrb
and
push
mov
xlat
mov
mov
sub
jnp
dec
call
xlat
xor
loope
sub
inc
cmp
mov
pop
jp
cwtl
xor
sbb
xchg
or
ds
adc
in
lret
push
out
xor
mov
cmc
lea
imull
push
stc
mov
dec
sarb
xor
and
dec
lret
jne
imul
lahf
mov
stos
push
lret
mov
pop
fsubrp
int3
or
stos
mov
ret
inc
mov
orl
test
add
lcall
xchg
jmp
dec
and
inc
jno
add
mov
sahf
add
out
sarl
add
sub
in
lods
aam
outsl
dec
hlt
aaa
les
mov
stc
pusha
lret
pop
or
sub
sub
xlat
jle
xlat
xor
jb
mov
decb
imul
or
mov
dec
xchg
jl
push
test
imul
cmpsl
cwtl
add
xor
push
stos
cli
imul
inc
mov
jo
mov
sahf
add
xor
popa
insb
andb
movsb
andl
movl
icebp
lret
popf
sub
xchg
cmpsl
push
cld
xchg
and
sub
movsl
mov
cwtl
xchg
inc
lods
mov
add
fwait
stos
jmp
jb,pn
jbe
mov
or
or
aas
mov
idivl
les
popa
jp
into
addr16
mov
call
dec
mov
push
rorl
mov
cs
mov
iret
adc
fsts
sbbl
andl
popa
mov
or
add
out
fwait
push
and
test
jne
mov
ret
lods
scas
aas
lea
push
inc
and
pop
orb
sub
insb
mov
dec
add
xor
fmul
push
enter
xchg
and
xor
inc
add
data16
jns
fidivl
ror
jb
sub
in
mov
add
dec
fldenv
xorl
leave
test
bound
pusha
add
inc
xchg
pop
pop
inc
jo
imul
mov
out
aam
dec
sarl
pop
aas
adc
popf
gs
pop
xchg
outsl
xchg
mov
push
jbe
cmp
subl
enter
and
jecxz
and
add
sbbl
daa
sbb
mov
cmp
shll
adc
mov
lea
cmp
mov
mov
aaa
addr16
imull
mov
dec
out
xor
stos
and
inc
lea
xor
inc
daa
adc
sbb
popf
test
pop
adc
xlat
push
jnp
rcll
fmuls
inc
movsl
test
inc
sub
sbb
or
call
jno
adc
popf
popa
out
push
push
popf
inc
sbbb
inc
shlb
hlt
jb
mov
sbb
aam
movsl
popf
sub
aam
mov
sbb
mov
popf
stc
jle
xchg
push
pop
add
popf
xor
xchg
jne
lods
and
xchg
aam
pop
popf
call
shlb
pop
and
mov
inc
fsts
popf
jo
pop
jne
in
ret
out
mov
or
cmp
and
add
inc
popf
scas
inc
pop
or
lods
bound
daa
or
daa
shlb
mov
popf
mov
scas
add
fsub
popf
in
jb
mov
aam
add
out
add
popf
jg
mov
inc
popf
mov
out
iret
aam
arpl
inc
push
sub
xchg
sbb
push
andb
les
cltd
out
shl
testl
or
xor
xchg
aaa
aam
and
imul
popf
call
andl
xchg
test
adc
aam
movsl
popf
outsb
inc
dec
push
aam
lds
out
and
mov
adc
mov
pop
hlt
jecxz
mov
adc
mov
cltd
inc
xor
ret
sbb
lea
les
movsb
sahf
loope
adc
xlat
xchg
inc
popf
stos
adc
xor
or
or
fsubs
ret
rcrl
idivl
push
sbb
dec
out
mov
lods
push
inc
imul
cmpsb
popf
adc
mov
cli
adc
movsl
popf
sub
mov
stos
mov
push
out
add
push
mov
movsl
xchg
aaa
jl
fwait
sahf
push
popf
movsb
jp
xchg
add
or
pushf
es
xchg
adc
enter
cmpsb
xchg
inc
or
adc
stos
call
sbb
int3
fwait
push
aaa
push
ret
cmpsb
sbb
cltd
add
add
addl
test
mov
pop
or
inc
add
or
mov
or
xsavec
unpckhps
push
lahf
out
dec
inc
movsb
push
stos
add
or
pop
popf
jnp
cmpsb
or
rcll
cmp
pop
add
popf
xchg
addr16
adc
pop
into
xchg
lcall
and
lods
les
and
pop
aaa
add
inc
andl
and
sbb
xchg
mov
pusha
aaa
pop
fwait
sahf
mov
pop
ficomps
inc
insb
dec
push
sahf
test
lret
movsb
push
stos
sbb
adc
outsl
push
mov
addr16
lret
aaa
in
mov
sbb
or
lods
test
inc
add
or
inc
xchg
cwtl
fmuls
jno
sub
imul
ret
in
jno
dec
popf
lods
test
xchg
movhlps
scas
xchg
arpl
push
movb
push
loop
lea
mov
mov
rcr
addr16
aaa
das
fwait
jno
test
fwait
push
dec
dec
adc
pop
bswap
movsl
popf
sub
addr16
adc
rcll
sub
mov
mov
cs
stos
movzbl
popl
popf
into
jge
enter
xchg
shll
in
mov
mov
push
pop
inc
pop
mov
inc
dec
popf
scas
mov
adcb
nop
sbb
and
adc
xchg
lcall
xchg
xchg
xchg
shll
in
jns
popf
push
jl
xchg
imul
inc
sbb
add
pop
addr16
sbbl
iret
or
inc
and
adc
popf
lahf
or
enter
add
in
mov
addr16
sbb
int3
adc
sahf
dec
popf
scas
adc
das
xchg
xor
int3
or
int3
pop
mov
call
push
test
mov
call
mov
xchg
mov
stos
popf
pop
adc
push
dec
cltd
or
mov
lret
popf
das
cmp
adc
scas
adc
sahf
jmp
lret
in
dec
sbb
int3
or
or
jno
mov
pushw
sub
xor
in
pop
sbb
lahf
incl
dec
popf
mov
sub
inc
addr16
loope
and
mov
inc
add
enter
and
decb
popf
loopne
push
ljmp
lods
popf
sbb
cld
addb
push
mov
int3
popf
ljmp
lods
or
lea
in
popf
dec
cld
add
xor
incl
or
pusha
jns
and
movsb
lahf
scas
push
movsb
sarb
sub
movsb
cltd
fdivl
xchg
dec
ficomps
push
xor
dec
mov
mov
sbb
addr16
iret
fwait
jno
insb
popf
leave
les
push
dec
dec
sbb
test
adc
add
mov
lods
popf
sbb
mov
pop
adc
cmp
push
xchg
xchg
lahf
int
ljmp
sbb
dec
adc
aaa
pushf
in
popf
dec
adc
enter
pop
leave
xorl
mov
xchg
add
loopne
mov
subl
adc
or
mov
inc
rorl
addr16
inc
addr16
ret
iret
nop
jno
insl
popf
lret
nop
rcrl
das
pushf
jno
mov
pusha
rcll
aaa
scas
xchg
pop
pop
subl
adc
jg
cwtl
into
popf
xor
movsb
xchg
inc
ljmp
sahf
js
out
popf
dec
mov
sahf
imul
rcrl
aaa
scas
lahf
pop
pop
mov
lahf
add
add
sahf
cs
movsb
fwait
pop
xchg
test
or
sbbb
cltd
sbb
mov
push
mov
movsl
or
aaa
pop
jnp
mov
mov
mov
mov
push
push
push
jecxz
add
adc
popa
inc
xchg
js
scas
popf
sbb
add
xor
pusha
daa
aaa
clc
sbb
xor
movsb
pusha
stos
mov
lcall
cltd
lcall
cwtl
sbb
arpl
mov
dec
add
int3
xorl
mov
addr16
std
pusha
js
push
js
dec
popf
mov
mov
sbb
divb
mov
addr16
addr16
push
or
in
push
xchg
and
and
xor
mov
enter
sti
push
dec
dec
add
push
xor
addr16
sbb
lock
lret
movsb
sbb
sbb
subl
popf
fs
test
scas
or
xor
dec
dec
add
mov
push
popf
mov
addr16
cltd
cmpl
lea
pop
jno
jo
int
mov
sbb
xchg
popf
in
push
and
incb
popf
call
xchg
add
sahf
loopne
jae
in
cwtl
rcrl
or
sbb
popf
sbb
psllw
adc
aaa
xchg
sbb
movsb
sbb
cmp
mov
sahf
fwait
add
xor
les
stos
in
or
push
movsl
popf
mov
orb
cltd
adc
nop
pop
popf
xor
into
les
and
mov
popf
out
push
in
xchg
mov
xorl
test
jo
das
jno
rcrb
and
in
daa
clc
mov
or
aaa
xor
or
adc
leave
xchg
daa
in
inc
add
popf
addr16
lods
stos
nop
sbbl
xor
sbb
inc
jns
mov
push
popf
mov
pop
addb
mov
xchg
in
mov
addr16
xor
int3
mov
xchg
movsl
popf
out
orb
mov
dec
xchg
aaa
xchg
adc
pop
cmp
dec
popf
xchg
sbb
rcrl
sbb
xchg
add
repz
dec
addr16
inc
addr16
ret
leave
cltd
adc
add
xor
les
mov
xor
in
add
cltd
aaa
aam
inc
adcl
in
addl
popf
rcrb
add
jne
xchg
pop
insl
or
sbb
lret
addr16
arpl
popf
add
or
xchg
aaa
hlt
adc
aam
popf
cmp
fsts
mov
aaa
mov
push
adc
enter
cmpsb
andl
add
adc
push
addr16
mov
gs
or
shlb
fsts
data16
pushf
push
popf
mov
xchg
mov
or
sbb
mov
je
shll
mov
add
xchg
lea
push
sub
and
clc
rcll
in
cs
sbb
jb
popa
pop
xchg
sub
dec
lret
pop
mov
inc
rcl
fdivrl
mov
cs
movsb
adc
mov
xchg
cmc
popf
jae
mov
sub
popf
dec
or
in
adc
inc
mov
roll
call
adc
inc
mov
lcall
and
or
in
adc
push
mov
adc
orb
movsb
mov
cli
in
movsb
adc
lret
mov
enter
push
or
add
ret
call
stos
push
outsb
inc
dec
or
negb
call
stc
and
hlt
mov
push
popf
push
dec
jno
mov
icebp
cltd
push
jmp
sbb
xorl
in
sbb
mov
je
pusha
add
pusha
sbb
adc
or
std
ljmp
dec
mov
xchg
popf
fistpl
xchg
movsl
push
movsb
mov
mov
roll
mov
sbb
nop
mov
mov
mov
in
lret
push
js
fmull
add
and
rcr
dec
mov
cld
cltd
push
popf
mov
pop
rolb
mov
cwtl
mov
cmpb
pushf
adc
mov
adc
cmp
imul
mov
icebp
lcall
movsl
ja
xchg
or
movsl
pop
jecxz
into
adc
xchg
pop
inc
adc
lea
addb
sub
cltd
cmp
sbb
sbb
test
cwtl
aas
pop
imul
mov
adc
test
popa
sbb
test
adc
call
add
sbb
mov
sbb
lret
clc
pushf
icebp
dec
jl
popf
call
jbe
push
scas
sbb
mov
call
adc
push
inc
cltd
call
add
dec
or
cmpsb
xchg
or
jecxz
inc
les
mov
add
add
mov
mov
arpl
mov
mov
adc
lret
mov
xchg
dec
xchg
movsb
xchg
cmp
call
jmp
mov
call
cmpsb
or
cmp
fs
mov
adc
insl
movsb
xchg
sub
add
xchg
xor
pop
popf
xchg
mov
pop
or
into
jle
dec
clc
mov
call
lret
dec
leave
imul
dec
push
sub
call
int3
pop
and
fwait
aas
mov
adc
ljmp
mov
sbb
dec
cltd
sarl
fs
pop
xchg
or
outsl
orl
fmuls
jo
jae
mov
mov
xchg
mov
adc
ljmp
cmp
sbb
call
sbb
movsl
roll
mov
push
daa
sbb
aas
mov
lret
call
sbb
sysret
test
push
jo
adc
jno
fs
orb
jo
or
mov
daa
popf
jg
roll
push
mov
mov
ficoms
mov
sti
popf
ja
arpl
les
xor
les
add
scas
andl
popf
addr16
scas
mov
popa
xchg
or
adc
xchg
and
xlat
scas
addl
mov
cld
lret
stc
ja
call
adc
dec
insl
push
adc
lret
mov
pusha
and
fwait
dec
xchg
jnp
adc
mov
fmul
xchg
add
popf
mov
mov
pop
pop
jbe
int3
movsb
call
mov
test
sbb
adc
lret
add
call
push
call
adc
jecxz
cmpsb
les
mov
mov
sbb
xchg
and
mov
clc
dec
movsl
addl
lea
dec
jl
cltd
adc
call
push
xchg
call
pop
mov
adc
popf
leave
dec
xchg
add
mov
dec
fnstenv
gs
cmp
or
outsb
test
pop
fsub
call
lea
sub
push
lret
mov
fidivs
ljmp
adc
pop
popf
dec
fcom
movsl
xor
in
and
add
xchg
mov
sbb
or
int3
mov
fpatan
dec
mov
jb
mov
mov
mov
mov
or
fdivl
cmpsb
xchg
out
pop
insl
adc
adc
mov
mov
push
cmp
test
cltd
mov
cwtl
in
jb
mov
push
push
ret
inc
adc
mov
adc
inc
nop
xchg
test
jb
xor
mov
mov
jl
xchg
fwait
lcall
inc
flds
dec
mov
mov
xchg
popf
mov
lahf
rolb
xor
insb
cs
mov
xorb
ret
in
loop
jno
in
hlt
mov
fbld
lret
dec
or
shlb
decl
into
rcrb
xorb
mov
mov
mov
xchg
push
fidivs
mov
add
xchg
lea
fwait
out
sbb
cld
mov
add
lds
mov
cwtl
jg
dec
push
xor
xor
sti
hlt
fs
push
movsl
call
js
in
cs
add
ja
jecxz
xchg
pop
xor
sub
mov
leave
enter
aaa
adc
outsl
mov
stos
mov
shl
js
pop
shrb
push
in
fadds
cmc
jecxz
sub
rorb
and
pop
cltd
loopne
add
and
in
or
mov
in
cmpl
cmpsb
add
xchg
lods
xor
int3
andb
inc
dec
lret
aad
mov
hlt
popf
das
xor
jmp
shll
andl
int
imul
ljmp
imul
test
fldl
test
mov
aas
rcrb
test
test
test
pop
lea
addr16
xchg
or
popf
adc
int3
jecxz
outsb
sbb
outsl
cmp
mov
lea
sbb
test
inc
push
mov
adc
xchg
and
sarl
dec
les
pop
inc
nop
fimuls
mov
popf
hlt
inc
sub
and
leave
mov
fadds
sub
add
xor
mov
sub
xchg
adc
or
and
in
call
adc
add
xor
inc
xchg
xor
sub
test
xchg
mov
or
or
add
or
js
mov
mov
push
nop
lea
cltd
mov
xchg
mov
inc
loop
pop
push
orl
into
inc
addr16
test
push
lret
mov
ret
mov
inc
es
xchg
dec
fs
mov
push
lods
sbb
stos
pop
les
mov
cltd
xchg
add
mov
mov
lods
xchg
shlb
lahf
or
adc
insl
dec
rolb
add
lods
mov
inc
loopne
xchg
test
cmpsb
lods
cmp
in
xor
sub
ss
roll
add
fisubl
mov
out
and
cmp
xchg
dec
jb
andl
cmovge
leave
dec
add
in
or
int
fsubl
and
mov
enter
cmp
xchg
out
in
add
les
mov
add
call
test
sub
out
inc
clc
vshufpd
dec
xchg
adc
jne
int3
les
xchg
cmp
das
movsl
dec
int
inc
mov
xchg
shlb
inc
xchg
inc
or
addb
push
xor
lea
ds
loopne
xchg
mov
add
push
loop
xor
cmpsb
jnp
mov
mov
bound
cmp
fs
pop
std
ret
adcl
movsl
fwait
js
add
or
dec
inc
out
popf
mov
inc
push
int
add
jg
inc
addb
lcall
and
mov
roll
ret
ror
pop
dec
out
mov
movsb
popf
orl
lea
mov
mov
mov
lea
popf
cmp
loope
jne
add
ret
and
pushf
and
addl
lods
xchg
mov
das
and
xchg
ret
cltd
test
pop
fidivrs
out
xchg
and
xor
je
sar
inc
icebp
adc
aas
in
ret
cmp
mov
insb
dec
mov
push
rorl
adc
clts
add
xchg
pop
adc
xor
lock
cli
or
shrl
dec
xlat
ljmp
cmp
aas
sbb
cltd
sub
into
test
dec
jb
sub
stos
adc
sub
xchg
movsl
gs
dec
adc
push
or
xor
int3
add
nop
xor
push
orb
dec
mov
fmull
xchg
mov
test
movsl
rorl
cmpsb
jae
pop
mov
jnp
mov
or
push
mov
lret
sbb
in
movsb
popf
xor
sbb
xlat
xchg
add
adc
movsb
xchg
mov
repnz
and
in
cmp
cmp
mov
mov
add
bound
mov
aas
add
inc
adc
mov
and
push
and
xchg
dec
rol
add
add
std
and
shl
outsb
rcl
sub
and
call
mov
cmpsl
es
stc
adc
popf
lods
cwtl
movups
out
adc
and
xchg
aam
fwait
push
jbe
mov
and
mov
cmp
jp
pop
sub
adc
gs
rolb
xlat
pop
sbb
ret
mov
shll
xchg
inc
adc
fmul
test
inc
mov
fldcw
jmp
xchg
hlt
xchg
mov
adc
ror
push
mov
add
mov
push
inc
mov
adc
xchg
popf
sub
iret
cs
xchg
push
incb
test
xor
cmc
dec
ds
push
adc
and
lret
adc
repz
mov
lds
cmpl
jne
cmp
and
lock
jmp
aaa
add
xchg
divl
outsl
mov
xor
subl
andl
sbb
jb
orb
ja
scas
mov
or
xchg
xor
scas
enter
push
cmpsb
xor
je
pop
mov
xchg
add
and
xchg
pop
mov
sub
add
aaa
scas
leave
mov
add
aam
xor
popf
add
lcall
mov
sub
lret
lret
dec
inc
lahf
add
pop
fists
xor
or
cltd
lcall
pop
sbb
dec
outsl
in
lret
push
push
add
mov
mov
daa
xchg
push
out
xchg
add
add
sbb
sbb
xchg
mov
popa
jmp
add
fistpll
mov
leave
and
dec
or
in
sbb
nop
dec
adc
add
push
and
movsl
jp
and
and
xor
mov
push
test
push
jbe
push
push
xorl
push
and
shrl
std
adc
pop
cmp
rclb
sub
mov
push
inc
or
negb
xchg
cmp
pusha
xchg
mov
pop
fwait
xchg
and
inc
popf
in
mov
in
jmp
push
leave
cwtl
lret
cmc
xchg
out
jmp
or
mov
sbb
dec
cmp
cmp
rolb
jns
ret
cmp
test
xor
fcomps
in
ret
lret
xor
or
mov
imul
popa
imul
or
inc
push
mov
add
jns
sbb
leave
push
xlat
or
pop
or
inc
js
adc
ss
xchg
mov
xor
sbb
mov
fwait
or
pop
cmc
fidivl
jmp
jns
mov
sub
add
cmp
mov
mov
jp
lret
sub
test
out
jl
imul
pop
fidivs
mov
dec
andl
xor
add
pop
ja
mov
jecxz
addb
mov
and
adc
movsl
add
mov
sbb
xchg
cmpsl
jl
mov
imull
add
cmp
push
push
adc
sub
dec
cmovs
and
lea
int3
cmp
mov
rcr
and
add
std
cmp
add
fisttps
or
out
add
xor
xchg
roll
push
push
frstor
xchg
mov
daa
mov
mov
outsl
mov
adc
mov
mov
mov
aad
xchg
adc
xor
xor
mov
sarb
inc
cmp
iret
pop
mov
ja
movl
repz
fs
mov
in
sub
fwait
mov
xchg
ficoms
sub
mov
mov
imul
cmp
leave
out
add
out
into
loop
add
test
adc
popa
push
sub
xchg
mov
sti
ss
inc
ja
in
push
loop
pop
push
or
out
in
outsb
cmpsl
mov
xlat
stos
inc
sub
mov
dec
add
shl
cs
lret
mov
inc
or
add
jb
sti
les
mov
mov
bound
xor
out
call
xchg
mov
adc
test
push
cmpsb
add
mull
mov
sbbl
push
xor
fs
ljmp
ljmp
pop
cmp
cld
push
adc
add
ficoml
push
pop
mov
mov
sbb
mov
inc
movsb
icebp
test
int3
add
stc
rorl
int
pop
scas
dec
gs
lea
and
ds
js
popf
ret
test
xchg
sbb
scas
cmpl
pop
xchg
jns
stos
aad
and
ljmp
or
es
sarb
int3
sti
mov
add
mov
insb
daa
sti
rorl
xchg
pusha
popa
lock
xor
fwait
ja
cmp
ret
mov
popf
push
xchg
push
and
cmp
mov
xchg
adcl
js
adc
inc
xor
loopne
and
mov
popf
xchg
int
jmp
xchg
in
push
ja
cmpsl
add
mov
test
inc
lahf
repnz
lock
rcl
ljmp
int
xchg
mov
lock
cmp
inc
jp
in
rolb
testb
cmpl
mull
stos
lea
lret
cs
xchg
dec
clc
cmp
jmp
pusha
cli
icebp
pusha
inc
sbb
ljmp
mov
jbe
and
xchg
mov
cmp
add
or
add
xchg
mov
les
sbb
adc
add
jl
lret
sub
popa
enter
cmp
cs
mov
sub
les
test
push
xor
jp
outsl
test
xor
xchg
and
lret
jle
add
add
movb
fdivrl
cmp
test
out
sub
cmpsb
and
fwait
mov
xor
mov
xchg
add
inc
lock
enter
and
add
loopne
ja
out
ljmp
pusha
xchg
sbb
add
dec
notl
xor
adc
leave
cmpsl
mov
mov
aaa
or
and
mov
xchg
lea
mov
adc
mov
sub
insb
mov
mov
pop
xchg
bound
lret
add
mov
aaa
mov
test
add
stos
int3
adc
movb
and
inc
mov
xor
ret
adc
inc
add
mov
in
icebp
fwait
std
rcrl
rolb
ret
mov
test
or
mov
adc
pop
test
popa
mov
imul
nop
outsl
sbb
rorl
sbb
in
arpl
mov
mov
xchg
movsl
jl
mov
mov
dec
adc
sub
cmc
sub
cltd
out
sbb
jmp
sti
les
adc
cs
gs
pcmpgtb
shrb
jecxz
sub
clc
hlt
or
xor
imul
push
mov
repnz
lret
fs
push
sbb
xor
lret
xchg
mov
enter
adc
xchg
lds
loop
mov
lahf
loope
fwait
dec
add
xchg
jg
aam
in
test
mov
xchg
xor
lcall
pusha
stos
icebp
jns
fwait
popf
popa
lds
adc
jnp
rcl
add
cmp
jns
xor
dec
out
and
pop
popa
pop
in
xor
cmp
fsubrl
add
sbb
cmpsb
xchg
cmc
daa
push
mov
dec
pop
insl
ss
adc
and
xchg
les
nop
cwtl
and
hlt
xchg
pop
xchg
js
stos
and
hlt
enter
stos
inc
lahf
xor
xchg
sti
mov
xchg
clc
das
inc
sbb
dec
mov
rcll
mov
popa
cmpsl
stc
mov
insl
stos
push
or
in
cmc
mov
rorb
or
mov
sbbb
add
mov
xchg
stos
les
aaa
sub
mov
lods
test
les
dec
test
jecxz
and
mov
xor
lods
add
and
inc
clc
stos
mov
adc
iret
and
sbb
subl
inc
clc
lret
add
sub
fadds
xchg
test
mov
cmp
mov
dec
fadd
xor
jle
add
push
adc
xor
fimuls
cwtl
xchg
repnz
fmull
out
and
push
or
sahf
imul
lds
icebp
and
and
mov
imul
mov
mov
fisubs
lret
mov
add
fists
fwait
push
adc
leave
sub
lret
jecxz
cmp
movsl
inc
xchg
cwtl
movsl
call
push
icebp
mov
mov
lock
and
popf
repz
push
shlb
sbb
push
add
pop
or
sahf
les
in
clc
inc
shr
sub
dec
or
call
shlb
push
xor
sub
mov
push
xchg
push
popf
sub
lock
in
shl
dec
and
push
dec
mov
clc
xor
dec
lods
cmp
jmp
push
jb
inc
jne
cmpsb
or
leave
out
add
adc
mov
lcall
mov
fistpl
cwtl
movsb
inc
ljmp
ret
pushf
es
repz
arpl
ljmp
xor
loopne
std
mov
mov
test
test
mov
push
loope
push
pushf
cs
icebp
ret
pop
mov
dec
cmpsl
mov
mov
repnz
push
add
popf
xchg
filds
mov
wrmsr
sub
mov
test
aam
push
xchg
cs
pop
aaa
sti
jne
orl
sti
push
inc
inc
add
jne
cmc
out
out
sbb
mov
icebp
sahf
popf
movb
fdivrs
jle
sub
mov
add
inc
test
sub
popf
lock
pop
les
sbb
push
xchg
push
loop
push
test
out
pop
or
jmp
sar
popa
push
mov
ljmp
xorl
cltd
movsb
add
or
add
cwtl
sbb
fisubl
imul
shl
stos
mov
cld
adcl
sbbl
add
push
add
test
leave
in
xchg
lret
xor
xchg
pop
add
add
xchg
into
adc
and
add
decl
js
sti
mov
dec
sbb
jge
nop
mov
out
cmpsb
test
out
mov
pushl
jbe
scas
and
into
mov
xchg
pop
out
xchg
out
clc
add
pop
andb
nop
rcll
mov
fisttps
jg
mov
in
push
mov
jg
lea
out
and
dec
mov
push
and
ljmp
ja
push
faddl
enter
shl
adc
jne
in
fdivrs
dec
ja
mov
aaa
mov
lock
ss
jecxz
mov
xchg
data16
imul
test
mov
lret
dec
adc
ds
add
aas
or
sbbl
icebp
cmp
lret
mov
xchg
add
aaa
out
aaa
dec
fsubp
xchg
sahf
or
sahf
std
sbb
sub
or
aaa
or
add
sbb
fbld
push
in
push
ss
sub
jge
dec
push
jle
jge
into
xchg
ss
mov
lods
call
stos
cltd
mov
mov
mov
mov
push
add
push
adc
xchg
xchg
out
les
mov
idiv
aas
das
rorb
inc
adcl
es
fcomps
dec
jp
jnp
out
into
in
je
inc
dec
add
or
lock
imul
dec
adc
jg
cwtl
xor
jg
push
dec
mov
inc
dec
jle
mov
xchg
pop
lods
xorb
ret
test
dec
mov
movsl
jne
mov
into
jp
addb
pop
fldenv
xchg
add
and
jge
mov
inc
pop
fcmovbe
cltd
jg
sti
mov
and
ficomps
mov
cwtl
jo
sbb
xchg
xlat
imulb
loope
ss
jle
push
xchg
mov
and
mov
into
or
xchg
xor
imul
inc
test
arpl
and
or
repnz
and
jecxz
mov
add
out
jge
inc
mov
jge
pusha
and
and
add
add
xor
xchg
filds
daa
in
pusha
pop
lea
mov
push
and
lods
pop
add
test
mov
sti
out
inc
popa
adc
sahf
inc
xchg
or
lea
addb
daa
movsb
pop
dec
lea
dec
or
mov
lret
adc
movsb
rcrb
js
xor
fsubrs
mov
add
fwait
popa
xor
xchg
inc
dec
mov
stos
lock
imul
aam
call
test
ja
inc
inc
xor
icebp
loop
popl
pushf
jg
mov
add
inc
xorb
or
loopne
push
rorb
and
aad
mov
andl
mov
and
cwtl
roll
insl
std
mov
popf
lea
stos
xchg
sub
call
mov
ds
dec
mov
dec
loope
gs
andl
mov
push
xchg
test
or
dec
xor
xchg
imull
mov
scas
dec
adcl
fistpl
add
lods
pop
mov
int
or
mov
scas
add
xor
icebp
or
pop
mov
cmc
inc
mov
add
dec
dec
or
mov
adc
out
mov
or
shlb
rorl
jle
and
xchg
int
add
mov
movsb
xchg
out
popf
push
popa
xchg
mov
dec
adc
aas
add
or
int3
and
adc
inc
popf
sbb
iret
movsb
and
movb
loop
add
popfw
stos
insb
loope
add
ret
xor
inc
mov
xchg
mov
jecxz
dec
loop
mov
mov
scas
shll
push
jecxz
dec
ljmp
stc
or
xchg
xor
xchg
comiss
add
dec
leave
push
mov
add
loopne
cmpl
clc
push
in
test
leave
push
xor
decl
fucom
int
rcll
jg
mov
add
std
pusha
jns
xchg
push
cltd
je
mov
inc
leave
jbe
xor
cmp
inc
jnp
and
pop
lret
sbbl
jae
jae
fs
mov
xchg
or
or
jo
mov
addl
cmpsl
dec
adc
les
fldl
lea
popa
stc
xor
jg
cmp
mov
cli
and
incb
outsl
ret
mulb
inc
ret
enter
jp
mov
adcl
andl
or
mov
xchg
pop
lcall
and
mov
add
cltd
das
dec
mov
je
test
ljmp
imul
add
nop
add
add
pop
dec
xor
imul
adc
mov
push
inc
push
sub
fldenv
mov
xchg
lock
mov
sbb
add
cltd
inc
stos
pop
xchg
cmp
cmpb
pop
movsl
mov
xchg
mov
aas
ds
movb
ret
adc
dec
test
sbb
lock
ds
test
test
mov
scas
int3
fwait
loopne
outsb
mov
push
push
mov
test
cltd
xor
push
imul
aad
pop
xlat
fmull
fimuls
shll
add
jge
test
imul
xor
mov
gs
std
pop
dec
fiadds
xor
push
movsl
and
sub
mov
xorl
jno
sbb
inc
lock
les
jne
dec
daa
stc
ds
cwtl
outsl
adc
aaa
sti
xor
fisttpl
jae
jb
sub
in
or
jle
mov
mov
xor
subb
jno
adc
xchg
insb
push
test
daa
mov
pushf
or
xchg
nop
add
add
pop
inc
push
cmpsl
dec
sbb
test
pushf
test
pop
add
dec
daa
xchg
je
pop
dec
pusha
enter
lret
push
loopne
mul
cmp
sbb
adc
dec
repnz
aaa
into
mov
pop
aaa
cli
mov
pop
mov
out
daa
dec
fcoms
mov
addr16
lcall
mov
xor
fsubrl
lret
or
ljmp
into
cmp
ds
imul
int3
outsl
jl,pt
lahf
aas
pop
jno
dec
aaa
jmp
lret
lcall
mov
stos
stos
jns
mov
mov
outsl
push
mov
jp
inc
jae
inc
mov
dec
xchg
ficomps
addl
xchg
dec
std
lcallw
xchg
mov
stos
pop
dec
mov
xchg
jg
jno
cmp
std
cmp
jno
fiaddl
push
mov
xchg
cmpsl
mov
add
int
jns
lahf
lds
sbb
iret
jg
xchg
mov
inc
adc
mov
xchg
rclb
mov
add
loope
jns
mov
mov
sbb
scas
lea
sub
xor
xchg
mov
ljmp
inc
push
cmp
ja
test
inc
push
xor
mov
out
popa
lock
pop
jp
xchg
jno
rcrb
daa
mov
loope
push
test
jge
pop
cmp
add
push
jns
cmp
xchg
push
sub
lret
dec
mov
xchg
jle
mov
pop
and
mov
xchg
movsb
popf
leave
mov
add
lret
jecxz
cltd
inc
fisttps
adc
fwait
push
ret
push
jecxz
cld
push
and
stos
popf
fcom
jge
loopne
call
xor
mov
outsl
fisubs
test
movsl
pop
cmpb
les
lahf
out
ret
xchg
inc
sub
leave
xor
loopne
xchg
fnstcw
push
mov
mov
das
shll
adc
addr16
loope
fwait
ljmp
xchg
xor
mov
sub
out
push
icebp
outsb
imul
and
push
xor
hlt
push
repnz
addl
and
mov
nop
pop
stc
pop
xchg
hlt
popf
lahf
shll
jnp
ret
icebp
ljmp
lock
mov
imul
xor
loopne
stc
nop
cltd
ret
lret
std
aas
adc
cmpsb
xor
unpckhps
enter
pop
pop
cli
jg
dec
cmp
xchg
adc
rcr
adcl
fldl2t
sub
dec
pop
rcrb
xor
stc
mov
stc
aas
xchg
push
call
pop
js
fnstcw
sbb
jb
incl
imul
adc
lcall
fiadds
push
and
xor
jmp
push
insl
sub
dec
push
inc
mov
mov
aaa
mov
xchg
and
push
dec
imul
icebp
adc
push
dec
and
dec
outsb
dec
bsr
pop
cmp
jne
mov
out
or
jb
xchg
mov
shll
aam
lods
and
lea
lret
std
stos
pop
push
testl
jg
adc
out
sbb
mov
cltd
aaa
dec
add
lods
lret
popf
in
inc
shlb
popa
add
add
repz
maskmovq
divl
mov
pop
stos
lods
inc
sbb
or
out
les
dec
sti
movsb
xor
mov
fadds
popa
movsb
or
mov
mov
repnz
cltd
push
jle
enter
push
dec
sbb
test
add
adc
les
sub
add
pop
mov
push
popf
stos
aas
jp
movsb
movsl
lret
lea
mov
orl
jl
or
xchg
xchg
push
imul
mov
arpl
xchg
test
sbb
fistpll
push
fsubrs
shlb
inc
iret
cld
ret
add
cmp
add
out
test
add
add
and
jge
push
pop
test
lret
test
add
mov
rcr
pop
stos
xor
xor
mov
mov
scas
mov
dec
ficoml
inc
mov
push
ljmp
cmpsl
sarb
adc
jo
cld
push
pop
pop
cmpsb
mov
jnp
stos
bound
stos
mov
sti
push
cwtl
pop
mov
shl
xchg
dec
jo
inc
mov
out
std
sbb
fptan
mov
add
aaa
mov
pop
fs
pusha
int3
cmp
std
test
jge
mov
out
mov
fwait
lret
and
cltd
test
enter
mov
adcl
add
test
or
std
mov
sahf
jmp
mov
xorb
std
pusha
dec
stc
jl
xchg
inc
cmp
loop
sbb
loop
push
cmp
filds
loop
out
cmp
jb
pop
sub
mov
sbb
add
leave
or
lea
mov
dec
icebp
mov
lock
inc
and
lock
ret
adc
fdivl
xchg
xchg
dec
add
gs
push
lcall
xor
andl
gs
lcall
push
and
fs
or
mov
les
jnp
addr16
mov
pop
xor
nop
dec
xor
mov
mov
inc
mov
push
or
adc
test
lret
shll
out
sub
mov
addl
call
in
inc
adc
dec
orl
rcll
ret
jp
add
add
adc
and
out
pop
xlat
cmpsl
pushl
mov
lret
or
dec
ret
xchg
sti
rcrb
xor
lds
out
push
or
je,pn
out
orl
sti
xchg
inc
sbb
fiaddl
adcl
cmp
jb
xchg
iret
shlb
mov
cmc
inc
xchg
popa
adc
xchg
leave
mov
xor
jecxz
jmp
and
pop
scas
mov
std
sub
out
out
jnp
jp
ss
out
and
add
or
cmp
inc
mov
cmp
dec
dec
jp
mov
addb
adc
or
cmp
mov
scas
sti
sub
mov
mov
fldcw
mov
popf
sbb
ffreep
mov
movsl
rcrl
test
add
xor
pop
xor
sbb
fcompl
ret
ja
add
or
push
jmp
fdiv
test
lcall
fwait
dec
fisttpl
and
inc
bound
add
add
lahf
movsl
rcrb
inc
icebp
loop
add
lahf
mov
fdivrl
and
cmp
data16
mov
stc
push
test
jmp
add
je
into
cmpsb
int
inc
lret
push
in
call
rorb
mov
xlat
dec
mov
mov
add
outsl
add
gs
lea
xor
outsb
lock
add
add
scas
movsb
pop
aas
shrb
test
mov
add
stos
xor
inc
xorb
clc
mov
add
and
push
jecxz
add
test
daa
jno
cmpl
arpl
repz
xchg
lcall
cmpsb
mov
inc
xor
push
and
push
movb
add
in
shlb
dec
lds
lahf
inc
nop
in
xor
pop
arpl
adcl
jecxz,pn
fnclex
mov
adcb
xor
add
fisubrl
xchg
rorl
cmc
negb
int
sbb
or
xchg
test
inc
pop
add
add
dec
xor
xchg
pop
subl
push
rorl
aad
or
xchg
inc
lcall
sahf
xchg
aaa
leave
xchg
xor
add
in
aaa
imul
ja
add
mov
cmp
loope
push
movsl
imul
xchg
pop
xchg
sarb
sbb
scas
dec
sbb
xchg
mov
cs
push
inc
test
in
lcall
cmpsl
ljmp
out
dec
mov
das
push
cltd
enter
mov
pop
and
xchg
call
mov
xorl
cld
ss
and
add
mov
mov
mov
pop
mov
or
les
or
cmp
lea
stc
xchg
inc
insl
jne
daa
inc
cwtl
in
jg
cwtl
arpl
rcl
mov
sub
push
ljmp
mov
xchg
inc
fsubs
daa
call
or
sub
scas
mov
cs
or
mov
mov
or
jb
mov
push
push
and
jl
mov
jnp
pop
push
aam
aam
mov
push
jne
pop
in
ljmp
ljmp
pop
mov
mov
les
sub
out
shl
sbb
or
jge
bound
movsb
mov
xor
ret
test
loopw
xlat
fldenv
lret
fs
push
mov
add
les
sbb
cmpxchg
jb
movsb
push
cmp
imul
adc
addl
jb
in
das
sarl
divb
movsb
test
shll
sbb
pop
lahf
lret
adc
inc
cmp
cwtl
ds
cmp
sbb
gs
adc
ds
adc
out
ret
fs
inc
pop
xor
cmp
push
push
insl
xchg
repnz
mov
vphaddbw
lcall
xor
test
xor
jae
int
mov
dec
fs
sahf
lret
rcll
mov
into
pop
aad
jmp
xchg
roll
fdivrs
mov
and
lret
push
test
aaa
sub
and
xor
aad
mov
and
sub
test
stc
mov
movsb
bound
mov
cmp
les
mov
pop
xor
fstpl
inc
jg
or
mov
lret
shll
dec
aam
sbb
push
lea
xchg
stc
sbbl
ret
lcall
popf
int
stc
imul
cmp
mov
or
and
or
dec
or
sbb
iret
test
repnz
pop
push
popl
push
pop
out
mov
push
and
pop
or
lea
or
test
test
lcall
add
mov
popf
repnz
bound
out
inc
xchg
cmp
push
xchg
nop
or
xchg
mov
jmp
scas
push
mov
push
xchg
aad
addl
test
iret
jle
or
mov
pop
jge
iretw
movsl
cmpsl
xchg
ja
addl
and
inc
or
and
jmp
orl
mov
test
dec
mov
mov
andl
pop
ljmp
test
add
and
gs
test
lret
int
rolb
sub
inc
pop
push
mov
cmp
xor
rclb
mov
ret
js
push
mov
jge
cwtl
cmpsl
enter
dec
shl
leave
cmp
pop
mov
add
iret
xchg
jno
fidivrl
fldenv
dec
gs
jecxz
daa
addr16
xchg
push
ret
je
jmp
dec
push
dec
aam
cmp
movsl
pop
dec
dec
cltd
xchg
testl
inc
inc
cmp
aad
sub
inc
mov
incb
lret
cltd
mov
lret
outsl
xchg
xor
pop
dec
aas
cmp
jae
addr16
mov
jo
fnstenv
push
ss
mov
pop
sub
mov
int3
and
jp
rcll
lret
shrl
sub
out
mov
mov
mov
mov
pushf
dec
fs
popf
mov
cmpsb
test
mov
rcll
bound
mov
icebp
fwait
xchg
mov
cs
xchg
inc
dec
and
mov
sub
outsl
call
xchg
push
and
call
stc
cmp
mov
and
repnz
mov
push
dec
ds
imul
and
inc
iret
mov
in
inc
icebp
jl
or
mov
pushf
sub
mov
les
xor
add
insl
push
test
sbb
rcl
ror
loop
xor
pushf
movl
mov
mov
cmp
pop
and
lds
cmp
jle
movsl
cmp
mov
mov
rolb
insl
incb
orb
add
xchg
std
int
sbb
xchg
test
adc
inc
negb
mov
mov
pop
or
gs
sub
fs
sub
stos
stos
js
popf
inc
push
sub
aad
stos
movsb
stos
or
mov
into
pop
add
xor
inc
and
xor
test
lods
sbb
clc
xchg
inc
cs
xlat
fimuls
test
into
and
lcall
ret
xchg
bound
lock
js
aaa
mov
clc
sbb
and
lcall
cmp
ljmp
inc
mov
cmp
rorb
cld
mov
insl
add
mov
lea
add
jmp
cmc
mov
push
cmp
lret
adc
movb
jae
rcrb
fsubrl
push
ret
sbb
xchg
or
inc
add
ljmp
dec
and
pop
loope
movsl
popf
dec
popa
sbb
or
xor
adc
ljmp
push
cmp
je
shl
adc
xor
or
xchg
mov
mov
mov
and
insb
jno
jns
xchg
or
sbb
add
add
or
dec
leave
mov
in
sub
xchg
add
fcomps
mov
cs
sbb
xchg
xor
fwait
sub
test
fstpl
bound
add
cmp
ret
loop
mov
orl
or
inc
mov
cs
adc
popf
gs
jg
rorb
sahf
js
and
or
add
mov
sbb
sarl
arpl
stos
or
sbb
stos
ror
sub
lret
cltd
add
stc
mov
out
sub
add
mov
add
xchg
hlt
ljmp
mov
jg
cmp
bound
clc
mov
stc
clc
push
dec
sub
rorl
das
movl
mull
pop
das
lret
fmuls
jnp
cvttps2pi
les
shlb
bound
sub
ja
adcb
jnp
xorl
xchg
add
or
xchg
jne
fistps
cmp
mov
test
cmpsb
fsubrl
rcrb
in
push
loopne
les
lock
mov
and
xchg
dec
orl
cmpsl
add
mov
inc
jg
and
cmpsl
clc
mov
mov
scas
pop
fs
mov
mov
mov
ds
rcl
sbb
mov
pop
cmpsb
cmp
push
add
js
push
cltd
lods
mov
xor
sbb
xor
stc
jb
sti
jb
cmc
stos
sub
repz
xlat
les
and
push
sahf
dec
add
pusha
jnp
adcl
repz
clc
sbb
pop
inc
mov
xchg
push
outsb
int
roll
xchg
sbb
or
add
mov
rcll
mov
sti
jb
push
repz
mov
out
inc
arpl
stos
adc
inc
leave
pop
in
xchg
lahf
pop
mov
adc
dec
fidivrl
cmpb
sar
mov
xchg
sti
or
repnz
jg
add
out
icebp
fs
push
lds
inc
loop
push
cli
outsb
sahf
pusha
movsl
stos
std
lods
int
popf
xlat
iret
sub
lock
gs
lret
inc
test
mov
popf
sbb
inc
jle
xchg
dec
out
pushf
add
dec
lea
outsb
mov
mov
add
push
pushf
jb
mov
cwtl
xor
xchg
or
add
mov
adc
test
mov
lahf
cmpsl
in
cmp
add
cmp
sub
out
andb
in
out
sub
pop
sbb
iret
jmp
inc
sub
shl
inc
bound
andb
xlat
dec
sbb
aam
mov
popa
jne
movsb
mov
orl
sahf
inc
dec
sbb
mov
andl
dec
mov
incl
popf
mov
fbld
ljmp
sarb
mov
inc
push
mov
pop
jg
adc
xor
pusha
push
ds
imul
sti
lret
sub
lret
pop
pop
int3
xchg
xchg
daa
subl
mov
mov
loopne
popa
add
adc
sbb
pop
clc
mov
xor
and
fcoms
int
outsl
sahf
dec
popf
or
dec
push
gs
pop
mov
pop
xlat
jmp
icebp
mov
das
mov
or
lcall
add
fwait
int3
fildl
mov
ret
or
mov
mov
cwtl
inc
call
fwait
pop
mov
mov
ret
xor
pop
dec
dec
mov
xor
in
mov
ret
adc
adc
je
xchg
cwtl
insb
add
mov
repz
lea
sub
inc
cmpsl
and
data16
sub
adc
fbstp
jne
xor
orl
and
xchg
lods
xchg
or
sub
pop
data16
adcl
mov
pushf
xchg
popf
mov
aaa
or
insb
int
cmpsl
jmp
fsubs
pop
sub
shrb
stos
arpl
pop
lea
jns
sahf
loope
stos
and
xchg
lret
cli
cmpsb
negb
lea
popf
push
or
scas
cmp
and
or
fadds
add
lea
outsl
stos
popa
imul
dec
mov
and
sbbl
stc
mov
cmp
pop
ja
push
int
jp
std
rcl
mov
rorb
lret
in
bound
jp
mov
and
adc
pusha
and
pushf
cmp
add
out
mov
mov
sub
sub
out
and
mov
mov
lret
jge
roll
adcl
or
sub
out
xor
subl
nop
sbb
and
mov
jbe
sbb
xchg
sti
sahf
push
andb
pop
shrb
mov
test
mov
dec
push
nop
lcall
int3
test
loope
in
inc
add
inc
call
cs
dec
sbb
test
ret
xchg
ret
lods
ljmp
ficompl
in
loopne
call
test
fldenv
and
std
jecxz
xchg
xchg
stos
mov
fadd
lahf
leave
dec
xor
lea
jns
and
cmp
xor
loopne
and
jmp
lods
ds
cmp
stos
jbe
xchg
xchg
add
and
pushf
andb
adc
fwait
movsb
daa
sbb
adc
xor
and
aam
and
andl
les
and
sbb
sahf
pop
xor
add
pushf
sbb
mov
mov
or
sub
test
cwtl
add
jmp
mov
mov
fwait
pop
insb
cmp
loope
sbb
lods
xchg
ror
push
icebp
mov
or
les
push
movsb
ret
test
or
sti
jno
mov
popf
lea
out
or
test
push
jmp
xor
inc
shlb
add
xor
jg
lahf
arpl
add
fstl
jnp
xchg
cld
cld
mov
sub
xchg
stos
lods
orb
fsub
notb
dec
xor
and
xchg
mov
fidivl
into
xor
popa
test
in
xchg
xchg
mov
out
xchg
and
or
lret
or
push
mov
das
add
push
pusha
lahf
xchg
adc
test
pusha
in
push
arpl
aam
sub
inc
sub
cmpsl
insl
fs
lods
lahf
jmp
jle
clc
loopne
push
inc
popf
dec
test
imul
add
ret
aam
cmpsb
lea
mov
xchg
test
test
xchg
ds
icebp
sahf
out
popa
icebp
inc
cmpsl
cmp
mov
xchg
mov
inc
lcall
data16
test
idivl
cmp
loope
and
dec
movsl
add
sar
xchg
xchg
mov
or
call
inc
out
nop
jno
xor
mov
jnp
aam
add
mov
and
cmp
test
pop
cmc
xor
push
les
add
aas
xchg
sbb
jb
jl
ds
leave
pop
stos
cmc
shlb
mov
mov
dec
mov
mov
clc
pushf
mov
test
mov
adc
hlt
mov
push
cltd
ja
rorb
sbb
jne
xchg
sbb
lock
lahf
loopne
ljmp
testl
inc
push
and
clc
adc
mov
loop
mov
push
jne
into
addl
add
call
stos
pop
and
aas
pop
ret
add
cwtl
aam
push
mov
std
loope
cwtl
inc
icebp
pop
mov
xchg
adcb
lods
ret
mov
xor
sbb
les
dec
test
inc
add
mov
xor
shr
leave
mov
cltd
popf
insl
inc
add
mov
xchg
sbbl
sbbl
mov
sarb
jo
adc
pop
dec
icebp
mov
clc
push
fwait
push
mov
cltd
xchg
pop
push
jnp
mov
or
lock
pop
fimuls
sbb
adc
mov
push
or
movsl
sarb
mov
mov
lcall
mov
mov
int3
int3
mov
xchg
jb
mov
jae
sub
cmp
addl
inc
xchg
sbb
sub
sub
cmp
fildl
nop
test
lcall
xchg
add
lcall
dec
pop
aam
enter
popa
pop
sbb
or
sub
mov
sub
add
rorl
test
rcl
xor
mov
fwait
mov
mov
jle
int
dec
ja
movsb
cwtl
xorb
stos
mov
inc
jo
xchg
inc
scas
mov
rol
inc
mov
sub
xchg
inc
imul
into
xchg
add
and
xchg
inc
bound
xchg
inc
mov
mov
add
nop
movsb
jnp
cwtl
les
clc
sub
xchg
inc
je
xchg
inc
mov
sbb
dec
mov
inc
and
xchg
xchg
inc
push
xchg
pusha
enter
in
xchg
inc
movsl
push
xchg
and
and
add
mov
mov
cmp
enter
xchg
ror
lcall
push
xchg
loope
out
inc
mov
sub
xchg
inc
push
xchg
inc
test
out
rolb
xchg
inc
arpl
xchg
inc
mov
loopne
rolb
cmpsl
nop
cmpl
rolb
stc
test
mov
push
xchg
popa
mov
loope
inc
xor
mov
outsb
sub
xchg
inc
cmp
xchg
inc
xchg
cmpsb
xchg
roll
popf
inc
and
lcall
ret
or
nop
movsb
jns
cwtl
fs
sbb
mov
lret
and
push
xchg
inc
jb
popf
inc
and
out
push
roll
popf
inc
and
lcall
movsb
call
xchg
xchg
inc
push
xchg
inc
enter
mov
or
cwtl
adc
mov
cli
or
add
add
sub
mov
inc
pop
sti
mov
xor
xchg
dec
cmp
add
cmp
or
adc
aas
in
mov
pop
xchg
or
mov
or
hlt
lcall
mov
mov
adc
xor
in
movb
add
outsl
mov
inc
xchg
mov
mov
ffree
ljmp
adc
push
into
stc
cmp
dec
xchg
popa
push
fxch
jns
and
pop
mov
ret
adc
es
test
inc
lods
fsubl
pop
mov
dec
std
stos
push
ffree
or
scas
lcall
pushf
mov
popf
or
push
or
add
adc
test
fs
mov
xchg
nop
fs
cltd
push
jp
xor
cmc
mov
std
dec
fcmovnu
je
aad
fldcw
cwtl
rol
insb
xchg
push
xchg
xchg
rol
or
scas
lcall
bound
xchg
test
lock
jmp
ljmp
test
pop
push
mov
push
pop
pop
iret
hlt
xchg
les
rcr
push
sub
mov
mov
and
out
ficomps
les
enter
mov
push
mov
enter
lret
xchg
movsl
sbb
popf
clc
or
leave
pop
mov
dec
lods
test
iret
std
icebp
pop
nop
sbb
jbe
pushf
xor
pusha
adc
ja
adc
sub
sbb
lcall
mov
out
xchg
xor
sbb
or
xchg
add
cmp
mov
xor
mov
fcompl
pushf
mov
or
in
sbb
push
mov
push
mov
fstl
xchg
testl
pusha
js
testl
fcomps
fwait
and
pandn
sub
and
xchg
movsb
mov
mov
or
pop
xchg
jo
popf
mov
mov
pop
cltd
jo
mov
xchg
push
add
pushf
sbb
xchg
xchg
ficomps
xchg
sub
or
lret
cmp
cmp
or
adc
sbb
sbb
inc
lret
xor
pop
int3
and
add
push
xor
xchg
adc
sbb
inc
mov
xchg
add
mov
pop
mov
add
sbb
xchg
xor
adc
pop
push
push
andl
call
xchg
xor
adc
inc
movsl
or
adc
fimull
ss
roll
fwait
scas
pop
jmp
or
pop
add
adc
push
fstps
xchg
or
or
lret
cltd
adc
sahf
add
jo
xchg
ficomps
sbb
xchg
ficomps
movsb
cltd
pop
add
call
pushf
popa
addb
xchg
cltd
cwtl
scas
lahf
popa
inc
xchg
xchg
lea
jge
mov
nop
sbb
pop
sahf
jo
test
out
adc
rorl
add
or
shrl
call
iret
ret
movsb
cmp
xchg
push
pop
xchg
mov
cmp
out
xchg
push
pop
push
sbb
add
mov
xchg
mov
pop
outsb
lahf
xchg
mov
mov
ret
enter
cmp
andb
mov
fisubrs
movsb
out
xchg
addr16
movsb
test
andl
incb
cmp
mov
cmp
dec
jno
rcll
sbb
xchg
adc
adc
test
lahf
fwait
mov
xchg
pop
adc
call
andb
jbe
lahf
hlt
fidivs
sbb
lret
rorb
push
jle
mov
lahf
insb
fmul
pop
pop
scas
ret
fists
enter
cld
addb
fdivrp
das
push
xor
pop
sbb
in
or
or
jb
sub
shr
test
cwtl
out
js
icebp
adc
adcb
movsb
cwtl
mov
xchg
sbbb
adc
mov
in
nop
pop
in
addb
mov
inc
leave
cmp
jecxz
xchg
mov
addl
ds
insl
inc
or
movsl
push
rorl
mov
mov
aam
and
nop
xchg
nop
adc
ret
test
push
xchg
mov
fcoms
fs
ret
stos
outsl
adc
movsb
mov
mov
xchg
cmpsl
push
test
mov
insb
sbb
aad
xchg
xchg
mov
adc
xchg
mov
cltd
mov
lcall
fsubrl
adc
in
pop
jp
mov
xor
xchg
test
pop
xchg
out
and
hlt
sub
repnz
jg
cmp
cld
sub
scas
lea
xchg
mov
pop
orb
lea
loopne
in
and
lods
hlt
dec
xchg
pop
das
mov
aam
lea
mov
test
nop
scas
pushf
sbb
pop
and
test
mov
subb
mov
xor
movsbw
lea
push
movb
mov
mov
mov
pusha
mov
not
lea
mov
pushl
xchg
movsbw
movl
lea
setle
lea
push
pushf
pusha
movl
pushf
call
mov
lea
jae
push
mov
lea
jmp
mov
cmove
inc
xchg
pop
fsubs
mov
xchg
push
js
inc
sahf
rcll
add
in
xchg
rol
pop
mov
icebp
xor
imulb
daa
push
dec
sbb
xor
push
sub
arpl
xchg
lcall
inc
or
dec
xchg
loopne
mov
cmp
cmp
mov
adc
in
mov
test
push
and
rorb
push
mov
test
cmp
test
mov
fimuls
or
xchg
in
into
les
call
cmp
push
adc
cwtl
and
out
loop
ret
xchg
lcall
je
jmp
cwtl
lea
push
lea
pusha
pushf
push
xchg
push
pushl
popl
pushl
mov
pushl
lea
call
call
lods
mov
or
fsubrs
jle
sbb
aaa
mov
mov
dec
adc
xchg
sbb
mov
setbe
push
call
inc
das
add
or
ss
jbe
add
jns
cwtl
into
outsl
mov
and
sbbb
nop
xchg
adc
stos
repnz
das
insb
out
push
negl
insb
xor
mov
ljmp
and
push
mov
xchg
sbb
idivb
ljmp
enter
xchg
pop
jle
test
mov
lcall
fimull
mov
pop
xchg
cmp
inc
sub
cld
idivb
jmp
jge
stc
popf
ljmp
jo
clc
jge
outsb
cld
je
jae
jne
repz
rcrl
mov
inc
stos
sub
repnz
mov
sar
test
jge
push
cld
dec
jbe
aam
push
jno
cmp
xchg
xchg
lcall
test
mov
push
add
pop
shr
push
jge
pop
outsb
mov
mov
jo
lret
inc
mov
jge
out
fdivs
mov
test
jo
int3
xchg
mov
sahf
fldcw
faddl
mov
sti
add
mov
jge
mov
jae
imul
mov
xchg
lcall
movl
pusha
pushf
jmp
jmp
add
pop
gs
outsb
outsl
add
mov
add
movzwl
call
push
movl
call
sub
lret
movsl
add
ljmp
pop
test
pushf
cwtl
sub
push
aam
dec
inc
sahf
and
jne
jnp
mov
mov
add
inc
jl
pop
mov
xor
testb
mov
add
aas
xor
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
push
xor
inc
inc
pop
add
inc
and
shll
and
pushf
mov
pushf
pushl
ret
mov
jmp
push
call
ljmp
jne
test
stc
test
push
pushl
popf
push
pushf
lea
jmp
lea
pusha
pushf
movb
movl
jmp
call
sarb
mov
inc
dec
mov
mov
ss
lock
mov
daa
jb
sub
mov
and
hlt
adc
rcll
push
fiadds
pushf
pop
data16
fiaddl
movsl
and
add
push
outsl
pop
movsl
cmp
ljmp
lock
xchg
mov
call
ret
mov
movsl
sbb
fiaddl
sbb
sbb
inc
jnp
addr16
mov
xchg
add
lea
pusha
sub
ja
push
stc
jg
pusha
bt
mov
jmp
lea
call
pusha
pushf
pushf
jmp
xlat
jmp
and
jge
inc
mov
movsb
inc
icebp
push
incl
add
loopne
pusha
xchg
push
mov
xor
lds
aam
inc
leave
lret
add
adc
xchg
cltd
sbb
mov
loopne
aad
gs
fdiv
ja
fcomps
fmuls
lds
clc
mov
pop
out
loope
test
out
in
mulb
xor
shrb
sar
rcrl
xor
or
test
lcall
push
push
adc
je
and
fdivrl
mov
out
mov
inc
jge
pop
add
sti
jl
and
mov
add
mov
jg
push
jg
and
cltd
dec
push
imul
cmc
xlat
inc
mov
or
sub
sub
xchg
lcall
xor
testl
xorb
leave
cmpsb
ret
bound
and
popa
sbb
cwtl
push
fidivrs
movb
mov
lcall
sbb
ljmp
mov
jnp
xor
mov
cmpsl
inc
and
std
sahf
mov
pop
adc
mov
frstor
push
fiaddl
adc
pop
adc
in
stc
pop
inc
pop
sahf
pop
mov
pop
inc
addr16
negl
lret
scas
stos
xchg
push
stc
js
ss
push
out
and
xchg
cmp
jae
jecxz
push
in
push
xchg
jecxz
xchg
pop
ljmp
lahf
adc
xchg
lcall
pop
add
pushf
into
or
sahf
rcll
jge
mov
jl
mov
mov
lret
cli
in
jb
jno
mov
lcall
or
sbb
jne
and
mov
push
mov
stos
push
rolb
mov
adc
pop
xchg
lcall
rorb
or
cmpsl
out
outsb
aad
arpl
icebp
mov
outsl
insb
mov
cmp
jne
mov
test
and
inc
sbbl
or
dec
mov
jae
int
or
scas
fnstcw
jo
mov
jae
and
es
lret
ffreep
xchg
lcall
bswap
lea
xchg
pop
push
pushf
movzwl
push
mov
lea
mov
mov
mov
pushf
mov
call
mov
repnz
aaa
sbb
sarl
pop
movsl
out
mov
push
pop
mov
push
movsb
adc
xchg
inc
cli
mov
fbld
mov
std
sub
sarb
or
mov
mov
push
js
mov
sbb
js
push
inc
adc
adc
imul
and
adc
cli
into
and
mov
pusha
jae
mov
jecxz
gs
movsb
repz
mov
rcll
or
test
xor
xchg
xor
sub
movsb
int3
add
aas
imul
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
dec
push
inc
inc
dec
dec
inc
pop
add
movsl
push
lods
jbe
enter
loope
stos
lret
in
arpl
out
roll
mov
es
mov
inc
jge
jae
sub
dec
int3
dec
and
mov
lea
pushf
add
gs
andb
jg
xor
adc
popa
fs
jae,pt
sbb
mov
lods
lret
test
shrb
lcall
pop
dec
pop
jb
xor
jmp
mov
hlt
addr16
xchg
lcall
lea
ja
pushf
push
imul
call
pushf
not
mov
pop
mov
push
jmp
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
add
mov
in
leave
and
ds
mov
push
xchg
inc
pop
xchg
cmc
inc
xchg
call
add
or
and
and
gs
fisubs
mov
xchg
push
fwait
fwait
lods
lds
out
stos
repz
inc
in
xchg
repz
adc
outsl
dec
cltd
mov
mov
lret
or
lcall
call
jbe
insb
jecxz
pop
lcall
outsl
ljmp
and
sub
test
adc
cli
dec
movsl
bswap
pop
pop
out
mov
decb
inc
jl
lret
push
or
sub
aad
lcall
fsub
inc
call
lret
inc
and
pop
push
add
pushf
pushf
pushl
popl
movw
pushl
ret
stc
imul
push
pushf
add
pusha
push
push
lea
jmp
mov
cmc
cmp
adc
fdivrp
mov
out
sbb
or
or
xor
lea
jno
pop
xchg
leave
push
pop
out
mov
stc
es
jl
mov
dec
aam
inc
cwtl
pop
mov
xchg
lcall
fs
je
push
movsbw
lea
adc
mov
cmp
xor
sub
shl
jmp
pushf
pusha
lea
js
je
cmp
call
or
push
movb
add
push
sahf
xor
or
sbb
loope
sbb
sbb
push
jmp
mov
mov
lods
out
inc
in
pusha
xchg
test
orb
cmc
loop
lcall
xchg
or
sbb
hlt
xchg
out
in
push
mov
or
jmp
lcall
pop
insb
xlat
xor
push
test
lahf
push
jmp
cli
sub
mov
cld
add
xor
and
bnd
dec
cmpsb
adc
sub
out
push
sbb
or
iret
xchg
rcl
push
and
xchg
inc
shlb
jns
das
adc
cs
xlat
dec
push
mov
and
mov
pop
inc
sarb
jmp
js
lcall
mov
mov
or
movsb
mov
mov
fsubrs
and
pop
dec
cmp
cs
outsb
fwait
and
into
insb
in
xchg
nop
push
pop
roll
ss
cmp
fdivrp
and
mov
sbb
nop
xchg
jae
pop
test
pop
sbb
jg
sahf
out
out
int
lret
or
enter
jle
pusha
dec
decl
inc
jl
sub
mov
add
inc
rorl
xchg
inc
call
jb
jns
add
aas
xor
inc
push
inc
pop
dec
inc
pop
add
aam
inc
call
in
call
mull
mov
fs
jae
call
pusha
pusha
xchg
pushf
call
push
mov
aaa
jg
push
inc
mov
pusha
lods
fcomps
bound
jp
sub
push
addr16
sub
loope
scas
or
gs
push
push
icebp
mov
or
rolb
jle
mov
outsb
mov
fldcw
in
cmp
sub
in
leave
je
mov
idivl
cmp
bound
lock
sbb
adcb
lea
jb
cmp
call
add
pop
inc
js
push
push
js
gs
imul
jae
inc
and
fidivrs
adc
andb
out
xchg
ret
inc
jmp
leave
notb
jp
sub
int3
and
in
cmp
and
sarb
pop
out
lds
jl
les
sbb
jno
outsl
outsb
repz
aad
xchg
dec
mov
imul
int
push
fisubrl
xor
popa
loop
test
push
leave
inc
bswap
xor
pusha
mov
cmp
push
movsbw
push
lea
call
movl
lahf
lea
pushf
movw
movl
jmp
push
call
lret
or
out
add
lret
adc
push
push
call
call
add
push
gs
arpl
mov
cmp
adc
repz
dec
test
push
inc
lcall
jbe
xor
into
mov
dec
test
test
test
mov
xchg
lcall
mov
push
push
incl
mov
outsl
mov
test
push
cmpl
lods
pop
mov
mov
test
jmp
imul
out
sbb
rol
sbb
mov
ror
movsl
aam
cmp
mov
push
rclb
lds
or
jo
loop
push
xchg
cwtl
dec
test
inc
in
leave
insl
dec
mov
dec
lods
adc
sbb
dec
cwtl
aas
mov
leave
icebp
stc
clc
or
call
call
lea
je
stc
sub
stc
cmp
push
call
lea
jne
stc
popf
pushf
lea
jmp
jmp
mov
call
mov
call
movl
mov
movl
push
pushl
popl
mov
push
pushf
pushf
pushl
ret
or
sub
add
add
mov
add
out
add
add
fadds
add
add
add
add
and
add
mov
fildl
add
add
add
sub
add
jg
add
fildl
add
add
add
add
add
add
clc
test
add
push
add
add
popf
add
add
jns
add
jge
add
add
cli
adc
add
dec
add
shlb
add
ja
add
xor
je
add
add
sub
add
xor
lea
add
add
jns
add
inc
add
push
dec
add
add
add
add
inc
add
or
add
cmpsb
sbb
add
add
jbe
add
flds
add
jge
add
movsl
add
add
pop
add
fsts
add
dec
add
add
add
lea
add
add
add
dec
add
scas
pushf
add
add
add
add
jne
add
jp
add
add
add
mov
add
add
push
add
xor
add
add
add
add
add
outsl
add
adcb
add
add
add
je
add
or
add
add
add
mov
add
add
add
add
cmp
je
add
add
add
add
jge
add
add
add
stos
cs
push
aaa
insb
iret
push
imul
orl
jbe
pop
int
scas
cltd
xor
rorb
xchg
or
or
or
adc
test
lods
xor
xor
loopne
mov
pushf
imul
xchg
lcall
sbb
loopne
stc
and
fiaddl
mov
push
outsb
cltd
and
xchg
cwtl
dec
adc
push
movsb
inc
xchg
mov
cmp
xor
test
out
out
mov
xchg
notb
jp
or
ja
add
lods
lock
ret
xchg
cmp
lea
mov
test
out
stos
call
mov
cli
adc
data16
inc
xchg
cmp
aam
adc
xchg
cmp
dec
cmpsb
or
mov
jae
mov
xchg
push
lahf
movsb
xchg
lcall
xor
inc
call
cmc
cmp
or
add
jmp
lea
je
pusha
cmp
bt
add
clc
cmc
stc
pushf
cmp
pushl
pushl
lea
jbe
push
lea
jb
pusha
clc
cmp
call
pushf
pushf
lea
je
movzbw
mov
jmp
jle
sbb
in
scas
jb
inc
adc
jg
adc
cmp
xchg
xchg
dec
inc
adc
pushf
cmp
xor
std
les
addb
inc
or
jg
aas
cmp
sub
loopne
movsb
loope
xor
xchg
shl
jg
loop
mov
test
test
sbb
lods
je
lods
inc
mov
jno
mov
dec
mov
jbe
push
outsb
jp
bound
cmp
aaa
rcll
lods
sbb
cli
xchg
or
xchg
lcall
mov
fldl
add
test
and
add
je
add
inc
and
sbb
xchg
movw
rol
mov
mov
clc
sub
pushf
jmp
bt
clc
cmc
or
pusha
lea
jne
setne
setno
pusha
not
mov
push
mov
pushf
popl
clc
pusha
cmp
mov
or
call
orb
inc
lods
xlat
sbb
push
xchg
es
aam
push
xor
bound
lods
mov
sahf
addr16
xor
dec
sub
push
testb
popa
das
inc
stos
push
lock
push
xor
stc
notb
ret
push
mov
lahf
lahf
pushl
popl
lahf
not
mov
cwtl
sete
not
movl
pop
not
lahf
lea
call
push
call
movsb
ds
sbb
dec
repnz
inc
iret
push
and
xor
pop
pop
mov
mov
sub
cmp
push
xchg
fnsetpm(287
push
jno
mov
in
js
push
push
pop
cmp
and
cmp
inc
movsb
shll
aaa
xchg
fcomi
xor
scas
out
add
xor
jmp
lret
imul
outsb
stc
faddl
popa
sub
scas
sbb
xchg
fwait
and
push
mov
subl
in
frstor
or
notb
shrb
cmpsb
or
outsb
cmpsl
in
mov
fistps
mov
lock
int
and
hlt
sub
adc
icebp
push
imul
xchg
outsl
repz
jmp
or
cld
pop
lock
xchg
lcall
add
inc
call
and
cmp
inc
and
pushf
lea
je
jmp
jmp
jae
fiaddl
insb
mov
push
fwait
push
lahf
xor
out
add
ror
imul
dec
loope
test
out
ret
in
faddl
enter
pop
inc
jp
mov
mov
lock
lods
xchg
push
dec
xchg
lcall
fwait
js
leave
lods
mov
imul
ret
pushf
mov
push
adc
das
cmp
loop
inc
sbb
mov
sub
mov
addr16
imul
mov
adc
pop
shrb
cwtl
icebp
lcall
cli
and
mov
test
cmp
das
ret
adc
push
ret
add
jne
gs
gs
outsb
je
push
call
lds
and
xchg
movw
lahf
cwtl
pushl
popl
movzbw
cwtl
not
pop
mov
not
lea
movsbw
lahf
movl
call
mov
add
ss
in
cli
dec
cwtl
add
in
jl
add
inc
popf
test
inc
push
call
lea
inc
int
and
lds
push
dec
mov
dec
stc
jge
aas
test
sub
in
rclb
lock
arpl
xor
mov
jo
inc
rcrl
in
pop
repz
push
bound
push
sahf
sub
lcall
and
push
lea
ror
or
push
jno
cmp
les
jmp
xchg
adc
call
and
add
jl
xchg
xchg
lcall
in
call
adc
jae
cmp
push
cmp
mov
jmp
cmc
test
sub
cmc
movb
test
pushl
popl
push
cmp
call
pushl
lea
jne
daa
aaa
xor
sbb
mov
dec
push
add
cmp
mov
pusha
mov
test
stc
test
mov
lea
je
stc
cmp
stc
sub
test
cmp
jmp
lea
pop
decl
cmc
mov
pusha
ret
push
gs
dec
flds
pop
cld
testb
jge
cs
push
pop
inc
in
ficompl
loope
xchg
pop
xor
and
fwait
in
scas
jmp
mov
xor
fldenv
pop
repnz
nop
in
mov
lcall
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
test
add
pusha
push
mov
pushf
lea
jmp
push
pusha
mov
pushf
pusha
mov
movb
lea
jmp
lea
mov
pushf
pushf
popl
jmp
lahf
pusha
lahf
lea
pusha
movb
call
add
dec
or
mov
dec
btr
bts
bsf
add
movzbw
movl
sbb
shl
btc
mov
cmp
call
dec
push
push
inc
push
cmp
cs
insb
add
ficoms
cmp
jne
call
jp
push
mul
repnz
das
mov
pop
ret
or
xchg
adc
fimull
mov
sbb
jnp
test
adc
inc
jl
adc
adc
pop
call
xor
add
mov
gs
gs
stos
cmpsb
cmp
test
push
pop
icebp
ret
iret
cmp
jns
fsubr
jns
push
sbb
cmp
mov
sbb
loop
js
ss
in
xchg
cmp
imul
lcall
jg
leave
movsl
repnz
and
push
imulb
dec
lret
out
mov
popl
mov
ljmp
out
push
add
pusha
repz
add
lock
clc
popf
out
jae
out
cld
sub
and
inc
sbb
xchg
mov
mov
jno
xchg
gs
rcrb
je
fnstenvs
rorl
imul
rcrb
mov
nop
mov
adc
out
mov
sub
adcl
ja
leave
mov
in
movsb
mov
sbb
inc
hlt
shrb
ss
scas
xchg
cmc
jg
mov
outsb
mov
das
hlt
and
in
sub
arpl
insb
xchg
xchg
mov
and
adc
fistpll
test
inc
xchg
or
mov
inc
jmp
fisttpll
xchg
sub
fnstsw
dec
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
mov
inc
call
or
sub
add
add
add
gs
push
call
adc
rolb
jl
in
call
call
fs
ja
jmp
add
pop
imul
insl
add
add
jb
jne
insb
push
jne
jb
add
mov
sbb
add
add
add
add
add
add
add
xor
clc
sub
add
add
add
add
ds
or
add
add
sub
add
add
add
add
add
flds
add
add
add
add
add
add
push
das
add
add
add
add
xor
js
add
add
arpl
push
push
and
add
cmp
or
and
incb
imul
inc
jge
lahf
and
es
push
jecxz
mov
mov
inc
mov
pop
sbb
aam
cmpsb
movb
mov
xor
in
out
add
popa
aam
rorb
jp
sbb
in
pop
jmp
or
sub
add
add
mov
add
out
add
add
fadds
add
add
add
add
and
add
mov
fildl
add
add
add
sub
add
jg
add
fildl
add
add
add
add
add
add
clc
test
add
push
add
add
popf
add
add
jns
add
jge
add
add
cli
adc
add
dec
add
shlb
add
ja
add
xor
je
add
add
sub
add
xor
lea
add
add
jns
add
inc
add
push
dec
add
add
add
add
inc
add
or
add
cmpsb
sbb
add
add
jbe
add
flds
add
jge
add
movsl
add
add
pop
add
fsts
add
dec
add
add
add
lea
add
add
add
dec
add
scas
pushf
add
add
add
add
jne
add
jp
add
add
add
mov
add
add
push
add
xor
add
add
add
add
add
outsl
add
adcb
add
add
add
je
add
or
add
add
add
mov
add
add
add
add
cmp
je
add
add
add
add
jge
add
add
add
mov
mov
push
or
inc
inc
and
cmp
add
jmp
push
jmp
cmp
mov
lea
je
push
push
pushl
pusha
lea
jmp
pushl
call
mov
push
lods
call
out
je
jbe
or
or
inc
movsl
shlb
outsb
icebp
push
xchg
jg
pop
out
ljmp
jge
mov
cmpsl
ds
clc
imul
insb
sbb
jp
fwait
pop
fidivl
pop
and
add
mov
or
shlb
xchg
jle
rclb
xchg
lcall
jl
add
fs
ja
bswap
add
sbb
sar
or
dec
shr
push
inc
shrd
mov
shr
add
pusha
mov
lea
jmp
jmp
pusha
pushf
lea
jne
test
std
stc
cld
popf
push
pushl
push
lea
jmp
cmp
call
mov
movzbl
pusha
movl
pushf
jmp
push
cmp
add
add
add
add
add
divl
add
add
xor
add
add
xor
lds
aam
bound
adc
cs
lcall
cmpsb
cmp
xor
out
scas
syscall
cltd
in
popf
or
dec
mov
packuswb
leave
inc
repnz
xchg
push
lock
push
out
mov
stos
and
lods
inc
nop
push
sub
sahf
jge
sbb
leave
lock
mov
imul
and
imul
jns
pushf
xor
out
jbe
and
xchg
imul
data16
pop
hlt
fnsave
cmp
sbb
mov
jne
fmull
movsl
push
int
mov
mulb
sti
cmp
mov
jecxz
test
stos
mov
popa
pop
adc
lret
xchg
lods
push
sub
inc
cmp
dec
xor
dec
mov
or
daa
mov
stc
inc
lahf
jge
daa
mov
imul
cmp
inc
add
and
sahf
mov
sub
lods
adc
adc
xchg
imul
pop
mov
xor
arpl
test
stos
cmpsl
jb
xchg
push
jae
mov
jp
cld
stos
shll
loopne,pn
inc
xchg
es
repz
repz
mov
inc
cmp
test
dec
lahf
lods
leave
sbb
or
and
dec
cmp
mov
and
jae
mov
add
mov
out
or
clc
push
jb
pop
adc
out
sbb
lahf
iret
mov
adc
sti
lret
sub
add
xor
shr
sub
out
cltd
clc
or
fs
mov
rorb
lahf
sahf
shlb
pop
jno
pop
lcall
out
jp
repz
stos
or
stos
and
ja
enter
sahf
xchg
mov
cltd
call
stos
mov
pop
jp
sub
in
xor
andb
in
bound
jl
movsb
std
jecxz
test
repz
mov
mov
cmp
mov
jb
push
xor
pusha
and
scas
cmp
lods
mov
push
lret
mov
shlb
xchg
mov
jno
cmp
mov
xchg
int
pop
dec
and
and
adc
out
push
movsb
push
pop
imul
mov
movsb
mov
outsb
cmp
sub
push
cmp
out
int3
arpl
xor
idivl
gs
cmc
mov
dec
loopne
popf
idivl
jb
cmpsb
and
fstpt
into
adcb
xor
inc
cmp
cli
hlt
cmp
stos
loop
inc
or
pop
addr16
dec
in
aam
pop
lods
popf
mov
inc
mov
add
or
cmp
xchg
sbbb
add
mov
pusha
stc
in
dec
push
mov
mov
inc
je
cmp
inc
lret
or
inc
ds
add
sbb
dec
inc
xor
mov
xchg
push
push
jmp
mov
out
dec
cmp
push
and
movsb
xchg
mov
dec
jp
jne
cmpsl
adc
ds
inc
cmp
jnp
jl
fstpt
and
movsb
push
std
rcrl
inc
popa
out
out
adc
jmp
inc
and
dec
push
adc
popf
out
mov
aam
pop
mov
jo
andl
nop
call
xor
lock
scas
jo
lock
cmc
call
xchg
outsl
std
ljmp
mov
xor
push
aam
push
imul
mov
push
aad
repz
fldl
cmpsl
aad
ja
test
out
enter
pop
lods
pop
add
xor
stc
popf
pusha
negb
mov
lahf
dec
push
loope
ljmp
gs
je
sarl
subb
adc
sbb
inc
add
sub
sahf
jns
cmpsb
mov
in
jo
pop
xor
mov
xchg
push
lock
loop
psubb
jno
sbb
push
test
mov
or
xor
out
lret
lds
jmp
sub
testl
dec
push
or
push
repz
push
sti
dec
mov
fisubrl
xor
mov
jbe
push
leave
fnstenv
inc
ret
jns
insb
mov
fs
pop
imul
bound
fadd
sbb
mov
mov
jne
cli
push
xchg
cwtl
mov
push
mov
aaa
sub
int3
mov
test
push
out
mov
rcr
sarl
in
adc
rcrl
inc
hlt
addr16
test
mov
imul
repnz
add
loopne
or
bound
cmpsl
push
sub
int
je
xchg
or
loop
cmp
movsl
jne
fstpt
sbb
leave
popa
cltd
test
lret
icebp
dec
jbe
or
les
sub
sbb
push
push
or
iret
push
sbb
call
push
outsl
es
push
outsl
cltd
dec
pop
jne
jl
popf
cs
fwait
sahf
and
fucom
into
pop
jecxz
stos
mov
gs
lea
ljmp
xchg
mov
or
mov
and
cmc
movsb
outsb
push
rclb
fcmovne
rcr
rcr
test
jno
call
mov
xchg
out
div
inc
je
adc
dec
pop
cs
cmp
pop
inc
push
mov
insb
or
sbb
jg
mov
cmp
xchg
fdivrl
data16
call
mov
sahf
decl
fwait
xchg
pushf
adc
clc
data16
push
cmp
hlt
les
mov
and
mov
mov
roll
test
bound
lods
cmp
mov
out
dec
mov
shl
mov
ds
rorl
sahf
stos
xchg
sbbb
dec
mov
mov
or
or
push
push
or
cmp
test
mov
mov
addb
les
iret
lods
jb
xchg
ret
cmp
imul
jmp
and
adc
cmc
loop
repnz
jg
pop
sarl
out
inc
adc
inc
add
out
and
or
adc
enter
cmp
sub
fcompl
outsl
and
add
and
cmp
sti
test
and
adc
sub
push
rclb
test
rcr
or
ret
jbe
iret
xor
call
rolb
stos
inc
out
das
lret
scas
adc
pop
inc
xchg
pop
sub
xchg
sbbb
and
pop
mov
jl
mov
rcll
loop
lea
clc
add
adc
shrl
mov
iret
movsl
jl
jle
std
push
fwait
jecxz
stos
mov
pop
ja
xor
call
std
in
push
and
test
outsl
loop
and
hlt
inc
jge
inc
inc
insb
dec
xchg
add
mov
scas
fwait
xor
test
enter
popa
adc
jl
inc
push
test
cmovs
aam
das
cmp
inc
push
jl
test
xor
fidivs
pop
sbb
xlat
icebp
jle
add
rcrb
out
sahf
bnd
xchg
stos
pop
cmp
xor
push
leave
mov
stos
mov
jle
lcall
in
loopne
xchg
sbb
and
dec
cmp
imul
insl
mov
je
leave
pop
cli
das
sub
gs
pop
nop
arpl
xor
js
jo
enter
enter
and
dec
xchg
dec
in
ss
icebp
cmp
push
mov
loop
sbb
pop
insb
adc
sub
int3
pop
and
stc
mov
outsb
fildl
int
fcoml
sbb
xlat
mov
dec
inc
sbb
mov
in
rorl
push
stos
sbb
cmp
xor
lds
cmp
imul
cmpsl
xchg
xchg
fidivl
xor
jg
fmulp
cmpsb
mov
out
je
cs
ret
cmp
push
dec
cld
dec
inc
dec
push
xchg
icebp
lds
leave
enter
jns
jno
adc
jmp
les
sub
push
mov
enter
cmpsl
xchg
cld
das
xor
jp
cmp
mov
jns
stos
lcall
adcb
enter
jmp
shll
mov
mov
test
cmpsl
arpl
les
out
gs
or
clc
mov
adc
inc
aas
xchg
loope
sub
cwtl
scas
out
mov
adc
stos
out
xchg
int
sub
call
mov
int3
pop
fcomps
ds
mov
sbb
mov
sub
pop
mov
pop
mov
enter
popa
jp
fcoms
dec
fidivl
incb
enter
call
into
xor
int3
enter
and
pushl
sahf
loop
and
mov
into
and
ret
mov
jmp
sti
cmp
cmp
mov
loope
and
out
outsl
pop
xchg
mov
test
loope
scas
lahf
lods
scas
push
rcrb
jl
jmp
aas
das
movsl
clc
inc
je
push
mov
nop
jmp
mov
incl
and
inc
cld
ljmp
insl
pusha
cmp
or
mov
pop
adc
lret
push
adc
rcrb
inc
xor
test
mov
stos
sbb
pop
xchg
int3
cmpl
dec
idivl
cmp
lds
loop
push
incl
aam
hlt
or
enter
mov
lods
fmul
push
int
aas
dec
sbb
xlat
jno
sub
pop
xor
adc
inc
inc
mov
pop
std
icebp
xor
ret
emms
dec
cmpsl
adc
call
cmpsl
dec
mov
les
cltd
xchg
dec
scas
mov
xor
int
mov
sub
mov
fs
std
xchg
mov
out
pop
cmp
stc
xlat
lods
stos
mov
jmp
fisttpll
addr16
push
cmp
dec
loop
sub
mov
sbb
shll
cmp
nop
sub
sbb
test
or
shll
insl
pop
sbb
aas
adcl
cmp
xchg
ds
push
push
xor
in
movsb
pop
or
xlat
idivb
loopne
test
jp
in
stos
push
or
outsb
fisttpl
std
add
mov
movsb
add
inc
or
cmp
rcr
enter
cmp
repnz
push
mov
sub
loop
xchg
aaa
sub
lods
nop
sbbl
cs
movsl
inc
rolb
or
mov
cli
mov
push
and
push
jb
mov
pop
dec
and
push
adc
aas
add
test
movsl
jmp
cs
out
out
lods
jmp
add
and
or
repnz
jb
data16
adc
std
dec
cltd
ret
in
je
push
lret
xchg
nop
cmp
or
dec
jnp
out
test
test
enter
roll
inc
and
leave
sub
add
mov
add
mov
mov
and
aaa
pushf
and
shrl
cmp
ficomps
ss
cmpsl
xor
jb
lret
insb
leave
cmp
mov
jb
jge
addr16
xchg
and
mov
mov
dec
movsb
loope
sbb
jg
jns
lret
fcompl
jmp
jmp
out
cltd
fiaddl
into
push
push
mov
dec
mov
pop
push
outsb
pusha
push
fsub
jnp
cmp
orl
mov
sub
cmp
sub
pop
jmp
inc
call
pop
lret
cld
pusha
movb
jmp
lea
ja
not
not
inc
inc
call
add
inc
gs
outsl
fs
gs
imul
add
adc
ja
inc
inc
and
add
add
pushl
pushl
xchg
call
call
push
call
clc
rolb
add
in
inc
call
sahf
add
xor
je
add
add
sub
ret
push
call
int
lods
shr
incl
ljmp
aad
inc
call
jb
push
pop
in
call
or
xor
mov
or
sar
xor
shl
add
pusha
bswap
add
pushf
test
mov
cmp
clc
pushl
shr
bt
test
jmp
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
and
leave
aaa
lds
jnp
insb
xchg
push
push
enter
hlt
pop
subb
dec
sbb
push
scas
scas
xchg
fdivrl
inc
divl
dec
addb
inc
dec
test
mov
and
cmp
out
test
es
xor
ss
rolb
add
cmp
adc
adc
dec
mov
jmp
fs
movsb
lea
imul
scas
sub
push
leave
pop
mov
add
and
je
cmp
cmp
cmp
push
pusha
jmp
push
call
outsb
mov
push
mov
mov
movb
pushl
ret
push
call
push
out
pusha
lea
jne
rcr
mov
pusha
ror
sub
bsf
bt
jmp
add
aas
aas
xor
inc
pop
push
inc
pop
inc
pop
add
das
adc
decl
xchg
arpl
add
out
in
call
mov
add
add
movsl
rcl
test
shl
push
bts
not
shl
mov
das
pushf
aaa
not
sub
daa
push
and
push
pushf
bts
xor
movzbw
call
std
pcmpgtd
ss
and
pusha
notl
push
fstl
out
in
xor
jl
push
stc
inc
ja
js
cli
xor
cs
adc
ja
dec
push
outsl
aam
jo
es
shlb
insb
push
dec
cmc
neg
inc
add
dec
out
ss
mov
pop
test
je
xchg
add
movl
stos
and
push
mov
les
mov
lds
test
adcl
cltd
ds
sbb
in
mov
in
mov
out
and
sub
push
in
imulb
mov
lcall
mov
ljmp
fsub
inc
call
mov
fcmovnb
push
call
and
lahf
in
call
cmp
add
jne
push
jb
arpl
outsb
inc
popa
arpl
add
xor
inc
call
cmp
clc
pop
add
cmp
bt
popf
push
movb
mov
pushf
lea
jmp
push
call
cmp
cwtl
inc
lret
mov
and
pop
inc
cltd
les
nop
out
cs
sbb
cltd
and
add
bound
jae
pop
rcrb
push
pop
lock
pop
cmp
xor
lcall
inc
mov
rcl
jl
test
jle
jnp
das
inc
add
cmp
aas
mov
mov
sub
lods
fs
jbe
loope
dec
shll
push
in
mov
xor
out
sub
mov
jge
cmp
lea
fwait
pop
icebp
xchg
xchg
lcall
outsb
mov
ss
pushf
xorl
fs
add
jecxz
in
xchg
inc
jmp
sbb
lret
mov
subb
mov
mov
shlb
into
inc
mov
jns
int3
pop
cli
daa
xchg
lock
mov
jg
mov
mov
mov
add
ss
push
loopne
test
jmp
dec
sbb
fisubrs
mov
addr16
and
add
xchg
lcall
or
or
repnz
mov
ljmp
xchg
push
sub
mov
sub
int3
fs
test
test
add
lods
add
dec
outsb
test
popf
in
jb
jbe
subb
pushf
lcall
mov
das
mov
dec
fidivl
xchg
xchg
lcall
fs
jne
rcl
sub
or
or
mov
clc
jmp
xor
out
or
shrb
sahf
stos
clc
dec
test
and
xor
mov
mov
xchg
pusha
xchg
xchg
dec
loop
mov
sbb
repnz
mov
pop
adc
bnd
pop
ljmp
mov
mov
mov
in
call
rorb
clc
ucomiss
or
mov
cmp
rolb
cltd
cli
fwait
testb
jle
or
cmp
cmpsb
ret
ljmp
push
pushf
and
test
and
inc
pusha
push
movl
lea
call
bt
clc
bt
bt
cmp
jmp
cmc
push
test
pushf
lea
je
test
jmp
out
xchg
imul
cmp
leave
push
add
sbb
loop
scas
in
push
roll
mov
lea
scas
inc
jecxz
lahf
jmp
orb
jle
ret
popa
dec
cmp
xor
sub
or
rclb
pushl
popf
movb
pusha
lea
jmp
jmp
inc
and
xor
orb
je
sbb
or
aam
jne
inc
mov
jl
sub
fisttpll
inc
jno
fcoml
mov
jo
sbb
call
outsb
icebp
and
jnp
cmc
inc
adc
por
mov
inc
fcoms
xor
push
dec
rcl
dec
xor
sbb
push
testb
jne
sarb
and
imull
enter
push
dec
repz
cmp
xchg
pushl
fstpl
lcall
imul
or
sub
sub
stc
pop
mov
jbe
out
dec
cmp
stc
xchg
adc
fwait
arpl
or
inc
icebp
test
leave
cmp
jp
test
jae
jl
iret
xlat
xchg
jge
mov
adc
sarl
jns
jne
dec
mov
lret
push
rcll
inc
call
call
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
add
and
test
add
add
cmpsb
decb
mov
aam
jmp
mov
not
not
movzbw
push
bswap
push
mov
push
jmp
movl
pusha
mov
jmp
lea
je
movsbw
pusha
call
std
popf
pusha
lea
jmp
pushf
movl
lea
je
call
push
call
xor
in
call
xchg
sub
xchg
cs
loope
cmp
push
hlt
mov
aas
pop
mov
pop
mov
sbb
cli
pop
jp
lods
and
xchg
mov
jmp
clc
mov
nop
sub
dec
mov
pop
fcoml
nop
addw
loopne
mov
inc
lods
xchg
insl
push
xor
jbe
lea
rcrb
frstor
jecxz
mov
movsl
das
pop
out
jmp
pop
insb
sbb
mov
movsl
das
jge
call
mov
in
clc
add
pushf
lea
jmp
cmc
or
jmp
sub
jmp
pushf
push
movb
mov
movb
pusha
call
repz
push
call
fsubrp
inc
aad
lea
jne
push
stos
pushf
pushf
movl
pushl
lea
jmp
cmp
push
bt
or
movb
call
cmp
call
bt
call
push
call
ret
movsb
sahf
mov
jmp
lea
jne
bswap
js
mov
push
pushf
popl
clc
bt
or
push
call
jmp
movsbw
lea
mov
push
setno
mov
movsbw
call
add
push
outsb
push
gs
js
gs
imul
gs
jmp
add
aas
ja
popa
je
gs
gs
imul
inc
inc
push
inc
inc
push
inc
inc
pop
pop
add
add
jb
arpl
add
test
jmp
xchg
add
pushf
lea
je
jmp
lea
jne
jmp
jne
into
incl
pop
je
and
mov
pop
fwait
or
daa
and
pop
ret
adc
ljmp
in
pop
out
in
lods
cmc
dec
testl
push
cmp
cmp
inc
pushf
xor
lcall
lods
push
repnz
insl
lret
xchg
sbb
test
jo
add
insb
das
scas
dec
xor
mov
aaa
xchg
mov
scas
lock
xor
cmp
push
rcrb
and
cmc
popf
xor
jns
xchg
xchg
adc
les
aam
stos
sub
loopne
xchg
imul
flds
mov
xrelease
xchg
pop
sub
divl
xchg
movsl
jecxz
pop
mov
or
mov
or
jl
push
fistps
lcall
aam
add
call
cwtl
not
lea
call
fisubl
bound
enter
adc
sbb
int3
sbb
cmp
out
lret
xchg
les
mov
pop
movsl
dec
pop
ss
test
test
sub
push
mov
add
ds
pop
mov
mov
adc
inc
test
and
adc
movsb
or
inc
mov
inc
xchg
cmp
and
arpl
outsb
pop
je
jo
pop
imul
insl
gs
imul
insb
add
call
sbb
inc
cmpsl
loopne
jbe
hlt
ja
sbb
test
in
sub
sahf
lret
cmpsb
pop
ljmp
xchg
adc
ss
mov
repz
bound
enter
push
jo
inc
mov
pop
ret
lcall
insb
out
incl
add
gs
fsub
inc
call
stc
push
bt
add
push
pushf
pushf
pusha
lea
jmp
cmp
pusha
pushl
call
pusha
push
lea
jb
stc
cmp
pusha
lea
jae
movzbw
mov
lea
mov
movzbw
pusha
add
mov
pushl
sub
bt
movw
jmp
cli
lds
hlt
and
les
mov
xor
push
out
mov
out
xchg
jno
or
sub
push
les
lock
push
stos
loop
add
out
xchg
lcall
lcall
pop
loopne
pop
fs
cmpsb
shll
ss
inc
imul
inc
ds
cmp
xchg
lcall
and
jne
jmp
add
jb
ds
sbb
sub
arpl
dec
inc
test
cmp
inc
stos
jnp,pn
push
adc
sbb
xchg
mov
inc
in
aaa
add
dec
sbbl
scas
cmp
pop
sub
mov
pushf
pushf
lea
jne
shl
pushf
jmp
add
data16
gs
mov
movl
fs
jne
bswap
cwtl
pusha
movb
movl
not
mov
jmp
dec
sub
sbb
xchg
shl
xchg
movzbw
shr
mov
pushl
cmc
mov
pushl
clc
mov
sbb
mov
movb
clc
cmc
clc
sub
jmp
add
pop
insl
popa
insb
insb
outsl
arpl
jb
add
adc
adc
inc
pop
xchg
cli
sub
es
fcoms
inc
das
fsubs
loope
mov
mov
pop
pushf
mov
adc
je
lcall
mov
cmc
jbe
enter
movsb
mov
in
faddl
inc
jae
clc
inc
rcll
int
jg
std
je
push
adc
movsl
out
lcall
test
xorl
jmp
pop
or
das
mov
or
out
xorl
mov
subl
sbb
sub
out
cli
cmpsl
outsl
inc
in
scas
les
push
sahf
lret
dec
mov
push
xchg
cmp
outsb
mov
movsb
adc
out
push
aad
mov
repnz
push
lcall
test
stos
int3
stc
mov
jo
jb
lcall
fs
je
bswap
mov
call
push
call
fildll
add
fs
jae
pop
imul
lcall
cs
jno
adc
out
pop
pop
mov
mov
push
stc
out
pusha
cltd
fimuls
out
xchg
mov
orb
out
jecxz
div
push
sahf
leave
in
push
out
daa
xchg
std
sub
mov
cld
inc
in
cmpsl
repnz
or
lods
and
and
add
xchg
lret
pop
xor
pop
stos
or
cld
mov
fisubl
out
loop
clc
inc
jo
jl
or
jb
arpl
pushf
shlb
gs
xchg
lcall
and
jae
pushf
cmp
push
lea
ja
dec
not
jmp
jmp
push
mov
add
xchg
lahf
cmp
fmull
pop
dec
jle
jle
push
jg
jnp
imul
inc
adc
pop
cltd
inc
push
into
inc
mov
jae
fsubrl
bound
pushf
cwtl
cltd
and
insl
cmp
mov
or
movsl
sahf
mov
xchg
rorl
mov
jno
rcrb
fwait
pop
xchg
popf
data16
clc
xor
sub
xorb
add
ds
ja
and
leave
adc
or
mov
lcall
imul
popa
mov
lea
adc
popf
or
adcl
inc
or
adc
add
mov
and
popa
aam
xlat
cmpb
jg
mov
mov
cmp
mov
add
sti
adc
stos
mov
addl
cmp
cmc
jns
fbld
jb
adc
mov
xor
roll
dec
mov
test
in
push
cmp
fcoml
add
lock
xchg
sbb
lret
inc
jp
mov
mov
sarl
test
mov
int
mov
mov
rcll
sub
enter
add
movb
add
adc
lods
add
sbb
cmp
mov
nop
popf
out
jl
push
push
dec
fsubrs
mov
jo,pt
add
lods
jnp
mov
lret
fldcw
notb
lret
ret
mov
vmwrite
call
movsb
jmp
pushw
mov
popf
std
add
sahf
pop
pusha
pop
sbb
xchg
pop
pop
sbb
add
out
add
mov
mov
xchg
xchg
mov
orl
mov
icebp
sub
mov
push
rolb
aas
add
adcb
ds
sbb
hlt
mov
loopne
adc
lahf
lock
inc
popf
arpl
add
stc
adcl
rcl
aas
nop
jl
add
pop
cltd
in
pop
mov
movsb
ss
mov
cmpsb
sub
cmp
xlat
cmp
xor
mov
enter
add
mov
test
repnz
int3
inc
inc
and
mov
in
jmp
add
jns
dec
adc
adc
andl
add
and
sbb
add
mov
cmp
test
je
xchg
scas
popf
inc
cltd
jl
cmp
fidivs
mov
enter
cmc
shl
add
nop
xchg
aaa
mov
sub
mov
aad
loop
pop
jp
add
js
xor
sbb
fildl
mov
test
dec
ror
push
clc
icebp
jnp
repnz
in
sub
add
pop
mov
xorb
add
icebp
cmp
fisttps
hlt
jecxz
pop
mov
jb
vorps
or
test
lahf
cmp
hlt
or
popf
test
lret
lret
inc
cmp
mov
sbb
mov
stos
or
es
inc
sbbb
mov
je
push
stc
lret
cmp
pop
loope
fidivrl
mov
pushf
sub
mov
shl
imul
in
cwtl
mov
or
lds
jb
sbbl
lcall
std
shll
add
xchg
push
jmp
fisttps
push
dec
push
popf
call
js
mov
jb
push
push
sbb
jge
cmp
repnz
adc
ror
or
or
mov
lock
jl
adc
filds
pop
jle
jno
inc
mov
inc
xor
cmp
xchg
jno
leave
int3
pop
ljmp
leave
movsl
mov
stos
mov
pushf
icebp
mov
ljmp
xchg
clc
or
cmpsl
sbb
xchg
fwait
xorb
mov
xchg
stc
xor
nop
test
out
push
xchg
cmp
push
inc
add
dec
push
push
cmp
dec
jb
xor
and
cwtl
jns
sbb
nop
push
jnp
or
cld
sbb
iret
pusha
mov
sahf
fistpl
sub
and
das
ret
mov
arpl
shl
popf
xchg
iret
dec
xchg
jle
sub
daa
imul
pop
xor
add
andb
stos
sub
test
aaa
mov
pushf
pusha
mov
je
xlat
adcb
fadd
xchg
outsb
test
mov
aas
lds
mov
jbe
movsb
inc
es
jle
mov
sub
cmpsb
orl
add
push
sbb
lret
sbb
mov
and
loop
cmp
xor
dec
jne
fildll
sbb
xor
into
cmp
cmp
sbbb
mov
jo
shrb
fldl
xchg
nop
outsl
push
jg
das
inc
insl
mov
inc
nop
js
enter
cmpb
adc
das
scas
stos
cmpb
dec
jmp
sbb
cmp
inc
push
cld
mull
xchg
mov
mov
loopne,pn
aam
dec
mov
inc
nop
add
jne
fnstenv
jno
js
std
lea
test
mov
sbb
sub
pop
mov
sbbb
in
sub
fdivrl
jmp
inc
mov
in
cmc
or
imul
sbb
mov
add
stc
sbb
test
mov
and
sbb
and
jp
subb
xor
adc
out
pop
xchg
jg
and
jnp
push
repnz
movsl
inc
mov
mov
mov
sbbl
jg
push
ret
mov
sub
aas
push
push
sub
in
push
pop
fcomps
das
mov
les
pusha
bound
fildl
adc
sub
mov
mov
lret
enter
nop
xchg
inc
data16
cmpb
stos
movsb
pop
inc
loopne
or
lock
mov
andb
sbb
jp
xchg
xchg
orb
decl
pusha
cmc
push
add
xchg
inc
es
sarl
jne
cwtl
popl
jmp
mov
fsubl
addl
fstps
xlat
or
mov
sti
aad
test
fimuls
loopne
adc
xchg
push
mov
push
cwtl
fists
pop
and
cmp
stos
rcrl
xor
mov
data16
xchg
scas
nop
insb
testl
mov
sbbb
sahf
cmp
repz
add
xchg
dec
test
orb
aas
dec
popa
push
mov
data16
jge
adc
pop
mov
jp
ffreep
fnstsw
or
sub
andb
arpl
dec
xorl
sbbl
xor
xchg
enter
mov
xchg
or
and
or
jg
xchg
outsl
ret
mov
lock
aad
push
mov
cmp
dec
arpl
test
popf
jnp
and
nop
pop
loopne
add
cwtl
sub
aam
arpl
push
cmp
imul
flds
loop
jp
addb
arpl
sub
cmovbe
mov
cmp
loopne
xchg
orb
add
pusha
pusha
mov
jg
fwait
mov
adcb
and
aas
shll
pop
cwtl
push
xor
daa
xchg
dec
sub
pop
sbb
or
mov
movsb
bound
xorb
jno
and
and
pop
sbb
mov
push
sbbb
lea
dec
pusha
adcb
cmp
mov
loopne
xor
dec
push
mov
hlt
push
xorb
pop
pop
in
push
rcr
adc
cmpsb
mov
add
xchg
mov
dec
cmpb
pop
push
in
mov
nop
sbb
and
mov
lcall
xchg
loope
or
outsb
mov
xchg
nop
out
add
dec
sbb
jns
sbb
in
loop
roll
dec
push
pop
das
xor
loopne
mov
mov
push
or
dec
xorb
out
gs
mov
push
lcall
inc
roll
outsb
sbb
fisttpll
xor
jno
or
jb
cmp
sbb
sbb
add
sbb
cmp
mov
xor
inc
sbb
sub
mov
popf
pop
loopne
loopne
push
dec
push
inc
out
cmp
adc
loopne
xchg
cmc
les
mov
lcall
xchg
cmp
xlat
push
enter
test
inc
fiaddl
jge
jmp
jp
pop
or
cli
sub
sbb
or
daa
daa
fisttpl
push
or
ret
cmp
xchg
jno
js
jl
sub
lock
repnz
aas
mov
daa
jno
push
add
loopne
mov
pop
push
addr16
pop
xchg
sbbb
lcall
adc
push
into
fdivrs
pushf
scas
subb
mov
test
push
mov
jle
bound
xchg
rcrb
mov
scas
cmp
mov
add
sbb
jmp
mov
pop
inc
fwait
sbb
inc
jo
mov
loopne
mov
nop
push
adc
addb
sarl
mov
enter
imul
ljmp
stos
enter
mov
mov
mov
or
sbbb
add
or
clc
ja
add
push
pusha
fidivs
ror
das
and
push
cmp
scas
xchg
lods
jle
arpl
mov
xchg
dec
inc
filds
xor
ror
jl
stos
mov
call
mov
sub
mov
pop
xchg
popf
pusha
and
aas
test
int
pop
call
pop
xor
cmp
adc
mov
jl
add
cmp
xchg
dec
mov
xchg
dec
fdivr
roll
mov
andb
test
or
movsb
mov
and
ja
sub
fiaddl
or
sbb
adc
int3
add
orb
inc
cmp
add
movsl
lods
movsb
and
test
popf
addr16
sbb
mov
int3
mov
mov
sub
sbb
xchg
dec
xchg
movl
pusha
loopne
mov
push
inc
inc
adcb
ficoms
and
mov
sti
xchg
xchg
int3
jnp
test
sahf
fwait
pushf
mov
mov
pop
lds
xchg
or
andl
pushf
adcb
insb
fcmove
sti
flds
imul
subb
iret
fstp
aas
test
mov
push
jp
mov
scas
loopne
jo
xchg
inc
js
gs
and
jg
push
adc
xchg
mov
aas
add
jg
dec
sub
dec
inc
add
sbb
out
pusha
imul
in
add
int3
pusha
andb
iret
mov
push
cwtl
leave
push
int3
loop
pop
xchg
ret
and
dec
fs
jge
xor
sub
push
pop
sbb
sbb
ret
push
int3
sbb
aam
or
sbb
or
cmp
loop
add
filds
in
mov
mov
add
subb
dec
scas
sti
or
xchg
cmp
cld
hlt
fmulp
mov
pop
ret
fistps
scas
mov
add
loop
sti
jle
shlb
andb
repnz
mov
mov
mov
cltd
sub
inc
insl
shll
add
xchg
ret
stos
or
or
mov
popa
xor
jg
xchg
mov
cwtl
mov
sub
les
std
mov
dec
popf
inc
in
scas
mov
mov
push
lock
imul
test
cli
andl
fstps
sbb
pop
jbe
mov
jno
adc
add
out
xor
jb
into
push
loop
lahf
xchg
add
imul
inc
mov
or
popa
shll
lahf
dec
orb
add
inc
test
jo
je
push
imul
jo
out
fs
push
adc
sarb
in
cmpsb
mov
dec
mov
jne
loopne
into
loop
jecxz
and
xchg
sub
push
into
dec
hlt
dec
push
dec
jnp
incb
inc
inc
daa
push
sbb
lock
adc
push
jae
arpl
jae
jae
jo
inc
test
insb
int3
jo
je
js
jl
jl
jl
jl
jl
mov
ljmp
mov
fnstcw
into
gs
lret
lock
jno
dec
sbb
rol
xor
inc
fwait
jae
pusha
add
push
hlt
je
js
jl
jl
jl
jl
jl
mov
call
mov
xchg
mov
movsb
daa
into
push
push
iret
lods
dec
rorb
dec
mov
inc
dec
xor
and
inc
push
jae
arpl
mov
jae
jae
jo
addr16
mov
jo
je
js
jl
jl
mov
add
arpl
movsl
hlt
testb
cli
dec
cld
push
dec
xor
push
jae
xor
cmc
push
xlat
sbb
sbb
sbb
ficomps
sbb
popf
test
push
scas
lahf
jb
negb
cmp
cmp
mov
cmpsl
mov
popf
xchg
sub
int3
pop
lods
pop
mov
outsb
pop
dec
pop
xor
adc
adc
dec
mov
mov
sbb
dec
sbb
dec
sbb
dec
sbb
popf
dec
sbb
dec
lahf
dec
pop
pushf
out
add
in
cmpsb
addr16
addr16
add
push
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jo
push
andl
xchg
test
jl
sbb
repnz
je
xor
jns
cmp
cmp
sahf
shlb
rcrb
out
cmpsl
cmova
dec
jmp
lods
dec
dec
dec
scas
dec
outsl
dec
adc
dec
mov
je
adc
dec
dec
sbb
dec
cmp
inc
loope
andb
adc
dec
jmp
sub
addr16
jb
adc
addr16
ja
jae
jae
jae
jae
jae
jo
shlw
cli
add
cli
sub
jmp
lods
decb
icebp
mov
push
mov
jne
push
lods
push
mov
mov
fistps
push
and
mov
sub
dec
lea
addr16
push
addr16
addr16
addr16
push
addr16
addr16
addr16
inc
pusha
cmpsl
and
mov
xchg
dec
cmp
arpl
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jo
pusha
add
insb
and
lds
push
sub
in
decb
repnz
xchg
cmc
mov
push
cwtl
cli
mov
jle
pop
sahf
inc
out
sbb
popf
add
data16
daa
rcl
dec
or
dec
sub
int
das
dec
lock
xchg
dec
rorb
dec
cmc
dec
xchg
dec
clc
dec
mov
sub
xchg
addr16
inc
mov
je
cmpsb
jo
adc
pop
lret
pop
or
outsb
pop
das
pop
rcrb
pop
repz
xchg
pop
aad
aaa
pop
clc
pop
cltd
pop
sti
pop
mov
pop
loopne
daa
mov
pop
fs
test
insb
addr16
addr16
xor
addr16
fsubs
addr16
inc
pushf
push
jae
jae
jo
inc
jecxz
movsb
push
addr16
js
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
mov
inc
mov
cmpsl
push
dec
stos
addr16
or
scas
outsl
adc
add
jae
jae
jae
jae
jae
jae
jae
xchg
dec
fsubs
mov
mov
xchg
xchg
dec
pop
lods
pop
insl
inc
dec
dec
dec
mov
jb
adc
mov
push
jns
jns
jns
jns
sbb
push
cmpsb
into
rorl
dec
in
test
out
test
dec
dec
mov
dec
lods
dec
dec
dec
mov
jo
adc
dec
mov
jne
push
dec
js
cmp
dec
sbb
dec
ds
filds
and
loop
andl
push
es
out
mov
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
push
js
dec
jnp
cmp
frstor
ret
or
xchg
lahf
sub
ljmp
mov
mov
push
mov
pop
mov
fidivrs
rolb
mov
lds
dec
sub
in
dec
mov
addr16
addr16
addr16
push
les
dec
mov
or
popf
add
data16
daa
push
enter
mov
lock
push
xchg
pop
sahf
bound
sbb
test
inc
pop
test
int
insl
rorb
sahf
add
mov
jae
jae
rcrb
arpl
inc
hlt
sub
push
imul
cld
xchg
shrb
lea
mov
jle
inc
addr16
pop
imul
iret
addr16
testb
or
cmpsl
es
dec
out
or
popa
lret
jno
jns
jns
jns
jns
mov
jl
jl
sbb
cli
dec
sbb
sahf
mov
hlt
mov
dec
lods
int3
lret
mov
insl
scas
shlb
addr16
cmc
addr16
sbb
sbb
addr16
inc
arpl
push
enter
xchg
test
mov
pop
pop
adc
mov
addr16
or
testb
cli
js
jge
ds
mov
adc
xchg
loop
xchg
test
inc
push
sub
setb
push
mov
call
nop
dec
repnz
add
sbb
leave
rolb
mov
add
or
and
push
out
repz
push
jne
ja
cmp
stc
sbb
lahf
pop
jle
push
add
loop
xchg
lods
mov
pop
ds
xchg
ret
leave
fs
fistpl
pusha
repnz
hlt
dec
imulb
icebp
mov
mov
ret
jecxz
and
iret
jno
adc
fisttpl
add
jecxz
and
push
lods
inc
or
push
ss
loope
loop
test
sti
push
popf
mov
sub
cs
adc
out
in
and
jmp
jae
jae
jae
jb
jmp
mov
inc
bnd
hlt
and
mov
ss
sbb
dec
xchg
sbb
add
les
popl
out
mov
jmp
lods
push
push
mov
fidivrl
addb
pop
out
pop
out
daa
icebp
inc
aam
adc
pushf
jl
std
mov
mov
call
repnz
sbb
jae
xchg
test
adc
in
push
fs
mov
push
jl
jl
jl
mov
dec
les
stos
lahf
in
pop
adc
rcrl
rcrb
xchg
pop
push
pop
mov
push
pop
mov
pop
jnp
jl
dec
mov
xchg
add
movsl
xor
or
xchg
repnz
out
xor
and
push
xor
xchg
pop
fmuls
jnp
imul
lahf
jae
xchg
add
xor
add
subl
lea
cmpsl
dec
insl
out
pop
pop
daa
cwtl
inc
sbb
sbb
sbb
fwait
pusha
sbb
jl
jl
mov
jno
mov
or
out
repnz
lock
sbb
sbb
popf
xor
inc
daa
add
xorl
and
repnz
push
rcrl
jp
popf
pop
pop
pop
pop
pop
dec
cmpsl
inc
insl
out
pop
jno
mov
cmp
inc
sbb
xchg
or
push
and
gs
mov
xlat
dec
in
or
mov
repnz
mov
jns
mov
sbb
mov
rolb
out
daa
bound
sbb
cltd
sub
scas
jae
mov
addr16
cmc
dec
ja
mov
mov
popa
or
jmp
loop
jae
adc
cmc
pop
clc
fsin
sbb
sti
popf
pop
push
aas
sahf
and
add
and
call
arpl
jae
repnz
xchg
adc
sbb
pop
mov
lret
xchg
push
outsb
jae
arpl
jae
jae
jae
repnz
sbb
aam
mov
icebp
pop
jb
adc
into
mov
je
xlat
push
dec
mov
dec
xchg
addr16
aam
fcoms
jns
pusha
shll
adc
ret
push
pop
jns
loopne
xchg
lret
test
push
lea
jns
mov
cmpsl
into
push
dec
dec
mov
testb
mov
orb
out
pop
lret
daa
out
fs
add
jl
jl
jl
jl
jl
mov
cmpl
push
pop
mov
repnz
push
push
xchg
arpl
xor
push
push
add
aam
fstl
mov
jp
lahf
pop
lahf
pop
inc
push
popf
inc
in
cltd
mov
dec
cli
or
jmp
int
mov
dec
nop
xchg
ficoms
pop
pusha
pusha
inc
bound
sub
sub
sbb
xchg
fdecstp
pop
xlat
push
dec
pop
dec
sbb
lret
jge
dec
sti
lock
jo
fwait
sar
lcall
rcrl
mov
and
xchg
jb
jmp
lock
aam
jne
clc
lahf
cmp
pusha
add
mov
insb
jmp
jno
hlt
sbb
sahf
cwtl
pop
pop
mov
cmpsl
data16
test
pusha
xor
lds
loop
cwtl
packsswb
dec
sbb
adc
jae
rcrb
imul
fs
mov
pop
add
out
add
xorl
xor
xchg
clc
add
stc
popf
fsubp
popl
add
jge
add
scas
fs
xchg
mov
jne
sbb
in
leave
push
fcoml
fwait
cmpsl
xchg
push
push
dec
xor
jns
test
mov
push
inc
loopne
inc
sbb
popf
sub
xchg
sbb
fsubl
lahf
clc
dec
push
mov
shl
xlat
adc
mov
push
stc
mov
mov
pop
xchg
gs
dec
sahf
call
xchg
lods
and
pop
add
adcl
sub
pushf
add
sti
adc
test
test
insb
cli
scas
cld
xchg
xor
je
mov
pop
inc
add
add
push
fcomps
fwait
push
dec
cs
outsl
dec
push
dec
cmc
jmp
popa
pop
mov
out
repnz
aam
mov
push
fwait
lock
jns
jns
fprem
adc
rolb
jmp
dec
movups
dec
repz
fmuls
jmp
popa
xchg
aas
fsubs
inc
lods
sbb
mov
out
mov
mov
lcall
jo
and
or
pushf
dec
into
lahf
outsb
pop
mov
xchg
pop
xor
jae
jb
and
mov
imul
negl
cli
pop
mov
into
fs
cmpsb
jmp
popa
dec
insb
imul
rolb
jae
jae
shlb
lock
mov
cmc
mov
movl
lods
shrl
int3
mov
mov
cmp
inc
ret
or
stos
clc
dec
cli
icebp
cld
xchg
xor
fsin
jns
sbb
mov
xchg
lret
cli
jo
adc
mov
cmp
lahf
inc
and
rorl
or
and
sbb
pushf
or
loop
mov
sub
jl
jl
cmp
xchg
push
aas
pop
rclb
pop
ret
pop
out
cli
nop
cld
xor
xlat
lcall
sbb
mov
inc
xchg
xor
push
outsb
ret
xchg
push
jns
stc
cltd
test
fistps
inc
fisttps
out
popa
xchg
jbe
sbb
inc
xchg
push
dec
enter
push
inc
or
idivb
fimuls
imul
mov
mov
pop
test
mov
scas
mov
pop
cmp
fstl
ret
add
push
lea
out
push
fidivrs
test
xor
and
or
scas
sbb
fmuls
xchg
mov
add
fs
push
sub
jl
cmp
cli
adc
fiadds
dec
push
or
popa
xchg
repz
jns
jns
stc
jl
nop
cmpsl
mov
inc
sub
shlb
jae
jae
jae
jae
jo
and
imul
rcll
jnp
cpuid
loop
testb
jno
adc
addl
xlat
xchg
sub
xchg
cmp
push
jb
rorb
inc
mov
lea
mov
xchg
add
jb
xchg
lret
dec
lahf
lock
fbld
jae
jae
jae
jo
addr16
fs
mov
arpl
jae
jae
jae
jae
push
aas
les
cwtl
add
repnz
hlt
test
ficoml
test
mov
pusha
out
sub
outsb
adc
addr16
fs
mov
mov
popa
adc
xor
mov
dec
mov
xor
and
shrb
add
arpl
jo
push
add
xchg
xchg
push
xor
aad
jbe
sbb
mov
cmpsl
test
insb
insb
xor
push
mulb
xor
mov
arpl
add
cmpsb
popa
xchg
in
popa
mov
jno
jns
jns
jns
jns
fsub
data16
imul
btr
dec
cmc
popa
aad
jns
clc
bound
dec
lcall
add
add
or
test
jl
jl
mov
cmpsb
mov
scas
mov
cmp
and
jmp
jns
popa
adc
mov
mov
push
into
test
ret
sbb
mov
sbb
jb
fimull
adc
mov
sbbb
loopne
pusha
inc
add
mov
iret
stos
jmp
jns
stc
sbb
sahf
or
nop
jb
clc
push
jnp
and
fisubl
inc
sub
dec
dec
repz
xchg
dec
mov
add
push
setle
push
lahf
ja
mov
jo
mov
shlb
dec
sbb
and
shll
push
lret
push
inc
bound
adc
jns
jns
sbb
push
push
or
fs
test
pop
push
rol
or
xchg
and
pop
mov
jbe
ret
cmp
inc
xchg
mov
iret
nop
movzbl
dec
pushf
dec
mov
or
add
jae
jae
shl
clc
or
hlt
in
testb
xchg
aaa
std
sahf
aas
fsubp
mov
mov
xchg
popa
push
std
jns
jns
clc
in
xchg
daa
dec
adc
das
adc
pop
std
pop
sahf
pop
aas
pop
in
dec
and
and
push
mov
das
shlb
lods
setle
sub
dec
mov
xor
test
mov
nop/reserved
sahf
pushf
gs
imul
mov
push
jno
push
je
into
dec
mov
cmp
sahf
mov
adc
xor
add
cmpsb
xchg
add
sub
int3
rorb
dec
movaps
jae
adc
push
shlb
lock
pushf
mov
pop
stc
xchg
addl
mov
shll
and
inc
nop
sbb
adc
je
cwtl
jl
jl
sbb
adc
mov
add
push
jns
push
lods
push
int
insl
mov
push
cwtl
arpl
jae
jae
repnz
dec
stc
push
nop
arpl
jae
jo
mov
sbb
mov
arpl
out
outsl
sar
sar
jb
aad
adc
lret
cmp
fwait
mov
pop
int3
inc
loopne
loop
mov
fisttps
pop
in
pop
lea
out
pop
iret
push
aad
xchg
jae
jae
jae
repnz
xchg
dec
cmp
fnstenv
add
sbb
dec
xchg
mov
lcall
dec
push
subb
push
ss
jl
cmp
xchg
iret
rcll
add
or
mov
push
xchg
insl
add
clc
lret
adc
pop
enter
mov
and
ret
out
leave
fsubrs
or
fstl
xor
push
or
ficomps
lcall
mov
adc
adc
xchg
sbb
pop
pop
repnz
fmulp
or
daa
ret
lret
popa
enter
inc
mov
jne
inc
add
xor
push
imul
sahf
loopne
inc
popa
inc
xchg
in
orl
fsubrs
lock
insl
add
xchg
iret
pop
fsubs
cld
and
mov
sti
mov
outsl
mov
and
into
push
leave
icebp
rcrl
pop
insb
mov
mov
into
adc
xor
repnz
mov
cmpsl
mov
jno
sub
daa
stos
and
pusha
pop
out
jl
mov
stos
insb
lods
adc
or
pop
mov
or
les
dec
dec
inc
mov
scas
sbb
pushf
dec
rcll
add
dec
into
cmp
cmp
mov
das
cmpsb
std
xchg
testb
adc
xchg
rorb
cmpsl
inc
insb
add
iret
push
popl
rdpmc
cmp
cmp
cmpsl
sahf
movl
fadds
xchg
mov
lahf
mov
loope
xchg
mov
rolb
inc
popf
mov
push
popa
pop
sub
aaa
lods
sub
xchg
mov
es
pop
push
insl
dec
mov
movsb
inc
ljmp
in
clc
fisubrl
lods
ret
xchg
ljmp
push
add
hlt
sub
lahf
aam
mov
shrl
out
mov
and
sbb
popf
mov
dec
mov
repz
fadds
test
nop
sbb
cs
xchg
jo
lea
pop
mov
repz
aam
push
ss
sbb
lds
iret
stc
dec
pushf
loopne
inc
es
rorb
xlat
lds
adc
testb
out
shlb
dec
test
xchg
rolb
mov
subl
add
dec
inc
push
dec
cs
mov
pop
sahf
pop
add
jmp
adc
ja
mov
adc
fistpl
jo
mov
adc
orb
popa
push
jae
adc
adc
jo
mov
sahf
addr16
pop
scas
and
test
jns
pop
mov
leave
pop
inc
xchg
in
mov
push
leave
pop
lock
aas
sahf
popa
mov
rorb
stc
rorl
stos
cwtl
push
and
and
adc
xor
push
loop
fcom
inc
push
push
and
fimuls
pop
mov
adc
es
cli
xchg
adc
sar
xor
fmull
nop
adc
aad
rclb
mov
cli
addr16
and
pusha
shll
lds
pop
adc
scas
fs
sbb
lret
adc
inc
fwait
clc
lds
roll
sahf
adc
sub
dec
dec
scas
dec
dec
test
or
jae
jae
ja
fsubs
jo
jl
cmp
jg
inc
cltd
push
add
mov
xchg
push
and
sbb
adc
shlb
addr16
adc
xor
cmp
jae
lea
lret
or
dec
xor
mov
int3
loope
lods
xchg
jg
test
mov
dec
cmp
mov
and
push
test
inc
xchg
add
sub
dec
xchg
push
xor
xchg
pop
cmp
jnp
or
and
adc
xchg
inc
loop
popa
pop
scas
mov
adc
cmp
push
scas
mov
push
jmp
rolb
cmp
push
jl
push
loop
cmpsb
fs
dec
xchg
repz
ss
popf
jns
fwait
jbe
lahf
and
stc
pop
xacquire
dec
xor
loope
cmp
and
dec
xor
or
cwtl
stc
add
pop
add
pop
loop
xchg
lret
loope
fmull
int
xor
mov
lcall
sub
bnd
xlat
mov
mov
insb
cmpsb
popf
or
sub
scas
lods
mov
fidivl
test
cmp
mov
and
cmpsb
cld
and
lods
xchg
leave
scas
xor
je
test
lea
fcompl
and
fs
in
jmp
mov
imul
jae
cmc
lods
fdivrp
dec
sbb
add
xchg
or
mov
ret
lea
sbb
mov
mov
inc
xchg
rorb
fcomps
cmpsb
mov
lods
sbb
pop
mov
mov
mov
cmp
or
inc
mov
popa
subl
xor
test
mov
aaa
or
cmp
mov
jb
pop
mov
and
xchg
add
scas
and
lods
fdivs
inc
popa
lds
mov
xor
aad
xchg
sbb
clc
xchg
lods
sub
dec
or
xor
cltd
cwtl
sbb
flds
push
pusha
push
imul
fsubrs
repnz
sahf
fnsave
pop
mov
jo
mov
cmp
aas
cwtl
add
popf
gs
dec
push
fisubl
jae
push
mov
or
stc
cltd
popl
add
inc
popa
jb
rcrb
or
arpl
jbe
rclb
cld
loope
lcall
out
or
call
inc
insb
push
push
outsl
test
xlat
std
and
nop
sbb
sar
clc
and
in
or
inc
sbb
jo
es
adc
repz
jmp
popa
leave
mov
lods
fiadds
popa
mov
or
mov
sahf
mov
dec
jb
lods
or
jl
inc
dec
mov
adc
inc
stc
sbb
int3
push
pop
lahf
add
cmpsl
add
and
add
xor
daa
mov
loopne
or
sahf
push
rdmsr
jo
xchg
sbb
sbb
pop
sbb
orl
je
mov
or
lds
add
xchg
sbb
push
cltd
jbe
xchg
lcall
dec
pop
test
mov
pusha
mov
or
and
mov
adc
lret
adc
pop
lcall
out
sahf
test
mov
or
orl
sbb
je
xchg
jl
sbb
adc
push
pusha
addl
xor
fs
test
sbb
or
mov
dec
add
test
push
loope
mov
popf
pop
fs
mov
inc
xchg
inc
jae
repnz
pushf
pop
lcall
xchg
sahf
lahf
push
fiadds
xorl
pop
adc
inc
mov
andb
xchg
lea
lahf
mov
xchg
mov
push
inc
xchg
jae
iret
cwtl
adc
fwait
adc
or
addl
xchg
push
xchg
and
mov
test
mov
pop
xchg
inc
imul
jns
stc
fwait
lods
add
rclb
xor
xorl
mov
insb
rolb
pop
inc
mov
push
add
push
adc
cltd
adc
sahf
mov
sbb
popf
sbbl
js
sbb
pushf
ret
adc
into
adc
cltd
sbb
sbb
sahf
adc
xor
test
mov
mov
sahf
nop
imul
iret
gs
mov
dec
inc
or
or
push
nop
stc
adc
dec
adc
sbb
sahf
mov
mov
xor
dec
or
rorb
mov
andb
nop
rclb
sahf
loop
repnz
orl
adc
xchg
pop
leave
lcall
addl
sub
add
sahf
add
aas
cwtl
sbbw
xor
test
xchg
xchg
mov
orl
dec
xchg
dec
xchg
imul
cwtl
jmp
lods
push
sahf
mov
adc
imul
mov
push
mov
mov
xchg
outsl
mov
addr16
inc
xchg
adc
xchg
cltd
cwtl
adc
push
xchg
lahf
lods
cmpl
mov
imul
imul
mov
popa
pop
lcall
imul
cmpl
test
arpl
mov
jo
xchg
cmp
lahf
or
inc
xchg
push
jb
pushf
dec
cltd
rcr
stos
fwait
sbb
jo
lahf
pop
loop
pop
dec
rolb
enter
mov
rorb
lcall
inc
xchg
pop
cwtl
mov
jae
push
pushf
clc
fcompl
pop
lock
xor
testb
xor
mov
mov
add
subb
xchg
sbb
xor
cwtl
iret
les
push
add
pushf
int
aas
cwtl
daa
sbbl
xchg
shlb
pop
shlb
lea
and
lods
cltd
or
lea
and
test
xchg
or
push
push
dec
arpl
xor
stos
xchg
add
xchg
add
add
add
rclb
inc
xor
add
mov
adc
inc
stos
fwait
rorl
cmpsl
andb
inc
or
xchg
lea
jo
push
sbb
cli
filds
inc
push
loop
imul
push
adc
cwtl
fcmovu
pushf
push
dec
add
xor
mov
mov
enter
push
add
dec
and
ret
iret
add
dec
or
or
push
sub
int3
jae
xor
push
repnz
add
xor
xchg
xchg
or
inc
loope
jo
loopne
cmpb
push
xchg
jno
mov
test
cmpsb
dec
mov
into
js
xchg
cltd
test
mov
and
inc
es
das
mov
int3
cmpsl
sub
add
call
rolb
cmpsb
icebp
dec
push
loop
sahf
adc
pop
add
jnp
xchg
jge
clc
leave
push
insl
or
inc
jge
mov
or
mov
dec
mov
addl
fs
xchg
icebp
sub
push
and
stc
push
cmp
pusha
mov
not
xchg
btr
test
pushf
xchg
mov
movzbw
mov
movzbw
bsf
shrd
bt
mov
sbb
pusha
mov
sbb
cmp
shl
xor
lea
xchg
lods
ror
rcr
or
or
xor
mov
pusha
ror
clc
pushf
push
not
pushf
stc
push
rol
jmp
push
jmp
add
jmp
lea
jne
cmp
pusha
pushl
popf
movb
push
movb
pushl
lea
jmp
add
inc
gs
imul
je
lea
call
pusha
lea
jb
push
lea
jne
setns
call
push
call
cld
pop
pop
sub
pushf
lea
movw
movl
movb
pushl
popl
pushf
mov
mov
pushl
pushl
ret
rcr
shl
mov
jmp
bt
rol
stc
pushw
popfw
push
pushl
inc
jmp
pusha
call
pushl
pushl
movw
movl
jmp
pushf
cmp
or
pushl
pushf
call
and
dec
or
jl
sbb
fdivs
push
aad
adc
aaa
das
push
push
ljmp
jae
outsb
pop
aam
lds
dec
or
lods
jmp
aam
enter
inc
mov
sub
inc
push
call
and
pop
lods
xchg
fsubrs
out
mov
xchg
and
push
xchg
xchg
lcall
or
push
les
push
popf
adc
jbe
sbb
outsb
adcl
sti
jle
shlb
mov
xor
push
push
mov
test
mov
cmpsl
push
jecxz
lcall
inc
gs
mov
pop
mov
adc
sbb
sub
cwtl
and
js
inc
mov
xchg
lods
sbb
add
inc
out
test
fcomps
pop
js
jnp
nop
stos
pop
testb
cmp
sti
cmp
stc
je
mov
push
sbb
adc
pop
fstps
movsb
aas
int3
and
dec
in
pop
sbb
push
push
mov
push
pop
dec
daa
movsb
jecxz
int
mov
imul
dec
xchg
lcall
idiv
ljmp
clc
jns
push
mov
xchg
lods
and
inc
cs
test
sub
xchg
add
jnp
xchg
insb
mov
int
jbe
test
fyl2xp1
test
test
jle
jle
fisttpll
shl
jno
stos
sub
mov
test
or
jb
xor
xchg
lcall
xchg
pop
xor
ljmp
xchg
cld
jae
and
repnz
out
shll
jl
dec
adc
adc
jns
push
fdiv
xchg
lcall
and
je
or
and
jmp
inc
dec
lretw
je
cld
cmp
ja
movsl
fsubrs
lock
cmp
xchg
loopne
sub
popa
jno
pushf
movsb
add
mov
test
mov
mov
mov
setno
lea
lea
movsbw
jmp
outsl
or
add
inc
mov
aad
mov
daa
mov
mov
ljmp
push
outsb
jnp
jl
xchg
movsb
cwtl
add
fstps
pop
xor
ds
sbb
int3
xchg
mov
add
inc
push
shrl
popf
sub
lcall
add
or
or
fs
ja
stc
imul
cmc
test
add
pusha
mov
lea
jmp
push
call
cmp
pushf
pushl
popl
movw
pushf
push
mov
pushl
ret
sar
push
aam
rcr
shrd
xor
push
aad
ror
push
rol
cwtl
rol
lea
movzbw
mov
cmc
pushf
cmp
pusha
test
pushf
lea
je
ror
pusha
pushf
shl
mov
sub
add
push
test
mov
test
test
call
lea
jmp
push
call
xor
mov
mov
add
add
lods
sti
inc
scas
rcrb
test
enter
fmull
add
pop
out
shll
daa
les
int
cmp
mov
call
lcall
pop
outsb
arpl
gs
outsb
jne
insb
add
mov
jbe
in
call
add
push
gs
outsb
push
gs
js
gs
imul
gs
xchg
call
movsbw
movl
call
push
call
clc
repnz
clc
bt
and
pushl
cmp
clc
add
movb
push
mov
pushf
lea
jmp
lea
jp
push
xchg
movsbw
seta
pusha
mov
pushl
popl
bswap
mov
pusha
lea
movsbw
jmp
movl
pusha
pushf
call
pop
insb
mov
pop
mov
dec
mov
call
push
cmpsb
sub
add
icebp
imul
shrb
pop
inc
mov
and
repnz
sahf
sub
dec
movsb
xor
lods
insb
inc
jl
jl
dec
insb
jbe
mov
es
xchg
xchg
lahf
mov
jmp
jae
pop
fisubrl
cmp
movsb
dec
shll
leave
add
add
mov
popa
rcrb
sub
xchg
lcall
fcomps
add
pusha
jmp
movzbw
pop
pusha
mov
pusha
movb
pushl
ret
lea
je
pusha
movw
cmp
mov
mov
lea
je
jmp
pushf
cmc
rol
pushf
call
push
call
clts
scas
add
xlat
xchg
loopne
jno
add
cmpl
dec
icebp
sub
xchg
mov
sarb
push
add
dec
mov
push
dec
cli
inc
add
loop
sahf
les
add
in
jecxz
xor
iret
dec
dec
adc
subb
or
mov
mov
in
mov
pushf
insl
mov
pop
xor
iret
push
sets
push
arpl
lcall
sbb
pop
popa
xlat
inc
jl
mov
pop
mov
aaa
clc
cwtl
pop
arpl
pop
inc
cmpsb
adc
sub
mov
rclb
mov
add
mov
push
scas
loopne
mov
sbb
add
pushf
clc
inc
ds
push
imul
cmp
icebp
and
xor
loopne
cli
paddq
mov
mov
xor
mov
mov
add
push
push
pop
inc
call
inc
pop
lcall
add
add
pushf
pop
clc
jg
add
lods
xchg
je
mov
mov
lret
mov
add
dec
xchg
xchg
mov
in
add
sbb
test
or
cwtl
pushl
dec
and
js
inc
mov
mov
insl
loopne
sbb
stc
flds
sarb
dec
ficomps
movsl
mov
push
fidivrl
cmp
mov
jle
pop
xchg
inc
xchg
lahf
add
xchg
pop
and
and
mov
cwtl
repnz
add
jns
mov
sub
fnstcw
test
mov
cmp
aaa
add
hlt
sti
add
cwtl
add
xchg
sbbb
aam
andb
mov
jnp
shll
dec
mov
enter
cmpxchg
in
dec
test
bound
test
jecxz
mov
dec
arpl
ja
popf
imul
xchg
push
mov
test
adc
cs
movsbl
sub
nop
dec
in
jno
pusha
adc
inc
mov
jge
pusha
jge
lock
adc
mov
lcall
lock
lahf
roll
mov
lea
xchg
mov
mov
mov
mov
mov
fbld
in
jnp
sbb
mov
enter
cmc
push
xor
xchg
arpl
cmpsb
pop
inc
cwtl
push
push
pop
and
ds
lods
pop
xchg
lods
in
xchg
add
adc
push
ret
pop
add
test
inc
sub
and
outsl
andb
pop
aas
xchg
leave
sbbb
sahf
mov
loopne
pop
pop
mov
push
leave
mov
mov
notl
sub
pop
sbb
lret
test
or
sbb
cld
fdivr
or
aad
and
jge
jnp
fidivs
fistps
ja
out
mov
pop
sub
sub
add
mov
sarl
cmpsb
inc
xchg
push
pop
xchg
dec
xor
orb
and
lds
js
test
and
arpl
icebp
mov
insl
loop
xchg
mov
xchg
pop
bound
adc
rcr
test
cltd
icebp
inc
mov
nop
mov
scas
adc
jb
mov
push
xor
hlt
mov
test
out
mov
ret
push
iret
push
push
shlb
mov
neg
inc
xchg
and
add
jg
fucom
mov
or
enter
or
dec
xchg
xor
push
lods
push
xlat
mov
call
aad
xchg
lea
loop
cwtl
testb
fst
les
adc
add
arpl
cmp
popf
pop
fidivl
movsb
fstl
stc
add
mov
sub
mov
dec
movsb
push
xchg
mov
imul
add
and
pop
xor
add
sub
mov
push
test
in
add
subl
rorl
inc
adc
fstpl
jb
sbb
repnz
popa
lahf
ret
ljmp
loopne
xchg
pop
sub
lret
xchg
js
lahf
mov
test
adcb
lea
pop
lods
aas
dec
inc
mov
lea
popf
cmc
movsl
imul
loop
int3
jo
mov
lods
jo
mov
pop
inc
test
subl
movsl
xchg
mov
pop
mov
movsb
aam
fsubs
adc
nop
inc
loopw
mov
mov
je
or
add
mov
dec
movsl
je
fidivs
add
push
inc
cmpsl
xchg
and
mov
aam
or
sarb
jnp
movsl
adcl
pop
sbb
jp
clc
xor
pop
fimuls
addr16
pop
xchg
sub
mov
mov
dec
popf
cmpsl
mov
push
jmp
js
hlt
sub
or
leave
lcall
fwait
xchg
sub
enter
push
call
jae
sub
rorl
pop
mov
mov
gs
mov
mov
ficompl
sbb
mov
jno
dec
int3
shl
orl
xor
push
test
jno
bound
jno
pusha
mov
ret
inc
fcoml
push
or
addl
or
xchg
push
and
xorl
jno
sbb
or
fists
popf
test
jno
lahf
cmpsb
add
pop
dec
lods
mov
bound
cmpsl
mov
jae
add
add
sbb
dec
rorb
push
xor
lahf
sbbl
mov
jecxz
add
sub
out
push
hlt
pop
popf
in
lds
into
loope
or
mov
inc
pop
sub
loopne
xchg
xor
out
mov
rclb
mov
cmc
adc
movsb
xor
mov
outsb
dec
cmc
pop
mov
push
jmp
inc
mov
adc
mov
les
in
mov
mov
or
or
sub
sub
in
addb
xchg
sbb
test
sub
add
lds
dec
popa
test
jae
mov
cmpb
add
push
cli
add
inc
xchg
or
jp
hlt
popf
cmp
mov
add
int
mov
popf
mov
and
or
stc
mov
mov
mov
or
jecxz
shlb
mov
push
inc
loop
add
pop
mov
jb
ja
fcoml
mov
add
ret
xchg
jle
mov
pushf
pop
popa
idivl
sarb
push
mov
frstor
shlb
mov
xchg
xchg
out
dec
or
dec
fdiv
pop
pop
mov
sbb
popa
xor
dec
dec
push
ja
cld
inc
shrb
adc
cltd
and
test
leave
adc
add
subb
shrb
cwtl
lret
push
rclb
mov
popf
add
cmp
add
pop
fsubs
xchg
adc
fs
movsl
sarl
das
push
mov
repnz
inc
mov
ja
adc
inc
sub
add
dec
adc
xor
int3
inc
xor
jo
adc
xchg
mov
xorl
mov
and
add
mov
lock
mov
dec
dec
xchg
mov
or
sbb
cltd
sbb
lahf
stc
nop
adc
xchg
test
jns
test
xchg
dec
push
fsubs
mov
pop
mov
fisubs
add
fcmovu
sub
mov
mov
mov
adc
ror
mov
push
mov
mov
pop
pop
loop
xorl
jb
repz
loop
mov
cwtl
mov
push
lret
jb
ss
pop
cmp
cwtl
add
mov
pop
mov
loop
mov
or
enter
popf
daa
cmc
fsubp
mov
aas
and
lahf
inc
out
dec
or
or
mov
adc
pop
out
add
nop
sub
pop
addr16
insl
or
mov
test
das
sub
daa
mov
add
xchg
add
adc
test
addl
mov
lret
outsl
cld
test
inc
loopne
pop
scas
xor
mov
lret
addb
xchg
arpl
xchg
test
inc
test
addb
mov
xchg
mov
pop
rcrl
cmp
adcl
test
xchg
sar
dec
mov
andb
andl
push
mov
cli
pop
addl
test
cltd
xchg
movsb
mov
mov
rcrb
xorl
lods
leave
and
adc
xchg
push
xchg
push
adc
test
adc
or
sub
mov
add
add
adc
sbb
dec
mov
movb
adc
mov
mov
or
or
xchg
aam
ret
or
xchg
mov
iret
dec
leave
pop
ret
dec
push
test
sbb
enter
stos
fwait
add
and
ret
xchg
mov
adcl
xchg
test
popf
cmp
or
push
add
push
sbbl
test
xchg
addb
or
adc
test
mov
xchg
dec
test
pop
xchg
xchg
enter
mov
xchg
add
inc
or
adcl
mov
mov
mov
mov
xchg
sbb
cltd
xchg
movsb
or
test
icebp
lods
cwtl
xor
dec
mov
test
mov
mov
mov
mov
sbb
pop
jne
mov
fidivs
pop
sahf
adc
nop
iret
inc
fcoml
nop
lcall
test
pop
pusha
call
in
or
mov
jp
and
adc
xor
add
xor
xor
mov
mov
test
jle
mov
xchg
mov
daa
out
sbb
or
xchg
test
ds
push
adc
cmp
pop
add
out
inc
arpl
mov
cmp
rcll
cs
or
bound
jb
jp
pop
jmp
cmp
sti
fwait
das
popf
lods
shlb
addb
fs
mov
mov
push
cs
out
mov
rorl
aam
mov
test
imul
adc
test
fldcw
mov
mov
sbb
mov
push
popa
inc
cwtl
cltd
and
lahf
js
sbbb
lea
inc
int
push
negl
mov
adc
rclb
popf
push
dec
pusha
test
inc
mov
jg
push
test
dec
add
je
or
xchg
adc
lahf
xor
ds
mov
mov
jl
rorl
les
mov
push
push
mov
cld
shlb
push
push
sarl
xchg
in
test
xchg
xchg
xchg
cmp
mov
or
mov
mov
pop
ljmp
adc
jge
add
fadds
adc
sbb
sarl
mov
les
cli
sahf
es
cmpb
insl
xchg
test
dec
sub
adc
and
add
mov
pop
lods
add
lret
fistl
out
fucomp
jo
mov
jecxz
dec
fstp
mov
xchg
ret
xchg
mov
fsts
inc
into
test
clc
popf
adc
leave
imul
ja
mov
leave
es
jmp
xchg
cmpl
test
push
adc
jb
push
mov
icebp
inc
insb
inc
mov
in
mov
add
xchg
fnsave
xor
mov
jb
je
loope
push
out
sub
into
mov
cmp
cmp
ret
xchg
mov
sbb
sub
xchg
cmpl
and
xchg
xchg
in
sti
aaa
jle
add
pop
nop
clc
push
cmc
xchg
ljmp
xor
xchg
dec
pushf
sub
add
or
popf
mov
mov
das
int
inc
xchg
push
pop
add
push
fwait
mov
out
sarl
push
clc
jmp
fwait
adc
or
ljmp
scas
mov
nop
popf
or
adc
xchg
xchg
pop
lret
movsb
xchg
jb
out
pop
adc
test
or
or
push
mov
dec
test
and
scas
and
ja
mov
stos
push
inc
push
popf
shr
fisttpll
inc
inc
mov
shr
mov
mov
les
enter
fcmove
ret
push
add
int3
outsb
dec
scas
push
movsb
movsb
test
lds
fidivrs
call
pop
outsb
pop
lock
push
sbb
in
mov
add
xor
cld
inc
iret
bswap
jns
or
add
insb
inc
stos
aad
loopne
adc
nop
loope
test
adc
fcomip
std
shll
push
jne
jae
xor
adc
dec
mov
aam
mov
hlt
rorb
les
fisubs
sbb
pop
xchg
jmp
icebp
pop
add
popf
mov
ret
rorb
arpl
insl
lret
and
mov
bound
pusha
stc
mov
jne
cmp
stc
test
inc
es
dec
pushw
dec
fldcw
dec
cmp
enter
mov
lcall
mov
repz
push
xlat
stc
xchg
inc
mov
sbb
aaa
xchg
ret
inc
and
test
mov
rorb
movsl
fucomip
aad
leave
test
iret
std
mov
sbb
add
mov
popf
mov
addr16
ficompl
dec
addl
pop
adc
cs
ljmp
rolb
pushf
subb
cmp
popf
negl
mov
hlt
or
pushf
sub
mov
xor
js
lock
clc
loope
xchg
dec
xchg
movsl
add
push
mov
mov
sub
ret
arpl
enter
mov
mov
mov
cltd
ficompl
mov
mov
mov
adc
dec
mov
dec
xchg
push
popf
inc
and
ljmp
jl
movsl
popf
inc
cs
jb
hlt
sbb
sti
syscall
aad
adc
adc
push
js
xor
hlt
aad
mov
insl
or
mov
xor
add
inc
loop
ffree
pop
pop
push
testb
mov
xor
cmpsb
adc
mov
lret
popa
into
mov
adc
dec
fldenv
cmp
push
test
sbb
mov
adc
ds
test
mov
in
mov
mov
subl
add
adc
dec
jmp
mov
sub
xchg
or
jne
mov
inc
in
scas
xor
and
inc
cmp
xchg
popf
cmpsb
out
mov
dec
pusha
cs
sbb
movsb
insl
insl
add
lahf
insl
aam
out
cmp
call
rcrl
fwait
fs
rcl
mov
add
adc
or
or
or
pop
inc
lea
movsb
jp
test
xorb
mov
adc
les
add
cmp
lea
xor
aas
mov
xchg
insl
adc
jb
mov
jae
mov
jle
clc
or
sti
jl
pushf
fwait
adc
jae
jne
mov
fwait
incl
inc
adc
lahf
popf
fs
cmp
mov
ss
jg
jo
mov
and
pushf
insl
loopne
stc
bnd
jg
cmp
das
push
pop
ret
or
orb
and
movsb
pop
dec
xchg
les
adc
enter
popf
addr16
inc
in
mov
pop
xor
pushl
push
mov
sti
jnp
mov
lahf
loope
js
movsb
or
adc
pop
repz
aas
cmc
inc
sbb
pop
popf
call
aaa
std
adc
imul
mov
ret
lea
sbb
sub
jmp
shll
rclb
sub
repnz
cmp
je
int3
mov
mov
fwait
call
shl
mov
cmp
mov
rcrl
mov
movl
dec
jle
cmp
add
leave
stos
icebp
push
lds
dec
mov
mov
pusha
aas
xchg
out
xlat
push
cmpsl
pop
pop
jo
cmpsb
clc
nop
imul
jo
adc
inc
jmp
mov
cmp
xchg
or
mov
add
loop
xchg
jg
xchg
popa
cmpsl
pop
bound
and
mov
push
fsubl
aam
mov
call
mov
loopne
inc
es
nop
test
incb
in
pop
pop
mov
add
sti
xchg
mov
xorl
and
dec
mov
inc
roll
les
xchg
or
rolb
mov
inc
add
mov
std
bound
lahf
in
lahf
mov
add
lea
inc
add
push
dec
call
or
adc
aam
call
lea
dec
mov
cs
sbb
rcrl
sbb
sahf
mov
pusha
or
xorl
arpl
mov
mov
xchg
adc
push
lcall
pop
cltd
xchg
sbb
add
add
in
pop
xor
popf
jne
ficoms
sbb
daa
mov
jne
ja
repnz
push
fbld
jno
mov
sbb
mov
or
aaa
imul
cmpb
lea
add
testb
pop
inc
aad
adc
nop
sbb
pushf
gs
popf
mov
hlt
cmp
mov
fisttpll
in
jno
ja
sub
ret
push
mov
sbb
scas
dec
xchg
mov
push
push
sub
push
shlb
test
adc
js
pop
stos
cs
in
shrb
popa
icebp
add
shll
call
cmc
test
push
loopne
xlat
dec
push
mov
cwtl
mov
ret
shlb
ja
enter
pop
add
aam
mov
adc
outsl
lds
pop
imul
sub
push
out
push
jns
and
mov
jle
inc
rclb
pop
adcb
popa
aaa
or
lret
cwtl
shll
pop
mov
mov
lret
jb,pt
sar
pushf
test
jle
sub
into
subl
inc
int
and
mov
pop
or
call
mov
sti
pop
add
pop
pop
adc
outsl
pusha
sbb
sbb
cld
cld
daa
test
lea
mov
imul
xchg
cmp
inc
sub
sbb
sbb
sbb
cmp
sbb
adc
mov
push
push
mov
cmpl
mov
fs
mov
mov
mov
jmp
push
mov
dec
add
ja
add
dec
movsl
lea
sub
ret
push
popa
mov
shll
pop
pop
add
mov
lea
repnz
out
andl
xchg
jno
stos
dec
pop
js
leave
loope
cld
push
lahf
ret
ret
lret
scas
mov
lock
add
mov
cmp
stc
loopne
mov
cmp
popa
xor
das
insl
push
push
cmovl
jmp
rclb
ss
loope
fucom
shll
mov
popf
nop
lahf
mov
jne
mov
mov
test
test
lcall
imul
pop
gs
repnz
mov
int
in
and
pop
loope
pop
fmuls
or
lods
inc
cmc
or
xorb
xchg
filds
mov
popf
push
mov
fwait
in
fwait
dec
data16
loopne
icebp
mov
xor
add
daa
leave
and
sahf
fstps
into
dec
ljmp
mov
mov
jg
jmp
lahf
jecxz
in
dec
pushf
xor
adcl
and
daa
mov
mov
call
jae
push
sbbl
nop
mov
dec
mov
ss
fnstcw
pop
cmc
ss
out
repz
xor
out
shlb
mov
adc
fsubrl
sbb
in
mov
and
add
pop
push
mov
lret
int3
clc
fidivrs
hlt
pop
mov
mov
mov
push
adc
push
cs
addb
aas
aas
xor
arpl
je
outsl
outsb
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
out
mov
pop
repnz
repz
lret
or
filds
out
arpl
add
push
mov
add
loopne
loope
sub
in
sahf
mov
adc
js
outsb
cwtl
repz
push
mov
fdivrs
inc
push
push
mov
testb
pop
dec
leave
int
cmp
sub
cmp
mov
or
into
jmp
mov
dec
int3
xchg
pop
mov
cld
xor
das
ret
cmpsl
fiaddl
movsb
icebp
pop
iret
fwait
pop
or
test
mov
je
cwtl
inc
in
dec
adc
adc
pop
mov
push
and
and
dec
xor
fs
into
jg
or
arpl
mov
leave
adc
jo
mov
pop
fwait
add
add
and
dec
pop
jne
cmp
aad
jno
adc
cli
imul
popa
mov
icebp
xor
cmp
enter
dec
adc
arpl
jle
add
in
sub
addr16
lds
mov
movsl
loop
inc
xchg
lcall
jo
leave
adc
xor
push
cltd
enter
sbb
fstpt
out
sahf
adc
add
xlat
mov
imul
faddp
outsb
jne
push
add
test
cld
fmull
les
imul
leave
outsb
xchg
pop
xchg
pop
fmull
xchg
lcall
xor
pushf
movsbw
lea
mov
pusha
jmp
pusha
lea
je
push
pushl
lea
jmp
pushf
lea
jb
push
push
pusha
cmpb
jmp
mov
cmp
call
pushl
pusha
mov
pushl
popl
mov
pushf
push
pushl
ret
push
clc
or
push
mov
call
push
lea
call
cmp
sub
push
pusha
lea
jne
pusha
lea
call
pushf
pushf
movl
push
lea
jmp
push
call
fucomip
dec
lods
call
shr
push
add
adc
push
pusha
push
lea
jmp
stc
cmp
or
jmp
mov
or
jmp
cmc
mov
or
lea
jo
je
bswap
add
mov
not
btc
stc
mov
cmp
sub
test
jmp
mov
test
mov
dec
cmpl
mov
cld
inc
pop
out
cmp
jl
mov
test
mov
into
xchg
dec
mov
addl
in
repnz
arpl
lahf
mov
icebp
inc
enter
cmp
dec
loop
cmpsb
loopne
in
push
inc
stc
ljmp
lock
cli
mov
push
inc
mov
sbbl
or
cmp
xchg
lcall
lahf
in
call
xor
popf
push
call
mov
cld
in
call
bnd
jg
push
call
ret
and
movsbw
push
movzwl
push
lea
pusha
bswap
not
mov
call
add
push
imul
jb
add
mov
call
jae
inc
mov
shld
xchg
mov
movsbl
sar
mov
jmp
add
aas
jae
popa
jo
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
pop
inc
inc
push
xor
inc
inc
pop
add
mov
lea
xchg
movzwl
jmp
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
xor
inc
call
add
ret
and
jge
or
add
popf
sbb
jbe
pop
inc
sub
and
fs
and
cmpsl
movsl
sbb
pop
out
xor
loope
insl
xor
das
orb
dec
bound
scas
ljmp
cwtl
lea
call
push
pusha
lea
jne
lea
bswap
mov
push
movw
lea
jmp
add
pop
imul
pop
jo
jb
insl
gs
jb
outsb
outsl
imul
push
push
shl
push
cmpsb
sbb
add
pop
sbb
nop
cmc
xchg
add
cs
fwait
push
mov
jecxz
das
sub
xbegin
jb
ror
outsb
cmp
add
subl
stos
and
mov
int3
test
cmc
push
mov
pop
or
ret
push
mov
bound
mov
jo
and
cmp
jbe
das
add
outsb
jno
and
jle
nop
in
pop
adc
addr16
adc
jbe
dec
jl
sets
fwait
push
jne
xor
int3
adc
lea
adc
jp
sbb
xor
mov
xchg
daa
sarb
sub
int3
add
add
sbb
jno
jmp
jae
push
mov
mov
pop
inc
ret
cmp
sub
mov
in
sub
and
lcall
adc
jp
cwtl
movsl
mulb
push
pcmpgtd
and
ljmp
push
push
push
int
popa
loopne
fbstp
adc
cwtl
mov
jge
lods
pop
in
sub
cmp
mov
jns
dec
pusha
sbb
pusha
xor
dec
shlb
add
mov
cmpsl
iret
push
call
mov
and
jae
call
mov
not
inc
not
inc
and
pushf
pusha
sar
xchg
shr
xadd
sets
mov
dec
cmp
call
jp
cltd
dec
and
les
popa
jle
arpl
xor
rcrl
fldcw
stc
das
out
test
jo
xchg
out
cmpsb
jl
or
sti
jp
int3
dec
ffreep
dec
sub
xor
xor
add
jo
bound
lds
lret
pop
flds
xchg
mov
aas
fidivl
push
xchg
lcall
fs
add
or
call
add
aas
aas
xor
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
pop
pop
add
sub
push
pusha
movb
inc
lea
pusha
pusha
jmp
pusha
push
or
pushf
push
jmp
lea
jne
aaa
xor
mov
mov
lahf
mov
adc
sar
add
pusha
mov
bt
pushl
lea
jp
pusha
test
movl
call
call
push
cmp
push
pushf
jmp
pop
jo
outsb
jmp
sbb
insl
xchg
lcall
xlat
ds
loopne
mov
test
pop
adc
inc
pushf
or
pop
cltd
sbb
daa
xor
cmc
popa
lods
fdivs
fbld
out
gs
loop
rclb
jmp
add
cmpsl
cmpsb
call
push
xor
mov
xlat
ficoms
pop
xchg
cmp
mov
ret
inc
testl
repz
into
push
outsl
dec
outsl
push
xchg
fadds
ficoml
ljmp
push
inc
and
mov
jo
dec
rolb
xchg
add
lods
xlat
into
pop
out
or
sbb
adc
out
and
loop
mov
lcall
stc
add
btc
bswap
mov
test
bt
test
cmpb
call
stc
xor
call
mov
lea
call
push
pushl
jmp
push
call
test
xchg
stc
push
call
xchg
imul
movl
bt
not
mov
cmc
movb
cmc
pushf
test
jmp
sub
push
enter
sub
jp
add
pusha
ret
or
dec
add
pop
out
daa
push
loope
loopne
jge
xor
pusha
mov
push
fwait
pusha
sub
pop
nop
mull
gs
fcoms
add
rclb
int
out
jge
mov
jb
jl
ds
sbb
in
lcall
aas
outsb
jo
jae
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
xor
add
lea
mov
sbb
out
inc
js
jo
push
int
pop
aam
rcl
mov
lcall
cmpsb
popa
scas
pop
and
push
scas
inc
jg
imul
lcall
xor
movsbl
pop
not
mov
pusha
call
add
inc
gs
jb
jbe
je
push
jb
imul
inc
add
mov
mov
xor
pushf
pushl
ret
pushf
pusha
mov
pusha
movw
lea
jae
pushf
movl
jmp
pop
push
lea
jmp
push
lea
je
bts
ror
add
shrd
mov
pushf
cmp
test
bt
add
bt
mov
cmc
pusha
mov
stc
cmp
bt
pushf
cmp
jmp
lea
call
pushf
lea
jne
mov
call
push
call
push
psubsw
sar
jmp
fs
je
pusha
clc
bt
cmp
sub
bt
cmp
call
mov
lea
jae
call
push
call
add
lea
pushf
call
rep
movzbl
mov
push
push
mov
lea
jmp
add
add
adc
add
sbb
add
mov
add
add
add
add
add
add
mov
jmp
popa
or
mov
adc
sbb
jg
mov
lea
test
lret
cmp
sbb
sub
dec
push
xchg
lcall
or
push
add
push
mov
jg
in
call
cwtl
mov
push
dec
inc
dec
xor
cs
insb
add
lods
mov
in
inc
call
dec
cmp
insl
jae
je
cmc
cmp
jmp
push
call
or
loope
adc
xor
jns
adc
imulb
pushl
mov
inc
loop
sbb
mov
sti
add
and
nop
in
dec
leave
cmp
rorb
dec
sarl
outsb
cwtl
negl
xchg
jnp
jae
sbb
mov
shl
sbb
or
sbb
pop
and
mov
or
push
lret
mov
mov
jo
mov
sarl
loope
push
mov
push
mov
loope
repz
xchg
lcall
xchg
repnz
repnz
jno
rcrl
addr16
jb
clc
pop
mov
pop
mov
inc
in
inc
je
pop
adcl
add
xchg
clc
lahf
pop
lahf
sub
imul
mov
xor
shr
mov
leave
dec
ljmp
push
push
inc
dec
mov
cmp
xor
sbb
mov
mov
stos
and
push
add
mov
mov
xchg
lcall
push
or
inc
outsb
adc
dec
stc
in
mov
and
lcall
cmp
cmpl
leave
push
fucomip
lahf
xor
in
in
sahf
push
xchg
inc
out
shll
and
xchg
mov
lods
loop
jb
mov
or
aam
xchg
lcall
and
fs
je
bt
clc
add
pushf
pusha
pusha
lea
jmp
sub
call
pushl
popl
movb
pushf
pushl
ret
jmp
jmp
jmp
lock
movsb
pop
mov
xor
xchg
stos
mull
mov
or
stos
out
push
leave
xchg
test
mov
ljmp
int3
aaa
orb
sbb
fists
mov
ja
and
inc
imul
sarb
and
add
add
out
sbb
pushf
sbb
sub
rclb
rclb
es
jnp
adc
and
jmp
aad
test
les
movsl
and
xor
xchg
and
std
jb
fs
xchg
lcall
rorl
sub
ret
sar
inc
leave
call
inc
into
test
adc
in
mov
xor
mov
in
add
rcr
dec
ret
adc
ljmp
out
mov
xlat
add
icebp
mov
or
push
mov
sarl
lcall
mov
or
push
mov
je
loope
adc
popa
mov
out
push
icebp
or
inc
nop
fldenv
out
js
push
addr16
outsb
inc
and
pop
sbb
insl
repnz
les
addb
or
mov
mov
iret
inc
ret
xor
and
or
es
xchg
lcall
and
jae
pusha
stc
sub
pushf
lea
call
push
pusha
pushl
lea
jae
pusha
test
bt
xor
call
pushf
call
movw
or
push
movb
lea
jne
jmp
pusha
call
add
inc
gs
jb
arpl
fs
jae
add
add
jb
outsb
je
pop
jae
adc
insb
lahf
push
push
and
or
jp
jle
bound
inc
jg
adc
pop
popa
movsb
mov
xor
sbb
sbb
add
dec
mov
xchg
lcall
aas
popa
jo
outsb
fs
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
push
xor
inc
inc
pop
add
pusha
lea
je
lea
adc
ror
cmp
mov
rol
shrd
stc
rcr
mov
clc
xor
test
stc
bt
shr
cmp
test
cmp
jmp
push
clc
cmp
pusha
lea
ja
sub
sub
bswap
shl
add
sar
or
cmp
shr
mov
seta
mov
cmc
pushf
test
repnz
call
push
call
lods
inc
int
sbb
add
je
jne
jb
outsb
je
jb
arpl
jae
add
xchg
les
sahf
les
add
les
cmc
lea
jmp
jmp
inc
add
test
shr
xchg
bswap
call
stc
call
imul
leave
push
idiv
loopne
xchg
push
dec
mov
push
mov
loope
ljmp
jbe
bound
mov
stos
inc
dec
test
mov
and
fidivl
xor
sbb
lods
cmp
cld
cmp
sub
mov
dec
fcmovbe
jo
adc
mov
fs
sti
jbe
push
loope
mov
iret
fsts
xlat
mov
or
stos
mov
cmc
push
popa
sub
fdivrs
jns
lahf
aas
fmull
or
pusha
scas
xor
lret
ret
jmp
pop
push
lea
fwait
or
bound
in
addr16
add
mov
pop
or
xor
movsl
cmpsb
ret
push
sahf
setnp
lds
movsl
lock
mov
cmp
outsb
inc
es
inc
lcall
orb
aad
xor
lcall
xchg
imul
cmp
mul
ss
sbb
lock
aas
test
jl
or
adc
cmpsb
ret
fs
adc
adc
jmp
stc
xchg
test
call
add
aas
aas
xor
arpl
je
outsl
outsb
inc
jae
fs
inc
push
inc
inc
inc
inc
inc
push
inc
inc
inc
pop
add
inc
inc
sbb
loop
push
in
test
ds
or
sub
or
mov
xchg
pop
xor
loopne
mull
repz
rcr
and
mov
sbb
xor
aaa
lods
sub
out
inc
leave
push
mov
mov
lock
cmpsl
jae
adc
xchg
test
loopne
cmp
lret
mov
bswap
movl
movsbw
call
add
pop
pop
inc
jo
pop
arpl
inc
imul
cmc
pushf
cmp
jmp
mov
stc
pop
lds
pop
mov
mov
pop
cli
bound
lret
cmp
inc
andl
in
pop
out
add
adc
int3
lock
gs
push
fisubl
enter
xchg
lcall
and
call
repnz
cmp
pushf
cmp
jmp
mov
lea
pusha
push
lea
call
pushf
jmp
push
mov
push
lea
jmp
cmpsb
insb
shll
in
or
out
ja
xor
fisubs
cmpsl
jecxz
mov
mov
roll
ljmp
ficoms
fldcw
decb
in
sbb
push
mov
in
inc
cmpsl
jae
out
push
out
pop
cmp
or
movsl
sbb
or
inc
xor
aam
ljmp
aaa
mov
xchg
mov
stos
stc
rcl
mov
call
mov
pushf
pushf
pushf
popl
pushl
stc
push
or
jmp
cmc
int3
sub
fisubs
js
inc
mov
fistpll
popf
into
imul
sahf
das
mov
and
addr16
pop
cmpsb
arpl
or
add
into
cmovo
jmp
push
pop
jae
dec
and
lcall
fs
ja
shr
sub
btr
bsf
jmp
pop
fisubs
cmpsb
jecxz
pop
ficoml
and
mov
jg
push
in
adc
ret
bound
xchg
push
and
mov
aam
lcall
and
into
inc
jo
ds
aam
mov
lea
in
enter
cmpsb
xchg
mov
gs
movsl
das
jp
fisttps
ficomps
out
add
jl
repnz
fsubs
jo
and
push
jae
pop
call
xchg
xchg
shl
or
mov
pop
add
mov
sarl
push
lcall
ret
xchg
pusha
pusha
mov
lea
pop
push
mov
push
mov
bswap
mov
mov
mov
pushl
ret
lea
jb
ja
stc
imul
stc
cmp
jmp
add
aas
aas
xor
and
push
je
imul
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
jae
fs
inc
inc
jae
fs
inc
push
inc
inc
inc
inc
inc
push
xor
inc
inc
pop
add
subb
adc
push
mov
cltd
sbbl
mov
add
lret
in
push
daa
stos
push
lret
shll
daa
int3
mov
movsb
gs
pop
pop
leave
push
push
call
add
xor
jle
cltd
fdivs
mov
insb
mov
mov
icebp
stc
xchg
out
jp
repnz
mov
jne
mov
mov
mov
mov
adc
in
and
aaa
das
mov
fimuls
je
sub
vprotw
push
enter
mov
add
and
mov
test
dec
add
xor
enter
dec
mov
gs
cmp
jnp
ja
scas
and
pop
scas
jne
xor
fst
pop
stos
cwtl
jns
adc
mov
mov
leave
dec
mov
pop
jae
mov
xchg
adc
mulb
ja
push
inc
jnp
das
cmp
loop
cmp
out
adcb
jbe
scas
or
inc
push
les
adcb
cmp
out
fsubl
inc
jecxz
pusha
xchg
inc
jnp
jne
or
fistpl
popf
out
fs
outsb
pop
jnp
enter
enter
xchg
data16
jecxz
pop
ss
or
sub
call
ja
fdiv
push
fisubrl
lcall
and
inc
cld
int3
rep
pop
call
shll
pop
repnz
bound
or
loope
mov
pop
xchg
sub
push
mov
or
cmpsb
dec
or
fisubrs
sbb
pop
imul
stos
outsl
shrb
ds
les
jnp
jo
rclb
xor
cwtl
sbb
fcompl
sub
jno
or
repnz
int
hlt
mulps
mov
pop
mov
or
leave
push
mov
insb
mov
clc
clc
pusha
pushl
popf
movw
pushf
push
lea
jmp
jmp
push
call
bound
cs
mov
cmp
call
pusha
stc
or
pushf
movw
push
lea
je
stc
mov
bsr
not
mov
cmp
xor
cmc
cmc
stc
pusha
shr
clc
movb
bt
cmpl
push
pushl
lea
je
ror
sub
mov
push
bswap
cmp
sub
cmp
pushl
btc
shrd
shr
bts
bt
bsf
bsf
mov
bsf
add
bswap
add
cmp
jmp
add
dec
outsl
popa
fs
imul
add
push
mov
inc
ret
mov
rorl
adc
popf
les
orb
mov
pushf
mov
out
mov
out
shrb
movsl
dec
les
shl
mov
mov
mov
xor
or
or
mov
push
mov
ret
fcomi
add
push
mov
aam
mov
ret
inc
roll
orb
or
dec
mov
loop
les
mov
ret
sbb
pop
mov
or
mov
dec
mov
les
icebp
adc
sahf
xchg
sbbl
ret
xchg
or
rcrb
mov
or
or
mov
test
addl
inc
nop
push
mov
orb
or
add
mov
jmp
addl
push
mov
lret
pusha
int3
lods
or
or
in
mov
andb
mov
test
xchg
or
mull
ljmp
push
xchg
orl
pop
lds
mov
out
test
movb
or
leave
data16
test
test
orl
inc
enter
subb
into
cmpsl
inc
or
inc
outsb
push
or
add
enter
call
xor
xchg
and
dec
cs
jmp
mov
add
in
lea
dec
enter
xchg
and
add
sub
adc
addr16
or
sub
add
test
out
lcall
insl
popa
lcall
sub
out
adc
int3
push
dec
lock
rorl
adc
mov
mov
fcoms
pop
ljmp
push
imul
orb
cmpsl
stos
sbb
sub
xchg
pushf
mov
call
or
push
jge
fiadds
ljmp
add
stos
orb
rorl
xor
jecxz
dec
adcb
shrb
lods
daa
add
or
mov
mov
leave
lds
mov
mov
add
ljmp
roll
push
movl
adc
je
scas
arpl
or
jo
dec
mov
subb
cmp
inc
dec
lods
mov
stos
push
cmp
call
iret
lods
je
add
dec
loop
sbb
xchg
push
hlt
test
adc
cmp
leave
orb
iret
mov
imul
sub
test
xchg
loopne
sub
mov
movsb
add
daa
mov
enter
sbb
xchg
movsl
mov
sub
inc
arpl
outsl
repnz
das
out
sbb
xchg
and
add
in
dec
nop
cli
lret
push
rorb
hlt
cs
in
inc
push
into
mov
test
cmpsl
pop
icebp
and
addb
inc
insl
xchg
mov
movl
add
pop
mov
loopne
lods
or
xchg
mov
bound
cmp
fldl
test
lret
lret
add
in
mov
or
out
mov
insl
out
push
loopne
les
mov
mov
mov
push
daa
out
andb
loop
subb
bound
mov
lea
iret
xor
es
and
mov
inc
add
in
pop
jge
xor
sbb
fistpl
cmc
xchg
push
jne
out
xor
pushf
pop
out
push
nop
mov
aad
mov
shl
jo
jae
adc
push
push
adc
xchg
roll
out
jl
sub
enter
loop
lret
lret
mov
push
jnp
mov
repz
cwtl
add
xchg
out
into
add
and
movb
imul
int3
adc
add
into
ljmp
call
sub
add
imul
int
xchg
mov
shll
push
xor
cmp
js
add
into
inc
inc
cmp
pushf
addr16
addl
enter
cmpsb
xchg
das
rorb
xor
test
or
xor
push
imul
cltd
or
loope
xorl
sub
add
xor
leave
xchg
bound
loop
loope
dec
inc
stos
add
and
test
mov
add
or
fwait
loope
mov
push
pushf
addb
test
mov
add
enter
dec
rcrl
dec
pop
nop
and
adc
pop
push
mov
movsb
push
push
movsl
or
add
movsb
dec
ficomps
out
or
ds
movsl
orl
xchg
cmpsb
in
cwtl
push
insb
xor
test
xchg
sarl
pop
loope
add
cwtl
inc
xchg
fadds
inc
lods
xchg
xchg
test
dec
hlt
add
xchg
sub
mov
leave
arpl
add
outsl
stc
loop
pop
jg
orb
lock
inc
mov
imul
dec
mov
test
or
inc
cmpsl
imul
scas
scas
or
dec
xchg
test
inc
into
pop
or
inc
mov
and
mov
cmpl
mov
cmp
mov
sbb
lcall
pop
lahf
faddl
inc
cmp
ret
push
icebp
cmp
out
pop
add
icebp
push
loope
pusha
mulb
out
out
in
ret
insl
daa
mov
xchg
mov
movsl
in
and
cmp
call
push
mov
cwtl
into
sbb
out
and
mov
stos
or
add
xchg
shr
sub
mov
xchg
jecxz
out
test
mov
int
adc
pop
test
mov
and
sub
sub
jmp
leave
or
lods
cli
cltd
xchg
fwait
lret
aas
pop
xor
push
shll
sub
xchg
or
test
stos
xorl
aaa
fisubl
and
adc
sub
ljmp
stos
and
or
xchg
fneni(8087
stos
pop
lods
cmpsb
mov
lods
rorb
in
adc
inc
fs
movsl
orb
roll
shlb
add
pop
fs
xlat
ret
xchg
push
add
sahf
mov
cmpsb
mov
pop
inc
cmp
and
pop
add
in
inc
mov
mov
add
dec
push
mov
sbb
push
xchg
add
call
std
test
stos
lods
mov
rorl
test
inc
out
rcll
fiaddl
je
mov
add
pushf
pusha
stos
sbb
and
sub
sub
push
or
jmp
mov
subl
xchg
push
aad
lcall
loop
mov
push
std
rorl
add
mov
insb
xchg
pop
inc
mov
or
sbb
mov
fisubrs
outsb
adcl
sahf
movsl
into
adc
sbb
cs
dec
test
mov
arpl
loope
sbbb
sbb
adc
xchg
pusha
out
or
shlb
push
orb
repz
mov
or
jecxz
sbb
and
push
mov
in
inc
xchg
cmp
push
stos
adc
test
in
loope
xorl
sbbl
add
jnp
jne
je
mov
mulb
and
jns
test
jl
movb
in
cmp
cmp
xchg
or
sub
imul
adc
popa
add
or
mov
mov
fsubs
sub
or
xchg
in
fmulp
inc
call
xchg
data16
inc
fisubs
inc
call
mov
mov
flds
add
xchg
add
jo
or
call
test
cmpsl
popa
das
xchg
dec
or
mov
cmpsb
xchg
xlat
cmpsl
add
mov
inc
les
or
out
bound
push
icebp
sub
fidivs
xor
out
mov
dec
fstps
sarl
or
fisttpll
or
test
adc
inc
xchg
out
sbb
dec
mov
xor
sbb
add
jo
fiadds
inc
call
cmpsb
popa
add
scas
es
pshufw
movsb
jge
adc
mov
push
dec
mov
mov
ljmp
imul
jmp
mov
push
test
add
push
xchg
out
jge
jle
out
sbb
fisubrs
push
enter
lods
lret
stos
lret
test
cmpsl
lret
movsl
mov
mov
adc
lret
or
mov
or
lods
andl
or
dec
test
adc
xchg
and
mov
dec
adc
sub
test
faddl
push
int
ret
int
lret
push
scas
cmpsb
popa
pshufw
movsb
add
jne
sub
jnp
cmpsl
jl
xchg
call
and
test
ljmp
push
mov
in
jno
push
xchg
movups
pushf
lahf
lods
rorb
add
xchg
out
sbb
or
cmp
call
or
fcomps
outsb
dec
repz
ror
mov
movsl
or
xchg
push
in
xchg
or
jno
gs
add
fucomi
add
cmpsb
nop
nop
dec
sub
cmp
cwtl
shll
mov
out
test
or
cld
inc
movsl
mov
inc
xor
shrl
add
xchg
test
les
or
sarl
adc
fsubs
adc
cwtl
or
lcall
cltd
sbb
pop
pop
mulb
sahf
andb
mov
inc
sbb
in
bound
mov
loope
int3
or
test
leave
xchg
call
ja
cmc
cwtl
adc
aaa
adc
xor
lds
jno
das
outsl
and
insb
in
sets
mov
popl
inc
or
das
pop
push
int3
mov
pop
xchg
pop
push
sbb
mov
orl
addr16
call
mov
mov
and
sbb
clts
adc
inc
mov
ret
or
xchg
into
lods
leave
test
xchg
fists
inc
dec
sbb
aam
sbb
and
and
lods
lods
into
add
test
orl
imul
sub
cmp
xchg
out
addl
les
sbb
sahf
xchg
mov
mov
pop
cmp
xlat
mov
subb
push
sbb
aad
andb
out
subb
xor
push
ja
pop
jbe
loopne
jb
jmp
stos
hlt
mov
sub
sbb
nop
ret
out
dec
mov
xchg
cltd
sbb
shlb
xchg
add
mov
in
jg
pop
sub
enter
movsl
add
mov
jo
adcl
mov
xchg
jmp
xchg
stos
movl
in
fwait
mov
adc
mov
subl
test
pop
push
lea
popa
mov
mov
movsb
or
popf
dec
push
rcll
mov
mov
jo
push
adc
das
push
addr16
xor
int3
jmp
add
or
inc
into
sub
mov
and
xchg
fbld
movsb
imul
mov
pop
repnz
dec
cmpb
mov
hlt
xchg
adc
sbb
cli
inc
sub
push
pop
push
sub
roll
sbb
dec
push
cmp
jo
push
cmpsl
nop
push
xor
daa
dec
cltd
loopne
call
xchg
lea
movntps
adc
mov
subb
data16
int3
aaa
mov
xor
ds
mov
into
cmp
or
push
xchg
mov
dec
popa
mov
addb
arpl
adc
cltd
jg
mov
pop
stos
mov
mov
lcall
ljmp
add
fildl
lahf
push
addl
push
pushf
adc
sahf
inc
ret
pop
jecxz
or
fs
ret
xchg
cs
mov
push
test
mov
xchg
fcoml
sbb
push
mov
addr16
rcrl
mov
add
addr16
pop
pop
movsl
adc
push
sbb
adc
mov
push
dec
addr16
andl
rorl
mov
or
xchg
les
mov
test
mov
inc
les
add
in
xchg
das
popf
mov
adc
out
or
mov
add
mov
jno
mov
mov
ret
rorl
or
and
mov
movsl
les
pop
add
mov
or
add
mov
mov
les
mov
mov
ret
mov
or
add
les
mov
mov
ret
movsb
mov
mov
les
add
sub
mov
mov
les
test
xor
les
add
mov
mov
les
xchg
add
mov
mov
out
gs
mov
ret
jmp
les
insb
xchg
lock
mov
out
jae
mov
ret
testl
mov
ret
decb
or
popa
mov
ret
scas
in
dec
cmpsl
mov
bound
or
scas
add
mov
or
xor
sub
mov
ret
imul
mov
ret
ljmp
or
loope
dec
dec
mov
ret
mov
or
lret
mov
ret
imul
sub
movb
pusha
in
nop
sahf
sbb
xchg
adc
orb
cmp
sbb
sbb
push
movsl
sbb
cmpsb
cmp
sub
rolb
sbb
mov
xchg
adc
add
mov
or
ret
loopne
mov
jns
adc
mov
sahf
repz
and
pop
or
orl
sub
and
and
cltd
push
add
sarb
mov
xchg
mov
rclb
adc
repz
xor
add
movhps
pshufw
mov
mov
add
loope
and
mov
add
inc
addl
jmp
lock
pop
enter
pop
nop
mov
add
lock
mov
icebp
sub
je
fwait
or
add
pop
add
in
sbb
sub
inc
push
in
adc
adc
or
cltd
fmull
xchg
sbbb
mov
mov
lea
inc
stos
rclb
xchg
test
nop
leave
pop
or
sbb
adc
pop
fwait
call
cltd
fdivrl
xchg
imul
adc
in
add
cmpl
xor
mov
add
mov
mov
adc
loop
sbb
addl
adc
sbb
repnz
add
fstps
xchg
cld
test
push
les
mov
mov
mov
push
pop
adc
pusha
loop
out
mov
cwtl
mov
pop
and
push
push
mov
movsb
cmpsl
and
sub
stos
mov
cltd
lods
sbb
into
mov
xor
mov
push
aaa
cltd
mov
cmpsl
cmp
and
mov
movsl
into
cmpsl
test
pop
cmpsl
stos
add
push
mov
xor
into
xor
push
push
pop
cltd
ficomps
scas
rorl
push
push
cwtd
call
cmpsl
insb
add
push
push
jb
hlt
sbb
into
mull
push
jle
loopne
int3
add
push
mov
or
push
push
xchg
cltd
push
sbb
into
mov
push
push
and
cmpsl
movsl
add
push
push
stos
cltd
sub
scas
into
das
cmpsl
mov
xor
mov
xor
sbb
into
cmp
pop
stos
adc
in
mov
cltd
cmpsb
sbb
into
test
push
push
xor
mov
add
mov
sbb
scas
mov
push
cmpsl
cltd
sub
into
sub
push
mov
xor
mov
aaa
cmpsl
mov
mov
sbb
ljmp
push
push
sub
scas
cmpsl
das
add
mov
mov
push
push
lcall
mov
cltd
jg
loope
add
mov
into
inc
cmpsl
mov
stos
cmpsl
sub
lods
push
push
xor
mov
aaa
add
mov
add
add
jae
or
in
mov
cltd
jmp
mov
cltd
dec
sbb
mov
sbb
into
mov
cmp
sbb
cld
into
jge
incl
pusha
dec
dec
inc
push
push
enter
sub
stos
mov
cltd
scas
sbb
mov
cltd
adc
into
adc
sbb
into
jns
sti
add
in
xchg
loope
sbb
in
gs
push
push
imul
cmpsl
jno
pop
add
into
push
cmpsl
add
push
popf
cltd
pop
xor
xchg
in
jno
xchg
movb
push
jg
mov
scas
adc
xchg
mov
adc
jno
nop
mov
pop
xchg
or
push
cmp
pushf
mov
mov
lcall
leave
add
xchg
add
addb
mov
pop
pop
in
out
xor
or
mov
sahf
arpl
or
push
pushf
loope
loop
cmp
adcl
or
mov
sbbl
add
push
pop
adc
mov
cli
add
mov
push
mov
add
add
mov
adc
shlb
movsb
push
sbb
outsl
and
add
or
xchg
mov
in
xchg
scas
or
add
xchg
sbb
leave
xchg
filds
scas
add
loope
mov
ljmp
adcb
mov
es
test
mov
sub
mov
cmpsl
adc
icebp
lcall
xchg
leave
mov
daa
xchg
jo
cmc
xor
fldl
insl
in
inc
sbbb
lods
mov
sarb
movsl
xor
lcall
cs
xor
xorb
mov
dec
enter
cmc
jecxz
pop
in
iret
sbb
adc
jg
cmpsb
adc
xchg
pop
clc
into
jmp
es
imul
ja
sbb
push
mov
inc
mov
adc
mov
ljmp
cmp
adc
or
jo
sbb
lahf
pop
sahf
subb
xlat
mov
jg
cmp
xchg
lcall
leave
inc
nop
add
cmpb
pop
sbb
or
addl
loopne
mov
pushf
add
cmpsb
sbb
cltd
pop
insb
sarb
hlt
jge
pop
pop
push
jle
lock
push
and
push
xchg
cmp
addb
ret
jb
fadd
pop
cmc
lahf
inc
loope
and
cltd
sub
int
outsb
dec
inc
dec
xchg
mov
push
test
dec
add
sahf
fsubl
cs
or
pop
iret
out
mov
sbb
add
pop
repz
jo
and
out
cmp
mov
cmpb
repnz
jmp
jno
fwait
lcall
inc
add
stos
xorb
jo
pop
call
fisubl
popf
or
xlat
mov
movsb
mov
testl
push
ds
mov
pop
cmp
pop
sub
mov
cli
mov
icebp
test
cmpb
mov
cwtl
popa
ja
sub
add
inc
xor
outsl
inc
andb
add
mov
xchg
adc
test
xorb
call
jmp
loopne
inc
ret
cmc
and
mov
inc
jl
out
mov
xchg
icebp
xor
push
pusha
pop
dec
mov
cmp
lret
add
mov
orb
add
out
hlt
xor
test
data16
or
andl
les
daa
mov
repnz
hlt
inc
out
sbb
pop
and
mov
or
arpl
push
mov
pushf
int
inc
inc
cmc
dec
movsl
incl
popa
mov
leave
mov
jb
imul
mov
notb
mov
xor
int
ljmp
dec
mov
popaw
jecxz
pusha
sti
mov
sbb
lcall
fistps
aas
and
xchg
orb
inc
cmpsb
mov
pop
subb
jno
mov
adc
push
pop
mov
lret
movsl
lret
int3
mov
cwtl
pop
insl
test
dec
add
jecxz
scas
xchg
mov
or
pop
cmp
test
imul
and
mov
cmpsl
sbb
sbb
mov
and
and
push
insl
or
clc
ret
or
or
jge
andb
pusha
mov
xchg
jno
inc
xorb
adc
sbb
rol
call
mov
pop
xor
inc
and
xchg
xor
pushf
xchg
dec
cmpb
mov
addr16
shl
cmpb
in
cmpsb
mov
push
dec
pop
test
stc
xor
mov
pop
int3
nop
mov
pop
movsl
jno
mov
or
mov
mov
roll
adcb
dec
or
push
test
add
imull
adc
jmp
and
insb
jl
xor
addb
out
addb
out
stos
sahf
pushf
shl
pop
test
pop
sub
mov
mov
inc
or
aas
movsb
jae
outsb
jle
jl
cmc
ret
ss
dec
sbb
loop
daa
jns
insw
dec
xor
sub
bound
test
jl
sbb
lds
xchg
xchg
pushf
pusha
inc
hlt
rcrl
aaa
nop
or
insl
push
loopne
fldt
xchg
dec
inc
push
jo
andl
inc
lcall
clc
idivb
xchg
pusha
popf
inc
push
cmc
jo
or
xor
xchg
and
xchg
gs
shrb
arpl
mov
lock
or
rolb
repz
add
nop
dec
or
clc
sub
loop
psrlw
mov
pop
pop
sbb
cmpsl
pop
cmp
sub
aaa
insl
push
ja
insb
xor
xor
fidivrs
cltd
lods
adc
jbe
cmp
fdivl
cmp
push
inc
mov
imul
push
add
mov
add
pushw
cmc
push
cmp
outsl
mov
loop
mov
into
sbb
jg
movsl
inc
or
faddl
mov
lcall
cltd
xstore-rng
cmpsl
add
outsl
sbb
cmc
int3
cwtl
imulb
add
shll
mov
faddl
nop
into
push
nop
test
enter
add
sbb
xchg
or
xorb
clc
push
sbb
and
mov
and
out
adc
loopne
adc
std
xchg
out
sbb
test
pop
test
add
xchg
cwtl
daa
jno
movsb
loopne
sar
push
ss
adc
in
imul
out
mov
rcrb
jb
sbb
cmp
out
fisttpl
dec
ljmp
nop
mov
aas
in
xorb
dec
idivb
xchg
hlt
push
or
or
mov
mov
subb
and
int3
adc
lret
out
or
orb
arpl
xchg
scas
and
cs
sbb
arpl
call
mov
inc
jno
popf
lahf
add
cmp
cmpsl
mov
aas
or
enter
mov
js
xchg
es
xor
fiaddl
jge
add
arpl
sbb
movsl
mov
les
call
inc
adcl
jbe
sbb
pop
xorb
sbb
incb
insb
pop
xor
mov
xor
fldl
lock
cmc
cmp
cmp
mov
push
mov
loopne
sbb
inc
call
addb
std
jecxz
lods
lret
clc
mov
nop
inc
pop
mov
mov
js
mov
mov
xor
jb
cltd
lock
add
adc
inc
mov
mov
mov
jno
je
add
cwtl
sbbl
mov
gs
dec
arpl
ja
div
jp
jbe
ja
jl
cmp
adcl
jns
jl
out
xorb
rcl
mov
dec
clc
jge
mov
xchg
stos
push
stos
test
jb
xlat
fistpl
sbb
in
int3
dec
mov
sarl
test
inc
loopne
arpl
out
jecxz
adcb
and
sbb
sbb
pop
and
icebp
and
add
lods
sub
xor
dec
or
inc
loopne
add
nop
dec
stos
ds
neg
jbe
mov
mov
bound
or
fxch
in
cltd
mov
pop
lea
js
xchg
xchg
pushf
inc
addr16
andb
sbb
andb
call
sbb
int3
into
and
inc
sub
inc
push
mov
pop
dec
xorb
xorb
and
mov
iret
dec
insl
push
jecxz
xchg
push
xchg
pop
addb
xchg
imul
shrl
pop
test
xor
js
cmp
pop
add
cli
popa
ljmp
xor
fidivl
in
cmc
sbbb
mov
lcall
pop
mov
jne
mov
adc
inc
jp
cmp
mov
sti
ljmp
mov
add
push
xchg
mov
sub
lahf
rcrb
adc
cmpsb
jp
mov
sbbb
adc
cmp
and
popa
inc
orl
lods
dec
orb
pusha
divl
pushf
arpl
push
and
xchg
mov
lods
push
xchg
test
fnstenv
cld
xchg
negl
pop
push
orb
stos
cmp
es
addr16
or
cmpsb
ss
mov
mov
xchg
and
xchg
cmp
repnz
imul
push
loop
stos
and
adc
call
test
pop
jl
cmpsb
nop
popf
lods
xorb
push
cmpb
mov
adc
mov
iret
fcom
jns
rcrb
push
loope
xchg
lock
jmp
mov
dec
cmpb
dec
jle
add
rolb
loop
pop
xor
xchg
mov
cmp
push
stos
xchg
inc
mov
add
mov
or
inc
and
nop
or
inc
ret
subb
mov
push
cmp
xchg
push
sub
push
push
pop
sbb
pusha
out
push
mov
ss
es
sub
adc
xchg
adc
push
cmp
xchg
jecxz
out
pushf
pop
aad
pop
cmp
or
xchg
inc
dec
inc
addb
dec
dec
sbb
addb
fistps
sbbb
sbb
xchg
scas
jp
push
iret
jo
orb
mov
lds
fidivrs
sarl
cltd
scas
mov
adcb
dec
sbb
cmc
jbe
pushf
push
jne
loop
fnstcw
in
mov
or
les
dec
add
pop
jl
mov
aas
je
sbb
popa
out
repz
xchg
mov
mov
push
adc
mov
mov
pop
mov
cmc
mov
sbb
into
addb
xor
aas
dec
pop
adcb
sarl
push
lret
adc
insb
sub
mov
cmc
and
dec
cltd
divl
cmpsb
movsl
loopne
inc
dec
loopne
lcall
sbb
add
cld
jae
dec
cmp
inc
add
stc
ret
cmpb
ret
mov
jo
pop
sbb
test
mov
fisttps
rclb
pop
mov
mov
fs
mov
aaa
add
in
movzwl
repz
jge
xor
or
cwtl
ret
loop
loopne
push
rorl
cmp
jmp
scas
movb
cmp
aad
sahf
sbbb
gs
cmpb
pop
lret
inc
loopne
xchg
jns
cmp
sub
inc
xchg
out
xchg
lock
nop
mov
out
xchg
andb
cmp
mov
lret
lods
inc
push
pop
andb
xchg
loop
cmpb
gs
and
dec
xlat
inc
repz
fs
xor
jbe
sbb
aad
out
cmp
imull
or
pusha
sar
mov
inc
pushf
lcall
icebp
popa
sbb
and
and
mov
lock
mov
and
push
or
sahf
and
pop
in
loopne
shlb
adc
pop
sahf
pop
jnp
daa
adc
stos
jae
in
dec
jb
subb
add
arpl
cli
fildl
push
cmp
or
xor
mov
mov
popf
and
adc
mov
mov
nop
jno
push
imul
pop
jns
pusha
cmp
mov
aas
and
xchg
mov
cwtl
in
add
mov
int3
xchg
rolb
lods
aas
subb
jmp
loopne
push
jle
adc
pop
ret
mov
pop
fwait
push
incb
lcall
into
enter
xchg
and
mov
mov
inc
call
sbb
fs
jbe
setl
add
mov
cmc
and
jmp
stc
cmc
clc
xor
jmp
add
aas
aas
xor
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
push
inc
inc
inc
pop
add
int3
add
das
nop
mov
out
ret
fwait
or
cmc
pop
push
adc
je
xchg
sahf
and
cmpsb
sub
icebp
sahf
stos
scas
das
lcall
push
mov
push
jnp
scas
into
mov
mov
push
push
or
cmp
imull
lret
push
mov
cld
xchg
lcall
in
call
jle
mov
cld
cmc
mov
stc
pushf
pusha
mov
cmp
or
push
pushf
mov
lea
je
shrd
add
mov
sets
adc
dec
neg
mov
bt
clc
bt
xor
pusha
shr
test
jmp
call
lea
jne
pushf
inc
push
mov
pushf
pushl
inc
jmp
test
push
pushf
repnz
pusha
lea
jne
not
lea
pushf
pusha
movb
movsbl
jmp
and
mov
test
test
cmpb
push
push
lea
jne
jmp
add
push
imul
jb
je
arpl
stos
sub
xchg
mov
imul
sub
mov
test
push
xchg
ret
sub
push
ljmp
stos
add
fyl2xp1
add
cmp
enter
jb
fwait
pop
in
dec
cmp
fiaddl
xor
pop
int
loopne
incl
or
push
mov
in
xchg
lcall
je
inc
call
inc
pop
outsb
push
mov
push
xchg
call
shr
btc
mov
sete
add
rcr
inc
movb
rcl
add
add
ror
rcl
rcr
mov
call
sub
insb
xchg
or
ljmp
shll
rorl
push
mov
out
jmp
mov
or
cmc
sbb
inc
push
gs
ss
dec
mov
mov
push
or
mov
push
lds
lret
test
or
sahf
add
mov
popa
mov
orl
fmuls
dec
xchg
lcall
int3
decl
aam
lea
push
jmp
add
inc
gs
jb
jbe
je
push
jb
imul
imul
jne
inc
call
cmp
mov
pushf
popl
clc
cmp
jmp
add
inc
js
je
jb
arpl
jae
call
push
call
popa
je
dec
pushf
call
call
cmc
clc
add
pushf
clc
test
add
lea
jp
pushf
dec
call
pop
dec
push
xor
sbb
aam
int
fadds
aas
pop
inc
sarl
push
sub
dec
icebp
insb
jmp
mov
scas
xchg
lcall
fs
je
call
mov
movb
jmp
push
call
jo
call
mov
call
add
insl
gs
arpl
add
xor
xor
fs
insb
add
test
call
push
call
aas
testb
stos
add
lea
ja
cmc
sub
stc
sub
cmp
add
neg
mov
push
mov
pusha
movb
stc
clc
repnz
movl
mov
jmp
push
call
addr16
iret
loopne
mov
or
cld
sub
mov
fldt
incl
add
gs
imul
push
rep
lea
not
mov
mov
pushl
lea
jmp
stos
mov
cmp
lock
and
clc
gs
xor
sahf
hlt
xchg
add
in
lsl
xor
scas
inc
enter
outsb
icebp
cmpsb
jo
imul
mov
fucomi
xchg
incb
sub
cs
lcall
xchg
out
mov
pop
push
mov
pop
stos
inc
lods
pop
and
pop
out
xor
inc
jl
and
push
add
movsb
mov
repnz
enter
add
sub
lods
loop
push
scas
add
inc
enter
mov
lret
xor
xchg
lcall
jb
decl
mov
sar
push
aaa
test
sbb
xchg
push
setne
push
push
daa
bswap
mov
not
test
push
btc
jmp
test
cmc
mov
mov
sub
bsr
jmp
push
shl
lea
jb
je
call
push
call
adc
adc
add
pushf
push
lea
call
call
add
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
xlat
pushl
mov
call
add
inc
jb
popa
je
push
push
add
cmp
sub
push
call
push
call
adc
int3
movzbl
movzbl
movl
movsbw
lea
mov
pusha
movl
movw
jmp
lea
bswap
mov
pushf
push
movb
mov
lea
jmp
lret
jno
dec
adc
or
jmp
movl
addr16
aaa
lods
js
pop
out
add
ds
dec
inc
jl
jp
outsb
pop
add
int3
dec
mov
fdivl
push
fdivrl
xchg
sbb
or
cltd
push
add
mov
inc
test
sbb
mov
lcall
aas
aas
xor
and
popa
jae
arpl
data16
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
add
aas
xor
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
push
inc
inc
inc
pop
add
test
jbe
ljmp
xor
sar
mov
ror
clc
sub
add
shl
rcr
jmp
push
call
xchg
repnz
mov
add
pushf
movl
pushf
pushl
ret
call
pushf
popl
jmp
call
lea
mov
lea
movsbw
xadd
pop
jmp
mov
push
pushf
lea
jmp
mov
push
lea
jmp
pushf
pushf
mov
mov
pushf
call
mov
lea
jb
push
pusha
pushf
mov
push
jmp
jmp
pushl
mov
jmp
pushf
popl
call
stc
push
rcl
mov
cmc
add
movw
lea
jmp
movb
call
jmp
jmp
pushf
call
pushf
mov
shrd
xadd
shl
mov
xor
ror
rcl
mov
clc
pushl
bt
pushf
add
cmp
bt
pusha
shld
push
call
mov
call
rep
rol
std
mov
rcl
mov
push
clc
pushl
popf
mov
movb
mov
movw
lea
jmp
mov
pushf
mov
pushf
jmp
mov
push
push
mov
call
mov
call
jmp
call
pushf
mov
call
mov
mov
pushl
mov
pushf
jmp
pusha
mov
mov
pushf
lea
jmp
mov
pusha
mov
push
movb
pushf
lea
jmp
pushl
popl
jmp
and
mov
pusha
adc
sbb
mov
test
add
call
mov
pushf
mov
pushf
push
lea
je
push
call
pushf
push
jmp
mov
jmp
shrd
bswap
xor
and
bsr
pushl
stc
add
rol
stc
add
cmc
movzbl
sub
shld
cmp
or
mov
mov
cmp
sub
sub
jge
not
jmp
movl
add
jmp
mov
push
mov
movw
pushl
lea
jmp
jmp
mov
pushl
jmp
jmp
pushf
mov
mov
call
pop
aad
movzbw
popf
bswap
pop
lea
pusha
pushf
mov
push
not
lea
push
mov
call
mov
pusha
mov
pushf
mov
pushf
mov
jmp
jmp
pushl
popl
movw
movw
movl
pushl
lea
jmp
mov
call
pushf
lea
cpuid
bt
cmp
stc
sub
jmp
bswap
shr
call
jmp
pushl
pushl
popl
pushf
lea
jmp
shl
push
pushf
pusha
push
mov
pushf
pushf
call
call
pushl
popl
pusha
push
pushl
mov
lea
jmp
jmp
mov
pushf
push
lea
jmp
pusha
pusha
push
movb
mov
jmp
mov
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
stc
shl
shl
cmp
movzbl
bt
bt
pushf
cmp
xor
movb
pushf
pusha
call
pushl
mov
pushf
pushf
popl
call
mov
pushl
popl
call
setp
mov
pushf
xor
jmp
jmp
mov
mov
pushl
pushf
pushl
lea
jmp
mov
movl
mov
movb
mov
mov
lea
jmp
add
test
xor
cmp
stc
cmc
add
ja
sub
pushf
pushl
mov
pushf
push
push
mov
lea
jmp
bswap
mov
pusha
not
mov
pusha
pushf
popl
lea
not
mov
movw
mov
bswap
jmp
sub
pushf
call
movb
pushf
mov
jmp
pushf
popl
call
add
pushf
mov
pushf
mov
pushf
movw
mov
lea
jmp
mov
jmp
mov
movb
pushf
jmp
push
pusha
pushf
mov
movb
mov
push
mov
pusha
mov
mov
movb
movb
call
mov
call
pushf
popl
push
pushl
popl
pushf
pushl
jmp
pushf
popl
mov
movb
movw
pushl
popl
movw
lea
jmp
pushl
mov
push
pushf
lea
jmp
movl
push
movw
pushl
lea
jmp
movw
mov
movb
call
movl
pushf
mov
pusha
mov
pushf
lea
jmp
push
mov
call
movw
mov
mov
jmp
mov
movb
pushf
jmp
push
mov
pusha
mov
pushf
jmp
push
mov
push
pushf
pushl
lea
jmp
sub
cmp
pushf
shl
push
mov
jmp
setge
mov
pusha
bswap
lea
mov
movsbw
push
pushf
popl
lea
setl
pushf
dec
pushl
popl
bsf
call
aas
rol
shl
mov
call
pushf
popl
call
mov
pushf
call
movw
push
movw
mov
movw
movb
push
call
movl
mov
movb
movb
lea
jmp
mov
mov
mov
pushf
mov
mov
movb
lea
jmp
pushl
pusha
inc
jmp
dec
cmc
mov
setnp
inc
shl
mov
cmc
push
mov
call
movw
pushf
mov
call
pusha
jmp
or
rcr
mov
shl
shl
adc
mov
push
jmp
pushl
pushl
popl
call
cmp
pusha
jmp
jmp
pushl
mov
jmp
xor
mov
call
mov
pushf
pushl
mov
mov
mov
mov
call
lahf
movsbw
mov
call
mov
mov
pushf
lea
jg
push
mov
pusha
lea
jmp
push
pusha
push
pushf
popl
call
pushl
popl
jmp
pushf
ror
pushl
stc
add
jmp
mov
pushf
mov
push
mov
mov
call
call
xor
test
rcl
mov
stc
push
add
push
call
pushf
mov
mov
pusha
mov
call
movl
call
sub
bt
pushf
shr
lea
jb
push
pusha
mov
movw
pushf
pushf
pushf
pushf
popl
pushl
pushf
pushl
popl
push
pushl
lea
jmp
pushf
jmp
mov
mov
push
pushf
popl
movb
movb
pushl
pushl
popl
mov
lea
jmp
pusha
mov
call
call
mov
pushl
mov
push
pushf
pushf
popl
call
call
call
daa
bsr
cltd
mov
clc
mov
jmp
lea
ja
xor
test
sub
jmp
and
mov
call
mov
pusha
pushf
mov
push
divl
pushf
pushl
mov
call
mov
pushf
lea
jmp
rep
shr
xadd
and
xadd
mov
shrd
mov
movw
call
push
push
pushl
mov
pusha
jmp
push
pusha
mov
mov
jmp
pushf
pushl
popl
mov
pushl
mov
lea
jmp
stc
add
jno
pusha
push
pusha
mov
pushf
lea
jmp
pushf
popl
call
setb
lea
mov
pushf
mov
pushf
pushf
bswap
pusha
xchg
setg
jmp
cmp
pushf
clc
xor
jmp
pusha
add
pushf
mov
pusha
pushf
pushf
pushf
lea
jmp
jmp
mov
pushl
mov
mov
push
mov
pushl
pushl
jmp
clc
cmc
sub
jmp
mov
pushl
popl
jmp
jmp
call
push
movl
pushf
popl
pusha
movb
jmp
and
movzbl
mov
stc
cmp
cmc
bt
sub
call
cmp
call
rol
and
setns
mov
call
cwtl
push
clc
sub
pushl
mov
pushf
lea
jmp
pusha
jmp
pushf
popl
movl
pushl
popl
pusha
lea
jmp
lea
jg
pushf
push
jmp
call
pushl
mov
pushf
movw
lea
jmp
call
pushf
popl
jmp
mov
pusha
lea
jmp
movl
pushf
lea
jmp
add
std
pushl
popf
pushf
push
pushf
lea
jmp
jmp
jmp
bswap
mov
test
cmc
add
pushf
jmp
pop
lahf
mov
pushf
pusha
push
mov
call
call
add
add
mov
pushf
mov
jmp
jmp
pushf
movb
pusha
movl
push
mov
movb
push
lea
jmp
push
pusha
cmp
xor
test
clc
test
pushf
sub
call
mov
pushl
popl
mov
pushf
push
lea
jmp
jmp
cmc
call
xchg
stc
add
sub
jle
clc
xor
push
push
jmp
jmp
jmp
call
mov
movw
mov
push
jmp
mov
movb
push
movb
lea
jmp
ror
jmp
jmp
jmp
movb
mov
lea
jbe
push
call
pushf
popl
pushf
pushl
popl
jmp
mov
pushf
popl
mov
pushf
pushl
popl
pushf
lea
jmp
push
movl
movw
pushf
mov
lea
jmp
pusha
pushf
call
mov
movsbl
lea
mov
movl
xchg
lea
not
mov
push
mov
call
pushl
popl
movw
lea
jmp
pushf
pushl
popl
mov
movb
lea
jmp
mov
mov
call
mov
bswap
mov
movsbw
mov
pushl
pushl
ret
pushf
call
bt
cmc
mov
test
bt
sub
call
pushf
pushf
pushf
mov
pushf
jmp
pushl
pushf
mov
jmp
mov
pushf
push
pushf
lea
jmp
mov
call
shl
mov
adc
rol
shl
mov
jmp
pushf
call
pusha
cmc
bt
and
lea
jnp
push
mov
pusha
mov
movb
pushl
pushf
popl
pusha
movb
call
jmp
jnp
mov
mov
movzbw
pushf
not
push
std
lea
mov
lea
mov
lea
lea
pushf
mov
pushf
cld
xchg
mov
movsbw
bswap
mov
call
bt
cmp
jmp
mov
jmp
xor
cmc
pusha
sub
movb
jmp
mov
call
test
sub
pushf
mov
push
lea
jmp
mov
pushf
mov
mov
jmp
pushf
popl
push
jmp
jmp
pusha
movb
pushl
mov
pushl
lea
jmp
pusha
mov
push
pushf
mov
jmp
push
call
pushf
call
stc
push
stc
sub
jmp
mov
pushf
pusha
lea
jmp
jmp
lea
cpuid
pusha
sub
pusha
push
jmp
mov
call
pushf
mov
pushf
push
lea
jmp
cmc
bswap
bt
clc
xor
clc
rol
push
stc
mov
sub
jge
sub
stc
push
pushl
rol
pusha
jmp
aaa
sbb
out
fdivrp
stc
out
fdivrp
stc
out
icebp
or
out
popa
and
out
push
add
out
lret
out
mov
cli
out
xor
cli
out
sub
cli
out
or
out
test
cli
out
roll
out
sub
stc
out
xchg
add
cli
out
sub
stc
out
decb
cli
out
and
cli
out
lret
out
or
cli
out
outsb
pop
cli
out
or
cli
out
ja
cli
out
or
cli
out
std
push
cli
out
popa
and
out
mov
cli
out
in
cli
out
popa
and
out
and
cli
out
xchg
sbb
out
push
add
out
mov
cli
out
lret
out
decb
cli
out
outsl
sbb
out
stos
pop
cli
out
or
out
std
pop
cli
out
movsb
sbb
out
popa
and
out
lret
out
call
sbb
out
mov
cli
out
lret
out
push
add
out
or
cli
out
sbb
cli
out
jne
cli
out
push
add
cli
out
stos
pop
cli
out
lret
out
decb
cli
out
or
cli
out
sub
stc
out
aad
cli
out
mov
cli
out
inc
add
out
sbb
cli
out
popa
and
out
pop
push
cli
out
roll
out
mov
cli
out
or
out
mov
cli
out
inc
add
out
mov
cli
out
addr16
out
mov
cli
out
xor
cli
out
mov
cli
out
adc
cli
out
mov
cli
out
in
cli
out
mov
cli
out
test
cli
out
mov
cli
out
jne
cli
out
mov
cli
out
pop
push
cli
out
mov
cli
out
push
add
cli
out
popa
and
out
mov
cli
out
lret
out
sbb
cli
out
push
add
out
mov
cli
out
aaa
sbb
out
mov
cli
out
stos
push
cli
out
mov
cli
out
xchg
sbb
out
std
push
cli
out
aaa
sbb
out
std
push
cli
out
aaa
sbb
out
std
push
cli
out
icebp
or
out
std
push
cli
out
test
cli
out
std
push
cli
out
outsb
pop
cli
out
std
push
cli
out
call
push
cli
out
fstl
cli
out
std
push
cli
out
stos
push
cli
out
std
push
cli
out
aaa
sbb
out
std
push
cli
out
ja
cli
out
std
push
cli
out
popa
and
out
std
push
cli
out
call
or
cli
out
std
push
cli
out
outsl
sbb
out
std
push
cli
out
sub
cli
out
std
push
cli
out
sub
cli
out
fstl
cli
out
or
cli
out
aaa
sbb
out
fstl
cli
out
outsl
sbb
out
aaa
sbb
out
testl
cli
out
mov
cli
out
mov
cli
out
and
cli
out
or
cli
out
stc
add
out
dec
stc
out
dec
stc
out
jecxz
cli
out
adc
cli
out
test
cli
out
sub
cli
out
std
pop
cli
out
dec
stc
out
dec
stc
out
roll
out
outsb
pop
cli
out
popa
and
out
testl
stc
out
dec
stc
out
std
pop
cli
out
test
cli
out
aad
cli
out
stos
pop
cli
out
inc
add
out
lret
or
cli
out
mov
cli
out
lret
or
cli
out
movsb
sbb
out
sub
cli
out
push
add
cli
out
addr16
out
decb
cli
out
stos
push
cli
out
testl
stc
out
movsb
sbb
out
jne
cli
out
mov
cli
out
std
pop
cli
out
push
add
out
outsl
sbb
out
jecxz
cli
out
popa
and
out
sbb
cli
out
in
cli
out
or
out
or
cli
out
testl
cli
out
dec
stc
out
decb
cli
out
fstl
cli
out
decb
cli
out
ja
cli
out
jecxz
cli
out
lret
out
stc
add
out
push
add
cli
out
test
cli
out
stc
add
out
aad
cli
out
or
out
mov
cli
out
xchg
add
cli
out
stc
add
out
pop
push
cli
out
std
pop
cli
out
jne
cli
out
fdivrp
stc
out
sub
stc
out
std
pop
cli
out
push
push
cli
out
push
push
cli
out
testl
cli
out
mov
cli
out
adc
cli
out
stos
pop
cli
out
sub
cli
out
push
add
out
outsb
pop
cli
out
mov
cli
out
dec
stc
out
or
out
sub
stc
out
fstl
cli
out
aad
cli
out
inc
add
out
adc
cli
out
roll
out
xor
cli
out
jecxz
cli
out
pop
push
cli
out
xchg
add
cli
out
pop
push
cli
out
mov
cli
out
icebp
or
out
decb
cli
out
outsb
pop
cli
out
or
out
movsb
sbb
out
aad
cli
out
outsb
pop
cli
out
sub
stc
out
sub
stc
out
xchg
add
cli
out
push
add
cli
out
fstl
cli
out
outsb
pop
cli
out
jnp
push
pusha
mov
mov
push
call
lahf
setno
mov
xchg
xchg
movzbw
mov
not
xchg
pop
lea
mov
pop
call
and
shld
setno
mov
and
mov
pusha
pusha
cmp
add
call
clc
sub
pusha
stc
cmp
add
pushf
pushf
popl
push
call
push
mov
pushf
pusha
push
mov
lea
jmp
xadd
mov
rcl
sub
shl
bswap
sar
xor
movsbw
add
test
call
movzbw
mov
push
movsbw
lea
pop
mov
pushf
mov
movw
movb
lea
jmp
bsr
mov
lea
js
cmc
clc
sub
pusha
jmp
pusha
jmp
push
push
shrd
pushl
jmp
jmp
movsbw
inc
mov
mov
sbb
add
call
push
rcl
clc
rol
movsbw
pushl
xor
not
bsf
inc
rcr
mov
and
bsr
mov
jmp
seta
movzbl
mov
js
mov
call
movw
pushf
movl
pushf
lea
jmp
movb
movl
push
pusha
lea
jmp
movsbl
movl
lea
movzbw
movsbl
movsbw
dec
mov
dec
movzbw
lea
bswap
dec
sar
not
dec
xor
clc
xchg
xor
mov
bt
test
sub
test
lea
mov
bsr
mov
dec
rol
neg
add
call
mov
call
pushl
popl
pushf
lea
jmp
pusha
mov
movw
push
jmp
jmp
lea
jne
pushf
mov
pushf
pushf
pushl
lea
jmp
call
bt
sub
mov
xor
cmc
movb
jmp
cmp
bt
xor
movw
pushf
cbtw
pushf
dec
clc
jmp
stc
shr
push
jmp
push
push
pushl
popl
pushf
jmp
jmp
push
jmp
mov
mov
pushf
popl
jmp
movb
movb
jmp
jmp
shl
neg
add
mov
pushf
call
push
pushf
call
jmp
pushl
popl
pushl
movb
pushf
push
lea
jmp
call
pushl
call
jmp
mov
pushf
push
movb
lea
jmp
shl
mov
sar
movsbw
lea
mov
test
shl
shr
push
mov
bt
add
call
pushf
pushf
jmp
pusha
pusha
jmp
mov
mov
movzbw
not
not
mov
lea
mov
pusha
lea
jmp
push
mov
pushf
pushf
popl
pusha
jmp
pushf
push
mov
pushf
popl
push
pushl
popl
pushl
pushl
pushf
jmp
movzbw
pushf
rcr
mov
pushf
add
mov
pushf
popl
pusha
push
call
push
jmp
mov
call
sub
jmp
pushf
mov
mov
pusha
jmp
lea
jg
mov
pusha
lea
jmp
pushl
popl
jmp
call
push
movl
pushf
push
pushf
pushf
lea
jmp
pusha
jmp
pushf
popl
push
pushl
popl
movb
pusha
lea
jmp
lea
mov
movzbw
lea
bswap
mov
movzbw
lea
bswap
mov
movb
movb
lea
jmp
pushf
movzbl
test
call
pushf
popl
jmp
pushf
mov
clc
clc
clc
sub
cmc
cmc
add
pusha
jmp
push
jne
pusha
mov
call
call
add
bsr
call
pushf
popl
pushl
pushl
popl
pushf
jmp
call
jmp
pushf
mov
pusha
call
movb
mov
pushl
pusha
lea
jns
push
jmp
mov
push
pushl
mov
pushl
movb
push
mov
pushf
movb
mov
pushf
push
mov
call
cmc
xchg
cmc
pusha
pushf
test
add
pushl
xor
pushf
inc
pushl
push
pushf
stc
ror
test
cmp
add
cmp
cwtl
stc
lea
bt
jmp
bsf
bsr
rol
neg
rdtsc
pushf
clc
pushf
jmp
sbb
mov
jmp
mov
push
pusha
push
lea
jmp
stc
pusha
sub
lea
jno
cmp
shr
call
or
not
cmc
btr
cmp
pusha
sub
bswap
dec
sar
mov
pushf
pushf
add
push
mov
movb
push
mov
mov
push
pushf
lea
jmp
call
pusha
inc
pushl
bt
mov
bt
ror
pushf
bt
clc
add
cmc
pushf
test
sub
push
mov
lea
movb
jmp
mov
movb
call
movb
push
call
add
test
not
pusha
cmp
sub
call
mov
pushf
mov
jmp
jmp
call
dec
pushl
xor
clc
movl
push
mov
ror
call
cmp
pusha
cmc
stc
xor
jmp
movl
pushf
push
pushl
lea
jmp
jmp
sub
push
call
movb
pushf
popl
lea
jns
popl
push
lea
jmp
movzbw
aaa
cmc
inc
mov
dec
mov
test
push
clc
add
call
test
add
movb
call
pushf
not
cmp
jmp
push
pushl
popl
pushf
movb
lea
jmp
pushf
call
pushl
mov
jmp
push
call
jmp
btc
setb
pusha
rol
shl
sub
jge
xor
not
xor
dec
inc
push
inc
pusha
movzbw
and
btc
mov
pusha
cmc
call
bsr
shld
shl
mov
sub
bsf
add
add
mov
or
adc
not
sbb
call
lea
add
jle
test
sub
pusha
xor
clc
cmc
add
clc
not
pushf
call
pushf
call
sub
pushf
pushf
mov
pusha
push
call
inc
push
lahf
mov
test
jmp
mov
mov
call
mov
movb
call
pusha
mov
pusha
pushf
pushf
push
mov
mov
mov
push
call
sete
movzbw
call
cld
push
jmp
mov
push
pusha
lea
jmp
mov
push
mov
mov
mov
mov
pusha
push
mov
call
movb
pushf
mov
jmp
pushf
cmp
add
mov
jmp
mov
pusha
pushf
pushf
pushf
lea
jmp
shrd
clc
movzbl
shrd
adc
clc
add
stc
stc
bsf
sub
push
bts
add
stc
neg
setle
btr
sub
test
shl
shrd
xor
dec
cmc
cmp
xor
sub
bts
mov
call
mov
mov
movw
pusha
push
lea
jmp
jmp
jmp
stc
bsr
mov
clc
clc
call
mov
pushf
push
mov
mov
jmp
mov
mov
movl
call
mov
test
shl
mov
pushf
add
call
pushf
mov
mov
pushf
mov
jmp
push
pushf
cld
call
jmp
das
setns
mov
mov
rol
mov
cmp
not
pushf
test
not
call
call
mov
pushl
mov
movw
movb
push
push
pushf
popl
mov
movl
pushl
popl
jmp
call
pushf
push
pushf
popl
push
pushl
popl
mov
movb
movl
movl
pushf
lea
jmp
pusha
stc
bt
sub
call
pushl
mov
mov
movb
lea
jmp
pushl
popl
push
pushf
pushl
lea
jmp
add
pushf
pushf
mov
call
clc
cmc
stc
pushl
cmc
push
jmp
movb
jmp
pushl
popl
mov
push
movb
movl
pushf
mov
lea
jmp
sub
test
test
movb
mov
jmp
pusha
call
mov
call
lea
mov
push
sub
mov
mov
pushf
lea
jmp
movl
pushf
lea
jmp
pusha
push
mov
pushl
movb
mov
pushf
popl
jmp
mov
call
mov
sub
jmp
not
mov
clc
jmp
pushl
mov
pushf
movb
movb
lea
jmp
cbtw
notl
dec
cmc
mov
test
cmc
clc
call
call
jmp
ror
test
mov
shrd
mov
cmc
cmp
add
jo
pushf
push
mov
push
pushf
pusha
movb
lea
jmp
call
pushf
popl
push
pushl
popl
pushf
lea
jmp
push
pushf
movl
pushl
lea
jmp
sub
and
mov
xor
mov
push
pushl
jmp
pushf
mov
mov
bswap
movsbl
push
push
pushf
mov
call
call
mov
push
pushl
pusha
movw
pushf
popl
pushf
pushl
popl
call
call
inc
bswap
and
ror
bt
mov
clc
jmp
push
pushf
mov
push
mov
pushl
pushf
pushf
mov
jmp
cmp
bt
neg
lea
cmp
cmp
pushf
jmp
call
pushf
pushf
pushf
mov
movb
lea
jmp
jmp
mov
push
movzbw
je
pushf
setg
mov
pusha
lea
jle
pushf
lea
cpuid
pushf
pusha
pusha
sub
pushf
push
mov
push
mov
jmp
xor
shrd
inc
daa
mov
shrd
shrd
cmc
mov
pushf
clc
clc
not
cmc
not
bt
clc
and
pushf
pushf
pushf
mov
lea
jae
push
pusha
pushf
popl
jmp
call
stc
call
mov
clc
sub
jmp
mov
pushf
pushf
movb
mov
call
jmp
pushl
mov
pushl
mov
mov
pushf
popl
call
lea
ja
and
sbb
mov
setb
lea
cmc
sub
bsr
lea
shl
ror
and
btc
xor
sbb
sub
movzbw
jmp
mov
jmp
pusha
shr
pushf
mov
rcl
clc
mov
stc
pusha
sub
pushl
mov
shr
pushf
pushf
movl
mov
call
pushf
mov
pusha
mov
movb
pushf
pusha
mov
mov
pushf
push
pushf
mov
mov
pushl
push
mov
pushf
jmp
pusha
jmp
pusha
mov
mov
pushf
pushf
pushf
pushf
mov
call
jmp
bt
add
pusha
pusha
mov
pushf
mov
mov
pushf
pushf
lea
jmp
mov
movl
pushf
movl
pushf
pushf
lea
jmp
mov
movl
push
pushf
mov
lea
jmp
pushf
call
movl
push
lea
jmp
call
call
call
call
jmp
mov
mov
push
push
call
pushf
jmp
movl
pushf
pushf
movb
movw
lea
jmp
mov
pushl
pushl
lea
jmp
pusha
stc
clc
cmc
sub
mov
stc
push
rol
push
stc
add
pushf
sub
jge
pushf
bt
xor
test
sub
jmp
pushf
popl
movb
push
push
pushl
popl
pushf
lea
jmp
call
jmp
call
pushf
pushl
popl
call
pushf
movb
mov
pusha
jmp
pusha
pusha
mov
pushf
mov
call
add
pushl
pushf
push
mov
movb
movw
push
pushf
lea
jmp
test
bsr
and
mov
stc
shr
inc
clc
mov
pusha
cmp
cmc
pushf
sub
pusha
shl
call
xchg
movsbw
mov
jmp
dec
test
test
xor
bt
call
push
push
mov
movw
push
pushl
ret
pushl
popf
pusha
lea
jmp
stc
sub
mov
rcl
push
dec
mov
pusha
cmc
push
add
call
sub
pushf
cmc
bt
pushf
neg
bt
sub
bt
test
clc
call
pushf
mov
pushf
movb
lea
jmp
call
push
mov
jmp
pushf
mov
pushf
mov
pusha
mov
jmp
push
lea
lea
jb
push
mov
pusha
pusha
lea
jmp
pusha
mov
call
call
pushl
popl
call
jmp
pushf
pushl
popl
push
push
mov
push
lea
jmp
pushf
mov
call
pushf
popl
push
pushl
popl
mov
call
mov
mov
movb
pushf
pushf
push
lea
jmp
pushf
mov
pushl
push
pushf
lea
jmp
call
push
mov
js
push
mov
push
mov
pusha
pushl
mov
pushf
call
sub
jmp
clc
add
call
mov
mov
jmp
mov
jmp
call
mov
stc
sub
pushf
stc
pushf
sub
pushf
call
jmp
mov
xor
jmp
pushf
jmp
add
add
add
push
mov
push
adc
add
add
add
bound
add
mov
add
jecxz
add
aas
aas
add
lea
add
sarl
add
stc
aas
add
sub
add
jae
add
stos
inc
add
aaa
inc
add
mov
add
inc
add
inc
add
mov
add
push
dec
add
lods
dec
add
ss
add
imul
cltd
dec
add
leave
dec
add
stc
dec
add
sub
add
add
lcall
add
dec
add
sub
add
add
xchg
dec
add
add
add
push
pop
add
rcrb
jmp
pop
add
push
pop
add
sbbl
add
pop
add
or
add
add
mov
add
pop
add
xchg
jg
