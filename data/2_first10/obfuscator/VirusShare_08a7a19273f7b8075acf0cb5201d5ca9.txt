add
add
or
add
sbb
add
mov
add
add
add
mov
add
xchg
add
andb
addb
add
mov
add
add
add
add
add
push
add
add
add
add
mov
add
add
add
add
add
js
add
shl
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
adc
fadds
add
stos
push
xor
cmp
lock
mov
adc
pushf
ss
cmp
in
stos
scas
popa
insb
je
inc
lret
shrl
or
cmpsl
fwait
mov
popa
cmp
or
sub
inc
cmc
dec
fisttpll
sub
pusha
or
in
xor
dec
jmp
outsl
push
repz
mov
or
fists
inc
jp
dec
mov
or
dec
ret
stos
cld
push
test
dec
push
dec
push
push
ret
push
push
push
and
sbb
dec
es
sub
sub
mov
pop
xor
mov
push
add
inc
fstpl
jmp
mov
test
xchg
fwait
inc
jg
and
mov
dec
pop
push
iret
jl
andl
mov
mov
mov
and
sbb
jb
fiadds
cmpb
adc
imul
inc
mov
jmp
and
mov
mov
adc
insl
out
xchg
sub
fsubr
sti
mov
aam
outsb
out
dec
adc
adc
adc
mov
stc
dec
or
sti
sub
js
aam
and
outsl
repnz
aaa
fmuls
daa
and
jecxz
cmp
cld
and
jns
lret
aaa
xchg
sbb
in
xor
push
lahf
or
stc
sarl
cltd
insl
or
dec
cmp
sbb
popa
stos
shlb
cmp
sbb
fwait
sub
sub
mov
mov
aad
mov
push
pop
xor
arpl
mov
mov
jl
xor
xchg
dec
rcrb
sub
bound
lea
test
jl
inc
or
adc
cmp
je
xor
gs
cs
int
pop
lds
outsb
mov
jp
enter
xor
dec
out
sti
pop
or
and
outsl
arpl
ljmp
mov
jmp
lds
mov
push
insb
arpl
int3
xchg
inc
ljmp
divb
mov
xchg
jl
jle
mov
xlat
xor
jae
dec
push
js
mov
gs
bound
pop
fcoms
enter
clc
popa
xor
std
sti
mov
inc
or
xorps
pop
inc
fistl
aaa
sbb
fldl
dec
stc
sarl
and
imul
mov
arpl
fxtract
push
pop
and
sbb
ficoms
gs
cmpsb
movsl
rol
mov
es
xor
out
cmpsb
mov
test
nop
frstor
int3
or
test
idivl
int3
out
dec
xchg
dec
sbb
loope
cmc
stc
arpl
fisubrs
fstpl
cmp
gs
hlt
inc
outsb
leave
adc
cmp
aaa
jbe
fisubs
sarl
out
loopne
shr
or
aas
aam
pop
dec
jl
sahf
popa
stos
cmp
je
in
leave
mov
push
inc
test
fsubr
popf
out
xor
stos
xchg
js
mov
sub
mov
adc
dec
push
in
fisttpl
inc
xchg
push
imul
xchg
xchg
ret
rorl
xlat
in
test
imul
addb
mov
adc
mov
pop
dec
sbb
jnp
mull
push
dec
xor
pusha
fdivl
or
icebp
jp
icebp
int
subl
push
xor
jns
mov
xchg
xor
jnp
int3
lret
jmp
add
lret
push
scas
std
cmpsb
hlt
out
mov
loopne
push
lods
js
sbb
xor
arpl
icebp
jb
and
sbb
add
ret
repnz
push
rcrl
je
and
leave
pmulhw
cmp
sbb
push
adc
int3
sti
ljmp
sub
aam
notb
jnp
insb
insl
icebp
add
test
sub
sbb
jg
int3
mov
es
fildll
cld
adc
mov
invd
lahf
mov
or
push
test
pop
pop
inc
fsubl
sbb
and
pop
xchg
xchg
insl
xchg
jae
fs
cmp
in
icebp
out
inc
inc
fdivs
div
data16
push
insl
xor
les
mov
cmc
rcrl
mov
sbb
js
or
inc
pop
fwait
xorl
repnz
dec
cmp
push
dec
push
shr
adc
add
repnz
sbb
repnz
out
lret
push
lret
aaa
xlat
pop
pop
les
jecxz
and
push
mov
xor
cmc
out
loope
add
and
aaa
or
sarl
cmp
dec
mov
repnz
and
aam
dec
sub
and
adc
aad
ja
mov
cmpl
jbe
xchg
push
lods
out
sub
inc
pop
std
fwait
dec
clc
pop
push
ds
fld
xor
mov
in
and
andl
stc
das
mov
das
xchg
xchg
mov
sti
sbb
pop
movsb
int
rcrl
jg
jne
add
jg
outsl
adc
mov
out
stos
addb
scas
cwtl
das
jmp
push
arpl
cmpsb
movsl
outsb
pop
jo
jb
mov
fwait
xlat
aam
adc
sub
xchg
out
insb
jmp
loop
xor
mov
lock
xchg
inc
scas
sub
movsb
push
xor
xchg
mov
jo
push
vcvtpd2dqx
jmp
lods
cmp
jl
repnz
outsb
loopne
cmp
jg
movsl
aas
push
pop
jl
adc
and
push
enter
xor
add
aam
xchg
and
xor
cbtw
add
xor
jmp
mov
pop
lods
jmp
mov
mov
inc
push
call
sub
aas
xchg
ja
inc
and
or
add
xor
testb
or
fcomps
pop
movsb
hlt
lods
clc
aas
jnp
cltd
lahf
dec
dec
clc
pushf
nop
mov
mov
mov
dec
sbb
out
adc
iret
mov
pop
test
fists
test
push
pop
dec
lret
push
pop
das
es
pop
jmp
sahf
mov
enter
aad
add
clc
mov
push
rcll
sub
sbb
push
jl
xlat
jl
jnp
fsts
pop
adc
mov
clc
out
les
lahf
push
aas
inc
sub
ljmp
stc
sti
js
les
popf
test
loopne
jge
mov
mov
out
sub
jl
pop
scas
mov
push
nop
push
js
dec
mov
addr16
push
sub
dec
inc
out
lods
inc
pop
rcrl
jmp
lret
and
xor
xchg
mov
add
idiv
and
jns
mov
add
roll
xchg
jo
out
icebp
and
hlt
shlb
pop
mov
add
push
js
mov
or
repz
jge
call
mov
test
mov
sub
in
pop
push
sbb
mov
pop
jl
or
jne
shrb
fcmovnu
xchg
and
or
push
lret
push
or
dec
sub
loop
sbb
add
pop
nop
out
jp
inc
popa
add
push
xchg
or
inc
add
icebp
outsb
mov
sub
loop
dec
pop
push
and
push
in
push
add
fmul
les
out
sbb
ret
sbb
push
xor
xor
pop
mov
xchg
jbe
out
xlat
out
fnstsw
mov
mov
sub
cmp
mov
popf
dec
daa
lea
adc
add
mov
pop
xchg
rorl
mov
mov
mov
sti
pop
cltd
sub
pop
jle
mov
jl
leave
cmc
out
aam
xchg
aas
imul
jae
jp
jmp
push
aaa
imul
ret
sub
mov
add
mov
lds
out
xchg
xchg
dec
popf
sbb
push
inc
adc
and
enter
in
mov
daa
cmp
xchg
popa
stos
inc
add
outsl
mov
testb
js
add
adcl
mov
aaa
adc
and
int
push
or
jge
inc
xchg
and
pop
dec
push
push
sbb
mov
mov
fcmovnbe
fstpt
adc
cmpsb
bound
fisubl
xor
dec
loop
dec
gs
decl
inc
cmp
push
jmp
mov
jle
aas
arpl
mov
mov
stc
inc
sub
movsb
pop
pop
push
cmpsl
sub
xchg
pop
enter
jle
pop
int3
pop
or
cld
cs
cltd
push
int3
mov
jnp
jno
lea
fnsave
pop
loope
outsb
lods
mov
int3
inc
test
outsl
xor
mov
pop
lods
or
fwait
cmp
sbb
inc
in
mov
cmp
mov
mov
cmp
xor
sbb
in
add
jo
xor
pop
or
addr16
mov
and
mov
cmc
cmc
cmp
pop
pop
rorb
orl
xchg
mov
xchg
and
scas
bnd
hlt
xor
in
inc
sub
or
dec
or
mov
int
add
icebp
mov
nop
mov
pop
fsubrl
cli
mov
mov
lret
pusha
dec
inc
sub
mov
jecxz
test
push
fmul
mov
daa
shll
daa
pop
adcb
mov
pop
test
mov
dec
notl
cmp
jae
push
and
or
mov
mov
pop
dec
idivl
push
adc
data16
out
jle
jne
lods
jb
mov
cmpsl
mov
xlat
cmp
inc
mov
ds
and
stos
xor
or
pusha
xchg
lds
into
enter
push
jl
pushf
fstl
adc
mov
jle
cmpb
jno
pop
jns
jl
push
mov
adc
sbb
jge
orl
adcb
or
mov
mov
mov
mov
hlt
out
xor
cmp
sbb
adc
pop
lcall
cli
je
jle
mov
jns
hlt
push
lret
fistpll
add
cld
es
push
push
fisttpll
sbb
pop
cmp
out
mov
jg
fsubrs
pop
scas
imul
mov
or
sbb
addl
pop
push
rcl
dec
sub
fidivrs
pop
xlat
cmpsb
jb
ja
dec
sub
in
cs
popf
and
rcrb
mov
iret
das
cmp
aam
adc
cs
cmpsb
pop
jbe
mov
in
imul
mov
or
mov
ret
mov
cmc
xlat
lods
dec
repnz
mov
and
das
jmp
add
xchg
dec
cmp
mov
mov
fsubp
jnp
cwtl
scas
sub
inc
push
lods
mov
fsubr
pop
xchg
out
xchg
mov
cmp
repz
inc
cld
or
jle
pop
outsb
sub
mov
imul
jg
add
test
scas
shl
and
int3
rcll
mov
mov
or
fcom
push
clc
mov
cmp
cwtl
adc
dec
imul
repz
es
lods
outsl
arpl
jb
test
add
push
fldcw
mov
mov
mov
iret
test
xor
and
pushf
ret
mov
add
and
ds
sub
pushf
scas
loop
xor
fwait
adc
popa
inc
mov
lret
pop
fidivl
loope
call
jb
repz
pusha
jle
mov
cmpb
xchg
xchg
inc
and
sub
cmp
add
aas
lods
cmp
into
pop
lods
push
dec
add
push
push
in
test
lock
shll
jge
dec
enter
out
fdivrp
mov
xchg
out
jp
pop
push
call
insl
popl
push
mov
jns
insl
insb
loopne
es
jne
xor
lea
imul
pop
xor
xchg
loope
addr16
insl
pop
jae
pop
dec
cmpsb
aaa
gs
sbb
push
sbb
notl
mov
mov
jmp
shlb
jbe
movsb
div
and
out
lcall
std
mov
call
mov
int
arpl
sbb
cmpl
bound
enter
pop
xacquire
pop
fwait
pop
call
aam
cltd
leave
out
lods
pusha
sub
push
dec
pop
mov
pop
lret
jae
cmp
imul
shrb
xor
mov
dec
fistpll
mov
jne
add
xchg
cmc
mov
stos
jg
mov
xchg
pushf
push
cwtl
filds
xor
lea
fs
popf
imul
lods
cmp
daa
cwtl
insl
pop
cmp
inc
test
sub
pusha
orb
or
fcompl
call
cmp
fcmovnu
and
repnz
mov
jmp
dec
in
xchg
roll
xchg
sar
ds
test
in
sbb
bound
repnz
test
inc
pop
in
jmp
cltd
sahf
sub
cwtl
xchg
xchg
and
pop
or
ss
pop
sbb
ja
loop
mov
xor
add
push
push
and
iret
xchg
mov
out
sub
repz
repnz
push
popa
loop
sub
ret
inc
movsl
pop
mov
cld
xlat
adc
fstl
outsl
sbb
sbb
test
adc
xchg
or
jl
jecxz
inc
insb
dec
jne
insb
ss
and
mov
scas
adc
jle
nop
movsl
clc
lcall
push
pop
loopne
mov
cmp
flds
outsl
aas
or
out
cmp
jle
je
adc
cmp
sub
jns
rep
call
jmp
into
pop
dec
xchg
or
mov
xchg
cmp
or
push
push
cmc
pusha
add
dec
fstpt
or
or
mov
cmpl
push
inc
pop
cli
outsl
inc
mov
mov
int3
cmpsb
add
mov
js
dec
push
inc
out
pop
inc
lcall
enter
mov
mov
push
xlat
dec
rcrb
mov
push
sbb
loopne
sbb
inc
adc
scas
adc
lcall
sub
xchg
jno
and
cmpsl
addl
sbb
dec
insb
inc
cli
ret
pop
loop
and
jo,pt
mov
xchg
xlat
xlat
cs
insl
je
movsb
sarb
mov
clc
sbb
dec
xchg
pop
lahf
pop
xchg
ljmp
mov
jno
rorl
cmp
cwtl
scas
dec
hlt
xchg
inc
inc
mov
mov
add
or
inc
sub
int
lret
fsubrl
shlb
inc
sub
stos
cmp
cwtl
movsb
cmp
add
mov
add
inc
jmp
fwait
out
cld
movsb
nop
shl
fdivl
cmp
cmp
add
je
addr16
xchg
popa
xor
push
xchg
insb
push
mov
sub
mov
divb
aas
mov
cmpsl
adc
fldl
popf
movsl
jecxz
les
xchg
add
mov
xor
cs
iret
repz
addr16
xorl
lahf
xchg
pop
xor
not
xor
insb
push
ficoml
fimull
push
jns
or
sbbb
mov
loop
fdivp
pushf
pop
sub
outsl
pop
pop
jp
jns
sahf
scas
addr16
leave
cmp
inc
sbb
gs
test
push
and
xorb
dec
inc
ja
icebp
jbe
mov
loopne
mov
mov
adc
int
ret
mov
mov
pop
mov
jp
cs
pop
sub
xchg
or
push
jp
iret
cli
sub
lret
insb
mov
aam
dec
pop
cmp
jmp
mov
adc
imul
insl
fwait
sub
rcl
mov
arpl
test
testb
sbb
cmc
cmpsb
clc
mov
push
push
pop
out
lahf
xor
leave
fdivl
rclb
sarb
ficomps
leave
mov
jmp
orb
sbb
pushf
jne
adc
cmp
mov
in
or
mov
std
sub
pop
pop
mov
not
pop
push
dec
cwtl
outsb
sbb
shll
adc
sub
adc
jno
sub
daa
and
shrl
push
xor
dec
divl
in
dec
mov
fcomps
outsb
jo
dec
push
frstor
add
adc
mov
int
sbb
sub
cld
gs
push
sahf
jle
leave
push
pop
rcr
fldl
xchg
jne
push
clc
clc
add
mov
test
dec
sbbl
cmpsb
xor
imul
imul
jae
stos
rcll
add
pop
jmp
mov
es
iret
adc
mov
out
out
inc
mov
sti
out
mov
das
imul
out
inc
roll
aam
jp
push
xor
inc
sub
xor
sub
xchg
push
jno
mov
clc
call
adc
mov
nop
sub
bswap
gs
mov
clc
push
xor
adc
aaa
adc
add
xor
xor
sbb
inc
push
cmpl
jp
ss
xchg
xchg
std
cmp
inc
jecxz
ja
jns
fwait
inc
in
ret
das
ja
out
and
xchg
jmp
fcoms
inc
lret
movsl
in
js
inc
jb
pop
push
in
and
mov
stc
inc
les
je
sahf
mov
and
sub
fidivrl
popf
sarl
hlt
fidivrs
out
mov
jl
int3
gs
pop
sbb
cmp
imul
pop
mov
pop
cmp
out
cmp
stos
push
fwait
xchg
xor
sbb
mov
cld
mov
add
sub
push
sbb
shrl
fsubrl
mov
jae
js
jo
sbb
idiv
push
inc
mov
cli
sbb
cmp
cld
ret
xchg
mov
xor
ss
and
movsb
xchg
mov
sbb
scas
movsl
addr16
mov
ret
cwtl
bound
lret
mov
or
divl
pop
and
jmp
js
sbb
jl
cs
cli
xchg
mov
cli
or
adc
lds
and
fwait
ret
lods
xchg
in
adc
ja
cmp
xor
iret
outsl
int3
sub
jnp
iret
add
or
sbb
ret
and
mov
int
icebp
fs
cld
enter
sbb
jns
cmp
aaa
testb
outsb
mov
pop
and
sbb
js
jge
adc
inc
dec
pop
out
push
mov
xchg
insl
mov
jge
inc
cmp
loop
dec
mull
icebp
push
sarl
or
add
cmp
pop
imul
xchg
sub
inc
pop
clc
jge
lahf
enter
xchg
in
push
push
stos
mov
sbb
add
nop
fdivrs
or
sbbl
js
js
int
add
dec
sub
insl
daa
xchg
xchg
add
into
push
or
push
push
xor
popf
jg
jmp
es
inc
mov
xchg
lods
test
jg
pushf
pop
jl
fstps
js
fwait
out
mov
lods
adc
cmc
add
sub
stc
in
xchg
in
fwait
push
movsb
fisubrs
int3
xor
nopl
and
pushf
jno
or
divb
notl
roll
sahf
in
push
pushf
and
movsb
sub
add
js
mov
imul
push
mov
xor
arpl
cli
adc
fnstenv
and
in
shlb
sub
mov
push
icebp
in
idiv
push
imul
mov
ror
and
xor
jecxz
shrb
mov
or
idivb
jo
add
bnd
dec
iret
add
sbb
out
aad
mov
icebp
inc
insl
test
mov
dec
clc
and
push
mov
shrb
inc
pop
ret
or
sbb
insl
mov
cmpsl
push
test
xor
aas
int
ds
hlt
mov
out
sti
mov
sub
loopne
mov
adcl
and
imul
mov
ja
jle
clc
dec
add
dec
insl
rolb
test
push
insb
mulb
and
mov
jl
loop
or
and
incb
rcll
in
adc
pop
mov
aam
pop
lret
cs
jne
std
pop
aaa
adc
std
clc
faddp
xchg
das
mull
ljmp
xchg
mov
adc
sbb
add
insl
mov
rclb
xor
pop
insb
jg
pop
lock
cmp
mov
mov
xlat
push
inc
out
ret
ret
test
cli
insb
mulb
mull
clc
arpl
outsl
cmp
fcompl
and
push
outsl
subw
cmp
sub
fistpll
and
xchg
outsl
data16
push
mov
jl
push
test
adc
fstpt
lret
repnz
push
mov
mov
cld
ja
icebp
outsb
insl
or
ljmp
push
in
scas
jbe
int3
loopne
xor
lahf
pop
gs
mov
pop
ss
es
mov
mov
cld
or
outsl
pusha
int
mov
stos
or
arpl
lahf
add
mov
mov
test
push
icebp
fsubl
insl
mov
imul
in
imul
add
add
sbb
lods
jge
test
fwait
ret
sub
sbb
and
jmp
rsqrtps
pop
out
cmp
mov
inc
hlt
fists
data16
icebp
fidivl
xlat
mov
nop
lret
ret
adc
scas
mov
or
sub
inc
rorb
sbb
cmc
push
jnp
lcall
loop
and
jns
push
pop
sub
xchg
fwait
jnp
sbb
push
jb
mov
call
cmp
test
sbb
lret
mov
mov
xchg
dec
shrl
mov
mov
movl
mov
ret
mov
daa
jb
je
jns
push
mov
stos
pop
mov
push
nop
addl
js
fsubrs
jp,pt
outsb
pop
cwtl
int3
pushf
ss
pushl
jg
subb
sub
or
ds
pop
int3
aas
push
push
out
dec
xchg
maskmovq
pop
cmpl
pop
and
cmp
xlat
out
push
xchg
test
scas
dec
xchg
and
pop
loope
rcr
out
lahf
mov
sub
or
and
or
in
fnstenv
aad
mov
jnp
stos
aad
aas
sbb
mull
in
outsl
lods
ficoml
pop
mov
push
cmp
dec
lds
xor
add
sub
adc
push
ljmp
arpl
es
add
mov
ret
jle
test
mov
stos
push
cmp
push
xor
out
mov
mov
and
jge
mov
xchg
push
mov
push
push
add
test
jno
xor
aam
insb
stos
cld
test
pop
jmp
inc
pop
jns
push
mov
pop
and
push
xlat
xor
movsl
jmp
std
sbb
jnp
push
xchg
lds
out
and
push
pop
pop
movsb
jns
inc
pushf
cs
sub
lret
fwait
mov
mov
or
inc
or
insl
sub
cmp
mov
mov
je
jbe
fwait
js
mov
daa
call
stc
sahf
pop
das
sbb
dec
ret
loope
mov
pop
dec
cmp
mov
mov
mov
mov
sub
scas
in
xor
push
lods
mov
inc
mov
mov
cmp
in
add
xchg
mov
push
enter
jmp
mov
scas
lea
imul
jmp
jae
add
mov
mov
mov
jg
lcall
mov
jmp
mov
and
push
aad
popf
out
je
sbb
enter
cmp
aaa
les
fcompl
or
lcall
popa
fstl
sub
mov
lret
adc
sbb
mov
subb
fidivrl
xchg
nop
ja
movsb
std
xchg
outsl
ds
sbb
sbb
aam
or
std
xchg
testl
lods
rcl
mov
mul
std
dec
loope
lret
repnz
popf
push
mov
mov
cmpsb
jbe
sbb
jecxz
fstl
xlat
push
int3
dec
push
sbb
rcll
push
ror
test
fwait
imul
or
add
inc
jle
aam
cmp
lret
lcall
test
or
les
lret
push
js
push
mov
mov
call
repnz
dec
mov
add
into
sti
add
and
fsub
aas
adc
cmp
mov
cmpsb
stc
lret
mov
fidivrs
mov
push
dec
push
enter
mov
fmull
xor
mov
clc
dec
mov
mov
ljmp
aad
mov
lcall
push
sub
jb
imul
sbb
xor
or
les
adc
add
pop
movsl
sahf
push
and
xchg
jns
push
pop
jl
cli
lret
in
inc
cmp
and
rcrl
ss
mov
add
cmc
xchg
add
mov
test
mov
in
es
imul
lret
push
clc
mov
jle
sar
in
mov
push
scas
movsl
aas
icebp
out
dec
sub
mov
adc
inc
rolb
mov
add
xchg
addr16
xchg
push
mov
icebp
roll
dec
xchg
mov
repz
xchg
es
jl
test
movsb
adc
xor
nop
xor
pop
out
cmp
faddl
or
xchg
jg
int3
js
popf
insl
mov
das
mov
xor
insb
sub
cmp
ds
filds
push
mov
push
jnp
xchg
mov
filds
shrb
mov
aas
repnz
xchg
mov
sbb
stc
sbb
push
lods
cmpsl
stc
cmp
aam
cld
jo
and
and
jmp
or
jmp
mov
xchg
popl
and
movsb
add
mov
jmp
outsl
imul
repz
enter
ret
push
mov
call
into
hlt
shlb
idivl
dec
xchg
mov
popa
cs
jb
pop
dec
cwtl
leave
adc
das
cmp
fsts
pop
cmpsb
cmp
inc
jge
out
es
jg
jp
inc
loop
or
aad
pop
inc
jne
out
out
dec
xor
daa
insb
pop
dec
xchg
fldt
add
or
xchg
notl
jo
sbb
jecxz
push
mov
cmpb
sti
inc
bound
jno
aaa
out
sbb
rorb
xchg
les
pop
push
add
xchg
outsl
mov
in
or
enter
push
or
mov
sahf
mov
call
out
lods
mov
add
sbb
xor
xchg
pop
xchg
pavgb
cmp
push
jmp
xchg
leave
faddl
repnz
cmp
pop
sarl
les
and
sub
pop
test
xor
fwait
jecxz
pop
cmc
ds
adc
and
int
and
repz
mov
incb
nop
push
jns
repnz
stos
sbb
mov
push
xor
popa
mov
bound
or
lds
adc
ja
lods
cmp
mov
shlb
inc
add
lahf
xchg
outsl
into
je
dec
mov
sti
mov
and
pop
add
les
aaa
adc
xchg
cmp
push
test
jg
dec
movsb
inc
inc
sub
call
push
mov
sub
in
push
lods
test
adc
pop
cwtl
rclb
push
inc
bound
call
pusha
add
imul
rorl
fs
lahf
sar
cld
sbb
addb
lahf
and
fmull
daa
ds
stos
popa
mov
or
sti
pusha
adc
lret
mov
adc
insl
fcoml
jbe
push
dec
addr16
mov
nop
sahf
dec
adc
sar
test
pop
mov
icebp
push
inc
je
push
push
bound
aad
inc
sti
rolb
cmpsb
inc
pusha
popa
xchg
rcll
or
pop
jg
pop
fwait
scas
jne
stos
sti
sbb
fwait
cmp
xor
js
shrl
jle
ret
fldcw
shrl
cli
mov
outsl
add
fimull
mov
push
rol
sub
subb
flds
outsb
mov
pop
fcmovbe
xchg
jbe
dec
nop
inc
dec
mov
clc
stc
rolb
fwait
in
int
add
push
or
xor
popf
dec
lods
jmp
jle
cmpl
out
jne
mov
jmp
aam
mov
adc
cwtl
addr16
jmp
enter
enter
bound
test
cwtl
cli
roll
lret
out
cmp
sbb
test
ja
add
push
push
inc
pcmpgtw
pop
lcall
in
cmpl
test
cmp
jg
ds
mov
call
pop
test
xlat
insb
cmpsl
movsl
cmpsl
arpl
lret
xchg
xchg
push
mov
and
pop
xor
call
int
xor
aam
jbe
adc
out
cmp
ja
mov
mov
dec
sbb
xor
cmpsl
insb
cmpsl
insb
mov
fwait
movsb
stos
call
xchg
pop
cmc
cltd
mov
mov
push
orl
test
test
mov
lods
sub
push
sub
dec
std
pop
lahf
fldt
jae
adc
call
sbb
lret
sub
out
mov
mov
hlt
cmp
ss
jle
cvtpi2ps
into
inc
pop
sub
out
xor
xchg
and
mov
out
shll
xor
mov
rcrb
wbinvd
xchg
push
sbb
pop
ror
mov
jmp
inc
push
jnp
test
out
mov
xor
xchg
jns
cmc
js
rcrb
fidivrs
outsl
fadds
lock
pop
cmp
int3
dec
mov
sti
sbb
jp
sbb
jecxz
ljmp
test
das
mov
mov
aaa
mov
xchg
pop
dec
sub
mov
xor
jne
rol
icebp
addr16
stc
cmpsb
jecxz
push
and
ror
cwtl
jb
adc
xor
aam
lcall
in
push
pop
montmul
cmpsb
test
push
shlb
fildl
ret
add
pop
mov
ds
fbld
imul
push
insb
mov
lcall
ret
xchg
jge
mov
repz
mov
iret
add
fsubl
mov
cmp
popf
mov
jbe
andl
mov
imul
adc
push
xchg
outsb
and
adc
mov
nop
jecxz
paddq
jmp
icebp
data16
sahf
xchg
mov
xchg
es
sbbb
clc
jge
and
cmp
es
cmp
imul
lahf
das
or
or
in
mov
int3
jecxz
mov
or
xchg
cmp
adc
push
push
in
or
mov
outsl
pop
loopne
or
adc
testb
adc
mov
dec
push
int
nop
jns
cmp
outsl
insl
push
lcall
pop
push
inc
lods
fwait
dec
daa
outsl
adc
cmp
stc
cmp
adc
loopne
adc
aaa
std
inc
jle
cmp
cmp
push
jg
stc
dec
lds
mov
loope
in
pop
jo
and
sub
mov
push
lea
xchg
add
lcall
pop
test
inc
aaa
inc
adc
mov
cli
pop
jmp
add
pushf
ljmp
mov
idivb
aam
sbb
lds
fs
add
sarl
movsl
xchg
aas
gs
jne
mov
pop
stos
movsb
xchg
inc
mov
add
or
sub
jno
xor
xchg
loopne
mov
push
xchg
xor
cmpsb
cmpb
in
int
jge
mov
add
pop
cmpsb
loopne
cmp
imul
xchg
outsb
stc
mov
push
and
mov
iret
or
jns
xchg
xor
pop
sbb
adc
xor
mov
pop
push
out
mov
shlb
cli
movsl
inc
in
loop
nop
divl
push
mulb
jnp
and
mov
faddl
add
or
test
jbe
add
aaa
mov
inc
in
sbb
push
arpl
inc
loop
enter
insl
icebp
jbe
mov
xor
jnp
mov
push
int3
xchg
xchg
outsb
sahf
out
dec
daa
mov
xor
sti
pop
adc
xchg
jo
std
xchg
xchg
or
rcll
cmpsb
cmp
xchg
and
ds
cmp
mov
js
sub
pushf
inc
and
mov
in
lcall
lret
pop
test
sub
jbe
push
ficoms
mov
mov
xchg
cbtw
pusha
les
flds
xchg
sub
ss
dec
cs
push
bound
xlat
adc
out
cmpsb
jno
xor
out
jl
out
rorl
shrl
xchg
jo
and
mov
cmp
test
xor
aaa
mov
sub
rcrl
sbb
dec
sub
jge
pop
icebp
cltd
aad
mov
lret
cmpsl
out
call
xor
scas
cmp
pop
mov
and
pushf
mov
repnz
pop
jo
mov
inc
dec
mov
xchg
mov
push
or
pop
cmpsb
fstpl
decb
dec
pop
dec
add
push
pop
fsubrs
push
outsb
mov
addr16
jnp,pt
jl
add
jmp
cmp
dec
cltd
pop
xchg
and
lea
scas
cmpb
stos
sti
call
push
sbb
lods
inc
jp
lods
ret
scas
or
and
add
xor
and
xchg
es
fisttps
js
adc
xor
out
mov
push
ds
mov
mov
push
xor
inc
paddusw
orl
sti
adc
push
fmull
jg
dec
inc
push
cmp
or
mov
inc
ljmp
inc
jne
test
jle
sbb
popf
es
gs
cmp
daa
push
add
mov
adc
mov
fsubs
hlt
out
cmp
mov
ret
je
adcb
into
dec
sub
push
lods
bound
loop
jae
jmp
loop
pushf
push
cmpsl
jecxz
ss
sbbl
fwait
xchg
jne
push
mov
mov
xchg
fnstenv
and
movsl
add
filds
jbe
stos
cmp
jbe
sbb
dec
jp
loope
mov
mov
sub
addl
mov
xor
fdivp
push
mov
push
test
sub
outsb
aas
mov
xchg
xchg
pop
xchg
pusha
dec
shlb
or
adc
loop
repnz
jae
mov
mov
xchg
loopne
inc
mov
cmp
stos
cmovp
cs
icebp
pop
push
fistps
in
xchg
fxch
popa
insl
jmp
mov
ffree
lods
sbb
mov
jg
pop
jl
out
lds
add
dec
sub
mov
mov
cltd
cmc
rorl
inc
in
repnz
sbb
lods
in
inc
cmpsb
sbb
pop
mov
jmp
mul
push
test
cld
inc
addr16
rorl
std
movsb
pop
xor
ss
inc
add
jge
xor
sbb
and
push
adc
mov
aaa
mov
fsincos
sub
mov
pop
loop
sbb
or
dec
subb
stos
ret
out
into
fwait
imul
sbb
das
cmp
test
sbb
mov
scas
sbb
dec
jp
adc
jnp
daa
pop
or
push
addl
push
mov
mov
jnp
mov
ds
repz
enter
aaa
or
add
stc
jbe
int
cmp
jno
jmp
pusha
mov
ret
push
dec
xchg
inc
xchg
or
sub
icebp
pusha
and
sbb
xor
pop
aam
xor
mov
mov
es
fs
shr
push
xor
ja
xchg
pop
leave
dec
sbb
mov
popf
icebp
cltd
inc
push
xchg
int
xchg
cmpsb
jo
sub
out
ret
ds
fmull
xor
cmpsb
sbb
and
bound
xchg
std
push
dec
nop
jno
mov
jmp
daa
dec
mov
add
leave
lret
fdivp
repnz
scas
popw
ljmp
mov
sbb
inc
and
lds
dec
insb
cmpsb
int
testb
lret
add
dec
mov
push
ficoms
sbbl
pop
aam
jb
lods
jno
sbb
add
xchg
sub
ds
sbb
repnz
jns
nop
cmp
cmp
lret
xchg
mov
push
cmp
frstor
add
scas
test
push
lods
pop
dec
adc
or
inc
decb
dec
popf
and
fnsave
popf
xor
outsb
scas
scas
subl
aad
mov
xchg
inc
jb
and
ret
mov
jne
popa
pop
lahf
sti
adc
cwtl
jo
imul
out
and
sarl
call
pxor
aam
loope
shll
mov
mov
dec
sbb
and
sub
subl
jmp
loopne
icebp
bound
mov
sbb
cmpsb
mov
fwait
lds
cmp
sti
add
js
cmc
dec
mov
lcall
or
inc
adc
cld
leave
add
int3
sbb
push
cmc
inc
ja
xorl
aas
mov
aas
js
ret
lahf
xchg
fcomps
dec
cmpsl
sbb
lret
rcll
dec
mov
fmuls
enter
das
clc
addr16
leave
aam
arpl
cmp
jg
inc
shlb
push
les
cld
xchg
dec
mov
es
mov
repz
insl
movsb
mov
pop
xchg
imul
add
jmp
mov
popa
negb
or
xchg
pop
lret
lahf
adc
nop
cwtl
push
adc
push
cmp
mov
adc
ret
sub
addr16
clc
push
nop
call
add
cmp
mov
lret
in
ds
out
dec
inc
dec
scas
mov
inc
dec
nop
or
mov
inc
cs
adc
sbb
sbb
outsb
fcmovnb
repz
xor
imul
in
mov
mov
xchg
mov
push
shrl
mov
and
and
sbb
scas
and
push
or
ljmp
in
shrb
mov
ljmpw
insl
add
in
ljmp
pop
imulb
cwtl
cs
or
dec
adc
out
xchg
stos
sub
xchg
sub
jl
repz
into
mov
fwait
xchg
inc
outsl
mov
inc
je
cmp
pop
in
push
outsb
xchg
pop
insb
pop
scas
mov
or
neg
cmp
push
push
push
or
fwait
testb
insl
pop
repnz
xor
fs
rorb
sub
insb
add
jb
stos
pusha
push
adc
mov
dec
mov
push
adc
dec
pop
imul
cmp
add
mov
adc
insl
cld
out
fs
or
mov
or
push
and
push
faddp
jne
es
inc
adc
dec
mov
pop
mov
push
fwait
movsl
mov
sbb
inc
bound
inc
push
es
scas
mov
inc
in
jae
inc
aam
insb
inc
arpl
mov
push
pop
enter
punpckhwd
pop
cmpsl
mov
pop
cli
outsl
daa
adc
jle
or
out
outsb
mov
fdivs
mov
push
pop
mov
xor
inc
sub
addr16
mov
or
dec
jns
push
lds
pop
lock
fildll
stc
add
mov
mov
inc
mov
shrl
inc
pushf
stos
xor
test
inc
cmp
xchg
movsb
add
mov
cmp
mov
int3
test
decl
push
shl
adc
jmp
cmpb
ljmp
lahf
mov
cmp
mov
in
mov
test
mov
add
arpl
repnz
mov
mov
and
push
nop
adc
fucom
scas
dec
and
test
push
sbb
lcall
dec
pop
adc
cmpsb
xchg
xor
add
outsl
xchg
or
cwtl
out
and
dec
jb
lock
shlb
sub
push
jbe
lea
jg
jnp
push
lods
xchg
test
lret
je
in
clc
push
jg
sbb
and
scas
neg
mov
fisubrs
or
push
sahf
lahf
xor
mov
cld
into
cmp
xchg
dec
adc
inc
add
aaa
mov
es
xchg
lret
arpl
jns
cmp
call
insl
ds
adc
adc
jmp
hlt
rcll
sbb
fisttpl
sbb
xlat
shll
jo
dec
data16
xchg
xchg
mov
xchg
flds
dec
fisubl
xor
jno
testl
ret
xchg
insb
cmpsb
es
andb
mov
inc
addr16
stos
lar
rclb
cmp
xor
adc
icebp
push
sti
rorl
sbb
test
mov
add
and
jp
ss
mov
mov
sbb
pop
cmp
and
decb
es
and
arpl
sbb
insl
jmp
sbb
lds
pop
add
jo
jmp
mov
adcl
in
pushf
add
lods
dec
push
push
mov
rol
add
lods
push
pop
inc
aas
out
xor
push
fwait
test
add
cmc
nop
test
mov
pop
xor
aad
out
push
xchg
mov
mov
scas
push
jb
js
rcll
paddq
int
cmp
aaa
test
xchg
mov
repnz
sti
add
add
add
in
es
adc
adc
addr16
inc
popa
and
scas
inc
add
push
or
adc
sub
xchg
pop
ljmp
inc
mov
dec
mov
cli
out
mov
cmp
dec
notl
addr16
mov
sub
scas
repz
mov
and
or
scas
cli
aaa
ss
and
loope
imul
mov
fmulp
add
mov
cli
fs
or
sbb
lahf
mov
lods
jne
popa
ret
push
into
sbb
cltd
shrl
pop
xchg
add
and
popf
movsb
shrb
rcl
and
bound
mov
jnp
stos
pop
add
dec
loopne
repnz
ds
pop
push
lds
cltd
xchg
inc
xchg
sub
mov
int3
mov
pop
push
pop
jae
push
push
in
xchg
cld
daa
jnp
rcrl
out
push
addb
mov
ja
sbb
pop
mov
mov
xor
leave
in
push
mov
or
cltd
cmc
in
sbbb
cmp
movb
mov
andl
dec
adcb
sbb
popa
inc
sbbb
stos
sbb
fdivr
call
rcll
hlt
mov
fdivl
adc
sti
xchg
ljmp
xor
lock
mov
popf
cmpsl
out
outsl
outsb
push
adc
fwait
add
out
popf
sarl
dec
adc
cmp
jne,pt
jnp
aas
jne
add
xchg
mov
clc
outsl
push
cmpsb
mov
inc
js
inc
test
shrb
loope
bnd
inc
cwtl
push
test
pop
rol
popf
loope
fcomp
lret
test
imul
xor
and
add
pusha
xchg
and
int
mov
pop
loope
xor
push
mov
jmp
add
je
xor
push
fisubl
xchg
jge
out
xor
xchg
mov
das
lea
das
jg
inc
in
mov
mov
xor
cmp
jge
mov
mov
stc
test
and
sub
cli
rclb
bound
cmc
and
mov
xchg
pop
push
lods
adc
pop
je
lcall
repz
mov
dec
int
leave
dec
out
cmp
jl
int3
out
sbb
cmc
clc
xor
mov
aad
mov
aas
xchg
out
jbe
sarb
mov
cwtl
jmp
enter
jge
filds
jp
sub
addr16
or
mov
jmp
enter
lds
movsl
cld
lret
xor
sahf
jbe
xchg
ljmp
jnp
insb
push
call
loopne
cmpsb
loopne
shl
push
or
mov
mov
je
dec
sbb
je
mov
int3
adc
sub
hlt
out
mov
cmp
xchg
enter
inc
data16
jp
mov
jo
and
xor
xchg
mov
mulb
pop
sbb
add
test
out
mov
inc
xchg
push
arpl
dec
lods
and
xor
ret
inc
mov
sbb
fucomip
cmc
cmp
mov
aas
dec
fcom
and
cmp
pop
sub
or
xor
mov
pop
and
add
jne
dec
pop
dec
insb
adc
data16
decl
mov
popf
stos
sbb
pop
pop
xchg
adc
cmpl
or
push
outsb
test
arpl
mov
dec
jmp
dec
add
and
jo
add
or
and
nop
call
xchg
lcall
lret
das
call
mov
testb
mov
jecxz
xlat
push
cmp
rcrl
js
add
je
out
cmp
cmpsb
ljmp
pop
sbb
xor
js
lret
xor
in
lods
cli
and
movsl
rcll
adcl
or
ljmp
sar
test
push
xor
in
repnz
iret
in
xlat
xor
xor
fnstsw
std
fistpl
xchg
xchg
mov
cmp
xchg
mov
jno
outsb
daa
adc
mov
inc
fiaddl
test
add
xor
sub
inc
xchg
fcompl
dec
and
mov
xor
std
mov
orb
jno
mov
sbb
jl
pop
outsb
stos
movsb
inc
push
cli
fisttpl
cmpsb
cmp
jns
jns
mov
adc
add
imul
mov
jl
add
popf
outsb
cmp
popf
lds
outsb
fsubrl
shlb
push
push
fcmovne
adc
adc
imul
fidivrs
ret
add
cmp
sub
lea
sahf
outsl
pop
aam
mov
jg
mov
clc
adc
push
adc
mov
aad
xchg
mov
fsts
xchg
nop
repnz
push
sub
jle
sbb
mov
mov
out
test
jecxz
es
mov
or
arpl
jge
aam
ret
xchg
sbb
inc
cs
add
xor
mov
lcall
sbb
aas
loope
xchg
dec
andl
push
loopne
in
push
lods
loopne
in
int
ljmp
movsb
rcll
jl
test
push
call
ljmp
call
hlt
mov
insl
dec
aam
xchg
jb
dec
and
or
cld
push
adc
pop
stos
push
lcall
lods
dec
dec
xchg
icebp
push
adc
jne
cmp
inc
xchg
or
mov
out
incb
ret
sahf
sub
or
adc
lea
push
aas
shll
inc
and
cld
xchg
mov
xchg
sahf
sub
mov
pop
loopne
cmp
test
mov
insb
jp
ficomps
xchg
jg
pop
cwtl
mov
inc
lret
mov
add
popf
jecxz
ficoms
dec
sub
test
jl
sti
out
add
ljmp
add
dec
mov
dec
push
inc
or
dec
or
sub
in
mov
lods
roll
lds
mov
sbb
cmp
repz
pop
jne
cwtl
ret
ljmp
negb
scas
stos
movsl
fs
stc
jnp
leave
mov
inc
cmpsb
test
inc
movl
pop
mov
fmull
imul
lods
sti
rolb
pushl
or
movsl
pop
roll
cld
jo
sti
mov
push
inc
gs
in
sti
cmc
ja
lea
icebp
push
mov
mov
rcll
jmp
pop
call
ss
xor
mov
ja
lcall
mov
nop
sbb
mov
loop
mov
and
mov
push
mov
or
xchg
add
mov
out
mov
or
mov
sub
repz
dec
popf
xchg
xchg
repnz
pop
dec
sbb
popa
jno
sbb
push
test
ds
cmc
imul
repz
push
test
mov
movsb
mov
test
jno
adc
mov
sarb
dec
sbb
pushf
or
and
jmp
xchg
stos
mov
add
in
dec
dec
repz
ret
xchg
push
stos
push
loop
insl
mov
jp
pop
stos
jmp
jb
adc
or
lds
adc
mov
inc
adc
js
xor
pop
pop
sahf
adc
sbb
fwait
sbb
fidivl
mov
lret
adc
mov
nop
jb
movsb
cld
mov
sub
mov
jae
mov
hlt
gs
or
and
movsb
jmp
icebp
lret
lret
in
cmp
jns
popa
jmp
xchg
fstps
add
mov
inc
insl
push
ja
or
sbb
sbb
dec
adc
fcompl
add
dec
es
sbb
or
mov
cld
pop
pop
leave
mov
lds
adc
xlat
imul
mov
fldenv
mov
stc
inc
push
loop
fwait
mov
push
pop
jns
pushf
and
pop
ljmp
lods
jae
mov
pop
ret
add
rorb
cli
adcb
adc
lods
cwtl
jo
cmp
jno
dec
pop
xchg
in
or
sbb
cli
test
int
mov
in
lods
repz
pop
loopne
imul
dec
hlt
adc
pop
adc
push
sbb
lods
and
add
popa
ljmp
outsl
sti
test
cmp
jns
std
out
jb
inc
rcrb
xchg
pop
in
xor
push
lret
and
jo
xor
loop
and
mov
insb
adc
fucom
aad
test
icebp
sbb
push
cmp
jbe
icebp
mov
sub
adc
aaa
daa
jmp
sbb
mov
mov
or
popa
sarl
ja
lods
add
jg
push
pop
mov
and
jb
jge
sub
addl
mov
mov
sbb
mov
lahf
ja
xchg
adc
ljmp
mov
add
mov
lods
lret
aaa
inc
stc
dec
out
aam
xor
mov
xor
cmp
jl
xchg
in
push
dec
mov
vcvtsd2si
xor
dec
or
jne
pop
xor
lret
cmp
dec
out
xor
je
adc
sbb
movsb
pop
js
mov
mov
mov
dec
push
jns
repz
or
lret
adc
mov
loop
push
mov
roll
enter
pop
in
xlat
mov
cwtl
test
stc
push
jb
int3
rcrb
push
sbb
push
out
imul
andl
mov
sbb
mov
pop
ret
ret
ja
xor
mov
nop
mov
add
jmp
cmpsb
fs
xchg
cmc
add
int3
mov
cmp
xchg
inc
scas
ficompl
imulb
outsl
sub
ret
sahf
jnp
add
sbb
roll
int3
pop
addr16
rcrl
cmpl
inc
cmp
addr16
shlb
mov
pop
mov
bound
iret
test
and
pop
mov
loope
mov
outsb
lret
xchg
jp
jl
fs
xchg
push
xor
sub
shl
push
je
sub
fcoml
aad
dec
cmp
adc
pop
jne
repz
pop
push
aam
in
dec
mov
jns
test
adc
jmp
mov
js
outsb
jle
dec
lods
aad
movsb
pop
fiaddl
mov
dec
outsb
adc
aam
insl
push
fcmovne
bound
jne
mov
cli
push
lock
mov
das
lods
mov
sub
cmc
pop
or
mov
sub
mov
jb
sub
pop
ja
ror
adc
movsb
pop
fdivrs
leave
bound
sbb
cli
dec
adc
or
adc
sbb
xchg
ret
dec
outsl
in
mov
fisttpll
lds
ret
and
add
jp
jmp
test
mov
mov
in
out
xchg
mov
out
dec
and
jb
mov
pop
xchg
testb
sub
aaa
pop
out
jbe
int
mov
xchg
addr16
jecxz
ret
fs
mov
cmp
sbb
sbb
test
xchg
inc
int
cmp
out
jp
jne
push
and
sub
mov
cmc
jns
sub
popa
inc
mov
and
and
fdivl
xor
out
faddp
mov
jbe
mov
test
loop
inc
push
jne
js
add
jle
dec
cmp
inc
mulps
das
cld
scas
aas
sub
mov
iret
out
shl
xchg
subb
call
jns
sub
roll
rcrl
ja
mov
ss
push
push
pop
push
shll
cmp
out
add
decl
or
mov
push
mov
adc
pop
push
test
js
rcrl
ret
sbb
mov
pop
and
sti
push
lcall
aaa
sub
and
dec
or
fs
fists
iret
push
xor
js
xlat
xor
mov
loope
jns
xor
cmp
pushf
and
inc
je
mov
imul
dec
add
sbb
and
pop
add
lret
scas
pop
mov
mov
test
test
lods
sub
pop
and
cs
inc
push
sub
pusha
jbe
lcall
dec
adc
rcll
sbb
cmp
repz
push
scas
push
dec
and
mov
dec
inc
ja
pushf
push
jmp
nop
sub
stos
push
xor
stos
es
mov
and
pop
push
or
add
mov
fists
cmp
aad
push
fnstsw
stos
mov
xlat
cltd
mov
xchg
jbe
cli
and
mov
outsb
dec
lds
adc
mov
sub
push
fs
jl
lret
gs
movsl
mov
or
push
dec
fwait
xlat
pop
out
leave
lods
das
daa
jecxz
pop
fistpl
cs
faddl
xchg
out
fadd
jb
xchg
stc
addr16
shrl
je
cmp
inc
std
cs
pop
mov
aam
enter
xchg
add
ljmp
jo
lock
sub
xlat
fistpll
inc
jecxz
gs
popa
inc
test
pop
popa
sbb
sbb
and
push
jns
ja
add
sbb
shr
add
cmp
cmpsl
pop
push
sarb
subl
jnp
inc
sub
mov
xchg
stc
xchg
fadds
pop
pop
pop
mov
xchg
inc
add
out
flds
pop
lea
push
dec
or
cwtl
xor
xchg
invd
call
popa
jg
lcall
imulb
test
pushl
sub
cmpsl
push
in
icebp
sub
lret
xor
test
dec
aaa
or
mov
les
jmp
fstl
jmp
sbb
stos
inc
lea
andb
mov
push
dec
outsb
out
mov
sub
movsl
mov
and
fstps
jl
and
adc
dec
mov
pop
mov
and
or
mov
pusha
das
jae
in
jg
ja
insl
mov
popa
lods
cmpb
lcall
movsb
rcll
lods
andb
xor
mov
mov
movb
clc
sbb
jp
inc
add
int3
mov
mov
lea
pop
mov
xchg
push
pop
or
repnz
aaa
cmp
push
lock
mov
and
adc
bound
pop
pushf
aas
outsb
sub
sbb
test
movsb
jp
dec
add
mov
lahf
loopne
popa
sub
xor
jl
jbe
mov
fldt
outsb
mov
es
stos
pop
lock
clc
and
sbbl
add
jne
fwait
lret
mov
mul
or
lret
mov
sub
repnz
int3
iret
add
jg
and
rcrb
test
pop
adc
add
mov
sub
stc
or
add
leave
sarl
and
mov
add
fcompl
imull
int3
xchg
ja
sbb
int3
mov
push
mov
lds
pop
adc
xchg
pushf
sub
inc
and
stos
pop
mov
aad
sub
add
sub
and
and
pop
jp
xor
fdivrl
push
shll
mov
int3
sub
incl
loop
adc
dec
xor
push
mov
pop
gs
inc
mov
scas
in
movsb
mov
enter
sbbl
push
dec
mov
mov
dec
mov
push
data16
scas
mov
dec
and
xchg
mov
pop
pop
pop
adc
add
adc
outsb
sub
jmp
jns
pop
xor
lock
test
or
dec
int3
out
fdivr
or
push
fdecstp
pop
jbe,pt
clc
pop
popf
fcoml
adc
sub
adc
sbbb
mov
sub
dec
pop
loope
add
pusha
dec
fbld
mov
jnp
jns
out
fwait
call
mov
and
or
push
push
push
sub
jl
sub
int
cmp
aaa
adc
sbb
roll
int
jne
jp
mov
test
orb
idivb
or
cmp
push
sbb
test
inc
aas
shll
mov
pop
mov
xor
lods
icebp
fwait
xor
dec
and
cmp
je
fwait
mov
jb
test
dec
sub
stos
adcl
sahf
sub
test
insl
fwait
xor
shlb
aaa
inc
rcrb
dec
or
cwtl
cs
adc
testb
jmp
frstpm(287
jge
cmp
mov
push
inc
or
es
iret
in
jne
xchg
pop
xor
mov
lret
sub
mov
addr16
dec
jns
mov
push
pop
fistps
shrl
fisttpl
testl
sub
xchg
cmp
sub
out
pop
fimuls
ret
xchg
pop
inc
in
out
xlat
adc
repz
mov
fnstsw
jbe
push
leave
cmp
enter
jge
adc
jbe
scas
inc
inc
lock
dec
dec
ret
lods
enter
outsl
dec
imul
cmp
sub
sbb
mov
sbb
mov
inc
jnp
aad
sbb
and
pop
mov
push
in
jno
das
aad
dec
std
int3
pop
and
mov
cmp
adc
out
sub
mov
hlt
mov
xor
les
push
xlat
repnz
stos
ds
mov
push
sahf
and
inc
loopne
xor
int
fistl
ret
xor
inc
and
push
mov
xchg
xor
loope
popl
xchg
pop
iret
add
test
push
loop
pop
sub
xchg
dec
sbbb
fwait
and
out
aam
xchg
jnp
stos
les
sub
push
ja
insb
fisubrs
or
iret
popf
nop
movsl
scas
xchg
popa
cmp
push
adc
das
dec
pop
jmp
xchg
rclb
xchg
lods
popf
int
cmc
popf
or
lret
fistps
pusha
cs
mov
out
shrl
mov
test
mov
jo
cmp
mov
leave
in
sarb
fstl
mov
fisubrs
add
lods
adc
shll
add
dec
xchg
inc
fucom
popa
adc
daa
dec
adc
pop
scas
movsl
push
iret
mov
lcall
or
adc
and
add
or
cmpsl
add
push
jge
fcmovb
daa
dec
xchg
call
mov
add
pop
loope
mov
repnz
cmp
adc
js
mov
into
lahf
mov
jno
sbb
rolb
lds
out
fwait
dec
mov
imul
push
mov
pushf
sarl
jl
popf
xor
xchg
xchg
push
out
sbb
rorl
pop
inc
js
sub
stc
subb
out
es
jmp
out
push
mov
lahf
rolb
jne
mov
enter
cmp
or
inc
mov
fwait
nop
jmp
data16
lahf
int
scas
ja
fwait
popf
into
outsb
sbb
dec
inc
sbb
xor
pop
stos
or
pushf
ss
roll
popf
xor
xlat
cld
mov
mov
lcall
jbe
adc
sbb
mov
cs
push
mov
test
out
hlt
or
insl
jbe
imul
or
in
or
push
stos
sbb
and
popa
in
sarb
sbb
lea
pop
dec
insl
lret
inc
lret
scas
push
add
lods
ret
out
mov
jmp
dec
iret
mov
in
xchg
or
cmc
mov
mov
fidivs
ds
pop
leave
xor
sub
sub
mull
pop
in
repz
jmp
mov
mov
je
pcmpeqd
and
adc
cmp
out
xorb
in
or
pusha
or
mov
dec
sbb
gs
adc
pminub
jae
fmull
dec
jge
bound
mov
addr16
push
scas
xchg
mov
out
and
inc
or
and
mov
arpl
daa
push
push
jl
inc
jmp
test
les
jne
push
and
test
push
add
mov
pusha
insl
mov
or
inc
imul
icebp
stos
jp
cmc
sbb
adc
leave
iret
movsb
xor
pop
imul
insl
loop
scas
push
and
add
roll
push
sub
stos
jecxz
gs
jecxz
jae
push
jmp
pop
das
in
idiv
sbb
stos
pop
jle
inc
sahf
ss
jbe
pop
scas
test
xlat
xchg
xchg
sbb
divb
andb
sbb
pop
mov
fs
repnz
outsb
lea
jl
mov
in
jle
je
clc
cmp
adcl
aas
add
cli
les
mov
dec
stos
idivb
cli
cmp
es
and
dec
outsl
scas
mov
mov
inc
pushl
loop
cmpsl
cmp
mov
scas
push
inc
mov
push
sub
arpl
cmpsb
mov
cltd
andb
ds
jl
inc
xchg
push
les
pop
test
xor
pop
pop
dec
in
dec
xchg
xor
mov
add
stc
stos
loop
cmpsb
shlb
ret
mov
in
cs
sbb
jae
jecxz
push
pusha
arpl
fsubl
mov
sbb
lret
cmc
and
pop
mov
ds
xchg
inc
pop
movsl
mov
ja
pop
fnsave
enter
cmp
cmp
imul
cmpb
movsl
sahf
jno
push
ret
mov
test
in
cmp
cmp
xor
call
fstpt
ret
inc
push
mov
and
mov
in
xchg
insb
popa
test
xor
xchg
repz
or
int
lods
dec
sti
dec
fisubs
insl
pop
scas
adcb
js
lcall
pop
push
cmp
dec
push
icebp
sbb
jbe
and
dec
inc
das
mov
ja
ret
push
xchg
sbb
jns
test
mov
xor
pop
cs
inc
ret
jb
sub
insl
inc
mov
sti
aas
pop
call
lret
sub
int
aaa
sbb
xchg
cmpsb
call
sub
dec
mov
fsubr
js
push
push
add
or
scas
aad
js
enter
mov
test
sbb
stc
jmp
lock
gs
icebp
mov
mov
fdivs
cmc
cmpsb
into
jle
jge
cwtl
dec
fmull
or
jb
add
xchg
pop
dec
aam
xor
cmp
mov
arpl
rorb
bnd
int3
mov
das
into
inc
stos
addb
ds
or
loop
lock
jne
mov
push
rcrl
cmp
test
mov
in
ret
pop
cmp
scas
mov
aaa
jno
test
les
add
sub
xchg
cmc
gs
push
sti
or
adc
js
andb
sti
insb
mov
pop
imul
pop
cmp
subl
jmp
or
adc
add
std
and
inc
add
ret
cltd
inc
jl
jae
mov
fcomi
repz
lds
int3
in
aam
add
or
fistpl
lock
dec
jle
jo
loope
stos
cmovp
loope
push
int
roll
scas
jbe
scas
das
test
fwait
jp
dec
jnp
add
inc
aaa
mov
cmp
andl
out
xor
test
add
outsb
mov
test
adc
in
js
sbb
out
insl
lea
xchg
or
das
aad
fidivs
or
add
lret
inc
mov
sti
test
cs
fisubs
mov
mov
mov
lcall
mov
jbe
das
das
inc
or
je
add
je
mov
cmp
in
cli
mov
jae
mov
cmp
mov
bound
lcall
lods
sbb
mov
rcl
outsl
xor
xchg
push
repnz
jge
cmp
xor
outsl
dec
leave
push
dec
fsubrl
and
adc
daa
inc
dec
mov
testb
xor
pop
fbstp
xlat
shlb
inc
dec
sbb
loopne
out
mov
ljmp
repnz
xchg
test
out
xor
shll
pop
inc
mov
icebp
lock
lds
lcall
cmp
popa
imul
dec
fdivr
inc
mov
pop
fnstcw
xchg
mov
mov
test
cld
lds
jnp
mov
hlt
js
dec
jmp
dec
fcompl
jnp
fs
mov
lret
ja
push
xlat
jl
mov
scas
inc
popa
out
ja
or
xlat
mov
xor
sbb
or
pop
loop
cltd
decl
fimull
pushf
pop
xor
cmp
mov
cmp
mov
mov
rol
arpl
stos
ficomps
aam
rcr
sub
repnz
xchg
push
fcoml
or
cmp
sbb
lret
jbe
mov
nop
xlat
mov
cmp
cmp
jb
das
stos
leave
das
les
xchg
add
adcl
in
inc
enter
cltd
pusha
pop
cltd
decl
aaa
push
cmp
pop
sbb
lahf
push
or
and
or
push
add
mov
fsubrs
mov
das
fwait
mov
add
icebp
movsl
fmull
aas
xchg
out
mov
xchg
cltd
sub
out
cmp
cwtl
lret
cmpsl
push
mov
mov
ss
sbb
arpl
mov
jne
push
mov
jge
or
or
pusha
je
mov
shll
lret
daa
and
or
pop
mov
cmp
imul
sbb
enter
mov
cltd
arpl
out
xor
jns
insb
adcb
mov
xor
stos
fmull
ret
js
sub
cmp
xchg
and
movsb
push
in
stos
in
fcmovu
sub
testb
pop
jo
cmp
shll
mov
mov
jo
rorb
js
jle
lret
outsl
shrl
dec
das
inc
popf
lea
lcall
pop
aaa
and
sbb
loop
das
push
sub
fstl
shlb
dec
int
adc
repnz
fisubrs
aas
mov
mov
jmp
pop
pop
lcall
sub
sahf
xchg
aas
loopne
inc
dec
dec
repnz
lods
mov
dec
es
in
mov
mov
jmp
lds
sbb
repnz
jp
jno
xchg
adc
sbbl
dec
shlb
popa
sti
iret
shll
insl
jae
fdivr
nopl
cmc
mov
jecxz
andl
sarl
xchg
push
pusha
add
or
push
pop
dec
lods
mov
in
insl
fst
xchg
inc
sub
arpl
clc
dec
dec
jns
loope
outsl
lea
sub
inc
jbe
sti
rol
daa
sbb
xchg
jno
lods
lret
sbb
adc
add
adc
fimull
int
std
push
scas
push
mov
cwtl
jo
stos
push
mov
push
out
pushf
cwtl
les
push
or
repz
jae
xlat
sub
inc
sti
sbb
sbb
or
lahf
cli
sarb
jno
dec
pop
es
jge
mov
push
pop
ret
stos
cmp
stc
je
jno
aam
icebp
aaa
loopne
sbb
dec
aas
scas
jo
push
lds
add
pop
mov
sbb
sti
mov
sbb
mov
lods
mov
mov
cwtl
jmp
jge
pushf
adc
cmp
push
ss
repnz
sub
orb
in
push
push
jo
fs
out
mov
sbb
jge
int
add
aas
push
stc
les
xor
xchg
imulb
sbb
faddl
push
jmp
mov
pop
sbb
jae
add
loop
mov
mov
pop
rcrb
fcmovnb
mov
ljmp
adc
push
sbb
out
inc
loope
ss
and
add
push
mov
inc
fstpl
pusha
mov
lds
lds
jae
arpl
jge
jno
pop
int
or
mov
pushl
pushf
loop
add
xchg
rcr
inc
jns
aad
xor
dec
dec
push
jne
shrb
movsl
pop
mov
pusha
pop
into
daa
lock
into
in
mov
push
jne
jmp
stos
subb
rcl
test
dec
push
aaa
cli
iret
sbb
sub
adc
out
mov
rclb
mov
mov
mov
xor
push
shlb
jne
in
xchg
pushf
adc
clc
xor
cmpl
sbb
lds
stc
into
je
pusha
add
xchg
jle
lea
imul
aam
daa
mov
pushf
mov
or
imul
call
jle
xchg
mov
dec
sbb
scas
dec
les
mov
popa
mov
pop
xor
sub
mov
cmc
ret
jecxz
jbe
sub
in
mov
jno
je
xor
cmp
aas
fisttpll
cmp
pop
mov
out
xor
adc
pop
popa
cmpsl
pop
das
xchg
cmp
je
addr16
pop
scas
mov
mov
scas
stos
out
mov
push
push
or
inc
cmp
adc
daa
clc
out
arpl
pop
jecxz
shlb
mov
orb
fwait
adc
xchg
testb
fidivl
pop
and
push
adc
int
addr16
call
aaa
xlat
adc
mov
pop
shlb
or
mov
enter
cmp
xorb
insb
adc
push
adcb
stos
xor
push
cli
pop
int
xor
pop
das
mov
adc
mov
xchg
add
pop
pop
jae
mov
fcmovne
fsubrp
out
nop
xchg
ja
push
daa
add
push
in
inc
push
or
lcall
or
je
pop
pushf
aad
or
add
push
push
stc
add
xor
inc
or
mov
inc
mov
cwtl
sub
ror
int3
imul
add
inc
xchg
sub
dec
adc
sbb
pusha
int
mov
aam
repnz
jmp
lods
aad
aad
sub
jge
sub
stos
pop
fstpt
int
call
pop
mov
mov
cli
scas
jno
out
lds
stos
xchg
lret
add
xchg
mov
in
push
sbb
or
loope
inc
popa
pop
cmp
cwtl
fwait
or
jge
popf
testb
vpminub
adc
adc
aaa
jnp
ret
dec
pop
add
gs
int3
and
mov
xchg
xchg
shrl
inc
dec
clc
popf
jo
mov
push
fidivl
cmp
push
int3
mov
lahf
or
scas
ficompl
cmp
push
adc
xlat
negl
adcb
inc
rdtsc
incb
mov
movsb
adc
cmp
ljmp
or
call
jnp
mov
jmp
mov
leave
and
inc
dec
leave
fldl
in
in
ja
sub
xor
popf
subl
out
ror
xlat
ret
fsts
pop
push
imul
xchg
aas
mov
xchg
stos
inc
repnz
dec
cmpsl
ds
adc
repnz
das
mov
fiadds
iret
repz
shll
ljmp
outsb
fisttpl
roll
mov
pop
insl
pop
outsb
pushf
mov
inc
sbb
pop
xchg
sub
xchg
jl
mov
sub
mov
mov
stos
fcmovb
jo
repz
jns
push
push
push
insl
push
daa
fisubs
outsb
dec
xchg
outsl
pop
dec
outsl
jnp
popf
sbbl
add
adc
push
repnz
xchg
lods
push
adcb
cld
mov
lret
add
dec
push
stos
fmull
ret
xchg
loope
xchg
sub
test
leave
loop
pop
call
sub
into
pusha
es
xchg
ret
push
push
sbb
jge
push
cwtl
cli
adc
xchg
lret
out
call
adc
cmc
and
mov
mov
orb
shll
movsb
xchg
aaa
dec
cmpsl
lcall
mov
cmp
sbb
inc
in
js
or
add
and
icebp
sub
hlt
stos
mov
xlat
push
fisttpll
mov
popf
adc
lcall
sbbb
loop
scas
nop
dec
sub
dec
push
push
rcr
mov
cmp
dec
cwtl
call
inc
jo
xor
mov
out
cmp
sarl
cmp
pop
lds
xchg
leave
stc
pusha
push
shrl
jecxz
iret
sar
sub
bound
idivb
mov
push
stc
pop
stos
xor
add
xchg
push
dec
lock
sbbb
adc
lods
mov
xor
mov
jp
sub
push
fcoml
popf
pop
cmpxchg
out
std
sahf
leave
cs
outsl
sbb
scas
je
inc
lods
push
mov
adc
xor
mov
pusha
jae
inc
cmp
and
dec
inc
mov
mov
dec
xlat
lock
inc
cmc
sahf
push
cmp
or
push
lret
mov
shll
call
push
imul
addr16
jns
jp
push
add
stc
jmp
sbb
lahf
fisubrl
test
sbb
scas
fcmovbe
sbb
cmp
aaa
loop
cmp
adc
add
and
gs
fwait
adc
push
xchg
xchg
jns
mov
fisubl
mov
xor
xchg
adc
loope
std
adc
movsb
dec
icebp
das
mov
jo
mov
cmc
add
cmp
xor
xor
insb
pop
pop
jno
mov
fbld
bound
es
fadd
cli
adc
push
mov
adc
add
mov
inc
adc
mov
and
hlt
out
jae
and
mov
push
xchg
dec
stos
jno
pushf
dec
jb
push
mov
insl
addr16
xor
aaa
dec
jbe
lret
mov
pop
mov
sub
fisubl
push
loope
lods
xchg
jg
add
icebp
xor
loopne
arpl
sbb
mov
ljmp
fsubrl
fstl
movsl
push
cmpl
les
adcl
mov
test
out
lods
cmp
lds
xor
movsb
daa
lock
and
xchg
popa
das
aad
jae
pushf
out
mov
and
imulb
cmovae
push
scas
push
orl
pop
cmp
jb
in
pop
sub
scas
aaa
xor
mov
aas
push
adc
cmpsb
cwtl
lock
fisubrs
xchg
inc
or
xlat
mov
ds
imul
insb
loope
scas
mov
and
xchg
adc
push
inc
sbb
jbe
fstps
fs
push
cs
cmp
rorl
sub
aaa
push
clc
fcoml
movsb
adc
sub
inc
dec
mov
movsl
jb
sti
xlat
xchg
sub
stos
lock
xor
jg
jo
sbb
loopne
cmp
cmp
pop
lea
sbb
push
test
pop
fstpl
mov
push
jl
stos
pop
mov
mov
adc
inc
cmpsl
test
or
and
or
out
adc
push
xchg
ljmp
jmp
xlat
sbb
inc
popa
add
and
mov
sub
mov
out
push
dec
loop
mov
mov
outsb
call
dec
sahf
mov
pop
or
jno
dec
sub
insl
xor
sub
in
sbb
jo
ret
inc
sub
fnstcw
xchg
out
push
jg
sarb
stos
xor
mov
and
outsl
cli
jle
mov
mov
mov
cld
adc
sbb
test
sub
add
out
sbb
in
mov
fnstcw
and
mov
or
jmp
mov
adc
shll
pop
inc
dec
popf
aas
cltd
leave
fiadds
in
insl
test
mov
out
scas
popa
mov
imul
test
movsb
cmc
xor
and
mov
mov
adc
pop
aas
rorb
jecxz
repnz
mov
and
enter
dec
inc
pop
mov
mov
jmp
loop
xor
std
out
jecxz
push
das
hlt
orl
lcall
sub
shl
ds
xchg
mov
xchg
int3
jle
xor
jle
inc
mov
or
test
jno
lods
sbb
insl
xor
push
fs
dec
add
cmp
xlat
faddp
ret
pusha
ja
push
mov
mov
dec
sahf
dec
and
push
push
lret
adc
xchg
jmp
in
movsb
movsb
ja
add
call
sbb
outsl
sbb
cmp
dec
lods
dec
inc
pop
mov
notb
mov
leave
fdivrp
shll
cmpsb
mov
cwtl
mov
outsb
push
fwait
std
add
sbb
fisubrs
xor
js
add
xor
dec
aam
aad
xchg
lret
push
mov
mov
lds
and
outsl
cmpsb
mov
or
jmp
jbe
fcmove
ret
jae
or
enter
pop
mov
lock
adc
nop
xchg
data16
popf
fsubr
cmp
add
jg
lds
out
push
inc
je
cs
scas
lods
mov
pop
icebp
daa
in
daa
mov
das
fadds
ljmp
ret
ja
or
leave
dec
pop
mov
inc
pusha
mov
cmpl
cmpsb
jp
inc
mov
test
mov
mov
add
lods
inc
lret
into
push
inc
push
lahf
pop
rcrb
daa
jne
int3
xchg
repnz
dec
mov
inc
and
fnsave
pop
lahf
sbbl
sar
push
push
fnsave
cmp
xchg
addl
mov
scas
pop
les
xchg
enter
jb
inc
push
pop
rcll
jb
outsl
fldt
push
imul
ss
lcall
fyl2xp1
in
sub
outsl
xlat
mov
cwtl
movsl
loopne
rclb
pop
aad
aas
xchg
xor
data16
repnz
test
nop
cmp
cmpsb
xor
jbe
push
test
jb
mov
imul
pop
mov
scas
jbe
clc
in
ret
sub
and
cwtl
fdivr
enter
pop
add
fwait
test
mov
scas
iret
cmp
int
loop
lret
shr
mov
and
cmp
mov
push
lfs
xor
xchg
mov
ds
jp
push
sub
xor
data16
outsb
rcrl
int3
loopne
test
mov
std
cmpsb
ds
shr
and
and
arpl
adc
roll
mov
out
inc
ljmp
or
inc
das
lods
lcall
xor
mov
je
cmp
jecxz
jp
mov
test
loopne
mov
add
pop
sti
ss
out
dec
push
pusha
mov
adc
sub
adc
fmuls
repnz
fldenv
xor
mov
aaa
sbb
and
loopne
imul
mov
xchg
mov
push
aad
sub
push
les
pop
shl
jl
mov
adc
in
add
jo
ret
ja
rorb
jmp
or
pop
repnz
mov
and
cmp
mov
divb
xlat
popa
andb
out
xor
ficomps
daa
dec
xor
mov
add
ss
pop
mov
cmpsb
or
cmc
les
aad
mov
xchg
sbb
mov
sti
fidivl
pop
shrb
inc
jno
popa
sbb
imul
bound
test
mov
cmp
fmull
cmp
sbb
adc
mov
adc
mov
shlb
not
sbb
mov
inc
mov
jl
inc
or
lcall
hlt
mov
dec
or
jg
ss
sbb
mov
ds
fcoml
push
cmpsb
inc
in
ljmp
inc
sub
push
mov
shll
movsb
js
pop
mov
loop
out
or
sub
loope
fisubs
aad
xchg
pop
std
fisubs
fimuls
mov
mov
ds
jne
jecxz
sub
lods
jmp
inc
shll
add
adc
jmp
adc
mov
je
inc
adc
popf
dec
and
cmp
and
mov
cmpsl
lret
jno
fstp
jne
lea
mov
jb
dec
mov
xor
fimull
inc
popa
add
movsb
add
lret
mov
or
insb
xor
push
sbb
mov
adc
cmpsb
lods
xor
aam
jbe
shl
sbb
add
and
mov
inc
mov
add
push
lahf
pop
jl
push
cmp
insl
mov
jg
sub
jp
popf
mov
lea
into
pop
sahf
loop
xor
fwait
hlt
gs
lcall
mov
loope
push
or
lea
int3
mov
mov
testb
pop
sahf
je
adc
ljmp
aad
pop
jecxz
movsb
sarl
add
fs
fisubl
xchg
test
cmp
adc
bound
inc
cwtl
test
adc
inc
insb
inc
cmp
fwait
stos
fimuls
test
dec
cmpsl
mov
jb
fdiv
jg
lahf
add
or
rclb
jne
aam
sub
test
or
sub
lods
mov
dec
sti
lret
jnp
les
dec
xor
mov
xchg
jbe
jno
fsubrs
shlb
fisubrs
pop
xchg
jge
enter
test
movsl
test
jmp
out
sbb
enter
dec
sbbl
daa
pop
std
cltd
adc
imul
mov
incl
xorps
jbe
movsl
cli
ficomps
fld
notl
les
outsb
sbb
sub
fwait
mov
add
add
outsl
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
je
add
add
add
add
add
add
add
add
lcall
add
xor
add
add
sub
add
sbb
add
xchg
dec
add
js
add
loopne
add
cwtl
push
add
add
add
add
add
push
add
add
je
add
je
add
je
add
jne
add
jne
add
jne
add
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
dec
gs
outsl
popa
add
popa
jb
dec
outsl
outsl
imul
je
jo
outsl
outsl
imul
outsb
insb
outsl
popa
fs
