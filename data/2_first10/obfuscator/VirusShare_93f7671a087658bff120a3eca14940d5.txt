mov
add
jo
add
cmp
ljmp
push
add
arpl
add
das
das
add
or
sbb
fwait
fwait
jmp
sbb
call
into
push
add
mov
es
add
incl
mov
add
add
mov
add
add
incl
add
jmp
out
aas
jae
enter
add
incl
add
cmp
cmp
decl
decl
lcall
add
call
adc
adc
incl
incl
loopne
loopne
cli
add
jmp
mov
pusha
decl
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
push
add
fdivr
incl
add
incl
incl
add
inc
mov
add
add
add
add
add
sbb
sbb
incl
add
incl
add
pushl
and
add
add
add
add
aaa
incl
add
push
repz
add
add
jmp
add
je
add
add
incl
call
decl
incl
add
add
incl
call
incl
push
push
push
cwtl
incl
incl
adc
incl
add
incl
add
call
adc
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
call
incl
add
incl
incl
jmp
add
incl
add
incl
incl
add
incl
decl
incl
incl
add
add
mov
incl
add
add
incl
add
incl
mov
incl
add
incl
add
incl
mov
mov
incl
incl
add
incl
incl
add
incl
add
incl
add
lcall
add
incl
add
incl
add
add
add
incl
incl
incl
incl
incl
mov
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
jmp
cmp
cmp
mov
add
cmpsb
cmpsb
cmpsb
cmpsb
add
add
add
add
add
xor
add
add
add
lcall
incl
incl
add
add
incl
incl
add
add
add
add
add
add
add
add
add
decl
add
add
add
add
add
add
add
add
incl
add
add
add
call
rcl
incl
add
incl
incl
incl
incl
incl
add
incl
add
add
incl
incl
incl
incl
add
add
incl
incl
add
incl
add
add
incl
incl
add
incl
incl
incl
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
incl
incl
popf
popf
incl
ljmp
sub
add
incl
incl
add
incl
incl
incl
add
incl
incl
incl
add
incl
add
incl
roll
add
add
incl
fcomp
add
add
add
incl
incl
add
incl
je
incl
add
incl
incl
add
add
incl
incl
add
incl
incl
add
incl
incl
incl
incl
incl
incl
add
incl
dec
add
add
incl
incl
incl
add
add
incl
incl
add
add
incl
add
call
incl
add
add
incl
add
incl
incl
lcall
incl
add
incl
add
incl
add
add
incl
add
add
incl
incl
add
add
add
add
incl
incl
incl
fsubp
incl
dec
add
add
add
add
add
add
add
add
add
incl
incl
add
incl
incl
add
add
and
and
incl
incl
add
incl
incl
add
add
incl
incl
incl
inc
rolb
add
add
add
add
add
incl
add
incl
rolb
incl
add
incl
incl
add
add
add
incl
incl
add
incl
incl
incl
add
imul
incl
add
add
incl
add
push
add
add
add
add
sbb
sbb
add
add
add
incl
cmp
add
incl
incl
add
add
add
incl
add
incl
incl
pushl
add
add
cld
cld
cld
cld
incl
add
incl
incl
incl
add
add
in
add
add
incl
incl
add
adc
adc
pushl
mov
incl
incl
incl
incl
add
ds
add
add
incl
incl
add
add
pushf
pushf
pushf
pushf
lcall
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
incl
add
add
add
incl
incl
incl
incl
add
add
incl
add
add
incl
incl
incl
incl
incl
incl
incl
add
add
add
incl
incl
add
incl
add
incl
add
incl
incl
add
incl
ljmp
pop
pop
incl
incl
add
incl
testb
mov
incl
add
incl
add
add
add
incl
incl
add
incl
add
incl
incl
add
add
incl
incl
add
incl
incl
add
incl
add
incl
add
add
incl
add
add
incl
add
add
incl
incl
add
add
add
incl
incl
incl
incl
call
incl
incl
add
incl
add
incl
add
add
add
incl
incl
incl
lods
lods
lods
lods
lods
lods
lods
add
jmp
incl
incl
add
incl
add
enter
incl
add
add
add
incl
incl
add
add
incl
add
incl
add
add
incl
incl
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
mov
incl
incl
incl
add
incl
incl
incl
add
add
incl
add
incl
incl
add
incl
incl
add
incl
add
add
incl
incl
incl
incl
incl
add
add
add
incl
incl
add
incl
incl
add
incl
add
incl
add
incl
add
add
incl
incl
incl
add
incl
add
add
incl
incl
add
add
incl
incl
incl
incl
add
incl
incl
incl
cld
cld
cld
cld
cld
cld
cld
cld
incl
incl
add
incl
incl
out
add
incl
decl
push
add
incl
incl
add
add
add
incl
add
add
incl
add
incl
incl
add
incl
incl
add
add
incl
incl
incl
add
incl
incl
incl
incl
add
incl
call
rcl
incl
add
add
incl
incl
incl
add
sbb
add
incl
incl
add
incl
add
incl
add
incl
add
add
incl
add
incl
incl
add
incl
incl
incl
incl
add
add
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
pushl
add
incl
call
incl
add
incl
add
add
incl
add
incl
add
add
incl
add
incl
incl
incl
call
decl
add
add
add
incl
add
incl
incl
add
incl
decl
or
add
add
add
add
incl
incl
incl
incl
incl
add
jmp
incl
incl
incl
incl
add
incl
add
add
add
lcall
add
add
add
add
add
add
add
add
fdivrp
incl
add
add
incl
incl
add
add
add
incl
add
add
incl
add
add
incl
add
incl
incl
incl
incl
add
add
add
incl
add
add
add
incl
incl
incl
incl
incl
incl
add
incl
add
add
add
incl
incl
add
incl
incl
add
add
incl
add
incl
add
incl
incl
add
add
incl
add
add
add
incl
incl
add
incl
add
incl
incl
incl
incl
add
add
add
incl
add
incl
incl
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
add
incl
add
incl
add
incl
add
incl
incl
add
add
add
incl
incl
add
add
add
incl
incl
incl
add
add
incl
add
incl
incl
incl
add
incl
incl
add
add
incl
add
incl
incl
add
incl
incl
incl
add
add
incl
incl
incl
incl
incl
add
incl
add
incl
add
incl
incl
add
add
add
incl
add
add
cmp
cmp
incl
call
push
push
add
incl
add
incl
add
add
incl
incl
add
add
mov
add
incl
incl
incl
add
incl
incl
incl
add
add
incl
incl
incl
add
incl
add
add
incl
incl
incl
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
incl
incl
incl
call
aad
aad
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
add
add
incl
incl
add
incl
add
incl
add
incl
add
incl
incl
incl
add
incl
add
add
incl
add
add
incl
incl
incl
add
dec
dec
incl
incl
incl
add
incl
add
add
incl
incl
incl
incl
incl
add
incl
add
incl
add
incl
incl
incl
add
incl
incl
add
incl
incl
add
incl
add
incl
incl
add
incl
add
incl
add
add
incl
incl
add
incl
incl
add
incl
add
incl
incl
incl
add
incl
add
sub
add
add
incl
incl
add
add
incl
incl
add
add
incl
add
incl
incl
add
incl
add
add
incl
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
incl
incl
call
add
add
add
add
incl
sub
add
add
mov
roll
mov
add
aam
lea
add
sti
xor
sti
filds
add
add
sbbl
sbb
inc
sti
loopne
jg
roll
add
xchg
in
add
mov
cmp
fiadds
add
cmp
add
jle
or
lods
fadds
and
hlt
sub
mov
faddp
nop
push
cmpsl
mov
inc
add
lret
inc
mov
jge
add
and
ret
add
jp
addb
nop
pop
add
add
sbb
iret
mov
add
mov
cli
jne
and
jge
xor
lcall
add
cmp
adc
xor
add
cmp
fcoms
loope
add
push
add
aaa
loop
add
add
sub
nop
dec
add
fadds
dec
pop
test
jns
inc
mov
push
xchg
xor
mov
sub
sbb
out
cmc
js
icebp
repnz
add
nop
push
add
cmp
outsb
out
mov
mov
push
pop
jne
sbb
sbb
dec
flds
pop
nop
ja
mov
add
dec
add
add
pop
add
add
jl
std
stc
push
add
and
cmp
push
add
js
add
cmp
or
cltd
nop
idivb
push
mov
mov
addb
add
sbb
mov
adc
push
add
pop
nop
mov
push
add
ret
sub
lods
mov
aad
mov
add
xchg
add
popa
push
nop
xchg
add
push
nop
aas
test
add
add
add
imulb
add
pop
sbb
es
cmp
nop
jo
xchg
xchg
pop
popa
std
pop
nop
fldl
xchg
aam
pop
and
pop
adc
mov
add
pushf
add
add
add
mov
sub
pop
and
sahf
movsl
and
jl
nop
add
popa
sub
pop
push
mov
inc
add
cs
jl
insb
push
mov
add
add
inc
add
mov
nop
fs
add
inc
cltd
add
stos
adc
cmp
fldl
hlt
jb
adcl
and
add
outsb
adc
jne
mov
jno
data16
fstpt
addl
mov
inc
add
mov
nop
inc
cmp
cmc
add
jnp
call
nop
mov
nop
cltd
add
in
lret
fisttps
nop
xchg
mov
mov
or
and
adc
xchg
jns
push
fistps
push
ja
sbb
xchg
mov
ja
dec
aam
push
add
inc
das
pop
rcll
fsts
fsts
lahf
jno
add
add
in
nop
sub
jp
adc
pushf
add
push
add
pusha
sti
data16
mov
add
add
ret
nop
sbb
inc
addb
sub
pushf
nop
in
inc
add
fs
pusha
fidivrs
push
nop
mov
mov
les
xchg
fidivrl
pop
add
add
add
mov
fadds
dec
and
lods
js
movswl
add
mov
jns
adc
inc
stos
xor
jmp
adc
sti
xor
popa
pushf
add
lahf
adc
jge
out
xchg
dec
movsb
sub
and
add
nop
jno
dec
arpl
xchg
and
in
jne
mov
std
push
sub
pop
push
xlat
add
fwait
push
nop
pop
add
add
out
aas
sbb
mov
cltd
add
add
or
add
xor
enter
push
rcll
in
sub
push
push
push
push
call
mov
lea
movl
movl
lea
movl
push
push
call
movzbl
cmpb
jne
mov
inc
push
push
call
not
test
je
nop
into
clc
not
mov
sub
add
cld
lea
mov
lea
mov
mov
shr
stc
push
push
push
push
call
push
out
pop
cmp
cmp
ficomps
pop
add
add
out
iret
adc
pusha
push
ficomps
sahf
adc
lcall
repz
sarb
xor
daa
adc
add
pop
push
push
jmp
add
adc
out
jae
pop
nop
jnp
adc
lahf
pusha
scas
test
cmpsl
lods
cltd
add
push
nop
jle
push
add
sub
rclb
addb
lods
mov
nop
fadds
movsl
jmp
inc
mov
push
in
mov
pop
nop
mov
and
nop
inc
add
jb
mov
nop
scas
rcll
dec
xor
rcll
pop
hlt
cltd
add
clc
xor
nop
test
cmp
add
add
add
sbb
mov
stos
int
push
es
stos
test
dec
cmpsb
sbb
test
out
leave
add
fcmovnb
cmp
lock
inc
adcb
mov
add
ja
dec
add
add
out
sti
int3
nop
mov
nop
outsb
xlat
out
jp
dec
nop
mov
cmpl
mov
lret
adc
je
mov
into
pop
nop
xor
and
dec
cmc
pop
push
add
in
repnz
mov
inc
cld
leave
nop
pop
add
or
gs
cwtl
add
sbb
insl
lods
inc
add
jae
xor
nop
xor
xchg
hlt
into
cmc
cli
es
nop
data16
sbb
popf
add
sub
jg
add
mov
add
xchg
dec
nop
mov
pop
add
nop
mov
cltd
add
in
dec
lds
xchg
nop
outsb
sbb
mov
mov
lret
lret
das
sbb
nop
pop
lods
faddl
xor
add
fistps
inc
xor
push
in
inc
mov
xchg
mov
in
add
in
sarl
add
ret
cltd
nop
sub
repnz
add
push
test
dec
mov
movsl
jp
sbb
jnp
pushf
add
mov
int
movsl
loope
aam
leave
add
movsl
cwtl
add
add
and
ret
cmp
repnz
nop
jmp
mov
jmp
add
aas
data16
nop
add
cmpb
add
fcompp
nop
dec
subb
push
pop
add
dec
add
in
addb
cwtl
add
add
push
mov
add
pop
push
nop
ds
cwtl
add
add
sub
test
add
out
push
repnz
mov
out
cli
ds
movsl
mov
nop
ret
push
mov
into
cmp
out
and
jl
nop
dec
add
mov
pop
nop
add
and
push
add
inc
add
add
dec
add
nop
lahf
push
add
mov
addl
sbb
and
add
mov
add
and
mov
mov
ret
bound
arpl
jb
add
ljmp
mov
add
test
nop
cmp
pop
add
add
fidivrs
push
push
inc
add
or
xchg
nop
xchg
add
add
int3
add
inc
add
add
mov
pop
xor
je
rclb
dec
add
mov
call
mov
mov
push
loopne
les
sbb
cmpsl
jnp
mov
inc
mov
mov
adc
jmp
xchg
add
jae
mov
negb
cld
pop
nop
fiadds
mov
sahf
mov
mov
sbb
cmp
push
fwait
cmp
inc
mov
in
xchg
cli
ds
add
fstl
rcll
in
add
add
dec
add
movsb
push
mov
or
and
int
sbb
out
add
cmp
or
lahf
xchg
dec
je
addb
add
xor
js
add
add
nop
adc
fadds
sbb
add
and
add
add
add
scas
xchg
aam
lds
mov
pop
add
gs
jecxz
jae
ret
add
xchg
jbe
repz
nop
roll
fisttps
mov
inc
fiadds
addl
loopne
lds
jecxz
lea
xchg
add
inc
push
jecxz
lret
inc
mov
stos
ja
lahf
sub
outsb
xchg
jp
mov
adc
cmp
inc
nop
dec
rcll
add
lcall
nop
or
inc
xchg
movsl
loopne
call
test
lret
addb
push
mov
nop
repnz
ja
rcll
pop
mov
add
addb
pop
add
nop
add
stos
and
or
ss
add
flds
cmp
ret
push
add
cmpsl
dec
nop
movsb
les
lret
mov
fwait
lods
inc
add
aam
inc
cmpsb
rcll
popf
nop
scas
les
das
cmpsl
leave
add
pop
nop
addr16
adc
rcrl
cli
fs
add
jmp
nop
fldl
popf
add
cli
mov
add
nop
inc
rclb
add
dec
dec
pop
rolb
out
aam
pop
inc
add
ja
cmp
sub
sbb
mov
inc
add
nop
mov
das
mov
mov
nop
icebp
mov
pop
push
sbb
xor
cmp
jb
in
mov
add
cltd
add
mov
daa
push
out
cmp
imull
add
pop
jo
nop
test
inc
add
enter
fldl
fadds
insl
cs
inc
jne
jp
add
ror
add
add
flds
lods
sbb
ret
xor
cmp
je
dec
add
nop
nop
out
cmpsb
rclb
and
ja
mov
jl
jecxz
inc
add
notl
cmpsb
movsb
outsb
or
jno
or
adc
push
add
xchg
lea
test
insb
loope
add
add
sbb
mov
mov
rolb
stos
or
cld
sbb
adcb
nop
pushf
add
lds
ljmp
nop
jbe
movsl
add
test
mov
sbb
addr16
mov
cltd
add
sbb
outsl
jg
nop
scas
mov
jl
outsl
mov
rclb
ljmp
add
nop
jg
nop
mov
mov
ljmp
and
int3
add
out
add
sbb
sbb
adcl
mov
icebp
inc
pop
lods
out
jno
inc
add
add
filds
pushf
add
mov
xchg
sbb
insl
lahf
cmp
aad
ljmp
sbb
cli
jb
fcmovbe
stc
roll
mov
add
stos
nop
add
aas
test
push
test
add
dec
nop
cmp
nop
push
je
pop
jl
out
xor
ss
add
cli
and
nop
and
inc
imul
scas
test
mov
add
adc
mov
fs
add
in
test
fcoms
mov
push
outsb
aam
lds
jp
add
jp
nop
cmp
pop
xchg
add
or
adc
sub
mov
test
jp
iret
or
sbb
lods
cmp
add
stos
inc
add
add
push
nop
add
mov
call
add
jg
add
add
flds
push
nop
push
add
add
arpl
jle
pop
add
xor
cwtl
add
dec
out
nop
and
add
outsb
sbb
xchg
test
rcll
mov
mov
xchg
outsl
xor
rolb
mov
rcll
ret
add
nop
popl
test
lds
lahf
adc
cmp
daa
adc
inc
popf
add
and
mov
std
gs
nop
cmp
xchg
add
mov
es
insb
out
faddl
jbe
fisubrs
jo
nop
sub
add
icebp
mov
loopne
loop
hlt
jmp
dec
and
inc
dec
add
add
fidivl
rcll
mov
ss
inc
add
mov
mov
in
js
test
ret
das
xor
jne
mov
add
add
fwait
test
fwait
imul
add
js
addl
cmc
jne
add
jg
jno
mov
add
ficoms
jnp
pop
or
insb
pop
icebp
int
push
pop
mov
or
or
push
push
add
add
push
xchg
add
in
outsl
push
jge
int3
nop
xor
xor
fisubl
sbb
loop
jle
or
or
aas
sbb
in
lret
sub
bound
and
ss
xchg
sahf
mov
loop
or
lods
out
stos
fistl
nop
je
cld
sbb
into
push
sub
pop
fldt
arpl
xchg
nop
ret
pop
nop
add
pop
add
add
dec
in
movsl
mov
inc
clc
jo
pop
add
add
enter
call
je
add
faddl
push
xor
sub
fcomi
inc
nop
nop
jbe
push
add
nop
outsb
je
cmp
mov
nop
nop
and
lods
cmp
loopne
fisubrl
inc
add
cmp
add
sbb
mov
decl
push
ljmp
xor
add
movsb
fwait
pop
add
ret
add
loop
int3
nop
and
nop
jae
nop
push
fldl
cmpsb
adc
xor
add
add
jb
nop
pop
add
and
nop
mov
nop
loope
jno
dec
jge
sub
iret
inc
and
lahf
xchg
add
je
lcall
lods
dec
add
fsts
add
add
or
pop
add
push
add
add
mov
addl
or
test
fs
mov
push
add
nop
jge
jp
add
add
pusha
pop
add
push
add
add
push
xor
addb
nop
xchg
mov
cmc
lcall
ljmp
mov
inc
nop
adc
lock
xor
xchg
lds
flds
test
mov
mov
arpl
je
out
xor
jl
and
add
nop
add
and
nop
dec
test
add
mov
jo
nop
enter
scas
mov
add
sbb
sub
aaa
mov
cwtl
nop
out
lret
add
mov
mov
add
call
add
inc
adc
add
lock
push
inc
add
test
push
add
pop
jae
mov
push
jo
nop
fimuls
int3
nop
bound
mov
add
das
test
add
fistl
movsb
dec
add
nop
lds
rclb
nop
flds
add
jne
fildll
xor
mov
xchg
pop
out
in
out
and
mov
cmp
adc
in
fstpt
or
and
out
ret
cltd
nop
sub
popf
add
push
enter
addr16
add
adc
es
mov
pushl
iret
les
loop
rclb
dec
add
add
je
pop
mov
add
pop
out
add
movsl
adc
add
add
fsubrp
pushf
add
addb
nop
push
add
xor
cld
cmp
push
add
pop
add
nop
sbb
and
dec
lods
sbb
mov
sub
adcb
in
push
nop
dec
add
jae
pop
ret
les
mov
pop
add
cmp
add
xchg
nop
movsl
imulb
xor
int
js
outsb
std
lods
inc
add
add
nop
fs
add
add
inc
add
mov
outsb
dec
stos
pushf
add
and
es
nop
movsb
rclb
mov
ja
movsl
push
nop
dec
dec
cmpsb
push
add
jno
inc
std
insl
adc
mov
ljmp
add
test
cld
loopne
addb
nop
pop
add
or
rolb
lahf
ret
scas
fcoms
or
insb
dec
add
add
xor
ss
mov
jg
aam
or
inc
nop
outsb
in
mov
nop
mov
faddl
mov
lods
fwait
xlat
xor
add
enter
scas
push
test
in
xchg
add
jl
mov
data16
mov
mov
mov
add
sbb
nop
mov
repnz
jne
and
out
popa
adc
add
test
push
add
scas
push
int
dec
insb
adc
add
add
fwait
adc
shlb
xchg
nop
out
sub
lea
mov
ficomps
push
fucomi
xor
adcb
nop
int3
add
adc
push
and
out
pop
add
add
sti
subl
test
add
testl
and
add
pinsrw
scas
inc
nop
repz
nop
imul
mov
add
add
mov
jge
shlb
mov
out
adc
int
fstl
mov
xor
iret
mov
adc
push
mov
add
mov
nop
push
push
imul
add
stos
cmp
xor
sub
nop
mov
push
pop
push
nop
push
jo
cmpsl
popa
dec
mov
out
rcr
sti
jnp
add
roll
nop
ficomps
rolb
xchg
dec
xchg
nop
jae
lods
cltd
add
inc
mov
xchg
nop
loope
and
add
mov
adc
cmp
ret
addr16
mov
add
repz
pop
sbb
iret
jl
cwtl
add
cmp
pop
nop
flds
pop
add
push
push
mov
ret
scas
cli
inc
sub
add
sub
add
jle
nop
mov
push
xchg
cmp
add
dec
test
push
add
je
nop
shrl
mov
pop
nop
jnp
mov
sbb
pusha
fidivl
lret
mov
movsl
int
add
xor
lods
faddl
mov
pushf
add
mov
stos
in
and
rolb
pop
lret
mov
cmp
nop
push
add
add
outsl
call
daa
pop
adc
bound
add
outsb
int
mov
push
jne
mov
add
aas
push
loope
xor
add
out
lods
adc
pop
nop
roll
cmp
data16
and
mov
into
or
fs
add
pushf
nop
movsb
sbb
xor
mov
pusha
fcomi
jmp
push
push
sbb
xchg
nop
nop
add
fiaddl
mov
nop
nop
test
xchg
dec
mov
add
nop
dec
cld
push
lret
pop
inc
sub
mov
add
daa
mov
lds
lcall
jb
cmpl
inc
add
fwait
sbb
out
push
jne
sti
add
jecxz
lret
psllw
mov
sub
movsl
mov
dec
leave
add
out
iret
xlat
mov
lcall
test
jnp
mov
cltd
nop
mov
nop
xchg
add
fsts
test
flds
cld
pop
add
add
rclb
repnz
lcall
add
out
dec
nop
inc
in
faddl
out
sub
out
nop
add
add
jl
cmc
inc
test
add
mov
lahf
icebp
popa
fcoms
add
push
nop
jg
lods
in
in
popl
add
mov
nop
sub
xchg
add
xchg
imul
nop
pop
xor
icebp
lcall
fwait
push
push
push
mov
add
nop
jae
lea
arpl
stos
outsb
cmpsb
push
cs
sti
jo
pop
int
dec
lret
shrl
mov
sub
in
or
pop
nop
mov
push
nop
nop
mov
scas
pushf
add
xchg
add
rolb
jmp
pusha
aas
mov
fs
nop
daa
sbb
or
nop
jle
mov
nop
fidivrs
in
gs
and
flds
jp
ds
nop
lret
jmp
inc
popf
add
add
nop
fldl
nop
add
nop
call
or
mov
out
nop
dec
in
fisubl
inc
pop
xchg
fldt
adc
mov
mov
in
sbb
push
cmc
jge
cltd
nop
push
xchg
or
hlt
inc
jnp
add
xlat
mov
add
in
add
add
adcb
xchg
iret
hlt
cmc
dec
add
gs
add
dec
int
jl
cltd
add
mov
lret
mov
add
or
stc
das
inc
add
stos
adc
add
mov
fldl
and
aas
push
jmp
add
xchg
fadds
pop
repz
sbb
roll
lods
pop
xchg
movsl
cmp
clc
jg
add
and
xchg
add
push
add
lcall
xchg
add
xor
add
cwtl
add
pop
push
sub
in
std
es
negl
lds
jbe
dec
nop
bound
add
out
test
add
test
scas
push
add
rolb
dec
add
addl
nop
scas
pusha
lret
in
rolb
inc
add
xchg
cmp
adcb
hlt
ret
out
xor
sbb
cwtl
nop
leave
add
push
push
add
jecxz
add
leave
add
add
mov
adc
add
add
push
nop
sbb
fimull
pop
mov
popa
cli
test
mull
add
insb
add
insb
push
nop
push
lret
add
cmpsb
inc
nop
adc
stos
adc
inc
mov
pop
cltd
add
pop
sub
jo
cld
xchg
add
icebp
arpl
mov
sbb
jo,pt
fs
adc
sbb
dec
cwtl
add
or
mov
sti
push
enter
test
nop
inc
add
adc
sub
mov
add
mov
lock
add
or
hlt
int3
add
dec
lods
aaa
xlat
push
adc
addr16
idivl
xor
clc
pop
nop
aad
daa
xor
add
je
lods
mov
popa
inc
add
and
and
nop
sub
lret
pop
nop
roll
loop
xchg
je
sub
mov
aam
lock
icebp
clc
stc
xchg
rcll
adc
add
and
mov
nop
lds
add
sbb
sbb
cmp
and
bound
nop
push
push
xlat
aaa
ja
add
dec
addb
add
das
push
lret
or
addr16
dec
add
lahf
in
cmp
jge
nop
addr16
inc
add
sub
fiaddl
add
test
mov
mov
mov
jecxz
ss
sbb
ss
jg
add
sbb
jnp
add
dec
add
add
pop
or
add
ret
mov
dec
nop
call
nop
nop
add
add
sub
incb
cld
movsb
cmp
ljmp
nop
push
loope
add
add
mov
push
dec
nop
xchg
push
nop
cmp
arpl
nop
xor
add
jnp
and
cmp
imul
int
es
add
xchg
mov
pop
adc
mov
push
jp
mov
dec
or
cmp
fbstp
adc
repz
out
mov
addr16
js
sahf
lea
push
add
xchg
stos
dec
addb
nop
and
and
sbb
repnz
lock
repz
cmp
les
jne
sbb
lds
and
mov
push
nop
jo
add
sbb
js
mov
add
incl
mov
rclb
cmp
add
popf
nop
popa
lds
jns
add
les
push
int
in
nop
int
add
nop
aaa
test
dec
pushl
nop
nop
enter
jp
add
add
cmpsb
into
out
lcall
pop
mov
adc
add
add
cmc
adc
mov
repz
add
nop
nop
add
mov
xor
and
add
add
add
mov
push
add
xor
faddl
popf
add
add
jbe
popf
add
add
xor
sbb
mov
add
jmp
add
lods
sub
or
imul
idivb
mov
push
xchg
jno
repnz
loopne
dec
iret
mov
cld
and
cltd
add
cmpsl
in
gs
pop
add
add
aam
jg
adc
leave
nop
sti
jge
cli
xchg
nop
pop
add
add
out
out
mov
mov
loop
nop
scas
lods
aad
leave
nop
fwait
pop
loopne
lret
mov
push
add
nop
test
inc
add
call
jns
dec
add
pop
nop
add
mov
hlt
int3
add
nop
and
mov
mulb
add
mov
add
fidivs
inc
in
sbb
mov
nop
lods
mov
mov
xor
in
and
out
rolb
add
and
nop
xchg
add
inc
add
push
nop
cwtl
add
xor
fsts
in
or
push
insl
mov
sbb
lahf
in
mov
in
lock
cmp
mov
sbb
xchg
mov
dec
jb
sub
arpl
dec
add
cmpsb
add
lret
fwait
js
xor
cld
fwait
lahf
push
nop
and
lcall
sub
mov
ret
int3
add
cmpsl
cwtl
add
sub
nop
mov
imul
roll
nop
xchg
add
cmp
daa
add
cltd
add
jbe
pop
add
nop
mov
jecxz
fsts
push
push
add
repz
lds
loopne
int
inc
add
inc
add
mov
nop
test
add
test
arpl
mov
mov
test
outsb
les
insb
roll
jle
add
add
nop
aad
add
ljmp
jge
icebp
js
add
xor
add
jle,pt
rcll
nop
dec
mov
xchg
xchg
popf
add
mov
pop
das
sbb
add
add
push
pop
nop
push
sub
ret
cmp
dec
int3
add
add
dec
add
mov
int3
nop
mov
nop
xorl
lcall
loope
add
push
add
xlat
hlt
and
jae
test
pop
in
aaa
mov
test
test
pop
add
or
fldl
dec
sub
nop
add
cmp
mov
je
nop
notl
sbb
faddl
adc
push
rolb
sbb
pop
nop
xchg
rcll
out
xchg
add
add
jp
jo
push
rclb
nop
sahf
in
fs
ficompl
dec
nop
dec
add
rcll
leave
nop
push
add
push
sub
jae
movsl
add
jb
add
add
inc
lods
push
push
pop
addr16
test
or
jnp
imul
add
nop
daa
repnz
std
fldl
jle
add
ret
jmp
add
inc
add
mov
add
xor
push
fwait
outsb
pop
ficoms
leave
nop
divl
add
add
xchg
jg
fists
dec
add
add
push
add
cltd
add
not
xchg
add
das
inc
add
iret
mov
xor
add
lret
push
push
xchg
add
pop
add
sbb
jp
jns
add
push
sbb
adcl
or
add
sub
add
nop
div
call
sbbb
roll
xor
mov
push
add
cmp
add
and
sub
mov
stc
pop
repz
push
add
add
inc
stos
lds
leave
nop
inc
add
stc
pop
mov
mov
add
add
inc
nop
push
insb
pop
add
push
faddl
sub
repz
nop
aaa
xchg
nop
pushf
add
add
add
nop
mov
adc
insb
pop
adc
loope
add
cmp
ljmp
nop
inc
add
rcll
and
and
repnz
mov
imul
nop
out
stc
mov
leave
nop
mov
and
sbb
insb
sub
insl
arpl
roll
adc
sub
mov
inc
or
cmp
gs
add
add
popf
add
add
daa
fidivrs
imul
out
or
mov
aas
test
add
in
dec
add
mov
xchg
in
mov
ret
sbb
pop
out
mov
lret
jg
jne
mov
dec
and
dec
add
add
jne
mov
ffreep
jns
pop
popf
add
xchg
or
mov
jmp
fistl
nop
mov
shll
inc
mov
icebp
push
test
pop
add
addl
pusha
std
sbb
loope
test
lahf
sahf
imul
xor
loopne
cmpsl
daa
xchg
nop
inc
add
imul
into
or
scas
scas
xchg
sub
call
fistl
rolb
rcll
nop
fistpll
xchg
adc
lods
movsl
pop
mov
nop
cmp
dec
js
ret
xchg
subl
nop
mov
lahf
sub
or
mov
lcall
in
stos
xor
imul
fildll
dec
add
push
add
popf
nop
enter
mov
add
sbb
add
mov
add
and
psrad
pop
jb
add
sahf
and
dec
add
mov
pushf
add
nop
aad
lock
pop
lods
in
ficomps
push
add
pop
add
int3
add
pop
ds
fstl
add
nop
sbb
insb
mov
pop
add
add
jg
movb
and
lahf
mov
icebp
jl
add
pop
sahf
addl
jnp
and
mov
add
push
add
addr16
out
and
xchg
add
xchg
addr16
jns
aam
lock
mov
mov
add
nop
dec
sbb
add
add
and
sub
cmp
add
xchg
add
and
lds
mov
add
nop
mov
sahf
sbb
arpl
mov
xor
nop
sahf
jl
cs
nop
in
mov
add
nop
mov
in
pushf
nop
test
lret
ss
int
mov
sahf
call
adc
add
aas
out
and
mov
addb
and
js
adc
mov
dec
adc
sub
sub
add
mov
popf
add
int3
add
insl
mov
add
or
cwtl
add
push
sbb
nop
jl
push
ret
or
lea
inc
jae
fcoms
inc
and
add
add
xchg
add
add
add
add
popa
cmc
popa
loop
fstl
mov
jo,pn
add
sti
xchg
das
rolb
out
mov
push
dec
add
add
add
stos
movsl
xor
xchg
lret
dec
mov
mov
jb
dec
nop
xor
xor
adc
add
mov
mov
nop
fists
add
add
inc
mov
fcoms
mov
jae
jle
nop
inc
add
and
sti
dec
nop
dec
add
rclb
add
addr16
add
nop
clc
mov
mov
jg
rclb
push
add
out
nop
into
mov
aam
dec
xchg
int
stc
adc
push
pop
add
in
sbb
aaa
jle
jns
roll
sbb
nop
add
rolb
sub
test
sub
cmp
nop
xchg
dec
aad
repnz
add
test
xor
nop
mov
das
lret
adcb
cmp
add
push
jle
es
cli
mov
add
inc
int
mov
fwait
mov
and
aam
dec
add
jg
xchg
fwait
pop
idivb
outsl
pop
nop
scas
sahf
adc
dec
add
add
jmp
pushf
add
stos
mov
cld
cli
pop
sbb
and
xchg
fldl
loope
inc
cmp
inc
mov
jl
add
push
lret
adc
and
js
sub
nop
fisubrs
add
lock
stc
dec
mov
inc
cmp
add
jnp
loopne
std
pushf
nop
addb
xchg
mov
das
cwtl
add
outsb
sbb
pop
xor
add
sbb
sar
mov
add
mov
add
ss
add
test
test
xor
mov
insl
rsm
dec
add
enter
ds
nop
inc
add
dec
in
test
nop
add
outsb
inc
nop
xchg
nop
inc
push
add
mov
movsb
lret
hlt
mov
push
adc
sbb
repnz
add
jg,pn
push
add
push
push
add
nop
xchg
arpl
fisubrl
out
testl
inc
nop
test
or
xchg
stos
adcl
out
divb
push
pop
scas
insb
cmpsl
adcb
notl
jp
filds
inc
mov
nop
je
mov
lcall
addr16
pop
add
adc
stos
sbb
pop
out
add
adc
fistl
enter
jno
add
inc
jle
add
mov
push
sub
cmpsl
mov
aad
sbb
fwait
iret
rolb
fildll
das
xor
mov
nop
push
inc
nop
je
nop
cmp
cltd
nop
roll
adc
nop
gs
add
jne
call
add
lahf
scas
mov
pop
lds
insb
aam
sbb
and
andb
fiaddl
sbb
or
pusha
repz
cmpsb
popf
nop
rolb
mov
add
negl
inc
add
fisubrs
in
mov
int
lds
xchg
add
sub
in
and
nop
fisubs
cmpsb
inc
cmp
sbb
jb
xchg
jecxz
flds
es
add
add
dec
add
in
aas
mov
roll
adc
lea
push
daa
inc
push
aam
mov
les
mov
fldt
push
sub
inc
add
das
les
outsb
leave
add
and
mov
push
test
mov
nop
mov
repnz
pop
mov
xchg
nop
jbe
int3
add
popa
popf
nop
xchg
adc
mov
nop
cmc
mov
mov
popf
add
jecxz
cmp
sbb
push
in
flds
and
nop
popf
add
add
icebp
mov
aam
ljmp
mov
pop
add
dec
sub
add
sbb
imulb
iret
hlt
flds
adc
movsl
addr16
int3
add
iret
dec
pop
jno
icebp
stos
jle
cmpsb
popf
add
push
add
ficompl
and
popf
nop
or
inc
nop
add
popa
addb
sub
jb
push
nop
inc
add
add
lods
jl
icebp
xchg
adc
imul
xchg
push
or
pop
stos
cmp
sub
add
test
popf
add
push
push
mov
add
test
in
les
inc
nop
pop
sti
enter
add
add
lods
loope
add
in
xchg
mov
ja
add
push
lock
aas
jg
or
jo
and
movsb
sub
pop
mov
push
nop
cld
push
add
or
pushf
nop
push
sbb
lret
mov
add
call
nop
ds
faddl
rcll
mov
call
nop
jp,pt
enter
lods
sub
nop
fiadds
pusha
adc
dec
push
or
pop
nop
imul
shufps
imul
adc
out
add
in
lret
push
dec
pop
add
cmp
cmc
mov
mov
jl
inc
jne
movsl
repz
mov
fs
add
sub
add
sahf
xchg
mov
add
add
ds
or
add
jbe
dec
add
dec
popf
add
nop
sbb
xor
push
int3
add
add
adc
mov
jae
add
jge
mov
add
clc
roll
xor
add
jnp
stos
sub
nop
ss
fs
lock
stos
xlat
test
sub
add
into
aas
jge
lea
fs
stos
out
setae
popf
nop
or
jg
mov
jb
add
ljmp
int3
add
sub
les
ja
out
lret
push
and
pop
or
mov
leave
add
rcll
out
mov
iret
mov
cmp
fadds
nop
nop
sbb
pop
add
pop
and
add
std
fidivrl
lds
push
insb
shll
xchg
add
nop
push
add
push
int
loope
add
mov
add
ljmp
add
in
mov
jmp
test
xchg
nop
jle
pop
movl
pop
fldl
dec
add
nop
jbe
add
pushf
add
nop
xor
sbb
cmpsl
pop
inc
nop
jg
nop
sub
iret
xchg
and
and
sub
cpuid
or
dec
add
sub
pop
ljmp
lgs
movsl
mov
adc
into
dec
add
add
xor
mov
lds
or
push
repz
mov
add
call
mov
lret
fildl
fs
insl
mov
dec
add
fs
fisttps
call
add
call
adc
lahf
lock
addb
lcall
mov
das
loop
mov
cwtl
nop
rolb
movb
movsb
mov
add
test
mov
rolb
xchg
mov
jno
or
imul
nop
mov
nop
dec
jecxz
add
jb
nop
mov
jge
push
lods
mov
sub
nop
orb
xchg
mov
xor
add
add
lea
aam
xor
jg
add
ss
nop
lret
mov
bound
lret
sub
nop
lret
dec
faddl
lcall
movsb
movaps
xor
or
pop
aaa
inc
nop
pushf
add
add
jo
out
and
lret
jnp
nop
fwait
cltd
nop
mov
nop
mov
pop
mov
cmp
fcoml
add
ss
add
dec
xor
imul
or
add
xchg
nop
inc
ds
add
pop
xchg
icebp
sbb
lock
add
in
gs
sub
xor
push
mov
outsl
sti
add
add
inc
ds
add
push
add
scas
mov
enter
sbb
push
xor
mov
jae
popf
add
stos
cmp
imul
jmp
jecxz
mov
dec
fbstp
cmpsb
popa
subb
push
imull
mov
dec
dec
add
jge
nop
sub
jge
test
sbb
or
push
nop
rolb
rolb
dec
mov
or
xchg
nop
pop
js
add
mov
add
int
xchg
fisubrs
add
and
nop
sbb
rcrl
dec
insb
xchg
icebp
mov
mov
fsts
add
fsubp
jae
pop
nop
sub
cwtl
add
nop
fcmove
ljmp
les
and
nop
loope
mov
add
add
xchg
nop
lods
mov
mov
pop
xchg
pop
jb
jnp
nop
popa
mov
add
in
mov
mov
add
add
pop
add
mov
add
xor
sub
repnz
nop
out
xlat
in
jp
nop
imul
push
daa
movl
sub
nop
pop
dec
nop
clc
jns
mov
sub
sbb
cli
daa
jecxz
mov
roll
cmp
fists
mov
jl
pop
nop
dec
cld
and
add
add
stc
mov
add
xchg
sti
xchg
add
mov
add
nop
imulb
push
pop
add
pop
push
nop
mov
cmpsl
iret
mov
xchg
nop
idivb
mov
nop
push
xchg
add
orb
mov
rcl
nop
xchg
ret
cltd
add
popf
nop
test
and
loopne
push
add
mov
add
add
cs
repnz
add
pop
pop
fldl
adc
inc
nop
mov
push
add
add
ja
add
out
aas
rcll
jno
fildll
or
add
mull
add
lret
mov
adc
loope
aad
xchg
mov
add
in
push
or
inc
add
rclb
movsl
dec
cmp
add
nop
les
add
mov
sub
nop
inc
add
add
add
stos
mov
es
push
add
out
push
nop
das
shl
add
dec
add
push
add
add
xor
xor
loopne
add
aad
mov
mov
pop
jmp
ja
addb
mov
dec
add
pop
add
movsb
inc
nop
adc
pop
jno
lret
jbe
sub
nop
and
nop
fcmovnu
nop
sub
fwait
stos
je
lods
stos
mov
jle
hlt
mov
add
lock
cmc
test
add
mull
add
add
notb
nop
add
pop
add
jle
repz
jmp
push
dec
dec
add
aad
addr16
je
add
js
in
lods
mov
repnz
jns
pop
add
add
loopne
jmp
pusha
sub
mov
call
hlt
jne
ret
pop
sub
shrb
imul
adc
and
pushf
add
mov
lods
fcoml
fidivrl
cmp
inc
nop
hlt
push
jns
add
sbb
add
lret
fldt
and
cmpsl
js
pop
and
pop
add
in
jbe
add
fwait
jno
lea
pop
jb
in
repz
cmp
nop
push
pop
push
add
loope
lods
mov
lea
sbb
sahf
setne
stos
sub
xchg
add
jge
nop
mov
mov
data16
in
out
mov
nop
add
mov
sub
nop
inc
add
or
mov
add
add
int
cmpsb
jbe
add
movsl
mov
shrl
inc
test
mov
mov
mov
mov
enter
add
push
pop
nop
movsl
aad
icebp
clc
gs
dec
cld
jle
jnp
into
xchg
add
xor
push
or
add
pop
ss
mov
lock
pop
mov
aad
add
nop
rolb
in
popa
or
call
push
mov
mov
stos
jne
ljmp
ficomps
push
mov
xor
je
in
rclb
adc
loope
cmpsl
not
add
mov
jbe
aaa
out
nop
aas
xchg
out
je
add
xchg
add
mov
cmp
nop
enter
jns
push
loopne
add
popf
add
inc
nop
outsb
adc
add
stos
notb
add
add
stc
and
repz
ljmp
jge
inc
nop
pushf
add
in
jo
insl
rolb
and
lock
jmp
mov
mov
repnz
add
add
or
add
cld
jp
add
sub
sub
nop
pushl
decb
xor
dec
add
push
sahf
loopne
inc
call
xor
pusha
hlt
and
mov
add
pop
mov
sub
int3
add
loopne
add
xlat
arpl
out
adc
lock
test
sti
jbe
add
add
mov
scas
push
add
mov
nop
mov
lea
jmp
sbb
xchg
adc
xorl
add
xor
scas
call
xchg
cmp
mov
mov
lret
in
cmp
xchg
push
stc
inc
pop
nop
push
aad
pop
pop
addr16
mov
cmc
add
nop
and
add
mov
pushf
add
ret
lcallw
je
dec
cld
or
idiv
aaa
rclb
pop
push
sbb
add
push
nop
xor
stos
scas
pop
je
mov
add
mov
add
nop
imul
stos
icebp
in
rclb
test
mul
mov
jno
leave
nop
ljmp
or
and
inc
adcb
or
mov
add
cld
and
nop
les
testl
cmp
mov
bound
enter
hlt
sbb
dec
ret
jne
pop
data16
mov
inc
nop
cltd
add
xchg
and
jmp
jg
cmc
push
add
pusha
mov
cltd
add
bound
add
push
mov
pop
add
jmp
xor
stos
cmp
xor
mov
cmp
test
hlt
mov
icebp
mov
add
add
sub
fstpt
cmp
xchg
add
mov
nop
mov
cmp
mov
fistpll
and
pushf
add
nop
dec
out
or
mov
mov
mov
xor
add
fisttps
or
cmp
subb
pop
nop
mov
popa
pop
mov
push
add
add
fs
les
and
mov
add
pop
xchg
nop
cmp
cmp
in
ds
cli
mov
nop
fadds
cld
add
sub
adc
add
out
out
cmp
stc
inc
nop
dec
nop
test
nop
add
nop
pushf
add
ljmp
stos
sti
repnz
push
add
and
push
add
xor
mov
add
inc
nop
faddl
ficoms
cwtl
add
cmpsl
adc
mov
mov
mov
add
arpl
rcl
nop
mov
das
int
or
and
add
fistl
xor
test
jae
add
push
hlt
daa
es
loope
nop
in
sbb
loope
scas
add
or
and
leave
add
add
add
xchg
and
add
add
mov
sbb
cmpsl
fs
add
xor
add
sbb
and
cld
jne
cmc
cmpl
inc
outsb
gs
cmp
fwait
pop
or
sub
into
adcl
dec
fbstp
add
nop
sbb
and
pop
insl
sub
add
nop
cmp
dec
nop
xor
filds
add
ficomps
in
mov
pop
nop
pop
lds
loopne
and
dec
pop
add
xchg
mov
mov
popa
ljmp
adc
push
sbb
mov
test
and
imul
push
dec
add
add
dec
add
jp
nop
xchg
mov
jb
add
push
dec
add
add
add
andl
cmc
xchg
xlat
dec
into
orl
inc
add
xor
fmulp
mov
jge
push
add
add
xchg
add
outsl
add
das
jg
add
push
sub
dec
stc
sub
shrb
lods
pop
inc
jno
nop
sub
mov
lock
cmp
push
add
roll
nop
loopne
push
add
popf
add
add
mov
sbb
inc
push
aaa
pop
cmp
data16
mov
mov
imul
movb
add
add
mov
jecxz
add
xor
addl
add
xchg
nop
add
and
mov
cmp
repz
pop
pop
lret
lds
stos
and
sub
add
cmp
out
adc
mov
lods
cwtl
add
fiaddl
sub
jmp
and
jle
mov
add
mov
imul
nop
mov
add
add
xor
leave
add
and
mov
xor
js
cltd
add
and
ds
mov
add
divl
lret
cmp
fadds
faddl
dec
jb
dec
out
rclb
rcll
jae
in
rolb
fadds
fadds
shll
mov
pop
nop
outsl
inc
in
dec
icebp
cmp
push
stos
out
int3
add
xor
das
cli
gs
inc
jnp
pushf
nop
xacquire
add
add
icebp
test
imul
sub
xor
add
add
add
push
mov
and
add
repnz
push
nop
adc
cli
ja
add
add
icebp
ss
adc
stc
dec
xor
enter
repz
gs
add
adc
adc
mov
fisubs
scas
into
dec
cltd
add
add
cmp
fwait
mov
push
not
adc
add
jmp
push
nop
ss
scas
int
inc
add
mov
xchg
rclb
rolb
fiadds
push
sbb
inc
mov
sbb
sbb
cmp
lcall
nop
cltd
add
sub
fadds
jae
add
fwait
imul
pop
fldl
jg
addb
cld
aad
sbb
out
inc
jo
addl
mov
cwtl
add
nop
repz
cmp
gs
mov
scas
adc
stc
divb
sbb
xchg
adc
lods
aas
roll
add
push
js
adc
outsb
out
dec
add
adc
add
add
std
pop
xor
add
nop
mov
mov
add
lcall
fadds
sub
mov
addr16
enter
clc
test
jb
add
xchg
daa
mov
or
test
add
sbb
xor
pop
mov
mov
ficompl
fs
mov
and
xchg
add
add
jne
xchg
nop
mov
jp
das
mov
sbb
nop
jnp
nop
pop
add
push
jl
fidivs
jmp
lds
notb
add
rolb
in
popf
add
mov
sbb
xchg
add
loope
xor
test
sub
roll
in
in
aam
pop
cmpsb
pop
xor
add
xchg
add
cmpsb
imul
and
xchg
popf
nop
jno,pt
push
in
test
sub
mov
lahf
mov
pop
sti
lods
push
nop
sahf
cld
scas
xchg
call
loope
dec
nop
mov
mov
mov
xor
or
nop
jle
rolb
cmpsb
add
sbb
pop
ret
sbb
and
rclb
or
add
loop
fs
mov
pop
add
popf
nop
sub
add
das
jp
into
fildl
xchg
add
ljmp
imul
fldt
aaa
mov
scas
jne
scas
les
loope
in
aam
fwait
repz
add
lock
xor
lcall
xor
nop
add
pop
add
test
adc
ret
in
leave
add
xchg
sub
jge
add
mov
add
add
add
cmp
aam
mov
add
aas
jge
sbb
fisttpl
nop
addb
add
test
or
push
add
xchg
and
bnd
xchg
cld
out
es
aaa
xlat
xlat
hlt
mov
xchg
sub
nop
push
add
loopne
ret
out
lcall
add
test
xlat
faddl
mov
and
and
flds
out
int
mov
cwtl
add
sub
xchg
add
mov
das
dec
push
nop
test
and
rcll
fstl
insb
jge
and
jmp
and
scas
mov
push
nop
or
ljmp
sub
in
movsb
sbb
lea
xchg
nop
jp
or
cmp
mov
testl
addl
stc
dec
nop
cmp
je
loopne
and
fimuls
cmpsb
jne
and
nop
jg
xor
mov
test
pop
add
mov
je
push
fwait
push
cmp
mov
pop
add
push
nop
cmpsl
imul
nop
mov
and
sbb
repnz
add
push
jae
inc
nop
push
add
rcll
addl
add
jno
arpl
outsb
cmp
aaa
fistpll
aad
aaa
cli
mov
sti
push
ja
insb
call
sub
nop
add
fiadds
add
popf
add
or
sbb
xchg
push
test
rcll
mov
xor
rcll
xor
add
xchg
inc
dec
add
lcall
dec
cmpsl
xor
add
add
roll
nop
inc
push
and
ja
add
xor
nop
and
nop
arpl
fs
mov
roll
push
sub
nop
push
nop
dec
add
sbb
and
cmp
icebp
mov
in
je
and
in
add
add
add
sub
and
icebp
add
dec
nop
xor
scas
add
ds
adc
fistl
add
outsl
test
cmpsb
icebp
xchg
mov
es
add
sub
nop
aam
aam
faddl
cmpsb
in
mov
cs
and
lods
cmp
add
mov
test
add
add
ja
nop
mov
sbb
ds
dec
ljmp
jnp
popf
add
push
cmc
cmp
adc
add
push
es
add
aaa
clc
push
add
inc
add
xchg
imul
nop
flds
sbb
jne
add
nop
xor
jmp
nop
add
ljmp
add
fadds
push
add
test
add
loope
mov
push
nop
or
adc
push
outsl
sub
nop
jg
movsb
jo
nop
or
stos
jbe
mov
fisubrl
nop
push
sbb
xor
xor
add
nop
in
data16
loope
nop
push
inc
faddl
xor
adc
loopne
lock
push
jge
add
add
push
nop
jle
nop
add
cs
jae
adc
mov
bound
xor
jno
addl
rolb
pop
sub
lret
push
fbld
add
ljmp
add
add
jle
roll
nop
pop
mov
add
add
pop
nop
adc
fistpl
sahf
fiaddl
add
sub
pop
aaa
push
or
inc
or
ss
sahf
bound
enter
dec
add
test
xchg
inc
sbb
cmp
jmp
mov
cmp
cltd
add
outsb
mov
or
lret
jbe
add
faddl
cmpsb
mov
xchg
data16
sub
nop
loop
xchg
add
nop
and
sub
mov
leave
nop
enter
adc
xchg
add
pushf
nop
outsl
pop
nop
ljmp
bswap
add
cmp
pop
and
dec
push
add
add
sbb
sub
push
adc
test
add
push
mov
add
rorl
mov
inc
add
nop
in
int3
add
add
cmpsl
stos
mov
fcmovnu
aaa
ret
add
inc
sbb
xchg
pop
icebp
arpl
push
dec
roll
pop
nop
mov
pop
add
sbb
push
pop
cmp
inc
add
mov
push
insl
cmc
rep
mov
jns
arpl
xor
loop
jbe
xchg
fisttps
addr16
pop
inc
add
jno
add
daa
xlat
xor
jg
jne
invd
add
ljmp
inc
add
xchg
sub
inc
add
add
aaa
loopne
sub
dec
add
add
lcall
add
push
sbb
movsb
sbb
add
jno
popf
add
add
pop
push
nop
add
xchg
add
pusha
add
cmc
or
fcoml
out
add
or
fcmovu
add
lea
add
mov
add
je
and
sub
lock
sti
mov
add
push
rolb
daa
js
test
add
inc
add
add
add
out
push
pop
mov
add
add
mov
mov
add
add
and
mov
jne
sub
push
nop
ds
adc
mov
add
shrb
lcall
stos
fldl
dec
nop
and
nop
adc
nop
jge
ja
xor
aas
fwait
pushf
add
lods
adc
inc
add
jp
ds
and
mov
sbb
adc
dec
and
add
xor
adc
add
xlat
int3
nop
std
ljmp
push
cmp
add
nop
xor
nop
pop
add
add
cli
arpl
sub
stos
icebp
dec
fcoml
inc
nop
and
test
in
dec
add
sti
jp
imul
nop
div
cmpsl
data16
push
repnz
sub
add
add
xchg
out
or
sub
xor
out
jno
mov
jnp
or
push
jnp
int
adc
in
pushf
add
push
pusha
sub
outsl
bound
add
xchg
add
ja
mov
out
mov
icebp
lcall
rsm
pmuludq
add
ja
int3
add
sub
mov
inc
add
lahf
jne
add
in
add
add
addl
cli
hlt
push
mov
xor
add
sub
data16
aad
divl
rorb
enter
fbld
push
add
add
nop
cmp
jp
add
cmp
dec
add
xor
stc
icebp
outsb
flds
ja
stos
xlat
inc
test
fldl
jl
add
nop
mov
insb
mov
nop
mov
loope
rcll
push
xor
lret
loope
add
cmpsb
adcb
loop
sti
flds
mov
push
nop
xchg
cmc
loopne
push
es
add
adc
pop
rolb
push
lahf
mov
nop
and
push
sub
add
xchg
xchg
add
cmp
lahf
call
aam
ds
mov
or
ret
push
add
add
fistpll
lods
jae
adc
lock
inc
nop
scas
pop
nop
repnz
mov
pop
sbb
ja
stos
pop
add
daa
xchg
mov
sub
test
jge
nop
add
in
pop
add
adc
cmp
addb
nop
jmp
mov
pop
ja
daa
mov
or
jp
loopne
and
imul
push
push
enter
call
test
dec
add
add
ret
dec
push
add
scas
in
test
push
or
push
and
aad
popf
add
add
inc
mov
test
cld
or
in
std
dec
or
add
mov
enter
add
mov
rclb
xchg
add
aam
and
pushf
nop
sub
add
movl
add
add
add
add
adc
nop
lcall
nop
nop
nopl
push
add
add
sub
pushf
nop
mov
nop
insb
fidivs
pop
nop
pop
pushf
nop
mov
and
mov
roll
nop
ja
xchg
testl
add
negb
sbb
dec
adcb
add
mov
mov
daa
rolb
gs
nop
mov
fadds
inc
nop
lahf
dec
outsl
test
nop
fidivs
lcall
mov
add
nop
mov
xchg
out
cs
add
dec
repz
daa
mov
mov
and
ficompl
data16
dec
nop
or
xchg
push
xor
dec
es
or
fucompp
mov
add
pop
nop
xlat
pop
nop
rolb
push
add
int3
add
ret
mov
mov
std
lods
leave
add
lret
fcoml
rclb
jp
mov
nop
pop
ja
je
pop
add
pop
movsb
fiadds
sbb
icebp
fwait
int
lret
test
scas
test
rclb
nop
cmp
and
ja
sub
hlt
jle
add
adc
lods
cltd
add
in
dec
add
aas
push
mov
xchg
sub
fisttps
push
inc
xor
nop
push
lret
cmp
andb
ds
push
cmp
push
fwait
imul
add
dec
outsl
shrb
add
sub
jbe
daa
daa
pop
add
gs
fs
adc
mov
cmp
scas
xor
int3
nop
mov
nop
or
flds
insb
or
jo
jno
jge
add
xchg
nop
stos
inc
nop
cmp
nop
popa
movsl
movsl
sbb
and
mov
or
fldl
je
add
add
adc
mov
dec
add
fcoml
push
test
mov
add
test
subl
mov
add
clc
add
xor
add
pusha
sbb
notb
add
test
stc
or
or
mov
pop
add
and
lret
cmc
rolb
int3
add
push
stos
cmp
loopne
movsl
insl
adc
fsts
inc
nop
fs
stos
rolb
addl
nop
mov
daa
popf
nop
mov
xor
and
jecxz
test
dec
popf
add
mov
sbb
mov
sbb
adc
adc
jne
jbe
mov
add
and
add
popf
add
add
or
add
add
addb
in
int3
nop
sub
enter
push
add
pop
jae
or
lret
jo
mov
jmp
outsb
stc
in
adcl
nop
push
add
ss
jecxz
pop
into
pop
add
add
nop
ds
add
push
arpl
xor
sti
mov
mov
pop
add
mov
nop
sbb
roll
enter
nop
daa
xlat
scas
xchg
push
int
inc
nop
and
jnp
sub
aas
cmp
push
mov
add
xchg
add
lcall
push
les
dec
nop
adc
nop
sub
faddl
push
mov
lret
ret
and
lahf
mov
lods
hlt
out
sarl
pop
nop
lret
rolb
andl
call
add
rcll
nop
popa
xor
cli
sbb
scas
cwtl
add
sub
push
xlat
xchg
arpl
nop
mov
loope
lods
jp
sub
mov
nop
stc
jp
sbb
jmp
faddl
mov
add
jl
nop
aas
cmp
sbb
outsl
mov
fisubrs
insb
push
add
popa
roll
pop
mov
icebp
dec
xor
push
xor
push
movsb
sub
in
xlat
jg
pop
jle
repnz
or
adc
dec
nop
adc
mov
add
add
xor
lods
hlt
lds
jno
add
roll
nop
fwait
cmp
je
add
nop
and
sub
add
or
js
adc
xchg
push
scas
xlat
sbb
popf
add
push
sbb
inc
lahf
sbb
adc
xchg
xlat
out
nop
mov
sbb
mov
nop
push
das
ds
aam
mov
addb
test
jbe
inc
nop
aad
inc
divb
nop
js
lahf
sbb
rolb
nop
addr16
pusha
mov
xchg
add
icebp
adc
lcall
mov
push
jge
js
sbb
push
and
js
jmp
inc
inc
mov
fcoms
fcoms
scas
hlt
into
pop
js
or
xor
nop
jns
nop
lcall
jmp
add
xchg
add
add
xlat
sbb
pop
add
xchg
add
adcb
in
add
xchg
fsts
add
mov
nop
pop
add
jmp
fisubrs
xchg
data16
out
idivl
nop
cld
add
jmp
xor
add
testb
enter
add
adc
gs
push
add
pop
add
sub
loop
aaa
mov
mov
mov
nop
mov
sbb
loop
stos
push
nop
outsl
rclb
lock
jmp
int
dec
stos
and
xor
adc
mov
cmpsl
push
add
mov
add
add
add
adc
adc
add
cmp
nop
repnz
iret
adc
and
aas
sbb
in
loope
imul
incb
pushf
add
inc
add
mov
mov
jno
add
hlt
adc
add
add
aas
adc
outsb
xor
scas
cmp
add
mov
mov
test
rclb
add
daa
inc
push
call
loopne
xor
mov
rcll
hlt
push
in
imul
push
ljmp
mov
fisubl
rolb
dec
add
add
inc
dec
lret
add
inc
stc
movsb
stos
insb
inc
roll
pushl
aad
add
inc
cmp
cmpsl
inc
add
add
add
add
push
and
into
addb
iret
inc
stc
xchg
add
sti
lods
mov
add
pop
add
add
add
movsl
mov
scas
cmp
push
add
nop
xchg
add
add
in
sbb
jmp
in
mov
nop
dec
add
mov
arpl
mov
add
fcoms
mul
add
and
mov
add
flds
out
sti
sahf
sti
xchg
add
nop
add
movsb
push
in
pop
add
addb
pop
mov
cmpsl
jb
cld
pop
jns
jmp
out
rclb
push
cmp
popf
nop
cwtl
nop
dec
add
fstl
push
inc
add
pop
es
cmp
nop
adc
cld
int3
add
add
jae
add
out
mov
inc
xchg
inc
add
jno
add
addr16
pop
jnp
ss
push
adc
adc
aad
fidivs
sub
add
add
repz
cmpsb
add
ss
cld
clc
jae
lods
out
sbb
negb
pop
nop
add
imul
mov
lods
lock
lock
adcb
imul
xchg
add
add
mov
test
cmp
rcll
nop
add
rolb
pop
nop
ret
add
call
lret
aad
jmp
add
lods
and
add
nop
loopne
sbbb
adc
xor
nop
add
cli
push
or
ja
lods
int3
add
rep
insl
dec
add
aam
test
inc
nop
add
and
add
jns
xchg
sub
sub
push
cs
mov
add
rolb
pop
outsb
movsl
adcb
add
add
nop
test
nop
or
nop
add
xchg
nop
sbb
leave
add
nop
push
nop
scas
push
nop
lods
xlat
adc
and
setne
lret
jo
inc
jbe
inc
popa
loop
gs
add
aad
loop
nop
xlat
sub
sbb
nop
fadds
int3
add
pusha
add
bound
lock
fwait
pop
paddusb
sbb
add
add
jo
scas
pop
flds
jne
and
and
cmp
fadds
fcoml
xor
add
outsl
xchg
nop
fs
sbb
movsl
xlat
repnz
add
push
add
and
nop
rolb
roll
add
xlat
iret
add
sub
mov
cli
mov
add
rclb
cmpsl
mov
jl
xor
sub
ljmp
add
cmp
jb
dec
aas
cli
push
nop
pop
add
mov
sbb
pop
jl
into
loope
inc
test
lahf
stos
roll
xor
fimull
cwtl
add
loope
push
add
push
nop
arpl
add
in
leave
add
sub
adc
jnp
add
jp
xlat
out
test
fisubrl
into
or
lds
sub
cmp
add
jg
nop
adc
cs
mov
out
popa
insl
ret
sub
pop
nop
mov
ss
mov
and
and
mov
repnz
cltd
nop
adc
and
nop
dec
add
add
sbb
mov
in
push
lret
fisubs
add
jb
inc
add
add
add
lret
sub
mov
cmpsb
xchg
jmp
test
nop
pop
mov
inc
add
and
rolb
stos
pop
add
dec
add
in
adc
dec
add
pop
fidivrs
add
js
ror
nop
and
jg
pop
fs
push
add
add
lret
fdivrp
sbb
lret
inc
fstl
sub
les
add
jns
insb
add
mov
jle
fisttps
loopne
nop
dec
add
push
nop
push
add
add
add
add
cmp
out
add
adc
add
add
lods
roll
add
nop
loop
loope
shl
pop
cmp
scas
aam
inc
add
add
push
nop
test
adc
stos
jmp
add
lds
mov
cmp
nop
sub
add
lods
push
test
xlat
icebp
fldl
dec
lods
fbstp
rolb
daa
cmp
nop
jmp
and
xor
aaa
jmp
cmp
and
add
es
into
ljmp
mov
sahf
int
pop
and
push
push
add
and
xchg
pusha
mov
add
pusha
das
nop
nop
lcall
inc
lahf
mov
mov
stos
pop
cmpsb
jns
popl
mov
jl
add
xor
mov
fsts
inc
mov
and
add
pop
add
or
add
add
mov
movsb
outsb
xchg
mov
mov
jl
mov
jge
bound
lcall
jl
inc
add
add
or
jmp
sub
push
nop
inc
push
lret
push
add
jle
lods
pop
stc
sub
push
mov
rolb
xchg
add
mov
fcmovnb
jne
nop
adcl
in
ljmp
mov
or
jge
int3
add
insl
pop
faddl
int3
add
add
cmovs
dec
adc
adcb
xchg
cli
stos
enter
int3
add
stos
mov
mov
aad
mov
pushl
inc
xor
ljmp
add
nop
dec
push
nop
sub
sbb
xchg
fsts
bound
xchg
xor
xor
mov
lcall
insb
push
pop
aas
dec
xchg
add
and
test
sub
nop
cwtl
add
add
add
pop
add
sahf
mov
in
pop
aad
hlt
push
add
xor
int
pop
mov
fwait
xlat
lcall
push
mov
sbb
lahf
in
mov
insb
and
dec
nop
or
mov
cmp
sbb
sbb
add
lock
ret
pop
mov
add
scas
stc
inc
aam
xor
mov
xor
pop
nop
test
iret
in
scas
cmp
sbb
test
insb
out
mov
pushf
nop
roll
add
cltd
add
push
add
ret
pushf
nop
cmp
lret
jb
nop
test
lcall
decb
add
add
nop
cmp
mov
add
xor
add
jle
add
add
push
add
jae
add
rclb
pop
and
nop
mov
nop
xor
mov
sahf
xchg
add
movsb
movsb
jle
and
repnz
stc
rolb
cld
incb
jge
jp
add
or
les
iret
ljmp
mov
mov
ret
mov
jmp
cmp
jne
mov
gs
dec
cmp
aam
dec
add
push
add
add
nop
insb
xor
add
mov
ret
jne
xchg
add
mov
nop
lahf
dec
movl
outsb
xchg
add
inc
pop
insl
push
add
xchg
add
pop
inc
es
mov
nop
bound
lds
testb
addb
sbb
scas
mov
add
lcall
mov
inc
sub
or
fbld
data16
test
mov
rcrb
nop
jns
sub
mov
add
jmp
insl
imul
jbe
outsl
dec
nop
rcrb
adc
mov
sub
add
xchg
nop
js
nop
mov
mov
jge
add
jg
add
adc
add
add
push
add
shrl
push
and
ljmp
add
das
adc
faddl
adcb
sub
cwtl
nop
or
push
cmp
std
push
addb
inc
in
and
mov
nop
dec
cmpsb
pop
add
cmpsb
jne
test
mov
lods
cmp
mov
pop
add
montmul
cmpsb
jno
push
nop
or
roll
nop
aaa
rcll
jl
in
or
add
dec
add
xlat
mov
fildll
jle
das
pushf
nop
je
nop
aaa
mov
adc
pop
pusha
sti
adcl
jl
loop
fwait
cli
lret
add
xor
adc
jp
jae
add
mov
arpl
jb
add
xchg
nop
in
add
out
enter
dec
mov
add
jmp
and
jp
jo
push
lahf
sub
fstl
test
mov
add
repz
and
sub
mov
add
jne
lret
add
add
add
mov
cmpl
addb
leave
add
and
pop
pusha
and
add
scas
mov
push
nop
dec
add
add
jb
sub
xor
dec
nop
or
mov
mov
add
add
jnp
xor
mov
push
rcrb
add
pop
add
xchg
xor
add
mov
ja
iret
int3
nop
cltd
add
mov
mov
nop
inc
mov
mov
lock
add
xchg
jno
sbb
nop
add
daa
jb
add
lea
add
add
iret
dec
dec
ljmp
add
add
cmp
pop
mov
sub
hlt
and
or
aam
int3
nop
or
push
xchg
nop
inc
rcll
lock
sbb
outsl
add
sbb
pop
add
inc
in
cmp
lahf
dec
jns
insb
pop
int
or
mov
xchg
mov
sub
add
add
sbb
sub
and
addr16
mov
jl
or
jp
add
cmp
jb
add
add
dec
adc
xchg
sub
add
adc
shl
jl
add
jnp
or
mov
push
aas
or
sti
xchg
dec
nop
mov
dec
jo
dec
popf
add
mov
mov
mov
push
adc
loope
cmpsb
repnz
pop
stos
and
les
call
movsb
fcoms
aam
test
dec
add
in
out
add
cmp
pop
add
add
lahf
scas
cmp
and
std
mov
and
daa
inc
add
adc
add
push
test
or
or
dec
sbb
adc
jb
int3
add
add
inc
nop
fimuls
fidivrl
push
aad
decl
xchg
lret
std
insb
and
add
leave
add
int3
add
add
fadds
jns
jb
add
or
add
mov
add
inc
imul
mov
fwait
lret
add
dec
add
xor
or
sbb
lahf
insl
in
fsts
push
nop
imul
rcll
enter
nop
xchg
add
repnz
add
in
js
ja
add
pop
nop
outsl
outsl
mov
fcmovnbe
add
add
lds
mov
mov
mov
xchg
nop
cmpb
xchg
nop
inc
adc
ja
nop
xchg
nop
mov
out
test
inc
add
int3
add
add
jo
push
push
add
flds
sub
pop
jns
aad
fcoml
aaa
rolb
adc
mov
std
dec
ss
pop
add
add
add
lahf
push
cmpsl
mov
outsb
flds
mov
mov
add
add
loop
push
add
int
outsl
sbb
push
in
add
add
inc
mov
les
idivl
push
aad
inc
nop
fadds
test
cvtps2pi
ja
scas
jae
out
roll
cmp
dec
cmp
rcll
lahf
push
call
xchg
pop
nop
cmpsl
cmc
cmpsb
mov
jg
jl
pop
out
add
push
in
aaa
mov
add
bound
add
imul
nop
add
mulb
sub
add
push
sbb
add
data16
mov
add
sbb
lret
mov
push
add
int
insb
stc
push
sub
add
or
rcll
add
push
nop
jp
lods
pop
jo
and
xchg
add
mov
pextrw
add
push
and
aam
adc
dec
xor
lcall
and
xlat
addr16
add
sbb
add
pushf
add
cmpsb
or
jmp
nop
or
add
mov
nop
xor
mov
or
and
aas
imul
shlb
loop
in
mov
nop
cmpsl
cmp
adc
inc
add
pop
std
addb
fimull
mov
repz
jle
and
push
movsb
lcall
mov
lock
je
scas
out
pop
data16
add
add
sarl
sbb
mov
push
add
nop
add
std
pop
das
clc
dec
in
sub
nop
or
pop
add
nop
orl
stos
or
jle
adc
or
cmp
add
test
or
mov
popf
add
loopne
add
in
mov
cltd
nop
or
adc
pushf
nop
sub
inc
add
and
push
sbb
ficoml
insb
scas
jae
and
add
jmp
pop
pop
add
push
cmc
inc
inc
int3
nop
mov
loope
add
out
ret
jae
lods
xor
jo
imul
jno
dec
pop
pop
mov
xor
in
or
out
xchg
add
cwtl
add
mov
rcll
mov
imul
add
fcoms
add
add
sbb
jbe
adc
ja
add
flds
insb
jp
pop
nop
roll
lock
nop
cvtpi2ps
nop
mov
nop
mov
and
lret
mov
nop
mov
dec
add
roll
or
add
and
pop
mov
pop
xor
push
add
out
adc
aad
mov
nop
cmp
add
nop
add
add
nop
cmp
nop
cmp
xor
shrl
and
fistpll
outsl
nop
cmp
mov
dec
addb
mov
adc
pusha
add
sub
lock
insb
imul
xor
test
add
nop
xor
fldl
flds
inc
nop
lea
xchg
or
aas
daa
enter
cmc
jb
add
cmp
lahf
mov
add
ljmp
nop
pop
lret
dec
jg
add
jle
mov
xchg
dec
popl
push
pop
out
nop
mov
mov
and
add
add
mov
push
add
nop
push
add
cmp
adc
and
add
decb
dec
add
xchg
xchg
add
imul
add
dec
nop
js
nop
xor
cmp
and
nop
dec
add
add
fimuls
push
pop
add
or
js
gs
xchg
add
add
add
add
mov
nop
andb
fwait
out
mov
nop
jmp
rolb
aad
lea
movsb
leave
add
je
test
das
jae
scas
sbb
cltd
nop
lahf
xchg
nop
enter
xchg
int
inc
nop
ret
add
out
inc
imul
repz
add
add
les
inc
add
lret
nop
cmp
cmp
add
add
mov
add
mov
out
and
add
push
add
out
nop
insl
movsb
fs
imul
lock
dec
add
nop
loop
and
data16
xlat
or
push
add
nop
scas
dec
loop
popf
nop
cmp
roll
sub
mov
mov
and
pop
add
addl
add
mov
mov
jl
ss
negl
add
add
rolb
fsts
add
mov
out
jmp
popf
add
jne
nop
roll
pop
add
jne
pop
jmp
nop
fcmovnu
nop
imul
add
mov
nop
jmp
lea
sub
add
add
ret
nop
inc
add
cmpl
cmp
sub
mov
mov
adc
sbb
or
sahf
movsl
loop
outsl
sub
fldl
push
add
push
or
sbb
scas
mov
adc
sub
stos
dec
pop
mov
add
dec
add
cmp
imul
mov
jle
push
icebp
mov
add
xchg
nop
notl
jbe
add
imul
pusha
les
std
popa
xchg
add
fidivrl
jmp
push
sub
roll
push
jnp
jb
xchg
insl
roll
nop
mov
lahf
fwait
push
add
icebp
aaa
push
sub
mov
sub
add
add
add
xchg
cmp
push
push
add
cmp
mov
lods
push
nop
test
mov
fisubs
dec
add
add
rcll
pop
add
add
sub
jge
add
psubb
mov
add
jne
add
pop
mov
and
add
sbb
mov
fwait
lods
js
out
idivb
xor
scas
push
ljmp
cltd
nop
idivl
icebp
cli
das
aad
mov
ja
push
add
push
data16
pop
adc
mov
add
add
add
xchg
rolb
sbb
arpl
ret
inc
nop
stos
lahf
into
xchg
pop
iret
les
test
cmp
add
fisttpl
pop
nop
mov
lock
nop
mov
cmp
repnz
pop
push
and
in
xor
out
push
dec
push
lods
inc
nop
sbb
xor
dec
add
adc
repz
add
ljmp
mov
nop
mov
ret
mov
cs
jmp
add
push
add
nop
test
aad
sub
push
nop
insb
jbe
add
push
cmpsl
and
mov
xchg
fildll
cmp
sub
add
test
pop
xlat
into
rorl
pushf
add
in
in
inc
add
movsb
and
sub
jae
nop
lods
fsts
add
add
adc
ss
sbb
fcoml
call
sub
nop
addb
ja
cmp
es
jecxz
mov
pop
mov
ds
dec
nop
lds
flds
and
in
data16
iret
cwtl
add
flds
enter
jmp
xchg
rolb
fists
fs
jp
jecxz
das
mov
js
jns
pop
nop
roll
mul
shrb
inc
scas
mov
rcll
nop
sarl
pushf
add
xor
xchg
idivb
insl
adc
dec
add
in
cld
ljmp
jns
nop
or
addb
flds
sub
add
jge
push
add
ss
sbb
arpl
ljmp
fadds
nop
nop
sub
stos
xchg
nop
lahf
dec
add
add
sub
cmp
add
add
add
add
faddl
stc
mov
nop
or
mov
xlat
outsb
repz
in
cmp
daa
cli
sbb
fbld
adc
mov
add
nop
add
clc
fildll
loop
fiaddl
or
sbb
mov
pop
lock
pop
nop
sub
hlt
jmp
leave
add
jnp
cld
incl
nop
mov
ljmp
out
lcall
je
aas
fidivl
fbld
mov
stos
pop
in
nop
and
jge
mov
add
sbb
or
and
dec
mov
imul
adc
pusha
pop
add
nop
into
addr16
notb
mov
add
nop
lods
test
jns
sbb
arpl
mov
add
pop
jns
add
add
add
test
sub
add
add
lret
jno
nop
scas
push
mov
mov
or
ret
aad
shlb
and
add
or
nop
pop
add
push
nop
add
rolb
cmc
sti
leave
add
nop
loop
dec
in
nop
inc
fcmovnu
pusha
add
imul
adc
ljmp
dec
add
jp
sbb
fcmovnu
arpl
mov
xchg
pop
mov
repnz
jg
flds
pop
nop
lret
jne
ja
mov
add
nop
mov
nop
jecxz
add
mov
xor
or
int
pop
sub
add
jae
and
add
lahf
testb
mov
inc
test
jae
pop
nop
mov
and
adc
stos
test
lock
add
nop
add
out
add
pop
sub
jge
add
and
fadds
jmp
sti
adc
sub
es
gs
mov
add
faddl
in
loope
nop
xchg
sub
add
adc
imul
and
mov
addl
sub
rolb
leave
add
add
stos
push
mov
add
jo
or
rolb
popa
loopne
or
outsb
js
jp
pop
add
mov
xchg
gs
push
insl
mov
cs
xchg
jmp
ss
andl
jo
sbb
sbb
add
pop
nop
fwait
jmp
pop
add
adc
jecxz
adc
lock
addb
inc
and
push
jno
addl
insl
dec
adc
cmc
in
jge
mov
mov
js
push
gs
jl
or
mov
add
data16
cltd
add
jne
bnd
push
jb
out
push
add
cmc
cs
addb
syscall
add
mov
push
notl
nop
add
jg
xchg
in
mov
add
add
mov
cs
mov
test
xchg
jle
lret
pop
add
xchg
rcll
add
add
iret
out
mov
add
push
add
push
mov
add
add
add
mov
pop
rcll
nop
cwtl
add
mov
cmp
inc
add
cltd
add
pop
or
add
sub
lock
and
cld
addl
testl
gs
popf
add
fldl
cmc
push
mov
lahf
push
nop
mov
cmp
mov
push
add
xor
sub
add
add
jl
nop
rcrl
jge
add
mov
nop
fwait
cmp
nop
ds
js
mov
add
add
lock
into
push
add
pop
rolb
or
add
test
aaa
jmp
xor
cli
imul
ja
add
movsb
std
inc
mov
ds
add
fwait
incl
lds
aaa
lret
push
sub
sub
lret
fcoml
mov
imul
push
loop
inc
jle
xor
insb
sub
mov
lret
add
nop
add
or
adcl
mov
sbb
imul
inc
add
add
mov
aas
mov
adc
mov
mov
lret
fidivrs
sbb
mov
and
adc
nop
mov
in
xor
mov
jecxz
push
add
nop
in
and
aam
aam
mov
out
idiv
inc
ja
cmp
add
jg
add
arpl
add
loopne
jnp
insb
xchg
mov
push
sbb
nop
jg
xor
out
nop
add
dec
cmp
sti
fwait
jnp
push
scas
mov
add
inc
and
add
push
add
jo
mov
cmc
lea
push
or
xor
add
addb
je
mov
adc
nop
push
push
nop
rolb
adc
mov
jge
push
adcb
pop
enter
add
daa
mov
cmp
pushf
nop
sub
jne
nop
ljmp
xchg
add
add
pop
adc
pop
add
cmpsl
add
aaa
mov
aas
int3
add
nop
stc
or
pop
nop
xlat
out
dec
add
out
bound
xor
add
dec
sub
lret
push
nop
ljmp
add
repz
addl
fldl
repnz
add
or
add
pop
inc
add
sbb
xchg
les
xchg
nop
cmc
int
les
mov
test
les
xor
add
add
inc
add
add
scas
mov
push
das
hlt
scas
repnz
add
xor
out
nop
pop
add
and
test
outsw
lods
jecxz
cmovbe
nop
xlat
dec
nop
mov
nop
push
outsl
mov
in
lods
mov
outsl
into
mov
add
mov
nop
cmp
mov
cli
clc
xor
aaa
jecxz
aas
popf
add
mov
clc
mov
add
inc
clc
movl
sbb
jmp
add
xchg
mov
nop
add
cmc
maskmovq
idivl
add
nop
fs
push
stc
out
cmpsb
sti
std
ja
nop
test
nop
push
sti
insb
push
sarb
nop
lds
in
sahf
fisubs
push
nop
cli
lods
imul
mov
add
inc
enter
mov
loope
adc
xchg
xchg
add
add
add
je
nop
aad
cli
test
mulb
int3
add
imul
jb
movsl
jnp
pop
lods
add
das
ret
xor
push
adc
les
cmpsb
ljmp
lods
jbe
add
dec
repnz
aas
inc
fistl
dec
add
jne
mov
cmp
nop
lods
push
pop
sbb
dec
add
int
into
movsb
arpl
shll
repnz
xchg
dec
add
add
nop
sbb
mov
add
add
cli
test
jp
add
mov
inc
add
mov
add
add
add
out
mov
push
iret
pop
pop
gs
add
jmp
inc
add
ret
adc
pop
xor
and
jp
nop
cmpsb
out
push
xlat
out
or
jmp
add
mov
mov
add
mov
add
dec
add
sub
out
clc
pop
fcoml
repnz
pop
sti
push
add
add
sbb
sarb
push
add
add
add
data16
pop
push
add
add
add
aad
ss
push
repz
or
pop
nop
mov
ret
cltd
add
mov
cs
je
movsb
es
mov
sbb
addr16
xor
add
mov
mov
mov
pop
loopne
inc
sub
pop
nop
popa
iret
outsl
stos
icebp
aam
fldt
mov
dec
nop
lret
and
add
add
nop
push
xchg
nop
push
out
repnz
roll
jae
nop
out
pop
add
mov
popf
nop
rolb
mov
sbb
sub
clc
imul
nop
and
or
add
nop
jbe
addl
nop
lret
ja
fs
sbb
fsts
gs
test
inc
jecxz
loop
dec
push
add
iret
mov
cwtl
nop
repz
mov
in
aas
pop
nop
roll
cmp
cmp
dec
add
mov
iret
and
lea
or
add
xor
add
fcoml
cmpsl
es
add
call
scas
pop
xchg
lds
push
push
add
outsb
test
dec
add
addl
in
mov
call
lea
add
xchg
mov
nop
stos
rclb
dec
cltd
add
jle
nop
sbb
dec
dec
and
add
fcomip
popf
nop
push
add
sub
ret
je
jg
pop
add
outsb
mov
add
add
add
fimuls
add
stos
ss
loop
pop
add
jbe
add
mov
pop
pop
add
jle
fadds
adc
arpl
lret
hlt
outsb
sbb
xchg
es
sbb
xchg
push
hlt
mulb
mov
xchg
xchg
nop
xchg
add
pop
nop
nop
or
mov
je
add
orl
dec
nop
addl
inc
jo
bound
roll
pop
add
test
xor
das
lods
jo
jge
and
fwait
mov
sub
add
cmpsb
dec
out
vpmacssdqh
push
push
add
icebp
mov
scas
fwait
out
or
mov
add
push
mov
cld
lock
add
and
adc
fadds
mov
add
stc
jmp
xor
testl
inc
or
sahf
lahf
cmp
xchg
add
fistl
push
pop
add
nop
pop
leave
nop
pop
add
add
cmp
enter
sub
push
adc
sbb
adc
or
fs
outsl
jmp
jle
add
and
push
test
sbb
repz
xchg
add
scas
sti
out
jbe
xchg
add
test
sbbl
sahf
into
or
insl
fs
lock
loopne
jo
test
add
stos
shrw
imul
push
cmp
mov
call
xchg
nop
faddl
out
scas
dec
nop
jmp
stos
imul
cmp
push
nop
in
pop
les
and
cltd
add
nop
sbb
cs
xchg
je
add
pop
enter
xor
popf
add
pushf
add
inc
jp
add
nop
out
pop
nop
mov
jg
js
cld
lods
addl
or
out
flds
adc
add
loopne
imul
mov
push
out
jns
nop
add
inc
mov
stos
repnz
mov
addr16
mov
nop
adc
mov
nop
rolb
xchg
jp
add
rolb
mov
cmpsl
add
fidivrl
rolb
add
push
roll
fwait
xlat
ret
andl
xchg
dec
add
push
mov
jmp
nop
xor
out
add
fimull
nop
mov
sbb
nop
dec
xchg
pop
add
es
add
nop
mov
nop
push
add
mov
std
cmp
add
xchg
pop
add
cmp
adc
xchg
add
mov
mov
sbb
add
popa
fadds
inc
leave
add
nop
mov
jb
cmpsb
faddl
loop
sub
bound
jb
nop
stos
adc
enter
sahf
movsl
out
jecxz
add
loope
add
jp
xor
cmpsb
xchg
sub
mov
stc
mov
sti
mov
cltd
add
jns
cmp
ret
fimuls
into
cwtl
nop
jb
mov
stos
in
lret
lea
insb
mov
fldl
jo
xchg
fcmovne
add
push
dec
xor
push
add
stos
add
lret
sub
jle
cmp
faddl
and
roll
call
push
add
loopne
pop
add
nop
in
pop
pusha
adc
fcmove
add
jbe
push
stos
sbb
or
nop
insl
pop
nop
sub
out
decl
pusha
jl
cld
and
inc
clc
sub
scas
insl
push
jae
fsts
adc
add
and
shlb
pop
mov
rolb
jp
bound
add
add
add
adc
sahf
stos
inc
sbb
stos
dec
dec
inc
add
inc
add
add
rcll
imul
nop
push
mov
add
lcall
inc
nop
inc
add
in
in
lret
ds
inc
nop
addl
enter
or
xorl
jp
dec
nop
nop
add
aad
ds
aas
xchg
nop
loop
nop
mov
ret
inc
add
adc
cmpsl
hlt
out
orb
pop
dec
add
jle
nop
stos
push
mov
pop
in
rolb
add
add
jo
or
lahf
and
mov
mov
add
add
ds
mov
push
cmp
or
pop
stc
xor
jge
outsl
loopne
fadds
jecxz
stos
cmp
xchg
nop
push
sbb
jns
ja
pop
nop
out
les
mov
leave
add
insl
xchg
nop
xchg
movsl
lock
or
dec
rcl
clc
mov
nop
adc
fadds
aaa
addr16
sub
lods
xor
fiaddl
aas
mov
pop
je
nop
arpl
add
pop
into
int3
nop
mov
xchg
dec
add
das
stc
xchg
or
in
mov
mov
adc
lret
ds
mov
add
jne
add
mov
add
inc
mov
repnz
nop
daa
push
lds
inc
nop
cltd
add
or
fcoml
dec
nop
pushf
add
mov
scas
rclb
jp
jl
lahf
test
add
les
push
out
cs
inc
nop
adc
insl
lcall
rcll
push
push
insb
dec
nop
mov
mov
iret
sub
push
mov
add
or
add
aam
sub
fadds
lret
mov
ds
repz
std
test
popf
nop
push
aam
dec
add
into
std
stc
mov
sbb
scas
sti
push
nop
xor
inc
add
faddl
ljmp
add
cmpsl
push
mov
cmp
xchg
aaa
loope
nop
mov
addl
nop
xchg
jae
mov
lods
fadds
dec
add
xchg
dec
add
add
nop
hlt
add
pop
nop
xchg
loop
add
xor
dec
ret
inc
dec
nop
xchg
add
mov
adc
jmp
cli
xchg
push
add
les
dec
nop
test
push
push
nop
cmp
adc
cmp
flds
loop
add
jge
lock
add
mov
jns
mov
push
stc
pop
lret
dec
sti
jle
cwtl
nop
sub
pop
add
sub
xchg
mov
pop
mov
nop
rolb
lea
sti
cmp
xor
add
mov
mov
mov
xor
inc
nop
push
pop
ja
nop
jge
or
add
jae
mov
and
and
stos
jo
add
push
push
cmp
nop
mov
nop
cmp
stc
dec
mov
inc
and
cli
mov
jmp
xlat
mov
iret
mov
out
add
dec
add
push
sub
nop
pop
add
add
and
out
flds
sahf
enter
mov
add
push
xchg
nop
mov
pushf
add
xchg
add
addl
les
sub
and
mov
cmovnp
xchg
add
pusha
ret
dec
nop
jecxz
pop
lret
rolb
movb
xlat
xlat
inc
add
divps
and
push
je
aad
cmp
dec
add
add
nop
add
sub
pop
js
pop
add
lcall
sti
iret
xor
jmp
inc
mov
movsl
pop
aam
push
jno
mov
jg
sub
inc
add
stos
mov
sbb
movsb
inc
add
mov
dec
add
mov
nop
sub
push
mov
push
lea
rolb
into
sub
dec
add
dec
lods
lea
push
cs
aas
scas
cmp
nop
out
xchg
nop
inc
mov
jle
popa
notl
repz
add
psraw
nop
addb
sub
movsl
ret
mov
add
ljmp
add
add
arpl
pop
push
nop
nop
add
add
jbe
sub
fistl
aaa
dec
nop
bound
or
es
leave
nop
enter
add
add
add
sbb
xchg
test
xlat
loop
add
add
bnd
decb
test
nop
aas
ds
add
in
mov
add
sbb
roll
addl
fucomip
pop
and
jo
jne
add
leave
add
addl
movsb
push
add
sbb
xor
mov
mov
dec
rcll
add
hlt
jmp
add
dec
jns
xchg
leave
nop
pop
add
xor
les
mov
popa
xchg
nop
xor
nop
mov
nop
aam
add
jecxz
pop
add
nop
inc
aad
push
mov
add
jbe
mov
add
lea
addl
movsl
add
mov
mov
repnz
nop
pusha
push
fldl
push
push
jg
mov
mov
faddl
test
aaa
cmpsl
jnp
lds
in
mov
add
add
ds
imul
sbb
lods
rorb
lea
ljmp
jg
arpl
insb
in
xchg
aaa
push
mov
add
pushf
add
lret
inc
add
mov
in
in
fidivrs
ror
sub
inc
pop
add
in
mov
stos
sbb
ss
daa
push
pop
add
dec
rolb
add
adc
pmaxub
fidivl
jne
test
and
jbe
ljmp
dec
add
jbe
int
jo
sub
outsl
ret
pop
jno
add
add
add
dec
nop
mov
xchg
aas
fists
push
nop
roll
icebp
cmp
add
jl
dec
cmp
nop
pop
hlt
ja
sbb
lds
dec
faddl
jbe
cwtl
add
clc
out
jns
push
add
add
adc
sti
pusha
mov
add
mov
aaa
scas
pop
mov
add
dec
and
add
mov
insl
and
add
mov
push
mov
sbb
push
pushf
add
mov
push
dec
add
push
add
das
clc
sub
add
and
cmpsb
repz
cmp
xchg
incl
lds
mov
mov
push
jg
int
fidivrl
push
add
lds
imul
sub
xchg
mov
push
lock
mov
nop
cmpsb
mov
sbb
clc
scas
rcll
cmpsb
mov
daa
popf
add
add
add
add
cli
cmc
jno
or
adcb
nop
xor
nop
rolb
loope
mov
notl
push
sbb
add
pop
mov
jbe
dec
mov
popf
add
mov
add
fbld
adc
add
xor
jge
push
add
popf
add
das
test
xor
sbb
xchg
lods
pop
nop
mov
push
add
nop
mov
inc
mov
lods
jp
roll
nop
mov
push
cmp
add
sahf
inc
add
mov
xchg
add
call
out
inc
add
add
mov
cmp
clc
insl
stos
add
mov
xchg
rclb
int
cli
fldt
stos
movsl
rcll
xchg
popl
pop
add
add
nop
hlt
xchg
cld
enter
int
addr16
stos
sub
pop
add
lret
out
stos
inc
aam
push
add
es
icebp
mov
sub
cmpb
lods
xchg
add
dec
add
leave
add
push
in
ret
scas
pusha
das
test
stos
mov
pop
add
nop
pop
mov
dec
loopne
pusha
cs
mov
stc
pop
jge
add
add
add
pop
add
icebp
lret
inc
add
jl
cltd
nop
nop
add
jmp
nop
dec
add
add
adc
push
pusha
outsl
ss
nop
jecxz
addl
add
rclb
mov
sbb
pushf
nop
lahf
xor
add
add
sbb
or
jl
nop
push
add
xlat
fcoms
mov
xchg
mov
ljmp
ret
icebp
daa
test
sub
add
fstl
adc
inc
add
cli
add
add
xchg
add
lods
fadds
gs
add
sbb
mov
nop
xor
cltd
nop
xchg
add
dec
aad
push
rolb
fcoml
add
inc
pop
nop
sub
loopne
out
sbb
jmp
mov
mov
add
add
mov
inc
add
and
push
ja
nop
or
mov
pop
mov
bound
scas
pop
insb
mov
fcomip
push
add
fisttpl
outsl
pushf
add
nop
add
int
mov
add
mov
dec
add
add
dec
nop
pop
les
ficomps
cwtl
nop
push
mov
xor
jecxz
inc
push
cmp
stc
inc
mov
ljmp
pop
add
add
xlat
pop
add
add
int3
add
repnz
nop
out
sti
or
add
or
popa
push
nop
ja
mov
jo
push
add
ljmp
add
rcll
add
rorl
movsb
xor
fldl
sub
jl
or
out
xchg
mov
dec
jg
jl
mov
add
popf
add
push
add
jle
add
mov
add
lods
jmp
jmp
nop
lahf
mov
out
lods
flds
btr
add
cmpb
hlt
cmpsl
xor
add
add
pop
jno
pop
add
mov
daa
add
nop
flds
pop
add
stos
and
hlt
fs
push
test
popa
mov
add
push
nop
fcomip
stc
add
jne
nop
jge
mov
repnz
loop
or
jnp
mov
test
push
mov
clc
cmc
fadds
scas
mov
daa
xchg
ret
ds
dec
nop
cmp
mov
xor
adc
dec
nop
jae
jp
add
sbb
fcoml
mov
cmp
add
nop
and
cmpsb
jge
out
jb
cmp
shrl
mov
mov
stos
loopne
xor
push
je
jp
cli
sbb
and
add
lds
scas
scas
sbb
xor
xor
repz
sahf
jae
jae
add
scas
pop
lods
mov
shl
pop
add
jle
add
xchg
add
adc
add
add
aam
pop
add
xchg
add
xchg
add
mov
add
xor
nop
stos
mov
cmpsb
dec
cltd
add
lea
jae
pusha
out
xor
loope
add
jnp
fs
sbb
fldl
cmpsl
and
out
negb
pop
pop
add
repz
add
jl
nop
cld
mov
sbb
add
jne
outsb
mov
dec
gs
nop
cmpsb
xor
addl
add
add
lahf
dec
push
nop
xchg
test
iret
inc
fcoml
add
xchg
nop
sub
adc
lods
xor
dec
nop
enter
sub
js
fldl
inc
jecxz
into
in
loopne
nop
or
dec
xchg
add
add
cli
mov
adc
in
lock
add
add
std
into
pusha
int
int
popf
add
push
cmpsb
std
pop
lcall
sti
dec
dec
nop
cmpsl
out
addr16
nop
push
push
mov
sub
push
add
faddl
daa
xchg
add
cwtl
add
sub
or
xor
in
mov
add
jb
add
punpckhwd
nop
nop
aaa
push
pop
add
out
mov
ds
mov
push
jns
popa
ja
lahf
pusha
cmp
nop
dec
add
mov
xor
popa
jbe
add
faddl
fcoml
pop
nop
mov
mov
loop
nop
add
fldl
and
or
inc
add
xor
pop
add
add
pop
add
pop
push
push
add
sahf
bound
or
jge
clc
mov
add
push
add
negl
add
popl
and
stc
ljmp
pop
int
jne
nop
les
faddl
pop
nop
pop
add
sub
mov
xchg
and
inc
lock
add
nop
mov
inc
add
inc
les
cltd
nop
popf
add
xlat
dec
inc
add
add
jbe
add
nop
jecxz
push
push
test
sti
xchg
push
or
or
adc
iret
or
add
movsl
xor
push
sub
rolb
nop
add
inc
jns
jmp
xor
xor
mov
xlat
pop
add
mov
mov
adc
add
leave
add
scas
xor
aas
push
in
xorb
testl
fcmovbe
add
xor
cltd
nop
inc
add
add
xchg
test
cmp
cld
inc
les
jnp
add
daa
pop
add
and
push
dec
nop
jge
sbb
inc
nop
mov
stos
lds
push
aad
aaa
sbbl
jle
notb
push
mov
sbb
xchg
add
lods
popl
add
sahf
pop
pushf
add
aaa
test
mov
add
jmp
cmp
add
add
pop
xchg
mov
in
nop
add
nop
or
mov
sbb
add
nop
addl
add
test
push
lods
jae
cmp
out
or
addl
push
mov
into
test
pop
or
daa
sub
xor
mov
push
outsb
repnz
sub
cmp
push
add
or
adc
add
or
xor
je
add
xchg
sahf
jl
add
sub
xchg
add
out
mov
cmp
imul
out
nop
in
sub
add
stos
jne
pop
out
imul
fwait
iret
sub
sbb
es
push
test
add
mov
rcll
movsl
push
or
inc
add
jns
insb
and
ss
cmp
cli
mov
rclb
sub
add
add
mov
xchg
xor
fisubrs
mov
sub
add
add
pop
add
movsb
adc
xor
out
xor
xchg
nop
xchg
add
add
fwait
inc
nop
sahf
mov
dec
add
jbe
sahf
subl
imul
inc
jno
xchg
add
insl
mov
push
jo
add
add
xchg
arpl
mov
ficomps
dec
add
add
test
add
dec
cmpsb
jmp
sub
fistl
movsb
mov
jo
add
sub
jmp
pop
pop
jecxz
stos
jnp
cmp
add
sub
or
push
not
nop
jo
pop
push
cwtl
nop
mov
nop
sub
mov
add
push
jmp
or
and
sub
mov
popa
movsl
jg
movsb
adc
ja
out
jp
in
or
push
rclb
adc
jnp
mov
pop
inc
add
add
cmp
add
adcl
in
lock
push
push
add
add
mov
nop
sub
sbb
aad
les
rcll
nop
and
cmp
mov
dec
nop
mov
mov
add
pop
add
add
push
ror
nop
push
push
nop
xchg
cmc
cmc
stos
out
xlat
rcll
cmc
arpl
add
insb
or
mov
pushf
add
pop
add
add
roll
dec
pop
fcoml
and
fwait
mov
pop
adcl
mov
add
cltd
add
gs
add
ja
ret
out
std
ret
add
pop
in
fistpl
adc
sbb
roll
sub
sub
arpl
nop
packsswb
mov
add
ret
add
adcb
pushf
add
pusha
inc
cmp
add
movsb
push
les
pop
sbb
push
cltd
nop
xchg
lea
cmpsb
sti
mov
xor
mov
cmpsl
cmpsl
sub
cmpb
adc
mov
or
push
or
nop
nop
mov
nop
xor
xor
pop
add
or
lret
pop
add
inc
nop
test
addl
jle
sbb
fwait
mov
fwait
adc
add
mov
add
cmpsl
adc
cmp
pop
push
mov
xchg
into
clc
xlat
sbb
nop
mov
nop
cli
and
pop
sbb
test
out
jae
nop
push
add
in
add
mov
int
mov
ss
ds
add
les
dec
nop
inc
add
cmc
push
outsl
repnz
add
fcmovu
mov
xchg
sbb
jp
sbb
addb
nop
dec
add
mov
bound
nop
fadds
iret
inc
add
or
mov
xor
push
jle
add
inc
cmc
sub
pop
nop
dec
add
out
adcl
nop
jge
nop
jp
int3
add
out
mov
add
xchg
nop
mov
loop
dec
mov
add
stos
cwtl
add
add
add
mov
mov
bound
push
js
sbb
cld
push
fstl
and
add
xchg
cmp
dec
add
sub
enter
pop
addb
push
jmp
push
add
sbb
nop
xor
lods
pop
add
mov
and
nop
nop
dec
sub
testl
add
cmpsl
adc
test
dec
ljmp
add
nop
or
lret
nop
sti
stc
in
repz
nop
xchg
jp
movsl
mov
lods
in
les
or
lret
out
add
pop
mov
iret
rcll
arpl
add
mov
add
loope
cmpsl
sbb
test
add
stc
mov
sub
add
rolb
xchg
add
add
dec
pop
faddl
push
mov
mov
mov
or
add
add
js
scas
dec
daa
in
push
nop
aas
mov
cld
or
add
or
adc
sbb
mov
ret
mov
nop
mov
test
add
add
js
pop
inc
add
nop
mov
rolb
nop
jmp
popa
repnz
and
and
add
pop
add
mov
sahf
test
or
dec
xlat
push
cmpsl
mov
cltd
nop
int3
add
repnz
mulb
add
xchg
int3
nop
cli
bswap
xchg
movsb
in
dec
lea
add
add
std
aas
js
mov
sbb
in
add
in
pop
or
fcoml
sub
add
add
imul
add
nop
push
add
add
lret
add
pop
add
std
jae
add
into
jbe
add
lods
sub
nop
mov
dec
add
sti
psllw
xor
add
push
jmp
lea
mov
add
scas
hlt
cmp
inc
nop
push
push
add
push
add
jle
nop
fiadds
ja
les
popf
nop
push
add
pop
jbe
rol
sti
mov
add
add
add
add
lcall
nop
xor
push
add
rolb
outsl
lret
test
jp
add
add
ret
and
es
and
pop
xchg
fwait
mov
popf
add
lret
adcb
rolb
test
pop
nop
dec
xchg
nop
ds
adc
add
enter
add
adcb
cwtl
add
nop
rcrb
nop
xchg
scas
stc
jbe
dec
add
sbb
pop
and
cmpsl
jbe
or
add
jl
xor
xchg
imul
xchg
add
rcll
js
ja
jno
push
cmpsb
sub
or
or
xchg
add
adc
movsl
aas
mov
ja
sbb
add
nop
cld
lea
pop
dec
repnz
add
add
or
push
insl
push
inc
add
sti
movsl
mov
dec
lret
pop
rcll
popf
add
lea
xor
nop
add
xchg
add
mov
add
add
pop
add
roll
push
sti
mov
dec
add
xchg
dec
add
pushf
add
add
and
nop
les
movsl
inc
loopne
xor
les
pop
nop
int
sub
add
pop
pop
add
sbb
outsb
mov
mov
nop
mov
xor
mov
mov
nop
or
scas
scas
mov
inc
cltd
add
rolb
inc
mov
roll
adc
lahf
addl
xchg
add
add
aam
jg
jb
nop
pop
ret
cmc
in
into
sarl
nop
aad
pop
add
in
sub
mov
rcll
nop
mov
mov
and
rcr
nop
add
sub
cmp
push
mov
addb
dec
add
add
add
mov
mov
cmp
cld
movsb
adc
xor
fadds
jns
add
mov
les
pop
int3
add
sahf
out
pop
mov
nop
imul
jae
mov
add
fwait
mov
ss
cmp
or
inc
add
push
cmp
fstl
mov
add
mov
notl
mov
xchg
add
nop
lret
xlat
lret
xchg
sbb
adc
rcll
rclb
inc
adc
push
xor
nop
xor
lcall
lods
daa
imul
jno
add
or
out
nop
lret
nop
add
mov
nop
xchg
cmpsb
xor
popf
nop
lahf
mov
inc
add
dec
nop
cltd
add
je
stc
inc
add
jae
nop
sti
sub
movsl
and
mov
add
add
clc
mov
cmc
pop
adc
loopne
inc
nop
into
pop
mov
pop
nop
sbb
mov
push
add
push
loop
or
adc
std
jbe
pop
add
adc
mov
cmp
rol
add
add
xchg
add
loope
pushf
add
movsb
aad
pusha
inc
add
dec
icebp
add
cmp
add
xchg
clc
sub
dec
dec
nop
sahf
mov
dec
nop
mov
mov
clc
mov
addr16
nop
cmp
jl
adcb
mov
mov
inc
xchg
nop
xchg
add
iret
xchg
add
loope
nop
inc
sbb
xchg
dec
jns
dec
cmp
addw
and
mov
add
jp
add
dec
add
lods
xchg
nop
mov
cmp
lcall
mov
nop
sbb
in
add
jae
and
xor
fildll
sti
cli
and
add
nop
mov
xlat
pop
add
test
lods
out
pop
add
icebp
push
nop
add
push
addl
mov
jo
mov
add
repz
leave
nop
in
pop
add
push
dec
add
stos
jne
cld
aaa
jae
nop
cmp
sbb
add
sub
jae
add
aaa
xchg
movsb
icebp
xor
mov
std
mov
mov
add
les
xor
sub
mov
out
inc
jle
add
jo
pop
addb
add
mov
shl
jne
add
lea
mov
cmpsb
pushf
add
arpl
add
pushf
nop
adc
cmp
xchg
nop
popf
add
testl
add
movhps
dec
cmp
jne
lret
ret
pushf
add
pop
nop
dec
add
push
add
push
add
fwait
addb
cld
mov
add
push
add
aad
xchg
nop
add
nop
lret
xchg
add
fisubl
lcall
fisttps
mov
rolb
mov
nop
addr16
nop
jae
nop
hlt
jg
xchg
fcmovu
nop
out
nop
ja,pn
call
jo
loop
cli
int3
nop
popf
add
enter
inc
add
mov
mov
sarl
in
add
jg
add
or
push
nop
in
dec
nop
scas
test
mov
jns
shll
sub
mov
ss
jb
mov
gs
adc
add
add
add
in
leave
add
mul
push
dec
add
and
je
add
xor
fisubl
nop
lea
pop
add
sub
jo
dec
pop
add
lea
sbb
out
ds
out
lcall
aaa
dec
nop
sbb
nop
lea
mov
add
pandn
sbb
cwtl
nop
fldl
test
rclb
flds
push
mov
add
add
int
adc
das
sub
or
add
add
inc
add
sub
negl
add
mov
push
xchg
nop
jmp
push
add
or
pushf
add
roll
xchg
push
cld
or
sbb
cld
cmp
add
or
add
mov
push
add
push
add
pop
aam
push
xchg
inc
add
push
add
add
les
add
filds
ret
sti
es
mov
nop
addl
inc
or
add
xchg
push
add
add
flds
mov
dec
cmp
xchg
add
add
cwtl
add
add
cmc
dec
nop
std
cmp
mov
nop
lock
jno
insl
loope
mov
xchg
add
dec
nop
mul
cmp
nop
sbb
nop
ja
dec
aaa
mov
pusha
lock
ret
pop
nop
mov
mov
inc
nop
mov
mov
hlt
icebp
add
mov
cmp
fstl
add
rclb
add
nop
scas
loopne
pop
aaa
sub
nop
lds
ljmp
and
int
and
mov
pop
jnp
mov
xchg
add
add
xchg
dec
sub
hlt
cmp
addb
outsb
jg
lahf
lods
loopne
cld
fadds
subl
add
in
cmp
or
out
cli
jne
adc
in
hlt
lds
popa
or
add
sbb
push
arpl
dec
xor
in
ret
add
int3
add
sbb
das
gs
inc
add
cld
jl
pop
jnp
dec
cmp
adcb
fadds
cmp
add
or
nop
jnp
pop
add
pop
add
movsl
push
lahf
arpl
clc
addl
pop
add
sub
cmp
out
jns
out
add
cmp
bound
push
xor
dec
add
add
add
add
push
add
jne
mov
fcoms
add
rclb
addr16
add
jecxz
jecxz
jae
cwtl
add
push
in
fiadds
fildll
sub
cwtl
nop
add
lret
push
add
add
cmpb
add
add
or
mov
push
add
xchg
add
nop
pop
inc
nop
imul
inc
nop
cmpsb
pop
pop
mov
nop
clc
mov
rclb
fists
pop
fdivrp
mov
jmp
nop
jecxz
mov
mov
in
nop
repnz
pop
nop
pushf
add
add
std
push
sbb
aas
cld
lods
sub
add
fs
push
lret
mov
testl
mov
add
popa
inc
add
mov
rolb
add
add
xchg
nop
rolb
jecxz
movsl
movsl
mov
pop
add
push
add
nop
je
cmp
add
rcll
nop
ret
add
js
nop
repz
pop
out
mov
ffreep
out
cmpsb
fistpll
roll
pop
cld
imul
xor
mov
rcll
aad
fcoml
add
mov
push
sbb
nop
mov
xchg
fbld
mov
push
xchg
sub
add
insl
inc
nop
push
push
pop
add
mov
nop
std
jbe
pop
jge
and
nop
or
ret
mov
or
test
fadds
jmp
push
inc
nop
es
imul
add
nop
out
cmp
nop
jmp
test
shrb
adcl
pop
pop
loopne
pushf
add
dec
fstpt
aaa
ljmp
scas
xor
push
mov
nop
jp
mov
add
xor
push
call
movsb
sbb
jecxz
mov
sub
lret
dec
add
aam
xchg
xchg
nop
sbb
and
and
add
mov
sbb
loope
jg
pop
add
mov
and
jae
test
sub
mulb
sbbl
mov
add
insl
ret
add
mov
test
or
jns
out
stos
mov
or
add
xchg
leave
nop
xor
xor
dec
loope
add
popf
nop
push
popa
or
push
aad
mov
nop
int3
add
fcoms
nop
nop
lock
mov
insl
scas
stc
roll
and
add
adc
add
mov
cmp
jge
int3
add
push
aam
test
push
popf
nop
lahf
xlat
cltd
add
push
add
dec
add
mov
add
xlat
repnz
mov
mov
ret
incb
mov
pop
addb
cmp
xor
add
mov
add
add
lcall
repz
push
nop
sahf
cmp
pop
jo
iret
lret
scas
daa
in
pop
in
int3
nop
fsts
push
dec
add
nop
sti
ljmp
sbb
mov
popf
nop
inc
add
and
cmp
pushf
add
and
add
add
inc
sbb
cltd
add
mov
jb
nop
movsb
test
inc
add
or
out
push
lods
fidivl
scas
pushf
add
clc
faddl
orb
sub
pop
add
int
ljmp
insl
xchg
nop
mov
nop
adc
sub
add
add
pop
jne
mov
lahf
iret
test
cmp
aad
scas
arpl
sub
test
imul
lahf
rolb
leave
nop
enter
and
xchg
or
push
nop
jmp
nop
push
xor
inc
fiadds
mov
ret
or
insb
cltd
add
nop
imul
add
lock
cmp
ss
nop
and
repnz
mov
add
mov
inc
add
add
in
ret
mov
mov
add
cmp
add
add
inc
nop
icebp
and
movsb
fwait
add
push
nop
push
add
add
xor
arpl
xlat
addb
mov
or
into
mov
orl
add
jo
inc
nop
cmp
je
add
rolb
add
mov
out
add
add
add
add
add
les
testb
rolb
sub
xor
mov
push
or
add
add
mov
add
or
roll
iret
nop
add
arpl
test
add
cltd
add
call
ljmp
add
add
xchg
adc
push
cltd
add
push
add
cmp
nop
mov
cmc
pop
add
testb
ja
insl
lods
inc
add
jbe
cmp
xlat
dec
add
jno
mov
stos
rolb
cmpsl
push
jno
cmp
dec
xchg
add
sub
nop
xchg
hlt
mov
add
cmpsb
loopne,pt
rclb
dec
nop
pop
add
pop
test
fwait
cmp
sbb
daa
loope
add
add
sbb
dec
add
and
roll
xorb
add
int
dec
adc
movsl
arpl
xchg
pop
icebp
lock
leave
add
dec
fwait
leave
add
ja
xor
and
nop
or
ja
imul
add
fstl
cmc
sub
push
or
and
mov
or
add
add
add
and
jp
cmp
arpl
add
xor
test
lds
pop
roll
nop
mov
push
xchg
jmp
add
xchg
inc
inc
adc
push
add
arpl
mov
adc
cltd
nop
cmp
imul
jae
and
lret
nop
adc
imul
hlt
iret
shll
aaa
dec
nop
xchg
add
mov
add
sub
add
pop
mov
push
testl
pop
lahf
xchg
jg
pop
faddl
aam
and
add
inc
add
jmp
mov
ds
and
sub
xchg
lea
jmp
xor
cmp
icebp
cld
mov
rolb
pop
add
mov
adc
fcomi
sbb
sbb
cs
nop
add
pop
imul
push
push
adc
adc
int
call
adc
dec
add
cmp
cwtl
add
and
mov
push
movsb
std
and
xchg
cmp
cli
icebp
in
jns
or
rolb
cmp
dec
add
push
add
pop
nop
ja
jb
add
cmp
nop
out
cli
cld
mov
add
cmp
jecxz
or
clc
addr16
add
jg
xor
add
or
out
add
scas
test
add
xchg
add
outsb
mov
mov
js
mov
andl
inc
nop
loop
xor
out
fadds
imul
add
mov
cmp
sub
nop
cs
jle
jl
cmp
les
pop
add
fwait
pop
nop
cld
imul
gs
add
add
das
jg
mov
nop
outsl
pop
mov
inc
sti
jp
add
and
mov
cli
cmpsb
add
add
addr16
loope
nop
popf
add
dec
sbb
ljmp
mulps
add
mov
lods
inc
nop
sub
lahf
adc
sbb
push
dec
nop
imul
xor
outsl
mov
shrb
mov
cltd
nop
push
add
xor
add
add
lretw
cmpsb
gs
add
add
fadds
xor
mov
dec
mov
jae
sbb
mov
add
add
insb
and
fcmovnu
ds
xchg
loopne
gs
sub
stc
lods
movsb
sub
cmp
nop
rolb
ret
lcall
fists
jne
add
mov
push
nop
out
sub
nop
outsl
je
add
nop
cmp
pop
add
cltd
add
pop
adc
sbb
in
or
insb
test
out
test
outsb
inc
add
test
mov
jl
xchg
add
cwtl
add
add
mov
dec
add
stc
xchg
lods
not
add
add
insb
rep
insl
cwtl
nop
rcr
nop
cmpsl
mov
xor
repnz
nop
nop
push
add
add
mull
mov
add
mov
cmp
loopne
and
jg
xor
push
add
idiv
neg
mov
add
pop
data16
mov
aam
mov
sbb
and
and
ja
add
mov
mov
insb
mov
adc
add
mov
outsl
cmp
sub
inc
sbb
push
fldl
dec
add
jg
adc
xor
out
nop
push
sti
insb
xor
xor
dec
add
inc
loopne
nop
mov
push
addb
push
push
add
les
and
xlat
call
push
shr
sbb
jno
arpl
std
andb
nop
ja
add
sbb
ret
nop
xchg
nop
push
insb
and
mov
mov
nop
roll
mov
add
add
add
add
nop
nop
inc
movsl
adc
dec
nop
and
in
ss
rcll
fistpll
loop
outsb
lds
and
out
sub
fucomip
pop
mov
add
fcmovbe
add
add
push
cmp
jmp
lcall
addr16
jmp
sbb
mov
lds
jno
mov
cmc
popf
nop
and
nop
mov
das
hlt
aam
sbb
in
add
sub
jb
mov
sub
and
out
jnp
sub
xor
xor
dec
jg
lahf
out
repz
add
outsl
fstl
add
cmp
ret
or
xchg
data16
addb
nop
xor
push
push
aam
insl
insl
jns
add
sbb
mov
pop
add
sub
sahf
add
push
out
add
repz
int
cld
or
cmc
add
mov
loopne
xchg
add
dec
jl
xchg
inc
add
add
in
adc
dec
mov
dec
cmp
nop
pop
add
add
cltd
add
nop
pop
add
mov
hlt
xor
adc
sbb
sub
or
pop
loop
sbb
in
push
add
mov
lahf
xor
add
aam
cltd
add
mov
ret
push
adc
jecxz
dec
adcl
out
call
jb
cmpsl
addr16
add
scas
popf
add
test
loope
sub
jb
addl
jl
addb
mov
pop
dec
add
shrl
nop
jecxz
adc
or
cmp
sbb
test
add
popa
jae
test
add
mov
sbb
cld
add
rcll
push
aas
lds
sbb
add
pop
xor
sbb
roll
dec
nop
insl
adc
add
mov
inc
xor
mov
xchg
outsb
sti
cwtl
nop
ret
out
gs
stos
imul
sub
fidivrs
xor
add
inc
clc
push
or
push
les
fadds
popa
xchg
add
fiaddl
decl
popa
jns
pop
add
add
adc
add
sub
xchg
sub
add
mov
add
xchg
arpl
add
movsb
rcll
lahf
js
mov
and
movsb
mov
nop
dec
sbb
dec
add
add
inc
jo
add
adc
mov
stos
adc
pop
add
roll
test
ljmpw
push
nop
add
and
pop
and
fcoms
sub
push
push
add
push
add
jge
in
xchg
add
adcb
popa
pop
in
pop
sbb
and
jg
imul
nop
fucomi
mov
add
sti
jecxz
in
xor
scas
repz
mov
lret
in
loope
add
jb
jge
in
in
jecxz
push
add
loope
nop
out
push
nop
mov
mov
adc
add
and
nop
mov
mov
pop
sub
nop
mov
nop
mov
xchg
adcb
sti
xchg
ret
cmp
sub
sahf
cltd
add
xchg
jne
add
jbe,pt
add
testl
popf
add
inc
nop
jge
nop
sbb
mov
xchg
nop
movsl
lods
cmp
jo
idivl
aas
sub
mov
mov
loopne
fidivs
test
lahf
js
inc
lea
and
jo
jnp
mov
add
imull
sub
pop
out
mov
nop
pop
call
xor
nop
ret
jne
int3
add
xchg
adc
jecxz
and
test
xlat
int3
add
sub
cwtl
add
insl
dec
addl
cld
cmp
andl
add
xlat
push
jbe
pop
arpl
mov
add
ss
mov
nop
sbb
xor
mov
test
xor
add
sub
ds
add
jle
adc
mov
nop
push
decl
in
dec
scas
lock
push
push
insl
mov
sbb
add
repz
pop
cld
jbe
jmp
sub
test
xchg
nop
mov
fisubrs
nop
lret
cld
hlt
adc
push
add
rolb
inc
nop
mov
dec
add
add
xchg
add
jmp
add
add
sbb
sub
add
cwtl
nop
gs
nop
scas
and
lods
imul
mov
icebp
xchg
cmp
ret
popa
jl
cs
adc
fldl
flds
adc
pop
fadds
imul
les
add
add
divl
push
movsl
dec
add
jl
in
mov
call
push
xor
mov
inc
xchg
faddl
adc
mov
add
insb
adc
mov
sub
pop
add
pand
add
pop
add
hlt
int3
nop
fidivs
add
mov
jns
mov
nop
lret
fwait
inc
add
ficomps
in
jb
mov
out
add
sbb
les
rcll
add
sub
jno
jg
add
nop
xchg
add
inc
add
push
add
mov
jne
aad
lods
mov
pop
notl
nop
xchg
add
nop
add
push
add
lcall
js
pop
out
jg
jne
outsb
sub
nop
mov
nop
sub
ja
inc
into
aas
ljmp
decb
jno
test
imulb
sbb
mov
adc
xchg
nop
std
dec
jb
aad
or
movsb
gs
dec
insl
dec
or
lret
add
and
adc
or
push
push
nop
fldl
mov
ret
add
push
test
das
clc
dec
xchg
nop
popa
test
lods
adc
or
mov
ds
stos
mov
in
push
outsl
aam
sbb
and
nop
out
pop
add
aas
cmp
ret
cld
pop
xor
lret
loopne
enter
mov
push
adc
mov
mov
mov
add
lret
outsl
das
jnp
dec
pop
adc
mov
divl
add
aam
mov
into
or
nop
mov
xchg
addb
jns
aad
inc
nop
mov
add
add
ficompl
add
decb
out
adc
xchg
add
xchg
nop
jl
push
jge
test
sub
mov
sbb
pop
nop
jno
xor
add
lds
add
loop
add
dec
adc
test
sahf
addr16
mov
stos
jo
add
cmp
daa
lret
jmp
xor
ret
stos
cwtl
nop
sbb
ret
mov
add
ja
cmp
mov
sub
nop
pop
jne
add
add
and
add
add
add
in
icebp
loopne
add
cmpsl
inc
dec
add
cmpsl
xor
js
imul
outsl
mov
out
jae
lcall
cmp
or
rolb
cld
movsl
rcll
add
roll
sub
lds
add
in
pop
add
add
add
ret
stc
repnz
add
addb
aaa
jmp
cmp
not
pop
add
xchg
add
loop
stc
xchg
pop
adc
or
push
cmp
add
mov
inc
nop
scas
mov
mov
add
nop
mov
pop
pop
add
outsb
cmp
adcb
nop
and
iret
jo
popf
add
mov
nop
sub
push
idivl
test
sbb
out
and
add
add
push
dec
repnz
sbb
or
or
or
add
push
into
ljmp
popa
mov
nop
ss
js
sahf
and
nop
pop
add
add
nop
roll
int3
add
push
xchg
nop
xor
add
shll
and
cmpsb
loop
sub
fadds
imul
nop
dec
add
jbe
fwait
sbb
add
add
mov
dec
add
dec
add
mov
js
jmp
jecxz
ja
in
fisubl
pop
add
outsl
adc
add
jge
outsl
out
mov
dec
nop
flds
dec
add
scas
jp
sub
pop
mov
mov
jecxz
mov
adc
roll
add
nop
les
xchg
add
jnp
mov
dec
or
add
cmp
cmp
add
sub
out
mov
fcoml
add
dec
nop
or
fs
lcall
out
add
jecxz
push
and
lock
enter
xor
mov
nop
adc
repnz
aas
mov
mov
add
add
mov
push
add
lcall
pushf
nop
in
test
cwtl
nop
and
lea
inc
add
addr16
sbb
repnz
dec
nop
out
nop
add
add
add
arpl
xchg
test
nop
ret
lods
sti
cmp
nop
cmpsb
sbb
mov
add
add
stos
cmpsb
and
js
xlat
push
nop
and
add
pop
add
add
xor
cmp
pop
add
add
addr16
add
add
push
leave
nop
sbb
test
cwtl
nop
ss
arpl
nop
xor
nop
cmp
sub
xlat
jecxz
nop
mov
rolb
repnz
xchg
mov
add
or
adc
mov
mov
inc
test
mov
add
adc
nop
xchg
add
ret
or
stos
ljmp
push
xchg
stc
dec
jno
and
xor
adcb
nop
call
fildll
cld
xor
add
push
nop
push
xchg
aaa
and
arpl
add
adc
inc
inc
fcoml
add
addr16
mov
je
nop
addr16
inc
mov
aas
insb
outsb
mov
lret
nop
std
or
mov
push
xor
push
add
mov
hlt
inc
nop
movsl
aaa
sbb
stos
pop
pop
mov
lret
xor
in
pop
xchg
mov
addl
inc
dec
add
aad
push
add
lret
addb
pop
add
cmp
mov
cmc
sahf
pop
arpl
sub
nop
out
imul
add
add
lods
ljmp
push
outsb
aaa
push
addr16
push
inc
nop
sbb
nop
push
rclb
ss
pop
arpl
addr16
es
mov
mov
mov
jmp
or
in
mov
or
in
cmp
je
aas
and
nop
jae
dec
sub
js
leave
nop
loopne
xlat
mov
dec
test
dec
add
insl
xor
mov
nop
and
inc
add
adc
pop
sub
test
arpl
lret
ljmp
sarb
pushf
nop
cwtl
add
mov
xchg
xlat
jge
test
and
roll
fisubrs
dec
nop
fadds
cmpsl
cmpsb
hlt
rcr
add
or
movsl
jb
add
loope
rolb
ficompl
nop
cltd
add
in
fcomip
sbb
push
add
jl
add
sbb
idivb
add
addb
add
nop
sub
pop
add
imul
pop
push
nop
jmp
mov
jbe
les
int
fistl
mov
jbe
xchg
add
mov
sbb
fldl
es
dec
in
pop
nop
cmp
inc
mov
add
hlt
addb
imul
jle
enter
push
rclb
mov
loop
nop
xchg
add
add
jg
jnp
jg
orb
rclb
add
sbb
mov
xchg
add
out
sbb
rcll
ds
pop
pusha
mov
mov
das
test
xor
nop
test
inc
add
test
mov
insl
pop
add
cmp
pop
icebp
adc
pusha
repnz
rcll
scas
jbe
sbb
faddp
into
daa
in
scas
iret
cmc
adc
hlt
faddl
int3
nop
sti
push
nop
roll
in
outsl
pop
push
nop
stos
test
add
out
pop
ljmp
nop
push
push
nop
xor
fwait
sahf
xchg
movsb
cmc
movsl
xor
jo
addr16
jbe
inc
or
add
pop
jae
test
add
add
xchg
add
sti
cmp
fadds
fwait
mov
insl
out
aad
dec
fwait
daa
pushf
add
fs
nop
js
pushf
add
nop
loop
nop
ror
js
lods
mov
imul
mov
jno
cmp
mov
push
add
nop
lods
sbb
test
lods
or
inc
add
insb
ja
repnz
dec
jno
cltd
add
mov
pop
push
nop
rolb
jecxz
sbbl
cwtl
add
and
aas
roll
pop
add
mov
loope
jmp
lds
ficoms
add
add
add
flds
and
nop
outsl
imul
mov
add
or
add
or
add
mov
cmp
test
add
add
mov
adc
push
add
imul
sbb
pop
add
imul
outsb
pcmpgtw
dec
mov
outsl
arpl
mov
call
dec
ja
xor
push
add
aad
xchg
mov
into
push
jae
nop
loop
pop
aam
int3
add
mov
push
inc
add
popf
add
out
nop
roll
mov
sbb
add
fs
pop
add
daa
jne
add
jbe
arpl
imul
push
addb
mov
nop
push
cmpsl
adc
pop
add
flds
lahf
dec
add
jecxz
mov
mov
mov
jmp
int
add
lret
xchg
add
clc
je
add
pusha
cmpsl
mov
rcll
ljmp
adc
inc
movsb
adc
add
push
adc
outsl
pop
nop
or
xor
scas
arpl
cs
mov
dec
xor
and
push
add
mov
out
dec
add
movsb
std
pop
popf
add
faddl
push
and
nop
into
dec
nop
inc
add
dec
cli
notb
outsl
out
mov
mov
mov
sub
mov
lahf
inc
stos
push
add
nop
jp
nop
std
fcoml
add
leave
nop
jo
out
add
add
add
nop
xor
out
nop
test
mov
mov
imul
lcall
mov
add
inc
stos
inc
add
pop
loopne
and
test
nop
movb
add
gs
xchg
stos
outsb
inc
nop
or
out
sahf
mov
imul
roll
add
rclb
test
push
nop
or
mov
mov
pop
push
nop
push
adcl
cmp
icebp
roll
nop
test
inc
add
xor
dec
addb
test
add
push
add
les
lret
xchg
dec
and
add
test
cmp
nop
mov
outsl
cs
int3
add
add
nop
push
nop
dec
out
add
sbb
nop
addl
add
fbld
nop
in
cli
jge
add
stos
cs
pop
addr16
mov
lea
pop
nop
dec
sbb
adc
mov
nop
sbb
nop
xchg
xchg
pusha
sbb
mov
scas
sti
inc
repz
into
inc
sub
popa
stos
add
lret
pusha
or
imul
add
add
xchg
add
nop
jbe
repnz
add
sarl
add
add
idivb
jnp
xchg
dec
adc
add
mov
cmpsb
push
jns
in
pop
add
cld
fs
add
into
inc
inc
add
das
mov
test
push
pop
mov
add
outsl
int
ljmp
xor
sbb
lret
int
outsb
jmp
mov
add
add
nop
adc
or
mov
inc
nop
out
rolb
lret
in
scas
mov
add
pushf
add
xchg
sbb
inc
nop
xor
jle
nop
pop
lds
add
xchg
add
cmp
xor
pop
nop
add
jmp
push
clc
sbb
lds
push
nop
movsl
mov
jbe
roll
push
nop
in
mov
inc
nop
aas
repz
sub
jg
pop
clc
mov
sub
nop
scas
hlt
sbb
add
add
insb
outsl
test
ret
mov
ss
xchg
add
jb
add
aas
dec
add
nop
pop
add
cs
clc
add
les
cmpsb
xor
scas
push
es
cmp
cmp
arpl
xor
xchg
dec
hlt
fistpl
test
push
add
repz
mov
jae
add
push
nop
adc
nop
rclb
add
sub
nop
push
cmc
imul
mov
aam
test
add
add
xchg
push
or
add
push
test
add
or
or
flds
mov
sti
pushf
add
xor
daa
aas
push
add
mov
dec
popf
add
enter
lret
add
das
les
sub
push
nop
call
jp
loope
repz
scas
or
add
sahf
movsb
mov
lret
adc
mov
add
sbb
sti
loope
mov
and
cmpsl
js
add
cwtl
add
push
jl
shl
xchg
push
nop
or
xlat
clc
lods
adc
push
in
cltd
add
xchg
nop
je
insl
xlat
std
lods
aad
les
mov
add
loope
push
add
je
repnz
jo
int
jg
out
test
fcoms
nopl
bt
push
mov
mov
mov
repz
jae
dec
nop
dec
add
or
xlat
jl,pt
push
scas
outsb
cltd
add
and
ja
mov
cmp
sub
nop
int3
add
bound
pop
add
sti
adc
loop
daa
aad
push
rcl
nop
jb
rolb
nop
nop
pop
jne
out
mov
xchg
int3
nop
add
nop
sub
ret
imul
add
mov
inc
into
ja
out
jne
add
fimull
add
cmp
gs
xor
sbb
add
imul
pop
or
jl
xchg
mov
idivl
xor
lods
adc
mov
jmp
nop
xor
add
xchg
add
add
jp
add
dec
add
jge
jbe
fadds
xchg
outsb
je
and
dec
nop
pop
test
xor
add
je
nop
fwait
icebp
leave
add
dec
add
xor
pop
mov
fcoml
and
add
add
addr16
sbb
loop
test
xchg
mov
imul
stos
roll
mov
mov
pop
repz
push
nop
cld
or
push
add
add
add
nop
jno
adc
gs
adc
add
sbb
add
add
rcll
add
movsl
ja
jl
rolb
push
idivb
inc
nop
pop
dec
nop
popa
xor
push
cmp
add
add
in
js
xchg
xor
cmp
mov
xor
sbbl
push
nop
mov
dec
add
jns
nop
add
out
push
pop
dec
cmp
adc
aaa
mov
cld
mov
mov
add
add
nop
cmpsb
cmp
add
add
idiv
mov
add
cwtl
nop
sub
nop
cmp
pop
add
add
add
sub
lret
cmc
in
shrl
sbb
sub
add
add
xor
movsb
int3
add
pop
push
lds
rolb
jno
add
arpl
mov
pushf
add
add
mov
add
fwait
movsb
aas
lret
add
pusha
jno
adc
lahf
sbb
xor
add
add
fidivrs
add
push
jg
add
lcall
je
fldl
adc
sub
add
adc
pop
nop
ss
add
xor
cmpsb
mov
push
add
nop
push
xor
sub
pop
sub
add
add
push
add
push
add
movntps
fiaddl
xchg
add
or
xor
add
out
mov
les
mov
mov
jae
nop
mov
inc
addr16
nop
js
sbb
stc
mov
imul
test
out
inc
and
mov
imul
jp
add
imul
xchg
insb
scas
ja
inc
and
popa
inc
nop
hlt
or
jl
add
push
faddl
out
adc
je
out
lcall
add
fsts
xchg
insb
aas
out
rolb
dec
sub
nop
inc
add
data16
or
xor
sub
dec
add
nop
lods
call
or
lret
mov
fcoml
add
lods
out
cmp
cmp
mov
cwtl
add
loopne
add
nop
add
adc
sti
ss
flds
fisubs
jge
add
nop
mov
out
bswap
mov
nop
out
repz
out
fadds
ljmp
add
adc
daa
scas
add
rclb
cmp
jp
aas
pop
jo
sbb
add
push
in
lods
repnz
pusha
adc
lods
pop
nop
push
jbe
add
sbb
and
add
roll
push
add
nop
push
nop
and
sbbl
nop
sbb
fadds
sub
stos
cmp
loop
add
adc
rclb
es
fidivrl
pop
inc
nop
bound
stc
nop
nop
leave
add
add
push
pop
xor
cli
fwait
mov
inc
nop
addr16
pop
inc
jl
and
add
inc
add
mov
out
adcb
mov
ficoms
add
sbb
add
sbb
add
fidivrs
add
sub
xchg
movb
add
ret
cwtl
add
nop
adc
pop
popa
insl
insb
iret
fisttps
sahf
pushf
add
push
add
mov
nop
aam
push
dec
in
dec
outsb
outsb
loope
aaa
in
fimuls
add
add
adc
jbe
add
mov
int
inc
add
psadbw
scas
xchg
cs
mov
inc
nop
mov
nop
in
mov
roll
dec
mov
sub
mov
nop
mov
out
add
cwtl
add
sbb
shrb
add
lods
mov
nop
flds
in
xchg
add
add
add
insl
cltd
add
fcmovnbe
jge
add
icebp
mov
inc
aas
dec
stc
lock
imul
add
movsl
lea
ljmp
xchg
push
mov
xchg
nop
push
add
sbb
jmp
add
add
fsts
fsts
jne
cld
add
imul
fstl
add
in
fcmove
add
add
pop
roll
pop
add
aas
stc
jno
jg
add
aas
stc
fbld
mov
pusha
add
mov
scas
jmp
out
arpl
mov
cltd
nop
sbb
pop
add
sub
ja
and
sbb
pop
nop
sbb
std
hlt
mov
dec
adcb
test
rclb
adc
cld
stos
rcrb
jle
addl
repnz
data16
scas
in
add
repnz
sbb
sbb
lds
add
jp
je
insb
jno
or
loop
nop
cmpsb
inc
nop
mov
nop
outsl
xor
out
pusha
sbb
cmpsb
and
mov
push
add
sub
nop
lret
sub
into
fs
add
dec
leave
add
stc
push
cmc
gs
imul
stos
xchg
mov
incb
mov
in
outsl
mov
nop
dec
add
or
incb
ds
add
lds
pop
add
lcall
push
mov
sbb
out
jb
sub
nop
mov
addb
push
scas
rcll
out
push
push
nop
subl
dec
inc
fldt
std
inc
add
in
nop
je
ret
and
dec
ljmp
adc
nop
cld
leave
nop
rolb
sbb
stc
mov
bnd
lea
test
mov
nop
leave
add
cmc
clc
ja
sbb
sub
enter
out
adc
nop
dec
cmp
sbb
icebp
sub
jns
adc
mov
inc
add
rorl
add
out
in
add
mov
mov
std
aam
faddl
sub
add
add
xchg
sti
ret
push
inc
or
inc
push
lock
ret
xor
es
and
sbb
xchg
loopne
add
sub
adc
cmp
add
push
add
jae
nop
push
mov
add
ficoms
in
inc
xor
jbe
xchg
nop
jbe
nop
sub
or
mov
std
dec
mulb
add
arpl
adc
cmp
add
nop
mov
icebp
or
in
adc
add
xchg
add
add
mov
nop
and
xor
imul
in
pop
mov
dec
iret
mov
nop
sub
imulb
lods
lock
sub
popf
add
add
add
sar
outsl
jb
test
enter
xchg
mov
xchg
add
and
lea
mov
cmp
add
sub
pop
sbb
xlat
pop
nop
aam
in
clc
xor
push
incb
mov
fcoms
push
xchg
jp
nop
or
psubd
xor
xor
pushf
nop
movb
ljmp
add
adc
jg
add
insb
pusha
lds
adc
xor
sarb
xchg
scas
and
add
inc
fbld
jmp
faddl
int3
add
dec
loopne
rolb
add
clc
jg
add
daa
sti
xchg
mov
nop
push
add
daa
pop
pushf
add
popf
add
loope
push
scas
push
lahf
mov
and
ljmp
mov
xlat
mov
pop
lds
mov
pusha
cmp
jne
inc
add
mov
fwait
xchg
sub
cmp
add
jbe
lods
prefetcht1
mov
jnp,pt
add
pop
jp
add
xchg
add
dec
and
add
popa
flds
fcoms
sbb
rolb
add
cmc
pcmpgtb
rclb
jnp
add
and
nop
push
dec
mov
adcb
sub
mov
dec
nop
mov
xor
addl
add
add
add
add
ja
loopne
add
sbb
push
das
divb
gs
push
rolb
nop
pop
mov
mov
pop
jl
nop
inc
dec
addl
pop
xor
popa
push
xor
in
add
mov
add
nop
outsb
xor
cmp
add
add
dec
nop
sub
sti
cmp
add
add
xchg
jle
add
cmp
add
faddl
pop
fadds
sbb
in
dec
jecxz,pt
cltd
add
lcall
nop
icebp
or
bound
jmp
lds
xor
mov
add
nop
iret
mov
pushf
andb
popf
jae
addl
dec
or
push
lea
xchg
ret
mov
sbb
push
pop
jge
mov
int3
int3
int3
out
jge
add
into
sub
add
add
add
outsb
mov
xchg
cs
xchg
pop
int
fidivrs
mov
xchg
mov
pushf
andb
popf
jae
mov
jg
mov
pop
sub
sub
lea
xchg
ret
xorl
sti
int
mov
andb
popf
jae
sbb
mov
int
push
jo
add
add
jmp
subl
cmpsb
mov
hlt
and
inc
nop
push
add
bnd
and
mov
mov
mov
mov
push
xchg
cs
hlt
mov
aas
xchg
inc
mov
xchg
ljmp
bnd
inc
xchg
and
fwait
fwait
nop
pop
pusha
pushf
andb
popf
jae
nop
and
andl
orl
and
popf
jae
xorl
cli
xor
push
lea
xchg
ret
inc
aas
pop
and
adc
and
ljmp
bnd
inc
int
xchg
mov
cli
aas
mov
pop
mov
pushf
andb
popf
jae
xchg
mov
inc
jno
daa
push
xchg
cs
inc
and
mov
jg
sti
cmpsb
mov
sbb
add
add
jae
mov
jg
mov
testl
xchg
cs
mov
jg
mov
jge
push
not
push
lea
xchg
ret
mov
scas
sbb
fidivrl
xchg
cs
hlt
mov
mov
xchg
xchg
fucomi
fwait
pop
add
pushf
andb
popf
jae
inc
cli
xorl
xchg
cs
cli
int
int
cli
mov
xorl
lret
pushf
andb
popf
jae
icebp
mov
pop
mov
int
fdivrp
jb
pushf
andb
popf
jae
jge
mov
sti
mov
sub
pushf
andb
popf
jae
mov
sub
fisubrs
inc
cmpl
iret
mov
pushf
andb
popf
jae
mov
cli
mov
dec
mov
pushf
andb
popf
jae
mov
mov
push
mov
hlt
inc
stos
pushf
andb
popf
jae
jge
xchg
aas
jge
fidivrs
add
data16
add
pop
sbb
sbbl
mov
pushf
andb
popf
jae
icebp
outsb
mov
fwait
mov
xchg
nop
sub
scas
add
push
lea
xchg
ret
mov
nop
icebp
scas
int
and
loopne
lea
xchg
ret
mov
mov
mov
movb
mov
pushf
andb
popf
jae
nop
mov
fwait
icebp
icebp
int
inc
add
mov
pushf
andb
popf
jae
inc
pop
mov
jg
mov
test
sub
add
jae
pop
mov
mov
pop
xchg
cs
scas
cli
mov
nop
xchg
mov
mov
xchg
mov
pushf
andb
popf
jae
jg
pop
nop
jg
nop
jle
roll
push
push
lea
xchg
ret
mov
sti
sbb
jle
aas
push
mov
pushf
andb
popf
jae
mov
mov
push
hlt
pop
div
movsb
push
lea
xchg
ret
mov
int
mov
xchg
int
movsb
inc
add
xchg
cs
pop
int
mov
mov
sti
mov
push
push
add
imul
push
lea
xchg
ret
inc
int
cmpsb
mov
xchg
stos
pushf
andb
popf
jae
xchg
xchg
jle
pop
fwait
fwait
mov
lods
sbb
insb
add
nop
sbb
lea
xchg
ret
jle
jg
icebp
mov
mov
xchg
andb
popf
jae
mov
pop
jg
hlt
mov
mov
add
push
lea
xchg
ret
mov
outsb
xchg
mov
inc
aas
fwait
pusha
fcoms
mov
pushf
andb
popf
jae
cmpsb
pop
jge
flds
aam
sbb
test
les
pushf
andb
popf
jae
scas
jg
sub
jno
add
leave
xchg
cs
mov
pop
mov
mov
int
mov
jle
lods
imul
popf
jae
inc
mov
mov
mov
fwait
jge
es
pushf
andb
popf
jae
cmpsb
jle
inc
nop
xchg
testl
xchg
cs
icebp
jg
xchg
add
pushf
andb
popf
jae
icebp
sti
mov
scas
and
push
push
lea
xchg
ret
outsb
scas
fwait
mov
aas
pop
pushf
andb
popf
jae
inc
push
mov
push
sti
mov
sti
inc
add
popa
push
lea
xchg
ret
pop
jge
mov
nop
nop
fwait
and
sbb
add
add
xchg
ret
aas
jle
inc
sub
xor
andb
popf
jae
int
mov
mov
inc
inc
mov
mov
mov
xchg
cs
hlt
jge
jge
jge
ret
test
xchg
cs
mov
nop
xchg
mov
lret
push
pushf
andb
popf
jae
mov
xchg
mov
nop
mov
mov
cmp
add
add
pushf
andb
popf
jae
mov
mov
jge
inc
jge
add
mov
pushf
andb
popf
jae
int
pop
sbb
andb
popf
jae
aas
jge
nop
cmpsb
mov
sbb
cmp
int3
int3
add
add
jbe
add
lods
dec
icebp
hlt
in
or
fstl
xor
cs
mov
outsb
icebp
mov
mov
cli
sub
push
lea
xchg
ret
inc
mov
sub
and
jmp
out
xchg
cs
sub
and
mov
add
and
popf
jae
cmpsb
jge
xchg
cli
mov
fidivrs
add
pushf
andb
popf
jae
fidivs
xchg
and
andb
popf
jae
xchg
xorl
cltd
add
fldenv
add
push
lea
xchg
ret
mov
sbb
mov
xor
push
mov
pushf
andb
popf
jae
xchg
inc
sbbl
and
pushf
andb
popf
jae
mov
mov
push
xchg
cs
inc
aas
inc
mov
cli
int
fwait
enter
inc
xchg
cs
outsb
mov
mov
jg
inc
sti
aas
and
out
mov
xchg
cs
mov
push
mov
mov
push
jle
int
push
xchg
cs
aas
xor
mov
inc
jg
int
mov
stos
push
xchg
cs
cmpsb
fisubrs
outsb
inc
pop
xchg
add
push
lea
xchg
ret
mov
sti
mov
mov
fisubrs
ds
pushf
andb
popf
jae
mov
icebp
mov
sub
cli
jge
mov
xchg
cs
pop
aas
int
mov
and
je
pushf
andb
popf
jae
mov
mov
nop
and
clc
push
lea
xchg
ret
andl
scas
scas
mov
incl
jge
pushf
andb
popf
jae
outsb
sti
jg
jge
and
lcall
jae
cmpsb
xchg
nop
test
add
push
lea
xchg
ret
mov
nop
inc
mov
ja
pushf
andb
popf
jae
mov
sub
mov
inc
mov
mov
cmpsl
pop
pushf
andb
popf
jae
nop
cmpsb
mov
int
mov
sbb
pushf
andb
popf
jae
hlt
pop
mov
pop
int
mov
cld
and
and
popf
jae
cmpsb
sbb
add
pushf
andb
popf
jae
hlt
mov
mov
jge
mov
pusha
addb
pop
xchg
cs
jge
mov
mov
inc
inc
mov
movb
and
popf
jae
mov
pop
mov
aas
cli
aad
iret
int3
int3
int3
add
lods
add
add
add
add
rep
pushf
andb
popf
jae
jge
addl
sub
add
pushf
andb
popf
jae
scas
mov
cmp
pushl
xchg
cs
scas
mov
mov
jle
int
hlt
aas
faddl
jnp
push
lea
xchg
ret
pop
cmpsb
pop
mov
jle
pop
int
lcall
int
lcall
mov
cli
xchg
mov
adc
pushf
andb
popf
jae
mov
jle
cmpl
incl
xchg
ret
hlt
pop
icebp
scas
mov
sbb
mov
mov
nop
xorl
xchg
cs
sbb
aas
scas
int
mov
cmp
mov
push
lea
xchg
ret
mov
jg
jg
pop
xor
les
pushf
andb
popf
jae
cli
mov
mov
int
pop
pop
jne
pushf
andb
popf
jae
mov
int
mov
inc
xchg
cs
cmpsb
sub
fwait
mov
jg
aas
mov
mov
mov
xchg
cs
hlt
xchg
int
push
sti
sub
je
push
lea
xchg
ret
cli
adcl
mov
decl
push
lea
xchg
ret
sub
sti
icebp
mov
hlt
cli
fwait
pop
xchg
cs
mov
sbb
scas
push
hlt
inc
pushf
nop
andb
popf
jae
add
mov
and
pop
mov
pushf
andb
popf
jae
mov
scas
int
int
add
xchg
cs
addl
xchg
inc
mov
mov
jne
pushf
andb
popf
jae
sti
mov
sub
and
and
popf
jae
int
mov
mov
jge
pop
leave
nop
cmp
call
pushf
andb
popf
jae
sbb
xchg
mov
mov
xor
and
popf
jae
xchg
aas
mov
xor
rclb
and
inc
add
push
int
nop
fwait
mov
outsb
xchg
hlt
push
nop
loop
push
lea
xchg
ret
mov
mov
cmpsb
xchg
jg
mov
sbbl
ljmp
bnd
scas
push
int
mov
pop
scas
mov
je
pushf
andb
popf
jae
pop
and
push
add
pushf
andb
popf
jae
mov
mov
aas
mov
pop
push
pushf
andb
popf
jae
mov
pop
jle
icebp
hlt
scas
xchg
bnd
mov
mov
aas
pop
sti
scas
xchg
add
mov
pushf
andb
popf
jae
inc
icebp
sub
out
pushf
andb
popf
jae
jg
mov
mov
mov
hlt
or
dec
add
cmp
pushl
push
lea
xchg
ret
inc
and
int
nop
sti
aas
mov
cmp
pushf
andb
popf
jae
outsb
jg
scas
mov
scas
and
cs
mov
outsb
int
mov
fwait
mov
mov
push
add
add
push
lea
xchg
ret
hlt
sti
aas
mov
outsb
mov
add
cs
mov
mov
aas
mov
cli
jg
dec
sub
xchg
cs
sbb
mov
mov
xchg
push
notl
pushf
andb
popf
jae
mov
jge
int
push
mov
andb
popf
jae
mov
aas
nop
push
scas
jg
inc
ret
pushf
andb
popf
jae
mov
int
mov
jle
jg
push
outsb
and
ljmp
bnd
push
mov
fwait
icebp
sbb
jecxz
sbb
add
pushf
andb
popf
jae
scas
inc
mov
mov
xor
add
nop
fucomi
aas
and
add
add
xchg
ret
xchg
mov
icebp
pop
jle
in
pop
nop
push
push
xchg
cs
mov
int
pop
hlt
mov
sbb
add
push
lea
xchg
ret
jle
sbb
xorl
loop
lea
xchg
ret
mov
scas
aas
mov
fidivrs
mov
inc
xchg
cs
jle
push
pop
int
mov
int
fidivs
sbb
xchg
cs
fdivp
mov
ficoms
sti
inc
nop
xchg
pushf
push
lea
xchg
ret
jg
jge
nop
mov
int
icebp
mov
mov
pushf
andb
popf
jae
mov
mov
sbb
or
lret
cs
mov
fwait
mov
mov
inc
nop
mov
dec
push
push
lea
xchg
ret
mov
xchg
int
pop
pop
mov
mov
sbb
clc
cs
xchg
cs
int
sbb
icebp
xchg
mov
mov
mov
ljmp
bnd
adcl
jle
mov
jl
rep
xchg
cs
mov
pop
mov
inc
int
cli
inc
jg
cmpsl
call
push
lea
xchg
ret
outsb
icebp
mov
mov
pushf
andb
popf
jae
mov
icebp
mov
int
jmp
push
lea
xchg
ret
push
mov
mov
mov
cli
add
xchg
cs
mov
push
nop
xchg
inc
mov
cli
aas
xchg
mov
xchg
cs
sti
and
inc
outsb
mov
int
sub
add
inc
add
mov
push
lea
xchg
ret
jge
push
mov
mov
inc
pop
shr
pushf
andb
popf
jae
mov
mov
xchg
jle
add
outsl
arpl
add
jae
push
pop
inc
cli
mov
cmp
xchg
cs
mov
jge
sub
push
push
lea
xchg
ret
int
jge
cmpsb
jle
cli
leave
pushf
andb
popf
jae
jge
inc
mov
mov
mov
jle
add
push
xchg
cs
mov
nop
scas
mov
sti
jge
sub
mov
mov
cs
inc
or
fwait
outsb
push
fmulp
pop
mov
jns
test
xchg
cs
mov
jle
int
mov
jg
mov
or
pushf
andb
popf
jae
sub
pop
mov
sbb
pop
pop
repnz
pushf
andb
popf
jae
jge
hlt
pop
xchg
mov
bnd
mov
mov
aas
push
or
sub
push
nop
roll
imul
xchg
cs
scas
mov
mov
mov
inc
cmp
mov
xchg
cs
mov
icebp
jle
outsb
pop
mov
add
xchg
ret
outsb
mov
int
mov
mov
mov
andb
popf
jae
cmp
mov
xchg
faddl
mov
sbb
add
jae
xchg
mov
pushf
andb
popf
jae
mov
jg
inc
jge
imul
inc
adc
andb
popf
jae
pop
jg
int
mov
add
pushf
andb
popf
jae
mov
mov
icebp
aas
sub
push
push
xchg
cs
pop
mov
xchg
and
pushf
andb
popf
jae
mov
nop
mov
scas
mov
int
mov
pushf
andb
popf
jae
jle
sub
jg
and
lea
xchg
ret
scas
jle
nop
aas
fwait
jle
testl
push
lea
xchg
ret
mov
mov
aas
push
imul
add
add
mov
add
cmpsb
fwait
int
int
int
pop
push
lea
xchg
ret
mov
ficoms
mov
jne
push
lea
xchg
ret
int
pop
and
lock
pushf
andb
popf
jae
jle
xchg
xchg
sub
pushl
add
pushf
andb
popf
jae
mov
andl
pop
pushf
andb
popf
jae
icebp
int
mov
mov
and
push
movsb
mov
and
popf
jae
icebp
push
sub
jp
je
js
ljmp
bnd
xchg
popl
push
aad
ds
pushf
andb
popf
jae
mov
cli
mov
and
push
xchg
cs
xchg
icebp
mov
nop
ficoms
lcall
jae
xchg
and
lea
xchg
ret
nop
pop
fwait
mov
mov
xchg
pop
pushf
andb
popf
jae
jg
mov
inc
xchg
xchg
int
and
nop
push
jne
pushf
andb
popf
jae
mov
int
divl
rcrb
sbbl
mov
scas
int
outsb
mov
add
pushf
andb
popf
jae
icebp
hlt
pop
mov
movsl
inc
push
pushf
andb
popf
jae
cmpsb
nop
aas
mov
mov
sbb
outsl
push
xchg
cs
int
sti
sti
and
mov
jge
pop
inc
xchg
inc
pushf
andb
popf
jae
jle
push
mov
jge
sub
and
lea
xchg
ret
jg
xchg
sbb
dec
add
mov
xchg
cs
mov
fidivrs
inc
scas
int3
add
bnd
outsb
cli
nop
sbb
ficomps
mov
rolb
xor
pop
pushf
andb
popf
jae
xchg
int
sub
pop
add
sbb
add
inc
add
add
cli
cmpsb
mov
push
mov
xor
sahf
ret
sub
inc
mov
cmpsb
cli
and
nop
fwait
adc
mov
int
pop
xchg
cs
inc
sti
icebp
push
mov
scas
mov
jle
jle
ss
pushf
andb
popf
jae
fwait
and
mov
sub
mov
xchg
cs
int
mov
mov
sti
mov
addl
add
inc
sbb
add
or
nop
mov
mov
jne
push
lea
xchg
ret
cmpsb
pop
int
fwait
xchg
add
and
popf
jae
icebp
nop
and
scas
in
stos
mov
push
lea
xchg
ret
mov
icebp
xorl
nop
dec
testl
xchg
cs
outsb
mov
adc
sub
sbb
repz
cs
mov
and
pop
mov
movb
add
push
lea
xchg
ret
hlt
cli
sbb
cmpsb
add
xchg
or
add
xchg
ret
mov
mov
xchg
imulb
xchg
cs
sbb
outsb
sti
fwait
inc
je
push
lea
xchg
ret
pop
mov
mov
cli
mov
xchg
cs
jle
cli
mov
mov
test
lcall
jae
mov
hlt
pop
loope
das
mov
xchg
cs
mov
jle
mov
push
jg
jge
mov
or
jne
add
mov
cmpsb
mov
hlt
mov
pop
mov
sbb
dec
pushf
andb
popf
jae
int
scas
aas
sbb
pop
hlt
nop
mov
jmp
pushf
andb
popf
jae
cmp
xchg
inc
jge
rep
push
lea
xchg
ret
mov
hlt
inc
mov
mov
cmpsb
call
and
popf
jae
mov
and
pop
cli
inc
xchg
andb
popf
jae
mov
mov
cmpsb
mov
les
pushf
nop
mov
bnd
xchg
xorl
and
int3
int3
int3
adc
xor
add
add
add
add
add
stos
inc
enter
or
jae
cli
jg
sub
push
add
inc
xchg
cs
pop
icebp
sbbl
outsb
xchg
call
xchg
cs
mov
cli
xchg
fwait
xchg
jle
jmp
pushf
andb
popf
jae
scas
xchg
mov
sub
nop
mov
mov
push
lea
xchg
ret
push
xchg
cli
outsb
mov
and
add
pushf
andb
popf
jae
int
pop
sbb
movswl
xchg
cs
push
icebp
inc
xchg
outsb
jge
mov
pushf
andb
popf
jae
icebp
mov
xchg
sub
movq
pushf
andb
popf
jae
xchg
mov
mov
int3
add
push
pushf
andb
popf
jae
sti
jle
fwait
mov
mov
popf
jae
nop
mov
mov
hlt
cmpsb
sti
int
in
inc
add
nop
ljmp
popf
jae
pop
outsb
fwait
sub
mov
mov
jns
add
pushf
andb
popf
jae
mov
sti
fmulp
push
xchg
mov
mov
icebp
jp
testb
add
add
mov
int
icebp
int
mov
pop
sbb
sub
aam
mov
xor
pushf
andb
popf
jae
outsb
push
pop
cli
sti
mov
lea
xchg
ret
int
push
int
mov
and
fwait
pop
jp
add
sub
outsb
ficomps
outsb
aas
cmpsb
scas
jge
sub
pushf
andb
popf
jae
int
sti
jg
int
outsb
test
nop
lahf
mov
push
lea
xchg
ret
icebp
outsb
cli
hlt
int
inc
je
pushf
andb
popf
jae
inc
mov
scas
xchg
push
mov
pushf
andb
popf
jae
and
clc
jmp
add
xchg
ret
mov
jge
icebp
mov
mov
push
imul
xchg
cs
hlt
int
sub
cmp
jne
push
lea
xchg
ret
aas
int
int
mov
mov
push
mov
xchg
cs
pop
mov
jge
xchg
jle
mov
sub
jne
pushf
andb
popf
jae
aas
jge
mov
push
pop
add
pushf
andb
popf
jae
inc
int
pop
mov
dec
add
outsl
push
lea
xchg
ret
mov
mov
fidivrs
int
push
pushf
andb
popf
jae
mov
jle
fidivrs
inc
mov
push
pusha
pushf
andb
popf
jae
mov
fwait
cmpsb
mov
sbb
jge
jae
and
popf
jae
cli
mov
jge
jg
dec
add
jae
inc
pop
xchg
push
lret
pushf
andb
popf
jae
mov
sbb
hlt
ds
xchg
cs
jge
sub
sbb
mov
andb
popf
jae
nop
mov
mov
and
fwait
scas
pop
in
add
nop
out
rep
pushf
andb
popf
jae
fwait
sti
outsb
mov
sbb
push
push
xchg
cs
cmpsb
mov
mov
icebp
mov
fwait
sti
hlt
xchg
dec
add
mov
jmp
xchg
cs
cmpsb
sub
inc
int
mov
push
pushf
andb
popf
jae
outsb
mov
nop
hlt
nop
cmpsb
inc
mov
and
popf
jae
sbb
mov
push
mov
pop
dec
mov
push
lea
xchg
ret
jge
mov
xchg
mov
add
ljmp
bnd
fwait
int
mov
mov
jge
mov
push
pushf
andb
popf
jae
mov
mov
push
and
mov
lcall
and
popf
jae
nop
cmpsb
xchg
or
scas
testl
xchg
cs
fwait
mov
mov
mov
inc
add
test
sbb
and
popf
jae
mov
movb
ljmp
bnd
int
sub
aas
xchg
mov
push
jle
pop
pushf
andb
popf
jae
mov
sbb
sub
into
add
pushf
andb
popf
jae
aas
and
sub
add
addb
out
lcall
int
mov
and
scas
dec
or
andb
popf
jae
int
sti
jle
mov
mov
scas
jmp
pushf
andb
popf
jae
mov
mov
mov
add
push
xchg
cs
mov
fidivs
jg
scas
sbb
call
xchg
cs
mov
aas
int
jge
ficoms
imul
pushf
andb
popf
jae
fwait
sbb
int3
add
cmpl
popf
jae
sbb
hlt
jg
add
nop
flds
stc
jl
je
pushf
andb
popf
jae
int
mov
scas
push
movswl
xchg
cs
pop
pop
mov
xchg
int
mov
jns
not
pushf
andb
popf
jae
fwait
and
mov
jg
mov
faddl
movl
cs
jle
cmpsb
xorl
and
push
pushf
andb
popf
jae
mov
icebp
popl
mov
inc
repz
xchg
cs
sti
int
pop
mov
scas
inc
hlt
mov
cli
lea
push
lea
xchg
ret
outsb
jg
mov
mov
adc
pusha
pushf
andb
popf
jae
jle
sub
mov
inc
scas
mov
xor
xchg
cs
mov
sbb
int
add
roll
popf
stc
incl
mov
jg
mov
jge
dec
mov
xchg
cs
scas
mov
outsb
andl
pop
push
push
lea
xchg
ret
mov
sti
icebp
pop
and
cltd
nop
sbb
test
cmc
call
add
xchg
ret
sub
mov
mov
mov
mov
and
popf
jae
mov
inc
mov
mov
mov
xchg
push
push
lea
xchg
ret
xchg
jg
fwait
mov
nop
fiadds
mov
add
pushf
andb
popf
jae
nop
mov
nop
mov
cmpsb
flds
hlt
fldl
fadds
pop
nop
add
and
decl
and
popf
jae
hlt
xchg
pop
mov
add
add
xchg
cs
aas
int
fidivs
int
mov
or
pushf
andb
popf
jae
mov
inc
int
icebp
scas
push
push
lea
xchg
ret
mov
scas
cli
xchg
mov
mov
jge
mov
add
add
pushf
andb
popf
jae
hlt
mov
nop
mov
into
jmp
lcall
jae
cli
fwait
mov
adc
inc
jne
xchg
cs
jg
cmpsb
icebp
mov
sti
nop
aas
add
pushf
andb
popf
jae
mov
cmpsb
mov
sbb
adc
mov
inc
repz
lea
xchg
ret
nop
mov
and
aas
inc
push
cmp
xchg
cs
mov
int
mov
int
dec
sub
pushf
andb
popf
jae
mov
sbbl
push
pushf
andb
popf
jae
mov
inc
inc
mov
int
pop
sti
and
add
sti
mov
push
lea
xchg
ret
and
aas
mov
mov
push
mov
pushf
andb
popf
jae
sub
jg
xchg
add
adc
mov
inc
lea
push
lea
xchg
ret
mov
mov
jle
popl
add
add
jmp
pop
mov
mov
mov
pop
push
add
xchg
cs
sub
int
sbb
jl
add
and
push
lea
xchg
ret
icebp
aas
inc
inc
pop
mov
jle
jle
cmp
push
nop
cmp
in
lcall
jae
scas
int
hlt
mov
call
pushf
andb
popf
jae
int
int
jbe
add
inc
loopne
dec
push
sbb
scas
outsb
cmpsb
inc
mov
xchg
cs
jle
sti
inc
icebp
pop
jge
xchg
push
nop
cmpsb
mov
pushf
andb
popf
jae
scas
mov
fidivs
add
pushf
andb
popf
jae
mov
scas
inc
xor
ljmp
bnd
mov
cli
scas
sub
dec
add
add
add
xchg
cs
int
xchg
ficomps
sbb
push
xor
push
lea
xchg
ret
mov
mov
pop
and
adc
pushf
andb
popf
jae
icebp
scas
nop
movb
adc
xchg
adc
add
mov
sti
aas
mov
push
jg
mov
loop
mov
add
add
jae
hlt
nop
sbb
dec
add
int3
int3
int3
add
pop
filds
sbb
cwtl
mov
loope
les
das
inc
nop
mov
andb
popf
jae
mov
movb
mov
mov
add
push
nop
enter
jbe
pushf
andb
popf
jae
mov
outsb
ficoms
cli
and
pushf
andb
popf
jae
and
inc
xchg
popa
cmp
xchg
cs
jge
inc
icebp
cmpsb
fwait
xchg
adc
add
or
add
cmpsb
cli
aas
mulb
ljmp
bnd
fwait
sub
aas
int
cmpsb
pop
cmp
xchg
cs
and
mov
nop
sti
xchg
ljmp
bnd
outsb
mov
inc
mov
mov
outsb
scas
scas
adc
lea
fsts
sbb
add
jae
mov
adc
rcrb
or
add
mov
mov
mov
mov
mov
add
pushf
andb
popf
jae
mov
int
and
and
popf
jae
inc
mov
mov
mov
hlt
scas
fwait
adc
cltd
add
mov
bnd
jge
and
sti
scas
mov
xchg
mov
add
loop
addb
add
jae
mov
jle
jle
pop
pushf
andb
popf
jae
icebp
and
sbb
int
int
add
jl
ror
push
lea
xchg
ret
scas
push
cmpsb
and
in
mov
pushf
andb
popf
jae
pop
mov
mov
xchg
mov
inc
add
andb
popf
jae
mov
mov
scas
aas
cli
icebp
mov
pushf
andb
popf
jae
aas
mov
icebp
fiadds
mov
push
lea
xchg
ret
fwait
jg
sub
jg
cmc
dec
nop
ljmp
push
lea
xchg
ret
inc
scas
pop
int
int
sbb
pop
xchg
cs
int
jle
jle
cli
scas
inc
and
or
xchg
clc
ljmp
sti
scas
mov
inc
pop
jnp
and
popf
jae
aas
inc
int
sub
pop
xchg
cs
sti
cli
inc
hlt
inc
mov
push
outsb
push
mov
inc
add
mov
loop
scas
dec
add
ljmp
bnd
xchg
inc
fwait
hlt
mov
mov
xchg
lea
xchg
ret
cli
push
push
jle
int
cmpsb
icebp
int
nop
sbb
test
and
popf
jae
jge
jge
outsb
int
fwait
mov
xlat
test
xchg
cs
fwait
mov
mov
inc
inc
mov
lahf
push
push
lea
xchg
ret
inc
mov
outsb
int
mov
and
ljmp
bnd
fwait
jle
jg
mov
inc
mov
icebp
int
je
xchg
cs
sbb
sub
push
lea
push
lea
xchg
ret
icebp
fwait
cli
xchg
push
mov
mov
lret
ja
pushf
andb
popf
jae
fdivp
sub
out
mov
pushf
andb
popf
jae
fisubrs
jle
cmp
nop
in
sbb
push
lea
xchg
ret
mov
mov
mov
pop
pop
dec
xchg
cs
inc
mov
xchg
sub
mov
sti
popa
inc
pop
pushf
andb
popf
jae
int
int
cmpsb
fidivs
jecxz
rcrb
andl
sti
hlt
mov
and
rcrl
jae
or
pop
int
mov
dec
nop
pop
add
and
popf
jae
mov
jge
inc
jle
push
cli
loop
test
int
pushf
andb
popf
jae
pop
sti
jge
mov
sbb
add
push
lea
xchg
ret
jg
int
ficomps
push
xchg
cs
mov
fwait
mov
nop
mov
mov
and
jnp
mov
sub
ljmp
mov
int
int
mov
nop
adc
int3
int3
stos
fisubrs
add
add
dec
inc
add
add
add
push
pushf
andb
popf
jae
xchg
mov
sti
cmpsb
inc
nop
pushf
andb
popf
jae
xchg
pop
sub
xchg
mov
pushf
andb
popf
jae
nop
mov
xchg
sub
mov
pushf
andb
popf
jae
jg
scas
sti
hlt
cli
mov
add
mov
pushf
andb
popf
jae
addl
sbb
xchg
cs
xchg
inc
sub
nop
sti
mov
mov
outsb
pop
clc
test
pop
pushf
andb
popf
jae
xorl
mov
add
pushf
andb
popf
jae
mov
xorl
adc
jae
sub
jle
mov
icebp
mov
call
pushf
andb
popf
jae
xchg
pop
call
pushf
andb
popf
jae
mov
mov
icebp
mov
mov
int3
int3
dec
add
lret
add
decl
sahf
add
sbb
and
popf
jae
icebp
sti
sbb
outsb
imul
and
popf
jae
jle
and
pop
mov
mov
cmpsb
fucompp
aaa
lcall
jae
nop
inc
mov
cli
aas
push
mov
push
lea
xchg
ret
nop
pop
cli
addl
insl
add
jne
xchg
cs
cli
and
int
add
lret
pushf
andb
popf
jae
mov
scas
pop
fisubrs
pushf
andb
popf
jae
cli
mov
mov
mov
je
xchg
cs
outsb
inc
pop
jle
jge
sbb
jmp
xchg
cs
mov
outsb
cmpsb
mov
sub
mov
mov
pushf
andb
popf
jae
fwait
int
sub
int
roll
nop
add
add
xchg
cs
aas
jge
hlt
xchg
mov
mov
mov
pushf
andb
popf
jae
mov
mov
fwait
jle
mov
ljmp
bnd
nop
outsb
sti
outsb
pop
sbb
nop
das
call
xchg
cs
mov
mov
mov
mov
mov
xor
push
pushf
andb
popf
jae
int
mov
mov
xchg
test
and
popf
jae
nop
sub
sbbl
imul
push
lea
xchg
ret
nop
cli
mov
sub
inc
cmpsb
and
xchg
cs
inc
and
cmpsb
sti
sti
mov
mov
movsb
dec
int3
int3
je
add
add
fiaddl
add
add
pop
jae
inc
popf
add
add
jge
pushf
andb
popf
jae
mov
pop
xchg
push
push
lea
xchg
ret
mov
mov
icebp
and
inc
inc
aas
lea
jno
mov
push
push
lea
xchg
ret
sbb
mov
jge
mov
out
or
cli
sbb
add
mov
fiadds
mov
cmpsb
jge
mov
pop
and
ljmp
bnd
mov
and
or
or
cmp
push
jle
inc
mov
int
aas
int
iret
popa
xchg
cs
mov
push
xorl
int
int
add
mov
push
lea
xchg
ret
inc
outsb
fwait
mov
sbb
inc
aas
das
testl
push
lea
xchg
ret
cmpsb
nop
sub
leave
pushf
andb
popf
jae
sti
mov
xchg
fwait
cli
mov
out
cmp
and
popf
jae
mov
jg
mov
insb
pop
dec
push
lea
xchg
ret
xchg
xchg
cmpsb
cli
mov
flds
lahf
add
pushf
andb
popf
jae
int
pop
mov
ficomps
mov
push
pushf
andb
popf
jae
mov
fwait
sbb
inc
mov
inc
leave
add
push
pushf
andb
popf
jae
mov
mov
jle
inc
icebp
gs
sub
and
xor
add
pushf
andb
popf
jae
mov
js
jns
add
pushf
andb
popf
jae
nop
icebp
fisubrs
fisubrs
icebp
aas
push
pushf
andb
popf
jae
sti
jg
jge
mov
inc
mov
add
push
lea
xchg
ret
nop
sbb
pop
int
xchg
nop
push
notl
xchg
cs
popl
mov
mov
sub
mov
xchg
cs
mov
mov
push
outsb
xchg
pusha
pop
nop
jle
dec
cmp
andb
popf
jae
push
inc
sti
cli
mov
cmpsb
hlt
pop
nop
or
fwait
mov
xchg
cs
cli
sti
pop
pop
pop
xchg
outsb
jge
icebp
jge
call
pushf
andb
popf
jae
and
mov
mov
std
mov
jmp
add
add
jae
icebp
int
cli
sbb
xchg
mov
pushf
andb
popf
jae
hlt
mov
hlt
outsb
mov
hlt
int
aas
mov
pushf
andb
popf
jae
mov
and
mov
lea
xchg
cs
pop
hlt
mov
outsb
inc
mov
mov
inc
jmp
pushf
andb
popf
jae
mov
pop
icebp
sbb
jp
xchg
cs
and
pop
pop
mov
pop
jge
ret
pushf
andb
popf
jae
mov
jle
scas
mov
xchg
nop
mov
test
and
popf
jae
cmpsb
int
pop
mov
mov
sti
push
dec
add
dec
push
lea
xchg
ret
cmpsb
outsb
pop
cli
xchg
hlt
jge
sbb
inc
adc
andb
popf
jae
inc
jg
mov
mov
sub
leave
pushf
andb
popf
jae
cmpsb
mov
movb
push
pushf
andb
popf
jae
nop
pop
int
inc
jge
xchg
mov
and
pushf
andb
popf
jae
cli
nop
mov
icebp
pop
and
and
popf
jae
jg
sti
push
addl
push
pushf
andb
popf
jae
mov
xchg
xchg
and
popf
jae
fisubrs
and
int
sub
rcrl
jae
mov
aas
mov
push
int
stos
imul
xchg
cs
cli
sbb
pop
fwait
sub
mov
push
lea
xchg
ret
inc
mov
mov
fwait
mov
xor
push
add
pop
nop
hlt
pop
nop
gs
nop
repnz
pushf
andb
popf
jae
and
xchg
jg
xchg
pop
pushf
andb
popf
jae
jg
pop
mov
mov
aas
push
add
add
add
addb
cli
pushl
cli
sbb
xchg
cs
mov
int
sbb
xor
mov
add
pushf
andb
popf
jae
mov
outsb
fwait
jg
mov
lea
xchg
ret
inc
mov
mov
mov
nop
jg
inc
dec
je
pushf
andb
popf
jae
inc
mov
icebp
scas
loope
mov
xchg
cs
xor
mov
jg
jge
add
pushf
andb
popf
jae
outsb
aas
scas
pop
cli
sub
sub
andb
popf
jae
xchg
fwait
scas
sbb
sub
jge
test
insl
scas
decl
pushf
andb
popf
jae
xchg
mov
fidivrs
jg
add
push
div
xchg
cs
subl
mov
roll
mov
xchg
cs
mov
outsb
xchg
outsb
pop
fisubrs
mov
mov
nop
xchg
andb
popf
jae
xchg
cmpsb
xchg
scas
popl
xchg
andb
popf
jae
mov
inc
mov
mov
hlt
scas
and
lea
xchg
cs
xchg
inc
jge
aas
mov
mov
mov
add
add
add
xchg
ret
int
cli
xorl
xchg
cs
pop
xchg
mov
sbb
and
pushf
andb
popf
jae
mov
aas
push
pop
hlt
hlt
dec
jmp
pushf
andb
popf
jae
mov
jge
aas
aas
mov
jno
testl
xchg
cs
scas
int
outsb
inc
and
cmp
mov
xchg
cs
push
jg
inc
aas
scas
ficomps
pop
cli
ss
xchg
cs
hlt
mov
push
cmpsb
nop
mov
sbb
nop
loop
rcrl
xorl
add
mov
mov
pop
and
xchg
cs
jle
pop
xchg
int
fidivrs
jb
pushf
andb
popf
jae
sbbl
icebp
sbb
sub
sbb
bound
jae
jge
inc
xchg
cli
mov
bnd
jge
mov
mov
sub
ficomps
sbb
pushl
pushf
andb
popf
jae
and
pop
mov
mov
pushf
andb
popf
jae
xchg
aas
nop
xchg
scas
push
push
mov
cmpsl
mov
xchg
cs
mov
mov
inc
and
jecxz
test
cs
xchg
mov
ficoms
int
xor
push
lea
xchg
ret
jg
mov
mov
mov
pop
aas
cmp
xchg
cs
and
mov
push
jge
sti
mov
andb
popf
jae
mov
nop
mov
mov
hlt
aas
icebp
xchg
mov
pushf
andb
popf
jae
mov
push
mov
mov
fwait
dec
xor
pushf
andb
popf
jae
sbb
mov
cli
outsb
jge
add
add
sub
pushf
andb
popf
jae
scas
icebp
mov
mov
inc
scas
push
flds
push
ret
xchg
cs
mov
scas
push
scas
jg
pop
fwait
sti
arpl
lea
xchg
ret
jge
adcl
mov
fisttps
and
popf
jae
int
mov
mov
aas
nop
jge
and
mov
push
lea
xchg
ret
popl
mov
push
lea
xchg
ret
nop
mov
fidivrs
mov
gs
test
xchg
cs
mov
int
mov
mov
sub
test
cs
mov
inc
xchg
scas
ficoms
jne
xchg
cs
mov
ficomps
scas
scas
mov
push
xchg
cs
sti
aas
mov
cmpsb
sub
mov
jle
sbb
add
xchg
add
mov
pushf
andb
popf
jae
jg
mov
aas
cli
mov
mov
xchg
xchg
cs
cli
and
mov
inc
xchg
xchg
cs
mov
int
mov
and
aaa
and
xchg
cs
jle
fiadds
hlt
sti
int
and
add
push
lea
xchg
ret
cli
mov
mov
mov
icebp
mov
push
lea
xchg
ret
mov
icebp
xchg
mov
mov
add
inc
or
andb
popf
jae
mov
mov
mov
xchg
int
pushl
push
lea
xchg
ret
scas
xchg
int
pop
mov
add
xchg
cs
sbbl
inc
inc
mov
xchg
jg
xor
call
add
xchg
ret
aas
push
outsb
aas
mov
mov
repnz
call
add
xchg
ret
mov
mov
inc
inc
xchg
cs
sbb
sti
nop
pop
mov
outsb
mov
pop
mov
pop
mov
pushf
andb
popf
jae
mov
mov
fisubrs
mov
pushf
andb
popf
jae
and
xorl
pushf
andb
popf
jae
mov
fdivp
int
mov
and
cs
sti
cmpsb
int
aas
cmpsb
fwait
pop
jge
int
mov
nop
sub
stc
lcall
jae
int
mov
pusha
xchg
cs
mov
outsb
outsb
sbb
hlt
pop
pop
jne
adc
mov
push
lea
xchg
ret
mov
sub
mov
and
cld
pushf
andb
popf
jae
scas
sub
aas
jle
fadds
cmp
jne
pushf
andb
popf
jae
mov
pop
pop
inc
push
add
xchg
cs
mov
cli
sbb
push
push
fwait
sbb
test
lcall
jae
nop
hlt
sbb
push
lea
xchg
ret
jge
adcl
sbb
pop
testl
xchg
cs
mov
icebp
aas
mov
sbb
or
mov
pushf
andb
popf
jae
scas
sbb
in
test
xchg
nop
xchg
add
int3
int3
int3
mov
inc
add
add
add
add
dec
movsb
divb
add
or
pushf
andb
popf
jae
mov
icebp
icebp
mov
mov
inc
add
and
andb
popf
jae
pop
cli
aas
pop
mov
xchg
mov
push
push
lea
xchg
ret
mov
popl
mov
mov
and
pop
push
lea
xchg
ret
sti
cmpsb
sbb
inc
outsb
mov
sahf
push
pushf
andb
popf
jae
aas
cli
push
jge
pop
mov
nop
cmpsb
fadds
outsb
je
push
lea
xchg
ret
fidivs
jb
rcrb
jae
inc
inc
mov
mov
fidivrs
inc
or
push
lea
xchg
ret
mov
mov
xorl
add
pushf
andb
popf
jae
mov
sbb
mov
push
push
lea
xchg
ret
push
scas
int
cmpsb
mov
mov
call
pushf
andb
popf
jae
mov
aas
adc
jmp
and
popf
jae
nop
mov
scas
inc
mov
mov
nop
lds
mov
js
je
xchg
cs
inc
cmpsb
nop
aas
mov
mov
add
not
pushf
andb
popf
jae
mov
nop
xchg
mov
and
push
nop
call
fwait
add
xchg
cs
mov
scas
mov
outsb
mov
add
add
out
lcall
jae
xchg
mov
outsb
inc
push
lea
xchg
ret
mov
hlt
inc
int
pop
fidivrs
mov
je
pushf
andb
popf
jae
cli
fwait
sbbl
push
push
lea
xchg
ret
jle
pop
mov
fwait
and
cmp
mov
pushf
andb
popf
jae
mov
inc
mov
inc
hlt
xchg
push
popa
xchg
cs
jle
sub
mov
mov
inc
pop
mov
dec
lock
lcall
jae
and
aas
xchg
inc
pushf
andb
popf
jae
jg
jle
jge
movb
mov
scas
dec
adc
jecxz
cli
mov
mov
mov
mov
mov
incb
test
ljmp
scas
jge
mov
mov
nop
and
jns
add
pop
xchg
cs
pop
xchg
int
sti
mov
mov
aaa
inc
pushf
andb
popf
jae
fwait
mov
inc
xchg
int
mov
add
push
lea
xchg
ret
xchg
mov
mov
lahf
not
pushf
andb
popf
jae
nop
fdivrp
mov
and
mov
jle
xchg
cs
push
hlt
pop
sbb
mov
icebp
sub
pop
pushf
andb
popf
jae
scas
fwait
icebp
nop
scas
sbb
mov
push
pushf
andb
popf
jae
cmpsb
aas
sti
jle
sbb
inc
cli
cmp
pop
pushf
andb
popf
jae
sbb
mov
fwait
outsb
jmp
add
add
jae
mov
mov
inc
or
adc
ljmp
bnd
int
ficomps
mov
nop
subl
outsb
adc
rcrb
jae
and
jge
jg
fs
in
ljmp
bnd
mov
mov
outsb
inc
outsb
pop
and
sahf
ror
push
lea
xchg
ret
xchg
int
fwait
pop
ficoms
add
pushf
andb
popf
jae
mov
inc
outsb
mov
mov
nop
incb
lea
xchg
ret
jge
fidivs
scas
jge
out
jmp
pushf
andb
popf
jae
movb
outsb
mov
xchg
cs
fmulp
outsb
mov
fidivrs
mov
mov
int
cmp
outsl
pushf
andb
popf
jae
aas
fwait
mov
pop
or
xchg
cs
xchg
push
fidivs
imul
pushf
andb
popf
jae
sti
cmpsb
sti
mov
mov
pushf
andb
popf
jae
cli
pop
xchg
icebp
lahf
mov
xchg
cs
push
pop
and
int
sub
and
popf
jae
mov
int
jg
outsb
cmpsb
mov
push
push
lea
xchg
ret
inc
sti
xchg
and
int
cwtl
add
dec
cmp
ljmp
bnd
jg
fisubrs
inc
int
scas
mov
hlt
fcoml
push
lea
xchg
ret
icebp
push
jg
icebp
mov
xchg
cmp
inc
xchg
cs
sub
mov
outsb
sbb
and
popf
jae
pop
and
cmpsb
scas
cmpsb
push
nop
or
pop
imul
pushf
andb
popf
jae
aas
push
pop
hlt
jg
nop
xchg
mov
pushf
andb
popf
jae
push
cmp
sbb
inc
lcall
jae
mov
mov
mov
jb
mov
pushf
andb
popf
jae
outsb
inc
jle
arpl
bnd
mov
mov
jg
orl
mov
xchg
cs
fwait
mov
sti
mov
mov
andb
popf
jae
xchg
cli
pop
jg
icebp
sbb
or
xchg
cs
jle
nop
nop
pop
mov
int
mov
lcall
jmp
jg
nop
cmpsb
hlt
icebp
cmpsb
icebp
icebp
sub
cld
or
add
testl
xchg
cs
xchg
int
cmc
and
mov
pushf
andb
popf
jae
pop
pop
mov
add
nop
nop
arpl
lea
xchg
ret
outsb
push
pop
inc
mov
cmpsb
cli
nop
mov
loope
loopne
push
pushf
andb
popf
jae
mov
inc
fwait
orl
aam
jb
dec
cmp
andb
popf
jae
mov
jg
inc
cli
inc
sbb
insl
pushf
add
and
popf
jae
jg
int
outsb
mov
jg
notl
pushf
andb
popf
jae
int
mov
jg
mov
mov
scas
dec
add
ljmp
bnd
and
outsb
int
mov
sbb
pushf
andb
popf
jae
mov
mov
mov
inc
mov
sub
std
into
dec
xchg
cs
sti
jle
cli
inc
mov
mov
inc
mov
mov
add
add
xchg
cs
inc
icebp
pop
xchg
sbb
nop
bound
cs
mov
sti
and
jg
push
imul
pushf
andb
popf
jae
cmpsb
nop
pop
mov
inc
in
nop
int
mov
and
popf
jae
mov
jg
mov
hlt
inc
in
xchg
pushf
andb
popf
jae
mov
xorl
aas
cli
xor
push
lea
xchg
ret
xchg
jg
mov
jle
mov
pushf
andb
popf
jae
xchg
xchg
pop
int
add
repz
pushf
andb
popf
jae
sub
cmpsb
xchg
orl
popf
jae
mov
mov
mov
sti
push
xchg
mov
push
lea
xchg
ret
mov
xchg
hlt
pop
xchg
or
xchg
cs
aas
mov
cmpsb
out
dec
pop
add
pushf
andb
popf
jae
nop
mov
outsb
icebp
or
or
lea
xchg
ret
scas
inc
jg
mov
mov
cld
leave
nop
push
add
push
nop
pop
add
rolb
ljmp
bnd
jg
mov
and
mov
add
push
pushf
andb
popf
jae
jg
ficomps
pop
fwait
xchg
inc
mov
mov
xchg
cs
adc
int
outsb
pop
jle
mov
sub
pushf
andb
popf
jae
aas
mov
nop
jg
or
lea
xchg
ret
movb
xor
lea
pushf
andb
popf
jae
icebp
push
cmpsb
scas
aas
jge
int
sti
mov
push
lea
xchg
ret
sub
mov
hlt
js
fidivrs
push
lea
xchg
ret
sbb
pop
int
int3
add
add
ds
xchg
cs
mov
fwait
fwait
jge
jle
sub
inc
call
popf
jae
xchg
mov
xchg
sub
lock
not
push
lea
xchg
ret
mov
push
inc
mov
mov
outsb
push
orl
and
popf
jae
mov
nop
icebp
pop
and
lcall
jae
cli
int
mov
mov
nop
inc
add
cwtl
add
xchg
cs
and
int
xchg
jge
pop
push
push
xchg
cs
mov
int
scas
hlt
icebp
sti
mov
pop
jne
pushf
andb
popf
jae
aas
outsb
jle
mov
testl
xchg
cs
sti
hlt
and
ficomps
repnz
add
jae
pop
push
adcl
lea
andb
popf
jae
int
jge
and
inc
outsb
hlt
rclb
lea
xchg
ret
fwait
mov
fwait
fwait
aas
push
mov
jge
add
and
andb
popf
jae
outsb
aas
push
mov
mov
mov
push
pusha
insb
test
xlat
or
push
lea
xchg
ret
jg
fwait
icebp
jle
icebp
cli
hlt
sti
and
and
popf
jae
cli
scas
int
mov
aas
cmpl
and
popf
jae
inc
sti
int
inc
sti
mov
scas
cltd
add
pushf
andb
popf
jae
scas
and
xchg
jg
cmpsb
lcall
and
popf
jae
inc
icebp
mov
pop
fwait
inc
mov
add
xchg
add
idivl
push
sub
add
xchg
ret
mov
mov
mov
sti
hlt
mov
adc
push
pushf
andb
popf
jae
icebp
cmpsb
push
cmp
inc
scas
mov
mov
ljmp
bnd
push
cli
xchg
inc
fsubp
push
pushf
andb
popf
jae
outsb
mov
sbb
cli
mov
inc
stos
cmpl
xchg
cs
pop
and
mov
jg
nop
mov
sbb
add
pushf
andb
popf
jae
mov
sti
scas
fwait
mov
pushf
andb
popf
jae
xchg
nop
int
inc
int
lret
mov
pushf
andb
popf
jae
icebp
mov
cli
mov
mov
mov
andb
popf
jae
scas
pop
cli
mov
outsb
and
add
and
add
push
push
xchg
cs
xchg
xchg
int
sbb
pop
inc
icebp
mov
insb
ret
dec
xchg
cs
mov
outsb
xchg
nop
fidivs
hlt
sub
testl
xchg
cs
push
mov
hlt
rolb
insb
addr16
xchg
cs
fwait
hlt
nop
pop
jle
pop
fidivs
or
jae
inc
mov
mov
cli
nop
fwait
jge
sbb
xchg
add
rcrl
jae
pop
scas
xorl
scas
xor
push
lea
xchg
ret
mov
hlt
xchg
mov
mov
mov
pushf
andb
popf
jae
jge
mov
cli
outsb
sub
lea
xchg
ret
mov
mov
mov
push
jge
and
insb
add
push
lea
xchg
ret
int
fwait
cmpsb
hlt
mov
mov
cs
cmpsb
hlt
pop
aas
cmpsb
mov
icebp
pop
sub
add
xchg
cs
xchg
jge
outsb
mov
nop
add
push
xchg
cs
pop
jg
hlt
fidivs
int
cmpsb
pop
not
pushf
andb
popf
jae
jge
xchg
and
stos
pushf
andb
popf
jae
icebp
inc
cmpl
fmulp
pop
push
add
ljmp
bnd
mov
mov
mov
mov
jle
cmpsb
mov
and
push
lea
xchg
ret
sti
icebp
mov
cmpsb
xchg
fisttpl
mov
call
add
xchg
ret
icebp
mov
xchg
adc
jae
mov
scas
icebp
xchg
mov
inc
callw
lcall
jae
jge
mov
mov
sbb
pusha
fistps
andb
popf
jae
jle
mov
mov
jle
mov
cmp
cs
inc
cli
int
scas
mov
int
addl
imul
pushf
andb
popf
jae
jg
mov
jle
pop
sbb
xor
ljmp
bnd
movb
sub
fwait
nop
int
mov
cs
scas
nop
mov
pop
sti
pop
xchg
hlt
sbb
aas
jne
xchg
cs
aas
xchg
mov
hlt
push
pop
pop
arpl
ljmp
bnd
mov
mov
nop
mov
jge
and
icebp
or
std
jp
add
add
popf
jae
mov
pop
pop
popl
pushf
andb
popf
jae
add
fidivs
add
shr
xchg
cs
pop
icebp
movb
inc
cmpl
rcpps
jae
cmpl
and
nop
sub
pop
nop
or
call
add
add
push
leave
or
adc
add
push
out
pushf
nop
jmp
adc
arpl
int3
nop
push
add
jmp
jo
and
add
out
jns
ret
popf
nop
jb
nop
push
push
mov
mov
ret
fldl
and
push
add
add
fiaddl
addr16
nop
dec
add
jmp
bound
cli
test
and
js
jns
add
leave
nop
pop
pop
pushf
add
test
retw
lock
cmc
xchg
xchg
nop
hlt
mov
add
popl
add
mov
add
jmp
sub
sub
add
inc
jo
dec
add
nop
loope
hlt
pop
mov
sbb
arpl
repnz
mov
inc
add
add
sub
nop
icebp
and
repnz
add
lods
out
add
push
cmpsl
and
out
xchg
xchg
push
add
out
xchg
divb
push
in
xor
rolb
add
mov
and
cmp
add
cmp
and
nop
cltd
add
fldl
push
test
nop
add
ret
into
movl
test
jmp
jecxz
or
xor
add
add
add
add
push
nop
es
pop
add
test
push
dec
notb
fldl
xchg
nop
inc
add
lods
pop
nop
pushl
mov
inc
add
add
sti
into
lds
stos
sub
aas
and
mov
mov
and
mov
add
popa
mov
in
fidivs
push
cmp
add
mov
lds
sub
js
lret
test
xor
into
in
lock
lea
test
add
add
es
fwait
cmp
push
nop
xchg
pushf
nop
repz
imul
imul
push
inc
test
sbb
add
lret
or
add
ljmp
pop
lret
xchg
push
add
pop
nop
sti
gs
or
dec
add
add
test
push
jbe
dec
test
jmp
in
nop
scas
jecxz
add
add
sbb
lcall
mov
imul
jg
xor
and
add
scas
xlat
mov
nop
xor
je
adc
and
mov
adc
scas
mov
movsb
dec
add
push
pop
jecxz
faddl
and
fisubl
xor
ss
add
les
xchg
mov
adc
imul
mov
add
pop
add
inc
nop
lea
mov
negb
out
sbb
nop
popa
and
add
negl
mov
js
jecxz
inc
nop
pop
sub
imul
push
imul
add
fiaddl
or
inc
sbb
pop
jg
scas
leave
add
dec
mov
nop
cmp
test
adc
add
loop
enter
inc
mov
dec
add
nop
mov
inc
push
or
std
mov
nop
inc
cmp
push
nop
mov
cwtl
add
add
sahf
lret
add
sub
rolb
adc
cs
add
fisttpl
xor
jg
test
add
cwtl
add
add
sbb
dec
es
cwtl
add
jo
out
lahf
shll
cmp
cmp
add
shr
cli
cs
lea
add
cmp
xlat
fwait
xchg
add
xchg
add
sub
insl
push
les
adc
or
mov
add
push
sbb
lcall
sub
lret
sub
add
mull
push
add
int3
nop
pop
add
mov
fsts
jae
mov
push
shrb
das
test
nop
jnp
and
add
icebp
dec
add
dec
add
or
repz
testb
mov
pop
nop
inc
sub
adc
add
mov
add
cltd
add
test
inc
nop
outsb
rclb
or
dec
nop
fucomip
arpl
repz
and
roll
jb
push
mov
push
mov
pop
add
add
xchg
add
fwait
scas
jmp
js
into
rolb
out
xchg
add
daa
das
dec
nop
in
test
stos
pop
add
mov
add
xlat
xchg
add
mov
add
cli
sub
movsl
sub
push
or
add
mov
mov
nop
cmp
add
cmc
pop
xor
inc
nop
stc
mov
add
sub
push
nop
andb
add
stc
loopne
jl
add
add
pusha
push
lds
cltd
nop
xor
ret
inc
push
js
push
adc
hlt
push
cmp
jl
cmp
ret
mov
nop
push
sub
add
lahf
insb
jnp
add
add
adcb
and
ss
mov
add
push
mov
bound
cmp
nop
notl
inc
jnp
test
dec
add
gs
add
mov
push
add
and
sub
nop
incl
stos
pop
outsb
xchg
sub
add
fadds
rcll
mov
outsl
jl
nop
loope
push
and
adc
jae
mov
or
leave
add
dec
add
cmpsb
or
mov
adc
jo
sti
fwait
jge
lds
adcb
les
out
adc
xlat
xor
clc
and
nop
loopne
dec
add
cmp
lods
cmpsl
jns
stos
xchg
sbb
das
and
cmc
pushf
nop
xchg
dec
add
jae
jnp
xchg
nop
idivb
and
adc
add
xchg
push
lea
jp
add
xlat
movsl
imul
jb
bound
andb
outsl
sbb
lahf
divl
dec
nop
adc
roll
or
loop
add
cwtl
add
nop
shr
cli
jge
adc
mov
and
data16
jae
nop
cmc
fsts
pop
mov
add
fstpt
pop
test
push
pop
test
sub
dec
nop
sub
pusha
mov
lret
and
add
push
adc
add
or
int3
add
jno
roll
mov
mov
jb
sub
add
pop
mov
xchg
add
inc
add
cmp
push
add
jecxz
cmp
cmp
lret
push
jmp
add
imul
push
stos
aam
push
lret
add
xor
xor
cld
into
add
mov
pop
xchg
aam
mov
and
xchg
fisubl
sbb
fwait
sti
in
addr16
add
movsl
push
adc
dec
or
dec
nop
pop
xor
addb
xor
mov
inc
add
mov
inc
add
pop
lds
insl
sbb
mov
sub
add
adc
into
sahf
test
movsl
and
leave
add
sub
mov
pop
nop
or
dec
add
add
add
nop
add
mov
push
insb
shrd
push
cmp
lahf
pop
nop
sti
xchg
ret
outsb
sub
nop
mov
rolb
adc
into
and
and
sub
push
adc
inc
add
inc
repnz
aad
jmp
nop
dec
pop
cli
roll
add
stos
dec
inc
xchg
and
stos
push
inc
popa
jge
jmp
add
mov
les
xchg
add
mov
add
insb
mov
add
pop
dec
add
outsb
mov
add
adcl
jmp
adc
mov
push
and
sbb
call
add
jbe
pop
cmp
iret
bound
push
sbb
lea
aas
adc
push
aaa
sbb
lds
lahf
cmp
mov
aaa
out
add
add
add
dec
rolb
ret
bound
in
arpl
adc
xor
rolb
jae
xchg
je
push
aas
push
dec
add
mov
ds
out
jp
outsb
cmp
rolb
add
xor
sub
out
mov
pop
idiv
cmc
into
or
js
lea
mov
lods
call
xchg
and
add
sub
ja
arpl
add
nop
sbb
jne
jge
cmp
nop
xchg
add
cmp
adc
cmp
add
dec
nop
fiadds
in
jo
add
rcll
nop
aam
push
je
nop
sub
lods
fdivp
push
inc
add
add
psubusb
adc
jae
add
repz
das
sbb
mov
nop
add
mov
rcl
nop
gs
add
add
nop
hlt
jge
add
cmp
pop
cli
iret
xchg
rolb
sub
add
lds
dec
das
cmpsb
inc
adc
or
dec
nop
repz
mov
lret
nop
cmp
jno
pop
nop
add
faddl
aaa
movsl
imul
nop
repz
in
and
test
mov
mov
add
nop
and
or
test
stos
fadds
mov
add
es
rolb
fstl
xor
ds
ret
add
xchg
aas
sub
pusha
xor
icebp
popa
adc
mov
dec
ret
add
add
and
mov
fsts
fisttps
adc
fucomip
fcoms
jo
cli
cmc
mov
inc
xchg
or
add
aad
lods
push
lret
lahf
pop
mov
pop
sbb
add
adc
ret
leave
add
xor
or
push
push
add
mov
add
outsb
xor
mov
enter
nop
cmc
out
cmc
leave
nop
xchg
enter
out
hlt
mov
lods
add
xor
nop
add
aad
call
nop
jo
nop
xor
push
add
inc
add
add
xor
mov
add
in
mov
add
daa
out
mov
mov
add
out
imul
add
mov
add
jbe
pusha
insl
push
add
mov
int
cs
lret
loop
mov
call
pushl
add
aaa
cmpsb
jg
push
sub
nop
push
sub
mov
in
hlt
iret
pop
inc
jb
nop
nop
or
nop
std
cmp
mov
pop
add
inc
add
into
xchg
add
aaa
add
nop
pop
add
lea
xchg
movsl
mov
xor
ret
gs
mov
adcl
addb
aas
xor
xchg
sub
mov
add
or
mov
add
in
add
mov
lods
in
xor
add
ljmp
mov
pusha
push
add
add
into
sbb
mov
or
push
push
nop
hlt
loope
repnz
dec
add
sti
dec
add
dec
add
add
rclb
adc
lret
in
insl
xor
add
call
pushf
add
fldl
jb
aas
jb
mov
push
add
fwait
mov
or
lds
xor
pop
add
stos
addb
movsl
aas
mov
dec
nop
lods
and
js
mov
fadds
and
push
add
add
inc
add
sbb
enter
add
lcall
add
stc
mov
leave
nop
sahf
inc
nop
xchg
test
inc
mov
add
inc
jb
repnz
add
push
dec
mov
iret
or
push
add
pushf
add
sti
and
xor
sub
lret
push
add
and
lock
add
in
sbb
xor
inc
add
or
push
lea
mov
add
scas
mov
or
mov
add
nop
xchg
cmp
ret
jae
nop
aaa
xchg
nop
roll
add
cmp
imul
lock
mov
mov
add
jnp
jne
add
nop
test
add
xchg
out
out
mov
lds
ror
add
scas
pushf
add
into
jmp
jecxz
nop
lods
mov
sbb
in
add
dec
nop
insb
je
add
fwait
dec
imul
pop
ljmp
add
les
adc
add
nop
iret
pusha
push
popf
add
test
movl
sbb
add
fsts
lock
inc
add
stos
sarl
nop
jl
aad
paddb
test
gs
sbbb
ds
ja
jge
add
mov
nop
sub
cmp
outsl
cli
or
mov
jnp
add
nop
test
test
sbb
mov
nop
pushw
lods
or
roll
repz
sub
jnp
mov
add
add
cmp
dec
gs
add
xchg
nop
aad
add
roll
mov
leave
add
movb
add
add
test
jb
dec
xchg
mov
repz
adc
rclb
add
add
aaa
les
inc
inc
add
add
enter
push
xlat
jne
sub
adc
mov
sub
sub
inc
and
faddl
pop
xchg
daa
or
adc
leave
nop
xor
or
pop
aaa
dec
add
add
jp
add
insl
xlat
pop
js
jecxz
rcll
push
lock
add
jecxz
push
pop
xor
nop
add
jmp
lea
add
mov
jl
inc
bound
rcl
nop
add
int3
add
mov
add
cmpsb
jl
sub
test
lahf
mov
add
mov
cwtl
add
lahf
fsts
mov
std
xor
in
stos
xchg
jno
mov
add
inc
nop
mov
jle
push
nop
pop
add
jp
leave
nop
push
mov
inc
add
mov
inc
add
out
nop
in
mov
add
sbb
les
sbb
push
nop
add
jo
and
hlt
xor
gs
std
adc
movsb
push
jl
nop
lds
cmp
adc
sbb
xlat
pop
add
add
int3
nop
mov
mov
add
mov
add
or
pop
nop
cmp
roll
imul
rorb
nop
insl
lods
jne
jbe
mov
xor
add
sub
addl
nop
loop
mov
fisttps
repnz
add
and
add
jnp
sbb
add
fs
sub
push
es
rolb
mov
add
push
loope
push
fcoms
stos
push
movnti
add
add
and
pop
jmp
pop
repnz
jge
push
nop
aas
stos
out
rclb
adc
mov
pop
nop
sbb
gs
lahf
mov
add
add
int
cmp
lahf
cmpsb
jbe
cli
xor
lahf
dec
nop
sbb
es
mov
add
aaa
test
add
push
dec
add
jns
hlt
inc
nop
loopne
sub
pop
add
and
add
ficomps
mov
dec
pop
add
fldl
bound
xchg
add
and
jge
out
add
fiaddl
and
sub
stos
jns
and
adcb
repnz
inc
xlat
pop
arpl
out
dec
mov
push
add
cwtl
nop
leave
add
mov
nop
rolb
std
mov
add
ljmp
push
add
add
icebp
mov
int
inc
or
fadds
xchg
adc
test
les
add
fisubs
or
add
nop
xor
leave
add
add
push
cmp
push
pop
scas
faddl
push
nop
sbb
nop
sbb
movsb
or
iret
push
add
sbb
in
dec
nop
push
cli
sbb
cmp
pop
xchg
dec
pop
nop
pop
adcl
roll
cmpsl
dec
add
orb
push
lret
push
pop
add
sbb
sbb
inc
nop
mov
inc
or
add
flds
push
push
add
loopne
add
sahf
stos
jb
and
cmp
jbe
nop
aad
dec
inc
jg
add
cmpsb
lock
add
lds
std
mov
cmp
or
dec
cmpsb
lea
cmp
sahf
in
aaa
sub
mov
add
jmp
in
inc
nop
xchg
lds
add
inc
nop
gs
xor
mov
pop
add
jmp
nop
fadds
mov
sti
fldl
sbb
add
ja
xlat
lret
in
faddl
xchg
add
push
sbb
ret
mov
and
aas
mov
movsl
mov
add
shll
add
aaa
mov
cmpsb
xchg
add
xor
xlat
and
cmp
add
push
nop
sub
jl
add
pushf
add
xrelease
dec
nop
inc
les
sub
rolb
add
add
jl
push
jg
mov
dec
add
nop
jnp
aam
mov
mov
add
push
jle
stos
ss
xor
adc
sbb
jg
add
xor
cltd
add
add
xor
pop
add
test
addl
movsl
push
iret
jge
mov
adc
js
jmp
nop
in
and
add
jp
call
mov
add
xchg
add
mov
ds
and
mov
or
dec
nop
repz
inc
add
jle
scas
and
mov
xchg
pop
add
jp
insl
roll
mov
mov
nop
xlat
rclb
das
hlt
scas
push
nop
stc
and
addr16
lods
mov
mov
jnp
test
in
add
es
nop
and
jg
in
cld
ljmp
popa
cltd
add
pop
add
or
mov
xchg
testb
add
inc
add
sbb
jne
jg
fs
test
adc
mov
scas
les
mov
pop
jg
inc
add
mov
add
nop
sub
and
lods
inc
add
nop
mov
sub
cmp
add
pushf
nop
and
insb
mov
pop
mov
aam
inc
jo
int3
nop
sub
inc
or
nop
and
mov
loopne
pop
nop
cmpsl
and
or
rclb
pop
sti
sbb
stos
out
add
add
rcll
mov
mov
jp
fstl
in
adc
stos
in
ficoml
clc
out
nop
imul
in
mov
faddl
cmp
push
push
movsl
cmp
nop
nop
add
pop
outsb
movsb
jae
add
fcoms
xlat
test
cmpb
mov
test
ret
pushl
pop
jecxz
adc
lcall
nop
sbb
xchg
jl
add
iret
nop
add
std
pushf
add
add
int3
add
add
pushf
nop
dec
mov
out
mov
call
adc
cli
js
pop
dec
addl
mov
int
xchg
nop
sbb
bsf
add
add
les
xchg
dec
nop
or
pop
add
sbb
inc
stos
loope
xlat
jne
jno
ret
nop
lret
pushf
nop
into
push
roll
outsb
stos
add
jo
imul
mov
cmc
inc
mov
lret
add
nop
xchg
add
sbb
daa
mov
rcrl
cmpsb
push
mov
js
fstl
pop
fldl
stos
and
loopne
addr16
add
or
das
movsl
cmp
fisttps
add
add
push
nop
and
jg
nop
nop
add
pop
push
test
add
popa
mov
popa
pop
sub
iret
roll
nop
fsubp
dec
add
cwtl
add
mov
xchg
nop
push
pop
xor
addl
lods
movsl
dec
nop
mov
mov
in
sub
sarl
pop
xchg
imul
mov
mov
sub
nop
cmpsl
sub
add
hlt
imulb
mov
nop
mov
mov
test
decb
add
jmp
xchg
push
add
xchg
je
call
pop
ljmp
stos
dec
dec
nop
sub
nop
popa
jbe
mov
gs
push
stos
sbb
adc
aas
test
aad
std
cmp
int
add
rcr
jecxz
or
add
mov
xchg
and
jg
nop
repnz
mov
xor
lea
cmp
add
fbstp
nop
fcmove
jo
push
nop
rcll
nop
cmp
jae
scas
es
out
pop
add
es
push
mov
add
push
adc
add
rcrb
xor
add
pop
add
add
std
mov
jmp
setb
inc
lahf
adc
fwait
adc
divb
outsl
icebp
xlat
dec
add
movsl
movsb
jge
mov
add
dec
es
jmp
lods
pop
add
cwtl
add
nop
scas
add
cld
cmp
rcll
cmp
and
ret
xchg
nop
lock
sbb
clc
insb
addl
jg
stos
mov
add
add
xchg
add
pop
fimuls
dec
add
out
nop
and
add
add
nop
int3
add
xchg
push
add
out
inc
scas
cmpsl
es
mov
push
jp
push
add
sub
jno
ficoms
pop
sbb
scas
adc
in
adc
xchg
add
loope
adc
dec
add
nop
pop
cli
add
clc
sub
xchg
nop
push
and
fwait
aam
mov
xor
lret
xchg
mov
and
pop
cld
adc
sub
ljmp
add
es
test
incl
out
push
push
nop
imul
or
imul
pop
add
js
pop
add
nop
add
mov
adc
adc
add
fbld
fsts
mov
sub
nop
sti
fsts
es
lahf
out
mov
pop
js
mov
cmp
hlt
insl
shll
add
nop
sub
add
out
movb
nop
subl
pusha
pop
push
add
sbb
mov
fs
add
push
add
flds
imul
test
nop
add
or
mov
or
mov
int
mov
arpl
nop
xchg
add
push
pop
add
add
int3
add
fbld
cmpsl
pop
add
jns
pop
add
nop
mov
nop
adc
add
mov
fwait
or
lcall
and
add
add
ds
into
arpl
push
pop
pop
cmpsb
jns
add
or
mov
movsl
mov
jbe
add
loope
add
fimull
add
mov
pop
add
loop
add
jg
mov
movsl
xor
jecxz
inc
data16
mov
mov
rolb
stos
mov
ss
jge
sbb
xchg
das
jp
in
sbb
add
lahf
inc
nop
adcl
add
adc
sbb
int3
nop
or
nop
pop
lea
jle
add
aad
inc
cmp
add
mov
add
ret
fs
sti
inc
add
lock
lea
mov
push
add
mov
cmpsl
cmpsb
mov
clc
jmp
cmp
ja
in
xchg
mov
adc
sbb
inc
inc
add
je
dec
outsl
push
mov
mov
add
ret
jnp
es
add
add
repnz
outsl
dec
sbb
xchg
mov
nop
nop
add
dec
add
mov
xchg
lock
adcb
xor
pop
sub
push
xor
mov
fcoms
push
lret
push
mov
add
mov
scas
ret
mov
les
movsb
mov
cmp
outsb
aad
stos
fimuls
inc
mov
mov
mov
lods
jmp
cli
and
or
ljmp
xor
add
add
jp
add
ljmp
dec
or
jg
or
cltd
add
add
adc
add
xor
insl
push
gs
push
jb
nop
loop
jo
movsb
push
add
lods
adcl
nop
and
imul
inc
aad
pop
ret
mov
lock
inc
add
rolb
push
int3
add
cmp
cmp
nop
sahf
ljmp
jecxz
nop
cli
jge
add
aad
sub
cs
add
outsl
mov
add
sbb
and
mov
sbb
out
cld
xchg
sub
add
mov
test
outsb
mov
clc
mov
jle
mov
add
add
jmp
add
data16
pop
inc
js
add
cmp
add
sar
jo
pusha
fadds
and
nop
lret
mov
push
inc
nop
gs
lahf
iret
ja
add
mov
nop
mov
nop
add
jne
outsb
xor
pop
add
pop
imul
nop
nop
sbb
cltd
add
into
sbb
arpl
les
int
mov
in
dec
nop
cmp
mov
out
popf
add
flds
add
adc
sbb
jle
xchg
add
lds
cmpsb
mov
ficompl
and
push
ror
add
push
in
test
mov
dec
les
enter
lock
ret
mov
add
add
dec
add
add
or
fidivrs
icebp
dec
add
popa
cmp
scas
jnp
aas
imul
inc
mov
jg
jne
rolb
ds
stc
jle
xlat
inc
add
roll
sub
xor
aaa
and
les
ficomps
flds
inc
add
mov
push
sti
pop
repz
cmp
repz
leave
add
out
stc
in
adcb
or
jns
add
push
nop
or
xchg
addr16
testb
int
addl
repnz
cmp
nop
mov
nop
in
nop
lahf
mov
dec
in
xchg
mov
mov
repz
add
out
sbb
test
xor
push
add
aas
out
adc
add
nop
add
aam
push
cmpsb
bound
adc
movsb
addb
add
add
cmp
nop
sbb
push
ss
adc
add
and
nop
movsb
jns
add
mov
nop
inc
add
daa
and
adc
iret
fstpt
nop
jle
nop
push
add
fimull
in
adc
mov
nop
scas
mov
imul
adc
in
inc
add
fiadds
add
enter
add
xor
fcoml
fisubrs
repnz
add
cmp
push
add
add
inc
loope
cmpsl
popa
inc
add
enter
cmp
push
lods
mov
pop
add
fldl
std
data16
inc
sub
faddl
loop
inc
add
push
xchg
nop
in
adc
push
cmpsb
ret
add
aaa
and
jmp
fidivl
nop
adc
add
roll
test
icebp
out
lret
dec
add
notl
ljmp
movsl
mov
or
add
add
sub
call
inc
add
push
add
fcoms
jno,pn
aaa
xchg
add
mov
xor
pushf
nop
sbb
rolb
ds
pushf
add
inc
inc
nop
fwait
push
nop
jbe
loopne
mov
inc
push
nop
into
jmp
nop
sub
mov
mov
adc
sbb
add
add
stos
dec
add
add
push
add
add
gs
cmp
stos
fidivl
adc
sub
ret
sub
adc
mov
mov
xchg
xor
movsl
mov
push
add
add
enter
sbb
push
les
and
mov
jbe
ljmp
add
dec
mov
aad
xorb
push
bnd
stc
imul
xor
and
push
nop
popf
add
pop
nop
out
pop
add
add
add
nop
jg
mov
add
icebp
outsl
xchg
cld
jg
scas
dec
add
idivl
and
adc
popa
rolb
nop
jl
test
xchg
nop
mov
jl
test
add
nop
sub
push
aad
faddl
les
gs
add
mov
cmp
ja
add
or
pop
or
add
stos
mov
jg
mov
add
add
cmpsl
inc
cwtl
nop
movsl
mov
in
push
or
ljmp
in
adcb
outsl
sahf
icebp
mov
add
push
mov
push
nop
mov
add
iret
xor
nop
mov
mov
arpl
mov
and
push
add
dec
push
nop
mov
xor
nop
xlat
inc
and
nop
mov
nop
mov
dec
add
nop
sub
cmp
cmpsb
roll
aam
pop
cmp
add
add
cmpsb
xor
mov
mov
hlt
pop
add
or
mov
rclb
add
scas
test
lret
mov
add
cld
dec
add
iret
mov
jo
fs
scas
insl
imul
and
pushl
ud1
fisttps
fiaddl
add
add
add
gs
test
cs
nop
dec
add
lds
xchg
jle
scas
call
add
roll
mov
xor
mov
lret
jns
mov
loope
sub
out
repz
icebp
and
add
add
in
sbb
add
in
insb
and
jp
nop
idivl
push
mov
add
add
jae
add
jno
jne
and
mov
test
leave
add
add
insl
daa
cld
insl
add
pushf
add
jno
jecxz
jecxz
push
jp
xchg
add
push
push
movsb
in
add
mov
nop
pop
ss
add
lret
out
fcmove
add
sub
xchg
sub
dec
pop
mov
je
nop
nop
add
add
out
mov
add
inc
nop
scas
jl
int3
add
add
push
add
in
add
pop
xchg
popf
add
sub
fldl
push
nop
xchg
xchg
nop
cltd
add
add
pop
jecxz
mov
push
out
adc
add
bsr
dec
adc
push
arpl
into
sub
mov
dec
add
roll
out
sbb
xchg
nop
xchg
adc
jl
sub
pusha
jae
pop
add
and
stc
fldl
divl
adcl
icebp
rolb
subb
xchg
jge
sbb
adc
hlt
pusha
repnz
test
jnp
loop
sub
nop
push
call
and
add
out
sub
push
lods
sbb
out
faddl
cmpsl
pop
push
insb
push
imul
popf
add
add
fadds
mov
add
loopne
mov
mov
add
add
test
lret
outsl
adc
sub
nop
ja
stc
fistl
aad
dec
iret
inc
xchg
xor
nop
into
lods
gs
lret
mov
cmp
inc
nop
orb
fstl
jmp
loop
nop
daa
xor
sub
cltd
add
sub
movsb
jae
inc
pop
xchg
add
es
add
or
cld
sub
repz
push
addl
outsl
mov
ja
icebp
imul
add
clc
dec
nop
in
mov
jg
les
push
add
nop
add
xor
addl
add
push
add
test
dec
outsl
cmp
sub
nop
lret
mov
insl
hlt
mov
mov
or
mov
xchg
add
jmp
add
mov
nop
loopne
nop
ljmp
mov
lret
add
lahf
mov
lods
pop
mov
sahf
cmp
movsl
or
inc
out
cwtl
add
xchg
add
add
xor
ret
mov
cld
pusha
flds
sbb
add
mov
dec
cmpsb
mov
and
nop
mov
adc
jb
add
sbb
cs
loopne
repz
and
out
call
inc
nop
sub
nop
jp
insb
push
repnz
xchg
xor
fimull
dec
loopne
jecxz
add
imul
loopne
add
cmp
cmc
pop
sbb
xor
add
in
ja
or
cmp
scas
lahf
cli
jge
add
mov
add
insl
mov
add
xor
pusha
roll
mov
add
add
adc
nop
imul
mov
xor
fwait
outsl
addl
nop
jb
jecxz
add
divb
dec
add
mov
nop
nop
rolb
adc
push
sub
mov
rolb
sbb
sub
rclb
add
pop
or
dec
add
mov
add
add
std
mov
cmp
sbb
jg
nop
cmp
loopne
push
add
push
mov
ja
cmp
add
sub
aaa
call
dec
add
mov
cmp
add
roll
xor
out
sti
mov
clc
pop
push
lock
cmp
cli
inc
nop
xor
ss
scas
pop
pop
nop
jp
icebp
or
mov
add
pusha
arpl
nop
scas
aas
lock
dec
add
roll
xlat
push
cltd
add
movb
mov
xchg
jg
inc
cmp
test
out
xor
jg
jecxz
add
push
jbe
add
add
sub
add
add
add
add
jg
add
not
scas
cmp
fcmovne
pushf
nop
xor
test
popa
cmc
ss
or
nop
inc
xchg
icebp
enter
mov
jge
stos
jbe
jb
sbb
cmp
add
aaa
fistps
dec
push
xchg
add
pushf
add
add
push
dec
add
add
xor
and
sbb
jbe
loop
inc
inc
add
mov
in
mov
add
pushf
add
add
fldl
pop
add
imul
rcll
add
nop
fistpll
or
push
xchg
add
in
add
and
mov
ja
add
nop
push
xor
add
add
add
mov
nop
out
movsl
in
sti
pop
xlat
cmpsl
insb
cmp
xor
add
jmp
dec
add
out
movsb
cs
stc
ljmp
add
lods
or
add
jge
aas
ret
sub
fadds
xchg
nop
xchg
icebp
adc
ret
sbb
mov
mov
nop
insl
jne
xor
push
or
mov
mov
dec
nop
je
repz
les
fmulp
xor
cld
es
jo
push
add
lods
dec
nop
pop
and
add
dec
pusha
add
rcll
cld
out
lea
arpl
mov
add
in
mov
test
lret
jae
add
jmp
push
inc
add
sub
mov
ljmp
mov
imul
add
push
lea
xchg
dec
lahf
mov
add
sbb
sbb
fstl
jmp
dec
add
ja
jno
pop
pop
add
inc
add
mov
push
add
inc
xor
add
adc
xor
test
cs
add
nop
add
pop
add
sub
out
jb
xor
mov
mov
rolb
xor
fists
lret
shrb
mov
cmpsl
mov
adc
add
lcall
push
nop
cmp
nop
lds
pop
ljmp
rclb
and
jecxz
pop
add
and
out
xchg
inc
movsl
test
sbb
jl
add
stc
cltd
nop
xchg
test
add
ja
push
inc
cmp
rcl
or
mov
add
add
sub
lret
push
sbb
fstpt
push
nop
adc
xchg
add
xorl
loope
add
clc
in
mov
and
push
imul
xchg
ljmp
dec
cmc
out
jle
insb
and
ret
roll
cmpsl
push
add
add
mov
mov
psubw
nop
lcall
in
test
add
mov
cmp
nop
pop
or
fimuls
jb
and
loope
and
nop
out
nop
cld
lods
cmp
or
cmp
lret
in
cmpl
jne
int
out
or
add
and
mov
addr16
pop
rcrb
nop
negb
pop
mov
jl
jae
jbe
dec
jl
sbb
fistl
mov
in
xor
xchg
add
add
push
leave
add
and
add
nop
adc
nop
adc
arpl
jl
aas
push
test
push
add
mov
ret
xor
js
push
add
add
sbb
add
lret
cwtl
add
lea
nop
add
sub
add
out
repz
push
nop
sbb
jne
cs
add
jae
out
jl
xor
add
fadds
sbb
cwtl
nop
int3
add
and
mov
sub
sub
add
test
add
sub
add
inc
addb
adc
jnp
add
fcoms
jl
pop
add
pop
or
test
stos
mov
push
add
repz
jle
xor
gs
add
lds
xchg
xchg
add
stos
mov
das
add
mov
test
adc
add
jecxz
add
add
aaa
add
fistpll
stos
roll
nop
negb
insb
dec
push
inc
daa
lea
aas
push
add
cmpsl
pop
or
mov
xor
or
es
add
add
les
cmc
jae
xchg
jp
add
mov
mov
mov
add
jnp
test
or
loope
xlat
dec
nop
flds
rolb
nop
mov
enter
daa
out
int3
add
idivl
movsl
int3
nop
inc
mov
xor
pop
hlt
xchg
add
addr16
stc
jmp
add
pop
test
mov
add
add
lds
lds
scas
sti
sbb
lahf
iret
jae
test
mov
pop
add
test
cmc
test
out
in
add
add
nop
mov
leave
add
sbb
xchg
nop
loop
nop
mov
mov
push
xchg
push
pop
add
add
ret
flds
push
je
aas
xchg
dec
nop
test
outsb
out
jnp
add
fisubl
mov
lea
mov
mov
lret
push
fs
scas
mov
nop
fsubp
notb
push
pop
add
sub
sub
pop
push
add
inc
nop
jmp
add
je
add
lret
push
add
inc
cmp
outsb
push
nop
jle
nop
mov
push
cli
jnp
cwtl
nop
insl
nop
nop
fadds
push
mov
add
in
sub
mov
and
add
outsb
pop
mov
inc
add
sbb
pop
nop
lret
cmp
jg
add
adc
jae
fisubrl
mov
push
jae
add
add
scas
sbb
pop
add
scas
sahf
outsl
mov
or
and
add
leave
add
ret
pop
ficompl
add
add
add
rclb
add
add
add
out
ficompl
add
jns
add
mov
lock
stc
xchg
add
faddl
fwait
and
sbb
cmp
pop
add
add
hlt
movsb
addl
cmp
nop
jns
addl
and
jbe
lods
cmp
nop
nop
ss
mov
jp
or
add
call
add
nop
fildll
stc
fcmovnb
or
nop
lods
jnp
xor
lods
mov
or
push
add
cmpsl
pop
pusha
dec
mov
test
add
adc
loopne
add
add
add
sub
jnp
sbb
rclb
pushl
mov
nop
mov
inc
add
add
add
adc
push
add
sbb
stos
nop
add
nop
ljmp
arpl
jb
add
cs
mov
mov
xor
inc
std
test
adcl
test
ret
bound
jge
add
dec
nop
std
mov
push
lret
jnp
dec
mov
aaa
or
mov
dec
mov
icebp
faddl
mov
add
add
sbb
fidivrl
out
daa
arpl
mov
xchg
xor
sbb
mov
ljmp
or
out
int
xchg
add
pushf
add
cmpsl
out
or
sub
push
push
add
nop
add
inc
add
test
xchg
nop
aam
mov
test
mov
mov
add
test
add
pop
nop
fisubrs
jmp
movsl
jge
pushf
add
sbb
add
dec
jae
add
les
aad
mov
repz
lret
imul
pusha
leave
add
enter
jb
cmp
add
test
repz
adc
or
fldl
xchg
fisubrl
mov
adc
add
insb
inc
divl
nop
mov
cmp
enter
pop
add
sbb
lods
and
or
and
add
or
jp
mov
ljmp
add
in
add
inc
fcmovne
add
aam
mov
add
cmp
nop
cmp
cmc
adcl
sub
mov
add
cld
mov
nop
mov
nop
or
mov
add
lcall
xchg
add
popa
sub
xchg
imul
push
push
sub
pop
add
movsb
mov
bound
lcall
scas
sub
loopne
cmpsl
outsb
cmp
sbb
jne
insl
or
mov
lret
inc
inc
sbb
imul
loopne
push
dec
add
and
add
add
add
sbb
xchg
pop
jno
cwtl
add
int3
add
xchg
lcall
nop
mov
or
xchg
out
mov
enter
cmpsb
test
lods
dec
add
mov
add
nop
push
push
add
xchg
add
add
or
bound
roll
dec
nop
aam
mov
add
mov
add
dec
dec
add
sub
sbb
mov
cmp
nop
xor
mov
nop
mov
push
outsl
pop
add
xor
daa
pop
in
adc
in
push
dec
add
nop
dec
add
fs
pop
movsb
xchg
add
dec
adcl
nop
sbb
movsb
int3
add
add
test
bndldx
mov
dec
nop
sbb
roll
decb
sbb
xchg
nop
flds
mov
aam
icebp
sbb
cmc
jb
xchg
or
cmpb
add
les
bound
insb
sub
rolb
cmp
js
push
sub
add
xchg
pop
inc
add
add
add
sbb
pusha
mov
pop
lds
jg
imul
incb
add
jo
mov
jnp
imul
add
lods
addl
roll
nop
outsb
pop
nop
iret
add
outsb
ljmp
loope
sbb
pop
sub
add
mov
xchg
add
sub
nop
and
sbb
or
in
inc
nop
dec
jl
in
cs
nop
les
xchg
inc
add
push
xchg
add
sbb
xchg
add
add
jo
inc
nop
xchg
inc
nop
leave
add
test
jg
daa
mov
ret
lahf
out
stos
hlt
rolb
pushf
nop
addb
daa
testb
call
add
mov
repnz
lcall
inc
dec
add
pop
nop
out
nop
mov
sbb
inc
push
ljmp
nop
push
push
nop
sti
iret
cmpsl
out
cmp
int
mov
xor
test
mov
jmp
imul
xlat
jbe
add
addr16
aam
fadds
ret
add
cmc
das
xor
adc
imul
lock
xchg
add
das
sub
in
addl
out
sub
fsts
cmpsl
into
or
js
or
scas
lret
lret
pavgb
addl
mov
xchg
add
push
adc
cmpsl
sub
cs
fcoml
aad
stc
xlat
aam
aad
sub
cmpsl
loopne
loope
push
sahf
cmpsl
pop
sbbl
and
add
popa
xchg
nop
gs
nop
push
adcl
jl
push
sbb
fcmove
inc
nop
or
sub
xor
out
je
adc
or
dec
nop
dec
add
pop
dec
add
xor
data16
lea
or
test
stos
jmp
add
pop
nop
leave
add
dec
add
imul
nop
sbb
sub
inc
sbb
ljmp
int3
add
add
xor
rolb
dec
add
cli
push
xchg
clc
cwtl
add
nop
pop
aaa
inc
inc
sahf
pop
cmc
dec
mov
add
mov
je
negl
mov
testl
sbb
add
add
add
js
add
add
mov
xor
out
lods
fistl
call
xchg
nop
daa
cmp
ja
add
mov
loop
push
xchg
add
in
nop
testb
add
jno
nop
and
mov
add
dec
imul
add
adc
dec
pop
mov
add
aas
ret
fsts
xchg
nop
jp
nop
rolb
dec
lods
mov
imul
imul
aad
cmc
lret
nop
es
call
cmpsb
bound
test
push
inc
outsl
mov
mov
cmpsb
mov
sub
xor
lret
nop
xlat
xchg
adc
stc
loop
add
loope
cmp
sbb
les
pop
lret
fidivs
mov
or
cmp
and
aad
repz
pop
ljmp
fisubs
fcmovu
add
call
mov
and
nop
icebp
pop
nop
mov
loopne
inc
nop
dec
add
dec
lods
hlt
outsb
mov
lcall
mov
adc
dec
nop
adc
sub
xor
dec
mov
and
add
mov
hlt
adc
push
addb
sub
mov
pop
cmc
inc
nop
and
repz
add
ljmp
repnz
add
lcall
mov
and
jne
nop
jbe
movsb
jo
adc
add
push
push
pop
xor
pop
mov
add
je
jmp
lock
or
adc
push
cld
movsl
dec
clc
std
rclb
add
cld
xchg
jp
mov
or
sti
clc
lcall
fs
sbb
add
inc
add
fisubl
jne
add
and
mov
mov
or
cmpsl
mov
mov
add
push
add
nop
in
out
adc
lock
adc
pop
nop
add
ret
jno
jmp
es
mov
movsl
fcoms
inc
cmp
cmp
rolb
mov
inc
nop
xor
imul
mov
roll
cmpsb
ljmp
add
imul
dec
add
mov
into
bound
nop
mov
mov
sbb
add
adc
add
add
push
faddl
insb
addb
dec
add
or
xchg
jns,pt
push
pop
jg
add
imulb
jg
add
cld
leave
nop
sub
nop
adc
adc
mov
sahf
add
add
add
in
ret
xchg
fadds
test
popa
lret
cmp
pop
mov
push
imul
nop
inc
and
add
out
in
cmpsb
test
jno
ss
nop
js
jo
add
jns
imul
pop
pusha
call
add
adc
dec
in
push
lds
icebp
enter
and
addb
add
mov
nop
cmp
jge
ss
ret
nop
roll
xor
jb
rclb
popf
add
mov
nop
fisttps
nop
out
das
stc
leave
add
imul
adc
cmp
nop
test
nop
push
push
xor
add
inc
add
push
insb
adc
xor
sub
imul
dec
add
and
cli
out
push
jbe
faddl
push
cltd
add
mov
pusha
stc
rolb
ja
dec
or
nop
scas
jbe
faddl
add
test
xchg
sti
icebp
imul
test
fldl
cmc
mov
adc
xor
cmc
xlat
ret
nop
fsubrp
xor
scas
pop
add
mov
add
nop
sub
add
add
sbb
mov
pop
nop
ret
rol
xor
ja
mulb
arpl
or
add
sbb
loop
repnz
pop
lret
insl
in
nop
and
ret
test
pusha
lea
xchg
cmp
add
add
pop
xchg
mov
add
test
inc
add
mov
popa
popa
outsb
or
lods
flds
hlt
sbb
push
andb
sti
fldl
in
add
nop
ja
nop
inc
add
add
add
fs
xchg
ss
jb
mov
out
jl
mov
ljmp
test
ret
in
es
mov
add
nop
outsl
pushf
nop
mov
dec
jno
je
imul
lahf
mov
ss
test
adc
add
scas
push
out
scas
push
add
add
jns
nop
das
out
adcl
add
insl
mov
add
push
call
add
mov
sub
add
add
add
lahf
add
add
xor
cltd
add
cmp
nop
xchg
add
repz
add
xchg
add
hlt
push
lcall
add
cs
add
popf
add
add
sub
mov
add
ljmp
or
out
sub
cmp
aad
pop
add
add
xor
sbb
mov
mov
in
inc
inc
add
mov
int
scas
movsb
roll
in
add
add
mov
gs
add
jne
lar
rolb
pop
nop
rolb
cltd
add
mov
add
out
dec
mov
popa
cwtl
add
add
adc
or
push
nop
repz
mov
ds
add
outsb
lea
clc
enter
sarl
pop
push
popf
add
aaa
mov
push
sub
or
xchg
sub
and
nop
data16
dec
add
add
push
xchg
add
scas
mov
fsts
xchg
nop
push
cmc
mov
cs
add
sbb
or
loope
dec
sub
nop
jmp
jno
push
nop
daa
jns
add
add
jb
add
pop
movsb
pop
dec
nop
pop
gs
inc
nop
cmp
cs
nop
mov
sbb
inc
nop
or
push
add
data16
add
push
add
ss
fbstp
jo
lret
mov
mov
jne
adc
cmp
ss
cmpsb
outsl
icebp
xor
clc
in
into
sub
nop
lods
rcll
xchg
lret
xor
outsl
fldt
mov
test
push
rclb
out
or
jecxz
loopne
adc
and
cmpsl
lds
rolb
stos
arpl
and
pusha
je
flds
push
out
inc
push
cmp
loope
out
inc
add
add
test
mov
nop
fldl
mov
jecxz
inc
inc
add
pop
add
push
add
add
and
xchg
test
sbb
aam
dec
add
pop
lods
xor
in
lahf
dec
add
scas
movsb
sbb
sti
sahf
fadds
fucomip
insl
jns
pop
xchg
das
push
inc
mov
add
pop
leave
nop
xor
add
jns
push
es
cmp
add
xchg
nop
nop
push
stos
ljmp
adcl
lcall
daa
or
movsb
fiadds
xchg
add
aam
mov
add
xchg
jl
add
icebp
push
into
loop
xor
roll
dec
add
inc
push
aaa
es
in
inc
ficoml
in
push
out
add
mov
test
cltd
nop
cmp
aam
lret
dec
add
add
push
add
pop
add
mov
jno
js
roll
add
xchg
nop
lahf
mov
add
jecxz
hlt
xor
lock
add
lret
pop
add
lods
mov
repz
add
insl
repnz
and
mov
addr16
in
dec
nop
and
outsb
test
add
in
sub
lcall
add
inc
add
adc
xor
add
insb
bound
addl
das
popa
push
add
nop
push
add
nop
add
push
sti
lods
lret
in
repz
and
hlt
lods
push
sbb
imul
daa
xchg
push
add
xchg
add
dec
nop
in
mov
add
dec
nop
add
add
lods
test
sbb
and
jbe
add
std
jmp
nop
daa
cmp
add
test
nop
nop
dec
add
xchg
add
sub
call
push
sub
adc
sbb
jmp
and
or
nop
roll
jl
mov
add
nop
pusha
push
loopne
loopne
cmc
and
lahf
dec
nop
mov
nop
mov
or
sbb
add
mov
push
add
dec
rcll
nop
fcoml
mov
add
nop
mov
xchg
add
add
add
imul
mov
nop
repz
nop
in
mov
add
nop
call
mov
mov
lods
mov
dec
nop
push
add
add
add
push
add
dec
subl
and
xchg
and
mov
push
jb
inc
add
icebp
repz
xor
gs
xor
mov
dec
clc
mov
sahf
test
pop
arpl
and
xor
fcoml
jo
add
add
roll
lar
xchg
jmp
mov
add
inc
add
lahf
inc
mov
fadds
mov
add
add
lea
xor
filds
enter
out
nop
and
nop
xor
push
add
call
sub
nop
fistps
movsb
jecxz
call
out
aad
xor
aad
adc
cmpsb
lods
xchg
add
add
cwtl
nop
jmp
stos
push
adc
xor
cmp
bound
inc
nop
and
jecxz
in
pushf
add
and
nop
push
jae
add
mov
fdivp
movsb
arpl
and
push
cmp
lea
lods
ficompl
add
push
cld
lahf
test
add
fisubs
test
out
xchg
push
and
pusha
xchg
inc
add
dec
aad
xchg
loope
in
repnz
outsl
iret
push
jnp
xor
push
inc
adc
bnd
sub
add
xchg
mov
in
in
out
push
in
or
sbb
sbb
rolb
divb
loope
pop
add
lods
add
pop
xchg
add
ret
ljmp
cld
test
fiaddl
xchg
push
push
nop
add
jmp
cli
cmp
xlat
xor
les
cs
add
out
nop
xchg
push
jp
test
push
cld
call
or
out
xchg
mov
les
push
lods
pop
add
out
add
je
add
ja
inc
nop
push
loope
add
mov
cmpsb
into
rolb
aam
sbb
sub
add
add
inc
nop
fadds
jp
sub
jmp
int
out
out
inc
pop
faddl
cli
push
or
iret
cld
and
shlb
mov
push
nop
pop
add
xchg
nop
push
mov
fadds
loopne
xor
add
rorb
nop
push
add
inc
icebp
xchg
nop
es
nop
inc
xor
mov
nop
hlt
mov
add
les
inc
mov
lea
or
add
inc
add
fstl
das
jne,pn
cwtl
add
add
jmp
lret
mov
jne
insl
in
sbb
lret
nop
insb
xor
in
outsb
in
cwtl
add
nop
pop
ds
cmpsl
fistpl
add
sbb
and
jno
aaa
ficomps
nop
mov
pop
cmpsl
or
dec
add
lods
push
fcoml
jg
add
mov
ja
add
lea
cmp
repnz
roll
lcall
push
add
sbb
jne
add
decl
xchg
cmpsb
xchg
jbe
add
nop
fistps
adc
clc
inc
add
add
add
outsl
push
xor
mov
das
sti
movsb
sub
mov
push
aaa
lods
lcall
add
mov
pop
or
jb
flds
fldl
dec
iret
sahf
xchg
dec
faddl
cmp
mov
dec
sub
mov
sbb
cs
add
outsl
or
xlat
dec
scas
pop
push
jne
stos
and
imul
mov
inc
add
mov
mov
popa
ss
sub
scas
ret
movsl
out
gs
ds
nop
subb
lret
clc
jmp
imull
dec
mov
cli
and
mov
add
add
nop
fisttpl
inc
nop
sub
sahf
mov
faddl
and
in
iret
mov
add
jg
jae
stos
popf
nop
add
mov
nop
dec
lods
fbstp
mov
pop
adc
nop
dec
lea
add
sbb
mov
mov
nop
inc
add
iret
aad
add
mov
out
stos
insl
insb
inc
add
cs
pop
add
les
les
pop
nop
aaa
out
fldl
xor
iret
movsb
ja
add
add
lahf
out
push
aas
pop
rclb
nop
roll
fwait
xchg
pushf
add
rcll
and
pop
insb
or
and
add
add
popa
pop
pop
enter
in
add
add
out
nop
cmp
or
ds
add
add
and
inc
add
outsb
xor
mov
add
popa
lret
push
nop
jns
lahf
into
xchg
nop
pop
sub
add
xchg
add
mov
mov
nop
push
lods
push
fsts
filds
mov
mov
add
add
lret
sbb
lods
cld
add
sbb
and
push
push
je
inc
dec
push
cmp
paddusb
fwait
sbb
std
insb
mov
out
xor
in
insb
stc
addl
push
add
inc
and
adc
mov
ret
cmp
lods
inc
shrl
scas
rolb
dec
add
adc
jle
xor
mov
leave
add
jmp
add
sahf
in
cltd
add
jge
add
jo
add
or
rclb
lret
dec
add
sbb
jno
add
mov
nop
cmp
cmpps
test
pop
add
add
xor
mov
lret
mov
call
adc
lods
and
add
hlt
aas
sbb
or
cmpsb
cwtl
add
and
mov
dec
add
pushf
add
add
mov
jg
scas
stc
adc
loopne
popf
nop
push
cmp
inc
pop
dec
sub
mov
cmp
nop
cmp
test
inc
nop
pop
and
jl
iret
sbb
je
cmpsl
add
add
dec
and
adc
dec
sub
nop
fistps
mov
jae
add
popa
adc
mov
pop
add
in
insl
das
mov
movsl
jecxz
lcall
adc
add
addr16
nop
loope
mov
add
mov
add
mov
nop
mov
mov
adc
movsl
sub
sbb
add
add
lret
faddl
bound
xlat
das
jp
jecxz
push
xchg
add
xchg
and
sub
nop
in
jne
sbb
nop
adc
nop
add
cmp
std
pop
add
rolb
inc
add
nop
or
in
mov
or
popa
lods
xchg
nop
push
mov
inc
jmp
nop
push
add
pop
ret
nop
pop
mov
dec
add
mov
out
mov
pop
ror
insb
push
jmp
ljmp
pop
nop
leave
add
add
xchg
push
mov
cli
out
add
jo
mov
cli
flds
repz
lods
jae
into
test
sub
cltd
add
push
test
sbb
sti
cld
push
jno
inc
add
das
push
add
add
in
rorl
in
outsb
and
loope
mov
and
nop
inc
and
add
test
sbb
leave
nop
and
rcr
cltd
add
test
add
push
sub
adc
add
ret
inc
add
add
push
nop
imul
xor
outsb
inc
nop
mov
movsb
mov
das
test
mov
mov
push
int3
nop
adc
pop
lcall
addr16
movsl
mov
mov
lock
xor
out
mov
mov
mov
pop
rclb
add
xor
insb
xor
mov
adc
inc
cmpsb
mov
nop
mov
nop
mov
mov
xor
jp
add
mov
adc
jl
xchg
or
lea
adc
dec
xchg
nop
add
dec
aaa
sbb
fisubl
nop
imul
flds
push
nop
push
add
nop
xchg
fstl
add
add
or
cmpsl
mov
nop
test
xchg
mov
repnz
aaa
test
inc
nop
ss
cli
jbe
mov
add
push
cmp
cs
fcmovne
nop
out
pop
call
nop
inc
xor
add
lods
rclb
add
cld
bound
mov
inc
mov
add
pushf
add
pop
mov
out
fldl
jbe
sbb
mov
movsl
mov
enter
sahf
pop
fcoml
fisubs
xor
mov
aaa
repz
jno
nop
xor
nop
or
mov
inc
aaa
cwtl
add
cwtl
nop
test
imul
add
les
mov
ffreep
push
add
and
dec
add
stc
gs
cltd
add
daa
aam
jp
insl
das
imul
cld
pop
xchg
xor
nop
nop
jae
xor
or
addl
add
faddl
xor
add
push
jo
pop
lock
cmp
mov
add
in
enter
test
and
add
out
fldl
lea
add
add
lods
adc
pop
fildl
and
jmp
xor
jmp
cwtl
add
bound
mov
jg
nop
pop
add
fstl
add
add
pop
cmp
out
xchg
add
mov
jp
enter
or
repz
out
cmp
nop
jns
xchg
add
and
inc
bsr
add
mov
push
and
add
idivb
nop
push
push
lods
push
repz
add
nop
pop
xor
xor
fs
push
add
add
nop
mov
and
push
popf
nop
aas
cmpsb
jo
add
out
aas
adc
xor
pop
jecxz
fsts
fcoml
aas
movups
adc
add
and
add
push
sbb
int
mov
sub
movsb
insl
xchg
nop
mov
nop
cmpsb
xorl
add
add
xchg
add
cwtl
nop
gs
add
lods
adc
in
or
sbb
es
nop
fidivrs
pop
and
insl
roll
nop
lods
and
inc
push
mov
jae
nop
inc
or
jle
push
outsl
insb
or
nop
adc
nop
cmpsb
inc
outsb
addl
je
hlt
test
lock
nop
pushf
add
inc
add
add
inc
jno
call
add
nop
aam
mov
adc
mov
nop
pop
add
das
mov
cmp
push
imul
sbb
fwait
cltd
add
push
inc
nop
add
inc
nop
push
lahf
mov
add
add
mov
call
fcoms
jne
mov
add
movsb
out
push
mov
add
jmp
rolb
faddl
clc
ljmp
mov
add
mov
cmpsb
addr16
inc
add
xchg
push
add
daa
inc
nop
test
sbb
add
inc
add
mov
add
and
fistpl
out
jp
test
nop
xchg
add
call
imul
pushf
nop
nop
add
jns
inc
jns
push
xchg
inc
add
inc
add
hlt
push
cmp
fwait
mov
mov
nop
xor
nop
cmp
imul
test
ret
rolb
mov
add
mull
add
add
push
cmpsl
inc
add
nop
jmp
movsl
flds
aas
aaa
std
test
ss
add
dec
call
nop
jae
pusha
fs
loopne
sbb
andl
mov
or
push
nop
ret
jae
or
or
hlt
or
das
lret
out
add
std
pop
add
add
pop
dec
cmp
popf
add
dec
mov
add
call
add
dec
ja
mov
repz
mov
mov
nop
popa
lods
test
nop
adc
popa
bound
popf
nop
cmp
je
insl
or
add
add
push
add
ljmp
nop
jg
nop
repz
nop
sbb
mull
fs
add
arpl
testb
push
add
sbb
mov
add
mov
push
add
add
mov
decl
bound
add
jl
roll
add
jge
add
add
add
jl
cmp
dec
lcall
in
enter
add
push
add
int3
nop
rorl
inc
add
and
xor
rolb
cltd
add
fldl
mov
aas
xchg
stos
mov
cmp
pop
stos
stos
hlt
mov
sbb
jo
inc
add
dec
andl
je
test
cmp
nop
jmp
or
loopne
add
repz
lret
xchg
sbb
flds
lds
cmp
leave
add
jne
in
mov
pop
fs
jg
cmp
add
lds
push
nop
roll
add
add
xlat
push
add
nop
je
pushf
add
push
mov
sub
scas
imul
and
lds
repnz
aaa
sbbb
lret
stc
mov
add
lods
jno
sbb
ret
nop
mov
es
sahf
push
sbb
and
add
mov
popa
jle
xchg
cmp
push
std
stos
xor
jg
movsl
mov
or
pushf
add
fisubrs
pop
and
nop
add
scas
inc
add
mov
and
inc
dec
add
lds
lock
into
fwait
pushf
add
add
add
jb
nop
and
push
cmp
xchg
popa
inc
add
das
sbb
jg
add
sub
in
and
add
jno
nop
nop
jo
nop
jmp
add
nop
insl
arpl
push
pop
xor
aas
push
push
ret
pop
add
ret
mov
mov
dec
aas
or
fadds
lea
gs
inc
mov
add
add
sbb
push
adc
out
addb
add
nop
mov
add
popf
nop
and
cmp
inc
add
nop
addb
ljmp
insb
ja
sbb
int3
nop
jne
adc
push
sahf
movsb
mov
mov
mov
inc
add
pop
dec
clc
inc
mov
and
sub
nop
mov
add
xchg
sbb
adc
push
add
pop
cld
and
adc
dec
add
xor
or
jge
cli
jp
nop
addb
or
mov
fcmovnu
pop
add
cmp
push
mov
pop
mov
sub
out
add
nop
imul
js
int3
nop
mov
insl
repnz
add
rcll
mov
pop
pusha
out
testl
aaa
test
mov
aam
int
fisttps
pop
call
xor
inc
scas
sbb
inc
xorb
pop
inc
add
add
cmp
test
inc
nop
mov
xor
nop
mov
sub
sub
mov
dec
test
inc
xor
nop
mov
mov
pop
mov
mov
imul
mov
push
add
hlt
shrb
sub
nop
pushf
add
aas
scas
pop
add
scas
jns
xchg
lcall
in
jecxz
add
pushf
nop
roll
xchg
add
nop
jge
pop
add
adc
jmp
add
push
adcl
in
std
lds
sbb
cli
sbb
ds
or
mov
xor
mov
cwtl
add
add
add
jno
add
add
add
mov
jb
add
xor
add
push
cld
movb
nop
pop
pop
lcall
je
mov
mov
fbstp
mov
add
negb
push
sub
push
add
xchg
add
mov
jp
and
add
arpl
int3
nop
mov
pushf
add
ret
adc
xchg
or
adcl
mov
outsl
mov
jnp
dec
rclb
jp
and
cmpl
jl
add
test
adcl
flds
xchg
pop
inc
add
ss
scas
add
jmp
movsb
ja
xchg
cs
mov
nop
and
add
add
add
adc
xchg
xchg
mov
cs
adc
and
aaa
push
lods
ja
jbe
es
mov
xchg
sti
cmp
cmp
add
mov
xchg
sub
dec
add
add
enter
xchg
pusha
cs
sbb
sti
xor
add
sahf
or
cmp
into
mov
scas
in
push
ret
add
ljmp
add
scas
xor
push
mov
mov
dec
adc
in
add
gs
inc
int3
add
push
lds
add
push
push
outsl
sub
out
mov
hlt
aad
add
push
jo
pushf
add
adc
pop
dec
nop
insb
insl
js
and
dec
mov
outsb
cmp
inc
add
pusha
mov
add
mov
add
jo
add
xlat
adc
add
rclb
xlat
mov
lock
nop
sbb
fisubrl
xor
add
rcl
in
pusha
push
push
mov
cmp
nop
xor
lods
jl
nop
mov
test
int
adc
mov
pop
loope
add
add
xchg
add
or
push
add
add
nop
adc
sub
pop
or
or
fildl
add
add
sub
adc
sbb
repnz
add
jo
test
scas
jle
out
fists
nop
mov
pop
add
adc
push
mov
push
jl
adc
add
add
xchg
pusha
fadds
jnp
and
nop
subb
add
icebp
xchg
dec
add
jge
arpl
ss
push
xchg
xchg
add
bound
push
add
insl
iret
mov
dec
add
mov
inc
add
add
push
add
inc
add
fs
sbb
xchg
xchg
out
xchg
add
add
xchg
push
dec
add
mov
ret
or
pop
add
add
mov
incl
aam
push
movsb
lods
pop
jno
dec
jae
fildll
clc
and
add
mov
test
cmc
cmp
and
sub
sbb
pop
ja
push
out
test
add
pop
sub
dec
iret
rclb
lret
mov
imul
xor
fimuls
movsb
bound
addr16
fistpl
rclb
movsb
imul
addr16
clc
mov
jmp
push
sahf
sub
rcr
mov
ljmp
add
push
add
add
or
push
loope
lods
inc
xlat
test
xchg
xor
pop
add
xor
nop
mov
addl
roll
nop
mov
nop
aaa
xor
add
sbb
add
push
push
sbb
repz
add
add
or
lret
addps
adc
add
test
fistpll
inc
int
dec
add
add
mov
and
insl
dec
add
add
cwtl
add
jbe
add
arpl
fisubrl
mov
push
pusha
push
nop
sahf
out
iret
xor
ss
and
add
add
nop
jmp
scas
out
mov
lods
pop
insb
push
popf
nop
sbb
icebp
ja
lock
fadds
xchg
push
sbb
jae
imul
into
push
gs
add
lds
aam
push
movsl
or
dec
gs
nop
push
iret
xlat
pop
add
cmp
adc
add
dec
add
pop
push
bndldx
xchg
add
in
add
dec
dec
sbb
jns
adc
add
mov
and
add
nop
in
insl
jne
add
add
pushf
nop
hlt
mov
mov
xchg
nop
lods
pop
nop
add
xlat
push
clc
mov
add
xor
into
adc
pop
mov
mov
addb
pop
cmp
cs
xchg
add
and
mov
js
add
mov
imul
je
lret
pop
cmp
pop
outsl
mov
cmp
and
push
nop
rolb
push
add
add
add
mov
xchg
push
adc
sbb
fwait
in
in
fistps
in
mov
add
nop
jbe
xchg
add
mov
push
jg
insb
shll
cmp
and
adc
jnp
mov
fidivrs
push
inc
mov
cs
xchg
popf
add
int3
add
mov
outsb
cmpsb
aam
in
pop
mov
add
xchg
add
and
and
pushf
add
jb
mov
icebp
cltd
add
pop
xor
addl
adc
add
add
inc
inc
sbb
aas
rol
add
add
add
nop
fwait
sub
cmpsl
in
icebp
inc
nop
mov
nop
lods
sbb
cmp
inc
nop
add
add
aaa
enter
mov
stc
sti
mov
mov
pop
add
add
adcb
fwait
push
add
xchg
pop
fsubrp
sbb
lea
aam
xchg
nop
dec
add
pop
nop
inc
jbe
stos
jns
add
cld
inc
fcoml
add
pop
test
ja
stos
fldl
fldt
insb
and
in
je
add
add
fisttps
ret
mov
popa
sbb
inc
pop
inc
add
add
mov
jno
push
cmpsb
sub
jmp
clc
fbstp
test
mov
lods
add
add
push
nop
inc
add
inc
mov
in
movsb
roll
in
add
enter
addl
pcmpgtb
lea
int
imul
add
and
mov
aad
push
test
push
cmpsb
jno
popa
mov
addb
cwtl
nop
add
out
mov
xchg
sub
mov
push
mov
inc
cmc
es
mov
add
out
jp
int3
add
fimuls
insl
xchg
nop
add
dec
dec
mov
xchg
in
lcall
test
loopne
sahf
ss
sbb
aaa
adc
mov
out
lcall
jno
add
outsb
loope
add
add
xchg
nop
fidivs
scas
push
jle
add
add
movhlps
nop
std
and
mov
scas
out
ret
add
test
cmpsb
aam
cltd
nop
sub
sbb
add
insl
cmp
test
mov
add
mov
add
nop
xchg
push
xchg
fucomip
push
lock
stos
mov
adcl
nop
stos
push
in
pop
or
loop
mov
sbb
add
nop
add
add
xchg
add
push
ja
sti
mov
lret
jbe
lcall
int3
add
pop
add
enter
xor
lcall
inc
nop
mov
nop
pop
add
add
popa
pop
jno
xor
jnp
cwtl
add
cmc
nop
add
and
stc
stc
cld
imul
add
flds
cli
lret
xor
fidivrl
fwait
addb
adc
faddl
jbe
add
add
cmpsl
roll
aas
cli
push
sub
fiaddl
mov
mov
push
jns
mov
mov
add
mov
push
dec
and
roll
ss
push
add
pop
nop
test
nop
lret
add
add
iret
jne
idivb
pop
nop
ret
mov
clc
push
fbld
ljmp
jg
dec
add
pop
add
lret
outsl
jnp
sub
lea
int3
add
nop
rolb
add
nop
ficompl
jnp
nop
add
mov
add
fwait
cmp
movsb
into
sub
div
jl
cmp
mov
orb
add
and
decl
push
add
mov
adc
ja
add
add
pop
arpl
xchg
add
add
sbb
pop
nop
add
roll
nop
ja
incl
mov
arpl
xchg
pop
nop
addl
das
cmp
loopne
addr16
jnp
call
cmp
add
loopne
add
int3
add
add
in
iret
and
mov
and
nop
loop
nop
addl
in
pop
stos
jnp
rolb
jl
pop
call
lret
or
adc
jnp
nop
roll
add
mov
and
nop
scas
sub
sahf
ljmp
hlt
or
pop
lret
or
xchg
nop
cmp
test
add
sub
mov
pop
add
push
add
outsb
jnp
mov
nop
push
loop
add
nop
xchg
xchg
addb
nop
sbb
or
call
arpl
cmp
jle
clc
cmp
xlat
sub
jle
and
jmp
add
cmc
push
nop
in
nop
popa
in
test
add
lret
arpl
enter
pop
sub
daa
cmpsb
popf
add
aaa
jbe
mov
stc
es
push
add
jns
nop
xchg
mov
outsb
dec
nop
cmp
int3
add
nop
sbb
mov
push
add
dec
ficoml
jle
push
sub
inc
nop
xchg
push
jp
add
push
out
lcall
inc
add
cmp
adc
adc
jb
jp
nop
add
gs
in
imul
adc
cltd
add
leave
add
and
adc
pushf
nop
inc
dec
nop
in
out
push
add
mov
dec
add
nop
add
lret
decl
mov
sbb
add
mov
push
jecxz
nop
popf
add
jl
std
jbe
mov
rcr
js
push
add
nop
nop
repnz
mov
cld
ret
inc
repz
cmpsb
sub
nop
xorl
and
xor
push
rcrb
jnp
pop
cmp
add
mov
mov
mov
add
add
inc
loopne
shrl
adc
push
nop
sub
nop
pop
jl
add
dec
add
cli
dec
dec
nop
icebp
xchg
inc
sub
add
imul
mov
lock
jl
dec
sahf
push
fildl
sub
sub
add
xchg
lods
mov
imul
jmp
xchg
add
popa
adc
add
push
jno
nop
xor
push
add
xor
add
sti
mov
loopne
add
nop
cmpsb
mov
cmp
push
mov
add
inc
nop
es
cmpsl
and
sbb
rcr
add
roll
sbb
aaa
mov
lahf
iret
pop
nop
cmp
addb
pop
ljmp
imul
fs
pop
dec
add
ss
add
iret
lcall
push
lods
mov
nop
add
add
fistps
aad
outsb
mov
xchg
nop
mov
nop
fwait
je
scas
xor
iret
add
or
and
add
pop
add
popa
adc
add
xchg
mov
mov
daa
cmp
stos
faddl
fsts
add
movsl
add
xor
ljmp
lds
ja
mov
bswap
inc
nop
adc
cltd
add
add
dec
add
notb
pop
add
dec
nop
js
dec
add
add
in
add
jnp
xorb
imul
out
nop
sbb
push
xchg
xor
add
aam
sbb
icebp
lock
inc
add
and
dec
sub
pop
jmp
out
arpl
sub
and
add
lret
jnp
pop
mov
fldl
fcmovu
add
cwtl
add
nop
icebp
stc
push
sbb
inc
xchg
add
add
pusha
jp
add
push
add
dec
nop
fs
nop
mov
es
or
jge
add
rcr
nop
out
nop
nop
add
mov
mov
lea
stos
adc
jb
inc
das
push
lods
or
dec
inc
add
nop
fldl
inc
out
ja
pop
add
xchg
scas
test
add
add
mov
nop
push
mov
nop
sub
nop
lds
sub
int
loop
iret
nop
add
add
repnz
aaa
icebp
pop
add
add
cmpsb
dec
nop
loopne
push
mov
outsb
jb
add
bound
mov
mov
add
sbb
roll
mov
jo
nop
mov
rolb
push
nop
cmp
xchg
add
add
popf
add
mov
push
add
cld
jno
pusha
inc
add
add
sti
ss
popf
nop
and
cmpsb
inc
add
and
movsb
pop
add
fsubrp
fistl
popa
into
inc
xorb
push
push
adc
popf
add
mov
dec
nop
xor
nop
and
in
pop
jno
mov
mov
sub
add
call
add
add
jbe
subl
sti
or
dec
nop
add
xor
dec
nop
decl
les
push
xchg
mov
pop
insl
push
push
dec
add
mov
nop
pusha
mov
push
nop
pop
mov
mov
mov
xor
mov
mov
rolb
xchg
add
les
fldl
notb
js
nop
cmp
add
nop
push
add
aas
flds
ja
mov
nop
cwtl
add
fstl
ficoms
mov
icebp
xor
mov
sub
jp
rclb
jns
scas
push
mov
add
dec
test
add
jp
lods
mov
in
int
nop
nop
es
faddl
cmp
divb
adc
jns
mov
xchg
nop
call
or
nop
cwtl
add
add
jbe
stos
xchg
scas
inc
add
cli
enter
nop
xor
inc
add
pop
add
xor
push
add
add
icebp
jb
sti
adc
and
lahf
sbb
add
outsl
lods
and
fisubrs
adc
nop
add
push
add
pop
mov
nop
add
xchg
vmptrld
imul
dec
cmpsl
jp
mov
dec
add
add
lret
inc
stos
popa
sahf
ret
xor
mov
add
sbb
bound
pop
add
and
add
add
add
jle
dec
add
add
popf
add
push
mov
out
jp
add
clc
repnz
dec
nop
xchg
jge
add
cmp
dec
xor
and
cld
push
cmp
sub
mov
fimuls
nop
and
mov
call
mov
add
arpl
sbb
add
popa
call
add
dec
xor
mov
mov
dec
add
jae
lods
sbb
add
roll
mov
incl
nop
dec
add
mov
add
cwtl
add
and
cmp
sbb
addb
add
jae
nop
jge
xor
xchg
xchg
jl
out
aaa
cltd
add
add
daa
xor
add
pop
add
push
nop
mov
xchg
scas
adc
dec
daa
jmp
incl
jl
add
cld
push
rcrl
jbe
ds
les
push
sub
nop
in
nop
addb
add
test
xchg
mov
clc
les
sub
test
test
or
mov
add
addl
adc
ret
dec
nop
imul
adc
js
add
lret
push
add
cmp
lret
push
and
xor
pop
in
outsl
and
adc
mov
add
pop
pop
add
les
testb
xor
jno
gs
loop
add
mov
lea
js
add
add
hlt
sub
popaw
dec
sahf
int3
add
jne
mov
add
xchg
mov
jl
add
popa
mov
xchg
nop
sub
rcll
flds
fldl
hlt
xorl
pop
mov
nop
mov
sub
imul
ja
nop
add
sbb
add
mov
popf
add
pop
nop
sbb
stos
lea
into
ficoms
mov
push
lcall
add
jge
cld
pop
nop
lret
rclb
add
nop
mov
sbb
lea
insl
ja
or
dec
test
mov
sub
movsb
inc
shr
lret
add
push
outsl
test
add
push
cwtl
nop
xor
dec
pop
add
pop
nop
test
nop
std
fcoms
add
xchg
nop
out
aam
mov
test
out
out
dec
nop
clc
sub
mov
nop
test
repnz
adc
nop
cld
jge
add
mov
fwait
andl
inc
nop
inc
add
repz
and
add
nop
adc
or
rolb
sub
add
push
loopne
nop
mov
nop
dec
xlat
adc
mov
mov
cmp
lret
mov
add
xchg
in
jmp
and
push
jae
or
push
nop
cs
faddl
sub
rclb
rolb
nop
cmpsb
clc
xlat
mov
xor
mov
add
jecxz
mov
inc
nop
mov
movsb
mov
adc
outsb
add
shlb
push
add
nop
sbb
roll
jmp
jno
fadds
addr16
nop
push
add
icebp
cltd
add
test
stc
movsb
adc
roll
repz
stc
mov
push
mov
sub
loop
xor
jns
nop
or
mov
mov
clc
fstl
int
scas
in
flds
addl
inc
add
xchg
mov
mov
add
mov
add
jmp
mov
sti
and
imul
fidivl
je
add
int3
add
nop
add
pop
add
sub
faddl
pop
dec
add
or
cwtl
add
add
in
shrb
add
adc
xor
rolb
xchg
push
xor
mov
divl
jne
push
mov
je
push
nop
xlat
add
je
add
nop
push
aad
dec
add
das
iret
pushf
add
pushl
cvttps2pi
stc
movsl
std
mov
nop
jns
nop
test
sub
jb
cmp
cmpsb
or
arpl
nop
test
lock
jp
add
cltd
add
mov
cmp
add
cmp
cmp
add
pop
inc
nop
push
or
adc
flds
repz
dec
xchg
add
jbe
fstl
fsts
add
add
push
sarb
or
lods
lds
mov
les
ds
lods
push
add
add
dec
jmp
popf
add
mov
ficoms
sub
cmpsb
add
add
and
jbe
nop
nop
add
aas
fldl
int
out
adc
lret
popf
nop
sbb
add
xchg
add
push
sbb
and
nop
sub
add
rolb
and
add
mov
add
ret
pop
imul
nop
push
movsb
inc
add
daa
mov
sbb
das
mov
nop
jmp
dec
imul
pop
add
test
mov
mov
add
nop
pop
xor
rcll
cwtl
add
push
add
int
in
ud1
faddl
mov
jo
add
nop
pop
fsts
cwtl
nop
aaa
push
in
rcll
and
inc
nop
sahf
push
jle
add
sub
add
xchg
add
nop
jp
jmp
arpl
mov
lods
ss
inc
sub
add
fwait
cld
loopne
rcll
cmp
call
mov
adc
sbb
daa
aaa
inc
add
nop
mov
jecxz
xlat
and
inc
nop
fs
mov
add
je
jo
mov
xlat
or
push
andb
add
add
add
add
iret
pfcmpge
lock
fadds
pop
outsl
aad
scas
ds
fisubs
jg
fs
cmc
fidivl
hlt
inc
nop
stc
or
push
add
dec
cmp
add
cltd
add
jnp
nop
mov
incb
nop
mov
xchg
jae
add
add
nop
fadds
cltd
add
nop
faddl
xor
dec
nop
push
add
in
out
cs
add
rolb
inc
add
dec
add
nop
push
sbb
inc
pushf
add
add
jno
sbb
xchg
cmp
in
mov
cmp
adc
adc
add
jae
add
add
mov
mov
adc
mov
repz
ja
push
add
xchg
inc
nop
mov
fs
nop
jae
nop
jne
nop
push
mov
dec
lock
pop
add
repnz
mov
push
add
ljmp
mov
push
addr16
nop
cmp
cmp
aad
sti
mov
jo
push
jb
test
lret
subl
add
divb
movsb
mov
pop
roll
psubusb
pop
mov
adc
nop
add
inc
movsl
xchg
add
adc
add
ja
nop
ret
jge
cs
add
xchg
mov
adc
dec
pusha
ds
js
out
mov
cmp
nop
sti
in
test
mov
cwtl
nop
xchg
add
ss
push
hlt
and
and
out
add
sbb
popa
cli
xor
out
bound
test
mov
inc
xchg
sti
mov
insb
fists
add
outsb
cli
in
nop
loope
sub
push
add
je
icebp
add
hlt
lods
leave
nop
sbbl
ds
pop
aaa
mov
push
pushf
add
add
test
daa
mov
add
sub
lcall
adc
js
nop
int3
add
fcoml
ljmp
dec
mov
xchg
add
nop
adc
jo
add
faddl
stc
test
mov
les
push
nop
ljmp
adc
add
leave
nop
adc
lock
xor
dec
push
inc
nop
sbb
push
and
leave
add
lock
xchg
data16
pop
into
xchg
add
nop
popf
add
inc
push
pop
add
mov
pusha
orl
and
imul
push
nop
movsl
inc
nop
mov
pushf
add
test
cmc
mov
push
hlt
roll
nop
in
lds
lods
test
sbb
rolb
dec
dec
add
add
and
dec
xor
aaa
mov
mov
mov
je
outsb
mov
adc
mov
jg
ficompl
pop
nop
push
push
nop
aas
out
testb
aas
jne
cld
movsb
cmp
jbe
add
sbb
inc
nop
add
nop
push
push
leave
add
fcoms
add
jl
insl
and
icebp
loop
cmc
push
jae
fimuls
add
add
add
fadds
arpl
roll
adc
ret
push
outsb
nop
nop
icebp
insb
pop
ja
and
in
push
pop
sbb
mov
dec
cmc
mov
xchg
adc
out
add
orl
in
adc
lret
jb
ret
movsl
roll
les
adc
fcoms
fcmovnu
in
rclb
mov
sub
add
popf
nop
clc
adcl
add
mov
bound
add
add
mov
add
jmp
add
pop
sbb
imul
add
inc
add
test
mov
jmp
nop
mov
and
sub
add
jmp
cmpsl
loopne
and
add
add
xchg
pushf
add
fadds
push
pop
add
mov
rolb
or
add
add
cmp
repnz
and
add
add
and
add
add
rcll
add
and
jnp
rolb
nop
pop
outsl
inc
add
cmp
mov
stc
inc
add
popf
add
outsl
mov
add
add
sub
cmp
jp
add
mov
mov
and
add
add
and
sbb
jne
mov
mov
int3
add
ret
nop
icebp
rcll
dec
mov
inc
nop
je
sub
mov
flds
sarl
lret
outsl
pusha
add
ficoml
add
add
insb
das
sub
inc
data16
sub
outsl
dec
adc
outsl
mov
imul
popa
outsl
aam
cs
dec
cmp
clc
mov
int
fistl
add
push
nop
sub
sub
add
cmp
cmp
ja
mov
ss
mov
jg
inc
push
add
xor
and
add
movsl
test
add
in
jb
hlt
fwait
stos
and
mov
jno
rolb
mov
sti
inc
add
out
push
rolb
jbe
jg
add
pop
add
insl
js
call
fadds
sbb
jle
add
sti
cli
push
adc
mov
push
lea
inc
test
add
add
cmp
jge
or
stc
add
cmp
icebp
mov
mov
addb
inc
mov
lock
sub
rcl
insb
sub
mov
pop
add
int3
add
in
mov
push
mov
add
sub
movsl
outsl
sbb
cld
cmp
mov
sub
les
mov
inc
mov
add
bound
sbb
into
out
loopne
mov
xor
test
test
mov
sbb
scas
insb
imul
push
pushf
add
add
lahf
sbb
bound
add
add
jle
nop
popa
push
pop
add
pop
scas
fildl
mov
xchg
add
in
jns
into
cltd
add
nop
loop
inc
mov
add
add
in
addb
add
call
add
imul
nop
ret
test
add
fwait
mov
rolb
sub
jmp
arpl
mov
mov
call
push
mov
add
nop
sub
nop
pop
aas
popa
arpl
jmp
xor
test
nop
stos
fistps
cmc
cmp
add
js
xor
jbe
dec
dec
add
dec
pop
pop
pop
jo
out
movsb
dec
sub
dec
mov
pushl
cmp
psllw
xor
dec
add
dec
add
les
cmp
scas
fwait
jge
add
mov
roll
les
mov
mov
add
xor
mov
lds
xor
and
add
loope
rolb
dec
add
bound
jnp
nop
xchg
daa
pusha
lret
xchg
dec
dec
hlt
mov
cmpsb
addb
stos
jb
test
mov
add
nop
push
sub
add
nop
aad
push
mov
nop
adc
jmp
add
fwait
mov
add
xor
dec
add
xchg
dec
add
test
add
inc
add
and
jecxz
add
inc
add
cmpsb
mov
movb
pop
sbb
popf
nop
gs
enter
add
add
nop
pop
adcb
adc
dec
cmpsb
dec
sbb
push
aad
in
nop
sub
nop
cli
mov
add
enter
xchg
nop
and
nop
xor
adc
add
scas
in
inc
add
add
dec
pop
add
cltd
nop
cmp
push
or
test
jecxz
sbb
mov
inc
nop
jmp
add
mov
cmp
jg
jns
add
movsl
pmulhw
pop
add
pop
add
add
jns
rolw
mov
xor
ret
xlat
fwait
das
out
jae
mov
adc
cld
xchg
add
enter
arpl
add
xchg
add
push
fidivs
add
mull
nop
jo
jg
inc
nop
or
and
mov
mov
nop
push
jbe
flds
lret
push
ret
lret
mov
movsb
js
add
push
repnz
nop
mov
sub
dec
pop
loopne
cmpsb
jbe
push
add
mov
xor
int3
add
xor
sbb
test
in
add
and
xchg
nop
mov
xchg
loopne
pop
and
iret
bnd
add
popf
add
add
xor
cmp
add
bound
sub
add
ljmp
popf
nop
outsb
pop
nop
pusha
scas
call
pop
test
sbb
addb
cwtl
add
std
rcll
mov
adc
mov
adc
fisubs
jl
dec
add
add
cmc
jbe
nop
and
mov
xchg
add
add
sbb
or
inc
nop
addb
jecxz
nop
mov
mov
mov
add
mov
push
add
cmpsb
call
jo
and
mov
xchg
nop
test
mov
mov
add
test
cmc
adc
nop
add
sub
cmc
mov
aad
jb
data16
add
add
in
or
lock
andb
add
roll
iret
inc
dec
push
nop
sbb
scas
push
scas
xor
loope
xchg
mov
jae
faddl
popa
addb
nop
movsl
mov
add
mov
dec
add
xchg
add
xlat
add
pop
add
pop
add
loop
pop
push
xchg
nop
jnp
sti
or
addl
das
aad
test
xor
ds
add
fldl
fcmovu
rclb
mov
add
xchg
add
cmp
add
xchg
fcoml
xchg
das
push
cmp
nop
daa
jle
mov
xchg
leave
add
push
ret
and
rolb
fadds
sbb
add
add
push
add
out
cmp
add
adc
out
add
inc
add
adc
push
bound
jecxz
lsl
idiv
cwtl
nop
jb
sti
aad
roll
sbb
dec
nop
stos
ret
fisubrl
add
inc
add
jns
adc
mov
add
xchg
add
add
inc
jmp
stos
pop
pop
add
scas
cmp
cmp
inc
add
sub
nop
cltd
add
add
imul
add
push
ds
lock
add
and
nop
xchg
add
jg
mov
inc
add
pop
stos
jae
add
lds
out
lahf
and
sti
inc
mov
scas
out
adc
in
out
lret
ss
mov
clc
cmp
fcmovb
add
out
or
les
bnd
call
mov
and
add
sbb
mov
jae
rolb
lods
lea
cmpsl
jg
ds
or
inc
nop
insb
dec
nop
cmp
sbb
xlat
pop
add
notl
add
xchg
mov
fisubrl
add
xor
bound
dec
add
jmp
nop
jbe
nop
lods
dec
inc
add
adc
outsl
icebp
sahf
and
nop
xor
nop
mov
adc
mov
imul
add
ds
rolb
jne
flds
sub
nop
popa
mov
add
popf
add
add
into
adc
nop
ficoms
jno
add
dec
add
js
push
jnp
sbb
mov
shl
sbb
pop
jecxz
mov
roll
and
lods
lea
sbb
push
jbe
pop
nop
mov
push
inc
push
hlt
daa
push
nop
faddl
addr16
cmp
push
pop
cmp
nop
ds
sub
dec
addl
push
fs
faddl
mov
mov
xorb
push
add
nop
scas
repz
add
adc
ds
add
ret
and
movsb
dec
push
into
dec
fwait
test
add
mov
aad
jecxz
add
lcall
pop
add
gs
lea
insl
mov
xchg
nop
xchg
sub
lock
and
ds
fwait
or
iret
fadds
push
add
xor
aas
in
dec
stc
out
jg
nop
mov
xchg
add
add
add
sti
repz
inc
add
add
add
popa
pop
fcoms
pop
push
roll
shll
xor
lea
or
jb
push
push
or
test
add
add
loopne
setno
in
push
ss
pusha
das
rcll
nop
add
insb
push
loop
add
shlb
nop
mov
nop
rep
add
sbb
add
stos
loope
add
out
loop
xchg
nop
and
out
jecxz
fldl
mov
sub
addl
pop
pop
nop
insb
adcb
nop
sub
and
cwtl
add
pop
fwait
xchg
xor
out
mov
jno
test
xchg
jbe
nop
addr16
faddl
or
jl
in
pop
xor
xchg
sub
nop
mov
jnp
and
add
or
pshufw
sbb
scas
mov
push
nop
loop
nop
adc
jae
mov
fwait
add
dec
nop
test
xlat
test
mov
push
or
popa
iret
fidivrl
add
fs
dec
add
lret
xchg
nop
sti
repnz
roll
sbb
push
out
aaa
ljmp
sbb
xchg
or
add
roll
or
cmpl
nop
adcl
jg
je
faddl
aaa
data16
ljmp
xchg
mov
fldl
lret
sarb
push
mov
psrlq
rol
xchg
xor
pop
out
sub
nop
int
jmp
add
loopne
nop
xor
nop
outsb
rcrb
or
shlb
test
push
mov
rcl
nop
add
cmpsl
cmc
push
popf
add
flds
hlt
mov
and
lret
pop
subl
movsl
cmp
add
push
xchg
push
push
add
scas
dec
in
add
push
nop
aam
jb
roll
nop
jae
nop
jnp
nop
adc
dec
add
sbb
or
add
mov
popa
add
idivl
loopne
cmp
sbb
jo
xor
sub
ljmp
add
push
cmp
nop
fwait
mov
add
lret
nop
movsl
xchg
insl
cmp
nop
je
nop
adc
mov
rcll
lds
xlat
addr16
jmp
sahf
or
pusha
daa
fcoms
pop
je
out
lds
jo
add
sti
fs
jno
cs
jb
add
mov
nop
xchg
cmpsb
daa
pop
jns
nop
addb
inc
add
add
add
jne
clc
cmp
enter
sahf
divb
addb
jmp
in
cmp
mov
stos
mov
popf
add
nop
mov
aam
cmc
xor
push
add
add
nop
sub
nop
add
add
aam
aad
mov
cmpsb
dec
jne
nop
ss
push
add
addl
mov
add
stos
loopne
xchg
fdivrp
in
nop
and
and
pop
cwtl
add
test
sti
xchg
add
add
xor
nop
jo
nop
jno
leave
add
lds
jg
packsswb
jne
dec
nop
pop
mov
pusha
dec
mov
add
pop
xchg
add
add
popf
nop
push
into
add
imull
pop
shr
and
or
testb
fwait
adcl
xor
or
addr16
lcall
nop
iret
enter
nop
inc
add
out
sub
add
add
leave
add
jg
lahf
inc
xor
dec
nop
or
mov
lds
ljmp
aad
out
push
inc
add
xchg
shlb
add
imul
mov
add
pushf
nop
adc
add
in
decb
dec
nop
loop
nop
cmp
push
xchg
lods
push
add
mov
jnp
or
inc
rorb
inc
dec
inc
add
iret
add
mov
nop
push
scas
or
adcl
nop
and
test
add
add
xlat
adcb
pop
add
add
mov
add
add
nop
nop
mov
jno
push
nop
inc
dec
nop
loop
nop
jnp
nop
mov
in
inc
add
add
test
sarl
addl
data16
cmp
inc
nop
lret
jl
insb
dec
jae
in
rclb
nop
clc
std
in
push
add
lods
jbe
add
sub
add
lock
pushf
add
inc
nop
outsl
pop
nop
xor
cmp
xor
rcrb
nop
scas
insb
xor
or
in
jbe,pt
jbe
sub
push
loop
jns
add
aas
cmp
jg
jl
inc
add
rcll
push
mov
inc
add
imul
add
mov
sbb
or
ljmp
test
nop
sub
cli
inc
nop
lret
dec
out
call
lahf
fdivp
repnz
add
nop
fimull
dec
add
xor
add
mov
fistpl
nop
sub
nop
cmp
xor
mov
or
cmp
xchg
lods
or
sub
xor
pop
add
xchg
sbb
push
add
or
arpl
push
pop
add
add
add
add
ds
in
fwait
push
les
pop
mov
jp
sbb
pop
cmp
int
xlat
je
dec
iret
stos
inc
add
jne
add
sbb
ss
daa
xor
or
ret
cmpsl
fldl
pusha
les
adc
xchg
dec
mov
inc
mov
xor
or
nop
xor
jb
add
test
into
pop
es
and
dec
dec
nop
sub
popa
roll
jmp
add
jl
add
fmulp
add
aad
ja
movsb
flds
stos
cmp
aas
dec
pop
nop
cmp
nop
gs
nop
mov
sub
jne
sarb
mov
out
fcomi
pop
add
lods
xchg
add
sbb
xchg
sub
nop
xor
xor
flds
pop
ret
nop
ret
lcall
das
lret
dec
push
ret
faddl
dec
nop
xchg
add
adc
idiv
sbb
lea
xchg
es
add
addb
outsl
push
add
xchg
add
add
lea
xchg
add
lods
mov
out
and
js
stc
adc
in
dec
add
nop
addr16
sbb
leave
add
jbe
stc
cwtl
add
fwait
ljmp
jecxz
adcl
nop
loopne
mov
pop
xor
nop
movsb
adc
mov
add
or
lods
sub
jae
nop
push
pop
nop
cli
mov
add
xchg
nop
jbe
nop
lcall
pop
inc
sbb
cmc
rolb
add
add
pop
add
popa
insb
jae
pop
add
add
and
add
add
movsl
and
mov
pop
nop
test
dec
xchg
add
inc
add
add
sub
fstl
std
pop
mov
pop
lahf
xor
push
sbb
add
pushf
nop
mull
cs
fwait
test
cmp
notb
imul
nop
adc
popf
add
mov
push
insl
sub
nop
xchg
cmpb
push
mov
xchg
fadds
insb
and
add
nop
mov
ret
adc
add
push
mov
mov
add
or
fcoms
mov
push
nop
inc
add
scas
scas
outsl
add
or
adc
add
xchg
ja
push
dec
nop
ja
test
iret
push
add
pop
or
pop
and
std
push
mov
and
sub
mov
or
insb
sbbb
nop
mov
inc
push
dec
nop
addl
xchg
add
sahf
in
cmpsl
out
out
sbb
lea
loope
cmp
add
rclb
push
jnp
loope
ljmp
sbb
shl
in
sbb
dec
nop
repz
ljmp
fstl
jmp
sub
mov
mov
push
nop
mov
lahf
ds
add
nop
pop
rolb
nop
lahf
cltd
nop
cld
sbb
arpl
mov
test
fcoml
xchg
repnz
nop
outsb
arpl
add
arpl
test
add
add
mov
loope
fs
push
add
roll
roll
or
lret
jecxz
xor
lock
add
mov
inc
mov
sub
js
adc
nop
add
xor
ret
mov
jno
movsb
stos
add
movsb
inc
add
push
dec
add
aad
pop
or
and
scas
test
add
mov
cmp
sbb
clc
adc
pop
nop
addl
xchg
and
xchg
mov
xchg
nop
dec
out
adc
or
and
fisttpl
sbb
test
cwtl
add
hlt
add
test
jmp
test
sbb
add
pop
mov
adc
je
aad
sbb
jecxz
je
loop
movsb
in
adcl
loope
sbb
add
aaa
testl
outsl
mov
mov
cmp
add
mov
jnp
xchg
test
adc
adc
inc
add
loop
iret
mov
jnp
dec
test
add
mov
add
nop
mov
nop
in
nop
nop
pop
add
push
sbb
inc
mov
inc
insl
daa
pop
add
pop
inc
add
add
or
add
es
das
imul
clc
or
mov
xor
mov
scas
xchg
leave
add
adc
mov
aam
mov
cld
jl
sbb
pop
add
add
jno
in
clc
cmpsl
inc
rclb
mov
out
add
push
nop
add
and
mov
mov
cltd
add
movsl
mov
or
popf
add
movsb
fadds
sub
add
xchg
nop
jne
pop
add
nop
or
sahf
jp
and
xor
test
pop
add
add
sub
imul
add
sbb
je
das
xlat
or
pushf
add
cld
incb
push
pop
dec
add
add
xchg
add
jbe
fstl
add
add
jp
adc
jo
cmp
lea
cli
mov
mov
add
or
lea
jp
add
nop
jle
cltd
add
cmp
add
add
pop
xor
add
nop
push
jecxz
aaa
push
cmp
scas
fcoml
add
add
add
add
out
mov
xor
lret
push
add
je
in
cld
faddl
ficoml
cwtl
add
pop
arpl
and
fisttpl
daa
mov
fisubs
dec
add
mov
push
dec
add
mov
add
scas
mov
push
nop
push
push
nop
add
iret
aad
add
test
nop
in
pop
nop
dec
push
add
add
nop
test
ljmp
shld
fcoml
add
inc
add
push
and
mov
add
lahf
jle,pt
ja
xlat
faddl
cltd
add
das
insb
bound
add
nop
add
mov
add
sbb
and
cmp
add
loopne
ljmp
movsb
xchg
add
cmc
test
xor
dec
jge
cmp
add
push
aaa
pop
je
push
fadds
aaa
or
mov
and
adc
inc
xchg
lods
and
decb
insb
adc
inc
dec
setne
or
xchg
nop
int3
add
in
lods
sub
pop
or
push
mov
add
push
ret
je
add
cld
call
push
xchg
cmp
add
inc
add
test
mov
push
add
sub
adc
and
leave
nop
clc
mov
movsl
stos
roll
nop
adc
enter
push
out
jnp
movsb
push
in
pop
inc
repz
jecxz
sub
fldl
les
dec
nop
addr16
mov
je
add
dec
add
add
decl
inc
add
pop
push
nop
sub
jle
jb
add
inc
dec
mov
rclb
int
add
fldl
push
add
mov
lods
ficoml
std
mov
push
addb
push
cwtl
nop
insb
xor
sahf
inc
add
pop
xor
sub
scas
adc
push
xchg
add
add
fsts
xchg
out
mov
nop
or
and
push
or
or
jae
and
inc
add
inc
nop
fldl
in
incb
jno
push
nop
push
arpl
push
nop
xchg
add
sub
xchg
xor
sbb
jmp
mov
lahf
push
add
add
in
xlat
push
nop
mov
xor
testb
xchg
add
add
and
add
sbb
push
test
ret
sbb
and
out
jge
nop
pop
add
jae
sub
add
mov
pop
fisubrl
arpl
nop
es
popf
add
jo
jg
icebp
ss
nop
sbb
cmp
adc
inc
daa
jge
jmp
inc
add
mov
jl
jnp
inc
add
xor
pop
nop
mov
and
add
lahf
sub
mov
lret
fsts
setno
icebp
mov
adcl
insb
in
jbe
and
add
pop
add
dec
xchg
loope
idivl
push
nop
add
pusha
dec
nop
fucomip
add
mov
lret
add
lret
mov
and
and
nop
pop
add
adc
fcoms
enter
dec
add
mov
test
ss
fs
fs
roll
xor
adc
mov
jb
sbb
jl
ss
add
dec
jnp
mov
inc
mov
add
pop
add
loopne
mov
nop
rolb
add
push
xor
inc
les
xchg
add
aam
mov
xchg
add
and
mov
mov
ss
add
sub
and
add
sub
nop
shlb
rolb
mov
scas
adc
xor
add
xchg
add
in
pop
mov
xor
scas
add
mov
xlat
pop
add
xor
push
nop
roll
xchg
add
movsl
stc
mov
ret
int
dec
or
add
add
and
hlt
sub
repnz
inc
nop
and
xlat
and
lret
add
xor
dec
and
add
cs
into
cmp
addl
outsl
mov
mov
lods
xchg
scas
add
pop
nop
adc
shld
add
mov
fstl
xchg
mov
jg
add
inc
pop
add
sbb
add
in
pop
add
imul
push
movsl
test
clc
sbb
mov
lret
cwtl
add
cli
or
xchg
cld
jle
nop
mov
xor
push
add
lea
cmpsb
mov
add
into
bound
xlat
fadds
inc
mov
pushf
add
add
aas
xchg
add
adc
add
into
andb
push
add
mov
into
ds
push
add
add
mov
sub
jbe
push
add
dec
nop
mov
pop
and
nop
push
nop
test
data16
xchg
add
jbe
call
add
lock
or
rolb
ljmp
add
cli
or
iret
cli
out
sub
nop
xchg
cltd
add
mov
out
ds
loope
icebp
call
ja
rcr
adc
inc
sub
add
xchg
xor
jnp
xor
rolb
fcoms
add
pop
add
addr16
pop
ret
jo
nop
ret
inc
bnd
pushl
jg
test
push
nop
mov
ja
sahf
inc
add
loopne
nop
dec
std
xor
pop
inc
add
roll
sti
dec
add
sti
pop
mov
rclb
mov
pop
xchg
repnz
jnp
xchg
cmp
sbb
mov
data16
add
fidivrl
dec
nop
or
mov
push
push
mov
add
sbb
enter
mov
fisttps
popa
imul
jp
lret
xchg
cmc
xchg
and
xchg
fldl
adc
push
lahf
into
mov
and
add
nop
pop
ljmp
ret
or
sti
cmp
push
mov
push
mov
call
push
out
xchg
nop
into
stos
addl
je
stc
aad
inc
add
dec
ficomps
sub
cs
nop
inc
loop
add
cltd
add
push
add
sti
movsl
mov
push
test
in
nop
push
dec
jns
xor
mov
adc
pushf
add
inc
inc
fs
roll
pusha
push
sbb
ss
adc
flds
insb
push
add
into
sub
cmpsl
les
inc
das
add
add
pop
sbb
add
add
inc
cmp
add
cmp
nop
or
scas
clts
mov
daa
push
add
add
pop
add
jae
sbb
pop
add
nop
scas
fwait
mov
mov
and
nop
rolb
jecxz
cmc
imul
cmp
sti
jge
arpl
xlat
push
pop
add
add
sbb
dec
add
add
imul
jp
push
add
fisttps
iret
out
nop
cmp
add
cmc
or
mov
and
adc
ds
incl
cli
ficompl
push
push
cmp
stos
push
bound
add
clc
mov
movsl
jae
jne
cli
pop
ljmp
nop
repz
sahf
les
cmp
test
add
push
setb
add
nop
repnz
mov
rolb
nop
nop
dec
cwtl
nop
inc
or
mov
push
add
add
popw
dec
xchg
js
out
arpl
add
pop
add
add
insl
inc
fcmovnb
nop
mov
nop
shll
clc
xchg
cmp
add
fstpt
push
ljmp
nop
fadds
cltd
add
sub
rolb
push
add
xchg
mov
cmp
sbb
inc
cvtps2pi
in
leave
add
sub
lods
cld
push
movsb
lret
in
sbb
nop
sbb
stos
xlat
adc
movaps
addb
mov
jecxz
mov
pop
nop
add
clc
and
les
sbb
and
add
subl
daa
jo
xchg
pushl
lock
add
mov
test
adc
add
add
jmp
add
fadds
js
jno
nop
add
dec
or
nop
xchg
inc
ja
lahf
aam
jno
add
dec
add
es
mov
add
jnp
nop
mov
xchg
adc
mov
ret
mov
add
ret
imul
rclb
js
pop
pushf
nop
inc
push
sbb
nop
push
movsl
push
and
nop
sbb
pop
mov
mov
pusha
int3
add
mov
add
mov
stc
sub
push
add
add
test
rcll
add
cltd
add
stos
mov
xlat
cmpsl
lods
movsb
les
fwait
enter
inc
add
mov
push
sbb
repnz
orb
sbb
mov
sahf
out
incb
fiaddl
clc
mov
add
and
mov
add
lock
adc
mov
aad
pop
add
add
aam
mov
in
mov
cld
pop
rolb
out
sti
stos
call
add
add
rep
mov
add
cwtl
add
pop
and
jb
cmp
sub
nop
je
nop
pop
add
add
test
js
add
pop
ss
push
loopne
add
aam
cli
lods
push
ja
iret
sahf
mov
add
addr16
add
push
imul
pop
cltd
add
flds
pop
mov
nop
cmc
mov
pushf
add
add
add
nop
mov
nop
jge
cmp
add
das
mov
cmpsl
cmc
aaa
ljmp
and
lods
repnz
nop
jns
inc
push
and
add
lcall
fsts
xor
add
sub
mov
fbld
mov
shlb
nop
push
ret
cmpsl
push
add
nop
jecxz
nop
mov
jle
nop
cmp
xchg
push
nop
aas
cmp
add
push
add
adcl
xchg
add
nop
and
pop
mov
add
popf
add
and
nop
mov
aas
loopne
outsb
adc
mov
dec
adc
mov
fistl
push
popf
add
pushf
add
add
pop
nop
mov
cmpsb
push
sbb
movsb
cmp
adc
sub
xor
add
add
pop
xchg
cld
xor
mov
addr16
xchg
xchg
inc
nop
lahf
or
jae,pt
sbb
stc
dec
add
add
loope
loopne
add
jge
nop
arpl
jb
aam
cmp
add
jecxz
add
add
adc
add
dec
orb
int
and
outsb
ja
add
or
dec
es
mov
test
decl
nop
sbb
in
mov
addr16
outsl
mov
pop
sbb
and
xor
add
dec
mov
mov
nop
jecxz
mov
insl
cmc
mov
arpl
nop
jl
insb
inc
test
rcrl
loopne
add
add
idivb
sbb
popf
add
pop
add
lret
add
fstl
rep
mov
mov
inc
lea
xchg
xor
add
dec
add
out
add
sbbl
cltd
add
add
nop
cmp
cli
jne
out
inc
add
xor
aaa
mov
add
nop
or
cmpb
nop
imul
push
sahf
les
add
xor
add
add
push
popa
or
or
mov
mov
out
inc
nop
cld
fs
add
add
push
mov
and
cmp
push
jae
add
push
aad
aad
push
andl
lahf
sub
dec
nop
mov
mov
add
adc
nop
mov
sub
mov
add
sub
push
outsb
out
mov
mov
lret
lea
adc
pop
pop
pop
xor
fisubrs
sbb
outsl
lock
xchg
testb
sbb
popa
lock
repnz
add
lods
ret
sbb
add
xchg
mov
pop
addr16
imul
cmp
add
outsl
and
cmp
in
dec
add
add
cwtl
add
xchg
add
adc
mov
add
nop
mov
nop
or
push
lcall
clc
jae
add
add
popa
aaa
mov
roll
scas
adc
lea
fcoms
inc
cmp
and
icebp
adc
mov
fisubs
push
ret
nop
push
pushf
nop
je
cld
pop
xor
lds
cmpsb
xchg
add
das
mov
ret
xlat
in
in
loope
push
cmp
push
nop
mov
stc
xor
outsb
loop
xchg
add
je
cli
ljmp
add
jl
push
and
cltd
nop
roll
rolb
nop
add
add
pop
add
xor
int3
add
xlat
mov
dec
cmp
lods
or
ret
hlt
cmc
xchg
add
xchg
add
push
dec
int
iret
adc
or
cmp
aam
imul
pushf
add
lods
xor
roll
arpl
call
xor
lea
mov
add
cmpsb
faddl
mov
inc
nop
jmp
nop
push
add
jne
mov
push
add
nop
and
lahf
cmp
fwait
jbe
jle
sbb
adc
add
stos
roll
xchg
sbb
je
mov
nop
imul
std
push
pop
mov
xchg
jne
sbb
add
adc
lcall
add
movsl
cli
pushf
add
ljmp
in
inc
push
nop
das
mov
cmp
add
cmp
cmp
add
xchg
adc
pop
push
idivl
jl
nop
push
add
dec
fs
adc
mov
lods
call
add
mov
ret
sbb
lret
iret
inc
push
add
inc
add
enter
testl
xchg
inc
and
inc
add
push
aad
leave
add
pushf
nop
les
xor
cmp
add
je
mov
mov
adc
dec
lret
or
lret
in
cmp
fs
mov
push
lahf
loopne
cwtl
add
outsb
push
cmpsb
push
add
add
sahf
jnp
xchg
nop
push
add
hlt
jns
mov
andb
popf
nop
arpl
and
addr16
add
out
in
scas
dec
jp
imul
testl
mov
or
dec
mov
in
add
xchg
dec
nop
call
pop
in
je
int3
nop
pop
add
testl
rcll
xchg
nop
jne
nop
xlat
pop
nop
push
nop
adc
mov
xor
nop
adc
add
add
nop
ja
fs
nop
inc
shrl
in
rcrl
cmp
add
adc
inc
ja
jmp
mov
es
pop
add
add
ds
nop
andl
xchg
nop
inc
dec
nop
in
mov
cmp
mov
fsts
dec
nop
mov
mov
add
add
cmp
add
rcll
nop
scas
vpmacsww
in
lds
xor
sbb
add
dec
add
add
sub
mov
add
add
dec
add
add
add
mov
test
fcoml
mov
mov
scas
pop
outsl
les
sub
aaa
scas
dec
add
sub
nop
outsb
mov
pop
add
adcl
jns
add
sbb
xor
add
add
sbb
inc
icebp
outsl
ja
add
stos
and
into
push
imul
addl
xchg
nop
jbe
aad
mov
add
add
orb
nop
lock
push
add
mov
cmpsb
faddl
xchg
test
lahf
insb
test
nop
add
inc
nop
add
add
lods
xor
nop
faddl
sbb
mov
pop
add
push
nop
dec
add
inc
fistps
inc
add
stos
std
sti
cmp
daa
jle
add
add
ret
js
add
mov
xchg
roll
push
add
mov
fistpll
inc
dec
add
mov
and
add
lahf
push
and
sub
fildl
test
add
aam
fidivs
cltd
add
lock
fiadds
pusha
cmp
nop
jbe
nop
xchg
jns
add
popf
nop
pushf
add
and
les
out
push
sbb
cs
data16
in
mov
pusha
adc
add
loop
div
scas
cs
push
add
mov
xchg
add
push
add
lock
inc
repz
jg
jbe
roll
adc
mulb
or
stc
ret
cmc
imul
dec
add
xchg
push
shr
mov
outsl
es
mov
add
test
xchg
add
mov
jae
mov
or
stos
jae
fsts
cmp
or
cmp
add
add
add
add
fwait
jg
adc
sbb
sub
add
add
rcll
add
ss
lds
xor
add
add
xchg
lret
sub
test
sbb
add
xor
or
das
push
aaa
add
xchg
add
pusha
fcmovne
add
inc
hlt
mov
inc
push
add
and
push
add
inc
cmp
loope,pn
rcrl
in
xchg
push
daa
xor
push
nop
flds
lock
mov
add
popa
jns
nop
inc
add
jle
xor
lods
mov
stos
ljmp
jns
add
add
add
nop
xor
ja
and
push
pop
nop
movsb
insl
loopne
cmp
or
jne
dec
or
or
rcll
outsl
and
std
push
nop
lahf
push
dec
add
pop
hlt
pop
aas
filds
decl
insl
inc
nop
push
inc
arpl
push
push
bound
add
movsl
cmpsb
cmpsb
pop
inc
push
or
lcall
ss
add
addr16
xor
nop
lea
or
jge
ret
outsb
nop
add
pop
add
add
add
icebp
aaa
lcall
xchg
add
in
pop
mov
out
mov
add
nop
mov
nop
cli
dec
nop
sub
mov
nop
cmp
in
add
loope
inc
sahf
or
mov
xchg
fldl
sub
cmpsl
inc
add
pop
test
xchg
out
and
and
bound
jle
adc
jb
nop
add
push
pop
lahf
jae
xchg
add
jns
nop
xchg
add
mov
nop
fisubs
jne,pn
roll
and
lcall
outsl
add
nop
add
mov
jbe
imul
inc
add
fimull
dec
add
cmp
cwtl
nop
mov
pop
fldl
stc
lds
sti
dec
add
dec
add
faddp
hlt
adc
mov
loopne
rolb
lcall
bound
push
dec
sbb
sarb
cltd
nop
jmp
mov
xchg
nop
ljmp
add
fcoml
insb
icebp
jge
loopne
lahf
xor
add
cmp
cmp
pop
add
and
nop
pop
add
add
mov
jno
pop
add
test
pop
fbstp
add
and
add
bound
push
push
push
add
cltd
nop
or
sbb
cmp
add
aad
cld
add
fldl
mov
cmp
lods
ds
fbstp
add
xchg
add
add
add
les
push
sub
jp
add
scas
adcb
pop
adc
les
mov
add
xor
add
in
xchg
adc
ljmp
push
insl
xchg
adc
sub
mov
in
jp
nop
pop
je
add
nop
add
xchg
push
test
ret
add
pop
xchg
add
loopne
add
xor
add
cmp
out
push
flds
cwtl
nop
sub
flds
sbb
adc
leave
add
dec
add
xor
jmp
fbstp
cs
mov
add
inc
add
add
pmulhuw
push
sub
add
or
cmp
add
add
push
add
popf
nop
nop
add
imul
lods
dec
xor
add
jl
cmp
inc
push
add
imul
pop
nop
les
add
aaa
dec
pop
inc
cli
dec
enter
and
cmp
mov
rolb
sub
in
leave
nop
addl
pop
add
lcall
adc
xchg
add
rolb
mov
xchg
nop
mov
xor
loopne
mulb
add
pop
out
out
jle
xor
inc
nop
mov
pusha
inc
add
add
cmp
aas
dec
add
test
cli
insl
test
mov
flds
pop
add
lcall
arpl
add
cld
pop
std
mov
push
pop
dec
nop
mov
xor
pop
cltd
add
push
add
push
mov
mov
pop
push
roll
es
pop
xchg
add
add
xchg
scas
push
sbb
mov
sbb
setb
adc
scas
inc
pop
xchg
nop
sbb
leave
add
leave
nop
lea
xchg
add
sub
insl
in
inc
add
nop
lea
rolb
nop
aam
mov
add
jg
stc
cmp
xchg
inc
sub
daa
pop
nop
inc
add
sub
pop
lds
xor
scas
or
cli
xor
lahf
push
jmp
nop
inc
enter
addr16
adc
fsts
and
lods
jp
test
fwait
stos
mov
nop
mov
adc
push
movsl
mov
push
add
sbb
nop
push
add
xchg
pop
icebp
push
add
sub
sub
push
push
add
dec
add
jno
add
pop
and
dec
nop
std
push
nop
rdpmc
das
mov
sub
sahf
push
add
cmovg
lock
xchg
nop
adc
nop
sbb
jmp
add
push
add
cmp
outsb
lret
icebp
cltd
add
add
pop
insb
aam
popa
ss
or
or
loop
aas
movsl
ret
mov
nop
mov
nop
fisttpl
popa
cmp
add
or
out
pop
add
std
hlt
lahf
insb
pop
das
jl
xor
scas
mov
pcmpgtd
add
addb
add
mov
add
lods
inc
jnp
jne
add
idivb
pushf
add
push
and
add
mov
add
lcall
jl
pop
add
cltd
nop
mov
xor
add
hlt
mov
sahf
fisubl
lds
or
mov
add
sub
add
add
nop
out
rcll
add
adcl
movsl
sbb
nop
out
lock
aam
mov
add
fidivl
and
mov
insb
sahf
adc
test
mov
in
stos
fistpl
hlt
andb
ss
les
loop
sti
in
cmp
aam
mov
jo
and
add
push
mov
jg
sbb
cwtl
nop
mov
xchg
cli
test
add
addr16
stos
sub
jecxz
cmp
pop
insb
shl
jb
cmp
dec
fistl
nop
sbbb
push
sbb
add
lcall
xchg
mov
fldl
aas
jmp
pop
nop
cs
or
pushl
jmp
roll
dec
add
repnz
ja
pop
add
dec
nop
call
nop
fwait
sub
ficomps
nop
jge
aas
in
faddl
data16
add
inc
hlt
cmpsl
test
push
pop
cmp
in
dec
jne
loop
nop
pusha
lea
mov
jno
sbb
lock
imul
add
xchg
cmpsb
pop
repnz
push
pushf
add
arpl
pop
out
sbb
das
clc
out
or
out
mov
cmp
pop
nop
add
stos
mov
nop
pop
add
std
jge
mov
add
flds
dec
and
xor
shl
ja
popa
std
mov
mov
push
add
jg
nop
test
imul
fisubrl
clc
sbb
xor
nop
loopne
nop
repz
nop
pop
neg
add
push
js
dec
jle
nop
sub
nop
push
test
ss
add
add
jge
cmp
pop
adc
jp
addr16
outsl
aaa
push
addr16
les
movsb
aas
jno
and
mov
nop
cs
ja
sbb
lds
add
xor
bnd
repnz
nop
call
and
cmp
push
adc
ja
add
xor
sbb
and
cmp
dec
dec
nop
adc
sub
push
add
nop
dec
xor
adc
nop
arpl
fs
jp
nop
mov
aam
sub
mov
movsb
add
push
ss
fildl
addl
jmp
nop
into
aam
inc
cmp
mov
in
or
xor
add
add
cmp
nop
jae
gs
push
add
ja
andl
mov
aad
je
nop
fwait
mov
std
xor
fcoms
std
in
jecxz
add
sub
adc
repnz
aam
jno
cmp
aam
mov
nop
in
sahf
adcl
addb
test
leave
nop
xchg
fistpll
jns
nop
fidivs
lahf
rcll
push
inc
add
bound
add
int3
add
push
add
xchg
jmp
outsl
cs
ja
add
mov
call
ds
add
cmp
add
push
nop
jp
nop
lea
jmp
push
roll
inc
nop
mov
nop
mov
mov
test
adc
flds
jl
sub
nop
sub
pop
push
add
mov
and
mov
add
loopne
dec
stos
sbb
out
jne
mov
leave
nop
sbb
mov
notb
push
nop
adc
xchg
test
divl
call
cmp
add
add
mov
mov
pop
int
jne
stos
xor
xchg
or
inc
nop
out
inc
fldl
push
scas
xor
in
addl
ret
xchg
add
push
jl
sbb
xchg
nop
inc
or
faddl
into
mov
push
jo
lods
pop
jmp
fidivl
rcl
add
imul
sbb
pop
nop
mov
mov
add
add
sbb
mov
adc
adcl
cli
jno
add
push
and
js
adc
add
pop
add
add
jg
mov
lea
xor
add
stc
fadds
and
movsb
lds
repnz
mov
add
adc
insb
mov
imul
mov
cmp
add
add
mov
or
gs
jl
mov
clc
outsl
push
add
je
jo
mov
xchg
add
pop
insb
negl
inc
add
jno
mov
test
mov
pop
leave
add
jl
mov
jbe
leave
add
in
nop
and
nop
ss
adc
out
fadds
roll
nop
mov
pop
add
fwait
xchg
cmpl
pop
nop
sbb
jp
add
cli
cwtl
add
cmp
inc
add
nop
xchg
jge
in
dec
nop
cltd
add
arpl
sbb
das
lahf
or
fsts
mov
or
sti
je
aam
ds
nop
hlt
int3
nop
jae
test
shlb
loopne
add
mov
outsl
push
xor
ret
bound
fidivrs
add
fwait
cmp
push
call
int3
add
notl
dec
add
imul
and
nop
out
imul
popf
add
cmc
pop
nop
fcomi
aam
stos
mov
into
iret
jp
nop
test
cmp
add
mov
xor
sub
sub
nop
inc
cmp
add
scas
bound
add
cmp
jp
mov
nop
cmp
mov
cs
arpl
jecxz
add
movsl
ds
xor
push
add
in
aam
and
divl
out
je
in
xchg
pop
add
adcb
lahf
add
ret
push
lods
nop
nop
inc
push
add
js
add
add
leave
add
nop
and
ret
addl
stc
cmpsl
in
out
push
push
pop
sbb
cmp
mov
adc
adc
dec
mov
nop
push
hlt
loope
pusha
cmp
lret
cli
push
add
add
mov
add
sti
push
mov
add
nop
sbb
mov
out
cmc
imul
loop
add
add
dec
add
add
js
in
ss
add
nop
nop
arpl
jge
insb
sbb
sbb
pop
sbb
inc
nop
add
add
and
cwtl
nop
xchg
add
mov
xchg
xor
push
add
stc
movsl
jmp
xchg
nop
sub
fistps
jge
test
xchg
test
and
dec
or
cmp
inc
in
xchg
insl
mov
insl
and
jp
mov
cmp
add
add
adc
jl
add
jecxz
jmp
fcoms
cli
outsb
mov
nop
sub
push
add
add
jns
xchg
nop
imul
pop
nop
mov
dec
add
mov
cmp
add
ret
push
nop
sub
in
nop
push
add
push
rolb
jnp
add
add
movsl
in
adcb
xor
add
add
add
nop
test
push
add
add
les
in
push
nop
cmp
xchg
add
rcrl
mov
and
add
mov
inc
add
xchg
xor
sahf
xor
push
imul
cmp
jp
or
decl
xchg
push
nop
insl
cmp
fwait
sbb
jmp
std
enter
int
sub
fidivs
jnp
mov
loop
ljmp
add
add
add
jnp
rdmsr
imul
iret
out
faddl
push
roll
xor
mov
add
add
out
cmp
push
add
add
add
jo
push
lock
cmp
and
mov
push
movsb
js
fcoms
sub
adc
push
xor
nop
mov
ret
sub
cmc
mov
nop
scas
scas
xlat
push
add
add
push
fadds
insb
out
mov
nop
test
jbe
pop
loopne
and
add
nop
insb
or
jne
cmp
xor
nop
rcr
lods
nop
add
sub
add
cmp
aam
fimull
push
imul
push
call
sbb
jne
push
stos
ret
push
in
xchg
push
mov
nop
add
fsts
add
push
insl
scas
daa
or
jmp
add
sub
mov
nop
idivb
add
les
mov
mov
sub
mov
std
jmp
xor
and
adc
out
dec
add
sub
fidivl
add
inc
nop
mov
mov
xor
mov
jb
jne
jge
fisubl
mov
add
out
fistl
les
fiadds
add
jb
cld
cmp
cld
ja
add
icebp
push
or
push
cld
cmp
adc
pop
add
nop
push
ret
dec
nop
xor
push
push
rolb
push
jbe
nop
outsl
sbb
add
pavgb
les
jecxz
add
stc
sub
fcmovbe
nop
sub
sub
sbb
push
nop
addb
scas
inc
nop
into
mov
roll
adc
pop
nop
pop
add
xlat
xor
add
add
mov
shr
xchg
fstpt
mov
call
add
add
addr16
sbb
push
scas
pop
in
or
fistl
push
xor
inc
inc
xorl
adc
mov
add
hlt
sbb
add
push
or
sub
nop
nop
mov
nop
adc
out
dec
add
cmpsb
inc
rolb
jno
jb
mov
fwait
shrl
arpl
nop
pop
gs
jb
add
cmp
out
push
add
inc
nop
pop
stos
xchg
add
pop
and
add
adc
add
mov
add
mov
add
add
add
push
mov
mov
adc
sbb
add
ret
scas
or
inc
add
lcall
nop
nop
add
and
add
jae
das
xchg
add
add
test
subl
xchg
out
add
add
ljmp
adcl
daa
stos
sahf
fadds
sub
mov
roll
fucomip
cli
jbe
ljmp
mov
in
aam
lods
nop
nop
cmp
clc
push
nop
loopne
loop
addr16
add
nop
lock
and
nop
unpckhps
arpl
xor
sbb
mulps
inc
push
add
imul
add
add
mov
arpl
mov
int3
add
cld
cmpsl
rolb
cmpsb
and
pop
add
mov
jb
loop
ljmp
mov
arpl
push
add
inc
aaa
xchg
nop
xchg
cmpsl
adc
pop
add
add
add
cld
dec
mov
shrl
and
into
xchg
add
lock
add
dec
and
notl
loopne
cmp
mov
out
inc
add
jle
push
nop
inc
add
clc
insl
mov
clc
dec
add
add
addr16
mov
pushf
nop
xchg
add
out
out
ljmp
lret
or
lret
dec
push
add
add
sahf
inc
push
adcl
int
outsl
stos
dec
add
test
ret
nop
fisttps
movsl
and
in
daa
lret
lods
es
je
nop
divb
xchg
hlt
and
divl
lea
in
xor
add
xor
ficoms
or
movsb
mulb
daa
roll
nop
dec
add
cmpsl
and
ret
int3
nop
jns
ret
ljmp
ret
and
rep
filds
add
mov
insl
and
ret
mov
add
nop
push
or
sbb
loope
jnp
lods
jp
mov
les
int3
add
xor
adc
adc
fidivl
add
pop
add
inc
aas
test
arpl
pop
enter
dec
jbe
or
inc
lret
xchg
ds
adc
and
stc
adc
mov
push
repnz
in
cltd
add
or
xchg
dec
popf
add
fwait
es
add
jnp
mov
jl
sbb
sbb
sub
inc
xor
ljmp
jbe
add
in
inc
add
mov
mov
aaa
pop
add
cmc
mov
add
fadds
sbb
xor
iret
mov
jnp
adcb
xchg
add
xchg
add
popa
aas
push
sahf
mov
xchg
fs
mov
jo
sbb
pushf
add
xor
push
add
jg
es
nop
test
lock
repnz
add
cmpsb
and
fdivp
inc
nop
jbe
fadds
das
push
sub
nop
popl
xchg
ret
insl
jmp
sahf
js
jl
add
sbb
pop
add
jmp
and
nop
cmp
xlat
in
or
mov
sbb
pop
add
add
scas
push
test
std
xchg
notb
je
aaa
popa
sub
mov
add
repnz
add
or
scas
cwtl
add
cmp
add
xor
mov
fadds
loope
jno
jnp
mov
add
add
add
ljmp
cltd
nop
and
cs
out
sub
nop
mov
nop
arpl
xlat
movsl
push
jmp
mov
sbb
sbb
ficomps
addl
add
xor
ret
mov
fcoms
out
and
jno
mov
loope
add
add
inc
sbb
addb
nop
mov
xor
add
add
jecxz
push
fcmovb
add
insl
bound
mov
lods
add
fisttps
add
add
add
add
scas
xchg
nop
xor
rolb
mov
test
flds
int
add
cltd
add
and
popa
sahf
add
mov
ljmp
lcall
add
adc
mov
iret
bound
repz
mov
add
nop
call
sbb
mov
mov
sub
sbb
lods
cmp
add
mov
adc
in
mov
nop
xor
mov
fimull
xchg
jae
pop
les
rclb
shl
out
imul
jge
ret
je
pop
nop
jle
sti
pop
mov
or
xchg
outsl
dec
jecxz
add
pop
add
iret
movsb
push
jno
mov
dec
or
test
scas
add
mov
mov
es
or
add
ret
sbb
xchg
xchg
or
test
nop
nop
adc
outsb
push
mov
dec
push
test
inc
nop
xchg
aaa
adc
les
xor
sub
mov
dec
add
add
pop
add
movsb
fisttpl
add
cmp
fs
inc
mov
cmp
lock
ljmp
test
rolb
mov
sbb
nop
xchg
div
and
icebp
sub
jp
add
enter
sbb
pop
xor
add
in
aam
push
nop
dec
jmp
add
mov
in
decl
imulb
stc
pop
out
add
nop
mov
nop
xor
sub
xchg
sbb
or
cmp
fidivs
out
or
mov
add
jp
lods
lahf
lret
adc
add
push
out
add
and
inc
nop
sti
test
lret
jge
in
mov
add
pusha
test
movsb
movsb
jge
imul
nop
push
xchg
loopne
jo
js
out
pop
stos
or
pop
add
add
dec
adc
jmp
dec
nop
sti
scas
jle
and
adc
push
in
sbb
jno
add
dec
add
dec
xor
cld
mov
sub
mov
push
add
or
add
movsl
dec
add
add
mov
clc
hlt
lcall
sbb
arpl
lea
iret
rolb
sbb
aaa
pop
sbb
fiadds
xorb
xlat
in
in
loop
popl
dec
add
out
mov
adc
into
nop
nop
mov
nop
cmc
daa
mov
add
add
fwait
pop
nop
ret
out
add
call
loopne
movsb
xchg
add
mov
in
testb
sub
cltd
add
outsb
jno
add
and
add
add
xor
add
add
xchg
ds
rolb
dec
push
push
jbe
add
add
cmpsl
push
aad
mov
nop
aas
xchg
cwtl
add
out
addl
or
int
add
testb
push
add
roll
idivb
nop
pop
out
mov
nop
clc
cmc
push
pop
xor
lock
add
pop
imul
add
add
dec
lock
popf
add
jne
add
add
xor
sub
repz
addb
sbb
nop
insb
fs
add
rorl
xor
out
add
sub
push
ret
dec
nop
xchg
add
push
aaa
xor
xchg
fwait
mov
iret
dec
add
lock
push
add
mov
jle
aaa
popf
add
repz
xor
jno
jmp
add
push
add
pop
add
inc
add
add
rolb
aas
xchg
add
rolb
cltd
add
pop
add
add
add
pushf
add
daa
les
mov
add
addl
add
push
cmp
clc
scas
lret
nop
jmp
arpl
nop
rolb
xchg
in
xchg
xor
xchg
add
roll
fwait
pop
add
rclb
add
add
roll
inc
mov
lcall
and
scas
cli
xchg
nop
rolb
into
sbb
mov
dec
add
decb
adc
push
add
icebp
insl
xchg
add
xlat
xor
cmp
pop
pop
add
or
into
adc
add
lds
iret
add
pop
stc
pop
nop
adc
add
jne
popf
nop
aam
lock
clts
test
dec
add
dec
add
mov
sarl
xor
repz
pop
cmpsb
jae
sbb
aam
and
and
bound
nop
cli
mov
pop
gs
add
repnz
nop
cmpsb
out
stos
rcll
loop
test
leave
nop
popa
jo
add
jo
lods
les
xchg
movsl
decb
xchg
mov
sub
add
lea
mov
adc
ljmp
enter
sub
add
push
mov
xor
adc
dec
add
roll
sbb
jo
add
push
add
jmp
mov
and
mov
add
mov
inc
lret
pop
dec
loop,pt
add
add
mov
sbb
xchg
nop
cmpsb
stc
pop
inc
push
mov
sti
test
mov
out
push
lretw
pop
call
add
and
dec
adc
fadds
cld
add
int3
nop
cmp
ss
je
nop
push
sbb
add
add
movsb
cmp
mov
add
jno
loopne
mov
push
in
xchg
ret
lret
push
add
fcoms
xchg
aam
cwtl
nop
mov
scas
ss
add
imul
adc
out
nop
dec
add
cmp
add
addr16
dec
nop
mov
imul
nop
cmp
xor
fistl
add
jl
clc
sub
adcb
pop
es
nop
inc
nop
add
movsb
inc
nop
testl
cwtl
nop
scas
xor
add
add
pushf
add
sub
mov
jmp
push
or
sbb
es
sub
add
add
scas
add
std
popa
xor
notb
adc
sbb
pushf
nop
jmp
nop
out
mov
in
js
scas
out
mov
mov
fidivs
sarb
cmpsb
fimull
daa
adcl
aam
into
movsl
daa
add
mov
add
jae
add
roll
sub
shlb
mov
nop
aad
xchg
xchg
fisubs
adcb
cmp
imul
cmp
add
add
or
sub
dec
add
dec
sub
add
test
xor
cmc
aam
clc
mov
cli
dec
leave
add
test
sub
xchg
sub
push
data16
xor
add
daa
jne
lret
mov
popf
add
mov
adc
cmp
jp
pop
nop
std
aad
in
push
add
add
ljmp
add
fcoms
fstpt
outsl
popf
add
addb
add
or
cld
cld
push
pop
adc
adc
lcall
or
dec
add
add
jl
add
test
sub
nop
add
scas
lret
stos
adc
adc
add
aas
pusha
popf
nop
inc
add
add
mov
idivl
imul
xchg
add
in
rcll
jl
xchg
fldl
mov
add
nop
popf
add
add
inc
add
ja
sbb
insl
lods
pop
nop
nop
add
add
add
flds
push
or
xchg
nop
sbb
cltd
add
in
fisubs
ss
movsb
lahf
jbe
dec
and
mov
loop
shlb
add
mov
faddl
fisubl
cmp
sti
data16
mov
mov
mov
ret
stc
cmp
sti
xchg
nop
lcall
or
mov
adcb
nop
js
cmp
fldl
les
add
add
divb
pushf
nop
and
lock
adc
push
mov
pop
inc
lea
adc
dec
nop
test
stos
push
daa
sub
out
fwait
xor
lret
lods
sub
add
mov
xor
lret
xchg
ljmp
sbb
jmp
add
in
mov
cmp
and
sub
clc
cs
nop
and
add
nop
and
dec
dec
add
xchg
add
nop
add
cld
push
inc
mov
repnz
idivb
mov
stos
jno
clc
dec
add
sbb
test
pop
aaa
sbb
neg
add
xor
int3
add
je
inc
add
clc
movsl
mov
mov
bound
nop
dec
fisubs
in
jbe
add
adc
cmp
add
add
and
add
push
out
push
add
xchg
in
stos
and
or
add
dec
push
call
out
push
lock
repz
shr
inc
add
call
nop
ret
sub
mov
rdpmc
adc
pop
or
inc
idiv
mov
mov
add
jp
jl
and
or
cld
loop
nop
xor
stos
test
stos
jns
popf
add
lods
cld
stc
dec
leave
add
add
stc
pop
nop
jecxz
mov
repnz
or
push
icebp
lds
stc
mov
push
sub
add
nop
mov
and
sahf
hlt
aaa
pop
jae
iret
jb
add
jno
in
adc
div
cwtl
nop
cmc
repnz
mov
adc
jb
arpl
inc
lret
add
xchg
call
jnp
add
jb
mov
lea
mov
gs
enter
popf
add
or
iret
inc
xor
nop
mov
movsb
into
push
mov
nop
nop
add
mov
fdivp
lahf
mov
cmp
sub
iret
js
jp
lock
push
pop
cmpsl
pop
sti
pop
add
scas
pop
int3
add
dec
std
mov
cmp
negb
sbb
push
xor
or
ds
add
dec
ds
pop
nop
push
mov
add
mov
int3
add
pop
sub
cmp
sbb
jae
add
sub
adc
in
jne
dec
add
test
xor
xchg
leave
add
je
jecxz
push
jle
adcb
fbstp
add
nop
dec
adcb
or
mov
add
je
or
xor
clc
mov
inc
sub
mov
loop
xchg
sbb
inc
xchg
flds
mov
mov
add
nop
out
outsb
int
or
insb
sub
cmpsl
idiv
mov
lret
sub
and
out
arpl
sub
cwtl
nop
roll
add
daa
sahf
lcall
out
mov
xchg
add
scas
inc
push
test
adc
nop
or
pusha
nop
add
xchg
add
lcall
nop
insl
and
inc
add
and
fiadds
pop
scas
loop
cld
and
dec
add
nop
xor
add
dec
stos
ret
addl
addl
fiaddl
nop
xor
das
mov
es
fs
ret
test
bound
xchg
xchg
dec
add
adc
or
pop
add
cmpsl
push
add
mov
fwait
jg
nop
lret
xchg
jo
mov
dec
add
cmp
int
xor
bound
cmp
mulb
divl
mov
mov
cmc
movb
in
hlt
mov
shlb
xchg
test
mov
mov
pop
adc
call
adc
test
shrl
insl
and
add
inc
add
icebp
in
repz
fwait
mov
bound
lcall
fistl
sbb
sbb
idivb
mov
lods
lret
movsl
lahf
dec
add
lods
xchg
out
nop
fldl
rolb
mov
cli
int
inc
add
xlat
icebp
dec
add
addl
mov
cmp
add
imul
mov
add
pushf
add
or
jae,pt
add
inc
jecxz
add
mov
inc
xchg
add
add
pop
add
add
cmp
push
and
cs
sub
mov
mov
in
adc
mov
flds
cmc
pop
add
add
mov
sbb
or
cmp
ret
mov
das
stos
mov
jg
nop
outsb
cmp
add
int
xor
jg
add
nop
insb
jne
push
into
xchg
and
test
add
sbb
loope
movsl
test
add
dec
nop
lea
movl
jl
lcall
repz
dec
add
add
mov
push
add
add
cmp
nop
les
adc
hlt
les
mov
std
xor
pop
fisubrl
cmp
add
loop
and
sbb
sub
sub
push
xchg
nop
xchg
mov
add
fadds
adc
xchg
dec
repz
cli
fisubs
clc
mov
push
jbe
adc
and
pop
nop
cmpsl
inc
nop
call
adc
cmp
mov
and
imul
punpckhdq
add
pop
add
add
xchg
nop
mov
inc
add
sbb
iret
push
bound
les
add
lods
cmp
jp
mov
push
push
in
xor
stos
cltd
nop
or
nop
jne
nop
and
nop
mov
nop
jg
pusha
mov
cmp
mov
outsl
xchg
lahf
loop
pushf
add
arpl
loopne
lahf
xchg
jne
ret
add
arpl
test
xor
cli
addb
lahf
add
mov
daa
imul
add
add
add
sbb
mov
das
add
int3
nop
roll
xor
cmp
mov
push
add
mov
adc
out
push
pushf
add
add
inc
add
pop
nop
test
stos
dec
xchg
sub
addb
decb
mov
or
lahf
push
pop
xchg
add
testb
cmp
out
clc
dec
add
cmp
out
in
into
addb
sbb
or
adc
xchg
add
xor
or
inc
or
dec
xor
pop
add
xor
nop
nop
add
xor
pop
iret
sub
adc
xchg
nop
jmp
ret
mov
add
ret
sahf
jl
rclb
movsb
sbb
mov
sub
nop
mov
push
add
mov
add
and
add
nop
mov
nop
sub
fldt
iret
aas
popf
add
and
inc
add
std
lahf
add
int3
add
pop
mov
add
add
xchg
xlat
mov
icebp
cmp
mov
push
stos
in
xchg
movsb
div
ret
cmpsl
mov
push
add
cs
pop
lcall
cmc
sti
not
call
imul
pop
jge
jge
xchg
loop
jmp
sub
add
add
inc
add
sub
adc
xor
sbb
pop
push
add
pushf
nop
dec
pop
or
stos
and
std
add
mov
add
sbbl
cmp
outsl
cmpsl
test
adc
stos
xchg
xchg
add
add
dec
and
in
push
int3
add
mov
xor
movsb
jmp
add
arpl
mov
cmp
add
popf
add
and
pop
and
add
mov
dec
lea
add
fcoms
cmp
int3
add
add
pushf
add
mov
les
popa
push
add
jae
push
push
nop
sbb
sbb
dec
add
ds
das
jbe
out
imul
pop
inc
pop
jae
nop
dec
add
sub
add
scas
sub
add
in
and
add
dec
add
iret
pushf
add
add
or
in
aas
cwtl
add
stc
fcmovnbe
nop
leave
add
fidivl
xor
leave
nop
mov
nop
call
xchg
cmp
inc
add
add
aas
rcrb
addr16
lods
adc
bound
inc
arpl
push
pop
add
add
nop
imul
outsb
xchg
add
leave
add
dec
add
repnz
mov
sub
or
mov
rolb
in
nop
jb
nop
sub
mov
addr16
push
lahf
pop
xchg
out
add
nop
xchg
xor
test
fisubrs
sub
add
add
mov
dec
mov
bnd
jle
cmpl
push
nop
add
nop
inc
add
cmp
pop
test
push
and
add
dec
add
sbb
pop
add
fldl
rcll
nop
add
add
jle
jae
xor
jg
adc
push
fwait
inc
add
test
out
xor
xchg
adcb
fs
cmp
xchg
add
cmp
addl
nop
pop
jecxz
mov
fs
nop
add
push
out
jmp
sub
jnp
fadds
in
gs
dec
add
add
out
xor
xchg
dec
add
xchg
nop
jns
mov
nop
jae
dec
ret
sbb
add
setl
push
cmp
and
xorl
mov
add
cmp
nop
sarl
ds
nop
cmp
movsb
call
push
add
nop
enter
mov
inc
add
popf
nop
push
mov
flds
or
int
aad
push
nopl
fwait
xchg
sbb
push
loopne
cmp
dec
mov
pop
add
jmp
iret
pusha
cmp
test
inc
orb
pop
add
inc
mov
add
cmp
addr16
xchg
ja
into
loop
push
mov
xchg
xor
pop
nop
and
add
pop
sub
add
les
popf
add
add
inc
add
popf
add
iret
lret
pop
nop
mov
adc
pop
repz
jb
pop
nop
sbb
nop
flds
lahf
rolb
xlat
call
nop
add
iret
sub
xchg
mov
sbb
cmp
stos
pop
nop
push
xchg
or
lds
sbb
mov
add
push
js
inc
add
sti
in
push
add
loope
xor
jp
add
das
mull
or
iret
cmp
addl
pop
sbb
arpl
push
lods
or
mov
and
nop
cs
add
outsl
jbe
les
js
add
mov
add
and
and
testl
std
sub
push
loopne
nop
or
jle
nop
mov
fisttpl
jmp
je
nop
clc
add
out
popa
roll
mov
add
add
push
test
sahf
sbb
pushl
mov
pop
add
outsb
mov
pushf
add
rolb
add
in
daa
push
out
mov
lea
add
mov
fldt
nop
pop
inc
nop
lds
stos
test
nop
add
nop
lds
bound
add
pop
jl
add
repz
or
cmp
fsts
cwtl
nop
out
mov
add
xor
nop
mov
daa
loope
nop
negb
add
testb
enter
pop
pop
push
leave
nop
mov
adc
cld
mul
imul
push
nop
jno
jl
add
dec
add
pop
fcoms
add
push
lock
scas
dec
add
das
sub
add
aam
inc
add
fs
dec
xor
inc
nop
insl
inc
nop
jge
xchg
push
cmp
pop
inc
add
add
nop
jg
es
pop
rorb
add
xor
insl
stc
mov
xlat
test
add
sbb
jmp
lcall
sbb
pop
mov
cs
out
loopne
ljmp
pushf
nop
push
add
and
scas
jmp
push
faddl
in
xchg
cmpsl
faddl
pop
nop
jmp
nop
imul
aam
std
mov
fistpl
lods
cmp
cmpsb
push
add
and
insl
into
add
or
es
rolb
pusha
push
add
sbb
mov
add
dec
add
mov
addb
aad
outsb
roll
cld
leave
add
inc
dec
nop
push
mov
add
out
lea
into
cltd
add
nop
nop
pusha
jle
add
nop
push
and
add
in
std
jo
bound
fldl
jbe
ret
add
call
cmp
and
scas
outsb
mov
nop
push
xchg
nop
test
or
btc
nop
bound
arpl
sbb
mov
loop
nop
push
dec
add
jl
push
xor
pop
cmpl
lods
inc
add
out
lds
les
in
mov
pusha
push
ret
push
xchg
jne
jb
add
add
pop
xor
dec
add
push
add
movsb
cmp
clc
and
nop
and
cwtl
add
sbb
stc
cmp
in
xor
in
mov
decb
iret
sbb
mov
add
ss
pop
jecxz
aad
mov
dec
add
add
insl
add
pop
nop
faddl
adc
daa
dec
stos
mov
pushw
mov
nop
mov
out
test
jns
lahf
xchg
nop
dec
add
pop
mov
addl
or
addl
add
loope
cmc
jecxz
add
dec
nop
cli
adcb
nop
lock
jae
push
cmp
sub
add
roll
add
js
nop
push
add
sub
loop
add
add
cld
cli
ja
mov
loope
lock
xchg
add
or
add
aad
movsb
jl
pop
faddl
jb
nop
mov
sbb
imul
iret
es
add
repnz
xor
mov
jg
jle
adc
nop
cmp
daa
jmp
nop
stc
xor
push
add
cwtl
add
nop
nop
adc
flds
xor
sub
popf
add
mov
ja
nop
in
sbb
js
loope
xlat
out
push
sbb
mov
xchg
xchg
push
test
push
xchg
add
add
sbb
add
lahf
mov
dec
nop
imul
add
sub
and
xor
mov
xchg
nop
movsb
lret
movsb
jns
pop
adc
or
in
movsb
fs
add
inc
fcoms
jmp
lcall
inc
mov
enter
ds
test
rolb
test
add
add
nop
out
int
pop
dec
cmp
aam
xchg
std
and
add
pop
add
out
lret
insb
stos
je
sub
mov
nop
add
add
dec
dec
add
int
add
pop
xchg
add
ja
mov
mov
mov
cli
stc
les
in
mov
test
add
and
mov
nop
sub
jmp
or
aam
sub
and
mov
cmp
add
jb
nop
popa
dec
loopne
push
aad
rcll
or
sbb
and
pushf
add
mov
stos
lods
leave
nop
xchg
add
jge
add
in
into
fadds
sub
lea
lcall
nop
add
std
cmp
add
dec
in
xor
inc
add
sub
adc
add
repnz
mov
sahf
mov
mov
daa
cmp
dec
repnz
lea
mov
xchg
nop
add
jne
mov
adc
fisttps
sti
mov
sub
lret
dec
add
pop
or
add
add
sbb
add
add
scas
push
pop
ds
call
mov
mov
rolb
rorl
nop
rolb
push
repnz
leave
add
mov
test
pusha
call
cmpsb
inc
jmp
scas
ljmp
jmp
add
jl
jo
jge
pusha
sub
add
imul
push
xchg
dec
cmc
jecxz
add
aad
out
roll
in
gs
adc
ret
jbe
imul
aas
popa
inc
das
and
nop
stos
xchg
nop
movsb
imull
and
add
push
add
and
jmp
es
nop
mov
negl
data16
nop
push
outsl
insl
jnp
fs
testl
das
push
nop
and
add
mov
lock
pop
nop
push
adc
scas
xor
fs
pop
out
jbe
add
fimull
sahf
cmp
out
nop
cmpsb
out
js
fstl
adc
add
cmp
pop
loopne
adc
and
movsl
or
and
mov
or
lea
xchg
xchg
lret
jp
xor
nop
insb
mov
add
mov
push
scas
test
nop
add
nop
push
rclb
nop
push
add
pop
nop
and
test
adc
sbb
cmp
jge
imul
add
mov
push
out
addl
pop
cmpsb
xchg
add
pop
add
cmp
nop
loop
std
cmp
dec
aad
fldl
adcb
add
aad
or
sub
jnp
loope
pop
lods
mov
nop
shr
stos
aaa
iret
adc
dec
sub
add
cli
pop
add
in
add
mov
add
mov
lea
out
add
scas
addb
jmp
xor
std
pop
nop
mov
imul
ds
push
sbb
ja
add
mov
aas
enter
lret
xchg
sarb
add
nop
nop
repz
and
incb
mov
push
push
cwtl
nop
nop
add
outsb
ss
nop
lret
lods
int3
nop
or
outsl
rolb
xchg
in
or
mov
ret
add
jmp
and
sub
movsl
call
lea
cs
add
mov
incb
add
aam
xorb
test
scas
in
push
test
add
sub
xor
insl
faddl
lcall
lret
mov
out
lret
cmp
nop
sbb
sub
nop
fldl
rolb
fstl
out
push
nop
pop
mov
add
sbb
add
pop
xor
ljmp
dec
add
test
rclb
pop
icebp
xor
aas
cmp
stc
mov
push
or
mov
add
hlt
mov
push
add
hlt
loope
ljmp
aaa
jg
lcall
mov
dec
nop
jnp
pop
cmp
pop
call
nop
sub
add
xchg
nop
popf
add
adc
push
mov
sub
call
jp
into
and
jno
es
xchg
dec
add
out
jp
pop
and
sarl
add
lahf
popf
add
mov
jb
in
add
xchg
rclb
fbld
xchg
nop
lcall
adc
xchg
add
adc
mov
add
xchg
add
mov
add
cltd
add
or
sbb
push
cmp
test
pusha
pop
cmpl
js
add
push
add
nop
lea
pop
std
test
and
cltd
add
pop
add
faddl
cltd
nop
pop
add
stos
add
dec
sbb
add
add
rolb
add
in
add
sbb
std
rclb
add
pop
push
clc
add
test
add
inc
add
inc
nop
xor
rcll
nop
adc
push
movsl
cmpsb
pop
pusha
pop
nop
popa
jno
rorl
mov
insl
sahf
in
xchg
cmc
sbb
std
iret
add
loope
cmp
sub
sub
imul
mov
fwait
cmp
jge
stos
mov
out
xchg
add
nop
nop
aas
pop
lods
sti
adc
mov
or
sti
sti
inc
add
add
add
lahf
pop
orb
jo
dec
pop
add
jo
ds
push
nop
nop
mov
sahf
push
dec
nop
clc
mov
jl
movsb
mov
add
sub
add
adc
add
sbb
mov
mov
push
push
add
lods
sahf
xor
nop
inc
add
jo
add
inc
add
sti
sbb
enter
clc
mov
inc
pushf
add
xchg
insl
data16
add
icebp
adc
mov
in
dec
lret
nop
mov
jp
movsl
adc
nop
ficoml
xchg
dec
add
nop
pop
int
fldl
jb
jae
bound
mov
movsb
and
js
nop
pop
mov
push
test
rclb
add
add
add
or
mov
jmp
sub
repnz
clc
jp
push
inc
add
add
inc
gs
add
mov
and
nop
scas
add
out
fwait
pop
lock
call
add
fndisi(8087
int
push
mov
ret
xchg
add
aaa
push
lds
adc
in
push
arpl
mov
nop
xlat
lock
add
add
add
insb
in
addb
sbb
movsl
out
je
loopne
in
mov
add
iret
or
dec
add
jo
insb
sub
add
leave
add
mov
cmp
flds
xchg
lea
popa
cmp
nop
push
dec
nop
push
nop
out
inc
test
outsb
push
ret
pop
ds
in
add
push
jno
fs
add
lock
mov
add
or
add
add
faddl
mov
pop
adc
sbb
xor
add
pop
add
or
nop
pop
add
add
mov
addl
nop
xor
xchg
nop
lds
sbb
add
and
mov
test
add
add
sub
inc
fistps
lahf
mov
add
add
cvtps2pd
inc
add
xchg
test
cmc
cmp
nop
push
notl
cld
mov
add
xchg
movsb
ds
sahf
and
dec
call
add
lods
inc
add
nop
xor
nop
pop
add
adc
cmp
nop
and
ret
fildll
arpl
add
dec
nop
cmp
into
outsb
cli
cld
cs
nop
mov
and
daa
cmp
jno
sub
or
or
pop
stos
mov
add
jmp
jle
ss
int
or
adc
jnp
lods
push
nop
fs
add
sti
mov
add
in
cmp
imul
in
add
lock
add
insl
push
add
dec
call
add
mov
xor
or
jb,pn
push
add
add
repz
es
mov
xchg
nop
ret
lds
addr16
sub
or
or
repnz
pop
nop
sbb
aam
sbb
sbb
mov
xchg
pop
sub
push
test
int3
nop
imul
mov
outsb
mov
clc
mov
nop
inc
add
lds
mov
int3
add
dec
nop
push
add
cmp
test
push
clc
lret
pop
imul
out
inc
add
inc
add
dec
add
dec
cli
add
push
add
out
dec
nop
lods
push
nop
in
fcoms
jmp
pop
shlb
in
push
lcall
and
add
subb
inc
or
sub
divl
push
inc
add
xlat
add
push
jge
pop
add
add
add
in
mov
jmp
nop
jl
repz
jg
add
scas
arpl
nop
and
rcrl
sub
add
xchg
shl
sbb
dec
sbb
xchg
add
pop
mov
mov
add
push
cmp
lock
add
cli
out
sbb
mov
lods
test
add
add
pop
stos
cmp
dec
add
nop
mov
nop
cli
sbb
mov
and
add
add
mov
dec
add
cmc
mov
jge
xchg
nop
bound
push
std
jne
mov
notl
or
xchg
inc
add
cmp
mov
sub
mov
add
loop
rolb
add
pop
add
cmpsb
mov
dec
add
push
fildll
hlt
inc
add
add
xchg
push
call
clc
and
jnp
add
push
out
fs
add
pop
nop
xor
fadds
sub
movsb
xchg
nop
shrl
add
enter
dec
nop
mov
nop
imul
push
nop
push
add
xor
pop
xor
add
add
or
add
add
nop
push
add
push
dec
fistps
add
mov
loop
sbb
mov
jge
nop
xor
loopne
add
fimuls
add
add
add
lahf
ret
fcomip
pop
add
jbe
cld
dec
test
add
add
lea
mov
in
shlb
push
nop
jle
adc
fcoml
inc
jge
push
ss
mov
mov
aas
pop
js
push
data16
popa
mov
mov
lods
sub
add
sub
nop
cmp
bound
jg
cmp
sbb
mov
sub
idivb
nop
lods
fcoml
rcll
addb
std
mov
shrb
add
js
ss
std
xchg
add
add
pop
add
push
ds
hlt
cs
lods
mov
or
fcoml
movsl
lret
jge
add
cmc
jb
popa
cmp
add
add
lods
ljmp
lcall
and
fisttps
or
inc
nop
sbb
pop
nop
xchg
test
add
icebp
cmp
test
sub
rclb
aas
sbb
loopne
fstl
xor
add
jp
mov
push
nop
in
repz
mov
addb
notl
push
loop
mov
cmp
ljmp
ljmp
add
inc
add
add
add
push
nop
insl
lea
stc
stos
push
xchg
add
inc
pop
push
cmp
out
hlt
sbb
add
mov
lret
add
xchg
pop
or
hlt
mov
jns
inc
add
inc
add
out
cmp
stos
jo
sbb
lods
repz
push
fistpl
pop
cmpsb
jae
or
and
aam
mov
mov
in
xchg
dec
add
lcall
fcmovb
jecxz
add
ja
inc
add
rorl
jb
add
cld
cmp
push
jnp
push
add
je
out
adc
lods
into
ret
pusha
pop
fs
lea
add
sti
les
adc
gs
add
sbb
adc
aas
cmc
xchg
nop
bound
xchg
test
pop
faddl
sti
filds
add
xchg
add
xor
mov
add
pop
fiadds
cwtl
nop
jbe
nop
jle
mov
jp
cmp
lock
jnp
xor
add
add
mov
scas
pop
add
add
push
add
xorl
roll
jbe
add
pop
add
add
ret
push
roll
jb
nop
mov
or
jnp
add
iret
mov
in
popf
nop
jnp
in
popf
nop
mov
jo
sti
fadds
aam
insb
leave
add
enter
mov
clc
pusha
cmp
mov
add
adc
adcl
std
sti
dec
insl
mov
add
mov
or
jno
add
out
punpckhbw
add
push
mov
nop
nop
add
mov
leave
add
add
jb
aam
add
js
add
push
xor
push
mov
stos
in
out
aam
sahf
ret
mov
lods
sbb
movsb
out
add
in
cmp
xor
cltd
add
xchg
add
or
xor
cmp
add
mov
scas
ljmp
icebp
jp
ret
mov
fadds
cld
popa
fstl
sub
add
xor
push
js
add
mov
xor
mov
decl
push
add
adc
or
push
mov
nop
sub
push
add
pop
sarl
or
out
outsb
jmp
sbb
pop
aaa
jno
add
nop
mov
je
push
ret
nop
push
and
add
leave
add
inc
and
addl
cld
lret
cwtl
add
decl
cmp
dec
cwtl
nop
pop
add
inc
and
es
add
sub
mov
add
daa
fstl
inc
nop
mov
or
cltd
nop
cli
pop
inc
in
and
fwait
jmp
sahf
cld
pop
test
ljmp
jns
ret
add
pop
pop
mov
add
repz
repz
add
xor
call
nop
and
stos
adcl
xor
jg
mov
faddl
dec
nop
pop
outsl
mov
jge
add
sub
inc
mov
push
add
add
add
test
push
add
in
inc
add
xchg
xchg
insb
jno
nop
xchg
mulb
nop
out
mov
addr16
or
add
adc
lds
cmp
push
insl
lods
push
add
and
add
adc
cmp
sbb
push
nop
dec
add
push
nop
inc
add
fcoms
add
and
scas
data16
pop
add
add
sbb
jp
stos
jmp
popf
nop
scas
test
inc
mov
add
nop
addr16
xorb
nop
aam
mov
add
add
bound
nop
arpl
andb
imul
nop
fldl
jnp
mov
out
repnz
sub
cmp
leave
add
int3
nop
dec
add
add
testb
daa
sbb
add
mov
or
test
mov
add
add
nop
cmp
inc
add
pop
add
loope
je
data16
clc
imul
lahf
and
add
add
nop
sbb
sbb
add
sahf
push
add
add
xlat
sahf
mov
andl
push
xchg
cmp
int3
add
jge
mov
xchg
fiaddl
xlat
jne
add
fcmovu
lea
je
in
or
or
jmp
mov
ret
cmpb
jmp
push
add
push
add
push
or
sbb
in
adc
xchg
mov
mov
ljmp
add
inc
rclb
add
mov
nop
cwtl
add
add
nop
jmp
pop
popf
add
pop
pop
nop
test
jl
adc
cmp
lea
stos
xchg
add
mov
jne
lea
mov
inc
add
lock
sub
popa
das
and
add
cli
fsts
add
nop
addb
test
xchg
add
add
repz
test
add
flds
ret
loopne
fucomip
adc
inc
nop
mov
push
sub
inc
nop
sbb
nop
jb
nop
dec
sarb
mov
add
pop
mov
lods
pop
jle
add
mov
loopne
popf
add
call
add
adc
call
aas
ss
daa
loop
add
sbb
jle
add
js
test
scas
push
add
jno
push
rcll
xchg
nop
xlat
jnp
sub
lock
iret
into
loop
add
or
nop
addr16
jo
addr16
add
cmp
cmpsl
xchg
nop
mov
negb
test
nop
nop
dec
add
mov
fs
inc
nop
movsb
movsb
faddl
test
jp
add
mov
adcb
nop
xor
mov
xchg
jle
sbb
add
lock
insb
mov
fldl
ja
mov
xor
mov
fcmovnb
loopne
nop
sub
xorb
add
das
pop
add
add
outsb
add
loop
sbb
sub
insb
pop
nop
les
jne
add
push
inc
scas
in
xchg
nop
dec
fidivs
std
popa
inc
jb
jno
pusha
inc
test
and
fwait
cmc
nop
add
lret
dec
lds
sub
add
mov
add
lods
mov
mov
je
nop
mov
sbbl
cmovnp
test
outsb
je
mov
cli
popa
aam
push
sub
add
add
jmp
xor
lods
push
test
adc
add
add
cmp
xlat
hlt
mov
add
mov
sbb
imul
leave
nop
ret
add
add
cli
mov
inc
inc
add
out
ds
idivb
jp
lcall
dec
cwtl
nop
roll
add
add
and
cmp
lea
pop
add
call
inc
add
jl
gs
push
nop
pop
add
add
lods
mov
pop
nop
rolb
nop
add
add
jle
jg
fsubp
fidivrl
xor
add
cmp
add
daa
sti
push
nop
adc
nop
or
aad
mov
add
push
jge
add
mov
pop
xor
nop
xchg
add
add
add
pop
nop
sbb
lock
cmpsb
cld
mov
nop
add
and
add
hlt
insb
mov
mov
and
iret
lea
mov
xor
inc
scas
mov
add
add
add
xchg
movl
mov
sbb
xor
nop
push
or
add
xor
xchg
add
push
lds
adcb
inc
dec
add
push
stos
push
repz
nop
mov
fadds
xlat
jmp
rcll
xchg
iret
or
jmp
loop
out
xchg
fidivrs
roll
jno
add
mov
mov
sahf
flds
lcall
inc
sbb
mov
adc
jbe
jae
movsb
push
xchg
inc
pop
add
add
add
xor
add
add
add
dec
mov
hlt
rclb
mov
call
add
pop
add
cli
loope
test
mov
jg
add
pop
add
xor
ljmp
flds
lcall
test
xor
adc
add
nop
dec
add
sub
scas
xchg
shlb
add
es
sbb
and
imul
mov
jge
or
icebp
or
nop
xor
push
cmp
dec
aas
cmp
lea
lret
cmpsl
push
add
add
pop
inc
pushf
add
aaa
ja
mov
add
mov
pop
add
sbb
mov
xchg
fwait
insl
popa
push
fbstp
rcr
add
or
jnp
jl
add
outsl
mov
cmpsb
sub
add
arpl
mov
add
into
je
mov
jae
add
add
pop
jbe
lret
rorb
aam
dec
adc
pop
add
mov
out
add
test
movsl
or
mov
add
int3
nop
roll
gs
nop
cmc
adcl
rcrb
insb
sbb
pop
sub
add
imul
xchg
imul
add
push
add
loopne
pop
cld
pop
cld
bound
lods
push
cli
dec
push
add
pop
add
enter
stos
es
gs
ss
repnz
imul
in
iret
inc
nop
enter
push
dec
add
add
pop
mov
add
aad
outsl
and
add
decb
mov
xorl
add
inc
xchg
adc
fcoml
sahf
loope
fcmovbe
cmc
ret
dec
cmc
int3
add
faddl
ljmp
icebp
mov
rolb
rclw
jo
nop
nop
cmpl
sub
fldl
xchg
jp
ljmp
out
fs
push
xor
mov
push
sub
add
addr16
or
js
push
inc
fadds
insl
ds
push
loop
mov
nop
fwait
daa
rolb
pop
mov
rcll
nop
jno
nop
mov
lods
xchg
add
shlb
add
out
sbb
jmp
add
test
pop
nop
addb
sahf
mov
xlat
push
rolb
pop
stos
jg
add
ret
idiv
roll
add
mov
dec
add
nop
xchg
mov
push
es
add
add
sub
push
add
rclb
mov
in
jp
add
push
add
xchg
in
ficoms
jo
pop
add
add
xor
jp
mov
mov
add
gs
ret
adc
aas
cwtl
nop
or
xchg
nop
in
mov
enter
sbb
add
xchg
add
add
outsl
jp
add
and
leave
nop
icebp
pop
nop
repnz
movsb
fcoms
adc
arpl
jl
add
add
flds
add
outsl
addl
icebp
insb
pop
inc
fs
jmp
mov
stc
cmp
push
mov
nop
nop
add
jl
js
lods
or
pop
nop
xlat
add
addl
ss
add
loop
out
nop
push
in
xlat
int3
nop
repnz
adc
dec
nop
dec
add
add
stos
sbb
sub
test
popa
pop
cli
shl
push
test
push
adc
mov
jge
add
lock
cmp
aas
inc
or
jo
pop
add
lods
xchg
xchg
rolb
pop
xchg
add
std
xor
imul
add
stos
popa
mov
jae
nop
flds
sbb
sub
loop
je
sarb
lahf
cmp
addl
pop
jge
aas
pop
nop
fs
nop
dec
add
pop
adc
insb
cs
add
test
out
cli
pushf
add
iret
mov
add
add
ljmp
add
jnp
cld
and
iret
jge
decl
pop
sti
xor
cmpsl
in
jecxz
sets
popf
nop
das
push
fwait
and
jbe
xor
popf
nop
popa
rep
mov
notl
div
stc
sbb
sti
flds
out
int3
add
add
movsl
ljmp
ror
in
pop
lcall
out
cmp
inc
nop
adc
jle
sub
lods
adc
xchg
adc
add
nop
push
xor
push
sbb
dec
dec
add
inc
add
adc
int3
add
std
sub
pop
add
xlat
xor
mov
stos
push
repz
ja
daa
jl
out
pop
nop
push
nop
cwtl
add
rolb
roll
nop
fs
nop
fs
inc
and
lds
movsl
clc
push
sub
cmpsb
in
sbb
add
nop
std
mov
add
gs
add
pop
iret
ficoml
inc
add
add
dec
xchg
jno
inc
aam
or
dec
add
nop
pop
mov
add
sub
das
cltd
add
jb
iret
sahf
adc
test
flds
lock
std
call
mov
nop
clc
test
add
cltd
nop
jecxz
mov
rclb
stos
jg
leave
nop
rolb
stos
xor
push
mov
ficomps
test
push
push
ja
icebp
mov
loop
sahf
xor
add
add
nop
mov
aas
push
jnp
dec
add
roll
inc
cltd
add
mov
add
iret
scas
or
cmpsb
jecxz
test
out
mov
dec
mov
in
roll
lcall
std
jbe
rclb
popa
lahf
and
sti
loopne
add
jle
mov
add
outsb
dec
xor
add
lea
dec
sbb
or
jmp
outsl
cmpsl
dec
add
rcll
add
mov
out
dec
bound
in
flds
outsl
dec
mov
nop
ljmp
add
inc
nop
and
nop
add
inc
add
jle
das
cmp
cld
lods
sbb
cmc
or
dec
add
test
add
imul
add
add
ljmp
test
mov
and
imul
and
mov
repz
jg
jbe
ret
and
in
inc
add
nop
test
pop
repz
mov
nop
fisubs
sub
add
push
nop
lds
mul
cmp
out
or
cwtl
nop
and
bound
push
or
inc
add
nop
cmp
dec
add
ret
add
jle
mov
lret
sub
xchg
add
imul
ret
and
mov
nop
lcall
loopne
add
push
nop
sbb
dec
mov
pop
jbe
or
leave
add
xchg
shlb
lods
test
dec
nop
bound
xor
nop
dec
inc
nop
cmp
xchg
add
lahf
cmpl
push
cld
test
lret
mov
out
add
add
in
push
or
and
cmp
adc
add
xlat
insl
inc
scas
adc
inc
nop
xorl
add
push
movsb
adcl
subl
lgs
push
add
xchg
movsb
pusha
xor
add
roll
outsb
push
fsts
adc
add
jmp
loope
add
sbb
div
xchg
add
and
fs
nop
mov
or
xchg
dec
add
mov
jbe
add
lahf
ja
pop
jecxz
pop
das
sub
mov
pop
add
clc
push
add
cli
aam
int3
add
data16
cmp
lcall
push
or
out
xor
std
dec
nop
cli
loope
add
add
int3
nop
adc
insb
push
xor
xchg
nop
std
rcll
ret
pop
add
bound
add
lret
cmp
add
inc
nop
fldl
jmp
adcb
xor
add
xchg
add
cmp
push
andl
add
lea
enter
ja
nop
push
add
pop
faddl
int3
nop
xchg
nop
pop
add
in
sub
adc
add
lods
xor
nop
daa
push
adc
push
sbb
out
insl
cmp
test
dec
add
xor
sbb
les
mov
mov
add
imul
add
pop
stos
xchg
add
add
inc
dec
nop
or
cmpl
fadds
push
nop
out
adc
fmulp
es
cltd
add
daa
mov
and
add
nop
icebp
outsl
ss
lock
into
or
mov
leave
nop
sub
mov
pop
nop
mov
lcall
es
xlat
sub
sub
nop
nop
cmp
rorb
dec
add
add
lods
out
inc
pop
dec
adc
add
add
cld
enter
dec
nop
sbb
mov
mov
jl
outsb
pop
rcll
push
nop
outsb
push
nop
xchg
or
pop
in
nop
jb
nop
push
add
xchg
fadds
or
pop
dec
push
nop
jge
dec
push
pop
cmpsl
sub
nop
loope
and
inc
nop
decl
adc
add
jnp
inc
add
mov
sbb
std
xorl
jg
nop
test
push
jp
sub
push
pop
cmp
add
or
jb
fs
out
add
add
insb
aaa
loopne
nop
cmp
nop
pop
add
add
nop
jmp
nop
push
rcl
add
xor
sub
adc
pop
nop
inc
add
xchg
or
xor
sbb
and
pop
nop
sbb
fadds
gs
dec
xchg
jne
add
add
pop
scas
mov
add
lcall
pushf
add
add
nop
orb
add
nop
aam
mulb
nop
addb
loope
add
call
lods
test
ret
mov
lea
dec
out
mov
leave
add
pop
add
roll
jbe
add
pop
add
and
cmc
dec
add
add
hlt
mov
test
cs
nop
js
cmp
adc
cli
or
lds
pop
cmp
nop
push
add
add
add
cmp
sub
loop
int
xchg
add
or
popa
out
fadds
mov
ljmp
cmp
add
mov
jae
lds
sbb
fadds
popf
add
adc
xor
cli
sbb
rcll
insl
aaa
repz
xor
cmpsb
je
sub
xchg
daa
in
push
push
je
add
mov
or
add
lock
popf
nop
xchg
scas
loope
add
adc
jns
sbb
mov
in
test
addl
and
jbe
and
es
add
push
int3
add
sbb
mov
adc
imul
data16
xor
add
mov
das
mov
ret
or
test
nop
clc
aam
jno
int3
add
push
pop
xchg
add
push
lret
mov
add
lret
xchg
add
mov
nop
mov
jns
mov
push
lret
fldl
adcl
es
scas
sahf
mov
pop
add
iret
adc
mov
cs
add
test
cmpsl
into
add
jp
inc
stos
xchg
ss
jl
mov
stc
push
cli
lea
stos
pop
add
fwait
mov
mov
outsl
int3
add
int
dec
ret
out
roll
dec
nop
cwtl
add
mov
ja
cmp
add
add
nop
cmpsb
push
nop
push
jl
add
adcl
rolb
xor
cwtl
nop
cmp
pop
cli
int
inc
xor
fiaddl
jb
nop
mov
mov
mov
outsb
mov
mov
lcall
fwait
cmpsb
or
mov
mov
and
mov
or
fisubl
in
mov
add
add
stos
les
pop
test
add
mov
faddl
inc
cltd
add
and
nop
mov
and
lods
out
hlt
ret
jns
xor
in
jp
jle
add
rolb
lea
push
mov
add
mov
mov
cmpsl
iret
xchg
mov
add
and
mov
jno
add
nop
pop
add
jmp
out
push
mov
jb
add
push
add
add
bound
jle
mov
pop
mov
add
sahf
addl
nop
xchg
add
add
nop
xchg
add
in
dec
nop
dec
add
add
xchg
or
cmp
bound
gs
enter
add
fsts
mov
add
test
addr16
ret
call
outsb
je
add
nop
out
nop
pop
incb
cmp
ja
lods
sub
cmp
add
nop
mov
jo
push
repnz
rolb
popf
add
mov
icebp
call
add
jns
nop
pushf
add
mov
adc
mov
mov
xor
inc
nop
adc
out
add
add
or
inc
mov
pop
nop
push
fcoms
aam
mov
nop
jl
pop
mov
xorl
add
movsl
adc
adc
addr16
nop
fidivrs
ss
add
add
xor
cld
and
sahf
sbb
adc
push
jb
adc
roll
ds
jecxz
mov
sbb
ljmp
ss
in
out
mov
dec
add
cld
or
push
inc
repz
add
mov
add
sbb
loope
xor
roll
lods
and
push
fisubs
notb
dec
push
insl
sbb
fcmovnu
add
cmp
add
mov
add
insb
outsb
movsl
push
add
leave
add
out
mov
cmpsl
or
rolb
adc
jmp
jno
nop
pop
or
add
psubusw
add
xchg
jne
ds
sub
add
xor
popf
add
add
lret
loopne
cmpsl
mov
pop
add
lock
add
push
add
cld
dec
test
call
xchg
add
jle
add
cmp
add
mov
inc
call
inc
add
and
nop
dec
add
jmp
mov
pop
cltd
add
mov
dec
add
push
pop
nop
addr16
idivl
enter
adcb
nop
scas
sbb
mov
and
out
stc
lock
rolb
stos
pop
mov
cltd
add
shrl
xchg
and
mov
fadds
add
shlb
add
lcall
add
jle
fs
jle
fldl
or
jns
add
fcoml
inc
push
add
roll
add
nop
mov
flds
mov
je
test
cmc
mov
sbb
rolb
lret
sarb
add
cmp
jmp
mov
outsb
enterw
nop
dec
jb
mov
xchg
cmp
rolb
and
add
pusha
push
mov
and
mov
add
ds
cmpsb
mov
add
out
test
xchg
or
lock
lcall
sbb
adc
pop
je
xchg
nop
loopnew
cs
add
lea
and
jns
xor
add
add
test
sub
cmc
daa
andb
lea
pop
pop
add
test
cmp
mov
loop
and
inc
push
sub
dec
add
adc
andl
pop
enter
std
popa
sti
ret
push
nop
into
in
rolb
xlat
xor
lret
mov
arpl
jae
fadds
xor
add
cmp
add
add
fs
mov
cmpsl
mov
movl
add
add
nop
in
test
xor
les
test
imul
inc
add
jg
pop
add
dec
add
orb
add
add
ds
sbb
dec
lock
dec
nop
and
fwait
data16
or
push
add
jno
add
add
add
nop
js
mov
mov
xor
outsb
sbb
ss
add
pushf
add
add
jle
and
add
nop
xchg
add
adc
addl
ds
nop
outsl
jo
and
test
mov
add
xchg
pushf
nop
push
add
repz
pop
add
xchg
cmpsb
in
ficoml
inc
add
adc
inc
nop
jmp
lcall
in
nop
fs
push
add
dec
add
push
sub
add
and
add
add
daa
pop
add
nop
lock
insl
xor
add
cmc
gs
nop
cmpsb
insb
outsl
jle
in
jno
testb
loop
outsl
rcll
scas
lds
sbb
mov
cwtl
add
cmp
cmp
add
lahf
pop
or
adcl
inc
add
cmp
add
daa
push
andb
mov
fidivrs
out
pushf
add
or
push
lahf
xchg
sbb
push
add
aas
stos
push
fadds
ret
daa
adc
jge
mov
mov
cld
sbb
inc
add
nop
and
dec
ja
push
add
aam
scas
mov
pop
movsb
jne
into
push
pushf
nop
lahf
inc
ret
pop
loop
mov
das
jae
dec
jo
jg
outsl
cmp
mov
add
xchg
roll
add
add
or
xchg
nop
lret
add
and
insb
dec
add
mov
mov
nop
fldl
cmpsl
adc
das
adc
test
add
roll
rclb
std
sbb
jnp
mov
add
add
into
call
mov
es
add
mulb
push
add
push
sub
nop
nop
sub
nop
lcall
in
scas
test
outsb
inc
stos
xchg
cmp
je
stc
or
push
cmpsb
ret
add
inc
pop
nop
cmp
add
add
add
int
sahf
push
mov
nop
imul
add
add
loop
rcll
jb
mov
aaa
jle
add
out
dec
nop
or
test
and
jmp
dec
sti
daa
int
push
add
jmp
daa
and
dec
nop
mov
mov
and
push
or
fstl
sub
adc
add
data16
loop
nop
adc
scas
enter
fwait
test
add
test
aad
adcl
ljmp
test
jmp
xlat
lock
es
add
xchg
mov
add
adcb
addl
addb
leave
add
nop
inc
add
jno
movsl
test
inc
add
pop
push
xchg
add
lock
mov
cli
addb
nop
xchg
andl
xchg
stos
xlat
das
sahf
fadds
je
dec
nop
mov
add
mov
mov
nop
xchg
push
nop
cmp
rorb
nop
mov
jmp
pop
in
dec
faddl
lret
jae
dec
add
imulb
add
nop
inc
sbb
add
sbb
push
insb
mov
mov
add
jno
add
adc
mov
cmp
or
lahf
sbb
inc
in
fidivrs
add
dec
das
pop
nop
fs
flds
jmp
inc
pop
nop
outsb
jl
addr16
mov
pop
add
adc
mov
dec
nop
fs
sub
dec
into
push
add
add
aaa
push
add
loop
sbb
iret
jb
scas
jne
add
add
push
add
nop
jno
nop
dec
jns
sti
out
stc
adcb
inc
add
nop
add
scas
cmp
push
adc
and
sbb
sbb
popa
sbb
iret
mov
shlb
movsb
and
clc
fisttps
sub
not
jb
add
add
add
repz
or
add
std
and
loopne
pop
add
or
xor
push
and
sbb
daa
adc
add
push
jmp
inc
outsb
out
add
das
jae
and
add
sub
add
pop
add
or
rcll
nop
bound
ds
add
cmp
insl
mov
pop
add
sub
mov
pop
cmpsl
clc
ljmp
push
cli
stc
mov
nop
cmp
cltd
add
cmpsl
jge
cmpsl
or
push
ss
mov
xor
lds
add
ja
add
push
hlt
lcall
data16
es
xor
add
fsts
add
and
iret
das
into
and
pushf
add
nop
jo
aas
cmp
jns
mov
into
dec
add
out
test
mov
or
cld
pop
ss
xchg
sbb
xchg
add
das
pop
pop
add
xor
jp
add
sub
nop
push
add
xchg
nop
flds
push
add
stos
mov
add
out
jno
adc
and
mov
push
or
mov
cld
xchg
sub
or
cmp
mov
adc
aas
jne
testl
and
dec
add
in
popf
nop
in
cmp
popf
add
lea
mov
add
hlt
and
jge
call
ss
stos
scas
gs
add
std
xor
push
add
or
movsb
adc
mov
gs
lret
xchg
inc
nop
cltd
add
nop
ds
mov
add
cmp
nop
mov
add
mov
movsb
adc
sbb
outsb
cs
mov
jbe
outsl
imul
or
add
xchg
pop
nop
in
xor
repnz
add
sti
ljmp
add
out
hlt
jo
add
inc
nop
sub
mov
mov
sbb
outsl
testb
mov
mulb
cmp
xchg
sub
hlt
js
add
and
dec
mov
hlt
roll
add
adc
dec
nop
daa
or
mov
push
dec
pushf
nop
push
fcmove
jmp
imul
into
or
add
pop
add
in
cmp
add
mov
cmove
xor
les
test
pop
std
cmp
add
mov
add
mov
stos
lret
add
cmp
jecxz
push
jne
add
inc
add
xor
add
inc
add
lock
sbb
jge
xor
cwtl
nop
addl
inc
add
out
add
mov
dec
js
nop
rolb
add
loope
clc
popf
add
cmp
nop
subl
stos
mov
pusha
and
add
roll
jns
nop
ret
outsl
jae
mov
rclb
xor
pop
nop
sub
add
pop
pop
mov
scas
xchg
add
pop
aad
in
sbb
cmp
add
add
sub
push
lds
add
aaa
clc
out
pop
nop
addb
xor
cmp
jl
std
lds
sbb
mov
aas
pop
mov
nop
mov
dec
pushf
nop
xor
sbb
cmp
popf
add
dec
xlat
push
hlt
aaa
dec
daa
mov
ret
inc
add
sbb
mov
inc
jnp
bound
add
inc
add
add
add
addl
add
mov
aas
cltd
add
add
add
cmp
cltd
add
iret
lock
add
add
sub
add
mov
and
jmp
adc
inc
nop
xchg
out
mov
in
in
or
add
add
call
rolb
xchg
add
mov
stos
test
inc
nop
push
add
sbb
add
popf
add
mov
in
andb
orb
push
add
scas
jns
nop
pusha
iret
out
std
sti
pop
inc
add
arpl
inc
adc
push
in
add
aam
push
or
xor
inc
add
inc
nop
jmp
nop
adc
andb
mov
js,pn
add
fcoml
xchg
sbb
rolw
add
add
nop
in
xchg
lahf
or
or
pop
mov
cmp
aad
mov
add
inc
add
out
sbb
test
mov
add
push
add
push
dec
nop
repnz
pop
add
and
push
add
inc
xchg
add
mov
add
pop
add
xchg
lcall
test
or
mov
add
cmp
sti
pop
push
lods
arpl
add
add
nop
jnp
insb
push
add
sahf
push
lcall
and
add
lock
or
leave
add
shlb
imul
mov
cmpsl
xor
mov
daa
cmp
ret
jg
lods
sub
in
icebp
ja
adc
add
lds
sub
push
nop
aad
xchg
jl
cmp
or
sbbl
and
lcall
add
mov
xor
movsl
lock
add
dec
add
sub
pop
adc
and
add
fsts
adc
fldl
push
push
cmp
xchg
nop
jmp
mov
mov
movsb
or
push
cwtl
add
sbb
mov
test
add
mov
sbb
enter
test
aad
ret
push
dec
add
mov
movsb
mov
ret
stc
dec
nop
int3
add
mov
add
loopne
xchg
add
push
fcmovnbe
rcll
xor
stos
test
add
js
and
add
add
pop
nop
xor
dec
add
aaa
dec
pop
test
fiaddl
aaa
stos
sub
nop
sbb
cmpsl
pop
add
add
roll
ds
mov
and
mov
pop
cld
out
jno
nop
mov
jg
adcb
js
int
sbb
je
nop
leave
nop
pusha
lods
repnz
dec
loopne
nop
adc
push
add
fcmovbe
add
sbb
jbe
push
ret
cltd
add
stc
pop
nop
out
jmp
add
addb
jl
cmpsl
mov
add
ds
lods
sahf
push
add
and
or
or
xlat
add
repnz
xor
imul
add
fadds
loopne
or
sub
add
add
int
pop
nop
pushf
add
fdivrp
fcmovnb
sub
add
xchg
lahf
lret
nop
insl
das
in
testl
lea
ret
sahf
divb
or
xlat
ret
popa
hlt
stos
in
xor
xchg
nop
enter
dec
ljmp
and
imul
xchg
nop
push
push
push
les
aam
jne
aad
and
aam
push
in
loope
or
add
push
jo
stos
sahf
pusha
or
push
mov
addw
jp
dec
mov
mov
or
je
and
testb
or
nop
push
dec
arpl
add
roll
fldl
sub
add
add
es
jne
or
pop
nop
in
clc
test
add
mov
sbb
add
or
mov
sub
addb
nop
aas
add
jno
jno
fildl
add
rolb
inc
popa
jp
nop
and
lods
adc
addl
jge
add
roll
add
adc
orb
adc
jg
nop
aas
xchg
sub
mov
into
in
aam
mov
xchg
add
repnz
add
into
push
nop
repnz
inc
nop
cmpsb
inc
and
adc
mov
and
nop
xchg
loopne
cmp
call
add
mov
cmp
push
add
inc
mov
push
dec
or
xor
xchg
push
cltd
add
add
mov
adcb
or
xor
fists
ret
rclb
movsl
call
xchg
add
add
cmp
nop
push
xor
add
xchg
add
mov
nop
sbb
nop
cmpb
dec
dec
jg
cmpsl
mov
adc
jecxz
add
push
add
push
nop
or
xor
nop
inc
jo
push
out
es
add
nop
xor
cs
outsl
subl
mov
add
nop
mov
es
movsb
test
pusha
flds
fs
mov
flds
clc
push
add
stc
in
sbb
in
mov
mov
jmp
fcoml
jae
inc
int3
nop
xchg
add
add
xor
psrld
paddd
cld
push
add
vmwrite
mov
js
subb
mov
push
decl
sbb
add
sbb
jbe
inc
inc
rorl
jge
nop
inc
add
xchg
add
add
in
xor
bound
lock
nop
mov
nop
xor
or
mov
cmpsb
push
jmp
jmp
add
add
add
js
das
pop
fucomip
and
mov
mov
pop
mov
out
xchg
call
nop
popa
sub
ds
pop
add
sub
test
jecxz
sub
push
push
mov
adc
in
add
sbb
pop
nop
cs
nop
add
add
call
pusha
mov
inc
in
adc
nop
cwtl
add
adc
adc
je
or
ret
jne
jne
sahf
in
jecxz
out
jle
add
enter
add
sbb
shll
mov
daa
in
sub
outsl
push
pop
add
cmc
lds
dec
nop
dec
jo
cmpsl
mov
ret
push
mov
xchg
xor
ds
ret
mov
add
lea
sub
add
cld
mov
add
bound
jne
xchg
xchg
add
stos
pop
aam
lret
stos
gs
dec
add
cmp
clc
jg
jbe
push
pop
nop
out
inc
nop
jae
and
add
add
nop
leave
add
test
add
nop
leave
add
add
cmp
add
push
cmc
mov
add
xor
cli
sahf
stos
add
jb
in
xchg
nop
lret
and
mov
bound
lea
out
outsl
js
mov
nop
in
jge
and
ds
nop
add
lret
sbb
mov
xor
mov
add
int
loopne
add
popf
add
sti
jge
ret
add
mov
rclb
inc
xor
mov
call
testb
iret
push
sub
pop
add
sti
in
sub
xchg
or
lea
xlat
leave
add
sbb
and
pop
nop
add
nop
pop
add
mov
add
daa
inc
or
mov
or
dec
inc
add
jecxz
mov
pop
jge
mov
pop
add
add
add
stc
ror
jbe
and
pop
std
div
movsb
mov
aam
xchg
add
repnz
fimull
push
add
scas
imul
out
popa
adc
jnp
rolb
out
add
fs
nop
icebp
inc
nop
sbb
dec
add
loop
sahf
int3
add
sbb
nop
in
sahf
movsb
adc
dec
add
aas
dec
add
stc
ljmp
aas
xchg
and
xrelease
mov
call
dec
add
fists
cmp
xchg
add
add
rcll
xchg
push
roll
fcoml
imulb
mov
add
mov
lds
aaa
cmp
nop
ret
flds
sub
mov
repnz
add
add
in
into
sahf
aas
or
or
add
nop
xchg
add
add
xchg
hlt
mov
pop
nop
jbe
fbstp
mov
add
add
xor
movsl
in
inc
nop
push
add
scas
les
into
pop
add
outsl
jns
lods
mov
adc
out
sbb
push
fwait
aad
int
push
sub
mov
mov
jae
lods
loop
add
ret
icebp
inc
repnz
dec
jo
add
add
mov
jge
sub
mov
pop
adc
jmp
add
cmpsb
fwait
xchg
in
add
add
xchg
mov
add
faddl
push
lret
fadds
or
inc
nop
pop
insb
outsl
sbb
and
pop
add
xor
aam
jns
incl
nop
mov
dec
add
cmpsl
adc
outsl
les
inc
add
add
