push
dec
jnp
prefetch
sbb
pop
inc
add
add
jge
pop
adc
popa
push
sub
setb
cmp
pop
bound
loop
sbb
arpl
scas
sahf
aam
mov
inc
cmc
std
test
push
gs
jecxz
arpl
or
ss
and
and
inc
jno
sbb
push
add
add
or
add
xchg
pop
xor
inc
push
cmp
mov
je
cmp
add
inc
push
adc
jecxz
fs
into
mov
lea
cmp
and
pop
sbb
in
or
xchg
push
inc
icebp
push
out
add
ss
imul
dec
loope
sbb
adc
iret
addb
mov
sub
jecxz
xor
lea
xor
add
fwait
push
ret
dec
dec
cmp
andb
inc
pop
adc
fsubr
add
push
in
popf
cmp
inc
or
aam
or
cmp
gs
xor
push
je
das
loop
inc
push
and
add
pop
outsb
sbb
test
xor
scas
or
scas
sbb
dec
aam
subl
xor
mov
mov
int
add
aam
popa
sbb
mov
insl
shl
sti
bound
xchg
adc
loopne
add
cmp
es
mov
push
repnz
ret
mov
inc
inc
decb
xchg
dec
push
inc
fnstcw
mov
xor
cmpsl
adc
das
mov
push
push
fstps
bound
xor
dec
add
js
inc
adc
adc
call
mov
jb
mulb
mov
xchg
stos
and
add
lahf
sbb
lret
mov
mov
in
and
xor
inc
adc
and
jmp
inc
or
in
inc
jmp
or
mov
xor
test
in
js
push
inc
je
add
mov
lea
mov
int
push
rol
orl
jo
inc
out
jg
add
je
test
jns
sbb
sbb
jns
push
fwait
imul
fsubl
int3
adc
xor
cmp
mov
nop
imul
aaa
aas
leave
ss
sbb
cmova
pop
lahf
or
push
mov
insl
or
arpl
in
stc
xor
add
and
popa
movb
es
ljmp
inc
roll
sti
inc
mov
lock
inc
lea
mov
stos
out
mov
aas
push
lret
adc
xor
cld
les
add
pop
in
xchg
int3
xchg
aad
mov
xor
push
orb
out
and
insl
test
add
cmp
and
cmpsb
inc
mov
jae
popa
sbb
dec
stc
hlt
inc
pop
cmp
aad
push
inc
and
inc
or
mov
inc
insl
loopne
mov
movsb
xchg
jno
sbb
dec
xadd
inc
sub
pushf
test
inc
iret
mov
xchg
aas
test
inc
sbb
push
inc
jge
xor
aad
loop
cmp
mov
xchg
inc
or
adc
arpl
push
mov
sub
mov
or
inc
or
or
dec
subb
adc
daa
xchg
or
cwtl
insl
in
xor
andb
gs
xor
adc
mov
xor
sbb
loope
test
add
daa
add
pop
mov
cltd
or
xchg
clc
xor
popa
sub
lret
pop
and
or
or
loope
adc
push
or
out
mov
mov
inc
mov
add
je
mov
es
sub
lret
loopne
test
sub
add
mov
and
movsl
pusha
shll
or
inc
test
test
addr16
out
mov
mov
inc
add
xchg
int
push
fbld
or
cmc
inc
adc
out
mov
leave
push
adc
popf
or
xor
jle
lea
adc
ja
movsb
xor
push
idivl
mov
and
hlt
shr
cmpsl
popf
lock
inc
xor
sarl
or
jg
inc
lods
mov
sub
rolb
xchg
jmp
push
sbb
and
rclb
inc
adc
popaw
jg
ds
add
push
ret
pop
shrb
les
orl
and
fmull
std
and
sbb
jns
fidivs
cmc
sbb
sbb
orl
dec
mov
popl
or
mov
mov
push
add
in
in
test
pop
fstl
mov
clc
ficompl
and
rorl
pushf
shll
js
pop
mov
test
xlat
or
daa
loop
jecxz
and
jle
xlat
rclb
push
cmpl
mov
shll
mov
std
aam
punpckhwd
mov
xchg
out
imul
imul
xchg
daa
xor
dec
or
xor
mov
push
test
push
jecxz
adc
inc
or
mov
aaa
icebp
adc
cmp
xchg
jne
test
es
add
and
dec
fsubl
cld
add
dec
push
inc
sub
lcall
clc
sbb
cmp
jmp
xchg
add
sbb
xor
xchg
sub
sbb
dec
imul
sub
dec
mov
jae
nop
add
sbbb
pop
in
mov
sbb
outsl
sub
pushf
cli
sbb
push
dec
cmp
xchg
movsl
aam
mov
arpl
push
mov
pop
testl
jg
cli
inc
adc
adc
and
cmpl
add
shll
ljmp
dec
cmpsl
adc
out
and
fcmovnbe
add
not
or
mov
cmc
add
xor
xor
in
out
mov
mov
fcmovbe
mov
lods
cwtl
lock
add
sti
cmovl
inc
dec
in
popa
cmpsl
push
push
or
mov
xor
push
mov
and
cmc
leave
loope
loopne
imul
push
sub
enter
test
and
ss
jmp
insb
pop
mov
loop
push
adc
xor
xor
arpl
adc
mov
nop
es
adc
movsl
arpl
pop
fmuls
mov
rcll
dec
mov
out
xorl
inc
jno
pop
popa
inc
and
test
add
push
cmp
xchg
pop
rorl
aaa
dec
popf
clc
jno
fidivs
push
and
cmpsl
sub
rolb
mov
mov
es
mov
push
push
mov
mov
add
mov
sbb
add
mov
pop
pop
push
push
lods
mov
shlb
pop
xadd
pop
sti
sahf
jo
cmovae
js
stc
fs
testl
in
hlt
repz
leave
pop
lret
lock
sbb
lea
xor
push
dec
gs
adc
cmp
dec
cmp
adc
arpl
sbb
lods
movsb
andb
lcall
scas
out
nop
pusha
inc
or
xor
or
sub
sbb
jp
mov
jne
int
je
pop
negl
aas
pusha
out
xchg
xor
or
insl
into
xchg
mov
jecxz
push
cld
push
pop
in
aad
and
adc
or
mov
xchg
cmc
adc
pop
test
mov
mov
out
aad
pop
sub
arpl
jmp
fstpt
leave
sbb
mov
sar
push
data16
addr16
dec
les
cmc
fdiv
lea
pop
ss
xlat
cmp
out
enter
push
mov
clc
xchg
xor
push
lret
mov
xor
enter
pop
test
insl
sbb
push
sbb
mov
xor
les
dec
sarl
add
adc
inc
add
roll
jge
fs
addl
xchg
fidivrs
xor
nop
push
mov
and
lret
or
add
dec
dec
dec
movsl
sub
notb
dec
sbb
adc
and
sub
pusha
or
mov
test
adc
movsl
inc
pop
cli
ror
andb
outsl
out
dec
xor
ss
shll
or
mov
mov
push
pop
inc
mov
subw
insl
push
popa
aas
sub
cmp
mov
jp
ret
fimuls
inc
insl
mov
lcall
mov
cmp
subb
repnz
cmpsl
push
int
jecxz
dec
clc
iret
stc
mov
mov
push
add
cmpb
mov
xchg
mov
push
inc
add
and
out
push
or
and
and
and
popa
sbb
popa
ja
xchg
or
cmp
or
sarl
adc
dec
into
nop
pushf
rclb
mov
mov
dec
mov
push
in
sbb
or
pop
pop
add
push
push
int3
xchg
gs
jg
cmp
jnp
adc
add
jmp
mov
cmp
dec
shl
out
jl
dec
add
adcb
jbe
xchg
mov
mov
mov
in
in
dec
adc
daa
rcrl
adc
loopne
pop
enter
das
loopne
jmp
pop
lret
js
push
pop
movsb
mov
mov
hlt
or
add
inc
bound
xchg
lods
dec
cmp
mov
cmpsl
idivl
outsl
push
test
or
icebp
sbb
jl
pop
pusha
mov
and
mov
or
mov
mov
out
ja
cwtl
jecxz
sub
xchg
jnp
imul
xor
and
nop
sub
jne
push
lret
iret
push
std
push
pop
xor
jmp
std
push
and
leave
and
jo
loope
jl
movsb
xor
jae
sbb
ret
sbb
adc
dec
push
test
mov
rolb
sub
sub
psraw
or
xor
ret
shll
jge
inc
add
or
and
fmull
xchg
push
lret
cwtl
add
pop
rol
push
pop
cmp
xchg
imul
cs
jns
aam
pop
mov
dec
add
jo
mov
inc
jo
or
and
lret
xchg
test
sub
popa
jle
jg
test
je
or
xchg
test
push
and
sub
jae
cmp
mov
mov
xchg
cmp
faddl
fsubrs
dec
clc
xor
out
arpl
mov
adc
cwtl
and
add
push
inc
jbe
arpl
and
or
cmp
mov
inc
iret
add
adc
mov
sub
sub
sti
sbb
cmp
addl
xor
std
stos
push
mov
pop
popa
addb
clc
jns
mov
xchg
mov
cmc
test
mov
jno
push
inc
mov
cmp
hlt
cmc
inc
adc
sarl
and
add
push
sbb
cmc
jb
push
xchg
jns
inc
add
xor
xor
cltd
or
mov
mov
xchg
gs
push
mov
cltd
xor
mov
cmp
push
lea
adcb
adc
adc
inc
sbb
inc
adc
dec
xchg
imul
push
sbb
subb
ss
lods
and
cmc
sbb
push
lods
xchg
jmp
jne
or
stc
cmpsl
les
or
add
or
fildl
jae
jne
mov
sbb
adc
repz
cmp
dec
scas
andb
push
sbb
xchg
cltd
inc
sub
daa
xchg
or
mov
sbb
pop
or
dec
fwait
clc
cltd
fidivs
and
jne
cmpb
xor
xchg
adc
add
out
mov
cmp
outsb
add
pop
int
decl
aam
sbb
pop
add
sub
add
xchg
cmpl
add
pop
or
mov
shll
dec
cltd
dec
pop
mov
gs
ficomps
popa
or
add
xchg
dec
add
pop
xchg
inc
and
xor
adc
or
les
xor
mov
fldenv
lret
leave
les
imul
mov
test
sarb
jecxz
mov
jmp
popa
shr
movsl
ss
pusha
orl
jecxz
mov
arpl
push
cld
add
mov
fisubrl
mov
xor
ds
add
or
sub
cmp
dec
int
pop
out
adc
lods
rorb
incl
cmp
imul
push
test
sub
loope
scas
add
add
das
fs
or
or
add
int
pop
stc
mov
sahf
adc
and
inc
mov
mov
sbb
inc
lcall
inc
mov
call
pop
jne
and
jno
inc
arpl
jne
shl
fidivs
xchg
or
cltd
sub
sub
imul
dec
leave
or
sbb
or
stc
jns
mov
mov
add
or
xchg
lahf
fistpll
push
dec
jb
adc
cmpsb
or
and
pop
mov
push
mov
cltd
cmp
mov
mov
loopne
adc
faddl
adcl
push
add
pop
jl
inc
jp
aam
inc
jne
dec
pop
test
mov
inc
cmp
test
lahf
sub
leave
jne
sub
loop
and
inc
in
pop
mov
adc
inc
lret
and
daa
stc
jge
in
movsl
lods
out
movsb
xchg
data16
das
mov
arpl
mov
js
push
push
sahf
and
sub
inc
lock
adc
test
sbb
mov
sub
or
xchg
sbb
in
sbb
call
or
test
adc
lds
and
xchg
sbb
insl
and
wrmsr
xchg
pop
test
cmc
sub
push
inc
lcall
xchg
lock
and
mov
sbb
xchg
iret
xchg
out
jnp
dec
std
xchg
outsl
xor
jns
mov
mov
adc
les
insl
add
repz
ss
jmp
movsl
add
aas
xchg
sbb
movb
and
xchg
test
nop
dec
dec
shlb
addl
in
divl
add
and
out
adc
ret
aad
notl
int3
or
adc
jno
push
adc
mov
push
inc
loopne
ss
add
shr
ss
loope
sbb
dec
mov
jl
xor
bound
adc
gs
sbb
in
push
jg
out
sbb
fistpll
inc
lock
sbb
add
adc
xchg
insb
pusha
jge
and
push
and
adc
mov
push
lods
pop
daa
sub
dec
pop
sbb
insb
mov
lock
pop
arpl
imul
xor
inc
aad
or
mov
sbb
pushf
test
out
cmp
mov
push
pop
and
mov
cmp
sbb
add
sbb
pushf
dec
push
ret
dec
stos
lds
faddl
jp
sbb
jmp
inc
or
daa
mov
inc
pop
mov
pop
add
incl
sub
or
stc
xchg
lds
sbbb
mov
roll
out
out
cwtl
and
inc
adc
xchg
mov
mov
cmp
loopne
adc
push
lret
mov
jb
cld
iret
fsts
shll
add
xor
movsl
outsl
and
stc
sysret
jnp
loop
push
cmp
jle
mov
xchg
add
push
sbbl
mov
test
lock
fbld
icebp
add
popf
or
ds
clc
mov
pop
push
adc
xchg
or
aam
popa
sbb
sbb
or
pop
loopne
bswap
lret
es
or
imul
or
jns
dec
xor
rorl
cmp
loopne
fimuls
xchg
xchg
cltd
xor
shl
push
xor
repnz
xchg
shll
sbb
push
cmp
dec
insb
jg
xchg
dec
mov
adc
popa
loopne
or
rol
mov
aad
add
daa
adc
mov
pusha
or
xor
sub
push
rcrl
pusha
xchg
mov
cmpsb
sbb
adcb
stc
add
ss
addb
into
cmp
lock
js
insb
pusha
cmpsl
mov
and
loope
xchg
jecxz
pop
jns
iret
call
push
fdivs
les
in
xchg
cmp
xor
jnp
push
push
lret
push
int3
daa
loopne
pop
mov
rcrl
xchg
pushf
inc
cwtl
jmp
sub
jg
add
mov
shl
dec
push
clc
cmp
imul
mov
loopne
xchg
jo
pop
rolb
xor
and
out
in
enter
adc
test
xor
sbb
out
dec
mov
filds
stos
in
daa
mov
lods
dec
adcb
test
ljmp
mov
ja
aam
dec
cwtl
cmp
les
jle
cmpsb
adc
jno
push
adc
aas
or
inc
jmp
and
mov
lret
push
or
dec
decl
jle
inc
daa
imul
push
jo
push
imul
inc
out
xchg
popf
outsb
push
test
loopne
sbb
stos
aaa
scas
clc
pushl
and
mov
push
xchg
dec
adc
pop
sbb
mov
push
push
dec
imul
imul
push
inc
cmpsl
fs
pop
movsb
insl
and
sahf
add
sbb
add
jno
cltd
add
arpl
inc
and
xor
imul
scas
jno
aas
cmp
xor
sub
cmp
push
jne
pop
stc
lea
in
nop
imul
pop
adc
mov
nop
dec
inc
stos
mov
fstps
push
out
dec
mov
xchg
jo
xchg
shr
or
mov
icebp
pop
sub
xor
xor
mov
or
out
enter
test
in
lods
mov
pop
inc
mov
out
orl
clc
mov
sbb
and
pop
jno
adcb
in
pop
aas
push
in
decl
cli
mov
lret
icebp
or
xchg
adc
dec
xchg
cltd
inc
mov
pop
cmpsl
mov
dec
push
jne
sub
imul
adc
add
adc
sarb
sbb
js
arpl
xchg
mov
enter
mov
push
xchg
sub
push
dec
inc
xor
pop
jge
repz
or
and
cwtl
sbb
and
jno
das
jo
inc
xchg
adc
adc
cmc
mov
rcl
inc
and
push
or
adc
mov
inc
push
adc
ret
or
jmp
rorl
dec
and
and
push
sbb
mov
add
add
leave
pop
and
sub
adc
add
sbb
add
lea
stos
inc
push
or
xchg
or
xor
ret
je
or
jg
fisubs
mov
mov
dec
push
mov
and
push
jno
xchg
orl
xchg
jecxz
cltd
inc
sbb
jecxz
arpl
gs
cs
mov
and
dec
pop
cmp
xchg
xchg
ja
jmp
lret
xchg
and
sbb
adc
loop
sub
fmull
jp
lea
pop
sbb
sbb
lcall
pop
test
adc
aas
jo
jmp
adc
xchg
cld
imul
and
jne
cwtl
lcall
sti
out
aaa
dec
adc
mov
xor
xor
or
test
imul
inc
push
adc
lds
dec
inc
mov
mov
fimull
leave
and
add
movsl
sbb
mov
addl
lds
inc
adc
inc
and
adc
rcrl
test
and
fstl
bound
in
pushf
sbb
push
mov
loope
subb
test
add
pmulhw
cmp
xchg
xor
mov
add
test
jae
adcb
or
and
imul
pop
mov
jno
adc
lcall
fmuls
lcall
push
ljmp
jb
aaa
mov
cmp
mov
push
xor
inc
mov
test
add
loope
sub
and
lods
cltd
aas
inc
nop
and
sbb
movsl
cmc
or
cmp
int
shlb
fcompl
fcomps
les
mov
aas
cmc
jbe
or
in
es
mov
cmc
adc
xchg
int
jae
iret
mov
adc
cmp
loope
cmp
and
adc
adc
jge
and
add
jb
pop
add
push
dec
jne
pop
movsl
adc
inc
inc
jnp
cmp
adc
add
pusha
lock
xor
inc
clc
mov
pop
jne
cmp
xor
and
jle
add
pop
shll
xchg
js
mov
mov
sub
ds
push
push
add
lret
push
sbb
in
std
xor
push
out
inc
incl
pop
in
decb
jno
orl
push
pop
dec
sub
jns
pop
data16
jl
lock
sub
ja
xchg
sub
adcb
and
rcrl
inc
or
bound
int
dec
in
dec
insb
sbb
mulb
movsl
and
gs
sbb
push
inc
lods
psubsw
inc
dec
push
inc
cmc
push
rorl
jmp
aaa
sahf
adc
inc
and
insl
push
dec
test
push
dec
dec
std
cmp
pop
jo
sbb
lds
fiaddl
jno
lods
adc
push
mov
and
mov
insb
popa
stos
inc
xchg
or
xchg
out
push
push
push
hlt
mov
and
cmpsb
jno
add
xchg
dec
push
test
push
pop
popa
push
andl
pop
cmp
pop
ljmp
sarb
lcall
adc
sbb
add
sahf
inc
sub
cmpsb
ret
adc
ja
xchg
lds
ret
pop
adc
and
cmp
dec
bound
rcrb
vmwrite
rcll
je
adc
cs
daa
mov
xchg
mov
pop
xchg
and
and
aad
lds
push
jp
test
call
xchg
jecxz
inc
test
adc
dec
inc
aam
loopne
or
shll
xchg
sub
pop
ret
xchg
jg
sub
and
gs
mov
mov
xchg
aam
mov
das
rcrl
lds
out
cmpsl
xor
aaa
xor
sub
int
insb
or
test
inc
fsts
and
add
cmpsb
andl
jo
aam
jb
iret
sub
jle
lods
xchg
mov
add
sub
pop
mov
push
mov
jmp
or
push
and
call
push
pusha
adc
and
popa
dec
inc
push
daa
pop
leave
lds
ret
adc
inc
xor
scas
ja
cmpb
pop
out
lea
adc
inc
dec
inc
inc
cvttps2pi
daa
enter
mov
sbb
lret
xor
or
push
es
inc
mov
movsl
test
mov
inc
pop
rorl
mov
cmpsb
cmp
arpl
add
mov
into
cmp
das
and
push
sti
dec
movsl
adc
sub
lahf
xchg
xor
xor
cmpsb
das
and
ss
fldt
sbb
sub
xorl
mov
and
les
or
pop
push
addl
movlhps
sahf
outsl
mov
mov
hlt
fdivs
int3
imul
cmpsl
jbe
lahf
mov
imul
xor
cmpsb
mov
out
out
push
dec
pop
shlb
lods
xor
gs
leave
push
je
xchg
or
test
push
lods
lock
inc
xor
mov
xchg
cmp
sub
loopne
fs
mov
cmp
int
jmp
mov
mov
mov
leave
outsl
jge
and
pusha
sub
in
cwtl
inc
xchg
pop
incl
clc
pusha
mov
enter
push
imul
xchg
shll
stos
fdiv
ja
aam
inc
pop
dec
pop
mov
leave
mov
imul
mov
xrelease
pop
and
pop
xlat
cvtps2pi
dec
or
adc
mov
jae
fsubrl
push
mov
sbb
push
into
adc
lahf
adc
push
icebp
adc
push
int3
js
and
mov
in
and
jno
lock
inc
dec
addl
inc
push
push
cltd
dec
and
push
std
adc
repnz
xor
xchg
push
xchg
inc
pop
jmp
xor
movsl
das
popf
addr16
punpcklbw
mov
jecxz
add
pusha
xchg
ja
dec
add
icebp
lretw
test
rorl
pop
lea
inc
add
push
inc
cmp
rol
dec
sub
popa
mov
pushf
xchg
adc
adc
pop
inc
sub
jb
or
sub
jge
insl
adc
clc
and
lds
pop
loopne
cmp
xor
in
push
adc
mov
sbb
mov
pop
mov
push
push
sarb
pop
add
sbb
push
mov
orl
inc
mov
push
cmpl
ds
mov
rclb
xor
sub
cltd
test
pop
cltd
sbb
pop
call
xor
fchs
cwtl
mov
jb
pop
ss
push
cld
xor
in
ljmp
les
imul
dec
push
xor
imul
inc
pushf
inc
orb
out
inc
push
popf
sub
enter
add
cmp
nop
loop
jno
push
pop
push
mov
and
arpl
aam
loopne
roll
sbb
rolb
lahf
lds
shl
loop
inc
cltd
lret
xor
shlb
call
bound
sbb
pop
sub
adc
test
and
sbb
add
jmp
dec
cltd
lret
fists
sbb
sar
fwait
arpl
and
jb
icebp
repz
scas
inc
icebp
dec
xor
pop
cmpsb
scas
dec
jae
push
mov
dec
sbb
pusha
push
arpl
inc
push
add
fs
xchg
push
jmp
xchg
add
stc
and
sti
mov
aas
out
popa
mov
and
jne
cmp
mov
and
or
inc
shll
add
add
in
cmp
outsl
sub
pushf
cmp
shl
and
dec
mov
or
shr
rol
add
shr
shl
add
rol
and
shr
mov
mov
and
and
xor
sub
call
stc
or
adc
add
fptan
into
lea
test
jne
in
fptan
into
repz
mov
addl
rcr
into
jecxz
int
repnz
das
sub
xor
cld
int
repnz
pop
nop
into
fptan
into
mov
add
mov
jns
xchg
int
repnz
es
into
mov
sbbl
fptan
into
cmpb
xor
repnz
xor
repnz
subb
xorl
push
inc
fptan
into
mov
stos
jb
sub
test
addl
mov
fptan
into
int
loopne
addl
repnz
pop
fnstcw
repnz
shlb
fptan
into
mov
hlt
test
add
mov
subl
pushf
fptan
into
add
addl
ljmp
jne
addl
lds
repnz
mov
xor
mov
andl
inc
shll
repnz
lea
lods
imul
pop
dec
mov
adcb
sub
nop
jle
addl
addl
adc
pop
push
stc
and
mov
jp
repz
test
fptan
into
mov
scas
std
ss
mov
lea
insl
je
add
int
push
arpl
inc
mov
out
fptan
into
mov
shr
push
int
repnz
int
out
addl
jb
adc
add
stos
andl
addl
sbbl
nop
add
roll
addl
mov
cmc
fptan
into
mov
or
repnz
mov
pushf
add
pop
lea
repz
add
fptan
mov
ret
pop
pop
fptan
into
andb
addl
mov
int
repnz
hlt
pushf
int
je
addl
into
sbb
addl
add
repnz
lea
out
dec
mov
repnz
mov
lret
sbb
or
orb
andl
out
xor
mov
xlat
sbb
or
mov
fptan
into
int
repnz
or
into
fptan
into
jecxz
or
fptan
into
andb
adcl
pushl
repnz
arpl
add
jo
mov
or
repnz
int
out
lds
adc
pop
fptan
into
push
mov
int
repnz
mov
xor
fnsave
arpl
fptan
into
int
ds
cmp
rep
inc
enter
int
repnz
mov
stos
jnp
int
repnz
andb
adcl
in
gs
inc
addl
adcl
pop
dec
jae
int
repnz
arpl
test
mov
and
add
int
repnz
mov
test
leave
in
shlb
fptan
into
mov
mov
mov
arpl
orl
loope
int
repnz
mov
or
push
int
repnz
hlt
sub
mov
cwtl
pop
shlb
add
hlt
sub
test
pop
add
int
repnz
scas
orb
andl
or
jecxz
or
fptan
into
sbb
addl
fptan
into
mov
call
xor
fptan
into
hlt
jmp
int
filds
cmpl
addb
mov
add
sub
in
sti
mov
pushf
andl
stos
int
repnz
ljmp
addl
xor
fptan
into
mov
xor
dec
mov
fptan
into
int
or
addl
adc
add
repnz
arpl
add
andb
mov
sub
cld
lea
int
repnz
out
jne
xchg
xor
sub
mov
inc
add
outsl
xor
arpl
push
sahf
into
stc
mov
int
clc
dec
addl
pop
inc
addl
mov
js
cmp
hlt
sub
int
repnz
subl
jl
adc
add
cmpb
arpl
mov
negb
int
repnz
xchg
in
xor
hlt
dec
int
repnz
cmpb
cmpl
pop
fst
into
nop
les
mov
andb
or
push
out
addl
xchg
xor
mov
pop
mov
repnz
hlt
sub
int
push
mov
or
repnz
mov
add
pop
xlat
aaa
xor
sub
addl
cs
jbe
addl
or
in
mov
shlb
add
jp
xchg
xor
cmpb
sub
fptan
into
mov
mov
pop
dec
inc
dec
fidivl
fptan
mov
shll
mov
arpl
inc
pop
sbb
repnz
int
repnz
arpl
add
jns
pop
int3
dec
les
int
repnz
xor
loop
arpl
nop
dec
mov
repnz
int
repnz
lods
leave
ret
test
or
repnz
arpl
andl
cmp
mov
push
and
fptan
into
int
aaa
addl
adc
add
repz
addl
xchg
mov
mov
int
repnz
sbb
jg
sbb
repnz
nop
orl
in
subl
or
into
outsl
sbbb
fwait
lods
icebp
in
int
repnz
mov
cmp
ret
pop
fstpl
adcl
cmpsb
push
fptan
into
lea
add
mov
jnp
int
adc
xor
mov
xor
in
add
addl
repnz
outsl
dec
mov
subl
aad
fptan
into
adcb
addl
insl
inc
xor
sbb
fptan
into
hlt
jl
mov
arpl
mov
add
les
inc
in
cmpl
test
mov
or
mov
int
fs
out
xor
rolb
cmpl
pop
into
stos
int
loop
addl
jecxz
or
fptan
mov
pop
test
add
repnz
pop
inc
out
loop
cs
add
sbb
int
repnz
adcl
fildl
into
int
repnz
or
fptan
into
mov
mulps
adc
add
mov
pop
pop
das
cmp
push
xor
sub
int
repnz
mov
add
lret
in
dec
outsb
int
repnz
aaa
pop
gs
lahf
out
int
repnz
xor
cmpsb
addl
xor
mov
jne
add
fptan
into
int
repnz
sub
popf
int
repnz
arpl
into
push
push
icebp
cmp
into
mov
xor
std
into
xor
arpl
mov
imul
or
test
addl
mov
int
add
popf
pop
ds
hlt
add
sbb
int
repnz
or
arpl
mov
xor
fptan
cmpb
xor
xor
icebp
add
jmp
addl
into
hlt
sub
mov
jno
and
int
repnz
mov
test
or
sbb
into
mov
or
mov
add
sub
mov
adc
adc
add
icebp
push
arpl
pop
arpl
addb
mov
xor
sbb
add
repz
andl
lds
add
addl
fisttpl
push
mov
inc
addb
andl
pop
rol
xor
fptan
into
jecxz
mov
jne
out
fcmove
fptan
into
orb
lahf
mov
pop
xor
repnz
mov
loopne
add
mov
into
int
repnz
outsl
mov
jle
hlt
mov
mov
and
into
leave
mov
addl
rolb
fiaddl
addl
shr
test
addl
and
fptan
into
mov
and
addl
mov
into
int
repnz
mov
pop
dec
imul
adc
ljmp
arpl
shlb
aam
les
xorb
adcl
mov
fptan
into
mov
ret
xor
repnz
stc
hlt
out
fptan
into
mov
xchg
add
xor
repnz
sub
add
addl
lret
add
xor
pop
xor
repnz
jmp
mov
mov
cmp
int
repnz
nop
xor
and
sbb
mov
sbbb
addl
ret
addl
xor
hlt
sub
int
daa
addl
and
int
repnz
mov
adc
add
repnz
jecxz
int
outsl
inc
addl
lea
int
ds
addl
xchg
das
xor
fptan
cmpb
addl
adc
add
repnz
lea
into
stos
mov
jno
repnz
xor
in
addl
xchg
js
sahf
sub
repnz
ljmp
andl
xor
repnz
fs
and
mov
insl
nop
jo
and
repnz
hlt
inc
int
stos
cmpsb
addl
in
xor
mov
inc
add
into
jmp
inc
arpl
subb
imul
repnz
adc
adc
add
fptan
into
cs
add
into
adc
int
repnz
gs
int
repnz
inc
push
arpl
gs
scas
fptan
into
jecxz
or
repnz
cmpb
lea
cmc
xor
mov
fptan
andb
lret
cmp
add
xor
fptan
into
hlt
int3
mov
mov
movsb
mov
adc
add
hlt
out
fptan
into
mov
sti
xor
int
repnz
shlb
hlt
stos
or
insl
jo
dec
xor
mov
or
int
repnz
mov
adc
xorb
xor
and
repnz
mov
faddp
les
int
repnz
int
test
aam
repnz
int
repnz
insb
sub
or
repnz
jmp
loope
push
lret
fptan
into
mov
mov
lret
push
adc
addl
and
addl
arpl
addl
fisttpll
fptan
into
sbb
addl
addl
loop
lds
sbbl
pop
into
repz
test
fptan
into
mov
mov
shrl
repnz
mov
int
sbb
inc
pushf
int
repnz
adcb
subl
into
hlt
icebp
test
out
or
lods
fists
fptan
into
mov
mov
repnz
sub
fptan
adcb
orl
xor
int
repnz
mov
movb
mov
repz
push
int
repnz
sub
addl
cmp
adc
ret
int
cmpsb
inc
addl
or
repnz
arpl
xchg
scas
rorl
int
repnz
mov
jl
mov
repnz
xor
mov
jecxz
lahf
addb
arpl
inc
jno
xor
repnz
movb
addl
out
mov
subl
int
sti
and
push
xor
cmp
fptan
into
xor
andl
push
cmpb
or
repnz
loop
xor
mov
int
repnz
subb
arpl
outsb
int
out
aad
jecxz
mov
mov
arpl
xchg
addl
outsl
xor
repnz
jmp
arpl
hlt
push
mov
repnz
xorb
cmpl
sub
int
repnz
adcb
repz
int
repnz
int
repnz
orb
cmpsb
arpl
sbb
fptan
into
mov
int
repnz
lcall
xor
fptan
into
jecxz
or
mov
dec
sub
dec
int
and
xchg
mov
and
int
repnz
mov
mov
fisttpl
xor
test
orb
addl
mov
nop
int
repnz
mov
pop
sub
pop
dec
aad
repnz
mov
inc
lock
hlt
inc
int
xchg
xchg
int
repnz
and
addl
or
arpl
xor
fptan
into
hlt
das
add
arpl
in
into
arpl
hlt
sub
mov
ret
lahf
sub
arpl
add
addb
andb
arpl
inc
repnz
jne
add
mov
movsl
mov
xor
jecxz
or
fptan
into
subb
arpl
cli
std
xor
add
int
repnz
arpl
sbb
add
mov
repnz
andb
addl
xor
repnz
mov
mov
int
ds
jmp
int
repnz
shll
mov
sub
int
repnz
rorb
arpl
and
fptan
into
int
repnz
orb
xor
repnz
mov
add
mov
jmp
sar
int
repnz
gs
int
sub
addl
adc
int
repnz
push
jp
div
xor
repnz
int
repnz
adcb
cmp
fptan
into
mov
mov
cld
addb
arpl
fptan
into
sub
cwtl
xor
shlb
fptan
mov
ja
mov
xor
mov
push
int
rolb
arpl
fptan
into
hlt
sub
mov
jne
mov
cld
shll
mov
push
insb
mov
xor
int
repnz
mov
ss
int
repnz
xor
and
in
outsl
in
int
repnz
mov
xor
or
fptan
into
mov
add
mov
movsl
sbb
into
nop
les
mov
subb
inc
arpl
mov
mov
fptan
into
hlt
xchg
xchg
adcb
arpl
inc
jle
icebp
into
loope
int
je
arpl
dec
pop
gs
addl
xorl
mov
repz
mov
pop
pushf
ret
or
mov
sbbb
adc
inc
jno
int
repnz
mov
ss
mov
push
addl
mov
push
mov
adc
int
bound
adc
repnz
hlt
or
mov
or
or
pop
idivl
int
repnz
nop
orl
addl
repnz
sbbb
popf
jbe
adc
add
repnz
int
repnz
adc
popf
int
repnz
cmp
xor
repnz
sub
adc
add
repnz
out
mov
addl
out
into
hlt
das
test
mov
dec
addb
repnz
mov
dec
xchg
or
xchg
int
repnz
jmp
arpl
hlt
mov
arpl
add
int
repnz
mov
outsl
xchg
into
repz
int
fsubl
arpl
or
jns
adc
add
fptan
into
gs
arpl
mov
daa
jg
dec
int
repnz
lods
int
repnz
cmp
cmp
into
hlt
xor
mov
jg
xor
je
xor
repnz
int
repnz
mov
push
mov
pop
ljmp
into
mov
add
gs
add
andl
fsubs
mov
cld
fptan
into
hlt
sti
int
repnz
mov
jle
jae
mov
repnz
int
stos
addl
dec
outsb
int
repnz
addl
sub
xor
repnz
arpl
mov
ret
repnz
int
repnz
andl
fptan
into
int
repnz
mov
fidivrl
nop
or
xchg
lea
mov
dec
cmpsl
push
out
sub
sub
arpl
push
adc
adc
add
stos
andl
mov
repnz
cmp
xor
fptan
into
hlt
xor
or
mov
push
into
hlt
xor
loop
arpl
iret
outsb
xor
and
addl
incb
cmpb
rolb
addl
into
hlt
xor
and
inc
jbe
into
hlt
sub
int
xor
addl
push
xor
fptan
loopne
stos
roll
add
sbb
cmp
arpl
sahf
cmp
xor
repnz
fcompl
xor
mov
pushf
mov
into
jecxz
add
fucom
addl
jb
int
repnz
sbb
mov
sbb
add
das
test
pushf
xchg
leave
add
into
hlt
insb
pop
int
jecxz
arpl
int
jp
out
scas
int
adc
addl
outsl
dec
out
mov
push
mov
loop
into
xchg
inc
or
addl
hlt
mov
repnz
subb
dec
hlt
add
fptan
into
repz
test
mov
mov
adc
add
int
repnz
mov
mov
or
mov
int
mov
daa
int
repnz
jmp
mov
in
xor
inc
mov
mov
mov
jbe
xor
add
or
repnz
push
jl
addl
jmp
fptan
into
hlt
cs
fptan
mov
hlt
popf
scas
rclb
int
cmp
arpl
pop
pop
into
cs
add
pop
lock
int
repnz
mov
int
fwait
and
andl
repnz
hlt
sub
int
xor
arpl
mov
mov
cmpsl
lds
add
int
repnz
push
cmp
xor
repnz
lea
dec
mov
xor
cwtl
xor
test
mov
push
add
shl
fptan
into
mov
or
lret
addl
adc
add
mov
ret
mov
jecxz
adc
add
repnz
cmpb
or
jo
int
repnz
ljmp
addl
mov
int
repnz
scas
xchg
fptan
mov
std
adc
fptan
into
hlt
sub
int
repnz
mov
fwait
jae
mov
adc
add
repnz
rorb
addl
mov
repnz
push
xor
repnz
mov
mov
popa
pop
xchg
fptan
into
hlt
andb
mul
push
jns
xor
hlt
add
xor
arpl
js
and
or
jmp
orb
arpl
int
repnz
cs
add
sbb
sbb
addl
lock
repnz
arpl
arpl
sahf
pmovmskb
aaa
hlt
sub
loope
arpl
xor
lret
or
repnz
rolb
subl
mov
mov
add
pop
pop
int
repnz
int
repnz
mov
shlb
fdivrs
repnz
sbbb
arpl
dec
imul
or
fwait
fs
cmpsl
addl
rcl
test
inc
arpl
inc
imul
arpl
fptan
mov
jle
lds
add
fildl
addl
arpl
or
sahf
loope
repnz
or
addl
movsb
mov
fs
or
icebp
or
test
inc
clc
loop
movsb
mov
inc
arpl
pop
jno,pt
je
xor
cmpb
mulb
call
fptan
or
arpl
shll
fwait
int
sbb
lods
lahf
add
fptan
into
repz
mov
mov
das
int
repnz
xor
arpl
mov
aas
sarb
shll
in
fdivl
int
repnz
rclb
ror
int
repnz
xchg
cmpsl
xor
out
int
repnz
hlt
sub
addl
int
repnz
mov
fistpl
push
ret
hlt
cs
int
add
addl
or
jecxz
int
repnz
xchg
cmp
fptan
into
int
push
ret
addl
mov
int
repnz
mov
adc
mov
into
int
repnz
cmpl
fwait
mov
adc
add
repnz
int
repnz
in
sub
test
into
arpl
add
add
repnz
ljmp
arpl
jbe
pop
xorb
addl
das
pop
mov
lods
jns
ror
mov
inc
cmp
arpl
int
adc
addl
adc
xor
test
in
jnp
mov
je
ja
mov
fptan
into
int
sbb
jb
fptan
into
hlt
mov
arpl
mov
lahf
xchg
sub
fptan
into
adcb
arpl
xchg
or
mov
fptan
into
push
gs
mov
xorl
jg
mov
into
int
repnz
mov
xchg
gs
dec
mov
int
repnz
sbbb
adcl
add
add
or
repnz
push
xor
push
into
mov
arpl
repnz
mov
add
mov
cld
add
or
arpl
push
push
fptan
into
gs
inc
int
repnz
js
push
adc
fptan
into
loopne
ss
inc
xchg
push
or
bound
xlat
and
fmuls
scas
int
repnz
gs
mov
cmpsb
mov
test
or
repnz
mov
xchg
stos
int
repnz
cmp
arpl
and
mov
mov
int
repnz
lods
sbbb
arpl
movsl
int
repnz
adc
daa
mov
add
orl
mov
int
repnz
push
pop
add
inc
into
arpl
test
addl
adcb
and
test
repnz
clc
int
repnz
arpl
add
xor
sbb
arpl
xor
mov
into
mov
repnz
mov
xor
clc
xorb
arpl
sbb
sub
repnz
mov
int3
mov
int
repnz
call
andb
or
cmpsl
gs
mov
mov
dec
andb
repnz
gs
inc
arpl
fptan
into
mov
imul
arpl
andb
fistpl
into
hlt
in
add
fptan
into
andb
arpl
jl
das
lahf
daa
fptan
into
rolb
adcb
arpl
bound
mov
popa
loopne
arpl
sbb
test
into
int
repnz
iret
pop
push
popf
xor
fptan
into
call
into
mov
mov
add
xor
repz
into
orb
push
pop
adc
xor
test
cmpsl
xchg
fstps
mov
int
repnz
jmp
arpl
fdivs
xchg
mov
int
repnz
cmp
and
mov
lock
xchg
fsts
fptan
into
gs
shlb
mov
inc
in
jo
imul
repnz
movsb
test
outsl
lock
repnz
adcb
lahf
mov
pop
xor
xor
arpl
enter
icebp
arpl
add
pop
cmpb
or
jp
arpl
lahf
test
int
repnz
hlt
int
int
repnz
neg
pushf
insl
jb
nop
xor
repnz
hlt
sub
int
addb
jmp
in
xor
int
repnz
jmp
arpl
les
fptan
into
mov
mov
pop
daa
add
fcompp
test
addl
out
into
hlt
mov
sti
mov
cmp
xor
fptan
xor
arpl
jnp
into
xor
out
arpl
das
rolb
rcrb
adc
add
mov
add
fptan
mov
sbb
lcall
addl
add
jo
fcomps
pop
and
cmovge
arpl
fptan
into
mov
nop
adc
in
dec
outsb
int
repnz
subb
arpl
fwait
jno
dec
cs
add
sbb
int
and
arpl
jae
push
and
jecxz
test
mov
mov
xor
fptan
mov
rorb
int
repnz
xor
repnz
call
xor
arpl
sahf
in
addb
arpl
mov
jg
xor
sbb
addl
xchg
jmp
repnz
mov
into
int
das
add
subl
add
push
push
in
dec
cmp
addl
dec
mov
dec
sbb
pop
addb
repnz
push
hlt
insb
pushl
fptan
mov
jmp
adc
fptan
into
jecxz
or
fptan
mov
xor
sub
fptan
into
hlt
in
add
addl
int
repnz
stos
int
pop
loope
arpl
out
mov
adc
add
stos
int
repnz
mov
pop
adc
jge
int
repnz
sbbb
popa
arpl
daa
out
adc
fptan
into
mov
cmc
cltd
daa
push
hlt
aaa
clc
into
int
repnz
mov
shll
in
adc
add
faddl
mov
outsl
push
fs
xor
fptan
into
jecxz
lahf
int
mov
icebp
icebp
xor
fptan
into
int
nop
fbld
inc
les
jg
adc
add
mov
arpl
or
xor
in
addl
dec
pop
mov
in
or
into
andb
addl
scas
pusha
xor
int
repnz
hlt
lret
xchg
mov
fnstsw
fptan
into
jl
add
mov
and
or
hlt
add
adc
arpl
loope
repnz
hlt
sub
into
mov
and
adcl
repnz
mov
dec
xor
repnz
hlt
out
add
push
pusha
arpl
or
xor
sub
int
xlat
andl
sbb
loop
arpl
or
addl
into
mov
pop
jp
enter
repnz
mov
iret
cmpsb
xor
mov
int
cmc
out
lods
popa
xor
repnz
hlt
int
mov
test
fptan
into
mov
out
sub
repnz
mov
andb
mov
adc
repnz
loopne
cmp
or
int
repnz
mov
cs
nop
les
mov
subb
or
repnz
stos
in
into
mov
mov
add
pop
int
repnz
mov
mov
mov
inc
pop
sub
aad
xor
add
andl
leave
adc
gs
int
repnz
push
mov
arpl
nop
lahf
arpl
cs
into
hlt
vpsubusw
into
int
mov
ret
adc
add
jecxz
or
mov
xor
fptan
into
hlt
cmp
lret
addl
vpsubusw
into
jmp
shll
adc
fptan
into
scas
int
repnz
orb
xchg
xchg
int
repnz
mov
int
dec
mov
xchg
cli
ljmp
addl
adc
add
repnz
nop
test
in
jnp
and
push
pusha
popa
into
int
repnz
xor
jg
arpl
fldcw
hlt
add
sbb
mov
punpckhbw
xlat
fs
repnz
int
repnz
fptan
into
int
repnz
mov
sbb
push
mov
sti
dec
ss
repnz
subb
cmpb
fwait
into
arpl
loope
arpl
sbbb
xor
int
repnz
arpl
add
arpl
pop
pop
cmp
add
repnz
cli
jecxz
rcl
sub
adc
add
jb
arpl
fptan
into
mov
repz
out
fptan
into
mov
int
repnz
addl
xor
repnz
lods
int
repnz
or
add
repnz
int
repnz
xorb
adc
push
inc
arpl
test
or
repnz
int
repnz
mov
repz
repnz
xor
stc
add
out
dec
fdivp
fisubrs
xor
repnz
int
repnz
mov
push
mov
into
arpl
fbld
in
push
inc
testb
arpl
fptan
mov
movsb
in
mov
fptan
into
ljmp
arpl
cmpb
arpl
into
xchg
add
add
xor
mov
andb
arpl
fptan
into
mov
fwait
cltd
or
shr
xor
mov
arpl
mov
int
repnz
call
arpl
xchg
fptan
into
in
orb
arpl
mov
and
aas
push
int
repnz
sti
int
inc
lahf
arpl
subl
andb
or
repz
cmovno
int
mov
xor
repnz
arpl
sti
cmp
int
repnz
mov
gs
inc
addl
sbbl
or
repnz
jecxz
pop
mov
or
hlt
int
repnz
sub
arpl
xor
xor
hlt
sub
mov
mov
or
pushf
scas
mov
popa
cmpsb
lock
repnz
mov
xchg
into
cltd
scas
mov
fptan
into
mov
mov
cs
xor
fptan
xorb
sub
fptan
andb
arpl
popa
sysexit
adc
add
add
adc
das
sub
repnz
in
int
repnz
adcb
jne
fptan
into
mov
int
repnz
sbb
pop
mov
fptan
mov
icebp
fimull
sbb
add
xor
lcall
into
stc
ret
int
repnz
stos
mov
mov
int
repnz
mov
jo
ffree
xor
int
int
repnz
loop
mov
nop
les
mov
or
addl
dec
inc
push
mov
mov
gs
sbb
into
int
clc
pop
arpl
ljmp
incl
loopne
arpl
sub
lock
xor
repnz
hlt
xor
arpl
icebp
xor
dec
mov
xchg
aad
in
rcr
repnz
repz
pop
cmp
push
xor
fildl
fptan
into
jecxz
int
mov
addl
int
repnz
int
repnz
xor
xor
les
mov
adcb
int
int
addl
add
int
cmp
sbbl
or
xlat
xor
shll
mov
gs
mov
shll
inc
mulb
xor
jns
arpl
xchg
xor
into
int
repnz
hlt
sub
arpl
popf
sub
repz
int
repnz
xchg
stos
andl
std
xor
xchg
xor
repnz
ljmp
mov
adcb
arpl
inc
fsubs
add
repnz
orb
fwait
pop
fptan
into
jmp
arpl
inc
repz
add
fptan
into
mov
mov
aaa
into
mov
fptan
into
call
andb
mov
test
sub
int
repnz
mov
int
repnz
mov
and
add
mov
int
repnz
hlt
lea
int
mov
arpl
test
fsubs
adc
add
repnz
nop
les
mov
adcb
addl
arpl
into
add
loopne
int
in
xor
mov
fbstp
loopne
fdivl
repnz
int
repnz
mov
adcl
fptan
into
nop
pop
dec
js
lea
pop
pop
jbe
xor
fptan
orb
fptan
into
add
arpl
fidivrl
fptan
into
hlt
das
or
out
arpl
xchg
fptan
into
leave
mov
lcall
ret
into
hlt
fmulp
fptan
mov
jle
adc
sbbb
arpl
lods
loope
arpl
add
jle
fildl
into
int
repnz
addl
int
repnz
xor
repnz
xchg
dec
mov
xor
fptan
into
int
repnz
mov
xor
push
mov
sub
mov
mov
inc
cmpsb
popf
adc
gs
arpl
mov
stc
test
repnz
jl
add
fptan
mov
xchg
jge
adc
cmp
int
repnz
adc
es
int
repnz
das
mov
mov
outsb
xor
fptan
into
mov
xlat
cmp
lea
pop
mov
xchg
in
out
cwtl
sbb
add
repnz
adc
xor
fptan
mov
aaa
sti
mov
gs
add
or
repnz
xorb
fptan
into
hlt
sub
and
add
inc
ror
fptan
or
arpl
insb
out
jmp
repnz
int
repnz
mov
jns
push
xchg
repz
ret
addb
arpl
ljmp
repnz
int
repnz
xchg
cmp
into
mov
push
je
pop
gs
add
int
repnz
hlt
jmp
mov
adc
add
notb
fptan
andb
arpl
adc
or
repnz
repz
arpl
sub
pop
push
xor
fptan
into
mov
mov
mov
gs
fptan
into
hlt
sub
int
mov
cmp
int
repnz
arpl
loop
mov
adc
add
arpl
adcb
arpl
imul
roll
arpl
cmp
fptan
into
mov
or
repnz
subb
arpl
out
or
int
repnz
les
fptan
into
mov
es
neg
repnz
lea
mov
movsb
cs
add
sbb
in
int
repnz
push
or
adc
hlt
xorl
add
fs
int3
mov
fptan
into
mov
test
sahf
xchg
fildl
xorb
adc
or
loopne
pop
jp
int
repnz
repz
arpl
cmp
in
cmp
popf
xor
adc
add
arpl
add
arpl
into
sub
fptan
into
mov
mov
repz
add
int
jmp
fsin
sub
repnz
jecxz
test
fptan
mov
jecxz
insl
push
push
int
repnz
jecxz
test
mov
mov
adc
add
hlt
insb
or
cmp
arpl
jo
ljmp
into
lods
int
idivl
pop
das
aad
add
fptan
or
arpl
mov
arpl
fptan
into
jecxz
test
test
fptan
into
mov
nop
jno
sbb
adc
add
repnz
repz
cmp
arpl
es
jecxz
adc
add
int
repnz
mov
pop
cwtl
add
adc
mov
addb
mov
mov
push
xor
jmp
arpl
xchg
xor
fptan
into
cs
add
jb
and
adc
add
aam
int
repnz
in
pusha
test
hlt
xor
js
arpl
and
push
cli
sbb
add
addl
arpl
adc
adc
shll
mov
repnz
test
fisubrl
fptan
into
mov
xor
andb
into
arpl
arpl
inc
stos
adc
adc
add
repnz
jecxz
or
repnz
out
ret
jp
pop
jne
add
cmpb
arpl
test
repz
xor
rep
andl
andb
test
arpl
sub
or
hlt
xor
arpl
ret
xor
sbbb
xchg
stc
ret
int
mov
test
fptan
into
stos
int
repnz
sti
notl
cwtl
fptan
into
mov
xchg
xor
divb
test
arpl
rcrb
xor
orb
arpl
mov
repnz
int
pop
loope
arpl
enter
int
repnz
hlt
sub
orb
xchg
test
repnz
int
repnz
mov
notl
lea
repnz
jbe,pt
push
sbb
fptan
into
int
repnz
arpl
mov
xor
pop
pop
fptan
into
outsl
mov
fisttpl
pop
mull
stos
jne
xor
mov
jmp
jae
pop
in
jge
shll
test
mov
add
sub
ror
sbb
not
rcl
dec
call
out
fdivs
add
ret
jo
in
bound
test
or
add
or
mov
sar
rol
shl
cmp
jne
xchg
les
shr
inc
add
rcl
call
xchg
cmc
out
or
aad
lret
inc
cmp
jne
dec
sbb
lret
rcl
rcl
sub
jmp
inc
dec
shll
rcl
not
xor
not
sar
cmp
jne
mov
roll
sub
roll
jne
cmpl
shl
ror
cmp
jne
add
in
jno
lcall
xor
neg
cmp
jne
inc
lds
jbe
test
fidivrl
cmp
jne
xor
bound
inc
dec
gs
rcl
rol
call
sahf
jl
iret
sar
mov
inc
jmp
jmp
lahf
testb
les
add
cmp
jne
les
xchg
push
stos
jge
out
adc
cmp
jne
mov
rcr
fs
test
shr
not
cmp
jne
or
rorl
sub
sub
xor
cmp
jmp
into
xchg
mov
and
adc
call
in
and
in
rcl
dec
sbb
xor
jmp
push
jmp
sar
rcr
shl
shr
ror
cmp
jne
pusha
push
mov
xor
lret
sub
sub
mov
or
jmp
cwtl
es
add
cli
movsb
sahf
mov
adc
call
ret
leave
jmp
call
fdivr
aaa
je
lea
rcr
shl
mov
sbb
shl
cmp
jne
bound
fs
add
rcl
sar
test
jmp
in
xchg
xchg
shr
adc
add
sarb
cmp
xor
icebp
adc
inc
rcr
call
and
aad
not
rol
not
cmp
jne
add
dec
mov
push
or
dec
add
not
jmp
scas
call
sub
shr
adc
call
sbb
mov
inc
jmp
and
xor
ret
sbb
stc
inc
or
sbb
mov
cmp
jne
push
pop
sbb
out
mov
jmp
lds
fldcw
rcr
sub
shl
not
shl
cmp
jne
ljmp
push
mov
jmp
dec
bound
popa
mov
shr
cmp
jne
mov
js
in
not
sub
call
lret
sar
dec
not
add
shr
cmp
jne
cs
xor
add
dec
rcl
call
jbe
pushf
das
adc
and
sbb
rcl
or
not
call
mov
rcr
dec
sub
sar
jmp
aas
xchg
xor
out
or
rcl
adc
call
daa
js
rcr
add
sbb
cmp
jne
fcompl
into
and
shl
rcl
ror
cmp
jne
frstor
or
xor
out
in
jmp
loope
out
jmp
pop
stos
mov
loopne
and
mov
test
jmp
stos
sbb
mov
sub
shl
sar
shl
cmp
jne
rclb
fcomi
lea
sar
rcl
add
call
stc
and
xor
call
dec
or
adc
call
faddl
pop
int
fisttpll
jmp
mov
rolb
fsubs
enter
inc
sub
shl
adc
rol
jmp
push
into
rorl
fcom
loope
enter
mov
test
icebp
add
sbb
rcr
adc
dec
call
cltd
dec
lods
mov
mov
mov
cmp
jne
jmp
push
ror
sub
int
rcl
sar
call
cld
add
pushf
rol
shr
mov
xor
or
cmp
jne
outsb
ret
lea
sub
shr
xor
rol
cmp
jne
lret
std
and
rcl
adc
rcl
shr
sar
cmp
jne
out
xchg
sbb
jle
mov
clc
adc
xor
call
aad
cwtl
lea
sar
cmp
jne
sbb
into
cmp
loope
call
fiaddl
sub
fs
xor
rcl
rol
call
arpl
add
rol
cmp
jne
negl
sub
rcrl
nop
insb
cli
sub
lds
jne
in
ljmp
cld
mov
adc
sub
rol
rol
call
lea
rcl
sar
rcl
inc
ror
cmp
jne
adc
and
sar
adc
jmp
test
and
add
xor
cmp
jne
scas
or
fs
ror
rol
rcl
shl
cmp
jne
call
out
ret
xadd
adc
fstl
sar
shl
call
je
push
mov
outsl
test
inc
sbb
mov
and
inc
cmp
jne
mov
jmp
call
or
mov
lea
cmpw
jmp
aaa
cmc
xorl
sbb
neg
adc
sub
sar
jmp
cltd
sbb
faddl
mov
not
call
add
insb
lcall
jecxz
scas
aam
inc
inc
cmp
jne
fldenv
loope
xor
or
rcl
call
dec
and
das
sar
add
ror
shl
jmp
sahf
mov
mov
out
rcr
rcr
ror
jmp
aad
subb
shl
add
sar
xor
cmp
jne
xchg
adc
decb
xor
shr
rcl
adc
rol
jmp
pop
cmp
adc
mov
and
jmp
incb
ljmp
lea
or
rcr
and
rol
cmp
jne
mov
lea
ror
add
xor
shl
sub
jmp
jmp
mov
ret
add
shl
ror
or
mov
call
mov
mov
fs
rcr
or
cmp
jne
xor
fcmovbe
cs
xor
and
jmp
ss
xor
adc
ror
neg
or
xor
rcl
jmp
fwait
pop
les
lea
and
mov
rcl
call
xor
subl
sarb
and
sbb
jmp
cmp
mov
fisubs
lret
rolb
repnz
pushl
fisttpll
sbb
mov
cmp
jne
sbb
inc
sbb
dec
xor
test
add
add
xor
add
inc
and
sar
call
inc
inc
xchg
rolb
lds
sub
rcr
not
jmp
sbb
ror
cmp
cmp
jne
arpl
cmp
sar
sub
inc
sub
or
call
icebp
or
out
sub
ror
rol
call
sbb
test
or
shr
mov
mov
test
xor
jmp
daa
adc
adc
sti
call
roll
test
shr
cmp
jne
loopne
and
adc
mov
adc
cmc
sar
and
sub
call
shlb
dec
rol
adc
jmp
in
rol
lea
test
test
adc
xor
shl
jmp
jmp
add
sar
ror
shl
xor
ror
call
add
pop
add
dec
test
and
sar
cmp
jne
cmp
sbb
xor
jmp
xchg
xorb
fldenv
sar
call
std
sbb
and
inc
call
and
in
lea
rcr
rcr
mov
cmp
jne
popa
daa
push
lea
mov
mov
xor
and
mov
jmp
stc
jb
sub
in
lret
or
jmp
pop
test
xchg
es
xchg
lea
shl
ror
rol
and
jmp
loopne
mov
fs
neg
adc
shl
xor
call
in
rcl
mov
cwtl
or
dec
adc
inc
jmp
and
or
sub
cmc
add
rcr
sub
call
hlt
roll
mov
jnp
add
sub
xor
jmp
dec
adc
lea
shr
add
rcl
call
dec
loop
aaa
aad
lea
sar
cmp
jne
mov
test
lret
push
dec
cmp
jmp
cmp
stc
dec
shl
mov
jmp
add
xchg
ffree
ret
rol
sbb
xor
sti
ljmp
shr
shl
rcr
cmp
jne
cmp
lea
rcl
jmp
hlt
mov
sub
cmp
jne
cltd
gs
mov
iret
sbb
sbb
shr
call
loope
xchg
xorb
mov
rcr
sar
shr
jmp
je
adc
rcl
shr
jmp
cmp
sets
push
lea
not
neg
shl
rol
rcl
cmp
jne
mov
in
fwait
rol
shl
rcr
jmp
jns
dec
lock
and
into
or
roll
mov
lods
idiv
ljmp
add
and
xor
jmp
out
mov
adc
rcl
shl
cmp
jne
cwtl
aam
lea
xor
test
sub
cmp
jne
pop
test
add
clc
rcr
or
xor
cmp
jne
sub
sub
mov
fs
neg
inc
and
call
movsl
sub
dec
mov
roll
push
std
push
xorl
rcl
rcl
or
jmp
mov
adc
sbb
rcl
adc
or
cmp
jne
push
out
pop
out
mov
and
rcl
not
rol
and
jmp
insb
push
rorl
rol
cmp
jne
mov
repz
xor
or
dec
call
xor
cmp
testl
std
push
sub
or
cmp
jne
mov
and
sbb
sub
and
xor
or
cmp
jne
adc
add
add
ret
outsl
mov
sub
call
add
jno
in
in
lea
shl
rcr
shl
add
jmp
gs
fbld
push
loope
rcll
lret
adc
jmp
sti
filds
shl
shr
adc
call
xor
arpl
rcrb
ror
mov
and
jmp
inc
or
fimull
ret
jmp
inc
jns
inc
lea
mov
adc
sub
rcr
shr
jmp
xchg
js
out
jecxz
test
shl
sub
jmp
push
or
shl
mov
shl
cmp
jne
jle
inc
loope
or
ror
cmp
jne
data16
adc
adc
neg
test
test
sbb
jmp
mov
pushf
add
rorb
out
or
enter
call
inc
cmc
xchg
rol
rcl
ror
rcl
inc
