cmp
gs
stos
sbb
leave
jns
sbb
in
push
mov
lret
cli
pop
repz
and
inc
sbb
dec
pusha
inc
fmuls
das
loop
or
jg
pop
imul
or
xchg
addr16
ja
or
cld
xchg
jb
mov
dec
lds
fcompp
mov
aam
divl
cmc
scas
pusha
dec
stc
dec
jp
jge
icebp
in
cmp
in
pop
das
xchg
pop
cli
dec
and
fnclex
dec
sbb
std
sub
adc
mov
push
mov
fdiv
sub
push
xchg
nop
push
lods
icebp
int3
repz
aaa
inc
add
jle
xchg
or
add
pop
jo
inc
clc
adc
adc
sbb
jbe
test
test
ja
mov
push
fs
repnz
push
add
cmp
stos
gs
add
xor
mov
lds
imul
adc
and
les
pop
bound
movsb
div
pop
mov
stos
or
int
cmp
jg
and
in
push
dec
mov
roll
sbb
jge
lock
bt
stc
cmp
mov
push
bt
cmpb
mov
jmp
pusha
rol
clc
cmc
bt
sub
bt
clc
ror
movw
mov
cmp
push
add
movw
stc
stc
cmp
cmp
bswap
pushf
lea
movzbw
movzbl
setbe
lea
mov
pushf
pushf
mov
call
test
pushf
call
stos
pushf
lea
jmp
push
push
lea
jae
push
push
pushl
jmp
call
daa
mov
fdiv
mov
popf
push
into
add
fwait
xchg
scas
cmpsl
jo
ret
inc
push
mov
pminub
int
sbb
jecxz
sbb
and
adc
test
ret
fisubs
mov
sbb
xchg
fld
or
push
movsb
xchg
rol
paddw
outsl
xchg
xchg
adc
lods
lds
hlt
leave
dec
int3
outsl
std
jne
pop
lret
out
int
rcrl
addr16
fcoms
mov
cmp
loope
push
imul
and
cmpl
add
xchg
shll
enter
std
scas
pop
lea
mov
bswap
mov
movzbl
push
push
mov
pusha
pushf
lea
jmp
call
inc
out
push
cmp
cmc
adc
cmp
fistps
ds
push
nop
sbb
cld
fiadds
lods
pop
push
and
mov
clc
nop
push
sbb
mov
cld
stos
add
loopne
pusha
push
sub
jg
in
stos
call
xor
push
push
and
mov
clc
test
jmp
push
lock
std
std
test
xchg
insl
lfs
ret
jbe
jae
lds
pushf
mov
pop
xor
add
pop
jge
test
dec
dec
and
aam
push
int3
add
call
lcall
fwait
shll
dec
add
hlt
inc
push
lahf
arpl
xchg
push
mov
hlt
lds
enter
mov
sbb
inc
jmp
jmp
lea
mov
sub
call
call
pushl
popl
movb
pushf
pushl
ret
lea
je
pusha
mov
jmp
movb
pushl
popl
push
pushl
ret
adc
adc
push
add
cmc
mov
cmp
mov
rcl
bt
push
adc
shrd
push
shld
push
neg
neg
push
shld
bswap
push
btr
pusha
rol
bts
mov
shr
xadd
inc
mov
shl
mov
call
call
mov
call
shll
xlat
xchg
mov
xor
push
xor
sahf
jno
in
mull
mov
pop
data16
cli
cmp
roll
add
push
lret
xchg
or
mov
out
adc
les
pop
xchg
mov
fists
jbe
add
inc
clc
fisubl
xchg
push
sbb
mov
data16
mov
pop
mov
mov
sbb
mov
movw
mov
push
lea
ja
cmc
shl
test
mov
sub
sbb
movzbw
inc
adc
add
bswap
mov
bt
and
sbb
mov
jmp
pop
dec
jge
pop
loope
clc
roll
mov
or
mov
into
fsubrl
test
add
and
shlb
dec
dec
sub
mov
in
mov
cmp
into
mov
push
xchg
sbb
cmp
lods
pop
fwait
mov
push
jo
leave
std
movsl
ljmp
add
push
int3
xchg
sti
lret
or
pop
in
pop
push
insl
loope
ljmp
jl
mov
sbb
mov
and
lea
jae
pushf
call
jmp
add
call
jo
das
dec
push
xor
fst
int3
pushl
xchg
mov
pushf
sarl
mov
sti
or
pop
sbb
and
movsl
inc
cmp
out
hlt
ss
mov
fxtract
sarl
lcall
int3
push
lcall
outsl
out
pop
sbb
les
dec
sbb
imul
adc
add
andl
mov
mov
sarl
stos
adc
inc
sti
scas
and
loopew
or
pop
out
cmpsl
adc
jge
cmp
js
xchg
movsb
je
and
xchg
cld
cmp
sbb
dec
pop
adc
fs
je
bsr
mov
pusha
cmp
rcl
call
mov
push
pusha
push
pushl
pushl
ret
pushf
movl
pushf
movl
pushf
push
movw
lea
jmp
mov
mov
jmp
shr
movsbl
mov
push
xor
clc
call
xchg
push
mov
pushl
push
mov
xor
sbb
dec
inc
rsqrtps
nop
and
or
cli
in
addl
mov
rcrb
movsl
push
ret
sub
outsb
mov
xchg
adc
aaa
adc
enter
dec
mov
add
std
mov
jg
jl
popf
sub
movsb
fildl
push
scas
and
sbb
shr
aam
lcall
fnsave
lock
leave
frstor
mov
or
xchg
arpl
movsb
pop
bound
clc
es
and
inc
xchg
popf
jg
pop
cmp
int3
or
xor
push
jecxz
repz
jbe
mov
cwtl
aam
test
pop
aaa
stos
lcall
jnp
mov
or
cmp
in
push
jecxz
jo
imul
in
dec
sbb
mov
sbb
mov
inc
fimull
mov
sbb
movsb
jge
pop
pop
mov
scas
test
imul
aad
lcall
mov
in
das
in
cmp
pop
mov
call
jb
cmc
or
xchg
sbb
stc
sbb
dec
dec
xchg
das
cmpsb
test
leave
in
ret
fwait
jns
mov
int
scas
stos
test
dec
cltd
add
xlat
es
or
nop
mov
pop
div
xchg
pop
ljmp
xchg
pop
addr16
fcom
dec
push
rcrl
or
or
cmpsb
int
mov
or
push
xchg
int
sbb
jb
jmp
fsubs
popf
decl
xor
pushl
mov
cmp
mov
xor
lea
les
pop
hlt
ss
mov
es
stos
mov
push
jmp
shrl
sub
adc
je
outsb
lahf
stc
div
mov
push
mov
adcb
jne
ja
mov
inc
push
cmp
dec
xchg
mov
mov
adc
xchg
dec
movb
xor
sbb
int3
aad
enter
mov
pop
lods
lea
cmovbe
loop
sbb
pop
xchg
add
pushf
pusha
clc
cmpb
pushf
mov
call
pushf
lea
jae
test
movsbw
shl
mov
sbb
shld
mov
ror
mov
bswap
adc
push
shrd
mov
lea
bt
clc
bt
sub
test
cmp
repnz
pusha
lea
jne
sub
xadd
inc
mov
call
je
jmp
call
inc
push
cmc
cmp
mov
jmp
lea
pushf
lea
push
movsbw
movzwl
movzbw
mov
pop
lea
call
pushf
pushl
bt
cmp
mov
jmp
test
mov
call
str
pushf
pusha
pushl
jmp
lods
lock
adc
repz
jmp
fsubs
lret
loopne
jnp
cltd
mov
out
push
or
push
into
stos
sbb
in
sub
push
sbb
ja
mov
psubq
aam
xchg
add
cs
imul
jmp
pop
xor
dec
jae
and
inc
push
mov
iret
mov
fildl
pop
adc
testl
xor
dec
dec
aad
mov
popa
inc
rcrb
fimuls
stc
in
sub
and
jecxz
movsl
mov
xor
fstps
pop
cmp
out
insb
sbb
jp
dec
xchg
lds
call
cmp
ss
add
cli
clc
mov
nop
mov
clc
xchg
sub
xor
and
mov
pop
lahf
adc
xor
pushf
push
jnp
pop
sbb
dec
lods
xlat
daa
fs
and
pop
arpl
pop
call
and
add
jo
push
add
mov
bt
mov
clc
jmp
rolb
cld
xor
xlat
dec
inc
js
cmp
mov
mov
es
adc
icebp
dec
cmp
test
jne
arpl
dec
add
xchg
sub
out
jns
cmp
xchg
dec
pushf
jno
pop
cltd
lahf
sbb
movsl
add
sbb
dec
dec
xor
or
call
push
lret
mov
leave
push
movsl
cmp
imul
adc
mov
adc
shlb
sbb
mov
test
int3
pop
sbb
mov
addl
inc
sbb
std
test
add
and
add
sbb
movb
lea
jmp
lea
jmp
call
push
push
pusha
lea
jmp
pop
imul
jp
dec
or
xor
mov
push
mov
int
push
cmpb
mov
cs
mov
pop
adc
xor
je
xor
shlb
mov
push
xchg
push
jmp
pop
push
ret
push
mov
movsl
test
push
in
mov
movsb
in
loop
les
pop
inc
or
push
push
out
inc
js
mov
call
add
in
jne
dec
jmp
stc
jne
mov
push
leave
dec
xchg
roll
sti
jp
sub
sbb
push
mov
stc
not
cmp
pushw
popfw
pusha
inc
mov
call
add
pushf
rol
btc
mov
add
rcr
mov
clc
and
mov
stc
mov
bt
bt
sub
bt
pusha
rol
cmp
pusha
add
clc
mov
cmc
ror
call
push
lea
ja
pushf
pushf
pushl
sub
test
sub
add
pusha
lea
jmp
dec
divl
mov
lea
clc
insb
out
sar
jo
mov
or
and
into
int
ret
and
xchg
dec
movsb
sahf
push
ret
stos
sti
cld
add
adc
lret
adc
mov
dec
inc
adc
lds
dec
add
adc
dec
add
inc
bswap
add
dec
or
mov
add
mov
call
jmp
jmp
outsb
nop
sbb
bound
or
push
iret
mov
adc
cli
sbb
pop
repz
or
cmpsb
sub
mov
mov
inc
jne
pushf
loope
int3
fsubrs
adc
addr16
fstl
pop
loopne
fwait
sbb
push
mov
imul
adc
mov
faddl
test
cmc
cltd
fsts
dec
subb
push
inc
shlb
mov
orl
insl
out
pop
in
std
bound
cmp
loopne
sub
fsubrl
adc
loopne
aas
dec
xor
jb
cmp
ds
jp
pop
js
dec
std
popa
jnp
nop
cwtl
mov
or
sahf
xlat
aam
inc
mov
pop
pop
lret
pop
mov
aaa
lods
bound
mov
mov
add
sbb
pop
repz
jbe
cmc
mov
and
sarl
dec
push
sbb
icebp
mov
test
sub
clc
stc
test
cmp
pushf
push
lea
jae
push
pusha
pusha
pushf
lea
jmp
pop
movl
cmc
setbe
add
pusha
mov
jmp
sub
bswap
shl
call
test
in
lds
adcb
pop
jge
sub
les
xor
mov
les
xchg
cmpsl
sbb
insb
cmp
les
add
movsb
xchg
xchg
addr16
mov
dec
push
test
fcoml
pushf
adc
scas
xchg
sub
call
movsl
lock
loope
nop
xor
pusha
clc
gs
cmpsb
inc
hlt
cmp
xorl
mov
and
sbb
adc
dec
and
mov
jns
leave
xchg
scas
hlt
xchg
and
adc
xchg
in
out
icebp
jns
xor
ljmp
sbb
xor
lods
add
and
dec
sbb
outsl
in
add
xor
xchg
sti
rcr
mov
xchg
je
and
ja
pop
xor
xchg
rol
in
sub
xchg
inc
and
sub
cltd
aas
call
mov
and
loopne
jae,pn
push
mov
sbb
xchg
leave
sub
mov
mov
adc
shrl
jp
dec
xchg
xchg
flds
push
ja
sti
mov
shr
aaa
inc
in
pop
sub
adc
xchg
mov
xor
cmpsl
imul
shll
pusha
ret
pop
xor
sub
loop
sbb
jno
and
add
dec
mov
jmp
xchg
inc
mov
out
insl
fnstsw
mov
call
in
xor
jecxz
cld
xor
and
loop
repz
xchg
sahf
push
icebp
xor
mov
mov
repz
icebp
sbb
imul
or
mov
jne
jns
sbb
call
mov
push
jmp
mov
adc
cs
sub
out
rorl
rorl
in
pop
push
imul
lods
mov
testl
mov
aam
mov
ljmp
pop
pusha
bound
ss
in
hlt
sbb
jns
bound
dec
orl
or
out
pushf
aam
pop
mov
push
add
sbbl
shrl
sbb
lock
dec
or
add
lock
push
push
push
outsl
pop
shrl
cmc
xor
adc
jno
xchg
cmc
loop
push
imul
je
xchg
xchg
adc
mov
call
jno,pt
xor
dec
push
clc
or
lea
leave
std
lods
mov
jmp
in
jnp
loopne
add
das
in
jae
push
lea
and
mov
sub
jle
jmp
jl
cmp
rolb
jno
mov
and
xor
add
insl
jno
aam
xorl
jb
push
xor
test
scas
inc
mov
jbe
insl
hlt
or
jno
clc
roll
mov
mov
imul
jbe
les
lods
xor
jb
xor
call
jne
imul
mov
test
jae
jno
xor
ljmp
jbe
xor
and
notb
xorb
xor
jae
cltd
sarb
cmc
aas
andl
fmuls
subl
cs
sub
mov
repnz
das
and
inc
pop
test
inc
sub
jae
insl
insl
adc
scas
sub
jae
test
subl
stos
push
insb
icebp
mov
aaa
icebp
cs
and
subl
xorb
jbe
lcall
aaa
add
jno
cmc
test
mov
mov
jb
add
push
cli
sub
push
mov
sub
mov
sub
pop
icebp
add
das
test
xchg
or
xor
add
int
xor
hlt
jno
stc
add
scas
push
and
jns
fimuls
test
inc
pop
das
mov
xchg
sub
popa
icebp
imul
xchg
add
jns
scas
jle
call
imul
push
push
xor
adc
jb
mov
testb
or
sub
lods
outsb
xor
lods
add
out
xor
dec
mov
sub
dec
jae
push
dec
lods
cli
das
add
dec
stc
cmc
pop
dec
add
pop
mov
add
call
repnz
cmpsl
loope
xor
hlt
clc
outsl
adc
inc
jmp
mov
insb
jb
mov
aam
sub
je
jb
sub
lods
lods
stc
repnz
test
xor
mov
out
outsb
pop
jae
mov
mov
xor
mov
dec
testb
jo
lods
adc
push
push
imul
insb
jo
clc
jno
cs
xorl
in
out
xchg
std
sub
add
adc
add
xchg
lock
dec
in
lods
jg
popa
mov
mov
mov
pop
insl
or
push
sbb
pushf
icebp
xor
icebp
mov
adc
mov
scas
pop
out
adc
push
out
insb
adc
outsb
jecxz
lods
jb
inc
ljmp
out
inc
call
movsb
xor
jbe
sub
lods
xchg
jno
in
sub
das
jae
push
jae
jmp
mov
jbe
xorl
jge
sub
xchg
lcall
add
out
and
out
adc
mov
sbb
scas
aad
jns
add
jns
add
in
insl
jns,pn
add
insl
jl
push
stos
cmp
add
sbb
cmc
add
sbb
push
push
jnp
push
lods
mull
repnz
push
sub
xor
call
ljmp
xchg
push
sub
insl
xor
adc
jo
icebp
scas
add
scas
sub
or
mov
add
cltd
jno
push
add
inc
add
mov
push
add
add
into
add
add
and
stos
push
sub
js
scas
icebp
jbe
xor
cltd
out
or
aaa
sbb
sub
mov
leave
push
rcrl
insb
scas
sbb
sub
shrl
mov
xor
push
sub
icebp
push
sar
add
xchg
add
inc
adc
jecxz
mov
xor
mov
xor
xorl
mov
xor
jns
jp
xor
push
stos
and
add
enter
adc
out
jge
test
jns
mov
xor
test
in
push
jmp
bound
popa
jmp
add
cmp
mov
mov
adc
jge
sub
mov
jmp
mov
out
sub
pop
jno
mov
stos
add
jno
push
out
jmp
pop
pushf
cli
popa
adc
ret
sub
idivb
mov
mov
mov
push
mov
shl
insl
cs
sti
mov
test
pusha
jnp
imul
jno
add
data16
mov
leave
push
mov
dec
push
out
leave
and
mov
xor
add
mov
leave
and
es
jne
push
cmc
push
add
adc
stos
xor
stc
jno
mov
leave
and
sbb
add
jl
mov
dec
cmc
and
in
push
in
mov
leave
and
aad
outsl
jne
push
jbe
add
jo
add
push
movsl
jb
leave
pop
xor
mov
imul
mov
xor
xor
adc
mov
mov
js
scas
add
divb
xor
mov
sub
mov
lods
xchg
imul
xor
jge
jns
je
dec
das
lret
add
add
std
mov
ja
std
adc
cli
je
bnd
jg
sbbb
outsl
loopne
int
leave
outsb
in
loope
dec
dec
pushf
push
and
mov
ss
das
mov
xchg
jb
out
mov
push
rcl
push
sub
adc
cld
test
cmpsl
adc
adc
lods
mov
push
mov
roll
in
outsb
inc
and
pop
jb
mov
add
jle
mov
adc
lret
pop
loope
loope
out
ret
and
pop
sub
fs
push
jno
in
sub
repnz
xchg
pushf
stos
stos
sbb
sub
insb
in
pop
imul
pop
inc
mov
testb
push
jmp
outsb
shl
cli
aaa
hlt
adc
xchg
sub
bnd
in
add
mov
jmp
hlt
and
jne
push
xor
sub
mov
push
mov
in
repnz
ret
and
movsb
aaa
mov
cs
subl
add
adc
and
subl
out
stc
jno
in
cli
imul
cmp
arpl
fwait
and
jno
bnd
and
xor
lret
xor
sub
add
call
dec
jb
mov
sbb
xchg
cmc
ss
outsl
xlat
dec
sub
cmpl
icebp
dec
mov
or
and
xor
loop
icebp
sub
je
or
push
stos
and
xor
aam
lods
in
jno
out
mov
test
adc
or
mov
lods
outsl
push
pop
hlt
mov
ds
jmp
fbstp
das
stos
jge
mov
mov
xchg
ds
popa
xor
inc
mov
push
out
dec
iret
push
mov
add
xor
sub
and
in
inc
sub
ss
subl
dec
jbe
not
xor
or
mov
test
jb
xor
push
add
out
push
add
imul
imul
xorb
sti
jno
aam
jg
sub
sub
testb
ja
popf
jae
scas
ja
xor
push
scas
aam
xlat
mov
aaa
lods
jp
jne
mov
and
outsl
jns
lods
jge
ficoms
test
inc
push
subl
test
jne
sub
jmp
mov
jp
test
clc
stos
adc
xor
das
lds
test
jmp
jge
in
xor
loope
movsl
insb
out
ljmp
icebp
repnz
jb
or
jo
jb
lahf
out
jge
in
div
jne
add
in
jbe
xor
sub
xchg
or
mov
or
xor
and
cli
adc
mov
push
mov
pop
daa
mov
clc
ret
jns
mov
stc
mov
jp
mov
sbb
stc
jnp
mov
sti
mov
jae
out
js
and
xor
sub
jae
add
scas
popa
mov
sub
cli
mov
lock
ret
xor
jbe
je
jae
adc
mov
icebp
lods
push
mov
sub
je
or
lea
leave
outsl
shll
popf
loop
repnz
jl
jge
mov
sub
mov
xorl
xor
mov
and
test
jbe
sub
in
mov
dec
mov
xor
mov
push
xor
pop
scas
jl
jns
sub
xorb
clc
push
sbb
push
xorb
xor
dec
sub
repnz
sub
mov
std
repnz
ffree
and
and
xor
icebp
insb
sbb
ja
test
xor
add
xor
repz
adc
jo
push
jno
mov
mov
dec
stos
js
or
sub
jb
shrl
dec
stos
stos
aaa
adc
and
stos
vcvttps2dq
jno
jo
repnz
cli
bnd
repnz
repnz
repnz
mov
icebp
bnd
adc
cmp
sbb
pop
jno
pop
out
jo
pop
jno
cli
out
jae
pop
jno
ret
out
push
pop
jno
mov
icebp
repnz
jno
pop
jno
pusha
sti
xor
add
cmc
adc
add
xchg
andl
fs
repnz
repnz
add
subl
repz
xor
icebp
dec
insl
adc
leave
sub
sub
mov
add
test
xor
adcl
loop
pop
mov
jg
jno
js
xor
addb
repnz
xor
insl
push
sub
jo
xchg
cs
repnz
and
clc
test
and
push
add
xor
inc
leave
xor
repnz
scas
and
subb
xorl
sub
subb
fisubrl
xor
mov
idiv
mov
add
roll
stc
je
mov
jnp
and
sub
xor
in
adc
sbb
xorl
ret
dec
insl
jo
icebp
add
mov
ss
test
sub
inc
add
sub
lods
ds
mov
jno
push
mov
jmp
push
repnz
xor
jl
lcall
dec
xchg
cmp
xchg
jae
xor
mov
mov
cmp
mov
mov
mov
icebp
insb
ss
cmp
icebp
in
push
xor
pop
mov
mov
lea
cmp
or
mov
call
mov
cli
jno
dec
sub
sub
push
sbb
sahf
inc
xchg
stc
cmp
jl
jmp
adc
and
ja
dec
jb
hlt
mov
out
inc
dec
dec
out
push
dec
sbb
inc
mov
push
inc
int
cmp
xchg
adc
lods
in
shl
add
mov
inc
sbb
testl
imul
dec
repz
or
popa
jno
cmp
inc
fcom
into
rcrb
lret
inc
xor
loope
inc
and
adc
in
xor
cmc
je
sub
mov
jge
in
outsb
into
inc
jg
pop
cmp
jno
pop
adc
jl
sub
repnz
roll
jmp
mov
pop
lods
idivl
call
repnz
and
mov
pop
fdivp
loopne
test
jae
lods
mov
xor
lret
fcomi
in
test
in
lock
in
jge
cli
ficoms
addr16
add
test
inc
sub
cmpsl
lock
or
dec
sub
or
xchg
xorb
mov
jno,pt
in
xor
stos
jns
ljmp
in
add
into
gs
mov
jecxz
xchg
out
ljmp
cmc
jecxz
scas
mov
pop
insb
or
repz
icebp
icebp
push
add
call
mov
out
insl
outsl
mov
js
mov
ret
jb
jmp
daa
ljmp
push
insl
loope
sub
xor
xor
sub
insl
mov
add
test
cmp
icebp
cs
and
cmp
mov
xor
popf
or
jne
add
adc
sub
jb
popf
and
mov
cmpsb
adc
jae
mov
out
nop
subl
jne
fnstenv
cmc
ss
aad
cmc
add
dec
lods
lahf
out
icebp
pushw
dec
insb
sub
roll
push
out
pop
out
jle
lea
push
lods
add
mul
push
xchg
add
addl
adc
inc
inc
stos
call
xor
xor
add
adc
push
sub
xor
mov
mov
icebp
xorb
hlt
adc
sub
testl
xor
insl
xor
push
mov
add
sub
test
test
insl
je
jne
jbe
ja
jo
repnz
lods
subl
xchg
mov
push
xor
cli
subl
aaa
mov
movsl
add
lods
ja
mov
xor
add
roll
mov
and
icebp
test
icebp
out
or
jno
xorb
icebp
subl
sub
stos
jb
icebp
cmpb
jl
jp
mov
and
jge
scas
and
subl
add
ja
sbb
cmp
xor
clc
mov
inc
xor
add
fistps
xor
out
mov
pop
xor
shl
test
shl
out
or
jno
shl
mov
data16
insb
mov
imul
sti
stos
jb
icebp
icebp
mov
icebp
mov
push
stos
mov
push
sub
shl
mov
push
scas
adc
mov
push
mov
shl
lods
roll
jl
icebp
das
add
mov
out
sbb
sub
cmp
icebp
repz
insl
fst
icebp
hlt
incl
vpsadbw
mov
sub
call
imul
pop
mov
and
and
push
movsl
idivb
lea
das
fnstenv
adc
or
fs
push
push
mov
sub
imul
xor
mov
cs
icebp
lea
in
sbb
adc
jae
or
ljmp
popf
cmc
add
icebp
jl
mov
mov
xchg
in
mov
mov
mov
out
jg
test
fistl
or
adc
call
stc
subl
subb
mov
push
xor
xchg
add
adc
sub
je
je
add
subl
imul
dec
je
mov
push
mov
sub
test
in
icebp
lods
jl
es
test
sub
pop
dec
xor
jns
jo
inc
jb
sub
xor
cld
mov
in
mov
sub
dec
xor
jns
jp
jae
idivb
mov
jmp
pop
jp
repnz
sbb
je
adc
jno
cmp
jae
and
xor
mov
icebp
sbb
fstpl
mov
das
orl
dec
insl
stc
call
insl
xor
add
mov
repz
insb
push
dec
jno
out
repnz
jae
sub
stos
insb
imul
push
jno
loop
add
dec
jno
or
sub
outsb
xchg
mov
sbb
movsb
mov
insb
dec
mov
cmpsb
mov
xchg
pop
test
shrb
mov
pop
ss
mov
mov
xor
jmp
or
les
inc
and
imul
pushf
adc
into
call
and
jl
scas
fbstp
lods
imul
adc
loop
jb
cmc
inc
jl
or
mov
jo
outsl
mov
adc
cmc
adc
cld
jp
xchg
test
lock
cli
test
sub
imul
push
mov
jb
push
outsl
xor
fiaddl
insb
bound
push
stc
subl
divl
hlt
shrb
xor
cli
sub
jns
dec
sub
xor
add
sub
xor
xor
scas
mov
jmp
cmpsb
push
mov
fiadds
jo
xor
push
js
orl
out
inc
xor
hlt
shlb
scas
gs
imul
adc
mov
jno
adc
pusha
jae
pop
ljmp
jb
cmp
ss
call
outsl
call
das
push
xor
rclb
in
jb
outsb
jno
je
repz
in
push
adc
add
aaa
cmp
sub
mov
mov
and
sub
and
icebp
jno
fisttpl
pop
test
hlt
dec
test
xor
sbb
cmp
push
out
ret
sarl
adc
add
icebp
lds
sub
inc
xor
ss
push
neg
shl
xor
std
shlb
das
push
insb
repz
sub
in
jl
ret
std
inc
xor
in
adc
sti
jne
mov
aaa
jae
sub
mov
pop
jno
mov
xchg
mov
jl
jmp
fistl
cmp
sub
hlt
jl
cmp
xor
inc
jbe
call
and
sub
aaa
sbb
add
push
sub
aas
shlb
int3
mov
int
cs
je
xor
test
lds
sub
subl
je
roll
jae
data16
or
mov
sub
xor
xor
addr16
ljmp
xor
push
mov
sbb
xorl
xor
cmp
jne
stc
lods
and
jl
adc
jns
adc
das
insl
call
cmp
jo
out
xchg
subl
adc
xor
sub
xor
xlat
orb
add
adc
sub
call
xor
sub
jne
mov
divl
in
out
jns
adc
stc
scas
adc
sub
ljmp
adc
cmp
stos
xchg
in
or
xor
sub
jns
adc
stc
push
imul
jns
adc
aaa
scas
popa
pop
sub
xor
aas
call
or
mov
xor
shrl
xchg
jb
out
push
sub
stc
subl
jne
jbe
ja
jo
jno
adcb
jae
insb
sub
mov
sub
lahf
or
cltd
test
je
jp
xor
negl
jno
ja
in
js
in
insb
in
ret
jbe
in
and
cwtl
cmc
in
sub
in
fdivl
jl
xor
call
sub
icebp
sub
negl
sub
je
scas
dec
add
add
sub
outsb
test
mov
lahf
pop
pop
call
rcrl
call
sarb
data16
scas
jl
js
icebp
ljmp
jbe,pn
repnz
icebp
jb
push
cmc
sub
push
jne
shl
je
push
cs
cld
rcrb
mov
lea
sub
idivb
shl
mov
push
sub
sub
sar
cmp
mov
xor
insb
sub
inc
sub
mov
aas
mov
aas
mov
mov
insb
sub
cmp
xor
mov
cmp
push
pop
sub
sub
adc
repz
and
mov
cmpsl
cmpl
das
imul
aaa
xor
divl
pusha
das
sub
cmp
cmc
mov
jecxz
and
xchg
xchg
test
adc
sub
jg
mov
lods
sub
push
xor
jno
les
jno
test
jmp
or
or
imul
scas
sbb
cltd
hlt
and
je
repnz
mov
ljmp
imul
jns
xchg
pop
jb
jne
xorb
lods
mov
pop
imul
jae
fnsave
mov
pop
imul
sub
stos
xchg
fimull
jmp
cli
mov
data16
xor
insl
xchg
add
ljmp
xchg
cli
jmp
arpl
lods
jb
fimull
out
sub
stos
leave
sbb
sub
add
loop
in
movsl
xor
in
add
sbbl
push
pop
xchg
jo
or
add
sub
xchg
pop
jne
cs
and
or
mov
add
sub
in
push
mov
xor
ss
jle
xchg
jle
sbb
insb
add
xor
repz
xor
xor
adc
insb
xor
je
inc
test
jb
stos
ja
xorl
shl
and
mov
pusha
or
lea
mov
js
jae
push
repz
cld
mov
test
adcl
add
add
in
insl
xor
ja
cs
sub
cmp
lods
cmc
cmpsb
outsb
and
jmp
subl
xor
call
std
call
add
ljmp
repnz
shrl
and
inc
ja
adc
movzbl
shlb
test
mov
iret
test
das
mov
adc
push
paddsw
lods
popf
jb
lea
test
dec
in
sbb
xor
popf
push
xor
push
movd
mov
std
test
jb
mov
scas
into
and
push
mov
and
adc
xor
insl
pop
stc
fwait
out
lcall
test
mov
popa
cltd
imull
out
cmc
add
or
push
xchg
xchg
mov
pop
ss
jns
mov
lea
add
outsl
pop
insb
mov
stos
xchg
pop
xchg
or
add
sub
outsb
jae
or
jne
in
stos
std
cmp
scas
cmp
mov
jae
cmp
sub
in
cmp
add
mov
mov
adc
xor
data16
mov
xor
outsb
lret
imul
insl
ret
imul
sub
stos
mov
mov
scas
subl
and
imul
lods
xor
repz
push
mov
sub
je
xchg
xor
cmpl
mov
jb
xor
add
jne
outsb
jp
insl
cli
lods
jp
cs
add
add
je
dec
xorl
dec
sub
sub
jne
mov
mov
xor
ja
divb
divl
cmp
xor
sub
xorl
in
adc
sbb
je
mov
jge
into
daa
mov
or
aas
and
push
jle
insl
adcl
jp
jp
adc
xor
das
sub
jne
stos
aam
sub
jne
jbe
mov
mov
in
pusha
bnd
adc
scas
insl
out
stc
sub
push
stos
hlt
jns
adc
mov
icebp
jno
xor
insb
adc
imul
xor
rolb
xor
out
sub
push
sub
shll
add
sub
xor
je
jne
ss
icebp
iret
mov
outsb
insl
das
stc
jmp
xor
mov
sti
subl
adc
repz
xorb
or
xor
insl
jae
sub
sbb
in
subl
sub
jmp
mov
cmc
xor
insl
jo
jno
add
xor
lods
jns
adc
stc
ljmp
adc
mov
xor
adc
sub
sub
imul
mov
imulb
xor
icebp
aad
mov
mov
lods
adc
sub
test
stc
jmp
xor
jbe
jns
xor
jns
xorl
sub
scas
jns
adc
stc
sub
jmp
xor
jns
add
adc
jb
jae
je
pop
dec
add
stos
mov
in
mov
jno
scas
jne
mov
mov
jno
jmp
divb
in
out
and
stos
popf
push
xor
cld
repnz
cmp
jp,pn
test
jge
push
icebp
in
pop
xorb
jb
and
jns
and
xor
xor
mov
jae
adc
jmp
adc
xor
xchg
fistpl
out
and
stos
popf
pop
adc
leave
mov
inc
insb
mov
cmp
jp,pn
jae
mov
inc
sbb
jae
mov
rcrb
imul
jmp
xchg
mov
out
mov
push
xor
call
pop
push
imul
test
mov
pop
mov
dec
push
out
or
dec
adc
pop
mov
dec
lock
popf
dec
bnd
jns
xor
aaa
outsl
cmpsl
bts
bound
test
jnp
shrb
insl
push
mov
repz
mov
in
push
out
or
bnd
push
jo
data16
sub
sbb
xchg
mov
mov
xor
cmpsb
cmc
jns
ja
imul
mov
idiv
xchg
jl
pop
enter
jecxz
icebp
jb
mov
repnz
sub
lods
sbb
div
jno
rclb
jbe
in
loop
out
add
push
test
push
ja
clc
testb
push
xchg
cs
insb
psrlw
xor
outsb
jb
jae
lods
in
jne
push
cs
into
mov
inc
adc
rcrb
out
jb
pushf
imul
jb
jl
cmp
out
add
scas
in
xor
lods
imul
outsl
jns
mov
leave
sbb
jne
inc
sub
sub
leave
mov
jae
outsb
jne
js
mov
movsl
pop
add
imul
andl
loopne
and
bound
fstpl
sahf
sbb
mov
repz
mov
outsb
mov
call
imul
repnz
lods
mov
cmp
mov
imul
lea
jecxz
xorl
add
js
movsb
icebp
cmc
outsb
out
in
jge
push
xor
push
outsl
jg
push
xor
dec
add
add
lods
cmp
jecxz
rep
push
sahf
mov
or
arpl
out
add
dec
cs
out
sbb
sub
add
jb
sub
in
scas
jp
repz
and
sub
pop
ljmp
pop
dec
call
jbe,pt
sub
stos
add
jb
cld
div
jns
cmp
or
ljmp
sub
jl
sub
repnz
add
imul
xorl
jmp
xor
insl
hlt
stc
mov
push
clc
into
sub
jns
jbe
dec
xor
std
mov
mov
cmpb
mov
imul
mov
not
mov
xchg
jb
cmp
push
or
ljmp
out
pop
subl
cltd
jmp
push
stos
dec
lods
subl
js,pn
insb
mov
stos
repnz
jecxz
in
jle
xor
in
sub
inc
scas
mov
repz
sub
icebp
sub
adc
mov
test
test
lds
subl
negl
inc
xchg
add
xor
xchg
and
xor
ret
repz
xor
mov
adc
dec
jo
cld
iret
stos
addl
jns
xchg
enter
sti
pop
sub
in
popf
pop
in
jp
subl
jne
xor
lods
sub
mov
mov
and
sub
imul
fiadds
jmp
outsl
inc
das
imull
in
int
in
xorl
xor
lds
and
sarb
xchg
add
repnz
push
add
xchg
add
add
subl
push
jb
sub
call
je
cld
mov
push
or
arpl
insb
mov
pop
orl
fldt
into
jno
stc
pushf
adc
and
subl
sbbl
cltd
adc
xor
insl
fs
cmpsb
adc
repnz
sub
mov
xor
mov
xlat
jg
pop
insb
out
clc
sub
xor
test
push
adc
mov
divl
je
cmp
dec
push
sub
jmp
cmp
dec
loop
icebp
ljmp
in
push
xor
cmp
sub
popa
jno
shrl
sub
xor
jmp
xor
sub
xor
lea
xor
push
jge
dec
fnstenv
sub
out
and
add
mov
jne
adc
repnz
pop
int3
add
push
aad
stos
push
jae
inc
xchg
sub
fs
test
test
into
das
pop
ds
jmp
ljmp
xor
xlat
add
movsl
sub
xor
mov
std
in
mov
subl
stc
sub
hlt
sub
jo
jmp
sub
mov
push
xorl
stc
lods
adc
jp,pn
test
lods
dec
jmp
cs
xorl
and
xor
stc
xor
sub
insb
subl
sub
mov
ja
jo
jno
sub
mov
lods
adc
sub
adc
add
push
sub
stc
hlt
adc
sub
mov
icebp
repnz
outsl
jp
add
lods
sub
sub
sub
in
mov
scas
subl
push
imul
adc
mov
mov
adc
xor
stc
in
adc
sub
outsl
jns
adc
xor
insl
ljmp
mov
mov
mov
mov
xor
adc
das
adc
stc
je
jne
cmc
ss
adc
jno
xor
insl
repnz
mov
out
mov
add
cs
jns
stc
add
adc
sub
mov
mov
subl
jns
adc
adc
sub
sub
adc
xor
jo
xor
xor
xor
stc
outsl
adc
test
xor
xor
adc
subl
in
xor
sbb
test
add
sub
imul
mov
mov
ja
imul
sub
sub
call
xor
insl
jne
xor
xor
xor
stc
out
adc
sub
sub
adc
xor
test
dec
testb
xor
bnd
adc
sub
adc
jmp
sub
xor
jbe
imul
in
xchg
mov
xor
xor
xor
stc
sub
call
mov
das
sub
jg
xchg
sub
jns
add
mov
xor
imul
lods
mov
in
cmc
lods
fimull
ss
jmp
jmp
out
ret
sub
test
testl
mov
mov
push
je
test
jle
repnz
mov
sub
adc
xor
je
xor
adc
imul
lods
xor
pop
cld
jne
imul
cmp
mov
jb
test
mov
outsb
mov
or
xor
pop
daa
or
mov
sub
insb
jno
adc
je
insb
negl
sub
insb
mov
lods
sub
das
mov
jnp
add
test
test
xor
and
pop
sub
cmc
xorl
dec
jo
push
mov
lds
popf
testl
push
repnz
push
lea
adc
lock
mov
enter
in
out
cmp
sub
les
jmp
cmp
pop
inc
xchg
loopne
adc
cmpsl
popf
pop
int3
cld
lock
sub
mov
adc
clc
mov
lds
icebp
push
outsb
cli
xchg
repz
dec
xchg
dec
pusha
mov
jg
pushf
sti
mov
xlat
leave
and
xor
test
je
adc
mov
shl
sub
or
stc
imul
and
push
insl
loope
xor
and
inc
and
lcall
mov
stos
roll
mov
dec
xchg
dec
add
jno
xor
inc
and
lods
adc
pop
cmp
cld
jge
sbb
ret
shll
mov
jg
ror
jno
into
dec
sarl
addr16
add
testl
stc
mulb
insl
sub
dec
and
sbb
inc
jbe
push
mov
pop
sub
xorl
lock
gs
mov
lock
test
adc
test
fldl
int
rdmsr
mov
mov
sub
out
push
sbb
in
cwtl
loope
or
insl
lock
xchg
jge
mov
push
push
int
jecxz
cmp
adc
sub
pop
in
mov
outsb
hlt
andl
adc
clc
xorb
cmp
stos
or
sub
insl
sub
jl
xor
xchg
int
lods
push
push
cmp
insl
sub
sbb
cld
jl
jno
jnp
jl
imul
cmp
dec
fbld
iret
ds
mov
cmp
push
sbb
xchg
shrl
inc
je
mov
lods
in
sub
bnd
stc
xorl
cmp
icebp
inc
popa
adc
les
lds
cmp
and
fstl
jb
mov
test
loope
jo
jp
or
lock
sbb
jmp
pop
jo
lock
arpl
or
fildl
xor
lea
and
jge
sub
lods
pop
add
ljmp
lock
sub
sti
maskmovq
idivl
mov
cli
xlat
in
cs
jae
jp
push
in
dec
mov
jae
xor
mov
mov
dec
stos
jae
sti
mov
mov
sub
xorl
mov
shlb
outsb
test
imul
push
lahf
pusha
inc
scas
xor
dec
xorb
xchg
dec
loope
out
das
jg
iret
bound
push
pop
sub
lock
jae
jb
sub
adc
arpl
rorb
outsb
push
dec
adc
cld
or
dec
and
jp
aam
decb
sub
pop
cmpsb
sbb
push
insl
sbb
push
test
insl
leave
dec
jb
inc
cmpl
inc
push
xchg
icebp
sbb
jge
pop
mov
repz
xchg
cltd
enter
mov
fwait
lods
lock
popf
pop
cmc
push
xchg
or
das
in
push
push
insw
sbb
loop
mov
aas
sbb
cmovae
xchg
dec
pop
or
jg
mov
and
fmuls
ret
arpl
lock
leave
pop
in
dec
ljmp
adc
sbb
xor
pop
and
repz
pop
xorb
xchg
push
xor
repz
outsb
insb
stc
xor
adc
dec
dec
push
mov
push
cli
xor
mov
push
adc
stc
fnstcw
lret
pop
shr
popf
and
jno
xor
clc
cmc
jecxz
out
mov
mov
negb
scas
sbb
repz
fs
push
jo
sbb
divb
in
out
sub
mov
divb
dec
push
subl
int3
or
xor
aam
in
mov
mov
repnz
ret
outsl
cld
jle
jns
out
xor
pop
je
outsl
mov
mov
and
arpl
sub
sub
sarb
test
out
repz
mov
test
movsb
aas
icebp
loopne
mov
popa
int3
add
lods
iret
mov
mov
cld
mov
call
mov
cld
sub
jge
out
les
add
mov
add
add
add
push
lock
sahf
pop
mov
inc
icebp
aaa
dec
xor
add
sub
jmp
mov
icebp
ja
subl
cwtl
xor
ljmp
jb
fpatan
add
xchg
fildll
sahf
cmpsb
mov
ljmp
inc
subb
int3
imul
std
jb
sbb
insl
mov
and
incl
sbb
jnp
push
push
scas
test
ss
int
pop
sub
jae
or
inc
aaa
pop
jne
sub
lods
pop
jmp
scas
xchg
jl
mov
outsb
add
xchg
adc
repnz
roll
add
popa
xrelease
mov
std
testl
jmp
icebp
jno
lods
das
fcompl
add
add
es
mov
mov
loope
hlt
and
pop
stc
popf
adc
sub
pop
jns
adc
xor
mov
xchg
push
xor
fisubrl
cmc
lods
iret
mov
or
mov
and
in
push
dec
xor
mov
aad
mov
pushf
ss
mov
push
lods
das
or
lods
push
lods
fildll
test
cmc
js
outsb
ret
sub
aaa
mov
cmp
jno,pt
jne
je
lahf
jae
add
jge
xor
xor
lea
mov
stos
mov
inc
xchg
imul
xor
xor
ficoms
das
adc
jnp
inc
fsubs
sbb
or
push
mov
pusha
imul
or
xchg
and
dec
and
out
outsl
imul
ljmp
rorb
lret
xor
out
pop
cs
mov
xchg
xor
ret
push
xor
fldcw
test
out
ficoms
push
jecxz
and
mov
jb
mov
xor
sub
cs
insb
inc
xor
mov
test
shll
xor
js
je
xchg
ret
inc
icebp
scas
mov
lret
mov
std
jo
sub
add
sub
movmskps
add
xor
and
int
push
xor
rolb
hlt
mov
push
xchg
pop
mov
rol
xchg
jle
adc
jne
sub
imul
add
data16
sub
js
push
repz
sub
mov
sub
imul
jae
dec
xor
lods
outsl
sbb
or
ljmp
mov
sbb
ja
imul
mov
xor
lods
insl
sbb
imul
imul
sbbl
pop
adc
lcall
push
jne
xor
call
pop
add
imul
push
mov
sbb
fsubs
insl
lret
adc
push
arpl
ds
mov
pushf
insb
push
call
je
mov
mov
cmc
cmp
xchg
bound
ds
in
bnd
ss
mov
add
inc
xor
cltd
xchg
into
mov
dec
xchg
and
push
scas
add
or
sti
call
xor
cs
xchg
xor
jmp
jno
xchg
cs
push
jae
mulb
pusha
push
sub
mov
push
mov
popf
sub
jb
xor
pop
outsl
divl
xchg
sub
insl
icebp
test
loope
mov
sbb
cmc
and
mov
icebp
ret
insb
jb
mov
ret
jl
sub
dec
sub
test
inc
add
popa
aas
push
xor
sub
sahf
lret
xor
insb
imul
add
jle
in
filds
jmp
mov
adcl
testb
push
jne
jmp
sbb
cs
sahf
jae
hlt
movsb
jbe
aaa
popf
inc
stos
xor
outsl
mov
and
pusha
push
jmp
icebp
adc
mov
repnz
aam
mov
insl
hlt
mov
repnz
sub
xchg
sub
cltd
mov
icebp
sub
das
xchg
xchg
xor
push
push
test
repz
lret
add
mov
adc
pop
mov
call
push
insb
cmp
sub
add
cmp
mov
xor
push
ja
mov
scas
das
sbb
xor
dec
jl
pop
outsb
jmp
sub
ss
insb
popa
subl
ret
lods
lods
repnz
inc
add
push
xchg
in
ljmp
pop
sbb
stos
aaa
lods
negb
sbb
xor
ljmp
imul
sub
xor
rolb
insl
imul
xor
stos
imul
push
jae
sub
jns
popf
dec
mov
pop
subl
andl
andl
pop
xor
scas
mov
xchg
sub
scas
mov
cmp
push
mov
mov
mov
jno
mov
mov
imul
sub
inc
test
out
test
jns
cmpsl
mov
mov
cmp
and
push
add
fisubrl
jbe
sbb
out
xor
outsb
iret
scas
xor
sub
fucomp
scas
clc
add
ror
scas
push
jmp
mov
pushl
xor
xor
stos
jge
mov
xor
or
xor
test
xchg
int
xchg
mov
stos
lea
idivb
mov
das
scas
sahf
sub
xor
push
add
jno
das
xorl
repnz
sub
add
cltd
jne
jb
dec
test
lods
add
mov
test
push
cmc
leave
adc
rep
add
imulb
out
movsl
xor
and
sti
mov
jecxz
imul
fldt
mov
sub
lds
mov
mov
mov
subl
jnp
add
imul
xor
insb
ljmp
mov
adc
movb
int
sub
test
jbe
das
mov
add
sub
jp
subl
jp
sub
outsb
push
mov
xor
fidivrl
hlt
mov
aaa
adc
scas
outsl
fsubrp
push
iret
lods
mov
mov
dec
cmc
outsl
jb
stos
out
mov
push
icebp
xor
or
gs
jb
mov
jbe
xor
and
jo
adc
mov
jo
aas
jbe
jno
sub
stos
stc
sub
das
push
das
flds
loope
inc
aaa
ret
sti
xor
add
push
inc
stos
cmc
and
fs
jmp
adc
in
jl
loope
xor
sub
mov
ljmp
jno
outsb
shrl
pop
hlt
gs
jo
imul
sbb
or
daa
sub
addl
sahf
fs
xchg
enter
mov
std
insb
pop
cmpxchg
or
xchg
xor
cs
adc
scas
push
xor
xor
out
xor
insl
mov
outsl
ret
xor
ret
lods
mov
push
xor
test
jb
repnz
sbb
mov
mov
and
cmp
andl
push
mov
pop
insl
sahf
je
mov
adc
sub
push
add
das
or
scas
in
lods
xchg
imull
push
jb
popa
add
xor
in
xor
cmc
movsb
mov
cs
xor
out
mov
sub
pop
ss
call
mov
mov
repz
mov
push
lret
imul
sub
mov
scas
je
out
inc
cmp
push
ja
lods
mov
jmp
xchg
insl
inc
mov
lods
jne
in
stos
out
push
ret
xor
xor
xchg
inc
icebp
subl
test
xor
mov
pop
imul
adc
xor
and
dec
cmp
mov
sub
pop
push
scas
xor
outsl
addl
icebp
dec
adc
sub
jb
ret
test
sub
into
sub
sub
cmp
outsb
sub
lods
xor
testb
push
ja
mov
push
lock
xor
insl
popa
test
stos
out
inc
jo
sbb
xchg
icebp
push
xchg
subl
stos
movsl
sbb
cmpsl
mov
cmpsl
sbb
test
scas
and
jle
lahf
ds
das
int
repz
xor
repnz
push
das
les
test
jb
dec
test
jl
push
sub
lea
arpl
xchg
das
pop
jb
imul
testb
iret
xor
jno
xor
push
mov
insb
xor
insl
repz
add
add
xchg
jae
add
or
adc
push
push
stos
lcall
jae
mov
pop
sub
mov
jb
cs
and
jle
loope
jne
mov
sub
xorl
stc
aaa
bound
and
inc
icebp
adc
xchg
jno
push
jno
icebp
pop
out
imul
icebp
and
lahf
sbb
inc
bound
jb
push
jbe
push
repnz
jb
ds
addr16
mov
adc
add
xor
adc
xchg
mov
fidivl
cmpsb
sbb
ss
loope
sub
push
push
stos
sub
push
push
jb
imul
mov
pop
stc
mov
xor
xchg
jne
out
pop
jbe
jmp
lea
lods
cmp
ljmp
test
loope
and
cli
mov
ds
pop
mov
lods
sahf
rcl
add
sub
mov
loope
cs
in
lea
icebp
jmp
jb
test
cmpb
xor
aaa
cli
xor
lea
jae
sub
jno
inc
sub
jb
movsb
add
subl
clc
loop
and
pop
insl
sahf
stc
fists
sbb
fwait
jns
adc
pop
loope
mov
repz
cmp
sbb
test
sub
in
nop
or
mov
mov
mov
cmp
into
mov
mov
stos
scas
cmp
inc
sub
out
or
pop
aaa
push
mov
pop
ss
stos
int
xor
sbb
lods
je
lods
push
loopne
mov
dec
or
xor
loopne
lods
out
mov
push
jne
pop
inc
stos
mov
mov
dec
pop
outsl
add
mov
lods
popa
sub
cs
pop
divl
test
insb
sub
inc
mov
mov
popa
cli
add
xchg
xor
int3
out
cmp
das
adc
aam
xor
xchg
sahf
and
mov
imul
call
mov
mov
xor
testb
sub
stos
push
hlt
sti
xor
xor
les
xchg
adc
push
lea
push
mov
or
cli
xor
inc
push
icebp
test
xor
push
add
dec
stos
lods
or
testl
dec
jb
push
fsubrs
ret
sub
insb
xchg
repnz
icebp
pop
jae
xor
insl
bound
xor
cli
add
mov
imul
idivl
cmpsb
ja
mov
sub
ret
push
idivl
jl
sub
outsb
or
cmc
jns
mov
sub
mov
jle
fisubrl
jle
dec
test
cmp
inc
jb
xor
mov
xor
xor
mov
sbbb
icebp
stc
xorl
mov
call
or
scas
mov
outsb
scas
jmp
stos
or
push
pop
xor
cmc
cld
dec
pop
daa
jne
jo
xor
clc
icebp
adc
subl
sub
subb
stos
push
mov
sub
cmc
mov
je
ja
cmp
in
xor
lods
test
xorb
push
scas
jmp
ljmp
stos
subb
xorl
lds
mov
push
jno
jae
das
mov
pop
add
sbb
subl
sub
push
repz
enter
jbe
xor
std
imul
xor
mov
mov
insb
call
lret
push
icebp
ss
mov
mov
icebp
mov
xchg
idiv
jno
push
add
roll
int3
add
pop
sub
jge
icebp
xor
jb
jmp
adc
scas
xor
sub
rcll
jmp
inc
shll
xor
mov
jno
dec
mov
out
lea
jb
sub
lods
mov
xorb
pop
xchg
imull
ret
mov
insl
std
ret
scas
icebp
pusha
divl
in
dec
popf
in
cmp
rol
sub
push
ds
sub
ja
out
fldt
push
in
push
mov
in
out
xchg
inc
in
jmp
jb
xchg
std
adc
ss
rdtsc
shlb
jae
add
add
stos
jb
out
pcmpeqb
shlb
das
jmp
test
psubsw
and
cmc
push
jae
in
jns
push
loope
outsb
sti
daa
je
ljmp
imul
add
adc
scas
mov
out
jne
push
jne
iret
aaa
popf
jb
mov
popf
xchg
icebp
cmp
jb
jb
push
or
jae
test
push
push
mov
add
adc
inc
stos
call
xor
sbb
mov
std
mov
xor
sbb
xor
imul
aaa
sbb
mov
inc
leave
sbb
push
test
add
popa
mov
jmp
push
jmp
bound
addb
push
sbb
inc
xor
mov
or
jl
lods
in
loop
imul
jb
jae
jl
icebp
loope
hlt
cmp
test
sub
popa
sub
out
popa
popf
imul
pop
jns
dec
ss
mov
mov
xchg
mov
sub
mov
jb
call
xchg
mov
out
add
cmpsb
pushf
dec
cs
mov
std
xchg
leave
fnsave
add
lods
je
add
mov
jmp
repnz
mov
hlt
sub
cmpsb
cs
xor
outsl
ss
jmp
test
jle
ja
jne
jmp
loope
jbe
mov
or
iret
jno
mov
mov
pop
imul
add
fwait
and
adc
and
popf
adc
xor
insl
pop
stc
lcall
cmpsl
adc
inc
and
fnstsw
mov
push
lods
stos
ss
movsb
jecxz
or
pop
push
push
movsb
mov
sub
xchg
jne
mov
call
scas
sbb
ja
addr16
outsl
lahf
scas
mov
je
out
imulb
in
jno
lcall
stos
imul
xchg
je
jns
mov
cmc
shrl
jo
lods
outsb
repnz
jno
aaa
mov
cmp
ds
lss
repz
cmp
push
imul
mov
mov
mov
adc
fwait
shl
push
insb
fwait
and
shr
out
divb
mov
ss
fwait
out
scas
or
add
ss
push
jae
mov
cs
sbb
mov
fnstcw
push
mov
xorl
cltd
imull
mov
inc
jmp
xor
jle
jle
pushf
push
xchg
or
ljmp
xor
sti
nop
loop
icebp
imul
xchg
jb
xor
inc
ss
mov
mov
pop
imull
xorl
in
dec
jecxz
push
subb
test
cmp
push
jmp
push
mov
cmp
fnstsw
xchg
je
imul
mov
or
jmp
jle
je
push
xor
ljmp
add
lock
hlt
xor
mov
jecxz
cmp
test
das
mov
jo
in
jo
mov
xor
jl
adc
out
out
jns
xor
inc
scas
mov
xor
xor
icebp
mov
adc
stc
fstps
shrl
adc
outsb
cmpsb
xor
inc
insb
lods
jns
adc
sbb
push
sub
loopne
insb
xor
mulb
lea
lods
xor
add
jmp
push
outsl
out
repz
insl
add
and
imull
push
out
sub
jno
scas
and
xor
insb
mov
xchg
mov
sub
das
add
push
test
jl,pn
test
add
outsl
adcb
jge
in
add
rolb
jae
imul
jne
mov
add
mov
sub
inc
cmp
push
xor
add
jno
adc
subl
push
cli
mov
add
subl
data16
js
addb
pop
icebp
imul
push
mull
adc
mov
add
mov
hlt
insl
and
mov
ja
in
sub
push
push
jne
repz
stc
mov
jmp
pop
repz
cmc
jne
popa
data16
scas
xor
aad
mov
dec
scas
addr16
xchg
cltd
imulb
and
subl
out
test
ja
xor
push
cmc
aas
add
stc
repz
cs
jb
cmc
test
imul
inc
xor
imull
out
jbe
loop
mov
jno
call
mov
dec
push
xchg
xor
jmp
ljmp
repz
add
sub
jp
jb
xor
call
test
push
cmc
fdiv
push
flds
sub
hlt
and
xchg
test
out
std
xor
jb
imulb
cli
hlt
or
fiadds
stos
cs
cs
jno
adc
in
insl
adc
xor
icebp
pop
add
adc
inc
ljmp
add
icebp
sub
add
sub
fistps
iret
xor
mov
push
dec
icebp
jge
fildll
cld
out
mov
cmp
jno
sub
pop
adc
aas
sbb
jno
scas
cs
shrb
ja
orl
or
insl
out
xchg
xchg
jg
dec
push
icebp
xor
js
aas
dec
lahf
repz
pop
xchg
movlps
jg
ret
jno
icebp
in
xchg
jne
icebp
icebp
jno
jge
sti
dec
or
ljmp
jne
out
aad
das
sub
sub
das
fbstp
or
jg
out
das
mov
stc
out
xor
out
or
leave
dec
or
repz
dec
jns
pop
popf
int
outsb
call
dec
pop
int
add
mov
add
xlat
in
repz
sbb
lock
call
rcrl
mov
insb
int
clc
push
movsb
jecxz
stos
data16
notb
add
lock
imul
inc
mov
xor
gs
lcall
pop
inc
flds
fwait
sub
scas
mov
push
jmp
das
pop
dec
mov
repnz
cmp
push
jbe
add
dec
repnz
mov
out
mov
xchg
repz
bound
in
dec
sub
shl
inc
inc
cmp
rclb
xchg
mov
icebp
test
stos
jns
adc
int3
lock
mov
add
add
push
dec
shll
shrb
hlt
sarl
outsl
icebp
pop
insb
loopne
stos
and
cmp
sbb
in
lods
jno
repnz
sub
cmp
mov
dec
das
repnz
test
aas
leave
xchg
out
mov
scas
and
push
rcr
lods
stos
stc
icebp
dec
sub
push
addl
sub
jg
xchg
sub
jp
scas
inc
icebp
mov
cmovo
js
mov
int
notb
add
or
repnz
adc
and
adc
dec
xlat
ds
cmpsb
cmpsb
jb
out
imul
cli
jg
popf
repz
xchg
call
scas
stc
es
sub
sub
mov
cs
adc
lahf
aaa
mov
or
mov
jae
mov
cmpb
rcll
jno,pt
imull
xchg
mov
jmp
cmp
dec
mov
pop
inc
push
mov
mov
pop
sub
push
subl
inc
pop
testb
adcb
icebp
lods
imul
and
nop
scas
scas
adc
stos
inc
jg
adc
ret
dec
icebp
pusha
dec
test
sub
sahf
mov
nop
outsl
insb
mov
icebp
imul
pusha
loop
add
xor
xchg
repnz
call
pop
scas
push
mov
jno
loop
scas
xor
and
mov
xor
add
sub
dec
or
adc
adc
pop
sbbl
outsb
add
gs
jmp
pop
stos
xor
jns
stc
mov
mov
sbb
push
push
jne
cli
add
call
adc
div
outsl
mov
je
icebp
out
mov
cs
add
das
int
in
insl
cs
ss
pop
jmp
mov
pop
jb
sub
shrl
mov
icebp
cmp
push
jmp
sub
outsb
jne
add
ljmp
subl
cmp
add
movsl
imul
push
addr16
mov
ljmp
push
js
fistpll
adc
ljmp
jae
sbb
imul
outsl
or
push
jge
jge
sub
sub
jl
int3
push
in
lods
push
jmp
lea
insl
or
xor
sub
inc
ds
ror
pushf
cmp
lods
mov
int3
lods
shr
aas
pushf
or
orl
fldcw
js
out
outsb
outsl
out
pop
add
movq
add
ss
or
push
sub
sub
and
lds
out
or
xor
scas
cmpl
pop
and
or
mov
test
dec
dec
fistps
xor
mov
fmulp
inc
fildll
jg
js
test
mov
xor
imul
loope
scas
jb
jmp
jno
aad
sub
pop
xchg
repnz
sub
jl
xchg
add
add
push
add
jg
jns
jne
mov
cli
test
ljmp
jg
stos
outsb
push
outsl
nop
mov
aaa
xorl
je
hlt
mov
jno
ja
cmpl
sti
mov
cmovl
and
mov
in
fld
sub
dec
pop
fxch
sarb
insl
imul
imul
adc
jbe
cmc
insl
cs
ss
jl
test
movsb
add
cs
loopne
sub
ljmp
cmc
add
divl
xchg
xchg
and
adc
cld
test
xor
imul
sub
insl
mov
push
daa
jno
mov
fyl2xp1
rcrl
std
data16
dec
mov
xor
mov
flds
inc
rorl
sbb
add
mov
in
gs
test
dec
adc
sbb
add
icebp
mov
sub
scas
mov
in
sub
imul
or
sub
or
subl
adc
mov
inc
xchg
hlt
inc
push
sbb
imul
scas
fisttps
dec
mov
sub
shll
mov
add
sbbl
add
add
and
rcll
mov
shll
lods
xor
comiss
dec
and
jns
push
insl
stc
scas
or
mov
jne,pn
cld
xchg
dec
ja
or
insl
pop
stos
fdivrs
int3
out
jae
stos
and
div
lock
mov
jge
iret
sahf
lods
popa
fdivrs
pop
scas
add
lea
aad
xchg
xchg
scas
push
adc
std
fdivs
inc
mov
pop
cltd
ret
cld
vpor
std
push
neg
pusha
mov
xchg
adc
adc
and
push
mov
outsb
sahf
jae
lock
loope
push
das
outsb
inc
jae
xchg
xor
icebp
imul
mov
jno
dec
push
xor
dec
push
jle
cltd
jb
scas
jb
mov
out
es
subl
std
nop
sub
in
xchg
dec
dec
icebp
pop
xor
add
xchg
ret
fs
mov
xchg
in
add
xor
xchg
mov
iret
push
jp
and
push
inc
les
xor
in
adc
jno
pop
stos
mov
loop
stos
call
mov
fidivs
adc
sub
ljmp
lock
cmp
mov
mov
dec
inc
pop
push
shrl
ret
mov
xorl
lock
outsb
lods
mov
sub
leave
cmp
mov
inc
jp
scas
sub
sub
push
sub
mov
xor
add
inc
aad
mov
fnsave
popl
adc
sub
iret
int3
jg
test
inc
jg
cmp
imul
sub
jg
xor
add
gs
push
bnd
imul
adc
jno
scas
aad
adc
add
icebp
xor
jbe
xor
test
sub
adc
mov
xchg
insb
idiv
je
adc
sbb
cmc
push
sub
leave
or
add
inc
mov
test
mov
das
in
cmc
xor
xchg
test
cwtl
cmp
xor
inc
gs
ret
ss
aas
push
xlat
jmp
repz
icebp
dec
pop
insb
cmp
je
adc
xchg
sub
sub
adc
jno
andl
pop
dec
pusha
insl
xor
pop
xor
add
adc
popa
jb
pusha
sub
add
jmp
pop
pop
add
aam
jae
push
stos
jne
repnz
adc
xchg
push
popf
punpckhwd
cmp
nop
pop
iret
sub
jae
add
scas
fisttpll
push
dec
out
push
std
xor
dec
int
add
xor
int
ja
push
outsb
jne
lock
sbb
cmp
mov
cmpsl
lcall
inc
lret
cld
mov
addl
test
lock
cld
lock
sub
orl
test
add
xor
shll
and
inc
or
popf
adc
lds
xorl
or
movsl
test
adc
aam
xchg
std
aas
ds
push
add
sub
xchg
pushl
sbb
or
fnsave
cmp
push
outsl
xor
inc
cmp
jmp
arpl
hlt
sarb
pop
addr16
adc
out
fisubrl
icebp
cmp
jp
pushf
ds
leave
in
xor
in
scas
div
mov
in
subl
sbb
or
mov
push
xor
cld
sbb
lahf
fwait
pushl
jmp
pop
xchg
or
mov
lods
sub
and
scas
outsl
adc
xchg
cmp
in
arpl
mov
sub
mov
fisubrs
jbe
jb
sbb
adc
ds
xchg
insb
jg
iret
das
jnp
pop
fsubrp
into
jne
fidivs
jle
or
mov
psubd
push
imul
pop
mov
int
sbb
pop
xchg
divb
insb
int
call
div
ds
scas
push
lahf
insb
into
out
ror
dec
sbb
in
fcoms
xor
jmp
ja
loope
add
sbb
mov
add
out
push
int
pshufw
sbb
rolb
popa
sub
je
jecxz
js
stos
mov
adc
pop
xor
push
xor
or
dec
xchg
add
cli
mov
mov
pop
dec
lock
jp
mov
adc
or
xchg
dec
repnz
lret
jecxz
cmpsl
sub
hlt
cmp
sahf
pusha
test
das
add
lea
add
imul
xchg
push
or
lock
jge
sub
mov
js
and
mov
pop
dec
push
jecxz
push
repz
mov
or
mov
add
aaa
repz
iret
pop
mov
shlb
orl
sub
dec
scas
js
sub
int
push
xor
fs
test
push
imul
fisubrl
jmp
rorl
xor
lret
pop
or
hlt
outsl
inc
pop
loope
pop
sbb
int
or
std
in
insl
mov
push
push
sbb
pop
std
cli
sub
jecxz
add
jae
repnz
xlat
and
fisubs
sub
in
sarl
push
dec
into
jmp
add
sub
sub
jle
xor
jno
outsb
sub
mov
repnz
ret
lock
push
scas
rcr
aas
andb
out
enterw
jb
sub
int
and
in
stos
imul
rcll
mov
outsl
xor
aas
das
jns
jno
aam
cltd
iret
fsubrs
or
mov
adc
bound
insb
add
test
push
call
ja
or
push
mov
int3
in
in
pop
pusha
outsl
adc
pop
loopne
push
push
mov
fmull
jno
mov
lea
int
mov
or
insl
xchg
ficompl
mov
mov
dec
in
bound
adc
mov
out
jmp
sti
xor
push
sahf
ffree
sbb
adc
push
lret
mov
inc
repnz
repnz
lods
add
add
outsb
mov
jl
rclb
syscall
sbb
sub
test
test
pop
xor
sub
mov
xor
xor
mov
subb
cltd
mov
sub
jno
jno
stc
test
adc
mov
xlat
fnsave
push
das
jmp
adc
mov
repnz
or
imul
repnz
loop
push
fcmovbe
push
pop
push
sbb
adc
dec
sahf
or
jmp
ja
call
add
push
fdivl
shll
jmp
pop
imul
xchg
adc
mov
fisttpll
mov
call
xor
or
dec
fisubrs
dec
icebp
sbb
stos
idivl
je
xor
cmpsb
lret
cmc
adc
jne
cmp
jge
repnz
xchg
xor
ds
cmp
xor
dec
sbb
adcl
adc
loope
push
outsb
cld
xchg
pop
sahf
outsb
add
mov
jae
adcl
push
push
mov
or
stc
jae
dec
insb
adc
jns
fldenv
lods
hlt
pop
push
xor
std
pop
jae
xchg
cld
clc
ss
xor
imul
push
xor
mov
mov
jbe
sbb
aas
nop
dec
es
sub
push
jmp
adc
sub
push
dec
mov
leave
pop
pop
adc
ss
outsl
sub
cmc
mov
pop
push
jno
add
add
adc
es
imul
outsl
add
sub
mov
out
loop
xchg
mov
pop
push
jg
add
fcmovnu
aas
out
sbb
int
jne
push
js
out
cs
outsl
jne
pushf
pop
test
sub
std
sbb
fidivl
cld
push
mov
lods
cmp
repnz
das
popf
cwtl
pop
sub
sti
das
cld
add
test
mov
xor
mov
and
push
jge
pushf
jae
out
dec
and
imulb
ss
in
adc
jno
je
pop
or
aaa
shlb
insl
and
sub
insb
mov
inc
lods
je
push
jg
sub
jo
jg
dec
shrl
sub
xor
jg
mov
cltd
repnz
pop
jmp
icebp
mov
stos
movsl
andl
push
in
jge
jb
loop
adc
inc
push
pusha
lods
mov
push
fdivr
rcrb
lea
xorl
pop
or
aaa
popa
jb
push
popf
adc
int
lods
xchg
icebp
push
imul
lock
pop
daa
or
rorl
shlb
xchg
cli
xchg
lock
and
test
orl
rcrb
test
stos
or
fistps
cmpsb
or
insb
dec
sub
insb
inc
repnz
je
pop
add
xor
enter
lcall
sub
mull
mov
xor
je
stos
sbb
lcall
ja
dec
pushw
icebp
in
push
insl
int3
cmp
int3
std
inc
jbe
test
sub
lods
pop
add
lods
push
cltd
jnp
out
mov
jge
cli
adc
push
not
fldl
sbb
cs
nop
sarl
scas
outsl
lea
jp
push
dec
sub
xor
fildll
int
int3
pop
scas
enter
jb
sti
push
pop
adc
out
in
jno
fisttps
stos
mov
adc
xchg
insb
mov
ljmp
mov
das
notl
nop
dec
jmp
adc
call
mov
loope
xlat
xchg
imul
xor
mov
stos
faddl
andl
ds
lock
jns
mov
add
sub
mov
xchg
insl
outsl
popf
add
popf
out
pop
lods
or
sbb
nop
mov
ret
jecxz
mov
adc
dec
lods
cmp
lock
mov
inc
lock
stos
mov
idivl
fsubrs
dec
sub
pushw
push
je
jmp
insl
fstpl
mov
popf
cli
or
sub
mov
push
scas
lock
iret
decl
out
divb
xor
mov
mov
popf
loope
adc
or
or
and
pop
sub
negb
xor
adc
ljmp
in
les
lock
sub
fisttpll
rorl
faddl
push
pop
lds
call
add
cld
cmc
fadd
test
xor
push
sbb
hlt
lret
xchg
in
aad
mov
lods
std
scas
mov
fcoml
div
lods
or
testl
movsb
adcb
and
pop
mov
insw
call
call
dec
lods
pop
and
outsb
movsb
jne
dec
pop
inc
scas
dec
xchg
out
cmp
sub
mov
adc
jnp
popf
addr16
dec
icebp
mov
cs
imul
mov
mov
ja
test
xchg
rcl
scas
jg
xlat
lcall
jb
jecxz
xchg
push
int
jne
cltd
aad
int
dec
jmp
outsl
dec
jecxz
sub
rorl
xor
adc
scas
fnstsw
ret
and
mov
sub
jge
imul
jne
enter
sub
dec
xor
ljmp
stc
jae
adc
mov
dec
adc
dec
lods
mov
iret
sub
rcrl
out
pxor
lods
jae
xor
jle
call
test
sbb
imul
jb
adc
dec
pop
sub
jle
mov
ds
jge
push
in
aaa
cmp
outsb
out
insb
popf
stos
mov
xchg
mov
scas
icebp
push
add
push
sbb
push
mov
insl
stc
pop
pop
xchg
imul
sahf
adc
addr16
dec
into
mov
imul
add
xor
adc
or
lock
or
adc
mov
add
and
xor
adc
or
or
fiaddl
xchg
jmp
rclb
call
int3
mov
notb
imulb
dec
lahf
ljmp
into
mov
mov
aam
insb
mov
or
fmuls
or
out
sub
or
mov
and
xor
sbb
jne
js
loope
jl
scas
cmp
popl
push
sub
and
popf
cwtl
in
mov
mov
sub
jge
out
and
in
or
inc
push
adc
icebp
clc
cmc
push
jne
repz
shrb
repnz
or
dec
imul
int
jne
lcall
push
xor
add
scas
cmp
in
in
pusha
pop
mov
loop
mov
int3
ds
stos
jbe
test
outsl
jecxz
jae
push
or
mov
call
fisubl
ja
add
into
js
popf
mov
push
sbb
sub
jo
out
cmp
rdtsc
xor
adc
cmpxchg
xor
lods
in
outsb
xchg
mov
or
icebp
and
jle
pop
cmp
ficoms
dec
rorl
cmc
repnz
mov
mov
mov
lods
ss
std
push
mov
push
xor
sub
xorl
cli
mov
sub
cwtl
xor
pop
jle
cmp
push
jnp
jle
pusha
notl
std
addl
scas
insb
call
loop
sub
jae
mov
or
loop
adc
xor
sub
push
mov
hlt
cltd
icebp
adc
jp
icebp
mov
jmp
icebp
add
das
sbb
stos
icebp
lock
fsubs
cmp
pop
push
inc
inc
fnstenv
jne
sub
stc
dec
pop
jb
mov
arpl
pop
cmpsl
adc
push
shll
sub
mov
hlt
js
lock
sub
and
fwait
arpl
adc
push
lock
xchg
imul
pusha
jne
cmc
iret
mov
lods
movsl
in
mov
mov
repz
mov
mov
dec
addl
fistps
xor
movzbl
jae
test
add
push
mov
jl
test
loop
xor
jae
dec
lret
jl
sub
and
push
pop
mov
pushf
inc
mov
je
icebp
shrl
mov
repnz
push
repnz
mov
nop
enter
ljmp
ficoms
mov
scas
jns
adc
stc
inc
adc
punpckhwd
dec
int
push
mov
lock
cltd
imul
sbb
ljmp
ja
mov
gs
das
call
jns
or
repz
cmp
popf
xchg
repnz
je
xor
sub
jge
icebp
movsb
push
lods
ss
mov
mov
pop
inc
insl
adc
cmp
fstl
sub
push
xchg
sbb
ret
lahf
js
outsb
or
incl
aas
sub
add
mov
adc
sub
hlt
int
sbb
rorl
int
fsubrs
or
add
outsb
insb
iret
orl
adc
jecxz
int
int
arpl
mov
gs
xchg
cwtl
pop
in
pop
icebp
xorl
xchg
xor
call
add
cmp
rorl
stos
dec
sub
clc
push
iret
xchg
jae
sbb
cmp
mov
add
xchg
cmp
mov
xor
sub
dec
in
sbb
xor
pop
push
or
push
lret
insl
add
xor
int
mov
int
sbb
or
push
imul
adc
add
add
popf
int3
dec
test
cmp
cli
test
in
das
pop
je
repnz
out
ja
das
cmp
icebp
jb
xchg
call
adc
add
cmp
ret
jb
insl
mov
jno
jno
mov
adc
push
mov
ret
mov
stos
or
inc
xorl
add
xor
xchg
jns
ficoms
xchg
pop
lea
xor
sub
or
xchg
mov
iret
inc
in
add
insl
dec
or
mov
orl
jnp
jne
std
adc
adc
shrl
lds
jno
adc
mov
mov
stos
or
push
icebp
dec
dec
xchg
xor
icebp
ds
pop
psllw
cmp
insb
mov
add
sub
xor
sbb
add
sub
xchg
ficoms
adc
add
mov
cmp
sub
adc
fnsave
insb
push
insl
push
lods
aaa
xor
mov
xor
mov
cli
push
and
or
lcall
xchg
insb
arpl
or
cwtl
adc
sub
or
xchg
xchg
xor
jge
stos
arpl
and
sub
xchg
movsl
jno
push
sahf
icebp
and
scas
adc
icebp
dec
sub
mov
xor
insb
mov
or
jle
xor
scas
out
inc
cli
dec
push
mov
in
loope
push
dec
ds
enter
loopne
imull
dec
mov
stc
adc
cmp
push
test
cmp
xchg
and
in
dec
out
sahf
adc
test
xor
add
xor
xchg
ds
inc
dec
adc
jl
lods
sub
jae
sbb
cmpsl
inc
scas
adc
out
mov
mov
push
push
push
mov
test
jbe
sub
pop
das
adc
mov
nop
std
mov
xlat
inc
imul
sahf
mov
inc
dec
fcomp
jae
mov
das
sub
dec
test
xor
addr16
mov
jb
mov
sub
out
mov
jecxz
jno
pop
outsb
xchg
mov
push
popf
ret
xchg
adc
dec
rcrb
dec
pop
imul
imul
subl
adc
inc
jge
adc
stos
scas
scas
int
dec
stos
mov
loop
cmc
bswap
dec
lock
or
lock
stc
sti
sub
addl
mov
idivl
imulb
test
xchg
pop
push
jmp
lret
insb
jbe,pn
or
jg
jb
aaa
lahf
out
push
repz
push
inc
fldl
repz
xor
scas
mov
lods
repz
lock
js
push
int
push
jns
adc
cs
sub
xor
push
mov
shlb
std
or
aaa
ljmp
cmpl
ds
push
scas
add
cmc
stc
int
lahf
jle
add
lods
imul
inc
hlt
cltd
imul
std
push
scas
lret
fisubrs
mov
or
icebp
lea
out
test
fnstsw
pop
test
xor
pop
jmp
jmp
or
add
repnz
ds
adc
lods
push
dec
outsl
addl
in
pop
scas
orl
jae
mov
xchg
xchg
test
stos
pop
pop
push
mov
adc
fwait
jae
icebp
sub
loope
dec
imul
jge
test
adc
in
sub
lea
loope
push
das
mov
shlb
icebp
and
sti
sub
jb
mov
inc
pop
insb
and
mov
pop
arpl
fidivrs
cmp
test
cld
imul
push
push
ss
je
imul
lods
or
adc
scas
xchg
add
rep
pop
pop
jns
mov
enter
push
push
and
lods
in
sbb
repz
jecxz
jmp
mov
ficomps
or
sbb
xor
lret
adcl
jae
insl
sub
push
ret
dec
mov
in
jge
jmp
cmovp
mov
dec
push
sub
pushl
sub
mov
xchg
push
push
adc
outsl
xor
adc
outsl
or
mov
divb
fidivl
pop
icebp
out
es
sub
mov
xor
aad
fdivrs
dec
je
or
mov
int
sub
mov
pop
stc
scas
cmp
mov
insb
insl
adc
sarl
jno
je
sub
adc
mov
sub
lret
test
sbb
mov
popa
pop
scas
sub
dec
push
repnz
mov
leave
fcoms
sbb
or
lock
outsl
daa
out
ss
lods
lfs
pop
int
pop
add
xor
insb
mov
push
mov
shl
mov
in
cltd
bnd
in
adc
out
dec
adc
jle
jg
push
popf
in
push
insb
arpl
shr
sub
jno
push
mov
iret
jmp
fwait
or
repz
lods
sub
fiaddl
lret
clc
mov
in
icebp
adc
out
xor
add
jno
outsb
mov
add
sbb
push
ss
enter
stos
or
popf
cmc
lcall
fstpt
push
adc
notl
daa
xor
mov
sub
arpl
orl
lock
xchg
int
std
sub
xchg
in
inc
ds
inc
xchg
out
mov
call
cmp
xchg
repz
iret
outsb
aaa
adc
das
je
shll
sbb
enter
xor
test
dec
cmp
ljmp
imul
cmp
add
dec
xchg
in
xchg
bound
push
mov
div
rep
ja
jle
aaa
clc
add
ret
repnz
dec
inc
jle
std
mov
xchg
jnp
adc
repnz
into
pop
xchg
add
xor
cs
std
or
ljmp
pop
push
testb
outsb
in
push
cwtl
jae
testb
jmp
lret
lods
and
lret
ficoms
sbb
in
call
addr16
or
repz
xor
or
pop
shl
cs
push
cs
shl
add
lret
popa
jmp
pop
xor
and
repz
push
das
sub
mov
xchg
in
iret
rorb
subl
jae
sub
add
fstpl
ds
repnz
dec
xlat
andl
pop
icebp
add
pop
mov
inc
out
fdivrs
dec
iret
out
mov
into
mov
stos
xor
cmc
outsl
jae
or
inc
jae
aas
out
insb
jmp
iret
cmp
jae
and
in
lods
js
push
pop
mov
lahf
sub
xchg
jmp
insl
mov
xchg
fs
xor
push
cmpsl
mov
leave
cld
jmp
dec
jb
imul
xor
xchg
outsb
jmp
cmpl
xor
lods
outsb
incl
xor
dec
lahf
sbb
cmp
stos
scas
into
jmp
frstor
jb
jae
dec
ss
insl
int
outsb
sub
scas
ja
mov
jae
lods
std
imul
inc
mov
into
js
pop
xor
outsb
mov
jns
pop
xor
sub
jae
ds
insl
icebp
lahf
add
cltd
icebp
test
jg
cs
jmp
cwtl
xchg
ljmp
adc
outsl
adc
sbb
cltd
fimuls
sahf
scas
or
pop
jle
mov
inc
in
test
jne
test
insb
sbb
xchg
out
jno
imul
test
sub
insl
pop
or
xchg
cmc
jae
inc
insb
jae
leave
and
push
lods
imul
sbb
jmp
mov
lcall
mov
test
inc
loop,pn
xchg
outsb
adc
sub
psubusw
mov
cs
xor
fwait
ret
jb,pn
ds
sub
adc
push
add
pop
mov
push
dec
jp
xlat
in
push
sub
bound
xchg
or
stos
dec
xchg
xor
mov
idivb
mov
pxor
adc
loope
xchg
add
stc
add
dec
xor
aad
je
xorl
xchg
mov
xchg
mov
push
fidivs
jbe
mov
mov
rcrb
out
cmp
sahf
jns
pop
or
push
lea
repz
enter
mov
popf
scas
int
or
clc
push
pop
adc
adc
icebp
and
outsl
cltd
lahf
sbb
insl
decl
imul
pop
fdivr
out
jmp
sbb
ljmp
inc
aas
mov
or
xchg
scas
sub
mov
icebp
mov
dec
insb
xor
in
jmp
pop
into
mov
outsb
mov
or
cmp
push
int
lods
sub
inc
dec
out
xor
xchg
popa
dec
stos
sbb
sub
or
or
jb
into
sub
lods
lods
mov
inc
pop
popf
push
sub
xor
loope
add
xor
outsl
mov
cli
daa
pop
out
mov
std
dec
leave
shlb
std
mov
pushf
cmp
stc
int
pop
outsb
ljmp
test
mulb
xchg
dec
xlat
outsl
mov
subl
dec
xchg
sbb
cs
and
sbb
in
sbb
lock
sbb
xchg
sub
mov
jae
jmp
in
xor
ror
repnz
mov
mov
ss
icebp
cmp
inc
and
scas
ds
inc
das
mov
repnz
mov
pop
ds
mov
inc
sti
or
stos
sub
inc
pop
int
mov
and
dec
outsl
jae
addb
cltd
outsb
or
dec
insl
loope
iret
push
pop
stos
xchg
mov
dec
cmc
mulb
sbb
pop
mov
insb
mov
push
stos
outsb
je
sub
in
mov
cmp
in
xor
fmulp
xchg
or
dec
xchg
or
add
in
mov
scas
cmp
cmp
mov
mov
jns
js
int
lret
sub
mov
mov
scas
aad
or
xchg
inc
or
xchg
sbb
xor
sub
stos
testb
rcrl
xchg
xchg
test
add
ja
add
pop
xor
cmp
xor
cwtl
ja,pt
lock
icebp
rcrb
add
inc
imul
add
inc
out
subb
cmp
icebp
test
xlat
jo
jmp
icebp
xchg
or
imul
pop
jmp
xor
mov
std
out
mov
xor
dec
cmp
xor
and
hlt
add
orl
insl
repz
adc
rorb
imul
call
jb
ljmp
mov
cld
mov
xchg
loopne
xorl
shrb
notb
jp
outsl
outsb
lea
and
mov
xor
add
xor
lods
outsb
jp
std
cmp
lret
popa
sarl
sub
dec
pop
stc
aam
das
ljmp
adc
xor
mov
stos
xor
shlb
je
push
imul
sbb
in
sub
scas
adc
rep
sub
and
inc
push
lahf
xchg
mov
lods
mov
push
mov
cmpsb
in
xlat
fidivl
mov
outsb
stos
leave
icebp
cmp
mov
add
ds
cmp
xor
insl
int
imul
aas
push
lahf
repnz
in
outsl
xor
dec
mov
sbb
aas
ret
push
dec
scas
in
int3
push
sbb
or
push
lret
pop
adc
scas
jo
xchg
out
lea
sarl
dec
push
icebp
mov
test
pushf
xor
mov
subl
andb
dec
sub
rcl
push
pop
icebp
cmp
arpl
das
pop
xor
adc
mov
pop
pop
out
pop
loope
subb
and
cmp
out
lea
rep
sub
lcall
xchg
out
sarl
adc
insl
std
clc
mov
ficomps
cwtl
xor
mov
mov
loopne
adc
fwait
mov
pop
out
sub
scas
call
xor
int3
ds
adc
add
gs
cmc
pushl
shrl
mov
jecxz
dec
ljmp
sub
idivl
insl
dec
popa
xor
popf
shr
popl
jae
xorl
aas
mov
icebp
cmpl
aad
rdtsc
jmp
les
adc
push
adc
in
ljmp
or
push
sub
lock
mov
sbb
repnz
lea
call
add
jle
pop
pushf
maskmovq
mull
push
push
addr16
leave
mov
or
cli
push
into
test
push
xor
std
mov
outsl
and
lret
jmp
xor
icebp
or
sub
mov
sub
jecxz
push
cli
mov
shr
popa
xor
loop
push
mov
call
jge
inc
hlt
jns
call
cli
aaa
cmp
adc
jl
mov
leave
test
inc
push
mov
sti
lock
test
scas
mov
loop
insl
mov
fnstsw
fmuls
icebp
sub
mov
push
add
pop
loop
dec
iret
mov
js
dec
lahf
sub
cmpl
testl
insb
iret
dec
cmp
xor
or
shl
cmp
in
jae
pop
mov
fcmove
push
jb
dec
inc
fcoms
jp
repz
pop
out
test
push
push
scas
icebp
dec
add
add
dec
mov
xchg
das
xchg
pushl
mov
jo
pop
aaa
mov
call
cs
or
sbb
adc
adc
nop
std
sbb
mov
mull
jo
sarb
xchg
mov
pop
xchg
int
xchg
xchg
jmp
in
sahf
lods
hlt
mov
mov
or
fdivrp
sarb
jl
repnz
mov
or
mov
mulb
rcr
mov
lods
outsl
or
mov
scas
or
mov
cmc
mov
jmp
popf
ljmp
ds
mov
ror
cmp
daa
out
clc
push
adc
lea
sub
add
push
jb
mov
or
adc
adc
test
std
ljmp
mov
adc
sub
mov
fucomp
loop
adc
add
outsb
sub
mov
aas
cmc
pop
cld
or
imul
in
mov
test
jmp
mov
hlt
nop
clts
in
clc
dec
jle
or
cld
test
dec
sub
or
or
adc
sub
repnz
jns
push
or
js
stos
sub
test
out
orb
pop
repz
adc
aaa
dec
cmp
jns
or
mov
cmpl
je
sub
hlt
fimuls
and
or
push
xor
xor
outsb
imul
inc
sub
je
stc
scas
scas
xor
scas
pop
in
xor
stos
ljmp
mov
xor
pop
jae
mov
inc
mov
adc
icebp
add
sbb
jge
repnz
xor
or
fisubl
sbb
inc
sub
test
repnz
add
xor
xchg
push
mov
dec
stos
cmp
mov
imul
int
mov
loopne
mov
hlt
mov
xor
or
push
cltd
sbb
hlt
int
in
cmpsl
sbb
lcall
and
lods
mov
sub
mov
xor
idiv
jmp
ret
add
aaa
add
idivb
call
paddusb
lods
mov
xor
xor
lret
insl
adc
es
push
jae
cmp
and
cmpl
lods
in
ljmp
icebp
push
sub
dec
std
cmp
and
inc
test
mov
pusha
mov
jae
cmp
push
test
jmp
sbb
inc
mov
inc
shll
addr16
jmp
sub
mov
xchg
aaa
dec
push
and
xchg
mov
xchg
adc
int
mov
es
dec
sbb
lods
mov
js
mov
xchg
jmp
in
fimull
nop
hlt
push
dec
out
arpl
jno
lock
mov
mov
xorl
xor
mov
push
mov
or
mov
test
jne
sub
xor
cmc
or
adc
and
jmp
rcr
xor
or
adc
lahf
ljmp
je
icebp
aad
inc
xchg
int
dec
adc
xor
sbb
or
sbb
sub
mov
xchg
xor
pop
aaa
dec
lods
xor
sub
outsb
shll
xor
mov
test
stos
mov
xor
dec
push
movsl
ss
pop
lods
addr16
shrb
test
int
sbb
mov
xor
test
loope
ret
ss
jae
or
jmp
adc
jo
push
xor
outsb
xor
mov
js
subb
icebp
outsb
xchg
jge
sub
push
push
mov
xlat
mov
mov
jmp
in
out
sub
xor
xor
lss
cmc
cli
scas
orb
inc
mov
jmp
jb
jp
or
inc
jg
jno
scas
sbbl
out
je
stc
repz
lods
call
adc
mov
testb
or
mov
push
adc
dec
push
xchg
mov
adc
sub
arpl
sub
icebp
scas
je
xor
dec
adc
fldpi
add
push
mov
packssdw
sub
in
nopl
icebp
inc
shlb
in
or
pop
aas
mov
mov
out
fnstsw
insl
mov
test
inc
jnp
test
jae
aaa
dec
lcall
xor
mov
adc
jp
pop
jp
test
xor
out
jle
aas
repz
mov
push
testl
mov
adc
xor
jp
pop
stc
aaa
jb
xchg
jg
fs
xchg
add
scas
test
xor
ss
cmp
ds
adc
xor
or
push
insl
insl
push
sub
hlt
mov
pop
scas
fidivs
dec
cld
test
xor
jge
sub
mov
cmp
jae
jbe
insb
sub
adcl
divb
sub
sar
sub
test
pop
lods
imul
or
mov
xor
adc
dec
insb
int
scas
pop
cltd
daa
into
adcl
insb
pop
cltd
pop
or
mov
jae
jge
cwtl
in
addr16
jae
mov
lods
je
leave
bound
xor
adc
or
mov
aaa
or
cmp
fistps
add
pop
jle
ds
icebp
or
ja
sub
fcmovnbe
dec
dec
sahf
mov
call
frstor
mov
jl
add
mov
push
jb
jae
jne
sub
push
mov
popa
xacquire
add
dec
pop
fsubs
testl
and
icebp
in
scas
cmp
inc
fidivs
inc
xor
inc
push
in
jbe
mov
jns
out
push
sbbl
shrl
mov
clc
dec
fsubrp
rorl
bound
je
sub
jne
jmp
push
dec
scas
or
dec
push
or
out
cmp
sbb
adc
or
imul
jle
push
add
cwtl
ret
outsl
pop
je
or
xchg
mov
xor
pushf
adc
adc
imul
insl
call
sahf
int3
imul
adc
fcmove
push
xor
xlat
std
lock
pop
in
int
jmp
sub
icebp
std
repz
mov
shr
nop
scas
mov
xchg
pop
jmp
ja
in
and
scas
stc
jbe
xchg
outsl
jb
and
lock
cld
mov
jae
call
enter
out
push
enter
lods
ret
cli
mov
cltd
lea
lea
mov
inc
mov
inc
inc
outsb
ret
out
insb
movsl
sbb
cmp
pushf
je
push
dec
xor
sbb
lret
inc
mov
jle
out
push
sub
cwtl
lahf
sbbb
mov
or
xchg
imul
xchg
mov
mov
outsb
or
sub
or
insb
in
mov
out
or
mov
mov
cmc
sbb
cwtl
icebp
xor
jg
xor
jb
jns
and
pop
int
imul
out
push
adc
lea
lds
mov
cmc
out
inc
int
inc
pop
mov
scas
sub
adc
roll
xor
scas
xor
aam
dec
dec
add
repnz
imul
and
fsts
cmc
xor
push
incl
mov
shr
je
or
mov
jnp
inc
adc
adc
xor
sbb
in
popa
push
stos
mov
pop
jne,pt
pop
clc
imul
imul
outsl
cltd
pop
subb
jo
stos
push
orl
push
pop
fisubl
dec
jbe
jl
data16
rolb
hlt
add
cli
jb
push
add
mov
jmp
les
lods
cs
add
cmp
or
insl
rcr
rcll
in
xchg
adc
add
clc
or
mov
out
inc
mov
in
xor
inc
adc
out
popf
xchg
jecxz
jno
outsb
scas
insl
cmp
hlt
and
jmp
mov
mov
lret
push
out
mov
test
add
push
out
inc
fsubl
dec
js
outsl
repz
in
and
loop
pop
mov
insb
scas
xchg
mov
xor
sub
cld
ljmp
lds
loop
idiv
mov
mov
or
push
push
imul
cmpsb
ljmp
jno
sbb
cmpsl
jmp
or
jbe
pusha
xor
xor
mov
cmp
mov
insb
jecxz
jg
arpl
pop
push
push
mov
and
inc
and
hlt
adc
clc
out
bound
repnz
xchg
jmp
and
jge
cli
jbe
dec
icebp
and
lods
mov
test
and
and
push
das
xor
jno
add
mov
in
mov
xor
push
hlt
xor
xchg
sti
xchg
outsl
mov
push
jmp
jb
imul
ljmp
jae
scas
mov
loop
ljmp
test
add
or
xor
or
add
orl
mov
sbb
outsb
insb
push
and
aas
cmp
lea
mov
adc
out
mov
leave
mov
int
xorl
fsubrs
sbb
push
or
sbb
rorl
andl
jbe
in
ljmp
rcrb
mov
shll
out
jp
jae
popf
push
adc
mov
mov
fwait
and
or
imul
mov
and
testb
xchg
xor
je
loop
add
xor
outsb
or
subl
std
dec
ja
popf
jns
rcll
xor
add
imul
je
push
in
imul
repnz
fsubr
lret
std
int3
call
sarb
sub
mov
xchg
lods
testb
pop
xchg
out
xchg
stc
xchg
jecxz
call
fs
add
movsl
push
in
xchg
divl
pushf
jb,pn
aas
in
mov
divl
pop
mov
xchg
and
xchg
sub
call
inc
push
dec
call
and
sub
jg
cmc
icebp
xchg
fcomi
and
loope
loope
hlt
push
mov
insl
mov
jae
out
lods
and
in
push
out
inc
clc
lods
add
imul
push
xchg
and
push
add
in
int3
jmp
jge
das
xor
push
mov
jle
insl
cwtl
in
cmc
xchg
sbb
jmp
test
shll
add
outsl
leave
out
pop
adc
cmc
mov
stos
and
test
lret
test
and
cmp
push
mov
into
cmc
sbb
mov
mov
mov
daa
xchg
add
pop
nop
lcall
cmp
push
xchg
icebp
lcall
nop
popa
jbe
sbb
int
stos
adc
dec
shll
iret
cmp
sub
popa
pop
or
pushf
call
jnp
xor
jecxz
push
mov
lods
xor
adc
sti
out
fiadds
mov
rclb
loop
lret
mov
fldt
adc
scas
bound
lock
test
loope
cld
pusha
mov
adc
xor
lock
jp
push
mov
ljmp
fs
xor
xchg
pop
mov
nop
dec
popf
ss
xchg
in
lock
fcmovnu
cmp
imul
testl
cmpb
xor
out
inc
movsl
imulb
pop
push
repnz
out
call
mov
xchg
das
je
cmc
mov
ljmp
mov
jae
gs
push
jbe
inc
cwtl
in
pusha
cmpsb
mov
mov
push
scas
inc
cmpsl
fdivrl
enter
mov
call
orl
and
repz
aas
fcompl
mov
jp
lea
sub
sbb
xlat
cli
and
jns
dec
test
pop
rol
in
mov
xor
xor
aam
loope
jmp
sub
jp
and
or
xor
movsl
xlat
call
push
inc
addl
mov
stos
sbb
repz
mov
fisttpll
ljmp
hlt
xor
jmp
leave
or
adc
call
repz
stos
int3
pop
mov
jl
fs
jge
call
test
cmpsl
push
push
add
lock
imul
push
into
pop
fcomps
lock
xchg
xor
push
pandn
mov
dec
and
stos
inc
fdivp
ret
and
dec
push
xorb
push
mov
lods
xor
add
xorl
pushw
sbb
inc
ljmp
jl
sub
imul
mov
and
xchg
pop
jge
lock
insl
mov
sub
push
dec
sbb
lock
inc
stos
repnz
shlb
cld
imul
repnz
cltd
dec
hlt
repnz
fildll
jns
scas
ja
leave
xchg
push
decb
mov
mov
lock
cmp
xorl
in
hlt
addr16
inc
mov
hlt
jne
sub
scas
sub
cmp
sti
jns
jge
call
dec
push
dec
lods
sub
nop
lods
push
pop
xor
adc
mov
inc
stos
and
cmpl
in
jle
cltd
and
inc
fsubrp
sub
std
ret
icebp
or
clc
jb
push
in
mov
xor
shlb
add
movsl
lock
and
cmp
mov
call
fwait
jno
dec
mov
test
jbe
sbb
int3
jno
lds
or
xchg
insb
mov
sub
inc
into
pusha
les
xchg
inc
sti
notl
mov
inc
mov
sub
pusha
ljmp
je
adc
and
pop
aad
ret
mov
bound
insb
mov
xor
mov
add
ja
repz
mov
std
lea
mov
in
mov
jmp
mov
mov
sbbl
xor
repnz
push
inc
mov
or
lahf
mov
repz
inc
sub
add
cmpsl
jb
sbb
xor
mov
iret
xchg
push
push
ret
pop
add
push
and
sbb
mov
xlat
push
rclb
sub
adc
and
dec
add
imul
mov
mov
sub
pop
jae
stc
jl
test
pop
imul
xchg
or
sub
pop
movsb
gs
adc
inc
enter
outsb
fisttpll
jl
sub
movsl
adc
stos
mov
shl
cmp
and
dec
and
leave
xchg
out
jno
scas
xor
xchg
lods
lock
mov
in
test
jl
sub
jno
imul
cmc
add
mulb
push
movsl
add
imul
xchg
adc
int
in
mov
lods
bound
inc
std
divb
mov
mov
mov
cmc
clc
cmpsl
xor
dec
lds
push
pusha
cwtl
or
in
mov
fldl
sahf
lahf
test
or
push
add
adc
fdivs
xchg
mov
or
fstl
adc
addb
jmp
mov
dec
xor
shrb
icebp
mov
js
dec
push
repz
shll
and
adc
inc
xchg
out
mov
add
cli
pusha
repnz
and
std
push
loope
xchg
mov
notl
loope
adc
in
icebp
std
testl
xchg
out
mov
mov
in
loopne
int
mov
fdivs
stos
jo
fdivl
jg
movsb
testb
insl
fdivl
loope
pop
rcrb
add
cmp
push
push
sub
mov
pop
and
call
lods
dec
roll
add
cmp
lcall
repz
mov
rolb
popf
repz
xor
jmp
jbe
mov
ss
cmp
and
bound
lds
aad
pop
cltd
test
push
pop
fsubl
arpl
add
in
sbb
and
xor
xor
and
in
cmp
frstor
mov
inc
inc
bound
jo
xor
out
ret
subl
in
mov
add
outsb
dec
or
imul
sub
add
xchg
bound
xlat
mov
or
shll
xor
jae
add
pushf
and
loope
pop
add
movsb
sub
cmc
imul
fistpl
shrl
dec
icebp
jne
stos
loop
lods
stc
shl
lds
jbe
nop
jno
pop
test
inc
adc
f2xm1
movsl
hlt
lds
jbe
sbb
sub
adc
xor
mov
or
add
add
add
loop
jno
adc
and
xchg
lods
adc
andl
pusha
lock
adc
xchg
out
adc
enter
lods
mov
inc
adc
out
xor
lods
sbb
mov
mov
adc
and
cmc
test
scas
out
fldt
cli
repz
movsl
in
lds
pop
inc
leave
ss
adc
ja
mov
imul
sub
xor
lahf
sub
out
rorl
inc
jecxz
or
sub
and
adc
push
lock
jne
test
movsb
pop
jno
inc
xor
or
outsl
in
repnz
jno
mov
hlt
arpl
and
jno
pusha
add
in
outsl
test
scas
xor
icebp
outsl
cld
mov
outsl
loope
imul
repz
adc
mov
jno
aam
add
mov
cmpl
dec
or
adc
pusha
loop
pusha
sbb
lret
sub
jecxz
adc
ret
ss
sbbl
mov
and
adc
xor
jnp
les
pop
and
xchg
push
add
ss
cmp
xorl
lds
push
xor
cmp
jno
add
mov
les
add
xlat
sub
and
cwtl
mov
push
cmp
push
lea
mov
jno
popa
sbb
mov
inc
fdivrs
push
xchg
mov
cmp
fsubrl
loope
and
add
mov
add
or
jo
lcall
adc
mov
add
rolb
xchg
lahf
outsb
lds
inc
rcl
sub
or
fstpt
out
dec
fnsave
inc
jnp
pop
loop
sub
hlt
jno
call
in
idivl
in
mov
push
xor
aam
enter
lods
cmc
inc
xchg
xchg
adc
sbb
insb
testl
jne
int3
lret
mov
sbb
mov
ret
mov
cmp
pop
jno
icebp
cmp
cmp
mov
out
aaa
mov
js
test
lock
loope
rol
lods
or
push
out
fisubs
insl
fldt
xor
push
stos
push
dec
mov
imul
xchg
mov
cmp
or
aad
add
je
or
adc
out
xor
loopne
push
add
mov
mov
xchg
inc
inc
or
inc
aaa
sbb
inc
xor
test
addl
jecxz
push
shlb
aad
inc
iret
add
mov
and
push
jb
test
fldenv
adc
jecxz
adc
mov
int
js
push
mov
or
ret
sbb
dec
lcall
add
test
or
adc
xorl
push
icebp
lea
jg
adc
sub
jae
jge
and
and
and
mov
inc
jno
jo
mov
pusha
popa
push
pop
mov
scas
mov
rcll
icebp
jno
movsb
xor
inc
adc
js
adc
jb
cmp
add
jg
iret
subl
fldl
aaa
stos
adc
jno
jge
and
ljmp
inc
lret
cmp
ret
pusha
adcb
sub
jno
subl
ljmp
pop
mov
add
adc
add
push
lock
pusha
adc
xor
lock
stc
cli
jno
or
add
inc
or
push
or
xchg
inc
push
lock
xchg
xor
pop
insb
lock
sbb
cmp
pop
insl
mov
lea
outsb
jle
lock
cs
pop
outsl
jg
je
lock
dec
addr16
lock
imul
cmp
push
mov
lock
cmp
imul
or
sub
dec
arpl
xchg
adc
xor
push
fs
test
push
gs
xchg
push
push
es
lock
data16
xchg
pop
pop
daa
add
inc
push
pop
jo
nop
jge
xor
xchg
ja
xor
cld
push
pusha
gs
pusha
push
jbe
in
add
cmc
sub
lock
adc
std
pusha
push
and
xor
or
in
xorl
inc
xchg
add
push
inc
pop
jge
rcll
xchg
outsl
xchg
repnz
mov
shrl
fsub
hlt
cmpsb
fstl
lock
or
xchg
lret
jmp
div
push
cmp
and
adc
insl
push
ss
xchg
sar
jmp
jl
imul
push
call
pop
lock
nop
leave
mov
dec
fbstp
lods
inc
aaa
jp
inc
add
sbb
xor
cli
or
inc
daa
mov
mov
repz
jb
xchg
subl
push
rcrb
dec
inc
mov
push
pusha
jns
stc
imul
dec
movsb
lret
sub
iret
push
lock
out
and
cmp
movsb
lock
not
loope
cwtl
lock
mov
into
icebp
inc
xor
adc
push
adc
inc
mov
dec
lock
fidivs
lahf
aas
or
cmp
roll
push
jnp
dec
ja
and
popf
bound
cmp
and
add
and
mov
pushf
and
dec
mov
ljmp
sbb
pop
jge
xor
loope
or
mov
lock
ljmp
rclb
inc
ret
bound
jnp
rcrl
enter
and
cmpsb
cwtl
hlt
loope
ds
push
lock
push
fcoml
addl
imul
ja
adc
push
mov
push
or
mov
dec
jae
lock
aam
sar
stos
mov
cmp
mov
push
jle
jmp
adc
or
lahf
pop
popf
adc
lock
mov
mov
sbb
xchg
fstpl
push
pop
dec
mov
xlat
call
or
lock
push
fsts
fildll
fwait
in
inc
pop
enter
inc
mov
push
mov
xchg
mov
and
cmp
inc
mov
jae
data16
out
xor
mov
rorl
jne
push
out
ret
mov
and
fcomps
mov
mov
mov
mov
xchg
leave
mov
xor
divl
jb
lock
pop
fwait
inc
js
jp
push
insb
fidivs
add
mov
aad
adc
xadd
push
cmp
loope
icebp
mov
call
jg
sbb
jo
scas
lret
jl
lock
xchg
or
jbe
insl
xor
xchg
int3
xchg
enter
test
and
or
pusha
mov
hlt
jg
mov
je
js
movsl
data16
xchg
pop
lock
mov
imul
cli
call
cmc
xor
fadd
add
or
mov
outsl
lock
xor
dec
fildll
test
lock
pop
leave
push
adc
lock
add
adc
stos
pop
and
call
mov
pusha
jne
inc
adc
jge
das
lcall
repnz
lock
add
xor
clc
lods
jo
test
loope
and
xchg
arpl
mov
mov
sub
icebp
popf
push
insl
lock
lods
pop
push
pushf
fadd
lock
lret
leave
dec
mov
outsb
jns
ficoml
add
cmpxchg
push
push
fidivs
adcl
loop
ret
lock
movb
add
mov
lock
sbb
inc
adc
add
sub
div
scas
das
sti
lock
xor
dec
insw
mov
jne
fucomip
cmp
aas
js
ret
or
movsb
fs
nop
add
mov
add
xor
in
pusha
js
lcall
sti
push
jo
aas
lock
push
test
scas
lock
outsb
push
xchg
popa
lock
ret
out
mov
lock
sbb
testb
lock
jae
and
fs
xlat
push
test
mov
lock
scas
pop
ds
pushf
mov
scas
loope
mov
mov
mov
lods
js
lock
push
cmp
gs
fiadds
xor
or
fiaddl
clc
mov
scas
dec
cmc
shll
mov
mov
ss
add
je
insl
sub
mov
xrelease
lock
pop
rcrb
negb
push
popf
mov
pusha
lret
les
pop
pop
into
divb
lock
or
ja
cmp
mov
mov
mov
jae
lock
push
jg
and
arpl
fldt
call
push
sbb
inc
mov
xlat
sti
dec
fstpl
mov
loop
cld
sbbl
or
in
jne
stos
lock
inc
adc
lcall
shll
flds
les
enter
push
cmc
add
scas
cmp
adc
sub
mov
add
inc
lock
in
mov
sbb
mov
dec
gs
aaa
cmpsb
enter
aam
lock
push
movsb
fisttpl
icebp
adc
ss
in
cmpl
dec
sub
lods
push
adc
cs
sub
subl
fisttpll
push
lock
leave
movsl
sub
lock
push
mov
in
lock
push
gs
lock
testl
add
sahf
push
in
push
mov
mov
lock
arpl
fiadds
and
mov
sbb
push
xchg
and
jbe
lock
sahf
test
out
or
jge
outsb
xor
add
inc
addr16
test
jo
repz
lock
lret
in
xor
test
push
jnp
adc
aad
pop
lret
fdivl
sub
shl
adc
inc
pusha
je
lahf
xchg
lret
lret
push
test
fisubs
pop
mov
mov
inc
lock
fildll
push
lcall
or
lock
mov
mov
or
lahf
les
mov
jge
jmp
lods
lock
inc
fcompl
andb
xor
mov
out
inc
loop
out
lock
inc
push
push
sbb
mov
daa
pop
push
mov
xchg
in
int3
test
mov
repz
xor
lock
or
call
xchg
lock
xor
sbb
pop
pop
xor
les
ss
jae
call
xor
call
mov
mov
lock
loope
pop
push
idivb
lock
cltd
xchg
fcmovu
lock
repz
sub
push
jo
pusha
mov
push
sub
lock
xchg
pop
mfence
outsb
mov
sti
or
out
push
mov
pusha
xchg
jl
mov
jns
mov
add
jle
jae
mov
xor
dec
repnz
xchg
adc
xor
loopne
xorl
out
roll
inc
dec
mul
xor
inc
mov
push
loope
fdivs
mov
pop
push
jno
jmp
clc
int
mov
pop
je
dec
add
dec
and
fwait
mov
adc
repz
call
in
xorl
clc
loop
mov
js
xor
cmp
stos
xor
mov
cmpsb
shl
jo
pusha
push
sbb
repnz
add
aam
addr16
mov
pusha
insl
and
pop
dec
rcll
add
fs
or
inc
fwait
sar
xchg
mov
repz
aaa
add
jno
and
mov
pop
stc
cmp
jno
shlb
inc
jne
andb
sub
dec
pop
stc
sbb
jb
mov
xlat
xor
or
stc
inc
arpl
sbb
repz
insb
adc
xchg
leave
mov
shr
xchg
jecxz
dec
in
adc
pushf
jno
dec
mov
cmp
addps
mov
and
sti
dec
mov
xchg
and
repz
push
shlb
and
jecxz
mov
nop
icebp
or
dec
or
imul
mov
cmp
shll
nop
imul
in
mov
sarl
dec
or
fisubl
fcomip
fldcw
jne
std
loope
enter
jno
jae
jo
mov
stos
sub
std
icebp
mov
xchg
jmp
shlb
xchg
adc
xchg
or
push
insl
push
out
lods
add
jae
testb
push
shlb
icebp
in
pop
or
xor
and
xchg
test
enter
push
xor
xor
xor
or
mov
inc
jo
sub
xor
push
icebp
jmp
out
xor
int3
add
scas
insl
jle
pop
mov
add
mov
mov
and
cmpb
insl
xchg
mov
call
mov
scas
xor
insb
mov
ss
ja
mov
pop
icebp
ret
sub
xor
jecxz
shlb
xchg
xor
xor
push
scas
jns
and
xchg
test
andl
out
sbb
fildll
xchg
test
pop
jbe
outsl
add
xor
pusha
sub
fisubs
pusha
jne
notl
in
xor
out
cwtl
fiadds
rolb
popa
jo
es
lahf
hlt
lock
push
popf
lock
dec
lock
jae
adc
jl
add
or
into
pop
fists
out
mov
fldt
bnd
neg
jle
pop
fbstp
call
xor
movsb
mov
pop
leave
lock
mov
test
jbe
movsb
daa
mov
add
sub
lods
jmp
idivb
pop
cli
lahf
xchg
iret
in
pushf
shrb
lock
lret
lods
ds
ffreep
adc
cmp
notb
mov
es
jbe
dec
and
and
xor
mov
ja
lods
outsb
stos
jae
sbb
mov
jo
pop
cli
jbe
jg
loop
jae
mov
jnp
nop
cmp
jp
in
imul
sub
cmp
scas
jg
or
out
jle
pushf
jne
mov
clc
and
mov
fidivrl
leave
fucomp
jecxz
cmp
into
popa
testl
call
lock
les
jge
add
sbb
mov
xor
cmp
add
ds
mov
jb
mull
lock
es
and
cmp
pushf
inc
mov
push
lcall
lods
inc
cmp
jno
daa
int3
fisubl
inc
lock
mov
xchg
adc
das
sub
push
pop
sub
out
jecxz
mov
testb
lods
test
divl
pushf
xchg
mov
sub
inc
clc
jae
int3
mov
clc
pop
scas
jecxz
fnstenv
cmpsl
int3
div
lock
repnz
xor
pop
lock
push
arpl
and
mov
movsl
adc
jle
add
push
call
jecxz
sbb
push
lods
cld
pop
ja
call
cld
jle
jno
cmp
add
mov
add
xor
hlt
ss
mov
mov
jbe
jns
add
add
rclb
shll
mov
push
add
je
pop
jno
add
in
push
mov
inc
mov
mov
enter
inc
mov
arpl
add
stc
push
ss
mov
pop
xor
aam
or
sarb
sbbb
lea
xorl
xchg
sub
cmp
pop
jno
test
iret
lock
pusha
add
cmp
xchg
push
jns
jno
inc
fyl2xp1
cmp
popf
test
call
lahf
push
mov
dec
jb
mov
fisubrl
push
adc
xchg
mov
pusha
push
pusha
sub
pop
inc
jle
insl
inc
fdivrs
add
xor
adc
aad
out
movsl
add
sti
jae
fwait
movsb
pop
xor
or
not
fstpl
int
stc
jl
repnz
lea
jno
push
outsl
add
jae
adc
icebp
or
or
push
cmpb
mov
adcl
pusha
push
sahf
jo
cmc
xchg
jo
xchg
std
jo
and
mov
cmp
stos
xor
enter
xchg
sbb
nop
xchg
mov
mov
arpl
rcll
bound
sbb
mov
mov
rclb
repnz
jno
pusha
xor
or
or
or
pop
xchg
cmc
mov
jno
inc
cli
jmp
inc
outsl
push
push
jge
xor
add
xchg
call
lea
hlt
ret
loope
jno
movl
jbe
sbb
dec
pop
jns
adc
adc
jle
inc
add
cmpl
or
push
sarl
movmskps
daa
xchg
add
add
adc
fiadds
faddl
add
and
or
or
or
gs
sbb
pop
xor
cmpsl
adc
jl
push
push
xor
mov
jb
fiadds
inc
nop
jp
xchg
xchg
sub
mov
andb
jae
mov
pop
andb
xor
cmpl
mov
dec
sub
pusha
cmp
fmulp
sahf
mov
pusha
dec
sub
sbbl
inc
sti
aam
xchg
movsb
repnz
and
sub
dec
sub
orl
sub
outsb
in
cmp
jno
push
pop
sub
xchg
sbb
push
insl
fwait
inc
ficoml
orl
inc
ror
xor
jne
inc
imul
dec
add
xchg
inc
xchg
aaa
cmc
jg
xchg
loope
shlb
bnd
push
sar
cs
mov
clc
mov
in
mov
pop
add
add
in
test
inc
mov
xchg
div
insb
xor
daa
imul
pop
and
dec
in
push
arpl
pop
push
les
xchg
cmp
cmp
xchg
dec
cmp
or
and
mov
and
out
adc
xor
mov
jne
out
sbb
stos
and
sub
mov
cmp
repz
ss
xor
pop
fldl
gs
arpl
cmp
cmp
shrb
add
ret
add
call
fidivl
mov
pushw
sub
xchg
xchg
jbe
or
xor
add
inc
adc
cmp
mov
cmp
pop
sahf
sub
and
xor
stc
push
out
push
repz
dec
mov
arpl
daa
bound
movb
stc
cmpsl
adcl
repnz
ds
mov
scas
sub
in
sub
ljmp
dec
loop
cmpb
mov
add
rcll
add
sti
out
repz
lods
ficoml
popf
into
dec
movsb
add
pusha
data16
in
xchg
hlt
and
adc
test
shl
cmc
adc
pop
cmp
push
mov
enter
idiv
fcoml
pusha
xor
and
clc
jp
pop
ficoml
mov
mov
mov
jmp
sbbl
sub
fcomip
add
and
icebp
pop
add
add
sub
inc
gs
je
push
loopne
push
xor
bound
js
or
add
push
and
push
arpl
loope
ficoms
stos
push
aaa
xchg
jae
out
xor
andl
pop
addb
xor
fldenv
add
enter
cmp
push
pop
cmpsl
pushl
orb
cltd
inc
dec
icebp
pop
out
add
cld
aaa
rcl
data16
push
jno
in
ss
loopne
cli
icebp
jmp
movsl
sub
out
and
lret
push
stc
pushf
out
std
pop
pushl
subb
mov
cmp
int3
cmp
push
inc
pop
shll
and
jo
aaa
and
sub
adc
cmp
xorl
movsl
and
add
add
fldl
arpl
mov
out
ret
gs
in
dec
cwtl
dec
movl
pop
sub
stos
divb
stc
jae
fwait
xchg
and
out
add
ret
fnsave
bound
stos
xorl
dec
rcll
call
dec
xor
sub
jno
adc
xor
sbb
jno
pop
cltd
stos
mov
sahf
out
jno
ss
dec
sub
cmpsb
mov
mov
xchg
dec
lcall
jle
dec
out
mov
jno
insl
sbb
cltd
jno
cli
sub
rep
jno
nop
xor
jecxz
scas
sbb
mov
or
pop
dec
shrl
xchg
mov
or
out
int3
imul
inc
shll
or
pop
fistps
adc
sub
jmp
fucomp
adc
mov
pop
aam
jno
push
sub
push
mov
mov
inc
add
add
sbb
call
stos
mov
xor
sbb
xor
push
imul
loope
mov
in
push
jo
loope
iret
xchg
mov
mov
ret
cmpsb
stc
jbe
jno
mov
fcmovb
shrb
mov
mov
pop
add
pop
movsl
or
jae
dec
mov
adc
add
adc
and
xor
push
jns
and
add
xor
jno
icebp
inc
repnz
cld
pop
mov
jl
in
adc
repz
test
in
std
cli
adc
pop
or
cmpsl
inc
repnz
out
lret
gs
lods
xor
bound
or
imul
inc
gs
lods
inc
pop
add
notb
std
imul
out
shll
push
popf
xchg
gs
mov
or
imul
les
xchg
pop
rorb
add
xor
dec
int3
xchg
dec
inc
sarl
cltd
pop
inc
mov
cmp
popf
push
js
test
iret
test
fdivl
lods
lea
and
jmp
sub
fdivr
xlat
hlt
out
jne
test
mov
pop
mov
adc
mov
xchg
clc
push
movsb
test
xor
xor
xchg
pop
xor
xor
mov
mov
dec
or
fsubl
mov
aaa
or
enter
icebp
ficoml
mov
adc
inc
sbb
out
ret
mov
inc
add
movsb
in
cmpsb
or
jno
xchg
and
mov
mov
or
fcmovnbe
and
jmp
or
dec
lea
in
mov
inc
dec
lods
lea
in
orl
pop
imul
and
lret
xor
in
jno
shrl
sub
repz
xlat
add
icebp
xor
std
xchg
or
add
ret
xchg
js
xor
adc
imul
loope
jg
jle
pop
fiadds
jmp
push
loope
push
push
sbb
lret
pusha
and
out
or
std
and
inc
addr16
add
push
ret
add
rclb
sti
lock
ja
iret
cmp
sbb
inc
imul
lock
add
xchg
lock
jge
test
cltd
rorl
sarb
xchg
test
pop
lock
cli
xor
loope
mov
jb
mov
shll
pop
repnz
push
bound
push
mov
sub
insl
test
jo
mov
and
scas
mov
lea
xchg
push
inc
cmpsb
lock
movsb
or
hlt
or
cs
adc
mov
sbb
js
jne
mov
push
jnp
add
dec
xchg
clc
mov
fiadds
push
lock
fstpt
xor
cmpsl
jmp
push
dec
nop
cmc
sub
fisubrs
lock
mov
push
insl
scas
out
lock
dec
mov
adc
pop
push
lock
inc
test
neg
pusha
push
les
in
xlat
cmp
push
test
push
mov
gs
call
push
adc
jecxz
insl
stos
push
lock
jp
mov
sti
lock
hlt
out
xchg
push
cmp
loop
mov
cld
dec
lret
test
imul
sbb
por
sub
out
xorb
ljmp
jno
popf
push
fnstenv
into
mov
dec
and
popa
dec
gs
movsb
imul
lcall
lock
push
dec
jp
ss
lock
or
lcall
je
divb
sbb
lret
test
cmp
jo
lock
inc
stos
xor
sub
lahf
or
dec
test
in
ss
xorb
xchg
xchg
mov
mov
pop
add
popa
gs
lds
lock
mov
mov
lock
scas
lea
mov
mov
sbb
lock
pop
lods
in
pop
xor
lock
mov
mov
and
loop
push
adc
ja
repz
cld
dec
pop
movsl
clc
xlat
mov
lock
xor
and
inc
je
gs
rorb
loop
add
inc
lods
lock
push
in
outsb
jg
lock
stc
pop
dec
add
jnp
js
lock
cmp
mov
add
or
jle
pop
push
imul
add
pop
insl
pop
push
daa
in
repnz
inc
flds
xlat
ljmp
imul
sub
xlat
push
lock
sbb
lcall
mov
ds
sub
and
lock
inc
mov
fists
notl
in
aam
mov
fnstsw
push
mov
fbstp
add
cwtl
popf
and
ja
ret
data16
cld
mov
adc
push
cwtl
shlb
and
dec
movsb
inc
lock
pop
jo
push
aad
lock
or
in
lock
and
loope
imul
and
aam
push
dec
sbb
lock
mov
push
fsubs
icebp
xchg
mov
dec
push
ret
adc
addb
cmp
ds
sub
and
adc
lock
fsubl
rcrb
xor
insl
gs
cmp
add
inc
das
jg
popf
movsb
loopne
mov
fcomi
xchg
icebp
subl
xor
inc
movsb
mov
test
push
add
mov
unpcklps
xchg
lods
jb
fisubrl
daa
sub
roll
enter
sahf
xchg
and
loope
sahf
pushf
arpl
out
add
add
out
push
int
js
push
push
loopne
jo
repnz
mov
mov
das
out
push
repz
mov
pop
pop
xor
ljmp
popa
xor
jae
out
out
xor
jnp
fdivs
jne
inc
jne
pop
xor
nop
add
xchg
out
xchg
jmp
repz
adc
xchg
push
inc
icebp
xchg
and
pop
xor
jae
jmp
cs
repnz
push
or
mov
xorb
cmpsl
imul
xor
sbb
test
daa
insl
sub
adc
int3
rcrl
out
cld
popa
push
pusha
inc
ljmp
and
xor
mov
push
les
dec
shll
add
pop
inc
jmp
add
ja
out
jae
and
xor
mov
cmp
adc
jno
lcall
xchg
stos
add
pop
repz
repz
jecxz
mov
icebp
out
iret
xchg
jne
maxps
ljmp
mov
loope
filds
jecxz
lods
add
mov
test
clc
adc
cmp
imul
cmp
sbb
xchg
sbb
inc
ret
popa
jbe
jno
xor
sub
sub
repnz
out
roll
mov
push
and
sahf
adc
add
shrb
pop
int3
repnz
mov
rorb
pop
mov
or
inc
arpl
sub
rcl
xor
ds
cwtl
jbe
push
out
std
repz
in
jne
aas
cli
int3
call
loop
insl
aas
stc
adc
sub
jg
scas
aad
pop
mov
xor
fimuls
roll
loope
insl
addr16
out
inc
push
shll
pushl
xchg
cmp
fldenv
mov
push
ss
cli
lods
std
jl
sbb
or
mov
adc
inc
rclb
xor
test
roll
jg
scas
mov
xchg
inc
ficoml
loope
iret
dec
cmpb
mov
and
xor
xor
cmpb
jp
repnz
fisubrs
xchg
xchg
popa
mov
jl
or
jne
test
imul
xchg
je
shl
cli
and
stos
cmpsb
std
or
jge
pop
popf
inc
test
lret
mov
jo
fnstcw
aam
adc
inc
sbb
clc
jecxz
cmpsl
jne
das
push
and
push
ja
dec
mov
dec
xchg
cmp
dec
icebp
lock
data16
mov
cs
push
out
clc
lock
pop
xor
xchg
mov
lock
movl
lock
aad
pop
testl
jg
cltd
repz
add
insb
mov
je
push
and
and
lock
cltd
in
cmp
imul
mov
dec
lock
pop
xchg
sub
lods
xchg
into
rorb
sub
mov
mov
es
in
pop
push
divl
out
rcrb
xchg
push
movb
lcall
mov
inc
adc
push
fwait
mov
push
or
cwtl
pop
dec
addl
lock
xchg
call
lock
cmpsb
sbb
lock
and
test
sahf
or
sbb
xchg
arpl
mov
inc
lock
lock
mov
or
or
shrb
sti
cli
test
xlat
enter
int3
jo
addr16
rolb
and
push
push
fisubrl
xchg
add
and
sub
sub
stc
aas
sbb
lcall
xlat
lock
mov
xchg
xchg
push
jge
add
mov
cltd
lock
jg
das
lock
sarb
subl
lock
pop
ret
fcomip
fidivs
cmp
lock
and
sbb
pop
dec
cwtl
mov
pusha
and
and
popa
stc
lock
or
xor
f2xm1
loop
lret
add
lock
negl
sbb
lock
cmpsl
nop
sarb
cmp
mov
push
arpl
dec
inc
not
jne
push
sbb
repnz
xor
and
scas
or
dec
push
rcl
add
push
cmp
mov
jge
pop
mov
jns
iret
lock
push
les
lahf
test
dec
stc
cltd
insb
test
lods
or
push
xor
pop
repnz
jbe
aaa
fld
jo
xor
dec
fildl
mov
lret
hlt
test
neg
jg
pop
stc
lock
lds
jle
out
push
dec
mov
js
mov
fisubl
fcompl
pop
cmp
jns
jecxz
push
dec
adc
push
dec
mov
ss
jge
pushf
mov
lds
scas
push
push
out
cmp
xor
adc
in
stc
fwait
and
lock
flds
lock
mov
mov
lock
lods
enter
xlat
mov
cmpsb
push
mov
imulb
repnz
hlt
lcall
cmp
loop
mov
lock
cmp
ficoms
cmp
out
pop
ja
add
xor
sbb
xchg
push
push
add
dec
mov
or
sub
inc
dec
xor
es
insl
and
jmp
or
rol
lock
pop
jns
out
shlb
pop
in
push
sbb
push
mov
mov
call
xor
loop
xchg
ljmp
es
mov
cmpsb
fdivrp
idivl
sarl
cmp
sbb
jl
push
jg
clc
push
push
insl
ss
add
ret
adc
enter
popa
ret
push
das
jo
sbb
stc
shlb
or
mov
inc
out
addr16
fnstenv
sub
lock
adc
jne
inc
neg
xchg
enter
inc
ficoml
icebp
das
les
xchg
pop
in
sbb
mov
outsl
xchg
add
adc
jecxz
mov
push
lahf
pop
add
dec
inc
jne
mov
loope
cwtl
out
mov
dec
jae
adc
push
push
dec
inc
sub
js
fmull
lock
adc
mov
pop
mov
adc
cmp
push
neg
fnstenv
cwtl
jbe
and
inc
aas
rclb
js
mov
pusha
push
jg
fistpll
jmp
pusha
jmp
add
pop
out
jns
rclb
push
pop
call
and
push
push
jbe
shl
movsl
and
sbb
loope
mov
xchg
imulb
mov
jae
es
jo
push
mov
in
xor
sbb
xor
xchg
iret
les
sahf
cmpsb
jge
lock
rcrb
push
fcoml
mov
pop
aas
lock
add
imul
ficomps
in
rorl
mov
in
or
push
es
movsb
and
popf
rol
or
lds
imul
lods
rcrl
pop
and
incl
mov
test
inc
out
inc
mov
adc
cmp
ffreep
fcompl
shlb
pop
sti
sahf
movsl
mov
lret
rcrb
xor
es
mov
aam
xchg
mov
cmc
lcall
mov
inc
xor
jnp
sahf
jne
fldcw
loope
mov
xchg
repnz
lock
xor
and
leave
jb
sub
xor
fwait
and
shl
sbb
sahf
outsl
xchg
popa
mov
sub
loope
xor
pop
xchg
pop
shr
jnp
shll
push
std
bound
cmp
and
mov
lock
jb
fcmovnb
jo
lock
dec
and
mov
push
cli
mov
lods
aam
call
repz
and
insl
adcb
cmp
dec
test
stos
in
rclb
lock
xchg
xchg
iret
pop
jmp
mov
jg
xor
pop
lock
and
dec
jmp
testl
in
cmp
lret
lock
cli
pop
dec
jo
mov
cmp
xor
std
arpl
jmp
mov
stos
jmp
jne
add
jecxz
loop
pop
subb
ja
dec
sti
jecxz
loop
pop
js
adc
rcll
mov
mov
add
sahf
nop
fistpl
or
ret
outsb
push
push
push
inc
xchg
add
icebp
sbb
xor
ret
rcrl
jmp
es
lock
inc
ficoms
mov
int3
lock
inc
les
insl
dec
jmp
jns,pn
cld
sub
mov
lahf
xor
into
mov
mov
in
mov
push
lock
xchg
jo
xor
pusha
jae
add
fstsw
inc
inc
lock
jle
add
xor
jbe
or
mov
aam
xchg
dec
and
sbb
inc
adc
inc
jmp
lock
ret
lahf
xchg
popa
jae
dec
lock
and
cwtl
fwait
jge
pop
es
push
repnz
cmp
push
scas
lock
dec
mov
lock
xchg
xchg
mov
pusha
push
push
scas
cmp
bound
fcompl
push
mov
dec
in
mov
xorb
arpl
lods
test
and
cli
mov
lock
scas
push
daa
sbb
sbb
add
mov
and
out
push
adc
fldt
vcvtdq2ps
sbb
mov
push
push
cmp
xor
movsb
frstor
leave
in
push
or
ret
imul
add
inc
cmp
dec
daa
xor
inc
aaa
out
jle
and
popf
dec
xchg
sti
in
cmpl
je
sub
rcrb
stc
adc
lcall
jp
pusha
push
scas
pop
pop
lock
jno
xchg
test
lock
nop
dec
mov
psrlw
sbb
jnp
xchg
mov
xchg
ret
inc
das
iret
aas
sbb
mov
lahf
out
adc
sbb
fists
lock
push
cmp
lods
jge
lahf
aam
adc
shrb
sahf
cmc
jp
add
cli
cmp
daa
lock
popf
repnz
mov
lock
mov
leave
add
push
mov
lret
push
dec
lock
js
ret
mov
jg
arpl
add
addl
lock
sub
mov
roll
lock
gs
mov
adc
aas
inc
adc
and
inc
xchg
adc
popf
push
cs
int3
push
lock
pop
lcall
jo
dec
cmp
loope
sub
pushf
xor
popf
hlt
adc
and
adc
test
pop
xchg
pop
pop
lock
push
and
and
add
pusha
les
mov
imul
stos
int3
mov
lock
and
push
lods
mov
dec
idiv
jns
cmp
lock
xchg
cmp
sbb
je
ror
jecxz
and
lock
push
cmc
adc
js
or
ljmp
cwtl
call
fildl
inc
shlb
rcr
cmpsb
lock
lock
movsb
or
test
mov
jg
xchg
out
addr16
jnp
xor
repnz
or
jno
popa
aaa
out
rolb
jo
es
push
imul
ficoml
jbe
mov
imull
rorl
out
repnz
bound
pop
xor
loop
test
jae
in
mov
sti
cmp
cmp
jo
negl
fs
mov
fwait
add
adc
das
mov
and
pop
and
adc
push
or
jne
lock
loop
ret
inc
lock
orl
xor
cwtl
pusha
and
xor
fiaddl
push
fdiv
sub
cmp
dec
jecxz
xor
dec
push
pop
lock
push
stc
sbbb
sti
shll
test
aad
in
js
std
roll
bound
pop
mov
lock
sbb
fadd
jg
jmp
inc
dec
mov
dec
xor
ljmp
sbb
mov
lock
and
das
pop
lock
loope
jns
testl
cmp
push
pop
jno
cld
sub
jae
or
jge
push
lock
repnz
int
lods
mov
mov
pop
fsubr
mov
xlat
shr
insb
loope
mul
push
out
xchg
push
adc
jno
fnstenv
xchg
lock
jmp
fbstp
mov
sti
inc
mov
push
xlat
add
aad
test
jns
call
xorb
lock
sbb
int
dec
lock
test
dec
pop
mov
pop
mov
pop
lock
sub
jae
outsb
lock
rorb
xchg
cs
mov
mov
loop
repnz
adc
and
in
icebp
and
gs
mov
jo
lahf
negl
and
fwait
cwtl
xor
orl
xchg
in
pop
xchg
cltd
or
dec
mov
ret
lock
insl
in
bound
test
loope
push
push
xchg
aas
xchg
call
sarl
xlat
push
fucomp
sbb
ret
lock
jecxz
sti
test
ret
loope
sub
lods
in
lock
mov
push
mov
lock
out
mov
lock
test
inc
rolb
cmp
or
out
mov
call
push
jo
pop
cli
in
sbb
neg
pusha
push
out
sahf
into
repz
push
or
sub
dec
lock
jecxz
stos
into
scas
sbb
lock
pop
push
out
cmpl
fwait
sbb
fidivrl
mov
loop
mov
fsubr
outsb
jbe
mov
imulb
mov
ljmp
pop
mov
cmc
lock
mov
mov
and
and
inc
xchg
inc
add
rcrb
xor
fists
pop
cmp
addr16
sarl
sahf
mov
fcomp
lock
pop
or
loope
popf
mov
sbb
jbe
inc
es
jmp
enter
cmpsb
add
pusha
lock
sub
rcrl
add
jg
push
sbb
sbb
or
insl
sub
lock
xor
or
mov
das
cwtl
add
jno
cli
out
repz
xchg
sbb
rcrl
pop
addr16
mov
dec
jg
out
adc
test
cmc
add
movsb
sub
divb
xor
stc
ss
mov
notb
loop
stos
pop
out
neg
or
xchg
stos
adc
cmpsl
popf
rcrb
nop
xchg
add
push
mov
lret
scas
mov
pop
lock
adc
add
mov
clc
adc
or
addr16
movw
fistps
insl
adc
fs
dec
nop
call
cli
inc
mov
popf
icebp
rep
sub
lock
fnstsw
data16
fwait
mov
insb
and
das
lcall
jg
mov
cltd
roll
mov
mov
in
push
dec
pop
pop
pop
xlat
xchg
lock
xchg
mov
cmp
loope
pop
and
lea
mov
and
scas
lahf
adc
lock
lret
push
mov
mov
mov
adc
mov
imul
ret
arpl
cmpsl
lock
and
rclb
icebp
xor
lock
push
mov
imul
mov
cmpsl
adc
ljmp
jecxz
ljmp
mov
cmp
hlt
out
das
push
jbe
mov
movsb
les
cli
lock
bound
jb
jg
dec
push
fs
jle
sbb
and
sbb
lock
fstl
fcompl
mov
lahf
jo
negb
and
loope
and
in
loope
js
sarb
xchg
and
movsl
ja
mov
rcl
inc
cmp
ljmp
mov
add
notb
inc
fs
in
rorb
adc
aad
test
mov
push
and
int3
cmp
popf
shll
subl
cwtl
mov
and
insl
mov
sti
ljmp
pusha
fildll
loop
daa
repz
cmp
push
xlat
test
and
out
sar
test
shl
sbb
push
mov
arpl
cmc
repnz
jb
bound
mov
lea
ss
adcl
aaa
xor
dec
rorl
hlt
popl
jno
xor
xchg
dec
loop
xchg
mov
ss
movsb
mov
mov
shll
lea
cs
sub
leave
mov
jecxz
cmpsl
call
fwait
lock
xchg
lock
movb
stos
sbb
cmp
dec
adc
lock
mov
jns
pushl
ss
jno
ljmp
cltd
out
daa
outsl
lock
push
sub
mov
xchg
lock
and
sbb
jg
int
cs
int3
stos
inc
je
daa
ret
js
add
jnp
addr16
in
out
xchg
lock
jg
pop
or
cmpsb
inc
sahf
mov
xchg
push
pusha
inc
out
sbb
bts
mov
add
mov
jge
lock
pop
lock
repz
cmp
fadds
sbb
cmp
out
int
popa
sub
pusha
xlat
mov
cli
hlt
movsl
lods
popa
sub
mov
sub
or
jb
dec
fstl
shll
je
imul
inc
les
xchg
push
shlb
test
in
lock
and
movsb
add
push
cmpsb
pusha
les
cmp
arpl
lock
jbe
adc
div
lret
mov
sub
jo
mov
aaa
push
mov
loop
rcr
pop
mov
jp
xlat
sub
pop
outsl
outsb
add
outsb
inc
stc
xor
or
and
cld
out
adc
cld
sub
jle
push
add
mov
in
popf
pop
xchg
lahf
lret
add
rorl
sahf
aas
and
rep
jno
and
insb
lock
fldcw
lock
jno
pop
jecxz
lock
iret
cwtl
lcall
and
sahf
push
cmpsb
lock
cmp
insl
xchg
add
pop
dec
cmove
shll
fistl
cmpsb
fnstenv
adc
push
sbb
push
xchg
lock
scas
sti
sub
inc
add
int3
lock
cwtl
or
xchg
pushf
mov
imul
cmp
pop
shlb
movsb
lret
pop
fsub
cmp
jg
jo
mov
out
fcompl
mov
mov
out
add
aaa
mov
sahf
and
pop
cmp
in
mov
sub
jp
rdtsc
pushf
int3
push
pop
lock
xchg
mov
dec
cmp
outsb
movsb
jno
jns
push
in
popf
jecxz
xor
outsl
xchg
fmull
repz
lods
and
pop
aam
push
or
jne
std
loope
test
dec
or
jl
xchg
enter
pop
and
lods
fisubrl
dec
and
xchg
sbb
adc
add
call
popf
in
lea
loope
sub
in
xchg
pop
int3
dec
ja
add
push
bound
xchg
imul
push
retw
and
test
inc
fdivs
lods
push
nop
insl
xor
pop
mov
or
adc
out
jns
xlat
aam
in
or
jno
inc
mov
inc
xor
loope
inc
aad
negl
loope
mov
push
xor
mov
aam
int3
adc
push
in
nop
mov
adc
lock
adc
in
mov
xor
jne
fisttpl
addr16
jns
pop
jnp
inc
repnz
adc
scas
adc
shrl
orl
sub
jae
cli
in
arpl
ret
ljmp
pop
lods
inc
outsb
mov
push
in
xchg
jae
subl
mov
add
push
push
jmp
sub
inc
ljmp
aam
pop
xor
adcl
call
mov
jl
pop
fucomip
jae
andl
push
sti
es
in
aad
xor
nop
jns
in
pop
jb
std
pusha
push
iret
pop
sbb
hlt
and
jne
inc
in
xor
cmovl
xlat
movsl
or
jno
push
cmc
sub
mov
mov
scas
add
mov
daa
pushf
cli
movsl
inc
inc
jb
mov
icebp
cli
xor
repz
pushf
in
and
shll
push
jae
fildl
out
inc
jb
sbb
mov
adc
mov
lea
inc
aam
std
movsb
jno
xchg
aad
add
xchg
loopne
inc
mov
inc
pusha
lea
xorl
shrb
pop
mov
repnz
pusha
pop
enter
xchg
std
xchg
fsubl
jno
sub
sub
icebp
repz
pop
add
mov
xor
movsl
int3
sahf
movsl
adc
inc
sub
gs
xor
mov
xor
mov
arpl
jae
pop
aam
add
mov
add
in
pop
xchg
dec
and
stos
loop
cmp
and
repnz
push
out
out
jne
std
and
mov
push
add
adc
jns
xchg
and
xchg
mov
jns
xor
insl
imul
ret
pop
adc
and
addl
mov
jo
lds
lods
dec
xor
xchg
pop
jns
push
xor
icebp
lock
movsb
test
pop
dec
in
push
mov
pushf
and
sahf
stos
pop
or
adc
fs
xor
jbe
das
sti
lock
cmpsl
xchg
fs
hlt
push
jmp
repz
shll
and
in
js
js
xchg
cltd
pushf
inc
aad
and
add
inc
xchg
push
or
or
icebp
jne
sarb
push
mov
cmc
in
adc
cmp
shll
stos
rcrl
xor
dec
sbb
jne
pop
cmp
mov
mov
xor
and
fdivl
xchg
rol
pop
sbb
jmp
mov
scas
inc
sub
fwait
mov
andb
mov
mov
sar
aam
push
push
mov
push
leave
ds
into
aaa
mov
roll
push
pop
stc
inc
pop
xchg
rolb
jne
xorb
sub
pop
inc
shrl
in
pop
or
xor
add
and
push
push
add
ja
jmp
popa
addr16
dec
xchg
dec
mov
push
fwait
call
mov
es
fdivrs
jno
xor
jg
add
and
fdivrs
sbb
shll
jg
icebp
hlt
and
mov
add
mov
pop
pushf
dec
ret
in
mov
and
pop
imul
add
xor
mov
pop
and
xchg
mov
sub
mov
inc
ret
inc
jno
sahf
in
add
jno
push
jno
sbb
add
xor
mov
outsl
into
out
inc
loopne
int
add
hlt
dec
adc
inc
push
cmpb
jno
xchg
lahf
fwait
jl
sbb
fisubrl
sbb
xor
jns
mov
shrl
test
loope
mov
icebp
cmp
icebp
shll
enter
rcrl
pop
adcl
imul
and
mov
mov
cwtl
gs
mov
test
adc
in
in
in
aad
fst
mov
jo
icebp
dec
add
cli
push
sbb
jo
ret
push
repnz
mov
inc
mov
adcl
in
lds
movsl
lock
sbb
mov
in
xor
cmp
add
test
adc
stos
in
jb
pop
mov
imul
scas
sub
test
lock
movsb
cmc
jnp
fwait
lods
push
jmp
cmp
insb
mov
ficoml
add
adc
stos
jle
mov
and
jmp
repnz
ret
sbb
gs
xchg
mov
std
push
or
xor
cmp
inc
ljmp
repnz
fstl
add
mov
dec
or
push
push
add
imul
and
add
cli
and
mov
mov
aaa
aam
jecxz
xchg
call
data16
xchg
jbe
sub
adc
sub
xor
rclb
pop
inc
sbb
lock
push
in
xlat
add
xchg
adc
sahf
adc
add
sbb
add
or
adc
shll
inc
stos
ret
out
adc
and
sar
adc
outsb
dec
icebp
inc
cmp
adc
mov
jmp
adc
stos
xchg
popf
sub
or
mov
add
ss
insl
sbb
adc
push
testl
int
arpl
dec
ficomps
add
icebp
mov
xor
in
and
mov
adc
scas
xorb
mov
into
mov
sahf
shlb
dec
lahf
jae
sub
adc
cmp
xlat
sar
fistl
scas
mov
dec
push
cmp
xor
orb
jb
dec
adc
xorb
fwait
jae
icebp
out
ret
fmuls
adc
pusha
jns
adc
rol
push
pop
sub
push
ret
int
cmp
xchg
adc
sarb
fmull
daa
or
imul
dec
add
xor
inc
movsb
xchg
lock
add
orl
cmpsb
cmp
lock
cmp
mov
inc
out
lock
cmp
ret
pop
inc
dec
mov
xlat
xchg
xchg
and
mov
cmp
outsl
mov
icebp
sub
mov
jecxz
push
lcall
scas
fsubrs
aaa
call
lock
add
pop
ss
hlt
mov
dec
insb
ret
stos
lock
test
or
lock
jo
nop
lret
jp
in
jns
adcl
movsl
push
fcmovnb
xchg
pop
sti
jle
jg
pop
imul
mov
fs
lock
cltd
outsl
push
xchg
repz
xor
jbe
xchg
clc
out
push
imull
rcl
or
jl
or
mov
sti
lock
push
outsb
or
or
into
mov
xor
mov
pusha
inc
sub
pop
add
sub
push
mov
pop
lock
dec
notl
fwait
lock
push
mov
mov
jns
lock
or
xor
mov
shrb
lcall
lock
cmp
dec
jecxz
xchg
jmp
lret
fwait
cli
lock
or
add
pop
jne
js
or
lock
int3
mov
fs
jns
and
repz
jb
sbb
fiadds
mov
add
mov
lock
push
add
pop
mov
ds
lahf
addb
lock
jge
adc
jmp
mov
sub
inc
pop
in
xchg
jae
or
loop
jno
and
pop
in
push
mov
jno
adc
imul
jmp
in
push
push
cmp
arpl
mov
ror
cmp
cmpsb
inc
rolb
add
push
in
mov
sbb
out
lods
mov
mov
and
cmp
xor
xor
stc
xorl
or
ja
repnz
or
fisubl
in
pop
inc
fadds
shl
and
sub
adcl
sub
pushf
popf
mov
mov
adc
test
pop
jno
cld
int3
movsl
mov
push
cmc
dec
xor
aam
mov
fwait
outsl
cld
xlat
mov
insl
mov
push
mov
loope
pop
insb
mov
insb
jno
dec
sub
push
in
nop
insb
icebp
outsb
add
lcall
or
push
je
jle
dec
push
cld
fcoms
sbb
pop
xchg
aad
inc
jbe
bound
push
rorb
ds
out
and
sub
push
je
aaa
inc
ret
and
sbb
stos
insl
pshufw
add
shrl
cmp
adc
or
pop
shl
lods
fistps
lahf
leave
out
cs
mov
add
inc
add
xchg
and
decb
push
es
icebp
push
rclb
xor
jge
cli
push
pushf
jo
test
scas
cs
leave
cld
and
fdivrp
fwait
icebp
rcr
or
int3
idiv
add
add
adc
cmp
or
test
push
adc
sub
outsl
inc
cs
mov
or
test
push
cld
hlt
in
push
aaa
xor
pop
arpl
mov
lea
mov
mov
ss
dec
imul
out
fstl
mov
add
xor
jae
add
or
lcall
push
fisubrl
xchg
jae
add
test
clc
push
adc
cmp
insb
or
hlt
lea
adc
out
adc
jne
movsb
in
fimuls
fiadds
ret
and
pop
xor
add
adc
shl
pop
fcmovnu
sbb
pop
mov
push
jge
cmp
pop
pop
roll
adc
pop
fisubs
jnp
pop
lret
movsl
rorl
cmp
jne
or
xorl
fldt
incl
repz
repz
mov
pop
fisttps
push
push
inc
stos
add
stos
add
cmp
adcb
sbb
out
push
xchg
nop
in
sub
insb
pop
mov
mov
adc
repnz
xor
aas
stos
loopne
mov
xor
mov
enter
ss
adc
xor
xchg
test
sahf
pop
xchg
inc
fimuls
push
push
idivb
int3
and
pop
addr16
pop
sar
push
adc
aad
out
push
inc
repz
inc
mov
shl
aam
roll
leave
sub
ljmp
fcompl
pop
stos
popa
lock
lds
cli
add
fldcw
cmpsl
lret
in
add
xor
in
cwtl
in
sbb
sub
pusha
sub
popf
dec
cmpsl
dec
mov
cli
int3
xor
pop
adc
xor
pop
sub
cmpsb
and
aas
cmp
iret
imul
sti
dec
inc
lods
jnp
fisttpl
pop
in
sbb
mov
push
pop
push
pushf
sahf
and
jp
pop
adc
movsl
and
and
xor
call
in
or
int3
lock
xchg
into
and
xor
lock
mov
in
add
lock
add
mov
loope
sar
mov
cmpsb
hlt
fidivs
push
lds
nop
fdivrl
jbe
gs
lret
bound
or
divb
jle
jl
sub
dec
movsl
xchg
inc
addl
lock
mov
fsubp
jg
imul
ds
stos
lret
xchg
mov
lock
test
pop
arpl
gs
aad
mov
addr16
jo
stos
push
lret
lock
dec
mov
popf
or
mov
add
mov
adc
xlat
cmp
imul
mov
push
mov
dec
xlat
aad
aas
dec
jecxz
stc
call
int3
pushf
sub
pop
repnz
mov
ret
jnp
movsl
lock
cli
cmpsl
int3
inc
cmc
aaa
cwtl
and
test
mov
pop
ss
popa
mov
lock
subb
hlt
icebp
jg
das
xor
lock
jo
stos
push
adc
mov
fcom
js
fwait
mov
push
arpl
dec
aaa
mov
and
int3
cmp
or
out
mov
jecxz
mov
mov
nop
int3
mov
xchg
sbb
jo
fcoml
mov
jnp
mov
mov
fbstp
insb
push
jae
lock
aas
pop
pop
cs
aam
push
divl
mov
into
enter
sar
insb
xor
call
pop
movsb
insl
adc
jb
push
out
movsb
pop
xor
jo
lock
or
jmp
lock
sbb
lock
xlat
test
dec
jns
add
sti
or
or
xor
pop
xchg
stos
cmc
clc
sub
pop
push
call
sub
repz
dec
out
fidivrs
lock
movsl
push
lret
sbb
pop
inc
lock
sub
jne
imul
dec
hlt
addl
aaa
pop
lock
push
push
sub
push
lcall
test
call
popf
jmp
or
inc
xor
xchg
in
or
inc
sub
mov
dec
adc
push
xchg
mov
xchg
jo
push
cltd
lock
cs
jle
jge
or
adc
jl
cli
stc
and
test
mov
aam
dec
mov
ja
data16
pop
jo
push
mov
lock
mov
aad
mov
fldt
xchg
jo
add
arpl
mov
jle
aad
test
fmull
and
rclb
mov
lock
and
or
lods
dec
call
lock
outsb
call
add
cwtl
lahf
lea
mov
pop
push
leave
lock
sub
fwait
jl
shr
dec
lret
out
xchg
outsl
fcompl
add
aaa
fisttps
jecxz
jo
add
cmp
or
jo
adc
cmp
iret
cli
mov
jle
out
aad
add
xor
mov
lock
mov
cmc
mov
mov
lock
push
pushf
fldenv
loope
adc
push
fisttpl
push
js
pushf
mov
pusha
es
jmp
adc
pop
adc
xchg
lock
movsl
push
dec
movsb
pop
fdiv
imul
iret
lock
inc
or
push
xchg
lock
xor
cmp
push
jns
jg
xchg
and
push
adc
subl
jecxz
shlb
lock
pop
xchg
rorl
imul
add
repnz
in
dec
cmp
sub
sahf
dec
mov
mov
dec
outsl
xlat
mov
and
in
mov
div
fs
lods
sbb
push
rcll
rcr
pop
add
shlb
or
test
movsb
mov
mov
inc
arpl
outsb
inc
decb
cmp
ljmp
lock
dec
loope
ss
lods
std
mov
jo
gs
mov
mov
inc
xchg
jmp
xchg
lods
vorps
xor
in
fs
sub
enter
into
pusha
jo
lock
call
xorl
adc
test
pusha
mov
out
sbb
andb
cs
sbb
add
cwtl
inc
out
out
jae
add
mov
fistpll
leave
jnp
fistl
aam
loop
and
call
movsb
push
lock
dec
fsubrs
mov
adc
lock
pop
cmp
rcrb
mov
stos
lock
pop
push
les
stos
in
out
mov
pop
add
hlt
faddl
sti
divl
fcoms
mov
into
lock
cmp
cmp
sbb
lock
add
loope
test
xchg
inc
xchg
aas
enter
mov
lret
test
dec
xor
cmp
or
into
inc
js
lock
divb
or
inc
es
lock
mov
lahf
lret
mov
mov
rorl
lods
daa
sbb
sti
movsb
mov
jmp
mov
call
dec
mov
add
inc
imull
int3
int
lock
jbe
and
mov
mov
lock
stos
test
inc
lret
movsb
push
jl
sbb
mov
adcb
mov
mov
hlt
pop
mov
sbb
lret
adc
mov
adc
mov
push
out
lods
jo
movsl
sbb
xchg
pusha
fists
add
mov
fcmovnbe
lock
negl
mov
dec
push
div
lds
add
ja
cmpsb
lock
pop
adc
xor
adc
pop
sub
push
jno
push
xor
cmc
rcll
div
cmp
xor
popf
and
xchg
insl
pushf
xor
dec
push
js
push
bound
push
test
clc
xor
fwait
ret
shl
loop
pop
fisttpll
idivl
cs
sub
scas
lock
sub
and
push
out
adc
add
int3
hlt
mov
imulb
xor
fs
mull
insl
cmpsl
pusha
dec
stc
mov
out
xchg
push
sub
addr16
mov
daa
jg
jne
lock
mov
mov
dec
cmp
xchg
bound
cmp
rolb
addr16
jo
xor
sarl
ret
inc
cmp
cmp
lock
push
mov
or
lock
pop
arpl
mov
jg
scas
stc
xor
js
sub
push
nop
dec
or
loope
lock
xchg
aas
daa
scas
arpl
and
dec
push
or
ds
lock
inc
sub
dec
adc
mov
mull
add
jle
mov
sbb
sbb
jmp
adc
mov
lock
jmp
stos
pop
xchg
sti
lock
sbb
or
xchg
pusha
jecxz
loop
aaa
hlt
out
int3
mov
inc
fcmove
jmp
insl
mul
cltd
test
adc
ret
inc
jg
sub
mov
lock
xor
mov
xchg
mov
fidivl
xchg
mov
lock
loop
stos
aas
mov
and
out
lock
inc
sbb
dec
xor
add
hlt
inc
push
mov
jg
ja
std
mov
cmp
imul
jae
xlat
or
stos
adc
inc
xor
adc
cld
enter
mov
push
sbbl
xchg
and
jge
jnp
ja
push
inc
jno
mov
jbe
mov
cmpl
or
adc
sub
mov
es
mov
mov
adc
hlt
inc
gs
fs
add
int3
jle
paddsb
cli
inc
push
jmp
xchg
and
pop
jae
in
xor
sarl
addr16
insb
jle
xor
enter
out
push
push
jle
and
rcrb
pusha
sub
testb
fdivrs
pop
pop
imul
test
jp
sub
ficomps
in
push
push
push
xor
stos
stos
push
pushf
mov
xlat
out
aaa
cmp
jl
ja
and
pop
jae
mov
pusha
push
bound
imul
add
adc
in
cs
lods
dec
pop
cmp
push
arpl
sub
mov
sbb
add
arpl
cli
or
push
shrb
and
xor
loopne
mov
popf
scas
adc
call
arpl
and
mov
inc
cmp
lea
sub
mov
int3
add
mov
lds
loop
jno
xchg
mov
jbe
gs
dec
or
pushf
mov
inc
xor
repz
movsb
mov
jecxz
adc
loopne
repz
jnp
jnp
sub
scas
add
push
subl
mov
negl
push
std
xorl
ret
pop
and
push
xor
mov
fdivrp
icebp
aam
add
push
mov
xor
ljmp
in
mov
fcmovbe
scas
bnd
loopne
orl
orl
lcall
lock
bound
dec
dec
xor
test
sbb
push
outsb
push
mov
dec
push
xor
xor
fstl
mov
in
and
bound
add
mov
xor
or
pop
mov
sbb
sub
loopne
ret
or
sbb
adc
sarb
rcll
jno
dec
popl
sbb
out
push
add
cmc
pop
adc
mov
lret
add
mov
pop
sub
mov
pop
scas
mov
fdivr
xor
cmp
mov
popa
inc
movsb
mov
and
repnz
and
jno
nop
pusha
aas
daa
mov
xchg
xor
lods
movsb
loope
mov
aad
test
lock
cmp
mov
popf
pushf
pop
sti
and
cmp
pop
in
mov
and
add
and
xchg
loope
test
xor
cmp
les
ljmp
push
lock
adc
clc
or
test
lock
push
loope
lods
pop
push
shr
jo
call
cltd
xor
xchg
inc
data16
xchg
dec
mov
xlat
lret
sbb
dec
in
ss
lock
push
sub
popf
add
mov
cld
out
mov
add
cwtl
mull
jmp
cltd
or
lahf
pop
dec
addb
iret
xlat
add
fcmove
xor
jle
lock
js
jecxz
aas
incl
mov
mov
iret
cmp
jo
insl
lock
push
fldenv
push
jbe
lahf
imul
mov
and
sarl
cltd
inc
jle
daa
jl
push
call
adc
dec
in
in
mov
testl
outsl
mov
jg
cld
and
imul
inc
pop
mov
ret
lock
sti
sub
lock
and
and
outsb
push
sbb
fdivs
faddl
leave
notb
ljmp
mov
popf
ja
leave
xchg
gs
push
mov
mov
hlt
inc
xor
insb
cmp
or
mov
lock
mov
jecxz
mov
xchg
cmp
aam
lock
push
mov
or
test
jg
jnp
jno
lock
jp
pop
dec
sbb
scas
and
or
pop
lock
shlb
mov
sar
rcrb
xor
lock
cwtl
pop
lock
jge
mov
push
mov
mov
sarb
adcl
das
xor
das
push
imul
int3
cmp
cmp
mov
lcall
ret
das
pop
jmp
lock
scas
jns
dec
push
popf
add
and
pop
push
icebp
hlt
imul
test
fsubrs
lock
push
fcomip
fistpl
aam
not
repz
aad
outsl
out
mov
mov
cs
js
out
shrl
push
pop
lock
or
jmp
sbb
lret
jecxz
fistl
les
mov
pop
inc
lock
fwait
jbe
pop
insl
mov
mov
cs
pop
lock
cld
ret
or
lock
ret
cmp
outsl
in
adc
in
jecxz
mov
lahf
cwtl
pop
lock
inc
dec
cli
xchg
xor
sbb
dec
lcall
mov
leave
ljmp
fisubl
ds
and
pusha
cmp
repz
xor
jae
pop
in
test
mov
lock
mov
sti
lcall
adcl
ja
fbstp
cmpsb
and
in
loop
dec
or
inc
lock
pop
xor
lock
xchg
push
mov
fdiv
add
rcrb
fs
hlt
sub
or
and
pop
cmp
mov
test
mov
pop
xor
mov
mov
pusha
jo
neg
adc
dec
cmp
lock
xchg
xchg
lret
push
sbb
xchg
into
xchg
stc
shl
mov
dec
gs
cli
mov
lock
dec
ror
pop
pop
pop
lods
in
xchg
call
pop
into
mov
mov
push
sub
cwtl
xor
lds
sub
push
sbb
scas
scas
test
lods
lea
sub
jae
pop
test
pop
or
mov
inc
jmp
lock
push
push
lock
dec
dec
add
fidivl
xor
movsl
push
out
push
in
fwait
lock
mov
pop
inc
daa
in
lock
push
mull
out
lock
adc
sub
jo
lock
mov
mov
cwtl
xorl
jmp
cli
jbe
scas
divl
mov
add
push
scas
popa
stc
lock
mov
mov
push
pop
imul
fsubrl
mov
jmp
mov
pop
cld
std
sub
scas
mov
ret
lahf
or
xchg
aaa
xchg
lock
enter
cmp
lahf
cli
mov
jo
lret
push
stos
sbb
orl
pushf
outsb
mov
mov
sub
lock
sub
and
test
imul
lock
xor
xchg
pop
xchg
mov
add
jg
popf
or
jnp
out
out
xchg
andl
mov
mov
cmpsb
push
filds
ja
mov
cltd
inc
pop
lret
sti
hlt
cmp
xchg
lock
inc
adc
lock
sbb
mov
mov
and
sbb
cwtl
lret
add
xor
repnz
lret
rcrb
xlat
scas
inc
cmpsl
clc
ret
dec
in
and
gs
lock
jecxz
push
push
lret
push
or
orl
popf
aaa
pop
movsl
ja
lock
stc
mov
lock
dec
mov
lock
fnstenv
sub
xchg
notl
sarl
xchg
xchg
popf
dec
push
cld
daa
push
jbe
jp
sbb
js
mov
adc
lcall
sti
lock
sbb
push
or
out
inc
mov
inc
jno
call
xchg
mov
shll
add
cmc
mov
pop
add
xchg
xchg
fwait
add
and
enter
push
rorl
icebp
add
bound
outsb
adc
sbb
and
loopne
mov
push
repnz
dec
xchg
inc
lock
pop
xchg
add
xor
jne
push
add
outsl
push
outsl
add
inc
out
pop
adc
jno
push
sbb
xor
imul
imul
cmc
iret
dec
mov
adc
shl
je
aad
sbb
push
inc
shlb
insl
mov
and
sub
adc
stos
out
ret
orl
mov
outsb
xchg
lock
imul
fsubrp
scas
repnz
hlt
mov
lcall
movl
out
scas
leave
jno
xor
fists
xchg
inc
mov
gs
aad
add
adc
jne
cmpsb
inc
sub
pop
mov
cmp
repz
sub
mov
and
sbb
mov
inc
or
imul
shlb
stos
and
cli
and
jmp
shrb
fcmovnu
xor
imul
fisttpl
imul
jecxz
lret
lock
movsb
sub
aam
cld
inc
jns
into
mov
or
or
and
out
les
sub
lret
sub
add
lds
and
into
pushf
add
jno
aam
icebp
mov
add
cs
les
pop
fimuls
fld
push
xchg
std
jl
mov
mov
enter
popf
jecxz
xchg
xor
add
out
inc
or
insb
and
and
sub
lcall
push
dec
xor
das
sbb
pop
out
outsl
into
out
sub
jge
in
xchg
and
or
mov
jae
inc
cmp
mov
xor
into
adc
je
dec
xor
in
push
shll
into
mov
arpl
cmp
out
add
imul
and
pcmpeqd
dec
pushl
enter
add
ret
adc
cltd
mov
xchg
ret
cwtl
aaa
dec
mov
iret
int
cltd
adc
js
pusha
push
dec
add
cmc
int
pop
or
bound
dec
jp
push
loope
mov
jg
mov
rolb
sub
or
adc
mull
add
into
mov
mov
insl
fucomp
cld
roll
xchg
pusha
cmp
mov
add
in
popf
pop
ret
push
pusha
jb
and
mov
xlat
jle
add
loopne
adc
adcl
sbb
push
insl
enter
adc
shrl
lods
inc
jecxz,pn
pop
shll
nop
addr16
jp
ret
jno
test
data16
outsb
push
hlt
inc
fadds
repnz
add
xor
stc
or
lods
loopne
jo
cli
and
enter
leave
or
imul
push
jae
mov
xor
pushf
add
jno
xor
shrb
jg
mov
cld
sarl
inc
dec
repz
mov
ret
jle
push
or
nop
dec
jg
push
ret
out
cmp
xchg
jl
enter
and
inc
and
mov
jecxz
cmp
ljmp
into
add
enter
xchg
jno
mov
insb
sub
in
mov
mov
mov
mov
mov
bound
mov
icebp
jb
dec
pop
xchg
pop
fwait
xchg
sbb
pop
subb
rcl
cmc
divl
std
rcl
sub
testb
popa
jae
or
in
std
repz
inc
std
xchg
mov
je
xor
adc
fnstsw
jno
add
adcb
dec
xor
xlat
adc
and
fcomip
leave
divw
std
jb
enter
out
fidivl
nop
jns
imul
push
loope
aas
out
push
test
orl
and
sub
xor
insl
sbb
out
clc
push
shlb
mov
cmc
imul
leave
push
vcvttsd2usi
icebp
iret
js,pt
pop
jecxz
out
hlt
flds
in
pop
adcl
test
mov
dec
outsl
mov
jbe
je
aaa
jae
cmpsl
ljmp
xchg
xchg
rclb
inc
jle
mov
inc
or
adcl
nop
sub
pusha
imul
adc
fst
xor
add
add
loop
and
and
icebp
cmp
jne
pop
ss
add
add
jmp
bound
xor
mov
adc
and
in
xchg
push
cmc
fistl
fisubs
sub
cmp
add
push
enter
sti
sbb
jg
subl
mov
pop
rol
sub
repnz
dec
daa
jmp
sub
jg
sbb
fwait
je
jp
mov
rcll
jl
adcl
int
mov
jmp
orl
stc
movsl
mov
hlt
push
adc
jne
jno
test
add
orb
movsb
outsb
cmp
xchg
push
add
into
jns
call
sub
mov
xchg
pusha
popf
loope
add
dec
lds
mov
sbb
pusha
call
int
nopl
test
fsubrs
add
cltd
xchg
push
loopne
je
jne
out
mov
inc
or
ret
dec
js
cmp
xchg
add
jno
push
mov
sbb
mov
mov
and
cmpsb
aaa
xor
andb
cmpb
and
cmc
sub
add
das
cmp
add
jno
cmp
aaa
aam
stos
xor
pop
pushf
add
pusha
jno
test
push
inc
jmp
cmc
orl
inc
jmp
aad
popa
mov
mov
inc
lea
fnstenv
ds
jae
sarl
test
mov
roll
test
mov
inc
roll
sub
repz
lods
or
inc
lea
outsl
stos
xor
cmp
xor
out
imul
push
fidivrl
push
icebp
xor
aad
adc
fs
stc
pusha
arpl
dec
shll
in
out
mov
add
jns
sarb
and
xor
movsl
in
in
call
add
mov
movsl
xchg
adc
xor
sarl
push
loopne
jle
icebp
xchg
push
adcl
add
fidivs
jmp
mov
test
fs
adc
pop
jg
loop
pusha
mov
add
push
shrl
les
xchg
push
pop
out
out
shlb
push
fcom
dec
in
adc
inc
std
push
lods
jl
mov
call
clc
mov
sbbb
outsl
lock
mov
enter
mov
or
xor
dec
xchg
and
sub
fistps
movsb
mov
sub
sti
xor
popf
out
test
les
push
sub
addr16
mov
test
and
out
inc
ret
adc
mov
mov
in
dec
pop
or
add
mov
in
cmpsl
or
nop
icebp
fdivl
stos
sarl
sbb
mov
mov
orb
mov
cmc
sub
adc
sub
push
jle
sbb
subl
xor
push
jno
mov
or
xor
fcoml
pop
sub
cmp
pushf
pop
fiaddl
mov
cli
jmp
mov
jo
adc
mov
jecxz
mov
hlt
and
add
add
add
pop
adc
adc
xchg
arpl
sub
jmp
jno
sub
push
sub
outsb
rcrb
jno
mov
orb
add
cmc
fstps
jne
mov
and
sbb
or
push
in
cmp
xor
push
adc
xor
cli
jno
push
cs
or
ficoml
lods
addb
enter
jno
aad
cltd
and
orl
aaa
add
mov
cmp
xor
or
mov
cld
xchg
and
cmc
sub
adc
pop
mov
out
jno
xor
into
xor
mov
adc
xor
iret
xor
fcomps
rcl
leave
cs
jno
jle
push
add
subb
and
mov
lahf
mov
xor
dec
push
jo
xor
mov
dec
sbb
imul
jle
jg
push
ret
fldcw
divl
jmp
jne
popf
daa
cmp
pop
jle
xchg
pop
mov
jns
dec
roll
mov
sub
ds
mov
mov
xor
sbb
imul
mov
push
push
rcrb
rolb
stos
xorl
stos
sub
jle
repnz
mov
add
add
sub
jle
pop
add
sti
xor
adc
scas
mov
into
arpl
cmp
pop
adcl
pusha
dec
outsl
add
out
movsb
mull
jnp
xor
sbb
subl
inc
adc
add
add
and
sub
roll
mov
icebp
sub
jne
cmpsb
aaa
shl
iret
and
jo
faddl
and
xchg
adc
shlb
iret
inc
mov
in
pop
enter
adcl
mov
inc
push
pushf
fnsave
and
mov
xchg
lret
inc
mov
icebp
and
js
xor
sbb
popf
outsb
xchg
in
js
push
lods
mov
xchg
ret
out
xor
mov
xchg
dec
dec
mov
jne
cmpsb
aaa
add
add
ja
pop
adc
fiadds
or
loope
sar
sub
ret
lcall
test
rcll
gs
mov
xchg
mov
jge
adc
andl
or
mov
mov
mov
inc
negl
push
jne
daa
mov
xor
ss
jno
cmpsl
outsl
mov
add
sti
jmp
mov
adc
cmp
fdivs
adcl
loopne
mov
je
cmc
mov
jecxz
ja
ret
popa
push
inc
fimuls
xchg
sub
jle
js
cmpl
repz
sbbb
push
scas
inc
enter
adc
jno
rorb
insb
cmp
mov
jno
nop
and
inc
push
cmp
orl
dec
imul
cmp
xor
cmp
xor
stc
iret
mov
and
divl
std
mov
dec
and
xchg
and
dec
and
std
shll
icebp
arpl
xor
ret
push
mov
dec
frstpm(287
push
push
push
fsubl
dec
movsb
cmp
in
popf
mov
jle
mov
pmaxsw
je
cs
test
and
mov
out
push
arpl
jl
adc
xchg
pusha
dec
loopne
sbb
push
or
sti
arpl
add
loopne
push
jae
push
int
mov
out
ret
jno
mov
dec
dec
cmp
or
shrl
sub
jns
rcl
jne
or
mov
push
in
mov
jle
pop
fistl
loope
jle
adc
mov
mov
lea
data16
sbb
add
mov
in
mov
add
and
popf
inc
sbb
push
mov
push
sub
out
sub
xchg
test
stos
push
cs
xchg
xchg
cmpsl
jne
cli
notb
or
pushf
mov
adc
sub
scas
les
divl
adc
icebp
int3
adc
pushl
mov
nop
cld
add
add
ljmp
push
adc
inc
push
jno
pop
arpl
add
sbb
sbb
adc
scas
mov
pop
dec
mov
inc
cmc
mov
xchg
add
mov
sub
mov
insb
fidivs
mov
aad
xorl
push
notb
or
add
pop
mov
jecxz,pt
xor
jbe
pop
cwtl
fdivp
lods
test
jae
xor
call
and
cpuid
mulb
mov
cmc
mov
hlt
gs
dec
xor
dec
or
xchg
mov
int
and
fsubrl
lds
test
cmp
dec
push
pop
mov
add
mov
nop
jbe
jns,pn
mov
dec
add
jmp
pushf
fwait
cs
mov
ret
loop
or
cmp
sub
and
xchg
xchg
sub
ficoml
xor
roll
jb
loope
cmp
std
stc
jecxz
and
cli
imul
icebp
mov
adcl
cmp
mov
mov
and
inc
sbbb
jge
xchg
xchg
and
adc
jecxz
stc
icebp
mov
mov
sub
loop
mov
scas
or
shll
push
pop
xor
mov
cmp
add
jge
je
mov
mov
dec
sub
xchg
clc
shlb
orl
jecxz
scas
mov
fwait
popa
add
dec
pusha
cmp
enter
mov
lea
and
loopne
repnz
insl
xor
mov
nop
dec
mov
lret
daa
mov
loop
and
xchg
pop
js
hlt
jb
loope
icebp
push
add
mov
shrb
push
fistpl
cmp
push
adc
xchg
and
xchg
sbb
roll
popa
cmp
loope
or
adc
xchg
inc
mov
pop
adcb
mov
inc
ret
outsb
mov
icebp
enter
int3
outsb
jecxz
or
and
inc
stos
orl
mov
int3
and
cwtl
sahf
adc
add
mov
and
xor
push
cmp
sub
out
sarl
add
dec
adc
and
fwait
inc
inc
sarl
jo
push
adcb
add
outsb
cmp
fsubrs
mov
jecxz
andl
adc
bound
push
add
pusha
jno
add
or
shll
iret
pop
xchg
xor
movq
fwait
mov
call
xor
cmp
repnz
mov
xlat
das
pop
and
or
xchg
aam
sarl
adc
pop
cld
xchg
add
sahf
pmuludq
push
sbb
ret
icebp
pusha
pop
jne
sub
add
stc
es
aaa
adc
mov
inc
out
fs
shrl
pop
jno
jl
loop
jne
add
push
jl
rolb
adc
call
loope
mov
adc
cwtl
mov
mov
mov
pop
insb
sbb
and
inc
outsb
pop
stos
add
repz
push
adc
cmp
jge
std
adc
sub
scas
inc
andb
jno
xor
or
out
inc
clc
xor
adc
mov
adc
or
pop
repnz
adc
or
stos
push
and
jle
dec
pushf
jno
mov
stc
and
add
jno
adc
mov
lods
pusha
inc
sub
dec
pusha
lods
or
or
and
cmp
xchg
push
push
ds
lods
jmp
xchg
add
loopne
xchg
inc
inc
lods
sbb
sub
loope
insb
push
mov
clc
leave
lods
or
clc
xor
mov
insl
jns
mov
mov
std
pop
aas
push
xor
in
xchg
cli
jne
sub
jns
mov
mov
je
sub
adc
add
adc
push
inc
mov
and
mov
shlb
mov
jl
jno
iret
out
aas
shl
adc
dec
outsb
dec
bound
and
add
jne
pop
jne
mov
sub
cmp
lock
sahf
inc
xchg
lock
jl
jmp
push
shr
dec
mov
cmp
out
and
jb
ss
call
cmp
cmp
shlb
xchg
xor
popf
gs
mov
aas
mov
fildll
lret
mov
cli
jne
adc
je
sub
adc
sbb
sub
cmp
or
jne
ficoml
push
stos
jge
sbb
xor
cmp
jno
in
scas
pop
fisttpll
pop
push
inc
shrl
mov
shll
and
clc
stc
or
scas
mov
in
pop
in
lods
sbb
repnz
xchg
mov
add
mov
sub
pusha
xor
repnz
testl
inc
mov
ds
jg
iret
into
jp
mov
stos
cmpsb
pop
jno
not
std
xor
dec
add
dec
mov
mov
inc
adc
or
sbb
popa
jl
or
xor
push
adc
das
cmp
inc
pop
xor
pusha
push
mov
sub
add
insl
testl
scas
or
dec
push
shll
stc
mov
add
mov
jae
and
xor
inc
fcmovnu
es
sarb
loop
or
jl
jmp
test
ret
jae
popa
jns
aaa
ror
cld
je
or
mov
and
xor
imul
leave
into
inc
adc
dec
cmp
loopne
lods
mov
inc
ret
pushf
mov
xchg
mov
or
lock
mov
jb
cli
cs
out
outsb
lock
hlt
and
test
aam
movsl
mov
fcomps
xor
bound
xchg
adc
shll
dec
jbe
mov
daa
and
pop
mov
lock
cmp
cmpl
pop
lock
cmp
pop
int
fwait
sub
in
jmp
mov
mov
mov
loope
idivl
pop
mov
cs
jnp
gs
xchg
int3
and
lea
adc
mov
call
popf
repz
sub
movsl
lcall
dec
lock
in
sub
push
pusha
shrb
aad
ficoml
out
into
adc
push
lock
fcmovnbe
int
push
sbb
pop
inc
mov
pop
lea
stos
lock
sub
jae
lock
jp
rclb
pop
mov
lock
into
jae
pushf
and
lahf
aam
xor
not
mov
mov
out
dec
test
xchg
insl
out
dec
sub
inc
xchg
sub
rcll
int3
add
repnz
loope
mov
rolb
adc
cmp
lahf
mov
sub
push
call
and
nop
mov
xchg
inc
lock
push
mov
xor
scas
jne
mov
cwtl
loop
lock
sub
jns
fstl
jecxz
fdivs
mov
mul
push
jbe
loopne
and
pushf
mov
sahf
mov
add
stos
xor
xor
adc
mov
xorl
sbbb
repnz
movsl
add
adc
pop
adc
cmc
push
cli
test
dec
jb
jo
lret
lock
repz
das
inc
mov
call
test
bswap
into
ljmp
xchg
and
mov
mov
push
jle
call
lock
jecxz
sahf
outsb
imul
movsl
jns
lock
rorl
mov
lock
daa
mov
mov
jo
int
cli
stc
or
adc
sub
push
pop
loope
movsb
data16
leave
sbb
mov
cmp
inc
lock
or
and
jb
jle
aad
jo
pop
mull
insl
push
in
dec
adc
push
lock
inc
cmpsb
push
sub
pop
xchg
lock
ret
mov
div
ret
adc
call
pusha
dec
sbb
mov
mov
fidivl
fists
dec
adc
fwait
out
test
and
jno
sahf
inc
jmp
test
mov
sbb
fsts
shll
dec
xorl
dec
aaa
fldenv
or
add
jo
inc
loop
pop
aaa
mov
mov
or
mov
jne
leave
dec
push
in
push
mov
xchg
or
pop
rorl
sub
mov
xor
std
add
adc
jae
adc
iret
sub
sub
pop
sub
test
aad
enter
addl
clc
jo
cwtl
testl
push
sbb
mov
in
fcmovnb
inc
adc
aad
sti
sbb
imul
xor
mov
out
xchg
test
push
int3
xchg
test
pop
fstpl
lods
dec
ret
mov
ja
mov
sbb
fcoms
sar
add
pop
or
lock
jne
dec
push
call
test
test
es
jmp
adc
fcom
xchg
lock
pop
mov
cmp
test
mov
iret
push
stc
push
mov
cld
imul
dec
lods
add
in
ficompl
in
xor
sub
mov
mov
loop
xlat
mov
arpl
popf
cltd
jnp
mov
or
pushl
pop
lcall
lods
mov
xchg
cmp
jmp
fs
add
pop
jns
lock
xchg
add
push
das
cmpsl
mov
lock
clc
push
lock
sub
jns
lock
inc
lock
fidivrs
std
ret
lret
pop
and
cmc
sarb
into
shl
push
xor
mov
inc
addr16
aaa
cmpl
movb
lock
mov
sbb
aam
test
push
out
shll
addr16
pop
in
sbb
testl
and
pop
mov
jnp
dec
lock
stc
mov
imulb
leave
imul
cwtl
rcrl
div
push
mov
cmp
push
push
das
ret
cmp
jbe
cmpsb
mov
mov
hlt
fnstcw
ret
inc
xchg
push
lock
xchg
jge
inc
stos
jno
mov
lock
stc
insb
orb
mov
pop
sub
popa
push
add
dec
jmp
ficoml
jae
mov
fcomps
xor
enter
mov
mov
lock
xor
cmpsl
mov
sub
fildl
adc
lock
rolb
pop
add
aas
fmull
aaa
mov
lock
rcll
fidivrl
ret
xor
cmp
repz
pop
pusha
sbb
push
popa
jne
shlb
pop
lock
fdivs
lods
lods
inc
loope
push
fstpl
mov
ja
sub
pusha
dec
repz
fistpll
xlat
imul
bound
jmp
in
int
xor
push
fs
lahf
movsl
ljmp
test
xor
insl
int3
pop
pop
lock
shl
mov
iret
ret
shrl
push
inc
pop
hlt
jnp
aas
pop
mov
jge
push
push
ds
ljmp
push
mov
sbb
shl
fsub
mov
negl
out
shrl
cltd
mov
add
xorb
imul
out
jae
push
push
dec
jl
dec
sub
lock
mov
push
gs
popf
adc
sarb
hlt
and
adc
dec
xchg
sahf
cmp
push
push
xor
add
inc
pop
aaa
lds
cmp
loop,pn
xor
jbe
add
fisubl
pushf
loop
popa
loope
test
ret
push
and
and
sub
mov
mov
dec
xor
mov
mov
dec
mov
lret
in
fldt
addr16
adc
mov
gs
sahf
mov
push
pop
push
mov
div
pop
push
or
xchg
add
jg
xchg
insb
and
adc
inc
jne
sub
or
enter
adc
add
not
dec
aad
pop
jo
pop
push
sahf
test
push
mov
insb
cwtl
push
sub
in
jno
pop
sbb
adc
enter
dec
xor
lret
mov
or
pop
enter
sub
dec
cmp
lea
mov
out
mov
arpl
loope
push
cli
fiaddl
inc
adc
dec
xorw
push
rol
push
adc
nop
jmp
dec
rcrl
divl
pop
andb
adc
nop
inc
or
loopne
test
add
out
loope
mov
sbb
mov
testl
fwait
add
xor
inc
enter
leave
enter
dec
inc
out
and
aam
shrl
xchg
arpl
fdivrp
and
dec
or
xchg
fwait
or
adc
and
mov
xchg
rcrb
das
test
cs
add
repz
lock
inc
and
repnz
lea
mov
movsb
push
sti
xor
test
push
jno
cmp
xor
out
test
jae
cmc
push
sbb
imul
xchg
aam
cmc
add
xchg
jne
fisttpll
adc
inc
mov
loope
pop
rol
rcll
or
jae
add
out
jl
pushf
outsb
les
icebp
mov
and
mov
mov
and
pushf
loope
xchg
mov
or
or
inc
loopne
loopne
dec
jl
arpl
pop
loopne
in
adc
repnz
aad
cmc
cs
mov
cmc
inc
in
push
mov
jae
or
push
addl
lea
sbb
cmp
jp
and
test
sbb
add
out
hlt
and
xor
dec
fcompl
adc
fidivs
faddl
sub
or
add
jmp
mov
inc
ds
lock
pushf
add
xor
flds
in
and
fmulp
subl
fldenv
fwait
xchg
jecxz
jbe
call
and
dec
pop
rorb
and
inc
mov
jmp
inc
loope
aam
push
inc
loope
mov
sub
adc
dec
inc
out
push
outsb
pop
sahf
jno
xor
loope
and
insl
test
pushl
ljmp
add
rorl
cmp
add
fiaddl
xor
cmp
sub
and
inc
std
js
icebp
mov
inc
mov
cmp
mov
lret
sbb
jb
adc
add
xchg
insb
xchg
popa
or
jae
xor
mov
mov
pop
adc
stc
je
push
or
adc
popf
mov
outsl
andl
addr16
push
sub
cmp
icebp
lcall
and
xchg
lcall
icebp
adc
lock
sti
mov
jecxz
push
jne
stos
pop
dec
push
inc
icebp
mov
aam
outsb
mov
and
jno
lcall
les
jne
aam
push
sub
inc
ja
adc
sbb
gs
xor
aam
pop
cld
dec
es
fisubrl
inc
paddw
push
or
pop
ljmp
out
arpl
sub
imul
cli
add
mov
jne
inc
or
add
cli
sbb
mov
pop
popf
sar
dec
out
xor
hlt
std
adcl
xor
fsubr
adc
and
roll
pop
dec
rorb
setb
ljmp
and
adc
mov
imul
aam
and
out
inc
cwtl
int
sub
inc
ficompl
xlat
in
outsb
adc
shl
inc
loope
cmc
stos
fcomps
dec
sbb
dec
mov
insb
fdivs
stos
std
xor
icebp
ficomps
dec
test
pop
rclb
shlb
push
xchg
ss
movsb
xor
lock
dec
in
fimuls
icebp
xchg
jne
sub
outsl
ret
xchg
into
nop
and
ret
in
push
fnstsw
push
ljmp
sub
adc
or
adc
loope
add
pop
jne
xchg
bound
adcl
fdivrs
xor
ss
or
stos
adcl
icebp
push
shlb
mov
cmp
xor
shll
mov
out
cmpsl
xor
inc
xchg
push
rolb
adcl
ljmp
adc
add
rcrl
repnz
inc
stc
inc
add
loope
inc
cmp
cmp
sarl
popf
in
mov
ret
and
mov
std
cwtl
push
or
jne
daa
in
iret
push
icebp
mov
sti
sbb
jmp
pusha
insb
xor
adc
pop
cmpsb
cmp
sbb
rorb
into
scas
sub
jecxz
jae
xchg
inc
jno
shlb
jmp
adc
andb
and
outsb
dec
adc
outsl
stc
mov
or
loopne
xor
cmpsb
cmpsb
sub
adc
mov
add
loope
stos
xor
adc
cmpsl
pop
and
sbb
dec
xchg
fwait
lock
pop
cmpsl
push
mov
test
incl
pop
in
mov
push
xchg
push
sahf
pop
jge
or
ds
push
cwtl
or
in
jae
loop
cld
inc
jno
jg
lret
flds
jo
daa
xor
lock
sub
imull
enter
pop
pusha
dec
xchg
lahf
dec
dec
shlb
scas
sarl
call
xor
lods
jnp
cwtl
fsts
aad
add
shl
mov
adc
loop
jo
xchg
loope
xchg
mov
ljmp
mov
jmp
pushf
gs
imul
lret
sti
sub
repz
or
xchg
xor
and
les
pusha
imul
cltd
out
dec
adc
lock
xor
jg
jo
rcl
or
pop
push
add
adc
add
fcmovnu
cmpsl
lock
and
ja
add
pop
sbb
inc
mov
lock
adc
jb
hlt
cmp
insl
and
lock
jno
fisubs
jecxz
das
fisubrl
into
adc
or
mov
lahf
and
push
or
cmp
mov
or
sti
add
pop
jb,pt
pusha
mov
fdiv
mull
and
in
or
daa
add
jo
dec
fcoms
ja
arpl
mov
or
sbb
xchg
adc
jmp
negb
lock
aam
mov
iret
lock
jns
mov
or
mov
dec
push
mov
out
jmp
outsl
jb
aad
push
repnz
sub
rcr
lock
pop
fcompl
lock
mov
lahf
adc
jns
lock
adc
sbb
and
std
andb
jecxz
aam
and
lock
xchg
xlat
xor
dec
mov
jmp
mov
pop
insl
lock
fisubl
lds
xchg
clc
lock
xchg
popf
sub
and
mov
inc
test
push
mov
in
xor
mov
mov
scas
adc
push
adc
out
xor
add
lock
fsubrs
pusha
jge
mov
cmp
xchg
lock
imul
and
adc
mov
or
data16
push
loop
xor
xlat
push
cs
fnstsw
outsb
add
faddl
push
pop
repnz
rolb
inc
sbb
pop
xor
jae
sbb
cmpsl
mov
insb
loope
in
adc
add
loopne
jle
push
push
shl
push
dec
ja
sub
push
stos
inc
xchg
mov
addb
mov
mov
mov
adc
jb
sbb
fldt
sbb
add
rorl
inc
lock
xchg
notl
push
lock
dec
cmp
push
push
pop
lock
add
adc
fldenv
xchg
xor
pop
pop
dec
hlt
outsb
ret
lock
test
out
fcoms
mov
pop
das
and
hlt
fists
push
sti
popf
xor
xchg
pop
lock
adc
loope
mov
icebp
sbb
sub
pop
and
ficoms
xchg
outsl
nop
lock
mov
lock
pop
pop
and
shll
outsb
in
hlt
lock
ret
gs
inc
sub
pop
icebp
test
adc
lods
nop
test
add
and
add
mov
lock
insl
dec
mov
mov
loop
adc
dec
outsl
inc
mov
dec
movsl
xchg
call
and
push
je
pusha
and
sub
and
xor
jl
notl
imul
mov
mov
mov
jg
cs
lock
repnz
adc
stos
scas
cmp
out
mov
sbb
mov
mov
aam
xor
push
xchg
scas
mov
in
dec
jge
xlat
ljmp
mov
sub
fstpt
in
lock
loope
lock
cmp
cmpsb
fsubr
popa
loop
pop
xor
dec
mov
xchg
push
add
and
jge
outsl
xchg
in
enter
ss
test
sti
or
jo
and
pop
xor
jge
div
mov
test
fwait
lock
out
cmp
cwtl
pop
shl
inc
cmp
aas
es
push
and
lock
pop
or
sbb
in
push
pop
fwait
test
jo
xchg
push
fcoms
scas
cmp
dec
nop
lock
jp
pop
jecxz
lcall
sub
or
lock
lock
dec
lock
scas
repz
out
jae
pop
ss
lock
testb
xor
pushf
pushf
inc
mov
jo
sub
fildll
fidivrs
lock
jecxz
xchg
xor
stos
lock
and
jb
ficoms
xchg
pop
ret
lock
pushf
pop
mov
aas
out
vpmacswd
mov
popa
adc
push
sub
adc
dec
inc
push
xchg
mov
iret
mov
xchg
add
rorl
or
push
int3
jecxz
in
push
int
push
push
adcl
mov
pop
dec
das
mov
rolb
popf
adc
stos
sbb
mov
mov
lock
shll
imul
inc
cld
out
aaa
fadds
lret
call
into
loope
daa
mov
or
pusha
inc
jmp
jno
in
lock
sub
in
nop
jecxz
xchg
es
sbb
out
enter
test
rcll
sahf
enter
fsubs
rol
mov
jne
adc
cmpsl
push
xor
call
mov
add
pop
bound
mov
xchg
lock
push
in
xor
adc
aas
pop
add
lret
push
mov
inc
mov
lock
sub
xchg
xor
lock
mov
negl
mov
pop
fmull
dec
dec
nop
repnz
xchg
inc
enter
adc
adc
out
das
hlt
pop
clc
lret
sarl
ss
lock
fcomip
scas
pop
mov
sbb
xchg
lock
lret
xor
ficompl
cmpsb
dec
adcl
leave
ljmp
push
xor
mov
divl
jo
jbe
adc
pusha
pop
ja
jecxz
add
mov
mov
dec
mov
mov
jl
push
and
jle
hlt
lock
ss
cmpsb
lock
mov
push
cs
lods
cmp
and
push
test
mov
push
lock
cmp
mov
add
nop
cmp
mov
outsb
in
sbb
scas
mov
xchg
imulb
shl
pop
mov
in
in
mov
test
or
fcoml
inc
mov
iret
fld1
add
cmp
jnp
mov
incb
enter
and
and
push
mov
inc
fs
loop
lahf
push
pop
pop
lock
mov
jecxz
mov
mov
pusha
adc
in
adc
cmp
lock
leave
push
push
jge
sahf
lock
cld
inc
mov
sbb
xlat
call
ss
push
dec
in
cmpl
out
jo
pusha
cmpsl
pop
aam
mulb
je
add
xchg
mov
mov
lods
xorl
loope
fsubl
shl
cmpb
adc
out
pop
mov
and
push
fcmovnb
cmp
dec
cmpsl
sbb
or
xchg
bound
imull
mov
into
jo
loop
dec
lock
push
test
sahf
out
lock
into
sbb
mov
rol
inc
ror
lock
int3
pushf
jle
add
jae
mov
xor
mov
clc
out
xchg
mov
pop
outsl
mov
dec
jns
cwtl
push
or
dec
and
push
rcr
mov
test
cmp
je
cltd
dec
dec
sahf
mov
es
jne
pop
iret
repz
inc
cwtl
lret
lahf
pop
jl
inc
xchg
in
add
xor
push
or
and
in
inc
leave
stos
push
push
sbb
xchg
gs
pop
cmpsl
je
lock
mov
sub
cmc
iret
xlat
pop
mov
mov
pop
dec
lock
test
xor
lock
mov
into
add
xchg
jg
lock
out
mov
xor
fwait
rcrb
pusha
inc
outsl
fmuls
mov
and
and
mov
push
add
sbb
sbb
imul
lock
mov
xor
stc
test
xor
into
ds
aas
negl
fisubrs
sbb
outsl
push
push
sbb
sub
mov
cmp
cmpsl
mov
lret
inc
or
loop
or
push
js
stc
sbb
add
or
mov
fidivs
rclb
xchg
in
inc
cwtl
lock
pop
mov
iret
lock
sub
dec
push
gs
adc
jbe
mov
ljmp
clc
ss
int3
cmpsb
mov
call
mov
and
fcomi
pop
push
pushf
adc
xchg
xchg
jo
scas
push
int3
ss
pop
mov
xor
pop
xor
lock
ret
xor
lods
popa
lock
mov
mov
inc
cmp
xor
aas
in
xchg
and
lock
test
mov
dec
jae
clc
xor
fwait
mov
or
sub
cmp
aad
jle
xor
shll
in
sub
pusha
adc
xor
pop
push
lret
negl
iret
push
and
adc
pop
test
call
lock
jmp
lahf
push
shl
pop
test
and
sbb
lock
jbe
ja
lock
pop
adc
enter
ficoml
pop
lock
xchg
test
mov
lock
clc
stos
mov
vshufps
dec
add
inc
icebp
mov
sti
lock
sbb
nopl
or
pop
dec
jg
jne
mov
aaa
out
test
gs
loope
inc
fstp
fdivrl
dec
rorl
push
je
iret
xor
jno
push
cmp
jg
movb
xchg
lock
sub
dec
add
in
fcoms
lock
jle
aas
fldl
jg
dec
repz
std
in
fisubrl
mov
loope
movsl
xor
or
mov
stos
in
jle
lock
test
cmp
lock
push
popa
mov
testb
ret
mov
cmp
imul
jnp
cld
mov
lahf
jle
in
adc
pop
aad
repz
test
jo
das
mov
pop
not
loopne
or
xor
sub
out
fldl
mov
sahf
xor
dec
sbb
je
lock
les
dec
jmp
mov
dec
add
mov
inc
in
inc
adc
loopne
cmc
out
negb
nop
inc
add
push
ret
xor
cli
mov
fstps
cld
push
fiaddl
enter
mov
leave
jp
mov
notb
xor
js
sbb
lock
jae
push
adc
lret
lahf
or
push
in
jg
ja
jbe
into
inc
les
xchg
inc
shll
pop
out
lock
inc
or
lock
pop
pop
out
xor
sahf
test
mov
mov
ffreep
mulb
mov
push
jmp
adc
shl
adc
lahf
aas
lock
fwait
push
dec
lock
shll
in
fbstp
pusha
js
xor
cmp
out
pop
clc
dec
mov
xor
in
cltd
mov
lret
push
fbld
sub
lock
mov
sbb
dec
xchg
xchg
lock
das
pop
dec
mov
push
daa
pop
and
lock
dec
lret
inc
fidivl
lock
mov
arpl
inc
sti
lock
sbb
dec
push
push
pusha
fsubs
imul
shll
jmp
repnz
repnz
sahf
jne
jns
sub
bound
lahf
out
lock
mov
lock
arpl
lock
pop
pushf
popf
adc
xchg
loope
ja
pop
in
jae
cmpsb
lea
and
fsubs
jge
mov
lret
testb
dec
outsl
popa
or
out
inc
dec
out
pusha
adc
push
inc
int3
cmc
pop
lods
popl
xchg
sub
daa
xor
lock
add
mov
pusha
jecxz
loope
int3
pop
pop
jmp
das
jo
push
lock
xchg
leave
fsts
xor
jb
das
xchg
pushf
jl
sbb
cmp
sbb
pop
sub
jns
clc
pop
dec
jl
adc
cmp
fdivrl
push
stos
lret
lock
sub
mov
push
movsl
cmp
pop
aas
mov
ss
and
xlat
sub
lock
push
adc
pop
jns
xor
pop
les
rorb
mov
mov
movl
rcrb
push
inc
mov
in
cltd
outsb
negl
int3
ret
lret
loope
into
xor
push
add
fidivs
out
js
mov
xchg
add
xor
jbe
inc
jmp
lock
add
and
fisttps
test
neg
test
ja
movsb
xor
cltd
xchg
dec
sti
shl
iret
dec
or
data16
arpl
addr16
fcomps
pop
dec
out
addl
aad
mov
sarb
mov
cmp
into
sub
std
outsb
sub
xor
add
or
jae
jb
push
pusha
jns
rcr
call
xor
loope
std
fpatan
icebp
xlat
or
mov
push
jne
fidivl
mov
inc
lds
testb
xlat
inc
push
mov
mov
lock
addb
lock
test
lock
pop
and
mov
cmp
adc
in
cmp
test
add
daa
enter
ret
mov
adc
adc
or
sbb
xchg
pop
push
dec
and
sbb
jp
lock
adc
rclb
lahf
cmpsl
lock
test
and
sub
hlt
pop
nop
jecxz
pop
imul
cmpsl
cwtl
adc
rcr
decb
xlat
cmpsb
adc
je
mov
mov
or
lock
dec
movsb
xchg
addb
icebp
dec
pop
sbb
mov
cmp
add
repz
and
cmpsb
mov
shll
or
cld
mov
xor
ficomps
sub
inc
mov
imul
js
sahf
sbb
mov
jl
scas
add
cs
pop
xor
imul
sahf
lock
pop
fs
loope
fst
lahf
and
lods
xor
lock
mov
mov
lock
adc
lock
sbb
and
roll
xor
pop
gs
imul
adc
addr16
sbb
lock
cmp
add
dec
xor
xchg
in
dec
adc
cmpsb
lock
inc
leave
jge
push
push
sti
loope
cmp
test
jmp
frstor
inc
lret
sub
sbb
push
cmp
mov
ss
sbb
lock
add
in
out
leave
lock
and
mov
ja
mov
les
and
dec
into
and
mov
pop
cltd
dec
add
add
es
inc
stos
ds
dec
lock
and
iret
cmp
mov
mov
pop
mov
rorl
inc
pop
call
sbb
sar
mov
dec
lock
or
int3
mov
mov
js
psraw
sar
lock
xor
push
loope
xor
push
inc
ss
ret
rcrb
js
jnp
mov
xchg
test
sti
push
sbb
ret
mov
adc
xchg
mov
add
out
mov
sub
movsl
dec
cli
pop
lcall
mull
pop
lret
aaa
mov
inc
jecxz
mov
mov
leave
add
push
mov
cmp
jne
dec
lock
ja
inc
xchg
enter
inc
es
and
cltd
je
in
jae
jg
loope
pop
xchg
arpl
cmp
adc
scas
icebp
cld
pusha
adc
popf
repz
add
fwait
lods
adc
xchg
inc
imul
out
and
mov
mov
imull
mov
sub
shl
push
adc
enter
aaa
sti
lock
scas
adc
dec
fwait
mov
pop
adc
dec
mov
pop
dec
out
xor
lock
push
mov
mov
aas
dec
jbe
xchg
xchg
dec
ljmp
movsb
lock
sbb
add
xchg
mov
push
shlb
in
fsubrl
aas
fistl
in
dec
gs
insl
ret
add
dec
es
lock
sub
popf
imul
movsb
cmp
xchg
test
lahf
mov
xorl
pop
xchg
push
or
mov
out
rcrb
and
pop
cmp
lret
xor
mov
pop
cltd
push
xor
ffree
movsbl
call
lock
ret
lret
daa
xor
outsl
add
lds
arpl
pop
aas
adc
sarb
out
gs
sbb
lock
push
pop
into
jbe
sbb
movsl
and
ret
fwait
push
mov
xchg
imul
push
xor
or
int3
xor
jo
mov
add
rcll
sub
push
lock
jo
cmp
mov
lret
shlb
loop
mov
xorl
jp
mov
sbb
mov
lret
lods
lahf
shrb
push
cltd
ret
pop
dec
arpl
cmp
sub
in
mov
xchg
pop
popf
js
push
adc
mov
cmc
lock
neg
xor
pop
rcrb
lret
jb
jno
push
sbb
mov
and
cmc
cmp
into
repnz
sbb
pop
sahf
mov
and
sbb
scas
scas
lods
hlt
out
adcl
adc
and
add
xor
jb
push
inc
insl
and
mov
jbe
negl
xor
inc
sub
pop
loope
int3
rclb
lock
push
fstpt
inc
sti
je
lock
nop
rorl
push
inc
ret
ljmp
push
and
setae
xor
cli
shll
lock
fcoms
rolb
jecxz
out
loopne
sub
lock
pop
sar
outsb
push
ret
inc
lds
outsl
push
lock
adc
lock
fiaddl
pop
lock
insb
mov
loope
cmp
add
xor
push
divb
fcoms
stc
lret
jbe
mov
into
xchg
cld
jo
pop
jae
sbb
or
xor
lock
movd
add
push
pop
push
sbb
adc
sbb
xor
cli
in
inc
dec
push
xchg
sahf
jnp
sub
sub
and
cmpsb
sub
js
mov
inc
pusha
mov
lret
bnd
aam
pop
xor
test
jo
imul
pusha
adc
jmp
scas
les
or
push
ja
lock
in
sbbb
shrl
inc
hlt
push
jge
mov
mov
push
movsb
cwtl
jl
test
stc
xchg
cmp
out
jbe
lahf
mov
add
dec
lock
add
adc
cld
pop
mov
mov
scas
jno
mov
es
test
fidivl
mov
pop
test
dec
lock
aad
jle
mov
negl
inc
lock
or
addr16
xchg
sar
xor
push
in
pop
test
in
lock
ficoms
jecxz
push
dec
lock
das
mov
hlt
dec
pop
js
in
xchg
add
fwait
xor
xor
xchg
jge
shl
xchg
mov
jo
pop
mov
aad
push
in
mov
push
int
cmc
fsubrl
fs
and
loopne
mov
jl
sbb
xchg
mov
into
decb
mov
fs
cmp
pop
hlt
out
and
fsin
mov
lock
cmp
cmp
add
cmpsb
cmp
nop
mov
jo
lock
cmp
shll
scas
fsubr
xchg
dec
jo
lock
imul
fldt
popa
pop
xchg
mov
call
xor
xchg
lock
sub
arpl
mov
mov
xor
push
adc
pop
neg
mov
in
out
jae
lock
sub
push
movsb
mov
lock
add
xor
arpl
rcll
movsl
pop
hlt
icebp
sbbl
lock
sti
je
cmp
push
mov
leave
addl
pcmpgtw
xchg
lock
push
add
loop
repz
dec
xchg
xchg
fsubl
stc
mov
add
pop
xlat
out
sub
int
mov
cmp
lret
or
addl
or
mov
cwtl
xor
dec
repnz
mov
lock
flds
lock
loop
inc
push
jle
push
dec
xchg
push
inc
lret
lock
iret
adc
lock
pop
or
or
and
popf
lock
frstor
call
lock
mov
ljmp
mov
sbb
ret
add
loope
add
sub
icebp
fldl
sub
sti
neg
adc
adc
xor
shl
xchg
movsl
call
mov
pop
shl
ret
cmp
stos
outsl
mov
je
push
adc
icebp
hlt
adc
add
stos
rcrl
and
iret
rorl
cmp
add
push
fldenv
fisttpll
idivl
out
adc
fmul
out
ret
adc
out
and
and
div
ret
adc
pushf
bound
rorl
ljmp
push
enter
leave
sarb
shll
jae
add
xor
xlat
xchg
inc
ret
and
test
movsb
in
mov
jg
loopne
icebp
out
mov
in
sbb
fs
cmp
fwait
pop
imul
adc
adc
jp
push
xchg
out
push
inc
xchg
xchg
inc
pop
sbb
push
add
mov
mov
and
adc
add
lock
add
jge
sbb
adc
ljmp
adc
das
bnd
loope
mov
jmp
test
dec
jne
aas
andb
push
rclb
mov
jmp
cwtl
div
cmp
inc
pushf
sub
xor
hlt
fcompl
push
fsub
imul
js
repnz
in
imul
fucompp
and
or
mov
outsl
ljmp
mov
mov
xor
mov
mov
mov
jne
lcall
jb
push
in
mov
insl
dec
popa
mov
js
push
sub
pop
add
cld
neg
icebp
push
push
mov
jg
mov
lock
ret
loop
movsb
or
dec
or
rcrl
lock
pushf
cmp
mov
in
sub
je
pop
pop
lock
out
stc
fcoms
hlt
mov
pusha
jp
shl
fcoml
mov
movsl
mov
insb
adcb
mov
ja
xorl
pop
mov
fstps
lock
idivb
jnp
lret
in
in
lea
mov
mov
jp
movsb
dec
push
lock
jg
pop
shlb
mov
jo
popf
lock
test
cmpsl
imul
es
orb
loope
add
stos
and
lock
sti
mov
lock
or
cltd
mov
lods
bound
and
ja
leave
fs
shlb
lock
sub
fs
xchg
mov
rcrb
popa
jae
insl
jns
pusha
mov
jecxz
jbe
bnd
lock
jns
rcl
lahf
jb
lock
je
leave
sti
inc
xchg
cmp
or
ret
xor
ds
insl
lock
sbb
neg
fnstcw
fcoms
lock
cltd
int
cmp
pop
loop
test
xchg
xor
pusha
mov
dec
adc
sub
pandn
push
dec
sbb
push
sbb
add
mov
fs
in
jno
in
test
push
cmp
clc
das
add
mov
mull
test
hlt
loope
arpl
mov
ja
mov
in
sub
inc
stc
bound
lea
mov
lock
mov
int
ror
xor
addr16
mov
ss
lock
add
insb
xchg
icebp
lock
cmp
ds
or
cmp
mov
lret
in
or
mov
dec
test
mov
out
or
in
scas
les
ret
and
pop
adc
lock
mov
out
test
fsubp
push
leave
out
mov
lret
sbb
scas
das
rcll
ss
lahf
push
pop
sub
mov
mov
dec
pusha
stc
popf
mov
ds
add
xor
fwait
cmpsl
pushf
movsb
add
pop
push
enter
sbb
jnp,pt
repnz
lock
xor
mov
xor
and
and
xchg
pop
arpl
push
xchg
scas
nop
dec
loope
out
aaa
fwait
div
and
cmp
inc
fcompl
add
mov
shll
in
pop
fsubrs
lock
insl
adc
xchg
loope
dec
and
scas
inc
fildl
test
and
inc
sub
daa
jo
or
mov
mov
xor
sub
dec
jg
mov
mulb
lock
es
push
rolb
sbb
pusha
iret
xor
sbb
out
cli
imul
fistpll
lock
adc
dec
in
imul
inc
test
add
mov
es
pop
hlt
lret
mull
xor
add
lahf
sahf
xor
or
xchg
cmp
push
lock
je
shl
mov
cwtl
scas
inc
xor
lock
pextrw
xchg
rep
loope
pop
push
std
lock
mov
in
into
imul
movsl
sarl
xor
pop
int
lock
and
loope
lock
mov
sbbl
xor
pop
add
push
cmpl
push
lock
pop
push
mov
lock
out
aas
jo
jne
lods
jns
cmp
hlt
sub
xor
jl
mov
das
ficoms
dec
scas
leave
cld
and
divb
push
mov
in
mov
mov
nop
rcr
hlt
xor
mov
fistl
push
subb
pop
jbe
add
push
jmp
push
in
xchg
xchg
js
lock
pop
inc
mov
ret
mov
push
lock
lret
and
movsl
rorb
lea
jne
mov
fwait
push
roll
lss
or
lock
shlb
enter
inc
stos
mov
jmp
rclb
xor
cmp
cmpb
aaa
pop
jl
sti
sbb
imul
xchg
add
jae
cmc
pop
ror
movsb
pop
cmp
icebp
aam
inc
daa
mov
stos
mov
shll
push
shl
xchg
xor
jl
mov
in
shll
ficoms
or
ss
in
call
cmc
inc
repnz
in
ss
push
pop
mov
pop
or
das
sub
inc
outsl
mov
push
cmp
xor
pop
push
aad
mov
outsb
push
mov
push
rcll
clc
xchg
jae
hlt
sub
jne
cld
jl
ret
mov
aad
add
cmpsb
lea
push
or
orl
inc
mov
adc
adc
pop
or
push
xor
repnz
shl
lds
insl
adc
xchg
test
test
insl
add
in
mov
imul
mov
xchg
xchg
push
cmc
add
test
xor
jmp
pop
fwait
sbb
test
btr
das
pop
in
fdivp
mov
and
arpl
test
aam
je
sbb
bound
js
adc
push
popf
shlb
scas
out
adc
sahf
adc
cmp
pop
jno
inc
rcr
inc
adc
push
xor
cmp
icebp
or
fstp
out
pop
adc
add
in
pop
inc
jmp
shl
push
int
jnp
imul
sahf
insb
test
pop
fistpll
cs
adc
pop
or
add
cmp
out
mov
fstpt
lret
and
and
xor
popa
push
mov
mov
pop
shl
add
xor
lods
add
imul
loopne
shlb
adcb
fldt
test
clc
mov
adc
and
shl
inc
aas
nop
xor
xor
mov
pop
jns
mull
or
ret
push
adc
lock
sbb
imul
sarb
icebp
hlt
mov
popf
push
popa
je
test
xchg
pop
dec
insl
xchg
lock
mov
rcrb
div
fildll
add
lock
cmpsb
push
call
out
stc
test
pusha
jmp
jmp
data16
lock
add
outsl
xchg
leave
xchg
pop
lock
in
int3
push
and
push
jecxz
scas
xchg
jo
lock
adcb
jae
xlat
test
hlt
mov
jnp
hlt
into
bound
mov
inc
call
addl
mov
sbb
jo
sahf
dec
test
and
insl
mov
test
loope
js
sub
sbb
pushf
fisubrl
and
fadds
roll
cmp
mov
sub
fldt
notb
nop
imul
jle
xor
pop
repz
push
lock
or
pop
mov
outsl
add
mov
jle
es
push
lock
dec
sbb
stos
mov
imul
and
call
hlt
scas
jb
xlat
push
daa
adc
lahf
xchg
dec
sahf
jne
es
push
push
cmp
mov
lock
int3
inc
mov
or
adc
movsl
sub
xchg
mov
iret
or
stos
add
imul
scas
cmp
fstpl
into
and
add
out
lock
outsb
cmp
testb
xorl
fdiv
inc
push
push
lods
mov
adc
jecxz
pop
fwait
std
mov
xor
lods
call
mov
sbb
loop
xor
es
pop
pop
push
scas
xorb
mov
loope
push
xchg
and
lds
mov
xchg
sbb
xor
lea
imul
sarw
adc
mov
dec
mov
ljmp
pop
xchg
jne
cmpsb
inc
xor
dec
and
dec
and
and
mov
mov
jle
mov
add
add
cmc
adc
xchg
roll
sub
xchg
mov
xor
push
mov
test
adc
push
lea
xchg
mov
jo
push
jno
aam
pop
inc
shl
cmp
outsb
jb
fcoml
sbb
repnz
add
andl
movsb
mov
cmpsl
iret
shl
push
push
or
lock
addb
jle
aaa
pop
lock
das
mov
lock
dec
mov
lock
cmp
ret
sti
je
test
jmp
dec
psllq
mov
mov
cmc
add
scas
inc
mov
mov
pop
loop
sub
sahf
sti
adc
xor
lock
push
mov
fidivl
jae
icebp
jmp
jg
lock
test
jle
xchg
lock
xor
dec
sti
lock
xor
push
xchg
leave
push
lock
add
mov
pop
sahf
outsl
and
ret
fyl2xp1
inc
js
jmp
push
mov
lea
push
mov
add
push
pop
and
rolb
outsb
pop
es
add
jne
jge
out
into
shl
stos
adc
je
dec
inc
cmp
in
int3
call
adc
pop
shl
test
xchg
pop
mov
mov
aas
mov
fwait
sahf
cli
popa
and
hlt
jnp
xchg
outsb
pusha
mov
in
adc
sbb
pop
iret
inc
jns
dec
stc
inc
fcompl
cwtl
fdiv
imul
gs
lock
nop
aad
loope
das
in
xor
jg
xchg
cmpsb
push
int3
pop
repnz
add
push
jnp
mov
pop
sbb
mov
popf
lods
icebp
and
in
cltd
lahf
jmp
xchg
lock
push
lock
inc
shlb
leave
cmpsl
or
ljmp
daa
sub
ret
cs
mov
xchg
movsb
lock
pop
gs
loop
lock
jo
ljmp
xor
xor
rcl
in
lahf
jae
test
or
mov
adc
sbb
mov
or
mov
daa
mov
add
inc
ljmp
mov
adc
and
fcoml
imul
pop
out
jecxz
ret
icebp
fwait
dec
xor
adc
xchg
in
jno
int3
mov
leave
icebp
imul
outsb
stos
lock
int
in
dec
dec
cli
xchg
mov
sti
sbb
xchg
lock
nop
arpl
hlt
jmp
je
aad
push
cltd
outsl
adc
adc
xchg
adcb
fisubrl
jbe
sub
pop
inc
adcl
dec
or
mov
sbb
xchg
jo
or
add
loope
jno
dec
loopne
rcrl
add
fsubr
scas
jg
dec
gs
mov
add
or
test
inc
popa
sbb
mov
hlt
or
xchg
cli
add
mov
adc
sbb
divb
mov
je
cmpsb
xchg
and
inc
lret
xchg
adc
push
adc
popf
adc
jb
cwtl
push
scas
cwtl
sub
cmpsb
cmc
or
xor
inc
aam
adc
fdivp
or
cltd
in
xchg
adc
jecxz
pop
stc
mov
lock
xchg
cmp
jle
or
loopne
fldl
icebp
sbb
cwtl
rcll
cmp
cli
out
dec
adc
cs
clc
cmp
lahf
fsubrl
imul
and
pop
cmpl
rcrl
int
leave
adc
inc
xchg
dec
pusha
jmp
xchg
movsl
aad
inc
dec
in
pop
add
pushf
adc
insl
and
out
jmp
xchg
fs
inc
or
lds
mov
adc
insb
cld
jae
mov
sbb
push
arpl
out
and
xor
fnsave
daa
dec
ja
outsb
mov
xor
add
push
rclb
stc
es
scas
xor
mov
in
jno
out
xchg
pop
stc
mov
gs
jb
ja
push
inc
outsl
sbb
test
negl
and
jp
push
jno
mov
test
leave
out
push
lret
icebp
js
lock
add
inc
xchg
in
ret
sub
cmpsl
ds
notb
rclb
add
mov
out
mov
jnp
sti
imul
fucomi
jnp
mov
pop
js
lods
lret
mov
in
mov
movsl
imul
sub
push
out
or
inc
outsl
mov
adc
arpl
mul
lock
adc
mov
xchg
sbb
lea
incl
cmpl
xor
jno
push
in
stos
mov
subl
mov
bound
cmpl
adc
pusha
xlat
mov
test
cmp
push
shrl
jno
or
not
adc
fldenv
or
sti
mov
jo
cmc
daa
mov
jne
cmpsb
aaa
pushf
add
add
adc
adc
imul
fdivr
insb
jbe
mov
pop
and
jne
fisubrs
ds
pop
sub
adc
pusha
mov
and
push
push
insb
adc
add
mov
inc
sti
lcall
xchg
loop
mov
mov
push
fwait
nop
imul
or
jmp
mov
adc
incb
mov
jecxz
jg
rclb
int
mov
jle
jno
mov
aas
sbb
int
mul
sub
push
cmpsb
aaa
add
add
add
je
lods
mov
roll
push
out
mov
pusha
popa
pop
shl
jno
les
movl
cmp
inc
imul
mov
inc
sbb
shrb
in
push
xor
add
insb
popa
sbb
lods
sahf
into
mov
int
xchg
inc
dec
movsb
sub
int
or
test
xchg
lcall
inc
cs
xchg
orl
jmp
test
xor
jae
hlt
arpl
movb
add
das
insl
xor
jb
or
adc
fxtract
xchg
cmp
ror
xor
aas
aaa
xchg
bound
jl
sbb
jl
mov
and
dec
rcll
les
test
adc
xorb
mov
test
sub
cmp
call
imul
movsb
adc
mov
jg
xchg
mov
xor
aad
aam
sub
sbb
addr16
cmp
cmc
mov
andl
xor
pushf
aas
ljmp
clc
jmp
test
mov
inc
shrl
add
shll
divb
jecxz
and
nop
mov
ljmp
pushl
loope
inc
pop
ja
hlt
and
ret
add
subl
jnp
out
xchg
pop
rolb
arpl
js
dec
adc
scas
jmp
adcl
push
jne
pop
gs
push
fiadds
inc
sub
add
enter
xchg
fs
pop
xor
enter
dec
ss
adc
adc
xor
inc
adc
jae
jne
jecxz
andl
dec
fsubrs
in
lea
adc
insb
mov
mov
movsl
orb
mov
aam
add
test
mov
jae
mov
pop
xor
fisttpll
mov
mov
in
jo
pusha
je
jne
outsb
loope
pop
inc
in
icebp
in
xchg
movsl
push
cmpsb
mov
test
outsb
or
adc
add
arpl
dec
adc
cli
jno
sarl
je
push
and
and
jp
cs
and
pushf
int
cld
fcoml
dec
sahf
xor
inc
data16
mov
dec
cmp
cmp
fwait
nop
sbb
mov
loope
insb
icebp
test
mov
cmp
pusha
lods
loopne
clc
scas
mov
arpl
fisubrs
ds
loope
mov
fsubr
ja
jno
mov
jle
rclb
icebp
iret
xchg
test
inc
sahf
cltd
icebp
scas
push
cwtl
xchg
enter
ret
xchg
je
scas
call
add
popf
aam
sub
shl
lahf
sub
loope
les
pop
clc
test
adc
test
shrl
outsl
notb
aad
pop
outsb
push
arpl
pop
mov
movsb
or
pop
xor
mov
dec
sbb
jnp
ret
pusha
jecxz
daa
push
repz
subl
xor
shlb
fistps
pushf
roll
add
push
scas
int3
push
rclb
jno
xor
loope
push
fldl2t
push
lea
std
inc
loop
or
out
xor
sti
cmpsb
rclb
pop
mov
xchg
and
xor
pushf
adc
add
mov
push
xchg
bound
mov
bound
loop
jno
xchg
fisubs
inc
add
pop
xor
insb
push
loopne
pusha
stos
lcall
sub
insl
lea
push
jae
pusha
fldcw
pusha
bound
mov
mov
or
jno
xor
data16
outsl
add
mov
add
sub
add
ret
add
push
jnp
das
movsb
jbe
icebp
mov
dec
stos
xor
sub
xchg
roll
ret
js
ja
cs
xor
ss
fcomi
and
test
imull
jmp
lock
movsb
and
test
mov
mov
adcl
subb
cltd
xchg
and
sbb
push
xchg
mov
add
push
and
mov
sub
imul
pop
pop
mov
in
dec
cmp
jae
pop
adc
jnp
pop
xor
aam
jae
stos
enter
aam
add
aad
out
cmp
scas
jl
jge
xor
dec
clc
xchg
sti
gs
dec
and
jl
aas
xchg
push
and
aas
loope
push
xchg
pop
mov
pushf
add
sbb
jne
inc
pop
insl
sub
nop
mov
inc
push
ja
xor
in
or
fsubrs
jno
and
sub
outsl
sub
inc
jmp
dec
inc
imul
std
cli
popa
sub
test
add
adc
cltd
pop
mov
insb
adc
shl
leave
inc
neg
push
pop
aam
or
sub
mov
pusha
pop
add
xchg
arpl
xor
shll
sbb
inc
test
daa
test
sub
push
lret
lods
sbb
out
popf
sub
mov
loopne
mov
sub
pop
adc
cmp
shlb
cs
jo
fwait
loopne
inc
daa
mov
xor
test
cmp
icebp
adc
repnz
jno
mov
subl
insl
mov
dec
outsl
sub
test
mov
iret
lock
iret
sub
adc
mov
or
push
rcl
pop
sbb
rorl
and
popf
jecxz
push
jno
orl
wrmsr
rcll
add
cmp
ret
arpl
lret
mov
sbb
add
adc
xchg
fbstp
lcall
adc
and
mov
cwtl
cmc
pop
and
ljmp
hlt
and
loop
pop
insb
pop
sahf
fidivl
repz
add
mov
pop
add
dec
xor
and
add
cmp
jle
add
dec
mov
popf
push
fildl
rep
cmp
xchg
inc
cmp
in
or
add
xor
push
or
xor
popl
repz
adc
aaa
push
jge
dec
sub
or
xchg
jne
cli
or
imul
shll
js
shll
rcr
pop
jp
adc
adc
enter
mov
mov
push
shl
push
sbb
nop
fisubrs
roll
movsl
daa
mov
cmp
rcl
or
xchg
mov
fsubl
sbb
add
cmp
adc
mov
push
pop
mov
sub
mov
mov
in
and
pop
xlat
scas
or
push
add
cmp
jno
cmp
mov
das
imul
and
dec
out
data16
out
jno
and
addr16
cmp
enter
imul
aad
outsb
xchg
sbb
out
lods
jo
ficoml
jns
jbe
jl
jl
enter
or
add
xor
out
mov
repz
loopne
adc
and
rclb
push
cmp
pop
pop
outsl
repz
inc
arpl
in
mov
roll
jecxz
ja
ja
cli
sub
bound
into
test
push
shlb
dec
into
js
lret
fsubrp
cltd
fistl
add
arpl
jmp
orb
loope
ja
or
jns
add
push
icebp
and
in
sub
xchg
mov
xor
cmpsl
push
sub
jb
xchg
adc
mov
xchg
and
sub
test
divl
pop
adc
jle
lock
and
gs
sub
outsl
mov
cmp
dec
in
ss
sub
add
into
subl
addl
imul
stc
inc
cld
sbb
sbb
sub
insl
aam
movsb
js
popa
xchg
or
incb
fcoms
outsl
pop
jae
rcl
addr16
mov
mov
push
rcrl
add
adc
add
pop
mov
jg
nop
adc
xchg
push
lahf
aas
xchg
xor
in
pop
add
fcoms
popa
les
test
enter
add
scas
mov
shrb
sbb
call
jae
cmc
push
fisubl
lret
jno
ss
jns
dec
lret
cmp
mov
out
btc
add
dec
or
mov
xor
and
cli
repnz
mov
add
jne
std
inc
mov
loope
push
and
cmc
jmp
bound
add
dec
pop
pop
jb
mov
mov
sbb
cmp
pop
ja
loope
inc
shl
nop
in
pop
sub
addr16
icebp
arpl
js
jno
pop
add
arpl
dec
roll
fbstp
pop
stc
int3
dec
and
cli
add
ss
push
lcall
inc
xor
andl
mov
xorl
shrl
pop
sub
leave
jno
in
and
test
mov
mov
xor
xor
adc
addb
rol
fldl
sub
jno
movsb
cwtl
test
rcrl
dec
xor
mov
sbb
idivl
fdivl
clts
mov
pop
icebp
fnstsw
popa
sti
je
test
xor
pop
dec
or
xor
lret
jne
cmc
test
jmp
adc
mov
or
add
inc
cmp
add
sub
stc
push
in
adc
jne
std
adc
mov
cmp
xchg
shld
mov
in
out
dec
jecxz
fwait
imul
ljmp
imul
sub
sub
cld
sub
mov
test
xor
mov
adcb
jl
es
aaa
pop
jae
sub
mov
mov
inc
jno
sbb
jne
inc
xchg
sub
and
lods
xor
rorl
lds
add
in
popf
jecxz
out
pop
dec
jns
jno
mov
rcl
jecxz
adc
xchg
popl
movsb
insl
lret
and
adc
lret
push
sub
cmp
movsl
lret
and
pushf
ja
cmp
test
sub
das
pop
fists
sub
push
dec
adc
or
push
add
jle
rclb
hlt
shlb
aad
jnp
cmpsb
add
mov
lods
or
or
jae
xchg
int
addb
lock
jno
insb
xor
xor
rcll
inc
push
push
jo
inc
cmpsl
add
das
xor
add
ljmp
or
xchg
xor
push
push
rclb
push
push
push
aaa
cmpps
and
mov
mov
xorl
sub
inc
test
pusha
and
or
cwtl
into
arpl
xor
addb
or
and
fists
push
fwait
lea
call
mov
out
adc
pusha
mov
dec
rol
push
pushf
decb
add
push
adc
cltd
mov
inc
fiadds
sub
mov
insl
or
add
cs
cmp
pop
aas
lea
bound
jmp
cmp
addl
icebp
sbb
sub
adc
xor
mov
adc
sub
adc
xor
or
cmp
nop
clc
cmp
lret
add
sub
rorl
add
sbbl
shrb
cmc
cmp
cmpsl
adc
pop
cltd
push
adc
cmpsl
mov
xchg
mov
xor
jmp
loope
rorl
pop
push
pop
and
loop
jle
popf
xlat
mov
aaa
dec
add
test
jg
nop
add
and
add
repz
dec
adc
mov
pusha
in
xchg
pushf
mov
inc
jbe
fdivr
push
mov
and
pusha
push
jle
dec
xchg
out
jns
mov
outsb
add
add
rcrb
or
push
insb
add
adc
pop
fisubrs
int
or
push
in
jmp
lock
loope
ja
jns
pop
pushf
cld
fwait
call
orb
add
push
push
pusha
lock
xchg
jg
sub
jne
lock
mov
sti
insl
rol
lock
pop
and
shl
jo
fisttpl
fdivs
mov
mov
ss
lock
adc
mov
add
jl
mov
add
pop
jnp
int3
dec
clc
or
fs
fnstenv
dec
mov
nop
inc
lock
cmpsl
pusha
or
divl
mov
mov
xchg
sbb
xchg
lock
cmc
jne
jl
js
and
popf
shrb
outsl
lock
out
or
pop
cli
lock
test
lock
mov
orl
lock
xor
fisubl
inc
js
pop
fs
shll
mov
pop
repnz
and
pop
cmp
ljmp
jbe
outsb
lock
mov
mov
xor
push
jp
pop
mov
push
pop
sub
loop
lahf
mov
and
or
call
je
push
and
jecxz
cli
mov
idivb
movsl
jb
clc
mov
xchg
add
mov
pushf
out
sub
xchg
dec
in
inc
in
test
pop
or
movsl
adc
lds
rcr
lock
pop
dec
mov
inc
xchg
idivb
or
arpl
xchg
mov
aas
mov
shll
push
fidivs
inc
sub
lock
mov
arpl
je
ljmp
fldenv
or
lods
lock
nop
push
shl
and
xchg
fsubrp
int3
jae
les
mov
lock
cmpsb
mov
or
add
xchg
lock
aas
stc
or
ret
lock
pop
push
fcmovu
enter
mov
sbb
mov
stos
movb
nop
push
sbb
test
and
xchg
or
daa
lock
lcall
lock
aad
dec
dec
push
xlat
dec
repz
lock
je
pop
mov
mov
dec
cmc
aam
lock
or
fst
pop
aas
cmp
mov
lds
out
lock
mov
cmp
lock
dec
jae
out
sub
pop
inc
fwait
push
mov
xchg
in
fisubl
mov
ret
jmp
xor
inc
cmp
cmc
aas
in
cmp
cmp
pushf
jmp
pusha
lret
fisubl
add
out
pop
fsubl
add
nop
mov
std
je
xlat
mov
jg
outsb
sahf
icebp
clc
fnstcw
pushf
mov
sub
push
mov
mov
push
add
dec
jae
int
pop
and
mov
shr
inc
outsl
add
xor
and
adc
mov
jae
or
jle
dec
inc
mov
mov
cmpsl
mov
push
cmp
in
gs
xchg
dec
sub
ret
outsl
addr16
jge
mov
mov
fimull
addl
mov
arpl
xor
sahf
jl
icebp
or
adc
es
jno
test
cmpsb
hlt
push
mov
imul
in
bound
jae
add
pop
idiv
std
arpl
sub
xorb
xchg
sarb
push
mov
mov
imul
mov
push
push
mov
mov
fwait
movsb
aaa
test
sbb
sbb
cmpsb
sub
pop
les
movl
rclb
outsl
lock
jno
xor
sbbb
and
filds
sar
ja
out
jg
push
push
cmpl
ret
clc
fdivrs
xor
push
push
loopne
sbb
call
xor
pop
in
int
xchg
dec
aam
mov
jnp
jne
cmpsb
aaa
rorl
ret
loopne
pop
push
rclb
jbe
arpl
or
shrb
pop
mov
inc
clc
lods
and
inc
shl
sbb
sbb
incl
pushf
mov
adc
pushf
loop
sbb
adc
jecxz
lea
dec
cli
dec
lahf
cmp
inc
stos
inc
push
or
cmpsl
sub
and
mov
mov
dec
adc
xor
mov
arpl
sahf
mov
insb
movsl
mov
nop
xchg
push
int
shl
test
jl,pn
xor
xor
inc
adc
add
ljmp
shl
xor
int
add
adc
push
adc
sbb
jb
imul
jecxz,pn
roll
icebp
pop
ja
sub
dec
adc
std
mov
and
icebp
ficoml
loopne
cwtl
sbb
shlb
inc
imul
insl
xchg
cmpsb
popf
insl
fisttpll
xor
js
sub
jae
lret
clc
jmp
xor
popf
xor
repnz
div
in
cmpsl
repnz
dec
or
bound
movsb
sub
cld
mov
scas
rcl
imul
shlb
dec
push
cmp
test
xchg
cmpsb
aaa
adc
push
cs
movsl
pop
pop
add
andl
and
adc
stos
add
icebp
pop
lcall
js
shrb
xchg
push
xlat
insb
out
or
imul
sbb
cmp
fidivs
pop
bound
mov
inc
bound
or
popa
dec
arpl
xor
gs
or
adc
scas
andl
dec
xor
outsl
pop
aas
arpl
push
xchg
mov
scas
xchg
sub
or
std
push
mov
call
fmulp
popa
pop
xor
test
push
sub
or
and
shlb
cmp
sbb
in
add
ja
ljmp
and
into
jno
add
xor
cmc
jecxz
or
mov
or
shl
sub
adc
icebp
and
or
testl
stc
aad
xor
nop
sbb
xchg
lahf
mov
xor
mov
xor
insl
and
icebp
test
sub
aaa
sbb
xchg
sti
repnz
push
fwait
jne
lds
xor
mov
lods
in
addr16
mov
mov
lods
add
or
xchg
lock
sub
test
push
jo
inc
xorb
jnp
mov
repz
stos
js
adc
testl
cs
or
movsb
fs
aas
sub
out
adc
and
sti
mov
mull
clc
jbe
jmp
or
or
xor
pop
imul
sbb
out
shlb
cmc
mov
out
movsb
jbe
aas
scas
outsl
mov
mov
sub
js
ror
pop
jae
rorl
pop
int
sub
adc
xor
sbb
ret
or
mov
fidivrs
sbb
dec
or
ds
scas
nop
fldenv
adc
xchg
incl
enter
ret
andb
movq
int3
addb
movlps
sbb
bound
cwtl
clc
icebp
adc
cmpsb
inc
sbb
xor
sar
inc
mov
mov
jne
repnz
sub
div
loope
rcrl
clc
push
adc
in
dec
sbb
jo
xchg
ret
orl
ds
cmp
inc
sarl
mov
jle
inc
cs
imul
and
popa
fiaddl
jno
and
push
icebp
in
pop
out
int3
pop
add
push
ret
jmp
loopne
outsb
out
mov
jo
add
scas
jl
add
push
add
mov
xchg
adc
movsl
sbb
add
xchg
cs
js
icebp
pusha
add
outsb
pop
les
test
int3
xchg
cltd
xor
pop
xor
outsb
jecxz
mov
and
jo
clc
sub
out
fidivrs
add
stos
xor
cmovb
sahf
pop
subb
aaa
adc
mov
jno
daa
mov
adc
lcall
push
mov
clc
add
dec
call
adcl
adc
push
pop
mov
test
and
xor
inc
jno
icebp
pop
incb
jl
add
sbb
jnp
loop
push
in
imul
in
leave
mov
jne
std
pusha
rcr
sub
dec
or
mov
daa
mov
icebp
out
pop
sbb
pop
jno
out
ret
lea
and
imull
dec
and
cld
inc
sub
jno
and
loop
and
adc
inc
sti
add
xor
in
leave
in
daa
mov
icebp
frstor
mov
int3
mov
icebp
mov
jne
adc
jae
dec
imul
mov
and
xchg
repz
cmpsb
lock
mov
jns
arpl
ds
inc
adc
fiadds
inc
mov
sub
dec
dec
lea
and
push
jno
sbb
sarl
sahf
sub
adc
and
ss
nop
sub
cltd
out
push
xor
decl
ljmp
or
and
cmc
pushf
xlat
adc
subl
xchg
jmp
outsb
test
mov
sbb
shll
mov
test
ret
subb
xchg
outsb
test
mov
and
daa
xor
cmp
lret
js
xchg
push
sar
pusha
jno
insb
lea
cmc
fnstenv
aad
and
imul
jmp
dec
add
cli
xor
adc
jne
cmpsb
aaa
add
push
loope
dec
pop
cmpsb
imul
cld
mov
cmpsb
sub
rep
sub
andl
push
jno
push
mov
arpl
lret
push
orb
add
push
test
cld
and
mov
loopne
and
adc
and
icebp
dec
xor
cmp
fcoml
mov
xor
hlt
dec
push
nop
jnp
cmpl
and
dec
push
xchg
ljmp
pop
lret
adc
adc
add
orl
imul
mov
add
in
outsb
lea
int3
add
sbb
add
or
jno
mov
sbb
push
pusha
adc
mov
in
jae
push
cmp
push
xor
mov
xor
jecxz
inc
repnz
int
xor
pop
into
or
cld
pop
adc
movb
lea
or
adc
into
jg
adc
push
add
and
jg
xor
jns
shr
repz
rclb
sub
inc
push
dec
out
pop
js
mov
inc
push
aaa
loopne
loope
jno
shll
add
data16
pop
push
add
wrmsr
mov
pop
insb
mov
test
jl
fsubrs
mov
fdivl
xchg
xor
rcr
sub
jae
pop
cmpl
dec
mov
cmpsb
mov
shl
and
bound
daa
mov
jmp
adc
fmuls
sub
add
mov
dec
push
xor
fadds
rorb
fadds
add
or
adc
push
shr
pop
das
mov
jle
adc
test
inc
bnd
adc
push
and
sub
fimuls
icebp
xor
xor
sub
ret
jno
mov
push
icebp
and
cmp
lods
std
loope
xchg
loope
jno
push
cs
jae
pop
xor
push
outsb
jns
mov
and
sbb
imul
comiss
adc
inc
jbe
pop
jae
pop
xor
push
outsb
jns
push
xchg
add
pop
mov
jo
sub
outsb
cmp
and
sbb
push
and
xlat
xor
pop
lea
pop
movsl
or
pop
pop
add
mov
pusha
das
xor
mov
sbb
ret
stos
jb
stc
inc
dec
pop
fidivs
mov
call
mov
and
xor
mov
inc
outsb
test
mov
sbb
xor
mov
sarb
insl
pop
jb
fidivl
jb
sub
mov
add
stc
mov
movsb
xchg
aam
mov
orb
popa
jmp
enter
xor
insl
adcb
imul
push
dec
adc
ljmp
test
pop
jno
rolb
jae
jno
in
in
and
sbb
outsl
lret
jno
push
push
rolb
and
sub
add
push
nop
dec
adc
add
push
popa
and
popa
icebp
xorb
fdivl
push
mull
jno
mov
push
dec
shll
loope
test
test
fistl
or
pop
cmp
and
sbb
les
dec
shrl
inc
pop
loop,pn
jno
sub
adc
xchg
or
xchg
movl
mov
ja
repnz
lock
ss
and
cltd
pusha
sub
xchg
sbb
mov
fdivl
movsb
jge
ja
aad
jno
sub
imul
mov
lock
lea
cmp
ret
cmp
adc
inc
lock
call
add
lcall
inc
sub
dec
xor
xchg
adc
fwait
lahf
add
out
sahf
sub
lsl
js
dec
mul
mov
jbe
inc
mov
sbb
mov
mov
in
jg
push
das
aas
add
jbe
xor
outsl
pop
mov
jb
adc
push
sbb
subb
xor
test
mov
dec
das
push
cmp
sub
fs
inc
mov
jae
xor
push
mov
roll
or
pop
jg
xor
cmc
sub
icebp
add
fisttps
ds
dec
outsl
push
out
sbb
in
addr16
adc
add
lods
pusha
and
push
mov
ljmp
mov
into
mov
pop
jo
xchg
and
rcl
fmuls
loopne
in
gs
xor
in
xchg
insl
out
outsl
jno
lods
jae
ret
loopne
jno
xor
in
insb
xlat
xchg
rcl
push
inc
call
sub
dec
and
fcom
fistps
loope
stos
nop
stos
jb
test
push
out
cmp
and
roll
lds
mov
aaa
sbb
mov
dec
cmp
jp
cmp
lods
int3
aad
xchg
cmpsl
dec
xchg
test
fstp
push
sub
and
aaa
stos
out
ret
fidivrl
push
outsb
sbb
mov
and
add
cld
std
and
incl
push
adc
or
xor
add
push
and
invd
add
or
pop
lock
push
or
sbb
sbb
sub
das
push
popa
lock
sbb
and
and
bound
sub
cmp
inc
lock
inc
inc
dec
dec
dec
dec
dec
lock
dec
push
push
push
push
pop
pop
lock
pop
addr16
pop
pop
arpl
pop
add
int3
xchg
sub
dec
sub
add
xor
or
adc
push
inc
adc
icebp
dec
or
shlb
push
sub
or
inc
inc
mov
pop
inc
push
repnz
pusha
push
inc
xchg
adc
cmp
popa
pop
inc
cmp
ret
sbb
dec
inc
mov
fcomi
mov
or
adc
xlat
repz
pusha
pop
fmuls
jbe
ljmp
gs
mov
lock
fcoml
and
test
lds
push
mov
cld
inc
in
pop
shl
push
fucomp
cmp
outsb
lret
in
out
xor
dec
jge
dec
inc
push
jb
out
jl
adc
sbb
loop
inc
dec
and
pop
aaa
inc
fwait
call
bound
test
lret
mov
xlat
add
aaa
xor
cltd
dec
js
mov
cmpsl
jb
pop
cld
call
dec
test
mov
daa
nop
pop
lock
dec
pop
dec
scas
pop
pop
pop
lock
xlat
cmp
rclb
xor
hlt
dec
pop
mov
inc
push
out
dec
pushf
aad
adc
daa
push
enter
icebp
and
cmp
nop
fldenv
push
shlb
test
popf
cltd
lock
mov
pop
jecxz
xchg
push
jmp
sbb
icebp
mov
push
xchg
enter
mov
jg
add
stos
lock
pusha
push
mov
lock
pop
das
mov
push
aaa
pop
lock
test
inc
rcr
adc
pushf
lock
inc
pop
inc
pusha
push
decb
test
sub
popa
add
out
pop
lcall
lock
in
pop
xchg
iret
sbb
dec
mov
pop
hlt
pop
rcrb
push
lods
dec
movsb
stos
adc
xor
cmp
inc
leave
ror
sub
or
in
aad
jae
inc
shl
and
xchg
push
arpl
cwtl
fcomi
sbbb
stc
dec
fistps
mov
push
lock
dec
dec
add
cmpsb
lcall
jo
xor
dec
js
mov
arpl
xor
xchg
mov
mov
enter
mov
jae
call
lock
mov
clc
fwait
arpl
in
xchg
outsb
cmp
mov
adc
loop
lock
sahf
fsts
and
enter
sbb
xchg
fadds
nop
jae
shrb
daa
mov
xchg
fs
lds
mov
jmp
nop
mov
pop
mov
int3
lock
xor
and
es
push
les
jg
outsb
nop
add
push
aam
sti
push
lock
testl
sahf
and
sbb
mov
xlat
and
sbb
mov
mov
sub
pop
inc
prefetchwt1
add
pusha
mull
rorb
mov
call
lock
pop
mov
or
sub
dec
sar
dec
cmp
in
cmp
sbb
mov
stos
sbb
int3
inc
hlt
push
push
jecxz
test
lock
mov
dec
and
add
stos
xchg
xor
cmp
shll
push
lret
pop
push
fldl2e
mov
iret
test
lock
in
add
cmpsl
in
fs
aaa
xor
addr16
iret
fbstp
jp
jb
push
ds
jo
add
sar
repz
lock
fsubrs
push
pop
mov
aas
inc
jbe
loop
cs
lock
enter
mov
xor
dec
lds
sbb
xor
fldcw
repnz
and
dec
add
lock
push
les
in
out
lcall
aad
push
mov
mov
cmp
jne
or
ljmp
aaa
mov
imul
test
adc
xchg
les
out
push
pop
test
dec
mov
push
gs
in
mov
popa
jbe
aaa
aam
lock
or
enter
lock
es
push
mov
pop
add
mov
out
lock
inc
sahf
int3
outsl
notl
jmp
sub
jmp
mov
fcoms
inc
movsb
and
mov
adc
fs
xchg
pushf
jne
mov
pop
les
shll
fistl
rorb
sbbb
sahf
sub
stos
xchg
xor
daa
fwait
lahf
lock
push
xchg
cs
mov
cmpb
pop
dec
out
push
mov
data16
add
push
in
and
js
inc
nop
mov
test
in
mov
xor
lock
push
pop
or
insb
dec
mov
cmp
iret
mov
jbe
scas
lds
lock
fisttpl
mov
cmp
pop
mov
lea
push
lds
gs
scas
repnz
roll
filds
cmpsl
pop
lock
sti
hlt
testb
js
push
nop
sbb
jns
and
xlat
shl
lock
fldl
lock
test
dec
lods
sarb
or
pusha
mov
mov
aam
loopne
lock
out
repnz
mov
pop
mov
push
je
jo
lahf
cmp
jo
lock
push
lock
rorb
adc
and
pushl
outsb
cmc
lods
sub
loop
mov
in
push
jge
jmp
mov
sub
sbb
ljmp
loope
sub
lea
mov
cmp
das
push
sbb
add
out
f2xm1
aad
bound
dec
inc
js
adc
ret
nop
sub
mov
lahf
lock
insb
testb
popf
xchg
adc
out
call
test
push
xor
test
lock
xchg
lock
out
jp
adc
inc
and
add
push
lcall
cwtl
mov
inc
xchg
mov
push
jno
pop
pushf
lock
push
and
loop
ljmp
enter
sub
repnz
or
xor
ss
and
inc
popf
push
lock
xchg
xor
pusha
daa
or
leave
adc
lock
icebp
jno
xchg
jge
scas
push
sub
cmc
sbb
in
je
lcall
pop
push
jmp
adc
cmp
stos
rol
lock
les
push
mov
aas
lock
mov
das
mov
scas
sarb
cwtl
rorb
cli
xchg
mov
push
xor
lock
icebp
in
jb
push
scas
cwtl
loop
dec
mov
pop
xor
out
mov
xchg
rcr
lock
push
nop
shrb
jecxz
outsl
aas
rcr
sub
les
rclb
lds
lock
loop
fs
sbb
shl
sbb
xlat
mov
adc
inc
cld
jns
xor
xlat
sbb
sbb
sub
adc
cld
aas
push
mov
cmp
fbld
cmp
pop
ljmp
mov
aam
add
int
jnp
pop
hlt
mov
dec
and
mov
jbe
mov
mov
in
ja
jle
lock
repz
movsb
adc
shl
xchg
pop
lock
rcrb
fcomps
inc
sub
imul
lock
addb
cmc
lock
mov
cmpsl
pusha
or
test
lret
mov
xor
adc
mov
mov
nop
mov
cli
ficomps
fildll
fldenv
jb
push
mov
add
scas
sar
shlb
jmp
out
fcomi
aas
int
lret
sub
jbe
lds
daa
adc
mov
rcr
subb
lcall
mov
mov
repnz
pop
mov
in
ja
or
ds
lods
enter
pop
jo
les
jg
add
shr
xorb
jns
hlt
push
push
pusha
adc
call
fiadds
push
ret
dec
ss
mov
decb
lock
incl
in
cltd
lcall
push
jle
pop
mov
hlt
pusha
nop
mov
imul
inc
repz
push
sti
mov
add
sub
pusha
rcl
sbb
popa
pop
notl
mov
fiadds
cmp
test
push
lock
lock
add
ror
icebp
aas
fdiv
sbb
sbb
jge
cmc
jnp
mov
call
iret
lock
sbb
hlt
test
mov
outsb
mov
push
jl
sbb
push
cmp
inc
sbb
push
and
add
cld
lock
outsb
notb
cmp
adc
adc
enter
push
aas
mov
mov
call
arpl
out
push
lock
sub
xchg
pop
popa
divl
ljmp
out
add
push
push
dec
ds
pop
in
cmp
inc
lcall
adc
mov
ljmpw
scas
xchg
fimull
nop
xor
lret
pop
cmp
push
mov
sbb
out
ds
sarb
lock
add
stos
and
add
lock
xor
aaa
cmp
mov
mov
lock
sbb
push
dec
push
push
xchg
shrb
gs
loop
mov
xlat
cwtl
mov
mov
xchg
ja
lret
das
leave
hlt
pop
and
xchg
dec
adcl
stos
mov
lods
mov
lods
jnp,pt
jne
fisubrl
xchg
hlt
hlt
in
pop
imul
and
dec
mov
xchg
lock
or
pop
inc
pushf
push
stos
mov
pop
sarb
in
hlt
faddl
xchg
mov
je
dec
pop
repz
sub
loope
cmpsb
negb
lret
or
in
hlt
rclb
xchg
jb
cli
in
movsl
or
bound
lahf
sbb
push
add
xor
adc
mov
jo
jmp
pushf
mov
push
add
push
mov
pop
xor
mov
sub
push
xlat
fdivrl
lock
scas
cmpsb
gs
je
movsb
xor
add
rorb
pop
jne
loop,pt
lret
mov
sti
imul
lock
dec
enter
mov
mov
mov
inc
bound
or
pop
inc
sbb
leave
mov
mov
or
sub
sub
in
xor
jne
pushf
lods
addps
lock
adc
ds
repnz
sbb
push
lock
lock
test
fidivrl
lea
mov
inc
adc
lds
scas
lock
xor
js
mov
lock
cmp
add
lock
dec
cs
es
mov
adc
cmp
xchg
sbb
push
jb
shl
and
stos
push
sbbl
sbb
jg
and
ja
push
xchg
ss
mov
adc
and
cmp
sub
test
or
lock
fs
xchg
fisttpl
mov
sti
call
loope
in
in
mov
mov
daa
push
mov
jmp
addr16
mulb
mov
lock
adc
movsl
scas
cmp
dec
mov
sarb
gs
cmp
call
mov
test
mov
cmp
and
lret
stos
pop
dec
inc
test
jl
or
fcoml
fs
jb
sub
rcr
adc
loope
mov
insb
lock
push
and
shrb
pop
adc
into
loope
mov
cmp
test
lds
mov
pop
lock
int3
in
loope
out
jp
lock
sub
iret
ret
jle
dec
in
addr16
xor
pop
shl
fs
fdivp
fldl
in
xchg
sbb
lock
add
dec
xchg
and
mov
decb
mov
hlt
lcall
out
sbb
hlt
adcb
push
loope
mov
xchg
repnz
lock
mov
lahf
fcoml
lock
sbb
pop
fnstcw
xor
outsl
shrb
jl
jle
mov
enter
cmpsl
fdivp
mov
mov
and
push
and
jge
ret
sti
daa
push
cmc
loop
and
adc
mov
lock
lods
cs
scas
xor
pop
or
ja
xchg
pop
fdiv
fsubrl
mov
cmpsb
aam
ss
fiadds
leave
adc
mov
bnd
and
jmp
cmpsb
mov
fstps
mov
mov
inc
call
lock
or
lock
mov
xchg
aas
stos
push
push
outsl
aaa
shl
jmp
insb
or
mov
mov
cmpb
mov
xor
push
mov
xchg
in
idivb
lock
inc
pusha
pop
out
ljmp
dec
jmp
out
int3
arpl
call
nop
push
aaa
lret
hlt
push
jae
subl
outsl
imul
f2xm1
out
cmpsl
jecxz
lock
dec
adc
push
mov
adc
cmp
push
xor
cmc
movsb
stos
inc
mov
pop
jo
lock
mov
jns
mov
inc
xchg
dec
in
jb
jp
enter
cmc
jmp
mov
lock
loop
jne
lock
leave
lahf
fcompp
jp
sahf
jbe
mov
arpl
cwtl
mov
mov
push
movsb
jecxz
call
gs
inc
fbstp
lock
sti
fldcw
mov
lahf
enter
push
cmpsl
lock
sbb
xor
xor
mov
add
xchg
cltd
fsubl
pusha
fistpll
adc
mov
sub
addl
fdivrl
nop
call
lahf
mov
aad
add
les
mov
jns
jbe
repz
je
and
arpl
out
shlb
push
call
sub
jg
mov
jo
jl
in
mov
icebp
add
cwtl
mov
pop
loop
daa
adc
push
lods
shlb
mov
xor
movsl
hlt
cmp
jle
in
inc
fistl
ds
add
add
push
cmpsl
psubq
popa
xchg
lret
or
fsubs
inc
call
mov
sarl
test
dec
push
xchg
lock
in
sbb
mov
call
data16
ds
cmp
xchg
pop
lock
bound
lock
iret
enter
repnz
add
aam
mov
mov
scas
push
call
leave
icebp
rcl
jl
es
lock
pushf
mov
loop
lock
jmp
daa
out
lock
mov
sti
adc
pop
shll
sbb
xchg
jo
inc
lock
adc
mov
lock
dec
pop
push
push
and
jno
ficomps
cmpsb
enter
je
fcoml
adc
imulb
hlt
mov
ljmp
dec
lock
lcall
add
fmull
mov
sbb
inc
sub
lock
pop
scas
aas
ds
lock
int3
xchg
dec
mov
mov
js
divb
and
test
fdivp
cmp
cmp
aas
cmpsb
mov
fs
lock
lock
jp
paddd
movsl
push
int3
and
push
in
repnz
jle
add
subl
sub
insl
lock
int
rorl
fstl
mov
rcrl
mov
mov
das
lock
pop
pusha
cmpsl
mov
xchg
sbb
lock
lahf
cwtl
mov
inc
and
mov
bound
les
lock
xchg
pushf
cmpsb
mov
insl
jmp
aam
test
daa
call
and
pop
lock
add
and
call
cmp
add
xchg
adc
test
and
mov
call
int3
lret
mov
rcl
ja
shlb
jo
dec
fldenv
lret
or
mov
test
inc
hlt
adc
mov
jne
sub
jg
inc
add
lcall
shl
mov
orb
adc
out
into
cs
rorl
and
add
mov
jge
add
test
shl
out
movsl
stos
lock
das
mov
mov
sub
outsl
dec
or
int3
fwait
pusha
push
pop
ja
push
dec
xchg
iret
call
sbb
lock
sub
jle
mov
adc
scas
mov
fdiv
pop
pop
test
lock
movsl
pop
mov
nop
lret
lock
mov
pop
mov
out
add
repnz
fmull
aad
mov
sbb
ret
ret
loope
popf
les
or
iret
lds
sub
jmp
in
mov
jno
mov
fdivrl
jl
repz
add
cs
sbb
jns
push
hlt
cmp
testl
dec
mov
mov
fs
int
sbb
pop
lock
jp
es
and
repnz
out
xchg
push
adc
mov
jle
sti
sub
loope
or
add
pop
enter
fsts
lock
jl
jmp
sub
sbb
mov
xorl
lock
or
insl
jmp
rorb
lcall
mov
pop
cwtl
sti
dec
movsl
inc
in
jge
inc
nop
lock
fcoms
sbbb
push
lods
or
fwait
add
jno
std
push
hlt
pop
jbe
xchg
or
hlt
stos
push
outsb
adc
add
xor
xchg
and
imul
les
aaa
pop
lock
lds
and
mov
fmuls
negb
and
xchg
popa
into
adc
dec
hlt
adc
lock
gs
push
repz
and
adc
mov
cs
xchg
in
fwait
nop
lock
mov
cmpsl
shlb
push
mov
jo
lds
lock
cmp
jne
xchg
pop
pop
fdivrs
inc
lock
push
inc
push
cmp
shl
dec
dec
leave
aam
mov
subb
inc
lock
lahf
mov
les
xor
scas
daa
pop
lock
cmpsb
mov
pusha
data16
cltd
sahf
lock
test
mov
jb
repz
jg
aas
xlat
push
jle
or
cmpsb
fdivl
rcrb
call
jnp
cmp
iret
push
repnz
fs
sub
or
or
lret
sub
push
mov
cmpsl
mov
xor
lock
imul
xchg
gs
xchg
pushf
iret
js
lods
fidivrs
outsb
mov
lock
in
xchg
xchg
out
lock
aaa
dec
mov
lock
outsb
lds
mov
repnz
pop
lock
mov
rcr
sbb
enter
pop
lds
out
dec
sti
and
aaa
jge
lods
xchg
sub
aas
lock
inc
inc
fiaddl
adc
stos
cmp
cmc
mov
mov
jns
call
adc
lock
stc
notl
call
loop
lock
iret
fsubrl
popf
lock
mov
dec
adc
jl
push
adc
and
das
enter
cmp
lock
out
ja
lods
loope
lock
out
shrl
xchg
fildll
testl
xlat
mov
xchg
daa
lcall
mov
push
test
addl
mov
nop
fwait
lds
adcb
movsl
cltd
cmp
fnstcw
jecxz
out
aaa
out
push
sub
mov
into
pop
aas
popf
jle
pop
xor
adc
fstps
pusha
push
mov
push
rolb
inc
call
dec
mov
xchg
dec
jae
shrb
out
sarb
xor
xchg
xchg
in
fsubr
inc
xchg
push
pop
mov
pop
loope
lds
inc
shlb
pop
stos
mov
gs
pusha
insb
fwait
lea
cmp
xor
call
lock
add
sbb
arpl
call
movsb
and
out
lock
adc
jg
aam
push
test
rolb
xchg
cmpsl
fsubrl
jle
sbb
pop
nop
lock
xor
cmp
mov
rcr
aad
and
dec
fmul
fs
xor
dec
stc
test
pushf
lock
mov
roll
cmp
cs
mov
mov
aas
sbb
hlt
andb
lock
ss
push
cmp
push
xlat
pop
jns
sub
lahf
test
lock
and
shll
movsl
mov
xchg
imul
and
stos
add
add
cld
jmp
aaa
test
mov
sbb
mov
addl
outsb
movsl
int3
adc
adc
jl
cwtl
in
push
cmp
ret
test
pop
in
rolb
and
lock
xchg
ror
jmp
enter
inc
and
lcall
shr
dec
out
mulb
arpl
data16
dec
pusha
enter
jnp
iret
lcall
mov
pusha
int3
imul
sub
test
jge
and
mov
sahf
and
adc
out
cmpsb
fucomip
shl
aad
lock
addb
out
jecxz
pop
shll
loope
cli
movsb
mov
das
movl
pop
daa
cmp
adcb
or
push
dec
mov
mov
fcompl
lock
cmp
inc
xor
adc
loop
lock
cs
das
addr16
lock
push
mov
push
jb
jl
popf
push
dec
lret
arpl
push
hlt
gs
pop
cmc
pop
sbb
pop
adc
sarb
cmpsl
cli
mov
lock
xchg
mov
pop
int3
lds
in
xchg
fldenv
fdivp
pop
xchg
int3
or
lock
pop
loope
mov
dec
add
addr16
xchg
cltd
and
and
rep
or
mov
add
adc
call
sahf
out
xchg
push
adc
xor
call
pop
test
sarb
adc
and
xchg
subl
roll
dec
jmp
adc
and
insl
hlt
jecxz
es
scas
rcll
jno
cli
add
adc
mov
adc
inc
jne
rdmsr
sub
add
push
mov
jmp
test
ja
in
sub
dec
mov
rclb
adc
xchg
icebp
and
aam
add
add
std
xor
xchg
ret
pop
shrl
out
in
xor
les
add
jae
iret
insb
aas
scas
cmpsb
cmpsl
repz
push
push
fbld
nopl
repnz
subl
cmp
iret
pop
outsb
pop
lods
xor
dec
das
icebp
es
xor
or
jb
push
pop
nop
jg
push
movsb
dec
lods
lods
xor
pop
outsl
cmp
and
xor
mov
pusha
pop
psubd
push
mov
test
sarb
adc
xchg
ret
sbb
incb
sar
sbb
pop
jl
lods
aam
fsubr
dec
ret
dec
xchg
cld
adc
xchg
jge
pop
jge
lock
and
aas
maskmovq
imull
mov
pop
pop
dec
ds
scas
das
mov
std
shll
jge
insl
test
aaa
andb
xor
cli
out
adc
dec
popa
bound
adc
dec
sbb
inc
mov
mov
pop
sbb
xor
repz
lret
subb
mov
sub
mov
pop
xor
pop
lea
push
std
mov
rorb
mov
test
jae
insb
jno
fsubr
idivl
jb
add
push
dec
jne
cs
jb
bound
and
cmpl
out
add
push
xchg
add
mov
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
subb
pop
cmp
adc
shrb
push
rcrl
push
jb
outsl
das
add
mov
xor
pop
ret
sar
cmpsl
dec
sbb
fwait
mov
sbb
and
mov
aam
push
lahf
ds
repnz
xor
int
out
movsb
in
pop
cs
pop
inc
mov
int3
outsl
leave
insl
mov
aad
sbb
sub
jl
bound
fmul
xchg
lods
push
movsl
subb
sub
cmp
jecxz
imul
outsb
mov
je
jg
xchg
and
rclb
insb
mov
dec
nop
pop
cwtl
fistps
mov
push
bound
ja
dec
xchg
mov
ret
je
addr16
and
rorl
adc
lcall
iret
xor
and
movsl
jg
push
das
out
cli
repz
arpl
sub
pop
cmp
dec
xor
icebp
jecxz
es
xlat
push
pop
pop
insb
cmc
adc
repz
xchg
cwtl
in
sbb
lcall
movsb
xchg
add
push
and
jmp
or
ret
xchg
test
loope
mov
sub
pop
psadbw
xor
jl
jne
push
jbe
lods
pop
jecxz
stc
repz
mov
sub
out
dec
cld
stos
int3
and
cli
scas
xchg
mov
and
or
inc
adc
dec
jle
adc
rcrl
xor
cs
add
sbb
cmp
adc
lret
xor
mov
divl
vmread
or
xor
in
pop
dec
xchg
jge
inc
mov
loope
fstl
test
nop
insb
subl
or
js
sub
add
mov
loop
jle
xchg
xor
xlat
int3
mov
cmp
pushf
movsl
ret
xlat
out
dec
pusha
inc
dec
jl
push
jmp
cmp
sub
or
data16
cld
insb
lds
or
mov
js
pop
loopne
jnp
mov
lret
pop
mov
fdiv
mov
mov
adc
int3
cmp
shlb
mov
mov
jns
outsb
jo
rcrl
aas
fldcw
jge
int3
dec
scas
lds
jmp
or
int3
mov
cs
iret
or
jae
ds
xchg
stc
pop
pop
pop
pop
xchg
xlat
mov
mov
dec
lods
mov
xchg
pusha
pop
jecxz,pt
out
int
or
jmp
mov
test
popa
xchg
fldcw
add
loopne,pt
jle
iret
ret
add
push
addr16
fstpt
fs
icebp
in
arpl
push
and
repnz
fiaddl
movsl
scas
sti
push
into
pusha
imul
leave
cmc
lock
jno
inc
xor
shll
add
adc
and
shl
cmp
xchg
push
or
cmpl
rorl
add
divb
cld
adc
inc
cmp
xor
popa
or
push
stc
inc
sbb
sti
div
push
xor
xchg
addb
push
or
or
lock
pop
cmp
pop
pop
push
fidivs
and
xchg
or
sbb
sbb
sbb
and
and
daa
aas
xchg
jecxz
mov
sub
popf
fcmovnbe
insl
popf
pop
mov
mov
in
cld
jecxz
fsubl
mov
in
jl
pop
inc
add
lret
in
push
fs
lds
adc
add
cmc
mov
adc
xor
jno
clc
and
stc
inc
or
xorl
maskmovq
mull
or
iret
call
lock
or
push
inc
subb
xchg
pop
sbb
dec
or
ds
dec
pop
sub
dec
sti
adc
adcl
xchg
cmp
repz
jae
pop
ret
dec
insb
js
popf
into
mov
outsl
push
jne
lock
jl
jle
js
lock
test
lock
mov
xchg
shrb
mov
xchg
xchg
jle
xchg
cmpsl
lock
imul
jp
incl
fdivs
loop
mov
clc
ljmp
pop
mov
notl
sub
or
arpl
leave
mov
outsb
adc
jnp
aaa
sarb
mov
cmpsb
iret
jp
repz
mov
push
mov
inc
int3
es
pushf
cmp
mov
push
in
mov
lock
xchg
jl
out
cmp
lock
lret
js
dec
mov
xor
imul
adc
xlat
call
mov
je
aaa
push
sub
dec
stos
imul
mov
pop
dec
lock
ds
and
cld
aam
push
mov
lahf
insl
push
int
lds
ljmp
push
movsl
or
movsb
add
repz
pop
imul
cmpsl
lock
cmp
push
and
sub
lock
and
jl
pop
testl
mov
sbb
push
jne
sub
lock
mov
addl
inc
mull
ret
lock
xchg
mov
mov
xor
test
lret
stc
pop
push
cwtl
dec
lock
xor
insb
pop
cmc
call
inc
test
lock
xchg
cmp
add
sbb
jnp
mov
lock
sub
inc
lock
xor
push
int3
dec
loope
es
lock
lock
data16
lock
dec
fsubr
push
xor
stos
aas
stc
shll
xchg
pop
xor
pcmpgtd
movsl
xchg
mov
pop
mov
jb
fisttpll
or
mov
shll
call
daa
lock
push
out
mov
pusha
inc
inc
jb
push
in
mov
adc
scas
sub
lea
in
mov
mov
lahf
test
shrb
mov
in
lock
sahf
cmpsl
lock
jno
xor
cmp
pop
xchg
mov
lock
cwtl
add
add
jo
xor
ret
sbbl
popa
push
adcb
mov
jp
popf
jo
dec
dec
sbb
std
or
mov
inc
lahf
sub
or
push
leave
in
neg
call
and
movlps
mov
rolb
es
lock
pop
jp
adc
cwtl
mov
call
mov
xchg
lods
xor
cmp
sub
inc
jae
or
lock
imul
daa
shl
dec
and
aaa
add
add
inc
loop
adc
shll
lock
pop
int
add
fstp
sti
lock
mov
aas
lahf
es
cmp
jne
sub
xor
js
jl
sahf
insl
hlt
or
push
shr
xor
daa
adc
ret
push
lock
pop
pcmpgtw
out
lods
and
inc
xchg
cltd
adc
push
cwtl
adc
dec
arpl
clc
mov
fs
push
pop
fidivl
imul
inc
pusha
and
test
lock
fnstcw
ss
popf
movsl
lock
repz
add
push
lock
sbb
sub
or
int
in
loope
xor
mov
cmp
inc
sti
lock
jo
xor
dec
cmpsl
je
hlt
jmp
inc
push
lock
stc
jne
mov
jl
call
push
out
xlat
lock
push
icebp
or
lods
jno,pt
int3
rcr
lock
ja
addr16
xchg
frstpm(287
jp
push
jmp
lock
cmp
pop
lock
mov
cmp
mul
push
lret
into
cmp
dec
add
sub
int3
mov
test
rcrb
jg
out
out
lock
fs
lods
aaa
fsts
add
fwait
push
mov
aam
xchg
dec
mov
dec
push
or
mov
movsb
dec
sbb
xor
sahf
sbb
js
mov
bnd
pop
sarb
movl
mov
aam
adc
xor
out
movsb
test
fdiv
lock
and
test
cltd
aaa
pop
lock
adc
mov
sbb
cmp
cld
in
out
mov
lods
xchg
jl
adc
cwtl
movb
arpl
test
mov
pop
popf
mov
call
inc
lock
std
add
lock
push
mov
adc
testl
nop
and
jns
insb
std
mov
loop
dec
imul
or
mov
mov
stos
adc
lock
cli
dec
in
push
fsubrl
xchg
pop
scas
addr16
out
push
mov
pop
call
jno
jge
js
aad
mov
pop
pushf
jmp
lahf
pop
adc
pusha
push
shrl
cmpsb
push
xor
dec
int3
sbb
les
test
sbb
ljmp
jle
xchg
ljmp
push
push
pop
lods
in
divb
test
mov
lds
add
call
sbb
add
aam
jecxz
and
cli
popl
xchg
std
je
pop
push
xchg
push
push
pmaddwd
loope
push
es
fucomi
fstl
sbb
sbb
push
or
xchg
push
testb
stos
leave
push
mov
pop
mov
sub
lock
pusha
movsl
lock
pop
cmp
mov
ret
dec
or
div
and
inc
fcmovbe
push
mov
ss
lock
mov
or
dec
xchg
scas
int3
or
ss
call
lock
pop
mov
push
inc
add
mov
shlb
xchg
lock
push
sbb
and
mov
lret
test
pop
es
jmp
dec
popf
sub
adc
xor
or
in
mov
hlt
xor
pop
ss
pop
hlt
push
xlat
inc
add
fldl
sbb
in
loope
in
mull
repz
ss
jecxz
mov
xchg
xchg
xor
idivb
push
inc
cld
lock
lock
fsubr
xchg
out
or
mov
adc
fwait
hlt
fdivl
lods
hlt
clc
mov
jne
shr
cmpsb
aaa
push
pop
outsl
insb
out
pop
pop
pop
notb
lock
mov
mov
pusha
pop
add
xor
in
adc
pusha
lock
cs
test
lock
dec
cli
shlb
mov
lock
pushf
mov
inc
les
inc
enter
cmpb
lock
mov
sub
scas
addr16
inc
mov
mov
sbb
mov
pop
dec
jne
leave
popf
lock
push
push
cmp
fistpll
and
je
cmpsl
out
loope
lock
and
adc
mov
add
xor
movsl
jnp
push
push
pop
test
push
mov
in
stos
cwtl
inc
roll
pop
or
fdiv
ljmp
mov
enter
mov
outsl
mov
lock
sbb
mov
fiaddl
pusha
dec
dec
insl
adcl
sbb
sbb
sti
pusha
mov
jmp
xor
test
leave
push
arpl
and
mov
ds
mov
xchg
and
jl
push
pop
hlt
dec
cwtl
scas
mov
cmpsl
push
sbb
add
push
push
or
xchg
hlt
stos
mov
leave
mov
mov
arpl
loope
xchg
xorb
jne
pop
aad
jne
sbb
je
push
jbe
jb
loope,pn
scas
mov
lock
or
mov
cld
mov
xchg
mov
and
dec
dec
xchg
mulb
imul
cmp
sbb
rorl
mov
lock
mov
adc
cs
out
pop
sub
aas
and
adcl
nop
int3
or
call
cli
mov
sbb
inc
or
lods
test
or
push
mov
mov
movsb
push
cmp
inc
jp
lock
fildl
mov
jbe
adc
test
xchg
lret
pop
mov
xchg
cmc
add
dec
sbb
fnstenv
jmp
mov
push
add
xchg
cld
jb
pop
pusha
mov
outsb
ret
mov
and
lock
aaa
mov
flds
add
push
xacquire
xor
jno
sbb
movsl
mov
imul
lea
pop
add
push
mov
xchg
jne
dec
lock
fcomps
inc
inc
push
lock
js
xor
mov
pop
xchg
movsl
push
mov
aad
inc
mov
xchg
out
lock
lds
lock
ljmp
mov
in
insl
inc
test
mov
leave
lock
inc
stos
cs
jnp
inc
push
cwtl
push
lock
or
into
lock
fisttps
pop
mov
hlt
inc
lock
jle
push
mov
or
out
sahf
lock
fidivrs
adc
aas
test
mov
xor
lock
mov
cmp
mov
sbb
and
inc
mov
xlat
ret
pop
mov
mov
mov
sub
lock
sub
sub
add
mov
xchg
push
div
inc
fidivs
mov
rcll
popf
add
sbb
cmpsl
aas
xchg
enter
mov
jnp
jle
aas
lahf
std
xor
sub
insb
push
xlat
cltd
pusha
push
pop
movsb
stos
int
sbb
pushf
in
push
and
inc
lret
idivb
mov
jae
lock
sbb
xor
push
cmc
lock
movsb
addr16
lock
cld
push
push
lock
inc
fmull
adc
paddb
out
pop
mov
shl
sar
out
inc
add
inc
ds
pushf
lock
dec
adc
mov
out
mov
lock
push
xor
or
mov
adc
mov
decl
stc
jnp
out
adc
lods
pop
loop
popf
lock
cmpsb
int
jmp
push
out
lock
adc
jp
push
imull
lock
icebp
pop
fwait
cmp
mov
xchg
fbld
pop
jp
jnp
mov
adc
popf
inc
add
ficompl
jnp
insl
nop
loope
dec
cmp
aam
add
in
push
jo
fdivp
cmovae
movsb
pusha
subl
jecxz
repz
cmpsb
aas
rcll
movsl
cmpsl
in
cltd
push
mov
xlat
mov
dec
lock
jmp
lock
xlat
cmc
and
pop
jl
addr16
popf
jge
fs
sbb
je
pushl
lock
pop
jo
dec
push
push
and
xor
addb
rcll
fistps
or
add
aas
mov
lock
iret
testl
cmp
ss
lcall
orb
dec
pop
fimuls
movsl
rcrb
push
hlt
mov
inc
and
cmp
pop
out
dec
sbb
push
cs
adc
loope
icebp
jp
xchg
lods
ljmp
adc
mov
dec
rolb
jg
push
in
mov
stos
fsubl
add
jp
push
das
cmc
insb
pop
jmp
call
shll
js
in
aas
arpl
test
loop
movsb
cwtl
hlt
stc
aaa
push
jecxz
pop
mov
ds
mov
repnz
cmp
or
lahf
out
fstpl
mov
adc
inc
in
lret
test
pop
je
lock
out
mov
mov
or
pop
in
fsubr
mov
mov
addr16
sub
and
call
addr16
in
lock
mov
xchg
loope
mov
movsb
push
pop
and
inc
xchg
mov
jne
jg
lock
and
mov
test
jne
jmp
xor
fldcw
mov
mov
rorb
mov
sbb
fbld
jg
add
test
dec
add
jo
in
fs
lock
ds
test
out
imul
stos
push
jnp
pop
inc
je
stc
jge
xchg
lods
orb
pushf
invd
and
sub
mov
mov
shrl
leave
pop
test
lock
hlt
and
mov
dec
mov
and
stc
lock
inc
xor
imul
leave
fs
repnz
fwait
divb
out
pushf
mov
sbb
inc
test
out
dec
dec
jbe
cmpsb
jp
mov
push
push
and
mov
lret
in
add
xor
xor
mov
lock
lret
push
lock
filds
dec
pusha
xchg
mov
fucompp
lods
push
enter
ret
in
divb
jne
or
out
mov
jno
mov
inc
mov
hlt
into
or
xchg
pop
mov
psadbw
int3
mov
xor
out
in
rclb
push
xchg
sub
and
js
leave
mov
pushl
mov
xchg
nop
scas
call
xor
lock
dec
enter
pop
les
lock
cmpsb
mov
cmp
sub
push
loope
int3
push
les
fbld
xchg
mov
in
xor
in
std
or
push
out
sbb
mov
sar
lock
add
movsl
sbb
jmp
jmp
push
push
lods
sbb
call
fisttpll
lock
xor
daa
test
and
xlat
cwtl
mov
inc
aam
cmp
in
xchg
push
hlt
repnz
push
scas
mov
mov
fs
shlb
or
jb
lret
jbe
btr
inc
int
adc
mov
icebp
sub
lea
std
je
outsb
iret
lcall
dec
sub
and
imul
sbbl
xlat
dec
mov
mov
xor
incb
lock
cmp
and
xor
lock
jne
lret
gs
mov
cwtl
mov
push
stc
lock
rcrb
in
push
testw
push
lds
mov
xor
imul
jno
mov
cmp
into
fiaddl
jbe
and
cli
cmc
sub
sub
sahf
jmp
xchg
push
out
enter
in
mov
jo
das
mov
xchg
mov
mov
lock
loope
ror
push
add
insb
or
mov
call
push
lock
xor
mov
test
in
pop
xchg
inc
mov
popa
ret
lock
jo
xsha256
cmpsb
adc
mov
jmp
mov
mov
mov
je
xor
and
sub
add
ficoms
push
jb
gs
loop
lock
jno
clc
jns
js
aaa
pop
lock
fsub
cmc
lret
mov
lds
ds
lock
mov
scas
imul
fwait
lcall
push
jbe
add
push
add
mov
mov
inc
test
loope
es
push
int3
pusha
inc
adc
fucomp
mov
imul
scas
cmp
test
fmull
lea
dec
les
mov
inc
fmuls
fdiv
in
out
pop
mov
and
ss
in
add
fwait
mov
lock
pushf
cmp
jo
xchg
scas
shlb
dec
lahf
cmp
lock
jg
ja
jecxz
add
imul
dec
sbb
stos
push
or
lock
adc
sub
adc
loope
xchg
mov
fwait
pop
pop
add
out
jo
mov
bnd
dec
das
sub
outsl
int3
ja
call
fiaddl
and
cmp
sbb
loop
imul
not
int
lock
sbb
jle
lods
fisttpl
mov
addb
mov
mov
ja
add
cwtl
fidivrl
cmpsl
cmc
arpl
lds
loope
mov
fdivp
sti
int3
les
fbstp
aad
lock
xor
lahf
lock
mov
push
iret
cmp
insl
lock
and
mov
icebp
aaa
cmp
std
sbb
mov
cs
lret
and
fxtract
or
mov
aam
cwtl
and
sbb
lock
aad
jl
adc
pusha
sub
sahf
cwtl
out
icebp
inc
cmp
pop
lock
inc
push
xor
clc
xor
mov
sti
add
jo
adc
lock
cli
pusha
inc
sub
repz
sbb
nop
les
jp
xchg
js
adc
loop
and
pop
inc
push
xchg
xor
in
mov
mov
lock
xor
add
lods
lock
mov
fdiv
inc
adc
xor
ljmp
std
jmp
dec
stc
adc
js
lock
mov
fdivp
rorl
mov
ret
leave
and
fcomip
xchg
mov
out
ljmp
sbb
mov
in
scas
repz
mov
stos
movsb
dec
data16
fnstenv
pusha
jae
mov
add
mov
push
dec
adc
out
or
mov
xchg
fisttps
in
pop
adc
xchg
cld
mov
sahf
mov
leave
and
es
shr
arpl
pop
lock
dec
in
adc
dec
lock
jmp
dec
in
xor
out
jo
cmpsl
cmp
rolb
jl
jne
xchg
cs
add
imul
pop
xor
sbb
pop
cmp
test
gs
pushf
fidivs
lea
ffree
xchg
int3
filds
cwtl
hlt
mov
loop
dec
pop
out
out
mov
flds
mov
lock
mov
bound
xchg
enter
shrl
pop
jge
mov
fsubrs
and
hlt
outsl
sbb
call
mov
sub
jl
shl
enter
mov
lock
pop
push
f2xm1
cmpsb
cld
mov
mov
mov
insl
jge
adc
insb
sub
jle
jl
les
fldcw
sbb
iret
fdivs
out
lock
daa
dec
leavew
ljmp
add
and
lds
xchg
sbb
add
cltd
outsl
fdiv
lea
addb
jecxz
enter
mov
mov
lods
cltd
lock
pusha
enter
pop
adc
cmpsb
jg
adc
test
aam
xor
rcl
sti
pushf
out
iret
xchg
push
in
lods
hlt
xchg
lahf
inc
mov
fadds
ret
add
push
mov
sar
mov
pushf
shrb
inc
lock
or
in
xlat
xchg
mov
mov
jg
vpsubusb
jbe
ret
in
pop
fsubl
out
cmp
dec
jp
pop
dec
lock
add
fdivrl
ja
jbe
bound
add
mov
mov
mov
jnp
call
lock
jb
inc
pusha
pop
mov
lock
cmp
inc
repz
xchg
out
daa
hlt
cmp
ret
loope
mov
sub
sbb
cmp
adcb
sti
gs
mov
xchg
xchg
mov
aas
and
add
into
subl
ljmp
mov
lds
fbld
faddl
data16
ja
cltd
inc
mul
lock
fnstcw
lahf
push
orl
jnp
pushf
popa
lock
test
and
mov
lahf
stos
orb
lock
sti
pusha
cltd
lret
lock
cmp
lock
arpl
movsb
mov
mov
sar
push
bnd
in
lret
push
sub
lock
mov
fs
push
aam
sbb
arpl
pop
test
fwait
ret
stos
sbb
repnz
sti
in
loope
sbb
movsl
xchg
cmpsb
cltd
mov
repnz
pushl
ss
add
adc
and
sbb
scas
out
xor
push
adc
lock
and
adc
ret
adc
jecxz
pop
inc
fxam
test
or
adc
clc
scas
test
and
and
in
loope
rorl
out
cmpsb
xchg
jl
lock
setle
cld
xor
and
or
dec
lock
fs
cmc
jb
mov
mov
sub
push
fidivrs
add
xchg
es
jmp
jo
lock
push
mov
mov
cld
jmp
ljmp
mov
xchg
sub
xchg
mov
inc
xchg
xor
sub
add
sub
lock
jmp
cmc
mov
leave
push
inc
xor
pop
mov
add
dec
mov
dec
call
cmp
nop
add
add
div
rcl
fwait
xchg
arpl
iret
loop
scas
outsl
pop
das
lock
lock
faddl
rcll
xchg
add
cmp
negl
cs
adc
dec
aad
mov
mov
cwtl
adc
insl
in
popa
pop
jne
int3
pusha
cmpsb
mov
jno
enter
dec
outsb
adc
in
lock
rcrb
cmpsb
and
push
je
pop
mov
mov
fcoml
and
mov
cli
jge
in
cmc
icebp
sbb
jp
push
inc
fstps
mov
scas
out
pushf
and
jbe
popf
les
push
testb
fxch
lock
xchg
push
add
ret
cmp
addr16
mov
lds
dec
inc
incl
pop
mull
mov
std
cmp
adc
dec
sbb
jmp
pop
or
movsb
pop
rep
mov
cmpsb
rorb
lock
xchg
sub
jnp
lds
sbb
in
push
pop
cmpsb
mov
xlat
mov
fldcw
push
loope
or
repnz
push
xchg
add
in
push
out
xorl
clc
dec
cmpsb
pushf
cltd
jo
std
lock
jle
jmp
or
xor
popa
stc
or
orl
dec
inc
push
test
xlat
lcall
iret
lods
jge
lock
cmp
cli
and
ljmp
push
cwtl
test
fadd
mov
sti
fistps
xchg
push
jo
cmc
xor
nop
xlat
iret
inc
popa
in
push
xor
jns
mov
lock
mov
mov
mov
neg
mov
lods
sub
pusha
sub
inc
in
out
cmp
jg,pn
or
das
jmp
lock
adc
add
jle
xchg
cwtl
mov
loope
push
imulb
push
adc
lock
inc
lahf
shr
xlat
or
in
test
mov
lock
sub
mov
iret
ss
lock
popf
lcall
scas
add
pop
fs
jle
add
in
lock
dec
lcall
xchg
jbe
lret
nop
pop
repz
jne
adc
mov
ds
or
jl
jp
push
inc
scas
int3
xor
mov
dec
or
cmp
roll
or
insl
pop
jbe
mov
adc
js,pn
sbb
ss
inc
jnp
add
push
pop
adc
lock
iret
rcrl
out
popa
push
jae
pop
and
push
jns
hlt
jge
add
ljmp
or
dec
and
mov
int3
insl
dec
add
pmaxsw
shl
notl
mov
dec
sub
xchg
jbe
loope
sbb
add
mov
out
cltd
mov
nop
mov
shll
mov
outsb
lock
and
lock
daa
lahf
dec
js
scas
test
out
test
xor
or
or
add
ficompl
mov
cmp
insl
sbb
cmp
inc
lock
jno
mov
mov
lock
testb
sahf
cmpsl
push
movsb
mov
jno
daa
or
orb
xor
xchg
pusha
mov
add
push
lock
call
ljmp
push
mov
std
test
inc
hlt
mov
xor
pop
lock
pop
sub
lock
inc
mov
shll
mov
fnsave
jge
repnz
lock
lods
nop
mov
testl
mov
cmp
cmp
or
hlt
mov
jmp
stos
xchg
push
mov
push
ss
test
sbb
das
xchg
out
mov
aam
push
int3
jmp
mov
mov
pop
xchg
dec
and
jecxz
in
xchg
repnz
dec
dec
insl
inc
js
mov
pusha
inc
sub
pop
testb
cld
lock
les
jmp
lock
xchg
sar
out
pusha
xchg
mov
mov
lcall
push
and
add
inc
ret
f2xm1
pop
sahf
jge
pop
fnsave
test
xchg
and
data16
je
aam
fisubs
mov
xlat
cmpsb
mov
dec
addl
mov
push
cmpsl
lock
xlat
sahf
les
test
jo
rcrb
mov
push
mov
pusha
or
sub
bound
daa
xor
scas
loope
movsb
hlt
hlt
iret
mov
lock
mov
lock
dec
or
jae
in
lock
adc
in
lock
repnz
xchg
or
leave
loope
jp
test
cltd
inc
sbb
call
ret
add
in
cmovge
arpl
fs
enter
push
js
mov
xor
enter
adc
hlt
mov
mov
cmp
and
xor
push
pusha
loope
mov
clc
or
ljmp
inc
neg
hlt
movsl
and
jl
or
in
lock
lods
das
push
scas
inc
mov
dec
ret
xor
jg,pt
xor
jecxz
dec
xchg
icebp
push
adc
mov
jae
mov
or
test
add
aas
pop
loope
mov
pop
cmpl
test
pop
sub
jle
mov
rolb
hlt
push
dec
sti
loope
add
test
in
mov
adc
je
inc
popf
mov
xor
and
lock
pop
mov
dec
in
push
sti
add
mov
mov
xor
and
add
or
mov
out
sub
in
out
idivl
add
jge
xor
or
dec
mov
inc
lds
mov
mov
stos
xchg
stc
inc
cmp
in
addr16
push
jno
jge
mov
inc
sbb
sbb
sub
popa
xorb
jge
aam
mov
stc
clc
insb
jg
mov
mov
push
lock
cmc
cltd
iret
mov
aaa
add
repz
nop
jo
mov
fidivrl
or
loop
iret
lret
mov
divb
fldenv
xchg
jo
outsb
sub
push
mov
test
aas
lods
sbb
arpl
sbb
xor
cmp
repz
xor
lock
lcall
mov
loop
fcomp
cmp
gs
scas
aas
repz
cld
dec
lock
mov
pop
lock
int
enter
test
test
xor
or
push
les
pop
sbb
imul
push
mov
ret
inc
out
into
dec
shll
cmpsb
mov
xchg
stos
lock
push
push
lock
cmp
mov
jle
add
mov
and
stc
mov
xchg
lock
jno
imul
lea
ljmp
fldpi
xchg
data16
in
inc
sub
lock
ret
pusha
mov
lock
mov
push
rorl
sbb
and
mov
lock
sahf
sbb
cmp
mov
pop
lock
sbb
psrlw
test
in
shrl
int3
xor
jnp
mov
gs
mov
popa
loop
mov
mov
je
in
cmp
std
aaa
test
insl
cmp
stos
popa
dec
mov
sub
sbb
lret
in
mov
adc
cmpsb
dec
jle
mov
cld
daa
outsl
mov
les
call
mov
popa
jbe
sub
nop
cmp
shlb
mov
imul
mov
mov
gs
ljmp
mov
test
int
in
cmp
test
cmp
lock
ret
push
leave
xor
lock
movsb
stc
jmp
bound
ja
jne
dec
aam
rclb
sub
xor
add
and
popl
loop
push
pop
movsb
call
push
sahf
in
jmp
or
das
fimull
mov
lock
cltd
mov
shl
cmp
fmul
sub
sbb
int
testl
lock
mov
mov
mov
sub
mov
and
mov
mov
mov
inc
ss
insl
hlt
int
pusha
or
mov
mov
sbb
lahf
xchg
push
jno
xchg
mov
fldl
pop
inc
cmpsb
jp
lea
dec
stos
filds
loope
push
ja
inc
shrl
inc
and
mov
jne
stc
lock
pop
push
mov
clc
jl
inc
jp
es
mov
add
pop
mov
mov
gs
push
jns
push
mov
in
mov
rcrl
jne
jl
push
mov
jns
push
sbb
adc
stc
xchg
test
in
mov
xchg
mov
sub
and
insb
daa
dec
push
add
pop
inc
inc
dec
out
mov
pop
loope
xchg
in
scas
pop
add
and
rorl
cmc
add
popf
out
pop
or
bnd
jmp
lock
push
xchg
xchg
add
cmpsb
sbb
aaa
dec
and
ret
int
mov
mov
lods
mov
pop
mov
add
out
div
das
shl
push
sbb
lock
test
lock
push
rcrb
aam
test
xchg
pop
cmp
cld
adc
mov
pop
call
lock
test
cmp
pusha
insb
testl
leave
xor
pop
adcb
sub
pushf
inc
sub
adc
or
cs
out
data16
and
aad
cwtl
and
xchg
adc
cmp
xchg
mov
sub
mov
pop
or
inc
lock
test
arpl
call
xorl
mov
jno
lock
das
cmp
out
fstps
lock
test
sub
popa
shr
jp
inc
mov
or
insl
cmpsb
mov
mov
js
roll
test
lock
cltd
add
lock
cmp
lock
fisubrs
cmpsb
mov
hlt
xchg
sbb
lods
xchg
mov
mov
fadds
inc
add
sub
mov
mov
lock
xchg
in
and
jae
js
lahf
movsb
in
and
pop
fldl
push
lret
pusha
lock
loop
int
hlt
testl
lock
jp
mov
mov
xchg
xchg
inc
cmp
inc
js
pop
test
adc
ja
out
rclb
lock
ss
xlat
pushf
je
pushf
add
pusha
xor
ljmp
push
jne
fimuls
lock
lahf
add
int3
mov
cli
fs
sbbb
and
bound
lock
xor
and
cmpsl
out
mov
adc
sbbb
xchg
xor
lods
lock
rcr
sbb
xchg
lock
jge
xor
lock
pop
cmp
rcll
xlat
cs
jne
jmp
lock
fdivrs
dec
pop
je
cmp
sbb
jmp
lock
cmp
or
ja
add
xchg
fcomp
or
jbe
lock
in
xchg
aam
mov
adc
mov
and
fdiv
jg
mov
jno,pt
mov
dec
test
out
nop
test
sbb
loop
loope
adc
jno
enter
das
rcrl
mov
movsl
cmpsb
shrl
dec
popa
jmp
lock
outsb
lods
dec
dec
lock
pop
iret
scas
imul
imull
pop
xchg
sti
lock
dec
aaa
mov
in
jo
mov
pop
mov
inc
inc
add
jae
jo
nop
lock
mov
lock
aad
xor
and
scas
lock
cs
psubusb
add
mov
mov
sub
call
cwtl
lock
out
mov
mov
cmpsl
lock
mov
add
sbb
xor
pusha
movsb
test
jns
cmc
adc
div
push
or
cmp
lahf
sbb
pop
enter
aaa
in
out
cmp
mov
lock
insl
sub
add
aaa
popa
bound
mov
pop
hlt
pop
push
adc
add
gs
pusha
xor
lods
clc
xor
cmp
jl
sahf
fdivrs
push
fwait
mov
test
jg
pop
sub
adc
add
frstor
inc
rorl
sbb
jo
sbb
test
mov
mov
rclb
cmp
ret
adc
or
pop
lock
stos
cwtl
loop
aas
dec
lock
adc
sahf
cmp
and
and
call
pop
sub
or
and
popf
inc
in
ljmp
mov
xlat
js
stos
mov
hlt
xor
mov
mov
lock
mov
mov
lock
cmp
fwait
lock
mov
inc
clc
jb
and
lret
movsl
subb
int3
lock
xchg
fisubs
xchg
push
loope
sbb
in
mov
cmpsb
sbb
mov
and
sub
scas
push
xchg
lock
outsb
lds
pop
test
lock
mov
add
loope
imul
pop
in
rcl
out
ds
push
inc
icebp
xor
adc
outsl
adc
mov
push
or
xor
mov
cmpsl
mov
imul
cmp
call
test
into
hlt
fildll
dec
addr16
mov
pop
ss
lock
mov
dec
and
movsl
xlat
lods
into
ja
js
popa
mov
div
push
addr16
sbb
lock
xchg
cmp
lock
mov
fucomp
lock
push
add
repz
shll
lock
mov
lret
test
iret
test
enter
ds
xchg
lcall
nop
cmp
shr
hlt
cmpsl
or
insb
repz
aaa
mov
leave
hlt
xchg
mov
lock
xchg
int3
in
pusha
sbb
nop
hlt
mov
dec
leave
in
cmp
mov
outsb
add
inc
adc
push
pushl
mov
lock
cli
xor
dec
lock
pop
mov
inc
push
push
inc
pop
lock
imul
lcall
pop
adc
sub
or
shll
xchg
repnz
mov
sbb
scas
or
fwait
hlt
mov
int
je
xchg
mov
jb
cmp
jmp
mov
lock
stc
icebp
dec
test
arpl
mov
cmp
lock
cmp
insl
lock
push
lds
cmpsl
dec
roll
bound
ljmp
dec
imul
sarb
sub
push
cltd
rclb
sub
leave
mov
xchg
lret
movl
in
mov
lret
mov
push
push
mov
mov
rcl
sub
jo
mov
lock
cmp
xchg
sub
lock
push
dec
jbe
mov
stos
jge
shl
mov
loope
popa
cld
mov
xchg
aam
sbb
lods
nop
call
inc
lock
inc
js
popf
gs
cwtl
lock
mov
mov
gs
add
fwait
push
add
sti
divl
mov
or
mov
lods
aad
hlt
cmp
xlat
add
dec
imul
and
lahf
mov
in
xchg
xchg
cmp
cmp
mov
lock
or
xchg
mov
add
inc
test
es
ljmp
cmpsb
leave
call
mov
leave
cmpb
std
stc
mov
lock
loope
inc
mov
push
lock
lret
jle
xchg
lock
es
push
stos
mov
lock
mov
sarl
pop
loope
aaa
dec
lods
lock
idiv
sarl
mov
lock
xor
mov
inc
movsb
lock
loope
fs
aas
enter
xlat
mov
xchg
cmc
out
in
pop
lock
in
rcrl
mov
gs
pop
lock
mov
jnp
sti
inc
xor
or
push
push
inc
xlat
dec
out
dec
lock
jae
xor
jnp
out
lock
mov
mov
stc
mov
shlb
push
add
inc
xor
incb
push
push
push
das
int3
addr16
jo
cld
insl
pop
nop
lock
mov
scas
fisttpl
cmpsb
xchg
mov
repnz
mov
jge
negb
rcrl
mov
imul
cmp
lock
pop
push
push
js
cwtl
lock
xchg
rcl
mov
pop
lock
jns
mov
lock
lret
pop
rcr
sub
inc
movb
and
xchg
push
xchg
out
push
adc
push
es
add
sub
dec
sbb
call
pushf
mov
lock
xor
leave
xor
movsl
lock
push
ret
dec
dec
pusha
dec
cmc
add
jp
dec
lret
xor
gs
inc
hlt
rorb
jge
pop
adc
push
dec
lock
out
lock
movsl
outsl
add
outsb
xlat
jecxz
xchg
mov
pop
push
fmul
daa
call
in
dec
bound
notb
dec
lock
jle
sbb
xchg
rcll
inc
push
mov
aaa
pop
xor
hlt
test
add
insb
pop
les
out
ret
and
lcall
stc
cmpsl
push
fldl
dec
ss
rolb
cmp
outsb
test
in
pop
dec
lock
adc
lock
ja
jle
test
lock
rolb
pop
lods
imul
std
mov
xor
pcmpeqw
xor
loop
fwait
sarb
aas
lock
xchg
scas
and
hlt
ret
xor
sti
push
and
push
lret
and
jmp
mov
or
rcrl
fscale
call
lahf
int3
nop
cmpsl
lret
loop
add
in
sbb
mov
push
aam
mov
inc
jge
daa
cmp
cmpsb
pop
push
xorl
repz
pop
daa
test
ror
jno
jbe
cltd
cmp
xor
xor
arpl
les
into
mov
inc
lock
add
inc
cmpsl
xor
mov
call
rcrl
push
add
testb
clc
lock
ja
fidivs
mov
mov
mov
inc
cmp
pushf
lock
push
xchg
pop
lock
mov
in
cmp
lock
mov
mov
dec
lock
mov
mov
cmpsb
testl
adc
dec
jg
outsl
adc
call
adc
dec
adc
movsl
rcll
xchg
call
cli
lock
adc
dec
sub
xor
pop
bound
std
lock
cmp
xlat
leave
es
jne
xor
and
mov
lock
pop
adc
pop
mov
into
jecxz
lock
xor
scas
lock
push
pushf
mov
cli
lock
mov
cmp
mov
in
dec
icebp
ficomps
or
or
add
std
fs
rcrb
inc
shrl
jae
push
cmp
push
xchg
push
lret
adc
cli
sbb
inc
in
lods
aam
add
lea
dec
pop
inc
lock
and
lock
pop
jg
jae
dec
ret
lock
js
mov
xchg
shlb
push
imul
iret
adc
and
mov
lea
lock
fiaddl
push
enter
lock
mov
stos
xor
inc
insb
ret
fwait
fs
jl
xlat
imul
inc
mov
push
adc
dec
and
and
jmp
mov
mov
dec
sahf
mov
pop
imul
fcomi
fbstp
push
lock
cwtl
pop
mov
dec
lock
dec
jg
cmc
adc
and
repnz
inc
lock
cmc
add
xchg
mov
push
cmpsb
add
fbld
orb
push
add
adc
incb
jge
out
mov
and
inc
ss
das
dec
add
mov
rol
xor
dec
mov
cmp
xchg
js
or
imul
dec
jl
das
pushf
lock
dec
cltd
lahf
repz
lock
rorl
mov
mov
push
rcr
and
jmp
ret
gs
mov
push
mov
cmpsb
jl
ss
subl
pusha
cli
or
xor
inc
jl
sub
call
xchg
mov
inc
mov
cmp
call
test
lock
pop
pushf
and
lock
xchg
loope
adc
xor
call
cltd
xlat
cmp
xor
mulps
mov
xchg
cmp
adc
fdiv
stos
outsb
xor
pop
int3
arpl
lock
cli
xor
push
xchg
push
mov
push
mov
cld
aas
rcr
adc
sahf
pop
data16
adc
sbb
adc
lods
jg
adc
dec
outsb
lock
lock
or
out
jecxz
pop
jl
call
xchg
inc
adc
jo
lock
scas
aaa
outsb
jl
push
and
mov
push
andb
xchg
movsb
icebp
out
lock
mov
sub
ret
cs
ds
jno
loop
add
rorl
fsts
sbb
imul
lock
xor
push
lock
insb
mov
rcr
mov
dec
xchg
imul
aam
lock
clc
nop
int3
jbe
fsubl
inc
icebp
sub
dec
lock
mov
es
rorb
in
lock
fsubs
mov
test
iret
mov
insb
dec
call
lock
hlt
sub
sub
cld
push
arpl
inc
and
mov
push
add
loop
lock
and
cltd
push
mov
cmp
pusha
sbb
mov
lock
jb
mov
mov
dec
add
std
lock
iret
mov
pop
out
jmp
jne
jle
mov
cmpsl
dec
and
gs
pop
lret
arpl
cmp
in
pusha
out
mov
lock
push
enter
and
mov
push
cmp
push
pop
or
test
lds
insb
fdivl
shr
je
data16
mov
stos
imul
je
pop
loop
sub
push
scas
aad
lock
subl
lock
outsl
fmuls
mov
call
test
lret
stos
jo
xchg
imul
mov
sbb
or
lock
pop
mov
sub
cmp
lock
stc
inc
xchg
stos
or
or
mov
xor
mov
and
lock
xchg
cs
dec
lock
mov
xchg
mov
mov
lock
push
rorb
aaa
cmp
lret
or
jmp
pop
push
mov
pop
push
and
fbstp
mov
cmp
adc
pop
lock
es
popa
enter
lock
lret
fistl
cmp
bound
jnp
jg
dec
push
lock
btc
lock
icebp
mov
enter
frstor
loopne
lock
push
lock
test
ja
mov
loope
roll
ljmp
cld
push
mov
lock
mov
lock
or
cmc
xchg
cld
mov
mov
lods
fs
lret
pop
pop
icebp
lock
and
sbb
pop
ret
push
in
mov
push
lock
add
lock
cwtl
and
test
push
dec
gs
aam
lock
inc
cmp
std
jns
mov
clc
adc
sarb
mov
cmpsb
lock
mov
push
lock
push
xor
fs
jp
mov
popa
and
fldl2t
pusha
dec
fbstp
dec
rorb
outsl
mul
mov
aad
lods
lock
fidivrl
sub
and
mov
sarb
fildll
lock
mov
jbe
lock
arpl
icebp
jns
shl
mov
dec
insl
rcrb
push
addb
stos
sti
cmpsb
pop
push
pop
xor
push
sub
pusha
mov
and
and
stos
shrb
in
outsb
mov
lock
in
adc
xchg
xchg
jns
leave
imul
dec
add
adcl
push
in
out
mov
lock
lcall
xchg
add
dec
dec
mov
push
cmc
sub
lock
aad
js
cmpsb
lock
mov
lock
cmp
push
sub
cmp
shrb
int3
sbb
lock
pop
jne
mov
sbb
xor
cmpsl
sbb
scas
sbb
and
push
stos
dec
in
ret
sub
jp
mov
test
mov
pop
fisubrs
mov
lret
push
jo
in
push
mov
mov
sbb
repnz
mov
nop
imul
push
cmp
out
pop
mov
orl
enter
shl
mov
jg
cmp
sub
ss
mull
mov
pop
mov
mov
test
cmc
dec
push
lock
les
fdivrl
rcll
aam
cmc
jne
call
xchg
and
out
sub
clc
fs
mov
arpl
push
mov
cmp
rorl
lds
pop
push
pop
mov
mov
and
pop
arpl
es
sbb
insl
xor
jbe
cmp
and
vmovmskpd
movsl
lock
fwait
data16
lock
xchg
and
mov
loope
lock
dec
pop
xchg
out
in
and
mov
jns
je
sub
xor
jnp
dec
repnz
popa
mov
xchg
add
fidivs
jne
mov
lret
push
out
mov
lock
pushf
lahf
bound
test
lock
jnp
daa
loop
pop
push
lock
adc
sub
ja
lock
adc
jge
xlat
push
ja
imul
fdivl
mov
push
lock
leave
rcr
sub
dec
add
test
push
call
rorl
mov
pop
mov
movsb
ljmpw
jae,pt
jbe
insl
scas
scas
test
xchg
movsl
lock
push
lds
lock
lret
mov
lock
sub
sbb
xchg
ja
add
sbb
inc
movzwl
call
lock
fs
jl
mov
mov
dec
sub
push
push
insl
xchg
jp
repnz
xor
lock
mov
sbb
cltd
repz
leave
pusha
pushl
push
mov
loop
pop
call
je
movsl
and
pushf
imul
in
popa
dec
pop
out
sahf
pop
lock
lea
cmp
or
xor
fs
in
sbbb
lock
or
test
ljmp
sbb
adc
xchg
data16
iret
add
pop
js
cmc
int
inc
xor
cmpsb
cmp
into
hlt
pop
mov
outsl
inc
mov
sbb
xor
and
in
dec
test
xchg
movsb
imul
enter
sahf
out
pop
adc
js
je
call
ja
jl
movsl
mov
sbb
cmp
cli
sub
lea
aad
sub
xor
pop
stos
test
movsl
pop
mov
lock
push
mov
sahf
add
lret
inc
andl
inc
add
rolb
dec
in
dec
movsl
ret
pusha
jne
cld
in
in
cmc
jae
lock
push
aas
lock
jp
inc
mov
lret
sahf
add
mov
sub
jp
lock
xchg
mov
aas
rcr
lcall
lods
lock
xchg
imull
jns
add
pop
pop
jl
lock
iret
cmpsb
adc
mov
sub
dec
lock
push
xchg
mov
in
mov
popa
mov
pop
pusha
or
in
xchg
sbb
pop
jo
push
div
lock
xchg
inc
push
out
ficoml
es
cld
mov
scas
push
aam
sub
jae
arpl
and
jmp
jne
mov
jl
push
sub
mov
lock
scas
ret
mov
gs
lock
inc
rorb
jo
lock
adc
pushl
ret
xorl
lock
lods
add
lock
pusha
cmp
ss
add
dec
jp
pop
lock
mov
test
xchg
jl
jecxz
cmp
mov
pop
mov
jne
fld
push
pop
pop
imul
jae
jle
push
enter
lock
lcall
dec
xchg
lock
mov
shl
pop
shlb
pushf
mov
cwtl
push
lock
push
dec
je
cmp
jle
xor
adc
jmp
push
dec
or
hlt
fwait
mov
cltd
and
out
lock
cmpl
js
pushf
stos
mov
mov
xchg
movsb
lock
movsl
xor
pusha
fldcw
lods
jmp
ljmp
mov
cltd
out
xchg
lock
ret
mov
lock
pop
push
dec
lock
pop
subb
or
test
cwtl
add
adc
mov
xchg
or
xor
lock
call
pop
aad
out
shlb
adc
ret
sub
test
jns
mov
cld
pop
mov
mov
inc
dec
stos
xchg
sub
ja
xlat
mov
stos
int
xchg
cmp
cmpsb
sbb
xchg
sub
sub
cmp
fs
and
lock
int3
xchg
xor
jno
pop
lock
or
dec
rolb
movsl
addr16
or
out
arpl
hlt
mov
mov
mov
arpl
lock
je
push
lock
mov
cmpsl
lock
fwait
and
push
fsubrs
jbe
out
push
lock
into
pop
scas
sbb
adc
negb
pop
push
pop
jp
inc
lock
dec
cmp
mov
pop
mov
xchg
inc
mov
xchg
jo
xchg
lock
cmp
insl
add
adc
sub
lcall
xchg
add
iret
pop
fwait
dec
cmp
leave
cmp
push
in
dec
idivl
lock
sub
jmp
adc
inc
mov
iret
pop
addr16
mov
lock
push
add
stc
lock
addl
loop
pushf
lret
pop
outsl
jo
mov
cmpsb
shl
int
iret
lock
test
xchg
add
mov
dec
arpl
outsl
jl
es
dec
std
push
mov
xchg
lret
sub
mov
js
xor
xchg
cmc
xlat
insl
aaa
xor
jo
nop
movsl
ljmp
add
push
pusha
ds
repnz
fdivrp
mov
lret
ror
mov
das
aas
insb
jns
std
lock
mov
lea
outsl
loope
push
sub
sbb
popa
lock
loop
aad
sub
psadbw
xchg
and
xchg
and
or
mov
pop
je
cmp
adc
out
inc
mov
jo
fdiv
lock
fwait
xchg
mov
repnz
lock
mov
popa
push
sti
sub
in
data16
fnstenv
sub
add
pusha
xchg
cmp
daa
loopne
push
xor
popa
addr16
lock
adc
sub
outsb
adcb
adc
aas
imulb
sbb
pop
lock
dec
ljmp
xchg
movsl
in
hlt
es
sbb
mov
adc
sbb
call
es
ljmp
jp
or
imul
adcb
test
lock
sti
out
push
call
jnp
mov
das
and
lock
cwtl
rcrb
xchg
arpl
sbb
pand
inc
xchg
test
adc
insb
aaa
push
loope
dec
xchg
mov
dec
out
mov
imul
sbb
inc
cmp
mov
in
fs
xor
xchg
push
jo
xor
outsl
jl
popa
arpl
pop
repz
cmp
push
push
inc
inc
inc
mov
sbb
sbb
adc
jnp
enter
add
mov
les
mov
xor
ljmp
xlat
jb
lock
dec
sbb
xor
lock
pusha
or
sub
repnz
push
mov
or
cmp
call
stos
test
and
add
fcmove
mov
popa
ljmp
iret
lock
fcmovbe
in
and
in
fnsave
sbb
rol
imul
lock
test
push
sahf
jmp
or
mov
push
adc
addr16
xchg
adc
and
and
or
je
bound
mov
lock
add
push
cmp
xorl
mov
roll
lock
pop
fsts
push
lcall
cmp
pop
and
sbb
rolb
ja
outsb
inc
les
pop
xor
and
fnsave
xor
bound
rclb
push
xorl
or
in
cmp
loop
hlt
xchg
fimull
repnz
jnp
sbb
imul
dec
jmp
inc
aas
inc
outsb
jbe
lcall
xor
xchg
and
repnz
cld
in
xor
mov
call
jge
mov
mov
dec
lock
stc
xor
ret
jmp
lock
jg
sahf
jb
addl
dec
rcll
dec
bnd
std
add
out
lock
mov
lock
fwait
aas
or
into
aaa
cmp
repz
je
lock
mov
mul
bound
lock
fdivl
test
test
repnz
mov
push
fdivp
and
out
scas
jns
aam
sbb
roll
xor
pop
insb
push
inc
out
rcrb
out
iret
test
cmpb
cwtl
fwait
cmp
xchg
mov
jb
xchg
adc
rcrb
in
jb
xchg
lock
sti
pushf
sub
dec
push
lock
mov
push
mov
dec
jno
pop
popa
mov
fidivl
inc
pop
mov
call
pop
mov
inc
and
push
lock
xor
insb
pushf
in
lock
inc
adc
lret
lock
push
aam
dec
mov
ffreep
cmpl
mov
xchg
jns
std
xor
fwait
lock
ds
push
xor
pusha
sarl
test
mov
inc
pop
add
mov
ud2
faddl
sbb
data16
cltd
xchg
mov
call
lock
mov
mov
stc
in
add
xchg
cwtl
lret
mov
js
ret
inc
clc
mov
leave
cmp
movsl
pxor
out
das
mov
fdivs
in
pop
inc
xchg
cmc
aas
or
push
and
inc
xor
sub
cld
cmp
insl
popa
dec
rcl
sub
fdivr
in
push
xlat
pusha
jmp
lock
mov
out
lock
outsl
xor
xchg
stos
fdiv
fdiv
inc
mov
in
sahf
lock
jno
fcmovnu
add
test
cmp
pusha
sub
inc
cmc
xor
pushf
lock
stc
pop
jae
push
sbb
rcr
xchg
test
push
pop
add
and
push
jge
lock
sub
insb
lock
pop
dec
pop
pop
cs
lock
lods
pop
ror
jge
call
jmp
xchg
xorb
pop
lock
pop
mov
movsbl
ja
xor
imull
lock
ss
aaa
lock
mov
push
arpl
ret
push
mov
xchg
ljmp
xor
jmp
aas
into
out
scas
jo
out
inc
adcb
por
xlat
xchg
mov
and
adc
std
mov
insl
xchg
and
test
mov
inc
mov
in
pop
repz
jns
cmp
arpl
jno
add
out
push
hlt
cmpsl
fwait
in
aas
out
push
inc
int
xchg
xor
es
iret
sub
cmp
ljmp
out
shrb
and
imul
sbb
mov
adc
lock
pop
mov
scas
mulb
or
clc
mov
mov
lock
lret
xor
shl
out
inc
push
lcall
scas
push
fcmovb
leave
sub
lock
push
xor
mov
dec
call
punpcklwd
std
inc
scas
iret
shll
sub
add
mov
and
int3
shll
fistps
sbb
and
mov
js
mov
jnp
dec
lock
xor
lea
lock
enter
jne
mov
cmc
imul
inc
imul
insb
add
sbb
sarb
loop
mov
sbb
in
popa
dec
les
mov
jl
push
fs
mov
fcomps
dec
or
push
lods
or
lock
sbb
in
arpl
stc
xchg
sahf
lock
outsl
fwait
repz
aam
insb
faddl
sbb
jg
jns
add
mov
jo
and
into
jbe
lods
int
adc
insb
xor
popf
sbb
in
add
and
out
sbb
in
mov
imul
ja
add
pop
inc
push
xor
lock
pushf
frstpm(287
sbb
lock
dec
pop
and
shll
and
cwtl
jbe
adc
lock
hlt
addb
xchg
and
ret
jns
int3
lock
gs
cltd
pop
fdiv
cwtl
nop
lock
sbb
jg
add
dec
cwtl
mov
cld
push
add
lock
and
cmc
xor
pop
aad
call
lock
arpl
pop
lret
mov
cmp
hlt
out
scas
adc
adc
and
cltd
testb
clc
addl
lock
xchg
and
lock
cmp
push
lock
icebp
and
subb
ja
into
and
ficompl
jp
stos
mov
jae
inc
mov
stc
lock
xor
jecxz
xchg
imul
out
enter
fs
mov
pop
stos
mov
or
adc
fldl
imul
cmp
push
inc
sbb
push
xchg
dec
sbb
mov
inc
out
sub
lret
lea
test
fwait
stos
fcmovne
pop
cmp
call
jp
ss
mov
pop
mov
lock
lea
add
pusha
loope
cmpb
cwtl
lock
popa
arpl
xchg
mov
xchg
pop
ds
sub
repnz
xor
add
xlat
pop
mov
sbb
jmp
push
ret
fcomip
dec
fcompl
or
mov
or
fwait
je
movsb
adc
mov
and
test
inc
negl
in
cwtl
cmp
dec
push
push
mov
cmp
ljmp
push
scas
movsb
iret
push
sub
fsubr
flds
inc
jne
push
pusha
xchg
js
push
lods
mov
lcall
push
popa
adc
and
outsb
jmp
fldenv
scas
movsb
and
pop
lock
int3
cmp
inc
xchg
call
ficoml
js
ss
mov
push
clc
inc
jbe
pop
setg
pop
jecxz
xchg
ljmp
pushf
daa
call
leave
dec
jns
or
aam
mov
jl
cmpsb
fucomip
ret
mov
orl
xor
frstor
lds
inc
push
jb
aam
cs
scas
and
cmp
ret
inc
lock
xchg
pop
ds
stos
pop
and
inc
cmpsb
icebp
push
aaa
lret
daa
outsb
mov
lock
push
pop
inc
movsb
out
lock
jnp
xchg
lock
add
mov
sub
xchg
lock
loope
test
mov
aam
add
imul
cwtl
fsts
aaa
pop
fcoml
pop
out
and
pop
lock
nop
out
mov
int3
lock
pushf
mov
pusha
mov
jmp
mov
ss
in
mov
mov
push
push
lock
pushf
lahf
dec
jo
daa
mov
sbb
out
inc
movsb
pop
push
lds
loope
mov
push
rclb
je
add
sahf
jle
pop
jbe
inc
mov
push
lock
dec
fbld
ljmp
aaa
fmul
push
and
out
jne
aad
xor
sbb
icebp
cli
data16
nop
xchg
out
mov
into
arpl
add
lock
bswap
shll
inc
lock
cwtl
lock
imul
sub
imul
pop
cmpsl
addr16
shlb
cmp
mov
xor
add
call
adc
pop
pop
lcall
jle
dec
mov
pop
nop
mov
data16
ja
sub
gs
arpl
lock
add
add
pushf
xchg
lock
inc
gs
addr16
enter
inc
push
pusha
ja
jp
lret
mov
cmpb
and
mov
and
xchg
push
outsb
pop
call
jge
jp
int3
pop
scas
shl
dec
lret
ds
lock
mov
ss
and
cmpsb
push
sub
push
xchg
ds
clc
inc
std
in
pusha
adc
rorb
lock
mov
test
je
inc
aaa
pop
popl
cmp
shrb
lock
push
outsl
sbb
mov
loop
or
pop
ja
dec
dec
int3
lcall
xor
lods
out
mov
jae
pop
add
fsubl
inc
cltd
jnp
test
inc
xlat
not
add
mov
loope
sub
mov
test
outsb
test
adc
stos
shll
mov
xorl
mov
jae
hlt
leave
inc
cmc
aas
lock
pop
iret
xchg
xchg
subb
sarl
std
jle
add
stos
jg
pop
call
xlat
fdiv
inc
jge
stos
sbb
add
out
cmpsl
xchg
mov
imul
sub
mov
es
cwtl
cmpsb
mov
pop
loope
rclb
xchg
idivl
cmp
call
fistps
dec
pusha
inc
mov
xor
dec
and
pusha
leave
sbb
out
mov
aaa
xor
lock
xor
mov
xor
imul
and
imul
icebp
insl
mov
push
jge
mov
add
xchg
cwtl
jbe
sbb
push
je
and
sti
jo
repnz
lret
test
mov
pop
pushw
out
jle
test
arpl
or
push
push
push
imul
add
xor
andps
daa
and
inc
sub
jmp
jbe
ffreep
je
lock
mov
enter
lock
jecxz
xchg
sub
je
shrl
mov
push
pop
xchg
ror
add
int3
sbb
dec
jl
jae
mov
sbb
call
popa
xor
rclb
add
mov
xchg
xchg
popf
js
add
mov
pop
pop
test
lock
outsl
sub
jge
fwait
ret
sbb
cmp
mov
call
scas
fsubr
jl
or
xor
sub
xchg
rcll
lock
fadd
mov
xor
scas
das
mov
sahf
jnp
lret
imul
iret
mov
sub
inc
mov
push
lock
popf
add
lock
mul
pop
pop
xor
push
mov
sbb
mov
movsl
cmpl
jo
lock
push
inc
ja
mov
pop
filds
mov
push
or
jbe
dec
test
out
xchg
sbb
repnz
out
jo
mov
lretw
es
push
lods
pop
iret
call
xor
add
jecxz
out
aas
adc
or
in
rcl
test
xchg
hlt
push
pop
lds
jns
lock
dec
mov
outsl
lock
push
jbe
inc
lock
adc
fcomps
push
je
lock
aam
mov
imul
lock
lret
mov
inc
lock
jl,pn
lock
lahf
xor
imul
mov
cld
lock
hlt
xor
adc
inc
lock
mov
lods
mov
shlb
call
lcall
and
jle
or
outsl
pop
lock
sbb
jmp
mov
lock
add
adc
jno
test
stc
lock
jp
lret
cmpsb
jl
in
pop
iret
push
cs
ffreep
sub
addr16
in
repnz
dec
cmp
insb
xorb
movsl
mov
je
mov
jge
mov
lret
and
lock
dec
cmp
push
arpl
cmp
dec
shrl
pop
shl
daa
mov
loope
repnz
mov
jle
cmp
stc
sub
xchg
js
lock
arpl
and
fistpll
push
les
aad
out
mov
xchg
mov
and
sbb
call
push
fnstsw
lock
sub
dec
movsl
lock
mov
jg
xor
pop
xor
lock
mov
dec
fistpll
imul
pop
and
adc
lds
pop
aaa
fnstenv
rcl
test
call
jle
lds
addr16
mov
mov
mov
lock
fsubl
aas
lock
inc
adc
cmp
fnclex
dec
stos
sti
hlt
fpatan
movsb
mov
in
pushf
shll
or
iret
and
daa
mov
mov
int3
jp
rclb
out
sub
lea
call
lock
pop
inc
xchg
sbb
ret
adc
sbb
cmp
jl
and
add
lock
lret
insl
sbb
jbe
add
jne
lock
or
sarl
fidivrl
lock
inc
adc
jae
adc
or
fdiv
je
lock
daa
sub
lock
lahf
pop
out
add
lock
xchg
cld
test
lock
mov
sahf
loope
lock
sub
aaa
jecxz
mov
testb
in
inc
pop
lods
cmovns
call
push
ljmp
dec
stos
or
and
cmp
sub
loope
cmpsl
fwait
push
repnz
stos
cmpsb
shl
std
leave
outsb
dec
inc
and
xor
ret
mov
cmp
aas
fs
daa
pop
xor
mov
clc
or
aam
xchg
pop
jmp
fs
add
xor
xchg
movsl
cmp
jle
leave
pop
mov
out
imul
jno
adc
out
movl
ljmp
mov
push
mov
mov
js
not
out
neg
lock
inc
mov
lock
lea
nop
mov
in
hlt
dec
mov
xor
jns
scas
leave
imul
jo
pop
jmp
and
loope
push
data16
mov
ss
movsb
mov
jne
mov
lock
fidivrl
orl
fcompl
dec
cmp
je
mov
xchg
lock
adc
pop
cmp
cs
faddl
pop
push
inc
aad
int
test
sar
jne
lahf
mov
push
flds
add
gs
aas
mov
lock
mov
popa
ljmp
xor
push
les
dec
lock
adc
fisubrl
jns
push
mov
lcall
mov
push
or
dec
pushf
cmp
sbb
ds
jbe
xchg
fldl
push
ss
and
pop
es
hlt
test
jp
inc
lods
add
hlt
ja
adc
aas
notb
xor
fld
negl
pop
pop
sti
test
cmp
sub
into
xchg
adc
jnp
es
push
test
in
mov
lds
ret
je
pusha
inc
imul
lret
push
mov
mov
or
mov
lock
jbe
or
fwait
xchg
out
ljmp
outsb
and
lock
out
popf
out
cmp
repnz
push
pop
int3
dec
xor
and
or
call
loop
lea
data16
pop
js
roll
inc
sub
fmull
cmc
sahf
mov
cli
xchg
out
sbb
push
dec
push
mov
ret
shl
push
mov
cwtl
repz
xor
das
ja
lock
or
cmp
fs
lock
fsts
adc
xor
push
das
dec
cmc
ss
cmc
dec
push
hlt
cs
push
pusha
loop
lock
fs
flds
ret
ficompl
es
fisubs
jbe
fsubrl
mov
xor
lock
adc
popf
pusha
cltd
and
lock
and
out
or
in
push
fs
push
push
jmp
lock
hlt
xchg
aaa
push
out
lcall
gs
push
int
nop
std
lock
xlat
mov
dec
stos
icebp
lahf
mov
ret
mov
or
aaa
cmpsb
lock
cs
ret
scas
fs
call
cwtl
cltd
hlt
ret
and
ror
mov
mov
add
jne
pusha
push
jns
cmp
not
cmp
pushf
jno
rcrb
lock
xor
sub
loop
lock
jl
cmp
ljmp
sti
jl
inc
lock
and
dec
aaa
inc
xchg
ja
or
jns
rol
scas
loope
push
jecxz
data16
push
pusha
fdivrp
cld
repz
xchg
stos
pop
mov
fs
push
mov
jnp
bound
jb
jg
dec
lock
jae
mov
arpl
insl
sbb
sahf
dec
pusha
mov
lcall
add
sbb
orb
into
lock
mov
xchg
mov
push
dec
iret
call
and
cmp
stos
cmpsb
cld
jne
sub
mov
sbb
pop
cmp
fdiv
push
fs
iret
lock
push
mov
shll
imul
mov
mov
or
jge
lock
sbb
sbb
inc
xchg
lret
mov
lahf
mov
jg
outsb
in
pop
daa
mov
cmc
rolb
popa
rolb
xchg
lock
in
add
movsl
jmp
cltd
mov
cmc
lret
pop
or
ret
pop
add
pop
lock
rcll
mov
dec
pop
int
inc
push
leave
mov
xchg
xchg
test
cwtl
fadds
in
push
hlt
dec
lea
mov
xor
and
sub
fbld
mov
cmpsb
xor
jg
inc
lock
jp
sti
fmulp
insb
es
int
out
sbb
adc
xchg
mov
fadds
pop
shrl
pop
loop
fsubrl
ss
jo
arpl
lods
shl
int3
hlt
push
mov
orb
cs
adc
xlat
mov
testb
shrl
jb
mov
fucomp
aam
xchg
add
stc
adc
add
ss
mov
lods
ljmp
mov
negb
or
push
dec
inc
pushf
lock
sbb
insl
repz
lock
fcomps
lock
mov
lods
sahf
sbb
dec
lock
in
adc
ja
shl
pop
inc
sahf
and
mov
aad
jno
add
icebp
outsb
jnp
jle
lods
pop
fwait
cld
add
jp
shl
adc
pushf
xor
cmp
adc
lock
sbb
mov
lock
sbbb
out
test
out
ds
adc
cmp
and
ds
lret
or
outsb
mov
sbb
or
pop
add
testb
iret
mov
cmp
lea
imul
pusha
movsb
jno
jo
xor
fidivs
lods
xor
jae
cwtl
or
ret
xchg
in
push
inc
xor
mov
aaa
ja
jg
and
sbbl
mov
mov
mov
repnz
mov
daa
xchg
add
mov
test
rcll
lock
sbb
flds
xchg
lods
pop
stc
jmp
push
jmp
leave
shl
pop
daa
push
jb
jnp
out
lret
call
les
insb
scas
mov
jae
int3
addb
pusha
sbb
in
fnsave
sub
fadds
cmp
clc
lock
adc
insb
call
jne
jmp
mov
mov
push
loope
scas
jo
lock
int3
ds
arpl
sbb
lcall
movsl
lret
divl
sub
xchg
jbe
jnp
pop
hlt
popf
std
dec
and
inc
in
cmp
add
pop
loope
sbb
test
dec
popf
andb
or
in
into
sub
pop
or
add
dec
fimuls
in
mov
cmp
pop
add
jle
leave
push
lods
cmp
in
dec
pop
call
mov
xchg
jle
movsl
lock
jbe
sbb
lock
cmp
dec
fdivr
add
call
adc
sahf
ja
lock
mov
aaa
lock
pusha
fidivrl
movsl
outsb
in
jae
lock
ss
std
jnp
pop
lods
add
xor
mov
ja
sub
or
scas
adc
jmp
fcomp
adc
fisubl
notl
popa
push
call
loop
lock
xchg
leave
lds
lock
sub
or
imul
mov
shl
xor
sbb
lock
adc
or
lock
adc
fcmovnb
inc
lock
cwtl
arpl
fldcw
lock
cmc
jg
mov
icebp
adc
stos
sti
xchg
lock
inc
pop
ja
int3
and
scas
mov
popa
jmp
fsubr
mov
std
in
lock
imul
fldenvs
pop
jo
roll
mov
idivb
jl
xchg
shlb
test
sti
fstpt
popl
cmp
mov
and
sbb
scas
push
lods
lock
lret
lahf
mov
add
xor
movsl
lock
xor
lcall
cmp
ss
test
sbb
dec
mov
cmp
pop
mov
scas
mov
mov
mov
cmp
repnz
lock
bound
aas
jnp
aad
xlat
int
cmpb
pop
iret
mov
sbb
ret
inc
push
lcall
add
cmpsb
pop
andb
pushf
sbb
cltd
adc
jl
jnp
mov
clc
dec
ret
add
mov
jmp
mov
lock
and
adc
jge
js
mov
rcrb
sub
mov
hlt
pop
mov
mov
test
repnz
loope
lret
cmpsb
pop
outsl
das
aad
loop
lock
mov
mov
cwtl
leave
inc
inc
jnp
fsubp
rorl
call
cs
lock
push
fwait
movsl
insb
popa
je
call
xchg
arpl
in
notb
test
jne
xor
jb
mov
out
cmpsl
fadd
cmp
push
cwtl
sub
sarb
and
insl
mov
pop
xchg
fidivs
int3
dec
test
dec
or
mov
lds
dec
dec
lock
bsr
cld
adc
cli
dec
test
xor
pop
mov
lock
fisubl
int3
fisttps
mov
mov
test
sbb
push
adc
loop
insb
mov
lock
cli
pusha
pop
mov
lock
popf
scas
push
call
add
int3
test
pop
dec
aaa
imul
lock
xor
fcmovb
xchg
lock
or
lock
clc
and
jecxz
lahf
push
mov
call
arpl
and
lret
test
outsl
mov
lods
shrl
dec
mov
das
mov
pusha
cwtl
pop
xlat
xor
cmpsb
fidivl
adc
or
xchg
nop
hlt
cwtl
lahf
lock
pop
daa
ja
sahf
lret
lock
test
and
rorl
std
add
lret
iret
mov
cmp
jecxz
lods
out
and
jmp
popa
jns
lock
addb
ror
jmp
add
mov
ds
xchg
insl
inc
lock
negl
inc
push
lret
or
cmc
ret
cmp
fcomip
sbb
adc
lock
sub
stc
or
dec
test
fsubrs
push
mov
std
jp
lret
insl
leave
jmp
ds
rorl
movsb
dec
test
popa
cmp
lock
fs
ds
in
and
loope
mov
pop
mulb
outsl
in
inc
inc
es
sbb
repnz
lds
add
adc
inc
lods
add
dec
or
lock
sbb
cmp
lock
out
pushf
mov
adc
or
jmp
clc
fisubs
jbe
insl
mov
push
call
mov
push
outsl
testb
sub
call
lock
mov
dec
push
aas
mov
mov
push
inc
push
repnz
call
ret
mov
jbe
enter
rolb
xchg
clc
pop
fcomip
xor
ljmp
or
das
inc
mov
add
mov
jae
cmpsb
mov
addr16
mov
clc
xchg
in
xor
or
lret
stos
push
add
jne
inc
loope
mov
cmpsb
push
xchg
es
push
testl
cmp
stos
rolb
xchg
mov
gs
rcrl
orl
andb
adc
sahf
lret
arpl
rorl
mov
push
xorl
jnp
notl
lock
and
sub
add
imul
cmp
adc
adc
sbb
icebp
iret
sbb
inc
int
dec
and
ret
ret
push
sbb
mov
pusha
or
sub
jno,pn
cmp
fsubl
jns
adc
hlt
scas
stos
cmc
loopne
and
jae
xor
lods
pusha
jo
push
lock
or
lahf
hlt
xor
jae
aas
lock
in
mov
xchg
iret
xor
adc
xchg
mov
mov
push
inc
lahf
xor
xchg
dec
lret
jmp
out
pop
fcoml
pop
loope
inc
cmp
mov
and
push
mov
lock
cmp
or
add
fcomi
sbb
lds
pusha
repz
cmp
imulb
cmp
mov
test
cld
cmpsb
hlt
push
pop
outsb
je
popa
in
push
jb
xchg
mov
stos
test
lods
cmc
jg
xchg
cmp
sbb
nop
cwtl
ficoml
push
xor
call
lock
and
cmpsl
inc
lret
lods
pop
lock
lock
sahf
fwait
jg,pn
mov
hlt
test
dec
stos
jmp
fdivrs
mov
lock
mov
lods
pushw
sbb
inc
mov
test
shll
fcomps
lock
dec
dec
push
stc
lock
pop
cmp
cmpsb
adc
rolb
mov
xchg
mov
xchg
cld
lock
inc
pop
cmp
aas
das
mov
or
cmp
test
in
mov
ss
ret
out
mov
lock
adc
push
iret
call
xchg
ds
xlat
inc
lock
pop
mov
pop
popa
mov
sub
daa
jae
push
and
mov
push
int3
shrl
mov
insb
pop
stc
int3
lods
into
cli
lock
pop
in
sahf
popa
out
lock
cmp
ret
xchg
hlt
or
ret
lock
or
pop
sbb
push
popa
mov
das
and
movsb
ror
hlt
sbbb
lock
xchg
push
fwait
cmp
xchg
add
push
jp
pop
pusha
das
in
rolb
pop
popf
mov
mov
inc
and
or
in
lods
jno
mov
mov
xchg
leave
lcall
subb
mov
repnz
cmpxchg
mov
mov
mov
lret
jo
gs
lock
jle
pop
xchg
cmp
add
test
decb
imul
inc
lods
clc
pop
xchg
pop
pop
outsb
dec
ret
dec
in
outsb
add
iret
cmp
lock
sbb
fmuls
jecxz
lea
stos
aam
imul
and
orb
push
fwait
lock
mov
mov
mov
and
and
aas
xorl
cs
cmp
xor
mov
daa
das
inc
inc
mov
psllw
hlt
pop
in
lock
jnp
outsb
xchg
pop
fildll
sub
loope
mov
icebp
jns
xor
dec
lock
sahf
jnp
adc
xor
xchg
dec
addl
outsb
xor
adc
mov
xchg
mov
dec
fldt
out
jnp
hlt
and
mov
xor
mov
clc
cld
ljmp
lock
in
mov
pop
aas
cmp
nop
cmc
shl
insb
movsl
cli
push
test
dec
rcr
sbb
cmpb
push
mov
loope
cmp
out
and
ja
sub
mov
enter
dec
call
inc
mov
mov
inc
lock
add
jge
sbb
notl
lods
pop
out
or
lock
mov
rcl
pop
ljmp
push
lock
sti
icebp
dec
sbb
cmp
add
and
imul
push
aad
les
repz
sbb
outsb
fcomi
pop
cwtl
fcoms
stc
push
or
dec
lock
mov
in
in
mov
call
and
lds
push
lock
fidivrs
lods
sub
orl
jl
sbb
lock
shlb
jmp
mov
mov
xor
mov
call
jge
mov
aam
cmp
sar
jne
rolb
cmpsb
push
mov
xchg
in
push
pop
ficompl
fwait
pop
cmpsb
ja
xlat
jl
xor
xchg
pop
inc
dec
das
mov
fwait
aad
ds
jmp
jbe
andl
mov
loope
lock
mov
sub
sahf
pop
test
push
pop
bound
lock
sub
cld
mov
mov
lock
shll
sbb
add
sahf
inc
cltd
daa
pusha
repz
lods
jmp
lock
shlb
arpl
shll
ljmp
sub
jmp
mov
lock
nop
cmpsl
cmp
mov
or
lock
mov
fnstenv
xor
mov
push
pop
push
in
add
lock
mov
frstor
jmp
mov
and
adc
in
push
idivb
rol
cmp
push
scas
add
cmp
sub
outsl
lock
mov
cmpsl
leave
test
fcomip
mov
jne
xor
cmp
rcr
lock
test
mov
imul
movsb
popa
ss
push
mov
ror
xchg
push
mov
jg
jl
cmpsb
lahf
rolb
out
inc
mov
xorb
jmp
sub
mov
jge
lock
push
lock
and
add
xchg
dec
idivl
mov
cltd
xor
daa
lock
jae
dec
into
lock
cmpsb
cmc
sub
jmp
xlat
aas
xchg
and
clc
out
stos
lret
outsb
xchg
xor
into
lock
cmpl
and
or
std
js
and
test
or
enter
jnp
daa
jl
cmp
xor
fisttps
inc
sub
jmp
arpl
out
mov
in
push
pop
pop
mov
nop
inc
lock
mov
xlat
fcompl
mov
in
rorb
movsl
mov
movsb
mov
mov
xchg
test
push
pop
js
lock
lods
jo
fsubr
add
xchg
es
les
cmpsb
sbbl
fimuls
mov
sub
shl
xor
cmp
pop
es
fs
xchg
push
lock
iret
and
andb
in
int3
std
dec
fld
sbb
lock
idivl
xor
outsl
cs
cli
lock
or
xchg
push
sub
stc
cltd
jge
mov
repz
lret
add
sbb
andb
xor
je
scas
aad
cmp
inc
ficoms
inc
lock
ss
push
mov
inc
push
out
mov
int3
adc
xchg
add
mov
cltd
xchg
lock
enter
cmpsb
and
add
dec
and
and
mov
mov
xor
in
out
arpl
lock
mov
or
lock
xchg
pop
mov
stc
clc
mov
in
mov
xor
lock
mov
mov
test
mov
dec
adc
mov
in
sub
faddl
aad
lock
jl
mov
popf
lret
sbb
and
inc
and
jg
lret
mov
mov
jnp
outsb
lea
insl
test
lds
rcll
lock
cmp
inc
call
inc
out
push
xor
and
cli
testb
ja
lock
pop
ljmp
addr16
lods
cmp
ror
imul
lock
in
add
into
push
lock
arpl
fisubrl
dec
lock
les
scas
sbb
lock
in
fists
pushf
loop
push
jecxz
shrb
sub
xor
cmp
xlat
dec
lock
push
xchg
cmp
sti
add
mov
sbb
xchg
jp
mov
jg
mov
pop
popf
lret
xchg
xchg
sub
sbbb
fldenv
mov
xor
pusha
xor
and
lods
loop
shrl
lahf
loope
lret
xlat
jb
aas
sahf
cmpsb
jmp
leave
outsl
imul
dec
pushaw
pop
aaa
dec
cmpl
cmp
in
inc
arpl
xchg
call
and
push
add
mov
xorb
mov
pushf
adc
pop
push
sub
mov
loope
mov
xchg
pop
test
cmp
cmpsb
mov
es
call
gs
sbb
test
pop
cmc
out
ss
jl
fiaddl
cmpsb
and
mov
and
xchg
xor
pop
popf
fucomp
mov
mov
xor
push
inc
test
push
cli
or
fnstsw
push
inc
push
inc
enter
jnp
test
sbb
lock
pop
jecxz
push
pop
adc
in
ret
lock
cld
inc
cmp
inc
aas
add
and
frstor
mov
repnz
push
das
gs
fdivr
jbe
insb
cmp
in
jecxz
xchg
lock
pop
cmp
push
shlb
imull
outsl
lock
mov
mov
or
pop
in
leave
lock
pop
dec
movsl
pusha
mov
mull
ja
jnp
in
jp
jg
jmp
sbb
cwtl
lahf
pusha
sti
pop
add
push
leave
stos
in
lock
pop
sbb
ja
imul
mov
mov
mull
xchg
and
into
inc
mov
pusha
mov
in
in
out
sbb
or
or
mov
jg
sti
sub
push
xor
shlb
xchg
or
adc
subl
xor
mov
mov
push
sahf
sarb
mov
adc
inc
dec
clc
inc
insl
xor
xor
int3
add
cmp
lock
movsb
lea
inc
lret
lock
inc
mov
repz
psubsw
mov
cmp
call
sbb
inc
inc
mov
inc
add
mov
ror
outsb
cmp
test
lock
cmp
dec
ret
into
call
mov
cltd
jl
add
lock
inc
xor
ljmp
lock
push
dec
fsubs
mov
cmp
iret
xchg
mov
add
xor
ret
cwtl
fnstcw
lock
pop
pushf
sbb
jnp
add
mov
mov
lods
rcrl
mov
insb
or
and
or
ss
pop
fsubr
ja
arpl
lcall
jb
cmp
push
in
lock
mov
xchg
xchg
adc
adc
pop
imul
mov
aaa
enter
mov
aas
addr16
int
mov
pop
push
cmpsb
sub
pop
lock
xlat
ljmp
movsl
mov
and
lahf
rclb
scas
adc
mov
dec
push
lret
cld
jbe
repz
addr16
jmp
push
cmpsl
aas
and
arpl
cmpsb
mov
pop
lock
daa
mov
jae
lock
je
xchg
outsb
cmpsb
jg
div
clc
and
adc
scas
mov
adc
xor
mov
arpl
movsl
into
push
xchg
lock
cmpsb
mov
outsb
in
lock
sahf
iret
lock
pop
add
and
lock
mov
int
xchg
xchg
adc
into
ja
lock
or
pop
jp
fisttpl
movsb
icebp
scas
jns
ja
lock
add
popa
imul
jecxz
mov
xlat
jge
push
lock
cltd
push
push
testl
addr16
mov
mov
nop
pushf
mov
ret
and
hlt
arpl
xchg
mov
js
lock
and
ss
xor
lcall
mov
xchg
cmp
xor
lock
lds
cmp
dec
inc
cld
repnz
mov
xchg
inc
test
int3
repz
cmp
outsl
iret
lock
push
gs
and
mov
fldl
push
jb
lcall
pop
orb
mov
mov
lock
push
lock
push
loope
jae
and
gs
pushl
mov
lock
arpl
lock
cmp
stc
hlt
outsl
sub
push
lock
dec
sti
call
xchg
insl
jge
inc
jae
filds
movb
lock
adc
inc
lock
xlat
scas
fldenv
ds
je
jb
jo
pop
push
rorl
andl
popl
inc
out
inc
mov
lock
add
or
sub
ds
cmp
sbb
leave
aas
adc
ss
xor
xor
idivb
or
lock
xor
notl
adc
mov
pushf
lock
es
xor
hlt
pusha
fs
or
mov
insl
jae
mov
jb
xor
pusha
mov
fdivp
andl
dec
pop
xor
cmp
lock
divps
fcomp
push
sbb
ret
jo
das
test
shlb
cltd
push
lret
lock
int
jnp
and
loop
sbb
mov
sub
lock
aaa
dec
dec
mov
push
sbb
pop
icebp
pop
nop
xchg
pop
lock
enter
add
lock
cmpsl
jg
ss
add
sbb
outsl
pop
push
pushf
or
inc
mov
mov
repz
rorb
or
jge
mov
mov
iret
pusha
xor
insb
stos
data16
push
movsb
inc
pusha
cmp
jge
sbb
out
ret
jmp
hlt
mov
loope
test
imul
bound
and
nop
pop
push
lock
xor
dec
mulb
jno
outsb
dec
in
rcrb
mov
stc
lock
rcrb
aas
cmpsb
aas
popa
mov
xor
lock
in
inc
loop
adc
and
shl
mov
shll
mov
jge
mov
lock
inc
fisttps
inc
and
in
js
jge
lock
int3
enter
pop
testl
sub
pop
mov
fcmovnu
ds
lock
ret
std
lock
iret
cmp
jbe
lock
add
fnstenv
push
mov
sbb
xchg
lea
pusha
adc
and
pop
imul
call
fs
and
dec
mov
inc
hlt
aam
ja
lock
or
jmp
pusha
out
ret
mov
jg
jmp
jne
ret
scas
cmpsl
add
mov
cmc
cmp
test
mov
loop
ja
nop
push
pop
movsb
jmp
pusha
cmpsb
xor
xorb
jbe
pop
leave
xacquire
and
adc
std
cs
int3
insb
ss
or
jecxz
outsl
add
arpl
adc
bound
mov
add
into
cs
fstpt
fld1
inc
dec
movsl
mov
outsw
cmp
ss
addr16
or
push
iret
mov
mov
fs
dec
mov
and
cmp
mov
lock
dec
mov
insb
out
add
lcall
jno
push
es
mov
sub
out
cmp
arpl
sbb
jg
leave
testl
xchg
pusha
dec
mov
icebp
ficoml
cmp
xor
ret
xor
int3
and
xlat
loope
stc
sub
xlat
pop
and
ret
or
jp
mov
ljmp
xchg
cmp
lods
push
xchg
fcmovnb
xor
lock
andl
cwtl
jno
iret
gs
pushf
mov
jbe
pop
int3
data16
pop
adc
adc
pop
lds
add
incb
iret
lahf
addr16
lock
jae
ret
in
fcomps
sbb
xor
mov
push
mov
aad
mov
or
and
inc
cmc
sub
sub
ficoml
mov
js
lock
adc
ljmp
loop
fsts
daa
inc
ljmp
xchg
pop
xor
mov
cmp
dec
test
xchg
sbb
cld
push
movsl
fwait
mov
add
aas
in
jb
ret
repz
fsubrs
and
fildl
adc
xchg
mov
push
ret
cmp
or
dec
adc
and
outsb
fwait
into
xor
lock
and
inc
lock
mov
inc
lock
jg
ret
mov
in
pop
lock
adc
nop
mov
lock
sub
mov
mov
and
lock
inc
int
add
xchg
repnz
fwait
inc
jmp
rorl
leave
jg
mov
pushl
cmp
lock
pushf
scas
mov
sbb
lods
and
xor
sbb
je
sub
pop
repz
mov
out
mov
pop
rol
xchg
ja
lock
test
mov
lock
pop
jne
or
mov
dec
push
inc
cmp
mov
xor
out
shlb
and
lods
addr16
ss
mov
lock
das
sbb
mov
inc
outsl
in
or
push
inc
sbb
lock
push
cltd
int
cmpxchg
lock
sti
xlat
adc
xor
aas
add
or
jmp
pop
out
lcall
inc
outsb
add
push
lock
stc
cmp
sub
add
loop
repz
and
loope
cld
push
mov
xor
xchg
jg
and
xchg
jo
push
lock
pop
mov
jge
adc
sbb
sub
pop
jmp
int3
stos
mov
mov
lock
mov
lock
loope
adc
lock
test
pop
pop
das
lret
push
imul
xchg
xorps
inc
test
mov
lock
xor
cmp
xchg
movsl
ret
frstor
jne
sbb
imul
mov
inc
mov
call
cmp
pop
pop
and
es
testb
das
mov
xchg
push
mov
movsb
fsubs
jne
pop
mov
and
mov
jnp
das
lock
movsl
mov
int3
lock
mov
mov
aaa
in
imul
pop
xchg
cmp
cmp
jl
or
mov
pop
sahf
add
bound
iret
arpl
mov
mov
insl
aaa
lock
loop
pop
out
lock
xchg
add
cmpsb
fsubr
inc
jns
cli
mov
pop
xor
or
int3
fcoms
pusha
dec
add
movsl
mov
in
pop
inc
pop
lock
xchg
pusha
mov
test
lock
push
jo
pop
loope
dec
add
mov
repnz
lock
aas
std
scas
xchg
in
jnp
and
pop
cli
ljmp
iret
sub
jl
lret
sti
jp
jmp
jne
adc
xor
add
icebp
xlat
mov
dec
test
stc
sbb
mov
adc
add
shlb
mov
push
leave
cmp
and
in
popw
lahf
lock
xchg
int3
fs
xchg
mov
lock
mov
aaa
stos
test
fdiv
xor
jbe
mov
xchg
mov
dec
lcall
rolb
jl
or
insl
cmc
cwtl
jne
adc
xor
int3
aad
sbb
dec
push
into
adc
fcompl
loope
js
mov
iret
push
lock
xor
lods
inc
push
jne
push
push
lock
mov
sbb
pop
stos
movsl
jge
xchg
arpl
out
push
xor
insl
je
call
push
or
outsb
jo
and
lock
int
adc
jp
fadd
pusha
sbb
hlt
mov
lock
xchg
out
and
xlat
mov
lock
jnp
lock
leave
ljmp
cld
and
lock
loope
scas
sub
or
data16
lods
sub
call
mov
pop
in
iret
xchg
xor
pop
push
mov
call
arpl
lock
ret
lret
std
les
sbb
stc
loope
jnp
addr16
sub
mov
insl
and
cld
jbe
into
cmp
daa
inc
imul
and
outsb
ret
mov
into
xor
mov
xchg
and
test
mov
cltd
cmp
push
mov
mov
in
fists
mov
out
out
xchg
fdivrs
dec
ljmp
jb
int
add
ss
xlat
push
sub
fldcw
hlt
mov
xor
and
xchg
mov
mov
adc
mov
int3
or
xchg
or
pop
mov
loop
pop
insb
testb
into
pop
jmp
aas
ror
push
stos
loope
je
movsb
adcb
pop
out
std
adc
lock
sbb
lods
jp
imulb
xchg
and
mov
adcb
sti
test
pop
mov
cmpsb
cmp
pusha
jbe
adc
call
pusha
jl
xor
push
mov
loop
xchg
or
cmp
xor
and
sbbb
dec
lock
pop
jp
ficompl
or
js
xchg
sti
stc
mov
cmp
je
mov
dec
xor
sub
out
shlb
sbb
cmp
jl
sbb
push
xlat
aad
mov
sub
mov
jno
les
ret
in
js
fdivrs
xchg
add
push
cmc
out
insl
loop
insb
sub
mov
popa
cmpsl
push
push
lock
cmc
push
ljmp
jae
push
add
lock
and
xchg
fsubrl
fwait
call
inc
lods
cwtl
lock
pop
lcall
shl
adc
scas
push
and
mov
mov
in
ret
popf
shl
xchg
cmp
sbb
lahf
inc
adc
sarl
pushf
inc
fcomp
cmp
enter
mov
loop
inc
inc
xor
mov
and
mov
fisubs
ljmp
or
adc
sbb
scas
lock
and
popf
shll
inc
lret
jle
adc
jg
push
sub
rcr
inc
mov
adc
lock
test
lock
xchg
or
in
mov
int
cmpsb
pop
inc
sahf
push
negb
out
push
push
out
jo
lock
and
mov
shl
shr
scas
orb
inc
sub
lret
ja
lock
sub
pop
pushl
mov
aas
xor
push
dec
jb
inc
into
adc
popl
jg
xchg
lds
cmp
ficoms
xchg
dec
sbb
push
jbe
ficoml
lods
xlat
stos
lock
inc
out
xchg
xchg
pop
mov
add
ja
fs
jns
imul
out
jl
insb
jmp
int3
call
inc
pop
cwtl
lock
jge
push
xor
jbe
pusha
push
ja
dec
xorps
clc
cmpsl
cli
mov
repnz
imul
rclb
fisubrs
jl
ret
xchg
out
xorl
pop
mov
dec
jo
xor
push
jmp
inc
and
dec
jne
push
add
mov
insl
jmp
lock
dec
push
adcb
xlat
out
movsl
inc
leave
inc
add
xor
pop
mov
call
xchg
outsb
call
imulb
mov
lock
lods
fsubl
adcl
xor
adc
lock
adc
rorb
lds
push
or
pop
fists
cmp
cmpsl
test
xchg
insl
lock
repnz
pop
xchg
inc
fs
push
f2xm1
cmp
nop
xor
mov
stos
xchg
mov
push
int
pop
ficoms
int
mov
fmull
dec
rolb
out
movsb
insl
and
inc
mov
xchg
imul
lock
inc
loopne
add
mov
mov
lock
ss
shrb
jo
je
mov
in
cmp
lock
rcr
cmpsb
sarl
add
lea
ret
dec
loop
lock
mov
imul
xor
stc
cmp
mov
inc
push
gs
out
cmpsl
fwait
lock
or
in
es
lock
loope
shl
jo
hlt
mov
cmpsl
add
test
das
ds
flds
push
push
pop
pop
lock
sbbb
loop
std
ds
pop
lods
aaa
loop
in
mov
es
dec
pop
sub
push
dec
lock
pop
add
lock
push
loop
sub
cmpsb
test
dec
sbb
lahf
xchg
add
fcomps
ljmp
mov
in
incl
lock
mov
push
cmp
je
mov
rorl
jo
sub
xchg
mov
into
sbb
fldcw
leave
js
ret
mov
ret
scas
add
mov
pop
adc
cmp
scas
dec
shl
pop
sarb
aas
mov
push
mov
jl
js
lock
jne
out
test
dec
lock
loop
shrb
mov
pop
adc
jnp
popa
push
imull
jo
push
add
push
sub
shrl
inc
loop
sbb
arpl
and
jo
mov
fdivrp
sbb
addr16
lock
rclb
xor
push
and
out
lds
lock
cmp
lock
ficoml
nop
jle
enter
jmp
shl
std
repnz
es
sbb
in
ja
lock
lret
aad
xor
xchg
cmp
in
cltd
mov
lock
shll
or
mov
aad
es
lcall
mov
inc
int
fmull
jno
xchg
xor
cltd
or
fld
push
and
cmc
mov
hlt
ret
mov
cmp
outsl
loope
mov
lock
sti
push
and
inc
pop
loop
je
lock
add
fdivs
fucom
pop
mov
pop
out
imul
mov
mov
lock
shlb
pusha
jmp
adc
mov
xchg
fidivrl
sbbl
xchg
jge
sarl
call
cmp
fidivl
cltd
fisubs
fs
inc
xchg
mov
adc
jge
jl
in
or
fs
pop
mov
push
adc
and
push
loope
or
xchg
lock
aaa
repnz
ja
addr16
shl
arpl
mov
jl
sahf
fisubl
sub
push
inc
adc
xchg
mov
sbb
mov
aad
push
movsl
imul
or
dec
hlt
rorl
mov
out
push
mov
lret
jb
mov
lock
orl
sub
arpl
and
sbbb
fdivl
mov
lds
push
out
push
jno
or
push
imul
lock
inc
xchg
jp
inc
daa
lock
xchg
lock
std
inc
inc
sarl
add
int
ss
ret
mov
inc
lret
loope
mov
or
hlt
into
sahf
xor
mov
nop
add
inc
xlat
cmp
daa
lret
push
andl
in
lahf
mov
es
lret
add
repz
insb
cmp
lock
xlat
xchg
in
jb
lods
lock
push
xchg
dec
repz
inc
cmp
push
movsl
push
pop
xor
cli
dec
mov
sub
mov
ret
push
scas
sub
mov
stos
add
xor
push
out
jge
mov
enter
shl
shlb
stos
shll
bnd
divb
jl
push
inc
js
and
xor
mov
lock
cmp
ret
in
jecxz
out
mov
pop
add
leave
xchg
ja
jne
ja
aad
add
int3
mov
inc
neg
mov
call
roll
ficoml
imul
lock
clc
push
xor
movsl
lods
popf
cwtl
add
sbb
xorl
in
pusha
ret
cmpsb
enter
cmpsl
stos
ljmp
mov
lock
cmp
fisttpll
mov
mov
out
pushf
lock
dec
mov
add
jns
lock
lods
or
push
loop
out
pop
lock
xor
pop
pusha
ret
pop
or
dec
mov
or
push
in
sti
mov
mov
call
int3
sbb
out
popf
stc
jbe
sbb
repz
enter
stos
jae
sbb
lcall
gs
jle
fstpt
xor
dec
cmp
sub
or
loope
jmp
pop
push
in
mov
je
out
push
insb
lock
jge
into
push
xor
nop
lock
cli
xchg
lock
push
mov
mov
mov
cmpsl
xchg
cmp
cmpsl
jmp
loope
push
pop
pop
jcxz
jne
es
cmp
lock
pushf
and
cwtl
or
jl
adc
lcall
inc
xchg
negl
pusha
mov
mov
add
adc
clc
add
insb
xchg
insl
cmpsb
mov
out
xchg
movsb
xchg
lock
mov
or
mov
movsl
or
add
lock
inc
fldt
dec
lock
addr16
mov
pop
dec
rcl
pop
xchg
xchg
mov
and
in
mov
lock
pop
sbb
xchg
mov
pop
scas
in
push
or
add
push
inc
xchg
lods
aam
and
ja
ss
shrl
adc
mov
lock
mov
xchg
daa
bound
and
lcall
int3
leave
pop
out
mov
or
fsubs
loope
lea
ljmp
add
cmp
outsb
mov
lock
xchg
imul
cmc
adc
fwait
int3
insb
mov
lock
js
lock
adc
xchg
dec
mov
jle
sbb
mov
mov
out
clc
imul
cmp
int3
fistpl
sahf
movsl
inc
repnz
and
stos
add
fwait
mov
inc
xor
or
add
inc
mov
inc
add
hlt
and
call
jge
and
gs
nop
das
jne
aad
lock
clc
or
aaa
add
push
loop
nop
outsw
repz
lock
sbb
jecxz
aam
fsubs
lock
cmpl
lock
popa
push
lock
imul
xor
jb
scas
mov
lock
jmp
pop
sub
mov
pop
je
lock
mov
add
cmp
fcmovnb
sahf
or
adc
mov
add
repnz
mov
dec
push
out
jb
jo
sub
lods
push
or
mov
mov
testb
cmp
dec
lock
jno
lock
cli
add
pop
lods
xchg
lock
jae
int3
fisubs
inc
xchg
mov
ljmp
mov
mov
lods
mov
iret
div
push
push
outsl
aas
inc
das
cmp
mov
inc
cmpps
and
ret
ds
hlt
mov
mov
xor
xchg
lock
add
lock
pop
sub
add
in
loop
loop
hlt
push
push
inc
notl
pop
push
xchg
enter
lock
mov
lock
mov
xchg
jmp
adc
push
fs
pop
mov
pop
daa
xorl
push
and
ss
xor
insl
and
lock
mov
scas
jmp
lock
lret
lods
xchg
mov
and
mov
andnps
dec
leave
lock
pushf
jmp
cmpl
lcall
lock
in
push
fadds
or
fadds
div
jmp
rolb
add
adc
stc
mov
lock
lret
sub
mov
cmp
inc
ror
lret
and
push
mov
sub
sbb
mov
cmp
cld
lock
lret
lock
xchg
shlb
or
insl
hlt
insb
sbb
fnstcw
pushf
lock
and
jno
xchg
jecxz
mov
mov
fsubl
xchg
mov
dec
icebp
pop
sahf
jae,pn
arpl
leave
jl
inc
imul
mov
and
cs
mov
jb
into
outsl
mov
lock
lea
lock
pop
jmp
adc
fwait
mov
inc
nop
xchg
mov
lock
jnp
adc
lock
ss
mov
sbb
imulb
out
mov
lock
in
mov
add
loop
jmp
aad
sbb
je
lock
ds
dec
xor
lods
inc
setl
dec
dec
sbb
xor
push
and
cmp
leave
adc
sub
insl
lret
lock
std
add
negb
add
fistl
test
mov
and
fcomi
mov
movsl
pop
xchg
mov
mov
push
xchg
ret
leave
xchg
jne
je
lock
mov
mov
lock
inc
sub
insb
test
lret
aas
jo
outsb
push
fsubrl
popa
lock
sub
xlat
mov
arpl
dec
add
push
mov
jle
xchg
ficoms
and
xor
dec
push
mov
fisubrs
jg
add
xchg
jecxz
loop
enter
mov
std
lock
sub
inc
loope
adc
lds
jle
sbb
ljmp
xor
scas
mov
pop
dec
popf
mov
pop
sarl
cmpsl
call
lock
mov
imul
lods
xor
push
outsb
inc
out
call
mov
popf
add
in
lock
add
jg
lock
ret
fucom
in
add
ficoml
mul
cmpsb
lock
and
mov
adc
inc
jmp
pushf
pop
out
lcall
enter
mov
inc
inc
aaa
std
lahf
dec
xor
xor
or
xlat
jne
push
mov
mov
pop
dec
int3
sahf
lahf
and
rcll
jo
push
cld
add
ljmp
loop
xchg
inc
movsl
mov
xor
push
sub
ret
lcall
add
test
xchg
lock
scas
mov
push
adc
mov
and
lock
movzwl
mov
imul
inc
sbb
clc
sub
cmc
xor
mov
scas
adc
mov
js
xchg
lock
cmp
sub
pusha
mov
call
and
dec
out
fsubs
pop
repnz
aam
bound
pusha
pop
filds
mov
stos
cmpsl
push
rcr
enter
clc
jmp
mov
mov
loop
out
dec
push
lock
stos
call
clc
lock
cmp
ljmp
pusha
add
cmc
pusha
adc
mov
xchg
jo
mov
ficomps
lock
dec
ljmp
pop
mov
jl
or
sahf
push
mov
inc
cld
xchg
in
xor
call
ja
lock
mov
mov
mov
pop
pop
in
sti
stc
dec
xchg
test
push
adcl
in
mov
sub
mov
lods
adc
pop
jecxz
dec
insl
lock
pop
dec
les
jo
adc
pop
mov
xor
push
pop
mov
xorb
decb
cmpsb
lea
in
adc
cmp
adc
mov
cmp
div
add
and
jbe
cmpsl
mov
push
nop
jle
mov
bound
loop
aaa
and
arpl
ret
lea
mov
xorb
fisttpll
stos
jmp
fdivrp
mov
in
lret
adc
hlt
mov
mov
xor
std
pop
jmp
enter
or
rclb
add
js
rcr
imul
adc
pushf
idivb
cmpsl
dec
bound
push
adc
lock
mov
and
je
mov
loope
leave
mov
lock
push
test
mov
outsb
mov
loop
xchg
jl
lock
es
and
cmp
inc
ja
xor
sbb
adc
cmp
cmp
les
loop
cmpsb
push
dec
call
inc
cltd
fdivrs
call
xchg
xor
sbb
and
push
push
mov
adc
cld
adc
out
es
aaa
push
mov
push
movsb
rep
outsl
lock
sbb
insb
bound
pop
inc
push
add
mov
lret
das
dec
fcomps
shl
push
out
sub
cmpsl
mov
push
stos
imul
or
adc
and
cmc
sbb
lock
sahf
decb
call
fidivl
mov
aad
in
or
decl
fst
fimull
je
adc
ljmp
mov
mov
gs
pop
xchg
mov
adc
addb
jbe
loop
fldl
and
push
and
stc
jne
add
lock
mov
xchg
dec
xor
or
xlat
call
inc
mov
call
jmp
scas
js
lock
sub
push
inc
pushf
cmp
and
lahf
sbb
inc
neg
lods
int3
lock
dec
cmp
lock
in
lock
out
lock
dec
aad
pop
lock
adc
mov
xor
jge
ljmp
std
imul
mov
lret
mov
pop
test
lcall
lock
lods
loop
push
out
lock
or
lock
int3
adc
add
pusha
jp
pop
xor
in
push
into
daa
add
sbb
fwait
or
ljmp
fs
scas
sbb
inc
cmpsb
cwtl
insb
lock
pop
arpl
testl
outsl
insl
cli
cmp
inc
rcll
divl
aaa
gs
addr16
jne
daa
test
mov
enter
scas
push
fsub
stos
test
mov
pop
xor
mov
mov
and
cmp
movb
push
leave
add
cli
loop
pushf
sbb
lock
mov
sbb
add
inc
ja
pop
aaa
add
mov
fs
jp
and
cmp
xchg
cmp
out
into
sub
sbb
pop
int3
ljmp
pop
inc
sbb
lock
stc
mov
lock
jecxz
cmp
jmp
jge
lds
and
pusha
ljmp
inc
xchg
pusha
cmpsl
roll
je
mov
test
inc
ror
stos
mov
cwtl
mov
jle
test
cmpsb
sbb
std
pop
orl
lock
dec
xchg
or
jne
xchg
mov
test
insb
aad
pop
sbb
stos
dec
negb
imul
lods
push
testl
adc
and
inc
mov
jge
mov
mov
movb
out
pusha
inc
adc
cmp
sbb
mov
xchg
mov
in
icebp
popf
xchg
and
fnstsw
clc
xor
lock
or
je
jp
xchg
popa
mov
mov
jb
add
jbe
bound
js
push
inc
shll
pushf
cmp
xchg
pushf
mulb
jno
popa
lret
jle
lock
lcall
repz
out
fdivl
daa
je
lods
aad
adc
mull
pusha
movsl
dec
pop
or
pushf
das
enter
jge
addr16
adc
mov
or
dec
add
fstpt
ss
cs
jmp
lock
test
lock
jns
push
les
stos
call
push
mov
cmp
lcall
das
imul
mov
jmp
xor
dec
add
fwait
jbe
pusha
idivl
jecxz
aaa
lock
ret
mov
test
lock
mov
or
inc
lock
xlat
ret
movsb
xchg
pop
lock
bound
ror
dec
add
out
jle
mov
sub
fnstcw
jne
xchg
gs
mov
popf
test
fwait
daa
outsb
mov
mov
lock
or
aam
and
mov
or
lock
sub
pop
jno
insl
idivb
movb
arpl
xor
mov
inc
int3
lock
dec
xor
dec
es
mov
aam
sarl
lock
jle
xlat
dec
lock
add
lahf
push
ljmp
and
xchg
mov
lock
adc
xchg
loop
or
jno
adcl
and
shlb
xchg
mov
js
add
out
ja
mov
lock
cmpsb
xlat
iret
das
cmp
xchg
xor
int3
adc
mov
pop
out
dec
mov
pop
aam
push
sahf
call
in
adc
mov
mov
push
sub
cmc
cs
jo
lret
mov
lock
leave
xchg
test
or
dec
lds
xchg
and
js
cltd
dec
mov
int3
cmpsl
lock
insb
push
test
mov
mov
pop
into
jl
ljmp
call
push
mov
rcr
inc
sub
call
pop
lock
daa
das
fadd
int3
xor
aaa
pop
push
shr
pop
fs
rcr
add
xchg
scas
into
lahf
test
pop
stos
lock
movsb
pop
push
dec
or
lock
aaa
inc
lock
lret
gs
lock
inc
jge
xor
ret
std
jb
scas
push
icebp
inc
push
lock
movsb
out
and
xchg
mov
jl
pop
mov
lock
in
pusha
jns
pop
out
std
adc
es
xchg
fdiv
adc
inc
in
int3
cld
xlat
or
movsl
inc
mov
into
jo
mov
mov
cmc
pop
mov
data16
into
dec
mov
xor
push
xor
sbb
mov
incb
pushf
pop
ds
jne
int
dec
pusha
daa
push
xchg
pop
xchg
cmp
pop
mov
push
add
inc
inc
mov
insb
shr
add
lret
add
out
cmp
jecxz
jo
mov
addr16
dec
cltd
ret
lock
mov
xchg
jne
lahf
pop
pop
inc
je
jns,pn
ret
test
popf
push
mov
out
daa
cmpl
je
loope
stos
lods
jg
ds
xchg
mov
mov
sub
hlt
lock
repnz
jl
sub
lock
rol
jne
fs
push
aad
inc
pop
xor
and
mov
or
jle
lock
pop
lods
cmpsb
jbe
in
fcompl
inc
test
push
sub
pop
jne
inc
dec
lock
mov
arpl
jl
andl
lock
jmp
mov
pop
push
mov
std
lock
dec
mov
cmp
popf
sbb
push
int3
pop
call
xor
dec
int3
jno
sbb
xchg
adc
add
mov
mov
mov
test
int3
or
rorl
rclb
ret
xchg
mov
fcomip
mov
roll
fcompl
mov
sbb
call
push
insb
mov
lock
dec
or
cli
div
sub
shll
add
jns
pop
sbb
mov
les
push
loop
movsl
xlat
mov
cmpb
lock
jge
les
push
xchg
popa
and
mov
and
jp
dec
lock
es
xor
int
lahf
movsb
sahf
cwtl
insb
mov
dec
inc
aad
test
jo
data16
push
das
or
in
enter
add
out
and
jbe
mov
jl
sub
or
arpl
mov
inc
rcl
movsl
lock
mov
xchg
xchg
lock
jle
xchg
push
xor
lock
test
mov
fs
mov
cltd
push
xchg
mov
mov
jno
jecxz
add
ret
xlat
cwtl
lock
movsl
into
push
mov
mov
cmp
cmpsl
test
inc
call
cmp
lock
mov
cmp
out
fiaddl
sbb
aam
fildll
lock
pop
adc
add
mov
mov
sub
cmp
pop
add
movsl
ret
cmpsl
lods
lock
insl
ss
lock
data16
jecxz
sub
push
cltd
iret
into
mov
lahf
sub
js
push
imul
dec
lock
and
addl
aam
bound
test
jle
jge
cmp
inc
mov
icebp
xchg
ljmp
fldcw
sbb
nop
movsl
fs
dec
xchg
jmp
lock
sub
imul
cmpsb
nop
sarb
xchg
es
pop
push
sub
shr
insl
imul
test
add
mov
pop
xchg
scas
jmp
cmp
push
lock
arpl
fiadds
cmp
cmp
add
mov
mov
xchg
lock
jae
xor
dec
adc
lock
aaa
and
jnp
cmp
cmp
fs
aas
dec
mov
mov
or
negl
ret
pop
xor
movsb
lock
nop
push
sbb
mov
popf
out
out
and
enter
ja
mov
lock
inc
int3
rorb
mov
aas
not
dec
push
push
loop
hlt
mov
cmp
mov
and
idiv
int3
into
inc
mov
call
add
jecxz
pop
push
in
testl
sbb
pop
cmp
leave
lods
add
dec
cmpsl
mov
mov
mov
movsb
sbb
adc
mov
adc
lock
out
inc
repz
sub
and
mov
notb
iretw
jmp
roll
movsb
adc
addr16
cld
inc
xchg
adc
stc
inc
icebp
and
mov
add
inc
ret
fists
sahf
ss
sbb
ss
test
sub
mov
cltd
pop
lock
sub
lock
jne
jbe
xlat
cwtl
call
push
fistpl
lock
dec
jmp
scas
aam
out
call
callw
jnp
test
jp
mov
fdiv
incl
int
into
push
lcall
or
cli
mov
sbb
adc
test
cmp
jo
adc
jns
add
loop
shl
mov
daa
xor
lock
and
ret
adc
xlat
aad
out
and
lret
repnz
and
test
loop
push
imul
js
dec
mov
fistpl
cmp
ret
push
pop
sub
push
add
call
dec
xor
lock
daa
iret
repnz
mov
adc
push
leave
dec
pop
testl
lahf
xlat
jne
stos
lock
dec
test
pusha
std
push
xor
push
fstl
rolb
sahf
imull
scas
stos
dec
and
push
and
or
test
hlt
mov
pop
das
inc
and
je
fisubl
lock
out
ret
push
in
inc
jg
sbb
das
dec
fs
and
xchg
inc
push
pop
jp
add
aaa
out
stc
pop
mov
pop
lock
dec
sbb
inc
jl
and
subl
in
stc
cmp
dec
and
mov
mov
aas
add
xchg
pop
cmc
add
pusha
or
pop
cmpsb
mov
shlb
aad
cwtl
popf
fwait
pop
movsb
pop
cmc
xlat
arpl
data16
movsl
mull
jbe
jp
mov
int
jecxz
cmc
mov
mov
ljmp
jg
xchg
jle
es
pop
lock
pop
shrl
in
push
movsb
cmpsl
jbe
out
inc
mulb
lock
jp
sar
adc
ljmp
std
int
loope
push
call
in
pop
pop
rolb
int
test
hlt
lret
cmpsl
ret
xchg
mov
add
adc
push
jle
lock
pop
push
lock
cmpsl
mov
xchg
es
inc
xchg
aas
pop
lock
xor
shl
mov
arpl
mov
lock
jge
pop
lock
adc
and
cld
pop
int
mov
cmpsb
test
push
das
scas
jmp
lock
int
dec
lahf
into
loope
xchg
jp
iret
lock
push
arpl
add
pop
xor
jp
jmp
lret
sbb
sbb
adc
ds
mov
mov
lock
jnp
sub
lahf
imul
add
xchg
xor
sbb
pop
adc
cmc
hlt
push
les
jecxz
mov
sub
pop
cmpsl
xor
inc
push
fcoml
lock
lock
xchg
push
add
es
iret
in
mov
mov
fistpl
lock
in
xchg
xorl
insb
jb
xchg
test
lock
pop
sub
mov
popa
push
inc
and
jae
sbb
lock
iret
mov
cmp
in
loope
pusha
in
xor
mov
sub
mov
cli
ret
or
lods
pusha
or
rclb
cmp
pop
shlb
loope
in
inc
test
mov
cmp
cmp
mov
mov
push
jmp
lock
cs
ljmp
cmp
jecxz
adc
ja
ljmp
jg
loop
lock
pop
ja
pushl
push
clc
inc
mov
mov
lcall
out
aad
adc
rorb
jo,pt
push
lock
jp
or
gs
cmp
adc
and
jmp
add
mov
push
mov
bound
jecxz
fadds
mov
xlat
push
ljmp
ja
lock
add
pusha
mov
icebp
adc
cli
repnz
fnstenv
lock
int3
jbe
lods
jae
lock
out
or
inc
and
divl
fmul
in
mov
sbb
stc
pop
xchg
arpl
jb
nop
mov
je
lock
adc
out
sbb
sub
imull
add
enter
stc
lock
cmp
dec
push
dec
lock
xchg
mov
fwait
cmpsb
subb
mov
jo
lock
pop
and
mov
jbe
lret
xor
inc
cld
aam
pop
sub
movsl
mov
adc
in
push
xchg
lock
pop
dec
xlat
cmc
lock
cmp
push
ret
inc
push
hlt
mov
lods
adc
test
mov
scas
jns
lock
inc
test
shr
fwait
lock
lea
and
lods
pop
mov
xor
enter
js
adc
data16
lock
mov
test
ret
stc
lock
pusha
and
sbb
testl
gs
and
push
inc
cmp
inc
jl
mov
scas
and
dec
pop
and
cmpsb
sarb
ljmp
pop
xchg
call
lock
imul
mov
and
fwait
push
pop
repz
jae
push
or
ljmp
test
cmp
fs
and
lock
push
sub
lock
dec
cmp
aas
push
cwtl
ltr
sub
or
ja
shlb
dec
push
jg
das
int
xchg
lret
sbb
insb
sbb
call
mov
popl
bnd
pop
ret
jb
out
shld
xchg
outsb
cmc
gs
push
fs
rcll
call
dec
add
outsb
pop
xchg
in
pop
jo
js
mov
mov
jne
pushf
mov
fcmove
call
mov
push
ret
push
xchg
idivl
loop
int3
call
push
lock
sbb
jbe
pusha
std
lods
ljmp
stc
lret
scas
repz
shll
sti
jae
cmp
pusha
mov
mov
in
rolb
aad
sti
rcll
xor
mov
lock
and
inc
jb
adc
adc
mov
and
popa
mov
lock
inc
lock
pop
jb
lock
ds
mov
xor
mov
imul
mov
push
lahf
add
mov
mulb
dec
lock
pushf
fmull
jb
imul
adc
int
sbb
lcall
add
fs
lret
jb
pop
rcll
mov
cmpsb
or
sbb
fadd
ljmp
outsb
std
movsl
mov
inc
mov
jecxz
jle
int3
sub
fldz
lret
ret
add
lea
and
div
stc
or
jl
int3
xor
in
lahf
xorb
xchg
stc
pusha
fcmove
call
pop
pushf
out
push
sub
call
dec
mov
std
mov
mov
test
nop
fbstp
hlt
xor
int
sbb
cmpsb
adc
or
outsl
into
repnz
popl
cmp
leave
push
xchg
fdiv
stc
insl
xor
and
mov
push
daa
xchg
sub
xor
test
filds
cmp
lock
cmpsl
movsl
pop
cmp
testl
and
out
movsb
lock
mov
mov
test
jnp
jmp
stos
and
ja
xor
sahf
mov
or
fisubrl
fistpl
rorb
mov
pop
pop
add
jo
cwtl
xchg
ficoms
mov
dec
rclb
pop
lret
jg
fidivrs
xchg
test
push
jecxz
jge
pop
je
jl
call
ret
sahf
pop
lock
add
lock
daa
rcl
push
jle
out
pop
jg
sahf
add
xlat
lock
insb
aaa
jecxz
mov
mov
test
lock
sub
jno
mov
stos
call
ja
and
cli
int
mov
mov
or
aad
popa
adc
xchg
repz
pop
pop
lock
scas
inc
das
xor
mov
lods
mov
lock
sahf
adc
pop
jmp
jmp
push
or
and
int3
jo
lock
push
lock
mov
xchg
push
insb
pop
xor
and
fldl
jg
mov
lods
loop
int3
pop
lock
dec
outsw
mulb
xchg
iret
cmp
pop
ljmp
jp
sub
lea
lock
inc
mov
xor
push
ret
lock
add
outsb
dec
lock
cmp
mov
mov
ljmp
add
lds
repz
mov
lock
sbb
aam
mov
jp
sub
xor
add
adc
mov
lock
pop
iret
dec
sahf
and
push
inc
mov
dec
sub
mov
lcall
mov
dec
mov
mov
lea
or
notb
jne
adc
xchg
in
adc
add
je
jb
xor
push
ss
aam
lock
xchg
mov
sahf
out
jns
add
lret
and
fstps
fsubl
shlb
jbe
jp
in
cmc
sub
fdivs
fbstp
push
xchg
add
jge
inc
cmp
jg
stc
push
repz
cmp
call
ljmp
jbe
leave
lock
dec
lcall
or
call
and
fisttps
out
cwtl
add
addr16
repz
lock
inc
rcrl
ret
lock
mov
lock
movsb
fnstcw
mov
cli
lock
xor
sbb
or
stos
imul
pushl
or
in
stc
movsl
hlt
adc
call
mov
lret
dec
shl
push
lock
into
jbe
and
loope
push
mov
jbe
rol
shl
ficoml
test
jmp
lock
lds
ja
inc
mov
je
mov
mov
cmp
lock
pop
inc
cld
into
sub
ret
test
xor
repz
jge
fwait
lock
jp
pop
xor
inc
lock
push
ret
push
iret
fmull
popf
call
xor
pushf
jo
fidivl
push
mov
pusha
out
and
daa
jbe
cld
cmp
scas
adc
into
add
mov
enter
stos
shrb
mov
fdiv
sbb
mov
push
pop
sti
lock
or
lods
int3
xor
inc
xor
in
add
sub
jp
movsb
or
dec
lock
mov
dec
add
push
lret
int3
ret
jb
and
lret
out
shr
jb
js
ficoml
dec
mov
out
insl
xor
inc
addr16
xchg
shl
aam
ret
lock
cmc
sbb
dec
rolb
push
pop
ret
mov
mov
dec
mov
dec
lcall
call
lock
or
or
push
jmp
scas
fcmovne
mov
xchg
js
inc
or
loope
into
jns
jbe
sub
call
lock
insl
inc
xchg
sti
fs
xor
loop
std
fwait
hlt
aam
test
loope
mov
pmaxub
mov
or
jb
nop
jbe
jne
lock
insl
cli
xchg
push
call
cltd
repnz
xchg
subb
jg
mov
cmp
mull
jb
push
add
test
jmp
lock
movsb
pop
in
pop
mov
jp
adc
fiaddl
daa
lock
push
popf
cs
pop
fwait
sahf
pusha
mov
mov
sub
cmp
popa
push
inc
mov
lods
or
out
jb
sbb
pusha
rorl
sarb
ljmp
lahf
lock
hlt
push
dec
fcomp
stc
adc
lock
lock
fmuls
das
mov
sbb
mov
cmpsl
sbb
push
xor
pusha
clc
adc
aas
scas
or
jge
inc
lret
pop
mov
cmpsb
cs
jb
lock
cli
inc
add
cmp
repnz
imul
push
or
adc
ficomps
cmc
inc
in
aaa
in
addr16
xchg
lret
fwait
add
fldz
inc
int3
out
or
add
mov
es
aaa
pop
outsb
inc
enter
out
orb
loope
add
jg
leave
es
imul
cmp
lea
pop
mov
lret
push
fsubrs
add
mov
xor
js
mov
dec
test
fs
arpl
xlat
lock
sub
cmpl
scas
idivb
aad
add
fsubl
in
in
dec
inc
pushl
pop
lock
and
out
fs
arpl
cmp
adc
or
xor
xchg
sub
or
movsb
jle
das
cmp
ljmp
aam
mov
divl
inc
je
pushf
adc
loop
push
hlt
stos
jl
push
imul
popa
fistl
xchg
lcall
fcomip
rcll
jno
add
xor
out
shl
mov
lcall
ja
fiadds
ljmp
jbe
push
scas
or
lock
insl
adc
cmovl
call
cwtl
cli
push
xor
lock
xchg
iret
out
push
inc
insl
lock
outsl
es
add
out
lock
dec
mov
leave
bnd
push
cs
test
popf
fwait
xlat
stos
fldl
lret
lock
mov
pusha
jecxz
fistl
mov
lock
lcall
lock
push
add
xor
fs
xor
in
fwait
lock
sbb
sub
lock
pop
fucom
orl
rcrl
dec
adc
push
jo
aam
lock
mov
cmpsb
cli
test
sbb
sub
cmp
sbb
and
mov
pusha
xor
stc
push
in
inc
jecxz
shlb
dec
jmp
lock
lods
outsb
fs
sbb
or
mov
mull
fwait
adc
cmp
jmp
pop
sub
add
pop
mov
fsubrs
shll
ret
xlat
in
gs
push
in
aas
push
lahf
addr16
shll
jnp
daa
xor
mov
rorl
lret
fs
test
mov
jmp
pop
faddp
div
data16
aam
daa
pop
mov
in
push
fidivrl
popa
cwtl
mov
out
push
fs
adc
mov
fsubp
cmpsb
push
adc
xor
xor
mov
movsb
and
int
mov
lods
pusha
xchg
mov
scas
mov
mov
inc
and
cmpsb
in
jge
xor
lock
push
xchg
sub
mov
imull
pop
out
rol
rcrl
pop
lock
gs
ja
lock
push
inc
xchg
sbb
lock
pop
mov
mov
fisttpl
ret
pusha
je
clc
sbb
repnz
sti
mov
sub
pop
inc
mov
push
out
orl
movsl
cs
rcll
les
lea
add
in
mov
xor
lock
aad
fnstsw
or
lock
push
shlb
pop
mov
lock
mov
mov
lock
dec
sbb
inc
mov
lock
pop
xchg
push
adc
cld
mov
cltd
int
testl
pop
lock
mov
fistps
testl
lock
cmp
jg
testl
inc
sarb
pushf
popa
pop
add
cli
cmpsl
mov
testb
lock
dec
dec
sub
or
lock
enter
aas
jbe
mov
in
push
arpl
xor
in
das
xchg
and
push
jne
xchg
sbb
or
inc
sub
jge
das
nop
dec
lock
sub
nop
jnp
cmp
test
ret
xlat
int
jmp
fbstp
lock
sahf
mov
push
lock
imul
adc
mov
ret
mov
test
mov
fincstp
gs
lock
rcr
ds
jge
lock
aad
mov
leave
pop
xor
negb
mov
add
rsqrtps
xchg
or
dec
mov
lock
push
aam
js
adc
push
mov
mov
andb
push
shl
in
fstps
test
mov
and
push
cmpsb
shll
jge
rcrb
hlt
lret
inc
mov
xor
push
call
out
lock
push
daa
dec
cwtl
std
cmp
jns
iret
lods
or
push
cli
mov
lock
mov
mov
inc
movsl
aas
push
loop
pop
and
jo,pn
mov
les
xlat
leave
push
divb
fs
adc
pop
cmp
fwait
mov
mov
or
xchg
mov
call
movsl
xor
dec
sbbl
ficoml
addr16
sub
lods
sbb
push
outsl
dec
adcl
notl
xchg
add
iret
hlt
xchg
pusha
pop
xchg
in
leave
ljmp
push
out
dec
cmpsb
andb
sub
mov
pop
sbb
xchg
inc
jl
out
in
test
cmpsb
push
mov
movsl
and
and
jmp
mov
mov
xchg
sub
shlb
jmp
push
adc
push
shl
cmpsb
mov
sbb
jb
sub
pop
pop
lock
in
and
mov
repnz
aaa
fisubrl
cmp
mov
das
stc
push
add
cld
xor
sahf
pop
iret
mov
lock
movsl
pop
mov
mov
sbb
cwtl
dec
ss
test
jg
mov
fsubr
inc
lock
dec
adc
cwtl
pop
in
out
fdivs
jl
mov
push
icebp
jl
and
cmpsl
pop
fs
les
pop
popf
jne
in
inc
add
pop
in
jb
adc
mov
rcl
cmc
popf
pusha
call
repz
aaa
dec
dec
or
mov
arpl
lock
outsb
mov
bound
aaa
mov
pop
inc
sbb
inc
mov
fistl
xor
ss
lods
dec
jb
loop
lds
popf
cmpsb
cmpsl
jo
and
lock
gs
rcr
daa
aaa
xor
les
sbb
imulb
ljmp
test
rcll
push
inc
mov
mov
outsb
cmpsl
orl
in
lock
push
lcall
jb
popl
insb
fstpl
call
mov
push
or
jo
push
push
int
lock
lods
lock
mov
xlat
push
ss
pop
test
out
push
movsb
adc
movsl
or
insl
out
enter
pusha
xorb
insl
mov
scas
stos
inc
cmpsb
cwtl
stos
adc
lock
clc
dec
lcall
lahf
outsl
jg
mov
ja
js
scas
flds
sbb
cmp
sti
lock
lret
aam
mov
mov
dec
ja
fcomps
mov
jecxz
jg
negl
mov
mov
inc
push
add
rolb
sbb
sub
div
aad
gs
movsl
ret
loope,pt
cmp
or
adc
fldenv
add
jo
cwtl
jbe
gs
test
inc
lock
fldenv
push
popf
jb
mov
add
sarb
jo
cmp
lock
cmp
outsl
or
fadd
iret
in
out
sahf
push
cmp
in
jbe
mov
loope
or
jp
sub
std
lock
test
outsb
rcrb
lock
mov
adc
cmp
data16
rcrb
movsbl
and
hlt
mov
xchg
jbe
sbb
or
ss
cltd
jecxz
mov
and
into
test
cs
xchg
xchg
out
orl
daa
mov
fsub
shr
pop
pop
fdivrl
mov
enter
inc
mov
dec
call
xor
divl
adc
lret
mov
test
inc
pop
lock
out
scas
sbb
lock
add
mov
in
jmp
lock
mov
jle
sub
fdivr
aam
xor
inc
lret
mov
lock
es
mov
mov
add
pop
pop
adc
jmp
mov
rep
xchg
jns
repnz
out
pop
out
lock
mov
pop
xchg
lock
jg
lret
scas
lock
cli
scas
loope
or
pop
mov
mov
sbb
popa
in
push
lahf
jo
stc
fcomi
imul
sbb
fcomps
jge
cmp
fsubr
add
nop
cltd
and
jl
subb
and
mov
pushf
push
lock
or
inc
loop
cld
rcrb
and
dec
out
div
pop
lods
lock
popa
xchg
cmp
inc
lock
mov
hlt
inc
rcrb
xchg
popf
scas
call
jg
lahf
repz
fstps
adc
mov
aas
cmp
dec
xchg
insb
cli
inc
data16
lds
inc
inc
lods
outsb
jne
inc
aaa
cmp
pusha
or
mov
in
mov
fistl
xlat
inc
fdivs
in
adc
or
mov
clts
push
mov
ret
mov
cmp
xchg
mov
lcall
iret
loop
ljmp
mov
push
std
lock
jp
fnstcw
sbb
jmp
test
repz
jmp
fsubl
xchg
lock
pop
fisubrl
mov
aas
aam
mul
fdivrs
das
dec
inc
xor
hlt
aam
push
gs
mov
inc
std
xor
out
jbe
lea
cs
pop
lds
dec
jne
add
lock
sbb
cmpsl
mov
jno
xchg
inc
adc
mov
and
xchg
jmp
call
pusha
jae
das
scas
enter
pop
dec
rcrb
call
mov
xchg
jp
dec
imul
imul
mov
shll
xchg
sbb
outsl
mov
ficoml
jmp
mov
add
shll
xchg
test
cld
xor
xor
cmp
lock
fisubl
insl
inc
sub
ret
sbb
test
mov
or
in
fidivl
pop
leave
fs
insl
mov
dec
bound
sub
aas
cmp
loope
mov
and
lods
nop
xchg
cs
ja
negl
in
and
je
arpl
aaa
std
ret
frstor
dec
xchg
flds
mov
lods
lock
xchg
test
lock
std
loop
or
ret
xor
jmp
mov
nop
fwait
inc
shll
pop
mov
andnps
xor
jo
enter
mov
and
ss
fs
xchg
test
jl
xchg
fsubs
xchg
rcrl
cmc
mov
inc
pop
ret
popf
in
pop
mov
rorl
test
lock
xor
pushf
push
xchg
cmp
or
lock
dec
sbbl
lock
ljmp
data16
call
add
pop
hlt
ficomps
jb
stos
jl
clc
jl
adc
decl
lcall
sahf
sbb
aaa
pop
cmp
ucomiss
dec
movsl
imul
lock
loope
sub
push
mov
jo
shrb
adc
sahf
lock
push
popa
cwtl
xlat
aam
stos
xor
out
fucomi
out
scas
sbb
cli
jae
mov
xor
lock
mov
pop
movb
std
dec
ljmp
lock
test
lock
push
sti
popa
lock
ljmp
lock
mulb
pop
int3
lock
adc
dec
popa
icebp
lock
mov
xchg
mov
loope
xor
mull
lock
roll
sub
lock
xor
add
cltd
scas
pushf
fisttpll
gs
adc
popf
mov
jnp
push
cli
lock
ja
xor
add
mov
out
sub
loope
lock
aas
or
shl
repnz
in
pop
xchg
pop
inc
and
arpl
ds
pop
cltd
push
es
or
xor
ficompl
cmc
test
pop
roll
jnp
push
mov
in
and
daa
adc
les
arpl
aad
dec
or
add
mul
int3
pop
das
mov
pushf
xchg
pop
call
jne
lahf
loope
adc
push
fnsave
pop
leave
gs
std
mov
insl
lock
js
cmp
lock
roll
lock
xor
inc
xchg
xor
repnz
or
hlt
fld
push
lods
cmp
dec
enter
mov
adcl
xor
test
ret
xchg
cmpsb
lock
cs
and
jmp
sub
insl
sbb
dec
hlt
arpl
pop
xlat
xchg
sahf
lods
test
and
negl
in
add
stc
int3
mov
sti
rep
dec
lock
ret
or
push
pop
outsb
sarl
data16
out
jne
adc
cltd
insb
sub
mov
pusha
dec
dec
rcl
inc
push
pop
adc
into
in
sti
notb
mov
cmp
lock
xor
pop
mov
xchg
push
lock
repz
adc
mov
inc
rclb
sub
adc
lock
and
lock
jno
in
ffree
cmc
and
pop
nop
mov
es
mov
xchg
mov
fdivs
dec
movsl
xchg
lock
jg
out
cwtl
and
lock
adc
sahf
cmp
js
mov
or
stos
test
lock
push
and
mov
adc
mov
add
lock
or
push
lock
pop
push
ss
ds
rcll
lock
mov
ss
jmp
cltd
aaa
dec
xchg
mov
arpl
pop
ja
shll
cmp
add
mov
cmp
pop
std
lock
sti
jne
in
je
jmp
loope
daa
int
imul
cmp
and
pusha
cmc
lahf
or
xchg
call
cwtl
mov
lret
in
hlt
mov
lock
fcomps
dec
adc
lock
jo
jp
mov
lock
sahf
mov
push
and
movsb
pushf
sub
frstpm(287
jb
pop
outsl
jo
pop
loop
cmpsb
lea
jmp
out
and
in
shll
dec
lock
sti
mov
push
scas
cmpsb
outsb
adc
dec
and
mov
ret
lock
jmp
cltd
adc
add
ja
mov
and
shrb
jae
fmulp
out
jo
lock
arpl
mov
shll
add
mov
fdiv
lock
js
pop
movsl
mov
and
fcoms
inc
push
rorb
push
in
jb
push
mov
div
notl
xchg
shlb
xor
mov
push
sub
cmp
or
mov
insb
inc
and
or
daa
mov
lock
xchg
cmp
sti
mov
je
rcr
fimull
push
aas
lret
mov
mov
inc
int3
addr16
adc
fdivs
mov
loop
mov
mov
sub
insb
cmp
inc
fadds
clc
adc
mov
jb
int3
shrl
fbstp
pusha
xchg
fwait
jmp
dec
enter
sub
xchg
fsubl
xchg
push
out
lock
pop
in
shld
iret
stos
lods
cmpl
push
xor
fldl
cmp
cs
out
xchg
mov
xlat
jae
push
xor
and
gs
ljmp
push
div
sahf
xor
into
pop
insl
jmp
je
inc
jp
cmpsb
or
lock
cltd
in
and
ss
push
lock
inc
pop
push
inc
leave
mov
xchg
stc
lock
xlat
stos
lock
jb
inc
jmp
dec
and
adc
sbb
test
popa
fwait
xor
lock
push
pusha
jp
imul
dec
jo
push
cmp
mov
cwtl
ja
iret
mov
cmp
push
fs
xlat
hlt
je
lock
les
xor
inc
add
sub
mov
pop
sbb
mov
mov
roll
data16
cmpsb
mov
lock
test
adc
mov
jle
mov
pusha
cmp
mov
stos
in
in
repz
fcoml
push
call
int
mov
ja
lock
into
xchg
adc
pop
pop
jnp
lock
lret
je
addr16
shl
ret
mulb
imul
imul
mov
inc
lret
fsubrl
test
arpl
jl
mov
test
push
jle
pop
cmpsl
ret
repz
jb
cmpsb
dec
movsb
cmp
out
dec
addr16
jns
lock
lea
jae
lds
push
pop
sbb
stc
lock
jecxz
addr16
sbb
aam
les
sahf
lcall
add
imul
add
or
stos
hlt
lock
ret
xchg
les
lock
enter
loope
fucomi
fistps
dec
clc
fldl
pop
fwait
movsb
scas
cwtl
dec
rcl
adc
or
cwtl
mov
lock
ret
into
ds
daa
inc
lock
sbb
lret
xor
or
cltd
pusha
mov
repnz
cwtl
lahf
ss
add
lods
ja
mov
pushf
das
mov
lock
idivl
lods
xor
scas
and
in
aam
ficoml
loop
jl
cmpsb
push
lret
lock
test
pushf
mov
popf
and
pusha
jns
mov
jae
cmp
inc
in
jge
sbb
mov
out
movsb
sbb
mov
xlat
dec
lock
pop
cmpsb
lock
ljmpw
xchg
jno
pop
fldt
lret
lret
jge
mov
mov
in
jbe
cmp
jl
fists
arpl
mov
pop
pop
pop
push
icebp
pop
cmp
cld
push
repnz
mov
insl
insb
mov
add
adc
pop
ss
je
xchg
mov
or
lret
dec
nop
push
pusha
jg
mov
insl
call
lock
divl
ret
xor
int3
jp
add
out
and
fists
sbb
sbbl
dec
lock
pop
lock
inc
or
lock
fwait
mov
lock
dec
packsswb
pop
sub
clc
xor
or
arpl
add
or
dec
inc
leave
gs
inc
add
fs
popf
in
ljmp
dec
sbb
xchg
out
pop
loop
call
mov
push
inc
xchg
repz
inc
mov
sbb
jmp
adc
push
mov
push
xlat
nop
mov
sub
mov
lock
sbb
ret
jbe
xchg
cwtl
popf
loope
or
jns
call
pop
lock
pop
ret
sahf
dec
push
flds
and
movsl
sbb
rorb
in
dec
aad
pusha
push
ficomps
outsb
xlat
test
sti
xlat
pop
mov
jle
mov
cli
cmpsb
push
test
xor
pop
mov
lock
fwait
adc
cli
adc
and
mov
push
shrl
cmovbe
les
mov
push
lock
inc
jns
or
cmp
xchg
push
adc
or
cmpb
fcompl
in
fs
clc
ficoml
jo
ljmp
loop
mov
mov
sahf
inc
lock
imul
inc
mov
or
mov
push
and
cmpsl
ja
xor
and
inc
inc
or
mov
shrb
mov
or
std
cmpsb
int
lcall
jne
sbb
je
orb
xlat
popf
inc
pop
jge
dec
xchg
lock
fnsave
outsl
imul
js
in
inc
mov
sti
and
dec
add
jo
push
adc
roll
inc
or
cli
mov
pushf
and
int
lock
dec
out
cmpsb
mov
mov
arpl
xlat
mov
imul
pop
or
lock
shlb
mov
push
cmp
js
push
arpl
stos
mov
dec
js
lock
sub
sub
sub
dec
dec
or
mov
push
lock
dec
data16
lcall
out
fadds
jg
pop
sbb
xor
leave
cmp
mov
push
stos
cmp
mov
repnz
push
nop
add
mov
adc
test
lock
push
mov
dec
adc
inc
in
lock
mov
mov
scas
lock
cmp
das
cmp
xchg
lock
dec
jns
std
adc
xchg
push
stc
and
outsb
cmp
popa
ret
pop
mov
daa
xor
lahf
in
sub
enter
ljmp
sub
faddp
push
pushf
clc
decl
push
into
insl
sub
fbstp
aas
or
les
cmpsb
mov
cmp
lock
xchg
mov
dec
fcomip
scas
das
insb
je
sub
lock
xchg
faddp
lock
movsb
popa
add
repnz
lock
mov
mov
scas
in
mov
jbe
imul
cwtl
ret
and
ljmp
push
pop
in
lock
movsl
arpl
clc
or
mov
icebp
push
ret
es
enter
adc
inc
out
lock
push
or
lock
in
into
push
jg
lock
int3
jnp
cmp
inc
in
sub
movsl
dec
lock
adc
xchg
hlt
xor
sub
mov
lock
mov
jge
call
aaa
cmp
mov
lock
test
sub
rcrl
xor
repnz
outsl
mov
xor
in
or
shlb
hlt
movl
and
mov
mov
add
pop
mov
out
out
pop
dec
mov
imul
inc
jge
push
xor
outsb
loop
and
push
fstl
jbe
cmc
dec
pusha
aad
dec
jae
out
fcoml
leave
out
sti
add
jae
mov
dec
lock
jne
out
lcall
push
xchg
mov
sbb
push
int3
sbb
mov
push
inc
adc
nop
outsb
pop
jo
push
or
movbe
lods
pop
bound
inc
mov
in
les
imul
pusha
cli
mov
mov
out
aas
lods
and
mov
loope
bound
jge
xchg
and
pop
lea
sub
or
inc
dec
dec
faddl
sbb
xchg
xchg
in
sbb
xchg
and
sub
mov
adc
inc
add
lahf
aam
sti
mov
pop
out
push
dec
lock
mov
insb
imull
sbbb
jmp
shlb
pop
sub
or
arpl
lock
inc
iret
jb
xchg
sub
cmp
jmp
inc
subl
lock
sub
pop
dec
or
add
fdivrl
nop
lock
mov
ret
sahf
sbb
ficompl
sbb
jne
cwtl
xor
iret
xchg
sub
mov
mov
enter
sub
cli
mov
mov
call
jnp
sbb
out
ret
out
xchg
jo
lock
loope
add
cltd
push
lock
jmp
push
fcmovne
lock
mov
xor
nop
into
subl
lds
sbb
and
loop
mov
mov
lock
mov
xor
test
inc
lock
sahf
mov
or
xor
aam
jbe
stos
jl
push
lock
mov
jo
push
add
movsl
sbb
dec
out
mov
mov
dec
jge
aas
gs
aad
jbe
push
sbb
test
xlat
fisubl
inc
lds
jbe
pop
dec
lock
test
pop
fisubrl
pop
mov
inc
leave
dec
repz
jg
popa
lock
pop
mov
sbb
mov
lock
lahf
in
mov
repnz
stos
stos
insl
jae
mov
lock
cli
fs
imul
adc
pop
daa
out
mov
lock
rcl
subb
lods
lret
hlt
push
rcr
xor
add
addr16
pop
das
mov
add
ja
sub
pop
gs
push
cmpsl
pushf
loop
mov
jge
mov
add
xchg
mov
in
aaa
ja
lock
inc
jl
leave
rol
cwtl
lock
lahf
xchg
xor
call
lock
add
sbb
sbb
lock
stos
jg
or
cltd
fists
insb
arpl
fidivs
jmp
lock
jmp
call
lock
rorl
sahf
add
adc
cwtl
popa
push
out
lds
mov
mov
je
test
inc
jo
xor
lock
mov
dec
adc
mov
shrb
into
jae
push
xor
xchg
popa
push
xor
jo
inc
add
pop
pop
cld
test
adc
adc
cmp
imul
add
fs
jbe
popa
dec
into
lock
orb
lock
movsb
xchg
add
adc
js
lock
in
lret
lock
outsl
adc
lock
incl
dec
es
mov
mov
icebp
cmc
sub
fildll
shll
pop
cmp
cmpsb
lds
lock
aaa
lock
out
xor
jl
inc
lock
pop
sbb
inc
jg
cmp
call
lock
jno
xsha256
cmpsb
xlat
xchg
lock
mov
pop
lock
add
shlb
xchg
push
push
in
mov
shr
lock
pop
jg
lock
fidivrl
mov
sti
lret
push
pop
repnz
lock
push
pop
into
jbe
dec
outsb
test
mov
cmp
es
lock
lahf
imul
sahf
and
mov
sub
push
mov
loope
clc
mov
test
xorb
in
dec
add
call
or
scas
loop
imul
push
sbb
shl
adc
jb
popa
push
insb
stos
lret
lock
jnp
and
inc
nop
push
lock
push
push
push
lock
popf
mov
out
inc
in
xor
push
ss
sbb
push
lret
pushf
out
jno
shll
lock
sahf
sub
mov
dec
xchg
add
into
dec
aam
mov
lock
add
push
lcall
call
lock
and
xchg
ja
jp
mov
pop
jo
cld
movsl
insb
add
fdivs
inc
adc
lock
pop
arpl
scas
add
data16
cld
ja
imul
cmpsb
sahf
push
cli
add
cs
test
mov
add
push
lret
shrb
cmp
xchg
inc
lock
or
and
lock
xchg
adc
idivl
mov
lock
jb
outsb
out
iret
mov
dec
xlat
sub
ds
jmp
rorl
mov
lock
test
icebp
pop
out
ja
addb
and
cmpsl
aam
xor
js
xchg
push
lock
inc
insl
ss
pop
nop
add
dec
xor
and
andl
jp
lock
fsts
lock
ljmp
adc
arpl
cmp
cmpsb
in
cltd
mov
inc
shlb
popl
xorb
jnp
ret
or
adc
fsubr
inc
sub
adc
pop
int3
mov
mov
testl
fwait
shll
xor
pop
and
inc
into
dec
lock
dec
cmpsb
sub
mov
sub
xor
insb
xor
iret
sbb
enter
ret
and
mov
mov
jecxz
ret
cmp
cmp
push
decl
add
sub
mov
in
mov
rorl
sbb
in
pop
jne
ja
clc
add
mov
push
rcll
jae
stc
testb
fs
test
mov
popf
js
pop
out
es
mov
mov
sub
add
frstor
das
test
mov
lock
mov
test
dec
pusha
mov
jecxz
in
icebp
negb
pop
mov
mov
ret
lock
test
popl
and
xchg
fwait
or
leave
adc
aaa
ljmp
call
stos
pop
mov
insb
leave
out
scas
test
pop
jbe
jns
cmp
pusha
adc
clc
lock
cld
jnp
xchg
daa
lock
nop
fdivrs
lock
adc
outsl
mov
push
es
pop
enter
xacquire
pop
lcall
xchg
mov
inc
xchg
push
add
sub
xchg
adc
xor
sub
mov
push
ds
lods
xor
aaa
loop
and
jnp
dec
das
js
cld
cli
out
movsl
mov
xor
bnd
lock
inc
dec
or
maxps
lock
sbb
and
xchg
fs
sub
cmp
add
push
imul
and
icebp
in
mov
dec
lock
fs
lock
js
jmp
dec
add
repnz
ds
lock
push
lret
mov
movsl
lcall
lock
cmp
aam
sahf
sbb
scas
mov
add
sub
jecxz
in
sbb
sahf
mov
clc
pop
ret
push
mov
stos
out
rorl
mov
mov
rolb
pusha
aaa
sub
cmp
in
mov
xchg
pushf
and
out
shl
adc
push
mov
addr16
fistps
add
jnp
stc
into
ret
pop
lock
leave
out
push
sahf
jbe
or
testb
jnp
adc
ret
lock
mov
lock
mov
fiaddl
mov
loop
lods
shrb
pop
mov
mov
shl
xor
mov
cmc
ja
mov
xchg
enter
or
sarl
xor
jns
jns
sub
fcomps
movsl
popa
mov
rolb
jne
mov
movsb
push
popf
jmp
lock
jo
sbb
mov
lock
and
mov
mov
lods
sbb
xchg
jl
jbe
mov
mov
mov
lock
pop
xchg
sahf
or
inc
movb
cmp
fnstcw
and
mov
ja
adc
adc
push
es
in
or
shr
data16
fsubr
lock
scas
fsubs
xchg
mov
lea
adc
rcrb
and
mov
ret
mov
addl
sti
and
das
or
inc
cmp
cmp
mov
xor
testl
xchg
inc
cmp
inc
lock
mov
push
mov
dec
lds
out
sbb
cmp
mov
add
xorb
sahf
je
dec
jl
xor
ret
out
es
rcll
call
adc
mov
lods
lret
movl
mov
test
and
out
jne
cmp
dec
xor
sbb
inc
push
stos
lock
dec
incb
out
pop
xchg
pushf
push
fucomp
aam
xchg
adcl
es
cltd
or
mov
add
call
or
cmp
mov
shl
fisubl
les
lock
stc
push
push
fs
cmp
fildll
sub
iret
rcll
clc
xor
dec
xor
test
ret
jo
leave
hlt
loopne
mov
test
pusha
test
dec
lahf
dec
out
jecxz
push
aad
jle
out
pop
dec
divb
out
loope
mov
mov
iret
ret
shl
popf
mov
inc
fs
and
inc
lock
jp
and
pop
lock
adc
outsb
shll
mov
bnd
ss
add
lock
cs
sbb
xor
lock
push
xchg
lock
xor
ds
xor
lock
enter
jge
lock
cmp
or
xor
jecxz
movsl
les
cmc
mov
aad
rcrb
dec
mov
scas
in
inc
jp
lock
stos
roll
add
cmpsl
test
xchg
lock
es
sbb
idivl
mov
ret
cmpsl
call
mov
push
add
iret
lods
in
pop
dec
mov
push
xor
mov
jmp
shll
inc
push
test
sbb
xor
fs
lods
mov
mov
lock
inc
les
lock
cmp
mov
lock
or
lock
dec
loop
clc
ss
inc
int
jmp
lock
xlat
shlb
xchg
addr16
dec
rcrl
lock
inc
ss
inc
push
rolb
test
mov
jnp
xchg
push
stos
mov
mov
idivb
jae
lock
out
pop
mov
pop
xlat
mov
adc
lock
test
lock
xchg
lock
mov
mov
je
inc
mov
cmc
sbb
hlt
mov
lods
jbe
xchg
lock
test
bound
lret
cmp
outsl
lock
je
add
fwait
jb
lock
mov
mov
aad
ljmp
sub
xor
sub
lock
std
ss
push
lock
xor
shr
adc
xchg
rol
mov
inc
mov
push
mov
pop
sbb
stos
pop
mov
pop
xchg
mov
jbe
mov
in
leave
test
xchg
xchg
xchg
adc
inc
movsl
mov
enter
cwtl
sarl
or
mov
je
pushf
shl
call
lock
test
out
pusha
stc
or
ss
lock
push
and
lret
cld
adc
in
adc
xchg
dec
xchg
shll
xor
out
dec
push
shrd
out
mov
movsb
and
lret
mov
lods
vrsqrtps
cmp
lock
or
in
mov
mov
cmp
add
fsub
pop
js
dec
aaa
mov
test
lcall
lock
lahf
push
inc
lret
pusha
jg
sbb
call
add
xchg
pop
addr16
data16
daa
dec
movsb
hlt
mov
inc
cmp
pop
push
push
pop
sbb
dec
add
push
lock
stc
xchg
jno
mov
adc
das
lock
arpl
xchg
lock
je
cltd
out
in
inc
shlb
pop
push
mov
lock
xor
push
push
in
lock
nop
test
repnz
lret
stc
lock
pop
inc
mov
fistps
jp
cmp
push
cmp
xchg
xor
dec
ret
sub
outsb
fcoms
lock
pop
lods
test
aam
dec
lock
hlt
pop
push
pop
sub
aaa
and
push
adc
iret
sub
lock
adc
lock
js
in
mov
cltd
cld
mov
dec
lock
ss
aas
ret
sbb
jae
mov
sub
call
lods
or
push
pop
inc
outsb
dec
lock
dec
enter
movsb
mov
mov
jge
or
outsb
and
call
in
dec
pop
and
insl
pop
ret
ljmp
das
mov
insb
mov
add
jo
loope
aas
jne
lods
rolb
fnstsw
loop
pop
lock
pop
ss
adc
shlb
movsl
es
ja
mov
scas
cmp
lock
jno
mov
lock
jl
dec
xchg
cmp
ja
es
std
dec
add
jle
sbb
aam
jo
pop
js
pop
out
mov
and
std
xor
lock
insl
push
mov
adc
rolb
aam
in
lock
pop
dec
int3
hlt
scas
movsb
and
xchg
mov
in
in
sti
call
lock
jecxz
adc
andl
push
popf
das
in
lock
or
inc
call
mov
mov
out
push
shl
mov
dec
pop
mov
mov
add
divl
xlat
jae
xchg
jg
xchg
push
mov
lods
lock
or
add
je
mov
xchg
mov
pop
lock
pop
test
xor
mov
adc
cld
jne
add
shlb
add
cmp
xchg
enter
jmp
inc
out
ja
lock
je
mov
scas
mov
adcb
adc
mov
movsl
call
mov
xlat
les
rol
mov
adc
mov
lock
pop
test
stos
test
xlat
stc
jge
fdiv
dec
xor
movsl
adc
xchg
cmp
xchg
lods
push
inc
outsb
lock
out
pop
dec
dec
push
lock
dec
pop
lock
out
push
outsl
adc
sti
cmp
and
inc
jg
imul
pop
les
test
out
rcl
xchg
in
and
lock
xchg
jno
and
or
dec
leave
hlt
mov
ss
xchg
gs
iret
mov
adc
mov
mov
sahf
and
cli
popa
mov
sar
jnp
push
out
pop
int3
pusha
scas
cmp
or
pop
aaa
add
loope
fisttpl
jne
and
popf
int3
arpl
out
pop
mov
mov
and
cmp
ds
sub
daa
jmp
inc
mov
fstl
cmpsb
pop
out
rol
adc
push
and
outsl
adc
movsb
xor
clc
mov
subb
out
push
fnstenv
cmp
sahf
ret
cmpsl
data16
pushf
mov
rol
or
xor
aad
lock
out
aam
cmpsl
lock
mov
mov
and
mov
lods
dec
imul
inc
jmp
push
jg
movsl
call
kmovw
lock
gs
jne
mov
cmpsb
pop
lock
pop
cs
pop
pop
mov
xchg
dec
mov
or
sti
ret
loope
rol
mov
fstpt
lock
xchg
cmp
lock
add
xorl
mov
test
pop
leave
push
mov
shlb
popf
cld
lods
mov
lock
movsb
cmp
adc
into
cmp
add
lock
rorb
pusha
adc
divl
nop
cmp
jne
fstpt
jmp
cwtl
iret
das
xor
imul
rclb
jmp
hlt
or
pop
dec
icebp
lock
sub
adc
mov
hlt
cmp
lock
xchg
inc
xor
mov
in
mov
ljmp
lock
dec
add
mov
lock
iret
fldt
mov
inc
aas
mov
pop
lret
sbb
in
insl
push
jbe
fbld
mov
divl
loop
fs
dec
adc
mov
mov
dec
adc
xor
call
mov
inc
mov
out
ret
ret
in
mov
xor
mov
mov
inc
dec
xor
fdivrs
sarb
mov
pusha
or
cmp
call
subl
mov
inc
lcall
xor
incl
sahf
mov
loopne
sub
and
push
or
das
int3
push
pop
movsb
mov
iret
mov
push
cmp
in
inc
dec
lea
add
fmulp
fs
lods
or
lock
movsl
sahf
cmp
add
and
outsb
sub
push
pop
jo
ret
or
repz
enter
inc
ficoms
lock
or
pop
dec
imul
leave
xchg
push
and
test
ja
rolb
jg
test
pusha
scas
mov
push
cltd
xchg
lock
sbb
lock
int
sti
ss
lret
sbb
or
add
adc
scas
or
mov
push
push
xor
insb
jmp
adc
mov
fisttpll
xlat
pop
jle
pop
movsb
sahf
pmullw
neg
imul
or
mov
aaa
out
aas
repz
rorl
enter
leave
ret
fisttps
mov
push
jae
xchg
vmread
jnp
push
sub
cmp
pop
sbb
cmpsl
adc
dec
mov
fs
fcoml
lock
sub
fdivp
mov
inc
sub
jo
leave
pop
arpl
mov
lea
push
and
sarb
fs
sahf
loope
outsl
hlt
mov
lods
ja
lock
int3
mov
mov
xchg
and
jge
sbb
xor
xor
mov
insb
pushf
es
inc
dec
jecxz
test
jo
ffree
xchg
xchg
lret
sti
lock
fistpll
pop
fxtract
insl
imul
xchg
push
push
lock
adc
jno
sub
fdivs
push
mov
or
lret
aaa
cmp
out
fwait
mov
insb
sbb
xor
js
cmpsb
call
popf
mov
iret
mov
jmp
lock
imul
sub
push
lcall
in
xchg
push
out
rcr
stos
lods
aad
arpl
xor
lret
add
imul
andl
clc
and
inc
test
das
je
lcall
fs
dec
fwait
lock
lock
test
mov
jbe
adc
lods
xchg
mov
xchg
inc
popf
or
mov
mov
inc
inc
lock
mov
pop
fwait
dec
xchg
lock
daa
popa
xchg
lahf
jg
lock
pop
push
inc
cmpsl
stos
lock
das
popf
std
xor
jo
lock
xchg
inc
jl
xchg
addb
shufps
lock
daa
jl
mov
lock
rolb
fsub
ret
into
xor
lcall
stos
nop
lods
or
add
cld
push
push
shll
adc
xor
dec
push
inc
lret
push
mov
xor
sub
adc
loop
imul
mov
mov
test
add
xor
xor
test
sarb
std
pop
mov
fstpl
push
jg
ror
loope
scas
stos
cmpsb
sbb
cmp
ja
xor
or
cmp
repnz
inc
shr
add
xchg
test
sub
negb
movsl
lock
cmpsb
jl
cmp
pusha
xor
in
lods
lock
in
sbb
jns
pop
ss
enter
xchg
int
test
ljmp
out
bound
push
jmp
and
xor
lock
fs
jo
or
lock
jp
adcl
shl
pop
pop
or
jmp
nop
outsb
lret
xor
dec
add
jp
pop
mov
mov
dec
call
pop
filds
lcall
movsb
jns
mov
fs
mov
xchg
pusha
test
out
sub
mov
lock
adc
sub
ret
lock
into
mov
and
enter
pop
lock
outsl
int3
pop
aas
das
xor
sub
xchg
mov
ss
mov
mov
xchg
stos
sbb
lcall
inc
scas
lahf
leave
hlt
lret
jl
push
xor
insl
iret
imul
push
test
adc
pop
lahf
mov
outsb
xor
cmp
loop
test
jle
push
xor
mov
mov
push
jl
push
inc
or
mov
div
popl
push
test
inc
lahf
sub
popf
stc
mov
call
loope
push
sahf
mov
and
out
xchg
call
inc
add
lret
mov
sub
inc
scas
cmpsl
ret
js
xchg
xchg
nop
aad
cmpsb
lock
lahf
cmpb
in
push
lret
out
mov
add
jg
pop
std
push
lock
sub
or
es
cltd
aaa
repnz
cmp
sbb
outsl
sub
mov
lock
or
loope
xor
add
scas
xchg
adc
jecxz
stos
scas
jge
dec
rcrb
xor
mov
inc
movsl
push
xlat
xchg
enter
or
push
sbb
test
mov
cs
mov
sbb
xchg
mov
stos
enter
jo
mov
jge
call
pop
and
inc
lock
loop
arpl
mov
dec
aad
loop
inc
dec
fimuls
ljmp
or
lock
push
movsb
pop
scas
out
inc
lock
push
mov
mov
lock
adc
clc
stos
ss
lock
dec
inc
cmpsl
dec
xor
inc
or
pop
and
fimull
ss
lahf
repz
cmp
fs
mov
lock
mov
and
adc
push
push
iret
sbb
testl
sub
cmp
insb
int3
adc
cmp
mov
call
out
lock
pop
inc
mov
lea
fwait
out
xor
jmp
ja
inc
push
je
lock
jnp
lock
jg
lret
sbb
in
mov
mov
dec
mov
jg
dec
pusha
mov
xchg
cmp
repnz
movsl
add
data16
sub
movl
xchg
fxch
mov
jle
fwait
mov
pop
xchg
push
xchg
pop
push
xchg
mov
cli
sbb
jbe
mull
fstpl
cmp
or
in
aas
aam
lods
lock
sub
ds
test
lods
outsl
mov
mov
lock
out
negb
xor
es
into
add
push
cmc
or
xchg
movsl
jmp
mov
dec
je
cmp
push
add
pop
dec
sarl
lea
fwait
icebp
and
pop
pop
es
xchg
shr
add
mov
pusha
les
shlb
out
fsubrs
xchg
cwtl
xchg
rcrl
dec
enter
movsb
bound
lock
movsl
xlat
mov
xchg
cmpl
lock
data16
lret
aas
and
adc
dec
movsb
pusha
aam
jl
test
sub
idivb
shr
cmp
loope
lock
cs
jmp
push
jl
lcall
sbbb
out
or
in
ja
add
stos
ja
or
jbe
movsl
mov
stc
mov
xchg
stos
push
lea
jg
notl
fs
cwtl
push
mov
mov
out
or
fld
mov
into
jo
cmc
iret
xchg
mov
pop
mov
mov
jne
rorl
sbbl
out
push
in
pop
lahf
rcl
mov
mov
je
jne
fisttpl
adc
xor
insb
inc
mov
shrb
lock
mov
lds
loope
pop
div
arpl
pop
call
lret
int3
and
adc
cmc
xchg
jno
clc
mov
pop
adc
xchg
mov
aas
hlt
rcrl
sbb
xlat
leave
cmp
cmpsb
jge
pop
push
adc
dec
xor
mov
cltd
addl
sub
push
adc
test
inc
fsubr
xor
ret
xchg
insl
xchg
push
shlb
imul
inc
shrd
sbb
ja
push
lods
out
pop
dec
aad
sbb
add
hlt
loope
out
shrl
jne
sarb
les
enter
into
jns
mov
cwtl
loope
das
shl
cmpsb
lret
pop
and
mov
pusha
call
cmp
and
pop
aam
jne
inc
pusha
and
dec
test
inc
push
mov
loop
lret
and
out
sarl
pop
pop
adc
enter
inc
sbb
or
lock
mov
mov
mov
idivl
fs
and
sbb
mov
stc
dec
or
lock
and
out
pusha
jne
lret
clc
mov
adcb
sbb
pop
xchg
push
xor
cmp
lock
lret
fimull
test
sub
test
sti
cmp
jnp
ret
lahf
xchg
frstor
int3
push
insb
pop
ljmp
inc
hlt
dec
sarl
int
pusha
dec
icebp
shll
mov
call
mov
inc
cmp
pop
in
xchg
cmp
inc
lret
hlt
movsb
cld
push
bound
lahf
push
pop
in
inc
movsl
imul
arpl
push
subb
sub
call
lock
jnp
xchg
data16
xlat
pop
add
test
loopne
add
insb
lods
mov
mov
aam
out
xorl
lock
fsub
push
and
repnz
add
push
popa
pop
lock
aas
xchg
and
iret
or
adc
lock
mov
push
mov
call
add
mov
or
push
sub
adc
xchg
and
jbe
push
lock
loope
mov
test
pop
inc
cwtl
jecxz
pop
jl
addr16
cmpsl
ret
outsb
repz
leave
lock
sub
xchg
pop
pusha
clc
lock
push
push
shlb
int3
nop
cwtl
jl
aam
xor
pop
int
cmpsb
bnd
adc
dec
lret
es
mov
pusha
push
mov
mov
mov
lock
pop
push
mov
xor
adc
pusha
jge
sbb
pop
mov
lock
push
push
insl
hlt
sub
mov
lock
mov
aas
pop
mov
mov
insl
xlat
push
cwtl
add
push
jne
jmp
mov
pop
clc
inc
lea
mov
les
lret
adc
lock
mov
lock
inc
das
push
adc
pop
lock
mov
outsl
push
into
push
sbb
setge
jmp
mov
scas
pusha
inc
push
push
addr16
and
lock
aad
inc
lock
jae
xchg
jg
dec
dec
cmp
xchg
adc
mov
in
fsubr
mov
rclb
mov
xlat
cwtl
int3
aad
sub
xchg
shr
fwait
mov
add
dec
dec
or
sub
push
push
mov
add
loop
xor
enter
loope
jbe
lock
pop
cmp
lcall
test
adc
sarl
mov
sbbb
cmp
fcomip
mov
xchg
pop
jmp
xor
lcall
xor
cmp
negb
lock
jb
add
cld
sbb
pusha
lcall
lret
or
cmp
xchg
cs
lret
xchg
lock
mov
imul
sub
xlat
icebp
scas
jge
adc
jns
in
inc
test
xor
adc
jmp
enter
mov
arpl
aaa
push
nop
mov
lock
dec
push
xchg
addl
outsb
jnp
mov
push
jb
sti
dec
out
cld
adc
inc
and
js
jns
arpl
lret
rorb
and
mov
push
mov
loop
stc
push
fs
sub
call
lock
fwait
cs
xor
inc
lock
or
cwtl
cmp
shll
out
push
push
int3
lock
push
jmp
dec
lock
pop
push
mov
lods
mov
insl
jne
lock
xor
cmp
in
movl
dec
sbb
ljmp
xor
mov
jle
jae
mov
mov
and
mov
push
lret
nop
adcb
movsb
pop
scas
clc
mov
in
mov
aad
andl
sti
lock
ror
jl
fdivrs
lock
adc
lock
jp
mov
jl
or
jne
arpl
adc
mov
dec
shl
pusha
mov
je
lods
cwtl
imul
pop
sub
jmp
je
iret
mov
orb
lock
and
mov
cwtl
lods
and
xlat
mov
movsl
sahf
loop
lds
shrb
xchg
jno
adc
sahf
lock
test
lock
pop
sbb
push
repz
push
mov
lock
mov
movsb
loop
inc
in
pushf
or
enter
mov
xchg
lock
adc
stos
lock
cwtl
sbb
sbb
xor
lock
mov
dec
xchg
in
mov
test
jl
xchg
stos
fcos
add
pop
mov
loop
ja
hlt
jle
out
std
inc
xor
rorl
subl
xor
imul
adc
iret
scas
push
sahf
lcall
lock
std
xor
dec
nop
into
aas
mov
mov
xor
mov
call
sub
test
xlat
fcomps
es
popa
les
movsl
fs
inc
shll
lock
sub
int
pop
xchg
sti
testb
test
push
or
mov
lods
or
lock
loope
adc
mov
ss
jns
dec
out
in
lock
inc
inc
mov
xor
fwait
test
movsb
lock
adc
repz
and
icebp
or
pop
lock
mov
lock
arpl
or
and
dec
imul
aas
outsb
add
push
loop
sub
xor
and
mov
push
mov
sahf
jbe
pop
xchg
ret
cmpsb
mov
push
add
pusha
mov
push
hlt
lods
inc
lahf
mov
dec
ljmp
pop
push
mov
dec
orb
lret
cmp
cvtpi2ps
das
rolb
lcallw
lock
mov
fisttps
adc
xchg
ds
in
mov
lock
leave
pop
or
loope
lret
lock
repnz
adc
fimuls
cmp
in
jbe
add
mov
sarl
cmp
pop
cli
lea
cmp
push
out
xchg
fisubs
mov
ss
pop
out
push
lock
js
mov
pop
lock
addr16
fsubrp
out
or
mov
pop
lret
rcll
movsb
loopne
lock
fstps
icebp
jae
fmull
lock
push
lods
out
lock
mov
mov
xchg
nop
cmp
add
lret
or
or
int
call
or
xor
and
pop
movsb
and
lock
mov
lret
lock
or
xor
xorl
lock
fdivl
push
jecxz
lcall
cmp
fstl
adc
daa
xor
sarl
in
xor
xchg
pop
jno
hlt
clc
dec
xor
mov
xor
movsb
xor
arpl
mov
gs
iret
add
stc
in
pusha
mov
pop
xor
cld
jnp
es
popa
negl
xchg
cvttps2pi
jle
mov
push
outsb
push
jmp
fcomi
jl
aam
adc
push
ss
push
stos
leave
sub
mov
loope
popf
or
dec
popa
add
mull
cwtl
or
xor
pushf
lock
cli
dec
sbb
sub
inc
add
push
test
xchg
in
sbb
mov
sbbb
push
fucomi
jecxz
arpl
lock
adc
sbbb
test
cltd
int3
dec
xchg
notb
adc
iret
nop
pop
sbb
leave
pop
dec
and
lock
dec
xor
pushf
jno
call
ljmp
adc
add
mov
jo
fimull
fsubs
dec
ror
std
xchg
lods
push
in
shl
jle
lock
xor
ret
mov
fmuls
lock
orl
inc
push
add
cmp
add
sub
cmp
add
or
fsubr
lock
pop
mov
mov
divb
lods
adc
fcomi
jb
outsl
xor
sbb
lock
mov
out
cmpsl
je
mov
mov
mov
push
mov
pop
sbb
mov
xlat
xchg
sub
push
cmp
jmp
sub
repnz
rorb
flds
addr16
lock
das
inc
dec
popa
inc
cmp
inc
enter
pop
rorl
repnz
xor
lock
xchg
xor
xchg
push
enter
sbb
aas
outsl
lock
out
mov
dec
aam
adc
inc
sbb
leave
popf
jne
scas
xor
icebp
lock
mov
mov
fsubr
or
lock
xchg
fstp
movsl
dec
jmp
mov
adc
idiv
or
xor
jns
or
adc
and
icebp
lock
adc
mov
push
bound
add
push
push
lods
stc
xor
in
pop
icebp
jno
imul
mov
out
mov
and
incb
sarl
loop
mov
and
test
mov
inc
cmp
cmpsl
xor
lock
lods
fsub
lock
mov
shl
dec
mov
jmp
int3
repz
stc
inc
push
aaa
mov
test
pusha
daa
rcr
adc
lock
test
lock
addl
xchg
fsub
lock
xchg
es
mov
lods
ljmp
inc
rsqrtps
mov
xchg
cs
pop
jle
mov
loop
jnp
in
and
mov
mov
cmpsb
ss
mov
mov
jmp
lock
jbe
lock
push
pusha
jne
cmp
lock
nop
popa
ja
push
lock
popf
push
or
push
sub
lock
jns
jb
pop
jecxz
test
inc
lock
push
cmp
fdivl
pop
fsubrs
dec
rorb
pop
lock
xchg
sub
sahf
into
flds
adc
inc
xor
push
rclb
jmp
inc
lods
cmpsl
in
xchg
fsubs
xchg
or
test
pop
push
cmp
dec
push
xor
shl
or
lock
pusha
popl
aam
and
or
sbb
into
lock
sub
push
aam
in
pop
pop
dec
ret
movsl
pusha
das
inc
mov
and
jle
xchg
pusha
adc
stos
lock
lds
movsb
fisttpll
scas
in
xchg
pop
mov
int3
fdivp
adc
fxch
test
movsl
mov
mov
sub
add
ret
jae
pop
js
imul
xchg
rclb
fs
mov
mov
fbstp
or
pop
div
loope
push
lahf
adcl
ljmp
dec
adc
jbe
adc
shr
cli
inc
jg
cmp
mov
jo
in
xor
lock
cld
std
jge
imul
cmp
aaa
popf
sbb
pop
js
jmp
or
call
mov
stos
rcr
scas
rolb
mov
mov
lds
fwait
std
pop
test
jns
inc
inc
mov
push
adc
hlt
mov
adc
mov
aaa
rclb
mov
sahf
push
push
jo
aam
jl
call
push
dec
and
enter
in
lock
outsl
dec
ljmp
shl
iret
lods
shlb
int3
ss
lods
scas
insl
mov
subb
jmp
and
movsl
std
pop
fs
aaa
push
insl
lock
add
lock
xchg
or
adc
dec
pushf
movsb
outsb
mov
pop
lock
xor
rcl
inc
in
ljmp
inc
scas
lods
out
pop
xchg
sbb
mov
adc
shll
repnz
cmpsb
je
mov
pusha
sub
test
sub
lds
stos
inc
lock
or
not
movsl
and
test
fdivrs
aaa
cmp
sub
sbb
cmp
dec
jnp
mov
or
sub
fiaddl
out
idivl
in
ljmp
push
xor
mov
into
adc
outsb
ljmp
shll
int3
xchg
jge
sub
mov
lods
stc
xor
stos
repz
cmp
call
fs
stos
or
fcmovnb
arpl
jno
mov
mov
outsb
call
cmpsb
sub
push
cmp
push
mov
dec
out
js
dec
lds
in
aad
lods
xchg
outsl
clc
adc
inc
sbb
mov
push
pop
inc
ret
add
stos
lock
lret
stc
xlat
mov
lock
xchg
lock
push
loop
push
ret
incb
scas
push
jb
ja
testl
pushf
test
je
pop
mov
sahf
push
in
xlat
stos
testb
push
push
outsb
cmp
dec
lock
push
icebp
sub
mov
cli
lea
mov
imul
and
adc
or
lods
jp
movsb
ja
xchg
jbe
mov
push
pop
mov
jmp
pop
or
out
lock
jns
iret
cmpsl
cmpsb
aas
cmp
inc
jle
jmp
adc
adc
stc
nop
or
loopne
mov
arpl
push
or
add
out
hlt
es
adc
hlt
cs
ja
out
xchg
nop
jecxz
imul
mov
mov
pop
aad
sbb
mov
xchg
dec
shll
mov
icebp
mov
or
sbb
push
int
mov
into
dec
push
lock
sbb
or
popa
lret
lock
fisubs
adc
mov
sub
jne
repz
cmp
enter
inc
adc
test
mov
aas
inc
dec
adc
inc
adc
es
mov
aaa
and
ret
jns
xchg
inc
imul
ret
sbbl
lock
or
lock
ret
pop
jae
jle
lock
inc
cld
lock
or
inc
cmp
jbe
cmc
loop
and
pusha
pushf
ficomps
out
shr
jbe
lock
pop
sub
scas
leave
adc
and
pop
xor
ss
mov
cmp
and
and
in
ja
mov
lcall
ret
mov
outsb
jg
mov
iret
push
aas
std
cli
test
lock
push
push
dec
rorl
pop
in
test
push
aas
lock
inc
mov
mov
ja
jl
mov
in
lock
xor
int
in
xor
pusha
pop
add
cmp
mov
adc
mov
call
lock
fst
cwtl
loope
pop
test
andl
sbb
mov
mov
lock
dec
lea
lock
inc
cmp
mov
mov
add
in
sti
adc
inc
iret
repz
shrl
dec
xchg
push
dec
lock
lods
or
or
jp
insl
and
mov
ljmp
in
in
ret
lock
dec
nop
scas
add
push
jbe
test
sub
xor
xor
mulb
and
lock
arpl
dec
fld
lock
or
cmc
or
xor
data16
pop
fiaddl
movsl
jmp
xor
icebp
mov
inc
insl
sbb
sub
es
lock
dec
fcomps
out
leave
lock
xchg
pop
ljmp
js
lock
arpl
sbb
push
inc
xor
push
lock
and
in
cmp
lea
test
leave
test
jp
lock
pushl
lods
adc
lock
or
lock
push
jbe
fsts
test
lock
dec
or
lret
sahf
hlt
shlb
dec
and
jb
mov
cmp
mov
push
and
cmpsb
je
test
pop
loope
sahf
inc
add
addl
adc
outsl
xlat
mov
pop
inc
das
inc
lock
sbb
xor
push
sub
hlt
push
mov
xchg
test
cmpsb
test
sbb
sti
bound
sbb
cltd
push
push
inc
lods
stc
clc
ja
jnp
pop
add
fiadds
ret
sbb
sub
jecxz
mov
cli
xor
test
ret
add
push
mov
out
sbb
fbstp
and
mov
cmc
inc
in
lock
mov
adc
daa
js
repz
int3
enter
jb
lahf
or
fwait
ljmp
mov
lcall
jbe
dec
push
insb
and
pop
insb
ss
lahf
imul
int3
sahf
mov
fs
jecxz
push
jbe
lock
pop
xor
xchg
jnp
jmp
lock
insl
mov
lock
cmpsl
xchg
in
test
popf
lock
sahf
dec
ror
mov
adc
mov
lock
push
fwait
dec
sub
lret
pushf
mov
mov
imul
cmpsb
aad
out
test
jb
lahf
xor
sti
mov
jge
stc
dec
xchg
repz
and
xor
int3
call
fcompl
xor
test
cld
sbb
lock
jmp
in
lock
cpuid
adc
add
or
xchg
lods
dec
es
and
push
fcmovne
fidivs
hlt
push
outsb
or
lock
push
cltd
imul
dec
mov
lock
lea
push
inc
push
add
lock
jle
mov
push
xchg
dec
lahf
jb
cmc
or
dec
mov
jge
mov
mov
out
adc
and
ret
imul
std
icebp
push
daa
cld
mov
jg
jns
lock
bound
jmp
adc
pop
test
into
inc
sub
dec
mov
dec
and
jg
add
pop
xor
es
hlt
and
test
lret
sub
scas
loop
pop
insb
inc
ret
mulb
lock
xchg
or
in
sub
dec
insb
lds
pusha
xor
sbb
in
shlb
js
add
inc
or
sbb
sub
rcll
dec
sub
hlt
mov
and
es
xchg
adc
std
add
adc
or
pop
push
mov
imul
push
xchg
ficomps
addb
daa
mov
lock
pop
add
mov
cltd
lock
les
test
jecxz
int
out
repnz
lods
aad
push
xchg
daa
das
jne
in
pop
movsl
xor
and
sub
dec
and
xor
mov
cmp
outsl
hlt
sarb
mov
pop
aam
je
sbb
mov
bound
sbb
and
mov
mov
sub
pop
lock
pushf
and
mov
cmp
xchg
inc
cmp
cmovo
cmpps
push
scas
test
inc
cmp
pop
inc
int
lock
jg
in
dec
mov
call
rclb
sub
test
inc
lock
mov
mov
xchg
lock
xor
adcb
xchg
lods
inc
adc
sbb
jne
inc
dec
push
jl
and
xchg
iret
adc
mov
testb
mov
fdivl
push
add
popl
push
push
lods
cmpsb
mov
pop
jne
fldenv
cmp
and
sub
stc
lock
imul
lods
call
push
lock
fiadds
push
aas
dec
mov
jns
sub
lock
mov
lock
lea
fistpll
dec
scas
fidivrs
pushf
adc
add
dec
inc
hlt
adc
cmp
and
push
pop
outsl
sbb
lods
xor
cmp
aad
inc
mov
repz
icebp
jne
gs
lock
daa
leave
aad
call
cmpsl
ja
mov
shl
shrl
xor
out
push
mov
sub
inc
and
int
mov
adc
ret
dec
es
inc
sub
out
sbb
in
mov
jno
fldt
stos
push
scas
out
inc
mov
sbbb
jbe
mov
clc
cmp
push
jo
push
lock
lock
dec
jmp
lahf
lock
jge
lret
data16
push
mov
mov
popa
imul
orb
sbb
xchg
hlt
bound
sbb
neg
mov
sub
ljmp
repnz
cmp
int3
adc
xor
lret
add
pop
jne
js
sti
pop
ret
adc
mov
xchg
sahf
fcos
xor
cwtl
mov
scas
lock
jns
sub
je
mov
adc
cmp
psubsb
scas
mov
and
out
pop
sbb
dec
loope
push
in
stc
ret
push
jb
push
ss
imul
clc
mov
jne
push
xchg
call
lock
pop
shl
jbe
pop
ljmp
sbb
push
mov
lcall
jnp
cs
repnz
lock
adc
mov
movsb
mov
or
outsl
xor
lock
dec
fistl
clc
jo
inc
pop
cltd
push
pop
out
xor
scas
cmp
jne
lock
and
xchg
dec
and
inc
pop
movsb
dec
fwait
jmp
les
lock
jne
sbb
push
lret
lock
pop
in
in
sbbb
hlt
es
loope
test
xlat
popa
je
push
rcrb
fs
cmpsb
mov
lock
test
sahf
and
xor
mov
vlddqu
adc
push
sbb
cmp
and
js
movzbl
lahf
jp
ret
hlt
test
lock
sub
xor
outsl
mov
push
pop
js
enter
rorl
add
ds
and
dec
sbb
movsl
pop
in
idiv
push
dec
mov
daa
lock
xor
xor
mov
addl
pop
push
or
push
popa
xchg
sub
jo
popa
js
lock
inc
cmp
imul
aaa
and
add
in
decb
lock
inc
leave
scas
cmp
daa
rol
inc
aam
repnz
xchg
gs
mov
mov
repz
mov
popa
adc
pusha
ds
std
push
inc
mov
pushf
sbb
ret
lcall
or
mov
dec
sbb
cmp
xchg
int3
sti
aaa
lock
cmp
lock
mov
in
ss
ficoms
inc
in
fwait
out
mov
shl
mov
ret
ror
xor
cmpsb
int
mov
adc
jno
hlt
inc
daa
pusha
movsl
data16
popf
mov
push
hlt
push
push
loope
scas
fmuls
and
fstpt
push
cmp
lods
sahf
call
xor
test
jl
lock
jp
mov
lock
ljmp
xchg
divb
lock
mov
repnz
mov
and
call
aam
stos
shl
sbb
out
hlt
cmp
ret
add
lods
lock
inc
movsl
and
push
sbb
lock
add
push
xlat
mov
lcall
aam
inc
push
jle
lock
movsl
dec
mov
ss
sub
in
jg
aas
fsubrl
inc
lds
call
adc
add
adc
out
pop
and
aas
xor
push
aas
mov
cltd
mov
idivb
sbb
fidivs
out
cwtl
adc
psadbw
and
divl
and
lock
or
lock
cmp
test
pop
push
inc
sbb
dec
popf
mov
jg
lods
add
lock
push
cvtps2pi
lock
std
lcall
mov
xchg
out
inc
es
cmp
sub
in
mov
jp
ljmp
loope
movsb
pop
stc
push
adc
inc
aaa
jne
adc
inc
mov
int
pop
les
xchg
dec
aaa
jecxz
mov
ja
inc
roll
jns
jge
std
or
jmp
test
adc
ret
cmp
mov
test
xchg
xor
das
mov
ja
arpl
mov
jae
in
xor
add
pop
xor
cwtl
lock
inc
push
divl
dec
lock
scas
sbb
cmpsb
shlb
pop
pop
xchg
aad
sub
out
jo
xchg
test
into
iret
sbb
xchg
or
adc
std
inc
ret
cmpl
fwait
xchg
mov
push
inc
xchg
cmovl
aam
cmpps
popf
insb
lret
call
cmp
cwtl
fdivp
imul
jo
inc
adc
leave
hlt
sbbb
jmp
lock
pop
push
js
test
jmp
mov
xchg
test
std
or
lock
sub
adc
scas
lods
enter
and
imul
std
movsb
xchg
xchg
jne
push
daa
lock
mov
mov
jmp
and
or
pop
inc
std
fbstp
rolb
es
iret
jl
sbb
adc
std
out
sub
in
mov
bnd
stos
mov
mov
lock
pop
andl
gs
stos
insl
xchg
sti
xor
cmp
lock
out
in
jl
adc
rcl
adc
mov
pushf
pusha
jmp
pop
aas
push
data16
int3
out
fstl
lock
scas
sub
sbb
dec
adc
xlat
mov
cmpsl
test
adc
pusha
push
insl
data16
repnz
sbb
dec
or
call
xchg
mov
mov
jle
shll
popf
int3
mov
sbb
mov
mov
outsb
xchg
and
jmp
adc
mov
mov
fisttpl
push
iret
fcomps
cs
lock
xlat
adc
push
cwtl
mov
cwtl
int3
in
sbb
lcall
in
push
cwtl
lock
pop
xor
insl
or
cmc
in
push
jbe
fsts
pop
stc
add
fs
ljmp
xchg
into
xchg
jl
adcl
add
movb
lods
fsubr
cmpsb
sbb
sbb
sub
push
ret
shl
std
shrl
push
dec
mov
aad
lock
mov
fnstcw
and
pop
xor
div
xchg
fbstp
mov
xchg
out
inc
xchg
ljmp
sbb
je
sbb
xchg
lock
add
push
rcrl
push
nop
sub
mov
or
mov
mov
pushf
push
wbinvd
cmpsl
add
or
sub
and
jnp
mov
lock
sbb
lock
lret
push
mov
mov
mov
dec
ret
lock
push
push
cmp
jo
push
ds
jb
das
cmp
fwait
stos
or
mov
enter
insl
or
sar
lock
mov
pushf
lock
dec
out
test
iret
cmp
jnp
adc
aaa
add
or
shll
jbe
pushf
movsb
push
pop
jp
lcall
mov
sbb
lods
xor
adc
inc
jbe
xor
ljmp
fbld
pop
mov
push
out
lock
sahf
and
inc
push
shlb
pop
hlt
adc
fdivl
xor
lock
aaa
test
mov
mov
movsb
test
jae
cmp
ljmp
call
int3
ss
mov
int
lock
push
mov
out
add
test
lods
inc
mov
mov
in
jl
js
inc
in
lock
pop
cltd
xor
pusha
mov
lock
aad
cmc
lock
mov
sub
jae
dec
cltd
lock
fsubl
xchg
shlb
lock
addr16
cltd
mov
cwtl
lock
cmp
insb
faddl
lret
mov
jbe
xchg
add
sbb
repnz
cli
lods
lock
mov
mov
xor
repnz
testl
mov
shrb
fwait
sbb
mov
pop
test
mov
lock
mov
notl
lock
mov
inc
ds
repz
lock
dec
sti
shl
inc
fbld
and
sbb
mov
dec
sti
dec
dec
lock
leave
inc
arpl
mov
push
lock
jle
movsl
lret
add
lock
pop
mov
xor
lock
push
sbb
int3
lock
jmp
loop
mov
mov
mov
add
adc
jmp
pop
xor
jb
xor
ficoml
cmpsb
fldpi
notb
mov
aas
add
je
dec
loop
pop
inc
aam
lods
int3
sbb
push
roll
gs
in
rorb
push
mov
jp
loop
lods
inc
dec
fcom
shll
mov
aad
rorb
jl
stos
shll
mov
repz
sbb
add
gs
mov
lock
xchg
inc
and
pop
mov
pusha
and
xchg
dec
push
jmp
sar
mov
mov
fbstp
icebp
repz
cmp
push
js
jne
lea
pop
popa
lcall
xor
adc
and
notl
aas
jl
cmp
xor
inc
sbb
jg
add
imul
xor
lock
push
loope
into
xor
lock
mov
pop
pushl
mov
insl
and
das
lock
push
or
lock
dec
or
mov
es
in
xor
imul
clc
xlat
out
out
pop
pop
pusha
dec
mov
mov
push
jge
inc
scas
push
enter
mov
insl
add
ja
jmp
cwtl
mov
iret
lock
mov
lock
stc
push
and
jmp
jg
adc
call
push
mov
arpl
outsl
push
mov
les
inc
hlt
hlt
stc
xchg
rclb
shl
xchg
jb
mov
inc
lock
cld
andl
jmp
lock
cmc
sbb
popa
pusha
ficoml
mov
lods
scas
les
popa
mov
add
or
xor
mov
mov
inc
leave
repnz
in
rorl
mov
jne
add
push
jmp
sub
inc
call
or
ds
inc
lock
push
addr16
push
mov
lock
sahf
out
arpl
lock
imul
jno
ret
aas
inc
pop
dec
js
lock
sbb
and
pop
scas
cltd
jl
xor
popa
ss
jp,pn
int
lods
pcmpgtd
test
dec
xchg
jb
sti
lret
xchg
cmp
mov
mov
test
jp
mov
sub
shll
in
cmpsl
push
out
lock
loope
push
fcoml
lock
xchg
mov
sbb
leave
lock
cmpsl
int3
mov
lock
mov
inc
ret
pop
lock
and
lock
or
dec
mov
mov
pop
jl
ss
sbb
aad
int3
lock
ret
mov
test
add
xlat
pop
aaa
sbb
sarb
cmp
sub
sahf
fwait
insl
sti
shlb
cs
jo
inc
int
shl
out
loop
cwtl
popf
push
test
lock
mov
dec
dec
lock
lea
mull
mov
mov
insb
lock
or
and
lock
cmp
sti
popa
aas
xor
movsl
sub
mov
jo
adc
fs
lock
inc
xchg
dec
inc
and
adc
adc
lock
gs
test
std
enter
pop
xor
xchg
and
mov
aas
popf
push
add
fcmovu
dec
repz
inc
dec
add
js
xchg
or
out
lock
jnp
aam
cmp
mov
xor
adc
cmpl
ds
add
sub
dec
sbbb
in
inc
inc
pop
sahf
xor
popf
in
mov
adc
movsb
idivb
xlat
mov
lock
cmpsb
lock
jl
jmp
out
pusha
fstps
mov
repnz
inc
sbb
mov
dec
lock
int3
jns
test
sarb
out
cmpsb
lock
cmc
add
mov
pop
movsl
repz
popw
xor
dec
push
sub
mov
dec
pop
call
xor
lock
popf
pop
add
add
mov
xchg
mov
daa
mov
gs
sub
and
pop
lock
lea
shl
ficompl
jge
das
pop
and
in
sub
jl
mov
out
lock
sub
fwait
js
push
hlt
adc
sub
push
jl
lock
jecxz
jge
mov
adc
or
or
in
popf
es
cld
rclb
stos
mov
lock
mov
daa
adc
cmp
loop
xor
jg
add
fdivl
mov
push
lock
outsl
je
in
jmp
lock
mov
add
ss
shl
pop
jb
test
insl
dec
pop
lock
dec
scas
inc
loope
jno
and
fs
adc
das
jbe
and
jo
mov
mov
adc
insb
xchg
in
mov
and
fnstenv
pop
lock
dec
movsl
mov
sub
dec
or
stos
testl
subb
fcoml
lock
loope
das
and
fdivl
lock
iret
jge
lock
std
pop
xchg
sbb
loop
lea
sbb
mov
out
lock
cmp
jle
iret
dec
daa
adc
jbe
out
pusha
sub
xchg
ficomps
hlt
addl
in
test
adcl
adc
out
xlat
rcrb
testl
mulb
dec
insb
jbe
push
lock
test
xlat
jecxz
jae
bound
jno
dec
push
pop
push
push
aaa
cmp
ja
xor
push
jo
iret
xchg
xor
fcomp
dec
xchg
repnz
xlat
mov
and
cmp
out
mov
pop
out
pop
inc
lock
rorb
add
aaa
cmpsb
lock
mov
inc
and
cld
aaa
push
fcoms
int3
and
mov
mov
loope
pusha
cld
cltd
je
lock
sub
fs
dec
mov
lock
nop
inc
and
std
fdiv
xor
jecxz
mov
xchg
gs
push
lock
jge
inc
movsl
push
outsl
jg
call
adc
lock
xorb
add
lahf
arpl
ret
ret
pop
ds
test
std
mov
and
lock
lods
lock
xchg
insb
sbb
pop
jo
in
push
test
iret
inc
shll
sbb
mov
pop
leave
lds
xchg
lock
dec
mov
addr16
pop
cltd
scas
xchg
arpl
fdivl
subl
jae
in
dec
jo
or
lock
or
xor
mov
inc
adc
ljmp
mov
xor
clc
test
loope
es
pusha
lock
mov
mov
shll
dec
mov
adc
hlt
out
mull
scas
idivb
cmpb
roll
pop
lock
or
dec
inc
add
lock
inc
lock
mov
test
test
dec
jmp
jb
sub
sbb
test
pop
lock
arpl
push
pop
popf
xchg
imul
cs
jne
icebp
in
lds
sbb
lea
push
jl
cld
call
inc
push
pop
lock
jg
pop
lock
scas
lods
cmp
out
outsb
lock
out
out
psrad
sbb
dec
ret
sub
cli
fldenv
mov
rcr
call
pusha
and
pop
outsb
ljmp
out
jnp
xor
jecxz
dec
add
and
es
mov
imul
jno
stc
lahf
rcr
lock
mov
js
mov
mov
or
xchg
iret
enter
xor
add
fsts
and
sar
jo
idiv
dec
adc
mov
xchg
lods
repz
and
pop
fsubs
rolb
gs
andb
loop
jg
add
ficompl
cmp
loope
cmp
aam
stos
xor
and
divb
imul
jnp
xor
lock
inc
mov
mov
push
fimuls
lock
insl
mov
jbe,pn
call
push
lock
outsb
fwait
sbb
adc
int
lock
sbb
gs
pop
aam
out
into
push
test
mov
inc
cmp
sub
pop
or
fcomip
notl
repnz
inc
xchg
mov
lock
cmp
das
sbb
fwait
scas
enter
jecxz
add
bound
sbb
hlt
dec
addl
mov
test
lock
rcl
and
or
loop
out
lock
xchg
iret
insl
xchg
pop
inc
sub
cli
in
adc
ljmp
fsubl
push
jmp
pop
xlat
ret
pop
pop
das
dec
inc
mov
sbbb
inc
les
ret
jnp
or
mov
jg
adc
xor
xor
sbb
inc
lock
sbb
xor
pop
sbbb
mov
push
cmpsb
aad
sti
push
and
ljmp
fstps
das
mov
outsb
in
pop
sahf
aad
fidivs
lock
fbstp
jb
pop
adc
lock
outsb
jmp
lock
add
out
sahf
cmp
sub
xor
lods
lahf
jbe
ljmp
aas
inc
lods
fnstenv
xchg
xor
fadds
aad
pop
mov
mov
and
inc
jmp
sahf
mov
lock
lock
or
fcoml
mov
xchg
dec
hlt
xchg
out
xor
lock
outsl
cmpb
lock
mov
iret
add
sbb
mov
add
inc
and
mov
dec
hlt
xor
js
dec
xor
mov
xor
sti
fsubrl
fisttps
lea
lock
repz
lock
add
out
lock
fists
mov
movsb
add
ss
cmp
cmp
fs
and
jbe
mov
jmp
ret
cmp
jmp
mov
add
aam
shl
std
mov
dec
shlb
add
jne
lock
jns
mov
sbb
clc
fidivrs
and
daa
mov
sarb
cmpsl
and
jne
lock
jmp
xor
lock
mov
rorl
std
lock
les
fmuls
adc
jmp
outsb
fdivp
xor
jle
mov
in
rcrl
mov
mov
push
xorb
repnz
lahf
sub
mov
gs
push
lock
cmpb
inc
xor
fwait
lock
addb
pusha
xor
sbb
pusha
mov
cmpsb
push
mov
imull
cmp
cli
aas
loope
call
xchg
jg
imul
cmp
ss
inc
pop
pusha
ret
mov
jb
add
mov
in
jg
in
sbb
scas
pop
or
idivl
popf
cmc
cmp
lock
mov
scas
mov
lock
and
dec
je
or
test
sub
or
pop
mov
adc
rclb
pop
lock
mov
add
sub
clc
and
dec
repz
and
lods
shrb
out
adc
pop
aam
pop
mov
addr16
push
push
call
lock
daa
test
lock
inc
xlat
dec
cmpsb
inc
lock
inc
aas
xor
je
lock
popa
repz
popf
ss
and
jbe
in
stos
ret
lock
xchg
push
mov
mov
add
lret
shl
out
lock
push
rorl
mov
mov
shlb
mov
lock
idivl
mov
jb
xor
stc
pop
jp
or
mov
dec
shl
in
push
lahf
out
aam
jmp
add
stos
or
pop
movsl
out
push
pop
lock
dec
arpl
jl
xchg
pop
cmpsb
xor
jae
addr16
push
in
flds
push
push
mov
decl
lock
mov
test
test
jmp
lock
jmp
cmpsb
jne
lret
cwtl
sbbl
imul
inc
xchg
scas
adc
adc
cmp
mov
movsl
push
sub
mov
lock
pusha
jae
cwtl
sub
jecxz
aas
push
cmpsl
inc
mov
cmp
in
xchg
add
add
test
scas
inc
mov
lock
jo
mov
mov
out
sub
and
movsb
push
sbb
mov
pop
dec
popa
lock
das
cwtl
scas
dec
push
lock
push
pop
mov
hlt
leave
imul
testb
push
movsl
lds
frstor
mov
ja
lret
loop
orl
or
sub
loope
and
xchg
or
outsl
cmpsb
int3
lock
test
aad
addl
sahf
test
je
add
or
jmp
inc
dec
loop
mov
xor
imul
fcoms
mov
lods
hlt
aas
aad
scas
sub
lock
jecxz
clc
cmpsb
mov
mov
xchg
mov
test
jge
sub
lock
jb
inc
mov
insb
lock
cmp
dec
mov
add
xor
or
lcall
jne
aad
push
xor
test
jle
popf
fs
jb
pop
xor
imul
lock
ret
mov
mov
rorb
test
mov
dec
lock
fmull
movl
push
jae
nop
and
sbb
xorb
jno
inc
mov
ret
loop
inc
xor
push
pop
stos
add
jne
pushf
lock
aaa
jmp
stos
xor
fstpt
jp
sub
dec
cmp
xor
cmc
lock
add
mov
das
mov
lock
add
xor
mov
mov
shlb
aas
leave
mov
in
and
mov
ret
out
lock
push
insb
add
push
lock
inc
mov
popa
sbb
cld
and
pop
lock
pop
inc
pop
add
sbb
in
call
mov
sbb
pop
or
das
fiaddl
push
lock
mov
jnp
cmpsb
add
dec
mov
outsl
dec
mov
mulb
test
add
scas
sahf
mov
repz
roll
shlb
ss
test
mov
mov
or
push
xorb
mov
mov
jle
xchg
pusha
and
jmp
jp
shll
loope
jbe
in
adc
mov
test
lock
jmp
jp
fcoml
jle
adc
or
call
dec
lock
xor
mov
pop
and
pusha
test
out
enter
xor
lock
pop
mov
push
push
jb
cmp
ss
inc
imul
xor
sahf
lock
fwait
mov
and
popa
adc
imul
jmp
adc
imulb
lock
incl
ret
cmpsb
dec
lock
pop
dec
adc
movsb
enter
lret
fsubrs
lea
addr16
sub
shlb
subl
je
addr16
into
ret
lock
adc
sub
dec
mov
jge
fstpt
lret
dec
lock
mov
lcall
pop
mov
pop
test
sti
pop
lock
enter
int3
dec
pop
jle
lds
cmp
xchg
and
sbb
jmp
sbb
add
dec
fdivrp
push
call
mov
lock
outsl
bound
jo
mov
xlat
push
xchg
xchg
orl
out
pop
daa
inc
fs
push
ret
rol
lock
loope
push
jne
dec
outsb
mov
jecxz
and
imul
fs
repz
or
mov
test
data16
push
xor
dec
roll
add
xor
lock
loop
arpl
pop
inc
push
adc
and
cltd
adc
mov
inc
and
adc
jb
neg
mov
int3
aam
loop
out
in
jecxz
jae
cli
enter
cmp
adc
aaa
popf
mov
mov
lock
enter
mov
sbb
mov
add
xchg
das
call
es
push
leave
xchg
sbbb
ljmp
add
int
fs
fdiv
fwait
mov
dec
repz
mov
xchg
fsubs
lds
popa
adc
add
sbb
xorl
inc
lret
jecxz
sti
and
xlat
cwtl
inc
mov
aas
rcll
cmpsb
dec
rcl
add
inc
dec
adc
repnz
daa
cmpsb
xor
addr16
call
lock
dec
rcrl
mov
dec
lock
ret
mov
xlat
das
add
xchg
lock
std
push
cli
loop
in
pop
dec
dec
int3
cmovg
mov
lock
adc
sub
cmp
stos
adc
mov
xor
cmp
lock
ds
or
sahf
lock
pop
rcrb
lock
push
push
push
popf
push
xor
stc
pop
mov
add
inc
adc
or
and
sbb
shlb
lock
mov
mov
jecxz
ljmp
lock
mov
sub
fiadds
xlat
push
inc
fisttpl
dec
ret
lock
mov
xchg
sub
ja
push
fwait
pop
inc
jle
shlb
sub
mov
xchg
pusha
inc
ss
in
pop
mov
inc
add
int3
movsl
hlt
call
mov
mov
xor
sldt
hlt
aas
sbb
mov
flds
daa
scas
pop
test
jmp
lock
or
cmp
mov
cmp
lock
outsl
mov
scas
dec
lock
adcb
sti
es
divl
push
in
inc
lock
add
pop
inc
loope
inc
das
or
ss
jle
inc
nop
call
xor
cwtl
into
pop
dec
hlt
jne
mov
lock
repz
xchg
or
aas
imul
xor
out
jne
fildll
push
lock
xchg
push
flds
adc
inc
sub
mov
shl
enterw
xchg
jmp
inc
pop
mul
mov
push
stc
dec
lret
cmp
mov
push
adc
jo
add
in
sti
es
js
add
sbb
mov
xchg
test
frstor
cli
into
lea
iret
mov
test
jmp
push
push
pushf
lock
imul
add
or
push
and
pusha
dec
xor
mull
sbb
andl
pop
fistps
push
lock
dec
mov
lret
jg
aam
lock
fidivs
sbbb
pushf
popa
and
adc
lock
mov
xchg
lock
dec
push
sbb
add
out
lcall
mov
jmp
push
and
and
dec
mov
dec
sbb
mov
sub
in
fdiv
fs
aaa
in
add
les
mov
pop
xchg
or
movsl
mov
lock
subb
call
cwtl
fcompl
and
inc
call
mov
ljmp
pop
sub
sub
lock
jmp
outsl
incl
cmpsl
or
lock
lds
popf
ret
leave
scas
pop
hlt
xchg
push
lock
scas
in
dec
mov
popa
shrl
call
ja
lock
add
call
lods
cmp
fnstsw
out
lret
pop
adcb
test
jo
jl
arpl
push
mov
mov
pushf
lcall
xchg
lock
test
sbb
mov
cmp
pop
iret
stos
xchg
add
cmp
jge
mov
orb
f2xm1
scas
lret
rclb
cwtl
ds
outsb
aaa
fwait
lock
adc
mov
and
int
or
cmp
jge
test
jmp
add
dec
mov
insb
rcr
sbb
out
fdivl
dec
sbb
and
negl
and
push
lfs
pop
cmpl
rcrl
xor
cli
jb
pop
out
and
shl
dec
insb
inc
sub
adc
sub
stc
sbb
xlat
out
lds
iret
pop
and
fcmovne
xchg
and
icebp
mov
in
mov
orl
lcall
ss
xor
mov
in
add
xor
sub
jnp
mov
jp
popl
in
adc
es
xchg
shl
and
jbe
mov
jae
pushf
pop
push
iret
and
lock
add
sti
test
lock
sub
icebp
movsl
test
dec
pusha
add
cmc
push
les
lock
or
insl
aam
dec
jno
adc
or
hlt
mov
pusha
lock
sub
fimull
sub
cltd
xchg
mov
mov
or
jo
test
pop
cmp
orb
pop
iret
fs
sahf
jo
pop
cwtl
les
ja
cmpsl
add
test
or
dec
inc
push
loop
je
js
xor
sbb
inc
pop
xor
xor
xor
sbb
lods
add
pop
push
xchg
divl
cltd
and
sub
mov
xchg
inc
hlt
cmp
xlat
xor
lock
jmp
fsubs
mov
mov
fcmovnu
mov
fwait
call
addb
cmc
push
nop
lock
nopl
and
xor
jmp
test
xchg
movsl
jge
jne
ss
lock
fadds
add
mov
xor
push
mov
cmpsb
and
in
call
lds
add
add
popa
mov
push
lock
jb
cmpb
fld
test
movsl
lock
les
jl
mov
daa
in
sub
cltd
pusha
adcl
aaa
std
jmp
imul
fdivl
int
mov
lock
sbb
mov
fwait
jmp
repnz
lock
xor
xchg
lock
in
xor
lock
mov
dec
mov
cmp
jl
xchg
xor
lcall
scas
lret
mov
cld
je
mov
arpl
test
mov
jecxz
syscall
repnz
outsb
and
jmp
stos
std
out
mov
mov
or
xchg
lcall
fwait
into
xor
add
add
ja
dec
aad
push
dec
aam
mov
repnz
mov
add
pop
fisttpl
testb
dec
jnp
leave
mov
inc
neg
lock
lds
lock
fadds
scas
repnz
pusha
mov
ljmp
jb
dec
fabs
pop
mov
adc
lock
add
sub
repnz
jmp
mov
test
mov
dec
and
dec
outsl
sub
cmpsb
into
pop
lock
stc
inc
lock
mov
adcb
clc
inc
mov
xor
xchg
lock
inc
jae
add
mov
in
enter
mov
dec
xchg
push
dec
sbbl
lds
pop
insb
test
mov
pop
data16
stc
or
push
lret
movsl
pop
jns
mov
int
rcrl
push
ja
lret
pushf
es
addr16
push
adc
lock
push
dec
dec
or
and
push
lock
pushf
jne
call
icebp
lock
jno
arpl
pop
je
lock
pop
xlat
cmp
inc
inc
insl
mov
lods
out
dec
lret
jmp
jne
shl
mov
pop
inc
and
cmp
in
pop
lea
shrl
outsb
cmpb
pop
fidivrs
fistl
lock
pop
aas
and
inc
mov
pop
mov
mov
in
out
stos
rol
mov
test
mov
lret
and
pop
lock
dec
pop
dec
xchg
lock
fcoml
rcr
arpl
xor
clc
cmc
hlt
in
push
pop
fnstcw
and
fwait
daa
ja
stc
lods
mov
sbbb
push
cmp
fldcw
test
mov
jne
std
jl
sbb
xor
jnp
lock
rolb
fisubrs
out
dec
mov
xchg
pop
or
cmpsb
rcll
lcall
mov
mulb
test
cmp
push
outsl
inc
mov
hlt
std
push
inc
jne
fdivr
cmc
outsl
lock
jmp
pusha
imul
jecxz
xchg
sbb
notb
lock
mov
mov
push
pusha
out
addb
adc
out
cmp
movsb
inc
lock
loope
adc
sbb
fadds
sub
sahf
mov
lock
lods
cmp
in
sti
or
jecxz
aaa
pop
mov
lea
je
lock
lock
add
mov
out
jl
iret
sbb
bound
in
push
aaa
sbb
add
inc
lock
loop
cmpsb
cltd
lock
fstpt
inc
jae
cmp
mov
push
and
inc
inc
test
sub
scas
dec
mov
add
sti
push
push
ss
popa
xchg
pop
insl
dec
enter
mov
jmp
push
jns
or
dec
jge
gs
pop
lock
jle
cmp
popf
jbe
adc
shrl
xchg
pop
mov
lock
cmp
lock
add
stos
popf
movsb
jae
imul
mov
shr
xchg
lods
loop
push
dec
enter
ret
cmpl
cmpsb
movsb
mov
dec
shlb
mov
push
mov
rcll
outsl
cmp
sahf
jge
pop
daa
in
push
mov
lods
int3
push
jbe
lock
adc
ret
cmpsb
lock
das
lock
push
sbb
les
pop
pusha
xchg
enter
fdivp
fisubl
cmp
pop
mov
repnz
shlb
cs
cmc
or
repz
xchg
xchg
add
lock
sub
data16
lock
pushf
enter
jle
lods
xchg
add
mov
jbe
out
cmp
jno
pop
ret
sbb
xchg
fsubrl
ret
adc
pop
gs
nop
cld
lock
divb
push
imul
lock
popf
add
xchg
or
mov
aas
pop
jg
rcr
pop
mov
leave
xchg
div
sub
xchg
sub
jmp
je
addb
inc
int3
add
mov
lock
xor
add
cltd
mov
or
pop
sbb
xchg
hlt
dec
jbe
mov
ljmp
aas
mov
int3
lea
popf
ret
xor
roll
enter
int3
out
fsubrs
lock
pushf
cwtl
push
mov
daa
push
add
jo
xlat
lock
lahf
movsl
ds
and
in
inc
adc
pop
cmp
ja
int3
mov
sub
mov
dec
dec
mov
lock
mov
lock
dec
int
rolb
decl
sti
sbbl
lock
jge
shl
and
arpl
mov
test
cwtl
mov
xchg
add
addr16
pop
in
jne
adc
mov
ja
xchg
cwtl
bound
mov
mov
das
gs
lock
sbb
lock
or
push
dec
mov
divb
sub
scas
out
push
or
mov
negb
ret
shll
inc
lcall
xchg
incl
or
cmp
xchg
bnd
dec
ret
push
mov
repnz
call
xchg
iret
lock
pop
xor
mov
jmp
lock
xchg
jno
hlt
lea
fcoms
cmpsl
imul
and
mov
addr16
jo
adc
leave
data16
lock
std
cmp
lock
push
fdivs
jecxz
push
ja
cwtl
adc
sbb
mov
cmp
lock
arpl
test
lock
stc
fs
mov
outsl
add
fdivr
and
ja
fcomi
test
mov
cwtl
mov
subb
lock
cmc
push
insl
cmp
push
sub
mov
test
mov
out
das
daa
loop
cs
pop
adc
in
arpl
aas
popl
lock
fdivs
fld
mov
pushf
push
sti
lock
pop
addr16
into
lock
xor
shrl
ja
call
shl
mov
jae
imul
adc
jmp
push
mov
mov
jb
popf
fildl
cmpsb
sahf
lock
cmp
or
pop
cmp
mov
das
sbb
xchg
cli
pop
cmp
loope
js
mov
mov
lock
xor
je
lock
pop
imul
jo
stos
add
cs
cmp
mov
lock
rcr
jae
lock
sbb
mov
divl
test
push
lea
hlt
add
ss
xor
rdtsc
aas
and
ds
stos
rcrl
stc
shlb
xlat
push
xor
jb
xchg
inc
dec
adc
aas
dec
notb
mov
pop
clc
lret
mov
mov
cmp
jnp
jle
aad
lock
pop
lret
jg
adc
cmp
mov
mov
inc
mov
push
or
mov
ljmp
out
xlat
in
inc
and
or
xchg
leave
xchg
jl
lods
lock
sbb
mov
in
bnd
lock
mov
gs
pushf
xor
or
aas
mov
mov
xor
xchg
ror
lock
enter
fldenv
xor
sti
mov
popf
pop
add
xor
cmp
imul
pop
std
mov
lock
mov
cmp
movsl
jmp
lods
lock
xor
adc
call
cmp
ret
fcmovnb
loop
lret
negl
lcall
call
push
lock
xlat
dec
mov
lret
pop
je
dec
lret
jp
lock
shrl
lea
rcll
pop
es
aaa
cmpsb
mov
lock
ja
mov
lods
lcall
jns
xlat
mov
lret
fwait
inc
ss
xor
js
jnp
inc
inc
outsb
lock
adcl
xlat
mov
inc
xchg
hlt
mov
shl
dec
jl
cmp
ret
fsubl
mov
lods
div
inc
sub
sub
push
dec
cs
in
jge
ljmp
xchg
lock
inc
int
sbb
fildl
lock
add
dec
adc
xor
push
xchg
mov
inc
je
inc
push
dec
and
fisubrl
lret
jmp
fnstenv
out
pop
mov
pop
sbb
and
or
mov
jo
mov
cwtl
and
jge
or
pop
iret
lods
or
pop
jmp
in
mov
xchg
push
lock
les
lret
push
push
in
jmp
lock
sub
in
dec
cltd
adc
jns
mov
sub
ja
ja
push
out
out
mov
stos
xchg
inc
loop
mov
lock
iret
adc
scas
lods
scas
lock
push
mov
push
fldcw
jle
lock
popa
subb
mov
dec
loop
xchg
inc
xchg
test
mov
push
jnp
jg
add
outsb
mov
xor
lock
test
sti
add
loop
mov
mov
rclb
cmp
jno
ret
jmp
scas
and
sti
pop
mov
lock
inc
fisttps
mov
divl
jno
sub
xchg
scas
jle
sub
mull
sub
inc
inc
jmp
and
popf
push
jns
or
add
in
cltd
xchg
cld
imul
gs
mov
lret
push
cltd
lock
sbb
outsb
lock
aad
adc
and
call
xor
pusha
mov
stc
sarb
daa
lea
adc
inc
in
rcrl
ss
inc
lock
mov
nop
loop
movsl
stos
pop
mov
or
xchg
fnstenv
xchg
test
sbb
pop
cmp
nop
lock
push
mov
cmp
and
xchg
xchg
dec
negl
xchg
shl
lea
shll
mov
xchg
pop
aas
fwait
in
lock
jne
gs
mov
push
shll
das
out
fdiv
fldpi
scas
add
push
cmp
mov
adc
jnp
outsb
pop
icebp
pusha
nop
xchg
xor
cs
and
mov
pop
in
lock
stc
fildll
cwtl
lock
mov
fdivrs
cmpsl
xchg
mov
inc
pop
ds
hlt
mov
lret
imul
loop
xlat
mov
lret
mov
js
sub
xor
lcall
in
or
es
das
dec
fcmovu
lea
nop
pop
sbb
rcrb
lcall
in
xchg
and
push
jmp
lock
test
sbb
lcall
ret
push
jge
mov
fs
lahf
xchg
es
mov
nop
push
mov
imul
lock
cmpl
push
jbe
fstl
cmp
fdiv
or
inc
pusha
outsl
in
and
int3
sarb
jmp
mov
icebp
jnp
adc
cmp
repnz
shll
repz
ja
cmp
sti
fcmovnbe
cmp
sub
je
cmpsb
pop
daa
repz
mov
iret
test
aad
fdiv
outsl
call
das
adc
xor
push
cmp
idivb
je
mov
sbb
mov
add
mov
movsb
lods
lock
bound
and
lock
scas
mov
mov
lret
xchg
test
push
pop
das
push
lock
arpl
mov
push
jno
pop
imul
clc
scas
lock
pusha
mov
nop
xlat
imul
xchg
clc
into
inc
daa
push
or
add
idivb
or
or
sbb
jb
data16
jne
mov
jmp
or
aaa
imul
or
movsb
call
lock
mov
lock
add
and
xchg
xor
mov
leave
fcoml
jns
clc
xor
pushf
lock
in
mov
stos
lcall
inc
mov
shll
test
mov
test
lock
ljmp
cmp
dec
ret
sub
loope
dec
push
fsubr
add
and
mov
mov
mov
jno
jl
ret
push
hlt
stos
enter
mov
mov
lock
or
cmp
push
add
lcall
pmullw
jl
lods
mov
lods
mov
sarb
inc
aas
pop
push
pop
lock
in
xchg
xchg
fwait
insl
mov
mov
lock
sahf
cmp
xor
int3
lock
mov
push
sbb
cld
xchg
lock
hlt
jnp
stos
repnz
lock
dec
sbb
push
mov
pop
scas
sub
outsl
push
fcompl
fbstp
mov
xchg
imul
sbb
test
cs
cmp
lock
std
add
pop
lock
ret
xor
fucomi
pusha
lea
stc
push
mov
mov
incb
cmp
clc
out
push
pusha
push
cmp
pop
sbb
pusha
call
xor
mov
cwtl
fnstenv
sahf
scas
lock
fwait
mov
test
loope
scas
in
mov
lock
out
fadds
dec
lock
outsl
cmpl
movsb
push
leave
nop
testb
sub
add
xlat
out
push
add
lock
or
or
in
das
imul
mov
xchg
out
repz
or
das
fs
mov
mov
cmp
mov
sbb
outsl
cli
jl
repz
sahf
hlt
pusha
sub
in
and
in
push
mov
outsb
add
insl
in
cmc
shlb
cmp
push
jecxz
mov
adc
and
incl
in
pop
dec
in
aaa
add
jp
push
lds
lock
hlt
jge
xor
xlat
pop
and
push
push
lds
lock
lods
ret
inc
popf
or
dec
inc
dec
insb
aaa
lcall
mov
xchg
xchg
add
adc
nop
jmp
lock
ret
shl
in
xchg
pop
loop
dec
lock
cltd
iret
mov
pop
lock
mov
pop
cmp
sarb
cwtl
call
hlt
scas
arpl
out
cwtl
and
mov
repnz
jbe
sub
jge
pop
inc
fmuls
cwtl
jp
je
and
inc
call
sub
xor
pusha
dec
and
pcmpeqw
ret
add
outsl
lock
pop
add
mov
stos
mov
cmp
test
lock
jg
or
lock
pusha
call
jle
in
and
aaa
sub
enter
aad
mov
lods
dec
push
jbe
mov
lock
mov
pushf
lock
pop
adc
push
xchg
cmc
cmp
sub
imul
lock
mov
mov
pusha
movzwl
movsl
stos
iret
pusha
in
into
out
imull
es
lock
cmpsl
lock
lret
xor
lock
push
call
fwait
xchg
push
and
push
jne
inc
pop
lock
or
xchg
lahf
push
jg
xor
add
lock
xlat
popa
ja
enter
xchg
push
faddl
stos
add
cmpsb
lock
frstor
orb
mov
scas
je
xchg
pop
js
ds
cmp
or
and
fs
lock
mov
loope
xor
or
es
inc
mov
popf
ss
fistpl
lock
jl
sub
jge
push
test
ljmp
sbb
outsb
mov
lock
push
jb
xchg
adc
stc
mov
fs
mov
mov
cmpsb
pop
loope
fwait
lods
leave
jmp
sub
and
mov
jge
inc
xorb
lock
mov
xchg
and
bound
mov
inc
push
and
test
push
js
lock
ss
sub
sbb
inc
cmpsb
xlat
jns
lock
cmp
add
ret
adc
pop
or
int
stc
inc
and
stos
lock
ja
outsl
add
cltd
sub
test
insl
out
jnp
lods
or
lock
and
out
popa
orb
jl
lock
mov
inc
leave
in
outsl
cs
xor
mov
shlb
jno
or
out
ja
jg
add
scas
sub
addr16
lock
mov
inc
int3
jl
fnstenv
cmpsb
mov
adc
mov
mov
lds
and
sbb
shrl
aas
pop
insl
mov
and
mov
div
push
es
adc
fdiv
movsl
push
add
mov
add
lock
mov
mov
mov
cmp
ss
sahf
lock
in
mov
inc
rorl
pop
cli
adc
mov
xor
inc
cmp
mov
or
repnz
sti
lcall
jle
add
mov
icebp
sti
add
cltd
mov
f2xm1
loope
inc
add
lock
jle
ficoml
fcoml
pop
daa
mov
add
fwait
aam
push
xchg
lock
iret
insb
xchg
lock
out
sub
xchg
aaa
ljmp
icebp
lock
cmpsl
aas
and
jge
fcomi
and
add
out
lock
stos
pop
mov
dec
sbb
insl
repnz
std
shlb
add
aad
es
mov
arpl
mov
jmp
ret
cmc
cmp
fistps
mov
add
pop
dec
add
lret
inc
lock
sbb
popf
adc
xchg
dec
pop
lock
std
shl
xchg
mov
lock
and
shll
adc
dec
jp
das
dec
adc
lock
insl
cmp
gs
sahf
cmp
adcl
dec
sub
enter
aaa
lock
cmp
js
and
mov
jmp
push
fcomip
mov
dec
lcall
mov
test
xor
push
mov
xchg
lods
stos
in
push
sbb
mov
xor
pop
sbb
dec
mov
pcmpgtd
hlt
mov
xchg
push
inc
mov
cld
shr
jbe
xor
mov
call
shl
push
mov
mov
or
mov
lock
push
or
movsb
dec
fwait
sbb
ljmp
cmp
or
mov
jae
sbb
xor
inc
mov
and
retw
in
and
icebp
add
adc
sti
push
add
cwtl
fdiv
sahf
mov
cmp
mov
xchg
hlt
xchg
add
or
pusha
lock
lret
inc
imul
stc
mov
xor
pop
mov
lock
cmp
lea
adcl
push
pop
pusha
arpl
sbb
and
ljmp
ja
and
fcom
jl
sub
pop
fidivl
int3
adc
lods
inc
mov
fwait
popf
pop
aaa
adc
jmp
mov
dec
addr16
jmp
nop
add
jmp
add
pop
je
bound
fldl
notb
mov
shl
cmpsb
xor
rorb
jo
mov
add
fwait
ja
es
ret
aaa
in
je
mov
jle
dec
pop
in
int3
lock
fcoml
fcmovu
mov
aaa
lock
cwtl
adc
idivl
adc
xor
ret
lock
xchg
or
push
fstl
loop
mov
sti
lock
push
push
lock
outsb
arpl
and
push
popa
gs
pop
in
mov
lods
hlt
aam
test
movsl
stc
lock
scas
push
xor
push
fsubrs
mov
das
lock
cmpw
mov
testl
cmp
and
rcrl
pop
dec
xor
aam
xlat
push
lock
jge
sbb
mov
dec
mov
lea
roll
inc
cmpsl
mov
into
test
ss
iret
and
lock
scas
or
movsl
mov
lock
gs
std
sub
and
cmpsb
insb
movl
arpl
jbe
mov
js
push
stos
jge
lock
add
or
mov
jmp
push
ffreep
lock
add
outsl
pushf
mov
lock
lcall
push
push
mov
pushf
push
gs
dec
pop
mov
cs
cmc
leave
cmp
lret
inc
aad
ret
cwtl
mov
addr16
cld
orl
xor
stc
popf
mov
mov
jo
adc
mov
repz
xorl
and
pop
aad
xchg
das
test
pushf
and
test
call
lock
or
add
test
mov
loopne
inc
clc
lock
dec
fnsave
mov
ljmp
or
lock
addr16
adc
shrb
xchg
mov
xchg
jnp
repnz
int
mov
pop
out
movsb
dec
mov
inc
jne
lock
lcall
mov
mov
std
outsb
ret
je
cmp
inc
loop
mov
lock
xor
push
mov
pop
in
fwait
adc
inc
nop
pop
add
xchg
jp
out
call
mov
and
push
cmp
cmc
lock
movsb
ret
pop
add
int3
mov
mov
outsb
loope
jl
push
lock
imul
pop
xor
ljmp
xlat
lock
stc
mov
sahf
js
movsb
je
xor
jo
call
mov
inc
mov
aam
pop
das
lock
les
pushf
pop
fwait
push
js
mov
addr16
mov
mov
sbb
jp
add
inc
lcall
lret
dec
sub
xor
outsb
cmp
scas
pop
popa
push
enter
dec
cmpsb
iret
loop
jle
lock
sbb
push
insb
and
mov
jp
cltd
shr
out
add
pop
xchg
lahf
fldcw
mov
inc
in
dec
add
lock
adc
js
mov
mov
loop
stc
lock
mov
dec
shrl
add
jle
outsl
out
cmc
cmpsl
adc
out
mov
in
loop
leave
lock
outsb
adc
hlt
nop
movsl
out
push
adc
shrl
inc
xor
jecxz
cmp
inc
cmp
pop
test
push
mov
sbb
imul
jne
mov
shll
sub
xor
mov
and
fwait
dec
pop
cld
jnp
jns
int3
xchg
ljmp
in
fmull
aas
call
imul
les
mov
xchg
and
out
loope
fsub
pop
in
xchg
movb
mov
fisttps
sbb
and
push
in
ss
dec
sbb
stos
jge
out
inc
sub
mov
inc
in
aad
mov
sbb
and
push
mov
clc
imul
sarl
stos
nop
lock
cmc
enter
xchg
and
xchg
outsb
scas
stos
push
ss
loop
cld
jge
jne
repnz
ds
sub
es
or
lock
jmp
pop
sbb
lock
fwait
sahf
daa
add
test
mov
loope
cwtl
mov
lcall
cld
shll
fmulp
dec
scas
ret
int
ja
lock
cmp
sbb
into
fldenv
xor
add
jns
or
movsb
test
mov
cmp
push
sub
jo
dec
sbb
mov
cmp
inc
jns
jmp
stos
shll
data16
int
inc
pop
sub
xchg
mov
hlt
lock
sub
pop
add
lods
lds
ds
dec
lock
cmpsb
in
xor
js
inc
insb
jge
call
or
ret
pop
hlt
rcrb
nop
lcall
idiv
cltd
lods
ljmp
mov
cld
push
fs
loop
jmp
daa
pusha
repz
or
lock
cs
lods
sub
fs
aas
in
mov
inc
xchg
movsl
push
popa
jne
cmc
sbb
dec
push
xchg
jle
es
pushf
and
pop
addr16
ds
stos
aam
movsb
ret
in
mov
add
and
inc
lock
int
faddl
pop
fwait
cmc
div
lcall
mov
sahf
roll
or
dec
jg
lea
pop
push
pop
mov
lock
js
pop
rcrl
dec
cmpsb
ret
and
jl
cmp
lock
stos
andb
jae
imul
push
pop
or
repz
ja
mov
jmp
jnp
mov
xor
dec
pop
sub
ret
cmp
mov
and
mov
enter
divl
int
pop
mov
outsl
lock
pop
pusha
xchg
mov
mov
ficoms
aad
lock
iret
jecxz
insl
mov
mov
push
imul
call
imul
mov
loop
popf
fsubr
adcb
shll
mov
lock
mov
sub
dec
xchg
hlt
pop
jns
movsb
iret
lock
stc
in
gs
mov
in
cmpsb
mov
mov
lret
xchg
dec
fcomip
out
sub
mov
jbe
mov
je
xchg
jle
and
lock
popa
jg
xor
test
movsl
pushf
xchg
pop
fs
out
sti
or
pop
inc
sbb
cli
and
and
mov
push
mov
pusha
inc
mov
arpl
mov
shlb
mov
popf
inc
jge
cwtl
jae
pusha
lock
jno
pop
or
lock
clc
test
cli
and
mov
jmp
cmc
cmpsb
mov
and
cmp
imul
es
clc
inc
add
jl
lock
xchg
pusha
addr16
rcll
stc
popf
or
aad
and
jl
and
stos
mov
inc
mov
dec
pusha
pop
js
cwtl
cmp
mov
addr16
lods
add
stos
dec
lock
icebp
xor
in
or
add
adc
lea
xchg
fs
mov
sub
ds
movmskps
or
sbb
cmp
fwait
and
jmp
shrb
icebp
pop
pop
lds
in
leave
les
sbb
push
xchg
sbb
mov
rcl
and
inc
sub
testb
stos
xor
jl
adc
inc
mov
stc
aaa
add
mov
js
out
outsb
scas
cwtl
fsts
jge
pop
cmp
stos
cltd
ret
or
lock
jge
push
cmpsb
sub
jno
push
fdivrl
add
mov
in
sub
push
sahf
lock
sbb
or
pushf
inc
jne
enter
ret
lods
ss
imul
mov
into
jnp
movsb
push
lock
dec
adc
lock
fs
or
and
mov
mov
pop
std
fldcw
dec
lret
pop
lods
xchg
sub
xchg
es
lock
and
mov
push
mov
pushf
cmp
rorl
sbb
mov
lock
dec
cmpsl
fbstp
mov
add
add
lods
pmaddwd
in
jg
push
test
mov
jp
sbb
cmpsb
sbb
cmp
jb
mov
cli
xchg
fwait
test
lock
iret
inc
int3
pop
xchg
adc
push
dec
cmp
jbe
sti
js
sbb
lock
push
lock
fwait
and
fnsave
iret
mov
sarb
repnz
mov
lock
movsl
pop
mov
loope
push
gs
les
js
push
jge
xchg
lock
std
pop
cli
outsb
in
icebp
fmul
pop
stos
dec
lock
fidivl
shr
lea
adc
mov
add
adc
sub
ljmp
xchg
cmc
leave
insl
int3
sbb
popa
hlt
cmc
sarl
insl
mov
inc
xchg
pop
shlb
cwtl
mov
adc
movsb
bound
mov
leave
pop
ret
rcrb
hlt
mov
jp
mov
add
mov
mov
jmp
mov
or
mov
cmp
xchg
ljmp
pop
call
push
lock
add
pushf
sub
dec
push
orl
fwait
xchg
xor
pushf
or
pop
mov
adc
lcall
es
lods
scas
xchg
fcmovne
inc
loopne
mov
fwait
jl
fisttpll
lock
mov
int3
and
jmp
or
inc
mov
leave
dec
rcrl
sub
mov
dec
out
cmpsb
dec
lock
push
aam
jae
pop
xor
push
jge
data16
pop
ljmp
mov
lods
or
ja
lock
fwait
adc
ss
out
inc
lock
pushf
movsl
movsb
mov
fcoms
xor
sti
or
arpl
mov
out
lock
mov
and
ficompl
orl
pop
sub
fwait
add
shl
out
stc
pop
mov
lock
aam
push
and
int3
aas
out
lods
add
rcr
insb
cmpsl
mov
mov
in
mov
lock
lcall
xor
xchg
mov
push
jmp
int3
jb
add
and
xchg
add
shlb
push
call
fiaddl
lock
aam
dec
scas
iret
mov
xchg
sbb
imul
outsl
test
mov
xchg
hlt
mov
lock
loop
andb
mov
push
aas
cmp
dec
inc
ds
sub
mov
int3
inc
sbb
pop
movsb
loopne
pop
fldl
lock
mov
sti
cmpsb
jle
decl
pop
pop
jge
aaa
pop
mov
clc
imul
xchg
pusha
sti
push
hlt
xchg
push
push
outsb
lock
or
jg
mov
lock
jle
fiadds
jo
xchg
das
adc
pop
lock
jno
mov
lock
adc
jmp
sbb
je
test
sti
push
enter
fstps
mov
bound
dec
insl
lock
call
aam
add
lcall
hlt
xor
cld
pop
push
shr
clc
cmpsb
daa
adc
and
les
arpl
repz
xor
jne
push
jo
add
jae
int
jbe
xor
repz
cld
lock
repnz
xor
sbb
pop
ja
xlat
les
out
es
jmp
leave
ss
rcll
dec
sbb
dec
int3
mov
dec
cmp
push
mov
sub
sbb
inc
das
xlat
stc
jmp
lock
dec
push
ds
sahf
lods
fbstp
int3
movsb
clc
xchg
leave
push
int
ja
decl
lock
jmp
in
outsb
mov
lock
imul
adc
lea
push
lods
push
cmpsb
mov
and
mov
les
mov
jmp
lods
ds
aaa
mov
lock
xchg
pop
cmpsl
adc
add
pop
adc
scas
push
lock
bound
hlt
xchg
pop
lock
jmp
sub
aaa
mov
pop
outsb
lahf
xchg
xor
cmpsb
dec
mov
sub
and
mov
mov
aas
orl
hlt
pop
mov
xor
pusha
int3
pop
cwtl
lock
inc
lret
or
in
dec
lock
xchg
cmpl
xchg
ljmp
cltd
iret
popf
sbb
je
int
cmc
jl
sub
test
lock
push
lock
ss
into
lcall
test
add
jg
xchg
xchg
ljmp
sahf
ret
sub
jne
imul
fdiv
add
cmp
mov
cmpsb
cmpsl
xor
mov
push
mov
and
lock
aad
pop
out
in
mov
xchg
xchg
lock
dec
mov
sub
jmp
nop
dec
jno
jg
insl
mov
insb
jmp
fstps
lret
mov
lock
aaa
lods
pushf
mov
lahf
push
lock
or
popf
ss
imul
rclb
fwait
pusha
ret
fcoml
jb
loop
lea
and
lock
sub
add
mov
lcall
xor
or
lock
pop
mov
sahf
push
movsb
movnti
sbb
lock
mov
fnsave
rcrb
fists
imul
inc
push
rorl
icebp
lea
mov
xor
rorb
sbb
lods
and
lock
mov
sub
scas
cmc
clc
out
nop
pop
lock
mov
mov
adc
or
lahf
jmp
mov
mov
imul
jo
mov
and
pop
fsubrs
int
fwait
cs
lock
sbb
or
lock
pusha
inc
shrb
js
lock
xchg
xchg
mov
addb
nop
lods
outsb
fucom
inc
cmpsb
cmp
cmp
fwait
lock
in
inc
into
sbb
ret
and
adc
xor
xchg
sti
lock
ds
popa
sarl
jle
sub
repnz
xchg
xchg
ljmp
sub
lret
fs
arpl
stos
push
xchg
and
push
insl
movsl
xchg
call
mov
xorb
gs
arpl
out
scas
push
push
mov
loope
push
add
pusha
sub
ja
jg
and
jmp
cwtl
pop
leave
fs
mov
int3
dec
lret
mov
mov
aas
cmp
inc
fstl
add
lock
aas
sbb
lock
jmp
add
daa
rol
test
jecxz
inc
mov
inc
std
xor
mov
mov
outsl
mov
je
int3
dec
adc
lock
adc
repz
jg
loop
out
xchg
xchg
sbb
aam
lret
cltd
lock
lahf
adc
push
outsb
cmpl
dec
dec
lock
mov
cmpsb
push
push
adc
dec
mov
clc
cld
inc
lock
out
adc
mov
sbb
lock
subb
add
dec
push
pop
push
adc
sarb
mov
xchg
insl
outsb
subl
int
lock
fsubr
xlat
data16
jb
test
bound
lcall
ss
lock
fs
and
mov
jmp
cltd
bound
test
jmp
pop
push
and
fistps
rclb
dec
fs
mov
insl
out
inc
jg
and
adc
lock
add
and
fildl
cmpsl
stos
push
mov
jo
and
leave
mov
add
mov
call
fwait
int
mov
loop
clc
enter
push
fisubrl
push
mov
jnp
adc
fucomi
outsb
mov
lock
pop
add
push
stc
inc
rclb
daa
lock
mov
inc
lock
cmpsb
xchg
dec
arpl
iret
and
jp
push
mov
and
xor
nop
pop
daa
mov
lock
movsl
lds
fwait
ljmp
or
test
inc
jp
pusha
daa
mov
inc
add
xchg
and
adc
lock
sarl
push
push
push
das
sub
je
mov
es
dec
rcrb
and
std
mov
lods
jae
inc
imul
fisubrs
lock
js
jmp
shll
sub
lock
addr16
es
pusha
daa
push
jmp
push
repz
lock
sbb
inc
arpl
jg
sbb
shlb
hlt
lock
test
push
loope
nop
pop
or
inc
dec
adc
xchg
mov
ret
adc
jae
inc
sub
lock
inc
jb
inc
ret
insb
jl
call
dec
dec
lock
add
cmp
sbb
ss
or
sbb
mov
cs
cmp
out
fcomi
jae
shll
jne
aas
pushw
in
clc
mov
or
and
pusha
lock
pushf
pop
inc
xchg
ss
lock
mov
cmp
ftst
dec
stos
icebp
mov
mov
mov
cwtl
xor
das
mov
jns
lock
stos
inc
arpl
add
or
jne
xor
pop
lcall
lock
sub
lock
pop
js
outsb
lock
fnstenv
xor
decl
add
out
mov
and
out
sbb
lahf
ljmp
dec
in
xchg
and
xor
jno
push
adc
and
and
xor
pop
add
scas
das
mov
add
add
icebp
mov
icebp
ja
mov
jb
add
shll
clc
jae
xor
pop
push
call
call
xor
adc
hlt
sub
icebp
mov
inc
loopne
fbstp
pusha
jmp
xchg
std
pop
loope
jl
icebp
arpl
negl
adc
out
icebp
imul
cmpsl
popf
mov
das
fnstenv
cmc
push
mov
icebp
mov
shlb
mov
fmul
xor
fsubrl
mull
loop
divb
hlt
sysenter
mov
fsubrl
mov
add
and
faddl
or
xchg
addr16
mov
xchg
rolb
xor
push
call
sbb
ret
rolb
add
call
pop
mov
aaa
add
xor
push
adc
adc
fs
inc
mov
mov
push
adc
repz
loop
inc
add
shr
cmp
xor
mov
inc
loopne
and
repnz
das
add
cmc
adc
pop
jp
add
or
mov
sbb
out
jns
adc
add
ds
mov
sbbl
lret
xchg
shl
insb
pusha
ret
lods
or
push
mov
adc
add
xor
stc
or
or
ret
lods
cmpl
jae
sub
push
add
xchg
adc
insb
das
adc
push
lcall
cmpsl
mov
add
scas
pop
roll
out
hlt
fbstp
and
icebp
push
test
add
icebp
lock
stos
push
inc
jno
cmp
inc
xor
adc
xor
add
ds
dec
add
cmp
or
add
popf
je
ret
cld
out
sti
bound
mov
mov
mov
mov
mov
addb
add
js
pusha
inc
jno
in
cmpsb
jbe
sub
scas
mov
std
fnstenv
xor
into
or
outsb
mov
cs
in
std
lods
dec
in
je
pop
push
js
pop
sub
cltd
lahf
imul
outsb
mov
pusha
adc
push
paddd
adc
mov
leave
pusha
hlt
daa
les
inc
test
xchg
test
and
xchg
add
adc
jno
addr16
cmp
repnz
repnz
pusha
lods
adc
add
dec
add
mov
adc
comiss
mov
jbe
adc
loope
hlt
and
fnstenv
imul
sub
jae
sub
ret
imul
or
das
inc
rolb
push
jnp
cli
add
and
pushf
into
pop
shll
add
stos
sbb
adc
xchg
das
sub
adc
bound
popf
fbstp
addb
jne
stos
inc
mov
cmp
pushf
movsb
jl
push
pusha
out
sar
insb
cmpsb
xor
xor
and
leave
pusha
inc
jno
mov
mov
pusha
cltd
push
and
mov
adc
jno
mov
je
xor
adc
in
adc
cld
cmp
and
jg
sbbl
out
lea
fdivrs
gs
out
shll
and
adc
aam
and
push
cmp
xchg
mov
in
add
mov
add
cld
push
and
pusha
lock
xor
clc
stc
cli
jno
and
add
or
and
invd
mov
push
in
mov
gs
lock
jl
sbb
cmp
pop
popa
insl
jge
lock
dec
pop
outsb
jle
mov
cs
xchg
mov
sbbl
jl
sbb
gs
inc
or
gs
mov
dec
faddl
sbb
cld
inc
adc
gs
sbb
adc
adc
push
cmpsl
sbb
pop
pop
daa
aas
xchg
pop
mov
add
sub
push
add
lock
adc
std
xor
jmp
adc
jno
or
xchg
lock
clc
add
push
addl
add
or
jbe
cmpsl
sbb
hlt
inc
fsubs
data16
cmp
jno
in
jns
sub
jo
lods
jge
sahf
lock
stos
scas
inc
rol
lock
push
outsb
push
fdivs
and
cltd
sbb
jge
push
into
cld
mov
jo
lock
sar
push
shlb
imul
mov
cs
lock
imul
outsl
inc
fistpll
lock
in
mov
and
lret
pusha
das
leave
in
or
daa
int
pop
fnstsw
dec
loope
xor
xor
insb
push
mov
test
adc
mov
lock
cmp
push
xchg
xlat
out
call
movsb
lock
lea
dec
loope
stos
setg
adc
mov
push
lock
rcrb
sbbb
and
mov
outsl
mov
bnd
mov
xchg
gs
fidivrl
fistl
mov
aas
lock
jae
pop
insl
dec
popf
jge
mov
sbb
lahf
xor
adc
lock
xchg
push
lcall
call
and
xor
sub
inc
xchg
xchg
addr16
xchg
jne
jp
js
jl
callw
sbbb
or
mull
add
inc
lds
fdivp
add
or
lahf
sub
mov
loop
rcrl
call
jp
nop
fucom
jle
jmp
adc
inc
xor
push
nop
in
out
or
push
jecxz
mov
push
mov
cmpsb
lods
mov
lds
movsb
dec
pop
iret
lock
test
mov
cmc
inc
in
xchg
xchg
pop
inc
xchg
shl
lret
out
lods
mov
cmc
lock
test
xchg
and
or
fdivrs
cwtl
sub
sub
adc
adc
insb
jno
add
aad
push
pop
jno
cmp
or
xorl
inc
adc
pop
push
cmc
out
or
test
dec
dec
sbb
lods
xor
pusha
add
in
jbe
or
pop
ret
xor
orl
cmpsl
test
rcrb
fcomp
fsubl
push
cmp
adc
mov
shrb
push
repnz
adc
inc
scas
int3
pop
outsl
xchg
jecxz
pop
pop
sub
and
jne
add
repnz
xor
imul
mov
sbb
cmp
inc
mov
push
in
inc
pusha
adc
pop
sub
xchg
cmc
add
shrl
add
imul
sbb
lds
pop
push
das
insb
sub
sub
test
or
lret
iret
scas
icebp
outsb
cmpsb
sbb
inc
popa
jl
push
xchg
imul
insl
inc
int
push
push
sub
sahf
sub
insl
movsb
mov
cmc
aaa
mov
sar
pop
stc
xchg
xor
sbb
inc
fwait
subl
out
mov
mov
or
jmp
in
xlat
cmc
push
adc
fwait
je
xchg
sbb
adc
sbb
test
and
dec
pop
fst
jns
pop
xchg
add
addr16
into
jecxz
pop
cmp
fists
hlt
push
adc
les
sub
in
icebp
xchg
stos
fcoml
push
ljmp
mov
call
jg
cli
push
icebp
sbb
xchg
or
jecxz
icebp
add
pop
js
icebp
and
icebp
aam
jo
cmpsb
cmp
loope
icebp
out
mov
cli
cld
icebp
inc
out
shr
push
mov
loope
out
push
loop
inc
les
jb
testb
shr
icebp
hlt
xor
call
loop
shlb
sub
xor
mov
cld
cli
insb
loope
sbb
daa
addr16
call
mov
jmp
pushf
sub
push
or
push
cs
imul
icebp
and
enter
pop
setae
test
add
pop
inc
jl
jns
sahf
jns
pop
fiaddl
ss
add
and
imull
cmp
pushf
lea
xchg
pop
stos
std
and
jg
xchg
lods
jno
ss
cmp
stc
je
pop
icebp
xchg
jnp
enter
enter
dec
jno
fcoml
inc
pusha
ljmp
push
inc
xor
bound
dec
test
xchg
movsb
mov
jns
mov
js
push
dec
out
fildll
shll
xor
add
xor
into
addl
pop
sub
orl
mov
rcl
es
lock
inc
add
in
cli
and
icebp
xor
add
mov
adc
adc
dec
xchg
fsubrs
stc
sti
and
outsl
xlat
dec
jnp
mov
repnz
push
mov
dec
movl
dec
mov
mov
sbb
repz
cmp
mov
leave
in
adc
xor
xorl
pushf
ljmp
push
addl
add
shlb
push
jecxz
jl
outsl
out
cmp
and
sub
cmp
jmp
outsl
mov
push
sbb
sti
add
and
pop
xor
jecxz
insl
inc
mov
jns
shll
jle
adc
jmp
insl
xor
jge
mov
cmc
inc
mov
lea
in
addr16
scas
xor
cmp
and
sub
jo
outsl
mov
ja
imul
or
jbe
andl
jl
jno
xor
push
lods
pop
mov
xchg
and
insl
insb
fsubr
xor
cmc
aas
pop
insb
xchg
orl
pop
icebp
outsl
cmp
and
xorl
imulb
jg
xor
outsl
cmp
mov
cmpsl
sub
pop
outsl
sahf
jp
test
pop
out
mov
add
scas
icebp
xor
xor
adc
xor
inc
shll
push
call
jge
iret
daa
clc
call
das
ja
jmp
hlt
xor
je
std
mulb
enter
jno
in
sub
out
shl
insl
stc
call
cs
in
outsl
lods
sub
xor
jmp
shll
hlt
jne
ss
test
sub
mov
insl
imulb
ss
add
imul
pop
jbe
icebp
scas
jle
inc
push
ss
repz
lret
outsb
jecxz
out
ljmp
sbb
mov
jb
les
push
in
xchg
lods
xor
int3
xor
ljmp
mov
xchg
or
push
inc
adc
xor
icebp
ficompl
mov
and
dec
dec
loope
lahf
stc
inc
arpl
bound
xor
adc
sbb
and
mov
jecxz
icebp
xor
sub
push
mov
dec
mov
sbb
dec
push
xchg
fimull
mov
add
scas
sti
insl
mov
mov
loope
or
xor
add
sbb
lea
jns
into
pusha
repnz
jmp
inc
loopne
push
push
jb
jo
mov
xchg
iret
fisttps
adc
xor
inc
inc
aaa
jbe
or
sub
sub
call
push
mov
ss
xor
das
fidivrs
add
push
inc
sub
lahf
adc
and
test
jecxz
aas
adc
loopne
and
test
sub
jns
pusha
xchg
jg
jno
lods
sbb
inc
ja
or
pusha
andl
inc
xorl
sub
push
pop
scas
outsl
clc
jg
out
dec
scas
inc
mov
ss
add
pop
iret
mov
loop
or
adc
lods
in
mov
sub
rcr
xor
cs
push
and
cs
jno
sub
or
cmc
aas
fisubrl
iret
adc
inc
faddl
xchg
adc
add
xorb
mov
stos
inc
repnz
mov
jle
das
loopne
push
daa
jb
mov
in
sbb
xor
inc
add
push
roll
jno
xor
xorl
add
aad
call
jge
out
dec
test
inc
subl
arpl
fs
dec
inc
sub
jg
xorl
nop
js
inc
xor
lods
xor
add
repnz
and
ja
outsb
jae
mov
mov
or
repnz
lods
mov
fadds
jle
in
inc
aaa
repz
xchg
mov
subl
jae
add
mov
mov
mov
out
je
xchg
ja
loopne,pn
loop
adc
outsl
xchg
test
repnz
repz
dec
inc
push
insb
dec
mov
pop
je
aam
insl
je
icebp
fcoms
inc
sub
scas
mov
xchg
int
or
insb
iret
shrb
sub
sub
leave
push
jno
mov
pop
popa
lods
mov
adc
out
outsb
loopne
cs
sbbb
bound
outsb
sbb
push
cmp
mull
mov
push
xor
scas
mov
xor
out
cmpsl
jp
mov
bound
outsl
pop
mov
xor
das
pop
scas
std
adc
decl
adc
push
popa
xchg
jl
inc
je
insb
mov
insl
jns
js
or
repz
enter
jno
out
mulb
repz
jecxz
inc
cwtl
mov
stc
mov
test
shl
adc
xor
push
xor
mov
pop
lods
jo
popa
jg
inc
stos
xor
mov
and
mov
shrb
mov
imul
outsb
adc
icebp
push
add
hlt
and
mov
aaa
rorb
sub
inc
scas
cs
mov
adc
add
enter
fcompl
shl
sub
jb
out
mov
cmp
lcall
adc
mov
in
pushl
out
push
xchg
packsswb
stos
mov
iret
lea
push
ss
xchg
xor
fidivl
xchg
hlt
das
pop
xor
pop
pop
into
adc
nop/reserved
cmp
mov
subb
jmp
xor
scas
add
rorl
sbb
into
xchg
adc
lods
aad
adc
fs
lea
adc
lcall
scas
in
xchg
and
loopne
mov
mov
adc
sub
sub
and
inc
mov
dec
je
jbe
cmp
nop
test
loopne
mov
ljmp
loop
imul
mov
out
and
jb
and
lods
mov
mov
xorl
imul
mov
test
add
sarb
outsl
mov
outsb
and
ja
sub
xor
outsl
inc
mov
jno
push
xchg
add
xor
outsl
jae
and
adc
jecxz
repz
sub
icebp
inc
and
lahf
outsl
jne
icebp
adc
xchg
add
xor
outsl
jae
and
sti
lods
int
and
scas
jl
adc
shll
jb
pop
sub
xlat
xor
les
insl
jnp
loope
sub
into
push
mov
adc
lods
xchg
jne
add
stos
jmp
adc
fprem1
repz
xchg
ret
xor
cmpsb
icebp
adc
jbe
jne
sbb
imul
jmp
mov
adc
xchg
ljmp
hlt
loope
inc
xchg
inc
xor
fdivp
xor
imul
icebp
and
cmc
push
jbe
adc
and
mov
xchg
sarb
icebp
adcl
lods
iret
mov
addl
push
dec
repnz
add
inc
aaa
subl
jno
icebp
lods
insb
mul
mov
ljmp
ret
sub
mov
xor
aaa
test
add
into
xor
push
loopne
push
sub
xor
mov
sub
dec
hlt
mov
das
fidivl
xor
mov
lods
pop
pushl
jno
push
mov
sub
dec
inc
mov
scas
fnstenv
cvttps2pi
add
lret
das
cmp
rcrl
js
jmp
inc
push
mov
adc
mov
sbb
insb
fadds
jb
mov
rol
cmpsb
hlt
mov
mov
or
repnz
sbb
mov
jae
mov
sahf
sbb
add
ljmp
xchg
jbe
mov
popa
xchg
mov
jp
xor
xor
sub
mov
dec
aam
mov
add
jne
dec
add
mov
nop
cmp
xor
sbb
lods
sub
subl
cs
stos
jmp
sub
out
loopne
dec
cmp
bound
sub
and
mov
leave
loop
dec
mov
jmp
mov
xor
sub
into
jg
mov
add
je
xor
stos
inc
adc
dec
test
mov
jno
adc
cmp
push
sub
jb
push
ja
push
test
pop
adc
xor
ja
and
outsl
dec
shlb
out
and
loopne
scas
push
or
ljmp
inc
adc
sarb
mov
cmp
sub
mov
mov
mov
divl
test
add
pusha
mov
mov
mov
push
sub
mov
lods
push
out
mov
repz
jnp
dec
outsb
pop
dec
add
testl
leave
xchg
fnsave
outsb
jecxz
pop
outsl
out
repz
push
hlt
aaa
push
push
sahf
and
adcb
push
sub
scas
xlat
insb
dec
mov
std
pop
push
and
pop
mov
jmp
and
xchg
aas
mov
mov
shrb
cmpsl
int
and
add
fldcw
xor
int3
push
mov
jecxz
or
pop
lock
jl
out
xchg
pop
popa
in
and
mov
sub
popa
in
xor
sub
dec
scas
call
add
sub
jae
and
js
push
push
push
repz
xchg
xor
mov
shrb
jae
sub
jns
clc
pop
add
and
or
ret
cmpsl
sbb
ljmp
jp
pop
stos
sbb
push
mov
inc
inc
testb
pop
outsl
jmp
notl
xor
mov
jo
lahf
scas
or
imul
and
adc
adc
pop
fnstsw
mov
jo
or
fisttps
cmp
jns
jae
aaa
je
into
and
outsl
andl
into
lods
mov
inc
test
mov
push
cmpsb
repnz
ljmp
jg
stos
dec
mov
mov
jp
iret
lcall
xor
test
lods
out
xor
add
imul
lahf
xor
fcoms
mov
mov
pushf
xor
xor
sarb
add
aas
sub
shrb
mov
lahf
lods
test
popa
repnz
pop
icebp
mov
push
arpl
push
das
jb
sub
push
and
xchg
das
insl
push
andl
fcoms
jecxz
jno
fsubrl
jne
cmp
inc
into
jne
or
test
sub
shll
icebp
out
or
mov
mov
insl
pop
scas
sub
out
ds
xchg
mov
iret
xchg
popa
fidivrl
out
pusha
jno
test
mov
sub
pusha
jno
xor
shrl
aad
lods
gs
xchg
push
sub
xor
inc
pop
icebp
test
jns
pushl
sub
movsl
xchg
jmp
rcrb
jp
shll
or
rcrl
cmc
popf
scas
fsubrl
inc
cmp
adc
imul
pusha
out
outsl
loop
xor
icebp
les
popf
fnstenv
pop
dec
hlt
jae
aaa
adc
xor
lcall
mov
popa
fdivs
pop
fbstp
xchg
cmpsl
sbb
or
cmp
push
cmp
and
mov
pop
add
icebp
push
mov
xor
lods
ficoms
adc
ljmp
jle
mov
popf
subb
sbb
sahf
inc
repnz
dec
mov
xor
pop
mov
pop
mov
add
jle
addr16
pop
das
jmp
pushf
adc
dec
bound
stos
dec
repnz
xchg
pop
fisubrl
mov
push
loope
and
shrl
push
es
mov
dec
jb
dec
cs
popa
or
push
sbb
in
mov
lods
push
in
cwtl
lods
bound
sub
xorl
sahf
adc
ja
insl
sbb
outsb
das
fimull
insl
scas
xchg
xor
add
xor
shl
movsl
sahf
adc
add
xor
sbb
sbb
and
test
fdivl
xchg
cli
and
subl
lret
inc
push
cmp
sub
popa
test
fildl
idivl
add
xor
pushf
test
add
add
outsb
jl
xor
adc
outsl
cmp
adc
add
xchg
cmp
outsb
xor
out
xor
lret
mov
jmp
sub
bnd
shlb
add
in
dec
xor
rorl
adc
ret
mov
cwtl
cmpsl
mov
in
mov
jmp
push
and
outsb
adc
imul
cmp
ficomps
pop
repnz
fwait
mov
and
push
mov
push
insb
fcomi
push
add
mov
sub
shl
insl
or
jbe
cwtl
xchg
inc
ss
dec
loopne
imul
mov
sub
mov
cmp
cmp
or
add
aad
jmp
lea
sub
add
sbbb
fiadds
ss
cmp
jnp
fwait
push
jecxz
mov
sti
xchg
ljmp
sub
inc
rol
adc
je
leave
mov
dec
pop
xor
bound
or
mov
mov
sub
or
jge
cmp
jne
in
aaa
imul
test
push
movsl
or
adc
dec
mov
mov
xchg
cmc
shlb
dec
aaa
movsl
lret
cs
scas
mov
shr
sub
sub
mov
push
lods
xor
repz
push
cmc
push
xor
mov
and
icebp
mov
orb
test
sub
call
xor
adc
scas
xchg
push
mov
lods
insl
mov
scas
cld
mov
mov
push
add
dec
or
cld
cmp
dec
xor
add
mov
lods
lea
adc
xchg
cs
adc
dec
hlt
xor
sub
cltd
mov
fidivrs
or
mov
mov
ja
mov
or
mov
mov
or
daa
pop
mov
out
mov
rcrl
mov
aad
xchg
add
adc
sti
jb
mov
xor
ss
mov
popf
xor
sbb
push
fisubl
movsl
or
pop
repnz
jmp
data16
les
adc
jno
in
push
xor
adc
or
mov
push
xor
dec
cs
mov
jp
scas
cwtl
leave
mov
into
bound
test
test
les
push
dec
jg
scas
ja
adc
pop
lods
mov
lods
flds
shlb
inc
pop
inc
lret
push
pop
int
mov
in
push
cmpsb
mov
xor
popa
push
xchg
ljmp
mov
adc
push
shrl
jne
jns
scas
jns
dec
das
jmp
lret
cwtl
xchg
adc
adcb
xchg
aas
dec
mov
sbb
push
je
sub
cmp
sub
and
sub
pop
je
cmp
push
loope
dec
icebp
outsl
pop
stos
sub
int3
pop
sub
push
fldcw
sub
mov
scas
rcr
xor
movsl
leave
roll
lret
jecxz
in
and
xchg
std
jmp
aam
icebp
std
insl
fs
sub
mov
call
xor
dec
outsb
add
mov
adc
and
icebp
daa
xor
add
outsb
es
add
fs
adc
lahf
stos
sbb
push
and
sbb
fidivl
add
insl
or
pop
insl
popf
cli
nop
shr
pop
add
outsb
popf
out
or
mov
cli
rcr
xchg
jl
xchg
xchg
popa
add
stos
popf
lods
sbb
fcomip
xchg
jb
push
in
adcl
mov
xor
xor
mov
xor
xor
xchg
xchg
sub
cltd
pop
inc
or
jecxz
xor
out
enter
xor
lods
mov
movsl
subl
std
testb
popf
adc
pop
inc
rorb
mov
and
add
sub
push
dec
xor
mov
mov
jl
test
pop
mov
push
cmp
insb
dec
pop
cmp
adc
sub
sub
insb
outsb
rorb
jae
shrb
sub
dec
test
mov
jmp
pop
enter
mov
shlb
inc
mov
mov
imulb
xor
mov
mov
outsl
test
jle
sub
or
shlb
out
adc
call
xchg
popa
lahf
mov
faddl
mov
and
sbb
stos
call
adc
jo
jp
loopne
rcll
inc
cmp
mov
std
mov
clc
push
adc
jbe
jbe
scas
xchg
ret
jecxz
scas
xor
xor
outsl
push
jb
subl
popf
add
dec
jge
jle
pop
push
int
push
lcall
out
stos
sub
jns
push
dec
sub
push
jno
jg
rcl
push
dec
xor
cwtl
xchg
pop
xor
dec
jmp
xchg
adc
arpl
mov
and
or
mov
xorb
sub
or
shrl
push
jns
inc
pop
inc
cmc
jmp
cltd
jno
pushf
jmp
xor
mov
dec
outsb
mov
or
out
outsl
outsb
imul
sub
cmp
xor
jb
lret
inc
jno
sti
adc
mov
sti
cmp
cmpsl
das
aam
or
adc
mov
mov
into
adc
aaa
sbb
out
cmp
dec
or
daa
je
mov
out
test
mov
in
adc
pop
fucomp
fwait
outsl
orl
sub
rol
inc
and
int
adc
scas
xchg
jbe
mov
lahf
adc
rorl
mov
adc
js
xchg
in
popf
sbb
jae
pusha
cltd
out
lea
ljmp
push
jmp
sub
frstor
das
push
dec
daa
inc
roll
scas
cmpsb
pop
cs
fisubs
and
xor
imul
insb
lock
mov
mov
ret
mov
mov
loope
xchg
xorl
add
jmp
cmp
cwtl
icebp
ret
cmp
or
ss
mov
or
mov
add
adc
outsl
xchg
repnz
mov
add
cmpsb
mov
add
mov
mov
lret
int3
mov
cld
fisttpl
pushf
loopne
inc
mov
aam
outsb
divb
pop
mov
or
sbb
in
sahf
aad
cwtl
mov
pop
push
leave
dec
xor
xchg
xchg
loop
jae
leave
repnz
inc
jne
xchg
xchg
faddl
mov
loope
or
xor
adc
cmc
fcomps
jle
adc
jae
mov
repz
jno
repnz
push
cmc
aas
fmuls
mov
out
pop
andb
test
cs
mov
pop
push
push
das
test
lods
xor
cltd
pop
xor
xchg
loop
sbb
dec
jle
pop
sbb
adc
mov
lahf
cmp
or
lea
jae
xlat
xchg
call
sbb
sub
sbb
sbb
inc
fdiv
push
and
dec
mov
out
jl
xor
mov
out
xchg
in
scas
pop
sub
ja
in
popa
mov
xor
or
gs
imull
lea
testl
xor
outsl
pop
mov
sub
scas
test
aas
cwtl
xchg
movsb
push
adc
adc
out
dec
dec
insb
fdivrp
dec
inc
sti
inc
mov
cmpsl
lcall
shrl
mov
popa
push
into
ret
rol
shlb
or
mov
jecxz
jb
fstpt
rolb
arpl
lods
pop
dec
sub
add
jecxz
sub
sub
xor
and
ret
jb
xchg
jno
jno
sbb
es
mov
cmp
sub
xor
shll
add
sbb
cld
sub
jg
mov
xchg
inc
dec
repz
sub
into
or
popa
aaa
and
sub
adc
call
xor
mov
jae
outsl
hlt
pop
mov
dec
call
pop
outsl
cmp
add
outsb
adc
pop
filds
or
and
xor
jmp
mov
scas
adcb
test
inc
mov
and
aam
lahf
js
popf
ss
mov
dec
mov
mov
cmp
jg
adc
pop
push
jo
add
outsb
cmp
mov
les
jmp
mov
mov
mov
xchg
cmc
xor
fisubrl
jge
mov
out
test
add
ror
or
std
and
fisttpll
mov
pop
scas
sbb
push
daa
inc
adc
push
out
xchg
lahf
outsb
pusha
push
xchg
mov
jne
in
pop
push
push
aam
cmp
jns
bound
dec
fsubrs
aas
lret
jnp
pop
sahf
rcrl
shll
sbb
bound
xorb
gs
out
mov
adc
outsl
out
sbbb
repnz
dec
sahf
jge
inc
in
repnz
mov
and
adc
test
into
pop
cmp
mov
cwtl
into
sbb
call
bswap
insl
movsl
mov
stc
dec
pusha
sahf
insl
or
mov
xchg
jge
mov
ds
cld
out
rorl
push
repz
call
or
in
gs
les
adc
pusha
insl
cs
aaa
adc
gs
imul
adc
cs
lods
enter
pop
sar
sahf
ret
dec
cwtl
dec
out
xor
mov
xor
sti
iret
inc
scas
stos
aad
mov
icebp
mov
push
aam
cmp
push
out
dec
mov
mov
sub
iret
pop
sub
mov
adc
repz
out
stc
jno
xchg
sbb
ss
xor
outsl
pop
fcmovbe
dec
out
rcr
mov
mov
dec
scas
and
in
pop
jb
cmp
mov
pop
loop,pt
jecxz,pn
lret
fdivrl
xchg
mov
mov
xor
pop
xor
insb
and
pop
sub
xor
xor
repnz
lods
xor
shr
dec
mov
sub
mov
mov
cmc
xchg
jmp
jg
push
push
test
rcll
mov
and
insl
mov
pushf
xchg
or
sbb
jle
sub
push
je
inc
insl
push
cli
not
push
xor
or
jno
sbb
cmp
lods
xor
adc
jno
mov
cmp
xchg
movsb
pop
movsl
inc
aas
std
movsb
jle
xchg
mov
inc
movsb
sub
mov
fyl2x
out
gs
mov
sub
stos
stos
jne
jno
push
xor
jb
cmp
cltd
and
xchg
sbb
inc
xchg
sti
xorl
or
pop
orl
cwtl
jp
mov
shr
xor
add
jo
stos
lea
add
cmp
int3
jp
sbb
sub
xlat
int
lods
mov
int
inc
xor
es
add
push
inc
aam
in
adc
fstps
push
arpl
jge
sub
xchg
sub
push
and
int3
mov
xor
lds
fmull
icebp
adc
sub
push
mov
xor
adc
pop
xchg
imul
stos
jecxz
adc
push
in
js
adc
sub
in
mov
pop
data16
xchg
out
repz
repnz
in
pop
cli
add
mov
stos
mov
lods
ds
cs
call
dec
cmpsb
loope
and
imul
sub
flds
insl
jno
sub
xchg
pushf
or
rcr
mov
push
insb
and
inc
cs
xchg
aaa
xchg
pop
imul
and
stos
ficomps
mov
cmp
out
jb
repz
js
and
mov
sbb
and
mov
sub
xor
mov
stc
cli
mov
mov
outsl
outsb
mov
xchg
mov
pop
jno
push
jno
jle
lods
inc
or
hlt
push
je
push
push
jp
mov
leave
cmp
pusha
adc
mov
inc
shll
popf
cld
mov
ret
shlb
fisubrl
test
push
xor
test
aad
mov
push
outsl
jb
daa
lahf
outsb
loop
xchg
jg
jmp
scas
ljmp
xor
push
xor
loope
scas
ja
adc
mov
jb
clc
aaa
jns
shll
inc
jae
cmc
jnp
jl
insb
add
cld
xchg
mov
inc
mov
sbb
insl
inc
pop
or
cmp
roll
dec
ret
xor
stc
dec
lcall
push
xor
mov
hlt
rcll
cwtl
inc
jmp
xor
mov
fimull
std
shrb
loopne
loop
inc
aad
clc
and
adc
adc
int
jno
scas
jb
pop
in
xorl
lahf
adc
test
pop
add
lahf
mov
pop
cmp
mov
mov
outsb
sub
sub
imul
xor
in
ss
in
jmp
dec
addr16
add
inc
out
adc
cltd
out
out
iret
cmp
outsl
rcrl
mov
xor
ret
push
jb,pn
jl
mov
sub
aad
dec
or
setno
mov
fisttpll
xor
mov
std
sbb
cmc
xor
int3
insl
mov
lret
mov
adc
ja
cwtl
adc
xor
leave
in
cmp
imul
cs
stos
nop
jecxz
cmp
adc
insl
jmp
adc
push
sbb
stos
loopne
cmp
fsubrl
dec
shlb
cmp
mov
int3
dec
hlt
mov
jo
int3
bound
pop
outsb
xor
ljmp
mov
test
lea
test
inc
addr16
xor
jne
mov
jne
test
pop
lods
xchg
movsl
test
xor
in
shrb
cmc
aam
pop
stos
adc
lea
shl
mov
je
add
lock
dec
mov
add
nop
repnz
loope
arpl
jne
out
pop
sti
ljmp
mov
adc
mov
mov
xor
adc
push
sahf
push
mov
insl
sbb
cli
jb
jmp
icebp
jge
pusha
xor
mov
pop
imul
or
sahf
jge
jno
leave
mov
in
xchg
popa
mov
sbb
scas
dec
push
shrb
movsl
data16
lods
push
ds
mov
out
sub
xlat
xor
add
sub
mov
add
xor
add
cmp
dec
into
fcmovbe
lahf
ds
subb
sub
lea
xor
int3
xor
mov
sbb
or
adc
mov
mov
xor
bound
xchg
adc
icebp
mov
fcomi
shlb
mov
scas
sbb
cmp
sub
pop
push
jns
shll
mov
rorl
fnsave
arpl
cmp
icebp
call
inc
nop
lods
test
hlt
add
insb
mov
insl
jge
sbb
mov
mov
mov
lea
jns
nop
xor
addr16
jg
dec
push
pop
in
and
pusha
cmpsl
iret
pushf
roll
mov
sbb
in
movsl
jp
adc
adc
inc
xor
test
lods
jg
cmc
add
bound
xor
sub
push
and
test
cmp
into
xchg
scas
push
or
dec
push
cs
out
dec
adc
in
xchg
add
outsl
jbe
stc
icebp
xchg
call
pop
push
out
cmp
mov
or
ljmp
fwait
cld
into
adc
fmul
cs
out
inc
imul
mov
rcrl
xchg
push
aad
adc
mov
or
dec
aaa
sub
sbb
adc
xor
nop
pop
out
adc
outsb
sbb
add
imul
sbb
and
je
sub
cmpsb
jne
outsl
in
add
adc
in
inc
icebp
mov
das
into
push
scas
jno
popa
adc
mov
inc
call
je
fs
out
inc
jno
rolb
xor
fwait
jns
pop
push
jle
popf
push
lods
pop
ss
icebp
jo
int
lods
jns
mov
jnp
lret
les
dec
addr16
pop
xor
stos
lods
add
mov
sbb
pop
popa
insl
pop
cltd
jae
jb
aaa
insl
lret
or
mov
or
add
enter
inc
cmp
pop
jg
in
add
inc
rolb
cmp
mov
repnz
rorb
xor
add
mov
xor
mov
mov
aad
jge
cmp
ss
push
dec
mov
insl
or
icebp
mov
outsl
ror
lods
icebp
adc
cld
addr16
inc
ds
lods
adc
jno
bound
imul
jmp
scas
xor
leave
gs
das
xchg
cmp
mov
or
mov
stos
mov
push
mov
xor
shrb
rolb
inc
int
add
mov
out
mov
outsl
cmp
lods
xchg
dec
cmp
stos
dec
mov
xorl
je
ja
push
jnp
mov
jg
mov
arpl
sub
dec
push
mov
mov
outsb
aas
xchg
int
push
mov
and
jg
mov
cmpsb
push
jp
shl
std
jb
sub
adc
scas
xchg
ss
lds
test
push
data16
jno
jl
jle
int3
dec
sti
std
lods
subb
dec
ret
and
pop
cwtl
out
push
sahf
repnz
out
stc
scas
lahf
dec
sub
pusha
out
mov
xchg
insb
shl
fstl
mov
pop
jmp
jp
xor
sbb
repnz
jne
sub
js
mov
clc
mov
lret
add
sbbl
mov
mov
xor
fs
pop
mov
dec
or
pop
pop
jg
mov
ja
dec
dec
fstp
jge
jns
jp
je
jl
inc
push
into
xor
pushl
test
dec
fucomi
pop
or
jecxz
pop
sub
inc
shlb
out
sarl
jmp
mov
jl
faddl
mov
in
pop
inc
or
repnz
shrl
pop
or
fdivrp
sbb
xchg
gs
mov
mov
cmpsl
iret
mov
push
or
sub
sbb
jecxz
mov
ss
ret
cmp
fwait
pop
mov
cld
mov
jecxz
sub
pop
ljmp
sbb
aaa
pusha
frstor
pusha
icebp
icebp
jb
in
adc
je
push
out
cmp
into
in
test
ja
test
scas
out
movsb
adcl
or
sti
sub
dec
pop
in
ds
jae
jmp
adc
xchg
out
rcl
mov
lock
popa
es
xor
inc
mov
daa
insl
mov
xor
push
add
push
pop
jge
dec
shll
or
ja
mov
mov
inc
arpl
out
lea
push
cmp
sub
push
bound
inc
es
outsl
ret
fsubrs
xor
icebp
bound
pop
push
sub
and
shr
xchg
jb
sub
xchg
dec
mov
jns
in
mov
lods
and
push
cmp
jmp
mov
insl
aam
mov
mov
sbb
scas
inc
ja
push
push
push
jno
adc
xor
add
lods
jo
ljmp
cs
enter
push
fmull
xchg
cmc
imul
sti
popf
jns
in
adc
cmpb
mov
mov
add
das
jecxz
push
xchg
add
cwtl
adc
scas
sub
mov
subl
fdivs
ds
dec
xor
add
mov
or
and
mov
out
pop
jp
les
lret
jno
push
push
xchg
arpl
cmp
jno
lock
insb
ss
scas
scas
sub
jno
pushl
inc
push
push
dec
int3
or
push
adc
jle
imul
jo
or
push
cmp
jb
fcompl
push
mov
mov
push
out
outsl
or
aam
push
mov
shr
fldenv
lahf
adc
xorl
xchg
imul
pop
dec
fisubrs
xchg
sub
cli
lahf
into
imul
push
int3
push
test
aam
sub
dec
bnd
insb
ficompl
or
mov
call
xor
jae
aam
fiaddl
push
mov
jecxz
or
jmp
jp
mov
in
jecxz
pop
add
insl
mov
out
mov
imul
mov
iret
jb
cmp
mov
mov
lods
shrb
xlat
test
jno
sub
lods
mov
repnz
aaa
push
movsl
jle
or
shlb
outsl
xchg
pusha
icebp
adc
lahf
scas
pop
hlt
jne
and
icebp
mov
lea
clc
pop
jecxz
stos
xor
xorb
inc
shrb
sub
adc
or
mov
add
popa
mov
push
hlt
enter
mov
lods
sub
sub
out
cmpsw
inc
jno
shl
int3
add
mov
out
push
push
xor
imul
mov
fcompl
push
sbb
cltd
mov
mov
stos
xor
insl
mov
arpl
ss
adc
adc
sub
lahf
icebp
dec
and
insb
fst
or
and
adc
in
mov
filds
icebp
cmpsl
sbb
lea
mov
cmpsl
jecxz
jl
scas
in
insb
xchg
sub
push
shll
cmpl
xor
inc
insb
xchg
xor
popf
ficomps
icebp
imul
daa
fidivrs
mov
jne
das
mov
xor
pop
jo
leave
scas
popl
jmp
xchg
seto
xchg
add
xchg
dec
lock
into
lods
cs
enter
mov
xor
jo
scas
cmp
jecxz
jecxz
das
push
fstpt
arpl
cs
scas
and
fwait
std
pusha
xchg
sbb
adc
jne
cmp
je
js
xchg
dec
test
pusha
push
and
loope
inc
push
in
push
pusha
jns
mov
jecxz
adc
ficoms
mov
mov
rcrb
xor
shl
push
cmp
jecxz
iret
pop
fs
arpl
xchg
cli
pop
mov
add
in
adc
add
mov
shrl
icebp
or
sbb
and
out
mov
cs
js
aad
out
mov
jne
sub
adc
sahf
insb
roll
cmp
adc
and
or
push
popa
out
add
pop
in
mov
mov
adc
pop
adcb
lcall
adc
and
sbb
sbb
pusha
xor
sbb
push
imul
out
pop
add
push
fwait
xor
stc
leave
inc
shl
add
push
xchg
adc
scas
lods
ret
test
xor
mov
adc
pop
imul
in
loopne
test
xor
scas
sbb
lea
std
pop
popa
fldl
pop
je
or
ret
sbb
or
add
push
out
mov
adc
mov
std
popa
mov
and
ficoml
push
cmp
mov
xchg
mov
mov
out
jl
dec
xchg
adc
adc
and
rclb
sub
lret
into
jno
mov
adc
mov
cmpl
sub
int
or
xchg
loop
xchg
mov
enter
adc
jb
jno,pn
sbb
mov
dec
jno
das
mov
adc
call
mov
or
cwtl
clc
add
cmp
jl
xor
mov
jl
mov
aas
add
jecxz
sub
sbb
cld
xor
pop
cmp
cltd
in
mov
push
dec
or
pop
lcall
divb
daa
insl
dec
xor
adc
xor
push
sahf
inc
mov
ret
bound
out
mov
addl
xchg
lds
lds
xchg
pusha
imul
push
call
dec
arpl
daa
dec
lea
xchg
sbb
imul
cli
adc
loope
shrb
std
mov
stc
xor
stc
addb
xchg
sbb
xchg
insl
mov
repz
popa
icebp
jmp
insb
std
in
and
insb
je
sahf
sahf
inc
push
cmpsl
repnz
inc
mov
subl
icebp
mov
or
cmp
sub
lds
fmull
push
cs
pop
inc
jae
jp
adc
sti
inc
adc
add
mov
cmp
cmpsb
data16
jne
aaa
mov
aaa
fists
inc
or
lea
addr16
int
jbe
fmull
lahf
cmpsb
es
jae
loopne
not
cs
pop
into
mov
add
mov
jno
out
js
popf
inc
bound
xlat
scas
or
mov
or
enter
mov
inc
fiaddl
push
xlat
scas
or
mov
or
and
jl
sbb
test
mov
jecxz
imul
mov
lods
pop
mov
mov
insl
mov
jb
dec
jmp
push
int3
rorb
out
das
lret
mov
add
gs
push
sti
adc
push
adc
rcrl
jp
or
jno
icebp
xor
clc
repnz
dec
int3
xor
lahf
out
sub
xchg
mov
icebp
mov
sar
popf
sbb
iret
pop
push
hlt
int
aaa
and
mov
push
popf
xchg
xchg
jl
pusha
push
cmpsl
stos
hlt
jmp
xor
test
jmp
sub
jecxz
aas
scas
and
mov
push
movsb
fnstcw
pop
jbe
jb
ret
inc
fwait
insb
or
and
sbb
cmp
sbb
add
xorb
clc
sbb
sbb
pop
inc
repnz
daa
sub
inc
sbb
mov
mov
leave
cmp
xor
adc
xor
addr16
iret
imul
mov
ret
push
pop
pop
sbb
push
movsl
movsl
in
mov
mov
aas
shll
in
dec
shlb
call
outsl
xchg
lods
adc
sbb
lret
outsb
xor
scas
repnz
repz
test
shll
pushl
lods
scas
jno
jg
adc
pop
outsb
jns
jecxz
repz
test
dec
lods
sbb
jecxz
mov
xchg
cs
cmpl
dec
and
xor
outsl
adc
loopne
test
pop
xchg
cs
or
xchg
add
cmpsl
cmpsb
push
jnp
adc
lahf
push
movsl
add
push
xlat
cld
test
cwtl
jp
test
je
and
sbb
into
mov
jne
inc
xor
mov
nop
xchg
adcb
das
repnz
stos
xor
and
xor
fnstenv
cmc
mov
lret
dec
stos
test
popa
roll
test
out
das
sub
sbb
adc
and
cs
repnz
jns
mov
or
outsb
lret
ja
mov
int3
or
jmp
jg
icebp
mov
jne
test
adc
sbb
jmp
out
pop
mov
test
call
cmp
cwtl
add
fstpt
sbb
int
jl
push
xor
push
cs
mov
cld
sub
xorb
push
add
mov
js
jmp
cmp
inc
popa
mov
mov
pop
mov
insb
xchg
rolb
lret
sub
pop
xor
test
fisttps
ja
push
adc
rcrl
sub
mov
sti
ss
jno
testb
adc
repz
jae
imul
push
push
out
push
mov
add
mov
int
sub
pop
scas
lock
xor
test
xor
clc
outsb
pop
filds
repz
mov
fsubs
pop
rep
pop
iret
adc
andl
inc
int3
jno
or
xor
add
and
scas
fwait
subl
not
ret
mulb
push
outsl
inc
dec
mov
sub
int3
and
notb
sbb
outsb
lods
sar
insl
mov
into
xchg
pop
decl
orb
xor
pop
lods
fs
inc
test
xor
scas
xor
sub
or
orl
xor
sub
jae
cs
lea
jp
jno
lods
test
mov
pop
imul
insl
stc
in
mov
xchg
jge
ret
stc
mov
cmp
sub
jnp
push
adc
insb
jle
pushf
mov
and
add
daa
rcrl
cmp
xchg
inc
push
or
in
dec
jmp
les
or
pop
subb
xor
cs
adc
push
mov
testb
mov
and
dec
lods
mov
fisttps
scas
xchg
jne
cmp
adc
sub
jae
out
and
popa
add
pop
mov
xchg
ret
cmpl
cmpsb
cmp
out
test
imul
adcb
mov
in
cmpsb
sbb
mov
fdivrs
dec
or
leave
sub
push
inc
sarb
add
inc
jne
jl
repnz
pop
enter
adc
adc
inc
ret
mov
xchg
or
mov
mulb
xor
adc
int
jbe
in
cmpsb
orl
mov
out
jnp
jge
aas
std
push
add
jno
push
cmp
dec
bound
or
aaa
inc
xchg
in
rcr
lods
sahf
sti
pop
les
push
mov
insb
repnz
adc
push
mov
pop
out
insb
sub
and
mov
cwtl
popa
mov
mov
fstpt
or
lds
mov
sub
idivb
sub
cmpsb
xor
adc
scas
xchg
xchg
sub
jmp
scas
push
outsl
scas
pop
in
iret
arpl
dec
arpl
int
cmp
and
test
int
je
or
xorb
roll
inc
mov
push
std
inc
jl
jo
int3
or
ss
and
sbb
cmp
scas
cmpsb
push
jmp
aad
rorl
icebp
leave
and
jl
mov
push
scas
adc
stc
xor
lods
rcll
jb
insb
cmp
das
imul
jecxz
std
shrl
jns
dec
and
sub
sub
sub
xor
aad
mov
popa
aad
and
lods
insb
das
dec
loop
ret
dec
sbb
jbe
scas
or
dec
lret
call
rorb
stos
cmpsl
jae
shlb
or
lahf
out
ret
cmpsl
sub
mov
or
jge
out
sub
mov
jb
in
jecxz
cmpsl
out
repz
jecxz
sub
pop
sub
cs
insb
jns
adc
mov
mov
inc
dec
or
fisubs
in
or
leave
ret
mov
push
sbb
fisubrl
movsl
inc
dec
sub
push
sub
xchg
add
mov
add
mov
xchg
push
rcl
add
cltd
shlb
scas
push
xadd
iret
mov
rol
icebp
mov
insl
push
and
mov
jo
cmp
fistpl
jecxz
jb
cs
outsl
mov
scas
or
mov
shll
gs
jnp
inc
mov
or
imul
jbe
pop
outsl
das
cld
adc
mov
das
fcmove
ja
xchg
jge
insb
xchg
int
lods
cmp
mov
enter
orl
cs
in
xor
push
inc
add
scas
adc
add
jno
xor
sub
sub
stc
jno
iret
stc
insb
jne
ss
movq
es
fs
imul
mov
sub
xor
mov
cmp
mov
jecxz
imul
push
xchg
mov
mov
jg
mov
pop
fwait
xor
or
cmp
insl
adc
xor
cvttps2pi
lods
paddsb
jb
insb
xor
rdpmc
xor
pop
ror
daa
lahf
inc
mov
adc
jg
push
wbinvd
in
jae
mov
int
js
sub
arpl
fsub
scas
icebp
sub
rorl
add
inc
mov
insb
ja
data16
mov
out
aad
inc
ror
in
dec
pop
lds
sbb
imul
adc
sub
mov
pop
ds
scas
jl
fcmovne
or
push
cmp
jne
repnz
sbb
and
push
rcrb
add
daa
jo
icebp
cmp
out
and
push
outsl
adc
jns
push
js
shl
mov
cld
mov
or
mov
or
cmp
inc
ja
jl
cld
orb
rolb
out
repnz
mov
out
push
cld
int
jns
aam
lret
scas
jb
mov
loop
aaa
jno
cmp
lret
nop
jbe
sub
ljmp
insb
out
jg
jp
inc
push
sbb
jg
jno
xor
lods
jp
jecxz
sub
push
sbb
push
leave
jb
mov
and
cmpsl
out
sub
loopne
repz
mov
mov
xchg
popf
adc
cmp
add
pop
pop
mov
push
outsb
or
add
adc
jbe
dec
mov
push
add
into
lock
aad
aaa
xlat
imul
sub
sysret
sbb
mov
ret
xor
jno
popa
icebp
js
sbb
orb
dec
add
push
sbb
inc
jns
inc
outsl
pop
sbb
pop
mov
or
add
sbbb
or
stos
jno
popf
xor
jb
insl
jo
in
arpl
xchg
mov
icebp
and
movsl
sub
xchg
cmp
stos
call
popf
push
xchg
mov
jne
cmp
dec
dec
push
insl
subb
xor
mov
sub
cmc
pop
fmul
adc
lock
insb
clc
mov
cwtl
pop
mov
outsl
cmp
dec
jge
jb
lcall
adc
cmp
mov
fstps
xchg
adc
push
jp
addr16
jmp
les
pop
xor
in
mov
outsb
push
xchg
fwait
or
add
arpl
or
sub
jns
mov
lss
stos
enter
jge
push
jno,pn
sbb
ds
dec
in
nop
mov
sbb
fcmovnu
dec
mov
rcrb
xor
out
push
xchg
sub
lret
insb
pusha
inc
mov
jb
in
out
cmpsl
add
imul
jl
dec
repz
sub
lret
adcl
mov
das
or
mov
sub
and
cmp
adc
push
mov
in
mov
push
stos
cmp
shl
into
mov
out
insb
clc
js
outsb
adcb
add
add
rorb
mov
aam
push
adc
aam
mov
fiaddl
js
pop
add
jno
aaa
bound
push
les
cmpsl
mov
or
dec
xchg
dec
or
outsb
xlat
rolb
sub
jecxz
inc
mov
scas
or
add
mov
loope
dec
pop
fst
daa
ffreep
aaa
shlb
xchg
sbb
and
jb
iret
add
orb
repnz
mov
fimuls
jb
lret
xchg
lahf
insb
add
push
mov
mov
pushf
cmp
xchg
roll
loop,pn
cmc
lret
dec
iret
imul
mov
pop
mov
or
adc
xor
xor
adc
imul
pop
jb
xor
mov
mov
xor
inc
out
mov
sbb
int
je
or
jmp
arpl
ret
loope
push
pop
cld
add
jp
cmpb
jge
push
dec
ds
cmp
push
mov
sub
push
xchg
stos
jns
and
mov
shr
bound
cmp
movsl
xchg
mov
cs
gs
mov
les
mov
ror
aad
inc
outsl
mov
nop
hlt
mov
imul
cld
stc
hlt
add
lods
dec
xchg
dec
and
out
xor
icebp
popa
mov
ret
pop
add
pop
repz
sti
xchg
dec
sbb
test
cmc
sbb
add
aaa
scas
xchg
jle
jb
fucomp
and
and
sub
and
mov
cmp
mov
incb
jmp
outsl
add
insl
int3
push
add
push
mov
jb
cmp
mov
repnz
pushf
sbb
mov
mov
pop
xor
mov
or
jge
lea
int
sarb
mov
icebp
inc
xor
mov
push
ret
sahf
adc
jp
mov
lret
inc
and
adc
push
int
sbb
mov
sub
inc
inc
sub
push
or
popa
inc
sbbl
cmp
or
mov
insl
rcrl
pop
mov
repz
sahf
and
or
jge
mov
dec
sbb
popf
xor
mov
and
jbe
add
mov
and
xchg
sub
jl
adc
in
sbb
lea
cs
adcl
xor
add
icebp
cmp
jns
mov
adcl
ljmp
rcr
cmp
ds
sub
push
psubusb
repnz
shrl
push
push
sub
xorb
add
jb
sub
int3
jns
popa
lds
fdivr
jmp
outsl
je
cmp
aas
cmp
into
andl
inc
test
int3
jecxz
lret
or
inc
cmp
cli
or
cs
cmp
daa
mov
mov
shrl
popf
ds
repz
mov
das
mov
push
mov
outsl
push
rcr
dec
imul
int
mov
jecxz
xor
sbb
fimull
ja
jae
pop
cwtl
cltd
outsl
jnp
test
jge
daa
adc
fs
pop
psrld
out
mov
xor
loop
pop
mov
insb
add
data16
push
jecxz
mov
push
adcl
pop
xchg
add
and
inc
cmp
cs
cmc
stos
das
aaa
jnp
jae
insb
ja
jmp
pushl
test
imul
or
mov
sarl
mov
stos
cmpb
jecxz
out
xorl
cltd
into
xchg
xchg
enter
cltd
mov
repz
xlat
movsl
push
cld
mov
and
aaa
je
das
xchg
lods
cmp
fistpl
dec
mov
orl
lods
push
lahf
mov
test
inc
dec
iret
mov
daa
jmp
jmp
nop
add
mov
rcll
fwait
sahf
outsl
xchg
jb
sub
loope
add
fnstenv
xor
sub
in
shrd
push
xor
mov
jae
xor
adc
xchg
or
mov
xor
pushf
xor
mov
bound
ss
in
add
mov
mov
jb
mov
push
xor
ficoms
fcoms
cmp
les
pushf
xor
jb
das
rcrb
pop
dec
dec
int3
mov
add
sti
and
loop
shrl
mov
rclb
inc
mov
cld
lods
aad
in
xor
lods
xorb
aaa
push
xor
in
cmp
icebp
aas
stc
pop
push
dec
mov
mov
test
push
xor
cmpb
add
xor
sub
into
sbb
lret
or
negl
pusha
imul
insb
movsl
shlb
icebp
out
push
sti
insb
out
sub
jb
lahf
push
aam
js
inc
loopne
imul
mov
rcrl
lahf
in
insb
fwait
clc
jp
xrelease
add
mov
into
xchg
jbe,pt
fistl
lods
jecxz
add
xor
mov
pop
jle
stos
jo
jle
lcall
movsl
shll
popa
std
adc
bound
pop
pop
and
icebp
mov
jp
test
cmp
ret
xor
xchg
icebp
sub
call
in
add
out
mov
pushf
cmp
sub
push
lahf
out
mov
mov
loope
jle
subl
fldcw
xchg
int
repnz
push
mov
bound
scas
les
xchg
mov
sub
movsl
in
inc
xchg
xor
xchg
add
sbb
push
ljmp
jb
int3
and
testl
jnp
xchg
fucomip
lds
loopne
mov
jmp
pop
jecxz
xorl
sbb
mov
mov
mov
and
mov
mov
sub
jecxz
pop
jmp
jae
push
int
pop
adc
fcoml
xor
aam
or
orb
adc
add
xor
inc
mov
inc
mov
cs
ficomps
pop
jno
push
in
dec
mov
repnz
pop
out
out
jge
fs
push
dec
xor
mov
mov
shlb
push
imul
adc
icebp
test
mov
mov
mov
jns
fisubrs
adc
add
xchg
xor
mov
mov
dec
lods
jae
sub
mov
jmp
push
mov
in
imulb
repnz
mov
std
out
push
mov
fucomp
mov
or
and
inc
xlat
add
mov
add
or
add
cli
push
or
repnz
dec
dec
mov
lods
in
pop
mov
add
dec
add
adc
push
or
repnz
dec
cmp
icebp
mov
dec
js,pn
push
xor
jo
mov
cs
fldt
movsb
mov
add
les
xchg
add
pushl
add
daa
repnz
inc
mov
push
loopne
jge
and
add
fmull
out
leave
notb
jnp
icebp
mov
xor
jb
or
adc
mov
pop
into
call
out
into
jns
fstpl
lret
sub
data16
push
lret
enter
enter
pop
leave
movsl
pand
xchg
icebp
mov
mov
jle
jmp
loop
icebp
loop
xchg
jno
aas
sub
cwtl
and
jns
push
das
int
shl
ficoml
or
pop
imul
rcrb
jae
inc
mov
lock
out
mov
aas
sub
pop
mov
push
in
ss
sahf
jbe
jno
in
jne
pusha
nop
mov
test
sub
aaa
fwait
xor
pop
xchg
rcr
orl
xor
clc
or
mov
inc
mov
clc
mov
cmp
clc
lods
loope
dec
icebp
pop
jo
clc
jns
imul
leave
icebp
fnstenv
fidivs
test
mov
lods
push
ljmp
pop
cltd
sub
jo
inc
mov
mov
mov
lods
les
or
pusha
add
adc
adc
fcoml
cli
sbb
cwtl
inc
aad
add
nop
pusha
xor
inc
and
sub
lock
mov
sbb
ss
sub
repz
sbb
cmp
test
adc
icebp
outsb
jl
jne
lea
pop
icebp
xchg
push
clc
cmp
and
mov
lea
fisttpll
dec
inc
mov
and
out
mov
mov
sub
repz
dec
daa
jno
xor
push
pop
pop
push
shl
popa
sub
fcmovne
test
jb
cs
jne
cmp
pop
cmp
adc
ja
inc
mov
fcoml
push
scas
mov
jns
mov
add
mov
adc
cmpsl
pop
scas
push
mov
push
dec
fiaddl
imul
insb
xchg
fnsave
das
mov
lods
lcall
jo
mov
mov
std
cs
add
mov
add
shlb
call
leave
cltd
mov
xchg
sbb
shl
das
data16
loopne
rclb
fadd
jo
push
sub
fdivs
mov
lcall
lahf
cs
das
cli
and
pop
hlt
sbb
imul
dec
arpl
dec
lahf
dec
dec
lods
or
aas
mov
sub
sub
adc
scas
lods
or
mov
or
sarb
mov
rorl
add
xor
push
mov
out
lea
je
in
in
dec
and
test
jne
sbbl
add
mov
jle
and
lea
add
xor
jnp
inc
sub
cmp
and
add
xlat
push
bound
cli
pop
icebp
push
popa
mov
bound
inc
fbld
and
fnsave
xor
addl
push
push
rcrb
dec
adc
add
cs
hlt
jmp
inc
xchg
andb
andl
aas
lcall
xor
mov
insl
popf
add
lods
mov
std
ljmp
in
jle
insb
mov
mov
into
jmp
in
and
icebp
sub
mov
scas
sub
xchg
inc
inc
imul
or
fcompl
jo
sbb
repnz
and
sti
data16
mov
arpl
ss
push
dec
push
adc
insl
push
push
fbstp
mov
xor
loope
scas
addr16
mov
fadds
pop
scas
addl
shrb
lea
mov
inc
dec
xor
mov
imul
cmp
adc
shlb
mov
pop
loopne
insl
nop
xor
shlb
rclb
add
mov
add
inc
fwait
test
add
mov
in
jb
flds
push
sub
fcoml
jae
bound
aad
sub
jnp
or
jo
out
arpl
adc
inc
fsubrl
shll
shl
and
jne
pop
adc
in
mov
hlt
pop
loop
insb
pop
lahf
xlat
cmc
in
jb
test
jle
sub
jnp
leave
cmc
xor
xlat
mov
gs
jbe
xlat
insl
pop
lret
mov
out
mov
dec
int3
jle
mov
lods
mov
popa
add
mov
inc
xchg
cmp
mov
pop
rcrb
pop
sarb
pop
jecxz
mov
xor
loope
pop
dec
cmp
insb
ljmp
mov
out
mov
or
mov
dec
add
or
push
adc
loopne
jmp
and
or
jmp
inc
sub
xchg
les
fmulp
cmp
xchg
arpl
cmp
mov
ror
fcoml
hlt
inc
scas
add
sub
mov
out
push
add
lea
and
insl
or
xchg
ret
xor
xchg
dec
ds
jae
js
fldt
sub
xchg
pop
jae
out
cmp
pop
enter
dec
push
insl
fdivrl
and
shll
cmp
sbb
jns
subl
xor
lods
icebp
les
jbe
cs
outsb
sub
xor
add
jle
scas
or
mov
mov
inc
push
pusha
int3
xchg
fisttpll
dec
bound
sub
jns
adc
lret
and
sub
outsb
xor
je
mov
xor
out
cmc
aam
push
adc
ret
icebp
aas
mov
mov
or
xor
or
ret
mov
loopne
push
pop
sbb
inc
insb
add
sub
int3
aaa
adc
cmp
popf
aaa
dec
sbb
cwtl
sarb
cmp
hlt
jne
pop
insb
roll
mov
mov
repnz
adc
or
xchg
gs
pop
cmpsl
jno
add
out
icebp
jae
nop
push
aas
pushf
mov
jecxz
in
xchg
ret
add
cs
imul
xor
cmp
imul
jecxz
out
sahf
jne
sar
xchg
lods
cmpsb
and
sub
cmp
jae
add
sbb
and
ss
jno
adc
repnz
mov
rcrl
sub
mov
mov
shrl
in
mov
lods
icebp
test
out
pushl
jb
cmp
or
sub
mov
push
add
data16
push
leave
push
in
out
outsb
xor
insl
sub
js
adc
inc
icebp
outsb
and
add
jne
mov
icebp
shlb
lods
pop
sbb
bound
scas
rcr
outsl
inc
push
inc
out
loope
xor
inc
lods
fcompl
test
and
andb
or
push
xlat
icebp
mov
mov
mov
jecxz
stos
adc
enter
outsb
mov
outsw
pop
push
in
int3
xchg
test
clc
insl
mov
jecxz
pushf
add
rorb
mov
lods
repz
xchg
fsubrs
out
pop
sub
add
bnd
mov
add
pop
nop
mov
nop
fwait
xchg
lods
xor
das
cwtl
icebp
jg
pop
push
js
fstpl
xchg
add
rorb
enter
les
andl
mov
dec
sbb
stos
addr16
and
mov
aas
stc
mov
aaa
in
or
aas
cmpb
inc
je
mov
fidivrl
adc
bound
stc
sub
jne
subb
pushf
jmp
stc
sbb
mov
movsb
adc
xor
mov
dec
dec
in
imul
add
jecxz
xlat
jmp
dec
lahf
pop
mov
clc
jno
sbb
adc
inc
out
dec
mov
popa
negl
in
jmp
push
and
stos
xchg
cmp
data16
jbe
andl
xchg
mov
or
mov
pop
mov
xchg
xchg
cli
pop
xchg
pop
jne
cmp
test
cmp
cmpsl
cli
push
push
shrl
mov
xor
add
jae
cmpsb
xchg
adc
push
mov
dec
xor
mov
xor
sub
xor
ret
pop
fists
je
ss
daa
inc
cmp
dec
lods
or
call
xchg
or
mov
pop
es
movb
aas
into
shlb
mov
daa
in
stc
mov
sbb
lods
cmpsl
sub
and
mov
xor
sbb
sub
xchg
mov
jne
clc
cmp
xor
str
inc
add
or
imulb
add
in
inc
mov
mov
adc
movsl
lods
test
stc
insl
das
pop
and
dec
xchg
fiadds
mov
daa
pop
jl
xchg
rcrb
icebp
xor
insb
mov
aaa
int3
mov
movsl
push
adc
inc
cmp
xor
dec
dec
ror
popa
nop
adc
jo
aad
inc
cs
lret
sub
test
ret
xchg
or
jbe
not
sub
inc
xor
push
je
sub
fs
fisubl
lea
push
sahf
mov
out
add
aad
or
nop
sub
jne
sub
lahf
mov
movsl
fwait
mov
pop
xchg
adc
sub
push
jecxz
imul
inc
xor
and
ret
push
jns
aas
pop
ljmp
inc
cs
jl
mov
add
jge
pop
add
bound
push
decb
pop
xchg
xchg
pop
dec
mov
pop
cmp
inc
aas
jnp
jle
shr
pop
mov
rep
jbe
pusha
or
call
insb
popf
xchg
outsl
mov
clc
cli
ss
out
pop
sbb
jno
popf
inc
icebp
xorl
js
shll
adc
icebp
add
sub
std
xor
and
ss
dec
or
or
addb
imul
jmp
or
or
xchg
imul
aad
in
mov
enter
mov
jmp
mov
add
pop
test
mov
js
cmc
aas
out
jle
sbb
adc
repz
jno
and
mov
xor
jno
mov
add
xor
adc
mov
jmp
sbb
repnz
pop
shlb
pop
imul
xor
in
sub
out
adc
lahf
pop
inc
add
insl
outsl
inc
test
lahf
mov
sar
sahf
adc
xchg
das
js
insl
jb
jecxz
xor
das
xor
xor
scas
insb
jns
jg
mov
lods
push
jo
arpl
lods
add
iret
and
lcall
xor
xchg
loopne
loope
inc
jp
scas
push
jno
cwtl
mov
push
imul
in
jnp
adcl
push
cmp
push
fbstp
mov
sahf
lea
jae
adc
out
xor
xchg
push
mov
mov
mov
inc
push
ljmp
jb
insb
cwtl
sbb
jne
dec
and
inc
mov
mov
add
cmp
push
outsl
shll
scas
push
aam
addr16
jno
dec
or
mov
jae
fwait
in
push
andb
ss
pop
cmpsw
sub
push
xor
add
loop
sub
lret
std
pusha
inc
mov
xor
mov
outsb
xor
lret
or
mov
nop
mov
data16
mov
sub
xor
mov
cmp
sub
js
mov
sbb
pop
shrl
push
jnp
pop
inc
das
js
and
adc
push
movq
test
pop
push
xchg
jecxz
push
sbb
dec
ret
lea
cmc
and
arpl
mov
cmp
dec
cld
out
inc
xchg
xorl
and
cmp
aas
test
add
ja
push
je
sub
test
clc
cmp
imul
lea
sbb
inc
sti
das
jle
adc
push
icebp
jecxz
or
sub
aad
mov
das
sub
icebp
out
fstl
mov
test
mov
outsb
in
cs
mov
sbb
jno
ja
aad
imul
push
fadds
daa
data16
jle
arpl
jmp
xor
shll
sbb
adc
addr16
lock
xlat
mov
cwtl
in
in
inc
lock
push
sbb
cmp
add
cmp
lret
and
mov
cmp
inc
into
xchg
jge
mov
into
mov
pop
mov
movsb
bound
fimuls
mov
lea
dec
inc
hlt
or
iret
sbb
adc
cwtl
or
push
jns
test
pusha
push
loope
adc
xor
fists
xchg
sbb
xchg
mul
add
int
sub
sub
jl
or
inc
shlb
sahf
jo
xor
jmp
cmc
mov
mov
ja
leave
insb
jne
inc
lods
xchg
push
pop
inc
cltd
mov
mov
sti
shrl
int
adc
pushf
inc
or
mov
das
sbb
ss
or
popa
cmp
insl
and
xor
mov
sub
popa
mov
add
pop
into
xor
inc
push
scas
adc
aam
idivl
stos
xor
loope
mov
sarb
or
insb
aaa
xchg
push
jbe
sahf
in
imul
xchg
push
test
xor
xchg
lock
shrl
lcall
xor
or
cmp
les
js
mov
loopne
aad
inc
jecxz
stos
xor
add
adc
iret
cs
xor
xchg
loope
fdivrl
xchg
fdivl
mov
ljmp
xchg
lods
ljmp
sub
adc
jmp
sub
mov
sbb
rcll
xchg
into
jecxz
int3
inc
lods
popf
enter
repz
loopne
cs
shr
loope
dec
loopne
jg
loopne
stos
pop
in
subb
jb
stos
adc
mov
popf
mov
xchg
jns
loope
cmp
jecxz
mov
mov
scas
adc
add
scas
jo
stos
ljmp
repnz
inc
outsb
and
pop
or
cmp
and
mov
popa
and
mov
lcall
bound
xor
add
xor
add
loope
das
cltd
subb
popa
xor
fucomp
test
xchg
and
inc
mov
and
lods
mov
andl
ds
pop
or
xorl
xchg
mov
mov
xchg
and
stos
cmpsl
out
jbe
int
xchg
dec
js
push
fwait
adc
inc
in
stos
int
into
adc
add
or
or
add
testl
mov
cmp
test
cmp
arpl
sub
adc
adc
sbb
movsl
adc
je
fdivrs
ss
addr16
or
cmp
inc
shl
fdivrp
clc
push
insl
test
out
adc
sbb
xchg
inc
or
add
iret
pop
or
sub
jmp
mov
push
add
push
aad
xchg
and
push
imul
insl
jb
sub
lcall
inc
inc
fldln2
mov
sbb
scas
mov
insb
dec
xchg
std
or
jnp
cld
leave
dec
aam
xor
mov
clc
adc
and
push
sub
nop
pusha
push
jno
jno,pn
xor
push
cwtl
fidivrs
or
push
jb
imul
xchg
mov
std
mov
aaa
out
and
mov
sbb
sarl
pop
lahf
rcl
les
movl
adc
and
push
push
jmp
jne
mov
pop
outsb
mov
insb
dec
pop
add
xor
cld
and
je
mov
lret
lea
xorl
nop
out
jno
loope
cmp
xchg
ljmpw
popa
addl
xchg
xor
insl
jno
add
and
addr16
shlb
or
pop
repnz
cs
loope
jg
mov
mov
add
mov
fistl
mov
mov
adc
insb
cs
pop
push
cltd
in
rolb
add
int3
daa
sbb
mov
jnp
aam
xchg
fcoml
int
ficoml
cli
sbb
mov
repz
hlt
mov
sub
test
repnz
mov
ljmp
jb
lods
push
jb
jo
jno
out
lea
subb
push
scas
subb
mov
out
push
call
lods
jp
subb
jns
lods
xor
call
sub
ds
imul
test
xor
and
stc
test
push
pop
mov
iret
aas
sbb
sbb
add
fwait
roll
jg
lods
fnstenv
lahf
cmp
insb
ss
clc
stos
lods
in
repz
xchg
mov
imulb
subb
mov
subb
xchg
clc
icebp
sub
sub
xor
subb
repz
xorb
mov
push
mov
xor
dec
jae
jnp
mov
imul
das
rcrl
aas
iret
sub
sub
sub
sub
jmp
scas
cmpsl
int
jno
insl
and
data16
das
in
fists
ljmp
cmp
int
push
push
add
in
outsl
sqrtps
jg
adc
out
outsl
fdivr
or
push
sbb
dec
cmpsb
jns,pt
scas
push
lods
lock
xchg
mov
mov
cmp
repnz
mov
js
jg
sub
rolb
popa
shlb
mov
scas
inc
adcb
ja
int3
push
mov
jp
jecxz
push
mov
inc
inc
dec
fwait
subl
and
pop
popf
out
mov
mov
mov
mov
gs
add
js
or
pslld
inc
loope
cwtl
pop
xchg
jmp
mov
pop
mov
inc
dec
xor
push
dec
adc
cmpsb
mov
sub
mov
lods
add
icebp
or
push
jecxz
icebp
mov
and
int3
call
jns
add
cmp
imul
lcall
jmp
jae
lods
adc
add
dec
sub
rep
test
pop
mov
inc
push
sti
cmp
rcrl
xor
movl
inc
shr
inc
xchg
add
lods
cmpsl
test
faddl
adc
jo
or
punpckhdq
jl
and
aaa
push
add
std
enter
jne
lahf
jae
je
inc
stos
jbe
push
jb
or
mov
jecxz
pushf
sbb
dec
cld
es
jno
stos
xchg
xor
inc
arpl
out
jo
pushf
imul
out
outsl
jnp
outsl
sub
xchg
and
or
shlb
inc
mov
dec
jnp
subl
repz
dec
sarl
add
fcmovne
out
sub
push
jne
pushl
xchg
std
cmp
jne
mov
das
icebp
push
negb
daa
or
les
orl
xor
mov
mov
jo
in
enter
imul
subl
mov
lods
jmp
jae
mov
mov
ja
push
sbb
adc
inc
je
imul
sub
lods
lods
xchg
lcall
test
fsts
mov
fucomp
jno
add
into
pushf
insb
sbb
mov
mov
jae
jb
cli
in
loop
lahf
icebp
sub
call
call
sub
xchg
aam
call
lret
sub
mov
pavgb
lahf
mov
pop
imul
loopne
bound
decb
mov
add
xchg
lea
mov
or
sub
call
jne
jmp
jle
xchg
and
icebp
lea
into
fnstenv
xor
push
popa
in
mov
rcrb
mov
fistl
xchg
or
hlt
sahf
lods
push
jno
jb
lcall
dec
push
iret
adc
jo
or
jbe
push
sub
inc
sbb
loopne
movsl
pop
popa
pop
add
inc
js
lahf
mov
arpl
shrl
adc
pop
cs
xchg
jne
cmp
adc
xor
jg
or
into
sarb
and
popf
popa
loope
jno
std
inc
bound
fcmove
outsb
mov
inc
clc
add
loopne
xchg
in
out
xchg
mov
adc
je
in
bound
leave
stc
lods
outsl
dec
adc
bnd
mov
sbb
sahf
mov
loopne
subb
push
mov
xor
push
adc
sarl
ss
shlb
lahf
dec
shlb
subb
lods
cmp
mov
cmp
or
mov
xor
ret
dec
lsl
sbb
xchg
call
movsb
jp
and
popa
mov
jns
into
dec
fsubs
mov
lods
sbbb
adc
loope
ja
push
xor
mov
add
adc
in
sti
sub
pop
lahf
jp
lahf
ja
dec
jo
divb
dec
mov
test
push
icebp
jo
imul
mov
movl
inc
sahf
push
scas
pusha
cli
push
dec
scas
jmp
dec
dec
dec
lahf
lods
data16
jae
in
sbb
adc
hlt
in
mov
sahf
popa
xlat
push
add
mov
rorl
insl
jl
sbb
lret
xor
or
push
sub
pop
scas
sub
insb
imul
sbb
mov
lret
mov
adc
subl
mov
out
jmp
xor
hlt
icebp
lods
xor
test
test
rclb
lahf
mov
pop
mov
aad
out
sahf
rcll
push
mov
adc
sbb
loopne
stc
inc
push
push
inc
popf
dec
iret
inc
popa
rcrb
jb
cld
pushf
and
bound
sub
add
and
cld
mov
inc
test
popa
cmp
dec
insl
arpl
les
data16
fiadds
mov
in
movsb
cmp
std
loop
insb
pop
cmpsl
pop
inc
xor
bound
jae
inc
les
sub
or
mov
xorl
outsl
add
fnstenv
sub
out
jl
leave
xor
loopne
mov
fistl
mov
mov
jne
sub
outsb
sbb
jno
lea
push
xor
cmp
jo
in
cmp
pop
les
jne
test
test
adc
test
cmc
cmp
lods
loopne
into
adc
jne
std
jne
repz
sbb
push
adc
mov
jp
shr
add
sub
sahf
sub
icebp
lods
mov
not
loop
cmc
sbb
push
xor
xor
adc
sti
mov
jge
notb
rclb
jmp
aaa
mov
sub
cmc
scas
mov
cwtl
out
aad
jge
inc
pop
fidivrl
mov
adc
cmc
xor
xor
xchg
fcompl
inc
xorb
jbe
dec
test
icebp
xor
mov
mov
jg
test
pop
sbbl
sub
push
xor
fisubrs
push
xchg
adc
movsl
outsb
lds
xor
ficoms
lds
jp
mov
mov
imull
xchg
movsb
int3
mov
bound
or
mov
or
fidivl
bound
mov
jne
arpl
imul
lds
push
push
add
movsl
outsb
movsb
idiv
xor
out
add
test
pop
daa
cmp
inc
xor
xor
push
shll
sahf
pop
in
roll
ljmp
pop
xchg
dec
mov
adc
mov
mov
inc
mov
push
xchg
ret
test
jge
mov
rcll
clc
dec
mov
leave
jecxz
mov
sub
inc
repz
mov
push
add
fldl
enter
adc
add
or
add
push
xor
repnz
dec
pusha
imul
cmp
out
xchg
jge
jae
cwtl
jp
jecxz
mov
test
pop
lcall
push
test
cmp
jge
icebp
shrb
ss
sbbl
mov
mov
insb
add
push
pop
or
int3
imul
jne
mov
pop
mov
lret
jae
mov
mov
cli
fstl
xchg
inc
das
test
jle
add
andl
xchg
pop
cmovb
jae
add
rcl
lods
lcall
push
cwtl
imul
push
mov
adc
xorb
into
fnstcw
std
std
pop
out
sbb
mov
shlb
les
jl,pn
inc
and
mov
rcrb
push
ret
stc
dec
push
mov
popf
xchg
dec
sar
jp
cs
idiv
pop
nop
cmpb
stc
add
or
pop
cmp
adc
dec
or
sarb
sub
jno
out
inc
mov
dec
cmpsb
repnz
jae
or
testl
fcoms
sub
mov
push
adc
and
mov
inc
cmpsl
sar
cmpsl
in
aaa
mov
cmpsl
xor
rolb
test
cmp
jb
jb
sbbb
test
inc
jmp
add
les
das
clc
pop
shll
adc
mov
test
push
fcomps
push
sub
mov
push
xor
pop
push
test
xlat
ret
into
fsubl
cwtl
pop
lea
lahf
aad
add
xor
sub
add
pop
xor
out
jg
jbe
sbb
push
or
xchg
lods
xchg
test
jo
sbb
xchg
lods
and
jbe
aas
icebp
sub
jb
repz
insb
sub
repnz
rorb
sbb
imul
das
sbb
test
adc
xchg
pushf
leave
and
stos
test
out
mov
sub
mov
cs
xor
repnz
and
cltd
into
mov
xchg
fs
rcr
mov
xorb
mov
stos
orl
xchg
add
sub
jae
cmp
repz
xor
mov
imul
adc
iret
add
inc
adc
push
inc
aad
test
sub
lret
inc
sub
mov
stc
and
cli
ret
pop
inc
xchg
push
xor
cld
pop
jno
arpl
inc
cmovne
xchg
and
and
and
and
fcoml
ljmp
std
lods
ljmp
mov
pushf
cltd
or
fwait
mov
scas
pop
mov
adc
jb
icebp
les
sbb
scas
mov
test
out
jl
pop
mov
ret
adc
scas
out
lahf
je
cmpsb
mov
xchg
add
fildl
mov
imul
out
aam
cmp
mov
lea
pop
jb
rcrl
dec
pop
out
test
insb
jo
push
imul
xor
in
mov
divl
test
jecxz
xor
sub
divl
mov
and
adc
mov
and
pop
xlat
mov
inc
sub
sub
cmpsl
push
lret
sarb
repnz
xor
or
mov
lods
and
lret
adc
jp
imul
dec
adcl
daa
sub
fadds
sbb
pop
out
leave
adc
shr
jae
jno
xor
lea
rep
in
mov
and
lret
popl
xor
nop
scas
mov
cmc
adc
insb
cmp
dec
cltd
lahf
into
ret
xchg
test
rclb
ret
push
push
mov
sahf
sub
ds
lahf
adc
insl
stc
in
sub
aaa
dec
int
mov
xchg
pop
repnz
push
test
cmc
inc
sbb
mov
aam
in
outsb
repnz
add
jecxz
sub
scas
xor
lahf
xor
jbe
in
pop
cmp
jo
repz
sub
mov
jb
pushl
sahf
outsl
xor
sub
gs
ds
faddl
inc
stc
jmp
dec
outsl
fucomip
outsb
push
mov
aas
lds
movsl
sub
push
ljmp
aaa
xor
adc
add
adc
in
xchg
push
int
int3
xchg
andl
dec
lea
mov
xor
pushf
xchg
or
inc
pop
pushf
fisttps
movsb
mov
dec
cwtl
mov
dec
or
fsubrp
aas
jne
add
pop
inc
pop
ds
pushf
jne
cs
jl
jo
adc
pop
movq
cs
fcmovne
mov
mov
mov
daa
mov
dec
test
adc
icebp
sbb
and
ret
in
xlat
push
add
inc
negb
and
jp
es
shrb
mov
in
xorl
sbb
sub
cmp
add
sub
sbb
jne
js
loope
mov
rcrb
jne
cld
mov
add
scas
pop
xor
pop
cmc
pop
aaa
cs
and
int3
xor
jg
add
orl
clc
sub
mov
add
inc
mov
mov
mov
int3
sbb
xorb
loope
sub
jnp
shrl
mov
das
sbb
repnz
xchg
pop
imul
mov
mov
sarl
imul
adc
jmp
out
out
mov
andl
repnz
shrl
adc
mov
leave
pusha
jno
sub
ret
std
jmp
sub
lahf
dec
xchg
jbe
scas
imull
shlb
inc
push
adc
mov
or
lahf
dec
mov
ja
int3
insl
dec
adc
pop
lret
std
push
jns
inc
mov
test
xor
cmpsl
inc
fs
inc
push
test
xor
and
sbb
adc
cs
insl
mov
pop
jp
lahf
mov
adc
in
lret
lcall
xchg
movb
and
cld
fs
xorl
cs
mov
add
pusha
es
sbb
aaa
repz
sbb
or
mov
xchg
mov
mov
mov
dec
enter
fidivrs
jl
xchg
jb
push
clc
xchg
push
fsubrs
push
fcmove
decb
rclb
test
setns
jae
adc
outsl
mov
pop
cmp
shrl
mov
imul
push
jb
insb
sub
std
fs
mov
push
xor
pop
into
sub
xchg
scas
push
scas
imul
call
push
dec
mov
push
nop
adc
das
scas
aaa
pop
xorl
jb
sub
push
mov
idivb
inc
notb
icebp
out
call
pushl
stos
repz
mov
shlb
sub
sub
fwait
jp
xchg
pusha
clc
xchg
push
icebp
lea
mov
adcl
ss
and
clc
inc
and
xchg
adc
push
int3
xchg
int
test
xor
sbb
pop
mov
enter
icebp
fwait
movntq
out
and
int3
push
daa
in
loop
inc
push
push
fwait
lahf
push
push
sahf
xorb
push
addr16
and
adc
test
mov
sub
cs
mov
sti
insl
vpackssdw
sub
mov
popa
cmp
mov
ja
xor
les
stos
xor
jns
icebp
iret
dec
xor
mov
pop
lods
in
mov
sbb
subl
js
dec
loopne
xor
adc
dec
sbb
pop
rep
iret
and
inc
inc
pop
sbb
or
in
out
idivb
sub
shrl
sub
jecxz
push
int3
dec
cmpsl
ret
xorps
xor
nop
out
lcall
icebp
xor
mov
cmp
lahf
stos
xor
jno
mov
adc
notl
repnz
scas
mov
jbe
cmp
test
cmp
cmp
lea
dec
push
adc
pop
mov
xchg
mov
ret
sub
sub
in
out
xor
int
xlat
push
sti
xor
dec
ret
inc
mov
jg
mov
adc
mov
std
dec
and
daa
push
ret
xchg
mov
xchg
dec
out
loop
cmp
cmpsl
dec
add
and
pusha
and
xchg
cs
cmpsl
mov
mov
inc
push
scas
add
icebp
push
xchg
lret
jo
ljmp
cmp
mov
and
adc
inc
shlb
sub
push
gs
adc
cs
xlat
or
sbb
push
mov
test
jp
dec
adc
jp
pusha
push
loop
out
push
dec
mov
dec
sub
call
or
mov
sbb
jns
dec
adc
loopne
movsb
test
mov
in
aas
push
fidivl
mov
cs
jmp
inc
adc
jno
mov
shl
cmpb
leave
int
in
popf
lret
cmp
xchg
aam
or
sbb
or
mov
lea
sarl
jo
in
inc
add
leave
pop
cmp
adc
inc
loop
adc
dec
mov
fdivs
xchg
mov
or
fadds
das
mov
or
popa
stos
xor
inc
mov
push
mov
mov
adc
pushf
inc
xchg
mov
andl
push
xchg
out
pop
in
arpl
xor
inc
aaa
dec
les
fs
into
lret
adc
xor
insl
fldt
outsl
jne
push
mov
sub
sub
mov
js
fcmovb
insl
and
insl
lds
call
mov
mov
xchg
gs
dec
push
cmpsb
mov
xchg
adc
into
inc
xor
jmp
mov
into
lods
mov
sub
push
adc
stc
dec
mov
mov
lea
bound
into
pop
xor
out
sti
push
pop
jno
xor
je
mov
xor
inc
mov
push
inc
or
lock
adc
inc
jp
jp
popf
mov
push
adc
mov
shll
add
and
adc
or
adc
lea
leave
addr16
inc
sbb
sahf
mov
jno
icebp
aas
icebp
adc
add
mov
xor
in
pop
cmp
lea
roll
xchg
inc
sub
loope
or
imulb
adc
add
daa
and
fsts
mov
test
mov
dec
jmp
adc
and
cs
xchg
clc
mov
pop
fildll
aaa
mov
or
rorb
aam
imul
aaa
pop
mov
es
or
adc
inc
popa
cmpsl
or
popa
or
push
xchg
imul
mov
or
or
adc
imul
loope
mov
icebp
dec
and
add
add
xchg
inc
icebp
adc
sub
std
xor
adc
icebp
push
jne
sub
std
jb
movsb
cmp
adc
xchg
loop
push
jmp
mov
add
sub
adc
inc
icebp
jge
mov
std
int
je
sub
adc
inc
icebp
in
out
jg
sti
sarb
stos
ljmp
enter
xlat
icebp
xor
pushf
mov
add
cmp
add
or
jecxz
add
imul
fimuls
or
inc
pop
pushf
ds
stos
je
pop
pushf
cs
adc
xor
mov
or
and
sub
jecxz
outsb
cs
outsl
pusha
cmp
icebp
and
shlb
xor
mov
mov
int3
aaa
push
int
jbe
xor
mov
insl
push
push
in
rol
inc
push
fsub
sub
fldl
pop
or
mov
xchg
inc
fimuls
filds
out
cmp
out
mov
xor
insl
mov
jns
sarb
pop
stc
xor
mov
in
adc
lret
lods
divl
xchg
dec
mov
arpl
jae
sub
outsl
dec
jb
cmp
mov
in
js
pusha
sub
push
cmp
data16
jae
popf
adc
insl
loopne
sub
jae
rorb
loopne
lea
push
jmp
jb
and
ror
shrl
xor
jnp
push
scas
sbb
mov
or
fsubrl
fsubs
jg
dec
scas
pop
mov
cmp
cmpsl
outsl
or
stc
mov
pop
or
or
call
jmp
arpl
mov
daa
icebp
addl
jecxz
sub
std
jo
dec
fcoms
test
leave
lods
pop
sub
ficompl
xor
std
xchg
in
daa
xchg
and
and
in
xlat
ret
lds
ret
lods
sbb
add
inc
sub
lds
sub
adc
shll
dec
mov
xor
and
mov
leave
mov
push
add
mov
inc
jno
mov
addl
push
jne
cs
decl
shll
inc
ror
push
in
aad
scas
jl
push
ss
mov
xchg
in
xlat
sub
clc
jp
dec
adc
jl
add
loope
jne
addr16
adc
and
inc
xor
cmp
lret
daa
sub
bound
push
out
in
mov
jne
ss
dec
or
aaa
mov
jno
pop
cmc
push
mov
sub
imul
xor
sub
dec
and
mov
xchg
or
cs
add
scas
jo
dec
fsubrs
jg
cmp
sub
mov
mov
sbb
mov
push
out
inc
jecxz
add
cmpsb
xchg
add
add
lods
data16
pop
popf
dec
stos
mov
dec
repz
xor
or
xor
sbb
cld
insl
aad
add
sub
testb
lahf
or
dec
xor
jmp
out
mov
adc
stos
push
cwtl
mov
out
scas
scas
ret
aaa
push
lods
xorb
mov
jp
arpl
mov
inc
mov
enter
pop
push
hlt
cmp
test
mov
stc
inc
or
and
addr16
mov
jp
push
pushf
mov
dec
les
dec
cmp
and
out
xor
lret
adc
cmp
add
cmp
sub
mov
jb
xchg
pop
cmp
sub
cmp
sub
sbb
jnp
enter
lea
out
cltd
or
jecxz
shlb
int3
mov
cmc
fwait
or
add
rclb
or
in
loop
pushf
popf
sub
pop
add
and
xor
inc
imul
popf
mov
in
jnp
pop
push
shlb
repnz
data16
clc
sub
jecxz
insl
in
push
addr16
ja
icebp
in
data16
aas
imul
sub
rcrb
mov
gs
lret
push
rorl
adc
jo
ljmp
mov
ficoml
nop
sub
inc
fidivrs
sub
sub
pop
adc
sub
mov
fiaddl
out
adc
jno
mov
inc
int3
dec
pmaxub
xor
orl
pop
mov
mov
pop
mov
sbb
add
std
xchg
fucomip
adc
enter
mov
fisubs
jne
mov
mov
cmp
mov
mov
rcrl
fists
fiaddl
pop
or
out
cld
adc
mov
mov
cmp
mov
inc
inc
aaa
rcl
and
cli
xlat
jl
les
data16
fidivs
pushl
adc
add
icebp
fstp
jae
and
pop
adc
adc
dec
xor
xchg
mov
imul
roll
data16
adc
and
int3
add
cld
mov
in
cwtl
or
pop
ss
shl
jl
ljmp
ja
ja
mov
and
cmp
push
lea
addr16
loope
sub
repz
inc
cli
push
shll
push
pop
push
in
or
insl
icebp
leave
xor
ljmp
xorb
pop
mov
rcrl
out
cmp
and
bound
cmp
stos
xchg
xor
xor
std
repz
jb
xchg
in
mov
in
jb
mov
jno
mov
lahf
or
mov
fucomi
dec
in
out
lds
and
jo
cmp
mov
mov
or
or
cmp
mov
ret
xchg
iret
mov
push
inc
test
mov
add
movsl
adc
or
aad
fsubrs
adc
mov
adc
sbb
cs
mov
pop
or
mov
inc
and
cmp
push
add
push
inc
adc
loop
and
xor
cli
adc
mov
pop
shlb
clc
xor
fmul
clc
inc
loop
inc
fadds
imul
and
scas
adc
and
cli
repnz
jecxz
jne
xchg
popf
dec
jmp
jae
jb
icebp
inc
adc
add
mov
or
push
pop
and
movsb
lods
xchg
jo
jg
in
xchg
push
rorl
mov
insl
push
enter
mov
xor
add
insb
xchg
sahf
adc
xchg
or
insb
movsb
lods
pop
sbb
insb
mov
lret
ljmp
pop
fucomip
subl
sub
ja
imul
sarb
jl
into
pop
mov
adc
enter
push
or
jo
adc
mov
jmp
test
mov
add
mov
xor
xchg
mov
jne
dec
push
xchg
and
inc
enter
stos
mov
push
ret
out
jno
xor
daa
mov
cmp
push
and
or
jns
pop
pop
cld
icebp
std
enter
or
cmp
fdivs
imul
jmp
int
mov
push
outsl
inc
pop
push
mov
shl
scas
mov
fcoms
hlt
sarb
fnsave
jbe
mov
mov
or
dec
mov
xor
push
mov
lods
mov
adc
pop
imul
jp
outsl
call
icebp
jb
jno
adc
aas
jae
jo
dec
icebp
out
int3
lret
jae
sub
pop
mov
shl
and
js
push
mov
xor
hlt
iret
mov
out
xor
mov
add
iret
mov
loope
repnz
inc
sub
add
xchg
xor
bound
sub
sub
std
and
rcrl
das
jg
insl
push
dec
addr16
into
cmpb
add
xor
mov
ret
or
aad
shrl
jmp
ljmp
movsl
jnp
iret
repnz
cmpsl
mov
mov
shll
outsb
mov
mov
pop
cs
jecxz
pusha
sahf
test
mov
jecxz
cmpl
inc
mov
int3
stos
sahf
pop
dec
mov
rcrl
scas
ret
and
jl
mov
imul
pop
stc
scas
add
lahf
repz
mov
repnz
jno
bnd
sub
imul
push
stc
jae
jno
repz
std
bound
ja
daa
call
test
outsl
jno
das
cmp
sub
and
roll
lahf
lods
or
mov
cmpsb
and
jae
dec
push
cltd
jl
inc
andl
mov
xor
ficoml
push
xor
imul
adc
imul
or
lahf
sub
shr
cmp
repz
fcoms
sub
shll
sbb
jne
test
mov
insl
cmp
fs
mov
add
xor
dec
sub
sub
rcrb
inc
push
loop
sub
fsubrs
cmpsb
out
sub
adc
xchg
pop
mov
xor
xchg
add
pop
ja
mov
adc
xor
cmp
cmp
mov
inc
adc
notb
pusha
imul
das
fidivs
mov
outsb
adcb
out
xchg
test
shrb
xor
subl
das
das
movsl
shrb
scas
jmp
or
adc
adc
mov
inc
pop
cmp
mov
or
sub
lods
cmp
scas
repz
pop
jle
mov
sub
mov
xor
lods
aam
lods
mov
loopne
repz
repnz
mov
ja
addr16
push
xor
sub
or
jbe
sbb
xor
ja
push
and
in
mov
popf
scas
push
mov
add
imul
mov
in
cmp
jmp
sbb
add
cli
fdivs
repnz
dec
adc
int
or
pop
outsb
xchg
pop
fwait
pop
jb
jno
loope
adc
icebp
mov
or
rcrb
subl
xor
and
inc
mov
jno
push
sbb
lahf
adc
loopne
xor
jns
shrb
stc
in
rep
out
pop
push
mov
xchg
cmpb
iret
xor
jne
push
call
add
out
lahf
cmpsb
lock
cmp
xor
push
xor
int
ds
lds
cmc
int3
xorl
sbb
xor
and
xor
insb
xchg
mov
ret
dec
out
stos
lea
lods
popa
icebp
sbb
lret
ljmp
add
insl
lods
push
sub
add
mov
xchg
inc
sub
dec
rclb
xchg
jae
push
adc
jmp
push
pop
xchg
aas
sub
pusha
jecxz
out
cmpsl
add
fwait
jne
cmp
xchg
jb
and
sbb
jl
xchg
leave
test
mov
fcmovne
xchg
mov
or
xchg
adc
add
pop
imul
adc
jb
lea
fdivs
call
and
dec
sub
jo
mov
jmp
jnp
xchg
sbb
cs
push
xchg
push
cmpsb
dec
dec
mov
inc
or
aad
adc
fisttpl
in
push
jno
mov
out
fcompl
les
adc
sbb
rolb
mov
lea
icebp
dec
cmp
movsb
imul
mov
push
jle
or
into
nop
cs
mov
leave
push
push
inc
push
mov
jb
rorb
sahf
mov
xor
mov
add
xchg
xchg
dec
add
jb
leave
cld
xor
shll
loopne
jg
xor
lret
jp
and
inc
add
adc
or
pop
out
jmp
pop
xor
jb
rorl
test
mov
adc
jecxz
icebp
cs
imul
jmp
icebp
lods
xor
adc
jne
je,pn
jg
inc
scas
mov
adc
fnstcw
jecxz
adc
jg
cltd
adc
pop
inc
dec
scas
xor
xor
and
sub
jg
mov
out
mov
jg
adc
imul
stos
inc
imul
fcoml
push
push
insl
out
and
icebp
dec
std
mov
outsl
loopne
rcl
jae,pn
shrb
push
mov
pop
pop
stos
sub
les
or
xor
jge
cmp
jecxz
or
jecxz
mov
mov
outsl
mov
iret
jmp
xor
push
jns
adc
pop
mov
push
adc
sbb
icebp
sub
jno
cwtl
test
in
out
jno
rol
icebp
ds
nop
mov
push
push
js
lret
mov
mov
and
fidivs
mov
pop
jno
mov
sub
jnp
hlt
ret
xor
movsb
fwait
mov
xor
out
andb
cwtl
shll
xchg
addr16
imul
dec
inc
hlt
adc
hlt
pop
clc
jle
call
xor
int
inc
xor
push
mov
add
push
mov
jb
cmp
xchg
mov
repnz
out
testb
inc
pop
fidivrs
xor
pop
jnp,pn
adcl
inc
mov
popa
repnz
jae
jecxz
push
sti
xor
adc
movsl
lea
or
sarb
and
and
jae
bound
push
jae
out
adc
int
xor
add
dec
dec
push
sbbl
fisubs
rcrl
lea
bswap
push
mov
dec
rclb
in
cmp
rorb
and
xor
outsb
jns
push
sub
leave
add
mov
fnsave
adc
data16
xor
add
lods
xchg
and
int3
cmp
cmpsl
outsb
popf
mov
mov
push
loopne
jb
jge
sti
cmp
inc
mov
xchg
push
sub
sbb
mov
mov
sub
dec
sbb
fisttpl
xor
aas
xchg
lret
push
fmuls
test
loope
adc
inc
sub
pop
and
mov
enter
and
mov
cmpl
xor
in
lods
imul
mov
push
adc
loopne
push
fstpt
hlt
popf
xor
ds
pop
test
lods
jbe
adc
sti
ds
fsub
mov
dec
insl
pop
jl
insl
jmp
fcmovb
nop
scas
es
in
mov
dec
mov
sub
jne
jmp
and
and
stos
push
add
and
pusha
inc
nop
sar
scas
mov
in
incb
ljmp
lret
cmp
and
lods
xchg
sub
xchg
sbb
and
sbb
pop
mov
mov
shll
ja
fnstenv
sub
push
adc
fsubrp
mov
fsubrl
and
shll
shl
lret
and
jo
jne
fsubrp
insl
pop
lods
pop
into
test
inc
xor
in
or
repnz
xor
mov
push
call
ljmp
mov
or
nop
gs
mov
pop
fildll
xor
xchg
adc
rolb
and
inc
or
mov
je
out
add
mov
lret
arpl
push
mov
mov
add
repz
jae
add
adc
dec
lds
lahf
push
in
mov
popa
xchg
aam
cmp
jb
pop
fs
sbb
cmpl
inc
pop
jmp
in
lods
ds
pushf
dec
xchg
sub
push
call
pop
sub
lahf
add
add
jne
dec
push
and
or
dec
inc
add
ret
mov
out
je
cmp
pop
mov
sub
jle
mov
clc
outsl
shl
lret
jp
xor
ret
sbb
xor
mov
cmp
insl
test
pop
insb
mov
dec
and
xchg
push
int
sahf
sub
mov
fnstcw
xor
ret
or
cmpb
sbb
jnp
inc
pop
fisttps
ret
outsb
dec
in
xchg
mov
lea
and
sbb
data16
mov
dec
ret
icebp
jl
pop
cmp
fildll
sbb
imul
xor
jl
hlt
je
in
hlt
or
and
js
jo
out
imul
outsb
dec
scas
mov
mov
mov
xorl
outsb
push
les
insb
and
jecxz
mov
inc
sbb
pop
ficompl
mov
or
fdivr
movsb
and
xchg
and
bound
insl
fmull
pop
out
arpl
push
scas
jnp
pop
dec
xorl
xor
aaa
adc
jmp
jns
popf
lret
jmp
dec
out
ja
pop
jle
pusha
push
shlb
int
aam
mov
push
inc
dec
mov
inc
and
cwtl
rolb
into
pop
sarb
lods
jns
movsl
pop
xchg
iret
jnp
jg
jo
out
sbb
and
std
mov
sub
push
stc
scas
imul
inc
out
sti
mov
loopne
mov
test
loop
mov
push
cs
insl
in
xor
inc
jne
outsb
fcmovne
gs
mov
xor
or
not
xchg
test
xchg
sbb
push
outsb
lods
shll
rolb
mov
jb
mov
fwait
push
inc
leave
cmp
inc
lahf
int
out
mov
xor
into
cmp
xor
popa
inc
rcrb
or
stc
leave
daa
popf
lret
adc
xchg
leave
test
xchg
mov
adc
add
inc
pop
loopne
nop
push
rolb
fs
orl
lcall
lret
inc
ss
lds
inc
pop
jae
xor
and
js
mov
test
fisttpl
mov
push
das
mov
insl
repnz
popf
popf
pop
cld
out
fstpt
pop
xchg
lahf
xchg
xchg
push
flds
icebp
mov
mov
test
std
add
mov
jge
push
jp
call
push
adc
fimuls
or
sub
xor
xor
stos
movl
sub
loopne,pn
gs
or
clc
repz
xchg
inc
inc
mov
popf
pop
repz
xor
into
add
xor
dec
ficompl
dec
dec
lods
repnz
leave
sub
scas
clc
in
rcrl
push
jecxz
jl
dec
repnz
lods
dec
enter
shll
mov
dec
stos
mov
inc
xchg
mov
sub
jbe
jb
push
loope
pop
sub
jae
imul
sbb
int
sbb
sbb
int3
jae
int
lods
adc
push
fidivl
mov
insl
sub
stc
insb
outsl
mov
jge
mov
sub
repnz
xor
dec
je
push
dec
repnz
pop
push
pop
xchg
jl
dec
cmpsb
pop
xor
pushf
ret
jge
or
mov
xor
mov
push
out
cs
ja
lret
push
repz
icebp
or
push
in
add
repnz
out
test
test
out
jecxz
adc
push
fdivp
sbb
jnp
scas
mov
lods
pop
mov
cs
mov
jecxz
loopne
out
adcl
testl
adc
mov
stos
das
mov
jb
imul
adcb
inc
add
jmp
leave
int
or
mov
shr
loopne
push
pop
nop
dec
cld
xchg
daa
adc
insb
cmc
and
aam
add
push
xchg
rolb
adc
mov
jno
dec
dec
ja
push
jecxz
push
xor
xchg
and
push
mov
pop
inc
mov
stos
aam
xor
mov
int3
adc
iret
lods
cmp
loop
inc
mov
cmc
adc
nop
and
dec
adc
or
xor
adc
loope
adc
or
pop
sbb
ficoml
and
sbb
push
imul
inc
xor
mov
xor
scas
psadbw
cltd
out
add
fcmovbe
out
pop
jecxz
add
add
lock
subl
ja
andb
imul
into
test
scas
jmp
int
or
xor
imul
scas
sub
xchg
popa
mov
xor
xor
nop
aas
mov
and
stc
retw
data16
mov
push
js
or
mov
mov
sub
push
and
pop
and
pop
out
lcall
jmp
jmp
mov
xchg
mov
aas
cmp
daa
add
and
fimull
pushf
lcall
add
and
dec
mov
stos
std
pop
mov
mov
xor
out
xorl
and
cmpsl
fdivs
in
out
subl
das
call
fdivrl
jne
fistl
push
xlat
mov
iret
rclb
leave
in
adc
mov
dec
inc
neg
xor
loope
into
lahf
insb
sub
mov
fwait
add
inc
fistl
xchg
mov
out
push
in
imul
sarb
sbb
dec
cwtl
push
dec
dec
stc
out
daa
and
and
push
dec
pop
pop
add
orl
out
cmp
clc
out
cmp
or
adc
rclb
push
icebp
movsb
xchg
ret
aas
pop
imul
movsb
and
mov
stos
sbbb
xorl
and
adc
mov
mov
into
mov
ss
or
fisubrs
enter
push
inc
popa
jg
shrl
xchg
add
pop
imul
adc
cmp
cltd
stos
push
out
out
je
jmp
mov
and
jp
jle
in
jo
jae
lods
pop
data16
inc
int3
imul
dec
mov
mov
mov
jno
xchg
or
push
push
sbb
inc
mov
adc
jb
mov
insl
xlat
push
jne
movsl
cli
fisubs
and
jb
bound
cli
pop
jle
mov
data16
scas
addl
and
xor
pmulhw
add
scas
mov
bswap
movsl
jb
or
icebp
insl
aas
push
jb
jae
mov
ds
rolb
les
sbb
xor
jns
cmp
arpl
mov
pop
jl
jne
mov
loop
fsub
dec
sub
jo
adc
in
mov
xor
cmp
lahf
dec
int
lods
aam
std
push
sub
inc
cmpsl
int
dec
lea
pop
nop
push
cmp
lret
xor
inc
int3
or
loopne
inc
jno
sub
dec
int3
nop
stos
add
push
xor
sub
int3
dec
mov
std
push
xchg
mov
mov
cs
es
fdivrs
xor
test
loop
insb
inc
lea
jb
mov
mov
xchg
and
outsb
sub
and
sub
cs
mov
movsl
ss
or
int3
repnz
xor
and
xor
mov
imul
pop
addr16
pop
movb
loope
mov
dec
int3
test
jecxz
loope
and
xor
addb
lods
rorb
outsb
out
rcrl
icebp
mov
add
les
in
sub
sub
iret
jne
jno
adc
mov
jne
jmp
daa
out
mov
pusha
inc
xchg
mov
push
jno
jno
add
in
pusha
cmp
roll
lods
lods
mov
ss
add
icebp
and
or
push
imul
bound
das
inc
push
in
jno
popa
cld
loop
jecxz
add
and
add
dec
jno
outsl
mov
cmp
lods
xor
cmp
decl
and
inc
mov
mov
imul
xchg
ss
mov
and
mov
jbe
adc
repz
xor
mov
sbb
jo
outsb
in
cmpsl
mov
jge
inc
clc
lods
and
ljmp
shlb
repz
stc
mov
add
lret
popa
not
xor
icebp
or
xchg
push
subl
into
lea
popf
int
inc
cmpsl
xor
lret
xor
in
imul
aad
mov
dec
mov
push
jne
adc
stos
xor
push
cwtl
and
sub
xchg
mov
mov
adc
shlb
nop
jno
scas
call
inc
je
xchg
testl
dec
sqrtps
mov
lea
jl
mov
orb
adc
mov
data16
fmuls
data16
cmp
adc
rorb
and
xchg
stc
adc
cld
inc
fwait
xor
cmp
and
bound
popf
fisttpl
int3
cmpl
jge
mov
loope
or
cmp
pop
cmp
jp
ret
stos
aas
mov
sub
int
xor
scas
cmp
dec
dec
repz
ljmp
and
jno
inc
in
xchg
sbb
adc
xor
add
fidivrs
loopne
mov
jmp
adc
test
lods
push
cld
insb
aad
cld
lcall
test
add
std
lret
adc
xchg
mov
nop
push
mov
cli
xchg
mov
cs
and
xchg
es
mov
adc
divb
xor
mov
cld
aas
jno
mov
mov
insb
dec
gs
bound
pop
scas
jbe
aas
adc
pminub
adc
loop
jo
or
mov
rclb
mov
in
fcompl
fistl
fcoml
or
xor
dec
xor
into
repnz
xorl
in
mov
jecxz
test
mov
mov
sub
xor
in
mov
cmp
addr16
pop
push
bnd
jo
in
mov
pop
ret
add
ljmp
mov
gs
fcoml
push
jp,pn
mov
test
adc
scas
in
pushf
mov
add
dec
mov
ja
sbb
xchg
sub
cwtl
pusha
ss
jae
cmp
xor
fldl
and
or
mov
cs
or
sbbb
scas
in
xor
and
xor
pop
ljmp
jp
push
je
popf
insl
dec
adcb
adc
lret
pop
sbb
mov
scas
insl
insb
fidivs
jmp
mov
leave
mov
fwait
outsl
push
stc
outsl
repz
stos
sub
or
inc
or
pop
pop
and
inc
test
popf
cli
fidivl
cmp
push
mov
inc
xchg
roll
inc
add
jge
stos
out
xor
mov
fcomip
add
cmp
xchg
adcl
inc
push
mov
sub
in
xor
sbb
rcrb
insb
push
jnp
aad
loop
fwait
orb
rolb
movsb
mov
movsb
mov
inc
movsb
inc
push
xchg
aam
bound
and
sbb
jae
inc
cs
outsb
arpl
fcompl
in
adc
lea
mulb
xchg
dec
cs
repz
lock
add
pop
icebp
adc
rep
push
xor
add
dec
and
repnz
cmp
aaa
lret
cmpsl
shlb
and
push
pop
and
test
mov
add
push
sbbl
push
daa
sub
loope
in
sbb
mov
out
push
jl
pop
add
aas
ss
jbe
fbstp
fistpl
xlat
stc
ret
fcomps
add
mov
mov
sub
popa
out
xor
shlb
cmp
add
sbb
sbb
insl
movsb
add
cmp
std
mov
jae
pop
bound
loopne
negb
lret
test
jmp
imul
roll
repz
and
mov
xorl
mov
mov
mov
add
and
ljmp
or
mov
icebp
repnz
repnz
enter
inc
mov
clc
fimuls
jbe
mov
mov
and
inc
aaa
push
mov
xor
xor
movsb
daa
mov
mov
mov
jne
repnz
cmp
dec
xorl
lea
aad
add
or
dec
mov
or
scas
mov
sbb
outsl
and
push
cmp
mov
ja
and
xchg
jle
iret
ljmp
stos
fcmove
mov
lretw
jbe
xor
cli
or
and
jl
xor
adc
scas
xchg
inc
fidivs
je
std
psrlw
ror
pop
inc
mov
mov
repz
das
out
stc
add
std
adc
iret
jg
divb
cs
mov
sub
adc
cmc
jp
jecxz
jecxz
cwtl
or
mov
cmp
mov
in
sbb
cli
arpl
sub
lret
pop
das
push
pop
xchg
adc
mov
jle
shlb
cs
jmp
xchg
push
ja
cmpsl
cltd
adc
movsl
xchg
jnp
popf
mov
push
aas
std
and
out
push
cs
mov
pop
jnp
pop
push
pavgw
mov
pusha
scas
cmp
leave
mov
rclb
daa
adc
repnz
sub
pop
std
or
outsl
xor
mov
arpl
mov
cs
sub
or
bound
enter
lods
adc
xchg
popa
stc
cmp
mov
mul
lret
mov
sbb
sub
je
jb
push
xchg
lock
or
xor
mov
call
xchg
inc
xchg
and
loopne
test
xor
xor
icebp
and
mov
sbb
int
xlat
outsl
sbb
sbb
lahf
mov
ss
daa
mov
xor
xchg
or
push
leave
mov
out
pop
movsb
dec
or
jne
dec
sbb
dec
or
adc
aad
sahf
mov
push
popa
jge
pop
add
je
and
xor
push
adc
mov
mov
cmc
add
xchg
xchg
add
mov
jl
xchg
movb
filds
out
adc
or
outsl
sbb
shr
sbb
or
pop
fldl
mov
fsubl
xor
pop
jae
push
and
mov
jnp
jo
dec
and
sar
sbb
xchg
jnp
sub
cli
xchg
repnz
dec
jmp
into
test
icebp
repz
xor
mov
outsl
mov
divb
mov
cmp
dec
fucomip
icebp
mov
fwait
enter
repnz
adc
and
xchg
ret
pushf
and
or
mov
add
mov
jne
lret
icebp
xchg
xchg
and
mov
sti
add
jb
cmp
jno
outsl
into
xchg
scas
ficomps
pushf
data16
and
inc
roll
ds
dec
into
xchg
cmp
outsl
dec
pop
mov
cmp
jecxz
or
dec
or
das
daa
outsl
out
mov
pop
mov
inc
fidivs
outsl
cmp
mov
lret
es
xchg
push
repz
mov
mov
jecxz
jg
pop
rclb
add
ja
mov
out
lds
int3
mov
or
cmpl
out
or
or
sbb
icebp
insb
push
fstpt
pop
xchg
jbe
pop
fs
lods
pop
imul
adc
mov
mov
push
roll
mov
xor
mov
xor
sbb
mov
adc
loop
adc
hlt
cmp
xor
jecxz
push
inc
push
lahf
mov
adc
mov
push
mov
stc
arpl
sub
mov
mov
je
cmp
sub
sub
jmp
stos
jno
jmp
sub
ljmp
mov
and
adc
mov
mov
cmpsb
sub
mov
mov
push
mov
fdivs
loopne
and
sub
jno
xchg
insb
scas
mov
jl
lcall
sub
or
lcall
jno
repnz
pop
mov
sub
scas
stos
dec
imul
icebp
aaa
in
shlb
pop
mov
cld
sub
das
inc
icebp
fisubrl
testl
mov
xor
xor
xor
adc
hlt
popa
sbbl
sub
push
jno
test
stc
xorl
xor
insl
ljmp
lods
inc
ret
sbb
arpl
add
mov
and
pop
in
popf
xor
push
adc
cmp
femms
jge
popa
pushfw
movsb
inc
ss
inc
and
scas
insl
mov
repz
fstl
rcll
les
ss
into
jle
xchg
icebp
mov
lods
cmp
add
rcll
icebp
shl
add
shrb
mov
pop
or
add
xor
fimuls
dec
mov
cmp
pop
xor
stc
aad
rcll
mov
icebp
xor
ja
xorb
jecxz
fcoml
adc
lods
cmp
cmp
adc
cmp
cmp
mov
inc
scas
call
xchg
xor
pop
add
xchg
and
mov
decl
stos
out
sahf
dec
or
mov
sbb
icebp
outsb
imul
mov
lods
shl
mov
cltd
bound
or
inc
fsts
movsb
mov
pop
jge
test
iret
sub
dec
xchg
loopne
dec
sub
push
cmp
ds
addb
mov
out
push
pop
aaa
leave
push
into
inc
xorl
mov
into
std
mov
cmpsb
add
xor
mov
xor
testl
xor
insb
insb
dec
bound
rclb
scas
in
mov
in
cmc
icebp
insl
movsl
loope
jne
icebp
fwait
aad
lea
jno
adc
fidivs
cmc
jns
jecxz
ret
mov
imul
out
addb
in
movsl
out
enter
or
xorb
sub
dec
dec
jp
sbb
insl
leave
mov
iret
ror
xchg
push
outsl
lods
push
jb
sarb
cmp
leave
sbb
mov
adc
ds
in
push
mov
cmp
ret
inc
nop
adc
xchg
xor
ret
sbb
xor
outsb
cmp
call
iret
fbstp
adc
mov
and
outsl
insl
jge
inc
sub
rol
jmp
cmp
sub
mov
mov
ret
leave
xchg
lods
pop
repz
cltd
bound
int
dec
nop
leave
in
insb
mov
cs
add
jo
cmp
xor
pop
mov
flds
dec
jne
adc
imul
add
repz
imul
out
pop
cs
pop
xor
push
cs
enter
xor
and
dec
in
jno
addr16
cmpsl
fldcw
fucom
push
imulb
mov
in
scas
or
sub
and
aam
popf
mov
and
mov
outsb
cmp
icebp
pop
mov
sbb
int
add
and
jo
imul
add
insl
cs
adc
sbb
aas
jl,pn
and
adc
shll
xchg
jecxz
test
add
mov
fbld
aas
push
jnp
orb
cmc
jmp
jno
cmp
enter
ds
subb
push
daa
out
mov
jle
pop
fmuls
mov
int3
negl
add
addr16
xor
lcall
add
stc
popa
popf
fdivs
add
aad
cmp
outsl
rcr
jle
xor
dec
jmp
imul
not
enter
mov
insl
repnz
rorb
or
std
rclb
push
adc
mov
les
in
and
adc
adc
xor
add
mov
mov
movsb
subl
sbb
cmc
test
jp
pop
push
lahf
or
in
enter
jnp
mov
lods
cld
adc
add
icebp
xor
xor
pushf
jns
movsb
pop
cs
sbb
xor
js
adc
repnz
adc
inc
xor
xchg
movsl
aaa
test
imul
dec
add
test
or
imul
adc
xorl
dec
adc
fwait
adc
xor
stos
lods
ret
fiadds
add
outsb
stc
push
bound
std
sub
jns
cmp
adc
add
popa
insl
jmp
dec
aad
mov
xor
sbb
mov
push
xchg
pop
xor
push
sub
xor
jno
repz
stc
dec
rolb
push
incb
loop
jge
xchg
mov
mov
pop
enter
outsb
and
fsubrl
int
push
xor
popa
jo
cltd
sub
pop
add
inc
xchg
gs
push
shll
fidivl
leave
lret
icebp
bound
icebp
mov
jns
icebp
int3
cs
les
cli
int
push
fldt
pop
jle
xchg
pop
push
jmp
push
or
mov
pop
sahf
sub
insb
pop
jmp
into
sbb
stos
adc
cwtl
mov
jne
pop
jmp
xor
xor
scas
ljmp
cmp
loopne
sbb
mov
pop
adc
sub
xchg
mov
cmp
or
aad
mov
push
ret
mov
sbb
and
xchg
mov
sub
or
imul
aas
mov
and
inc
orl
pop
ror
jecxz
imul
addl
sub
int3
icebp
mov
ss
adc
jne
mov
dec
mov
shrb
cwtl
pop
outsb
in
icebp
fiadds
in
mov
push
arpl
frstor
add
cmpsl
mov
xchg
icebp
sbb
xor
jnp
outsl
xchg
or
lea
adc
sarb
or
repnz
xor
and
fmull
jg
xchg
cmp
cltd
cmp
adc
mov
in
mov
sarb
cmp
bound
push
cmp
sbb
int
mov
leave
add
adc
sbb
adc
xor
out
out
imul
or
mov
lret
cli
lods
inc
adc
daa
insl
bound
or
jl
mov
pop
nop
adc
jp
int
mov
aaa
sub
leave
subl
jle
add
and
xor
cmc
adc
scas
jno
xchg
stc
mov
int3
xchg
fsubp
and
jecxz
adc
mov
mov
inc
jg
push
int
sub
into
roll
jmp
xor
fimull
sbb
imul
in
lahf
fisttpll
and
icebp
out
repnz
push
repz
and
sub
icebp
xor
mov
adc
rclb
and
stc
das
cmc
pop
stc
fstps
fcom
xor
push
xor
jmp
test
jmp
sti
lahf
out
dec
scas
int
jo
push
outsb
xor
addl
mov
imul
ja
adc
mov
ss
popf
hlt
jbe
out
lods
sbb
repnz
ja
test
pop
sub
repnz
loop
lock
loop
xchg
les
sbb
xor
xor
or
xor
sub
icebp
jb
add
jb
jne
addr16
mov
dec
int
in
dec
in
js
les
icebp
xchg
lret
pop
icebp
enter
mov
ja
arpl
int3
pop
dec
insb
stos
pop
sub
pushf
jp
fists
in
aas
dec
dec
fdivrl
jmp
mov
sbb
adc
mov
fisubs
shrl
xor
jb
lahf
jg
movsb
cmp
sbb
imul
outsl
mov
mov
jge
pushl
das
jmp
push
jo
in
adc
push
jno
sub
xchg
into
ret
cld
outsl
lcall
outsl
lret
into
lods
ds
cmpb
divb
adc
fimull
adc
int3
dec
shlb
push
or
rcll
mov
mov
or
xlat
daa
or
jns
rcr
ljmp
xchg
outsb
ljmp
hlt
mov
jno
add
clc
dec
adc
xchg
clc
xchg
push
mov
xor
inc
subb
xor
ljmp
push
inc
fstl
test
andl
xchg
adc
rorb
mov
repnz
push
mov
cmp
lods
dec
xchg
push
and
sbb
test
bound
and
ror
ljmp
mov
jmp
sbbl
dec
ja
lods
pop
dec
idivb
adc
scas
sub
mov
xor
popa
sub
ret
ljmp
das
repnz
mov
xchg
mov
mov
lret
jno
xorl
xor
xor
insl
stos
fisttpl
inc
inc
insb
stc
lret
jns
or
jbe
adc
in
fs
icebp
mov
pop
xor
lahf
add
pop
sub
jno
sbb
inc
xor
sti
ss
rcrb
shlb
pop
test
std
rolb
ljmp
cltd
mov
adc
pop
jae
repz
mov
mov
or
xorb
or
xor
or
xor
sub
mul
adc
in
or
jns
sbbb
std
push
out
fstpt
cli
pop
and
lods
sbb
add
push
shlb
cmp
add
cmc
push
mov
insb
jns
lahf
pop
or
add
xor
out
xchg
push
aas
push
fcompl
call
or
mov
test
lahf
jg
loop
fsubl
pop
inc
jnp
jne
pushf
incl
adc
jmp
push
xor
test
sub
ja
stc
mov
mov
lahf
in
data16
mov
dec
jge
jae
clc
scas
aaa
adc
mov
sub
sti
mov
xchg
sbb
adc
out
shrb
lret
insb
out
sbb
xchg
jo
jl
into
movsb
lahf
xor
mov
popa
mov
lds
int3
ss
jge
inc
mov
and
scas
mov
sarb
sub
dec
int3
mov
or
popf
add
and
lods
mov
dec
xor
sub
mov
test
out
xchg
cli
and
jno
clc
pusha
roll
pop
add
xor
std
sub
ret
sbb
icebp
dec
add
or
jno
sbb
daa
dec
xchg
add
sub
stos
lods
cmp
pop
jmp
lret
add
adc
rorb
repnz
sbb
jne
fucomp
add
ljmp
lods
jnp
sbb
lcall
inc
jno
sahf
fucomp
cmp
int
xor
adc
mov
mov
shr
lret
and
mov
xor
adc
sub
xor
bound
decl
inc
add
outsb
sbb
adc
pop
dec
in
xchg
cli
xor
jno
clc
push
add
icebp
mov
adc
xor
cmp
jnp
cmp
jle
mov
pop
or
jno
sub
sub
xlat
xchg
cmp
inc
xchg
inc
and
icebp
outsl
imul
xor
cmp
or
cmp
fsubrl
mov
clc
inc
jno
pop
or
lahf
adc
sbb
mov
lods
in
roll
mov
sub
jno
fbstp
dec
or
repnz
sbb
imul
add
adc
int3
pusha
or
lods
adc
xor
shll
sbb
subl
out
fwait
ss
adc
xor
push
daa
jns
lea
adc
xor
loopnew
lods
or
cld
xor
lods
js
in
cmp
cwtl
clc
les
push
pushf
imul
xor
outsl
xor
push
imul
mov
enter
loopne
outsl
dec
fcoms
push
xchg
sub
add
shrb
adc
cmpsl
cmpsb
push
ret
fmul
loopne
xor
adcl
or
fisubrl
decb
dec
call
sub
out
pop
jle
push
stc
xchg
add
mov
addr16
lret
icebp
repz
cmp
shll
addr16
adc
daa
mov
pop
jno,pn
sub
adc
mov
jmp
das
sub
andb
ljmp
outsl
mov
dec
ficoms
push
push
pusha
xor
mov
jnp
rclb
adc
and
inc
mov
inc
cs
clc
imul
popa
into
dec
xchg
jle
enter
shl
aad
cwtl
mov
imul
out
xor
pusha
shrl
cli
and
xor
jmp
dec
adc
lods
sbb
repz
cmp
std
into
push
mov
scas
shl
add
ss
mov
jge
jecxz
inc
jae
sahf
pop
adc
dec
sub
sub
adc
sub
aaa
push
lea
and
mov
sub
loopne
insb
das
sbb
and
not
mov
inc
ss
out
divb
ljmp
popf
sbb
xor
jno
or
xchg
sbb
lods
into
sbb
icebp
jecxz
pop
sbb
and
inc
shrb
leave
jae
mov
insl
cli
mov
fistpll
cmpsl
fimuls
pop
insl
out
push
dec
adc
cmpsb
pop
shlb
pusha
jbe
mov
ret
mov
cmp
add
mov
push
dec
and
mov
push
bound
xchg
jno
stc
pop
sub
adc
dec
out
stos
jns
xchg
mov
inc
pushf
pop
and
push
jmp
shll
xor
icebp
lea
jae
imul
mov
adc
mov
mov
jno
push
mov
in
int3
test
push
sub
in
push
mov
loop
inc
int3
pop
cmp
adc
loop
imull
xchg
xor
jle
imul
icebp
inc
and
rorl
stos
jecxz
pushf
push
out
add
insl
and
test
popa
pop
dec
mov
fdivs
pop
scas
outsb
xor
rol
adc
xor
imul
out
xor
repz
mov
mov
cs
adc
scas
cmpl
loope
out
cmp
pop
dec
jg
xorb
sub
imul
outsb
sbbb
sub
cmp
adc
jno
bnd
test
fldt
shl
jbe
mov
adc
rclb
mov
mov
jbe
cmpsb
je
mov
push
jg
jmp
imul
hlt
loope
rclb
xor
pop
inc
sub
lret
xchg
lret
into
cltd
inc
cld
xor
push
sub
ds
mov
lods
add
sub
mov
xor
shlb
adc
push
cmc
cs
jp
xchg
test
outsb
cmp
fistl
jmp
dec
jbe
pop
xchg
adc
cs
mov
pop
repz
xor
pop
jp
sbbl
mov
out
mov
clc
sub
jecxz
and
sbb
ret
ds
in
orb
mov
adc
aam
adc
movsl
mov
or
cmp
jae
out
xchg
cs
and
sub
add
mov
push
cld
rcll
or
data16
mov
pop
inc
dec
fcmovnbe
mov
inc
or
jecxz
in
jmp
repz
add
addl
xchg
cmp
xchg
addr16
inc
fidivrs
das
and
aaa
pop
pop
add
lea
aas
daa
sbb
icebp
jae
dec
nop
adcl
pop
adc
loopne
cs
dec
cltd
adc
loopne
sub
scas
pop
lea
or
sub
push
adc
outsl
inc
sbb
sbb
arpl
sub
sbb
fidivs
xchg
shll
aam
sahf
lods
cmp
mov
add
pop
and
mov
fldcw
dec
mov
and
outsb
mov
jne
sub
jno
sbb
mov
ret
out
cmp
cmp
shll
or
pusha
xor
push
fs
out
dec
faddp
sub
ret
push
in
mov
out
pop
adc
nop
sbb
lods
and
nop
sub
pushf
inc
xor
add
mov
pusha
js
mov
xor
subl
adc
mov
xor
shlb
sub
mov
sbb
mov
icebp
jmp
mov
mov
xor
aam
and
cwtl
xor
test
arpl
call
mov
iret
xor
xchg
in
cmp
mov
cmp
imul
inc
iret
jle
pop
jae
inc
int3
int
mov
mov
repnz
in
adc
mov
aas
out
xchg
lea
sarb
lea
or
mov
shll
sbb
mov
mov
sarb
jge
out
add
sub
fsubrl
mov
mov
mov
lea
lea
popa
add
popf
pop
cmp
or
jmp
mov
push
mov
jg
xchg
addr16
sub
jecxz
scas
ficoms
in
add
xchg
push
outsb
popa
pushf
or
scas
pop
cmp
push
mov
scas
xchg
cmp
sbb
xchg
bound
outsb
sti
dec
sub
jae
lret
out
call
nop
dec
loop
les
dec
test
sub
test
push
mov
jbe
push
xchg
push
and
sub
jmp
jbe
mov
inc
inc
or
xchg
add
ficoms
aam
bound
and
lahf
add
repz
xchg
or
jne
divb
sbb
rcrl
aam
cmp
scas
fstpl
cld
cmp
lret
lods
adc
dec
jnp
fnstenv
sbb
or
sbb
jp
loope
dec
sahf
xchg
pushf
xor
jns
jb
adc
mov
mov
das
imul
arpl
icebp
sub
add
iret
and
add
cmp
in
mov
cmp
cltd
jle
rcr
cmp
adc
inc
pop
fwait
xchg
cld
and
cmpsl
dec
popf
mov
dec
cmp
dec
lahf
repz
sub
cli
test
mov
outsl
adc
ljmp
imul
jb
jno
movsl
mov
push
movsl
cmp
rcrb
pop
repnz
xor
hlt
repnz
loopne
pop
jne
jmp
pop
jno
test
xor
mov
mov
sub
xor
xor
sbb
test
lret
divb
jae
stos
rclb
adc
mov
jg
dec
add
rolb
mov
rcl
fcmovbe
sbb
stos
adc
jnp
inc
fcmovbe
js
adc
jae
out
inc
rcrb
mov
sbb
in
scas
jno
xor
cmp
pop
pop
repz
addr16
push
cmp
sar
or
mov
mov
cmc
jo
pushf
jecxz
dec
xchg
cli
mov
cltd
repnz
in
mov
mov
mov
lret
shl
fnstenv
loop
outsb
push
mov
imul
or
mov
pop
cmp
cmp
jge
or
loopne
and
mov
fwait
adc
imul
xor
movsb
ja
stos
popf
adc
loope
add
nop
sub
mov
xchg
adc
mov
jae
mov
xchg
cmp
push
xor
adc
sbb
jno
inc
mov
fistpl
jg
inc
cmpsl
pop
lea
inc
jne
xor
xchg
imulb
test
dec
shll
out
mov
mov
jno
pop
mov
imul
notl
jl
ret
sub
jo
cmp
outsl
jno
icebp
out
jg
test
addb
pushf
sbb
pop
aaa
mov
xor
mov
insl
inc
ja
cld
and
negb
fwait
jae
rorl
add
pop
add
jle
pop
ficoml
mov
fdivs
mov
loope
adc
xor
inc
aas
adc
xor
push
gs
fcoml
icebp
scas
pop
leave
add
bound
pop
aad
in
adc
and
fcoml
jne
insb
inc
dec
insl
in
sahf
adc
push
xchg
xor
or
loop
and
mov
nop
fldl
xchg
xchg
xchg
andb
jo
and
jmp
push
divb
lods
loopne
enter
jnp
negb
jo
dec
mov
mov
ljmp
cmp
xor
repnz
xor
push
fimuls
ret
mov
jb
out
jb
adc
adc
sbb
add
jno
mov
pop
cmp
adc
in
pop
sub
repz
popa
mov
pop
xchg
icebp
inc
mov
lea
xchg
dec
adc
xor
xchg
cltd
outsl
cmc
out
int3
adc
sti
xor
int
fs
inc
lcall
test
ljmp
or
or
mov
xor
inc
cmc
mov
iret
mov
xor
imul
sbb
into
repz
dec
adc
sbb
pop
cld
sarb
nop
pop
repnz
pop
jns
mov
test
fmull
bound
adc
mov
data16
jnp
rorl
mov
fs
clc
loope
cmp
aaa
rclb
cmpsb
mov
xchg
and
jno
jge
andl
adc
xchg
xor
cmpsl
aaa
or
xor
scas
cs
jne
dec
sub
ljmp
sub
dec
xor
cli
int
xchg
imul
adc
out
nop
int
xchg
push
mov
std
dec
cmp
cmp
lret
or
jecxz
inc
outsb
and
cmp
or
and
jecxz
mov
ret
sub
or
cmp
push
aas
xchg
enter
hlt
mov
movsb
adc
popl
jmp
or
int3
insl
out
xor
jne
add
push
xchg
test
push
insl
jb
out
sub
push
mov
xchg
jo
ds
pop
pop
in
les
stos
into
arpl
xor
sbb
fsubs
jb
sbb
stos
shrb
mov
loop
push
mov
std
xchg
int
pop
cwtl
or
shrb
add
insl
jns
dec
jae
imul
mov
xor
mov
pop
daa
pop
loope
sbb
imul
andl
aam
outsl
in
rorb
xchg
sub
cmc
xor
jne
scas
mov
xlat
mov
push
mov
cmp
sbb
mov
stos
push
sub
insl
sbb
aas
xor
stos
mov
les
pop
rorb
inc
jns
adc
pop
adc
std
adc
cmc
mov
subl
loopne
sti
mov
fwait
mov
loope
callw
ljmp
pop
addb
mov
adc
ds
sbb
int3
jecxz
scas
imul
cmp
jae
mov
insl
out
push
inc
cli
out
inc
lods
mov
mov
jae
ret
clc
dec
out
leave
rcl
push
loopne
lahf
xchg
mov
ret
insl
push
or
es
xor
adc
pop
imul
cwtl
dec
or
xor
rclb
xor
xor
in
bound
mov
mov
mov
or
or
outsl
imul
cld
add
mov
ljmp
movsl
insb
xor
dec
lods
cmpsb
insl
or
ljmp
shll
stos
rorb
and
add
scas
sub
pop
add
cmc
out
lods
jmp
mov
push
in
iret
add
push
mov
lahf
dec
test
scas
das
sub
fwait
sbb
xlat
adc
lods
mov
adc
cli
shlb
insl
lods
jne
icebp
pop
shll
js
adcb
jnp
movb
dec
cmp
or
repz
test
test
mov
enter
lret
outsl
jmp
lret
mov
insl
ds
push
add
lds
outsb
and
dec
icebp
clc
js
inc
iret
movsb
cmc
shrl
adc
insb
shrb
sbb
outsl
movsb
add
or
adc
stc
scas
cwtl
clc
lods
ret
nop
sub
repnz
add
sbb
sub
arpl
int
lods
in
push
xchg
add
stc
mov
test
add
mov
lods
repnz
sbbl
ljmp
adc
lcall
cs
sahf
test
popa
pop
fs
pop
mov
in
mov
lea
adc
outsl
in
xor
iret
lods
pop
cwtl
repz
ljmp
testl
xchg
sub
test
sahf
mov
imul
dec
cltd
fstps
enter
lods
jns
mov
sbb
inc
jno
add
mov
sbb
or
jmp
jae
loopne
and
mov
insb
or
scas
imul
inc
outsl
imul
xchg
pop
bound
cmp
lret
xor
ss
rcll
mov
pop
addr16
inc
xchg
adc
push
xchg
repnz
fisubrl
jnp
mov
sub
mov
in
scas
xor
sub
jl
xor
sbb
add
mov
pushf
and
and
mov
fs
jbe
out
mov
jnp
mov
ffree
aaa
and
xor
test
das
repnz
fsubrl
faddl
fsubrl
stos
xor
imul
sub
ss
xor
jmp
mov
mov
xor
insb
mov
xchg
das
outsl
aas
and
in
or
mov
enter
movsl
fcomps
enter
fdiv
sub
popf
ret
dec
rcrb
jbe
rcrb
das
and
mov
or
mov
or
xor
sbb
cmp
and
aaa
xor
push
xchg
and
repnz
imul
lds
addr16
repnz
xor
insb
sub
outsl
dec
in
in
inc
jo
xor
scas
xchg
popa
clc
jb
mov
add
int3
jns
mov
or
cmp
mov
call
mov
enter
adc
dec
enter
mov
push
rorl
shlb
and
pop
dec
insl
ret
rolb
popf
cmpb
in
call
notl
ja
mov
mov
xor
push
inc
int3
mov
xor
push
mov
pop
sti
insl
stos
adc
out
out
mov
pop
or
sbb
adc
sub
ljmp
mov
scas
mov
dec
lea
call
adc
dec
sub
mov
lods
inc
sbb
inc
xor
fcomps
add
dec
mov
pushf
pop
adc
jae
sub
int
lods
mov
xor
jo
aaa
rolb
das
push
mov
cmp
sub
add
adc
lods
dec
outsb
test
xor
mov
xor
scas
outsb
mov
jae
adc
sbb
test
cmp
mov
lea
inc
push
push
sub
xor
cmc
shll
inc
mov
ss
jb
adc
mov
add
ss
in
lahf
cmp
fisttps
mov
ljmp
ss
cmp
out
cli
ret
rolb
repnz
cltd
or
inc
add
inc
mov
cmc
call
lret
adc
test
icebp
mov
and
mov
outsl
mov
pop
or
adc
data16
mov
xor
shrb
outsl
cmpsl
shrl
lods
mov
cs
sub
jb
and
sub
sub
push
shrb
push
enter
and
xor
mov
ja
pop
jno
cwtl
into
in
push
call
outsb
sub
xor
adc
xchg
leave
jle
or
in
int
loopne
and
mov
jns
push
test
bound
popa
pop
sbb
dec
push
xor
sar
cmp
pop
loopne
call
xor
dec
insl
das
or
push
imul
scas
or
stc
xor
pop
mov
pop
mov
jne
outsl
cmp
icebp
mov
dec
aam
repz
aaa
and
into
das
adc
inc
pop
rclb
repnz
jl
jb
jo
sub
or
outsl
rorl
ljmp
add
push
sbb
ljmp
pushf
push
sbbl
dec
mov
lods
out
or
inc
add
mov
bound
js
mov
incb
mov
inc
pop
xor
aam
jne
sahf
push
mov
dec
mov
sub
test
scas
testb
mov
je
jge
pop
mov
jae
xor
cmp
popf
cs
inc
mov
loope
pcmpgtd
push
dec
imul
out
jbe
push
inc
rcrb
stc
mov
push
push
and
or
cmp
insb
push
cltd
xchg
pop
cs
xor
add
push
push
hlt
pop
dec
mov
cmp
xor
mov
bswap
adc
aas
or
lcall
xor
adc
sub
inc
aas
fwait
sub
insl
xchg
je
or
mov
in
cmc
push
dec
dec
sub
mov
mov
insb
arpl
mov
pop
fldcw
push
out
push
mov
icebp
sbb
movsl
mov
xor
push
je
sbbb
int
xor
pop
in
xor
xchg
xchg
xchg
ror
cmp
lret
fistps
or
pop
iret
inc
xor
bnd
inc
pop
movsl
adc
in
jl
test
call
xchg
test
and
and
repz
hlt
bound
jle
jecxz
jae
rcrb
scas
lds
mov
xchg
dec
mov
add
push
pop
mov
out
iret
and
xchg
adc
or
loope
lea
enter
aam
leave
loop
mov
out
lods
and
das
jmp
call
rclb
scas
stos
stc
aaa
cltd
shrl
push
mulb
fstps
pop
pop
pop
pop
outsl
jl
inc
or
mov
stos
pop
fnop
jno
fists
and
shlb
jle
and
repz
mov
mov
inc
push
push
and
sarb
pop
notl
fsubr
outsb
add
scas
pop
inc
nop
loop
outsb
jno
lcall
bound
out
cmpsb
mov
or
cmp
push
mov
jne
in
data16
or
psubb
add
jl
xchg
push
dec
out
mov
rorl
test
lock
sub
in
bound
sub
mov
orl
cmp
xor
in
inc
push
mov
and
fcoml
bound
mov
xchg
mov
imul
mov
push
mov
xlat
outsl
scas
adc
pop
sub
jne
sub
nop
pop
rcl
in
cmp
cli
add
fs
call
outsb
or
das
adc
shlb
xor
jae
int
je
in
jno
icebp
adc
add
sub
sbb
lea
loop
adc
ja
int3
sub
inc
fadds
loop
mov
xchg
mov
aaa
outsb
xorb
out
fisttpll
and
inc
push
xlat
cmp
jl
push
ljmp
inc
into
nop
imul
test
jecxz
adc
sub
int3
add
sbb
lea
addr16
jae
and
jl
jmp
shrb
pop
ss
add
insl
test
leave
add
in
adc
jae
cmp
inc
movsb
add
and
inc
popa
test
adc
add
icebp
pop
and
jne
mov
out
jmp
shrb
sub
or
imul
push
jecxz
neg
pop
out
push
push
fmull
fnstenv
inc
mov
insl
test
and
ljmp
hlt
push
xchg
cmp
ja
mov
jnp
jbe
pop
out
xor
or
in
pop
dec
popf
fldt
repnz
xor
jno
mov
shrb
xchg
mov
aaa
push
sbb
or
insb
loopne
push
aaa
out
stos
inc
jb
fsub
outsl
fildl
call
outsb
pop
inc
in
mov
sub
enter
pop
lahf
push
je
lret
dec
xor
sub
mov
jne
sub
xchg
insb
testb
je
push
cmp
mov
sarl
cli
loopne
fsubl
shlb
adc
fisubs
sbb
xor
pop
xor
push
outsl
test
fmull
mov
subl
push
imul
test
fdivrl
icebp
mov
pop
daa
add
add
mov
push
xchg
fstl
jo
cmc
xchg
xor
bt
cmp
aad
xchg
jmp
fldcw
lea
mov
dec
int3
push
fbstp
mov
aas
dec
jge
add
add
sbb
rcl
pop
addb
imul
test
add
rcl
lods
sub
fcmovb
popa
lea
stos
ja
idivb
ss
push
inc
fsubrl
sbb
cmp
dec
mov
adcl
xchg
xor
les
cmp
adc
in
lret
jge
push
adcb
sbb
mov
inc
mov
inc
mov
xor
xor
xchg
jge
sub
inc
lcall
xor
xor
sub
cmpsl
adc
fdivs
jb
adc
sarb
aas
cltd
jge
in
sbb
out
sub
jne
mov
push
mov
lahf
out
lret
sbb
xor
inc
iret
adc
xor
xchg
sbb
movsb
icebp
sbb
cli
sbb
mov
sbb
pop
sbb
int3
pop
out
add
push
add
fucomp
movsb
add
and
lds
or
jmp
push
xor
add
inc
test
xor
add
xor
ret
jmp
adc
repnz
add
dec
and
xor
ds
cld
or
aad
add
inc
mov
test
ds
unpcklps
cmp
icebp
adc
imul
push
mov
js
addl
rclb
aad
push
or
outsb
add
xchg
xchg
mov
jle
ret
icebp
js
sub
cmp
xchg
jb
pop
jle
cmp
iret
push
adcl
xchg
pop
push
pop
dec
mov
ret
adc
js
cmp
and
out
fwait
mov
hlt
int
in
inc
jmp
rcrb
or
push
sub
xor
stos
mov
scas
lds
mull
inc
test
adc
iret
lret
xchg
cmp
mov
arpl
lret
cmpsl
inc
ljmp
or
scas
add
mov
push
ret
xchg
jae
inc
add
test
jecxz
or
dec
repz
mov
cmc
xor
xorb
loop
mov
stos
aaa
fsub
test
adc
mov
test
std
scas
scas
or
or
jmp
sub
adc
xor
inc
cs
rclb
in
sub
mov
jmp
adc
sub
push
outsl
xor
loope
repz
mov
and
sar
fildll
push
lea
mov
sbb
mov
sub
or
or
mov
test
pop
sarb
adc
cmpsl
cld
adc
push
cltd
or
add
cmp
jle,pt
je
test
mov
mov
add
rolb
lret
sub
cs
in
xor
jl
or
xor
aam
out
or
dec
mov
test
insl
pop
sub
out
pusha
jbe
dec
lcall
in
loope
lret
dec
xlat
inc
add
out
sbb
xor
cld
movsb
sub
push
pushf
or
or
int3
xor
inc
test
and
jae
or
insl
das
jb
push
fcom
repnz
adc
aas
aad
fcmovbe
call
enter
mov
pop
mov
sub
mov
insl
pop
sbb
movsl
xor
iret
mov
out
cli
pushf
jno
adcb
sar
dec
inc
adc
mov
mov
in
push
popf
fsubp
jg
mov
std
xchg
enter
jecxz
test
cmp
icebp
adc
in
or
push
sub
insl
push
nop
cs
ljmp
insl
xchg
add
int3
mov
outsl
fsubrs
loop
shlb
movsl
or
inc
xchg
dec
dec
mov
or
push
xor
cmp
and
neg
inc
xchg
mov
sub
dec
out
sahf
push
pop
lea
inc
hlt
add
in
stos
jle
fsubrs
or
pushf
stos
das
add
add
adc
sub
fdivrl
cli
inc
scas
lahf
ss
cmpsl
ja
push
clc
cmp
nop
das
or
cmpb
adc
add
push
addr16
xor
lods
rcrb
cwtl
pop
icebp
or
add
jp
inc
sti
mov
adc
xchg
adc
or
les
mov
lods
sbb
jle
xchg
xor
mov
int
aas
scas
into
mov
loope
dec
fwait
pop
mov
repnz
cmp
push
and
shlb
mov
xor
dec
mov
and
mov
popf
fisttps
xor
push
out
ss
movsb
mov
xor
pop
cltd
out
push
adc
out
add
iret
cltd
loop
and
out
dec
repz
imul
dec
mov
cmp
arpl
mov
into
pop
push
dec
mov
cmp
pop
aad
jne
sbb
imul
cmp
or
mov
sub
inc
in
dec
jle
imulb
xor
outsl
sti
add
push
int
dec
pop
mov
xor
adc
and
call
mov
shlb
mov
xor
adc
jae
sbb
movups
popl
mov
and
in
xor
inc
jae
into
push
fwait
xor
aam
xchg
sub
mov
stc
mov
incl
jecxz
fmulp
aaa
mov
jp
xor
iret
fidivrl
pop
cwtl
popa
popa
push
push
insb
mov
and
daa
rcll
nop
adcl
mov
inc
xchg
insb
mov
sbbl
push
and
repz
push
dec
jg
imul
adc
inc
ret
mov
sub
nop
cwtl
mov
pop
in
lcall
push
lahf
xor
daa
adc
addr16
fiadds
jmp
cs
pop
add
and
jbe
push
fiadds
popf
xor
lods
adcb
push
enter
int
imul
and
adc
inc
andl
xchg
dec
jecxz
loope
in
lods
icebp
push
cmpsl
icebp
stc
and
xchg
rolb
jecxz
lods
push
xchg
shrl
jno
outsb
mov
sti
addr16
dec
mov
lods
mov
scas
sub
jns
jno
daa
pop
scas
xchg
js
inc
orb
cmc
mov
cmp
stc
lods
outsb
mov
leave
add
ret
xor
lret
jo
enter
int
jmp
out
xor
xchg
sub
cmc
pusha
leave
mov
shl
cmp
xchg
push
jae
xlat
inc
cmp
mov
mov
cltd
std
js
jge
sub
mov
nop
cmpsl
cmp
pushf
lret
and
call
les
insl
sub
lods
repnz
push
xchg
fildll
jp
lods
mov
xchg
leave
mov
repz
imul
xlat
icebp
in
sub
lret
rorb
and
inc
lods
push
push
rcrl
decb
fdivrp
push
jno
and
mov
cmpsb
inc
xchg
xchg
inc
out
xor
test
add
adc
xor
mov
add
out
push
push
loope
mov
icebp
ds
sub
mov
and
mov
fdivs
std
fstl
ror
dec
loopne
jp
ficoml
iret
mov
jp
inc
and
inc
sub
stc
or
mov
pop
or
push
mov
inc
lahf
sarb
pop
scas
jg
push
push
xchg
repz
out
fisttps
lods
mov
adc
add
adc
loopne
dec
pop
sahf
lahf
lds
lahf
test
cld
das
shlb
iret
repnz
jg
pop
sbb
shlb
lahf
pop
xchg
xchg
std
jns
adc
fistl
adc
loop
mov
cmp
pop
or
loopne
mov
mov
sti
movsl
inc
out
or
fiaddl
sti
mov
xchg
cs
mov
push
or
stc
or
and
sahf
mov
arpl
mov
fs
loopne
rcrb
dec
test
lods
dec
cltd
fcompl
test
je
sub
adc
movsb
or
out
sbb
cmpsb
adcb
mov
cmpsb
int
loopne
or
inc
adcl
dec
add
es
dec
out
in
mov
mov
and
adc
das
and
jne
sub
jmp
cs
nop
mov
jno
jno
scas
sub
outsb
adc
icebp
addr16
xor
cs
xchg
adc
mov
add
push
pop
mov
popf
add
jbe
test
hlt
jno
test
mov
adc
pop
dec
and
pop
adc
sub
repnz
sub
adcl
adc
push
repz
xor
xchg
xor
out
inc
add
or
jno
in
dec
adc
push
into
icebp
dec
xor
aam
fwait
iret
mov
xchg
icebp
sub
scas
jg
sbbl
stos
fidivl
repnz
sub
dec
or
cmp
dec
mov
sub
cmp
loop
int3
mov
mov
out
mov
subb
mov
bound
jecxz
sbb
or
sbbb
adc
jne
arpl
or
push
mov
adcl
mov
outsl
ror
fstpt
inc
cmp
adc
adc
jl
xor
pop
clc
pop
add
icebp
and
rorb
rolb
loop
jnp
pop
addr16
adc
sbb
insb
jle
ret
std
jns
add
call
cld
repz
nop
mov
pop
jp
addb
call
inc
bound
cmpsl
sbb
xchg
sub
or
ss
sub
jno
jae
push
decl
and
ror
sub
dec
add
push
inc
xor
repnz
loop
xor
pop
jae
mov
std
fstl
mov
xor
pop
stc
xor
addr16
xchg
ret
dec
scas
dec
jae
jge
sti
xor
push
mov
push
jle
xor
mov
xor
xor
lods
in
jp
mov
cmpl
sub
leave
or
sbb
add
jnp
sub
faddl
in
loope
mov
mov
lea
mov
jno
ss
jmp
sbb
push
mov
add
je
shlb
mov
push
mov
ret
bound
mov
mov
pop
dec
mov
sub
dec
das
fadd
popf
das
sbb
out
test
dec
pushf
fistpll
flds
mov
pop
popf
xchg
mov
lret
aaa
mov
push
sub
adc
in
pop
lahf
inc
outsl
sbb
or
sti
or
arpl
lods
xchg
mov
fildl
arpl
lahf
and
fsubrs
lods
cmp
shl
jle
or
sbb
ljmp
mov
mov
inc
push
or
pop
nop
int
and
popf
add
test
add
lret
push
fcmovbe
outsl
cs
inc
mov
sub
icebp
pop
int
inc
cmpsl
adc
mov
xor
mov
mov
fisubrl
or
lea
ret
push
xor
cs
sbb
cwtl
jae
xchg
cli
ljmp
or
ret
sbb
aad
icebp
and
pop
and
xchg
in
ljmp
push
xor
in
in
push
inc
pop
test
and
ja
scas
test
xor
inc
lods
ja
out
lods
orl
and
repnz
sahf
mov
mov
cmp
xor
test
inc
sbb
inc
pop
mov
push
dec
push
aad
mov
adc
sub
movsl
and
scas
add
bound
in
push
mov
insb
and
xor
cmp
xchg
mov
sbb
aam
test
aas
enter
lret
push
out
sub
mov
and
push
fiadds
cld
push
mov
fidivl
mov
and
addr16
popf
jmp
push
add
das
pop
orl
int
stos
mov
insb
mov
ds
xor
mov
rorl
adc
loop
jmp
pop
adc
mov
jp
enter
jg
and
insl
adc
mov
arpl
insl
sub
ret
pop
add
add
scas
lds
mov
lea
cwtl
aad
nop
mov
lea
daa
lods
adc
daa
or
loopne
das
insb
mov
test
push
popf
mov
or
mov
or
pop
or
aaa
or
shlb
xchg
es
mov
jns
outsb
cmc
movsl
dec
cmp
adc
jl
loope
fisttpl
jg
pop
ss
cs
inc
lret
dec
stos
or
xor
rorl
lea
insl
mov
aam
mov
ret
or
loope
icebp
or
out
rclb
fwait
dec
inc
push
dec
out
ds
es
xor
pop
mov
sbb
jns
and
out
adc
add
add
stc
jp
roll
cwtl
jp
daa
movsl
cmp
jmp
mov
jae
dec
out
mov
rorb
mov
xchg
leave
or
xchg
das
repz
jge
shrl
ja
js
xchg
pop
cmp
daa
test
mov
or
and
lods
jno
mov
shll
jne
je
das
scas
cmp
imul
outsb
out
add
add
out
iret
imul
imul
jae
cmp
fnstenv
pand
cmp
and
add
cwtl
cmp
out
mov
add
push
adc
shrb
jle
shl
lahf
xor
jle
xor
leave
jmp
decl
shlb
jo
dec
icebp
and
mov
lret
flds
repnz
xor
sbb
mov
repnz
test
dec
out
or
int
cmp
fsubl
xor
jno
sub
mov
adc
mov
cmp
je
shlb
jbe
shlb
icebp
cmp
rcll
xchg
adc
or
inc
xor
push
shll
stc
adcl
aam
or
xchg
jno
fdivl
jae
add
mov
adc
xchg
ret
dec
xorb
push
roll
ja
and
mov
repz
mov
arpl
push
pop
and
jns
rclb
ja
sbb
jle
cli
insl
cmp
inc
or
test
icebp
mov
dec
rolb
sbb
test
jno
jae
out
inc
movl
cmc
pop
pop
inc
shl
addr16
aad
sbb
or
insb
scas
sub
jo
sarl
ds
sub
xor
lea
and
xor
sub
mov
jge
stos
add
sub
arpl
xchg
mov
roll
dec
xor
insb
outsl
sbb
mov
lods
icebp
sub
mov
daa
cmpsb
scas
sbb
popf
push
dec
jae
loope
int
test
addr16
sarb
push
int3
call
jmp
imul
test
xor
and
mov
mov
xchg
enter
por
dec
mov
jmp
test
xor
jne
insb
pop
cmpsb
repnz
jge
enter
adc
pushf
xor
loopne
in
jecxz
stos
dec
mov
or
and
pop
repnz
cmp
mov
lea
nop
test
std
int
stos
cmp
or
pop
lahf
dec
subl
fnstsw
xor
jp
dec
roll
loopne
xchg
ljmp
xor
dec
mov
mov
mov
jge
int
out
add
jno
popf
icebp
out
imul
inc
push
jmp
lcall
cmp
mov
lret
insb
sub
pop
adc
fidivrs
mov
int
aam
dec
sarl
or
adc
and
adc
cmp
adc
mov
or
add
sahf
add
pop
int
jl
gs
out
push
mov
lods
bound
insb
mov
cs
fwait
pop
repnz
push
add
cmp
sub
ja
adcl
dec
inc
mov
std
and
add
cs
and
fstpl
cmp
mov
dec
cltd
cmp
stos
inc
rorb
mov
aaa
mov
gs
or
push
and
in
push
push
or
scas
or
sbbl
shrd
or
and
or
daa
icebp
push
pop
movsl
fs
sarb
outsl
sbb
pop
push
xor
movsl
jle
sarb
push
in
pop
inc
add
mov
pop
mov
mov
cli
push
je
lret
xchg
xor
mov
sbb
fs
mov
fstpl
movsl
mov
mov
pop
cltd
jae
inc
pushf
in
xchg
inc
in
push
mov
sbb
divl
rol
insb
repnz
cs
mov
int3
add
in
jl
stos
xor
add
and
sbb
fsubrs
add
inc
psllw
inc
cmp
cmp
mov
add
mov
outsb
inc
add
sub
add
lcall
sub
scas
jge
mov
jg
dec
int
repnz
pop
aaa
aam
dec
call
push
mov
ja
pop
mov
xorl
ret
aas
mov
aad
or
xchg
cmp
add
adc
xor
in
or
fisubl
sub
mov
mov
jno
mov
adc
arpl
out
jl
int3
sub
fisttps
lods
je
insl
sbb
fnstenv
aaa
leave
add
inc
cmpl
ljmp
call
insl
add
xor
sub
fdivrs
adc
call
pusha
ljmp
in
xchg
jno
or
lret
sbb
xchg
leave
call
or
sub
test
cmp
popa
push
xchg
jnp
lcall
fcomps
lock
adc
loopne
lret
jb
push
mov
shrl
pop
outsb
push
and
lret
push
xchg
nop
adcb
push
pop
adc
pushf
insb
xchg
mov
add
adc
sub
ljmp
and
in
shl
push
and
jl
lods
movsb
pushf
push
mov
in
inc
cmp
xchg
add
mov
sub
inc
mov
mov
or
bound
dec
cld
push
dec
lods
inc
ret
icebp
cmpsl
inc
cmp
pop
outsb
mov
not
rclb
pop
bound
jp
push
dec
repnz
mov
inc
and
mov
pop
jne
jno
inc
mov
inc
mov
in
push
dec
mov
or
adc
cmp
cmc
add
popl
repnz
mov
jo
int3
and
arpl
or
push
mov
or
imulb
movsl
and
mov
ror
and
sub
lahf
int
or
fildl
xor
xor
rep
sarb
jo
xor
xor
adc
sbb
push
cmp
popf
jbe
dec
mov
test
dec
test
in
push
loopne
incb
inc
shll
dec
rolb
mov
push
xchg
add
dec
mov
push
shlb
push
fimuls
pop
mov
sub
std
jno
pop
push
push
addl
nop
push
int
cmp
adc
std
call
lahf
xor
xchg
stc
push
adc
xchg
xor
and
arpl
mov
jo
mov
xchg
dec
jns
test
xorb
cwtl
jl
or
mov
mov
filds
das
stc
sub
mov
jno
sbb
and
out
mov
mov
add
adc
ret
dec
jecxz
cmp
icebp
dec
ja
ss
repnz
xor
cmp
icebp
imul
pop
xor
xor
mov
into
lret
push
pop
pushf
pop
sub
jl
pop
int3
mov
ljmp
aaa
and
mov
aad
std
mov
xor
pushf
fcomip
xor
insb
mov
aas
into
clc
jb
rcll
fldcw
mov
clc
inc
inc
hlt
xor
sub
sub
pop
push
sub
in
cwtl
mov
imul
add
sti
dec
xor
sbbl
in
cwtl
das
mov
lods
mov
jne
ljmp
mov
cs
sbb
lahf
pop
dec
rcrl
ljmp
xor
addb
es
bswap
out
icebp
ss
negl
cmpsl
iret
test
js
fisttpl
mov
sub
rorb
mov
test
repnz
fidivrl
dec
pop
fdivs
scas
sbb
jb
out
fndisi(8087
sbb
xor
das
loope
stos
lods
xor
scas
shl
xor
leave
insb
xor
adc
shll
inc
test
or
stc
dec
insl
mov
mov
add
scas
dec
mov
mov
adc
je
dec
inc
sbb
mov
outsl
aad
push
pop
pop
int
test
push
cmp
push
sbb
xchg
rclb
mov
call
pop
unpckhps
mov
insl
andl
outsb
sbb
loope
repnz
daa
je
adc
mov
and
xor
rolb
scas
xchg
inc
aaa
xor
repz
lahf
insl
and
xlat
fisttpl
jp
testb
and
mov
roll
adc
out
rcrb
push
jmp
cmp
mov
ljmp
cmp
pop
daa
mov
bound
adc
nop
ljmp
push
aas
xor
xor
lods
inc
jnp
or
and
push
pop
mov
lods
jo
lds
mov
adc
fs
jns
ficomps
xlat
cwtl
push
push
jns
enter
dec
or
mov
or
nop
mov
les
mov
imul
fdivs
adc
sub
push
fldcw
rcrl
inc
insl
les
inc
les
scas
test
xor
test
sbb
mov
ljmp
mov
add
jne
jbe
inc
mov
pusha
loope
xor
jb
xchg
shll
sub
loop
xchg
push
sub
dec
sub
nop
pop
in
cmpsl
and
shrb
cmp
pop
mov
arpl
loopne
mov
lods
adcb
dec
les
lret
cmp
addr16
fwait
xchg
mov
push
mov
push
into
mov
xor
test
fwait
pop
mov
pop
int3
pop
ds
and
inc
pop
fistps
loope
cmc
adc
scas
sub
push
jbe
iret
data16
push
rcrb
push
sbb
sub
cmp
mov
lods
fdivp
push
fsubr
mov
dec
ljmp
xchg
lcall
fcmove
xor
scas
mov
inc
mov
mov
aad
fidivs
and
mov
mov
add
inc
rorb
arpl
subl
je
and
mov
mov
or
or
xor
fdivs
out
sub
lods
adc
imul
in
push
insb
sbb
shrd
jne
ss
xor
jl
dec
lea
xor
dec
or
cwtl
cmp
sbb
in
sbb
jns
mov
inc
mov
add
mov
inc
xor
inc
push
mov
cld
out
sahf
mov
sub
pop
rol
lods
fcomp
dec
lahf
jb
lret
mov
cmpsl
push
xchg
add
mov
imul
mov
mov
inc
push
sub
rorl
sbb
cmc
ds
jmp
out
sarb
fcomps
cmp
cmp
xor
out
xchg
shll
cmp
jno
jb
inc
loope
xchg
mov
push
pop
xchg
lret
in
les
cli
inc
push
jle
xchg
jae
sub
adc
pusha
adc
test
push
loop
sbb
pop
jns
cmp
jmp
filds
iret
inc
mov
adc
mov
lea
mov
sub
lcall
cmp
lea
popa
loope
in
adc
sahf
mov
push
jle
push
push
xchg
and
ja
std
daa
sbb
movswl
mov
mov
jne
sub
xchg
int
dec
bound
loope
outsl
cltd
xchg
xorl
adc
popl
or
jne
jge
mov
stc
sbb
jge
fistpll
xchg
push
xchg
and
fs
or
fisttps
sub
jecxz
stos
inc
movsl
ret
out
pop
mov
and
inc
push
xlat
xor
add
xor
inc
jg
mov
sbb
push
shll
inc
mov
pavgw
in
data16
dec
push
mov
addl
sbb
adc
ljmp
lods
jmp
pop
add
jns
push
sub
clc
rorl
movsl
cs
pop
adc
xchg
or
cs
shlb
mov
aas
and
xchg
mov
addb
push
and
push
jns
hlt
xor
add
scas
and
push
repz
or
lods
push
jae
scas
icebp
mov
inc
jbe
jo
xchg
adc
jne
xchg
dec
fistpl
and
or
pop
jmp
into
push
add
pop
xor
mov
inc
push
out
iret
mov
dec
js
popa
add
iret
add
mov
data16
jno
pop
cmp
les
mov
outsb
xchg
in
sbb
test
std
or
sbb
mov
mov
xchg
ljmp
or
sub
fmulp
mov
mov
scas
cwtl
je
pop
pop
add
loope
xchg
push
subl
ret
testl
ror
jae
mov
dec
add
sub
jb
cli
xor
mov
cmp
xor
stos
insb
dec
or
add
or
fsubrs
sub
icebp
shl
pop
mov
adc
mov
add
mov
or
jnp
imul
not
cmp
mov
or
jne
add
xor
or
sbb
adc
xor
es
jne
jbe
in
push
jne
jl
and
jne
mov
jb
cmc
data16
leave
in
mov
clc
icebp
mov
sbb
adc
xor
pcmpeqb
pushl
sub
add
stos
jl
and
scas
or
mov
jmp
mov
ljmp
jne
icebp
jmp
and
sbbl
jmp
xor
data16
test
movsb
and
mov
into
mov
int3
pop
mov
xchg
mov
in
mov
sbb
fucomip
push
fcoml
mov
dec
inc
mov
outsb
or
push
stc
jae
int3
cs
sub
clc
push
jmp
in
out
mov
mov
sub
mov
push
push
enter
add
insl
nop
mov
cli
jmp
jecxz
in
scas
stos
sbb
mov
nop
xor
push
xchg
and
add
loopne
ja
dec
lret
sub
xor
hlt
cmp
imul
and
inc
push
out
mov
mov
pop
xor
pop
dec
push
aas
sti
adc
and
jmp
or
add
xor
aad
mov
repnz
mov
jmp
fdivrl
cmpsb
mov
ja
cs
inc
mov
add
add
adc
xor
jg
push
lret
and
pusha
xchg
and
jno
mov
enter
add
fnstenv
popa
mov
pop
mov
xchg
lds
jl
jb
sbb
push
jae
xchg
xor
xorl
arpl
cmp
insl
push
pop
scas
inc
push
inc
xchg
inc
mov
lds
inc
sub
cmp
popf
push
iret
lcall
add
jmp
push
inc
inc
icebp
lods
sub
push
je
inc
sub
stos
out
leave
sbb
push
sub
jae
mov
das
int
push
ljmp
subl
scas
sub
insl
mov
addl
aaa
addr16
mov
jbe
insb
mov
xor
sub
sub
into
test
imul
stos
stos
jne
sub
jmp
jne
sub
mov
mov
cs
scas
add
xlat
inc
das
xlat
movsl
in
clc
scas
sbbl
or
in
sub
sbb
push
les
insl
movsl
xchg
in
ret
pop
popa
call
xchg
xorl
push
xor
into
add
lds
ret
pop
add
sub
shrb
push
int3
dec
cmc
fimuls
orl
xchg
jmp
lds
mov
les
mov
dec
push
test
mov
mov
dec
cmc
mov
fldt
lds
das
ss
push
mov
das
in
out
cmp
dec
xor
fstps
clc
test
stc
cmp
push
inc
or
ret
mov
mov
stc
push
mov
xor
cmp
mov
adc
or
in
out
cmp
aas
scas
mov
popa
and
out
subl
outsb
xchg
leave
jbe
or
xchg
in
je
xor
popf
jnp
and
lea
mov
roll
push
sub
xchg
push
sahf
sbb
pop
cmp
fdivrp
push
sub
scas
adc
adc
mov
pop
mov
push
sbb
or
mov
adc
decb
pop
inc
lahf
dec
xchg
xchg
xor
adc
orl
or
out
shr
inc
cmp
rcrl
mov
clc
std
sub
adc
rorb
lret
imul
push
jge
lret
jmp
pusha
mov
jp
mov
cld
jg
push
shrl
xchg
ret
mov
cmp
pusha
sbb
shlb
pop
mov
push
push
xchg
dec
xor
and
mov
into
lods
pop
inc
daa
xor
adc
inc
daa
mov
sti
imull
sar
sub
jno
icebp
enter
aam
int3
add
stos
notb
and
push
popa
test
inc
and
aaa
das
mov
push
add
pop
or
add
ror
sahf
and
aas
out
sbb
clc
in
xorl
imul
mov
jbe
jmp
insb
or
mov
cld
jb
sbb
xchg
and
dec
cwtl
cli
les
icebp
push
repnz
mov
ss
ret
inc
loope
daa
dec
adc
icebp
push
cmp
test
add
imul
mull
push
add
ss
ja
xchg
jno
mov
into
test
dec
and
dec
and
sbb
dec
sbb
jno
sbb
sub
adc
call
dec
mov
jecxz
mov
jg
mov
cmpsb
jecxz
rcrl
in
leave
addl
mov
lods
orb
fsubrs
push
push
rcll
mov
jns
in
sub
dec
out
xchg
nop
push
push
xchg
jnp
pop
jno
bound
repnz
test
test
jns
pop
mov
jne
jno
push
inc
inc
cmpsl
into
cli
daa
hlt
and
sbb
push
mov
sub
or
aaa
push
sbb
xor
xor
push
movsl
lock
jle
mov
and
mov
lret
mov
inc
push
xchg
jnp
dec
or
and
repnz
jg
mov
ret
cmp
shl
pusha
mov
jno
adc
xchg
push
lods
jecxz
cli
cld
lods
push
inc
push
or
pop
icebp
cmp
add
minps
fstl
fldt
stos
lea
sub
nop
lods
repnz
in
xor
pop
jmp
cmpsb
mov
adc
outsb
mov
dec
push
sub
push
lods
add
iret
popa
adc
fwait
xchg
cltd
insl
add
xor
mov
adc
or
push
sahf
adc
pop
ljmp
or
lahf
jg
fiadds
mov
iret
inc
test
fiadds
insb
add
adc
outsl
rcrb
xchg
xor
inc
cmpsl
dec
leave
loopne
xor
jge
je
clc
and
ret
xchg
cmpsb
stos
mov
shlb
mov
dec
jmp
lret
adc
mov
xor
out
mov
jle
mov
rol
insl
ss
sub
mov
lahf
mov
mov
or
icebp
push
xchg
adc
loope
mov
or
lret
add
stc
icebp
mov
adc
scas
push
sti
sub
adc
ror
andl
in
insl
pusha
rolb
in
and
in
jno
outsl
xor
setg
jno
and
adcl
xchg
rolb
adc
xor
sub
sarb
fiadds
add
adc
xchg
pop
or
loope
negl
xor
loope
pop
sbb
fcoms
out
insb
and
cmp
pop
mov
icebp
cmp
lods
and
mov
or
mov
mov
mov
jns
xor
xchg
jle
les
xor
mov
inc
mov
lods
mov
shrb
mov
cmp
and
cmp
lods
adc
xor
pop
inc
add
push
adc
popa
icebp
xchg
inc
imul
add
mov
xor
in
jecxz
jb
int
imul
add
popa
jmp
lcall
adcb
add
jb
stos
pop
or
pop
adc
adc
adcb
mov
jae
cmp
idivl
popf
push
adc
loop
mov
mov
aaa
jl
ror
clc
mov
add
sbb
cmp
aaa
adc
xor
ja
adc
mov
or
xchg
test
bound
jle
mov
push
sub
pop
fldl
mov
mov
jno
xchg
mov
mov
stc
imul
pusha
insb
push
mov
pusha
ror
aam
aas
cwtl
ljmp
jnp
inc
imul
imul
mov
mov
mov
loopne
ja
shrb
out
cmp
dec
out
lea
rcrb
repnz
jnp
jne
pop
jae
das
lock
jae
xor
outsb
mov
jecxz
push
and
daa
fwait
sub
dec
sbb
xchg
or
out
jne
out
sbb
dec
into
push
ss
or
insl
shrb
mov
int
mov
sub
cmp
mov
das
sub
jg
in
add
xor
daa
idivb
insl
adc
add
enter
test
push
lret
adc
pop
cmp
cmc
or
pop
add
icebp
int3
mov
int3
push
xor
rclb
inc
icebp
lret
out
pop
mov
mov
xchg
xlat
mov
addr16
addb
fdiv
pop
int
jl
and
push
mov
jae
aas
dec
sbb
das
jne
jg
pop
add
inc
sub
or
outsb
sub
sub
xor
outsb
loop
adc
scas
enter
into
cmp
jns
lods
popa
jne
test
call
or
lds
and
lods
dec
mov
popa
icebp
insl
movsb
cmovle
clc
lea
out
push
mov
xor
pop
inc
pushf
into
jmp
jle
jnp
in
sub
js
push
cmp
mov
rcrl
xchg
xor
jl
push
icebp
lahf
subb
xchg
out
mov
bnd
cmp
pop
mov
jnp
lret
insb
pop
push
lcall
addr16
aas
dec
adc
sbb
ret
add
into
cmp
or
push
sar
insl
ds
xchg
inc
leave
adc
int3
and
lods
test
lret
decl
nop
repz
push
dec
add
and
push
arpl
jne
test
mov
mov
pop
mov
inc
sti
sub
pop
or
lods
loopne
daa
das
loopne
negb
arpl
test
jae
jnp
test
lods
sahf
jae
test
adc
jns
popa
sub
xor
mov
dec
and
scas
insb
pop
call
testb
jno
mov
xor
sarl
out
sbb
sbb
jge
lahf
popf
mov
inc
jg
and
push
out
sbb
jg
mov
mov
or
repnz
loopne,pn
in
fsubs
ret
repz
sahf
mov
test
cmpsl
inc
inc
stos
pop
adc
clc
shll
lods
repnz
scas
cld
mov
shlb
adc
push
outsl
daa
outsb
and
mov
add
adc
fs
js
push
aas
inc
sub
insl
add
in
popa
pop
jno
cwtl
or
mov
xchg
sub
push
cmp
cmpsl
inc
out
clc
xor
pushf
fildl
test
mov
sub
pushf
nop
int3
repz
movsl
or
sub
mov
into
icebp
call
sti
pop
cli
popf
push
xchg
je
or
add
lahf
add
cld
dec
or
adc
mov
jno
sbb
xor
inc
clc
int
mov
mov
lods
rclb
or
push
mov
sbb
sti
aas
mov
pop
js
jle
jecxz
pushf
mov
sub
adcb
adc
insb
mov
out
lret
andb
mov
sub
sahf
xchg
sub
sub
jns
push
jno
fstl
cmpsl
jns
lret
les
add
jecxz
mov
pop
cmpsl
aad
mov
mov
cmp
push
push
in
and
jno
leave
cmp
icebp
adc
or
js
add
cmp
jae
out
push
test
inc
jae
sbb
sub
testl
add
bound
xor
imul
inc
jns
xchg
daa
and
dec
mov
xor
inc
mov
rorb
xor
mov
shl
xor
jno
and
iret
in
jecxz
in
push
pop
pusha
cmpsl
mov
jns
pop
push
dec
cmp
xchg
push
adc
cmc
flds
rorb
jle
inc
loopne
in
lret
mov
rolb
imul
xchg
cltd
shll
jle
imul
cs
fcmovb
add
jecxz
fimuls
inc
shll
lret
or
aam
test
vmovdqu
push
cmp
lea
pop
dec
or
push
pop
push
cmpsl
mov
jo
sub
and
xor
jl
pop
add
xchg
test
mov
mov
adcb
dec
dec
fldcw
outsl
and
inc
ret
cmp
out
jmp
push
ss
stc
sbb
orl
insl
jle
or
ror
mov
jecxz
stc
sbb
dec
adc
adc
sub
sub
daa
call
jo
pusha
cmp
dec
inc
xor
mov
mov
jne
mov
cmp
aaa
lods
jmp
adc
pusha
xor
fwait
not
mov
push
mov
jg
add
mov
idivl
repnz
cmc
test
ret
sub
arpl
adc
lods
xor
loope
lret
xchg
popf
mov
icebp
xchg
push
push
mov
pusha
into
inc
jp
cwtl
std
jl
aad
push
call
xor
sub
sub
rcrw
add
mov
dec
cmp
inc
dec
fsub
orl
stos
sarb
add
mov
test
mov
shl
push
mov
lea
xlat
lds
pop
adc
shll
add
data16
int3
repnz
or
or
orl
idiv
icebp
addr16
shr
out
xor
nop
add
cmpsl
mov
add
icebp
add
cli
mov
popf
push
add
fnsave
jmp
jo
enter
into
and
addr16
jae
adc
xlat
push
cmp
jae
outsl
mov
loope
and
mov
rorb
mov
add
inc
lahf
scas
imul
xorl
loopne
insl
mov
adc
inc
sbb
bound
push
mov
sbb
stos
or
popa
cmp
mov
mov
push
cld
int3
cmp
xor
aam
idivl
rorb
fwait
addl
mov
push
out
cltd
outsl
test
icebp
mov
xor
ret
cs
mov
mov
add
cmpsl
cwtl
adc
and
jne
icebp
repz
repnz
icebp
stos
add
repz
add
xor
cmp
mov
pop
push
mov
insl
fstpl
in
divb
outsb
enter
mov
adc
pop
xorl
lods
jle
hlt
dec
pusha
and
sub
jbe
jns
cmp
mov
mov
mov
in
push
aam
push
xchg
inc
xchg
rolb
imul
mov
dec
xchg
sbb
repnz
cmp
int
pop
xor
lods
sub
clc
loope
shl
xchg
push
mov
mov
and
lea
fcmovnb
pushf
addl
xor
repz
jl
and
hlt
mov
adc
dec
popf
xor
xorl
mov
or
or
fs
bound
mov
dec
push
jl
mov
std
insb
mov
adc
xor
into
adc
cmp
pusha
xor
sbb
pop
loope
sbb
into
addr16
clc
xchg
lods
scas
mov
shl
push
add
xchg
mov
sub
xor
adc
jecxz
cmpl
xor
fisubrs
xor
nop
into
inc
inc
stos
mov
shlb
fiadds
filds
add
int3
jno
cmc
jae
imul
call
cmp
repz
pop
sahf
out
std
outsb
popf
jb
xor
adc
fdivr
testb
jb
icebp
push
shrb
cmc
subb
sub
adc
jle
inc
repz
mov
test
pop
inc
movsb
xor
ljmp
aad
fsubrl
xchg
test
xor
sbbl
dec
dec
mov
roll
fstl
push
out
pop
loopne
lahf
dec
or
jae
sarl
pop
jb
xor
aaa
mov
mov
mov
inc
sub
xlat
lds
xchg
sarb
adc
in
push
fnstenv
adc
mov
stc
adc
lcall
sbb
jne
adc
add
adc
cmpl
xchg
movsl
cs
xor
pop
or
lret
xor
adc
popf
adc
mov
dec
xor
adc
add
std
sbb
push
fidivs
mov
nop
aad
add
outsl
inc
cmp
or
jno
xlat
add
pushf
push
ljmp
imul
pop
sbb
icebp
mov
mov
int
es
mov
js
rol
fistl
xor
mov
pushf
or
dec
cmc
shlb
xchg
adc
add
stos
mov
push
scas
in
jle
out
std
jns
xorb
daa
mov
cmp
mov
test
cmp
imul
inc
lahf
icebp
fs
dec
or
rolb
sub
popf
repz
popa
or
xchg
push
test
test
mov
sub
addr16
mov
les
add
jecxz
cmp
add
insl
add
fnstenv
xor
addl
or
jns
add
add
xor
sub
ret
lds
pop
and
in
cmp
inc
jb
jns
jb
fld
cwtl
jecxz
adc
ljmp
scas
lods
shrl
addb
dec
adc
inc
fldcw
pop
imul
push
leave
inc
mov
daa
sub
mov
push
les
shlb
sar
pop
loope
sbb
les
in
dec
cld
xchg
arpl
pop
mov
repz
xchg
mov
rorb
subl
bound
pop
sub
xchg
xor
xor
in
xchg
inc
shlb
mov
xchg
sbb
lock
lea
mov
in
sbb
outsb
jge
jl
popf
mov
pop
jmp
std
mov
nop
outsb
mov
ljmp
inc
fistpl
out
adc
mov
lods
cli
scas
loopne
mov
adc
shl
aam
dec
xor
mov
push
call
aaa
data16
das
or
add
cmpsl
shrb
add
mov
xor
icebp
sub
dec
ljmp
mov
gs
out
or
rcll
sbb
add
insl
sub
insl
or
repz
mov
shrl
sub
das
jno
out
pop
rcrb
negb
aam
insb
popf
vpxor
dec
xchg
adc
pop
cs
scas
add
xor
pop
push
scas
jb
push
stos
lret
lods
mov
into
xor
pushl
shlb
ror
xor
popa
in
cmpl
mov
mov
dec
imul
popf
push
imul
addr16
jbe
data16
pop
mov
mulb
in
xchg
jo
aad
mov
mov
jno
fmuls
into
mov
stos
inc
rcr
cmp
dec
mov
fcmovnu
and
jl
push
insl
push
call
sbb
sub
pand
rorl
rcrl
fcoml
mov
ficomps
aaa
mov
xor
fwait
pop
mov
roll
add
mov
pop
xchg
bound
and
lret
push
cmp
and
aam
jg
pop
aad
or
mov
push
inc
adc
ret
adc
cltd
std
outsl
mov
sahf
xor
mov
adc
adc
orb
fidivs
sbb
adc
adc
in
add
outsb
xchg
mov
xchg
adc
popa
xchg
movsb
in
add
mov
dec
cmp
push
inc
adc
adcl
ja
sbb
mov
pushf
sbb
and
insb
inc
ret
xor
aas
xchg
add
pop
cmp
push
push
mov
adc
dec
mov
loop
mov
cmp
xor
mov
test
das
shr
adc
mov
push
mov
pop
lea
xchg
outsl
push
jb
das
sub
inc
dec
and
xor
outsb
aas
scas
cmp
push
or
aad
cmp
mov
nop
sbb
loopne
inc
cmpsl
xor
or
in
ss
mov
ss
adc
sub
outsl
mov
inc
xchg
sub
mov
mov
mov
lret
inc
lods
sub
insl
fdivl
sub
mov
cmp
ss
loop
mov
jno
cmp
daa
ss
je
out
repnz
jecxz
pushf
and
lea
int
and
sbb
pop
int3
cmp
dec
fdivrl
call
in
push
sub
mov
xchg
jg
mov
ret
mov
inc
aas
cmp
lret
xchg
nop
mov
addl
cmp
sub
push
fwait
adc
push
mov
sbb
adc
mov
or
adc
and
cmp
mov
imul
push
mov
icebp
aaa
sarb
outsl
out
xor
pusha
inc
dec
mov
aas
jo
in
data16
ret
insb
iret
je
fisttps
push
test
icebp
and
in
dec
inc
add
mov
repnz
in
jbe
sahf
ror
xorl
loopne,pn
adc
and
ret
out
mov
repz
es
xlat
das
mov
push
mov
adc
push
mov
fdivs
mov
inc
push
cmp
xchg
lea
jbe
dec
outsb
add
dec
dec
dec
mov
arpl
pop
or
push
repnz
sbb
inc
insl
mov
into
out
incb
mov
repnz
add
and
int
xlat
fnstenv
add
data16
jne
ss
repnz
sub
popf
sbb
cmpsb
xor
mov
shlb
iret
stc
jo
dec
out
sub
xor
lods
fdiv
mov
in
mov
jae
sub
shrb
xchg
pop
shll
adc
xor
jmp
cmc
les
mov
sub
pop
repnz
jge
enter
mov
outsl
inc
jno
pop
popf
jb
and
repnz
bound
pop
sbb
and
imul
lods
fadds
stos
stos
ret
cmc
jno
cmp
mov
cmp
pusha
inc
xchg
int
jecxz
sub
push
push
shrl
cwtl
sub
test
sub
fdivs
fisubl
dec
int3
aas
add
cmp
xchg
xor
pop
ljmp
mov
jae
bound
add
ljmp
pop
popf
adc
lea
pushf
mov
pushf
push
xchg
enter
xchg
enter
inc
cltd
push
adc
sub
jb
jo
push
sub
sbb
xor
and
sub
pop
pop
dec
scas
mov
ret
aas
jno
fsubl
jb
int
add
push
mov
shl
pop
fldcw
aam
add
mov
and
push
cmp
outsl
loop
push
inc
add
xor
cmp
sbb
ret
js
js
mov
xor
movsl
pusha
ret
negl
out
sbb
scas
sub
scas
or
ret
add
icebp
in
shl
cmc
fstpl
xor
cmp
xchg
xor
jno
xchg
outsl
xor
adc
xchg
adc
scas
adcb
mov
fisttpl
sarb
xchg
mov
jge
rcl
cmp
testl
cmp
dec
mov
cmp
xchg
fwait
jg
jecxz
lea
mov
rcrb
add
push
sub
mov
jno
jl
dec
mov
scas
fnsave
inc
cs
jne
sbb
into
push
mov
std
mov
or
repnz
lahf
lods
mov
rorb
js
arpl
lods
lea
mov
adc
call
and
xor
sub
inc
in
imul
sub
mov
mov
pop
lahf
push
fwait
stc
loopne
push
mov
sub
hlt
xchg
add
jle
jl
jmp
rclb
push
fisubrs
popf
adc
repz
adc
insl
xor
mov
lret
push
icebp
dec
cmp
xor
jmp
dec
jp
call
sbb
scas
loope
sarb
mov
xor
in
sub
in
xor
mov
cli
repnz
adc
int3
mov
cmp
fmuls
pusha
in
sar
ficompl
inc
jae
pop
inc
push
stos
cs
mov
push
mov
scas
scas
adc
xor
adc
inc
shll
jae
adc
cltd
leave
mov
dec
adc
rcrl
inc
inc
repnz
hlt
in
and
jns
out
into
int
cli
and
push
dec
jne
mov
sub
daa
mov
inc
adcl
jb
nop
push
dec
xchg
mov
insb
jg,pn
stos
push
ret
lahf
pop
ja
sbb
xor
jbe
xor
mov
mov
xor
jno
push
cmp
daa
mov
inc
adc
adc
syscall
lods
mov
mov
outsl
jne
jno,pn
in
mov
xor
inc
rorb
jo
jno
mov
outsb
mov
xchg
mov
dec
dec
jg
into
mov
xor
imul
aam
jne
test
mov
sub
cld
sub
xor
jmp
add
xor
push
shrl
enter
mov
pop
xor
lret
mov
add
test
jg
ss
cltd
xor
push
insb
fiaddl
sahf
repnz
xor
add
lods
loope
dec
or
imul
icebp
and
push
xchg
outsl
mov
cmp
test
mov
out
scas
scas
or
adc
and
testl
dec
notb
stos
jecxz
jbe
xor
adc
mov
andl
mov
cmc
mov
bound
outsb
push
lret
das
out
repz
dec
lods
scas
or
cli
xchg
or
jne
xor
loopne
into
lock
pop
add
call
pop
push
mov
jmp
jno
mov
data16
pushf
popa
adc
clc
icebp
into
sbbl
jnp
loop
scas
jl
push
rorl
xor
nop
cmpsb
sub
cmp
repnz
or
dec
aam
jle
inc
pop
insl
out
adc
add
cs
mov
mov
push
mov
cmp
sahf
in
cs
fcmove
imul
sub
js
jno
jmp
popf
in
in
imul
and
xchg
loope
add
stos
sub
jae
mov
rorb
aaa
jae
jbe
push
add
icebp
inc
add
inc
adc
jle
mov
fnstenv
dec
clc
push
adc
mov
cmp
loop
icebp
inc
and
divl
outsl
icebp
xor
jae
push
dec
or
push
sub
pop
icebp
popa
jne
daa
or
movl
mov
pop
xor
int3
dec
test
xchg
sub
push
enter
xorb
push
out
sahf
test
movsl
mull
lods
jecxz
enter
adc
add
imul
outsl
pop
mov
jae
push
push
xchg
mov
xchg
add
mov
add
inc
or
adc
js
std
scas
cmp
inc
jmp
and
test
scas
lcall
dec
andb
shlb
pop
or
xor
fnsave
fmull
or
mov
lret
add
fldt
or
adc
fwait
jb
mov
std
mov
xchg
repnz
push
and
pop
jmp
out
or
mov
xor
xor
add
fiadds
das
dec
imull
jmp
rolb
xchg
sub
shl
aaa
mov
jmp
dec
mov
fyl2x
xor
pusha
lcall
xor
loope
cmp
or
jnp
xchg
imul
repnz
cmp
and
push
mov
cld
mov
in
in
shlb
xor
rcll
sbb
add
je
fwait
adc
mov
xchg
insb
test
adc
and
dec
lock
lret
idivb
sti
int
movsl
adc
pusha
call
daa
lahf
add
or
push
rclb
stc
into
sbb
sbb
adc
aaa
sub
adc
add
add
mov
mov
xchg
cwtl
pop
adc
shlb
pop
xchg
cmc
enter
hlt
roll
insb
pop
mov
and
scas
sbb
mov
daa
popf
sub
xorl
sub
popf
and
outsl
rolb
outsl
dec
adc
jle
xor
pop
jno
adc
inc
pop
stos
loopne
lods
mov
or
iret
outsb
fcompp
jmp
fisttpl
outsb
jne
hlt
jmp
mov
xor
mov
vpavgb
dec
icebp
dec
call
sarb
add
ret
sbb
dec
xlat
icebp
inc
stos
repnz
sub
jno
call
inc
std
pop
or
scas
xchg
addr16
orl
mov
mov
sub
cmp
fadds
in
or
mov
add
xor
out
mov
lods
jae
bound
inc
mov
aas
or
or
dec
ljmp
call
dec
sbb
stc
scas
shlb
mov
cli
cs
mov
adc
add
jo
or
mov
repz
or
mov
mov
cmc
pop
mov
or
icebp
icebp
adc
in
dec
mov
outsl
sbb
out
fimull
stc
sub
flds
lea
das
xchg
push
sub
jp
mov
stc
adc
xor
nop
je
or
lods
mov
and
sbb
aam
das
and
add
sbb
lock
push
xchg
adc
pop
stc
pop
or
add
inc
jb
das
pushf
xor
dec
dec
mov
ud2
xor
imul
rclb
and
add
out
xor
mov
xchg
push
xor
sbbl
jmp
mov
jne
fs
mov
aas
call
popf
dec
dec
fwait
jne
dec
imulb
sbb
sbb
xchg
push
push
cmp
mov
stos
mov
xor
push
leave
dec
xor
cwtl
ja
sub
lret
das
ja
cmc
adc
mov
aas
ss
scas
ljmp
or
xor
adc
and
or
jne
das
shrb
jbe
mov
add
or
icebp
adc
xchg
dec
mov
jge
clc
hlt
popf
jle
insb
push
dec
or
jno
clc
cmpsl
and
push
jae
clc
das
mov
or
push
repnz
sbb
lock
call
aaa
js
sbb
out
push
outsb
mov
sti
dec
adc
mov
dec
dec
xchg
das
sbb
jae
add
sub
jp
pop
outsl
int
mov
push
sub
dec
or
das
sub
int
and
imul
xor
nop
mov
pop
inc
sbb
mov
icebp
movsb
cmc
mov
popa
sub
imul
adc
xor
dec
leave
dec
icebp
popa
cltd
pop
test
jmp
jae
pusha
mov
lcall
roll
sub
insb
xor
subb
cmp
insb
push
shrl
imul
sub
imul
add
clc
stc
in
movsb
mov
xchg
lods
stos
sub
mov
mov
push
or
repnz
sub
jno
xchg
jno
clc
in
sbb
push
push
inc
xchg
dec
dec
or
or
call
jno
ljmp
and
lret
scas
insb
push
pop
mov
adc
ljmp
ljmp
ljmp
ljmp
adc
fwait
inc
fs
mov
mov
jne
push
dec
mov
test
cli
mov
movl
movsl
lret
mov
inc
push
cmpsb
pop
adc
fbstp
sbbl
aad
xlat
and
fsubs
fcmovu
stc
ss
hlt
outsl
sbbl
add
cmp
outsl
xor
sahf
xchg
lods
add
pop
adc
shll
insl
lods
jp
js
push
add
push
dec
or
pop
lret
inc
push
dec
pusha
mov
jge
icebp
movb
fadds
add
xchg
adc
imul
jno
aaa
stc
jecxz
xchg
jbe
lcall
daa
mov
fiaddl
jbe
pusha
xchg
fld
cltd
inc
sbb
xor
lods
scas
gs
and
fldt
dec
add
add
into
inc
sahf
xor
sub
loopne
jb
pop
test
scas
in
jl
add
shll
nop
inc
popf
cwtl
jge
bound
fildll
ret
and
xchg
mov
jecxz
jge
xor
jo
cmpsl
or
xor
inc
adc
push
into
ljmp
inc
add
test
sarl
jmp
xchg
sbb
xchg
and
adc
data16
into
insl
and
ss
cmove
or
mov
ret
cmp
xchg
ret
and
xchg
pop
or
rcr
dec
stos
popa
test
mov
mov
pushf
pop
inc
ret
mov
iret
mov
xor
adc
out
adc
mov
pop
stos
xchg
push
mov
cmp
ss
mov
rol
jb
repnz
pop
loopne
ret
xor
ja
dec
adc
lahf
mov
jae
inc
jnp
cs
inc
adc
jmp
dec
and
mov
mov
stc
dec
mulb
lea
add
bnd
shlb
int3
mov
daa
jo
xchg
subl
imul
cli
cmp
repnz
add
add
sarl
push
inc
cmp
cli
add
xor
xchg
mov
inc
add
push
dec
mov
mov
xor
insb
insb
jb
inc
mov
xchg
test
ret
int3
cmp
enter
cltd
bound
sbb
xlat
mov
mov
mov
pushf
mov
adc
rorb
stos
fwait
jne
sbbl
adc
xor
xor
or
mov
cmp
inc
fsubs
jecxz
mov
mov
sub
cmp
sub
test
jge
lods
jne
push
cld
int3
ljmp
sub
sub
pushf
shl
mov
add
dec
push
push
roll
jae
inc
out
xchg
and
sbb
push
xor
jb
leave
test
pop
xor
fiadds
push
xchg
gs
repnz
push
imul
mov
jecxz
sbb
ja
xchg
sub
shll
mov
jge
data16
fstps
pop
sub
jno
ret
cmp
imul
dec
stc
movsb
jecxz
xor
es
insl
incb
cmp
push
jge
inc
lret
push
adcl
cwtl
popf
sbb
arpl
mov
ret
cmpl
xor
cmp
repz
in
ret
insl
add
lods
lea
in
cmpsl
bound
push
jne
rorb
push
xor
sub
bound
pop
xor
xor
sub
jecxz
and
mov
sub
out
dec
mov
inc
push
fdivrl
jecxz
dec
mov
mov
jecxz
mov
filds
repnz
cmp
stos
clc
mov
leave
pop
adc
pushf
xor
scas
icebp
insb
imul
mov
mov
dec
jno
leave
pop
adc
rolb
sbb
test
pop
push
jae
scas
and
jno
leave
pop
adc
pushf
xor
scas
icebp
imul
mov
mov
sbb
adc
test
xchg
rcll
jle
iret
jno
leave
pop
adc
pushf
xor
test
out
repnz
or
and
outsb
jno
leave
pop
adc
pushf
xor
mov
pop
mov
ljmp
stc
adc
jge
mov
imul
stos
adc
test
push
add
jno
sub
addr16
mov
adc
mov
sub
mov
xor
fsubrp
jno
pop
adc
push
sub
addr16
stos
adc
test
push
add
jno
sub
addr16
mov
adc
mov
sub
mov
xor
fsubrp
jno
pop
adc
dec
sub
addr16
stos
adc
test
push
add
jno
sub
addr16
mov
adc
mov
sub
das
leave
ljmp
imul
ret
stos
jno
sub
addr16
test
adc
scas
js
pop
scas
push
add
adc
addr16
mov
vpunpcklwd
adc
mov
jae
add
int
stos
addr16
test
adc
scas
xor
pop
scas
push
add
out
add
mov
int
shll
cmpsl
pop
lret
mov
std
std
fnstsw
xor
add
jecxz
add
loop
std
loope
add
loopne
cld
out
push
icebp
out
cld
in
add
in
cld
cli
icebp
insl
insw
xchg
insl
test
insl
test
insl
jnp
pop
insl
jp
pop
insl
jns
pop
insl
js
insl
jg
pop
insl
jle
pop
insl
jge
pop
insl
jl
pop
insl
subl
subb
subl
push
cld
adc
adc
adc
adc
adc
adc
adc
adc
push
loopne
pop
push
out
push
push
out
add
mov
in
add
add
add
add
add
add
add
add
repz
stos
mov
mov
mov
stos
aaa
stos
in
jo
scas
xlat
test
mov
mov
jl
mov
mov
mov
mov
stos
scas
subb
xchg
outsb
xchg
outsb
test
int
loopne
and
hlt
mov
xor
in
and
and
shlb
das
loopne
and
clc
loope
dec
insl
lea
shlb
lea
popa
hlt
or
mull
es
in
ljmp
jns
enter
mov
mov
std
dec
call
mov
pop
pop
je
rcrb
fs
pusha
xlat
lret
fcoml
cld
inc
mov
jge
les
ret
ljmp
fstl
cmp
adc
add
sub
cmp
mov
roll
xor
push
xor
ret
test
ja
xchg
push
xchg
rolb
mov
mov
nop
sub
or
push
fcmove
cltd
sti
outsl
push
out
cmp
repz
cmp
stc
xchg
push
jae
outsl
cmc
dec
mov
xchg
mov
push
popa
push
aam
movsb
jg
adc
rcr
add
mov
pop
jmp
add
jne
or
pusha
add
jns
add
add
mov
mov
or
xor
dec
das
repnz
xchg
mov
clc
xor
ss
ss
ret
jne
insb
mov
inc
std
jmp
lcall
into
lods
jns
jge
add
or
aaa
jle
or
ret
stos
inc
push
xor
test
scas
cs
mov
mov
ja
clc
insl
mov
pop
jecxz
test
ficoms
andb
cmp
jecxz
test
ficoms
es
outsb
mov
push
jecxz
test
ficoms
andb
cmp
jecxz
test
ficoms
cmp
adc
ficoms
andb
cmp
jecxz
test
ficoms
andb
nop
das
cltd
xor
adc
pop
jecxz
test
ficoms
andb
cmp
xor
jne
cmp
jecxz
test
ficoms
andb
cmp
jecxz
test
jo
insl
mov
pop
jecxz
test
ficoms
andb
cmp
jecxz
test
ficoms
cmp
adc
ficoms
andb
cmp
jecxz
test
ss
jb
out
adc
pop
push
scas
mov
and
fbstp
xor
loopne
icebp
stos
sbb
int3
and
mov
in
xchg
sahf
sub
addr16
sub
adc
sub
sub
jns
adc
and
sub
pop
adc
xor
fnsave
sub
bound
aaa
add
ret
xor
mov
sub
pop
jno
dec
xor
adc
xor
sub
imul
or
and
sub
mov
xor
addr16
fs
aaa
mov
inc
sub
icebp
jle
jae
jno
leave
pop
adc
xor
adc
pushf
xor
sub
js
sub
add
das
or
and
mov
sub
leave
pop
adc
xor
insl
xor
dec
ficompl
mov
aaa
mov
xor
imul
xor
adc
xor
adc
pushf
xor
sub
mov
out
repnz
or
and
mov
sub
leave
pop
adc
xor
insl
xor
int
push
mov
aaa
into
nop
and
xor
icebp
cltd
ljmp
adc
sub
sub
jns
adc
sub
push
xor
jno
sub
addr16
fs
add
ret
xor
push
inc
aaa
orb
ss
jae
adc
xor
sub
jns
js
imul
or
and
mov
sub
leave
pop
adc
xor
adc
pushf
xor
xor
outsb
ficompl
mov
aaa
lea
fnstenv
pop
orb
ljmp
imul
sub
adc
sub
jns
adc
cs
sub
imul
pop
adc
xor
xchg
xor
add
pop
mov
ss
orb
ljmp
imul
sub
adc
sub
pop
sub
das
push
mov
cld
or
mov
jecxz
add
loop
add
jae
or
jno
out
push
or
jno
in
add
in
sti
fcomi
cli
or
jno
fptan
clc
cmpsb
rclb
jg
adc
arpl
jp
pop
cmpl
cmpl
pop
cmpl
pop
addl
xchg
pusha
xorb
xchg
ds
rolb
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
cs
nop
push
cld
es
pop
cs
add
xor
pop
incb
incb
arpl
jnp
pop
sub
cwtl
mov
or
pop
addb
inc
mov
mov
ljmp
push
lods
dec
xor
stos
cmp
pop
push
xlat
sub
cmpsb
mov
xchg
push
movsl
pop
movsl
push
repnz
popa
mov
and
rcl
pop
mov
shrl
sub
xor
sbb
cld
jns
dec
aam
mov
or
imull
dec
test
mov
xchg
jg
xor
ret
notl
or
mov
xchg
cmp
xor
inc
xchg
leave
mov
clc
cmpsl
test
xor
outsb
ds
repz
xor
jno
das
mov
sarb
leave
jae
xor
xor
mov
jnp
bound
fisubrs
jge
repz
mov
in
dec
mov
cld
jns
popa
jnp
aaa
fidivl
dec
mov
int
stos
das
xor
sbb
popf
xor
loope
sub
adc
loopne
call
inc
xchg
stc
fstp
idivb
shl
imul
add
jae
push
adc
int3
outsl
mulb
or
jns
adc
data16
faddl
adc
cmp
jmp
push
push
jno
ret
pop
out
mov
sub
sub
subl
adc
push
sub
push
push
rclb
arpl
mov
adc
sarb
ss
and
push
mov
shl
in
lahf
xchg
sub
icebp
loope
arpl
xor
ljmp
inc
dec
sbb
aam
pop
jecxz
test
ficoms
andb
cmp
jecxz
test
ss
mov
cmp
jecxz
test
ficoms
andb
cmp
jecxz
test
ficoms
adcb
sar
push
andb
cmp
jecxz
test
ficoms
andb
sub
cltd
sub
adc
pop
jecxz
test
ficoms
andb
cmp
jecxz
adc
cmp
jecxz
test
ficoms
andb
cmp
jecxz
test
ss
jo
cmp
jecxz
test
ficoms
andb
cmp
jecxz
test
ficoms
adcb
sar
push
andb
cmp
fiadds
xchg
mov
mov
xchg
cltd
sbb
pop
out
jb
mov
icebp
jae
clc
and
fidivrs
cmc
cwtl
mov
movsl
push
out
mov
adc
sbb
adc
xchg
cmpsl
sub
iret
pop
push
fistps
jg
fidivs
lea
xchg
and
aam
movsb
sub
and
in
inc
in
mov
test
or
in
fldt
lods
mov
add
cmpsl
imul
repz
mov
mov
shll
cmc
inc
loop
push
push
shrl
adc
mov
test
xchg
rcrl
jnp
xchg
lret
lods
sarl
sbb
cmc
cwtl
dec
inc
mov
cmp
inc
addr16
push
dec
in
decl
and
lods
xchg
inc
mov
arpl
icebp
mov
jne
mov
imul
lret
into
test
jg
xchg
dec
mov
xor
cmp
inc
cmp
inc
xchg
and
dec
push
imul
mov
add
and
inc
test
or
xorl
dec
fldcw
sub
popa
push
adc
imul
jbe
push
sti
adc
test
jle
add
add
adc
dec
push
repnz
adc
outsb
das
cmp
aad
stos
push
std
imul
sti
push
jno
das
dec
dec
cwtl
xor
cld
popa
and
enter
cmc
test
call
pop
push
add
shrw
adc
mov
imul
pop
push
test
mov
cs
popf
shrb
cmpsl
mov
pop
jne
cld
hlt
loop
or
mov
mov
ss
in
pop
enter
stos
dec
jno
test
ja
sbb
int3
stos
addl
jns
jmp
cld
cmpsb
pop
push
add
xchg
mov
adc
sub
and
out
adc
popa
mov
xor
jbe
inc
movsl
shll
mov
stos
ds
insl
jb,pn
jb
sti
scas
dec
mov
adc
test
hlt
and
stc
shrl
or
test
add
xchg
dec
lods
jecxz
int
xchg
jge
add
cmp
jg
adc
outsb
out
mov
popl
mov
scas
leave
insl
shrb
xor
mov
cld
cmc
cwtl
pop
push
sahf
in
jle
xchg
into
jl
paddusw
xchg
xor
jb
loope
dec
mov
or
cmp
out
cmp
sti
stos
shlb
xlat
sub
aad
ficoms
adc
addr16
gs
out
iret
pop
ss
in
xor
sub
nop
mov
jecxz
inc
fisubrs
push
jl
adcb
push
test
mov
xchg
adc
inc
pop
sub
inc
adc
icebp
xor
in
and
inc
cmp
or
push
movsb
outsb
jne
push
outsb
out
bound
jecxz,pn
insl
sarb
repnz
cwtl
notl
stos
jge
in
aad
lods
adc
dec
jae
in
scas
mov
sbb
hlt
mov
shll
dec
mov
adc
outsl
gs
mov
test
lods
test
pop
adc
outsl
push
jmp
push
lahf
test
imul
xor
cli
push
pop
mov
ret
in
push
mov
cmp
jns
xchg
add
mov
xor
mov
cmp
adc
stos
pop
or
movsb
mov
movsb
and
enter
mov
shl
sbb
mov
les
jb
sub
mov
cwtl
stos
addr16
insb
scas
mov
scas
fcoml
ffree
lock
xchg
push
fucomip
adc
dec
pusha
fucom
lea
jno
pop
in
das
lcall
adc
xor
je
enter
cmpl
mov
in
mov
inc
lret
mov
adc
jno
inc
testl
adc
sbb
stos
sbb
repnz
cmp
pop
mov
pop
scas
pop
push
int3
xor
mov
lods
js
adc
lea
cmp
je
jnp
daa
js
lock
xor
mov
mov
and
clc
loop
das
xor
insl
insl
add
xchg
insl
sub
pop
das
cwtl
inc
jno
lock
and
adc
cwtl
and
loopne
inc
sub
push
add
ja
pop
sbb
jae
xchg
xor
mov
imul
testb
call
sub
repnz
sbb
cmp
xor
insb
mov
sub
push
pusha
pusha
cmpsl
xor
mov
dec
jmp
insl
push
nop
cli
daa
add
push
rcrb
dec
xor
add
into
or
scas
repnz
cmp
adc
ret
xchg
shl
sub
jecxz
lods
fdivl
call
pop
xchg
fists
inc
outsl
adc
ds
mov
mov
mov
push
repz
test
adc
lahf
fld
sbb
jne
sub
xchg
add
sti
and
jp
cs
mov
inc
outsb
mov
dec
jle
fists
mov
inc
jae
lods
adc
add
mov
and
mov
aas
cld
pop
loopne
fdivs
inc
adc
inc
loope
mov
mov
in
subl
xchg
sbb
cmpsb
sub
ret
mov
xor
mov
add
and
xor
jb
test
mov
xor
jnp
xchg
mov
and
cs
and
mov
xor
and
les
push
sub
scas
or
shll
inc
dec
pop
jmp
je
out
xor
movsb
test
js
inc
mov
sub
adc
loopne
xor
in
outsl
pop
call
lods
adc
mov
mov
das
testb
sub
xor
cs
sarb
dec
jle
xor
pop
mov
popf
add
movsl
cwtl
lcall
sbb
fwait
popa
cmp
pop
sub
popf
out
xchg
jnp
adc
xchg
sbb
dec
fs
jl
sub
mov
fwait
pop
sbb
cmp
mov
and
xchg
push
pop
roll
jl
jmp
jbe
mov
repz
add
sbb
mov
sbb
insl
mov
sbb
movsl
rclb
or
or
xor
sub
sbb
cmp
movsb
push
repnz
push
int3
mov
pop
adc
pop
xchg
addb
fistps
jae
or
dec
adc
jb
jno
lods
lods
fwait
std
movsl
adc
test
and
cmp
andl
ss
das
inc
and
and
push
mov
xor
cmc
mov
inc
adc
xlat
xor
mov
ljmp
sub
or
inc
push
mov
in
mov
sarl
popl
xlat
test
cmp
pop
bound
fnstenv
pop
xor
and
fs
xchg
mov
int
fs
sbb
adc
loopne
mov
lcall
scas
repnz
fucomip
lcall
push
aas
inc
pusha
push
cli
push
test
int3
cmp
or
jecxz
in
imul
mov
popf
adc
leave
cld
test
test
std
adc
add
mov
lds
xchg
sub
xor
mov
or
sub
adc
xor
rdtsc
add
pusha
popf
jnp
mov
pushf
in
add
push
mull
push
sbb
ja
xor
mov
pop
ljmp
xchg
imul
xorl
pushl
loopne
cmp
mov
adc
inc
adc
or
imul
push
or
dec
addl
ss
sub
jae
or
mov
sbb
in
pusha
scas
add
mov
scas
je
sbb
xchg
xor
adc
jae
rolb
pusha
sbb
push
insl
adc
stos
movsl
dec
loop
mov
xor
cli
loopne
gs
push
sbb
inc
lods
arpl
icebp
insb
aad
push
jecxz
mov
mov
adc
push
outsb
addr16
jne
outsl
ds
mov
mov
into
or
push
repnz
mov
xor
cli
iret
adc
test
xor
in
mov
pop
or
lret
and
or
lods
or
scas
push
lahf
nop
cmp
jp
cmpsl
xchg
es
sbb
divb
pusha
mov
addr16
xchg
out
add
push
mov
jbe
ret
or
ror
mov
xlat
dec
lock
bound
adcl
jl
in
mov
jb
pop
mov
orb
fists
fnstenv
push
loopne
mov
pop
sub
stc
fs
loop
loopne
jp
loop
cmpsb
pusha
xor
ror
rorb
aaa
pop
lcall
insl
mov
mov
outsl
sarl
sub
adc
dec
scas
repnz
sub
sub
jns
mov
lret
repz
mov
cmpsb
sub
out
dec
lea
ss
shrb
cmp
js
fwait
push
pusha
imul
inc
xchg
add
sarb
inc
addr16
xchg
xor
pushf
lods
dec
mov
jb
cmp
lahf
cltd
hlt
loope
sub
pusha
sub
mov
sub
cmpl
in
insb
xor
or
mov
mov
out
xor
mov
xor
in
loopne
repnz
xchg
sub
aas
xor
addb
test
push
stos
jp
sub
stos
stc
subl
push
imull
outsl
nop
lods
out
gs
int3
je
jne
fisubrl
jb
mov
insb
cltd
mov
rep
push
mov
push
pop
sub
xchg
jbe
cld
and
dec
adc
in
dec
loopne
ja
adc
into
lea
xlat
mov
mov
dec
loop
xlat
adc
pop
push
fistl
push
dec
xchg
repnz
push
push
mov
mov
sbb
mov
mov
cmp
dec
movsb
pop
test
ror
je
sbb
adc
sqrtps
nop
dec
sahf
lahf
lret
dec
or
sti
adc
cmpsl
imul
adc
int
cltd
clc
aas
fs
repnz
xor
dec
stos
pushf
pop
push
lret
ret
sbb
shlb
nop
sub
adc
push
popf
sarl
mov
pop
sub
mov
inc
dec
xchg
mov
or
popf
jp
aam
add
pop
in
jno
clc
inc
cmp
push
fmuls
inc
jb
mov
cmp
push
popf
adcl
adcb
fwait
mov
xor
aaa
lods
out
insb
daa
jne
cmpsl
pop
rcll
xchg
imull
rcll
push
hlt
and
xchg
xor
dec
cmp
mov
adc
sub
rorl
or
cmc
pop
add
xchg
ret
jl,pn
mov
and
mov
add
and
fistpl
xor
rcrb
je,pn
icebp
mov
xor
xor
addl
xor
pushf
mov
inc
cld
divb
std
or
and
in
shrl
scas
adc
mov
mov
cli
pusha
mov
jg
adc
subb
push
inc
lods
sbb
bound
xchg
inc
insb
or
inc
inc
shl
xor
gs
and
sti
addl
notl
addb
xchg
or
jns
or
push
push
dec
adcb
push
lods
int
sub
enter
sbb
mov
out
jo
pop
push
in
sub
push
xchg
push
leave
cld
sbb
repnz
or
mov
or
or
imul
stos
daa
push
pop
push
pop
pusha
xchg
pushf
shll
xor
aam
inc
insb
pop
push
call
adc
jno
addr16
and
jno
loop
adc
in
mov
jb
pop
jno
cmp
repnz
inc
mov
iret
hlt
in
je
dec
sbb
orl
mov
mov
jg
jb
lret
imul
out
ss
xor
adc
imul
pop
pop
jmp
or
pop
cmp
xchg
popa
sti
xchg
mov
stos
xchg
xlat
scas
pop
bound
jns
xor
ljmp
cmc
dec
mov
int
cmc
repnz
pop
or
xor
nop
add
cmc
push
mov
mov
dec
push
xor
xor
and
fsub
pop
cmp
adcb
rclb
jo
loop
adc
aaa
xchg
add
test
and
and
mov
add
push
icebp
xchg
and
shl
test
int
jge
mov
mov
and
xchg
mov
inc
adc
je
popf
es
imul
xor
jae
push
jae
pushl
aam
jae
xor
mov
add
js
mov
sar
icebp
adc
stc
sub
filds
adc
and
shll
and
xor
and
xchg
jno
pop
clc
mov
push
rclb
mov
inc
aaa
in
clc
add
add
add
icebp
xchg
imul
jne
jb
sbb
pop
data16
sti
out
mov
jecxz
imul
xlat
jle
shll
mov
clc
stc
ret
je
xchg
fimuls
dec
shlb
jle
jb
test
pop
and
and
or
cwtl
mov
cmp
pop
out
icebp
bound
fistpl
mov
jns
inc
scas
stc
sub
sub
and
pop
jno
or
and
pop
dec
xor
lret
sbbl
test
sarl
inc
xchg
iret
cs
push
rclb
jno
mov
xchg
ret
pusha
sub
rcll
cld
pusha
fwait
adc
mov
call
jno
mov
imul
cs
popf
pop
lcall
enter
inc
mov
jae
xor
mov
push
add
cld
aam
push
add
mov
jp
xchg
fisubs
jmp
cmp
movsl
pop
ss
push
add
jnp
rcrb
push
outsl
mov
pop
jb
pop
movsl
rcrb
fstpl
rorb
xor
xorl
mov
int
add
fsubrs
mov
mov
add
mov
adc
das
or
add
mov
mov
or
cmp
pusha
inc
jno
sbb
add
lret
sub
add
mov
adc
icebp
xchg
add
xor
dec
icebp
in
add
dec
mov
add
pop
add
or
adc
add
loop
push
adc
or
xor
mov
push
sbb
stos
or
add
or
and
push
dec
adc
jle
dec
sbb
popf
sarb
add
xchg
jne
or
and
scas
dec
push
pop
rolb
mov
lret
push
xor
add
and
fiaddl
add
xchg
cli
and
jno
mov
push
sbb
sbb
in
jne
or
xor
in
adc
mov
pop
and
subl
icebp
xor
push
jmp
mov
leave
outsl
pop
lret
jle
mov
or
or
mov
or
inc
popa
inc
pop
jne
add
mul
xor
adc
jne
icebp
pusha
push
xor
inc
mov
jp
dec
adc
inc
inc
and
sub
inc
dec
in
out
stos
insl
xchg
push
jno
jbe
inc
mov
inc
test
dec
sub
fwait
je
cmp
pop
cmp
pop
fistpll
and
push
or
and
xor
pop
push
cmp
jp
mov
push
stc
imul
mov
add
jae
jns
cmc
mov
push
add
je
loopne
add
mov
icebp
jle
stos
scas
or
pusha
xchg
add
adc
push
inc
ret
leave
push
je
push
hlt
push
xor
cmp
jno
push
inc
popa
mov
jg
xor
lea
adc
lea
cwtl
push
mov
jns
lret
cmp
stc
jl
jne
scas
dec
arpl
push
xorl
in
and
sub
adc
mov
arpl
orl
in
cmpl
pop
jno
lds
loop
icebp
js
stos
test
sub
orl
outsl
aad
adc
or
pop
xchg
push
add
out
adc
pop
jno
xchg
sbbb
sub
in
or
ds
cmp
adc
xor
push
jno
pop
shl
inc
mov
add
mov
sbb
sub
add
mov
insb
jno
sbbb
dec
andl
fcom
and
ds
mov
lea
xor
sub
push
jne
scas
add
or
jno
push
mov
cld
mov
or
add
mov
jnp
aas
mov
push
xor
add
scas
add
sub
adc
or
jo
xchg
push
sbb
imul
ficomps
pop
jge
jae
and
add
push
mov
ljmp
sahf
decl
aaa
mov
iret
sub
outsb
rcrl
fisttps
or
xchg
in
mov
xor
mov
or
icebp
mov
push
xchg
and
adc
cltd
ss
shll
mov
xchg
fldl
push
add
shlb
aas
pusha
jo
jns
mov
in
inc
mov
or
scas
and
add
mov
xor
add
push
gs
int
lods
add
mov
jno
outsb
sub
mov
push
sub
pop
faddl
popa
popl
xor
adc
aam
stos
movsb
or
mov
add
mov
icebp
ret
sub
xor
rorb
aas
add
cmc
jecxz
mov
push
mov
xchg
fsubrs
outsb
mov
xchg
sahf
jns
xchg
add
das
fisubrl
adc
add
xchg
mov
xchg
jbe
lods
pop
sti
mov
mov
test
inc
push
xor
adcl
inc
insl
repz
cmp
frstor
mov
xchg
cmp
repz
add
add
mov
sub
push
xchg
mov
inc
xorl
int
push
fistl
test
lcall
sbb
test
std
jle
lea
inc
jecxz
mov
ss
sbb
pop
testl
inc
xor
adc
aas
mov
icebp
insb
ds
ss
test
jle
jno
lea
cmp
mov
sub
push
mov
mov
mov
mov
andb
nop
test
test
add
insl
mov
mov
or
imul
push
or
mov
or
mov
das
lret
or
subl
data16
sbb
jl
and
jmp
jmp
ret
push
xchg
ret
movsl
add
sub
scas
push
ret
mov
mov
xchg
int3
insb
loope
cs
inc
inc
push
xchg
ffreep
outsb
adc
adc
sub
ja
inc
sbb
push
mov
repz
int
xchg
sarl
mov
mov
mov
adc
xor
popf
mov
add
jle
adc
ret
jge
jnp
xorl
fucomip
stos
xor
pop
lcall
xor
inc
lods
in
sub
inc
imul
xchg
xchg
in
lods
jae
pop
lcall
test
rcrl
mov
ljmp
insb
or
rcrb
fdivrp
or
fptan
sti
outsb
not
sbb
mov
lods
js
jecxz
unpcklps
sub
fdivrs
shrb
bound
js
xchg
cmc
je
icebp
inc
dec
jns
push
insb
dec
mov
cmp
or
mov
shll
repnz
js
inc
jecxz
mov
and
cltd
jmp
jg
xchg
mov
andb
xor
lahf
popf
out
push
jno
mov
ss
les
mov
jae
xor
cmp
and
adc
jmp
jo
and
dec
jl
push
loopne
shll
sarb
push
insl
push
lahf
cmp
mov
cmp
mov
xor
ret
repnz
imul
insb
pop
divb
xchg
mov
bnd
pop
or
int
gs
aaa
xchg
and
cmpsb
or
std
mov
mov
mov
into
mov
xor
inc
jle
mov
dec
mov
mov
mov
jge
mov
mov
sbb
jp
push
add
pop
push
lods
cmc
jb
inc
mov
inc
jg
adc
ret
push
mov
mov
or
jmp
sarl
std
into
dec
adc
pusha
adc
shl
mov
imul
js
fimuls
adc
add
add
xchg
push
stos
repz
inc
and
lods
outsb
jecxz
mov
mov
ja
mov
mov
test
sub
stc
das
adc
ss
lods
stos
cmp
scas
popf
mov
and
jae
mov
push
xor
adc
push
aad
enter
xor
adc
out
mov
scas
pusha
insb
fucomp
add
xor
dec
push
repz
mov
repz
mov
mov
in
mov
icebp
inc
sub
push
xchg
into
cmp
or
mov
mov
inc
cmp
insl
sub
xchg
jnp
cmc
testl
out
cmp
sbb
add
cld
mov
mov
dec
or
pop
shlb
push
bnd
sbb
sbb
mov
in
test
or
xor
out
xchg
adc
jb
dec
adcl
and
test
mov
cs
rclb
lret
lds
and
or
pop
xor
insb
mov
and
in
cmp
icebp
repz
or
pop
mov
or
ret
xchg
sbb
cmpl
cmpsl
mov
fldl
add
xchg
int3
aaa
ret
push
jmp
xor
jo
pusha
arpl
ja
mov
cmp
insl
cmpsl
jns
mov
mov
and
and
addb
pop
push
and
xchg
push
ja
out
mov
loopne
xchg
push
int
sbb
imul
cmp
adc
out
std
push
enter
mov
push
mov
mov
xor
stos
dec
sar
xlat
sub
or
jg
cmp
sub
sbb
add
aaa
jmp
add
into
imul
loope
cs
adc
mov
sub
xchg
int
fildll
outsb
mov
or
mov
inc
leave
in
push
mov
in
add
mov
sbb
sub
mov
or
dec
push
fidivl
push
adc
sub
lods
or
sbb
push
jbe
fidivrs
xor
dec
mov
push
xchg
adc
xor
das
mov
repnz
jne
leave
cmp
addl
xor
push
hlt
outsb
data16
dec
iret
in
jb
clc
insb
mov
sbb
std
push
xor
push
xchg
xchg
xor
jno
add
mov
or
adc
xchg
sub
jmp
mov
stc
sub
inc
std
xchg
enter
shrl
push
int3
pop
in
add
lahf
xchg
mov
cs
scas
and
shrl
insl
outsl
icebp
jb
iret
xchg
je
out
cmpsb
pop
jp
push
das
jae
xchg
dec
clc
jbe
push
sub
test
ret
mov
or
jno
jns
cs
mov
out
and
shl
add
hlt
out
sub
adc
cmpsb
inc
dec
inc
test
mov
pop
or
int
lea
inc
testl
xor
scas
in
cmp
ja
bnd
mov
jno
adc
xchg
fiadds
jno
aam
repz
sarl
cmp
gs
adc
lret
pop
or
jne
ficomps
adc
arpl
jno
rcll
ss
xchg
dec
jno
xor
repnz
cmp
test
out
xor
scas
adc
mov
jmp
mov
pop
xor
mov
push
and
loopne
xor
shlb
outsb
pop
int3
inc
sbb
mov
push
mov
mov
xchg
or
sub
lea
adcb
es
cmc
es
push
mov
cmp
jmp
cmpsb
jb
push
insl
jb
add
inc
fs
xchg
test
shl
repnz
mov
push
mov
enter
cmp
adc
xor
xchg
push
jne
mov
mov
jle
xlat
rcl
aas
add
sbb
jb
hlt
sbb
test
xlat
push
jg
lods
push
pop
popa
pop
aam
mov
pop
mov
cmp
push
fwait
ret
sub
push
sahf
fildl
sub
addr16
add
scas
ljmp
movsb
jg
inc
jmp
subl
jl
cmp
cmp
fldl
jl
add
xchg
js
and
mov
rclb
xchg
cwtl
orl
jb
push
xor
mov
iret
adc
sbb
add
stc
in
ret
jno
xorb
ja
mov
xorl
test
and
scas
jp
movsb
or
adc
repnz
rolb
cmp
hlt
sbb
jmp
xchg
jle
enter
outsb
cltd
sub
fimuls
pop
inc
dec
test
adc
adc
xchg
jbe
mov
out
pop
sti
scas
and
adc
mov
xchg
inc
out
loop
adc
xor
add
aad
push
inc
std
mov
aas
push
push
std
bound
loope
jmp
in
add
mov
lret
adcb
push
push
andl
add
sti
pop
imul
mov
mov
insb
outsb
ja
and
add
loop
in
inc
add
imul
imul
mov
movsl
dec
or
mov
or
xor
shl
mov
fimull
subl
imul
je
data16
or
inc
shr
jae
sub
pop
outsl
mov
push
push
adc
add
loope
push
rcrb
sub
sbb
mov
outsb
mov
popa
add
aaa
sbb
lret
icebp
push
push
popa
mov
mov
mov
mov
sub
or
mov
shlb
sub
int3
or
mov
ss
xor
imul
loop
jmp
add
out
jmp
ss
sub
pop
jmp
test
test
mov
test
or
or
leave
in
xchg
mov
imul
subb
mov
outsb
imul
imul
imul
jecxz
sbb
dec
fnstenv
jecxz
sub
icebp
sub
jne
sub
outsb
jne
push
shlb
jns
stos
outsl
xor
push
jmp
push
xchg
pop
xorb
loopne
lods
xchg
pushf
dec
xor
pop
negl
lds
addl
cs
jge
mov
add
add
mov
loope
lods
or
shll
and
jb
clc
fsubr
popa
ss
xlat
je
dec
jecxz
and
mov
push
xchg
mov
jecxz
mov
lcall
lret
and
notb
cld
popa
jecxz
popa
xor
and
cmp
xor
pop
inc
inc
xchg
inc
aaa
xchg
jnp
mov
fs
out
int
cmp
jb
aas
add
pop
xorl
jl
repnz
jno
mov
sbb
mov
add
sub
iret
repnz
addb
add
adc
cmp
inc
data16
lea
mov
inc
sub
lret
in
jecxz
sub
sub
outsb
mov
and
or
add
push
inc
iret
lea
cmp
fdivrp
mov
out
push
inc
shr
jmp
call
sub
imul
xchg
mov
rcl
insb
add
cli
jns
dec
and
insb
inc
fs
nop
movsl
xor
pop
jne
sub
mov
xchg
outsb
jecxz
push
fadds
nop
sbb
or
bound
cmp
imul
or
cmp
xor
mov
mov
fldt
repz
xor
out
sub
jne
jb
lea
into
in
xchg
fimuls
xchg
inc
push
rcrl
or
jg
xchg
test
xchg
stos
push
clc
bound
adc
sub
repnz
mov
mov
mov
rclb
adc
ds
or
lahf
aaa
scas
sti
jno
or
outsl
dec
mov
cmp
adc
fs
sbb
xchg
addb
popa
out
xor
xchg
stos
add
pusha
data16
adc
or
or
icebp
cmp
mov
and
das
aam
dec
ret
push
fwait
xchg
ss
mov
shrl
pop
jge
or
repnz
icebp
and
fwait
jp
jnp
cmp
push
sbb
les
lea
jne
mov
scas
dec
lods
lea
cmp
jecxz
mov
cli
or
and
mov
mov
inc
rcll
mov
cmp
shlb
fdivrl
std
mov
fidivrs
jnp
mov
scas
add
mov
popf
pop
in
mov
test
add
mov
shrl
xchg
jnp
fidivs
or
sub
pop
pop
jg
subb
or
jb
add
mov
mov
jge
jge
mov
out
pop
sub
xchg
dec
jb
or
mov
das
aaa
fisttpl
sub
mov
jmp
push
jecxz
inc
cmc
mov
dec
xchg
dec
add
test
push
in
mov
rcr
pop
test
sub
inc
dec
insl
shrb
in
sub
xor
mov
fwait
sbb
push
mov
data16
je
jmp
jo
repz
cs
inc
in
or
arpl
inc
sarb
fcmovnu
sub
push
cs
aam
loopne
lahf
add
and
stos
cmp
scas
imul
insb
fidivs
je
mov
and
repnz
pop
and
inc
xor
in
xchg
cmp
out
pop
mov
mov
or
mov
pop
inc
lods
sub
movsb
out
mov
jno
lods
mov
xor
add
mov
test
jno
inc
lods
mov
pop
jmp
cli
fidivl
jnp
mov
pusha
insb
std
inc
mov
in
cmp
xorb
out
mov
inc
lret
xor
pusha
je
dec
adc
add
in
add
cmp
sub
push
or
add
in
adc
sub
mov
jmp
push
cmp
data16
mov
sbb
je
leave
cmpsl
rcll
push
mov
ljmp
cs
xor
xchg
mov
xor
push
imul
ror
adc
and
inc
xor
cs
xor
inc
jg
addr16
pop
xchg
xchg
sub
insb
xchg
mov
mov
aad
fdivl
xor
lret
lods
ds
push
xor
mov
inc
lahf
sub
mov
leave
cltd
aas
pop
mov
adc
ret
dec
push
adc
mov
in
jne
mov
int3
jno
dec
mov
inc
pop
xrelease
mov
or
inc
je
mov
lret
mov
xor
dec
outsl
mov
lea
inc
loope
daa
dec
adc
dec
jecxz
int3
add
pop
repnz
push
jp
lahf
mov
ret
mov
cmp
or
fwait
pop
imul
add
cmp
xor
xchg
mov
push
loop
sbb
or
pop
imul
fisubrl
mov
cmp
in
and
sbb
mov
pusha
mov
inc
popa
hlt
test
icebp
cmc
pop
jo
stos
decl
out
scas
fsubl
mov
es
inc
pop
inc
in
fbstp
xor
test
mov
and
arpl
enter
jb
lahf
mov
arpl
add
scas
sbb
mov
pop
sub
sarb
inc
int
repz
outsl
and
jae
xchg
mov
icebp
arpl
jne
sub
ret
pop
rcrl
mov
pop
sahf
sub
mov
divl
dec
jne
cli
add
or
sahf
out
push
sbb
mov
add
repnz
jl
add
xor
xor
jle
inc
and
inc
push
aaa
inc
jecxz
mov
xor
cmp
lds
mov
xchg
mov
ss
test
cli
xor
mov
and
jno
je
ret
mov
pop
xor
or
cmc
int
jp
xchg
mov
scas
mov
movsb
sub
rcrb
das
mov
mov
fisubrl
or
scas
cmp
popa
pop
mov
inc
mov
cmpsl
mov
mov
arpl
jo
dec
mov
mov
dec
cltd
dec
and
scas
mov
mov
or
mov
int
sbb
arpl
dec
inc
les
imul
leave
call
push
xor
lods
nop
rclb
add
daa
push
ljmp
dec
stos
jp
and
add
sarl
push
insb
sarl
mov
or
lods
and
sbb
rcl
rcll
sbb
push
cltd
xor
jbe
add
je
cmpsl
push
inc
icebp
pusha
mov
push
lret
movsl
nop
cltd
fs
push
xchg
out
jl
xor
cs
push
push
xor
adc
lcall
sub
ss
int3
aam
daa
push
jbe
icebp
add
je
push
mov
rcrl
push
cs
inc
adc
pop
pushf
mov
pop
addr16
pop
or
shlb
mov
shrl
xchg
inc
adc
ljmp
test
test
add
adc
sub
mov
xchg
rclb
inc
fcompl
and
outsl
jl
mov
mov
aad
mov
mov
push
insb
lahf
mov
pop
xchg
mov
or
insb
nop
insb
mov
cld
ror
in
cs
adc
out
dec
xor
sub
mov
xor
in
sbb
cs
aas
jmp
mov
scas
scas
pop
pushf
adc
inc
in
adc
mov
mov
jo
es
mov
jl
mov
test
mov
leave
ljmp
xor
push
push
mov
das
pop
xchg
and
add
mov
jno
shlb
xor
mov
or
inc
mov
bound
xlat
fisubrs
mov
fimuls
pmaxsw
cmp
pop
out
xchg
dec
arpl
fdivrl
rorb
xchg
insl
push
ret
insb
inc
jp
xor
clc
mov
stos
push
xchg
jl
outsl
es
mov
dec
std
mov
out
mov
cltd
loope
add
icebp
jo
out
pushf
or
popf
and
xchg
or
mov
gs
jae
jl
es
or
inc
add
inc
pop
cmpsl
add
mov
test
mov
mov
adc
pushf
add
lods
jo
xor
lods
int3
mov
lods
add
and
xor
cs
stos
xlat
lea
addr16
sbb
mov
jbe
insb
ss
sbb
outsl
adc
xor
aas
out
push
pop
scas
repnz
sbb
imul
sub
jmp
scas
jge
mov
or
sti
je
loope
fmulp
call
insb
mov
cbtw
pop
es
repnz
pop
aas
or
popa
xor
scas
pop
push
push
mov
fcoms
xor
xchg
dec
xor
das
in
repnz
clc
jae
pusha
or
jl
repnz
sbb
jl
and
dec
mov
lahf
pop
dec
negb
loop
fdivr
jb
mov
es
ss
dec
push
sub
sub
std
push
jno
loopne
xchg
mov
and
dec
jp
aam
nop
add
repnz
mov
rclb
call
xchg
push
mov
mov
sub
or
test
shlb
jge
push
xchg
xchg
adc
icebp
cltd
push
adc
jo
sub
mov
nop
adc
lea
cmp
or
adc
and
mov
mov
test
push
test
gs
inc
iret
pushf
jne
adc
adc
out
push
add
lahf
imul
mov
add
cs
mov
push
push
mov
int
stos
xchg
repnz
je
adc
repnz
rorb
jb
into
xchg
jno
push
scas
xor
ja
sub
rcr
push
xor
insl
pusha
out
leave
xor
cmpb
or
adc
std
aad
fs
iret
mov
mov
push
leave
add
xchg
dec
push
inc
sbb
xor
mov
scas
xor
sbb
popa
in
sub
dec
mov
xor
mov
mov
adc
das
daa
or
mov
jge
sub
dec
jno
jae
xorl
jno
mov
dec
leave
or
pop
sub
sub
sbb
jle
adc
or
lds
ljmp
sbb
push
pop
inc
in
and
xchg
xchg
mov
sbb
push
jbe
cs
add
inc
inc
xor
add
add
push
cli
stos
jb
sub
insb
sub
test
clc
jb
pop
adc
and
mov
pop
sub
push
sub
lret
and
ud2
lods
ss
cmp
inc
xchg
adc
adc
in
push
jno
test
mov
out
pop
cmc
rcl
mov
pushf
push
xchg
xchg
xor
loope
out
and
jle
rcrl
imul
mov
das
bound
lea
mov
inc
or
cmc
mov
aam
movsb
jne
and
push
mov
imul
insb
icebp
scas
jo
push
adc
bound
or
or
je
ss
repnz
inc
rclb
or
out
mov
inc
scas
mov
sub
bnd
mov
jb
mov
pop
push
insl
dec
jno
int
out
jmp
mov
or
sub
jae
add
negl
add
gs
mov
mov
pop
push
inc
icebp
push
je
dec
pop
adc
adc
or
out
mov
cmpsl
mov
cmp
insb
mov
xor
lods
xor
arpl
mov
and
sub
int3
sub
xor
shll
add
daa
int3
iret
scas
cmp
jp
and
cmp
jge
fisubrl
rcrl
addr16
mov
aas
loopne
dec
enter
xor
dec
sbb
mov
fsubrp
xor
dec
std
orl
insb
push
and
jo
mov
xor
adcb
pop
test
xchg
pop
enter
shll
push
subb
cld
mov
insb
test
mov
mov
mov
mov
pop
repnz
mov
add
jo
idivl
jg
add
shlb
inc
mov
shl
jnp
loopne
lret
jnp
mov
pop
shll
adc
out
sarl
out
jbe
loope
lret
lea
enter
js
pop
adc
imul
leave
icebp
icebp
movsl
js
jb,pn
add
scas
les
fs
add
cmp
xchg
sbb
sub
sahf
shlb
xor
jge
cltd
adcl
sub
or
jg
mov
mov
dec
xor
add
add
popf
movsl
nop
adcl
xor
jl,pn
test
lret
std
neg
icebp
aaa
icebp
and
out
mov
push
jno
pop
inc
scas
and
xchg
xor
aaa
jae
int
xchg
mov
push
bnd
sahf
xor
mov
fs
jbe
outsb
lods
mov
outsl
movb
mov
andb
fistps
or
js
mov
dec
jb
addl
sahf
push
jmp
sbb
imull
cmp
mov
fs
repz
pusha
xchg
and
and
cli
sub
pop
inc
insl
mov
xchg
mov
imul
sub
ljmp
xor
jnp
int
fs
bound
pusha
pop
and
mov
mov
mov
sbb
cwtl
push
add
jmp
je
mov
push
xor
push
insl
add
insb
or
xorl
sub
mov
leave
xor
push
stos
sub
and
out
leave
push
mov
xorb
ljmp
stc
rorb
enter
lcall
mov
xor
sbbb
or
sub
dec
xchg
add
ljmp
addr16
scas
mov
icebp
out
pop
leave
gs
sbb
or
xchg
test
mov
mov
mov
ret
outsb
mov
mov
inc
stos
mov
lods
mov
push
shrb
jbe
jmp
ja
arpl
or
sub
xchg
test
stc
hlt
aas
xchg
adc
jmp
xor
scas
mov
aad
sub
push
pusha
insb
ss
jbe
pop
mov
outsb
or
pop
adc
mov
jb
jl
adc
mov
imull
push
or
push
ret
jns
add
mov
mov
bound
fs
sbb
shll
aaa
push
jns
push
adc
or
aaa
or
daa
and
rolb
ret
test
movsl
sti
adc
add
movsl
mov
or
or
loop
sbb
cs
mov
inc
push
xor
xchg
repnz
imul
sbb
popa
xor
ja
mov
push
rclb
out
dec
pop
testl
xchg
mov
nop
push
loop
cmp
subl
xor
xorl
lods
out
lods
rorb
int3
jne
add
jbe
pop
repnz
push
ficompl
ss
xchg
sbb
in
xchg
ficoms
push
sub
icebp
sbb
or
xor
fisubl
sub
add
shll
cmc
jne
ja
sub
mov
ja
adc
adc
test
push
imul
ret
jb
into
mov
jns
sbb
pusha
rcr
ss
aas
mov
sbb
mov
scas
jno
mov
or
adc
or
xchg
sbb
jno
aam
shlb
lahf
push
ja
mov
push
pop
popa
xchg
dec
sub
inc
nop
loop
testb
mov
add
dec
pop
cmp
jge
inc
stos
push
mov
rolb
or
mov
movl
xchg
inc
cmp
or
sub
mov
sarl
dec
mov
sub
sbb
push
xchg
mov
fists
inc
dec
xchg
in
or
and
out
or
mov
stos
icebp
aas
push
and
imul
sbb
leave
jmp
stc
xor
lea
std
jae
iret
and
movsb
movsl
fwait
sub
dec
bound
adc
loopne
loop
out
jns
xor
xchg
sti
in
sahf
adc
push
jno
ja
iret
out
imul
shll
gs
inc
push
push
inc
mov
mov
jae
add
mov
test
mov
cmp
lds
addl
mov
nop
sahf
push
ds
mov
imul
jnp
mov
lods
mov
inc
add
or
sbb
xchg
stc
mov
shll
xor
sbb
adc
dec
movl
in
sbb
or
sub
outsl
out
and
adc
lods
push
lret
and
es
add
sahf
mov
mov
aad
push
cmpsl
popf
xchg
bound
ds
pop
adc
xor
xchg
mov
cmp
pop
out
icebp
mov
mov
ret
pop
sub
smsw
adc
mov
imulb
sarl
or
jecxz
ret
or
mov
pop
push
test
lret
sahf
add
out
mov
push
push
mov
adc
pop
inc
xchg
stos
and
hlt
xchg
and
in
bound
lods
ljmp
sub
push
jb
shr
testb
xor
or
sub
sbb
in
fisttpl
ss
outsb
sbb
in
mov
xor
repz
imul
call
sbb
outsb
call
icebp
pusha
mov
sarb
fcoms
dec
loopne
aam
jb
popa
mov
ret
in
imul
pop
icebp
sub
and
mov
stc
jb
sub
enter
pop
add
add
mov
pop
mov
xchg
jno
clc
les
and
sub
mov
inc
mov
xchg
dec
xchg
divb
and
rcrb
dec
cmp
pop
add
icebp
adc
mov
xchg
sub
adc
push
dec
ljmp
ljmp
ljmp
stc
mov
repz
jne
fs
pop
mov
adc
jne
dec
mov
sahf
mov
mov
mov
outsl
mov
mov
movsl
cmc
mov
idivb
and
mov
jb
inc
aas
mov
test
in
jmp
stos
adc
add
ret
mov
mov
test
fnstenv
mov
shlb
xchg
mov
imul
in
daa
aaa
dec
xorb
les
pop
xchg
xor
sahf
ljmp
add
mov
xor
jne
dec
mov
xorl
es
mov
xor
imul
cwtl
and
sarb
test
leave
sub
popa
mov
outsl
mov
adc
inc
hlt
rorb
mov
cmp
mov
das
mov
jge
shll
out
jecxz
cmpsl
ss
sbb
xor
adc
adc
adc
test
hlt
add
and
stos
xchg
mov
dec
jns
test
mov
imul
push
clc
movsb
shl
lods
jg
mov
dec
cmc
mov
lea
mov
movsb
mov
and
jecxz
push
das
xchg
fidivrs
inc
bsf
mov
sbb
mov
push
scas
adc
mov
fwait
push
inc
loopne
sahf
test
movl
call
xor
adc
outsl
push
jecxz
les
pop
sbb
out
mov
in
sub
movsb
popf
js
cmp
push
jno
icebp
mov
pusha
mul
imul
xchg
loopne
stos
mov
insl
cs
or
xchg
pusha
sub
xchg
inc
sub
and
sub
dec
hlt
cld
sbb
adc
mov
pushl
mov
xor
jns
enter
xorl
loopne
push
xchg
inc
push
jno
xor
aad
and
sbb
imul
int
loopne
rolb
into
push
adc
add
or
daa
mov
sub
push
mov
sub
add
xorl
pop
mov
push
ret
into
xchg
shrl
stc
aad
jns
gs
cmp
or
pop
mov
into
cmpsb
pop
xor
cmp
mov
js
enter
lods
loope
ret
mov
faddl
pop
das
or
sub
clc
lea
loop
push
jbe
xchg
sub
push
cmp
or
addb
dec
xor
dec
sbb
pop
lea
push
jne
out
std
lahf
mov
stos
push
pop
add
aam
dec
push
mov
in
out
mov
std
jge
mov
sbb
sahf
insb
xchg
test
jns
cmp
leave
pop
mov
mov
icebp
push
push
es
imul
fstpt
jnp
ja
mov
cmp
fnsave
aad
rcr
mov
scas
data16
rcrl
dec
sbb
insl
int3
scas
jge
pop
jmp
cs
mov
mov
jp
into
xchg
or
shrb
dec
jns
dec
add
lods
pcmpeqw
mov
add
jno
or
popa
xchg
pop
mov
sub
and
mov
or
sub
cmp
dec
das
xchg
mov
js
imul
clc
pop
cs
addr16
jge
or
icebp
mov
lret
out
popa
mov
xlat
jb
cmp
mov
lcall
popf
xor
add
sbb
clc
testl
push
xchg
sub
ret
shll
cmp
fwait
add
daa
pop
pop
subl
sub
cmp
in
dec
add
xlat
cmp
xor
imul
or
inc
das
mov
pop
sbb
jb
xor
fs
je
inc
js
ret
cli
mov
icebp
cli
mov
cmp
cmp
ljmp
xchg
cmp
mov
fyl2x
imul
mov
sbb
mov
jle
fwait
jnp
mov
mov
test
cmpsb
ficoml
scas
insb
dec
pop
or
pop
xchg
popf
xor
sub
or
icebp
imul
daa
inc
xchg
xchg
fisttps
mov
dec
das
mov
mov
xchg
sub
pop
xor
addr16
add
stos
dec
mov
out
testb
add
add
add
mov
roll
sbb
jmp
mov
inc
lea
lret
lret
mov
loop
mov
ret
inc
fmul
pop
add
inc
dec
push
or
adc
rcll
daa
hlt
mov
xchg
add
mov
cmp
std
dec
call
addr16
jno
add
and
push
mul
insb
inc
sbb
add
push
mov
int
xor
fildll
loopne,pt
addr16
jb
pusha
lods
add
jmp
jg
repnz
mulb
outsb
mov
das
mov
pop
adc
scas
mov
jae
fwait
push
mov
cmp
icebp
repz
cmp
jno
adc
xchg
inc
mov
xor
aaa
jecxz
and
mov
fsubr
xchg
pop
js
bound
xchg
outsb
jno
jecxz
stc
in
jb
icebp
fcomi
outsb
inc
dec
xor
jo
push
icebp
jae
ja
out
cli
xor
push
xor
mov
addr16
push
adc
push
addr16
leave
pop
adc
insb
ret
jae
jb
xor
testb
jo
mov
jecxz
sub
pop
jne
add
pop
push
add
adc
imul
outsl
adc
add
push
xor
fildll
addr16
stc
adc
pop
or
mov
cmp
ljmp
push
xor
push
sub
addr16
dec
xor
adc
mov
insl
outsl
icebp
jecxz
outsb
out
int3
insl
jge
mov
add
adc
adc
jo
and
ljmp
push
mov
iret
sub
jns
adc
add
push
xor
neg
and
pop
adc
in
in
adc
xor
nop
test
sbb
adc
je
push
sub
jns
mov
leave
pop
adc
adc
xor
insl
cs
imul
out
addr16
repz
dec
subb
aam
mul
and
addr16
and
push
adc
add
push
xor
dec
sub
addr16
jb
adc
lods
push
icebp
ljmp
mov
jne
mov
adc
and
push
xor
imul
add
adc
insl
push
sub
jns
pop
sti
mov
mov
push
jno
outsl
pop
vpunpcklwd
test
jle
mov
add
adc
push
outsb
leave
pop
adc
idivl
insb
pop
xor
jae
jne
jb
mov
xor
add
orb
ljmp
pop
popa
add
add
cmp
cmp
xchg
cmpsb
aad
mov
mov
xchg
int
mov
add
mov
sti
jae
or
mov
stc
jae
or
mov
pushl
or
mov
std
jae
or
mov
add
cli
add
int3
pop
xor
add
loopne
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
sub
xchg
sub
sub
jnp
pop
sub
pop
sub
pop
sub
sub
pop
push
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jae
push
push
push
push
push
push
push
push
push
add
shlb
sarl
imul
sbb
add
outsb
outsb
xor
insb
int
jmp
jno
jo
shlb
pushf
jne
je
imul
fsubrl
push
popf
mov
ss
jecxz
lahf
aas
shl
lret
test
aam
test
cmc
lock
loopne
xor
je
adc
jbe
dec
push
push
push
mov
daa
sub
out
popf
scas
inc
leave
xor
ss
ljmp
jae
and
jno
in
int
jl
icebp
sbb
add
push
insb
scas
jecxz
lea
xchg
cmpsb
lahf
push
shll
push
mov
fcmovu
sub
pop
sbb
xchg
adc
sbb
mov
outsl
xor
add
mov
icebp
xor
cltd
and
jle
push
and
dec
fnstsw
movsb
push
mov
in
js
sarl
in
fisubrs
stos
in
adc
xlat
mov
je
inc
sbb
jbe
call
movsl
add
xor
ljmp
lahf
xor
mov
xor
icebp
add
jge
sbb
sub
loop
xchg
std
in
andl
xor
sub
lods
fimull
xor
mov
dec
fistpll
out
or
js
xchg
les
ret
stc
jmp
cmp
subl
mov
adc
mov
pop
inc
xorl
jmp
lods
jnp
outsb
sub
stc
sbb
jbe
lahf
outsb
jp
cli
cmp
xor
scas
cmp
mov
lea
popl
xor
mov
cmpsl
aad
mov
jns
int3
loop
insl
mov
mov
lahf
pcmpgtd
ja
mov
rol
jp
jge
ret
fsubrs
insl
stos
push
mov
lea
sub
sbbl
repz
xchg
setle
xchg
jl
pop
xchg
stos
cltd
push
scas
outsl
aad
imul
leave
mov
sub
sub
gs
jge
adc
dec
and
xor
xlat
or
jno
loope
aam
data16
mov
adc
push
orb
adc
adc
outsl
mov
insl
bnd
lea
sbb
fdivs
push
mov
add
pop
xchg
lret
mov
adc
data16
cmc
add
add
and
adc
int3
mov
out
dec
xchg
mov
mov
lods
sar
cmc
adc
sbb
xor
add
fadd
mov
push
shrl
icebp
xlat
xor
mov
bound
gs
adc
lcall
xchg
cmp
nop
xchg
das
inc
pushf
adc
das
je
jne
xchg
inc
mov
mov
fwait
inc
add
stos
in
les
out
or
insb
fnop
addr16
adc
adc
add
mov
in
dec
add
adc
and
jmp
cmp
push
cs
int
cmc
add
inc
rcrl
movsb
push
lods
mov
or
xchg
sub
xorl
xchg
push
push
xchg
les
sub
lods
arpl
stos
adc
pop
lock
inc
sub
mov
cmp
xor
mov
jno
sbb
repz
xorl
imul
xchg
insb
aaa
mov
jb
push
icebp
jo
ja
sub
jne
je
imul
insl
imul
outsb
insl
jns
adc
jb
jno
jo
clc
adc
ficoms
andb
cmp
jecxz
test
ficoms
andb
mov
adc
pop
jecxz
test
ficoms
andb
cmp
xor
jne
cmp
jecxz
test
ficoms
andb
cmp
jecxz
test
andb
cmp
jecxz
test
ficoms
andb
cmp
jecxz
test
ficoms
es
outsb
mov
push
jecxz
test
ficoms
andb
cmp
jecxz
test
ficoms
cmp
adc
ficoms
andb
cmp
jecxz
test
ficoms
andb
push
das
cltd
xor
jno
aad
mov
mov
movsl
push
and
shrl
gs
aam
movsb
jge
addl
inc
cmp
adc
mov
xlat
lea
ja
sub
sub
adc
push
repnz
fwait
pop
mov
ret
scas
fistps
and
xchg
xor
xor
outsl
dec
mov
inc
inc
mov
lods
shrb
ds
add
xor
roll
lock
add
sbb
icebp
mov
pushf
mov
inc
inc
mov
mov
loope
shrl
aaa
push
cmp
divl
lahf
rcll
stc
xchg
test
push
test
mov
inc
adc
scas
mov
mov
clc
adc
loope
ret
adc
cmp
outsl
sbb
call
add
js
loope
fists
mov
inc
loope
pop
push
mov
sub
mov
int3
push
xor
add
fldl
or
int3
add
pushf
sub
scas
adc
push
pop
das
push
xchg
pop
xor
add
leave
lea
mov
out
iret
adc
cwtl
sbbl
int3
testl
rorb
icebp
pushf
xor
xor
push
aas
cs
in
lahf
or
mov
icebp
cltd
pop
xor
mov
adc
cmp
jg
sub
inc
sbb
dec
adc
inc
ljmp
cmp
or
repnz
mov
int
and
cs
cld
loop
dec
jns
push
xor
cmp
inc
or
mov
arpl
push
insb
andb
push
and
push
jb
pop
pop
mov
mov
add
sub
inc
push
mov
icebp
leave
adc
out
add
cs
mov
fidivs
cmc
fisttpll
adc
mov
jmp
lods
sub
call
mov
scas
lret
mov
mov
add
mov
mov
mov
adc
pushf
outsl
stos
and
test
dec
std
jmp
sahf
aam
lret
inc
test
adc
popf
adc
sub
inc
mov
pop
push
adc
test
push
cmp
bound
test
xchg
add
lods
add
mov
inc
shlb
pop
jne
into
in
cs
sub
push
dec
rorb
data16
jae
lret
mov
cli
repnz
sarb
xor
add
jmp
jp,pn
mov
rolb
mov
sbb
push
sub
inc
jle
rcrl
rclb
jp
aaa
xor
pop
loopne
xor
jmp
or
iret
jmp
push
ja
repnz
push
xchg
stc
loopne
outsl
fimuls
loop
cmpsb
sbb
inc
movsl
jns
cmp
aam
ljmp
and
push
in
and
xorl
fldl
mov
shll
aaa
xorl
or
mov
cmc
mov
out
mov
push
cli
aaa
adcl
rclb
or
or
and
gs
sarl
imul
outsl
mov
pushf
in
xchg
lds
ret
cmp
inc
xchg
pop
xchg
shll
imul
icebp
sub
jne
push
xlat
or
sbb
inc
leave
or
jae
mov
int3
dec
pop
stos
xorl
mov
icebp
cld
movsb
loope
mov
scas
stc
sbb
test
scas
std
sbb
test
fcom
dec
pop
cmp
leave
xor
jo
add
arpl
xor
add
xlat
add
cmp
pop
cmc
insl
jne
xor
insl
mov
mov
adc
mov
imull
outsl
push
out
rorb
mov
iret
nop
clc
or
cmpsb
push
mov
fcoml
push
jno
rorb
adc
jp
push
sbb
rol
add
push
cs
icebp
push
daa
rcll
cli
xchg
cs
and
xchg
xchg
jp
xchg
pop
or
cmp
mov
jne
mov
or
or
adc
loopne
adc
jne
xor
lcall
pusha
into
jecxz
xor
cwtl
add
xor
js
jg
out
lret
jae
mov
aas
jnp
push
xor
mov
add
jne
cmc
fistps
mov
das
or
jp
adc
jnp
jb
pop
lods
xor
repnz
pop
icebp
scas
lods
sbb
daa
pop
cld
push
sub
ffreep
push
jae
adcl
dec
fsubr
mov
loop
mov
sbb
mov
cmp
xchg
enter
pop
scas
push
dec
push
xchg
xor
or
pop
rorb
sbb
cli
pop
stos
mov
loope
adc
stos
inc
ja
and
and
stos
lahf
adc
cmp
lret
dec
rorl
add
in
xchg
inc
jne
push
jp
insl
test
aaa
pop
inc
shrb
sbb
hlt
shlb
test
xchg
xor
out
movsl
mov
mov
flds
pop
scas
push
sub
mov
push
push
das
push
sub
lret
ds
addl
outsb
into
cmpsl
push
cmc
insb
gs
sbb
aas
out
inc
dec
repnz
push
ret
scas
mov
cmp
xor
mov
imul
sub
aaa
sbb
cmp
hlt
into
mov
xor
lea
push
cmc
pop
divl
imulb
jns
mov
cmpsb
in
rcrl
cmp
jae
adc
enter
or
or
mov
mov
jecxz
out
scas
or
mov
mov
stc
bnd
adc
icebp
mov
mov
mov
mov
xchg
mov
xor
lds
jae
add
dec
jne
push
adc
int3
outsb
xor
mov
cmpsl
push
mov
scas
jne
mov
or
sbb
lds
jge
dec
insb
scas
sbb
or
test
jae
scas
loope
push
loopne
push
xchg
lcall
sar
jae,pt
sbb
out
fmull
ror
mov
out
repnz
xor
xchg
stos
inc
dec
mov
nop
mov
lahf
push
test
mov
orl
and
test
add
jne
pop
stc
adc
jne
pop
stc
and
inc
repz
outsb
test
xchg
or
movsb
and
not
or
dec
cmpl
scas
dec
lea
inc
repnz
gs
cli
or
adc
push
popa
ss
add
or
jnp
cmp
xor
pop
push
dec
cltd
stos
in
clc
xor
pusha
callw
push
daa
mov
arpl
adc
repnz
loopne
addr16
mov
mov
call
dec
jb
and
call
outsb
aam
insb
insl
mov
testb
adc
inc
bnd
sub
mov
or
data16
mov
xchg
jo
stos
dec
fisttpll
inc
xchg
push
lea
cwtl
repnz
repnz
scas
out
ret
icebp
into
shlb
or
push
lahf
xlat
add
jo
shlb
push
jnp
mov
repnz
orl
stos
aaa
sbb
in
mov
sti
xor
cmp
cwtl
sub
mov
stos
adc
in
negb
sbb
out
lret
cmpl
int3
jne
push
jb
mov
in
movsb
and
std
push
popf
xor
pop
rcrl
push
inc
outsb
jae
lret
cld
push
test
mov
ss
pop
rcrl
nop
dec
fwait
push
or
ljmp
and
lret
inc
xchg
pop
adcl
cmp
and
stos
adc
ds
fnstcw
jne
inc
or
push
insb
jno
test
outsl
ss
into
pop
sbb
mov
in
push
mov
mov
xchg
mov
cmp
or
jle
faddl
cld
mov
jge
ja
stc
insb
or
sub
mov
dec
shl
mov
xor
shll
push
cwtl
inc
shlb
jae
and
insb
sub
jne
inc
jmp
stos
and
inc
mov
jne
cmovns
pop
pop
jne
add
imul
rolb
icebp
fidivrl
xorl
stos
mov
jmp
rol
jae
pop
lss
nop
add
into
pop
test
popf
loope
cmp
test
jns
cmp
popa
test
std
cmp
add
icebp
shll
mov
stc
cmpl
mov
mov
xor
mov
je
jne
mov
add
ss
pop
icebp
loop
test
sub
sbb
nop
add
into
dec
mov
outsb
sti
push
xor
mov
xchg
sarl
and
fsubrp
mov
les
shr
push
cmp
pop
inc
sub
and
add
push
jne
pop
add
mov
pop
push
add
scas
sbb
push
rol
adc
add
das
out
and
mov
out
sub
cs
mov
sub
cmp
shrb
shl
lahf
int
loopne
outsl
sub
inc
imul
inc
inc
mov
pop
gs
jbe
scas
loopne
loopne
cli
pusha
pop
mov
jno
and
mov
add
add
or
and
scas
fsubrl
dec
inc
jne
sub
mov
add
adc
adc
pop
mov
push
fdivl
shrl
rcl
vmwrite
loop
add
jp
inc
add
arpl
adc
loope
and
repnz
fadds
push
pop
insb
icebp
popa
imul
inc
jb
and
sbbb
xchg
inc
xor
inc
mov
mov
icebp
faddl
imul
inc
sarb
mov
ja
cs
mov
mov
in
sbb
addr16
ja
cs
in
sbb
push
call
sub
mov
mov
and
mov
and
mov
and
stos
mov
mov
insl
mov
insl
mov
or
push
and
lcall
mov
or
push
and
jp
mov
or
lods
and
adc
imul
inc
xchg
sbb
or
inc
mov
mov
in
add
push
scas
icebp
orl
lock
push
lods
loopne
fimuls
cmp
jb
mov
jno
fwait
mov
cwtl
jmp
or
adc
pusha
mov
jae
rcrb
or
test
mov
outsb
dec
lods
out
scas
test
shl
mov
mov
mov
mov
mov
mov
mov
lcall
cmp
nop
inc
xor
mov
pushl
faddl
gs
insl
test
scas
repnz
js,pt
mov
xchg
cmp
cs
jp
add
ja
mov
and
lea
adc
cmpsb
out
repnz
add
lea
and
pushf
aad
sub
dec
sbb
rclb
inc
pop
jae
inc
xchg
clc
xchg
push
pop
pop
loope
push
inc
adc
dec
repz
pusha
js
cmp
and
jbe
add
jg
dec
sub
cltd
mov
mov
push
loop
mov
cmc
jns
and
jmp
sbb
add
shl
roll
leave
sbb
dec
loop
loope
xor
jno
jge
jne
xor
push
jmp
shrl
hlt
insl
xorl
jno
mov
push
or
mov
jno
jno
fs
xchg
xor
inc
adc
jae
xchg
xchg
clc
sbb
or
inc
adc
push
cli
jbe
iret
add
and
in
push
lds
push
add
shr
push
pusha
pop
sbb
mov
mov
aaa
pop
xchg
clc
xor
inc
adc
es
adc
mov
jne
xor
pop
mov
push
lods
xchg
mov
jl
sub
xor
adc
inc
pop
adc
xchg
ljmp
icebp
cmp
adc
inc
sub
popa
stc
jae
adc
loopne
sub
aam
fnstenv
outsl
xor
popf
mov
icebp
popf
movsb
push
mov
mov
in
push
dec
shr
enter
arpl
jno
cli
xchg
mov
icebp
repz
mov
ret
xor
sub
xchg
jp
push
pop
xchg
xchg
clc
jo
or
loope
adc
ds
stos
xor
iret
add
add
xorl
push
jle
dec
shrl
add
xchg
sbb
xchg
jae
mov
pop
and
fwait
jge
inc
jae
and
enter
sbb
inc
stc
jae
and
imul
sahf
ds
jae
and
fnstcw
icebp
aaa
out
mov
mov
dec
jno
imul
loope
cld
notb
shl
cs
shlb
sbb
sbb
add
jno
push
xchg
clc
or
sbb
inc
loop
jne
les
icebp
adc
sub
cmpsl
xor
adc
mov
adc
loop
dec
mov
mov
int
or
sub
loop
push
shlb
clc
int3
scas
mov
cmp
add
loope
lcall
sarb
icebp
push
xor
mov
in
jnp
outsb
add
jb
push
sub
shll
mov
subb
stos
mov
mov
jmp
in
cmp
std
mov
das
adc
scas
cmp
add
int3
sbb
and
mov
icebp
leave
push
mov
nop
jbe
test
adc
jl
ret
jmp
ljmp
imul
out
pushf
xor
in
xor
in
addr16
add
push
mov
xor
mov
mov
add
cmc
stc
hlt
adc
ljmp
push
leave
pop
adc
jl
ret
repz
pushf
xor
icebp
xlat
xor
mov
mov
mulb
xor
fsubrp
jno
push
adc
sbb
test
pop
popa
adc
mov
aam
sub
add
in
jge
mov
xor
add
adc
icebp
mov
je
neg
sahf
mov
not
adc
hlt
mov
jmp
pop
ljmp
pop
and
inc
adc
lcall
imul
or
and
mov
icebp
dec
push
notl
test
stos
negl
jmp
int
add
jecxz
inc
pop
pop
jne
add
pop
push
add
adc
mov
icebp
andb
leave
pop
adc
push
jecxz
inc
fcompl
out
test
inc
dec
aam
push
rcll
xor
jno
adc
jae
xchg
in
xor
add
repz
and
mov
icebp
clc
and
testl
xor
pmuludq
addr16
add
out
sub
xor
adc
in
pop
sub
jns
xor
fisubs
aam
push
das
push
inc
cpuid
ss
and
add
jecxz
inc
adc
out
sbb
and
mov
repz
mov
cmovge
pop
mov
das
shlb
jmp
xchg
or
popa
or
pop
or
or
arpl
jnp
loopne
pop
or
or
or
or
sbb
pop
xchg
cmp
sbb
cmp
sbb
cmp
fdivl
add
jecxz
add
loop
ljmp
jge
pop
and
inc
pop
cmp
cmp
subl
pop
xor
xor
xor
xor
xor
fs
and
jnp
pop
and
pop
and
pop
call
out
in
dec
psadbw
cmc
dec
hlt
push
jmp
out
mov
mov
mov
mov
mov
shlb
shlb
imul
inc
jmp
incb
out
out
shlb
jmp
mov
inc
adc
pop
pop
popa
jmp
ss
jecxz
push
js
mov
out
pop
das
mov
or
pop
das
popa
jmp
pavgw
mov
add
or
inc
add
sbb
xor
and
lcall
inc
jp
bound
and
sub
jmp
loopne
mov
mov
rcrb
mov
inc
inc
add
ljmp
shl
rcrl
push
fisubrs
repnz
mov
rolb
pop
dec
mov
sub
jno
pop
xor
movsl
mov
mov
loopne
insb
sub
icebp
adc
clc
pop
cmp
adc
loopne
outsl
fimuls
in
cs
cmc
mov
out
lcall
iret
rcrb
sbb
or
push
cli
imul
or
xchg
adc
scas
js
mov
popa
jnp
jae
pop
lahf
sbb
insb
icebp
insl
subb
out
and
xchg
push
aaa
out
clc
sbb
jo
pusha
sbb
adc
xor
rcrb
jb
roll
scas
loop
mov
add
icebp
inc
inc
arpl
jp
xchg
pop
fdivrs
dec
xchg
jo
inc
out
sub
xor
ficoms
adc
adc
push
mov
sub
test
pop
push
sub
or
add
inc
mov
inc
or
std
sarb
mov
addr16
dec
bound
lods
jns
inc
icebp
shlb
movsb
mov
cli
add
orl
inc
and
push
mov
lea
add
adc
push
fisttpll
jb
cwtl
in
dec
inc
pop
enter
into
cmp
mov
sub
mov
xor
or
fnsave
sub
cmp
push
dec
lret
push
cmc
mov
enter
cld
mov
popa
cli
dec
imul
mov
lidtl
dec
xor
leave
icebp
arpl
mov
ret
push
jne
out
rol
insb
jb
lods
push
dec
adc
cmc
dec
jp
mov
adcl
xor
loopne
rclb
lahf
lds
data16
cwtl
insb
repnz
jb
lcall
adc
loope
adc
jnp
mov
xor
cwtl
icebp
sarb
cmp
xchg
and
cs
in
xor
pushf
loope
cmpsb
sti
adc
mov
cmc
leave
std
mov
cli
jo
cs
outsb
andl
cmp
xor
inc
inc
jmp
xchg
addl
mov
sub
test
lahf
push
dec
inc
lods
inc
xchg
xor
push
out
jns
fcmovnb
aam
dec
insl
mov
inc
mov
dec
sbb
xor
addl
iret
sub
icebp
fwait
inc
je
dec
scas
inc
cmc
mov
mov
test
fimuls
sub
out
jns
and
adc
cltd
sub
imul
ljmp
sub
in
jns
adc
xor
insl
icebp
je
test
cltd
ficoms
andb
cmp
jecxz
test
ficoms
andb
sub
cltd
sub
adc
pop
jecxz
test
ficoms
andb
cmp
jecxz
adc
cmp
jecxz
test
ficoms
andb
cmp
jecxz
test
ss
adcb
ficoms
andb
cmp
jecxz
test
ficoms
adcb
sar
push
andb
cmp
jecxz
test
ficoms
andb
sub
cltd
sub
adc
pop
jecxz
test
ficoms
andb
daa
imul
outsb
inc
mov
orb
mov
pushl
pop
inc
iret
fwait
add
and
add
cmp
xor
imul
shrb
popf
xchg
orl
mov
scas
mov
or
xlat
inc
dec
rolb
inc
jg
insb
aas
std
dec
or
sub
in
adc
push
inc
add
int3
pop
enter
divb
lahf
int3
pop
movsl
scas
mov
push
mov
and
xor
or
insl
jg
xor
repz
repz
std
xchg
dec
mov
sub
cld
adc
pusha
test
pop
pushf
shlb
lret
adc
adc
mov
dec
inc
test
and
fcompl
fs
push
and
in
test
mov
popf
fwait
and
mov
pushf
mov
mov
int3
or
scas
sub
lods
insb
xchg
in
jl
repz
std
and
mov
mov
jle
adc
mov
and
enter
or
cli
dec
add
and
std
jo
cmp
shl
in
pusha
lcall
addl
adc
add
adc
add
in
orl
repnz
xchg
push
mov
xchg
aas
call
pusha
mov
leave
notb
inc
fst
sub
ja
call
xchg
les
pop
push
mov
add
adc
icebp
pusha
in
les
test
fcmove
fistl
mov
in
gs
daa
popf
jae
cli
std
sarl
ds
jno
mov
loope
das
pusha
mov
mov
jmp
mov
in
xchg
and
add
jge
jecxz
xor
rcll
cmp
jl
jns
mov
inc
mov
aas
xor
out
mov
lahf
mov
cmp
cmp
pop
sub
imul
or
sbb
movsl
sub
xlat
adc
inc
lahf
pop
dec
inc
xchg
lods
or
inc
popa
lret
or
push
inc
fxch
cmp
sub
pop
jne
addr16
xchg
pop
andl
jle
loope
xchg
andl
cld
cmp
xchg
xchg
mov
pop
pop
xchg
push
andl
ljmp
xchg
jmp
out
add
lret
roll
adc
mov
rcr
mov
leave
in
sub
loopne
xchg
fldcw
in
notb
cmp
pop
mov
in
mov
out
mov
mov
push
fimuls
sbb
mov
xor
std
hlt
dec
subl
outsl
jge
mov
mov
add
push
popa
jecxz
xchg
in
xchg
ret
sub
jp
dec
dec
pop
fxch
frstor
lds
in
and
sti
fiadds
cwtl
pop
imul
xchg
pop
adc
lea
icebp
insl
add
mov
lea
repnz
fnsave
push
insl
imul
push
dec
ret
jno
mov
cli
in
fs
mov
ljmp
lods
loope
cs
outsb
jl
sbb
std
sub
pop
shll
mov
mov
xchg
in
jle
or
stc
in
fxch
sbb
pop
pop
xchg
test
push
repz
xchg
mov
xor
outsl
sub
daa
add
popf
add
sbb
and
aas
jmp
sub
or
dec
sarb
sub
aas
xchg
aaa
repnz
or
adc
int
fadds
std
push
in
and
cmp
or
and
popa
ss
fdivp
pop
and
push
jno,pt
mov
cmp
push
jo
pop
xchg
adc
adc
pusha
call
imul
adc
repnz
mov
add
sbb
sub
mov
xchg
cmp
dec
scas
jge
pop
xchg
stc
insl
inc
cmp
fsubrl
push
test
and
sahf
or
sub
push
xor
and
jmp
or
jo
loopne
sarb
cmp
xor
aaa
xchg
enter
pusha
aas
and
mov
jle
in
push
fucomi
popa
pop
dec
inc
rcr
ret
add
jb
dec
jg
inc
test
sahf
xor
bound
mov
int3
fimuls
lds
out
cmp
pushf
pushf
mov
loop
fs
cmp
push
out
ror
int
push
sub
mov
call
gs
sahf
ljmp
cmpsl
les
cmpl
jp
into
xor
dec
push
inc
sub
aad
sub
mov
and
dec
cmp
stos
jecxz
push
xor
test
into
pushf
mov
pop
je
out
out
pop
sbbl
xor
aam
ret
sbb
test
xor
in
lahf
mov
mov
subl
int3
dec
dec
sub
mov
aam
inc
fcoms
xchg
out
repnz
jle
sub
aam
add
in
imul
insb
jae
lcall
jnp
or
or
imul
add
and
pop
mov
jmp
lods
mov
push
push
cwtl
into
mov
sbb
rcr
sub
push
outsb
mov
dec
push
or
jae
scas
xor
rorl
stos
push
idiv
sbb
lahf
movl
push
movsl
rcrl
xor
xchg
dec
adc
and
xchg
insl
std
int3
jnp
jae
xchg
inc
adc
mov
movsb
pop
jp
xchg
iret
or
dec
mov
test
push
mov
xlat
xchg
xor
sub
sub
imul
push
pop
mov
xor
sbb
mov
pop
aaa
sti
repz
cmc
mov
pop
shll
xchg
xor
test
mov
mov
push
outsb
sub
in
pop
jae
xor
sub
push
hlt
jb
and
fwait
adc
cmp
inc
lods
push
sub
in
fldcw
sbb
push
fiadds
jae
mov
repnz
sub
mov
push
scas
outsb
push
outsl
xor
mov
sbb
loopne
aad
mov
xor
mov
push
outsb
mov
xor
in
mov
xor
mov
pop
sub
icebp
fmuls
inc
roll
shl
sub
rcrb
fcoml
sub
clc
push
pusha
pop
jecxz
inc
sub
xor
loopne
push
jle
inc
bound
jl
push
scas
xchg
arpl
jge
lahf
mov
push
add
adc
fiaddl
pushf
cmp
xor
dec
pop
repnz
sbb
add
data16
mov
fs
repnz
dec
imul
icebp
push
mov
mov
dec
lahf
imul
addl
push
dec
into
icebp
imul
shrl
lret
loop
cmc
fisubl
mov
push
mov
mov
add
fcmovnbe
hlt
subb
jae
push
push
dec
in
inc
pusha
jae
mov
in
rcrl
mov
adc
push
jecxz
jne
insb
jg
ss
push
lret
pop
push
cwtl
sbb
mov
outsl
adc
ljmp
mov
sub
mov
mov
jbe
out
jbe
xor
pop
stc
aam
aaa
insb
inc
repz
inc
adc
xor
push
je
shrb
push
std
mov
outsl
dec
ficoms
ret
pop
xor
jne
cmp
or
pop
pop
sub
or
imul
mov
jno
das
mov
mov
sub
inc
or
pop
outsl
ret
mov
mov
pop
push
adc
out
xchg
loope
mov
orl
lea
int3
call
xchg
pop
or
adc
mov
scas
ds
mov
push
add
test
in
mov
xchg
int
pop
das
lods
sbb
rcl
jge
rolb
mov
inc
pushf
ret
and
mov
cmc
mov
pusha
loop
add
mov
cmp
dec
clc
xor
sub
pusha
lods
cli
or
mov
mov
insl
loop
lea
sbb
jge
sbb
jge
jge
sbb
imul
sub
adc
mov
mov
mov
icebp
ret
call
daa
jecxz
jne
cltd
aaa
push
pusha
outsl
pop
lret
das
sbb
inc
mov
jmp
ficoms
or
jge
jge
mov
inc
xor
xor
fisubrs
dec
loop
mov
ret
dec
out
outsb
sbb
out
leave
ljmp
or
sub
mov
das
dec
mov
mov
or
ja
push
roll
jge
sub
repnz
dec
dec
jle
mov
or
movsl
insb
push
or
xchg
dec
sub
push
mov
sub
icebp
rolb
test
arpl
or
ret
xchg
adcb
rcl
mov
mov
enter
shll
and
mov
test
fwait
and
js
loope
xchg
push
in
cs
mov
jecxz
xor
mov
iret
add
xor
pop
mov
aad
shll
push
inc
test
pop
dec
xor
adc
jge
sbb
cmp
shll
adc
mov
shrl
icebp
adc
mov
jl
ss
lcall
mov
int
icebp
inc
sbbl
addr16
mov
lret
mov
sub
pop
stos
mov
lret
sbb
xchg
icebp
cmp
add
sub
inc
jnp
icebp
popf
adc
ret
mov
dec
mov
push
repnz
mov
outsb
mov
test
aaa
insb
in
xor
imul
lahf
adc
mov
mov
jbe
jle
notl
and
jne
das
adc
or
jmp
loop
inc
mov
adc
into
je
add
sub
repnz
add
into
sub
sub
mov
or
push
test
inc
out
jnp
mov
and
mov
pusha
imul
pop
dec
insb
mov
push
adcl
lods
mov
dec
ss
clc
dec
and
lret
mov
ret
mov
xchg
push
insb
movsb
mov
scas
lds
dec
dec
stos
jg
xor
sbb
pop
out
les
sahf
sbb
aas
dec
cmp
scas
insb
imul
lcall
mov
jns
push
scas
sub
mov
push
xchg
dec
fildll
cmpsb
cmc
xchg
or
sbb
mov
dec
dec
out
cmp
jae
jge
testb
fmulp
and
mov
movsl
adc
cmp
fmulp
add
popa
loopne
adc
jp
adc
out
jp
push
add
add
scas
xchg
xor
dec
insb
pop
addb
insb
jle
test
test
adc
loop
fildl
sahf
andb
btrl
pop
xor
daa
loope
inc
fstl
xchg
mov
popa
mov
push
mov
mov
mov
mov
imul
andl
xorb
sbb
mov
dec
ret
mov
ret
out
les
sub
push
add
xchg
pop
or
mov
cmp
icebp
loopne
jmp
cmp
jmp
rclb
incb
sub
mov
mov
inc
sbb
fidivs
cmp
sub
insl
xchg
dec
xor
cs
push
outsb
lea
stos
push
sbb
adcb
scas
xchg
push
int
sub
push
xchg
imul
subl
gs
das
adc
cmp
xchg
adc
jno
clc
inc
sbb
sbb
adc
push
push
cmp
insl
dec
icebp
inc
push
add
xchg
or
add
cmp
das
xor
and
test
repnz
pop
rol
push
xchg
repz
mov
jecxz
ja
jle
cs
push
mov
mov
jmp
mov
xchg
xor
ficompl
icebp
in
xor
push
mov
mov
fst
notl
add
jge
pop
out
adc
mov
insl
xor
and
lahf
aas
popf
xchg
lahf
mov
imull
xchg
cmc
stos
cltd
mov
test
cmp
inc
in
insl
add
dec
cltd
repnz
cmp
cltd
xor
inc
mov
pusha
and
scas
subb
mov
mov
orb
je
aad
out
test
outsl
in
adc
lods
loop
inc
icebp
dec
jno
xor
lods
xchg
cltd
imul
mov
insl
mov
shrb
push
ja
cmp
in
pop
fldt
fsubr
pushf
lret
subl
or
push
lods
inc
xor
mov
leave
push
mov
stc
lods
insl
xor
jne
fsubr
int3
rclb
icebp
jbe
adc
dec
sub
inc
cmpsb
xor
fmull
sub
rolb
in
pushf
test
and
ss
bound
push
add
imul
pop
sub
stos
ss
jmp
ret
mov
in
ret
push
popa
xor
in
pushf
lret
sarb
cmp
add
shlb
lcall
fmuls
pusha
sub
pop
pushf
adc
cmp
mov
and
cmp
or
jno
pop
and
lods
rclb
mov
sbbb
cmp
pushf
subb
jmp
orl
mov
call
cmp
sbb
jmp
nop
aam
stc
add
sbb
aaa
ret
pop
xchg
flds
pop
xchg
fs
fs
mov
ja
shlb
loope
stos
outsb
cmp
cmp
mov
cmp
push
in
out
lods
sub
xor
cs
mov
mov
cmp
sub
jo
sbb
inc
stos
mov
lret
xchg
lret
mov
xor
pusha
xor
mov
or
and
paddq
enter
mov
insl
mov
imul
xor
xor
mov
shll
arpl
test
lahf
add
fdivl
add
aaa
pushf
mov
pop
sahf
bnd
mov
ret
pop
std
test
repnz
pop
test
lods
les
icebp
pop
adc
sbb
cmp
sti
ja
rcl
mov
pop
shll
mov
cli
push
xchg
and
sub
cmp
pop
add
loop
mov
outsb
rcrb
mov
scas
pop
xchg
push
das
cmp
orb
cltd
pop
inc
shll
das
mov
push
mov
mov
lods
lret
mov
cltd
push
loope
arpl
lahf
mov
lods
or
jbe
lcall
mov
xor
inc
xchg
push
adc
jno
scas
insl
scas
or
scas
cs
add
or
fidivrl
into
xchg
jne
out
ficoms
sub
scas
fwait
pop
push
imul
iret
setg
bound
out
xor
fisttpll
inc
dec
std
mov
pop
lods
mov
insb
cwtl
movsl
ficoml
jge
mov
ret
pop
mov
cmp
or
movsb
push
inc
xchg
ja
pop
mov
pop
xor
cmpsl
push
adc
ss
pop
iret
cmc
adc
jae
pop
in
mov
sub
aam
mov
and
pop
add
jne
dec
jns
mov
into
test
loope
lods
xor
cmpsl
jns
sub
sub
jnp
mov
into
les
cmpl
push
flds
adc
push
popf
jns
cli
ficomps
cmp
icebp
mov
cmpsl
xchg
imul
pop
cld
push
jl
push
cmc
or
rorb
shrl
subb
adc
mov
push
outsb
xor
jns
cwtl
jp
push
push
adc
std
mov
jp
pop
pop
and
orb
xor
nop
aam
pop
sub
adc
cltd
aaa
jmp
jnp
lea
shlb
aad
and
add
jne
icebp
scas
push
outsb
sar
jne
ss
mov
mov
xor
xchg
insb
ss
xor
pop
mov
lea
mov
push
dec
jno
mov
fs
jo
cmp
loopne
jle
das
mov
icebp
in
adc
lods
repnz
icebp
test
fnstcw
xchg
inc
xor
lret
push
mov
test
test
xor
push
cli
test
xlat
sub
inc
jae
neg
loopne
dec
lds
fmuls
mov
dec
cs
inc
test
or
insl
sub
mov
aad
adc
inc
or
adcb
test
lea
inc
fwait
pop
lea
and
lea
adc
jne
pop
jg
or
xchg
fs
jmp
sarb
fsubl
jne
ret
cmp
push
inc
mov
xchg
push
out
pop
outsl
pop
cmpl
cmp
pop
loop
xor
jnp
cmp
jle
fdivrp
add
or
xchg
adc
xchg
rcrb
outsl
in
and
out
insl
je
mov
add
and
jnp
xor
stos
outsb
and
fwait
push
sub
push
sub
add
mov
repnz
inc
push
jno
imul
xor
popf
icebp
loopne
xor
jbe
xor
test
pop
xorl
jp
mov
ds
push
jne
call
jb
insl
subl
popf
jno
inc
repnz
lods
loopne
jb
in
cmc
push
xor
mov
add
xor
jmp
jle
sbb
mov
sub
or
add
sub
pop
insb
inc
mov
push
mov
and
out
mov
out
insb
xchg
je
and
inc
adc
sahf
out
pop
mov
inc
inc
sub
loopne
out
push
xor
mov
pop
call
mov
ret
loopne
sbb
pop
xor
cmpsb
mov
test
pop
flds
mov
and
dec
insb
fs
adc
shlb
cs
mov
fsubrs
sbb
mov
mov
adc
rcl
or
adc
xor
subl
loopne,pn
aad
add
adc
shl
sbb
jp
int3
out
fbstp
xchg
and
inc
adc
sub
add
mov
jb
orb
xchg
fdivrl
cltd
insb
mov
mov
jno
shlb
repnz
and
cmp
inc
outsl
mov
mov
dec
adc
jne
inc
fbstp
xor
lds
mov
mov
ss
xchg
or
jne
inc
jae
leave
add
xchg
pushl
dec
jo
add
and
std
xchg
repnz
push
jmp
sub
in
aaa
rcrl
jmp
pop
clc
xor
and
sbb
add
sub
stc
mov
sub
aad
add
mov
nop
push
dec
repz
into
adc
xchg
mov
jae
dec
push
movsl
lcall
iret
js
xchg
xor
lahf
xor
push
call
sub
test
mov
sarb
fadds
push
sbb
rolb
push
mov
push
mov
imul
cmpl
fwait
out
mov
xor
aam
shlb
mov
xchg
pushf
aas
mov
test
test
outsl
mov
ss
dec
push
lods
lods
fcompl
jno
jle
sbb
jno
lock
pop
jno
or
cmc
stc
faddl
pop
jmp
sub
outsl
shlb
ja
inc
arpl
push
nop
add
mov
sbb
enter
adc
lods
lock
jmp
and
dec
insl
cmc
lea
xchg
mov
gs
imul
fwait
pushf
les
dec
sarb
push
mov
popl
pusha
or
add
mov
jecxz
xor
jecxz
leave
pop
lea
popf
xchg
pop
xchg
push
add
xchg
arpl
jno
mov
frstor
xor
mov
pushf
sub
xchg
jns
mov
mov
jl
shll
in
lahf
xorl
jg
cld
sub
mov
leave
dec
cmp
dec
outsl
sbbl
outsb
sub
xchg
rol
repnz
sbbl
jle
mov
pop
insl
xchg
sub
or
adc
xor
fwait
into
stc
into
jne
ss
test
loopne
dec
movb
loope
mov
shll
mov
ret
inc
jle
cs
jmp
dec
push
pushf
pop
nop
mov
sbb
sbb
jne,pt
inc
pop
inc
mov
jo
inc
xchg
xchg
sub
bound
adc
aam
pop
xor
ficompl
jno
lahf
or
aaa
icebp
fists
or
mov
push
arpl
movsl
adc
iret
icebp
lcall
xor
outsl
push
xor
pop
aaa
repnz
add
mov
bound
fcoml
out
int
jne
sbb
rcll
push
mov
das
and
rcll
les
and
pop
xorb
fcmovnb
stc
pcmpeqw
inc
dec
pushf
cmp
addr16
inc
and
in
pop
cli
mov
shll
sbb
cmp
mov
cwtl
jmp
sbbl
movsb
jno
call
pushf
sub
adc
jmp
sub
leave
mull
shll
call
jge
mov
add
jnp
fisttpll
clc
xor
fmull
sbb
mov
sub
icebp
cmp
or
das
imul
cs
div
test
and
adc
mov
cltd
xchg
test
and
sbb
sub
icebp
or
fstps
mov
flds
stos
mov
ds
jb
enter
ss
ficoms
mov
cmpsb
jle
jbe
dec
sub
cmp
lea
push
xchg
cld
icebp
shlb
pop
jl
out
jp
and
es
mov
dec
nop
aaa
or
cmp
mov
fisubl
adc
sub
mov
mov
sub
dec
or
shr
adc
ljmp
jg
enter
scas
xchg
adc
xchg
mov
ljmp
jne
sbb
and
mov
out
mov
add
xorb
mov
pop
ja
cs
ja
leave
sub
xlat
adc
pop
xor
test
mov
fimuls
aaa
add
pop
aaa
cmpsb
gs
fildl
push
fldt
mov
aaa
test
and
lahf
pop
inc
and
and
xor
adc
and
iret
aaa
adc
imul
mov
sbb
stos
inc
imul
shlb
sbb
xor
or
imul
subb
fldcw
das
adc
inc
mov
add
fisubs
orb
dec
sub
lret
pushf
sbb
jg
jle
lcall
mov
xor
fiadds
pop
bound
stos
and
add
loope
popa
jno
in
mov
aaa
repnz
popa
xchg
insl
insb
movsb
shlb
outsb
sbb
movsl
and
push
sub
leave
dec
gs
out
jmp
dec
jb
cmp
movsl
inc
out
sub
lret
inc
add
sub
xlat
mov
or
sbb
sbbl
and
jae
in
popa
xor
mov
jo
sbb
out
ja
sub
popa
pop
sti
push
pop
popa
xor
xlat
mov
dec
popa
imul
and
lahf
addr16
mov
inc
or
mov
shrb
dec
add
push
arpl
push
mov
je,pt
arpl
lcall
icebp
movsl
jb
xor
test
mov
add
cmc
or
imul
insb
imul
xchg
sub
leave
jl
int3
int
outsb
daa
mov
xchg
shlb
lret
jno
xchg
add
sub
cwtl
mov
bound
in
je
dec
sbb
addr16
xor
hlt
pop
dec
fdivs
call
nop
scas
and
mov
icebp
and
or
or
jl
shll
dec
rcl
orl
xor
pop
xorb
pushf
add
das
mov
mov
clc
mov
daa
jmp
cmpsl
xlat
mov
adc
pop
mov
ja
pop
push
and
jno
outsb
ret
xchg
mov
jo
xchg
adc
lcall
dec
or
jno
push
push
xchg
ret
add
pop
fs
dec
ret
mov
in
mov
xchg
xchg
out
xor
lgs
jne
sbb
loop
in
stos
ret
add
stos
mov
lods
js
pop
jns
and
inc
in
movsl
sarb
jne
in
pushf
adc
outsl
pop
lret
cmpl
push
lods
lahf
adc
push
cmc
shrb
push
fcmove
movsl
mov
loop
jecxz
divl
stc
fisttpll
add
sahf
push
or
je
sub
xor
inc
pop
or
push
or
pop
repnz
repz
repnz
pop
repz
or
fstpt
ret
inc
ja
sub
aad
repnz
mov
cs
adc
repnz
add
add
xchg
add
add
repnz
fildll
sbb
add
cmp
shl
loope
mov
test
add
mov
mov
xchg
imul
sbb
add
addb
pop
sbb
out
xor
notl
adc
scas
inc
sub
xorw
cli
jno
inc
xchg
lods
lea
lret
or
pop
xchg
push
inc
jl
xlat
mov
pop
in
jmp
cmp
jae
ret
pop
mov
daa
pop
cmp
pushf
push
add
adc
aas
bound
repz
push
test
jb
xor
pop
repnz
sbb
xchg
jo
push
ja
cmpsb
insb
or
insb
data16
xchg
nop
andb
dec
mov
jmp
in
pop
ror
pop
or
jno
lret
addr16
jle
adc
and
and
mov
or
inc
jno
push
adc
repz
in
xchg
shl
jg
xchg
and
or
add
adc
mov
dec
loope
icebp
mov
icebp
stc
add
and
cmpsb
xor
sbb
das
fsubrp
ret
out
sub
xor
pop
mov
out
add
sub
popf
insb
push
cs
jo
icebp
mov
jo
lret
jns
mov
mov
dec
pusha
hlt
stos
ja
je
mov
cmp
call
xchg
shl
xchg
stos
and
push
adc
jns
add
add
sbb
pop
xor
and
rcll
clc
sub
add
and
adc
lret
add
scas
jp
andl
xchg
xor
insl
and
lds
leave
cld
popa
xor
insl
cmp
pushf
adc
addl
sub
jg
lahf
adc
xor
cltd
mov
xor
jae
repnz
cwtl
ljmp
aam
sarb
pop
gs
adc
mov
fcoml
andb
popa
in
jmp
xor
mov
add
ret
fdivs
int3
push
sub
and
jns
imul
dec
notb
xchg
pop
xchg
xor
xchg
lock
sub
mov
cmp
cmova
dec
jne
cmp
or
fstps
push
jns
ja
filds
outsl
mov
sbb
add
pushf
rorb
shrb
xor
pushf
rol
stc
jmp
lea
jae
xor
adc
shr
btr
mov
cmc
xor
shr
movzbw
mov
call
push
lea
jne
jmp
pushf
mov
call
jmp
push
pusha
lea
jb
cmc
jmp
neg
shl
mov
call
jmp
pusha
lea
jb
call
movb
lea
call
call
jle
movsb
cli
mov
in
lock
xorb
test
lret
inc
cmp
aad
push
pop
mov
push
cmpsb
pop
mov
testl
addr16
mov
mov
sub
mov
push
dec
loop
mov
jge
lahf
adc
mov
jmp
daa
std
lcall
js
test
xchg
test
jecxz
imul
mov
gs
cltd
dec
inc
imul
cmp
push
call
jbe
xchg
sub
aad
adc
sub
xlat
adc
sbb
imul
movl
pusha
pushl
movl
pusha
movb
pushf
movb
lea
jmp
shl
test
dec
sub
shld
neg
lea
sub
test
sub
jmp
lea
ja
call
movl
jmp
lea
je
jmp
das
stos
or
bound
pop
push
add
cmp
pushf
jne
push
push
lahf
es
xor
sbb
adc
jecxz
ja
push
arpl
jl
sub
cmpsl
adc
fistpl
xlat
inc
sub
sub
sahf
in
or
lods
ss
repnz
mov
testb
mov
pop
movsb
scas
mov
in
dec
and
lea
xor
hlt
movsb
fdivp
sbb
push
push
xchg
int3
popf
call
ja
bt
call
lea
je
clc
sub
stc
cmp
jmp
mov
jp
push
pusha
lea
call
call
lea
jb
clc
cmpb
push
lea
jne
movsbw
clc
rcr
mov
jmp
xchg
movw
setnp
movzbw
mov
push
pushf
lea
call
xor
jmp
add
inc
movzbw
and
mov
bt
stc
pusha
bt
test
pushf
movw
lea
je
jmp
push
lea
jb
test
cmp
pusha
call
mov
into
xchg
popa
ja
imull
jbe
pushf
lea
or
dec
bound
add
pop
fnsave
dec
sub
fwait
push
int3
xchg
add
jb,pn
xchg
scas
and
jns
stos
mov
ret
jp
mov
loop
sbb
mov
sub
jg
adc
cmc
mov
fcom
mov
cs
ret
xchg
mov
and
leave
jg
add
test
sarl
les
rcr
or
push
mov
xor
jne
push
jne
xlat
ror
mov
addb
test
in
and
xor
push
sbb
lcall
add
cld
jb
or
inc
mov
mov
in
cmp
int3
aam
or
cmp
out
push
shlb
mov
pop
and
outsl
dec
rcrl
out
xor
orb
repz
mov
sbb
adc
dec
sbb
mov
repnz
xchg
pop
cmp
jge
mov
mov
jmp
cmp
sub
push
imul
mov
pop
jmp
icebp
ret
mov
push
jbe
sbb
iret
xchg
mov
not
jmp
lods
shl
add
pusha
pushl
ror
pushf
inc
neg
xor
ror
rcr
cmc
add
push
push
not
setnp
stos
jmp
jmp
lea
call
movsbw
mov
lea
pop
not
call
lea
je
test
pushf
or
push
jmp
push
call
pushf
lea
ja
pusha
xchg
mov
movsbw
mov
pop
bswap
bswap
pop
mov
movzbw
mov
pushf
mov
movb
jmp
cmc
call
mov
mov
not
movb
setg
lods
pushl
xor
mov
clc
stc
cmc
rol
mov
mov
sub
call
jp
and
or
mov
sub
shll
sub
sub
jae
aam
lret
adc
pop
sub
idivl
adc
add
mov
sbb
loop
pop
fisubrl
jae
test
push
psubusw
xor
adc
push
ja
enter
jmp
cmp
mov
pushf
mov
pusha
lea
ja
bt
cmp
jmp
clc
cmc
rcr
xchg
add
daa
mov
adc
rol
not
mov
pusha
pushf
cmc
lea
jno
push
bt
shr
shld
mov
call
mov
sar
sbb
xadd
mov
pushf
movsbw
pusha
bsr
mov
cmc
jmp
and
add
dec
sahf
jp
arpl
repz
mov
push
cmp
outsb
inc
cwtl
enter
lock
sub
fdivrl
jge
xchg
sub
mov
cs
loope
aas
add
icebp
cmpsl
js
repnz
jp
test
js
or
jge
push
jp
sbb
cmc
xor
bnd
or
std
pop
or
ret
xchg
repnz
and
xchg
dec
add
push
cmp
adc
jb
push
data16
ret
add
jno
mov
add
xor
enter
imul
sbb
daa
das
fwait
jns
jl
cmp
fstps
dec
dec
pop
in
add
inc
ret
inc
ja
and
mov
lods
das
xor
sbb
mov
test
fistpl
mov
mov
inc
fwait
loopne
int3
lret
lret
je
jns
stos
mov
mov
in
xchg
dec
mov
jns
stos
in
sbb
pop
add
or
add
addl
push
and
sbb
les
repz
in
outsb
incl
stos
stos
cmp
mov
ljmp
sub
stos
pop
push
lods
mov
sub
ja
jnp
into
nop
fs
mov
sbbl
sub
adc
stos
repz
sbb
cmp
mov
es
add
cmp
sbbb
push
clc
lods
cmp
or
out
inc
pop
leave
sbb
pop
push
fstp
and
sbbb
loop
xchg
xor
xor
sahf
push
sbb
and
xchg
fwait
pusha
sub
mov
test
xchg
dec
push
lahf
in
cmp
fucomi
xor
and
xor
ss
sbb
xchg
fisubrl
jbe
lret
inc
rcl
stos
insl
mov
clc
fistl
or
jae
sbb
int
mov
or
sti
pushl
jmp
mov
adc
les
mov
es
rorl
je
movsl
mov
cmp
or
fisubrs
das
add
or
or
daa
sbb
xor
jle
shlb
out
sbb
push
sbb
aas
push
xchg
divb
repz
mov
test
xlat
pop
notl
push
cmpsb
sbb
mov
test
cmp
jae
sarb
xor
mov
push
jnp
mov
shll
jo
and
adc
mov
jns
add
es
and
inc
aas
jnp
outsb
sub
inc
add
cmp
pop
mov
lds
adc
cmpsl
insl
stc
ja
ss
sub
inc
mov
or
cwtl
pop
ret
and
mov
in
arpl
inc
xor
std
shr
imull
scas
mov
xor
adc
and
stos
cmc
push
shrb
adc
lea
ret
shlb
stc
movb
mov
pop
hlt
outsb
in
jg
scas
cmpl
push
fxch
cmp
xor
cmp
add
stc
pushl
pushf
not
bt
stc
pushf
call
jo
push
and
arpl
call
cmp
xor
ret
mov
fstl
rolb
lret
imul
test
cs
frstor
dec
pop
sub
and
in
lods
dec
add
mov
mov
add
dec
ret
ficoms
inc
jp
xor
inc
icebp
cmp
adc
mov
popf
sub
xorl
subb
sahf
hlt
add
xor
xchg
test
jl
out
mov
bound
mov
mov
shrb
scas
imul
pop
popf
addr16
sbb
jns
imul
pop
add
leave
adc
mov
xor
push
pusha
sbb
loopne
test
cmp
cmp
mov
pusha
test
pusha
call
xor
pusha
lea
call
jmp
call
pop
scas
lods
add
xchg
lock
pop
xchg
mov
ljmp
push
mov
arpl
iret
dec
xchg
out
cmpsb
out
adc
pushf
jg
and
pusha
scas
call
mov
sub
cld
jno
pop
lahf
xorb
xchg
fucomip
xchg
sbb
cmc
addr16
mov
cmp
xor
sub
fucomip
pusha
mov
cmc
sbbl
inc
mov
lahf
sbb
or
cmp
jge
sbb
add
adcl
and
jne
movzbw
lahf
and
daa
sub
shl
mov
call
call
push
push
lea
call
call
pushf
mov
mov
mov
lods
cmc
pushf
stc
clc
xor
stc
pushf
push
call
xchg
pop
movl
cwtl
setbe
bswap
lea
mov
push
pusha
movl
pushf
pushf
jmp
shl
bsf
rcr
mov
cmp
cmpb
pusha
jmp
pusha
cmp
pusha
jmp
pusha
lea
je
bt
pusha
pusha
test
add
pushf
push
pushf
lea
jmp
ror
lea
jbe
inc
bt
xor
test
jmp
or
les
hlt
call
sub
pop
push
push
cmp
movsl
and
ret
lahf
pop
and
paddd
fcompl
jge
in
lods
jp
mov
mov
xabort
popf
rorl
mov
add
mov
lea
jmp
mov
mov
clc
sub
jmp
inc
mov
cmp
pushf
pushf
xor
cmp
call
fiaddl
out
adc
mov
shr
and
xchg
lahf
push
into
arpl
jo
jmp
xor
add
mov
fwait
adc
jnp
jle
outsl
cld
stos
push
mov
sar
jae
sarb
movsl
stos
xor
xchg
out
cltd
jne
add
push
outsb
in
in
push
ret
stc
jmp
test
fimull
and
pusha
sub
or
mov
pop
mov
sub
pop
dec
ss
xchg
sbb
dec
add
pop
pop
mov
fimull
pop
lock
push
rcr
xor
stc
sub
ret
stos
lret
cmp
cmp
mov
mov
mov
mov
dec
jb
mov
test
movsb
pop
dec
jnp
stc
inc
stos
data16
or
jns
sub
sbb
out
xchg
movsl
cmp
inc
adc
adc
mov
out
or
fisubrs
bound
les
jno
sbb
mov
dec
daa
les
push
jo
or
outsb
imul
dec
xchg
mov
or
xor
push
xchg
jp
les
rolb
inc
movsl
lret
jo
pop
cwtl
push
inc
inc
sbbl
kandnw
sub
inc
scas
xor
cmp
jne
mov
dec
jno
mov
and
pop
rcl
and
cltd
imul
pop
aam
xor
push
cmp
cmpsb
bound
fucom
mov
cmp
mov
lret
aas
xor
movsl
jno
ljmp
out
pop
xchg
enter
cmpb
movb
mov
lea
jne
push
push
lea
jmp
movb
push
movb
mov
cwtl
lea
call
cmpsb
push
int3
arpl
inc
and
add
pop
adc
mov
outsl
jecxz
push
das
jmp
hlt
add
les
and
stos
xchg
mov
iret
sbb
mov
aaa
lret
out
and
scas
int
repz
lock
lcall
out
cmpsl
sbb
popf
orb
push
movl
jmp
stos
pushf
pushf
pusha
movl
lea
jmp
mov
mov
call
pusha
pushf
jmp
repnz
mov
lea
jne
bts
shld
bsr
lea
mov
jmp
pushf
inc
jmp
xchg
das
vpmullw
xchg
int
mov
mov
mov
mov
or
ja
call
mov
cmp
or
je
mov
add
out
sahf
into
orb
cmp
jbe
cwtl
rol
dec
aad
dec
xchg
sti
or
and
xchg
cmp
in
lods
outsb
mov
ret
cltd
mov
mov
add
das
sahf
cmpsl
fsubrs
mov
imul
das
jl
dec
and
jno
mov
jmp
sbb
xchg
fistpl
push
subb
or
cmc
shl
add
btc
cmc
shr
shl
mov
shl
shl
shld
add
push
not
mov
call
mov
inc
pop
pusha
aas
arpl
int3
add
in
push
mov
fcoml
jge
and
add
out
pusha
popa
push
adc
lock
std
pop
push
lds
sbb
addr16
mov
mov
and
in
test
mov
sar
ret
mov
sub
mov
into
sarb
jo
mov
dec
xorb
cld
pop
lret
lret
sbb
je
sarb
clc
or
xor
dec
cmpl
push
addl
call
ds
mov
cmp
xor
pop
lcall
enter
imul
cwtl
xchg
in
pop
pop
cs
jmp
pop
mov
or
aad
fcomps
jo
adc
scas
pop
in
jne
hlt
sbb
xchg
ljmp
jecxz
int
es
outsb
mov
rcrb
shlb
addr16
mov
jecxz
fnsave
add
push
adc
sbb
outsl
lcall
cmc
dec
inc
push
sbb
lahf
movsl
dec
push
fldt
sbbl
dec
hlt
inc
push
sub
incb
aad
pop
add
xor
cmp
insb
jp
aaa
add
jp
jp
aaa
mov
out
inc
cmp
jecxz
arpl
jg
push
jl
mov
sub
mov
shlb
sub
add
or
aas
sarb
loop
xchg
mov
loop
and
lds
pop
mov
fst
popa
gs
sbb
jl
dec
test
aaa
jne
insb
test
insb
push
sahf
insb
mov
push
xlat
sbb
insl
movl
and
addl
add
mov
cld
add
call
lea
jb
jmp
pushf
add
pushl
bt
pusha
stc
cmp
call
mov
movb
mov
pushl
ret
lea
jae
lea
not
mov
shrd
bsf
shl
mov
add
setp
sar
btr
mov
cmc
xor
push
jmp
pusha
mov
call
and
lods
leave
pop
inc
adcb
mov
int3
les
ljmp
dec
inc
dec
dec
push
push
les
nop
sbb
pusha
pop
sbb
cwtl
pop
lret
movb
or
pop
cs
dec
dec
les
leave
shl
sub
sbb
pop
dec
int3
pusha
movl
push
pushf
jmp
pusha
inc
jmp
stc
cmp
cmpb
call
movb
lea
jae
seto
pushf
setb
mov
jmp
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
andb
add
fbstp
push
jbe
dec
jle
scas
call
add
dec
rorl
adc
sbb
dec
xchg
fisubrs
loop
mov
cltd
or
data16
or
add
sbb
fildl
cs
inc
sub
jl
sbb
and
lret
les
mov
inc
lret
and
dec
mov
fwait
xor
gs
pushf
rorl
inc
cmpl
fists
outsb
neg
mov
es
addr16
leave
cmpsb
and
inc
rcrl
push
xchg
dec
lahf
jb
dec
ss
gs
pop
xchg
sub
fidivl
jbe
cmpsl
jecxz
fmuls
in
mov
daa
add
jae
movsb
cltd
iret
leave
lret
bswap
or
lods
addr16
xor
mov
push
arpl
xor
imul
roll
lds
jmp
adc
mov
xor
bound
movsb
adc
xor
fstps
or
les
or
mov
add
repnz
pop
pushf
jns
sub
fstps
fildl
rolb
scas
and
orb
pop
jnp
sbb
ljmp
filds
dec
and
outsl
call
ret
lret
and
sbb
fbld
xchg
add
and
imul
or
sahf
sbb
nop
add
adc
out
arpl
mov
mov
pop
sbb
outsl
or
call
push
js
fcoml
fdivrl
mov
sub
movsb
sbb
jno
xor
hlt
orb
xchg
cmp
daa
out
in
notb
or
inc
loope
stc
mov
fwait
dec
xchg
stos
stc
sti
fcoml
xchg
leave
push
mov
bound
xor
seto
outsl
xchg
sbb
js
out
or
cmp
sbbl
cmc
push
xchg
int
pop
fisttpl
mov
sarl
inc
addb
jo
cmpsl
lahf
in
imul
push
cs
mov
sbb
test
loopne
add
cmc
sldt
pop
lea
call
lea
add
rcll
je
lods
cmpsl
sbb
inc
mov
mov
cmp
pop
movsl
inc
lret
inc
pop
cmc
xchg
std
xor
jae
mov
xchg
rcll
es
insl
mov
rcrl
sbb
bound
mov
call
mov
repz
mov
clc
jb
scas
ret
xor
push
jecxz
shll
mov
mov
mov
adc
daa
and
jge
into
mov
insl
les
ds
inc
ret
xchg
call
jecxz
mov
in
fldt
data16
dec
mov
loope
dec
push
das
adc
inc
inc
iret
icebp
mov
daa
sbb
xchg
fisttps
arpl
ret
sbb
int
xlat
scas
jnp
lret
xor
push
pop
dec
ret
mov
sbb
pop
sbb
sub
mov
cmp
shrl
loop
out
dec
sub
leave
in
int3
cmp
xchg
in
fistps
lcall
inc
push
cmp
pop
ret
mov
sbb
add
jae
mov
and
int3
test
cmp
bound
push
mov
shrb
sbb
push
ret
mov
ljmp
add
mov
pusha
lea
jmp
negl
push
lret
inc
js
fcoml
mov
in
and
push
cltd
xchg
mov
or
xchg
in
or
or
jo
rcrb
mov
dec
mov
bound
lret
xchg
lret
jg
movsl
mov
lds
push
sbb
enter
ret
pop
jl
add
testb
cld
lahf
sbb
test
xchg
or
stos
mov
push
mov
xchg
sbb
pop
aaa
dec
cltd
inc
andb
push
mov
int
mov
sbb
test
jb
aas
les
dec
rcrl
test
or
dec
les
pop
mov
jmp
push
iret
xchg
jmp
push
lea
sub
aam
cmpl
push
andb
and
dec
mov
movl
pusha
lea
jmp
and
dec
ss
lret
mov
dec
cmc
push
push
or
stos
loopne
push
rcrl
xchg
pop
add
ljmp
aad
mov
add
sbb
mov
pushf
movzwl
inc
cmp
pop
bsr
mov
jmp
lea
jl
lods
bt
xor
pushf
jmp
push
lea
lea
lea
pushf
movzwl
lea
lea
movw
lea
movzbl
pushf
mov
push
call
bt
cmc
stc
add
jmp
mov
call
sbb
fmuls
sti
jb
or
fcoms
fsubp
cli
xchg
jg
mov
fwait
daa
movsb
leave
mov
adc
push
ja
cmpsl
cmpl
ljmp
sti
ss
scas
jo
push
push
lds
loopne
iret
mov
lret
es
pop
mov
in
cmc
lds
into
mov
fsubl
orl
ja
adc
add
pop
mov
sbb
testb
or
sahf
sbb
rorb
jb
sahf
adc
add
stos
sub
ficoml
xlat
insb
xlat
lcall
mov
xchg
scas
and
sbb
pusha
mov
add
clc
imul
test
push
stc
pusha
add
pushf
pushf
pushf
push
lea
jmp
ja
aas
fwait
and
inc
adcb
cltd
ror
inc
inc
cmc
imul
ja
les
fwait
jecxz
test
outsl
fists
lods
xlat
jbe
lret
push
bound
mov
lahf
fldt
push
jl
scas
bound
mov
push
lea
jae
cmc
pushf
cmc
cmp
cmp
pusha
lea
ja
push
jmp
movb
lea
je
call
push
mov
movl
mov
mov
movb
movb
lea
jmp
movzbw
setbe
pop
movsbw
movsbw
movzbw
movzbl
pop
not
xchg
pop
bswap
pop
jp
pushf
push
pusha
mov
not
pop
pushf
mov
pushl
pushl
ret
lea
jne
pushf
not
not
movzbl
mov
pusha
pushf
movb
pushf
lea
jmp
ror
cmc
pushf
pushl
add
test
pushf
movb
stc
cmp
not
lahf
lea
pushl
pop
movsbw
setbe
mov
movb
push
call
call
movsb
mov
scas
repz
cmp
dec
ds
ljmp
cmp
add
inc
and
loop
inc
sbb
push
cmp
xchg
add
mov
sbb
aas
lock
jbe
mov
pop
adc
xchg
cmp
lods
mov
psrlq
ficoml
inc
stos
push
in
roll
test
jmp
jo
add
add
push
addl
int
mov
popl
xor
sbbb
outsl
dec
lea
cli
jns
pop
push
stc
or
jb
sbb
or
fxch
imul
out
push
sub
dec
fwait
gs
mov
lea
jg
sub
mov
insb
sub
es
xor
lcall
and
mov
leave
jl
jg
add
lock
add
stos
mov
pop
out
add
pop
fmull
fldcw
pop
les
cmp
xchg
insb
push
pop
outsl
push
inc
mov
sti
xor
shll
jle
adc
pop
lods
cli
push
cmpsb
cmp
outsb
test
out
dec
xchg
cmp
jecxz
pushf
ret
jne
cmovle
dec
and
out
addr16
aad
adc
int
out
inc
mov
rorb
stos
cmp
ds
lods
int
mov
xchg
into
push
pop
push
mov
arpl
mov
pop
clc
into
in
ret
int
add
inc
inc
adc
pop
push
jmp
inc
lahf
test
les
cmpl
dec
jg
int
lret
popf
push
outsb
inc
add
fwait
jnp
xchg
dec
sub
aad
popa
bound
loopne
mov
insb
or
xchg
sub
push
xchg
out
bound
mov
adc
inc
xchg
jo
shll
xchg
dec
pop
xchg
mov
mov
sbb
clc
mov
fs
xlat
mov
lcall
mov
mov
adc
sbb
xchg
pop
test
ljmp
ret
add
xor
mov
gs
adcl
adc
dec
and
cmp
xchg
int
and
inc
sub
aam
mov
adc
xchg
sbb
jmp
push
int3
cmpsb
jge
xchg
jmp
cmpsl
test
mov
addr16
ljmp
test
pop
dec
ficoms
lahf
jno
xlat
test
xchg
decb
pop
cmc
std
stos
mov
ds
sub
aaa
adc
leave
dec
mov
into
push
repz
movsb
mov
jmp
mov
in
lcall
mov
sahf
es
rcrl
pushf
jno
sbb
xor
sarl
sub
mov
int
fwait
dec
xchg
cltd
int3
testb
or
test
nop
add
xchg
out
stc
add
test
sbb
mov
push
mov
pop
das
push
push
mov
xor
jp
sbb
adc
daa
lea
roll
insb
mov
outsl
lea
imul
fwait
loope
inc
je
loop
push
bound
jb
xor
call
pop
cli
popa
xchg
lret
repnz
enter
xchg
xor
mov
out
sti
je
mov
xor
mulb
dec
or
and
stos
bound
dec
push
push
scas
pop
mov
jecxz
gs
nop
ds
outsl
cmpb
jmp
jbe
flds
lahf
push
daa
fisubrl
or
sub
mov
fsubr
call
cmp
jl
pop
int3
ljmp
pop
and
repz
dec
insb
push
mov
push
mov
rcrb
cli
orb
xor
xchg
or
rclb
xchg
inc
and
pop
ljmp
xchg
movsb
pop
mov
mov
rcl
test
ret
testl
ss
xor
or
fmull
sbb
js
daa
out
data16
test
adcl
and
mov
jns
aaa
cmc
clc
or
inc
or
ja
mov
inc
adc
push
mov
add
hlt
daa
xor
in
cmp
mov
xchg
insb
data16
mov
imul
les
xor
outsl
popf
insb
mov
loop
cltd
jnp
in
outsb
in
fcmovnu
aas
pop
pop
mov
dec
shrb
push
mov
mov
adc
imul
dec
push
test
mov
shll
fwait
push
mov
fidivrl
adc
cs
xor
jp
les
aaa
jl
mov
sub
sub
fsubrs
push
add
sbbb
je
or
es
fists
idivl
fsubrl
mov
int
test
sbb
stc
jl
push
pop
add
movsl
push
xor
cmc
xchg
mov
pop
jge
mov
rcl
lret
sti
sub
mov
test
incl
fistpll
out
les
int
out
js
mov
dec
adc
mov
push
pop
xor
add
pushf
je
data16
ja
and
loope
mov
lods
add
mov
adc
mov
jge
test
lea
lock
mov
pop
sbb
ret
jns
xchg
mov
mov
inc
adc
roll
lret
mov
aad
iret
push
sti
aad
xchg
sti
or
jno
and
adc
adc
xchg
cli
scas
rolb
dec
mov
jb
push
and
mov
ret
test
test
sti
lret
add
inc
adc
jnp
cmp
sbb
lcall
nop
jecxz
jb
add
stos
insb
mov
addr16
int
pop
fistps
mov
popf
rorl
testb
push
xchg
cmp
jmp
movb
pushf
jmp
lea
ja
pusha
bt
shr
sub
shrd
add
add
shrd
sub
sub
mov
neg
clc
sub
mov
cmc
push
stc
repnz
pushf
pusha
lea
jne
movzbw
jmp
lea
ja
jmp
mov
mov
push
push
mov
pushl
ret
lods
fisttpll
sub
dec
mov
sub
mov
sub
stos
stos
add
push
ficompl
xchg
lea
and
mov
cmp
pop
or
dec
xor
xchg
push
pop
pop
dec
paddsb
fstpt
and
push
call
icebp
mov
push
add
mov
pavgw
mov
xchg
or
adc
shll
jl
scas
jo
daa
mov
sbb
mov
mov
push
and
add
fstps
ficomps
shlb
ret
adc
sub
mov
call
add
pop
push
sbb
les
icebp
ret
sub
enter
jecxz
subb
imul
xor
sbb
push
mov
fwait
mov
adc
dec
scas
push
mov
mov
or
out
xchg
fwait
dec
ss
pop
jl
mov
and
sbb
or
repnz
adc
sub
and
mov
fmul
lret
sub
pop
sub
rorb
or
sbbb
ds
jl
mov
jno
int
xchg
adcl
xchg
loop
push
xchg
xor
call
lea
ja
stc
sub
pusha
pushf
mov
add
add
pushf
pusha
lea
jmp
or
lock
push
test
dec
xchg
aad
jg
lret
or
ja
adc
push
das
int
jl
add
inc
push
jb
pop
imul
into
shlb
cmpsl
fucomp
inc
add
jae
mov
pop
in
scas
aaa
les
mov
lret
into
xchg
adc
in
xor
faddl
std
push
jp
add
or
adc
push
or
mov
int
in
xchg
or
jp
pop
push
or
sarl
dec
shl
pushf
push
lea
call
jmp
call
inc
lret
or
dec
or
leave
mov
adc
xchg
arpl
push
dec
jg
xor
pop
nop
add
xorl
push
out
hlt
lret
pop
cltd
bound
and
int3
fs
push
push
data16
js
divb
sahf
sbb
push
in
xchg
cmc
lds
mov
mov
ja
stos
sbb
jmp
fldcw
inc
or
cmpsb
ds
mov
add
ja
arpl
fs
sbb
call
cmp
test
test
sub
stc
add
rol
rol
rol
mov
mov
not
dec
shl
mov
test
cmp
repnz
jmp
pusha
lea
call
push
pushf
mov
lea
jae
jmp
clc
mov
stc
clc
test
pusha
jmp
mov
movb
lahf
pusha
setg
mov
call
movl
mov
pusha
pushf
mov
mov
movl
pushf
mov
pushl
ret
cmp
jmp
jmp
pusha
push
cmp
call
mov
jmp
xchg
test
inc
jge
nop
movsb
repnz
pop
push
pop
std
jne
pop
xchg
pop
mov
xor
les
aad
mov
scas
lods
pop
cmp
les
or
jmp
push
xchg
mov
push
pop
pop
out
and
dec
inc
std
mov
in
and
decb
sbb
push
int
cmc
pushl
push
push
pushf
mov
cmp
pusha
mov
push
lea
ja
push
sub
pusha
lea
add
bsf
dec
mov
sub
rol
mov
test
test
call
lea
jae
jmp
movsl
dec
call
inc
sub
pop
scas
and
xorl
stc
les
sbb
mov
jle
scas
mov
ljmp
lcall
out
adc
ficoms
xchg
xor
sbb
push
push
or
cltd
inc
inc
imul
in
jmp
shr
mov
lea
jge
push
lea
je
call
stc
add
jmp
jmp
call
lea
call
jmp
push
jmp
sar
sbb
sub
adc
rcl
bsf
rcl
lea
add
test
rol
mov
or
rol
mov
cmc
repnz
pushf
pusha
jmp
or
jmp
lea
call
test
or
pushf
lea
jne
bsf
bswap
movzbl
mov
pusha
test
test
bt
or
pushf
lea
je
not
movsbw
pushf
call
bound
xor
pop
sar
adc
cld
mov
and
inc
jp
push
or
lea
push
inc
cmp
push
cmp
mov
mov
addr16
pop
sbb
inc
mov
sbb
mov
ret
dec
sbb
in
gs
sar
adc
jecxz
icebp
test
int3
test
dec
adc
je
adcb
inc
lods
cmpb
push
cltd
lret
cmc
je
outsb
mov
adc
push
aas
ret
jp
pusha
sbb
push
sbb
icebp
mov
jmp
cmp
pushf
or
jmp
push
pushf
jmp
sub
clc
pushf
ror
clc
test
movb
call
push
pushf
lea
je
pushf
lea
jmp
lea
je
sar
test
bsf
lea
add
stc
xchg
shl
cmc
sub
rcr
inc
shr
lea
mov
add
add
cmc
shld
btr
rol
add
setno
shld
bswap
or
mov
stc
bt
shr
cmc
test
pushf
cmp
push
lea
je
clc
pushf
push
cmp
movb
pushf
call
pusha
lea
je
pushf
sub
jmp
test
stc
cmp
pushf
lea
call
pusha
call
mov
insb
mov
pop
stc
syscall
cmp
mov
and
rorl
dec
mov
cld
loop
cli
or
and
xchg
sub
push
and
jae
dec
fcmovnb
or
push
lods
push
or
pop
iret
inc
push
sbb
ds
das
shrl
dec
imul
mov
iret
inc
xor
in
xor
outsl
scas
lds
sub
out
or
andb
daa
dec
mov
add
cmp
adc
mov
aam
ficompl
push
pushf
data16
lea
movb
movzbl
jmp
std
scas
imul
mov
cmp
aas
mov
jbe
xchg
pop
lret
pop
test
jg
fimull
inc
aad
dec
fsts
das
aad
mov
cmp
sbb
pop
adc
sti
mov
pop
cltd
push
push
sbb
movsl
jb
jmp
movzbw
pushl
mov
pop
pop
mov
movsbw
mov
pusha
mov
pushl
ret
xchg
mov
push
fnstcw
cld
ss
sbb
stos
and
gs
ret
add
sbb
notb
insb
sbb
push
repnz
jmp
add
popf
push
in
sub
mov
dec
outsl
xchg
rorl
or
clc
bound
inc
fisubl
cmp
push
pop
rorb
stos
fisttpl
rorl
sbb
jle
and
pop
std
std
adcb
insl
add
dec
std
push
cs
icebp
pushf
mov
pop
lret
ss
lcall
in
or
or
aam
pop
ret
loopne
es
test
push
xchg
add
sbb
cmp
in
xchg
push
ss
xor
or
inc
enter
xlat
dec
rol
clc
pushl
mov
sub
call
lea
call
call
popa
add
mov
pop
lea
mov
mov
xchg
and
mov
testb
adc
sbb
loop
repz
jnp
out
scas
fstps
movsb
cld
nop
sbb
and
movsb
outsb
push
and
in
mov
cli
idiv
xor
repnz
cs
inc
popf
addr16
and
xlat
aas
scas
sbbb
xchg
inc
test
lret
sub
mov
xor
aaa
inc
pop
or
test
push
out
pop
push
pop
arpl
leave
jg
cmp
jmp
push
sbb
mov
or
fs
je
call
setle
movl
not
movzbw
lea
jmp
add
xor
movsbl
cmp
mov
bt
push
movb
add
cmc
mov
add
shld
cmp
or
mov
bt
mov
push
cmp
push
lea
jbe
push
lea
mov
dec
sar
add
call
lea
jne
bswap
seto
setnp
movb
lahf
mov
cwtl
setp
push
pushf
lahf
lea
jmp
pushf
lea
jb
clc
cmp
push
push
call
popf
cpuid
nop
pusha
push
movl
push
movl
movb
pusha
lea
jmp
pushf
jmp
lea
call
push
call
movl
movzbw
lea
mov
jmp
movb
cmc
call
adc
pusha
lea
jmp
pushf
xchg
push
dec
cmc
push
pushf
shl
not
lods
jmp
pusha
jmp
pushf
pushl
pushl
movl
jmp
les
iret
ljmp
test
push
lret
stos
sahf
div
add
movsl
and
add
pop
add
fs
in
in
icebp
gs
xor
push
ret
mov
ficoms
inc
xor
xchg
add
mov
popa
std
std
mov
ret
cmp
hlt
ficoml
mov
fimull
jp
cwtl
add
xor
ss
mov
inc
cli
mov
pop
push
int3
add
mov
aas
cmp
inc
cmp
inc
mov
adc
stc
xor
jnp
xchg
mov
sbb
push
adc
out
dec
jbe
mov
xchg
jp
pop
mov
jmp
je
dec
imul
push
cli
mov
sbb
or
add
pusha
pusha
lea
ja
ja
call
pusha
movw
movl
pusha
lea
jmp
test
test
cmp
jmp
addr16
adc
fldcw
sbb
pop
xchg
push
mov
in
xchg
leave
ret
fwait
xor
imul
xchg
fiadds
popa
stos
mov
in
in
mov
jecxz
xchg
pop
push
test
sub
lret
xor
subb
lods
call
scas
pop
rol
fwait
xor
mov
stos
sti
jno
cwtl
out
stos
fimuls
sub
sub
sbb
jns
mov
jl
sbb
ja
notb
cmp
or
aam
inc
mov
add
push
cmc
fcmovb
lret
jle
or
sahf
and
adc
je
iret
iret
push
aaa
aam
jecxz
fmuls
xor
sahf
sub
addps
stos
xchg
ss
cmp
pop
mov
pushf
cwtl
aad
out
push
mov
xchg
lcall
shr
sar
shld
btr
mov
cmp
movsbw
add
add
call
jmp
lea
ja
push
lea
jb
clc
push
test
push
cmpb
mov
pushf
lea
jne
add
ror
mov
test
clc
add
clc
stc
pushf
movzwl
add
neg
call
cmp
fs
iret
or
inc
je
and
lods
fsubr
xor
mov
popa
incb
or
sbb
push
js
test
inc
sahf
sbbb
lret
les
dec
out
and
scas
bound
inc
cwtl
pop
mov
cs
jmp
aad
xchg
insb
add
shrb
xlat
adc
push
mov
add
imul
jae
test
stc
pusha
pushl
popl
clc
push
cmc
clc
cmp
call
call
outsl
lcall
adc
sbb
add
xchg
jo
mov
lret
in
icebp
pop
clc
sbbb
rcl
std
dec
inc
pop
insl
or
lcall
insb
movsl
add
hlt
test
lcall
xor
imul
in
out
sbb
fiadds
aam
adc
cmpb
dec
add
jno
fcompl
push
js
flds
or
dec
jne
cmp
mov
test
movsl
inc
xchg
movsb
ljmp
inc
lods
adc
sub
aad
insb
or
xchg
sbb
enter
jb
in
push
or
rclb
inc
cltd
mov
sbb
xchg
fsubrs
jo
mov
les
cmc
xlat
xlat
jl
sub
pop
into
nop
fsubrl
xor
jae
fdivl
cli
dec
dec
test
int3
jno
cmp
sub
xor
les
std
jno
xchg
xchg
int3
cmp
mov
jecxz
or
arpl
mov
add
cmp
jns
push
jecxz
outsb
push
sub
inc
adc
lcall
loopne
shl
sub
orb
aam
cmp
mov
mov
shl
es
inc
push
cmp
inc
push
and
xor
mov
adc
mov
pop
xor
xchg
mov
bound
or
rclb
je
scas
xor
xlat
dec
adc
mov
add
fcoml
add
push
sbb
je
cmp
fstl
and
push
adc
pop
cld
mov
push
fildll
push
insl
cmp
fdivl
lahf
sar
jmp
cmp
mov
lahf
xor
rclb
fisubrl
push
mov
push
leave
and
xchg
dec
add
hlt
stos
and
sbb
pop
adc
je
je
jnp
std
dec
mov
test
xchg
fstpl
push
movsl
addr16
or
jmp
push
mov
push
mov
lea
jmp
mov
sbb
jnp
sub
adc
test
adc
or
cltd
add
dec
pop
int
repz
das
ja
add
xchg
jne
and
push
movsl
mov
lock
cmp
call
push
jmp
ljmp
insl
repnz
outsl
stos
loopne
pop
cmpb
setp
addb
and
sub
stos
cmp
movb
fistpll
fstpl
push
pop
aas
jg
in
inc
jb
iret
outsb
cs
xlat
lret
mov
xchg
out
popl
inc
xor
scas
das
das
jecxz
sub
mov
gs
mov
mov
rorl
pop
sbb
sbb
xor
push
pop
mov
and
cmpsb
pop
dec
add
lds
lea
pop
sbb
imul
ret
mov
arpl
into
test
mov
imul
mov
mov
push
add
sbb
or
jne
les
and
das
loop
adc
cmpsb
mov
cmpsb
mov
pusha
lea
jne
cwtl
lea
mov
pusha
pusha
movw
lea
jmp
stc
bt
add
jmp
push
pusha
clc
jmp
pushf
jmp
movl
pushf
movb
pushf
lea
jmp
test
bt
sub
jmp
call
movsbw
mov
pusha
pushl
lea
jmp
movl
mov
movw
pushf
pusha
lea
jmp
call
movl
pushf
mov
pushl
pushf
lea
jmp
lea
je
not
jmp
bt
pusha
add
pusha
stc
movzwl
shld
mov
bt
stc
bt
add
cmp
pushf
mov
lea
jg
clc
bt
cmc
test
pushf
lea
je
push
add
movb
stc
test
cmp
mov
pusha
pushf
push
lea
jb
cmp
test
test
pushf
cmp
pushf
call
mov
push
movsbw
pushf
pushf
lea
pushl
jmp
push
movw
mov
pushf
lea
jmp
pushf
call
mov
xchg
pusha
jmp
movl
lahf
movsbw
lea
mov
mov
mov
pushl
movl
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
rolb
call
pusha
mov
movsbw
pop
pusha
pusha
mov
pushl
ret
mov
movb
lea
jne
push
lea
je
push
push
mov
lea
jg
push
push
pusha
lea
call
jmp
rol
bswap
inc
sub
jmp
gs
cmp
out
and
shl
mov
hlt
data16
lea
mov
jge
pop
sub
dec
xor
xor
icebp
or
outsb
mov
mov
jbe
fwait
xchg
das
mov
js
xor
xchg
out
iret
pop
aam
jl
mov
pop
xchg
jge
mov
mov
in
xor
negl
imul
out
call
add
pop
pop
adc
sbb
mov
hlt
push
pusha
movl
pusha
call
lea
jne
jmp
mov
pushl
pushf
pushl
ret
jle
fdivl
leave
mov
cmp
and
mov
jno
jp
pop
pop
dec
jecxz
jbe
loopne
scas
sahf
lahf
stos
add
out
mov
or
sbb
orl
add
aam
or
movl
mov
mov
or
add
jp
loope
and
push
stos
and
into
clc
xor
clc
jmp
sub
shl
shld
lea
mov
jmp
lea
call
push
call
movb
pushf
movl
movl
pushf
lea
jmp
outsl
movsb
fxch
std
mov
sahf
pushf
aad
test
fnstenv
bound
push
mov
shrb
mov
or
push
repnz
out
mov
in
aas
fcomp
xor
jbe
rclb
fidivs
add
mov
inc
repnz
adc
daa
pop
lea
push
stos
into
fcom
scas
xchg
dec
bound
xor
lret
sahf
aam
outsl
jecxz
push
cmpsb
pushf
mov
and
mov
mov
xor
mov
stos
lret
cli
cmp
add
test
loope
in
and
sub
pop
leave
inc
or
push
stos
cmp
jmp
or
popa
push
mov
mov
jge
test
ret
sbb
sahf
decb
cmp
testl
xchg
adc
push
add
jo
repnz
loopne
pop
or
push
out
sbb
icebp
movsl
icebp
out
pop
fsubp
dec
or
iret
add
pop
jle
add
push
inc
and
mov
fwait
xchg
adc
pop
sub
loopne
mov
add
pop
sub
dec
nop
or
sbb
int
sub
test
push
xor
bsr
bsf
lea
mov
rcl
call
ds
fidivl
mov
ficoms
into
pop
aam
mov
fidivrl
adc
dec
aad
cwtl
and
and
out
iret
aam
mov
dec
jmp
enter
xor
dec
inc
or
mov
imul
insb
dec
and
cmpsb
mov
scas
fdivl
lds
push
xor
xchg
ret
stc
sub
fstl
test
lret
push
pop
clc
or
push
push
mov
mov
shll
sbb
mov
and
movl
push
lea
jmp
push
jb
std
shlb
jo
xorb
lret
jle
das
stos
cmpl
and
nop
or
ljmp
iret
add
jns
cmpsl
dec
adc
loop
pop
sub
cmpsb
and
in
andb
and
pop
ud1
stos
or
cmpsl
pop
rorb
sbb
rorl
inc
and
and
cmpsb
add
cmc
scas
sbb
sub
sbb
or
decl
lods
popf
repz
fistps
jns
mov
mov
cmp
rep
pop
mov
lods
push
aad
mov
xor
pop
out
dec
popf
push
or
xor
push
sahf
call
mov
fistpl
jge
sbb
dec
lret
orb
or
mov
clc
cmp
cmp
andb
andl
lods
addr16
out
mov
push
xor
int
std
aaa
add
pushf
adc
inc
cmp
ljmp
lods
jle
je
add
fs
ja
not
add
add
call
es
mov
jae
pop
popa
test
enter
in
int
jns
inc
add
ds
scas
mov
xor
scas
dec
andb
xor
loopne
mov
mov
std
pop
out
leave
push
lret
popf
sub
iret
xor
sahf
nop
pop
mov
jge
add
adc
cmp
fistpll
adc
add
jbe
ret
adc
dec
sbb
stos
bound
loopne
loopne
sbb
inc
ficompl
in
lods
sub
lods
pop
pop
add
fbld
jge
dec
lcall
xchg
repnz
pop
adc
mov
mov
mov
std
stc
lea
lock
jmp
push
sub
das
loopne
unpckhps
aas
lret
mov
inc
sub
inc
mov
inc
cmpb
mov
movsb
dec
sbb
sbb
mov
fcomip
xor
roll
jnp
pop
sub
addr16
xlat
mov
sarl
notl
lock
pop
sbb
push
adc
shrl
or
pop
es
rcl
sahf
push
data16
imul
rolb
jb
cmc
sbb
dec
test
mov
mov
xor
out
pop
adc
mov
int3
or
les
jmp
stos
push
movsb
cmp
adc
int
scas
imul
sub
movsb
cwtl
out
divl
into
dec
test
in
push
adc
xorl
mov
push
scas
gs
cmp
leave
jmp
jae
push
not
mov
dec
call
mov
push
setae
setp
lahf
lea
pusha
jmp
push
movb
pushf
movb
mov
push
pusha
mov
pushf
push
pushl
ret
push
jmp
mov
pushl
lea
jne
pushf
adc
neg
ror
mov
cmp
test
test
call
aaa
ficoms
and
nop
out
stos
pop
adc
mov
mov
stos
scas
mov
xchg
or
dec
pop
mov
xor
rcrb
imul
fwait
das
add
scas
sahf
push
in
loopne
out
mov
int
mov
pop
mov
xor
add
in
out
loope
or
xor
bound
movsl
incl
test
jmp
and
out
pusha
xchg
push
xorl
daa
popa
lea
jb
test
cmp
jmp
lea
ja
cmp
xor
clc
pusha
pushf
call
sbb
inc
lret
ror
jno
leave
xorl
aas
testl
into
mov
shrl
clc
test
add
sub
dec
fistpll
movsb
ss
pop
sub
clc
sub
stc
cld
push
mov
gs
mov
and
pop
lods
dec
addl
call
sbb
in
repnz
les
or
outsb
ror
loop
mov
and
int3
mov
daa
jo
adc
and
loope
movsl
pop
lods
stc
xchg
loop
xor
std
arpl
in
inc
add
pop
cmp
dec
sub
mov
cwtl
data16
ljmp
in
sbb
xor
inc
mov
push
pushf
lahf
cld
cmp
icebp
std
orb
bound
loop
loop
jecxz
lods
cli
int3
mov
loope
sub
stc
in
push
pushf
jg
jp
ret
jl
bound
adc
mov
push
movsl
sbb
adcb
mov
jnp
into
orb
inc
jne
cmp
rcll
icebp
inc
xor
stos
xor
int
mov
xlat
fldcw
inc
lods
xchg
fildll
mov
add
sub
movsb
ficoml
sub
aam
xchg
lret
mov
mov
cmpb
rclb
pop
inc
cmpb
jb
lcall
popa
movsl
sahf
or
jl
jns
mov
xor
pop
xor
ficoms
shl
sub
je
movsl
lods
lea
incl
mov
bound
rcll
xchg
jle
fwait
jne
fildl
enter
cli
cmp
jo
cmp
bound
js
mov
or
pop
add
or
adc
clc
arpl
or
hlt
inc
call
add
jne
loope
loop
les
pop
test
xchg
popf
data16
js
cli
mov
mov
imul
cmp
scas
mov
pop
add
leave
push
dec
ss
arpl
cmp
imul
test
pop
test
mov
cmp
xor
fsts
or
lret
iretw
cmp
and
mov
sbb
cmp
fisubl
negl
push
inc
cltd
and
push
andl
push
sbb
inc
cmp
sbb
inc
in
mov
mov
in
je
lea
add
jne
ficoms
data16
outsl
jns
fisubl
jno
mov
push
adc
iret
cmpsb
cwtl
or
imul
scas
test
test
test
dec
dec
mov
adc
ficompl
imul
sbb
popf
xchg
bt
stc
add
push
pusha
push
push
lea
jmp
in
pusha
movl
pushl
call
lea
jne
dec
cmp
mov
bt
jmp
pusha
jmp
push
mov
pushl
inc
lea
jmp
lea
jne
shld
movsbw
or
mov
neg
sub
cmp
rcl
bsf
mov
stc
test
sub
call
pushf
lea
call
cmp
pusha
jmp
pusha
pushf
adc
pushl
pushl
jmp
stos
bswap
loope
inc
sbb
mov
cltd
xadd
cmpsl
and
push
leave
ficoms
sbb
les
sti
sbb
pushf
mov
test
lret
xchg
xchg
mov
push
pusha
pop
ficoml
or
push
or
lcall
pushf
call
loop
xor
test
mov
out
push
rolb
mov
pop
mov
inc
inc
or
mov
inc
frstor
mov
push
lods
les
negb
and
out
hlt
jl
sub
rolb
outsb
sbb
xchg
cmc
mov
pop
addr16
ret
mov
xor
repz
sahf
outsb
leave
lock
arpl
lret
fbld
test
and
or
les
int3
push
int
add
in
jne
leave
xchg
mov
sbb
add
sbb
inc
popa
mov
add
and
and
and
jle
add
sbb
add
add
add
add
aaa
pushf
call
inc
arpl
sarl
fists
xchg
dec
test
test
repnz
les
sbb
notl
xchg
jl
lret
scas
and
dec
les
call
inc
divl
movsl
pop
nop
inc
mov
adc
push
mov
push
fimull
pushf
xor
jmp
jmp
pusha
jmp
jae
pushf
bswap
mov
mov
mov
pusha
not
mov
mov
pushf
pushf
pop
mov
push
pushl
mov
pushf
lea
jmp
pushf
movl
test
pushf
mov
lea
stc
jmp
call
jmp
rcr
mov
test
cmp
pusha
lea
jbe
pushf
and
mov
bts
add
adc
btr
neg
shrd
mov
pushf
lea
add
inc
rcr
call
pushf
lea
jne
lahf
movb
sets
not
push
not
movzbw
lea
lea
jmp
adc
pushf
pushl
ret
lea
jne
movzbw
pusha
rol
sub
mov
stc
sub
sub
adc
jmp
call
lea
je
pusha
pushf
bt
cmc
cmp
call
loop
lds
arpl
bswap
enter
test
popa
iret
sub
fistpll
movsb
mov
xor
or
push
ds
lret
test
inc
ja
dec
and
in
jae
pop
inc
inc
fcomp
movsl
std
insl
repz
cmpl
repnz
xchg
movsb
sbb
jno
jle
fs
call
call
pusha
jmp
bt
stc
call
jmp
lea
jp
pusha
lea
je
push
lea
jmp
call
jmp
xchg
xchg
mov
rcrb
cmpb
fists
aas
test
test
aas
jp
scas
mov
sub
xchg
add
aas
aad
cmpsb
dec
mov
sahf
std
cmovne
xchg
popl
add
sub
fnsave
hlt
inc
call
push
mov
sub
lahf
add
or
mov
out
adc
or
push
mov
xlat
mov
and
ja
jmp
mov
mov
push
sub
fcmovbe
mov
mov
mov
push
xchg
stos
inc
int
xlat
jmp
cwtl
pop
pop
lock
pop
insb
aas
and
leave
test
or
lea
pushf
lods
testl
jne
imul
inc
sbb
pop
and
hlt
rcl
mov
sub
push
inc
testb
mov
fsub
not
pusha
setl
mov
pushf
movb
pusha
pushf
lea
call
push
call
bt
stc
ror
stc
bt
cmp
pushl
add
call
movl
movb
pusha
pushf
push
lea
jmp
movl
push
push
movb
pushl
popl
push
mov
pushl
ret
cmp
push
stos
stc
divl
and
adc
cmp
test
push
repnz
ja
movsl
pushf
sbb
setl
dec
bound
js
ja
daa
aaa
jnp
push
mov
sub
xlat
dec
pop
jnp
cmp
fisttpll
inc
sub
loopne
sbb
mov
enter
loop
movsl
sbb
lahf
pop
lds
adcl
loope
inc
mov
aaa
lods
jns
sbb
les
sti
sbb
sbb
push
les
push
sub
jle
repz
pop
movsb
cmp
cmc
mov
jecxz
push
test
sub
xchg
inc
dec
sbb
stc
lods
in
call
pusha
not
bswap
mov
lea
bswap
seto
jmp
pusha
pushf
lea
je
clc
jmp
lahf
das
mov
sub
push
bswap
or
stc
mov
push
bt
jmp
movb
mov
pushf
lahf
pushl
popl
jmp
pusha
pushl
movl
call
test
jb
pushl
stc
cmp
pusha
push
jmp
inc
rcl
dec
mov
pusha
pusha
shl
lea
js
je
pusha
mov
jmp
jne
gs
xor
fs
insb
add
shr
cmp
and
fs
ja
push
pusha
jmp
mov
clc
mov
push
pushl
cmpb
pusha
jmp
push
mov
ret
aas
jge
sub
stos
lret
js
push
outsb
int3
gs
push
lret
cmpb
pop
mov
xchg
or
mov
daa
outsb
int
or
insl
mov
push
inc
imulb
sbb
aam
sbb
mov
add
adc
add
fnstsw
stos
push
pushf
pushl
pushl
popl
push
pushl
pushf
pushl
ret
pushf
pushl
movl
lea
jl
pushf
pusha
movl
pushf
pushl
pushf
lea
jmp
repnz
movb
pusha
call
pusha
adc
jmp
pushf
lea
movsbw
movzwl
bswap
pop
lea
push
not
mov
movb
jmp
mov
jmp
call
pushf
call
aas
jecxz
jmp
arpl
or
mov
xchg
dec
les
and
cmpsb
nop
inc
fs
out
add
in
xor
push
add
mov
loop
clc
cmp
cmp
stos
mov
outsb
and
jo
jp
rcrb
adc
mov
test
jp
repnz
icebp
xlat
fmuls
pop
aam
add
fistpl
pop
xor
popa
add
gs
rcr
sub
test
push
cmovs
mov
mov
pop
dec
add
bound
lea
js
test
aam
add
mov
les
jmp
scas
addr16
das
call
les
add
xchg
sbb
icebp
ja
lods
mov
cmpb
add
sbbb
mov
pusha
jmp
shr
test
rcl
mov
jmp
hlt
pop
int
stos
or
or
sbb
jns
cmpsb
pop
xchg
dec
cmp
push
les
mov
addr16
in
decl
mov
repz
sbbb
popf
ja
insl
jae
scas
daa
lea
sub
aam
inc
js
out
gs
push
lds
push
mov
scas
movl
pushf
lea
jne
btc
bsf
stc
pusha
mov
test
movsbl
mov
sub
pusha
shrd
btc
and
lea
cmp
sub
stc
pushl
popl
clc
test
jmp
push
cmpb
jmp
movzwl
jae
shld
mov
jmp
pushf
call
push
pushf
pushf
movl
push
push
pushf
movl
push
lea
jmp
sub
lea
jmp
pushl
movl
jmp
pushf
pushf
pusha
lea
je
not
mov
jg
mov
pusha
movzbw
lea
jmp
pusha
jmp
call
call
lea
je
cmc
add
jmp
pop
pop
pushf
pushl
ret
cmc
sub
push
call
jmp
test
bt
add
pusha
pushf
clc
pushl
movzwl
movsbw
mov
stc
stc
movb
push
add
call
sub
inc
jl
pop
inc
add
xor
adc
pop
data16
inc
les
test
subl
les
or
fstps
lods
push
out
pop
imul
add
imull
push
mov
lea
ja
jnp
sub
cmc
bsf
add
xor
mov
mov
pusha
pusha
cmp
mov
test
repnz
call
xor
aam
lock
les
jge
es
fcom
mov
jno
lock
xchg
xchg
in
push
iret
aam
test
aad
lods
mov
dec
les
pop
jb
cmpb
shlb
mov
nop
test
adc
pop
dec
jmp
call
movb
movl
call
pushf
mov
push
pushl
pushl
ret
cmp
add
test
stc
test
clc
movzwl
shl
bsf
jmp
add
mov
stc
cmc
add
call
das
add
dec
pop
and
sbb
es
mov
mov
ret
cmp
dec
pop
sub
push
icebp
inc
and
bound
mov
mov
idiv
xchg
je
push
aaa
mov
push
iret
jnp
enter
cmp
mov
jns
leave
fnstenv
mov
push
fsubs
xor
pushf
cmp
pop
loop
rorb
lret
data16
stc
aas
pop
out
call
mov
mov
pop
mov
cmc
rolb
in
je
jecxz
ret
jle
inc
pop
paddsb
hlt
lods
shl
mov
jmp
in
add
stc
jp
mov
fs
xchg
sub
cwtl
das
sub
movsb
dec
sub
je
fiadds
mov
jne
shlb
mov
fsts
cmp
jb
jno
test
or
mov
notb
cltd
mov
jbe
sub
xchg
and
sbb
push
jo
rclb
fucom
mov
cwtl
test
xchg
fisubrl
scas
mov
nop
pop
inc
inc
mov
ret
mov
negb
int
jecxz
mov
enter
inc
pop
cli
add
jecxz
fdivrp
out
mov
dec
or
insb
aaa
lahf
or
data16
dec
popa
xchg
xchg
int
push
loop
pop
rol
out
movsl
dec
hlt
in
or
inc
lods
jb
adc
es
repz
inc
fcom
fcmovnbe
subl
loopne
leave
out
xor
adc
cmp
or
push
xor
jbe
fistps
sub
inc
ret
dec
call
push
roll
pushf
ror
mov
bt
stc
push
add
clc
cmp
pushf
call
or
add
or
jnp
mov
and
aad
jg
out
mov
inc
mov
mov
push
xchg
lods
mov
imul
pop
or
imul
and
pop
inc
out
out
cmpsl
sub
push
cmc
out
rorl
in
add
sub
xchg
sti
lcall
rcr
inc
add
jecxz
mov
pop
xchg
iret
inc
jne
cmp
or
mov
pop
mov
int3
xchg
xchg
cltd
jno
lds
rolb
jae
cwtl
fistpl
push
ret
jno
sarb
mov
ret
dec
repnz
jno
ret
stos
pop
and
fs
int
adc
push
push
gs
mov
lea
cmp
jno
sahf
add
into
inc
hlt
and
in
push
je
out
jbe
jp
cmp
and
adc
fimuls
clc
fstps
orb
sti
inc
add
imul
lcall
or
push
dec
xorl
cmp
imul
iret
xlat
fsubs
add
pusha
movl
movb
push
pushl
jmp
lea
call
pushf
jmp
movsbw
mov
pusha
pushf
pushl
mov
lea
jmp
das
fsts
jg
pop
roll
push
rorl
cs
xchg
dec
data16
outsb
les
sub
fiaddl
lds
push
add
jmp
dec
sbb
lahf
jbe
int3
cmp
xor
fimull
clc
jae
pusha
divb
push
push
mov
mov
cmp
dec
rorl
adc
sbb
mov
sub
push
test
push
and
movw
jmp
call
call
cmp
xchg
adc
xor
cmpsl
push
mov
scas
imul
aas
xor
cmp
mov
mov
fistpll
popl
rcll
dec
fs
mov
jnp
or
scas
sbb
xor
jmp
sbb
xor
imul
push
push
mov
mov
ds
mov
sbb
push
pop
mov
sti
push
pop
cmp
scas
dec
mov
hlt
imul
and
shl
scas
sbb
cmp
push
pop
mov
pusha
pop
fidivrl
mov
cmp
aam
dec
xor
cmp
pop
push
mov
xchg
adc
iret
cld
dec
mov
jno
aas
lds
imul
xor
dec
cmp
mov
fnstcw
cmp
hlt
jecxz
sahf
jae
cmp
pop
mov
aam
shl
loopne
scas
xchg
dec
mov
sbb
arpl
scas
stos
push
mov
push
cmpsl
sub
out
add
mov
jg
inc
nop
push
pop
mov
jmp
pop
cmp
adc
rcll
dec
inc
cmp
jbe
mov
xor
sub
out
xor
les
jmp
cmp
nop
push
mov
aam
loopne
out
mov
out
jbe
mov
push
ja
bound
imul
add
cmp
adc
shll
stos
mov
pop
mov
nop
cmpsl
cmp
mov
mov
jno
mov
mov
pop
push
mov
adc
adc
das
xchg
push
mov
mull
push
mov
mov
mov
cmp
cmpsb
cmp
aam
cmp
jnp
iret
cmp
mov
inc
and
mov
pop
xor
cmp
add
mov
aas
jl
pop
lock
insb
movb
xlat
pop
push
sarb
lock
cmovo
mov
pusha
and
repz
jo
xor
mov
dec
adc
in
stos
mov
adc
add
loopne
xor
out
jns
outsb
xor
repz
hlt
push
and
push
jbe
mov
insb
cltd
cmp
loop
push
xorb
jno
mov
cltd
cmp
dec
mov
imul
mov
mov
push
jae
add
negb
test
fcoms
cmpsb
aad
hlt
add
inc
lock
sub
out
jb
ljmp
imul
jl
loop
out
add
sar
or
test
xor
fwait
push
andb
inc
loopne
inc
lcall
mov
repz
xchg
jb
arpl
inc
adcl
fsubrs
add
mov
in
ja
pop
shlb
in
jns
mov
adc
xor
jmp
mov
scas
daa
jns
xor
jl
mov
int3
sub
push
scas
cmp
push
mull
inc
repnz
fidivs
out
pop
stc
and
mov
jns
imul
push
mov
mov
adc
and
sub
xchg
loopne
add
lds
loope
rolb
or
sub
xchg
stos
xchg
pop
icebp
dec
shll
push
fidivrs
mov
jae
loopne
cwtl
mov
mov
repz
inc
sub
fs
push
outsl
push
outsb
and
ja
enter
sub
pop
outsl
mov
jb
shr
dec
xor
hlt
inc
fisubrl
addr16
icebp
xchg
push
push
dec
fcoms
hlt
adcl
insl
xchg
lea
mov
ja
jle
imul
mov
test
in
push
cmp
enter
in
daa
imul
mov
inc
loop
jnp
cli
add
repz
clc
push
push
roll
cmp
xor
push
jb
jp
loope
jb
cltd
aas
loope
push
lock
in
adc
mov
inc
xor
xor
movsb
adc
jno
inc
push
cmc
pop
sub
mov
push
hlt
jne
jbe
push
add
xchg
mov
push
in
sbb
lock
call
xchg
cmp
sub
add
inc
lock
xlat
movl
cmpsl
out
call
jns
adc
cs
jae
mov
ret
addr16
testl
cmp
mov
cltd
fldl
mov
dec
or
pusha
out
xorl
xchg
xchg
and
pusha
jns
mov
push
call
jle
fsub
add
lock
sahf
push
inc
xchg
mov
lock
mov
call
mov
add
clc
cmpsl
xor
mov
xchg
mov
fs
insl
lods
lea
dec
jae
fdivs
fldenv
loop
dec
cmp
inc
xchg
lock
pop
clc
dec
dec
aam
out
mov
ficoms
rclb
inc
push
cmc
mov
add
jae
jl
sub
insl
int
push
sub
adc
and
mov
pusha
push
xor
add
imul
call
mov
pushf
jbe
push
adc
sub
or
in
pop
loope
sub
imul
sub
jle
icebp
add
push
bnd
icebp
call
imul
jbe
xchg
rcl
mov
movsb
cltd
add
imul
jo
pop
stos
pop
push
dec
xchg
add
out
mov
fcoml
inc
jg
out
test
mov
pop
stc
addb
mov
inc
mov
in
pop
dec
pop
xchg
aas
mov
shr
jae
aad
jge
inc
mov
fwait
push
xchg
imull
lods
sbb
dec
loopne
inc
xor
jae
jo
xor
sub
pmaxsw
lahf
jb
dec
xchg
xchg
push
nop
subb
testb
cmp
insb
and
call
loop
test
stc
push
out
mov
daa
sub
mov
push
mov
cli
mov
incb
add
mov
adc
jns
nop
outsb
test
clc
and
into
imul
xchg
xchg
jo
cs
xchg
or
sbb
imul
stos
sub
xor
adc
lods
jns
cmp
clc
cld
adc
scas
nop
cmp
jb
pop
inc
outsl
insl
cld
xchg
mov
aad
lahf
mov
lds
xor
add
jno
jg
fsts
push
mov
shlb
mov
and
cli
lds
jo
add
and
mov
pop
sub
sub
je
fs
sbb
sbb
pop
jns
call
mov
and
stos
xchg
push
jmp
out
inc
mov
xlat
jo
xchg
jge
pop
jg
clc
jb
push
push
daa
and
xchg
jno
outsb
xchg
repnz
mov
pop
lock
adcb
imull
push
shrb
sbb
hlt
mov
nop
pop
push
and
push
daa
imul
jmp
push
pop
xchg
rclb
add
xor
les
out
jge
cld
lods
cld
jnp
xchg
push
adc
enter
add
out
imul
add
shlb
jb
call
cmp
outsb
test
movsl
out
jge,pt
and
out
dec
call
movsb
mov
gs
inc
jl
cmp
mov
inc
pusha
push
std
add
sub
repz
push
push
cltd
daa
push
jmp
mov
or
enter
pop
jg
hlt
pop
pop
inc
in
dec
ja
and
hlt
cmp
mov
loopne
inc
jle
dec
jle
or
pop
dec
fisubrs
in
xor
outsl
movsl
adc
jg
adc
xchg
cs
cwtl
test
sub
or
dec
out
jb
mov
bnd
in
xor
rcrl
loop
icebp
adc
stos
ja
mov
shll
inc
mov
call
or
insb
pop
jae
scas
sbb
push
call
sub
rolb
outsl
inc
pushf
jmp
out
cld
cmc
fistps
out
dec
jbe
lds
and
lds
jbe
inc
mov
xor
movsl
add
add
nop
pop
stos
sbb
mov
pusha
outsl
adc
adc
sub
enter
xchg
loope
ja
xor
loopne
sub
xor
sbb
loope
lahf
pop
ljmp
pop
in
push
sub
test
push
out
scas
imul
loope
push
push
clc
test
adc
sbb
les
mov
jp
xorl
push
mov
and
cld
mov
inc
outsb
insb
jo
rol
rorl
sbb
pushf
xchg
pop
nop
jns
scas
ret
aaa
insl
push
push
rcl
xchg
add
adc
cmp
cltd
mov
adc
cmp
inc
dec
in
xor
push
jo
jbe
outsb
icebp
pop
imul
js
addl
mov
aas
mov
sub
in
outsl
adc
fstpt
mov
ljmp
iret
iret
imul
adc
or
bound
xchg
and
pushl
xchg
mov
jns
inc
ret
xchg
lea
shrb
cmp
adcl
mov
pop
movsl
sahf
out
sub
add
adc
aaa
xorl
repz
in
shr
clc
mov
adc
andl
insb
adc
dec
pushf
xor
stc
pusha
lret
cmp
leave
mov
fbstp
fldl
add
sbb
lods
mov
xchg
jp
loope
add
jae
test
repz
and
jo
in
cli
jno
lods
dec
shr
push
pop
sbb
mov
inc
stos
insb
cmc
pop
or
ja
jbe
sub
sti
mov
adc
push
out
add
pop
bnd
sbb
in
xchg
in
in
add
and
in
adc
jbe
outsl
out
loope
inc
out
cmp
mov
dec
in
cli
scas
inc
adc
add
rcl
insl
mov
je
popf
mov
out
cs
sbb
gs
pop
or
test
lcall
pop
adc
addb
repz
in
jb
jae
xchg
xorb
dec
loopne
mov
call
cmc
adc
out
jge
pusha
inc
cmc
adc
mov
inc
sub
inc
mov
sbb
enter
out
cmpsb
add
mov
jns
cltd
and
and
insl
mov
inc
lret
adcl
mov
dec
lret
push
fmull
loopne
pusha
mov
movb
loope
das
add
sub
int3
insb
roll
test
push
test
xchg
jae
pop
jo
push
in
ja
push
jp
jmp
and
out
jge
pop
pushf
jp
push
add
pusha
xor
outsl
pop
xchg
aas
sbb
mov
test
sbb
adc
pop
jle
xor
orl
sub
test
mov
xor
or
and
mov
icebp
mov
xchg
jp
in
loopne
push
fs
movsb
out
subb
pop
call
add
bound
pusha
jno
lds
xor
dec
pop
or
addl
out
push
jmp
int
addl
outsl
daa
out
mov
jle
hlt
cwtl
push
mov
jg
xor
shlb
pop
mov
cmpsb
mov
pop
xchg
insl
scas
insl
cmp
mov
adc
int
ret
scas
int
mov
and
and
lds
sub
push
bnd
xor
cmp
jo
xor
jbe
xchg
mov
out
add
push
pusha
xor
int
cmpb
push
dec
add
in
mov
popf
outsb
adc
inc
adc
xchg
dec
mov
mov
mov
mov
inc
lret
sub
jb
pop
jl
orb
cs
fists
hlt
outsb
clc
push
or
mov
lcall
insb
stos
and
mov
push
aam
int3
mov
mov
data16
jno
and
mov
test
jo
stos
shlb
jge
iret
aad
stc
imul
mov
jge
stos
dec
movsb
ds
mov
lods
icebp
xchg
fidivl
pop
mov
clc
repnz
and
dec
jae
aad
sbb
std
xor
stos
hlt
stc
loopne
and
adc
ja
xchg
adc
test
jno
push
jns
imul
dec
aaa
xor
cld
lock
adc
sbb
ret
addb
repnz
adc
cmc
ja
xor
fdivl
stc
push
sbb
xor
xchg
leave
mov
adc
loopne
mov
add
xlat
and
outsb
mov
xor
pusha
mov
or
test
in
daa
icebp
xor
mov
mov
jae
mov
jno
sub
jns
cmc
shr
xor
or
adc
mov
nop
das
xor
jbe
push
sub
mov
jb
nop
xor
push
push
adc
pop
mov
xchg
pop
add
in
jno
push
xor
imul
push
mov
xchg
jno
aam
sti
xor
out
fwait
mov
cmp
js
in
hlt
inc
addl
mov
out
fldt
xchg
hlt
decb
testb
mov
jb
jne
mov
mov
rol
adc
jne
mov
pop
mov
jb
call
movl
push
incl
jne
jne
out
sbb
loopne
sub
test
hlt
movl
out
xchg
popa
and
xchg
das
fwait
rclb
mov
push
in
xchg
repz
stos
sbb
jae
mov
add
call
dec
lods
std
add
xchg
inc
test
or
adc
insb
xchg
xchg
add
pop
jl
imul
clc
mov
ja
out
and
mov
dec
push
jae
xchg
push
cmc
outsl
inc
xor
or
fildl
sbb
sub
data16
pusha
ret
mov
fucomp
jp
mov
sbb
xor
jmp
pop
pop
and
lods
xor
xchg
ja
fwait
xchg
jbe
leave
adc
loope
hlt
outsl
pusha
rsm
out
rorl
ljmp
cmc
dec
shrb
lahf
mov
mov
jge
gs
or
mov
ja
adc
add
adc
push
mov
cmc
inc
test
ds
cmp
loope
ja
enter
scas
imul
jg
mov
and
push
stc
mov
push
stc
xor
push
dec
xchg
mov
push
test
pusha
int
jnp
hlt
loop
imul
add
in
clc
mov
adc
and
sbb
jno
outsb
adc
push
push
add
idiv
add
inc
mov
test
xchg
cmp
scas
cmp
push
out
orl
adc
jo
testl
sarb
jno
lcall
jecxz
outsb
sbb
imulb
in
xor
xchg
das
loopne
lods
jo
or
mov
inc
mov
dec
daa
pop
rclb
cmc
xchg
add
arpl
subl
fdivrs
outsl
in
inc
je
jg
insl
pop
lods
cltd
popf
lock
cmp
sub
pop
jns
xor
xor
mov
stos
out
adc
push
mov
xor
leave
xor
push
pop
inc
gs
das
sbbb
ja
negb
sub
dec
jge
jbe
sbb
jno
inc
mov
push
jp
adc
mov
or
cli
xchg
shll
add
cld
pop
sbb
rclb
fbld
je
mov
imul
stc
shl
xchg
int
dec
add
xchg
mov
mov
call
push
dec
jmp
fidivs
nop
sub
inc
push
inc
xor
or
xchg
idivl
pusha
outsb
cmp
adc
lea
dec
jmp
adc
pop
les
hlt
jle
insb
mov
mov
xor
sub
xor
repnz
sbb
cmp
sub
mov
mov
add
adc
adc
shrb
or
jmp
and
add
shlb
lods
aad
idiv
add
mov
xor
call
inc
sbb
push
lods
add
push
push
out
sub
shll
sbb
in
fwait
xchg
or
call
outsb
call
popa
and
and
imul
in
pop
in
fs
out
mov
and
nop
add
inc
cltd
insb
sbb
inc
add
clc
int
addb
nop
dec
adc
jge
xor
out
xorl
cmpb
mov
jne
mov
fimull
hlt
or
test
mov
mov
push
sbb
ds
rclb
push
jo
sti
icebp
daa
xor
ja
fwait
shrb
call
push
inc
inc
xlat
cmp
jmp
mov
mov
flds
sub
mov
mov
sbb
add
das
shrb
scas
repz
outsb
xchg
pop
push
add
out
cmpsb
xchg
and
mov
scas
inc
aad
push
push
repnz
sti
ljmp
fsubl
stos
pop
shrl
mov
adc
into
push
mov
dec
dec
lock
pop
sbb
jp
xor
hlt
inc
cmp
mov
add
sarl
lea
gs
pop
out
sub
jns
flds
xor
adc
xchg
jb
pop
push
or
popf
add
cmp
nop
dec
cmc
daa
out
xchg
push
in
loop
insl
mov
nop
call
addl
pop
repz
add
adc
ja
std
jle
shl
mov
sbb
das
jbe
clc
inc
pop
sbb
in
inc
fyl2x
adc
xchg
stos
inc
add
sub
dec
add
test
jns
jo
sub
and
addb
call
ja
xor
jo
insb
test
shll
jno
jl
in
testb
xorl
mov
mov
pop
jno
orb
imul
pusha
sbb
aad
repz
in
cmp
popf
mov
jo
cmp
push
dec
lds
mov
cmc
pop
out
dec
loopne
icebp
jae
in
xor
xchg
mov
bound
push
loope
cmp
jno
mov
jnp
adc
mov
shr
mov
inc
lcall
es
das
sub
rcrl
nop
cwtl
add
xchg
xchg
cld
dec
scas
push
pop
lods
pop
icebp
mov
fmuls
push
int3
pop
fsub
andl
mov
add
mov
cmp
insl
cmp
xor
adc
add
or
add
in
sbb
std
pop
pop
pop
and
xor
loope
jmp
out
sub
pop
xchg
repnz
mul
push
les
xor
add
mov
add
mov
xor
xchg
movsl
add
inc
jg
jge
call
mov
out
movsl
outsl
aaa
push
rcl
stos
inc
and
xorb
gs
xchg
adc
pop
sub
nopl
clc
mov
mov
xchg
xor
repnz
mov
sub
bnd
xchg
ja
push
xchg
sahf
xlat
or
shrl
or
jo
lret
enter
jmp
mov
push
mov
sub
mov
sub
xor
clc
adc
and
fidivs
sub
dec
dec
into
inc
pop
xchg
cmp
rcll
imul
in
xor
rcl
adc
repz
xchg
inc
shrl
insb
sbbb
mov
push
xchg
outsb
in
mov
jb
fstp
xor
sub
sub
testb
loope
icebp
jns
js,pn
mov
jne
movsl
mov
test
push
icebp
ljmp
in
cmpsl
imul
xchg
lods
pop
cmp
repz
call
push
ret
adc
dec
aas
push
repz
cmpsl
cltd
out
mov
and
inc
ss
jb
jecxz
pop
int
fdiv
push
jb
dec
sbb
shrl
push
mov
push
push
test
ficompl
sub
out
ret
addl
and
pop
daa
out
addr16
push
xchg
sbb
adc
cmpl
xchg
sbb
ffree
jmp
mov
pop
xor
jb
ja
outsb
pop
xorb
jae
xchg
insl
arpl
xlat
hlt
pop
push
adc
in
shrl
and
mov
call
movsl
arpl
ljmp
add
inc
call
dec
nop
inc
in
movsb
mov
mov
stos
mov
xorl
rcll
mov
mov
or
outsb
arpl
rolb
arpl
repnz
inc
inc
pop
mov
push
stos
fs
add
or
xor
jmp
jle
jo
cld
xor
imul
gs
pop
nop
inc
push
mov
ja
mov
loope
notl
sbbl
mov
fimull
inc
cmp
lret
outsl
stos
add
mov
les
xchg
stc
sbb
repz
clc
xor
cltd
mov
ja
test
xor
lock
cmp
cmc
lahf
pop
mov
cltd
scas
out
cli
cmp
pop
cs
mov
xchg
xchg
mov
jae
int
and
test
imul
in
in
test
out
mov
sbb
or
scas
jl
popf
add
mov
xorl
ret
movsl
mov
lods
insb
jns
stc
mov
xchg
aad
mov
add
push
ret
cmpb
sbb
sbb
xchg
pop
push
imul
or
adc
mov
adc
xchg
shll
push
in
mov
push
stos
xor
jne
loop,pt
shlb
xor
popf
push
xchg
or
lock
pop
add
ret
mov
fwait
aas
lods
push
repz
inc
in
jo
loopne
bnd
pop
and
aam
xchg
daa
sub
xchg
int
mov
sbb
add
sbb
cmp
out
std
pusha
xor
pop
and
inc
add
repnz
adc
jmp
sub
loope
data16
popa
aas
aad
mov
mov
jb
push
adc
insl
jbe
popf
cmc
rolb
xor
lods
popa
lock
call
push
lret
cld
or
push
jge
loope
adc
adc
mov
imul
nop
sub
mov
aas
push
cmp
cmp
xor
hlt
jnp
push
orw
daa
push
pop
or
call
add
pushl
inc
popa
cmpl
jmp
nop
dec
mov
imull
decb
movb
push
jmp
aas
aad
test
pop
xorl
xchg
repz
adc
xor
or
ds
mov
add
xor
sub
mov
sbb
hlt
xchg
into
in
outsl
cli
aas
testl
xchg
hlt
add
dec
int
ja
leave
jge
xchg
jb
xor
jb
scas
in
lahf
fs
ss
dec
mov
xchg
cmp
push
add
pop
cmc
js
xor
or
imul
jnp
xor
cld
xchg
test
adc
repz
cmpsl
out
popf
mov
popa
pusha
outsl
dec
jmp
xchg
sub
bound
jmp
xlat
adc
jnp
in
notl
hlt
xchg
push
or
jmp
outsl
and
into
lcall
mov
pop
std
adc
dec
mov
jns
out
jo
das
nop
stos
cmp
in
xor
repz
xchg
push
mov
add
icebp
or
pop
cltd
push
in
dec
out
push
cli
mov
add
cmpsb
imul
shlb
icebp
sub
sti
inc
jo
in
sbbb
lods
in
es
inc
xchg
mov
jae
test
cmpsl
lods
jns
sti
negl
xor
les
imul
aad
mov
andb
arpl
movsb
or
dec
lock
rorb
pop
dec
insb
mov
mov
outsl
fsubs
jecxz
das
adc
aam
std
lods
lea
xor
adc
test
loopne
aaa
out
lods
xchg
mov
out
add
and
xor
xor
jb
jbe
inc
inc
sarb
daa
outsb
out
add
mov
nop
fcoml
push
jge
fiaddl
or
ja
dec
or
fcoml
add
mov
loope
mov
adc
in
jns
mov
sub
andl
jno
inc
pop
test
jo
push
xor
xchg
andb
sbb
sahf
add
inc
push
pop
sub
push
xchg
loopne
xlat
scas
jmp
outsl
fsubrs
push
push
iret
or
mov
xor
pop
inc
adc
pop
adc
fsubrs
fwait
repz
sub
inc
outsl
cld
iret
xor
add
or
lret
test
mov
insb
int
add
jmp
push
mov
fisubs
xor
cmp
pop
or
in
jnp
push
lock
or
mov
xchg
mov
nop
sbb
push
jo
ss
ja
mov
jns
stc
jg
adc
imulb
adc
gs
or
mov
xor
jbe
testb
les
sub
jae
push
push
dec
mov
pop
mov
es
jge
xor
push
xor
scas
out
bound
out
xor
mov
push
pop
jne
add
fidivrl
inc
outsl
cmp
stos
std
add
iret
sahf
cmp
adc
fistpll
jns
jo
cmp
add
push
out
cld
and
adc
jo
inc
cltd
leave
mov
mov
mov
les
xor
push
int3
xchg
push
add
mov
adc
cmp
aas
inc
xchg
ja
xor
inc
shrb
or
inc
add
jp
insl
pop
repz
xchg
sub
sbbl
fstpt
add
pop
iret
lock
xchg
test
lods
inc
repz
jg
xchg
outsl
xor
ljmp
mov
sbb
inc
mov
cmc
push
add
add
sub
or
jmp
nop
pop
insb
sub
push
sub
xlat
adc
lahf
mov
and
adcb
and
push
stc
popf
xchg
loop
sub
sub
insl
lea
popl
sub
clc
mov
push
mov
push
inc
sbb
xchg
faddp
out
leave
rclb
push
mov
loope
scas
sbb
jb
sub
sbb
adc
cs
push
ja
pop
imul
repnz
or
insl
in
cs
cld
fcmovb
add
adc
add
xor
adc
sub
jno
inc
jmp
aad
mov
cmc
stos
mov
clc
push
mov
cltd
je
cmp
hlt
sub
enter
inc
add
mov
xor
add
test
arpl
mov
add
scas
xchg
test
or
roll
add
das
mov
mov
add
hlt
adc
dec
les
xor
jl
xchg
push
mov
adc
push
movsl
cwtl
and
addl
es
les
xchg
add
inc
out
ficomps
shr
and
inc
inc
or
xor
adc
pop
jns
xorb
jo
xchg
daa
or
divb
dec
fimull
stos
cmp
insb
sub
fldl
fsubrs
xchg
subb
fidivrs
push
es
rolb
xor
push
xchg
push
cmc
mov
inc
mov
shll
dec
and
lcall
mov
ret
in
xlat
xor
jae
repnz
ja
mov
sub
or
lock
outsl
or
mov
fwait
cmc
jae
dec
pushf
or
call
mov
subl
and
push
rcrb
add
and
outsb
inc
and
inc
inc
jle
pop
mov
sub
loope
sub
clc
outsl
ret
popf
xor
mov
xchg
repnz
repz
mov
imul
imul
push
pushf
dec
lods
push
dec
add
rep
xchg
sbb
fs
mov
xchg
or
dec
add
mov
pavgb
test
repz
sub
jp
call
call
jmp
int
mov
mov
push
sub
int
push
and
shrb
xchg
and
push
out
mov
popa
inc
pop
dec
mov
rorl
divl
mov
inc
jno
jecxz
scas
sub
divb
out
adc
test
insl
dec
or
inc
xor
dec
push
jns
test
outsl
sub
mov
pop
aaa
xchg
mov
scas
jbe
inc
inc
lock
push
scas
xchg
pop
cmc
mov
aas
mov
push
arpl
xor
jecxz
push
in
in
pop
fsts
sbb
adc
mov
and
mov
sub
jae
adc
je
sbb
das
xchg
mov
add
imulb
cld
jnp
das
test
mov
out
fistl
dec
inc
fistpll
jnp
leave
inc
insb
xor
insl
and
xchg
xchg
ja
adc
call
ret
js
popf
sub
pop
dec
cs
lods
aam
push
in
cs
lods
pop
fwait
ja
mov
out
lss
mov
xlat
subb
into
xchg
aas
stc
incb
shl
add
in
popa
dec
bound
push
pop
js
popf
cmc
jle
shrb
pushf
cmpsb
in
sbb
xor
lcall
andl
pop
cmpsl
shlb
lods
insl
mov
bound
add
add
popf
mov
daa
lea
mov
cmp
addr16
xchg
fnstsw
jns
cs
xor
rolb
xor
mov
testl
xor
push
adc
adc
cwtl
mov
and
add
mov
mov
xor
jbe
or
test
or
mov
pop
pop
xor
inc
into
inc
cltd
fwait
push
pop
jge
inc
dec
popa
mov
push
xorb
pop
xchg
add
xchg
in
test
xor
jno
jl
cs
dec
scas
flds
inc
sbb
or
mov
sub
mov
sbb
je
jns
add
and
call
cmp
movsb
cltd
mov
lods
jge
pop
jae
rcll
es
loop
sbb
xor
pop
sub
inc
mov
add
gs
fcoms
jo
push
mov
fcmove
adc
movsl
lock
fsubrs
sbb
or
push
and
mov
mov
inc
adc
inc
shlb
dec
aaa
or
les
ja
inc
mov
cmp
mov
dec
out
in
movsl
fcmove
mov
cmp
dec
push
adc
push
sub
out
mov
ljmp
push
sbb
imul
mov
out
xor
ja
xchg
push
and
shrl
in
pop
jg
adcl
or
mov
mov
jne
ss
stc
jo
and
xchg
xorb
xchg
stos
cmp
daa
outsl
sub
mov
or
pop
in
sub
push
cmp
scas
les
jg
sub
inc
xchg
push
pshufw
imul
imul
xchg
mov
adc
ljmp
sahf
and
jmp
push
sbb
push
adc
sub
pushl
rcll
cmpsb
sar
push
push
repnz
repnz
sbb
scas
or
pop
push
js
xor
push
mov
pop
add
ss
pop
outsl
and
push
push
mov
dec
mov
push
mov
mov
les
or
iret
adc
pop
xchg
adcb
popf
xchg
or
mov
std
stos
lock
mov
shrl
frstor
mov
pop
xchg
out
mov
icebp
mov
movsb
mov
or
lock
out
push
cmc
ja
push
loopne
jecxz
cld
stos
jle
adc
lcall
adc
xchg
shrb
popa
arpl
mov
mov
jbe
mov
gs
fdivr
imul
sbb
and
xor
mov
jnp
imul
inc
push
nop
cli
jno
push
mov
int
ss
lods
mov
xchg
sub
push
or
mov
add
shlb
push
pop
xor
aam
jle
inc
test
in
mov
ret
mov
mov
xor
push
or
add
xlat
out
ds
or
subl
or
popa
insb
fldenv
insl
ds
pop
pop
clc
inc
in
sub
jne
out
xchg
test
mov
push
sub
xchg
xor
xchg
loopne
in
adc
adc
ficoms
adc
xor
mov
icebp
and
popf
or
inc
jle
dec
std
add
mov
mov
stos
dec
sub
xchg
cmp
cmp
hlt
and
push
add
int
sub
mov
nop
outsl
sub
shrb
xchg
insb
pop
dec
push
jbe
call
pop
cwtl
pushf
add
jb
into
imul
je
jbe
and
icebp
lea
and
andb
call
cmp
insl
push
loopne
inc
jb
xchg
pop
pop
rorb
mov
scas
stos
les
mov
sbb
aad
mov
ja
js
push
pop
testb
sub
insb
adc
int3
loope
cmc
xor
test
or
andl
cmpsb
push
pop
insl
orl
dec
aaa
scas
in
add
sbb
jge
jp
sbb
ja
jo
fmuls
add
xchg
rcrl
xchg
sbb
dec
mov
addr16
add
dec
dec
sub
sub
jbe
rcll
mulb
and
mov
ja
dec
popa
test
outsl
add
mov
ja
aam
pop
jb
mov
fwait
test
rorb
push
jo
xchg
je
aam
repz
push
shr
adc
adc
mov
or
jne
adc
jl
notrack
mov
xchg
test
or
inc
call
xor
mov
jbe
cmc
jg
popf
aam
roll
shr
cld
andl
popa
xchg
pop
add
cmp
push
movsl
mov
mov
into
into
xchg
imul
jge
fsts
outsl
mov
xchg
arpl
dec
pop
loope
sbb
or
and
pop
gs
and
test
jle
repz
adc
push
sbb
test
stc
push
lods
imul
cwtl
nop
and
xor
lahf
mov
mov
sub
icebp
xchg
test
xor
addb
push
sbb
cmpsb
mov
jae
sub
push
lock
jecxz
add
das
adc
mov
mov
push
add
mov
test
mov
fidivs
jno
aad
ret
je
add
xchg
insb
and
adc
les
imul
sub
mov
ljmp
imul
push
fs
jae
jmp
add
orb
insl
or
xorl
ja
fldl
ljmp
mov
mov
imul
aaa
adc
push
lret
mov
ja
popl
pushf
repz
mov
enter
hlt
mov
sbb
outsl
adc
bound
push
pusha
ja
sbb
hlt
ds
add
fdivrs
outsl
loop
inc
fmull
jge
lods
popf
xchg
sub
movsb
cmpsl
push
add
popf
pusha
or
push
ljmp
cld
dec
cli
out
dec
aad
arpl
sbb
push
pop
lcall
jns
call
jmp
int3
clc
out
cltd
addl
loope
cmp
insb
xor
dec
and
leave
lock
cmp
pop
ret
push
out
xor
lea
push
push
cmp
dec
pusha
sarb
pop
jns
sub
nop
sbb
ja
mov
push
outsl
push
outsb
cli
std
xchg
lahf
sub
or
mov
cmp
sub
xor
push
pxor
popa
outsl
loopne
adc
mov
fwait
cmp
or
jae
jne
shl
mov
or
xchg
mov
or
cmc
mov
ja
outsl
loopew
loopne
xchg
dec
repnz
notl
xchg
xor
fwait
addl
fdivrp
outsb
repz
test
or
jp
dec
jmp
faddp
adc
adc
xor
pop
lea
push
jl
inc
jmp
ja
andl
sub
add
or
imul
cmpsl
std
in
bound
sahf
jp
and
jnp
adc
popa
out
or
ja
push
mov
pop
mov
mov
ljmp
ret
and
int3
jns
out
xchg
push
sbb
ret
jg
xor
or
hlt
dec
hlt
testb
cmp
mov
mov
fld
ror
lock
cltd
dec
mov
das
jg
mov
jge
int
lret
inc
adc
popa
out
or
es
adc
mov
call
mov
push
xchg
dec
adc
mov
or
insl
adc
jne
in
push
hlt
or
loop
cld
xchg
push
jns
jne
out
call
stos
cmp
cmp
dec
push
jmp
imul
hlt
xacquire
in
push
outsl
adc
dec
add
ja
in
xor
mov
mov
dec
mov
xchg
out
mov
loopne
imulb
mov
fistl
sbb
test
cmp
andb
ret
hlt
mov
pushf
jns
add
rclb
int3
jns
repz
testb
jae
sub
out
fsubr
ja
dec
and
jmp
adc
xor
insl
ja
mov
pushf
imul
add
fdivs
sub
test
xchg
adc
sahf
ss
mov
jns
div
jmp
jbe
xor
shrb
jno
cwtl
fcomps
movsl
sbb
xchg
and
add
mov
xor
icebp
insl
sti
inc
sti
xchg
sub
aam
xchg
aad
jbe
pop
mov
push
insb
shlb
movsl
loop
or
sbb
shl
push
adc
imul
and
icebp
or
lods
sti
fimuls
cmc
dec
inc
filds
dec
daa
lcall
movsb
sub
xor
icebp
call
adc
mov
mov
cmc
and
pop
dec
add
dec
sbb
xchg
push
lock
bound
adc
cmc
in
xchg
xor
sub
test
js
add
sub
xchg
dec
popa
mov
sub
jne
jl
jmp
sub
jo
repnz
aas
sbb
or
mov
test
shlb
sub
pop
cli
or
shll
jmp
xor
push
insb
clc
ret
ds
in
pop
add
mov
mov
imul
xchg
dec
xlat
out
cmp
cmp
sbb
jle
or
into
int
pop
sbb
mov
cmp
xor
leave
and
adc
push
scas
stc
add
out
outsl
push
adc
loope
outsb
mov
iret
in
pop
in
push
mov
arpl
xchg
movsb
pushf
nop
sahf
cmp
adc
ja
loope
loope
adc
xor
out
push
xor
aas
xchg
cmp
mov
nop
imul
clc
xor
xchg
adc
ja
loop
aas
in
jae
call
out
sbb
lret
ljmp
in
pop
bextr
je
dec
xchg
mov
imul
lock
clc
add
cwtl
test
testl
hlt
rclb
dec
or
rcll
outsb
fsubs
inc
pop
aam
dec
push
lret
mov
mov
mov
push
mov
in
pop
mov
push
stos
pop
push
adc
push
mov
xor
jno
insl
sub
mov
dec
xchg
int3
push
movsb
push
ljmp
outsl
sub
push
mov
adc
stos
adc
fucomi
out
aad
sub
ficoml
xchg
in
dec
push
sahf
loop
das
sbb
xor
out
sub
push
pusha
xor
push
leave
cltd
jo
lea
orl
sub
sub
loope
ja
pop
call
adc
jne
addr16
ljmp
mov
out
movsb
cmp
inc
adc
ja
cli
fcmove
andb
and
orb
outsb
test
into
fcmovne
inc
add
movsb
sub
add
and
jns
xchg
sbb
pop
das
scas
test
sub
test
call
cmc
sub
jmp
repz
xchg
in
shrb
jnp
in
push
adc
out
jo
roll
stc
or
jle
test
ja
pop
xchg
mov
dec
mov
sbb
not
stos
xchg
bound
cmpsb
into
sbb
test
rcll
inc
fsubs
int
jb
xchg
sub
push
mov
bound
mov
xor
loope
and
loope
push
stos
push
push
sbb
jnp
add
lods
push
pop
push
into
jno
and
inc
mov
adc
in
lods
je
add
loope
fnstsw
fsubrs
jge
lea
ja
push
mov
shrb
dec
in
lahf
popf
add
adc
fwait
inc
fcoml
push
mov
xor
mov
push
cmp
cmp
inc
ffree
cmp
xchg
adc
in
or
pop
test
scas
xor
xchg
sub
mov
lcall
xchg
inc
add
xchg
pop
adc
cmp
xchg
push
fiaddl
imul
add
outsb
popf
inc
clc
mov
jo
cmp
xchg
add
fadd
cld
popa
iret
call
loop
adc
sbb
jno
call
ss
inc
leave
inc
js
pop
cmc
pop
adc
pop
fidivl
mov
lods
int3
cld
xchg
pop
xchg
insb
arpl
rclb
ret
mov
jbe
test
push
les
jno,pt
xor
lret
push
aad
sub
push
mov
cli
cmpsl
loop
and
mov
addl
sbb
lret
xor
cmp
inc
adc
mov
out
lcall
and
adc
push
lcall
pop
xor
in
adc
bound
out
stos
inc
mov
push
loop
out
call
enter
sub
cmp
mov
inc
outsl
je
pop
nop
xor
stos
xor
fdivp
xor
in
outsl
pop
nop
pop
sbb
in
dec
push
push
das
jg
mov
adc
xchg
ficoms
dec
lods
sti
add
scas
mov
aas
std
inc
shlb
in
or
sbb
jbe
hlt
pop
out
sti
sarb
enter
sbb
push
jecxz
lods
repz
shl
jae
ja
dec
inc
xchg
insb
test
add
xor
adc
cmp
in
push
xor
in
adc
push
and
mov
pop
and
lods
inc
and
inc
shll
adc
push
pusha
repnz
adc
outsl
push
call
ja
aaa
ja
outsl
fwait
push
movsb
imul
jmp
push
outsl
cmp
and
pop
jmp
and
add
add
fs
movsl
icebp
movsb
maxps
jne
mov
cmpsl
popf
lret
punpckhdq
xchg
stos
repz
cmpsl
xor
inc
inc
jb
out
push
icebp
xchg
xchg
jp
divl
push
out
xchg
iret
ja
cli
int3
test
mov
xchg
stos
call
dec
cmp
push
jecxz
push
mulb
and
stos
pop
ja
sbbl
jo
sub
call
cmp
cltd
movsb
xchg
cltd
arpl
iret
xor
jne
into
cmp
jl
cmp
cld
sub
mov
outsl
nop
pop
insl
adc
ja
clc
mov
jmp
int3
mov
pop
stos
cmp
fs
inc
push
pop
ret
inc
fs
xor
out
jne
dec
int3
sub
pop
lahf
adc
xchg
adc
mov
pop
jae
cmp
into
repz
hlt
jge
lcall
mov
and
sbbb
pusha
popa
pop
aas
inc
popa
mov
or
lds
aam
push
enter
inc
xchg
outsb
call
mov
repz
in
arpl
in
inc
outsl
repnz
dec
lahf
cmp
inc
test
or
add
and
test
andl
lret
mov
sub
inc
adc
inc
outsb
lods
mov
faddl
movsb
adc
xlat
ffreep
add
mov
mov
cltd
in
sbb
fsts
insb
stos
adc
push
mov
loopne,pn
mov
fcmovb
data16
pop
adc
xchg
mov
je
in
sarb
mov
pop
stos
lahf
rcrl
or
push
bound
inc
or
or
shlb
in
xor
icebp
sbbl
clc
imul
mov
cmp
andl
jbe
sub
sub
xor
sbb
cld
in
xchg
adc
jbe
test
cmpsl
add
xlat
jne
call
jb
bound
inc
les
dec
data16
xlat
and
push
testb
test
adc
jbe
ja
pop
out
mov
add
lds
call
push
inc
pop
inc
out
xacquire
or
lods
dec
inc
daa
rorb
dec
in
inc
xor
or
mov
in
mov
adc
cmc
call
cltd
sbb
push
add
and
jno
jge
out
stc
mov
das
adc
into
subb
or
dec
into
cld
jecxz
out
push
xor
push
outsb
mov
inc
mov
mov
push
shlb
out
jle
pop
aad
rcrb
inc
inc
sti
push
adc
fwait
xchg
inc
xor
and
mov
test
and
jge
xchg
out
lds
rcll
rcl
call
and
xor
jmp
or
push
scas
cmp
sub
sub
fwait
adc
add
hlt
or
dec
add
jne
pop
push
mov
push
xchg
cmp
jo
dec
push
mov
cmpsl
dec
adc
lods
jb
and
ja
pop
outsb
pushf
imul
pop
dec
sub
and
addb
sub
lods
jp
int3
mov
into
pop
cmc
pop
sub
scas
sbb
movb
repz
hlt
div
jmp
mov
mov
mov
cmc
xlat
gs
addr16
jo
pop
inc
xchg
addb
imul
test
test
or
jg
pop
xor
mov
je
shrw
hlt
je
or
dec
dec
or
xchg
push
dec
adc
and
sbb
icebp
dec
push
xchg
xor
and
stos
roll
in
jmp
sahf
adc
or
add
push
mov
or
leave
adc
jno
xchg
mov
in
fs
jbe
outsl
test
push
jl
rcll
mov
add
pop
sub
xor
notl
xchg
adc
jecxz
xor
xor
adc
fs
loope
sub
xchg
cli
lock
lahf
xchg
test
mov
xchg
inc
add
in
dec
addb
push
push
sub
and
ret
or
lods
les
mov
lfs
cmp
jp
xor
insb
in
cmp
dec
inc
add
scas
xchg
adc
shll
jl
xor
inc
push
aam
push
adc
imulb
jl
dec
mov
lret
sub
ja
testl
call
push
popa
mov
mov
loopne
add
fsubrp
mov
and
stc
xor
ficoml
dec
adc
push
mov
int
test
push
xchg
pushl
in
add
aas
adc
sarb
jnp
xor
xchg
stc
gs
mov
adc
fstl
and
aaa
sub
ja
mov
add
xor
inc
adc
or
repz
jl
call
test
pop
mov
fldcw
sbb
in
imul
imul
rcll
out
les
xlat
mov
xchg
inc
fsubs
movsb
gs
jecxz
std
mull
filds
clc
addl
jns
mov
call
std
insb
adc
ja
add
inc
push
pop
pop
jbe
aam
negl
jmp
add
push
hlt
lea
scas
xchg
push
mov
cmp
sbb
das
mov
and
movsl
cmpl
aad
call
jmp
sbb
and
sbbb
cmp
push
jbe
adc
imul
mov
adc
ja
scas
dec
cmpb
in
sub
dec
ficoml
sbb
inc
addr16
sub
fs
push
and
repnz
sub
sbb
xor
loope
imul
add
sbbb
test
pop
and
call
mov
bound
add
cmp
xor
jb
sahf
xor
pusha
pop
adc
idivl
jne
xorl
dec
leave
rolb
movsb
repnz
inc
mov
xor
and
std
enter
dec
call
fcomps
sbb
outsl
mov
mov
or
push
mov
jns
call
push
xchg
cmp
sub
into
jmp
adc
mov
dec
ja
leave
sahf
int
xor
cld
cmp
cmp
push
shrl
add
addl
repz
jns
inc
imul
insb
xlat
adc
data16
mov
jge
sbb
test
xchg
inc
pop
testl
adc
adc
out
test
cmp
cmp
cmp
sub
scas
sub
fcmovbe
int
cmp
bound
in
iret
out
pop
adcl
addb
fisubs
add
sbb
inc
jge
hlt
jns
outsl
sub
dec
inc
call
jb
dec
xchg
sti
sbb
outsl
lea
add
loopne
jne
ja
aam
outsl
cli
jb
outsl
jmp
xor
out
outsl
push
int3
out
sub
out
xchg
inc
add
enter
dec
lods
outsl
xchg
lret
stos
ret
jns
adc
mov
outsl
dec
fbld
iret
push
pushf
xor
add
add
xchg
mov
or
add
xchg
mov
xchg
std
arpl
xor
xor
xor
mov
pop
push
jmp
dec
and
and
mov
jl
jmp
call
sub
icebp
xor
push
inc
imul
jns
repnz
repnz
insb
jl
push
insb
add
jb
or
sarl
add
insl
mov
dec
push
jae
push
xor
push
je
jno
movsb
insl
mov
or
dec
in
inc
iret
pop
stos
mov
imul
xor
mov
cmp
mov
repnz
or
js
je
lock
test
scas
mov
dec
jno
push
scas
in
fidivrl
sub
sub
jne
cmp
aas
mov
mov
in
icebp
shr
aad
in
cmpsb
call
xor
jno
or
aas
test
adc
insl
add
imul
insb
dec
mov
stos
in
call
stos
in
inc
ss
xor
xor
leave
scas
cld
sub
push
jge
sub
popf
popa
dec
test
jnp
jae
repz
jge
sub
cmc
dec
stos
std
xor
das
xor
xor
jb
fcoml
mov
push
xor
subl
test
in
lods
inc
or
xchg
in
jmp
jmp
or
lea
outsb
or
sub
in
cld
mov
push
push
and
cld
sub
inc
stos
cs
inc
divl
sub
test
test
xor
movsl
lock
in
cmp
ss
das
add
inc
insl
sub
out
jmp
jmp
repz
mov
cmc
xor
push
jmp
mov
mov
lret
cmp
insl
xor
lcall
push
icebp
add
mov
scas
subl
push
or
push
jno
mov
repnz
inc
js
or
stos
imul
repz
stc
dec
lret
or
lock
pop
xor
xor
call
xchg
movb
shlb
or
add
jb
stc
fisubl
pop
iret
sbb
and
loope
xchg
mov
pop
push
nop
mov
cld
sbb
sahf
stos
or
test
scas
js
jo
ja
xor
sbb
sbb
icebp
sti
inc
divb
lods
out
pop
sbb
cmp
test
jg
pop
mov
cmc
mov
es
xlat
shlb
mov
loope
sbb
push
fnstsw
xor
js
emms
sub
xlat
es
bound
jmp
sub
push
shll
call
pop
icebp
test
inc
sbb
pop
ja
adc
jae
mov
xchg
data16
pop
enter
xchg
rcll
into
mov
fldcw
jae
xchg
inc
into
orb
add
cmp
jno
loope
leave
pop
push
flds
xlat
pop
xchg
sub
mov
adc
and
lods
jmp
or
xor
lcall
jge
icebp
pop
mov
loope
xchg
add
adc
xorl
mov
in
or
xor
fs
adc
adc
push
mov
aaa
xchg
insb
faddl
cmpb
aad
jne
ficompl
pop
xor
xor
push
cmp
dec
mov
iret
xor
xchg
xchg
xor
bound
cmp
xchg
mov
aad
je
loop
mov
sbb
repnz
xchg
cs
inc
out
nop
push
xchg
and
sub
lcall
ficoms
neg
pop
mov
xor
fucompp
int3
jo
mov
out
ja
xchg
in
out
rclb
or
push
mov
lret
mov
inc
pop
clc
mov
and
xor
sarl
mov
inc
out
jb
les
add
mov
shl
xchg
xchg
dec
divb
xorl
aad
mov
ret
daa
jnp
sahf
push
xor
cs
jg
mull
dec
idivl
add
mov
or
push
sbb
sub
lahf
es
call
ljmp
les
jbe
adc
outsb
push
inc
sbb
add
add
clc
repnz
std
xor
testl
div
shrb
mov
add
and
xor
mov
push
pop
sar
gs
push
jo
sahf
orb
dec
xchg
mov
repz
dec
xchg
adc
mov
std
xchg
outsl
xchg
clc
mov
sub
add
add
xlat
xor
mov
shlb
xchg
mov
cmovle
pop
and
sbb
jnp
cmp
fidivrl
fwait
sub
xchg
shl
inc
jo
inc
xchg
add
add
sub
or
sub
inc
xorl
stos
adc
push
bound
icebp
test
popf
addr16
test
pop
call
jno
loope
hlt
ret
xchg
xor
addr16
jno
xchg
das
loope
mov
imul
mov
xor
mov
test
add
fnstsw
pusha
pop
icebp
aas
cmp
jne
push
loope
cmp
inc
and
lahf
jecxz
xchg
inc
std
sub
fucomip
outsl
repz
push
mov
jb
xchg
insl
sti
push
arpl
xchg
loope
dec
mov
inc
inc
push
xor
xor
or
fs
and
repz
test
cs
icebp
out
jecxz
in
cmp
sub
stos
pop
push
and
stos
inc
rep
adc
mov
mov
or
lods
sub
xchg
mov
sbb
sub
insl
sub
loope
cmp
fists
test
xor
or
jbe
icebp
xorb
sbb
push
leave
pop
lahf
inc
outsl
push
jnp
mov
adc
adc
sbb
dec
xchg
pop
arpl
and
lods
inc
outsl
inc
cmp
jb
xor
and
xchg
lea
mov
xor
int3
jno
notb
loopne,pn
into
outsl
shr
or
pop
lods
xchg
cmp
add
mov
adc
in
adc
bound
cld
jne
pushf
cmp
jp
sub
test
mov
fsqrt
insl
adc
push
out
jnp
loop
ja
repz
outsl
sbbb
mov
ja
add
imul
sbb
xchg
push
aas
mov
cmc
cmp
jns
gs
fadds
arpl
sub
icebp
sub
call
mov
icebp
push
sub
cmpsl
add
adc
repnz
jo
popf
inc
push
mov
jmp
pop
mov
lods
cmp
mov
lock
jmp
add
cmp
xchg
cmc
xchg
divl
movsb
pop
push
insb
push
inc
loope
out
call
push
adc
mov
lea
push
cld
scas
dec
outsb
ret
sub
and
mov
out
jp
adc
cmpsl
sahf
rcll
out
mov
arpl
jae
dec
loop
js
test
ja
daa
rorl
scas
mov
lods
lcall
popf
push
push
rol
xchg
pop
cmp
ja
inc
repz
cmc
pop
adc
stos
push
sub
cld
ss
xlat
loope
fists
int3
pop
sub
pushf
sub
in
sub
sbb
and
add
cmp
daa
or
pop
mov
sub
xor
sub
xor
fnsave
in
outsb
ds
inc
adc
in
and
hlt
in
jbe
mov
xchg
jns
mov
ja
insl
in
pop
fnstsw
test
sbb
sti
ret
mov
loope
cmc
fisttpll
jl
and
sbb
ds
add
outsb
gs
and
cmpb
hlt
push
inc
push
popf
xorb
mov
xor
xor
or
fsubrs
std
imul
lea
addr16
stos
ficoms
push
mov
pop
out
jmp
or
out
xchg
sbb
fistl
xchg
or
insl
stos
je
sub
neg
add
lcall
jl
push
jae
test
pop
pop
adc
in
cld
paddusw
mov
out
mov
pop
cld
dec
inc
xchg
adc
cmp
xor
and
hlt
aad
xchg
cmp
negb
loope
call
rolb
push
sub
adc
subb
xchg
pop
sub
jae
fisubrs
pop
dec
add
mov
push
inc
test
loop
push
xchg
add
out
out
outsl
into
push
dec
mov
add
add
lcall
adcb
pop
popf
ja
mul
fdivrp
lods
ficoml
xchg
adc
add
cmc
xchg
xor
rcrb
popf
mov
add
mov
jne
shr
sbb
sub
imul
add
xor
loop
adc
inc
and
or
inc
cwtl
mov
fptan
pop
pop
in
lods
dec
ss
xchg
push
mov
inc
ficompl
cmp
imul
into
dec
sbb
xchg
adc
sbb
inc
fcomp
adc
aad
inc
xor
cmp
enter
in
mov
data16
inc
push
jecxz
ss
clc
int
insl
or
dec
jmp
and
xlat
test
lea
cmp
fisttpll
ja
inc
jecxz
push
outsl
out
jecxz
jno
dec
and
push
add
loop
inc
and
jg
in
ja
sub
xlat
repnz
mov
mov
cltd
xor
enter
jecxz
xchg
mov
pop
gs
mov
insl
push
adc
jae
loopne
pop
int
jns
or
adc
push
sahf
or
bound
imul
test
ja
push
clc
jbe
sub
jmp
ljmp
fdivs
sub
dec
adc
shl
jo
fldl
out
sbb
mov
mov
in
movsl
xchg
push
sar
out
ss
fsub
sub
cltd
pop
adcl
xchg
jge
imul
dec
mov
xor
sub
add
mov
mov
outsl
shl
leave
dec
push
cltd
cmp
stc
adc
outsl
movb
scas
inc
lret
out
xor
fadds
pop
jbe
jns
or
xchg
adc
or
push
fistpll
xchg
sbb
or
imul
mov
dec
sti
and
inc
adc
test
mov
push
push
jnp
xor
push
or
push
adc
pop
aaa
push
in
call
cmpsb
mov
sub
jo
adc
adc
mov
inc
inc
xchg
shrl
pop
popf
add
or
fstpt
nop
shrb
sbb
ret
and
call
jb
jl
sbb
sub
jg
dec
sbb
mov
push
push
sbb
outsl
or
aad
out
adcl
cmp
test
stc
sbb
mov
mov
pop
mov
add
dec
insl
leave
scas
mov
cmp
ss
and
or
adc
ror
out
adc
or
xor
sbb
in
sbb
cld
test
pop
hlt
addl
sub
and
daa
loop
fiadds
xchg
repnz
xchg
adc
popa
and
mov
cmp
pusha
jae
test
in
mov
xchg
mov
inc
adc
out
jge
inc
pushf
ljmp
sahf
lret
adc
test
js
xor
outsl
cwtl
push
cmc
les
psrlw
mov
pop
mov
and
push
mov
jecxz
jbe
lods
mov
cvtps2pi
push
jecxz
std
pop
or
mov
out
or
adc
test
insl
add
gs
shll
sub
nop
mov
movsl
xlat
jae
and
jns
sbb
repz
inc
ja
pop
xchg
jns
aaa
jge
fidivl
or
call
sub
scas
sbb
insb
xchg
mov
mov
fwait
incb
lods
mov
jecxz
xor
or
popf
fisubrl
rolb
add
push
jp
push
push
mov
xor
add
daa
hlt
push
aad
addl
mov
jl
mov
aad
add
xchg
inc
pmaxsw
jns
fisubrl
lods
jle
leave
popa
adc
or
negb
sbb
sbb
es
pop
mov
movsb
sarl
xor
xor
rcrb
jae
adcl
sub
or
hlt
ud0
loop
ljmp
jo,pt
fmuls
mov
push
jmp
imul
popa
aad
jnp
call
cs
or
mov
add
inc
lea
push
jb
pop
push
cltd
adc
mov
fldt
adc
sbb
gs
add
enter
jge
into
insl
mov
lods
push
mov
bound
nop
inc
loop
addr16
xchg
insb
loope
bound
in
call
add
cli
add
daa
or
dec
xchg
clc
out
sbb
clc
and
pop
pop
jl
xchg
jns
lahf
cs
fiadds
cmc
call
pop
insb
sub
xchg
sub
adc
ja
and
lds
jbe
repnz
nop
lock
sbb
loope
xchg
loop
sub
jmp
xchg
sub
outsl
pusha
leave
adc
add
pop
and
pushf
lret
repnz
cs
ja
xlat
fldl
push
adc
dec
hlt
jae
or
hlt
sbb
pusha
insb
and
ds
mov
dec
push
addl
call
notl
mov
je
out
insl
mov
popf
std
out
sub
adc
stc
pop
scas
cld
es
in
xor
hlt
fdivl
push
jo
xor
clc
shl
aas
sub
dec
jecxz
shrl
jne
mov
jo
dec
into
cmp
subb
cmp
negl
xchg
adc
xor
inc
add
shrb
nop
and
clc
adc
enter
inc
mov
adc
sub
mov
cltd
stos
pop
push
mov
cli
arpl
mov
cli
jmp
push
test
fwait
xchg
rorl
sub
imul
inc
pop
call
les
out
add
xchg
dec
test
or
sti
push
roll
jg
loop
repnz
add
loope
xchg
mov
bound
jmp
pop
fimull
jmp
mov
cli
or
mov
pop
add
pop
int3
adc
or
push
fdiv
push
mov
jne
movsb
inc
jecxz
ja
inc
and
jp
and
dec
ljmp
inc
lea
sub
ret
icebp
into
daa
outsl
sbb
imul
adc
stos
sub
jb
shll
jecxz
mov
push
hlt
jbe
jae
mov
lcall
cmc
jecxz
xchg
ja
stos
mov
pop
push
les
adc
loopne
sahf
int
cmpsb
cmp
loope
sub
xchg
dec
ud1
pop
push
sub
rorb
sbb
jne
imul
xchg
daa
mov
mov
xchg
test
mov
and
mov
je
ds
sub
add
push
addb
nop
lods
add
adc
in
fwait
insb
test
inc
jp
mov
jae
or
or
fcoms
inc
icebp
popa
nop
mov
daa
mov
lods
jnp
aad
mov
clc
outsl
cmp
in
lods
push
pop
cmp
ss
insb
aas
xchg
int
and
js
fs
les
or
pop
xchg
fdivp
push
mov
and
lret
out
iret
fildl
push
cli
enter
shlb
jno
out
test
adc
cmp
nop
adc
and
pop
ficoml
push
sbb
mov
jge
push
rclb
xor
sbb
mov
stos
mov
ds
sti
testb
or
xor
setns
cmp
cmp
enter
aaa
push
lock
in
test
stos
cmp
cli
mov
jecxz
in
repnz
bound
sbb
lock
adc
cld
insl
out
das
xor
mov
adcl
push
hlt
mov
fisubs
inc
pop
repz
inc
mov
test
inc
into
adc
loop
cwtl
pop
repz
sub
clc
mov
clc
jecxz
hlt
pop
mov
jl
mov
addr16
xor
xor
mov
push
mov
popf
ja
add
xchg
inc
mov
insl
pop
or
push
stos
mov
call
xchg
push
xor
shr
outsl
jle
in
popf
add
sub
cmp
cmpsl
imulb
stos
cli
sbb
rclb
mov
pop
mov
pop
push
xorl
outsl
ds
sti
jns
xchg
imul
fildl
jae
repnz
cmp
xlat
adc
loop
jns
shrb
repz
clc
pushf
xchg
fdivp
shlb
xlat
mov
int3
sarb
lds
and
sub
fcoml
shll
sub
fcoml
sub
pop
gs
jmp
in
inc
int
stos
mov
cmpsb
cli
add
lret
out
xchg
clc
xor
imul
mov
xchg
add
insb
mov
in
pop
mov
outsl
test
cmpsl
inc
mov
jnp
fscale
aad
sbb
fimull
push
pause
mov
add
push
cmp
pop
mov
mov
dec
ret
add
or
out
ss
cwtl
or
ret
lret
sti
jmp
pop
adc
adc
pop
shrb
mov
das
js
cs
push
jno
and
hlt
ret
ja
push
scas
sbb
push
incl
sub
cwtl
dec
mov
pop
xlat
pushl
pop
and
dec
fmul
mov
mov
jbe
or
aaa
sarl
dec
mov
pop
jnp
repnz
push
cltd
fsubp
movsb
jne
jo
int
sbb
inc
insl
adc
xor
mov
rorb
dec
stos
ja
add
fmuls
lds
stc
or
das
xor
test
mov
lcall
scas
mov
adc
repz
scas
jb
cli
mov
add
mov
repnz
jno
aad
pop
xchg
jb
mov
jno
cld
jno
mov
sbb
scas
clc
mov
add
add
jb
adc
adc
adc
imul
mov
xor
ret
fucomip
xor
repnz
rolb
je
repnz
xor
repnz
lods
push
sub
xor
loope
xchg
sub
fs
jno
fdiv
std
inc
outsl
xor
xor
scas
repnz
mov
clc
sub
imul
clc
push
jmp
lods
and
orb
jb
xorl
xchg
jno
clc
mov
call
mov
insb
adc
and
hlt
sub
icebp
mov
in
in
out
xor
sbb
or
jo
jo
clc
cmpb
out
xor
xor
mov
fstpt
subl
popf
adc
jbe
insl
xor
jmp
insl
subl
and
dec
movsb
jb
pop
imul
cld
test
inc
icebp
xor
xor
jno
lods
hlt
xor
imul
mov
out
jns
xorl
adc
sub
in
or
sbb
jge
fyl2x
cld
or
adc
jae
icebp
or
icebp
sub
xor
icebp
xorl
icebp
stc
mov
icebp
or
icebp
shlb
insl
out
repnz
sub
clc
icebp
mov
insl
icebp
xor
jne
icebp
repz
xor
clc
sbb
movsl
clc
mov
jno
clc
hlt
jno
clc
push
jno
clc
insl
jno
clc
pop
jno
clc
sub
xor
icebp
push
icebp
xor
je
icebp
cld
outsl
inc
icebp
adc
adc
jge
xor
xor
push
inc
sub
mov
imul
inc
das
mov
sub
stos
imul
lods
sub
jmp
mov
inc
das
adc
icebp
ljmp
xchg
clc
jno
sub
insb
icebp
mov
cld
jae
out
ret
pop
stc
xchg
idivb
imul
or
xor
push
xor
lret
cmpsl
mov
adc
add
int
out
xchg
push
xchg
mov
push
ss
inc
add
repz
add
fnstenv
inc
or
push
test
cmp
pop
mov
bound
hlt
jno
cmc
mov
add
int3
or
xchg
adc
loopne
aas
in
push
jge
fs
push
aad
insb
inc
jno
cmp
lock
inc
pop
or
mov
repz
add
aad
add
xor
push
xor
les
add
call
xchg
aas
in
fstpt
stos
sub
imul
sbb
aam
pushf
outsl
xor
mov
dec
ja
jo
bound
xor
out
outsl
add
ret
and
les
adc
jo
xlat
mov
jge
push
cld
xor
pushf
push
in
stc
movsb
les
jno
add
shrl
stos
xlat
in
stc
js
jno
sub
in
inc
jmp
rclb
mov
lods
test
sub
addb
xchg
push
stos
pop
xor
in
repz
call
xorb
roll
mov
pop
cltd
bound
imul
mov
push
jb
mov
call
insl
and
repz
or
sub
loope
testl
je
les
mov
aad
int
out
repnz
or
inc
out
or
outsl
int3
sahf
les
es
imul
stos
and
jl
pop
repnz
popa
ja
imul
push
sbbl
dec
pop
adc
out
cmp
xchg
fcomi
imul
xor
xchg
insb
cmp
xor
pop
push
cmpsl
testl
xchg
push
stc
inc
in
xchg
inc
popf
add
inc
or
hlt
xor
ret
stos
int
push
cmpsl
mov
adc
jns
jg
lret
push
pushf
sub
or
out
ja
jbe
out
fmull
shlb
leave
xchg
mov
dec
mov
jbe
sub
push
mov
push
mov
mov
clc
pusha
pop
xchg
cli
add
out
mov
loope
or
jge
outsl
mov
inc
jg
lret
stos
xchg
sub
roll
aaa
xor
inc
xchg
outsb
je
cltd
imul
aad
popf
mov
movsb
rcrb
ret
jno
movsb
xor
sub
pop
outsl
divb
pop
cmpsl
push
xor
cld
jle
fwait
adc
out
movsl
stos
or
xlat
sbb
pop
repz
pop
pop
inc
and
xchg
mov
jmp
ror
mov
sub
dec
fmulp
hlt
xor
dec
int3
mov
loope
mov
mov
cltd
repnz
push
sub
push
aaa
mov
arpl
jmp
xor
insl
mov
adc
out
xor
and
in
test
adc
subb
iret
adc
ret
lods
push
jg
jno
mov
mov
xor
mov
sub
mov
push
nop
jae
in
dec
fwait
cmp
test
fldt
cmc
ja
cs
std
cmp
push
icebp
jl
aam
sbb
jecxz
mov
imulb
adcb
call
popf
out
fadd
sub
stos
jb
mov
outsl
mov
out
xor
ja
in
rolb
les
sub
adc
pop
shlb
mov
mov
pop
insl
shlb
and
arpl
pop
add
xor
push
pop
mov
sub
lahf
hlt
fwait
jae
js
push
mov
dec
inc
lock
daa
ficoml
cmp
leave
popa
imul
mov
fucomip
outsl
xchg
xchg
fwait
int3
inc
pushf
sub
push
mov
lea
outsl
jno
and
mov
adc
dec
sub
push
out
lods
std
and
mov
pusha
hlt
add
pop
dec
repz
mov
mov
stc
shll
test
mov
adc
aad
dec
xor
int
pop
je
inc
mov
call
out
mov
cmp
in
push
adc
inc
cmpsb
cmp
jp
xorb
and
insb
and
repnz
fdivrl
out
rorb
imul
aaa
lcall
cltd
jmp
inc
fisttpl
push
jg
dec
lea
pop
cli
sbb
ds
lock
add
sbb
xor
jge
mov
push
cmc
pop
jl
hlt
clc
xchg
xor
sub
insb
jmp
adc
loop
or
push
add
add
jp
ja
cmp
jns
shl
flds
popf
sbb
je
add
sbb
lds
jmp
xlat
jb
fs
popa
xor
jb
ja
xlat
push
pop
loope
mov
ja
or
sbb
push
icebp
mov
out
xor
pop
sbb
lods
int
xor
xor
movsl
cwtl
dec
das
icebp
xchg
dec
imull
jle
adc
das
mov
fwait
daa
push
xor
push
fisttpll
cmp
fwait
adc
jns
pop
out
jns
sub
inc
out
fidivs
stos
add
xor
das
cmp
cld
cmpsl
jns
add
mov
fdiv
mov
inc
xchg
outsb
inc
mov
mov
repnz
les
jo
xlat
in
mov
fisubrs
daa
adc
and
inc
loope
pusha
mov
fildl
mov
and
adc
shrl
xlat
adc
jnp
adc
std
mov
dec
jge
and
lods
adc
das
cmpxchg
xor
mov
lahf
test
pop
insb
xchg
or
mov
xorb
push
gs
mov
jp
or
sbb
push
adc
xchg
in
into
inc
shrb
out
imul
mov
loop,pn
test
mov
mov
mov
es
xor
icebp
and
jecxz
mov
insl
inc
into
inc
inc
jo
adc
loopne
nop
mov
insl
aas
and
mov
mov
test
mov
jns
ret
sub
inc
imul
jns
ja
xor
push
mov
cmp
test
mov
pop
in
or
push
ja
dec
adc
pushf
jp
cmp
jo
sub
ja
inc
or
bound
imul
jge
push
stos
gs
xor
shll
enter
xor
rcl
lret
sbb
pop
push
aaa
scas
adc
mov
push
movsl
and
dec
pop
sub
adc
iret
pusha
shrl
xor
les
or
mov
cli
or
jmp
in
xchg
fldenv
test
adc
mov
in
rcll
mov
adc
into
pop
cmp
repnz
xchg
pop
pop
dec
addr16
adc
push
lds
adc
dec
lret
jne
insb
scas
aad
fldl
pop
xchg
xchg
sbbb
mov
movsb
mov
adc
pusha
cltd
ja
jo
movsb
xchg
and
enter
or
gs
inc
add
inc
sub
add
lret
lds
mov
dec
pop
push
inc
xor
dec
add
jno
or
in
adc
adc
or
aas
repz
imul
jnp
decb
adc
out
xor
adc
push
adc
mov
rclb
orl
gs
mov
loop
inc
xchg
test
pop
lods
inc
sbb
fidivs
testl
in
sub
clc
sbb
aad
pop
enter
int
gs
arpl
add
outsl
loope
cld
jbe
cmpsb
lahf
aaa
or
adc
es
or
mov
cmp
repz
adc
jecxz
mov
dec
jns
js
jp
xchg
push
inc
jns
ljmp
and
jge
and
loopne
enter
sub
sub
xor
scas
push
lcall
xchg
or
mov
clc
out
fsubrl
push
subl
jns
shlb
repnz
push
fcompl
xchg
and
xchg
mov
in
popf
cmp
rorb
sar
rorb
jp
xchg
aaa
mov
xor
xor
inc
pop
hlt
cmp
aad
or
lar
xchg
cmp
enter
repnz
sti
popa
in
ja
sub
mov
aad
arpl
fistpll
push
jg
push
stc
dec
lock
pop
loope
jne
mov
insb
add
rclb
ja
mov
jno
outsl
dec
pop
or
cld
mov
mov
clc
sub
in
or
xor
lcall
rcrb
fisttps
out
pop
mov
stc
sub
mov
cwtl
es
sub
xchg
cmpsl
ss
int3
les
dec
pop
lods
andb
sbb
mov
aaa
inc
xchg
adc
arpl
dec
push
xchg
fstpt
and
hlt
pop
pop
cmp
clc
popa
pop
sub
ja
in
cmp
pop
insb
nop
sub
pop
cmp
not
sahf
cli
es
xor
int
cmpsb
add
jae
fdivrs
jns
mov
push
and
xor
sub
add
hlt
adc
mov
loopne
jle
or
call
data16
stos
push
jbe
in
int3
movsl
inc
and
sub
push
test
lods
fs
jmp
clc
imul
sub
shll
shlb
xor
jg
in
test
xor
cmpsl
loop
and
outsl
jmp
sahf
sbb
out
xchg
dec
jmp
cmp
ja
xor
xor
cltd
filds
jle
popf
mov
xchg
call
add
jo
lret
loopne
adc
jns
push
lret
add
inc
les
leave
cmp
pop
push
ss
sub
sbb
xor
lret
into
xchg
cmp
mov
shlb
dec
subb
repnz
les
mov
inc
lahf
dec
jne
test
repnz
cmpsl
hlt
pop
push
inc
repz
push
divb
cmp
lds
fstpt
sub
cmpsl
bound
ja
negb
adc
push
mov
jge
jmp
call
mov
loope
pusha
aaa
sub
inc
jo
ss
movsl
ret
std
mov
clc
push
dec
push
and
rolb
jl
jg
aas
nop
jge
repz
pushf
inc
mov
gs
insb
push
fnsave
daa
push
fwait
xchg
and
adc
stc
leave
dec
imulb
shl
outsl
leave
xorl
ja
out
out
push
stos
jl
mov
inc
cmpl
or
shrl
subl
arpl
push
xorb
jp
jo
in
add
mov
jl
int3
cmp
dec
dec
clc
rclb
and
or
hlt
jo
jp
push
xorl
lea
call
xchg
or
add
inc
subb
ja
push
rcrl
xchg
jge
lods
leave
mov
les
and
or
int
fwait
pop
lret
cmp
dec
add
mov
mov
xchg
xor
aaa
cmpsb
xor
cmp
roll
jns
or
inc
call
fidivrs
les
cmc
xor
mov
es
inc
mov
es
mov
pop
xor
dec
outsl
mov
pop
cmp
push
stos
bound
add
cmpb
cld
sub
xor
inc
les
jae
add
and
xor
dec
nop
sti
rolb
adc
jecxz
roll
mov
outsl
jo
mov
adc
push
push
pop
aam
sbb
fdivrl
sub
mov
hlt
rcrl
icebp
pop
imul
jo
fistpll
inc
jbe
pop
cmc
mov
mov
clc
test
add
fcoml
jb
and
jecxz
cmp
shrl
xor
inc
xor
inc
mov
push
add
pop
mov
inc
ljmp
cli
icebp
insb
jecxz
dec
sub
arpl
sbb
push
movsl
addb
outsl
sub
rclb
push
popa
scas
adc
adc
or
lahf
adc
jge
cwtl
insb
movl
lret
in
pop
imul
mov
out
push
jg
push
cmp
xor
sbb
into
mov
dec
xchg
hlt
fistps
scas
jns
cmp
test
fsubrp
dec
insb
hlt
jnp
push
adc
xchg
sbb
pop
cmp
ss
pop
sbb
loop
outsb
rclb
pop
add
cmp
shr
dec
outsl
shll
xor
shrl
rclb
jno
push
xor
pop
ja
mov
jmp
add
lods
mov
pop
stos
sbbb
sub
outsl
or
and
push
jo
jp
outsl
mov
testl
jmp
mov
adc
ret
jle
mov
mov
nop
mov
mov
xor
dec
aam
mov
out
fisubrs
repnz
cltd
xor
pop
xor
xor
lahf
mov
cld
aaa
push
adc
bnd
loope
repnz
mov
loope
sbb
std
jo
out
cmp
cwtl
adc
out
dec
das
jle
popf
loope
xchg
jns
sar
mov
repnz
sbbb
xor
mov
dec
add
xor
jle
add
fnsave
repz
test
mov
xchg
fidivrs
dec
adc
sub
sbb
mov
cltd
adc
xor
pop
sub
sbb
adc
repnz
jns
pop
adc
into
adc
stc
jge
and
imul
into
cmc
mov
cmp
cmp
out
push
mov
scas
add
imul
rorl
addr16
xor
jb
mov
es
data16
jne
outsb
cwtl
xchg
sub
xchg
lret
inc
testb
aas
inc
xchg
xor
lock
iret
sub
cmpsb
jns
fildl
and
fdivrs
mov
jo
addb
inc
repnz
cmpsl
js
fs
jno
mov
xchg
pop
mov
das
aas
cmpsl
jae
inc
xor
jb
mov
jmp
dec
inc
push
push
xchg
stos
dec
lret
mov
push
je
std
aas
cmp
mov
bnd
test
mov
repz
cmp
xor
aaa
popf
dec
fiaddl
push
gs
cwtl
mov
hlt
fs
push
add
ds
cmp
lea
lds
adc
or
loopne
das
lods
je
ja
jb
xor
mov
push
mov
xor
in
repnz
mov
cmp
insb
push
sub
mov
sub
mov
pop
inc
mov
outsl
or
das
mov
jmp
outsl
or
dec
xchg
or
pop
ja
ret
and
and
outsl
mov
sbb
fbstp
icebp
cli
xchg
outsb
adc
test
fiaddl
loope
in
sbb
add
mov
bound
push
cmp
mov
cmp
xchg
mov
mov
fidivrs
insb
and
les
negb
vmovaps
add
cmp
xorl
xchg
and
add
in
xchg
add
rorl
cltd
push
les
push
inc
push
insl
xor
les
movq
adc
pushl
fisubrs
movsb
mov
sahf
faddp
movsb
or
mov
int3
cmc
push
fsubrl
sbbl
cmpsb
ss
cmpsb
inc
shr
insl
pop
sahf
bound
push
pop
xchg
ljmp
loope
or
test
enter
lret
mov
pop
and
out
cmpb
fadds
call
adc
shrl
mov
fs
insb
push
jecxz
and
subb
xchg
and
or
push
xchg
xor
jge
bound
aaa
add
adc
mov
cmpsb
mov
fildl
divl
or
sbb
xchg
push
or
hlt
pop
push
int
hlt
rolb
pop
xchg
or
sub
cmp
xchg
jle
test
mov
cmc
pop
imul
mov
call
sub
aaa
stc
mov
inc
jb
les
ret
jno
jnp
cmc
shlb
push
xor
insl
xchg
or
cmpsb
test
or
dec
jle
sbb
inc
mov
ds
cmc
in
out
mov
dec
lock
pop
cmp
test
xchg
xchg
out
add
aad
out
pop
outsl
lret
orb
pop
mov
mov
pop
or
jecxz
push
movsl
movsb
lds
lea
dec
inc
or
jle
mov
push
xor
push
in
imul
aaa
subl
push
into
jge
pop
push
mov
popa
jp
je
dec
stos
push
out
lock
and
jl
sub
mov
push
and
dec
jae
ret
cltd
fistl
aam
cmp
xchg
sub
cmc
mov
insl
xor
jmp
lret
adc
cmp
fwait
jp
pushf
fs
cwtl
icebp
stos
xchg
in
push
push
sub
inc
jge
jne
and
out
or
lods
xlat
enter
jb
lods
shlb
add
arpl
hlt
push
and
pop
or
add
sub
lods
in
outsl
cltd
mov
or
hlt
sub
xchg
sbb
movsb
lahf
or
cmp
outsb
adc
jo
cmc
pop
bnd
andb
notb
imul
lock
pop
cmc
pushf
fs
or
movsl
std
dec
pop
mov
jno
int
orl
lods
lods
pop
lods
xchg
xchg
mov
aas
adc
fildl
pusha
pop
call
sbb
filds
repnz
out
mov
cmp
rclb
pushf
je
movsl
xor
or
jp
mov
repnz
mov
in
lods
mov
xchg
cmp
cmp
sub
xor
cmp
dec
mov
ja
xchg
push
lock
mov
cmpsl
jmp
in
add
rep
push
scas
out
adc
or
std
mov
aad
sbb
mov
and
mov
idivb
test
push
arpl
imul
pop
jb,pn
in
jp
add
xor
das
popl
adc
inc
mov
out
lret
in
hlt
cld
sub
pop
xlat
sbb
jmp
xor
push
movsb
push
mov
xchg
mov
mov
adc
or
adc
scas
lods
lock
mov
xchg
add
call
sbb
mov
hlt
aad
shl
clc
xchg
mov
mov
lods
xor
insl
cmc
mov
push
popf
mulb
add
loope
mov
fstl
dec
dec
out
mov
xchg
in
inc
lret
mov
out
and
jb
lods
loope
test
xor
adc
in
lds
jge
addl
dec
sahf
sub
pop
or
leave
int
out
mov
mov
imul
mov
out
add
shll
xchg
or
and
dec
sbb
xor
clc
movsl
push
out
sbb
cmp
sub
sbb
mov
jo
xchg
in
xchg
mov
mov
in
sbb
xchg
fisubrl
adc
sbb
push
popa
ja
cmp
adc
jne
push
cmpsl
stc
cmp
sub
aad
bound
jo
sbb
cmp
lock
mov
sub
loope
shrb
andl
xchg
jno
shr
in
ja
mov
cli
sub
lods
out
mov
gs
xor
outsl
and
cmp
loope
pop
cmc
xchg
cmp
mov
xchg
xor
mov
mov
cmpsl
es
sub
sub
shlb
pop
cmp
pop
push
xor
add
scas
sbbl
mov
xor
imulb
es
inc
pop
cmc
jo
into
cmc
jns
fildll
fcmove
js
jbe
adc
pop
xchg
daa
cmp
cmp
xor
sarl
xlat
or
dec
addr16
lret
push
xor
add
inc
int
out
xor
mov
out
aas
ja
cld
fistpll
push
hlt
movsb
out
sarb
inc
fidivl
cmp
insb
shrb
push
shlb
ljmp
pop
in
xor
and
rep
pop
test
mov
arpl
push
lahf
lret
and
sub
pop
ja
roll
clc
xor
fimuls
out
push
negb
jg
add
shrl
jbe
dec
mov
std
ja
mov
adc
gs
sbb
mov
xor
out
call
xchg
ret
sub
stc
inc
push
out
xchg
and
sub
fcmovb
xor
jns
rclb
out
out
xchg
dec
xlat
out
mov
add
in
fwait
push
enter
fisubrl
or
cmp
jne
xchg
push
imul
pop
mov
ja
out
aaa
or
icebp
xchg
and
mov
push
pop
pop
cmp
inc
ret
ja
cmp
mov
cmp
mov
add
int3
cmp
das
mov
jno
add
test
pop
pop
sub
cmp
inc
sub
loope
mov
and
ja
divb
adc
insb
call
ss
mov
or
add
mov
shlb
lock
out
cmpsb
and
xchg
mov
dec
xchg
jno
xchg
iret
jns
lret
sub
xchg
call
imull
and
jmp
call
cmc
jno
fnop
cmp
and
arpl
jae
pop
pop
fcoms
jl
cmpl
iret
imul
xor
mov
imul
out
insb
add
shlb
xor
test
jnp
clc
in
xchg
test
cmp
out
js
cs
push
aaa
rcr
xor
adc
fstpt
dec
push
jbe
sbb
out
or
pop
aad
or
ror
push
ja
and
fadds
mov
push
insb
ja
push
pop
jae
repz
add
cmc
xchg
or
dec
sub
mov
outsl
ret
jmp
push
push
movsb
sub
out
and
or
mov
lea
jbe
outsb
xor
inc
inc
or
pop
lock
pushf
out
mov
cmp
push
cmpsb
loope
hlt
rcrb
les
outsl
mov
push
popf
inc
xchg
fdivrs
cmpb
or
jge
fdivrl
cmp
mov
mov
ja
mov
adc
push
outsb
data16
sub
sub
sub
stc
or
imul
jb
insb
xchg
mov
mov
mov
loope
adc
int
sub
xlat
sub
push
jge
xchg
jecxz
je
mov
push
jns
cmc
ficoms
add
cmpsl
test
fs
xlat
add
mov
xor
pushl
ja
xchg
xor
cmp
nop
inc
js
push
xchg
subb
jge
imul
in
dec
mov
outsl
mov
mov
in
out
mov
fwait
jno
pop
add
sti
jb
int3
jle
cmp
icebp
or
sub
xchg
cwtl
imul
divb
fidivrs
int
xor
push
shrl
repnz
into
add
jo
and
mov
mov
icebp
jb
add
lods
icebp
xor
jno
lcall
add
adc
xor
push
cli
or
add
add
add
mov
inc
lods
insl
sub
jb
outsb
repnz
push
in
inc
or
xor
imul
xchg
add
mov
insl
mov
movb
jmp
insl
sub
test
dec
aaa
xor
icebp
icebp
imul
inc
movsb
inc
ss
or
stos
sub
ja
mov
stc
xor
cli
je
jno
aas
xor
push
sub
imul
stos
xor
lods
jno
les
int
mov
xchg
stos
icebp
xchg
das
mov
inc
scas
or
cltd
jmp
xchg
mov
sub
xor
hlt
or
or
jle
xor
xor
sub
jmp
xor
jo
stos
or
icebp
xor
sbb
mov
movsb
pop
outsb
jne
add
fs
jne
fwait
add
and
mov
dec
repz
cmp
cmp
add
stos
xor
add
imul
test
fwait
outsl
div
out
or
sbb
mov
icebp
div
sub
cs
icebp
insb
icebp
or
sub
loop
cmpsb
sub
cs
and
xor
mov
imul
inc
insb
jmp
je
sub
lods
or
test
add
mov
sub
repz
cmc
mov
insb
adc
xor
icebp
call
xor
sub
jp
sub
jp
sbb
jmp
jne
xchg
repnz
je
ljmp
mov
or
mov
xor
add
mov
repz
sahf
or
inc
add
cmp
xchg
rolb
lahf
ffreep
and
scas
jo
subl
aad
loope
mov
rorl
or
xchg
or
push
stos
pop
jns
std
mov
add
push
popf
cwtl
repnz
stos
sub
push
mov
ljmp
adc
arpl
ja
sar
in
jo
xchg
fst
add
jl
sub
inc
push
push
call
jge
mov
in
fs
cmp
xchg
lods
loope
adc
mov
repnz
sbb
aad
xchg
ret
pop
gs
daa
add
add
lods
imul
gs
mov
jge
pop
pop
push
sbb
pushl
repnz
and
or
call
or
or
aaa
sub
cmp
test
outsl
enter
stos
or
jmp
into
bound
mov
lret
jb
mov
sbb
cwtl
cmp
dec
enter
sub
stc
in
enter
add
xchg
mov
in
and
sbb
cmc
outsb
sbb
mov
mov
and
imull
mov
jge
xchg
push
inc
cmp
ja
mov
popf
xor
outsl
push
ja
jmp
mov
dec
jp
xor
or
jae
aaa
xchg
in
push
subb
sahf
xchg
lret
nop
sub
adc
call
ficompl
movsb
jge
jmp
shlb
ja
jno
aas
jecxz
hlt
xchg
mov
imul
addr16
push
ja
sbb
push
fdivl
pusha
popf
mov
in
adc
cmp
xor
mov
mov
push
lret
adc
sub
ret
outsl
jl
mov
daa
add
mov
cmp
into
sub
outsl
xor
nop
push
sub
inc
in
out
add
shlb
xchg
dec
add
push
xchg
or
cmp
pop
je
out
sahf
mov
sbb
pop
call
add
jb
mov
xchg
fidivs
cmp
push
ret
mov
push
and
loope
mov
jo
mov
mov
div
fs
insb
pop
rolb
adc
mov
mov
sbb
jmp
in
cmp
adc
rcrb
adc
push
inc
cmc
enter
xchg
mov
and
lock
outsl
clc
push
mov
jbe
cmp
test
dec
dec
rolb
out
pop
hlt
jns
data16
jo
add
fmuls
inc
testb
mov
ret
mov
jmp
xchg
sbb
icebp
sbbb
push
xor
xor
xchg
jecxz
lahf
dec
jne
inc
adc
mov
add
ficomps
mov
push
adc
adc
ja
pop
in
adc
pushf
xchg
jecxz
shr
xlat
ljmp
jp
inc
in
add
pop
fimull
pushf
adc
mov
push
lret
loopne
fcoml
pop
adc
pop
sbb
jecxz
xchg
xchg
hlt
jle
shl
fisttpl
push
or
or
clc
or
rclb
sub
jl
movsl
insb
fisttpll
xor
cli
inc
push
test
sahf
cmp
hlt
and
sub
mov
lret
imul
xchg
call
jo
testb
lds
outsb
inc
sub
xchg
enter
xor
sbb
mov
adc
add
push
repnz
dec
xchg
jp
shrl
lea
jecxz
orl
ret
jno
inc
pushf
xchg
add
int3
sbb
dec
add
shr
xor
sbbb
loopne
mov
hlt
xor
fnsave
nop
outsl
cld
pop
push
pop
or
dec
jne
sbb
fsubrp
test
les
dec
xchg
adc
sub
aas
or
pusha
lret
lds
jp
or
das
jns
add
mov
dec
lahf
sbb
mov
mov
icebp
mov
jns
mov
or
sub
adc
mov
inc
and
push
loopne
mov
xchg
movsl
and
mov
or
adc
or
push
pop
sub
aas
sub
addr16
or
je
push
mov
cmp
div
insl
hlt
mov
das
xor
insb
aad
movsl
sub
jno
cmp
andb
loop
push
les
test
jno
subb
xchg
add
movsl
in
lahf
inc
add
insl
mov
push
mov
fs
repnz
jno
mov
inc
fidivl
out
push
jecxz
push
push
adc
cmpsb
push
and
icebp
in
cs
inc
ja
dec
ss
push
insb
cmp
idivb
push
add
mov
add
in
cmp
jo
jno
dec
jne
inc
dec
cmp
aam
jno
pop
mov
sub
aam
add
mov
aad
and
out
xchg
repz
jb
and
stc
sub
ds
inc
mov
mov
outsb
out
inc
jb
imul
insb
int3
adc
ds
repz
mov
sub
mov
mov
icebp
pop
and
outsl
jge
or
xchg
xor
xor
das
xor
imul
or
test
cmc
xchg
cs
mov
outsl
or
jmp
sub
mov
add
jno
mov
push
jmp
xor
std
scas
test
or
mov
mov
push
pop
mov
jb
or
push
jb
sti
repz
jle
sub
jp
xor
repz
stc
mov
idivl
jp
cs
icebp
stos
jae
out
or
mov
or
divl
test
cmc
mov
sub
insl
sub
aad
std
xor
repz
mov
xor
stc
xor
scas
cld
sub
mov
push
mov
sbb
sub
inc
jb
insl
or
xor
sub
dec
jbe
sub
xor
cli
test
mov
adc
lock
repnz
icebp
sub
mov
dec
enter
call
mov
inc
jecxz
mov
cs
push
fcoms
xchg
outsb
jne
push
scas
cltd
mov
movb
xchg
leave
sarl
into
movsb
cmpb
mov
jbe
addl
and
test
xor
xchg
mov
and
nop
add
adc
test
add
add
loop
in
out
mov
fs
clc
scas
lock
inc
xor
adc
push
adc
bound
and
mov
sbb
jg
jnp
fisttpl
dec
jl
jae
je
out
hlt
ret
sub
cmp
js
pusha
push
jge
jle
push
aam
lock
stos
push
jae
stos
sub
outsb
push
and
mov
xor
stos
subl
xorl
aam
pop
mov
nop
jmp
dec
inc
fadd
and
pop
dec
in
sbb
cmp
mov
cmp
cmp
dec
je
sbb
adc
mov
ja
add
movsl
xor
lret
in
outsl
mov
mov
loope
jae
push
inc
in
add
cmp
shlb
aam
cmp
xchg
mov
jp
jmp
pop
inc
ss
loope
cmc
hlt
jl
addr16
ljmp
fidivs
ficompl
sbb
add
add
test
or
jmp
mov
popa
dec
sub
rol
add
mov
adc
jg
and
sbbl
xchg
nop
dec
stc
push
ja
xor
jne
ffree
test
mov
adcb
pop
pop
add
es
inc
adc
push
jnp,pn
cwtl
stos
or
cmpsb
jae
fisubrs
loop
jae
xor
cmp
outsl
adc
mov
push
and
loope
mov
jo
leave
outsb
test
or
ja
aas
cs
fisubrl
sbb
movsl
add
dec
jecxz,pn
cltd
push
mov
ja
cmp
or
sub
in
outsl
bts
shll
dec
or
outsl
mov
icebp
in
push
jno,pt
or
add
shll
dec
sub
sub
xorl
sub
xorl
divb
aam
pop
xchg
push
out
adc
push
sbb
daa
sub
and
mov
in
rcl
jmp
testb
add
dec
hlt
adc
sbb
int3
pop
hlt
jae
and
out
xor
clc
das
cmpsl
jmp
push
repnz
movsb
push
scas
cmp
add
add
jae
repz
lret
jb
add
leave
ss
call
jno
adc
xor
outsl
xchg
inc
repnz
insl
outsb
iret
xchg
out
test
sub
xor
push
jae
push
jge
mov
fildll
bnd
out
outsb
inc
jb
movsl
jb
jno
lods
inc
jb
push
jb
out
in
and
clc
add
cs
xchg
adc
hlt
or
sub
or
jmp
mov
int
insl
adcl
div
sub
push
adc
mov
lods
repz
cmpsb
cmc
cmp
pop
mov
jb
push
dec
mov
xor
repz
imul
dec
xor
outsb
dec
outsl
jmp
mov
mov
sub
cs
sub
mov
scas
dec
jno
sub
inc
jmp
jmp
mov
out
and
out
xor
test
jb
int3
stos
sub
icebp
or
push
in
adc
mov
xor
repz
jno
push
icebp
sub
sub
comiss
repnz
xor
and
sub
xor
lea
stos
add
fbld
cs
sub
aaa
xor
xor
jbe
test
mov
sub
or
adc
xchg
jne
xchg
jo
in
jae
or
sbb
xor
enter
add
orl
out
adc
dec
ljmp
xor
cli
jne
xorl
sub
jno
scas
push
hlt
std
lods
push
repnz
out
sub
test
ljmp
lds
push
lods
or
or
lods
stc
jmp
push
sub
sub
or
push
hlt
sub
imul
ljmp
sub
dec
push
pop
add
push
jg
addl
pop
push
and
dec
repnz
cltd
repz
xchg
sbb
lea
hlt
hlt
outsl
and
mov
arpl
and
push
jbe
loope
sahf
hlt
movl
hlt
adc
jo
roll
bt
test
adc
out
mov
xor
pop
fisubs
xlat
call
adc
push
jb
hlt
pusha
jecxz
mov
mov
push
xor
xchg
fildl
mov
push
cmp
xor
jns
dec
push
fidivs
shlb
lods
add
inc
repz
pushf
out
adc
inc
or
vcomisd
aas
lea
addr16
arpl
sbb
fstpt
iret
sbb
in
pushf
pop
ds
lods
fsubrp
movsb
push
fstpt
cmp
lea
or
or
jb
or
icebp
xchg
jo
outsl
sub
xor
xchg
hlt
jp
arpl
dec
cmpl
cltd
sahf
or
punpcklwd
lret
add
lret
insl
adc
ljmp
mov
rcrb
sub
pop
adc
lret
inc
cmp
sub
rcr
fwait
out
mov
mov
mov
push
and
iret
sbb
push
jno
mov
sub
mov
repnz
and
ljmp
in
icebp
dec
insl
out
xor
cmp
popa
dec
mov
cmp
into
pop
inc
push
jle
mov
cld
lret
sbb
cmp
enter
mov
outsl
lock
les
sbb
xor
jo,pn
ja
pop
rorl
popl
sbb
jb
push
sbb
repz
jnp
or
sub
adc
in
add
cmc
or
into
ret
call
in
jg
xor
bnd
inc
jmp
arpl
stos
ss
lods
jb
add
mov
xchg
adc
or
add
or
push
adc
test
mov
repnz
loope
repz
cld
ja
cmpsl
mov
pop
pushf
xchg
call
outsl
push
or
test
dec
fidivrs
cmp
xchg
xor
sub
cmp
jge
add
pop
pop
push
in
pop
pop
pop
jns
mov
cmc
out
jb
je
int
jbe
out
adc
jno
sahf
je
popf
nop
inc
add
cmp
loope
imul
repnz
mov
xchg
daa
sahf
pop
cwtl
push
mov
dec
sub
lock
inc
lods
push
aad
pushf
lahf
clc
mov
pop
enter
data16
fidivl
repz
icebp
push
cmpl
mov
rclb
imul
mov
sbb
xchg
iret
xor
xor
sub
inc
pop
aad
les
jne
jno
ja
pop
cltd
jae
xor
adc
jl
push
xchg
xor
pop
clc
xchg
insl
or
into
pop
adc
push
je
out
mov
std
xchg
mov
jp
mov
lods
and
and
insl
testl
jbe
push
pop
xor
jns
inc
mov
inc
repz
mov
aas
popa
mov
arpl
addl
jns
jge
xchg
mov
test
scas
mov
jge
out
push
mov
pop
ljmp
and
xor
mov
jno
pop
aam
jge
xchg
negb
sub
fwait
addb
stos
arpl
adc
outsb
xchg
lea
das
add
adc
push
xor
sbb
fwait
adc
inc
fs
and
dec
jns
dec
mov
cmp
outsl
pushf
jecxz
push
mov
adc
pusha
outsl
shl
fcmovnb
sbb
ss
cld
repnz
insb
dec
push
inc
dec
call
adc
dec
add
inc
hlt
loope
fwait
push
out
insl
outsl
ret
add
pop
scas
fsubrs
inc
sbb
rorl
lcall
in
or
adc
test
adc
addl
test
jg
jns
mov
mov
imul
in
ja
xchg
rolb
inc
xor
stos
adc
mov
xor
xchg
xchg
jne
aad
ljmp
sub
push
rclb
dec
in
xor
xchg
aaa
fs
push
add
or
mov
cmp
push
adc
test
aas
into
out
jmp
dec
xchg
jns
aas
outsb
or
mov
dec
mov
shll
inc
sbb
popa
push
je
sub
jae
xor
lahf
pop
add
sub
push
cmc
test
daa
jae
mov
test
shll
imul
int
xchg
jnp
jge
cmp
pop
add
mov
jne
xor
rolb
mov
dec
and
insb
cmp
sub
cmp
cmpsb
add
pop
cltd
or
scas
xchg
dec
mov
xor
bound
shrb
sub
dec
cmpl
and
fwait
sub
and
sub
push
jmp
sub
mov
mov
dec
out
mov
add
mov
cmp
repz
jne
xchg
ja
je
pop
add
imul
fiadds
mov
adc
push
outsl
nop
adc
shrl
cmc
imul
jge
sub
aas
sub
int
add
insl
xchg
inc
aaa
movsb
call
fmull
or
push
rolb
gs
cmpsl
jmp
jns
xchg
jmp
loope
mov
inc
pop
push
fwait
dec
repnz
inc
jmp
sub
loope
adc
repz
ja
xlat
lret
clc
add
push
push
std
mov
pop
xchg
ss
sub
dec
sti
dec
cld
lea
mov
cmp
sub
mov
pop
sub
test
bound
xor
push
outsl
movsl
sbbl
cli
sbb
rcll
nopl
jg
imul
push
xchg
mov
add
test
outsb
or
iret
pop
jmp
in
pop
outsl
loope
dec
adc
jmp
dec
inc
insb
mov
jp
and
rcrl
sub
or
and
out
std
inc
faddl
outsl
mov
mov
mov
add
fdivl
add
mov
pop
mov
sub
cmp
and
pop
jae
jle
stc
fs
lahf
mov
or
push
jle
sub
out
stos
call
fidivs
ss
jecxz
and
sub
xchg
loop
aaa
xor
mov
outsl
addr16
ja
push
stc
mov
adc
lret
push
ja
inc
je
lret
inc
mov
push
jnp
andl
push
adc
mov
push
fsubrs
jno
mov
and
mov
enter
xchg
or
cltd
cli
adc
out
mov
cmpl
repnz
mov
cwtl
push
xchg
push
mov
jns
adc
or
add
ljmp
mov
or
popa
loopne
inc
stos
fdivrp
xchg
and
inc
pop
jge
mov
jae
stc
push
inc
pop
jp
aas
iret
mov
js
cmp
pusha
outsl
xchg
sub
inc
sahf
in
lret
pushf
and
jne
dec
in
or
xorl
pushf
cmc
cmpb
push
and
imul
daa
push
mov
scas
dec
push
mov
nopl
push
fstpt
xor
or
dec
push
sar
pop
jecxz
stos
divl
in
cld
addb
pop
hlt
in
push
add
sarl
push
inc
out
jb
daa
or
lret
ror
sbb
loopne
cmp
jne
fs
aaa
mov
pusha
bound
xchg
or
mull
mov
shl
ja
popf
add
inc
push
xchg
xor
popf
in
jnp
ja
push
js
cmp
inc
xchg
das
test
sub
out
test
jae
pop
jb
inc
jo
add
xor
jns
push
jmp
stos
xchg
dec
rcl
andb
sbb
sub
jae
repnz
mul
jns
and
in
je
arpl
push
outsl
mov
jp
push
pminub
mov
aam
mov
icebp
sub
xchg
je
call
cwtl
pop
sub
outsl
aam
mov
rcrl
push
icebp
or
push
xor
cmp
stos
jne
adc
xor
fwait
mov
call
add
xor
sbb
push
jl
ljmp
cmpsb
inc
jno
jb
std
push
cld
xor
jg
jb
jns
repnz
cmp
push
mov
mov
mov
mov
push
jecxz
bound
xchg
fmuls
popf
in
stc
xchg
cmpb
inc
ja
cs
mov
xor
push
add
adcl
xchg
jle
es
sub
popa
into
shrl
or
push
in
outsl
fcompl
mov
ja,pt
leave
dec
decl
ja
sub
pop
pop
test
dec
and
dec
inc
dec
mov
push
and
jns
stos
xor
mov
outsl
add
adc
int
sar
sti
inc
bound
out
or
imul
in
mov
pop
outsl
adc
inc
xchg
pop
or
add
add
jmp
stc
mov
jmp
add
sub
and
hlt
push
push
sbb
lea
inc
add
sbb
ss
mov
jns
icebp
and
dec
sub
nop
inc
sub
mov
inc
and
jp
cmp
adc
xchg
sbb
or
jne
hlt
dec
adc
int
ja
push
out
xor
jp
lods
insl
stos
movb
bound
push
jno
stc
fcmovnbe
fistl
add
and
mov
ja
lods
dec
or
daa
lea
or
push
in
or
cli
cmp
cs
stos
aad
rorl
mov
dec
pop
out
sub
ret
push
mov
scas
insl
outsl
xchg
add
inc
sbb
adc
mov
cmp
addb
sub
sub
andb
andl
cmp
clc
aam
inc
jne
push
xor
mov
or
out
dec
js
pop
push
bnd
or
loopne
push
sub
push
fidivrl
jo
pop
mov
pop
nop
sub
cld
dec
mov
popa
inc
fwait
dec
cld
mov
cs
xchg
stos
xor
sub
fisttpl
pop
inc
xchg
sub
es
sbb
mov
adc
mov
xchg
insb
scas
and
test
out
lods
loope
push
jle
orl
xlat
jmp
sbb
int
dec
sbb
and
rorl
mov
ret
adc
jnp
adc
into
cmp
cmp
push
or
pop
and
pop
negl
jb
dec
jo
pop
xorl
enter
ret
aas
repz
divl
divb
xor
test
add
ss
mov
xchg
cmp
xchg
hlt
add
cmp
jge
push
lahf
xor
out
sub
sti
aas
jbe
outsl
mov
aaa
imul
shrb
xchg
cmp
jno
sub
sbb
insb
inc
xchg
push
cmp
jge
pop
dec
popa
sub
dec
add
xchg
sbbl
or
in
mov
ja
pusha
arpl
inc
xchg
jns
fdivp
mov
hlt
add
mov
xlat
adc
sub
cmp
fsubrp
fldcw
pop
xlat
sbb
add
inc
pop
in
subb
mov
lods
fldpi
aad
pushf
jmp
sub
xchg
inc
ja
add
mov
jl
int3
imul
xor
cld
fsubrl
out
push
aas
inc
dec
lods
nop
or
inc
mov
pop
jb
xchg
cs
inc
dec
inc
rclb
xchg
ja
sub
lea
dec
mov
mov
pushf
mov
nop
inc
cmp
sahf
jbe
dec
std
dec
mov
mov
inc
iret
cwtl
fisttpll
fisubrs
out
xchg
pushf
and
in
jmp
and
adc
xchg
imul
popf
adc
sbb
adc
into
mov
ret
xor
ret
mov
sahf
fildll
clc
loop
adc
add
test
cmpl
clc
lret
call
clc
dec
cmp
xor
out
push
inc
bound
pushf
popw
fnstsw
sub
shlb
push
xor
outsl
add
out
ja
or
imul
and
jecxz
cmp
adc
xlat
adc
imul
add
dec
in
jecxz
lock
daa
fnsave
sbbl
jl
cmc
addr16
lock
xor
dec
pop
cld
push
in
add
and
pop
in
into
outsl
push
test
mov
xchg
mov
mov
mov
or
sub
mov
repnz
cmpsb
add
cli
mov
fs
adc
push
cmp
popf
inc
or
or
shll
inc
invd
fisubrl
mov
or
inc
notb
cmpsb
fstpl
xchg
in
les
mov
shll
inc
ja
xor
mov
xchg
pop
icebp
mov
icebp
imul
inc
add
jne
cmc
push
aas
mov
cmp
adc
inc
xor
ss
iret
stc
idivb
movsl
repnz
adc
xor
in
loopne
xchg
jecxz
jge
ja
lea
push
add
ljmp
inc
xchg
xor
sbbl
jnp
xchg
stos
je
sub
adc
mov
xchg
mov
or
jp
or
pop
jns
cli
shlb
and
jnp
jecxz
loope
and
das
mov
insl
shrb
js
insl
jne,pn
sub
jge
dec
xor
ja
xor
mov
out
loopne
sbb
das
ljmp
jmp
fimull
hlt
mov
ret
jge
push
xchg
mov
sbbl
add
and
jg
jb
leave
mov
adc
call
andb
aaa
in
xor
pop
pop
jg
sahf
bound
clc
movsb
xchg
das
jns
adc
dec
test
push
repz
jl
mov
push
and
imul
outsl
or
xlat
lcall
fsts
repz
and
mov
movsb
call
sub
es
ja
enter
insb
jne
xor
sub
inc
es
outsl
mov
cltd
data16
lods
bound
pop
outsl
pop
jge
xchg
inc
jmp
pop
sbb
xchg
sbb
sbb
insl
imul
sub
aam
movsb
xchg
inc
popf
add
jno
add
xorl
push
sti
cmpsb
bound
xchg
xchg
pop
stos
push
mov
int
push
push
push
mov
int
mov
inc
call
push
test
aaa
leave
push
iret
mov
jne
xchg
test
lock
xchg
mov
mov
repnz
clc
mov
adc
iret
imul
sti
mov
or
add
repz
inc
inc
add
inc
cmpsl
lret
sub
and
outsb
imul
aas
mov
adc
mov
ret
mov
sbb
dec
lret
test
mov
adc
and
ja
xor
loopne
aaa
dec
fcom
insl
xchg
fcoms
pop
add
jnp
pop
xchg
inc
test
or
shl
jg
xchg
jg
and
add
xchg
adc
mov
lock
incl
les
or
xchg
sar
movsb
add
ds
push
arpl
mov
push
cmp
shrl
repnz
mov
jecxz
out
jbe
shl
xchg
cmp
cmpsb
jae
call
call
fwait
divl
dec
jne
stos
sahf
jo
fdivl
push
ss
sbb
test
outsl
movsl
xchg
ret
pop
scas
inc
jge
cmpsl
push
xor
shrl
and
and
xlat
popa
popf
mov
jbe
jno
mov
add
pop
mov
xchg
jecxz
in
cmc
fs
sub
jl
insl
adc
mull
mov
adc
mov
repnz
jnp
pop
pop
push
in
sarb
icebp
clc
and
lahf
repz
mov
ss
sbb
lahf
repz
xor
xchg
adc
mov
in
xchg
inc
cmp
inc
js
jmp
mul
lods
ja
push
cs
icebp
jo
xor
fs
cmp
mov
call
outsl
pop
xchg
sub
mov
insb
xor
or
popa
sbbl
test
je
mov
stos
ljmp
adc
mov
cli
mov
sarb
jecxz
cs
xchg
int3
xor
or
add
mov
nop
lret
pop
int
orb
imul
fucom
popa
mov
into
test
jmp
insl
inc
fldcw
mov
cmc
pop
mov
nop
test
icebp
cld
ja
mov
dec
sahf
addb
dec
clc
ret
push
sub
shr
mov
sbb
bound
out
or
dec
adc
lods
repz
xchg
sbb
inc
bound
cltd
rcl
fsubs
lret
out
mov
ret
mov
inc
test
or
fistpll
nop
or
adc
insb
or
aaa
mov
or
les
add
push
adc
and
loop
or
pop
sub
adc
icebp
dec
and
mov
outsl
or
fistl
add
scas
sbb
cmp
sbb
sub
loop
and
xor
out
dec
out
lods
cmp
ljmp
lock
aaa
jns
lea
repnz
and
sbb
cmp
ja
cs
dec
push
mov
cmp
pop
sub
cmp
fisubrl
repnz
xchg
pushf
mov
jmp
cltd
out
fadds
or
or
mov
pop
or
sti
testl
sub
pushl
fldl
cmp
and
addb
push
rcrb
jmp
mov
hlt
outsl
add
imul
adc
cmp
aas
push
sub
inc
call
inc
and
jae
jl
xor
les
add
aaa
shl
xchg
arpl
inc
pop
pop
xchg
cli
cmc
hlt
imul
sar
call
loope
push
mov
int
aam
sbb
outsl
clc
adc
mov
ffree
xchg
jge
or
xchg
lcall
pop
mov
mov
in
pop
insl
push
dec
inc
and
push
outsl
push
adc
aaa
push
outsb
addl
addl
pop
fistpl
lret
std
repz
sti
add
lret
rclb
xchg
popf
es
mov
add
dec
add
mov
idivl
test
jg
mov
mov
push
fnstenv
fdivp
jmp
sub
mov
sub
dec
cmp
sbb
jo
pop
icebp
jne
pushf
fcoml
inc
push
dec
test
imul
or
jo
xor
call
xorb
push
test
push
inc
push
cmc
out
repz
jnp
in
loope
bound
xchg
xchg
sub
popa
xchg
js
shlb
xchg
pop
jmp
xchg
ja
jae
stos
repnz
cmpsl
xchg
mov
fidivrl
imul
cmp
pop
sub
out
sub
cmp
cltd
mov
sbb
add
outsl
nop
cmpsl
mov
decb
inc
xor
hlt
push
mov
sbbl
fisttpl
sbb
ds
jge
mov
cmp
sub
sti
sarl
jmp
shrl
outsb
cltd
push
push
clc
daa
outsb
add
out
xor
jmp
add
testl
jecxz
mov
or
jge
icebp
repnz
repnz
add
jno
sbb
mov
ret
cld
mov
or
ficoml
adc
lea
push
cmp
sbb
sub
adc
adc
xchg
sub
repnz
adc
insb
into
add
imul
lods
and
sti
out
subl
call
cli
push
jno
in
push
or
mulps
inc
mov
dec
repz
mov
jno
sub
aaa
icebp
repnz
jb
add
or
out
cmp
xchg
int
xor
and
scas
xor
int
push
cmc
test
mov
xor
add
jb
repnz
data16
cli
repnz
cmp
push
in
jno
pop
xchg
sub
xor
push
lock
add
jno
cmpsb
insl
sub
add
icebp
inc
cs
adc
cmc
jle
popa
xor
xor
je
mov
in
call
xor
call
cmc
jle
sbb
jne
test
jge
lods
sub
idivl
sub
dec
test
jmp
jno
stc
imul
jmp
filds
call
jae
jae
xchg
lods
xor
outsb
sub
or
repz
test
iret
in
jmp
mov
ljmp
test
repz
cld
aaa
subb
xor
stos
push
stos
sub
jbe
sub
mov
out
or
test
mov
hlt
cld
imul
mov
das
std
jno
imul
shr
or
outsb
cs
insl
hlt
push
imul
repnz
stos
imul
das
lcall
cs
test
repz
sti
jle
jge
jns
cmp
mov
sub
add
and
ja
pop
scas
test
frstor
xchg
ret
arpl
push
hlt
mov
negb
cmc
sahf
addl
mov
ljmp
ja
lret
aas
ret
xchg
mov
mov
ja
lcall
and
jae
jo
push
push
clts
push
or
ja
xchg
movsb
or
in
ret
mov
sub
xchg
in
jo
aam
movsl
mov
xchg
test
jns
out
sub
dec
out
mov
ja
int
sarb
or
mov
stos
inc
dec
lods
mov
lds
xorb
jmp
leave
mov
loope
mov
xchg
iret
jno
sar
mov
push
xchg
fs
inc
inc
scas
fistpll
rorl
cmp
xchg
ss
jnp
std
mov
lret
mov
sub
clc
lock
add
mov
call
cmpsl
push
or
mov
sbb
repnz
or
mov
inc
or
pop
xchg
inc
mov
jl
mov
in
sub
inc
jo
dec
mov
lret
mov
push
jns
jo
enter
call
fwait
out
repnz
inc
ljmp
dec
faddl
jo
xchg
in
nop
ljmp
rorb
or
jno
jo
ja
push
sub
jl
sbb
aaa
js
adcl
adc
sub
lea
or
clc
aad
repz
jmp
movsl
rclb
jge
inc
call
xchg
xchg
test
push
lods
or
sub
adc
inc
ja
jo
into
in
mov
cmc
jno
jno
inc
and
mov
aam
mov
sub
xchg
out
bound
xchg
jns
insb
push
mov
mov
and
ljmp
xchg
stos
pop
mov
shrl
inc
jb
jecxz
xor
jmp
sti
push
and
mov
mov
cmp
add
jmp
lahf
push
int
sub
sti
or
pop
das
inc
ficoml
xor
ffree
pop
push
imul
stos
adc
mov
cli
rclb
ds
daa
arpl
cltd
sbbb
adc
adc
lret
hlt
cltd
mov
mov
ret
rolb
add
jl
fbld
mov
sti
ss
add
xor
popa
or
jno
cmpsb
out
int3
int
dec
aam
xchg
sub
xchg
add
push
xchg
fsubrs
sub
jge
xlat
jb
jae
jle
ds
jp
lret
inc
out
scas
xor
xchg
sub
push
xchg
xchg
push
xlat
pop
mov
sub
rcpps
jns
sub
lret
fisttpll
cmp
jns
out
aas
lods
and
and
push
fs
xchg
mov
jg
imul
pop
and
mov
dec
cmp
xor
xor
pop
inc
inc
ficompl
jbe
jp
sbb
mov
inc
adc
bound
add
adc
aaa
cli
xorb
mov
inc
lock
outsl
adc
and
int
dec
imul
cmc
mov
ja
dec
iret
adc
mov
loope
push
pop
aas
sub
fs
jg
lret
addr16
ja
pop
loopne
jne
pop
ljmp
mov
adc
jne
test
call
xor
stc
in
inc
mov
stos
add
inc
sti
inc
test
cmp
add
hlt
pushf
jmp
inc
pushf
mov
xchg
sahf
push
mov
cmp
pop
in
push
adc
loope
push
push
mov
push
in
xchg
dec
adc
lods
pop
in
cmc
lcall
insl
mov
int
lahf
mov
mov
in
dec
in
xchg
adcl
xor
inc
xor
or
cmpsl
repnz
fnstenv
add
mov
pop
cli
insb
mov
mov
inc
cmpl
nop
clc
mov
sub
outsl
jmp
mov
ljmp
outsl
push
lss
or
xlat
mov
add
ja
aas
test
cmp
push
mov
sub
pop
xchg
stos
cmp
mov
scas
sbb
ja
ljmp
mov
inc
jnp
dec
fs
dec
sbb
cmp
add
sub
or
es
lods
jge
sub
icebp
stos
pop
lock
ret
xchg
out
jmp
xor
addr16
xchg
xchg
push
aaa
mov
adc
jge
add
xchg
inc
xor
addl
ja
movsb
pop
pop
jne
mov
jl
and
rclb
aaa
push
jp
sbb
mov
cmp
xlat
notl
mov
shr
addr16
pop
repz
dec
iret
add
ja
fstpt
fcoms
jecxz
dec
outsl
out
call
and
or
add
inc
add
adc
inc
popf
scas
out
and
mov
jp
ficomps
pop
jmp
ja
rcrl
or
add
lahf
add
scas
cltd
jg
dec
push
popa
add
sti
mov
in
jp
insl
inc
sub
add
rclb
mov
mov
lea
cli
cmp
out
cmp
push
mov
push
xchg
and
inc
xor
inc
xorb
outsb
aad
xchg
mov
inc
inc
xchg
inc
jbe
popf
ret
sub
adc
dec
bound
xor
mov
lock
or
mov
inc
repnz
out
dec
pop
gs
adc
add
ja
pop
adc
xchg
mov
lock
mov
daa
int
jnp
mov
mov
sub
mov
popf
jecxz
mov
sub
xchg
out
pop
push
ja
aas
xor
cmpsl
lds
xchg
jmp
inc
pop
add
push
dec
lahf
xchg
sbb
adc
adcb
mov
mov
cmp
lahf
call
push
filds
adc
test
or
nop
fcoms
dec
xor
int3
pop
sbb
add
mov
add
outsl
stc
adc
loopne
lret
outsl
imul
push
pop
stc
mov
xor
clc
mov
outsl
jns
xor
jne
cs
imulb
and
mov
faddl
shll
mov
xchg
repnz
push
and
mov
das
mov
mov
mov
ss
insl
adc
imul
or
stos
inc
xor
bound
addr16
hlt
jo
inc
mov
aas
inc
jns
mov
int
push
int3
jo
movsb
mov
xchg
add
dec
lret
mov
imul
outsb
aaa
adc
mov
cmovb
xor
adc
in
adc
fidivrs
mov
out
inc
jecxz
xchg
sbb
or
cli
or
insb
lea
push
lcall
ja
int
mov
mov
daa
movb
jno
mov
jo
movsb
and
or
dec
adc
sub
roll
cmp
les
pop
adcl
movb
call
cmp
or
xor
in
and
xchg
shr
and
mov
xor
mov
ss
add
inc
sbb
sbb
fisttpll
shrb
pop
repz
icebp
gs
imul
sub
xchg
add
shlb
insl
loopne
xlat
loop
push
pop
stos
mov
std
xor
test
sbb
aaa
cmc
nop
add
jno
sbb
inc
push
jmp
les
and
inc
add
fstl
pop
cmc
add
repz
push
xor
sar
xchg
repz
data16
and
xchg
mov
arpl
pop
lret
aaa
xchg
leave
lods
push
ja
adcb
adc
jo
scas
and
gs
push
dec
cmpsb
imul
sub
cmp
inc
add
cltd
sub
push
pop
lods
mov
mov
int3
rorb
aam
adc
mov
popf
sub
aaa
jge
jno
das
in
cmp
add
mov
fcomps
push
xchg
lods
inc
sbb
sbbl
and
sahf
sbb
mov
outsb
cltd
test
mov
pop
xchg
or
cmp
icebp
stos
fidivrl
mov
fsubr
ss
shrl
insb
and
or
cmpsb
or
mov
cmp
jo
jge
adc
ss
fnstenv
and
in
int3
mov
sbb
xor
or
adcl
stc
loopne
in
cld
insl
add
int3
lret
sarl
icebp
in
pop
or
lret
xor
mov
es
or
leave
not
sub
icebp
lea
je
mov
popf
xchg
mov
cmp
scas
ja
loop
cmc
jge
mov
loop
adc
call
stc
and
imul
mov
pop
and
cld
and
jmp
call
imul
leave
adc
enter
rclb
jb
fsubrs
mov
xor
cmp
popf
movsl
dec
addr16
repz
imul
fwait
sub
add
clc
xlat
shll
mov
mov
out
sub
sub
lret
mov
add
jno
repnz
jmp
test
je
jae
dec
je
jmp
and
cmp
fimull
sub
add
scas
or
outsl
mov
jl
inc
imul
adc
pop
and
add
ja
or
jno
mov
pop
subl
lods
out
jle
sub
imul
mov
jmp
dec
in
lock
loope
lret
jne
rcrl
aad
ljmp
mov
pop
xchg
ss
outsb
mov
stos
test
lock
aaa
and
sbb
sarl
pop
orl
push
push
rorb
adc
insb
mov
pop
mov
out
popa
push
int
call
negb
xor
add
ja
add
ljmp
pop
xchg
mov
mov
or
sub
ja
fimull
out
fwait
insb
adc
pop
mov
rolb
mov
mov
sub
stos
sub
mov
lahf
lahf
ljmp
jae
mov
push
cmp
adc
add
push
in
sbb
in
imul
imul
cmp
imul
jo
lea
arpl
call
xor
push
loopne
fisubrs
and
pop
call
push
shll
inc
test
mov
or
fldt
pop
pop
xor
push
mov
ja
ljmp
mov
pop
adc
dec
push
jae
aas
mov
jne
cmp
fisubrs
pop
inc
mov
jbe
arpl
mov
mov
add
and
inc
mov
cmp
imul
aas
xchg
fs
loope
fcompl
in
clc
and
mov
loopne
adc
fwait
mov
jl
or
js
dec
push
pop
lret
sub
test
cltd
pop
fisubrs
or
mov
pop
call
out
inc
sub
jns
aas
ss
dec
mov
pop
mov
aaa
call
add
cltd
xor
addb
mov
or
sub
push
call
insl
inc
adc
xchg
xor
jmp
movsl
sti
pop
std
mov
pop
cmp
repnz
dec
dec
xchg
sub
pop
rorb
sub
xchg
int3
mov
aaa
int3
xlat
sbb
or
aam
pop
sub
out
repz
mov
in
add
mov
push
jns
loopne
out
jno
mov
cmp
dec
jo
mov
sbb
mov
inc
dec
add
push
in
jp
mov
loop
fcomp
cmpsl
addr16
insb
xchg
sub
in
sbb
pop
sahf
repz
sub
dec
lret
mov
adc
lods
test
fs
jp
jbe
mov
xor
pop
xchg
imul
pop
test
or
push
ja
xchg
shlb
imul
stos
pushf
push
mov
outsl
push
scas
data16
add
pop
lret
lods
add
mov
jmp
fwait
pop
lods
jp
lods
inc
and
lret
pop
ror
mov
sahf
daa
pop
in
push
sub
stc
inc
cmp
call
insl
push
mov
dec
and
adc
sub
lret
add
sbb
pop
outsb
popf
adc
jge
std
enter
subb
inc
jae
fidivrs
rep
jl
ja
sub
in
scas
inc
jo
push
movb
xor
adc
cltd
shl
mov
test
out
pusha
mov
mov
call
push
sbb
out
sbb
sahf
or
mov
push
cltd
xchg
add
je
mov
lods
icebp
xchg
adc
mov
cmp
push
loopne
add
jo
lock
lcall
rcll
in
sbb
and
sbb
xchg
jb
in
psllq
mov
std
aas
xor
dec
push
inc
imul
ja
notl
les
rol
cmp
push
xor
call
popa
std
push
dec
jns
cs
dec
xchg
lea
or
mov
cmpb
rorb
pop
mov
out
hlt
insb
stos
cmp
mov
icebp
cmp
rcl
adc
pop
push
lcall
jno
leave
sub
jmp
xchg
mov
fmull
mov
push
xorb
cmp
in
mov
fildl
stos
addl
mov
adc
hlt
wbinvd
mov
popf
je
mov
xchg
pop
ss
call
adc
jnp
fwait
sbb
jo
lret
repz
addl
ss
xor
sub
jmp
jb
stos
cltd
icebp
sub
ret
mov
out
mov
pop
jp
out
push
fsubrs
mov
movsl
repnz
ficompl
fwait
adc
pop
ljmp
dec
cmp
jnp
addr16
mov
sub
nop
jae
or
mov
push
or
or
in
mov
mov
inc
sub
pop
in
or
inc
shrl
insb
xor
or
and
imul
or
ljmp
inc
sub
mov
gs
out
or
nop
into
insl
mov
in
andl
loop
out
pop
or
adc
inc
pop
mov
mov
add
ljmp
push
push
pop
test
adc
ja
cmpb
mov
inc
fmulp
fs
and
ds
roll
push
not
sbb
dec
mov
mov
add
outsl
and
repz
push
xchg
in
fimuls
pop
ja
xchg
dec
das
into
jmp
popf
adc
rcrl
sbb
jo
lahf
cmp
adc
and
mov
ret
dec
sub
dec
out
pop
rcrl
imul
mov
xchg
lods
jnp
push
mov
out
mov
inc
sub
rolb
adc
mov
mov
or
mov
xor
jbe
add
or
aaa
xor
dec
loopne
or
leave
add
lret
sbb
push
repnz
stos
mov
or
insb
out
push
scas
and
sub
xchg
push
mov
imul
out
pop
jp
sub
lahf
daa
jmp
cmp
mov
and
jnp
inc
inc
cs
jg
orl
cltd
je
mov
insl
out
sbb
icebp
int3
mov
lret
xor
mov
idivl
cwtl
push
mov
jae
xchg
bound
xor
mov
push
mov
sub
jmp
adc
push
push
push
jbe
mov
lock
loope
push
nop
nop
jb
in
dec
fs
ret
je
shl
jge
scas
mov
js
jno
xchg
push
in
ret
sub
inc
cli
aas
fstpt
fadds
bound
push
push
mov
cmp
call
xchg
adc
mov
xchg
frstor
in
lea
mov
lahf
and
adc
repz
xchg
mov
daa
cmp
icebp
popa
cmp
repz
outsl
push
test
xchg
aam
or
pop
mov
cmp
addl
mov
repnz
js
push
add
cs
repz
cmp
cmpsb
dec
clc
dec
or
jb
inc
pusha
jb
inc
mov
jecxz
divl
sbb
cmpsb
iret
inc
push
test
js
inc
push
sub
stos
sbb
xchg
sub
push
pop
pop
stc
lods
push
int
mov
and
sahf
mov
int
or
add
xchg
push
lock
scas
shl
dec
jns
sub
nop
out
push
sub
xor
push
inc
mov
pop
or
mov
adcl
xor
enter
jl
jbe
push
dec
rorb
loopne
jno
mov
ds
sub
jns
mov
adc
and
lock
xchg
pop
mov
push
sahf
int
mov
ss
mov
enter
hlt
sub
jns
data16
add
push
lret
test
shlb
xchg
ljmp
scas
fwait
daa
jne
lock
push
inc
subb
cmpsb
push
add
or
pop
insl
jo
jge
mov
jmp
call
mov
imul
adcl
cmp
jl
inc
mov
sub
hlt
xchg
mov
push
push
ja
gs
add
xchg
dec
imul
stos
scas
test
xchg
jo
adc
iret
stos
mov
lock
inc
and
gs
pop
mov
popf
adc
popf
fcomi
enter
xchg
out
iret
mov
fiaddl
mov
icebp
pop
xor
loopne
pop
mull
cmpsl
sbb
push
pop
push
out
pop
fiadds
mov
movsl
js
mov
and
dec
fdivrl
popf
psubusw
or
xor
loopne
int3
dec
cltd
and
ret
xor
and
xchg
sbb
mov
mov
dec
sub
fptan
xchg
lods
jne
xchg
push
filds
lret
rol
mov
sub
sti
icebp
sbb
or
pop
aad
pop
aad
mov
pusha
movsl
push
cs
add
push
jno
aad
sarl
cmp
mov
ja
nop
pusha
or
out
loope
arpl
out
iret
xor
xchg
mov
popf
xchg
and
cmp
fst
sub
or
mov
xchg
add
sbb
add
xchg
xor
pop
loopne
adc
push
xlat
mov
cmp
fsubrl
push
stc
outsl
aaa
lcall
and
inc
or
jns
push
sbb
ja
jp
loope
mov
cli
pop
sahf
add
inc
inc
ss
or
leave
xchg
sbb
xor
ja
mov
jle
jne
insl
jb
cmpsl
lods
fldt
nop
mov
out
out
pop
xchg
jbe
mov
call
adc
in
ret
shll
mov
ja
and
fwait
xlat
dec
dec
adc
clc
mov
out
adc
push
push
movsl
adc
scas
adc
dec
js
and
lret
xchg
inc
push
or
fstl
inc
arpl
negb
cmp
ja
flds
add
push
jbe
adc
push
inc
pusha
iret
jns
lret
mov
cmpsl
cmp
sbb
xchg
jne
ja
dec
das
jns
stos
arpl
jge
idivb
mov
adc
jmp
add
shrl
ss
xor
imul
pop
xorb
pop
bswap
adc
flds
inc
insb
nop
xchg
lock
adc
jb
cmp
pop
mov
and
sub
int3
jbe
and
mov
mov
pop
xchg
pop
mulb
test
mov
aas
jae
add
inc
popa
inc
adc
jns
pop
mov
repz
or
pop
cmp
jge
cmp
sbb
test
es
sub
xor
adc
dec
xchg
and
iret
lea
in
pop
sti
and
mov
inc
mov
add
push
ja
lods
jo
jo
out
jbe
mov
pusha
jmp
imul
xchg
push
lcall
outsl
push
or
push
cli
imul
add
add
sbb
inc
out
pop
jns
rolb
mov
lods
int
sub
ja
out
rol
push
push
scas
or
cmp
add
std
imul
pop
inc
inc
xor
jns
push
adc
pusha
adc
pop
adc
ret
mov
xor
xor
adc
mov
clc
mov
ja
popl
cmc
push
movsb
es
push
std
inc
je
das
mov
inc
add
push
jecxz
sahf
pop
cmc
stos
xorl
sub
sub
sub
xor
and
cltd
xchg
jb
rorl
xchg
push
add
rolb
aaa
arpl
add
sub
bswap
sbbl
sarl
xorb
jl
loopne
and
lcall
push
mov
repnz
mov
xor
nop
adc
in
sub
aaa
in
cmpb
sub
cmpsl
jg
sbb
cmpsl
xor
push
xor
clc
idivl
mov
sbb
push
loope
clc
adcl
jno
movsb
and
int
mov
xor
mov
push
sbb
std
and
xor
jnp
rcll
adc
shll
jne
jb
cmp
push
mov
cmp
das
dec
hlt
sbb
xchg
sahf
loopnew
mov
sub
mov
shrl
mov
fisubrs
jge
cmc
imul
push
adc
mov
cmc
sar
sub
mov
dec
mov
out
repnz
xchg
pop
mov
lods
mov
shl
xor
fimuls
scas
loopne
dec
js
adc
xor
aas
lcall
insl
mov
mov
or
inc
out
shlb
and
and
adc
mov
ja
adcl
jb
out
mov
push
xor
or
dec
sub
cmc
addl
jb
mov
cmp
insl
or
sahf
repnz
push
je
cld
sbb
adc
insb
clc
mov
sahf
int3
mov
adc
mov
subl
aam
jl
imul
xor
pop
adc
sarb
out
jae
dec
aas
scas
or
clc
jge
inc
jge
ja
outsl
ficompl
push
ret
enter
jmp
cltd
loop
cmpsl
dec
loop
fisubrl
dec
push
popa
xchg
pop
orb
clc
outsl
adc
insl
sub
adc
loopne
je
insb
xorl
jnp
cmpsl
adc
xchg
adc
hlt
push
pusha
setb
pmaxsw
pop
or
dec
pop
rcrb
loope
orb
jnp
mov
sbb
rclb
nop
sub
sbb
mov
pop
clc
jno
lds
and
mov
notl
adc
in
jecxz
mov
fdivr
rcl
imul
cli
dec
adc
or
dec
insb
shll
lret
jns
dec
mov
scas
sbbb
jbe
and
insb
aaa
ja
cmp
xchg
pop
mov
scas
cmpsb
int
jle
in
clc
sub
add
adc
xor
xchg
mov
cs
fisubrs
shl
arpl
sahf
mov
lods
push
movq
inc
fiaddl
jne
xchg
xchg
imul
sbb
jbe
div
sub
hlt
lret
or
inc
dec
mov
cmp
push
lods
das
imul
and
cltd
repz
imul
dec
adc
push
call
aam
add
push
adc
into
push
sub
xlat
call
adcl
sub
pop
lea
test
mov
loope
flds
sbb
sbb
popa
push
fcoml
inc
mov
push
rcrb
ja
and
addb
sub
ss
into
bound
outsl
xorl
dec
icebp
sub
movsb
mov
lret
in
stos
fcmove
insb
mov
pop
or
jge
mov
and
cmpsl
jae
adc
sahf
dec
xchg
clc
ret
cmp
clc
mov
xchg
dec
mov
dec
into
rcrl
xchg
fbstp
and
fiaddl
sub
push
or
inc
xchg
add
jg
out
inc
pop
sub
roll
cmp
lahf
inc
adc
and
and
push
in
xadd
repnz
lea
lods
orl
fucomip
bound
mov
movsb
insl
jns
pop
mov
repnz
mov
mov
test
push
out
adc
inc
adc
negl
sbb
sbb
outsl
arpl
in
or
jno
sub
jo
repnz
rorl
aad
or
cmc
and
jnp
rcll
pusha
ja
dec
jne
or
mov
fcomi
cmp
roll
in
push
outsl
push
in
xchg
aas
dec
imul
mov
inc
sbb
rcl
hlt
xchg
cmovl
imul
push
push
dec
xchg
mov
jno
adc
adc
out
mov
add
outsl
lods
pop
shrl
jge
add
js
mov
out
mov
call
pop
nop
mov
push
ljmp
push
clc
ret
mov
inc
shrb
push
test
jmp
hlt
push
jne
mov
in
mull
out
inc
mov
lods
mov
outsb
inc
leave
jae
push
jnp
inc
out
loopne
ss
jo
or
mov
jecxz
fdiv
movsl
addr16
ja
sbb
ja
push
pop
in
xchg
adc
mov
dec
fwait
add
mov
push
sub
sub
pop
fnstenv
sarb
fdivl
xchg
pusha
pop
mov
sbb
enter
pop
aam
pusha
mov
push
dec
fisubrl
imul
sub
shlb
cltd
pop
fiaddl
mov
push
xchg
loopne
mov
in
xchg
stos
push
roll
pop
cmp
loop
subb
or
cmp
iret
test
mov
enter
push
imul
std
mov
jbe
xchg
xchg
mov
mov
or
jmp
js,pt
mov
stos
clc
adc
xchg
icebp
clc
aad
popf
add
lahf
popf
mov
push
push
dec
cmp
mov
loopne
test
enter
jp
inc
iret
sti
xchg
or
add
dec
int
xor
xlat
shll
inc
stos
movb
adc
scas
push
incl
pop
testb
jae
stc
in
or
mov
and
inc
xchg
sbb
xchg
jecxz
xlat
mov
xor
lds
adcl
jo
adc
outsl
lret
popf
sbb
or
stos
pop
cmc
xchg
mov
sti
adc
jno
popf
sbb
xor
outsl
andb
out
leave
sbb
out
mov
cmc
push
nop
jns
mov
test
loop
mov
cli
xor
sub
repz
flds
inc
adc
jne
add
fucompp
aaa
hlt
jno
push
cmpsl
pop
add
movsb
ret
imul
or
fs
jns
adc
dec
and
std
add
hlt
hlt
xor
and
adc
call
lcall
push
inc
sub
or
orb
fdivs
pop
dec
add
jne
stos
or
popa
xchg
inc
movsb
adc
arpl
or
mov
roll
inc
popa
loopne
notl
sbb
xor
xor
push
mov
sub
mov
jae
imul
lock
outsb
fistl
xchg
sbb
and
xlat
jne
andb
pop
call
ret
js
or
jmp
cmp
test
xlat
aas
in
xchg
and
ja
mov
out
sbb
outsl
nopl
stos
jecxz
dec
and
and
cli
pushf
push
xchg
pop
arpl
lock
shrb
cmp
dec
pop
out
inc
push
dec
ja
lods
in
cmp
fists
sbb
pop
jae
pop
fadds
adc
dec
sbb
cmp
leave
adc
jne
push
or
dec
xor
sti
adc
sbb
outsl
lret
fidivs
jbe
dec
pop
loope
clc
clc
cmp
aam
sub
sarb
scas
loopne
mov
lea
stc
adc
imul
sbb
in
cmpb
into
sub
dec
das
enter
loope
mov
cmp
stos
mov
pop
jne
ja
or
mov
sbb
inc
ja
or
jne
out
int
movsb
inc
scas
jo
adc
push
cmpsl
or
in
outsl
add
sub
enter
jg
fwait
bnd
loopne
int3
pop
int3
or
popf
imul
daa
add
jp
pop
loopne
lock
nop
mov
sub
rcrl
and
clc
push
xchg
shll
arpl
mov
repz
in
int
imul
and
cmp
repnz
jle
push
bound
push
adc
mov
push
loope
hlt
jnp
or
aad
shrb
and
mov
jo
and
mov
add
sub
xor
pop
and
test
test
sub
push
mov
cmp
adc
mov
xchg
bnd
add
mov
das
jecxz
pop
das
xchg
jecxz
xor
pop
fldcw
push
jne
hlt
adc
das
rolb
loopne
jge
push
mov
pushf
add
cmc
in
mov
sbb
ficompl
ljmp
std
bound
stc
xchg
loop
out
data16
jae
jae
xchg
mov
mov
shlb
add
movsl
xchg
mov
sarb
les
gs
and
imul
icebp
into
push
movsb
repnz
sub
and
mov
xchg
lea
rolb
xor
jg
popf
pop
pop
dec
into
les
fwait
sub
dec
mov
stc
xor
insb
cmp
push
out
jo
xor
ret
fwait
adc
mov
outsb
cmc
jne
xchg
fs
or
dec
in
jecxz
popa
jno
rorb
adc
stos
lretw
lret
cs
sub
adc
adc
ficomps
fstl
mov
cmc
out
jno
jno
call
sbb
out
sub
xchg
adc
out
aam
push
xchg
jae
icebp
pop
popf
xlat
adc
adcl
dec
out
mov
xor
cmp
std
mov
sbb
adcl
sbbl
mov
sbb
and
pushf
int3
push
add
cmp
stc
pop
mov
nop
pop
push
pusha
aam
xchg
icebp
out
ljmp
pop
fiaddl
inc
fldl
int
outsl
or
test
sbb
pop
jle
or
stc
cmpsl
mov
adc
ja
arpl
mov
insl
movsl
std
mov
scas
fcmovnb
aas
add
push
push
sbb
ja
lcall
lsl
fidivrl
fdiv
jnp
dec
push
js
cmp
popa
loope
adc
loop
testl
xor
add
xchg
or
call
in
sub
sub
test
push
jno
mov
xor
stos
fldl
ja
ret
neg
sbb
jo
cwtl
mov
lods
jns
cwtl
pop
pop
vphsubbw
adc
sti
or
ret
cmc
cs
lea
xchg
hlt
lcall
jno
cmp
pop
push
int
lods
xchg
stc
stos
ret
lods
cld
ja
and
xor
clc
loopne
mov
mov
mov
hlt
out
mov
popf
in
inc
adc
push
pop
out
out
shufps
and
jo
jns
mov
popf
imul
or
je
cltd
jno
repz
loop
dec
add
movsb
pusha
mov
xchg
mov
jns,pt
out
dec
outsl
sbb
mov
cmp
aam
in
push
stos
sahf
push
sbb
push
popf
pushf
lods
or
adc
add
jp
mov
push
in
mov
mov
push
push
icebp
mov
pop
add
sub
lds
mov
jge
push
xchg
mov
inc
call
int3
jae
mov
mov
or
repnz
push
das
lds
xchg
add
pop
in
and
iret
adc
stos
inc
or
adc
imul
imul
pop
sbb
divl
xor
ss
fcoml
addr16
pop
mov
mov
sbb
cmpl
add
enter
pop
push
dec
jmp
in
or
ret
in
xor
or
xor
xlat
and
cmpsb
and
and
jbe
sub
aas
xchg
lods
sbb
mov
push
xlat
insb
mov
xor
imul
pop
cmpl
or
pop
xlat
dec
push
jmp
jg
push
mov
mov
out
inc
add
mov
pop
out
push
icebp
xor
imul
mov
adc
sub
outsb
dec
mov
fisttpll
mov
imul
outsl
lret
repz
out
aam
in
lds
shlb
arpl
or
xchg
and
inc
pop
out
cmp
insb
sbb
fiadds
xchg
call
fcoml
mov
add
jbe
dec
sub
cs
sub
fsincos
out
or
or
xor
xchg
mov
mov
dec
xchg
repnz
add
xchg
cltd
inc
stos
aaa
xchg
std
adcl
mov
mov
ja
hlt
mov
push
xchg
xchg
pop
call
inc
rcll
jo
movsl
jp
cli
sub
call
nop
jmp
out
icebp
cmp
mov
call
in
dec
mov
mov
mov
xor
test
sbbl
or
out
je
ds
cmp
sub
sbb
out
mov
fdivrs
cli
mov
push
imul
xor
ficompl
xchg
jbe
ret
clc
jae
outsb
je
gs
fld
in
imul
dec
xlat
push
lahf
insl
iret
sbb
adc
sub
movsb
xor
pop
sub
test
stc
rolb
xchg
xchg
jns
movsl
in
jecxz
adc
sub
mov
mov
dec
in
cmp
hlt
sbb
dec
ja
aad
add
out
fstpt
mov
add
ds
rcrl
out
dec
aas
std
add
inc
shll
insl
repnz
pop
cmp
jns
xor
xor
inc
sbb
push
stos
mov
xchg
lea
mov
nop
ja
icebp
or
push
sbb
insl
or
or
jge
sbb
mov
gs
cmpb
push
in
ds
pop
adc
xchg
xchg
popa
xchg
add
dec
inc
inc
jb
xlat
cmp
sbb
jecxz
das
aas
add
lods
call
orb
add
nop
repnz
sbb
add
rclb
mov
pop
mov
sub
sub
push
mov
push
je
clc
cmp
pcmpeqd
clc
call
iret
and
cli
push
cvtpi2ps
in
and
aad
movsb
call
ja
push
cld
out
push
and
xorl
sub
sbbb
xor
sub
sbb
jp
mov
lods
xor
xor
bound
fsubrs
or
decb
xor
ljmp
lock
bound
mov
adc
loopne
int
shl
test
mov
scas
mov
or
jb,pn
pushl
stc
js
or
aad
inc
push
fs
xchg
and
adc
mov
insb
fmuls
or
xchg
cmp
jmp
fcomps
nop
push
es
inc
and
xchg
mov
jns
cmpsb
fsts
into
xchg
sbb
lds
jmp
xchg
xchg
pushf
jo
ret
ja
inc
or
or
add
rclb
hlt
adc
jns
fdivrs
fsubs
ljmp
push
add
ss
cld
popf
lret
and
jne
test
mov
add
pushf
jmp
ja
gs
sub
mov
push
pop
sahf
movsb
inc
cmp
and
mov
loopne
xlat
mov
jb
lock
shrb
decl
mov
call
stos
jb
xchg
shll
and
cmpsb
pop
mov
enter
lods
adc
sub
test
outsb
xchg
je
jg
out
xchg
lret
add
pusha
sub
outsl
push
push
jecxz
idiv
loope
cmc
clc
jo
pop
jns
dec
xor
mov
movsb
push
popf
push
insl
jecxz
mov
push
pop
cmp
imul
mov
lret
ja
daa
pop
add
adc
fnstsw
cltd
push
cmpsl
xchg
dec
mov
xchg
mov
jo
mov
sbb
sar
mov
inc
push
cmc
loopne
jge
ret
int
shrb
lea
or
insb
imul
repnz
push
jno
aas
insl
in
cmc
xor
push
in
mov
in
repnz
jbe
jae
icebp
call
add
sub
xor
adc
repnz
sbb
lods
jo
ds
jno,pn
out
xor
adc
shl
or
push
lods
mov
jno
fcoms
pop
in
push
sub
mov
or
outsb
sub
jno
test
in
push
xchg
jno
repnz
repz
xor
add
jne
add
add
sub
xor
xor
xor
fnsave
cli
jb
add
sub
sub
outsl
xor
jno
jo
ljmp
sbb
sbb
icebp
imul
jno,pn
in
imul
cmc
fucomp
xorb
xor
insb
out
jb
jbe
out
xchg
dec
sti
adc
mov
outsl
pop
jae
repz
mov
loopne
outsl
hlt
clc
in
cmp
xor
xor
icebp
jb
or
xor
add
add
add
repnz
shll
mov
jmp
stos
or
jmp
sub
sub
jno
cs
push
push
cld
or
imul
lea
hlt
lea
add
and
outsb
xor
mov
jmp
sub
repnz
lods
addb
sub
sub
xor
adc
jnp
lods
sub
je
mov
ja
mov
mov
xor
repnz
jno
cld
mov
insb
xor
jmp
xor
call
jge
adc
insl
sub
xor
icebp
mov
jmp
jge
xorl
and
rep
sub
dec
sbb
imul
xor
insl
jmp
ljmp
xchg
xor
lock
call
xor
jmp
ret
loope
xchg
stc
ret
sub
cmpsl
insb
sbb
xlat
scas
and
lods
rorb
es
push
shlb
hlt
add
daa
stos
lods
xor
push
add
push
sub
jl
mov
mov
sub
cmp
insb
inc
cmpsl
test
dec
jge
je
mov
sbb
adc
mov
pop
mul
test
mov
or
dec
imul
outsl
mov
stos
movsb
lret
jnp
pop
mov
xchg
inc
xchg
test
xor
rcrb
pushf
and
stos
push
jno
scas
ja
repz
xor
nop
cmc
out
or
or
mov
push
xchg
outsb
push
loopne
xor
xor
cmp
imulb
push
and
adc
adc
pop
scas
push
sbb
and
sub
les
push
sbb
dec
adc
enter
pop
les
sbb
sarb
into
fstl
mov
adc
xchg
push
adc
sbb
adc
add
dec
rolb
sbb
cmp
jno
loop
sarl
mov
popf
rolb
or
sub
push
mov
imul
jl
cmp
loop
cmp
push
add
or
xchg
nop
jecxz
mov
mov
adc
fidivrs
mov
cmpsb
stos
movsl
jecxz
stos
cmpsb
faddl
int
push
in
xchg
outsb
out
push
movsb
nop
arpl
in
jae
push
xchg
les
dec
adc
sbb
ljmp
mov
adc
xchg
std
sbb
aad
push
pusha
clc
xchg
or
aaa
andb
aam
inc
fisubs
sbb
pop
cmc
mov
xchg
mov
xchg
and
outsl
in
sahf
test
jo
mov
into
push
out
mov
push
stos
xchg
lock
call
fisubrs
cmp
inc
xorl
xchg
or
lahf
std
stos
lods
or
cmpb
add
imul
mov
xchg
imul
sti
fisubrl
mov
cmc
push
pop
sub
in
xchg
sub
sub
or
xchg
jecxz
cmc
and
adc
or
loopne
dec
cmpsb
insl
stos
inc
inc
mov
mov
or
xor
jno
xlat
jmp
std
and
push
dec
testb
outsl
fwait
xchg
mov
jo
add
lods
mov
or
push
mov
adc
mul
push
insb
inc
jno
call
adc
inc
subb
cmp
jge
xchg
xor
sbb
push
mov
and
repz
ja
push
and
les
loope
xor
into
nop
dec
and
mov
add
jecxz
cs
xor
ljmp
xchg
push
inc
dec
loope
xor
xlat
sub
adc
pop
push
out
pop
outsl
mov
inc
aas
fcomp
sub
stos
in
ret
daa
ret
lret
scas
fs
int3
jp
repz
and
xor
call
jns
sti
pop
adc
mov
jmp
mov
outsl
cmp
daa
orl
insl
add
pushl
sbb
out
mov
mov
aaa
xor
cmp
lahf
mov
clc
pop
push
lods
imul
xor
inc
and
cmp
xchg
add
jo
fidivrs
shlb
mov
add
xor
ja
fnop
jbe
loop
outsb
mov
daa
cmp
xor
sahf
insl
xor
or
ss
movsb
jne
divl
inc
sub
ja
ljmp
inc
loop
push
out
pop
jns
push
outsl
movsb
lea
push
inc
adc
xchg
inc
xor
add
shr
out
pop
clc
inc
push
adc
add
mov
mov
adc
fimuls
std
mov
stos
cmpsb
push
push
es
hlt
xchg
loopne
daa
icebp
adc
neg
call
push
clc
ret
in
shrb
xor
cmpsl
jnp
inc
stc
fistpll
aam
adcb
sub
push
into
js
lods
xor
add
lcall
test
pop
mov
jns
sahf
push
jb
es
cmp
jge
divl
or
adc
pop
mov
add
push
icebp
popa
push
mov
fbstp
out
arpl
mov
mov
movsb
mov
mov
fsubrp
add
dec
loope
mov
push
rclb
xchg
repz
sbb
js
pop
inc
mov
xchg
fcompl
aas
xchg
mov
dec
adc
test
insl
and
clc
mov
fstpt
jmp
gs
or
clc
jne
stos
iret
or
ja
xchg
inc
push
adc
xchg
jmp
lods
adc
daa
outsl
adc
xchg
bound
mov
fs
test
lds
mov
fidivrs
fwait
stos
and
cmp
imul
push
fdiv
mov
mov
shlb
rorb
cwtl
lods
pop
mov
cli
push
xchg
mov
sbb
sbb
mov
or
stos
pop
bswap
test
in
arpl
mov
dec
mov
push
cmp
mov
in
or
lods
call
xchg
lods
sar
xchg
sahf
ja
jae
push
scas
pop
adc
pusha
jns
sub
pop
dec
fwait
xchg
cwtl
mov
add
xchg
rclb
stos
shlb
test
cmp
sub
jnp
add
cmp
ja
movsb
sub
gs
addr16
pop
std
adc
mov
lret
cmp
cwtl
idiv
add
test
inc
or
push
js
ret
dec
inc
sbb
add
mov
stos
loope
inc
push
insb
in
jns
inc
insb
xor
jl
mov
or
adc
pop
sbb
add
xrelease
push
pushf
adc
in
push
dec
xor
fwait
xor
imulb
mov
testl
jmp
jle
pusha
or
aas
in
cmpb
mov
and
mov
xchg
ja
sub
xlat
mov
jb
aaa
fmull
mov
jl
add
jo
mov
jno
xor
push
jge
mov
testl
loope
fsubrs
and
cld
ret
stos
adc
movsl
push
out
xchg
std
push
test
adc
int3
inc
mov
loop
repnz
push
jecxz
pop
cmp
xchg
pop
pusha
inc
xchg
cmpl
and
lea
xchg
in
cmp
pop
lods
push
sub
mov
sub
mov
icebp
mov
sub
ja
jmp
jae
push
aaa
push
imul
lock
adcl
out
ljmp
fstp
push
icebp
jns
mov
sbb
xchg
aas
pop
test
repz
testb
jne
and
or
ret
sbb
icebp
out
mov
pop
xor
xlat
mov
xchg
out
cmp
mov
dec
ja
and
les
das
test
push
test
cli
ja
xchg
lock
daa
sub
call
sub
add
adcb
out
outsl
fldt
mov
pop
push
add
cmp
xor
nop
pop
and
xor
inc
jg
inc
push
repnz
repnz
lock
lret
jo
test
adc
pushf
mov
mov
sub
ds
inc
adc
inc
call
jns
sbb
sbbb
sbb
outsb
jno
inc
xchg
jmp
mov
fidivrs
addw
repz
loopne
out
jg
out
rcr
insl
inc
cltd
hlt
mov
pop
add
in
mov
pop
jns
adc
xorb
xor
fiaddl
push
jg
mov
das
mov
jno
xor
jo
dec
mov
mov
or
adc
push
push
ja
sub
add
sub
idiv
ljmp
mov
imul
or
out
nop
ss
jmp
or
xchg
push
push
adc
rclb
loopne
jnp
lods
cmpsl
popa
fbstp
leave
shrb
addb
xchg
aam
fsubrs
fsubr
into
imul
ja
int
xchg
cmc
out
mov
adc
aaa
data16
adc
sti
add
xor
jo
adcb
sub
test
inc
stos
sub
in
rcrl
sub
cmc
or
push
sub
adc
loopne
adc
jno
repz
enter
test
stc
test
cvtps2pi
ja
bound
dec
sub
pop
addb
mov
in
jae
dec
cmp
jecxz
shlb
inc
bound
test
js
ficompl
adc
insb
cmp
adc
into
jg
jo
fwait
stc
popa
cwtl
in
mov
out
addb
scas
cmp
loope
inc
xchg
gs
rorb
mov
ret
aam
imul
js
lret
mov
add
mov
adc
popl
jno
add
pop
fs
dec
mov
sbb
mov
and
mov
adc
xchg
fists
test
jmp
je
cmpsl
adc
jecxz
add
push
sahf
lcall
sub
xchg
cmc
mov
lods
loop
pusha
into
repnz
and
mov
cltd
mov
adc
or
outsb
lcall
js
mov
adc
or
lds
stc
int
mov
int
mov
addr16
xor
sub
daa
sub
add
clc
push
addl
out
push
arpl
pop
hlt
dec
jne
movsb
fildll
imul
ds
dec
push
call
sub
pop
mov
xor
jp
mov
xchg
cmp
repnz
test
dec
es
test
rolb
sbb
test
outsb
outsl
xor
xchg
jbe
inc
or
insl
sub
mov
loope
jmp
jbe
pop
xchg
xchg
movsb
cmp
pop
movsl
mov
jae
enter
adc
lcall
xor
xor
xchg
sub
xchg
jne
sub
nop
jae
scas
cmp
sarl
sbb
fdivl
mov
pop
subl
mov
shl
lods
cmp
push
mov
inc
or
pusha
test
jns
out
mov
adc
out
stc
jp
dec
cmp
std
cltd
push
out
or
inc
lods
mov
out
sbb
jle
imul
dec
cmp
cld
inc
xchg
sbb
xchg
in
jne
ja
fwait
sahf
and
sub
in
inc
in
test
or
cmp
cmp
pushf
fimuls
xchg
pop
ret
pop
push
cmp
push
jle
xchg
sub
jmp
jbe
add
fwait
sbb
call
movsb
imulb
adc
jo
and
xchg
xchg
dec
jne
cmp
xchg
xchg
out
mov
subb
ja
xor
xor
lea
fnsave
push
xchg
les
loope
fldcw
sub
pushf
ret
and
jne
stc
pop
mov
mov
loope
xchg
jecxz
aad
es
xchg
push
xor
out
lock
add
xchg
add
cmpsb
push
jge
hlt
sub
in
pop
push
or
xchg
ja
test
cmp
aaa
fiaddl
xor
xchg
pop
mov
xchg
and
inc
cld
mov
xchg
lock
xchg
xchg
mov
pop
sub
inc
repnz
dec
xor
xchg
xor
into
xchg
call
repnz
imul
movsl
mov
or
loop
mov
je
aas
mov
pop
and
jbe
jge
aad
push
xchg
fistl
ja
fisttpl
ja
xchg
es
dec
ret
jmp
adcb
xlat
into
lcall
mov
ja
aaa
sub
xchg
bound
sub
mov
scas
jge
movl
sub
xchg
clc
outsl
in
inc
popa
lea
sub
sub
out
gs
mov
jg
in
sub
push
jo
in
hlt
cmc
addb
test
add
stos
sbb
sarb
enter
and
xchg
cs
test
dec
je
push
imul
jbe
xor
out
leave
js
nop
incl
xor
add
movsb
or
icebp
pushf
push
xor
fisttps
xchg
out
sbb
mov
push
add
test
jl
inc
pop
mov
insl
pop
cwtl
outsb
sahf
out
leave
repnz
mov
or
rcrb
testl
xchg
addl
dec
outsb
adc
loope
rorb
or
addl
mov
adc
xor
or
loope
fsubs
push
insb
xchg
aas
std
jecxz
das
mov
or
aas
cmp
gs
xlat
push
jae
je
or
shr
fsubrp
mov
pop
lods
sub
shlb
inc
pushf
xor
popa
or
inc
out
ret
push
int
dec
mov
inc
clc
pavgb
andl
pushf
adc
test
adc
imull
fwait
cmpsb
insb
inc
add
lods
and
sub
fwait
in
xchg
mov
popf
flds
xchg
sub
sub
mov
cmp
cmp
lea
aas
mov
int3
cmpb
into
out
test
sub
les
pop
or
movsb
pop
pushf
insl
cwtl
xor
inc
xchg
out
outsb
or
dec
out
and
push
lds
mov
aam
nop
sub
add
outsb
scas
sub
ja
cli
xor
push
dec
add
sbb
jle
sub
cwtl
clts
loope
sbb
aaa
push
push
les
inc
jmp
lods
jle
cld
in
xchg
mov
int3
daa
repz
stos
add
ljmp
int
aas
push
mov
jno
jo
test
mov
test
int
ss
sar
jae
mov
clc
or
js
sub
addr16
inc
pop
jecxz
aam
add
mov
jl
xchg
push
jne
imul
into
cmpsb
enter
dec
ret
dec
xlat
pop
shrl
testb
in
inc
jmp
mov
adc
mov
frstor
or
xor
ljmp
idiv
mov
mov
push
lea
adcl
mov
sarb
xchg
mov
cmp
add
xchg
js
xchg
cmpsb
push
movsb
push
xchg
push
out
das
pop
push
mov
jns
jge
fnstsw
adc
push
nop
bound
mov
and
inc
pop
mov
xchg
neg
cmp
mov
xchg
outsb
cmc
sub
fiaddl
stos
pop
inc
jge
add
add
xchg
outsb
setae
adc
insl
mulps
xchg
pop
fnstcw
mov
aas
repz
sbb
sbb
ja
insl
andb
test
pop
jecxz
testl
push
dec
lea
or
xchg
div
outsl
jle
scas
psubusb
or
fisubrs
arpl
mov
ret
add
sarb
mov
or
fdivrp
pop
or
and
pushf
bound
push
leave
in
jne
in
add
in
or
loop
dec
in
push
int3
mov
in
cld
mov
sbb
mov
repz
dec
clc
inc
jae
dec
call
adc
sbb
inc
in
xchg
xchg
xchg
or
insl
in
icebp
mov
cwtl
icebp
pop
fimull
aas
in
outsl
adcb
adcl
push
and
jns
cltd
or
mov
int3
cmp
mov
xor
xchg
inc
rorl
push
add
add
lods
mov
int
pop
ljmp
lock
push
lds
fiadds
xorb
lds
add
jnp
movsl
or
sbb
mov
imul
fcompl
or
in
imul
xchg
adc
in
push
and
hlt
testl
pop
adc
push
lahf
mov
mov
xchg
stos
ret
jbe
nop
and
xor
ljmp
aas
cmp
xor
jle
cmpsl
ror
adc
xorb
push
pop
fiaddl
push
shrb
pop
scas
mov
mov
mov
mov
outsl
jns
insl
xchg
jno
shrb
and
sarl
push
jb
daa
jae
sbb
mov
out
mull
jb
add
clc
ja
jg
aam
std
mov
mov
xchg
add
lcall
lods
cltd
jmp
lea
aas
mov
pop
xchg
xor
stc
and
mov
cltd
jo
dec
mov
outsl
popa
in
lods
lret
adc
ja
xchg
sbbb
nop
xor
in
rolb
out
inc
pop
fists
adcb
in
ret
fldenv
les
jb
cmpsl
aaa
clc
adc
or
jbe
repz
adc
sti
idivl
push
inc
inc
mov
jns
into
xor
outsl
push
cli
xchg
std
or
mov
pusha
inc
sbb
lods
or
xchg
testl
out
push
ljmp
push
lret
in
out
jbe
imul
sub
jl
sti
jne
inc
cmp
mov
sbbb
je
mov
stos
clc
xor
and
ja
cmp
mov
sub
adc
add
mov
out
xor
rcrb
dec
xor
sub
loope
or
dec
mov
push
mov
mov
adc
lods
sbb
mov
dec
cltd
imul
bound
gs
lock
lea
push
mov
imul
sub
mov
mov
int
or
xor
ja
aad
sbb
outsl
cltd
fs
cmp
mov
repnz
notl
sub
push
mov
pop
mov
adc
adc
aam
insb
sub
inc
xchg
sarb
fdivs
and
fwait
jp
add
adc
sbb
push
pop
and
mov
xchg
jle
push
jns
aam
inc
scas
cmp
std
sub
aaa
push
or
scas
xorb
mov
xchg
aas
cmp
dec
push
xchg
add
add
mov
out
outsl
cld
in
pop
testb
sbb
out
xor
in
aam
pop
cmp
cmp
add
icebp
rcrl
rcl
adc
sbb
mov
pop
mov
adcl
repnz
pop
les
mov
nop
bound
jo
aam
bound
repnz
es
je
insl
ja
mov
add
imul
test
test
jo
lret
adc
ficoms
jbe
int
hlt
js
test
xchg
pop
or
add
xorl
ja
mov
ds
adc
call
repnz
mov
iret
fldenv
mov
aas
jno
cmp
sub
dec
enter
mov
ss
add
es
mov
mov
xor
jecxz
push
or
sub
adc
lea
mov
movsl
icebp
cltd
cmp
mov
adc
add
cmc
mov
push
xor
outsl
stos
push
int
or
hlt
xor
push
loope
shr
mov
or
cmpsl
in
mov
adc
jp
test
mov
arpl
paddq
out
cmp
xchg
roll
push
popf
add
es
rolb
out
cmp
and
ja
xor
add
hlt
icebp
cmp
sub
and
cmpsb
imul
lock
jbe
in
stos
lods
mov
clc
dec
aad
ss
pushw
add
pop
shll
xchg
iret
je
daa
sahf
movb
adc
sbb
add
mov
test
outsl
insl
or
stos
xor
push
jl
lea
jecxz
push
shrb
jae
cmpsl
mov
inc
mov
and
sbb
hlt
mov
shrl
pop
cmpsb
push
addl
push
adc
sbb
push
out
mov
mov
enter
sub
daa
push
pop
xchg
mov
iret
int3
lods
fidivrs
call
popf
jne
in
into
inc
xchg
icebp
push
icebp
sbbb
sbb
arpl
sbb
or
rcll
push
xor
mov
icebp
mov
stos
mov
xchg
out
pop
cli
icebp
test
sub
jno
add
imul
dec
icebp
adc
call
icebp
out
ds
icebp
int
icebp
xchg
icebp
mov
xor
icebp
sbb
repnz
or
lods
add
mov
pop
sub
xor
xchg
cld
lods
jno
mov
jno
adc
cmpsb
or
imul
js
xchg
jb
ja
lods
repnz
xchg
mov
movsl
jae
sub
pushl
xchg
imul
stc
jne
test
cmp
cmpsb
icebp
fcomi
jae
addr16
test
push
gs
shrb
ss
icebp
mov
jo
xor
repnz
pop
je
icebp
jae
call
xor
sub
push
test
das
xchg
scas
call
jbe
xor
xor
repnz
add
add
xor
push
outsl
add
out
outsb
mov
jmp
icebp
mov
or
ljmp
jae
dec
jne
or
or
cld
outsb
jge
jle
cmp
xor
push
call
or
cld
icebp
xor
jno
lods
xorl
cmp
xor
icebp
push
ss
xor
xor
inc
sub
jmp
idivl
inc
jno
xor
xor
cmc
jo
in
sub
xchg
mov
imul
sub
scas
sub
or
icebp
outsl
subl
lods
icebp
imul
lods
jge
sub
xor
stos
mov
sub
outsb
xchg
xor
insl
test
insl
sub
xor
scas
or
outsb
fdivl
jmp
nop
mov
outsl
or
or
popf
mov
jne
jg
repnz
std
add
out
lcall
jg
xor
xchg
sub
add
repz
xor
cmp
sub
int3
popa
ja
ss
jns
xchg
testl
pusha
outsl
xlat
aam
imul
sbb
mov
or
sub
out
cmpsl
jnp
mov
push
sbbl
sbb
adc
add
adc
arpl
sub
jno
pop
icebp
xor
xor
test
gs
inc
adc
push
cmp
mov
add
jle
das
add
fldl
mov
push
out
cmp
rorb
scas
fimuls
mov
imul
clc
out
xchg
stos
dec
repz
mov
xchg
mov
or
mov
stos
jmp
adc
rcr
in
jne
xchg
gs
lds
cwtl
cmpsl
repnz
dec
adc
inc
addr16
sub
mov
xor
test
add
sbb
add
and
fdivl
pop
or
pusha
and
push
aas
jb
push
inc
aaa
aaa
mov
cld
sbb
pop
inc
xchg
mov
mov
negb
add
das
mov
xchg
adc
loopne
jae
dec
jns
aas
jb
xor
std
stos
xchg
shr
xchg
push
cmp
pushl
xchg
inc
xlat
rol
aad
dec
dec
adc
lods
cmp
xchg
fildll
int
jl
fiadds
add
loopne
mov
xchg
int
jns
fbstp
mov
xchg
repz
and
dec
out
fwait
xor
mov
push
add
or
xor
xchg
in
mov
imull
lds
test
into
pop
mov
mov
stos
dec
testb
add
mov
in
int
add
iret
aaa
fcomps
sub
inc
mov
xor
orl
gs
cmp
mov
sbb
lea
cs
lea
je
int
popf
and
sub
dec
js
add
or
xchg
imul
pop
ret
imul
outsl
push
cmp
push
adc
out
adc
add
mov
lds
ja
ret
mov
adc
dec
arpl
or
imul
hlt
jb,pn
sar
dec
fimuls
subb
add
in
mov
jmp
hlt
ss
and
sub
aaa
movsl
mov
sub
lods
stos
sub
xchg
repnz
aas
in
jg
cli
xor
test
mov
jbe
pusha
and
push
imul
shlb
mov
insb
mov
fnstcw
push
mov
mov
les
outsl
shrl
das
xchg
jge
or
cld
popa
loope
ret
pusha
insb
push
out
or
ja
sub
xchg
das
fistpl
dec
mov
pop
xor
inc
jg
mov
lret
daa
mov
add
mov
and
xlat
xchg
xor
inc
xorb
incl
and
jne
loope
ja
xor
pop
outsb
rclb
scas
jne
pop
xchg
mov
insb
es
shufps
outsl
or
test
add
shr
mov
inc
xchg
push
jae
xlat
subl
jne
insb
rolb
inc
mov
hlt
push
aaa
loopne
sub
cwtl
cmp
jmp
ds
int
call
inc
mov
sbb
call
jge
ss
ds
das
mov
movsb
mov
jo
adc
daa
mov
adc
adc
sub
mov
fdivr
pop
sub
mov
ficoml
imul
add
sarb
adc
adc
sarl
pop
movl
inc
pop
jo
xor
enter
xor
sbb
outsl
sbb
inc
idivl
jl
adc
inc
xor
insl
fcoml
jns
hlt
mulb
cmp
xchg
or
icebp
cld
sbb
mov
cmp
xlat
outsl
mov
or
push
insl
mov
call
ja
stos
aad
mov
adc
and
out
sub
add
sti
mov
into
push
lret
sahf
addl
add
mov
add
push
xor
cmp
jno
mov
xchg
and
iret
push
adc
popa
ja
push
cli
mov
stos
inc
push
adc
mov
mov
aaa
xchg
mov
mov
pop
sbb
insl
test
mov
sbb
jecxz
dec
inc
les
bound
jb
pop
mov
push
cltd
cmp
fildll
dec
movsb
mov
dec
dec
dec
fsubr
xorb
push
cltd
mov
out
xchg
cs
lret
pop
cld
and
insl
xchg
out
adc
popa
xchg
call
jl
rcr
repz
enter
sub
xor
hlt
js
std
out
jg
daa
call
mov
fdiv
ja
sbb
mov
mov
aas
cmpsb
jne
push
mov
push
push
out
dec
test
mov
addr16
shrb
or
xchg
daa
and
inc
sub
cmp
ja
sbb
xchg
les
outsl
lock
add
enter
pop
out
mov
outsl
int3
adc
icebp
pop
aas
jecxz
clc
mov
pop
lods
outsl
or
mov
les
dec
inc
in
xor
clc
andb
jmp
and
or
divb
push
inc
add
add
adc
test
jnp
or
orb
and
xor
loope
les
cmc
outsl
rolb
cwtl
jne
lret
in
ret
outsl
push
xchg
inc
xchg
and
cmp
sub
inc
mov
add
mov
les
xchg
shrb
add
cmp
scas
mov
jb
jmp
repz
icebp
out
push
call
add
subl
jno
icebp
pop
imul
push
sbb
insb
mov
icebp
ja
jno
push
hlt
in
mov
jb
jmp
sbb
icebp
or
imul
pop
fs
div
xchg
repnz
jne
insb
xchg
jecxz
jae
lods
jno
dec
sbb
add
aam
leave
in
mov
sub
push
roll
jb
mov
xor
outsb
sub
jno
insb
das
cmp
mov
or
add
mov
lods
or
xor
sub
add
icebp
lock
lret
dec
dec
jmp
xchg
mov
je
push
loopne
repz
push
lods
dec
mov
out
cmc
test
add
jae
push
lds
fistpll
add
push
mov
icebp
xchg
jge
outsb
mov
insl
repz
sub
mov
jb
repz
sub
mov
push
stos
add
mov
mov
or
xor
xor
add
jno
popl
jb
or
sub
ds
inc
xor
hlt
in
jae
push
or
iret
daa
xchg
mov
repnz
or
mov
jno
mov
xchg
mov
xchg
out
xor
stos
sub
xor
jb
lods
adc
mov
push
rep
sub
mov
repz
das
sub
cmc
stc
stos
cmc
call
sub
std
stc
mov
mulb
push
jb
icebp
adc
mov
cld
icebp
mov
sub
push
jmp
sub
scas
cmp
xor
icebp
jl
push
push
mov
ss
in
icebp
lods
xor
inc
sub
out
jae
xor
stos
dec
mov
ljmp
sub
mov
sub
cmp
inc
js,pn
mov
inc
dec
push
lcall
push
pop
mov
test
popa
sbb
mov
jne
inc
mov
mov
pop
sub
mov
int3
and
pop
popf
ljmp
in
sub
adc
popf
jb
int3
out
clc
data16
xchg
loopne
xchg
adc
cmc
mov
add
ja
int
push
andb
mov
shr
cmpl
lahf
mov
sub
cmp
and
das
mov
popa
jo
out
dec
insb
sahf
sbb
push
adc
dec
jecxz
cmpsl
repnz
fcomip
and
outsb
or
test
xchg
aas
xchg
xor
cmp
jmp
jg
hlt
inc
or
out
sub
loop
cs
mov
enter
addr16
lock
fdivrs
add
insb
xchg
xor
outsl
daa
sbb
xlat
push
orl
pop
ja
mov
mov
xor
sub
push
mov
ficomps
gs
inc
mov
add
in
xchg
or
enter
or
and
xor
addl
pop
jge
enter
in
mov
mov
testl
mov
jnp
and
push
push
mov
sub
pop
and
fimull
int3
lds
sbb
ss
xchg
mov
inc
mov
lods
xor
divw
cltd
cmp
adc
adc
push
lret
add
ret
fucomp
dec
and
ss
mov
bound
test
and
xor
add
cmp
jge
fsub
adc
mov
fnstcw
int
inc
repnz
pushf
mov
xor
mov
arpl
push
mov
add
sbb
inc
lods
es
pusha
mov
adc
testb
orl
fbld
lods
imul
sbb
xchg
sti
adc
dec
rclb
jae
cmp
lock
and
divl
stos
test
out
dec
jp
adc
push
xchg
imul
stc
popf
pop
jecxz
shrb
jp
mov
fs
xor
add
xor
rcll
ja
inc
imul
and
xchg
mov
adc
xchg
mov
push
addr16
out
mov
pop
xchg
cmp
xchg
push
jle
rcll
scas
mov
mov
xor
pop
inc
sub
cmp
int
push
xchg
les
shl
xor
xchg
jge
inc
jns
cmp
das
fldt
and
mov
std
addr16
jnp
jno
add
push
pop
mov
in
mov
add
pop
outsl
popa
jnp
imul
mov
jmp
clc
push
popf
mov
inc
adc
int
xchg
ret
add
test
in
std
addl
loop
jge
jmp
mov
xchg
pop
in
bound
stos
xor
pop
pop
orb
push
lcall
dec
mov
adc
add
cmc
call
hlt
xor
ljmp
push
mov
sub
and
cmpl
sub
ja
arpl
mov
inc
mov
ja
jbe
rorl
xor
add
xchg
faddl
xor
out
fnsave
push
xor
jb
outsl
dec
rorl
inc
outsl
sahf
clc
push
jg
mov
stos
add
mov
clc
loope
pop
popf
negb
dec
sarl
push
cmpsl
xorl
sub
and
jae
dec
cmp
sub
pop
orps
ret
push
mov
mov
shr
cld
pop
xor
adc
ja
repnz
sub
out
shl
lods
and
sub
test
sub
sahf
shlb
rcr
je
ljmp
inc
jmp
lret
sbb
int
adcl
ja
js
jbe
sbb
jmp
xchg
mov
popf
xchg
mull
rclb
negl
inc
js
xor
out
call
add
insb
jbe
repz
inc
aas
lods
pop
fucomp
shlb
fisttpl
xchg
lock
add
nop
les
sbb
insl
dec
out
insb
and
pop
mov
xor
fucom
mov
lock
or
inc
cwtl
jge
mov
dec
mov
cmp
and
xchg
sub
mov
mov
rorl
cli
insl
mov
inc
mov
popf
ds
out
dec
fidivrs
insl
cmpsl
fcomi
mov
sbb
rolb
ds
xlat
xor
push
lret
test
out
xchg
mov
stos
jae
in
xchg
pop
cmp
loopne
cmc
mov
push
out
add
and
pusha
and
out
insb
jb
aad
add
lea
ss
pop
orl
orl
inc
ja
repz
adc
jae
icebp
jp
stc
cli
js
popf
test
or
mov
jo
imul
hlt
xor
xor
add
cmp
dec
mulb
lds
mov
inc
xorb
mov
lods
aad
mov
xchg
inc
xor
aam
sbb
add
pop
test
mov
bound
push
xor
sub
jl
lret
dec
sahf
push
push
mov
ljmp
jecxz
cmp
add
outsl
test
cmpsl
mov
std
inc
mov
jmp
inc
mov
xchg
push
and
ja
out
std
mov
int
fwait
push
shll
subl
push
shr
jle
cmp
or
lods
mov
lds
mov
nop
cmpsl
je
arpl
fisttpll
lds
sbbb
ja
movsl
jne
and
ss
mov
movsl
xchg
jbe
ret
ja
in
or
popf
ljmp
jo
jbe
xchg
push
cs
imul
adc
xchg
out
pop
inc
mov
mov
mov
pusha
sub
icebp
xchg
daa
ret
cmp
xor
movsb
add
mov
iret
push
xor
mov
pusha
scas
adc
fcomps
aam
inc
notb
test
jae
mov
bound
xlat
xor
push
inc
in
push
mov
ss
push
xchg
test
jo
bound
mov
adc
jle
jl
mov
pop
pop
pop
mov
mul
fadd
xor
pop
push
or
xchg
in
aaa
dec
in
mov
sbb
push
leave
dec
add
push
rcrl
or
stc
mov
jmp
and
adc
inc
pop
pop
std
sbb
fsubrs
movb
and
xor
loopne
xchg
cld
lock
adc
movsb
mov
roll
and
aam
mov
add
jl
jne
outsl
dec
andl
es
in
ljmp
outsl
inc
mov
mov
cmp
iret
or
xchg
jge
jae
adc
cmpb
ljmp
jbe
sbbb
repz
inc
orb
add
xorl
pop
rclb
negl
in
leave
mov
xchg
push
ret
pop
movsb
pop
mov
xor
xor
test
cmp
mov
std
scas
fidivs
imul
divl
movsb
add
xorb
sahf
dec
clc
and
mov
inc
push
sub
clc
jb
out
xchg
inc
mov
test
cmpsl
out
test
bound
adc
sarb
sarb
jnp
and
adc
xchg
and
nop
or
pop
dec
insb
leave
inc
nop
dec
mov
jb
sbb
sub
pop
add
adc
out
outsb
cmpsb
jb
push
ds
cmp
cli
cmpsl
xchg
mov
cli
mov
movb
or
imul
inc
enter
shll
adc
sarb
sub
cs
adc
jb
pop
shr
inc
push
pop
push
mov
inc
mov
dec
pop
stos
mov
in
dec
xchg
sub
pop
cmpsb
jb
fsubrl
jb
iret
call
dec
push
jno
lahf
repnz
sbb
jbe
icebp
outsb
mov
jb
add
insw
icebp
stc
in
outsl
fisttpl
inc
jno
js
pop
adc
repnz
in
jmp
addr16
mov
push
ja
test
add
xor
sub
mov
xor
insl
jae
sbb
cmp
mov
popa
fwait
repz
sub
in
mov
or
adc
jno
int3
shll
mov
je
sub
cmc
ss
hlt
test
add
push
mov
repnz
sub
jbe
mov
mov
lods
xor
xor
hlt
ljmp
cmp
sub
inc
daa
sub
push
inc
xor
add
repnz
sbb
sub
in
mov
cs
sub
scas
jno
pop
lcall
daa
mov
sub
scas
andl
xorb
sub
push
jns
jno
repnz
sub
push
jge
out
mov
or
jno
imul
das
cmp
jp
lea
repz
fbld
scas
jae
sub
notl
in
jno
mov
subl
cs
jmp
stos
dec
hlt
insl
mov
imul
push
das
cmp
sub
stos
cmp
divl
mov
lods
jae,pn
jno
dec
icebp
or
push
in
inc
jmp
mov
cmc
inc
xor
hlt
sub
mov
mov
xchg
adc
in
sbb
xor
sub
lods
test
mov
jne
outsl
dec
movsb
cli
frstor
movsb
cmc
inc
push
inc
add
leave
fnstsw
mov
xchg
and
pop
ljmp
mov
es
jne
sub
sub
ja
jmp
dec
es
cmc
outsl
leave
call
fcmove
repnz
rcr
push
ror
xchg
or
in
loope
pop
xchg
pmaxub
ja
cmp
push
mov
cltd
xor
scas
xor
jne
xlat
scas
xchg
sahf
push
mov
mov
inc
fstpt
imul
sub
mov
push
in
or
outsb
mov
sub
imul
scas
sti
or
int3
jp
pop
lret
xor
add
pop
xor
mov
addb
push
notb
fs
jae
push
push
ja
into
stos
pop
inc
dec
push
cli
mov
cmp
inc
cmp
pop
add
push
xor
inc
sbbl
arpl
push
les
popf
imul
inc
test
mov
rclb
sbb
cmp
enter
xor
loope
stos
mov
and
loop
mov
push
pop
adc
outsb
or
pop
cli
insl
loope
push
stc
jno
xor
lods
mov
sub
aaa
loope
movsl
in
pushf
out
aam
add
xchg
cld
mov
jns
mov
sub
repz
add
mov
lock
jl
cli
xchg
mov
ret
daa
mov
js
jns
icebp
ja
fstpl
hlt
loop
add
or
jno
mov
pop
add
fnstcw
aaa
aad
dec
pop
xchg
cli
xchg
xlat
jae
in
insl
sbb
fwait
sbb
leave
mov
jbe
pop
inc
xchg
push
dec
lock
push
mov
xchg
inc
xchg
sub
pop
push
test
and
sbbb
outsl
jbe
adc
pop
add
sub
insl
rclb
call
push
nop
inc
adc
in
sbb
repz
js
fsubrl
test
mov
icebp
push
outsl
mov
ja
cmp
mov
les
adc
xadd
popf
adc
cltd
out
into
sub
jno
add
mov
mov
popf
in
xchg
mov
dec
test
and
mov
inc
jmp
rol
mov
orl
test
inc
adc
pop
sub
push
and
lds
or
dec
enter
push
popa
into
movsb
addr16
dec
popf
adc
jbe
lods
ja
mov
cltd
push
ja
jmp
into
mov
lods
sbb
lret
mov
arpl
and
mov
sbb
sub
pop
sub
fnstenv
out
xchg
ja
fistpll
jecxz
filds
inc
inc
xchg
imul
in
add
int
call
mov
mov
cli
inc
pushf
daa
sub
repz
dec
imull
int
sub
call
hlt
pop
outsl
aam
cmp
inc
int
adc
and
push
xor
xlat
jns
push
or
lret
inc
lret
es
std
dec
xor
mov
cmpsl
fwait
fwait
mov
inc
lcall
jne
nop
xor
imul
and
add
in
inc
sub
inc
mov
inc
sub
add
and
fsub
mov
pop
mov
pop
mov
aam
out
mov
aaa
in
or
xor
add
sbbl
jae
jno
jae
add
int
idivl
mov
or
aas
cmpsl
push
mov
push
mov
sub
out
mov
loopne
mov
mov
push
mov
roll
in
lahf
scas
xlat
push
mov
repnz
std
push
pushf
sub
mov
add
out
cmp
mov
les
mov
lds
stos
stos
xor
adc
add
ja
das
cmp
mov
add
jno
popf
mov
adc
xchg
adcl
or
cltd
sub
add
jns
mov
nop
les
pushf
pop
jns
enter
cmp
into
les
hlt
xor
popf
mov
pop
cmp
adc
shlb
aas
push
dec
fcoms
sub
popa
push
push
das
sbb
jl
scas
fmuls
ja
lret
dec
xchg
test
add
sub
cmp
es
sub
xor
iret
push
repnz
test
movsl
dec
mov
inc
xor
clc
mov
xchg
jns
stos
sar
jge
int3
dec
lock
les
stos
out
adcl
mov
dec
sahf
popa
xor
fadd
mov
push
sub
ja
inc
push
inc
popf
jns
adc
mov
in
push
dec
xchg
xchg
sub
or
cmp
inc
dec
ja
test
test
cltd
sbb
pop
cs
jmp
popf
shlb
lds
repnz
jb
lcall
push
rcrb
insb
cmp
call
mov
rorl
sbb
sub
outsl
test
les
cmp
cmp
push
dec
push
lods
cwtl
dec
mov
lds
or
shll
add
jg
add
fistl
movsb
jge
mov
jnp
cmp
fdivr
imul
aaa
loop
stc
rclb
dec
cltd
jmp
pop
mov
lret
push
jge
rcr
test
gs
add
jnp
lea
push
test
ja
push
cmp
or
orl
add
xor
fidivl
out
adc
adc
or
sub
cmp
and
cmpsb
fwait
imul
mov
das
mov
inc
clc
out
pushf
inc
outsb
jae
lret
and
jbe
fistps
sahf
push
mov
ficoms
adc
insl
cmp
xchg
mov
test
mov
leave
xor
repz
hlt
stc
xchg
imul
or
add
jno
cmp
out
adc
cmpsb
je
push
icebp
cmp
mov
and
aas
pop
inc
cs
adc
push
adcb
int
popf
cli
sbb
lret
dec
sbb
arpl
fdivrl
pop
mov
ja
movsb
fisubrl
or
cwtl
outsl
mov
lahf
xchg
popa
xorl
test
ja
cld
push
iret
call
mov
jge
adc
adc
popf
in
xchg
adc
in
in
jecxz
out
pop
fstp
sub
xchg
in
xchg
mov
mov
sub
call
stos
mov
or
push
push
xorl
jbe
cmp
aam
aas
xchg
xor
xchg
inc
xchg
add
adc
inc
dec
lds
loope
popf
fidivrl
push
cmp
and
ljmp
push
adc
aaa
jecxz
or
outsl
aas
xchg
pop
mov
imul
mov
jge
push
aas
mov
aas
jo
push
xor
lret
repnz
and
push
aam
add
xchg
pushf
jae
inc
divb
adc
rclb
mov
test
orb
mov
jo
jl
mov
stos
rclb
cltd
or
ja
cmp
dec
fwait
stos
add
mov
add
add
mov
aaa
sbb
mov
xchg
add
cwtl
out
pushf
test
jmp
popf
lock
and
outsb
out
into
add
shlb
icebp
scas
and
lret
hlt
imul
cmp
test
mov
add
or
stos
or
jle
aaa
or
xor
push
mov
mov
ja
adc
mov
or
int3
sub
mov
vcvttss2si
jno
xor
xor
jno
jnp
in
cmpsl
xlat
mov
jmp
sub
push
dec
aaa
add
into
push
jnp
sbb
nop
inc
mov
bnd
stos
rorb
outsb
test
or
popa
sub
lret
mov
cwtl
xchg
outsl
aam
inc
push
mov
xor
lods
ja
inc
or
inc
cmp
outsb
sbb
arpl
cmp
or
fistpll
add
push
icebp
pusha
mov
imul
fsubl
push
idivb
add
jmp
repnz
inc
cmp
mov
add
push
repz
out
sti
jmp
enterw
popa
inc
xchg
xor
xchg
push
ds
push
mov
cli
mov
std
push
outsl
mov
xchg
mov
imul
pop
lret
or
and
das
jno
inc
mov
xchg
mov
fldt
lret
loopne
data16
out
xorb
les
cwtl
ret
cmp
loope
scas
cmc
sub
call
sub
mov
out
mov
pushf
push
sub
push
fcom
aaa
imul
cltd
aas
add
jo
mov
lods
jb
add
mov
and
or
rcll
hlt
sar
mov
pusha
lahf
aas
dec
mov
xor
and
pop
xor
push
sti
es
push
es
addl
pop
dec
push
xor
xor
sbb
adc
sbb
push
jne
jnp
push
leave
movl
xchg
jns
rcrl
inc
jle
stos
loope
adc
mov
test
test
mov
mov
xchg
lods
mov
dec
dec
call
jo
in
arpl
ljmp
hlt
outsl
xchg
jbe
xchg
repnz
mov
cmp
push
cmp
fwait
test
std
add
add
adcl
insb
jns
lcall
cwtl
pop
mov
xor
jb
or
xchg
ret
dec
cmp
outsl
dec
pop
or
add
dec
cwtl
testb
mov
mov
push
pop
xchg
xchg
cmpsl
push
sub
jg
mov
repnz
jne
xor
lcall
mov
loop
inc
mov
adc
xchg
xor
dec
int
cli
cwtl
xchg
inc
adc
or
xor
cli
mov
cmp
xchg
outsl
sbbb
daa
ret
fildl
daa
ja
repnz
test
and
adc
repnz
push
out
test
loop
fisttpll
iret
mov
dec
int3
sbb
lret
add
cs
sarb
inc
leave
pop
dec
xor
movb
test
jp
mov
dec
rcll
mov
or
and
iret
into
cmp
sbb
mov
sti
shll
pop
insb
test
push
jne
in
movsl
out
xchg
imul
pop
mov
sub
sub
hlt
xor
outsl
loope
ja
mov
jg
dec
xor
insb
sub
or
repnz
sbb
cmc
mov
ret
push
fnsave
imul
push
adc
push
sbbb
mov
mov
repnz
popf
cmpb
in
stc
into
icebp
jo
xchg
out
or
xorb
cmp
fsubrs
or
sub
test
mov
adc
pop
xor
xor
push
pop
inc
test
mov
pop
sahf
jno
in
loopne
xchg
stos
in
pop
jnp,pn
adc
lods
inc
js
add
xor
cmp
xorl
ds
shr
ljmp
adc
mov
add
addr16
jnp
jnp
xor
jl
mov
bnd
sbb
out
jae
jp
xchg
cmp
out
add
lahf
sbb
lods
or
mov
outsl
jmpw
clc
dec
sti
xchg
xor
sbb
add
dec
in
in
rorl
inc
daa
cmp
xlat
inc
xchg
icebp
shlb
dec
jne
popl
inc
iret
sbb
ss
jb
std
icebp
push
dec
fs
pop
ret
or
test
pop
xorb
ds
aaa
sti
insb
lods
in
repnz
jge
add
xorl
lret
dec
rcrb
jp
or
mov
sarl
adc
aas
cmc
add
out
stc
mov
std
in
jmp
js
int3
test
add
xlat
mov
pop
repz
inc
mov
fstpl
neg
bound
jbe
call
or
outsl
jg
inc
pop
add
jns
scas
jmp
addl
cwtl
sbb
shrb
push
pop
fwait
adc
ds
jecxz
sub
pop
adc
aaa
or
rorb
add
cmc
push
adc
adc
dec
jg
fsubrp
popf
mov
dec
dec
popa
pop
jo
dec
cmp
pop
in
daa
test
add
stos
fdivrs
pop
pushf
mov
dec
fnstsw
xor
cli
jl
into
ja
inc
xchg
lods
mov
into
xchg
add
and
je
cs
add
call
addr16
sub
pop
adc
jne
sbb
add
mov
sub
jo
dec
xlat
adc
xchg
pop
les
cwtl
mov
cmp
outsl
clc
mov
push
in
into
pop
jle
mov
out
loop
mov
xor
outsb
mov
xchg
jae
push
gs
mov
mov
mov
cmpsl
inc
mov
cld
or
jo
mov
cmp
les
inc
mov
lock
add
outsl
mov
sub
xchg
push
loopne
mov
into
aas
pop
dec
xor
cmp
inc
ja
inc
aam
out
push
pop
mov
pusha
xchg
or
or
loopne
shlb
pop
sbb
xchg
adc
fldt
icebp
jp
clc
outsl
ja
mov
outsb
popf
mov
jp
dec
adc
in
sub
ficompl
pop
adc
outsb
and
addb
cmc
pusha
add
dec
in
rorl
enter
lock
ja
rclb
mov
mov
cmp
add
shl
ficoml
in
fiaddl
mov
inc
and
daa
mov
pop
div
xor
mov
and
xchg
lcall
mov
movsl
decl
out
js
movsl
sbb
cmp
cs
mov
add
sub
jns
adc
cmp
fsubrl
jo
jge
sbb
or
xchg
pop
jmp
fstpt
shll
xor
ss
mov
inc
sbb
mov
cltd
mov
mov
push
andl
add
push
dec
sub
test
mov
dec
mov
add
add
iret
adc
hlt
jno
cmp
push
les
addr16
testl
xor
mov
mov
andl
js
imul
mov
xchg
bound
stc
ja
or
or
ss
aas
in
fdivp
shl
xchg
xchg
mov
cmp
pushf
out
sub
lods
adc
adc
jbe
cmp
call
mov
repz
xor
push
lahf
fdivrs
fcoms
js
inc
int3
je
adc
xchg
outsl
xchg
jns
push
push
add
add
mov
mov
cli
fdivl
push
frstor
repz
adc
mov
scas
ret
jbe
iret
out
add
hlt
mov
pop
dec
subl
insl
inc
pop
jbe
popf
lret
clc
std
xorl
test
adc
mov
lock
push
insb
inc
cwtl
addr16
int
or
popf
sub
test
jge
cmp
repnz
sub
cmc
mov
jne
pop
stos
movsb
ficoms
scas
mov
fnstenv
or
and
sub
mov
cmp
adc
adc
rcll
inc
mov
push
cli
inc
hlt
xchg
mov
ss
pusha
lock
movsl
jne
shll
mov
jg
mov
int
test
popf
xor
aaa
mov
cmpb
add
and
jp
outsb
jmp
xlat
imul
sbb
push
in
lahf
fiadds
lret
lcall
dec
mov
outsl
nop
test
mov
adc
outsl
jl
adc
shl
sub
bound
push
popf
in
adc
add
rorl
ret
xchg
icebp
add
mov
mov
mov
mov
outsl
push
outsl
push
adc
dec
sbb
xor
cltd
adc
jo
je
inc
push
fadds
pop
add
data16
dec
roll
jno
inc
mov
mov
mov
push
ja
push
psllq
in
push
dec
ja
jecxz
es
out
std
in
gs
leave
movsb
lods
nop
call
inc
repz
add
xchg
fucom
jae
xor
xchg
ds
sti
jg
cmp
repz
sahf
jnp
sub
jno
imul
jmp
aas
dec
pop
ret
jnp
mov
inc
scas
imul
inc
adc
xchg
rol
inc
orl
adc
inc
fmulp
aam
inc
push
xchg
popa
xchg
lods
pop
jb
icebp
jp
aam
dec
jne
repnz
lret
leave
mov
fidivs
push
out
jae
jb
ja
dec
jne
mov
cmp
call
out
or
pop
scas
mov
push
iret
dec
arpl
in
mov
or
mov
push
jno
and
inc
mov
inc
jge
rorb
jg
xorl
push
les
fisubrl
jecxz
add
jae
cltd
adc
push
sub
xlat
cld
mov
test
clc
push
xchg
xchg
xor
inc
jo
dec
in
into
dec
loope
outsl
xchg
into
adc
and
push
cmp
loopne
sbb
lock
push
ljmp
imul
notl
sbb
mov
cmp
xchg
aas
mov
add
push
lcall
pop
mov
add
push
mov
jb
push
sub
outsb
stos
xlat
mov
ljmp
push
out
insl
lods
outsb
ficomps
aaa
dec
push
js
imul
ja
fwait
sub
mov
ficoml
xchg
imul
bound
add
mov
cmp
jecxz
lods
enter
movsb
or
lock
sbb
pop
xlat
dec
lods
testb
andb
clc
sbb
cltd
sub
fstpt
mov
adc
mul
add
shr
lods
stos
ss
outsl
hlt
and
pop
pop
jbe
in
jns
pop
fiadds
push
in
int
sbb
loopne
mov
loope
fdivrs
push
fisttpll
mov
cltd
jae
addb
test
loop
mov
insb
leave
in
iret
and
in
adc
gs
sbb
aas
lods
inc
icebp
cmp
push
hlt
xor
ss
dec
adc
into
cmc
mov
mulb
xchg
lcall
xorb
stc
icebp
xchg
jns
dec
push
jl
sahf
imul
xlat
mov
mov
cmc
dec
hlt
jns
loope
sub
cmp
mov
push
int3
push
mov
inc
xchg
mov
add
addb
insb
outsb
data16
and
cmp
inc
das
cmp
adc
mov
jo
mov
mov
cmpl
dec
dec
dec
cmpl
add
xchg
add
shrb
jnp
into
notb
pop
jbe
xor
sbb
sub
ja
repnz
adc
mov
repnz
cs
mov
push
or
cmc
test
xchg
stos
cmp
mov
cld
test
pop
jae
rorb
cmp
adc
clc
pop
andl
scas
push
mov
xor
pop
lods
out
and
push
or
ja
popa
adc
fidivrs
pusha
pop
jnp
mov
ret
pusha
lcall
das
xor
mov
lahf
xor
xchg
movsl
stos
mov
xlat
mov
jecxz
repz
mov
loop
or
adc
hlt
in
cmp
stos
std
push
mov
call
pop
add
and
mov
fimull
addl
pusha
sub
rcl
out
shlb
sarb
or
rorl
pushf
notl
mov
adcl
pushf
or
rclb
adc
stc
xor
xor
into
mov
and
stos
jns
push
xchg
cmpl
popf
test
xor
add
jne
sub
stos
in
shrl
scas
or
icebp
mov
xchg
mov
enter
inc
add
and
lock
xchg
hlt
push
inc
cmc
xlat
daa
mov
xchg
adc
sub
xor
sub
popf
sbb
adc
mov
fcmovb
pusha
sbb
imul
cmp
sub
jl
popf
mov
sbb
roll
xor
cmp
andl
cmc
into
arpl
arpl
addr16
lods
xchg
and
push
cmp
or
mov
sbb
int
fidivs
test
shlb
xor
pop
push
push
ret
ficomps
cmpsl
jecxz
lcall
in
push
or
mov
cmp
cmp
repz
mov
push
cmpsl
ss
cld
sub
or
popa
popf
sbb
ljmp
jecxz
xlat
rorl
movsb
test
inc
outsb
cmpsl
push
dec
popf
xchg
ret
mov
test
outsl
rcr
dec
js
mov
std
dec
cmpsl
mov
test
std
popa
popa
pop
jnp
and
cltd
push
push
inc
or
cli
stos
inc
sbb
jmp
fidivl
rcrb
push
mov
cmp
mov
sub
clc
addl
lret
adc
orl
rclb
stos
in
dec
neg
ja
and
add
cmpsl
xor
dec
paddq
inc
test
jno
jb
loope
pop
in
xor
inc
popf
dec
mov
repnz
add
jg
xchg
popf
xor
addl
les
pop
add
mov
sahf
mov
fsts
ja
call
mov
lea
push
push
rorl
and
adc
popa
mov
sub
cmp
inc
inc
dec
xor
cwtl
mov
dec
adc
lods
pop
mov
cmpsl
jne,pt
test
test
cltd
daa
sub
sbb
loop
sub
repz
mov
xor
in
cmc
jb
and
adc
sub
mov
shrl
sub
xchg
repnz
in
push
insl
pop
jg
inc
xchg
push
hlt
inc
jnp
scas
jp
sbb
dec
fwait
adc
notl
mov
adc
icebp
xor
jae
pop
out
lds
cld
ja
xor
push
push
loope
cwtl
inc
loope
in
or
mov
or
add
mov
arpl
lcall
jnp
sub
leave
xchg
in
aas
mov
sbb
inc
fwait
and
daa
stos
cmp
in
call
jbe
arpl
cmc
push
push
inc
xor
jo
inc
gs
imul
jnp
jne
test
xor
push
xor
sub
xchg
inc
sub
mov
and
cli
push
sub
inc
pop
ds
add
dec
push
inc
outsl
hlt
int3
adc
inc
ja
stos
rorb
out
or
js
xor
gs
lods
outsb
mov
test
cmp
sti
sub
ret
out
sbb
call
std
fmuls
add
mov
test
pop
jbe
enter
rclb
not
hlt
push
xorb
fsubs
addb
push
sub
and
inc
jno
and
cmp
adc
popf
gs
cld
shlb
scas
stos
cmp
ljmp
xor
fidivl
pop
orl
daa
push
adc
mov
or
rcrl
pop
call
pop
std
sub
and
mov
pop
sub
sti
repnz
mov
fisubrs
or
sbb
add
add
xchg
cmpsb
mov
mov
pop
pop
movsb
jo
in
addr16
sbb
repnz
sti
cmp
fcoms
xchg
xchg
test
mov
inc
mov
adc
ljmp
mov
xor
rcrb
jge
mov
jmp
xchg
fistl
pop
cmpsl
or
xor
jne
and
fisubl
outsl
add
int
iret
mov
call
std
shlb
mov
inc
dec
dec
movsb
lods
fstpl
shrl
sub
divl
test
push
popa
push
xchg
xchg
ja
jmp
mov
and
inc
add
dec
ljmp
insb
lcall
xor
lret
sbb
jae
xor
rcrb
add
fs
sahf
xchg
push
or
outsl
jge
jae
lds
xchg
xchg
xchg
hlt
xor
xchg
push
std
call
mov
aam
iret
movsb
adcl
lret
pop
add
test
jns
push
pop
clc
adc
ja
das
loopne
idivb
inc
jmp
pop
adc
test
adc
fucomip
mov
jno
and
dec
push
ret
in
sub
xchg
jg
cmp
andl
cmp
mov
insb
push
add
ret
pop
fwait
xchg
lods
or
scas
ss
mov
mov
jo
test
mov
ljmp
push
into
imul
repnz
xchg
int
cmpsl
jecxz
adc
jmp
cmp
jecxz
mov
adc
insl
shll
dec
lea
insl
aam
ds
cmp
sub
xlat
stos
pop
addb
fsubrl
das
mov
push
aas
jp
sahf
and
mov
out
push
ficomps
adc
adc
push
dec
fsubl
mov
in
test
outsb
mov
and
dec
out
push
push
aaa
mull
in
xor
mov
cmc
ret
stos
fmulp
ss
xchg
inc
push
call
ja
stos
push
popf
push
out
or
in
mov
adc
or
mov
movsl
imul
jmp
jb
mov
popa
jmp
ja
cwtl
mov
sub
sbb
lds
jne
xchg
add
shlb
add
cs
mov
insb
adc
jno
sbbl
in
cmpsl
pusha
mov
scas
mov
mov
test
jecxz
mov
rcrb
aad
fidivs
adc
lcall
jno
ss
inc
dec
add
stos
cmp
call
ds
or
iret
cmpsb
stos
sub
out
cli
aad
push
mov
cli
xor
movsl
lcall
popa
loope
add
inc
ret
cmc
xor
sub
pop
jg
call
cwtl
hlt
jbe
ja
mov
mov
lret
test
or
push
lock
out
jecxz
add
jecxz
xor
sbb
lret
xchg
push
cwtl
fstpl
xor
int
xorl
ret
xor
jg
mov
mov
jno
or
fsubl
dec
shl
xchg
jbe
sar
jns
das
lods
aam
jg
bound
or
xor
out
cmpsl
push
pop
lods
aaa
fmulp
or
xchg
or
xor
popf
in
in
mov
and
lret
ja
push
mov
mov
dec
xor
xchg
push
fisttpl
sbb
rcrl
pop
out
cmpsl
mov
jnp
push
outsl
inc
cmp
and
rolb
mov
cmp
inc
mov
loope
mov
dec
pop
test
std
fisttps
mov
xchg
push
jecxz
adc
loop
aaa
ja
jp
cmp
ret
ficoms
adc
imul
cmp
mov
mov
dec
ficompl
pop
ficoms
add
sbb
cmp
sub
mov
pushf
ja
shlb
mov
fisubrl
adc
cmc
push
and
aaa
jnp
stc
push
jns
lock
mov
xchg
push
sbb
je
lret
sub
insb
pop
or
sub
fadd
int
es
xorb
into
inc
repz
xlat
insb
bound
pop
dec
mov
mov
outsl
and
mov
or
cmp
mov
add
insb
int
pop
repz
adc
mov
out
scas
add
sbbl
repnz
add
ja
jae
fwait
xor
pushf
inc
xlat
and
mov
inc
fldenv
or
and
mov
dec
cmp
xchg
lcall
xchg
and
nop
xor
out
cmp
or
fistps
test
sbb
hlt
xor
rclb
vmwrite
jbe
aam
xor
push
loopne
divl
hlt
out
push
add
push
xlat
add
cmp
xorl
fdivrs
out
jp
lods
mov
mov
mov
les
sbb
outsl
arpl
in
adc
lods
leave
sbb
jne
js
pop
cmpl
int3
jmp
stos
imul
mov
dec
mov
ja
xor
jbe
cmp
push
lods
stos
sub
sbb
xor
pop
test
movb
xor
dec
xchg
div
or
mov
push
jecxz
enter
hlt
xorps
inc
loope
mov
fildll
mov
aam
ja
pop
push
ljmp
les
jns
lahf
jge
mov
lcall
mov
out
fstpl
subl
or
dec
fidivrl
loopne
mov
mov
pop
out
lods
mov
mov
bound
addr16
movsb
out
xchg
mov
mov
adcb
sub
cmp
outsl
jl
in
pop
test
int3
repz
ja
mov
call
das
mov
cmovg
lahf
fdivs
aas
in
insb
and
or
pop
jecxz
out
ja
les
test
adc
in
clc
out
add
add
repnz
push
jne
mov
cmp
loopne
push
cmp
rorb
in
outsb
popw
and
add
iret
pop
out
sub
rorl
xlat
movsl
mov
cmp
jno
aas
pop
aas
inc
movsl
test
xor
mov
mov
call
mov
dec
sbb
jo
adc
xchg
mov
cwtl
jo
push
add
jg
push
orl
sub
or
pop
push
rcl
sbb
add
ret
gs
push
mov
sub
adc
jne
loopne
xor
ss
movsb
mov
rcrl
sarl
cs
inc
les
out
adc
inc
mov
sahf
ret
adc
xchg
ja
sub
daa
push
adc
int
jo
ds
lods
outsl
jle
out
mov
dec
sub
mov
pop
shll
ja
inc
repnz
icebp
jle
adc
cmpsl
xcrypt-ecb
cmpsl
mov
sub
loop
jp
or
sub
sub
push
test
shll
call
sub
pop
andb
shufps
and
sbb
jae
shlb
sub
inc
xchg
mov
repnz
fildl
mov
and
adc
daa
jp
jb
inc
inc
jbe
inc
lret
and
add
adc
andb
mov
pop
outsl
mov
or
dec
aas
mov
repnz
ja
stc
lret
fdivrl
testb
rol
popa
mov
jo
ja
lods
loop
rorl
sbb
cltd
mov
scas
dec
ds
imul
jb
jno
cmp
test
sbb
xor
sar
lahf
shl
or
insb
jae
les
out
jecxz
icebp
and
movsb
adc
test
mov
push
inc
push
decb
mov
fnsave
es
xchg
xchg
jmp
imul
gs
dec
sub
cmc
test
mov
into
ret
out
js
mov
subl
jbe
xchg
mov
nop
xlat
and
in
seto
std
out
ja
push
xchg
subl
jecxz
mov
or
std
mov
out
mov
jno
sysexit
sbbl
dec
add
cli
lock
push
ja
jb
jmp
and
repz
dec
adc
incl
push
mov
mov
jbe
mov
jnp
fstpt
iret
ficompl
sbb
cmp
std
push
int
xor
fwait
xchg
cmp
iret
ss
or
or
in
outsl
cmpl
sub
pop
push
ficompl
in
das
sbb
pop
mov
xor
cld
inc
cmpsb
subb
js
bound
jp
push
data16
add
into
lea
pop
bound
jle
inc
xchg
xchg
mov
cmp
lahf
scas
popa
call
fisttpl
cs
fdivs
jo
lock
mov
insb
and
inc
jmp
mov
xchg
fsubrs
sbb
fwait
jnp
push
imul
add
gs
popl
mov
mov
add
imul
mov
adc
movsb
xor
out
js
mov
mov
call
add
movsl
jb
scas
in
add
mov
fidivrl
push
cs
xchg
rcr
aam
dec
lea
inc
xchg
stc
mov
lea
push
fadd
sbb
jno
or
and
lods
jb
adc
adc
stos
mov
jbe
and
popl
push
repnz
cmp
xor
pop
mov
in
jmp
inc
mov
add
shll
mov
cmp
rorl
pop
sub
jne
sub
ljmp
push
jbe
enter
mov
push
outsl
jmp
jge
adc
jecxz
push
jns
cmpb
sbb
mov
popf
add
test
lret
jle
shrb
loop
cmp
or
add
ja
test
xchg
push
xor
dec
dec
adc
xor
stos
pop
adc
sbb
jmp
push
inc
mov
std
stos
cmp
test
and
jmp
mov
sub
cld
push
mov
ja
out
loop
gs
aaa
fisttpl
inc
xorl
adc
pop
xor
repnz
jo
cmp
mov
xor
sub
jmp
pop
sub
mov
adc
inc
addr16
xor
jne
pop
or
nop
out
xchg
clc
push
outsl
and
push
cmp
xchg
mov
out
sub
push
xchg
or
cmp
push
imull
mov
enter
scas
icebp
stos
adc
dec
ja
rep
xor
outsb
xlat
rolb
cmp
mov
inc
dec
push
xlat
arpl
inc
mov
mov
jo
add
adc
and
call
mov
mov
or
xor
std
xchg
std
orl
daa
mov
xor
inc
push
adc
insb
gs
dec
cmp
testb
aad
repnz
ja
aas
insl
inc
pop
arpl
mov
dec
inc
or
iret
mov
xchg
aad
push
sbb
jne
xor
incb
sub
add
cs
xchg
mov
jne
xchg
inc
vpsubsb
push
imul
push
sbb
mov
mov
sub
pop
push
xchg
push
inc
negl
repz
jl
test
loope
cmp
xlat
sti
add
stos
arpl
push
nop
xor
sbb
sahf
lret
repz
jb
push
sub
or
jmp
bnd
adc
pop
adc
sbb
inc
and
cmp
inc
xchg
mov
outsl
negb
addr16
sub
adc
in
int
repz
dec
addr16
ja
push
mov
inc
scas
pop
mov
sbb
jno
pop
rclb
inc
mov
bound
data16
rolb
inc
hlt
inc
pusha
xchg
add
repz
ja
aam
add
push
mov
cmp
xor
ficoms
or
fwait
out
adc
pop
mov
and
test
adc
jae
sbbl
movsb
in
aam
xchg
rsm
inc
or
sub
mov
fstl
lret
in
repnz
das
mov
subl
imul
add
push
gs
cmp
fwait
adc
cmc
mov
add
adc
jne
add
cwtl
dec
jnp
rclb
adcb
andl
mov
xchg
lcall
mov
mov
lods
icebp
shl
pushf
and
push
cmp
fdiv
aad
jae
stos
jle
decb
pop
stos
in
mov
clc
jmp
inc
xor
ja
mov
aam
sti
lahf
jbe
add
aas
sbb
mov
adc
sbb
mov
scas
std
out
jne
aaa
lods
jmp
sub
test
pop
gs
insb
adcl
ror
lcall
ljmp
loope
mov
test
push
or
pop
std
mov
add
outsl
and
arpl
out
and
pop
dec
fisttpll
mov
in
pusha
arpl
adc
imul
push
outsl
fidivrs
or
loop
insl
loope
gs
xlat
lds
add
insb
push
pop
push
outsl
and
pop
fsubrl
xorl
mov
jnp
lahf
test
adc
xlat
and
xor
out
nop
jnp
cmp
inc
xchg
jae
xor
or
clc
repz
jbe
inc
dec
out
and
jnp
scas
lods
adc
in
cmc
sbbl
loope
addb
mov
sub
jns
jno
in
sti
add
bound
sbb
mov
or
push
outsl
ds
sub
mov
push
in
lahf
bound
jbe
inc
aad
cmp
std
lret
or
lods
ja
int
andl
jmp
adcl
xorb
bound
mov
fdivl
jo
in
pop
sub
adc
stc
or
xor
jno
lret
loopne
lea
das
ret
clc
pop
lret
pop
aas
sti
mov
mov
loope
pop
xor
orl
imulb
add
cld
loope
mov
xchg
xor
sti
xor
or
and
and
jo
push
xchg
daa
mov
mov
push
inc
roll
xchg
xchg
jnp
scas
push
ret
out
decb
aam
cmp
cmc
xchg
jmp
xor
les
pop
mov
ror
clc
fdiv
outsl
data16
cmp
mov
sub
inc
pop
adc
call
mov
in
add
cltd
scas
imul
aad
lods
das
jae
cmpsl
flds
dec
mov
mov
sub
int3
adc
add
outsl
push
push
ficompl
push
fcoml
sub
sub
mov
loopne
nop
xchg
ja
aaa
jb
js
xchg
pop
les
mov
into
cmp
ja
sub
ljmp
stos
lods
mov
inc
jmp
push
cld
icebp
inc
cmp
and
pop
adc
sbb
rolb
insb
xlat
sub
push
rorl
aas
mov
cmp
add
dec
jp
fcmovnu
arpl
fisubl
lods
insb
mov
xor
adc
jp
xor
sub
imull
and
aaa
inc
xor
arpl
pop
dec
mov
xchg
adc
mov
jno
andb
dec
cltd
inc
fildl
inc
stos
sbb
std
mov
mov
sbb
mov
shrb
xor
hlt
test
imulb
or
flds
inc
je
dec
mov
pushf
add
jp
notl
xor
loopne
popf
lds
lahf
jmp
out
bound
add
stos
adc
cmpsl
and
push
fldt
push
sbb
push
push
mov
lcall
call
leave
repnz
movsb
jne
sbb
sahf
sti
xchg
pop
enter
sarb
xor
dec
aam
fnstcw
pop
or
lods
cmp
cltd
xor
adc
push
fwait
adc
sbb
out
mov
xchg
push
pushf
dec
pop
jno
icebp
in
and
iret
xchg
jb
inc
push
xchg
fwait
xlat
adc
inc
push
addr16
shufps
xchg
jne
sbb
out
out
mov
jo
xchg
repnz
jmp
ljmp
out
push
pop
bound
jecxz
imulb
ds
or
scas
lret
sti
adc
inc
push
rclb
fsubr
sbb
mov
insb
push
test
out
sub
out
cmpsb
push
inc
xor
stc
lock
jmp
jb
adc
jns
outsb
or
mov
jae
andl
push
call
fbstp
es
adc
out
hlt
jns
scas
out
mov
adc
clc
mov
mov
mov
mov
add
push
out
xchg
shrb
ror
cmp
aad
inc
adc
inc
pusha
fs
lods
dec
mov
lock
jno
gs
hlt
mov
push
adc
test
push
xchg
out
in
or
push
jno
cmp
and
xor
ja
add
imul
shlb
and
mov
into
xor
aam
mov
push
clc
mov
mov
add
sub
imul
lods
sub
test
int
int
sbb
mov
int
mov
jmp
mov
push
and
roll
shlb
aam
ja
jmp
ss
cmp
popa
add
inc
add
or
add
leave
popa
call
mov
adc
adc
cmc
stos
xor
and
xlat
or
mov
test
subb
mov
popf
xor
clc
lods
jg
adc
xor
fs
inc
lcall
or
pusha
adc
xchg
popf
mov
adc
out
xor
xchg
out
pop
movsl
and
and
repnz
shlb
pusha
addr16
out
inc
xchg
ja
out
mov
pop
std
or
and
jno
mov
addl
movl
stos
pusha
repz
mov
fcom
lret
xor
in
enter
insb
add
roll
adc
jb
xor
xor
jbe
xor
and
movsl
popa
and
xlat
sub
jb
cmpsb
mov
sub
adc
test
ret
iret
stc
es
repz
or
popf
pop
ja
fidivs
and
out
flds
rclb
mov
inc
divl
or
fisubs
jo
stc
orb
xchg
inc
enter
test
mov
out
push
add
or
adc
or
ret
mov
jo
adc
stc
cmp
xchg
xchg
dec
out
es
inc
fnsave
xchg
rcrb
xor
bound
xrelease
cmp
xchg
mov
push
dec
roll
push
xchg
fiaddl
insb
ja
imul
xchg
outsl
xchg
add
cmpsb
push
fisubs
adc
xchg
testl
dec
cltd
inc
clc
mov
mov
mov
adc
adc
es
or
and
mov
inc
pop
mov
pop
je
jecxz
add
adc
mov
sub
xor
xchg
lds
dec
rcl
jge
or
jge
outsl
ret
dec
inc
cmpsl
outsb
adc
aam
sub
xchg
pop
mov
jecxz
clc
pushf
stos
push
fs
jmp
fidivl
popf
push
pop
test
add
sbb
ja
fidivrl
repz
sbb
cmc
orb
int3
add
xorl
mov
dec
loopne
loopne
shrl
xor
add
xor
xchg
ja
inc
fisttpl
mov
add
icebp
jo
push
into
mov
int
add
nopl
mov
adc
lea
xchg
sbb
sub
or
xchg
sbb
fsubrs
inc
fistpl
and
sub
xchg
shlb
adc
inc
push
rcl
mov
fistl
testl
insb
cmp
rcll
cs
imul
sub
mov
mov
push
bnd
rcl
aas
arpl
test
adc
subl
xchg
push
xor
fildll
ja
pop
in
testb
pop
mov
mov
loope
and
pop
movsb
and
xor
add
mov
push
ja
test
mov
jae
cmp
cmp
mov
push
mov
sub
scas
scas
jns
pop
xor
orl
sbbb
lods
mov
xlat
sub
test
leave
sub
sub
out
and
adc
mov
jae
xor
adc
mov
push
mov
jl
ret
icebp
movsl
outsl
nop
xor
stos
pop
sub
ja
in
outsb
dec
pop
jp,pt
cwtl
addl
jo
add
cltd
xor
jle
ret
xchg
bound
push
js
cmpsl
mov
hlt
mov
popf
mov
adc
jo
sub
jnp
ret
rolb
scas
jge
mov
lods
ja
sub
inc
stos
and
pop
lahf
dec
xchg
ret
insb
imull
out
push
mulb
outsl
mov
push
or
cltd
or
lods
jae
in
lcall
fwait
push
xor
adc
mov
mov
rclb
jbe
mov
stos
cwtl
aad
fdivrs
std
or
and
loopne
xchg
push
out
jb
sbb
int
adc
ss
dec
xorl
or
stos
setne
fimuls
bound
add
lods
xchg
pushl
std
mov
pop
mov
scas
lret
and
xlat
das
mov
mov
mov
clc
into
stos
stos
fisttps
add
repnz
dec
xchg
shl
mov
call
add
pop
imul
push
xchg
lea
push
mov
repz
cmp
fisubl
orb
stos
pop
test
ja
jle
in
lret
test
sbb
popf
outsl
ficoml
popa
jmp
cmp
cltd
inc
in
das
jb
aas
icebp
xorl
movsb
rolb
xchg
sti
xchg
cmpl
sbb
out
pop
pop
mov
int
mov
xor
stos
push
andb
or
and
std
cmpsl
xchg
xchg
lea
insl
push
jae
xchg
jno
or
fistl
popf
int
orl
subl
and
mov
jle
or
dec
stc
adc
repz
jo
xchg
movsb
call
inc
sti
ja
mov
outsb
fadds
sbb
cmc
out
sub
sbb
lret
cltd
adc
je
or
mov
xchg
push
lods
adc
inc
fwait
push
bound
clc
outsl
cmp
loopne
icebp
jmp
std
sahf
mov
pop
enter
jg
aas
inc
cmc
dec
cmp
ljmp
mov
clc
outsl
xor
inc
insl
faddl
or
adc
ja
call
jle
jo
leave
jne
sbb
sbb
inc
test
mov
cltd
lcall
mov
xor
inc
mov
mov
dec
repnz
aad
adc
add
add
cli
mov
push
push
sub
mov
cltd
or
adc
in
jne
dec
jp
popa
push
movsb
lods
iret
dec
loop
sahf
pop
test
shrb
sub
push
into
fadds
jne
sub
je
fstl
and
sub
ficoml
aaa
popa
cmp
push
stc
jbe
xchg
sub
jmp
popf
fyl2x
jb
out
push
and
cmpsl
mov
test
add
xchg
dec
jb
adc
pop
jae
jl
mov
imul
insb
mov
push
inc
ror
adc
xchg
pop
pop
shlb
loope
sbb
mov
push
in
dec
cmpsl
inc
xchg
icebp
cmc
cmp
subb
loopne
mov
add
cmp
bound
cwtl
xor
cmp
and
xor
inc
inc
popf
fisttpll
pop
dec
test
push
call
xlat
mul
xchg
ja
sub
inc
sbb
fsubrs
cmp
push
jmp
out
movsl
cltd
std
mov
cmp
stos
push
pop
jb
stos
test
shlb
sbb
or
scas
ficoml
sbb
or
mov
lahf
dec
es
pop
sbb
jns
das
xor
and
ja
fwait
sti
out
stos
je
sub
pop
mov
adc
or
aam
pop
dec
jns
adc
xor
sbb
cmp
pop
adc
roll
pop
mov
xlat
pop
push
out
xor
in
mov
mov
ljmp
mov
ljmp
hlt
shl
cltd
outsl
sarl
dec
sub
xchg
daa
mov
mov
std
cmpsb
cmp
jecxz
xor
adc
inc
rclb
sub
outsl
fdivrs
je
hlt
sub
sbbb
stos
xchg
sar
pop
mov
cltd
jge
ret
enter
popf
mov
bound
imul
loope
ss
int
jo
test
add
lds
push
rcrb
push
hlt
pop
pusha
mov
mov
aas
add
xchg
inc
push
fsubrl
push
clc
int3
or
nop
sub
pushf
pusha
inc
and
or
popa
fstps
in
pop
pushf
pop
lock
loope
jmp
dec
into
mov
sub
aam
mov
jmp
lods
add
pop
pop
addl
sbb
mov
lods
xchg
pop
jo
shrb
clc
sbbb
fs
xchg
jmp
in
icebp
jnp
jae
aaa
jno
inc
xchg
out
std
pop
cld
push
mov
or
clc
push
sbb
fucom
pop
pop
mov
jp
xchg
add
cmp
sub
xchg
stos
shlb
adcb
adc
cwtl
icebp
or
out
xor
mov
pop
mov
dec
sets
bound
inc
jno
ret
repz
sbb
or
push
imul
movsb
add
fidivrl
cltd
pushf
fwait
inc
pop
jge
cmp
fwait
push
mov
jmp
push
ja
mov
rcrl
pop
test
or
sahf
mov
jns
mov
xor
sahf
inc
sub
sub
ljmp
add
hlt
pop
cli
lds
push
mov
mov
outsb
jp
cmpsb
mov
cmp
xor
aaa
std
jns
mov
push
adc
xchg
roll
xor
inc
push
repz
sbb
popf
xchg
cmc
dec
outsl
rclb
mov
scas
sbb
mov
lea
inc
imul
xchg
popf
movl
mov
repnz
fstps
add
insl
incb
push
pop
fnstsw
push
gs
sub
into
out
pushf
add
addl
sub
push
inc
pop
inc
mov
jmp
inc
fcmovnu
mov
mov
mov
cmp
sub
add
push
aas
test
into
mov
pop
lds
gs
stos
cmp
xchg
sub
fcoms
mov
jns
mov
in
inc
inc
pop
fcomps
out
mov
and
adc
cli
xchg
daa
mov
jo
imul
sbb
push
add
add
push
xor
shr
in
jnp
std
rcrl
jnp
jns
push
mov
push
std
push
shl
add
lahf
jb
in
call
pop
adc
clc
xchg
mov
push
sbb
xlat
push
add
inc
jecxz
jae
cmp
pop
dec
je
sbb
add
adc
fmull
cmp
les
icebp
jecxz
rcll
xlat
ja
lahf
xchg
int3
fstpt
jg
mov
xor
and
jo
jmp
insb
rorb
xchg
movswl
fsin
cmpsb
mov
popa
imul
cli
adc
inc
test
test
insb
adc
add
mov
out
insb
inc
cmp
loop
int3
fisubrs
cs
arpl
sbb
cmp
and
sbb
cmp
mov
xor
mov
ja
sbb
push
inc
popf
xchg
sub
push
cmp
leave
sahf
mov
jno,pt
sbb
std
xchg
cltd
xchg
icebp
aas
inc
cmp
mov
popf
js
xor
xchg
xchg
jb
mov
fdiv
mov
and
adc
jge
popf
into
aam
std
repz
testb
inc
outsl
push
sarl
in
or
inc
push
pusha
rorb
lahf
pop
sub
sbb
sub
scas
xor
cmp
outsl
sbb
es
sbb
push
mov
in
rolb
ja
mov
fdiv
arpl
xor
imul
mov
mov
loopne
out
mov
inc
push
data16
push
or
adcl
xor
testb
sub
sti
out
mov
lcall
and
es
rol
stos
add
popa
je
push
int3
sbb
movsb
je
xor
xorl
movb
nop
loope
and
mov
sbb
and
movsb
jmp
call
aam
or
test
xor
inc
mov
jl
mov
cmpl
mov
js
mov
sbb
and
pop
or
movsb
push
inc
xchg
push
or
js
and
aaa
clc
or
repz
test
rclb
stos
dec
fimuls
fadds
mov
leave
push
loope
insl
inc
sub
imul
movsb
inc
and
test
xchg
int3
adc
idivl
inc
stos
sub
ss
cmpsb
push
mov
adc
push
add
ja
xlat
adc
mov
lock
mov
popa
pop
pop
fiadds
rcrl
stos
xor
or
test
sub
orb
sar
add
adcb
xorl
stos
shrb
push
adc
call
sbb
dec
adc
mov
cmp
mov
ja
jnp
insl
pop
and
or
push
sub
mov
xor
js
roll
cs
adc
sbb
xchg
aaa
mov
xchg
insl
outsb
xchg
cwtl
inc
in
jge
xorb
adc
xlat
jle
push
mov
xor
divl
lea
push
hlt
and
cmp
aad
sub
xchg
pop
aas
rol
mov
sub
popf
add
add
fimull
xor
mov
xchg
testl
repz
ret
sub
mov
mov
sti
xor
mov
xchg
aas
jecxz
mov
outsb
imul
stos
add
xchg
notb
jmp
jne
xor
ja
call
or
inc
icebp
rcr
shlb
lret
pop
mov
or
fdivp
cwtl
mov
sti
xorb
ja
xchg
inc
xchg
mov
iret
and
idivl
insl
cmp
sub
xchg
arpl
jge
andl
inc
xor
imul
xorb
into
iret
out
testb
inc
in
xchg
inc
push
fiadds
ret
sub
push
jmp
jmp
cmpsl
out
int3
stc
in
mov
mov
inc
lock
int
mov
add
ja
xchg
rcll
aas
stc
rorb
sarl
and
add
and
mov
mov
xor
in
outsl
test
xchg
xchg
mov
jns
xor
dec
sub
les
cld
ds
outsl
out
sub
sub
popa
stos
out
repnz
ficomps
and
xchg
push
and
or
in
cltd
cmpsl
xor
jbe
icebp
sub
inc
mov
adc
iret
fwait
testb
mov
out
inc
xor
jo
sbb
imul
scas
icebp
xor
divb
xchg
nop
lret
jle
loopne
push
and
sub
popf
jae
js
rcrb
mov
jno
ja
adc
sub
je
imul
or
xor
adc
add
pop
xchg
insl
aad
test
mov
popf
jbe
cmp
push
je
cwtl
outsl
adc
enter
lret
sub
jbe
hlt
add
sub
or
jge
int3
sbb
in
js
xchg
push
cmp
sub
mov
cmp
movsl
lea
js
mov
sub
fisttps
mov
rcrl
or
hlt
leave
mov
inc
outsl
scas
movb
ja
in
add
jo
mov
pop
rcrl
ja
push
insb
fistpl
into
ss
cmp
add
divb
movb
jmp
ja
push
and
orl
enter
in
or
lret
mov
push
fidivs
jno
xchg
inc
roll
cmp
jmp
pop
sbb
add
inc
push
xor
xor
ret
shl
add
jno
xor
jg
cmp
push
ja
daa
push
mov
into
sub
ja
sarb
ja
jno
aam
dec
fnstcw
mov
mov
cld
mov
mov
out
addb
das
inc
shlb
fs
xchg
or
mov
ljmp
cmpsl
add
mov
aaa
aam
cs
and
mov
xorl
lahf
out
mov
into
mov
in
test
leave
mov
xchg
adcl
shl
mov
cli
adc
jo
mov
mov
mov
imul
jp
dec
mov
dec
jmp
sub
mov
mov
int
pop
pop
mov
cltd
in
out
xchg
mov
les
repnz
adc
or
or
cmpb
fdivl
std
out
push
mov
inc
mov
push
xchg
popf
sti
adc
pop
or
mov
es
call
adc
icebp
into
jae
call
sbb
stos
pop
mov
xchg
sbb
iret
push
and
test
ret
jb
adc
cmp
loope
call
hlt
cmp
int
sub
cmp
icebp
out
test
push
into
pop
add
pop
subb
ret
jae
jle
ret
push
cmpsb
pop
daa
sub
lret
ss
mov
xor
xlat
push
mov
ds
mov
out
subl
ss
add
xor
push
lret
orl
cmp
push
mov
popf
cmp
lcall
lret
rclb
inc
xchg
adc
in
dec
dec
cld
in
test
lcall
cmp
bnd
bound
imul
pop
mov
push
pop
inc
sti
add
popl
adc
out
xor
add
jecxz
icebp
rep
dec
sub
cmpsb
xor
mov
icebp
mov
dec
sahf
shlb
sub
and
sub
add
aam
xlat
and
out
imul
cmp
or
pushf
xchg
pushf
push
outsl
test
stc
outsb
or
mov
mov
int
loope
fwait
lds
mov
cmp
hlt
jbe
adc
push
rcl
popa
ja
arpl
jb
stos
stos
or
adc
pop
push
mov
test
jbe
mov
push
ja
or
aad
pop
outsl
iret
push
ljmp
jg
sub
scas
lock
outsl
adc
int
test
xlat
pop
ret
adc
xchg
imul
xor
or
arpl
inc
ret
mov
shr
data16
loop
sbb
mov
fsubr
dec
sahf
movsl
fisubs
lret
in
sti
outsl
addr16
ret
xchg
add
push
nop
pushf
xchg
sbb
in
cli
in
sahf
test
rorb
incl
insb
ss
fwait
scas
inc
inc
out
repz
xchg
fcmovne
mov
lret
popf
xchg
in
in
push
stos
mov
pop
sub
adc
jb
xchg
xchg
jo
or
cmp
stos
pop
lods
jecxz
xor
dec
xorb
mov
mov
mov
pusha
fisttpl
lahf
sub
lock
lods
push
push
test
call
push
adc
out
jmp
mov
repnz
mov
icebp
push
addb
sub
jnp
and
outsl
popa
lock
rep
inc
aam
icebp
ffree
dec
shlb
xchg
dec
sbb
push
test
push
insb
xor
icebp
ljmp
mov
jno
inc
mov
sub
pusha
push
pop
lock
xor
imul
dec
mov
inc
inc
or
jb
xor
lock
repnz
cli
add
lret
inc
loopne
ds
mov
imul
mov
subb
fmuls
dec
mov
call
pop
hlt
xchg
cmp
push
xchg
je
das
mov
dec
hlt
cmpsb
push
jne
adc
mov
lahf
icebp
jb
ds
out
jecxz
and
xchg
mov
movsb
adc
inc
mov
mov
orb
or
push
out
sbb
jno
int3
sbb
jbe
jl
lock
mov
lock
sahf
call
dec
imul
dec
lods
ret
lock
out
enter
add
pushf
lock
rclb
mov
or
jnp
cmp
or
adc
fwait
std
lock
mov
xor
adc
inc
and
mov
jbe
and
jns
lret
cld
mov
inc
and
xor
inc
mov
mov
pop
arpl
sub
xor
push
inc
shrb
loope
jno
pop
ja
adc
or
push
repnz
xchg
mov
adc
pop
adc
push
sub
jb
add
add
mov
lock
mov
out
pusha
or
xchg
mov
xor
pusha
nop
add
mov
and
and
fs
adc
jo
push
imul
out
cmp
mov
mov
or
mov
sbb
adc
notb
pop
or
les
insb
out
or
in
jb
addr16
cmpsl
and
dec
xor
pop
aad
imul
stc
leave
repz
sub
sarl
repnz
mov
out
adc
sbb
icebp
sub
push
rorb
inc
sbb
pop
mov
ret
rcll
adc
jae
incb
pop
out
mov
cmpl
insl
xchg
clc
repnz
mov
pop
les
scas
jl
f2xm1
je,pn
push
loop
stos
arpl
mov
add
dec
mov
insb
inc
in
dec
iret
and
fdivrl
or
hlt
xor
fldenv
mull
lock
or
jmp
push
mov
and
out
outsl
in
in
push
jbe
mov
jle
xchg
lahf
adc
lcall
pop
jge
jno
lods
mov
lds
mov
jno
or
in
outsb
xchg
mov
jmp
and
jp
mov
pop
cs
sbb
loop
or
jbe
and
or
lds
dec
lods
sbb
or
xlat
addr16
xchg
xchg
mov
stos
jno
mov
pop
add
adc
sub
iret
adc
scas
xchg
in
pop
aad
hlt
and
in
ss
adc
int
test
es
in
mov
or
imul
jns
movsl
imul
mov
inc
dec
loope
repnz
mov
add
adc
lock
loop
ret
mov
call
scas
adc
dec
shl
mov
loopne
dec
sub
xor
mov
adc
xor
pop
movsb
lock
repnz
add
pop
aaa
mov
add
pop
pop
mov
pop
je
lock
js
sbb
jb
xchg
lods
lock
lds
jno
push
dec
dec
movsl
nop
inc
add
divl
lock
pop
jl
lock
adc
mov
icebp
pop
rcl
jae
ds
hlt
adc
xchg
jmp
adc
mov
hlt
xchg
ljmp
cltd
add
jmp
repz
xchg
jno
loopne
cli
ret
adc
cs
fdiv
and
stos
mov
aaa
loope
fnstsw
movsl
call
pop
in
sub
rolb
jns
sbb
xlat
pusha
shr
cli
mov
pusha
pop
inc
rclb
scas
xchg
push
loopne
inc
push
repnz
jo
mov
sub
cmp
push
sub
inc
push
hlt
adc
and
add
in
dec
std
clc
lock
fs
cltd
xor
add
cmpsl
xor
data16
cmpsl
out
out
mov
adc
or
addr16
clc
ja
push
mov
xchg
aad
f2xm1
push
adc
jge
push
lds
in
movsb
gs
pop
repz
fists
cmc
push
inc
jno
mov
sbb
sbb
ret
call
xchg
sub
lock
cwtl
pop
repnz
call
test
xor
xchg
int
nop
pop
sub
lock
sar
xchg
in
test
and
xor
xor
in
test
jnp
shl
stc
lods
mov
xor
dec
shll
mov
cmp
jb
pop
mov
cli
mov
fwait
and
insl
lock
in
stos
sub
mov
lock
and
mov
popa
push
lock
pop
mov
in
popf
mov
mov
add
jae
sarb
loope
negl
mov
les
clc
call
and
xor
cmp
push
in
repnz
push
add
pop
push
std
sub
arpl
andb
lret
mov
lock
call
repz
push
pop
clc
pusha
cmpsb
jo
repnz
jno
sahf
mov
sbb
mov
mov
jne
sub
in
and
sar
pop
aad
or
xchg
fnsave
jb
push
test
stc
call
pusha
fxch
adc
pop
aaa
pop
lock
mov
rcl
mov
call
lahf
mov
sub
insl
mov
rorl
dec
adc
nop
dec
imul
lods
sbbl
fnstsw
add
push
outsl
jbe
and
jbe
repnz
and
lock
bound
repz
jb
mov
jnp
pop
jg
inc
lock
adc
jae
sub
jge
fcos
cmp
out
and
mov
repnz
jecxz
das
sub
lock
int
ret
cwtl
call
push
fstps
notb
sbb
dec
shl
lahf
add
sbb
cmpsl
xor
jge
ror
jb
mov
cmp
scas
jbe
out
adc
out
aaa
popa
in
movsb
pop
pusha
xchg
inc
stos
inc
sarl
dec
leave
lock
divb
outsl
mov
in
push
sti
insb
mov
push
push
js
ja
outsb
hlt
and
sub
mov
jno
lock
jl
scas
xchg
lahf
inc
push
adc
movb
pop
mov
add
cmp
lds
popa
mov
add
pusha
loope
icebp
sub
xlat
sti
xchg
jle
cmp
mul
xchg
test
into
fwait
clc
iret
or
aas
call
rep
cwtl
rorb
mov
bound
inc
dec
xchg
mull
jno
ja
sbb
scas
in
mov
int3
aaa
sarl
adc
dec
and
adc
mov
mov
jl
repnz
add
lods
les
add
dec
mov
fs
add
lock
pop
arpl
repnz
repz
insl
xchg
add
inc
xor
jge
aas
repnz
push
clc
fnsave
loopne
pop
dec
icebp
lock
subl
jno
mov
fwait
lock
push
outsl
fsubrp
or
pop
repz
test
and
xlat
jne
sbb
xor
pop
call
test
jl
mov
jge
insb
jmp
and
xchg
xorl
jecxz
and
int
cltd
mov
push
fcomps
imul
push
push
push
mov
test
loopne
mov
test
bound
adcb
nop
pushf
jb
test
adc
mov
or
sbb
xorb
insl
or
sar
xchg
mov
repnz
rorl
pop
call
xor
leave
mov
jbe
sub
jo
pop
lea
divl
jge
mov
cmpsl
cmpsb
lock
push
mov
pop
inc
aam
inc
in
adc
popf
lock
mov
mov
sub
sub
jg
loop
cmp
inc
call
notb
mov
lcall
mov
xor
xchg
and
sbb
xlat
jge
in
inc
push
loopne
jg
xor
scas
lret
cmc
and
jecxz
jno
std
mov
mov
bound
sub
add
push
lock
mov
call
dec
xchg
add
cmp
aad
hlt
adc
mov
je
leave
mov
js
cmp
xchg
cltd
repnz
add
out
mov
fisubs
pusha
cmp
adc
dec
and
cmp
daa
test
lods
movups
pop
jne
jmp
dec
icebp
xor
mov
mov
jo
jno
outsb
lock
pop
and
fsubs
repnz
aas
enter
dec
dec
jne
scas
xorb
call
icebp
hlt
mov
cmpb
stc
ja
xchg
mov
nop
shrl
cli
out
cwtl
adc
lock
mov
cmp
leave
test
adcl
adc
mov
dec
lds
clc
jp
fsubp
jb
xlat
sub
mov
mov
push
lret
into
es
inc
ss
test
in
inc
neg
jp
and
and
imul
in
inc
mov
cmp
mov
test
dec
jne
and
pop
lcall
out
inc
adc
pop
and
aam
sub
roll
or
repnz
loopne
mov
add
inc
mov
or
es
mov
push
lock
aaa
mov
jp
inc
mov
jo
daa
add
sub
clc
hlt
lret
or
mov
push
adc
mov
imul
mov
push
jbe
add
repnz
repz
adc
dec
mov
outsl
sub
sbb
xor
lock
xor
cmp
lock
shlb
inc
push
mov
sbb
cmp
ret
xor
lock
mov
mov
icebp
sahf
or
and
divl
les
pop
sahf
add
aas
lock
add
loopne
xchg
jl
test
imul
jo
gs
loopne
sbb
push
add
sub
mov
cmc
testb
mov
adc
stc
lahf
repz
movsl
jge
sar
xchg
pusha
flds
jo
xor
out
add
push
loopne
outsl
dec
sahf
in
fidivl
test
jae
jno
mov
jecxz
fs
sbbb
nop
xchg
push
xor
mov
dec
mov
call
les
aam
lock
repnz
addr16
xchg
pop
ficompl
mov
jl
mov
mov
jmp
ja
mov
sub
cld
xor
adc
ficompl
mov
cwtl
adc
push
in
call
fcoms
lods
jmp
call
ret
sub
seto
fs
mov
and
mov
outsb
pop
add
ficoml
adc
push
and
test
push
cli
shlb
gs
cs
mov
lock
mov
pop
sbb
out
jbe
xor
stc
jb
les
push
adc
mov
lock
sub
rorb
add
mov
xchg
adc
mov
lahf
adc
mov
dec
movsl
lock
mov
bnd
lods
push
out
inc
xor
movsb
and
shlb
shl
mov
hlt
rcr
repnz
pop
pop
aas
or
shlb
cmpsl
jg
mov
lret
add
xchg
les
add
aaa
pop
pop
call
fmul
jb
inc
stos
shlb
arpl
lret
cmp
pop
xor
add
es
dec
push
out
pusha
out
je
inc
jno
pop
pop
mov
push
jo
test
mov
andl
mov
pop
mov
pop
jo
sbb
std
pop
int3
mov
mov
lock
shrb
mov
repnz
mov
rorb
scas
jg
jge
enter
outsl
out
or
mov
push
ds
xor
jge
xchg
shrb
and
cli
jmp
fcoms
cld
inc
hlt
in
jno
pushf
xchg
xchg
and
push
mov
popa
pop
ss
repnz
fwait
icebp
mov
mov
cmp
lods
sub
or
sarb
orb
popa
lock
nop
rcl
sub
ret
repnz
adc
adc
shll
mov
or
aam
jmp
push
or
adcb
out
cmc
xchg
fisubrl
pop
jnp
lods
rcrb
nop
jo
insl
xchg
out
xchg
push
pop
mov
push
in
xor
js
jno
sub
add
xor
rorb
lods
repnz
roll
shlb
sub
jbe
jae
dec
push
mov
fisubrl
ss
bound
out
and
sub
fwait
pusha
adc
nop
fbstp
cmc
lock
lods
push
push
inc
add
call
popa
and
nop
in
js
stc
insb
push
mov
push
or
lock
ss
icebp
xor
iret
dec
cmp
les
add
nop
jno
cld
jl
lock
popa
shlb
in
mov
rdmsr
imul
sahf
rcrb
js
sub
xor
stos
inc
and
fldenv
pop
stos
lock
xor
icebp
dec
sub
ret
or
fimuls
add
inc
add
mov
mov
or
pop
daa
push
mov
sbb
inc
pop
loopne
push
sub
in
or
pop
addl
xor
inc
pusha
mov
xchg
mov
pop
call
sbb
adc
mov
lock
push
mov
jecxz
scas
clc
nop
pop
adc
fwait
cmp
sub
mov
aad
and
lods
jge
sub
sbb
pop
cld
jo
mov
pop
js
repnz
add
stos
nop
ljmp
xorb
push
iret
lock
dec
push
cmp
fldlg2
mov
push
sub
mov
cmp
rolb
xor
lock
inc
cmpb
cmpsl
push
hlt
sub
sbb
mov
and
xchg
jo
or
or
loope
les
pop
fnstsw
cs
xchg
add
ss
and
rcr
mov
sbb
test
adc
and
mov
jne
or
out
sbb
lcall
sub
mov
or
push
add
pusha
push
ja,pn
xchg
lock
mov
dec
or
sbb
js
jecxz
jns
nop
pop
pop
xor
aam
and
notl
pop
mov
stos
mov
mov
lock
mov
cwtl
loop
incl
lret
fldenv
mov
dec
pop
enter
lods
pop
call
lret
xchg
testb
das
pushf
pop
lock
cmpsl
nop
push
add
subb
adc
out
cld
mov
mov
dec
leave
xor
jmp
and
loopne
call
pop
adc
mov
lock
mov
icebp
jp
f2xm1
sbb
mov
call
test
unpckhps
mov
repnz
sub
ficoms
pop
repz
jno
xchg
sarb
mov
or
mov
inc
inc
hlt
scas
adc
lds
cmp
out
adc
dec
push
lret
pop
pop
sub
fisubl
lret
sahf
dec
jo
fadd
mulb
dec
sahf
andb
lock
nop
mov
mov
pshufw
mov
hlt
in
ja
adc
test
insb
shrb
adc
stc
pop
push
loope
icebp
pop
ljmp
inc
jmp
sarb
retw
pop
cld
add
pop
pusha
sahf
mov
lock
std
shlb
sahf
mov
icebp
or
loop
cli
lret
xor
popa
pop
jo
add
loopne
insl
sbb
adc
inc
scas
adc
adc
fcmovbe
cmp
cwtl
lock
xchg
loopne
icebp
cmc
fs
shrl
mov
imul
rcrl
jmp
or
ljmp
popa
addb
loop
add
jo
sbb
inc
test
adc
jne
aaa
pop
lock
push
ljmp
sbb
and
nop
test
fsts
jle
mov
lock
pop
jb
add
inc
sti
ret
xor
push
inc
leave
pusha
dec
cmp
or
adc
mov
out
daa
in
xor
loope
mov
xor
repnz
push
mov
test
lock
loopne
add
jmp
loope
mov
nop
xor
hlt
jo
or
mov
ja
rorl
mov
loopne
cmp
and
xchg
adc
fnsave
jb
clc
imul
lea
lcall
adc
repz
xor
and
ss
and
loop
jb
xor
nop
inc
aam
xchg
push
and
jmp
repz
rcr
aas
jmp
mov
mov
mov
dec
mov
pop
mov
daa
rclb
or
loopne
jns
or
mov
repz
adc
mov
movsb
jge
repnz
and
adc
pushf
loopne
fimull
push
sub
mov
fsubl
cltd
imul
adc
inc
inc
jmp
call
mov
sbb
xor
repnz
push
add
add
adc
outsb
icebp
cltd
or
andb
mov
xor
cli
subl
jno
pushf
daa
leave
xchg
jecxz
mov
sub
adc
sub
adc
add
je
out
dec
lock
cltd
call
test
loope
repnz
ret
sti
out
pop
push
or
je
hlt
or
push
mov
jns
push
outsl
arpl
repz
sub
pop
xchg
jecxz
in
cltd
or
in
jp
inc
jg
popa
stos
mov
imulb
iret
xor
imul
mov
std
stos
inc
int3
xchg
lock
xchg
sub
jno
ja
cmpsl
js
dec
cmp
push
cmp
cmp
and
fidivrs
cltd
xor
dec
insb
jb
adc
xchg
inc
mov
popf
inc
out
inc
lea
ret
aas
lods
lahf
cmp
insl
cmp
pop
push
push
aam
sub
ret
adc
roll
andb
sbb
adc
mov
mov
sar
and
adc
jno
mov
jae
cs
iret
cmp
adc
jb
mov
loopne
daa
sahf
insl
fsts
cmpsb
data16
aam
xchg
imul
lock
mov
pushf
or
jo
movsl
in
cmpb
mov
shlb
aas
lods
adc
hlt
les
adc
adc
les
ja
xchg
aad
jb
sbb
sub
sub
pop
or
and
pushf
cmc
ja
mov
arpl
enter
xchg
mov
cld
mov
push
inc
xor
mov
xchg
adc
test
sub
lcall
jbe
pushf
dec
ret
pop
mulb
lock
push
jae
and
lock
ret
test
and
adc
mov
add
repnz
cmp
flds
loopne
jo
nop
rorb
lock
xchg
das
mov
and
repnz
sub
dec
in
xchg
mov
pop
sub
mov
push
out
cmpsl
cwtl
hlt
jecxz
cmp
lock
or
add
movsb
lock
loopne
movsl
mov
mov
lock
xor
jp
stos
cmpsl
out
jecxz
sbbb
and
fwait
lock
hlt
push
stos
add
or
lock
aad
lock
jae
mov
sub
and
ret
push
outsl
pusha
adc
iret
jns
cli
rol
stos
cld
hlt
std
loop
xorl
mov
repz
hlt
pop
lock
out
jecxz
fdivrl
lock
or
es
mov
lea
lock
fsubr
jecxz
cli
mov
je
rol
lcallw
call
lock
clc
lock
shlb
sbb
pop
adc
stc
fisttpll
lret
lock
add
pusha
test
mov
jno
sbb
pop
in
jnp
pusha
out
and
mov
push
cwtl
xor
repz
call
jp
stos
add
sub
push
jmp
hlt
test
sub
test
ljmp
outsl
leave
adc
insb
mov
lock
es
int
loop
push
cmp
xchg
movsl
lods
mov
dec
mov
lock
push
pop
imul
or
xchg
sbb
lock
dec
add
pushl
inc
cli
adc
call
mov
repz
aad
shll
mov
shlb
lock
push
aad
jl
lods
lods
xchg
ficomps
xchg
cli
shl
pop
push
imul
shlb
and
add
pop
lock
add
mov
push
negb
arpl
sbb
adc
shrl
inc
jecxz
rorl
pop
xor
nop
adc
mov
add
pusha
sub
test
xchg
xchg
mov
lcall
xor
rol
mov
test
lea
jp
iret
shll
std
mov
fistl
cli
in
sbb
insb
pop
lock
add
jge
add
mov
mov
jne
shll
lock
lret
movsl
fiadds
fstpt
shl
sub
push
sub
inc
cmc
mov
data16
notb
fimull
lock
lock
gs
lock
jecxz
jg
popf
out
fisttpl
cmp
pusha
sub
sbb
jmp
push
loop
jnp
call
fisttpl
mov
and
mov
mov
lock
and
loopne
gs
fdiv
lock
mov
add
jne
jg
stos
lock
mov
call
fcoml
cmp
mov
dec
fwait
lock
or
or
popl
xor
jo
in
lock
mov
lcall
aas
sbb
loopne
imul
dec
imul
add
faddl
and
iret
inc
and
mov
je
xchg
mov
je
icebp
pop
lcall
sbb
mov
pop
mov
jl
sahf
pop
pop
loopne
inc
lock
sbb
in
js,pn
cli
hlt
test
mov
repz
lods
xchg
pushf
mov
popf
mov
and
sbb
ds
cmp
lock
lret
and
pop
mov
je
les
ss
stos
lock
andl
jl
fld1
stos
xlat
push
fdivrs
dec
xchg
std
loope
pop
xchg
scas
clc
lock
movsb
xor
popf
pop
daa
mov
dec
jmp
cmp
pop
popa
jp
jbe
push
test
adc
fmul
cmp
mov
pop
rorb
jmp
dec
jbe
xor
sbb
iret
mov
mov
jno
call
inc
adc
fs
lock
jecxz
arpl
lds
lock
bound
pop
or
xor
jecxz
aas
lock
aaa
scas
push
mov
fldenv
inc
dec
jle
hlt
enter
push
aaa
jmp
outsl
fistpl
xchg
js
in
mov
pushf
push
in
das
pusha
xor
ret
xchg
sub
fildl
lock
cmp
jbe
mov
xor
lock
xchg
test
pop
sbb
cmovno
jmp
cmp
das
xlat
add
lock
popa
scas
jnp
int
pop
loop
xor
sbb
inc
and
or
loope
pusha
bound
xchg
fdivrp
jno
lods
lds
xchg
push
sbb
sbb
adc
fstpl
adc
test
lock
cmc
cs
stc
rcll
leave
lock
ret
int3
sarb
push
xor
xchg
inc
hlt
rcrl
mov
in
test
xor
das
dec
mov
lock
xchg
cwtl
aam
sbb
xchg
mov
ljmp
js
les
jne
sbb
push
clc
mov
xor
pop
jb
out
dec
pop
jo
roll
cmc
aad
xchg
gs
fbstp
pop
adc
loope
js
push
add
and
in
cmp
jbe
cmpsb
mov
lock
xchg
clc
jnp
push
lock
subb
mov
fistps
mov
pusha
loopne
loopne
fnsave
lods
outsb
sbb
mov
push
neg
xor
insl
fcmovbe
jns
xchg
xchg
dec
lock
mov
add
add
inc
outsl
sub
jae
add
stos
mov
ds
negl
mov
adc
ss
lock
loope
pushf
dec
repnz
push
subl
dec
lret
xorb
push
in
into
out
inc
test
push
lock
rcll
sub
test
sub
out
hlt
xor
push
sbb
lock
pushf
jns
and
mov
popa
ja
add
sar
inc
imul
pop
jp
data16
mov
scas
push
imul
lock
cmp
mov
and
mov
roll
dec
out
cmc
ds
adc
push
shll
xchg
rcr
in
mov
adc
pop
cmpsb
push
mov
es
loope
bound
pop
jl
jbe
lods
loopne
ds
mov
in
int
sbb
xor
jne
and
test
lock
popa
ret
stos
lock
and
sub
jno
rcrl
aad
call
xchg
rorb
in
mov
jne
mull
cmpsl
adc
popf
push
add
ret
sti
sub
mov
test
xor
call
lock
xchg
mov
jno
cld
lock
mov
das
rcr
mov
pusha
adc
ss
mov
mov
mov
xor
sub
hlt
push
lods
cmpsb
push
fwait
loop
in
call
out
cmp
push
add
xchg
frstor
jb
fldcw
shl
dec
jo
mov
and
push
cs
cmpsb
mov
lock
sbb
sub
push
insb
lea
lahf
cmpsl
ja
add
dec
loop
fwait
inc
inc
push
lock
les
or
jne
and
mov
mov
movsb
sub
inc
mov
mov
lahf
xchg
adc
push
or
fsubrl
pusha
aam
inc
out
aas
cmpsb
ror
lock
jns
push
fsubs
or
out
and
sbb
xor
outsb
pop
std
rcr
stc
lock
pop
push
pop
jno
fcmovnb
cmp
and
push
ljmp
cmp
pop
scas
mov
in
ljmp
cmc
enter
fdivl
sub
neg
sbb
cmp
jp
scas
cmp
repnz
pop
mov
lock
cmpsl
addr16
inc
xor
outsb
roll
stc
pop
lds
lods
cmp
and
push
loope
je
xlat
ljmp
lea
sarl
out
rcrl
std
mov
push
in
dec
out
cmp
add
fsubrl
hlt
inc
and
loop
jns
hlt
test
lock
gs
or
decb
dec
ja
pop
push
lret
iret
push
pop
lock
stos
shl
lret
imul
pop
dec
pop
sub
sbb
push
jle
clc
rorb
imul
shll
jecxz
and
push
inc
lods
mov
pusha
out
push
xor
jne
sbb
out
jge
dec
dec
push
or
insl
inc
clc
aam
pop
stc
xchg
out
sbb
sbb
push
lret
mov
jp
sub
adcb
rcll
jo
fstpl
aad
nop
mov
or
ja
out
testb
cltd
jmp
daa
inc
inc
mov
int
movsb
push
shrl
sub
mov
inc
mov
pop
sub
xchg
adc
loope
xor
cltd
add
mov
test
and
je
aaa
mov
jb
or
push
pop
push
cwtl
mov
or
mov
out
in
loope
outsl
sub
adc
subl
cmpsl
daa
ret
mov
in
lds
mov
push
jecxz
and
dec
push
mov
mov
orl
jmp
xchg
sbb
jb
pop
add
shll
in
jb
adc
mov
dec
jp
mov
ror
dec
sbb
out
sbb
pop
loopne
icebp
xorb
test
mov
push
xchg
cld
lock
mov
test
pop
int3
or
jno
sbb
lret
mov
hlt
aam
out
mov
mov
inc
jge
rclb
lods
sar
jmp
out
daa
or
mov
cmp
call
popf
subl
pop
cld
rorb
shl
outsl
jnp
dec
push
sbb
icebp
out
dec
popa
jne
jns
jns
dec
add
jne
push
and
dec
movsb
repz
out
clc
pop
push
pusha
cltd
sbb
inc
ss
jbe
test
es
das
pop
jecxz
xchg
sub
cmpsl
sub
xor
and
xor
out
ja
repz
popf
or
jns
loopne
pushf
mov
push
popf
or
call
add
sahf
add
imul
sti
and
cmp
stos
adc
ja
js
mov
dec
test
pushf
call
dec
mov
loope
hlt
movsl
pusha
test
mov
idivl
inc
lea
repnz
aam
aam
xor
mov
aas
push
xchg
inc
shrb
dec
lret
push
lock
xchg
mov
fidivl
mov
mov
arpl
or
jns
pop
loopne
jb
sub
jmp
cld
xchg
xorl
jecxz
mov
mov
lret
ljmp
loope
loope
xor
icebp
pop
nop
mov
and
ljmp
sbb
adc
out
mov
in
push
jo
adc
stos
ret
jb
or
xchg
and
pop
imul
leave
outsb
adc
lret
push
out
bnd
jno
xchg
adc
or
icebp
into
adc
xchg
lcall
insb
outsl
scas
fdivrl
stc
inc
mov
xchg
clc
add
daa
sbb
sub
iret
into
sbb
pop
ljmp
outsl
or
or
lds
rcr
jmp
clc
je
pop
stos
push
mov
fdivrp
cmp
lods
ja
rol
js
mov
in
std
xchg
add
cltd
dec
arpl
imul
ja
cmp
add
pop
mov
adc
adc
pop
cmc
jmp
mov
lds
fbld
or
pusha
outsl
je
mov
lods
insl
lea
xchg
xchg
add
pop
add
gs
jns
push
adc
mov
je,pn
stos
cld
ljmp
aas
pop
fsubrs
sub
cmp
xchg
mov
fcmovnb
ja
rorl
and
test
stos
cltd
call
dec
push
pop
jecxz
jbe
or
jno
sub
shlb
cld
xchg
pop
sub
lahf
lods
mov
mov
inc
pop
push
sub
inc
mov
daa
je
push
or
adc
imul
cld
inc
daa
mov
or
cmp
iret
push
xor
xor
pop
insb
push
insl
mov
ja
mov
enter
imul
dec
mov
mov
nop
xor
das
sbb
lock
out
mov
in
lret
cld
xor
xor
fcomi
enter
and
orl
dec
repnz
cmc
mov
push
stc
xor
cmp
lret
imul
inc
insl
bound
adc
xchg
dec
ja
imul
xor
arpl
xor
xor
jmp
aas
inc
js
mov
js
inc
mov
sub
or
or
icebp
scas
in
xor
popf
shrl
out
aas
loope
stos
xchg
test
xlat
cmp
fistl
add
fsubrl
popa
fsubrp
lret
push
popf
nop
xor
inc
outsb
fists
stos
add
test
call
mov
mov
mov
mov
jae
dec
xchg
inc
xchg
hlt
and
lea
sbbl
inc
sbb
mov
dec
sbb
push
shl
jns
or
add
xchg
pop
mov
dec
dec
push
repz
mov
sub
xchg
movsb
mov
ror
and
fisubrl
mov
int3
cli
xchg
mov
adc
sub
les
mov
jmp
mov
xchg
lcall
mov
or
mov
inc
fdiv
enter
sahf
sbb
sti
shll
xor
pop
xchg
out
push
and
xchg
or
xor
lret
xchg
fidivl
fsubrs
in
icebp
inc
pushf
fsubrl
add
jo
dec
loope
jmp
in
and
lahf
push
dec
jmp
test
into
dec
jnp
jb
mov
outsl
xor
push
out
or
lea
jno
rorb
repnz
add
js
in
ja
repz
dec
and
or
xorl
xchg
lcall
es
int3
mov
sub
in
xchg
in
outsb
lds
cmpsb
cwtl
xor
jo
xchg
and
xor
xor
inc
imul
sbb
and
sub
adc
mov
mov
pop
push
je
mov
pop
test
mov
sub
nop
stos
jae
mov
insl
addb
in
incl
scas
fdivl
lcall
sbb
pop
xchg
ja
lret
cltd
cmp
test
icebp
adc
push
adcl
cmp
subb
cltd
gs
add
pop
movsl
dec
in
xchg
nop
or
les
gs
cmp
lods
and
insl
andl
xchg
sbb
xchg
or
jae
loopne
pop
leave
adc
inc
cmp
jno
pusha
outsl
sub
push
xor
push
jbe
scas
filds
lods
mov
lea
popa
jb
sub
jns
jo
test
test
mov
pop
stos
push
mov
out
lret
xchg
push
push
mov
out
jno
mov
test
fcomps
pop
je
xor
mov
sub
sub
and
imul
push
lock
dec
shl
pop
mov
mov
xchg
mov
push
insb
repz
fldl2e
sbb
jmp
das
mov
hlt
sbb
in
test
sub
mov
ja
lock
outsl
fidivl
jae
insb
lret
adcb
lock
repnz
and
addr16
jne
lock
stos
fisttps
jno
fcoml
push
ret
lock
mov
adc
das
fcmovb
and
repnz
xchg
mov
mov
lock
inc
sarb
bound
aaa
insb
gs
and
inc
sahf
sub
and
fs
xor
ja
lock
test
repnz
cmp
xchg
mov
mov
pusha
sbb
hlt
jg
pop
xor
push
lds
mov
mov
jle
push
jne
push
lock
cli
int
pusha
jmp
mov
pop
mov
push
adc
mov
and
insb
xchg
or
xor
mov
ljmp
fcomp
cltd
shr
mov
cmp
imul
xor
jbe
repz
sub
orl
mov
lock
mov
sbb
out
int
lock
pop
cltd
adc
cmp
xor
sbb
jle
into
jbe
test
add
mov
mov
test
andl
adc
cli
mov
rcll
outsb
mov
bound
test
pusha
inc
sub
movl
hlt
shr
and
in
shl
lock
ret
mov
mov
mov
pop
xlat
in
movsl
nop
out
test
adc
jnp
mov
imul
in
inc
lret
pop
mov
sarl
push
inc
into
lock
stos
push
movsb
push
lock
cmp
enter
xlat
lock
mov
mov
lods
icebp
fwait
mov
mov
add
cmc
add
add
dec
fstpt
jecxz
in
aam
insl
sahf
jo
add
mov
jge
in
cmp
mov
aaa
xor
ds
sbb
dec
jbe
pushf
add
jo
movsl
cmpsb
xchg
ret
shl
ficoml
lds
xchg
lock
xor
loope
jnp
scas
ljmp
mov
lret
sub
pushf
cmpl
xchg
jb
mov
jbe
sub
push
lock
sbb
mov
lock
out
xor
orl
pushf
call
pushl
pop
aas
or
pop
lock
sub
divl
das
pop
lock
push
mov
rcrb
lock
mov
xor
jmp
paddsb
int
sub
cmp
mov
pop
add
jmp
sti
pop
cmp
clc
jmp
lock
adc
or
lods
adc
xor
neg
sahf
pop
jg
lock
fmul
lahf
lock
subb
dec
adc
push
cmp
and
inc
jecxz
xchg
inc
pusha
scas
addr16
enter
sar
add
jg
xorl
push
mov
push
mov
loope
sarl
adc
xor
imul
int3
loopne
jge
lock
push
mov
or
arpl
out
inc
or
or
add
sub
lock
jecxz
push
in
cwtl
enter
cmp
lret
fadd
lock
pop
cmp
loopne
lock
stos
lea
ljmp
lock
test
jbe
pop
lock
dec
sbb
popa
scas
or
fwait
mov
push
mov
fsubs
fs
in
push
insb
daa
push
js
mov
sub
jmp
frstor
adc
fdivrp
repz
mov
in
mov
std
pop
popa
lock
mov
into
xor
push
xchg
xor
lock
mov
int3
js
mov
popa
inc
inc
and
scas
imul
push
adc
mov
in
mov
movsl
adc
aaa
sub
xlat
mov
adc
adc
jbe
lock
lea
mov
das
arpl
xor
or
xchg
lock
inc
testl
mov
cli
jmp
and
add
sub
into
jo
xchg
or
scas
in
sub
icebp
shll
dec
pusha
popf
pop
mov
enter
or
push
xchg
mov
enter
lds
xchg
sub
call
lock
bsr
lock
imul
shlb
mov
call
cmp
push
jae
hlt
add
subl
sub
xchg
cs
js
or
xchg
ret
sub
mov
push
push
lock
jae
adc
inc
inc
mov
inc
jo
add
and
out
jp
jbe
pushf
rorl
fiaddl
dec
fdivrl
mov
xchg
icebp
idivl
rol
inc
xlat
in
cmp
mov
sub
sbb
xor
xlat
ss
pop
lock
xchg
mov
ret
sbb
sbb
push
sub
loope
adc
lcall
jg
out
inc
in
cmp
mov
mov
mov
loop
push
and
inc
add
mov
scas
mov
movsl
int
push
push
insl
cmp
dec
and
fldenv
cmp
and
lock
xorl
inc
pop
mov
lock
nop
push
fcoml
push
and
mov
neg
lret
dec
mov
add
stos
fwait
mov
xor
push
pavgw
add
cmp
addl
and
jge
cli
pop
arpl
repz
and
jno
dec
ficomps
mov
or
movsb
fcomi
lgs
pop
sbb
repnz
mov
push
lock
ss
repz
lret
or
adc
mov
and
and
push
and
sbb
mov
cmp
fs
jae
add
push
cmp
aaa
xor
inc
adc
adcb
leave
rclb
shl
mov
aaa
pop
mov
xor
mov
push
mov
andl
cmp
mov
inc
call
dec
sbb
movsl
cli
pop
and
lock
jnp
pushf
in
add
aaa
mov
sbb
loope
std
pusha
or
mov
jmp
hlt
cs
repnz
add
test
int3
inc
fcomi
shrl
andb
or
push
mov
dec
and
mov
movsb
sbb
lock
xchg
push
cli
cmpsb
or
pushf
mov
push
xor
pop
enter
aad
lock
fisubrl
fdivp
js
inc
outsl
pushf
movsl
cmp
lahf
adcl
inc
sbb
adc
hlt
mov
call
push
out
popf
cmp
in
xlat
ds
int3
mov
cmc
inc
ljmp
insl
mov
dec
xor
fistpll
test
aaa
rcrl
or
xor
rcll
nop
and
sbb
jmp
and
and
out
test
dec
popa
insl
jp
decl
add
xchg
cs
fcoms
mov
hlt
movsb
xor
add
call
frstor
inc
sarb
lods
in
dec
mov
mul
mul
pushf
cmp
push
rcll
mov
out
add
cmp
pushf
lock
jnp
std
cmp
and
jmp
push
pop
pusha
pop
mov
cmp
je
or
push
lock
fcmovnu
andl
lret
lock
ret
sti
lock
and
hlt
imul
sarl
sub
jl
xchg
mov
xor
push
adc
ret
lock
pop
lock
loop
in
lock
cmp
xchg
xor
imul
popa
sbb
push
or
dec
cmp
jb
lahf
add
sub
adc
in
pushf
lret
jmp
lock
dec
push
insl
lock
mov
movsl
lock
jb
add
pop
out
lock
rorb
popf
lock
call
pop
shl
mov
adc
cmpsb
jmp
xchg
mov
mov
jno
jne
lock
lea
call
sub
pusha
popl
aaa
mov
jmp
add
adc
sub
lock
mov
sub
sbb
in
adc
rcll
notl
mov
mov
and
or
xchg
test
ret
cltd
fdivs
mov
stos
or
mov
fwait
sub
sbb
outsl
adc
test
lods
imul
mov
mov
adc
jns
fstpt
xchg
insl
pop
shll
adc
adc
xchg
inc
fldl
sti
xchg
or
add
in
push
aas
mov
out
sbb
in
rorl
jbe
jle
aas
aam
xchg
ret
lods
xchg
jmp
gs
lods
jae
push
sar
es
inc
pop
pusha
push
adc
ljmp
inc
cs
xchg
pop
jp
push
ljmp
inc
mov
shrb
subb
rol
sahf
jmp
push
push
pop
inc
je
mov
rol
pop
add
pop
sub
gs
cli
xlat
loop
pop
movsb
out
icebp
incl
lds
jb
xchg
dec
outsb
scas
lea
mov
jmp
in
ss
lods
clc
in
sub
or
inc
popa
ljmp
xor
out
mov
pop
push
into
in
push
cs
ja
stos
jns
sti
push
push
add
pushf
dec
add
sub
and
add
or
sub
dec
in
cld
dec
lods
loope
push
scas
cmp
pop
scas
out
xchg
pop
repnz
aad
sub
icebp
enter
imul
mov
and
adc
pushf
mov
inc
cli
aam
push
push
imul
shrl
lock
les
negl
sahf
ficompl
xor
push
xor
or
sub
mov
testb
push
insl
push
push
mov
pop
addr16
add
dec
imul
pusha
push
in
cmp
ss
call
cmp
outsl
incl
push
inc
ss
jb
xchg
lods
ja
es
sbb
push
hlt
pop
pop
cmp
cmp
es
and
sbb
jmp
add
jb
ja
mov
mov
test
out
jmp
dec
mov
push
inc
mov
sub
jge
adc
ja
ljmp
call
sti
push
mov
xchg
ret
ja
add
scas
lock
dec
jae
andb
sub
sbb
xchg
inc
mov
push
or
xor
sub
sar
push
push
andl
xor
adc
into
scas
fnstenv
mov
bound
rclb
jne
push
mov
or
mov
insl
sbb
outsl
pop
adc
repz
popa
push
and
out
pop
bound
adc
fwait
enter
rolb
ja
push
xchg
cmp
or
out
out
and
inc
sbb
in
xor
jge
aad
jae
ja
fiaddl
fisttpl
loope
xor
cmp
out
add
or
jecxz
push
cmp
jle
or
sti
aam
repnz
mov
loopne
je
pop
outsl
mov
ja
jno
sarl
xor
mov
pop
lock
pop
in
nop
mov
adc
add
cmp
outsl
adc
and
sbb
jns
mov
divb
roll
jmp
or
push
sub
sbb
mov
ds
sub
in
add
rol
jg
mov
jmp
adc
nop
inc
mov
adc
in
xor
inc
sub
int
and
call
cld
stc
adc
stc
pop
aaa
xor
scas
imul
test
imul
negl
add
stos
and
xchg
sbb
ja
add
cmpsb
pop
test
xor
cmp
shrb
jae
xchg
frstor
imul
call
xchg
adc
icebp
and
cld
inc
or
mov
or
shr
out
fcomip
outsl
and
push
test
out
jmp
test
test
xor
jmp
xor
mov
mov
pop
call
int
repnz
cmpsl
rorb
and
call
aas
ja
je
and
adcb
mov
fs
mov
movsb
inc
out
cmpsl
inc
cld
pop
inc
pop
dec
pop
pushf
bswap
or
cmp
std
pop
repz
cmp
es
cmp
dec
inc
adc
inc
xchg
sbb
enter
cmp
aad
push
out
lods
out
in
mov
adc
mov
xor
mov
cwtl
ja
inc
or
popf
movsb
pop
sbb
andb
clc
pop
les
js
mov
cld
xchg
orl
mov
mov
addl
loopne
imul
dec
sbb
xchg
mov
jno
test
jge
icebp
cmc
push
popa
dec
in
inc
adc
xor
in
fcmovnb
mov
hlt
rep
insl
fstpl
sar
sbbl
jbe
jne
outsl
jo
push
iret
cld
mov
das
shll
ret
xchg
fst
jne
xlat
mov
sbb
aas
ret
sub
xchg
loope
emms
pop
pusha
sub
sub
mov
mov
adc
loopne
hlt
ja
aaa
out
cmp
jne
sub
int
fisubrl
jmp
pushf
addb
xchg
push
xor
icebp
enter
lock
add
pop
xchg
out
xor
jne
repnz
xchg
jnp
xor
call
push
das
lock
mov
mov
popf
rcll
or
leave
jns
in
out
test
push
mov
ds
xorb
adc
xchg
vmovdqu
lret
pop
push
sbb
sbbl
push
xlat
mov
and
cld
ja
insb
cmpsl
clc
sub
repz
mov
shrb
push
and
mov
sbb
sbb
bound
pop
test
pop
mov
add
loopne
cmpsb
leave
sub
cmc
mov
push
adc
sahf
push
fimull
mov
mov
fisubrs
fcmovu
mov
out
add
lock
or
fwait
cmp
jp
loope
dec
inc
imul
lock
inc
pop
mov
lock
mov
testl
push
add
ret
xchg
adc
lcall
cmp
adc
sub
sahf
jg
fdivs
repnz
push
pushf
push
lock
or
sub
add
loopew
into
negl
lock
mov
xor
out
out
pop
shlb
insl
xor
sub
xchg
in
mov
lods
lock
stc
mov
mov
icebp
and
imull
shlb
lock
push
jb
sub
cwtl
fwait
lock
cmp
pop
dec
and
and
adc
lock
sahf
xchg
stos
fucomip
inc
sub
shrl
pop
adc
popa
int
in
pop
fisubs
and
mov
lock
push
lock
dec
rol
out
xor
and
ror
mov
outsb
mov
jne
lock
shlb
std
push
cmp
dec
mov
popf
movntq
xor
and
add
mov
movsb
mov
pusha
js
repnz
adc
and
sbb
push
mov
jno
mov
cmpsb
dec
movsl
lock
pushf
jns
push
mov
popa
leave
cmpsl
xor
mov
xchg
imul
inc
pop
add
push
mov
pop
lock
adc
movsb
call
mov
adc
cmpb
pop
shll
lock
lock
enter
inc
push
lock
inc
mov
or
xchg
inc
sub
inc
dec
lock
mov
imul
push
mov
pop
test
cmp
xchg
incb
push
and
imul
sarl
lock
adc
cmp
xlat
dec
xchg
and
out
pop
insb
xchg
dec
push
mov
rcrb
lock
icebp
jns
lock
pop
scas
test
lods
pop
lock
inc
xchg
not
cmp
mov
dec
es
repz
xor
scas
mov
lahf
and
adc
inc
jo
jnp
sub
sbb
and
sbb
mov
stos
push
int
pusha
xor
add
popa
ficoms
push
lock
aaa
sbb
cli
daa
add
or
lock
or
lods
in
into
mov
iret
mov
call
loope
shrb
adc
call
or
xor
scas
dec
lock
mov
out
inc
jb
cmp
sahf
ljmp
loop
xlat
jno
inc
mov
aad
and
call
mov
sbb
push
inc
xchg
loopne
or
fdiv
sub
int
iret
push
rcrb
cmpl
mov
ss
lods
jp
lock
std
stos
push
add
push
ljmp
lret
std
jnp
fldt
mov
jp
sti
lock
push
aas
pusha
jnp
lock
adc
shrl
push
cmp
adc
mov
insl
shll
mov
adc
pop
inc
mov
clc
mov
adc
push
rorl
mov
movsl
cmp
mov
stos
pop
jmp
scas
lcall
gs
dec
jp
lock
je
xor
ja
jo
xchg
stos
mov
mov
jp
pusha
popa
in
xchg
sbb
mov
mov
shlb
iret
pop
jnp
lret
jo
out
mov
xchg
sbb
sbb
cld
ja
popf
xchg
int
sbb
dec
arpl
add
adc
outsl
inc
jnp
aad
xchg
jmp
test
xor
je
jg
cmp
popa
cltd
call
jno
xchg
lock
mov
cmp
sub
outsl
in
movsl
push
ret
xchg
dec
fbld
xor
aaa
adc
jmp
in
push
dec
add
lods
out
in
cmpl
mov
call
push
xchg
loop
bound
aad
lods
fwait
dec
mov
mov
repnz
lcall
jecxz
rep
sbb
inc
mov
out
test
pop
mov
xchg
out
fwait
push
cmp
mov
xchg
sub
cmp
add
rorb
mov
insb
sahf
inc
je
dec
add
or
push
rcrb
jo
xchg
les
daa
rolb
std
stos
sub
push
xchg
mov
adc
cwtl
repz
adc
cs
mov
std
divb
xor
mov
lret
sub
dec
outsl
andl
mov
loop
inc
lea
xchg
jns
repnz
daa
sbb
jl
js
loope
adc
imul
arpl
test
jns
scas
loope
cmp
call
mov
xchg
sub
insl
cltd
jmp
hlt
push
push
shrb
aas
lds
outsl
xor
add
and
out
xor
in
cmpsb
lret
repz
outsl
mov
stos
es
and
lea
push
xchg
cli
aam
jg
pusha
out
ljmp
inc
pop
test
mov
pop
sub
es
mov
mov
xor
pop
or
in
out
mov
in
out
xchg
pop
idiv
ja
shr
clc
pop
orl
sub
sbb
dec
lock
pop
inc
outsb
icebp
es
adc
inc
lock
push
js
stos
shlb
mov
icebp
test
scas
xchg
pop
pmaxub
mov
shll
rcll
popa
mov
sar
fiaddl
inc
dec
std
lods
insl
loope
nop
xchg
push
stos
add
sub
cs
adc
icebp
lret
jmp
pop
jbe
shlb
cli
mov
ljmp
stos
or
xchg
push
mov
push
sub
stos
mov
mov
roll
pop
cmp
outsl
push
cmc
aam
mov
mov
decl
stos
mov
mov
xor
lock
cmp
inc
ja
add
add
mov
sbb
and
adc
fildl
mov
enter
inc
imul
jl
sub
ljmp
xchg
cmc
xchg
xor
xor
cmp
adc
add
test
sbb
jmp
mov
adc
jno
sub
imull
out
cmpsb
jg
sbb
cmp
sbb
add
dec
in
jae
clc
mov
stos
adc
xor
xchg
or
notb
les
jb
int
mov
shlb
lcall
sub
fisubrs
loop
loop
or
pop
sbb
pop
push
repnz
pusha
mov
popf
repnz
xchg
sbb
pushf
mov
mov
test
call
or
mov
sub
xor
jg
cwtl
mov
shlb
icebp
imul
repz
pop
jge
icebp
xchg
call
lret
add
jbe
jb
adc
ja
push
loope
cmp
rorb
out
xchg
dec
call
sub
popa
sbb
dec
jb
js
lret
mov
jp
iretw
addl
adc
xchg
outsl
adcl
and
or
and
or
xchg
sub
mov
and
bound
sbb
pop
push
mov
adcb
lret
fcomps
shlb
push
idivl
mov
push
xor
test
lret
jmp
pop
in
add
mov
sub
sub
sub
icebp
sbbb
imul
call
mov
jnp
adc
xchg
repz
or
pusha
jb
xchg
imul
sahf
mov
pusha
cmpsb
stos
imul
and
test
loop
loope
repnz
je
inc
adc
jo
cmp
pop
sbb
mov
or
dec
insb
ret
jb
mov
aad
dec
hlt
fldt
add
xor
imul
test
ss
sbb
pop
clc
in
hlt
xor
aad
adc
add
xor
inc
outsb
jns
sub
in
in
cmpsb
addr16
inc
jne
jb
ja
lret
in
xchg
xchg
out
ljmp
jns
push
or
xor
pop
cltd
popa
push
adc
jno
xchg
push
add
lock
pop
scas
sub
inc
add
dec
xchg
aam
or
out
inc
repz
inc
mov
push
jle
lret
add
and
add
push
imul
fnstcw
out
nop
testb
mov
popa
shlb
and
sub
stc
shlb
push
jge
repz
jno
js
in
fidivl
mov
jne
lock
push
addl
pop
scas
lods
adcb
sbb
mov
loope
out
ss
inc
gs
add
scas
sbb
dec
adc
push
subb
repz
call
pop
xchg
mov
js
rcll
fwait
sbb
adc
loop
mov
lods
out
jl
xor
insb
push
orl
mov
inc
xchg
in
jl
ficompl
pop
jecxz
and
push
jbe
pop
test
mov
rcll
je
in
out
rcr
sbb
int3
mov
call
out
jmp
or
scas
dec
jns
jns
in
scas
or
jle
loopne
icebp
xchg
push
jecxz
sahf
add
aas
std
or
mov
push
lock
mov
add
faddl
in
push
jo
sbbl
insl
mov
inc
mov
pop
stos
in
push
push
mov
mov
cwtl
pop
inc
out
adc
add
jp
aaa
popl
mov
adc
sub
adc
mov
sarl
xor
dec
inc
jnp
xchg
push
dec
xchg
test
and
sub
flds
int
ss
sub
stos
je
jae
inc
cmc
mov
sub
sub
push
int
jo
mov
xchg
mov
xor
das
jnp
jb
aam
orb
out
mov
and
inc
jmp
xor
ret
jae
into
jbe
lea
fs
imul
xchg
xchg
hlt
out
cmpsl
mov
loop
xor
out
test
mov
out
lahf
sti
sub
hlt
je
inc
cli
insl
xchg
std
xlat
cmp
sub
notl
sub
popf
and
or
inc
sub
push
adc
or
iret
inc
cmp
pop
dec
cmc
xor
mov
mov
lods
lcall
jno
sbb
nop
ja
lret
call
cmp
adc
xor
mov
sub
or
xchg
imulb
and
repz
into
lock
sub
pop
addr16
iret
pop
xchg
bound
mov
mov
sbb
loope
in
jmp
adc
mov
icebp
xchg
aas
int
add
inc
add
xchg
sbb
je
or
mov
insl
push
cmp
outsl
movaps
or
xchg
mov
mov
inc
stos
mov
aas
jnp
xor
adc
inc
push
lods
push
xor
ja
sbb
pop
jle
ljmp
out
js
aam
test
fwait
les
and
xorb
jle
sbb
mov
leave
idivl
lea
fildll
movsl
and
jbe
imul
and
push
push
push
lods
cmp
mov
sub
popa
push
xor
repz
negb
and
lcall
xor
push
jmp
popf
movb
jmp
jge
sbb
jge
xor
or
arpl
sbb
mov
addl
faddl
aam
movsb
jno
jecxz
sti
mov
jb
push
mov
xor
xchg
push
jns
jo
arpl
fldt
xor
xchg
xchg
mov
out
dec
arpl
lock
cli
mov
mov
mov
ljmp
xchg
repz
outsb
fildl
xchg
adc
jmp
add
imul
push
scas
xor
cmp
mov
jle
xchg
lods
jmp
je
outsl
lret
in
cmp
into
adc
fs
sub
inc
pusha
cmp
or
adc
imul
sub
mov
ficoms
mov
push
orl
inc
out
cltd
mov
mov
loopne
jbe
pop
mov
jl
dec
push
mov
push
add
repnz
or
xchg
sbbb
mov
in
or
jbe
dec
int3
pop
cld
or
sub
jp
js
insb
out
mov
in
fs
mov
cmpsl
lock
pop
fstpl
leave
enter
push
mov
xchg
xlat
push
scas
imul
in
or
cmpsl
outsb
hlt
lds
and
fistpll
stos
jmp
clc
inc
cmpsl
ficompl
and
and
insb
loope
lahf
xchg
incl
xchg
ja
xchg
filds
mov
inc
ja
xor
sbb
aad
xlat
adc
sub
and
or
ret
cltd
xor
shlb
popa
dec
sbb
lahf
je
mov
xor
sbb
mul
shrb
or
iret
xlat
sub
adc
neg
lods
in
test
call
stos
lock
jp
pop
popa
sub
mov
imull
xchg
outsl
int
cmc
xor
lock
test
lock
dec
pop
sub
mov
aam
and
lock
mov
shlb
mov
cmp
lock
divl
pusha
mov
in
stos
call
lock
and
aam
xchg
fdiv
addr16
xlat
xor
jbe
dec
outsl
adc
sbb
and
add
stc
jge
rclb
xacquire
adc
mov
xchg
lock
dec
sbb
cltd
cli
call
es
xor
outsb
loope
adc
gs
mov
or
xchg
lock
iret
ret
stc
lock
shlb
xchg
lock
sub
lock
pop
mov
fadd
jge
lock
mov
inc
pop
jp
lock
cmp
cld
jl
clc
add
cltd
flds
xor
pop
loop
jae
in
imul
aas
lret
test
adc
sub
out
sub
scas
pusha
bound
dec
or
gs
hlt
aaa
jge
es
subl
repz
lock
fs
ror
lock
out
pop
in
jae
xor
std
ret
aam
push
fs
bound
and
xchg
stos
cmp
cltd
lea
lock
cmp
sbbl
pop
pusha
lock
aaa
sub
das
jge
rolb
fld
shrl
pop
inc
call
pop
xor
cld
loopne
shl
jbe
add
xchg
adc
call
inc
je
dec
data16
lock
mov
xchg
and
out
xor
pop
rclb
call
aaa
cltd
shlb
add
scas
and
insl
iret
test
rcll
loop
cwtl
in
lock
push
repnz
in
and
popa
push
loope
repz
mov
mov
pop
ja
pop
shll
xor
in
mov
dec
pop
sub
and
dec
adc
aam
and
pop
pusha
push
xor
in
dec
stos
sub
gs
outsb
add
repnz
icebp
pushl
scas
lock
imul
out
cwtl
pop
lret
lahf
add
out
mov
add
lock
in
cmp
scas
hlt
mov
inc
cli
jb
lock
xor
scas
into
add
pop
dec
repnz
lock
and
in
sub
fwait
lock
push
mov
cmp
adc
insl
cmp
outsb
ljmp
call
push
or
out
in
xchg
cld
mov
xchg
add
out
jno
fsubr
inc
repnz
insb
int
add
xor
notb
sbb
dec
dec
mov
dec
lock
aam
imul
imul
pop
movsl
jo
je
add
stos
jb
cmp
mov
and
adc
repz
insb
push
inc
jae
inc
loop
mov
add
ret
in
in
mov
je
insl
int
sbb
movsl
xor
add
jecxz
insb
mov
insb
sti
lock
push
add
leave
and
sub
add
lock
jnp
aas
stos
sbb
add
dec
hlt
lock
loop
sub
popa
or
fsubrl
cli
adc
lock
mov
test
xchg
mov
jg
push
fptan
pop
icebp
repnz
inc
push
jge
mov
mov
inc
xchg
es
push
mov
out
pusha
pop
sub
mov
and
sub
es
fwait
aaa
inc
lds
pusha
sub
push
in
clc
mov
add
dec
cmp
decl
lea
fs
adc
jbe
outsl
mov
lock
in
inc
cmpsb
cmp
and
nop
lock
adc
mov
mov
and
pop
test
and
jo
pushf
jnp
addr16
jbe
mov
sub
mov
js
xchg
sub
lret
lret
mov
sbb
sub
fstps
lock
lret
push
mov
fstp
mov
jg
lock
pop
add
sbb
incb
adcb
pop
out
jns
lock
or
lret
enter
add
dec
xchg
pop
adc
scas
or
imul
leave
jns
lock
subps
rorl
lock
jmp
lock
iret
out
lret
arpl
or
xlat
cli
xchg
jle
jp
dec
jne
pushf
xor
in
mov
adc
lock
fcmovb
xchg
dec
enter
adc
push
cmp
add
cmpsl
cmp
sbb
xchg
int3
lock
jbe
outsl
and
pop
add
jecxz
inc
mov
repnz
add
aaa
ljmp
xchg
mov
jnp
ds
ja
pop
cwtl
enter
mov
stos
out
jmp
arpl
adc
sub
mov
mov
xchg
xor
fdivp
adc
mov
fidivl
push
je
and
test
lock
inc
addr16
pop
lods
shll
sbb
fisttpll
cmp
outsl
std
lock
fnstcw
stc
xor
aad
inc
or
sbb
cmp
ret
or
jno
fdiv
lock
dec
lock
and
sub
lret
adc
mov
mov
in
adc
lock
stos
std
vpsubusb
lret
sbb
cmpsl
out
je
fmuls
mov
fcomi
popf
loop
lea
lock
clc
loope
xchg
adc
ljmp
add
cmp
jmp
lret
lock
inc
push
sub
and
push
dec
xor
int3
and
xor
cmpsb
icebp
cmp
lock
daa
icebp
test
out
or
aad
xchg
mov
lock
pop
add
jae
jb
and
cwtl
je
call
lock
dec
fdivr
adc
sub
fidivs
mov
push
and
jle
btc
push
ja
adc
enter
xor
sub
adc
mov
xor
dec
sub
jle
add
dec
cld
div
loopne
add
xor
mov
and
cmp
push
in
inc
sbb
cltd
pop
sub
xlat
lods
out
hlt
adc
sbb
or
xchg
rcrb
out
int3
xor
jecxz
lock
call
mov
adc
ror
in
sbb
pop
mov
repz
inc
and
adc
lock
lea
loope
dec
movsb
fucomi
xchg
push
adc
xchg
sub
sub
adc
call
in
jne
mov
mov
imul
ret
mov
jo
call
xor
push
div
insb
push
data16
clc
in
into
add
ljmp
sbb
dec
mov
lock
add
inc
outsb
inc
adc
cmc
mov
add
cld
bnd
std
push
shll
inc
cmpsl
sub
push
and
int
shll
mov
dec
push
call
in
out
adc
or
add
cmp
pop
aaa
jmp
lahf
fwait
aas
imull
adc
add
clc
ss
aaa
test
and
cmc
push
mov
insb
push
cmpsb
repnz
mov
dec
jmp
push
sub
xchg
lock
mov
mov
lock
jl
mov
fdivrl
cld
ljmp
mov
mulb
inc
mov
imul
inc
sbb
jno
push
jae
xor
pop
lods
jg
jb
xor
in
test
pop
jecxz
test
or
mov
hlt
stc
cmp
ret
enter
jae
neg
enter
mov
and
repnz
popa
mov
xchg
gs
out
xor
addl
sub
jp
cmp
add
adc
out
repz
or
outsl
inc
into
sbb
adcl
jp
xor
mov
jns
push
in
adc
or
js
push
jmp
lock
scas
xchg
jl
or
ljmp
fiaddl
adc
ret
adc
and
jle
mov
lock
add
ret
jno
adc
loopne
decb
pop
jno
lock
in
leave
mov
repz
mov
aad
lea
and
ss
cmc
lock
lret
popf
pop
call
xorb
pop
or
aad
lock
mov
add
icebp
fdivp
cwtl
mov
dec
or
push
inc
xor
call
outsb
out
mov
or
sbb
push
adc
jae
sar
sarl
and
sbb
mov
ficoms
imul
lock
push
ret
pop
adc
fcmovnb
repnz
mov
mov
lock
sub
ret
leave
loope
outsb
adc
lock
push
loope
jae
push
and
in
sarl
sbb
sarb
pop
shlb
adc
dec
scas
pop
lock
out
in
sub
jge
adc
xchg
loop
and
outsb
std
data16
push
and
addb
mov
enter
ror
stc
dec
lock
xchg
loop
arpl
popf
out
lret
lret
xchg
jp,pt
jge
dec
outsb
mov
cmp
in
cmp
jo
lock
pop
gs
push
int3
lea
jne
in
xor
sbb
dec
lock
push
push
xor
push
pop
scas
insb
imul
cmpsb
or
and
imul
pop
jl
jge
jp
std
mov
lret
call
mov
lcall
icebp
stos
cli
loope
ljmp
iret
push
fadds
xor
sub
repnz
mov
aaa
xlat
lock
jbe
outsl
xor
daa
jb
leave
adc
jnp
mov
dec
mov
lock
mov
imul
jle
cs
fs
sbb
scas
xor
or
jno
cmp
loope
dec
sub
mov
pop
inc
xchg
aaa
lods
jnp
lock
mov
dec
xchg
sti
imul
inc
pop
lock
aaa
lods
stos
ret
mov
fmull
dec
mov
lock
lret
jno
mov
mov
pop
push
adc
mov
dec
outsb
sbb
scas
in
std
and
call
adc
push
decb
jl
pop
lock
push
pusha
ss
scas
int3
mov
or
adc
out
dec
imul
jb
push
std
rcll
lock
and
xchg
xor
hlt
xacquire
pop
sbb
dec
aaa
adc
outsl
fst
add
adc
js
testb
add
xchg
mov
adc
loope
repz
pusha
js
sbb
add
call
inc
dec
test
push
pcmpeqw
gs
insb
jns
int3
lods
frstor
cld
cmpb
psubq
repnz
push
pusha
cs
xor
add
push
mov
or
lods
jae
leave
stos
lods
and
repz
imul
ljmp
mov
and
mov
icebp
in
adc
leave
add
pop
mov
dec
pushf
cmp
int3
ud0
add
in
jne
xor
and
add
pop
jne
int3
jne
out
add
adc
les
pop
dec
pop
addr16
jl
mov
dec
insb
repnz
sub
out
repz
insb
add
push
push
movsb
shlb
addr16
dec
and
sbb
xorl
sub
adc
insb
pusha
loope
xchg
mov
mov
adc
addl
jl
int3
dec
faddl
imul
mov
jmp
sub
add
or
pop
mov
pushf
mov
shr
push
or
pushf
xchg
repnz
sub
adc
clc
adc
mov
dec
pushf
std
repz
jno
idiv
jae
jecxz
pop
add
add
out
adc
shll
mov
jl
jl
lahf
rcrl
imull
inc
roll
xchg
and
jmp
pushf
scas
push
add
lcall
mov
dec
mov
mov
jl
scas
lock
mov
or
sub
adc
xor
jne
pop
mov
insb
jle
int
test
pop
insb
mov
cmp
jmp
inc
rcll
sbb
mov
or
pushf
mov
in
insb
mov
add
and
test
mov
mov
mov
sbb
mov
lods
punpckhdq
jle
int3
mov
sub
pop
jl
fimull
mov
and
and
insb
or
xchg
sarb
out
jmp
mov
cmpsb
mov
ret
movsl
jmp
sbb
in
mov
sub
jb
inc
call
or
xchg
push
jae
sbb
mov
mov
jp
in
jmp
repz
jne
inc
pcmpeqd
push
orb
adc
fdivrl
cs
adc
mov
insb
rcrb
pushf
sub
aas
lods
cmp
and
repz
adc
and
dec
insb
xor
sbb
inc
cmp
adc
and
adc
adc
and
jne
xchg
cli
add
ss
ja
rcll
bound
ds
sbb
xor
sbb
ds
and
push
fcomps
or
outsl
repz
sbb
sub
int
clc
out
pusha
and
push
pop
ja
jl
dec
and
sbb
lret
mov
es
jno
loop
mov
clc
sub
int
mov
mov
mov
and
sub
mov
mov
pop
repnz
cld
roll
fwait
aam
lock
xadd
push
bt
bt
not
push
or
push
cmp
bswap
bsf
push
dec
seta
movsbw
btr
mov
dec
movzbl
mov
push
shr
mov
rcr
sub
lea
setns
setne
call
and
dec
cmp
daa
mov
mov
arpl
jb
loope
aad
nop
push
cmp
gs
mov
xchg
xor
das
inc
sbb
push
push
cmpl
pop
dec
add
fwait
shlb
sub
scas
sub
iret
popf
adc
push
lea
jae
pushf
lea
jne
push
movb
stos
mov
lea
jmp
add
add
mov
clc
test
pusha
jmp
movzbw
bswap
mov
push
call
adc
jmp
mov
call
repz
adc
pushf
and
xchg
adc
arpl
repnz
sub
jge
ud2
mov
and
fisubrs
ret
xor
jno
outsl
stos
adc
andl
lahf
jae
pop
cmp
push
leave
dec
arpl
sbb
mov
leave
or
adc
cmp
lea
sbb
nop
dec
or
popf
nop
adc
push
sbb
out
xchg
jmp
mov
dec
ss
stc
cltd
dec
fisubs
cs
insb
xor
push
xorl
addr16
repnz
jo
xorb
lcall
jnp
mov
pusha
mov
or
into
fs
out
pop
pop
xlat
fwait
sbb
test
bt
bt
sub
call
lea
je
push
lea
pusha
pusha
movzwl
jmp
sub
push
pusha
pushf
lea
jne
push
lea
call
pusha
movw
pusha
lea
jmp
call
jmp
cli
nop
mov
adc
lock
out
cmpsl
fidivl
ljmp
push
lahf
push
mov
push
jmp
aad
popf
xchg
hlt
mov
ret
clc
aad
cmc
ret
ljmp
hlt
xchg
or
lret
add
inc
notb
fbld
movsb
inc
sub
push
mov
pushl
inc
jo
jbe
xor
dec
mov
es
cmp
hlt
jge
in
dec
jno
dec
jmp
dec
je
movq
inc
mov
imul
push
and
jp
sbbb
enter
mov
inc
jmp
dec
inc
fdivl
cmc
loope,pn
xchg
dec
jge
add
cmp
insb
jmp
fmuls
push
imul
pop
dec
jecxz
les
call
jmp
movl
push
mov
push
pushf
lea
jmp
rorl
sub
push
vpcmpeqd
ret
push
mov
icebp
pusha
cmpsb
jg
pop
into
or
cmp
hlt
jp
jp
idivl
jg
fs
pop
xchg
or
xor
rolb
pop
dec
inc
gs
pushf
push
pushl
popl
pushf
pushl
ret
lea
jne
rcr
mov
cmp
stc
test
or
pusha
pushf
lea
jno
je
jmp
pusha
lret
pop
cmp
adcb
insb
mov
outsb
push
ljmp
inc
repz
clc
push
incl
je
aad
fs
fistpll
js
adc
cld
inc
fidivrl
hlt
push
or
shrl
jne
xor
subl
sub
mov
push
stc
js
ljmp
sub
cmp
ret
pop
push
mov
cmp
nop
mov
sub
jo
mov
inc
das
mov
mov
mov
shll
sbb
sbb
call
add
add
lret
add
add
add
add
cmp
add
xor
add
dec
pop
add
insb
sbb
add
add
add
loope
inc
fcoml
add
mov
push
cltd
add
dec
dec
repnz
or
rcll
subb
rep
push
adc
push
std
fucomi
out
jno
out
rcr
sub
sbb
outsl
add
sub
xchg
mov
in
mov
jne
sar
mov
mov
cli
fwait
in
in
jnp
cld
and
jbe
ds
stos
or
lock
shlb
adc
test
fs
cmpsb
or
pop
rcr
in
cmp
or
jl
cwtl
or
test
xchg
xlat
jae
cmpsl
jno
and
lods
mov
pop
mov
jbe
push
sub
div
pusha
gs
cmp
mov
fcoms
pop
dec
xor
mov
out
mov
xchg
or
rcrl
xchg
pop
lret
and
fwait
out
jbe
enter
rcrb
movsb
mov
mov
mov
jecxz
inc
push
inc
cmp
cmp
inc
movsl
lret
orl
in
push
cltd
imull
cmp
mov
sbb
bound
push
lea
jae
cmc
sub
push
lea
jp
push
pushl
lea
call
pushf
movb
lea
jae
cmp
cmc
test
jmp
ja
mov
adc
mov
sbb
pop
xchg
mov
cli
mov
in
adc
and
icebp
icebp
in
push
popa
out
dec
xor
outsl
notl
lcall
mov
cmc
leave
loopne
sti
dec
outsb
adcb
mov
out
push
aad
nop
leave
shrl
mov
mov
sti
sarb
and
popa
rcr
jle
js
in
xor
aaa
aas
jl
or
jae
inc
push
arpl
push
pushf
cltd
xchg
cltd
mov
hlt
jmp
fistps
movl
cmp
mov
jmp
out
insb
add
and
push
ret
cmp
imul
sbb
pop
add
ret
inc
fiadds
xor
sahf
mov
cmpsb
mov
push
pusha
pop
rcr
or
xor
inc
pop
adc
btc
dec
jmp
stos
out
nop
mov
stos
outsb
sub
jp
sbb
pop
push
int
rorb
add
leave
lock
push
push
pushf
fidivs
enter
pop
fisubl
in
sbb
inc
dec
lods
fs
cltd
pmulhw
sbb
jmp
fidivs
sbb
adc
pusha
jmp
test
in
pop
adc
push
cmp
std
out
movsl
sbb
mov
cmpl
cmp
xlat
jmp
mov
cmpsl
dec
insl
jns
xchg
inc
xchg
mov
mov
mov
and
cli
popf
pop
sbb
stos
mov
cmp
cwtl
push
pop
sbb
jmp
sti
adc
cmp
mov
or
cmp
jmp
es
sub
repnz
jge
pop
in
rorl
xor
sub
cld
aaa
cltd
jnp
lret
or
imul
pop
mov
imul
jns
loope
jmp
into
sbb
inc
rcrl
sbb
popa
out
ljmp
loopne
sub
mov
fsub
stc
dec
dec
xchg
leave
cmp
or
and
mov
fcoml
inc
xchg
push
loope
test
or
pop
xor
lahf
xchg
fistl
xchg
inc
call
push
jle
add
cmp
cmp
push
rcl
js
incl
lret
xchg
mov
cld
int
cmp
jne
fidivrl
xchg
movsl
pushf
in
push
jo
add
jae
jl
mov
xchg
and
mov
cs
clc
arpl
add
cmpsb
and
add
inc
ficomps
lret
cmpl
mov
rorl
xor
mov
imul
lods
cmp
jge
mov
addr16
xor
outsb
ret
pusha
fimull
inc
or
mov
adc
mov
xchg
mov
test
sbb
in
mov
mov
call
call
movl
call
push
add
pushf
pusha
not
cmc
pushw
popfw
lea
jge
pusha
inc
pushf
adc
lea
push
pushl
ret
pushf
movl
push
pusha
mov
pusha
mov
pushf
movb
pushl
ret
lea
jae
and
mov
rcl
shl
rcr
mov
bswap
setno
cmp
mov
push
pushl
jmp
call
call
mov
iret
mov
push
fdivrs
lea
xchg
push
xor
mull
mov
fnsave
jno
adc
push
aad
pop
arpl
sbb
dec
das
fdivrs
lds
xor
jp
shr
and
add
xor
inc
push
jno
dec
scas
jb
sub
dec
mov
jecxz
mov
cmp
in
scas
ret
test
loopne
mov
pop
jo
mov
cli
pop
icebp
xor
add
sbb
lock
jle
arpl
movsl
xlat
idiv
push
adc
lock
push
pop
imull
incl
xchg
mov
lods
ja
xchg
sbb
mov
dec
flds
mov
adc
xchg
mov
test
xorb
inc
or
inc
mov
push
and
or
mov
sub
xchg
movsb
call
cmpsl
lret
movsl
rolb
mov
sub
je
lds
in
icebp
push
sub
cli
or
ljmp
xlat
test
stc
fistl
in
push
shrl
ja,pn
int
sub
push
push
dec
xor
adc
js
jl
loope
daa
int3
cmp
cld
xor
in
int3
bound
stos
cmpsb
and
lea
xor
fwait
adc
push
add
popf
hlt
or
in
dec
cmp
lods
gs
pop
push
rorl
sbb
inc
push
adc
in
or
bound
xor
or
outsl
loope
in
pop
adc
icebp
insb
cmpsb
jmp
pop
push
pop
fistpl
lea
call
push
lea
jae
test
pusha
call
cmp
pushf
jmp
lret
clc
scas
mov
dec
push
pop
push
iret
xorl
inc
fstl
fcoms
mov
gs
dec
es
pop
sub
daa
add
sbb
iret
and
das
mov
pop
inc
xchg
pop
outsb
or
ja
scas
xor
iret
add
push
in
aam
ss
sub
arpl
in
inc
xor
sbb
push
loopne
xor
xor
call
fcmovnu
xchg
sbb
and
cmp
into
xchg
pushf
lods
add
test
mov
push
mov
in
and
iret
sahf
and
jne
mov
std
push
jmp
xchg
xor
lds
mov
add
loope
and
cmp
inc
imul
xchg
mov
aaa
ss
mov
cmp
movsl
lret
pushf
shr
lcall
and
cs
dec
dec
mov
andb
in
lea
dec
es
adc
xchg
push
daa
cmp
out
push
mov
or
mov
cmpsl
mov
mov
jmp
loop
mov
lret
popf
xor
in
hlt
and
divl
jl
cld
sub
iret
nop
aad
cmp
sbb
call
imulb
cmc
mov
sbb
int
loopne
xchg
pop
ds
or
dec
mov
ja
insb
cmpsb
negl
pop
push
dec
push
call
push
add
addb
add
lret
add
add
add
add
cmp
add
xor
add
dec
pop
add
insb
sbb
add
add
test
ja
add
jmp
pusha
or
push
call
pusha
lahf
lahf
mov
pushl
push
movl
jmp
hlt
mov
aaa
mov
popf
xchg
mov
mov
sbbb
add
sbbl
fwait
aas
and
mov
test
in
mov
xchg
jp
inc
pop
repz
and
xchg
cmc
sbb
add
mov
lahf
mov
je
lods
cltd
ror
imul
cmpb
push
aam
imul
repz
or
je
xor
loop
dec
pushf
mov
mov
and
clc
out
jno
and
pusha
sbb
fiaddl
shlb
pop
inc
out
xor
ljmp
int3
mov
sbb
sub
dec
loop
dec
cmp
fs
add
mov
addr16
aam
iret
cltd
das
movsb
add
sbb
not
leave
sbb
push
in
fcompl
mov
fs
mov
lret
pop
cmp
inc
xchg
lret
movb
inc
aam
push
or
inc
shl
or
ljmp
cmp
aaa
das
mov
pop
push
xchg
adc
add
jmp
movzbl
lea
pop
push
bswap
mov
jmp
movl
jmp
push
pushf
lea
jbe
lea
sub
btr
xor
mov
sbb
or
lea
mov
ror
test
movzbl
add
ror
rol
add
shl
shr
shrd
mov
mov
ror
rol
add
pusha
movzbw
bswap
mov
pushl
call
call
pushl
popl
push
call
add
sub
into
and
inc
push
push
mov
mov
sahf
cltd
scas
mov
and
or
jo
into
push
sub
sub
movsb
sbb
in
pop
jecxz
sub
movsl
lret
and
out
aam
repz
int3
push
fs
ja
mov
cmp
xor
push
xchg
loopne
nop
inc
push
sbb
mov
add
add
adc
lea
call
pushf
jmp
cmp
loopne
adcl
inc
mov
sbb
les
scas
cmpsl
loope
ja
je
sbbl
jns
shr
inc
dec
lret
repz
ljmp
test
xor
mov
or
jbe
sbb
in
in
and
xchg
insb
fs
inc
and
frstor
orb
and
xor
jge
cltd
or
jno
xor
fcmovnb
pop
sub
xlat
ljmp
dec
cmp
stos
sahf
jecxz
mov
xchg
dec
mov
int
fsubrs
mov
and
addr16
cmp
js
sbb
in
jl
clc
push
xchg
int
fistl
push
jle
mov
sub
leave
test
leave
int3
lret
cwtl
lods
dec
pop
rolb
jae
aaa
sbbb
dec
insb
imul
and
add
mov
mov
std
dec
sbb
hlt
inc
cmp
lahf
les
mov
dec
and
lds
out
aaa
jg
lods
js
sub
jo
dec
dec
mov
pop
xor
pop
dec
mov
pop
in
add
arpl
in
ftst
mov
push
or
push
sbb
ret
push
jne
add
test
test
icebp
fistl
mov
gs
sub
sub
fisubrs
xchg
dec
jb
adc
mov
pop
dec
inc
inc
lret
pop
jp
mov
cmp
or
insl
push
ljmp
inc
cld
jno
and
mov
push
int3
scas
jns
push
cltd
jnp
jl
movsl
out
inc
mov
xor
pop
shlb
bswap
not
lea
pushf
movl
pushf
pushf
movb
call
outsb
push
or
incl
in
xchg
mov
mov
sbb
or
mov
sub
or
leave
and
and
push
lods
dec
jae
out
sarl
xor
cs
and
pop
shlb
pop
insb
xor
in
ficompl
inc
sbb
add
cmc
sub
pop
pop
rorl
ja
popa
cmpsb
sbb
sahf
xor
xor
sbb
cwtl
jno
add
add
push
sbb
les
sbb
inc
push
sbb
idivl
sbb
or
movl
call
cmp
pusha
lea
jge
jbe
bts
pusha
test
rcr
sub
test
mov
add
and
mov
lea
shl
add
btr
sbb
not
xadd
shr
bts
cmc
mov
inc
sbb
add
not
jmp
shl
setne
mov
cmp
test
cmp
movb
call
lea
jne
bswap
mov
pusha
pushf
pushl
pushf
lea
jmp
lea
jne
ror
rol
rcr
sub
shl
lea
pusha
mov
sub
pusha
rcr
jmp
in
aas
xor
jg
jmp
ljmp
xchg
jg
cmp
mov
sbb
rorb
inc
inc
fsub
std
jle
mov
stc
pushf
test
cmp
lea
call
pusha
pushf
lea
call
call
mov
pusha
mov
cmp
test
jmp
pushf
pushf
bt
xor
cmp
mov
push
test
add
test
test
cmc
bt
test
jmp
cmc
clc
pushf
add
bt
ror
mov
mov
jmp
daa
lret
pop
loopne
test
in
scas
insl
cmpsb
fmull
push
fwait
jno
xor
rol
cwtl
or
in
push
cmpsb
sbb
gs
mov
pop
cli
lret
mov
or
aas
les
repnz
xchg
mov
xorb
test
mov
pop
xlat
xor
inc
outsb
mov
mov
in
mov
xchg
push
cs
ficoml
and
pop
sbb
cwtl
xchg
popa
mov
dec
cs
ficompl
adc
ret
cmc
imul
add
sub
xchg
ficompl
dec
dec
lret
das
adc
mov
mov
push
fisttpll
sbb
repz
adc
pushf
pushl
push
lea
jmp
jne
nopl
arpl
rorl
pop
nop
mov
cmp
adc
gs
lahf
std
sbb
out
ss
inc
out
lret
cmpb
mov
jnp
adc
xchg
negb
into
jp
scas
data16
stos
push
out
mov
scas
stos
inc
subb
push
fistpl
jo
push
leave
pop
sbb
mov
or
into
pop
inc
pop
int
stos
jno
lock
inc
lcall
sahf
cltd
xchg
dec
lret
pop
jp
mov
push
call
or
add
adc
cmc
ret
fstl
mov
push
rep
jns
dec
sub
sbb
inc
add
mov
les
add
push
mov
pop
mov
sbbl
dec
push
inc
out
cmp
hlt
dec
clc
icebp
cmpsb
pop
cmp
mov
lods
dec
test
add
aam
push
mov
sbbb
popa
mov
icebp
sub
adc
mov
mov
sbb
push
cwtl
adc
ficoms
cmp
pop
int3
jo
jl
lahf
pop
mov
lds
call
imul
out
mov
adc
insb
bswap
mov
jne
and
aam
and
fmull
rcll
or
mov
dec
or
xchg
cmpsb
and
push
lea
mov
cld
mov
mov
fs
cwtl
sub
xor
stos
imul
mov
mov
sbb
lahf
pop
call
out
test
outsb
push
or
cmpsb
mov
mov
and
cltd
test
cli
sbb
les
lods
popf
lret
cmp
pushf
cmp
xchg
jecxz
mov
cmc
sbb
or
iret
stos
int3
lahf
sub
cwtl
mov
sbb
and
aam
ret
adc
pop
pop
add
dec
mov
xor
mov
lds
pop
push
lret
jmp
cwtl
aad
dec
inc
dec
mov
xor
sbb
or
xchg
push
jmp
mov
pop
pop
dec
pop
pop
add
test
mov
clc
clc
cmp
test
call
btc
mov
call
mov
mov
mov
pusha
movzbw
lea
push
pushf
mov
mov
cwtl
pusha
pushl
popl
cwtl
pop
mov
bswap
lahf
movsbw
seto
movl
pop
call
sub
add
stc
xadd
shr
cmc
mov
bsr
bswap
adc
add
shr
clc
ror
setbe
movl
pusha
rcl
bsf
mov
test
pushl
cmp
lea
jbe
pushf
movb
mov
lea
jbe
pushf
test
sub
and
mov
test
mov
not
mov
shl
add
clc
xadd
call
lods
clc
mov
push
sub
xchg
imul
sahf
xchg
dec
inc
cmpl
and
jl
and
lods
lds
pop
aam
or
pop
mov
mov
dec
out
lret
ja
and
sbb
addl
or
cmpsb
xlat
mov
imul
movsl
mov
pop
pusha
mov
mov
xchg
bnd
mov
in
sbb
inc
repnz
adc
lahf
fcoms
mov
xor
loope
cmpl
cmp
fistpll
notb
push
jmp
lret
ja
pop
pusha
int
push
jmp
lea
jne
bsr
stc
bts
mov
rcl
bts
shld
pusha
sub
bswap
cmp
shrd
bswap
lea
cmc
sub
pusha
stc
cmc
cmp
pushl
popl
cmp
pushf
cmp
jmp
ror
pushf
pusha
ror
loopne
xchg
mov
inc
cmp
and
shlb
pushf
loopne
jg
int3
sub
or
fcomps
arpl
push
inc
mov
mov
cmp
cli
cmp
mov
sahf
add
cmp
ficomps
mov
inc
leave
or
mov
adc
pop
mov
adc
fs
push
rolb
test
cmpsb
pop
outsl
push
push
pop
mov
inc
dec
inc
fistpll
sti
stos
sbb
mov
fcoml
sbb
pop
into
adc
mov
cmp
or
pop
popa
cltd
jae
mov
gs
incl
cmpsl
cmp
xchg
xor
xor
sbb
fwait
negb
inc
loop
pusha
adc
xchg
add
mov
pop
xor
pop
fsts
sbb
iret
aam
dec
cmp
mov
sbb
mov
mov
dec
les
inc
incb
dec
fwait
inc
jge
mov
das
fimuls
cld
cmp
rcrl
inc
mov
test
sub
mov
fwait
and
fisubrs
cmp
sti
push
scas
cld
xchg
pushf
repz
loopne
sub
inc
fcoms
lods
sub
cmp
sar
imul
int
jne
ret
outsb
push
cld
cmp
sahf
out
lods
adc
rcl
push
lock
mov
push
loop
imul
lret
pop
inc
pushl
mov
xchg
orb
loop
push
dec
push
mov
stos
jecxz
sbb
fmul
lret
jmp
pushf
clc
bt
xor
pushf
cmc
call
lea
ja
jmp
mov
pop
pushf
bswap
mov
push
not
pop
mov
pushf
mov
not
movzbw
call
lea
je
cmc
pushf
pushf
add
cmc
cmc
cmp
pusha
push
lea
jb
clc
pusha
cmp
pushl
call
pushf
rep
not
lea
call
pushf
mov
pusha
pushl
pushf
lea
call
push
pushf
pushl
mov
pushf
lea
jmp
pusha
push
add
jmp
pushl
popl
pushf
pushl
ret
call
cmc
lea
mov
not
call
lea
jae
push
call
mov
pushl
pusha
lea
jmp
je
call
filds
dec
xchg
xlat
inc
fistps
mov
cmp
and
imul
outsb
cmc
push
stos
hlt
pop
pusha
negb
out
fsubrs
int
mov
inc
fsub
rorb
hlt
sbb
cmp
xchg
inc
sbb
mov
mov
ja
mov
push
pop
push
cmp
sub
test
movsb
in
stos
lods
xchg
sbb
aam
or
pop
insl
adc
xchg
sahf
mov
sbb
scas
push
push
lock
lds
cmp
in
push
scas
cmp
add
int
mov
and
inc
daa
movsb
sbb
ljmp
mov
clc
jmp
adc
mov
jmp
lea
ja
jmp
loope
xor
adc
mov
adc
add
xor
ljmp
xor
jns
mov
bound
dec
add
pop
xor
scas
adc
rep
push
scas
fidivl
or
lret
xorb
jg
mov
arpl
sbb
sbb
mov
call
into
jl
push
sbb
inc
mov
dec
jle
out
push
or
or
push
jl
in
mov
std
xor
adc
pusha
add
js
ret
lret
lea
or
add
fisubrs
cmp
mov
inc
dec
xchg
icebp
cmp
fildll
push
fwait
sub
ret
xorl
push
xor
cld
jae
sub
mov
arpl
stc
js
xchg
icebp
decl
add
and
movl
call
push
lea
je
pusha
add
mov
mov
cmp
pushf
pushl
jmp
sbb
call
nop
mov
sti
icebp
jmp
xchg
pop
adc
insl
shrl
xlat
jnp
loop
inc
and
adc
pop
cmp
add
push
in
and
jnp
mov
sub
and
add
pop
neg
xchg
add
std
push
lret
in
jno
mov
mov
xlat
insb
mov
movsb
sbb
imul
int
loop
das
mov
cwtl
je
xchg
mov
adc
dec
xor
cs
mov
xlat
mov
mov
jno
pushw
dec
addb
mov
mov
testl
stos
xchg
inc
mov
imul
loopne
pop
dec
push
cmpsb
cmc
cli
fcoml
shll
lahf
mov
jns
test
insb
loop
clc
leave
sbb
cmp
lcall
inc
mov
jno
sbb
clc
iret
add
cwtl
int
test
lcall
jecxz
lret
pop
mov
mov
cmpsb
ret
add
lea
jp
jmp
insl
lds
mov
stc
insl
jle
xchg
xchg
ja
sti
mov
xchg
lret
xor
icebp
or
data16
xchg
mov
mov
mov
pop
dec
lds
imul
inc
dec
jle
pop
int
movsb
shr
push
add
movb
pop
je
xlat
push
push
inc
mov
xchg
xchg
sbb
lods
es
jns
push
mov
mov
lret
cs
pop
jo
jge
push
push
sbb
inc
dec
jmp
push
or
sahf
arpl
sbb
lret
adc
or
shll
daa
imull
fs
push
adc
mov
sbb
int
push
lea
jae
call
sbb
insl
inc
push
pop
inc
xchg
xor
dec
xchg
xchg
dec
les
arpl
les
dec
sbb
push
test
call
dec
inc
rcrl
rcrl
or
inc
jne
fs
out
mov
in
sbb
adc
pop
push
inc
and
imul
add
mov
je
add
mov
pusha
mov
mov
push
mov
push
lea
jmp
call
cmp
pusha
jmp
pushl
lea
jne
not
rcl
mov
test
add
jmp
and
stos
sub
mov
xor
ljmp
sub
or
inc
enter
push
in
cmpsl
add
outsl
jl
jnp
scas
push
test
push
sbb
idivl
dec
ss
jns
shrl
out
sbb
insl
roll
std
das
xor
rolb
dec
sub
int
xor
inc
leave
jl
lret
nop
push
mov
push
inc
mov
or
jae
push
push
xlat
push
sub
lret
mov
xor
mov
sbb
cmp
idivl
loopne
sar
stc
adc
jmp
leave
fucomi
arpl
mov
rorl
jg
mov
cmpl
jge
jne
loopne
into
pop
inc
or
into
data16
push
hlt
lods
sbb
daa
in
lahf
icebp
mov
sub
xchg
or
out
in
pop
jns
lcall
push
icebp
or
pop
into
dec
and
dec
xlat
and
or
pop
xchg
dec
cmp
push
cmp
push
jl
pop
mov
xchg
push
jl
or
pop
sbb
mov
dec
outsl
arpl
inc
jb
add
pop
adc
jbe
xor
jl
sub
aaa
outsl
inc
cld
inc
inc
push
test
and
int3
mov
adc
xchg
iret
in
jl
into
jns
xor
andb
jge
mov
pop
sub
jg
popf
pop
jge
xor
adc
pop
mov
sbb
mov
add
dec
cld
jbe
jl
or
pop
das
aas
ja
pop
jecxz
pop
movsb
daa
inc
test
les
xchg
dec
inc
jnp
lock
stos
sbb
push
mov
inc
and
lea
ds
movb
push
lea
jmp
shll
xchg
fnsave
mov
pusha
xchg
adc
cmpb
adc
adc
aaa
ret
cmp
jnp
adc
pop
iret
push
cmp
cmp
dec
insb
xor
cwtl
out
adc
xor
mov
cmp
push
lcall
in
jnp
sbb
or
mov
pop
lret
imul
lret
mov
mov
cmpsb
or
cpuid
xchg
xchg
mov
scas
mov
dec
sbb
repnz
jmp
outsb
xchg
iret
sub
or
loop
rorl
sarb
pop
push
loope
lock
xor
sbb
lods
out
les
or
fwait
movsb
pop
nop
icebp
jbe
inc
pop
jmp
mov
inc
jl
lods
out
jmp
dec
mov
bt
ror
cmc
add
cmc
cmp
push
pushf
lea
bswap
lea
cwtl
mov
mov
push
pushf
mov
lea
ja
jmp
jmp
jnp
push
jnp
sbb
jns
call
arpl
repz
xor
and
xor
out
nop
pop
rorb
mov
icebp
push
dec
pop
das
fisttps
fstpt
dec
inc
rolb
outsl
jle
and
xchg
cmpsb
jo
clc
push
inc
dec
mov
aas
cltd
jo
dec
and
fnstenv
pop
aas
lret
negb
cmp
inc
in
sub
sub
dec
and
insb
imul
mov
ljmp
xchg
push
shll
pop
xor
call
jp
ret
and
icebp
addr16
mov
or
mov
jecxz
xor
inc
fdivrs
les
out
sbb
and
in
lret
es
divl
jg
lahf
sub
stos
arpl
sub
insb
scas
xchg
push
pushf
or
call
jmp
lret
hlt
ja
test
pop
xchg
mov
hlt
repnz
daa
push
jmp
andl
fsubs
test
sbb
push
sub
nop
jle
test
mov
push
mov
mov
fcoml
lea
insl
aam
sub
dec
jb
dec
jae
mov
clc
je
into
lret
pop
mov
out
lret
sub
xor
inc
mov
lods
cmc
inc
int
mov
mov
jae
pop
mov
dec
pushl
sbb
lea
pop
decl
test
inc
xlat
sbb
out
shld
movzbw
mov
bt
cmc
jmp
pusha
mov
pushl
pushf
lea
jmp
call
shll
testw
and
dec
mov
sub
movsb
pop
out
pushf
les
mov
adc
adc
les
or
inc
jbe
push
adc
jo
and
dec
inc
cmpl
insl
lock
lea
jne
jmp
lea
je
btc
xor
aas
or
mov
clc
mov
sub
test
add
neg
shr
sar
mov
clc
push
cmc
push
or
push
jmp
cmp
pushf
push
lea
jbe
bsr
and
clc
pusha
sub
or
neg
rcr
mov
shr
mov
add
add
not
not
xchg
shr
neg
bsr
mov
shrd
add
bswap
push
jmp
cmp
fs
test
dec
cmp
lahf
push
push
xorb
adc
add
rcll
ret
jl
mov
sbb
es
data16
dec
les
or
das
mov
and
add
data16
outsb
idivb
mov
adc
fs
je
movsbw
not
pusha
mov
not
mov
call
movl
pushf
pushf
mov
pushf
pusha
movb
pushl
ret
movsb
dec
add
imul
bound
sub
mov
or
aam
xor
pop
outsl
dec
leave
mov
adc
or
popa
mov
lcall
repz
inc
add
cmp
cmpsl
fisttpl
mov
and
pusha
mov
mov
movl
pushf
pushf
jmp
lahf
rol
sub
cwtl
movzbw
shl
push
cwtl
clc
push
aaa
call
adc
pushf
pushf
movb
pushl
ret
lea
call
call
add
bsr
call
push
lea
movzbw
setl
jmp
push
test
mov
jmp
popf
rdtsc
nop
call
movl
push
push
movl
pushf
lea
jmp
jmp
lea
pushl
popl
movsbl
lea
mov
pop
setl
not
push
mov
jmp
mov
jmp
push
cmp
jmp
cld
dec
lds
popf
cli
inc
test
sbb
iret
test
add
jnp
inc
mov
sub
push
sub
aas
adc
pslld
mov
leave
lret
aaa
mov
pop
adc
push
push
ss
das
jmp
xchg
mov
xor
daa
jns
pop
jo
fistps
jb
cmc
cmc
cmpb
jle
push
pusha
push
lea
jne
xor
rcr
mov
stc
pusha
add
clc
mov
cmc
stc
movzwl
pushf
mov
mov
test
mov
stc
add
clc
cmc
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cmp
pushf
jmp
addr16
pop
arpl
push
push
xchg
adc
sub
shll
int3
inc
or
fwait
sbb
loope
add
into
add
dec
add
mov
ret
jecxz
add
jp
and
out
sahf
aam
repnz
cmp
sub
sahf
add
xor
mov
pop
or
movsb
cmc
sbb
xchg
dec
push
or
pop
jno
lock
inc
sub
mov
inc
jg
sub
cmc
das
daa
pop
xchg
int
adcl
mull
jge
sbb
mov
les
or
mov
push
sub
xor
clc
outsl
mov
jb
ret
and
mov
in
mov
test
mov
or
test
test
mov
lds
sub
gs
cmp
jg
in
iret
or
lret
scas
nop
test
mov
add
sub
lret
iret
sbb
jne
cmpsl
inc
mov
push
pushf
lea
jmp
test
pusha
pushf
lea
je
stc
push
pusha
add
bt
bt
stc
pusha
cmp
movb
mov
pushf
pushf
lea
jmp
push
call
sub
mov
push
imul
pop
jl
mov
mov
enter
cli
pop
cmp
cmp
cwtl
and
push
cmp
mov
pop
xor
cmpsb
popf
lcall
push
pop
loopne,pn
or
cmp
mov
pop
mov
jo
mov
push
fdivs
and
and
popa
inc
jbe
push
mov
out
adc
shrl
shlb
mov
or
fldl
mov
or
and
jnp
insb
loope
inc
add
sbb
jge
mov
fiadds
shr
mov
inc
and
not
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
push
ret
cmp
mov
out
adc
sub
push
mov
bound
jl
fimull
mov
lds
dec
inc
jmp
push
or
outsl
mov
cmp
jle
and
imul
nop
mov
pop
xchg
out
lret
outsl
fisubl
adc
test
mov
pushf
lea
je
pushf
cmp
sub
pushf
cmp
pushf
pushf
pusha
jmp
jmp
xor
jmp
daa
adc
imul
xor
inc
add
roll
pop
sbb
or
dec
sbb
or
mov
cmc
adc
or
cs
push
js
je
cmp
pushf
jnp
push
bound
sub
xchg
cli
cmc
outsb
cmpsl
ficoml
jno
sub
sarl
push
test
loope
imul
mov
mov
popa
cmpsb
mov
push
mov
jl
lods
test
mov
cmc
fisubrs
jb
push
pusha
movb
pushl
pushl
ret
imul
gs
xor
cs
insb
add
xor
inc
and
push
dec
lds
dec
jle
adc
nop
add
fwait
xor
imul
mov
pop
je
mov
jmp
bound
dec
imul
sti
pop
xor
pop
and
and
leave
cmp
sbb
cld
xchg
ficoml
inc
jl
xlat
pushf
sbb
add
lret
je
lahf
loop
pop
jne
rorb
pushf
cmp
call
pusha
push
pushf
mov
call
jmp
mov
lea
call
xorl
or
cld
repnz
push
leave
scas
fs
test
enter
lret
push
mov
push
mov
dec
sbb
push
stc
lock
push
pushf
mov
add
les
and
inc
cld
mov
sbb
rcl
xchg
pop
mov
jg
sub
test
out
sub
daa
popf
xchg
into
or
std
xchg
or
xchg
jmp
stos
ja
sbb
adc
jae
les
or
subb
mov
dec
mov
out
addr16
sbb
inc
mov
fcompl
pop
jbe
mov
mov
pushf
lea
jne
push
movsbw
lahf
mov
pusha
pushf
push
lea
jmp
or
sub
cld
dec
cmp
mov
push
push
add
add
jno
cs
das
push
jecxz
sbb
loope
imul
andl
mov
add
adc
int
jl
mov
lret
cmp
or
mov
test
push
rcrl
or
mov
fisubl
iret
pop
jl
sahf
shr
dec
mov
stos
sbb
push
dec
jb
jp
repz
mov
or
dec
mov
jnp
or
sbb
lahf
fdivp
cmp
scas
repz
add
cmp
dec
mov
iret
jb
sbb
jmp
test
or
xchg
fld1
jmp
pop
clc
adc
sbb
imul
jb
dec
pop
or
int
or
enter
mov
or
adc
pop
mov
mov
cli
sbb
jp
fstps
mov
lahf
pop
ds
dec
rorb
sbb
adc
int3
dec
or
sbb
js
sar
add
stos
and
mov
mov
adc
test
xchg
and
pop
iret
lahf
jl
out
dec
or
fidivl
in
dec
out
imul
stc
jnp
ficompl
xchg
sbb
cmp
rcr
sub
mov
ja
or
outsb
scas
cld
rorl
add
test
push
cmp
xor
sbb
push
imul
aaa
or
mov
push
fsts
sahf
pop
and
jno
cmp
fstps
mov
clc
outsb
xor
mov
idivl
lcall
hlt
sbb
std
dec
mov
dec
push
push
jmp
push
mov
inc
movsb
push
xor
mov
mov
shlb
jge
push
ret
mov
or
shlb
ds
inc
push
dec
fwait
add
or
add
cli
sub
sub
xor
mov
out
enter
ljmp
dec
push
mov
sub
dec
cmpsl
sub
rcrl
cmp
lret
dec
addr16
pop
lret
mov
lock
sub
lahf
subl
in
addb
push
or
push
clc
pop
test
dec
pop
pushf
dec
push
or
adc
dec
cld
push
pop
jb
cld
mov
sub
xor
scas
mov
repnz
push
adc
jne
pop
mov
outsb
lahf
mov
mov
sbb
mov
adc
mov
insl
rorl
je
sbb
jge
push
adc
repz
xchg
rcl
xor
stc
push
adc
adc
jg
xchg
das
push
fsts
push
movsb
cs
jno
ds
dec
insl
jnp
push
stos
hlt
sub
dec
xor
inc
stos
push
fwait
pop
aaa
cltd
push
cld
aaa
push
inc
sbb
cld
cmp
mov
aas
pop
adc
cltd
push
pop
xchg
mov
push
imul
ds
sub
dec
or
jns
or
jns
mov
xor
outsb
mov
add
outsb
std
xchg
bnd
dec
fwait
xor
xor
fadd
add
sub
sub
mov
movq
mov
mov
out
mov
fsts
imul
dec
dec
cmp
outsb
sahf
or
outsb
out
and
lret
ror
pop
scas
pop
js
push
push
push
pop
imul
dec
pop
lcall
push
xor
mov
xor
adc
das
xchg
mov
mov
and
mov
lcall
push
jae
cmp
mov
jne
scas
out
mov
std
add
xchg
fcompl
push
adc
push
xorl
sbb
sar
sub
xorl
stc
or
add
push
sbbl
sub
out
xor
popf
mov
xor
lea
mov
and
adcl
lret
push
or
cmp
js
mov
loopne
sbb
adc
dec
and
mov
sbb
imul
lds
faddl
cmp
inc
mov
mov
ficomps
mov
das
test
mov
sub
adc
xor
mov
sbb
xor
outsb
das
mov
mov
and
mov
pop
cmp
adc
in
sbb
mov
jmp
imul
scas
pop
mov
stc
jmp
jl
popf
add
repz
stos
in
or
jnp
dec
sbb
sbb
mov
mov
sub
add
popf
fnstcw
pop
fidivrs
aad
push
jns
dec
mov
sbb
lahf
repnz
push
jl
sarb
xchg
jge
or
sahf
sbb
mov
cld
sbb
mov
jl
sbb
ficoml
lcall
outsb
cmpb
cltd
or
cmp
std
xor
pop
mov
scas
inc
lods
sbb
jp
test
cmp
jmp
lcall
xor
lret
xor
cld
js
mov
std
mov
add
add
inc
ljmp
dec
sbb
pop
dec
jp
stos
or
and
jae
cmc
lds
pop
sub
or
mov
insl
das
push
sub
sti
lea
stc
sub
std
sarl
push
xchg
lea
mov
mov
adc
cmp
dec
lds
add
ret
mov
or
pop
dec
sbb
dec
movsb
and
sbb
test
inc
or
sbb
pop
ljmp
adc
imul
dec
jae
jne
add
sub
pcmpeqb
pop
push
ljmp
js
fnstenv
pop
pop
add
popa
jb
imul
sbb
test
fnstcw
jp
clc
js
mov
push
dec
adc
sbb
fldcw
add
sbb
cld
xor
pop
out
sahf
rcrb
xchg
dec
jge
jne
mov
jmp
mov
dec
or
idivl
cmp
adc
sti
inc
cli
or
jl
jecxz
sub
add
and
sub
mov
xor
or
lret
push
repz
out
fnstsw
push
mov
das
mov
adc
sub
dec
dec
sbb
fstps
fiadds
pop
cmpsb
push
lea
add
push
sub
xchg
xorl
int
jp,pt
rorl
sbb
sub
mov
fwait
js
cmp
ret
jp
mov
mov
xchg
std
sbb
lcall
sub
inc
xchg
or
inc
int
adc
mov
adc
lea
testl
lea
dec
sbb
adc
cmpsb
idivl
fistps
jno
sahf
movsl
mov
dec
mov
sbb
lcall
sahf
sbb
fcomi
std
jg
mov
sub
aad
hlt
fdiv
dec
movsl
lods
sbb
pop
sbbl
std
call
add
imul
xor
dec
sbb
jns
ds
sub
push
cmp
sarb
sub
sub
mov
sub
mov
xor
fwait
lea
ljmp
scas
push
xchg
push
divl
add
stos
push
test
roll
enter
inc
cld
call
out
shrl
jnp
cld
sbb
sub
lods
push
andl
xchg
in
push
add
sub
into
pop
jbe
mov
lret
rcll
xchg
jae
scas
dec
stos
adc
sub
push
and
sbb
mov
inc
sub
push
jbe
jmp
push
sti
pop
sub
lahf
jge
ljmp
push
xlat
mov
push
lret
insb
or
adc
or
imul
cmp
pop
cmpl
sbb
push
adc
sti
pop
inc
adc
mov
jns
hlt
inc
das
sub
sbb
sti
push
jl
leave
cld
insl
push
push
cwtl
push
xor
ja
sub
ss
mov
xchg
add
sbb
dec
pop
xchg
adc
or
lcall
cmp
mov
enter
dec
outsl
addb
add
and
xchg
sbb
shl
lds
mov
sub
aad
push
mov
or
sbb
enter
int
push
shlb
and
add
xchg
add
pushf
sbb
dec
adc
stos
imul
mov
jmp
stos
and
add
in
cmp
ja
adc
sub
add
and
repnz
pandn
mov
fs
cmpsl
daa
aas
gs
jg
loop
fstpl
ds
push
xchg
sbb
fs
xlat
push
jnp
les
mov
aaa
in
xchg
fs
cld
sbb
int3
pop
adc
inc
data16
inc
xchg
or
into
sub
es
sbb
inc
or
insl
stos
imul
cmp
insb
add
lret
push
and
call
add
sub
xor
bound
jae
xchg
mov
adc
mov
and
hlt
add
insb
adc
in
mov
jno
pop
and
sahf
icebp
add
jmp
mov
icebp
mov
mov
adc
inc
add
xor
jbe
imul
das
ds
sbb
jno
je
sbb
push
out
rorl
mov
adc
jle
pop
shll
inc
jae
push
mov
hlt
ljmp
and
insb
adc
or
push
mov
jns
sub
and
sbb
mov
or
add
adc
mov
jge
cli
repnz
icebp
and
add
xor
dec
pop
cltd
mov
push
mov
xchg
xor
mov
in
sbb
cmp
enter
sub
pop
push
in
ja
mov
xor
xchg
adc
add
rorb
push
loope
test
lock
add
jns
jbe
ja
insl
scas
cs
in
sub
cltd
push
roll
std
mov
add
outsb
repz
add
and
stc
lcall
push
call
mov
inc
mov
test
loopne
xor
outsl
inc
sbb
cmp
or
out
dec
pop
je
das
mov
xor
xlat
cmp
push
xchg
call
ja
scas
loope
clc
xor
loop
dec
shrb
add
out
repz
shl
imul
addl
sbb
and
xor
jns
adc
push
cmpsl
mov
test
test
sbb
das
das
icebp
in
test
loop
mov
ljmp
xor
in
push
push
mov
jl
xorb
aas
scas
mov
call
and
hlt
addr16
aam
mov
popf
cmpsb
movsb
inc
in
add
inc
inc
mov
ljmp
adc
mov
sbb
rorl
inc
sub
xor
sbb
pusha
inc
outsl
movswl
xor
add
push
xor
xor
inc
pusha
addb
push
xor
popa
or
jno
lcall
mov
sbb
jnp
jno
ss
shll
gs
sub
popa
mov
jecxz
in
std
sbb
in
sub
in
mov
cmp
sbb
push
push
inc
les
ja
aas
jno
cmp
pusha
mov
mov
mov
mov
or
cmp
adc
ja
jle
mov
sbb
in
rclb
ja
or
adc
adc
or
jmp
push
test
jbe
xor
in
incl
fidivs
mov
addl
cmp
sbb
xor
mov
insl
jns
mov
stc
mov
fadds
jb
pop
mov
mov
pop
mov
hlt
sub
clc
bound
inc
lods
mov
push
sub
in
adc
dec
xor
push
mov
inc
or
in
ja
jbe
mov
dec
mov
inc
jmp
jae
aad
jmp
dec
fs
adc
aas
push
mov
jmp
inc
out
test
fndisi(8087
pop
adcl
bnd
sbb
ljmp
movsb
insl
dec
jae
or
mov
push
xor
clc
xor
cld
jl
call
repz
pop
or
adc
adc
in
jo
mov
xor
xor
inc
dec
xor
jmp
cli
pop
ret
std
or
in
mov
cmp
hlt
sbb
or
in
test
cmp
xchg
hlt
out
push
jb
fsubp
scas
sub
jno
push
jne
xor
xor
mov
ja
adc
or
xchg
sub
xor
cmp
push
adc
pusha
cmp
jne
or
adc
jae
loop
pop
lods
iret
fs
je
inc
or
in
add
lods
add
xor
ja
sbb
xlat
adc
je
loop
adc
adc
sub
push
lds
inc
subl
pop
xchg
cli
and
pop
dec
jnp
call
hlt
cmp
jbe
mov
aaa
mov
push
enter
test
pop
mov
sarl
cmp
cltd
jp
jmp
mov
or
ja
lods
dec
jb
xlat
and
add
cmpsb
dec
repz
adc
aam
mov
and
out
jp
jns
shrl
push
lods
xor
add
push
cltd
mov
push
rol
or
cmp
jmp
push
call
dec
or
pop
jmp
dec
call
push
push
mov
jno
jo
imul
sub
mov
sbb
ja
ret
loope
pop
mov
jno
xor
xorl
mov
icebp
imul
jae
mov
inc
shr
jns
test
mov
scas
xchg
mov
xor
adc
mov
fwait
jne
or
std
xor
scas
or
mov
hlt
mov
add
xchg
lods
mov
cmp
xchg
sub
jne
imul
pop
xor
jle
mov
jno
mov
cmp
jnp
pop
out
andb
stos
and
repnz
add
cld
je
out
popa
orb
iret
aam
jae
xlat
pop
add
test
mov
adc
inc
std
movsb
mov
cmpsl
aam
or
jecxz
lea
pop
mov
testl
popa
fs
xor
push
icebp
xchg
divb
sbb
repz
test
loop
dec
loope
addr16
cmc
add
into
sahf
add
ja
les
mov
das
cmp
push
shrl
jmp
add
scas
mov
ja
subl
cli
and
fdivl
stc
jno
adc
repnz
jns
add
xchg
jb
mov
adc
add
ret
js
xor
stos
add
sbb
addr16
fldl
mov
aad
in
sub
in
rep
stos
fwait
out
imul
ret
lods
or
hlt
into
jbe
call
std
outsl
dec
adc
and
inc
sbb
scas
mov
adc
cmpsb
test
add
push
inc
insb
add
out
out
add
das
jg
xchg
cmp
dec
addl
add
mov
imul
mov
int3
cwtl
call
add
and
add
pop
xchg
ror
adc
fptan
cltd
movsb
adc
inc
dec
xor
jg
inc
add
in
sbb
add
sbb
iret
jmp
and
insl
hlt
dec
popl
xchg
call
inc
jo
add
jge
xor
testl
icebp
xor
mov
jae
push
shlb
xor
in
in
shrb
cmc
mov
pop
sub
test
push
push
out
std
es
xor
sub
jl
jb
call
sbb
aad
mov
sbb
sub
enter
mov
call
jo
jns
cs
outsl
jae
insb
or
cmp
pop
out
sub
icebp
jno
ljmp
sbb
push
dec
test
jb
mov
ror
mov
jae
shll
jb
adc
ds
daa
push
or
mov
negb
outsb
xchg
jecxz
push
ret
push
test
call
jne
pop
icebp
inc
jb
dec
jno
imul
sub
sarl
ja
push
pop
pop
jle
cmp
xor
and
cmp
cmpsb
jl
adc
xor
adc
icebp
sub
cmc
or
mov
mov
push
sub
cmpsl
dec
out
mov
pop
je
jae
sub
sub
insb
cmp
ja
sbbl
stc
xor
roll
cmc
insl
xor
mov
imul
xchg
push
lret
mov
sbb
jmp
icebp
mov
or
xchg
mov
enter
mov
cmp
fidivrl
rclb
mov
gs
mov
jl
cmpsl
pusha
jp
push
lods
jns
adc
push
jmp
sbb
out
and
and
dec
ss
mov
subl
leave
cmpl
xchg
nop
xor
insl
lret
in
aaa
push
insb
imul
adc
jg
xchg
cltd
icebp
pop
repnz
aaa
cs
mov
dec
xor
in
push
mov
inc
insl
xchg
les
ja
jecxz
sub
mov
mov
scas
cmc
repnz
cld
aaa
or
aad
icebp
adc
pushf
shr
aas
adc
pusha
loopne
jns
ljmp
mov
pop
jno
adc
mov
pusha
cltd
xlat
mov
out
addr16
sub
jae
pop
add
push
gs
ret
cmpsl
in
inc
pushf
pusha
cmc
cs
push
push
fs
pushf
shll
sub
sbb
arpl
scas
or
movsl
call
inc
xlat
cmpsl
add
pop
pop
popf
add
mov
mov
test
jae
cmp
cmp
pop
inc
aas
in
mov
ljmp
xchg
add
jb
cmp
jle
mov
andl
or
loope
and
mov
out
ret
aas
mov
mov
push
or
loope
inc
out
jno
push
lods
xor
pushf
daa
std
xchg
das
push
mov
movsl
ja
scas
pop
in
lds
sbb
add
jb
cmpsl
xchg
aam
insb
inc
loop
bnd
cmp
testl
mov
mov
dec
ja
std
xchg
icebp
cmpsl
push
or
jnp
shrb
sub
into
mov
mov
inc
jle
and
adc
sarb
add
dec
cld
add
mov
pusha
sbb
outsl
outsb
xor
pop
call
push
das
xor
sbb
sbb
sbb
dec
sbb
sub
clc
jno
es
xor
mov
aam
or
mov
daa
push
xchg
sbb
cld
jns
jl
xchg
pop
inc
sets
add
pop
leave
shrl
dec
push
popf
aas
movsl
jg
sahf
ljmp
repz
shrl
mov
insl
and
pusha
cmp
push
cmp
push
pop
xor
jne
xchg
xchg
sbb
das
xor
out
jns
clc
leave
mov
sbb
in
xchg
bnd
cmp
jo
cmp
shlb
add
inc
push
loop
push
and
jo
inc
test
rcll
push
cld
xor
aas
subl
andb
loope
add
inc
testb
je
in
and
call
push
push
mov
push
and
shl
repz
xchg
in
dec
inc
outsl
jns
xchg
add
loope
push
in
and
mov
imul
push
push
repnz
xchg
aas
mov
cs
ret
and
enter
stc
and
mov
das
push
lret
mov
and
push
ja
push
idivb
jae
jae
fsubs
and
jg
imul
jno
jns
test
xchg
push
pop
stos
mov
icebp
push
das
add
and
enter
or
dec
cmp
or
dec
mov
das
in
pop
in
cld
xor
scas
jbe
lret
and
pop
and
gs
cmp
mov
add
das
push
xchg
adc
sub
enter
mov
and
int
inc
or
xchg
mov
nopl
or
and
inc
xor
xor
sub
das
or
jae
xchg
mov
mov
mov
xchg
fwait
mov
fstps
jbe
push
imul
jmp
jmp
test
lds
or
lds
lods
sti
cwtl
inc
cmpsl
xchg
sbb
loopne
fnsave
flds
ja
iret
shl
test
in
mov
push
jns
mov
cld
cli
icebp
test
push
sahf
sub
jmp
cltd
adc
imul
stos
ret
test
in
movl
int3
enter
jno
mov
dec
push
and
dec
ror
xor
ss
cmp
je
adc
jle
fisubl
outsl
mov
sub
aam
mov
cmpl
push
push
insl
fisubl
inc
in
sahf
xchg
nop
cmp
jle
cmc
adc
popa
jg
jbe
ljmp
sbb
xor
lret
mov
repz
jae
mov
xor
inc
inc
mov
sub
pop
and
cmp
cmp
xchg
aaa
inc
xchg
mov
ds
pushf
imull
adc
sar
sub
cli
stos
push
xlat
sbb
data16
in
dec
push
inc
ja
or
xor
aaa
push
test
mov
inc
xor
xchg
in
jne
push
mov
adc
adc
xor
sti
push
dec
mov
sub
jg
das
add
dec
jl
ret
push
mov
adcl
orb
adc
jmp
or
xor
cs
mov
mov
fnstsw
orb
clc
fnsave
push
sbb
cs
mov
shll
ret
inc
shl
mov
xchg
inc
insb
pusha
add
mov
ret
inc
xor
mov
push
stos
xchg
flds
ret
lret
xor
xor
jae
and
jno
xor
icebp
cmp
dec
inc
push
fs
out
pop
cmp
sub
adc
xor
fsubl
sub
insb
mov
sbb
stc
inc
ret
jg
xor
cld
add
push
repz
mov
add
sbb
or
in
mov
loope
xchg
dec
and
lods
fucomp
mov
mov
call
mov
cwtl
pop
mov
sbb
shlb
repz
mov
fdivs
adc
mov
cmp
jbe
push
mov
jno
cmp
cld
repz
pusha
mov
jne
cmp
cmp
add
cmp
loope
popf
mov
sbb
mov
jge
adc
jns
lods
cmp
dec
add
ss
mov
mov
in
ret
or
mov
ja
or
add
dec
sbb
sahf
ja
pushf
inc
dec
pop
and
popf
add
das
and
cltd
xorl
test
das
and
cld
sbb
insl
out
icebp
add
xor
outsb
das
or
adc
sub
rcl
call
and
ja
adc
std
fmuls
push
mov
das
test
ja
fcmovnu
and
std
jns
dec
or
jle
push
repz
jecxz
push
int
add
clc
pusha
je
xor
push
pushf
push
mov
adcl
fdivs
fdivr
xor
push
dec
pusha
add
lock
xchg
outsb
into
and
jae
test
cmpsl
in
cli
popa
jns
mov
sbb
pop
adc
clc
xorb
shrb
jne
imul
jo
cli
xchg
cmp
loope
sbb
mov
push
shlb
bound
pop
adc
jns
fmuls
mov
adc
fiadds
movl
call
push
xlat
hlt
movsl
sti
cld
jns
pop
scas
or
add
xchg
div
in
adc
shlb
addr16
and
adc
sbb
clc
int
or
pop
cmpsl
xchg
sbb
dec
stos
dec
call
push
lods
frstor
outsl
sahf
adc
dec
pop
xchg
adc
adc
push
pushf
add
lahf
adc
and
out
mov
fcomps
mov
mov
fdivr
lods
icebp
in
daa
mov
mov
dec
cmp
pop
cli
cli
jo
cmp
sbb
mov
jmp
in
jo
lock
add
repnz
nop
rorl
jl
paddusw
ja
xchg
shlb
outsb
inc
repnz
adc
fs
add
out
push
repnz
aad
mov
sbbl
mov
dec
hlt
stos
pop
mov
sub
bound
outsl
dec
pushf
movsl
jne
shll
sbb
lds
mov
mov
repnz
jno
repnz
cs
icebp
jb
sub
xor
jl
mov
mov
xor
mov
xorb
and
mov
add
imull
or
imul
mov
shlb
bnd
push
mov
xchg
dec
adc
addr16
bnd
cmpsl
nop
clc
clc
sub
shrl
ljmp
push
xchg
pop
call
aas
dec
cmpl
clc
ds
xor
das
in
cmp
or
int3
dec
mov
mov
clc
mov
xor
icebp
or
cld
test
mov
mov
or
cmp
divl
imul
and
je
ljmp
outsb
in
push
call
jle
cmp
roll
mov
sahf
inc
jbe
popf
and
aas
dec
sub
xor
imul
sub
repnz
add
adc
add
loopne
cmp
push
add
add
sti
insb
rolb
lcall
shlb
call
adc
es
gs
dec
insl
jns
fldt
mov
dec
je
and
jbe
xor
jb
xchg
jno
mov
adc
mov
sbb
and
pcmpeqb
inc
mov
fsubl
shl
pushf
dec
loope
in
outsb
adc
xchg
sbb
jl
popf
sahf
pavgw
mov
sbb
insl
jnp
das
xlat
cld
and
rcr
icebp
xor
cmpb
dec
mov
xor
addl
fwait
push
icebp
cltd
test
das
lcall
cmpsl
stc
cltd
jo
clc
out
outsl
add
adc
insl
in
roll
and
outsl
ljmp
ja
popf
outsl
popf
inc
loop
aas
and
testl
mov
cmpsl
mov
or
mov
push
in
fidivs
push
clc
pop
push
xor
jb
xchg
mov
std
fnstsw
ficompl
inc
inc
add
jo
outsl
div
cmp
fs
xchg
and
nop
cs
jno
sub
divb
popf
and
add
mov
inc
cmpl
xchg
inc
xchg
sub
mov
sbb
jns
mov
ficomps
aaa
std
and
lods
repnz
out
outsl
pop
xor
inc
scas
fcompl
push
push
outsb
cmp
icebp
insl
jmp
xor
in
mov
lods
cmpsb
adc
jno
icebp
fidivs
mov
dec
xchg
push
push
pop
pop
call
jns
mov
sahf
sahf
xchg
adc
push
mov
std
out
pop
lods
dec
xor
sub
shl
test
jmp
pusha
test
or
xor
cmpsl
fildl
dec
in
fcomps
inc
out
jbe
aas
aad
mov
or
lods
sbb
mov
icebp
dec
add
ja
xlat
jno
fimull
jl
test
adc
jl
adc
mov
neg
dec
fisttpll
ja
shrb
xor
das
loope
cmp
sti
xchg
jb
cmc
adc
mov
sbb
dec
push
jl
jbe
adc
adc
dec
push
popa
sub
lea
cmp
sub
test
dec
call
adcl
sub
and
shll
pop
movsl
add
pop
xchg
mov
lea
mov
xchg
insb
jns
mov
dec
jno
int
test
jno
gs
mov
repz
rcrb
and
rorb
pushf
jns
xor
adc
ljmp
jp
sbb
imul
in
aas
cmp
jno
mov
jb
shrl
jmp
fscale
inc
pop
iret
inc
cmp
and
xor
push
push
push
inc
or
subb
push
jno
cmc
jns
xchg
scas
loopne
mov
jb
xchg
push
icebp
lock
pop
jp
mov
jns
je
jp
and
lods
cmp
and
mov
pop
into
jae
inc
mov
cmp
xchg
push
in
popf
ret
loope
repz
xchg
test
add
cld
lea
rolb
mov
adc
and
arpl
ja
jmp
std
je
in
mov
dec
rcr
xor
push
orl
jae
dec
in
xchg
or
scas
adc
notb
out
mov
imull
ja
sub
in
insl
out
pushf
sbb
mov
in
mov
mov
inc
sbb
aam
sub
call
push
mov
lcall
push
xor
adcb
jb
push
xor
enter
iret
into
rcr
data16
add
mov
aad
jae
mov
ret
push
push
jae
xchg
sbbb
dec
cmpl
sarl
int
stos
je
push
pop
push
incb
push
ja
andl
push
scas
and
xchg
outsl
mov
jmp
push
scas
push
mov
cmp
pop
and
enter
push
cmp
jb
inc
je
pushf
jle
hlt
or
or
pop
or
adc
xor
mov
movsl
add
cmp
xor
push
into
imul
loopne
ljmp
push
adc
movsb
loope
jmp
ret
jo
adc
jle
pop
clc
aas
and
pop
sbb
ret
adc
dec
sbb
xor
mov
testb
mov
sbb
adc
fadds
mov
pop
add
mov
sbb
ja
decl
push
aaa
pop
insb
xchg
aaa
loope
shr
faddl
inc
std
or
xor
cmp
aas
call
and
or
sub
aam
cmp
imul
mov
ja
cmc
adc
xorb
pusha
rolb
xor
ds
adc
jno
daa
clc
xor
call
jae
cmp
stos
and
sbb
out
mov
pushf
pop
cld
xchg
jecxz
jb
into
clc
out
roll
xchg
pushf
sbb
cmp
sbb
add
inc
test
sub
repz
stc
xchg
int
add
sbb
inc
cmp
xchg
test
inc
mov
jns
sub
sub
out
sub
or
les
xor
jnp
mov
test
adc
repnz
outsb
add
push
bound
mov
fwait
cmpsl
xor
hlt
xor
add
leave
bound
clc
cmpl
movsl
loope
mov
pop
out
fidivl
cld
call
xchg
fimuls
dec
or
test
mov
and
imul
lea
jno
inc
insl
fsts
ret
pop
sub
lret
jno
popf
test
int3
add
and
fstp
incb
mov
jns
nop
sub
ja
cltd
fdivs
cmp
mov
mov
and
stc
loopne
lahf
hlt
xchg
lock
mov
loope
xchg
pop
jno
ja
add
pop
sub
xchg
add
or
adc
pop
add
jge
cmp
sub
aaa
jb
addr16
aaa
push
jno
cmc
out
inc
adc
aas
push
sbb
stos
lret
addl
ret
pop
mov
push
add
aas
ret
cwtl
add
inc
popa
sbb
pushf
jo
shlb
lods
and
adc
cli
add
jns
cmp
jno
jg
lds
icebp
inc
imul
icebp
cmp
add
mov
in
roll
ja
sbb
jl
mov
cmc
xor
jbe
ja
sti
clc
adc
outsl
push
ret
sub
adc
icebp
xchg
jo
popa
fnstenv
ljmp
imul
das
icebp
mov
lods
icebp
or
call
jns
push
sub
xchg
adcl
dec
in
mov
and
cmp
ja
ljmp
mov
xchg
loop
pop
add
repz
fistl
jns
loop
aas
xchg
mov
popa
sbb
jns
inc
push
jno
icebp
mov
sub
icebp
test
icebp
sti
xor
jmp
in
inc
inc
xchg
cltd
push
clc
cltd
jne
inc
xchg
jge
xchg
dec
cmp
js
add
jb
test
lret
push
stos
das
repz
ja
sbb
addr16
push
std
cmp
inc
das
loop
xchg
push
dec
cmpsl
and
stc
xchg
div
jl
dec
dec
xchg
mov
pusha
xor
xor
jo
cli
loope
adc
mov
aam
mov
mov
popa
cli
jo
imul
or
xchg
xchg
jle
aad
sub
out
xor
fisubs
xchg
cmp
xor
mov
xchg
aas
iret
cld
jae
ljmp
call
das
jge
leave
jne
adc
sub
sub
and
xchg
sub
jns
mov
incl
jbe
adc
sbb
dec
xor
in
push
imul
lret
sbb
xor
mov
pop
sub
fidivrs
jl
enter
cltd
clc
mov
cltd
cmp
test
push
out
lret
mov
adc
mov
imul
fadd
pushf
xchg
or
and
sub
mov
and
outsb
test
sub
ds
mov
pop
mov
inc
hlt
lret
ja
shrb
inc
jbe
pop
push
clc
data16
das
repnz
inc
xor
jb
mov
into
mov
dec
mov
ja
or
mov
inc
pop
inc
icebp
jne
inc
outsb
pushf
ret
jmp
inc
sbb
js
sbb
movsl
pop
arpl
adc
xor
mov
out
jns
sub
and
sub
aaa
shl
adc
cmp
dec
xor
cmc
inc
cs
insl
adc
xchg
test
popf
or
and
xchg
jg
adc
or
or
xor
fnstsw
test
xor
and
push
and
popa
test
mov
pop
add
insb
sbb
sbb
shr
cltd
xchg
stc
jo
jns
cmpsb
sbb
and
xor
sbb
or
pop
imul
mov
and
mov
les
fcoms
loop
ret
popl
cwtl
xor
repz
jl
outsb
ljmp
and
and
int
cmc
cmp
mov
sub
shlb
cmpb
out
repnz
aad
call
mov
fistpll
push
lock
add
in
cmpsl
int3
jge
dec
add
sbb
mov
cmpsl
jae
sti
push
jge
insb
int3
icebp
mov
and
jg
lock
in
sti
bound
dec
or
sub
jnp
rol
adcl
imul
adc
cmc
jl
insb
dec
leave
mov
cmc
jge
or
jno
xor
cmp
lret
jno
ret
mov
mov
jno
xor
rep
jae
or
jne
stos
out
ret
das
dec
out
test
insb
pop
arpl
dec
and
pop
aaa
cld
cs
dec
pop
add
popf
orl
jae
jnp
imul
pop
mov
push
loope
cmp
mov
pop
in
mov
xchg
fnstsw
test
test
or
add
mov
pop
aaa
add
xorl
std
xor
insb
decl
mov
imul
aaa
movsl
sub
mov
mov
mov
xchg
idivl
jg
mov
add
fdivrl
in
cs
jno
insl
aad
xchg
insb
add
lahf
out
jp
sub
popa
jb
pop
int
inc
mov
mov
mov
sub
in
aam
sbb
loop
pushf
out
in
popf
pop
sbb
jns
add
ret
in
adc
fnstenv
xchg
jns
repnz
xor
jno
out
adc
insb
push
xor
insb
jae
add
fisubrl
je
add
mov
add
cmp
subl
pop
loopne
xchg
pop
aam
sbb
test
cltd
cmp
sahf
insl
jmp
scas
pushf
in
dec
pop
idivb
sbb
inc
stc
jae
sbb
xchg
add
xor
sbb
mov
insb
subl
add
push
pushf
mov
unpckhps
adc
in
mov
cmpsl
mov
xchg
mov
notb
mov
movsl
andb
std
sub
jno
sahf
aas
cmp
in
mov
lods
cltd
aad
lahf
push
mov
push
loop
jmp
sahf
xor
ja
jns
xor
mov
ja
insb
jle
adc
test
adc
dec
xor
add
sbb
pop
cltd
in
daa
or
fwait
cld
inc
aaa
fisubs
int
test
clc
lock
inc
push
outsb
cmp
shll
push
inc
xor
lods
mov
leave
cmp
fcompl
stos
xor
jns
inc
inc
jle
mov
and
jno
dec
and
sub
jae
push
shrb
loope
fistps
or
jmp
insl
mov
in
in
adc
mov
mov
aam
xchg
int3
jns
add
cmp
loope
push
stos
imul
sbb
push
loopne
ja
arpl
push
pop
cmp
andl
test
mov
ds
cmp
lea
scas
fists
sub
fnsave
aaa
sbb
out
shlb
std
ficoml
pop
ljmp
xchg
add
push
jl
sarb
jge
loope
scas
popa
pushf
mov
sub
popf
dec
fcomp
lods
cmp
out
test
pop
shr
cmp
dec
pop
ja
insl
pop
dec
imul
adc
push
dec
mov
pop
jmp
or
dec
aas
xchg
push
iret
mov
adc
inc
mov
sti
or
and
sbb
out
ja
lea
dec
pushf
in
shll
mov
jo
dec
pop
pop
jmp
idivb
fistpll
repnz
rorl
test
dec
aas
xchg
cld
push
fs
jae
insl
dec
and
xorl
mov
into
jne
or
xor
xor
xor
mov
cwtl
test
add
mov
jne
push
repz
jns
pushf
dec
pop
addl
pop
add
in
inc
das
mov
push
ja
xlat
cmpl
jle
insb
or
push
push
mov
mov
or
call
xor
or
ja
rcrb
popf
hlt
jle
mov
cltd
cmp
stos
dec
dec
push
sub
out
aas
jns
mov
sub
adc
jo
in
cmc
dec
cmp
jecxz
adc
nop
lahf
mov
push
les
push
or
or
shlb
insl
mov
cs
in
in
mov
mov
and
pop
add
or
stos
adc
aas
mov
dec
daa
cld
cmp
rcrb
jns
in
sub
sub
cmc
jns
and
int
ret
fnstcw
loope
das
mov
pop
sarl
icebp
add
mov
arpl
adc
aas
loop
in
adc
add
cltd
testl
test
and
test
adc
scas
sarl
int3
rcr
in
test
sub
outsb
inc
aas
andb
mov
outsl
das
adcl
add
andb
dec
dec
stc
sbb
shll
mov
add
push
hlt
lea
jb
xor
js
add
cmpsb
sub
cmp
aad
divb
mov
push
add
cmp
repnz
loop
push
iret
das
outsb
xchg
aas
push
in
jb
aaa
and
push
add
inc
sub
scas
test
ja
cmp
bnd
cli
sub
mov
cltd
jnp
xor
sbbb
mov
adc
insl
orl
ja
push
aas
cld
sub
rcrl
mov
cltd
dec
or
testb
push
sarb
lock
loope
scas
inc
cmp
fildll
add
push
jno
orl
icebp
cs
aas
inc
pop
leave
in
push
in
loope
enter
movsb
xchg
add
jmp
sub
cltd
push
outsb
repnz
xchg
xor
jno
repz
ret
add
fsubs
je
add
dec
aas
xor
jmp
scas
cltd
mov
sbb
lds
insl
add
testl
push
push
sbb
xor
stc
xchg
pop
sub
push
test
add
rcr
pop
add
xchg
dec
loope
and
sbb
push
jb
jns
jle
xchg
in
mov
les
mov
cmp
sub
xlat
sbb
push
jp
xor
das
pop
xor
je
xchg
cltd
pusha
sub
rcl
pop
repz
rcrl
mov
xor
in
cli
mov
or
push
push
mov
and
sub
inc
test
out
xchg
push
or
add
or
cltd
mov
js
jg
repnz
ljmp
push
add
jo
icebp
mov
js
inc
mov
sub
call
popf
loope
mov
jne
adc
jecxz
add
dec
sbb
dec
stos
pop
mov
mov
push
aas
adc
mov
push
pop
pop
fstl
inc
sbb
and
aas
xchg
jno
icebp
andl
add
cli
stos
mov
mov
adc
sbb
loop
cmp
call
pop
je
jle
lods
shll
sbbl
xchg
jg
stos
test
pop
subl
lods
ja
and
push
inc
lods
popl
xor
pop
movsb
xor
ja
imul
xor
push
popa
out
cmpsb
push
sub
mov
aas
rcll
icebp
cmpsb
loopne
adcl
pop
mov
lods
insl
mov
xor
mov
pop
jl
cmpl
xor
loopne
or
push
mov
mov
sub
adc
pusha
stc
sub
xchg
daa
ja
push
xchg
xor
aaa
mov
stos
shlb
jp
in
les
sbb
cmc
outsl
mov
cmp
adc
or
cmp
dec
push
nop
jb
setno
shl
dec
jbe
inc
repnz
mov
je
fsubr
cld
adc
repz
mov
pusha
pop
xor
dec
add
push
mov
std
mov
jo
cmp
jae
xor
pop
xor
mov
and
in
and
dec
pop
xchg
xchg
sbb
sbb
push
std
pop
inc
mov
sbb
rcrb
pop
mov
addb
and
jl
push
out
and
mov
add
mov
cmp
add
into
aad
jecxz
aas
pop
add
adc
cmc
clc
cmpl
outsl
pop
insl
dec
ja
insl
add
cmp
into
jg
fincstp
aas
shlb
jbe
pushf
stc
jnp
mov
adcl
cltd
add
clc
or
cmp
dec
jns
cmp
mov
sbb
mov
xchg
xchg
xchg
push
out
imul
mov
shrl
fsubp
mov
scas
sahf
push
test
dec
cld
add
add
mov
js
nop
jns
mov
adc
lods
jo
in
sub
sub
cltd
jge
stos
in
int3
or
add
and
icebp
pop
push
xor
cmpb
sbb
or
mov
mov
rorl
scas
jle
or
addl
loopne
gs
adc
add
inc
lahf
lods
cli
lahf
mov
mov
xchg
or
cmpl
push
or
bnd
mov
and
add
inc
fucomi
mov
jbe
mov
rclb
orl
sbb
mov
fdivrs
push
sbb
outsb
mov
in
pop
std
outsb
daa
insb
push
sahf
xchg
ljmp
cli
insl
cli
fisubl
or
add
fiadds
cmp
lods
mov
xor
stc
cwtl
clc
sbb
mov
sub
jo
mov
jne
orb
fstl
jbe
jns
bound
cld
popa
ret
mov
inc
testl
imul
and
dec
lods
in
push
or
mov
das
outsb
icebp
frndint
pop
lahf
cmc
aas
add
adc
push
adc
xchg
mov
fs
loope
push
ljmp
inc
adc
dec
inc
mov
cmp
pop
xchg
out
cmp
mov
or
xor
int3
push
popl
jne
fistpll
ret
insb
dec
shll
dec
and
icebp
ljmp
add
stos
testb
dec
dec
inc
cmpsl
scas
out
cmp
xchg
sbb
and
icebp
add
lods
jp
and
cmp
jge
imul
js
jne
jl
sbb
imull
adc
std
xchg
or
and
scas
cmpb
jae
cmp
in
xor
push
xchg
mov
jge
es
jmp
add
jb
xchg
mov
mov
sub
add
xchg
and
aad
add
sub
jae
cmp
popa
std
mov
outsb
xor
add
and
imul
incb
ja
out
jb
add
fisubs
fdivl
adc
xchg
icebp
jnp
imull
push
pop
std
mov
imull
outsl
ljmp
int3
popa
dec
das
sbb
jge
pop
dec
jns
icebp
or
push
sbb
cmpsl
icebp
iret
cmp
mov
dec
cmpsl
push
sub
sbb
inc
cmpsl
in
roll
fistpll
xchg
mov
jecxz
push
mov
jle
cltd
sarl
xchg
push
js
cli
jl
pushf
lea
cwtl
andb
xorb
inc
repz
adc
aas
cwtl
stos
aas
iret
mov
mov
lcall
insb
xorl
mov
cmpsl
popf
sub
ljmp
dec
call
xor
das
xchg
adc
jb
xchg
in
lea
stos
cmp
les
fidivrs
popa
ja
mov
ret
mov
xchg
js
mov
inc
and
mov
and
push
xorb
das
insl
push
out
hlt
and
out
rclb
lods
mov
and
mov
data16
push
out
popf
in
mov
test
xor
cmc
add
xchg
inc
aas
cmpsl
shl
das
or
mov
and
sbb
xor
popa
sub
movsb
sbb
popa
push
sahf
outsb
adc
xchg
aad
loope
aad
bound
repnz
pop
sti
mov
push
cltd
and
dec
shlb
inc
sub
cltd
inc
out
sub
adc
cli
dec
inc
inc
scas
and
jmp
jle
daa
jbe
icebp
pop
inc
dec
pop
test
int
cmp
cmp
adcl
sahf
mov
in
cwtl
sub
das
push
in
xchg
shlb
call
das
mov
insl
jge
sub
xchg
pushl
lea
xor
cmc
mov
nop
sub
sub
xor
lock
mov
ja
cld
jp
fisubrl
xchg
pop
sub
inc
jnp
mov
popf
xor
and
add
ds
xchg
add
inc
mov
lock
negb
push
mov
iret
add
cmpsl
test
mov
or
pop
leave
call
int3
add
imul
insl
in
push
mov
cltd
and
cmp
les
movsl
shlb
mov
mov
int
sahf
sti
rcr
out
loop
gs
std
popa
fcoml
ljmp
xchg
loopne
dec
lods
mov
pop
mov
push
jnp
pop
sahf
xor
mov
add
orl
cmovnp
jl
ret
int3
mov
mov
ljmp
nop
inc
or
jmp
loope
ljmp
hlt
js
es
sub
mov
ficomps
pop
dec
xor
sbbl
out
leave
inc
xor
adc
lds
insb
inc
imul
in
adc
adc
xchg
add
pop
std
pop
jbe
mov
xor
stc
lret
pop
push
fbld
add
bound
outsb
lret
xor
cmp
aaa
xchg
das
into
icebp
push
in
inc
dec
imul
imul
cmp
and
mov
add
int3
jecxz
cmp
cmp
lods
rolb
mov
adc
pop
idiv
cmp
push
jb
inc
dec
cmpsl
mov
and
or
sub
and
sbb
xchg
arpl
das
and
inc
mov
leave
cmp
and
sbb
fisubrs
pop
pushl
add
in
in
pop
popa
in
jge
mov
xchg
mov
sub
cmpsl
shll
adc
add
push
mov
and
outsl
lods
repnz
in
sbb
lahf
dec
or
dec
push
cmp
fistps
pcmpeqw
jne
das
cmp
outsl
xor
mov
subl
in
dec
call
scas
leave
add
xchg
push
into
and
jle
adc
xchg
pushf
push
aam
sbb
xchg
jo
sbb
push
inc
test
repz
rcll
jno
pop
imul
pusha
xor
inc
sbb
or
dec
scas
neg
ljmp
cmp
sbb
loopne
jns
stc
enter
cmpsb
in
ss
mov
rorb
push
ds
popf
add
cmp
js
subl
call
ja
inc
pop
movsl
outsb
adc
scas
jecxz
or
sbb
ja
mov
das
pminsw
xchg
cmp
cmp
push
in
add
in
pop
pop
adc
jae
imul
int
pushf
adc
adc
int
insb
push
and
xlat
mov
cmpsl
add
jb
mov
inc
inc
cwtl
cmpsl
push
andb
xor
mov
and
or
xor
pop
xor
mov
adc
sub
in
xor
test
dec
adc
xor
xor
xor
push
in
add
sub
add
mov
scas
mov
cmpsb
sbbl
outsl
cmp
xchg
jge
imul
adc
decb
lea
fcomps
dec
orl
cmc
sbb
scas
add
or
pushf
mov
call
pop
out
fmull
aas
cltd
xchg
push
pop
test
sar
repnz
fldcw
cmc
jnp
mov
in
clc
loope
shll
xchg
mov
popf
aaa
cs
aas
bound
adc
cmpl
ficompl
pop
push
into
popl
mov
inc
jecxz
and
loop
movsl
in
in
add
enter
loope
sub
or
mov
imull
fstpl
adc
clc
jno
lods
dec
sub
sub
shr
imul
adc
js
jg
adc
sub
out
arpl
sub
xor
xor
sub
sbb
imul
out
sahf
cmp
sbb
cmpsl
and
pop
arpl
shll
mov
sti
xor
push
loope
lahf
cmp
sub
dec
mov
sub
jne
sub
adc
adc
xor
mov
cmc
ljmp
enter
in
int
inc
cmp
jae
cltd
push
mov
nop
xor
icebp
js
jnp
xor
or
mov
sub
std
subb
mov
inc
scas
fimull
loop
adc
mov
pushf
inc
dec
dec
mov
xchg
mull
mov
jb
ja
std
or
lods
imul
jmp
or
jl
fldt
popf
int
add
sub
std
inc
jmp
jl
jmp
les
pop
in
and
test
fs
aaa
out
xchg
movsl
mov
into
mov
adc
decb
or
push
in
mov
pop
jo
outsl
ss
cmc
mov
in
popa
subb
sub
xchg
or
xchg
mov
mov
add
jae
push
lcall
rolb
push
xor
pushf
push
maskmovq
outsl
adc
sbb
shll
icebp
mov
mov
add
divb
jno
in
outsl
jno
push
xchg
in
mov
outsb
push
shll
stos
outsl
dec
add
cli
jge
clc
jge
or
gs
xor
add
test
xor
xor
add
push
xor
jo
or
xorl
sbb
ljmp
adc
ja
xor
or
cmpsb
mov
std
and
jmp
jns
test
xchg
or
inc
jae
push
push
mov
fdivrp
pop
or
jbe
lea
push
mov
push
jns
mov
xchg
out
negb
xlat
xor
sbbb
pop
jl
das
movl
test
adc
cmp
mov
push
sub
inc
push
push
imulb
shll
jbe
or
cmpsl
or
fisubrl
sbb
je
adc
outsl
call
fldl
or
or
adc
adcl
enter
fistpl
xchg
movsl
sub
add
pop
shll
repnz
icebp
or
jg
push
push
icebp
arpl
jae
mov
and
inc
dec
or
jg
adc
push
push
lods
adcb
xor
inc
xor
sbb
jne
adc
aaa
ja
bnd
cltd
inc
pop
or
das
dec
lods
pop
jb
inc
ljmp
pop
dec
xchg
xor
jle
cmpsb
push
mov
xor
adc
jecxz
out
cmp
or
sbb
test
sbb
bound
in
push
sbb
cmp
dec
div
jecxz
pop
pop
lods
inc
loope
jne
mov
xor
daa
psraw
inc
in
mov
lea
add
mov
fisttpl
out
jle
sub
ja
pop
push
in
pop
or
ss
std
dec
std
std
mov
mull
fs
add
push
das
addl
ja
push
xchg
adc
lahf
sti
mov
js
lods
loope
repz
bound
adc
imul
vrcp14ps
and
push
and
stc
jnp
mov
mov
push
imul
sub
xchg
xor
mov
mov
push
or
push
adc
cmp
filds
loop
dec
iret
lods
in
das
xor
int3
and
int
cmp
jnp
cmp
out
pop
add
adc
dec
scas
das
subb
ret
add
sarb
adc
adc
shl
push
or
add
adc
inc
adc
aas
pop
mov
xor
das
dec
sub
pop
pop
cmp
dec
mov
xor
and
cli
push
inc
sarl
xchg
adc
pop
push
popf
adc
xor
insl
add
xchg
mov
mov
xor
mov
inc
mov
popf
dec
pop
or
sub
inc
rclb
aam
lea
and
popf
stos
jne
jmp
adc
inc
call
pusha
mov
insb
jb
and
imul
sbb
ja
rorb
scas
or
fcompl
lea
aaa
aas
loope
orl
mov
lods
push
pop
test
dec
jmp
das
sbb
rcrb
xor
test
jae
xor
cs
movlps
dec
sub
fldt
leave
movsb
xchg
cli
ljmp
repnz
push
pop
enter
sahf
push
xor
in
sbb
pop
test
push
sbb
push
outsb
sbb
andb
out
ja
cltd
lods
dec
aas
adc
mov
dec
sarl
mov
das
rcll
pop
mov
jno
mov
mov
outsl
in
pop
imul
mov
dec
push
in
jecxz
popfw
pop
jne
mov
ret
pop
aas
dec
xchg
jno
aaa
mov
mov
adc
insb
jg
push
stos
popa
cli
and
scas
or
adc
and
or
push
testl
xor
lahf
sub
push
ja
xchg
sub
sub
cwtl
add
mov
push
in
mov
and
subb
pop
leave
dec
je
ljmp
xchg
push
pop
loope
pusha
dec
xchg
and
sysret
sub
push
jno
cmpsl
loop
sbb
fidivrl
outsl
shlb
int
fwait
pop
cs
adcb
and
in
nop
dec
inc
sub
xchg
test
fbstp
mov
pushf
sub
enter
mov
add
push
adc
adc
sub
fs
gs
inc
xor
jl
test
into
inc
adc
sub
sahf
xlat
jne
stos
call
outsb
cmp
push
dec
popa
ja
pop
lds
in
dec
pop
shlb
sub
pusha
xchg
sbb
in
jbe
cmpsb
mov
pop
add
and
es
lods
adc
jne
jno
xor
sti
pop
xchg
fnstsw
les
repnz
mov
mov
push
adc
int
fimuls
loopne
stos
dec
adc
push
push
lock
jb
in
ljmp
and
xor
repnz
mov
loop
icebp
or
sub
and
notl
cs
pusha
andl
into
mov
repnz
stc
cmp
sub
int3
mov
jno
mov
rolb
mov
sarl
mov
dec
data16
jno
and
cmpsl
pusha
inc
xchg
std
xchg
lahf
pop
int3
repnz
jle
scas
daa
mov
sub
mov
ja
or
or
data16
rolb
add
in
movsb
fs
inc
fwait
or
cmp
bound
xor
scas
dec
subl
cltd
cmpl
jb
mov
adc
xor
jb
in
xor
sub
loopne
xchg
xor
sbb
cmpsl
mov
clc
ds
xchg
mov
ljmp
sub
jno
mov
mov
jne
shll
lret
fimuls
adcl
psrlw
sti
xor
mov
popa
xchg
jbe
mov
xor
add
clts
and
sahf
mov
mov
jmp
jno
cmp
icebp
dec
xchg
sbb
mov
xchg
sbb
push
and
and
shll
and
rolb
cmp
adc
fimuls
mov
and
sbb
mov
sub
adc
das
ss
arpl
jns
jbe
pop
divl
test
jae
jae
jbe
outsb
cmp
nop
mov
leave
cmp
bound
xlat
adc
xchg
stos
sub
sbb
insl
shrb
in
mov
inc
jns
int3
jne
loopne
repz
ja
rol
pop
mov
not
xor
jae
inc
sub
pop
sbb
icebp
aad
or
out
push
pminub
and
mov
sbb
out
and
aaa
fimull
jno
sub
mov
xchg
fisubrs
mov
in
icebp
repnz
movsl
mov
inc
sub
lret
mov
jne
xchg
add
adc
mov
aas
mov
shlb
jl
push
mov
or
push
jl
mov
iret
popl
pop
or
fisubs
pushf
mov
add
ja
xor
mov
cmc
push
and
popa
jb
fwait
adc
push
or
int3
mov
xchg
test
jp
jae
ret
push
xor
sbb
or
and
mov
mov
jno
popl
mov
cmp
sti
jg
dec
repz
push
mov
jecxz
imulb
rclb
xor
jbe
or
push
pop
xchg
xchg
sub
sahf
int3
sbb
and
xchg
mov
sbb
test
sbb
xor
mov
das
pop
shr
pusha
popa
test
mov
aaa
and
and
mov
call
rcrl
push
push
ja
xchg
inc
test
jb
rol
dec
inc
mov
pop
add
insl
pop
xchg
pop
xor
cmp
push
add
das
movsl
out
cmp
sub
xchg
sub
xor
jle
add
pop
stc
adcl
cli
jl
js
popa
mull
js
cs
and
adc
jns
repz
and
divb
call
and
repz
mov
das
insb
loop
jg
enter
push
sub
cmp
imul
add
mov
stc
rcll
out
pushf
adc
pop
add
and
adc
call
push
jo
out
cmp
mov
pusha
cmp
cmp
pop
mov
shll
notl
in
adc
cmpl
xor
inc
into
jge
imul
push
jmp
nop
sub
pop
lods
xchg
adc
test
add
cmp
leave
and
mov
mov
adc
xchg
cmc
dec
sub
push
in
mov
gs
pop
clc
pop
mov
sub
hlt
and
dec
push
mov
inc
clc
jo,pt
xchg
mov
jl
xor
pop
mov
repnz
fidivrs
fstl
sbbl
cmp
lret
xor
notb
sub
cld
cmpsl
xchg
pop
cs
daa
cmp
or
arpl
xlat
roll
sbb
xchg
fdivrl
push
jno
rcll
cmpsl
adc
shrb
or
jecxz
jo
ja
mov
test
xchg
imul
cld
xor
mov
cs
shl
fcmovnb
test
dec
fists
and
adc
das
decl
loopne
in
mov
rolb
cld
pop
add
in
stos
clc
insb
sbb
mov
fsubl
dec
aam
in
xor
mov
inc
test
xchg
call
push
or
aaa
sti
add
and
fs
add
dec
sbb
xchg
xlat
loopne
sub
in
mov
sub
cmp
mov
and
inc
andl
rolb
das
sub
inc
ret
adc
and
and
adc
cltd
sarl
ret
rolb
cmpsl
popa
sti
xlat
pushf
ljmp
adc
ljmp
inc
mov
jg
sahf
ja
adc
xor
jo
mov
add
fisubrl
mov
arpl
add
sub
or
cmp
imul
imul
inc
lods
dec
popa
dec
aam
andb
insl
das
push
sti
mov
cmp
not
rcrl
xchg
xchg
fildll
in
icebp
mov
imul
sti
xor
sahf
test
add
adc
sub
cmpb
mov
mov
mov
ja
movsb
adc
jmp
popf
imul
adc
loopne
xor
sbb
pop
and
add
lea
sub
scas
inc
jmp
or
jmp
jg
mov
push
sbb
inc
sub
icebp
adc
push
xchg
xchg
add
icebp
mov
mov
sbb
sub
sbb
or
jp
sbb
jle
add
in
or
mov
insb
call
jl
mov
cmpsb
push
in
out
mov
addr16
jecxz
dec
call
mov
fdiv
xor
xorb
mov
pop
xchg
call
imul
add
push
das
mov
sub
movsl
lods
addr16
mov
sbb
scas
test
movsl
dec
push
inc
sbb
mov
data16
pop
nop
inc
sbb
jno
sub
outsl
nop
xchg
push
adc
dec
jecxz
jle
push
fsubp
js
aad
cmpsl
xchg
int
in
test
or
outsl
ja
xor
pushf
arpl
jb
shr
mov
jp
fidivrs
mov
xchg
out
andl
sub
push
push
mov
mov
das
mov
sarl
adc
mov
cmp
std
loop
mov
ss
das
ja
jo
mov
xchg
mov
and
cltd
imul
int
jo
ss
mov
xlat
pop
and
repz
stc
sbb
mov
js
adcb
lret
jl
es
ret
adc
ret
and
hlt
aaa
push
das
xor
negl
stc
add
push
dec
sbb
jl
jno
push
xor
mov
aaa
adc
mov
je
subb
or
or
jns
icebp
xchg
gs
inc
sbb
and
loop
int
dec
mov
dec
loope
dec
xorl
jb
push
sub
inc
ret
or
iret
mov
in
adc
pop
xchg
insl
scas
mov
cltd
daa
push
push
icebp
cmp
mov
cmpsl
mov
lods
ret
mov
out
add
out
icebp
cmpxchg
adc
and
cmpsl
push
dec
adcb
shll
xchg
inc
xchg
cmpsl
out
xor
add
push
cld
ret
ror
jns
outsl
mov
and
aas
xchg
jecxz
cli
mov
das
insl
push
mov
mov
in
cltd
das
sbb
pop
or
sub
fucomip
out
aam
and
insl
aad
dec
xchg
daa
inc
das
add
mov
ret
dec
xchg
adc
adc
call
xchg
insb
mov
cmp
dec
jle
push
mov
pop
mov
div
ja
xchg
in
jbe
push
jl
mov
or
push
jno
dec
out
mov
sbb
mull
add
cmpsl
mov
cs
icebp
test
mov
ficoms
out
jp
sub
jno
icebp
insb
xor
cld
and
loop
push
andl
add
fmulp
inc
dec
repnz
add
xor
repnz
mov
add
hlt
mov
dec
stc
sub
hlt
cmpsl
popa
mov
testb
push
outsl
adc
xor
jb
xchg
movsl
das
sub
out
sbb
nop
jge
mov
cmpsl
or
sub
sbb
addr16
insb
cltd
cmp
ds
jae
inc
inc
hlt
xorl
adc
movups
popa
in
clc
loop
sub
into
aaa
sar
jae
div
aad
or
ss
inc
lods
jns
daa
cld
jg
jecxz
mull
hlt
xor
add
das
es
add
insb
mov
inc
aas
int
mov
lods
iret
mov
cltd
sub
aam
repz
clc
arpl
xor
sbb
mov
jno
cmp
mov
cmpsb
addl
lods
sbb
and
adc
fdivs
clc
shrb
sub
cli
push
inc
xchg
adc
jno
inc
xchg
jo
mov
sub
xor
loopne
jecxz
mov
sub
or
or
xchg
xor
xchg
int
jne
clc
pushf
cltd
in
xor
push
test
roll
cmp
inc
mov
pmaxub
mov
movsl
jecxz
inc
push
xor
adc
mov
outsl
insb
mov
out
jne
mov
add
repnz
jae
sbb
icebp
mov
xor
ja
or
pop
add
bound
cmp
mov
dec
add
mov
mov
jmp
mov
test
mov
push
pushf
xor
call
std
jns
push
fiadds
mov
in
sub
insb
jge
adcl
arpl
pop
xchg
xchg
lock
cs
icebp
cmp
js
inc
sub
mov
jl
jo
inc
cmpsb
cmc
pop
cwtl
popf
movsb
stc
les
ljmp
sbb
mov
jle
test
int
mov
push
shrb
xor
rclb
fisubrs
mov
nop
std
xorl
bound
aam
int
xchg
in
hlt
and
sub
mov
into
adc
rcr
insl
stos
and
pop
stos
ds
push
icebp
jno
add
popf
add
test
int3
dec
mov
in
ja
jns
std
enter
pop
push
mov
mov
mov
fwait
adc
xchg
sahf
mov
mov
hlt
imul
pop
mov
cmp
jno
int
mov
clc
ss
inc
xchg
or
scas
dec
push
dec
outsb
xor
adc
adc
in
clc
lods
imul
cmpxchg
mov
xlat
pop
push
or
repnz
scas
and
mov
lcall
addr16
mov
sub
shl
lods
repnz
in
pop
outsb
dec
inc
scas
aas
jbe
push
pop
outsl
in
aaa
jge
into
cmc
mov
add
sbb
inc
pop
loop
jmp
sbb
roll
in
jge
inc
mov
test
lock
das
shr
lods
push
inc
ret
test
add
icebp
bnd
imul
inc
jno
sub
aam
dec
dec
lret
ss
sub
cltd
cmp
mov
and
jmp
addb
lds
loope
nop
enter
and
jb
outsb
cld
pushf
adc
unpcklps
sbb
jnp
xor
insb
sub
fcmovnb
lods
lds
mov
call
sbb
dec
andl
in
bnd
push
jmp
cltd
and
ds
das
shll
lahf
dec
in
aas
pushf
inc
pop
cmpb
scas
cli
xchg
dec
rcl
and
rclb
dec
ja
inc
inc
cli
add
pop
outsl
cltd
dec
rcr
popf
dec
push
clc
jne
dec
cmpsl
leave
cltd
repz
xor
jle
mov
push
or
jns
or
addl
mov
mov
sub
jmp
dec
and
adc
cld
mov
sub
in
or
xor
jl
xchg
test
or
pop
loopne
fists
inc
out
fwait
sub
imul
pop
xchg
int3
jl
inc
ss
mov
mov
data16
ja
rcrb
xchg
cs
pop
bound
cmc
xor
mov
add
stc
and
mov
rcll
popf
or
sbb
fnstcw
sub
pop
in
inc
mov
and
push
jle
ret
mov
pop
xor
xchg
adc
adc
lahf
test
call
cmc
sbb
dec
lds
outsl
jae
int3
push
fsts
cld
and
mov
mov
pushf
jno
pushf
ret
addr16
push
jo
xchg
pop
cmpsl
mov
jge
add
testb
lds
ja
dec
sbb
cmpsb
push
ficomps
movsl
push
jns
mov
div
pop
out
xor
mov
add
cld
push
repz
push
lea
jo
ss
gs
xchg
repnz
mov
test
lahf
or
xor
das
sbb
test
sub
pushl
in
jge
sbbb
ds
adc
pop
iret
sbb
cmpsl
adc
inc
push
sub
outsb
sti
sbb
sbb
stos
popf
fmull
ret
imulb
xchg
out
fildl
dec
sbb
xchg
shl
sbb
in
lods
pop
in
add
repnz
mov
xor
into
cmpsb
test
shr
addr16
mov
and
sbb
jle
dec
dec
idivb
push
aas
dec
outsl
inc
adc
mov
fs
outsl
pop
push
mov
push
shr
adc
cmp
xchg
mov
jne
dec
shl
mov
fmuls
stos
div
jno
xor
mov
jb
xchg
ja
pop
inc
mov
sbb
xchg
fdivs
cmpsl
ja
xchg
mov
rorl
jmp
cli
addb
jb
push
push
insb
je
icebp
push
loopne
or
arpl
and
shrl
ret
push
gs
aad
adc
repz
sub
adc
in
sbb
sti
mov
cmpsl
lea
adcb
dec
adc
xor
lret
jae
adc
sbb
mov
mov
fs
dec
mov
andl
movsb
outsl
jne
jmp
and
mov
push
popa
mov
daa
lea
mov
adc
push
sbb
imul
mov
test
mov
sbb
push
sbb
nop
cmc
jne
mov
in
cmp
aad
data16
and
mov
sub
mov
cltd
pusha
cld
outsb
mov
dec
cmp
ja
popa
pop
lods
int
pop
inc
pop
cmc
adc
mov
jno
pop
and
fdivs
mov
cmp
mov
inc
fdivrp
mov
jmp
or
or
fs
and
jno
xchg
scas
cmp
cli
sbb
movsl
or
pop
jecxz
and
or
cmp
shll
push
pop
jle
jb
sbbl
mov
or
mov
scas
sbb
ret
pop
flds
pop
sarb
mov
sub
xor
pop
cmp
aad
cmp
ffreep
xchg
fsubs
jae
xor
test
pop
xor
arpl
mov
add
inc
rclb
jo
int
insl
scas
imul
xor
push
dec
add
sbb
icebp
mov
lea
popa
loopne
mov
and
xchg
imul
push
insb
mov
add
cmpsl
inc
sbb
mov
pop
les
dec
xchg
jp
xchg
in
out
leave
xor
movsb
ret
js
dec
jo
add
aas
popa
ja
cli
lahf
mov
cmp
roll
jecxz
iret
xor
jmp
sub
push
js
ljmp
dec
lds
pop
adc
sarb
or
push
out
push
add
jnp
adc
cli
mov
or
into
fisubs
pop
mov
adc
and
add
mov
int3
mov
add
jb
jo
pushf
mov
ret
in
pushf
ret
and
sbb
repnz
je
js
test
sbbb
ret
add
cmpb
mov
das
xor
adc
push
push
das
inc
xor
mov
push
imull
pop
ja
sub
sub
pop
jl
adc
or
pushf
mov
sahf
into
test
arpl
or
sub
out
and
es
sar
xchg
test
push
test
jg
cmp
repnz
mov
int
or
out
xchg
idivb
out
cltd
add
and
sbb
cmp
mov
incl
and
das
ja
cld
mov
aas
adc
leave
xor
mov
loope
icebp
clc
adc
dec
dec
mov
jle
mov
dec
stc
mov
ret
test
xor
test
pop
cmp
push
jb
mov
fldcw
icebp
cwtl
and
and
dec
mov
outsl
rcll
cmpsl
mov
push
jb
cmp
jnp
out
idivl
xor
cmp
cmp
loopne
andl
loope
mov
into
push
bound
dec
push
jns
or
cmpsl
stos
popa
cltd
ret
xchg
mov
pop
jne
adc
addr16
movsl
cld
pop
adc
and
js
mov
andb
lds
xor
mov
sbb
jg
xor
or
mov
rcrl
pop
xor
and
cmp
les
add
mov
sub
mov
mov
add
gs
mov
jg
aas
js
jge
pop
ja
sarb
jnp
jl
jno
xchg
imulb
jns
loopne
imul
xchg
mov
out
stc
add
push
jmp
dec
test
mov
outsl
adc
inc
icebp
sub
adc
lds
add
or
add
imul
and
scas
inc
outsl
sub
xchg
cmpsb
leave
xchg
hlt
jbe
test
aaa
push
pop
daa
out
mov
loop
push
scas
psrlw
pushf
std
addr16
dec
movsb
jle
dec
or
push
xor
mov
ficoms
add
or
into
inc
xchg
lock
add
jo
call
icebp
daa
lods
inc
add
dec
cmpsl
ljmp
mov
jb
psrad
xlat
xchg
fists
pop
data16
push
adc
ror
fisubrs
xchg
sti
or
inc
mov
rcrb
push
subb
lock
daa
cmp
xor
ss
div
xchg
jmp
adc
xchg
xcrypt-cbc
cmpsl
xchg
out
jne
icebp
cmp
iret
rorl
push
xor
pushf
or
pusha
divl
mov
sti
adc
xchg
fs
jmp
ss
mov
push
ljmp
jmp
xor
fs
and
jne
xor
sub
ljmp
ss
fnstcw
ja
insl
stc
mov
jns
popa
insl
stc
aaa
das
jns
popa
insl
stc
mov
jl
xor
inc
jo
mov
mov
xorl
cmp
cld
mov
mov
rcrb
cmp
sahf
adc
add
add
test
adc
cmp
shlb
jmp
repz
divl
mov
add
jmp
adc
rcr
or
xlat
adc
out
or
xchg
stos
call
aam
or
pop
test
sub
xlat
mov
xor
sub
std
scas
scas
sbb
adc
lods
subl
scas
adc
cmp
or
add
insl
stc
xor
jns
popa
insl
stc
mov
jns
popa
insl
stc
xor
sbb
shrl
imul
cmp
ljmp
icebp
mov
pop
xor
inc
pop
sbb
mov
je
stos
rolb
and
add
pop
popa
xor
es
xlat
call
jno
test
sbb
cmp
mov
xor
mov
or
shrl
cs
cld
dec
push
pop
push
cmp
mov
pop
jae
push
popf
inc
sbb
mov
adc
inc
imul
add
enter
mov
pop
movsb
aaa
ret
cmp
xor
fdivrp
js
stc
jb
fnop
imul
xor
xor
xor
add
jle
dec
mov
add
fsubrs
fucom
int
push
dec
ret
jns
cmpsl
add
aad
enter
ficoms
xor
jae
imul
das
jbe
xchg
orl
mov
cmc
lcall
sub
insb
les
je
and
and
push
repz
push
hlt
in
ja
imul
pop
mov
jb
xchg
and
aam
scas
sub
js
sarb
mulb
or
ficomps
jnp
ja
ja
lea
mov
cmp
and
pop
stos
mov
popf
cmpsl
pop
jo
xor
push
inc
xor
adc
loopne
cltd
inc
test
test
jno
mov
std
in
int3
clc
and
jbe
je
add
sbb
test
icebp
pop
hlt
sarb
sbb
mov
pop
add
enter
scas
sbb
jmp
mov
jmp
movsb
jnp
lds
adc
stc
sbb
shl
inc
fildl
stos
cwtl
pop
outsb
adc
adc
ret
dec
add
test
mov
lret
gs
and
jp
inc
jecxz
mov
pop
popl
sbb
pop
and
xchg
add
mov
mov
rcrl
shll
adc
pushf
dec
jb
mov
pop
jo
outsb
test
js
jge
scas
roll
imul
or
push
jmp
adc
mov
push
pop
rcrl
jb
punpcklwd
sarb
jns
das
mov
sbbb
std
push
pop
icebp
dec
jns
jb
sub
jle
and
xchg
xchg
xor
addr16
push
aaa
aam
ja
push
mov
adc
pop
mov
lods
stos
sub
stos
sbb
daa
mov
xor
xor
in
cmpsl
jmp
shll
add
push
movsb
cmpb
xor
sbb
or
popa
ficoml
adc
mov
add
ret
lret
cmp
and
sub
mov
sub
mov
insl
push
movsl
xor
addl
xchg
sbb
sub
mov
inc
dec
es
xchg
sbb
push
mov
dec
and
jbe
gs
inc
mov
testl
xchg
lods
cmp
pushf
mov
sbb
xor
sbb
xchg
sbb
jnp
divb
mov
bound
test
into
xor
stc
dec
mov
je
sahf
jmp
loope
es
mov
mov
xor
adc
fs
mov
in
jns
adc
mov
ja
popf
xchg
mov
xor
inc
cmp
inc
aam
sub
sub
movsl
dec
ret
lods
xor
inc
in
jo
pop
push
repnz
rol
pop
mov
stos
sbb
rcrl
insb
ds
or
test
add
repz
dec
jecxz
sub
in
roll
scas
mov
popa
clc
shl
pop
sub
ja
or
and
jge
push
arpl
add
jge
inc
cmp
xor
ljmp
jnp
hlt
inc
sub
insb
sbb
hlt
xor
adc
mov
jbe
xchg
mov
aaa
icebp
or
pop
pushf
cmp
cmp
xor
add
jmp
cmpsl
or
jne
ja
mov
sbb
xchg
notl
dec
data16
mov
insb
ds
mov
xchg
mov
inc
ret
leave
xchg
mov
imul
dec
jl
mov
jae
jbe
in
inc
bound
mov
xchg
call
imul
xchg
sbb
in
repz
rcrb
mov
loope
hlt
jo
xorl
cmpsl
aad
mov
jns
repz
pop
or
inc
jb
data16
das
jne
sub
mov
adc
xchg
imul
cmp
iret
dec
cmpl
inc
adc
push
rcr
mov
xchg
ja
push
push
je
jecxz
pop
jle
mov
imul
enter
and
xchg
ljmp
adc
adcl
ljmp
xor
repnz
into
add
push
add
inc
pop
and
xorb
jmp
add
cld
cmp
cs
mov
push
adc
xchg
pop
inc
repz
xor
fimuls
jne
jb
aas
addl
sbb
negl
and
xchg
push
pop
dec
or
jb
mov
lahf
test
or
cmpsl
cmc
dec
mov
jb
dec
jno
mov
ret
cmpsl
jle
xchg
adc
bound
shlb
mov
add
jge
in
test
inc
ja
test
imul
jge
mov
icebp
xchg
and
inc
add
xor
lcall
popa
push
adc
push
das
add
xor
dec
and
es
push
aas
or
movsb
outsb
xchg
xchg
repnz
lock
adc
in
add
cmpl
andb
xchg
stos
je
mov
pushf
push
sub
sbb
pusha
or
lods
xor
xor
rorl
xchg
add
sbb
in
add
aaa
cli
stc
mov
mov
add
into
pushf
fsubl
add
pushf
push
xchg
inc
dec
mov
jae
ljmp
pushaw
ss
mov
and
add
cld
jmp
and
aas
push
jmp
xchg
mov
sub
mov
jmp
xor
dec
jmp
jge
jns
mov
out
loopne
xor
and
loope
sub
jno
mov
push
jle
lea
test
jns
sub
aas
out
mov
inc
imul
inc
call
rcrl
inc
cmpsl
addl
jb
addl
pop
or
cmpsb
jne
add
movsl
adcl
and
sub
daa
cmpsl
jg
mov
jbe
sub
mov
std
ds
movsb
jge
outsl
aaa
sub
add
loope
insl
mov
jmp
inc
sbb
repnz
and
jnp
pop
imul
sbb
insl
sbb
mov
pop
sub
call
fwait
adc
ds
add
mov
incl
addb
and
mov
jnp
xor
mov
loopne
mov
dec
call
sti
rorb
sub
or
mov
jno
jbe
inc
ljmp
fsubl
xchg
repz
in
arpl
pop
pop
imul
mov
pop
push
jo
sbb
rep
xor
mov
jbe
jns
pop
comiss
xor
int
push
jp
xchg
inc
mov
pop
mov
adc
aad
xlat
and
sub
ror
pop
xor
xor
lea
insb
std
jbe
mov
inc
cs
jge
cmpsb
leave
cs
sbb
les
daa
push
push
icebp
sub
sbb
sarl
push
cli
xchg
hlt
jbe
aas
in
aaa
cmp
adc
and
stc
mov
inc
jns
test
add
xor
addr16
lock
mov
sbb
or
imul
jns
add
in
repnz
loope
mov
xor
ja
xchg
roll
jge
movsl
cltd
scas
leave
xor
inc
mov
pop
jmp
dec
dec
and
add
lret
test
push
mov
jne
subb
dec
loop
imul
push
sbb
pop
repnz
js
dec
aad
dec
mov
mov
add
clc
xchg
loop
xchg
lock
pushf
popf
pop
gs
loop
dec
dec
dec
loope
cmp
pushw
and
xchg
push
bound
add
xor
xor
scas
push
pop
push
and
popa
cltd
fidivs
imulb
push
xchg
adc
decb
jmp
sbb
ret
jmp
scas
mov
push
fdivrs
js
stc
push
mov
xchg
jle
pop
cmp
fldl
xor
mov
repz
pop
out
aaa
repnz
js
cmp
mov
test
test
pushf
sarb
scas
pop
dec
adc
and
loopne
mov
cmc
imul
sub
pop
repnz
aam
sbb
xor
mov
pop
iret
adc
pop
mov
xor
loope
lds
sub
int
hlt
mov
loope
sahf
mov
andl
int
popf
ret
and
mov
shlb
sbbb
mov
popa
into
push
mov
mov
sbbb
jl
std
icebp
shrb
jns
push
xor
popf
shll
push
mov
adc
mov
out
clc
mov
mov
ja
decl
dec
pop
insl
js
stos
adc
stc
lea
xchg
jge
push
int
daa
xor
mov
mov
out
jl
pop
aad
loope
or
pop
or
shrb
inc
xor
cld
xorl
mov
mov
mov
xor
sbbb
popa
jp
imull
lret
jge
sub
mov
int3
and
push
cmpsl
shll
xchg
jo
adc
jp
xchg
pushf
and
add
mov
and
xor
and
jbe
ja
jno
fcomps
or
cmpsl
pusha
pop
cwtl
xor
or
cs
ja
movsb
mov
push
or
mov
icebp
adc
sbb
lds
inc
adc
mov
xchg
shll
test
test
xchg
and
andl
jmp
sub
loopne
lods
es
sub
xchg
ret
nop
push
lods
jmp
aad
adc
fwait
popl
fiadds
insb
test
mov
sub
frstor
loope
out
adc
fidivs
cltd
lea
adc
inc
scas
sub
xchg
sbbl
push
insb
mov
call
scas
imul
fbld
repz
call
jle
int3
or
xor
insl
sti
scas
lea
aas
mov
push
into
pop
andl
pop
xor
adc
mov
lea
mov
push
into
mov
adc
and
xchg
xor
cwtl
mov
out
pushf
lods
cmp
cmpsl
cmpl
and
jns
imul
rcrl
mov
test
into
push
mov
add
xlat
add
adc
push
js
int
xchg
pushf
ret
fistps
adc
sbb
and
or
and
jnp
jecxz
enter
je
inc
pop
std
lret
xor
stc
adc
ret
loope
popa
loopne
in
xchg
aas
inc
mov
mov
mov
cmp
lret
nop
rclb
filds
mov
sbb
adc
push
and
inc
ss
adc
ja
sub
int
push
mov
mov
pop
out
xor
aam
xor
lret
sbb
lahf
hlt
pop
jnp
andl
mov
inc
jne
repz
cltd
adc
ret
repz
dec
stos
fsubl
push
cmpsl
out
icebp
mov
popf
dec
adc
arpl
push
icebp
cmp
shll
mov
std
xlat
paddb
add
pushf
movsl
inc
fldenv
xor
ja
fistpl
pop
pop
mov
inc
sbb
xchg
sbb
cltd
cmp
imul
ret
xchg
insl
daa
pop
cmp
das
js
sbb
xlat
xor
pop
mov
daa
popf
push
mov
mov
daa
cmpb
insb
ss
push
push
xchg
stos
je
jns
mov
das
ret
mov
ja
or
mov
fisubrl
push
jns
cmp
imul
popf
inc
push
clc
insb
add
imul
shl
test
pop
push
imul
fs
int3
cs
jbe
shr
loope
dec
lret
cmp
rcrb
xchg
cld
jecxz
jae
or
mov
add
loope
pop
popl
jge
scas
orb
jl
jae
jge
fistpl
mov
mov
xchg
and
mov
ja
lods
cltd
out
mov
popa
mov
xor
int3
das
mov
push
cmp
outsb
cmpl
inc
lea
mov
adc
mov
push
xor
divb
inc
and
fwait
xor
or
pop
or
xchg
ja
je
dec
cli
das
out
repz
cmc
in
cltd
add
adc
inc
mov
sahf
popa
mov
push
lahf
cmpsl
jmp
imul
lret
sti
xor
pop
ret
adc
gs
xor
pop
mov
push
inc
add
je
mov
pushf
in
fst
gs
icebp
cmp
inc
mov
imul
bound
ja
call
enter
call
sbb
mov
push
lahf
lock
xor
cmpsb
adc
mov
mov
or
aam
dec
aad
repz
pop
add
shl
push
or
pop
xor
fadds
xchg
add
clts
filds
aas
xor
jns
add
insl
sbb
mov
sub
lahf
lods
int3
jmp
sbb
jns
scas
into
xor
insl
loopne
ljmp
in
insl
mov
repnz
loop
idivl
std
inc
push
pop
std
push
cmpsb
xor
cltd
mov
and
icebp
lods
or
dec
or
fisttpl
jge
lahf
loop
stc
pop
enter
push
jmp
call
pop
rcrl
inc
sbb
idivb
inc
push
mov
xor
mov
and
inc
pushf
cld
push
cmpsl
popf
loope
in
lcall
mov
mulb
jmp
pushf
jne
xchg
cmp
pop
jle
mov
sbb
mov
xchg
aam
jg
sbb
push
cmpsl
mov
inc
insl
cli
ss
repnz
iret
aaa
xor
in
push
sub
int3
ficoml
add
push
mov
in
dec
and
cltd
inc
bound
adc
or
sbb
imul
jl
lods
dec
jecxz
insb
loope
test
repnz
dec
mov
lds
sub
adcb
jle
cmc
and
add
test
repz
sbbl
add
bound
out
xchg
rorb
lahf
insb
add
jo
mov
in
stos
dec
sbb
imul
mov
sub
sti
jae
outsl
jns
adc
pop
outsb
in
jns
bnd
ret
cwtl
inc
xor
ret
leave
dec
or
subb
xchg
cld
cltd
rorl
imul
ljmp
lods
in
sbb
dec
mov
aad
icebp
jge
jne
push
pop
cmpsl
push
lcall
cmp
lahf
or
insl
xor
cltd
cmp
adc
call
and
mov
add
icebp
dec
xorl
and
dec
mov
mov
sbb
leave
or
jmp
adc
xor
mov
in
aas
mov
xor
lods
test
sub
cli
and
sub
lods
das
cld
dec
inc
sarb
mov
push
inc
jmp
push
xchg
hlt
jno
sahf
les
in
loop
fcomp
dec
pusha
jne
icebp
repnz
and
insl
idivb
pop
decl
popa
rorb
testb
in
add
test
adc
stc
mov
addb
add
cld
andl
stos
xor
push
jne
lods
cli
push
adc
push
popf
in
sarl
ficoms
shrl
mov
inc
lods
pop
and
test
pushf
cmp
out
cltd
and
push
cmpsl
imull
inc
or
and
sbb
cmpsl
dec
daa
and
lcall
lea
adc
jb
std
jnp
jae
and
lret
pop
pop
push
mov
sub
insb
dec
aas
scas
adc
das
ret
je
mov
jl
out
aas
xor
mov
and
mov
loop
mov
lcall
loope
lods
sub
inc
xor
insl
in
mov
adc
push
jns
and
fiadds
in
ja
neg
subb
mov
add
fadds
push
js
movsb
pop
xchg
add
addr16
jno
js
je
jo
fnsave
push
push
or
jo
pop
mov
cmp
rep
push
xchg
insb
jnp
inc
rcll
or
xor
push
mov
fidivs
xchg
mov
pushf
and
xchg
mov
sbb
push
lods
lods
sub
rorl
push
mov
clc
push
adc
jmp
cmc
mov
jge
add
jmp
push
test
insl
xor
dec
std
inc
lods
push
mov
outsl
repz
cmp
inc
cmc
or
fsubr
out
mov
lods
push
cwtl
dec
mov
mov
js
add
test
aaa
add
sbb
shl
pop
cli
jge
xchg
xchg
bound
jo
icebp
fnsave
cli
xchg
jno
jg
mov
cmp
cs
and
hlt
in
lds
or
loopne
xor
push
lods
rolb
and
imul
popl
aad
addl
pop
sub
fldt
xchg
add
pusha
fdivp
ss
cmpsl
les
dec
out
ret
add
dec
mov
mov
adc
dec
xor
imulb
sbb
shr
add
loop
dec
jle
push
dec
icebp
ds
jbe
xchg
and
je
adc
jns
or
push
dec
cmpsl
inc
mov
aam
ljmp
cmp
fsubrl
movsb
lcall
lods
js
fsubrp
jmp
test
pop
or
or
in
push
decb
fs
outsb
gs
lods
jl
mov
adc
xor
xchg
mov
icebp
dec
aas
lret
and
mov
repz
jns
cmp
shll
push
xor
dec
and
pop
test
repz
jb
jno
cmp
jecxz
rcl
mov
jg
push
mov
sbb
inc
lret
jno
arpl
inc
sbb
pop
push
inc
dec
mov
jne
ljmp
sti
cs
inc
lods
pop
imulb
lret
xchg
mov
or
cmp
jg
dec
or
mov
loopne
inc
xor
sub
bound
push
punpckhbw
xchg
insb
jbe
ljmp
xor
aaa
aas
in
sub
push
cmp
dec
pop
test
sub
sub
mov
imul
imul
sarl
lods
add
aaa
push
cmp
stc
fdiv
lcall
inc
andl
adc
inc
in
stos
mov
cmpsb
push
leave
fists
xchg
add
aas
scas
or
adcb
cli
lods
sbb
xor
bound
outsl
push
cmpsl
sbb
push
push
mov
dec
bound
xor
movsl
lcall
repnz
sub
mov
mov
negl
adc
call
fwait
lods
testb
rcll
xor
add
and
adc
and
icebp
pop
mov
mov
or
popa
inc
pop
les
xlat
mov
push
das
mov
jnp
inc
adc
xor
addr16
pop
icebp
mov
daa
mov
mov
cmp
adc
std
adc
or
adc
mov
shl
xchg
jb
pop
mov
mov
dec
and
xchg
aas
cld
xor
test
sarl
adc
and
es
mov
outsl
jbe
rep
sahf
xor
cs
push
push
subl
mov
add
pop
dec
xchg
push
jg
lret
pusha
push
inc
ds
jmp
xchg
push
push
inc
orb
out
mov
adc
in
sub
push
xlat
xor
scas
scas
clc
mov
cltd
mov
adc
aam
popa
add
nop
add
insl
sbb
push
adc
outsl
je
std
sbb
inc
cltd
inc
xor
inc
xor
mov
dec
rep
icebp
or
mov
cmpsl
popa
adc
jbe
das
loop
sbb
neg
shrl
xor
push
in
imul
cli
add
lods
inc
adc
lahf
add
push
das
cs
mov
loop
sbb
outsl
icebp
pop
ja
fst
mov
or
pushf
mov
bound
inc
in
or
and
mov
pop
or
or
push
mov
xor
adc
addr16
arpl
movb
add
adc
insl
je
dec
call
and
out
xchg
loope
jb
sub
mov
sub
in
rcll
sub
push
cmpl
inc
sbb
cmp
sub
mov
adc
jno
ja
and
daa
je
and
adc
and
fildl
jb
outsb
jo
inc
push
jnp
jge
jmp
xor
mov
insb
test
sbbb
arpl
lret
push
fdivl
jle
clc
push
jno
jmp
push
sbb
in
push
mov
cmpsl
pusha
enter
adc
dec
shrl
xchg
jb
fucomip
sub
xor
xchg
ret
inc
or
enter
sahf
adc
aas
xchg
mov
stos
cmp
pop
lahf
push
mov
lods
mov
std
mov
test
add
pop
inc
loop
push
std
iret
test
sub
sbb
loope
repnz
mov
inc
inc
push
jbe
out
mov
dec
in
popf
adc
xchg
adc
sub
cs
mov
pop
push
pop
in
or
sbb
loope
cmpsl
in
loopne
scas
cltd
and
lock
mov
mov
shll
lods
xchg
daa
jnp
insl
iret
add
jno
lahf
pop
mov
cmpsl
lret
aam
cli
inc
pop
push
pop
sbb
inc
loop
loop
adcl
xchg
pop
enter
popf
fisubl
dec
jle
imul
aas
pusha
jns
jnp
jno
sub
cmp
adcb
xor
aas
mov
xor
add
loope
fs
mov
cmpsl
lds
xor
xor
xchg
jl
mov
into
dec
inc
pop
scas
jns
add
pop
out
cmc
cmpsl
cmpsb
ja
sub
popf
push
imul
orl
cmp
cmp
jecxz
rorl
adc
jae
jp
add
push
xchg
dec
adc
cmc
xor
jmp
mov
shll
adc
mov
and
dec
call
jmp
sub
ja
test
rorb
xor
leave
inc
mov
adc
pusha
pop
ss
mov
mov
ds
sbb
adc
repz
aas
dec
jecxz
xor
arpl
mov
sahf
mov
xor
push
aas
daa
rcpps
jecxz
pop
cmp
fldenv
addr16
cmpsl
sub
lock
mov
and
aas
shl
adc
gs
and
cmp
movsb
fstpt
mov
xor
push
pop
mov
jns
xor
sub
out
test
arpl
fadds
ljmp
repz
sub
mov
aas
cmc
cltd
xchg
cmp
cs
inc
mov
rcll
cld
pusha
xor
add
not
jae
xchg
push
das
mov
or
jno
in
mov
fsubrl
and
mov
push
mov
cmpsl
rcrl
sbb
not
rorl
fldenv
fwait
jne
and
movb
enter
insl
fldenv
mov
dec
je
sub
add
xor
and
jp
xchg
pop
imulb
addr16
ret
or
xlat
fdivrs
cmpsb
inc
adc
ds
repnz
jb,pt
sbb
aaa
jo
stos
mov
cltd
jne
mov
jmp
cwtl
mov
das
loop
xor
loope
inc
sarb
jo
std
je
aam
push
jg
sahf
pop
adc
xchg
shll
movsb
int
repnz
adc
ja
bound
mov
shlb
into
sahf
aad
shlb
icebp
pop
testl
in
sti
pushf
outsb
fs
inc
mov
int
mov
int
or
and
inc
inc
or
sbb
push
adcl
int
imul
shrb
lret
xor
pop
shll
mov
out
mov
mov
adc
imul
es
subl
push
add
cmc
shll
aad
pop
push
arpl
jne
movsl
in
lahf
or
jg
dec
and
cmpsl
in
sahf
xchg
into
popf
push
lcall
jnp
adc
jbe
add
cmpsl
xchg
ja
mov
scas
jmp
inc
mov
mov
xlat
and
cwtl
scas
inc
movsb
fildll
scas
imul
jb
fs
pop
int3
dec
mov
mov
addr16
les
adc
cmp
ljmp
cmpsl
popf
or
xchg
imul
mov
cmpsb
insl
fsubs
mov
loopne
mov
add
pop
adc
dec
aas
cmp
outsl
data16
lock
popa
cltd
xorl
adcb
dec
outsl
and
dec
paddusw
or
lahf
lods
ss
into
xor
push
jp
lock
push
addr16
mov
inc
stos
sub
popl
popf
sbb
out
call
push
inc
mov
int
cmp
les
fdivr
test
pop
lahf
insl
sbb
xor
movsl
xor
cmp
jecxz
jle
inc
insb
inc
inc
insl
jp
test
or
aas
xorl
jle
mov
outsl
mov
outsb
jns
jnp
and
push
cmpsl
xchg
xor
neg
ja
cmp
xchg
xchg
or
dec
mov
insb
jp
push
shrb
shrb
ss
divl
inc
ss
mov
sbb
xor
cwtl
pop
int
xlat
pop
xchg
lods
add
decb
lea
shr
insl
xor
add
xor
insl
dec
mov
clc
nop
push
fstpt
xchg
mov
add
loopne
icebp
mov
mov
xor
hlt
cmc
jo
cmp
shlb
xor
push
xor
roll
pop
cmc
enter
sbb
std
rol
stos
push
adc
cmp
aas
jmp
xchg
test
jg
loope
pop
jl
pop
or
xor
mov
push
add
xchg
and
movsl
out
xchg
fsubs
outsl
xor
call
ja
mov
lcall
dec
das
sub
repnz
pusha
push
cld
xor
add
or
mov
imul
sti
push
push
call
mov
rorl
sbbl
xor
out
mov
sahf
inc
xchg
aas
xor
push
sub
adc
dec
sbb
xchg
aam
adc
es
in
enter
fstl
add
push
cwtl
and
pop
test
ss
pop
cltd
int
push
push
push
call
and
adc
push
fldl
inc
xor
jl
clc
test
fs
repnz
out
jns
mov
push
fildll
xchg
lcall
mov
cld
mov
int
insl
fsubr
popa
ret
mov
dec
shll
xchg
rclb
cmpsl
ss
xchg
pop
mov
ja
push
push
mov
mov
cli
cmp
mov
test
mov
loopne
xchg
test
xor
pusha
xlat
xor
lret
add
cmpsl
inc
pushf
sbb
aas
inc
mov
mov
inc
ja
rol
jne
popa
xor
or
or
mov
add
in
insl
adc
cmpsl
or
mov
imul
ss
push
lea
push
rcrl
jg
fs
dec
cmpsl
adc
and
repnz
into
scas
inc
lret
and
jns
loope
xlat
xor
ja
loopne,pn
and
loope
xor
jbe
in
dec
add
xor
adc
insl
test
orl
inc
mov
and
shll
mov
jae
mov
jbe
or
jg
mov
xorl
mov
add
movsb
aas
inc
das
imul
sub
sub
cmp
cmp
cmp
add
jmp
xchg
and
add
hlt
sbb
push
repz
cmpsl
push
push
stc
shll
dec
sbb
popa
add
xchg
pop
adc
sub
push
inc
jmp
mov
aaa
xor
mov
or
mov
aas
shll
xor
adc
sbb
adc
adcl
jo
add
adc
jo
nop
or
inc
test
and
ret
aaa
xor
sub
xor
insb
cmpsl
xchg
adc
int3
jne
or
pop
xchg
and
adc
ds
mov
mov
push
in
pop
cltd
push
cmp
push
xchg
mov
sbbl
xlat
add
xchg
jge
in
mov
mov
cmp
scas
push
push
sahf
into
push
cmpsl
add
mov
pop
pop
cmpsl
jb
pop
xchg
add
xor
push
lods
adc
repz
imul
pop
jb
repz
arpl
or
mov
or
icebp
das
in
dec
imul
ljmp
adc
cmpsl
jmp
jno
jns
aas
or
enter
mov
pop
mov
push
push
mov
adc
shlb
mov
dec
cmpsl
mov
enter
mov
aas
into
dec
mov
popa
ja
out
xchg
push
addr16
mov
ds
push
xchg
imul
mov
dec
pop
push
pop
xor
js
sti
pop
mov
jo
mov
jne
call
add
in
adc
sub
fidivrs
xchg
mov
add
push
clc
rclb
dec
bound
or
lods
shlb
inc
sahf
sub
xchg
pop
pop
add
in
sarl
je
push
stos
bound
or
in
sbb
cwtl
mov
fcmovnu
shl
pop
fsubp
or
xchg
and
xchg
cs
xor
push
sub
in
jg
ja
cld
jg
sbb
insb
fisubs
into
cmpsl
aad
push
xchg
cmp
insb
das
movsl
std
aam
mov
ja
repnz
scas
cmp
fstl
inc
cltd
ret
sub
or
shlb
test
das
sub
mov
pushf
sub
fidivl
xchg
fwait
mov
in
cltd
jp
pusha
jb
mov
pop
insb
add
das
leave
push
leave
xor
mull
mov
idivl
push
dec
imul
les
aas
out
adc
into
fldl
inc
push
or
inc
xor
das
mov
bound
repnz
xchg
pop
out
dec
sarb
pop
loope
sti
mov
pop
out
adc
cwtl
mov
test
fucomi
push
arpl
icebp
sbb
sub
mov
aas
mov
cld
lods
out
pop
xor
insl
push
pushf
mov
add
jns
push
jbe
mov
movsb
add
unpcklps
scas
mov
jge
adc
ror
stc
lods
adc
xchg
lret
iret
lret
idivb
arpl
test
iret
jae
fwait
std
adc
mov
jge
lods
pop
adc
ja
clc
insb
push
jns
aas
sbbl
jecxz
jne
xor
sub
jl
mov
insb
jo
cmpb
aaa
cmp
mov
mov
mov
sub
jae
leave
xor
enter
jge
jge
out
jb
in
pushf
movsl
aas
popa
push
sbb
loop
aas
mov
xchg
mov
dec
sbb
push
add
mov
in
aad
mov
mov
inc
stos
loope
xchg
dec
mov
popf
mov
test
jecxz
bound
inc
mov
adcb
fld
enter
es
add
pop
clc
mov
jno
je,pt
and
ja
out
cltd
xor
das
lods
mov
insb
mov
cmpsl
negl
test
jne
addl
push
cmpsl
pusha
test
inc
mov
push
popl
int
in
es
add
jns
jne
xor
popa
inc
stos
clc
adc
cmp
sbb
mov
jmp
pushf
mov
pop
stos
stos
push
jb
mov
out
push
das
enter
or
bnd
xorl
jmp
sub
mov
or
es
push
jge
popf
adc
sbb
cs
sub
or
xor
jne
xchg
mov
repnz
mov
dec
sahf
imul
loop
sub
lret
jnp
fwait
adc
ja
xchg
pop
sarb
popf
jp
add
adc
loop
push
push
ja
gs
cli
scas
test
das
xor
sub
in
mov
imul
xchg
arpl
mulb
inc
adcl
mov
mov
mov
fs
stc
push
movsb
and
sub
stos
jo
loopne
sbb
cmp
mov
aaa
punpckhwd
andl
jge
mov
ja
testl
jb
push
and
ja
mov
mov
add
xchg
mov
dec
pop
add
mov
mov
push
jb
xor
ljmp
xor
fs
daa
push
push
movsb
push
mov
jae
xchg
mov
leave
mov
mov
cmc
repnz
into
std
sti
xchg
popf
test
orb
cmp
mov
jb
data16
inc
test
lcall
sbb
sub
sub
ja
xor
imul
bound
mov
jb
mov
adc
lods
clc
cmp
inc
or
mov
or
sub
or
in
cmp
and
popf
pop
jp
add
inc
pop
pop
insl
jp
jno
out
sub
push
adc
aas
outsb
cmp
cld
xor
sub
fwait
jp
sar
lock
pushf
xor
inc
add
adc
sbb
test
inc
sbb
jnp
inc
loopne
cmpsl
pop
cmp
add
adc
push
mov
add
rorl
mov
popa
dec
xchg
and
add
push
mov
icebp
xchg
cmp
pop
jno
sub
xchg
and
faddl
push
imul
loopne
jnp
jnp
xor
es
mull
and
lret
and
inc
xchg
movsb
jno
insb
sbb
lods
lods
adc
push
mov
imull
jno
push
jmp
dec
cli
gs
push
mov
imull
push
imull
push
scas
add
out
icebp
in
in
jno
pop
push
adc
jl
dec
jg
std
lock
push
cmp
jno
loope
imul
orb
jmp
sub
adc
jbe
stos
sub
jne
sub
adc
stos
push
jo
mov
mov
inc
xor
inc
in
into
cmpsl
test
mov
jmp
test
ds
mov
mov
scas
nopl
out
stc
add
add
jne
xor
jno
rorl
xor
repnz
out
mov
dec
jmp
jmp
loope
sahf
cmp
pop
shlb
push
adc
cmc
insb
xchg
das
pop
or
cmpsl
fistl
lock
mov
imul
sahf
sub
stos
mov
mov
add
cli
pop
imulb
dec
scas
adc
adc
fisubs
pop
test
popf
add
mov
pop
adc
cltd
add
mov
test
sub
pop
push
adc
mov
or
stos
add
testl
rcl
sub
and
dec
jns
loope
xchg
cmp
or
xor
loope
out
inc
add
xlat
or
adc
out
cltd
xor
jbe
pusha
in
imul
mov
adc
mov
shl
xchg
nop
lods
call
stos
jae
ret
add
roll
push
and
adc
lret
and
add
icebp
push
cld
adc
sub
add
jbe
pop
jae
les
pop
aas
lahf
pusha
sub
mov
push
add
imul
lods
xor
add
lahf
mov
repz
dec
cltd
and
aad
ret
push
out
sub
les
pop
lock
xor
in
pop
mov
mov
xchg
int3
jns
mov
jne
rcrl
mov
fs
jb
mov
add
xor
add
xchg
cltd
xor
xor
jns
lock
ja
mov
stos
inc
lods
xor
scas
sub
push
clc
adc
dec
cmp
jne
inc
mov
jno
or
fdiv
std
pop
mov
stc
ret
sub
jl
adc
mov
or
hlt
xchg
enter
test
mov
imul
and
cltd
jmp
xchg
inc
or
div
push
inc
mov
adc
call
into
mov
push
cwtl
mov
xor
loope
popf
daa
popa
xchg
sub
lret
fnstcw
aas
xchg
or
out
xchg
pop
cmpsl
xor
and
adc
and
add
pop
fidivrs
fdivl
in
pop
push
sti
sub
aam
sub
dec
dec
movsl
ljmp
insl
mov
xchg
cmpsl
mov
loop
add
mov
addb
and
repnz
nop
test
cmp
jbe
dec
pushf
xchg
dec
filds
loop
in
jbe
sti
mov
xor
shrl
jo
fstps
fcomi
xlat
and
jns
jle
adc
in
adc
mov
add
mov
mov
mov
push
xor
mov
or
mov
cld
mov
pop
inc
cld
cmp
and
sbb
je
xor
pop
dec
adc
jbe
mov
dec
jb
xor
mov
inc
cmp
sub
sub
scas
lea
xchg
fldenv
mov
jno,pt
dec
cs
dec
pop
xor
inc
jbe
add
push
mov
dec
loope
outsb
or
repnz
repz
jbe
or
aaa
dec
cltd
or
lcall
adc
mov
mov
in
sbb
jo
lods
adc
clc
aaa
cmp
add
jae
shll
xchg
mov
cltd
pusha
daa
cmpsb
fistps
lea
mov
jns
dec
roll
das
and
bound
cmp
xchg
shll
enter
and
jb
jbe
push
cmp
das
inc
movsb
nop
push
sbb
sub
sbb
aas
inc
pop
lods
xchg
adc
dec
ss
lods
out
xchg
and
ror
mov
inc
in
or
push
cmpsl
xchg
adc
or
jl
int3
daa
cmp
lea
andb
sbbl
or
aad
fldl
stos
xchg
jns
cld
mov
jbe
outsb
cmp
lret
in
bound
xchg
cmpl
adc
jl
fnstcw
mov
test
jb
loopne
cld
cmp
add
jle
jecxz
sub
or
out
push
adc
mov
hlt
pop
cmpsl
xor
xlat
outsb
xchg
sub
gs
in
sahf
insb
test
xchg
lahf
fidivl
mov
add
sbb
or
push
repnz
mov
push
pop
mov
dec
lret
dec
or
and
sub
push
sarl
pop
in
fwait
mov
adc
loope
push
pop
js
test
repz
dec
or
fnsave
in
aam
stc
int3
and
fldenv
push
pop
dec
mov
mov
or
mov
lret
inc
inc
enter
lods
aas
inc
insl
aad
popa
das
sarl
xchg
lods
enter
or
rcr
popl
inc
rclb
jl
or
jne
fmulp
cmpsb
psubusb
test
pop
in
js
orl
add
jb
mov
das
loop
adc
and
jecxz
popf
fmull
inc
or
js
rorb
shrl
jl
mov
cmp
repz
push
pushf
dec
mov
stos
push
and
xor
xor
loope
dec
rol
and
add
imul
ds
bound
mov
std
add
test
cmpb
inc
lock
loopne
bound
js
push
fldt
hlt
add
mov
jecxz
add
std
in
add
sub
stos
out
pop
popf
fnstenv
lea
jle
mov
fyl2x
inc
je
or
push
dec
cs
daa
xchg
addr16
sub
lods
lods
sbb
fpatan
jmp
xor
fistpl
push
jns
cmp
jecxz
lods
cmpsl
inc
cmp
xor
sub
or
fidivrs
pushf
or
loopne
mov
pop
dec
repnz
push
jb
jb
push
test
jp
sub
movsl
repnz
xor
mov
jmp
ja
xor
sub
hlt
jns
xor
xchg
repnz
jne
jae
lods
int
repnz
es
pop
xchg
xor
push
add
and
pop
xorb
sbb
enter
es
add
mov
and
cs
das
jns
adc
xor
movsb
mov
jmp
shll
mov
movsb
jecxz
sub
cmp
jmp
clc
mov
ficoms
shl
negb
clc
cli
sub
jo
sbb
add
test
popf
jl
stos
mov
mov
pusha
mov
cmp
dec
mov
aaa
in
ret
nop
cmpsb
push
in
popf
xor
addr16
cltd
rorl
lret
xchg
cmp
cmp
repnz
inc
repnz
xor
inc
sbb
movsb
repz
jne
pusha
cs
and
cltd
xor
adc
inc
loop
movsl
setno
mov
loopne
jns
xchg
and
andps
cmp
xchg
mov
push
lret
cmp
adc
out
pop
notb
mov
mov
push
mov
jle
dec
sbb
scas
sahf
mov
push
dec
cmp
xor
mov
adc
sbb
xchg
jle
inc
cmp
icebp
sbb
repnz
inc
xchg
ja
cmp
and
cmp
sti
push
sti
out
xchg
mov
ja
aas
mov
push
and
add
cmp
cmp
outsl
jmp
scas
pop
add
sub
xor
inc
mov
mov
jns
xor
jb
sbb
xchg
jne
out
adc
sbb
and
stc
fdivrl
imul
xor
sbb
add
in
sub
inc
pop
add
fnstsw
bound
mov
ljmp
les
mov
push
das
mov
mov
and
sbb
xorl
push
nop
repnz
cmp
inc
jl
stos
and
jae
lds
movsl
adcb
sub
jno
xchg
adc
push
ja
jb
fisubrl
adc
pop
cmp
aad
shr
sbb
enter
shll
cli
mov
enter
pusha
jns
rol
popa
ja
sbb
add
into
cmp
inc
ljmp
in
add
in
sti
addr16
adc
js
sub
cmp
ret
mov
jle
aas
clc
cmp
jns
aaa
inc
mov
fidivs
in
cltd
in
mov
int
out
add
or
jle
mov
sub
test
inc
jle
mov
mov
dec
push
in
call
ss
cmp
imul
pusha
mov
mov
test
iret
pop
xor
cmp
mov
lods
sub
bnd
mov
sarl
pop
jmp
mov
sahf
pop
iret
xor
mov
and
jb
sbb
and
lods
es
and
stos
imul
aad
sub
sbb
shl
inc
ja
cld
pop
iret
mov
out
mov
rorb
orl
pop
mov
push
xor
xor
dec
cmp
das
xorl
jg
add
arpl
push
and
andb
push
dec
mov
test
sbb
mov
xchg
lock
mov
repnz
push
xchg
ss
and
comiss
es
push
aam
inc
and
push
pop
mov
ss
mov
movups
cltd
add
dec
mov
mov
int
add
xor
jnp
in
xchg
mov
ja
aas
test
xchg
cmp
cmp
popf
fs
mov
push
js
xchg
daa
mov
es
decb
lahf
mov
fprem1
mov
dec
mov
cmp
mov
notb
aam
sub
rcr
xor
xor
rol
xchg
das
into
sbb
out
sbb
adc
popf
sub
cmp
shll
push
sbb
repz
fstps
dec
mov
add
push
or
ja
add
das
pop
insb
mov
pop
pop
out
mov
addr16
lds
mul
xchg
fs
mov
add
jl
push
das
jbe
xor
pop
aam
cmpsb
mov
adc
sbbb
mov
mov
sub
std
sbb
mov
orl
loope
imul
push
repz
lret
cmp
fildll
inc
inc
xor
iret
lahf
inc
jge
cmpsl
shl
sub
adc
inc
loope
cmc
xchg
add
or
push
mov
in
idivb
int3
add
jno
mov
xor
add
test
sbb
mov
mov
push
jmp
sub
ja
cmp
inc
and
pusha
dec
cmp
fidivl
and
cld
aas
sbb
xchg
repnz
mov
jno
into
ljmp
xchg
into
jmp
sahf
push
movsb
mov
cmpl
mov
sbb
or
sub
std
movb
pop
add
add
arpl
adc
xchg
in
insl
idiv
push
pop
and
pop
sbb
in
fxam
mov
wrmsr
ret
clc
push
dec
dec
imul
inc
pusha
das
or
lea
dec
push
mov
popa
ret
sahf
or
out
idivb
sbb
pop
mov
xchg
push
sub
mov
push
icebp
xor
sub
add
imul
jo
repnz
lock
stos
rorl
inc
jmp
mov
je
mov
jne
mov
hlt
sub
jo
xor
jae
sub
lea
data16
mov
aaa
pop
outsb
lea
cmpsl
xor
and
fdivl
andb
mov
mov
pop
loope
push
in
arpl
cmpsl
mov
out
int
nop
or
jle
pop
sub
faddp
and
adc
adc
mov
and
imul
adc
xchg
dec
add
daa
into
insb
mov
test
add
xchg
and
cmp
dec
popf
popf
adc
ja
iret
scas
in
repz
mov
jl
in
xchg
call
mov
cmp
xchg
out
cmc
fsubrs
insb
repz
mov
mov
sbbb
xchg
in
or
sub
push
mov
in
xchg
hlt
cmpsl
mov
out
push
push
xor
mov
add
std
test
cmp
int
cmc
xchg
ja
xchg
in
mov
sbb
cmpsl
add
test
mov
mov
mov
jne
jnp
pushf
insl
xor
jecxz
mov
mov
hlt
stos
and
push
adc
popf
loop
mov
shrb
inc
xchg
dec
inc
mov
sti
cmp
in
dec
repnz
mov
sarb
sbb
mov
xor
adc
je
xchg
sub
cmc
xchg
inc
mov
inc
in
dec
add
xorl
icebp
dec
mov
rcrb
stc
mov
cmpsb
hlt
test
mov
jo
movsl
mov
les
mov
ja
aas
push
pushf
push
and
pop
add
in
or
jb
dec
daa
add
add
adc
bound
rorl
insb
cmp
jb
lds
add
aam
or
ja
mov
cmp
ja
scas
mov
xor
cmpsb
mov
xchg
sub
adc
jne
and
cmp
pop
mov
dec
rcll
and
insl
js
pop
jbe
jae
dec
lock
je
shl
push
mov
adc
add
mov
dec
push
out
lods
mov
cmp
repz
loope
stos
int3
hlt
mov
std
ja
btc
rolb
fisubl
arpl
movsl
push
mov
jge
cli
cmc
repz
inc
mov
arpl
ljmp
stos
pop
insb
sahf
movsb
insb
cmp
rolb
and
push
movsl
sbb
dec
mov
jle
insl
xor
push
pushf
daa
jmp
in
pop
add
or
mov
or
insb
aas
pop
cli
hlt
pop
das
xor
cmpsl
popf
orb
adc
mul
add
filds
or
repnz
xorb
into
popf
loop
mov
and
and
lret
repz
ss
setle
and
cltd
mov
xor
jno
insb
sub
imul
and
pop
addr16
imul
repz
xchg
sub
mov
mov
mov
mov
push
mov
fiaddl
mov
adc
xor
and
loope
jmp
cmpb
cmp
cwtl
and
mov
sub
in
mov
into
adc
pop
mov
fwait
test
int
call
adc
or
mov
call
push
repz
repz
adc
jne
divb
lods
push
ret
gs
inc
lods
ljmp
mov
push
mulb
push
in
xchg
roll
call
das
or
cltd
mov
add
jg
call
mov
dec
mov
pop
aad
in
adc
add
clc
sub
add
mov
adc
daa
jmp
add
mov
out
or
icebp
cmpsl
loope
jne
or
in
cmp
loope
jno
adc
dec
cmp
js
popf
aam
lock
mov
push
in
out
out
xor
clc
push
adc
ja
jge
dec
inc
cld
repz
jl
adc
and
add
mov
lods
shl
stos
jne
imul
int3
xor
xchg
mov
mov
jo
scas
add
call
xchg
xlat
cmpsl
bnd
xlat
sub
or
cmp
and
sar
add
pop
jne
in
loopne
fwait
mov
in
sub
cwtl
sbb
xchg
and
sti
xor
into
imul
dec
ja
xchg
push
inc
jp
xor
and
jle
push
add
mov
mov
fimull
xor
and
cltd
shlb
js
adc
test
jge,pn
pop
sbbb
mov
or
imull
mov
cmp
xchg
pop
push
punpcklwd
jl
jne
xor
push
jmp
jb
add
orb
pop
test
mov
mov
insl
pop
xor
int
push
fdivrl
jle
rol
jge
xor
push
lahf
xor
jbe
push
sbb
test
xor
call
and
popa
and
cmp
cld
pop
jns
cltd
pop
bound
pusha
pop
mov
xor
xlat
fadd
push
sub
push
pop
adc
mov
imull
sub
mov
addr16
jle
xchg
or
cmp
and
adc
adc
dec
mov
flds
es
ss
leave
sti
mov
scas
iret
cld
mov
aad
or
sti
stos
sbb
inc
icebp
jb
cld
sbb
in
out
int3
lds
cmp
mov
rep
mov
pop
test
movsb
xor
pop
push
mov
jmp
xchg
cmp
add
xchg
lds
push
sub
sbb
cmc
pusha
mov
adc
jne
xor
push
xchg
xchg
shlb
xchg
loope
add
xor
mov
hlt
pusha
xchg
mov
pusha
pop
lock
adc
push
or
popf
aad
add
lahf
inc
sub
mov
ja
popf
pop
scas
fcompl
or
gs
hlt
jo
das
fidivs
popf
aas
adc
mov
inc
jb
ffree
fbld
lods
das
sarb
imul
push
cmp
cmpsl
repz
popa
mov
popf
jo
pop
popl
pushf
xchg
xor
mov
add
mov
iret
testl
adc
jb
jecxz
into
mov
movb
jb
adc
sub
mov
daa
dec
mov
jo
xchg
inc
stc
test
jno
xor
cmpb
push
jp
add
and
enter
cmc
aaa
cli
pop
in
test
pop
popf
lret
jmp
pop
mov
cmpsl
rcr
fs
insb
pusha
fimuls
mov
test
int
pop
stc
sub
pop
lret
xor
repz
cmpsb
jp
sbbb
iret
sbb
bound
pop
aam
mov
dec
ret
xchg
sbb
sbb
and
mov
insb
cltd
push
push
leave
push
and
jecxz
insl
adc
cmpsl
push
lcall
insl
cli
xor
jle
iret
sti
mov
imul
pop
push
add
cmp
jne
shlb
mov
push
jo
xchg
inc
icebp
mov
pop
ljmp
adc
and
hlt
pop
mov
mov
ja
jecxz
fimuls
in
je
dec
add
enter
movsl
or
aam
pop
cmpsl
andl
je
lea
jb
rcll
call
push
ret
sbbb
rcl
test
aas
inc
loopne
cld
mov
pop
adc
out
ss
aam
mov
mov
ss
fwait
mov
out
repz
enter
dec
pop
cmp
jne
in
and
dec
sbb
in
fldl
repnz
mov
out
and
aas
jno
add
lods
push
shll
loope
aam
fnstsw
adc
rcl
test
and
add
adc
sbbb
mov
test
fdivrl
push
ret
aad
jmp
mov
and
mov
fs
movsl
xor
jb
das
push
sbb
in
cmp
les
or
cmc
pop
mov
lret
and
mov
sbb
int3
and
mov
cltd
dec
push
lods
and
xchg
loopne
cmc
jns
outsb
pop
pushf
cmp
movsb
and
lods
xchg
lods
xor
and
fmuls
mov
adc
ja
lods
into
push
and
or
and
iret
jmp
loopne
mov
push
xor
imulb
pcmpeqd
mov
mov
pushf
cs
jl
insb
mov
shlb
mov
cmp
jb
add
jbe
repnz
into
xchg
jne
jb,pn
xor
dec
icebp
adc
mov
icebp
mov
gs
xchg
fnstsw
xor
into
fimuls
sub
inc
xchg
repnz
repz
xchg
xchg
pop
adc
fmul
push
loop
ja
and
xlat
jbe
xchg
mov
ret
pop
test
leave
cmp
notl
das
add
daa
push
mov
adc
sbb
js
or
mov
cmpsl
ret
pushf
dec
sub
cmpsb
andl
adcl
push
jl
fists
mov
cli
inc
arpl
repnz
push
clc
push
les
mov
mov
clc
adc
clc
es
lret
dec
fdivl
test
ss
add
out
aas
loopne
push
scas
cmp
ja
in
notb
xchg
out
mov
int
adc
outsb
xchg
roll
sbb
jno
dec
dec
pushf
divb
cltd
inc
ja
sub
adc
sbb
loop
pop
dec
xor
loopne
add
lea
sbb
jb
loop
jle
nop
in
fsubs
pusha
rcrb
out
dec
in
loopne
push
pop
xchg
adc
xchg
in
xchg
push
mov
inc
jle
add
outsb
out
sub
sbb
test
sbb
mov
jb
mov
mov
roll
movlps
ja
mov
sub
int
add
cld
pushf
pushf
pop
push
rorb
pop
pusha
aas
js
test
mov
add
sub
and
add
or
sarl
mov
mov
xchg
mov
cli
ss
roll
pushf
xchg
xchg
sub
add
xor
pop
ret
add
jge
cmc
cli
xor
cmp
adc
and
pop
cmpl
jle
mov
aad
sbb
mov
gs
xlat
push
in
mov
or
cld
gs
test
xor
mov
push
cld
gs
push
pushf
xor
test
sub
cmp
cs
push
push
jmp
cmpl
sti
or
pop
imul
cld
scas
xchg
pop
sub
lret
add
dec
fwait
pop
dec
mov
pop
or
push
and
wrmsr
or
and
cli
pop
xlat
or
stos
in
or
and
pop
jns
cltd
in
js
arpl
int3
fcompl
cld
out
cmova
jle
mov
mov
inc
pushf
ret
dec
fcmovbe
loope
mov
clc
mov
sbb
or
sti
imul
mov
adc
icebp
clc
ds
add
jbe
stos
pop
aad
push
loope
push
push
test
test
stos
xchg
in
aad
push
out
int
pop
jecxz
inc
cmpsl
lea
add
add
test
and
fildl
mov
pop
xchg
test
mov
push
sub
xchg
xchg
popf
sub
hlt
pop
cmpsl
xchg
adc
repnz
inc
jecxz
adcb
sub
int
out
rolb
fwait
out
pop
out
mov
xor
shll
out
inc
insl
imul
lods
sub
or
loopne
in
out
mov
sbb
ja
mov
cmp
push
mov
and
pop
xor
jmp
test
sub
imul
repnz
cmp
xor
jne
lahf
or
push
pop
jns
stos
mov
lods
repnz
mov
addl
and
mov
repz
cld
andb
int
push
fwait
inc
in
mov
xchg
sub
ja
cmpsl
cli
sbb
lds
add
fs
lret
mov
loope
andl
jmp
aad
insl
lret
sbb
jle
adc
dec
push
add
imul
push
fdivrl
mov
jecxz
push
movsl
test
sbb
test
fisubl
enter
jb
repz
inc
jb
add
lea
xchg
jb
mov
xor
ret
out
in
sub
icebp
dec
ljmp
sub
cmpsl
xchg
lods
jl
adc
xor
xchg
rcrb
je
cs
dec
mov
mov
mov
mov
cld
js
mov
jo
cmpl
jb
inc
dec
or
stc
sar
mov
adc
sbb
xor
cltd
and
lret
sarl
stos
mov
pusha
lods
popl
fdivp
xor
adc
icebp
sbb
jle
in
add
cmpsb
jae
ljmp
add
jae
cmp
std
les
jb
or
loopne
jp
les
decb
push
jmp
xacquire
mov
les
hlt
add
shrb
fnsave
push
dec
cmp
cmpsl
jle
xchg
jns
shrl
gs
aam
add
movb
adc
and
clc
sub
inc
outsb
fadds
dec
test
xchg
imull
lds
pop
cmp
sub
dec
aaa
mov
inc
sub
or
jno
xor
je
add
adc
and
in
xor
push
adc
icebp
jb
sub
scas
cmp
jmp
in
test
jle
mov
aam
pushf
std
adc
inc
adc
mov
out
rcll
fildl
dec
jp
xor
stos
stc
dec
push
mov
dec
mov
notb
mov
xchg
mulb
xor
or
mov
add
jbe
jne
dec
cwtl
jl
psrlw
icebp
mov
mov
xchg
or
and
cs
pop
aad
pop
xchg
xor
add
shll
bound
dec
ret
adc
sbb
les
in
in
imul
gs
rcll
fmull
push
shrl
jne
xor
shrl
ret
jae,pt
hlt
adc
cmp
mov
jae
inc
jl
jne
icebp
xchg
xor
mov
xchg
aas
add
jno
loope
jl
xor
adc
and
push
jne
push
push
mov
jmp
ret
imul
mov
inc
dec
and
fstpt
test
enter
inc
xor
stos
sub
cltd
pusha
mov
push
push
mov
fcomi
loope
adc
pop
out
push
or
add
push
out
addr16
and
clc
test
aad
adc
ljmp
push
insb
movsb
pop
mov
mov
adc
hlt
ljmp
cltd
mov
mov
cmc
xor
ja
negb
push
lods
mov
pop
shlb
aam
pop
stc
push
aas
adc
cmp
push
push
popa
sarb
repnz
add
xchg
jp
mov
lret
ljmp
testb
out
jo
and
ljmp
xor
jmp
das
inc
dec
xchg
into
jne
movsl
jb
sbb
mov
or
aas
xor
push
rclb
xchg
mov
iret
xchg
test
sbb
nop
pusha
popf
addr16
cmpsl
rcrl
inc
dec
sarl
jno
xchg
jne
push
insl
je
sub
cmc
mov
pop
jg
or
adc
sub
fs
mov
cmpsl
pushf
dec
cltd
push
mov
xor
or
push
mov
mov
add
cmp
jbe
iret
push
das
xchg
adc
inc
test
sub
or
stos
jmp
and
sbb
add
aas
test
xchg
roll
cmpsl
jecxz
pop
sub
sub
fldenv
jecxz
add
stc
and
jg
mov
xor
mov
loope
pop
xchg
xor
sbbl
icebp
icebp
jmp
add
mov
fisubrl
stc
cmpsl
icebp
dec
mov
cmp
xor
jecxz
rorb
mov
sbbl
testl
xchg
and
push
jnp
in
pop
push
cmp
cmc
mov
add
stc
xor
gs
adc
cmpsb
fsubrl
lret
mov
push
push
push
sbb
ret
cmpsl
xor
sahf
repnz
jecxz
and
ficomps
jecxz
jne
shll
repnz
and
lahf
add
jl
sbb
faddl
and
fimuls
push
sub
call
das
loope
pop
push
ret
or
insl
inc
inc
std
and
clc
rorb
add
jb
and
repz
nop
insb
push
mov
inc
adcl
push
mov
sti
popa
shl
inc
cmpsl
xchg
subl
or
fwait
inc
jmp
xchg
pusha
mov
push
xchg
icebp
mov
mov
cltd
ja
inc
mov
sbb
divl
add
icebp
dec
inc
mov
mov
pop
cmpsb
std
mov
xchg
inc
ficoms
popa
push
xor
arpl
inc
cmpsl
popa
cmc
shll
xor
mov
push
sub
sbb
and
mov
mov
cltd
jno
xor
out
mov
push
sub
mov
in
xchg
addb
aaa
sbb
xchg
push
and
sub
outsl
clc
xorl
push
je
pop
xchg
scas
rolb
sbb
jno
stc
aam
shl
cmp
addr16
cmc
insl
adc
ja
lock
aad
pop
icebp
ja
ss
mov
add
and
in
jno
cmpl
das
sub
pop
imul
xchg
or
std
ret
xor
mov
jmp
or
mov
test
mov
andl
mov
mov
dec
in
adc
mov
push
repnz
inc
pushf
adc
ret
jo
testl
sub
jmp
stos
outsb
enter
mov
hlt
lock
clc
fs
out
loopne
pushf
pop
mov
aas
ret
fidivs
pusha
stos
add
and
in
ret
mov
xchg
out
repnz
adc
jno
repnz
mov
xor
push
inc
cmp
add
stos
mov
adc
cmp
sub
in
push
xor
xchg
in
lret
xor
test
xlat
rolb
pop
or
dec
cmp
nop
jmp
push
imul
fwait
repnz
jae
je
ss
notb
ja
jnp
cmp
xchg
lock
icebp
xchg
stos
fdivrl
jle
sub
lods
mov
jmp
fwait
dec
repnz
idiv
aaa
pusha
push
inc
xchg
rcll
popf
and
clc
es
jo
out
scas
outsb
adc
mov
lods
or
je
into
in
testl
popf
test
xor
sahf
jl
rorl
pop
mov
testb
in
push
jo
push
sbb
mov
cmpsl
xor
popa
dec
jl
or
xchg
fdivrs
ret
jp
and
jp
rcll
pop
add
cmp
shr
xor
sub
sub
jbe
mov
je
in
mov
rcll
mov
and
mov
lods
mov
adc
pushf
hlt
fisubrs
adc
es
jmp
pop
test
clc
push
xor
ss
jo
stc
fldenv
xchg
adc
cmp
sbb
sti
outsb
stc
push
lret
push
mov
adc
orb
xor
xchg
add
insb
sti
or
mov
jmp
out
aas
xchg
stos
sti
cmpsb
adc
lods
sub
ja
or
sub
hlt
push
adc
adc
or
push
fsubs
hlt
cmp
push
or
and
sub
mov
repz
or
lahf
inc
out
xchg
cltd
fiadds
icebp
clc
aad
out
mov
xor
inc
cmc
push
mov
add
ret
cmpsb
mov
and
jns
mov
call
push
loopne
jg
jae
dec
push
js
sub
cmpsl
push
push
xor
pop
add
hlt
push
sub
cmp
je
cltd
cld
pop
out
jns
bound
mov
shll
je
in
xlat
clc
adc
add
orl
xor
out
pushf
jne
add
adc
js
bound
push
mov
dec
or
fisubrl
push
cld
add
jne
xor
out
xchg
pop
dec
xor
mov
xchg
int3
inc
or
cltd
icebp
loop
and
repz
sbb
push
ss
jecxz
cmpsl
cmp
and
mov
cmpsl
sub
pushf
call
lods
repz
in
xchg
ds
adc
sbb
push
lock
xchg
jbe
call
shrb
adc
sub
xor
test
pusha
orl
push
std
push
mov
rol
adc
jns
sbb
in
adc
icebp
adc
rcll
ss
repz
or
leave
pop
adc
push
and
fsubs
sbb
test
adc
clc
adc
clc
add
push
xor
je
lock
pop
das
push
pop
lcall
mov
ffree
jnp
mov
inc
adc
shrl
push
scas
das
mov
sahf
mov
mov
adc
xor
icebp
int3
sub
je
sub
out
xor
sarl
lods
fbstp
imull
cmp
adc
lcall
aam
sbb
stc
loop
in
jp
fiadds
add
imul
inc
and
fisubs
add
or
push
mov
add
adc
pop
aaa
in
ficompl
sbb
jmp
icebp
mov
mov
lea
push
adc
repnz
add
or
sbb
clc
int3
or
sub
xor
push
in
cmp
xor
bound
addr16
mov
movb
adc
ficoms
in
fwait
pop
sub
and
movsl
icebp
xchg
xchg
jno
lds
cmp
xor
fdivrp
and
addr16
cmc
adc
in
ret
pushf
in
test
out
not
xchg
mov
mov
xor
dec
jae
and
sbb
push
hlt
jnp
push
mov
xor
mov
fistl
fcoml
and
lret
fnstsw
sub
into
jnp
cmp
stos
aad
fsubrs
je
xchg
push
out
dec
icebp
mov
fimuls
movsb
adc
xchg
leave
and
and
stc
movsl
and
mov
push
clc
and
es
ret
hlt
fcomps
cmp
xor
sub
shrb
aas
adc
xorl
rol
rorb
jle
movsb
jle
aad
aad
in
sbb
test
cmc
inc
mov
add
adc
aas
and
xor
or
aad
or
xor
test
pop
test
xchg
ret
push
push
jae
xchg
clc
gs
leave
pop
ror
mov
mov
call
call
jb
repnz
int
jns
stc
out
xor
jno
dec
bound
pop
cmp
adc
pop
ljmp
outsl
fsubrl
add
daa
or
aad
fisubrs
mov
push
into
xchg
add
lret
inc
imul
jae
aaa
push
sub
gs
sti
in
lahf
jle,pn
icebp
mov
add
das
xchg
arpl
cmpsb
sbb
cmp
adc
sarb
sub
mov
cmp
lret
in
jno
add
faddl
ret
sub
lods
lret
dec
in
jg
sbb
jbe
jns
test
clc
outsb
mov
xor
or
scas
jmp
sbb
adc
rclb
mov
in
test
cli
cltd
sbb
js
push
dec
or
dec
mul
mov
ss
imul
movb
les
aaa
mov
inc
ljmp
test
inc
xchg
xchg
inc
cmp
out
mov
sbb
xchg
hlt
dec
sub
sbb
dec
sub
push
ret
cmc
dec
leave
inc
jp
xchg
mov
cli
call
xor
sub
push
cld
add
mov
dec
std
push
sbb
subl
ss
into
sub
sub
jecxz
call
pop
inc
cltd
repz
lahf
in
pop
jl
cmpsl
nop
jmp
ja
aad
and
add
subb
adc
xor
mov
jmp
hlt
testb
out
adc
xor
insl
aam
adc
int3
sub
bnd
popa
jo
in
adc
push
dec
xor
stc
adc
adc
fcoml
jns
adc
insl
outsl
stc
call
adc
cmc
adc
xor
shr
jno
stc
push
adc
sub
das
jns
adc
xor
sub
xor
adc
rolb
icebp
cld
adc
xor
insl
dec
stc
dec
adc
das
sub
adc
je
xchg
stc
xchg
adc
int3
mov
insl
xor
adcl
xchg
repnz
inc
xchg
aad
call
add
in
jb
mov
dec
mov
pop
test
test
push
add
orl
loopne
lods
iret
out
adc
sub
jae
xchg
add
cmp
int3
and
jge
push
jae
iret
insb
aas
adc
jae
out
ds
push
xchg
and
clc
and
nop
adc
xor
cmp
inc
add
add
add
pusha
je
insb
pop
repz
jo
bnd
sbb
out
outsl
movsl
push
and
push
je
iret
lods
rcrb
lds
loope
cmp
push
ffreep
cs
sarb
das
jp
add
aad
shrl
rcrl
sub
inc
dec
jmp
pusha
dec
scas
pop
cmc
jno
out
addr16
sarb
jnp
pop
loope
cld
add
fistps
lods
addr16
push
shrb
repnz
aam
mul
jmp
jo,pn
add
cs
ss
lods
mov
pop
jmp
sbb
jne
js
loope
add
and
inc
push
repnz
xor
shl
icebp
add
adc
xor
popa
jb
lock
mov
repnz
adc
xor
bound
lock
mov
repz
adc
xor
pop
insb
jl
mov
cld
xor
push
lock
pop
insl
jge
popf
lock
mov
or
dec
pop
outsb
jle
sahf
int
ljmp
lock
outsl
jg
lock
scas
mov
movups
das
aas
aam
push
mov
shll
clc
in
and
and
icebp
fimull
or
inc
push
xchg
inc
cmp
sub
in
jge
dec
adc
mov
pop
insl
pusha
stc
lods
nop
cld
imul
mov
adc
adc
testl
and
ds
jp
or
clc
mov
sub
xor
mov
int3
imul
fnstsw
cld
or
adc
mov
pushf
jg
dec
sub
jb
outsl
das
pop
cwtl
mov
add
loop
ret
pop
enter
xchg
outsl
fcmovbe
sbb
test
dec
push
cmpsb
cmpsl
js
test
das
test
ret
in
test
or
insl
mov
into
bound
scas
into
inc
in
mov
dec
jno
arpl
mov
cmp
lret
stc
ljmp
pop
es
jae
mov
sbb
dec
xchg
and
ja
push
pop
clc
push
cs
btsl
push
pop
dec
sbb
repnz
mov
xor
and
ds
mov
test
sbb
pop
rcll
push
cmc
pop
ljmp
cli
mov
ljmp
fisttps
mov
pop
mov
ret
repnz
insl
jg
in
jae
cwtl
jecxz
paddw
xchg
sub
cmp
sub
push
shrb
and
sub
sub
push
adc
mov
aad
cmc
xchg
fidivl
outsl
push
adc
ror
ss
mov
dec
repz
les
or
xchg
cmp
icebp
test
cmp
cmc
decb
cs
adc
mov
sbb
mov
addr16
je
xor
xor
jle
jno
sub
jg
push
push
xchg
or
out
daa
fidivrs
xchg
push
outsl
jecxz
pusha
repnz
sub
leave
out
mov
roll
mov
pop
fbstp
mov
insb
and
lea
pushf
xor
xchg
jg
stos
clc
xor
push
mov
pop
hlt
incb
repz
jb
pop
inc
xchg
je
iret
fimuls
cs
xchg
inc
push
aas
data16
adc
inc
ret
test
jg
inc
fidivs
push
adc
push
sub
test
sti
daa
or
push
jl
mov
sbb
outsl
mov
mov
insb
mov
xchg
sbbl
adc
dec
xchg
sti
inc
out
imul
mov
adc
adc
dec
dec
mov
mov
mov
dec
inc
in
jae
lds
rorl
sbb
in
lahf
or
int3
add
add
sub
repnz
add
jne
sahf
aaa
mov
push
or
aaa
outsl
adc
cmp
jmp
mov
adc
mov
adc
outsl
mov
add
adc
add
mov
imul
fcoml
xchg
lock
xorb
jl
pop
rcrb
repz
push
add
std
std
inc
gs
lock
pop
imul
leave
fldl2t
stc
or
sub
lock
pop
push
mov
cli
or
sub
lock
pop
imul
stos
mov
sti
or
sub
lock
arpl
movsb
mov
lock
hlt
add
and
inc
lock
fs
xchg
movsl
mov
lock
cmc
add
lock
gs
xchg
cmpsb
mov
lock
out
push
push
es
lock
data16
xchg
cmpsl
mov
lock
out
pop
pop
daa
aaa
inc
lock
pop
jo
nop
mov
loopne
orl
das
cmp
cmp
out
ja
xor
insl
int
mov
adc
add
cmpl
mov
in
das
in
mov
cld
andl
int
dec
cmpxchg
jo
clc
mov
jmp
cld
aas
divps
in
lea
iret
jno,pt
jno
movq
push
outsl
sbb
ds
xchg
aas
cwtl
mov
lea
mov
outsb
or
sub
js
repnz
or
xchg
daa
lds
xchg
sub
xor
mov
or
add
imul
cld
jae
xor
xlat
das
ficomps
sbb
addr16
jb
pop
in
xlat
fisttpll
mov
push
jge
mov
cld
cmc
loope
lods
or
add
test
aas
mov
adc
and
cmp
pop
daa
or
push
cmp
and
shrl
and
or
jmp
repnz
mov
loope
push
mov
xor
push
das
jae
out
sarl
mov
xor
jne
nop
pop
pop
call
lahf
and
jb
clc
xchg
loopne
xor
insb
mov
dec
das
in
pop
mov
into
sarl
cmpsl
inc
add
mov
jb
sbb
xchg
shrl
sbb
sbb
mov
xor
or
xchg
cs
xor
xchg
adc
cmp
std
push
ljmp
repz
sbb
iret
ficomps
push
fistps
mov
push
adc
inc
dec
mov
add
sbb
int
cmp
adc
mov
sub
mov
sub
in
add
call
jge
sbb
stc
insl
mov
iret
or
popf
cld
sbb
imul
test
cmc
xchg
jno
jge
dec
dec
add
sbb
sbb
inc
jno
outsb
popa
push
jl
lock
and
mov
pop
les
xchg
loope
push
ret
sti
xor
sbb
lret
xlat
int
addr16
loope
lahf
divb
mov
and
das
sub
sub
pop
or
out
mov
sub
jge
add
mov
xor
dec
xor
xor
xchg
icebp
repnz
aaa
and
push
bound
cmc
in
jbe
repz
test
cmp
enter
pop
out
ja
pop
jle
mov
jbe
mov
push
sub
subb
sarl
mov
mov
pushl
jae
mov
in
xchg
cmc
mov
fbstp
in
addr16
mov
repnz
jne
cmpsl
test
insb
aaa
fucomi
adc
clc
fcoml
mov
push
flds
jne
into
jnp
je
mov
cmc
fnstcw
sti
fsubrl
mov
repnz
pop
sub
out
sub
xchg
iret
imul
repnz
hlt
in
inc
out
mov
out
add
insb
xchg
add
hlt
jno
test
cmc
mov
pop
loop
push
repz
xorl
xchg
stos
in
repnz
lea
cwtl
in
mov
fidivl
lock
adc
push
das
popf
sub
das
leave
cld
fdivs
jae
add
push
mov
into
iret
mov
mov
pop
jg
jne
outsl
incb
nop
in
pop
or
into
inc
leave
push
int3
clc
pushf
int
mov
pop
call
dec
jb
cwtl
lea
testb
xchg
jg
cmpb
shl
dec
adc
sub
sbb
aas
add
cmp
out
push
sub
mov
leave
lods
into
test
sbb
jle
add
dec
pop
pusha
xchg
cmp
lahf
ret
sbb
insl
and
push
add
and
sub
jnp
int
jnp
inc
pop
xchg
stos
xor
mov
in
scas
fisttps
daa
dec
lods
std
lret
ret
xor
sub
hlt
int3
cmp
mov
out
and
pop
adcb
jo
adc
jge
dec
ret
push
xor
aad
mov
xchg
mov
jl
or
cmp
dec
xchg
sub
adc
jb
or
or
sbb
ja
cmp
pushf
stc
out
rcrb
repnz
js
sarb
decb
xchg
sarb
push
push
pop
pop
cmp
push
xchg
fnstsw
cmp
cli
adc
dec
into
test
pop
outsb
mov
in
adcb
dec
adc
shl
repnz
test
cs
dec
xor
insl
fmulp
rolb
mov
repnz
jb
sub
and
xchg
mov
lods
jge
jmp
jae
add
dec
mov
push
push
jecxz
add
sub
dec
inc
xor
imul
cmp
ret
sarl
xchg
cld
lcall
insl
je
adc
xchg
inc
add
das
jnp
fisubl
lods
repnz
cmp
mov
outsl
jnp
push
gs
add
insl
insl
aaa
sub
sbb
into
jno
cmp
or
xor
or
and
js
dec
aaa
add
popa
adc
inc
imul
sub
or
xor
cmp
xor
jmp
jnp
fsubrl
mov
outsl
cld
xchg
or
and
fnstsw
adc
stc
cs
dec
out
rcll
pop
inc
cld
insb
cmpl
cmp
pop
sub
or
sub
lcall
int
sbb
jmp
xor
icebp
cmp
dec
add
outsl
sbb
or
dec
test
pop
adc
push
or
scas
mov
xor
xor
adc
neg
dec
pop
je
and
or
outsl
decb
xor
push
push
ljmp
cli
es
lcall
mov
dec
jp
in
mov
push
jge
add
jo
sbb
inc
or
ja
aad
sbb
aas
dec
out
push
sub
sbb
dec
and
push
inc
mov
fldt
jl
push
push
xor
add
subl
hlt
cmpl
inc
or
adc
pop
sarl
xchg
add
sti
and
sub
jns
shlb
xor
sub
push
jns
stc
andl
and
mov
adc
jp
icebp
lods
xor
jns
mov
jl
lods
icebp
cld
leave
pop
sbb
in
xor
or
ds
adc
jle
test
lods
jb
jns
adc
xor
push
adc
call
jno
dec
repnz
sbb
adc
cli
jmp
pop
inc
arpl
ljmp
or
mov
pop
repnz
test
add
sahf
mov
jmp
cmp
add
mov
push
and
loopne
and
xchg
and
loopne
movsb
mov
iret
insb
ss
dec
fs
pop
inc
add
outsl
repnz
repz
loop
and
pop
and
inc
sbb
inc
sbb
cli
add
lahf
rorl
xchg
mov
adc
mov
mov
hlt
insb
adc
jno
sub
mov
or
add
dec
out
jno
cmp
icebp
mov
in
enter
pop
incb
xchg
addl
clc
rolb
jno
pop
repz
cmovnp
in
test
push
sahf
xchg
cmc
jmp
std
inc
adcl
adc
and
xorb
enter
mov
xor
mov
mov
fidivrl
push
mov
xchg
jb
dec
jecxz
add
jmp
repz
mov
andb
les
xchg
out
sub
cs
sbb
cld
jae
xor
adc
mull
and
jb
test
stc
xchg
adc
push
mov
mov
shlb
stos
insl
loop
insl
adc
mov
inc
xor
sub
xor
adc
js
outsb
adc
stc
sub
loopne
xor
mov
xchg
mov
mov
outsl
lock
in
mov
in
and
jne
repnz
mov
jb
xor
jno
adc
jo
sub
idivb
adc
stc
hlt
adc
adc
stc
ljmp
call
out
adc
out
insl
sub
sub
repz
adc
xor
xor
roll
lods
into
loope
scas
xor
adc
dec
ja
pop
xor
and
out
jmp
push
in
sbb
inc
in
sub
nop
mov
xor
fmulp
pop
cmp
sbb
add
into
xor
pushf
movsl
orl
daa
inc
add
jns
xor
xor
dec
adc
sub
pop
jns
adc
xor
push
pop
mov
jmp
in
andb
call
jb
jns
adc
sub
mov
jne
insb
nop
or
insl
stos
mov
in
and
loope
xor
adc
jno
dec
push
in
repnz
aam
lock
test
cli
mov
push
adc
int
repnz
imul
lock
leave
fldl
decl
cmp
inc
loope
sbb
call
mov
adc
in
test
hlt
lods
inc
dec
in
jge
loop
mov
fists
lock
test
imul
mov
lahf
cmp
loope
imulb
cmpb
std
sbb
push
lock
es
and
clc
scas
push
loopne
icebp
popa
mov
imul
xor
nop
pusha
cmpsl
pop
xor
lea
ds
stc
rorl
lret
ljmp
popa
mov
aas
clc
dec
hlt
dec
test
outsb
or
ss
sbb
je
int3
sbb
mov
lret
loopne
dec
div
cli
repnz
sub
roll
jbe
mov
pop
mov
jo
in
or
call
pop
lock
or
sub
repnz
xchg
gs
loope
jo
mov
pushf
out
and
inc
mulb
push
outsb
popa
arpl
loope
sub
stos
inc
pop
xlat
jo
lock
dec
jg
fildl
pop
int3
dec
cmpsl
lock
loope
in
pop
adc
icebp
aad
sub
loope
mov
ss
mov
cmp
es
sbb
lds
xchg
sub
mov
call
mov
pushf
loope
cltd
mov
enter
test
movsb
fsubrp
xlat
jecxz
push
and
or
inc
mov
cmp
fsubrs
idivl
mov
test
cmc
lock
mov
sub
stc
clc
mov
lock
inc
sbb
hlt
stos
lods
lock
insb
or
test
gs
mov
outsb
jno
sti
pusha
ja
dec
dec
and
push
sub
lock
dec
jp
pop
cmpsb
rorl
and
adc
jge
lock
aam
pop
xchg
lods
cmp
lock
adc
outsl
or
adc
fisubrl
arpl
push
inc
jge
ss
push
xor
sbb
lock
sub
adc
lock
imul
sbb
jb
int
ds
shr
fistl
repz
aad
adc
jbe
filds
call
out
lea
idiv
jb
aas
std
xor
pop
call
repz
outsb
jmp
ss
lods
test
std
push
mov
mov
outsl
jae
das
ret
cmp
inc
arpl
mov
adc
mov
push
aas
je
decb
shl
cmc
int3
shrl
lods
jbe
int
or
sub
cmp
push
outsb
jg
js
icebp
push
inc
je
sbb
ret
repz
add
pop
sbb
cmp
sahf
sbb
lods
mov
xchg
mov
pop
rcr
std
lahf
sbb
jmp
jg
lcall
or
leave
dec
scas
sti
cmc
push
lods
jecxz
mov
cmp
xor
cli
rolb
add
in
fisttpll
cld
xor
sub
cld
fisubrs
mov
out
lret
pusha
repz
cmp
shl
mov
mov
sbb
sbb
sbb
add
mov
idiv
aaa
push
mov
mov
mov
jl
sub
xor
in
and
fstps
mov
adc
ss
ja
mov
testl
jl
adc
mov
pop
shl
insb
jge
mov
loope
fnsave
and
jl
sbb
and
cmc
inc
mov
mov
divl
mov
hlt
pushf
xor
jno
mov
icebp
divl
aaa
jb
mov
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jl
loope
jb
xchg
mov
pop
sbb
jmp
fmull
pushl
mov
pop
mov
mov
loope
fdiv
ss
ja
mov
jl
mull
inc
adc
and
aad
stc
hlt
clc
xor
ja
mov
notl
push
rorb
mov
gs
rorl
leave
es
loop
int3
inc
fsubl
int
leave
popa
in
loope
fnsave
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
and
jl
sbb
hlt
inc
mov
ss
div
aaa
push
or
sub
jno
nop
loop
shll
push
mov
in
in
and
lods
adc
mov
and
cmc
insl
int3
aas
cmp
mov
shr
jnp
mov
xchg
pop
ja
xor
cmp
sbb
popa
and
js
dec
and
xor
adc
mov
and
bound
push
pop
push
or
pop
imulb
lret
cld
rcrl
test
int3
mov
repz
xchg
fnstcw
add
addb
xchg
sbbb
xor
mov
push
dec
mov
test
mov
and
mov
mov
and
pop
mov
hlt
shl
in
pop
or
in
loope
sbb
insb
sbbl
sbb
adc
dec
leave
jg
je
nop
push
arpl
gs
mov
cwtl
jge
test
subb
jne
in
data16
xorb
rdtsc
das
xchg
outsb
and
mov
cmp
xlat
enter
mov
cli
enter
enter
mov
nop
lret
lret
loop
cltd
dec
int3
pusha
int3
sbb
and
loope
loop
inc
add
pop
xchg
cwtl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shlb
leave
repz
int
leave
loope
inc
loope
flds
xor
in
in
in
in
in
in
in
in
in
in
in
in
in
and
add
adc
jg
mov
and
int
rclb
rolb
lods
sbb
or
movsl
mov
fsubs
ss
in
mov
idivl
aaa
filds
or
ljmp
enter
enter
xor
lret
mov
imul
inc
cld
mov
jmp
loop
pop
icebp
push
mov
cs
or
jo
outsb
mov
pushf
cltd
push
or
fisubl
insl
jl
bound
sub
mov
or
or
popf
enter
enter
enter
enter
enter
dec
mov
mov
push
push
pop
nop
addr16
sbb
mov
mov
mov
jmp
xchg
stc
or
jle
push
faddl
shll
leave
or
fisttpll
test
mov
fdivr
push
scas
repnz
sub
adcb
call
dec
cmp
outsb
mov
mov
inc
aad
push
push
jecxz
lods
pop
pop
pop
iret
pop
sbb
hlt
ficomps
pushf
inc
test
add
movswl
fmuls
push
mov
mov
adc
aaa
mov
cli
scas
call
repz
jge
pop
or
pop
mov
inc
dec
and
daa
push
notl
ja
mov
notl
and
xor
mov
mov
or
xchg
loop
ficoml
mov
and
pop
jle
or
dec
cmpsl
pop
xchg
cmp
popf
pusha
icebp
cltd
bound
sbb
pop
insb
jge
sub
repz
mov
dec
out
pop
mov
das
ret
dec
sbb
or
mov
mov
or
jmp
enter
enter
or
adc
imull
mov
rcr
mov
repz
outsb
xor
jae
mov
sub
in
loop
fisubrl
fisubrl
test
sti
pop
les
clc
xchg
adc
jne
and
push
mov
xor
add
push
xchg
test
add
in
pop
fdivrs
or
dec
insb
testb
cmc
mov
mov
cld
dec
dec
sub
fmull
imul
stos
fmull
fsubl
hlt
fadd
fsubl
fsubl
fsubl
int
mov
sub
xor
jle
repz
mov
mov
mov
stc
outsl
icebp
ljmp
mov
popf
jmp
test
push
fwait
push
mov
push
divl
pop
dec
pop
lods
les
inc
or
fs
sbb
insb
adc
sub
jo
push
cmpsl
xchg
out
pop
jl
addr16
mov
jmp
mov
fsts
lods
cmpl
loop
idivb
repz
mov
add
cmp
mov
shrl
mov
push
push
mov
and
ret
in
ss
push
sbb
lods
sbb
sbb
mov
pop
inc
mov
sbb
mov
ja
mov
push
jl
jl
mov
test
adc
fdivr
dec
jns
stos
jae
fcoml
shll
jl
int
leave
sti
in
and
dec
mov
mov
fisubl
inc
stos
xchg
mov
or
call
lret
aaa
and
or
push
negl
int3
lea
dec
hlt
pop
rcrl
ret
add
repz
add
fsubrs
mov
mov
jl
adc
hlt
inc
sub
ja
mov
jl
mov
sub
jmp
ss
pushf
inc
mov
in
in
loope
jge
pop
test
das
mov
test
xor
add
aaa
sub
dec
mov
mov
xor
jne
out
mov
nop
adc
xor
push
in
loope
or
pop
sub
cld
lock
xor
mov
or
cs
jno
mov
repz
mov
loope
popa
ret
repnz
fidivrl
fisubrl
stos
fisubrl
fisubrl
stos
test
xor
jno
xchg
icebp
or
test
jg
mov
je
jmp
add
and
sbb
sbb
and
and
jne
das
aam
mov
mov
xchg
xchg
mov
xor
mov
jge
or
fidivrl
fcomp
cmp
jmp
and
shl
sub
or
je
jne
kxnorb
cmpsl
in
mov
push
loope
inc
jns
pop
lea
outsb
sbb
daa
adc
shlb
mov
imull
mov
pop
hlt
sbb
push
jl
pop
inc
scas
pop
push
jg
cwtl
cli
out
mov
mov
testl
enter
int
cli
fcompl
fwait
or
cmp
movsb
fidivl
testl
xrelease
add
lahf
push
push
pop
pop
insb
clc
jl
test
lods
mov
mov
gs
dec
idivl
shrl
mov
fwait
leave
sti
test
repz
add
mov
mov
mov
insb
cmp
mov
js
in
adc
xor
arpl
movsb
and
and
movsl
daa
in
and
adc
loop
repz
dec
call
mov
fcoml
in
repnz
scas
int
leave
cs
subl
aam
add
xor
test
test
adc
xor
and
ja
jno
jae
xor
push
mov
mov
shl
mov
repnz
or
out
loope
ljmp
jno
jae
insl
add
imul
jo
mov
jno
jae
insl
loope
imul
cld
xor
insl
mov
mov
aam
ljmp
shrb
jmp
loope
sub
imul
test
add
je
mov
hlt
xorb
fdivl
fdivl
fdivl
xorl
mov
xor
mov
les
fcoml
sub
lods
xor
push
das
mov
or
test
sbb
stos
and
imul
je
mov
xchg
xor
jne
mov
cmc
mov
or
cld
sub
xorb
leave
jno
mov
dec
repnz
in
in
in
test
push
lods
add
in
subb
out
nop
add
outsl
subb
lret
shr
fsubrl
mov
mov
orb
mov
sbb
xchg
sbb
xor
ds
ret
int3
adc
andb
sub
ja
mov
clc
adc
pushf
repnz
pop
ret
idivl
adc
and
test
pop
in
cmp
repz
jl
adc
ret
inc
in
xor
repz
stos
xor
movsl
aad
cmp
pushf
cli
jmp
cmp
mov
rol
jo
sbb
sti
sbb
in
jb
ds
iret
repnz
je
pusha
shr
sbb
test
push
nop
in
cmp
push
sub
xor
mov
hlt
lock
pop
movsb
pop
sti
divb
push
pop
sbb
cmpsl
in
xor
int3
scas
stos
hlt
repnz
outsl
jg
xlat
int
notl
cmp
out
mov
call
xchg
sub
rorl
and
sbb
xchg
or
or
xor
push
and
mov
or
paddd
movsl
jo
sbb
aas
mov
out
ret
out
unpckhps
cltd
xlat
dec
cltd
jecxz
insl
scas
sbb
sub
sbbl
ret
and
dec
bound
dec
outsl
lea
fldl
sub
adc
ds
pusha
leave
inc
or
mov
jmp
cld
add
xor
sbb
mov
rcr
data16
cmp
ret
adc
bound
inc
xor
and
cmp
jg
adc
xor
xor
les
mov
lods
xchg
mov
sarl
in
xchg
pop
pop
mov
enter
pop
pop
imul
das
cmc
dec
pushl
leave
in
cld
lods
add
ds
frstor
test
insb
add
mov
cmp
popf
and
push
adc
dec
sbb
ret
in
adc
in
test
mov
xchg
pop
mov
fimull
iret
mov
imul
sahf
jg
repnz
add
in
and
mov
ss
xlat
push
scas
jae
cs
sarb
testb
lods
sbbl
xchg
pop
rcrl
imul
sub
sbb
sub
and
mov
jmp
push
and
jl
add
pushf
icebp
and
push
popaw
out
push
bound
adc
and
cltd
pop
icebp
and
insb
jae
adc
jl
stos
repz
xor
xor
pop
loopne
or
idivl
lods
lods
push
pop
mov
push
xor
outsl
scas
cmc
fs
cld
aas
inc
outsl
icebp
jne
mov
jl
xor
js
test
test
leave
add
adc
mov
cld
or
add
shrl
adc
sub
jp
and
inc
sbb
icebp
jmp
lds
int3
daa
inc
ret
and
sub
aam
sub
fisttpl
xor
dec
and
xchg
xchg
add
dec
jb
xor
xchg
mov
adc
ss
xchg
das
xor
int3
adc
out
xor
js
das
sbb
xchg
jno
adc
repnz
or
jnp
xor
xor
pop
inc
push
out
outsl
ret
mov
test
jecxz
sbb
push
test
mov
xor
iret
lret
push
sarl
into
and
adc
adc
mov
insl
addr16
lods
jbe
cli
xor
jecxz
js
jle
mov
cwtl
jecxz
mov
pushf
add
cs
das
arpl
and
int3
pop
shrl
jecxz
jl
cmp
mov
scas
js
sbb
movsl
mov
cs
push
cmp
outsl
cli
enter
bound
sbb
pop
adc
pop
inc
ja
lahf
test
jge
jne
pop
aad
or
sub
mov
popa
jge
outsb
popa
push
int3
mov
mov
adc
test
neg
mov
lea
pop
xorl
mov
push
fs
scas
lea
aam
in
sbb
add
cvtps2pi
push
sub
sub
aad
push
or
ret
pushl
lods
jecxz
mov
inc
xor
pop
add
gs
insl
ret
push
xchg
dec
mov
insl
cmp
jp
int
jb
jns
dec
outsl
push
lahf
pop
iret
push
outsl
or
movsb
xor
xor
push
std
pop
insb
sub
popf
sub
or
cwtl
je
shrb
shlb
dec
pop
insl
sarl
pop
outsl
mov
bound
or
into
lahf
jle
ds
jnp,pn
pop
lea
adc
sbb
scas
xor
sbb
mov
dec
cld
jmp
or
adc
aas
lret
sub
iret
lret
loope
cmp
jg
inc
dec
scas
cmp
int
imul
xchg
jmp
enter
xchg
out
mov
cmp
jg
data16
push
insl
sbb
mov
pop
mov
lods
mov
lcall
mov
jns
push
mov
jmp
int
inc
sub
jg
jae
das
bound
call
in
dec
jecxz
and
sbbl
gs
nop
pushf
adc
pop
and
add
pop
repz
and
test
ja
in
mov
das
cmp
popa
pop
jmp
mov
mov
pop
cmp
enter
adc
out
test
dec
mov
xor
mov
mov
test
adc
or
js
out
xor
adc
sbb
in
out
hlt
out
out
sarl
mov
jecxz
mov
imul
cwtl
adc
jb
sbb
push
leave
mov
xor
xchg
xchg
cmc
mov
cmp
mov
pop
adc
rcll
loope
out
das
sbbb
mov
push
cmc
icebp
movsl
mov
out
frstor
inc
fists
xor
cmp
and
pop
shlb
add
repz
jb
push
mov
xchg
adc
xor
mov
or
pop
es
in
adc
sub
push
pop
xchg
insl
xchg
mov
mov
pop
fidivrs
in
mov
lods
or
adc
inc
loopne
sub
shrb
repnz
xchg
aaa
xchg
push
iret
notl
adc
add
add
inc
jl
shll
ljmp
dec
icebp
lret
pop
pusha
push
ret
pusha
pop
rcrl
dec
and
and
inc
dec
aaa
xor
out
ret
push
cmp
jnp
or
xor
push
scas
sub
mov
inc
inc
mov
cmp
int
sbb
xor
mov
jnp
js
pop
popa
sub
loope
insl
movsb
out
rep
adc
addb
dec
loopne
sbb
in
std
push
rcpps
jae
xor
bnd
push
repz
loopne
loopne
mov
insb
mov
add
adc
stos
mov
mov
je
jecxz
int
cmp
ljmp
mov
imul
scas
adc
lcall
ret
sub
ret
insb
and
shrl
jns
push
lcall
dec
jmp
aas
pop
shl
jecxz
js
jmp
xor
inc
sti
cld
test
sbb
pushf
orb
mov
es
lret
and
rorl
or
insl
fisttpll
and
push
and
push
xchg
ret
mov
enter
dec
js
and
lea
std
clc
xchg
jno
repnz
repnz
mov
pop
aas
movsb
out
popa
adc
adc
addr16
sbb
jmp
dec
inc
xchg
lahf
loop
mov
inc
negb
imul
rolb
lea
cli
xor
lea
pushf
lock
mov
ret
popf
or
jbe
inc
mov
xchg
mov
jmp
cli
jb
mov
inc
andl
mov
pop
es
mov
or
dec
rcr
sbb
js
inc
stc
ds
xor
sti
fsts
insb
lahf
pop
xchg
xchg
and
sub
bt
into
stos
sub
shll
stos
xor
cmpsb
test
int
cmp
clc
xchg
ret
xchg
jecxz
push
and
out
loop
xchg
jae
cmp
push
sub
test
jae
inc
rclb
loopne
add
repz
jmp
fldl
push
sti
dec
push
mov
push
cltd
dec
push
mov
and
outsb
test
cmp
dec
test
xor
fisttps
or
lcall
mov
push
outsl
clc
mov
and
scas
add
fs
jl
inc
subb
push
mov
call
cs
mov
lahf
stos
rorl
insl
cmp
xor
aam
sub
movsl
imul
sbb
jp
movsb
add
adc
int
inc
and
rclb
mov
enter
aas
cwtl
mov
add
xor
inc
aam
ret
mov
inc
xor
add
stc
lods
sbb
cmp
mov
pop
xor
or
push
xchg
sub
das
lods
xchg
pop
sbb
add
mov
insl
lds
mov
sub
or
fisubs
aas
dec
or
int
dec
insb
inc
jg,pn
sub
mov
sub
orl
fsubrs
loopne
push
dec
or
xchg
xor
xor
ret
jns
xor
movsl
add
xchg
aam
adc
daa
jg
and
add
into
xor
cmp
or
jle
lret
adc
aam
out
xor
data16
cli
or
push
cmp
adc
in
add
jge
xor
add
fildl
rclb
sbb
pop
mov
stc
and
add
dec
mov
mov
out
jae
iret
or
std
call
inc
mov
push
cwtl
inc
imul
cwtl
insb
sub
xchg
or
inc
fldl
or
insb
std
lret
jae
sub
sbb
xchg
add
and
pop
leave
aad
lret
inc
pop
insb
cmp
pusha
sbb
jge
scas
sub
xor
mov
cmp
repz
iret
dec
or
in
push
adc
mov
cmc
inc
sub
nop
cmc
sub
hlt
and
mov
pop
push
mov
mov
xchg
std
pop
mov
sbb
imul
inc
lds
push
cmp
lea
repnz
cmp
cmp
lea
rolb
sbbl
js
adc
mov
dec
cmp
scas
jp
mov
dec
mov
mov
cld
les
mov
in
repz
add
add
dec
sub
push
inc
dec
jb
mov
loope
cmp
sub
jmp
cmp
repz
out
out
mov
mov
sub
xchg
test
ds
jl
push
adc
mov
cli
pop
arpl
jge
les
popf
cli
jle
aaa
dec
cwtl
clc
cmpsb
cld
mov
mov
jl
outsl
adc
lret
dec
clc
loopne
dec
sbb
daa
pop
icebp
out
push
push
xor
mov
xchg
mov
xor
addr16
sbb
and
push
xchg
lret
xor
les
mov
adc
mov
pusha
nop
inc
insl
pop
sbb
adc
lods
rorl
push
jo
sub
cmp
popl
dec
jecxz
or
adc
cmpb
jecxz
jno
pop
rcrb
push
pop
sub
ret
loop
jl
jg
cmp
outsb
xchg
sub
sbb
sbb
push
dec
lcall
nop
in
inc
jnp
sbb
and
aad
mov
test
mov
sub
movsl
test
add
cltd
out
mov
pop
iret
repnz
adcl
mov
jne
xchg
repz
jnp
xor
dec
jnp
rcrb
stos
das
pop
inc
dec
pop
mov
pop
lret
mov
loopne
pop
push
push
sbb
lea
sub
push
mov
gs
nop
fistpll
pop
mov
cmp
or
jae
or
test
inc
into
add
rcrl
push
push
das
es
inc
nop
ss
mov
in
mov
fldcw
insb
mov
stos
out
jge
in
lahf
ret
ss
jl
mov
or
pop
movsb
aaa
es
in
movsb
test
movsl
push
dec
sti
fwait
xor
into
arpl
mov
push
jne
jne
daa
cs
adc
or
mov
sub
pop
ficompl
dec
sbb
sbb
cs
nop
pop
and
or
pusha
pop
cmpsl
jecxz
pop
dec
jl
lods
xchg
aad
sbb
dec
mov
jnp
ret
sub
les
lahf
xchg
das
les
and
cld
xchg
shl
test
jnp
xlat
push
mov
pop
mov
inc
and
inc
cli
jnp
mov
jl
jl
outsl
cmpsb
or
fcomip
and
push
mov
mov
pop
sub
shlb
xor
cltd
scas
int
or
cmp
pop
test
pushf
xchg
mov
clc
xor
lret
mov
adc
fdivl
and
pop
jge
fidivrl
and
inc
jle
mov
xor
mov
mov
addl
jg
xchg
fcompl
out
push
ja
inc
aam
pop
rclb
dec
cmp
xchg
sub
inc
or
sbb
sub
push
das
mov
mov
adc
negl
hlt
pop
jge
or
pusha
inc
pop
cs
in
fndisi(8087
or
inc
adc
fimuls
pop
jle
enter
mov
xchg
pop
arpl
xor
shll
pop
pop
sub
out
sub
fsubs
push
mov
lret
add
pop
xchg
cmp
test
pop
jg
sbb
pop
pop
push
jge
cli
jge
xor
lahf
icebp
adc
adc
mov
mov
dec
or
sub
xchg
lods
lds
aas
inc
push
dec
mov
movsb
cmpsb
jb
or
div
mov
adc
or
rcrb
arpl
inc
lods
or
cmpsb
aas
jo
cmp
xchg
das
into
aas
add
push
or
insb
pop
inc
lcall
adc
pop
jl
jl
test
aad
sub
lds
in
push
push
ret
sti
leave
popa
sbb
jo
mov
mov
push
mov
movsb
and
sub
test
mul
fstl
xor
push
test
dec
daa
push
dec
stos
and
push
adc
nop
adc
cwtl
jae
das
out
cltd
repnz
fadds
data16
mov
inc
in
insl
les
aaa
mov
sub
orl
xchg
sub
cmp
push
pop
dec
ret
xor
in
icebp
add
aad
jno
fstpt
imul
jge
mov
dec
mov
jecxz
jb
adc
pop
cmpb
sbb
mov
sub
pop
int
sbb
inc
adc
pop
enter
dec
mov
nop
mov
push
jge
pop
nop
xor
pop
pushaw
ljmp
scas
cld
mov
movsl
enter
movsb
and
inc
test
adc
inc
data16
repz
aad
enter
sahf
xor
inc
push
fwait
mov
sbb
test
popf
jae
dec
ss
outsb
leave
insb
movsb
das
imul
js
jne
mov
pop
sub
adc
imul
xchg
push
mov
cmovns
adc
jo
cmp
mov
cli
sub
add
mov
push
xchg
or
outsb
cmc
sub
dec
mov
pop
fwait
icebp
adc
into
jl
push
pusha
jge
cmp
xor
movsb
and
jnp
mov
stos
or
enter
jl
jg
into
in
pushf
push
daa
xchg
or
push
cltd
mov
mov
mov
addr16
dec
shrl
jg
lahf
hlt
push
iret
jecxz
ds
js
push
inc
mov
jnp
subl
fisttpl
mov
pop
jecxz
pushf
aam
or
sub
out
ds
movsb
out
sub
jecxz
lods
mov
fisttpll
mov
out
cld
and
sbb
subb
mov
add
push
mov
outsb
dec
or
pop
xor
and
sar
je
lea
ds
pop
das
stos
lods
dec
std
lock
insl
mov
mov
scas
lods
test
cmp
or
lea
pop
cmp
fmuls
add
lods
in
jg
mov
jne
insb
js
das
jecxz
or
mov
pop
fsts
push
jl
addr16
stos
int
sbb
hlt
jge
lahf
pop
pop
iret
popf
dec
and
scas
jns
or
mov
sbb
or
push
push
pusha
dec
cmp
in
ret
dec
lock
fists
insl
nop
sub
addr16
mov
sbb
sub
jge
or
lock
sbb
sbb
pop
arpl
jmp
xor
dec
push
jle
rcrb
dec
popf
inc
xor
mov
cmp
lahf
in
pop
add
pop
jb
jge
mov
jg
std
mov
and
outsl
fucomp
adc
cmp
xor
dec
lea
scas
dec
mov
call
fstl
dec
lahf
add
dec
sbb
cmp
and
cli
lods
jne
ret
lock
pop
add
scas
dec
out
mov
mov
int
je
mov
ja
lock
dec
jg
fnstsw
cmovl
cmp
push
ds
adc
push
decl
lahf
sbb
or
rep
mov
push
and
popf
adc
ds
sbb
stos
cmpsl
scas
jl
xor
inc
das
and
jecxz
pushf
jg
int3
scas
ficoml
mov
iret
mov
inc
add
cmp
outsl
mov
push
sbb
jle
sub
out
dec
iret
push
xor
mov
dec
stos
jle
insl
fst
outsb
cmpsl
sar
scas
mov
ss
jae
adc
addr16
push
clc
dec
pop
out
subl
inc
fnsave
insl
push
loopne
lcall
aas
push
repnz
and
inc
sbb
mov
cmp
xor
pop
repz
jne
push
loope
jecxz
pop
push
lret
pushf
loop
mov
sbb
dec
mov
pop
mov
loop
or
lea
push
sub
jge
push
mov
push
inc
adc
stos
mov
jle
sub
sbb
push
insl
pop
scas
dec
scas
push
xor
sub
loope
fistps
out
or
imull
repz
lahf
out
cmp
fcoml
jg
jb
dec
mov
cmp
lahf
pop
or
cld
lods
js
jge
and
sbb
cmp
push
pop
fsts
cmp
lahf
filds
mov
jns
dec
mov
sbb
popa
sub
insb
mov
rolb
test
mov
js
rcrb
jge
mov
pusha
fidivl
cmc
push
and
cmp
lock
or
aas
mov
std
aad
mov
scas
iret
mov
jae
addr16
loope
or
cmp
pmulhuw
call
mov
xor
das
xor
cs
dec
cli
xchg
mov
movsb
repnz
or
into
lods
pusha
orl
or
call
push
fisttps
insl
push
xor
in
leave
rorb
xchg
push
in
sub
pop
out
rclb
fwait
xor
sub
and
outsl
pop
inc
sub
lds
pusha
jl
fstp
or
sbb
or
mov
jmp
insl
int
mov
mov
push
rep
iret
icebp
sbb
lea
jge
imul
insb
dec
stos
adc
scas
mov
adc
dec
mov
std
outsb
xchg
inc
lods
add
psraw
push
addr16
ficoml
iret
cs
jp
shrb
or
mov
jl
test
in
push
addr16
sarb
adc
sbb
int
call
stos
jge
or
and
jl
je
repz
xor
adc
sbb
pop
mov
and
addr16
movsb
loopne
pop
cmp
gs
inc
aam
test
aas
scas
cld
push
cmp
lods
push
xchg
out
push
cmp
insb
sarb
sarl
test
iret
mov
scas
sub
add
outsb
pop
mov
out
dec
xor
loop
aam
xor
jle
add
in
test
repz
cmp
stos
mov
divps
js
adc
mov
lea
outsl
mov
int
mov
outsl
sbb
or
push
cmp
or
push
pop
dec
div
sub
popf
cmp
or
repz
adc
ficomps
push
push
repnz
jecxz
sub
shr
cmp
clc
fnstcw
ljmp
sub
xor
mov
inc
add
std
cmp
loopne
pop
shrd
roll
jb,pn
sub
lods
jl
add
outsb
std
jle
pop
inc
pop
or
or
std
repz
insl
adc
dec
dec
rorb
test
int
mov
dec
adc
push
mov
pop
clc
pop
push
inc
cld
call
std
adc
mov
in
adc
pop
cmp
outsb
je
jmp
sub
push
sbb
push
pop
and
jge
pop
jae,pt
inc
sbb
adc
fbld
dec
idivb
std
fs
dec
cld
sub
clc
jl
fucomp
call
outsl
or
iret
add
mov
dec
jle
loopne
mov
inc
insb
add
js
je
movsl
sub
add
mov
std
insl
push
dec
cs
pop
and
lock
dec
push
cld
nopl
mov
or
pop
out
xchg
xor
jl
inc
sub
stos
sub
and
mov
mov
insb
std
pop
jl
sbb
popa
adc
pop
mov
pop
push
dec
jle
in
pop
jmp
ljmp
sub
dec
nop
adc
push
add
ljmp
dec
cmp
inc
sbb
adc
pop
xchg
pslld
in
fsubrs
ljmp
insb
push
cmp
insl
ds
pop
mov
and
xor
fstp
outsb
or
inc
mov
das
xor
jg
outsb
repz
push
cmp
pop
hlt
push
or
rcr
add
lret
lea
adc
and
scas
adc
mov
xor
iret
sbb
xor
decb
push
enter
insb
mov
pop
testw
std
or
test
cmp
pop
js
dec
push
iret
jmp
pushf
mov
mov
fcom
pop
jle,pt
into
jl
lcall
jae
mov
and
push
enter
scas
jge
outsb
dec
rcll
stos
mov
or
push
iret
shll
filds
adc
mov
gs
sub
cld
sub
call
enter
sbb
popf
adc
fnstenv
lds
in
or
lfs
js
and
scas
das
shlb
add
js
dec
dec
fucomip
je
pop
insl
cld
scas
add
repz
ds
xlat
xor
xor
mov
out
sub
cmp
lcall
lock
iret
jge
subl
xor
push
out
cmp
sub
test
jbe
int
addr16
pop
enter
sub
clc
repz
out
pop
lods
add
dec
repz
out
sbb
jae
add
mov
cmp
inc
rol
int
jge
sbb
loop
lods
mov
test
inc
cmp
jle
push
xorb
dec
inc
std
sub
jns
inc
pop
cltd
aad
in
or
popf
jmp
out
mov
and
jo
cmp
ret
mov
dec
enter
cs
sbb
fildll
std
push
mov
and
and
mov
jle
add
int
cmpsb
scas
mov
hlt
ljmp
add
in
dec
pop
ljmp
jmp
push
xchg
loope
push
ds
add
scas
xor
fs
lods
cs
outsl
inc
adc
das
outsb
lea
xchg
add
inc
xor
sub
scas
decb
pop
xor
mov
adc
hlt
push
push
in
adc
and
adc
and
adc
shrb
mov
mov
and
rcr
sbb
add
mov
sub
ljmp
push
mov
jl
add
lahf
push
out
loope
xor
in
decb
xor
cmovg
inc
jecxz
outsb
pop
mov
outsl
sbb
cld
adc
push
cmpsl
out
fstpt
add
call
pop
mov
lds
jl
mov
lahf
insl
shr
mov
mov
mov
es
fbstp
cmp
pop
sbb
jmp
fdivrs
xor
lea
rcrb
xor
and
mov
fcmovbe
mov
pop
lea
push
iret
lods
and
insb
push
pop
sbb
movsb
cmp
popf
fbld
add
dec
mov
jmp
mov
push
repz
cmp
jge
out
xchg
lods
dec
outsb
out
repz
mov
inc
adc
and
inc
dec
das
sub
add
sti
inc
out
or
mov
int
pop
or
dec
iret
pop
jecxz
cs
pop
inc
jmp
addr16
loope
sub
dec
push
clc
mov
lods
sbb
push
movsb
repnz
dec
popf
mov
sbb
shl
out
fstl
jnp
fbld
test
dec
push
sbb
or
out
rorl
sbb
stos
hlt
adc
inc
scas
std
insb
hlt
repz
shrb
insl
dec
pop
mov
rorb
ficomps
push
pop
mov
fistl
test
in
pop
jmp
mov
lahf
insb
js
and
or
leave
and
sbb
push
loopne
add
jle,pn
inc
or
mov
icebp
dec
outsb
dec
xor
scas
jl
add
das
cld
daa
mov
divps
fisttpl
and
repz
in
push
cmpsb
test
clc
sarl
js
mov
cli
pop
js
pop
repz
and
mov
mov
mov
shlb
mov
jnp
loope
mov
stos
or
in
xor
xor
jl
jp
test
repz
fldl
and
adc
add
fidivrs
and
daa
outsb
mov
xor
cmp
cmp
std
xor
mov
add
adc
mov
stc
idivl
js
shrl
mov
xor
jecxz
mov
dec
dec
dec
and
mov
out
int
pop
jle
repz
lds
dec
pop
iret
adc
shrl
push
adc
xchg
lods
xchg
sub
sbb
xor
jae
stos
int3
insl
jns,pn
pop
mov
mov
das
or
pop
adc
jg
repz
js
push
hlt
loope
int
pop
ds
fnstsw
push
pop
call
shrl
aas
pop
add
in
jle
xchg
sub
lahf
adc
sbb
mov
insb
mov
dec
cmpsl
xchg
push
outsl
add
adc
jecxz
lock
int
push
insb
subps
out
stc
jecxz
scas
testl
dec
mov
in
iret
repnz
add
xrelease
enter
scas
push
jl
adc
call
loope
sub
mov
cld
fisttpll
test
insl
inc
repz
adc
sub
jecxz
jne
popf
sar
stc
repz
js
das
xor
sbb
popa
jle
gs
sub
lods
pop
repz
cli
das
lods
sbb
add
int
mov
loope
pop
push
xor
sti
jge
out
jbe
enter
insl
std
mov
jo
push
out
xchg
sbb
adc
jnp
mov
in
xor
outsb
xor
cs
sub
jle
cld
and
pop
jne
sub
push
and
dec
sbb
jmp
or
jmp
jmp
inc
sbb
xchg
dec
pop
and
pop
out
xchg
mov
pop
lea
pop
cmp
and
insb
imul
stos
xchg
cmp
fnsave
lods
and
jmp
jmp
push
imul
dec
scas
int
or
ds
sub
outsb
hlt
arpl
iret
insl
das
adc
push
ja
mov
outsb
je
outsl
inc
xchg
jns
pop
rcll
scas
pop
std
push
dec
and
jmp
rol
repnz
outsb
add
cs
ds
push
pop
mov
cmc
imulb
sub
subl
sbb
pop
pop
das
int
push
dec
or
out
and
out
sub
jmp
nop
rorb
stos
outsl
xor
mov
cld
adc
mov
push
jge
mov
cmp
push
and
xchg
shr
and
dec
lods
push
push
int3
ds
fcmovbe
dec
bswap
lods
and
inc
push
jmp
rep
cmp
cs
and
fistpll
adc
test
xor
cs
cld
hlt
dec
and
push
jne
jge
lret
inc
cmp
in
xchg
outsb
push
lods
or
sub
das
fs
fisubs
mov
mov
or
jg
jecxz
lret
insl
in
push
jge
fucomip
add
idivb
pusha
les
jmp
xor
ja
or
jmp
lea
dec
and
outsl
xchg
repnz
shrl
popa
jecxz
or
bt
sbb
or
out
xrelease
add
lock
mov
mov
pop
aas
pop
call
lods
xchg
mov
push
cs
mov
ljmp
push
subl
dec
inc
andl
mov
xchg
push
pop
outsl
hlt
inc
push
jecxz
pop
pop
mov
aas
cmpsl
adc
lea
push
or
cmpl
sub
ljmp
adc
je
pop
lea
push
sub
sbb
lds
std
aad
out
stos
pop
push
jae
jge
insl
jl
xor
xor
fcomip
pop
test
jecxz
cli
xchg
or
add
scas
push
repz
out
imull
pop
mov
enter
adc
decb
jg
xchg
repnz
and
mov
dec
cs
push
hlt
movsl
insl
dec
xor
in
inc
xchg
mov
je,pn
fsubl
mov
sbb
lahf
imul
mov
call
cmp
cld
mov
mov
lock
lahf
jg
fistps
push
ljmp
adc
int
movsl
mov
ds
jecxz
stos
rcll
fisttpll
lock
dec
setl
js
repz
pop
sub
xchg
cld
or
xor
mov
inc
push
out
hlt
aas
mov
dec
xor
js
or
pop
out
bound
pop
sbb
jg
cmp
lahf
mov
push
sbb
jl
mov
lret
push
in
int
insl
int3
js
jl
scas
fsubrl
adc
sub
jge
jmp
test
mov
jmp
out
xor
cmp
sub
lock
mov
jl
jns
add
dec
js
out
xchg
iret
loope
fisttps
insb
enter
lods
push
das
outsb
outsb
cmp
loop
insb
pop
push
add
push
loope
pop
dec
outsb
cs
push
fisttps
push
pop
add
ret
xchg
sub
pop
hlt
ljmp
stos
sbb
jo
dec
inc
mov
popf
push
enter
ljmp
jg
insl
mov
or
jp
filds
jle
sbb
inc
xchg
iret
pop
pop
iret
pop
call
mov
cmp
mov
push
fildll
mov
cld
pop
out
repnz
lods
pop
mov
ficomps
insb
lods
pop
jg
iret
dec
cmp
cmp
out
push
repz
std
in
iret
mov
xchg
lods
mov
cmpsb
rcrb
push
mov
fwait
push
int
sbb
popa
sub
decb
fstps
outsb
in
pop
in
and
shl
cmpl
lcall
mov
or
push
cmpsl
push
ja
pop
out
nop
adc
pop
lahf
and
and
cmp
in
dec
dec
jecxz
jge
call
insb
ljmp
mov
pusha
mov
sub
or
mov
add
cmc
imul
add
and
pop
int
insl
add
inc
ja
outsb
ljmp
mov
xor
mov
xor
xchg
and
addl
mov
mov
pop
xor
mov
mov
jg
jecxz
cmp
aas
lock
pop
das
iret
push
dec
mov
insb
lods
decb
push
out
gs
sub
adc
jmp
jmp
sub
cs
lock
push
fistpll
jl
lods
push
jge
jecxz
das
das
ds
int3
insl
std
aad
ds
or
add
ds
pop
cmp
lods
jl
addr16
xchg
js
sar
push
int
add
add
cmp
mov
push
or
cvttps2pi
add
js
in
addb
mov
and
shr
cld
adc
scas
push
sub
and
jl
ljmp
push
ss
push
mov
lret
popf
sbb
mov
xor
mov
adc
xor
jae
or
lea
int
repnz
push
scas
or
adc
mov
cs
or
push
mov
push
clc
cltd
mov
mov
sahf
adc
addr16
incb
jbe
aaa
push
pop
sarl
pop
mov
dec
shl
int
js
xor
add
outsl
mov
lahf
push
lods
cs
push
fcoms
idivl
ljmp
shrb
sahf
adc
sbb
mov
out
clc
add
xor
xchg
mov
pop
std
xchg
xchg
dec
popa
int
cs
movsl
mov
scas
add
jno
repnz
mov
xchg
insb
fs
das
int
cmp
aas
js
mov
int
mov
pop
clc
stos
in
push
inc
outsl
pop
jmp
jae
jae
adc
sub
dec
inc
xor
data16
insb
js
dec
gs
jmp
insl
mov
push
sahf
dec
lock
je
das
je
insl
insb
push
insl
outsb
jnp
pop
pop
insl
sbb
xor
push
fmull
lea
cmp
pop
push
imul
std
repz
hlt
stc
push
aas
jmp
cmp
lods
jae
jg
xchg
loop
outsb
or
push
out
out
cvtps2pi
mov
sbb
bnd
jg
pop
jmp
dec
in
mov
insl
das
push
lahf
pop
adc
insb
leave
icebp
inc
push
xchg
adc
cmpsl
lods
and
fnstenv
mov
or
mov
cmpl
pop
scas
ret
aas
stos
mov
add
jle
inc
push
fstl
pushf
cld
sbb
es
push
mov
jmp
jp
mov
push
xor
outsl
roll
mov
sbb
lock
dec
adc
stos
insl
sub
xor
sub
cmp
xor
mov
jecxz
lods
push
pushf
data16
pop
and
dec
insl
lea
sbbl
pop
out
pop
shrl
fildll
outsb
or
jge,pt
cmpsb
sub
int3
mov
rcll
and
imul
cld
lock
bswap
in
ds
lea
push
inc
bnd
push
jle
addr16
in
repz
fnstsw
sbb
iret
out
xor
in
je
mov
and
pop
shl
sub
adc
sub
pop
in
xor
jge
mov
jbe
and
lahf
ds
and
aas
and
sub
js
cmp
push
push
inc
jg
insb
sbb
jecxz
cld
dec
imulb
ljmp
fimull
rcrb
cmp
dec
popf
scas
lea
push
jge
and
mov
push
je
xchg
int
pop
and
push
pop
adc
shr
aad
fwait
mov
or
lea
sbb
aam
ret
xchg
inc
dec
clc
pop
dec
test
mov
mov
sbbl
mov
pop
or
aas
or
cld
fwait
addr16
inc
sub
repz
test
cmp
push
pop
icebp
in
std
addr16
push
jmp
loop
push
scas
adc
add
int
aas
cmp
inc
aas
ja
and
popf
inc
rcll
repz
adc
push
lods
std
shrl
push
push
popa
or
loop,pt
mov
fcoms
push
lahf
mov
in
iret
and
pop
pop
jmp
popf
push
dec
scas
ljmp
or
dec
pop
jg
pop
pop
jmp
inc
pop
adc
adc
xchg
mov
int3
sbb
jmp
mov
ds
mov
adc
adc
and
outsb
push
pop
repnz
xor
cltd
movl
scas
sub
scas
sub
cmp
xchg
and
xchg
dec
lods
sub
or
mov
ret
xor
and
jne
outsb
repz
dec
movsl
xchg
imul
and
mov
insl
pop
jmp
push
dec
sbb
out
fisttpll
mov
lahf
iret
mov
testl
outsl
addr16
push
mov
fsubrp
and
inc
repz
aas
mov
pop
cltd
loop
push
pop
mov
insl
fsubl
daa
or
in
cmpsl
dec
js
insl
jmp
ljmp
dec
or
shrl
jmp
jge
cli
inc
dec
outsl
sarb
fldl
adc
mov
leave
lahf
dec
and
cld
outsb
sbb
adc
call
das
js
dec
push
mov
nop
push
std
dec
insl
or
fisttps
jne
jge
insl
mov
and
dec
adc
fs
clc
dec
lea
in
rcr
sub
sbb
mov
and
dec
bound
push
push
sub
fcoml
jecxz
jo
jmp
mov
outsb
jge
mov
orl
repz
mov
out
pop
sarl
lea
xor
mov
mov
fistpll
repz
push
lods
in
mov
std
mov
and
pop
mov
movsl
mov
inc
xchg
pop
jecxz
mov
insb
in
pop
or
movl
push
or
dec
dec
mov
imul
dec
push
jmp
rcrl
or
jle
push
cmp
inc
jl
xchg
rorb
ds
pop
test
aas
pop
ds
ror
adc
or
out
cmc
cld
scas
jle
hlt
enter
mov
outsl
ljmp
pop
pop
addr16
lea
sbb
inc
sub
mov
leave
imul
and
cmp
cmp
sub
and
jg
jle
add
jge
mov
out
orl
fucomip
jl
mov
stc
xor
mov
shll
loope
push
adc
or
push
mov
stc
or
xlat
pusha
sub
pop
xor
push
rclb
fistpll
mov
or
punpckldq
add
pop
sub
outsb
js
adc
mov
push
push
std
scas
jg
add
out
sbb
jmp
mov
sub
lea
popa
out
sarl
jo
mov
push
adc
cmp
pop
ds
or
xor
and
addr16
out
enter
cs
pop
add
or
repz
adc
lods
sub
adc
inc
loope
pushf
sbb
je
outsb
dec
mov
icebp
mov
lods
xor
scas
or
int
mov
lret
cmp
aad
inc
push
lods
ljmp
jle
push
in
sub
outsb
jle
je
push
xor
aaa
iret
sub
dec
jge
cmp
mov
test
push
stos
lock
dec
mov
ja
mov
adc
push
aas
add
std
pop
sub
dec
scas
pop
popf
outsb
in
inc
stos
inc
xor
jg
sbb
pop
push
loopne
lods
std
sub
sbbl
inc
sbb
jge
cli
mov
push
int
and
movd
push
outsb
push
pop
xor
push
loop
cltd
das
pop
pusha
movsb
push
jp
stc
out
jg
pop
insl
int3
push
pop
cld
dec
xor
in
lods
and
pop
sbb
pop
push
push
jl
jb
xor
mov
mov
sbb
hlt
or
cld
mov
sub
cmp
data16
pusha
dec
int
push
or
lods
js
jmp
xchg
fsubrl
mov
inc
mov
mov
test
bswap
hlt
cmp
daa
cmp
rorb
outsb
jecxz
push
mov
cld
ds
jge
popf
std
sub
iret
push
mov
rorb
xchg
in
jl
dec
je
ljmp
mov
stos
out
or
or
mov
addr16
push
cs
jo
jg
scas
repz
mov
add
int3
xchg
js
out
sub
outsb
pop
sub
dec
dec
incl
cmp
fildll
pop
ja
sarl
or
pop
js
and
insb
mov
out
mov
lock
dec
das
insl
add
out
inc
pop
int
fs
iret
outsb
js
insb
add
popa
sub
sbb
pop
stos
lods
push
scas
aaa
jmp
add
cmp
push
or
sbb
lock
scas
js
in
push
iret
jmp
int
xorl
dec
stos
and
jle
xchg
xchg
cs
dec
mov
ja
mov
bswap
popf
repz
rorl
mov
in
pop
add
mov
std
lods
iret
stc
fsubrs
scas
movl
pop
jl
jecxz
stos
cld
dec
push
jle
insb
sub
mov
std
dec
mov
or
jg
inc
xor
inc
jle
int
icebp
inc
add
and
sbb
das
std
dec
sub
cmpsl
out
jo
paddd
cmp
or
cmp
ret
mov
mov
fldt
aad
cmp
out
cltd
jl
adc
packuswb
dec
sbb
cmpsb
lock
or
cmc
daa
iret
dec
nop
popf
push
sbb
aad
and
addr16
jb
or
dec
jmp
out
push
lods
js
pop
inc
shl
arpl
jle
pop
sub
popl
push
in
xchg
fldt
pusha
and
jle
jecxz
aaa
fcoms
lock
push
dec
jno
sub
jecxz
idivl
cmp
push
cltd
push
jnp
jae
jmp
aas
dec
cmp
add
mov
sbb
xchg
or
cmp
lea
pusha
lods
lahf
mov
inc
pop
pop
push
mov
adc
sbb
outsl
sub
sub
pop
aas
jmp
pop
shl
ljmp
jle
scas
int
sub
insl
outsb
pop
insb
das
pop
ds
mov
out
cs
sbb
fdivl
jl
add
stos
jmp
or
mov
dec
mov
out
add
jle
inc
mov
mov
call
jl
cmpsl
lods
sbb
das
popf
adc
paddsw
and
lods
dec
sbb
mov
jge
aas
jg
mov
mov
fisttps
xor
and
dec
imul
int
iret
enter
dec
movsb
push
dec
ja
push
adc
pop
imul
scas
and
les
and
jno
mov
adc
cmp
adc
and
lods
test
push
and
pop
jge
add
push
cmp
lret
jmp
in
out
mov
std
cld
push
or
xor
sarb
dec
pop
arpl
cli
mov
aad
and
adc
jae
iret
pop
cmp
mov
or
push
and
cmpsl
fistpll
dec
sub
sbb
pop
insl
inc
out
mov
je
movd
lahf
js
scas
or
and
fst
psadbw
push
mov
cmp
lods
neg
or
push
int3
addr16
mov
int3
jecxz
pop
push
out
xor
pop
xor
or
outsb
je
rcrl
cmp
jle
mov
iret
jmp
adc
test
mov
outsb
jns
xchg
pop
adc
adc
pop
mov
push
jmp
push
push
insl
insb
push
pop
das
dec
inc
stos
fistps
data16
outsb
js
fstl
popf
jle
pusha
test
insb
or
fisttps
ljmp
jb
int3
sub
pop
sub
pop
xor
outsl
out
int
in
push
mov
adc
popf
out
ds
push
pop
imull
jae
insl
loopne
and
std
cli
cld
mov
dec
decb
repnz
lods
push
bound
xchg
dec
dec
imul
iret
adc
sarl
ds
dec
cld
in
push
pop
adc
mov
dec
aaa
mov
mov
out
sbb
pop
mov
mov
js
xchg
jo
or
out
clc
adc
pop
pop
push
outsb
shrb
or
push
aas
inc
lods
add
js
xchg
fldenv
aam
or
jae
lock
lea
lods
or
das
movsb
bnd
pop
add
in
icebp
insl
sub
inc
sbb
mov
push
rcl
add
cmp
hlt
or
sub
jns
loope
cltd
outsb
lret
and
cs
loopne
sbb
xor
std
sub
lahf
aas
push
jle
push
gs
lock
insl
jl
jmp
out
popa
or
mov
insb
push
mov
sub
push
xchg
pop
sbb
and
testl
cmp
popf
iret
dec
push
insl
dec
insl
in
adc
xor
adc
outsb
insl
xor
mov
pop
std
lahf
es
out
shrl
aas
push
cld
insl
repz
cmp
nop
jecxz
add
lahf
outsl
jge
mov
in
cltd
in
push
jg
popl
repz
pushf
or
in
cmp
sub
and
xor
roll
cmp
and
std
or
dec
inc
outsl
jl
scas
mov
sbb
mov
xor
add
out
pop
xchg
leave
pop
sbb
sub
scas
scas
insl
out
sub
cltd
cmpsb
cmp
push
sbb
push
fldl
inc
xor
sub
add
lods
cmp
popf
cmp
mov
jo
loop
and
out
sbb
hlt
loop
push
sar
pop
pusha
das
jle
bound
int
and
jmp
adc
xchg
push
inc
push
sub
jge
std
mov
lods
loopne
push
mov
xchg
outsb
or
mov
incb
fadds
pusha
pop
dec
and
push
inc
pushf
out
test
dec
iret
lcall
int3
inc
xchg
add
fs
xchg
cli
repnz
jle
int
sarb
inc
pop
repz
imul
push
mov
incb
insl
and
mov
jg
xor
insb
or
inc
sbb
ljmp
pusha
ds
mov
xor
and
iret
rcrb
mov
xor
mov
mov
jmp
dec
aas
xchg
sbb
jo
lods
insl
loope
push
mov
movsl
lock
out
mov
push
out
addr16
and
cmp
movsb
data16
fisttps
sbb
xor
mov
mov
xor
mov
pop
aas
add
jl
and
fisttpll
mov
shrb
popa
pop
lahf
iret
and
push
and
movsl
sbb
push
paddw
jl
iret
scas
fstl
imul
in
fs
dec
aaa
mov
cs
sbb
add
xlat
dec
mov
enter
xlat
push
out
xor
pop
sahf
int
cmpsb
and
mov
sub
ror
fdivrs
test
dec
lahf
push
adc
outsb
insl
int3
lahf
stos
pusha
cli
js
xor
les
idivb
aas
pop
popa
push
pop
mov
decb
push
mov
adc
loop
sub
or
hlt
enter
pop
lea
and
push
in
add
jg
aas
outsl
std
mov
test
repz
cli
mov
mov
psllq
jge
in
push
xor
dec
int3
cmp
mov
outsb
mov
pop
addl
jl
mov
mov
and
dec
mov
out
stc
iret
cs
xor
adc
adc
lods
outsl
mov
lret
pop
rcrb
cwtl
das
rcrb
js
xchg
adc
mov
push
pshufw
cmp
repz
out
jns
pop
clc
aaa
mov
js
addr16
push
hlt
dec
add
outsb
iret
cmp
fisttpll
xchg
sub
adc
fdivrl
jl
addr16
jae
lret
aas
adc
mov
xor
sub
and
insb
mov
push
mov
sub
test
adc
in
xor
cmp
mov
pop
jo
xor
cld
int
or
jge
fistpll
rcrl
movsb
addr16
jge
push
jmp
iret
testl
mov
sbb
iret
pusha
std
mov
push
or
js
mov
stos
js
outsb
das
or
orl
lods
iret
lea
ja
add
in
xor
lods
xor
push
mov
dec
insl
out
incl
mov
mov
push
dec
shlb
cld
popa
dec
outsb
pop
loop
cs
jae
xor
sarb
push
add
lret
out
inc
lock
std
xor
pop
push
add
bswap
repz
push
jecxz
add
cmc
dec
lea
mov
cli
imul
outsl
cmpsl
fstpt
and
pop
iret
test
push
js
shrl
sub
pop
sbb
adc
lea
out
mov
push
xchg
mov
push
mov
mov
ds
or
mov
scas
or
sti
jb
movsl
sbb
es
mov
xor
mov
subb
xor
loop
js
sbb
addr16
scas
adc
lea
or
es
int
mov
xor
bswap
lahf
or
dec
rcr
mov
ds
hlt
sub
aas
hlt
adc
or
rcr
pop
fsubrp
fs
jle
dec
inc
jle
push
push
mov
xor
adc
pop
das
push
mov
mov
inc
jge
push
pop
pusha
mov
pop
fs
addr16
sub
bound
divl
js
ds
mov
rclb
rep
pop
push
lahf
pop
shl
rorb
das
dec
decl
inc
pushl
pusha
mov
mov
lea
je
push
dec
int
push
sbb
dec
test
scas
decl
popf
dec
jecxz
test
pop
leave
cwtl
ret
lods
jle
dec
stos
jl
push
push
jecxz
shrb
push
mov
sbb
mov
jecxz
sub
out
fs
popf
jge
add
outsb
mov
dec
jecxz
adc
cmpsl
sub
adc
jle
movsl
dec
lds
mov
sub
xchg
or
inc
inc
cmp
push
insb
mov
insb
scas
cmp
mov
cmp
pop
int3
loopne
add
idivl
dec
or
insb
addr16
cld
jecxz
icebp
mov
lods
jb
fistpll
ss
mov
insl
leave
dec
cmp
inc
mov
push
int
and
adc
push
mov
jl
or
std
sbb
outsl
gs
jns
sbb
mov
push
insb
das
insl
push
js
or
dec
jne
sbb
add
js
push
ja
pop
je
out
stos
fists
imul
or
iret
std
lahf
je
orl
cmp
add
mov
xchg
jle
push
imul
or
jle
nop
das
loop
cld
push
cwtl
lret
mov
dec
andb
loop
nop
mov
jge
sbb
add
inc
add
xor
xchg
bsr
sub
jbe
sbb
mov
adc
loope
int
push
out
outsl
sub
dec
popf
cs
ds
sub
das
popf
mov
pop
pop
cmp
imul
cs
scas
or
push
iret
js
ror
mov
sub
outsb
mov
push
popw
fs
jl
lret
push
cs
fistps
cmpsb
sub
sub
inc
addr16
test
imul
aas
das
sub
je
popf
cmp
rcrl
jl
lahf
xchg
jl
adc
lock
lods
sbb
push
imul
out
repnz
mov
mov
outsb
jecxz
repz
outsl
jbe
xchg
cld
sub
cmp
loopne
shlb
sbb
pop
add
mov
add
mov
xor
stos
push
scas
popa
lods
lods
scas
lret
in
scas
add
mov
jg
dec
fcmovu
enter
pop
pcmpeqb
std
lods
push
lods
fisubrl
addr16
pop
pop
jl
push
rcrl
aad
adc
cmp
and
sbb
sub
sbb
or
flds
sbb
fcoml
mov
inc
push
test
pop
cmp
stos
popl
pop
outsb
insb
adc
cmp
insl
scas
cs
in
aad
sarl
add
cmc
scas
mov
jl
xor
fdivr
push
adc
cs
leave
sub
mov
push
push
sub
xor
or
repnz
push
or
dec
aas
push
jle
cvttps2pi
aaa
add
outsb
jmp
mov
mov
out
fistpll
js
push
dec
loope
addr16
cmovg
xchg
add
aad
es
dec
pop
add
clc
sub
insl
js
dec
mov
mov
das
lahf
cmp
xchg
cld
out
dec
repz
jae
lods
inc
scas
outsb
push
mov
das
pusha
mov
mov
xor
dec
push
cmp
jnp
repnz
outsl
lock
push
add
icebp
jecxz
pop
jle
insl
dec
mov
pop
stos
adc
out
jns
mov
add
mov
movsb
in
sub
mov
loopne
insl
cld
lea
push
fildll
into
pop
push
sbb
ret
scas
popa
loope
iret
sbb
sbb
mov
mov
xor
popa
xor
insw
int
sub
popf
sti
mov
or
pop
sbb
mov
adc
movsl
adc
dec
hlt
adc
jg
pop
inc
mov
push
lahf
or
leave
leave
adc
sub
adc
push
dec
mov
fs
push
ds
mov
and
jge,pn
dec
insl
sub
in
rcrb
and
sbb
adc
fnstcw
jns
call
xor
and
cmpsl
lea
dec
idivb
sub
sbb
lods
xchg
ljmp
outsl
dec
inc
imul
jge
xor
lods
jl
adc
mov
push
sub
mov
push
repz
jmp
loop
aas
insl
hlt
jge
js
mov
add
enter
fisttpll
pop
mov
pusha
popa
aas
jecxz
jmp
dec
push
lods
jmp
dec
push
ljmp
fwait
ds
mov
insl
filds
adc
incl
lcall
in
add
scas
dec
sbb
lea
sbb
jge
jne
dec
cs
test
insl
adc
push
loop
pusha
push
cld
jae
add
mov
jl
lods
frstor
outsb
xor
mov
dec
pmaxsw
dec
out
outsb
in
jb
dec
sbb
xor
or
jge
cmp
inc
dec
stos
or
dec
insb
pop
fstpl
repz
int3
addr16
fnstsw
adc
xchg
loopne
xlat
mov
cmp
mov
gs
xchg
sub
insl
pop
imul
mov
jmp
jo
test
jl
cld
insl
mov
mov
and
ds
cld
punpckhdq
pop
outsb
push
pop
aas
or
out
ds
call
es
add
mov
decb
adc
andl
adc
jecxz
lods
int
lea
push
push
cmc
ror
or
jecxz
mov
mov
fstl
testb
mov
adc
jns
outsb
jg
mov
mov
mov
lahf
loope
pop
adc
insl
jge
push
js
outsb
sbb
std
push
jecxz
cwtl
dec
sbb
add
notb
pop
push
popf
jg
xor
das
aas
and
add
cs
xor
mov
out
outsl
jg
adc
or
idivl
pop
sbbb
mov
mov
insl
add
inc
addr16
outsb
insl
mov
fimull
adc
stos
sub
add
and
jp
push
jae
sbb
clc
test
insb
add
sub
sub
shrl
lcall
sub
pop
std
push
pop
loop
jl
femms
push
bnd
or
ror
adc
repnz
push
idivl
push
aas
cmp
inc
mov
xor
fists
jle
sub
mov
std
fisubl
mov
mov
sub
repnz
ds
push
popf
pop
ds
mov
orb
cld
and
std
mov
hlt
sub
lds
adc
lods
lock
jecxz
das
lods
insl
xor
mov
adc
mov
dec
cmp
lock
lea
pop
cmpsl
hlt
sub
or
stos
mov
and
das
punpckhbw
mov
or
lods
lea
mov
and
push
sub
cld
aas
je
cwtl
inc
mov
popf
int
mov
frstor
repz
fwait
add
lds
xor
mulb
cltd
lods
jno
fcmovb
insl
adc
xor
mov
sub
push
hlt
iret
cmp
push
jmp
inc
cld
repz
pop
push
jle
pop
shlb
sbb
pop
mov
push
lods
mov
add
add
stos
inc
dec
adc
hlt
adc
pop
mov
ret
movsl
insl
mov
rolb
sub
fnstsw
fnstsw
rclb
scas
or
iret
xor
sub
jl
pop
mov
insb
mov
mov
inc
pop
push
insl
sub
bound
adc
jge,pt
mov
fnsave
dec
dec
and
pop
testl
pop
adc
popf
lods
adc
push
sub
add
and
xor
dec
xor
clc
outsl
jl
mov
mov
insb
push
jg
xchg
clc
cmpsb
outsl
push
insb
ja
sbb
jo
pop
dec
repz
jmp
insl
pop
in
xor
xchg
push
aas
imul
jb
mov
sub
pop
push
push
inc
xchg
dec
aas
mov
sbb
insl
lods
ljmp
pop
pop
jl
outsb
scas
fldl
insb
pop
pop
repnz
mov
ds
lods
fistpll
sub
push
loope
std
dec
dec
push
mov
sub
sbb
ret
mov
mov
dec
lods
fsubr
fdivr
insl
aas
das
shll
mov
lcall
enter
or
sub
andl
int3
stos
inc
pushf
push
insl
jae
add
push
adc
jg
repnz
out
popa
dec
mov
pop
fnstsw
push
jl
mov
or
xlat
dec
xor
cli
loop
jno
out
sarl
pop
cwtl
pop
or
aaa
add
jmp
in
mov
dec
cld
popf
xor
xor
insb
push
in
imul
cmp
dec
mov
leave
mov
lret
int
adc
call
sub
add
out
loopne
stos
mov
loopne
sbb
jge
pop
scas
adc
loop
sub
adc
adc
sbb
flds
mov
cmc
mov
sbb
dec
xchg
cmp
jl
sbb
arpl
aas
jecxz
xchg
jle
ja
in
int
iret
popa
mov
repz
js
shl
lea
imul
xor
xchg
outsl
or
adc
jle
lahf
cld
pop
push
sbb
xchg
popf
lea
pop
and
cmp
shlb
pop
xor
stos
add
jecxz
pop
push
push
and
mov
and
dec
cld
dec
ss
add
and
sbb
mov
mov
or
fnstenv
mov
or
dec
push
dec
outsl
mov
outsb
jle
cld
sub
push
mov
jecxz
pop
int3
add
jp
or
rcl
les
xor
sbb
jae
int
sub
mov
pop
pop
lods
cs
mov
fnsave
push
lods
fsubr
jecxz
sbb
push
ds
ja
mov
jecxz
arpl
pop
adc
adc
and
in
pusha
outsb
lods
sub
fcompp
push
scas
adc
in
jge
inc
outsl
repnz
mov
pop
and
push
lret
stos
lods
jecxz
adc
mov
dec
sbb
popl
dec
cmp
xlat
and
insl
mov
sar
outsl
pop
loop
mov
in
adc
cmp
repnz
add
cld
lods
out
popf
xor
clc
jbe
dec
mov
pop
adc
jge
jg
push
das
mov
gs
lea
pop
shrl
jecxz
mov
lods
adc
jge
push
ret
mov
stos
shll
repz
jp
push
rolb
shrb
xlat
cld
mov
xchg
and
in
jns
out
das
ljmp
xor
sub
loop
test
jo
mov
sbb
add
push
cld
inc
sub
xor
outsl
add
dec
mov
jle
mov
sbb
push
pop
adc
sti
adc
jecxz
jae
push
fistpl
outsb
insl
rclb
fisttpll
std
lods
sbb
lods
out
lea
popa
repz
icebp
jge
das
test
jmp
xor
adc
sub
push
xor
xor
adc
pop
cmp
push
jmp
xchg
and
push
mov
in
fildll
addr16
xchg
outsb
sub
rep
shlb
fwait
outsb
je
js
bound
ret
jl
push
or
and
das
lock
push
jg
jl
addr16
dec
ds
sub
xchg
mov
adc
dec
cmp
mov
push
adc
insl
scas
je
fdivrl
lahf
xchg
repnz
lods
mov
in
aas
cs
adc
pop
xor
iret
lods
int
in
adc
jo
jg
pop
and
mov
sub
repz
jae
push
xor
roll
jno
test
fildll
bound
push
jbe
dec
pop
insl
adc
and
fs
outsb
bswap
fcoml
jge
add
inc
jecxz
push
mov
jl
js
mov
cmp
jecxz
mov
insl
jo
ror
or
or
adc
icebp
or
das
jle
push
inc
addb
pop
incb
cli
std
das
int
xchg
or
lahf
mov
scas
mov
cmp
pop
mov
fsubrl
rorb
mov
aad
inc
into
lods
cltd
mov
pop
pop
xchg
mov
popf
jo
arpl
lret
loope
pop
in
xchg
jge
iret
or
enter
lea
and
mov
cld
xchg
sbb
push
mov
dec
jl
sub
lods
push
stc
ja
jno
xor
or
and
repz
adcb
adc
sbb
cmp
js
test
mov
cld
lock
std
push
fildll
rcr
or
mov
mov
cmp
xor
or
inc
mov
sub
push
mov
outsb
fistpll
movnti
jae
lods
js
push
inc
sbb
pop
lock
sub
das
mov
int3
mov
outsl
dec
test
jns
lahf
bound
pop
push
cld
adc
mov
addr16
ss
outsl
xor
out
in
xor
in
cld
sub
repz
inc
cmpl
lods
add
mov
xor
fnstsw
dec
imull
clc
pop
add
dec
mov
xchg
testb
pop
ja
int
xor
rorl
mov
pop
jge
sbb
mov
inc
mov
call
jmp
das
imul
out
test
dec
inc
xchg
or
repz
cmp
mov
pop
mov
cld
outsb
inc
cmp
int3
ret
es
mov
scas
xor
pop
and
push
hlt
cltd
test
cwtl
push
xchg
mov
dec
ljmp
fisttps
cmp
outsb
outsb
iret
sbb
aas
adc
or
mov
repz
rorl
icebp
and
sbb
adc
jmp
js
inc
pop
rep
mov
out
scas
outsl
xor
nop
sbb
dec
xor
cmp
fildll
outsb
jecxz
popf
lods
sbb
dec
sub
pusha
std
cmp
idiv
cld
fnstsw
inc
aas
ja,pt
mov
pushf
hlt
pop
repz
ffreep
push
add
xorl
sub
pop
cmpsl
popf
cs
stos
cmp
sbb
mov
push
ja
aam
or
outsl
out
add
cltd
jge
in
fistps
or
xchg
xor
inc
inc
xor
das
outsb
cmp
cmp
jecxz
mov
push
insb
pop
int
mov
insl
popf
pop
mov
jl
movsb
scas
mov
adc
add
lea
repz
lods
pop
and
and
loope
in
ret
outsb
out
mov
and
ss
in
or
sbb
push
or
mov
sub
repz
lahf
and
adc
add
sub
fmuls
or
inc
pop
mov
mov
xor
add
adc
dec
mov
adc
adc
leave
lcall
repz
add
aam
in
pop
jae
cltd
popf
sub
dec
push
xor
dec
lea
cld
adc
adc
mov
inc
daa
loope
xor
dec
xchg
inc
jle
jl
adc
in
cmp
call
push
iret
cmp
mov
pop
sbb
ds
imul
in
mov
hlt
mov
fsubs
int
je
mov
outsb
jmp
lea
jg
repnz
icebp
push
or
pop
dec
repnz
add
and
stos
adc
cld
sub
lret
insb
outsl
inc
nop
out
shll
call
sbb
mov
jmp
and
addr16
cld
jnp
nop
push
xchg
mov
lods
orb
adc
xchg
mov
dec
xor
xor
cmp
cld
jmp
fucomp
pushf
or
push
lods
cmp
ret
das
iret
adc
loop
popa
in
popa
inc
imull
jne
dec
jecxz
scas
dec
cmp
jmp
push
ret
push
jmp
mov
pusha
fsub
push
cmp
add
mov
out
repnz
inc
mov
aas
nop
add
pop
insl
repz
add
pop
iret
sbb
push
jle
lahf
pop
insb
in
or
out
dec
cs
repz
loope
dec
sub
inc
call
mov
sarl
insb
push
pop
push
subl
mov
xchg
mov
out
mov
insb
repnz
sub
loope
mov
push
and
mov
cmp
pop
add
sub
filds
adc
sbb
pop
xchg
or
call
int
mov
stos
cld
dec
popf
mov
popf
jo
push
pusha
sub
adc
push
es
stc
add
f2xm1
stos
push
mov
xor
pop
jge
sarb
outsb
hlt
sub
sbb
insl
std
iret
dec
repz
outsl
stos
jge
in
lods
pop
or
mov
popf
jl
scas
loop
lea
mov
lret
dec
push
jecxz
mov
js
jp
inc
add
scas
jecxz
lock
nop
and
fistps
push
aas
or
stos
faddl
xchg
popa
out
jg
lods
and
sub
leave
lret
xor
loope
adc
jge
dec
filds
mov
xor
enter
jne
jecxz
lahf
mov
out
sbb
iret
jmp
shl
pop
je
add
dec
pop
aas
inc
movsl
ret
mov
shrl
adc
popa
int
lods
pop
mov
inc
sbb
outsb
push
test
addr16
xlat
or
pusha
cmp
inc
rcrb
in
popa
xchg
fistps
iret
outsb
cmc
fcompl
clc
pop
pop
lea
ds
cmp
iret
inc
out
pop
xlat
aam
int
or
mov
cmp
sar
adc
sbb
inc
clc
dec
sub
repz
push
mov
aaa
add
insb
dec
or
jg
push
pop
cld
repz
lahf
daa
mov
cmp
std
xchg
sbb
push
push
fisubl
mov
jle
sub
push
int3
mov
sbb
lock
out
xor
insb
dec
outsl
lods
adc
inc
inc
jg
adc
xlat
iret
in
jecxz
scas
cli
mov
mov
push
sbbl
in
insl
das
addr16
jge
mov
dec
roll
fisttpll
repnz
insl
push
mov
lock
mov
mov
sub
push
dec
out
daa
mov
outsb
jecxz
outsl
mov
xchg
mov
mov
push
leave
cmp
adc
and
outsl
out
pop
popf
in
dec
pop
fbstp
addr16
mov
and
in
cmpl
adc
sub
and
jge
das
loop
sub
mov
fcmove
das
in
push
ljmp
lods
fs
cmp
jo
dec
jle
popf
int
adc
clc
push
pop
in
add
pusha
adc
lea
ror
dec
ret
xor
js
outsl
sub
or
fildll
add
cmp
in
dec
movsl
xbegin
push
jmp
jmp
xorl
jge,pn
insb
rorl
addr16
push
push
aaa
and
jmp
int
in
js
bound
insb
pop
push
das
in
jae
and
sbb
ss
sub
push
push
mov
das
out
cld
jae
daa
push
push
hlt
add
jae
fldcw
fnstenv
jae
jmp
insl
dec
subl
sub
pushf
cmp
jg
shrl
push
mov
or
mov
dec
ret
push
popf
hlt
lret
into
insl
adc
movsl
imul
mov
xor
addr16
std
mov
popf
js
cmp
stos
dec
dec
lcall
cwtl
neg
in
shlb
jecxz
sbb
jae
push
fmull
or
mov
and
jl
cmp
jo
lods
mov
shll
sub
jge
push
inc
xchg
lahf
or
dec
fsubp
pop
lock
cmp
mov
std
push
pop
jg
lock
insb
int
jmp
fmuls
shlb
jle
push
and
push
push
push
lea
push
loope
and
sbb
push
or
xchg
test
rorl
iret
pop
push
sub
scas
and
sarl
cs
push
outsl
clc
es
dec
repz
mov
lea
mov
addr16
fst
sbb
lahf
inc
insl
sti
rcl
push
add
adc
cmpsb
dec
mov
ds
xor
push
aas
js
adc
and
pop
mov
ds
mov
shrl
pop
xchg
adc
dec
outsb
push
mov
scas
pop
iret
mov
insl
roll
inc
clc
dec
mov
sub
jge
mov
in
mov
stos
cmp
dec
cmc
jg
add
ffree
push
in
addr16
std
roll
and
popf
pop
dec
push
fistpll
outsb
jmp
js
mov
mov
jmp
push
repz
out
pop
push
jmp
push
jle
push
inc
adc
repz
outsb
sub
sbbb
push
dec
rorl
dec
rolb
lods
adc
popa
jl
repz
rcll
loop
outsl
imul
fildll
sbb
sub
jle
dec
mov
decl
mov
sahf
mov
or
cld
insb
xor
add
push
clc
repnz
push
mov
lea
subl
jmp
push
hlt
inc
filds
out
jb
repz
mov
dec
jmp
jmp
scas
dec
leave
xchg
fisttps
dec
iret
pop
insl
mov
rcr
test
popf
xor
mov
in
outsb
cmp
or
dec
in
pop
outsl
push
int
addr16
in
mov
pop
jb
stos
fildll
push
repnz
pop
mov
pop
sub
loop
push
push
dec
ja
outsb
loope
sub
xor
jl
pushf
dec
pop
filds
pop
sbb
pop
mov
lds
pop
push
cli
paddd
mov
fisttps
jmp
shr
jg
scas
loope
cmp
add
std
xchg
sub
rcrl
movsb
jbe
pop
pushf
sbb
scas
sub
cmpl
cmp
insb
inc
pop
inc
cmp
adc
aas
imul
mov
mov
mov
mov
shlb
lea
int
or
sbb
dec
ds
aas
loopne
xbegin
insl
adc
loop
dec
mov
insl
jo
pop
mov
lret
cs
je
pusha
fnstsw
add
addr16
jbe
mov
ja
mov
adc
sbb
mov
pop
dec
cmp
ss
popf
popa
int3
jg
or
cmp
insl
shrl
lahf
jg
jo
jmp
inc
jmp
jle
adc
push
jo
test
dec
call
jge
and
mov
jle
dec
pop
mov
adc
jecxz
mov
mov
jne
or
std
mov
push
int
xor
fsubrl
out
sub
dec
inc
mov
repz
dec
mov
loopne
mov
jecxz
jb
pop
das
std
jae
xchg
hlt
add
test
std
cld
or
pop
decl
push
insl
fisttpll
js
mov
or
push
mov
scas
outsl
or
ss
iret
cmp
push
or
jb
js
adc
mov
call
jae
nop
insl
cmp
das
loope
xor
and
fisttps
cmpsl
repnz
xchg
push
sbb
ljmp
lods
enter
pushf
iret
dec
pop
lahf
adc
jb
xchg
popf
insl
push
inc
push
enter
jne
add
dec
std
pushl
popf
lea
push
pop
sub
popf
mov
hlt
repnz
mov
lods
insl
and
pop
testl
sbb
dec
out
das
jo
insl
xor
leave
in
pop
fcomps
dec
jg
repnz
jmp
outsl
insb
fcmovnbe
mov
mov
bound
adc
filds
jge
lods
scas
pop
es
arpl
lahf
sti
outsl
pop
in
insb
es
popf
inc
lock
or
out
outsb
rorb
cmp
addr16
out
repz
push
pop
ret
mul
push
push
cmp
loope
pop
push
iret
js
and
loopne
sbb
jl
mov
popf
jmp
int3
jecxz
or
and
cmp
mov
das
mov
iret
ss
push
xor
or
adc
pop
dec
mov
roll
cmc
cld
mov
push
std
pop
jmp
sub
xchg
sbb
scas
js
jl
dec
mov
outsb
in
mov
outsl
pop
subl
mov
scas
cmp
clc
cld
cmp
fisttpll
call
bnd
and
jg
xchg
jae
adcb
lahf
jmp
mov
decb
mov
scas
xor
mov
out
mov
adc
cmp
cmp
sub
push
outsb
jo
and
repz
dec
pop
push
cld
push
scas
push
pop
add
std
pop
mov
outsl
jge
dec
xor
lods
cs
repz
mov
pop
popf
enter
ds
fld1
dec
cld
inc
dec
out
aad
out
call
or
popf
push
inc
push
cmpl
sbb
dec
pop
loop
pop
jl
int
or
push
jmp
sahf
mov
xor
mov
dec
sbb
sarl
rcll
mov
int3
mov
push
std
jg
ss
scas
adc
pop
repnz
int
ds
pop
loope
sub
mov
filds
sti
testb
dec
stos
xor
loope
in
ss
dec
fwait
or
dec
xor
mov
repz
xchg
int
fadd
push
popf
cvtps2pi
mov
insl
add
in
jp
dec
jle
int
lods
dec
mov
clc
mov
ss
dec
hlt
push
iret
lods
in
mov
std
pop
xor
shrl
pop
outsb
mov
push
jl
mov
dec
gs
repz
add
sbb
or
jecxz
outsl
mov
stos
jg
jle
out
fucomp
add
outsb
ja
nopl
jbe
xchg
loop
sbb
into
shrl
rclb
jbe
mov
rorb
dec
push
mov
push
sbb
in
scas
mov
push
loop
jg
outsb
int
std
testl
cmovae
fists
xor
lods
adc
jmp
mov
or
mov
arpl
dec
loop
lock
cmp
jmp
fistl
lret
outsb
dec
ds
push
push
sbb
aaa
aam
sub
xor
lret
inc
push
stos
out
dec
jl
insl
mov
ret
mov
pop
fcoml
push
xchg
ljmp
fs
xchg
repz
arpl
inc
cld
aas
lahf
out
jle
jae
push
dec
shrb
jo
pop
push
pop
push
cli
sarb
in
push
lcall
push
xor
das
mov
loope
in
pshufw
data16
sub
dec
push
dec
ret
fstl
jae
mov
incl
cmp
fsubs
sbb
or
or
fucom
hlt
mov
jecxz
dec
mov
rorl
sarl
sub
sub
popf
inc
lahf
lea
adc
inc
jecxz
insl
inc
push
add
in
adc
das
insl
push
dec
adc
pop
add
rclb
xlat
push
mov
negl
out
sar
fisubl
icebp
imul
xor
pop
pop
int
cld
scas
or
push
mov
lret
add
and
jge
fcomp
lock
adc
mov
jl
outsb
or
push
int3
xor
xor
adc
and
aam
sbb
divl
das
pop
pop
je
jo
outsb
das
hlt
mov
jmp
shrl
push
xor
mov
cmp
leave
cmp
mov
outsb
shrb
aas
dec
and
cmp
xchg
and
adc
mov
or
push
and
in
mov
jecxz
cmp
or
add
imul
mov
sub
cmc
ds
mov
inc
cs
pop
jg
and
cmp
fldl
sarl
insl
jo
jmp
outsl
mov
pop
imul
mov
inc
out
leave
lock
and
push
pushf
js
cmp
das
push
clc
adc
cmp
sub
or
rcrb
push
popf
sub
hlt
adc
lods
scas
dec
dec
mov
in
movsl
fisttps
stos
add
push
xor
aas
pop
add
pop
pop
std
and
jg
cmp
xchg
and
sub
scas
lahf
jg
js
loope
insl
ds
push
or
and
fistpll
dec
or
mov
sub
mov
mov
cmp
movsb
mov
pinsrw
xor
scas
pop
jmp
jecxz
frstor
lods
mov
inc
or
push
int
or
mov
data16
xor
ja
or
jl
das
imull
xor
fnstsw
call
scas
and
pop
imul
aas
popf
push
addr16
cld
xlat
push
insb
ret
test
insl
roll
into
xor
mov
cmp
repnz
jge
pop
jmp
outsl
int
scas
xchg
loop
in
xlat
add
out
int
pushl
or
sarl
outsb
cmpsl
inc
cmc
cmp
nop
repz
das
sbb
add
and
imull
scas
push
sub
mov
and
jnp
out
push
loope
lods
or
sti
push
xor
insl
loop
push
sbb
movsl
mov
jns
cs
jg
xor
jl
in
in
pop
adc
add
mov
imul
sar
int
mov
mov
mov
push
mov
sti
std
or
cwtl
or
into
push
pop
loope,pt
leave
insb
jns
cmp
iret
add
lahf
cmp
outsb
xrelease
mov
pop
push
das
sahf
dec
mov
push
xor
dec
fsubrs
push
insl
push
aas
mov
insl
adc
js
ljmp
mov
jno
mov
addr16
jl
iret
dec
mov
pusha
movsb
mov
decb
pop
push
xor
xlat
outsl
imul
mov
sub
pusha
enter
wrmsr
cs
dec
clc
pop
cld
mov
inc
ds
cmp
sbb
mov
inc
mov
icebp
or
mov
call
test
les
insb
adc
decb
adc
lods
addr16
jle
add
aas
push
mov
jge
clc
mov
add
insb
xor
dec
or
xor
push
mov
inc
pop
or
adc
loope
insl
jns
mov
stos
repz
out
cmp
mov
jns
out
mov
or
dec
es
loope
insl
insb
outsb
jg
outsb
pop
add
dec
or
in
add
and
xor
pop
in
cli
mov
jge
add
addr16
push
call
jle
push
ret
leave
addr16
mov
outsb
pop
int
insb
bnd
scas
sbb
mov
int3
iret
sbb
inc
pushl
mov
adc
mov
inc
pushl
cmpsb
cli
dec
dec
cmc
fdivl
pop
pop
jmp
jmp
push
clc
or
jl
fucomp
add
fistpll
stos
int
fsubl
out
mov
dec
loope
outsb
dec
xor
sub
hlt
data16
jle
testl
das
filds
hlt
push
and
iret
mov
scas
dec
and
adc
insb
cmp
pop
sub
jo
jmp
mov
or
outsl
inc
mov
add
jl,pn
outsb
out
stos
jecxz
pusha
in
pop
lahf
in
mov
xlat
paddd
jg
adc
adc
dec
cmp
push
pop
adc
insl
fildll
outsb
cltd
cmp
jecxz
adc
clc
lods
jg
pusha
sbb
lea
mov
jge
shr
mov
ucomiss
insb
rorl
mov
push
jl
and
cli
pop
insb
and
incb
jg
popf
jmp
mov
fsts
shlb
add
push
pop
das
pop
pop
push
decb
mov
fmulp
mov
cli
mov
fsubl
push
sub
fwait
inc
jne
aaa
adc
dec
cld
pop
dec
push
ljmp
les
jge
adc
pop
cmc
ljmp
lahf
sbbl
repnz
lea
jg
cmpl
jl
dec
pop
iret
push
cld
sbb
mov
std
adc
add
mov
insb
dec
mov
sub
mov
mov
cmp
fisttpll
dec
aas
and
stos
arpl
or
push
cmc
push
scas
shrb
das
pop
sbb
cli
dec
dec
mov
les
or
sahf
and
push
sub
and
repz
insb
out
xor
mov
sbb
push
push
lcall
pop
xchg
mov
orl
imul
jg
sub
sbbl
pusha
repz
cli
cld
jecxz
xor
lock
mov
pop
int
test
ret
iret
add
sub
adc
jmp
mov
mov
addr16
jmp
insb
sub
fdivr
lea
sbb
lahf
sub
or
xlat
jmp
and
jge
mov
aam
or
dec
mov
or
hlt
mov
dec
hlt
and
in
ljmp
mov
xchg
push
outsb
mov
int
inc
fisttpll
jmp
push
push
pop
xor
sub
sbb
or
jmp
add
add
iret
push
in
jmp
push
jmp
jmp
lods
cs
lods
mov
mov
xchg
sub
push
dec
add
xor
rclb
aas
out
bound
mov
das
out
js
insb
jecxz
nop
ds
cmovae
cmpsl
push
lods
mov
jae
iret
xor
ds
push
sti
mov
ja
jecxz
push
stos
add
jge
xchg
repz
push
rorl
test
pusha
sub
sbb
cmpsl
push
repnz
jp
in
or
in
cmp
fisttpll
out
js
inc
loop
shlb
jmp
ds
jecxz
addr16
xor
sbb
sbb
jmp
jl
mov
repz
xchg
jecxz
aas
xor
aad
int
into
push
std
sbb
addr16
mov
pushf
add
jle
cmpsb
lcall
cld
lods
mov
or
mov
dec
dec
arpl
ss
fsubrs
mov
subps
cmp
push
push
lret
cld
leave
out
lret
pop
lods
push
test
insl
and
test
repnz
dec
pushf
push
inc
lret
fstl
cmp
ja
adc
outsl
sub
stos
pop
in
lea
xor
sbb
dec
insl
cwtl
enter
insb
mov
pop
push
shrb
jge
cmpsb
cmp
push
int3
cltd
jecxz
pop
das
xchg
jecxz
lahf
daa
sbb
dec
sub
and
in
sub
fs
jmp
mov
xor
pop
xor
jnp
lcall
mov
lods
insl
jl
mov
xor
or
out
jo
jle
ja
cld
xlat
outsl
mov
xor
pop
insb
or
dec
and
push
outsb
sbb
dec
dec
ja
adc
adc
stos
push
pop
outsb
pop
aas
std
dec
daa
cmpsb
outsb
std
mov
add
cmp
loop
pop
cmp
mov
in
adc
outsb
sbb
lods
push
aas
pop
das
in
jne
mov
repnz
outsb
testl
sbb
push
inc
inc
lcall
mov
fsubrs
call
fbstp
pop
or
out
push
dec
xor
dec
out
popa
icebp
dec
fwait
outsb
xlat
add
push
out
out
mov
popa
sbb
addr16
outsl
adc
adc
mov
sbb
jmp
sahf
lea
jo
jle
add
pop
mov
in
ja
push
pop
cmp
dec
bswap
insb
adc
lret
push
das
lods
mov
pop
scas
inc
cs
or
mov
ljmp
mov
hlt
ss
mov
pop
outsl
and
into
das
inc
push
out
or
lods
lods
fwait
std
std
xor
cltd
dec
out
aas
sbb
pop
ret
in
imul
outsl
shrl
out
push
int
ficoml
pusha
push
sub
popa
cld
mov
inc
jl
mov
pop
insb
jge
or
incl
pushf
gs
fwait
pop
sub
jg
clc
sub
dec
aam
fisttps
xor
sub
xor
outsb
mov
mov
inc
out
lret
repz
repnz
insl
stos
ja
adc
mov
pop
xor
or
jmp
sub
fmuls
cld
and
add
add
int
stos
sbb
or
adc
dec
cld
dec
push
outsl
adc
xchg
sub
or
js
int
insl
insb
loop
in
lret
jg
and
incl
mov
aad
mov
and
scas
adc
xchg
iret
mov
add
fbld
or
sub
or
and
hlt
loopne
outsb
pop
testl
push
or
lret
sbb
movsb
or
mov
mov
jge
mov
ds
jns
cld
pop
and
scas
cmp
jge
es
fwait
or
sub
cltd
add
in
jge
repnz
jecxz
mov
cmp
push
movswl
xor
cmp
or
mov
adc
lock
outsl
decl
addr16
pop
jg
ja
aas
rcrl
cmp
inc
add
ljmp
dec
xchg
test
inc
mov
push
jmp
clc
mov
mov
push
daa
popa
scas
imul
jecxz
out
cmp
outsb
std
cmovb
sub
mov
das
insl
stos
repz
incl
jge
mov
jg
punpckhdq
pop
xchg
pop
sbb
push
pusha
out
call
dec
cmc
rcr
jae
pop
iret
mov
repz
push
incl
lea
push
mov
outsb
aas
xor
inc
dec
lret
pop
mov
mov
iret
popa
push
jo
mov
pop
adc
sbb
jae
pop
scas
scas
mov
insl
mov
jmp
js
aaa
mov
pop
popa
out
cmp
adc
loop
jl
pop
fiaddl
sarl
cmp
pusha
pop
dec
cmp
sarl
and
rcrb
and
or
jge
call
mov
push
iret
jle
mov
ljmp
xchg
ret
sub
scas
mov
pop
pop
stos
mov
add
dec
das
push
cmp
pop
or
in
cld
gs
repz
lea
nop
mov
inc
dec
incl
cmp
mov
ret
ja
push
dec
or
test
out
mov
fsubrl
stos
dec
adc
pop
in
add
sarl
insb
aad
jo
out
aam
cld
in
insl
mov
loop
lea
sbb
lahf
loope
leave
cs
ja
mov
sbb
leave
repz
pop
out
std
xchg
xchg
sbb
stos
mov
dec
adc
push
sub
sub
push
iret
cmp
insb
push
pop
add
inc
adc
outsb
xor
inc
movsl
aas
std
and
outsl
ja
cmp
pop
mul
in
ds
lods
ret
stos
push
in
xor
fsubl
lea
shl
movsb
hlt
sub
insl
jg
cld
pop
iret
sub
cmp
movsb
rcll
dec
cmp
or
mov
fistps
out
and
mov
std
push
ljmp
pop
jg
or
lods
fmuls
mov
scas
or
or
sbb
in
clc
nopl
xor
jecxz
inc
in
jle
jle
aas
xor
addr16
lea
add
xchg
insb
iret
rorb
jg
push
jecxz
jo
lcall
sbb
lock
xchg
dec
dec
jg
or
insl
mov
cmp
and
sbb
loope
add
out
dec
scas
xor
aas
jl
push
jmp
into
push
xchg
repnz
inc
and
cmp
push
sub
out
popf
subl
addr16
sarb
insb
jle
cld
sbb
add
jge
cmp
fisttpll
add
js
out
lahf
insb
lods
repz
xor
imul
push
jle
loop
xorb
mov
rcll
and
cld
out
popf
jmp
push
mov
add
lods
sub
scas
adc
inc
adc
mov
in
sub
outsb
dec
and
and
pop
and
or
or
inc
leave
insl
addr16
movsb
stos
ljmp
stos
subl
add
js
pop
or
in
js
push
xchg
bswap
fistpll
mov
mov
and
dec
shll
ret
fbstp
sbb
pop
jmp
jle,pt
loope
popf
loopnew
call
stos
jo
rcrl
add
inc
or
adc
movsl
outsb
sbb
iret
jmp
jmp
adc
cmp
inc
outsb
sbb
inc
mov
push
outsl
lahf
add
orl
int3
push
add
hlt
inc
popf
mov
mov
in
imul
std
pop
jmp
pop
pop
jnp
pusha
sbb
leave
or
es
dec
mov
cmp
repnz
mov
jg
pop
addr16
lea
fisttpll
pop
push
ljmp
push
repz
es
outsb
dec
mov
test
sti
xchg
sub
insl
pop
add
dec
cmp
lahf
adc
cmpsl
sbb
dec
ret
mov
push
jno
sub
cmp
inc
mov
pop
pop
pop
dec
outsb
pop
add
push
in
sbb
jle
stos
mov
mov
dec
dec
loop
sbb
rorb
js
sbb
push
aaa
lret
xor
adc
scas
outsb
or
cli
decl
lods
nop
cmpl
insb
pusha
mov
test
mov
lahf
sbb
mov
popf
jge
jbe
sarl
fidivl
jge
sub
ret
push
dec
jae,pn
leave
add
aas
outsb
fistpll
inc
insb
fldcw
jae
sub
mov
jecxz
mov
pop
sub
popa
mov
xor
pop
inc
inc
stos
je
addr16
insb
and
shrl
and
sbb
jmp
mov
xchg
repnz
outsb
mov
pusha
add
or
push
mov
sbb
in
je
scas
in
jge
insb
dec
sbb
bound
jmp
cs
scas
lea
mov
add
mov
mov
cltd
sbb
push
adc
push
and
pop
cmpsb
pop
test
dec
out
jae
lods
sbb
outsl
xor
sbb
sub
inc
jmp
cmp
mov
jecxz
xchg
jl
fsubrp
pop
popf
imulb
jmp
ja
cmpl
mov
aas
scas
dec
fdivr
insl
add
adc
mov
out
push
fisttps
sub
je
fmuls
adc
adc
adc
in
push
jecxz
daa
mov
das
jmp
sbbb
dec
sub
or
mov
mov
pop
xchg
pop
addl
dec
xor
xchg
mov
xchg
jl
adc
mov
js
xor
mov
mov
repz
xor
adc
add
push
mov
mov
mov
fildll
repz
ljmp
sub
out
lahf
std
fidivrl
sub
push
dec
jl
pop
jge
jo
xor
push
addr16
add
jle
cs
pop
or
not
mov
iret
mov
jmp
cmp
mov
ja
in
pop
and
jmp
push
lods
xor
insl
js
cli
test
mov
fisttps
jl
mov
jmp
js
rcl
or
notl
arpl
cwtl
in
insb
fildll
fstps
shll
pusha
sti
call
in
inc
stos
das
cwtl
mov
repz
cmp
lea
dec
jae
insl
movsl
jae
and
out
dec
jae
pop
fimuls
clc
outsb
jae
pop
or
lcall
fldt
cwtl
cmp
push
enter
pop
in
inc
adc
dec
std
jmp
push
push
outsb
jecxz
test
mov
scas
cmpsl
loope
outsl
enter
inc
popa
das
lahf
int
insb
jge
push
ds
or
sub
xchg
or
add
mov
sbb
or
arpl
stos
aad
cltd
and
out
dec
xchg
imul
les
outsb
dec
cs
inc
pop
add
stos
stos
inc
add
mov
fstpl
push
cltd
ret
pusha
cld
or
popf
sbb
lea
lods
adc
fimuls
in
testb
mov
cmp
jmp
sarb
add
jl
adc
pop
outsl
mov
push
rcrb
scas
inc
jno,pn
hlt
aad
push
inc
clc
aam
popf
jecxz
leave
sub
outsb
adc
outsl
push
mov
loope
push
jl
iret
cld
test
popf
rep
jecxz
insl
aaa
inc
mov
or
rcll
pusha
pop
xor
call
xor
xchg
and
or
lock
or
sbb
pushf
aas
shl
cmp
adc
jne
xchg
and
outsb
jl
mov
add
aas
jle
mov
outsl
test
pop
repnz
cmp
and
or
sub
in
push
pop
leave
ljmp
cwtl
cmc
xlat
or
cwtl
inc
jle
mov
xchg
mov
repnz
das
push
in
outsb
je
dec
sub
out
mov
inc
pop
xor
sti
adc
push
inc
repz
pop
call
test
jmp
mov
add
insl
or
test
or
nop
and
enter
repz
insb
fnsave
push
iret
add
xchg
outsb
outsl
cmp
pop
lods
dec
mov
pop
xchg
mov
xchg
and
int3
inc
xchg
mov
jg
ja
jne
add
sbb
jno
sbb
and
and
insl
movsl
jg
push
test
int
mov
addr16
negb
rorb
mov
inc
jecxz
push
dec
mov
leave
cmp
shr
push
outsb
pop
jbe
aas
cmp
and
shrl
jns
aas
inc
pusha
dec
push
sbb
imul
call
xchg
cmpsl
call
sub
adc
pop
popa
add
mov
nop
dec
push
adcl
xchg
sbb
popf
incb
loop
cmp
outsb
outsl
ds
dec
je
pop
repz
mov
scas
mov
shlb
ret
std
xchg
mov
ds
dec
pop
iret
inc
out
pop
in
dec
jle
push
cmpsl
or
int
push
pop
popf
lahf
loopne
test
jmp
adc
pmuludq
push
ret
sub
lock
jg
std
pop
ret
popa
mov
mov
hlt
lret
js
decl
mov
sbb
outsb
sub
jecxz
lods
xor
das
in
imul
push
insb
ds
loope
pop
sub
bound
mov
out
sub
in
push
shrb
jo
rcrl
push
outsl
shl
sub
decl
mov
cmp
fs
sbb
out
lsl
or
or
xor
push
popa
aam
in
fs
xor
adc
sbb
pop
out
jle
lods
push
insb
in
push
jae
das
das
adc
popf
and
push
notb
insl
aaa
pop
jmp
pop
and
movsb
orl
out
loopne
or
hlt
jbe
cmp
push
lcall
mov
dec
xor
cs
jae
rcl
in
in
lahf
add
aaa
dec
cld
test
push
cmp
pop
mov
mov
or
shlb
fbld
out
inc
in
xchg
jge
xchg
pop
xchg
push
push
mov
insl
sub
push
sub
out
incb
pop
idivb
sbb
and
cld
cmp
mov
cwtl
xor
cmp
dec
sbb
dec
mov
adc
shlb
fnstsw
cld
jns
add
lahf
test
int
aas
push
pop
pop
push
in
pop
push
fsubl
insb
outsl
jnp
pop
mov
mov
adc
dec
jg
outsb
and
call
insb
cs
fisttps
dec
lock
fisttps
sub
repnz
scas
mov
fnsave
dec
in
mov
push
std
pop
push
mov
cmc
rcr
je
and
sti
addr16
jl
mov
ss
lods
dec
lock
rcr
pop
subl
pop
stos
out
scas
and
push
cmp
fldl
cwtl
mov
adc
pop
rcr
je
sbb
stos
lods
pop
and
and
xchg
xchg
pop
sub
not
lcall
in
imul
jle
cli
aam
test
or
mov
imulb
jmp
jae
push
mov
push
dec
je
imul
fs
jle
pop
comiss
lea
loopne
negb
mov
out
popf
call
mov
cmp
xor
out
mov
or
dec
jnp
js
pop
and
je
fnsave
pop
xchg
dec
in
push
cli
lods
ds
idivb
lods
mov
add
sub
xchg
cmpsl
push
push
inc
jo
sbbl
sbb
lods
popf
mov
mov
pusha
sbb
push
test
js,pt
sar
insl
jl
sub
sub
add
ficompl
mov
xchg
push
pop
fs
addb
pop
pop
in
hlt
imul
int
insb
rorb
in
jmp
push
sbb
into
cs
js
iret
int3
sbb
stos
sar
ds
cmpsl
pop
xchg
pusha
std
adcl
pusha
imul
out
add
mov
decl
mov
das
pop
or
aam
outsb
mov
repz
addr16
dec
xchg
call
pop
outsl
mov
pusha
xchg
and
insl
jle
sub
dec
or
xorl
push
fsubrs
shlb
sbb
dec
xchg
cmp
loope
xor
fstp
subl
pop
push
test
stos
fisttpll
cmp
mov
movsl
aam
and
mov
fistps
dec
dec
shlb
xchg
cli
movsl
push
rolb
push
sub
xchg
mov
xor
cs
icebp
pop
mov
jp
pop
xor
jge
repz
mov
pop
push
pop
scas
hlt
imul
cs
andl
cmp
les
and
and
lahf
xchg
jo
mov
hlt
sub
popf
push
ljmp
sbb
sbb
test
inc
push
call
das
dec
std
int
fists
sub
and
pop
in
outsl
lea
clc
negb
nop
cmp
push
int
and
xlat
adc
xchg
xchg
scas
imul
js
lea
xor
xchg
sbb
ljmp
dec
js
or
outsb
out
inc
popf
inc
fsubs
lahf
mov
scas
repz
dec
js
dec
jge
rdmsr
or
xchg
jl
adc
sbb
cld
das
jge
mov
int3
jae
mov
shll
cmp
cmp
fimull
push
dec
dec
punpckhbw
push
pop
jl
and
outsl
ja
loope
sbb
adc
loope
aas
dec
aam
and
sub
sub
push
fisubrl
pop
popa
lea
rcl
rcl
aad
pop
xor
std
fwait
out
or
call
sub
in
lods
insl
jg
xor
insb
xor
sub
in
sub
mov
into
sbbl
outsb
insl
inc
cmp
gs
adc
aas
js
lods
xchg
imul
mov
out
loopne
sbb
call
outsb
push
sbb
push
idivl
and
popf
jne
sarl
add
cmp
add
arpl
in
pop
ljmp
push
sbb
pop
push
cwtl
xchg
and
adc
sarb
adc
repz
xor
cltd
push
div
cli
push
jl
push
lahf
jg
mov
js
lea
push
xor
adc
test
vmwrite
test
sbb
hlt
xor
jmp
aam
dec
out
xor
jl
mov
jae
sub
rcrb
fcomip
pop
push
cmp
jl
out
push
sub
cmp
dec
fs
pop
in
or
mov
add
push
pop
insb
dec
dec
jne
and
add
xchg
addr16
in
dec
sbb
rcrl
push
pop
jns
outsl
mov
aas
je
adc
fs
dec
leave
bnd
lahf
mov
aaa
pop
mov
adc
fisttps
inc
cld
sahf
sbb
jg
int
mov
adcl
lahf
push
cs
mov
xchg
push
or
fisttpll
test
aaa
sub
mov
test
dec
cmp
adc
das
decb
jns
rcl
jne
push
xor
sub
iret
xchg
or
insb
addr16
and
stos
hlt
jne
mov
out
add
outsl
out
fisttpl
data16
js
scas
push
push
jmp
pop
outsl
in
dec
ds
in
adc
adc
sub
scas
jecxz
mov
repnz
scas
out
pop
jp
push
loopne
das
add
hlt
mov
jl
push
out
call
pop
push
fbstp
dec
out
adc
out
adc
inc
pop
xor
push
cs
scas
mov
push
xor
mov
or
or
sub
in
lods
mov
push
shrl
jns
push
mov
or
out
fbstp
shrl
sub
jns
into
adc
pop
bound
clc
mov
add
out
xor
ret
mov
mov
mov
enter
lock
lret
xlat
pop
jbe
notl
jecxz
cmp
shll
dec
push
pop
insl
clc
mov
out
mov
dec
std
sub
lods
jb
jg
push
in
into
adc
mov
hlt
add
cs
dec
pop
stos
das
jg
pop
in
stos
fbld
sbb
cld
cmp
or
fldcw
in
jmp
and
ret
mov
push
jmp
clc
cmp
cld
and
inc
addr16
stos
rcrl
jl
mov
out
xor
cmp
aam
addr16
out
pop
btr
call
stos
sbb
sbb
pop
inc
fisttps
scas
push
and
mov
dec
jbe
int3
repz
je
int3
lods
outsb
xor
and
dec
scas
lea
pop
add
or
pop
repnz
xchg
sub
adc
pop
dec
repnz
mov
scas
sub
call
jecxz
pop
push
in
add
icebp
mov
xor
sbb
mov
faddl
insb
push
int
ret
xor
dec
loop
dec
das
inc
insl
mov
mov
sbb
pop
pusha
pop
cld
lods
mov
adc
stos
dec
lods
clc
dec
loopne
idivb
stmxcsr
or
in
repnz
pop
fs
enter
lahf
sub
xor
js
mov
jge
aas
jno
add
dec
jmp
push
std
or
cwtl
call
inc
in
inc
sub
aas
push
pop
mov
and
mov
dec
mov
jecxz
imul
inc
in
mov
dec
cli
arpl
jbe
addr16
mov
jmp
cmpsb
mov
outsb
xor
fcomp
lods
test
mov
cmp
xchg
call
je
scas
or
fsubrs
ror
mov
mov
xor
mov
in
push
sbb
out
and
scas
pop
lret
rcrl
out
dec
push
jge,pn
lea
push
sbb
in
jecxz
fisubs
add
repz
jl
insl
dec
sub
mov
jecxz
jecxz
mov
sbb
je
lahf
adc
xor
fstpl
mov
inc
in
rorb
lods
adc
lock
mov
js
lods
das
in
popf
mov
in
insl
enter
insl
sbb
addr16
dec
pop
insb
push
dec
inc
mov
sbb
and
lret
lahf
sbb
xor
adc
jge
pop
push
jecxz
pop
out
dec
popf
sub
notb
outsb
enter
lods
sbb
mov
out
jl
inc
sub
ret
loope
sbb
dec
xor
pop
push
cld
shlb
mov
sub
mov
pop
loope
repnz
jl
or
lods
or
outsl
gs
cmp
aam
xor
or
in
mov
dec
lock
push
add
push
decl
jo
popa
in
pop
negl
push
and
dec
scas
and
popf
cli
outsl
xchg
repz
adc
iret
js
out
aam
outsb
inc
jl
aaa
jnp
fmull
shrb
pop
mov
in
jnp
rclb
or
jmp
and
dec
sbb
inc
or
call
jge
xor
cmp
pop
xor
dec
push
int
lods
jno
lret
adc
xchg
jp
cmp
in
lods
jl
jae
lcall
pop
cld
decl
lret
das
cmp
xor
shlb
insl
dec
aad
pop
mov
push
jmp
sahf
clc
and
sub
sub
repz
lods
or
int
xor
dec
fs
mov
incl
jg
ljmp
sbbl
ret
es
fcoml
xor
push
fdivr
ds
outsb
sub
mov
cld
or
jle
mov
cmpsl
or
out
jnp
fsubrl
sahf
imul
add
sbb
insb
add
xchg
shrb
jmp
mov
mov
imul
pop
adc
fnsave
fsts
sbb
xor
dec
outsb
lods
or
dec
push
mov
ret
repz
xor
mov
mov
dec
xor
leave
js
fstpl
daa
std
mov
mov
cmp
loope
lods
push
negl
lea
fwait
adc
xchg
enter
mov
icebp
xchg
das
mov
lods
incl
xor
xor
mov
rorl
pop
rcr
sbb
jg
jl
push
xor
jno
int
aas
sbb
out
push
and
std
xor
addr16
pop
test
outsl
mov
js
push
sbb
xchg
into
sub
pusha
in
std
push
inc
dec
stos
sub
dec
les
mov
lods
fbld
repz
icebp
jg
or
jp
jle
sbb
dec
repz
fistps
xor
cmpl
das
mov
mov
cmp
push
xchg
in
test
mov
js
mov
adc
lods
dec
fld
ss
or
cli
sub
sbb
testl
dec
mov
ret
mov
lds
ds
decb
jmp
js
das
sub
int
mov
add
ds
pop
sbb
loope
sbb
adc
pop
jl
insb
cmp
outsl
push
lea
fnsave
insl
cmp
xchg
mov
jl
mov
xor
repz
push
mov
mov
or
sbb
lods
orl
cmp
xchg
sub
mov
mov
cmp
pop
jle
das
mov
dec
lods
clc
mov
cltd
adc
jns
mov
add
rcrb
frstor
insb
insl
sub
push
outsb
mov
stos
sbb
pop
mov
or
jmp
xor
fwait
cmp
xor
and
std
or
in
arpl
add
sbb
or
in
lret
push
js
xlat
sbb
sub
or
inc
rep
aaa
sub
lock
outsl
dec
out
pop
repz
fidivs
lock
and
push
rcrl
mov
aam
sub
insl
pop
and
ja
wbinvd
lock
or
jns
and
outsb
jge
xchg
fnsave
mov
xchg
inc
and
js
stc
push
pusha
dec
fistps
push
xchg
call
daa
fldcw
ffree
mov
mov
or
mov
sub
jl
lea
push
cmp
out
jno
scas
cmp
loope
dec
in
test
js
adc
pop
mov
mov
lcall
add
outsl
sbb
push
xor
mov
pushf
int
jbe
iret
jae
out
in
or
je
or
sbb
xor
sub
add
add
or
mov
jg
rorl
stos
cmc
outsl
inc
popa
cmp
pop
ror
mov
jecxz
shlb
adc
addr16
adc
mov
fisttpl
adc
ud0
push
das
xchg
jg
movsl
adc
xor
xor
fsubl
dec
mov
repnz
and
or
jns
and
and
mov
xchg
push
pop
shrb
push
lods
insl
insb
adc
gs
ds
push
pusha
insl
pop
fists
adc
xchg
jg
popf
filds
mov
inc
or
mov
repnz
jl
pusha
mov
scas
or
popa
incl
outsl
hlt
mov
xchg
pop
jl
push
push
mov
sub
cmp
jo
adc
or
or
mov
ret
lock
das
push
mov
cmp
int3
out
cmp
mov
cli
push
and
out
dec
sub
pop
rep
jl
push
pop
xchg
ret
in
jns
imul
call
mov
cmp
jp
int
jmp
push
add
adc
pop
pop
sti
mov
fnstenv
or
testl
push
fnstsw
cltd
add
ljmp
xchg
in
das
push
xor
mov
daa
inc
cld
repz
pop
cwtl
aas
jmp
inc
outsb
jne
push
or
pop
outsb
aas
es
push
pop
lahf
add
sbb
frstor
outsl
cmp
ds
jmp
fs
js
adc
mulb
cli
std
mov
idivl
scas
ds
shrl
int3
sub
jne
lods
pop
lods
sarb
push
sbb
js
negl
int
outsb
scas
fstl
cs
xchg
mov
repnz
dec
pop
push
iret
jmp
pop
lea
das
div
sbb
repz
mov
mov
and
sub
cwtl
or
push
scas
inc
jmp
cld
fldcw
or
xor
jge
push
insl
out
aas
js
in
add
fldt
cmp
push
adc
negl
fstpl
dec
scas
mov
jg
jle
pop
push
das
inc
aas
and
je
cs
pop
pusha
inc
into
pop
push
cmp
cmp
xor
jns
pop
gs
dec
or
add
sbb
pop
dec
and
mov
sub
in
arpl
jbe
mov
mov
in
jcxz
mov
sub
jo
mov
aas
outsb
push
addr16
jl
pop
mov
jp
pop
lahf
mov
cs
scas
and
and
sub
mov
aaa
repz
lahf
xchg
cmpsl
inc
pop
add
push
adc
in
je
add
inc
xchg
adc
xchg
pop
jb
mov
test
ret
out
dec
clc
insb
pop
jl
fnstsw
sub
dec
push
insb
xor
jne
sub
lea
add
pop
das
push
out
pop
mov
leave
xchg
add
pop
push
cld
aas
pop
push
sarl
cmpsl
mov
gs
ss
addr16
cmp
stos
lret
inc
mov
xor
lods
or
test
iret
dec
push
fbstp
mov
fwait
push
fisttpll
xchg
insl
fldcw
cli
push
aas
pop
sbb
out
mov
cmp
mov
int3
push
push
jle
sbb
xchg
jecxz
or
mov
testl
orb
jp
mov
shll
jmp
cmp
dec
outsb
cmp
popl
push
out
popf
insl
mov
xchg
adc
jp
push
pop
enter
xor
cmp
out
int
dec
dec
add
xchg
jns
testl
push
lahf
fisttpll
fs
or
push
mov
sub
xor
mov
jmp
push
jmp
and
or
popa
cltd
fwait
addl
mov
push
jb
sub
xor
fstpl
decl
ss
pushl
and
pop
dec
in
orb
popf
and
sub
insl
and
or
dec
jmp
add
movsl
xchg
dec
cmp
xor
xchg
dec
sub
sub
jb
jge
fs
pop
cs
sub
int
mov
push
mov
in
lret
dec
jmp
mov
cmp
lahf
enter
xor
add
adcl
dec
fs
mov
push
popf
push
sub
outsl
dec
jns
nop
jo
faddl
mov
in
test
xor
dec
push
mov
xchg
lahf
or
push
out
xlat
mov
xor
adc
arpl
cmpl
lods
mov
dec
pusha
outsb
dec
sbb
cmp
push
mov
mov
jmp
popa
pop
in
outsb
and
and
testl
out
lahf
cwtl
sub
mov
jecxz
je
scas
sub
dec
fisttps
push
cld
jae
pop
insb
test
je
in
sub
add
sub
pusha
daa
iret
das
push
dec
popf
and
cli
pop
pop
repz
je
inc
sbb
dec
push
dec
scas
insb
mov
dec
xchg
or
repz
dec
aad
lea
aas
sbb
mov
testl
push
ljmp
aas
jecxz
sbb
call
sub
loope
popf
mov
ljmp
cs
or
mov
push
and
leave
push
ds
insb
scas
or
jge
jle
cltd
add
cmp
cs
mov
hlt
sub
inc
aas
mov
scas
popa
popa
add
jge,pn
adc
push
dec
mov
jl
mov
scas
paddw
dec
or
mov
and
mov
dec
addl
mov
jmp
addr16
pop
xchg
in
and
inc
inc
add
jl
inc
dec
ds
add
getsec
outsb
dec
jmp
cld
pop
cmp
mov
pop
mov
les
and
sarl
ss
insl
push
and
sub
or
cmp
lret
out
cld
and
sub
das
and
inc
call
mov
repz
add
and
sbb
mov
jmp
or
jle
outsl
push
ja
cmpl
addr16
sbb
cmp
popf
outsb
scas
insb
std
fucomip
xchg
das
mov
lods
bnd
test
adc
push
arpl
push
addb
shlb
and
inc
mov
inc
in
jecxz
mov
and
lock
decb
pusha
das
popf
cmp
cs
pop
decb
cmp
jae
add
ret
icebp
or
ds
add
add
add
out
dec
mov
popa
sub
mov
popa
pop
and
into
aam
jo
lods
or
xor
lock
pop
jl
ja
jmp
pop
out
pushf
mov
aas
fnstcw
stos
xor
enter
dec
mov
imul
push
and
mul
fistpll
xor
adc
mov
sar
adc
fidivl
mov
cvtps2pi
je
loop
in
mov
scas
jle
shlb
jge
pop
cld
push
outsb
out
push
push
inc
sub
inc
lea
mov
scas
mov
scas
rorb
mov
loop
scas
jno
aam
and
repz
std
jns
jne
pop
rorl
jle
in
or
popf
stos
scas
jge
push
jae
div
mov
xor
push
jns
stos
scas
and
js
adc
call
dec
outsb
rdpmc
dec
loopne
and
and
jo
aas
cmp
in
jo
fimuls
cs
or
xor
pusha
cmp
leave
mov
sbb
pop
mov
push
mov
push
popf
lcall
fmull
repz
xor
das
jbe
adc
loopne
pop
insl
lret
insl
push
and
das
inc
fwait
sbb
sub
ds
inc
or
mov
fnstenv
jge
inc
push
aas
clc
add
push
lock
insb
pop
xor
std
stos
push
push
and
xor
jmp
jne
enter
xor
pop
push
mov
inc
int3
xchg
into
adc
stos
repz
dec
incb
push
insb
jmp
mov
dec
add
roll
lahf
mov
mov
mov
cmp
cmp
out
pop
dec
sbb
sub
mov
push
adc
adc
add
push
mov
jle
mov
je
loope
mov
xchg
outsb
cld
adc
ja
mov
je,pn
lahf
out
xchg
out
push
or
jo
in
popf
es
push
aaa
jg
in
jo
addl
sub
lret
ss
push
out
jge
mov
fdivrp
fimuls
fbstp
mov
jg
lret
sbb
inc
xor
cmp
jns
mov
lock
js
ljmp
mov
dec
ss
inc
sub
test
fists
pushl
pop
cmp
insb
aas
pop
imul
xlat
mov
xchg
shr
ds
stos
sub
xor
xor
push
mov
push
jecxz
mov
std
sub
insl
or
stos
dec
das
or
adc
mov
pop
rorl
jecxz
mov
mov
mov
push
js
jg
stos
sbb
add
cmp
sub
mov
jg
je
and
xor
sar
cltd
push
or
and
and
xor
inc
shr
mov
int3
lea
cs
sub
aad
fiadds
and
iret
pop
lahf
pop
push
pop
sbb
xor
sub
cli
sbb
adc
xor
jl
jle
cld
inc
jg
mov
cwtl
mov
enter
rep
lods
insl
outsl
mov
fisubs
cwtl
and
insb
adc
cmp
into
fistpl
je
sub
mov
imul
jle
xchg
push
mov
jl
out
loop
inc
test
popf
dec
lahf
jge
das
shlb
cs
or
sbbl
int
aas
jns
mov
out
movsl
add
adc
cld
mov
mov
int3
outsb
insl
adc
std
cld
dec
add
repz
dec
inc
lods
cli
adc
roll
idiv
pusha
cmp
outsb
inc
insl
cmp
insl
adc
lahf
push
pusha
and
out
lahf
or
repz
mov
xchg
cmp
dec
push
and
sbb
pop
sub
pop
mov
jle
dec
jge
rcrl
ja
jecxz
xchg
mov
mov
addr16
test
and
dec
pop
in
test
dec
lods
jg
mov
es
jns
neg
pop
fsts
fdivl
cld
repz
lret
jl
inc
cwtl
or
ror
push
js
sahf
repnz
pop
mov
pop
or
out
adc
adc
pop
stos
iret
das
mov
pop
ret
sub
insl
repz
or
pop
outsb
sbb
mov
jo
ja
lahf
push
cmp
lret
jo
sbb
sub
and
mov
int
imul
sbb
xchg
outsb
les
sbb
sbb
inc
stos
in
mov
pushf
loopne
inc
jl
xor
cmp
addr16
xor
les
push
psubd
into
mov
aas
lahf
ss
add
jge
cmp
jge
insb
inc
outsb
inc
orb
jmp
inc
or
out
xchg
add
jno
cmp
ret
inc
push
xor
push
adc
inc
sbb
mov
dec
shll
test
pop
jl
jg
cmpl
push
inc
cwtl
xchg
test
mov
inc
lock
pop
jl
addr16
pop
cmc
and
int3
dec
cs
pop
inc
scas
mov
repz
jmp
out
mov
add
in
sbb
out
push
out
jmp
push
sub
lods
repnz
ret
fbstp
mov
xlat
inc
mov
mov
loopne
ds
cmp
push
mov
out
mov
adc
lock
insb
push
int
mov
subb
push
loope
dec
mov
lock
jle
dec
outsb
js
jmp
jge
or
add
mov
mov
pop
int3
popa
pop
adc
sub
lods
ds
push
jecxz
cmpsl
dec
repz
insb
push
push
movd
ja
adc
dec
out
jecxz
aas
jecxz
out
sbb
cli
sub
dec
jmp
add
minps
repz
fsubs
jae
std
fwait
loop
iret
outsl
sarl
push
testb
std
stos
shlb
outsb
add
out
mov
sbb
insl
pop
sub
jno
rclb
sbb
in
jns
mov
stos
pop
loope
sbb
cld
outsb
pop
nop
rcrb
imul
inc
jmp
fisubs
and
pop
dec
and
pop
pop
push
cmovl
add
lahf
pop
and
mov
les
divb
pop
jae
arpl
xor
fmulp
cld
nop
js
lea
nop
scas
adc
add
xchg
rcrb
jmp
jecxz
fisttpll
insb
call
push
js
pop
pop
or
sub
lock
decl
jle
cs
mov
push
xor
mov
push
cmp
js
pop
mov
in
pop
cmp
loop
mov
xor
cmp
mov
insl
xor
adc
pop
movzwl
into
mulb
insb
ficomps
mov
mov
je
lock
or
xor
pushf
pop
mov
int
ficompl
add
push
movsl
test
or
std
sbb
jp
insl
add
negl
cmp
and
and
lahf
in
stos
mov
and
cmp
jle
lea
ljmp
mov
subl
fbld
int
pop
outsb
jg
adc
adc
pop
push
sbb
repz
pop
jmp
mov
sbb
scas
std
cltd
mov
inc
dec
and
pop
in
mov
pop
push
sbb
push
lock
outsb
cmp
fildll
test
dec
push
loope
mov
push
adc
xchg
xchg
xor
adc
cmp
call
adc
mov
scas
shld
aas
repnz
in
dec
roll
dec
inc
mov
clc
mov
adc
cli
add
add
sbb
pop
insl
sub
or
divl
push
xor
jg
add
js
mov
push
jmp
push
negl
lods
dec
sub
jp
int3
das
mov
js
stos
pop
dec
inc
cmpsb
ljmp
xchg
mov
jge
out
inc
dec
cmp
outsb
mov
inc
jg
dec
test
or
repz
or
orl
pushf
loopne
mov
loopne
push
out
fs
gs
xchg
or
inc
push
aas
mov
or
js
int
pop
popa
jle
xorl
xor
addr16
pop
loope,pt
sbb
in
and
push
movsb
pusha
das
lsl
insl
jle
mov
xor
std
pop
dec
mov
imul
or
or
sub
outsb
movsb
clc
pushf
das
aas
out
sub
add
mov
addr16
in
xchg
insl
je
cs
dec
in
repnz
fnstcw
dec
dec
mov
outsl
std
jl
inc
sub
jg
int
pop
scas
dec
mov
add
in
sbb
pop
jmp
lock
sbb
addr16
jl
outsl
loopne
and
xor
mov
data16
push
jbe
pop
sbb
outsl
nop
insb
shlb
outsb
arpl
adc
xchg
cmp
out
jle
outsb
sub
enter
repz
xor
imul
pop
andnps
outsl
lods
popf
std
cltd
hlt
push
xor
rcll
cmp
mov
adc
cld
cmp
lods
std
cmpl
mov
rep
dec
jecxz
push
ret
sub
roll
xchg
mov
mov
shrb
jns
std
das
scas
sub
or
adc
decb
scas
sub
xchg
loope
mov
arpl
test
std
dec
jge
sbb
outsb
mov
inc
or
sbb
and
int
call
subps
ja
jmp
in
adc
dec
sub
hlt
outsb
pop
in
pop
lods
das
jmp
cmpsb
out
xlat
mov
mov
lds
cmp
adc
in
sub
lods
pop
adc
inc
dec
js
cmp
and
push
lods
loop
gs
adc
cmpl
xor
sbb
inc
loope
fs
jbe
or
adc
addr16
adcb
inc
repnz
xor
ss
mov
hlt
repnz
dec
arpl
aaa
rolb
adc
je
das
dec
mov
hlt
dec
aas
jle
out
outsl
xchg
sbb
jecxz
ljmp
lret
dec
clc
adc
lahf
cld
xor
out
dec
scas
sub
mov
pop
push
fstpl
lea
je
push
popf
lds
jo
sbb
lahf
int
mov
idivl
inc
mov
push
negl
adc
gs
sub
mov
jne
outsb
adc
pop
push
idiv
ds
jmp
or
stos
cltd
mov
leave
fstpt
mov
or
fldl
push
pop
repz
jae
sbb
int
or
cld
mov
lods
sub
dec
adc
mov
popa
js
mov
and
dec
inc
lods
sbb
iret
fldl
cmc
sbb
pop
mov
ss
pop
push
cmp
adc
je
popf
aas
jo
repnz
stc
xor
ret
mov
jecxz
inc
hlt
jmp
push
xor
xor
pop
jmp
pop
call
add
pop
sbb
jle
repnz
addr16
cmpsl
push
pop
fnstenv
pop
xor
pop
mov
mov
repnz
in
fisttps
clc
addr16
divps
in
iret
shl
jle
sbb
outsb
scas
lds
push
inc
out
mov
insl
ficompl
sub
in
enter
mov
outsb
mov
insb
push
fstl
sti
test
cli
cs
jg
sub
repnz
push
aas
loope
ds
outsb
or
fnstsw
jge
cld
out
dec
push
jmp
dec
and
xlat
ds
cmp
jns
pop
jg
or
call
push
jo
int
sub
inc
roll
and
sub
adc
or
xor
lea
shll
lods
or
mov
ljmp
adc
jle
lea
mov
jl
mov
mov
cli
movsb
js
xor
or
jns
int
lcall
roll
dec
cmpsl
and
add
sbb
jecxz
leave
nop
push
inc
inc
daa
cmc
int
dec
sahf
lods
jo
cld
inc
pop
sub
adc
push
ljmp
dec
lahf
adc
cld
jnp
cli
fwait
add
daa
jmp
int3
mov
sub
cwtl
cld
imul
popf
rcrb
inc
jg
outsl
sbb
push
out
lods
or
lds
xor
push
je
dec
push
ds
adc
xor
inc
mov
sarl
lea
int
negl
cmp
xchg
jmp
out
imulb
mov
adc
xor
movsl
insb
pop
cmc
stos
inc
in
push
and
add
xor
dec
out
push
push
es
pop
loop
dec
mov
jns
in
sub
lods
jbe
in
pop
in
mov
xchg
repz
in
add
push
jns
adcl
xor
xor
icebp
cmp
sub
adc
pusha
addr16
subl
lahf
inc
sbb
inc
dec
popf
repz
cmp
das
insl
aas
dec
push
lahf
std
outsl
mov
pop
mov
je
insl
push
fdivs
popa
jg
dec
xchg
adc
insb
sub
in
jnp
jmp
pop
addb
cmp
int
insb
decl
enter
jmp
mov
adc
repz
movsl
insl
fstps
jecxz
in
ds
imull
out
push
xlat
mov
jae
out
jne
insl
adc
lahf
inc
dec
fucomip
loopne
or
repnz
iret
pop
out
movsl
scas
sub
sbb
out
popf
pop
dec
int3
and
decl
or
in
adc
int3
int
mov
fcompl
repz
and
mov
int
adc
pop
fstpl
pop
sub
pop
iret
in
push
dec
in
insl
iret
fs
sub
cmp
dec
adc
ljmp
mov
jecxz
test
insb
inc
jmp
insl
fnstsw
push
cli
lea
shr
mov
inc
add
add
std
int3
pusha
andl
test
fst
mov
add
dec
aas
std
decl
push
scas
lods
xor
xlat
sub
in
sbb
jg
xor
adc
fldt
loop
push
ret
jl
iret
jge
xchg
push
dec
and
pop
lock
aas
loope
jg
jle
in
imul
imul
cmc
pop
push
adc
or
mov
cmp
push
sbb
mov
push
rcll
mov
lods
in
cmpsl
iret
psllq
in
pop
test
pop
cmpsl
std
xor
loopne
add
outsl
push
pusha
fists
dec
mov
pop
rcrl
lods
sbb
pushf
mov
pusha
push
dec
shlb
adc
or
push
js
dec
fnsave
outsb
sbb
imul
dec
es
int
cs
jge
jns
pusha
repnz
jg
push
jnp
fnstsw
pop
pop
out
fisubrs
cmp
loope
mulps
jmp
mov
outsb
cld
sub
jg
mov
mov
lods
fbstp
outsb
cmp
aas
lahf
inc
mov
jb
mov
scas
xor
pop
ja
or
or
mov
aas
insl
inc
repnz
stos
cs
pop
dec
sbb
jmp
xchg
push
ret
movsb
push
cmp
add
in
hlt
lahf
popf
dec
outsb
or
aas
lea
sbbl
cmp
insl
enter
and
hlt
adc
push
push
jle
push
movups
sub
mov
call
es
add
out
jl
mov
push
jle
pusha
pop
pop
sbb
sub
outsb
ficompl
push
jle
pop
push
out
rcrl
lods
out
adc
js
add
das
pop
mov
stos
lahf
pop
and
negl
int
xchg
loope
cs
cld
fisttps
jg
push
popf
or
int3
jne
out
jo
fisttpll
jmp
pushf
pop
mov
jbe
push
or
push
add
repz
sub
adc
cmp
dec
add
or
jmp
mov
ja
outsb
in
out
js
jge
adc
add
fistps
dec
jecxz
sbb
dec
ret
jno
jmp
mov
mov
xchg
scas
jl
mov
sarb
jmp
cmpsl
jne
cmp
dec
repz
sub
push
jnp
sbb
arpl
add
imul
dec
push
negb
std
pop
inc
cld
and
sbb
dec
sub
lea
test
and
dec
cli
push
loopne
cmc
adc
rorb
cld
cli
out
adc
and
or
lods
pop
subl
pop
addl
dec
pop
jg
add
jbe
ds
int
pusha
mov
std
inc
pop
sbb
push
mov
es
int
imull
rorl
pop
arpl
js
hlt
mov
es
cmp
dec
cld
js
std
xor
sub
and
leave
jecxz
repz
fbld
scas
sbb
addr16
stos
loopne
hlt
jle
mov
jno
std
pop
enter
dec
int3
add
out
dec
push
pop
loop
roll
mov
push
enter
jl
in
into
bts
int3
das
jbe
enter
or
adc
lret
icebp
pop
je
stos
jg
or
loope
sub
aas
adc
aad
testb
outsb
dec
sbb
outsb
sbb
mov
and
or
cld
push
arpl
add
lahf
out
pop
or
sub
mov
iret
dec
out
repnz
je
pop
repz
cmc
adc
pop
insb
lea
add
out
iret
jle
sbb
test
out
jle
int
addr16
outsb
ja
repz
push
scas
dec
add
or
das
pop
sub
lret
scas
mov
and
lock
pop
push
popa
insb
das
mov
cmp
sbb
divb
jecxz
fildl
jne
push
pop
mov
in
jmp
into
insb
cli
mov
xor
and
outsl
jmp
xchg
and
mov
loop
stos
stos
xor
jae
jae
repz
sub
std
jl
outsl
pop
push
scas
ret
test
shrb
mov
aas
pop
jmp
xchg
stos
std
lea
jecxz
jo
outsb
pop
addr16
pop
fstpl
xlat
and
in
in
mov
jle
jmp
push
push
sbb
scas
addb
lock
sbb
mov
lock
push
mov
mov
loopne
xchg
or
sbbb
daa
cmp
dec
dec
pop
pusha
cld
fwait
std
jg
push
cmpl
mov
cmp
popf
in
jno
jl
in
mov
jmp
or
push
addr16
mull
aas
xor
loopne
dec
pop
jbe
sbb
dec
push
xchg
adc
pushl
out
xor
jl
out
mov
outsl
xlat
mov
pusha
out
add
andl
xchg
dec
mov
mov
scas
loopne
and
push
insb
hlt
cld
jge,pt
rorb
std
jl
jge
cmovp
sub
inc
inc
fldln2
or
lods
pushl
mov
xor
shll
dec
lahf
mov
cmp
cmc
dec
fdiv
cld
nop
addr16
lods
lahf
loope
mov
jmp
jl
xor
push
repnz
adc
es
fimull
sbb
sarb
xlat
repz
mov
loopne
jg
jmp
jmp
insb
or
insl
dec
mov
in
pop
jg
call
cmpl
stc
push
addr16
pushf
loope
sub
insb
push
stos
adc
jecxz
ds
popf
int
mov
aas
pop
cmpsb
push
cmp
jmp
out
or
add
jl
lahf
pop
mov
fdivl
xor
dec
mov
pop
push
or
test
jnp
insl
adc
cmpsb
cld
incb
sub
loop
adc
dec
out
and
or
cltd
sbb
pushf
jge
xor
outsl
pop
out
xor
cmp
das
sbb
mov
aam
fs
iret
out
lret
jle
pop
jl
and
loope
pop
lods
ja
rorb
popf
addr16
lods
cld
push
xchg
push
aas
jne
lahf
cmc
pop
xor
jl
push
jge
cld
add
sarb
cmp
xchg
roll
and
sub
xchg
repz
push
push
pop
cmpl
sarl
js
adc
enter
pusha
jl
mov
sar
cs
aas
pop
ljmp
jmp
cmp
inc
sub
imul
nop
mov
stos
clc
jmp
dec
push
jmp
insb
push
fwait
pusha
mov
gs
add
lret
jbe
adc
xchg
inc
test
dec
hlt
cmp
sub
jae
stos
mov
addr16
dec
cmp
jnp
das
add
repnz
divb
push
mov
lods
inc
js
mov
adc
std
outsl
das
jns
mov
mov
cmc
adc
mov
int
ja
enter
jne
sar
mov
cltd
scas
and
pop
mov
cld
outsl
pop
ret
into
addr16
push
pop
inc
pusha
mov
push
jae
jae
dec
leave
scas
sbb
sbb
xor
push
dec
ss
add
scas
iret
mov
adc
ds
pop
xor
dec
jle
jge
dec
das
lahf
and
add
lret
sub
insl
mov
out
push
dec
inc
in
inc
sbb
sub
xor
bound
mov
stc
pop
lea
xor
xchg
xchg
xor
loopne
dec
call
mov
ljmp
cs
popf
push
or
adc
outsl
pop
lods
mov
pop
push
dec
ds
es
iret
test
sub
pop
cld
jecxz
jmp
jle
stos
sub
sbb
jns
add
xor
dec
out
push
jae
popf
jmp
jecxz
hlt
xor
push
or
mov
sub
shlb
les
pop
repz
mov
inc
pop
call
sub
incb
and
movsb
adc
or
clc
je
inc
in
movsl
lods
jmp
cld
xor
jmp
in
inc
or
inc
mov
fisubrs
outsb
dec
cmpxchg
les
sbb
out
sub
outsb
inc
xor
shlb
jge
into
in
mov
or
ds
addr16
add
lahf
faddl
cmpxchg
insl
jg
sub
cmp
js
insb
fstl
test
inc
mov
sar
dec
ds
inc
sub
ljmp
sub
xor
loope
mov
xor
inc
call
data16
nop
ds
dec
xchg
add
aam
pushf
pop
mov
icebp
inc
ljmp
dec
cmpsl
sub
sub
mov
cmp
mov
fsubr
negb
xor
outsb
sbb
dec
unpckhps
out
addr16
outsl
cli
pop
jge
hlt
cmp
lahf
jmp
clc
cmpsb
push
push
shlb
xor
cmp
push
iret
cli
lahf
jecxz
hlt
pop
aas
jb
fbstp
prefetch
adc
ret
push
add
xor
test
and
push
lahf
fistps
jecxz
push
test
and
push
pop
xor
fdivrs
imul
test
in
jl
xor
adc
mov
iret
add
dec
clc
cmp
jmp
mov
addr16
lods
out
inc
inc
hlt
les
wrmsr
lea
jle
in
pop
sarl
sub
or
dec
adc
insl
adc
push
inc
mov
ds
add
sbb
pop
fdivl
aas
imul
dec
add
ds
decl
test
mov
xor
jecxz
ret
jl
pop
adc
sarl
or
dec
test
shll
pop
jo
mov
out
adc
jl
sbb
dec
add
mov
fcoms
out
ljmp
lock
lahf
addr16
out
ret
push
adcb
loop
dec
mov
or
cld
lock
jmp
cmp
lods
inc
mov
inc
popf
dec
jecxz
jbe
repz
push
mov
xor
in
xchg
jge
xchg
sub
jmp
loopne
mov
insb
mov
mov
in
jns
pop
outsl
call
insl
pop
mov
xor
pop
push
mov
test
sub
xor
push
cs
outsb
inc
je
jmp
push
inc
inc
push
pop
rorl
shll
popf
call
jo
pop
push
mov
xor
sysret
jno
stos
adc
sub
or
cmovo
jecxz
loope
jl
data16
and
pushw
repz
das
cmpl
inc
scas
xchg
jmp
ds
mov
adc
cwtl
push
cmp
xor
push
or
aam
movsl
in
ret
inc
fwait
cmp
add
fildll
cwtl
cvtps2pi
xor
adc
sbb
pop
or
pushf
out
das
nop
std
es
jmp
insl
fisttps
jo
pop
mov
icebp
push
nop
std
xchg
orl
adc
dec
daa
dec
stos
inc
out
mov
fcompl
dec
ficomps
pop
sbb
mov
in
pusha
xor
push
cmp
push
jl
repnz
into
dec
std
stos
lret
cmp
imull
fisttpll
stos
xchg
stc
xor
jno
jmp
sub
out
outsb
mov
jge
ljmp
jno
insb
std
push
into
fcoml
pop
outsl
add
dec
or
push
jno
ljmp
cmp
addr16
inc
ja
outsl
dec
push
int
add
ja
sub
cmp
sub
xor
movsb
clc
cs
mov
loope
jns
pop
pop
sbb
mov
pop
xchg
or
outsl
add
pop
fdivl
les
push
cmp
inc
and
std
pop
inc
shll
jge,pn
xor
loopne
imul
mov
xchg
xchg
adc
pop
scas
call
add
push
cmpsl
sub
outsb
mov
jecxz
repz
cmp
mov
xchg
adc
lcall
shrb
stos
pop
push
xrelease
es
sbb
or
cld
jl
push
gs
pop
repnz
sbb
loope
sub
or
jo
adc
or
je
jmp
in
repz
and
push
cmp
xchg
xor
shlb
add
popf
sub
push
dec
pop
ret
or
xor
jbe
lea
cwtl
pop
jmp
dec
cmp
inc
dec
data16
cmp
mov
mov
cld
aaa
inc
adc
lahf
int
cmc
mov
mov
cmp
inc
fnsave
cmp
jmp
push
insl
mov
add
call
cs
jle
jae
in
pop
in
mov
pusha
int
repz
and
ja,pt
insl
mov
cli
data16
pop
lahf
test
or
outsb
out
mov
or
fstpl
je
mov
mov
lods
loop
addr16
stc
jmp
pop
iret
popf
shll
xor
cld
lahf
scas
inc
jle
sbb
jae
sub
fs
mov
jge
aam
in
fcomip
mov
push
adc
in
cmp
iret
ficomps
pop
jno
pusha
scas
pop
jle
lods
in
movlps
out
scas
orb
repnz
aas
dec
mov
pop
lea
addl
or
and
iret
shlb
mov
fldl
loop
fs
mov
mov
mov
insl
into
dec
push
sbbb
cld
mov
and
pop
mov
jb
out
repz
iret
in
fbstp
pop
pop
adc
aad
movsb
testl
mov
repnz
pop
pop
rep
fst
sbb
pop
push
outsb
jp
mov
lahf
das
aas
outsb
das
pop
outsb
lods
sarb
cld
fnstsw
dec
iret
mov
jge
pop
xchg
hlt
mov
mov
pop
cwtl
ret
pushl
push
mov
lret
xor
pop
mov
fwait
mov
int
or
jl
dec
jg,pt
fidivl
ljmp
lods
js
out
lahf
fs
add
push
add
je
sbb
mov
adc
sti
sub
je
lea
iret
fs
ds
and
mov
xor
add
dec
sbb
xchg
jmp
or
push
out
pusha
fsubrl
xor
add
insb
pushl
icebp
imul
xlat
aas
insl
add
mov
cmp
sub
push
hlt
addr16
fbld
push
cmp
mov
cmp
mov
jae
mov
mov
out
push
jecxz
add
xor
in
stos
sahf
enter
testl
mov
iret
sbb
cmpsl
dec
lret
push
loopne
fisttps
dec
mov
mov
outsb
jge
in
pop
mov
ss
xchg
pop
mov
daa
sbb
pop
sbb
fs
lea
push
pop
enter
ret
mov
jne
or
push
roll
push
shl
push
or
xchg
ss
aaa
or
lea
cs
jns
inc
xchg
sahf
mov
loop
stos
jg
dec
sub
sahf
pop
xchg
adc
hlt
ss
ds
ror
imul
push
stos
dec
imull
in
mov
nop
push
insl
lods
sub
sub
xor
repnz
sbb
inc
js
push
lret
ljmp
repz
xor
sbb
xor
daa
insl
stos
adc
cs
sub
test
dec
dec
lcall
pop
subl
push
repz
dec
iret
xchg
and
jp
mov
aas
stc
dec
jo
xor
and
cwtl
pop
insl
add
add
mov
sbb
xchg
cmc
addr16
outsb
mov
xchg
movsl
add
xchg
jnp
loope
scas
js
cli
sub
subl
sbb
add
fnstenv
test
inc
cwtl
mov
mov
pop
inc
ljmp
cmpsb
stos
aaa
aaa
xchg
stos
lods
inc
cwtl
ljmp
aaa
mov
mov
lea
rolb
push
pop
xchg
push
or
push
sbb
pop
setl
mov
fnsave
jl
jmp
outsl
mov
add
pop
test
outsl
dec
mov
pop
mov
push
adc
mov
mov
verw
push
pop
pop
xor
repz
pushf
add
popf
jo
std
jge
pop
jecxz
push
iret
sbb
mov
dec
std
push
mov
jle
mov
decb
into
outsb
testl
push
or
cmpsl
jbe
fnsave
xor
in
out
xor
mov
dec
mov
lahf
dec
push
shl
pusha
or
decl
pop
jg
add
pop
stos
mov
dec
push
cmp
popf
sub
or
jno
and
outsb
jle
push
mov
out
inc
push
ds
mov
subl
push
leave
lea
xor
call
in
addr16
mov
cs
sub
sahf
mov
js
insb
dec
push
lods
lea
pop
sbb
ds
jmp
lret
mov
push
pop
jle
lods
iret
push
bound
lea
repz
out
sub
jl
adc
in
xor
sbb
ds
scas
push
call
insb
push
sub
pusha
dec
cld
jle
iret
fdiv
cmp
push
push
int
int3
das
mov
xlat
outsb
insl
mov
cmovl
mov
cmc
aas
lcall
or
outsb
int
jmp
sar
out
mov
bound
sub
jbe
outsb
push
jge
pop
pop
rorb
fucom
fprem
insb
js
dec
lahf
push
mov
bound
jle
adc
outsl
pusha
and
pop
xor
cmp
jbe
loop
jge
xor
xchg
hlt
jp
mov
cmp
out
fisttps
stos
xchg
sub
push
ss
mov
das
jo
jmp
orl
pop
mov
add
cmpsb
mov
cs
sbb
adc
and
push
rclb
xchg
outsl
fisttps
out
jne
scas
stos
in
or
aas
pop
fdivp
aaa
std
das
mov
pop
and
mov
insb
push
icebp
inc
xor
test
out
test
push
jns
clc
sbb
aas
dec
fistps
leave
fs
scas
lret
es
js
test
pop
push
mov
fistpll
in
sbb
outsl
das
std
out
push
push
add
push
mov
loope
mov
out
lods
dec
js
jns
or
sbb
in
icebp
dec
das
lods
push
inc
jecxz
test
pusha
jl
ds
cld
loop
xor
das
push
jle
ret
adc
xor
movsb
xor
test
in
scas
mov
or
pop
out
dec
dec
call
adc
das
push
subl
fisttpll
mov
adc
les
mov
inc
dec
dec
in
cmp
xchg
add
jl
enter
loopne
enter
iret
lods
out
adc
cmc
and
push
fs
pop
sbb
ds
xor
dec
push
mov
repz
repnz
in
jge
js
pop
jmp
push
dec
dec
out
fsubrl
xchg
dec
pop
in
or
fdivrs
pusha
bswap
xor
add
das
incb
xor
sub
enter
movsb
cmc
insb
jle
int
xor
and
sub
inc
insb
ds
or
repz
sub
jne
lods
stos
out
aas
popf
das
aaa
sarl
jg
sub
xchg
clc
dec
mov
jl
lahf
pop
jmp
inc
int3
insl
sbb
mulb
outsb
mov
leave
fdivrl
das
inc
popf
mov
outsl
push
int
pusha
adc
mulb
fcmovb
movsl
fisttps
sbb
hlt
dec
iret
sbb
repz
xor
outsb
jg
loop
call
sbb
push
test
jmp
int3
lea
lock
push
push
outsl
loopne
ljmp
or
js
pmuludq
push
xor
or
scas
pop
ljmp
xor
push
inc
pop
sbb
ja
mov
jb
add
ja
lods
pop
loope
dec
or
jecxz
sbb
inc
testl
cmp
in
mov
pop
lods
aas
aas
xor
sbb
in
js
mov
pop
cmp
jecxz
pmaxsw
dec
fdivrl
sub
pop
mov
outsb
adc
je
mov
xchg
xor
sbb
das
pushf
mov
mov
and
pop
pop
cmp
in
mov
aad
lea
pop
repz
cwtl
jmp
dec
xchg
dec
je
mov
jo
xor
xor
cld
mov
hlt
leave
out
dec
sbb
lea
sahf
mov
imul
stos
mov
ret
jo
xor
mov
jns
sub
dec
cmp
xchg
mov
loop
lcall
pop
or
mov
xchg
jae
aam
fistps
addr16
adc
pusha
fs
popf
xor
mov
jnp
nop
pop
lds
add
repnz
aam
inc
cmp
sub
cs
jge
mov
dec
cmp
js
push
pop
push
mov
add
xor
push
push
js
sub
dec
mov
inc
pop
fildll
lea
lods
xchg
cwtl
and
xorl
mov
insb
js
pop
sbb
or
xor
or
push
rorb
lods
addr16
js
sbb
or
loop
xlat
and
sbb
inc
js
mov
cvtps2pi
jl
inc
out
inc
pop
repz
mov
fstpl
fimull
movsl
mov
dec
jmp
iret
fisttps
inc
repz
or
push
mov
or
fmull
sub
das
cmp
jo
aas
daa
shl
mov
push
je
loopne
std
add
aas
inc
sub
movsb
and
jge
or
movsl
cld
or
xor
dec
mov
aas
jmp
insl
mov
or
mov
jg
xlat
dec
dec
dec
jg
jb
out
repz
jae
outsb
jle
jg
xorl
mov
jecxz
xchg
pop
decb
imul
mov
popa
std
xor
and
shrl
cltd
pop
cwtl
jbe
insb
repz
sbb
inc
lods
mov
or
mov
sub
sub
popa
cmp
test
and
jl
das
int
into
jge
fldln2
scas
outsb
push
sub
jae
in
lahf
dec
addr16
iret
mov
pop
jle
add
sbb
in
bound
pushf
insl
jge
icebp
push
repz
adc
scas
popf
mov
movsl
data16
stos
push
push
lahf
sbb
lods
adc
dec
leave
ja
mov
inc
push
ret
mov
je
outsb
and
decb
jg
lahf
idivb
cmp
aas
mov
jge
mov
out
push
divb
push
in
pop
std
loopne
add
cmp
roll
stc
lock
add
loope
adc
iret
jg
or
loopne
fs
sbb
jns
gs
or
add
push
push
push
adc
pop
ja
movq
movsl
xor
js
cmp
pop
nop
aaa
mov
mov
mov
jo
mov
adc
push
cmp
movsb
sub
movsl
outsb
push
popf
cwtl
xchg
jbe
out
cs
or
clc
sub
repz
push
mov
insl
jecxz
push
and
cmp
out
jle
int
jae
mov
add
in
or
xor
and
or
add
jg
adc
add
das
rcll
adc
fisttpll
loop
enter
cmp
jg
int
iret
or
insl
or
lods
ljmp
es
addr16
daa
mov
ja
insb
popf
fstp
loope
dec
ljmp
hlt
or
mov
call
or
pop
jg
jo
rorb
lods
stos
in
ja
js
mov
push
mov
test
xchg
sbb
repz
mov
adc
push
arpl
xchg
test
mov
insl
mov
lret
push
jmp
cmpsl
repz
sub
stc
jo
mov
mov
adc
insl
arpl
sarl
add
jg
in
dec
outsb
push
adc
fnstenv
adc
push
arpl
loope
add
pop
out
sub
arpl
cltd
push
jecxz
adc
repnz
cmp
addr16
mov
mov
rdmsr
lods
in
pop
xor
outsb
fnstsw
pop
push
ds
push
fs
or
mov
sub
fs
data16
sarl
mov
and
inc
inc
xchg
sarb
aam
jns
insb
or
xor
fwait
mov
cld
in
lret
pop
push
nopl
push
ficompl
stos
push
outsb
cld
cmp
out
jge
fists
repz
or
in
jmp
testb
in
jge
aas
decb
stos
lea
gs
mov
dec
pop
dec
push
sbb
pop
fcompl
clc
shrl
jmp
fldl
pop
decb
mov
not
enter
out
fidivs
andl
cmp
js
jge
paddw
orb
dec
or
je
mov
pop
insl
inc
pushf
and
imul
aad
imul
push
xchg
rcrb
pop
sub
out
push
jle
push
fisubl
shll
std
rolb
insl
imul
jmp
inc
pop
addr16
bound
sub
jo
decb
lahf
pop
bnd
test
dec
aam
das
jmp
les
loope
mov
std
xor
cmp
negl
es
loope
pop
push
jl
lahf
xor
rep
and
cld
in
cmpsl
xchg
idiv
cmp
je
cli
ds
outsb
sub
dec
xchg
push
cmpb
fwait
popa
iret
pop
ret
jle
in
leave
jl
insl
xor
inc
lea
and
das
dec
or
mov
push
and
mov
lods
stos
pop
jge
push
jne
or
cld
lahf
aas
fistpll
mov
sub
insl
in
sub
loop
xor
insl
dec
cltd
in
cmp
fs
roll
and
jecxz
repnz
popf
je
lcall
ds
push
gs
add
adc
pop
push
out
loopne
cld
mov
mov
sub
in
icebp
jge
int
repz
cld
mov
loopne
xor
add
cmc
cmp
outsl
push
push
fisttpll
std
outsb
popf
push
mov
out
cmc
insb
or
jecxz
dec
in
imul
jl
jle
and
or
je
rorb
push
dec
std
outsl
js
mov
and
call
or
push
lods
inc
jo
outsl
add
insl
pop
cs
or
cld
jb
lret
arpl
mov
js
scas
ljmp
mov
jecxz
adc
test
outsb
fbstp
jmp
sbb
xchg
dec
jle
jecxz
enter
out
and
sub
andnps
call
shrl
std
insb
cmpsl
dec
inc
sti
sbb
in
je
cmpsb
imul
adc
sbb
mov
lods
pop
cmp
sub
cmp
add
dec
inc
dec
sub
add
pushf
iret
or
or
pop
clc
inc
jle
filds
jge
pop
add
sub
call
scas
std
mov
in
ljmp
sub
and
jo
dec
fldcw
mov
hlt
movsb
lea
and
and
ds
jae
addr16
scas
cltd
mov
mov
lods
aad
mov
fisttpll
outsb
jl
fdivrl
repz
dec
jl
push
cltd
mov
leave
iret
mov
push
dec
filds
js
and
insb
dec
xor
aam
cmp
int
dec
dec
cmp
pop
repz
aaa
add
lds
pushf
xor
push
or
fsubs
mulb
sbb
adc
mov
into
jo
dec
jmp
lea
out
sbb
or
xor
dec
leave
insl
test
adc
jl
stos
dec
imulb
clc
xor
jg
and
insb
pop
inc
out
lods
outsb
adc
cmp
cmp
jg
sub
mov
outsl
aas
push
leave
cli
adc
mov
out
adc
cld
outsl
popf
or
filds
push
cvtps2pi
adc
insl
lret
sahf
mov
sub
repz
jp
cmp
jbe
mov
cwtl
inc
push
mov
mov
adc
dec
jo
arpl
mov
or
push
clc
rolb
rep
pop
xchg
push
cltd
or
dec
inc
xor
sbb
or
mov
lds
hlt
mov
out
mov
std
imul
clc
mov
out
pop
imul
mov
lahf
int
popa
call
push
push
and
loop
pop
adc
inc
cltd
cmp
sbb
clc
push
insl
jecxz
jo
lods
rcll
movsl
push
dec
mov
push
hlt
fbstp
scas
subb
xor
in
test
addr16
addr16
or
mov
std
nop
das
lret
mov
xor
adc
mov
data16
push
pop
jg
inc
mov
push
jge
repnz
pop
dec
jg
pop
sbb
das
dec
les
sub
loope
stos
push
test
push
sbb
aas
fildll
or
sub
pop
or
jle
int
aas
push
mov
pop
mov
mov
ss
ja
mov
aas
mov
push
dec
js
outsb
fdivs
adc
mov
and
loope
dec
enter
pop
or
das
sub
popa
jmp
jecxz
in
xor
js
inc
cs
in
sub
outsb
dec
push
xlat
inc
jbe
jmp
iret
jg
or
inc
stos
pop
fisttpll
cmp
mov
popa
hlt
mov
xchg
lods
sbb
pop
out
pop
in
je
mov
add
or
pop
push
lods
add
js
mov
sbb
das
pop
mov
or
lahf
hlt
ror
dec
insl
out
icebp
sbbl
adc
cld
scas
in
cmp
xchg
rcrl
lahf
jmp
popf
icebp
push
insl
das
inc
jmp
scas
loope
cs
sub
ret
push
jae
scas
jo,pn
scas
adc
in
outsl
cmp
or
sub
repnz
in
popf
mov
xor
scas
jl
push
bt
push
xor
aam
and
insl
mov
inc
lea
and
push
dec
outsb
xor
dec
mov
xor
sbb
popf
data16
adc
jle
inc
stos
and
add
sbb
jns
sbb
lock
dec
sbb
stos
mov
and
push
pusha
movsb
push
aas
or
or
push
cli
test
sbb
pop
inc
dec
fnstsw
lea
pop
lods
mov
lcall
insb
pop
mov
pushf
das
outsb
cmp
popf
ds
insb
repz
adc
sbb
pop
rorl
xor
roll
dec
sbb
adc
sub
sub
and
lock
iret
jge,pn
jle
xor
gs
cwtl
inc
int
pop
xor
lret
and
adc
mov
pop
cs
mov
push
bound
aad
dec
out
xor
ds
xor
out
and
lea
dec
cwtl
lcall
mov
cpuid
dec
mov
mov
js
in
cmp
pop
scas
insl
addr16
mov
push
mov
pop
and
jns
sub
in
cmp
pop
and
lods
mov
pop
sbb
addr16
in
cmp
mov
mov
test
mov
push
sbb
jl
push
pop
stos
mov
push
dec
jnp
mov
popa
das
repz
jl
xor
rcll
xor
jl
addr16
pop
into
das
pop
out
sub
ds
cld
popf
hlt
push
xor
push
in
stc
out
aad
sub
scas
cmp
push
repz
sub
mov
pop
outsb
outsb
scas
pusha
addr16
mov
add
dec
outsl
push
mov
adc
or
jle
or
ds
fs
popa
aas
ljmp
push
in
jo
sub
fldl
cmp
orl
or
daa
xchg
pop
inc
and
jns
lret
xor
or
shr
push
xchg
sub
push
cmp
push
adc
loop
ljmp
repnz
addb
pop
xlat
addr16
idivl
outsb
ds
pop
xchg
lea
xor
xchg
out
mov
mov
adc
mov
lahf
adcl
stos
jo
push
enter
repnz
sbb
push
sub
icebp
aas
pop
jno
int
popa
popf
mov
xor
sbb
push
dec
cs
clc
or
aas
push
dec
mov
mov
jmp
dec
adc
lods
and
hlt
jl
scas
jmp
arpl
adc
shlb
sub
cs
aad
inc
mov
cmp
xor
sub
push
jae
in
ret
or
add
inc
cmpsl
sub
push
or
js
fisubs
imul
xor
mov
jle
or
fs
mov
jg
pop
mov
sub
xor
jo
std
into
xchg
cmp
cmpsl
push
std
sub
cmp
jae
jae
sbb
aad
insb
sub
pop
mov
xabort
push
push
test
pusha
mov
or
aam
or
pop
or
sub
cmp
pmaddwd
mov
std
pushf
repz
mov
mov
sbb
repnz
push
mov
mov
dec
arpl
jns
pop
in
mov
std
cld
sub
popf
xor
mov
cltd
mov
or
sub
repz
xor
aad
dec
jmp
outsb
xor
jl
jno
mov
dec
ljmp
lods
sbb
in
stos
sub
aaa
jge
pop
insl
cmc
dec
xor
ds
push
mov
stos
iret
clc
mov
sbb
push
outsl
jmp
jl
pop
xchg
vunpcklps
sbb
repz
cmp
js
jge
mov
sti
mov
xchg
lret
notrack
out
mov
mov
into
mov
cmp
xchg
adcl
jmp
jl
xchg
cmp
mov
cmp
stos
movb
mov
sub
es
mov
cmc
pushf
add
stos
jp
or
or
xchg
or
sbb
mov
or
je
bound
sub
lods
xchg
adc
ljmp
sahf
jne
sbb
stos
jl
mov
cs
pop
fldcw
jg
idivb
mov
dec
jns
jge
or
outsl
sarb
outsl
mov
pop
sub
inc
mov
mov
add
pop
mov
adc
push
aad
loop
pop
mov
cmp
jne
aaa
mov
repnz
mov
aas
outsl
jne
imul
cld
lea
test
lods
aas
out
fwait
stos
mov
or
je
in
inc
lods
addr16
iret
sbb
sbb
fstp
cmp
inc
jns
dec
movsl
call
lods
push
push
cmp
out
xor
or
insb
jg
les
or
sarb
in
lcall
std
mov
cs
adc
ds
mov
mov
jge
sub
and
push
push
outsb
idivw
rcrl
aas
addr16
xor
xor
hlt
inc
addr16
ja
pop
add
test
movsb
xchg
lods
popf
inc
mov
ret
aas
dec
push
loope
cmpsl
cmp
xor
repnz
adc
sbb
add
add
pop
lods
cs
das
inc
ds
sub
push
pop
std
lods
adc
push
lock
mov
insb
int
frstor
mov
and
push
je
mov
cmp
mulb
das
repz
loop
das
insl
in
dec
push
mov
mov
scas
js
mov
xlat
mov
and
insl
pushf
sub
push
clc
mov
pop
repz
lret
sub
or
push
xadd
jo
sbb
sub
cs
rcr
jge
mov
negl
lods
aas
lahf
dec
pop
pop
sbb
ja
int3
xor
pop
insl
fucomp
ret
and
sub
cmc
push
test
dec
subl
insl
jae
or
std
push
data16
push
mov
idivl
push
mov
push
inc
or
dec
push
adc
outsb
sub
cmc
sub
cmp
cmp
lods
pop
lahf
pop
push
or
mul
aas
sbb
loope
dec
adc
int3
inc
cmp
pop
aam
jp
xor
aaa
pop
pop
xchg
and
lea
int3
lods
sbb
cld
push
push
adc
adc
fcomps
push
sahf
sub
pop
xor
mov
adc
pusha
fstl
sub
in
dec
das
insb
add
int
incl
test
cmpsl
ds
std
testb
mov
jle
and
imul
jle
pop
fisttpl
leave
cmp
or
inc
sbb
es
and
lea
cld
jl
pop
pop
jl
add
ja
enter
adc
pop
iret
js
sbb
loop
pop
scas
ret
push
out
jle
pop
lods
push
add
push
cmpsb
inc
or
sub
pop
pop
add
repnz
scas
xchg
add
in
js
or
adc
pop
cs
icebp
mov
cld
sbb
out
push
inc
mov
add
adc
in
stos
scas
aas
int
lods
push
pushf
push
or
xor
jg
pop
in
das
or
add
push
inc
cs
psllq
es
sub
inc
add
test
push
sbb
sbb
pop
cmp
jecxz
ds
iret
movaps
out
mov
dec
outsb
stos
int
aas
lock
das
lea
jmp
data16
es
pop
dec
cmp
fstpt
sbb
push
xchg
pop
push
lods
jmp
dec
add
jmp
inc
jl
pushf
ds
adc
mov
pop
iret
lods
pop
jbe
lods
add
mov
pop
orl
or
push
incb
pop
inc
jg
jl
jae
in
popf
push
xchg
aad
xchg
scas
lds
nop
and
sbb
adc
mov
mov
cmp
and
stos
repz
jge
lock
mov
mov
dec
fstps
push
andl
add
cmp
insb
or
into
pop
pop
test
psubsw
push
jae
cmp
andl
mov
aas
fimuls
adcb
xor
les
fnstsw
pop
mov
mov
fsub
fcom
pop
dec
mov
fdivs
sbb
inc
loop
sub
pop
xchg
sbb
jbe
insb
jge
mov
sarb
xchg
mov
dec
xor
sbb
iret
popa
xor
mov
insl
xor
sarl
addr16
mov
xchg
inc
es
fidivrs
xchg
jl
sub
jmp
sub
jg
cmpl
fldenv
inc
fimull
dec
out
push
xor
pop
or
outsb
adc
rorb
pop
cld
mov
xchg
sub
aas
pop
movsb
xchg
mov
popf
stos
adc
or
push
lods
xor
cld
test
repnz
iret
fiaddl
cld
or
fs
pop
mov
cmpsb
add
pop
int3
cli
jno
cmpsl
int
stos
xchg
push
insb
popf
lock
pop
mov
test
sub
add
repz
mov
loope
push
push
jecxz
call
jmp
and
repz
insl
sub
push
pusha
cs
insl
dec
dec
xchg
jmp
xchg
dec
jg
mov
push
std
out
lods
and
rcrl
jb
dec
jb
jle
jno
int
das
shl
in
jmp
std
adc
xor
rorl
dec
pop
nop
or
xchg
mov
cmc
xor
jl
push
push
pop
mov
mov
dec
imul
scas
outsb
or
clc
mov
pop
lahf
add
repnz
push
jmp
mov
inc
mov
cmpl
or
insb
dec
es
mov
dec
das
push
push
outsb
repnz
scas
in
sarb
mov
sbb
inc
mov
push
rorb
sbbl
xchg
push
adc
jmp
jl
adc
push
fstpl
adc
das
popf
cmp
cmp
psrlq
insb
mov
inc
scas
sarl
popa
sub
enter
outsb
jno
xor
jmp
push
jmp
rorb
jmp
outsb
pop
xor
movsb
fsubs
or
outsl
or
dec
ja
xor
dec
push
insl
jo
fildll
push
stos
fnstsw
daa
cmp
outsl
sbb
cwtl
push
js
sub
cs
int
or
or
mov
jecxz
lahf
in
pop
aam
push
fcomi
insb
push
mov
inc
adc
lods
aam
push
push
test
sahf
pop
pop
xlat
xor
nop
cmc
sbbl
lret
pop
fistl
xor
sbb
add
xchg
stc
push
pop
push
add
aaa
jbe
shlb
xor
inc
pop
pop
out
xchg
sub
nop
jl
cmp
ljmp
stos
cmpsl
fsubr
push
cmp
rclb
mov
out
dec
mov
jg
mov
andb
test
adc
xor
xorb
das
push
xor
push
subl
out
divb
jb
inc
aaa
inc
sbb
push
jge
push
popf
mov
push
cld
arpl
out
call
jmp
mov
jmp
add
iret
dec
ss
add
leave
jb
cs
or
std
insb
jl
sti
sets
das
ret
dec
or
mov
rol
in
mov
dec
test
cltd
in
jmp
jo
das
sbb
push
push
and
jmp
or
push
push
add
cs
dec
in
or
outsl
mov
add
add
test
add
cs
outsl
aaa
insl
int3
decb
nopl
orl
outsb
sti
adcl
pushf
dec
ret
ret
push
cmp
push
sub
or
je
inc
ds
fldlg2
add
dec
aas
cmpsb
fcmovu
push
inc
jge
pop
ljmp
and
enter
insl
outsl
pop
outsb
nop
in
mov
insb
dec
jp
stos
pop
push
ffree
mov
cmc
pop
add
into
dec
xor
sbb
lock
outsb
mov
daa
add
pop
xor
or
lahf
pop
jle
in
inc
js
and
push
ror
add
xor
mov
jl
adc
jne
adc
sbb
inc
mov
jecxz
push
out
inc
pop
jl
cmp
pop
sbb
popf
pusha
lea
push
lods
xor
sub
not
cld
jl
insl
repz
xchg
and
cmpsl
adc
xor
shl
or
cmp
repz
mov
mov
aaa
js
push
das
push
push
dec
or
insb
jns
repz
jno
inc
sbbl
cmpsl
das
repz
ja
out
push
push
push
outsb
popf
jbe
lods
mov
jge
add
sub
jmp
or
inc
sbb
adc
int3
fbld
popf
xor
adc
sub
or
jae
ja
jecxz
adc
push
addr16
je
bound
dec
dec
jno
sub
jae
and
cmp
sub
fs
jle
and
popf
movl
das
fs
inc
out
mov
lods
pop
push
inc
pop
cwtl
jns
pop
test
push
pop
sbb
cmp
cmp
mov
cmp
mov
fstl
sbb
and
pop
adc
movb
lods
mov
fnstsw
add
pop
and
mov
adc
cmp
lods
ljmp
jecxz
mov
xor
pop
dec
aad
pop
mov
stos
or
dec
mov
std
fs
ret
push
fimull
divl
out
sbb
jmp
mov
adc
in
addr16
jo
dec
and
sbb
mov
and
es
xchg
cld
pop
das
or
jle
jmp
lcall
sub
call
cli
lods
mov
repnz
jmp
stos
sbb
idiv
jecxz
je
ja
or
jb
push
pop
push
push
jle
adc
fstl
outsl
aas
push
push
outsb
fnstenv
push
pandn
push
push
pop
ljmp
dec
pop
out
sarl
scas
add
lods
das
mov
int
sub
pop
loop
dec
inc
pusha
das
mov
in
addl
dec
inc
js
popa
or
int
mov
pop
mov
das
push
jmp
cmp
jae
cmp
push
xor
or
out
sbb
iret
ds
sub
mov
out
out
xor
cs
ret
push
xchg
mov
jecxz
mov
paddb
lea
js
cs
pop
sub
sub
pop
call
in
imul
sub
fidivs
dec
xor
js
sub
mov
jge
push
out
jne
bsr
xor
sub
insl
xor
cmp
cmp
or
fst
jle
mov
pop
cld
bnd
arpl
sub
jl
push
mov
int3
jne
ret
ss
pusha
mov
cld
xchg
sbb
mov
into
call
js
scas
adc
scas
push
mov
in
cmp
push
decl
sbb
lahf
call
popa
jle
xor
cmp
pop
icebp
push
sbb
pop
cs
loope
push
dec
mov
sub
mov
rorl
test
push
decl
repz
arpl
dec
xor
mov
cli
and
std
lods
jae
outsb
dec
int
ljmp
loop
cli
xchg
push
sbb
push
sub
mov
xchg
xchg
push
mov
call
dec
outsb
out
fwait
pusha
jge
ds
iret
out
mov
fs
xorb
mov
cs
in
sbb
adc
scas
xor
iret
cmp
sbb
inc
cmp
mulb
outsl
inc
adc
int
sbb
fildll
and
xor
lds
mov
mov
lea
jge
lock
in
cs
dec
jmp
push
in
sbb
jmp
xor
pop
std
sbb
xlat
add
push
jg
mov
mov
inc
sub
shll
insl
inc
mov
insl
test
rorl
faddp
mov
mov
push
cltd
fisttps
cmp
jl
push
aam
xchg
insb
mov
sub
inc
ret
adc
cmp
lods
jns
cs
clc
or
ds
repnz
push
jl
dec
adc
mov
jle
jmp
outsb
insb
jecxz
jbe
cmp
shr
mov
rep
iret
mov
jno
pop
xor
sbb
or
cmp
repz
iret
push
mov
adc
pop
mov
es
fldl
addr16
lods
movsb
loop
movsb
jg
inc
out
clc
in
mov
dec
notb
aas
ss
adc
rcl
test
out
jns
sbbl
xchg
repnz
in
insl
lea
scas
dec
sti
mov
jge
decb
mov
std
pop
add
mov
inc
insb
jmp
in
inc
inc
push
std
outsl
xchg
test
outsl
sbb
or
pop
dec
int
mov
loop
sub
clc
push
lea
push
loope
pop
int3
movsb
dec
lods
mov
mov
movd
cli
test
out
je
inc
and
out
stos
jecxz
jl
jmp
rcll
outsl
pop
pop
jbe
lods
add
test
in
mov
sahf
out
inc
aas
fistpll
add
adc
sbbl
jne
sub
lahf
push
test
sar
jmp
mov
icebp
fbld
insb
mov
jae
repz
fucomp
inc
mov
lea
lahf
adc
in
cs
or
call
dec
xor
ss
inc
js
out
jmp
das
hlt
roll
scas
jmp
fwait
std
jl
xor
enter
popf
aas
lea
cs
push
insb
xchg
mov
mov
dec
cs
int
outsb
inc
outsb
ds
mov
test
and
dec
fstps
stos
mov
into
sub
push
xor
jmp
inc
pop
imul
push
dec
outsb
inc
add
popf
lea
insb
outsl
add
pop
ljmp
gs
pop
cmp
call
mov
lods
fucomip
lahf
xor
rcll
sbb
out
lret
inc
clc
cmc
aas
ds
mov
mov
dec
jge
repz
add
outsl
cs
dec
out
push
cmp
loope
push
jae
jecxz
int
add
push
andl
in
scas
ret
xor
mov
sub
jmp
out
addr16
dec
js
jl
int
cld
rcrl
scas
add
lods
and
jnp
xor
adc
sbb
cmp
sub
xor
mov
mov
jle
sbb
mov
or
jmp
add
or
adc
jmp
std
outsb
mov
or
cmpl
pcmpeqb
mov
or
and
xor
adc
dec
insl
sbbl
iret
push
jge
jae
ficomps
cmp
inc
inc
repz
mov
sub
and
dec
stos
bound
push
push
inc
ljmp
jns
jl
sbb
insb
jg
js
cmpsl
shrb
aaa
dec
xlat
push
das
loopne
xchg
dec
or
fistpll
sub
popf
mov
inc
cld
es
and
pop
add
lods
mov
adc
call
pop
outsb
jg
cwtl
mov
jl
jl
into
pop
mov
outsl
fwait
les
cmp
rcrb
adc
fisubrs
insl
pop
xor
and
adc
repz
push
decb
movsl
push
cmp
ret
iret
lahf
into
in
mov
scas
mov
dec
cmp
push
jmp
add
mov
gs
sub
cmp
ljmp
mov
in
imul
inc
push
sbb
sub
or
sub
out
stos
cmp
scas
lahf
fnstsw
pop
repz
subl
jmp
and
mov
int3
lock
lods
or
incb
scas
jmp
mov
add
lahf
repz
sbb
out
dec
jo
scas
fcomip
insb
inc
xor
add
imul
fimuls
cmp
stc
mov
outsl
shlb
dec
frstor
and
fimull
and
adc
lcall
in
mov
jl
dec
lock
scas
jle,pt
out
das
je
jmp
outsb
cld
pusha
loope
mov
ljmp
stos
in
adc
pushf
push
jge
or
mov
shll
frstor
sbb
ss
push
mov
jae
xor
icebp
pop
in
scas
lea
push
scas
fsubr
sbb
mov
push
outsl
outsb
jge
mov
outsb
or
jae
movsl
lahf
push
jecxz
mov
sbb
mov
gs
xor
inc
add
fldt
adc
in
cld
sub
sub
mov
add
add
js
push
mov
adc
paddusw
cmp
xor
inc
pop
pop
mov
mov
dec
xor
outsb
das
ret
js
push
call
fisubrl
mov
outsb
popf
cs
fildll
imull
lods
outsb
cmp
insl
dec
jl
std
cmp
out
adc
in
outsb
pop
rcl
mov
mov
add
aas
cmp
repz
mov
pop
loope
adc
cs
pop
inc
push
repnz
pop
cmp
icebp
cmp
mov
test
imul
mov
jle
imul
aas
sub
out
jge
or
xor
sub
sub
mov
aas
cld
cltd
std
decb
cld
push
iret
mov
fbstp
and
popf
or
or
mov
es
movb
js
idivb
aas
pop
mov
mov
aas
push
jmp
adc
or
stos
add
pop
push
pusha
cmpsb
mov
fstps
xorl
mov
das
and
leave
arpl
adc
aas
push
ss
idivl
stos
mov
fistl
add
iret
pop
in
rorb
out
cwtl
repz
jb
insb
cmp
cmp
pop
pusha
movsb
mov
dec
int
sub
mov
pushf
cmp
cmp
ljmp
jo
adc
jecxz
js
aad
mov
inc
cld
lods
lea
or
js
mov
jo
popf
xchg
pusha
lret
xlat
sub
jge
jbe
repnz
pandn
repz
adc
in
adc
jg
out
jo
dec
push
popa
pop
lahf
push
adc
and
add
adc
xor
cmp
orl
inc
jne
mov
mov
dec
loope
cs
iret
mov
jge
gs
add
pop
adc
outsl
jle
cmp
adc
int3
xchg
nop
xor
outsb
roll
daa
jmp
out
push
mov
mov
sbb
ficompl
inc
cmp
dec
jle
lea
mov
pop
or
xchg
mov
out
xlat
sub
xor
sub
jge
repz
jmp
aaa
pop
xor
mov
insl
das
scas
in
pop
std
inc
out
int3
aas
push
outsb
and
xor
mov
jl
adc
decl
mov
ljmp
stos
clc
or
xor
iret
jle
add
cmp
push
iret
cmp
das
dec
jmp
pop
push
mov
sub
es
in
dec
popf
pop
in
leave
out
mov
xchg
mov
cmp
dec
jo
jmp
nop
add
pop
idivb
cli
insb
orb
jl
push
outsb
xor
scas
not
lea
das
clc
out
ds
adc
jg
xor
sar
sbb
pusha
icebp
pop
mov
je
or
inc
les
push
addr16
cld
mov
scas
jle
push
push
outsl
inc
std
lahf
push
mov
loope
popl
push
xor
out
sub
pop
jg
testb
sbb
and
dec
jge
das
push
dec
or
jb
push
aas
in
adcl
cmp
roll
cwtl
scas
or
xchg
stos
adc
push
jmp
loopne
icebp
fwait
push
sub
scas
das
shll
cmp
or
shlb
jle
mov
push
jg
sti
xor
inc
cld
js
dec
lods
ljmp
xlat
sbb
out
jbe
xorl
lea
repz
lods
lahf
movsl
ret
fs
idivb
push
mov
bound
sub
fstl
mov
jle
sti
jo
mov
mov
sbb
cmp
pop
insl
repnz
in
push
inc
pop
movlps
in
xchg
sbb
gs
scas
or
hlt
dec
pop
or
cs
push
xchg
xor
jl
call
das
lahf
das
push
adc
divb
je
sarb
jle,pt
add
dec
mov
fbstp
das
repz
cmp
lahf
mov
add
cmpsl
mov
rorb
jp
jne
mov
mov
pop
mov
ficoml
fwait
stos
mov
ss
push
ss
adcl
dec
mov
mov
pop
push
je
pop
ret
outsb
cmp
addb
int
xchg
jecxz
xlat
push
outsl
xchg
repnz
lret
sub
adc
jecxz
unpckhps
in
sti
jl
fnsave
xchg
lahf
mov
fistps
xor
dec
cmp
jge
jl
scas
or
out
aam
mov
adc
dec
inc
iret
fstps
inc
cmp
aaa
rcrb
fldln2
push
jle
shrb
sbb
outsl
mov
into
cs
mov
push
scas
jle
loopne
mov
mov
repz
add
jle
jmp
sbb
dec
int
mov
sqrtps
xor
in
inc
lods
pop
mov
add
push
daa
pop
fwait
xchg
test
addb
mov
cld
or
das
fcomps
xor
ret
movlps
aas
or
insb
push
cld
jle
cmp
push
sbb
outsb
and
rorl
mov
mov
mov
mov
mov
sbb
int3
ret
cmp
js
pop
out
test
and
mov
xor
sbbb
add
repz
lods
outsb
int
adc
push
icebp
cmovg
and
scas
das
jnp
insl
inc
jmp
pop
gs
es
lahf
jecxz
fildll
ds
pop
pop
mov
outsl
mov
xlat
adc
add
aas
mov
sub
add
aaa
dec
xchg
into
fistps
jb
imull
iret
dec
add
insb
push
pop
pop
sti
popf
pop
lahf
out
mov
adc
or
popf
push
pop
adc
mov
arpl
int
pop
mov
jbe
lods
pmulhw
push
push
repz
cmp
fnstsw
push
sub
scas
std
and
mov
mov
inc
inc
mov
js
arpl
mov
cmp
aas
int
rorb
sub
pop
out
call
aas
dec
or
lahf
inc
and
out
dec
cli
dec
outsl
dec
sub
nop
and
imul
or
push
iret
dec
nop
aas
gs
xor
add
pop
push
sarl
pushl
xor
cmpsl
icebp
shl
mov
xor
push
xor
pusha
or
xor
aas
cmc
mov
in
pop
je
mov
lret
xor
sub
jmp
hlt
iret
dec
outsb
iret
repz
pcmpgtw
mov
jnp
push
sbb
push
xor
sbb
pop
fnsave
or
add
or
pop
adc
push
enter
ja
movsl
and
repz
repz
mull
sti
ret
int
repnz
pop
xor
std
mov
mov
cmp
int
scas
adc
pusha
inc
add
inc
pop
mov
mov
xchg
lret
xchg
mov
inc
stos
shlb
xor
incl
jl
lods
push
das
jmp
jl
cs
fs
add
addl
insl
cmpsb
and
data16
outsb
cmp
add
js
je
dec
mov
ds
enter
popl
rolb
jecxz
push
mov
adc
mov
mov
cwtl
outsb
lods
jecxz
sahf
lahf
je
xor
lock
mov
popf
pop
lea
addr16
ret
dec
jle
rcrb
sub
out
mov
rcll
pop
cmpsl
and
adc
ljmp
lods
sub
mov
jae
xor
dec
mov
xchg
xor
fdivr
mov
add
sarl
loop
xor
add
icebp
hlt
nop
decb
jne
outsb
sub
insl
pop
sbb
dec
or
imul
push
xor
hlt
in
cmp
out
lea
inc
out
loop
xor
repz
clc
or
iret
jbe
xlat
jns
sbb
adc
mov
add
idivl
lea
frstor
fsubrs
push
add
adc
mov
insb
sub
pop
push
fcomi
sub
scas
popa
popf
insb
xor
mov
loop
insl
pop
popf
filds
lods
adc
call
scas
pop
rcl
sbb
xchg
jmp
lods
into
and
insl
jge
insl
jo
test
xchg
push
fistps
add
iret
cmp
cmc
or
gs
and
fs
ds
xor
pop
scas
and
dec
ffree
movsb
sub
hlt
mov
movsl
push
adc
repz
inc
aas
pop
daa
push
and
inc
pop
repz
and
lcall
or
push
xchg
cmp
inc
inc
push
imul
cld
push
or
pop
and
test
and
out
sub
sub
in
subl
hlt
mov
sbb
inc
inc
addr16
mov
es
sti
lahf
push
jne
and
pop
roll
pop
push
jle
ds
mov
ds
insb
lea
lods
lods
xor
push
fmuls
dec
or
fdivs
mov
std
cld
xchg
in
and
rcrl
les
cmpsb
push
sub
mov
shrl
or
adc
pop
push
inc
push
call
or
push
dec
int
fst
outsb
sahf
sub
inc
fs
xchg
gs
jo
pop
mov
cmp
or
mov
arpl
nop
popf
jle
imul
dec
fdivl
cmc
icebp
or
sub
pop
cltd
push
addl
pop
pop
mov
jo
pop
insl
das
xchg
outsl
lea
jecxz
js
cld
mov
insb
push
add
inc
insl
jge
pop
call
inc
stos
xor
push
daa
mov
cwtl
push
cmp
psubusw
rcrl
in
xor
or
cltd
mov
mov
adc
mov
rclb
jge
add
push
js
lea
hlt
stos
decb
int3
addr16
pop
call
into
fistpll
inc
sbb
mov
inc
fsubs
and
push
mov
lods
pop
lods
jmp
mov
frstor
and
test
push
mov
jg
xor
inc
cmp
jmp
fnstsw
std
sbb
cmp
pop
mov
push
mov
lahf
mov
shrl
dec
xchg
sub
pop
shll
pop
ucomiss
pop
sub
shll
and
mov
sub
pop
testl
mov
psadbw
xor
in
cmp
push
inc
xor
lahf
xor
xor
xor
sub
sbb
popf
outsb
add
adc
jmp
pop
aas
pop
xchg
iret
in
das
or
decb
clc
mov
jne
xchg
cmp
xor
jge
js
push
imul
jge
je
scas
cld
cmp
jle
jmp
push
jg
fisttpl
sbb
shrl
ds
mov
dec
lret
xor
jecxz
jge
mov
sub
adc
xor
pop
jg
popl
cmp
icebp
lds
popa
cmp
mov
xchg
push
lods
jmp
and
das
jge
aas
iret
xor
adc
insl
outsl
sbb
and
sub
aam
or
xor
mov
push
or
jns
clc
subb
pushf
mov
sbb
cmc
orl
in
int
outsb
jmp
jecxz
inc
sub
pop
sub
push
add
dec
jle
and
push
mov
insb
dec
mov
sahf
imulb
mov
jns
mov
jne
out
addr16
mov
xchg
out
and
ja
das
sub
mov
js
fimuls
xlat
mov
mov
aas
in
adc
frstor
pop
repz
inc
mov
lcall
cmp
jne
das
cmp
push
xchg
fldcw
lahf
int
or
and
xchg
dec
push
lods
push
ds
fs
cltd
xor
adc
adc
push
xor
leave
nop
cmp
jl
and
push
sbb
shrl
lock
sbb
lods
mov
dec
cs
iret
push
prefetchwt1
jl
orl
int3
test
mov
cli
mov
push
push
outsb
repz
xchg
mov
inc
popl
adc
fildl
sub
dec
gs
inc
sub
push
insl
adc
int
push
lods
mov
pop
sbb
add
pop
repnz
push
inc
sbb
repz
dec
lcall
or
outsl
lahf
push
es
scas
fnstcw
xchg
jg
lods
jle
iret
mov
or
pop
and
into
pop
mov
pusha
pop
cmp
xchg
xlat
movswl
std
inc
and
xor
jecxz
sub
scas
xchg
sub
sub
pop
das
scas
stos
aas
movl
es
push
push
pop
addr16
subl
dec
push
and
jg
push
xlat
cmpsb
add
outsb
js
in
inc
mov
push
adc
icebp
sbb
in
popa
xchg
sub
rep
fistpll
cmp
add
repz
push
outsb
sbb
push
push
dec
cmove
mov
sub
scas
jo
mov
or
dec
push
test
or
pop
int
lea
mov
fbld
stos
lods
insb
fs
dec
pop
mov
and
push
ljmp
sbb
clc
lods
dec
pop
out
xor
pop
cs
jmp
jge
rorl
adc
jl
ds
adc
mov
mov
insb
pop
push
or
xchg
jb
cmp
dec
push
jl
or
dec
pop
pop
jo
mov
int
insl
popf
outsb
jle
cmc
add
dec
imul
sbb
push
push
js
add
clc
mov
sbb
jg
shlb
mov
push
push
pop
lods
mov
jecxz
repnz
in
adc
pop
or
push
mov
and
jnp
in
test
cmp
and
push
in
and
in
lahf
fstpt
insb
push
and
jmp
inc
ret
sub
repz
push
sub
mov
push
sbb
mov
insb
js
push
idivl
cmp
movsb
in
push
mov
or
push
mov
lahf
push
aas
pop
push
cmpsl
sub
pop
push
lds
clc
push
insb
js
iret
jmp
lahf
jecxz
mov
or
xor
jmp
add
daa
int3
loop
pop
inc
addr16
pusha
xor
jg
sbb
insl
outsl
scas
addr16
dec
cs
mov
inc
push
xchg
mov
and
cmp
aas
iret
int
pop
push
insb
cmp
rcrl
xchg
jmp
in
jmp
jl
mov
mov
in
dec
std
mov
cmpsl
adc
je
lods
sbb
dec
cltd
sbb
lret
lods
scas
fcoms
icebp
inc
and
outsb
pop
mov
pop
push
or
outsl
testb
or
std
fnstsw
pushf
psubb
addr16
push
lret
movsl
lahf
mov
pop
inc
push
cmp
add
sbb
scas
cmp
or
sbb
cltd
push
add
dec
xchg
dec
mov
stos
int3
xor
push
lea
adc
scas
sbb
hlt
fs
insl
push
inc
cmp
sbb
imul
cs
pop
int
dec
sbb
or
push
das
sbb
jae
ljmp
sbb
jmp
cld
mov
inc
push
test
dec
les
jg
pop
call
xor
cmp
lahf
je
xchg
iret
dec
scas
xchg
js
jl
dec
scas
outsl
mov
inc
pushf
pusha
add
fmuls
xchg
pop
cld
filds
sub
fdivs
insl
popf
or
addr16
add
repnz
push
sbb
pop
sti
inc
lea
imul
cs
pop
ljmp
or
fisttpll
insb
push
push
and
dec
push
lret
mov
cwtl
cmp
mov
lea
hlt
repz
popf
or
or
mov
daa
clc
out
sbb
out
jmp
es
or
subb
inc
repnz
mov
xchg
outsl
cltd
dec
aaa
push
xor
xchg
jg
pusha
lahf
add
arpl
cmp
mov
fsubr
mov
push
sbb
push
mov
or
cmc
push
ret
add
sbb
pop
out
jle
imul
lea
std
iret
movsb
aad
adc
popf
cmp
push
mov
aas
addr16
jecxz
dec
dec
pop
sub
int
dec
popf
jbe
fcompl
inc
je
lcall
jl
pop
int3
and
xor
stos
xchg
inc
jl
pop
or
lfs
mov
das
pop
mov
out
and
xor
int
xor
fsubrs
mov
xchg
xlat
jne
cs
or
stos
push
xlat
mov
fisttpll
add
outsl
lahf
in
push
jns
imul
test
insl
mov
mov
pop
cmp
pop
rcll
ret
mov
int
outsb
cmp
jle
cmp
xchg
or
outsb
fisttpll
cwtl
xor
testl
dec
scas
addl
inc
sar
das
aas
test
pop
push
xor
mov
jno
fcos
fwait
add
mov
test
aas
in
sarb
or
push
mov
inc
iret
nop
sbb
int3
sub
shlb
pop
jg
shlb
fnsave
or
pop
jmp
insl
push
xor
push
imul
mov
xor
xor
test
xchg
int3
lret
dec
cmpsb
mov
mov
mov
cs
sahf
pop
hlt
int3
fistps
je
fmull
or
outsl
cmp
cmp
pop
xchg
bound
add
addr16
pop
adc
mov
js
inc
lahf
iret
pop
mov
add
insb
inc
out
mov
std
les
and
sub
adc
mov
xor
cs
dec
pop
lea
pop
stos
xchg
ret
loopne
scas
and
adc
insb
sub
repz
mov
pop
sbb
out
push
lahf
mov
push
mov
lds
movb
aad
jmp
mov
int
je
lock
jle
out
outsl
jge
sahf
mov
sub
sbb
cmp
gs
mov
push
enter
adc
pop
scas
dec
lods
in
or
xor
outsb
mov
loope
jl
mov
mov
decl
mov
outsb
out
testb
pop
jb
xor
mov
mov
and
fs
sbb
ss
insl
dec
jp
subl
mov
pop
push
mov
adc
cs
fistpll
and
mov
les
das
int
add
lea
mov
mov
ret
push
push
les
xlat
and
in
push
aaa
push
cmc
cmp
sbb
das
mov
fdivl
stc
jge
mov
dec
popl
xor
jecxz
sar
sbb
es
in
ljmp
jle
loopne
bound
sub
outsb
dec
jmp
sub
outsl
pop
insb
mov
insl
popf
xchg
jmp
mov
and
push
std
jge
pusha
or
and
push
hlt
imul
lea
sub
inc
addr16
pop
scas
sub
js
mov
dec
dec
insl
and
or
das
dec
popf
ds
xchg
iret
xor
sub
inc
insb
jl
mov
test
or
push
mov
xchg
push
dec
in
mov
xchg
push
cmp
cmp
adc
add
std
sarb
cmp
subb
lahf
lods
out
das
push
shrb
push
cmp
pop
jle
sbb
frstor
lret
iret
mov
jmp
rcrl
movsl
bound
addr16
shll
add
or
push
or
fidivrs
ds
push
mov
or
pop
mov
xchg
mov
xchg
push
nop
scas
jmp
popa
decb
adc
inc
insl
sbb
or
mov
int3
das
aas
ret
mov
lret
lock
outsb
pop
repnz
jge
in
mov
aaa
jmp
sub
xor
jnp
mov
fbld
fisubl
xchg
in
xlat
mov
movsl
outsb
popf
or
call
sub
dec
mov
inc
in
ss
mov
iret
das
stos
jmp
call
js
pop
cmp
cld
jae
int3
js
push
popf
xorb
loop
fisttpll
rorl
push
adc
sub
or
insl
iret
push
jg
les
and
add
push
sub
add
js,pn
int
das
lret
outsb
mov
push
sbb
xor
push
sbb
dec
mov
xor
dec
adc
outsl
jns
pop
cmp
push
hlt
lcall
add
int
cmp
xorb
lea
pop
dec
add
push
xor
sbb
and
scas
outsl
cmp
jle
int3
cmp
addr16
xchg
pop
jno
mov
pop
push
jns,pt
push
pop
inc
pop
inc
pop
push
push
in
cld
cmc
adc
mov
add
xor
stos
inc
call
push
xor
repnz
nop
or
dec
sub
cmp
in
das
repz
lcall
cmp
fadds
psllw
cli
outsb
add
aas
dec
fldl
jg
adc
or
xor
movswl
push
std
mov
pop
lods
int
adc
inc
cmpb
lods
mov
popa
ljmp
in
pop
std
sbb
push
pop
adc
push
out
cli
popf
in
fdivrs
or
adc
mov
sti
fildl
inc
clc
sub
sbb
mov
and
mov
lea
or
cli
inc
popl
or
pusha
lret
xlat
iret
fstpt
jbe
imul
loope
popf
push
scas
ret
mov
inc
jbe
jmp
adc
jl
lock
int
inc
mov
lret
sub
ficomps
cltd
add
imul
int
cmpl
stos
sbb
cmp
addr16
dec
mov
cmp
push
std
adc
push
inc
dec
pop
and
or
aas
call
xchg
dec
sub
push
sbb
or
neg
lods
jnp
loopne
cltd
add
loope
dec
and
push
lods
int
ret
psllq
js
notl
sbb
jge
push
inc
out
push
aam
and
and
pop
mov
stos
cs
movsl
popw
or
cld
pop
ret
jle
in
ja
addr16
mov
and
mov
das
cld
cli
pop
cld
jmp
lods
push
test
mov
out
ljmp
or
mov
inc
mov
enter
push
adc
lods
mov
in
cwtl
jl
fisubrl
into
jg
lcall
mov
f2xm1
pop
lea
lahf
insb
shrb
iret
popa
mov
mov
addb
sbb
mov
mov
sub
cmp
test
xchg
repnz
dec
ret
adc
xorl
sub
pop
and
pop
jecxz
iret
push
or
in
jge
clc
mov
js
sub
push
pop
jge
in
icebp
lahf
or
dec
sbb
adc
aaa
xor
fidivrl
mov
repz
aam
iret
xor
sub
outsb
lahf
rorl
sbb
outsb
jmp
or
aad
aas
or
push
and
jo
test
dec
jle
insl
into
ret
jl
je
mov
adc
or
fldl
cmp
lcall
mov
lock
insb
ds
cld
fs
outsl
subb
jno
repz
testl
scas
or
cmp
inc
popf
in
lret
sub
lods
stos
adc
adc
enter
lods
adc
jecxz
dec
addr16
xchg
xor
pop
clc
rcrb
xor
aaa
jbe
lea
cwtl
dec
jmp
jmp
jle
push
add
addr16
push
shrl
addr16
and
mov
repz
mov
das
add
ljmp
mov
sub
pop
dec
sub
es
frstpm(287
test
das
xor
dec
jg
sub
dec
repz
pop
ds
cli
mov
outsl
out
insb
pop
dec
aas
xor
push
int
push
adc
nop
mov
xor
jbe
in
pusha
fbld
int
mov
dec
mov
in
or
test
adc
out
dec
insb
mov
iret
popf
cmp
das
shr
mov
mov
iret
dec
clc
jge
outsl
mov
sbb
and
mov
addr16
jge
lods
sub
xchg
jmp
push
fnstsw
mov
pop
call
jle
sub
or
xor
mov
mov
outsb
or
inc
fstpl
loop
out
ja
outsb
mov
cmpsl
idiv
pop
es
shl
cld
push
aas
fucomip
out
dec
pop
xor
cs
loop
lea
dec
call
jecxz
push
insl
lods
loope
shrb
pop
in
pop
or
mov
fcmovu
or
cmp
jmp
mov
inc
jle
das
repz
push
add
addr16
push
dec
jg
outsl
repz
dec
out
push
dec
mov
mov
inc
lea
jge
sub
fistpll
aas
mov
int
scas
inc
fimull
or
test
cs
outsb
aaa
mov
or
jl
add
xor
cli
pop
mov
scas
out
fwait
out
out
adc
sub
jl
nop
in
mov
or
and
jg
pop
out
adc
std
imull
ret
lcall
icebp
dec
movsb
in
sar
mov
insl
lods
lock
rcpps
js
outsb
ret
push
mov
mov
std
or
sti
sbb
pop
push
lahf
cli
scas
pop
xchg
lods
push
xor
mov
dec
stos
lcall
iret
cmp
pop
or
dec
fucomp
jg
std
xchg
sub
arpl
hlt
pop
or
xor
push
repz
or
cld
divb
shrb
adc
dec
sub
and
adc
xchg
bsf
xor
lods
adc
repz
jl
enter
cmp
aas
cld
mov
scas
pop
daa
xor
and
push
push
sti
iret
push
sbb
repz
shl
mov
push
mov
insb
clc
popf
js
pop
sub
in
enter
pop
outsl
lret
fldenv
push
icebp
jae
jmp
cmp
addr16
repz
and
lods
and
xor
popf
negb
outsl
or
push
push
int3
adc
jbe
insb
pop
mov
mov
xor
push
xchg
and
lret
lock
cld
into
int
lea
mov
dec
sbb
repz
cmp
mov
and
std
mov
js
mov
jmp
call
add
or
and
nop
xor
add
test
push
sbb
loope
je
ljmp
sub
cmpsl
shll
leave
cld
lcall
jecxz
push
loopne
sbb
adc
push
leave
stc
pop
or
mov
inc
adc
fbld
or
addr16
loopne
lods
sub
add
ja
mov
scas
rcrw
xor
adc
dec
jge
adc
insl
outsb
mov
cmp
loope
jecxz
in
push
aad
mov
sbb
movsl
sub
dec
fldl
out
pop
pop
aas
and
std
int
add
pop
scas
lahf
mov
adc
das
mov
js
sub
loope
xor
dec
adc
mov
push
xor
push
ss
insb
mov
out
sub
lahf
cmp
aam
and
pop
aam
or
adc
mov
psubb
cmp
mov
dec
cmpsl
jb
ljmp
xchg
inc
pop
outsb
mov
popf
inc
and
xchg
imul
js
in
imul
xor
cmc
adc
je
jmp
dec
xchg
xchg
mov
pop
popa
and
dec
add
adc
pop
add
dec
ds
mov
ss
mov
xchg
into
adc
lea
dec
scas
lods
xor
hlt
jge
out
mov
push
cmp
arpl
or
out
sbb
push
mov
adc
repz
jge
jo
outsb
mov
shll
lcall
andb
hlt
int3
lahf
mov
jp
mov
out
sti
sub
mov
mov
loop
cwtl
lods
adc
dec
mov
jmp
sarb
and
pusha
push
mov
fistps
mov
push
movsl
xor
dec
sbbl
cs
xor
insl
lea
out
cmp
lods
das
lods
pop
fisttpll
aas
dec
lock
out
mov
std
inc
or
movsb
xor
push
out
ret
sbb
repz
mov
mov
das
jl
popf
dec
inc
mov
addr16
fldt
scas
jmp
jmp
int
in
insl
or
dec
sbb
daa
pop
pushf
adc
insl
dec
outsl
push
sbb
xchg
add
pushf
cli
mov
dec
outsb
test
jmp
xor
push
push
rorb
into
std
xchg
in
les
push
test
xchg
stos
jbe
pop
insl
pop
xor
push
mov
mov
cld
adc
pop
lock
and
aas
sub
stos
pop
dec
push
push
dec
popa
pop
xor
push
scas
mov
jge
popa
insb
mov
mul
lods
dec
js
push
out
arpl
iret
lods
pshufw
arpl
cs
sti
decl
es
jge
cmp
sbb
pop
inc
hlt
cmpsb
ljmp
pop
jo
je
and
js
int
ljmp
dec
pop
ja
call
xchg
sub
repz
xor
adc
dec
test
and
movsb
ja
arpl
mov
test
stos
push
xchg
and
push
js
int
jl
repz
inc
mov
dec
mov
ljmp
fwait
sub
sbb
iret
inc
out
decb
push
in
or
pop
insl
sub
dec
std
fldcw
fdivs
negl
cmpsl
enter
cmp
pop
hlt
push
or
out
into
sbb
dec
inc
faddl
pop
or
jl
test
jg
lret
lods
xor
outsb
mov
pusha
mov
int3
stos
pop
sub
and
enter
sarb
sub
icebp
push
dec
loope
mov
pop
aaa
pop
frstor
jbe
pop
ret
jg
cld
mov
out
aam
inc
pop
call
out
or
loop
mov
xchg
and
xor
int3
mov
sbb
jp
pop
cmp
xchg
and
div
repz
mov
fs
fisubl
in
sarb
outsb
sub
lods
dec
pop
jmp
insl
cld
mov
sub
push
pusha
mov
sbb
xchg
xor
cs
cmpsl
cmp
es
jg
fisubrs
mov
jle
inc
mov
sub
xor
mov
popf
sbb
in
push
insb
daa
out
lret
push
and
nop
pop
sbb
or
gs
or
dec
cmp
inc
stos
jecxz
mov
inc
outsl
xor
cmp
mov
dec
dec
mov
xor
int
fildl
mov
pop
pop
int
int3
ret
cld
pop
inc
push
bound
sub
xchg
fistps
dec
push
dec
xchg
add
dec
shl
mov
jae
push
mov
fiadds
mov
cmp
orl
jl
mov
push
push
lods
aas
cltd
pushf
std
fcomps
dec
sbb
scas
add
xchg
fcmovne
gs
cs
prefetch
into
cli
inc
xchg
hlt
ret
and
ret
sbb
movl
lret
aam
aad
inc
jle
out
insl
or
add
es
mov
int
push
mov
dec
jnp
sub
aas
mov
push
cmp
cmp
push
xor
pop
inc
push
std
repnz
setg
pop
dec
push
stos
push
cltd
mov
push
aaa
xor
pop
adc
inc
cmp
mov
jge
or
adc
pop
iret
cli
clc
mov
test
jecxz
push
xchg
add
dec
cli
push
cld
pop
adc
push
xor
or
js
cmp
cmpsl
pop
jg
pop
lahf
es
fildl
clc
aas
pop
push
test
and
cltd
inc
add
adc
clc
jl
sbb
std
lahf
test
xor
mov
sub
lods
cmp
add
outsl
mov
fisttps
add
pop
int
or
pop
xor
and
insb
add
decb
pop
and
clc
lahf
jl
outsl
ja
pop
into
inc
jne
push
add
pop
addr16
dec
pop
or
jns
adcl
insb
mov
fnsave
jmp
arpl
mov
push
or
outsb
xor
insb
xor
push
fisubl
and
nop
fildll
push
insl
iret
lahf
inc
adc
sub
rcrb
mov
or
in
pop
and
sbb
int
mov
sbb
loope
cs
pop
iret
mov
aas
adc
jb
or
mov
jl
xor
mov
pop
outsb
mov
adc
cmp
cltd
or
dec
xchg
mov
lods
insb
mov
push
inc
ds
std
adc
mov
jbe
jl
sub
stos
js
in
sbb
dec
sub
sub
fs
js
bound
dec
cld
das
loop
pop
rep
lods
xor
insb
mov
outsl
insl
or
mov
xchg
aam
pop
outsb
scas
test
mov
jl
jmp
and
dec
fisttps
aas
pop
xchg
xchg
sub
sub
clc
repz
push
add
ds
mov
cmp
push
or
ss
jmp
insb
lea
sti
or
in
pop
lea
jl
int
in
adc
add
push
popf
repz
cmp
cmpsb
out
scas
jl
mov
inc
mov
int
mov
xchg
xchg
xchg
int3
xor
pop
ficoms
xchg
into
fnstenv
clc
imul
or
push
xchg
xchg
inc
repnz
mov
push
jmp
out
cld
fwait
int
sub
inc
xor
mov
les
outsl
pop
insl
int
mov
adc
hlt
cs
jecxz
pop
dec
lods
lcall
out
mov
std
int3
or
mov
sbb
ds
movsl
cmp
leave
inc
lahf
dec
jbe
into
mov
stos
push
xor
fs
mov
jl
mov
pop
lds
sbb
dec
popf
dec
and
out
xor
and
int
cmp
testl
ljmp
aas
dec
ror
out
cs
dec
cmp
pop
pop
filds
sub
jne
cmc
std
pop
sbb
and
adc
sub
push
mov
scas
scas
dec
pop
rorb
outsb
push
repnz
js
int
mov
in
mov
sub
lock
pop
pop
dec
ds
adc
mov
aas
les
dec
push
mov
sub
and
fldl
addr16
add
popf
jle
mov
push
push
int
or
mov
push
cmc
inc
jle
outsb
push
push
aad
pop
cmp
jb
repnz
sbb
stos
push
js
outsb
mov
sub
push
fucomip
sub
xchg
mov
das
cs
loopne
jb
sarb
mov
ret
cs
and
add
fildll
sub
out
sbb
jl
aad
jle
out
adc
cld
int
out
rcrl
outsl
xor
jge
xchg
lea
std
outsb
cmp
and
sub
pusha
pop
inc
out
xchg
or
push
aas
int
mul
sbb
cmpsb
jmp
sarl
jge
orl
jbe
push
stos
popf
cmovbe
xorl
in
jns
cltd
adc
mov
inc
sub
push
push
cmp
mov
jb
xor
repz
xchg
stos
aas
popa
mov
loopne,pn
xlat
mov
cltd
dec
jno
adc
xlat
cmp
jmp
jl
xor
xor
in
imul
mov
jno
push
push
cmp
out
dec
pop
or
lods
decb
loopne
es
xlat
mov
repz
cmpb
pop
repnz
outsb
cmp
xor
cmp
test
and
in
hlt
scas
arpl
negl
jg
push
mov
out
push
cmpl
out
push
and
jae
sbb
enter
mov
lods
inc
sub
sbb
loop
outsl
outsb
sub
iret
lods
jo
popa
push
pcmpeqb
push
and
fsubrl
enter
lods
popf
in
mov
mov
pop
neg
pop
jg
out
insl
sub
mov
incb
or
data16
mov
shrl
or
incl
iret
repz
pop
adc
jmp
push
add
mov
push
jl
adc
js
stos
cmpsl
cs
mov
jecxz
dec
jl
repz
dec
or
mov
mov
pop
insb
adc
pop
pop
push
sbb
insl
push
mov
push
adc
dec
lods
addr16
out
push
scas
repz
in
add
outsl
mov
lods
popa
cmovle
inc
jae
std
imul
or
popf
xor
in
sar
popw
js
popf
or
cmova
jns
ljmp
jl
mov
outsb
cmp
xor
lods
loope
repz
xchg
pop
enter
pusha
std
or
aam
xor
notl
sub
and
jb
cmp
jbe
push
movsl
pop
push
in
cmp
push
cmpl
bound
mov
inc
sub
xor
sbb
cld
xchg
testb
stos
pop
negb
pop
pop
jbe
push
cs
dec
mov
jecxz
push
cmc
scas
out
cli
and
sub
sbb
mov
testl
minps
std
xlat
sub
add
mov
pusha
dec
ljmp
incl
or
push
jecxz
fucomip
xchg
repz
je
into
out
xor
and
fstpl
jmp
int
das
cli
and
xchg
mov
or
pop
iret
addr16
jmp
arpl
cmp
arpl
mov
fucomp
loope
jmp
fdivr
cli
adc
mov
sarl
out
mov
dec
push
scas
enter
scas
inc
not
pop
xor
mov
rclb
mov
icebp
out
pop
repz
fidivrl
scas
in
shrb
adc
vcmpnlt_uqps
inc
xchg
test
into
fcomip
adc
pop
vmread
popa
ljmp
add
aam
push
push
xchg
addr16
mov
adc
push
fsubl
dec
inc
sbb
bound
in
out
sub
dec
sbb
sbb
ljmp
cs
and
or
inc
pop
fucomip
lods
out
das
lea
jns
cmp
xor
sub
cmpsl
pop
call
and
jmp
push
pop
or
sub
inc
hlt
and
adc
add
inc
xor
cli
in
sub
into
or
addr16
adc
int3
rcrl
mov
scas
dec
dec
lea
adc
aas
pushl
test
push
inc
cmp
test
pop
out
lret
xor
repz
push
mov
xor
pop
movsl
xor
push
pop
pusha
sbb
pop
pop
cmpsb
or
fstpl
imul
popf
xor
aas
pushf
lods
mov
mov
add
cmp
js
jmp
push
je
incb
cmp
xchg
xor
cmp
push
loope
adc
ss
and
orl
xchg
nop
jae,pt
or
or
xchg
dec
pop
imulb
lahf
cmp
pop
insl
iret
mov
xor
jl
sbb
je
popf
sub
mov
insl
ljmp
daa
mov
fldcw
xchg
lahf
ljmp
mov
inc
pop
cmp
or
push
addb
mov
jl
loope
cmp
ds
stc
sub
push
stos
pop
xor
call
jb
adc
sbb
insl
fisttps
and
inc
lock
pop
mov
std
je
jl
pop
pop
cvtps2pi
or
jge
push
adc
fs
fstps
test
cs
or
repz
sahf
mov
pop
jbe
popa
and
ja
push
mov
imul
mov
adc
sbb
dec
xor
daa
and
sti
cmp
pop
add
xor
mov
test
pop
inc
push
fcoml
aam
in
out
mov
call
cmp
dec
aas
inc
dec
add
arpl
test
jbe
adc
push
xor
pop
dec
scas
popf
jae
sub
stos
sarl
xor
pop
fsubp
repz
mov
shrb
data16
push
das
insb
in
mov
or
pop
push
mov
mov
pop
inc
and
lea
dec
xor
push
int
std
test
sub
sbb
inc
adc
mov
jae
jle
bound
loopne
xor
sub
test
sub
pop
xchg
jne
ret
mov
jp
adc
mov
mov
jmp
push
clc
and
sub
adc
fwait
xor
mov
out
jnp
sub
fstl
cmp
adc
je
jno
cld
daa
les
dec
pop
cmc
or
into
stos
jl
push
lods
cmp
jle
add
lahf
push
out
and
repz
repz
scas
mov
xchg
mov
rclb
cmp
cli
or
inc
insl
sbb
sub
and
cli
push
mov
fildl
leave
adc
xor
pop
lea
mov
stos
sti
push
xor
pop
stc
fldt
mov
and
or
dec
dec
stos
cmp
fimull
stos
lea
int3
dec
mov
mov
sub
orl
stos
cwtl
int
insl
mov
lock
mov
loope
sbb
add
jb
mov
mov
fildl
inc
jo
mov
inc
sahf
mov
aas
movsl
cmp
xlat
fnsave
popf
dec
sbb
setns
mov
pop
repz
movsb
push
and
subl
sarl
int3
fldl
push
sbb
test
movsl
popf
push
sub
aas
mov
or
addr16
lock
pop
lahf
jle
add
jne
lods
pushf
pop
std
les
inc
pushf
ss
dec
fisubrl
fdivrs
clc
movsl
mov
scas
ss
fisttpll
call
test
cmpsb
mov
std
and
jge
arpl
insb
lock
das
push
pop
int
rcrb
mov
dec
ljmp
out
adc
pop
es
out
mov
xor
xor
repz
in
jnp
int3
incl
paddb
lahf
xor
xor
pop
mov
pop
jns
jge
addr16
push
lss
or
outsl
add
pop
and
aas
fnsave
aam
or
shlb
ljmp
std
sbb
cwtl
pusha
popf
pop
jge
in
rcrb
or
add
popf
adc
mov
push
sbb
and
inc
lahf
mov
aas
pushf
dec
cmp
dec
insb
pop
xor
in
pop
into
push
inc
iret
sub
loope
mov
pop
cs
mov
lods
cmp
shl
mov
pop
cmp
int
shl
movsl
cmp
push
nop
and
pop
sub
jl
cmp
cmp
das
ud0
fidivrs
push
pop
xor
rcrl
or
jns
and
lea
outsl
pop
mov
adc
xor
fisttpll
mov
sub
jl
inc
dec
mov
out
sar
cld
add
mov
jns
push
jns
xchg
mov
insl
cmp
test
push
divl
and
outsb
jge
jle
iret
xlat
mov
cmpsl
movsb
or
mov
movsb
loope
ds
out
dec
aas
xchg
loope
lahf
stos
mov
clc
test
jg,pt
xchg
sbb
inc
cmp
fists
jg
sbb
pop
divl
insl
pushf
subl
shrb
cld
out
sbb
push
sub
mov
or
std
jno
jae
push
in
insb
cld
addr16
lods
outsb
divps
pop
push
mov
mov
outsl
inc
push
mov
mov
pop
pop
push
ret
sbb
and
mov
cmp
orl
lret
cmp
pop
shlb
dec
incb
xor
in
and
iret
mov
adc
test
iret
repz
push
clc
dec
mov
inc
mov
int3
aas
insb
jbe
dec
sahf
pop
sub
fdivrl
adc
push
add
clc
pop
mov
das
xor
mov
or
adc
xor
fisttps
sub
insb
cmp
jbe
xchg
sbb
push
jnp
mov
mov
pop
outsb
dec
adc
sbb
xcrypt-ofb
cmpsl
scas
sbbb
repnz
in
lahf
xchg
ljmp
jbe
out
pop
mov
outsb
inc
push
lods
and
adc
jl
cld
out
xlat
push
movsl
pop
add
scas
sub
or
or
push
rclb
sub
push
mov
into
mov
inc
jg
scas
pop
hlt
enter
push
mov
fisttpll
enter
push
and
jae
in
int
scas
cs
and
mov
jmp
lods
mov
insl
call
dec
aas
outsl
cmp
rcr
sub
in
leave
fisttps
lret
fstpl
lret
dec
cmp
sbb
ret
scas
sub
out
xor
insl
mov
jge
jl
aas
pop
cmp
inc
aaa
js
arpl
into
das
loopne
dec
fucomp
cmp
fsubrs
paddw
push
dec
in
aas
push
jmp
mov
jae
arpl
pop
push
pop
pushl
lahf
inc
scas
add
push
scas
jno
je
cld
imulb
mov
dec
mov
loope
mov
fisttps
insb
push
outsb
popf
cs
dec
cmp
push
and
sbb
fcoms
inc
cli
push
jg
push
mov
mov
adc
fistps
outsl
mov
xor
sbb
dec
out
mov
push
ret
pop
fists
clc
jle
push
pop
stos
in
test
imul
js
mov
pushf
lcall
lods
mov
cmovb
xor
inc
mov
mov
dec
push
aad
cmp
adc
xor
xchg
dec
ds
xor
inc
in
outsb
mov
and
push
aas
adc
cmc
adc
jbe
push
mov
callw
push
sub
sub
popf
rolb
std
outsb
or
dec
in
sbb
repnz
scas
inc
rep
cld
mov
sbb
inc
adc
xor
stos
cld
cmp
inc
std
jbe
lods
cmp
push
and
push
dec
jecxz
sub
movsb
dec
dec
int3
popf
insb
insl
sbb
jl
xchg
xchg
cmp
mov
stos
cmp
js
int
pop
xchg
leave
mov
fists
pop
and
stos
sub
daa
xchg
push
sti
out
dec
movsl
psraw
xchg
push
dec
iret
jecxz
pop
pop
push
sbb
fisubl
lahf
addr16
dec
push
sub
mov
jmp
mov
popf
pop
inc
icebp
xor
sbb
push
mov
dec
mov
jb
push
push
ds
cmc
js
in
in
int
je
jmp
in
ret
scas
mov
pop
mulb
pop
pop
adc
mov
push
or
jecxz
inc
jg
test
xlat
ds
loope
lods
or
stc
and
sub
insl
xor
push
sahf
push
test
pop
aas
push
int
std
xor
call
lahf
loope
jl
push
bnd
je
cmp
or
sti
or
cmp
out
leave
je
or
loope
popf
std
loope
lods
mov
push
cli
add
xor
scas
ljmp
mov
int
mov
out
data16
xor
sbb
popf
imul
jl
aas
sarl
out
xchg
stc
fnstsw
shll
xchg
outsl
imul
pushf
dec
add
jmp
mov
aad
xchg
sub
gs
pop
inc
or
incb
jecxz
fistpl
mov
mov
mov
insl
inc
jmp
movsl
adc
daa
aam
dec
shrl
cmp
mov
lahf
sbb
pop
lcall
xor
in
and
arpl
pop
sub
pop
sub
inc
mov
push
dec
std
xor
negl
mov
mov
bound
dec
iret
add
sub
loop
or
mov
push
push
dec
iret
testl
sub
xchg
outsb
jecxz
dec
mov
sub
dec
and
inc
mul
das
ret
divps
das
enter
lea
insl
lahf
out
mov
lock
pop
pop
cmp
in
lock
pop
mov
iret
iret
jg
push
pushw
jle
cmp
dec
insl
cmovno
push
sub
xchg
cmc
cld
jb
outsl
icebp
inc
sbb
fldt
inc
dec
xor
incb
in
fwait
push
pop
or
scas
ds
pushf
lods
and
mov
lods
outsb
std
ds
pop
or
scas
test
xchg
cld
lahf
lea
mov
and
cmp
nop
cmp
cltd
ds
pop
mov
jl
fisubl
or
iret
sub
cs
pop
mov
fwait
popa
pushl
xor
idivb
insl
dec
test
jg
ret
adc
dec
push
push
and
jle
dec
lods
popf
sbb
mov
pop
cld
insl
in
pop
inc
jle
add
dec
sqrtps
loop
int
xlat
push
or
cs
pop
or
push
xor
out
push
aas
std
inc
jecxz
xchg
cmp
in
sbb
je
push
sub
vucomisd
and
add
dec
or
int
push
das
scas
push
pop
dec
int
mov
orl
push
pusha
or
stos
repnz
push
lods
iret
mov
adc
outsl
pop
jg
lods
testl
cmp
cmp
pop
repz
int
lea
stos
int3
loopne
lcall
lcall
pop
leave
lcall
bound
mov
scas
lea
jo
cmp
ds
popf
jae
dec
push
xor
xor
adc
jg
lock
and
push
mov
iret
push
pop
aaa
jl
mov
inc
jo
mov
leave
pop
pop
pop
adc
call
or
or
fmull
call
xor
rolb
ljmp
enter
out
jmp
jae
hlt
lods
jecxz
in
mov
daa
cmp
repnz
dec
rorl
int
or
outsl
aas
cwtl
jecxz
std
dec
pushl
outsb
jle
insb
adc
ldmxcsr
pop
and
das
mov
lods
pop
subb
inc
adc
pop
dec
or
mov
loopne
mov
fucomp
adc
fisttps
xchg
mov
mov
inc
int
push
and
addb
out
adc
or
cmp
adc
int
std
pop
out
bound
fisubl
cmp
insl
repz
jb
out
dec
into
js
mov
push
std
pop
cld
fcompl
push
fcomp
js
paddusw
xchg
das
pop
scas
add
or
add
sbb
dec
outsb
push
mov
lock
jg
xor
lods
inc
cs
push
pop
ljmp
mov
mov
int3
in
xchg
sbb
pop
jmp
xor
in
std
jecxz
push
repz
testb
or
dec
shrb
xchg
rsm
in
mov
int
adc
jg
fsts
mov
cld
add
and
cli
mov
ljmp
out
pushl
sbb
fildll
imul
or
mov
jge
stos
cmpsl
mov
jle
bound
lods
pop
insb
or
cmc
add
jle
int
mov
cld
jge
jbe
sub
cmp
cmp
mov
insb
mov
lahf
jg
ss
mov
imul
outsb
push
pop
push
push
mov
xor
cs
or
inc
adc
pop
jmp
xor
iret
scas
mov
add
dec
sub
cld
popa
sbb
shl
push
std
pop
aas
adc
mov
gs
repnz
lahf
pop
addr16
cs
mov
negb
pop
xchg
mov
ror
scas
mov
hlt
lret
out
in
loop
fistpll
testl
jge
jg
jae
das
test
je
mov
iret
js
jle
jo
scas
mov
cmp
jmp
xor
cmp
sub
sub
sub
iret
fdiv
lea
fldl
push
scas
scas
pusha
das
cmpsl
repnz
test
mov
mov
iret
outsl
adc
inc
adc
imulb
rcrb
lods
loopne
ret
push
xor
decl
adc
lods
test
out
mov
push
and
cmp
aas
sbb
idiv
pop
or
in
out
lret
lods
push
lret
sbb
dec
and
js
push
filds
dec
and
insb
lahf
out
sub
je
push
or
insl
jge
js
dec
in
insl
and
aad
cld
test
enter
data16
inc
ja
mov
add
sbb
fbld
fdiv
sti
pop
mov
es
je
jmp
jmp
loop
fisttpll
sub
pop
insl
iret
rorl
lods
inc
pop
mov
pusha
mov
dec
or
cmp
sub
insl
pop
ds
jge
jge
call
xlat
aas
test
cmp
xor
push
mov
push
jmp
pop
push
scas
decb
int
ljmp
jg
push
sub
xor
mov
scas
rcrl
jg
dec
inc
adc
das
popf
sub
jae
dec
jmp
adc
leave
jae
loope
int
cs
inc
stos
ds
adc
xchg
fnstsw
hlt
push
jl
jo
testl
stos
sub
push
je
int3
fnstsw
adc
das
jle
mov
pop
ljmp
shrl
stos
fbstp
js
out
je
es
mov
mov
pop
inc
adc
es
out
movsl
sbb
outsb
jmp
fstpt
or
jae
inc
aaa
iret
lahf
xchg
jo
sti
sub
aaa
outsb
add
pop
cmp
stos
and
xor
loopne
nop
pop
shl
push
pop
ret
pause
test
outsl
jg
sub
adc
dec
out
adc
das
and
cmpsl
ret
and
out
cmp
hlt
sub
or
addr16
inc
jp
mov
mov
mov
icebp
loope
repz
insb
ja
xor
push
jle
movsl
pop
fstpl
sbb
ds
fsubr
jmp
lret
inc
pop
insl
jmp
jo
inc
addr16
sbb
fldcw
mov
mov
dec
iret
in
sahf
jecxz
outsb
repz
inc
imul
jecxz
lret
adc
jne
ficompl
std
outsb
pusha
push
adc
outsl
in
loop
mov
outsb
sbbl
add
insl
scas
int3
das
xchg
test
mov
rol
enter
sbb
and
popf
bound
inc
mov
pop
dec
sub
arpl
push
push
pop
mov
sub
sbb
sbb
sub
xchg
or
std
mov
aaa
and
nop
insl
mov
test
hlt
sbb
pop
push
das
jae
pop
mov
jg
adc
add
ficompl
cltd
pop
and
outsl
mov
pop
fisubrl
jl
out
lahf
lea
dec
push
imulb
insb
cld
push
lods
iret
int
icebp
xchg
xor
out
cmpsl
in
pop
inc
outsb
and
fnstsw
test
mov
addr16
xor
ja
fnstsw
loopne
xchg
mov
inc
dec
mov
jnp
mov
pop
insl
adc
mov
push
insl
hlt
pusha
js
int
std
in
mov
inc
fcmove
out
andb
inc
mov
add
jg
imul
inc
pop
lahf
ds
sbb
sub
push
dec
adc
outsl
hlt
pop
mov
fldt
in
popf
adc
mov
lret
pop
decl
testb
lea
cmp
jmp
sub
jp
in
push
pxor
mov
dec
pop
outsb
xor
xor
push
loop,pt
mov
pop
and
repz
dec
add
adc
scas
xorl
mov
decl
mov
cwtl
jae
addb
jb
lahf
push
mov
stos
push
push
jb
scas
into
mov
testl
cmpsb
into
xor
iret
inc
or
jecxz
enter
in
fisubrl
je
in
add
mov
hlt
sub
xchg
or
xor
sbb
sub
cli
lods
dec
subb
jl
xor
cs
push
mov
pop
lods
aas
mov
sti
and
fcmovnb
js
pop
push
dec
sbb
jnp
push
cmp
stos
cmp
int
test
enter
adc
outsb
imul
or
fistl
lods
pop
sbb
fisubs
adc
mov
loope
jge
loope
xor
fstpl
insl
push
dec
js
push
nop
push
cmpsl
out
repz
pop
push
insl
mov
cmp
push
jle
lea
data16
std
sbb
repnz
sub
outsl
adc
lret
mov
lea
cs
add
int
ja
aas
iret
lods
popf
xor
je
testl
mov
xor
xchg
fcmovnbe
in
repnz
scas
or
jae
out
addr16
xchg
mov
fmul
xchg
pop
mov
mov
or
mov
insl
stos
adc
rcrb
ror
sub
stc
pop
pop
out
sub
outsb
sub
hlt
pop
ds
xor
insl
dec
fcoms
les
mov
in
xor
mov
pop
mov
fcos
mov
mov
pop
sub
idiv
adc
das
dec
insb
add
push
push
pop
je
scas
in
pop
add
scas
cld
jge
or
mov
popa
aam
or
outsl
aam
std
or
pop
stos
adc
jecxz
jl
push
pusha
jle
aas
sub
mov
lods
inc
pop
and
xchg
pop
adc
inc
cmp
sub
push
fimuls
movsb
jecxz
rcr
adc
mov
cld
jle
add
popl
mov
mov
mov
out
js
mov
push
es
dec
lea
and
and
jl
outsl
shr
arpl
dec
sub
cmp
push
dec
insl
cmp
aas
push
lods
or
sub
testl
mov
shlb
jle
lods
out
or
dec
pop
sub
push
lods
xchg
cli
outsb
xchg
popf
into
dec
stos
fldz
and
mov
stos
aam
sbb
test
into
lds
into
insl
into
pop
or
into
mov
into
xor
into
push
stos
cmp
stos
xchg
mov
jl
dec
stos
or
stos
adc
stos
cmp
stos
or
stos
ds
stos
mov
stos
test
stos
mov
stos
inc
xchg
enter
stos
xchg
fcomi
into
lahf
stos
cmp
setae
popf
xchg
adc
in
mov
je
sahf
testl
push
add
cs
add
or
adc
xchg
mov
insb
mov
scas
into
adc
sub
jbe
iret
arpl
out
ja
repnz
in
inc
fdivrl
shr
addl
mov
mov
pusha
cmp
in
push
push
in
sbb
ljmp
sub
cmpb
lcall
adc
push
cmpsl
push
fsubrs
ficomps
add
dec
add
lods
jecxz
push
frstor
aam
mov
xchg
cld
std
or
ficoms
popl
aaa
into
sarb
sbb
lcall
xor
mov
loope
les
lock
adc
jle
outsl
insb
mov
jge
sub
lds
pop
or
js
std
push
push
adc
sub
xchg
lods
push
inc
xor
setno
mov
pop
dec
outsb
push
scas
ficoml
mov
js
ds
dec
sahf
and
fistpll
jne
cld
inc
jge
push
push
fdivrs
pop
jns
push
scas
lock
insl
repz
cmp
ljmp
ret
pop
addr16
js
and
out
cmp
rolb
ds
pop
jl
pop
inc
cmp
add
lods
das
mov
int3
mov
lods
sub
inc
add
pop
bound
add
xor
ljmp
in
js
shl
mov
aas
scas
int3
or
imul
aad
sbb
js
pop
imul
add
dec
in
std
out
cmp
movsl
xchg
int
repnz
inc
pop
fsubrl
push
xor
mulb
ss
jmp
int
dec
jbe
mov
mov
xor
or
jmp
mov
or
push
loop
pop
push
mov
subb
and
push
jbe
dec
ret
add
pop
outsl
push
mov
xlat
ds
test
and
and
daa
jecxz
jle
repnz
addr16
popf
outsb
add
pop
repz
adcl
and
popf
mov
out
adc
ljmp
cld
das
xchg
arpl
inc
pop
popf
sbb
pop
mov
int
dec
lods
adc
pop
mov
adc
hlt
scas
dec
pop
jae
push
dec
loope
push
add
mov
cld
insl
pop
or
int
into
push
pop
adc
jle
ret
repz
dec
cld
jns
insl
and
cmp
cmp
loope
jle
outsl
fdivrs
pop
push
lods
out
mov
or
pop
adc
sbb
lods
mov
pop
add
sbb
mov
daa
jmp
pop
aas
in
stos
int3
mov
test
and
lods
push
lahf
sbb
xor
jl
pop
and
lcall
adc
mov
adc
mov
lods
mov
dec
sub
ljmp
outsb
adc
and
cld
jg
or
jle
rcrl
push
mov
fistpll
dec
adc
push
or
adc
dec
insl
add
mov
pop
leave
stc
sub
and
add
std
aas
mov
xor
dec
and
aam
hlt
or
popf
inc
inc
ja
adc
in
lahf
xor
lods
addr16
jb
aas
pop
sub
mov
jg
push
or
xlat
inc
fs
jle
xchg
dec
mov
push
push
sbb
dec
xchg
push
leave
ficoms
or
leave
push
lahf
int
sbb
decb
fcompl
popf
stos
sub
nop
push
xchg
jo
dec
lock
cs
lea
outsl
frstor
sbb
dec
pop
xor
or
xor
inc
cld
sub
mov
cs
mov
ret
and
adc
mov
sbb
repnz
lods
mov
lods
out
xor
add
repz
mov
insb
adc
dec
pushl
adc
clc
test
imul
insb
pop
popa
jae
inc
dec
push
pop
xor
ds
clc
pop
jg
push
cld
sub
mov
insl
push
push
jge
xor
fidivl
addr16
dec
pop
sbb
or
dec
sub
gs
mov
pop
mov
pop
and
rclb
xor
sub
imull
mov
rcrl
sbb
dec
jl
mov
push
in
out
int3
or
jnp
iret
je
ret
mov
loope
mov
add
int3
push
sub
sbb
sub
das
adc
push
in
push
cs
decl
pop
cmpsl
test
int
or
push
div
pop
sbb
out
test
mov
mov
out
xor
out
rcrl
scas
cltd
push
divb
push
insb
and
fbstp
sar
jl
pop
call
repz
or
out
hlt
and
mov
dec
add
push
push
jmp
inc
push
repnz
insl
std
adc
add
push
jmp
add
incl
jecxz
movb
aas
dec
pop
outsb
mov
int
insl
mov
add
inc
cwtl
loope
push
outsb
jo
arpl
cmp
dec
sub
jmp
pop
out
or
lods
pop
scas
fdivrl
dec
mov
mov
push
push
and
popf
aad
int3
mov
ja
dec
std
adc
in
into
and
pop
fimull
jecxz
jl
mov
push
dec
lods
sub
jle
xchg
lods
mov
jmp
push
push
xor
scas
insb
mov
div
pop
push
pop
sub
or
arpl
out
repz
outsb
scas
dec
lods
jae
scas
mov
xor
adc
loop
rorb
add
jno
lods
insl
loop
rorl
adc
xor
outsl
jo
mov
xor
adc
fistpl
cmp
push
fists
outsb
or
dec
jnp
jle
das
pop
std
jge
add
popf
in
mov
inc
mov
cmp
lahf
inc
and
inc
xchg
pop
js
jecxz
sub
xor
sub
testl
mov
adc
mov
sarl
adc
fldl
cld
push
push
nop
and
gs
imul
insl
jmp
out
dec
pop
and
out
add
std
bswap
jge
sbb
js
lcall
addr16
sub
repz
ds
and
imul
push
out
shll
nopl
scas
jbe
sbb
mov
or
dec
pop
ret
jbe
sbb
and
clc
outsb
dec
out
inc
addr16
cmp
lea
outsb
xchg
xor
hlt
push
sbb
jle
dec
js
cmp
ret
mov
sbb
lds
ret
inc
sub
pop
dec
fwait
adc
push
pop
cli
dec
int3
inc
add
push
jg
das
adc
sub
lock
lods
mov
add
pop
jge
jmp
popf
iret
adc
xor
daa
scas
push
inc
lods
jg
jle
pop
repz
cltd
and
aas
out
popf
dec
outsl
jae
loope
mov
idivb
dec
push
stc
leave
bswap
stos
insl
scas
fsubs
sub
jle
jp
xor
cltd
add
lock
add
jl
dec
pop
pop
popf
popl
sti
jae
mov
out
xor
mov
mov
insl
jae
jg
mov
aas
push
mov
and
stos
fst
mov
adcb
lock
insb
push
lea
je
outsb
insl
or
outsl
dec
mov
push
loopne
adc
jg
sbb
int3
cld
addr16
xrelease
stos
xor
pop
int3
sbb
mov
pusha
sbb
sbb
xchg
popf
pop
dec
jo
jmp
dec
outsl
das
inc
aas
jo
loop
sub
fadd
jle
hlt
push
xor
mov
push
into
outsb
jl
aaa
sbb
lahf
loopne
dec
mov
cld
sahf
fmuls
pop
out
jge
testb
jnp
dec
adc
sbb
lods
jle
sti
das
outsb
out
insb
mov
push
js
ds
int3
jg
xchg
xor
and
mov
aam
iret
adc
xchg
ds
mov
je
loop
push
push
lret
mov
sub
jb
adc
lea
cmp
lock
or
jle
addl
xchg
in
in
or
pop
inc
es
subl
paddusb
cmc
mov
mov
iret
mov
lea
outsb
scas
das
aas
push
push
mov
jb
pop
cld
dec
sbb
mov
cs
divl
addr16
dec
clc
push
outsl
decb
push
pop
out
push
pop
enter
arpl
mov
push
or
gs
lods
popf
jg
femms
dec
sbb
dec
fists
loop
fdivrl
pop
int
add
adc
hlt
je
cs
xor
hlt
cmp
lock
or
popf
cmpsl
jbe
std
cld
lret
pushf
test
in
pop
jmp
sub
push
add
leave
sub
sbb
cmpsl
adc
xchg
rcl
dec
cmpb
outsl
repz
jl
rcrl
pop
dec
cld
cli
mov
xor
in
push
popf
je
mov
imul
aas
out
sarl
inc
cld
movsl
ljmp
push
shl
add
outsb
fsubr
xor
dec
lods
sarl
mov
xor
mov
aas
ds
adc
mov
popf
repz
mov
stos
cld
cwtl
jmp
fstp
int
loopne
mov
mov
sub
pop
sbb
stos
js
mov
push
or
lods
mov
adc
outsl
popf
or
hlt
insb
in
push
and
xchg
loop
xor
jp
ss
fistpll
push
dec
popa
or
lock
scas
push
std
das
mov
adcl
lahf
loopne
jg
ret
pop
push
test
fildll
sub
in
mov
dec
insl
xchg
xchg
mov
fildll
sub
es
jge
repnz
pop
int
inc
mov
and
frstor
jle
dec
xor
add
or
ja
das
hlt
mov
inc
ror
je
pop
jl
hlt
sbb
out
mov
enter
push
dec
adc
das
in
pop
pop
push
push
inc
and
add
jb
rorl
inc
mov
std
sbb
in
or
pop
out
out
xor
cvtdq2ps
xchg
les
pushf
js
push
in
sub
jo
aas
fisttps
stc
in
ja
dec
int3
popf
or
outsb
int
add
jecxz
ds
push
out
pop
jecxz
sbb
out
in
popf
pop
imull
js
insl
fs
push
lret
jne
out
cli
inc
sbb
pop
jnp
inc
xchg
adc
clc
mov
loope
and
push
add
push
mov
sub
jae
clc
into
lods
imul
decb
sbb
lret
clc
int3
jge
out
mov
add
std
sub
dec
push
in
mov
leave
jecxz
cmc
sub
daa
aas
inc
cld
icebp
js
movsb
aaa
mov
xchg
xor
jge
outsb
mov
push
in
call
and
std
cmp
pop
out
dec
jnp
inc
fildll
adc
jg
out
jmp
jmp
jecxz
fstpl
insb
push
adc
add
std
aam
pop
insl
push
ljmp
sbb
out
daa
jne
ror
pop
scas
mov
icebp
aad
cld
pop
pop
shlb
and
pop
lods
push
je
jl
inc
cs
add
pop
out
inc
js
gs
add
rolb
jecxz
scas
xor
ja
push
jge
inc
rcrl
push
mul
ljmp
or
pop
xor
pop
xchg
jl
lods
rclb
xor
xor
and
aam
mov
or
cmp
repz
fimull
fcomp
push
mov
outsb
push
rorb
add
iret
sub
jmp
push
jmp
cmc
lret
cld
jl
xchg
pop
es
jmp
mov
jns
cltd
xchg
int
push
ds
mov
outsb
mov
cltd
dec
xchg
mov
outsl
xor
push
jg
inc
test
xchg
pop
push
call
in
dec
mov
popf
int
adc
sarb
mov
ljmp
mov
pop
out
popf
pop
xlat
pop
or
out
and
imul
sbb
jl
cmpsb
iret
insb
ret
outsb
pop
mov
idivb
mov
cmp
push
cmp
loopne
pushf
or
repz
inc
outsb
aas
lret
mov
cmp
aam
out
outsl
push
dec
mov
dec
push
jl
pusha
push
mov
mov
inc
sarb
dec
pop
rcrl
jae
push
push
or
inc
xor
repz
movsb
push
adc
stos
cmp
mov
clc
aaa
pop
popf
push
test
push
push
dec
jmp
mov
hlt
dec
lods
in
adc
js
data16
cld
jecxz
mov
push
mov
shl
jle
std
or
cltd
aas
add
push
add
cmpsb
mov
das
call
popf
inc
insl
dec
mov
mov
mov
push
xor
insl
test
jle
nop
std
data16
push
dec
pop
sarb
mov
mov
or
std
mov
jge,pn
push
insb
cmpsb
pop
push
fists
add
mov
mov
scas
sub
sbb
pop
ljmp
bound
pop
jo
pop
jmp
lea
sarl
mov
dec
repz
xor
sahf
int3
cs
adc
sub
inc
mov
icebp
lea
aaa
int
rolb
stos
pop
pop
out
js
and
pop
adc
insb
push
or
jmp
sbb
mov
adc
push
jg
jl
frstor
jl
push
out
test
int
mov
adc
mov
or
sub
gs
les
mov
insb
std
jg
xor
inc
push
lea
nop/reserved
aas
ror
pop
push
sub
pop
push
orb
sbb
push
dec
and
cs
out
lea
and
outsb
cmp
sub
sub
nop
out
dec
call
push
inc
enter
fldt
inc
adc
insb
push
icebp
push
popa
xor
add
xor
push
inc
adc
inc
int
push
push
jmp
sub
out
imul
mov
or
addb
adc
outsb
es
jmp
popf
pop
xchg
outsl
push
pop
sbb
dec
mov
jle
jo,pt
je
lret
cld
aaa
in
xor
mov
and
das
mov
fsubrs
mull
repnz
pop
je
fimuls
inc
jae
push
xor
call
lahf
enter
outsl
in
ss
and
outsb
push
iret
lahf
loopne
or
repz
ljmp
or
mov
lret
jns
push
jle
pop
pop
nop
lods
mov
dec
fisttps
xor
cltd
aad
insb
bound
int3
jle
repz
out
xchg
pop
push
push
and
sub
out
or
or
sbb
sub
push
repz
out
inc
mov
rcl
and
xchg
pop
mov
outsl
fdivrp
imul
fsubrs
and
mov
cs
rcr
fidivrl
adc
sbb
test
insb
divb
jl
mul
mov
outsb
dec
les
sbb
push
out
inc
dec
pop
mov
cmp
shll
inc
cmp
insl
jg
push
test
lcall
mov
cmp
subb
jmp
mov
lods
ds
xchg
std
mov
inc
adc
xor
clc
or
in
lods
dec
sbb
cmp
outsb
jecxz
clc
jge
lahf
mov
inc
jle
mov
add
outsb
push
cmpsb
inc
fwait
lock
mov
xor
repz
jl
xor
cmp
test
sbb
aas
mov
outsl
inc
and
lcall
call
jg
int
dec
mov
js
int3
lea
push
mov
je
jmp
fucomip
jmp
test
inc
fdivrl
imul
loop
inc
outsl
call
jns
push
das
push
fisttpll
and
cmp
xor
lahf
jge
dec
mov
lods
inc
lea
iret
ja
movsl
stos
dec
cmp
lock
das
loope
push
jl
push
inc
loope
iret
fisttpl
adc
jl
mov
xchg
hlt
pop
adc
push
sbb
adc
aas
frstor
jl
jmp
repnz
jns
inc
out
cs
cmp
addr16
inc
inc
inc
repz
xchg
punpckhdq
cltd
in
jle
repz
push
cmp
outsb
icebp
sbb
insb
sbb
pop
pop
mov
push
push
aas
hlt
popa
dec
mov
pop
mov
or
cld
mov
xchg
xor
aad
cs
in
jmp
sbb
pop
js
shll
dec
stos
sbb
adc
pop
mov
inc
cs
push
cmpb
popf
outsl
mov
add
jge
pop
repz
jle
fisttpll
lahf
or
inc
sub
outsb
inc
pop
pop
pushf
testb
push
lods
jmp
adc
stos
dec
je
mov
es
adc
out
fstpl
cli
sbb
mov
movsl
sbb
mov
fnstsw
add
and
fmuls
popf
mov
cmp
int
hlt
xchg
scas
inc
sub
lods
jge
mov
pusha
lret
fisttpll
aad
scas
cmp
pushf
mov
lods
sbb
cld
lods
jmp
mov
movsb
loope
in
mov
fisttpll
scas
cmp
mov
ss
dec
mov
pusha
mov
mov
fisttps
mov
push
daa
out
sub
ljmp
add
iret
xor
mov
stos
sbb
dec
adc
mov
cvtps2pi
loope
aas
dec
adc
push
jle
popf
outsb
in
jl
adc
cmpl
jl
or
insb
push
fs
icebp
lods
adc
jl
stos
sarb
addr16
inc
out
testb
cmp
mov
cmp
dec
cmp
inc
sub
pop
adc
push
pop
ds
out
sbb
jecxz
mov
dec
dec
mov
in
or
in
dec
mov
push
push
or
sbb
push
mov
ljmp
add
xor
jbe
jmp
insb
add
jbe
popf
add
mov
and
jl
and
pushf
aas
pop
fistps
dec
loopne
insl
fstps
test
leave
mov
inc
js
lea
int
xor
dec
mov
push
jecxz
out
hlt
pop
mov
testl
dec
call
cwtl
sub
jge
push
jl
cld
and
fisttps
dec
pusha
aas
insb
js
xchg
and
mov
push
mov
adc
hlt
pushl
insb
insb
std
push
dec
push
outsb
sbb
ja
decl
outsb
cmp
dec
sub
adc
imul
jmp
inc
cmc
std
lahf
and
mov
mov
lcall
and
mov
addr16
adc
jge
dec
pop
js
jle
adc
insl
scas
int3
ret
cmp
jle
push
insl
or
and
cmp
push
andb
xor
popa
das
push
ja
push
fs
fisubrs
iret
push
dec
lock
cld
or
sub
jae
lods
pop
sahf
in
data16
cmp
call
pop
pushl
mov
xor
jg
in
add
lahf
int
ljmp
sarb
cmp
jg
dec
out
decl
mov
fbstp
sub
inc
cmpb
call
je
aas
jg
aad
push
mov
sub
jecxz
in
js
packssdw
push
mov
iret
pop
imul
js
fidivrs
pop
out
mov
cmp
in
lahf
pop
pop
mov
or
ljmp
xchg
test
adc
adc
outsl
std
mov
pusha
sbb
rclb
jmp
aas
push
scas
dec
test
ficomps
inc
inc
cmp
adc
clc
dec
sub
mov
jmp
sbb
sub
das
pop
outsb
or
inc
push
ds
cmp
push
decl
lods
pusha
adc
push
jecxz
int3
call
fmull
mov
addr16
xor
outsl
gs
mov
insl
cld
mov
xchg
out
dec
push
or
jmp
jg
xor
sub
cmp
cmp
js
pop
jo
mov
cltd
mov
push
jg
data16
sbb
pop
dec
dec
test
sarb
das
cs
xor
fdivrl
push
xor
es
lcall
and
cmp
inc
sub
jecxz
sub
dec
mov
sarb
mov
js
push
add
outsb
cs
or
into
push
sti
je
int
jmp
daa
mov
rclb
push
pop
das
lods
cmp
fldenv
xor
loopne
xchg
push
inc
mov
add
insl
sub
stc
xor
xchg
mov
lahf
xchg
fisttps
push
mov
cld
lret
pop
cwtl
ljmp
and
mov
dec
iret
fisttps
xor
repz
mov
stc
cld
cmp
addr16
jmp
push
pop
pop
sub
push
add
inc
outsb
push
pusha
mov
pushf
subl
or
inc
out
adc
repz
gs
ljmp
fsubrl
add
insb
inc
iret
out
cld
pop
and
pop
mov
call
std
insl
dec
sbb
adc
xor
push
sahf
and
subps
mov
dec
mov
add
xchg
pmaxsw
std
sahf
cmp
cli
idivl
aas
jmp
insl
test
jo
mov
scas
imul
fistl
test
cmp
jg
lods
jo
or
cmpsl
or
adc
dec
hlt
lret
inc
and
je
arpl
pop
addr16
aas
xchg
das
mov
shrb
addr16
iret
mov
push
and
jecxz
lret
push
addr16
add
es
outsl
enter
scas
int
jg
addr16
outsb
sbb
lea
push
fnstsw
fsts
ret
cs
add
add
pusha
insl
ror
js
mov
into
outsb
and
jmp
jmp
popf
lea
mov
jge
push
mov
add
imull
adc
pushf
jle
ret
lcall
out
lahf
mov
sub
inc
mov
add
call
enter
pop
jo
fsubl
pop
pop
popf
test
inc
inc
inc
or
sbb
push
loop
sqrtss
call
cmp
jge
lahf
scas
scas
orl
push
mov
sub
sub
mov
dec
pop
cmc
mov
dec
pop
int
insb
mov
sub
movsb
jecxz
in
mov
dec
outsb
push
fsubs
push
inc
out
test
xchg
pop
mov
pop
int3
lret
enter
pusha
in
pop
aas
lret
sti
jge
push
loope
call
jle
repz
cltd
jmp
or
adc
push
cmp
ja
xchg
stos
scas
push
shl
outsl
iret
mov
repnz
in
inc
jle
scas
jmp
repz
jmp
sbb
das
inc
insl
adc
lods
or
int
jl
push
lock
js
std
movsl
int
movsb
push
push
in
add
cmpl
orl
insl
mov
cs
int
iret
adc
dec
push
in
lcall
aad
xor
outsl
repz
ret
into
and
cld
ljmp
test
xor
inc
call
pop
jmp
lods
sub
rorl
repnz
cmp
add
mov
je
lds
out
pushf
jg
jl
sbb
repz
push
pop
pop
shll
iret
pop
pusha
mov
lea
lods
and
or
stos
outsl
pop
xor
insl
sbbl
sub
mov
lahf
daa
mov
insl
mov
dec
popf
rclb
lock
xor
fidivs
push
sub
sbb
es
cmp
xor
and
cmp
adc
testl
add
or
jl
loopne
jmp
inc
jno
nop
loope
das
call
pop
xchg
mov
push
ds
and
pop
push
popf
sbb
push
mov
testl
add
sub
xor
ficoml
push
xchg
xchg
jl
das
daa
jl
sub
popa
sbb
push
fimull
test
cmp
js
dec
mov
or
inc
hlt
fldenv
shlb
mov
xor
packuswb
outsl
dec
cmp
lret
ret
scas
das
mov
ljmp
out
dec
lahf
cltd
and
mov
mov
dec
push
add
iret
jae
repz
jecxz
xor
out
fwait
in
call
xor
fisttpll
push
cmp
xchg
shrl
leave
cmp
or
jae
adc
mov
rep
insb
push
mov
mov
sbb
or
lea
rcrb
mov
in
push
rep
jecxz
insl
add
pop
addr16
iret
arpl
inc
or
popf
fldt
xchg
outsb
ss
pop
sub
or
and
insl
xor
shll
imul
push
lret
int
mov
jns
pop
pop
test
jns
cmp
subb
mov
ja
clc
lahf
and
and
mov
aas
inc
out
add
xchg
mov
jge
jmp
or
mov
jae
int
outsb
iret
into
lods
xor
cmp
and
xchg
rclb
out
or
inc
js
and
shlb
jbe
or
mov
stos
in
addr16
mov
jmp
cmp
ja
imul
adc
je
outsl
jg
mov
inc
hlt
or
sub
mov
sub
or
sbb
mov
cmp
fstpl
mov
jo
and
pop
adc
psrlw
cld
aad
test
subl
enter
or
xchg
je
clc
or
cmp
stos
std
outsl
jl
imul
xor
xor
xor
ret
int3
mov
cs
or
push
jge
pop
enter
pop
dec
aam
sub
int3
fimull
enter
cmp
cs
jge
jge
popf
stos
clc
out
jl
cs
jo
int3
iret
jbe,pn
mov
dec
mov
rcrb
loope
jge
xchg
in
repz
xor
adc
jnp
jmp
and
insb
dec
movsl
pusha
lea
xor
push
push
stos
jle
mov
insb
mov
lods
mov
or
xor
sub
subb
aad
aas
insl
or
rorl
addr16
jecxz
push
xchg
mov
stc
push
mov
or
and
pop
push
add
mov
push
xchg
cmovl
push
ss
adc
add
push
jmp
sub
xlat
adc
mov
push
addr16
xchg
dec
movsb
mov
insl
repz
push
jecxz
dec
cmc
push
cs
push
pop
insl
in
mov
pop
or
pop
jmp
adc
and
jmp
lea
addb
adc
out
hlt
sub
lods
dec
movsb
pop
pop
pop
lahf
sbb
std
mov
enter
adc
pusha
popa
movsl
es
fdivl
insb
and
mov
out
jle
lahf
in
out
push
rcr
cmc
int3
iret
lret
out
ret
sub
xor
add
cmp
pushl
lahf
or
mov
data16
pop
jle
adc
jecxz
sub
xor
out
iret
test
decl
mov
test
add
mov
lret
fidivrl
mov
mov
adc
mov
pop
lods
lea
adc
push
js
mov
push
adc
out
inc
jg
daa
movsl
jo
pop
outsb
ret
adc
imul
jle,pt
iret
jo
mov
outsb
in
pop
jb
jl
leave
jecxz
dec
out
popf
iret
dec
pop
mov
es
push
jl
mov
mov
cmp
dec
insl
aas
mov
adc
xor
out
push
fldcw
dec
and
add
add
cmp
mov
ror
out
mov
mov
je
mov
push
int3
iret
dec
sub
mov
cld
jecxz
ljmp
insl
jbe
insl
popa
loope
pop
popf
dec
pop
mov
mov
push
js
cmp
push
out
pop
jmp
fildl
js
je
push
addr16
xlat
aam
dec
push
jle
xlat
or
sub
repz
or
fistps
sbb
cmp
or
sbb
shlb
js
nop
sub
stos
sub
fidivl
loope
js
sbb
adc
jbe
mov
jl
jae
cmpsl
lahf
cmp
lret
icebp
fstps
insl
frstor
int
inc
cmp
lea
neg
mov
pop
adc
or
add
call
in
jns
mov
lods
dec
ret
enter
mov
dec
adc
or
je
decb
sub
pop
mov
imul
imul
pop
jl
fdivr
sub
or
ficomps
mov
cltd
aas
lea
add
and
rclb
sti
jge
mov
push
sub
mov
and
leave
lods
int
stos
outsl
bswap
sbb
adcb
jge
fbld
sti
mov
in
cmp
je,pt
insb
scas
push
ffree
adc
sub
mov
xchg
sbb
and
mov
pushf
push
push
inc
pop
or
add
divb
clc
lret
js
or
push
pop
call
mov
jmp
mov
invd
push
hlt
inc
repz
sub
lcall
adc
lahf
push
scas
inc
std
cmp
sbb
mov
dec
jno
dec
jge
jecxz
jecxz
or
dec
imul
mov
jmp
push
scas
mov
lahf
insl
out
imul
fnstsw
mov
adc
and
in
push
test
cwtl
lea
out
dec
cmp
sub
sub
mov
jle
pop
cmp
jg
xor
aas
adc
lahf
ja
pop
insl
mov
movsb
psubusw
adc
push
dec
pusha
sarb
sti
push
outsl
jl
fisttpll
add
xor
mov
xor
and
sbb
lahf
pop
clc
std
jge
jmp
add
scas
or
popf
dec
loope
jg
cmp
addr16
fisttpll
outsl
xchg
sub
xlat
nop
xor
pop
lods
cmp
stos
mov
inc
ficoms
inc
sub
xor
adc
aas
sbb
cmpsb
pop
push
push
jmp
or
fidivl
dec
xor
jg
xor
sbb
jecxz,pt
or
and
adc
dec
push
adc
dec
cli
cmc
cld
in
pop
mov
movsb
or
adc
insl
xor
imul
mov
push
pop
cld
outsb
jo
shll
sbb
and
push
jge
shl
adc
frstor
cmp
dec
push
adc
stos
add
rclb
jl
mov
xor
repz
mov
or
or
das
ds
push
inc
mov
add
scas
push
iret
add
add
sub
push
mov
lods
leave
push
ljmp
aas
das
shrb
lea
scas
push
int
insl
xlat
mov
or
adc
aas
jecxz
xlat
cmp
lods
addr16
pop
jo
in
or
into
pop
out
jl
mov
outsb
ds
int
or
rorl
ss
xor
adc
mov
mov
push
sti
push
ret
cmc
or
lods
js
lods
dec
inc
and
push
mov
push
clc
sbb
mov
aad
in
pop
and
sub
jne
mov
add
mov
std
pusha
repz
popf
mov
mov
sub
addr16
pop
sub
jl
cmp
rcrb
sub
mov
cmovae
mov
mov
pop
shlb
pop
and
mov
mov
pop
lea
jge
jns
inc
fsts
rorl
repz
xor
adc
push
hlt
imul
cwtl
or
dec
out
xor
push
xchg
xor
loop
outsb
add
jge
or
cld
hlt
mov
pushf
fstpl
cmc
shrl
inc
push
leave
pop
xor
call
outsl
inc
inc
lea
jl
aam
cld
push
sbb
outsb
sub
xchg
sbb
and
xlat
adc
out
cltd
sub
dec
mov
popa
and
mov
imul
push
push
dec
adc
dec
lea
mov
cmp
pop
pop
push
cmp
aaa
dec
dec
adc
xor
fldl
dec
jp
mov
or
sahf
mov
ror
mov
push
sti
add
add
aad
jl
pop
cli
mov
sbb
insb
addr16
jo
popf
lock
sbb
sub
jl
xchg
or
add
dec
out
cmc
outsl
popf
dec
je
cli
inc
call
cld
les
cmp
iret
std
inc
sub
add
jl
stos
ss
fistpll
adcb
or
js
fsubrs
lods
dec
jl
das
or
inc
cltd
jle
call
jmp
cli
xchg
es
sbb
pop
sbb
flds
iret
jge
out
ds
bound
jle
jb
mov
outsb
pop
in
inc
ret
js
out
hlt
add
or
scas
clc
and
inc
sbbl
insb
and
cmpsl
aas
fmuls
insl
test
mov
jecxz
int3
rolb
sbb
je
cli
mov
pop
hlt
loop
dec
xchg
iret
push
sbb
bound
jnp
outsb
and
sbb
pop
add
pop
mov
stos
fnstsw
and
push
por
das
iret
mov
in
xor
cltd
je
addr16
aas
dec
in
cmp
jl
lods
and
sbb
mov
imul
cmpsb
jno
inc
xchg
decl
xor
inc
es
int3
stos
sbb
adc
jae
xor
jecxz
adc
dec
dec
mov
int
test
push
call
add
adc
out
arpl
dec
pop
push
xchg
mov
pop
outsl
adc
cld
add
idiv
dec
mov
pop
cmp
out
xchg
insl
mov
sbb
cmp
jge
pop
pusha
outsl
ds
lahf
iret
inc
xor
int
popa
mov
das
call
sbbl
cmp
jecxz
push
xor
sbb
popf
mov
jmp
lcall
imul
dec
orl
mov
repz
cmp
lahf
mov
loop
jg
or
jecxz
jl
iret
xor
das
add
jmp
push
repz
mulb
cmp
fists
jl
loopne
fwait
pusha
pop
lea
in
jne
insb
adc
mov
cld
outsl
sub
xor
lock
out
push
insb
jmp
insb
push
sub
lods
jge
lock
adc
mov
aas
mov
jg
dec
add
mov
fildll
decb
jge
stos
jl
jl
jl
inc
std
div
addr16
popf
push
dec
cwtl
lods
insl
or
das
mov
xlat
outsb
xchg
hlt
jmp
jg
cmp
xor
imul
mov
cmc
inc
mov
mov
push
xor
lahf
push
mov
mov
add
push
out
pop
repz
xor
cmp
dec
lods
lods
fists
movq
xor
xchg
call
add
mov
in
fstpl
xchg
cmp
sbb
mov
jae
stc
outsb
sub
lahf
sub
call
pusha
sbb
dec
and
mov
aam
pop
ljmp
repz
push
dec
sub
mov
aaa
dec
cmp
push
decb
xchg
dec
xor
imul
pop
push
fistpll
jne
and
dec
outsb
addr16
dec
rcl
or
pusha
inc
xor
add
js
iret
and
xchg
lods
or
or
pop
sbb
rcrl
ret
xor
es
cmp
mov
or
pop
call
outsb
push
inc
adc
pop
xor
sub
jmp
mov
push
cs
into
lock
xor
mov
xchg
repz
lods
aaa
mov
inc
ljmp
lock
cmp
add
inc
test
std
shll
pusha
sub
pop
cwtl
jmp
lods
push
insl
repz
hlt
mov
fsubrl
lods
cmpl
insb
add
pop
mov
in
cmp
mov
xor
std
out
or
out
sbb
pop
jecxz
and
jle
dec
inc
xor
pop
sub
clc
fistpll
jo
outsl
xlat
fisttpll
xchg
jmp
xor
push
loop
sbb
test
mov
push
pop
inc
pop
movsb
icebp
pop
pop
sbb
and
pop
out
xor
jg
std
adc
in
pop
imul
loop
jecxz
sub
loopne
pop
pop
outsb
mov
mov
ror
or
cs
fisttpll
outsl
jns
pxor
mov
and
int
and
dec
mov
lea
xor
mov
cld
es
das
add
jle
pop
add
pop
rorl
imul
adc
iret
sbb
mov
inc
cmp
out
adc
pop
sbb
int
subb
into
xor
push
dec
adc
ds
jmp
push
out
mov
mov
push
add
scas
adc
dec
pop
decb
pusha
or
lret
std
int
fnsave
fldl
lods
ja
int
add
jle
xor
call
mov
ss
pop
sarl
jl
shrl
cmp
addr16
outsl
inc
out
add
lds
push
pushf
pop
cmp
scas
add
js
sub
or
out
stos
add
pop
scas
bound
push
pop
dec
std
and
sbb
insb
jl
mov
ja
jmp
ds
adc
dec
pop
dec
jmp
outsb
dec
es
lea
outsb
jge
add
popf
sbb
adc
mov
arpl
in
jecxz
add
push
push
jecxz
inc
stos
xor
or
fwait
insl
in
nop
repz
das
mov
or
or
or
frstor
insl
add
std
mov
pop
lods
fistps
repnz
dec
cs
inc
mov
adc
ljmp
in
cmp
sub
push
adc
pop
adc
out
lahf
or
mov
int3
push
adc
add
or
lahf
pop
in
add
shll
inc
pop
int3
jle
sbb
daa
insl
fstps
repnz
jecxz
in
inc
dec
mov
mov
mov
jmp
std
or
pop
or
ficomps
or
dec
xchg
movsb
ja
jge
pop
pop
sub
popf
scas
iret
inc
push
add
dec
mov
mov
xorl
fwait
scas
and
lods
stos
fcompl
push
mov
roll
or
push
xchg
jl
sub
sbb
lea
stos
inc
subl
inc
pop
sarl
sub
enter
iret
call
arpl
dec
adc
adc
cmpsl
das
out
lods
fdivr
jge
ds
dec
adc
sub
cld
js
enter
jmp
and
fstpl
ficoms
mov
mov
ljmp
mov
outsb
je
sub
mov
insl
out
outsb
sbb
fnsave
pusha
sbb
das
mov
imull
iret
outsb
push
pushf
adc
or
dec
push
outsl
sub
mov
dec
iret
dec
dec
movsb
adc
and
xor
sub
cmp
mov
fisubrs
dec
jge
jo
iret
add
pop
je
insb
and
add
insl
insb
sub
inc
mov
mov
iret
mov
adc
or
lahf
enter
in
aas
incl
sarl
outsb
push
daa
inc
sub
sub
hlt
mov
fildll
dec
inc
xor
jl
sbb
iret
jecxz
decb
cld
out
jmp
insl
sub
fisttps
mov
fdivrl
rdmsr
shl
mov
push
in
sub
xchg
mov
or
jecxz
inc
mov
repz
jno
dec
jg
scas
jmp
in
jne
inc
int3
fs
stos
mov
jmp
jae
pop
pop
push
adc
dec
lahf
sarb
out
adc
das
lods
inc
or
mov
xor
xor
or
pop
rclb
or
inc
dec
js
cmp
cmp
xor
subl
inc
xor
push
xchg
xchg
add
jae
jmp
mov
sbbb
push
inc
sbb
sbb
inc
mov
mov
lods
dec
std
mov
push
or
ljmp
dec
push
sub
and
xchg
shlb
jecxz
mov
sub
ja
loop
and
je
insl
lahf
lea
ret
jecxz
in
test
mov
pop
aas
insl
push
and
sbb
mov
push
adc
push
cmp
lods
adc
cmp
call
shll
inc
es
call
push
insb
jo
loope
lea
addr16
adc
jmp
pusha
fdivs
cmc
pop
mov
aad
filds
data16
dec
sub
mov
rorb
les
mov
int
push
mov
call
sbb
push
mov
int
sbb
mov
mov
test
mov
xchg
pop
pop
sub
add
pop
sub
mov
repz
mov
adc
pop
nop
xor
outsb
outsb
lods
rep
pop
push
insl
dec
lea
inc
pop
rcrl
fdivrl
repnz
ds
fistpll
add
dec
or
ds
or
push
pop
sbbl
mov
jmp
out
dec
mov
ret
fistps
fiaddl
and
sbb
push
mov
imul
out
clc
sbb
pop
jle
cmc
std
or
pop
popf
xor
pop
mov
add
ds
fstpt
lahf
iret
sarl
pop
orb
fbstp
sahf
jl
cltd
adc
xor
call
test
or
and
std
inc
cmp
pop
iret
sub
lods
stos
mov
mov
cld
in
adc
decb
js
int
inc
sub
insb
repz
arpl
or
pop
dec
xchg
fisttpll
popf
jmp
push
push
incl
pushf
cs
mov
inc
or
sub
jo
pop
sbb
add
in
mov
or
movsb
ljmp
mov
sub
pop
sbb
mov
repz
dec
repnz
push
inc
cmc
pop
out
jp
sub
cmp
pop
mov
pop
jle
std
dec
ja
in
xor
nopl
dec
loop
jae
mov
in
dec
dec
nop
rolb
outsb
repz
push
cli
lods
lock
or
pop
loope
out
jle
loop
outsb
xchg
pushf
dec
aaa
jae
inc
add
add
arpl
addr16
pusha
insl
sub
daa
adc
je
dec
jg
fs
sub
push
or
ret
jo
inc
xorl
inc
and
sbb
rorl
xor
pop
push
push
insl
stos
shrl
sbb
repnz
jge
int
mov
xor
out
iret
clc
dec
ds
addr16
aas
cld
filds
pop
imul
xchg
cmpsl
pushf
pusha
push
sbb
int3
lret
mov
das
adc
adc
insl
adc
or
sub
cmp
rol
sbb
movsl
lea
cld
addr16
outsl
inc
fildll
pop
sub
clc
mov
jae
out
test
dec
in
pop
fistl
dec
jecxz
pop
jae
loopne
in
push
imulb
push
xor
aas
mov
repz
pop
mov
mov
mov
mov
jecxz
ds
or
add
in
cmp
or
mov
push
fbstp
pop
inc
nopl
lods
push
aas
pop
mov
inc
repz
jb
dec
out
lret
jmp
addr16
mov
pop
in
insl
pop
add
inc
push
push
rclb
pop
inc
daa
shr
inc
outsl
dec
cmp
or
xor
fwait
inc
mov
bnd
fnstsw
lea
rclb
sub
adc
rcrl
mov
int
adc
push
sub
out
outsl
es
xor
ret
push
rcll
div
lahf
jmp
lods
cmp
pop
pop
pop
mov
cmp
mov
xor
dec
into
imul
lea
aam
popf
scas
adc
pusha
pusha
fildll
cld
xor
xor
cmp
popf
adc
mov
ds
outsb
out
pop
lods
pop
fldl
sub
insb
cmp
mov
stos
call
jmp
jo
adc
add
or
sub
sub
std
xor
and
popa
pmulhuw
and
ret
int3
int
jl
les
mov
push
xlat
sub
clc
pop
pop
mov
in
pushf
lret
dec
adc
aas
insb
xor
pop
int
lods
addr16
fbstp
mov
mov
lds
mov
popa
push
sti
fwait
push
jg
cmc
das
pop
mov
jge
jge
divl
dec
aaa
push
arpl
pop
adc
mov
dec
mov
call
je
jmp
int3
mov
jge
xlat
mov
lahf
inc
dec
sbb
repz
mov
aas
outsb
or
paddb
aas
shrb
loopne
xchg
push
shl
sub
adc
sbb
cs
aas
testl
jle
push
mov
es
es
rcll
xor
imul
sbb
andb
mov
cltd
adc
iret
mov
push
clc
lcall
pop
cs
pop
pop
mov
cmp
loopne
cmp
inc
pop
outsb
sbb
aas
and
sbb
mov
push
fs
add
dec
push
dec
mov
enter
cmpsl
push
jg
push
into
sarb
adc
cmp
xchg
out
fbstp
lea
cltd
mov
jmp
cmp
mov
scas
or
sarl
xor
inc
or
and
sbb
ror
mov
ds
insb
das
fists
ja
std
call
pop
xchg
sbb
ss
mov
das
mov
stos
lret
rcrb
inc
lea
outsb
dec
hlt
jl
clc
mov
xor
and
sbb
in
arpl
pop
pop
pop
hlt
pushf
insb
psubsw
mov
std
add
or
and
sbb
into
les
mov
adc
jge
jle
dec
rorb
js
push
dec
out
cs
push
outsb
loopne
lea
xor
adc
or
fstpl
sub
adc
pop
in
inc
std
cmp
pusha
pop
insl
sub
fildll
pop
scas
js
negb
ss
insl
popf
inc
into
ja
faddl
dec
aas
cltd
out
scas
leave
jecxz
dec
mov
dec
sbb
ljmp
movaps
cmp
or
and
pop
jle
iret
inc
scas
daa
pop
push
add
push
testl
scas
cmp
fstpl
std
in
lods
or
addl
sub
dec
or
cmp
setg
push
insl
adc
aas
test
lock
decl
scas
rclb
out
push
insb
or
dec
dec
and
mov
out
inc
jae
mov
pop
add
dec
das
call
es
xor
add
push
jnp
inc
psrad
ja
ret
pop
fisttps
and
aam
jecxz
repz
inc
xor
js
dec
push
lods
inc
popf
or
push
pop
or
loopne
hlt
pusha
int
in
ucomiss
lcall
mov
dec
adc
pop
imul
mov
cmp
inc
out
push
xchg
dec
rep
jmp
jo
pcmpgtd
or
mov
jg
out
xchg
addr16
lea
add
das
cmp
ds
lret
ds
pop
mov
mov
dec
cld
ja
or
jmp
call
loope
rorl
enter
outsb
mov
push
inc
lock
dec
push
jge
call
repz
repnz
das
xchg
jle
lahf
jo
insl
sti
push
inc
jmp
jecxz
push
cld
cli
addr16
ljmp
jo
push
and
pop
loop
mov
mov
add
gs
mov
das
or
mov
out
rol
dec
mov
pop
dec
inc
mov
mov
jo
mov
popf
jg
cmp
scas
lods
xchg
xchg
and
jp
in
idiv
mov
outsb
sub
enter
ja
xor
dec
lods
mov
filds
insl
push
xor
ret
out
mov
dec
push
sub
loope
xor
ljmp
insl
fnsave
iret
sbb
xchg
std
or
fidivl
js
push
das
mov
mov
scas
mov
xor
sbb
dec
int
je
enter
loop
or
xor
out
mov
sbb
lret
out
aam
push
pushf
js
fistpl
idivb
adc
popf
cmp
insb
fstl
inc
iret
mov
adc
push
jecxz
mov
clc
push
cmp
out
cmp
and
adc
in
jge
jmp
mov
in
out
fildll
iret
daa
dec
push
push
aas
sub
push
sbb
or
stos
add
out
outsl
aad
or
add
lods
insb
pop
hlt
xor
or
mov
push
jmp
mov
fldl
scas
push
addr16
xor
adc
inc
push
mov
xchg
cli
xor
cwtl
out
in
mov
stos
jle
testl
pop
int
add
out
mov
adc
sub
inc
into
mov
push
outsb
mov
movsb
aaa
add
div
in
jg
movsb
pop
lcall
push
into
ljmp
popa
insb
testb
push
or
push
cmpsl
imull
jg
mov
lods
sbb
or
push
fs
mov
aad
xor
add
mov
fs
sub
adc
in
out
je
or
call
scas
sub
loope
in
push
mov
and
fsubr
mov
adc
add
std
push
enter
push
dec
mov
push
mov
insb
jecxz
add
sbb
insl
dec
insl
les
jge
mov
adc
push
ljmp
jecxz
push
jl
sbb
js
addr16
cmpb
cmp
sub
insl
dec
out
aam
mov
loop
mov
addr16
movsb
scas
clc
iret
das
xchg
mov
or
xor
gs
mov
mov
outsl
dec
repz
push
adc
jbe
mov
dec
cmpl
mov
cs
sbb
ret
les
dec
inc
push
xchg
rcrl
inc
inc
sub
das
insb
jl
scas
out
outsb
test
repz
scas
push
adc
sub
mov
icebp
cs
repnz
lods
stos
mov
insl
adc
jle
mov
stos
or
mov
repz
mov
cld
xchg
jecxz
xor
and
lds
add
sbb
mov
jecxz
lea
in
mov
cmp
pusha
pavgw
mov
out
addr16
adcl
js
popa
sbb
sbbl
cmpsl
rorl
mov
mov
imul
js
bswap
sarb
cmpsl
fdivl
popa
mov
push
ljmp
mov
call
pushf
js
jns
aas
jl
jecxz
push
push
enter
in
arpl
mov
fdivrl
dec
mov
pop
xchg
sub
push
repz
xor
outsb
push
js
popf
call
cmp
push
mov
push
add
xchg
insb
addr16
adc
insl
mov
push
mov
xor
js
hlt
add
mov
int
lea
leave
sub
adcb
adc
mov
dec
outsl
sbb
dec
stos
xor
stos
iret
je
int
adc
bndldx
lahf
push
adc
adc
ja
popf
mov
popl
add
mov
mov
iret
jg
movq
sbb
pop
loop
insl
inc
shufps
pop
iret
fstpt
and
adc
pop
push
pop
shlb
fs
das
mov
pop
int
xchg
mov
sbb
jae
push
sahf
loop
pop
psrlw
outsb
clc
cli
shrl
repz
out
push
jl
insb
ret
mov
mov
in
xor
iret
cmp
das
dec
aam
cltd
dec
insl
cmp
push
xor
mov
and
call
jno
repz
out
in
adc
enter
inc
lea
xor
std
pop
jp
sub
inc
fmuls
push
cs
push
jb
aas
add
add
mov
inc
push
outsb
outsb
fstl
or
cmp
out
js
outsb
adc
iret
sub
xor
sbb
in
xor
iret
mov
add
jle
xchg
sub
int
push
jg
loopne
jbe
clc
push
scas
sub
cmpl
repnz
in
pop
mov
jl
jecxz
popf
push
imul
and
mov
int
sbb
xchg
jle
mov
or
adc
sub
lock
sub
mov
and
pop
xchg
decl
cmp
int
insb
rcll
jl
fnstsw
add
outsb
incb
dec
repnz
dec
stos
aad
sarb
das
movq
inc
into
stos
rorb
scas
add
scas
or
out
push
jmp
stos
adc
arpl
or
jle
scas
push
add
adc
adc
pop
scas
push
and
std
ja
cld
mov
or
jl
daa
mov
shrl
adcl
mov
and
sbb
js
out
movsl
jge
lock
insb
pop
lea
jl
adc
mov
pusha
cmp
push
sbb
lock
iret
js
jge
mov
jae
and
mov
sub
aaa
fs
cwtl
mov
xor
divl
adc
in
jecxz
movsl
dec
jns
inc
push
push
nop
jb
stos
dec
sub
aaa
insl
adc
mov
xor
jecxz
or
push
addr16
pop
sbb
out
iret
imul
cld
repz
in
fdivrp
lea
add
scas
mov
ss
ljmp
inc
iret
lahf
in
negl
cmp
push
in
xchg
outsb
jecxz
ss
cld
pop
xor
icebp
nop
sub
or
jle
mov
aam
gs
inc
mov
iret
xor
add
std
sub
outsl
push
dec
fstpl
jo
fcompl
insl
ds
call
push
xchg
jns
inc
push
sub
dec
in
add
pop
scas
jg
aam
cmpb
mov
mov
pop
int
scas
test
push
inc
cmp
fisttpll
cmpb
dec
outsb
jmp
addr16
xchg
pusha
jne
aam
iret
jl
sar
in
repz
outsb
sub
and
pop
nop
sbb
loopne
outsb
mov
pop
or
sub
adc
hlt
pop
sbb
dec
adc
in
adc
xor
outsl
sub
js
filds
cmp
add
jecxz
pusha
clc
outsb
jle
mov
pop
pop
jo
or
pop
push
cld
loopne
cmp
stos
fcomip
sahf
dec
or
push
push
sub
push
xor
fildll
mov
dec
sahf
jmp
sbb
push
xchg
stos
jmp
popa
push
cmp
xor
stos
movsl
jecxz
das
mov
orb
cmpsl
push
mov
jle
mov
pushf
mov
push
lcall
or
mov
or
pop
outsb
push
and
outsl
scas
dec
cmc
pop
push
cmp
sub
mov
cwtl
insl
cs
mov
in
adc
lahf
popf
dec
lods
add
dec
sub
sbb
dec
push
jo
out
cmpsl
std
sub
dec
pusha
pop
push
sbb
or
add
lahf
repnz
movsb
inc
int
pop
mov
push
lea
outsl
mov
call
or
lods
adc
pop
jb
push
adcb
pusha
outsb
push
insl
orb
mov
imul
shr
scas
push
sbb
popf
xlat
sarb
jge
cs
dec
outsb
pop
cbtw
cli
decl
lods
aas
push
insb
jmp
int3
lcall
mov
insl
xor
adc
outsb
negb
in
sti
jecxz
cmp
xchg
xlat
add
stos
insl
dec
mov
jl
lods
pop
add
sbb
iret
and
fnsave
mov
insl
lock
repz
inc
pop
mov
es
test
mov
push
loop
jns
push
inc
or
cld
cmpsb
outsb
xchg
push
dec
push
jecxz
push
rcll
sub
addl
lods
dec
mov
stos
fs
jae
orl
rcrl
arpl
and
mov
sbb
aas
adc
das
pop
push
iret
push
pop
jle
mov
jo
xchg
in
pop
movsb
mov
in
das
gs
in
push
lock
mov
insb
frstor
ds
jmp
push
out
or
or
ret
insl
push
lcall
xor
aad
mov
cmp
sub
push
stos
ljmp
push
push
add
pop
fistpll
std
pop
cmp
sbb
lahf
les
dec
inc
lea
aas
lds
out
mov
push
pop
repz
or
cmp
or
push
jg
mov
test
pop
addr16
jge
cmp
filds
insb
insl
jae
lods
rcrl
into
clc
jl
outsl
fisttps
mov
out
mov
test
inc
pop
pop
addr16
jecxz
jbe
mov
movsb
inc
and
iret
inc
sub
lahf
add
push
jecxz
insl
or
mov
push
inc
sub
inc
idiv
xor
pop
iret
push
lods
pop
sbb
cmp
and
or
out
fildll
outsb
pop
ror
loope
fisttpll
mov
call
sub
addr16
adc
mov
push
adc
test
js
mov
dec
push
adc
sbb
push
pop
insl
repnz
push
xor
push
xor
aam
pop
push
aas
sub
das
mov
cmp
sbb
mov
popf
pop
cmc
mov
insl
sub
pop
gs
cld
sbb
insl
jge
jg
out
mov
dec
sbbl
mov
cltd
fnstsw
jns
andl
mov
fmul
push
mov
rorl
adc
in
cmpsl
or
bound
in
and
jp
xor
int
mov
mov
bound
mov
ds
or
cmp
daa
lea
scas
jg
jl
pop
push
pop
or
lahf
notl
das
lods
dec
mov
rorb
stos
pop
cld
dec
jecxz
rolb
mov
xchg
lods
jle
testl
lea
out
shlb
xor
fimull
ljmp
add
jbe
lea
xor
aam
sub
inc
inc
jg
mov
sbb
outsb
out
pop
int
inc
out
aad
lea
jmp
fisttps
and
ss
jmp
push
repz
stos
add
push
enter
in
les
or
outsb
xchg
dec
or
out
push
inc
and
add
orl
out
sbb
xor
pop
in
lods
dec
or
mov
mov
mov
test
push
xchg
rorl
add
dec
js
dec
std
sub
cmpsb
shr
loop
adc
mov
add
jle
xor
ret
pop
fnstsw
add
js
out
hlt
fbstp
pop
aas
loope
in
lock
jecxz
jl
cld
push
fists
mov
push
pop
dec
mov
out
jmp
orl
pop
lret
pop
loopne
decl
xor
or
cld
or
fdivrs
popl
mov
jo
fisubrl
jmp
lods
add
insb
popf
sbbl
mov
add
insl
jmp
enter
sbb
or
sbb
xchg
out
hlt
push
pop
popf
test
insl
add
jle
repnz
push
pop
shrb
dec
and
sbb
stos
inc
or
mov
and
cs
ljmp
or
mul
scas
or
pop
pop
jae
push
push
pmaxsw
xchg
jl
dec
sbb
dec
outsl
jnp
das
cmp
fildl
fisttpll
icebp
outsb
mov
lods
sub
hlt
subl
push
outsb
sbb
out
jge
cmp
in
popa
xor
xchg
mov
addps
mov
and
push
mov
cli
adc
and
das
pop
std
insb
pop
mov
dec
pop
cmp
xor
adc
xor
add
insl
in
mov
ds
js
adc
or
and
stos
sbb
inc
mov
hlt
movsl
dec
mov
dec
push
jne
jge
aas
std
ds
nopl
into
mov
push
cmp
cmpsl
movsb
or
push
sbb
icebp
iret
js
bound
pop
in
stc
push
cltd
pushf
fisubrs
jge
pop
orl
xor
testb
dec
pop
mov
xchg
mov
push
fldcw
scas
int3
dec
sbb
stc
mov
jne
mov
inc
out
xchg
leave
mov
inc
jmp
xchg
in
and
adc
insl
jl
test
cli
popf
mov
cmp
add
leave
stos
in
dec
mov
mov
ret
loope
int
fcomi
rolb
push
inc
cmpsb
aad
add
cs
or
dec
movsl
ds
xchg
fwait
mov
insb
push
adc
mov
xbegin
sar
cmp
lahf
cli
sti
repz
pop
and
push
repz
sbb
lahf
pop
in
test
mov
loope
addr16
stos
sub
js
and
lea
pop
cmc
leave
mov
int
fcom
pop
mov
sbb
iret
mov
lahf
cs
push
add
das
roll
add
and
push
mov
mov
aas
adc
loopne
outsl
filds
cmpsl
clc
push
or
jl
aam
jne
xor
mov
hlt
mov
scas
outsb
cmp
or
sub
int
lea
subl
aas
insb
repz
scas
out
sub
adc
jbe
xlat
or
dec
cmp
add
test
filds
push
push
loope
int
push
in
repz
jge
and
push
push
and
inc
std
stos
sarl
aaa
jge
in
add
jecxz
test
in
or
mov
pop
jns
das
mov
mov
push
dec
scas
jmp
pusha
fsubrs
mov
or
jg
mov
scas
mov
mov
popa
jg
xor
movsl
add
outsl
and
or
inc
testb
jmp
popa
sub
nop
xor
and
jle
cs
pop
repz
clc
leave
push
inc
and
out
jmp
push
cmpsl
fisttpll
or
fsubl
sti
pop
mov
insl
mov
mov
aas
aas
jg
cmpps
dec
pushf
subb
popf
cltd
add
out
cmpsl
in
adc
ljmp
je
das
movhps
push
test
and
sub
xor
sbb
and
mov
mov
iret
pop
push
add
sbb
enter
or
in
iret
jge
mov
js
sub
notl
dec
push
push
inc
outsb
fwait
cmpl
jb
stos
pop
int3
ret
inc
jae
pop
jge
add
cmp
sbb
nop
out
add
push
push
push
add
mov
insb
loop
leave
popf
pop
adc
cmp
push
pop
pop
push
popf
int
or
out
jg
add
push
inc
sar
or
cmpsl
adc
dec
js
push
outsl
xchg
pop
push
xor
test
add
dec
int3
popf
or
push
push
arpl
mov
mov
push
dec
outsb
sub
lods
sti
dec
adc
xchg
xor
clc
push
adc
sub
dec
test
jmp
aaa
outsl
adc
incl
and
pop
testl
jno
jb
pop
in
bnd
push
cmovg
ds
orl
fimuls
lods
pop
pop
popf
lea
ss
cmp
fwait
xchg
inc
pop
mov
call
sbb
inc
adc
lods
push
xor
push
addr16
outsb
ja
jl
lock
mov
push
nop
js
adc
dec
call
dec
and
stos
fbstp
lods
cmp
aas
pop
cli
mov
das
out
mov
jmp
lret
or
loope
les
mov
scas
dec
xchg
js
je
jbe
js
mov
outsl
adc
sbb
push
push
push
mov
add
mull
sarl
mov
hlt
sbbl
jp
jbe
std
and
inc
outsb
addr16
mov
mov
mov
shl
ffreep
mov
fisubrs
inc
rcll
sub
iret
pop
mov
shlb
sbb
mov
sub
pushf
call
adc
hlt
outsl
popf
aas
lahf
pop
in
cmp
iret
and
pop
mov
icebp
sub
inc
loope
pop
lahf
add
xchg
push
cli
mov
call
cmp
mov
sar
mov
inc
push
pop
pop
or
pop
adc
out
xor
adc
je
je
mov
fcomip
pop
lods
lcall
pop
fisttps
sub
push
xor
stos
add
aas
ja
outsb
cli
lcall
das
jge
dec
or
inc
arpl
idivb
dec
mov
sbb
mov
inc
sub
clc
push
scas
mov
jle
shrl
sarl
mov
or
dec
and
imul
shrl
mov
cmp
mov
adc
sub
ljmp
inc
cmp
or
adc
jle
test
mov
mov
and
rcrb
in
add
mov
pinsrw
cs
cmc
sbb
lock
jle
outsb
in
sbb
ljmp
jge
xor
pop
rclb
out
jo
ljmp
repnz
cmp
xchg
aam
add
insb
xor
pop
add
sub
mov
jg
dec
inc
sub
jle
lods
pop
pop
add
aas
or
scas
insl
inc
push
sbbl
movsl
push
add
lods
dec
add
call
mov
inc
aaa
aam
and
fldl
subb
popf
repnz
mov
and
mov
lock
push
comiss
dec
add
addr16
and
jbe
adc
sbb
or
insl
lea
je
dec
pop
in
outsb
punpckhbw
dec
add
ds
inc
int
test
out
jecxz
xor
cmp
enter
xor
and
inc
repnz
push
lock
pop
ds
mov
sub
pop
mov
or
xor
shl
sbb
push
sahf
int
js
dec
dec
push
lret
sub
cmp
xor
add
repz
outsl
orl
in
mov
inc
decb
popf
lods
pop
xor
sbb
dec
pusha
or
mov
and
js
push
jb
pop
mov
xor
jo
out
xor
sub
pop
jns
shlb
insl
cmp
call
sub
xchg
sbb
dec
insb
iret
xor
sbb
inc
notb
cmpsl
repnz
jle
nopl
addr16
fstpl
stos
ds
and
stos
and
call
push
jmp
mov
je
jmp
nop
and
ret
push
scas
mov
pop
out
loop
popf
inc
fldt
insb
pop
and
leave
pop
or
sbb
out
or
jmp
loop
movq
call
mov
add
mov
insl
das
jmp
in
lea
cmp
cld
add
cmpl
jge
inc
or
insb
pop
es
sarl
jg
ljmp
push
std
xchg
addr16
cmpl
xor
jnp
js
enter
sub
iret
mov
add
jbe
js
push
push
sbb
enter
push
stos
stos
clc
sbb
or
enter
xor
cmp
std
or
xchg
mov
jl
jle
dec
lods
fldcw
lret
cwtl
test
adc
rcll
jle
sub
lahf
pushl
int
clc
jo
mov
pop
and
sub
pop
cmc
pushf
add
repz
or
stos
cld
mov
pop
bnd
ret
cmp
movsb
loopne
mov
int3
jge
cmp
scas
sub
jl
or
mov
dec
push
jmp
or
jge
aas
nop
adc
mov
nopl
xchg
out
add
daa
xor
mov
sbb
mov
cmp
inc
les
mov
push
push
cld
jo
das
jmp
lock
or
lods
std
das
insl
das
pushf
xor
ja
ljmp
mov
add
push
or
adc
stos
push
pop
pop
dec
js
push
add
jg
outsl
pop
incb
xchg
and
mov
xor
mov
cmp
sub
pop
xchg
xor
lods
push
mov
fidivl
fisubl
push
cmp
dec
or
or
xor
nop
mov
jle
fiaddl
fbstp
adc
out
push
cltd
js
jmp
out
sub
pop
orb
pop
push
or
and
mov
sahf
fbstp
xchg
push
jnp
push
jo
aas
insb
jecxz
decl
pusha
dec
fildll
cmp
stos
mov
pop
xchg
fidivrs
or
and
dec
pop
pop
add
inc
push
enter
cmp
test
push
jmp
adc
movsb
aas
cltd
adc
jb
lods
int
add
cmp
xor
and
mov
push
les
adc
mov
or
jle
in
aam
mov
lods
jo
popf
cmp
push
pushf
outsb
shll
push
aas
out
add
mov
push
mov
sub
in
xchg
dec
xor
xchg
ja
lods
xchg
pop
mov
xchg
adc
pop
loope
mov
cltd
pop
pop
subl
out
addr16
dec
fdivrl
lcall
fwait
and
outsb
ljmp
jecxz
mov
lods
cwtl
loope
mov
or
movsb
adc
pop
sub
in
insl
add
dec
in
sub
jmp
outsl
nop
jo
repz
iret
pop
push
jg
mov
stos
roll
cwtl
or
scas
and
aas
int
push
jge
in
cmp
mov
jns
jo
clc
pop
or
fdivp
dec
lahf
inc
mov
mov
fs
in
insb
dec
xlat
mov
mov
pusha
and
mov
bnd
or
push
out
pop
inc
paddusw
sbb
lock
mov
adc
mov
stos
int
jg
push
gs
in
fwait
or
add
lcall
sub
aam
orb
mov
inc
add
iret
repz
push
subb
cwtl
dec
mov
iret
mov
repnz
adc
subb
mov
push
cli
mov
lods
repnz
popf
in
mov
jecxz
imull
fsub
dec
sbb
push
cs
in
call
pusha
mov
not
jmp
stos
xor
js
insb
test
or
out
mov
push
lret
push
or
js
int
test
icebp
dec
sbbl
loope
jns
shl
pop
fucomp
jle
mov
mov
jge
inc
pop
out
push
xchg
jne
mov
dec
and
cmp
iret
popf
sbb
sbb
jge
pop
sbb
fstp
cmp
imul
jns
cmp
rorb
cmp
and
adc
std
pop
or
jle
mov
lahf
xchg
int
add
add
popf
pop
cmp
lahf
decb
out
decl
pop
sub
call
ss
xor
insb
sbb
iret
lea
dec
jge
lods
dec
push
ret
adcb
cmpsl
sbb
add
sarl
dec
ljmp
and
mov
jb
cltd
cmp
dec
stos
in
pop
int
lods
sub
lods
adc
cs
or
insb
dec
or
lock
pop
sbb
insl
adc
in
inc
das
sub
push
test
jg
dec
call
dec
push
adc
sub
jecxz
insl
jb
xor
xchg
int
lahf
and
jno
sbb
aas
xor
mov
out
xor
loope
fstpl
jecxz
cs
lahf
nop
sub
dec
outsb
or
scas
push
test
cmpsb
js
cmp
mov
jmp
pop
cmp
add
scas
in
bound
and
jecxz
pop
mov
addr16
sahf
repnz
or
dec
push
push
into
pop
xor
bndldx
out
idiv
pop
std
push
inc
sub
mov
dec
sbb
or
mov
sub
outsb
mov
sub
jge
or
in
hlt
lret
ja
lods
push
in
scas
and
dec
aaa
xor
stos
cmp
repz
popa
ljmp
pushf
int3
and
jl
lods
mov
insl
mov
pop
test
dec
int3
orb
sub
sub
scas
mov
aad
cmpsl
pop
mov
adc
mov
mov
stos
test
pop
mov
pop
test
fmull
jge
jle
pop
jnp
movsl
xor
jl
sub
pop
pop
iret
jnp
movsb
jbe
or
lods
mov
jl
in
test
enter
pop
jle
cs
cmp
testl
jbe
sbb
lods
jl
fcompl
aas
ficompl
pop
mov
push
loop
insb
ret
and
ret
push
psubd
pop
repz
lods
sarb
mov
into
lret
pop
hlt
insb
aas
das
sub
pop
push
and
mov
cwtl
cltd
scas
loope
sub
cmpsl
push
fsubl
pop
mov
popf
add
dec
mov
mov
cld
sbb
xor
mov
sbb
iret
mov
or
adc
jns
outsl
jae
pop
imull
repnz
lods
pop
lods
insl
outsb
std
mov
sub
insl
outsl
popf
inc
push
pop
cltd
loope
hlt
inc
iret
mov
bound
js
call
daa
xor
add
pop
or
xor
and
cmp
mov
scas
stc
bound
fisubs
in
bnd
pop
push
fdivrs
lock
lcall
out
lahf
pop
aas
pop
loope
pop
insl
cmp
into
mov
inc
mov
and
xor
out
adc
jl
cmp
push
dec
mov
xchg
in
iret
popl
sub
decb
adc
dec
outsb
jae
adc
jbe
sub
mov
xor
decl
inc
cs
push
out
enter
negb
sbb
push
add
mov
subl
cmpsl
arpl
insl
popa
mov
or
and
subl
pop
pop
xor
dec
int
repz
xor
jecxz
int
pushf
popa
mov
addl
scas
in
test
js
out
xlat
inc
rorl
lock
and
cmp
dec
out
mov
jecxz
push
jge
add
dec
mov
xchg
ljmp
pusha
cmp
or
push
out
jge
dec
insl
pop
mov
aaa
das
dec
lcall
mov
xor
outsb
jg
dec
pop
inc
mov
dec
or
jl
int3
fstl
popf
and
repnz
fidivs
adc
aas
push
xor
xchg
ds
vmread
subl
dec
insl
out
xchg
in
xor
jg
loope
or
incb
dec
cli
and
ret
das
call
sub
inc
jl
aad
pop
std
lea
int3
pop
das
pop
sarl
ds
adc
fisttps
adc
or
iret
push
adc
scas
push
pushf
bound
cmc
dec
pushf
jle
loope
insl
xor
addl
mov
pop
pusha
mov
fistps
or
xor
mov
sub
xor
out
int
js
aas
inc
sub
cmp
in
jg
out
mov
or
loope
js
push
pop
jge
lahf
fnsave
xor
dec
add
dec
jae
lea
outsb
into
mov
mov
cmp
dec
push
fdiv
pop
jl
cmc
movsb
push
in
sub
lods
and
popf
pop
loopne
out
add
lock
jecxz
mov
and
outsl
cmp
pop
mov
insl
xor
test
insl
repz
jl
adc
mov
jge
sub
in
rcrl
sub
inc
movsl
adc
or
into
in
inc
push
or
sub
push
lret
mov
ljmp
sarl
stos
and
outsb
hlt
inc
iret
mov
int
mov
adc
xlat
and
loop
mov
push
jle
scas
pop
cmp
inc
jle
jge
inc
fisubrs
inc
repz
sbb
jl
and
outsl
or
cltd
inc
pop
sbb
jg
mov
aas
dec
scas
sub
loop
mov
call
lea
mov
mov
nop
lods
scas
lods
mov
mov
sarb
dec
dec
std
or
cmp
jns
das
sbb
insl
adc
out
push
fnstsw
or
and
lret
stos
nop
dec
push
cmp
or
adc
cmp
mov
xor
mov
push
pop
das
outsb
std
inc
mov
out
or
in
mov
dec
xchg
sub
jecxz
lret
test
js
jno
add
add
pop
jg
adc
aad
xor
cld
and
lcall
or
icebp
push
sbbl
repz
sub
mov
pop
cltd
fldl
mov
js
pop
jbe
test
jecxz
out
clc
or
rclb
leave
jbe
loop
fmuls
ret
addr16
xor
fmuls
or
test
divl
sbb
jle
mov
cmp
xor
jmp
inc
loope
sub
and
xchg
mov
out
pop
outsb
incb
in
and
stos
mov
repz
inc
mov
repz
fnsave
out
iret
sub
ds
sbb
repnz
dec
ljmp
and
std
pop
jmp
or
pusha
cwtl
outsl
or
insl
adc
adc
sbb
jecxz
mov
and
int
pop
sbb
outsb
xchg
in
pop
dec
mov
xor
pop
inc
jbe
mov
mov
loope
subl
push
decb
xchg
int
popf
loopne
sub
xlat
push
ret
jb
mov
sarb
stos
push
push
stos
jne
outsl
push
ds
outsb
xor
addr16
dec
mov
or
fdiv
loope
pop
das
and
es
jo
adc
mov
jecxz
or
iret
cs
mov
sub
inc
jg
pop
adc
push
pop
sub
das
mov
repz
xor
mov
insl
push
mov
pop
sbb
mov
out
mov
adc
xchg
test
sub
adc
or
repnz
int
pop
jl
das
fs
jge
mov
adc
mov
jle
shlb
or
pusha
push
push
adc
and
dec
or
sub
sti
bound
cli
mov
out
das
xchg
int3
mov
scas
inc
mov
push
lock
pop
jge
fstpl
ret
iret
pop
jbe
pop
bts
cs
outsb
repz
scas
out
mov
mov
jecxz
sbb
and
fs
xchg
js
dec
push
push
push
pop
pop
cmp
sub
xchg
fs
cs
cmp
xchg
adc
in
cmp
std
lahf
aaa
pop
hlt
imul
in
push
std
dec
stos
pusha
pop
mov
addr16
or
push
insb
push
xchg
outsl
in
test
and
push
push
push
imul
adc
std
push
ljmp
or
jle
xchg
cmp
insl
pop
outsl
aas
in
adc
sub
incb
mov
loop
fisttps
je
call
aas
cmp
out
xor
hlt
add
scas
or
lods
in
out
insl
out
xchg
jl
outsl
rclb
xor
pop
add
fwait
clc
in
scas
out
or
popf
or
decb
imulb
loop
lea
fucomip
xor
adc
repz
mov
push
das
push
pop
mov
jb
pop
test
dec
movsl
xor
sub
add
int
xor
jl
mov
out
adc
dec
inc
and
pop
std
call
jl
cmp
xchg
fistps
call
sub
and
mov
mov
ds
push
pop
adc
dec
push
cmc
int
push
push
js
xchg
and
lods
outsb
adc
sub
outsb
or
pop
int
xchg
dec
adc
dec
aad
add
repz
inc
clc
negb
pop
mov
scas
lods
push
mov
in
push
imul
pop
shll
ret
jbe
jl
cmp
inc
popa
cmpsl
and
popf
hlt
insb
sub
into
xor
push
cmp
enter
and
lea
jecxz
push
add
jmp
lahf
rcll
jns
add
insb
mov
imul
fdiv
dec
pop
aas
in
movzwl
cmp
mov
mov
sbb
outsb
popa
das
jecxz
loope
jl
test
adc
mov
sub
lods
and
mov
sbb
inc
std
lcall
jmp
and
jle
frstor
add
push
in
jl
pop
sub
loop
repz
inc
or
pop
pop
mov
loop
loop
aad
jle
add
es
and
arpl
xchg
jecxz
pop
push
add
jg
add
dec
lods
sbb
xchg
pop
in
popa
sub
jl
pop
jmp
cli
ja
repz
lahf
push
mov
sbbb
int
xor
repz
push
and
iret
addr16
pop
sbb
addr16
mov
jle
inc
daa
or
popf
mov
outsb
jge
bswap
dec
divl
cli
pop
pop
mov
nop
sub
outsl
inc
xor
mov
jne
mov
push
out
jle
loope
outsb
pop
and
xchg
mov
inc
lods
adc
mov
mov
stos
mov
aas
rorb
jae
jmp
lods
cmp
cwtl
sahf
inc
sbbb
lahf
fs
jl
insl
add
stos
dec
jmp
jns
jl
mov
lods
sub
mov
sbb
iret
or
lahf
xchg
adc
push
add
outsb
push
iret
sub
ja
cld
cmp
mov
sbb
out
mov
cs
adc
lods
or
push
add
xchg
out
push
pop
mov
dec
jmp
aas
push
out
ret
iret
push
decb
pop
imul
inc
in
add
popf
pop
in
cmpsb
push
mov
out
into
and
scas
jo
jle
addr16
xchg
lods
outsl
sbbl
xchg
in
dec
sbb
add
clc
cli
lea
adc
outsl
sub
jge
sub
lods
clc
lahf
or
or
pop
in
add
mov
pop
cmpl
dec
push
int
jl
adc
adc
insb
js
out
or
pop
jle
iret
testb
jmp
mov
dec
or
loop
test
out
in
mov
inc
jge
cmc
xchg
cltd
mov
pushf
cld
rorl
xor
xor
xchg
outsb
repz
xchg
pop
jg
std
xor
jge
cld
push
aas
dec
das
mov
mov
outsl
adc
movsl
and
std
scas
xor
add
fistpl
xchg
pop
mov
jae
ja
push
cmp
std
add
adc
jg
mov
std
insb
sbb
cmc
pop
pop
ds
andl
out
cmp
mov
negl
adc
call
adc
ja
in
pop
daa
lahf
mov
cs
and
push
inc
sub
ror
stos
add
adc
repz
pop
loopne
test
cmp
adc
add
adc
pop
cld
in
cmp
add
sbb
incb
repz
outsb
popf
scas
lods
stos
pcmpeqb
xlat
jge
mov
sti
iret
adc
das
inc
jle
rcll
mov
fucom
and
rcrl
and
cld
inc
xor
lods
in
ds
movsl
cld
adc
mov
and
shll
fwait
cmpb
xor
insl
ja
jge
mov
mov
stos
outsl
jno,pt
mov
movsb
cmp
icebp
sbb
out
nop
inc
sub
fisubrs
push
sbb
aad
rcrl
aas
popf
insb
aam
pop
fstl
jp
inc
and
outsb
sbb
mov
scas
dec
jecxz
insl
lods
jg
insb
cltd
sbb
xlat
loop
adc
cmp
jge
xor
imul
or
in
rcl
ds
popf
rep
bound
negl
aas
sbb
add
fistpll
mov
xchg
push
stos
push
decl
jg
pop
jns
aaa
push
lock
cld
push
cmp
leave
mov
ds
pushf
jp
rol
mov
out
pop
mov
popa
and
insb
pop
sub
xor
popf
aas
jg
push
call
pop
or
inc
mul
xor
shll
stos
adc
add
das
js
jl
dec
pop
xor
and
sub
xor
jmp
or
or
das
int
sub
cmp
negl
sbb
sar
adc
jmp
jge
out
cs
dec
push
aas
mov
roll
add
ds
dec
and
add
and
sub
xchg
pop
call
xchg
movsb
jae
outsb
mov
cltd
push
jmp
cs
jmp
xor
mov
lcall
cs
fstpt
outsb
sub
cwtl
pushf
push
pusha
outsb
pxor
popf
out
cmp
adc
mov
jne
pop
mov
jbe
pop
movsb
out
xchg
push
dec
out
iret
pop
push
in
arpl
xchg
idivb
add
int
insl
mov
ljmp
sarl
sub
call
mov
pushf
push
push
lods
sub
aas
movsl
rcrl
or
push
int3
das
lods
ds
cmp
push
std
cld
sarl
sbb
arpl
insl
lods
mov
mov
pop
add
jecxz
sub
xor
mov
xchg
push
cs
xor
lock
xor
jmp
es
or
adc
and
sub
inc
add
aas
xor
movsb
sbb
adc
in
cmp
addl
mov
and
inc
sub
lods
hlt
scas
fnstsw
mov
scas
xor
pusha
lcall
lods
pop
popf
decb
push
inc
adc
sbb
insb
push
loope
xchg
add
insb
push
mov
enter
sbb
inc
nop
jg
insb
and
popf
jmp
shrb
lock
or
out
test
popf
inc
out
sbb
and
mov
stos
cli
jne
out
mov
into
sbb
in
test
inc
add
dec
cwtl
cmp
clc
mov
cmp
pop
fnstsw
mov
mov
pop
dec
loopne
xchg
sbb
jg
pop
pop
out
addr16
scas
lea
lods
cmp
int
mov
jbe
mov
pop
std
push
or
fsubr
aas
inc
xchg
fnsave
add
cmpb
pop
ds
pop
pop
push
cmpsb
xor
xor
or
adc
dec
mov
mov
into
dec
aaa
call
jno
push
fistps
push
daa
mov
lods
inc
orl
inc
inc
lahf
jg
cwtl
iret
lea
in
and
aad
jl
sub
out
xor
mov
out
fisttps
loope
js
insb
push
jg
pop
pop
jge
mov
jb
ss
jmp
arpl
cli
repz
repz
or
in
jle
push
add
arpl
fnstenv
sub
outsb
sbb
pop
lds
cwtl
and
imul
pop
loope
pop
sub
inc
out
jno
insl
outsb
adc
and
jge
mov
mov
jp
mov
add
mov
dec
stos
into
outsl
not
jl
pop
mov
pop
jmp
cmc
sub
mov
mov
and
jle
das
pop
jmp
mov
subb
mov
xchg
addr16
fld
dec
mov
aam
js
das
or
mov
dec
fbld
fs
push
sub
fstpl
scas
outsb
adc
fs
push
jecxz
loope
fucom
sub
cltd
push
push
add
popf
sub
je
aas
push
sub
xlat
jle
and
fucom
std
addb
push
in
jmp
lea
call
aas
cmp
mov
jecxz
add
cmp
repz
in
inc
cs
lods
and
xchg
lahf
pop
aam
or
imull
std
shufps
sbb
jl
mov
xor
fistpll
or
pop
cmp
push
fmul
popf
sbb
and
mov
shrl
rcl
ret
std
stos
jecxz
repz
hlt
dec
popf
lods
jmp
and
lea
stos
cmp
pop
cmpsl
or
pop
ret
sub
popf
and
out
out
scas
outsl
mov
jbe
lods
js
adc
addr16
push
mov
mov
sub
hlt
stos
sbb
lods
incb
push
mov
pop
iret
lea
adc
fdecstp
cwtl
enter
sbb
inc
cmp
mov
aas
adc
fs
push
cld
cs
insl
push
sarb
stos
push
adc
in
lods
ucomiss
push
mov
jmp
dec
fidivl
xchg
sub
xor
stos
bound
cs
dec
sbb
filds
movsb
sub
push
cmpsl
hlt
inc
mov
push
dec
repz
pop
dec
mov
jle
popa
or
arpl
cmp
les
lahf
daa
out
sub
lods
orl
repz
add
int
mov
pop
cmp
out
lahf
push
insb
pop
jle
add
orb
sarl
jmp
push
mov
xor
jmp
ret
pop
int
jg
stos
cld
xchg
dec
cwtl
ds
cmp
jae
and
ss
jmp
mov
jge
adcb
mov
sub
push
loopne
enter
popf
test
loopne
rol
js
pop
jns
push
sub
jg
mov
add
out
sahf
or
fs
mov
in
inc
mov
cmp
cmp
jecxz
js
lahf
in
push
cmp
mov
orl
and
std
xchg
outsl
push
cli
cmp
lea
scas
testl
mov
mov
loope
sbb
and
lahf
hlt
and
in
repnz
mov
jg
ret
mov
test
jo
les
lea
bound
push
ds
dec
mov
repnz
in
cmpl
iret
pop
sbb
imul
jmp
ret
dec
cltd
xor
inc
bound
jl
xchg
enter
jmp
jmp
insl
js
sbbl
mov
in
push
iret
lock
outsl
addr16
mov
and
add
push
xchg
int3
stos
outsl
adc
fdivrl
ds
sbb
xchg
fstpl
inc
insb
jle
fs
std
pop
mov
xchg
pushf
push
sbb
push
mov
scas
leave
stos
mov
and
mov
insl
jge
add
inc
popl
addr16
lock
pop
dec
dec
sbb
stc
push
das
xchg
sub
or
mov
loop
dec
mov
sub
fs
cmp
and
std
push
test
add
adc
dec
cs
mov
scas
ror
xchg
adc
cmp
push
xchg
hlt
adc
pushf
repz
xor
fildl
inc
dec
out
pop
dec
sar
sub
stos
sbb
setno
test
push
in
pop
cwtl
pop
pop
ret
jg
sbb
shr
and
or
push
jo
sub
jmp
xor
pop
xchg
outsl
fwait
xor
xor
addr16
add
cmc
inc
mov
sbb
stc
or
call
int
dec
aaa
dec
lea
ljmp
sbbb
outsb
push
jp
js
popf
in
jle
lahf
pop
dec
dec
in
xor
mov
popf
jle
in
dec
and
aas
add
xchg
hlt
frstor
mov
lret
outsb
scas
int3
in
je
addb
insb
repnz
stos
push
leave
or
xchg
das
mov
dec
jge
sub
sbb
xor
or
pop
adc
fucomp
jl
cld
jmp
push
mov
das
inc
dec
mov
adc
outsl
pop
push
jge
or
sbb
cli
or
or
jle
popa
in
nop
jge
pusha
push
jge,pt
subl
rcrb
fnstcw
test
loope
adc
idivl
xor
or
idivb
cmp
scas
dec
and
stos
outsl
mov
in
decb
push
dec
test
bound
ljmp
jl
mov
insb
cmp
xchg
xor
ds
and
jle
pop
sbb
and
idivl
sub
iret
adc
mov
or
mov
mov
push
mov
fildll
daa
dec
push
push
dec
push
sub
adc
mov
addl
sub
es
pop
ret
xor
aas
xor
inc
cld
pop
jecxz
stos
mov
xchg
cmpsb
and
ljmp
stos
int
xor
sub
popa
xchg
je
pop
push
jge
test
in
dec
and
adc
outsb
xchg
mov
imul
pop
mov
pop
not
push
jmp
push
fnstsw
sbb
stos
out
femms
loopne
cmp
inc
push
lods
repz
outsb
mov
mov
lret
pop
push
push
jbe
xor
add
jecxz
shll
cmp
aas
push
loopne
shl
aas
adc
pusha
movsb
inc
es
dec
and
ffree
push
por
cmp
adc
jecxz
popl
dec
addr16
and
cmp
repnz
pushf
add
popf
push
testb
push
js
das
out
call
iret
mov
mov
xor
adc
lahf
das
cmp
jnp
in
xor
outsb
repnz
xlat
sbb
iret
push
imul
or
incl
mov
iret
iret
and
ljmp
addr16
mov
cmp
jge
call
out
jae
lods
clc
push
add
dec
mov
inc
cmp
scas
push
or
xor
inc
cltd
aaa
mov
or
mov
dec
jl
outsb
add
outsb
xor
jne
fwait
sub
fs
cmp
or
mov
jg
cmp
adc
in
aaa
adc
hlt
or
adc
inc
shll
cmp
dec
mov
sub
xchg
scas
jecxz
lods
cmpsl
std
repz
cmp
dec
cmp
ljmp
inc
lret
push
mov
cmpb
icebp
cmc
stos
adc
dec
or
or
or
add
push
popf
es
xchg
mov
fstps
outsl
mov
push
nop
lods
ret
dec
adc
fwait
xor
mov
ljmp
dec
and
or
loopne
pcmpeqd
outsl
inc
xchg
neg
pop
jl
sub
mov
int
push
mov
adc
push
ret
scas
push
ds
dec
lock
lods
out
adc
cmp
movsl
push
pop
lock
shl
das
ljmp
sub
mov
or
and
mov
and
adc
xchg
pop
iret
adc
add
repz
push
in
sbb
add
hlt
das
aas
push
lea
mov
mov
push
push
icebp
pop
push
sahf
jo
mov
adc
push
pop
hlt
lret
aas
jg
std
mov
cld
mov
mov
movsb
mov
js
arpl
int3
fists
pop
and
addl
push
pop
das
jecxz
jg
mov
push
pop
cmp
jo
inc
int
mov
cmp
je,pt
cmp
dec
fldl
sub
cmovle
sbb
call
test
je
mov
xor
mov
mov
negb
in
movsb
pop
mov
pop
adc
jmp
pop
xor
icebp
lahf
mov
out
push
nop
popf
mov
mov
xor
sub
inc
inc
add
cmp
cmp
cmpsl
mov
outsb
push
icebp
cld
out
repnz
inc
fs
loop
incl
popf
mov
std
jo
std
pop
and
and
push
xchg
and
das
notb
ds
js
je
scas
push
js
mov
adc
mov
adc
popa
int
push
test
daa
add
repz
das
mov
outsl
mov
push
ss
and
cmp
mov
sub
mov
popf
clc
test
stos
xrelease
insb
ljmp
lods
pop
push
mov
push
adc
mov
lahf
inc
xor
mov
outsl
out
int3
and
fstps
or
pop
mov
xchg
mov
je
jb
repz
outsb
jmp
push
pop
out
out
stos
mov
test
push
mov
in
push
pop
jo
mov
pop
rclb
push
ficomps
jmp
pop
stos
inc
pop
adc
push
and
xchg
das
lods
add
or
addr16
xor
addr16
stc
imul
repz
dec
jmp
in
cmp
pop
ss
icebp
scas
push
inc
push
cld
mov
sbb
cli
out
ljmp
popa
int
test
mov
ljmp
popf
js
cmp
mov
shlb
stos
add
mov
inc
dec
sub
daa
out
and
das
mov
jb
mov
aaa
mov
jno
sbb
push
dec
lock
outsl
jl
insb
dec
js
fs
iret
test
testb
mov
jmp
das
ds
stos
lret
fmull
stos
insb
sub
cld
sub
inc
ret
ljmp
sbb
iret
or
sbb
jge
int
adc
dec
out
push
mov
lret
sbb
sub
pop
push
pandn
fldl
fmuls
mov
pop
cmp
popf
dec
xor
cld
hlt
push
insl
mov
outsl
mov
and
imul
mov
lods
lahf
cmp
jl
pop
cltd
dec
and
das
push
add
jecxz
jne
mov
xor
and
pop
fcomps
addr16
xchg
repnz
jmp
push
rol
jl
jno
testb
sbb
sbbl
mov
dec
lea
icebp
mov
mov
pop
inc
js
xor
rcrl
loop
dec
sub
push
call
lods
dec
xor
push
clc
imul
and
aaa
cmp
sbb
push
push
stc
bound
fnstenv
pop
cld
adc
xchg
dec
mov
dec
xchg
insl
pop
je
fwait
stos
xchg
scas
arpl
addr16
movl
sbb
lret
stos
call
bound
xchg
xor
loope
add
arpl
outsb
call
push
push
lea
mov
pop
idivl
jp
ds
sub
hlt
cmovge
int
sub
test
addr16
loope
loopne
cmp
adc
push
dec
sti
or
lahf
sti
lods
jb
mov
cld
fstpl
adc
mov
outsb
mov
ds
cwtl
scas
mov
sarb
movsb
dec
jnp
out
dec
lahf
faddl
sub
sahf
or
aaa
dec
xchg
popf
loope
jle
into
aad
add
loop
imul
das
push
jmp
in
insl
nop
and
out
push
enter
mov
scas
sub
adc
and
lret
or
shll
push
and
jns
pop
mov
dec
lds
lahf
cld
movsl
arpl
sbb
mov
testl
or
das
push
cmpsl
ja
mov
mov
adc
andnps
dec
cmp
cmc
push
dec
les
mov
aam
mov
pop
sbbb
or
iret
lds
js
sub
popf
inc
lods
inc
fstpl
pop
divl
insb
dec
les
cmp
sbb
jle
push
mov
mov
insl
inc
repnz
scas
sub
dec
jge
popf
push
jmp
inc
insb
bnd
mov
int
push
or
fldenv
daa
out
push
lods
sub
das
sub
imul
repz
int
inc
pop
pop
cmp
push
jmp
iret
jp
jb
mov
outsl
stc
xchg
fwait
jae
stos
xorb
fwait
call
inc
lret
xchg
dec
std
stc
add
rep
mov
pop
sub
cmp
jns
push
shlb
sbb
stc
jecxz
stos
pop
xor
xchg
push
cmp
inc
jae
pop
daa
shl
clc
outsb
stc
out
stos
lea
sbb
sub
pop
mov
pop
sahf
pop
aaa
pop
pop
scas
xchg
stos
sub
cmc
scas
pop
movsl
fistpll
adc
in
jl
shl
sbb
addl
push
jmp
les
mov
jge
adc
or
dec
aad
jge
push
gs
outsb
insb
lea
sbb
adcl
jae
and
shrl
lods
cld
push
nop
stos
pop
les
std
inc
int3
push
iret
inc
dec
pop
scas
add
dec
sub
ret
xchg
stos
jo
les
movsb
xor
sbb
dec
stos
dec
pop
mov
fsts
pop
push
mov
ficompl
jp
push
push
push
stos
leave
jo
adc
inc
adc
sub
jns
push
out
hlt
out
or
pop
lds
ja
dec
fdivs
pop
or
or
pop
scas
dec
test
iret
insl
je
lret
xchg
cmp
sahf
cmp
call
push
sbb
outsl
stos
scas
add
cmc
imul
ror
repnz
adc
mov
sahf
or
sbb
xor
mov
addr16
pop
inc
cmc
add
jb
push
into
lods
arpl
pop
or
lret
pop
jecxz
mov
loope
cmp
stos
mov
lods
stos
and
or
mov
xor
lcall
mov
loope
jb
jl
stos
popa
push
mov
xlat
jne
je
dec
cmp
or
into
push
lea
cmp
stos
ficoml
jg
cmp
rclb
maxps
dec
outsb
pop
lods
sub
cs
push
jg
out
fwait
je
mov
fisttpll
sbb
call
pop
loope
dec
xchg
subl
dec
sub
add
inc
js
mov
or
jo
or
pminub
sbb
outsb
aas
ret
out
pop
push
int
btcl
sub
xchg
adcl
push
mov
imul
and
xchg
das
jmp
popf
cmp
sbb
dec
lods
insl
scas
push
mov
cs
stos
add
push
mov
sbb
pop
insl
sub
js
lock
add
or
xchg
pop
int
dec
cmpsl
cmc
cltd
bound
sbb
dec
sbb
inc
repnz
mov
jl
mov
outsb
add
jle
lods
sbb
jne
clc
outsb
cs
or
sarb
loope
fldenv
pop
push
addr16
fisttps
push
incb
rclb
fdivrl
adc
outsl
pop
mov
mov
jae
jl
arpl
mov
ja
adc
adc
leave
loopne
int
das
xchg
testl
pusha
sbb
test
fistpl
and
ds
clc
aas
dec
push
ja
int
testb
jmp
ror
pop
pop
cmp
scas
je
in
insl
insl
push
int
inc
pop
popf
frstor
push
push
and
jge
test
inc
aas
outsb
fbstp
or
insl
inc
negl
dec
jl
sub
xchg
xchg
repz
iret
pop
mov
icebp
sub
paddusw
mov
jb
push
dec
addr16
mov
sbb
repnz
fbstp
lcall
xchg
outsl
inc
outsb
fstl
pop
jno
jl
stos
nopl
push
dec
mov
or
xor
and
sub
ret
mov
call
addr16
sbb
insl
ja
mov
std
mov
scas
das
pop
jmp
push
or
pop
das
jb
lcall
pop
sbb
add
push
arpl
iret
setg
insb
cmp
lock
pop
aas
out
scas
std
or
sub
pop
dec
mov
sub
and
jae
jge
insb
mov
xor
popa
adc
push
jns
ds
shrl
cmc
insb
pop
into
or
cmp
mov
add
add
aas
ds
dec
jge
je
xchg
repz
lahf
imul
jl
imul
ja
and
test
push
fsubp
lods
xor
jecxz
sahf
or
xor
repz
iret
cmp
or
dec
sub
mov
rcll
push
ja
jae
data16
std
lea
sub
out
repz
adc
and
clc
lock
pop
dec
sub
outsl
mov
mov
cmp
pop
jge
js
cmp
pop
outsb
addl
addr16
popf
iret
push
pop
out
fimull
adc
fildll
cs
push
add
sub
mov
iret
shlb
fdivrl
ja
push
in
aas
pop
cli
push
in
xor
popf
das
add
push
out
jle
iret
lahf
and
int
inc
cld
mov
mov
mov
fsub
fisttps
pop
lahf
dec
jno
pusha
icebp
inc
pop
movsl
push
xchg
push
cs
add
lcall
xchg
repnz
push
mov
sbb
cmp
idiv
cs
orl
mov
rep
mov
xor
sub
cmp
out
lret
outsb
adc
lea
mov
pop
stos
out
out
jg,pt
das
adc
xchg
orl
adc
out
call
inc
stos
push
dec
dec
dec
dec
out
inc
lahf
aad
pop
xchg
push
jg
ja
push
lcall
ret
xor
incb
sub
push
imul
mov
sub
outsl
insb
fstpl
push
sbb
xchg
out
jge
insl
pop
pop
adc
dec
mov
jl
sarb
jecxz
aas
in
iret
mov
and
pop
lock
sub
jle
push
jnp
xor
push
adc
and
mov
repz
setno
jecxz
and
int3
leave
das
inc
jge
xor
imul
push
mov
shrl
call
popf
cmp
add
xor
sbb
push
sbb
jge
xchg
push
repz
repz
mov
ljmp
fidivrs
mov
popa
lea
and
sbb
pcmpgtb
xor
cmp
cmp
add
mov
jle
clc
and
in
in
adc
dec
ss
push
and
inc
loope
sub
repz
mov
std
push
jle
xlat
lea
pop
call
js
or
jge
mov
insl
adc
mov
pop
out
stos
jecxz
shlb
fucomip
call
or
lret
or
leave
xchg
fisttpll
push
aas
add
jne
ss
pop
popf
dec
aas
aam
ja
jg
inc
or
loopne
xchg
fists
js
jecxz
and
stos
pop
sbb
std
in
pop
repz
add
dec
and
xor
out
ficompl
mov
dec
adc
push
and
jmp
inc
sub
pop
loop
mov
mov
dec
or
lods
in
pop
out
cmp
cmp
popa
pop
jge
loopne
jecxz
jg
xor
jbe
rcrb
sbb
sub
ljmp
and
outsb
shl
cmp
dec
fbld
int
mov
mov
xchg
jle
pop
loope
in
fstpl
pop
sub
xor
outsl
and
inc
das
adc
lods
or
js
xchg
pop
in
insb
stos
jecxz
push
sbb
add
cld
mov
sbb
outsl
das
pop
push
jg
lcall
push
sar
cmp
push
jle
sbb
outsl
test
xor
lds
inc
xor
out
sbb
dec
stos
inc
daa
xchg
test
add
pop
scas
loopnew
and
sub
dec
mov
lahf
jns
mov
xor
ja
mov
sub
lea
inc
cmp
out
adc
xor
pushl
lea
js
popa
popf
scas
mov
sbb
add
pop
int
insb
out
mov
dec
push
mov
outsb
fistpll
loop
mov
push
jmp
scas
inc
xor
data16
pop
mov
jg
outsl
push
das
cs
adc
out
jbe
sub
outsb
push
fdivrl
mov
bound
dec
insb
inc
jmp
dec
cld
das
nop
adc
or
cmpb
xchg
hlt
popa
lea
cld
rdtsc
loop
das
jmp
js
loope
adc
int
ljmp
dec
scas
jmp
pushl
adc
mov
add
std
lods
stos
fmuls
bound
pusha
outsl
aas
pop
data16
push
inc
jecxz
das
or
push
jbe
mov
jo
shlb
push
fistpll
int
mov
lahf
cltd
and
mov
addr16
repnz
adc
mov
sar
sbb
lea
in
pop
cmp
mov
movsl
cs
sbb
push
jbe
imul
pop
add
jge
repz
mov
dec
or
scas
jecxz
ret
adc
lods
cld
push
shr
popf
cmpl
in
dec
xor
cld
inc
in
enter
xlat
push
lods
cmp
int
addl
out
addr16
mov
sub
mov
lea
clc
rcrl
push
cmc
push
in
mov
mov
mov
mov
in
add
pop
addr16
loop
and
lret
fnsave
leave
insl
lahf
insl
loopne
ljmp
aas
jg
cs
fildll
mov
or
push
add
or
ds
push
addr16
das
jmp
push
stos
fsubp
fildll
test
iret
dec
lods
inc
outsb
push
jnp
out
adc
mov
inc
pop
fists
outsl
sbb
cmp
repnz
iret
mov
out
bound
and
cmp
jle
push
add
push
inc
add
pop
aas
setg
inc
insl
outsb
jo
mov
mov
and
push
loopne
pop
lods
sub
shrb
outsl
or
jle
xchg
add
push
in
jae
dec
scas
mov
popf
lods
mov
pushf
dec
pop
cwtl
adc
in
pushl
arpl
adc
jns
ror
cmp
lock
ljmp
inc
fdivrl
dec
mov
jle
and
clc
jge
cs
aad
insl
lods
sbb
stos
in
xor
add
imul
jl
movsb
adc
jge
cmp
lock
cld
lahf
pop
jmp
inc
addr16
out
or
frstor
mov
jo
pop
mov
lea
das
enter
popf
pop
ds
pusha
sbb
push
jns
mov
jns
das
scas
int3
imul
jg
aas
test
das
push
jb
mov
pop
mov
and
push
add
fisttpll
repz
sub
loopne
addr16
aas
jmp
sbb
dec
ljmp
addr16
add
mov
pop
paddusw
mov
dec
cmp
push
jle
pop
sbb
rcr
xchg
push
movsl
in
ss
or
dec
negb
xor
pop
in
add
iret
sub
adc
outsb
jecxz
dec
decl
subl
xor
lods
sbb
jg
fldt
movsb
mov
adc
pushf
sbb
xchg
sub
in
and
push
sub
push
or
orl
jge
and
pop
out
xor
in
sub
js
push
mov
sub
lret
dec
xor
sub
fdivrl
in
es
loopne
bound
sbb
cld
hlt
adc
jmp
dec
je
mov
hlt
fildll
mov
lahf
js
sub
adc
aas
push
jmp
push
pop
fbld
jl
jle
lea
decl
mov
cs
xchg
insl
ljmp
imul
mov
jae
insb
or
and
jle
popa
std
iret
xlat
xorl
dec
loop
outsb
mov
repz
or
mov
insb
outsl
imul
inc
inc
add
lahf
push
lods
xor
sub
hlt
dec
insb
sub
inc
loope
insl
shrb
sub
pop
push
stos
insb
fs
jle
inc
fbstp
push
mov
push
sub
adc
cmp
lock
in
sbb
lods
pop
mov
sub
rorb
dec
add
pop
jge
push
pop
jg
cmc
call
jmp
sbb
dec
or
outsl
jg
das
pop
or
add
lods
push
out
nop
or
fmull
fs
mov
mov
in
daa
mov
ret
rcrl
mov
subb
repz
lea
adc
sarl
jo
maskmovq
divl
dec
arpl
cmp
xchg
mov
inc
and
scas
jle
and
hlt
inc
iret
pop
add
sbb
dec
cld
fs
fwait
or
and
push
stc
dec
or
mov
shlb
and
adc
bound
lea
dec
jle
push
in
mov
dec
dec
outsl
jmp
testl
push
jecxz
cwtl
fs
pop
cmp
pop
js
scas
push
out
fistps
stos
push
popf
jmp
adc
dec
out
mov
mov
mov
shr
cmp
inc
call
and
pop
pop
inc
xchg
ljmp
lods
push
push
mov
addr16
clc
cmp
xor
cmp
mov
aas
lods
ljmp
push
jmp
adc
push
je
fsub
mov
push
jmp
stos
popf
push
or
dec
jecxz
scas
insb
int
jge
or
cmp
cld
mov
ds
out
packuswb
push
xchg
add
cmp
rorb
xor
imul
xlat
in
insl
dec
sub
and
xor
sub
cmp
jmp
add
pop
lods
dec
dec
test
ret
sub
jl
sbb
popf
cmp
iret
jmp
push
shrb
lea
ljmp
jecxz
imul
pop
mov
insb
cmc
inc
jmp
xchg
imul
les
sub
aas
outsb
sbb
popf
lahf
in
cmp
push
ljmp
sub
mov
dec
dec
sbb
loope
mov
subl
sub
fistps
ja
xor
dec
mov
outsl
lods
aas
or
out
mov
insl
outsb
pop
add
jge
dec
push
sub
pusha
insb
scas
or
js
adc
in
decb
jae
ret
sub
sbb
fstpl
mov
pop
cmp
xor
adc
test
jge
lods
inc
push
cmp
add
sub
out
jg
add
outsb
insl
out
cwtl
jl
sahf
fdivrl
insb
js
jmp
xor
mov
repnz
cli
popa
push
imul
adc
mov
pushf
mov
adc
loop
and
add
push
inc
add
cmpsb
pop
add
sub
fistps
scas
popa
push
in
popa
insl
inc
adc
pop
sti
int3
out
outsb
outsb
insl
call
pushf
or
cmp
push
push
je
ja
jo
mov
mov
dec
mov
jl
push
pop
cmp
addr16
lods
jge
in
cmp
insl
cmovge
mov
jl
sub
int3
adc
cld
lods
mov
cltd
popa
mov
adc
mov
fdivs
out
push
ret
push
lea
xchg
popa
daa
rclb
inc
mov
cwtl
jo
nop
sqrtps
adc
ret
add
test
fistps
bound
aaa
lods
adc
cmp
jmp
adc
outsl
mov
jo
lock
aas
sub
sbb
push
daa
push
adc
mov
jle
int3
jecxz
mov
adc
jg,pn
imul
jnp
std
jge
or
inc
adc
adc
mov
push
out
addr16
idivb
das
dec
xchg
add
pop
lods
leave
lods
minps
inc
jge
loope
and
mov
push
adc
push
es
in
imul
stc
sbb
add
or
cmpsl
cmpsl
inc
xor
pusha
add
xor
inc
lahf
repz
sti
in
es
mov
jecxz
pop
int
sbb
mov
addr16
inc
dec
jns
std
inc
sbb
lea
push
in
push
jge
loopne
mov
iret
imulb
rep
push
rorb
ret
add
das
cld
movsl
insl
stos
movsl
frstor
mov
lods
xor
mov
fs
xchg
xor
adc
lcall
dec
mov
mov
jg
test
push
add
lret
sub
scas
sub
xor
sbb
lss
mov
pop
mov
mov
jg
push
bound
popf
mov
adc
cmpsl
and
repz
or
pop
dec
jl
or
xor
and
xor
addps
out
addr16
cmp
lea
adc
test
decb
sbb
sarb
out
adc
mov
or
out
push
outsb
jg
or
or
fstpl
add
fs
push
or
sub
or
mov
xchg
inc
jl
mov
inc
add
pop
jle
ffree
dec
repnz
or
lods
lea
inc
dec
inc
fildl
push
cs
or
pop
pop
lock
dec
fldcw
es
test
inc
shr
cld
in
cmp
jmp
inc
push
push
insl
sub
sub
cld
js
repnz
push
outsb
dec
ds
call
stos
or
iret
sub
cmp
push
bnd
mov
repz
in
or
jge
insl
mov
punpckhdq
dec
mov
subl
cmp
xor
std
push
ljmp
mov
mov
pop
jl
mov
inc
mov
pop
imul
lods
in
pop
outsb
sar
insb
cs
xor
call
cmp
jmp
jb
pop
xor
cs
and
dec
scas
addr16
sub
mov
pop
lahf
addl
pop
pop
jno
lcall
iret
mov
cs
push
imull
sub
inc
out
mov
xor
mov
in
jnp
push
mov
pop
out
outsl
jbe
js
loopne
idivl
adc
shl
fidivrl
push
jecxz
mov
fisttpll
loop
or
popf
jl
push
pop
je
dec
mov
pop
xor
decb
push
sar
cs
mov
fldl
ret
out
js
xchg
loop
insb
or
mov
pop
xor
test
add
adc
sbb
push
mov
jle
dec
divl
rorl
pop
sbb
xor
js
xchg
sub
clc
loop
in
sbbb
mov
in
insb
aam
push
mov
pop
push
cmp
push
sub
daa
inc
in
decb
pop
inc
jg
je,pt
mov
lahf
outsb
in
inc
inc
insb
mov
nop
mov
or
lea
test
cmp
repnz
ds
pushl
fnsave
mov
outsb
int
lcall
or
pop
rorl
in
inc
fistpll
pop
inc
add
imul
pop
lock
insb
lods
movl
push
inc
xor
hlt
sbb
fs
jno
mov
hlt
mov
sub
push
daa
fcoms
mov
aaa
cs
sbb
pop
xor
nopl
pop
cltd
insl
shr
adc
dec
jmp
clc
out
testl
mov
mov
hlt
inc
jl
xchg
cld
sub
incb
sub
insb
adc
in
jge
jg
in
lock
das
jle
push
ds
pusha
push
lea
movbe
xor
out
push
jg
enter
jge
fs
int
sub
repz
mov
push
dec
imul
inc
mov
in
sbb
sub
repz
push
loope
in
mov
mov
mov
nop
sbb
sub
fpatan
push
pop
xchg
pop
add
pop
insl
inc
xor
dec
loop
pop
int
aaa
insb
sbb
sbb
not
iret
stos
out
insl
sub
sbb
pusha
jns
outsb
xor
fs
xchg
push
push
lock
lahf
cs
lret
ds
push
xor
xlat
mov
imul
add
pop
das
mov
sbb
ja
jle
pop
push
rol
add
dec
stos
lahf
outsl
add
arpl
inc
adc
push
imul
adc
fstpl
lcall
mov
push
int3
std
inc
adc
push
push
add
dec
cmpsb
adc
rorb
or
push
push
mov
inc
cltd
je
adc
jns
loope
dec
je
loop
loop,pn
lods
adc
js
push
fisttpll
push
in
insl
and
mov
pop
jmp
daa
xchg
add
dec
in
cld
xor
sub
cpuid
adc
mov
dec
pop
pop
cli
aas
cmp
cmp
ds
mov
je
lods
popf
adc
or
cltd
es
outsl
inc
adc
in
pop
mov
and
mov
mov
leave
lock
js
jmp
lahf
ja
jns
out
jno
out
pop
cld
lock
push
js
insl
pop
lea
xchg
mov
int
xor
ljmp
cld
addr16
into
movsl
lods
add
lcall
ss
xor
insl
mov
mov
popf
xor
fstpl
and
push
int
sub
or
mov
cld
in
rcrb
jl
and
shlb
cmovg
mov
je
push
fmul
cmpsl
add
inc
repz
xor
lods
mov
inc
pop
int3
jae
movsl
dec
sub
mov
cmp
pop
cli
push
or
or
adc
in
jno
in
cli
xchg
ja
outsb
ds
arpl
filds
sbb
testb
jmp
shrl
xchg
outsl
mov
xchg
sbb
out
hlt
addr16
jo
adc
repz
std
bnd
mov
mov
jmp
pop
push
repz
rcrl
inc
sbb
jae
push
sub
sbb
mov
push
mov
dec
jecxz
mov
add
sbb
js
dec
add
xchg
push
sbb
mov
shlb
cmp
in
or
cmp
push
jg
dec
inc
adc
lret
xor
stc
mov
pop
sub
repz
popf
ds
insb
xchg
push
in
inc
std
xchg
jae
pop
dec
cmp
mov
push
cli
insb
pop
sub
iret
test
cs
xorl
push
mov
popf
xor
push
mov
js
ljmp
adc
in
mov
xor
aad
push
jno
mov
push
mov
xchg
fs
das
std
sub
push
fisttps
sub
popf
sub
int
rcrb
mov
mov
sbb
pop
adc
mov
loope
adc
xchg
or
pop
rorb
jo
jecxz
fadds
and
or
lods
mov
test
jae
sub
cld
dec
bnd
inc
xchg
push
ror
notl
std
outsb
insl
mov
psllq
sub
pop
enter
cmpsl
repz
in
push
or
cld
push
xor
test
jo
and
or
dec
outsb
push
mov
push
loope
and
pop
and
testl
jmp
dec
mov
test
lods
pop
and
add
iret
sub
jecxz
gs
jno
jecxz
push
pop
lahf
mov
repz
dec
test
js
mov
sbb
orl
cmpsb
incb
cmp
or
outsb
mov
mov
push
lahf
jbe
jl
mov
push
xchg
adc
fdivrs
cmpl
mov
mov
nop
cld
lret
dec
stos
dec
cmp
sub
push
add
push
and
add
loop
sbb
lret
sbb
and
fisttpll
das
je
push
int
pop
pusha
cmp
sbb
add
call
shlb
lea
inc
mov
xor
jl
push
insl
add
popl
aaa
fistps
push
or
dec
jle
fsubrs
or
mov
stos
in
pop
cmpb
push
scas
aaa
stc
xor
pop
pushf
mov
push
cmp
lock
jg
mov
adc
mov
xor
mov
scas
fadds
jb
or
adc
sbb
leave
xlat
mov
insb
mov
push
xor
or
je
adc
jb
out
mov
insl
add
pop
mov
inc
jbe
sub
mov
push
fucom
push
jmp
ljmp
aam
push
xor
cmp
jae
cmpl
sub
sbb
jmp
insb
addr16
pop
jmp
lea
outsl
insl
push
inc
xor
push
div
decl
dec
mov
lods
insl
mov
inc
mov
das
jle
lret
inc
rorl
aaa
cmp
subb
sbb
pushf
pop
push
cmp
test
xor
dec
testb
add
std
dec
int
jns
rep
pop
sub
ja
add
dec
sbb
jl
std
loopne
and
or
nop
je
outsl
insl
dec
xchg
and
xor
ljmp
push
xchg
stos
inc
dec
cld
xor
insl
nop
outsb
sub
loope
and
pop
rcll
mov
jecxz
or
out
push
rolb
adc
lret
ss
mov
mov
test
jmp
in
data16
dec
ljmp
stc
bound
out
pop
stos
mov
lea
sub
inc
jp
pop
cmp
repz
and
js
fs
jle
mov
fdivrs
jg
mov
lock
in
das
pop
dec
dec
and
imul
jecxz,pt
fbstp
gs
inc
xor
inc
jl
cmp
repz
das
jp
cmp
push
shll
outsl
push
loopne
jg
leave
mov
popf
sysenter
or
shrl
fstpt
mov
cltd
leave
and
and
mov
mov
add
fisttpll
adc
and
jo
pop
decb
mov
rcrl
sub
push
ds
push
dec
cmp
lea
pop
js
outsl
cmp
ljmp
push
insb
cs
subb
cwtl
icebp
sub
xor
or
rorl
adc
dec
push
mov
out
dec
push
icebp
jae
std
xchg
scas
push
and
insl
pusha
mov
cld
ja
jns
mov
push
test
mov
pop
ret
outsb
cmp
bnd
lock
scas
pop
jl
dec
addr16
add
lods
dec
outsl
mov
out
mov
jmp
sbb
jle
pop
add
adc
xor
js
mov
inc
xchg
sarb
into
pop
ret
popl
dec
mov
pop
mov
cld
dec
int3
lahf
xor
movlps
std
push
dec
gs
dec
jmp
in
outsb
and
daa
cwtl
ljmp
jg
mov
sarb
jg
addr16
enter
sub
mov
das
inc
insl
cmp
inc
mov
in
mov
mov
pusha
xor
jle
out
cmp
push
or
jecxz
out
scas
iret
mov
inc
sahf
scas
jmp
pop
or
sub
repz
jmp
and
fistpl
fnsave
jmp
lods
xor
xor
push
loope
jge
adc
mov
outsb
push
jns
lds
popa
jg
adc
dec
sbb
adc
sahf
sbb
fs
mov
dec
cld
add
mov
fistpl
fisttps
fs
aas
insl
push
cmp
add
outsb
scas
pushf
cli
jb
mov
xor
ljmp
shll
in
xchg
push
sbb
add
mov
push
pop
cmp
dec
inc
sub
loopne
sti
out
cld
fistpll
lcall
iret
mov
inc
in
inc
notb
inc
sbb
pushf
fistpll
jae
jne
mov
or
sub
aas
push
ds
jge
das
sarl
inc
adc
sub
fucomp
sub
pop
pop
lods
add
imul
cld
xor
loop
cmp
lea
daa
insl
incb
outsb
jg
mov
pop
cmc
fidivs
jl
jae
ds
fstl
je
rcrl
popf
dec
push
aam
or
hlt
sarl
push
popf
or
cld
adc
lods
loop
scas
or
frstor
ljmp
js
mov
adc
je
jmp
mov
pop
mov
and
in
nop
push
test
hlt
fists
insl
pop
jle
popf
inc
das
je
push
add
mov
outsl
pop
arpl
mov
insl
fldt
shrb
ret
imulb
push
push
xor
pcmpeqb
cwtl
js
jge
push
pop
xchg
fmul
adc
outsl
cltd
jecxz
push
pop
pop
sub
mov
or
push
add
outsb
out
adc
jb
mov
push
pop
add
movsb
dec
mov
iret
mov
imul
outsb
sub
mov
std
inc
pop
adc
pop
repz
pop
inc
add
sub
jle,pt
add
je
aas
sbb
pop
xor
fcomi
push
insl
jle
inc
lahf
sub
push
mov
pop
xor
das
fcoms
push
dec
insb
test
inc
js
jle
xor
jecxz
or
push
test
sbb
mov
nop
or
mov
lods
mov
movsb
jns
pusha
aaa
pop
decb
js
pop
jae
push
xchg
mov
mov
or
into
cmp
or
xor
lea
sbb
pusha
insl
push
mov
push
outsb
cmp
pop
jl
inc
ret
and
cmp
pop
mov
jmp
les
jg
in
mov
mov
or
push
iret
outsb
outsl
cli
jle
or
fildll
add
cmp
out
dec
out
xor
outsl
es
xchg
pop
mov
or
out
cmp
shlb
into
loopne
push
jge
in
or
pop
sbb
lods
jg
mov
adc
popa
scas
pmulhuw
xor
pop
aam
adc
daa
sbb
and
inc
pop
inc
push
push
mov
lock
pop
aas
outsb
int
dec
xor
mov
xchg
cmp
mov
mov
push
je
inc
push
stc
mov
sbb
cmpsl
inc
insl
cmp
rorl
mov
scas
inc
jns
lods
call
je
das
cmp
sbb
push
cltd
ss
cmpsl
mov
cmp
outsl
push
inc
pop
iret
dec
push
xlat
std
lcall
add
les
popf
in
xor
xchg
and
fdivs
mov
mov
and
push
jae
sbb
and
and
addr16
pop
bound
dec
push
scas
cmp
iret
movl
push
aas
push
dec
in
xlat
nop
dec
paddq
or
push
pop
in
ja
lods
loopne
rcrl
push
lahf
loopne
lahf
mov
dec
ret
pop
sbb
repz
pusha
mov
and
cmp
aam
roll
mov
sub
clc
je
lahf
add
xchg
das
jg,pt
repz
inc
jecxz
int
mov
mov
xor
fisttpll
hlt
mov
pushf
outsb
aas
lods
dec
sarl
push
rcll
mov
jb
inc
aad
add
repnz
sub
push
sbb
insb
movsl
out
js
imull
xchg
pop
mov
ljmp
cmp
std
adc
xchg
popf
cld
aas
pop
mov
cmp
lods
pop
pop
das
push
lcall
jns
jns
xchg
xchg
jbe
stos
vmread
mov
jno
push
cmp
cmp
and
lods
xor
imull
inc
aas
push
cs
fiaddl
fs
cmpsb
or
sbb
sti
addr16
cwtl
test
push
cs
push
fstp
outsl
jo
cmc
inc
pop
push
popf
or
pusha
inc
js
in
iret
pop
mov
shrl
mov
int3
pcmpeqd
test
jle
pop
xor
cmpsl
out
xchg
das
push
aas
mov
dec
dec
push
mov
clc
mov
jns
xor
push
inc
ret
insb
pop
jl
jge
scas
insl
add
mov
in
shl
cmp
aas
addl
cmp
pop
js
out
jne
in
mov
dec
cld
gs
stc
jbe
lea
ret
lock
pop
in
scas
mov
sbbl
sbb
push
dec
fs
jg
pop
dec
outsb
cmp
mul
enter
or
aas
sub
adc
add
mov
and
pop
mov
inc
clts
insl
inc
repnz
int
js
repnz
xor
negl
adc
int
adc
decb
scas
stos
pushf
sub
in
jl
mov
scas
jl
in
sub
xor
lock
outsl
push
pop
insb
je
xchg
mov
jle
insb
shlb
addr16
push
cs
jl
mov
popf
push
inc
push
js
call
insl
cs
sub
inc
pop
repnz
inc
dec
mov
clc
loop
cmp
jne
jge
jmp
push
jmp
jecxz
scas
mov
adc
mov
adc
cmp
sub
pop
loope
dec
mov
jmp
das
xor
pop
ret
pop
shl
std
mov
sub
insb
sub
rorb
push
fidivrs
aaa
cmpsb
xchg
int
les
out
push
ds
cwtl
push
je
lods
outsb
in
jne
push
out
por
xchg
out
pop
and
pusha
pop
push
mov
sar
movsl
mov
adc
je
sbb
iret
jmp
cmp
cmp
adc
iret
jl
jle
cli
pop
fucomp
push
repz
add
add
inc
or
pop
push
or
sbb
aaa
cld
ljmp
mov
pop
sub
jl
jg
xor
push
notb
iret
mov
addr16
pop
negb
or
jns
add
mov
or
adc
aas
lahf
out
imul
sbb
and
adc
jp
sbb
dec
push
jno
pop
lock
dec
jg
sub
cmp
cld
add
pop
or
in
dec
jge
jl
mov
out
dec
nop
aas
insl
push
or
sbb
shl
xlat
shrb
jbe,pt
dec
xchg
insl
dec
pop
and
sub
std
dec
repz
je
xlat
adc
jmp
mov
cmp
push
add
push
dec
shlb
cmp
push
clc
push
dec
in
mov
inc
scas
sub
ja
ja
cmp
sub
jge
addr16
mov
pusha
testl
sti
jmp
rcrl
xrelease
mov
dec
lahf
jg
popf
xor
insl
cmp
sub
and
std
cltd
adc
jns
ss
in
sbb
cmp
xchg
jge
into
cld
outsb
js
aaa
repz
outsl
xor
mov
mov
pop
js
scas
push
fucomp
push
stos
data16
sbb
sbbb
out
dec
sub
cmp
frstor
or
adc
push
cmp
xor
jecxz
fs
lock
std
push
pop
lea
mov
push
cmp
movsb
push
outsb
loop
in
push
and
pop
jecxz
lods
insl
leave
lea
in
hlt
dec
out
cmp
out
jmp
push
addr16
outsb
cmp
mov
fmulp
push
inc
hlt
ds
adc
aam
mov
ret
xor
movsl
aas
mov
jae
cld
fs
sarl
push
push
jecxz
pop
push
push
xor
pusha
add
int3
call
mov
dec
mov
frndint
jge
sub
xor
aas
lea
jne
fldl
cs
jecxz
mov
js
mov
imul
pop
dec
jb
mov
lods
jl
adc
out
sbb
testl
rep
mulb
fldl
jg
sbb
dec
mov
std
incb
or
aam
pusha
pop
push
fs
jns
inc
and
jg
out
sub
adc
popa
mov
jo
mov
jge
insl
pop
jecxz
scas
inc
adc
mov
pop
lahf
and
sub
hlt
jle
and
push
arpl
dec
lods
outsl
inc
in
cld
pop
jmp
iret
cmp
push
ds
fcmove
pop
pop
cpuid
imul
mov
mov
add
popf
push
negl
pinsrw
jg
cld
sub
sub
ds
jle
cmp
pop
insl
sbb
call
outsb
mov
mov
sbbl
outsl
outsb
adc
push
push
add
in
and
push
test
lahf
out
xchg
outsb
inc
cmp
enter
pushf
aaa
loope
adc
pop
js
daa
mov
outsb
shr
pop
and
in
mov
adc
aas
or
cs
jnp
push
cmp
fsubs
es
outsl
push
pop
sbb
and
lret
sub
movhlps
or
in
sub
fstpl
or
fisttpll
movsb
adc
out
jo
push
popa
out
jg
je
outsb
add
mov
fidivs
outsl
push
in
ds
lcall
fstpl
mov
das
pop
mov
push
lahf
orb
jbe
pushf
shlb
dec
inc
adc
adc
ja
insl
mov
jg
sub
add
or
lods
pop
sbb
mov
jmp
push
dec
fisubs
aad
repz
popf
push
cmp
jl
in
fs
adc
hlt
jle
in
insb
stos
dec
inc
jmp
pop
insl
push
push
iret
mov
stos
adc
outsb
mov
lahf
push
pusha
adc
jle
inc
enter
mov
lods
addr16
or
adc
filds
xor
pop
in
imul
outsb
and
hlt
lea
inc
lret
pop
repz
xchg
pop
add
aas
lret
sub
push
in
lods
out
and
push
insl
add
dec
js
lcall
lods
cs
mov
addr16
xor
lea
jno
es
add
sbb
and
add
ja
addr16
data16
notl
xor
pop
popf
out
lret
outsb
push
outsl
das
or
mov
stos
jl
xchg
pop
in
xchg
mov
or
ret
sbb
sbb
outsl
addr16
add
dec
mov
lock
pop
stos
jno
push
jl
lea
sub
cmp
out
cmp
adc
xor
mov
orb
sahf
lods
or
push
mov
xchg
dec
cwtl
das
jmp
fidivrs
mov
dec
cmp
call
shlb
push
push
sti
cmpsl
inc
filds
cmp
cmp
xchg
in
mov
adc
repnz
pop
xor
out
out
add
in
test
arpl
cmp
scas
popf
std
js
dec
iret
orl
mov
xchg
dec
jge
divl
push
jg
add
outsb
repnz
mov
push
rorb
fbld
shlb
aas
in
sbb
mov
jle
mov
sbb
inc
fdivrs
mov
mov
popa
add
out
push
mov
aaa
pushf
std
insb
les
cmp
push
jle
clc
pop
aas
repz
add
cmp
pop
std
jge
sub
inc
jmp
addr16
mov
scas
adc
mov
js
iret
sbb
into
or
insl
jle
and
shrl
std
sbb
jmp
adc
sub
push
sub
popf
dec
sub
and
sbb
ds
mov
test
xor
cmpsl
int3
add
sub
inc
out
jns
lea
lret
dec
xlat
pop
popf
jecxz
jl
rcrb
outsl
pop
cli
cmp
push
lods
iret
scas
mov
jmp
in
push
aas
call
das
data16
adc
sbb
mov
sbb
pop
stc
and
adc
mov
add
mov
jge
stos
data16
or
imul
cld
sbb
xor
xor
adc
mov
negb
dec
insb
das
dec
lea
cmp
sub
dec
in
stos
scas
push
lea
mov
outsb
or
mov
loopne
or
xchg
lds
add
lahf
pop
insb
or
pop
sbb
dec
xor
dec
jmp
and
test
sub
and
idivb
repnz
jmp
and
icebp
adc
repz
sub
popf
popf
mov
sarl
int3
scas
cltd
ds
rolb
ljmp
test
ret
jae
jmp
pop
data16
loop
insb
scas
or
push
inc
shl
movsl
push
sbb
mov
push
pusha
imul
inc
insl
push
popf
add
add
out
push
push
mov
leave
push
push
and
adc
cld
in
imulb
pop
jl
or
dec
mov
push
inc
out
rcrl
out
cwtl
outsb
lock
pop
addr16
int
adc
dec
cs
inc
jo
add
and
insl
ds
loope
call
xor
jge
mov
and
das
out
lea
js
cmp
or
icebp
test
popf
xchg
cmpsl
pop
test
negl
repz
xchg
pushf
das
jae
dec
les
and
repz
enter
iret
outsb
mov
jp
pop
test
mov
in
int
jle
mov
mov
dec
lods
in
jns
cmp
cld
sbb
inc
bound
iret
les
insl
cmpsb
ret
fsubs
and
test
dec
add
jg
add
xchg
in
je
lahf
mov
xor
inc
sub
hlt
lods
out
js
std
outsl
add
dec
push
clc
push
loope
xor
mov
sarl
push
pop
inc
mov
addr16
repz
lahf
dec
popf
int3
jb
lods
dec
in
adc
jge
loop
ret
sub
fidivrs
xor
scas
aas
push
dec
adc
out
cs
sbb
popf
mov
push
jle
pop
repnz
sub
pusha
sbb
sbb
jecxz
mov
mov
insl
adc
notl
xor
mov
push
nop
imul
jecxz
mov
xor
dec
movsb
subl
sub
mov
ds
mov
push
jg
loop
xchg
mov
mov
pop
push
cld
dec
fnstcw
cmp
jg
lahf
test
add
out
jo
mov
out
outsb
pop
rclb
outsl
and
cmc
mov
dec
pusha
fwait
push
ss
mov
fistpll
add
mulb
add
and
ret
sbb
push
cmpsl
jnp
jne
add
insl
addr16
std
xchg
pop
es
and
mov
cs
adc
mov
out
adc
mov
cs
xchg
out
fmuls
js
mov
std
adc
cld
push
mov
addr16
leave
sbb
aam
movsb
mov
jae
push
jo
shll
xor
insl
std
in
dec
gs
inc
sbb
enter
ljmp
daa
arpl
insl
sub
pop
jle
jg
sbb
dec
pusha
lods
lcall
inc
das
and
or
stos
lods
cld
xchg
enter
repz
mov
sub
in
insl
jl
mov
cmp
sarb
sub
push
push
mov
xor
popf
iret
insb
fcomip
jge
mov
bswap
or
cli
xlat
add
or
sub
cld
jecxz
dec
adc
push
scas
inc
popa
ud0
lods
and
sub
nop
popf
fadds
repz
shr
jae
je
xor
jp
push
or
hlt
lret
jmp
mov
inc
push
sbb
out
xor
inc
mov
cs
popf
xor
addr16
or
cld
xchg
das
repnz
jge
dec
pusha
or
push
sub
jbe
mov
mov
adc
fildll
into
test
cs
insl
cmp
mov
loope
inc
cli
pop
fisttpll
dec
sub
jg
sbb
insl
dec
mov
jns
push
out
jno
mov
jg
lret
fldl
inc
sub
out
mov
lods
inc
repz
pop
or
insb
addr16
lahf
scas
cwtl
inc
xor
and
mov
aas
pop
mov
or
fadds
push
xor
pop
popa
outsl
loope
jl
add
cmc
cmp
cld
mov
mov
sbb
insb
lods
aas
jae
cld
xor
pop
stos
add
in
mov
push
and
popf
lds
pop
addr16
sbbb
mov
jg
xor
add
or
cmp
pop
jl
adc
sbb
repnz
mov
clc
push
int
out
mov
lods
iret
stos
movsl
sbb
int
push
adc
push
popf
sub
repz
dec
mov
mov
jmp
insl
or
int
xchg
cs
mov
or
sub
shlb
mov
and
jge
push
mov
xorl
add
popa
pop
xor
outsl
adc
js
mov
int3
repz
outsl
push
int
hlt
sub
sbb
mov
repnz
pushl
outsb
pop
sub
out
adc
aaa
sub
jmp
sbb
xrelease
outsl
addr16
mov
das
xor
clc
mov
xor
adc
sub
je
idiv
mov
dec
or
shr
imul
outsl
int
imul
iret
jmp
les
push
repz
je
stos
pop
shl
mov
mov
test
outsb
daa
mov
int
or
aas
xor
or
xorl
adc
lahf
shrl
adc
mov
frstor
mov
fnsave
ljmp
mov
mov
std
in
fisttps
dec
mov
dec
les
scas
sub
fidivs
mov
xor
pop
sbb
add
pop
int
mov
ljmp
fisttpll
imul
sti
gs
aaa
push
pop
dec
sub
fwait
rcll
push
mov
mov
outsb
push
jae
push
jne
cmp
mov
mov
loop
lret
or
jle,pn
pop
mov
jmp
inc
je
mov
shrb
mov
sbb
sub
mov
pop
jmp
xchg
and
pusha
or
cltd
or
iret
sub
test
scas
push
jp
nop
adc
notb
insb
mov
pop
subl
jecxz
rcrl
ds
std
lods
pop
insb
insl
sbb
push
mov
das
rorl
dec
inc
imul
stos
cmp
push
inc
mov
lea
dec
or
ss
and
sub
push
movsl
cmp
and
inc
lret
jbe
sub
fwait
xor
mov
out
push
sub
adc
mov
jg
mov
ljmp
mov
dec
pinsrw
mov
ds
and
call
inc
pop
push
mov
test
push
lahf
repnz
push
inc
mov
push
mov
push
fistpll
xlat
in
addl
fbld
or
je
cmp
adc
push
mov
addr16
pop
sbbl
lock
scas
sub
cwtl
insl
je
push
mov
adc
rorb
sbb
js
stos
pop
das
je
nop
popf
popa
scas
pop
mov
punpckhbw
les
testb
lds
pop
add
cld
dec
mov
lods
jge
lods
push
pop
cli
add
insb
mov
popa
testl
push
and
dec
ucomiss
adc
outsb
dec
test
nop
jo
mov
rolb
mov
pop
jne
and
mov
adc
jmp
fimuls
fbstp
movq
dec
push
inc
scas
repz
push
cmpsl
or
and
mov
sub
lahf
add
repz
cmp
sarb
pop
loope
add
out
push
fcmovbe
hlt
pop
std
js
dec
push
fbstp
jo
and
pop
pop
loope
xor
mov
mov
dec
inc
orb
call
cmp
pop
pop
leave
insb
mov
jecxz
and
jns
xor
lahf
or
and
xchg
pop
mov
jg
add
imul
adc
decb
add
lahf
push
xor
stc
scas
std
jg
lock
fs
aas
in
cmc
or
cwtl
dec
shrl
pop
sarb
mov
cltd
xchg
xor
jg
mov
inc
add
adc
jb
cld
dec
cmp
fstpl
push
ret
addr16
cmc
adc
ja
jecxz
outsb
mov
or
sarb
cmp
mov
or
js
jle
add
pop
xlat
xchg
adc
test
loop
add
mov
pop
rcr
rcl
mov
inc
fldl
in
push
outsl
je
ret
dec
pop
hlt
int
jl
cs
sub
icebp
or
dec
jmp
jmp
push
jb
std
idiv
pop
outsl
shrl
rorb
lods
in
lods
or
dec
scas
and
pop
sbb
xchg
packssdw
decb
insb
js
lods
xor
mov
lock
jns
inc
call
iret
pop
comiss
dec
sar
add
pop
pushf
loope
outsl
mov
lcall
cld
sbb
std
shlb
fs
ret
pushf
xor
sbb
mov
sbb
aas
mov
repnz
js
or
add
shll
jmp
mov
pop
add
out
pop
sbb
repz
insb
pop
and
sbb
and
inc
insl
dec
inc
js
popf
jmp
mov
int
mov
or
out
js
inc
xchg
cmp
repnz
test
data16
dec
lock
jg
dec
fcmovu
test
pusha
std
leave
sahf
fdivs
mov
push
sub
cmp
push
jb
pop
push
lcall
insl
push
or
dec
or
mov
stos
and
jge
data16
cmp
test
invd
in
mov
dec
repz
fstpl
pop
jo
sbb
dec
or
popa
lea
fistpll
add
addr16
icebp
js
jmp
pop
mov
std
xor
stos
repnz
enter
add
fisttps
shll
lahf
inc
pop
je
mov
fistpll
or
lock
je
inc
cld
push
lea
jle
sbb
rcrb
ss
push
or
push
dec
inc
js
insb
bnd
pop
xor
testl
or
add
aas
cld
mov
loope
jecxz
arpl
ljmp
aas
mov
pop
inc
loop
decl
dec
sub
mov
ds
jecxz
adc
fldenv
or
cmpsl
xchg
hlt
mov
push
add
add
add
dec
mull
lods
xor
push
jne
js
mov
iret
mov
push
sbb
fwait
add
cld
imul
mov
push
cmp
clc
sub
ljmp
or
pop
cmp
andl
fmuls
mov
imul
outsb
cmp
call
je
frndint
inc
sub
mov
sbb
push
int
cmp
pusha
mov
dec
pushf
call
mov
pop
sar
and
ret
xor
stos
jle
xor
cmp
or
lods
sahf
mull
sub
mov
adc
push
ret
jmp
shr
insb
cmpsb
jae
and
and
inc
insl
and
mov
out
sub
mov
lahf
stos
cmp
pop
xor
fwait
and
shlb
shl
lret
addr16
pop
popl
cmp
sub
arpl
mull
std
aaa
pop
jl
sub
mov
bnd
aaa
outsl
pop
mov
call
pop
mov
aas
pop
pop
cmp
push
je
ffree
hlt
out
in
repz
mov
int
jg
aas
addr16
mov
push
lods
mov
cwtl
push
mov
lock
mov
jecxz
pop
xchg
cmp
mov
dec
inc
pop
dec
leave
add
test
popf
cltd
or
loopne
push
sbb
cmp
push
dec
jge
pop
enter
ljmp
in
stos
idiv
hlt
scas
jl
jecxz
dec
pop
es
push
or
push
lea
and
cmc
addr16
mov
aas
cld
push
xor
pop
push
mov
adc
xor
lds
js
mov
decb
xor
lahf
scas
adc
fucom
into
jl
sbb
out
clc
ss
paddd
jns
sbb
pop
push
and
sbbb
jl
scas
ds
sub
hlt
xor
or
and
ja
lea
push
push
pop
lods
push
adc
pop
stos
and
jecxz
test
leave
pop
pop
loop
fmuls
das
pop
and
pop
std
shlb
aas
insl
dec
push
and
sub
sub
xchg
push
shr
add
stc
mov
pusha
cmp
lea
xor
xchg
addb
out
xchg
outsb
mov
cmp
inc
xor
mov
daa
push
lahf
cs
sub
ljmp
push
and
repnz
negl
sbb
mov
jecxz
adc
outsb
test
or
jbe
push
inc
out
dec
sub
addr16
rcll
nop
int
sub
add
push
fucomp
push
cld
fwait
mov
cmp
fs
movsl
xchg
in
xchg
xor
mulb
add
rcrb
sub
inc
inc
and
insb
sbb
xrelease
fnsave
jmp
and
outsl
dec
lret
rorl
cmp
pop
lods
stos
push
lods
dec
xor
cld
test
push
sub
jge
sub
adc
sbb
mov
pusha
jne
inc
cld
jg
out
lods
out
cmp
or
out
dec
inc
jbe
sub
jns
inc
lock
aam
iret
arpl
xor
push
xor
imul
mov
outsl
lea
aas
out
or
add
xchg
sbb
mov
cmp
jmp
sub
or
and
mov
daa
mov
fcomip
dec
jecxz
insb
or
stc
fcoml
mov
sub
push
or
push
mov
cmp
fsts
lock
jg
insb
mov
lea
das
sbb
outsb
mov
mov
push
decb
dec
and
enter
cltd
enter
push
or
pop
add
adcl
call
sbb
pop
mov
sahf
dec
orl
js
mov
push
insb
dec
fsub
out
push
push
inc
mov
xor
repz
lods
test
inc
xchg
test
adc
lods
lods
pusha
or
insb
xor
jg
punpckhwd
mov
movsb
jecxz
jo
xchg
js
adc
imul
mov
cld
adc
dec
shll
loope
sub
dec
add
inc
jg
jo
int
xor
dec
aaa
xor
in
adc
cmp
divl
loop
pop
mov
fildll
sbb
push
cmp
mov
dec
scas
adc
mov
negb
out
test
ds
fistl
call
sbb
jg
mov
sbb
and
mov
scas
adc
sub
ss
push
movsb
lock
popf
insb
ffreep
jg
sub
insl
mov
cmp
mov
fadds
sbb
jge
adc
pop
cmp
aas
or
jne
je
cmpsl
repz
jmp
xor
nopl
mov
xchg
fistpll
cltd
and
int3
adc
xor
push
xor
mov
mov
das
jge
sbb
ds
mov
sbb
insl
std
out
movsb
add
repnz
fistps
pop
sub
mov
sarb
lahf
js
out
nop
mov
fstpl
out
imul
pop
pusha
mov
lods
stos
inc
inc
fisttpll
ds
adc
jg
xchg
aas
jmp
mov
lret
shrl
gs
mov
mov
repnz
dec
das
pusha
or
add
outsb
sbb
aad
jge
mov
test
adc
lea
xorb
adc
push
lret
shlb
push
pop
pop
mov
jb
mov
push
push
sub
in
push
xchg
jae
std
scas
movsb
movsl
cmp
dec
ja,pt
jle
cs
adcl
push
inc
pop
outsb
mov
stos
xor
add
jmp
fsubrs
cmp
dec
das
iret
pop
xchg
push
lahf
add
xchg
int
mov
push
sbb
pop
sub
sti
imul
xchg
outsb
jae
mov
bound
out
mov
jge
push
out
fisttpll
sub
push
jl
movsl
or
mov
mov
jg
jmp
pop
js
ja
int
mov
inc
and
pop
fbld
fdivrs
dec
cwtl
pop
push
stos
stos
add
sub
ret
hlt
rorl
cmp
pop
les
lahf
outsl
or
adc
in
mov
ret
jae
and
dec
pop
xor
jle
movsb
adc
xchg
xchg
ret
call
adc
addr16
mov
jecxz
sub
cmc
dec
call
dec
int
add
dec
jl
add
cmp
rcrb
and
dec
out
fldt
js
stos
hlt
lods
andb
mov
adc
std
inc
leave
insb
pop
mov
xchg
dec
pop
jo
shrl
popf
mov
in
or
pop
negb
xor
jg
sbb
xor
pop
pop
mov
mov
pop
decb
cld
inc
fnstcw
xlat
lea
add
repz
outsb
dec
int
outsb
jmp
or
mov
mov
mov
or
out
scas
dec
inc
repz
outsb
mov
loopne
push
pop
adc
outsl
popf
jp
dec
push
out
pop
je
pop
xchg
daa
inc
and
pop
cmp
xor
pop
hlt
lods
lahf
scas
mov
das
lcall
dec
shll
ljmp
sub
addr16
aam
lods
fsubl
dec
mov
and
or
mov
sbb
xchg
sub
push
or
repz
and
outsl
and
loope
insb
popa
out
mov
iret
nopl
mov
sbb
adc
cld
mov
add
jle
fs
sub
or
jge
test
pushf
add
dec
sub
sbb
in
adc
inc
filds
mov
inc
outsb
es
arpl
lahf
cmp
iret
in
bound
adc
scas
jne
dec
pusha
dec
js
add
mov
cs
jecxz
jmp
mov
adc
inc
mov
mov
iret
xlat
add
pop
dec
add
ror
mov
lods
ds
pop
dec
jg
add
adc
or
icebp
mov
lods
xchg
in
sbb
pop
pop
cmp
lret
cwtl
cltd
dec
subl
nop
hlt
pop
out
inc
iret
je
sahf
push
pusha
mov
andb
xor
jl
mov
dec
hlt
pop
push
insb
std
lahf
mov
aad
mov
push
push
loope
dec
push
mov
cmpsl
mov
sub
js
jecxz
push
js
insl
dec
imul
mov
imul
xor
xor
fnsave
push
dec
or
xor
test
in
mov
sarb
js
xchg
sub
pop
inc
int
hlt
pop
scas
fisttps
pop
cmp
and
int3
test
insl
or
mov
test
push
addr16
stos
repz
out
cmp
idivl
dec
lods
xor
or
dec
ret
insb
add
js
or
scas
pop
dec
out
push
push
mov
or
jecxz
lods
js
sbb
push
sub
xchg
dec
bound
iret
jno
pop
jae
mov
and
andl
loop
jae
mov
aas
mov
out
push
ja
push
jl
das
in
incl
push
int
outsl
adc
sti
sub
cltd
shrb
xchg
mov
clc
dec
pop
dec
adc
incb
iret
jl
jge
jo
push
add
mov
repz
insl
jl
fcomps
push
pop
add
loop
mov
mov
or
add
jge
push
dec
clc
test
mov
int
cmp
lods
xchg
icebp
lock
dec
mov
push
sbbl
xor
adc
int
mov
add
jae
outsb
scas
inc
mov
pop
mov
mov
or
lods
xchg
out
rorb
sbbl
mov
jl
push
insb
scas
adc
neg
dec
jecxz
sbb
neg
int
gs
xchg
cmp
aaa
pop
push
clc
popa
adc
les
loope
adc
into
hlt
inc
xor
mov
xor
sbb
sti
mov
xor
add
lea
mov
lods
sbb
in
int3
adc
insl
sub
rclb
out
aas
adc
ja
sub
mov
sbb
xchg
daa
sub
fwait
xor
insl
or
inc
pop
sbb
sbb
xor
and
out
lret
xor
out
ljmp
dec
repz
insb
mov
insb
iret
das
adc
adc
and
or
xor
push
jle
sub
mov
lahf
sub
mov
insl
lret
push
call
adc
sub
mov
sub
xor
loop
insl
jg
leave
enter
pop
cltd
and
cld
mov
in
cmpsl
or
enter
repz
dec
ljmp
cs
cmp
rolb
aas
sbb
jg
adc
xor
out
repz
insl
adc
mov
xor
adc
jb
iret
repz
repnz
dec
aam
adc
loopne
repz
enter
fnsave
andl
lods
pop
lahf
ljmp
sbb
and
mov
push
ret
pop
inc
scas
pop
ret
push
out
cs
inc
decl
xchg
jmp
mov
push
repz
iret
outsb
adc
out
dec
cld
add
clc
jns
jecxz
pop
mov
pop
pop
xor
pop
jbe
ja
jmp
jle
lret
cmp
into
shr
bound
push
pop
stos
and
popf
adc
gs
xor
paddd
fwait
xor
inc
dec
lock
jmp
data16
lods
popf
std
pop
je
xor
lods
lods
cmp
and
ret
sub
lods
push
rolb
jg
outsb
push
jmp
dec
mov
add
repz
lods
push
shr
fstl
movsb
outsl
aas
inc
cmp
inc
lcall
shrl
pop
push
dec
mov
dec
cli
in
sub
add
repz
int3
inc
mov
cmp
and
stos
js
xor
push
fistpll
dec
subl
outsb
andl
jbe
pop
pop
jbe
arpl
xor
xor
cmp
popf
popa
sbb
sbbl
mov
stos
xor
mov
jo
comiss
xchg
adc
lahf
push
jl
ds
jecxz
jg
loope
sbb
pop
call
sub
mov
repz
cs
cmp
std
push
popf
inc
inc
fdivrl
fildll
shlb
cmp
into
pop
adc
addr16
out
aad
stos
decb
je
adc
adc
cmpsl
lods
int
cmp
inc
pop
pusha
leave
outsb
or
sbb
or
outsl
das
mov
cmp
adc
pop
aas
dec
xchg
repnz
cmp
rep
test
and
stos
int3
out
imul
ljmp
push
xchg
nop
pop
or
add
fucom
cmp
icebp
dec
subb
in
sub
mov
and
sarb
or
sub
push
cmp
aas
pop
or
push
ret
mov
dec
xchg
mov
cmp
or
mov
sbb
add
jle
ret
push
push
dec
xchg
lods
fisttpll
push
xor
sub
jg
xor
lahf
push
idiv
xchg
lods
or
loope
sbb
push
cmp
sahf
sub
out
int3
scas
cmp
cs
cmp
push
push
punpckhbw
lock
int
ljmp
or
mov
das
dec
pop
aas
pop
add
push
insb
cs
push
iret
inc
xor
pop
dec
pop
int
cmp
decl
or
rorl
iret
cmpl
addr16
cwtl
incb
xor
adc
xor
dec
sbb
adcl
add
movq
je
jb
cmp
insl
sub
fs
mov
mov
scas
dec
inc
in
cmp
jne
call
push
je
mov
jo
cmc
jae
testl
out
ret
stc
or
aad
cs
dec
mov
das
repnz
int
es
scas
lods
mov
or
push
mov
sub
addr16
fistps
adc
ds
rcrb
jl
add
aas
dec
jle
addr16
lods
pop
pop
xor
inc
or
push
or
popa
push
out
adc
in
js
xchg
aas
insb
insb
lea
inc
jmp
loope
lahf
addr16
std
filds
push
pushf
pop
jle
cltd
jae
inc
adc
push
test
lds
pop
addr16
inc
iret
scas
scas
jge
lock
lea
inc
js
fmuls
mov
mov
jg
jge
in
and
repz
int
cmp
pop
rcrb
xor
lods
mov
lea
xor
add
repnz
pop
jb
lods
iret
sbb
cs
lcall
stos
mov
mov
pop
ljmp
pop
popf
repz
enter
mov
in
xor
insl
xor
shl
popf
mov
xlat
pop
in
xor
cmp
sub
ss
jmp
adc
out
clc
ss
js
aad
dec
out
out
inc
insl
jecxz
cli
ret
push
mov
jge
addr16
lea
loop
add
cmp
inc
jl
xlat
ret
xor
add
pop
mov
mov
in
cld
popa
loop
mov
repnz
push
insl
js
xor
dec
or
jg
outsl
sub
xor
lods
push
cmp
out
fidivrl
movsb
cld
stos
aaa
dec
dec
jmp
xor
out
in
xor
outsl
repnz
push
add
rorb
js
fnstcw
mov
cmpb
xchg
pop
pop
imull
setg
cld
out
add
loope
adc
sub
inc
lods
iret
or
out
out
repz
sarl
lea
sbb
in
sub
mov
jge
inc
outsb
insb
mov
sarl
das
repz
enter
js
dec
fs
sbb
cmp
cmpsb
mov
pop
mov
pop
mov
scas
mov
int
push
lea
xchg
insb
outsb
out
cmpb
pop
out
insb
icebp
js
adc
xchg
testl
leave
stos
or
push
mov
inc
push
dec
ja
mov
imul
outsl
sub
inc
jns
pop
or
mov
and
popf
sub
fmul
aas
lods
fcomps
mov
dec
or
dec
popf
ja
cmp
xor
fs
pop
jg
xchg
push
repz
movsl
cmp
shll
iret
sbb
lods
dec
mov
fsubrs
push
hlt
mov
in
sbb
sbb
xchg
or
repnz
or
fsincos
xchg
jmp
incb
jmp
cld
jge
push
aaa
fnstsw
aas
sub
jg
xor
insl
mov
rcrl
fbld
ret
cld
into
jecxz
push
xor
or
addr16
pop
jg
dec
xor
je
adc
scas
js
mov
cmp
mov
int
orl
mov
out
mov
push
jge
jl,pt
sub
inc
inc
fisttpll
xchg
pop
lods
out
xor
scas
cmp
sbb
cmpsb
xchg
dec
add
lock
xor
add
sub
xchg
mov
insb
jp
outsb
bnd
subl
sti
jo
or
fnstcw
mov
push
mov
jo
mov
add
dec
mov
jg
xchg
loope
add
or
mov
or
xchg
sub
lahf
jge
fabs
pop
pop
in
subb
outsb
adc
addr16
popa
out
xor
mov
lea
fnsave
dec
jb
cld
dec
pop
repz
insl
pop
out
pushf
jmp
jg
jecxz
xor
jns
popl
mov
js
mov
sub
lods
mov
outsb
imul
xor
dec
jno
push
xor
push
icebp
pop
addl
cmp
dec
scas
pop
icebp
std
inc
mov
pusha
mov
push
inc
mov
decb
cmp
cmpsb
lea
fnstsw
call
dec
jo
add
push
mov
xchg
xor
mov
lods
das
inc
sub
int
pushf
jle
jns
cmp
loop
les
push
or
pop
xchg
enter
decl
push
adc
insl
inc
je
or
xor
mov
outsl
adc
dec
or
add
pop
les
cmp
mov
mov
pop
push
repz
push
cmp
sbbl
inc
iret
insl
lahf
idiv
imul
pop
or
jecxz
jmp
mov
push
pop
sbb
fmull
lods
std
pop
adc
mov
add
push
jmp
outsb
xor
lods
mov
out
sbb
jecxz
mov
lcall
out
out
stos
das
cmc
dec
iret
or
cmpsl
decl
adc
inc
test
in
int3
cmc
ret
out
daa
pop
iret
bnd
inc
leave
in
and
pop
xor
and
cmp
push
mov
lods
jle
nop
scas
pop
dec
outsb
and
sub
outsb
sub
lods
fcom
scas
filds
std
push
lods
inc
jo
and
mov
out
or
insb
push
popf
inc
pop
cs
or
cli
fisttps
sub
pop
dec
jmp
ds
stos
das
add
mov
hlt
jl
and
in
insl
into
mov
lods
mov
mov
div
aas
cld
fistps
add
mov
add
leave
jg
outsl
and
mov
cs
xchg
ffree
adc
and
pop
push
push
mov
lret
lods
xor
xor
sbb
pop
lea
push
cmp
adc
pop
xor
sbb
pop
out
cs
incb
stos
jecxz
adc
push
aas
ret
stos
pop
aaa
std
xor
outsb
test
dec
cli
aas
imulb
orl
pop
lcall
fildll
aaa
or
shrl
adc
shll
xor
cmp
pop
or
adc
in
fisttpll
out
cltd
repz
pop
and
jg
xchg
dec
pop
pop
outsl
repnz
sbb
jle
push
add
scas
adc
or
sub
scas
addr16
lods
sub
jg
mov
aas
out
outsl
push
cmp
inc
xlat
es
test
adc
push
int
sbb
mov
mov
xor
gs
and
jg
insl
cmp
sub
stos
lret
lahf
aam
dec
jg
push
dec
fisttpll
push
jl
xchg
js
push
dec
insb
mov
mov
mov
dec
pop
pop
into
out
pusha
lea
adc
xor
push
sbb
inc
sub
jmp
pop
subb
and
lcall
ds
inc
sub
outsb
pop
cs
mov
outsl
andl
inc
dec
pop
cltd
repnz
jmp
int3
xor
xor
lods
shl
mov
xchg
and
outsl
cmp
fbstp
dec
loope
lahf
loop
loop,pt
sub
clc
sarl
int3
jl
jne
in
orb
mov
outsl
push
push
xchg
xchg
pop
lock
insb
jecxz
fucomip
xlat
sbb
cmp
jmp
mov
repnz
adc
cmp
lods
popf
pop
pop
push
push
ds
mov
mov
and
ds
dec
jle
negb
or
jnp
sub
xchg
std
test
mov
sub
jge
minps
xor
loop
ljmp
int3
mov
mov
xor
sub
dec
and
sarl
jecxz
rcrb
mov
test
add
pop
xor
lods
pop
xor
addr16
pop
sub
mov
ds
inc
push
jmp
add
outsl
pop
xchg
pop
iret
sub
or
jle
sub
aas
into
out
enter
jl
nop
mov
imul
ds
mov
push
addr16
xor
or
fldcw
in
mov
repz
adc
jmp
lods
pop
dec
int
ss
dec
sti
or
cmp
insb
addr16
dec
cmp
inc
push
repnz
aam
adc
lods
mov
cmp
sbb
iret
xor
jle
enter
inc
mov
imul
ljmp
iret
js
jae
jo
pop
push
out
int
outsb
and
jl,pn
in
fnstsw
mov
ljmp
ret
xor
adc
adc
and
sbb
adc
jle
fistps
popf
repz
rol
iret
jmp
pop
add
sbb
aam
lock
push
repz
jge
pop
jmp
popa
out
das
add
add
sub
call
inc
push
repnz
push
or
or
stc
sub
pop
in
rcrl
mov
rsqrtps
jo
jle
iret
inc
out
bt
cmp
int
into
popf
fstps
js
dec
inc
in
jecxz
push
push
jmp
cmp
aad
lret
cs
stos
dec
mov
scas
or
loop
adc
lahf
push
dec
out
enter
push
or
mov
fs
jg
scas
repz
push
aas
sbb
inc
xor
cmp
adc
repz
sbb
dec
xor
outsb
and
push
mov
bound
and
std
jae
xchg
sbb
jb
jg
lcall
aaa
push
popa
mov
arpl
insb
loopne
cs
nop
loope
mov
push
shl
cmp
jae
ljmp
or
insl
cmp
and
pop
adc
stos
int
insl
in
loope
mov
mov
fucomip
inc
pop
lods
or
cli
repz
iret
pop
cli
fimull
out
mov
out
aaa
out
jle
pop
mov
xor
filds
mov
in
push
das
cmp
adc
jecxz
cli
arpl
adc
leave
data16
mov
and
mov
std
jne
push
lret
popa
lock
ret
lods
cmp
subb
jmp
xchg
imull
or
jmp
pop
inc
hlt
lcall
lret
sbb
ja
pop
push
aas
pop
mov
push
xor
popf
das
gs
push
cld
jle,pn
push
lahf
sbb
xchg
adc
push
push
push
clc
cld
scas
popf
xor
lods
dec
pusha
cmpl
push
cmp
push
inc
cld
inc
dec
mov
das
outsb
jg
jae
pop
int3
jl
insl
pop
shrl
adc
xor
xor
or
bound
push
mov
pop
push
iret
jns
jns
fisttpl
in
stc
outsb
sub
test
lahf
mov
xor
xchg
push
mov
sub
sbb
mov
scas
pop
inc
sbb
loop
push
cmp
xchg
int
push
int3
fdivrp
dec
dec
pop
add
push
pushf
scas
scas
inc
fldl
dec
pop
lock
aaa
jcxz
sbb
pop
add
lods
sub
dec
fcomip
mov
push
outsl
jmp
aaa
iret
sarb
cmp
push
jl
div
outsl
mov
out
iret
push
jo
push
ss
xor
and
xor
jle
jp
outsl
insb
pop
aas
sbb
xor
ds
loope
jge
or
pop
and
and
xor
push
pop
or
insl
sbb
mov
dec
pop
mov
inc
sub
lods
insb
in
cwtl
or
js
cmp
enter
dec
pop
int
mov
clc
out
cmp
pop
or
dec
insb
jg
pop
insl
bnd
jmp
rcrb
cmp
and
int
jne
mov
xor
cmp
in
hlt
push
jle
decb
fcom
outsl
push
sub
push
dec
pop
fucom
and
add
fstps
push
aaa
mov
das
mov
les
mov
repnz
out
ds
push
push
imul
in
shrl
jle
in
push
jmp
rcr
das
or
mov
inc
mov
std
add
int
add
xchg
add
mov
lahf
dec
outsl
and
insl
pop
cmp
das
in
cmp
push
int
outsl
stos
jg
mov
sbb
loopne
stos
repz
inc
jl
fucomip
adc
mov
int
cmp
cs
dec
out
lahf
jecxz
or
mov
lock
addr16
jno
es
and
iret
mov
sub
clc
push
popf
imul
pop
mov
mov
mov
mov
push
or
jo
call
outsl
push
cmp
sbb
data16
mov
inc
inc
pop
fwait
enter
in
jb
cmp
jno
xor
pop
outsb
stos
outsl
cwtl
sub
lea
cmpsl
adc
jl
in
aam
jne
ret
js
out
jecxz,pt
jmp
and
dec
mov
sub
movsb
lods
push
adc
push
add
aas
push
das
sets
xor
xchg
adc
sub
ljmp
jbe
mov
pusha
and
jns
sbb
imul
push
lret
sbb
add
lods
fs
bound
and
fucomip
insl
iret
int
repz
std
je
lea
add
xchg
pop
jns
mov
xor
lods
jecxz
ja
lods
push
fmull
push
mov
ss
mov
outsl
jmp
cmp
stos
cmp
fisttpll
lods
outsb
adc
jp
test
fildll
add
test
or
bswap
in
outsb
mov
insl
mov
lret
jl
mov
std
popf
stc
fisttpll
add
stos
lea
sbb
dec
aam
iret
or
cmp
es
push
dec
out
insb
out
mov
mov
in
mov
mull
paddsw
int3
lea
dec
adc
ds
jecxz,pn
xor
inc
or
mov
pop
push
pop
loope
push
sub
addr16
or
push
mov
and
push
out
jp
imul
cltd
or
inc
dec
std
iret
mov
xor
stc
rorl
and
pop
push
adc
in
scas
jle
je
subl
lea
jl
fstp
outsb
scas
push
push
decl
test
mov
scas
pop
cs
shrl
mov
jecxz
dec
dec
mov
sbb
jmp
add
outsb
cmp
imul
and
mov
push
dec
cld
add
mov
dec
lcall
lods
lret
ja
movsb
fnstsw
in
push
jmp
bound
push
dec
es
xor
cmp
add
dec
popl
fsubrp
and
xlat
dec
mov
push
adc
int
cmp
push
out
xchg
shrb
hlt
scas
mov
loop
stc
test
jo
add
mov
dec
data16
mov
xchg
push
adc
xlat
add
pop
ljmp
cld
stos
mov
sbb
dec
jl
mov
mov
jmp
add
cs
clc
cmp
addr16
push
push
stos
xchg
insb
in
lahf
sbb
dec
pop
push
inc
or
mov
inc
lods
lods
imul
outsb
xchg
cltd
or
xor
mov
push
outsb
addr16
mov
xor
pop
jle
int
cmp
or
cltd
movb
outsl
insl
xor
outsb
call
lods
lret
ret
call
outsb
push
pushf
mov
adc
mov
pop
mov
mov
std
mov
mov
and
jnp
outsl
jg
and
prefetch
or
popa
sub
sbbl
iret
pop
addr16
lods
aas
nop
sub
jle
cmp
or
push
dec
ds
add
adc
enter
inc
cmp
jo
das
outsb
out
ds
adc
pop
push
scas
testb
pop
pop
push
inc
cmp
cmp
stos
dec
dec
adc
in
repz
cld
lds
imul
in
cmp
or
cltd
incl
adc
mov
add
lea
stos
pop
sbbb
sub
popf
sbb
out
jmp
and
aam
xor
pushl
pop
int3
inc
out
ljmp
shlb
popf
popa
cmp
sub
lcall
push
xor
push
cmp
dec
jbe
cmpl
lods
cs
and
vunpckhps
push
cmpsl
jns
jl
ficomps
add
lahf
mov
jmp
push
push
setg
popl
loope
sbb
scas
cld
cli
mov
inc
pslld
pop
fs
jl
jge
sub
lahf
cli
mov
mov
push
and
inc
dec
push
iret
mov
jle
push
push
push
adc
adc
and
push
js
push
lods
sbb
mov
push
rclb
jnp
inc
ss
das
ucomiss
pop
cwtl
outsb
cmp
xor
int
mov
sub
jle
decl
jne
dec
and
fidivs
je
insl
lods
add
jecxz
mov
adc
pop
push
repz
cmp
lahf
iret
xchg
xor
sub
aas
fwait
icebp
fwait
mov
sub
sbb
push
lea
hlt
das
sub
outsb
insb
sub
jmp
shl
fldl
adc
mov
pop
je
scas
outsl
popa
fsub
stos
iret
mov
int
sub
inc
add
pop
pop
jge
out
cmp
cmp
call
mov
or
out
mov
je
out
call
es
pop
outsb
xchg
inc
jns
jmp
jle
aam
cld
jg
in
mov
dec
push
mov
push
lods
push
mov
or
jmp
in
in
lret
in
int
jmp
sbbl
inc
and
adc
mov
std
mov
sub
clc
enter
push
push
mov
push
and
cmp
in
insl
loope
int
int
push
xor
pop
call
rclb
jecxz
mov
popf
inc
movups
int
cld
lods
cs
outsb
loopne
lea
sub
lods
mov
fnsave
mov
divb
pop
ljmp
mov
lea
pop
mov
cld
je
push
xor
dec
nop
sub
or
cmc
stos
lahf
popf
js
mov
and
ss
scas
pop
popa
mov
pop
les
scas
out
sub
fidivs
std
adc
push
cmp
jbe
add
pop
int
sub
jecxz
dec
insl
out
cmp
jp
pushl
call
das
mov
push
jo
rorl
out
sub
mov
xor
das
push
popf
add
mov
sbb
andl
mov
cmpsl
aam
push
mov
push
dec
scas
insb
push
xor
cmp
jb
stos
jle
addr16
add
mov
mov
pop
sub
push
mov
add
xor
add
cmp
push
std
adc
call
hlt
outsb
pop
push
mov
std
out
cltd
lea
push
mov
int3
xor
call
lods
insl
fdivrs
repz
pop
pop
cmp
popf
js
shll
cmp
mov
jle
fisttpll
cmp
xchg
scas
repz
and
cs
sub
popa
adc
xor
push
out
xchg
dec
outsb
mov
xor
call
je
pop
outsl
or
lea
sbb
arpl
call
ds
mov
dec
cld
mov
test
xchg
push
adc
aas
push
adc
mov
maskmovq
xor
insb
outsl
dec
out
adc
mov
clc
neg
jecxz
fdivrs
ja
xor
and
push
lock
jmp
push
mov
jecxz
mov
push
in
ljmp
int3
jge
stos
das
div
sbb
xor
js
inc
cs
das
sub
jnp
pop
lahf
mov
sti
testb
call
pop
xchg
outsb
push
lea
addr16
fistps
stos
movsl
push
stos
stos
insl
outsb
dec
dec
pcmpeqb
pusha
sbb
add
dec
out
xchg
or
pop
jge
sbb
invd
sbb
dec
mov
sub
fs
sub
cmc
addr16
sub
ljmp
outsb
mov
sbb
adc
jo
xor
lea
xchg
cld
vpmacsdqh
xchg
push
push
call
bound
out
and
inc
xor
push
push
pop
stos
mov
and
add
mov
std
mov
ror
sub
loopne,pn
xor
and
outsb
fbld
clc
aas
vfrczpd
push
pop
int
clc
ss
push
push
push
rorb
push
jl
pop
outsb
lret
adc
dec
cmp
pop
or
imul
fbstp
add
outsb
imul
jg
out
in
ds
mov
add
aas
add
and
out
sbb
div
push
lods
push
outsl
mov
add
pop
sub
scas
es
push
in
pop
or
lret
dec
add
clc
or
mov
xor
pop
xor
jmp
jmp
cmp
dec
outsb
adc
cmp
cs
sub
out
inc
scas
pop
push
das
jmp
leavew
pop
fldt
mov
jmp
test
scas
jb
sbb
test
mov
fucomip
enter
and
negb
sbb
insb
outsb
cmp
dec
mov
xor
jmp
repz
dec
arpl
inc
int3
enter
jge
aas
out
daa
sub
dec
xchg
sbb
rorl
shll
repnz
addr16
mov
sbb
sub
outsl
hlt
ss
std
js
cmp
sub
xor
shll
out
adc
mov
push
es
js
xchg
pop
test
bnd
divb
sub
adc
sbb
cld
sbb
pop
xchg
int
testb
cmp
mov
add
scas
hlt
orl
mov
fs
lea
xchg
call
add
insb
in
aas
mov
out
add
fisttpll
dec
pop
sbb
mov
into
fildll
xchg
unpckhps
pop
es
lcall
iret
jl
aam
out
adc
scas
fldl
sub
lahf
pop
adc
rorl
dec
and
stos
adc
cmp
insb
in
scas
pop
push
xchg
dec
fcomp
test
push
ds
lahf
popf
insb
or
nop
sbb
mov
roll
sbb
inc
inc
xchg
loope
adc
stos
cmp
dec
icebp
sahf
test
repz
mov
lcall
push
jbe
stos
push
and
cmc
and
jge
jle
loop
sub
push
out
pop
cwtl
pusha
cmp
js
jns
sbb
scas
std
adc
push
imulb
je
push
int
stos
cmp
lahf
mov
insb
iret
aas
daa
lods
cmp
mov
sub
pop
rcll
loopne
mov
into
push
mov
jne
outsb
push
mov
push
cmp
push
ret
aam
lods
xor
insl
mov
dec
dec
xor
pop
xchg
cld
or
imul
insb
inc
jl
lret
add
push
lret
scas
mov
pop
lods
inc
out
lea
add
repnz
mov
sub
ds
sarl
notl
scas
cld
adc
lea
sub
and
fst
dec
pop
call
xor
pop
push
movsb
sub
outsl
inc
andl
pop
scas
cs
cld
xor
shrb
mov
mov
iret
int3
out
outsb
xor
push
js
pop
jns
andl
xor
cmp
jg
ss
cli
mov
inc
mov
cld
xor
loope
mov
call
jns
xorl
xor
and
mov
add
shrl
clc
or
push
test
shrl
loopne
mov
dec
jg
xchg
out
or
push
mov
iret
jo
jb
mov
inc
pop
sub
imul
dec
dec
js
popf
movsb
clc
rcrl
aad
pop
pop
lret
popa
jecxz
loop
pop
sbb
sub
mov
inc
mov
fwait
hlt
inc
das
jge
lahf
mov
dec
outsb
lds
mov
ret
out
inc
xor
scas
push
aad
dec
insl
pop
dec
pop
sub
pop
jle
fisttps
fstpl
in
lea
sbb
adc
jb
adc
jge
std
stc
or
push
hlt
repz
das
lods
pop
jo
rolb
out
push
lahf
lods
jge
insl
int
rorb
fsubrs
adc
cld
inc
outsb
push
sub
add
jecxz
je
push
lea
fsubrl
seto
fidivl
clc
push
fucom
inc
hlt
subb
adc
or
outsb
jle
xchg
mov
rclb
lea
pushf
daa
or
cs
add
dec
jge
decb
sbb
filds
js
stos
popa
sarl
test
sbbb
lock
jmp
ds
hlt
jl
mov
xor
fisttps
inc
outsb
shl
add
dec
call
movl
jo
push
cmp
pop
nop
add
cld
push
insb
push
mov
pop
cld
addr16
or
xor
lock
mov
les
pop
sub
cs
jmp
out
jmp
pop
xor
aas
jno
sub
adc
mov
or
in
jecxz
cmp
sbb
cmp
dec
jns
and
push
dec
push
loop
iret
lahf
xlat
pop
and
pop
pop
js
push
ja
push
js
xchg
in
xchg
push
test
mov
mov
push
jne
xor
dec
sbb
ret
mov
sub
sub
mov
fcompl
jmp
mov
and
pop
mov
push
scas
and
sbb
mov
add
sub
jmp
jne
outsb
iret
enter
push
dec
cs
cmpl
out
pop
or
adc
rorb
jge
and
test
jmp
sbb
add
jo
lea
xor
insl
mov
out
push
loop
addr16
cmp
cs
mulps
fsts
dec
or
mov
adc
xor
lea
pop
jecxz
mov
adc
mov
enter
out
bound
push
sbb
pusha
or
jle
add
push
aas
cwtl
or
jbe
pop
cli
dec
mov
js
idivl
pop
enter
data16
repz
or
lahf
outsb
xor
rorl
fucomi
mov
lret
mov
jecxz
inc
cmp
call
data16
push
popf
jg
call
aas
mov
test
pop
mov
push
rcrl
addr16
cld
dec
std
mov
adc
loope
fstl
cmp
dec
aad
sbbb
out
jo
repnz
pushf
sub
lods
push
add
push
push
rcr
sub
adc
ja
xchg
fadd
in
mov
mov
or
mov
mov
xlat
push
das
sbb
adc
push
popf
outsb
je
popa
pop
pop
and
outsb
ret
ds
stos
and
mov
cld
inc
es
stos
pop
pop
jmp
sbb
imul
add
mov
pop
popa
xor
adc
in
fldt
stc
jo
repz
cmpb
outsb
fmull
sub
rcl
adc
xor
call
lahf
rsm
lock
lods
dec
or
aas
push
dec
mov
aas
das
push
outsb
das
xchg
adc
dec
inc
mov
sub
negl
iret
dec
lods
mov
sub
shrb
into
push
mov
lahf
aas
loope
mov
mov
push
stos
and
insb
in
push
fidivl
arpl
mov
data16
in
aam
pop
jl
fidivrs
jp
sub
aas
mov
xorb
pop
rcl
dec
mov
addr16
push
pop
lods
test
jns
mov
mov
pop
test
scas
aaa
fistps
mov
pop
cs
cmpsl
mov
add
cld
int3
jno
mov
sbb
shl
ds
sub
das
jmp
adc
mov
mov
cmp
lods
pop
inc
cld
int3
imulb
push
mov
xor
cmp
adc
pop
add
popf
push
clc
or
or
int3
sub
add
mov
mov
add
cld
xor
pop
rorb
rcrb
mov
xchg
push
insb
cmp
xchg
mov
out
or
repnz
hlt
sbb
dec
sahf
xor
mov
add
cmp
mov
add
pop
bts
pop
pop
sbb
das
jmp
sarl
push
aaa
or
lahf
stos
cmp
xor
cltd
movsb
dec
jp
mov
xchg
cmp
cmp
aaa
pop
call
xor
addr16
mov
pop
popf
filds
call
dec
jl
fucom
sub
mov
lods
inc
cmp
imul
push
imul
int3
mov
iret
int3
mov
jle
lea
and
push
repz
add
std
fst
loope
push
sar
pop
jl
push
jo
jmp
clc
mov
in
and
lea
jp
movsb
inc
js
jle
xchg
jl
andl
sub
repz
hlt
add
xchg
fildll
xor
add
das
repz
aaa
or
mov
addr16
sbb
mov
lods
push
pop
lds
in
sbb
rorl
pop
adc
sub
push
jle
dec
clc
test
mov
cmc
hlt
dec
sbb
aam
lods
and
xor
movsb
or
out
pop
cmpsb
cmp
movaps
repnz
std
jge
mov
repz
cwtl
outsb
outsb
mull
adc
aad
mov
cmpl
sub
and
in
lods
call
push
lea
add
or
lfs
cmpl
mov
shlb
ds
lods
cwtl
push
into
or
jle
xor
xchg
sbb
cmpsl
int3
das
fidivrl
ja
dec
shrb
in
sbb
aas
xor
ljmp
dec
rorl
xor
jae
mov
push
loopne
outsb
jge
push
out
lods
jne
out
mov
push
outsb
cli
xchg
adc
inc
inc
jge
add
in
or
dec
pop
or
imul
or
in
cs
sbb
insb
clc
out
add
push
pop
repz
outsl
xor
andb
lahf
ficoms
loop
arpl
xor
clc
xor
ja
pop
push
adc
mov
lods
jmp
or
jge
andb
outsb
pop
push
sbb
xor
in
push
add
lods
repz
sub
fucomip
int
scas
mov
xchg
shrb
mov
xor
or
xor
repz
cmp
addr16
roll
mov
sbb
aam
std
aam
add
push
repz
pop
ss
or
pop
push
dec
shll
sar
ds
jns
sub
jmp
push
ljmp
jno
clc
fiadds
xor
adc
insl
das
mov
cli
and
fdivs
and
outsb
jl
sbb
rep
int
jge
mov
stos
cld
out
mov
std
dec
sbb
dec
scas
ds
subl
pop
add
std
jbe
jle
sahf
call
push
push
incb
clc
cmp
in
jns
pop
repz
lock
ds
cmp
mov
push
insb
mov
lea
push
and
push
mov
push
lods
pop
rcll
dec
ljmp
sub
js
repz
jo
ss
nop
inc
stos
cld
cmc
mov
iret
xchg
mov
pop
inc
push
fldt
pop
outsb
sbb
or
shlb
popf
scas
dec
orl
add
pusha
bound
mov
jl
loopne
mov
scas
xor
lcall
cmp
mov
adc
push
or
mov
das
add
mov
aas
loop
das
cmovns
xor
aam
test
mov
cld
add
dec
cs
mov
push
in
lea
pause
pop
scas
inc
push
xor
ret
jg
ds
into
ja
push
or
dec
adc
outsb
sub
lods
sbb
sub
push
xor
dec
data16
sbb
loop
in
and
loope
lea
adc
pop
dec
rclb
add
mov
int
jp
les
les
pop
pop
mov
lea
or
or
jecxz
ja
int3
dec
cmp
sub
dec
iret
cmc
inc
scas
and
pop
mov
fildll
lods
add
lods
movsl
adc
pop
and
cld
pop
int
dec
test
inc
out
mov
push
in
mov
outsb
xor
and
popa
pusha
xor
and
adc
and
push
mov
and
pushf
out
push
jmp
in
insb
rorl
int
push
int3
inc
jle
fcoms
push
scas
iret
jecxz
popf
push
push
push
call
mov
sub
jl
or
das
dec
outsl
gs
scas
negb
in
scas
push
insb
repz
or
adc
adc
mov
mov
repnz
dec
xchg
inc
popa
mov
scas
cmp
cmp
fildl
scas
adc
lcall
ja
insl
filds
pop
xchg
push
and
into
cltd
into
cmp
fcmovbe
insb
enter
addr16
sub
and
ja
mov
mov
fldt
push
aas
cmp
andl
popf
adc
adc
sub
in
xor
inc
mov
lock
dec
imul
lahf
xor
mov
and
outsb
int
adc
push
test
sub
lret
dec
cmp
dec
xor
int3
fmull
sar
iret
test
loop
bound
xor
fstps
cmpsl
add
insb
js
cli
mov
lahf
mov
mov
rolb
jg
std
rcrb
lea
inc
lcall
pusha
jl
pop
out
jle
aaa
int
pushf
mov
sub
jp
mov
adc
push
in
push
js
scas
or
rorb
iret
outsl
jns
pop
fimuls
pushf
js
addr16
push
in
push
xor
stos
adc
addr16
rcrb
inc
popa
dec
mov
loop
repz
outsb
jmp
jle
out
or
xchg
inc
inc
mov
imul
mov
cmc
std
out
push
push
insb
insl
fistpll
xor
cmp
jge
xlat
lea
mov
dec
out
aas
iret
sar
cmp
repz
lahf
or
dec
mov
push
or
popw
int
sub
popa
das
ret
jmp
lock
pop
jle
lahf
mov
mov
imul
and
rcll
xor
imul
cmpl
mov
mov
sub
pop
popf
out
mov
enter
sbb
jecxz
repnz
mov
mov
dec
push
fistps
xchg
hlt
inc
or
scas
xor
in
sbb
inc
xor
adc
test
das
jge
mov
clc
jae
js
cld
push
in
insb
sub
inc
push
popf
or
mov
ds
cmp
sub
in
in
dec
adc
pop
push
jg
in
ret
or
cli
mov
push
adc
std
cld
es
loopne
lahf
sub
sbbl
jp
insb
inc
sbb
or
cmp
scas
sti
mov
lret
in
cmp
or
mov
and
xor
sub
xor
dec
inc
fisubl
sbb
mov
dec
je
pop
add
lahf
mov
sub
inc
ds
push
insl
call
and
push
in
adc
sbb
push
repz
out
testl
inc
push
in
out
addr16
inc
pop
repnz
popa
insl
push
insb
dec
mov
in
adc
mov
add
sbb
in
lock
pop
dec
scas
and
in
stos
jl
jg
hlt
insl
popf
or
fildll
mov
outsl
pop
scas
push
aad
shlb
adc
adc
mov
shrb
pop
cmp
in
cltd
cltd
or
sarl
add
cmp
xchg
adc
pop
out
push
aaa
fildll
out
pop
xorl
faddl
pop
cmp
std
fildll
sahf
adc
test
jl
cltd
push
or
bsr
jg
dec
fdivs
insb
sbb
xor
js
mov
cmp
inc
mov
lahf
imul
subb
mov
popa
int
aaa
add
push
sub
or
sarl
std
mov
and
pop
dec
enter
leave
stos
lea
mov
clc
imul
ds
insl
outsb
dec
push
ret
sbb
lock
sbb
cmc
lret
jmp
in
outsb
movsb
push
push
jnp
cmpsb
push
cmp
or
int3
jbe
lods
xor
dec
iret
or
aas
inc
es
sub
dec
xor
mov
adc
test
or
popl
jge
repz
sub
xor
fildll
outsb
insl
adc
jmp
pop
popa
jle
out
adc
insb
adc
comiss
mov
in
mov
mov
or
int3
sbb
or
pop
clc
aad
pop
fcomip
lods
push
jmp
inc
and
call
repz
std
mov
xor
scas
sub
idiv
push
cmp
and
or
gs
into
sbb
scas
push
mov
mov
push
dec
xor
xchg
aas
pop
inc
jl
push
pop
das
and
adc
mov
shlb
mov
stos
push
jl
movsl
or
fwait
mov
out
sbb
fstps
sub
jecxz
mov
pop
outsl
pop
pop
js
dec
cmp
rcll
jle
adc
icebp
in
sub
jnp
mov
mov
dec
xor
pop
jmp
movl
adc
ds
mov
popf
jmp
dec
std
aas
mov
lods
in
insl
push
jg
das
jmp
jmp
insb
je
cmp
add
jl
outsb
adc
push
dec
cmp
daa
mov
jge
in
jl
cmp
jecxz
mov
mov
in
outsl
sub
das
sbb
enter
jae
insl
cmp
lods
pop
scas
ljmp
sub
cltd
push
clc
ljmp
repz
cmp
mov
iret
mov
lret
fistps
in
fidivs
xor
dec
int3
xchg
scas
stos
rcr
std
inc
mov
lahf
fcomip
jl
xor
pusha
xor
add
std
or
and
outsb
sub
je
shr
and
ret
pop
ljmp
outsb
dec
mov
scas
test
jg
jge
sti
cld
pop
mov
loope
push
mov
push
cmp
mov
xor
aas
xor
pop
dec
sbb
and
pop
add
jge
mov
jecxz
adc
call
js
jae
jmp
in
inc
xor
push
sub
pop
push
sar
ds
fisttpll
or
mov
jne
jecxz
jae
push
pop
sahf
das
or
push
jp
das
sub
repz
xor
pop
sbb
pop
jl
aas
lods
mov
mov
inc
jbe
jmp
dec
nop
pop
xor
cmp
repnz
sub
jl
mov
add
push
xchg
jl
adc
add
or
movl
int3
dec
add
decl
cs
and
xchg
in
mov
iret
lods
fwait
clc
jmp
popf
cmc
cmp
aad
pop
outsl
jecxz
or
add
cmp
mov
sbb
js
insl
pop
mov
inc
sub
push
dec
cld
ror
aas
cmp
add
fdivp
xchg
jecxz
inc
push
sub
dec
cmp
push
repnz
and
mov
adc
and
lahf
ficompl
jbe
pop
dec
xor
rcrb
mov
dec
mov
pop
jmp
sarl
xchg
popa
pop
ret
sub
clc
jne
push
pop
sub
int3
daa
fistpll
mov
or
popf
adc
jb
insl
addr16
sub
add
popf
cs
das
scas
xor
mov
in
cmp
loop
mov
clc
lods
mov
fildll
popa
out
mov
insb
push
adc
adc
push
movups
subl
bound
sub
cs
push
xlat
xor
fucomip
in
stos
cmp
inc
ljmp
inc
add
xchg
adc
jbe
mov
add
jecxz
in
add
pop
std
mov
lods
mov
enter
pop
loop
mov
xor
imull
sbb
jecxz
jo
and
jg
outsb
pop
int
cmp
fnstenv
out
repz
outsb
push
dec
mov
std
outsl
jae
nop
mov
iret
sbb
or
push
adc
fs
loopne
pop
sbb
jle
repnz
insl
inc
rcrl
sbb
lea
or
pop
push
mov
xchg
inc
dec
add
int3
ds
add
mov
push
negb
inc
sbb
out
insl
hlt
mov
push
pop
cmp
dec
mov
add
xchg
sbb
leave
mov
addr16
lea
sub
int3
mov
xor
sbb
mov
mov
sub
adc
push
push
adc
push
dec
jns
call
sub
push
add
ret
mov
mov
in
lock
hlt
call
outsb
test
or
push
lods
je
push
popa
dec
mov
int3
sbb
inc
fistpl
in
out
pop
insl
mov
aam
std
scas
jno
cld
push
out
and
xchg
call
push
imull
jae
jecxz
inc
cs
repnz
jnp
mov
add
movsb
ret
push
popa
sbb
ds
pop
int
in
mov
jmp
cmp
clc
push
fistpll
mov
and
js
adc
pop
fimull
fistpll
insb
mov
push
lahf
loope,pn
fcoml
das
sub
out
mov
mov
or
mov
pusha
outsb
cs
fs
ss
add
cmp
sti
in
jo
jae
jg
nop
outsl
jmp
lea
pop
or
cld
jbe
out
push
int
mov
in
outsb
ja
sbb
push
adc
popa
pop
popf
or
out
outsl
inc
decl
stc
leave
repz
sub
xor
jmp
sarb
insl
cmp
xor
dec
push
inc
mov
pop
insb
out
dec
or
jecxz
lock
int
psubb
pop
repnz
cmp
lret
jle
pop
push
cmpsl
cmp
and
xchg
mov
in
pop
dec
inc
stos
dec
xor
data16
insb
sbb
add
mov
pop
xacquire
push
pop
shlb
xchg
adc
inc
mov
cmp
push
ret
xor
mov
push
fisubs
or
mov
sbb
mov
push
repnz
lea
test
cmp
repz
or
and
dec
pop
faddl
xor
mov
adc
mov
dec
pop
and
add
iret
sbb
add
xchg
fstl
pushf
pusha
mov
idivb
mov
pop
xor
add
std
fldcw
dec
insb
jecxz
sub
and
rorb
imul
mov
sub
xor
mov
pop
mov
jecxz
sarb
lock
scas
push
and
test
das
xor
jl
lahf
cwtl
int
std
xchg
das
push
fstpt
scas
pop
pushl
ja
fcomip
imul
or
mov
outsb
icebp
push
mov
insb
repz
call
dec
inc
or
pop
adc
scas
loope
inc
clc
insl
mov
out
sar
das
stos
mov
mov
mov
push
dec
add
rorl
fdivrp
pop
je
jmp
push
mov
iret
add
dec
lea
repnz
mov
cmc
lahf
mov
call
mov
push
lea
gs
outsb
in
mov
int
aam
insb
sbb
add
popf
fisttpll
out
and
inc
xchg
and
insl
jg
int
adc
jl
mov
mov
ja
mov
lahf
pop
iret
addr16
dec
mov
outsb
in
ljmp
or
cltd
das
mov
aas
push
jmp
nop
fstps
jg,pn
stos
pop
dec
adc
cmp
insb
lods
iret
ljmp
dec
fwait
sti
fs
push
sbb
mov
cmpb
pop
das
fmull
insb
ret
xor
lods
push
and
inc
stos
mov
ljmp
xor
pop
mov
jae
push
jmp
js
push
out
insb
std
pushf
dec
push
stos
jle
popa
jg
pop
iret
xor
lahf
and
psllq
das
insl
enter
fcomps
in
jmp
pop
add
negb
std
mov
cli
loopne
inc
sbb
roll
and
cmp
jge
sbb
lods
repz
mov
dec
pop
pop
outsl
adc
filds
insb
sbb
jo
nop
mov
repz
mov
lods
insl
lahf
rorl
pop
sub
cmpsl
call
xor
pop
pop
cmp
push
mov
outsl
js,pn
das
sbb
mov
fsubrs
add
or
inc
iret
cwtl
mov
adc
cli
outsl
add
and
jmp
pop
ljmp
pushl
dec
dec
xchg
or
mov
fdiv
out
das
push
jmp
ret
mov
jge
lret
in
pop
les
ret
sbb
outsl
call
adc
das
dec
mov
dec
jecxz
into
lock
sbb
popa
sub
sbb
mov
aas
test
jmp
in
adc
xchg
jg
jmp
inc
addr16
jmp
add
inc
adc
and
xor
outsl
pop
cli
mov
lahf
inc
int
out
in
test
in
js
outsl
lea
mov
dec
sbb
add
gs
fists
rcrb
xchg
sti
inc
pusha
push
inc
xor
cmp
dec
cltd
rorl
mov
das
mov
inc
push
fnstenv
cmp
scas
js
int3
das
incl
xor
popf
mov
sar
jo
mov
pop
js
jle
push
shlb
adc
leave
sub
push
xor
add
jecxz
dec
lods
cmp
mov
inc
outsl
lahf
jnp
jns
jns
push
xlat
dec
incl
cltd
add
jle
pop
mov
inc
and
cmp
in
cmp
cmp
insl
adc
mov
pop
int
fcmovb
lea
push
pop
adc
inc
out
pop
sub
rclb
jmp
dec
lahf
add
iret
loope
int
sub
push
scas
cmp
jl
ljmp
out
push
outsl
xor
lahf
fstpl
outsb
pop
repz
jb
jle
or
out
mov
sbb
nop
hlt
outsl
sub
insb
mov
addr16
insl
mov
jl
iret
shrl
sub
ret
out
fucomp
out
out
adc
in
cmp
addr16
pop
fcomps
leave
out
push
push
dec
scas
fbld
pop
sub
lods
ds
jl
xchg
xor
jle
lods
arpl
outsb
pop
lahf
mov
jl
repz
push
sub
push
adc
push
dec
mov
loop
outsl
cmp
mov
loop
lods
add
aam
inc
out
gs
out
jecxz
push
pop
stos
js
inc
cmp
addl
and
lods
mov
les
int
int3
and
fistps
jno
push
ffree
mov
rcll
adc
addr16
jmp
repnz
sub
arpl
lods
fisttpl
add
or
push
arpl
scas
pop
jle
adc
test
mov
aad
fstl
addr16
and
cmc
in
mov
push
mov
xchg
jae
ljmp
dec
lcall
or
cmp
cmp
push
sarl
sub
insl
movsb
and
add
sub
adc
loope
jg,pn
fldenv
gs
pop
push
fwait
dec
dec
adc
mov
xor
movsl
xor
in
call
mov
jge
mov
xchg
neg
lahf
iret
jmp
insl
js
sub
push
jb
int
jns
clc
decl
pop
out
aam
jmp
push
jmp
push
fbld
outsl
push
repz
sub
lahf
loopne
lea
xor
jl
shlb
repz
std
out
sti
push
out
shrl
in
mov
or
not
ljmp
lea
mov
loopne
outsb
cmpsl
xor
dec
out
mov
outsb
frstor
cld
insb
insl
fisttpll
aad
xchg
std
sbb
cmp
xor
cmpsb
fcomi
sub
hlt
insl
jge
mov
into
mov
das
mov
jle
pop
mov
ret
cmp
fwait
dec
jmp
pop
bound
testl
jae
std
inc
out
test
cmp
lret
loope
jge
push
or
xchg
mov
je
push
add
mov
adc
std
pusha
cmp
dec
fildll
outsb
mov
add
outsl
mov
jge
push
sub
int
cmp
xor
sarl
mov
cmp
mov
or
push
popf
testb
adc
repz
lods
pop
pushl
testb
out
insl
outsl
mov
pop
in
pop
imul
push
xchg
jge
dec
clc
js
or
iret
ds
and
push
inc
xchg
adc
mov
push
outsl
mov
jle
push
sub
loope
mov
lea
push
insb
call
popf
rep
in
jmp
iret
jge
jg
push
fcmovnb
xor
inc
test
ret
push
mov
xor
mov
push
loopne
dec
mov
dec
mov
inc
addr16
mov
sti
jle
jae
sbb
sub
inc
xor
cmc
mov
and
xchg
lret
ret
test
lods
jo
mov
int3
adcb
mov
add
mov
add
dec
mov
lods
xchg
sub
pop
mov
mov
jmp
lahf
lahf
sub
outsb
jl
mov
push
push
ljmp
fucomi
outsb
out
decb
fs
dec
repnz
or
popf
jge
orl
and
sbb
scas
ffreep
out
subl
pop
xor
aas
mov
or
sbb
jo
add
and
lahf
sub
and
mov
pop
aas
mov
lea
mov
psllq
outsb
cmp
xchg
mov
mov
mov
inc
mov
jb
popf
sub
outsb
pop
push
xchg
out
sbb
xor
scas
pop
bound
testl
dec
loopne
lods
cld
cmp
inc
mov
loopne
mov
in
push
shlb
lret
push
pop
cwtl
aas
jae
std
dec
push
xor
mov
adc
mov
ds
sbb
rcrb
frstor
cmpsb
add
int
faddl
inc
add
rolb
inc
dec
push
in
and
sub
das
jl
mov
push
pop
xor
or
xchg
mov
mov
leave
pop
aaa
clc
cld
push
and
popf
data16
daa
xor
xor
mov
pop
mull
fildll
xchg
dec
sbbb
fildl
test
cmp
dec
jg
pop
mov
push
mov
jecxz,pn
jns
fsubrs
fisubl
push
mov
out
inc
xchg
addb
mov
mov
xor
popa
int
shl
subl
and
mov
in
das
push
cmp
outsb
pop
pusha
testb
dec
cld
stc
mov
pop
fiadds
shr
int3
adc
pop
sarb
cld
jg
cmp
pop
fs
inc
push
sub
mov
mov
cmpsb
inc
xor
mov
clc
inc
mov
scas
addr16
js
mov
or
mov
outsl
adc
dec
adc
outsb
cld
push
xor
aam
cwtl
mov
jp
in
ja
pop
popf
ds
inc
push
pop
sub
fs
negl
bswap
mov
repz
cld
mov
lods
mov
mov
subl
mov
pop
push
pop
mov
lret
inc
push
pusha
sbb
dec
cld
jle
aas
jo
je
jmp
mov
pop
cs
pop
mov
push
insl
js
mov
sub
pop
dec
sub
xchg
pop
add
or
xor
push
add
sti
pop
lret
lea
dec
pop
inc
pop
add
hlt
fisttps
in
cld
clc
outsl
fs
int
rcrl
jle
fs
cmp
add
push
shl
outsb
fbstp
dec
pop
cmp
and
fs
fcmove
pop
movsl
pop
addr16
pushf
dec
adc
ds
cld
aas
testb
leave
iret
cs
push
rcl
pop
sub
insl
dec
jno
xor
jl
adc
add
pop
jle
pop
popa
xor
xor
aam
aad
xchg
dec
rcrl
fisttpll
cld
jle
repz
pushl
add
cmp
aas
std
xor
pop
insb
clc
mov
xor
lock
pavgw
adc
in
sub
inc
adc
in
and
xchg
insl
repnz
incb
out
ret
cld
mov
mov
in
pop
or
mov
addr16
lods
into
bound
xor
mov
sbb
pusha
adc
push
pop
dec
lods
jae
xor
jg
popa
cmp
jae
cld
ror
dec
popf
push
jle,pn
mov
jae
insl
cmp
adc
inc
sbb
mov
ljmp
loop
int
pop
push
stos
sbb
inc
sub
iret
fs
jg
mov
and
cs
gs
movsb
das
sbb
cmp
or
sub
in
test
jmp
xor
push
loop
inc
seto
js
and
je
cmp
pop
std
dec
lahf
dec
stos
push
pop
jae
jmp
sar
cmc
lods
es
ret
sbb
movsb
or
cmp
scas
mov
test
mov
xor
push
loop
jb
cmp
dec
xchg
cli
mov
sti
sub
xchg
xor
mov
mov
je
pop
sbb
out
dec
je
dec
dec
je
les
jmp
jmp
jmp
xor
cmc
fisubl
lahf
xchg
scas
ret
sub
xor
clc
sti
outsl
iret
call
sub
mov
mov
dec
and
and
mov
adc
add
mov
mov
in
fistpll
popf
inc
lea
test
mov
inc
pop
dec
and
sub
cs
sbb
sahf
jo
dec
pop
push
jecxz
adc
mov
push
loop
push
sub
out
insl
jl
fnstsw
jbe
fadds
cmp
push
sti
fs
and
inc
scas
ds
rorl
orl
add
stc
ror
jge
jge
ret
dec
push
push
inc
push
jp
insb
and
lods
aas
cmc
inc
add
sub
cli
pusha
scas
jecxz
pop
mov
outsl
sub
adc
mov
es
push
std
insb
data16
sub
push
adc
incb
popf
lahf
sub
jg
std
xor
jne
mov
pop
lea
test
mov
inc
add
dec
nop
jb
mov
dec
push
inc
and
aam
test
or
jmp
jecxz
mov
or
fiadds
pop
out
arpl
movsl
addr16
push
int
outsl
mov
movsb
int3
movsb
clc
push
sub
gs
sahf
std
sub
popa
addr16
mov
jge
xchg
bswap
and
adc
cmp
orb
hlt
decl
ffree
popf
pop
jle
popa
or
stc
outsb
jge
loope
jg
fimuls
rcrl
jmp
inc
push
push
and
lea
dec
in
mov
mov
andb
clc
pop
dec
pop
lahf
cmp
lock
jecxz
in
outsl
push
push
push
jae
push
popf
loop
and
jmp
adc
outsb
mov
cmpsl
pop
stc
and
cltd
xchg
mov
push
popf
out
xchg
imul
or
inc
pop
and
sbb
xchg
cs
subb
pop
add
push
xchg
dec
in
or
ficoms
pop
push
push
push
pushf
pusha
pop
dec
ds
or
mov
push
in
outsb
dec
arpl
out
movsl
int
sub
pmulhuw
mov
insb
dec
sbb
lea
inc
sbb
push
cld
jecxz
enter
jae
nop
xor
mov
outsl
push
int
jo
notb
insl
jmp
pop
insb
adcl
in
iret
in
or
loope
cmovg
daa
lret
js
js
lahf
psubsw
andb
adc
stos
push
fldl
ds
out
jle
fsubrl
lods
pop
je
outsb
lods
push
pop
sub
test
xchg
mov
and
in
test
test
cmp
dec
ret
mull
or
xor
ds
cmp
cld
mov
popa
sarb
mov
int3
enter
pop
or
sub
xrelease
jecxz
hlt
push
lahf
out
jmp
pop
bound
dec
adc
rcrl
jae
jecxz
insb
push
and
mov
sub
shl
leave
push
outsb
pushw
mov
xor
andl
out
lods
out
cmp
dec
push
aas
mov
pop
das
mov
jmp
or
xor
in
lret
js
shll
mov
lods
cld
insl
bound
sbb
mov
pop
mov
xchg
dec
dec
lahf
repz
pop
pop
xor
push
lods
ljmp
jg
adcb
push
pop
testb
sub
mov
pop
or
clc
sbb
inc
repz
inc
insl
xor
loope
dec
add
mov
cmp
clc
fistpll
push
pop
mov
mov
jle
incl
and
scas
xchg
and
aaa
inc
dec
mov
mov
sbb
xor
or
lahf
sub
adc
adc
adc
std
and
es
aas
jl
pop
xchg
scas
out
rep
jo
xchg
sub
mov
andl
in
or
jecxz
mov
push
adc
jecxz
pop
jle
fisubs
add
dec
in
mov
jecxz
xor
lods
adc
fnsave
int
inc
push
repz
hlt
mov
push
push
sbb
insb
ljmp
adcl
outsb
pop
mov
push
mov
pop
dec
lods
mov
pop
mov
xor
push
loop
nop
xchg
adc
mov
ds
or
mov
out
dec
movq
sahf
push
iret
push
mov
bound
cmpl
call
repz
das
ja
and
sub
xor
add
dec
addr16
aam
pop
pop
test
fdivl
insl
inc
mov
insl
scas
jmp
lahf
cmp
mov
mov
repz
pop
jg
inc
subl
lods
xlat
std
mov
pop
cld
lods
outsl
test
mov
jno
scas
mulb
iret
jle
int
cltd
clc
adc
lods
or
jns
outsl
aas
or
in
insl
mov
push
pop
fcomip
hlt
xchg
fisttpll
jno
cmp
sbb
aam
dec
js
lea
outsl
pop
aam
cmpsl
adc
mov
insb
xor
dec
hlt
lods
sbb
enter
and
jg
ds
xchg
mov
sahf
mov
pop
jmp
ss
jge
and
data16
in
std
jmp
arpl
cli
out
xchg
out
pop
jl
addr16
mov
out
sub
iret
das
xor
sub
lcall
cltd
in
mov
insl
inc
push
out
adc
mov
cltd
or
mov
sbb
out
jge
out
xchg
push
pop
mov
inc
or
cs
movsl
ret
imull
dec
push
std
mov
dec
jl
push
pop
insb
and
iret
sbb
leave
pop
ret
cmp
int3
mulb
mov
fisttps
cli
popf
repnz
decb
pop
call
jge
outsb
jmp
lea
dec
int3
das
loop
incb
cmpsb
jmp
add
sub
sbb
or
jns
cmpl
lahf
clc
insl
out
inc
add
xchg
or
add
xor
in
lods
sbb
addr16
dec
jns,pt
sarl
call
lahf
fcoml
out
mov
int
xor
cmp
mov
cmp
popf
out
sbb
sub
dec
mov
mov
or
and
stc
mov
scas
jg
into
idiv
scas
outsb
xor
in
dec
stos
divb
scas
subl
sub
ret
pop
cs
lock
cld
ds
aaa
and
iret
int
jl
pop
pop
and
loope
mov
xor
call
je
arpl
js
cld
jle
pop
cmp
lea
int3
mov
xchg
and
int
in
push
sti
sub
pop
jge
lahf
je
pop
xchg
das
outsb
in
mov
test
push
jmp
nop
sbb
mov
lods
mov
stos
or
icebp
ja
mov
outsl
call
outsb
jl
in
sub
cltd
sbb
push
pop
and
bound
push
mov
data16
popa
jl
rdtsc
mov
cld
aaa
add
aam
mov
push
decl
jne
push
push
popf
fadds
push
hlt
lcall
fistpll
push
mov
jae
scas
sti
popa
sub
lahf
fcomi
adc
lods
outsl
pop
insb
push
sbb
inc
mov
jl
xchg
mov
mov
sbb
push
push
popa
dec
jo
jae
aam
mov
xor
ljmp
xchg
fildll
testb
adc
pop
fcmovnu
cltd
push
dec
jecxz
mov
fildll
adc
push
push
or
jle
fldl
pusha
jne
push
sbb
lods
mov
cmp
fsubrs
jecxz
pop
bnd
sub
repz
into
push
in
mov
dec
aad
adc
and
out
pusha
cmp
aas
imull
sbb
or
dec
mov
lahf
mov
cmp
mov
cmp
sub
adc
mov
js
lret
int
inc
cmp
movsl
pop
outsb
jmp
cmp
jl
pop
mov
push
fidivrs
cmp
push
fidivs
sbb
sub
mov
cmp
insl
int
enter
hlt
mov
mov
shl
xor
dec
js
aad
mov
aaa
adc
subb
push
add
sbb
xchg
adc
mov
sub
and
dec
outsb
rcrb
xchg
dec
pop
stos
aaa
pop
pusha
cld
repz
out
xorb
insb
bswap
or
cmp
std
rolb
mov
lret
aas
push
push
in
int
aaa
or
add
dec
fists
insl
vrcpss
dec
jge
cmc
je
shrb
adc
ds
or
insl
mov
popf
jbe
mov
jmp
aaa
cmp
pop
imul
xlat
inc
in
and
add
lahf
std
sub
push
or
cld
out
add
hlt
out
repz
enter
fcmovbe
aam
mov
ss
sbb
sahf
cltd
or
or
fistps
cmp
mov
push
add
pop
js
sub
mov
and
push
push
decl
lahf
xchg
pop
pop
jo
shrb
test
cmp
or
das
or
loopne
lahf
js
add
cmp
mov
repnz
jmp
jae
jnp
sub
push
call
cld
xchg
out
hlt
lahf
pop
lea
push
jmp
scas
pop
iret
int3
dec
dec
outsb
mov
inc
loope
push
dec
outsl
insb
nop
push
mov
fdivr
cs
jecxz
repz
jmp
mov
adc
dec
push
or
or
outsb
sub
outsb
aaa
fidivs
jg,pn
sub
inc
ja
lods
mov
out
push
outsb
xchg
std
adc
aas
das
jb
in
repnz
das
fmull
loop
subb
rcr
cld
cmc
ljmp
lea
outsl
and
mov
dec
cli
add
mov
into
add
push
jmp
mov
sub
scas
fdiv
pop
mov
mov
xor
xor
mov
mov
jge
lret
and
or
sub
addr16
xor
andb
test
fnsave
out
or
inc
adc
cs
dec
mov
or
xor
aas
je
inc
fcomi
das
std
mov
inc
adc
fisubl
push
mov
sub
xor
outsb
pushf
mov
lea
add
dec
pop
mov
out
pop
mov
dec
orb
pop
jge
xchg
pop
int
sub
inc
pop
mov
and
std
mov
arpl
js
stos
movb
inc
popa
pop
lods
lahf
add
outsb
lea
cld
fwait
int
out
or
mov
jge
rcrl
out
jno
pop
ret
imull
mov
ror
fsubl
push
scas
push
enter
jmp
scas
insb
dec
in
mov
lods
out
in
pop
ljmp
mov
jb
mov
mov
outsb
xchg
js
divl
lods
fisttpll
mov
outsb
addr16
or
mov
sub
aas
loopne
cld
daa
cmp
test
decb
loopne
jle
cmp
jmp
in
push
cld
dec
or
clc
sbb
shl
rorl
sbb
dec
bound
jge
xchg
imul
inc
lahf
cld
sub
mov
dec
jl
js
push
cmp
push
cmpsb
mov
mov
out
adc
mov
jmp
pop
dec
arpl
jo
ds
adc
or
out
sub
cmp
das
add
add
jns
cs
xchg
out
insb
adc
sub
lret
jg
sbb
and
movsb
pop
sarl
push
adc
and
rcrl
push
mov
jmp
sub
mov
int
mov
adcl
jb
mov
popf
dec
cmp
movups
mov
push
int
sub
das
jl
push
les
fnstenv
pop
mov
decb
adc
inc
out
pop
or
in
cmp
out
daa
pop
addr16
outsl
push
lds
rcl
insl
jne
add
sarl
and
scas
lods
or
xor
pusha
inc
mov
iret
dec
jl
push
addr16
or
adc
rolb
shrb
out
mov
xor
push
in
pop
std
ficoml
mov
push
pop
push
add
dec
out
je
lods
dec
pusha
lods
lahf
lret
cmp
ror
lock
js
pop
lods
jg
repnz
out
les
aaa
adc
sub
fs
shrb
cs
jge
mov
lahf
sbb
and
cld
in
loopne
stos
pop
das
pusha
rorl
aad
push
jl
sbb
mov
lea
push
and
sub
and
and
cs
adc
aaa
jp
sbb
jns
iret
fucom
nop
outsb
sbb
mov
dec
xchg
stos
fcompl
jns
jle
inc
or
pop
mulb
push
mov
cmp
popa
jl
jl
fistps
mov
adc
lock
add
push
mov
movsl
out
outsb
fcmovu
mov
mov
scas
jmp
jmp
decl
jg
popf
or
aaa
or
lods
iret
aaa
inc
pop
cwtl
setl
lock
jecxz
outsl
jl
push
mov
push
adc
cmp
or
pop
cmp
out
into
dec
setge
adc
iret
push
pop
rorb
ds
subps
addr16
dec
push
cmp
mov
or
inc
nop
mov
cld
push
jge,pt
xlat
call
bound
in
mov
loope
dec
icebp
push
sub
dec
sbb
inc
cmp
cli
sti
sub
in
jge
scas
insb
mov
adc
sbb
pop
xchg
into
dec
insb
addr16
fnclex
sbb
cld
lcall
lret
in
pop
jmp
bsr
loope
fisttpll
sub
pop
cmp
lret
or
out
or
out
fsubr
dec
sahf
jmp
dec
sub
mov
cmp
pushl
iret
int3
inc
pop
mov
insl
mov
xor
jmp
jl
add
in
mov
call
jo
push
xor
int
fldenv
std
mov
cmc
shlb
fistps
jge
inc
cs
cmp
push
sub
jns
sub
int3
or
in
push
jg
loope
mov
add
xchg
dec
inc
xchg
insb
ficompl
pop
xor
insb
outsb
adc
out
std
scas
add
sbb
stos
aas
iret
jl
cld
orb
xor
fsub
int
fcomps
in
cli
dec
pop
and
int
nop
clc
inc
jecxz
pop
sub
lahf
int
scas
enter
lods
das
jge
sbb
push
or
mov
sub
imul
std
mov
or
je
decl
pop
in
inc
push
or
stc
dec
xor
decl
hlt
sub
push
mov
push
jl
int3
lods
mov
dec
xchg
jae
jecxz,pt
lods
mov
stos
rcl
fsubrl
sub
lahf
push
or
mov
add
nopl
iret
es
lds
outsb
cmp
push
push
push
fnstsw
repnz
fisttpll
pusha
sub
lods
xor
insl
outsb
and
mov
xchg
scas
imulb
and
das
setg
pop
dec
test
outsb
lods
inc
popf
in
mov
out
dec
lahf
insl
lods
mov
cmp
and
pop
push
mov
repz
dec
repz
into
das
xchg
in
fstps
mov
adc
push
cmp
fidivs
inc
mov
sarb
mov
pop
in
scas
jno
movsl
mov
sbb
or
jecxz
sbb
pop
xor
cmp
repz
xor
daa
int
fwait
hlt
mov
mov
je
fistpll
or
aaa
fnsave
pop
insl
pop
adc
cwtl
ret
dec
in
repz
mov
xorl
paddb
push
in
xlat
insb
orl
pop
sub
pop
notb
popf
lahf
jbe
or
clc
lahf
or
out
mov
loop
pavgw
outsb
mov
pop
sub
jg
adc
aaa
popf
lods
jle
xor
xor
mov
mov
jo
int3
popf
addr16
dec
xlat
das
loopne
cli
cmp
dec
dec
mov
cmpsl
stos
push
fstps
fisubrl
mov
leave
aaa
lret
adc
icebp
dec
add
jbe
mov
js
mov
fdivrl
push
mov
xor
imul
insb
shrl
inc
sub
and
int
adc
iret
mov
ljmp
std
sub
or
insl
and
push
scas
inc
pop
hlt
inc
mov
insl
popf
cltd
xor
aas
fisubrs
popf
jl
sub
jne
dec
or
ficoml
xor
cmp
mov
dec
sbb
add
cld
mov
jl,pt
cmp
call
push
sub
btr
pop
outsl
mov
js
inc
push
jmp
js
popa
jecxz
mov
scas
sbb
add
pop
mov
sub
lea
xor
mov
fsubr
bound
addr16
xchg
cs
inc
or
cmp
test
punpckhbw
sbb
push
dec
nop
mov
in
mov
dec
cmp
pop
sar
adc
mov
mov
push
dec
xor
cs
aaa
push
dec
adc
mov
shlb
xor
dec
in
cmp
popf
jge
adc
das
insl
or
addr16
mov
adc
pop
dec
lcall
cmp
out
push
adc
or
popa
repz
outsb
and
and
xchg
jns
sar
shll
xor
push
dec
xor
pop
xchg
imul
nop
clc
push
mov
mov
jmp
jg
fs
clc
cmp
out
je
popf
insl
mov
mov
insb
mov
shrl
xor
cli
orl
in
jne
into
addl
adc
xlat
testl
push
jl
xor
insl
insl
outsb
mov
popf
fldl
js
aaa
jecxz
sar
aaa
cld
fcomp
outsl
testl
insb
mov
dec
adc
out
paddb
int
adc
adc
fnstcw
rolb
adc
js
and
xchg
lods
cmp
insl
and
dec
xor
das
pop
adc
jmp
jl
cmp
push
int
in
mov
jg
and
scas
lods
cmp
stos
sub
mov
push
xor
xor
pop
adc
ret
mov
fs
adc
sbb
fcmovb
dec
testb
add
jmp
fildll
iret
adc
xor
movsl
xchg
xchg
push
outsb
xor
pop
dec
sbb
cwtl
daa
dec
pusha
jmp
int
push
and
mov
push
mov
popf
je
mov
outsl
cmp
cmpb
inc
fisttpll
inc
adc
fmuls
mov
aas
lods
adc
scas
test
mov
in
push
pop
inc
mov
js
insl
dec
insb
mov
ljmp
mov
mov
popa
adc
fistps
mov
fs
push
in
xor
outsb
ja
xor
lahf
pop
and
lods
mov
push
push
mov
adc
mov
fisubl
int3
add
rolb
pop
imul
or
leave
movsl
jnp
into
pop
inc
add
sbb
adc
xor
leave
mov
sbb
les
out
icebp
iret
cli
fs
rolb
sub
repz
je
mov
mov
mov
and
std
jmp
iret
rolb
jecxz
in
mov
and
cs
lret
pop
jae
repz
jl
insl
test
fildll
cmp
test
pop
std
dec
inc
jle
pop
jb
outsl
cld
mov
aas
adc
ret
int3
out
and
jge,pt
jecxz
pushf
mov
inc
into
inc
inc
dec
pop
pop
ss
insl
iret
lahf
int3
lea
add
mov
insl
pop
aaa
and
sbb
dec
mov
inc
push
and
ret
pop
jno
fwait
xor
mov
addr16
xchg
je
jae
xor
cs
push
int
dec
adc
stos
aas
filds
xchg
cmpsl
addr16
jb
in
scas
and
fidivrs
and
iret
mov
ret
sbb
push
js
sahf
incl
push
hlt
cmp
push
cs
adc
outsl
inc
cmp
shlb
pop
inc
fs
movaps
pop
imul
scas
aas
jnp
das
das
push
rcrl
pusha
jnp
push
pop
cmp
in
mov
adc
loope
adc
mov
push
mov
movsl
push
and
mov
inc
aas
iret
repnz
and
mov
call
iret
xchg
outsb
inc
insl
clc
mov
push
push
in
out
cmp
pop
or
xor
stos
dec
inc
iret
pop
movsb
loope
and
adc
outsb
mov
repz
mov
dec
and
mov
iret
pop
arpl
int
sub
dec
mov
pop
scas
xor
outsl
push
fs
pop
inc
mov
dec
jmp
stc
mov
inc
add
or
cmp
fildll
cld
outsl
js
scas
je
or
ljmp
test
fidivrs
fcomp
push
dec
pop
shlb
pop
mov
loopne
pop
push
jnp
sbb
jo
out
or
ret
add
repnz
inc
push
jecxz
out
add
insb
xor
mov
fwait
iret
dec
repz
push
stos
out
lahf
or
js
outsb
shlb
lods
push
push
mov
mov
push
imul
ja
repnz
push
or
int3
subl
or
js
addr16
mov
mov
out
push
mov
out
rorb
repz
sbb
push
imul
push
cmp
in
mov
ljmp
nop
inc
das
dec
ds
mov
fucomip
mov
jl
push
sbb
mov
rcrl
mov
sbb
les
push
ret
dec
mov
iret
js
jl
or
lods
lock
lahf
fisttps
inc
rcrb
insb
sbb
aas
add
add
iret
outsb
dec
hlt
xor
jecxz
xchg
add
lods
int3
mov
enter
dec
mov
insl
lods
fnstsw
sub
push
cli
push
pop
idiv
lods
notl
fnsave
push
sbb
adc
mov
xor
jnp
or
add
jl
dec
sub
push
mov
das
aas
mov
jnp
adc
aas
jmp
adc
and
xor
add
sbb
in
jo
iret
pop
mov
sarb
in
test
jns
add
sub
push
add
rorb
adc
aas
cmp
push
outsb
fdivs
mov
lods
into
je
out
pop
outsl
call
out
mov
sbb
mov
std
sub
mov
out
loopne
adc
pop
mov
sbb
rcrb
addr16
jns
pop
outsb
jmp
pop
cld
cmp
mov
push
sub
loopne
cld
repz
dec
packuswb
cs
call
inc
xor
cmpl
push
in
xchg
cld
adc
pop
jmp
xorb
add
dec
xor
fnstsw
or
push
mov
je
jae
lods
in
sbb
cmpsl
fidivrl
push
push
and
andl
and
xchg
loopne
sbb
lsl
and
jmp
pop
jg
out
adc
inc
xchg
pusha
jo
addr16
jle
sbbl
das
sbb
pop
add
xchg
sbb
shlb
mov
int
dec
out
loope
aas
sbb
dec
jle
inc
aam
imull
inc
out
out
cmc
fucomip
adc
int
push
push
pop
or
popf
sub
mov
or
insl
roll
out
dec
push
out
push
repnz
push
in
ja
jmp
shrl
das
mov
sbb
dec
mov
les
inc
iret
jecxz
adc
rcrl
js
xor
test
inc
cmp
stc
cs
in
mov
push
and
or
lods
add
into
div
mov
jle
jl
rcrb
jg
push
or
insb
pop
push
addr16
outsl
fbld
in
pusha
popf
ds
decb
out
ljmp
in
mov
adc
inc
jge
mov
bound
shrl
add
dec
and
mov
shl
subb
cmp
add
sbb
addr16
insl
js
fstpl
aad
xchg
iret
xchg
fdivr
cmp
int
and
inc
fsubrl
je
das
std
iret
inc
iret
mov
in
bound
jne
jg
mov
jmp
push
bswap
stos
adc
mov
pop
outsl
cmp
iret
and
orl
rcrb
push
jl
rcrl
int
pop
cmp
inc
loop
adc
and
in
insl
insl
dec
or
sbb
push
cmp
lret
fldpi
stos
push
mov
je
xor
dec
mov
inc
aas
jnp
xchg
cmp
in
packuswb
loop
sub
pop
jge
aaa
js
and
enter
push
rorl
mov
push
or
fnstsw
push
fistps
call
pop
iret
sub
lds
rorb
nop
imul
outsl
pop
das
out
mov
loope
push
add
lea
in
jno
jl
jge
xor
and
pop
in
sbb
lahf
or
mov
jp
insl
fsubs
jp
xor
shrl
out
push
fisttpll
dec
cmp
rorb
aam
xchg
adc
adc
sbb
cmpsb
pop
pop
xor
xchg
push
dec
sti
dec
cmc
dec
jle
pop
fistps
pop
or
outsl
adc
cmpsb
imul
data16
ds
cld
jmp
std
jmp
or
loopne
sub
pop
std
mov
and
xor
outsb
in
or
xchg
mov
outsb
fsubr
test
das
jecxz
lret
pop
xor
mov
jge
mov
adc
divb
dec
mov
inc
aas
clc
adc
push
push
push
aam
lcall
scas
pop
xchg
scas
outsl
repnz
incl
mov
mov
push
sbb
shrl
jle
das
pop
cmp
adc
pop
mov
pusha
pop
jl
shlb
jge
mov
mov
cmpsb
xor
into
outsb
fmuls
pop
or
clc
dec
push
or
cld
push
push
not
in
push
lock
inc
js
mov
ja
mov
inc
lcall
leave
xchg
loopne
adc
push
out
adc
and
xor
sub
ja
pushf
scas
inc
push
cmp
jge
mov
mov
outsb
sub
add
popf
js
push
sub
stos
loope
adc
das
mov
iret
dec
jne
outsb
lock
and
cltd
movsl
push
mov
imul
or
xchg
aam
mov
orl
ds
mov
cs
and
movsb
icebp
xor
push
sti
loop
pop
insb
cmp
mov
shlb
aaa
sar
or
or
int
jle
pop
push
je,pt
negl
cmp
or
sub
xor
faddl
sbb
push
ja
and
jle
adc
pop
in
adc
das
pop
jae
shl
jecxz
imul
sub
cmp
mov
push
inc
cmpsl
pop
adc
jp
jl
add
in
fldcw
dec
mov
push
mov
or
push
add
pop
lahf
int
js
jg
loop
jecxz
repz
jnp
jle
ret
filds
sbb
int
cmp
ss
outsl
adc
fmul
jbe
pop
mov
pushf
inc
pop
jl
leave
paddusw
or
decl
jp
and
or
neg
aas
outsb
dec
mov
add
sbb
sbb
adc
mov
jne
mov
shl
popa
dec
push
jmp
imul
mov
adc
imul
pop
negb
sub
cwtl
mov
leave
push
sub
pop
clc
and
lahf
jmp
lea
sub
jbe
das
aad
call
pop
add
cmova
jne
std
clc
repz
dec
add
mov
sbb
rol
repnz
push
push
js
adc
pushl
push
sbb
lods
sub
stos
ljmp
shlb
iret
insl
fwait
call
or
scas
cmp
push
in
arpl
enter
cmp
lea
push
push
jp,pn
cmp
push
push
jmp
mov
dec
out
cmp
aas
cmpsl
add
cld
jae
outsb
repz
jmp
push
add
mov
dec
int3
repnz
insb
fistps
dec
fcoml
cld
jge
addr16
jmp
sub
and
mov
insb
addr16
icebp
xor
dec
push
popf
push
mov
orl
lea
cwtl
inc
repz
adc
in
and
ficomps
outsl
lea
cmpsl
lock
sub
insb
sub
scas
in
repz
cld
push
jne
cmp
out
add
push
cmp
cmp
mov
ljmp
mov
les
aas
push
jg
pusha
je
js
popf
jo
push
rep
insb
in
or
adc
add
inc
pop
jg
ljmp
push
fsubrp
das
push
cld
insb
pushl
push
loope
mov
pop
push
xor
dec
mov
decb
aas
je
addr16
stos
out
cs
inc
inc
sbb
out
pusha
outsl
xor
std
jno
sub
roll
aam
or
sbb
and
lahf
xor
ds
scas
repz
jecxz
jg
shrb
dec
outsb
std
fsubl
scas
test
insl
inc
cld
sub
xor
popf
sub
pop
cmp
and
push
cmp
fucomi
jle
lahf
in
fcmove
lret
pop
out
ljmp
adc
mov
mov
insl
int
push
shl
pop
arpl
outsl
pop
out
sub
in
add
dec
gs
or
xchg
sub
xor
fcoms
je
push
outsl
out
mov
mov
das
dec
aad
sbb
cmp
insl
repz
outsb
push
fisubrl
adc
push
cs
das
cmp
sbb
xor
dec
ss
jmp
lods
push
pop
pop
jge
sub
adc
aas
mov
iret
sub
xor
push
test
cmp
mov
sarl
or
movsb
pop
push
ror
jo,pt
lock
cld
cmp
jle
push
mov
insl
gs
push
repz
jge
mov
subb
lahf
mov
mov
dec
mov
mov
jle
jb
push
push
push
cmp
jle
jne
push
cmpl
jg
sub
and
add
sub
mov
mov
bnd
loopne
jns
xlat
xor
aas
out
inc
popa
dec
mov
loope
mov
mov
jo
jg
jle
iret
mov
inc
add
ja
pop
jmp
push
sbb
out
mov
das
mov
pop
les
dec
call
test
jmp
movsl
loop
fs
sbb
inc
jmp
mov
popf
jg,pn
aaa
adc
mov
dec
jle
out
sahf
push
insl
cld
stos
pop
push
das
push
or
idivb
jae
test
icebp
imull
fisttps
in
inc
sbb
jecxz
jbe
pop
mov
insb
jl
or
ds
jecxz
imul
decl
cs
pop
filds
out
xchg
mov
xor
arpl
mov
std
lods
fistl
or
push
popf
pusha
pop
jl
scas
into
fnstcw
test
jns
sbb
outsb
seto
ss
int
dec
xchg
ret
idivb
dec
jmp
sub
jecxz
pop
mov
ljmp
dec
scas
lahf
push
and
cmp
jle
popa
pop
das
mov
jns
es
cmc
fildll
shrl
sbb
fdivr
cs
movaps
int
call
jmp
jle
adc
hlt
lds
or
scas
dec
mov
pop
jae
push
xchg
shrl
mov
dec
ret
mov
fsubrl
pop
cmp
lods
pop
lock
sbb
das
xor
sub
insb
ret
std
aas
adc
lock
sbb
jge
push
pop
outsb
int3
xor
pop
outsl
int
aas
pop
dec
test
in
lods
pop
push
out
jno
enter
fsubr
rep
ss
push
mov
pushf
push
pop
in
stos
je
lods
sub
push
insb
cmp
icebp
popf
jecxz
xor
or
or
sub
popf
cltd
mov
dec
cmp
notb
das
mov
push
cmp
insb
fs
negb
pop
cld
frstor
and
shrl
adcb
mov
lret
iret
push
jg
divb
neg
mov
xchg
pop
out
push
push
cmp
rcrb
inc
scas
shlb
mov
mov
outsb
push
pop
data16
addr16
pop
mov
imul
or
shrb
loopne
flds
out
in
mov
xchg
aas
or
push
mov
mov
nop
lods
add
js
push
pop
in
cmp
xchg
or
jecxz
insl
dec
out
ret
cld
sub
or
pushl
insl
cmc
out
cmp
lahf
stos
loop
int
sub
movsb
cmp
insb
jo
mov
mov
sub
jmp
adc
pcmpeqd
jmp
nop
popf
fwait
sub
cltd
sub
sub
repz
dec
ss
xlat
rorl
mov
daa
inc
dec
or
push
stos
sub
stos
push
jmp
xchg
add
lods
fistpll
sbb
push
dec
outsb
lret
sub
dec
fildl
inc
lret
and
jge
test
lcall
leave
cmp
std
dec
cmp
jns
mull
or
push
and
push
fsubr
pop
mov
adc
mov
sti
jle
out
and
sub
mov
jmp
push
sbb
lock
mov
sub
mov
scas
pop
xchg
pop
adc
adc
adc
les
lret
insb
xchg
lods
cmp
jns
dec
dec
sbb
int3
fnsave
push
in
dec
adc
dec
push
dec
push
lret
incb
adc
or
or
adc
and
or
scas
outsb
push
jle
adc
xor
subl
xchg
repnz
insb
mov
out
cmp
push
pop
sub
xchg
loopne
addb
call
push
stos
xor
jl
adc
scas
push
fsub
testb
push
in
and
frstor
cmp
xor
add
push
pop
push
xor
orl
push
out
sbb
push
sbb
sti
std
insl
mov
iret
je
push
stos
ret
and
insb
sub
mov
push
outsb
sub
ljmp
inc
adc
xor
jge
cmp
ds
loopne
xchg
orl
dec
in
popf
xor
dec
sbb
jl
xchg
clc
mov
sub
mov
jg
movsl
loop
mov
adc
addr16
lods
xor
xor
pop
xor
fwait
push
xchg
in
xchg
popa
jecxz
mov
out
sar
mov
insb
adcb
xor
rep
add
sub
outsl
and
or
inc
mov
mov
out
jl
mov
stos
int3
push
lret
aaa
arpl
inc
aas
sub
or
push
adc
dec
fnclex
lahf
dec
mov
aam
cltd
aas
psllw
imul
iret
and
cmp
push
sahf
insb
pop
enter
pusha
cmc
cs
mov
adc
outsb
pop
lea
sbb
jmp
push
roll
mov
jl
pop
cltd
push
mov
aas
std
insl
psrld
jmp
mov
xor
iret
in
pop
push
and
mov
fdiv
lret
int
push
sbb
insb
popf
cld
mov
jecxz
mov
lea
push
shl
cmovle
in
xchg
rolb
add
repz
je
xor
push
or
int
push
bound
js
push
pusha
mov
sub
sub
jmp
and
mov
mov
stos
insl
mov
inc
cs
js
fisttpll
sbb
lods
sub
or
cld
gs
fdivrl
dec
outsb
lods
outsl
ds
pop
jns
pop
adc
fildll
xor
nop
fs
xor
mov
clc
ljmp
xchg
js
pop
dec
ds
jg
int
xor
mov
shrl
sti
stc
std
push
push
fdivr
loopne
movsl
push
jge
cli
dec
jae,pt
jae
sti
popa
add
lock
push
jmp
or
lret
aad
dec
or
and
mov
call
cmp
pop
push
jmp
ds
pop
cmpsl
xor
mov
pop
mov
cltd
cmp
or
pop
jmp
lods
mov
rcr
or
add
xor
pop
or
hlt
dec
push
insl
push
mov
sbb
decb
sub
ja
in
jl
mov
jmp
call
ds
pop
dec
pushl
divl
lahf
jmp
mov
outsb
adc
std
or
cmc
lods
sbb
pusha
cmp
cld
mov
cmp
in
cmc
or
std
mov
repnz
insl
pop
out
outsw
dec
sbb
push
push
out
mov
add
ficoms
loope
dec
or
jns
xlat
hlt
adc
xchg
jmp
xor
ja
fbstp
sbb
fdivr
clc
mov
out
daa
mov
stos
or
pop
aas
std
fistl
pusha
shl
into
frstor
mov
adcl
mov
mov
sbbl
cli
roll
mov
outsb
or
push
pop
mov
loope
pop
jl
dec
mov
dec
ret
push
xor
xor
lahf
mov
dec
sub
nop
add
ds
pop
xchg
fimuls
mov
stos
shl
arpl
jbe
xchg
mov
orl
aad
or
mov
sbb
std
adc
jne
incl
mov
adc
popf
fcomip
mov
xchg
push
insl
xlat
cmpl
cmp
sub
std
and
push
jge
sbb
pavgw
jbe
or
icebp
cmp
popa
lahf
dec
and
push
rcl
cmp
das
je
outsb
lods
in
dec
scas
and
mov
movsb
adc
aas
sbb
inc
inc
clc
or
rcr
andl
pop
gs
jl
pop
add
jl
or
lods
mov
mov
mov
cmc
in
subl
stos
punpckhdq
lods
and
cmp
aaa
ds
or
outsb
add
add
ja
or
insl
mov
pop
jl
out
pop
popf
fstpl
sub
in
out
je
cmp
lock
lcall
pop
mov
pusha
imul
or
adc
push
push
ljmp
pop
call
das
iret
lods
call
inc
out
ljmp
cmpsb
or
lods
scas
stos
popa
dec
xor
mov
mov
outsl
jmp
ljmp
lods
andb
jl
lock
jle
lods
xor
ljmp
out
pop
in
push
jg
dec
je
fstp
je
sahf
or
sub
pusha
jne
out
scas
rorb
jns
mov
mov
lahf
mov
cs
cli
inc
add
and
int
adc
inc
aaa
xor
push
pusha
test
jnp
shrb
mov
push
add
lahf
aas
std
dec
xor
sub
stos
mov
jecxz
addr16
adc
mov
iret
testl
mov
dec
cmp
inc
popf
jge
ds
cs
shll
cmp
bound
loop
outsl
inc
andb
repz
outsl
shl
insb
int
dec
mov
xchg
xchg
cmp
hlt
sti
mov
out
xor
sub
or
fcoms
mov
add
rdpmc
mov
iret
xchg
addr16
push
clc
clc
adc
shr
lea
or
and
adc
out
and
arpl
jecxz
addr16
jbe
dec
out
jmp
lahf
insl
addr16
mov
push
pop
ret
mov
subl
xor
insw
pop
jbe
das
pop
ds
repz
stos
lcall
pop
outsl
orl
iret
arpl
int
jecxz
xor
int
cld
sub
adc
shlb
push
das
xor
push
pop
xor
cmp
jno
mov
inc
jecxz
call
es
insl
dec
pushl
outsl
test
scas
dec
insl
popf
mov
push
out
add
fdivr
mov
or
dec
das
js
mov
sbb
int
out
inc
xor
jmp
jl
ds
sbb
jo
mov
jge
rolb
mov
fnsave
jge
call
js
jl
dec
cld
lods
jg
dec
add
out
cmp
stos
aas
cmpsb
jl
sub
jp
jge
test
jae
adc
mov
in
push
iret
dec
std
jg
jecxz
push
mov
push
adc
jo
lret
ss
sub
inc
rep
std
jle
pand
mov
in
sar
dec
in
repz
xchg
in
fdivrs
std
iret
insb
dec
shl
sub
dec
out
push
xor
cs
sub
lock
scas
jle
into
jmp
outsl
ret
push
xchg
sbb
insl
sub
push
jb
repz
jle
insl
dec
and
add
hlt
fs
pop
push
cmpsb
push
jo
fnstenv
push
lcall
add
addr16
insl
aas
jno
mov
mov
lods
ds
mov
dec
inc
scas
out
inc
push
je
scas
sbb
leave
dec
cld
xor
jbe
stos
cwtl
shll
jbe
in
sub
and
lods
imul
in
or
lea
loopne
js,pn
or
and
jl
mov
outsl
sbb
rcl
insb
jge
cltd
inc
subl
jmp
pop
pop
ljmp
xor
in
pop
mov
js
cli
idivl
aas
jbe
jg
jle
xor
push
cld
movsb
inc
mov
push
outsl
and
fbld
pop
xor
jl
push
mov
movsb
addr16
outsl
mov
cs
xor
dec
and
lahf
mov
out
xchg
pop
xlat
ss
repz
mov
add
je
iret
in
leave
outsb
jge
insl
aas
cmp
rcrl
pop
inc
mov
push
sbbl
inc
inc
and
popf
jo
insl
cmp
xor
jns
clc
xor
jno
mov
in
pop
or
and
inc
push
std
outsb
pop
sbb
or
shll
popf
js
push
xchg
lock
and
aas
pop
dec
cmp
mov
cmp
enter
pop
hlt
lock
dec
jle
inc
shl
sub
int
push
movb
push
pop
pop
jbe
or
adc
push
dec
xor
pop
fs
pop
popf
pop
ss
popa
lods
pop
lea
incl
mov
cmp
push
stos
ds
cmp
sbb
cmp
popf
cli
dec
sbb
aas
popf
and
lahf
and
xor
dec
add
push
in
jl
fldenv
shlb
push
adc
mov
dec
out
stc
cli
xor
push
add
sbb
psubw
outsl
sub
pop
mov
pop
fstl
out
std
adc
adcl
push
mov
xor
mov
push
push
or
loope
jecxz
xor
mov
in
mov
inc
or
std
mov
ucomiss
or
push
push
xchg
jb
jns
xor
push
aas
lahf
cmp
pop
repnz
rorb
dec
in
push
jg
push
repz
and
sub
je
cld
inc
cld
inc
jg
add
call
jge
adc
sub
scas
dec
push
jl
push
cli
sbb
repz
adc
push
cs
std
pop
jmp
scas
dec
cmp
adc
stos
sbb
idivl
mov
sar
loop
in
pop
data16
rep
insl
outsl
inc
enter
popa
adc
pop
sbb
popf
cmp
iret
sub
jmp
or
ds
cmpb
inc
enter
lcall
fs
mov
in
push
sbb
mov
xchg
push
repz
ja
ja
scas
mov
insl
cld
pop
pop
out
loop
adc
or
stos
in
rcr
or
xor
out
inc
addr16
shrd
mov
fstps
lock
push
lahf
dec
and
or
mull
mov
and
insl
add
sub
repz
jmp
push
push
inc
xor
adc
scas
repnz
addr16
fbld
das
jle
jae
jbe
lods
addr16
mov
outsb
pop
int
or
xor
fldl
mov
fdiv
add
add
in
jle
cmp
pop
push
divb
jg
rorb
push
mov
sub
jl,pn
dec
ds
cld
out
jl
bound
jle
inc
and
js
mov
movsl
or
dec
push
sbb
sbb
inc
paddb
stos
pop
cmp
xorb
xor
in
dec
mov
int3
fistpll
mov
roll
sbb
call
push
mov
hlt
xchg
dec
push
or
adc
insb
sbb
mov
fisttpll
movsl
insb
add
cmpsb
cmp
mov
mov
ret
jge
pusha
scas
mov
mov
scas
mov
cmp
test
jecxz
or
pop
shll
pop
inc
and
call
jmp
pop
and
call
pushl
mov
arpl
dec
cmp
repz
scas
int
ds
jmp
fmul
insl
cmp
psubusw
pop
call
jmp
adc
or
lahf
and
out
cmp
mov
pop
pop
iret
jmp
rcll
add
lahf
insl
clc
cli
mov
iret
aas
jns
and
cmp
add
push
mov
adc
mov
add
out
scas
insl
jecxz
mov
pop
int
sub
push
lods
sbb
mov
int
or
frstor
iret
inc
inc
cmp
mov
scas
or
xchg
in
xor
pop
ret
mov
mov
xor
dec
fmull
pop
sbb
mov
stos
jmp
pop
add
fucom
sub
jo
cmp
sub
fildll
dec
pop
sbb
xlat
cmp
repz
or
lods
hlt
int
sub
icebp
pop
out
dec
add
out
enter
out
pusha
ds
mov
xor
push
cwtl
jmp
dec
dec
lods
jae
lahf
and
xor
push
js
push
rep
cs
cmpsl
xchg
push
add
adc
push
or
mov
out
ret
aaa
mov
cld
hlt
xor
jmp
inc
push
scas
adc
mov
and
jle
in
repz
jmp
out
and
outsb
push
je
cmp
adc
xor
push
fnstsw
lahf
mov
jae
push
jmp
popf
dec
and
sbb
sub
stos
add
jl
loopne
dec
aaa
fmul
dec
mov
lret
fisubrs
xlat
fldcw
sarb
dec
dec
inc
loope
xor
jmp
push
rcrl
aaa
test
lret
mov
jae,pt
fdivp
xchg
mov
mov
loop
cs
push
push
push
xchg
stos
push
mov
mov
add
pop
popl
pop
push
iret
jl
adc
shlb
jb
stos
repnz
lock
pop
in
jecxz
adc
jne
mov
aas
repz
jle
pop
mov
call
paddd
push
insl
dec
push
cld
or
mov
outsl
lcall
mov
ss
lret
mov
xchg
mov
mov
xor
mov
pop
mov
or
std
inc
in
push
repz
add
sbb
int
lods
or
out
add
cs
loopne
sub
sub
int3
xor
fldenv
dec
dec
sub
mov
jge
scas
lock
or
mov
cmp
das
mov
flds
idiv
mov
jl
decb
int
cmp
aam
and
jb
push
outsb
jle
fcoms
push
mov
bound
sub
mov
xor
lret
das
dec
inc
es
ljmp
adc
mov
jno
or
adc
jnp
pop
mov
pop
dec
add
fistps
in
xor
mov
add
cmpsb
aas
mov
lcall
ficomps
sub
leave
outsl
inc
jecxz
cmp
or
add
adc
fs
mov
and
outsb
sbb
js
inc
cmp
stos
add
mov
sti
incb
sbb
push
inc
out
lods
aas
dec
cmp
dec
fidivs
mov
ljmp
in
iret
js
mov
mov
cmp
mov
jne
fisubl
push
sub
stos
insl
pop
cli
iret
lret
cld
sti
aaa
icebp
push
das
stc
pop
repnz
mov
adc
and
inc
xor
jge
sub
sbb
outsb
jle
das
cmpsl
mov
cmp
pop
pop
insb
xor
xor
pop
mov
cli
dec
cmp
das
stos
sbb
push
stos
cmp
dec
rolb
push
or
test
popa
sbb
cld
xchg
insb
mov
ror
cld
jae
lds
adc
lods
ret
pop
fnsave
stos
pop
xchg
int
daa
inc
push
push
sub
or
xor
inc
sub
mov
iret
popf
dec
cmpsb
or
andb
mov
dec
or
lret
out
js
aaa
and
sbb
dec
std
xor
pushf
fwait
bnd
daa
sahf
inc
stos
mov
sbb
das
testb
cmp
sub
movsb
js
xchg
push
and
das
orl
js
ret
xor
fisttps
cs
dec
stos
movsb
scas
movsb
insl
daa
cmp
jg
loop
shrl
adc
scas
jo
cmp
test
dec
stos
fistpl
imul
stos
push
adc
rcl
stos
sub
leave
jae
daa
stc
test
xchg
stos
inc
xchg
jne
scas
sub
cmp
movsl
xchg
inc
sub
lahf
stos
ficoml
stos
rcll
stos
xchg
sub
sub
sub
stos
lea
into
sub
jg
ret
cmp
addr16
xchg
popf
xor
mov
and
dec
push
mov
pushf
or
dec
dec
mov
subl
shrl
lods
std
lahf
out
xchg
push
sbb
aad
add
jge
or
bound
mov
rclb
add
lret
aaa
enter
lock
pop
inc
outsb
jge
ret
dec
fcomip
aad
dec
inc
sbb
push
or
sti
aas
aaa
adc
scas
push
pop
inc
mov
mov
lock
fisttps
mov
fisttpl
xor
sub
or
lods
pop
mov
hlt
mov
xor
inc
sub
decb
dec
push
lea
das
lret
adc
in
adc
cmpsl
hlt
add
sub
int3
push
pop
jne
inc
outsl
dec
dec
xlat
adc
hlt
orl
xor
sti
and
adc
add
jge,pn
dec
fdiv
cmpsb
jl
js
sub
mov
sub
js
out
dec
ds
jo
sub
cmc
std
ljmp
or
lea
scas
push
jle
inc
fnsave
int3
movsl
arpl
mov
ret
pop
cmp
xchg
sub
and
cmpsl
scas
sub
xor
decb
test
shlb
jle
lods
aas
int
stos
push
aas
inc
iret
repz
push
mov
xor
jge
add
mov
aas
addr16
cmpsl
pop
dec
ds
imul
aad
outsb
test
cli
mov
dec
xor
mov
cld
js
aad
xor
sub
dec
adc
cs
enter
loope
les
fnstcw
or
fldl
xor
jmp
popf
pop
and
repnz
sub
inc
dec
rcll
insl
jge
repnz
fndisi(8087
mov
push
mov
xor
js
xchg
subb
cld
sub
cmpsl
adc
sub
loopne
mov
and
ss
lret
stos
ljmp
lret
inc
in
mov
mov
jnp
mov
aam
sub
inc
iret
outsb
sub
push
js
decb
les
scas
xchg
stos
mov
adc
push
mov
je
mov
cmp
mov
xor
insl
fs
popf
ds
xor
adc
stos
mov
xchg
in
in
leave
jmp
in
cltd
push
mov
outsb
dec
loop
sbbl
call
add
cs
stos
cmp
mov
xchg
jge
xor
mov
xor
mov
add
nop
cs
pop
mov
jl
cmc
cmp
mov
scas
or
xchg
insl
jno
in
lret
stos
mov
lcall
or
cmp
call
push
lahf
jae
std
mov
rcr
mov
dec
lods
dec
add
insl
stos
lods
pop
cmc
or
jl
mov
and
push
loop
or
pop
mov
rolb
push
push
mov
out
ds
shll
sbb
add
cs
std
xchg
lods
and
out
pop
outsb
out
cmp
sbb
mov
dec
cli
sbb
push
int3
pop
fxch
sub
repz
out
adc
inc
xchg
js
jo
xor
ds
scas
lea
push
dec
add
mov
cs
and
das
push
rcll
add
nopl
into
and
xor
dec
sahf
fs
bt
xor
pop
imul
enter
insl
push
mov
cld
insl
insb
or
or
push
fstpl
cs
push
insl
pop
pop
scas
sub
fwait
mov
pop
cld
outsb
test
lods
pusha
jge
cmp
out
push
loope
dec
js
idivl
popf
scas
in
xchg
inc
jg
rorl
sbbb
daa
or
test
jae
mov
sbb
add
insb
jle
out
pop
push
idivb
jecxz
push
push
push
jb
lods
scas
das
pop
push
sub
mov
ss
lods
lock
sbb
ds
adc
inc
mov
scas
adc
sbb
and
and
jg
fisttpl
ret
lea
stos
fimull
xor
lahf
outsl
pop
cmp
lods
or
aaa
repz
outsl
fldenv
ret
sar
aas
ret
out
ret
std
jecxz
xlat
ret
adc
aad
mov
or
inc
insl
lea
push
in
pop
repnz
pop
cmc
or
and
cs
ss
pusha
adc
dec
jmp
pop
mov
mov
pop
jbe
loope
mov
les
lock
std
loope,pt
cmp
cs
jle
sarb
xchg
or
idiv
mov
push
sub
outsb
lock
insb
dec
jg
addr16
and
popa
jmp
scas
push
lods
lsl
decl
jge
push
rorb
inc
shrl
sub
pop
sbb
jg
sbb
mov
mov
cld
scas
js
aas
jmp
sbb
enter
insl
mov
xorl
mov
jle
insb
stos
mov
repz
add
ja
add
dec
sub
dec
iret
mov
dec
ds
int3
fcmovb
pop
ljmp
sbb
nop
inc
adc
sub
sub
jmp
int3
cs
int
pop
repz
adc
sub
sub
insl
imul
pop
mov
int
popf
or
jbe
push
in
pop
sub
aaa
lods
sbb
inc
dec
loope
fisttpll
mov
cmp
pop
aas
cmp
sub
sbb
insb
jmp
inc
movsb
mov
lock
fisttps
mov
push
push
mov
out
jg
pop
outsl
outsb
scas
insl
add
cld
repz
mov
pushl
aas
std
or
push
add
iret
repz
ja
scas
sub
or
sarl
or
mov
sub
adc
push
and
cli
inc
cs
outsb
popf
mov
out
mov
push
dec
mov
pop
or
insl
mov
mov
sub
lods
mov
jo
jmp
int
lea
xchg
cmc
inc
movsb
outsl
stos
sarb
pop
adc
punpckhbw
push
out
sub
lods
and
add
scas
mov
push
push
test
jl
fbstp
imul
aas
loopne
or
jbe
mov
and
in
mov
ja
ja
filds
cwtl
xchg
or
dec
cmp
subb
imull
popf
mov
in
push
into
mov
insb
and
sbb
outsb
iret
xchg
jg
je
pop
inc
mov
ds
mov
fucom
sbbl
sub
iret
push
inc
test
pop
push
sbb
pop
out
pop
jle
outsl
xor
and
cmc
mov
dec
out
rep
push
jg
outsb
inc
add
ffreep
jne
cmpsb
mov
adc
scas
sub
lahf
cmpsb
add
dec
xchg
mov
pop
sbb
sub
stos
mov
lea
insb
or
push
cld
loop
repz
mov
insl
nop
popa
jecxz
push
sbb
cmp
push
outsl
cld
loope
jle
adc
lret
or
mov
push
or
mov
lods
out
cmp
scas
orb
fs
dec
push
enter
mov
xor
push
test
in
std
push
cmp
lods
xor
push
lods
sbb
push
insl
ds
out
mov
dec
sbbl
stc
add
out
in
jecxz
mov
repz
xchg
fcoml
cmpsl
push
out
push
fisttpll
ds
out
mov
loop
pop
aas
mov
in
add
pop
pop
clc
mov
out
repnz
mov
das
mov
ds
or
inc
or
sub
daa
out
add
repnz
out
mov
jge
adcb
push
pop
add
in
jg
or
repz
jno
leave
jecxz
cmpl
sbb
incl
mov
inc
cmp
xlat
mov
repz
outsb
pop
mov
mov
add
out
push
adc
or
inc
hlt
imul
pop
or
gs
mov
hlt
lahf
jle
jmp
jae
outsb
sti
inc
or
mov
mov
rorb
fnstsw
jecxz
stos
and
sbb
shrb
xor
lea
scas
push
insb
sarl
jmp
pop
add
jge
out
das
mov
pop
push
ret
or
xchg
shrl
sbb
or
popf
movb
mov
push
rorb
push
or
popa
cld
inc
push
inc
cltd
std
outsb
out
bound
xor
cmc
push
and
xor
scas
decl
addr16
or
pop
sbb
xor
jecxz
cmp
and
js
or
filds
lods
int
cmp
clc
pop
std
sbb
push
insl
or
scas
mov
or
in
cmp
sbb
lcall
dec
cs
aas
nop
and
add
push
fists
push
testl
adc
mov
ret
jns
push
sub
push
or
dec
sub
add
add
mov
lods
dec
sub
push
add
xchg
stos
jne
lods
lods
and
fstl
dec
std
rcpps
xor
addr16
dec
mov
pop
scas
mov
das
push
jmp
insl
mov
cmp
lock
fildll
dec
popa
push
pop
rol
dec
sub
pop
jae
fsubrl
pushf
dec
dec
outsb
mov
clc
adc
bswap
lods
add
inc
ds
nop
imul
ljmp
insb
enter
test
movsl
int
das
cli
paddw
xchg
cld
ljmp
sub
jbe
lods
jb
sub
cmp
jae
ss
mov
xchg
or
insb
inc
shrb
or
mov
dec
inc
sbb
jmp
clc
mov
ljmp
jne
popa
xor
lret
or
or
jle
xor
outsb
out
jle
into
loopne
outsb
or
nop
sbb
xchg
push
dec
lea
jo
inc
movsb
js
sub
cmp
les
mov
insl
lock
jg,pn
mov
adc
push
lods
rorb
and
push
push
clc
push
cmp
out
push
lcall
pop
mov
std
mov
push
push
push
out
cmp
decl
adc
jg
cmpl
sub
sub
mov
dec
test
mov
mov
dec
lods
mov
xor
insl
cs
imul
in
mov
jl
pop
push
mov
sarb
push
pop
loopne
xchg
mov
leave
push
std
rol
mov
repnz
lea
push
pop
dec
out
fnstsw
sub
jl,pt
les
int3
jne
aas
fidivrs
repz
scas
add
int
stos
pop
cmp
add
fnsave
or
sbb
fwait
ljmp
mov
jns
loope
shlb
es
iret
scas
push
mov
push
insl
and
shll
repz
imul
or
sbb
jmp
outsb
push
cs
mov
xor
pusha
and
frstor
outsb
insl
addl
sub
jmp
insb
lds
mov
lock
addr16
jg
aam
and
cld
pop
mov
push
pop
push
or
leave
js
and
mov
insb
jno
mov
insl
add
cmp
and
int
mov
mov
out
pop
inc
jge
iret
adc
pop
rolb
pop
lahf
pusha
cli
insl
inc
fdivrp
lods
sub
xor
testb
sbb
xor
jge
daa
nop/reserved
sbb
cli
in
xor
mov
mov
push
std
aaa
sbb
es
ret
mov
or
inc
in
and
dec
push
jg
call
flds
es
dec
insl
jge
fs
inc
pop
das
clc
cltd
mov
mov
cmp
out
mov
repz
pop
xchg
mov
jns
add
push
pop
repz
inc
adc
hlt
pop
std
jge
das
jae
cmp
shrb
inc
mov
aas
push
pop
add
push
aaa
imul
mov
pop
jp
jns
xchg
push
insb
sarb
jl
int
sub
xchg
xor
cmpsl
mov
pop
xor
repz
lret
scas
mov
sarl
pop
pop
xchg
cmp
xchg
push
pop
lods
push
aaa
addr16
ds
pop
hlt
out
mov
in
sbb
sbbb
popf
rcr
sub
jb
mov
movsw
inc
xchg
xchg
sbb
nop
iret
jns
sbb
push
sbb
mov
jno
jp
das
mov
push
ficoml
call
insb
jmp
cld
and
lahf
fcoms
dec
jge
add
xor
ret
inc
jae
jecxz
lods
pop
add
repz
sarl
push
or
and
cmp
in
jns
xor
popf
adc
xchg
dec
nop
push
jbe
outsl
insl
dec
cmp
leave
xchg
and
pop
cmp
lods
adc
adc
mov
mov
scas
das
cmc
pusha
mov
push
dec
clc
cmp
add
fbld
mov
insl
popf
adc
push
cmp
loope
js
mov
add
ret
ljmp
xor
ret
jg
cmp
lods
mov
bound
dec
pop
idivl
push
pop
adc
or
mov
jg
stos
inc
clc
pop
xchg
push
test
pusha
in
cmp
mov
push
aaa
push
push
inc
into
xor
repnz
push
lods
sub
repz
pop
inc
insb
jmp
in
add
push
cmp
out
in
lods
xor
lahf
cli
stos
inc
daa
movsb
jmp
jecxz
lcall
fisubrs
dec
sub
outsl
mov
pushf
jge
xchg
insl
cld
or
stc
push
insb
js
xor
outsb
mov
imul
jg
adc
mov
xor
js
push
aas
neg
insl
jmp
int3
std
pop
fsubr
loopne
scas
or
insb
cli
add
xor
repnz
ret
shrb
adc
fnsave
sbb
mov
dec
xlat
rcrl
dec
sub
mov
out
xor
addr16
pop
stos
aad
push
jns
mov
pusha
xchg
pushl
add
lods
jecxz
push
mov
ficomps
les
sbb
lock
scas
outsl
insb
fildll
cs
xor
sub
jg
push
mov
fdivrs
dec
mov
fidivrl
loope
mov
mov
pop
orl
test
insl
jg
fnstsw
sbb
imul
lds
insb
popf
dec
xor
add
sub
notl
ret
mov
mov
xchg
add
and
mov
adc
lahf
shlb
pop
jo
lods
dec
das
popf
mov
pushf
dec
rcll
pop
repz
push
jmp
aas
out
je
mov
mov
cmp
jecxz
arpl
mov
cmp
insl
mov
cli
sub
in
add
and
add
add
jne
push
loop
inc
iret
movsl
jge
sub
dec
filds
pop
cmp
mov
popf
pop
adc
fwait
data16
sbb
rorl
mov
push
shl
outsl
pop
sbb
push
sub
repz
mov
popf
sahf
xor
xchg
out
push
pop
cmp
mov
enter
in
fs
or
cld
inc
scas
repnz
arpl
push
es
fs
dec
lock
sbb
sub
stos
dec
adc
out
and
jo
mov
xor
daa
pop
mov
repz
repz
mov
std
mov
aam
or
pop
mov
xchg
dec
insb
cmp
xor
ret
stos
outsb
sti
subl
insb
cmpsb
lahf
scas
cld
ds
lret
xor
jl
scas
pop
inc
jb
jp
sub
adc
icebp
jb
adc
cli
mov
cmpsl
push
cld
inc
dec
das
lea
je
lods
add
pop
lea
pop
div
andl
jg
outsl
xor
or
pop
xchg
or
xchg
mov
add
dec
decl
sub
sbb
pop
lret
popa
shrl
scas
cld
jle
and
int
xor
push
ds
aas
insb
sti
dec
int
sets
xor
out
inc
mov
xor
mov
stc
sar
xor
and
std
cltd
pop
loope
in
cld
or
repz
adc
add
popf
aad
rcll
cmp
mov
xor
dec
imul
scas
add
xchg
aaa
add
cld
clc
stos
lods
insb
repz
cli
jmp
add
xor
jg
in
repnz
xor
pop
outsb
cmpl
in
mov
leave
and
aas
mov
insl
mov
inc
jecxz
hlt
mov
outsb
je
jge
xor
sarl
test
sub
adc
mov
cmpsb
ret
shl
roll
insl
lahf
add
idivl
mull
inc
pop
push
mov
loopne
push
jecxz
cltd
jl
jge
adc
cs
inc
ret
or
jl
lea
cld
lock
jle
sub
das
aas
xor
pop
pop
fmuls
int
insb
roll
mov
sub
outsb
fs
jl
mov
js
scas
ja
xlat
xchg
xor
mov
jae
push
repz
push
rolb
sbb
mov
in
mov
cwtl
cli
xor
mov
jl
lods
push
adc
push
push
fcomps
cs
push
xor
outsb
lahf
in
pushf
dec
inc
sbb
jecxz
jge
dec
push
int
mov
or
cld
sbb
or
addr16
js
and
xchg
ds
nop
mov
lods
ret
mov
addr16
sub
jns
sbb
dec
dec
shlb
or
jl
mov
aas
ficomps
repnz
mov
fdivrl
jbe
sub
stos
pop
inc
shlb
bound
loope
ret
dec
pop
imull
jo
xor
jl
ds
outsb
idiv
movsb
iret
bnd
lods
pop
add
dec
push
add
sub
popf
and
roll
daa
aaa
adc
jge
sub
outsb
cmp
lahf
sub
push
push
iret
jl
lcall
jae,pn
pop
pop
pusha
lea
outsb
js
or
sbb
jge
call
js
outsb
mov
lldt
cs
push
ja
cli
data16
push
cmpxchg
dec
int
push
jmp
sbb
or
pop
sbb
fsubrs
sub
cwtl
jl
sub
pop
scas
cmpsl
mov
scas
mov
push
mov
push
ds
ret
aaa
jl
pop
scas
jbe
sarb
in
dec
xor
mov
adc
mov
push
pop
jle
add
js
lods
loopne
aas
cld
jo
mov
xlat
mov
mov
push
int
push
lods
push
outsl
ds
sbb
cmpsb
ds
xlat
mov
mov
shlb
fs
out
xchg
mov
ljmp
arpl
lahf
mov
es
idiv
jl
fstp
cs
pop
adc
xor
inc
sbbb
icebp
dec
push
in
cmp
das
rcl
ds
push
push
popf
mov
xor
add
pop
nop
sti
int
ljmp
rorl
and
in
jg
push
jecxz
rcrb
or
xor
out
jle
mov
ljmp
or
fnstsw
nopl
ljmp
stos
mov
xor
ljmp
stos
mov
sub
add
sub
push
push
sbb
outsl
add
dec
fnsave
ret
nop
jne
test
lahf
push
sbb
addr16
push
int
sub
andl
fildll
aam
fisttpll
push
out
mov
insb
fsubrl
in
jmp
lods
pop
iret
pop
outsb
cmp
mov
lret
inc
xor
fs
push
decb
out
pminsw
aas
and
mov
inc
lea
push
in
push
iret
js
js
pushf
outsb
popf
cmp
enter
in
push
jae
je
ds
mov
and
adc
shrb
mov
sub
faddl
into
cmpsl
stos
push
inc
lret
jmp
sbb
fs
test
adc
lods
iret
cs
push
les
dec
roll
cld
or
push
imul
clc
sub
or
lea
or
dec
testl
insl
stos
add
mov
mov
adc
leave
push
and
pop
sbb
data16
inc
fldcw
cmpsl
inc
call
lods
les
pop
pop
aam
addr16
mov
push
adc
popf
pop
push
or
outsb
cs
push
lea
jae
xor
sti
in
in
out
mov
popf
out
or
scas
push
outsb
lods
sbb
add
sub
sub
jbe
jl
call
jecxz
in
insb
imul
cld
jg
adc
sbbl
sahf
mov
test
repnz
cmp
xor
jmp
repnz
sbb
dec
add
inc
insb
in
mov
das
popa
or
dec
lods
imul
leave
mov
int
and
loopne
xchg
dec
dec
pushf
lods
stos
push
popf
movsl
adcl
mov
jecxz
mov
popa
outsb
push
sbb
jae
cmpsb
outsb
cmp
popa
iret
pop
xor
adc
or
pop
rep
sub
adc
in
or
cmc
push
and
je
popa
sub
adc
popf
add
or
jg
mov
rorl
cltd
popf
pop
adc
js
or
inc
notb
pop
addr16
jb
fucom
mov
insl
loopne
repz
mov
lods
mov
sub
testb
insl
insb
or
mov
out
pusha
lret
xchg
mov
jns
pop
pushf
scas
or
test
pop
and
xor
cmp
or
into
push
ja
adc
sub
fcomi
push
sub
pop
iret
jecxz
lret
popf
lahf
push
mov
dec
mov
or
insl
lods
mov
inc
adc
mov
addb
loopne
jno
ffreep
xchg
rclb
push
filds
pushf
xor
hlt
xchg
ds
ffreep
das
or
cmp
add
repz
mov
mov
or
mov
test
mov
andb
js
cli
stc
xchg
mov
add
cmp
adc
lods
ss
or
xchg
dec
or
pop
sbb
xchg
pop
arpl
push
jge
fbld
out
int
popfw
inc
outsb
fwait
and
sbb
mov
mov
pop
ljmp
dec
lea
int
jb
push
fldenv
xchg
out
adc
lods
dec
idiv
ds
adc
mov
jns
dec
cltd
lods
and
stos
jle
out
leave
mov
or
fstl
push
xor
subl
int
adc
fdivl
dec
jge
add
jmp
and
jecxz
call
xchg
lods
stc
pop
outsb
inc
out
pushl
stos
adc
in
pop
mov
jg
das
out
xor
pop
pushf
pusha
popa
push
sub
cs
das
cmp
clc
imul
sub
jmp
out
push
xor
je
std
das
pop
repnz
js
into
fucomp
jmp
push
js
out
fimull
repnz
sbb
cmpsl
jns
sub
iret
sub
jo
jns
scas
out
outsl
stc
add
aas
mov
mov
scas
movlps
cmp
loope
aam
pop
mov
adc
outsb
repnz
out
xor
outsb
add
add
addr16
mov
and
movsb
test
incl
mov
dec
push
lods
lds
pop
mov
mov
xchg
in
sub
push
push
and
jg
jl
mov
dec
mov
dec
jo
pop
adc
dec
ljmp
mov
and
mov
repz
inc
cmp
popa
insl
xor
pop
iret
ljmp
sbb
mov
test
stos
adc
push
mov
pushf
jne
mov
scas
push
cwtl
adc
cmp
mov
les
data16
adc
push
sbb
cwtl
jge
rclb
jo
adc
rcr
jne
mov
push
xor
mov
push
dec
inc
adc
adc
adc
push
fs
dec
out
xlat
outsb
decl
out
leave
sub
or
mov
clc
and
xor
jl
or
sbb
xchg
add
mov
dec
adc
je
pop
ds
cmp
mov
scas
in
cmc
jl
mov
dec
push
std
es
in
jmp
addr16
pusha
mov
cmp
mov
pop
or
or
js
mov
mov
out
mov
and
mov
mov
call
sub
xchg
mov
data16
lds
xchg
mov
into
stos
jnp
jae
pop
imull
stos
lcall
lods
mov
inc
xchg
add
xchg
mulps
and
lret
div
insl
outsb
add
push
sub
stos
incb
push
cld
sub
jecxz
sub
mov
fildll
mov
sbb
and
xor
sbb
hlt
pop
pop
scas
scas
jl
cs
int
shlb
out
js
mov
push
cmp
call
std
or
inc
sbb
dec
inc
push
adc
pop
cld
je
pop
out
xchg
orl
and
push
pop
and
inc
insb
fbstp
insl
iret
sub
cs
scas
cmp
leave
adc
or
bound
sub
cmove
in
popa
inc
lahf
pop
add
push
jl
cmp
scas
fstl
mov
pop
ds
shl
mov
push
scas
repz
xchg
lea
arpl
xor
outsb
adc
mov
out
cmpsl
orl
add
xchg
ja
dec
lods
out
add
cmp
ljmp
cltd
adc
mov
mov
push
mov
cwtl
mov
stos
lods
add
js,pt
adc
push
mov
mov
fldenv
in
cmp
push
mov
lcall
stos
sbb
js
lret
mov
sbb
sub
test
shr
das
scas
ljmp
loope
decb
push
lds
cmp
repz
je
dec
sub
fs
shll
fsubrl
lea
mov
mov
dec
aas
insb
push
mov
push
cmovg
and
inc
mov
jns
jge
scas
adcb
dec
jg
push
stos
mov
mov
roll
popf
dec
adc
pop
scas
xchg
pop
sti
and
mov
js
sub
push
or
and
push
pusha
push
popf
cli
jne
repz
std
xor
dec
jl
mov
ljmp
push
adc
subb
or
jo
out
jle
test
incb
mov
mov
push
sub
sub
pop
shll
or
jl
pop
push
shl
fstp
mov
jle
outsl
stos
jmp
dec
jmp
pop
sbb
psrld
sbb
testl
mov
into
cli
jge
sub
aas
sbb
or
cmc
stos
push
xchg
or
xchg
stos
push
scas
mov
push
sub
rclb
mov
outsl
stos
push
jbe
mov
add
jg
and
std
cvtdq2ps
out
inc
sub
outsb
dec
mov
outsb
lahf
sbb
sub
push
or
mov
mov
dec
test
ljmp
xchg
stos
push
int
aas
xlat
lret
shl
out
sub
and
jne
lds
push
lret
or
dec
stos
sbb
aaa
fldt
or
or
ljmp
xor
stos
xchg
xlat
xchg
pop
insl
xor
stos
rclb
shll
jg
inc
push
or
xor
ja
add
mov
push
inc
insl
js
sbb
addb
inc
out
mov
cmp
xchg
mov
fcomps
dec
xor
addr16
cmp
or
std
cld
dec
fiadds
aaa
jle
jge
jb
pop
popf
out
movsb
jecxz
jo
enter
fidivl
jo
lds
ja
cmp
and
insb
outsb
pop
test
mov
jge
sub
mov
das
cmp
dec
out
call
stos
test
sub
sub
jne
xor
inc
xor
fwait
ret
das
cld
jbe
fdiv
inc
jl
pop
call
fildll
dec
ret
pop
cs
hlt
std
mov
lods
lods
push
int3
lock
js
insl
push
out
in
mov
push
pop
fisttps
inc
aam
ja
lods
ja
mov
insl
push
pop
mov
dec
es
mov
dec
fidivrl
imul
sbb
popf
cmp
dec
dec
cmc
outsl
push
ja
cli
xchg
pop
push
repz
fsubrl
pop
pusha
das
int
popf
fstp
pop
cs
pop
dec
lds
jp
jmp
outsl
or
mov
addr16
or
sub
call
sbb
in
pop
xrelease
pop
out
xor
outsb
lea
inc
js
sub
ljmp
or
lea
popf
icebp
dec
jnp
or
aas
outsb
and
stos
mov
fstpl
cmp
mov
test
jecxz
in
stos
popl
and
xor
aas
adc
jg
imul
stos
and
sub
mov
pusha
das
insb
jle
bound
jns
fstp
ds
std
pop
jb
cmc
in
or
jge
cmp
mov
jle
insb
dec
pop
lret
loope
out
jnp
negl
cmpsb
movsb
addr16
pop
pop
pushf
testb
xor
cmpsl
ret
in
cmp
push
scas
repz
cs
jo
mov
jg
bound
hlt
sub
cmp
adc
push
jl
icebp
or
or
std
ffree
fnstcw
or
loopne
js
lods
clc
movswl
repz
jle
push
outsb
xor
cmp
lahf
orl
das
mov
add
int
push
lahf
pop
xor
inc
nop
and
cs
adc
aad
push
or
add
insl
sarl
push
xor
add
fisttpl
outsl
add
das
repnz
jmp
mov
loopne
xor
insl
sbb
adc
xlat
sub
mov
cmp
repnz
data16
aas
sbb
pusha
xor
cmpsl
rcr
ds
push
es
loope
jge
push
pop
push
in
testl
int
and
adcb
repz
in
in
js,pt
jmp
movhps
cld
xchg
aas
push
or
sbb
pop
or
inc
lahf
push
fisttpll
dec
cmpb
mov
pushf
pop
adc
repz
daa
incl
add
jle
jecxz
popf
lea
stc
mov
int
addr16
in
data16
sub
push
mov
mov
out
push
pusha
mov
ljmp
push
lock
mov
sbb
push
std
push
push
lods
sub
add
dec
pop
lea
jle
stos
outsb
and
and
jge
adc
push
pop
add
aas
pop
mov
repnz
jge
insl
mov
outsb
iret
or
cmp
pop
roll
xchg
pop
rorl
sub
enter
dec
outsb
mov
in
mov
aam
shrb
outsl
mov
add
xor
sbb
ret
lods
push
push
mov
push
push
mov
shrd
pop
aas
push
cmc
int
bound
dec
sahf
jg
xchg
ror
sqrtps
aam
sbb
pop
repz
std
in
and
sub
xchg
lret
dec
out
imul
scas
rclb
add
xor
cmpsl
dec
or
mov
adc
jge
or
push
xchg
testb
iret
sub
fcmovu
push
mov
xor
lods
aas
fisttps
pop
push
stos
and
test
xchg
ret
std
out
lcall
pop
scas
or
jg
aas
inc
repnz
pop
sbb
pushf
ja
sbb
in
loopne
mov
decb
push
int
mov
ret
jae
out
mov
sar
out
and
aas
leave
stos
repz
scas
cli
sub
lahf
push
pop
mov
out
ss
xor
sub
cmp
sbb
js
fnstsw
test
pusha
scas
out
out
adc
shrl
std
js
push
and
pop
xor
idivl
out
mov
pop
insb
out
mov
pop
jmp
dec
and
mov
xor
xchg
out
cld
cmpl
cmp
repnz
outsb
outsb
or
and
push
sbb
pop
movsl
fs
out
jb
dec
mov
push
xchg
push
js
fldt
in
push
cmp
or
gs
mov
pop
inc
outsb
dec
lock
lea
inc
subps
adc
pop
aas
clc
push
adc
rorb
out
add
dec
addr16
mov
jg
je
sub
test
aas
lea
fmul
rorl
xor
cmp
lods
jmp
inc
fistps
stos
jmp
sarb
int
pop
sbb
jle
pop
div
add
repnz
pop
jl
cmc
push
add
mov
into
lea
rcrl
out
cld
fldl
pop
or
xchg
into
mov
insb
orl
jl
push
lcall
testb
jecxz
sub
int3
jg
push
subl
pop
or
test
call
cmc
jmp
movsb
scas
fldl
aas
push
jle
insl
sbb
mov
push
xlat
dec
je
scas
dec
lods
jl
or
pavgw
jo
pop
insb
add
cmp
idivl
pop
push
push
test
aam
incb
sbb
fisttpl
sub
sbb
repz
out
cs
scas
in
inc
fidivs
fs
push
dec
repnz
adc
jle
hlt
or
xchg
mov
xchg
std
lods
cmc
rcll
mov
xchg
call
stos
in
pushf
fsubrs
shlb
and
iret
jl
das
jl
ljmp
cmp
xchg
filds
adc
js,pn
xor
cmp
pusha
jecxz
mov
hlt
xchg
cs
add
and
pop
icebp
mov
and
push
rdtsc
xor
repnz
jg
mov
ret
mov
push
add
pop
cmpsb
pop
fisttpll
add
insb
lods
ds
cmp
fcmovnu
inc
das
sbb
ja
test
fs
std
shll
xchg
insl
or
or
push
xor
xor
push
stos
popf
out
push
repz
mov
sbb
ds
dec
xor
jmp
adc
outsb
mov
jns
jns
jns
pop
dec
dec
jge
test
xor
jns
mov
dec
jecxz
mov
loopne
lahf
xchg
fsts
add
xor
xchg
mov
stos
xor
shld
rcrb
mov
fisubrl
movl
mov
adc
es
lods
insb
iret
roll
insb
les
push
push
dec
out
out
je
into
sbb
psrld
mov
in
and
or
inc
outsl
inc
cmp
jge
das
ds
jo
jmp
pusha
pop
or
dec
mov
dec
jecxz
inc
cmp
push
testb
push
mov
insb
cwtl
aad
adc
pop
repz
dec
push
xor
inc
dec
sub
lahf
adc
and
cmp
or
push
mov
pop
sbb
cmp
push
jmp
addr16
sarl
aam
das
or
push
adc
cmp
or
cs
imulb
sbb
outsb
jge
outsb
push
jg
push
xor
stos
pop
insl
mov
jl
dec
mov
push
or
xchg
sub
add
insl
popa
sub
jb
insb
mov
adc
cmp
lret
inc
dec
repz
in
xor
cs
insl
sarl
jecxz
jmp
dec
int
cmpsl
test
adc
mov
push
sarb
jle
push
ss
nop
frstor
in
xchg
sub
push
scas
inc
insb
push
or
out
jo
repz
or
pop
mov
pusha
mov
fdivl
cmpsl
bound
int
dec
aas
sbb
orb
jb
jecxz
push
das
mov
cmp
pop
add
jl
sbb
lahf
sub
jg
mov
cmp
sub
stos
imul
or
inc
mov
in
sub
cmp
xlat
sarl
push
or
popa
outsb
or
dec
in
dec
das
mov
ret
insb
out
cld
pop
adc
popf
push
mov
mov
dec
push
jmp
dec
rcrl
ljmp
and
dec
popf
cs
jmp
inc
fisttps
push
int
cmp
out
call
mov
in
jg
div
std
xor
testb
xchg
mov
or
push
aas
scas
pushf
jp
int
pop
orb
push
xor
jge
movsl
test
and
fsubr
jg
jl
aaa
mov
dec
repz
dec
aaa
stc
xor
dec
cmp
and
cwtl
iret
scas
and
or
add
jl
xchg
pop
repz
xor
push
pusha
test
push
sbb
inc
add
outsb
jmp
mov
ret
mov
mov
popf
jecxz
out
outsl
pop
sub
insl
jmp
push
pop
sub
icebp
push
gs
pop
jle
int
insl
xor
lcall
outsb
dec
or
movsb
lods
jg
sarb
lea
inc
add
jge
pop
cld
inc
xchg
jno
loope
adc
fadds
lea
das
push
pop
cmp
inc
imul
dec
leave
add
std
iret
lea
mov
xchg
xor
mov
mov
aas
mov
push
adc
cmp
push
ds
jnp
and
je
std
aas
lret
repnz
mov
pop
jge
out
jl
in
mov
pop
pop
push
lea
mov
pop
sti
lock
das
fistpll
out
cmp
incl
jge
xor
push
mov
jns
mov
negb
mov
scas
test
lahf
mov
add
cld
lret
lods
push
out
jl
js
mov
decb
int
push
pop
jb
stos
repz
or
call
add
fistpll
jg
mov
sbb
cmp
and
or
je
push
int
adc
xor
insb
out
les
out
lods
add
divps
dec
push
cs
inc
push
inc
into
jmp
pop
mov
jg
popl
imul
xor
and
lods
iret
cli
push
jbe
dec
push
push
mov
dec
or
pop
mov
cmp
imul
scas
pushf
push
and
adc
mov
pop
xchg
pusha
fildll
cwtl
pop
mov
pop
sub
xlat
cs
push
pop
loopne
adc
cmp
mov
mov
movsb
xor
mov
ffree
orl
hlt
cmpl
movsl
jo
ds
addr16
pop
je
addr16
lods
inc
inc
push
repz
das
popf
int
add
fildll
fs
add
pop
out
jnp
mov
sub
shll
adc
pop
or
cld
daa
jl
jg
jecxz
mov
jo
or
mov
mov
push
lahf
xchg
cmp
fisubrl
jmp
daa
aaa
cmp
sbb
outsb
clc
mov
das
shll
add
ljmp
xor
xor
in
and
shr
outsb
push
pop
test
fdiv
add
in
push
inc
jmp
and
sbb
dec
push
sub
sbb
in
stos
lret
ds
xor
lods
push
sub
dec
enter
incb
mov
and
jg
mov
mov
sbb
fyl2xp1
pop
jge
add
xor
and
fimuls
jg
repz
outsb
sbb
cmp
fldt
insl
iret
jns
into
mov
js
out
push
pop
scas
in
adc
push
sbb
adc
mov
add
or
mov
mov
ror
push
sbb
inc
add
ds
insl
imulb
push
imul
and
testl
xor
loop
adc
mov
adc
push
fmull
popf
pusha
pushf
cmp
ret
inc
jns
mov
js
push
inc
aam
mov
mov
mov
cmp
rcrb
cmp
mov
lahf
stos
imul
imul
jg
xchg
outsl
pop
sbb
push
and
clc
int
mov
and
xor
sub
jns
fldl
cmp
xor
iret
jg
adc
cmp
fisubrs
fadds
sti
orb
cld
movsb
jecxz
testb
mov
in
cmp
jp
je
and
cmp
adc
add
mov
out
scas
and
pop
repz
pop
int
dec
xor
xor
in
pop
mov
inc
popa
xchg
jo
inc
mov
lahf
push
cmpsl
mov
sbb
daa
rcrb
lods
sub
adc
pusha
js
or
or
dec
cmp
sbb
vpaddsw
inc
or
pop
sarl
pop
cmc
xor
outsl
pop
in
sbb
stos
lods
jmp
insb
fstl
fcmovnbe
fs
rclb
aas
jl
mov
mov
addl
js
adc
jns
aas
jo
jmp
or
in
cmpl
lods
mov
outsl
push
jl
test
das
fdivrs
jecxz
xchg
cs
push
cmc
pop
std
nop
imul
out
inc
rorl
pop
pushf
scas
xor
jb
mov
sub
jge
fildll
repz
pop
or
dec
add
cmp
mov
pop
decb
lret
sub
jne
lods
jmp
mov
out
xor
xchg
sub
int3
cmp
in
cmp
mov
test
int3
mov
sbb
xchg
push
mov
xchg
insl
jo
ds
and
in
sbb
pop
je
push
pop
lea
push
addr16
jg
mov
mov
repnz
push
jecxz
mov
rorl
sbb
push
cmp
popa
adc
mov
add
frstor
add
int
sbb
adc
cs
mov
push
cmpsl
cmp
cmp
or
hlt
scas
insl
das
jle
push
das
or
inc
je
pop
outsl
xchg
fstpl
stos
mov
sti
push
std
xor
pop
add
sbb
js
sub
sbb
cld
lock
mov
push
inc
sbb
push
stos
arpl
pop
daa
imul
iret
lcall
lahf
js
ja
in
jmp
lret
cld
adc
sarb
mov
lret
outsb
or
cs
lea
shrb
lahf
shrb
adc
xchg
jecxz
lods
inc
shrd
mov
or
dec
popf
adc
push
stos
pop
mov
stos
or
push
jo
lods
repz
mov
sbb
fistps
outsb
in
aad
jle
cmp
mov
xor
sarb
xor
mov
insl
push
add
jecxz,pn
mov
add
pop
rep
aas
dec
sub
scas
lods
inc
pusha
ds
in
sub
dec
shlb
pop
cli
fs
sbb
or
push
push
imul
lods
scas
xor
mov
adc
subl
pop
or
mov
shrb
lahf
or
xor
shrl
in
xchg
mov
lret
add
mov
push
pop
jmp
pop
je
mov
and
push
int
iret
pop
add
xor
ljmp
fsubr
js
add
test
hlt
jo
outsb
mov
out
push
lahf
inc
popf
mov
cld
pop
out
cmp
push
fidivrl
jle
or
test
lea
aas
sub
call
aas
jae
adc
pusha
iret
push
int
pop
jge
popa
sbb
mov
jns
lods
js
aaa
push
iret
pop
mov
fistps
inc
out
sub
testb
in
out
or
outsb
cmc
fsubrl
xor
scas
insb
pop
loop
call
lea
fnstsw
mov
jle
gs
jge
pop
lods
lock
pop
insl
mov
sub
inc
mov
mov
pslld
or
aas
xor
iret
lods
aas
scas
scas
fists
fidivrs
mov
in
loope
lods
sarb
sbbl
sbb
mov
out
jmp
jae
fld
pop
iret
das
adc
std
xchg
push
dec
or
outsl
inc
pop
lret
and
push
mov
movsl
mov
mov
fisubl
fstpl
lcall
cmc
lea
sbb
adc
cmpsl
fs
jg
cltd
faddl
lds
addr16
add
rorb
and
lods
xchg
scas
pop
enter
pop
out
out
lret
iret
fnstsw
add
scas
inc
pop
call
mov
ss
ficompl
add
pop
movhps
cwtl
pop
push
cli
shr
cltd
stos
push
sbb
int
dec
in
in
sub
iret
aam
add
jecxz
decl
je
xor
pop
sub
dec
in
push
jecxz
jmp
fisubl
dec
xchg
das
in
pop
and
dec
push
call
pushf
push
outsb
push
lods
pop
inc
js,pn
sub
mov
js
nop
jae
shl
jmp
push
test
loopne
jns
out
movsl
push
xor
jge
decl
push
mov
paddb
iret
cli
mov
jle
jo
push
outsl
out
mov
jns
push
lea
mov
xor
not
adc
clc
imul
outsl
push
iret
outsl
nop
shrl
shll
pop
loope
dec
dec
xor
aas
lods
or
je
sbb
aaa
pop
fs
daa
jecxz
stos
mov
lock
dec
or
pop
dec
scas
ficoml
mov
addl
pop
inc
mov
bound
adc
dec
jmp
cmpsl
pusha
pop
insb
fisttpll
ss
scas
imul
lock
push
sar
fsubl
loopew
cmp
shl
adc
popf
jl
dec
and
cmp
int3
mov
insl
jae
inc
imul
out
add
sub
mov
inc
inc
fcompl
or
ja
repz
mov
xchg
cld
movsl
int
add
cmp
data16
repz
add
inc
mov
popf
jmp
mov
ljmp
adc
scas
xor
xchg
aas
outsb
push
add
nop
adc
repz
lods
dec
pop
leave
outsb
push
push
cmovge
sub
in
jne
pop
dec
and
cmp
repz
pop
push
mov
sbb
mov
push
xchg
ret
adc
gs
pop
lahf
sub
mov
outsl
inc
repnz
pop
out
jge
add
das
xor
pop
jecxz
sub
int
outsb
jne
paddusb
dec
lea
in
adc
xor
rclb
or
add
and
out
insl
jle
pop
in
push
out
sarl
decl
lods
outsb
mov
xor
fsubrl
ret
shrb
dec
and
xor
imul
insl
arpl
jmp
insl
pop
dec
sarl
or
jg
std
pushf
iret
outsb
mov
mov
xchg
xor
sarl
mov
cmc
and
push
mov
pop
pop
ret
js
pusha
daa
pop
dec
add
pop
ss
loope
or
ret
pop
ret
pop
and
mov
stos
mov
fdivp
lods
jg
cld
add
pop
mov
sbb
mov
pop
mov
aas
inc
mov
add
fisttps
xor
mov
scas
add
xor
mov
adc
jg
xor
inc
xor
test
test
and
shll
ljmp
cs
popf
aas
pop
sbb
lea
scas
cmp
std
lahf
cmp
pushf
lods
pop
add
in
adc
adc
xchg
in
lahf
and
and
ret
outsl
int
pop
inc
sbb
xor
or
jle
fbstp
adc
inc
outsb
mov
popa
std
mov
ret
enter
mov
repz
mov
xchg
popf
ret
dec
scas
mov
mov
insb
sub
xor
cmp
and
cmovae
testl
jae
popa
pop
fnsave
cmpsb
mov
aas
repnz
jg
das
sbb
pop
push
mov
mov
int
psubb
rep
mov
shl
or
insl
sub
inc
sahf
stos
xor
mov
push
pop
imul
mov
addr16
pop
jmp
clc
fs
shr
into
iret
std
lods
jecxz
mov
jl
jg
fdivrs
fisttpll
insb
jle
in
cmp
or
ljmp
cltd
xor
dec
movsb
push
std
and
fisttpl
pop
cli
insb
in
je
lret
popa
mov
xchg
jecxz
dec
mov
unpckhps
out
adc
add
repz
arpl
int
cmp
sub
dec
dec
xor
cmpsl
adc
sbb
ja
pop
popf
movsl
xor
rorl
adc
ds
jecxz
sub
adc
mov
sbb
xchg
and
jle
sarb
mov
out
sarb
jg
or
imul
mov
daa
mov
lahf
mov
out
mov
pusha
xchg
pop
mov
insl
mov
addr16
xchg
inc
fwait
jecxz
loopne
test
xchg
jg
adc
and
insb
cltd
lret
mov
das
sub
dec
lods
rorl
insl
movsl
cld
xor
dec
out
dec
jl
lds
xor
aas
add
or
sbb
push
sbb
lret
decb
addr16
jmp
insb
push
testb
jle
or
movsl
adc
out
push
push
xor
clc
int
pop
push
mov
pop
push
add
adc
les
dec
push
push
jmp
jg
enter
lods
add
aad
addr16
push
fstps
cltd
leave
lahf
iret
fcompl
push
adc
or
dec
jmp
dec
push
jecxz
addr16
sub
pop
cld
hlt
outsb
out
sub
js
int
jns
dec
sti
dec
jb
xor
mov
sti
cmp
fdivl
cli
shrl
push
das
push
fildll
jl
pop
jns
dec
popl
in
sub
inc
mov
and
iret
stos
dec
cld
push
sbb
cs
jmp
andb
pop
jns
cmp
dec
enter
shrl
inc
jl
icebp
dec
inc
lahf
jb
cli
jns
imul
jne
aad
xor
push
inc
and
xchg
push
movsl
xchg
iret
rol
inc
bswap
or
loope
jg
loope
xchg
addr16
pop
and
and
out
sbb
and
jge
insl
fildll
in
pop
jl
mov
repnz
pop
push
sti
push
mov
scas
jg
dec
or
dec
gs
cmp
stos
test
adc
lahf
cmp
lcall
mov
pop
mov
push
jl
inc
rclb
aas
cmp
inc
in
outsl
dec
imul
std
pop
push
cwtl
mov
pop
xor
mov
ss
xchg
or
cld
and
inc
lods
cs
sbb
or
icebp
dec
push
divb
loope
push
popf
mov
jle
fistpl
pop
cwtl
cmp
pop
stos
xchg
outsb
outsb
es
aas
outsb
fs
cs
clc
mov
jcxz
cld
jge
pop
jp
out
dec
jmp
lods
pop
mov
push
push
int3
es
push
out
push
add
mov
sub
adc
jnp
pop
mov
lea
call
add
mov
lods
enter
adc
pop
add
iret
data16
or
xor
dec
outsl
add
xor
push
sbb
lods
sarl
mov
jg
packuswb
mov
jle
mov
push
jl
test
das
jge
mov
sub
or
idivl
std
int
aas
popf
jne
addr16
jnp
inc
push
sbb
aas
popf
mov
xchg
dec
jmp
xor
pop
mov
fnstsw
mov
mov
xor
and
mov
pop
jb
dec
jg
lahf
mov
stos
arpl
jmp
sub
inc
decb
pop
adc
pop
pop
pop
adc
cmp
sub
orl
push
jle
fs
test
fucom
adc
push
mov
adc
jl
xchg
xor
push
mov
iret
loope
jecxz
mov
outsb
sarb
sbb
jb
cs
int
pop
outsb
jl
ret
xor
outsl
push
popf
jmp
shr
push
sub
mov
cmp
push
sbb
cmp
adc
cmp
sub
clc
aam
mov
sarb
pop
dec
fdivl
sbb
aas
imul
outsb
pop
loopne
in
adc
pop
out
dec
stos
ss
std
add
and
addb
repnz
jmp
scas
mov
lea
dec
adc
mov
dec
mov
scas
sbb
in
addr16
adc
int
pushf
pop
cmp
or
mov
sarb
jp
mov
test
out
repnz
jns
insb
std
or
and
add
jne
out
and
insl
outsl
push
stos
mov
js
outsb
pop
mov
cmp
or
push
ficomps
mov
scas
push
call
and
dec
addr16
popf
aas
jg
jbe
lret
mov
lret
ret
jae
jl
out
jecxz
lahf
or
lock
pop
ds
lahf
ljmp
bnd
sub
push
cwtl
pusha
and
mov
mov
mov
psrlq
pop
and
sub
call
xchg
pop
push
mov
outsb
or
scas
jg
andl
fcmove
add
adc
adc
divb
ljmp
stos
lock
jl
adc
xor
mov
sbb
mov
std
roll
mov
dec
adc
and
fistpll
out
fisttpll
xor
mov
je
inc
push
js
sbb
in
aas
lock
popf
push
ds
std
ja
push
fstpl
test
jmp
fmull
movsl
mov
mov
xor
xchg
in
or
out
add
cld
dec
pop
pop
mov
adc
pop
jle
mov
int3
loopne
sub
lcall
fisttps
xchg
int
inc
sub
adc
repz
out
outsb
jl
dec
stos
dec
xor
jae
subl
jg
sar
sub
mov
fnsave
mov
in
nop
and
outsl
sub
int
inc
add
das
neg
out
in
hlt
push
ds
insl
mov
fcoms
sbb
and
cld
call
dec
mov
mov
mov
test
pop
sub
mov
push
lahf
scas
push
popa
pushf
push
decl
or
push
adc
xor
sbb
lahf
jg
pop
shll
popf
adcb
out
pusha
dec
int
cli
sbb
fwait
add
push
inc
decb
add
sbb
mov
pop
pushf
loope
sbb
jecxz
mov
pop
out
repnz
ds
cld
lcall
dec
cs
cmp
or
scas
insb
jge
arpl
dec
add
enter
or
fucomp
cmp
xor
and
jae
insl
out
clc
popf
jo
test
in
je
jg
aas
subl
and
lods
das
xor
sub
mov
in
inc
in
imull
push
ss
mov
iret
in
out
adc
insb
loope
outsb
int
lods
or
dec
in
dec
mov
outsb
insb
sbb
mov
ffree
pushf
pusha
lcall
loop
add
scas
push
ljmp
sub
scas
sub
sub
ret
mov
pop
iret
ds
int
mov
dec
jg
pop
outsb
adc
lret
sub
jg
mov
pop
pop
inc
pusha
or
adc
aad
int3
jns
scas
dec
push
add
mov
cwtl
push
xlat
mov
imul
sbb
insb
cmp
ds
inc
mov
dec
cmp
jmp
lock
popf
jmp
fmull
insl
and
inc
dec
pop
pop
sbb
lahf
push
data16
aaa
hlt
sub
scas
mov
pop
movups
xor
int
mov
jle
enter
or
mov
jno
test
in
inc
in
pop
aas
and
repz
xor
hlt
addb
dec
mov
scas
imul
int
xor
add
out
or
push
mov
push
lods
jae,pt
nop
cmp
and
mov
pop
pop
jae
mov
pop
add
inc
sub
mov
out
pop
adc
iret
lods
std
js
cld
lea
or
popa
add
ffree
mov
pop
shlb
mov
pop
and
mov
jge
out
or
jle
ret
outsb
imul
in
ror
lret
repz
out
cli
mov
mov
repz
mov
fstpl
pop
sbb
dec
loop
arpl
sub
in
aas
push
rcr
lahf
xor
call
in
push
or
loopne
ds
mov
stos
xlat
rclb
pop
pop
mov
sub
xchg
pop
insb
adc
das
sbb
xchg
insb
test
out
sub
sub
in
pusha
iret
cmp
lahf
push
dec
and
mov
push
iret
cld
jge
inc
add
cmp
jge
sbb
adc
jns
jecxz
iret
call
mov
pop
xchg
mov
pop
xor
or
fisttpll
ret
cld
sbb
pushf
inc
sub
lea
xchg
js
fistps
mov
cld
insl
pop
pop
jo
mov
mov
pop
repz
pop
xor
incb
or
xchg
mov
adc
pop
daa
sub
xor
mov
sub
mov
dec
push
mov
call
sbb
sarb
jns
xchg
nop
out
and
pop
mov
jge
pop
inc
cmc
icebp
xlat
popf
outsb
cmp
test
stos
adc
sbb
pop
insb
ja
jg
xor
das
jge
ds
les
jae
insb
fwait
int
fs
jecxz
push
dec
mov
pop
mov
fdivrl
mov
or
jge
lret
or
popf
clc
inc
mov
push
fucomip
int
adc
and
bound
adc
xchg
mov
pop
scas
out
xchg
xchg
xor
repz
in
aaa
js
popf
scas
insl
lcall
jle
inc
cmp
int
push
outsb
ljmp
ljmp
pop
insl
sub
and
and
sub
aas
loop
das
mov
cmc
mov
adc
mov
sti
push
js,pt
jp
test
mov
pop
xor
or
push
insb
mov
or
pop
in
lret
dec
cld
xor
mov
decb
push
out
and
rorl
pop
xor
pop
das
and
jg
and
fnsave
out
pop
sbb
inc
ljmp
pop
enter
gs
ja
xor
xor
pop
mov
call
int
inc
subl
js,pn
cmp
insl
shl
sbb
xor
mov
jp
cmp
jo
in
xor
shrb
xor
outsl
scas
add
lock
dec
std
das
cmp
pop
repnz
insb
popf
sti
iret
pop
pop
out
aas
lea
in
sub
dec
dec
inc
stos
nop
dec
insl
ds
mov
test
pusha
nop
pop
lods
jae
push
inc
xlat
scas
ds
dec
outsb
hlt
inc
mov
jmp
mov
dec
outsl
sub
jecxz
lea
testl
and
pop
lods
jge
adc
out
mov
addr16
repnz
sub
lods
jl
mov
push
std
loope
aas
dec
shlb
into
cmp
inc
movl
cld
pop
cmp
ljmp
add
jo
pop
js
pop
mov
mov
push
out
lds
sub
and
or
jbe
mov
js
cmpsl
sub
add
sub
shll
fistl
lock
cs
lods
and
cmp
jg
inc
dec
hlt
push
insl
cmp
jmp
pop
popf
push
pop
sbb
mov
mov
ss
sbb
mov
mov
pop
and
shlb
xor
mov
xchg
pop
daa
xor
push
popa
lea
addl
jge
insl
pop
insl
mov
or
neg
mov
dec
adc
jmp
sbb
jmp
out
mov
dec
outsl
xchg
ret
lret
mov
repnz
or
jns
mov
insl
adc
jmp
popf
je
xor
sub
adc
and
arpl
outsb
das
mov
lea
repz
mov
pop
cmc
fbld
sub
push
stos
add
dec
outsb
into
decl
cs
mov
rol
sbb
xor
loopne
xchg
int
mulb
add
std
dec
das
ds
push
enter
sbb
fidivrs
mov
in
sbb
outsb
or
lock
dec
xor
sbb
xchg
outsb
adc
mov
cmp
sbb
xor
jg
sbb
push
mov
push
pop
insl
mov
sbb
xchg
loope
fbld
arpl
pop
adc
pop
js
incl
lahf
mov
sti
adc
jl
sub
jl
or
shl
cmp
je
outsb
lcall
loopne
sbb
out
push
movsl
mov
out
mov
adc
sbb
mov
stos
push
adc
sub
ja
insb
dec
mov
shrb
lods
cmp
push
fisttps
fcomps
outsb
scas
adc
fbld
shrb
mov
pop
xor
inc
pop
fidivs
mov
sub
mov
sbb
rclb
sbb
jge
mov
or
or
scas
ror
mov
sbb
enter
lahf
lods
ljmp
pop
lcall
pop
sti
xchg
push
jns
cmpsl
jg
shrb
push
push
repnz
insl
outsb
addr16
adc
push
in
mov
out
mov
fucomip
stos
inc
jecxz
pop
decb
adc
cmp
or
pop
shr
xor
cmc
aam
push
cwtl
push
xor
or
outsl
popf
mov
ret
repz
mov
loope
sbb
push
pop
outsb
push
mov
or
sbb
in
sbb
clc
jmp
lahf
outsl
testl
leave
leave
mov
adc
stos
popf
inc
mov
xchg
xor
push
mov
outsl
loopne
negl
sbb
iret
rcrb
cltd
and
pop
lods
movsb
adc
das
jg
cld
aas
mov
arpl
and
hlt
aaa
popf
scas
adc
loop
push
push
and
nop
icebp
cmc
jbe
stos
cltd
sbb
add
or
in
js
scas
das
push
push
scas
lods
insl
decb
cmp
jl
pusha
xor
outsb
fcmovnbe
lret
lcall
xchg
add
lods
adc
jge
push
lahf
or
dec
push
js
xor
in
fistps
outsb
std
cs
cmp
jecxz
pop
add
das
jmp
jmp
push
adc
iret
inc
adc
push
sbb
out
aaa
sub
scas
jg
lods
movsl
addr16
pop
push
mov
in
dec
inc
push
stos
mov
xchg
les
pop
adc
dec
dec
push
and
js
insl
lods
jge
std
inc
mov
addb
mov
insl
rorb
or
repz
jmp
subl
jle,pt
std
inc
cmp
subb
push
popa
jl
pop
pop
in
jae
int
jo
pcmpeqb
ljmp
ljmp
add
aas
in
lret
jle
out
mov
lea
sbb
insl
inc
jle
lea
pusha
add
data16
cld
sub
lea
lods
lret
mov
add
jecxz
int
decb
daa
push
push
xor
add
cs
out
stos
jg
sub
xchg
or
dec
pop
aaa
dec
lods
xor
out
outsl
adc
mov
sbb
dec
scas
cmp
push
push
in
add
inc
cmp
adc
inc
mov
add
adc
fdivrl
inc
aas
dec
jp
aad
fldenv
js
add
xrelease
rclb
test
aas
or
repz
push
fistpll
jns
outsb
mov
sub
dec
ljmp
sahf
sbb
sub
filds
inc
int3
cmp
test
repz
mov
pop
in
sub
js
and
dec
push
pop
push
cmp
push
mov
sbb
dec
cli
mov
je
and
xor
add
mov
lret
lods
jmp
shr
dec
pop
inc
pop
iret
lahf
or
aas
push
test
and
xchg
scas
testb
xchg
cmp
aas
push
inc
testb
xor
mov
mov
aas
push
push
outsb
out
xlat
dec
scas
mov
sub
mov
xlat
fcmovu
stos
mov
in
jo
ljmp
inc
pop
jns
inc
xchg
outsl
pop
mov
test
call
push
or
xor
push
insl
jmp
mov
xlat
sbb
fdivrl
push
and
sbb
inc
iret
int
push
push
or
xor
std
js
xchg
jecxz
sbbb
mov
sub
ret
popf
cs
ja
pop
sub
jmp
cs
sub
jecxz
fcomps
dec
in
dec
jge
push
xor
push
or
mov
cld
mov
mov
adc
and
push
dec
idiv
psubsw
insl
xor
outsb
ljmp
mov
test
das
aaa
push
test
fnstsw
dec
out
lahf
pop
aas
rep
add
pop
pop
or
lods
pop
or
sub
ret
xor
cmc
adc
push
fmull
mov
loope
jg
ret
sbb
mov
pop
out
push
sbbl
outsb
insl
cwtl
insb
push
mov
and
cmp
lahf
negl
jcxz
push
mov
stos
das
xchg
mov
scas
push
lods
frstor
insl
mov
ds
imul
xchg
mov
dec
subps
jbe
and
xchg
jle
outsb
mov
mov
loope
jge
clc
aad
js
add
insb
mov
aam
pop
fists
push
jle
in
push
loop
xchg
int3
jl
adc
inc
pushf
aas
lret
mov
repz
pop
test
insl
inc
sbb
popf
int
cmpsl
call
inc
outsb
cmp
lea
push
pop
fs
fstpl
jbe
loopne
pushf
das
jecxz
mov
arpl
lods
dec
lea
idivb
push
insl
mov
jae
std
cltd
clc
dec
add
or
popa
xor
imul
mov
pop
scas
mov
push
dec
incb
add
sub
xor
adc
frstor
mov
pop
lock
jns
enter
sub
dec
xchg
dec
ljmp
xor
cmp
popa
fs
mov
push
in
dec
je
lods
and
dec
jge
xor
adcl
repnz
outsl
bswap
mov
aas
adc
and
inc
gs
pop
in
add
xor
lret
xorb
xlat
ljmp
or
sarl
sub
or
pop
ljmp
push
add
iret
push
pop
insl
jno
jns
mov
mov
xor
inc
xor
iret
scas
sbb
push
idivl
push
jecxz
push
mov
addr16
repnz
outsb
pop
jae
pop
jmp
jle
sbb
bound
inc
mov
outsl
mov
pop
cld
out
jle
sbb
push
gs
pop
gs
fists
das
rorb
adc
mov
repz
push
mov
xchg
pusha
ljmp
js
push
sub
outsl
cld
pop
cmp
gs
addr16
repz
cld
insl
cmp
mov
orl
xchg
jge
repz
or
push
sbb
mov
push
mov
pop
lahf
pop
stos
inc
sbb
test
push
test
lea
cs
jle
inc
pop
repz
in
push
jp
insl
lods
movsb
int3
sub
outsl
insb
push
push
lock
or
scas
dec
mov
cmp
std
dec
jge
aaa
dec
outsb
push
stc
outsb
imul
pop
idivb
cmp
pop
push
outsl
test
rorb
ja
jecxz
pop
or
xor
mull
jge
and
cmp
pop
dec
adc
dec
divb
sub
dec
js
lret
cs
jb
cs
push
dec
sub
popf
push
xor
cmp
mov
xor
lahf
fmul
jb
pop
mov
dec
cmp
and
sub
sbb
xor
jl
aas
push
gs
adc
repz
pop
jle
sahf
add
aas
jmp
popf
stos
mov
lods
rorb
outsl
mov
jl
shrl
orb
xor
enter
insl
xchg
and
out
adc
xorb
popl
inc
pushf
cli
and
pop
cmp
xor
mov
cmp
cmp
stos
or
jg
outsb
sub
sbb
xlat
or
out
lds
in
test
insl
adc
jle
jb
jl
inc
inc
xchg
adc
outsl
push
test
bound
inc
add
and
popf
pop
pop
bndldx
je
push
jg
insb
sub
adc
stos
sbb
std
mov
call
scas
das
xor
sub
imul
negb
frstor
daa
and
call
mov
mov
push
xchg
es
jo
lea
prefetch
or
ss
sbb
loop
mov
test
jnp
jl
jnp
sbb
pop
or
std
or
aas
sbb
mov
int
mov
iret
cmp
push
dec
jle
push
outsb
insl
test
push
jge
inc
jo
mov
cmp
and
push
sub
push
or
hlt
pop
repnz
lods
lods
ds
insl
cmp
mov
mov
imull
shrb
insl
std
pusha
push
jmp
or
pop
popf
gs
or
dec
outsb
push
std
mov
inc
jg
mov
sbb
dec
xchg
sbb
aaa
pusha
pop
pop
aas
fisttpll
popf
iret
cld
push
in
jl
push
cmc
or
sub
cmp
lods
sbb
insl
lods
sbb
scas
out
cs
mov
mull
sbb
enter
pop
push
cld
fstps
jns
or
fisubrs
movd
push
lahf
adc
sbb
cmpsl
inc
shlb
lea
xor
inc
push
das
ret
inc
mov
add
ret
xor
push
xor
adc
jl
movsb
data16
jg
inc
jo
insl
in
psraw
cmp
outsl
cmp
jge
lds
or
or
sub
mov
lea
adc
mov
fsubr
pop
mov
in
dec
shlb
sub
lods
xchg
xchg
rorb
mov
jae
cld
fimuls
push
aas
mov
and
cmp
cld
jecxz
sbb
or
push
mov
ljmp
dec
hlt
sub
cmp
adc
enter
cmp
pop
insb
or
adc
subl
imul
enter
loop
jp
lods
out
jl
xlat
iret
mov
in
jge
fldcw
push
mov
imul
cwtl
aam
fnstsw
ja
pop
cli
jp
xchg
test
inc
sbb
out
imul
or
pop
dec
outsl
dec
sub
xchg
mov
cmp
pop
sub
pop
add
lcall
and
mov
rclb
inc
jns
push
and
jo
mov
add
ret
mov
popl
cld
adc
xchg
inc
mov
out
outsl
mov
decb
sbb
outsb
das
inc
add
mov
adc
cmp
addr16
test
mov
test
push
aas
lahf
or
push
mov
insl
shrb
loopne
scas
cmp
jle
push
pop
in
in
mov
and
cmp
mov
cs
outsb
sub
lea
popf
push
push
pop
xor
mov
fucomp
js
aas
int3
or
packuswb
mov
ja
xor
orl
sub
dec
and
and
inc
ficompl
stos
scas
jle
pop
into
insb
cld
jge
mov
push
out
das
and
rclb
in
jle
xor
outsb
insl
mov
sti
ret
or
iret
xor
lahf
or
or
add
cmp
jle
shrb
sub
mov
aad
lahf
adc
popa
std
pop
shl
push
fucom
adc
orl
sub
ljmp
pop
adc
insl
lahf
loope
mov
adc
and
inc
fs
out
add
and
mov
pop
out
sar
outsb
ds
in
mov
mov
xor
inc
out
pop
cmp
fistpll
pop
stos
xchg
outsb
inc
pushf
fnstsw
push
add
adc
dec
jl
std
xchg
add
pop
pop
out
lods
aas
mov
pop
dec
add
inc
cmp
addr16
push
lock
add
cmp
dec
xchg
add
iret
xor
sti
rcl
push
mov
and
movl
popf
mov
mov
jge
out
mov
push
adc
lock
aas
addr16
sbb
mov
in
iret
jmp
mov
js
out
testl
aas
iret
inc
xor
jmp
mov
jge,pn
daa
jl
pop
dec
js
pop
scas
cs
pop
aaa
out
jmp
jae
mov
divl
jge
or
inc
and
adc
lret
inc
adc
clc
imull
add
cmp
icebp
add
mov
jle
mov
sub
outsb
jg
orb
ds
cmp
filds
pop
pop
aaa
das
add
mov
mov
filds
loope
cmc
outsl
jecxz
push
mov
inc
sub
shlb
sbb
insb
dec
inc
ds
inc
add
mov
sub
in
inc
jmp
loopne
or
das
fucom
addl
cmp
outsl
repz
repz
das
lret
std
add
and
cmp
xor
cmp
xor
pop
jno
pop
rcrb
lods
js
mov
add
in
insb
mov
cld
mov
in
and
push
jle
lock
pop
xor
ds
out
addr16
rclb
in
xor
add
imul
gs
push
repz
push
cs
dec
sti
lahf
js
insb
cmp
dec
pop
or
into
xor
shlb
xor
xchg
push
lods
mov
jmp
cmp
xor
push
iret
cmp
pop
lahf
or
paddd
push
bound
xchg
inc
push
ds
add
jl
lods
outsb
pop
out
hlt
mov
jmp
or
decb
or
pop
aaa
and
ss
jle
or
je
int
pop
add
inc
dec
cmpsb
adc
outsb
pop
mov
xor
lock
addr16
dec
pop
jmp
adc
lahf
inc
jg
pop
cmpsb
in
push
cld
lods
or
dec
in
pop
push
lods
and
test
lahf
add
jmp
test
push
jns
das
xchg
push
mov
mov
pop
push
sbb
or
jno
pop
stos
sbb
mov
cmp
cwtl
prefetch
or
cmp
sbb
sbb
cmc
mov
cmpsl
repnz
popa
js
or
push
es
data16
xor
push
jl
hlt
in
ds
ds
aaa
or
dec
in
mov
jg
insl
in
and
jecxz
repnz
sbb
mov
jle
adc
addl
inc
outsl
lea
fs
xchg
sub
repnz
jmp
xor
mov
insb
push
jmp
test
add
jg
lea
push
jle
ds
push
repz
inc
mov
enter
daa
push
sub
mul
fidivl
jmp
inc
mov
lock
dec
outsb
popf
pop
lods
push
pop
dec
das
std
shll
adc
pusha
dec
int
iret
pop
jge
int
cs
lds
int3
in
pop
dec
sub
shrb
inc
push
rclb
loopne
stos
sub
repz
addr16
in
mov
dec
dec
inc
out
jae
popf
dec
insl
lods
xchg
xor
aas
mov
js
push
sbb
dec
inc
adc
or
decb
push
sbb
or
lods
mov
xor
insb
outsb
mov
dec
xchg
and
int
push
ss
out
add
fisttps
aas
call
sbb
stos
lret
and
xor
push
inc
call
push
in
cmp
xor
and
addr16
repnz
xor
scas
aas
orl
out
dec
or
xor
ds
outsb
pop
fistpll
sbb
inc
xor
pop
jmp
xorb
fistl
adc
rcll
xchg
int3
notl
stos
xchg
loop
cmp
dec
jmp
out
mov
sub
gs
pop
lods
add
clc
stos
cmp
outsl
out
int
pusha
aas
sub
push
mov
dec
pop
xor
jnp
sbb
dec
mov
out
call
scas
sbb
and
xor
add
fst
ucomiss
or
add
jl
inc
and
insl
test
pop
decl
jle
incb
push
inc
out
adc
popf
je
inc
addr16
scas
insl
xlat
andl
popa
pop
add
fstpl
push
cmp
dec
roll
jge
pop
imulb
outsb
pop
lds
mov
jge
shr
pop
push
mov
subb
adc
movsl
mov
sub
push
aas
punpcklwd
call
jl
dec
insl
repnz
mov
popl
hlt
mov
push
pop
pop
mov
arpl
sbb
adc
lret
jmp
add
push
and
rcrb
xchg
insb
shlb
lahf
outsl
dec
std
repnz
mov
adc
push
sbb
cmpsb
repz
sti
jmp
cld
mov
js
int
sarl
outsl
iret
adc
ficoms
in
les
inc
icebp
or
imul
cld
shlb
xlat
mov
jbe
int3
das
jle
std
xchg
out
stos
cs
pop
xor
xchg
lods
rcll
shrl
sbb
push
adc
jmp
inc
add
call
outsb
push
cmp
pop
stos
xchg
popa
aas
mov
js
lcall
add
and
bound
incb
or
sbb
sbb
adc
xor
push
push
push
pop
jns
flds
fstpt
sarb
aas
and
and
out
pop
push
mov
jecxz
int
std
fdivr
fnsave
fistps
outsl
sahf
add
in
cmp
mov
outsb
call
pop
dec
popf
adc
sbb
sbb
repz
cmp
fistps
out
outsb
dec
lret
hlt
push
inc
push
add
mov
xchg
cmp
xor
xchg
jns
push
outsl
xchg
cs
jmp
xchg
hlt
push
mov
adc
xlat
hlt
push
insl
das
add
pop
fstpl
lea
dec
outsb
cmp
in
mov
cmpsl
test
mov
loop
out
xor
fildll
mov
dec
in
pop
lea
push
lods
hlt
cmpsl
dec
dec
out
push
cmp
ret
adc
mov
mov
push
lahf
das
lods
mov
popf
loop
lret
fdivl
sbb
dec
mov
jge
cmp
das
mov
xor
lea
jnp
cld
sub
cmp
push
loop
dec
push
pusha
outsl
pop
xor
dec
pop
dec
lahf
bound
cwtl
sub
addr16
hlt
pop
mov
imul
xor
int
sub
cmpsl
lret
jge
ljmp
adc
cs
ret
jmp
lea
stos
dec
cld
push
lcall
push
mov
outsb
ja
cwtl
xor
add
xor
shll
out
inc
or
aam
dec
xlat
adc
inc
cmp
cmp
sarl
ret
std
int
rorl
jl
sbb
add
outsb
pause
push
jmp
shrd
pop
pusha
decl
pop
test
or
aaa
in
xchg
outsl
pop
inc
xchg
sbb
jae
cs
add
pusha
dec
scas
icebp
aas
adc
mov
cld
adc
push
lock
pop
lods
cmp
xor
lcall
in
sbb
lds
push
outsb
scas
sti
pop
cld
inc
prefetch
mov
pop
iret
ror
popf
dec
movsb
xchg
adc
mov
mov
push
pop
and
cmp
int3
sbb
in
push
es
repz
jl
in
jge
lods
sbb
push
sbb
popf
cmp
dec
mov
outsl
dec
std
ss
loope
mov
sarb
and
xchg
insb
ja
insl
addr16
mov
push
ljmp
adc
mov
das
popf
pop
aas
push
dec
cltd
mov
lahf
std
inc
int3
mov
and
repz
and
out
jecxz
gs
sbb
aas
dec
lahf
push
adc
or
fs
mov
add
loope
sbb
lea
mov
jbe
jae
xorb
pop
call
pop
jmp
rcrb
pushf
js
popf
sti
repnz
push
dec
ror
out
decb
inc
ds
sbb
sub
lret
std
pop
int
inc
faddl
push
sbb
pop
sub
enter
push
jae
jge
and
cs
xchg
mov
mov
repnz
movsl
mov
out
lret
mov
lcall
hlt
int
pop
decl
addr16
in
mov
js
jae
fbstp
inc
dec
scas
xor
add
mov
rolb
repz
test
lahf
ds
aas
push
xchg
outsb
cs
rorb
shrb
out
dec
repz
std
int
out
fstl
jecxz
fistps
sbb
push
test
dec
mov
lcall
nop
xchg
neg
repz
outsl
fisubrs
aaa
or
or
fisubrs
iret
inc
pushf
mov
lods
and
stc
sub
out
movsb
sbb
dec
dec
inc
mov
jae
enter
and
jecxz
xor
mov
mov
and
inc
dec
sahf
sarl
lods
adc
das
or
hlt
ljmp
push
mov
fs
add
in
sbb
stos
pop
js
dec
pop
repz
xbegin
lret
ds
jbe
hlt
enter
sub
push
dec
outsb
cs
test
inc
enter
jmp
cmp
fnsave
jg
jle
jge
out
adc
mov
hlt
push
push
mov
into
jg
in
xor
call
mov
xchg
mov
mov
cli
out
insb
push
dec
pop
pop
push
mov
je
es
mov
xor
pop
mov
mov
or
je
mov
insb
mov
popl
mov
loop
into
loope
and
sub
pop
and
sahf
dec
xchg
push
adc
add
lret
push
mov
inc
mov
nop
add
or
addr16
setl
adc
mov
jno
sbb
addl
adc
push
aas
inc
lret
push
mov
xchg
add
repz
mov
lods
mov
add
in
iret
sbb
out
add
mov
mov
dec
aaa
dec
outsl
push
iret
or
dec
std
xor
jecxz
dec
or
mov
lods
stos
mov
mov
mov
or
mov
sbbl
iret
mov
rol
test
orl
movsl
repz
xchg
pop
adc
das
pop
es
add
divps
out
sbb
mov
cwtl
or
fists
pop
cmp
out
out
outsb
js
cmp
jmp
xor
adc
test
int
pushf
push
aam
outsb
dec
dec
lock
mov
push
jecxz
hlt
ss
je
push
mov
insl
sbb
and
shrl
int
cmp
aad
or
dec
insl
stos
sub
pushaw
aas
sub
fs
inc
mov
dec
in
test
jp
jle
psllq
adc
push
push
pop
lahf
mov
popa
lea
jle
push
mov
in
or
ds
ffreep
inc
mov
fnstenv
jge
inc
test
jge
ljmp
dec
mov
sbb
push
cmp
clc
cld
pop
sub
push
scas
pop
inc
mov
loope
insb
sbb
pop
lods
dec
aas
xorl
mov
pop
mov
cmp
iret
fstpl
in
dec
ds
jmp
fnstenv
stos
dec
fdivrl
repnz
lods
mov
js
int3
mov
pop
out
add
repz
fldcw
loop
call
fcmovu
lock
out
jle
adc
in
sbb
punpckhdq
pop
and
ss
or
xor
inc
stc
or
test
and
std
shlb
insb
cltd
lret
adc
adc
outsl
ds
push
shrl
jae
insl
mov
or
mov
pop
js
shll
sub
clc
int3
int
push
mov
inc
test
push
je
xlat
ljmp
xor
mov
mov
push
mov
adc
sub
jl
push
ss
ret
aam
jae
scas
dec
mov
int3
mov
sbb
mov
xchg
gs
adc
add
or
push
or
sub
int
sub
or
or
and
adc
pushf
and
dec
jl
pop
push
fsubrl
out
xchg
adc
cltd
push
pop
mov
or
mov
inc
push
dec
mov
jae
inc
fdivl
cmp
int3
and
and
int
leave
or
and
cmp
mov
leave
test
rcll
and
sub
and
or
inc
mov
jmp
sti
jno
ljmp
or
mov
idivl
movsl
mov
fistps
insl
sub
fstpt
adc
xlat
sub
cs
sub
sub
cmp
daa
insb
mov
scas
loope
loopne
sub
jae
push
push
outsl
adc
inc
fsubrs
add
sbb
sbb
pop
lods
xchg
inc
cwtl
cmp
jmp
imul
cmpsl
adc
in
je
sub
ds
mov
xchg
cld
aas
push
inc
int
lods
or
push
xor
mov
aas
outsl
stos
jmp
fdivr
jmp
out
dec
lods
rcrb
in
xor
pop
fnsave
in
push
out
jecxz
jg
outsb
lock
fistps
popf
decb
pop
and
iret
out
mov
and
mov
lahf
pop
xor
mov
add
cmp
mov
aas
loopne
daa
cmp
je
lea
dec
lods
push
inc
clc
stos
push
insb
dec
pop
in
sbb
test
movsb
inc
out
push
mov
loop
push
fstl
cmp
jmp
xor
imulb
test
cmp
mov
into
imul
bound
fs
jg
push
lea
add
nop
or
lds
enter
pop
push
repz
ficompl
pop
jne
xchg
out
add
sbb
xor
xchg
fistps
cmp
mov
stos
mov
loope
repz
pusha
imul
fidivrl
mov
fildll
call
je
mov
or
mov
out
dec
inc
inc
push
mov
stos
adc
xor
ficoms
das
mov
mov
mov
fmull
mov
sub
enter
test
push
mov
dec
jae
insl
add
outsb
cwtl
lods
das
cltd
sbb
dec
nop
ret
pop
aas
insl
lahf
adc
or
pop
loopne
imul
sub
sbb
cmc
mov
std
ds
sub
cld
cmovne
pusha
or
pop
js
xchg
std
lcall
movsl
aas
pop
mov
scas
add
pop
mov
test
addr16
sub
push
pop
adc
inc
fistl
mov
lods
ret
pop
jbe
jmp
int
sub
out
cwtl
pop
lods
sbb
lods
push
iret
lea
aam
out
sub
in
divl
dec
pop
jg
inc
xchg
insl
js
mov
and
pop
mov
mov
cld
and
xlat
jg
insb
pop
imull
std
inc
das
cmp
aad
lcall
mov
ds
jo
mov
setg
mov
pop
and
or
push
pop
cmp
clc
insl
loopne
in
jns
jo
or
add
rorb
loop
dec
mov
je
in
or
cmp
in
pop
sub
arpl
adc
clc
inc
ds
out
orb
push
cmp
push
mov
sub
inc
cmpsl
inc
add
jmp
pusha
cltd
mov
das
and
cmp
or
aam
mov
add
push
sub
iret
jmp
jg
lods
pop
div
sbb
decl
mov
mov
imul
mov
aad
ss
rol
repz
int
push
addr16
sbb
fcoms
push
outsb
scas
or
das
or
addr16
fwait
xor
xchg
mov
popa
or
push
pop
pop
outsb
scas
or
fwait
xchg
sub
mov
adc
add
iret
jecxz
inc
xchg
mov
int
repz
adc
push
imull
ds
jge
xlat
mov
sbb
ds
lods
mov
jecxz
inc
out
cmp
dec
adc
std
das
sbb
sub
gs
xor
jge
jle
scas
push
stc
loope
pop
adc
jp
insl
inc
ds
into
movsl
inc
dec
push
dec
xchg
and
mov
in
mov
fadds
sbb
xor
mov
add
push
xchg
pop
or
mov
or
push
mov
aad
gs
sbb
sbb
adc
or
pop
pop
sahf
push
inc
mov
push
dec
mov
addr16
pop
lahf
mov
stos
cmp
jle
jle
jecxz
sub
adc
push
lods
adc
push
pop
add
out
mov
mov
push
mov
iret
inc
push
pusha
jle
lea
or
pop
dec
mov
int
xor
insb
lea
lahf
clc
inc
sub
mov
out
and
mov
xor
outsb
stos
push
mov
xor
sbb
mov
or
adc
jns
or
mov
add
sbb
iret
in
sahf
vmread
xor
and
rolb
das
pop
out
sbb
mov
mov
pop
xlat
jl
sub
inc
lods
pop
es
mov
push
lahf
xchg
dec
mov
mov
xor
movsl
mov
pushf
daa
lea
in
subb
jns
loope
jl
mov
outsl
push
jmp
enter
mov
cld
pop
sbb
and
xor
jnp
push
std
or
mov
scas
stc
mov
outsl
stos
scas
paddusb
stc
mov
add
mov
stos
rcl
sub
int
ret
mov
add
fs
pop
push
pop
and
xchg
dec
jecxz,pn
mov
mov
jcxz
leave
loopne,pt
jne
outsl
outsb
push
xor
dec
push
cmp
xchg
push
jmp
mov
loope
insb
jecxz
push
popf
and
push
addr16
cs
pushf
sbb
sarl
push
pop
addr16
sub
hlt
add
jg
mov
mov
roll
cmp
pop
sub
add
rcpps
jl
xlat
popa
dec
sub
lods
outsl
fisttps
and
pop
mov
or
push
adcb
aas
mov
addr16
pop
push
cs
std
loopne
aam
push
dec
pop
mov
push
mov
ljmp
popa
adc
or
lsl
inc
lds
sub
jg
and
dec
sub
xlat
add
xor
pop
enter
js
add
repz
push
decb
roll
mov
call
jl
add
pop
mov
cld
aad
hlt
popf
cmp
jecxz
xchg
stos
ja
mov
or
push
rcr
add
insl
insb
push
rcr
loop
inc
inc
jmp
or
inc
cmpsb
repnz
jge
pop
enter
lahf
pushw
ljmpw
call
fisubrs
repz
jb
icebp
pop
push
adc
scas
mov
aas
push
sbb
into
fcomip
xchg
dec
push
test
mov
mov
outsl
push
nop
repz
ds
sbb
sar
fs
mov
adc
mov
shrb
sub
sub
fstpl
and
cli
loopne
rolb
cld
fldl
mov
lret
sti
sub
dec
negl
outsl
sbb
lret
inc
xchg
lea
fiaddl
test
jl
or
sub
push
pushf
jns
out
push
out
dec
enter
inc
or
inc
jno
inc
clc
js
outsb
mov
popf
inc
add
push
xor
add
not
mov
ret
pushl
mov
std
mov
or
sub
dec
icebp
insl
jge
xchg
cli
outsb
mov
cli
sbb
sbb
outsl
inc
cli
mov
cmp
dec
and
das
aas
mov
mov
and
inc
pop
sub
ret
jge
pop
add
iret
mov
pop
aas
mov
aaa
cmp
fistl
test
stc
cmp
leave
cmp
sbb
lods
pushf
out
ds
mov
dec
lods
adc
shrb
pop
ss
int3
decb
add
dec
pop
and
or
sbb
adc
cmp
adc
sbb
fildl
clc
jmp
aaa
int
jo
testl
push
push
aaa
neg
cmp
das
insl
fstpl
fdivrl
sub
shl
std
xchg
ds
addr16
out
dec
push
scas
mov
enter
dec
out
sub
iret
pop
fisttpll
and
add
jge
jmp
push
and
fistpll
add
jle
iret
mov
or
mov
or
mov
js,pt
cmpsl
adc
push
inc
jge
jg
pop
xlat
mov
das
popa
ret
stos
movsb
push
insb
sbb
outsl
in
inc
cs
or
adc
push
add
and
loope
inc
push
out
adc
sahf
sti
fstl
inc
das
adc
sbb
xchg
aas
jns
push
dec
comiss
div
adc
mov
outsb
push
insl
mul
adc
ss
mov
in
testb
push
lret
or
add
bnd
adc
out
iret
pop
dec
sbb
stos
cmp
xchg
outsl
xlat
inc
pushf
insl
adc
jmp
dec
mov
int
sbb
jge
mov
push
cmp
mov
clc
mov
mov
sub
fsubrl
loope
jg
arpl
stos
push
sbb
and
jae
in
imul
cmpsl
mov
shlb
cmp
jb
sbb
jmp
imul
js
push
sarl
outsb
std
jo
outsl
jo
das
in
ds
loop
test
out
add
sbbb
or
enter
stos
xor
sbb
adc
or
push
dec
in
sbb
inc
jecxz
jge
call
fwait
sbb
nop
adc
jb
xor
dec
addr16
lods
bound
cmp
adc
mov
adc
push
add
rcrb
dec
out
adc
mov
shrb
movsb
mov
add
sbb
nop
and
jns
and
cmp
pushf
shrb
lods
jbe
outsb
and
push
cld
pop
insl
mov
addb
mov
aam
in
push
hlt
ss
add
dec
mov
leave
xchg
insb
jg
ret
cmp
out
js
lahf
sbb
mov
xor
jg
dec
in
clc
iret
jl
int3
sub
arpl
add
int
mov
sub
hlt
push
and
scas
fdivrl
mov
icebp
jnp
cld
and
enter
xor
les
insb
rclb
mov
std
push
xlat
fnstenv
testl
xor
mov
stos
adc
lahf
mov
ljmp
imul
push
xor
mov
pushf
xor
mov
and
ja
jo
bound
push
sbb
adc
jl
in
lods
cs
in
repz
xor
mov
inc
ljmp
mov
dec
mov
pop
and
cmpsl
xchg
cmpsb
jne
sbb
pop
or
mov
outsl
pop
or
sar
pop
mov
mov
into
sub
out
xor
push
cmp
sahf
push
jmp
sub
nop
adc
cmp
xor
or
pusha
addb
cli
and
adc
in
sub
mov
lahf
fwait
push
xor
dec
lcall
sub
or
push
sbb
fucom
repz
pop
jo
daa
out
lea
rcll
insl
push
mov
pop
outsb
mov
mov
in
adc
js
cmp
sbb
hlt
adc
dec
hlt
pop
pop
lods
mov
cmp
enter
ljmp
jmp
push
xchg
outsb
stos
test
pop
sar
popa
add
shrl
lods
test
adc
icebp
fsubrs
data16
push
lret
addr16
dec
ficompl
jne
mov
cmp
or
ja
sub
pop
cwtl
sti
loop
out
sbb
jle
dec
pop
int
and
or
push
pop
mov
mov
inc
or
pop
jae
lods
outsl
xor
inc
pop
dec
arpl
mov
stos
sub
ret
push
mov
push
or
push
mov
pop
pop
mov
ljmp
sahf
xor
xchg
lock
dec
insb
decl
mov
inc
gs
ret
cli
movsl
cmp
xor
call
arpl
test
fucomp
stos
scas
xorb
arpl
mov
xor
adc
sub
jmp
fadds
add
pop
xchg
xor
mov
adc
enter
cwtl
or
jno
push
adc
iret
aas
inc
mov
xor
mov
mov
out
xor
popf
adcl
cld
jp
js
xor
adc
repz
push
cwtl
add
push
push
sub
xor
lea
out
mov
les
adc
sbb
pushf
fcmovu
roll
mov
outsl
or
push
xor
scas
lods
lods
sbb
xor
ja
adc
repnz
xor
push
add
sub
add
push
fstpl
xlat
shrb
jae
inc
addl
int
push
ret
and
outsl
stos
sbb
adc
push
mov
lea
repz
fistpll
movq
call
test
inc
push
das
add
repz
test
mov
cmpsb
mov
pop
aad
icebp
sub
sbb
rcrl
sbb
mov
push
and
push
shr
scas
in
cmp
push
add
call
and
mov
pop
fcmovnu
movsl
repz
mov
or
push
lods
lds
dec
sub
lea
xchg
add
push
xchg
incb
decl
out
shll
repz
cmp
aam
mov
xlat
mov
xchg
mov
stos
or
dec
outsl
mov
clc
sbb
mov
mov
adc
lods
movsl
outsb
int
jmp
movq
sbb
lock
cmp
cmp
outsb
inc
out
cld
mov
repnz
popf
std
je
fmull
cmpsl
mov
xor
mov
inc
or
ja
adc
push
dec
mov
cs
mov
mov
sbb
pop
pop
sub
mov
lods
jnp
cmpsl
add
pop
push
sbb
and
pop
xchg
cmp
sbb
out
inc
inc
shr
jg
inc
pop
jbe
xchg
dec
subl
pop
sbb
xor
pop
decl
or
call
or
jg
sbb
ja
pop
sub
push
hlt
lods
jl
push
popf
push
mov
lods
push
xor
push
mov
xor
pop
popf
dec
aam
xor
dec
pop
ja
outsb
and
mov
test
daa
sbb
mov
cltd
cld
les
push
shrb
and
insl
lods
push
add
fcmovbe
push
push
adc
mov
fisttpll
ljmp
jae
mov
inc
imul
jae
pop
pop
je
xor
xor
insl
mov
stos
mov
jg
mov
in
int
or
mov
and
loop
dec
fdiv
jb
clc
ja
popf
or
das
cld
outsb
adc
repz
jg
lahf
or
mov
dec
xchg
push
int
std
pop
xor
adc
test
enter
sub
pop
int
dec
lret
dec
decl
cmp
mov
xchg
cmp
fs
je
int
pop
mov
mov
jns
pmaddwd
lock
pop
or
xor
mov
sub
sti
push
push
in
add
das
add
mov
pop
imul
mov
call
fwait
push
inc
inc
mov
push
stos
pop
or
fcomi
ficompl
dec
jg
and
cmpsb
xor
xchg
in
sub
clc
cltd
insl
jg
push
dec
jge
mov
dec
and
std
scas
jne
aad
and
nop
jae
push
cmp
adc
sbb
cmp
ljmp
mov
dec
dec
pop
lea
adc
pop
push
out
insb
or
inc
push
sarl
add
mov
fildll
jecxz
xor
push
jne
pop
dec
test
shrb
lret
push
insb
fcoms
push
outsb
inc
pop
nop
xor
or
push
inc
and
adc
in
jle
mov
push
jge
int3
addr16
adc
test
out
or
jl
pop
sbb
sbb
popf
inc
and
add
cld
jg
call
std
jae
pop
fs
popf
xchg
js
cmp
push
dec
les
mov
pusha
pop
jge
or
push
fiaddl
insl
mov
pop
inc
jl
imul
jb
or
in
mov
ret
nop
sub
int
jl
dec
jb
push
outsb
iret
ss
adc
test
inc
lods
adc
dec
test
es
filds
daa
shrl
mov
std
add
jge
and
sub
scas
aas
rcrl
ror
push
pop
test
das
xchg
sub
and
xchg
pop
or
xor
mov
js
fs
mov
adc
loope
inc
mov
shl
sub
ja
outsl
xor
subl
xchg
lds
imul
loopne
push
out
jg
incl
xor
stos
mov
sbb
test
aam
mov
xor
mov
call
or
shrb
add
inc
incb
dec
mov
add
das
xor
push
jle
jle
fdivrs
shl
in
imul
pop
push
movq
jg
pop
jmp
std
aam
je
dec
push
push
mov
sub
stos
pop
dec
enter
mov
inc
xchg
aam
insl
push
push
inc
fdivl
sub
outsb
sbb
lods
push
sarl
sbb
cld
and
dec
out
mov
adc
cmp
mov
and
xchg
cwtl
roll
dec
iret
rolb
sub
lea
adc
inc
dec
aas
mov
adc
clc
pop
jo
inc
sbb
seta
insl
sbb
das
sub
into
pop
stos
and
inc
inc
dec
aas
and
adc
push
das
xor
loope
adc
lods
int
dec
adc
xchg
or
add
in
jbe
subl
dec
push
mov
dec
push
fwait
clc
test
fstl
sbb
pop
push
repnz
js
lret
loop
outsl
push
js
in
sub
jo
std
cs
push
fcoms
dec
js
insl
push
pop
push
dec
mov
mov
mov
scas
iret
dec
jmp
outsb
push
bound
dec
add
cmp
mov
lock
das
lahf
pop
push
cmp
pop
in
nop
sub
xchg
mov
xlat
inc
inc
pop
xor
and
sbb
and
shrb
jle
inc
mov
jg
cmp
jo
subl
and
jle
int
jmp
push
xor
pop
sub
outsb
femms
inc
jl
jae
inc
mov
inc
ds
sbb
aas
out
and
pop
rep
lahf
mov
mov
mov
gs
add
in
sbb
popf
testb
add
xchg
jecxz
sbb
insb
shr
pop
iret
test
xor
or
jo
cld
hlt
and
sbb
daa
addb
mov
push
movsb
add
mov
flds
rolb
dec
or
and
push
push
std
add
outsl
call
cmp
pusha
add
std
pop
cld
loopne
cmpsl
xor
sbb
mov
int
push
adc
iret
notb
push
fistps
fs
cmp
movsl
mov
nop
jle
loope
out
sub
jg
cmpsl
or
dec
mov
outsb
stos
pop
cmc
cmp
int3
lods
mov
call
fsubrs
arpl
jle
addr16
add
inc
pop
pop
iret
out
xchg
shrl
int
insl
outsb
dec
sub
pop
push
sbb
add
add
mov
mov
jl
das
jmp
adc
sarl
lret
inc
cmp
call
xor
inc
inc
mov
ret
pop
cmp
pop
shr
popa
bound
dec
loop
repz
mov
pop
sbbb
fs
or
es
adc
lods
cmpb
push
mov
ret
imul
jne
lock
pop
lahf
jge
mov
cld
or
jge
pop
jns
push
jne
jle
mov
lods
aas
sbb
or
bound
jmp
cmp
movsl
mov
add
or
inc
lahf
repnz
pop
loopne
sahf
push
sti
mov
adc
mulb
jecxz
in
lahf
mov
xor
movsl
loope
xor
or
sub
repz
jge
mov
dec
loopne
popf
cmc
fidivrl
pop
pop
mov
cmp
push
pop
sbb
xorl
add
cmc
repz
imul
jge
fisttpll
xchg
sub
cmp
js
lods
adcl
mov
jle,pt
stos
sub
xorb
std
xchg
or
or
out
cmp
cmp
ret
fstpl
test
pop
push
jle
add
jg
popf
add
xor
pop
dec
sub
fs
neg
ja
rorl
jecxz
fs
push
fists
sbb
jle
inc
dec
jecxz
fldt
daa
ljmp
mov
and
out
decb
js
mov
adc
orl
and
repz
push
jecxz
and
pop
jg
push
xchg
push
ljmp
sub
jmp
inc
ljmp
mov
iret
cmc
filds
pop
js
outsl
fcoml
leave
mov
dec
sahf
or
dec
std
mov
xor
sub
jae
mov
mov
cli
push
or
mov
in
adc
mov
leave
test
rclb
pop
jns
popf
sbb
sub
push
lcall
mov
mov
sbbl
insl
dec
mov
push
mov
loopne
dec
add
js
xor
ljmp
je
jmp
scas
insb
dec
int
add
jns
repz
popa
scas
fwait
loope
dec
frstor
dec
inc
ljmp
arpl
popf
or
add
mov
out
repz
push
lret
add
std
or
out
jo
sub
ror
push
in
ja
mov
std
mov
arpl
repz
int3
lahf
movsb
sbb
mov
mov
call
iret
jae
cmove
loopne
fs
int
push
adc
jo
mov
push
push
sbb
mov
clc
mov
inc
jge
pop
pop
sbb
fldl
fistpll
mov
cmp
pop
mov
jb
push
iret
or
rcr
insl
out
mov
or
cld
das
call
and
xor
inc
leave
xor
push
push
xchg
cmp
lea
adc
insl
jg
adc
push
or
fiaddl
aas
pop
dec
pop
xrelease
sub
cs
and
clc
es
or
inc
divl
sub
sbb
jle,pn
inc
mov
cmp
test
push
sbb
mov
fisttps
adc
lcall
hlt
lds
pop
adc
sbb
ljmp
outsb
fnstsw
cmc
mov
pop
hlt
rcll
insl
push
and
inc
insl
xor
jl
cs
pop
es
xchg
loope
pusha
in
pop
jge
pop
das
dec
js
pusha
dec
scas
sbb
mov
out
negb
lods
cmp
jl
sub
fsubrp
loop
mov
jb
mov
insl
das
mov
lods
mov
sub
iret
in
test
cmp
insb
insl
daa
mov
or
and
fnstsw
fisubrl
lods
sub
push
mov
lahf
repz
mov
in
loop
pop
sub
jnp
nop
pop
lods
add
sub
jbe
mov
cs
iret
adc
in
mov
test
das
mov
pop
sub
pop
xlat
loopew
adc
jecxz
inc
int
adc
or
out
pusha
lahf
aas
dec
or
mov
mov
out
std
fisttpll
call
outsb
insl
enter
inc
dec
pop
cmp
xor
mov
or
repnz
in
sub
mov
iret
jge
mov
jg
ljmp
das
scas
add
mov
xchg
pop
and
insb
bswap
loopne
lret
push
cmp
shll
insl
sbb
in
pop
jl
ds
dec
das
push
repz
iret
dec
and
sub
mov
mov
mov
mov
cmp
cmp
lods
sub
in
cld
jbe
jo
mov
mov
popa
pop
lods
or
sbb
sub
xchg
mov
in
pop
mov
dec
mov
popf
mov
iret
in
push
insb
push
adc
lea
pop
sbb
sbb
xor
and
stos
loope
popf
aam
fstpl
or
xchg
mov
cs
adc
mov
jl
lea
push
vmwrite
pop
rorl
or
leave
dec
loope
std
jg
mov
add
outsb
pop
dec
jle
add
xor
jmp
pop
cs
repz
daa
repnz
fcompl
mov
cld
sbb
gs
jmp
pop
fcomps
ljmp
enter
jmp
in
adc
repz
outsb
cs
outsl
fnstsw
outsb
roll
jae
into
insl
ljmp
ds
scas
fstp
sub
addr16
sbb
insl
inc
mov
push
push
mov
sub
push
cmp
mov
push
push
sub
subb
mov
sbb
adc
in
jl
xor
icebp
sub
jmp
mov
out
lock
setge
pop
jmp
xor
jg
lea
or
xchg
rcrl
jle
adc
dec
dec
outsb
cld
stos
jecxz
adc
cmp
sbb
mov
pop
mov
push
cs
dec
lea
mov
enter
lods
cld
jl
loopne
fs
push
push
outsb
ret
push
cs
and
scas
xor
sbb
scas
cld
iret
sbb
sbb
xchg
iret
sbb
pop
popf
daa
pop
in
pushf
leave
int3
dec
loop
mov
or
pop
cld
insb
frstor
in
adc
jmp
dec
add
mov
lahf
jle
and
gs
xchg
ss
lock
inc
cmc
push
jecxz
std
outsb
scas
sub
mov
fstpl
lock
cmp
fisubrl
fwait
inc
hlt
cmp
shlb
pop
in
jle
jmp
mov
out
mov
fsubs
insb
loop
sbb
iret
dec
sbbl
aas
xor
sbb
jecxz
mov
push
jmp
repnz
sbb
enter
pop
aas
lock
adc
push
jle
mov
mov
iret
mov
in
js
add
push
inc
stos
xor
cmc
lea
fistl
jle
dec
sbb
cld
inc
test
in
fisubrs
push
xor
or
mov
jmp
xlat
dec
test
ucomiss
inc
inc
lods
jmp
pop
fsubrs
inc
xor
aas
dec
adc
cmpl
pop
add
lods
out
pop
cmp
sarl
in
jb
xor
aaa
dec
js
adc
and
scas
pop
push
jae
out
adc
hlt
int3
das
adc
setl
jg
jmp
and
push
pop
push
imulb
lods
std
dec
insl
pop
mov
cltd
inc
push
ljmp
push
fucom
inc
pop
or
jg
mov
cmpsl
in
insl
out
pop
filds
sbb
std
outsb
scas
dec
or
ss
in
in
pop
push
lahf
push
xchg
loope
mov
das
mov
or
cmp
pop
filds
add
repz
sbb
dec
dec
push
push
xor
and
stos
mov
in
repnz
adc
insb
xorb
aaa
push
insl
push
outsb
xor
or
std
xor
enter
jns
xchg
sbbb
jb
fimull
adc
lods
jmp
xor
stos
fbstp
popf
outsb
adc
lock
dec
push
ret
cs
push
dec
mov
nop
in
push
dec
dec
xor
popa
push
mov
jl
push
sub
push
mov
repz
push
pop
decl
into
xlat
fistpll
sbb
adc
out
fsubrl
insl
or
push
jecxz
lods
cmc
rorb
xor
popf
mov
add
xor
sbb
sub
mov
jmp
outsb
push
lods
insl
popa
outsl
jo
push
add
repz
push
shrb
stos
inc
shr
fs
aas
add
rcr
dec
ds
mov
test
cmovg
push
fs
mov
out
xor
mov
rcrb
push
testl
inc
hlt
leave
adc
inc
je
ret
rcrb
fwait
add
dec
repz
or
pusha
mov
lret
ret
js
xor
lods
loop
aas
outsl
xor
call
loope
add
iret
les
mov
dec
push
push
inc
arpl
dec
cmp
fwait
xor
xor
stos
and
adc
fdivr
jno
sub
repz
or
sti
adc
loop
mov
mov
and
cld
xchg
jo
xchg
nop
mov
push
int
jmp
insl
jns
push
fprem
or
js
adc
addr16
pop
scas
adcb
je
shll
movsl
add
insl
std
int
pop
in
xchg
or
mov
jecxz
jbe
mov
int3
inc
out
pushf
aam
sarl
push
incb
add
xor
cld
jns
lahf
repz
insl
ret
outsl
repz
fistpll
sar
out
inc
pop
iret
xor
adc
int
movsl
or
out
fldl
scas
adc
pop
sbb
push
pop
push
faddl
mov
push
jae
push
sar
xchg
in
mov
fstps
mov
in
pop
dec
dec
push
jb
stos
lea
aas
push
jge
mov
clc
cwtl
xor
outsl
addr16
cld
xor
xor
out
in
loope
xchg
push
sub
jno
lods
aas
imul
xor
outsb
or
ja
mov
sbb
imul
lahf
stos
mov
lock
jl
push
into
pop
or
push
push
add
or
scas
das
pop
js
aam
or
incb
dec
out
sub
out
outsb
jmp
jo
xchg
sbb
adc
push
shll
sub
mov
dec
fnsave
setg
inc
js
or
jl
mov
push
inc
sbb
mov
xlat
in
enter
lahf
repz
test
add
push
pushl
add
pop
inc
pop
pop
sub
sbb
aas
int3
mov
jecxz
insb
sub
xor
mov
das
jle
xchg
xor
stos
test
lea
mov
orb
int3
test
out
add
pushl
cmp
jg
cld
mov
xchg
adc
test
ds
push
insl
adc
in
iret
inc
in
xor
mov
push
pop
fnstsw
or
sbb
jle
hlt
lret
cmp
pop
jg
xor
loope
dec
fcoms
add
pop
nop
pusha
cs
or
loopne
into
sbb
std
outsl
sub
mov
add
dec
add
sbb
icebp
xlat
mov
jl
mov
popf
stos
xor
pop
pop
outsb
mov
outsb
or
xor
fdivrl
inc
sub
xrelease
dec
sbb
popw
add
xchg
outsb
fwait
jb
jmp
pop
push
lahf
sub
add
cmp
pop
idivl
push
cli
inc
repnz
adc
jmp
iret
sbb
out
je
shlb
lcall
in
mov
push
jmp
scas
sbbl
pop
adc
add
insl
cld
imul
sbb
verw
sbb
sbb
mov
dec
pop
push
or
in
sub
inc
das
xor
dec
inc
stc
orb
addl
popf
outsl
je
mov
cli
popf
push
sub
dec
mov
jo
cs
insl
push
and
cmp
int
mov
outsb
negb
pop
leave
jo
sub
ficompl
addr16
addr16
adc
adc
sub
pop
dec
cs
jl
pop
cld
or
adc
mov
outsb
push
cmc
loope
addr16
cmpl
mov
addr16
lea
mov
test
inc
mov
jns
and
repz
adc
inc
mov
incb
cmp
fstl
shrl
xchg
jae
jo
jmp
mov
push
pop
fdivl
adc
or
mov
adc
pop
in
pop
js
add
int
push
push
repz
mov
mov
js
shlb
outsl
pop
repnz
std
dec
mov
mov
cmpsb
mov
mov
xor
lods
xor
mov
cmc
fnstsw
decb
cmp
push
mov
stos
xor
lahf
in
shlb
sbb
pop
loop
orl
insl
mov
mov
outsl
push
push
cmpb
jecxz
adc
mov
pusha
xor
loopne
cmc
push
mov
xor
js
mov
loope
out
push
adc
pusha
and
pop
ficoml
inc
int
pop
add
sbb
sbb
add
cmpb
shrb
push
insl
pop
icebp
mov
or
add
sti
orps
mov
adc
dec
jp
cmp
insb
movsb
or
or
ficomps
cli
lahf
fsubl
sbb
ja
jl
repz
mov
xor
mov
ljmp
xor
negl
je
loop
mov
call
jg
add
pop
fimull
mov
loop
jmp
sbb
pusha
ret
xchg
add
rorb
sub
push
mov
jae
shrb
pop
pusha
call
movsl
loope
xchg
or
je
cmpsb
push
push
pop
fistps
lret
pop
adc
pop
test
popa
aas
addl
std
mov
insb
jg,pt
dec
outsl
lret
and
mov
pusha
cmovg
jg
push
outsb
or
imul
xchg
enter
mov
insb
pop
ds
jbe
cld
pop
push
sbb
int
dec
shll
pusha
popf
jg
xchg
es
setg
bound
xor
and
dec
pop
je
ds
outsb
aas
and
outsb
jne
outsl
pop
lea
movsl
fstps
out
int
cld
jnp
lock
dec
jg
out
insl
push
sub
inc
ljmp
mov
adc
pushf
cli
aas
push
lock
push
pop
cs
stos
add
outsl
adc
in
cltd
movsl
loope
mov
mov
sub
xchg
dec
ficoml
push
push
pusha
or
lea
fs
fcom
push
adc
dec
push
hlt
into
insb
pop
mov
or
dec
pop
sbb
jle
pop
or
stos
push
shr
dec
insl
jecxz
mov
js
lock
cs
dec
enter
dec
popa
add
mov
cmp
mov
pusha
pop
cmp
gs
mov
push
push
xlat
add
jo
rorl
adc
xor
hlt
pushf
cwtl
pop
cld
add
sub
in
push
sub
test
je
mov
outsl
mov
scas
jmp
dec
xor
hlt
or
lods
das
and
out
inc
push
aas
fbld
cli
jmp
jae
push
stos
popa
nop
jmp
dec
jmp
out
xor
sub
lods
push
int
outsl
jge
nop
mov
mov
mov
mov
xor
mov
fisubrl
loop
or
dec
push
pop
add
outsl
push
sub
aam
adc
pop
outsl
call
insl
iret
xor
mov
cmc
inc
xchg
jne
pop
dec
sbbl
cs
and
sahf
ljmp
nop
xchg
push
pushf
ret
aam
cmp
shr
or
int3
jecxz
mov
sahf
jmp
sub
push
lods
hlt
aas
shrb
cmp
dec
das
mov
pusha
pop
scas
jge
pop
mov
mov
mov
iret
pop
shlb
mov
fs
push
and
cs
dec
pop
pop
imul
sbb
dec
rclb
push
sbb
jns
icebp
insb
mov
dec
mov
dec
push
popf
je,pt
cwtl
aaa
dec
lock
push
outsb
repz
push
push
xor
adc
push
dec
adc
and
stos
push
mov
mov
das
xchg
add
cmp
repnz
or
out
cmpsl
in
clc
xchg
sbb
bnd
je
mov
jmp
ljmp
mov
outsb
pop
cltd
inc
sarl
scas
or
push
cltd
insb
and
pop
push
repz
xor
pop
push
std
mov
xor
jle
cs
jecxz
mov
leave
xor
fidivrs
call
int
mov
das
pop
mov
sub
js
cs
push
popf
or
das
dec
mov
xor
and
cmp
addr16
xor
psrlq
addl
int
fs
loope
adc
push
sbb
sub
in
cld
js
sbb
cs
cld
cld
pop
cs
outsb
out
inc
cli
lock
xor
pop
insb
fst
mov
cmpl
jge
push
push
lea
ret
cmp
sub
lcall
outsl
je
pushf
js
mov
sub
lahf
lea
mov
fnsave
mov
insl
aaa
roll
int3
jns
pop
jle
int
pop
sbb
mov
xor
jecxz,pn
mov
out
clc
insl
inc
int3
divps
shrl
mov
xor
outsl
fistpll
hlt
jecxz
js
mov
jle
mov
popf
xchg
ds
adcl
ja
in
or
xor
or
inc
test
jle
inc
je
mov
xchg
fstl
sub
inc
cmp
int3
dec
jb
push
popa
pop
ss
leave
movsl
or
repnz
icebp
std
ljmp
push
lods
cmp
cmp
sub
mov
aad
mov
adc
pop
jns
dec
xchg
mov
clc
subl
inc
test
xor
sub
cld
es
fcoms
insl
jecxz
jae
in
iret
ja
subl
jmp
in
cld
push
outsb
mov
jne
xor
cld
shl
outsb
push
out
xor
in
in
xchg
mov
aas
sbb
pop
xor
cmpb
out
movsb
icebp
aaa
leave
and
sbb
aas
mov
jle
jg
push
adc
push
js
aam
xchg
ret
in
addl
adc
push
add
or
xor
lock
pop
adc
jg
fsubrl
fnstcw
movsl
jge
add
insl
call
and
mov
mov
push
divb
stos
lahf
ja
xor
xor
dec
push
aas
and
fs
inc
pcmpgtb
int
lret
push
imulb
in
add
or
int
mov
adc
cmp
mov
pop
pop
sbbb
xchg
dec
push
sbb
add
jmp
clc
testb
cmpl
leave
dec
mov
pop
inc
insl
xor
inc
insb
pushl
jl
std
clc
addr16
test
dec
pop
xor
fnsave
out
shll
pop
js
insb
bound
in
mov
pop
lret
stos
lock
cltd
adc
std
int
pushf
cs
sub
repz
pop
pop
aas
mov
cli
cmova
dec
repnz
addr16
jecxz
sbb
mov
add
notb
outsb
das
and
and
lods
iret
sub
and
cld
pop
pop
lods
incb
out
xchg
incl
pop
addb
sbb
pop
jp
sbb
js
fisubrs
push
xor
pop
or
stos
ds
in
sub
outsl
push
scas
xchg
fstl
pop
addr16
pop
loopne
cltd
std
push
pop
xchg
cld
jnp
outsb
out
pop
repz
mov
loope
sbb
xchg
push
lahf
test
pop
lods
jecxz
je
mov
fisttpll
lock
pop
mov
xor
and
pop
push
pop
inc
popa
outsl
fwait
sub
push
pop
std
jmp
jbe
dec
aas
jmp
cmpsb
pop
out
dec
xor
call
and
std
sub
xor
or
xchg
lods
lahf
pop
cld
xchg
sbb
xchg
mov
iret
cmp
dec
adc
and
mov
mov
jnp
dec
out
push
or
mov
push
lods
ret
inc
xchg
pop
lods
sub
insl
not
sub
dec
data16
dec
into
adc
pop
and
das
sbb
cld
pop
out
incl
lods
enter
or
jle
or
lahf
filds
pusha
push
cld
xor
pop
ds
outsb
pop
aaa
push
fs
push
pop
outsl
mov
mov
push
cli
fisttpl
movswl
sub
xor
cmp
pop
test
mov
repnz
aas
fimuls
sub
int
mov
orl
loop
lret
mov
mov
int
popf
jns
sub
add
mov
jo
push
jmp
xor
mov
sub
dec
lods
cmp
mov
insl
into
xor
and
dec
push
je
bsr
fnstsw
iret
std
das
mov
hlt
jo
scas
out
js
cmp
popf
fistps
sub
pushf
in
xor
call
push
sbb
mov
mov
cmc
add
jo
ret
jge
push
ds
stc
arpl
jl
out
and
por
nop
lea
sub
mov
jb
cmp
or
mov
xor
clc
pusha
pop
popf
inc
insb
adc
mov
and
jl
ljmp
loop
xlat
insl
aas
shrl
cmc
daa
jne
pop
jecxz
dec
in
pop
pop
and
and
loop
outsl
sub
sbb
ds
mov
jmp
repz
bound
jb
dec
cmp
sti
out
cwtl
jle,pt
cltd
lsl
shrl
ret
insl
push
imull
lods
stos
lret
add
cs
int3
mov
mov
js
mov
pusha
stos
ret
pushf
test
jbe
insl
int
into
fadds
jp
je
int
or
adc
aas
jb
insb
lods
addr16
push
push
jl
fxch
adc
loop
jns
or
ja
dec
dec
jl
add
cld
les
xor
mov
cltd
or
push
sub
lret
cld
xchg
imul
cmp
pop
int
xchg
sbb
or
jle
cmp
xor
std
outsl
in
push
inc
mov
push
insb
je
cmpl
fstpl
in
push
mov
test
int
mov
and
decl
repz
jmp
cmpsl
repnz
scas
int
outsb
push
rorl
lea
sti
mov
pusha
fbstp
out
jge
sbb
push
stos
enter
mov
add
lods
enter
xor
add
outsl
jge
js
stc
pop
test
rorl
and
das
mov
filds
inc
xchg
lahf
call
xlat
sub
leave
outsl
ds
in
je
push
xor
sbb
inc
popf
clc
jge
adc
insl
cld
xor
and
dec
add
jg
pop
pop
out
inc
repz
jbe
fucomp
jl,pt
pop
pop
decb
jo
subl
mov
mov
cmc
shrl
ljmp
aas
inc
repz
mov
add
iret
or
inc
jecxz
into
add
sub
lock
jle
xor
pushf
mov
addr16
xor
fsubrl
das
frstor
mov
mov
mov
mov
insl
stos
outsb
jmp
pushf
mov
mov
into
imul
dec
ss
pop
add
xor
lods
ljmp
add
cli
mov
xor
mov
les
into
ja
lods
aad
push
sarb
push
pop
mov
out
add
xadd
jne
insl
push
repnz
arpl
pop
out
ljmp
add
insl
push
cmc
minps
dec
jmp
lahf
and
inc
push
mov
pop
movsl
cmc
popf
out
or
sarb
mov
dec
sub
sbb
aas
mov
movsl
imul
rorb
jge
inc
sbb
loopne
and
sub
or
mov
jge
pop
xchg
xor
xchg
lahf
iret
lock
push
xlat
js
out
das
mov
fbstp
cmp
out
jecxz
pop
dec
or
pop
dec
loopew
js
add
dec
in
pop
sub
fistpll
mov
push
stos
sub
call
gs
mov
in
stc
pop
in
dec
mov
cs
cmpsl
movsl
insl
pop
fnstsw
push
pushl
ds
loope
std
add
jge
repnz
sub
lea
enter
mov
adc
jns
subl
pop
dec
outsl
push
in
push
std
mov
insl
jmp
and
dec
loopne
mov
or
insl
insb
out
jo
jmp
out
rcrl
subb
pavgw
fcmovne
cli
mov
pusha
rorb
sbb
decb
popl
and
cli
xchg
sbb
lods
loopne
mov
outsb
shrl
pop
sbb
mov
fmul
and
push
and
sbb
sub
inc
cld
adc
or
xchg
inc
sbb
mov
mov
in
and
stos
outsb
js
mov
mov
in
addr16
xchg
lods
jge
outsl
mov
insl
js
std
xor
lock
cs
mov
dec
ljmp
out
push
dec
sbb
outsb
push
scas
xor
lods
add
in
pop
cld
mov
or
popa
and
jge
fldenv
or
fistpll
ljmp
inc
push
pop
cmp
mov
cmpsb
leave
negb
fldl
mov
jmp
mov
js
cld
push
repnz
daa
dec
push
in
and
sbb
jecxz
in
sbb
mov
das
pushf
mov
ret
and
push
sub
mov
ds
std
and
seta
call
mov
push
xchg
adc
push
adc
xor
gs
cmp
or
enter
jmp
popf
pop
push
mov
mov
xor
mov
ljmp
jg
cmpsl
sbb
adc
sbb
lahf
fdivr
pushf
dec
dec
imul
add
int
xor
mov
mov
scas
cmpxchg
in
imul
push
xor
outsl
mov
pop
sub
shll
push
sub
xor
std
ljmp
jb
jecxz
or
xor
test
sub
outsb
and
push
jg
dec
sysret
cld
xor
aas
fdivrp
sub
jo
and
pop
xchg
fcoml
lods
stos
jnp
inc
test
jle
push
push
push
andl
test
pusha
divps
enter
dec
xorl
clc
and
ds
xchg
and
jo
std
jmp
jns
pop
mov
mov
das
addb
out
mov
pop
shrb
xor
cmc
int3
clc
mov
or
push
pop
lods
jmp
mov
cmovo
add
dec
clc
mov
push
mov
addr16
jl
xor
lods
dec
inc
add
dec
jo
inc
repz
or
push
js
std
jae
mov
mov
in
loope
mov
jge
arpl
lea
das
packsswb
sti
sbb
xchg
repz
js
jge
push
out
adc
fistpll
int
ss
pop
scas
cmp
jne
mov
insl
call
jecxz
js
pushf
xor
push
mov
pop
add
or
int
jo
mov
sub
popf
cli
stos
xchg
or
adc
jo
mov
cmovp
pusha
jl
inc
es
insl
in
dec
roll
in
insl
cmp
rcrl
outsl
call
inc
ret
dec
pop
adc
outsb
push
in
test
jl
repz
in
cmp
lahf
inc
dec
fwait
clc
sarl
out
sbb
sbbl
dec
sbb
mov
or
insl
pop
enter
sbb
out
mov
jmp
sub
mov
lods
ljmp
dec
jl
and
adc
pop
dec
mov
aas
pop
adcb
bound
mov
add
out
lds
or
lods
adc
dec
xor
aas
outsb
mov
xchg
dec
pop
pop
pop
not
jmp
push
scas
mov
icebp
mov
fcom
addr16
jle
das
shrb
push
adc
das
sbb
dec
ror
cs
insb
xor
jge
sbb
inc
lock
sub
or
imul
mov
and
cld
scas
inc
pop
dec
imul
je
jae
jl
xor
sub
lock
popf
addr16
or
push
or
pushf
int
sub
inc
pop
fnsave
fdivr
or
jne
jg
rcrl
xor
clc
lahf
or
cmp
idivl
xor
pop
idivb
popf
xor
ljmp
add
add
cmp
jmp
sahf
pmuludq
push
ds
rorl
ljmp
jg
loop
pusha
es
and
jae
or
enter
sub
imul
sub
sbb
fcoml
cld
out
dec
fnsave
push
pop
repnz
pop
rorb
aam
int
jbe
push
mov
inc
iret
pop
leave
fistps
xchg
loop
add
lods
in
jecxz
xor
inc
push
sub
sub
pop
fisttps
bound
mov
mov
test
nop
fcomip
repnz
mov
aad
mov
insl
dec
das
shrl
repnz
jge
outsb
stos
and
xchg
outsl
lods
ss
and
adc
out
lods
out
add
xor
nop
outsb
clc
jae
mov
pop
or
cmp
insb
push
scas
fisttps
adc
outsl
push
movsb
lock
addr16
jmp
loopne
mov
aad
popa
lcall
testb
shrl
jmp
pop
or
push
cmp
lret
dec
sub
fwait
clc
mov
lea
loopne
dec
repz
push
jecxz
subl
popa
insl
pop
sbb
add
iret
jecxz
push
push
sub
push
or
test
mov
xchg
pop
hlt
mov
das
insl
jbe
xchg
testb
sbb
mov
push
repnz
cmp
ja
pop
jg
xor
and
aad
cmp
jmp
mov
cltd
stos
fadds
cmp
in
scas
adc
scas
pop
fimull
xor
pusha
adc
lods
mov
dec
lea
sbb
iret
mov
cmp
repnz
dec
jmp
les
aas
dec
cld
push
pop
push
lret
sbb
push
xor
jmp
mov
dec
jmp
clc
inc
ds
ficompl
xor
inc
int
mov
pop
ss
jle
pop
roll
and
fldl
push
test
sahf
mov
inc
out
mov
jg
sub
cmp
nop
js
mov
jl
insb
movsb
cltd
popl
jge
lea
pop
das
add
add
sbb
aaa
ljmp
xlat
dec
sbbl
sbb
notl
push
scas
ljmp
jge
cmp
xor
inc
adc
push
out
out
jbe
lea
push
mov
jle
int
jne
out
cmovl
std
cmp
test
and
in
cmp
push
adc
mov
iret
fildll
pop
ds
dec
sbb
int
jmp
dec
aaa
pop
insl
push
mov
mov
das
cmpsl
rorl
aas
sbbl
sbb
mov
dec
mov
jg
push
adcl
fnstsw
hlt
push
sbb
lret
outsl
mov
dec
loopne
decb
ljmp
jns
out
nopl
stos
js
xchg
cmp
rolb
push
iret
ret
dec
jge
mov
lea
mov
push
jle
dec
xor
mov
aas
dec
adc
std
push
jle
cld
daa
lahf
jle
pop
jae
mov
out
pop
insl
push
mov
js
outsl
adc
jg
enter
je
loope
jge
incl
xlat
pop
in
sbb
repz
and
dec
mov
push
outsl
sahf
stos
or
fdivs
rolb
cld
mov
popf
and
test
faddl
clc
mov
fs
add
call
adc
dec
pop
int
or
aad
or
enter
mov
dec
out
clc
test
sub
push
sbb
dec
mov
loope
push
pop
aas
push
lcall
xor
push
jl
jmp
mov
lock
cmp
dec
insl
rolb
dec
mov
push
mov
fs
add
lods
jecxz
mov
mov
xor
mov
and
popa
mov
adc
sub
add
subl
imul
or
pop
gs
sub
repnz
pop
jo
outsb
scas
mov
lahf
addr16
inc
and
rorb
mov
lods
xor
pop
out
mov
mov
std
adc
inc
mov
jle
rcpps
pop
mov
mov
adc
mov
jbe
loop
cmp
js
sub
pop
sbb
pop
or
cs
out
in
int
stos
dec
xchg
fnstsw
divb
push
mov
cmp
data16
imul
push
dec
or
pushf
outsb
mov
movb
cld
mov
mov
pop
fsubrs
push
cmp
dec
adc
stos
lock
or
lea
bound
jno
aas
pushf
outsl
mov
sub
lahf
insl
pop
insb
std
xchg
in
arpl
std
pop
iret
add
popf
pop
pop
mov
lods
out
xor
cmp
std
mov
rorl
fldenv
xchg
jmp
adc
sbb
test
pop
jo
popa
repz
sub
mov
cmp
jge
push
jmp
loop
lcall
mov
jecxz
cwtl
loope
fwait
push
xor
push
repz
lods
jmp
js
mov
iret
or
cmp
imul
and
int
call
repz
insl
dec
push
es
sub
jo
insl
rorl
xchg
fsts
popf
dec
jg
adc
mov
aas
pop
push
add
add
pop
popf
jge
int
cmp
jg
ror
mov
push
mov
shrl
dec
loop
fdivs
xchg
pusha
cmp
das
pop
incb
repz
ja
ds
scas
push
int3
and
xchg
cld
in
repz
scas
popf
jbe
insl
rcll
insb
and
insb
orb
jbe
stos
sbb
call
das
ds
pop
and
ficoml
int
xchg
mov
js
rep
mov
or
out
sbb
mov
fisttpll
push
push
fdivr
push
fdivr
inc
repnz
nop
xor
mov
iret
repnz
in
jmp
stos
add
scas
int
popf
sarl
cs
sub
scas
sbb
xor
push
xor
scas
aas
mov
xor
and
sub
pop
gs
mov
pop
sbb
mov
fnstsw
aam
jne
lcall
das
insb
xor
pop
push
rcrl
adc
clc
fmull
push
out
cmpsb
int
jecxz
fdivl
dec
mov
and
push
mov
sub
sti
sub
push
incb
add
mov
dec
mov
add
call
clc
hlt
pop
add
loope
pop
jns
cltd
shlb
sbb
popf
addr16
clc
imul
dec
adc
add
js
aas
insl
es
pop
inc
and
xor
hlt
dec
sub
jns
xor
scas
lahf
mov
and
pop
xlat
sbb
hlt
sub
outsb
je
jae
js
dec
push
pop
inc
dec
pop
push
data16
sub
scas
jmp
sbb
push
in
xchg
adc
frstor
js
lahf
mov
lret
std
and
scas
xlat
mov
add
cmp
ds
pop
test
jl
repz
jmp
or
pusha
cs
jl
sti
jle
outsl
xchg
out
mov
insl
inc
xchg
hlt
mov
call
pop
jecxz
sbb
pushf
lret
hlt
mov
lods
jg
pminub
adc
test
push
cmpl
jecxz
xor
push
fildll
iret
fdivrl
jo
jmp
and
or
scas
fcmovbe
mov
or
add
jg
mov
scas
pushl
adc
fistpll
inc
jecxz
cltd
shrl
insl
lods
xor
pop
push
or
jge
sbb
push
xchg
fnsave
jns
add
xor
imull
lods
or
lods
test
push
prefetch
leave
pop
sahf
or
cld
mov
out
mov
cmpb
pop
adcl
mov
cli
jp
out
fidivrl
in
aaa
pop
push
ficoml
pusha
mov
adc
cmp
aas
pop
lods
into
xor
addr16
dec
jg
scas
push
sbb
cmp
sbb
push
lahf
decb
lahf
push
sub
pop
scas
fadds
arpl
sub
push
lods
or
pushf
pop
cs
sbb
sub
adc
pop
xor
outsb
lods
in
sbb
outsb
cld
fstpl
mov
xor
adc
ljmp
outsb
sub
sub
or
xor
cmp
jge
scas
insb
cld
inc
jbe
pop
js
popf
pusha
sbb
jl
sub
out
jl
push
std
mov
cmp
inc
fnstsw
addr16
jmp
std
mov
mov
les
js
mov
jae
push
cli
xchg
cmp
dec
nop
sub
addl
lods
pop
rcrl
jl
pusha
adc
fbld
fimull
push
stos
or
inc
outsb
push
sub
add
jge
push
push
and
or
jne
outsl
repz
jmp
mov
call
pop
jo
jmp
test
adc
add
insl
dec
out
mov
pop
xchg
xor
insb
jecxz
dec
pop
stc
xor
mov
and
loopne
je
mov
outsl
xlat
or
cld
sbbb
data16
sub
mov
outsl
pop
int
in
std
lods
or
pop
imul
in
jns
push
sbb
insl
stos
inc
outsb
lcall
push
scas
test
xor
sbb
cmp
lods
lods
scas
jmp
pop
mov
jo
pusha
cmp
js
lods
imul
inc
or
xor
out
dec
outsl
aas
out
outsb
iret
cmp
fscale
das
fsubr
int
outsl
xor
fildll
push
cld
and
dec
loop
sub
adc
das
mov
push
cmpsb
fsubrl
popf
adc
js
cmp
lea
and
jge
cli
test
outsl
cmp
aas
fwait
xor
jg
popa
lods
cs
lahf
mov
lock
lea
mov
outsb
mov
add
fistpll
mov
out
das
dec
pop
pop
sarl
lods
clc
add
std
sbb
ljmp
mov
mov
aam
repnz
aad
mov
aad
mov
jecxz
ss
xor
int
and
mov
inc
add
jg
repnz
psrad
stos
xchg
push
inc
mov
aas
jb
mov
jae
inc
jle
mov
int
xor
jmp
insb
jmp
fdivrl
push
push
add
mov
popf
jle
xchg
mov
pop
or
out
jge
add
pop
cltd
das
pusha
dec
dec
cs
inc
inc
ret
sub
jg
add
dec
push
loopne
loope
hlt
xchg
mulps
mov
xor
sub
xchg
add
std
xor
pop
jecxz
mov
das
inc
lcall
cmc
dec
xor
out
xlat
stos
mov
aaa
lock
mov
test
mov
std
mov
xchg
inc
test
add
ud0
inc
in
mov
adc
shrl
dec
adc
rcrb
nop
inc
cld
mov
jg
dec
in
lds
std
cmp
lea
movlps
movsb
flds
push
pop
insl
add
adc
cs
mov
sbb
fucomip
repnz
dec
int
mov
lods
test
cld
push
push
jge
adc
push
movsl
sub
es
mov
cld
jge
pop
leave
adc
mov
leave
test
pop
popf
sbb
sarb
sti
cmp
lods
cmp
imul
aas
push
cmp
dec
xchg
or
cmp
idiv
add
sbb
lods
fst
fs
mov
or
dec
jmp
dec
cmpsb
fsubr
and
rorb
dec
sub
xchg
mull
cld
jge
xor
lea
sub
push
dec
xor
sub
or
repz
repnz
push
jl
jnp
call
out
ljmp
and
pop
fsubl
fnstsw
jo
mov
pop
outsb
pop
push
cmp
jae
insl
std
sbb
stos
loop
xor
fcmovne
popf
fsubrl
clc
inc
push
add
out
orl
push
jmp
scas
push
popf
insl
std
or
das
aad
pop
pop
loope
daa
push
push
fdivrs
dec
push
fisttps
push
adcl
jecxz
sbb
cmp
or
or
leave
add
call
pusha
ret
push
mov
ds
js
and
mov
mov
push
mov
sub
loope
sbb
pop
ds
inc
call
dec
lea
sbb
mov
push
insl
mov
xor
out
and
pusha
push
rol
or
movsl
xchg
pop
ljmp
scas
jecxz
cmp
popf
ja
mov
clc
ljmp
cld
ficompl
cwtl
jl
in
lods
test
cmp
xchg
inc
push
scas
ljmp
enter
pop
js
lea
push
in
shl
popf
or
leave
and
jno
inc
lock
xor
insl
pushl
lcall
das
out
push
mov
stos
in
sbb
outsl
insl
call
fs
lods
ds
cmp
and
or
fisttps
adc
add
lahf
repnz
cmp
scas
mov
jecxz
loopne
scas
adc
push
jmp
jg
xchg
pop
adc
xlat
xor
push
dec
aaa
incl
ret
loopne
adc
decb
repnz
xchg
fistpll
or
mov
mov
push
js
fmuls
pop
or
punpckhbw
jns
fstps
icebp
jl
xor
inc
popf
and
xchg
fs
cmpsb
adc
mov
sub
pop
pop
pop
aad
xchg
xor
sbb
jns
pop
pop
lods
jle
lcall
push
outsb
pop
lods
jl
sbb
cltd
jae
addl
jns
aas
lahf
shll
shl
adc
jecxz
lods
gs
sub
mov
insb
xchg
popf
push
xor
outsl
int3
adc
pushf
or
outsb
jecxz
fstpl
dec
loop
cltd
cmp
sbb
nop
mov
pusha
mov
stos
and
aas
imul
fwait
orb
lahf
mov
insl
call
xor
dec
jbe
prefetch
in
repnz
lahf
push
xor
clc
mov
cmpsb
loopne
bnd
insl
dec
cmp
xchg
xchg
aaa
btr
dec
or
outsl
xchg
xchg
ret
push
enter
push
mov
add
push
dec
mov
int3
pop
jne
lods
cmp
mov
cmpsb
ret
lret
dec
bnd
loope
mov
adc
sbb
cld
pop
outsl
sbb
testw
fs
cs
shll
add
xor
push
push
repz
dec
ljmp
xor
push
mov
xor
rcrl
rcr
cld
insb
out
cmp
sbb
add
xchg
sti
shl
orb
mov
lahf
pop
jg
cmpsl
addr16
in
repz
mov
push
push
pop
cmpsb
or
jmp
xor
int
and
cmp
addr16
pop
pop
cmp
dec
fnsave
outsb
jg
push
sbb
out
push
adc
repz
fisttpll
gs
cmp
stos
outsl
scas
xor
push
pop
dec
adc
cmp
inc
and
int3
scas
adc
mov
das
inc
jge
in
mov
xor
jecxz
daa
fistps
push
pop
notb
sub
sbbl
loop
mov
and
push
sbb
fisubs
enter
sub
aam
add
dec
sub
xor
bound
cmc
pop
mov
mov
jl,pt
clc
fstpt
or
insl
inc
jno
lcall
dec
mov
adc
jae
cld
and
cmp
lahf
adc
mov
xor
cmp
or
push
push
jmp
xlat
out
sti
mov
sbb
adc
es
and
addr16
lea
dec
out
pop
js
test
setae
loope
push
loope
jg
and
jl
sub
ja
out
or
sahf
lea
and
push
mov
lea
aas
int
pop
div
or
lods
cs
add
aas
sbb
dec
cld
test
add
push
add
add
sbb
mov
cmp
arpl
or
aaa
pop
js
push
jmp
loope
pop
adc
pop
or
or
call
test
sbb
sub
int3
ljmp
and
aas
popf
jmp
adc
or
test
fisubs
mov
add
xor
out
orb
sub
shlb
mov
cmpl
lahf
dec
push
mov
repz
xor
jb
mov
punpckhdq
cmpl
fsubl
cmp
mov
xor
stos
or
scas
out
or
inc
push
add
cmp
outsb
or
mov
and
push
push
jno
outsb
mov
add
mov
mov
jo
cld
mov
hlt
jg
pop
sub
scas
outsl
mov
cmp
pop
lret
inc
cmp
pop
aad
and
sub
loope
in
cs
inc
rcrb
inc
sbb
mov
sbb
shl
sub
movl
jle
decl
lods
pop
cli
sub
adc
cli
mov
sbb
gs
mov
popf
stos
call
fistpll
in
lods
sub
mov
insb
mov
or
addr16
and
xor
or
xor
xchg
cmp
sub
xor
lods
adc
es
hlt
mov
fsubr
jae
cmp
jl
idivl
pop
stos
jmp
std
pop
push
icebp
inc
mov
cmpsb
lods
bound
adc
fistps
lcall
lea
add
jae
push
inc
or
call
packuswb
dec
nop
cmp
push
and
sub
adc
mov
lahf
mov
jl
push
or
sahf
filds
repnz
or
or
lahf
jmp
bound
cld
stc
dec
je
cmp
aad
int
mov
or
in
aas
lods
outsb
sahf
jge
add
fidivrl
mov
and
push
pshufw
fucomp
sbb
mov
pop
int
xor
outsl
orb
stos
sbb
push
or
push
testb
pop
nop
popf
pushf
lea
push
and
mov
aas
adc
jle
fistpll
jo
aad
test
pop
xchg
pop
push
cmp
scas
outsl
iret
jmp
or
out
pusha
in
lsl
int
scas
rcl
enter
push
jp
and
xor
mov
sarl
or
push
outsl
rcrl
testb
call
jmp
jmp
js
pop
jmp
cmp
scas
jle
xor
aaa
movsb
add
sbbl
je
xor
adcb
popf
xchg
cli
xor
xchg
arpl
cmp
sub
dec
or
inc
and
sub
loope
dec
sub
or
lahf
repz
sub
mov
das
adc
sbb
mov
xor
jp
cmp
inc
aad
iret
pop
clc
lock
fistps
outsl
xor
aaa
lea
pop
pop
mov
repz
jecxz
push
bound
lods
rcll
stc
and
jge
gs
mov
int
jle
inc
pop
sub
dec
nop
or
jnp
sbb
jge
sbb
clc
neg
mov
add
or
ljmp
out
es
push
xlat
aas
jns
sub
or
adc
fxch
mov
mov
inc
das
xor
pop
cld
or
dec
inc
outsl
repnz
push
outsb
jg
pop
clc
outsb
mov
insb
pop
add
out
imul
rep
lea
cmp
enter
jo
cld
adc
out
pushf
jge
ds
cld
cmp
jb
ja
sub
bound
stos
mov
lock
iret
repz
decb
inc
in
lahf
loope
pop
push
test
mov
xchg
push
mov
ret
push
add
cld
mov
pusha
std
dec
sub
xor
cmp
xchg
and
xorl
dec
ds
xor
pop
fisttpll
imul
jge
fldt
mov
mov
pop
push
xchg
cld
sub
add
sbb
adc
in
js
or
pop
adc
jecxz
and
aas
mov
xchg
mov
sub
loop
nop
mov
mov
fnclex
dec
ja
insl
dec
push
and
mov
rcrb
cvtps2pi
shl
or
std
inc
jmp
mov
enter
jae
mov
ljmp
xchg
jecxz
ljmp
cmp
ds
repnz
std
add
push
das
fidivs
jae
aad
add
sub
jg
mov
stos
sbb
mov
mov
and
subl
nop
mov
sub
js
sbb
xchg
xor
mov
adc
hlt
xchg
sbb
lock
std
scas
insl
or
lret
aaa
pop
xor
push
popf
std
and
mov
or
outsl
mov
dec
mov
lods
lods
test
in
nop
mov
pop
push
xor
inc
ds
int
mov
shlb
push
movups
data16
ds
cli
xor
filds
cli
ljmp
mov
pop
pusha
jle
mov
lret
or
pop
push
xchg
sbb
rcll
jecxz
xor
cmp
xchg
fildll
cs
popf
das
cmc
outsb
sub
lods
and
sbb
stos
sbb
or
jle
adc
shl
pop
cld
jmp
xor
mov
push
mov
fdivl
push
call
or
mov
ds
repz
cld
aas
das
je
mov
mov
jge
dec
cmp
iret
dec
call
popa
jl
xor
pop
rorb
mov
cmp
jg
popf
lcall
insb
icebp
inc
cs
das
lahf
mov
mov
jns
jns
lock
pop
mov
ret
repnz
mov
rcrb
and
pop
fistpll
adc
pop
iret
int
fs
inc
mov
push
call
dec
pavgw
adc
ja
cld
repz
dec
jmp
adc
jg
mov
outsb
in
mov
or
sub
jbe
cmp
rol
stos
outsl
mov
into
in
dec
mov
js
push
jle
scas
lea
popf
int
sbb
arpl
jnp
inc
fisubs
repz
mov
cmp
add
or
stos
fwait
call
ss
jmp
mov
mov
xor
gs
ficompl
stc
lock
mov
push
push
subl
fs
push
popf
inc
inc
repz
out
push
push
xor
orb
std
pusha
xchg
dec
jl
out
pusha
int3
xlat
js
outsb
addr16
mov
dec
xlat
or
push
and
loopne
or
fcomps
cmp
fwait
add
push
out
cmpsb
popf
arpl
mov
pop
jl
repnz
jns
jge
divl
mov
stos
mov
out
mov
std
cmovs
lea
repz
adc
or
test
mov
pop
jmp
repz
insb
cmp
jg
insl
inc
dec
and
mov
lods
add
ja
fcoms
rorl
in
sub
cmp
pushf
insl
and
mov
xor
adc
fwait
push
push
mov
cmp
popa
mov
push
sbb
ds
cmp
jl
adcb
cmpsl
stc
addr16
addb
ds
outsb
dec
mov
or
outsb
mov
or
jecxz
popf
cld
jmp
mov
cwtl
leave
push
loopne
push
xchg
out
out
sbb
out
mov
add
std
sub
mov
cmp
addr16
cld
pop
imul
mov
out
xchg
ds
scas
outsl
jo
repz
jb
dec
add
lods
push
and
jle
in
adc
dec
aas
or
and
jl
mov
iret
rorl
lahf
and
ds
or
decl
jns
jg
jns
jns
or
pop
sub
cmp
push
imul
add
ds
jle
sbb
or
or
xor
ss
outsb
test
lahf
jle
jl
add
outsb
ljmp
or
xchg
cs
test
test
rorl
push
test
sub
cmp
bound
ljmp
xor
outsl
dec
and
push
dec
lods
hlt
fisubrs
xor
jg
sub
arpl
sbb
adc
ljmp
outsl
dec
mov
add
out
dec
repz
outsb
test
je
xchg
sub
cmp
cmc
push
call
jne
outsb
mov
scas
jg
pop
outsb
pop
iret
pusha
xor
pop
cmp
and
push
shrl
push
mov
das
cld
mov
jle
fnstcw
fucom
inc
cmp
dec
mov
jns
jns
push
aas
add
scas
mov
lea
dec
add
out
fwait
ja
cli
in
mov
ds
ja
lea
or
dec
push
xor
mov
imul
cmpsb
push
out
mov
popfw
mov
pop
xor
test
mov
popa
mov
dec
mov
adc
and
insl
jmp
jecxz
outsl
ds
or
inc
in
push
iret
mov
adc
pop
add
or
ja
cld
or
scas
adc
call
cmp
or
sbb
outsb
les
icebp
jnp
call
dec
add
out
sub
mov
stos
push
fstl
loope
lea
out
std
pop
jl
push
loopne
dec
rep
ja
shrb
fsts
mov
bound
ss
shl
or
ds
outsl
sub
dec
pop
or
inc
cld
adc
and
dec
repz
scas
push
loope
insl
sub
mov
mov
mov
xchg
insl
jecxz
sub
insb
pop
outsb
lods
into
outsb
out
pop
std
das
dec
sub
loopne
idivb
add
aas
sbb
out
ljmp
mov
lods
insl
cmp
xor
js
jecxz
and
ret
repz
int
push
ds
or
movsl
jno
adc
insb
rclb
pop
push
mov
testb
fisttpll
outsl
rcll
adc
out
pop
xor
mov
loop
sub
sbb
xor
add
xchg
loopne
pop
das
insb
dec
loop
cmp
loop
mov
jl
repz
js
xor
lea
ret
add
repz
fimull
cmc
inc
dec
or
pop
mov
mov
mov
mov
jmp
cs
sub
and
dec
movsb
addr16
and
das
mov
out
jne
dec
je
ret
cmp
sub
test
scas
std
int
fisttpll
push
mov
iret
cs
push
hlt
xor
insl
outsb
lods
outsb
jp
mov
ret
push
in
xor
push
or
mov
insb
clc
add
or
jecxz
scas
lea
loopne
aaa
test
mulb
mov
int
lahf
outsl
cmc
dec
std
popf
fs
jae,pn
pop
sarb
stos
cli
testb
xor
dec
data16
cmc
push
imul
in
pop
jge
je
mov
push
jne
in
sahf
popf
jmp
mov
cmp
sub
out
movsb
jl
jecxz
pop
xor
pop
aas
addr16
mov
iret
jge
lea
fildl
shrb
int3
jo
and
fisttpll
cmp
lods
imul
insb
in
pushl
outsb
pop
pop
fdivrs
jb
xchg
jge
enter
mov
cmp
sub
or
jmp
mov
cs
stos
rorl
je
lods
xchg
lods
or
dec
mov
scas
in
je
addr16
sbb
repz
cmp
out
call
mov
mov
add
sbb
inc
jnp
jne
filds
outsl
es
test
xchg
jbe
fisubrs
cmpsl
xor
mov
mov
dec
cld
jmp
adc
roll
and
imul
pop
jmp
mov
or
bound
aas
jmp
ss
push
arpl
pop
jns
jns
push
add
lods
pop
in
mov
cmp
decb
bnd
mov
fsubrs
dec
je
pop
mov
adc
lods
out
push
sbb
xor
std
push
in
fs
dec
out
mov
scas
pop
icebp
pop
pop
out
insl
pop
push
push
repnz
xor
jl
dec
mov
ja
add
rcrb
das
pop
lahf
decb
jo
or
dec
repz
mov
addr16
dec
int3
dec
xlat
leave
arpl
pop
rorb
xlat
std
lahf
cld
sbb
mov
mov
lods
aas
mov
ja
push
mov
cmp
cmpsb
push
adc
into
pop
push
fmul
lahf
in
movsl
and
jge
mov
icebp
insb
mov
cmpsl
les
cmp
pop
inc
mov
jge
cmp
insl
cs
frstor
push
jbe
scas
pop
push
lahf
mov
xor
loope
ds
pop
cmpsb
leave
js
imul
lahf
mov
loopne
aas
sub
shlb
pop
cmp
cmp
and
out
jge
rorb
pop
iret
and
fisttps
nop
pop
mov
shlb
insb
pop
jo
inc
in
cld
out
inc
xchg
js
pop
jmp
int
lods
ds
mov
fmuls
pop
popf
add
add
sbb
and
push
in
and
fcomip
adc
cmp
hlt
add
popf
mov
xor
add
mov
mov
dec
outsl
xchg
mov
fldcw
das
outsb
in
ja
pop
div
jmp
push
pop
hlt
push
pop
push
mov
dec
mov
outsb
and
xor
lods
call
mov
or
sbb
mov
loope
cmp
insl
ficompl
mov
and
push
cmpsb
ds
mov
mov
sub
jmp
xor
mov
adc
outsb
jns
ljmp
repz
popf
ljmp
push
sub
fstl
dec
lods
inc
insl
outsb
xchg
sub
pop
push
stos
and
xor
fisubl
outsl
ja
ljmp
test
mov
pusha
out
sbb
in
insb
stos
iret
mov
jl
add
lods
ds
pushf
jo
insl
or
pop
pop
adc
hlt
mov
lret
add
insb
mov
fs
push
mov
inc
insl
sub
clc
or
sbb
popa
scas
and
adc
add
lea
fstpl
scas
jb
jl
repz
xchg
dec
push
and
test
mov
mov
imul
std
rorb
jns
insb
sbb
push
popf
jecxz
cs
push
in
lea
mov
mov
js
enter
lea
outsb
sub
inc
outsl
jg
and
aas
repnz
dec
mov
or
hlt
scas
jle
sub
inc
xchg
lods
pop
pop
dec
pop
femms
lea
leave
add
aas
push
das
cld
or
cltd
sbb
add
nop
push
cmp
cld
jg
or
jle
or
popl
push
push
mov
outsb
aas
cmp
push
cmp
negl
mov
in
pop
sbb
jns
xchg
adc
jge
rcrb
add
stos
stos
fcomi
mov
repz
testl
int3
mov
lahf
add
arpl
sbb
add
jge
add
add
repnz
sub
decb
test
shlb
or
out
or
lods
popf
sub
push
mov
lods
lahf
push
and
ja
mov
pusha
popf
icebp
dec
sbb
repz
xchg
mov
pop
mov
and
lock
adc
push
pop
je
jmp
mov
outsl
fwait
xor
div
mov
ret
dec
outsb
xchg
mov
mov
xor
out
roll
pop
push
cld
mov
test
std
dec
fsub
out
pop
xchg
adc
dec
jl
or
ds
cld
dec
aas
push
in
push
dec
dec
lcall
mov
fistpll
mov
adc
int
cltd
dec
es
mov
shrb
mov
rclb
movd
inc
mov
add
mov
sbb
punpckhbw
dec
mov
sbb
pop
or
push
push
sub
mov
jecxz
and
adc
das
cmp
scas
mov
mov
outsb
cmpb
loope
jl
and
add
inc
or
out
fisubl
push
lea
in
push
lea
jecxz
daa
adc
cmp
clc
mov
or
jecxz
push
fucom
sub
jnp
mov
mov
in
int
lahf
addr16
dec
mov
repz
cmc
xor
jge,pn
fsubrs
sub
adc
mov
sbb
lock
or
movsb
jmp
stos
jl
sub
adc
push
mov
and
nop
das
adc
inc
fwait
lods
clc
shrb
xor
sbb
lcall
xor
int3
popa
mov
mov
int
mov
test
repz
cld
mov
std
mov
push
rol
jns
mov
dec
and
mov
mov
adc
xchg
xchg
inc
out
pop
lret
or
dec
mov
cmp
jecxz
ljmp
pop
movsl
add
cmp
call
inc
xor
ror
das
pop
mov
cmp
dec
test
std
or
negb
mov
adc
pushf
insl
mov
call
push
pop
pop
testl
fisubs
xor
ret
push
jmp
aaa
push
jmp
xchg
stos
xor
push
push
das
outsl
pop
rclb
popf
out
or
pop
adc
nop
call
sbbb
negb
jae
push
cmp
xchg
shrb
popa
iret
inc
inc
dec
push
cs
std
push
addr16
ss
jge
enter
lret
sub
in
es
sbb
pop
or
insb
xrelease
ds
xor
jmp
mov
cmc
sbb
mov
leave
xchg
adc
or
xor
lods
cli
decb
scas
jecxz
cs
cmp
mov
sub
clc
lret
dec
sub
jo
and
dec
repz
mov
sbb
imul
xchg
stos
lods
outsl
insb
ds
popf
repz
pop
shrb
fstpl
iret
std
push
push
imul
add
inc
and
push
push
push
push
push
ljmp
adc
repz
mov
pusha
popf
add
sub
jp
filds
cltd
lock
adc
outsl
test
mov
jae
jg
lea
jmp
hlt
imull
sub
mov
cmp
test
jns
test
insb
stos
adc
mov
sbb
xor
push
pop
mov
cmp
out
and
xchg
xchg
sahf
xchg
fmuls
inc
jg
sbb
xchg
mov
ret
push
push
jae
sarb
push
ret
jmp
popf
hlt
cs
cmp
cmc
mov
aad
insb
mov
fidivrs
ljmp
xor
sbb
mov
outsl
sbb
fistpll
pusha
mov
jmp
sahf
dec
add
push
stos
pop
dec
sub
adc
lahf
fstl
xchg
inc
add
or
incb
xchg
cld
sti
push
out
push
sbb
outsl
int
inc
cld
lret
sbb
adc
stos
mov
sarl
push
hlt
popf
sub
in
add
in
fs
lea
push
les
push
insl
icebp
das
fdivr
add
inc
rep
mov
cs
and
jmp
adc
push
cs
fbstp
movq
pop
call
addr16
sub
add
sbb
in
stos
inc
out
push
push
or
mov
jle
sbb
add
test
pop
sbb
mov
das
fmull
daa
lods
int
jae
jns
mov
cmp
xlat
adc
sbb
cltd
std
push
or
fistpll
mov
xor
outsb
push
inc
out
fildl
xor
sub
sub
sbb
das
cmp
push
xor
out
adc
xor
popf
inc
mov
push
inc
jg
add
fstpl
dec
lods
std
imulb
cmp
in
push
popf
dec
inc
mov
repz
lret
sarb
lret
sbb
adc
sub
jl
mov
out
push
das
repz
jmp
insl
sbb
inc
outsb
cs
mov
or
xchg
mov
sbb
pop
xchg
push
test
mov
adc
pop
push
lea
mov
mov
mov
jge
out
fldl
or
repnz
inc
mov
leave
into
shrl
lods
popa
scas
adc
pop
cmp
ja
fdivrl
lahf
jecxz
movsl
shlb
mov
jge
mov
xor
sbb
sbb
dec
daa
ljmp
jae
insb
push
or
cvtdq2ps
pop
mov
push
fists
repz
cld
mov
scas
je
pop
outsb
dec
scas
aas
mov
fucomip
pop
mov
cmp
push
adc
pop
add
js
jl
ljmp
loop
aas
in
in
sbb
pop
adc
lock
test
pop
dec
fdivr
push
mov
adc
insl
neg
sbb
test
add
sbb
pop
outsb
jmp
pop
jecxz
dec
js
push
repz
or
addr16
cld
dec
pop
mov
xor
push
es
rol
rorb
lock
int
test
addl
cmpl
in
lea
add
ds
test
and
call
push
adc
inc
jne
pop
mov
lea
jne
std
jge
addr16
jbe
scas
mov
sub
mov
sub
pop
or
add
sub
sub
hlt
loop
lods
lahf
je
push
or
popf
daa
into
call
jmpw
dec
loop
fstpl
mov
bound
jmp
cmp
aaa
in
dec
and
dec
in
mov
sub
ror
fdivl
fsubr
mov
push
fadds
je
int3
insb
pop
popa
jg
rcr
int
push
push
xor
inc
xor
jl
mov
lea
inc
mov
call
sahf
and
add
rclb
push
testb
push
push
dec
aas
lods
addb
dec
push
inc
adc
es
iret
out
lods
dec
icebp
mov
rep
lock
xchg
add
pop
repnz
fucomp
xor
sub
fs
jecxz
repz
mov
sub
cmp
lods
cld
stos
dec
inc
push
clc
adc
cmp
sub
add
sbb
sbb
out
decl
pop
bound
outsb
in
nop
dec
popf
insl
jg
ret
test
jae
ja
lahf
aas
sub
pop
sahf
lret
out
sub
pop
pop
cmp
add
jle
dec
sbb
push
bound
push
or
and
sbb
call
pop
inc
jns
inc
enter
outsb
fisttps
mov
push
andl
pop
jecxz
xchg
cld
xor
dec
repz
fwait
call
and
add
xchg
ret
stos
mov
std
push
sbb
ds
into
pop
cmpsl
mov
sbb
push
jmp
out
repz
aas
mov
add
cld
inc
fcoml
xor
popf
das
or
scas
movsl
push
scas
pop
lock
in
lods
repz
popa
std
pop
mov
fcomip
test
dec
das
or
add
xor
jno
fsubrs
lods
outsb
jmp
js
push
das
xor
xchg
pop
pushf
aam
loop
dec
flds
fsubl
pop
or
js
sbb
jne
icebp
cld
dec
push
add
adc
js
pop
rcrl
in
outsb
in
pop
addr16
out
fcompl
push
int
xchg
push
out
jmp
punpcklwd
jg
mov
shrl
push
iret
addr16
test
xchg
adc
or
mov
cld
jmp
enter
iret
jl
or
pop
jne
out
xchg
xor
dec
xchg
call
and
xchg
repz
sub
jl
rclb
lahf
mov
jae
adc
mov
adc
shlb
push
xor
mov
pushf
out
mov
and
js
jge
je
fimull
jl
sub
push
mov
insl
jge
mov
push
repz
in
in
lret
lods
push
jb
je
cwtl
addr16
scas
ss
xor
push
cld
adc
cmpsl
out
fistpl
sub
sbb
dec
jnp
scas
xlat
in
lahf
mov
dec
testl
outsb
cmp
mov
cmp
das
pop
repnz
ljmp
rep
hlt
jecxz
test
mov
dec
cs
fcoms
xchg
and
data16
aas
xor
and
outsl
cli
aas
ljmp
ljmp
sbbl
out
sub
pop
je
pop
movsl
sub
es
and
js
icebp
scas
sub
mov
rorb
inc
push
sarl
xor
divb
addr16
stos
xor
stos
insl
lods
mov
and
pop
shrb
lock
cmovge
jmp
in
insb
test
mov
pushl
insl
dec
pop
pushf
push
sub
sti
add
mov
dec
and
mov
dec
jnp
cmpsl
fldl
nop
aas
push
subl
repz
or
leave
fsubr
js
das
mov
loope
jle
incb
cld
dec
push
addr16
fildll
xor
or
mov
cmc
roll
add
jmp
cs
pop
pop
mov
push
fs
out
aas
js
aad
outsl
xchg
in
repnz
iret
lahf
pop
adc
filds
push
push
cmp
dec
sub
add
inc
fs
int
lods
mov
out
cli
repz
test
ds
jle,pt
jmp
ret
mov
xchg
mov
je,pn
pop
push
mov
jne
fadds
pop
mov
fcompl
pop
addr16
movb
add
xchg
mov
std
lods
add
aas
inc
xchg
dec
hlt
pop
insl
push
mov
push
cs
ja
outsb
mov
das
cmp
scas
add
sub
or
mov
xchg
outsb
je
pushf
aas
dec
mov
inc
mov
out
push
mov
pusha
popl
gs
insl
xlat
pop
int
pop
adc
outsb
std
shr
nop
pusha
pop
insb
scas
jp
mov
dec
jl
repz
or
mov
push
add
sub
add
das
inc
add
sbb
cmp
aad
pextrw
push
xchg
enter
jo
push
in
or
fldenv
iret
sub
stos
ret
jle
outsb
in
cli
sar
mov
jns
addr16
cwtl
inc
inc
das
sub
jge
dec
push
or
jmp
pop
pop
es
dec
push
stos
push
repz
pusha
insl
jge
std
lcall
andb
movsb
push
movsb
cmpsl
ret
cs
cmc
into
lods
iret
ljmp
lods
push
in
hlt
jl
add
insl
fdivr
dec
ljmp
and
fs
ljmp
or
cwtl
movsb
and
into
or
cmp
push
adc
cmp
jmp
andl
clc
sbb
sub
pop
jbe
or
rorb
dec
push
xor
jmp
sbb
pop
mov
shll
dec
jge
push
dec
and
and
jmp
xchg
jg
mov
xor
pop
lahf
xchg
mov
sbb
or
rorl
pop
dec
sub
das
divl
jmp
push
pop
jmp
lods
cmp
sub
xor
push
rclb
mov
pusha
sbb
repz
dec
mov
mov
add
fildll
lods
in
mov
mov
mov
adcl
dec
jg
ds
ret
ret
outsb
mov
test
out
test
fs
shl
std
cs
jl
jge
fistps
push
nop
insb
out
mov
and
xchg
mov
sub
loop
rorb
call
lock
insb
mov
dec
aas
enter
push
pusha
push
push
decb
dec
xlat
push
mov
dec
bnd
iret
jmp
ret
pop
pop
jo
jmp
xor
js
bound
mov
addr16
mov
mov
jg
mov
ljmp
clc
loope
cld
das
push
lahf
std
push
add
divb
jle
mov
push
inc
xor
pop
cmc
daa
pop
outsb
xor
mov
sbb
sub
jbe
mov
into
sbb
cmp
xlat
ljmp
xor
pop
ds
dec
lods
outsb
cmp
nop
outsb
cmp
xor
add
enter
test
sub
and
popf
and
xchg
addr16
pop
mov
sub
and
push
mov
arpl
aad
pop
push
jmp
push
repnz
outsb
insb
xchg
lahf
push
nop
outsb
arpl
out
cmp
sar
mov
sub
adc
js
repz
cs
ds
and
jbe
dec
das
jae
sbb
cli
fistpll
push
sub
mov
testb
stos
push
mov
aaa
or
lahf
int3
xor
pop
mov
cmpsl
cmp
in
test
inc
loop
jge
dec
mov
sbb
push
fistpll
pop
mov
adc
cs
lods
lea
sbb
idivb
push
sahf
dec
imul
xor
pop
add
xchg
or
jbe
aas
jmp
call
add
js
lods
pop
aam
out
popf
pop
lea
dec
push
pusha
in
mov
xchg
sub
add
das
jge
ret
shll
dec
test
je
fbld
mov
push
mov
mov
clc
shrd
out
cmc
lahf
ss
jmp
adc
push
rorl
lcall
adc
stc
aaa
xchg
xor
ja
shrl
rorl
add
lock
lahf
mov
adc
aaa
icebp
push
xor
adc
add
mov
sub
xorl
out
jg
repnz
push
std
jge
shr
dec
dec
lret
out
cmp
xor
jmp
ds
lahf
scas
xor
inc
insl
fildll
adc
lods
sbb
dec
push
mov
fcoms
or
rcl
push
lahf
cltd
out
jno
mov
sbb
insl
xor
add
fsubs
push
jb
outsb
stos
pop
dec
cli
cmp
push
mov
clc
xchg
push
add
push
ljmp
js
dec
lahf
or
incl
ds
push
dec
adc
stos
mov
dec
inc
push
jl
outsl
pop
fs
lock
pop
insb
cld
mov
or
inc
pushf
stos
push
push
roll
sbb
or
push
lods
cmp
xorl
outsb
add
push
std
test
outsb
hlt
insl
dec
int
dec
ror
mov
int
push
mov
movsl
mov
and
loope
sbb
shrl
dec
mov
adc
mov
nop
nop
and
aaa
adc
cmp
icebp
jnp
jle
lock
or
repz
repnz
mov
pop
popa
adc
insb
scas
in
enter
adc
mov
out
mov
mov
in
shrl
mov
pop
xchg
rcr
add
jl
or
xchg
cli
adc
pusha
repz
inc
jle
cmp
out
outsl
jle
cs
insl
mov
cbtw
divl
lods
call
in
aas
push
movl
call
push
xor
adc
repz
xlat
cmp
in
push
inc
dec
insl
or
cmp
jl
hlt
sub
push
daa
add
scas
cmp
push
mov
cmp
dec
arpl
dec
clc
and
out
and
cld
daa
mov
das
orb
mov
nop
int
cmp
sub
xor
out
and
dec
or
addr16
lods
pop
scas
cld
pop
lods
in
sbb
popf
cmp
mov
or
iret
test
sbb
cmp
cld
rclb
and
adc
mov
insb
iret
push
andb
scas
and
outsb
cld
fstpl
repz
inc
lea
mov
mov
dec
cmp
sub
push
adc
cs
fmull
pop
add
stos
lea
push
mov
repz
std
dec
sarl
test
jb
in
repz
iret
addr16
cmp
das
insl
outsl
fs
bound
scas
outsl
fldt
dec
lods
push
fnsave
out
jl
cmp
pop
mov
shlb
push
xor
fsubrl
test
rcll
mov
ss
ret
adc
mov
addr16
pop
mov
outsl
mov
xchg
mov
push
sub
fistpll
xchg
fstpl
xor
sbb
je
ljmp
loope
outsl
pop
mov
jae
push
into
mull
daa
enter
adc
cs
pop
iret
testl
xor
outsl
cs
add
hlt
add
iret
in
mov
inc
jae
sbb
fldt
ffree
dec
cmc
pop
std
std
sub
push
lea
lods
inc
push
test
push
dec
pushf
inc
mov
insl
pop
push
mov
in
dec
jge
imul
mov
jmp
and
fnstcw
add
or
jbe
aaa
outsb
data16
ja
mov
sti
in
test
outsb
icebp
shr
mov
sti
mov
std
xor
outsb
xor
mov
pop
push
inc
push
int
shlb
or
mov
jg
push
aas
or
or
lods
xorl
repz
inc
in
mov
adc
xor
or
in
push
cmp
jbe
std
das
popf
cmp
scas
jl
in
ret
and
push
aaa
adc
repz
incl
js
mov
cld
arpl
push
fdivrp
adc
sub
pop
je
fs
out
xchg
dec
cmp
repz
push
cld
add
pop
std
int
sub
outsb
fstl
insl
das
pop
test
mov
outsl
push
sbb
mov
mov
pop
repnz
xor
xorb
inc
adc
mov
add
iret
das
std
repnz
fcmovbe
sbb
test
fisttps
push
jecxz
lods
pushf
popa
sbb
pop
ljmp
jl
jno
insb
int
jmp
arpl
mov
cli
xor
arpl
push
pusha
inc
dec
cs
outsl
jl
push
mov
dec
pop
lahf
add
pop
mov
sbb
inc
push
mov
loope
addr16
mov
mov
mov
adc
or
lea
or
cmp
lods
jnp
sub
lahf
cvttps2pi
punpckhbw
idivb
nop
das
push
mov
cmp
pop
and
ss
sahf
mov
xchg
stos
nop
shr
mov
addr16
scas
adc
cmpsl
fldenv
incl
cmc
leave
call
pop
fstpl
jmp
cmpl
loope
sub
pop
pop
addl
cmp
popf
dec
cld
iret
mov
mov
sub
jae
adc
rep
scas
sub
fldt
rcrl
and
loope
into
fistps
jmp
scas
dec
xchg
imul
pushf
shlb
mov
lahf
loop
jo
int
push
ret
pusha
scas
daa
dec
sub
jae
insl
cmp
hlt
pop
outsb
int
jmp
fnstsw
and
push
insb
loopw
push
les
aas
sub
mov
pop
push
jecxz
out
adc
mov
ljmp
mov
cs
sub
push
adc
xchg
push
scas
mov
aas
cld
mov
jg
cmp
js
insl
cwtl
push
fisubl
out
pop
sub
mov
fs
mov
and
pop
xor
ds
in
push
adc
iret
int
outsb
or
sub
lahf
lret
xor
stos
xor
mov
mov
pop
cmp
out
insl
or
iret
loop
jl
lods
outsb
aad
scas
lock
out
cmp
pusha
test
sbb
sub
repnz
pop
iret
jmp
or
jmp
call
int
ret
decb
dec
cmp
cmpsl
sti
pop
lds
insl
divl
mov
adc
lods
pop
arpl
and
sub
lods
and
scas
out
dec
cs
pop
mov
out
xor
aam
cld
push
repz
stc
add
pop
js
test
in
adc
std
iret
adc
popf
in
rclb
mov
cmp
iret
outsl
dec
mov
jmp
jge
mov
or
sub
je
insb
fucomp
jno
jge
fsubl
xor
aam
fcoml
cltd
mov
add
popf
sub
es
out
movsb
dec
mov
out
repnz
push
loop
shlb
pop
repz
mov
mov
jo
adc
scas
mov
pop
xor
fs
aas
js
ja
or
sub
pop
adc
xor
add
add
dec
sub
xchg
jle
or
insl
add
cld
xor
filds
cmp
xor
mov
in
sbb
xchg
jle
jge
pop
pop
dec
pop
xchg
addl
test
cld
in
xchg
pop
in
jg
add
outsb
push
jle
dec
aas
ja
dec
jmp
xchg
lds
aaa
jl
jg
test
xor
mov
dec
or
dec
loope
cld
out
xor
xchg
mov
cmp
jmp
dec
test
mov
pop
jge
outsb
push
mov
pop
das
std
mov
int
ljmp
mov
lahf
mov
push
pop
nop
xor
test
jmp
jmp
in
outsb
dec
pop
xchg
outsl
repz
push
bound
jmp
lret
push
outsl
mov
and
aaa
shr
jmp
insb
xchg
js
push
dec
cld
push
out
sbb
call
mov
stos
gs
aam
push
add
push
ja
push
adc
jle
dec
out
js
dec
mov
mov
mov
sub
and
jg,pt
xchg
lods
and
cmp
sbb
xor
scas
sub
adc
adc
sbb
jecxz
jle
inc
sbb
lahf
push
outsb
jo,pt
lret
icebp
popa
insb
adc
xchg
sbb
orl
out
inc
xlat
std
and
psrad
scas
mov
insl
jecxz
pop
int
or
inc
mov
xor
mov
add
push
scas
push
insb
mov
lret
or
adc
outsl
inc
xchg
mov
aas
sbb
push
lret
push
adc
mov
mov
repz
mov
insb
inc
popf
lods
aas
pop
ljmp
lret
rcrb
insb
inc
cmp
mov
dec
bound
insl
mov
shlb
push
xor
in
out
pop
adc
pop
fsubrl
fisttps
rol
loopne
inc
xlat
into
adc
negl
popf
ss
mov
pop
sbb
push
mov
in
cld
xor
jmp
xchg
add
push
push
mov
mov
pop
negb
cs
jge
fdivp
imul
push
pop
jle
stos
stos
mov
pop
int
repz
add
insl
imul
mov
xchg
divw
cmp
scas
jle
mov
sbb
mov
outsb
cmp
push
cmp
xchg
sub
loopne
sti
pop
push
incb
minps
out
or
dec
popf
pop
jge
or
push
pop
mov
add
insl
sub
pop
sbb
cmp
lret
inc
pop
mov
insb
pop
pop
adc
adc
out
fbld
rorl
dec
out
sbb
popf
clc
aam
sbb
lret
sub
pop
in
and
ret
jmp
push
xor
xor
jo
outsb
pop
push
sub
insl
xor
pop
jge,pn
inc
or
and
mov
mov
dec
out
iret
mov
jl
push
mov
lret
jg
out
lcall
or
dec
dec
outsl
out
jmp
and
mov
das
dec
lods
and
xor
add
jne
enter
mov
js
dec
jg
sub
mov
cmp
pop
pop
or
fnsave
jl
lods
jecxz
mov
mov
scas
sbb
jnp
addr16
arpl
dec
lahf
outsb
insb
fisttps
or
xor
fsubrp
mov
ret
bound
push
addr16
insb
clc
xlat
in
mov
cld
mov
adc
std
fadd
mov
push
vmread
push
lods
insl
imul
mov
cld
insl
stos
mov
dec
jecxz
or
lods
int
jns
outsl
les
outsb
shrl
dec
inc
fisubrs
xchg
cld
pop
out
lea
jle
pandn
pop
xchg
xor
repz
lock
and
pop
cld
insl
pop
sbb
std
outsb
stos
jge
mov
int
stos
dec
mov
cld
and
daa
inc
imul
xchg
insb
les
mov
mov
sbbl
imulb
je
inc
jmp
outsb
mov
movsb
scas
mov
jle
int3
cli
xchg
mov
lret
dec
pop
push
or
and
add
das
jne
addr16
or
js
inc
and
fildl
movl
xor
mov
icebp
into
dec
ja
fucomp
jge
outsb
int
mov
pusha
jecxz
int3
cli
dec
iret
outsl
pop
pop
cmpsb
mov
rorb
imul
das
js
std
cmp
pop
repz
push
loopne
cld
adc
adc
pusha
ljmp
push
xor
dec
lods
int
popa
jge
push
xchg
adc
std
xor
negb
add
mov
in
imul
jge
int
test
jl
pusha
add
fnstcw
push
loopne
cmp
scas
sub
loope
push
lret
and
loop
xchg
in
dec
jne
pop
xchg
jmp
aad
push
cmpsl
lods
lock
dec
mov
mov
insb
push
jecxz
push
shll
push
adc
jge
push
push
xor
or
xor
xor
fs
jns
cli
test
fildll
jo
or
push
test
inc
mov
sub
xor
add
push
movsl
fildll
inc
aas
mov
int
mov
push
jecxz
js
cmp
imull
out
pop
cmpsb
aaa
outsl
jecxz
jno
fbstp
mov
loopne
or
adc
jp
jle
fucomip
dec
fwait
mov
imul
bound
dec
jl
mov
out
pop
std
sbb
mov
inc
or
inc
cmc
sti
in
addr16
orb
inc
and
repnz
cmp
out
xor
cs
shrb
cmp
and
orl
in
jbe
aas
push
shrl
rcll
xor
lea
inc
mov
mov
mov
push
jge
mov
repnz
lods
es
mov
repz
sub
xor
bound
dec
or
iret
pusha
cmp
sarb
ds
imul
mov
cmp
push
adc
sub
fnstsw
cltd
pusha
add
in
divb
mov
sub
inc
push
cs
push
das
and
paddsw
dec
movsb
sub
push
pop
push
outsb
inc
aaa
pop
cwtl
sub
jle
cwtl
insb
outsb
popl
xchg
push
test
lods
jl
pop
ficoml
mov
lods
adc
mov
push
pushf
cmp
mov
sbb
int3
movzbl
jg
addr16
sbb
sbb
jle
cs
cmp
or
lods
mov
mov
insb
sbb
dec
outsb
in
mov
push
outsb
sbb
xor
jmp
pop
addr16
fbld
pop
lret
inc
push
push
fisttpll
imul
mov
ds
adc
aas
jnp
loope
jns
jns
pop
cmp
mov
call
jmp
fsubrl
mov
orl
or
or
push
and
jecxz
scas
lods
push
jb
jmp
pop
fcoms
mov
push
call
cmp
lea
mov
popa
lods
push
dec
imull
in
cltd
pop
mov
das
add
mov
lods
js
jle
das
dec
dec
popf
addr16
loopne
jg
or
mov
xchg
push
pop
xor
addr16
repz
mov
adc
loop
dec
sbb
lahf
lea
in
mov
mov
dec
outsb
aaa
sbb
bswap
int3
shrl
fmull
lahf
pop
mov
lret
add
filds
push
repz
decb
inc
lods
rcrl
cmovle
jecxz
pop
cs
mov
rep
pop
fdivl
add
lea
and
or
and
outsl
push
adc
pop
insl
pop
sti
sub
add
ret
mov
clc
xlat
adc
pop
pop
test
movsb
fbld
int
xchg
ret
addr16
ds
pop
out
sbb
lock
or
push
cli
popl
mov
jl
stos
call
pop
scas
outsb
mov
fs
cld
adc
shr
mov
jae
sar
adc
xor
sub
dec
and
fistpll
pop
pop
push
mov
out
pop
jge
out
iret
sbb
subb
pop
repnz
inc
or
mov
data16
and
movsb
ret
sub
shrb
cmp
cmc
psubb
xor
mov
inc
or
pop
push
or
insb
pop
jg
ja
fnstsw
push
fbld
inc
jl
repz
decb
sti
rcrl
incb
repz
cmp
xlat
xlat
push
ja
jecxz
out
mov
dec
jge
add
loopne
xor
xor
mov
mov
mov
sbb
push
push
decl
or
loopne
jle
cmp
lahf
inc
ds
push
in
fisttpl
xor
adc
and
popf
clc
jmp
and
call
xor
adcl
mov
decb
or
aad
inc
hlt
rcrb
adc
push
sbb
mov
movsl
out
std
or
das
addr16
movsl
push
mov
adc
addl
and
jle
popf
pop
dec
cltd
insb
loope
ljmp
sub
repnz
lahf
pop
jmp
outsb
repz
push
mov
or
insb
mov
in
mov
adc
xchg
sub
std
int
repnz
xor
add
dec
insb
scas
iret
fistps
cmp
dec
out
fwait
in
pop
pusha
repz
popf
jecxz
outsb
or
mov
and
jmp
pop
dec
fcomp
adc
insb
pop
lahf
push
xor
push
push
mov
mov
ds
lahf
mov
into
mov
mov
gs
gs
ret
ss
mov
mov
sub
ds
into
and
std
in
outsl
pop
out
je
lods
pop
cmp
adc
dec
divb
aaa
cs
mov
insl
xlat
outsb
or
pop
jecxz
fstpt
cmp
mov
jmp
int
cld
fstpl
aas
std
fsubrl
iret
adc
popf
lea
inc
out
outsb
dec
lods
push
cmp
pop
sbb
xor
cmc
push
in
and
rep
imul
lock
or
sub
popa
sub
dec
push
jne
mov
icebp
pop
out
push
das
push
or
std
dec
cwtl
cmpb
and
lea
adc
push
repz
stos
mov
sub
push
dec
stos
fs
mov
insl
js
mov
bound
sub
std
mov
pop
sbb
mov
mov
push
lods
lods
mov
pop
adc
jg
cmc
aas
and
cmp
out
jmp
pop
mov
inc
jge,pn
loop
ret
fistpll
adc
push
out
mov
mov
outsl
push
mov
movsb
xchg
test
sbb
adc
idiv
pop
je
rorl
test
cmpl
pusha
mov
jl
dec
cmp
mov
cltd
dec
sahf
mov
and
int3
popf
add
fs
bound
mov
xchg
int
sub
hlt
push
addr16
cmp
sub
aam
xchg
cs
ljmp
sub
jmp
iret
jle
cld
pushl
stos
cmp
inc
incb
sbb
hlt
test
jg
lcall
xor
cwtl
xchg
jecxz
cld
push
inc
xlat
decb
insl
call
and
call
cmp
and
xchg
insl
cltd
add
push
in
or
repnz
lea
dec
push
or
loope
cld
cmpb
ja
cmpsl
imul
or
cld
mov
outsb
mov
insb
push
lret
jle
inc
rcrl
jns
std
iret
dec
lods
pop
pop
outsb
sub
mov
sbb
dec
out
out
aas
insb
mov
xchg
xor
in
mov
mov
das
xor
hlt
insl
insl
insb
sbb
loope
mov
mov
in
popf
jmp
test
mov
xor
aas
cmp
adc
ds
pop
dec
or
int
push
addr16
mov
ljmp
jecxz
adc
sbb
aad
or
pop
out
jb
arpl
inc
pop
mov
lcall
repnz
repz
iret
in
jg
sub
jae
jmp
jb
pop
out
push
add
push
pop
or
stos
insl
add
cld
cmp
xchg
and
cs
fisttps
paddd
or
clc
ja
popf
lahf
add
gs
insb
ljmp
scas
in
int3
dec
and
cmpl
mov
insb
stos
dec
sbb
jne
in
jnp
mov
jle
jb
hlt
cmp
add
xchg
js
jo
int
cmp
sub
frstor
pop
lret
sub
das
outsb
or
fcoml
outsl
sub
mov
add
scas
negb
ffreep
into
inc
scas
inc
pop
mov
cld
clc
stos
popl
push
cmp
movsb
push
movl
out
into
adc
call
lods
adc
cld
push
adc
sub
or
sub
mov
xor
dec
in
or
cmpsb
stos
sub
inc
repz
pop
js
mov
iret
inc
out
cli
dec
rcrl
leave
outsb
out
outsb
cmp
mov
sbb
addr16
in
or
cltd
sbb
pop
scas
fbld
mov
jl
int3
push
push
stos
mov
in
aas
xor
pop
insb
outsl
push
jecxz
filds
enter
icebp
dec
loop
mov
sbb
loope
or
movsl
cmp
fs
push
push
mov
out
sub
popf
adc
lock
insl
fistps
outsb
sub
fstl
dec
push
std
or
imulb
dec
orl
push
mov
xchg
cmp
inc
fsts
or
and
outsb
mov
cmp
add
adcl
cld
pusha
repz
nop
cld
mov
repnz
jmp
adc
mov
cmp
std
paddsb
pop
push
iret
outsl
pusha
lods
pop
orb
xor
aam
mov
push
xchg
sbb
or
icebp
iret
stc
add
out
cld
xlat
xor
subl
and
adc
push
int3
jle
cmp
mov
int
or
stc
sbb
push
out
int
push
test
in
push
mov
sbb
fneni(8087
lock
jg
dec
addr16
fisttpll
int3
fsubr
or
out
sub
in
jl
mov
cld
xor
inc
repz
pop
mov
add
xchg
mov
sub
cs
iret
sub
sub
in
jg
scas
add
aas
pop
loopne
dec
insl
jl
lea
sbb
mov
aam
addb
pop
pop
pop
xchg
or
in
fldenv
js
lods
push
mov
cltd
pop
push
shll
jnp
hlt
in
ficompl
mov
lahf
jle
jge
mov
mov
xor
in
or
push
add
sbb
lods
xor
icebp
cltd
gs
ret
shlb
cli
in
pop
repz
push
and
test
fwait
sbb
jle
xchg
or
mov
cld
int
jg
mov
jecxz
outsb
push
aad
mov
repz
sar
sub
pop
mov
test
shrb
ljmp
mov
mov
push
insl
mov
bound
adc
leave
out
adc
iret
lods
outsl
add
sub
push
test
jb
and
xor
adc
sub
sub
mov
adc
add
cmp
in
outsb
frstor
push
insb
xor
incl
sbb
cli
in
dec
mov
fnstsw
movsl
das
and
fisttpll
sbb
push
pop
js
dec
mulb
dec
cmp
rolb
xchg
incb
subb
lock
fbld
mov
addr16
mov
pusha
hlt
push
mov
sbb
pop
in
jg
mov
and
jge
or
xor
sub
insb
lods
int
lea
push
in
jmp
jg
clc
lea
mov
loope
xor
mov
sbb
jg
je
push
add
in
aas
mov
imul
mov
ja
sar
insb
sbbb
hlt
pushf
add
insl
lea
outsl
pop
mov
bound
cmpsl
enter
add
ret
push
mov
jecxz
mov
mov
and
das
jle
stos
cmp
stc
or
nop
and
jecxz,pn
pop
push
ja
add
fnstsw
icebp
and
jg
mov
fwait
jmp
lods
lods
ss
popa
mov
adc
xor
adc
sbb
pop
sub
adc
lahf
add
push
subl
incl
fistpll
pop
xor
call
xor
or
jle
sub
repz
js
movzwl
out
inc
push
push
adc
std
jg
sub
fiadds
lods
out
cmp
jg
stos
cmc
jg
rol
ret
mov
pop
mov
cs
les
mov
mov
inc
dec
or
and
ja
lods
int
daa
mov
aas
clc
push
and
push
mov
pushl
push
fistps
cmp
lret
jecxz
lods
push
fimuls
pushl
dec
imul
andl
ds
dec
je
rorl
in
idivb
frstor
inc
push
pop
jle
cld
shlb
mov
push
out
and
out
dec
cli
das
dec
repz
jae
dec
jl
das
cmpsl
cld
test
lock
pop
jge
mov
dec
in
outsb
adc
adc
push
outsl
inc
test
loopne
xchg
cmp
xor
test
imul
sbb
add
jns
pop
push
mov
je
adc
lea
jo
lods
iret
popf
jbe
mov
dec
xchg
lods
out
jge
push
std
mov
push
aad
call
push
mov
jmp
jbe
xor
test
pop
jle
push
pop
lock
repz
mov
mov
fucomip
insl
cmp
leave
insb
xor
jge
andl
loopne
lds
ds
iret
dec
jmp
fldl
jl
dec
mov
push
push
in
outsb
popf
loope
fistpll
mov
push
or
and
add
ds
ljmp
or
ret
sub
jecxz
dec
insb
and
stos
sub
jo
sahf
or
aas
repz
cs
iret
das
dec
aad
inc
adc
pushf
add
int
push
out
inc
inc
fisttps
jne
or
int
adc
jg
cltd
rorb
adc
adc
orl
outsb
mov
out
push
loop
sbb
and
insl
pop
jl
test
inc
int3
addr16
sub
mov
sub
jne
fcomp
outsb
enter
das
pop
xor
mov
pop
stos
das
sbb
lea
mov
pop
sbb
push
scas
push
cmc
je
xor
loope
insl
cmp
push
fiadds
insb
lods
pop
inc
jns
hlt
das
popf
inc
clc
jecxz
jge
repz
inc
scas
cmp
ficoml
fnstsw
clc
cwtl
sub
lahf
push
dec
or
mov
outsl
lods
hlt
cld
jg
mov
mov
lahf
int
add
fucomp
xlat
mov
jecxz,pn
push
jmp
adc
call
push
mov
fsubr
inc
insb
push
push
mov
and
lret
or
push
sub
mov
popf
les
ret
jmp
or
std
add
adc
jmp
push
ret
aas
add
dec
pop
jg
repz
inc
out
push
cmp
dec
insl
out
and
je
xor
dec
imul
loopne
stos
fnstsw
je
rorl
add
out
dec
and
mov
mov
adc
cmp
shlb
out
push
ds
lods
mov
mov
pop
xor
loope
hlt
push
sub
movq
push
notl
outsb
rol
loope
insb
notb
outsb
xor
jmp
and
mov
cmc
sbb
jmp
pop
das
dec
jb
mov
mov
inc
sbb
inc
das
push
lods
punpcklwd
mov
and
cld
das
out
or
pop
notb
sub
and
repz
mov
pop
inc
push
and
fsubr
xor
outsl
decl
xor
pop
add
and
imul
ds
lds
enter
inc
inc
mov
or
push
test
mov
scas
mov
cmp
cs
int
aad
sbb
pop
jne
lahf
push
insl
pop
jb
push
fildll
ljmp
out
incl
aas
xor
sub
and
adc
pop
out
loope
and
scas
loopew
popf
aad
pop
push
ficoms
pop
push
lods
adc
cs
mov
adc
in
aaa
cmp
jl
inc
pushf
ds
or
mov
cmp
popf
cmp
outsb
dec
stos
mov
outsb
enter
ja
test
test
jmp
enter
jmp
and
push
xor
xor
insb
pop
mov
std
repz
fs
dec
dec
icebp
push
add
je
xchg
pop
scas
aaa
leave
push
sub
pop
mov
mov
jg
adc
outsl
pop
xor
xor
lret
popa
push
aas
cmp
pop
lods
repnz
ds
pop
sarb
sub
pop
js
mov
dec
outsb
or
lahf
std
mov
lcall
push
pop
aaa
push
jl
mov
push
aam
hlt
jp
std
pop
fisttpll
xchg
out
lahf
sub
push
jo
add
push
shl
adc
ds
mov
rsqrtss
dec
in
loope
lea
mov
in
aaa
data16
sarb
dec
jo
xor
scas
jg
mov
cmp
mov
or
dec
sbb
out
push
outsb
sub
lahf
shr
fildll
out
sub
loope
das
push
icebp
call
inc
lea
sub
pusha
pop
pop
fdivl
push
call
lods
or
jge
cmc
hlt
jg
iret
loope
cmp
scas
adc
lahf
cld
mov
out
es
add
cld
push
sbb
xchg
outsl
inc
pusha
sub
jg
dec
push
add
std
clc
cmpsb
ds
insb
mov
popf
fldl
fbstp
dec
push
mov
dec
cmp
call
inc
dec
lods
cld
hlt
push
aam
xor
xor
dec
push
insl
mov
mov
psllw
jae
nop
insb
jmp
cmp
sub
jle
mov
test
fdivr
sbb
push
das
or
cs
shll
out
add
sbb
mov
insb
push
cmp
dec
cmp
add
insb
repnz
lahf
lods
pop
in
outsb
mov
sti
fdivp
inc
pop
adcb
or
mov
outsb
pop
push
push
insl
dec
stos
jmp
dec
push
test
jecxz
popa
das
dec
push
xor
and
or
in
inc
scas
sbb
sbb
adc
xor
loop
imull
xor
outsb
jmp
je
xchg
lahf
cmp
outsb
jg
pop
push
das
arpl
lret
jle
mov
or
mov
scas
xor
or
rep
jg
movhps
pop
inc
into
xor
jl
inc
scas
flds
jp
jg
sub
mov
sahf
test
jmp
cld
lret
arpl
and
bswap
dec
ljmp
push
aas
stos
push
repnz
lods
pushl
jecxz
sti
adc
inc
push
test
outsb
mov
sub
or
cmp
cmp
ret
fistpll
punpckldq
cmc
xchg
outsb
fnsave
iret
loope
std
mov
dec
xor
das
push
repz
scas
and
adc
adc
push
add
inc
sbbl
js
pop
sbbl
mov
out
in
lret
pop
daa
dec
push
jmp
decb
mov
test
mov
loope
cmp
dec
hlt
pop
push
pop
sub
insb
mov
int3
or
sub
or
cmp
cmpb
outsb
mov
cmp
hlt
pop
push
jle
int
outsl
push
push
in
cs
jg
fucomp
negb
fildll
ret
jo
add
test
int
push
cmp
jo
clc
stc
sbb
enter
nop
int
sub
push
rorl
ds
psllq
sub
and
mov
jecxz
mov
add
pop
fwait
cltd
call
push
push
ds
insl
inc
jl
mov
mov
test
fistps
in
lahf
inc
testb
push
das
ds
lahf
lahf
pusha
lods
or
pop
clc
push
push
sbb
insl
out
sub
loope
inc
dec
xchg
popa
mov
push
sbb
xor
decl
pop
std
dec
push
dec
movsb
call
ss
mov
add
fisubrl
push
fbstp
xor
jg
mov
pop
out
je
xor
rclb
lret
jge
add
sub
push
mov
sbb
cmp
sbb
sbbl
sarl
mov
or
mov
xorl
repz
mov
adc
add
and
lds
or
and
mov
mov
or
dec
cld
add
iret
push
dec
xor
xchg
ret
out
fs
pop
decb
sarl
mov
in
push
shrb
faddl
sbb
dec
fimuls
in
sarl
mov
pop
push
push
mov
shr
mov
cld
dec
and
or
mov
leave
ret
out
mov
and
cmp
mov
cmp
push
mov
lods
adc
xlat
adc
adc
cld
push
mov
lock
fisttps
outsl
ret
pop
and
lods
addr16
cli
cs
pop
cmp
mov
pop
or
push
lock
addr16
sub
je
push
sbb
push
jecxz
push
hlt
movsb
mov
mov
adc
adc
cld
push
inc
es
adc
iret
push
imul
outsl
add
cmp
or
imul
or
scas
mov
xlat
pop
imulb
das
ss
and
sub
inc
pop
or
scas
push
popf
sub
sub
adc
lods
inc
mov
arpl
pop
out
lcall
adc
sbb
fwait
jg
stos
jmp
jge
fsts
adc
std
cwtl
mov
lods
scas
cmpsb
mov
and
fistpll
xchg
jo
mov
enter
cld
movsl
inc
lea
xchg
cmpl
repz
pusha
or
inc
mov
mov
jp
hlt
jl
psrad
xor
imul
adc
mov
cmp
jmp
mov
test
push
js
idivb
das
adc
add
aas
call
insb
scas
push
incb
sub
loopne
out
dec
popa
mov
lret
dec
sub
adc
mov
insl
sti
lea
dec
mov
cmp
sub
and
std
add
add
sub
add
sbb
divl
pop
or
insl
sahf
or
mov
repz
cld
push
insl
ds
incl
lods
int
in
adc
fimuls
mov
jle
cli
inc
scas
fucomip
cmp
pop
or
dec
inc
or
fnstenv
notb
lea
cli
xor
or
cld
icebp
sbb
cmp
add
popf
dec
sub
or
pop
sbb
cmpsl
jmp
fwait
jns
mov
je
loop
xor
push
dec
mov
in
cli
mov
cmp
outsb
pop
mov
stos
ljmp
out
loope
or
inc
cmpsl
je
out
pop
je
call
mov
mov
jecxz
xor
dec
cmpsl
ret
das
mov
rolb
sbb
push
pushf
addr16
jo
loop,pt
insb
ja
and
dec
pop
cmp
dec
xabort
dec
sub
stos
jns
adc
clc
mov
lea
adc
shr
fildll
jae
popf
push
inc
jge
out
pop
dec
jl
sbb
jno
jo,pt
sbb
pop
addr16
or
jle
aas
ljmp
mov
sbb
mov
iret
jg
add
mov
pop
hlt
and
xchg
repnz
mov
lods
aam
loop
js
dec
inc
daa
int
sub
notb
sar
lock
jg
mov
pop
mov
dec
movq
push
call
mov
mov
mov
dec
pushf
out
jo
repz
pop
jnp
push
or
add
iret
jg
int
jmp
sbb
mov
xor
xlat
mov
sub
sar
fadd
fisubs
arpl
enter
add
mov
idivl
add
jge
iret
mov
jg
pop
orl
mov
cmpsl
xchg
shrb
imul
lea
sbb
popf
arpl
jecxz
jl
inc
fadds
mov
cmpsl
and
ret
dec
loop
mov
lea
mov
arpl
sbb
ljmp
mov
push
imul
aas
jle
cld
in
cmp
sbb
jmp
add
push
cmp
push
aad
in
shlb
repz
js
int
insb
push
pop
in
xchg
mov
xor
gs
stc
icebp
cmp
shl
push
jle
ja
in
sbb
cmp
cmp
frstor
sbb
xchg
sbb
sub
mov
movsb
push
lahf
pop
dec
orb
idivl
leave
jge
push
sub
jmp
jns
outsb
jecxz
push
imul
add
repnz
jl
fstps
mov
push
pop
out
outsb
xchg
pop
mov
loope
cmpsl
dec
or
push
sub
xor
push
xchg
mov
xor
xor
dec
jne
adc
je
sbb
fpatan
mov
adc
aas
and
in
repnz
repnz
mov
push
sub
lods
dec
stos
leave
lods
lods
xorb
outsb
pop
xor
dec
push
add
lods
outsb
pop
cmp
pop
popa
push
leave
mov
aas
push
mov
insl
pop
pushf
inc
ds
or
lds
push
adc
gs
divl
test
iret
dec
leave
adc
shlb
rep
into
cs
dec
loop
popf
ret
outsb
push
fsubrs
cvttps2pi
stc
push
push
push
in
outsb
adc
rcrb
pop
pop
or
cmpsl
mov
int
shrl
mov
push
ret
insb
xchg
call
outsb
in
cmp
sbb
mov
loopne
addb
pop
mov
js
mov
mov
pop
in
cs
push
jmp
mov
push
xor
push
push
jmp
lea
mov
shlb
outsl
stos
fidivrl
jmp
jns
push
inc
aas
pusha
outsl
sbb
dec
stos
pop
add
cmp
repz
lea
movsl
sub
out
cmp
push
repz
lods
dec
rcll
cmp
or
jns
mov
daa
xor
dec
std
add
outsl
adc
shrl
cmc
ret
push
cli
pop
jb
mov
jl
in
aad
push
inc
jmp
adc
mov
jns
fsts
push
sbb
adc
or
cmp
fsts
sbb
sbb
cltd
dec
sub
iret
mov
xor
and
insb
push
stos
loope
js
iret
dec
lret
xor
cmpsl
fdivr
mov
das
movsb
mov
or
fmuls
jl
push
pop
pop
addr16
cmp
sub
sub
xor
loope
repz
sub
outsl
lahf
mov
out
pusha
or
cmpsb
push
leave
pop
add
pop
adc
cmp
outsl
or
pop
sbbb
mov
fiadds
rcrl
dec
and
dec
fisubrs
mov
and
insb
scas
stc
sbb
cmp
lahf
or
es
inc
pop
fldl
scas
das
mov
pop
add
out
cmpsb
xor
adc
out
lods
lods
mov
xchg
pusha
adc
jmp
les
loop
cs
scas
adc
xchg
addr16
or
sbb
mov
outsb
jle
sub
fwait
add
dec
inc
repnz
mov
dec
cmpsb
pusha
insl
aas
cmp
mov
das
stos
call
scas
cs
lahf
in
or
adc
orl
mov
imul
cmp
jle
dec
dec
das
je
jmp
insb
xor
mov
sbb
mov
jl
in
test
pop
das
addr16
fistpll
add
jae
lods
test
xlat
cs
inc
adc
mov
add
lea
push
dec
push
repz
ret
js
iret
flds
arpl
shlb
push
push
bt
cmpl
inc
das
mov
pop
daa
das
fcmovbe
in
or
push
insb
std
push
idivl
sbb
ss
les
jecxz
mov
lock
jl
mov
add
scas
std
nop
adc
or
lods
lcall
insl
sbb
je
mov
test
pushf
imul
lods
jl
mov
repnz
scas
fcompl
xorl
mov
dec
sub
xor
aas
or
xor
test
shr
adc
dec
and
das
mov
mov
adc
out
in
pusha
mov
aam
insb
es
imul
pop
fbstp
test
fucomp
call
out
sbb
pop
cmp
test
cmc
dec
mov
add
sahf
lods
mov
scas
lods
cmp
lods
test
adc
push
ja
push
or
sbb
adc
mov
pop
add
jle
sub
jge
insb
scas
lea
in
dec
stos
jg
jl
mov
or
mov
shl
leave
pop
sbb
outsb
jmp
fdivr
std
push
push
lds
das
cli
lcall
jle
adc
repnz
push
mov
repz
inc
xlat
cs
out
ret
mov
orl
fistps
testl
pop
rorl
adc
mov
pop
push
dec
jae
pop
mov
xor
outsl
ds
mov
rcl
fdivrs
inc
addb
repnz
mov
push
ds
bound
sarb
add
dec
js
bound
mov
sub
clc
insl
int
pop
js
mov
mov
jo
into
inc
ljmp
jle
pushf
or
aas
cld
sbb
add
jl
repz
xor
adc
bound
std
je
addr16
push
xor
flds
hlt
lods
pop
outsl
iret
sbbl
aad
pop
std
outsb
jg
xchg
jnp
dec
cmpsb
shrb
jl
clc
pop
push
xchg
sub
jne
pop
das
pusha
xchg
addr16
and
test
jg
lret
sub
test
in
fistps
idivb
jge
push
sbb
pop
mov
outsb
inc
push
rol
push
pop
aam
icebp
adc
mov
and
popf
cmp
cmp
ficomps
outsl
push
dec
or
loop
mov
push
hlt
push
inc
in
test
lods
adc
pop
clc
jle
int
add
imulb
mov
push
mov
adc
xor
lcall
clc
pop
or
aam
dec
jns
pop
sbb
std
jecxz
sbb
push
xchg
mov
sbb
dec
push
inc
rcll
out
or
mov
outsb
negl
and
rcrl
out
jmp
fsubr
loop
mov
scas
popa
iret
dec
xor
add
push
insb
movsb
sbb
sbb
pop
dec
pop
cli
cmc
fnsave
out
pop
xor
lea
fistps
cmp
push
repnz
mov
sarb
dec
fbstp
push
das
out
in
push
in
out
add
aas
mov
jecxz
add
psllq
dec
mov
mov
iret
addr16
insb
add
pushf
adc
cs
or
jns
cltd
mov
pop
or
aaa
xor
pushf
jo
fadds
mov
mov
cmp
and
inc
mov
sub
and
mov
push
outsb
sbb
jecxz
sbb
sbb
lock
lahf
js
insl
mov
decb
lock
lods
cmp
les
adc
scas
push
outsl
jbe
mov
sub
insl
mov
insb
packuswb
mov
jecxz
mov
mov
jge
mov
or
pop
idivb
in
jl
xor
pop
add
dec
out
outsl
repnz
cmp
add
lahf
add
push
stos
call
and
lahf
imulb
insb
xor
mov
pop
and
xor
or
out
nop
iret
pop
stos
pop
dec
mov
pop
cmpsl
cmpb
scas
mov
call
push
idivl
in
pop
popf
std
mov
in
jns
push
or
out
insl
add
pavgw
in
outsb
out
jns
add
fcmovu
popf
ljmp
and
aam
push
push
mov
add
jge
dec
jae
push
scas
cmp
pop
ds
adc
gs
and
mov
lds
insw
aaa
adc
xor
call
outsb
push
scas
je
fldl
mov
addl
dec
jo
in
lea
das
push
jge
in
lock
outsb
sbb
sub
ja
fnstsw
sbb
pop
testl
mov
iret
test
xchg
cltd
jg
adc
ds
xchg
jmp
fistpll
inc
push
aaa
jle
scas
pop
inc
enter
fldcw
dec
sbb
or
je
pop
pushf
mov
pop
mov
mov
push
stos
pop
hlt
mov
outsb
sbb
push
das
outsl
pop
aam
pushf
xor
test
jle
or
jge
std
test
or
popf
push
adc
into
pop
scas
divps
cmp
xor
mov
adc
ret
enter
decl
jle
int
jmp
repz
jl
int
setle
jmp
and
out
xor
mov
gs
push
add
xchg
fisttps
iret
dec
cld
mov
add
int
add
repz
pop
es
jecxz
push
call
or
xor
xchg
movsl
idiv
das
push
sub
repz
dec
xchg
adc
aas
mov
in
add
inc
outsb
push
and
push
adc
inc
and
loop
in
mov
call
insb
ja
bswap
addr16
cli
or
sbb
scas
push
rcll
fdivr
mov
out
hlt
or
pop
sbb
xchg
dec
jne
mov
and
loopne
popf
iret
lea
mov
push
loop
cld
or
jle
or
cs
adc
xchg
outsb
or
cld
xor
aas
pop
scas
sub
cmp
int
jl
mov
cld
inc
sub
mov
or
push
push
gs
std
outsb
mov
pusha
add
mov
shl
mov
inc
jb
push
out
push
dec
bound
xchg
aam
cmpsb
mov
pop
out
and
adc
into
pop
loop
fcmovne
fstl
add
out
insl
inc
scas
push
std
dec
add
lahf
sarb
sbb
mov
or
outsb
lea
jmp
loop,pt
jae
insl
inc
mov
outsl
sub
insl
sbb
push
jbe
fisttps
add
and
adc
loopne
push
jl
and
push
or
imul
stos
adc
xlat
mov
jmp
pop
cmpl
pop
jae
jmp
int3
popf
stos
jg
lock
lea
jmp
sub
sub
jl
and
cmp
jne
push
iret
mov
aaa
cwtl
int3
lret
js
xor
clc
fnstsw
lcall
cmc
in
lods
std
jae
or
add
push
decl
inc
aas
sbb
jge
into
mov
test
xchg
scas
xor
enter
aam
push
mov
mov
or
clc
scas
dec
cmp
mov
data16
mov
imul
lea
dec
push
push
push
pushf
js
sahf
imul
and
cli
in
sbb
stc
lahf
ljmp
pop
shrb
jb
addr16
add
or
pop
sub
push
ds
push
xlat
int
pop
inc
pop
push
xchg
xchg
fiaddl
dec
inc
push
js
fisttps
xor
stos
mov
and
dec
and
aas
popf
imul
xchg
fidivs
pop
nop
push
xor
jl
out
sti
repnz
cmp
fwait
adc
pmuludq
aas
dec
sbb
out
add
push
dec
stos
dec
shll
xor
outsb
jl
cmp
int
mov
ds
xorl
popw
mov
mov
sarb
iret
inc
repz
mov
rorb
and
scas
sbb
dec
ds
jl
in
dec
scas
jg
cli
insb
cmp
adc
std
adc
push
and
ret
loop
cmp
jg
or
pop
in
movsl
adc
dec
in
xchg
mov
jnp
pop
jmp
int
xor
call
jmp
pop
xchg
negb
push
frstor
scas
mov
int
in
outsl
lret
xor
jmp
mov
lods
push
pop
lock
sub
cmp
or
cmp
sbb
sbb
or
getsec
pop
xor
out
outsb
lahf
adc
dec
lret
std
push
je
sub
dec
ljmp
adc
pop
fwait
jecxz
mov
cwtl
mov
mov
xor
adc
adcl
sbb
fs
scas
decl
push
jecxz
pop
or
cld
cld
jg
push
insl
or
fidivl
das
sub
ljmp
incb
mov
cld
xor
cmp
sub
and
repz
jecxz
scas
std
outsb
jne
sti
aaa
insl
std
std
decl
addl
mov
or
repz
fdivrs
repz
dec
sahf
dec
cmp
or
push
idivb
cmpb
repz
mov
imull
aas
ljmp
imul
sbb
push
jmp
scas
pop
mov
mov
stos
outsl
movsb
mov
inc
cmp
adc
fsts
shrl
adc
mov
xor
jge
insl
pop
insl
iret
push
or
xorl
hlt
aad
pop
cmp
xchg
fildll
inc
in
pop
sar
test
jl
or
sbb
xchg
lods
pandn
fiaddl
outsb
scas
or
dec
mov
xchg
jb
aaa
jo
pop
xor
add
iret
cld
repnz
xor
jl
fistpll
outsb
ja
std
dec
sarb
outsb
and
add
push
sbb
mov
lods
push
or
lods
dec
xor
insl
mov
leave
arpl
std
push
nopl
dec
lahf
insl
mov
es
xchg
and
jl
pop
xchg
das
dec
lods
ret
jbe,pt
outsb
or
mov
mov
setg
xor
dec
incl
xchg
xlat
in
add
pop
js
outsl
push
in
ss
cs
data16
cmp
mov
test
fidivrl
pushf
outsb
add
aad
addr16
insb
xor
js
out
jmp
js
xchg
xchg
stos
fbld
inc
shr
cmp
jo
cld
out
adc
outsl
xor
ds
rcr
in
inc
add
jmp
or
loop
lea
into
push
and
push
fs
xor
pop
loopne
cli
sbb
or
adc
out
cmp
pop
push
jle
testl
repz
cltd
mov
jp
movsb
popf
ja
into
ja
jg
or
arpl
in
sbb
int3
push
or
mov
jmp
das
pop
scas
pop
mov
mov
std
xchg
jecxz
ret
ret
push
das
rorl
js
dec
decb
mov
or
outsb
pop
mov
lea
lods
cmp
lret
dec
dec
push
ret
or
mov
sbb
xchg
nop
outsl
loopne
icebp
sbb
xchg
jge
faddl
inc
iret
aas
xchg
lahf
test
xor
xchg
adc
imull
pop
cmp
pop
pop
jo
mov
adc
mov
filds
mov
or
int3
cld
test
mov
mov
les
int3
das
mov
cmp
push
add
push
mov
xor
addr16
out
add
lods
lahf
mov
popa
push
xor
cmp
in
stc
mov
mov
addr16
sbb
dec
and
jl
in
lret
mov
mov
or
les
movsl
scas
or
dec
out
add
or
or
xor
adc
outsl
mov
imul
mov
sub
lret
pop
adc
outsl
xor
pop
insl
ds
imul
push
xor
int3
popf
sbb
dec
or
das
jae
mov
push
loopne
xor
lret
pop
fldcw
pop
push
movsl
sarl
and
and
dec
lret
in
daa
mov
das
jle
or
std
jns
pop
rcll
ret
add
ret
push
mov
inc
subb
dec
inc
shrl
je
mov
out
or
out
lods
jns
lock
pop
sbb
mov
jg
jge
push
inc
jo
je
data16
inc
dec
dec
jp
fsubrl
iret
cs
insb
or
dec
ds
cmp
xchg
mov
push
sub
push
jecxz
repz
scas
jle
rdmsr
sub
cs
xchg
xor
insb
xlat
xor
or
movsl
bound
add
xor
int
xchg
jge
mov
loope
insl
fldl
repz
clc
icebp
scas
cmp
jge
cli
sbb
inc
cmp
push
adc
outsl
int
fwait
mov
outsl
and
outsl
out
and
pop
push
shlb
mov
xor
push
notl
add
lret
jmp
mov
clc
push
jl
jg
dec
mov
ljmp
andl
jl
jle
jl
cmp
mov
decl
sbb
or
jecxz
push
int
push
repz
sbb
imulb
lea
out
out
push
jl
or
xchg
negl
cmc
clc
inc
mov
add
outsl
orb
sti
out
fimull
std
add
adc
mov
dec
ds
mov
cmp
and
mov
cmpl
mov
loop
pop
std
aaa
and
mov
mov
iret
dec
ds
into
adc
popf
in
sub
xor
mov
in
lock
jle
sub
outsb
es
push
in
and
inc
dec
sbb
add
jg
icebp
cli
inc
dec
inc
pop
in
stos
aam
add
incb
mov
xor
push
fcompl
iret
pop
or
in
pusha
loopne
insb
and
push
iret
sub
mov
push
pop
cld
es
pop
mov
cmp
roll
iret
scas
outsb
stos
xchg
ret
out
inc
mov
xchg
or
or
jge
sub
dec
les
vmread
adc
sbbl
dec
push
cwtl
xor
pop
insb
int
jge
iret
sbb
in
outsb
xorb
jmp
or
jl
or
jns
out
lods
ffreep
adc
jmp
andl
pusha
or
pop
int
std
sbb
dec
mov
arpl
test
pop
or
popf
mov
jecxz
fisttps
seta
sub
dec
xor
cwtl
jge
sbb
pop
cmp
jle
cltd
loopne
lds
outsl
jecxz
jae
das
inc
rclb
fistpll
int3
hlt
in
mov
push
dec
popf
jb
iret
int
xor
shlb
and
xchg
cmp
add
mov
xor
or
jecxz
insl
and
outsl
int
popf
mov
stos
loop
repz
addr16
pop
stos
jmp
fidivrl
cmc
data16
dec
sahf
jae
mov
iret
pop
shrl
jg
aas
rorl
mov
mov
lock
lahf
sbb
div
mov
cmpb
popf
stos
int
fistpll
xchg
inc
xchg
scas
xlat
cmpl
std
scas
dec
popa
in
fbld
lahf
pop
ss
mov
bsr
dec
out
cmp
sub
pop
fsub
js
pop
jecxz
jl
mov
or
leave
inc
ja
push
jmp
add
jl
jl
rorl
fildll
mov
adc
pop
xchg
test
jns
mov
adc
or
pop
adc
mov
sbb
mov
mov
or
popf
aas
lock
mov
enter
and
cmp
les
loopne
jmp
sti
cmp
inc
mov
mov
push
inc
pop
push
or
or
cwtl
mov
fstl
fdivr
dec
int
push
sbb
sbb
data16
stos
adc
mov
jle
jae
xchg
pop
clc
push
cmp
sub
int
mov
pop
xor
mov
std
cli
arpl
pushf
push
add
ud2
cwtl
pop
mov
insl
dec
xchg
adc
in
push
push
adc
sub
and
ss
and
loop
cs
jbe
loop
add
bound
out
in
dec
fnstcw
repnz
add
outsl
decl
mov
mov
push
or
in
fimull
out
dec
dec
ficomps
insl
and
pop
and
jl
adc
jg
lock
mov
divb
xchg
sbb
movb
int3
pop
rolb
pop
or
hlt
pop
lods
insl
fst
cwtl
outsb
add
insl
push
popa
aas
addr16
inc
dec
cs
adc
xor
mov
addr16
push
fstps
jmp
fisttpll
cld
fildll
mov
das
lods
shrl
jne
sbb
addr16
in
mov
push
dec
push
adc
dec
inc
push
fadd
int
or
fnstsw
das
negl
and
lret
ss
outsb
xor
js
fildl
inc
sub
sbb
jle
jmp
iret
mov
xor
sarl
cmp
stos
dec
outsl
adc
xor
xchg
inc
jnp
xor
sbb
xor
lods
lods
sub
rcr
fisttps
lcall
add
lret
popf
cmp
cmp
add
pop
dec
lods
dec
push
adc
sbb
and
sub
mov
aad
jg
jge
popa
cmc
or
push
loopne
dec
sub
lret
shlb
jl,pn
sbb
push
mov
xor
das
pop
decl
and
pop
push
mov
shrl
mov
outsl
or
repz
or
cld
int
dec
sub
xor
in
std
sbbb
dec
mov
cmp
jo
or
dec
je
xlat
cs
sbb
dec
jns
or
mov
rcrl
rorl
lcall
fldt
or
sbb
clc
jns
sbb
in
pushf
xchg
outsb
out
out
data16
or
repz
push
addr16
outsb
pop
or
scas
lock
mov
sub
push
push
push
bndldx
iret
dec
inc
add
mov
and
repz
shrb
adc
in
aas
lock
out
fistpll
int
xor
push
push
mov
inc
push
jg
movq
fisttps
test
jl
push
add
movsl
mov
outsb
inc
push
aas
dec
adc
out
xor
pop
scas
mov
xor
sbbl
or
inc
out
jg
loop
fidivrl
push
inc
jno
lret
rorb
dec
push
or
lods
mov
cmp
jecxz
and
sti
ljmp
aas
gs
outsb
xor
dec
xchg
lock
cmp
cmp
int
pop
or
hlt
cli
jge
gs
jmp
cmp
jmp
and
mov
or
out
jl
pop
iret
mov
das
rolb
addr16
idivl
push
lock
mov
pusha
dec
cld
mov
in
push
add
mov
mov
mov
mov
iret
sub
idivl
sub
cmp
fnstenv
jmp
outsb
and
pop
popf
pusha
in
js
pop
pop
pop
pusha
clc
jmp
shrb
repz
add
push
call
push
je
mov
dec
push
outsb
or
push
ds
mov
pop
fisttpll
lods
xor
push
pusha
push
or
fnsave
jne
xor
mov
jg
cmp
cld
popf
js
pop
mov
mov
dec
insl
in
sub
sbb
arpl
xor
sub
jo
pop
daa
aam
subb
mov
cmp
into
in
cli
jmp
in
jg
insl
je
insl
or
mov
dec
pop
jge
das
pop
cmp
sbb
push
outsb
insb
outsl
pusha
das
push
xor
bound
sbb
xor
adc
jle
push
jge
insb
add
or
pushl
push
lods
fldcw
mov
addr16
add
jecxz
pop
sub
sub
inc
sbb
ret
or
roll
pop
fistps
sbb
loop
mov
xor
lock
dec
dec
mov
add
mov
stos
dec
in
ss
or
scas
push
dec
cmpb
ljmp
adc
nop
jmp
scas
dec
out
mov
ss
out
pop
sub
push
stos
xchg
mov
fstps
cwtl
pop
or
push
insb
popf
fists
xor
push
or
dec
pop
adc
jge,pn
inc
and
aas
dec
xchg
xchg
push
push
lret
jl
test
mov
mov
popf
pushf
in
shrb
orl
add
jb
out
pop
int
arpl
mov
mov
xor
jbe
dec
sbb
inc
lods
lea
and
mov
pop
xchg
sub
insb
dec
cs
dec
shr
push
iret
jp
and
jge
mov
cmp
rcrb
cs
adc
push
sahf
jg
sub
scas
orl
dec
mov
iret
loope
cvttps2pi
jecxz
repz
scas
cmpsl
inc
dec
add
repnz
loope
mov
push
ds
movsl
das
outsl
inc
add
movsb
loope
out
jb
lods
cld
mov
mov
iret
jae
pop
add
cmp
out
push
dec
mov
jecxz
pusha
mov
dec
adc
pop
pop
cmp
inc
cmpb
js
xlat
sbb
pop
pop
mov
insl
jle
sbb
push
lods
dec
mov
pop
push
outsb
insl
out
orl
mov
std
pop
and
mov
sub
lods
mov
sbb
loopne
push
pop
sbb
inc
push
outsl
test
loope
pop
into
pop
jbe
sub
sub
repnz
sbb
pop
mulb
je
push
dec
jle
mov
inc
in
das
xor
jge
xor
out
testl
xor
jg
mov
push
mull
or
push
movsb
mov
jecxz
sbb
mov
add
pop
outsl
xchg
in
popf
outsb
js
aad
pop
xor
cld
stc
sub
or
mov
out
jle
inc
lea
stos
push
cmc
stos
push
cli
stos
push
cld
testb
xchg
sbb
addr16
repz
push
fnsave
int3
cld
cs
sub
sti
adc
jg
das
inc
dec
in
fcompl
push
movsl
hlt
fs
or
out
pushf
dec
divb
jo
mov
and
loopne
xlat
add
or
lcall
iret
sbb
pop
into
xchg
clc
loopne
dec
lods
sub
inc
fstp
add
das
mov
jg
outsb
push
ret
dec
out
cmc
xchg
je
scas
jl
insl
pop
subl
sub
sub
sub
cmpsl
and
jg
pop
addr16
jo
out
andb
jecxz
pushl
mov
push
dec
pop
mov
into
stos
pop
inc
or
aam
scas
jo
xor
mov
outsb
or
fisttps
repz
jmp
and
and
cmpsl
inc
mov
pop
int3
aaa
mov
aam
sub
cmp
mov
jl
scas
sbb
fistpll
int
cld
js
mov
dec
outsl
jg
ret
push
mov
jmp
fsubrs
or
pop
shlb
lods
sub
ds
mov
push
fimuls
mov
addr16
inc
popa
dec
lea
pop
sbb
mov
or
cwtl
js
and
pop
push
jge
insl
mov
iret
inc
out
pop
add
push
adc
iret
js
push
mov
pushl
notb
pop
rorl
decb
in
or
jge
das
in
scas
sub
jne,pt
test
out
dec
lods
mov
or
push
scas
je
inc
outsb
and
in
sub
fwait
inc
ja
add
dec
jne
arpl
push
or
push
xchg
jge
pop
xor
stos
sbb
insb
repz
ljmp
das
push
popa
scas
loope
outsb
adc
int3
lods
adc
pusha
ret
xchg
pop
jle
mov
xlat
push
mov
mov
pop
pop
pusha
popf
xchg
add
out
cmc
cs
jg
dec
jg
std
xchg
add
pop
lahf
mov
ja
outsb
aas
pop
fldl
sub
cmp
stc
jge
lahf
pop
jno
dec
mov
insl
into
aas
ljmp
inc
lea
mov
or
in
rcr
jle
xchg
cmpsl
adc
es
pop
aaa
out
add
jecxz
push
aaa
in
adc
cmp
add
jbe,pn
cmp
adc
adc
outsl
push
mov
inc
insl
repz
call
xchg
push
jae
popf
je
mov
ljmp
hlt
in
pop
cmpsl
testb
jg
sbb
pop
pop
pop
cmp
sbb
fucomp
scas
mov
cmpsl
xor
stos
mov
mov
mov
decl
addr16
popf
out
xor
lea
filds
jne
push
cld
mov
jge
lahf
push
mov
pop
movsl
push
fnsave
scas
in
xor
dec
cmp
sub
jmp
mov
loopne
sbb
lock
pop
dec
insl
mov
xor
addr16
pop
outsl
clc
adc
mov
aas
divl
push
ret
mov
add
sub
jge
xorl
testb
repz
outsb
push
xchg
pop
add
outsl
mov
mov
dec
sub
adc
fdivrl
int
push
iret
das
sub
and
xchg
sarl
dec
insl
pop
sub
int
lret
inc
cmpsl
push
jge
pop
pop
in
xor
xor
ret
sub
lea
dec
mov
fcoml
cmp
cmp
ss
fistl
ror
aas
and
ds
sub
lea
adc
iret
hlt
jmp
jle
xor
sbb
scas
int
clc
mov
out
mov
daa
insl
out
ja
leave
mov
fnstcw
adc
das
out
xchg
or
and
into
pop
mov
orl
int
mov
xor
adc
xchg
xchg
outsl
scas
push
std
iret
in
sub
push
jmp
add
cld
or
insl
mov
lods
adc
enter
ror
lea
mov
mov
dec
ds
and
int3
mov
popa
and
sbb
shrl
mov
sbb
sub
cmp
sub
dec
sar
fadd
int
bound
out
fstpl
repz
cld
pop
or
jle
xchg
adc
pop
cmpsl
lock
insl
jle
xor
xchg
stos
fscale
test
push
std
sub
pop
ds
xor
mov
pop
xor
psrad
jne
in
imul
das
sbb
cld
jns
lret
push
jp
decl
sub
adc
mov
push
xlat
jle
dec
mov
push
inc
push
mov
dec
std
enter
jno
nop
clc
das
or
lock
fistps
add
push
lahf
pop
outsb
pop
xor
pop
sub
popf
push
in
jns
mov
decb
xor
push
ljmp
fs
jecxz
ds
test
inc
addl
negl
cmp
popa
adc
cltd
push
pusha
lret
adc
gs
jbe
pop
outsb
mov
test
repnz
sub
popa
push
iret
pop
jae
jmp
push
insb
scas
push
out
dec
mov
push
int
sub
es
scas
dec
sub
mov
fs
das
xor
negl
push
push
push
inc
mov
ds
out
mov
lea
incl
mov
in
aam
fists
insl
xor
lahf
add
pushf
or
adc
cs
pop
lea
and
add
ret
addr16
mov
mov
or
push
loopne
jmp
pushf
sub
mov
sub
or
test
mov
ror
inc
call
push
lahf
push
or
incb
in
stos
fnstsw
fidivs
ret
addr16
scas
add
adc
dec
ss
out
rol
push
insl
xor
aam
outsb
ljmp
repz
out
not
hlt
ret
sbb
or
ds
adc
repnz
insb
jle
mov
cwtl
insl
stos
push
aaa
fdivrs
mov
sbb
sbb
rep
mov
and
out
mov
adc
js
das
jge
or
hlt
nop
fbstp
ret
mov
test
cmp
jecxz
stc
pop
or
shrb
scas
sbb
cvtpi2ps
and
lea
sti
and
ds
and
arpl
or
pop
aas
repz
mov
mov
out
xchg
iret
frstor
cli
push
push
or
jge
mov
sbb
adc
mov
decb
mul
jmp
sub
dec
clc
mov
ljmp
dec
sbb
mov
or
push
insl
jl
mov
sti
insb
inc
decb
lock
lods
add
push
out
popa
jl
pop
mov
int
in
mov
dec
imul
scas
and
jecxz
push
xor
mov
pop
sub
lods
jo
sar
popf
std
into
inc
or
cmp
fdiv
pop
and
jl
xchg
sbbl
aam
shrl
iret
xor
std
jno
cld
inc
sub
insb
lret
jmp
fxrstor
fildll
call
std
jmp
ds
iret
mov
jnp
scas
sub
and
sbb
inc
aaa
jge
repz
xlat
cld
testb
into
inc
hlt
aaa
popf
js
je
lods
sub
test
sbb
aas
xor
sub
or
dec
mov
jmp
mov
ds
in
pop
ret
js
pop
hlt
and
mov
sub
cmpb
jmp
xchg
jl
cmpl
xor
ret
adc
xor
lods
and
movsb
sbb
inc
mov
mov
xlat
jb
jbe
loope
dec
and
xor
lea
ret
icebp
jae
mov
addr16
and
and
cmp
mov
out
hlt
dec
mov
movsl
js
add
lahf
aas
int
sub
push
jge
in
push
in
js
je
test
fisttpll
sub
ret
std
or
or
popf
or
aaa
outsb
adc
insl
dec
mov
jbe
pop
cld
inc
js
or
dec
pop
mov
mov
sbb
std
out
mov
lea
and
lock
mov
outsb
repz
cmp
jno
das
push
push
mov
jo
test
adc
stos
out
sub
pop
iret
mov
in
cltd
and
sbb
jp
jecxz
ss
dec
jmp
sub
mov
inc
aam
fidivrs
dec
paddusb
fnstenv
jne
enter
int3
and
xor
loopne
push
dec
outsl
cs
in
and
push
ds
jmp
addr16
pop
je
iret
outsb
fs
push
pop
push
mov
out
dec
mov
adc
shll
cmovg
push
add
add
and
pop
jmp
int
jmp
scas
addr16
ret
das
mov
dec
popf
pop
sub
call
mov
sbb
loope
pop
repnz
movsb
lods
lods
sbb
cld
pop
push
inc
jecxz
push
adc
xor
cld
inc
das
push
loop
pop
jle
jg
and
nop
scas
pop
cmp
inc
or
xcrypt-cbc
cmpsl
push
jl
fbld
lock
in
cmp
decb
mov
int
inc
lea
out
repz
movsl
mov
or
push
arpl
adc
pusha
aaa
sbb
stos
repnz
and
outsl
push
cld
dec
daa
int
dec
outsb
add
sbb
sub
test
or
lea
and
loope
adc
rol
dec
leave
pop
or
pop
mov
jg
push
int
ss
sbb
xor
sub
scas
pop
mov
lahf
sbb
sub
add
ss
push
mov
js
adc
frstor
popf
aad
fisubrl
mov
xor
movsl
add
adc
aad
and
push
add
cmp
push
outsb
jge
stos
mov
popf
mov
lea
jmp
jg
in
mulb
rcrl
popf
pop
cs
jnp
jno
add
mov
inc
outsl
inc
dec
out
xor
pop
dec
shrb
sbb
inc
mov
pusha
push
jle
xlat
stos
into
pop
add
dec
sub
scas
add
sub
bound
mov
xchg
adc
add
loopne
iret
mov
mov
push
jae
cwtl
mov
or
or
fisttpll
pop
sti
pop
jecxz
push
cmp
loope
lods
arpl
pop
dec
jmp
scas
push
inc
xor
scas
insb
outsb
or
filds
adc
rolb
xlat
ljmp
repz
cld
xchg
mov
fst
or
in
sbb
pop
jae
add
sub
jge
sub
xlat
hlt
inc
rep
dec
in
xchg
pop
sub
and
roll
pop
scas
or
lcall
sub
bound
or
jle
dec
xchg
cmp
sbb
mov
pop
in
leave
push
jge
inc
jmp
mov
bswap
out
dec
push
stos
fdivr
pop
pop
jge
add
ds
or
or
mov
mov
jecxz
mov
mov
pop
xor
push
addl
push
bnd
adc
insb
std
sub
gs
sbb
insl
mov
popf
dec
dec
jge
xchg
xchg
shll
xchg
in
mov
enter
iret
and
test
xor
mov
shr
pushl
inc
cmc
insb
outsl
call
push
mov
cbtw
adc
pop
out
cld
clc
ficompl
sbb
cmp
dec
ljmp
in
outsl
lea
mov
adc
out
xor
cmpsl
xchg
and
in
or
sbb
nop
std
sbb
mov
call
xor
loope
xor
jmp
scas
fdivrs
ljmp
mov
inc
dec
add
sub
or
lahf
jmp
mov
xor
popf
sbbl
dec
mov
sbb
int
iret
lods
aaa
repz
adc
fimuls
xor
in
loopne
cltd
cld
imul
adc
adc
repz
aam
scas
popf
fcoms
push
loope
out
jae
pop
cltd
icebp
scas
ret
mov
mov
push
ret
pop
clc
push
outsl
and
imul
pop
aaa
xor
xor
mov
pop
xor
push
mov
lcall
mov
pop
pop
sub
clc
add
push
push
sub
aas
mov
subb
jmp
mov
push
js
jl
aaa
outsb
mov
cmpsl
sub
pop
clc
fstp
adc
sbb
xchg
and
mov
iret
into
jo
or
aaa
clc
xor
loop
push
pop
cmpsb
jl
mov
or
mov
jecxz
ds
jg
push
mov
push
lods
das
mov
xlat
push
fnsave
jb
jl
jecxz
sub
push
cld
rep
mov
ret
bound
addr16
and
in
mov
int3
jmp
jge
sub
adc
push
call
and
pop
lea
mov
ror
add
movq
xchg
pop
dec
outsb
adc
mov
flds
test
insl
adcl
imul
xchg
decl
popa
out
js
push
mov
pop
sub
fdivr
lcall
add
mov
insl
std
out
xchg
repz
js
ficoml
sbb
hlt
jae
push
in
ds
or
adc
addr16
imulb
test
scas
sbb
jge
pop
outsb
sub
insl
push
inc
adc
sti
insl
mov
inc
or
out
cld
sbbl
sub
sarl
or
jg
lahf
or
mov
mov
jno,pt
inc
imul
push
hlt
push
std
or
mov
pop
push
xchg
xor
push
adc
mov
push
sbb
addr16
adc
std
mov
int3
out
lea
popa
lahf
popf
repz
mov
inc
push
es
ss
dec
fists
loop
or
push
aas
mov
cmp
sub
mov
and
mov
cmp
mov
pop
and
rcl
push
xchg
adc
xlat
pushf
pop
js
loop
outsl
sub
or
pop
hlt
imul
popf
das
test
das
testb
int3
mov
leave
dec
lea
sarb
xor
add
push
fiadds
dec
sbb
mov
ja
adc
mov
cmp
in
push
int
xor
dec
add
push
lahf
aaa
das
aad
lock
inc
sub
dec
sub
adc
mov
sbb
jo
shlb
xchg
push
xor
lea
inc
nop
push
push
or
push
pusha
ja
jnp
mov
push
push
or
lods
mov
pop
insb
jmp
aaa
fucomp
mov
dec
fisttps
sbb
iret
loop
and
jg
pop
test
mov
push
xchg
and
je
rorl
xor
inc
insl
jo
outsl
scas
dec
pop
in
pop
fbstp
insb
lods
jl
mov
mov
adc
sbb
lock
cs
outsb
bswap
mov
xor
inc
adc
js
pop
aas
push
mov
insb
out
out
jo
inc
mov
dec
xor
insb
jge
cld
dec
out
ret
insl
push
push
xor
inc
xchg
pop
mov
jecxz
mov
out
mov
fnsave
push
sbb
lahf
dec
xchg
outsl
pop
xor
in
insb
pop
dec
in
adc
pop
dec
jl
lock
or
outsb
add
je
out
movsl
jmp
fnstsw
negl
aas
push
clc
mov
pop
call
pop
fucomip
push
sub
insl
pop
mov
lods
pop
popf
icebp
inc
or
push
jmp
cli
test
mov
push
rorb
and
shr
daa
dec
in
mov
mov
andb
repnz
js
and
jmp
cs
mov
sub
push
pushf
add
out
sub
mov
mov
nopl
dec
mov
push
xor
sbb
adc
or
adc
or
mov
dec
iret
in
movsl
pop
push
out
loopne
jmp
jge
fisttpll
ss
jnp
xlat
jne
mov
test
shrb
jmp
outsl
push
int3
in
jecxz
mov
xor
jl
pop
pop
rcr
xchg
pop
push
iret
fisubl
testb
push
lahf
scas
das
pop
xor
decl
mov
decb
hlt
daa
mov
lret
adc
pop
cmp
cmp
cs
xor
fstps
sahf
cli
add
insb
inc
inc
dec
mov
lods
pop
push
inc
pslld
addl
jae
cwtl
and
xchg
int3
lods
das
mov
mov
ljmp
mov
dec
pop
jecxz
mov
neg
lods
ds
jl
pusha
pop
std
adc
dec
sbb
pop
jbe
inc
mov
fstl
repz
xchg
cs
cmp
mov
inc
inc
ljmp
sbb
filds
adc
adc
cld
jbe
nop
cmp
mov
pop
mov
decb
lea
ja
in
in
aaa
std
pop
jmp
movsb
bound
jge
cld
fucomp
subb
ss
xor
lea
nop
pusha
cmp
insb
jae
int3
dec
addr16
jmp
xor
out
cs
push
pop
mov
and
jecxz
in
inc
repz
dec
fwait
ljmp
pusha
aas
dec
xor
shlb
decl
cmp
dec
dec
dec
lahf
push
fbstp
xor
sub
lcall
repnz
out
cwtl
cmp
pop
mov
repnz
in
std
add
mov
es
jg
inc
jmp
enter
dec
pusha
dec
insl
dec
rol
dec
addr16
fcomip
adc
fildll
push
fadds
adc
xlat
mov
fwait
and
outsl
ficoms
adc
js
cmpsl
cld
mov
outsl
in
sbb
inc
fisttps
dec
add
mov
push
ficompl
mov
out
outsb
or
jge
div
pop
lock
pop
dec
jg
gs
rep
cmp
call
scas
and
pop
pop
rdpmc
stos
nop
fildll
shrl
subl
push
ja
add
pop
xchg
xor
jp
and
out
or
jbe
mov
sub
push
js
push
insl
xchg
sbb
push
enter
lods
sub
cmp
call
jl
incb
cmpb
fidivrl
es
mov
fists
dec
and
faddl
sub
gs
xor
cs
sbb
testl
fbld
int
subb
push
add
lods
outsl
xchg
sbb
sub
pushl
dec
and
cld
jecxz
pop
lahf
mov
jge
test
push
imul
and
jle
xchg
scas
sbb
dec
lea
das
or
adc
pop
adc
in
mov
hlt
inc
scas
addr16
push
nop
dec
jmp
adc
ds
lret
cmpsl
imul
jp
outsl
adc
out
repz
or
jl
scas
push
push
or
lods
sbb
jo
mov
pop
js
jg
xor
add
pop
xor
xor
pop
outsb
lahf
sub
out
cwtl
scas
jg
cmp
jno
das
push
popa
push
xchg
adc
dec
insl
out
or
jbe
insl
lods
dec
cld
pop
sub
rcrl
mov
xchg
lea
adc
lahf
cmpsb
jmp
cmc
jb
or
jbe
ljmp
dec
int
insb
jmp
incl
dec
out
shll
dec
or
mov
int3
pushf
insl
scas
pop
dec
outsb
dec
stos
cmc
push
idiv
adc
jg
mov
imul
frstor
cmpl
repnz
push
int3
push
and
lods
negb
scas
jmp
push
xlat
pop
lods
outsb
push
pop
jnp
xchg
xchg
inc
dec
loopne
in
imul
js
sub
and
jge
adc
sub
cmpsb
push
movsl
jecxz
psrld
sbb
lret
popf
and
mov
shr
jae
aad
out
orps
mov
sbb
pop
cld
push
cmp
int
inc
pop
fldcw
mov
jo
or
mov
or
sub
cmp
cs
popl
cld
mov
xchg
adc
loopne
dec
and
std
or
mov
jge
lea
rclb
xor
rcrl
and
in
roll
std
mov
sbb
scas
dec
adc
jg
in
inc
sbb
jg
jl
jle
jge
lods
into
mov
jp
lea
jmp
push
mov
repz
push
aam
jmp
jae
xor
and
out
rcll
repz
push
shl
adc
nop
ret
inc
pop
std
inc
jg
aas
mov
jae
mov
sbb
outsb
lea
mov
lahf
cld
aam
pop
xor
inc
add
mov
repnz
pop
or
jge
outsl
insl
push
je
add
inc
mov
psubsw
jmp
into
std
imul
add
push
jle
sub
addr16
xchg
fdivp
inc
and
lods
cmp
gs
pop
test
or
rcl
inc
std
lcall
cmc
stos
mov
stos
fnstcw
outsl
pop
out
das
and
into
jmp
and
hlt
mov
push
pop
pop
fsubrs
sbb
iret
outsb
popf
addl
cmpsl
and
pop
js
pop
cld
movsl
or
sbb
iret
and
push
mov
cld
test
in
mov
push
push
loope
pop
scas
or
dec
inc
clc
mov
jle
decb
push
pop
das
aaa
mov
inc
xor
rorb
mov
rcll
or
sbbb
mov
push
in
push
sbb
pop
aaa
mov
stos
xor
push
dec
aas
rcll
mov
repz
movsb
pop
lods
push
pop
scas
hlt
xor
mov
and
cmp
pop
jecxz
hlt
xchg
scas
or
pop
mov
dec
inc
push
std
inc
cld
dec
cmp
mov
pop
movsl
sub
xchg
js
repz
ds
test
adc
cld
bts
jae
xlat
jmp
jmp
das
repz
add
insb
in
add
decb
in
je
sbb
xor
pop
xor
movsb
or
notb
push
mov
adc
push
adc
push
cmp
jl
dec
ljmp
mov
sbb
jl
div
or
decl
imul
xchg
addr16
in
mov
call
pop
and
sub
insl
aas
mov
and
addr16
mov
push
in
shlb
sbb
or
jo
scas
std
push
inc
or
xor
mov
or
jge
pop
daa
int3
idivl
clc
or
mov
dec
mov
sarl
shrl
das
addr16
push
outsl
scas
imul
addr16
xchg
add
jle
dec
push
ds
jmp
adc
pop
sub
negl
in
das
jbe
ficomps
shl
xor
fcomi
mov
outsl
loop
aas
jecxz
adc
jbe
scas
std
in
inc
push
pushl
xchg
stos
imul
cld
jmp
sbbb
or
addr16
lahf
adc
jle
cmp
cld
sub
cli
push
punpcklbw
xor
or
jecxz
xor
pusha
test
repz
cwtl
push
mov
jge
pop
add
mov
lods
hlt
popf
dec
repz
je
push
outsb
ds
inc
sar
push
stos
mov
dec
xor
pmaxsw
stos
sbb
adc
addr16
pop
jae
popa
dec
and
ds
sub
mov
xchg
xor
dec
sub
pop
inc
insb
es
lahf
inc
in
icebp
xor
jmp
enter
cs
mov
fwait
sub
cmp
test
jns
cmc
pop
cmpl
add
repz
dec
mov
jle
add
jp
xchg
test
lods
fwait
aaa
cmpsl
lahf
jp
mov
outsl
lods
dec
jle
popf
icebp
jge
pop
add
stos
cmp
outsl
outsb
pusha
insb
ucomiss
insb
int
sub
push
sbb
pop
xor
insl
dec
push
out
mov
gs
jge
sbbb
inc
sub
and
fdivs
mov
in
mov
insl
lea
dec
fisubl
aas
sub
scas
push
sbb
ds
lock
js
dec
out
in
fmull
adc
lea
jo
and
push
sbb
push
inc
pop
xchg
adc
sub
lcall
adc
jge
lret
iret
outsl
repnz
movsb
rorb
inc
mov
std
and
push
sbb
cmp
adc
mov
rol
in
out
int
pop
push
int
js
sub
mov
jmp
insb
xor
sbb
jne
insl
std
xor
das
sahf
lahf
mov
ljmp
pop
insb
mov
sub
mov
cs
repz
fldt
call
out
push
dec
xorb
js
push
aas
addb
repz
mov
out
imul
bound
shl
pop
add
mov
int
rorb
ljmp
push
lods
pop
js
cmc
pop
mov
push
xor
push
repz
js
mov
dec
dec
popa
int
into
dec
into
cmp
rep
sahf
dec
sbb
pop
shrb
rclb
jno
addr16
int
sub
sub
lahf
and
pop
pop
push
mov
mov
xor
divl
jl
das
outsb
pop
je
cwtl
lea
sbb
insl
add
adc
repz
push
mov
push
mov
rcrb
xor
mov
cltd
roll
cmp
xor
orl
in
das
js
cs
mov
jbe
in
xlat
lock
dec
lea
nop
jle
lahf
in
aas
fwait
ds
xor
and
je
inc
mov
aaa
das
mov
ds
push
jecxz
cli
jne
xchg
rorl
repz
shlb
pop
jmp
fimuls
cs
inc
adc
loope
sbb
mov
lods
cmp
inc
inc
in
stos
ret
add
pop
lea
inc
fisubrs
outsl
out
mov
sbb
sarb
add
pop
outsb
or
rcrb
push
out
or
xor
aas
pop
daa
xor
mov
jns
jns
jns
and
aam
inc
inc
lods
or
push
pop
negl
jle
mov
cmp
push
jmp
outsb
out
mov
add
aas
scas
push
or
mov
iret
inc
sbb
outsl
popf
cmp
imul
sub
js
xor
pop
xor
repz
push
out
ds
prefetchwt1
xor
add
js
pushl
cs
stos
jl
mov
sarl
cld
jl
repz
xorps
push
lea
sbb
mov
adc
jg
lods
and
push
jbe
lods
dec
lods
out
fmuls
int
ljmp
js
jg
aas
insl
jo
mov
and
jge
adc
push
xlat
sbbl
adc
mov
clc
lret
cmp
jmp
push
imulb
fbld
jecxz
pop
xchg
stc
cs
orb
and
jl
scas
das
in
mov
es
mov
mov
rorb
mov
push
out
loope
mov
add
decl
ljmp
call
adcl
jecxz
add
adc
mov
sbb
mov
cmp
pop
mov
push
movl
cmp
das
jl
iret
insb
adc
xchg
xlat
jmp
insl
addr16
out
pop
int3
outsl
inc
jns
iret
pop
leave
scas
jns
addr16
jmp
aas
outsl
cwtl
negb
je
dec
insb
lods
or
inc
jo
lahf
sub
adc
lods
std
ret
push
or
lea
and
scas
out
outsb
push
stos
ds
add
dec
push
sbb
aas
push
mov
adc
in
jge
vcvtss2si
cld
or
push
sbb
iret
xor
sub
into
jg
push
mov
xchg
cmp
jb
lcall
and
jg
xor
pop
rcrl
dec
insl
mov
int3
std
dec
insb
xchg
jl
pop
adc
mov
ds
div
cmp
pusha
pop
cs
mov
stos
daa
mov
or
addl
out
out
ret
sbb
stos
ja
fstl
addr16
or
and
insb
jmp
cmp
mov
xchg
xorl
or
loope
dec
out
or
lret
add
iret
jl
out
decb
sbb
add
add
insl
pop
and
stos
inc
adc
loop
inc
push
jae
jmp
inc
out
jge
repz
pushf
stos
mov
test
fbstp
insb
mov
cld
mov
repnz
dec
scas
push
xor
lods
sub
outsl
fldt
outsb
dec
sub
call
outsb
scas
ss
lahf
and
pop
jge
and
mov
mov
push
iret
cmp
insb
or
adc
data16
orb
xor
jg
pop
push
pop
outsl
shrl
in
dec
mov
cmc
sti
mov
ss
lahf
loopne
loopne
add
jmp
adc
mov
inc
jo
adc
loopne
insl
xor
insl
jecxz
js
xchg
push
xor
push
int
mov
insl
adc
outsb
insl
addr16
test
fs
insl
popa
sbb
push
jns
jo
outsb
mov
lods
int
mov
in
mov
nopl
inc
xchg
mov
mov
clc
or
sbb
xor
lahf
push
std
jecxz
mov
xor
std
jne
xchg
add
cmp
pop
arpl
loope
cld
lahf
fistpll
subl
in
cmp
push
push
or
fisttpll
pusha
pusha
dec
int
mov
push
pop
sub
int
dec
js
push
xor
mov
fisttpll
jl
push
outsl
aam
into
test
fldl
add
adc
pop
aas
mov
and
xor
push
jp
idivl
jmp
jge
mov
pop
jmp
in
push
jecxz
std
aam
jg
test
pxor
xor
mov
lahf
mov
popa
push
jecxz
or
popa
dec
cmp
or
mov
repz
aad
fldl
sub
sub
jae
les
adc
js
xor
scas
add
sbb
ss
shrl
add
out
xor
pop
jecxz
jle
lea
push
cld
js
jae
lods
mov
test
dec
pop
insl
push
pusha
push
mov
mov
mov
sar
scas
ljmp
push
xor
lods
dec
cmp
insl
mov
or
fisttps
sbb
sub
mov
popl
push
cmp
jns
jg
lock
fnstsw
hlt
insl
btl
mov
sbb
jo
shrl
loope
in
pop
leave
push
arpl
push
das
xor
sub
and
adc
outsb
femms
or
pop
fsubrl
int3
std
adc
test
push
loope
mov
in
int
jnp
pop
cmp
aas
pop
aam
loop
into
fnstsw
fcoml
sbb
xor
and
mov
icebp
bound
fnstsw
pop
in
adc
xor
cmp
fiaddl
dec
rcl
inc
adc
mov
std
test
mov
dec
pop
jecxz
stos
xchg
lods
popf
dec
insl
aas
ljmp
sbb
pop
test
mov
loope
jg
push
pop
push
adc
in
cmp
xor
mov
inc
cld
add
insl
xor
mov
and
popa
outsb
sti
fdivl
sub
push
ret
sbb
sbb
scas
jg
jnp
pop
mov
xor
not
mov
loop
pop
sbb
sarb
fstpl
jle
mov
aas
outsb
cmpsl
push
jo
push
ljmp
mov
sets
jl
shl
inc
cltd
cmp
into
xor
test
or
sub
xor
cmp
push
int
test
jg
jecxz
inc
jg
insb
push
in
sbbb
mov
enter
push
out
pop
je
insl
or
imul
push
in
pusha
fisttps
sbb
pop
pop
lods
jecxz,pn
pop
frstor
ljmp
mov
jecxz
cld
cmc
inc
out
movsl
pop
mov
mov
inc
inc
cmp
cmpl
or
or
sbb
jg
leave
aas
loope
fsts
popf
insb
add
lods
dec
enter
scas
cmp
push
lahf
outsb
int
push
std
jl
cwtl
pop
dec
jmp
mov
insb
push
mov
cmp
call
push
out
mov
mov
mov
call
imul
pop
jmp
das
pop
sbb
adc
add
push
mov
insb
add
dec
jg
dec
ds
xor
popf
inc
outsl
int
pop
and
mov
add
mov
add
add
ds
jge
nop
jbe
sub
xor
mov
mov
fisubl
sub
pop
push
mov
aas
decb
decb
jge
cmpl
outsb
mov
pop
out
test
jge
mov
xchg
outsb
les
imul
mov
pop
out
mov
xchg
dec
roll
out
pop
adc
cmpsl
mov
and
jge
mov
and
and
sub
lahf
jg
sbb
ds
pop
push
push
out
setge
pop
pop
sbb
jg
mov
js
aad
lahf
mov
sbb
xor
movsl
rorl
xchg
fnstenv
loop
add
push
add
jle
push
fdivrl
movsb
repz
sub
sbb
dec
gs
adc
dec
xchg
nop
sub
clc
out
inc
mov
stos
outsb
aas
pop
add
push
cmp
push
push
mov
out
push
into
icebp
popa
shrd
in
testl
or
push
stos
js
loop
cld
xor
mov
dec
lods
inc
fcmovne
das
add
scas
aas
and
iret
idivb
mov
movq
push
enter
mov
ds
mov
ljmp
mov
bound
rep
inc
sahf
js
inc
fidivrl
xor
jmp
add
iret
dec
popl
test
fcomip
in
daa
push
sbb
aam
inc
aam
mov
jb
js
or
or
jno
out
out
lahf
pop
push
or
and
push
fs
or
repz
fisttpll
data16
inc
and
jg
notrack
dec
inc
std
fistps
stos
std
or
in
pop
repz
shlb
loope
iret
cmp
imul
popf
xor
jl
dec
and
test
in
pop
jle
mov
mov
lea
addr16
push
mov
and
mov
push
ret
imul
xor
mov
xor
bound
dec
fildll
xor
or
sbb
xor
mov
adc
pop
push
je
ja
adc
cld
sbb
pop
mov
addl
mov
std
stc
xor
mov
bound
cmp
std
insb
jo
fnstcw
mov
imul
mov
jg
jne
test
insb
das
jle
imul
out
pop
je
stc
fisttps
ffree
sub
jl
popa
push
jg,pn
int
xchg
adc
mov
scas
sbb
and
fisttpll
cmovp
test
cwtl
dec
loope
xor
in
outsl
insb
sub
in
int
sbb
mov
outsl
xchg
outsb
mov
mov
out
jne
insb
mov
subb
mov
rorb
pavgb
das
dec
or
ds
xor
lea
mov
int
sbb
jmp
test
movsb
mov
stos
push
jae
mov
repnz
sti
pop
loope
sub
sbb
cmp
push
jle
or
daa
jecxz
add
outsl
std
negb
std
insb
aaa
mov
sub
xor
push
mov
gs
mov
scas
outsb
popf
push
cmpsb
sbb
fisubl
out
dec
mov
mov
inc
sub
cld
xor
enter
mov
lahf
cmp
insl
push
sub
jge
xor
iret
and
push
pop
decl
adc
cmp
pop
enter
ret
loop
in
repz
jge
inc
pop
ja
xchg
dec
sbb
fisttps
leave
push
xorb
imul
jle
hlt
int
cs
insl
xor
sub
push
in
or
pop
push
into
leave
mov
mov
das
lods
mov
dec
inc
aas
cmp
push
incb
or
add
sbb
mov
ds
dec
sub
addr16
jge
mov
out
or
int
push
sub
or
adc
pop
push
or
into
aas
lea
repz
inc
jecxz
das
pusha
repnz
sub
aaa
xor
cld
mov
mov
dec
outsb
lods
aas
push
pop
or
lock
push
push
popf
pusha
out
mov
dec
dec
in
dec
adc
into
jmp
ret
jge
mov
pop
pusha
iret
dec
add
jnp
and
mov
xlat
paddusw
aam
jle
test
add
add
sbb
outsb
je
mov
fstl
aaa
pop
sub
jl
out
fildll
sub
stos
ds
fcmovnb
dec
dec
movd
lret
ljmp
cmp
lock
cmp
js
adc
lahf
leave
mov
std
sub
pusha
push
push
cs
lret
or
add
insl
mov
inc
inc
fistpll
gs
outsb
loopne
cmp
or
lods
xor
movd
and
sub
pop
icebp
cli
push
xor
ds
xor
jle
shr
mov
push
lahf
ljmp
mov
icebp
ljmp
sbb
enter
inc
mov
xchg
mov
cmp
out
push
aam
xchg
jle
outsb
jl
lock
cs
mov
iret
fisttps
mov
push
adc
movsl
neg
lea
insb
outsb
decb
pop
cwtl
testb
dec
shrb
das
cli
dec
pop
stos
push
data16
enter
jmp
adc
cmp
lea
inc
cmp
jl
mov
fisttps
cmp
out
xchg
mov
xor
imul
lods
mov
das
mov
jle
outsb
insl
outsl
pop
xchg
sar
lock
int
out
pushf
sub
jmp
shlb
jle
ds
outsb
xchg
push
mov
adc
xor
or
xadd
inc
adc
jle
nop
inc
jge
out
mov
mov
std
fildll
repz
dec
in
cs
xor
add
movsb
shl
cmp
sub
xor
push
dec
or
insb
scas
das
xor
push
std
or
cs
push
jl
dec
lods
call
dec
adc
or
test
stos
enter
js
inc
dec
pop
xchg
mov
sbb
cmp
jl
mov
pop
cmc
std
int
outsb
lods
jge
xor
sbb
dec
cmpsl
adc
outsl
fistps
pop
pop
out
fstl
adc
jecxz
cmp
jg
outsl
imul
lds
std
shlb
out
cwtl
jne
enter
outsb
jmp
fsubl
mov
jle
popa
sbb
les
xor
and
addr16
inc
flds
jl
rsqrtps
pop
loop
int3
lret
or
pop
push
and
cld
jmp
mov
iret
in
inc
jle
sahf
mov
push
sub
lahf
dec
xor
mov
dec
push
outsb
pusha
and
cmp
aam
hlt
fnstsw
aad
add
dec
push
shlb
repnz
cli
cmp
inc
xor
xor
lret
cmp
popa
popf
lahf
mov
insl
das
icebp
push
pop
sbb
adc
repz
adc
in
mov
std
out
stos
dec
push
and
xor
cld
jnp
sub
sub
cs
lods
mov
push
jle
imul
hlt
sahf
pop
repz
jmp
decl
hlt
gs
shlb
cmp
pop
popf
fisttpll
gs
pop
xor
jmp
xchg
jle
cmc
fstl
jmp
mov
lea
mov
pop
jns
mov
mov
sbb
movsb
inc
rcrl
cs
lea
push
insl
ret
jne
cmp
bound
shrb
fwait
xor
jns
adc
xchg
pusha
lea
mov
out
adc
xor
aas
es
add
mov
popf
push
ud0
addr16
hlt
sub
mov
jl
aas
sub
jno
jge
push
cmc
xor
push
std
out
xor
pop
outsl
jmp
in
mov
insb
cmp
and
push
jp
jmp
test
cmpb
push
jle
add
aad
push
repnz
lcall
std
outsb
cmp
sub
clc
dec
ds
mov
cld
in
inc
jle
or
in
lahf
sbb
push
sahf
push
cli
xchg
decb
jg
lock
push
aas
das
loopne
clc
out
sbb
jmp
lods
outsl
repz
lea
cmp
xor
ret
pushl
outsb
fildll
in
jl
add
adc
lods
iret
dec
push
inc
add
outsb
sub
call
xchg
lahf
xchg
sub
pop
test
pushl
insl
dec
jle
jg
sbb
flds
adc
ljmp
scas
gs
scas
sbb
jecxz
insl
push
add
dec
and
mov
push
jecxz
mov
and
dec
lea
push
outsb
lret
movsl
stos
cld
lock
push
jbe
cmpl
sbb
or
sub
push
xlat
lahf
outsb
jl
rcr
dec
cmp
cli
inc
add
add
inc
daa
dec
xchg
add
jb
jbe
je
xor
lcall
push
sub
adc
mov
repnz
lds
jmp
mov
mov
mov
inc
jg
dec
jo
mov
inc
clc
or
push
jns
push
scas
jns
addl
add
into
and
pop
push
sbb
stos
out
repz
dec
lahf
pop
std
loope
dec
or
cs
les
jg
dec
mov
sbb
pusha
inc
insb
cs
decb
repz
push
mov
mov
jl
xchg
iret
jne
jle
mov
aas
dec
rorl
jge
movsb
mov
mov
addr16
xor
ds
stc
out
iret
push
push
es
mov
push
mov
inc
adc
shrb
sub
mov
stc
lea
lods
add
push
mov
adc
lahf
lahf
imul
mov
scas
and
sub
mov
aas
or
cld
push
lods
int3
std
sbb
cltd
push
pusha
lcall
add
jecxz
ja
mov
mov
xlat
stos
xchg
cs
hlt
cmc
sub
js
jg
stos
das
mov
mov
jns
inc
mov
push
xor
lea
mov
dec
adc
std
adc
cmpl
cmpl
fisttpll
scas
dec
adc
js
or
jl
outsl
fwait
outsb
mov
lret
or
sub
js
shl
notl
fisttpll
cmp
push
pop
in
orl
repnz
out
lret
std
mov
imulb
fimuls
andl
enter
sti
lea
adc
sbb
aas
push
mov
outsb
xor
sub
divb
pop
mov
je
aam
sub
in
pop
and
cmp
lods
sub
dec
mov
fdivrl
nop
cmp
cmc
jae
sbb
pop
sbb
sub
aas
in
nop
cmp
outsb
or
sar
jl
pop
nopl
inc
jle
orl
out
stos
pop
sbb
repnz
or
or
xorl
das
popf
sbb
push
sub
rolb
dec
test
jle
mov
mov
mov
mov
fstpl
lahf
loopne
lret
adc
cmp
sub
int
or
mov
iret
repz
dec
mov
push
ss
push
dec
pop
andb
adc
cmp
or
mov
mov
mov
push
jle
xchg
sbb
ljmp
and
cmp
sti
jmp
rorl
cld
lods
or
jge
cli
out
push
inc
ds
dec
stos
sarl
fistpll
mov
shrl
sbb
enter
xchg
jge
ljmp
inc
mov
ret
pop
cmp
jl
push
cmp
xor
cmp
ficompl
dec
repz
jmp
cmp
or
stos
sarl
jnp
mov
mov
or
bnd
push
int3
or
xor
jge
leave
rsm
pop
js
push
aas
icebp
or
cmp
jge
stos
or
stos
pop
leave
push
insl
das
dec
stos
xlat
insl
sbb
xchg
and
insl
dec
mov
mov
adcb
cs
aas
pop
lods
jge
cmp
or
outsl
stos
or
jg
mov
or
jge
cld
jge
mov
dec
dec
pop
jmp
sbb
stos
popa
jge
cld
lahf
cmc
mov
mov
lods
sbb
jg
lea
sub
jecxz
sarb
test
jl
mov
jae
xlat
je
push
std
and
mov
stos
push
aas
and
mov
push
add
je
jno
dec
aaa
call
mov
pop
je
cwtl
xor
ret
mov
adc
and
je
sub
std
lea
in
xor
jg
bound
jg
inc
pushf
push
push
aaa
popf
xor
inc
fbld
lds
lret
out
or
aad
fbld
sub
mov
and
or
lods
loop
pop
ja
popf
pop
loop
mov
and
mov
testl
dec
push
mov
and
dec
mov
lea
or
dec
pop
lahf
dec
fadds
inc
dec
repz
adc
mov
fsubrl
test
and
in
cmp
loopne
out
push
out
das
test
ds
cmp
aas
int
pop
mov
mov
lea
or
sub
pop
push
push
mov
insl
out
push
ret
jle
outsb
dec
ss
dec
jle
fnsave
xor
stos
hlt
inc
pop
push
cs
jecxz
jg
mov
popf
add
xor
mov
pushf
call
pop
lret
mov
rcl
push
sub
xchg
mov
or
lods
adc
sub
lea
int3
inc
xor
dec
mov
out
nopl
test
jne
cmp
pop
lock
jge
pop
xor
insl
and
sub
nop
call
into
pop
ja
adc
add
dec
push
insb
jne
call
jle
xorb
pop
in
sbb
adc
imul
cmp
int3
int
push
jmp
xchg
cmp
orl
fs
add
sub
cmpl
out
cs
xchg
pusha
dec
jge
push
sub
mov
test
mov
cmp
outsl
int
out
or
jge
imul
mov
std
jmp
xor
or
ds
push
mov
cmp
pop
mov
in
in
mov
pop
sarb
dec
loope
in
mov
imul
das
nop
or
andl
jge
mov
cmp
sbb
popf
pop
dec
cmp
mov
pop
adc
clc
xlat
inc
outsl
filds
stc
sbb
push
push
xor
xor
add
aaa
or
dec
hlt
add
sub
pop
outsl
cmpsb
subb
aas
fbstp
push
adc
inc
loopne
fisttpll
je
lock
push
xor
mov
fisubrl
pop
addr16
push
jmp
lods
stos
jle
jns
mov
mov
iret
leave
insl
sub
test
sti
mov
and
push
cmp
in
adc
adc
mov
xchg
sub
iret
xchg
inc
stos
xchg
dec
pusha
leave
sub
adcb
dec
stos
inc
push
or
test
xor
or
sub
lret
adc
inc
push
leave
jnp
outsl
fdivr
gs
addr16
adc
in
xchg
fdivp
adc
int
mov
jp
xchg
fstpl
pop
popf
lods
mov
pop
push
loope
mov
mov
mov
arpl
sete
push
sub
sub
clc
js
sub
sub
or
lods
addr16
aas
lods
sbb
aas
jg
cvtpi2ps
lahf
outsl
add
push
cmp
lret
add
repz
pop
mov
xor
fsubs
pop
mov
adc
add
sbb
call
repz
push
jb
mov
pop
dec
or
or
pushf
popf
pop
xor
mov
jmp
and
pop
jl
stos
sbb
cmp
mov
addr16
gs
in
das
xor
xor
sbb
std
insl
push
mov
cmp
jl
cld
mov
push
fsubr
je
out
push
cmp
out
in
or
das
sbb
int
jl
cmp
xor
rsm
pop
xor
pop
xor
lea
in
pop
push
xchg
scas
repnz
mov
pop
movups
pushf
sbb
mov
comiss
insb
loope
cs
adc
insl
sub
pop
test
push
ds
scas
in
fstpl
rcl
cmp
shll
aam
sbbl
mov
jle
lea
lcall
leave
mov
jmp
sub
imul
popf
aas
jge
cmp
cld
sti
pop
pop
sbb
shrb
int
jl
les
fistps
adc
pop
push
add
jne
jns
jg
or
adc
lock
inc
dec
fildll
in
dec
or
fnstenv
movsl
ljmp
lods
fstpl
and
sub
sub
jecxz
stc
lods
sub
push
adc
adc
mov
sbb
cmc
lret
sub
mov
mov
sub
cmp
jnp
int
enter
rorl
pusha
lods
mov
push
sbb
sub
or
xchg
mov
push
ljmp
out
loop
js
cld
outsb
decl
mov
rcrl
adc
sub
in
add
mov
sub
xor
pop
loope
insb
jl
popf
fidivs
mov
dec
lods
mov
cmp
movsb
xor
sahf
dec
sti
leave
xchg
inc
jecxz
cmp
jb
cwtl
iret
dec
jmp
rorb
sub
cmp
out
adc
insl
or
jecxz
lods
xchg
mov
insb
in
jg
aas
in
es
sbb
xor
mull
orl
out
push
adc
das
or
jns
sub
std
xor
stos
push
lcall
out
add
or
mov
pusha
in
or
out
insl
insl
fucomip
adc
mov
add
popf
add
push
cmp
mov
pop
xor
lods
push
getsec
jle
mov
sub
add
minps
imulb
in
pop
xchg
lds
xchg
outsb
pop
lret
ret
xor
and
js
loop
mov
dec
inc
mov
dec
insl
push
test
push
push
pop
in
out
std
lahf
push
in
jg
adcl
fidivrs
repz
repnz
jne
mov
ret
inc
loope
lea
pop
or
outsl
fstpl
and
and
outsb
aaa
xor
mov
lods
jecxz
mov
and
subb
push
lea
xor
in
sub
mov
das
insl
mov
pushf
xor
pop
cmpxchg
jle,pn
pop
int3
cld
outsb
sub
or
sar
iret
add
iret
jmp
sub
add
das
addr16
mov
add
mov
insl
mov
pop
or
cmp
mov
add
add
sub
lahf
inc
insb
xor
xchg
ja
cld
jmp
cmp
jmp
inc
xor
jne
pop
push
addr16
inc
ljmp
inc
pop
repnz
dec
inc
xor
push
jmp
inc
push
pop
insb
adc
jnp
or
lea
aas
call
imul
and
pop
je
mov
lods
mov
iret
mov
scas
pop
das
lods
in
in
clc
xor
jmp
sbb
push
sub
aas
rsm
and
dec
shlb
add
das
xor
jmp
mov
insb
xchg
jl
popf
lret
pop
push
cmp
pop
movsb
sbbl
sbb
inc
xchg
loope
addr16
out
dec
pop
mov
jb
or
test
push
jg
call
inc
insb
push
dec
addl
pop
pop
xor
out
popf
aaa
jae
jo
jecxz
aas
popa
jg
loope
inc
fnstcw
shll
xchg
hlt
scas
das
fiaddl
sbb
rcll
jo
ja
out
iret
sbb
lahf
dec
iret
outsb
lock
pop
inc
add
dec
push
fisubrl
int3
dec
decl
popa
insb
loop
jmp
orl
dec
pop
pop
sbb
aas
in
scas
jbe
iret
adc
adc
push
jb
dec
mov
sub
ljmp
add
cmp
mov
enter
pop
or
push
cld
dec
dec
repz
xor
jo
adc
int
insb
testb
mov
movl
push
in
scas
or
mov
mov
mov
imul
add
dec
nop
add
pop
sbb
rclb
int
adc
adc
xor
pop
pop
push
fildll
cmc
lahf
mov
sub
clc
aaa
adc
or
and
fpatan
mov
fstl
dec
in
or
rorl
sbb
adc
std
out
jnp
scas
and
mov
push
das
jbe
outsb
fisttpll
popa
std
pusha
pop
jle
rcrb
fs
test
mov
inc
mov
push
ss
popf
fnsave
jne
rcrl
loopne
sahf
frstor
adc
repz
lods
cmp
fmull
jge
mov
mov
dec
pop
pop
add
sar
cs
inc
js
test
jl
dec
xor
xchg
loop
sbb
out
xor
notb
jl
cs
xor
sbb
pop
pop
xlat
or
aam
sbb
mov
aam
mov
and
insl
xor
push
not
aas
outsb
sbb
jg
test
or
stos
mov
add
aas
js
push
push
or
sub
cmp
cmp
push
inc
pop
repz
shlb
jmp
lcall
push
js
insl
jle
insl
mov
test
divb
mov
out
adc
shrl
decl
fdivr
ds
mov
mov
repnz
cli
push
lods
xor
cmp
adc
outsb
jle
unpckhps
das
add
jge
dec
out
pop
adc
xor
aam
jecxz
rsqrtps
or
dec
jb
push
mov
das
js
cmpsl
jno
jp
push
dec
pop
pop
mov
iret
js
pop
cmp
rolb
xor
out
pop
popf
into
std
cmp
push
in
ja
daa
cmp
imul
adc
ud0
add
js
aas
ds
push
int
jle
outsl
movsb
add
jg
ss
dec
and
xchg
dec
jle
mov
or
in
adc
in
inc
loope
jnp
jns
fnstcw
lods
cs
call
repz
sub
mov
js
das
addr16
or
sbb
cmp
jb
xor
jecxz
rcrl
popa
mov
push
out
cmp
jge
popf
or
lods
jle
push
jo
das
fbld
lahf
dec
add
jge
popf
out
adc
ljmp
mov
aad
push
repnz
xorb
pop
in
mov
scas
ljmp
repnz
loope,pn
mov
cli
repnz
call
adc
mov
or
scas
xor
cld
cli
xchg
dec
decb
push
pop
mov
mov
sar
decl
scas
aas
mov
iret
mov
adc
aaa
cmp
pop
jg
jb
lea
cld
jp
insb
xchg
ljmp
inc
pop
in
ljmp
cmpb
pop
aas
jg
pop
outsb
pop
jg
mov
lods
sbb
push
jbe
xor
cmp
loopne
fdivp
out
push
and
subl
sbb
gs
jno
push
adc
jbe
push
sub
int
jl
out
das
add
adc
in
xor
mov
ret
pop
lea
ffree
imul
cld
xchg
js
subb
movq
cmp
mov
push
push
adc
pop
mov
sbb
or
or
fildll
sar
and
lock
dec
sbb
push
scas
enter
xor
insl
xchg
push
pop
or
push
outsl
js
mov
add
fbld
jg
js
mov
mov
aad
mov
leave
pop
lret
and
mov
nop
pop
call
sbb
pop
or
cld
in
cmp
push
cs
adc
in
fmuls
cmp
hlt
lcall
sub
mov
adc
outsb
jns
add
dec
enter
xchg
mov
jg
sub
mov
psubsw
jl
inc
dec
xchg
mov
shl
and
pusha
adc
ret
fnsave
aas
das
jo
push
push
inc
scas
sub
je
xchg
mov
cmp
pop
pop
adc
iret
pop
loope
sbb
js
lcall
cwtl
popf
jo
inc
fists
mov
lret
outsb
pop
cmp
cmp
cmp
lea
js
ds
push
fisubl
mov
sbb
cmc
xor
mov
jl
dec
loope,pt
and
xorb
and
outsl
call
jl
pop
xchg
insl
ja
pop
lret
lea
insl
fsubs
shll
ljmp
push
jp
cmp
xchg
outsb
clc
add
sbb
rcll
mov
outsl
mov
adc
aas
scas
or
in
sbb
jmpw
pop
jmp
xor
push
psubsb
pop
scas
out
mov
pop
sub
out
xor
int
sar
mov
pop
cli
lods
mov
jmp
ljmp
rcrl
push
mov
scas
sub
int3
popa
push
mov
mov
xchg
out
inc
ret
repnz
push
push
cs
pushf
sbb
cmp
mov
add
xor
sti
mov
test
aas
mov
mov
insl
dec
outsb
push
dec
xor
sub
pop
lahf
cld
xor
cwtl
sbb
or
push
out
or
je
mov
insb
jl
lea
in
mov
mov
and
pop
cld
xchg
outsb
dec
cmp
cmp
adc
xor
mov
das
mov
push
jle
jne
add
jmp
outsl
pushl
mov
out
je
insl
add
mov
pop
cmp
arpl
cs
push
mov
jns
stos
in
xor
int
push
fsubrl
add
scas
outsb
roll
sub
cmc
aad
jecxz
mov
xor
pop
call
adc
push
fcomp
xchg
mov
pop
mov
xchg
inc
dec
incl
pop
or
popf
push
inc
movsb
sarb
setg
popa
lea
sbb
popf
fstpl
xor
pop
pusha
lret
loopne
sbb
adc
lcall
cmp
pop
lods
jg
inc
lahf
dec
dec
mov
jg
pop
icebp
mov
pop
repz
fldenv
jg
das
adc
in
clc
inc
pushl
sub
or
cwtl
stos
shll
mov
popf
pop
je
pop
pop
or
mov
lret
js
jp
test
mov
push
outsl
pop
shrl
bound
pop
cld
hlt
insl
lahf
mov
adc
add
insb
lods
aaa
aas
insl
and
pop
inc
jp
stos
xchg
addr16
push
mov
subb
xor
mov
jb
mov
pop
jle
push
adc
jo
inc
xor
jbe
sub
aad
fiadds
lahf
lds
repz
sti
and
cmp
js
or
xchg
push
enter
xchg
popf
inc
xor
insb
or
add
out
and
dec
jg
push
cs
int3
mov
inc
mov
sub
pop
xlat
sbb
dec
or
mov
aad
ret
cld
int3
popa
cmc
sti
mov
repz
mov
icebp
dec
and
and
and
mov
test
cmp
ljmp
dec
popf
in
punpckhbw
push
cmp
and
xor
ds
push
enter
pop
iret
pop
inc
insb
pusha
inc
cld
push
jmp
aas
lahf
push
ds
aam
in
cli
insl
sub
ljmp
pusha
or
fmul
cs
mov
mov
sbb
test
sub
and
ret
dec
cmp
ljmp
push
repz
jmp
lods
negl
into
dec
pusha
insb
in
popf
out
pop
xor
cmp
cmpl
sub
push
rcl
jb
bnd
jmp
sbb
out
call
push
inc
frstor
insl
int
sub
addr16
pop
mov
mulb
cld
insl
scas
jge
lods
push
orl
adc
shll
sub
xchg
mov
ret
cmc
pop
push
popf
mov
cmp
xchg
lret
add
push
or
cs
loop
ds
sbb
pop
comiss
sbb
dec
pusha
pushf
insl
rcr
imull
mov
mov
dec
mov
cwtl
or
ds
out
push
aam
xor
jl
in
mov
adc
aas
mov
popa
lods
xchg
les
jecxz
insb
dec
jecxz
adc
push
pop
stos
ljmp
and
icebp
mov
in
daa
xchg
mov
in
push
int3
inc
cltd
cmpsl
xor
adc
lods
xchg
dec
int3
and
out
insb
popf
ljmp
jg
push
adc
hlt
push
js
push
insl
insl
std
jo
mov
push
jge
mov
pop
mov
not
aas
cmpsb
jb
clc
mov
cld
data16
repz
push
pop
xor
sub
push
scas
pop
in
or
ret
cmpb
adc
mov
insl
sub
mov
push
js
ja
lea
inc
push
inc
in
xor
xor
jo
fnsave
mov
decb
mov
pop
mov
in
add
dec
out
clc
jecxz
cs
add
and
sahf
xchg
cli
or
aad
jo
outsl
leave
insb
cmp
push
adc
sbb
and
dec
mov
cld
push
in
in
push
lea
loopne
std
mov
pop
fcmovne
cltd
dec
outsl
and
cld
sub
mov
and
inc
in
jns
andl
lret
push
jne
loop
dec
in
mov
idiv
jae
out
je
adc
inc
push
lret
or
sub
pop
mov
jl
insl
fs
pop
popf
mov
mov
bound
sub
pushf
loop
mov
push
dec
mov
mov
ret
push
dec
cmpsb
mov
sti
pop
add
dec
repz
ja
cwtl
lock
int
fst
js
aad
lea
in
jne
xor
faddl
add
sbb
imul
cli
loope
fstpl
xor
cld
in
lea
xchg
idivb
pop
pop
push
push
stos
imul
adc
pop
jmp
scas
xchg
insb
sbb
outsb
dec
or
adc
cmpsl
loope
push
arpl
lods
outsb
xlat
arpl
xor
pop
imul
js
loope
mov
mov
xor
stos
xchg
fxch
cli
mov
pop
pop
repnz
js
ljmp
dec
je
pusha
repz
insl
dec
repz
dec
fildll
mov
das
or
hlt
subb
popa
iret
sbb
pop
adc
popf
int3
cmp
push
call
adc
pop
pop
push
inc
xchg
je
push
push
cmp
js
pusha
push
cwtl
loope
push
fnstsw
mov
pop
add
lods
push
lahf
push
iret
mov
jmp
inc
divl
ret
lea
js
ud1
mov
decl
loope
das
pop
stos
push
rorb
or
mov
xor
pushf
add
aad
outsb
int3
rcr
adc
mov
jecxz
xor
dec
adc
pop
push
inc
int3
sti
cld
in
sub
jg,pn
jmp
jg
aad
lahf
push
jnp
cltd
xchg
mov
jg
scas
fadds
dec
lods
mov
jecxz
cld
into
inc
jae
loope
fisttps
lret
mull
outsb
ljmp
jg
lea
xchg
push
iret
addl
cld
std
inc
mov
bound
push
pop
in
dec
in
lods
xchg
iret
daa
add
pop
adc
xor
in
adc
out
push
outsl
ds
mulb
call
push
out
dec
jge
pop
ss
pop
xor
xor
jmp
cld
push
insb
repz
lods
sub
cmp
lea
in
inc
loopne
test
pop
decb
mov
inc
arpl
mov
std
push
jg
lahf
mov
jge
jb
pop
xlat
scas
jmp
pusha
outsb
aas
cmp
xor
adc
sub
adc
hlt
mov
add
push
jae
add
sahf
outsb
xor
outsb
std
ret
in
pop
add
lahf
cs
ljmp
cmpsl
lods
or
xchg
das
cwtl
or
stos
cld
out
add
xchg
test
mov
adc
stc
ja
pop
pop
jae
scas
in
das
mov
or
sub
incl
cmp
and
les
sarb
outsb
into
xor
adc
cmp
mov
push
int
sbb
cmpsl
shld
xlat
jmp
je
insl
pop
test
fsts
aas
push
int
mov
lea
mov
jge
sub
out
es
mov
dec
lahf
pusha
xchg
fnstsw
jle
jmp
cmc
xor
pop
or
sbb
sbb
lods
mov
push
call
push
jg
je
int3
orl
jo
inc
stos
jo
pop
test
pushf
aaa
lods
scas
js
outsb
insl
shll
out
sbb
mov
or
pop
aas
loop
xor
mov
pop
repz
xor
mov
cmp
cmp
dec
push
or
aas
insb
adc
dec
mov
test
cwtl
jmp
orl
jae
dec
mov
pop
cld
loop
pop
jmp
cmc
lea
pop
jmp
sbb
mov
push
add
lods
daa
mov
lahf
addr16
push
cmc
sbb
dec
mov
decl
imul
leave
pop
jge
in
psllq
jecxz
je
xor
mov
imul
add
lahf
sbb
mov
clc
dec
jecxz
cmpsb
dec
jmp
add
jg,pn
faddl
js
stos
mov
xor
mov
outsl
push
jecxz
cmp
or
sub
imul
push
scas
rclb
aas
loop
fucomip
add
js
lods
sbb
jge
paddusw
push
fstl
ds
aaa
pop
inc
stos
xor
addl
in
dec
addr16
insl
add
xchg
ljmp
pop
popf
xor
cmp
jle
shll
in
int
sub
sbb
push
das
es
sar
cmp
daa
xchg
mov
dec
scas
scas
lahf
inc
outsb
pushf
addr16
js
int
jle
jae
xor
jmp
lea
xor
pushf
xor
popf
pop
clc
cmpsl
outsl
jl
push
inc
dec
das
out
lock
push
adc
mov
scas
int3
ret
out
out
mov
decb
dec
or
or
and
adc
clc
dec
cs
push
out
jmp
iret
push
push
mov
mov
dec
pop
pop
scas
push
pop
mov
push
insl
dec
jge
pop
dec
adc
lods
inc
mov
jo
subl
sub
clc
outsb
mov
fisttps
rcll
dec
pop
incb
add
push
cld
into
dec
imulb
out
pop
sbb
add
ljmp
cld
and
jl
adc
dec
cmp
pop
xor
push
xchg
notrack
test
add
adc
jle
imul
js
dec
call
cmp
sarb
xchg
inc
pop
lret
jns
pop
inc
in
push
adc
jecxz
lret
lock
fucomip
popf
test
xchg
adc
pop
jns
pusha
or
and
push
mulb
std
or
or
jns
test
fs
sbb
daa
addr16
adc
daa
out
xchg
jl
pushf
xor
lods
cmp
into
sbb
mov
push
std
or
cmp
add
push
jg
cld
xchg
push
movl
add
sti
and
lahf
in
adc
lods
xor
mov
inc
sub
cmp
xor
cmp
push
ret
cld
mov
inc
outsl
divb
sub
out
adc
sbb
rorl
or
aaa
sub
and
mov
or
outsl
pavgw
xor
jg
or
iret
out
jns
inc
adc
repz
mov
aad
push
pop
pop
sbb
outsb
sub
rorb
fbld
out
lods
lods
in
adc
dec
mov
ljmp
mov
in
sub
outsb
int
push
pop
ja
mov
fisubrs
out
loop
fsubr
or
fbld
pop
cld
sbb
mov
xor
cmpl
lahf
mov
stc
xor
repz
mov
std
inc
hlt
out
out
lods
push
xchg
cltd
pop
out
and
lea
dec
jmp
xchg
xchg
inc
xchg
pop
inc
outsb
imull
fsubrl
outsb
aas
sub
cmp
pop
push
jno
js
xchg
sbb
in
cmp
cmc
insl
int
pushl
das
add
jg
push
xor
insl
std
or
out
push
dec
jecxz
lahf
enter
hlt
cwtl
jge
mov
aas
push
and
shrb
repz
sub
int
rorl
adc
ds
pop
pushf
adc
lods
push
pop
xchg
push
push
aam
std
outsl
add
scas
cmp
xor
xor
push
jne
js
insl
call
ficoml
shl
imul
jns
sub
dec
sub
test
aad
das
mov
mov
jl
das
repz
xor
orb
int
mov
cs
andl
cs
or
das
mov
test
jb
adc
jg
out
cmp
lea
sbbl
outsb
pop
mov
jg
in
lret
mov
jge
mov
repz
in
lods
push
out
outsb
sub
imul
ret
jmp
jle
push
jl
jl
dec
inc
lods
in
sbb
dec
sbb
xchg
push
in
ljmp
sub
mov
fidivrl
outsb
movsl
or
cld
push
cmpsl
mov
and
js
xchg
punpckhbw
add
imulb
mov
and
and
add
fadds
clc
mov
xor
lret
into
rcl
lods
subl
adc
insb
pusha
and
mov
int
cmpsb
frstor
pop
clc
mov
push
inc
das
repnz
ds
imul
jmp
popf
xor
xor
call
aas
xchg
out
icebp
pop
jae
aas
fwait
or
fiadds
add
je
jmp
test
dec
fpatan
repnz
jmp
jge
and
into
decb
mov
add
div
push
cmpsb
dec
imul
scas
std
arpl
shlb
cmp
dec
sarb
repz
ss
fdivrs
inc
mov
jns
jbe
jmp
pop
in
out
cmp
push
pop
pop
aam
fldcw
sub
inc
arpl
addr16
mov
mov
shrl
mov
mov
jo
in
and
imull
jmp
pmulhuw
cld
mov
adc
in
push
int
repnz
ja
repz
cmp
out
sbb
leave
aam
aad
dec
mov
cmpl
dec
cmp
in
push
jle
mov
andl
dec
shlb
jmp
scas
je
push
and
out
outsl
mov
ljmp
dec
pop
inc
mov
outsb
icebp
jmp
out
aad
push
and
mov
or
or
hlt
stc
js
push
das
cld
inc
jg
lods
or
add
cmp
sbbl
fstl
jge
or
adc
jae
pop
xchg
or
scas
das
jl
push
iret
jl
pushf
cltd
adc
mull
push
jle
in
lock
outsb
fstpl
das
pop
jo
cli
iret
jl
sub
cmpsl
repnz
mov
je
jle
ret
outsb
test
popf
lods
push
mov
les
insl
xorb
shl
mov
dec
and
fsts
xor
sarl
in
andb
mov
addr16
dec
xor
std
lea
dec
inc
in
aas
ret
jg
loopne
out
inc
std
push
or
fildll
pop
or
mov
int
cmp
popf
in
push
std
and
cmpsl
outsb
mov
outsb
test
sub
bswap
cld
fiaddl
enter
outsb
sub
dec
xor
inc
or
out
movsb
cmc
fdivrl
add
in
sub
inc
repnz
push
out
jl
pusha
mov
lods
out
jl
fcomp
sbb
out
std
lods
add
ja
mov
test
aaa
jb
sbb
pop
add
dec
ds
lret
lea
adc
aam
cld
movsb
leave
dec
dec
cld
lods
out
div
ror
insb
mov
and
das
dec
lock
cvtdq2ps
sub
or
cld
push
push
inc
xlat
hlt
dec
pop
cmp
pop
xor
xor
cmp
lcall
sub
mov
add
sub
push
les
ret
lret
repnz
int
and
rcll
cmp
pop
push
push
cmp
sbb
mov
ds
loope
cld
xor
inc
cld
xor
jge
jg
je
lea
adc
cmp
outsb
pop
adc
cs
lock
push
jae
fistps
ja
scas
pop
jge
mov
outsb
pop
sbb
jp
lahf
std
push
pop
jmp
cs
test
and
les
sti
mov
cltd
mov
mov
add
and
lea
xlat
xchg
push
xor
pop
repz
in
xchg
or
mov
push
mov
cs
pusha
push
mov
fiadds
adc
int3
pop
imul
mov
dec
jge
aam
or
push
adc
mov
test
mov
dec
clc
inc
js
fdivr
inc
fbld
xlat
xor
jmp
in
and
scas
mov
aas
int
xchg
push
ds
mov
cmp
jno
outsb
andl
hlt
outsl
inc
adcb
adc
aad
dec
dec
dec
mov
out
adc
inc
repz
ja
sbb
inc
xorb
stos
cmp
dec
ss
fdivl
jno
pop
xlat
cld
add
push
insl
sub
dec
lea
repz
and
outsb
aas
adc
ljmp
jo
sbb
pop
push
push
outsl
cmpsl
push
pop
push
test
ret
push
call
movsb
cmp
outsb
jmp
bnd
je
or
push
jle
jmp
jecxz
mov
mov
subl
js
jp
pop
and
push
xor
iret
sbb
pop
sub
adc
sub
sub
or
jg
insl
mov
scas
dec
outsl
push
out
push
mov
js
push
outsl
push
or
sbb
inc
sub
stos
push
jge
ljmp
js
cmp
addr16
adc
sahf
pop
aam
je
xor
cmp
outsb
daa
bound
sub
ss
xor
dec
iret
sub
push
int3
scas
insl
xchg
pushl
sub
insl
loop
mov
enter
mov
imulb
insl
repz
mov
push
or
cmpsl
popf
push
mov
outsb
repz
sub
or
add
lods
repz
decb
fimuls
mov
and
fisubrl
jl
or
lahf
and
dec
or
cmp
imull
enter
xor
and
jmp
pushf
pop
cmp
leave
loop
stos
lods
test
sbb
jge
iret
push
imul
divps
fmul
in
lods
dec
pop
cmp
std
cmp
dec
jns
jl
addl
sub
es
addr16
fdiv
lods
lods
out
mov
mov
mov
mov
dec
adc
test
adc
outsb
sbb
mov
jge
lods
aam
sbb
or
mov
sbb
jecxz
outsl
das
xor
mov
ds
dec
xchg
hlt
ret
mov
jecxz
push
hlt
pusha
pop
in
jl
js
insl
adc
hlt
idivl
popf
lods
pop
add
xor
sub
mov
jmp
int
xchg
pop
testl
in
mov
out
cmpsl
pop
cltd
outsl
lods
stos
test
and
pop
jge
mov
adc
sbb
ja
lahf
inc
add
dec
xor
insl
push
add
pop
or
out
data16
out
ficoml
rorl
pop
in
outsl
dec
or
js
push
dec
and
mov
aaa
mov
aad
pop
loopne
mov
and
or
push
incl
rcll
iret
push
dec
js,pt
mov
or
cld
pop
test
inc
sub
std
and
addr16
mov
mov
pop
nop
sbb
adc
addr16
mov
jmp
adc
cs
int
cli
pushf
lret
or
insb
outsl
jns
push
pop
clc
fwait
cld
in
xor
subl
push
lods
inc
mov
out
in
lcall
adc
shll
fs
fnsave
pop
jae
jmp
jge
mov
paddb
ljmp
aas
scas
std
jae
push
outsb
cmp
sarl
out
call
out
outsl
dec
rcr
or
in
hlt
popf
adc
cld
cs
or
in
bound
aas
xor
iret
inc
pop
jle
sub
insl
out
mov
jg
ljmp
js
or
add
cmpsl
shl
aas
scas
mov
popf
out
lods
pop
int
cld
pop
cmp
adc
jg
mov
mov
fildll
dec
push
cld
out
les
je
outsb
xor
shlb
add
push
push
xor
dec
push
js
fsubrl
test
mov
dec
das
add
js
jg
jmp
xchg
push
xchg
stos
popa
fisttpll
std
pop
push
fdivr
outsl
mov
sbb
in
out
fcos
ret
adc
out
in
dec
cli
clc
dec
pop
push
outsl
mov
shl
jns
jle
xchg
jg
shll
xor
js
mov
in
ja
fisttpll
jge
outsb
rorl
repz
sarb
cmp
cmpl
mov
mov
push
ljmp
xor
adc
adc
iret
repz
mov
shrl
xor
and
add
jecxz
jmp
jae
xchg
and
adc
lods
push
cmpsb
or
push
xchg
push
push
jae
rcrb
push
ds
sarb
fistl
adc
ret
hlt
ret
ds
jo
add
inc
pop
iret
sub
pop
and
or
and
mov
ret
adc
jl
mov
and
dec
out
cmp
jmp
loope
iret
decl
lret
and
add
jl
repnz
dec
mov
rep
ret
mov
cld
sbb
xchg
arpl
push
sahf
popa
dec
ljmp
push
cld
cmp
cmp
and
push
hlt
fsubl
pop
mov
mov
inc
inc
sbb
sbb
push
ss
int
lea
jmp
jg
aas
daa
es
addb
outsb
inc
push
xchg
hlt
fisttpl
movsl
jbe
mov
sub
push
jns
or
pop
repnz
decb
out
repz
cmp
mov
xchg
jle
idivl
je
divl
push
jl
aas
int3
in
and
sub
aas
xor
pop
jle
inc
js
xor
or
ret
jecxz
insb
xlat
xor
hlt
mov
mov
xor
adc
push
jp
or
adc
fs
jge
out
mov
inc
adc
cmp
jl
cmpl
push
mov
cwtl
push
js
adc
lea
cmp
xchg
push
push
aas
and
jo
iret
or
mov
push
xor
insl
hlt
push
mov
mov
or
add
outsl
repz
aas
orl
jmp
ror
mov
add
sbb
es
push
mov
test
outsb
fs
and
iret
rorl
xor
cmc
dec
into
out
gs
mov
js
xor
test
pop
in
jbe
jae
add
lahf
fs
std
aaa
mov
into
sub
das
mov
aas
test
inc
mov
pop
cmp
pop
xchg
jmp
mov
jmp
ljmp
popf
stos
insl
push
mov
outsb
push
repz
lods
pop
iret
lods
das
inc
push
sub
and
jg
lahf
mov
sbb
inc
out
cmp
outsb
mov
call
jmp
or
jg
and
mov
push
push
or
shll
mov
xchg
addb
pop
scas
sbb
and
ds
outsb
dec
push
ret
pop
sub
scas
mov
stos
jns
stos
adc
mov
mov
lock
jle
or
scas
jae
into
lods
cmp
sub
stos
jo
int
lods
clc
aas
fisttps
cld
je
add
outsb
fldenv
jl
aas
out
call
and
adc
dec
push
inc
call
xor
push
dec
in
xchg
push
bound
outsb
and
push
mov
in
push
je
ret
dec
dec
pop
sub
jo
mov
fisubrl
dec
mov
pop
imul
jmp
and
push
inc
sub
pop
pushf
add
out
aas
push
dec
cmp
sbb
lea
mov
sub
movsl
inc
bound
inc
insb
test
lods
add
mov
or
dec
ljmp
pusha
dec
or
inc
pop
repz
push
insl
lahf
add
dec
sub
das
fisttpll
sub
mov
fstps
popa
nop
sub
adc
fs
loope
pop
push
scas
xor
dec
push
cmp
pop
sbb
sbb
jl
aas
push
in
insl
scas
push
inc
pop
lahf
xchg
rolb
push
insl
addr16
fimull
mov
add
mov
cwtl
pop
je
cwtl
in
inc
jb
js
xor
iret
mov
dec
mov
mov
add
sbb
jl
mov
pusha
adc
cmp
mov
dec
jge
jmp
sbb
nop
or
or
sub
sbb
mov
xor
ljmp
popl
addr16
test
pusha
popf
insb
lahf
jg
xor
sti
data16
mov
out
out
pusha
sbb
dec
js
repnz
mov
jecxz
out
ret
push
or
push
add
lods
testb
out
mov
jmp
loop
pop
movsb
or
push
std
or
lahf
and
jo
mov
inc
subl
jecxz
cs
push
lods
or
xor
adc
ret
loop
mov
dec
scas
or
mov
jle
add
subps
repz
mov
lea
add
sbb
mov
mov
mov
orb
ss
add
inc
out
mov
inc
test
or
bound
jae
cmpsl
pop
xor
xor
scas
pop
push
xchg
xor
adc
das
sbb
js
icebp
outsl
push
out
aaa
mov
mov
pushf
jg
ficoms
addr16
push
jge
insb
push
jle
ret
rcll
sub
ds
iret
push
loop
lods
push
into
insl
mov
dec
fidivl
scas
dec
mov
sbb
rcrl
adc
mov
adc
pop
dec
xor
mov
ja
pop
dec
xor
sti
sub
rcrb
fists
fldt
xor
lcall
lahf
jns
sbb
call
fnsave
addr16
or
int3
decl
js
cs
popf
repz
or
out
testl
imul
inc
std
adc
xlat
add
std
addr16
ljmp
mov
in
ud1
pop
jo
push
mov
into
push
repz
mov
xchg
paddw
loopne
aaa
mov
outsl
insl
outsb
pop
push
popa
push
cs
icebp
pop
pop
imulb
lods
in
mov
int
inc
inc
jo
push
xchg
jbe
lods
aas
inc
ds
mov
fisubrs
mov
pop
out
insl
adc
xchg
sub
or
dec
mov
fisttpll
lahf
jecxz
loopne
pusha
add
add
mov
inc
pop
add
in
subb
sbb
fisttpl
dec
ret
scas
bound
pop
in
outsb
test
int
jle
xor
xrelease
pop
stos
imul
push
jnp
inc
in
pop
stos
shrl
std
scas
or
imul
xchg
scas
or
aas
adc
push
mov
insl
push
cs
jmp
in
inc
push
rcrl
pop
and
pusha
popf
setae
out
outsl
jg
adc
cmp
xor
adc
fdivl
push
bswap
jl
cmp
mov
lcall
jg,pt
xor
cmp
dec
adc
lods
push
jns
scas
shll
mov
jmp
lahf
mov
lods
mov
xor
jg
popa
nop
int3
or
adc
bound
mov
lahf
cmc
jmp
call
aas
nop
or
ss
sub
mov
mov
mov
cld
pushf
push
dec
sbb
js
inc
and
push
fldl
adc
orl
popa
cld
mov
add
pop
sbb
repz
pop
orl
xchg
insl
mov
outsl
in
pop
or
movl
dec
push
roll
dec
xlat
in
push
or
loopne
ljmp
hlt
jb
dec
xor
or
push
xor
push
jle
loope
adc
cmp
outsb
mov
xchg
in
popf
mov
das
stc
repnz
or
jno
out
out
push
mov
cmp
cmc
xor
scas
jae
mov
lods
push
xor
dec
xchg
xor
adc
jae
sub
in
mov
lods
scas
insl
insb
outsb
push
or
dec
or
dec
xor
add
add
fisttpll
xor
aas
xor
sbb
cmp
pop
outsl
aaa
add
mov
sub
outsb
add
test
pop
push
adc
sbb
push
dec
imul
cld
bound
jns
inc
insl
mov
inc
lock
outsb
push
aas
push
dec
pop
jg
mov
aad
add
test
aas
adc
cs
outsb
das
fdivrp
mov
adc
pop
jo
in
lcall
fistpll
or
jnp
popf
idivl
outsb
mov
lods
jmp
push
call
add
pushl
pop
lea
sub
jb
iret
jo
push
mov
jo
insl
out
xor
sub
incb
adc
outsl
addr16
pop
aaa
stos
lods
negl
sub
or
sar
add
out
cmpsl
and
andl
sbb
cld
bound
cmp
sub
aas
cmp
outsl
push
sar
pushf
int3
insb
mov
addb
or
dec
stos
adc
xor
outsb
jge
std
mov
jmp
pop
cld
or
lea
addr16
cmp
insb
daa
daa
pushf
xor
or
pop
xchg
ljmp
iret
adc
dec
adc
in
pop
mov
dec
ficoml
aas
or
jecxz
pop
ljmp
out
sbb
popf
lahf
mov
shr
fstp
das
push
cli
cmp
sbb
xor
lahf
outsl
out
adc
scas
enter
mov
repnz
pop
repnz
divps
cmp
std
pop
je
aaa
add
aaa
or
out
loope
jle
push
in
cmpb
xor
lret
aas
cmp
push
mov
nop
jne
insl
mov
push
sub
movsb
pop
xchg
mov
repz
inc
jle
and
xor
ds
push
aaa
pop
test
idivb
dec
insb
mov
adc
pop
popf
push
into
sbb
addl
jb
mov
jg
lahf
rol
sti
stos
push
lahf
push
out
jmp
inc
repz
push
rolb
dec
out
mov
aaa
dec
lods
popf
cmc
test
adc
lock
jecxz
push
insb
pop
cld
sub
lahf
dec
pop
shl
or
xchg
sbb
cmp
outsl
pop
ret
sbb
jecxz
aad
cmp
xchg
xchg
mov
and
jmp
jmp
inc
xchg
dec
or
xchg
dec
inc
or
in
shl
push
jmp
lds
mov
je
nop
inc
jb
dec
jge
scas
adc
js
mov
loope
std
dec
in
cltd
repz
sub
inc
jecxz
imul
jecxz
lcall
push
sbb
dec
sub
int
dec
push
adc
mov
push
sub
iret
pusha
out
pop
mov
jg
adc
mov
or
cmp
cmp
cltd
iret
mov
testb
sub
out
sbb
mov
lods
xor
jl
lea
cmp
sbb
add
mov
in
lahf
mov
pop
mov
test
or
loope
outsl
pop
pusha
inc
fistpll
or
dec
push
test
pop
jo
jb
adc
dec
fdivrl
cwtl
je
adc
adc
ljmp
cs
fs
inc
int
mov
mov
mov
xchg
out
inc
jecxz
nop
lea
imul
aas
pop
adc
jo
dec
bound
and
test
in
testl
insl
in
in
pop
pop
push
nop
repz
repz
ljmp
pop
cmp
fs
or
cmp
in
std
jne
ret
xor
cmpl
pop
xor
iret
push
pop
pop
and
out
inc
push
or
add
sbb
cmp
repz
sahf
pop
push
test
test
lock
mov
dec
dec
in
jmp
xchg
mov
jno
push
mov
les
mov
mov
insl
fistpl
mov
sahf
stos
in
sahf
and
jmp
sarl
ds
cltd
dec
adc
jns
cmp
push
rorb
dec
push
dec
pop
pop
mov
aas
loop
sbb
adc
flds
pop
cmp
pop
or
cmp
outsb
shlb
in
push
in
fisubrs
lahf
loopne
cli
and
push
hlt
outsb
popf
mov
xor
aas
sbb
add
lret
iret
das
bound
mov
arpl
sub
xchg
pop
inc
insb
jge
decb
pop
adc
mov
lahf
aaa
jnp
cmp
iret
cld
mov
outsb
iret
adc
mov
lods
insb
and
adcb
out
cmp
inc
imul
and
mov
clc
sbb
lcall
call
dec
loope
xor
add
mov
insb
sbb
sub
stos
sahf
loope
xchg
in
dec
lock
outsl
int
sub
insl
popf
loope
jle,pt
pop
mov
xchg
and
mov
scas
mov
pop
lock
dec
cs
add
push
iret
repz
or
fcmovnbe
inc
cltd
pop
popf
inc
mov
out
sarb
mov
je
push
xlat
mov
jne
popa
xor
and
in
dec
in
stc
int
ljmp
sub
hlt
int
dec
fildl
push
insb
aaa
jl,pt
js
insl
fldl
sub
push
loope
outsb
loope
mov
mov
adc
std
addr16
cmpsl
insb
dec
jmp
sti
cltd
jge
pop
sub
sub
sub
mov
jns
jno,pt
pop
and
push
cmp
mov
xchg
out
fisttps
dec
sub
inc
jge
push
addr16
ljmp
mov
pop
sub
fistpll
je
fucomip
sub
pop
cs
hlt
loope
in
push
mov
insl
pop
das
pop
popa
xor
movsl
inc
unpcklps
add
cs
add
stos
xor
dec
jge
shlb
mov
adc
xor
lret
pop
popf
xchg
add
mov
jecxz
push
ja
rorl
in
out
mov
fsubrs
push
enter
mov
or
cmp
sbb
loope
or
mov
xor
fdiv
pop
lock
mov
pop
fdivr
js
adc
and
in
outsl
pop
adc
cmp
movsl
dec
std
jns
or
mull
popa
jecxz
dec
icebp
iret
jbe
fildll
and
in
dec
dec
outsb
imul
pushl
insb
cs
or
outsl
into
jg
inc
sbb
inc
jle
mov
lahf
enter
cmp
push
jle
xor
add
jbe
inc
fidivrl
add
or
stos
lea
insl
dec
lods
jmp
jge
sub
call
dec
xchg
or
insl
mov
das
jbe
or
and
xchg
scas
mov
pop
pushf
and
sbb
inc
lea
jge
jo
es
cwtl
and
cld
popf
out
filds
jg
and
es
dec
jb
add
pop
add
dec
ljmp
pop
shll
or
xor
mov
test
aas
push
sub
xor
inc
adc
fcomip
adc
cmc
jo
outsl
ja
js
pop
mov
xor
jl
pop
pop
out
mov
iret
psraw
outsl
scas
aas
out
cmpsl
pop
das
jmp
lods
adc
push
cld
lock
jg
mov
ja
repnz
add
mov
xor
push
std
mov
cs
fists
orl
push
inc
pop
mov
scas
leave
lods
insl
imul
pop
shrl
lods
or
jns
xor
sbb
pushf
push
filds
pop
lods
push
push
lods
pop
add
or
scas
xchg
shl
mov
outsb
fistpll
insl
sub
push
ret
fistpll
sub
adc
pop
pop
push
pop
jns
addl
decl
imul
and
cmp
imul
pop
cmp
or
dec
jmp
outsb
shrb
lods
cmp
jns
aas
mov
xor
xchg
inc
mov
movsb
mov
dec
cmp
outsb
filds
xchg
lods
ret
clc
decl
ds
icebp
mov
inc
out
fisttpll
pop
xlat
pusha
sub
pop
cmp
push
mov
imul
mov
in
sarb
test
daa
test
xchg
push
jle
inc
jmp
sahf
in
clc
push
ud0
rorl
mov
adc
les
jnp
fldenv
shlb
push
push
gs
cmp
out
jmp
outsb
jg
adc
das
adc
js
mov
adc
lret
mov
cmp
jge
movsl
ds
push
xchg
adc
jae
incb
in
fldenv
maskmovq
imull
repz
outsb
aaa
lods
jl
push
inc
js
outsl
cmp
jmp
push
ljmp
aas
sub
hlt
push
adc
xor
sbb
rep
mov
jbe
jl,pn
loop
fwait
call
push
mov
jb
mov
mov
test
ds
fsubp
std
int
das
sbb
xchg
int3
rep
sub
sub
lock
int
fstp
xor
xchg
xorl
or
das
adc
jae
jnp
or
add
outsl
ret
xor
into
pop
or
jl
aas
in
cli
sub
lods
data16
ds
or
jmp
sarb
jge
scas
int
lods
out
inc
mov
add
push
push
inc
leave
lock
or
stos
stos
sub
or
xor
or
stos
pop
sub
or
addr16
dec
outsb
pop
js
dec
insb
xchg
sbb
dec
pop
push
ss
jge
js
pandn
das
aam
xchg
inc
or
iret
push
mov
scas
lea
or
out
aas
into
int
jge
loopne
ds
sbb
lods
pop
test
and
outsb
dec
stos
int3
std
push
push
popf
mov
scas
xlat
xchg
pop
pop
add
pop
fmul
jg
in
adc
and
sub
sbb
outsb
cli
or
sub
incb
in
cmp
jecxz
nop
sbb
pop
popa
fs
sbb
sub
dec
push
sub
out
jmp
test
mov
rorl
test
adc
sahf
loopne
add
or
lahf
and
loope
fst
std
pop
cld
call
mov
fists
in
cmp
insl
fucom
push
mov
scas
addr16
popf
sbb
arpl
call
aas
sub
and
xchg
stos
push
gs
je
popf
pop
inc
popa
inc
sub
cmp
call
sbb
jns
lar
repnz
or
cmp
das
push
outsl
incl
adc
insl
je
sub
mov
lret
pop
inc
xchg
push
jo
xor
addr16
pop
mov
aas
outsb
clc
inc
or
rorl
jge
inc
test
sub
mov
int
or
dec
inc
fnstsw
lret
or
push
xor
dec
push
cs
mov
lahf
stos
ret
adc
or
or
xlat
mov
popf
sbb
pop
inc
addl
insl
out
outsl
mov
jg
data16
in
stos
shl
aad
push
pop
das
orb
jge
jg
push
jmp
pop
push
std
addr16
sub
inc
mov
and
adc
inc
hlt
add
or
mov
call
and
push
pop
sbb
mov
mov
fucomip
jns
push
addl
mov
stos
loopne
mov
inc
int3
sub
dec
inc
jg
push
pop
jecxz
mov
enter
stos
enter
xlat
push
stos
pop
in
cmp
xlat
push
stos
xchg
mov
std
sbb
dec
push
push
or
leave
push
mov
je
test
xchg
ret
sub
mov
push
xlat
pop
popf
jnp
sub
lcall
pop
adc
mov
mov
enter
lods
or
jmp
adc
sbb
pop
jg
lahf
and
jg
fisubrs
adc
xchg
jg
cmp
mov
sbbb
mov
xchg
stos
mov
dec
fdivrl
mov
mov
mov
nop
xchg
outsl
stos
enter
pop
or
enter
mov
aas
inc
stos
xchg
push
jmp
push
cmp
stos
push
mov
xchg
stos
testl
cs
out
in
mov
sub
mov
test
out
pop
into
mov
dec
lods
popf
or
cld
lea
push
sub
sbb
xor
adc
std
adc
lahf
sub
sub
xor
cs
outsb
mov
ljmp
mov
or
js
pop
mov
xor
mov
scas
adc
push
xor
clc
mov
das
das
rcrl
inc
call
outsb
jmp
fisubs
fisttps
dec
adc
popf
sbb
das
stos
int3
mov
cmc
cltd
cld
and
cmp
dec
out
lahf
dec
loop,pt
mov
iret
dec
add
mov
loopne
imul
std
or
hlt
fidivrl
mov
das
sbbl
pusha
mov
dec
pop
pop
push
rolb
fstl
fbld
repz
in
int3
inc
repnz
jl
adc
std
xor
pushf
sub
add
pop
fstp
xor
test
pop
pop
imul
cld
lock
iret
adc
cs
cmc
mov
fs
dec
jl
outsb
mov
jle
mov
fsubl
outsb
xor
xor
scas
fwait
cmp
andl
js
insb
pop
mov
repnz
sahf
pop
sub
repz
insl
scas
aad
aas
push
jl
xor
jle
mov
or
inc
mov
jl
aam
xor
mov
fidivrs
setg
cld
mov
test
mov
lea
inc
pop
insl
in
fimull
lock
jl
sub
addr16
int
push
andb
mov
mov
sahf
jmp
int
dec
iret
addr16
pop
push
cmp
push
push
repz
seto
pop
dec
ja
pusha
frstor
push
pop
and
fwait
pop
icebp
outsl
stos
adc
pop
push
stos
mov
jnp
sbb
and
insb
cld
or
adc
xchg
bound
push
pop
cmp
dec
shrl
lods
rcrb
or
push
imul
pop
jmp
outsl
shlb
adc
push
or
cli
dec
repz
popf
push
cmp
pusha
fdivrl
mov
mov
fdivs
pop
cld
jge,pt
into
jle
pusha
sti
hlt
add
pop
subl
xchg
adc
dec
aas
mov
int3
aaa
inc
int
out
ret
push
shll
push
insl
mov
jbe
adc
push
hlt
push
inc
insb
inc
fucomip
pop
pop
and
xor
mov
or
outsl
in
inc
jecxz
cmc
in
pop
push
push
adc
jbe
mov
pop
pop
sbb
dec
stos
xor
sub
jmp
or
ret
mov
add
std
fisttps
test
pop
decb
jle
loope
push
sub
dec
cmpsl
shrb
dec
outsb
push
add
enter
xor
hlt
jg
int
jmp
cmpb
jecxz
pop
rorl
mulb
js
adc
arpl
jb
jge
sub
inc
mov
or
push
repz
push
mov
jmp
sub
jae
adc
jge
push
scas
or
cld
mov
xor
lock
int
lods
pop
push
sbb
adc
and
and
int3
scas
cmp
jo
int
dec
xor
in
dec
mov
xchg
push
dec
sub
cmp
fildll
add
mov
mov
sub
adc
into
sub
mov
dec
lret
inc
aad
icebp
sbb
adc
add
or
testb
adc
xchg
inc
cmp
mov
xor
out
cli
je
aaa
push
jg
xchg
xchg
call
ds
outsb
lods
movd
orb
repz
adc
push
repz
in
xchg
jle
out
jmp
insl
adc
pop
mov
jge
inc
repnz
lea
pop
push
cli
cmc
fnstsw
inc
xor
push
scas
call
mov
aas
push
adc
pop
cmp
and
repnz
std
dec
cmp
das
mov
iret
call
sub
outsl
jae
dec
leave
pusha
add
push
das
dec
inc
iret
hlt
idivl
dec
ret
ret
imul
sti
mov
jl
sahf
jge
push
jmp
jg
cwtl
insl
mov
push
mov
int
das
mov
xor
lock
add
jg
popf
fbstp
sahf
adc
add
mov
inc
cmp
insb
pop
rorb
je
and
incb
mov
pop
dec
pop
push
push
cmp
cld
lods
push
insb
hlt
mov
sub
dec
xor
nop
test
ds
sahf
ja
lods
jno
stos
xchg
sarl
jle
out
lret
dec
cld
push
sbb
lods
nop
pop
jp
mov
jl
mov
insb
fs
lahf
hlt
adc
outsb
or
fldcw
rclb
shrb
fsub
stos
shld
pop
mov
adc
xor
xor
or
mov
dec
push
daa
xchg
in
je
sbb
lahf
lret
or
mov
in
negb
addr16
sub
push
dec
push
pop
inc
add
popf
shlb
cmp
jge
outsb
sahf
inc
dec
imul
push
popa
std
ja
in
sub
arpl
or
push
sub
xor
divb
outsb
es
jg
cs
xor
jo
insb
mov
sbb
scas
add
push
cs
sub
mov
push
xor
inc
sbb
call
and
popf
in
sbb
mov
lea
mov
bswap
lock
pop
and
jmp
sub
mov
xor
test
mov
dec
or
add
fs
jl
lods
add
decl
negl
lret
clc
jae
mov
dec
adc
scas
sbb
in
ss
lahf
or
xlat
andl
cmc
jl
je
std
mov
jae
testl
insl
scas
jns
aaa
lahf
stos
popf
adc
out
sub
jl
or
fisubrl
les
jno
das
stos
popa
jl
dec
loope
scas
jo
mov
je
pusha
and
sbb
adc
lods
fisttps
loopne
aad
cmp
or
pusha
push
pop
fwait
mov
notl
in
je
push
outsb
push
das
dec
je
push
pop
mov
add
insb
push
sub
add
mov
inc
stos
sbb
adc
shll
fs
movsl
inc
cmp
add
das
or
stos
fstl
pop
lahf
push
pop
pop
mov
outsl
scas
cmpsl
adc
push
js
mov
jp
in
inc
lea
bndldx
out
cmp
fcomps
clc
mov
outsb
repnz
incb
addr16
push
lret
cmp
jecxz
lods
lods
adc
adc
lods
push
dec
jb
dec
sbb
insl
or
mov
mov
call
loope
pop
lock
pop
inc
pop
adc
jmp
aas
outsb
or
push
pandn
clc
ljmp
out
pop
iret
jl
jnp
daa
enter
inc
js
js
out
cs
xor
out
mov
or
out
mov
ror
aaa
insb
mov
insb
push
mov
in
dec
adc
jge
imul
aas
pusha
push
jl
iret
js
pop
je
outsb
das
sahf
lods
das
outsb
addr16
xor
lods
mov
test
popf
ljmp
xor
scas
or
cld
cmpsl
xor
jmp
fucomp
aas
iret
adc
mov
and
push
jbe
lret
js
outsb
out
in
or
push
popa
cld
insl
pop
shl
adc
in
xchg
push
push
pop
cli
or
scas
mov
inc
mov
cmp
mov
mov
scas
cmp
scas
shll
and
out
adc
addr16
call
jmp
cld
push
dec
lods
jg
push
sbb
or
and
repz
pop
popa
dec
dec
dec
aam
int3
push
pop
sbb
int3
and
or
jmp
pop
das
adc
orb
std
mov
and
lea
xchg
lods
xor
fs
dec
mov
addr16
lea
test
out
loop
inc
ror
sub
cmp
sbb
sub
dec
add
pop
ljmpw
mov
repnz
mov
push
out
jmp
outsl
in
lods
movsl
adc
xor
scas
addr16
push
stos
mov
sbb
aas
in
and
mov
aas
jb
int
and
std
fstl
mov
jg
inc
clc
das
stos
ffreep
stos
pushf
sbb
insb
decl
mov
cmpsb
sub
pop
pop
or
hlt
outsb
mov
xor
repnz
mov
or
jno
fnsave
int3
es
dec
and
xlat
dec
mov
sub
decl
sti
push
mov
dec
in
inc
mov
xor
rclb
mov
adc
and
inc
dec
mov
aam
and
nop
jle
in
dec
adc
push
outsb
add
jge
int
cmp
mov
jmp
or
loop
push
adc
mov
dec
xchg
insb
lea
out
adc
jle
scas
arpl
push
loope
fmull
iret
imul
in
popf
mov
lds
push
lea
add
aam
pop
push
inc
and
cmp
jmp
add
out
mov
lods
jg
insl
pop
lods
orl
or
stos
ss
dec
mov
cld
jmp
rorl
dec
shlb
mov
shl
cld
sbb
cld
mov
out
adc
fbstp
inc
addr16
mov
insl
in
loop
in
pop
cmp
xor
rclb
xor
outsl
push
aam
aas
cmc
imul
jmp
inc
jl
lea
test
and
pop
popf
pop
mov
out
leave
pop
cmp
sub
adc
cmp
in
and
mov
aaa
outsb
popa
mov
xor
lea
mov
shl
mov
iret
mov
sbb
rep
out
jmp
dec
imul
popa
insb
jmp
insl
mov
arpl
mov
in
jg
push
push
insb
push
xor
loope
addr16
pop
outsl
add
jge
pop
cmp
mov
mov
scas
cs
sub
adc
outsb
in
insb
jg
jmp
pop
imull
and
cld
add
jge
jg
xor
outsl
push
xor
sbb
cltd
and
hlt
popf
cmp
jmp
or
pop
outsb
out
scas
mov
and
lea
rorb
in
loopne
mov
loopne
lods
xchg
pop
push
jae
loope
sub
decb
mov
insl
fstl
lret
push
mov
jl
mov
adc
and
sbb
es
popf
xchg
mov
je
lods
out
das
je
sbb
and
pop
aas
jg
adc
int
mov
out
pop
subl
lahf
int3
mov
or
sub
js
ss
lods
push
pop
pop
movsl
inc
xor
stos
iret
mov
pusha
cmp
xchg
les
cs
fadds
pop
repz
xor
psubb
int
inc
inc
hlt
mov
add
cld
xchg
outsb
scas
out
cltd
mov
mov
nop
roll
mov
jae
clc
imul
fdivs
pop
cmpsl
dec
mov
cltd
adc
lods
mov
mov
ss
pop
xor
xlat
and
mov
or
or
mov
mov
repz
sub
jl
imul
xchg
lcall
adc
loop
mov
push
adc
push
push
add
pop
sbb
jmp
or
lods
pop
xchg
push
iret
or
cli
insb
js
sub
or
loope
std
sub
mov
pop
fnstenv
mov
imulb
out
outsb
xchg
jg
add
pop
pop
mov
sarb
iret
cwtl
std
sbb
mov
dec
mov
ficoms
cli
fnstsw
or
adc
mov
or
xchg
fildll
loope
outsl
xchg
inc
jmp
js
push
sbb
dec
insl
or
iret
pop
xlat
and
mov
outsb
ds
push
insl
sub
ja
mov
mov
add
mov
incb
or
sbb
mov
sbb
fcoml
pop
in
dec
mov
mov
mov
stos
dec
adc
jge
xchg
cld
jnp
shl
sbb
shrl
and
cwtl
in
xor
sub
mov
xor
js
sub
pop
xchg
dec
sub
push
add
adc
ljmp
push
jle
insb
ret
jg
out
loopne
and
outsb
sbb
aas
push
call
in
adc
lods
inc
in
les
je
ja
inc
or
or
pop
xchg
push
sqrtps
aam
out
jl
test
dec
bnd
incb
pop
sub
dec
adc
movsb
xchg
mov
popf
dec
mov
jg
bound
mov
and
dec
outsl
das
xor
fs
adcb
push
xchg
cli
fiaddl
mov
add
imul
cmp
fisubrs
rorb
iret
dec
lods
rcll
outsl
mov
pushf
rcrl
je
mov
adc
adc
lea
js
pop
sbb
mov
push
jne
adc
mov
js
cmp
dec
stos
jge
enter
pusha
enter
cwtl
lret
lret
pusha
loop
aas
sub
les
std
mov
repnz
pop
ljmp
add
jl
mov
cmp
add
mov
add
ljmp
popl
adc
cli
pop
outsl
cmp
lods
stos
int
pop
data16
xlat
pop
sbb
mov
std
insl
pop
loope
loop
sub
sub
or
popf
in
cmp
mov
push
dec
insl
xor
sbb
ljmp
jg
das
pop
jbe
xchg
pop
xor
scas
and
lock
out
mov
push
push
push
pop
push
lock
push
and
negl
in
sbb
mul
pop
dec
lods
int
loope
add
sub
das
fistps
sbb
pop
call
mov
fs
cmpsl
xchg
mov
sub
push
or
sbb
into
out
sub
cmp
lods
mov
xchg
daa
jne
xor
das
orb
mov
and
mov
bound
aas
ds
rolb
xor
loop
jb
jb
mov
push
std
outsl
cmp
sahf
pop
pushl
cmp
cmp
jo
mov
inc
lods
mov
lahf
loop
sbb
shrb
jl
test
pushl
outsb
xlat
add
iret
jbe
push
mov
lods
pushf
mov
jo
dec
push
push
ja
mov
push
sub
out
or
std
push
fmull
outsb
jbe
mov
mov
mov
sar
dec
stc
pusha
push
pop
jle
sbb
mov
cmpsl
dec
push
mov
popa
adc
std
xor
add
jecxz
jo
mov
in
sbb
push
scas
xor
std
mov
sti
jl
mov
xor
sbb
stos
pop
cmp
repz
xchg
outsb
jmp
cli
cmp
ds
pusha
les
iret
pop
mov
movsb
daa
xchg
push
arpl
shlb
repz
push
mov
js
pop
lcall
pop
ds
mov
cmp
pop
repz
mov
sbbl
faddp
leave
lret
push
pusha
mov
hlt
sub
ds
outsb
test
cmpxchg
in
les
aas
add
adc
mov
push
adc
aad
push
fsubl
push
insl
stos
pop
lods
mov
shl
repz
lods
dec
or
lea
mov
add
inc
dec
iret
pop
int
xchg
xor
addr16
push
sub
popa
mov
xor
imul
das
add
pop
push
repnz
mov
daa
mov
nop
in
bound
pop
repz
adc
int
mov
lock
xor
lahf
sub
es
out
xchg
decb
xor
js
mov
in
mov
xchg
cltd
or
mov
xchg
mov
xchg
loop
shrb
jecxz
out
aam
dec
in
outsl
xor
std
or
jecxz
outsl
cld
push
dec
repz
pop
cs
std
hlt
out
cmp
jge
or
movsl
insl
or
out
loope
in
lret
dec
daa
mov
pop
mov
js
pushf
push
and
das
jo
pop
jg
jae
frstor
outsl
std
sub
inc
or
adc
mov
imull
push
adc
jo
les
hlt
jl
dec
push
mov
sbb
pop
push
mov
pop
test
imul
add
pop
dec
xor
fisttps
mov
das
pop
in
outsb
aas
bound
mov
mov
fidivrs
lcall
or
lahf
dec
pop
push
lss
pop
mov
xor
jg
push
or
lcall
jp
cs
jmp
sub
std
lea
pop
sub
outsb
shrl
jmp
cmp
pop
out
mov
pop
insb
jecxz
fimuls
lret
or
lea
inc
mov
dec
sbb
cmp
scas
outsb
insl
lods
inc
pop
roll
das
mov
leave
add
push
arpl
or
rorb
popa
insb
and
lods
out
lahf
mov
dec
int
dec
xlat
aas
mov
mov
sti
lea
or
mov
mov
jno
xchg
repnz
inc
jmp
repz
add
lods
mov
add
push
jmp
and
push
xor
outsl
out
test
ja
pop
das
stc
jg
push
adc
cmpsl
mov
inc
mov
iretw
psraw
pop
mov
jp
call
jmp
js
cwtl
je
jmp
pop
and
outsl
sub
incl
sbb
subps
in
lods
stos
adc
xor
sbb
fbld
sub
into
add
push
push
loopne
inc
pop
sarb
fstps
fs
mov
dec
mov
insl
std
btr
fcompl
inc
mov
ds
shll
push
pop
pop
int
test
dec
and
mov
pop
mov
out
and
stos
inc
sbb
mov
xor
and
pop
dec
je
pushf
jg
inc
and
fstpl
add
push
ljmp
addr16
push
cmp
push
js
mov
xor
incb
inc
outsb
jl
outsb
cmp
jb
aas
xchg
adc
js
mov
or
jmp
mov
out
call
mov
push
js
and
lahf
mov
clc
aas
xchg
push
pop
in
push
sub
ret
cmp
loopne
out
and
sub
loop
js
int3
push
imul
dec
sbb
dec
or
addr16
fsts
push
addr16
out
test
add
pop
sub
ret
xor
jo
pop
cmp
xor
add
outsb
cmc
insb
dec
sbb
icebp
aad
fdivrp
sub
xor
repz
mov
fbld
ffree
adcl
scas
dec
inc
mov
sbb
out
rcl
pop
popf
repnz
lcall
dec
mov
or
fildll
pop
ss
dec
sub
aas
addr16
adc
lret
xor
dec
into
loop
pop
sbb
push
sbb
xor
scas
scas
adc
mov
and
adc
mov
outsb
xchg
mov
ljmp
sti
add
mov
fdivs
cld
mov
lahf
clc
or
mov
sub
jecxz
jne
xor
int
adc
cmp
mov
jmp
sub
cld
push
sub
lret
pop
cmovge
stos
dec
or
mov
add
fisttps
push
cmpsl
insb
adc
fxch
jle
and
sub
jl
out
mov
adcl
scas
lea
icebp
lods
mov
dec
rorb
int3
push
cmp
fistps
push
iret
sbb
testl
inc
dec
aas
das
mov
cld
pushf
js
pushf
sbb
pop
imul
sarb
jg
add
std
orl
iret
mov
je
js
pop
jmp
inc
outsb
outsl
in
and
stc
fs
out
jl
push
push
pusha
dec
pop
std
pop
scas
mov
xor
insl
popf
mov
sbb
rep
mov
test
les
jg
sbb
xchg
lahf
ret
jmp
je
mov
sbb
idiv
das
scas
lahf
orl
js
push
pop
jns
jns
and
gs
cltd
in
sub
insb
pop
lahf
icebp
mov
cld
ss
hlt
sub
xchg
out
mov
cmp
lea
dec
into
jecxz
cld
insb
insl
mov
jg
cwtl
popa
push
nop
ret
or
in
test
xor
jl
push
or
std
jecxz
sub
js
cwtl
adc
stos
ja
pop
or
test
es
mov
lods
push
pop
stos
leave
jle
addr16
jne
test
out
push
cmp
or
aad
ret
addr16
data16
sbbl
cmp
dec
shrl
repz
nop
lea
cld
mov
pop
aas
fcoms
aas
ret
js
mov
push
mov
pop
insl
lea
adc
mov
mov
mov
cmp
cld
xchg
jecxz
jmp
cs
bound
jecxz
outsl
out
test
pop
push
mov
push
adcl
lahf
insl
pop
push
addr16
fcoml
add
add
repz
xorb
cld
or
femms
xor
gs
fistpll
insb
push
cli
cmpsl
in
add
push
mov
sbbl
and
das
sub
sub
jle
sbb
inc
dec
mov
rorl
xorl
sahf
xchg
rorl
and
sti
jp
pop
xor
lods
roll
outsl
cmpsl
inc
push
dec
xor
jg
stos
lahf
repnz
mov
loop
in
push
jecxz
out
cmp
fbld
dec
ja
jl
adc
popf
idiv
pop
negl
cwtl
insb
sbb
dec
jno
push
sbb
or
out
enter
cmp
aam
or
in
out
mov
mov
jecxz
cmp
sub
hlt
or
sub
dec
adc
or
and
std
fistpl
mov
sbb
jne
mov
jp
repz
jb
std
stos
es
in
sub
mov
in
test
sbb
mov
pop
jecxz
lahf
dec
mov
pop
repnz
jg
jge
sub
cmp
jl
pop
or
std
pop
imul
push
push
or
fdivrp
jbe
mov
sbb
sub
in
pop
lahf
dec
sub
inc
mov
nop
mov
xchg
ret
mov
push
adc
lods
or
filds
lea
rcrl
jle
cmp
mov
iret
cli
scas
rcrl
mov
push
jg
sbb
lahf
push
ss
dec
sub
pop
pop
cmp
hlt
sar
arpl
outsl
jp
sbb
cli
inc
adc
add
cltd
sub
dec
push
xor
sub
pop
xchg
pop
decb
outsb
pop
mov
jecxz
xor
inc
mov
lock
xchg
cmc
int
mov
lods
sub
mov
lea
in
cltd
sarb
push
pop
imul
loope
cmpsl
repz
mov
les
stos
xchg
int
es
repz
stc
insl
rclb
pop
mov
push
rol
mov
jge
cmp
mov
inc
daa
sub
lods
pop
stos
cs
lods
mov
stos
lods
scas
sti
nop
xchg
mov
pop
pop
fistl
popf
loop
cli
lret
xchg
dec
and
mov
push
js
or
pop
int
jae
ficompl
scas
fdivl
jo
add
push
in
cmpsb
fistpll
test
mov
xor
or
mov
shrb
xor
jl
fdivrl
and
sbbl
dec
stos
mov
xor
insl
aas
cmpsl
enter
outsb
adc
or
cmp
insb
or
js
imul
pop
pop
adc
xorl
scas
ds
test
pop
out
aaa
popf
push
pop
insl
out
push
fstl
aam
pop
xor
sub
nop
inc
add
fdivrs
int
addr16
iret
in
repnz
outsb
mov
mov
out
pop
testl
dec
mov
jg
cmc
jl
sbb
mov
fistl
mov
ret
fistps
mov
stc
iret
daa
dec
cmp
out
out
filds
fnstcw
sub
add
int
loope
adc
or
and
pop
mov
sub
jle
mov
sar
push
push
pop
ljmp
insb
dec
outsb
pop
ljmp
hlt
dec
decb
pop
lcall
out
and
push
and
lock
movd
sub
insl
or
idivb
mov
mov
rorb
mov
pusha
fs
xor
pop
jo
add
xchg
scas
icebp
push
aas
push
push
cs
std
dec
inc
mov
scas
movsl
scas
lods
inc
call
mov
pop
fnstenv
stos
mov
popf
and
sub
xchg
xor
das
decl
pop
ffreep
lahf
lgs
in
movb
inc
xchg
notl
mov
adc
ljmp
cld
xor
lret
les
mov
push
or
jg
sbb
push
push
dec
push
jb
adc
ja
jmp
add
mov
jecxz
fsubr
push
das
mov
stos
lock
fldl
dec
lahf
sbb
dec
fprem
pop
lods
sub
cmp
add
inc
mov
fistl
orl
rclb
pusha
lea
popf
pop
loop
lock
nopl
jmp
hlt
inc
js,pn
inc
xor
inc
stos
lea
xchg
mov
popf
sbb
ret
mov
dec
lahf
xor
push
int
hlt
adc
insl
dec
xor
sub
jecxz
jo
jmp
das
fnsave
cltd
in
or
sub
ljmp
pop
add
add
add
mov
inc
aas
pop
rclb
jo
lods
mov
loop
jge
out
leave
jns
flds
cmp
mov
std
pop
mov
push
and
out
xchg
or
cs
pop
outsb
pop
mov
sub
pop
jle
fisttpll
sbb
mov
mov
aad
sub
and
mov
cld
fs
scas
fstps
pop
decb
rcpps
jle
leave
mov
mov
cs
xor
pop
push
jecxz
mov
lods
add
adc
and
adc
or
adc
lock
xor
adc
je
adc
pop
in
dec
cld
cmp
out
jmp
and
pop
dec
push
js
cmp
xorb
dec
insb
repz
test
pop
call
cmp
mov
stos
dec
outsb
iret
sbb
sbb
pushl
imul
outsb
js
ret
js
sub
insb
ds
push
call
sar
push
popa
or
add
push
leave
sub
lret
mov
sbb
inc
out
scas
and
insl
push
pop
pop
mov
pop
call
in
outsb
int
pushf
aaa
push
aas
int3
fisttpl
or
adc
repnz
gs
fsubl
pusha
out
cld
call
xchg
or
xor
jecxz
add
xchg
sbb
mov
push
adcl
decb
testl
pop
mov
fs
inc
pop
test
pop
fnstsw
sbb
or
xlat
outsl
lock
jl
jns
addr16
adcl
dec
outsl
xchg
mov
nop
sub
dec
sub
ljmp
sbb
pop
xchg
stos
cmp
dec
int
xchg
std
outsb
pop
out
and
adc
mov
imul
sbb
jmp
dec
ljmp
outsb
dec
ret
aad
lods
ss
xchg
fwait
and
cmp
push
stos
je
xor
subl
cs
out
jge
sbb
clc
mov
jg
pop
std
pop
add
xlat
sub
orl
push
jl
mov
pop
cltd
sub
pop
outsl
sub
sub
xchg
mov
ja
arpl
testl
or
sub
dec
mov
add
pop
fistpll
mov
ljmp
push
in
jg
jmp
aas
pop
scas
or
and
cmp
popf
dec
out
subb
add
push
pop
and
dec
out
xchg
int
js
push
inc
mov
push
xor
mov
push
std
push
and
lods
and
xchg
pop
cld
sub
mov
adc
rorb
mov
mov
jecxz
insb
xchg
jle
xchg
pusha
or
and
repz
push
insl
inc
cmpsl
mov
xor
push
ret
pop
mov
inc
sub
lock
fsubr
mov
ja
xor
mul
enter
xchg
push
cs
xor
fs
jge
jb
cmp
mov
and
pop
xor
nop
fs
push
push
xchg
mov
inc
or
cmp
ljmp
test
iret
mov
mov
push
aas
xor
js
or
jmp
ljmp
cmp
jecxz
mov
std
xor
and
insl
scas
jl
aas
jmp
mov
sbb
pop
call
pusha
stc
jnp
fildl
pop
sbb
dec
aaa
inc
dec
ret
out
jns
insb
scas
push
pop
mov
sub
add
js
push
loop
sub
stc
insl
sub
das
jle
mov
loop
repz
pop
pop
dec
sbb
outsl
jmp
stos
scas
xor
ds
loop
lock
lods
jg
xor
push
add
or
ss
pop
repnz
addr16
jae
ds
outsb
sar
cmc
cs
push
push
mov
mov
fmul
pop
jns
pop
andl
mov
scas
cmp
scas
std
jb
insl
je
call
and
xchg
cmp
add
dec
or
ss
ret
sbb
cmp
subl
outsb
clc
ss
insb
add
fdivr
mov
jbe
inc
aas
rcl
xor
or
jae
loop
imul
and
dec
fistps
mov
orl
dec
popf
pop
cs
test
mov
push
cwtl
add
aas
pop
mov
mov
push
xor
pop
and
dec
push
pop
scas
cld
call
insb
paddw
jg
outsb
int3
js
pop
aas
add
loopne
mov
or
sbb
add
adc
xor
imul
lahf
cs
js
cvtpi2ps
int3
xlat
fisubrs
les
orl
mov
sbb
ds
xchg
or
jecxz
ss
insb
mov
shrb
outsb
push
jge
or
dec
in
cmp
ljmp
sub
xor
sbb
inc
jl
mov
fstps
sti
jg
cltd
stos
pusha
xorb
ds
outsl
mov
std
mov
adc
lods
pop
add
jbe
jl
out
repz
in
and
push
jne
xor
addr16
push
mov
mov
xchg
sub
rep
push
sub
add
dec
mov
repnz
popf
lods
mov
jle
jl
clc
out
mov
add
clc
cmp
pop
add
jmp
nopl
push
pop
push
fwait
loope
popf
xchg
test
std
cld
fbstp
dec
lahf
pusha
inc
repz
and
int
and
mov
fsubr
iret
cmp
insb
pop
mov
call
push
jmp
aad
pop
add
sub
jge
xor
int
scas
dec
pop
je
and
lea
jg
lods
jecxz
xor
in
das
lea
out
stc
dec
push
dec
pop
out
inc
nop
jle
fwait
jns
adc
cs
testl
xchg
arpl
inc
mov
ds
jg
iret
dec
add
jmp
fstl
pop
add
cmp
scas
loopne,pn
inc
push
push
xchg
test
lock
push
jl
xor
inc
test
and
fistl
mov
and
loope
or
mov
ret
lcall
lock
pop
push
sbb
push
xor
add
iret
cmpl
paddq
jmp
out
jecxz
cs
adc
dec
insb
sbb
ja
mov
adc
inc
adc
or
ret
mov
add
jle
or
mov
call
std
pop
xchg
jns
xor
cmp
insb
fdivrs
std
psubb
push
mov
fsubr
aas
dec
jmp
into
dec
push
push
adcb
dec
pushl
insl
aas
jge
pop
and
add
insl
pop
inc
sub
pusha
insb
sbb
cmc
and
in
jb
scas
cld
mov
andb
sbb
adc
push
lcall
ja
in
pop
and
rcll
clc
cmovae
outsb
dec
cmp
in
push
sbb
jle
xor
adc
mov
imul
mov
sub
sub
clc
inc
cld
es
inc
adc
je
mov
loop
jl
scas
push
mov
rorb
mov
xor
pop
pop
lret
mov
fstl
or
ds
inc
hlt
rcrb
pop
mov
ds
psrlw
imul
lahf
inc
enter
add
jg
mov
mov
add
pop
jl
std
lret
sti
fdivr
leave
lahf
push
cmp
lcall
in
outsb
cld
pop
jle
das
push
jmp
inc
outsb
addr16
int
push
lods
xchg
dec
fidivrl
adc
cld
dec
in
xchg
pop
fbld
sbb
pop
das
scas
cmp
jl
mov
pop
pop
and
lahf
inc
rcrb
lods
add
push
loopne
sbb
add
dec
pop
rep
repz
cmp
mov
xor
push
mov
insb
call
icebp
icebp
mov
mov
pcmpgtb
incl
iret
out
cmp
jge
repnz
sub
or
cwtl
sub
pop
mov
xor
sbb
adc
movb
dec
imulb
test
pusha
fldl
push
add
jl
aad
hlt
mov
int
dec
lea
cld
aas
push
stos
jo
lcall
out
push
outsb
push
test
xchg
addr16
inc
aas
jle
test
mov
sub
insb
iret
or
adc
shlb
mov
pop
dec
pop
scas
adc
outsb
notb
push
jo,pt
loop
push
ret
xor
mov
incb
jle
or
dec
pop
shll
test
addr16
fstp
outsl
pop
repz
pop
mov
sub
adc
add
add
mov
jecxz
jo
mov
in
in
js,pt
inc
inc
sub
sub
xchg
lock
insb
sub
jmp
push
ljmp
lods
mov
out
add
pop
movsl
pop
pusha
sbb
lods
pop
dec
lahf
xchg
pop
in
and
dec
les
rclb
and
in
dec
lods
insl
aaa
psubsw
addr16
xchg
stos
mov
in
or
rol
sub
aas
adc
mov
push
lahf
push
arpl
mov
repz
jl
pop
insl
cmp
outsb
ljmp
push
cld
and
inc
sub
mov
mov
or
add
pushf
or
imulb
jge
or
or
mov
mov
mov
mov
outsb
scas
das
mov
xor
mov
es
std
mov
fsts
mov
aam
aaa
scas
sub
dec
cmp
xor
cmp
lea
jge
inc
mov
pop
xchg
inc
jnp
dec
out
popf
repnz
scas
push
lea
popf
std
movsb
mov
mov
insl
add
sbb
std
stos
lret
jae
shr
jl
data16
pop
dec
scas
push
inc
das
cmp
jmp
pop
mov
cli
dec
sub
imul
dec
fdivl
push
pop
mov
lret
in
mov
push
sub
mov
or
jne
icebp
gs
mov
pop
cmp
inc
cmp
push
pop
lods
enter
and
jecxz
aas
mov
jp
imul
xor
fisubrl
cmp
dec
sbb
jb
inc
dec
jg
push
js
cmp
adc
in
fistpl
pop
inc
int
imul
push
cmpl
or
xor
sbb
push
jge
loope
lods
movsb
dec
jo
adc
jae
por
mov
xchg
and
outsl
ret
repz
std
mov
out
cld
push
mov
pop
daa
insl
lods
adc
outsl
inc
mov
sub
cmp
mov
negb
outsb
loop
push
sub
int3
outsl
cmp
mov
dec
iret
test
pop
leave
push
fisubrs
mov
sub
xor
out
std
sub
pop
xchg
jl
cmp
aas
scas
iret
and
stos
inc
push
mov
push
cmp
test
sbb
cmp
testb
xchg
mov
std
dec
pop
pop
sbb
sub
subl
push
push
lock
xor
repz
cmp
scas
push
das
loop
js
movsl
repnz
sbb
jecxz
out
push
pop
icebp
jl
mov
push
xor
loopne
jbe
fstpl
cmp
icebp
inc
ljmp
sub
jp
adc
iret
push
push
and
out
movsb
hlt
enter
loop
jg
ds
dec
pop
mov
repnz
cs
out
mov
push
popa
push
jl
hlt
push
out
sbb
loop
lods
lahf
xlat
jg
push
adc
lea
call
add
repnz
mov
xor
shlb
aam
pop
inc
sbb
sbb
fs
sbb
pushf
idivl
mov
xor
push
push
push
adc
dec
repz
jmp
popf
inc
ja
ret
and
das
dec
fldl
cli
push
pop
mov
inc
cs
push
scas
outsl
cmp
xor
outsb
dec
shlb
scas
stos
xor
inc
lods
inc
mull
nop
dec
mov
dec
cli
scas
aaa
movq
outsb
int3
push
jge
pop
jne
jl
push
add
aam
je
je
insl
das
hlt
outsb
shrb
andl
sub
or
cld
pop
decl
add
jg
mov
pop
pop
fnsave
and
mov
aas
push
insb
sbb
cmp
xor
mov
gs
push
int
das
repz
pusha
cli
or
mov
add
mov
outsb
push
iret
pop
pop
shlb
jle
imul
cwtl
stos
test
mov
cmpsl
lock
push
out
int
outsb
push
rcrb
aam
push
push
rep
jecxz
in
out
xchg
or
outsb
xchg
push
sbb
sbb
aad
lcall
mov
mov
neg
repz
aas
cmp
dec
dec
fwait
adc
aas
repz
addr16
popf
add
inc
adc
adc
mov
push
inc
outsl
js
fwait
adc
lock
push
xchg
or
fimuls
cmp
lods
lahf
cli
outsl
mov
out
lds
dec
xchg
imul
inc
mov
frstor
cmp
loop
aad
jnp
xor
bound
lret
lahf
ds
or
xor
rorl
mov
scas
and
jmp
setg
nop
cs
and
outsb
cmpsl
aaa
add
mov
push
xor
push
jns
clc
inc
push
addr16
push
outsl
push
sub
push
aas
gs
pop
movsb
mov
das
lods
arpl
rcl
mov
pop
aaa
mov
std
and
cmp
aas
cld
mov
stos
add
mov
dec
xor
xor
xor
decb
decb
scas
mov
inc
insb
std
sbb
xchg
insl
xchg
mov
adc
mov
xor
push
cs
lods
cs
mov
mov
aaa
sub
lods
xchg
push
dec
jl
in
mov
push
pop
xchg
in
fdivs
xor
lea
xor
popa
lods
pushl
cmpsb
inc
sysret
cmpsl
push
mov
data16
out
lods
imul
or
pop
or
push
out
inc
pop
push
mov
mov
repz
or
or
or
push
sub
js
xor
jg
lret
inc
in
adc
pop
int3
adc
mov
ret
iret
mov
mov
cmpsb
mov
xor
std
cmp
jg
lea
scas
insl
dec
push
lods
gs
xor
push
ja
push
mov
pop
add
pop
aas
fcomps
pop
lahf
sbb
pop
jge
and
lea
inc
das
sub
jecxz
sub
jno
cmp
test
ds
lea
jg
sbbb
repnz
insb
and
push
mov
lahf
popf
pop
addr16
mov
lods
cld
or
xor
and
mov
fsubs
ss
dec
mov
in
inc
je,pt
and
or
pop
cli
outsb
insb
sub
mov
mov
jae
int3
xor
fistpll
pop
das
push
mov
shrl
scas
dec
test
or
enter
push
call
mov
cmp
std
ds
sbb
fsub
das
sbb
insl
mov
inc
addr16
pop
out
dec
pop
mov
insl
cld
in
das
popf
jg
xchg
out
push
sub
call
sbb
or
in
xor
das
incl
rcrl
sub
in
jo
inc
or
cs
repz
xchg
pop
dec
inc
jle
mov
std
fst
fimuls
test
xchg
sbb
xchg
mov
fwait
sbbl
sub
mov
ds
sbb
sbb
fcmove
icebp
mov
mov
popf
jl
push
lods
je
jl
sbb
pop
push
xor
mov
lods
mov
imul
push
sub
add
cmp
push
outsb
test
out
bndstx
xor
adc
mov
lahf
or
pop
pusha
divl
push
jecxz
mov
cmp
std
cmpsl
add
test
mov
mov
mov
jmp
push
lods
xor
add
scas
mov
mov
fcoms
iret
jle
insl
out
decl
xchg
push
xor
repz
fsub
push
sbb
add
pop
js
ljmp
dec
outsl
xor
dec
pop
push
xorb
fbld
insl
scas
push
cld
inc
sbb
mov
xchg
je
std
cmp
mov
xor
daa
pop
pop
add
insl
js
scas
jle
mov
sbbl
rcll
jns
lods
ja
mov
jp
pop
aas
sbb
mov
mov
repz
int
inc
testb
inc
aas
sbb
mov
movsl
les
mov
mov
jecxz
mov
out
pmullw
and
lret
jnp
xchg
es
add
popf
addr16
jg
pop
in
push
and
loope
scas
push
cmc
xchg
push
or
jl
jg
insb
xor
outsb
mov
movsb
aas
or
push
pop
pop
xor
cmc
pop
cmp
push
insb
test
xor
pop
addr16
xor
std
mov
pop
pop
fcmove
pop
mov
and
push
icebp
popf
inc
in
jns
or
adc
out
add
ficoms
adc
divl
das
push
dec
adc
aas
out
dec
insb
and
jl
int
imul
scas
cs
shrb
xchg
and
jge
jle
push
mov
rcll
rcll
das
movsb
push
adc
pop
push
dec
sti
push
in
inc
lret
pop
loop
xchg
sbbb
cld
dec
imul
mov
or
jl
js
punpckldq
xchg
push
hlt
ds
push
shlb
dec
jb
cmc
sbb
push
pop
js
cmp
and
orl
cmp
popf
mov
shrb
inc
mov
xchg
inc
hlt
push
das
jl
cmp
push
xor
lahf
or
adc
in
inc
sub
push
das
add
jo
popa
sub
push
mov
mov
mov
fists
inc
xchg
mov
adc
movsb
xor
fcomp
sbbl
shlb
jg
pop
movsb
jae
cmp
stos
push
push
adc
shrl
xchg
sarl
fisubl
lods
movsb
pop
cmpb
adc
lock
in
sub
cs
mov
dec
sub
pusha
push
adc
inc
mov
sbb
push
cld
iret
mov
je
in
mov
js
pop
fbld
je
cld
scas
ljmp
ss
xchg
adcl
cmp
sbb
inc
mov
mov
lods
aas
adc
cmp
adc
into
sub
jne
rcrl
fidivl
dec
pop
movsl
jns
sar
adc
mov
lea
je
adc
ljmp
out
out
outsb
mov
cs
ds
mov
test
jns
or
rcrl
fs
lahf
inc
daa
and
xor
test
or
out
pop
decl
js
jmp
adc
push
out
out
jge
in
popf
push
pop
push
add
int
je
and
scas
insb
inc
outsl
or
cmpsl
jb
xor
or
movsl
mov
lds
jns
out
ljmp
aad
jns
lahf
push
jne
outsb
lods
pop
adc
dec
push
jg
cs
mov
das
xorb
cmp
mov
ljmp
loope
dec
push
lock
adc
fstl
scas
inc
jbe
pop
xor
subl
pop
outsb
pop
lahf
pop
frstor
dec
clc
outsb
pop
mov
mov
push
and
aam
pop
mov
aas
fisubl
cmp
xchg
and
sbb
ss
mov
jge
lods
icebp
enter
lods
cmp
dec
iret
repnz
ret
push
add
push
pop
mov
lret
and
push
pop
int3
lea
lahf
sub
lcall
cmp
fistpll
cld
cs
jle
addr16
popf
ja
cwtl
popa
lods
pop
pop
loope
push
rorl
in
addr16
mov
std
sub
dec
sub
sbb
call
nop
pop
les
dec
inc
xchg
push
fldl
and
aam
daa
lea
rcll
dec
jg
add
jl
repz
orb
fs
call
lock
fbld
jg
scas
imul
ret
sbb
xor
adc
fnstsw
ret
pop
fbld
imul
bound
dec
js
xchg
mov
fistpll
es
and
inc
outsb
int
loope
ffree
fdivrp
pop
fsubl
sahf
jg
mov
repz
iret
sbb
sbb
in
insl
and
rcrb
mov
cmp
mov
test
pop
fisttpll
pop
mov
rep
pop
cs
sbb
cmpsl
in
lods
fidivs
cs
or
repnz
jge
dec
adcb
dec
clc
sub
xchg
and
sbb
adc
push
mov
insl
sub
mov
in
mov
nop
lods
addr16
or
pusha
mov
fisttpll
push
loope
lahf
xchg
stos
adc
push
dec
notb
pop
fbstp
das
dec
dec
jmp
lods
cmp
out
push
add
repz
sbb
xchg
sub
add
xor
and
jl
lahf
push
pop
or
scas
mov
push
adc
xor
or
dec
add
jne
push
popf
clc
shrl
adc
jl
ffree
jo
jmp
roll
cli
aas
dec
mov
clc
test
into
emms
sbb
adc
jg
fstpl
adc
aas
iret
dec
repz
lods
adc
ret
iret
mov
xor
xor
mov
pop
pop
adc
lahf
add
inc
js
pop
lahf
fs
icebp
inc
fnsave
pop
je
sbb
mov
xchg
stos
pop
mov
sbb
lret
or
dec
js
inc
popf
sbb
jb
loopne
rorl
cmp
sub
int
out
adc
pop
adc
je
pop
ljmp
mov
jle
pop
js
addr16
out
into
mov
sbb
dec
and
outsl
xchg
and
lahf
dec
js
sbb
adc
imull
sarl
lea
lahf
dec
jle
or
ficompl
pop
dec
push
mov
or
adc
das
in
cmp
jge
push
cs
push
xlat
insb
js
adc
mov
jge
cli
fistps
aas
call
pop
jl
mov
mov
fildll
cmpsb
cmp
mov
insl
dec
fcomi
sti
cmpsl
out
and
mov
jmp
dec
push
adc
and
add
insl
mov
in
cmp
pop
ds
lea
sbbl
adc
xchg
pop
bound
xor
add
das
push
cmp
pop
iret
inc
or
pop
adc
pop
imul
outsl
aas
add
popf
mov
pop
shr
stc
iret
lods
push
sbb
decl
sub
scas
pop
mov
insl
and
jmp
lahf
jmp
xor
pop
or
xor
adc
dec
jle
cld
xor
stc
ds
lock
cmpsl
ss
cwtl
loop
outsl
nop
pop
iret
jge
sbb
dec
rep
sub
adc
xor
std
pop
cmp
repz
inc
insl
outsl
sub
pop
fnsave
xchg
insl
lahf
hlt
testl
jp
js
mov
jle
nop
sahf
dec
or
add
mov
jg,pt
leave
sub
int
push
jo
lods
jge
call
push
push
cs
scas
popf
pop
fiadds
clc
pop
jge
sti
xor
dec
icebp
jp
lods
dec
mov
cs
jge
es
mov
fstl
out
in
sbb
out
orl
movsl
cs
out
outsb
cmp
mov
adc
or
sub
mov
pusha
sar
jg
out
fnstsw
enter
pop
ds
insl
out
lods
stos
decb
adc
repz
int3
ret
and
pop
insl
in
out
std
mov
loope
insb
inc
xor
and
push
cli
mov
in
mov
loop
sbb
xor
arpl
inc
push
inc
push
ljmp
and
addb
sub
hlt
jmp
addr16
pop
out
ds
push
into
dec
call
insl
pop
scas
mov
xchg
int
aam
aas
mov
mov
xchg
mov
mov
jmp
enter
adc
jl
ja
aad
push
cld
in
ds
or
shrl
js
jae
push
add
cmpb
xchg
std
jmp
jmp
in
push
sub
mov
in
jle
ljmp
jl
jae
push
cld
fisubrs
mov
out
dec
iret
lea
mov
in
jmp
pop
pop
dec
fisttpll
dec
les
and
mov
test
repz
push
lcall
addr16
and
rorl
mov
std
push
in
pop
aam
cmp
jb
shlb
push
mov
cmc
in
jl
cmp
pop
test
push
in
test
xor
js
nop
jnp
sti
aas
fs
std
adc
sahf
jg
fisubrl
aas
pop
jmp
out
dec
mov
rorb
mov
inc
pop
int
xor
jp
and
ljmp
adc
push
xchg
pop
xor
jmp
jge
inc
inc
fldt
and
add
std
das
mov
mov
mov
orl
push
fnsave
mov
sub
insl
or
or
add
gs
xchg
jl
out
cmp
lods
jmp
outsl
sbb
mov
pop
test
popf
mov
dec
fsubs
xor
dec
xor
adc
jg
adc
mov
cmc
adc
push
outsl
test
jbe
mov
sbb
repnz
fildll
or
pop
clc
lods
jge
or
push
pop
imul
xor
enter
mov
push
shlb
pop
paddb
das
ds
add
aam
loopne
out
jp
fisubrs
adc
std
in
sub
jle
push
sbb
xor
fnstsw
pop
movsb
in
mov
push
mov
mov
inc
shl
mov
push
push
addr16
mov
sbb
push
pop
repz
sub
jle
push
pop
xchg
aaa
scas
data16
insl
fsubr
sbb
outsb
adc
in
cmp
push
cmp
push
pop
hlt
mov
sub
jbe
mov
push
mov
cmp
jl
mov
push
aas
dec
adc
pop
add
dec
fisubrs
cmpsl
lods
cs
into
mov
jge
dec
leave
add
fistps
outsl
outsb
sub
lret
inc
neg
jge
test
xor
push
sbb
lods
outsl
mov
jg
ret
jns
cmp
xchg
test
out
mov
and
push
mov
mov
jae
or
add
sbb
pop
cmp
cwtl
dec
lahf
popf
pop
cmp
xchg
sub
outsb
enter
add
lea
hlt
mov
insb
je
mov
dec
mov
sub
xchg
sub
xchg
push
or
push
push
jo
and
ljmp
jecxz
out
cmp
fbld
xor
aas
pop
stos
jmp
and
sbb
nop
or
push
xchg
or
inc
call
cmpsl
movsl
shrb
test
sarb
or
das
iret
sti
aas
xchg
out
fisttpll
pop
pop
loopne
sub
ds
xchg
fs
mov
push
mov
shrb
insl
add
pop
dec
fmulp
jmp
adc
sbb
subl
test
add
xor
add
dec
iret
pop
push
outsl
out
stos
push
adc
mov
fs
outsb
imul
sub
dec
jl
cmp
lret
mov
addr16
add
jge
int3
xchg
sbb
scas
or
call
punpcklbw
jle
ds
out
ljmp
xor
test
inc
lds
push
out
and
por
insl
lock
dec
push
push
insb
sub
or
adc
and
and
add
paddd
rorb
mov
mov
xor
repz
dec
ds
jg
push
das
jb
add
adc
cs
clc
fisttpll
cmp
nop
jmp
jmp
cmp
js
pop
xor
aas
pop
sub
jae
dec
jnp
pop
loopne
andl
outsl
mov
xchg
outsb
in
push
ficompl
push
mov
mov
int
add
mov
lds
mov
fidivs
adc
push
fidivrl
jle
mov
loope
cmc
fstpt
repnz
idivl
popa
das
and
or
push
and
jg
repz
pop
pop
xchg
mov
mov
pop
dec
fsub
imulb
adc
bound
stos
sub
pushl
pop
out
pop
out
inc
xor
sbb
pop
nop
pop
and
cmp
push
fisubs
insb
repz
adc
push
push
push
push
jo
lahf
jecxz
mov
cmp
sbb
lret
pop
mov
push
lahf
pop
push
pop
mov
mov
and
adc
sub
xor
push
insb
or
in
nop
jge
push
fbld
into
pop
sub
dec
jecxz
outsb
dec
sub
stos
mov
mov
jecxz
popa
mov
push
xlat
dec
dec
lock
pop
repz
js
iret
sub
arpl
repz
mov
out
into
imul
aad
andl
imul
xchg
sub
mov
lcall
pop
punpckhdq
std
fistps
adc
and
adc
jl
add
lahf
sbb
sub
fnstsw
ljmp
addr16
pop
mov
mov
popf
fldt
aaa
and
mov
outsb
outsb
loop
adc
mov
adc
mov
adc
les
inc
xchg
fiadds
iret
or
in
cmp
sub
mov
dec
insb
iret
and
into
std
decb
pop
pop
in
sub
jg
call
dec
pop
jg
dec
jnp
or
mov
inc
adc
pop
xor
rorb
aas
mov
hlt
mov
cmp
js
hlt
pushf
pop
ljmp
je
js
mov
lods
mov
sbb
loopne
adc
das
lea
push
aas
popf
mov
adc
addr16
and
std
add
inc
out
arpl
aas
cmp
pop
mov
leave
add
jl
lea
cld
gs
imul
jmp
adc
push
or
add
incb
jno
sub
mov
daa
jmp
movswl
jge
and
add
repz
dec
je
adc
sub
fisttps
daa
lds
in
push
adc
clc
iret
rcrb
lods
insl
or
push
incb
push
push
fs
ljmp
mov
pushf
adc
or
fisubs
xor
xchg
xor
dec
adc
loop
cmp
in
repz
cmp
push
fstpl
and
popf
pop
popf
addl
hlt
popa
sub
xor
dec
push
pop
mov
fbstp
or
pop
pop
movsl
sub
pop
pop
std
scas
outsl
insl
jecxz
cld
pop
repz
pop
push
push
inc
das
or
cmp
fildll
iret
insb
jne
mov
das
mov
dec
jne
adcl
stos
std
gs
mov
lahf
jmp
ds
jo
and
lods
iret
jle
mov
stos
in
push
pushw
aaa
or
sti
adc
add
dec
in
dec
push
push
shrl
sbb
mov
int
divl
add
sbb
pop
aas
js
stos
mov
mov
jge
or
xchg
dec
std
popf
mov
sbb
xlat
jle
or
jg
dec
mov
pop
sub
fsubs
cmp
inc
mov
and
decl
adc
sub
outsb
pop
pop
push
sub
push
push
mov
and
jge
out
sti
lcall
ds
insb
dec
pop
jbe
insb
insl
jo
in
orl
outsb
cmp
add
inc
ss
adc
std
popl
or
sub
imul
aas
dec
mov
pop
jecxz
stos
mov
mov
mov
das
add
mov
insb
cs
ss
hlt
daa
sub
outsb
dec
pop
mov
outsl
mov
into
stos
shrl
ds
push
in
popa
lahf
repz
push
fwait
lods
call
insb
push
cmp
movsl
push
loopew
cs
mov
push
or
add
jnp
lea
sbb
out
pop
outsl
aas
je
push
jge
push
pop
js
fs
fisttpll
scas
sub
stos
jecxz
pop
jns
mov
in
repnz
or
repz
cmpsl
pop
fadds
aad
mov
inc
pop
adc
insb
push
dec
stos
inc
sub
hlt
mov
mov
push
insb
ffree
mov
pop
out
sub
lds
fildll
jmp
pop
or
fisubs
stos
fcoms
std
outsl
shlb
mov
mov
jl
ja
jl
mov
nop
mov
fildl
adc
xor
jmp
cmp
sbb
xor
dec
stos
rolb
jp
fistpll
mov
shl
lahf
mov
orl
nop
pop
lods
addr16
cld
leave
xor
scas
rcrb
inc
cmc
icebp
aas
push
ret
outsl
cmc
pop
mov
aas
pop
sub
inc
mov
gs
in
xchg
pop
out
into
mov
mov
lahf
push
push
xorb
jl
lahf
aad
pop
push
push
sub
jne
sbb
cld
sarl
insb
lods
pop
and
fucomip
mov
sub
inc
jbe
pop
outsb
or
jge
xchg
push
push
jb
or
dec
and
pop
insb
mov
shrl
xor
aam
sub
push
loop
scas
fbld
insb
pop
xor
js
enter
mov
adc
arpl
in
lahf
sbb
cs
insb
and
and
xor
add
iret
jge
dec
in
fcmove
mov
sub
outsl
xor
or
cltd
cmp
jmp
dec
insb
jmp
cli
xor
scas
cmp
ficoml
jecxz
add
xchg
push
pusha
jo
jge
lods
iret
je
push
inc
pop
cltd
out
stos
in
inc
mov
insl
scas
test
mov
add
add
inc
in
jecxz
xor
jl
adc
push
push
mov
iret
mov
xchg
dec
lea
fwait
or
shll
fldl
into
xor
decl
cmp
adc
pop
insl
dec
add
push
push
shlb
sahf
fnsave
push
push
aam
into
das
cmp
jge
inc
mov
push
xor
idivb
movsb
enter
dec
lcall
adc
mov
cmp
push
shl
lahf
stos
outsl
shrb
cltd
outsb
jmp
lods
and
adc
push
sahf
xchg
and
inc
dec
jo
in
in
shl
rcrb
out
int3
mov
fsubrs
cld
cmp
scas
pop
or
std
repz
jno
sub
or
or
lea
insl
bound
adc
pusha
fbld
or
push
fld
sub
gs
cld
xlat
inc
or
sub
pop
loope
pop
popf
das
aas
pusha
aad
add
jp
sub
je
in
repz
ja
xor
push
insl
adc
pop
jle
cld
sbb
imul
outsb
jge
cmp
aam
and
aam
hlt
popf
cld
adc
lods
dec
lds
outsb
lods
outsb
sub
mov
mov
sbb
dec
jge
push
lods
pop
ficomps
mov
dec
or
mov
or
bound
jno
push
enter
mov
lea
inc
insb
movq
pop
fdivrl
sbb
ss
js
out
cli
fwait
insb
mov
repnz
in
popa
pop
fists
in
fldcw
cli
fwait
add
clc
sahf
sbb
movsb
stos
push
jmp
mov
jmp
mov
outsb
dec
clc
sub
xor
das
push
std
rorb
in
dec
push
ja
out
out
push
es
insb
or
aas
cmp
loop
fucomip
push
iret
lods
scas
in
sbb
cmpsl
sub
cmp
call
je
repz
in
pop
aam
insl
std
loope
int
inc
cs
std
cmp
imul
mov
jmp
xor
std
mov
fisttps
and
and
cmp
jmp
and
data16
loope
ds
or
push
sub
or
pop
mulb
lea
cmp
inc
stos
clc
mov
dec
mov
and
sub
jl
daa
out
insl
mov
sbb
lods
pop
jg
das
jmp
adc
idivb
push
jg
out
dec
jg
push
adc
mov
repz
lret
push
push
xorl
lcall
pop
pop
mov
cmp
sub
add
cmp
shrb
mov
and
xor
inc
jns
mov
push
pop
sub
insl
jle
fadd
cwtl
mov
addr16
into
jns
loope
mov
shlb
adc
add
incl
inc
ja
ret
sbb
das
mov
das
bound
cmp
ljmp
mov
sti
sub
clc
popf
fldcw
and
adc
iret
jg
notb
pop
jmp
push
or
mov
pop
pusha
stos
scas
iret
xchg
mov
sbb
jle
repz
fildll
cmp
clc
mov
call
pop
sub
push
jmp
xchg
sarl
mov
cmp
sub
out
adc
push
mov
mov
data16
mov
movb
fdiv
dec
pop
jle
jge
inc
jnp
sbb
popa
lds
and
or
dec
cld
sbb
adc
hlt
ja
dec
and
lahf
pop
or
mov
out
xor
jg
cmp
adc
sbb
push
jns
aaa
adc
or
jg
jnp
sbb
mov
adc
rorb
jne
pushl
pop
sbb
mov
rcrl
or
or
mov
cmp
sbb
push
or
stos
cltd
push
data16
outsb
or
int
in
shr
or
decb
lea
sub
sub
pop
aas
push
ret
inc
rorl
test
mov
stos
pushf
test
mov
ss
cmova
mov
pop
stos
mov
mov
sub
stos
stc
outsl
mov
mov
orb
pushf
adcl
adcb
test
push
push
in
mov
pop
test
fmull
stc
mov
sub
mov
mov
pop
stos
mov
outsl
das
test
outsl
sub
stos
stc
outsl
mov
fsubrs
or
hlt
push
pop
mov
cld
and
cmp
xchg
push
mov
cmp
lods
pusha
jle
cmp
dec
pop
repz
insb
adc
mov
pop
dec
negl
mov
inc
dec
pop
mov
jmp
lock
cs
popf
pop
insl
ret
out
or
and
push
push
addr16
dec
fnstsw
je
out
outsb
int3
aas
sbb
pop
pop
rolb
inc
aas
push
mov
sti
cmp
jo
in
outsl
push
mov
or
xor
das
inc
pushf
lea
sbb
insb
rcr
add
add
cmp
repz
and
cld
sub
fstl
insl
mov
lcall
dec
aas
mov
xor
scas
or
mov
lret
ret
jge
ret
jl
sub
in
and
inc
inc
dec
and
shrl
test
push
jg
cs
pusha
call
jge
outsb
test
dec
adc
xor
fisttps
insb
fisttps
outsb
push
fbld
call
mov
pushl
mov
out
push
test
push
jl
or
clc
hlt
or
or
decb
loopne
inc
dec
sub
outsl
stos
push
daa
cld
cmpb
push
sub
imul
xchg
mov
cld
or
filds
sbb
fidivrl
repnz
pop
aam
adc
aam
or
outsb
mov
sbb
push
ljmp
cmpsb
mov
jae
mov
insb
fnstcw
aas
or
jg
xchg
loope
dec
mov
mov
outsb
jg
push
dec
dec
inc
ljmp
jnp
orl
stos
pop
decl
jno
fists
xchg
cmc
sub
les
push
or
xchg
call
sub
std
fistpl
loopne
xchg
repz
sub
mov
aas
outsl
xor
dec
or
or
push
push
stos
cmp
jae
or
mov
sub
dec
dec
pop
and
mulb
and
mov
into
xor
and
inc
ss
stc
fists
cmp
es
aaa
jecxz
pop
ss
stos
jge
loope
call
daa
jne
lds
xor
jecxz
xor
push
imul
stos
aas
mov
scas
pop
ss
push
scas
adc
shlb
lcall
push
sub
mulb
push
stos
test
out
cs
lahf
lahf
stos
pop
sub
jmp
adc
jns
pop
sub
push
iret
mov
ds
das
lea
shrl
fdivs
scas
in
jne
std
loope
inc
jge
aam
das
xor
das
aam
mov
or
es
pop
and
or
cmp
insb
fisubrl
call
insl
push
cmc
xor
pop
jo
sahf
sti
pop
das
call
int
add
jg
insb
repz
jle
aas
js
mov
cmp
out
xchg
push
inc
rcr
push
xchg
fxch
loop
out
aaa
ret
rcrb
aas
pushf
push
jbe
out
pmaddwd
in
test
mov
cltd
pushf
or
outsl
pop
cli
pop
out
mov
ret
insb
insl
in
lds
repnz
and
xor
lret
in
ds
jg
in
mov
dec
or
or
ds
pusha
add
int3
dec
repnz
daa
aaa
dec
add
insl
or
rcll
loope
das
mov
inc
inc
in
sti
xchg
add
out
hlt
and
push
out
daa
inc
fsubrs
xor
inc
stos
push
cmp
ficoms
xchg
insb
dec
rorb
mov
sub
lods
stc
adc
mov
add
fnsave
filds
add
add
add
add
stos
inc
mov
sub
sbb
insb
xor
icebp
add
mov
xchg
jne
dec
or
or
jl
rorl
jnp
jle
popa
outsl
andb
jne
into
or
cmp
jmp
ss
outsb
xchg
repz
add
into
or
aaa
shll
adc
xor
jecxz
pop
in
jle
lea
test
sub
xor
jecxz
cmp
xor
add
push
mov
insb
pop
jl
xor
repz
adc
mov
push
pop
pop
popa
jmp
mov
lea
jne
into
or
pop
and
xor
xchg
popa
jmp
inc
jl
mov
repz
adc
and
xor
pop
cmp
movsl
mov
add
adc
and
add
sub
sbb
or
push
lea
cmc
jne
dec
push
test
das
mov
xor
or
jle
incl
mov
test
mov
je
dec
or
or
or
jle
incl
mov
xchg
mov
in
les
adc
je
mov
std
lea
mov
sbb
or
jl
orl
xor
jle
and
into
mov
mov
xchg
mov
xchg
mov
outsl
mov
cs
out
mov
dec
ret
adc
stos
adc
ja
cmp
adc
aad
imul
insl
dec
scas
and
sbb
sarl
sti
push
or
shll
or
rclb
sub
aaa
xor
xchg
test
push
mov
jp
mov
pop
xor
adc
jp
je
pop
dec
push
sub
jmp
add
mov
jg
push
out
xlat
add
js
mov
push
sahf
jmp
pop
mov
add
add
js
adc
add
or
adc
loopne
adcl
inc
jge
xor
xchg
mov
stc
mov
sub
jle
movsb
imul
dec
adc
ret
xor
jbe
inc
js
dec
rorb
insb
popa
jmp
ss
pushf
scas
mov
lea
sbb
das
jp
enter
insb
mov
push
jns
pop
jne
insb
sbb
aad
fildl
loop
mov
mov
xor
or
jmp
ss
add
ss
add
js
mov
add
xchg
mov
lods
mov
popf
idivb
test
inc
dec
mov
sub
push
xchg
sbb
adc
or
jo
cmp
inc
jecxz
inc
cwtl
sub
add
inc
insb
sub
adc
adc
adc
xchg
xchg
mov
push
adc
stc
mov
xchg
pop
jle
jae
cltd
lahf
popa
jo
lret
cmpsb
sub
dec
sbb
add
dec
mov
sbb
jecxz
push
adc
into
scas
pop
ljmp
add
inc
and
or
out
lahf
orl
ja
xor
outsb
ds
mov
fdiv
dec
dec
or
mov
orl
or
pop
into
aas
pop
xor
or
cltd
add
lahf
push
or
adc
inc
adc
popf
mov
xor
xchg
inc
adc
add
rorl
jns
ds
sub
mov
xor
xor
imul
sub
xchg
xor
add
jecxz
mov
shr
or
shrl
xchg
cwtl
mov
pop
movsb
int
rorl
push
sub
ret
mov
xor
xchg
cs
std
je
mov
and
fistps
jno
lock
cli
cltd
idivb
mov
and
jp
std
pop
test
ret
dec
sarl
mov
rorl
inc
pop
inc
jae
repnz
dec
add
inc
lods
mov
aad
push
insb
insb
xor
int
jno
adc
icebp
outsb
mov
clc
sahf
fdivs
mov
cmc
fiadds
rcrb
int3
add
and
push
add
repnz
hlt
pop
int
scas
pop
cmp
pushf
cmp
pop
jmp
xor
jl
sub
xor
insb
sub
mov
dec
scas
sbb
jns
ds
mov
lea
popa
xor
jl
mov
add
push
mov
call
inc
aas
add
mov
scas
in
jae
jnp
xor
out
or
ds
leave
push
add
mov
lods
mov
pmuludq
mov
insl
or
add
sub
ja
sub
mov
insb
jb
jle
jmp
dec
jge
lock
outsb
inc
xor
iret
cld
sub
call
sub
lret
jecxz
cmp
insb
call
pop
pop
jns
aad
mov
out
xor
or
lea
mov
cltd
in
sahf
xor
std
or
xor
aas
mov
add
jbe
dec
out
inc
ds
fnsave
mov
dec
mov
and
xchg
cmp
push
pop
repnz
and
dec
or
xor
jo
xchg
or
or
ja
dec
test
ja,pt
push
add
sbb
das
push
push
dec
insb
pop
cmp
jae
iret
scas
mov
mov
mov
xchg
inc
iret
shll
pusha
sub
or
bound
cmpsl
or
cmp
cmp
or
push
jmp
insl
mov
or
pop
adc
push
fstpt
adcb
ljmp
push
lcall
sub
repnz
enter
divb
adc
add
add
pop
inc
call
aaa
pmaddwd
int3
sbb
pop
push
fdivrs
jne
mov
sti
sub
rcll
scas
xor
out
scas
dec
sbb
jmp
imulb
or
insb
mov
or
jge
enter
dec
jae
dec
repz
adc
loop
dec
scas
cmp
iret
cmp
outsl
imull
lret
push
mov
inc
jmp
push
or
fisubrl
out
mov
xchg
jge
xchg
repz
cmp
das
jge
std
push
inc
sub
int3
dec
mov
pop
insb
mov
adc
dec
jns
xor
insl
push
sbb
insl
inc
jp
insb
bound
lods
outsb
int3
add
push
dec
adc
jmp
stos
push
roll
xor
push
mov
pop
insb
jmp
push
or
mov
stc
mov
adc
sub
jbe
dec
push
add
xor
insb
mov
std
pop
xorl
or
jae
ljmp
adc
ds
lret
or
icebp
or
cmc
push
ljmp
add
pop
insl
repnz
mov
jl
pmulhw
scas
aaa
and
leave
test
sub
mov
adc
xchg
insb
add
int
out
les
enter
xchg
mov
sbb
jle
outsb
adc
mov
jl
xchg
mov
mov
mov
dec
es
clc
int
ljmp
add
mov
push
lods
aad
mov
mov
std
add
imul
std
jl
dec
cmc
mov
repz
insb
push
stos
call
push
in
outsb
loope
leave
mov
into
jae
jge
xchg
xor
sub
dec
adc
cmp
push
push
jne
out
pop
xor
or
leave
sub
xchg
cwtl
xchg
and
popf
adc
xchg
int
scas
mov
xor
shll
add
pop
mov
push
and
pop
adc
add
cmovnp
arpl
cli
das
div
pop
fnop
dec
mov
mov
int
mov
sbb
mov
jo
mov
jmp
jmp
ds
sbb
psadbw
mov
push
inc
je
test
idivb
mov
sbb
xor
xchg
dec
add
sub
and
iret
test
push
inc
repz
adc
sub
adcl
or
mov
add
and
js
adcl
enter
jo
lods
sub
adc
aas
out
in
cwtl
scas
mov
prefetchwt1
rcrb
scas
out
sbb
add
push
outsl
add
jl
test
jl
adc
mov
pop
sub
inc
sub
test
and
jmp
mov
xor
lmsw
push
test
repz
insl
in
insb
jl
jns
sahf
adc
push
lods
sub
jae
xor
pop
mov
or
lods
ss
dec
or
dec
push
mov
and
jo
push
inc
add
repnz
adc
lea
ljmp
push
repnz
mov
aaa
sbb
push
test
inc
xor
insb
adc
adc
jae
fcoms
jb
loop
outsl
mov
outsb
or
or
xor
clc
stos
add
push
xchg
or
adc
vhsubpd
data16
cmp
iret
mov
and
ss
ja
icebp
insb
mov
inc
icebp
stc
mov
and
adc
xchg
cli
insb
lock
popf
int
or
sbb
mov
mov
imul
or
insl
xor
roll
mov
nop
icebp
xor
xlat
aas
cli
xor
insb
into
int
pop
xlat
push
sub
mov
mov
jo
enter
sub
insl
insb
mov
xlat
cmpsl
or
loope
dec
xlat
popa
leave
mov
repnz
fwait
sbb
popa
int
outsl
sub
dec
cmc
mov
pop
mov
sub
sub
cs
popa
or
xor
leave
dec
ret
jl
sub
dec
ret
dec
mov
icebp
mov
ret
xor
push
xchg
mov
enter
lea
xchg
mov
dec
into
bound
jb
inc
xchg
cmp
adc
fdivrs
and
mov
inc
mov
scas
js
aaa
xchg
hlt
or
xor
decl
scas
js
pop
jl
popl
inc
rcrb
xor
cmp
inc
or
adc
clc
inc
cmp
movsb
or
lods
mov
or
xchg
lret
mov
fsubrs
leave
cmp
sub
add
pop
cltd
icebp
and
fs
icebp
insb
rorb
mov
inc
jp
test
lea
fadds
mov
or
add
jle
mov
xor
pop
lcall
inc
dec
push
xchg
adc
repnz
fs
insb
xchg
bound
ret
xchg
sub
inc
sub
sub
shrb
dec
xlat
pusha
dec
push
xchg
stos
in
fldt
ja
xchg
ss
stos
hlt
adc
adc
cmp
xchg
push
jp
or
mov
je
jl
rcll
mov
or
xchg
adc
xchg
fucomp
pop
pop
xchg
inc
inc
lcall
or
icebp
into
push
int3
xchg
cmc
mov
mov
add
push
xchg
daa
dec
push
aam
imulb
jmp
and
aas
sub
test
rcrl
scas
sets
or
adc
sub
cmp
mov
jle
popf
push
jmp
mov
adc
insb
cltd
pop
cmp
ret
movsb
ja
inc
jp
push
dec
clc
sbb
adc
js
or
out
push
pop
adc
or
rorl
stos
fstl
insb
xchg
imul
pushf
sbb
out
and
mov
mov
repz
xchg
iret
pushf
sbb
loope
sub
push
jo
xchg
insb
into
lahf
aad
lcall
pop
adc
js
sub
sahf
sub
js
or
iret
out
inc
push
mov
xchg
sub
ljmp
int3
push
mov
arpl
mov
xor
sub
mov
enter
push
lods
addr16
xchg
or
xlat
outsb
lcall
xor
adc
add
not
cmp
lock
dec
fisttpll
lea
inc
or
and
insl
nop
aam
sbb
cmpsb
jo
xor
lret
sbb
dec
leave
cmp
rorl
sbb
repnz
mov
inc
fwait
lods
sub
int
or
mov
mov
shll
lods
xchg
js
out
mov
mov
lods
pop
inc
aas
loope
fcomps
sub
jae
arpl
xchg
push
jle
int
repz
fisttpll
xchg
int3
popa
cmpsb
dec
popa
scas
lcall
or
inc
mov
lods
jbe
xlat
mov
adc
dec
cmp
add
ds
fdivrp
iret
xchg
into
mov
mov
mov
data16
mov
insb
push
lret
xor
sub
das
aaa
mov
js
into
aaa
inc
pop
or
pop
mov
dec
push
mov
pushw
mov
lods
das
int
xchg
mov
mov
xor
jae
cltd
push
pop
mov
jl
aaa
and
mov
jmp
jmp
js
mov
sub
outsl
insb
inc
int3
sub
xchg
daa
xor
outsl
lods
sbb
jmp
daa
dec
movsl
push
lods
repz
push
dec
shll
jne
sbbl
cltd
push
ds
shll
lods
ljmp
sahf
movsl
or
jbe
pop
scas
mov
or
cmp
lods
scas
inc
fidivrs
ss
es
test
scas
cmp
cli
mov
mov
or
hlt
cmp
outsb
into
jl
xchg
lods
push
sub
ficoms
push
movsl
add
push
test
aad
ja
jecxz
mov
lahf
sbb
push
cmp
jmp
pushf
xor
popa
std
dec
dec
out
jle
int
dec
jl
das
stos
shrb
dec
orl
mov
divb
mov
data16
jmp
xorb
xor
xor
rorb
aaa
mov
int
ja
subb
mov
xchg
mov
push
dec
dec
mov
stos
mov
xchg
sub
sahf
and
pop
sub
in
aas
popa
out
add
in
bound
add
inc
popf
aam
jl
or
mov
fnstcw
sahf
test
pop
adc
mov
jge
out
leave
aaa
imul
cmp
ret
adc
xchg
test
movsb
push
call
push
dec
mov
ss
sbb
int
icebp
mov
mov
shlb
jl
out
inc
pop
xor
xor
add
lret
xor
xchg
xor
scas
jmp
mov
hlt
aaa
pop
dec
jp
aam
xchg
sub
xchg
rcrl
lret
cmc
jecxz
sub
xor
or
leave
cs
cmp
dec
adc
push
jbe
dec
inc
push
jle
push
mov
pop
sub
adc
cmpl
std
ret
mov
dec
inc
push
adc
cmp
icebp
dec
push
cmc
add
ret
xor
xchg
mov
mov
insb
orl
xchg
inc
nop
sahf
mov
int
lahf
lock
xor
jge
xor
xchg
dec
std
and
or
int
mov
jbe
or
in
std
xorl
xor
dec
mov
scas
out
pop
pop
ljmp
nop
imul
unpckhps
xor
enter
hlt
mov
movsb
sbb
xor
cs
xchg
sarl
movsl
push
mov
push
mov
xor
imul
insb
loope
gs
stos
jne
xor
insb
xchg
pushf
cmp
imul
push
mov
or
sub
jle
into
ljmp
out
adc
adc
jno
dec
dec
jge
xchg
dec
jg
test
or
mov
add
scas
pop
pop
fdivp
mov
cmpl
scas
popf
int
insb
or
add
dec
xor
aad
sub
cs
iret
dec
or
fnstcw
adc
adc
sub
mov
adc
xchg
dec
iret
mov
jle
insb
mov
add
mov
sub
test
xor
cmp
xchg
cmpsb
jno
int
pop
mov
mov
int
sub
add
cmp
add
xor
xor
pushf
lea
ja
call
mov
call
cmc
fmuls
add
mov
sbb
xor
lcall
les
jne
sbb
lret
test
shlb
mov
adc
jae
sbb
jo
fwait
scas
popa
sahf
pop
ror
ret
imull
mov
sbb
cmp
repz
mov
shrd
xor
and
shr
mov
jmp
jb
xchg
in
mov
enter
and
or
ja
mov
add
and
aad
arpl
mov
ret
cwtl
cmp
iret
mov
xorb
stos
dec
lock
or
je
aas
jns
jae
lods
fcoml
cwtl
ja
das
ror
push
out
cmp
sub
movsl
pop
scas
dec
lods
das
loopne
xchg
ret
mov
movsl
xchg
rcll
push
add
popa
pop
mov
sub
fnstcw
repz
mov
aas
stc
out
arpl
fs
shl
lea
mov
data16
jnp
mov
xor
mov
cmpb
lret
adc
notl
pop
movsb
fwait
rclb
nop
mov
shlb
out
mov
push
dec
sahf
lods
and
inc
sar
shlb
insl
les
xor
insb
push
pop
xchg
movb
scas
inc
or
popa
pop
outsl
jl
je
aaa
jl
pusha
mov
scas
mov
repnz
pop
dec
rcl
je
dec
cmp
cmp
add
push
sbb
subl
ljmp
ja
add
inc
mov
jb
movsb
pusha
sub
fdivl
dec
movsl
mov
or
call
adc
into
mov
fimull
sbb
leave
mov
dec
sbb
clc
fnclex
bswap
pop
not
push
mov
movb
call
add
adc
add
or
add
add
dec
leave
unpckhps
or
dec
adc
mov
dec
inc
adc
lds
dec
add
adc
dec
add
inc
bswap
add
dec
or
mov
add
mov
or
and
mov
clc
cmp
bt
add
call
push
push
movl
pushl
call
movl
pusha
movl
movw
pusha
pushl
movb
lea
jmp
stos
pop
push
addr16
jmp
or
cmc
imul
push
lret
bound
stos
mov
cwtl
out
rorl
and
xchg
nop
inc
jp
cmp
fucomp
adc
jo
adc
or
aas
hlt
ljmp
dec
call
cmp
in
stos
jbe
cmp
ret
mov
xor
jnp
xor
test
fldl
mov
roll
leave
push
cs
pop
sbb
call
movsl
mov
mov
movsb
pop
push
pop
mov
std
adc
xlat
push
mov
out
jmp
fbstp
pop
data16
rolb
pop
icebp
ret
push
inc
repnz
xor
rep
adc
out
movsl
js
sub
adc
cld
cli
push
rep
inc
in
jp
test
jns
lret
sbb
push
push
roll
iret
aas
dec
xlat
lea
sub
aas
sbb
pop
pushf
push
fistpl
mov
mov
repnz
test
sub
and
mov
jp
fdivs
adc
mov
add
nop
jg
xlat
loopne
add
inc
dec
ret
jg
scas
push
push
pop
add
cmp
popa
pop
mov
jne
sbb
sti
aad
repnz
test
pop
or
sbb
mov
jle
or
add
fcmovne
adc
xchg
sub
out
int
movsb
inc
dec
sti
mov
test
push
xor
in
fldt
pop
ljmp
xor
adc
out
bnd
mov
std
add
dec
adc
das
pop
jb
pop
inc
pop
es
es
outsb
cltd
add
lahf
mov
cmpsl
fs
xchg
lock
adc
jg
mov
mov
in
cwtl
push
sti
inc
jmp
and
push
pop
imul
xchg
ret
mov
push
xchg
or
and
jge
sub
out
sub
xchg
inc
ja
jb
pop
rorb
out
lcall
test
mov
xchg
hlt
ret
shlb
or
dec
int
cltd
and
jo
fisubrl
cmp
xlat
jo
out
cmc
repz
add
stc
scas
push
gs
pop
or
or
shufps
int
mov
sbb
mov
clc
jne
mov
jbe
sbb
dec
pop
sbb
and
stc
inc
inc
and
jbe
inc
and
into
cld
add
aaa
add
lcall
jne
pusha
pusha
push
lea
jmp
jmp
jmp
pushf
pushl
rep
call
orb
xchg
lcall
in
movl
dec
pop
push
fcomp
jecxz
ja
push
dec
insl
jecxz
sbb
dec
enter
jmp
jbe
add
dec
add
cmp
insb
daa
lahf
pop
out
mov
sbb
pop
jmp
into
cmpsb
push
adc
daa
mov
sbb
adc
test
movl
call
add
addb
adc
imulb
push
mov
sub
xor
les
rcrb
push
sbb
inc
add
pushf
lret
xorl
mov
mov
cltd
xchg
mov
sbb
sbb
imul
stc
clc
repnz
movb
pusha
mov
call
call
sbb
shld
mov
cmp
and
clc
pushf
bt
push
add
add
bt
cmc
add
push
dec
mov
push
pushf
lea
jne
bt
stc
mov
cmp
cmp
call
sahf
jne
aas
inc
mov
jae
test
cmp
add
pop
sbb
les
add
mov
dec
sub
std
rol
mov
or
mulb
and
or
das
lods
add
inc
leave
inc
jbe
pusha
leave
cmp
lods
xor
pop
push
xchg
or
cmp
fldt
mov
sbb
sub
mov
pop
cld
jmp
call
aas
mov
in
cld
mov
or
imul
adc
call
cmpl
pop
mov
xor
mov
call
jo
jl
xchg
lret
in
push
dec
jnp
dec
add
iret
in
popf
add
sbb
mov
mov
movsl
insb
lret
adc
cmp
xchg
test
and
or
outsb
cmpsb
sbb
lcall
pop
push
loop
pushf
jmp
lods
lock
mov
outsl
and
in
add
fcoms
cs
add
lret
std
push
push
addr16
or
sub
loop
jns
push
push
into
movsl
sbb
sub
push
xchg
in
ja
pop
insb
or
xchg
mov
or
movsb
ds
or
int3
inc
lahf
sub
pushf
popf
cwtl
scas
fldt
fldenv
or
mov
iret
jmp
pop
adc
icebp
dec
cmpsb
jbe
in
sub
popa
xchg
int3
inc
inc
aad
repnz
popa
inc
xor
test
in
loope
cli
or
inc
loope
test
xor
adc
mov
cmp
xlat
xor
dec
imul
xchg
inc
out
pop
cmp
mov
mov
pop
pop
mov
nop
addr16
mov
sbb
mov
xorl
es
out
and
push
rclb
or
nop
mov
push
jnp
cltd
dec
mov
mov
loopne
ficoms
mov
pusha
push
cmp
or
pushf
lea
jne
xor
adc
mov
stc
jmp
pop
jle
adcl
lret
sbb
scas
mov
pusha
jmp
lock
sti
xchg
mov
int3
add
daa
mov
imul
mov
mov
scas
mov
dec
push
imul
jne
out
sub
sbb
push
push
pop
inc
out
jo
into
dec
mov
sub
sbb
mov
or
mov
jns
or
cmp
xchg
xchg
or
filds
xor
pop
ljmp
int
inc
cmp
orl
mov
js
pop
ss
inc
adc
or
sub
shll
inc
pushf
int
fnstsw
das
push
or
and
cwtl
insb
or
adc
jmp
jne
ret
call
repnz
jl
mov
addb
das
daa
pop
push
push
mov
or
mov
sar
and
jmp
lea
jbe
cmc
adc
and
mov
sar
setne
call
loope
stc
push
xchg
jno
jmp
jg
addr16
push
inc
add
or
xor
lret
stc
pop
imull
dec
xchg
mov
xor
lret
sub
and
mov
es
xchg
jae
inc
sti
mov
pop
insl
mov
call
test
imul
inc
mov
sahf
pop
or
clc
out
jmp
cmp
in
fwait
inc
gs
xchg
enter
bnd
in
and
xor
ret
lahf
int
jno
divl
lds
into
sub
lret
es
fsubrp
dec
aad
sub
sub
adc
mov
dec
pop
daa
inc
adc
fsubrs
cmp
inc
pop
sub
scas
inc
sahf
cmc
inc
in
scas
ja
jecxz
out
cmp
push
loop
dec
daa
xorb
xor
in
mov
sahf
ret
mov
daa
xchg
sti
fs
push
addr16
add
or
cwtl
pushf
out
cmp
mov
scas
popa
push
mov
jbe
fists
xorb
pop
push
xlat
outsl
mov
icebp
jle
mov
out
xchg
xor
rorl
add
pop
outsb
xchg
adc
mov
xlat
sub
inc
sbb
out
and
das
mov
movsl
mov
mov
xor
adc
add
xor
insb
or
imul
mov
xchg
xchg
lahf
push
lahf
fisubrl
mov
insb
cld
nop
rclb
cmp
leave
mov
pop
outsl
int3
mov
stc
jmp
call
movb
pushl
popl
mov
movb
movw
movw
pushl
ret
xchg
push
pushf
jmp
and
add
xor
shl
mov
bt
call
movb
jmp
push
mov
movb
pusha
lea
ja
push
mov
not
push
push
call
add
add
andb
push
fdivrs
stc
out
in
or
arpl
jl
xchg
das
xchg
xor
pop
dec
mov
cmpl
in
mov
loopne
repz
jns
and
fcoms
xlat
sub
sbb
sub
rcrl
aam
push
andnps
popfw
push
xor
adc
and
scas
jbe
mov
push
mov
dec
and
add
dec
pop
shl
out
xor
repnz
js
inc
ret
push
or
push
cmpsl
cmpsb
aad
and
out
outsb
dec
or
clc
jmp
sbb
push
push
nop
mov
test
sub
gs
addr16
sub
cmpsl
cmpsb
aam
rolb
xor
sub
sbb
ds
mov
outsl
or
push
lea
in
cmp
or
mov
or
cs
mov
push
mov
lret
idivb
pop
jo
push
pushf
pushf
pusha
movl
call
pushf
call
bt
push
or
jmp
lea
jne
rol
xor
sub
shld
bswap
mov
rcl
rcr
add
xor
rcl
pusha
mov
pusha
pushf
test
push
call
cmp
pushf
pushl
add
movb
pushf
pusha
lea
jne
mov
pushfw
push
bt
jmp
jmp
out
fwait
pop
test
test
in
sub
mov
mov
popa
sbb
push
jmp
xchg
mov
dec
faddl
xor
mov
mov
loope
mov
clc
pop
fbld
push
shll
and
mov
test
insl
sbb
test
cld
test
push
lret
lahf
sbb
add
mov
and
rolb
ficompl
cmp
or
or
js
loope
jnp
subl
sbb
add
push
sbb
icebp
mov
stc
cmp
pusha
push
pushf
movb
pushl
ret
negl
sub
clc
cmp
dec
jl
test
mov
sbb
dec
sbbl
movsb
cmp
add
mov
sub
push
xchg
and
int
js
movsb
ret
jno
clc
mov
loope
ss
stc
sub
jge
sub
sbb
sub
push
or
mov
das
sbb
adc
pop
adc
pop
sti
sub
pop
lret
fwait
sbb
jp
and
push
mov
das
sub
imul
cmp
sub
or
jecxz
repz
jmp
les
or
mov
mov
je
or
sbb
push
cmp
pop
jb
lret
mov
mov
mov
rorl
adc
pop
repz
pusha
insb
mov
imull
and
fistpl
int
ja,pt
or
lea
cld
jmp
mov
xchg
cmp
ret
cld
mov
add
sti
push
movsl
stos
loopne
loope
popf
stos
pop
or
aaa
in
call
or
jae
push
and
jbe
lea
inc
sub
clc
mov
jmp
cmc
test
jmp
push
pop
push
enter
pop
lcall
sub
adc
rclb
add
or
xor
fsubl
fcomps
ror
or
insb
mov
in
in
inc
lahf
sbb
add
fidivl
aaa
dec
aad
addr16
decb
shl
and
push
int
divb
jae
ficoml
jne
call
movl
mov
movl
pushf
pusha
movb
lea
jmp
clc
test
pusha
lea
jbe
pusha
lea
je
neg
mov
clc
add
bsr
or
btr
sbb
mov
bt
test
test
jmp
call
pushf
lea
jb
bt
test
pusha
cmp
pusha
mov
lea
jae
mov
shrd
sbb
jmp
ret
stos
in
or
scas
rcr
test
xchg
xor
pusha
pop
iret
inc
inc
mov
jnp
or
sarb
lcall
push
sub
push
es
xchg
dec
pop
cmpb
inc
adc
inc
lret
imul
loopne
sbb
ss
rol
pop
jmp
and
dec
bswap
or
mov
pop
sbb
cmp
leave
test
enter
dec
sete
inc
not
not
movb
mov
call
pusha
insl
pusha
jne
xchg
mov
cmp
outsb
and
js
add
cmp
std
dec
cld
mov
inc
mov
push
xchg
push
dec
daa
mov
nop
jl
call
push
aaa
cmpxchg
rcl
add
jae
je
and
jle
inc
adc
xchg
jge
rep
das
push
inc
lahf
inc
fadds
mov
xor
ret
xor
cmpb
jno
sub
dec
sti
xor
and
outsb
fimull
cli
fisubl
lock
bound
mov
je
push
mov
jge
cmp
sbb
je
stc
xchg
imul
dec
cmp
cs
lock
cmc
dec
fimull
jbe
cwtl
mov
and
mov
jne
test
xchg
pop
mov
xor
mov
daa
pop
into
ds
sbb
jge
gs
stc
pop
and
or
adc
jns
sub
sbb
push
enter
shr
aas
stc
jle
sub
mov
or
xor
xchg
or
push
push
stos
jns,pn
and
inc
je
push
out
mov
ja
jns
or
mov
add
pushf
add
pop
shll
dec
imul
sbb
jns
mov
aaa
push
aam
inc
sarb
fisttpl
out
je
lcall
push
inc
ret
adc
pop
jmp
jg
jb
mov
loop
pop
xchg
ret
cmp
fs
pop
jbe
or
push
pop
xchg
insl
ds
inc
adc
sub
rol
lods
inc
mov
out
and
cld
xchg
daa
cmp
xor
mulb
and
add
addr16
push
stos
pop
aad
clc
cld
cli
test
or
and
imul
sarb
out
and
cmp
mov
sbb
rclb
enter
push
sbb
in
stos
cmp
adc
inc
mulb
cmovs
push
loop
pop
ja
jae
xchg
xlat
dec
add
outsl
jne
lret
sub
adc
sub
push
repnz
stc
inc
fstl
cmpb
or
imul
and
gs
xor
les
jbe
pop
fimull
mov
xchg
fisubrl
pop
xor
sub
inc
xchg
sbb
push
sub
cmp
and
push
movsb
sbb
pushf
or
loopne
in
add
mov
mov
jae
mov
call
pop
sub
in
nop
adc
jmp
mov
pop
fdivs
orb
mov
dec
bound
out
sbb
adc
lods
push
add
loope
cltd
lods
rolb
dec
jmp
dec
pop
in
lcall
fimuls
pop
call
stos
popa
xor
mov
jbe
jmp
add
jns
or
lock
aam
leave
xchg
scas
test
push
lret
push
xchg
stos
movsb
sbb
ret
aas
pop
mov
mov
test
fwait
or
imul
lret
cmpsb
adc
pushf
jmp
insb
and
sbb
cmp
daa
rorl
jbe
dec
imull
pop
int
aaa
lock
push
fldcw
xor
push
cmp
nop
lock
clc
mov
sahf
ja
pop
mov
mov
out
mov
fcomip
mov
fisubrl
call
mov
shl
or
sub
push
xlat
pop
sub
sub
loopne
stos
jae
jecxz
hlt
arpl
cmpsb
lahf
pop
adc
pop
out
pop
out
adc
mov
jbe
fcoml
jns
cwtl
out
bt
movw
mov
movb
test
movb
movb
pushf
lea
je
pusha
add
test
stc
cmp
test
cmp
mov
pushl
jmp
pushf
movl
pushf
pushf
mov
push
lea
jmp
lea
jne
pushf
push
lea
jmp
cmc
ror
movb
pusha
jmp
neg
mov
bt
clc
clc
and
push
add
pushf
push
lea
jmp
push
lea
jae
jmp
test
mov
mov
lods
jecxz
xlat
or
jl
and
out
dec
aad
jecxz
outsl
inc
mov
adc
stos
add
leave
dec
inc
sub
mov
out
fdivl
and
cmp
jl
sub
mov
xchg
jns
mov
les
out
and
add
jno
jmpw
popf
xor
and
ror
xchg
cli
xor
popa
ja
inc
jp
popa
push
mov
cld
jb
cld
inc
lret
dec
jb
sub
fcomip
sub
std
lcall
ljmp
movsb
add
xor
lret
test
imulb
imul
fs
lea
xlat
xchg
lea
mov
lret
inc
imul
inc
push
lret
test
jl
insb
cmpsb
and
je
js
add
mov
pushf
lea
je
test
adc
cmp
add
seto
not
mov
jno
add
clc
cmc
mov
call
mov
pushl
lea
jl
rep
pusha
movsbw
mov
pushf
lea
jmp
subb
and
pop
sbb
arpl
xchg
dec
cmpl
mov
test
pop
jecxz
lret
xor
xor
mov
mov
iret
jnp
in
add
sbb
aaa
or
jnp
mov
popf
pop
stos
scas
jp
jnp
push
ja
xlat
out
push
fisttpll
in
sub
out
sub
icebp
mov
pop
enter
mov
into
movl
sbb
mov
sbb
sbbb
cmpb
call
pusha
inc
add
test
jmp
jae
aad
xorb
cmp
or
adc
inc
aad
dec
or
dec
sahf
divl
or
sbb
inc
clc
ret
sub
mov
jl
repz
incl
pop
imul
push
dec
xchg
inc
pop
leave
mov
push
int
or
int3
pop
scas
leave
mull
adc
cmp
ret
daa
pop
hlt
mov
outsl
pop
inc
inc
lret
lret
pushf
sub
xchg
aaa
adc
std
scas
gs
dec
add
jbe
sbb
dec
ljmp
arpl
xchg
rorb
pop
adc
pushf
xchg
pop
sbb
mov
out
sbb
shlb
stos
jg
push
push
xchg
sbb
xchg
daa
push
jnp
xchg
inc
pop
add
aam
xor
sub
dec
aaa
pop
js
push
push
int3
dec
divl
pop
push
mov
dec
pop
or
dec
sbb
push
and
jne
pop
xor
dec
adc
dec
sbb
cmc
fsubrp
adc
cmp
add
imul
in
jmp
or
ds
int3
or
pop
mov
imul
dec
pushf
xlat
adc
xor
in
iret
inc
jge
inc
sbb
jmp
inc
and
push
movw
pushf
mov
pushl
ret
lea
ja
bt
cmc
imul
pusha
cmc
add
push
push
lea
jmp
lea
je
bt
cmp
pushf
cmp
call
add
jno
xchg
inc
test
add
xor
mov
imul
les
dec
sbb
inc
push
adc
loope
scas
in
sbbb
mov
or
jbe
push
inc
cmp
pop
hlt
push
pop
cli
repnz
sbb
jmp
stc
cmp
pushf
pop
pop
pushf
lea
lahf
pushl
push
pop
mov
pusha
call
lea
jb
mov
call
test
cmp
test
push
push
lea
je
push
add
pusha
pushf
cmp
pushf
lea
jb
stc
jmp
cmp
mov
sub
pushl
bound
outsb
mov
pop
dec
iret
add
ret
mov
jb
sub
or
push
pop
sarb
mov
popf
decl
xchg
cs
shll
sbb
ljmp
stc
lret
fwait
sbb
xchg
leave
addr16
jmp
fstp
popa
jns
pusha
cmpsb
xor
addr16
jp
rorb
movsb
fisubrl
jle
std
sti
sbb
adc
insb
mov
dec
sti
and
adc
ror
add
sbb
adc
addr16
or
mov
push
enter
adc
mov
push
pop
mov
inc
sti
xor
cmp
sbb
ss
push
lea
push
mov
mov
inc
sub
call
pushf
movl
pusha
push
movw
lea
jmp
rol
rol
mov
push
pusha
bt
pusha
cmpb
jmp
mov
je
cmpsb
sahf
xchg
dec
mov
jne
insb
jb
mov
sub
out
mov
scas
icebp
push
call
aas
mov
inc
mov
ds
pop
nop
jnp
dec
xor
dec
lret
jg
push
js
subl
test
dec
lret
and
aad
xchg
jne
bound
sbb
mov
out
mov
lods
cmp
bt
xor
movb
rol
cmp
call
cmc
imul
movb
add
pusha
push
push
pushf
lea
jmp
data16
sub
add
inc
mov
mov
mov
cmp
add
pushf
aad
es
jno
scas
lret
push
xor
les
mov
and
not
mov
mov
ret
outsl
in
int
jns
cmpsb
jmp
pop
sbbb
or
ds
or
cwtl
xchg
or
test
sbb
sub
push
mov
sub
xlat
aad
cmp
push
and
mov
lahf
dec
push
ljmp
les
icebp
mov
faddl
inc
dec
pop
test
lret
stc
rcl
mov
or
pop
jb
cmp
xor
adc
sbb
inc
into
insb
insb
mov
mov
cli
and
xchg
inc
jns
and
sbb
in
xchg
add
imulb
mov
repz
in
idivl
fildll
fldenv
sub
nop
mov
stos
and
sub
dec
mov
inc
lret
xchg
xchg
sub
pusha
mov
dec
pop
out
or
out
dec
cmp
cmpl
jno
sbb
adc
or
jb
cmpsl
inc
mov
out
mov
mov
or
mov
sub
pop
sbbl
fdivp
cmp
ja
xchg
sub
mov
cmc
testb
popf
sahf
mov
mov
mov
mov
clc
adc
adc
pop
leave
push
call
loop
sub
shll
popf
jb
test
aas
test
jno
lahf
jmp
jbe
imul
jno
and
in
xchg
mov
xor
lret
fistpl
stos
push
pusha
lea
jmp
movl
pushf
jmp
jmp
repnz
sbb
jp
jo
xorl
leave
jle
and
je
mov
aam
test
andb
push
mov
or
sahf
iret
add
jbe
enter
jecxz
xchg
int3
ret
sbb
sbb
cmp
mov
call
inc
mov
mov
jmp
ss
lcall
pop
dec
out
sbb
jg
lret
dec
and
sbb
cmp
repnz
pop
push
bound
shlb
mov
mov
sbb
xchg
adc
inc
dec
cmp
rorb
mov
jp
orb
jge
jecxz
nop
cmp
lcall
aas
je
xor
mov
xchg
sub
iret
cmp
jbe
int
repnz
cli
int
jle
add
xor
xchg
adc
push
xor
stc
popa
sbb
cmp
stos
and
roll
cmp
es
outsb
xchg
or
and
outsl
jle
popf
dec
cmpsl
loope
adc
divl
jae
mov
dec
aas
mov
push
mov
xchg
and
lcall
loop
js
lock
pushf
mov
aas
sahf
lcall
mov
adc
jge
push
mov
enter
jbe
mov
xor
ret
jecxz
push
shr
add
nop
popa
add
pop
pushf
jne
ja
test
xchg
stc
mov
inc
adc
sub
int
outsb
stos
push
jns
jnp
jnp
inc
push
xor
pusha
cwtl
loop
mov
mov
sub
stos
insb
fistpll
fidivl
and
and
test
mov
rcrb
adc
adc
mov
aad
fwait
mov
cmc
xchg
pop
and
pop
outsb
mov
outsl
fidivrl
negl
sbb
dec
cmpsl
xchg
jmp
inc
jecxz
leave
sahf
mov
mov
pop
data16
insb
xchg
adc
div
lock
movb
add
setne
fucomp
and
or
sbb
inc
gs
call
mov
mov
leave
sbb
dec
sub
pop
les
aaa
jl
sbb
test
hlt
idivb
xor
push
sbb
mov
push
movsl
mov
adc
cli
add
xchg
or
test
seta
lods
std
pushl
inc
pusha
pushf
inc
call
jmp
repz
call
ss
add
push
xor
inc
mov
add
sbb
sub
mov
pop
aaa
push
es
call
sub
rorb
cltd
or
movsb
insb
mov
mov
inc
mov
and
data16
push
adc
lahf
pusha
icebp
ud0
xchg
push
pop
mov
enter
sub
ret
sbb
insb
stos
std
das
mov
cmp
jl
jmp
push
pop
roll
insl
es
adc
fidivrl
xorl
mov
hlt
jo
out
sbb
push
push
push
movsb
std
orb
scas
and
inc
sbb
fidivrl
cmpb
and
scas
imul
xchg
shr
adc
mov
cltd
das
call
mulb
addr16
sbb
int3
jle
mov
lods
push
xchg
in
mov
fidivrl
orl
scas
clc
and
loopne
sub
push
xchg
sbb
scas
clc
mov
fs
jae
jmp
add
inc
gs
outsl
fs
gs
imul
add
fs
je
clc
sub
push
cmp
jmp
push
pushf
lea
jne
jmp
lea
call
xor
mov
jmp
movb
setle
call
enter
repz
push
ds
dec
lahf
xchg
into
dec
pop
aas
jns
xor
ds
jns
nop
sub
jae
mov
mov
shrb
xlat
andb
xor
std
and
sti
sbb
es
fldt
sahf
insl
jae
insl
nop
into
fbld
fldl2e
les
outsl
mov
scas
mov
int
or
mov
xlat
mov
pushl
jcxz
push
mov
pop
test
aaa
add
cmpb
std
push
adc
xor
call
jmp
shl
addr16
into
ds
add
jns
jmp
inc
fistl
les
in
sbb
into
mov
mov
pop
inc
lret
lret
jno
loope
mov
sbb
sti
ja
mov
cmp
jmp
in
pop
xchg
or
sti
je
adc
call
mov
sti
in
mov
inc
mov
push
inc
in
pop
cmp
test
fdivrs
mov
imul
mov
xchg
lods
pop
dec
sbb
sbb
sbb
sub
icebp
jno
subl
gs
xchg
and
or
mov
out
xor
arpl
sbb
adc
lret
add
mov
mov
lock
pop
addb
cmp
jle
sub
or
or
mov
pop
xchg
add
lock
push
aam
mov
inc
sub
aad
movsbw
push
sub
bsr
bsf
shr
push
movsbl
push
neg
lea
xor
movsbw
pushf
movzbw
pusha
lea
jmp
pusha
lea
jne
setae
movb
movzbw
not
lea
je
push
not
movsbl
lea
pusha
jmp
jmp
cmpb
push
movl
pusha
jmp
imul
test
test
cmc
add
pusha
lea
jmp
add
fistpl
add
add
add
add
add
add
add
pop
add
add
add
add
xchg
sub
mov
inc
test
out
insb
cwtl
stc
aas
arpl
loope
and
adc
incb
push
push
xor
setno
mov
ljmp
int3
push
loope
test
sahf
lods
int
int3
arpl
loope
jmp
rol
popa
iret
outsl
shll
mov
ljmp
imul
cmpsb
out
stc
jnp
test
lahf
jns
lock
movsl
push
mov
fwait
cmp
lods
pop
and
sbb
push
inc
xchg
js
fidivs
ljmp
dec
loop
and
pop
mov
les
cmpsl
mov
out
fidivs
pusha
scas
mov
repnz
mov
icebp
push
loope
pop
or
mov
push
push
outsb
adc
test
js
add
jmp
stos
lahf
jg
jno
daa
popf
jge
cld
cmpsb
xchg
or
jne
fwait
jmp
jp
hlt
loop
xor
add
and
dec
inc
in
dec
fmuls
xchg
or
movups
negb
add
icebp
jp
adc
movsb
xchg
outsl
mov
sub
and
pop
push
nop
mov
je
dec
dec
push
adc
neg
leave
pop
jnp
loopne
test
shrl
cmp
inc
sbb
dec
clc
xchg
push
fdivl
test
outsl
lcall
les
clc
mov
inc
xchg
pop
pop
cli
into
test
dec
ljmp
data16
inc
out
loop
test
mov
mov
shl
xchg
rcrb
shrl
jmp
sbb
pop
xlat
and
pop
sub
div
adc
xchg
lods
orb
ror
ja
add
jae
add
dec
push
jl
xchg
imul
incl
adc
push
mov
push
test
jne
jmp
enter
xor
pop
push
lds
and
je
pop
iret
movsl
adc
push
jmp
and
sti
jo
gs
push
mov
fs
add
adc
adc
js
enter
dec
std
std
push
sbbl
in
mov
dec
and
cmc
mov
roll
int3
cmpsl
mov
pop
fimuls
pop
push
add
lea
jmp
adc
cmpsl
sub
scas
daa
jae
adc
aam
push
mov
aas
decl
mov
stos
inc
ljmp
mov
js
dec
test
hlt
jl
movsb
and
insl
adc
mov
lock
leave
popa
mov
lcall
mov
fs
das
out
sub
subl
std
test
ljmp
add
xchg
mov
or
mov
sbb
sahf
jle
push
jbe
mov
test
inc
and
jno
push
sub
sbb
popf
cmc
mov
inc
mov
enter
ss
outsb
lret
movsl
pushf
fwait
pop
aaa
dec
mov
xchg
aad
dec
xorl
cltd
shll
ror
test
xchg
orb
stos
mov
sub
sbb
push
in
sub
mov
adc
inc
std
mov
out
les
inc
mov
sti
sti
insb
jbe
pop
jae
mov
out
scas
dec
or
dec
push
jnp
push
divl
cmc
push
idivl
xchg
sub
jne
cmc
ds
adc
and
into
jmp
fnstenv
cmp
cmp
cmpsb
daa
adc
ja
xorb
cmpsl
sub
lods
mov
pop
xchg
mov
xchg
js
jnp
ss
pushf
out
popa
stos
cmp
mov
or
es
mov
cmp
ja
mov
dec
mov
ficoml
das
push
outsb
pushf
sahf
imul
lods
les
rcrb
jnp
mov
lret
jmp
mov
pop
lcall
pop
pop
jp
movsl
out
cmpsl
and
adc
push
lds
les
sbb
inc
ret
push
cmpsb
cmpsb
adc
add
inc
push
push
add
out
into
inc
movl
mov
and
or
fisubrs
jno
je
push
ja
adc
test
adc
fcom
pop
push
stos
mov
push
fldl
sub
jl
and
das
movsb
fcmovb
icebp
xchg
push
lea
add
lea
sbb
fmuls
sub
inc
dec
push
sub
jp
idivb
mov
mov
pop
fsts
in
repz
fsubr
and
jge
jae
jecxz
rolb
jle
sbb
sbb
inc
dec
and
lods
jns
mov
lock
sti
ss
test
clc
int3
jbe
repz
lock
mov
and
mov
in
dec
daa
sub
stc
ror
mov
adc
cmp
ret
pop
sub
aad
test
mov
jbe
and
jns
inc
mov
repz
push
push
popa
inc
fists
out
outsb
int
sbb
mov
or
dec
ja
inc
pop
sbb
imul
mov
sahf
cmpsl
mov
stos
popa
idivl
gs
insl
push
add
test
xor
popa
and
jge
pop
fbstp
daa
enter
ss
sbb
cmpsl
fsubrl
add
mov
shl
in
sub
mov
fildll
mov
iret
pop
fdivrl
pop
or
add
inc
xchg
lock
and
in
pop
addr16
filds
dec
push
fsubr
outsb
stc
lds
inc
or
fwait
in
mov
push
lods
xor
add
out
sub
adc
sub
mov
fs
sbb
xor
dec
or
push
lock
cmp
nop
lahf
jo
jg
inc
insb
mov
pop
or
jg,pt
icebp
movsl
sarl
lea
insb
xchg
sbb
popa
data16
push
push
or
adc
jno
in
jg
push
push
js
sub
dec
pop
mov
jbe
out
out
xchg
cmp
xchg
jmp
std
xchg
iret
mov
jmp
mov
movsl
test
stos
adc
xchg
pop
rcl
call
fldl
mov
adc
sub
pop
loopne
adc
test
outsb
cli
popa
jecxz
adc
cmp
std
push
push
jno
inc
mov
insb
mov
add
fcomps
dec
inc
pushf
aam
in
push
cmp
mov
cmp
inc
mov
sub
push
lret
sbb
jnp
xchg
data16
mov
or
xchg
cmpsb
xchg
push
outsb
jne
aad
and
push
jne
dec
dec
sbbl
dec
stos
bound
stos
jno
xor
lock
lret
or
mov
dec
dec
into
call
lret
clc
mov
and
mov
fs
int3
mov
pop
cmp
or
xchg
pop
nop
dec
outsb
repnz
outsb
hlt
clc
mov
int3
inc
xchg
or
mov
inc
mov
xchg
popf
sbb
and
inc
lea
mov
repnz
shll
xchg
cld
pop
iret
inc
add
pop
arpl
push
cmp
add
ret
imul
js
lds
hlt
cmc
fidivrs
rcrb
out
dec
and
sub
sub
dec
movb
xchg
scas
push
popl
pop
mov
ret
outsb
pushf
jecxz
aad
sbb
pop
xor
push
clc
pop
shl
xchg
cmp
jno
and
jmp
lea
jge
push
inc
mov
lahf
scas
xchg
inc
loopne
enter
movsl
inc
shrb
out
fidivrl
adcl
add
adc
dec
dec
push
cli
dec
sbb
adc
cli
add
arpl
movsl
mov
push
pop
adc
sbb
fadds
stos
shll
or
fwait
mov
cmp
jo
xlat
lahf
es
jnp
push
xor
negl
pop
push
orl
push
cmpsl
pop
popl
std
fmuls
push
dec
je
mov
push
sub
push
fdivr
rcr
into
repz
sbb
pop
pop
pusha
movsb
aad
add
push
mov
stos
pop
mov
xor
lcall
fldl
lret
out
data16
jno
cmp
lahf
ljmp
sbb
mov
pop
aad
ret
clc
xchg
fs
stc
mov
sub
jp
fiaddl
fmuls
lret
movsb
fsubl
outsl
add
add
into
push
lds
fcmovbe
into
and
lahf
outsl
and
mov
mov
out
sti
jecxz
cltd
xchg
jnp
fisttpl
sub
loopne
movsl
xorl
outsl
in
sti
cltd
repnz
cmp
std
std
das
sti
adc
pop
jecxz
es
pop
out
dec
test
ss
popf
movsl
cmpsb
mov
imul
ss
mov
nop
or
repz
sbbb
in
stc
incb
pop
cmp
out
mov
aad
js
inc
test
push
aaa
cwtl
adcw
xchg
jle
sub
lcall
cwtl
sti
xchg
mov
pop
sbb
hlt
mov
das
jmp
cmp
inc
arpl
push
les
xor
push
and
jp
jge
or
push
das
dec
xchg
lea
sbb
xchg
loopne
push
xchg
loop
insb
cmpsb
icebp
jmp
jae
cmp
ljmp
js
pop
pop
jp
ret
mov
cld
push
adc
mov
not
outsl
push
cmpsl
test
lock
jmp
mov
cmp
inc
push
cmp
fdivrl
mov
add
subl
sbb
sbbl
mov
inc
repz
movsl
insl
lahf
call
adc
aaa
shrb
nop
aas
mov
lea
shlb
pop
sub
dec
jne
mov
sahf
xor
mov
lcall
das
sahf
inc
jecxz
push
or
pushf
outsl
mov
dec
mov
pop
mov
jb
xchg
mov
clc
xchg
sub
fdivr
jg
out
int
xorb
call
xor
add
push
mov
dec
jns
js
scas
cli
sbb
cs
sub
lea
rcrb
mov
or
dec
lods
arpl
mov
jle
adc
push
in
inc
jb
lret
sbb
lock
aam
or
mov
jno
hlt
or
adc
mov
sbb
cmp
call
aam
pop
adc
mov
outsl
cld
lahf
and
loop
neg
les
test
xor
xor
jle
mov
xchg
cld
jmp
aaa
add
stos
fnstcw
jmp
ret
iret
adc
mov
iret
rcr
aam
and
fisubrs
popa
push
or
mov
mov
sbb
jns
pop
push
loopne
sbb
insb
add
sub
sti
push
mov
insl
mov
dec
mov
outsb
xchg
cmpsb
ljmp
sahf
hlt
cmp
push
xor
fs
dec
mov
dec
fistpl
bound
sub
daa
subb
lahf
jo
shll
inc
cli
xchg
mov
xchg
add
add
fs
jne
push
call
bt
clc
stc
test
push
shrd
shr
mov
push
cmc
stc
clc
sub
jmp
movl
pusha
movl
pushf
lea
jmp
pusha
pusha
mov
pushf
mov
push
pushf
mov
mov
call
pushf
popl
pushf
push
mov
pushl
popl
pushl
pushf
lea
jmp
mov
pusha
mov
jmp
pushf
popl
jmp
pusha
mov
call
mov
jmp
pusha
pusha
pushl
mov
pushf
mov
mov
call
sub
pushf
call
mov
not
cwtl
cwtl
mov
pushf
call
repz
popl
lea
rol
pushl
not
rcr
push
movl
bt
mov
call
mov
pushl
call
push
mov
mov
mov
call
pusha
mov
pusha
movb
lea
jmp
push
mov
push
mov
push
mov
push
call
mov
stc
sub
call
btc
bswap
cmc
not
pushf
rcr
sets
ror
sete
shr
sub
test
bt
add
cmp
neg
mov
lea
je
add
jmp
pushf
mov
call
mov
pusha
add
mov
pushf
lea
jmp
jmp
push
mov
jmp
repz
popl
push
pushl
popl
btc
movl
rcl
lea
btr
mov
rcl
rol
pop
movzbw
rol
push
push
dec
bswap
movzbw
rol
lea
movzbw
call
xchg
mov
mov
repz
bts
rcr
mov
not
pushl
pusha
call
jbe
mov
add
or
add
adc
add
adc
add
add
add
mov
add
sbb
add
mov
add
mov
add
stc
mov
add
mov
add
int
add
add
add
fnstcw
add
sarb
add
es
add
es
add
adc
add
push
mov
add
mov
add
and
add
sbb
add
push
mov
add
mov
add
and
add
fstpt
add
mov
add
mov
add
jmp
mov
add
mov
add
and
add
mov
add
and
add
call
mov
add
cmc
mov
add
mov
add
add
add
adc
add
sbb
add
mov
add
mov
add
in
mov
add
mov
add
hlt
mov
add
or
add
mov
add
mov
add
push
mov
add
cmc
mov
add
mov
add
mov
add
mov
add
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
int
add
sbb
add
in
mov
add
mov
add
add
add
mov
add
mov
add
push
mov
add
mov
add
mov
add
push
mov
add
mov
add
mov
add
mov
add
iret
mov
add
mov
add
mov
add
call
mov
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
call
mov
add
mov
add
es
add
and
add
sbb
add
adc
add
mov
add
add
add
mov
add
add
add
int
add
mov
add
mov
add
mov
add
int
add
mov
add
aad
add
push
mov
add
in
mov
add
es
add
mov
add
mov
add
mov
add
sbb
add
int
add
jmp
mov
add
add
add
add
add
and
add
mov
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
movl
inc
and
sbbb
call
pushl
popl
pushf
mov
pushf
mov
lea
jmp
test
pushf
cmp
mov
lea
ja
mov
sub
sar
mov
movsbw
test
dec
lea
and
sub
movsbw
dec
lea
shrd
sar
and
inc
pushf
neg
sub
pop
jmp
pusha
cmc
jmp
pusha
pushf
mov
mov
mov
push
jmp
mov
cmc
add
pushf
push
lea
jmp
call
mov
pushl
jmp
mov
pushf
mov
jmp
mov
mov
pushf
mov
movw
call
mov
movb
mov
jmp
jmp
pushf
push
mov
pushf
jmp
mov
push
lea
jmp
pop
push
pushl
popl
ror
rcr
bts
movl
bt
stc
mov
call
push
jmp
jmp
movb
jmp
or
pusha
xor
call
lea
inc
dec
lea
bswap
add
sbb
sub
cwtl
clc
sar
rcl
lea
movzbl
movw
dec
cmp
and
movw
cmc
sub
pushl
mov
pushf
pushf
popl
pushf
lea
push
lea
jb
push
std
lea
mov
std
pushf
lea
std
pushl
call
call
movzbw
jmp
bts
mov
bt
mov
pushf
call
xchg
mov
mov
not
call
jmp
pushf
popl
movw
pushf
push
pusha
pushl
popl
mov
pushf
movb
lea
jmp
cld
mov
jmp
clc
pushf
jmp
pusha
pushf
popl
pushf
pushf
jmp
mov
jmp
lea
jp
pusha
inc
jmp
push
mov
movzbw
mov
push
pop
xchg
xchg
repz
popl
lea
jmp
shr
mov
clc
clc
sub
push
add
cmc
xor
jmp
cltd
cltd
rdtsc
bt
stc
jmp
clc
add
jmp
setns
mov
stc
test
test
sub
push
push
pusha
pushf
mov
pushf
pushl
pushf
pushl
lea
jmp
mov
jmp
mov
call
call
mov
jmp
pushl
popf
pushl
pushf
pushf
pushf
lea
jmp
jmp
pushf
mov
call
lea
push
mov
push
pushf
lea
jmp
rcr
push
mov
cmp
cmc
test
jmp
repz
popl
stc
bt
pushl
popl
rcl
not
bswap
btr
movl
jmp
mov
call
push
mov
push
xchg
call
bswap
mov
pushf
mov
call
rol
rcl
clc
pushl
popl
mov
movzbw
bswap
lea
movl
bts
mov
lea
rol
jmp
test
call
movw
jmp
pushl
bswap
mov
movb
pushl
mov
mov
pushl
ret
xor
call
pushf
push
shrd
pushf
call
push
dec
mov
rol
movzbl
lea
push
push
movw
lea
jmp
pushf
add
test
call
mov
je
push
xchg
movsbl
pushf
pop
not
push
pushf
pusha
xchg
lea
lea
pushf
repz
popl
pushf
pushf
movzbw
movsbw
pushl
popl
push
movl
cmc
mov
clc
jmp
push
mov
pusha
pushf
pushf
call
xor
mov
bsr
sub
jmp
movb
jmp
pusha
jmp
movsbw
dec
clc
rol
pushf
movzbw
pop
lea
pushf
movb
lea
jmp
pushf
pushf
call
cmp
lea
bt
call
pusha
mov
mov
mov
pusha
pushf
push
lea
jmp
not
pop
call
bswap
mov
cld
pusha
cld
mov
mov
rep
movzbw
shl
mov
and
mov
stc
cmc
bt
pushl
popf
mov
lea
jmp
test
xor
cmp
bt
cwtl
pushf
cmc
clc
sub
pushf
call
cmc
pushf
add
lea
jbe
pusha
pushf
popl
call
divl
push
movb
push
mov
call
mov
jmp
mov
mov
pusha
push
pushf
lea
jmp
call
jmp
pusha
push
mov
pop
mov
call
call
dec
call
mov
mov
call
push
call
shl
aad
xchg
bswap
mov
and
mov
shl
xor
mov
call
mov
cld
jmp
shl
adc
call
mov
mov
mov
push
mov
call
mov
movb
push
xchg
test
movl
jmp
not
pushl
popl
lea
movl
btc
mov
push
rcl
rol
push
dec
not
not
dec
call
pushf
call
pusha
pushl
pushf
jmp
pushf
rep
xchg
dec
inc
shld
mov
cmc
bt
mov
std
cmp
test
movb
pushl
popf
mov
mov
mov
mov
lea
jmp
pusha
mov
movb
pushf
mov
mov
push
movl
call
jmp
add
pushl
call
mov
lea
movzbw
movzbw
movw
mov
mov
repz
popl
rol
pushl
popl
clc
rcr
not
movl
pushf
movzbw
movzbw
pushl
mov
mov
rcl
rol
pop
mov
jmp
pushf
popl
pusha
pushf
pushf
pushl
popl
mov
lea
jmp
neg
call
pusha
not
repz
popl
btc
pushl
popl
pushf
mov
movl
rcl
clc
movzbl
mov
ror
stc
rol
movw
not
xchg
pop
dec
xchg
rcr
bts
pushf
rol
lea
jnp
clc
pusha
lea
lea
add
call
dec
movzbl
pushf
pusha
add
pushl
rol
pushf
push
dec
movb
bt
rol
stc
add
clc
clc
pushl
mov
test
sub
push
pushf
call
movb
push
mov
movw
lea
jmp
jmp
call
mov
pushf
pusha
mov
pushf
mov
pushf
mov
mov
mov
pushf
pushl
mov
pushf
call
push
clc
add
cmc
test
xor
cmc
sub
movb
call
aaa
inc
bsr
mov
neg
mov
bt
cmp
push
add
jmp
pushl
popl
mov
lea
jmp
pushf
mov
mov
ror
test
jmp
clc
add
pushf
mov
push
lea
jmp
push
pushl
pushf
popl
pushf
pushl
popl
movb
pushf
pusha
lea
jmp
push
mov
push
jmp
shrd
cmc
jmp
mov
pusha
lea
cld
std
movw
call
lea
pusha
pusha
pushl
lea
jmp
push
movsbw
setns
dec
not
rol
bswap
pusha
add
push
dec
dec
bts
pushl
mov
jmp
lea
jne
clc
sub
pusha
movl
xchg
jmp
clc
rol
bt
cmp
sub
jmp
rol
pusha
jmp
seta
mov
lea
jbe
pushf
movb
mov
push
pusha
lea
jmp
pushf
mov
call
lea
pushf
pushf
mov
movw
lea
jmp
pusha
mov
lea
jbe
pusha
pusha
push
mov
pushf
pushf
mov
push
lea
jmp
push
jmp
pushl
mov
pushf
mov
push
mov
mov
xchg
movzbw
call
xchg
lea
movsbw
mov
mov
setno
xchg
call
jmp
dec
rcl
rol
mov
call
pushf
mov
call
push
daa
inc
mov
not
mov
pusha
sub
call
movsbw
mov
pusha
pushf
lea
jmp
inc
test
mov
cmc
shl
pusha
shl
mov
cmc
sub
bt
pushf
test
shl
mov
mov
lea
jae
pusha
pushl
movb
pushf
popl
lea
ja
push
mov
movw
pushl
popl
pushl
pushf
pusha
lea
jmp
push
pushf
lea
ja
movzbl
movsbl
call
bt
push
cmc
add
call
call
call
push
pushl
popl
pushl
lea
jmp
pushf
mov
mov
pushf
push
call
pushf
mov
movb
dec
push
lea
jmp
mov
jmp
clc
mov
pushf
cmp
test
add
movw
lea
jmp
repz
popl
btr
pushl
popl
xchg
movl
jmp
pusha
pushl
popl
movb
mov
lea
jmp
mov
setnp
bswap
push
mov
setnp
mov
movsbw
mov
call
pushl
popl
mov
mov
push
lea
jmp
add
bt
test
shld
pusha
mov
jmp
movb
inc
jmp
jmp
mov
push
pushl
pushf
popl
call
pushf
mov
movsbw
jmp
dec
pushf
mov
lea
jmp
pushl
not
mov
mov
pushf
cmp
sub
add
js
pusha
stc
cmp
cbtw
pushl
pusha
pushf
test
cwtl
clc
clc
sub
pushl
mov
jmp
mov
call
pushf
call
jmp
push
mov
movb
movw
push
pushf
mov
pushf
jmp
movzbw
rcl
push
clc
mov
shl
bts
mov
pusha
jmp
pusha
jmp
push
lea
pushf
mov
bswap
mov
movsbl
movsbw
push
not
xchg
call
pop
lea
push
lea
jmp
pushl
popl
push
lea
jmp
not
call
push
lea
ja
popl
pusha
pushf
lea
jmp
mov
push
push
pushl
ret
call
clc
pushf
call
add
mov
lea
jmp
rcl
rol
call
movw
mov
pusha
pushf
pushf
call
pushf
mov
push
jmp
jmp
call
not
mov
stc
rol
rol
mov
mov
dec
bswap
rol
movsbw
call
call
jmp
shr
pushl
lea
jo
mov
pushf
pushl
pushf
popl
pusha
movb
pusha
pushl
popl
mov
mov
pushf
pushl
lea
jmp
movw
pushl
popl
push
pushf
lea
jmp
rol
call
pusha
movb
mov
pushl
mov
mov
pushf
mov
push
mov
jmp
jmp
mov
jmp
jmp
dec
lea
stc
movzbw
ror
rol
lea
bswap
lea
movb
lea
jmp
cmc
mov
cmc
test
test
or
pusha
lea
je
cmp
stc
pushf
xor
cmp
xchg
stc
clc
jmp
ror
bts
pop
ror
push
dec
call
clc
sub
bt
stc
jmp
push
movl
mov
jmp
xor
stc
pushf
add
bt
test
not
bt
sub
call
bswap
btc
mov
pushf
shl
add
mov
mov
call
dec
mov
not
call
daa
mov
shld
jmp
call
call
dec
cmc
jmp
pusha
mov
mov
pushl
pusha
push
lea
jmp
dec
call
mov
push
push
pushf
call
mov
movb
lea
jb
pushf
pushf
popl
pusha
movb
jmp
push
shr
mov
clc
add
pushl
lea
jmp
jmp
pushf
mov
movl
lea
jge
push
pushf
push
mov
pusha
movb
mov
pushl
ret
sar
sar
mov
ror
bt
shl
mov
jmp
bts
bsf
mov
jmp
mov
pushf
pushf
movw
mov
mov
pusha
mov
call
mov
pushf
lea
jmp
lea
push
pushl
pushl
lea
jmp
movsbw
mov
xchg
lea
call
cmc
add
call
push
pusha
mov
call
cmc
or
movzbl
lea
sub
not
pop
movzbw
dec
bts
add
add
clc
mov
xor
xor
cmc
shl
seta
bsr
not
sar
bsf
test
shl
sub
call
jmp
mov
push
xchg
pushf
bswap
mov
movsbw
movzbw
lea
jmp
pushf
dec
stc
pusha
xor
stc
clc
call
mov
test
test
add
pushf
mov
push
lea
jmp
bt
test
jg
cmc
or
pusha
test
pusha
xor
push
mov
jmp
movl
rcr
mov
btc
rcl
movzbw
rol
jmp
setns
pop
mov
pop
jmp
call
call
btr
movsbw
mov
stc
add
pushf
pusha
jmp
stc
mov
aad
pusha
mov
jmp
mov
rcl
clc
jmp
stc
not
rol
not
lea
dec
rcr
rol
not
movzbw
lea
movl
push
lea
jmp
cwtl
cwtl
mov
pusha
mov
neg
test
mov
test
call
push
movb
mov
movb
pushl
pushf
mov
lea
jmp
jmp
push
pusha
jmp
call
call
call
mov
pushf
lea
jle
push
pushf
popl
jmp
bswap
mov
call
movw
lea
movb
lea
jmp
call
sub
pushl
mov
push
pushf
lea
jmp
push
pusha
repz
popl
pusha
push
bswap
ror
pushl
popl
clc
ror
movl
movzbw
ror
mov
lea
rol
pop
pop
dec
jmp
mov
not
lea
mov
lea
mov
movsbw
repz
popl
ror
xchg
pushl
popl
not
pushf
movl
btr
btc
mov
not
rol
call
test
pushf
xor
call
movw
jmp
pushf
lea
sub
bt
rol
shl
sub
and
mov
btr
shrd
mov
btr
btr
cmc
bts
add
bsr
btc
movzbw
mov
bsr
jmp
sub
pusha
call
pushf
mov
call
lea
jne
rcl
stc
mov
cmp
pushf
movl
and
pushf
cmc
cmp
jmp
mov
call
lea
pushf
push
lea
jmp
pushf
jmp
jmp
pushf
mov
call
push
add
pusha
lea
jmp
movb
pushf
popl
push
pushl
popl
movb
movb
lea
jmp
jmp
mov
pushf
call
bswap
pusha
mov
movzbw
lea
jnp
rol
not
inc
pusha
dec
btc
clc
movsbl
rol
pusha
movzbw
mov
lea
push
lea
jmp
mov
mov
push
pushl
xchg
movsbl
pushf
mov
jmp
jmp
movb
mov
pushf
movb
lea
jmp
clc
bt
sub
cmp
bt
movb
test
add
jmp
xchg
movzbw
call
mov
call
call
bt
pusha
jmp
cltd
daa
push
rol
mov
aaa
xor
bsf
sar
pop
std
bswap
std
pop
aad
lea
btc
popf
pusha
cltd
jmp
movzbw
lea
push
pushf
lea
jmp
pushf
call
dec
rcr
btr
rol
movzbw
lea
pusha
pusha
movb
lea
jmp
add
mov
call
pusha
call
jmp
mov
pushf
mov
mov
push
jmp
bswap
mov
movsbw
xchg
mov
jmp
repz
popl
call
cmp
bt
sub
call
jmp
call
seta
bt
ror
rcl
push
cmc
not
mov
btc
rol
rcr
inc
sbb
test
and
cmc
pushf
mov
call
cmp
pushf
add
pusha
push
pushl
lea
jmp
lea
jne
bswap
xorb
pushf
jmp
pushf
jmp
pusha
call
not
pushf
cwtl
mov
mov
mov
call
mov
pushf
push
mov
push
lea
jmp
lea
jnp
push
mov
call
shld
aaa
jg
notl
xor
adc
shrd
movzbw
mov
test
bt
push
sub
test
add
jl
push
and
call
pushf
popl
pushf
pushl
popl
pushf
movb
push
lea
jmp
jmp
sub
pushf
lea
jno
push
push
mov
movl
pushf
lea
jmp
call
pop
lea
pushf
lea
jmp
jmp
jmp
call
pushf
mov
call
mov
push
pushf
lea
jmp
pushf
call
pushf
mov
movw
lea
jmp
bsr
mov
cmc
bt
jmp
mov
jmp
lea
push
lea
jmp
call
pushf
not
mov
pushf
mov
mov
pushf
pusha
movb
push
mov
pushf
push
lea
jmp
ror
clc
cmp
sub
jmp
call
call
pushf
popl
pusha
pushl
popl
mov
mov
lea
jmp
pushf
pushf
mov
movw
pusha
pushl
call
aaa
mov
dec
cmc
mov
cmc
pusha
jmp
call
pushf
mov
mov
pushf
pushf
mov
lea
mov
lea
jge
pushf
bswap
repz
popl
movsbw
pusha
pushl
popl
bts
btc
movzbw
rcl
movl
movsbw
mov
bswap
rcr
bswap
rol
movsbw
dec
push
rol
rol
bswap
lea
movzbw
lea
lea
movw
pusha
pushf
pushf
lea
jmp
sub
jmp
pushl
popl
pushf
movzbw
movl
btr
mov
movzbw
not
rcr
rol
inc
inc
pushl
dec
not
bts
bswap
rol
lea
pushf
jmp
push
movw
mov
push
pushf
popl
jmp
movsbw
rol
lea
pusha
call
add
push
pushf
push
movb
lea
jmp
mov
pushf
movb
pushf
xchg
lea
pushf
bswap
mov
pushf
pop
mov
movsbw
repz
popl
rol
stc
stc
pushl
popl
mov
movl
pushf
cmc
mov
bt
pushf
bswap
rol
lea
dec
pop
cmc
rol
pop
pop
bswap
movw
lea
mov
pusha
mov
lea
jmp
pusha
inc
jmp
lea
mov
movzbw
repz
popl
pop
rcl
bts
cmc
pushl
popl
movsbw
stc
clc
not
movl
lea
jns
pusha
mov
movzbl
cmc
rol
pushl
push
dec
dec
pop
stc
pushf
rol
call
mov
pushf
pushf
popl
jmp
lahf
and
xor
mov
pushf
pushl
jmp
mov
push
pushf
popl
pushf
jmp
call
pushf
mov
jmp
test
setbe
aas
mov
stc
mov
call
bsr
lea
test
jae
clc
stc
cmp
jmp
shld
mov
stc
je
pusha
clc
add
mov
push
pushf
push
lea
jmp
pushf
pushf
dec
ror
btr
rol
pushf
lea
mov
mov
pushl
lea
jmp
movw
call
mov
call
mov
mov
mov
movb
pushf
lea
jmp
dec
movzbw
rol
pushl
jmp
pushl
clc
sub
pushl
test
test
and
jmp
mov
lea
jnp
pusha
mov
pushf
mov
pop
pop
bswap
mov
lea
xchg
jmp
bswap
dec
bt
pushf
lea
rol
not
not
lea
pushf
lea
jmp
mov
pushf
push
mov
lea
jmp
call
bt
shr
btc
mov
cmc
jmp
mov
test
sub
pusha
call
sub
push
pusha
pushf
div
pushf
call
pushl
popl
push
mov
lea
jmp
jmp
xchg
pop
bswap
call
pushf
xchg
call
shl
aam
mov
or
pusha
rcr
mov
mov
call
sbb
sub
call
sub
clc
bt
add
jmp
push
mov
not
pop
mov
pop
jmp
pushf
mov
jmp
push
pushl
popl
pushl
lea
jmp
mov
movb
jmp
call
bt
rol
stc
lea
stc
test
sub
bt
jmp
lea
jae
mov
pushf
pushf
mov
lea
jmp
pushf
pushf
mov
call
btc
not
bts
notl
inc
dec
mov
push
push
sub
pusha
call
mov
jmp
shrd
mov
test
add
pusha
pusha
mov
lea
jmp
jg
mov
call
shl
aaa
cwtl
mov
add
shr
inc
mov
pusha
add
push
pusha
mov
pushf
push
movw
lea
jmp
push
push
jmp
mov
mov
mov
call
pushf
pushf
pushf
mov
pushf
lea
jmp
jmp
movw
jmp
call
call
mov
call
decl
call
mov
btc
rol
call
pushf
movzww
pushf
xchg
mov
pusha
xor
call
pushf
movb
pushf
mov
mov
call
movl
movw
mov
pusha
pushl
ret
pushf
popl
pushf
pushl
popl
pusha
mov
lea
jmp
mov
jmp
cmc
push
add
movl
mov
movw
lea
jmp
cmc
setb
not
mov
test
pusha
test
sub
stc
cmp
test
shl
call
cmc
daa
mov
add
sbb
shl
rcr
mov
stc
cmp
sub
bt
cmp
stc
shl
call
add
jmp
push
mov
call
mov
pushf
lea
jmp
call
jmp
jmp
mov
pushf
cmc
movw
sub
mov
mov
pushf
pushl
movl
mov
lea
jmp
and
jmp
mov
pusha
jmp
pusha
movb
xchg
bswap
pop
pushf
mov
movzbw
xchg
xchg
repz
popl
movsbw
push
ror
not
pushl
popl
pushf
mov
mov
movl
mov
cmc
lea
mov
rol
rcr
rol
not
bswap
inc
dec
lea
rol
lea
lea
push
movb
mov
lea
jmp
decl
jmp
pusha
cmc
dec
mov
adc
mov
stc
sub
stc
shr
pusha
mov
mov
jmp
not
jmp
jmp
jmp
mov
mov
movsbl
pushf
mov
movsbw
pushf
pusha
mov
lea
repz
popl
movw
pushl
popl
btr
btc
movl
rcl
mov
call
mov
movzbw
mov
push
cmp
mov
pushf
add
pusha
call
pusha
pushf
popl
call
pushl
popl
pusha
lea
jmp
popl
pusha
pushf
pushf
pushl
lea
jmp
movsbw
mov
mov
movzbw
push
movsbw
repz
popl
bt
clc
xchg
bts
pushl
popl
btr
btc
movl
pushf
bts
jmp
bsf
inc
sbb
mov
clc
jmp
cmp
pushf
pushf
cmpl
push
pushf
pushf
mov
jmp
mov
pusha
pushl
popl
pushl
pushf
lea
jmp
not
call
pushf
pusha
pushf
mov
jmp
clc
pusha
shl
push
mov
push
pushf
movb
pushf
popl
pushf
jmp
pushf
popl
lea
jbe
push
pushf
pusha
pushl
popl
mov
pushf
lea
jmp
pushf
mov
jmp
pushf
bswap
rol
push
lea
pusha
pushf
mov
lea
jmp
pushf
rol
rol
bswap
pushf
pop
push
dec
bt
rol
pushl
jmp
btr
pushf
ror
rcr
not
cmc
pushf
rol
sub
bts
bsf
sar
and
adc
setbe
sbb
dec
mov
pushf
jmp
mov
not
lea
pop
pushl
mov
jmp
pushl
lea
jne
jmp
adc
movzbl
ror
clc
pushf
movsbw
sub
xor
btc
shr
sbb
xor
call
movzbw
stc
mov
cmc
jmp
rep
rcl
dec
sar
movzbw
mov
cld
stc
sar
shl
mov
movb
push
bt
jmp
rcr
btr
movl
rcl
lea
pushf
mov
rol
pop
rol
movzbw
jmp
mov
jmp
xor
call
mov
mov
pushl
lea
jmp
setl
mov
not
setb
bswap
mov
push
jmp
pushf
popl
lea
js
push
pushl
popl
pushf
pushf
push
lea
jmp
call
mov
pop
mov
pushf
cld
pusha
cld
jmp
push
mov
movsbl
jmp
mov
bt
pushf
clc
push
sub
stc
jmp
pusha
mov
pushf
pushl
ret
call
mov
call
pushf
movw
jmp
repz
popl
pop
stc
pushl
popl
bt
btr
clc
movl
movzbw
pushf
bts
pusha
mov
ror
rol
lea
push
call
lea
dec
setns
btr
bsr
add
pop
movzbl
not
mov
bt
ror
call
mov
pushl
mov
pusha
pushf
pushf
pushf
lea
jmp
jmp
sub
pushf
shr
jmp
clc
stc
pushl
push
call
pushl
pushf
popl
movb
jmp
daa
mov
stc
bt
bswap
pusha
sub
test
bt
stc
bt
neg
movl
jmp
push
mul
pushf
pusha
pushl
jmp
shl
mov
cmp
movzbl
cmc
test
sub
clc
add
test
bt
jmp
pushf
pushf
pushl
popl
movw
pushf
pusha
push
lea
jmp
movw
rol
jmp
mov
not
pop
jmp
push
push
push
mov
mov
pushf
pushl
call
push
mov
pushf
mov
not
mov
not
not
jmp
mov
pushf
lea
movw
pushl
push
movb
lea
jmp
pushf
jmp
jmp
btr
rcl
rol
bswap
jmp
lea
jb
pushf
mov
pushf
push
mov
movw
pusha
pushf
lea
jne
sbb
sub
bts
bt
mov
stc
and
call
ror
pushl
popl
jmp
call
xorb
bswap
setle
mov
pusha
push
pushf
push
lea
jmp
bt
cwtl
cmp
sub
pushf
mov
call
mov
jmp
test
btr
movsbw
mov
bts
add
jmp
pushl
popl
pushl
lea
jmp
mov
push
mov
jmp
call
mov
movzbw
pushf
call
jmp
cmc
and
jmp
sub
pushf
jmp
bts
movzbl
mov
call
pusha
bsr
mov
ror
adc
shr
add
movsbw
xor
lea
dec
shr
btr
add
mov
cmc
shl
push
pushf
cmc
clc
shr
cmc
lea
jno
or
stc
bt
push
xor
movb
inc
mov
push
decl
movb
jmp
jmp
push
mov
mov
pushf
lea
jmp
movb
movl
mov
pusha
lea
jne
clc
mov
stc
cmp
test
and
push
movb
cmp
jmp
add
jmp
pusha
call
xchg
not
pusha
mov
pushf
push
jmp
jmp
test
add
shr
not
or
add
call
add
add
repz
popl
xchg
ror
call
jmp
pushf
movb
mov
call
pusha
pushf
popl
call
pushf
sub
pushf
mov
cmc
jmp
jmp
movsbw
mov
push
xchg
xchg
movzbw
xchg
repz
rcl
pushl
stc
push
pusha
not
rcl
jmp
mov
push
jmp
push
mov
movl
pusha
push
push
lea
jmp
rol
add
mov
xor
neg
sub
add
jmp
pushl
popl
movl
lea
jmp
mov
pushf
lea
jmp
pushl
mov
mov
pushf
pushf
call
and
inc
mov
bt
sub
jmp
pushf
pushf
mov
push
lea
jae
push
jmp
cmc
add
mov
push
push
mov
pushf
pushl
ret
pushf
push
pushf
pushf
inc
cmc
movw
bt
mov
rol
jmp
pushf
pushf
mov
pusha
lea
jmp
mov
lea
push
pop
mov
call
mov
pusha
push
jmp
xchg
mov
repz
popl
bswap
btr
movzbw
pushl
popl
xchg
btr
movl
cmc
pop
push
mov
ror
rcr
bswap
btr
rol
lea
dec
rcl
rol
movsbw
call
movsbw
lea
pushl
pushf
lea
jmp
push
movb
call
inc
jmp
jmp
call
lea
js
pushf
mov
pusha
push
lea
jmp
cmc
test
add
pushl
mov
cmp
pushl
popf
push
movw
lea
jmp
xor
movb
push
pushf
lea
jno
inc
jmp
lea
jne
pusha
ror
xor
jmp
cmp
call
pushf
push
mov
movb
pushl
pushf
pushf
lea
jmp
jmp
lea
lea
pusha
mov
mov
call
mov
pushf
jmp
movw
lea
jne
rcr
inc
xorb
not
movzbw
pop
pusha
lea
jmp
lea
jne
call
mov
pusha
jmp
inc
bswap
jmp
pushl
mov
movb
mov
call
btr
movsbw
rol
call
movw
mov
mov
push
lea
jmp
not
cmc
test
cmp
movb
not
cmp
and
pushf
jmp
pushf
bt
pusha
cbtw
clc
push
test
clc
cwtl
test
mov
bt
sub
jmp
sbb
sbb
mov
push
jmp
dec
sar
not
rol
add
btr
mov
movzbl
bswap
movzbl
stc
movsbw
jae
btc
mov
clc
clc
ror
bt
add
call
jmp
pushf
btr
not
rol
jmp
call
bt
sub
test
shl
setne
sete
mov
bts
cmp
pushf
mov
pusha
pushf
lea
add
sub
bswap
inc
mov
shr
bsr
bsr
add
lea
add
shl
add
bt
bts
ror
mov
movzbw
not
jmp
cmp
pushf
clc
sub
movb
pushf
mov
mov
lea
jmp
pushf
pushf
pusha
mov
pushf
movb
lea
jmp
mov
bt
bts
stc
rol
rol
bswap
lea
pushf
dec
movzbl
pop
rol
bswap
pushf
pushf
lea
movw
lea
jmp
ror
mov
xor
ror
sub
mov
mov
pushf
push
add
pusha
call
pushf
popl
movzbl
mov
pushf
jmp
dec
shrd
cmc
mov
stc
add
pushf
pusha
pushf
lea
jmp
jmp
mov
mov
push
pushf
mov
mov
pusha
pusha
pushl
pushl
mov
jmp
lea
rol
movw
lea
lea
mov
pushf
mov
lea
jmp
pop
rcl
ror
rol
movzbl
lea
pushf
movl
pushl
pushl
lea
jmp
lea
jne
push
mov
pushf
mov
pusha
pushf
lea
jmp
pushl
popl
pushf
mov
lea
jmp
pushf
inc
movb
mov
call
shld
mov
push
test
mov
add
pusha
movw
mov
pusha
pushf
mov
pushl
lea
jmp
cmp
jmp
jmp
setns
mov
push
movw
pusha
lea
cpuid
test
push
sub
stc
sub
js
pusha
cmpl
pusha
push
mov
pushf
mov
pushf
mov
jmp
xchg
mov
repz
popl
pushf
call
pop
bswap
pop
pushf
lea
jmp
setle
not
cwtl
pushf
mov
call
call
pushl
pusha
mov
mov
pushf
pushf
jmp
call
call
movb
xchg
movsbw
mov
not
pop
xchg
jmp
xchg
push
lea
bswap
movsbw
repz
popl
btr
btc
call
xor
bsf
btc
mov
pusha
clc
stc
add
pushl
movb
lea
jmp
pop
dec
btr
rol
call
