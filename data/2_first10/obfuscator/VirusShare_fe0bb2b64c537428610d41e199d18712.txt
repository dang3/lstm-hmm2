add
or
add
add
push
add
addb
add
mov
add
rolb
add
add
add
inc
add
add
rorb
add
mov
add
add
or
addb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
dec
pop
xlat
cmp
add
add
add
add
add
add
jge
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
add
add
add
xlat
cmp
add
add
add
add
add
add
add
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
add
orb
add
add
xlat
cmp
add
add
add
add
add
add
add
and
or
xor
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
pop
orl
add
add
xlat
cmp
add
add
add
add
add
add
test
xor
add
dec
pop
xlat
cmp
add
add
add
add
add
push
or
addb
sbbb
push
or
adcb
add
mov
and
add
or
add
xor
add
pop
add
add
add
into
or
subb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
add
test
rolb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
nop
xchg
in
add
dec
pop
xlat
cmp
add
add
add
add
add
add
mov
rolb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
mov
rolb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
add
mov
rolb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
test
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
push
xchg
or
rolb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
xchg
or
rolb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
add
xchg
or
call
add
add
xlat
cmp
add
add
add
add
add
add
add
addb
add
cmp
addb
add
pusha
add
addb
add
add
add
add
add
add
addb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
add
add
add
xlat
cmp
add
add
add
add
add
add
add
out
inc
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
ds
inc
add
add
add
xlat
cmp
add
add
add
add
add
add
testl
dec
pop
xlat
cmp
add
add
add
add
add
add
add
add
incl
push
add
add
xlat
cmp
add
add
add
add
add
add
add
add
push
inc
add
add
add
xlat
cmp
add
add
add
add
or
sbbb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
or
push
add
add
xlat
cmp
add
add
add
add
sldt
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
pop
add
js
add
mov
sldt
enter
cmc
sldt
lock
add
sbb
add
inc
or
cmp
add
push
sldt
nop
or
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
or
cmp
add
orb
addb
add
test
add
dec
pop
xlat
cmp
add
add
add
add
add
add
push
add
pusha
rorb
add
add
xlat
cmp
add
add
add
add
add
add
add
sub
or
and
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
dec
or
in
add
add
xlat
cmp
add
add
add
add
add
add
lret
or
or
add
dec
pop
xlat
cmp
add
add
add
add
add
add
push
add
inc
into
or
in
add
add
xlat
cmp
add
add
add
add
add
add
push
add
xor
or
rolb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
pop
add
add
or
test
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
test
or
int3
add
add
xlat
cmp
add
add
add
add
add
add
add
je
or
mov
add
dec
pop
xlat
cmp
add
add
add
add
add
add
fmull
mov
add
dec
pop
xlat
cmp
add
add
add
add
add
add
fimuls
nop
add
add
xlat
cmp
add
add
add
add
add
add
pop
add
cmp
or
loopne
add
dec
pop
xlat
cmp
add
add
add
add
add
add
or
add
or
movsb
add
add
xlat
cmp
add
add
add
add
add
add
or
add
jecxz
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
fs
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
ljmp
dec
pop
xlat
cmp
add
add
add
add
add
add
in
or
test
add
dec
pop
xlat
cmp
add
add
add
add
add
add
or
add
or
and
add
dec
pop
xlat
cmp
add
add
add
add
add
add
or
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
or
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
testl
dec
pop
xlat
cmp
add
add
add
add
add
add
add
fdivr
or
loopne
add
dec
pop
xlat
cmp
add
add
add
add
add
add
std
or
mov
add
dec
pop
xlat
cmp
add
add
add
add
add
add
or
add
or
add
xlat
cmp
add
add
add
add
add
sub
add
push
or
xorb
addb
add
dec
pop
xlat
cmp
add
add
add
add
add
add
or
add
or
add
xlat
cmp
add
add
add
add
add
add
add
and
or
add
xlat
cmp
add
add
add
add
add
add
add
movsb
or
add
xlat
cmp
add
add
add
add
add
add
xchg
sub
cmpsb
mov
add
dec
pop
xlat
cmp
add
add
add
add
jg
add
or
cmp
add
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
dec
pop
xlat
cmp
add
add
add
add
add
add
or
add
inc
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
or
add
push
inc
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
dec
push
inc
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
pusha
push
inc
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
push
inc
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
or
add
add
add
xlat
cmp
add
add
add
add
add
add
or
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
add
dec
pop
xlat
cmp
add
add
add
add
add
add
or
add
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
add
add
push
add
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
xor
add
add
push
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
add
push
add
add
push
add
int3
int3
dec
push
add
dec
je
push
add
dec
dec
push
add
mov
testl
push
add
inc
mov
add
add
cld
push
add
or
cld
iret
lock
add
push
clc
add
or
push
addb
or
add
dec
add
add
and
add
jmp
add
mov
add
jo
addb
pop
addb
pop
rolb
fsub
add
fucom
add
loopne
pop
pop
loopne
pmaxub
setae
sub
add
adc
add
and
add
add
or
add
add
inc
add
add
add
add
addb
add
addb
rol
rcr
add
lret
addb
add
add
add
incl
add
incl
add
incl
add
incl
incl
lock
incl
movsb
mov
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
incl
xchg
add
add
in
int3
add
out
add
out
add
add
add
add
add
cltd
add
add
add
xor
add
xor
add
xor
add
cltd
add
xor
add
xor
add
data16
add
add
data16
cwtd
add
data16
add
incw
add
xor
add
cltd
add
cltd
int3
add
cltd
incl
add
add
add
xor
add
data16
int3
cltd
add
int3
int3
add
int3
incl
add
data16
lcall
add
add
add
add
add
add
xor
cltd
add
add
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
xor
add
data16
cwtd
add
data16
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
add
xor
xor
xor
data16
int3
cltd
add
int3
int3
add
int3
incl
xor
xor
xor
data16
lcall
add
incl
data16
add
xor
data16
data16
add
incl
xor
add
xor
xor
xor
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
add
data16
xor
data16
cltd
add
int3
add
incl
incw
add
xor
lcallw
add
add
add
add
add
xor
add
add
add
add
cltd
xor
add
data16
cltd
xor
cltd
xor
cltd
cwtd
add
xor
add
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
incl
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
int3
add
add
add
incl
cltd
add
xor
add
xor
add
xor
pushl
cltd
add
xor
add
xor
add
data16
jmp
add
data16
cwtd
add
data16
add
incw
lcall
xor
lcall
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
jmp
lcall
add
incl
jmpw
data16
incl
jmp
add
incw
jmp
and
movsl
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
mov
mov
mov
sbb
adc
mov
adc
std
and
and
mov
adc
xchg
xchg
xchg
std
and
sbb
add
fcomp
fcoms
sbb
hlt
jge
fcomp
pop
pop
mov
xchg
std
and
cmc
jle
fdivs
std
and
adc
cmc
movsb
fdivs
mov
and
adc
jge
mov
adc
and
adc
fwait
lds
adc
pushf
sbb
adc
adc
mov
mov
adc
inc
pushf
cmc
sbb
adc
adc
adc
adc
dec
dec
dec
adc
adc
notb
adc
adc
adc
pushf
adc
adc
adc
notb
adc
adc
adc
pushf
sbb
adc
adc
adc
div
div
div
div
adc
adc
jmp
add
jmp
add
inc
add
and
add
add
add
add
add
incl
add
inc
add
jmp
add
jmp
add
add
add
jmp
pop
jmp
ud0
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
ja
ja
jo
add
add
pushl
add
add
pushl
add
add
pushl
add
iret
pushl
add
add
add
pushl
add
inc
int3
int3
les
pushl
add
add
int3
int3
pushl
add
add
int3
inc
dec
int3
int3
dec
pushl
add
dec
push
int3
int3
pushl
add
int3
dec
incl
inc
pushl
add
int3
dec
pushl
add
int3
int3
int3
pushl
add
cmp
int3
int3
int3
int3
int3
pushl
add
int3
inc
inc
inc
dec
int3
pushl
add
int3
dec
decl
pushl
add
mov
int3
dec
pushl
add
dec
cmp
inc
dec
int3
int3
dec
pushl
add
add
mov
pushl
add
add
int3
int3
dec
cld
pushl
add
add
cld
pushl
add
add
dec
pushl
add
add
int3
pushl
add
add
clc
add
add
add
add
clc
js
add
add
clc
testl
clc
js
add
add
add
clc
addb
add
add
clc
add
add
add
add
mov
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
cld
add
paddb
add
cld
add
aas
cld
add
jg
add
ljmp
add
add
add
add
add
add
or
add
add
addb
addb
add
addb
add
addb
add
add
fadd
add
lret
addb
add
add
add
incl
add
incl
add
incl
add
incl
incl
lock
incl
movsb
mov
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
incl
xchg
add
add
in
int3
add
out
add
out
add
add
add
add
add
cltd
add
add
add
xor
add
xor
add
xor
add
cltd
add
xor
add
xor
add
data16
add
add
data16
cwtd
add
data16
add
incw
add
xor
add
cltd
add
cltd
int3
add
cltd
incl
add
add
add
xor
add
data16
int3
cltd
add
int3
int3
add
int3
incl
add
data16
lcall
add
add
add
add
add
add
xor
cltd
add
add
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
xor
add
data16
cwtd
add
data16
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
add
xor
xor
xor
data16
int3
cltd
add
int3
int3
add
int3
incl
xor
xor
xor
data16
lcall
add
incl
data16
add
xor
data16
data16
add
incl
xor
add
xor
xor
xor
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
add
data16
xor
data16
cltd
add
int3
add
incl
incw
add
xor
lcallw
add
add
add
add
add
xor
add
add
add
add
cltd
xor
add
data16
cltd
xor
cltd
xor
cltd
cwtd
add
xor
add
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
incl
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
int3
add
add
add
incl
cltd
add
xor
add
xor
add
xor
pushl
cltd
add
xor
add
xor
add
data16
jmp
add
data16
cwtd
add
data16
add
incw
lcall
xor
lcall
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
jmp
lcall
add
incl
jmpw
data16
incl
jmp
add
incw
jmp
and
movsl
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
adc
adc
cmc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
mov
mov
mov
mov
mov
mov
mov
sbb
adc
adc
adc
adc
std
std
std
std
std
std
and
and
and
sbb
adc
adc
adc
adc
adc
std
std
and
and
and
sbb
adc
adc
adc
adc
adc
adc
std
std
std
and
std
and
and
adc
adc
mov
mov
adc
adc
std
std
std
std
and
and
sbb
adc
adc
mov
adc
mov
mov
xchg
xchg
xchg
std
std
std
std
std
and
and
adc
add
mov
mov
fcomp
fcoms
and
and
adc
cmc
mov
adc
nop
mov
fcomp
fcomp
fcomp
fcomp
xchg
std
std
and
and
adc
mov
jo
mov
fcomp
mov
mov
fcomp
fcomp
xchg
std
std
std
and
sbb
adc
hlt
add
mov
mov
adc
mov
fcomp
mov
std
std
and
sbb
adc
hlt
jge
mov
xchg
fdivs
adc
xchg
std
std
and
sbb
adc
cmc
jle
mov
xchg
fdivs
adc
adc
adc
std
std
std
and
sbb
adc
cmc
mov
fdivs
mov
mov
mov
mov
std
std
std
and
adc
adc
mov
fcomp
fcomp
mov
fstp
mov
std
std
and
adc
adc
mov
movsb
fcomp
mov
mov
mov
mov
mov
jecxz
mov
std
std
std
and
adc
adc
nop
fwait
stos
fdivs
adc
mov
jecxz
mov
std
std
std
and
adc
adc
nop
fwait
stos
fdivs
mov
jmp
mov
adc
std
std
and
adc
adc
adc
mov
stc
mov
mov
mov
mov
adc
std
std
std
and
adc
adc
adc
mov
fcomp
mov
adc
adc
std
std
std
sbb
adc
adc
adc
adc
mov
fcomp
fcomp
fdivrs
fcoms
adc
std
std
movb
adc
adc
adc
adc
cmc
adc
mov
mov
adc
mov
adc
std
movb
sbb
adc
adc
adc
adc
adc
adc
adc
adc
std
movb
pushf
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
std
movb
pushf
cmc
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
dec
dec
dec
dec
dec
adc
adc
adc
adc
cmc
adc
adc
adc
adc
adc
adc
adc
adc
pushf
adc
adc
adc
adc
adc
cmc
adc
adc
adc
adc
adc
adc
adc
adc
pushf
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pushf
pushf
sbb
adc
adc
adc
adc
adc
cmc
adc
adc
adc
adc
adc
adc
adc
adc
pushf
pushf
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pushf
sbb
adc
adc
adc
adc
adc
adc
cmc
div
div
div
div
div
div
div
div
notb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
cld
add
paddb
add
cld
add
aas
cld
add
jg
add
ljmp
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
ja
ja
ja
jo
add
add
add
pushl
add
add
add
pushl
add
add
add
pushl
add
add
add
pushl
add
add
add
pushl
add
add
add
pushl
add
add
add
pushl
add
int3
int3
inc
pushl
add
inc
add
int3
add
add
pushl
add
add
add
inc
pushl
add
add
add
int3
int3
inc
pushl
add
add
add
dec
int3
int3
int3
int3
int3
dec
pushl
add
inc
add
dec
dec
int3
int3
int3
int3
int3
pushl
add
rolb
int3
int3
int3
int3
int3
int3
dec
pushl
add
inc
dec
dec
int3
inc
inc
inc
dec
int3
int3
pushl
add
inc
int3
incl
int3
int3
dec
pushl
add
inc
int3
dec
push
inc
inc
inc
dec
pushl
add
les
pushl
add
int3
int3
int3
ud0
pushl
add
cmp
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
pushl
add
mov
int3
int3
int3
int3
int3
int3
int3
dec
pushl
add
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
pushl
add
int3
int3
int3
inc
inc
inc
inc
inc
int3
int3
int3
dec
pushl
add
mov
incl
int3
int3
dec
pushl
add
sti
int3
int3
dec
incl
int3
pushl
add
inc
cmp
dec
int3
int3
pushl
add
inc
ret
sti
int3
int3
dec
incl
int3
int3
pushl
add
add
cmp
int3
int3
dec
pushl
add
add
mov
int3
int3
dec
pushl
add
add
int3
cmp
int3
int3
int3
cld
pushl
add
add
int3
int3
int3
int3
int3
int3
int3
int3
dec
cld
pushl
add
add
add
int3
int3
int3
int3
int3
inc
cld
pushl
add
add
add
cld
pushl
ja
jo
add
add
add
int3
dec
clc
mov
add
add
add
cld
int3
cld
iret
incl
add
add
cld
int3
int3
decl
add
add
add
add
decl
add
add
add
add
decl
add
add
add
add
decl
add
add
add
add
decl
add
add
add
add
decl
add
add
add
add
decl
add
add
add
add
incl
add
add
add
add
decl
add
add
add
add
incl
add
add
add
add
mov
mov
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
lock
add
add
add
add
add
add
add
rolb
add
add
iret
rolb
add
add
iret
addb
add
add
mov
add
add
add
test
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incl
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
xor
rolb
add
test
inc
add
add
or
inc
add
add
add
inc
add
add
add
inc
add
add
addb
rolb
add
add
rolb
add
and
rolb
add
call
add
incl
inc
add
pop
incl
add
rolb
ud0
add
rolb
pop
incl
add
add
add
add
add
or
add
add
orb
add
add
add
addb
add
addb
rol
rcr
add
lret
addb
add
add
add
incl
add
incl
add
incl
add
incl
incl
lock
incl
movsb
mov
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
incl
xchg
add
add
in
int3
add
out
add
out
add
add
add
add
add
cltd
add
add
add
xor
add
xor
add
xor
add
cltd
add
xor
add
xor
add
data16
add
add
data16
cwtd
add
data16
add
incw
add
xor
add
cltd
add
cltd
int3
add
cltd
incl
add
add
add
xor
add
data16
int3
cltd
add
int3
int3
add
int3
incl
add
data16
lcall
add
add
add
add
add
add
xor
cltd
add
add
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
xor
add
data16
cwtd
add
data16
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
add
xor
xor
xor
data16
int3
cltd
add
int3
int3
add
int3
incl
xor
xor
xor
data16
lcall
add
incl
data16
add
xor
data16
data16
add
incl
xor
add
xor
xor
xor
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
add
data16
xor
data16
cltd
add
int3
add
incl
incw
add
xor
lcallw
add
add
add
add
add
xor
add
add
add
add
cltd
xor
add
data16
cltd
xor
cltd
xor
cltd
cwtd
add
xor
add
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
incl
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
int3
add
add
add
incl
cltd
add
xor
add
xor
add
xor
pushl
cltd
add
xor
add
xor
add
data16
jmp
add
data16
cwtd
add
data16
add
incw
lcall
xor
lcall
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
jmp
lcall
add
incl
jmpw
data16
incl
jmp
add
incw
jmp
and
movsl
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
adc
adc
adc
adc
cmc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
adc
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
adc
adc
adc
adc
adc
adc
adc
std
std
std
std
std
and
std
and
and
and
and
sbb
adc
adc
adc
adc
adc
adc
adc
std
std
std
std
std
std
std
std
std
std
and
and
and
and
and
adc
adc
adc
adc
adc
cmc
adc
adc
std
std
std
std
std
std
std
std
std
std
and
and
and
and
sbb
adc
adc
adc
adc
adc
adc
adc
std
adc
adc
std
std
std
std
std
std
and
std
and
and
and
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
std
std
std
std
and
and
and
and
sbb
adc
adc
adc
adc
adc
adc
adc
adc
std
adc
adc
adc
std
std
std
std
std
std
and
and
and
and
adc
adc
outsl
outsl
outsl
outsl
outsl
outsl
cmc
adc
adc
adc
adc
adc
std
std
std
std
std
and
and
and
and
adc
adc
outsl
or
xchg
xchg
xchg
xchg
adc
adc
adc
adc
adc
adc
std
std
std
std
and
and
and
and
adc
hlt
mov
adc
adc
adc
xchg
sbb
outsl
mov
adc
adc
std
std
std
and
std
and
and
and
adc
hlt
xchg
adc
adc
adc
cmc
adc
rcll
xchg
adc
std
std
and
std
and
and
sbb
adc
adc
xchg
adc
adc
adc
adc
nop
shll
mov
fcoms
std
and
std
and
and
sbb
adc
hlt
hlt
xchg
adc
adc
sbb
xchg
mov
fcomp
fcomp
fcomp
fcoms
and
and
and
sbb
adc
sbb
sbb
xchg
mov
fcomp
fcomp
fcomp
fcomp
fcomp
xchg
std
std
std
std
and
and
and
adc
adc
hlt
fcoms
mov
mov
fdivs
fcomp
fcomp
fcomp
xchg
std
std
std
and
std
and
and
adc
adc
sbb
xchg
imul
mov
fcoms
xchg
fcomp
fdivrs
and
std
and
and
sbb
adc
hlt
sbb
mov
add
fdivs
adc
mov
fdivrs
xchg
std
and
std
and
and
adc
adc
sbb
fcoms
fdivs
adc
adc
mov
fcomp
fcomp
fcoms
std
and
and
sbb
adc
cmc
sbb
fcomp
xchg
nop
xchg
mov
fdivs
adc
adc
adc
adc
adc
adc
std
std
std
std
std
and
and
sbb
adc
cmc
push
push
fcoms
std
std
std
std
and
and
and
adc
push
cmc
add
xchg
fcomp
fcomp
fcomp
fdivrs
fstp
fstp
fstp
mov
std
std
std
std
and
and
sbb
adc
adc
cmc
pop
mov
fcomp
fcomp
fcomp
mov
fstp
fstp
fstp
fnsave
std
std
and
and
sbb
adc
adc
pop
jge
mov
fdivs
fdivrs
fstp
fstp
fucom
fucom
mov
std
std
std
and
and
sbb
adc
adc
cmc
es
mov
fcomp
fdivs
mov
mov
mov
in
fucom
fnsave
std
std
and
and
sbb
adc
adc
jo
addl
mov
adc
adc
adc
mov
in
in
fnsave
std
std
std
and
and
adc
adc
adc
nop
andl
adc
adc
adc
adc
in
mov
adc
std
std
std
and
and
sbb
adc
adc
adc
xchg
mov
fcomp
mov
adc
adc
mov
fucom
in
jmp
std
std
std
std
std
and
and
adc
adc
adc
mov
xchg
mov
fcomp
mov
adc
mov
fucom
in
jmp
fnsave
std
std
std
std
and
and
adc
adc
adc
mov
mov
stos
mov
mov
mov
fucom
in
in
fnsave
std
std
std
and
std
and
adc
adc
adc
adc
xchg
mov
adc
mov
mov
in
fstp
mov
adc
std
std
std
std
std
std
and
sbb
adc
adc
adc
adc
mov
mov
mov
mov
in
fstp
mov
adc
mov
std
std
std
std
std
std
std
and
sbb
adc
adc
adc
adc
adc
mov
mov
fcomp
mov
fstp
fstp
mov
adc
adc
std
std
std
std
std
std
and
adc
adc
adc
adc
adc
adc
mov
mov
fcomp
mov
fnsave
adc
mov
adc
std
std
std
std
and
sbb
adc
adc
adc
adc
adc
adc
adc
mov
mov
mov
mov
adc
adc
adc
std
std
std
and
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xlat
xlat
xlat
adc
adc
adc
mov
adc
adc
adc
std
and
pushf
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xlat
xlat
xlat
adc
adc
adc
adc
std
and
pushf
pushf
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xlat
xlat
xlat
xlat
mov
adc
adc
adc
std
and
pushf
pushf
cmc
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
dec
dec
dec
dec
adc
adc
adc
adc
adc
adc
cmc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pushf
adc
adc
and
adc
adc
adc
adc
adc
adc
cmc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pushf
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
adc
adc
cmc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmc
div
div
div
div
div
div
div
div
div
div
div
div
div
adc
adc
adc
adc
adc
adc
rolb
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
lock
add
add
add
add
add
add
add
rolb
add
add
iret
rolb
add
add
iret
addb
add
add
mov
add
add
add
test
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
rolb
add
add
inc
add
add
add
inc
add
add
add
inc
add
pop
incl
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
scas
seto
ficoml
or
or
and
sbb
adcl
inc
in
push
fs
into
or
fistpl
or
mov
cltd
inc
in
jg
xor
mov
sub
inc
cwtl
push
jnp
js
nop
outsl
mov
adc
bswap
xor
gs
shlb
dec
and
stc
shll
or
or
std
imul
and
sahf
loope
push
outsl
rcll
mov
out
and
ret
mov
mov
inc
cs
imul
adc
sbb
popa
shll
loope
xchg
arpl
or
mov
xchg
adc
sbb
push
mov
fs
sub
push
dec
sbb
pop
xor
sar
fldt
xor
pop
in
sti
mov
stos
mov
imul
xchg
fistpl
and
push
iret
xor
pop
xor
mov
jge
rcr
test
repz
add
jnp
into
cmp
or
cmp
adc
mov
xor
loope
bound
sub
pop
es
push
stc
cmp
mov
movsl
push
add
dec
push
xchg
xor
mov
aam
pop
push
adc
inc
add
arpl
sub
xchg
in
call
in
lahf
dec
hlt
fistpll
fwait
mov
mov
mov
and
outsl
mov
xlat
cmp
xchg
or
mov
dec
cmpsb
ss
pop
or
mov
jge
movsl
lret
mov
cmp
lea
aaa
mov
scas
mov
pop
add
add
lods
mov
mov
fimuls
mov
sub
sbb
icebp
push
jmp
out
fsts
in
pop
pusha
pop
and
lods
popa
pusha
cmp
mov
incb
sub
stos
popl
test
adc
ljmp
fistpl
push
jae
ret
jnp
xor
lret
mov
int3
dec
ret
sbb
std
sbb
mov
in
push
test
inc
mov
pop
ljmp
enter
sub
pop
mov
push
ds
lock
outsb
nop
jg
push
orb
pop
add
push
mov
cmp
andl
jo
sub
jecxz
pop
mov
popa
inc
ret
push
push
js
pusha
imul
js
push
sarl
xor
andb
adc
fwait
test
sbb
mov
cs
scas
call
jmp
push
into
jl
jo
mov
jb
cmp
loop
daa
movsb
inc
sub
ret
es
or
xchg
test
xlat
xlat
jo
lea
faddl
jns
xlat
xchg
or
filds
int
push
insl
mov
in
ret
and
inc
out
cmp
xor
mov
mov
mov
xlat
cmp
inc
and
jmp
push
lock
cmp
push
or
or
pop
loop
lahf
push
jns
jne
inc
ret
popf
faddl
and
add
cmp
xchg
jecxz
in
aaa
test
sub
push
scas
jo
dec
inc
jmp
cmp
mov
jg
lcall
cli
rclb
push
jno
ror
out
dec
jo
jne
push
dec
or
lods
sbb
mov
pusha
int3
cltd
cmp
nop
ror
mov
push
xor
cs
jno
in
bound
lret
test
adc
mov
xchg
outsb
and
lcall
lock
rcr
clc
shll
sub
pop
leave
in
inc
pop
jbe
adc
in
outsl
das
push
sub
pop
jo
fsubr
dec
xchg
notl
and
rcr
fcompl
pop
dec
inc
xor
push
dec
push
add
mov
fwait
test
xchg
dec
aas
ja
or
popf
movsl
dec
call
out
ficoms
aad
outsl
das
imul
insl
js
pop
and
lahf
xchg
add
xor
mov
imulb
sub
sti
push
fwait
xchg
mull
jno
aaa
enter
insl
daa
inc
pop
and
into
xor
mov
cltd
adc
mov
mov
iret
jg
bound
and
out
lds
loope
bound
addb
xchg
insl
or
xor
jmp
cmp
jle
dec
push
jno
int
adc
fsubl
mov
sbb
pop
aam
aad
fldenv
shll
push
clc
scas
outsl
lahf
test
xor
iret
and
mov
push
sub
stos
loop
mov
scas
dec
or
push
fstpt
lea
les
mov
fnstcw
pop
insl
insl
sbb
mov
int3
xor
mov
xchg
fucomip
jmp
xor
jg
sbb
mov
xchg
mov
push
mov
sub
ss
xor
out
adc
and
shlb
mov
fcompl
std
jae
rolb
mov
mov
jge
ficompl
cmpsb
ret
cmp
xlat
stos
cmpsb
fdiv
mov
pop
push
xchg
clc
sbb
dec
fwait
mov
incb
mov
pushf
or
repz
stc
ljmp
add
add
mov
aas
jns
rcrl
popf
fcompl
adc
sub
pop
inc
xchg
mov
push
inc
ds
clc
xchg
lret
loop
loopne
add
inc
clc
mov
mov
cmpl
push
or
add
mov
jmp
xchg
dec
fwait
adc
mov
iret
mov
loopne
add
sti
and
adc
fidivrl
int
inc
xor
rclb
sti
xchg
pop
sbb
lods
and
lahf
jbe
xor
rcll
test
movsl
jno
jae
xchg
push
jp
testb
leavew
mov
shl
js
mov
in
in
aam
daa
sbb
sbb
insl
fldenv
pop
test
pusha
ret
shlb
pop
ljmp
pop
int3
rcl
andl
imul
pop
das
stos
inc
bnd
lret
out
ficoml
repz
ret
mov
imul
mov
lods
mov
jmp
ror
hlt
ljmp
mov
cmp
xlat
stc
es
xchg
jg
popf
stos
dec
xchg
sbb
fs
stc
or
xor
jmp
ss
mov
cltd
mov
jno
fstps
loope
cmp
add
push
add
adc
or
clc
stos
in
cmpsl
or
stos
inc
adc
sub
loopne
ror
xchg
pop
pop
adc
jle
std
inc
shll
sbb
popf
xchg
test
jns
lods
into
ljmp
or
push
loopne
mov
cmp
mov
and
leave
adc
sti
cmp
add
push
scas
and
xchg
pop
faddp
cmp
add
pop
test
pop
jo
das
cmpsb
xlat
dec
sbb
cmp
lret
and
pop
cmc
and
sbb
or
mov
push
xchg
dec
mov
aam
fnsave
loope
xor
xchg
pop
imul
push
shlb
pusha
inc
mov
fimull
cmp
hlt
dec
aam
adc
pop
pusha
fcmovb
je
outsl
jae
and
cs
mov
into
cli
and
arpl
pop
mov
jne
ficompl
mov
xor
push
shll
jl
cmp
mov
jge
cmp
xor
pop
jg
cmp
ljmp
popa
sub
jecxz
xchg
popf
push
ret
ds
das
mov
push
and
rcll
mov
ret
movsb
loop
in
add
bound
cmp
mov
pushf
push
cmpsl
loope
or
xor
inc
xchg
mov
sbb
out
mov
inc
cs
mov
cmpsl
nop
push
xchg
int
mov
push
sub
pop
xlat
push
xchg
ret
sbb
add
or
or
or
test
leave
int3
mov
notl
or
repnz
sub
pop
dec
clc
iret
fwait
arpl
jnp,pn
jbe
push
pop
sti
popf
cmp
pop
imul
mov
jmp
push
leave
aaa
into
ljmp
add
add
popf
cmp
scas
sbb
iret
test
jg
xor
in
adc
sub
cmp
push
out
sub
out
ljmp
cmp
outsb
pusha
cwtl
xchg
mov
adc
push
and
mov
aad
jb
xor
mov
adc
and
out
mov
clc
ljmp
add
add
pop
cmp
hlt
mov
ret
cmpsb
or
lcall
lods
inc
ljmp
dec
and
les
leave
sub
inc
pop
into
sub
test
fists
ljmp
cmp
or
ja
pop
add
aad
stos
sbb
jle
xchg
mov
sub
popa
xchg
push
add
cs
mov
jmp
cmp
inc
std
cmp
dec
faddl
or
cmc
push
int3
es
cmp
sbb
cwtl
fxtract
loope
mov
cli
cli
lret
popa
or
sub
daa
add
data16
mov
in
loop
xor
lcall
int3
mov
in
push
mov
sub
and
ss
jbe
mov
push
inc
mov
dec
dec
sub
push
int3
in
adc
dec
jbe
mov
in
subb
mov
xor
js
mov
add
jge
mov
ljmp
adc
in
test
aam
mov
movsl
ss
push
aas
or
mov
push
jae
sbbb
test
push
sbb
add
pushf
add
jg
pop
mov
lret
roll
or
jmp
pop
imul
idivl
or
xchg
or
imul
loope
jne
mov
loop
icebp
xchg
mov
fisttpl
xor
mov
pop
push
adc
dec
jb
fwait
aaa
stc
testl
mov
out
loop
sbb
mov
pusha
loope,pn
stc
and
push
xchg
push
push
or
mov
push
and
fmul
fs
or
fisttps
mov
jle
mov
mov
aaa
fadd
cmpsl
jae
sub
xchg
subb
mov
and
std
insl
xor
inc
xchg
scas
sub
stos
fcmovbe
das
xorb
mov
jbe
imulb
mov
sub
mov
xor
add
push
insb
out
rol
jmp
push
addl
sbb
jae
aaa
cmc
or
ret
test
dec
dec
ss
lahf
xchg
in
subl
jecxz
cwtl
call
lcall
jl
outsb
inc
scas
je
lods
pushf
sbb
cmp
jno
jnp
popf
or
or
xchg
and
push
in
or
repz
daa
lea
pop
icebp
popf
pop
and
ss
and
fsubp
in
push
xchg
imul
push
push
adc
lret
and
mov
int3
lds
lret
and
mov
mov
add
dec
mov
add
sarl
dec
inc
sar
push
xchg
enter
or
lds
jnp
mov
mov
popf
add
jno
push
adc
and
mov
sub
pop
sarl
pop
cmpsb
push
push
scas
dec
lret
ret
jnp
mov
sbb
int3
iret
jp
leave
add
or
mov
xor
jo
inc
stos
loopne
icebp
cmp
sti
adc
orl
loop
inc
lods
mov
push
cmpsl
xchg
insl
mov
lods
mov
cmpb
cmpsl
add
inc
xor
repz
adc
jnp
testl
in
xchg
mov
pusha
call
or
sbb
push
mov
xor
inc
sti
cwtl
leave
jle
out
mov
adc
pushf
sbb
ljmp
popa
mov
fdivs
je
xor
scas
divb
into
xchg
ret
sarl
xchg
popf
imul
sbb
dec
pop
or
shrl
stos
xchg
xchg
cmp
xlat
ret
test
and
je
andb
pop
dec
xchg
dec
jns
repnz
mov
data16
lea
jl
loopne
or
mov
aad
mov
ljmp
repnz
aad
fimull
jb
lcall
daa
addr16
fwait
xor
cld
and
xchg
xchg
orb
rorl
lcall
mov
mov
std
fcoml
dec
movsb
inc
out
cmp
sbb
adc
dec
xor
jo
or
outsb
repnz
jae
mov
or
mov
rcr
cmc
jne
aam
mov
ret
das
divb
sbb
outsb
fs
mov
xor
mov
mov
xorb
lret
pop
in
outsb
cltd
jle
std
mov
sahf
test
in
push
lds
sbb
mov
sbb
dec
jecxz
and
pop
movsl
pusha
aas
pusha
les
in
mov
movsl
sub
add
lret
andl
mov
jmp
gs
popf
push
incl
shrb
popa
out
cwtl
add
in
inc
rolb
outsb
jmp
push
or
and
daa
faddp
or
cmc
incb
dec
pusha
sbb
xor
mov
sub
jge
hlt
mov
push
cld
jmp
popa
aaa
dec
lcall
add
cs
andb
rorl
fwait
sbb
mov
jl
in
mov
mov
dec
mov
xchg
mov
in
out
js
mov
pop
lret
push
fadd
cmp
testb
loop
enter
fdiv
outsl
fcmove
cs
lret
fisttpll
mov
shrb
frstor
jne
js
aam
outsl
imul
or
ja
mov
or
jnp
xor
mov
dec
jecxz
div
in
sub
loope
mov
push
outsb
aas
add
testl
js
js
sahf
and
pop
inc
daa
std
push
jno
lcall
aam
es
dec
lahf
xchg
ljmp
mov
es
mov
fbstp
cs
mov
mov
and
push
out
mov
lret
add
nop
out
inc
out
mov
lahf
insb
and
or
cmp
xchg
adc
jns
fucomip
js
xor
ljmp
push
jle
jge
les
lds
or
cli
scas
orb
out
pop
outsl
or
int
dec
xchg
xor
cmpsl
cld
xchg
xchg
cmp
ret
js
dec
jle
cmp
adc
xchg
dec
mov
xchg
and
xchg
insb
loop
jg
testb
sub
xor
int3
lods
pop
lahf
adc
inc
sti
pushw
fadd
daa
xchg
push
cmpl
cmpb
scas
push
add
sub
mov
out
aas
xchg
fnstenv
addr16
sarl
inc
sbb
iret
push
call
mov
pop
jne
popa
sbb
dec
sub
and
xchg
call
in
ja
mov
notb
movsl
mov
adc
jl
cld
push
test
xchg
dec
pop
jbe
xchg
jp
fcompl
pop
ret
imul
sbb
sub
mov
jg
test
push
fistl
insb
andl
jae,pt
fwait
dec
mov
pop
sahf
std
iret
cmp
jmp
and
lods
ja
out
imul
inc
sbb
sub
dec
or
fcompl
data16
dec
ds
cmpsl
mov
pop
stos
sbb
xor
jo
stos
add
test
cmp
out
test
popa
mov
and
add
dec
dec
ja
into
cmp
rolb
mov
sbb
filds
clc
cmp
jmp
cmpsl
jb
push
or
testb
adc
mov
mov
jno
jno
cmp
jne
add
sub
sbbb
pop
adc
lret
cs
stos
mov
cwtl
test
mov
stos
andb
mov
bt
push
jle
iret
inc
lods
cmpb
int
xor
inc
xchg
sbbb
mov
incl
shlb
sarb
and
sbb
sarb
arpl
cmp
pop
imul
loopne
mov
fldpi
xchg
pop
out
or
popf
stc
xor
jle
pop
mov
lea
lods
inc
mov
insb
dec
test
clc
test
push
aad
and
enter
mov
lcall
mov
mov
aad
out
xor
fs
xchg
into
inc
jge
enter
rcrl
adcb
inc
mov
ror
call
arpl
xadd
cwtl
pusha
ja
lcall
jl
stos
push
mov
in
enter
add
and
mov
shll
cwtl
jo
lock
loope
pop
sti
mov
repnz
add
sbb
sub
insl
mov
stos
xchg
fnsave
jle
out
shll
fimuls
leave
xor
xchg
mov
add
aas
mov
roll
insl
rolb
fisubrs
out
scas
mov
sbb
movsl
xchg
fcoml
adcl
mov
mov
pop
push
xor
mov
roll
sbb
shl
jbe
push
popa
inc
fimuls
addr16
pop
sbb
lret
mov
jae
lds
push
out
sub
cmp
aam
mov
cmpsl
cmp
xchg
incl
fistl
mov
jne
pushf
dec
outsb
fstps
loopne
test
jo
jb
xorl
pop
xchg
pusha
mov
cwtl
fidivrs
sahf
mov
lock
mov
pop
aad
sbb
jae
cwtl
cwtl
neg
xchg
fcom
jle
sub
sub
cmp
stos
pop
fisubrl
mov
scas
or
mov
xchg
and
imul
pop
mov
pop
cwtl
fnstcw
ja
ljmp
lods
rolb
leave
repnz
addb
xor
subl
xor
cmpsb
push
std
sbb
in
movsb
mov
mov
icebp
mov
iret
mov
sbb
nop
inc
popf
add
or
push
lea
lret
lods
repnz
jg
popa
in
je
and
xchg
jo
das
rcll
pop
das
stos
pop
in
pop
xor
inc
insb
sti
and
mov
das
mov
test
lret
les
cmp
xor
ja
test
or
adc
flds
ret
add
xchg
or
outsl
and
pop
sbb
mov
xchg
fcomi
inc
adc
sub
hlt
dec
in
add
xlat
out
and
in
jge
dec
sub
mov
or
mov
cltd
dec
mov
pop
popa
and
ds
sub
dec
add
das
rclb
in
loope
lret
jae
lahf
adc
xor
lea
mov
push
in
pop
fs
and
xor
notb
cs
rolb
cmp
pop
sbb
and
std
scas
adc
mov
push
xchg
fdivl
jge
mov
xchg
out
ss
int3
or
jae
pop
mov
shll
adc
in
clc
incb
lahf
inc
and
mov
fcompl
add
jg
psrld
out
xor
data16
cld
scas
and
push
loope
fnstcw
stc
into
mov
pop
mov
lahf
xchg
sub
or
inc
mov
scas
or
sbb
push
call
mov
push
mov
cmp
inc
inc
cmp
int
or
dec
push
movsb
inc
and
adc
shll
xorps
mov
orb
cmp
xchg
gs
icebp
insl
mov
sahf
int3
gs
ret
pop
sub
sub
or
xchg
loope
ror
xchg
mov
push
sbb
lcall
xchg
shlb
mov
fisubs
lods
iret
lret
sub
adc
js
lock
fsts
push
adc
fists
inc
imul
lcall
arpl
push
and
scas
pop
xchg
fcomip
mov
lods
roll
inc
mov
pop
stos
dec
bound
push
inc
loope
sbb
or
sub
or
insb
push
das
pop
mov
adc
sbb
inc
test
xor
or
cmp
mov
pop
out
xor
ss
mov
jno
xor
dec
and
push
stos
dec
test
movsl
adc
mov
outsb
out
inc
mov
jp
imul
shlb
ss
push
mov
aaa
mov
in
inc
iret
scas
xchg
pop
addl
dec
push
jo
ss
add
inc
pushf
mov
les
imul
cmp
add
xchg
pop
addr16
sbb
cmc
cmpsb
lcall
push
dec
scas
fnstsw
insb
mov
nop
clc
loope
rolb
cmp
loopne
cwtl
xchg
lods
jae
jmp
jne
ja
and
scas
mov
mov
loop
movsl
and
sbb
pop
xchg
std
pop
cmpsl
cli
hlt
adc
push
xchg
popa
enter
sqrtps
adc
cmc
push
jg
adc
cmpsb
lcall
jo
fadd
mov
cmp
fnop
jl
or
out
mov
push
xchg
fsubrp
nop
int
push
dec
test
and
pop
jecxz
adc
push
push
vmovaps
pop
int
test
mov
pop
dec
gs
dec
aaa
push
faddl
mov
inc
fmull
sbb
add
mov
test
xchg
mov
jbe
mov
and
or
aas
cwtl
mov
je
test
stos
add
divl
popf
or
inc
fistl
orb
cmc
jae
or
jp
mov
sahf
insb
bound
sub
scas
in
or
cmpsl
jecxz
icebp
int3
or
data16
push
add
xchg
sbb
mov
hlt
and
es
and
fcomp
pop
int3
jmp
jmp
jge
push
nop
jbe
je
push
sbb
sar
outsb
cmp
lret
lcall
out
or
mov
aas
sahf
sti
add
imul
orb
shlb
cld
dec
jb
into
xchg
outsl
pop
aaa
xor
xchg
xchg
adc
cwtl
pusha
push
lcall
into
inc
xchg
lock
mov
lea
mov
and
rclb
mov
jns
pop
lcall
push
fcoms
xchg
sub
mov
out
xchg
icebp
bound
fdivl
out
jnp
aad
out
dec
rcrb
xor
repnz
popf
jmp
inc
cs
outsb
movsl
fisttpl
dec
cmp
inc
mov
jnp
xchg
loopne
add
push
jae
or
scas
jno
neg
cwtl
xor
in
ljmp
sub
lret
and
mov
xadd
scas
sbb
adc
adc
or
push
xor
cwtl
inc
xchg
cmpsl
fcmovne
sub
xor
jl
sti
cmp
fildl
pop
enter
jns
jnp
jae
ss
clc
jae
sbb
and
mov
jbe
push
adc
sub
sbb
pushf
and
xchg
dec
loope
ret
inc
es
or
inc
inc
imul
in
add
test
inc
cmc
cli
and
shrb
mov
adc
mov
inc
sarl
pop
and
test
imul
and
jbe
test
jnp
or
out
sahf
insb
xchg
sbbb
insb
lcall
push
jmp
mov
lret
jg
and
cwtl
mov
popf
aad
push
pop
pop
mov
pushf
or
jmp
int3
insb
jecxz
pushf
mov
mov
clc
scas
cli
ljmp
aam
lods
pop
push
xchg
test
jg
or
enter
popl
cmp
outsb
mov
pop
outsl
xchg
gs
jecxz
push
outsl
je
or
nop
jbe
stos
mov
sub
cmc
in
call
in
xchg
cmp
adc
xchg
adcl
inc
imul
cmp
or
jge
cmc
mov
lods
dec
les
and
jbe
or
mov
cmp
pcmpeqb
shll
mov
add
xchg
js
adc
call
add
push
mov
xchg
ret
xor
cltd
cwtl
inc
daa
mov
in
inc
andl
sti
call
test
dec
or
aas
sub
mov
mov
stc
push
mov
adc
addb
scas
cmp
movl
sbb
lret
sub
mov
xor
mov
mov
or
jl
mov
cmp
mov
dec
xchg
aam
push
xlat
lods
xor
fcomps
nop
shlb
pop
cmp
pushl
sub
addr16
jb
cld
pop
call
sub
pop
inc
mov
ds
outsl
or
pop
pminub
cmc
xchg
inc
imul
pop
inc
cmp
xorb
gs
push
ds
xchg
adc
adc
mov
jns
mov
neg
into
mov
add
mov
jbe
or
fidivs
sti
jnp
cmp
enter
adc
jl
mov
pop
xchg
mov
adc
mov
push
mov
in
mov
push
lds
hlt
mov
push
int3
inc
sbb
dec
push
scas
sub
ds
scas
jbe
adc
sub
daa
icebp
rcrb
outsb
cmc
sub
ljmp
out
push
daa
insl
out
push
xor
push
pop
fbstp
cmpsl
xor
fistpl
mov
jl
cmpsb
xor
out
xor
pop
mov
out
clc
xlat
lret
repz
imul
add
aad
in
add
mov
int
push
jnp
or
sti
outsb
adc
ror
in
addl
test
xorb
xchg
xor
and
jle
sub
mov
push
std
adc
cld
pop
cmp
mov
hlt
cmp
movl
stc
aas
pop
dec
call
add
push
nop
loope
cltd
inc
and
cmp
shlb
sub
push
cli
xor
sub
sub
push
mov
repnz
jbe
aad
pop
cmp
ret
test
mov
pop
sbb
sbb
xchg
push
int3
faddl
out
mov
mov
lds
jle
push
inc
ret
mov
ss
inc
xor
push
pop
lahf
mov
jo
ret
jbe
push
into
pop
inc
and
push
dec
rcl
mov
push
cmp
aas
xchg
adc
loopne
dec
or
xchg
stc
stos
lcall
fimull
jo
sub
lods
inc
xchg
data16
mov
jmp
lock
mov
out
mov
pushf
pop
cmp
jmp
pop
push
outsl
mov
add
mov
lds
adc
cmc
mov
insb
xor
pop
lods
pmulhuw
sbb
adc
xchg
in
aas
in
mov
mov
sub
xchg
ds
xor
scas
cs
jb
jmp
movhps
sbb
inc
pop
jle
sbb
ror
cltd
and
mov
sub
jno
mov
cmp
add
ja
and
test
add
sbb
sbb
push
shll
or
jp
imul
lret
or
mov
js
jns
lds
scas
es
pop
iret
std
bound
mov
arpl
mov
dec
xchg
jno
sbb
stc
cmpsl
xchg
and
push
or
ljmp
sub
push
fsts
mov
jb
cmpsb
jno
or
xorl
add
pop
pop
loopne
pop
jl
fcomp
movsl
adc
int
adc
mov
sbb
loope
xchg
in
jl
addl
push
aas
mov
mov
pop
dec
repz
xchg
ja
sbb
addl
jne
dec
stos
mull
pusha
jecxz
fs
andl
xor
decl
push
insl
les
inc
stc
mov
mov
loope
sahf
pusha
push
daa
repz
sbb
mov
push
xlat
cmp
inc
lods
jmp
add
unpcklps
lret
cmp
jp
shlb
xor
test
or
xchg
loope
pop
push
pop
or
sub
movb
push
imul
sbb
incb
popa
jmp
mov
push
addr16
or
rclb
mov
sbb
xchg
ret
js
outsl
dec
cmp
mov
dec
sti
sub
pop
aaa
jo
rcrb
jg
hlt
mov
cmc
cmp
dec
add
push
dec
jmp
sbb
clc
sbb
and
lahf
jae
pop
sub
movsb
cli
lret
outsl
add
mov
out
push
int
gs
in
push
mov
lock
and
ljmp
sbb
es
jmp
mov
popa
or
outsl
aad
aaa
lcall
jl
add
push
push
jle
fisubrs
cmc
mov
mov
fnsave
sub
ljmp
xchg
jbe
loop
scas
mov
push
cmp
xchg
fsubrl
dec
fisubl
mov
outsl
and
outsl
xchg
loop
mov
push
cmpsl
icebp
stc
lret
pop
arpl
int
aam
out
mov
xor
decl
push
loope
outsl
push
and
mov
test
insb
inc
iret
xadd
test
mov
push
cli
loopne
lret
pop
and
cmp
xchg
cmc
dec
mov
hlt
je
enter
xor
stos
or
adc
push
imul
std
cmp
int
bound
xchg
xchg
out
loop
jae
pop
cmpsb
adc
cmp
sbb
imul
dec
jne
shl
rcll
loopne
insl
hlt
movsl
push
es
pop
jle
xor
movsb
dec
jecxz
dec
loopne
imul
mov
mov
addb
xor
dec
xor
push
inc
fsts
push
popf
jmp
pop
test
and
and
loope
fimuls
fldl
sub
xchg
mov
pusha
movsl
jns
aad
xor
in
inc
xchg
jl
int3
sbb
jae
loope
gs
inc
js
movsl
mov
xchg
mov
int3
mov
lods
push
insb
arpl
adc
adc
xchg
push
inc
and
pop
lock
lock
ret
fwait
sbb
lods
ror
andl
fstl
out
ja
ret
lret
in
sbb
push
stc
pushf
addr16
sub
pop
leave
cld
add
jle
mov
das
aaa
mov
and
mov
ret
mov
pop
movl
jbe
mov
or
stc
mov
ja
das
popf
iret
arpl
neg
nop
lds
sbb
add
je
sbb
add
sarl
mov
inc
sub
lret
mov
lods
sub
xor
cmpsl
xchg
inc
jp
xor
and
pop
sub
aad
sub
dec
mov
pop
adc
push
or
dec
jne
cmp
or
in
mov
pop
ficomps
pop
xchg
hlt
mov
fidivs
arpl
mov
push
stc
aam
mov
cli
cmc
jae
pop
pop
sbb
popa
iret
pop
xchg
xchg
pop
pop
sub
sbb
sbb
out
aas
mov
rcl
dec
push
repnz
inc
mov
shlb
fdivr
and
push
bnd
pop
call
mov
in
dec
and
jge
emms
pop
loopne
shlb
or
sub
jae
jno
repz
inc
cmp
push
sbb
and
push
insl
sub
imul
sahf
cmpsl
das
xchg
xor
lret
addr16
and
movsb
lahf
jle
data16
call
add
add
scas
xchg
or
ficoms
into
mov
in
pop
add
push
pushf
add
fildll
fsubr
sti
mov
lock
or
and
addl
aas
nop
gs
repz
cmp
mov
sub
cmp
out
adc
lods
xchg
adc
adc
stos
mov
lods
andb
add
dec
add
clc
push
pop
add
std
daa
xchg
sub
clc
xchg
mov
mov
jns
mov
xor
insb
push
jne
or
in
dec
les
popf
adcl
or
jle
mov
lods
cmp
cmp
das
cltd
push
adc
cmp
shll
test
test
jg
sbb
daa
test
stc
push
mov
cld
roll
push
add
add
stos
jns
loop
loope
jbe
mov
daa
scas
xlat
push
stos
xchg
or
in
xchg
enter
stos
xchg
adc
mov
mov
mov
nop
sub
xor
inc
das
je
stos
sti
sbb
arpl
mov
push
mov
sahf
hlt
add
cmpsl
add
mov
and
mov
cmp
adc
insb
lret
ja
scas
xor
clc
testl
rolb
outsl
negb
add
xchg
movsl
dec
shr
stos
inc
ficoml
fdivrp
mov
mov
jo
pop
or
inc
mov
jne
out
mov
test
cmp
or
mov
xor
pushl
js
movsb
rorb
adc
fldenv
mov
scas
push
cmp
pop
outsb
in
sti
insb
mov
pop
mov
ss
xchg
fnstcw
clc
in
mov
scas
aad
stc
popf
xchg
out
xchg
mov
push
popa
jge
in
inc
push
cmp
push
push
push
add
adcb
add
jle
xchg
pop
lds
sub
jge
xlat
je
mov
pop
andb
clc
or
mov
rorl
mov
pop
xchg
sbb
cld
add
daa
jle
aam
aad
dec
inc
popf
shlb
lret
aas
xor
mov
sti
mov
and
jg
inc
mov
xor
or
ret
jns
adc
add
cs
lods
in
jmp
xchg
iret
inc
in
fidivl
aad
clc
jne
dec
out
lds
in
neg
mov
insb
icebp
lcall
lcall
xchg
xor
xchg
xchg
pop
mov
outsl
inc
cmpsl
adc
aad
inc
rdtsc
pop
jl
subb
or
mov
test
loop
adc
add
adc
push
std
jno
ret
or
insb
mov
ss
add
mov
ss
hlt
into
sub
enter
jb
pushaw
call
lods
test
adc
outsb
popf
add
scas
push
popf
daa
xor
add
scas
mov
in
loop
mov
dec
sbb
push
sub
mov
scas
xchg
add
cmp
aam
xchg
adcb
jge
push
mov
inc
push
add
pop
loop
dec
sbb
jmp
jp
addl
cmp
sbb
aam
xchg
jecxz
sbb
shlb
mov
mov
out
stc
outsb
mov
outsb
mov
adc
jae
fwait
push
push
sub
and
fadds
pop
aam
dec
push
push
sub
fidivl
push
dec
fs
inc
repnz
cmp
es
rolb
stos
shrl
push
xchg
ficomps
push
mov
mov
push
js
inc
shll
and
mov
icebp
push
inc
add
mov
xchg
jp
mov
pusha
imul
ss
cmp
dec
pop
nop
adc
adc
cmp
repz
rcrb
lcall
shll
xlat
sahf
je
fstps
fdivrl
push
fbld
jge
es
repz
ds
popf
dec
cmpsb
daa
dec
mov
mov
lds
addr16
sbb
adc
call
daa
loop
or
test
mov
mov
jmp
dec
dec
mov
or
dec
sar
push
xor
sub
pop
or
and
cld
das
add
repnz
pusha
and
push
adc
imul
mov
mov
aas
pushf
fisubrs
mov
test
shll
hlt
inc
sub
in
jl
inc
inc
into
and
cld
xchg
popw
fbld
clc
aad
sbb
mov
aad
je
and
test
sub
lret
cld
inc
jne
xor
xor
mulb
lds
aaa
mov
xchg
inc
insb
adc
pop
inc
clc
hlt
lock
inc
sub
xlat
jbe
cmpsb
es
ja
jmp
xlat
pop
push
clc
lock
stc
pop
jne
cmp
xor
mov
test
jns
add
cltd
stc
fwait
jmp
inc
orb
movsl
mov
mov
insb
jnp
es
aas
mov
xor
jmp
cmc
arpl
adc
fiadds
mov
pop
xor
inc
adc
cmp
mov
aaa
ljmp
inc
sbb
inc
lods
in
push
push
or
div
in
dec
fcomip
repz
jnp
les
loopne
jae
decb
andl
bound
inc
push
adc
push
jge
sbb
cmpsl
adc
rolb
ljmp
jnp
dec
pop
and
jmp
inc
add
and
cmp
xchg
xchg
int3
outsb
dec
jno
iret
sbb
xchg
add
sbb
and
in
sbb
push
adc
mov
dec
imul
fistpll
mov
pushf
out
loope
mov
add
movsb
lret
dec
incl
sub
pushf
mov
mov
lret
xchg
sbb
shlb
sbb
rcl
aas
xor
lahf
insl
rcrl
and
pop
cmc
sbb
xchg
jp
popa
pop
shrb
pop
pusha
mov
mov
or
lds
in
out
shrl
stos
gs
mov
std
inc
sbb
inc
shll
xchg
and
lods
or
es
fxam
adc
dec
sub
mov
adc
dec
add
fs
loopne
pop
test
leave
mov
aaa
adc
rcrb
xor
aas
cs
jge
shlb
sbb
pop
ja
jge
out
mov
dec
push
test
mov
pop
movl
mov
push
js
add
and
in
and
jmp
sbb
add
repnz
rolb
push
mov
xor
add
mov
test
ja
pop
sbb
add
je
jp
enter
loope
loopne
push
and
test
sub
cld
xlat
mov
pop
dec
addr16
jp
adc
popa
cmpsb
sbb
insl
jmp
push
mov
test
leave
mov
mov
xchg
fcoms
inc
dec
outsb
icebp
pushf
aaa
pop
stos
xchg
call
fstpl
pop
push
fstl
in
adc
cmp
or
xorl
ja
add
subb
into
mov
test
rcl
push
pop
icebp
stc
arpl
sahf
ja
xchg
subb
subb
push
insl
stos
and
addl
imulb
mov
sub
xchg
nop
and
and
ss
mov
fdivrl
push
loop
pushf
jmp
scas
lret
cs
stos
int3
inc
or
cmp
pop
movsb
sbb
cwtl
and
mov
push
push
mov
dec
test
mov
sti
pusha
int
pop
mov
jo
sub
inc
and
xor
pop
mov
xchg
test
mov
in
xchg
inc
jp
sbb
push
jae
push
ja
jecxz
sbb
ret
lds
jbe
iret
sub
pop
ret
ja
dec
xor
addb
cld
pusha
mov
xchg
push
stos
pop
jno
dec
adc
sbb
and
imul
mov
lods
leave
dec
ss
addr16
pop
mov
pop
test
int3
adc
cmp
pop
inc
insb
push
mov
pop
dec
xchg
mov
jns
xorb
mov
daa
sub
push
xor
add
fdivr
add
cwtl
jge
push
xchg
setl
aam
sub
mov
push
stos
cmpsb
fldenv
lahf
mov
or
mov
xchg
loope
fldt
outsb
ljmp
gs
fiadds
sbb
outsb
ret
dec
inc
in
jns
pop
repz
sub
mov
pop
jb
imul
jmp
push
adc
mov
jb
ret
fwait
inc
and
lret
push
xor
cmp
out
mov
insb
mov
subl
ret
pop
stos
sub
cmp
push
add
into
out
sub
out
inc
mov
mov
push
mov
jg
int3
mov
fcomps
xchg
mov
pop
adc
mov
fs
ljmp
xor
adcb
test
push
insb
pop
test
add
aaa
fmuls
jle
adc
outsl
test
clc
add
xchg
xchg
mov
clc
out
inc
cmp
add
fucom
jg
push
inc
xchg
ljmp
fs
mov
mov
outsb
inc
xchg
xchg
rolw
mov
je
mov
in
sbb
or
pop
aaa
xor
mov
stc
jecxz
lds
add
js
mov
sti
jb
sub
movsl
pop
or
mov
out
add
adc
xchg
pop
pop
inc
add
sub
cmp
mov
test
es
cmc
arpl
fldt
push
ljmp
jmp
js
sub
jns
jl
cmp
out
cli
cltd
push
or
add
stc
add
sbb
inc
mov
jp
or
xchg
mov
stos
pop
ds
xchg
ret
sbb
mov
lcall
cmp
mov
or
addr16
mov
cmp
sbb
jl
lret
adc
jmp
mov
andb
jmp
movsl
movsl
mov
pop
lods
cld
adc
js
sahf
mov
lcall
lret
mov
fstps
xchg
mov
adc
fsubrl
ds
add
bound
or
faddl
xor
xchg
addl
jno
sub
xchg
lods
stos
popf
inc
fmulp
mov
inc
adc
cmpsl
mov
pop
jge
lcall
out
sub
inc
out
test
inc
mov
jmp
rcrl
sub
push
xor
or
push
or
mov
js
inc
jle
ss
jo
and
jnp
mov
mov
aam
fs
fnstenv
popf
pop
test
popf
push
lcall
mov
pusha
outsb
jp
fdivrp
into
loopne
add
loopnew
and
aas
imul
mov
imul
and
enter
ficoms
pusha
or
sbb
int
jne
or
cmp
mov
lods
xchg
sub
mov
aaa
fidivl
add
mov
cmp
xchg
adc
test
xorl
mov
xchg
mov
push
test
in
sub
movsl
arpl
cmp
shrb
xlat
mov
cmp
xchg
imul
or
mulb
dec
cwtl
popa
push
stos
mov
int
cmp
lods
bound
mov
mov
sbb
in
scas
cmpsl
sbb
pop
sub
mov
cmpsl
xorb
in
or
xchg
bound
fisubrs
pop
inc
ljmp
inc
mov
jmp
and
movsl
aaa
jg
test
aam
mov
jg
int3
testl
sbb
inc
hlt
dec
dec
pop
sahf
jb,pn
mov
pop
lock
inc
push
pop
mov
add
cmp
and
orl
sub
ret
jge
aaa
inc
push
enter
cwtl
mov
jo
add
cmpsb
fbstp
shrl
jl
dec
push
push
cmp
sub
xchg
dec
dec
ret
sbb
cs
push
sti
das
fnstcw
push
rol
bound
out
repz
pop
jbe
cmpsl
orl
aaa
mov
pushw
dec
ss
cmp
stos
mov
xchg
jb
sub
sub
aaa
inc
repnz
imul
push
push
repz
loope
sub
xchg
pop
into
lcall
test
scas
adc
fistps
jo
jmp
dec
pop
cmpsl
dec
lea
adc
push
icebp
fldcw
adc
or
ret
std
push
and
and
das
add
or
pop
push
jecxz
arpl
push
stos
push
cmp
out
dec
lock
add
fists
xchg
repz
clc
aaa
dec
adc
cld
cmpsl
insb
push
adc
jge
cmp
orl
jnp
sub
ds
xchg
push
popf
in
movsb
lods
sbb
out
push
cmp
ds
ds
xchg
out
or
stos
enter
push
mov
inc
cwtl
inc
add
lret
mov
pusha
icebp
mov
mov
rcrb
aas
cld
fdiv
arpl
xchg
shlb
iret
rcl
sbb
push
movsl
mov
stos
scas
inc
mov
xchg
shll
mov
xor
ret
mov
inc
mov
sub
and
imul
mov
ret
add
notrack
push
popf
stos
ret
pop
arpl
mov
es
xchg
mov
or
dec
mov
ficompl
sbb
inc
push
jno
inc
repnz
jecxz,pn
inc
hlt
faddl
fwait
inc
in
inc
xor
addr16
psubsb
adc
or
ret
lcall
pop
aad
sahf
add
or
out
int
pop
push
lret
mov
pop
jmp
out
cmc
push
adc
add
mov
les
mov
xchg
sbb
or
movsb
mov
sub
pusha
mov
xchg
sbb
add
mov
outsb
test
mov
arpl
xchg
add
in
popf
jbe
popa
movsl
push
mov
mov
adc
cmp
lret
paddusb
pop
mov
test
jmp
insb
scas
inc
stos
mov
mov
lret
roll
inc
push
dec
xor
vmovlpd
mov
mov
xor
jmp
insb
in
xlat
scas
pop
in
or
sub
xchg
mov
stos
push
xchg
sub
push
mov
test
cmp
cmpsb
pop
mov
xchg
and
leave
fsubrs
dec
cmc
mov
rorb
es
jmp
add
je
sub
sub
or
xor
jl
sub
daa
out
test
or
lcall
adc
in
xchg
popf
jae
push
inc
pop
lret
les
fistpll
mov
lahf
xor
loopne
inc
fld
ret
and
and
jae
cltd
imul
sub
lcall
inc
ja
movsl
jbe
sub
cltd
mov
sbb
fsts
aad
sarb
jg
out
cmp
xlat
fcomip
in
jp
stos
cmp
adc
jle
stos
out
pop
push
out
stos
stos
shlb
into
xor
ss
xor
jge
push
movsl
jo
mov
aad
pop
repnz
and
add
xchg
dec
pop
divb
in
iret
stos
dec
inc
adc
cmpsl
and
mov
repz
clc
cld
in
rcll
sarb
adc
sub
dec
test
roll
pusha
jmp
in
stc
mov
push
mov
sbb
sbbb
lret
cmp
sub
add
fs
rcll
fwait
inc
stc
xchg
and
xchg
fadd
push
mov
adc
enter
pop
jl
aas
std
outsb
scas
adc
mov
push
mov
mov
test
imul
mov
divl
in
add
sbb
sbb
xor
loop
int3
movsl
pop
je
lcall
cmpsb
or
jge
jne
xor
xchg
enter
sub
in
dec
mov
dec
sbb
jno
cwtl
mov
mov
cmp
jb
jo
loop
out
xor
pusha
imul
add
sar
or
xor
cmp
dec
sub
push
cwtl
add
int3
test
jns
repnz
cwtl
in
addr16
sbb
adc
sahf
stc
outsb
mov
pop
push
pop
xlat
arpl
adc
das
sahf
out
in
push
rorl
fucomp
push
out
xchg
mov
dec
inc
mov
add
cmpsl
push
cmp
jg
inc
andb
int
cmp
xor
pop
push
sarb
ficomps
loope
mov
push
sbb
mov
jne
push
sets
movsl
pop
lods
push
sub
rclb
push
jmp
and
dec
inc
fnstcw
insl
loope,pn
leave
inc
inc
test
push
mov
imul
aam
lock
enter
dec
sbb
mov
stc
lods
stos
cmp
loope
outsl
adc
pushf
imul
fs
mov
pop
mov
test
add
dec
aas
inc
xchg
push
or
cmp
dec
sub
lods
lea
mov
sub
movsb
dec
pop
xchg
adc
or
fdivrp
repz
sbb
lret
mov
xlat
imul
add
sub
aad
inc
lahf
cmc
push
ret
rcll
popf
daa
lret
cmp
cltd
outsl
or
lret
inc
mov
jmp
out
lods
es
lret
pop
xchg
jl
xbegin
inc
inc
into
mov
fcoml
les
les
cmc
push
dec
adc
cltd
mov
inc
nop
pop
mov
mov
pop
js
push
mov
xchg
fnstsw
add
outsb
xchg
std
push
push
mov
push
sbb
lcall
or
pop
pop
inc
iret
jb
lods
jg
sub
mov
fldl
cmpsl
mov
jmp
and
iret
xorb
mov
popf
fisubl
push
jo
pushf
inc
and
call
and
jmp
dec
fistl
mov
pop
lods
pop
pop
sti
mov
fidivrs
add
sbb
inc
imul
test
shrl
stos
cli
and
mov
add
idivl
dec
inc
mov
cmpsb
xchg
pop
aam
in
cmp
mov
sbb
jae
jl
adc
xor
push
or
xchg
mov
cmp
adcl
or
mov
call
sbb
pop
fwait
ret
mov
aam
test
ljmp
repnz
mov
or
push
cmp
testl
mov
stos
call
or
aas
addr16
xchg
jge
les
data16
imul
mov
and
cmpsl
mov
mov
int3
add
mov
test
push
outsb
push
mov
dec
adc
pop
push
in
shll
cmp
stos
dec
stos
imul
fdivs
adc
mov
add
inc
lods
rcll
rcrb
push
lret
or
decb
ljmp
lods
push
mov
mov
stos
adc
push
aaa
test
adc
and
dec
stc
sarb
add
pop
sarl
cmpl
xchg
stos
inc
or
push
push
dec
in
and
dec
mov
je
inc
cld
data16
fwait
mov
sbb
adc
sarl
mov
adc
pushl
cmc
mov
xchg
testl
arpl
push
cmpsl
inc
aad
std
cmc
je
xor
add
or
xchg
daa
dec
pop
ret
push
imul
and
mov
mov
ds
xor
test
dec
cmpsl
or
xchg
pop
lcall
adc
popf
add
hlt
imul
or
es
es
in
xor
arpl
dec
sbb
cmp
cmp
mov
dec
test
jge
adc
push
mov
jne
ret
mov
test
or
push
pop
test
pop
inc
jecxz
jae
movsl
and
ds
sbb
dec
add
gs
mov
es
pop
bound
pusha
xor
pop
shrb
sub
fldenv
mov
sub
cmp
jmp
int3
dec
and
sub
sub
stos
hlt
xor
inc
daa
icebp
push
sbb
pop
leave
ret
push
rolb
hlt
and
test
mov
mov
dec
gs
test
xor
mov
pop
aas
call
and
loope
rorb
sbb
dec
lods
pop
int3
jmp
rcl
out
or
rcl
in
jmp
sub
lret
push
adc
mov
sbbb
js
popa
xor
mov
jo
clc
cmp
push
dec
ror
sbb
rolb
ret
push
adc
jne
mov
add
loopne
outsl
js
jb
clc
and
xchg
pop
pop
or
out
popa
cmp
adcl
rcll
mov
shll
das
mov
repz
movsl
pusha
sub
cmp
inc
aad
push
jno
push
ret
sbb
add
lds
mov
push
addr16
mov
jmp
ret
mov
icebp
dec
jbe
imul
push
mov
mov
loop
ret
imul
cmp
data16
add
ds
sub
adc
ret
push
and
sbb
lock
jge
push
add
aas
aad
and
and
push
add
push
sub
repnz
xchg
jo
repnz
daa
lods
dec
loope
leave
dec
lods
nop
xchg
inc
sbb
push
pushl
adc
js
lock
mov
cmpsb
dec
sub
movsl
lcall
xchg
loop
push
jle
out
xor
pop
adc
outsb
mov
xchg
pop
mov
xlat
mov
adc
add
sub
xchg
adc
into
out
push
inc
or
aam
cld
outsb
xor
popf
adc
and
mov
or
sbb
test
mov
scas
dec
fdivs
jl
mov
sub
pop
stos
into
testb
daa
mov
mov
cmp
cmp
lea
jl
fmull
aam
mov
out
sbb
lea
adc
sbb
ret
jle,pt
cmpsb
cmp
mov
pop
popf
ss
push
pop
bound
out
push
pop
mov
mov
jmp
pop
mov
pop
ljmp
les
inc
pop
xor
push
mov
lahf
mov
adc
sub
iret
loopne
jne
insb
xchg
gs
pop
jb
push
and
ret
movsl
inc
orb
mov
imul
lds
xchg
push
ret
dec
outsl
sbb
mov
add
xchg
cltd
dec
stos
gs
push
ss
cltd
mov
popf
mov
xchg
lahf
cmp
je
cwtl
dec
dec
jb
xor
or
pop
fadds
pop
push
mov
fidivs
in
dec
sbb
sub
push
add
aaa
in
sbb
inc
xchg
add
out
shrl
fistpl
cmp
and
xchg
gs
xchg
push
aam
fwait
pop
jns
add
pop
jge
pusha
lods
inc
icebp
les
jl
push
lret
mov
mov
sbb
cmc
dec
sub
jne
call
xor
nop
stos
jae
jmp
add
mov
sbb
push
jbe
leave
jp
or
scas
iret
dec
mov
sbb
bnd
inc
sbb
mov
inc
push
mov
out
xlat
bound
insl
and
rcl
fwait
fs
into
pushf
mov
push
aam
popf
ret
mov
imull
testb
push
mov
sbb
mov
mov
aad
mov
inc
mov
add
inc
hlt
mov
in
or
push
adc
imul
cli
movsb
aam
push
pop
testb
push
ds
inc
and
sbb
cmp
xorl
xor
fwait
aad
jle
dec
or
push
in
jbe
gs
je
stos
std
push
js
shlb
jmp
push
jae
sbb
test
cwtl
idivl
mov
test
inc
pop
dec
or
mov
lret
cld
jb
sbb
add
xor
mov
xor
add
repz
pop
mov
scas
leave
sarb
xor
fdivrl
fcmovb
loop
in
add
lock
mov
xor
and
mov
and
jmp
sbb
in
mov
lcall
pop
repz
jne
cmpsl
or
xchg
push
out
gs
push
xlat
sub
insb
cmpsl
movsb
addl
jg
mov
push
mov
sbb
movsb
aad
jl
aad
sahf
mov
sub
mov
push
mov
pop
mov
mov
xchg
mov
into
sbb
dec
cmpsb
dec
add
nop
dec
sti
movsl
mov
sub
ja
scas
jp
mov
popa
mov
xchg
aad
lods
test
lcall
lea
adc
lods
cltd
pushf
fists
xchg
jg
cmp
test
clc
testb
int
aad
cwtl
mov
pop
sub
fidivrs
push
lock
xor
adc
push
dec
mov
xor
push
leave
xor
jle
pushf
xor
mov
ds
fimull
pusha
out
cmp
testb
out
cmp
aaa
test
fldl
repz
sub
ret
cmp
mov
loop
sub
jnp
imul
in
xor
sbb
jae
rol
in
and
out
dec
xlat
push
test
and
popa
cli
fildl
repnz
arpl
push
add
dec
add
sarb
xor
xchg
xchg
sbb
push
add
orb
jae
push
jno
clc
add
lcall
ja
faddl
mov
fdivs
mov
mov
lret
cmpsb
and
and
outsl
push
dec
cltd
mov
pushf
sub
cwtl
xchg
daa
sub
daa
push
sbb
sbb
aam
cld
loopne
out
or
aaa
cltd
cmp
mov
mov
fwait
test
out
xchg
xorl
cli
movsl
cmp
notb
mov
pop
jno
jg
add
subl
add
repnz
fisttpll
or
jno
or
out
imul
pop
cmp
sub
out
es
mov
xor
outsl
push
pop
sbb
mov
sbb
js
jno
or
aad
es
pushf
inc
bound
lods
sbb
cwtl
ficomps
ret
push
lret
leave
test
push
lods
xor
push
loope
cli
outsb
and
mov
mov
dec
mov
and
int3
movsl
add
or
imul
mov
or
mov
les
add
add
xor
test
lret
pop
mov
push
fst
xchg
fdivs
xor
xchg
stc
ljmp
adc
xlat
mov
adc
pop
sub
jp
inc
sbb
loop
lcall
and
outsl
cmp
ds
adc
jnp
les
sub
bound
pushf
adc
mov
fwait
cmp
cmpsl
xchg
ret
xor
lock
mov
add
dec
xor
test
xor
sbb
stos
xor
bound
or
ret
cld
mov
jno
fs
sub
inc
fdivs
in
lret
or
andb
push
pop
lret
sbb
and
xchg
mov
out
fstpt
mov
jnp
outsl
inc
add
imul
aaa
icebp
stc
adc
icebp
sarl
mov
mov
outsb
fisttpll
leave
lds
push
lret
lock
jge
push
sub
jmp
inc
jg
sbbb
ficoml
ljmp
xchg
nop
enter
aad
jl
cmp
mov
or
xor
jo
fcoms
mov
jb
mov
nop
mov
dec
jno
lret
inc
aad
fcoml
push
aad
into
je
adc
adc
mov
jle
dec
adc
or
xchg
dec
push
pop
pop
push
adc
int
enter
adc
xchg
js
ja
pop
jmp
adcl
xchg
push
push
jnp
sbbl
jnp
test
popa
add
fisubrl
jnp
pushf
jne
scas
mov
test
adc
jae
mov
lods
ficompl
pushl
add
flds
cmpsl
std
andl
sarl
sbb
into
je
pop
push
test
sub
pop
aas
adc
repz
lock
test
push
shlb
dec
mov
leave
es
push
jnp
mov
mov
popa
mov
cld
push
or
dec
out
lret
fimuls
into
jp
xor
loope
sbb
sbb
jl
lret
js
outsb
imul
enter
jno
xor
pop
fmull
test
sbb
mov
int3
mov
push
repz
cmp
dec
pop
xlat
pop
ljmp
inc
xor
std
mov
mov
or
jecxz
adc
cmpsb
test
cs
push
iret
and
jae
sub
dec
mov
rcrl
adc
ret
sbb
outsb
nop
repz
inc
outsb
push
dec
in
adc
stos
inc
out
pop
push
mov
sti
fdivp
dec
out
pop
jbe
add
sarl
adc
fdivr
int
sub
inc
ret
jle
hlt
pop
add
add
aad
imul
ss
lods
aad
xchg
dec
cltd
xorb
fwait
mov
stc
xlat
and
dec
stc
iret
mov
push
fmull
jle
xchg
inc
bound
cmp
sub
fidivrs
lods
lods
loope
push
sti
setnp
adcl
and
adc
inc
sbb
push
push
cwtl
or
sub
or
sti
add
aam
add
stos
xor
int3
cmp
sbb
je
jge
fiadds
or
jns
jge
daa
aad
xchg
aad
int3
jns
test
aam
movsb
jle
jne
cmp
jb
mov
loope
call
out
inc
aam
jne
outsl
pop
testl
aad
out
jnp
and
mov
popf
cs
pop
test
xor
jns
sub
xchg
jnp
dec
dec
ljmp
scas
or
jns
jecxz
leave
sbb
dec
imul
call
iret
test
pop
ret
push
aam
dec
dec
adc
pop
cmp
mov
pop
outsb
jg
add
xor
std
jno
sbb
xchg
fidivrs
mov
sbb
mov
sbb
mov
mov
mov
shl
jle
pop
dec
mov
in
sar
aam
push
dec
inc
ljmp
insl
push
xor
add
and
mov
sar
enter
or
add
dec
js
outsl
rorl
xlat
pop
fisttpll
insb
add
aaa
lock
or
cmp
lcall
int3
ret
sti
mov
sub
jae
outsb
cmpsb
sub
fs
jno
adc
enter
jmp
and
out
daa
lds
cmpsb
shl
mov
sub
fsubrs
push
loopne
and
mov
inc
jg
sub
pop
mov
dec
es
mov
std
push
pop
or
test
dec
sbb
flds
scas
mov
cmp
jecxz
addl
scas
cmpsb
and
push
xchg
cmpsb
mov
rdpmc
fisubl
mov
sub
pop
fidivl
adc
orl
loop
lret
fildll
mov
push
adc
jmp
jge
movsl
and
inc
sub
lret
cmp
push
add
aas
pop
sti
xor
out
mov
cmc
sbb
jno
loopne
dec
push
jmp
dec
cmpsb
inc
sub
shrb
inc
cli
xor
dec
lcall
adc
out
hlt
mov
enter
inc
or
sbb
imul
hlt
int3
jp
or
pop
in
adc
movsl
rol
cli
lahf
les
pushf
pop
stos
or
icebp
frstor
cmp
lahf
movsl
mov
fwait
nop
ljmp
int3
stos
out
pop
dec
mov
jmp
inc
inc
mov
gs
mov
sub
frstor
jl
or
cli
xor
mov
ret
jno
dec
fldenv
xor
sub
iret
lcall
popa
lea
cmpsb
neg
into
ds
lret
and
shl
inc
and
mov
out
imul
jnp
xor
pop
mov
mov
popf
scas
xor
std
mov
mov
jl
hlt
inc
fiadds
push
jne
inc
pop
or
pop
rcll
bound
dec
pop
mov
or
fmul
pop
inc
jae
cmp
xor
sarl
cli
jge
lcall
movsl
jne
and
out
arpl
xchg
loopne
stos
mov
shll
inc
mov
mov
adc
movsb
mov
jle
sub
sbb
call
and
call
adc
ds
push
addr16
and
and
add
jecxz
add
add
mov
cmp
jl
fiadds
enter
notb
inc
jo
stos
sahf
push
je
and
negb
jb
stos
xor
mov
pop
ficoml
push
insb
fisubs
lock
mov
inc
jbe
push
xlat
inc
mov
xor
and
xchg
shl
jnp
addb
sbb
out
loop
mov
mov
adc
and
and
push
add
scas
jp
mov
lahf
xor
mov
mov
jno
mov
shll
or
fs
push
mov
outsl
addr16
lcall
dec
ret
aaa
enter
or
cltd
adc
jmp
pop
jp,pn
and
sub
stc
mov
mov
sbb
aaa
notl
loop
jns
dec
sbb
fwait
movsl
gs
aas
aaa
testb
cmp
jecxz
data16
and
push
incl
pop
mov
mov
jp
notb
xor
mov
mov
enter
clc
push
adc
daa
imul
clc
xchg
push
mov
pop
dec
sub
sti
sub
out
in
push
and
pop
jl,pt
int3
cmp
push
xchg
push
xor
jp
ret
inc
lea
cmp
pop
aaa
mov
mov
icebp
in
ds
jp
call
push
outsl
pop
mov
adc
scas
push
stos
lds
cmp
imul
testb
cs
adc
fidivrs
xlat
nopl
aaa
and
mov
mov
sub
cld
cmpsb
push
jne
push
jnp
jl
sbb
xchg
mov
dec
mov
mov
cmpb
push
rep
enter
movsb
inc
add
jmp
in
test
mov
jnp
adc
repz
roll
lahf
add
test
dec
jae
xchg
mov
cmp
mov
imul
mov
dec
dec
outsl
sbb
mov
andb
pusha
mov
or
mov
add
mov
mov
mov
xchg
adc
hlt
cmp
les
add
pop
xor
and
push
insl
mov
inc
stc
in
cmp
lret
mov
inc
pop
arpl
sub
js
movsb
stc
push
push
mov
sti
cwtl
ss
int
scas
cmp
or
nop
mov
js
inc
in
xchg
cmp
adc
test
xchg
int
pop
xor
add
push
mov
std
daa
icebp
loop
sbb
insb
cmp
jecxz
adc
mov
cwtl
lea
mov
add
xchg
les
outsl
std
jecxz
pop
idivb
push
leave
out
and
cmpsl
mov
dec
cmp
jbe
xchg
fiaddl
outsb
add
push
int3
inc
cs
cmp
sbb
jp
lds
mov
int
xchg
or
and
jbe
in
xchg
sub
and
fdivrl
xchg
jl
roll
xlat
es
insb
inc
mov
dec
xor
loopne
and
dec
dec
or
js
jmp
arpl
daa
mov
leave
adc
mov
inc
inc
jl
sub
inc
lahf
cmc
and
mov
mov
lcall
sarb
ja
inc
lds
xchg
dec
sub
adc
ss
and
xor
sar
icebp
xlat
inc
movsl
shl
sub
cmp
scas
pop
mov
testl
divb
test
mov
and
mov
into
lret
inc
mov
push
lret
dec
outsl
add
sti
xor
mov
out
jg
mov
and
inc
push
and
mov
stos
in
mov
fidivl
jle
dec
xchg
push
adc
jae
nop
mov
dec
mov
pop
ret
xor
dec
dec
adc
push
dec
adc
out
dec
cmp
ficoml
in
nop
mov
xchg
sub
icebp
adc
imul
aas
sub
xchg
inc
and
add
popf
xor
pusha
jno
mov
mov
jecxz
push
sahf
adc
jle
dec
and
dec
mov
mov
and
mov
pop
test
xchg
or
mov
mov
dec
aad
mov
and
inc
outsl
pop
and
pop
out
stos
loop
or
xor
out
adc
leave
cltd
push
push
vcvtsd2ss
pop
sub
fstp
add
in
sti
cld
je
pop
out
mov
ficoms
fistps
cmc
add
jl
out
aam
jo
dec
dec
fnsave
sti
cs
popa
cmp
cmp
inc
jecxz
cld
cmp
into
add
fdivrl
adc
mov
push
loop
int
adc
daa
add
cwtl
test
sbb
push
out
int
lcall
jl
mov
jle
push
cld
mov
jno
push
adc
add
add
repnz
dec
lods
fidivl
lock
and
jbe
push
jge
add
inc
loopne
pop
cmpsl
lods
sub
in
enter
test
ja
subl
sub
jp
loop
pop
mov
addr16
or
pop
les
les
push
enter
inc
ret
aas
mov
leave
sbb
sbb
push
pushf
iret
rcrl
push
cltd
movsl
pop
xor
mov
lds
sub
pop
shlb
jge
loopne
jb
sub
lock
sbb
popf
and
lods
je
sbb
data16
push
loope
push
xchg
dec
sbb
test
repz
dec
sbb
sub
out
mov
cli
xchg
cmp
adc
gs
bound
sti
inc
bound
xlat
js
jns
pusha
jnp
cmp
leave
fsub
std
jo
nop
vmaskmovdqu
shl
xor
adc
out
fs
add
outsl
popa
push
mov
sbb
pop
mov
packuswb
push
lahf
es
or
xor
cmp
jle
pop
mov
inc
in
inc
faddl
ret
mov
push
dec
fstl
icebp
sbb
fistpll
mov
fwait
lcall
subb
test
cmp
mov
les
mov
hlt
clc
pusha
repz
fcomps
mov
ja
xor
sub
int3
jno
push
rol
loopne
pushf
dec
test
mov
add
mov
cmc
sbb
sub
popl
xor
fnstsw
xor
sbb
xchg
sbb
and
test
setle
sub
loope
adc
ds
mov
ja
fistps
inc
push
faddl
lret
adc
and
shlb
jg
pushf
xchg
movl
lods
mov
fistl
push
testl
insl
jp
out
jg
mov
and
shlb
loope
jmp
sbb
jne
and
mov
xor
mov
lods
jmp
jmp
sub
stos
dec
popa
inc
dec
sbb
das
dec
xor
or
fldcw
add
add
ret
andl
cmp
jge
mov
sub
into
jge
bound
loop
cmp
hlt
imul
movsb
pop
xor
mov
fcomps
jb
mov
jns
or
in
ljmp
xor
loope
inc
inc
aas
sbb
fcmovnu
push
mov
jg
pusha
pop
mov
dec
in
xchg
out
sbb
dec
vandpd
mov
mov
data16
jle
dec
push
fwait
dec
fsubrs
dec
pop
and
sub
in
push
jg
icebp
jbe
mov
mov
inc
jg
rclb
mov
jae
jl
aaa
int
add
push
jne
ljmp
and
add
adc
clc
jmp
aas
or
xchg
nop
cld
sbb
mov
stc
rorb
mov
dec
orps
lods
in
inc
mov
jb
mov
loopne
jb
push
dec
jmp
and
fadd
enter
div
mov
inc
loope
pop
addl
mov
inc
xor
jp
pusha
sub
in
leave
adc
dec
push
nop
sub
adc
loopne
popa
mov
add
pop
or
nop
ds
insb
pusha
cmp
xor
and
sub
cmc
roll
nop
aam
mov
iret
pop
mov
cmp
in
and
je
cmp
xchg
das
xor
shlb
dec
rclb
mov
sub
cs
rcll
test
fiaddl
jno
sbb
dec
hlt
dec
and
insl
cwtl
cld
jo
mov
adc
leave
and
lock
jle
lret
stos
push
lock
and
lock
int
fdivs
iret
cli
movsl
test
jns
mov
pop
into
or
js
dec
in
add
dec
or
out
mov
lds
lret
push
out
xor
mov
in
jnp
lock
dec
ficompl
cmp
jo
inc
push
dec
add
inc
lcall
sub
add
pop
mov
or
jmp
and
sub
in
stos
fidivl
mov
and
ret
shl
fucomp
inc
movsl
mov
mov
cmp
add
dec
loop
push
sub
cmpsl
push
sahf
ror
sub
adc
mov
outsl
idiv
stos
cltd
mov
ret
jo
aaa
test
and
mov
lcall
cmp
pop
scas
mov
cmp
inc
adc
adc
loope
mov
outsl
out
pusha
nop
xor
jecxz
pop
fisttps
not
stc
call
lods
mov
inc
fistpl
les
rolb
daa
lahf
mov
cmpsl
addr16
sbb
vpshab
es
mov
in
aam
test
hlt
jb
icebp
test
adc
in
fidivrl
dec
popa
push
shl
xchg
jecxz
pop
js
into
cmp
inc
mov
cmp
sub
xor
pushl
mov
enter
neg
sub
mov
lea
outsl
cmc
lds
jns
mov
adc
mov
mov
cmpsb
sbb
jne
shr
xchg
aad
int
sub
add
mov
cmp
lea
xchg
dec
sub
insl
das
cmpsb
mov
pusha
cmp
mov
mov
arpl
add
pop
push
hlt
fdecstp
cmp
and
movsb
test
push
insl
mov
loop
and
dec
ja
nop
xor
aad
xchg
rsqrtps
adc
lods
mov
push
lahf
adc
ret
xor
leave
xor
out
inc
cwtl
std
xlat
paddsb
hlt
mov
add
mov
movsb
sti
dec
dec
mov
sahf
mov
jns
push
dec
shll
xchg
cmpsl
sti
movsl
pusha
add
push
inc
das
pop
jbe
pop
and
cmp
imul
cltd
es
adc
daa
jl
lret
pop
cmp
sub
out
sahf
add
test
aad
in
dec
dec
ja
jb
add
cwtl
frstor
mov
xchg
ficomps
ds
popf
rolb
movsl
sbb
jns
lds
rol
test
mov
jnp
xlat
cmpsl
repnz
or
test
imul
or
push
xchg
sarl
or
je
xor
repnz
repnz
arpl
fcoms
in
xor
fldenv
mov
inc
mov
popa
sbb
stos
mov
lods
mov
cmp
cltd
rol
mov
jb
idiv
ss
ss
and
xor
add
sbb
inc
mov
push
js
dec
notl
adc
adc
jns
jne
and
int3
in
outsl
int3
in
and
xor
mov
xlat
rcrl
loopne
scas
xlat
mov
daa
hlt
fnsave
xor
inc
pop
rcrl
lahf
push
mov
flds
test
jecxz
lcall
imul
roll
insl
popf
push
mov
mov
aad
dec
xor
cmpsl
out
mov
mov
mov
cmp
mov
xchg
sti
gs
fldenv
hlt
or
cmpsb
mov
roll
aas
das
mov
icebp
push
mov
je
inc
sbb
dec
xor
dec
lea
sbb
daa
sub
inc
int3
jo
cld
fildll
test
and
push
pop
cld
lock
push
fs
into
cld
push
pop
sbb
movsb
or
push
cld
push
add
and
xor
fs
mov
or
xchg
std
in
inc
jne
pop
stos
scas
mov
pop
and
ret
mul
das
push
sbb
cs
push
sub
iret
fcmovb
mov
jmp
adc
inc
imul
mov
mov
mov
cli
js
cs
or
js
lock
jo
insb
cmp
je
push
rcrl
mov
js
or
inc
nop
cmc
lock
dec
loopne
inc
test
inc
cld
arpl
and
cmpsb
inc
fs
xchg
cmp
jle
aam
pop
or
fidivrl
or
sub
push
mov
jmp
push
movsb
repz
int3
mov
je
push
push
dec
inc
std
dec
pop
js
into
pop
cs
mov
jo
add
pop
jne
cld
adc
dec
jae
lret
or
adc
jecxz
loop
cltd
mov
loopne
cld
orb
icebp
pop
inc
adc
add
mov
dec
rcll
inc
test
mov
xor
push
lods
sub
scas
fdivrl
aam
dec
dec
jnp
push
jae
loop
call
sub
insl
lahf
jnp
lret
pop
mov
mov
mov
loopne
push
stc
jmp
fidivrl
sbbb
nop
mov
fwait
mov
inc
rclb
mov
xchg
inc
and
loope
lods
cs
dec
cmpsl
dec
inc
vpinsrw
in
loop
jbe
and
aam
mov
cli
fadds
adc
fisttps
call
repnz
dec
sahf
pop
pop
ljmp
jl
push
mov
mov
and
xchg
or
sbb
sub
jg,pn
mov
or
out
xor
sub
rorl
js
popa
jb
mov
push
cmp
aad
push
add
and
lea
cld
adc
mov
add
cmp
ds
pop
push
mov
aam
sbb
mov
imul
push
pop
or
push
movsl
call
enter
enter
cmc
stc
inc
dec
leave
dec
inc
and
pop
jmp
xchg
popa
sub
pop
cs
ret
test
xchg
xchg
movsl
scas
subb
sbb
test
mov
popl
test
sbb
xchg
dec
sub
and
lods
pop
inc
push
mov
and
inc
outsl
dec
lahf
ficoms
sbb
rcrb
mov
pop
inc
xor
adc
inc
and
fldenv
mov
ljmp
cmp
push
scas
dec
push
mov
divl
ds
lret
in
clc
jmp
push
cmpsb
shlb
das
dec
loope
and
dec
punpcklwd
out
out
mov
push
xchg
mov
cmpsl
sbb
lcall
mov
pop
push
gs
pop
cld
in
dec
mov
sbb
cmp
cmc
ljmp
xchg
mov
xor
rcll
jle
call
jnp
std
pop
repz
ret
pop
dec
clc
cli
adc
push
mov
mov
mov
popa
les
fcmovnu
orb
cmp
adc
shll
xor
xchg
jns
cmp
incb
dec
sub
or
xlat
push
inc
sbb
jne
push
mov
inc
outsl
es
mov
fidivrl
mov
jno
aam
dec
ljmp
mov
sub
mov
cmp
lea
andb
mov
inc
xchg
ja
pop
test
scas
subb
outsl
and
or
loope
sar
pop
cwtl
nop
ret
test
xor
out
xchg
test
mov
push
xor
add
jbe
inc
in
sbb
popa
dec
mov
dec
stos
mov
sbb
test
fstpl
push
ja
adc
inc
sarl
ja
pop
xor
leave
xchg
xchg
ret
cmp
cmc
js
mov
shrb
xchg
cs
mov
fisttpll
cmpsl
scas
sbb
jle
jnp
mulb
pop
jnp
xor
push
mov
inc
jmp
rcrl
paddq
out
idivl
sub
arpl
xor
fld
xchg
stos
push
inc
clc
cli
cmc
sbb
jne
rorb
outsl
adc
call
or
minps
cmpsl
and
add
or
movl
popa
ljmp
or
xor
add
clc
or
pop
cmp
add
mov
adc
xchg
aas
or
cmp
loopne
int
cli
pop
push
test
inc
inc
mov
loope
pop
lods
in
movhps
aad
pop
mov
mov
or
dec
sub
stos
pop
sub
mov
lahf
and
pusha
fists
pop
lods
cmpsb
jmp
pop
int3
stos
int
add
xlat
loopne
ret
mov
add
dec
movsb
addr16
adc
out
dec
push
pop
loop
inc
aaa
mov
rorl
adc
adc
popl
orb
xorl
cmc
or
pushf
xor
jb
pop
fwait
cwtl
aaa
in
cmp
push
aam
mov
dec
lret
or
imul
aam
fstpl
sub
imul
xchg
or
insl
mov
jbe
inc
addr16
into
ret
test
push
adc
icebp
cmp
xor
orl
cmp
lcall
lea
out
mov
lods
inc
out
loope
rol
sbb
mov
into
jo
popa
sub
cmp
xor
jbe
push
pushf
sbb
pop
xor
xchg
imulb
mov
add
shlb
out
jmp
xor
sbb
in
icebp
cmpsb
jle
pop
sbb
mov
mov
push
push
sbb
aas
fldl
aad
gs
pop
inc
inc
adc
mov
pusha
fmull
xchg
push
sbb
pop
and
push
addr16
inc
enter
sub
mov
inc
sub
cmp
mov
fs
cld
mov
sbb
sub
decw
push
xor
pop
xlat
mov
push
ficompl
into
mov
das
ja
xchg
sbb
pop
sbb
nop
lds
js
loop
test
xor
add
xor
mov
inc
pop
movsl
mov
cld
call
repz
pop
mov
xor
xorb
sbb
jnp
out
stos
sti
xchg
sub
xor
lcall
ficoms
ja
jno
mov
mov
rcrb
stos
push
jge
andl
lods
pop
xchg
call
pusha
test
xchg
jge
inc
les
xchg
pop
cmp
mov
pop
push
dec
push
outsl
add
loope
leave
ret
mov
cmp
adc
fcmovb
es
popf
popa
cli
dec
jno
push
mov
aam
sub
push
iret
xchg
cs
mov
xchg
repnz
pop
fstpl
pusha
cltd
fcmovb
sub
mov
pop
call
cmpsb
gs
push
pop
dec
mov
insb
fdivrl
mov
das
scas
scas
mov
add
inc
inc
xchg
es
sbb
xor
repz
adc
pop
mov
cwtl
scas
aaa
sbb
sub
bound
xchg
xor
mov
fsubrs
sbb
add
arpl
test
fcomip
or
mov
sub
push
xchg
jae
push
jge
repz
xchg
lods
out
push
out
and
inc
pop
jo
lret
sub
jns
jno
insb
subl
scas
js
and
add
mov
hlt
movsl
imul
sahf
leave
out
and
mov
pusha
aam
imul
or
bound
pop
mov
and
mov
bound
subl
shl
pop
lea
cmpsb
aaa
and
fwait
sbb
arpl
fs
loope
lcall
clc
mov
addr16
jge
and
fildl
int
sbbb
mov
inc
sbb
xor
pop
mov
rorl
jnp
dec
repnz
ljmp
andb
ss
sbb
jno
and
lods
das
aad
repz
mov
or
mov
push
gs
clc
cmpsl
mov
sbb
mov
cvtps2pd
pop
lahf
shll
fdiv
sub
push
adc
repz
and
lret
pushf
aad
xchg
xor
xor
pop
xchg
clc
shll
cs
or
sbb
nop
inc
stos
insb
inc
bound
push
rcll
test
inc
add
cmp
lods
mov
inc
roll
mov
and
or
stc
test
imul
pop
add
test
js
sub
mov
lds
loopne
out
inc
mov
sahf
mov
lahf
stc
jecxz
dec
jmp
dec
leave
sub
daa
addl
cmc
mov
lods
lods
mov
mov
test
pushf
in
je
cmpsb
push
mov
lods
outsl
ret
fadd
lret
xchg
leave
pop
push
in
les
pop
outsl
loope
jle
lock
loopne
pop
sbb
and
out
and
inc
adc
xchg
dec
inc
cmp
dec
subw
mov
or
in
jle
sub
mov
lock
orb
ja
in
xchg
jge
aas
fnstsw
mov
pop
push
dec
scas
rorb
cli
push
mov
arpl
inc
add
mov
push
imull
mov
push
rcrl
jnp
std
mov
ret
mov
sti
hlt
sub
lret
iret
xchg
add
push
cmp
pop
std
adc
mov
insl
add
mov
scas
add
rol
or
sbb
lret
inc
movsb
xchg
test
push
sub
loop
xor
xchg
pop
push
aaa
mov
outsl
inc
into
repnz
xchg
movsl
add
jle
mov
sbb
sbb
cltd
jecxz
sub
mov
mov
movsl
bound
cmc
mov
test
in
cld
push
sub
fdivrs
lahf
loop
imul
popa
dec
enter
pop
mov
and
adc
push
repz
cs
push
inc
popf
sub
ret
imull
dec
pop
lcall
xor
addr16
dec
fcomp
mov
popf
addr16
xchg
sub
lea
data16
dec
inc
inc
jno
sarl
sbb
add
add
popf
and
sub
inc
sbb
xor
mov
mov
out
ror
sbb
int
xchg
adc
pop
pusha
push
imul
movsb
stos
sbb
jo
jp
dec
scas
fmuls
scas
inc
ja
mov
popf
mov
add
movsl
xchg
mov
jbe
sub
icebp
push
mov
mov
rcr
fistpl
into
iret
cmpsb
inc
jb
jle
fcomps
scas
add
hlt
adc
sbb
cmc
gs
out
lcall
dec
inc
cmc
cli
cmp
pop
adc
cld
test
fisttpl
lods
inc
or
fwait
enter
lock
cmp
fcmovne
cmp
shlb
mov
fcompl
js
push
cs
jge
pop
xchg
xchg
dec
adc
je,pn
inc
jle
push
or
mov
orl
sahf
mov
lock
ja
insl
mov
mov
or
leave
fcoml
cmp
sub
mov
rcrl
popl
mov
dec
es
mov
sti
inc
arpl
or
repz
sbb
fiaddl
dec
sub
mov
dec
dec
push
inc
sahf
enter
push
adcb
add
fwait
pusha
test
adc
mov
les
daa
in
add
js
lret
xchg
shrb
test
popf
les
or
pop
xlat
clc
jecxz
cmp
mov
cmc
fcmove
in
push
repnz
xor
mov
mov
jns
aas
enter
orb
and
pop
push
mov
enter
daa
test
movsl
pop
mov
mov
pop
push
or
and
movsl
mov
je
jne
jae
mov
repz
pusha
mov
cmpsl
cmpsl
test
lret
xchg
in
loope
sahf
lea
sub
pop
stos
add
lahf
in
add
sbb
mov
fnsave
jno
inc
cmp
addr16
ljmp
push
out
aaa
dec
mov
xchg
loopne
xor
mov
sub
inc
mov
mov
inc
and
inc
mov
rolb
lret
lret
loope
xchg
pusha
mov
adc
cwtl
and
addb
adc
and
jl
loopne
lock
and
aas
movsb
enter
jle
call
aam
scas
pushf
inc
pop
inc
xchg
movsb
arpl
movsl
mov
mov
call
mov
sbb
inc
loope
ret
aad
loope
test
call
push
adc
dec
cld
add
aad
sbb
icebp
mov
mov
add
int
fldt
pushw
ficoms
adc
jno
mov
push
movsb
out
jno
fiaddl
mov
loop
loope
insl
hlt
bound
cmp
hlt
adc
xor
rcrl
xchg
test
mov
push
loopne
ret
mov
fwait
mov
ss
cli
mov
ficomps
arpl
or
add
pop
enter
push
jns
pop
lods
push
mov
mov
and
lock
mov
neg
daa
xchg
xor
push
adc
shll
js
sub
mov
mov
sub
jle
lret
push
fcoms
ljmp
or
dec
cmp
les
fadds
into
lea
add
xchg
cmp
int
mov
pop
jge
xchg
adc
ret
in
test
int3
andl
dec
rcr
mov
pop
fwait
push
mov
lea
push
cmp
pusha
mov
test
lods
xor
xor
cmpsb
mov
jmp
fldt
xchg
imul
pop
push
outsb
sbb
ljmp
pop
pushf
insb
mov
pop
lret
or
aam
arpl
test
mov
cmpsl
and
imul
mov
pushf
enter
dec
lcall
mov
shrb
mov
loope
mov
mov
nop
ret
outsl
and
push
daa
call
call
mov
out
adc
dec
xor
js
js
mov
fbld
fadds
push
cmp
daa
rol
add
arpl
cmpsb
repz
mov
dec
mov
sub
lret
mov
fmull
fs
inc
add
mov
cmp
fidivrs
mov
inc
sbb
sub
gs
das
jle
out
jp
jmp
mov
loopne
jecxz
lcall
xor
adc
sub
and
pop
shll
filds
pushf
aas
es
notl
cvtdq2ps
adc
lahf
dec
dec
xchg
lret
xchg
jle
ja
out
enter
fsubrs
addl
and
xor
cmpsb
inc
adc
sti
add
movsb
iret
int
mov
cmp
mov
adc
lret
mov
inc
mov
in
test
cli
and
mov
mov
and
xor
ja
int3
cwtl
sarl
sbb
adcl
test
scas
stc
mov
sub
in
lcall
icebp
hlt
lret
adc
and
and
aas
ret
stc
push
jb
pusha
sub
rcll
lret
sub
adc
add
mov
xchg
stos
mov
mov
cmp
faddl
xchg
in
sub
jl
repnz
mov
sbb
pop
mov
ss
mov
jle
popf
push
inc
fisttps
loopne
cmp
adc
pop
insb
cmpsb
fmull
and
add
lret
and
dec
mov
pushf
dec
jge
or
outsb
hlt
rorb
out
out
push
or
mov
push
push
fcomps
or
mov
adc
xchg
cwtl
test
sahf
out
sbb
push
imul
dec
pop
pop
jb
push
addr16
jmp
push
jnp
mov
sub
adc
lcall
inc
aas
and
adc
andb
mov
cmp
jbe
cmp
mov
jecxz
xchg
lcall
jl
sti
je
add
mov
insb
jne
push
fisttps
lods
lret
stos
stos
lahf
insl
jne
sub
movsl
iret
mov
lret
loop
test
and
cmp
maskmovq
testl
mov
sub
push
jo
mov
dec
sub
popa
or
ds
dec
mov
in
fs
lock
dec
mov
out
cmc
dec
pop
stos
push
lret
mov
mov
mov
fistps
int
je
repz
mov
pop
test
push
pop
mov
std
hlt
bound
stos
jbe
shl
sub
test
decl
jo
fldt
cmpsl
xlat
repnz
mov
add
es
cmpsl
sub
xchg
ja
mov
lock
push
adc
or
mov
ret
loop
jbe
sbb
sahf
addl
je
clc
xchg
lahf
push
nop
cmp
out
and
xor
sbb
inc
cmp
mov
jp
xor
dec
iret
imul
pop
icebp
cltd
add
push
data16
jne
sar
pop
jb
dec
xor
fsubs
subb
loope
xor
inc
and
mov
arpl
push
adc
jae
sti
xlat
ljmp
inc
pop
xchg
or
mov
jbe
mov
add
add
push
inc
mov
lods
inc
in
shrb
and
xchg
jecxz
cmp
out
sbb
xor
mov
ret
inc
cwtl
mov
mov
lods
in
jg
ss
stc
aad
mov
cmp
fidivrl
mov
inc
mov
sbb
shrb
cmp
jmp
repnz
xor
jp
jmp
push
arpl
repnz
incb
rclb
in
arpl
movsl
and
into
mov
mov
cmp
nop
shrl
sbb
xor
das
ret
cmp
or
ret
sbb
push
fcomps
aaa
jle
jl
inc
push
inc
inc
mov
mov
cmpsl
lahf
adc
les
aad
lock
and
dec
xchg
jne
push
fs
xor
pop
xor
jge
inc
dec
xor
push
movsl
das
adc
jp
subl
cmc
test
sahf
out
jmp
pop
icebp
fsubl
mov
jo
xor
mov
and
mov
aas
pop
scas
jne
push
inc
and
add
out
sub
test
loopne
pop
sarl
mov
cs
hlt
addr16
add
push
ret
data16
daa
insl
test
sub
aam
iret
aaa
loope
outsb
sbb
scas
and
jo
cmpsb
out
test
or
adc
mov
outsb
push
sbb
rep
pop
int3
das
cmpsl
ss
scas
sbb
in
out
push
scas
loopne
pusha
daa
xor
lret
cmp
cmp
inc
dec
negb
orb
jne
les
scas
push
popa
add
fcoms
call
lea
mov
jae
cmp
outsb
cmp
push
stos
cmc
xor
xchg
ss
push
shlb
jbe
and
sbb
and
push
adc
jne
iret
inc
out
iret
push
and
push
scas
cltd
ds
cmp
mov
sbb
inc
inc
fsts
iret
pushf
sarl
push
dec
mov
adc
inc
lods
cmpl
xor
xchg
xlat
jno
xlat
lods
lret
fcoms
inc
push
mov
test
aad
add
fistl
bnd
push
fdivp
arpl
ljmp
fldenv
adc
pop
add
ljmp
negb
pushf
sub
insl
xorb
aas
adc
xchg
flds
mov
mov
test
cmp
cmpl
xchg
data16
mov
adc
or
push
jb
adc
out
movsb
pushf
mull
xchg
mov
lds
pusha
and
mov
sbb
adc
fwait
cld
cltd
push
mov
ja
add
loopne
and
daa
pop
icebp
pop
adc
sbb
adc
xor
push
lock
jnp
push
dec
adc
pop
push
adc
lock
fldl
mov
clc
or
aas
adc
outsb
push
adc
enter
push
cmpsl
andb
jge
adc
shll
and
push
xlat
das
movsl
xchg
pusha
jno
mov
push
inc
push
jmp
leave
dec
xchg
lahf
dec
jnp
ja
clc
pop
add
mov
xchg
aas
fbld
imul
loopne
inc
xchg
cmpsb
sub
jg
jb
jns
lret
mov
ss
ljmp
sti
or
ja
adc
inc
fidivrs
in
sbb
xchg
push
mov
les
insl
xchg
adc
aad
or
lret
stc
and
fadds
xchg
sbb
int3
icebp
and
pop
ss
add
jo
jmp
call
and
daa
scas
es
addr16
cmp
jns
sbbb
jecxz
add
adc
cmpsl
out
cmp
dec
ss
out
jmp
xchg
cmp
or
mov
imul
mov
cmp
mov
xor
inc
dec
cmp
dec
sbb
das
adc
pop
cmpsb
stos
pop
fdiv
test
inc
lret
cmp
pusha
push
adc
in
loope
std
jno
outsb
rclb
les
cmp
mov
lahf
push
loop
jne
packsswb
inc
bound
mov
adc
inc
sub
pop
out
out
popf
stc
jae
data16
mov
mov
adc
in
add
repz
xchg
and
inc
push
xlat
cmp
lret
leave
or
mov
jb
cmp
inc
popf
or
pop
cwtl
sub
push
das
lcall
ret
clc
mov
mov
push
pushf
aad
repnz
loopne
fbld
shlb
out
mov
push
or
js
or
xchg
ficompl
mov
icebp
fldt
mov
jle
push
pop
dec
mov
loopne
sarb
adc
mov
inc
cmp
xchg
pop
stc
jmp
pop
aas
popf
xor
ljmp
ja
bound
call
sahf
and
cld
mov
jne
outsl
mov
std
hlt
sbb
call
cs
jo,pn
jns
and
insl
cmp
mov
lods
pop
mov
rcrl
pop
es
test
fucomip
cmp
in
test
jp
or
fld
mov
adc
icebp
popa
lahf
out
leave
movsb
push
dec
into
fbstp
aam
jbe
dec
xor
mov
xchg
mov
negb
scas
arpl
out
mov
insl
arpl
cmpsl
hlt
iret
add
cmpsl
sub
iret
lea
xchg
shlb
sub
cmpsb
outsl
push
cs
push
dec
orl
xorb
movb
gs
push
mov
jo
push
inc
push
cmpsb
shl
and
adc
xchg
mov
xchg
cltd
lcall
das
mov
adc
js
sbb
scas
loop
repnz
xchg
or
mov
mov
sub
jns
cltd
pop
adc
fstps
in
jae
pop
lret
adc
out
enter
push
xchg
or
sub
sti
mov
ror
cs
dec
sbb
cwtl
filds
mov
mov
sbb
and
cwtl
xor
scas
jge
mov
loopne
bound
movsb
std
int3
mov
imulb
scas
inc
add
pop
arpl
xchg
pop
dec
dec
addl
jmp
adc
sbb
cmp
adcb
mov
mov
iret
in
and
pop
enter
pop
movb
or
imul
int
adc
stc
pop
shlb
xchg
xor
dec
repnz
push
lcall
dec
xor
push
divb
insl
or
dec
or
sbb
dec
aam
ficoml
xchg
test
xchg
scas
pop
or
fwait
lods
lea
cwtl
jno
aam
pop
push
arpl
lods
cmp
mov
push
mov
jg
jmp
sbbb
out
lahf
ret
xchg
in
jecxz
inc
bound
push
xor
xor
subb
add
mov
jb
in
mov
je
popf
mov
rcrl
add
cmp
ljmp
xchg
out
pop
faddl
dec
int
sarl
inc
pop
imul
inc
test
jae
dec
ljmp
aam
xchg
icebp
div
lcall
fidivs
lea
pop
push
nop
data16
mov
jecxz
arpl
in
das
lock
enter
aad
push
xor
js
inc
in
mov
mov
out
cmp
cmp
jbe
dec
stc
ja
jnp
adc
dec
dec
cld
mov
and
pushf
xchg
pop
in
cmp
dec
out
dec
and
shr
adc
int3
fdivrl
lahf
incl
nop
mov
inc
sbb
aaa
lds
pop
idiv
rcrl
nop
ss
push
mov
sbb
je
dec
xchg
adc
inc
push
jo
ret
or
inc
divl
jecxz
mov
and
loope
lcall
call
fwait
test
stos
aas
repz
es
jecxz
or
jo
sub
add
lea
mov
int
clc
xor
mov
or
jno
pop
jb
loopne
pop
cmc
arpl
mov
jge
add
movsl
fs
test
outsb
sub
es
jns
pop
mov
xor
dec
inc
add
cmp
mov
fwait
or
test
jle
pusha
ss
ds
xchg
mov
outsb
bound
lret
jg
loopne
mov
subl
lds
xor
jo
pop
pop
loop
push
shrb
mov
xor
mov
pushf
test
pop
imul
ffreep
adc
sbb
fcoms
cmp
sbb
mov
into
icebp
stc
jmp
mov
adc
in
push
mov
cli
aaa
xor
adc
gs
jmp
or
xor
test
pop
es
xchg
xor
sub
mov
ss
lret
cmp
hlt
mov
ret
dec
mov
push
inc
dec
or
and
xchg
mov
fisubs
int
xor
cmpsl
pop
test
out
subl
dec
popf
pop
lods
ja
shlb
fucom
push
sbb
pop
sbb
xchg
jbe
add
stos
pop
shrl
add
pushf
xor
sbb
mov
sti
hlt
sarb
xor
jecxz
outsl
fidivs
sbb
jecxz
mov
sub
fs
jge
das
mov
addr16
push
mov
mov
fdiv
dec
jp
adc
inc
std
inc
jae
jno
sub
sbb
inc
inc
mov
sbb
cltd
jmp
js
ds
mov
mov
and
addr16
test
jmp
ja
jmp
test
mov
xchg
pop
dec
jne
lcall
shrl
test
mov
lods
jne
stc
pop
ljmp
cmpsb
mov
add
xchg
shl
nop
ret
fisttpl
imull
stc
mov
lcall
mov
pop
stc
test
xchg
mov
pop
sub
stos
popf
xorl
xchg
xchg
lahf
loopne
pop
and
cwtl
popa
pop
sbb
sbb
mov
push
in
mov
inc
jge,pn
inc
sub
loope
lret
jl
dec
cld
scas
mov
jl
pslld
adc
clc
pop
test
mov
or
add
jbe
cmp
out
mov
sub
nop
add
and
and
cs
outsl
mov
push
ret
stos
add
rorl
inc
mov
cmpsb
inc
inc
shrl
dec
xorps
subl
gs
and
rcr
pop
xor
xchg
sub
sbb
and
mov
outsl
mov
pop
ret
out
sub
sahf
lods
cmp
int3
es
jl
das
insl
xor
popa
dec
and
sub
pop
sbb
xor
outsb
je
std
ret
cmc
mov
outsl
ja
and
shr
mov
sbbl
xor
add
dec
jmp
bound
ja
fs
inc
add
jns
jle
out
inc
cmp
lret
lret
ss
dec
and
cmpsb
push
outsl
hlt
rcll
rorb
test
jae
jns
mov
xor
pop
adc
call
xor
dec
dec
nop
cmpsl
push
js
inc
cmp
aaa
mov
xchg
xchg
leave
test
int
cmpsl
hlt
push
lcall
aad
jmp
xchg
jnp
mov
lds
je
mov
cmp
xor
fs
js
cmp
lds
int
nop
jl
gs
pop
bnd
mov
pop
out
or
pop
and
scas
lea
das
inc
rclb
out
sbb
in
pop
pop
mov
xchg
xchg
repz
sar
out
stos
daa
pop
inc
fcmovnb
hlt
sti
mov
mov
daa
adc
sub
and
or
ljmp
outsb
dec
adc
jl
fists
or
ds
mov
push
adc
lcall
mov
dec
popa
in
or
ss
adc
cmp
test
std
rcrl
nop
sbb
add
into
fisubl
stos
and
dec
sub
inc
cli
mov
xchg
push
das
jne
jb
xchg
imul
push
lret
pusha
pop
mov
fwait
mov
fdivr
fistpll
xor
pop
pop
sbb
cmpsl
test
mov
cmove
insb
popl
push
add
data16
inc
jmp
xlat
mov
iret
mov
lret
dec
dec
out
ror
pop
xor
sbb
iret
push
inc
rcr
ss
inc
add
insl
call
loopne
orb
movsb
movsb
std
and
cmc
and
xchg
nop
or
cld
movsb
sbb
inc
mov
into
iret
insl
sbb
gs
inc
jge
rorl
mov
jp
ds
add
jmp
loopne
inc
jae
repz
mov
out
mov
imul
sbb
out
inc
mov
or
popl
or
mov
push
mov
push
add
and
push
icebp
add
ja
lods
jecxz
mov
pop
xor
fsubs
xlat
ss
lods
add
cli
test
sub
mov
outsl
subl
xor
das
mov
xor
xchg
out
iret
push
push
inc
mov
cli
addr16
je
out
xchg
icebp
cmp
jecxz
loope
pusha
loopne
push
repz
jp
mov
inc
out
fwait
and
rclb
fwait
jno
ss
movsl
pop
pop
jp
mov
es
dec
jg
daa
lahf
cmp
cltd
cmp
es
xchg
dec
add
sbb
xor
inc
pop
ds
adc
pop
jg
cmp
popa
test
sbb
test
mov
sub
xor
jl
dec
cmp
ret
ror
adcb
insb
dec
out
fucomip
das
sbb
ljmp
mov
prefetch
fldcw
add
loopne
js
stos
dec
push
jecxz
sahf
jge
pminsw
push
psubq
popf
mov
dec
pop
ret
xchg
repz
dec
add
adc
push
ss
out
and
or
jle
cmp
cltd
mov
and
mov
call
or
fs
cmp
or
sbb
or
ds
lods
es
icebp
lea
jle
jnp
call
cmp
xor
ret
popa
add
mov
jbe
into
daa
mov
arpl
ret
inc
in
gs
xchg
in
xchg
jl
lock
push
xchg
mov
mov
xor
roll
or
adc
cmp
adc
aaa
dec
push
clc
ljmp
mov
loope
mov
rcll
jnp
sub
enter
xchg
addr16
push
inc
push
mov
outsb
in
fidivl
sub
or
pushf
sbb
jno
xor
mov
leave
inc
aaa
jge
pop
or
xor
lds
mov
or
je
cmp
mov
testb
and
mov
sbb
das
jp
dec
mov
pop
inc
dec
lcall
mov
jge
ds
adc
ret
xor
shl
pop
jmp
movsl
adc
sbb
loopne
mov
xchg
sbb
out
fcomp
out
into
lods
mov
leave
or
jns
icebp
or
aaa
cwtl
loop
loopne
adc
mov
xchg
mov
lods
jo
inc
lods
jne
pop
rcr
mov
dec
sub
xlat
inc
cwtl
xor
maxps
pop
xor
and
test
mov
jg
cld
std
test
pop
pop
cmc
int
cmp
cmpsl
mov
dec
lahf
inc
test
jb
cmp
jle
adc
mov
mov
scas
int3
loope
lret
lock
in
xor
push
xchg
and
aas
ret
cmp
sets
out
fwait
test
and
xchg
xor
fucom
xchg
cmp
mov
xor
and
sbb
lock
movsl
mov
push
sahf
sbbl
repnz
pop
test
inc
or
mov
adc
add
xchg
imul
xor
mov
jl
sub
push
outsl
cltd
cmp
ljmp
xchg
jl
sbb
mov
out
or
xchg
lahf
adc
push
sti
jbe
rcll
cmp
das
push
andb
xor
rep
mov
inc
push
mov
xchg
mov
fs
inc
test
jo
and
or
fcomi
in
lcall
sub
pop
adc
test
xchg
das
xchg
dec
dec
test
fcoml
and
push
fmul
xor
ds
add
or
dec
je
jg
lods
inc
mov
daa
call
in
out
inc
sub
xchg
ret
push
or
adc
mov
and
aam
inc
aad
dec
mov
shrl
pminub
xchg
jg
sahf
gs
or
mov
jge
outsb
mov
mov
xchg
sbb
sbb
mov
imul
in
testb
lcall
jae
lret
mov
js
jmp
out
mov
mov
lods
imul
inc
enter
ficompl
fmull
ds
int
pop
mov
mov
push
rcrb
fimull
sbb
call
sbbl
fsub
scas
popa
shlb
or
fwait
cmp
xor
dec
jae
sarl
xor
mov
push
mov
out
sahf
addr16
xor
imulb
pop
jns
push
outsl
pop
imul
mov
inc
popa
mov
loopne
je
xchg
cmp
bnd
incb
cmp
cmpsl
das
in
inc
add
xchg
inc
or
or
mov
fcmovbe
jns
test
xor
sbb
aas
sbb
jno
repz
fsubrl
rcl
out
adc
repnz
test
fildll
mov
push
sub
rclb
sub
scas
push
pop
sbb
aaa
push
xor
aas
icebp
ja
outsl
sarl
lods
dec
pusha
iret
movsb
cmp
pop
out
jne
dec
lock
inc
in
mov
dec
les
enter
imul
shlb
jne
mov
jb
cmp
aaa
gs
sub
xor
leave
push
jne
mov
fisubrl
mov
jecxz
jbe
out
jg
aas
adc
ret
mov
sub
pop
std
bound
fs
or
enter
push
mov
pop
or
fmulp
data16
push
mov
push
mov
out
aas
mov
jg
jge
mov
cmpsl
rclb
inc
xor
cmp
pusha
adc
adc
movsl
dec
push
popl
add
xchg
mov
mov
sub
and
aas
push
sbbl
out
call
fwait
cwtl
clc
frstor
loopne
mov
ret
dec
popa
or
repz
and
push
arpl
loope
ss
iret
repz
aam
repz
xchg
mov
sub
inc
mull
fstp
data16
push
rcrb
or
enter
dec
sarl
jecxz
adc
push
jne,pn
inc
pop
lods
push
and
mov
fsubp
call
in
rclb
lods
fdivrl
xlat
dec
dec
popf
cmp
pop
test
ja
in
repz
xor
idivl
popa
dec
adc
loop
and
movl
push
mov
sub
jle
and
inc
shll
ret
aad
pop
cmpsl
inc
sub
push
stos
jl
or
cmp
stos
imull
ja
pop
js
iret
dec
jmp
cmpsb
sub
add
and
adc
test
out
jno
test
inc
into
dec
cmpb
and
sub
in
stos
aam
cmp
inc
out
push
pop
xor
pop
or
dec
jmp
pop
cltd
cltd
rolb
or
movsb
push
nop
out
fistpll
inc
fndisi(8087
pop
shr
jb
mov
lods
xor
out
scas
sbb
push
add
popf
cs
xchg
adc
outsb
out
rcl
push
mov
ficoms
into
lods
fucomip
mov
push
rcr
mov
mov
cmpsl
loopne
test
inc
rorb
movsl
mov
mov
mov
imulb
in
xlat
std
inc
popf
or
xlat
inc
notl
mov
sbb
mov
and
mov
sarb
add
adc
jnp
push
and
xor
pop
pushf
cmp
dec
lock
xlat
arpl
mov
ffree
jle
push
add
cltd
xchg
jae
lcall
pushf
or
mov
dec
and
mov
imul
cwtl
pop
aaa
jo
popf
push
jge
std
add
sub
mov
inc
lock
inc
nop
call
icebp
cmp
fistpll
adc
adc
pop
fwait
mov
xor
xchg
dec
mov
out
out
inc
adc
mov
sbb
sbb
movsl
jns
push
xchg
es
jbe
xchg
pop
scas
mov
jp
fistpll
add
stos
add
adc
in
mov
pop
pushf
es
out
fnsave
push
sbb
andl
jnp
push
cltd
loopne
jbe
dec
xchg
push
mov
mov
jb
xorl
mov
pusha
xor
pushf
orl
popf
push
xchg
adc
fists
cmp
das
jge
dec
out
loope
lahf
sub
cmpsl
popa
push
xadd
push
push
inc
ljmp
pop
push
loopne
xor
lret
push
adc
xchg
mov
xrelease
inc
mov
pop
aam
push
les
xchg
xchg
xor
cmpsl
outsl
ret
stos
push
scas
jecxz
enter
push
dec
xchg
loop
fwait
dec
sti
fdivs
add
xor
scas
daa
test
jg
gs
or
mov
mov
mov
adc
lret
pop
or
jb
pop
push
lea
or
mov
insl
in
fidivs
popa
xchg
lcall
hlt
cmp
mov
dec
pop
ror
sar
dec
shl
sub
xchg
subl
mov
cmp
out
fiaddl
xchg
push
xlat
test
insb
cmc
xlat
jbe
fisubl
jne
ficomps
gs
pushf
sbb
pop
sti
pushf
les
and
lock
cmp
popf
insl
shlb
xorb
xchg
rcrl
xchg
mov
pop
mov
rcrb
dec
fcmovbe
out
add
jne
sbb
xlat
mov
aaa
in
scas
push
mov
divl
jns
arpl
icebp
jecxz
xor
cwtl
scas
pop
inc
pop
mov
cmpsb
sbb
outsl
jne
mov
shlb
and
scas
nop
sti
jb
movl
add
mov
aas
jns
mov
mov
pop
inc
jno
aas
sub
adc
or
inc
xchg
icebp
mov
rcl
lods
adc
fsts
divb
mov
leave
sub
xor
pop
add
shrb
mov
mov
fsubp
fsts
lret
push
es
pop
or
lcall
add
adc
outsl
inc
es
cmp
jne
loopne
mov
test
popa
cmp
dec
xor
jge
xchg
mov
mov
in
push
inc
pop
int3
mov
pop
cmp
and
movl
sbb
cwtl
pop
data16
mov
mov
fcompl
and
in
inc
insl
inc
pop
jmp
addr16
jge
addr16
sbb
popa
fisubrs
into
sub
iret
and
add
mov
int3
stos
mov
push
test
mov
pop
mov
fstpt
shlb
ja
mov
cmpsl
fstpl
aad
sub
mov
lods
sub
ficompl
sti
aad
sbb
test
mov
xor
and
add
stc
add
lret
xchg
mov
jmp
aas
out
cmp
addb
test
xchg
fs
push
rcr
scas
adc
ret
mov
incl
and
mov
jle,pn
jmp
pusha
out
enterw
lods
mov
test
mov
jecxz
push
icebp
lea
inc
xlat
call
arpl
fcomps
sub
sti
cmp
inc
outsb
sbb
std
cs
push
js
xor
jns
mov
out
push
arpl
pop
xor
mov
lods
mov
jg
int
outsl
sbb
xor
inc
call
sub
rolb
xchg
ret
outsl
sbb
inc
out
xor
ret
jge
sbb
inc
and
xlat
xchg
mov
popa
stos
aaa
imul
mov
fstl
dec
popf
xchg
ror
aaa
mov
les
ljmp
popf
or
pop
rorb
xchg
and
imul
xchg
sub
jnp
sbbb
icebp
ss
stos
xor
vpshld
cmp
sbb
dec
lods
into
add
dec
or
lods
stc
lcall
leave
mov
push
cmp
dec
test
mov
mov
imul
push
shrl
adc
xor
sti
insl
pop
bound
imul
inc
add
jg
ja
xchg
fmuls
xchg
mov
add
andl
or
scas
fisubrs
adc
xchg
ret
xchg
je
add
insl
repnz
adc
cli
dec
fnstcw
mov
or
push
ret
dec
les
cwtl
push
mov
sbb
xchg
xchg
add
dec
xchg
cmp
xchg
mov
test
rclb
jne
xchg
pop
dec
arpl
pop
xchg
mov
ret
pop
cmp
cmp
mov
in
loope
pop
mov
out
or
and
dec
jge
mov
sub
mov
jmp
jnp
jmp
cmp
push
push
mov
aad
add
iret
xchg
add
push
pop
pop
sbb
ret
jnp
lret
out
pop
rorb
stc
adcl
les
inc
dec
and
subl
int
cs
sbb
mov
arpl
mov
add
add
mov
divl
adcb
in
pop
add
mov
xor
aaa
mov
adc
decl
jp
movl
int
jl
add
jae
test
xor
andl
outsb
gs
shr
mov
cmp
in
popf
fwait
jnp
dec
xchg
jo
and
add
lcall
pop
mov
pop
mov
mov
adc
das
push
addr16
sub
pushf
jo
int3
mov
xor
mov
mull
push
mov
xchg
cmp
scas
or
ja
ret
xchg
mov
sub
mov
cs
dec
lds
jg
jo
pop
cmpsb
movsl
xlat
jmp
sti
jl
xchg
cmpsl
pop
andl
es
push
mov
outsl
pop
lret
gs
mov
pop
adc
lcall
daa
xlat
dec
clc
loopne
mov
dec
aad
popa
scas
sub
xchg
insb
lret
test
add
adc
repz
cmp
push
nop
movsb
xchg
out
push
push
out
sbb
aas
jmp
rolb
lretw
add
xor
test
inc
dec
xor
lea
or
rcrb
sub
lds
inc
cmp
mov
mov
sahf
mov
sub
mov
enter
mov
mov
div
fdivs
mov
in
cmp
jbe
xlat
push
jno
or
cld
in
fimuls
and
inc
adc
in
mov
sti
je
adcb
loope
out
push
xorl
jp
out
push
push
je
sub
imul
xor
test
xor
jle
mov
pushf
sarb
xchg
mov
movsb
sub
cmpsl
cs
test
and
sub
xchg
fisttps
sub
push
jmp
aam
fisubrl
dec
pop
sbb
insl
fldt
mov
cmpl
std
sub
lret
add
adc
jae
inc
inc
sbb
push
mov
repnz
fistps
jecxz
sbb
in
pop
jae
or
in
jo
stc
xchg
add
mov
mov
pop
test
jecxz
add
mov
xchg
xor
in
push
and
aaa
sbb
jb
cld
lcall
adcb
add
hlt
lock
pushf
push
icebp
mov
repz
dec
pop
jle
mov
mov
or
ds
call
fnstsw
sub
mov
fistps
fsubl
mov
fs
push
stc
sub
movsl
xchg
mov
sbb
test
inc
fsts
repnz
addr16
or
or
int3
xorl
mov
mov
lret
mov
lock
mov
xor
jb
pop
add
in
jo
add
les
jns
das
dec
mov
cli
inc
jo
mov
lods
out
fwait
inc
inc
mov
push
stc
in
cltd
jno
jge
push
jge
xchg
fdivrs
ja
adc
xchg
sbb
movsb
pop
sbb
sub
push
sub
or
mov
xchg
xorb
mov
sbb
out
dec
in
insl
jno
clc
scas
lcall
xor
mov
cmc
pop
mov
daa
mov
aas
xor
xor
cltd
inc
adc
xchg
lods
lods
repnz
sub
clc
insb
cmp
and
pop
push
outsb
dec
push
push
cmp
push
mov
arpl
adc
mov
mov
lods
subb
cli
and
into
or
cltd
and
jo
cmpsl
test
jo
bound
inc
inc
dec
stos
xchg
scas
fisttps
decl
mov
mov
popa
pop
cmp
popf
push
xchg
or
pop
shrl
sbb
jecxz
jg
xlat
push
notl
stos
sub
out
lock
arpl
movsb
mov
mov
pop
cmp
sar
mov
ljmp
add
lock
inc
sub
mov
leave
lret
testb
sub
lea
jo
jp
and
iret
xchg
adc
jae
adc
das
pushf
inc
sub
mov
movd
mov
inc
addr16
xor
scas
pop
mov
and
xchg
mov
inc
xchg
mov
loopne
les
add
inc
sbbb
das
mov
or
in
adc
stc
movsl
and
pop
pop
cmpsl
xchg
ret
xchg
out
jb
add
adc
sbb
mov
xchg
pop
scas
push
cmpl
daa
jns
rclb
jae
xchg
pop
xor
dec
repnz
cli
pop
fwait
mov
cli
mov
and
mov
js
pop
test
cmp
iret
roll
xor
mov
div
call
cmp
cmp
sub
sarl
xor
jp
mov
test
mov
test
mov
or
cmpsl
imul
divb
shll
cltd
mov
into
lods
aam
ficompl
scas
nop
cli
fisubrs
mov
mov
cli
jnp
and
aad
sbb
xchg
loope
fiaddl
pushf
fcomi
nop
push
inc
jg
xchg
sbb
clc
repz
js
add
daa
mov
stc
or
push
sarb
aaa
hlt
orl
arpl
dec
negl
dec
cltd
xchg
or
ret
push
hlt
lock
test
xchg
lret
stos
push
sbb
andb
test
clc
shrl
outsl
outsb
std
jle
test
movl
loope
mov
push
je
aam
push
aad
cs
stos
call
adc
and
push
loope
or
lods
push
gs
lcall
cmp
push
inc
mov
mov
mov
pop
pusha
mov
ja
pop
je
ja
sahf
aas
mov
push
into
sbb
inc
loop
sub
push
pop
aam
outsl
dec
arpl
xor
sbb
cmp
xorl
aad
xor
sbb
mov
xor
cld
sub
push
jb
mov
loopne
jecxz
outsl
mov
adc
mov
ja
mov
cmp
or
in
xchg
inc
and
sarl
cltd
addr16
sub
lea
shrl
inc
dec
subb
in
mov
mov
cmpl
mov
sub
xlat
fucomp
jae
enter
dec
mov
add
cmp
ficomps
add
les
adc
gs
pusha
cs
mov
repz
or
adc
ss
mov
and
mov
data16
push
sar
inc
adc
pop
adc
inc
subb
loope
aaa
inc
lret
xchg
shl
mov
jo
mov
inc
cmpsb
push
mov
jne
popf
cmpsb
out
icebp
outsb
jp
inc
mov
or
cld
fidivrs
cli
ss
fisubs
ret
in
aaa
lret
sbb
mov
popa
sub
mul
fldenv
dec
jmp
cmp
add
and
jp
inc
jl
das
xchg
jns
int3
dec
ja
push
jns
std
dec
and
push
inc
sti
pushf
dec
push
ss
test
xchg
popa
out
sti
mov
push
fistpl
les
xchg
leave
stc
aad
xchg
arpl
test
dec
xor
sbb
pop
out
pop
int
xchg
mov
push
test
jo
out
mov
xor
inc
adc
add
sub
aas
scas
add
xchg
fsubl
in
mov
mov
cmp
sbb
push
dec
and
lods
imul
push
xor
jno
ret
scas
loop
out
add
mov
lret
test
fists
sbb
push
jge
mov
jmp
pop
pop
mov
jno
aad
lea
pop
or
fistl
rcrl
out
push
push
mov
fisubrl
into
fistps
and
hlt
push
outsb
es
lcall
leave
jle
rolb
push
sbb
cmp
loopne
jo
xor
cwtl
mov
jnp
test
mov
inc
push
dec
or
aam
out
add
daa
sarb
movsl
sub
cmp
or
jno
or
pushf
inc
jmp
cmp
jne
fsin
xchg
stos
pop
xchg
aaa
sub
xchg
mov
jbe
repz
test
push
push
or
mov
pop
mov
int3
ja
gs
dec
mov
fdivrs
xchg
push
xchg
xor
sbb
sti
rorb
mov
xchg
lods
loopne
jmp
sahf
fidivl
loope
hlt
and
pop
daa
daa
inc
and
fsubrs
xchg
negb
lods
mov
jns
dec
popa
nop
jbe
jns
data16
inc
lods
jnp
xchg
repz
inc
pop
inc
sub
pusha
or
inc
dec
push
sbb
mov
fcomip
push
stos
stos
ja
ja
xorb
loop
mov
icebp
pushf
stos
pusha
cmp
mov
aas
jne
add
in
mov
adc
push
dec
inc
inc
js
mov
xchg
into
mov
movl
call
pop
addr16
rorb
pop
mov
out
repnz
push
push
stc
addr16
mov
and
lods
sahf
cmp
inc
mov
adcl
pop
lds
sti
xlat
sti
aaa
jp
jae
lods
cmp
cwtl
pop
ucomiss
out
sbb
xor
scas
lret
jg
outsl
cld
add
in
fwait
mov
cmp
adc
jmp
mov
iret
inc
test
ljmp
jnp
shl
cmp
testb
aas
mov
xor
jno
loop
idivl
aam
xor
mov
insl
leave
cmp
xor
xor
adc
outsb
pop
cmp
pushf
fwait
repnz
mov
push
shlb
push
push
hlt
pusha
xchg
jnp
arpl
das
push
out
addr16
mov
sub
cmc
mov
mov
pusha
iret
sahf
dec
jb
fs
sub
and
mov
out
gs
jae
jmp
pop
jnp
test
add
cmpsb
or
mov
movsb
mov
jl
clc
xor
inc
stos
ret
nop
xchg
lahf
mov
xor
sub
cwtl
jp
inc
imul
xchg
jp
test
push
nop
xchg
inc
ret
fsubs
insb
fsubl
inc
cli
lds
push
lcall
sbbb
pop
xchg
into
mov
xor
and
and
xor
pop
push
out
fisttps
rcrb
jp
xor
es
dec
test
into
dec
xchg
xchg
aad
rcrl
sub
jmp
les
sbb
jnp
in
mov
shr
in
cli
outsl
mov
inc
outsl
fdivrp
jl
inc
xor
sub
pop
cmp
cmc
sub
outsl
or
cs
sbb
rol
and
pop
cmp
daa
imul
cmpsl
xor
imul
addr16
add
inc
popa
es
mov
stos
daa
jecxz
les
mov
inc
mov
pop
or
mov
pop
inc
sti
movsb
adc
ss
mov
shr
or
lahf
cmp
sbb
xchg
flds
dec
mov
sbb
mov
push
and
pop
test
xor
xor
loop
xchg
stos
jae
jle
mov
decl
lea
out
sbb
xchg
test
jo
arpl
das
xorb
push
fabs
push
cmp
sbb
xor
or
mov
iret
test
xchg
and
ljmp
sub
sub
adc
pop
jp
jns
fwait
cltd
fsubl
mov
aaa
add
xchg
fcoml
cmp
jle
xchg
lret
mov
or
xchg
jecxz
xchg
adc
ja
inc
inc
scas
xchg
das
jns
fcomi
es
sub
mov
adc
sub
mov
aam
xlat
pushf
mov
add
adc
sbb
popa
inc
std
sti
pusha
sbb
stc
push
out
push
das
stc
push
inc
mov
dec
out
ja
cmp
mov
inc
adc
int
fstpl
shl
lahf
xor
and
xchg
cmc
adc
xorl
outsb
sub
mov
aad
cli
cmc
les
stc
test
cmp
lods
es
xorl
xor
imul
shlb
outsl
lahf
lret
pop
lret
lahf
jno
and
insl
or
dec
negl
sub
xchg
pop
sub
and
or
mov
cmp
fstl
cmp
addb
sub
or
stos
gs
add
jno,pt
lret
inc
gs
std
movsl
push
and
movsb
xchg
dec
sbb
cmp
aas
imul
psubd
data16
inc
es
outsl
cmp
call
insl
addr16
push
stos
lret
stc
scas
ds
in
test
cmc
pop
add
jae
shlb
repz
lahf
xchg
cs
loope
dec
push
cmp
dec
push
xchg
stos
mov
push
inc
fiadds
repnz
loope
fcoms
sti
mov
in
push
jo
pop
sub
and
es
dec
fstpl
aas
enter
mov
dec
nop
mov
dec
ret
dec
aam
ds
push
cmpsl
fstpl
xchg
ret
push
inc
cli
insb
jle
or
mov
xchg
test
or
lret
lret
inc
out
pop
out
cmpsb
xor
mov
in
jns
add
and
mov
xor
jge
and
adc
std
pop
pusha
rorb
mov
cmpsb
push
pop
xchg
and
les
sub
pop
outsl
xor
jge
lds
orb
fisttpl
divl
pop
int3
stc
sbb
clc
pop
sbbl
lds
lods
ljmp
jnp
xchg
sub
mov
add
andb
into
xchg
cltd
sub
movsb
cs
dec
cmp
out
cmp
sbb
push
jne
xchg
fdivrs
fcompl
imul
pop
cmpsb
mov
or
rorl
inc
idivb
pop
sbb
sub
fsubrs
add
inc
sub
int
sub
inc
lcall
mov
inc
repnz
dec
scas
fisttpl
mov
je
or
or
jns
pop
inc
mov
and
add
push
dec
mov
stc
fisubl
jae
test
decl
mov
ljmp
and
int
mov
leave
jp
cli
jp
iret
fisttpl
cwtl
and
shrb
fnsave
jmp
dec
cwtl
and
int3
push
popf
ret
xchg
mov
or
cld
sbb
outsl
jb
inc
cli
adc
movsb
mov
pop
imul
cmpsb
inc
or
cmp
push
add
dec
xor
inc
pushf
fs
shr
pop
pop
and
test
cmc
popf
cmp
pop
inc
add
adc
je
add
mov
outsb
stos
js
mov
push
aas
outsl
movsb
shrl
rolb
test
out
xchg
xchg
push
stos
fnsave
push
ret
sarb
insb
sti
push
push
sbb
or
mov
gs
cli
ss
in
dec
pop
or
jmp
hlt
add
mov
in
sbb
icebp
inc
pop
lock
mov
cmp
xchg
add
in
aam
xchg
mov
and
jmp
lret
or
add
xor
stos
adc
xchg
mov
test
dec
sub
cmp
mov
xlat
lcall
scas
lret
mov
lcall
jns
fistps
or
mov
mov
adc
push
mov
lock
pop
test
fstl
addr16
mov
xchg
shll
cmpl
fldcw
and
and
fnstenv
jae
les
xor
sbb
inc
ds
sub
dec
fs
mov
mov
imul
push
xchg
dec
dec
add
xor
pop
jbe
inc
sbb
sbbb
push
mov
pop
xor
push
nop
and
addr16
outsl
mov
xchg
push
mov
xchg
or
or
sbb
aaa
jb
add
pop
lcall
in
cltd
mov
lahf
jbe
test
push
dec
and
pop
cwtl
xchg
movsl
lcall
cmp
dec
push
shr
test
mov
mov
popf
out
jle
dec
cmp
jg
mov
popa
test
icebp
xor
addr16
mov
lods
fistl
push
popa
dec
call
aaa
push
je
test
clc
inc
loope
test
mov
mov
jns
repnz
lahf
push
popa
es
es
jge
sahf
icebp
popf
mov
dec
xchg
push
xor
pop
pop
jnp
cmpsb
in
push
out
sarb
or
scas
cmpsl
testl
adc
iret
orb
fcomps
mov
push
rcrl
push
inc
sbbl
gs
arpl
adc
jmp
outsb
cmp
hlt
jmp
mov
lahf
flds
movsl
fmul
mov
ljmp
jp
mov
and
mov
jmp
push
pop
push
add
imul
ret
cld
mov
mov
push
fwait
mov
adc
xchg
xor
push
mov
mull
sub
adc
cmp
push
std
jg,pn
addr16
sub
jae
mov
lret
pop
and
dec
jae
fcoml
xchg
es
dec
push
test
aam
jae
addl
mov
push
dec
out
mov
xchg
inc
push
sub
xor
aam
shr
adc
add
int
test
incb
imul
orb
int
jp
es
mov
test
sub
lods
add
dec
xchg
lods
mov
xchg
frstor
pop
lahf
pop
aaa
into
xor
dec
sub
add
xchg
adc
jnp
pop
mov
cmp
jl
pop
jl
xchg
jge
subb
and
ds
cli
mov
sub
adc
pop
lods
fstps
and
xchg
mov
jne
loope
or
ret
cmp
out
pop
les
clc
xchg
call
fs
mov
and
xor
imul
jmp
pop
nop
outsb
sbb
cmp
xor
sarb
aam
pop
xchg
xchg
inc
rol
jb
movsl
ficomps
dec
stos
cwtl
lock
das
and
inc
mov
ficoms
lods
adc
out
shrb
int
mov
scas
cli
mov
orl
sbb
jns
out
adc
addr16
insl
pop
dec
movsb
inc
insl
loopne
jl
sahf
mov
inc
je
in
xchg
lock
je
mov
sub
pop
imul
iret
outsl
and
and
jbe
pushf
test
xchg
das
inc
inc
or
pushf
add
ds
mov
adcl
add
add
ret
dec
cmp
pop
cmpsl
mov
cmp
out
and
dec
outsb
aas
adc
mov
out
cmpsl
adc
shlb
movsl
mov
fdivrl
inc
leave
pop
test
dec
int3
sub
gs
scas
mov
and
leave
mov
out
into
in
cmpsl
xor
push
xchg
push
insb
test
cmp
sbb
cmp
xchg
or
pop
lods
ficompl
fstl
dec
test
ja
ret
sti
push
jge
lods
andb
ret
into
mov
push
lcall
xchg
shlb
jmp
fwait
gs
or
fs
cs
stos
push
int
ds
sub
fcoml
mulb
sbb
dec
cmp
fidivrl
xchg
mov
outsb
lds
ret
popf
in
mov
xchg
popl
loop
xor
sub
lock
push
dec
mov
dec
pop
fimull
aaa
sarb
xchg
imul
outsb
jb
push
popa
imul
sub
add
outsb
sti
ret
movsl
shll
push
imul
addr16
sbb
mov
cmp
mov
lods
ret
cmp
mov
data16
loope
mov
lret
fmull
call
enter
inc
pop
les
push
mov
cli
outsb
out
idivb
fsubs
scas
pop
and
cmpsb
pop
or
push
and
hlt
mov
ret
mov
xchg
push
dec
adc
cmp
jne
ljmp
push
pop
aaa
push
rcl
sbb
or
in
repz
fs
xchg
hlt
fbstp
mov
xlat
and
fildl
dec
cs
jne
cmpsl
or
push
orl
insb
imul
fcmovnbe
cli
pop
and
add
sbb
ljmp
pop
lock
inc
and
cmp
cmp
sub
pop
add
leave
int
mov
mov
jge
ss
push
in
xorb
cmp
mov
xor
ss
leave
sub
lds
addr16
dec
or
push
fidivrl
aaa
jle
adc
fimuls
stc
loop
push
pushf
loopne
les
mov
dec
pop
jnp
dec
push
popf
lods
into
and
clc
push
mov
cmpb
lock
sbb
jle
inc
sbb
inc
mov
sub
pop
inc
mov
lret
mov
fcomps
and
mulb
leave
leave
mov
in
mov
mov
test
add
push
std
cli
movsb
insl
cmpb
orb
jl
jnp
outsl
fldenv
daa
sbb
mov
jecxz
mov
out
clc
jae
repz
or
out
jnp
xchg
jb
das
adc
imul
xor
mov
cs
xchg
push
daa
int3
or
dec
sub
pop
push
or
xchg
repnz
sub
or
mov
fnstsw
iret
jge
scas
jl
cmp
ficoml
jae
and
add
fwait
add
cmpsl
enter
xchg
stos
mov
imul
add
xchg
js
mov
jge
mov
adc
pop
hlt
push
sub
cmp
mov
addr16
jno
ficompl
xchg
push
xor
sub
mov
mov
or
jle
jecxz
pop
dec
add
aaa
aad
icebp
mov
aad
imul
inc
orl
out
stos
pop
aad
cltd
into
addr16
push
rcrl
daa
aad
inc
inc
ret
push
jg
dec
cmc
xchg
movsb
iret
xor
insb
mov
into
xor
js
mov
iret
pop
xchg
and
sbb
push
and
hlt
insb
jg
int
sti
xchg
lock
adcb
lods
cld
pushw
mov
add
jecxz
cmpsl
sbb
out
xor
cmp
addr16
jbe
and
mov
xchg
insl
arpl
ljmp
nop
enter
fxch
mov
mov
jnp
repz
hlt
lahf
xchg
mov
sbb
jno
hlt
dec
mov
xorb
mov
xchg
push
pop
mov
mov
pushf
mov
leave
js
mov
mov
jp
add
sti
push
stc
mov
or
shl
adc
sbb
sbb
or
ds
mov
add
mov
rcrl
repz
xchg
xchg
jns
mov
aad
rolb
or
inc
xlat
dec
or
neg
js
adc
sub
inc
add
jl
push
cmp
or
jne
outsb
cmp
inc
cmp
jge
adc
pop
fmuls
sbb
inc
int
pusha
cmp
or
mov
ds
ret
jo
or
repnz
adc
ficomps
ljmp
sbb
pop
cwtl
mov
cmp
dec
pop
fstpl
pop
scas
ja
xchg
loope
js
push
add
mov
or
mov
sub
scas
cmp
dec
sti
sbb
dec
or
aad
xlat
mov
dec
mov
nop
fstl
or
test
in
xor
std
pop
push
and
out
sbb
aaa
mov
add
cmpsl
sti
mov
push
mov
call
or
sub
pop
lahf
aas
imul
das
shr
and
and
out
mov
push
xor
leave
jg
fwait
dec
push
popf
fidivs
dec
ds
mov
lods
pusha
adc
subb
repnz
popa
movsl
test
adc
adc
push
pop
outsb
pop
inc
and
fwait
dec
clc
scas
push
lods
clc
das
mov
pop
inc
pop
adc
pusha
icebp
push
or
dec
cltd
inc
int
int3
fidivl
jne
ja
cltd
leave
dec
nop
jecxz
xor
aaa
xor
xor
idivl
subl
inc
fnstenv
sub
sbb
int3
fsubs
push
pop
lods
in
aam
and
ljmp
pop
scas
mov
ja
inc
pop
aas
mov
inc
jle
fsubl
les
insl
push
sbb
sbb
mov
lahf
insl
lods
push
fisubrl
pop
mov
inc
jns
cwtl
xorb
cmp
out
mov
std
cmp
movsl
add
mov
insb
add
xorb
out
and
imul
in
or
xlat
push
adc
leave
push
push
push
push
jmp
pop
sbb
test
lods
dec
ss
leave
jb
add
sub
iret
xor
jg
add
test
outsb
mov
or
scas
enter
pop
cmpsb
sbb
mov
cmp
pop
cli
mov
popf
cmp
pop
and
addr16
cmc
popf
jae
xor
in
adc
scas
cmp
cmp
lea
aaa
pop
icebp
cmc
add
in
cmp
inc
sub
adc
imul
out
or
loopne
xchg
push
mov
shll
pop
jge
sub
loopne
ds
inc
sub
pusha
jb
das
push
mov
bound
mov
add
in
outsl
dec
in
xlat
pop
push
cmp
mov
ljmp
or
std
pop
cmp
into
into
gs
stos
das
loopne
dec
or
jns
repz
push
mov
cmpsb
jge
or
ljmp
push
nop
repz
xchg
inc
fxch
loopne
imul
and
push
movsb
fs
dec
out
popf
aam
sub
outsb
iret
negl
push
jg
push
or
sbb
popf
sub
into
xchg
pop
repnz
cmp
shll
cld
sub
pop
and
rclb
pop
dec
jns
cmpsb
arpl
scas
xor
popa
add
out
add
adc
mov
xor
fbld
cmc
mov
cmc
xor
movsb
dec
xchg
cmp
test
xchg
xchg
rorb
xor
movl
mov
into
push
xchg
insl
in
mov
cmp
sbb
xchg
pop
mov
and
in
dec
push
mov
aad
int
xor
ret
sub
out
movhps
mov
scas
dec
xor
adcb
sbb
add
fisubrl
icebp
dec
pop
xchg
out
add
addr16
cmp
inc
jl
sub
jmp
xchg
xchg
push
pusha
xchg
ds
and
jnp
out
cmp
out
movsb
or
sbb
nop
dec
iret
mov
cmp
jl
push
fs
andb
push
faddl
dec
or
and
dec
movl
jl
shrb
shl
mov
dec
mov
xchg
xchg
dec
push
and
add
sub
nop
daa
dec
ja
xchg
mov
sahf
dec
pop
test
popa
pop
jo
cmc
imul
lods
jp
pop
aaa
xor
jae
jbe
mov
mov
add
icebp
jae
inc
hlt
and
jb
shll
lcall
inc
mov
mov
and
adc
xchg
mov
xchg
ss
cmpsb
adc
xchg
fcoms
pop
idivb
jno
pop
mov
ljmp
lock
fsubl
cs
rcl
dec
sbb
dec
push
fcmovnu
add
sbb
test
popf
xchg
rcl
cwtl
cwtl
mov
outsl
adc
nop
pusha
scas
push
add
cmp
mov
jmp
adc
ficoml
aad
push
loopne
repz
sbb
lret
iret
jmp
jge
hlt
adc
sbb
adc
cmpsb
pop
jmp
addr16
mov
ja
aam
adc
lods
add
lods
in
lret
repz
mov
push
mov
mov
push
cmc
shlb
dec
imulb
mov
imul
xchg
in
clc
popf
dec
fcmovu
cmc
adc
loope
imul
ds
mov
push
cltd
mov
in
fs
inc
pushf
inc
mov
inc
inc
dec
sahf
pop
cs
lret
cmp
scas
fisubrs
fdivrs
shll
push
sbb
div
iret
test
clc
inc
xor
into
mov
cmp
mov
ljmp
shlb
or
clts
push
pop
mov
rol
test
popa
and
or
insb
outsb
mov
leave
or
fwait
in
xlat
or
or
scas
mov
mov
sub
inc
and
test
and
cmp
xor
es
mov
mov
and
testb
sbb
cmpsl
and
jae
stos
push
fldt
pusha
jbe
movsb
cld
fdivrp
sahf
pop
mov
cltd
xchg
out
imulb
inc
aaa
xor
ds
daa
xor
stc
push
mov
dec
and
add
sbb
ljmp
insb
loopne
lock
xor
movsb
pusha
enter
add
push
imul
sub
mov
sub
adc
leave
movsb
and
test
sti
pop
inc
jb
mov
mov
int
cmp
enter
xor
and
mov
pop
inc
mov
xchg
and
mov
ret
popa
mov
push
scas
pusha
or
int
movsl
push
inc
orl
xchg
fldt
xor
pop
test
iret
pop
inc
outsl
call
add
push
dec
jmp
pop
jg
adc
and
or
mov
xchg
sbb
ss
test
mov
sub
out
add
sahf
lods
test
mov
int
es
lock
mov
stc
hlt
sub
js
movsb
mov
jb
xchg
xor
inc
xchg
es
push
xchg
pop
je
mov
push
mov
ss
pop
lock
mov
inc
mov
push
in
and
push
movb
dec
xchg
jg
push
jg
aas
repz
cmp
insb
insl
sti
das
jp
fnsave
xor
add
pop
adc
mov
dec
xchg
dec
jge
xor
lret
aam
icebp
insb
sub
icebp
xchg
data16
ja
inc
push
ds
fldl
jns
aad
dec
scas
jno
mov
jae
cmpsb
cmpsb
in
cmp
into
fmul
imul
jo
push
in
int3
scas
out
push
jp
mov
push
psadbw
loop
xor
xchg
xchg
outsl
stos
cld
insl
mov
mov
inc
adc
jmp
aam
or
pop
xor
pop
push
adc
cli
jg
mov
jo
inc
adc
cmp
int
jp
cld
cwtl
jmp
stc
or
lcall
mov
cmpsl
dec
dec
sub
pop
or
je
add
sarb
addr16
add
jle
pusha
mov
push
cltd
push
sbb
fcomps
pop
cmpsb
sub
push
insb
orl
push
jne
sahf
stos
addr16
gs
jne
imul
inc
sbb
outsl
cmp
fwait
xchg
jl
pop
fadd
mov
add
addr16
and
jecxz
xchg
loop
ljmp
jecxz
add
dec
hlt
mov
mov
lret
dec
jp
or
lock
outsb
mov
push
jecxz
xchg
mov
cmp
stos
outsb
sbb
lahf
fnstsw
push
sahf
mov
je
inc
lods
leave
insb
xchg
icebp
cmovbe
jne
ret
ret
inc
aad
cmp
call
sar
add
stos
xor
mov
or
movl
cmp
fcmovne
adc
mov
shl
test
ja
mov
jns
aaa
shll
test
cmp
icebp
cs
sarl
pop
jg
pop
pop
mov
arpl
fnstcw
fst
cmpsl
lcall
add
and
out
stos
mov
ret
or
outsb
imul
sub
or
int3
std
xchg
sbb
mov
iret
insb
sub
stc
xchg
pop
ljmp
cmpsl
cld
pop
movsl
popf
movq
fsts
sub
or
xchg
jne
das
sub
push
fcoms
and
mov
and
pop
das
fmull
pop
jb
or
or
xor
mov
arpl
call
das
call
sbb
sti
fbld
cmp
jnp
and
loop
mov
add
lahf
mov
pop
or
ja
arpl
sbb
or
sub
std
out
jno
mov
sarl
and
iret
add
add
inc
cmp
out
mov
outsl
and
addr16
push
or
jno
ret
cltd
shlb
push
out
aam
dec
and
push
mov
out
mov
lock
mov
stc
inc
push
or
imul
shlb
arpl
dec
add
sbb
mov
pop
fimull
addr16
in
mov
je
jg
mov
insl
imul
cmp
and
inc
jmp
add
xchg
cmc
dec
push
lods
inc
xchg
sub
inc
test
jle
cwtl
or
or
loop
repz
sbb
inc
sbb
sub
adc
sbb
add
jmp
jne
test
lock
jo
mov
clc
aas
xchg
or
add
mov
es
add
cltd
adc
rcpps
ss
cmc
jmp
add
icebp
popa
cmp
daa
je
sub
cmpsb
das
adc
xchg
fldz
mov
push
packsswb
out
add
add
mov
jno
subl
pusha
jl
rcll
jle
cmpsl
rorl
out
jo
shrb
inc
cmpsb
daa
sbb
sbb
fadd
push
dec
pop
xchg
pop
pop
pop
or
dec
and
cmc
lock
mov
dec
dec
sbb
mov
dec
dec
dec
rep
xchg
sti
imul
out
mov
sti
mov
pop
mov
xlat
mov
pop
js
loopne
mov
cmpsb
or
add
push
cltd
jbe
out
sbb
mov
shll
out
xor
sbb
mov
icebp
xchg
sub
xchg
outsb
adc
pusha
fldl
cld
popa
lret
cs
scas
push
and
xchg
and
loope
test
les
fwait
xchg
flds
movb
loopne
mov
pushf
idivl
pop
shrb
mov
or
imul
mov
movsb
out
and
xchg
movsb
es
out
insb
adc
jo
jo
add
test
push
adc
clc
lcall
dec
mov
hlt
test
fisttpll
mov
adc
out
xchg
inc
test
mov
xor
sbb
mov
ret
jo
xlat
jns
push
xchg
divl
nop
movsb
jecxz
or
cld
xchg
pop
sti
lods
arpl
and
mov
outsb
out
jb
clc
cmp
mov
pop
jmp
loope
stos
cmc
mov
lods
inc
push
mov
dec
mov
lods
and
lds
leave
dec
mov
bound
dec
push
xchg
mov
insl
subb
pop
push
and
shrb
ss
cmc
jnp
mov
lock
mov
cwtl
cmp
popf
in
xchg
cmpsl
fsubl
mov
cwtl
rorb
js
data16
cmp
xlat
mov
out
pinsrw
push
int
adc
shll
daa
jo
dec
hlt
mov
in
faddl
bound
jmp
movsb
test
mov
ss
int
fucomp
push
mov
lea
pop
fwait
scas
scas
cltd
repnz
rcll
jg
cli
leave
push
aas
jo
lods
test
out
lahf
int3
mov
adc
arpl
fcoms
sbbb
out
xor
orl
cmp
data16
lret
mov
fisubs
daa
addr16
xor
outsb
jae
inc
and
mov
into
fs
jns
rcrb
les
stc
pop
enter
lea
inc
push
jle
adc
aas
sbb
xchg
imul
mov
or
lret
sub
subb
insl
xor
mov
inc
shll
popf
leave
aad
je
out
xchg
pop
sbb
or
fbld
push
mov
xchg
std
push
sub
push
adc
stc
sub
mov
nop
out
insl
cld
fisubrl
pop
into
push
dec
or
fsubrp
sbb
sbb
data16
sub
sbb
lret
js
pop
pop
inc
and
fsub
dec
adc
xchg
fisttpll
mov
mov
sahf
cmp
add
divb
cwtl
xor
aaa
mov
movsb
or
xor
push
mov
loopne
mov
inc
mov
mov
and
aaa
pop
xor
in
movsb
mov
outsb
xchg
lahf
sti
popl
shll
xorl
jnp
aam
and
out
push
xor
push
dec
hlt
sahf
adc
and
inc
xchg
sub
fldcw
ja
push
mov
mov
push
mov
dec
push
xchg
add
subl
out
push
addb
and
mov
stc
mov
lret
add
sbb
fsubl
mov
rclb
lahf
xchg
addl
rol
arpl
or
out
xor
mov
lds
outsb
insl
push
xor
mov
adc
xorl
push
in
out
jae
fdivp
test
or
cmp
mov
pop
cwtl
les
lret
in
push
cmp
mov
mov
push
fsub
lods
inc
mov
sub
imul
sub
mov
sbb
add
aas
pusha
jo
xor
xor
int3
xor
sub
das
mov
into
hlt
xchg
shrl
mov
jo
outsb
mov
rolb
jb
mov
sub
or
jns
push
push
sbb
into
dec
mov
imull
fs
add
mov
ret
loopne
insl
sahf
shl
aas
mov
sbb
mov
ror
push
jne
test
movsb
pusha
inc
imul
mov
lock
mov
push
arpl
mov
xchg
mov
test
push
mov
xchg
mov
inc
leave
pop
icebp
cmp
mov
cmpsb
jo
push
into
lods
iret
xor
pop
xchg
scas
cmp
mov
add
jae
mov
push
sbb
push
mov
mov
dec
jae
insl
cwtl
xor
lds
rorb
xlat
lcall
sahf
fcom
leave
push
scas
test
std
mov
add
fcmovb
sahf
inc
test
sub
inc
push
push
add
aad
cmp
xchg
enter
call
negb
test
cmp
pop
imul
and
mov
mov
out
lock
mov
js
hlt
lcall
pushf
mov
pop
aam
out
push
sbb
les
mov
sti
cwtl
adc
sbb
imul
ret
lods
idivl
dec
add
add
cs
mov
in
rcll
inc
cmp
sahf
rol
das
mov
scas
lods
in
mov
ljmp
and
mov
leave
lods
subb
dec
xor
fdivrl
and
dec
stc
loopne
dec
loope
imul
and
insl
pop
dec
dec
clc
stos
sti
aas
out
adc
cmp
mov
dec
repnz
movsb
hlt
lds
xor
test
stos
pop
mov
pop
jge
xlat
jp
mov
pop
outsl
shlb
shll
mov
lea
jmp
jne
out
cmp
gs
jg
inc
leave
mov
sub
into
xor
test
xor
add
pop
add
cmp
sbb
cmp
inc
sti
imul
pop
dec
mov
inc
push
mov
add
fnstcw
jae
testb
pop
push
mov
stos
scas
test
cs
dec
mov
push
lods
jns
and
pop
cmp
mov
pop
dec
into
sub
imul
cmp
call
sahf
dec
shll
nop
pfrsqrt
mov
jbe
imul
test
inc
out
hlt
iret
addr16
mov
push
movb
pop
jb
jns
push
cmp
cmp
sub
dec
test
pop
cmp
sbb
add
daa
outsl
mov
call
enter
lahf
ror
cmp
sub
push
rcl
ljmp
jg
adc
lock
les
ret
daa
pop
dec
jns
jae
scas
sub
loop
sahf
pusha
loop
cld
setp
gs
mov
popa
bound
cli
ret
fsubs
pop
mov
push
pop
add
pavgb
ret
frstor
cmp
lea
push
push
daa
dec
cmpsl
popf
cmp
movb
aaa
popl
sar
dec
mov
ret
adc
leave
cltd
es
push
xlat
clc
sbb
jno
imul
ss
pop
aad
jl
mov
sub
sub
pop
dec
imul
xchg
imul
pop
xor
xchg
jp
scas
or
out
iret
push
mov
loop
roll
xchg
loopne
adc
sub
cmp
xor
pop
mov
aam
daa
ror
jp
xor
sub
adc
cmpsl
jmp
dec
xor
fnstenv
xchg
sbb
mov
ja
adc
in
jge
js
sub
sahf
das
out
pop
clc
stos
cmpsb
pop
sbb
sbb
lods
stos
or
sarb
inc
dec
mov
rorb
insl
push
jnp
xorl
gs
out
repz
test
or
insb
push
and
in
fwait
push
lcall
push
ret
popf
sarl
jne
mov
xchg
lods
nop
pop
movl
push
popf
mov
lahf
jmp
mov
call
push
shrl
and
inc
roll
push
cwtl
addl
int3
or
push
pop
adc
xor
mov
aas
mov
sub
orb
mov
shrl
pop
call
pop
jmp
popa
dec
mov
push
into
pop
scas
imul
jecxz
std
pusha
insb
mov
mov
dec
loop
repnz
inc
jbe
or
mov
out
scas
ret
xchg
ficomps
mov
mov
mov
mov
dec
jne
push
xchg
lods
test
hlt
adc
nop
mov
ss
idivb
adc
dec
bound
push
cmp
adc
ss
movsb
lds
out
int3
imul
pop
sbb
lods
data16
fistpll
iret
aaa
mov
inc
insb
out
mov
scas
aad
xor
mov
testb
out
movsl
cmp
in
fwait
mov
dec
inc
add
mov
pop
sub
add
out
or
push
xlat
aaa
jnp
jno
cmpsb
mov
cmc
test
imul
loope
rolb
xchg
jno
mov
pop
sub
xchg
sar
mov
jmp
das
gs
xor
or
xorl
fisttps
outsb
loopne
mov
add
mov
pop
stos
lods
xor
insb
cmp
shlb
xor
xor
pop
lock
cmp
daa
add
push
lods
stc
dec
jl
fldt
mov
mov
dec
mov
mov
std
add
insl
mov
xor
adc
rcll
daa
paddsb
out
int
gs
dec
aam
cmp
adcl
ja
push
mov
call
decl
xchg
add
add
adc
repnz
loopne
mov
cmp
xor
mov
popf
xchg
push
arpl
mov
jecxz
in
loope
aad
repnz
cmc
and
add
cmc
jge
out
test
or
andl
movsb
mov
ret
adc
dec
out
xchg
mov
pop
stos
dec
sub
and
loope
sbb
cwtl
sbb
mov
dec
movsb
push
xor
hlt
lret
in
sbb
pop
notl
aas
mov
mov
lahf
adc
push
loop
gs
sbb
sbb
pushf
ficompl
sbb
or
jl
mov
pushf
mov
or
push
add
repnz
notb
jae
std
add
sub
fcmovbe
inc
cmc
push
aam
mov
sub
rorl
xor
xorl
and
in
frstor
in
jnp
cmp
rcrl
bound
cld
sbb
cmp
sbb
pop
push
dec
or
fsubrl
das
pop
mull
inc
push
loope
fisttpl
jle
or
sbbb
iret
roll
jb
les
lea
adcl
or
sbb
xor
and
testl
and
jge
and
cs
pop
push
add
jns
fstpt
mov
cmp
sub
les
sbb
cmp
sahf
jg
arpl
sub
or
sub
push
and
and
add
sub
rol
inc
or
mov
mov
roll
sub
jecxz
andb
ret
mov
inc
fwait
xorl
ss
sub
scas
das
push
xor
mov
out
push
in
daa
shrl
dec
push
and
cwtl
or
cmp
and
cltd
mov
out
add
jne
xchg
loope
cmp
jae
loopne
inc
pop
push
mov
test
jmp
xchg
xor
cmpsb
jecxz
cmc
push
addr16
nop
cmp
cwtl
xlat
jne
and
insb
and
imul
imul
sbb
xchg
lret
mov
fldenv
in
cmc
in
lcall
dec
push
mov
or
add
jno
mov
rcl
cld
clc
cmc
mov
gs
je
fisubl
loopne
add
adc
push
push
out
jns
push
movsb
imul
test
int
movsl
mov
sub
inc
or
aam
inc
addr16
test
adc
add
pop
mov
sub
scas
pop
xor
cmp
inc
mov
jle
cmp
cltd
js
mov
mov
mov
mov
mov
pop
fsts
sbb
jp
incb
jl
sarb
xchg
or
mov
add
xchg
mov
inc
add
ret
loopne
movsb
arpl
adc
in
std
mov
push
popa
sub
out
push
aam
cmpsl
sahf
aas
jno
jne
loope
xor
jmp
jp
in
test
cltd
sub
leave
xchg
popa
add
xor
fistps
add
mov
mov
roll
mov
jecxz
lret
movsl
xchg
xor
mov
push
pop
pop
add
pushf
dec
sti
mov
pop
cs
xchg
lahf
les
xchg
lahf
fdivr
and
lahf
sbb
sbb
not
xor
push
mov
fisubrl
push
push
and
and
js
sbb
mov
mov
xchg
mov
arpl
pushf
call
daa
cmp
ja
inc
fisttpll
xchg
and
rcr
mov
inc
xchg
ja
fisubs
test
or
xchg
cmp
fsubs
aaa
iret
sub
xor
divb
scas
sbb
js
sti
mov
pop
mov
sub
fsubl
dec
pop
imul
stos
sub
mov
pop
xor
mov
out
xchg
stos
addr16
leave
mov
ret
cld
sbb
mov
adcl
and
sub
std
outsl
cld
cltd
dec
cwtl
inc
lret
cmp
out
mov
xchg
and
out
push
mov
mov
add
pushf
cwtl
jbe
adc
cmp
sti
arpl
xor
mov
mov
adc
mov
stos
sbb
bound
dec
pop
lret
or
mov
sub
into
aam
or
mov
test
jp
or
push
out
cmp
in
push
mov
or
or
adc
jmp
jg
cmp
enter
test
cmpsb
arpl
pop
rcrl
into
xor
std
aad
inc
nop
cmp
ror
sub
sete
shl
test
dec
cmp
mov
shrl
aad
add
outsb
fldl
add
sub
push
mov
stos
xchg
or
les
pop
mov
cmp
xchg
inc
add
shlb
xor
inc
aad
out
mov
fadds
xor
es
or
div
les
inc
cmp
add
rolb
mov
mov
fwait
lret
pop
cmp
pop
pop
xor
jp
mov
mov
pusha
xchg
lea
push
out
mov
cmc
mov
adc
inc
add
inc
sarl
call
sub
shlb
mov
jle
lret
sub
xchg
idivb
movb
jbe
sbb
and
xchg
mov
pop
dec
scas
adc
mov
shlb
dec
nop
inc
mov
lock
aam
movb
in
push
cld
repz
subb
addr16
std
dec
push
gs
add
out
pusha
pop
mov
xchg
jns
add
out
mov
dec
cmp
out
adc
cltd
mov
sub
pop
add
mov
mov
xchg
sbb
xor
loopne
xorl
mov
std
sahf
pop
lock
outsl
add
out
arpl
mov
cmpsb
rcrl
add
or
jecxz
arpl
popf
sbb
fsubl
or
lock
xor
in
push
sub
test
xor
sti
int3
or
hlt
cli
jmp
xchg
cld
cmp
or
xchg
lods
fisttpl
inc
jno
aad
inc
ret
aaa
pop
int
adc
dec
mov
dec
sbbb
frstor
push
fstpl
and
mov
out
mov
pusha
dec
push
fsubl
fidivrl
movsl
pop
dec
int3
xchg
push
mov
inc
sub
inc
mov
lret
test
xchg
leave
mov
cmp
mov
div
mov
outsb
and
or
mov
iret
imulb
jo
shll
int3
and
dec
sub
jecxz
inc
push
pop
push
pop
adc
inc
mov
cmovno
js
push
pop
lahf
fstps
cltd
cmp
mov
or
sub
xchg
push
inc
push
mov
popf
pop
mov
pop
sub
pop
xor
pop
stos
jbe
scas
mov
cmpsb
scas
dec
ret
push
adc
popf
inc
icebp
and
out
ret
in
or
jb
mov
jnp
mov
out
cmc
sbb
pop
test
mov
pop
pop
inc
pop
popa
add
inc
add
inc
jmp
clc
xchg
addr16
cs
dec
lea
dec
xor
ss
mov
adcb
sbb
xchg
or
dec
div
rcl
xchg
xchg
pop
xor
push
repz
sub
adcb
sbb
inc
pop
sub
mov
stos
dec
add
and
jmp
pop
cltd
movsl
push
les
lcall
mov
xchg
or
sbb
in
jp,pn
shr
mov
adc
adc
pushf
xchg
or
call
pop
mov
int
addr16
lret
mov
pop
mov
dec
imul
imul
inc
int3
icebp
jne
aas
rclb
jle
xor
mov
fs
mov
xchg
mov
xchg
cmp
sub
loope
icebp
cmpsl
jo
addr16
xchg
arpl
and
cmp
aas
mov
ss
fstpt
sbb
insl
xlat
movsb
aam
and
xchg
aas
cmp
jp
popa
mov
fimull
pop
in
mov
xor
rcrb
nop
popa
pushf
mov
jo
sbb
mov
inc
jo
jb
insl
adc
shrl
push
movsl
test
out
movb
lret
nop
ljmp
xor
push
mov
movsb
adc
push
cmp
pop
mov
cmp
jno
dec
push
xchg
mov
inc
sti
aas
cmpsb
imul
mov
adc
mov
dec
dec
into
push
int
movsb
nop
sbb
pop
fcompl
and
sbb
mov
test
jp
mov
pop
nop
mov
sbb
ret
pop
jne
ss
in
fnstenv
in
movsl
jecxz
pop
sahf
lret
dec
mov
mov
outsl
xor
repz
or
mov
das
sub
pusha
jns
cmpsb
cmp
or
jg
pop
xor
pop
cmp
in
cmpb
gs
mov
test
iret
icebp
in
push
xor
fldl
jle
and
sbb
dec
loop
cmp
lahf
hlt
xchg
fldenv
inc
xor
clc
push
mov
pop
sbb
sahf
pop
add
sbb
outsl
in
pushf
mov
and
or
jmp
repnz
jmp
mov
pop
stc
mov
test
add
jmp
jl
outsb
nop
and
pop
clc
add
mov
movl
std
sbb
mov
add
test
cs
push
subl
insl
mov
call
pop
and
push
jnp
xor
out
add
adc
jl
fisubl
outsb
insb
mov
out
mov
sbb
out
sbb
int
mov
pusha
jg
dec
pop
test
clc
pop
jle
mov
std
lods
jmp
ss
ds
and
sub
mov
adc
mov
jne
shll
mov
fimull
aas
xor
mov
add
push
or
fsubs
xchg
pop
cmp
mov
lods
mov
enter
fnstcw
inc
sti
pop
mov
test
ljmp
jp
cwtl
stc
mov
ja
dec
test
addr16
mov
pop
std
xchg
rorl
sbb
inc
sbb
in
sub
cmpsb
cwtl
lahf
ds
jl
lds
fdivl
xchg
push
fdivl
lock
ror
dec
cmp
mov
inc
lock
in
notb
into
or
shl
sbb
pushf
shrl
jg
add
int
cmp
sub
push
sbb
fdivr
pcmpgtw
xchg
sahf
inc
dec
sbb
sbb
sbb
xor
ljmp
jns
mov
rcrl
or
sub
in
xchg
push
popf
jl
mov
call
sub
jp
or
lods
imulb
lret
ja
test
mov
push
repnz
es
rcrl
mov
adc
xchg
mov
lock
xor
pop
dec
mov
test
outsl
hlt
mov
movups
aad
adc
mov
shrl
adc
icebp
movsb
iret
dec
mov
mov
push
jmp
popl
shr
xchg
adc
dec
ud0
movsb
push
fmuls
mov
pop
cmp
movmskps
into
outsb
aaa
add
iret
cld
fdivrl
jg
addl
mov
mov
inc
jge
aad
lds
adc
fucomp
mov
inc
xchg
sti
scas
pop
push
int
addr16
sti
aas
mov
xchg
mov
push
push
pop
insb
dec
push
test
xchg
test
das
pop
cld
insl
cmp
es
scas
shlb
clc
and
dec
movsb
mov
jb
mov
push
inc
inc
mov
mov
add
icebp
sub
cmp
mov
push
sbb
sbb
dec
jecxz
mov
jno
jb
loopne
adc
fdivp
fistpl
mov
pop
xor
int
push
push
jge
cmp
dec
add
and
cmp
int3
into
sbb
cwtl
test
jecxz
push
movsl
xlat
cmp
push
subl
test
and
les
faddl
stos
or
jb
sub
xchg
aad
jg
std
loope
outsb
push
and
sbb
sahf
adc
mov
or
mov
bound
add
push
adc
ss
add
push
js
lock
lcall
loop
xchg
popa
in
mov
scas
into
mov
repnz
fistpl
push
aad
dec
pop
jmp
mov
inc
push
dec
jb
lds
inc
ss
jo
clc
inc
jo
and
or
lfs
push
mov
push
add
adc
int3
pop
inc
in
cmp
ret
mov
xor
jg
sub
movsl
addr16
icebp
add
dec
dec
rolb
out
sub
outsb
lret
push
adc
aaa
push
add
imul
inc
push
mov
mov
call
and
push
pusha
adc
push
xchg
pop
cmpsb
test
adc
iret
adc
test
loopne
leave
cs
arpl
cld
push
inc
sbb
xchg
pushf
inc
xchg
pop
and
jbe
xor
or
fcomps
mov
xchg
sub
loope
push
sbb
xchg
je
pop
jo
std
gs
add
mov
stos
arpl
jp
rcl
sub
jb
pop
cmp
fucompp
xchg
mov
inc
inc
fisttps
pushf
sub
adc
jp
popf
imul
loopne
fcmovb
xor
roll
push
push
sbbl
jne
in
inc
aas
xchg
int3
flds
jmp
mov
je
jl
outsl
cmp
mov
clc
popf
pop
jecxz
pop
adc
hlt
inc
inc
fwait
cmp
imul
ja
xor
jbe
jecxz
mov
fildll
sets
es
adc
mov
dec
cmpb
js
call
dec
adcb
rcrb
fiaddl
pop
pop
arpl
push
test
pusha
fwait
mov
mov
mov
inc
push
sbb
cltd
cmpsb
cwtl
imulb
ret
mov
push
cmp
xor
outsl
negb
leave
int
lods
daa
in
repz
in
lods
push
das
pop
and
cmp
inc
das
push
rclb
sbb
aam
movsb
shr
fsubrl
mov
fisttpll
pop
cli
inc
in
addr16
pop
das
fwait
imul
xor
pop
and
repnz
xchg
mov
imul
sbb
iret
popa
jmp
mov
xchg
mov
xor
jb
mov
ds
cmpl
xchg
test
adc
das
lret
mov
sub
cltd
jae
pusha
rcrl
adc
or
pop
and
iret
lcall
xor
mov
jne
adcl
dec
jl
mull
scas
incb
cmp
xor
jl
add
insb
nop
mov
pop
mov
mov
push
push
push
inc
jns
movsb
cmp
inc
mov
ds
xlat
inc
fwait
insb
mov
mov
ja
shll
in
mov
mov
aam
data16
mov
ss
and
mov
xchg
les
and
aad
push
das
ljmp
mov
jo
fcomi
ds
fwait
xorl
pop
jl
mov
lret
inc
inc
pop
movsb
xchg
mov
sub
repz
xchg
scas
sbb
rorb
cmp
mov
pop
add
sbb
cmpsl
xlat
jb
push
add
sub
adc
xor
push
hlt
int
pop
cmp
shrb
cmp
rcrl
shll
adc
mov
push
mov
shlb
ds
cmp
ljmp
lret
movsl
hlt
imul
xchg
pop
and
pop
pop
inc
cmp
testl
xlat
xchg
mov
shlb
add
test
sbb
clc
jecxz
fdivl
into
loope
push
addr16
call
cmpsb
push
int3
dec
mov
ret
mov
xchg
arpl
pop
cmp
mov
outsl
sub
xchg
jg
insl
xchg
pop
sub
mov
std
repnz
in
ret
jmp
das
xlat
shlb
add
popl
and
mov
mull
inc
inc
xchg
aaa
stos
mov
fwait
pop
nop
daa
lcall
jnp
ljmp
cli
test
and
xchg
cmpsb
dec
jle
mov
mov
xor
aam
jg
adc
xor
xor
xor
cwtl
and
shrl
add
imul
mov
decb
scas
jb
mov
lods
enter
mov
cmp
lahf
sbbb
mov
jne
adc
fisttpl
lock
xchg
xchg
out
mov
inc
enter
imul
sbb
mull
popf
jl
mov
ljmp
mov
mov
sub
xchg
insl
pop
pop
aam
bound
add
shl
xchg
mov
insb
inc
mov
cwtl
mov
push
out
inc
nop
out
popf
loope
xchg
test
pop
lods
inc
jne
mov
adc
jecxz
xchg
imul
fucomip
das
enter
aam
pop
lods
push
push
out
mov
adc
in
shll
xchg
orb
jno
jecxz
je
addr16
aaa
pop
pop
mov
addr16
mov
mov
mov
lods
xchg
mov
mov
adc
xor
mov
ljmp
mov
xlat
xchg
xor
mov
sbb
outsb
arpl
xor
bound
ret
jge
in
aaa
mov
sub
xchg
push
je
xchg
adc
or
jno
sti
sahf
mov
sbb
lods
push
mov
movl
dec
data16
push
dec
bound
or
and
jbe
lock
je
icebp
loop
jb
aaa
mov
in
mov
xor
lahf
jmp
jb
jbe
les
orl
repz
loop
mov
push
sub
xor
in
cli
je
mov
cwtl
scas
xchg
push
stos
adcb
cmp
movsb
pop
ljmp
ljmp
jle
call
jo
clc
cmp
dec
mov
pop
int3
ja
fs
inc
xchg
sub
clc
cli
ret
inc
pop
stos
roll
in
and
and
or
inc
push
push
jae
lahf
pop
pop
clc
sbb
mov
out
or
fbstp
add
aam
vmovdqa64
loope
mov
jb
pop
fst
xchg
sub
adc
cmc
mov
push
jbe
shll
or
outsl
inc
push
jns
jns
mov
pop
cmpsl
fcoml
insl
push
sbb
mov
shrl
cmp
imul
mov
mov
es
cld
push
icebp
cmc
hlt
jle
mov
out
out
adc
or
xlat
ds
inc
jb
outsb
loope
clc
dec
lods
pop
shrb
and
sub
cli
dec
out
enter
jl
cmpsb
push
outsl
ljmp
adc
shr
test
jne
int3
or
fsubrs
push
push
jl
or
sub
shlb
test
lds
jmp
mov
cs
leave
cmp
mov
ljmp
dec
adc
mov
rcrb
pop
mov
jecxz
sbb
inc
mov
jecxz
sub
fmull
xchg
push
or
pop
je
push
and
aam
pop
xchg
test
fidivs
jnp
jmp
daa
mov
mov
int
int3
pop
and
inc
dec
sbb
movsl
mov
push
mov
adcl
stc
popa
das
jle
iret
je
jno
xchg
cmp
lea
or
cld
hlt
movsb
pusha
ljmp
sub
or
lret
fisubrs
in
xor
loop
into
cmpsb
xorl
int
pop
cltd
daa
je
cmpsl
mov
lcall
xchg
mov
shl
lock
scas
fwait
stos
cwtl
pop
fdivr
icebp
jecxz
mov
lcall
sarb
daa
mov
and
scas
mov
rorl
pop
jge
push
popa
xchg
inc
add
outsl
xor
sbb
rclb
or
mov
pop
sbb
insl
jne
sar
mov
sub
push
xchg
mov
dec
inc
adc
jb
jbe
push
xor
mov
in
incl
mov
dec
jo
aas
pop
in
loopne
out
push
pop
sub
orb
std
cld
sarb
push
ljmp
push
pushf
mov
and
adc
xchg
inc
mov
int
sub
and
mov
mov
or
adc
mov
fiaddl
xchg
lret
pop
jno
fisttps
xor
test
mov
mov
jnp
clc
and
mov
test
repz
cmpsl
cmp
mov
xchg
cltd
push
pusha
inc
jbe
mov
cld
dec
mov
clc
call
outsl
cmp
mov
mov
or
jns
xlat
push
out
testl
repz
es
mov
xchg
pop
lods
xor
jecxz,pn
mull
sub
data16
add
xchg
out
ja
mov
xor
repz
jnp
mov
lods
and
test
out
rorb
mov
rcrb
ret
testl
sub
fbstp
mov
cmpb
gs
jo
repnz
stos
cmpsl
dec
jbe
add
test
scas
pop
or
scas
es
add
and
or
rcrb
xchg
icebp
pop
cs
leave
mov
test
out
mov
outsl
or
push
test
xchg
loope
imul
and
scas
mov
icebp
add
into
insb
sahf
or
pop
daa
sbb
add
repnz
or
aas
int3
adcb
call
movl
arpl
jle
cs
inc
sbb
jmp
jb
ja
out
or
fidivrl
mov
jecxz
push
ret
jo
mov
daa
les
mov
cli
out
repnz
jnp
cmp
stos
lahf
in
sub
and
jp
mov
es
sarl
jmp
xchg
push
popa
push
add
jnp
pop
sti
orb
iret
repz
xchg
pop
mov
ja
push
xchg
pusha
xlat
or
pop
cmpsl
orb
loopne
sub
mov
xchg
and
scas
arpl
sbb
mov
data16
movsl
dec
pop
fdivl
dec
push
sbb
rol
scas
sub
cs
add
dec
mov
daa
push
hlt
mov
rorb
ret
cmpsl
xchg
xchg
or
push
in
sub
xor
jne
cli
lea
dec
adc
xor
jns
sbb
out
js
ret
insb
push
shlb
cmc
cmc
push
jb
mov
xchg
and
xor
addb
xchg
inc
scas
jns
aad
mov
push
rorl
test
sbb
hlt
ss
adc
add
fstl
aad
sub
pop
push
dec
mov
imul
mov
cmp
push
mov
xor
jp
sti
xchg
inc
dec
scas
mov
ja
stos
adc
sub
je
xor
and
cmp
nop
data16
adc
adc
push
fstps
add
xlat
push
sbb
popa
dec
pusha
out
and
lret
mov
xchg
inc
cltd
add
and
rcr
sti
cld
sbb
lods
or
inc
dec
test
and
movsb
outsl
popl
inc
enter
aas
cmp
fistpll
adc
orl
icebp
mov
adc
and
ljmp
icebp
popa
roll
cmp
incl
jge
adc
mov
adc
shrb
pop
mov
test
jp
das
sbb
clc
mov
test
unpcklps
in
add
lret
mov
mov
xchg
push
cld
sahf
xor
cwtl
insb
shlb
adc
bound
pop
pop
xor
jne
mov
or
arpl
xchg
sbb
xchg
inc
push
or
and
dec
xor
xor
and
stc
frstpm(287
pop
mov
cltd
rol
cld
mov
lea
aas
xlat
mov
aad
in
imul
std
push
mov
ds
insb
outsb
fstpt
pop
enter
lds
mov
push
ret
enter
dec
jnp
pop
push
cmp
or
mov
and
repnz
sahf
in
lret
repz
into
xchg
push
xor
insl
xor
subl
es
loopne
lock
outsb
push
daa
xchg
sbb
aad
jl
jns
pop
push
ret
pop
push
mov
sub
cld
fmul
mov
xchg
add
lds
pop
adc
es
testb
mov
mov
jecxz
adc
ret
and
mov
insb
push
mov
sti
aaa
and
icebp
imul
add
add
or
lds
roll
xor
add
dec
scas
push
cmpsl
xorb
lea
cmp
sbbb
xorl
mov
push
cmpsb
jne
pop
mov
push
xchg
insl
mov
mov
jge
icebp
add
out
divl
test
rclb
pop
push
fwait
ss
mov
ret
stos
push
lret
call
ds
std
lret
mov
inc
stos
mov
inc
cmpsb
leave
cmc
xchg
mov
ds
add
pop
fs
mov
lods
int3
int3
dec
aam
xchg
ja
fsincos
lods
pop
arpl
push
rcrl
inc
cld
pop
fnstenv
jbe
and
cmpsb
cltd
adc
sub
inc
pop
mov
xor
incb
mov
add
insb
ljmp
or
push
dec
ds
clc
in
jecxz
xchg
and
jbe
cmp
outsl
cmp
cmc
jl
or
mov
gs
cmpsb
idivl
jp
lcall
enter
sub
pop
sub
adc
jo
repz
mov
push
aas
arpl
jl
imul
xchg
aam
outsl
in
cltd
and
cmp
mov
dec
push
cmpsl
lret
push
clc
fwait
pop
jecxz
test
pop
xor
xor
cli
loopne
test
cld
ss
iret
jg
mov
and
stos
push
dec
test
mov
inc
roll
pop
sbb
inc
ljmp
mov
adc
sbb
ret
gs
add
test
or
pop
addr16
mov
aaa
test
or
lea
rcrl
movl
add
xor
popf
je
movsb
pop
rorb
rclb
xor
adc
mov
cmp
cld
mov
orb
in
lahf
aaa
fsubs
icebp
add
sbb
pop
dec
mov
and
xor
xor
and
and
cmp
hlt
lods
xor
ja
and
movsl
mov
dec
stos
push
aad
nop
je
adc
push
ds
adc
out
stc
mov
pop
pop
ja
mov
mov
pop
int3
test
mov
mov
pop
add
fwait
jb
movl
std
xchg
ficomps
incl
addr16
xchg
stos
ja
and
es
lods
cld
fwait
sahf
sub
cmp
stos
adc
fiadds
push
or
out
xor
cwtl
cmp
add
jo
scas
imul
push
aaa
or
stc
shl
ror
repnz
mov
scas
pop
dec
lds
mov
mov
arpl
lea
jns,pt
cmpsl
sti
mov
notl
or
popf
push
fsts
std
xchg
cmp
xchg
mov
or
imulb
dec
dec
cmp
xchg
je
cltd
mov
rolb
stos
das
xchg
aas
xor
mov
xchg
icebp
sub
adc
xchg
lcall
pop
xor
xchg
rcrl
pusha
aaa
arpl
into
subb
movsl
xchg
andl
sub
rclb
jb
inc
xor
sub
jp
sbb
test
popa
mov
push
fmull
jno
mov
scas
fisubs
mov
mov
pop
pop
out
lea
or
fstl
cmpsb
aaa
jb
adc
shll
or
cli
mov
xchg
push
into
dec
cli
inc
fstpt
sub
in
lret
and
dec
fcomi
in
gs
or
insb
cmp
mov
mov
cs
fwait
int3
out
lds
inc
andl
and
fcomps
mov
pop
push
je
insl
ja
sub
fwait
ss
icebp
adc
mov
into
mov
dec
xchg
mov
or
sbb
fcoms
xchg
rcrl
xchg
cmpsb
into
pushf
jbe
or
call
sbb
cmp
in
mov
xchg
pop
subl
jb
xor
out
adc
mov
mov
cmp
xchg
neg
std
jecxz
inc
int3
xchg
rclb
inc
and
es
push
xor
call
mov
push
xchg
or
into
sar
mov
add
xlat
push
ss
mov
aaa
push
clc
pop
stos
add
mov
pushf
adc
orl
cs
aas
adc
or
lock
insb
and
stos
es
push
ret
mov
cmp
stos
xor
jle
adc
xchg
mov
sarb
lahf
pusha
movsl
cmp
pop
jo
adc
aaa
test
test
lods
insl
stc
mov
inc
lcall
push
in
inc
js
fnsave
dec
push
push
sbb
mov
xor
sbb
mov
inc
jne
shlb
test
shr
cmp
dec
mov
and
mov
xchg
jne
in
push
stos
push
int3
sub
push
negl
sahf
bound
imul
adc
lret
xchg
xor
rol
loopne
shl
adc
sub
push
jae
push
jns
adc
inc
fadds
cwtl
jmp
jo
sbb
mov
stc
push
xor
sbb
mulb
out
xchg
or
popf
fcmovnb
and
xor
stc
sti
fsubrp
int3
add
xchg
fsubrs
jns
jb
jge
mov
fsubl
pmuludq
or
or
mov
push
sub
pop
loop
or
pop
xchg
and
sbb
stos
inc
bound
xor
dec
push
adc
outsl
xchg
push
pop
dec
mov
sub
addr16
daa
call
ds
adc
jae
call
loop
or
or
sub
fnstenv
or
adc
mov
lcall
cs
lcall
sub
jp
test
mov
pusha
lahf
imul
inc
psubw
pop
mov
stos
lods
repnz
subb
xchg
push
addb
cmc
cmp
aas
xchg
push
push
mov
cmpsl
add
adc
imul
and
mov
or
cwtl
jo
in
lret
daa
mov
test
es
push
js
sarb
loopw
pop
aad
popa
scas
int3
inc
and
push
imul
sub
int
testl
jp
sub
ret
pushf
push
cmpsb
cmp
lahf
fs
add
or
mov
imul
repz
ret
test
cmpsl
mov
aaa
testl
negl
stos
int
lea
iret
adc
ret
jg
push
mov
push
sub
ret
lret
inc
lahf
int3
dec
push
leave
aad
add
popf
rorb
sub
movsl
and
outsb
jb
jmp
cs
movsb
add
dec
inc
sahf
fs
pop
in
inc
sbbl
outsb
pushf
dec
lds
scas
movsb
pop
sub
xor
loop
lret
push
and
mov
daa
ss
xor
mov
out
addr16
jecxz
imul
push
mov
insl
fdivl
mov
mov
and
aaa
adc
mov
or
dec
push
inc
loopne
pop
dec
sub
adc
sub
ja
pop
sti
aaa
fwait
dec
lret
cmpsb
lds
add
orb
mov
push
outsb
sbb
fisttpll
sub
sbb
ja
xor
mov
int
or
aad
jecxz
lea
cmp
sbb
add
cmp
arpl
clc
out
dec
call
sub
hlt
lds
cld
cltd
pop
out
mov
fdivs
stos
mov
ds
or
clc
mov
jo
inc
outsl
push
mov
scas
add
adc
pop
lods
in
ret
mov
fildll
les
call
and
shl
xchg
in
imul
mov
and
mov
mov
sbb
xor
shl
cmp
jnp
das
dec
and
roll
xor
inc
push
jecxz
push
mov
xchg
iret
das
in
imulb
mov
xor
add
repz
xor
xchg
ja
push
imul
add
adc
push
xchg
and
add
dec
cmovs
in
dec
jmp
mov
leave
mov
sub
movsl
scas
insl
sub
sbb
aaa
rorl
and
cwtl
jecxz
arpl
and
push
xchg
loope
stos
js
mov
mov
ja
out
mov
sub
jp
sub
or
adc
mov
push
movsb
cwtl
aas
jp
in
mov
mov
out
mov
and
jp
cltd
ja
aam
ja
lahf
mov
add
in
fisttpl
xchg
adc
jmp
sbb
mov
sbb
lods
jo
or
lock
dec
orl
mov
add
jecxz
lods
jg
adc
pushf
loopne
fs
inc
cmp
jge
pop
mov
push
daa
gs
fnsave
stos
dec
cmp
fistpll
cs
cmp
addr16
mov
test
aaa
fisttpll
adc
icebp
shrb
xchg
cwtl
sbb
or
mov
mov
sub
mov
pop
mov
fcoml
mov
pop
xchg
sub
stc
xchg
mov
lcall
inc
push
inc
or
mov
in
in
call
loop
es
pop
andl
cmpsb
pop
bound
aad
loope
aaa
push
fs
out
stos
sbb
jb
jp
inc
xchg
mov
mov
adc
mov
fs
sub
fst
dec
push
fdivl
cs
add
test
cmpsl
orl
jne
fiaddl
adc
jg
adc
nop
in
pop
leave
jbe
inc
out
mov
pop
xchg
xchg
arpl
cli
cmc
fstpt
and
add
xchg
lret
or
out
in
cmp
push
and
pop
cmpsb
dec
mov
cmp
push
insb
fldenv
mov
test
mov
aad
inc
dec
inc
cmpb
push
in
sub
out
enter
dec
xchg
xor
gs
cld
jb
dec
add
and
je
pushf
loopne
cltd
mov
mov
pop
loop
xchg
or
or
fwait
xor
enter
out
sub
leave
loope
and
popf
mov
lret
push
les
cmc
add
mov
push
cmp
ss
aad
mov
add
adc
push
sbb
xchg
dec
cmp
jns
pop
hlt
push
in
add
jno
xor
xchg
hlt
fldz
cld
rclb
mov
jae
adc
mov
xchg
cmp
mov
arpl
jnp
add
mov
xor
cltd
jmp
mov
or
mov
mov
adc
nop
fwait
mov
rcll
dec
scas
and
sbb
test
jo
mov
dec
testl
jle
shll
popa
jmp
inc
cmpsb
nop
in
mov
lods
gs
sar
andl
je
scas
inc
lret
mov
dec
mov
dec
rcll
add
pop
mov
pusha
bound
rcrl
dec
dec
dec
inc
mov
jp
xor
jge
dec
or
loop
push
test
jmp
pop
pop
stc
mov
pop
outsb
inc
cmpsb
mov
dec
scas
cwtl
test
fcmovne
divb
or
push
push
jae
bound
mov
xchg
push
or
nop
lock
andl
xlat
repz
je
addr16
ja
arpl
movsl
insl
cmp
xchg
inc
jecxz
jnp
push
data16
cwtl
out
addb
adc
or
les
mov
test
les
mov
adc
or
test
call
inc
fs
fcompl
divl
inc
ja
cmpsb
xchg
negb
adc
into
inc
jb
aad
dec
pop
adc
and
mov
rclb
repz
mov
inc
icebp
xor
shrl
ljmp
out
in
mov
pop
xor
and
loope
shll
inc
mov
leave
movsb
sbb
lahf
clc
mov
and
sub
js
adc
fcmove
mov
cmp
scas
ds
push
lods
into
add
shlb
cmp
xor
cld
xlat
fcomps
mov
andb
lret
gs
sahf
leave
imul
xchg
inc
hlt
jle
and
shrb
lret
das
ret
mov
repnz
sub
aaa
test
pusha
bound
push
pushf
inc
adc
shll
icebp
movsb
mov
icebp
lds
xchg
jge
sbb
mov
jmp
loop
jmp
pop
fisubs
adc
adc
add
hlt
xchg
pop
adc
mov
addl
dec
lds
mov
loope
adc
lret
cmpl
rolb
int
sbb
xchg
les
adc
pop
mov
in
or
jl
dec
cld
sahf
xor
lock
punpckldq
xchg
pop
mov
scas
xor
mov
sbb
bound
ret
lods
movsl
mov
inc
and
repnz
stos
dec
jmp
adc
xchg
daa
imul
out
jne
xchg
aaa
mov
test
movsl
jno
xchg
sub
pusha
mov
sbb
sub
jge
xor
dec
imul
xor
push
xor
cmp
xchg
je
pop
cli
mov
lds
xor
mov
cmpsb
inc
mov
nop
sub
rorb
and
ljmp
mov
xchg
xchg
ja
push
add
adc
fucomi
jns
and
bound
cld
insb
and
outsb
scas
mov
push
pop
xorl
sbb
lret
out
pop
negl
lds
addb
cmp
pop
je
push
sahf
call
gs
lods
xchg
xchg
cwtl
ficoml
cmpsl
mov
rcl
adc
dec
jle
push
das
lds
ljmp
xchg
or
inc
cwtl
sub
adc
push
adc
mov
iret
sub
test
repz
xor
sbb
inc
cmp
outsl
cmp
stos
sahf
sub
mov
or
js
out
push
bnd
inc
repnz
mov
jmp
mov
stos
clc
in
add
cmpsb
adc
adc
pop
nop
and
mov
std
jmp
orb
jp
xchg
pop
shlb
mov
mov
out
xlat
push
inc
aad
cmpsl
or
xchg
rcll
jl
and
push
jbe
cltd
add
cmp
mov
mov
push
ds
jno
jae
mov
mov
jb
mov
pusha
sbb
out
popf
fiaddl
jno
dec
mov
mov
mov
xor
mov
imul
stc
cwtl
aaa
jg
pop
cmpsl
out
repnz
add
mov
out
mov
dec
lret
push
and
jl
jo
dec
sub
and
lods
dec
daa
mov
stc
or
xor
mov
mov
push
pusha
jle
sub
lea
fists
push
cmp
fistl
shlb
pop
sbb
imull
sbb
and
pusha
enter
cli
dec
in
std
pop
test
mov
inc
mov
mov
stc
dec
or
aaa
xchg
or
loopne
ds
arpl
lret
repz
outsb
out
sub
lods
addb
dec
pop
inc
push
ret
inc
std
dec
lods
add
pop
mov
xor
mov
loopne
enter
dec
inc
lods
add
pop
sub
bound
mov
mov
mov
inc
icebp
adc
movsb
jae
inc
mov
or
leave
cmp
mov
mov
mov
loop
jnp
pop
jns
sbb
xchg
adc
cmp
mov
add
pushf
or
out
cmp
jecxz
cltd
stc
imul
test
pop
loopne
test
jo
dec
pop
dec
lea
cltd
jo
xor
popf
or
loope
out
into
push
ds
xor
and
in
xchg
sub
inc
fwait
testl
inc
inc
cwtl
test
push
xchg
mov
stc
or
cmpsb
xor
in
add
cmpl
sbb
out
nop
insb
push
arpl
adc
pop
push
pop
sbb
sub
push
rclb
mov
pop
rclb
pop
ss
sar
lods
lods
repnz
cs
adc
adc
ljmp
pop
in
cmpsl
nop
cmp
orb
mov
pop
dec
inc
cmp
rorb
adc
cmpsl
xor
mov
sub
sbb
mov
test
fidivs
pand
add
cmp
dec
aas
inc
jecxz
aaa
orb
jae
xor
cmpsl
lea
xchg
jne
scas
int
movsl
fcoml
call
out
add
int3
push
jb
sub
cmp
scas
cwtl
push
ljmp
push
repz
xor
rcr
jae
xchg
xor
dec
pop
not
push
enter
mov
lods
ds
xchg
xchg
xor
lods
sti
loopne
lock
xchg
imul
xchg
shlb
xlat
mov
test
dec
jp
sub
mov
push
pop
movsl
adc
or
jo
mov
xchg
mov
int3
sbb
testl
mov
cmpb
ror
shll
cmp
jbe
inc
int3
aaa
ljmp
outsb
daa
fiadds
push
jl
int
and
add
and
fsubl
aad
imul
mov
add
lods
jbe
popa
movsb
pop
xlat
sbb
inc
movb
lods
push
ja
pop
cld
xchg
outsb
lock
loop
cmpsl
jae
cld
jno
mov
dec
sarb
sbb
mov
in
or
shr
and
push
xlat
mov
dec
xchg
pop
in
sub
add
jns
xlat
insl
in
ret
imul
jge
jb
das
jnp
js
test
adc
call
mov
jg
sbb
inc
pusha
mov
int3
jb
pop
add
xor
push
push
push
and
pop
push
aad
sbb
push
jae
mov
shrb
jno
ja
fs
test
ret
xlat
pop
cmpsl
sahf
not
out
and
jmp
out
arpl
and
movsl
mov
pop
adc
adc
mov
hlt
mov
push
push
push
test
lds
push
cwtl
aas
in
push
jp
fdivrs
ucomiss
sbb
cltd
scas
fwait
push
sar
push
sbb
xlat
or
or
or
fwait
mov
lea
or
loopne
mov
push
mov
and
mov
or
subb
push
and
fsubrs
inc
and
adc
push
inc
pop
add
test
xchg
jecxz
stos
inc
int
daa
test
sbb
enter
iret
out
fadds
loope
dec
ss
fnstcw
mov
fwait
and
mov
sbb
and
sarl
lea
mov
cmp
mov
rorl
aaa
adc
inc
pop
lcall
jno
add
js
add
push
mov
popf
xor
jo
mov
sbb
sbb
mov
orb
shrb
mov
jbe
xchg
sub
out
inc
pushf
xor
sbb
int3
xchg
aas
pop
sahf
in
sub
pushf
stos
fbstp
aam
xchg
mov
pop
inc
push
xor
test
sub
sub
inc
mov
xor
subw
aaa
and
lret
movsl
cmc
dec
sbb
popa
mov
ja
inc
jl
mov
cmp
cmpsl
repz
add
sub
andl
or
jle
push
xor
jp
or
sbb
lret
pop
adc
sbb
add
loop
dec
call
lcall
adc
je
and
sbb
ljmp
and
sbb
aas
push
adc
jb
sbb
daa
jnp
dec
repz
xchg
outsl
in
cmpsl
sti
jbe
adc
cwtl
mov
xchg
pop
call
int3
cmpsl
je
inc
xor
lahf
jmp
ficoms
or
cmp
or
andnps
xchg
mov
mov
stos
dec
mov
fwait
mov
outsl
arpl
push
rolb
popa
shrb
sub
leave
arpl
cwtl
mov
insb
sub
inc
mov
adc
enter
inc
push
lcall
pop
xchg
xlat
adc
lds
xchg
add
mov
dec
xchg
add
jmp
adc
jnp
mov
and
mov
or
js
mov
imul
mov
fildll
hlt
or
fiadds
clc
imul
xor
xchg
in
lret
sbb
arpl
jmp
mov
jge
int
in
push
and
cli
jns
fidivrl
rcl
pop
xor
enter
mov
pop
xor
in
add
add
dec
mov
stos
sub
je
clc
subl
push
xchg
adc
or
adc
pusha
repnz
lock
jp
push
int
ljmp
fildll
pop
push
push
mov
cmc
mov
mov
test
push
lret
and
add
mov
jbe
mov
hlt
mov
add
pop
test
xor
add
jne
and
adc
int
ret
push
into
into
scas
iret
or
push
rol
push
cs
cmp
push
es
jnp
ljmp
mov
cmp
push
mov
gs
push
inc
push
subb
mov
arpl
ja
sub
ss
mov
jno
pop
movsl
dec
mov
fdivrs
fisubl
imull
les
rorl
push
xchg
or
hlt
sbb
xor
jne
adc
cmp
mov
lahf
xchg
mov
jae
inc
jo
popa
mov
jns
enter
fsubrs
inc
imul
inc
imul
add
xchg
jg
mov
test
sub
inc
xchg
mov
xor
inc
mov
test
nop
mov
pop
es
sbb
cs
xor
int
cltd
roll
ret
insl
aas
jle
cmc
int3
iret
sbbb
or
and
jge
pop
cmpsl
sub
fwait
dec
movsb
shrb
add
faddl
push
xor
repz
mov
or
cmp
repz
outsl
ds
es
xchg
xor
dec
jae
xchg
sub
pop
in
arpl
scas
mov
lods
shlb
movd
lahf
shll
cwtl
and
lahf
popa
mov
test
das
fcmovnb
jle
mov
inc
add
mov
loopne
push
xchg
call
bound
call
inc
sbbl
push
add
cmpsl
cmp
imul
lcall
jp
jb
pop
lds
xor
adc
inc
shrl
xchg
xlat
ss
ljmp
or
leave
sbb
fsubr
ret
test
insb
loopne
adc
push
xor
xchg
jp
add
mov
cltd
cmp
mov
movsb
sbb
nop
jne
test
sub
int3
sbb
adc
test
mov
clc
into
repnz
gs
dec
mov
sbb
rolb
dec
mov
aam
sar
jp
mov
add
out
out
shl
dec
cmp
inc
jle
xchg
xchg
adc
icebp
je
and
int
xchg
lea
push
jb
mov
add
sbb
test
fbld
xchg
xor
stos
mov
mov
dec
arpl
aas
hlt
jns
fs
or
push
sub
cmp
xchg
dec
sbb
loop
bound
roll
repnz
std
cmp
pop
ja
inc
ror
js
daa
mov
or
cmpsl
push
lret
inc
rcr
ret
in
ffreep
pop
xor
loope
popf
cmp
inc
jno
lock
dec
mov
rorl
subl
and
leave
inc
es
add
or
add
xchg
aam
cmp
ffree
and
mov
in
or
mov
dec
xchg
je
xchg
es
test
adc
insl
push
inc
sbb
and
mov
push
mov
cmpsb
add
fstl
in
push
push
cmc
incb
pop
shrl
xchg
repnz
notl
pop
lds
ror
sarl
xchg
sub
and
das
sbb
incb
mov
pushf
repnz
cmc
inc
jns
into
dec
adc
jecxz
or
jnp
sub
in
mov
sub
ret
int3
and
xor
inc
insl
loopne
cmp
aaa
cmpsl
pop
imul
cltd
daa
imul
jge
mov
sub
idivb
inc
cmp
jl
lcall
mov
js
push
std
mov
xchg
je
add
jle
aas
jne
xchg
popf
aaa
adc
pusha
mov
mov
push
xchg
add
nop
fs
out
lods
shr
jecxz
jp
xchg
jecxz
mov
cmp
push
mov
xor
adc
femms
icebp
lret
inc
mov
repz
neg
fisubrs
xchg
or
cmpl
sbb
inc
sub
clc
shrl
sbb
sbb
adc
jle
xchg
jmp
fsubrs
cs
addl
xor
jnp
mov
add
gs
sbbb
push
mov
push
stos
xchg
jno
pop
das
ret
pop
nop
mov
mov
daa
dec
add
mov
cmp
hlt
xchg
mov
push
jb
sbb
loopne
cmp
or
cltd
cmpsl
pop
popa
lds
xor
ljmp
out
inc
shll
mov
shlb
dec
fwait
pop
int3
push
iret
pop
jo
inc
cmpsb
cmp
out
xchg
push
stos
adcl
fistpl
mov
aam
xorl
jae
or
adc
cltd
sub
lcall
jecxz
or
into
and
jecxz
fdivrl
gs
fstl
pop
lds
jbe
adc
push
xor
mov
shlb
cmp
enter
pop
adcl
jle
mov
or
imull
mov
cltd
sub
jg
pop
adc
adc
out
movsb
xchg
sub
lahf
add
xchg
out
iret
pop
mov
lret
inc
loope
les
jg
fsubs
jno
fs
repnz
xchg
and
push
cmp
push
jg
orb
pop
rcl
pop
andb
aam
add
xchg
lock
pushf
inc
xor
pushf
jb
xchg
sub
fisubl
or
xchg
sub
lcall
or
aas
sbb
mov
out
scas
add
jns
jne
pop
testb
push
xor
jmp
nop
outsb
das
daa
sub
pop
mov
push
mov
jle
pop
mov
aam
mov
jae
inc
fisubl
pop
mov
lea
jmp
fists
fidivl
cwtl
popf
out
cmp
movsb
out
dec
mov
nop
cmc
sub
lahf
ret
loopne
jmp
dec
xor
xor
pop
in
ljmp
in
icebp
insl
or
inc
and
or
out
lock
sbb
js
xchg
jecxz,pt
adc
fnsave
aad
push
cli
or
cmpl
lds
test
test
push
out
sti
sbb
adc
dec
jmp
arpl
loope
pusha
xchg
into
mov
xchg
loopne,pt
loope
xchg
mov
push
pop
push
adc
mov
jb
xchg
jb
adc
jmp
sub
mov
and
imul
xor
not
daa
xor
pop
dec
std
push
push
les
cmp
mov
imull
pop
cmp
jp
fsubrs
add
cmp
add
arpl
or
push
push
sahf
movsb
je
shlb
xchg
sbb
pop
sbbb
sub
lock
sub
mov
pop
pop
or
xor
or
sahf
push
jns
mov
hlt
sub
sub
push
xchg
lods
imul
leave
xor
and
and
stos
xchg
mov
jle
sti
in
jno
xchg
imull
jb
lock
ficomps
pop
or
mov
ffree
sahf
repz
mov
div
iret
lds
movl
cmp
stos
outsb
neg
or
mov
repz
movb
shlb
mov
cltd
test
sbb
fucom
test
mov
mov
mov
xchg
mov
bound
fistpl
add
into
sarl
mov
jecxz
or
or
and
leave
inc
mov
push
ljmp
mov
sti
sub
inc
out
fstl
subl
cmp
adc
xor
mov
xor
and
add
mov
lods
mov
insl
pop
jae
aam
cs
pop
cmp
or
cmp
or
sbb
jmp
xchg
inc
aas
int
ja
int3
daa
cmpsl
loop
lret
cmp
push
aam
push
je
xor
fcoml
mov
test
out
movsl
mov
xchg
cld
sbb
shrb
lods
pop
dec
lcall
scas
mov
shll
cmpl
sbb
push
cmc
aas
adc
adc
scas
andb
jmp
cli
xlat
cmpsb
fcoml
and
lret
xchg
mov
cmp
ret
es
movsb
cmp
rolb
or
imul
hlt
mov
push
cmp
cmc
orb
scas
push
leave
push
inc
or
xchg
inc
out
cs
add
and
cli
pushf
push
adc
adc
insl
push
aam
jno
cmc
in
fsts
adc
imul
inc
fs
ficompl
arpl
lds
and
or
sahf
popf
jl
fsub
popf
push
divl
ror
fstpt
and
pushf
push
mov
hlt
outsb
aas
xchg
leave
fwait
xchg
dec
mov
mov
xchg
cmp
pop
adc
sahf
add
iret
call
push
into
mov
sub
je
inc
dec
dec
sub
and
adc
and
dec
mov
pop
jecxz
cmp
xchg
jge
and
pop
fistpll
or
ror
pop
rorl
call
xchg
or
inc
popa
cli
jmp
icebp
in
mov
dec
adc
cs
push
jmp
pushf
fcompl
jmp
fwait
psubb
fwait
push
ret
pop
or
fmull
in
sbb
mov
es
js
or
ds
outsb
ret
imul
jg
sub
add
xor
add
mov
xor
insl
xor
popa
imul
mov
xor
push
test
mov
stos
in
insb
sub
out
aas
and
mov
popa
pop
lret
add
mov
add
orl
mov
xchg
test
jns
inc
sti
mov
ljmp
ret
iret
mov
mov
xor
adc
jp
adc
repz
int3
xchg
xor
inc
stc
sbb
rcll
xorl
stos
jl
inc
jg
sub
lods
inc
inc
shrb
jo
push
cmp
lea
into
inc
and
leave
pop
jne
lahf
cmp
jl
pop
ss
pop
rcrb
and
ret
fs
insl
jg
xor
mov
icebp
jae
clc
aam
nop
push
out
lcall
shrb
cmp
ds
xor
mov
ljmp
cmpl
adc
mov
mov
and
idiv
repz
aaa
sub
sbb
movsl
int3
cld
out
pop
sub
pop
inc
in
adc
mov
notb
pop
or
sbb
in
push
jge
gs
enter
aam
inc
jne
andl
sub
fcoms
pop
repz
in
jno
add
decb
call
fldl
aad
inc
lods
dec
jp
mov
pop
inc
xchg
lret
cwtl
and
or
lahf
dec
adc
imul
push
je
out
arpl
xchg
push
aas
sbb
add
js
mov
xor
pop
scas
push
cmp
or
mov
mov
mov
pop
adc
fdivrs
out
daa
push
js
mov
push
test
xorl
pusha
hlt
jmp
aaa
aam
pusha
sahf
sbb
nop
push
and
stc
mov
lds
pop
xlat
lds
lods
push
sub
pusha
adc
pop
and
jg
popf
push
cmp
add
pop
dec
mov
icebp
sbb
inc
adc
jbe
sub
movsb
and
jns
and
hlt
leave
mov
insl
xchg
dec
cmc
adc
mov
dec
lret
das
sbb
jno
lcall
nop
pop
out
ret
dec
sahf
iret
rorb
xor
push
sbb
push
mov
insl
dec
scas
jp
ret
mov
cmp
call
adc
mov
pop
lea
and
sub
jg
mov
out
mov
adc
mov
jno
inc
add
push
dec
mov
xchg
popa
les
shrl
push
mov
shll
daa
dec
mov
xor
or
xor
adc
cmp
cli
std
aam
cmp
fwait
and
not
testb
test
mov
mov
movsb
mov
leave
hlt
leave
fld
clc
stos
bound
repnz
mov
xchg
sbb
fidivs
std
mov
mov
cltd
pop
jbe
mov
cld
mov
lret
pushf
add
repz
push
mov
dec
mov
dec
in
dec
sub
daa
sub
xchg
cmc
movsb
inc
or
cmc
mov
lret
int
cmp
and
push
shr
mov
add
ljmp
jle
sub
mov
dec
xor
pop
xlat
inc
xchg
in
fstp
sub
cmp
add
lds
jne
pop
repnz
hlt
cmp
xchg
push
jp
mov
bnd
dec
xchg
mov
minps
clc
into
out
add
out
mov
or
xor
arpl
cmc
mov
mov
mov
jl
stos
fidivl
outsb
xorb
imul
imul
push
cmp
fmuls
adc
dec
ret
push
inc
je
sub
jo
ja
sbb
mov
ds
lahf
fiaddl
loope
and
dec
adc
push
sahf
lea
adc
inc
xor
in
out
idiv
into
js
sub
dec
dec
cwtl
ds
js
lods
jo
jl
cmp
and
imul
mov
enter
push
mov
push
mov
aad
std
add
pop
int3
bound
sti
imulb
adc
pop
jb
push
lret
pop
out
dec
cmpsl
mov
aaa
push
xchg
test
sbb
leave
cli
leave
or
call
push
push
xchg
fistps
push
nop
enter
stc
pop
xchg
and
push
push
mov
adc
out
icebp
sbb
adc
decl
pop
xchg
ljmp
sbb
in
mov
mov
ret
shlb
cmpb
cmpsb
rorb
lret
jo
xor
cmc
sbb
or
loope
push
jl
mov
ljmp
add
leave
insl
in
int
test
pop
cmpsb
sub
add
pusha
pusha
pop
in
mov
pop
and
mov
cmp
inc
sub
fwait
stc
repnz
jbe
push
repnz
in
xchg
shll
push
jl
fldcw
adc
or
hlt
pop
xchg
add
inc
mov
dec
sahf
ret
xchg
stc
rorb
and
add
andnps
mov
mov
iret
dec
testl
dec
icebp
xchg
push
mov
ret
cmp
cmp
mov
inc
cmp
and
das
shrb
or
push
xchg
sbb
es
ret
bnd
dec
test
xor
lret
xor
in
fldl
es
test
push
scas
aad
lods
pop
cwtl
daa
inc
sbb
stc
push
ljmp
xchg
xchg
arpl
cli
add
adcl
ret
mov
lret
loop
jmp
sti
dec
mov
scas
jno
sbb
pop
pop
addl
and
xchg
outsl
aaa
ja
cmp
rcrb
stos
and
outsb
fcompl
rclb
pop
call
out
ljmp
ret
xchg
mov
xor
lret
xchg
lahf
jecxz
cli
inc
imul
mov
mov
shlb
bound
sti
mov
aaa
pusha
sbb
mov
fistl
mov
push
cmpsb
mov
xchg
jbe
test
outsb
mov
mov
fistpl
sbb
insb
into
rolb
std
pop
jg
lea
add
mov
ljmp
push
and
mov
dec
mov
jg
dec
adc
push
pop
vhsubps
insb
mov
clc
scas
aad
adc
adc
mull
sbb
xchg
imul
push
pop
pop
pop
sub
xorl
imul
aam
call
das
xchg
je
lret
mov
mov
push
jnp
sar
jnp
sbb
sysret
or
push
or
or
mov
lcall
stos
cmp
lods
cmpsb
hlt
sub
inc
xchg
sub
inc
push
or
stos
jo
aas
mov
xor
cld
out
push
imul
es
jecxz
cld
xor
jno
rol
or
pop
cmp
out
test
sbb
aas
leave
pop
jl
sub
mov
or
lret
mov
cmpsl
cmp
in
and
pushf
out
mov
hlt
jge
xlat
xchg
mov
jmp
mov
push
push
popf
icebp
sbb
in
dec
adc
into
rclb
cmp
jns
in
xchg
dec
jne
xor
pop
mov
adc
dec
mov
fstps
mov
inc
push
cmpb
rorb
sbb
sbb
push
out
cmp
test
leave
fstpl
jge
cld
lret
popa
ds
fld
sbb
mov
sarl
insb
pop
jge
sbb
je
jno
orb
jmp
sub
dec
cmp
jae
or
xchg
xchg
mov
cld
pop
xchg
out
pop
jae
shlb
ss
jecxz
jbe
cmp
outsb
pusha
or
push
inc
cmc
dec
xor
xor
sub
and
popa
inc
inc
sub
sbbb
in
add
in
add
movsl
jns
pop
testb
dec
or
or
pusha
push
mov
jno
cld
and
adc
jecxz
adc
stos
icebp
fadd
mov
mov
push
dec
jecxz
and
sbb
into
popa
rorl
jecxz
jp
push
rcrl
lea
sahf
jno
cmp
add
inc
jecxz
sbb
xchg
adc
roll
push
lea
mov
inc
add
pop
xlat
pop
mov
call
add
data16
cmc
lods
shr
mov
mov
xchg
div
outsl
cs
out
mov
les
mov
sbb
mov
in
icebp
xchg
xchg
jg
cmp
in
ror
mov
inc
push
test
fsubl
je
orb
shlb
fdiv
lret
pusha
scas
fistpll
jmp
insl
jecxz
mov
pop
lahf
adc
pop
cmp
sbb
mov
mov
cli
mov
and
les
cs
fadd
addb
xorl
jl
lret
daa
sar
fmuls
adcb
dec
rcll
inc
push
xor
das
sub
add
add
dec
jno
mov
shll
sti
decb
mov
sbb
push
je
push
fists
jecxz
xorb
mov
mov
nop
popa
repnz
loop
sbb
jmp
jge
lods
ret
push
mov
cltd
or
dec
outsl
ds
lods
xchg
inc
mov
xlat
aaa
cld
cmp
movsb
cmpsl
leave
pusha
jo
add
push
jbe
xchg
sti
add
sub
jg
sti
fs
sar
inc
sahf
cli
xchg
dec
jecxz
lahf
scas
test
fimuls
fcoml
adc
mov
lods
pusha
push
ja
les
mov
shll
in
and
in
jecxz
sbb
mov
push
cmp
cwtl
sbb
cli
insb
inc
inc
and
jns
pop
sub
jne
call
xor
mov
mov
cmpsb
fdiv
pop
mov
add
repz
scas
mov
mov
inc
hlt
into
fadd
je
shlb
pop
cmp
mov
mov
jle
popf
mov
rorb
pushf
les
notl
iret
xchg
std
mov
pushf
push
fistpll
gs
push
cltd
repz
rolb
or
jecxz
and
lret
sbbl
add
pop
movsl
lret
shlb
movsl
aas
andb
jg
or
shl
cmpsb
cwtl
lock
add
int3
je
in
rorl
push
or
add
repnz
mov
inc
mov
adc
ja
movsb
clc
xor
push
cmpsb
pushf
insl
leave
mov
push
sbb
cmp
fucompp
mov
sbb
inc
sub
sbb
and
xchg
xchg
call
mov
jge
imul
sub
xchg
cmc
dec
mov
mov
jbe
xor
jae
fdiv
loopne
rcrl
push
mov
pop
sub
and
outsl
jne
repz
or
and
push
pop
and
insl
adc
jmp
and
loopne
test
push
add
inc
inc
mov
sti
ljmp
stos
inc
inc
sbb
or
out
adc
inc
in
xchg
scas
pand
inc
lds
cmp
sub
fisubs
sub
div
test
popa
add
xchg
jp
jnp
xchg
das
mov
pop
popa
cmp
ds
jecxz
mov
movsl
clc
inc
inc
out
iret
icebp
int3
mov
xchg
out
sbb
iret
repnz
sbb
cmp
das
mov
sub
pop
xchg
cmp
int
jp
mov
jge
aaa
jo
enter
fcmovb
jp
push
dec
sbb
fists
bound
sub
jmp
lods
lock
xor
add
popf
mov
xchg
stos
mov
lods
stc
movsb
fisubrl
jns
push
sahf
xchg
and
pop
adc
xchg
sub
inc
xchg
stos
cmp
negl
dec
cmpb
jb
push
mov
push
movsl
adc
shr
cmp
pop
arpl
hlt
xchg
dec
fs
int3
dec
insl
shrb
stos
mov
or
mov
movl
lock
cmp
xchg
fdivrl
inc
sbb
in
adc
and
add
cmp
pop
sahf
xchg
sub
push
push
mov
pop
movsb
mov
sub
aam
add
pop
stc
mov
sbb
aas
lahf
inc
mov
or
add
or
lcall
arpl
push
aam
push
dec
sub
mov
enter
inc
mov
mov
sbb
mov
call
sub
jo
fs
xor
pop
pusha
fwait
in
mov
sub
das
xchg
repz
insl
fiaddl
rorb
mov
and
int3
or
mov
mov
push
push
or
js
icebp
jge
jge
or
test
xchg
ror
and
jne
and
cmp
inc
cmp
and
jnp
pop
cli
ret
je
xchg
leave
lock
and
cmp
fisttps
mov
mov
loop
popf
xor
call
mov
mov
js
and
andl
push
lea
loopne
stc
adc
or
andl
pop
add
mov
push
sub
mov
pop
push
pop
mov
or
or
adc
jae
mov
shrl
push
and
or
mov
sub
addr16
mov
pop
xchg
popa
repz
sti
lahf
or
mov
inc
cmp
pop
int
cli
dec
scas
mov
jle,pn
sbb
std
loop
push
mov
rcrb
mov
ret
call
and
push
xlat
cmpb
scas
pop
sub
sub
mov
push
sub
inc
mov
cmp
mov
imulb
mov
jle
fistpll
sbb
push
add
call
daa
lahf
push
sti
fisubrl
das
pop
mov
dec
test
ljmp
sub
mov
js
test
adc
dec
pop
outsl
lea
jle
add
sbb
insb
pop
les
jg
imul
cmp
arpl
dec
mov
or
data16
xchg
cmpsl
mov
dec
sub
cmpsl
jge
sub
cmpb
sahf
mov
addr16
das
cs
sar
inc
lods
inc
or
adc
push
fcmovnu
lret
or
pop
test
adc
sbb
jle
lret
inc
shld
stos
push
xlat
clc
jne
fdivrp
test
movsl
ret
je
sarb
outsl
insb
push
mov
xlat
sbb
inc
inc
jl
dec
call
stos
sub
and
push
cltd
cmc
push
movsb
adc
loopne
push
aas
sbb
dec
mov
cli
add
cli
pop
sbb
cs
push
mov
cs
pop
push
adc
popf
into
idiv
adcl
push
mov
and
loope
mov
mov
add
mov
imul
test
call
jecxz
cmp
ds
jo
cmp
dec
adc
cmp
jns
dec
les
fildl
sbb
push
add
jb
jns
mov
lcall
push
cmp
cmp
jge
mov
bound
xor
xlat
arpl
cmc
adcl
outsb
jno
cmp
adc
add
insb
jo
neg
enter
mov
out
cs
sahf
fistps
movl
outsl
fisubl
outsl
mov
in
ret
scas
out
stos
dec
sbb
lret
hlt
pop
dec
arpl
jno
sub
inc
sbb
mov
in
jp
push
addr16
lock
loopne
jo
or
rcrl
out
aaa
repnz
mov
sub
fimuls
xchg
loop
ja
es
jb
pop
mov
mov
inc
cmp
imul
jne
mov
ja
icebp
cmc
push
out
mov
in
xor
popf
popa
mov
sti
dec
xor
icebp
cltd
jecxz
sbb
xchg
jmp
test
mov
cmp
inc
push
add
push
je
pop
scas
mov
sbb
aaa
mov
inc
or
xchg
hlt
jne
cmp
stc
xlat
jno
iret
repnz
mov
pop
xchg
clc
jmp
rclb
dec
push
mov
dec
movsb
and
loopne
pop
inc
icebp
cli
sbb
cmc
test
repz
mov
imul
xchg
movsb
inc
mov
xchg
fisttps
xchg
xchg
adc
and
mov
cmp
mov
inc
mov
bound
mov
daa
xor
fucom
sbb
mov
movl
out
mov
cwtl
push
stc
cmp
popf
mov
int3
pop
mov
mov
aas
xlat
adc
cld
scas
leave
fstl
inc
mov
js
xor
adcb
push
fists
ret
data16
dec
outsb
push
loope
mov
cwtl
mov
cmp
test
sbb
repz
xchg
xchg
ds
jbe
and
or
jecxz
popf
movsl
repnz
xor
mov
inc
nop
mov
dec
push
aam
and
into
inc
lock
fstl
aaa
test
add
divb
xor
xlat
dec
rcrl
xchg
outsl
or
out
lock
cmp
popf
pop
lds
mov
sub
das
sbb
push
les
movsl
bound
push
add
in
pop
cmc
adc
pop
cltd
mov
mov
or
or
xchg
push
and
cs
leave
loopne
sbb
movsl
push
push
out
dec
hlt
movsl
and
out
test
jmp
sti
xchg
js
dec
inc
rcr
jae
cmp
sub
pop
daa
loope
pushf
jno
out
mov
js
pop
inc
xchg
pop
ljmp
push
xor
and
xor
pop
push
cwtl
jle
sbb
js
popa
lahf
rclb
jg
lret
cltd
jecxz
insb
ret
int3
call
loop
sub
dec
or
push
adc
adc
xchg
movsl
je
lcall
xchg
adc
xor
jle
mov
jl
cmc
mov
adc
fstps
int3
lock
xchg
arpl
cmp
in
pop
mov
mov
orl
xchg
or
mov
jl
or
hlt
or
dec
push
or
sub
cmc
notl
test
fstl
dec
mov
fucomi
mov
push
xchg
jl
bound
dec
loopne
cltd
adc
ss
fs
int3
jmp
icebp
cmp
sub
inc
test
stc
push
outsb
jl
pop
push
sub
cmpb
add
aam
fstps
pushf
xrelease
ror
lahf
pop
rcl
sub
cmpsb
xor
pop
mov
jb
jp
jle
sbb
orb
icebp
sub
jecxz
cmp
pop
das
jle
push
xchg
dec
push
mov
scas
jl
aad
xchg
mov
out
and
push
push
pop
andl
ja
dec
xchg
and
pop
icebp
pop
xchg
xor
jno
scas
push
outsl
je
cmp
sub
jo
push
inc
jae
push
xchg
mov
add
and
or
jecxz
add
mov
test
fs
push
cs
push
lods
mov
xchg
lods
jbe
mov
scas
inc
push
and
mov
inc
sarb
adcl
daa
cmp
xor
icebp
and
ljmp
shrb
pusha
rcrl
pop
pop
lock
lret
cmp
xchg
push
bound
idivb
popa
pop
pop
ret
jae
loopne
fisubl
sub
adc
pop
jae
push
add
or
lret
mov
icebp
in
ds
mov
lahf
sub
pop
adc
int
mov
push
aaa
bound
addr16
fstl
fwait
ja
stos
aad
inc
aam
mov
xor
mov
in
adc
loopne
fcompl
out
sbb
push
mov
sbb
aad
gs
out
test
add
addr16
std
dec
movsb
dec
fsubrs
push
std
adc
lds
mov
jl
mov
cmp
push
shr
dec
clc
daa
jb
test
xchg
aad
or
pop
jae
inc
insb
ljmp
xor
lods
mov
lods
or
xchg
movl
mov
sub
test
inc
sbb
leave
jmp
inc
cmp
popf
aad
pop
mov
mov
push
lds
pop
mov
cmp
cmp
lods
cmp
push
fcmovnb
mov
sbb
inc
out
push
incl
or
in
aas
xchg
std
sub
jl
mov
inc
insl
mov
lds
clc
xchg
adc
xchg
and
adc
and
jp
xchg
inc
fs
sbb
cld
xlat
inc
ljmp
push
and
push
aaa
or
imul
add
lods
mov
rcll
pushf
xchg
mov
or
imul
and
pop
popa
jg
jp
or
imul
or
xor
adc
mov
into
jnp
pop
mov
jb
inc
sub
js
cmc
mov
adc
or
push
mov
pop
mov
das
clc
cmp
pop
add
ljmp
mov
shl
iret
adc
cmp
je
or
xchg
push
pop
inc
add
mov
fcoml
lahf
lods
rol
ljmp
das
sbb
scas
pop
pop
pop
in
pop
in
cmp
movsl
push
jecxz
sbb
lods
sub
and
fistpl
fdivs
mov
clc
add
adc
ljmp
sub
mov
pop
out
pop
pop
daa
cltd
bound
sbb
les
xor
call
mov
cmp
je
push
arpl
stos
push
stc
out
pop
push
xlat
or
adc
fwait
mov
dec
inc
ljmp
mov
daa
je
out
je
push
lea
lcall
shrl
and
and
push
dec
dec
dec
push
sub
mov
dec
mov
add
cli
cmp
inc
out
lea
in
sub
outsl
jge
leave
jae
push
sahf
push
sub
mov
push
not
mov
iret
mov
setne
ret
fmull
jecxz
inc
sub
pop
mov
ss
cwtl
mov
inc
sub
or
in
jns
cmp
pop
loop
inc
jge
adc
in
popf
add
ss
mov
cmp
xor
dec
xor
test
and
out
stos
cs
cmpsl
fisubl
adc
mov
bound
xor
cmp
add
xor
xchg
lcall
fists
add
jns
repz
dec
cmpsl
dec
mov
int
jbe
adc
jbe
jmp
out
xlat
stos
xor
xchg
int3
xor
and
ljmp
inc
lds
cmp
xchg
loop
mov
test
adc
xor
ret
lods
lahf
aaa
lcall
add
push
fdivs
lret
jge
adcb
lods
xchg
insb
or
lcall
xlat
mov
ja
out
bound
cmp
out
stc
popf
rcrl
aad
leave
mov
stos
cmc
cmp
inc
les
pop
jge
les
inc
pop
je
test
inc
and
daa
lahf
xchg
in
adc
mov
popf
mov
lods
pushl
imul
xor
jp
testb
std
add
jmp
jo
es
mov
xor
sub
jp
pop
outsl
dec
push
xchg
inc
mov
push
pop
cmpsl
popf
adc
jmp
sti
fstpt
pop
bound
insb
jns
sub
sub
daa
pushf
sub
insl
das
imul
push
cmp
inc
add
xchg
jne
mov
call
xor
mov
or
cmp
xchg
xor
cmpsb
mov
out
jnp
push
pop
mov
imul
mov
pop
test
ret
addr16
inc
lock
fldcw
int3
mov
sbb
mov
aad
icebp
lret
mov
sbbb
aaa
xor
push
mov
adc
push
js
loopne
cld
add
mov
fnstenv
hlt
jo
les
xchg
xchg
push
out
int
xchg
cmpsb
sub
mov
cld
into
je
xchg
push
pop
jl
jns
cmp
mov
dec
dec
imul
push
sbb
cld
pop
lea
rcrb
mov
imul
sbb
test
std
or
mov
and
popf
inc
xchg
push
xchg
mov
jmp
fdiv
mov
push
data16
mov
sbb
mov
jge
mov
inc
inc
add
mov
push
jp
jo
fidivs
pop
je
adc
adcl
push
rclb
lods
lret
sbb
jo
fldenv
outsl
imul
mov
loopne
data16
sub
cmp
push
add
mov
fwait
arpl
adc
dec
lds
and
mov
pop
mov
mov
sbb
mov
pop
out
fwait
lods
push
cmc
stos
scas
lahf
outsl
movsl
xchg
pusha
imul
jp
jecxz
cltd
mov
cld
or
lret
push
mov
jno
in
ficoml
cmp
push
jmp
inc
add
scas
cmp
pop
int3
icebp
pop
add
push
addr16
mov
movsb
orl
mov
fcomp
push
inc
call
xchg
xor
cmp
mov
testl
xchg
repnz
and
das
sarb
je
add
pusha
in
or
sbb
push
into
aad
sub
jb
arpl
jbe
js
mov
cmp
aas
sbb
aaa
xor
dec
xor
sbb
adc
rorl
cmpsb
out
int
dec
or
mov
mov
das
ss
add
gs
inc
sub
cmc
jo
adc
cs
cmp
out
pop
dec
mov
sub
dec
lds
scas
jbe,pt
cltd
mov
mull
enter
mov
jns
int3
mov
and
lock
pushf
mov
in
clc
jp
pop
mov
sbb
push
popf
out
pop
mov
lcall
repnz
ss
xlat
into
out
pop
push
testb
push
mov
or
into
cld
mov
out
sar
push
int3
sbb
jb
or
xchg
aas
mulb
add
mov
in
jmp
adc
add
daa
xor
insl
or
jae
ljmp
insl
fsubs
xchg
call
mov
fcmovbe
lcall
push
xor
in
lcall
js
flds
leave
push
jmp
push
int3
adc
popa
xlat
imulb
add
jp
push
loope
loope
nop
cltd
xchg
sbb
jae
cld
xchg
sarb
pop
push
pop
call
jo
sub
push
push
xor
sbb
pop
pop
cmpsl
push
cmpsb
push
aas
jecxz
aas
add
push
dec
jp
xor
shll
push
push
fwait
and
daa
gs
mov
loopne
test
dec
or
int3
xchg
add
cmp
and
xchg
dec
inc
mov
sarl
xchg
mov
pop
lock
pop
sbb
cmp
iret
jo
push
sub
inc
inc
inc
pop
test
call
xchg
or
fisubrl
mov
or
push
imul
test
insb
outsl
and
xlat
lcall
push
iret
xchg
inc
test
popf
nop
out
dec
xor
std
rcl
cltd
das
xchg
psllq
add
add
or
push
cmc
imul
xor
mov
xorl
mul
pop
btr
out
frstor
js
mov
js
js
dec
in
cmpsb
cmpl
in
dec
mov
mov
mov
mov
add
add
jecxz
int
sbb
js
sbb
push
jmp
jo
filds
xchg
das
out
in
shll
push
pop
shrb
xchg
adc
fdivrs
fdivl
pop
xor
inc
je
or
sbb
nop
inc
inc
lea
mov
dec
out
sti
push
hlt
mov
mov
jo
insl
and
cltd
inc
nop
lret
xchg
sbb
ret
sub
dec
pop
sbb
jg
jecxz
icebp
call
es
push
dec
jecxz
ja
rcrl
mov
pop
pop
fiadds
fs
mov
dec
push
jge
data16
sbb
popa
cltd
rcrb
push
push
call
inc
cmp
mov
pop
mov
lcall
mov
mov
add
popl
ret
cli
imul
nop
inc
sti
outsb
mov
hlt
ljmp
pop
lcall
inc
xor
icebp
cmpl
fistps
jae
idivb
xchg
shrb
mov
xor
ret
lock
cld
jg
xchg
popf
test
es
jle
cmc
ljmp
imul
dec
mov
scas
mov
repz
mov
push
rcrl
mov
sbb
lret
test
inc
clc
pop
mov
cmp
push
cmp
aaa
clc
mov
inc
jnp
jno
mov
xor
adc
xchg
fnstenv
scas
mov
fcmove
pop
lods
xor
and
in
shll
push
jg
xchg
inc
ret
lahf
stc
jbe
mov
ja
cmp
xchg
addr16
jge
or
add
inc
addr16
pop
cmp
enter
into
mov
mov
dec
pop
aas
test
imul
dec
xor
ja
cmp
inc
les
jne
or
daa
mov
loopne,pt
push
xor
xchg
ja
add
sub
sub
jnp
cmpsb
jp
out
pop
orl
push
ret
idivb
jmp
mov
push
cs
ljmp
call
arpl
or
sbb
dec
jmp
inc
push
shll
ffreep
insb
pop
shll
pop
push
js
inc
out
xor
iret
insb
adc
mov
xchg
filds
lahf
or
mov
rcll
add
mov
sub
pop
int3
add
iret
inc
and
and
lret
or
xor
ret
insl
cmp
sub
sub
sub
push
sub
ljmp
into
add
and
xor
ja
stc
inc
sub
and
cs
cmpsl
call
or
pop
bound
daa
jle
out
lea
ja
stos
lds
stos
sub
inc
jns
mov
test
or
fs
scas
scas
stos
imulb
or
mov
lock
int
pop
jo
mov
add
xchg
out
outsb
sarb
mov
mov
imul
push
cmp
iret
dec
add
jle
mov
jl
subps
dec
pop
mov
ss
popf
mov
scas
addr16
sbb
sahf
dec
push
outsl
les
fidivrl
sub
mov
icebp
movsb
out
and
cmp
fsincos
sbb
in
mov
sbb
sub
mov
mov
movsl
ret
clc
dec
outsb
cmpsb
mov
jecxz
adc
sbb
iret
cmp
lock
fcoms
sbb
adc
jg
and
push
call
aad
dec
cs
jge
sbb
dec
cmc
mov
std
lock
sub
rorb
mov
das
inc
sub
je
cmp
daa
lods
sti
imull
jl
in
pop
fistps
inc
sbb
xor
out
arpl
sbb
sahf
push
repnz
arpl
aas
inc
jl
mov
mov
adc
fdivs
popf
pop
mov
adc
add
jge
or
mov
cwtl
rclb
lea
out
adc
fisttpll
push
adcl
xchg
xchg
jne
fmulp
inc
nop
xor
xor
mov
inc
adc
aas
pop
push
jo
mov
add
icebp
dec
lods
ror
mov
jne
loope
add
xchg
inc
lret
ret
into
or
scas
stos
inc
bnd
add
pop
sub
jge
sahf
mov
jge
dec
scas
test
fbld
jge
sub
int3
fwait
lods
adc
xchg
push
dec
xlat
pop
dec
jle
jb
jno
jns
test
dec
add
push
inc
and
shrl
dec
or
lods
lahf
add
pop
das
ljmp
jmp
push
adc
stos
das
loopne
daa
popa
scas
sub
popa
loope
xchg
loope
jp
jmp
lds
sub
push
lea
mov
and
push
fs
cmp
sub
sbb
fmul
push
sub
xor
incl
loop
mov
sahf
jnp
mov
mov
push
cs
mov
mov
call
lret
xor
sub
add
loop
sahf
ds
add
int
mov
ret
inc
jb
or
pop
ret
sbb
sti
xchg
cmp
ds
fwait
in
dec
ss
fcoml
dec
jl
push
push
lds
jle
mov
mov
lods
ds
xchg
or
fnstcw
sti
rol
cmc
fldl
mov
mov
inc
mov
pop
orl
mov
jns
shrl
dec
dec
sbb
into
sbb
jp
and
inc
jmp
sub
sbb
mov
jo
out
push
push
das
and
xchg
aam
dec
push
or
test
sahf
mov
int3
ss
loopne
cmp
das
dec
or
jb
and
dec
loop
shrl
shr
or
ja
cld
outsl
push
pusha
xor
clc
fisttpl
sbb
pop
inc
into
sub
jb
sub
dec
f2xm1
or
loop
rep
mov
in
mov
ja
pop
mov
fcomps
lret
sub
adc
sbb
or
xor
jg
pop
ljmp
test
mov
and
repz
rcll
inc
dec
push
dec
push
daa
dec
cmp
shr
dec
enter
push
dec
int
negb
aaa
push
jne
test
sub
and
jp
push
push
inc
loopne
dec
cs
xor
std
ret
push
push
mov
gs
fimull
bound
xchg
cli
cli
arpl
and
shlb
shll
inc
into
push
lock
out
inc
add
ljmp
stos
mov
cmpl
leave
cmpsl
cmp
pop
jne
push
insl
fstl
pop
rcll
lds
icebp
xchg
adc
repz
xor
stos
sbb
mov
adc
inc
jge
mov
cmpsb
in
jecxz
movb
fs
vfnmsub231sd
aaa
imul
imul
test
push
sbb
repnz
push
call
jge
sarb
lret
jp
daa
mull
mov
aaa
xor
push
cld
inc
push
scas
push
and
mov
mov
jnp
cmp
stos
repnz
gs
and
dec
push
pop
mov
cmp
fisubrs
fcmove
lcall
adc
je
mov
in
dec
dec
add
movsb
stos
pop
push
in
int3
cmp
push
add
xor
bound
insl
imul
insl
add
rclb
and
loope,pt
sahf
insl
push
cltd
lods
loopne
arpl
flds
sbb
cld
xchg
int3
subl
lret
mov
dec
mov
cs
and
ja
mov
or
push
loop
mov
add
pop
dec
aad
mov
dec
cmpsb
pop
xchg
mov
add
sbb
imul
pop
xor
pop
sub
shr
sub
pop
inc
cs
inc
mov
dec
scas
xlat
mov
loop
sub
insb
nop
and
sbb
adc
xor
test
iret
jmp
mov
lcall
dec
cli
loope
ret
xchg
mov
jo
jne
sbb
cmc
mov
mov
or
add
int
push
out
mov
gs
mov
aaa
mov
hlt
test
jbe
repnz
and
xor
inc
mov
pop
loopne
cmp
push
pop
xchg
mov
lret
test
pop
pop
call
mov
in
sub
sbb
mov
lods
cmp
or
push
add
xor
hlt
dec
add
aad
xor
sub
inc
dec
fstps
dec
in
cs
insl
aaa
push
insb
shll
push
inc
repz
jne
subl
aad
add
jl
pop
icebp
enter
push
mov
mov
fimull
adc
xlat
aas
outsb
lock
aas
sub
jae
sbb
nop
repnz
mov
pop
push
in
iret
sbb
xor
sbb
in
loope
inc
mov
js
mov
jnp
xchg
outsl
xor
ror
dec
in
fildll
nop
inc
shrb
sub
int3
aad
mov
cmp
sub
mov
pop
inc
sbb
mov
enter
cld
in
call
or
decl
popa
push
outsl
pop
push
int3
xorl
push
popf
not
mov
xor
dec
push
lods
sahf
xor
push
orl
adc
xchg
jnp
int3
and
push
fstl
inc
int
lods
pop
mov
scas
jns
in
xlat
nop
ficoml
jecxz
call
stc
aaa
pop
std
ret
dec
sti
jbe
xchg
pushf
leave
scas
fnstenv
cmc
mov
mov
daa
sahf
scas
xlat
loopne
addb
cli
sub
test
mov
jmp
notb
pop
scas
dec
stc
sbb
dec
int3
popf
adc
lcall
mov
std
push
imul
mov
cmp
fyl2x
std
pop
and
je
test
faddl
push
sbb
and
testb
fidivl
xchg
jb
mov
fcomps
and
sub
jnp
out
mov
gs
decl
in
sbb
xor
mov
fdivl
push
xlat
and
jno
mov
int
repz
les
dec
in
push
lret
rcr
cmp
repz
push
cld
sbb
cltd
xor
sbb
cmp
insb
mov
mov
push
loope
jb
pop
insb
sbb
xor
inc
mov
ret
icebp
shlb
jge
and
mov
stos
mov
fisttps
fiadds
es
pop
aad
popf
cld
mov
ror
lock
aad
pop
xchg
rorl
cmp
sbbb
mov
lcall
xor
jbe
jns
hlt
and
push
xchg
sub
lds
es
jb
in
pop
add
std
cmp
addb
test
addb
ss
pushf
push
adc
das
fisttpl
push
lods
rorl
adc
and
and
push
xor
aaa
jns
push
push
sahf
jmp
xchg
ror
test
aad
cli
leave
ret
and
pop
and
jmp
xor
adc
dec
xchg
mov
dec
mov
dec
pop
jp
push
mov
data16
add
stc
lea
lahf
xor
outsb
sub
push
cmp
mov
xchg
mov
mulb
adc
stos
inc
js
sbb
scas
jbe
fstpt
fmul
es
add
lds
add
jmp
cld
je
sbb
inc
or
aam
insl
push
outsb
adc
add
imul
push
fisttpl
push
cmpsl
inc
adc
jp
sbb
dec
subb
pop
mov
mov
cmc
or
dec
lret
add
jecxz
xchg
jmp
lret
pop
mov
or
xchg
xor
movl
ja
loopne
or
sbb
cli
mov
clc
cld
mov
ds
aas
cmp
rorb
push
fildll
inc
mov
in
pop
jle
mov
or
adc
push
jle
icebp
jae
mov
in
sub
sbb
in
jbe
cwtl
sbb
and
clc
add
lods
and
lret
mov
cmpsl
mov
js
lock
shll
xchg
in
xchg
lock
imul
inc
mov
daa
lret
jg
push
cli
and
clc
xchg
cmc
mov
cmp
sbb
inc
scas
lahf
xor
int
add
sbb
fwait
scas
mov
pop
mov
mov
add
jle
stc
cwtd
aaa
sbb
pop
loop
movsb
push
sarb
push
sti
ss
fistpl
loopne
and
sub
xchg
ret
arpl
shl
xchg
bound
jns
xchg
and
mov
jmp
fimull
ret
leave
mov
mov
sbb
and
fs
sub
pop
xchg
shrb
or
pop
mov
loopne
adc
std
test
cs
sbb
sti
jp
in
scas
movsb
add
lds
int3
jb
into
in
dec
add
mov
into
insl
add
lahf
loopne
fcoml
test
and
fstp
mov
mov
adc
sahf
or
into
jbe
mov
jmp
lds
out
popa
out
pop
test
and
repnz
xchg
popa
cli
cli
jge
pop
iret
in
repz
push
add
xchg
sub
cwtl
psrld
and
sahf
roll
movsb
nopl
or
mov
in
imull
xor
pop
dec
jo
in
fimull
test
in
pop
and
mov
push
push
xchg
notl
ja
icebp
xchg
sbbl
mov
cmp
aad
xlat
cmp
xchg
pusha
push
xchg
bt
cwtl
outsb
addb
and
xor
pop
add
xor
add
xor
shr
dec
dec
add
mov
mov
xchg
ret
fmulp
in
nop
pop
pop
shlb
fistpll
dec
add
dec
dec
fidivl
adc
cmp
jle
pop
popa
outsl
cmp
mov
enter
ljmp
jnp
mov
mov
jne
mov
jl
call
push
stc
decl
push
dec
test
pop
sub
daa
and
jg
hlt
repz
movsl
add
outsl
decb
outsb
lret
mov
or
jmp
pop
add
xchg
xor
mov
and
sub
jle
mov
push
or
fdivrs
add
inc
xchg
aas
mov
lods
mov
test
sub
cltd
sbb
cmpb
jnp
mov
dec
cmc
les
addr16
xor
add
adc
pop
jae
ror
insb
xor
stc
push
andl
ja
fdivrs
test
cli
das
sahf
leave
inc
mov
inc
ds
pop
fldcw
jmp
clc
cmp
push
add
cwtl
and
or
ss
mov
icebp
stos
jbe
pop
adc
insl
ret
in
in
jmp
or
popl
mov
inc
and
and
loop
ret
fstps
jg
jle
iret
adc
arpl
jne
sbb
xorb
icebp
mov
push
jge
xchg
jle
call
dec
pop
jne
sbb
je
pop
cld
std
sbb
mov
push
inc
fimuls
stos
sti
sub
bound
ss
push
scas
add
ja
push
sbb
pop
lahf
and
ss
and
insb
mov
fdivl
aad
mov
xchg
add
xchg
push
test
cmp
sbb
lock
fistpll
adc
jmp
sbbb
pusha
sub
loop
mov
jbe
push
cmp
fistpl
dec
repnz
popa
pop
jecxz
loope
es
lcall
mov
add
cmp
inc
jo
jo
cmp
fwait
fwait
jnp
cs
cmp
dec
call
sbb
fmull
sahf
subl
arpl
mov
out
or
and
and
ret
jmp
or
and
sahf
ja
fwait
pop
bnd
popf
sub
xor
ss
mov
fs
dec
cli
mov
insl
pminsw
arpl
ja
add
add
jle
mov
test
sub
push
mov
pop
add
xor
cli
mov
sub
aad
jl
pop
or
test
mov
into
aam
popf
mov
push
clc
movsb
or
cmp
into
iret
outsb
fidivs
push
bound
push
xor
or
lock
xchg
out
enter
popf
lods
push
out
dec
add
out
mov
inc
pop
and
pop
mov
jae
jmp
nop
stos
jo
mov
js
xor
mov
lcall
xchg
ret
cs
pop
xor
dec
pop
arpl
cli
mov
xchg
and
and
jmp
cmp
sbb
jb
cwtl
lret
adc
adc
out
mov
sbb
cmp
mov
data16
lods
cmpsb
xchg
pushf
sub
xor
mov
mov
pop
mov
mov
lahf
sti
loope
arpl
das
mov
adc
dec
mov
push
jbe
inc
xchg
gs
jle
cmpsl
test
scas
inc
and
mov
lret
mov
push
adc
pop
out
mov
mov
dec
push
andl
mov
rorb
xor
ja
int3
mov
mov
push
notl
push
add
arpl
or
movsb
xchg
test
sbb
push
mov
cmpsl
xchg
inc
or
cwtl
pop
xor
sbb
shll
and
inc
or
sti
test
repz
or
inc
pop
out
std
daa
push
js
pop
adc
dec
pusha
mov
sbb
add
xchg
test
inc
pop
jbe
les
in
jae
sbb
inc
pop
call
out
xchg
xchg
aaa
cmp
sub
test
jo
scas
clc
add
shlb
subb
cli
or
cli
fbld
sub
sub
mov
pop
ja
push
movsb
fsubrl
xor
aad
or
xchg
mov
dec
pop
cli
inc
out
or
xchg
in
pop
sarb
pop
cli
stos
fiaddl
push
sub
jne
in
mov
int3
stos
push
adc
push
lods
pop
inc
iret
sahf
cmp
xchg
lahf
stos
mov
pop
jae
insb
pop
push
cmpsb
xor
jecxz
dec
fwait
loop
xchg
dec
outsl
sub
sub
pop
mov
push
lcall
cmp
repnz
pop
lret
adc
add
rcr
addr16
cmpsl
cmp
dec
inc
push
jmp
scas
adc
sub
ljmp
pop
stos
loope
mov
icebp
cmpsb
jnp
add
adc
pop
insl
inc
aaa
fidivl
sub
pop
pop
push
in
mov
add
jg
push
int
int
dec
jp
into
or
cmp
aad
mov
call
push
fists
pusha
test
out
add
sti
sbb
mov
scas
or
jl
sub
sub
stc
mov
notb
xchg
arpl
xchg
shl
ds
out
xchg
add
cltd
inc
push
cmp
mov
cmp
jecxz
call
xor
imul
lret
inc
push
pushf
xor
and
mov
and
mov
mov
jne,pn
data16
jl
adc
outsl
sub
into
mov
fildll
es
js
and
gs
sbb
and
sbb
addr16
loope
pushf
or
imul
inc
dec
xchg
xchg
test
dec
filds
fsubrl
cwtl
and
cmp
fwait
cmp
test
fnstenv
fstl
push
shlb
push
lahf
mov
lds
cld
sbb
or
adc
dec
or
mov
jge
jo
xor
movsl
out
andb
das
sub
test
cltd
pop
cmc
jne
push
cmp
popf
insl
and
orl
inc
fs
imul
stc
mov
test
dec
add
ret
add
xchg
inc
mov
in
jae
jl
sub
jl
movsb
in
mov
ja
mov
xlat
mov
add
movsl
and
cwtl
and
cwtl
int3
fists
mov
mov
sbb
mov
and
push
mov
adc
je
cld
xchg
daa
mov
push
add
xor
jno
lahf
pop
fisttps
in
sub
sahf
or
pop
hlt
call
sbb
je
xchg
mov
jp
sbb
push
lods
sub
sti
les
sub
mov
mov
mov
push
mov
mov
mov
dec
cmc
ret
jb
mov
lret
jmp
mov
sub
lahf
xchg
jmp
out
push
mov
pop
mov
jb
mov
dec
inc
rcll
leave
jge
enter
jo
and
push
xor
sub
arpl
sub
aaa
jb
aam
dec
add
shrl
outsb
cmpsb
lea
fwait
push
dec
mov
push
arpl
inc
es
sbb
jmp
cwtl
sbb
hlt
dec
sarl
test
or
pop
sahf
shll
lods
xor
cld
push
ds
cmpsb
or
add
jae
loop
pop
stos
aaa
xchg
push
scas
fisubl
dec
sbb
dec
pop
push
fildl
xchg
sbb
ja
je
in
add
ss
sar
pusha
lcall
pusha
push
jl
repz
cmp
push
arpl
lahf
cli
sub
lcall
sbb
aam
xor
cmc
inc
roll
lcall
scas
jb
cmpsb
add
mov
mov
lea
cmpsl
mov
les
insb
leave
push
or
xchg
dec
and
std
adc
adc
imull
aam
lock
jnp
mov
mov
mov
imul
jno
insl
lahf
int3
les
nop
mov
testl
cmp
lods
push
or
or
add
adc
les
push
xchg
jmp
or
in
mov
loope
popf
dec
je
repnz
nop
cmp
push
pop
sub
shlb
add
int3
jbe
lahf
jae
lods
jns
js
mov
adc
xchg
push
fs
dec
fwait
xchg
xchg
push
rcll
insb
xor
add
jg
xchg
and
lcall
outsb
add
xchg
cmpsb
sbb
sarb
pushf
fiadds
jecxz
xor
ret
sbb
sub
or
mov
flds
test
or
mov
andb
adc
mov
xchg
iret
xor
pop
cmpsl
sarb
or
rcrl
xchg
test
repnz
idivl
mov
rcrl
jle
aas
scas
or
rcrl
inc
test
mov
es
stos
dec
inc
daa
and
call
popf
je
sti
push
pop
addr16
inc
add
xchg
lds
mov
mov
mov
ja
sbb
in
inc
mov
jns
or
cmp
test
pop
lds
mov
mov
mov
scas
jg
imul
push
xor
adc
cmp
push
sub
sub
mov
mov
mov
cmp
loopne
inc
fwait
pmuludq
sbb
jecxz
sbb
mov
stc
inc
cs
jmp
lret
cltd
mov
inc
stc
dec
jmp
push
sbb
fdivr
xchg
mov
cmp
out
clc
insl
push
and
or
bound
adc
fxch
inc
cmp
cmpsb
loope
cli
inc
dec
outsl
dec
dec
jle
dec
scas
adc
dec
outsl
mov
in
sub
dec
dec
fsubs
imul
mov
mov
jl
das
sub
jnp
cmp
cli
fwait
cmp
adc
outsb
push
dec
and
pop
push
sub
sbb
out
xor
sbb
jne
jp
cmp
shll
mov
adc
outsl
rol
in
dec
adc
xchg
lods
insb
xor
inc
xchg
mov
push
sbb
ss
imul
rorb
lea
xor
test
fwait
adc
out
xchg
push
lds
cmpsl
arpl
pushf
and
test
out
sub
cwtl
jg
mov
xchg
inc
cmp
sarb
mov
cmp
test
icebp
or
mov
inc
lods
scas
test
out
inc
or
ja
adc
jp
out
sarl
xor
clc
pop
push
and
cmpb
pop
or
test
sub
sahf
loop
or
stos
jbe
lods
push
pop
icebp
rcl
cmp
inc
xor
fistpl
js
jo
jg
fs
int
cmp
lds
ret
in
mov
cmp
in
testb
dec
popa
xchg
cmpsl
repz
cmp
lret
add
fcoml
scas
lcall
inc
icebp
jbe
loop
lock
jne
dec
loope
ret
daa
imul
shll
pop
push
jne
adc
sub
nop
or
popa
aas
jnp
leave
out
idivb
dec
jge
loope
subl
or
lods
mov
sub
fimuls
ljmp
fldl
popf
and
pop
ljmp
adc
pop
je
shrl
in
mov
inc
cmp
mov
lcall
shrb
pop
xor
iret
push
and
xor
pop
fidivs
repnz
jge
loope
inc
es
adc
pop
call
mov
cmp
insb
mov
pop
mov
pop
xchg
mov
sub
inc
lahf
jmp
testl
inc
sub
call
sub
add
pop
mov
adc
and
xchg
outsl
cli
in
add
scas
scas
andb
push
shrb
lret
shld
jge
dec
mov
mov
pop
lea
sbb
pushf
leave
mov
ljmp
enter
enter
mov
dec
out
add
leave
pop
jl
or
sbb
jl
jle
mov
in
mov
xchg
inc
sbb
sub
xor
cmp
lahf
push
xor
je
adc
adc
fcomip
and
stos
je
mov
mov
inc
xor
notl
dec
push
sub
mov
aaa
jb
into
xor
cmpsl
mov
test
inc
ror
into
sbb
scas
sbb
int
js
mov
or
push
pop
push
js
push
ds
sub
mov
or
sbb
push
mov
adc
lock
and
mov
xor
inc
mov
mov
inc
sahf
xchg
mov
hlt
sbb
cwtl
mov
mov
xor
pop
cwtl
stos
mov
cmp
clc
mov
std
in
jbe
mov
or
leave
and
lea
dec
sahf
lods
jnp
sets
jp
sbb
and
mov
push
int
inc
stos
test
subb
jb
lahf
in
loope
xchg
push
jge
clc
lret
faddl
dec
adc
lret
sbb
inc
dec
mov
outsl
ffree
mov
adc
pop
fs
cltd
mov
mov
jns
inc
fnstenv
push
cmp
jle
mov
out
mov
jle
mov
dec
scas
in
adc
lahf
xchg
jg
shrl
orps
jnp
xor
ret
cmp
mov
jp
sub
pop
lret
ret
inc
push
adc
int3
jo
daa
xchg
nop
adc
mov
and
sahf
and
push
jno
scas
mov
ljmp
addr16
xchg
scas
xor
inc
ficoms
nop
cs
mov
cld
push
aad
inc
out
pusha
fildll
daa
mov
xor
in
inc
notb
stos
adc
aad
push
arpl
in
pause
fimuls
xor
jmp
cmp
xchg
cli
cmp
pop
jno
xor
dec
rorl
jbe
icebp
pop
out
ffreep
cmc
mov
xchg
pop
shll
xor
and
ja
pop
in
es
jbe
icebp
sahf
dec
xchg
xor
adc
mov
lea
popa
sbb
bsr
mov
add
cmpsb
dec
jne
mov
lret
push
addr16
cmp
cmp
loop
inc
js
lock
lea
insb
push
adc
or
pop
out
mov
or
addb
sub
lahf
fdivr
mov
fnstcw
add
inc
cmp
xor
fdivl
imulb
jae
hlt
orl
mov
sbbl
or
and
in
mov
add
inc
ret
push
loop
jb
xlat
pop
out
test
push
std
push
pop
iret
dec
in
sub
cs
in
cwtl
push
mov
sarl
mov
jne
insl
mov
push
or
xlat
mov
lea
sar
bound
outsl
add
mov
sub
cli
add
cmp
cs
push
lods
sahf
push
xorl
dec
test
or
add
fimull
std
inc
adc
test
lds
lret
js
jg
xchg
je
pop
bound
sbb
dec
push
test
jp
xlat
dec
mov
xor
xchg
mov
in
cmp
unpckhps
dec
dec
cs
mov
or
int
lods
mov
inc
mov
ror
add
cmp
jo
jg
push
push
js
mov
ss
inc
ja
ja
add
fdivl
push
rorl
sahf
rorl
in
mov
pop
hlt
mov
pop
std
dec
lret
pop
lds
cli
cmp
add
jl
cmp
je
std
add
scas
mov
stc
aas
mov
sarl
negb
push
xchg
repnz
loopne
iret
shlb
ss
or
push
xor
je
sbb
pop
xchg
cwtl
push
insb
inc
inc
mov
mov
jae
mov
int
dec
dec
pop
loopne
xor
mov
je
data16
cmp
subb
movsb
pop
cwtl
push
mov
out
jp
aaa
std
mov
aad
inc
or
dec
outsb
add
inc
ljmp
fs
xchg
lods
stc
dec
jg
pusha
fisttps
mov
cs
push
into
lahf
cli
mov
clc
lds
mov
and
inc
xlat
jecxz
lret
xchg
stos
out
push
ja
pop
repnz
lock
clc
psubusw
ficoms
sbb
pop
or
push
loope
shlb
fistps
xchg
mov
jecxz
ljmp
or
shl
add
lock
adc
xchg
rcr
cmpsl
push
jge
faddl
fcoml
pop
dec
mov
mov
jns
or
add
insl
lahf
sbb
arpl
or
aas
fnstenv
mov
cmp
imul
outsl
outsl
sbb
je
sbb
mov
mov
jl
mov
jae
insl
mov
sub
in
and
fldt
repz
xor
sar
stos
sbb
push
pop
inc
pop
jge
fst
outsb
xchg
cmp
jnp
dec
fsubl
cli
add
icebp
sbb
and
test
out
out
sbb
sbb
dec
int
push
mov
addr16
movntps
cli
push
xor
mov
hlt
jbe
and
bound
movsl
adc
imul
and
testb
popf
fadds
test
frstor
cwtl
pop
scas
dec
decb
mov
das
dec
jle
pop
xchg
lcall
adc
fidivrl
dec
pop
pop
ret
cmp
xchg
iret
or
lcall
js
mov
sub
in
push
clc
mov
loopne
out
fwait
gs
push
sbb
repz
pusha
inc
fstpt
push
mov
movb
and
inc
out
test
lds
xchg
mov
in
jno
cwtl
pushaw
out
fidivrl
enter
pop
or
jmp
dec
push
push
fcompl
pop
xor
hlt
nop
push
fiadds
leave
xor
lock
xor
jp
or
and
mov
test
cmp
mov
nop
xchg
xchg
stc
jnp
sbb
cmc
pushf
cld
insl
xchg
out
mov
push
jo
in
inc
push
jmp
lods
push
jo
lret
cli
or
dec
jl
push
mov
jle
mov
mov
mov
mov
ds
ret
call
sbb
push
call
imul
cmp
mov
mov
cmpsl
push
mov
fbstp
test
cmpsb
ret
sahf
xor
je
icebp
inc
mov
lret
cmp
stc
loope
addr16
sti
jae
xor
rorb
shrb
insl
daa
movsb
add
push
xor
or
icebp
pop
cmpsb
and
andl
rcr
and
ja
test
imul
cmp
mov
orb
dec
pop
arpl
inc
adc
and
jmp
out
in
nop
lahf
je
call
cmpsb
enter
xchg
push
lea
stos
es
xchg
inc
cmp
lret
add
and
dec
enter
push
pusha
ret
xor
xor
mov
fdivrl
loop
or
ret
inc
addl
xchg
mov
push
stc
mov
jno
imul
call
ret
out
push
stos
in
jecxz
fucomi
stos
sub
add
cmp
push
movups
sbbl
add
cmp
xchg
sub
jb
xchg
daa
nop
jecxz
jnp
and
or
adc
xor
pop
mov
mov
imul
cmc
pop
sub
inc
in
xchg
push
aad
into
loope
ja
add
push
adc
jg
hlt
in
mov
pop
jmp
ret
fnstenv
mov
xchg
or
insl
mov
mov
mov
or
repz
loop
fisubl
mov
loop
push
cmpsb
mov
jp
push
push
aam
inc
enter
mov
xchg
push
adc
add
sbb
pushf
stos
dec
jbe
inc
ret
divl
sub
lret
pop
add
rorb
int3
cmp
push
mov
add
fs
xchg
inc
into
lea
daa
scas
inc
jbe
mov
je
adc
add
jl
cmp
pop
jl
rorl
fmull
in
in
push
xor
fnsave
test
xchg
daa
lcall
xchg
mov
jno
lea
sbb
jae
cmp
jecxz
mov
bound
dec
mov
movsl
mov
int
popf
push
push
jb
lods
jne
cmpsb
enter
xchg
add
orl
aad
xchg
orl
xor
push
std
mov
gs
imull
out
adcb
inc
jmp
mov
xor
jnp
addr16
sbbl
cmpsb
sub
movsl
outsb
dec
loopne
jne
outsl
lcall
add
in
bound
dec
xchg
les
rcrl
ret
sarl
pop
xchg
repz
fidivl
pop
dec
add
jno
jge
jg
fwait
push
push
jbe
or
push
dec
fsubs
mov
in
push
aam
pusha
lods
or
leave
sub
mov
inc
fstps
adc
pop
inc
dec
scas
stos
stos
add
inc
push
inc
fwait
push
sbb
ss
repnz
mov
and
fwait
fwait
jno
jnp
push
and
xchg
movsb
or
xchg
loopne
repnz
imul
mov
cmp
jg
loop
xchg
lcall
mov
sti
iret
std
dec
sbbb
jnp
filds
jl
cmovl
mov
loopne
sarb
les
loop
xor
stc
jecxz
jp
pop
xchg
pop
fcmove
cmp
mov
loopne
push
into
lcall
ja
adc
stos
xchg
fnstsw
push
lods
cmp
int3
or
mov
outsl
mov
xchg
lods
dec
decb
std
add
pop
imul
nop
inc
hlt
push
jno
mov
gs
adc
dec
out
daa
ss
inc
test
xor
jle
mov
movsl
sub
mov
sarl
xorl
mov
sahf
push
bound
enter
outsl
in
clc
leave
shlb
imul
adc
xor
mov
add
sub
loope
ljmp
cmpl
push
les
cmp
fsts
sub
jae
scas
lock
mov
jge
inc
notl
enter
pop
adc
pop
add
aad
and
push
mov
mov
or
rcl
add
orb
xor
mov
sbb
sarb
or
inc
jbe
fldl
dec
mov
dec
pop
and
aad
push
or
inc
outsb
xor
notb
mov
pop
mov
in
sub
je
in
loope
inc
mov
ja
gs
sub
fs
dec
dec
int3
fmuls
pop
pushf
je
mov
pop
clc
mov
push
lret
es
lret
fdivrl
jp
imul
test
sbb
notl
lahf
mov
dec
sub
xchg
rorb
stc
cmpsl
std
stos
dec
lods
pop
insl
mov
shl
mov
scas
test
xor
mov
mov
adc
out
hlt
test
cmc
pop
xor
ljmp
xor
jle
scas
in
cmp
and
loope
inc
mov
sub
mov
dec
pop
shl
mov
aam
jmp
mov
fnstenv
arpl
test
outsb
jge
cmc
inc
sub
jmp
add
inc
imul
arpl
test
addr16
test
lret
nop
lock
mov
mov
sub
cmp
sbb
arpl
int3
arpl
push
js
mov
popf
arpl
iret
xor
add
sbb
xor
and
ffreep
xorl
mov
mov
sbb
scas
add
add
cwtl
imul
das
pop
adc
idivl
daa
aam
sub
jge
lods
mov
out
jl
aas
push
mov
test
inc
lret
cmp
jns
cmp
clc
jb
dec
xor
jnp
leave
dec
and
pop
sbb
inc
sbb
pusha
mov
hlt
test
xchg
sbb
pop
pushf
push
stos
mov
mov
sub
scas
adc
push
test
push
inc
shlb
xchg
repnz
dec
gs
rclb
xor
shll
inc
mov
iret
inc
gs
leave
shll
sti
fcmovu
jmp
mov
adcl
adc
sub
ss
inc
pop
and
jmp
adc
rcll
xor
mov
adc
sub
sbbl
pop
aam
sti
add
fisttpl
repnz
les
sbb
push
pop
sbb
ja
inc
push
ja
adc
mov
pop
pop
std
call
adc
rcr
pop
and
cld
in
gs
xor
inc
or
or
je
rcll
mov
adc
or
fdivrs
cmpsl
xchg
mov
push
push
out
out
loope
add
adc
add
orb
inc
mov
inc
int3
jl
sahf
icebp
sahf
cmpsl
lcall
imul
pop
aam
fstps
scas
mov
push
jae
dec
fidivrs
pop
cmp
mov
ds
sub
mov
jle
add
add
mov
or
pop
push
mov
dec
mov
inc
cwtl
loopne
pusha
xchg
imul
cmp
insb
andb
xchg
faddl
push
adcl
stc
cmpsl
pusha
loopw
mov
in
arpl
and
clc
jecxz
test
or
ja
enter
xor
lcall
and
lahf
inc
adc
inc
push
jae
icebp
popa
jecxz
mov
add
outsl
push
jg
inc
mov
pop
or
arpl
xor
jmp
pop
repnz
jns
jmp
cld
repnz
hlt
inc
movzwl
sub
add
mov
push
sar
xor
add
daa
cwtl
fsubp
incl
out
jb
push
cld
repz
jmp
sbbb
arpl
div
xchg
inc
and
sbbl
lahf
mov
ret
sub
cs
out
inc
jmp
sbb
cmp
sbb
into
out
ljmp
adc
bound
js
mov
mulb
sub
lret
adc
in
push
jl
daa
stos
cmpsb
xchg
push
xchg
loop
lret
fwait
loop
mov
adc
in
mov
mov
daa
sbb
fadd
lahf
jno
cmpsb
out
or
faddl
xchg
jne
int
dec
enter
adc
push
repnz
lret
adc
incb
adc
daa
test
add
inc
out
or
xor
lahf
pop
addr16
xchg
push
mov
or
pop
in
sub
pop
cwtl
insb
add
cli
and
rcll
mov
push
lea
es
cltd
clc
ficompl
cmpsb
aas
out
addr16
shl
repz
shrl
fsubrl
and
cmp
inc
add
pop
sub
xchg
scas
rcrb
cmp
inc
push
cmp
dec
xor
cmp
and
enter
lds
push
fwait
or
in
pop
lods
arpl
call
adc
addr16
aad
fwait
xchg
scas
mov
test
imul
jg
les
xchg
cwtl
pop
gs
int
sti
jns
daa
enter
ret
pop
call
imul
push
out
fwait
movsb
mov
in
in
iret
mov
mov
adc
pushf
xchg
hlt
mov
sbb
nop
in
inc
xchg
mov
cmpsb
xchg
shlb
sbb
sub
pop
test
mov
aad
std
jnp
sbb
mov
das
repz
jnp
shll
jp
xor
sarl
aas
imul
ficoml
hlt
add
sti
cwtl
addl
push
xchg
lock
push
movsl
cwtl
pop
out
xchg
inc
mov
sbb
hlt
dec
or
xor
fwait
imull
or
cmp
sbb
loopne
push
sbbb
mov
decb
ss
mov
and
push
or
adc
inc
mov
or
imul
les
out
aam
out
mov
pop
jl
sbb
out
sbb
jo
mov
pop
es
sub
mov
jb
or
sbb
and
mov
repnz
and
pop
mov
in
lahf
in
outsl
add
push
and
js
adc
pop
add
leave
aam
outsl
sti
arpl
push
in
je
call
add
adc
test
adc
rclb
ds
lret
shl
pop
fistps
ds
subl
push
or
pushf
and
pop
stos
popa
lods
ja
sti
ret
mov
mov
in
and
sub
pop
or
or
out
pop
imul
adc
push
pop
sbb
cmpsl
fnstsw
xchg
lock
mov
adc
insl
jle
xor
jp
sti
push
in
mov
pop
pop
xchg
cmp
and
sub
les
mov
add
xchg
adc
pop
inc
neg
sub
pop
ficoml
cmp
cmp
pusha
mov
inc
mov
adc
addr16
outsl
fsubs
enter
mov
adc
std
rcll
cltd
sub
out
inc
sub
lds
mov
xchg
mov
jp
pop
subl
sahf
imul
pop
ficoms
cmp
jb
mov
push
sahf
push
push
push
ja
push
sub
in
jb
cmp
inc
popf
dec
pop
frstor
sub
mov
arpl
je
sub
loopne
dec
popf
js
inc
icebp
add
rolb
scas
in
cmpsb
leave
dec
mov
or
sub
repnz
pop
stos
cmp
jge
rolb
jecxz
setle
mov
out
xchg
mov
lock
fildl
and
xchg
sbb
cmp
lahf
int
in
aad
rorl
dec
fidivl
aad
mov
addl
std
inc
xor
sbb
and
add
call
add
cmp
or
movsb
pop
pop
imul
faddl
adc
jno
push
mov
xchg
cmp
fistpl
mov
and
inc
inc
cld
leave
add
push
jmp
test
mov
mov
fstps
divb
fs
fists
into
mov
mov
push
jp
into
xor
imul
dec
fisubl
adc
push
xor
aam
aaa
xor
dec
adc
dec
bound
pop
mov
fstpt
add
in
pop
scas
add
dec
dec
mov
fs
test
ss
push
xlat
push
add
lea
nop
insb
push
idivl
jb
pop
xor
inc
jb
lods
loop
arpl
pushf
imul
std
cld
adc
sub
inc
push
pop
lea
cmp
dec
jp
xchg
test
outsl
add
out
sbb
mov
add
stos
mov
xchg
addr16
push
sti
cltd
push
push
xlat
dec
adc
sub
push
cli
adc
scas
sbbl
mov
xchg
push
fstpl
andb
fcmove
push
lcall
jbe
shl
mov
jg
push
xchg
xor
mov
aad
mov
test
test
mov
push
cmpsb
fiadds
pop
jp
fsub
fcmovu
pop
flds
lahf
mov
xchg
mov
fbld
mov
mov
mov
pusha
adc
clc
aaa
fcompl
jge
sub
jp
scas
and
out
fsubr
ja
repz
push
xchg
dec
pop
iret
dec
or
xchg
push
imul
arpl
hlt
test
icebp
pop
mov
cld
sbb
sub
loope
add
enter
or
clc
mov
fdivrl
ds
aam
jbe
fisubs
jb
movsl
jl
and
out
push
pop
xor
add
pop
dec
push
or
mov
mov
out
imulb
sahf
loopne
or
sbb
add
cmc
roll
cli
pop
xor
dec
bound
hlt
mov
mov
ljmp
divb
enter
mul
inc
push
test
cmp
mov
cli
lcall
mov
repz
xor
push
movsb
das
sarb
loope
bound
pop
inc
faddl
adc
jbe
into
xlat
cmp
cmp
sbb
je
or
out
fnstenv
aas
fucomip
jne
lahf
mov
mov
push
sub
sub
sbb
pushl
sub
inc
fidivl
fsubrl
pop
jnp
inc
push
push
add
repz
jle
push
fwait
push
xor
sub
inc
xorb
xor
jae
cmp
rcll
mov
inc
xor
repnz
mov
es
inc
jbe
dec
mov
mov
mov
xchg
sbb
sbb
dec
mov
in
test
or
inc
mov
dec
nop
jecxz
sub
iret
jmp
fbld
sbb
iret
addr16
rorb
cmpsb
test
mov
sub
mov
cli
fs
inc
xor
icebp
repnz
stos
fdivrl
aas
sbb
dec
mov
test
clc
test
fldcw
das
mov
jb
aam
orb
jnp
xchg
fistpl
sub
and
xchg
out
test
and
lret
sub
aas
sub
cmp
and
arpl
ja
pop
imul
aas
inc
pushf
lds
sub
sbb
insb
mov
mov
out
xlat
mov
adc
add
ds
fcoms
jbe
lock
cwtl
inc
sbb
imul
movb
push
jl
cs
adc
mov
lock
adc
sub
ror
fdivrs
das
clc
inc
ljmp
pop
stc
inc
daa
mov
push
sub
enter
push
andb
fdivl
xadd
lea
test
and
inc
mul
lret
es
jo
test
fidivs
jb
cli
sbb
or
imul
add
xor
in
xlat
push
fstps
jne
push
and
xchg
movsb
or
mov
adc
std
out
jl
cmp
mov
jle
jb
xor
or
scas
out
adc
push
mov
pop
add
pop
push
out
adc
push
jno
dec
sbb
mov
lahf
movsb
mov
jmp
add
jbe
add
lods
or
add
inc
pop
lret
les
test
das
shll
xchg
shll
sub
iret
pop
add
clc
pop
cld
xchg
push
inc
mov
add
mov
mov
xor
cwtl
add
in
push
adc
insl
lds
push
xchg
add
cwtl
and
jnp
bound
mov
xor
nop
data16
mov
or
mov
add
lret
cmp
lahf
je
in
ss
fistl
mov
dec
push
jnp
cltd
mov
mov
psrlw
popa
fnstsw
mov
test
jns
mov
jmp
dec
push
fisubs
xor
lods
outsl
aas
icebp
pop
and
fst
sbb
mov
sbb
and
scas
jns
sarb
leave
test
hlt
xchg
repnz
lcall
cmp
inc
xchg
pop
scas
mov
jnp
call
lds
xchg
sbb
aam
mov
wbinvd
lds
jbe
aam
jmp
jb
pop
inc
pop
ret
jge
fwait
lea
lret
mov
aam
push
ljmp
xor
sub
scas
gs
pop
xor
pop
shrl
out
roll
add
dec
in
mov
xor
dec
and
loope
sub
and
popa
lcall
rorb
mov
cmp
push
add
mov
jbe
pop
jecxz
xor
out
jp
in
gs
std
outsl
push
jns
scas
push
andb
imull
adc
xchg
xchg
xchg
icebp
cld
or
insb
cwtl
outsl
dec
add
leave
divl
and
ss
jg
cmpsl
add
in
pushf
std
jnp
or
lahf
insl
jmp
xor
xor
popf
rcrb
lock
pop
dec
mov
mov
push
test
jnp
sub
mov
xchg
cli
mov
pop
je
mov
in
jg
jno
sahf
leave
gs
xchg
in
test
scas
add
shll
sub
adc
cmpsl
lret
testl
xor
fdivrl
pop
cmpb
push
or
pop
adc
push
add
inc
testl
pop
mov
adc
in
jbe
mov
xor
xlat
mov
fdivl
mov
int3
out
xchg
mov
jmp
cwtl
sub
fucomip
add
lahf
in
int
pop
inc
outsl
cmp
sub
mov
mov
and
and
mov
std
mov
xchg
movsb
outsl
mov
xlat
popf
dec
cmp
xor
mov
add
in
rclb
stc
pop
mov
fwait
insb
push
shlb
mov
add
loop
pop
sbb
mov
jg
dec
push
sbb
dec
adc
or
jmp
shlb
lock
jle
mov
gs
orb
inc
inc
stos
fisubl
mov
insl
jno
inc
mov
mov
shrl
test
out
aas
adc
cmc
ss
xchg
dec
mov
dec
stos
imul
jne
mov
mov
test
rorl
and
inc
fwait
xchg
mov
lcall
pop
fcos
int
mov
lret
repz
cmp
inc
push
repz
es
mov
mov
fwait
mov
mov
cltd
into
adc
dec
mov
por
pop
pop
push
jl
stos
cmp
or
popf
and
xchg
xchg
sbbb
pop
add
push
mov
cmp
insb
dec
add
add
cmc
lods
push
fs
popf
insb
inc
jne
ret
not
sbb
cltd
xchg
scas
pop
rorb
push
adc
aad
pop
and
sbbb
in
and
jg
mov
cmc
test
jbe
bound
adc
adc
inc
jecxz
movsl
add
mov
xchg
pop
or
out
stos
movsl
jle
cmpsl
daa
pop
and
dec
outsb
xorb
ja
popa
add
sbb
insb
push
xchg
ss
mov
fsubrp
or
arpl
push
or
mov
xchg
stc
mov
mov
fadd
jp
lds
xchg
popf
jae
popa
sub
xchg
jns
popf
nop
jb
sahf
jmp
jns
xlat
movsl
mov
mov
dec
pop
sub
pop
stc
inc
int3
leave
sbb
clc
cltd
mov
or
arpl
jnp
sub
xchg
xchg
add
jno
ret
xor
test
or
lock
cmpsb
xchg
cld
fwait
add
pop
loop
add
fndisi(8087
add
adcb
mov
sahf
stos
mov
sub
inc
std
and
inc
ds
jb
out
js
inc
cmc
rcrl
pop
in
idivl
mov
test
jbe
daa
or
fs
push
dec
imul
sub
mov
xor
outsb
push
add
ljmp
scas
mov
fcoms
sub
xchg
pop
sbb
and
mov
sub
xchg
outsb
mov
cmpb
pop
dec
add
xor
ret
int
cmpsl
and
adc
fistl
and
dec
loope
sbb
or
pop
outsl
mov
adc
mov
in
in
aas
test
loope
and
sbb
daa
shrb
das
cli
sbb
xor
or
gs
cmp
pop
lea
lahf
pop
in
pop
aaa
jo
fstp
dec
ret
pop
imul
adc
mov
xchg
lret
cmpsb
push
imul
xchg
scas
sbb
gs
pop
pop
or
dec
push
cli
and
or
roll
leave
mov
xchg
mov
out
iret
xor
insl
xchg
mov
add
and
sbb
cmpsb
pop
push
fisubs
repnz
push
xor
pop
popa
imul
test
cmpsb
sbb
ds
and
mov
stos
je
aam
outsb
fists
dec
or
icebp
pop
xchg
addr16
insl
or
mov
mov
dec
inc
add
stos
or
pushf
xchg
loop
arpl
dec
jno
enter
jns
sub
ror
sub
sbb
push
scas
sub
fldcw
mov
int
xchg
lret
xor
dec
dec
mov
adc
cmp
fcoms
loopne
imulb
pop
shll
cli
adc
mov
push
pop
sti
dec
out
gs
ret
shll
lods
xor
jnp
cmp
lea
sarb
lds
lock
pop
lcall
xor
shll
adc
fs
sbb
popf
mov
je
popa
movsl
cmpsb
adc
sahf
mov
dec
dec
mov
fxch
mov
cmp
or
fs
imul
jae
dec
inc
xor
xchg
js
mov
lret
lods
jmp
imul
pop
dec
in
adc
insb
in
inc
push
xchg
cmp
lock
lret
and
jbe
sahf
xor
in
push
lea
call
dec
sub
repnz
mov
repz
pop
cld
sti
test
roll
xchg
push
pop
or
cmpsb
mov
mov
jp
call
or
pandn
mov
pop
fistpll
and
test
add
dec
inc
ret
jg
shr
or
mov
test
insb
push
add
sub
callw
xchg
add
inc
xchg
adc
xor
sbb
push
cmp
adc
sub
mov
ror
std
or
adc
scas
cmpsb
dec
pop
scas
mov
sahf
mov
daa
call
xchg
aaa
push
cmp
ret
je
sbb
mov
mov
xchg
shll
clc
enter
add
paddd
jecxz
sub
mov
lods
xchg
cmc
test
loopne
inc
mov
jl
lds
sub
daa
mov
test
sahf
pop
xor
dec
jl
stos
shlb
arpl
and
push
setle
and
loop
add
and
sbb
aaa
mov
inc
popf
repz
inc
loopne
push
pop
sbb
cld
sahf
or
inc
and
mov
add
push
and
push
mov
cmc
jp
nop
sbb
dec
xchg
aam
adc
in
inc
xor
pop
out
xchg
lock
inc
repz
fs
lea
and
pop
mov
inc
in
xlat
xor
lds
and
imul
in
pop
std
lea
inc
cmpl
adc
fistps
in
scas
jnp
dec
lret
scas
stos
pop
ljmp
lods
fcoml
dec
mov
sbb
cmp
jae
jo
inc
test
lidtl
push
fdivrs
adc
pop
xchg
out
loope
iret
adc
inc
pop
push
fucomp
mov
cwtl
pop
or
jo
push
dec
xchg
xor
mov
std
xchg
pop
mov
inc
gs
sbbb
pop
fstp
enter
add
mov
cmp
out
jae
lds
leave
add
adc
push
sbb
inc
in
mov
imul
nop
jle
mov
hlt
js
adc
insl
inc
negb
cli
in
add
adc
cs
aam
pop
push
mov
shrb
out
adc
cmc
shl
ja,pn
pop
ja
pop
stos
sub
js
pop
inc
and
pop
test
in
and
mov
pop
es
dec
outsl
jno
pushf
and
insb
pop
imul
stc
fdivs
pop
sub
mov
mov
add
stos
int
mov
pusha
mov
arpl
nop
cmc
in
pop
push
test
lods
call
das
lock
dec
fadd
mov
std
out
sub
xchg
inc
pop
rolb
xchg
ja
out
les
lods
ffreep
andl
out
xchg
jg
ret
mov
push
lret
pop
imul
xchg
push
js
xchg
popa
sbb
daa
xor
fcoms
or
mov
arpl
dec
popa
add
cmpsl
ss
add
and
lahf
dec
pushf
ljmp
ret
mov
push
leave
push
mov
gs
jb
ja
jle
popl
jnp
adc
subl
iret
int3
pop
inc
outsl
sbb
aaa
xchg
loopne
movb
stc
inc
push
cmp
and
mov
xchg
fcoml
ss
shll
test
add
int
cmp
xor
xchg
pop
add
scas
mov
rcll
jbe
cmp
out
fstpl
xchg
ficoml
test
inc
lahf
cld
insl
xor
or
mov
or
bound
mov
hlt
or
and
inc
sbb
dec
fidivs
pop
test
sbb
sbbb
ss
ljmp
push
repz
push
mov
mov
mov
jge
es
push
scas
roll
dec
in
lods
stc
std
in
negb
adc
adc
mov
lods
pushf
or
cmp
jl
xlat
into
outsl
dec
sub
mov
sub
call
pop
xchg
push
outsb
cltd
mov
adc
xor
adc
inc
push
insb
pop
mov
outsl
dec
fwait
xchg
cld
jl
mov
sbb
daa
cmp
call
nop
and
insl
ja
andl
aas
iret
jmp
xor
sbb
or
xorl
xchg
xchg
daa
push
mov
gs
les
outsb
pop
stos
sbb
inc
imul
sbb
pop
jbe
nop
leave
scas
test
sti
push
fidivl
add
xor
arpl
inc
or
push
shl
stos
dec
icebp
push
lret
mov
test
andl
fisubrl
lea
xchg
sbb
out
enter
xor
dec
rorl
cmp
dec
js
movsb
dec
addw
add
insl
push
leave
xorb
and
push
loopne
mov
ficompl
xchg
cs
inc
jge
fnstsw
add
inc
int
xor
push
hlt
test
dec
sub
xor
and
popf
test
mov
mov
in
adc
sti
aas
and
pop
pusha
push
ret
dec
mov
push
addps
ja
xor
cmp
in
in
xor
jnp
call
or
jmp
xchg
sub
out
mov
mov
pop
ljmp
pop
cmpsb
push
outsb
add
addr16
lahf
movsl
pop
push
sbb
xor
add
clc
lret
pop
jp
jo
pop
shr
les
push
bts
in
dec
jnp
push
imul
addr16
movsl
pusha
and
xchg
fsub
jp
xchg
xlat
in
das
popa
cmc
xor
icebp
sub
arpl
in
loope
sbb
and
mov
stc
add
xchg
mov
adc
lret
icebp
push
xchg
inc
in
xor
or
mov
rcll
jl
mov
shl
pusha
or
and
inc
add
mov
mov
shlb
repnz
sub
ret
nop
xor
mov
pop
stc
adc
xorl
dec
mov
mov
mov
mov
outsl
push
xchg
mov
xorb
pusha
sahf
sbb
mov
xor
dec
fldt
pop
dec
rolb
jne
adc
jbe
rorl
rcrl
and
repnz
cmp
jmp
cmp
outsl
stos
aaa
xor
dec
jbe
int
jle
pop
out
pushf
cmp
xor
int
rorl
jmp
cmpsl
insl
or
push
mov
pop
jno
jo
dec
stc
in
scas
inc
mov
cwtl
sbb
sbb
push
fsubrl
outsb
add
imul
lret
aaa
shlb
repnz
adc
and
icebp
xor
jge
push
push
out
dec
cli
lods
push
jg
lea
sub
sub
jge
in
popa
cltd
int
out
cli
pop
cmp
scas
sbb
add
lea
xor
dec
pop
xchg
push
mov
xor
and
cmpsb
lds
ss
mov
popf
test
ljmp
in
xor
pop
cwtl
or
cwtl
mov
add
in
jle
push
loope
inc
int3
or
ljmp
adc
ljmp
cwtl
cs
xchg
jae
push
pop
dec
cmp
adc
cwtl
js
ljmp
or
push
or
scas
mov
inc
loopne
and
add
scas
pop
shrb
hlt
in
stc
ds
or
pop
xlat
je
pushf
cmp
mov
test
push
addb
jge
fs
pop
leave
xchg
lea
test
icebp
cli
out
xlat
jl
add
and
mov
iret
cwtl
xlat
dec
dec
fdivrp
aad
xor
mov
inc
mov
pop
movsb
jne
data16
jo
cmpsl
aam
test
lods
push
jnp
or
mov
sbb
data16
mov
imul
sub
subl
push
imul
add
mov
pop
int
mov
sub
pushf
shrl
xor
lret
cmp
pushf
xchg
inc
leave
sub
lods
shr
or
push
xchg
push
sahf
out
add
sti
test
mov
inc
les
mov
pop
inc
inc
loope
pusha
fld
in
negl
cwtl
je
jp
sbb
roll
arpl
ret
pop
push
lea
cmp
adc
aam
dec
cmp
inc
sbb
sub
fstps
jecxz
xor
stos
repz
sahf
jmp
xchg
sar
sub
or
adc
mov
iret
jne
sahf
loope
add
mov
fsubr
lret
fs
lcall
push
cwtl
cmp
cmpsb
sub
mov
sbb
dec
cmp
jnp
cmp
lock
add
subb
xlat
lahf
out
mov
add
fisttpll
add
arpl
and
inc
mov
inc
xchg
dec
adc
testb
lods
push
lea
pop
mov
lcall
inc
pop
mov
jo
inc
std
bound
sahf
mov
insl
loopne
aad
out
gs
ret
add
test
popf
ljmp
loopne
sarl
call
mov
aaa
push
or
insb
ret
out
test
push
fstp
pop
jb
xchg
je
mov
dec
inc
loope
fwait
imul
mov
jbe
adc
lock
das
mov
cmp
jge
or
les
hlt
xchg
rcrl
cwtl
out
mov
fstpt
sub
add
icebp
xchg
add
xchg
push
out
rolb
pop
repz
mov
fistl
dec
sbbl
jnp
xchg
cmpsb
scas
mov
push
jo
cmp
dec
imul
sbb
dec
xor
xchg
inc
gs
and
xor
mov
dec
jbe
xchg
sahf
add
rcrl
jne
cmc
mov
std
and
or
jnp
adc
cmp
inc
cs
mov
cmpsl
std
loopne
mov
test
in
lret
xor
xchg
scas
xor
sub
dec
push
xchg
loop
inc
loopne
push
push
inc
sub
and
mov
mov
add
scas
xor
into
xchg
adc
icebp
add
and
sub
push
insb
sub
pop
nop
aaa
lock
add
setne
dec
aas
jns
mov
call
int3
popa
jge
mov
and
xchg
pop
mov
xchg
xchg
mov
outsb
mov
sub
out
sti
sti
pop
mov
stos
push
sti
out
pop
dec
cmp
sbb
add
pop
or
adc
sahf
sub
sti
sbb
inc
scas
xchg
cs
aaa
iret
mov
mov
adc
adc
sub
mov
jmp
pop
xchg
and
aam
mov
xchg
add
loope
dec
pop
sbb
pusha
leave
aad
cmpl
push
insl
ja
and
add
orb
pop
mov
call
jmp
cmpsl
js
cmp
lea
push
lock
jo
sbb
xorb
add
xchg
jae
out
jle
sub
mov
out
pop
sti
xor
fildll
mov
fwait
rorb
test
pop
and
fidivrl
shlb
inc
pop
imul
leave
scas
addr16
call
int
pop
ret
gs
cmc
dec
out
imul
aad
frstor
xlat
push
mov
add
push
pusha
sub
mov
dec
xchg
adc
or
mov
cltd
sub
test
or
pushl
mov
rclb
sub
jnp
aad
xchg
add
ss
push
jmp
cmp
jle
xor
jae
xor
mov
jecxz
sub
push
ret
mov
lahf
jmp
cmp
mov
pop
jo
add
aaa
ds
cmc
int3
aaa
jb
cmp
aas
pushf
fidivrs
test
lret
xchg
sarl
in
int
cwtl
mov
mov
xchg
int3
enter
pop
mov
dec
sub
aas
pop
push
lcall
or
cmpsl
roll
or
jo
push
xor
mulb
lahf
inc
test
mov
adcl
pop
jle
sub
sti
mov
in
add
test
cltd
lea
xor
xor
mov
and
mov
test
cmp
jp
fs
xchg
std
and
mov
add
push
mov
mov
mov
xlat
jecxz
jno
clc
mov
stos
and
pop
cmp
xor
jge
pop
push
push
fs
mov
xchg
xor
jne
out
test
in
subb
rolb
xchg
lods
into
pop
push
mov
lret
mov
jge
jmp
aam
lea
in
jmp
sti
xor
mov
sti
insb
xor
das
mov
or
xor
ret
jmp
in
aas
call
mov
rcl
movsl
mov
loop
iret
lock
dec
lock
pop
add
adcb
stc
push
jle
sbb
lods
push
add
jg
add
imul
sbb
loopne
sub
mov
shrb
jp
mov
iret
xchg
js
decb
dec
xlat
push
jecxz
out
push
js
xor
movsb
lds
enter
and
push
pop
xor
jbe
idiv
pushf
xchg
aas
test
addb
or
stc
push
fs
cmpsl
add
cwtl
xor
xchg
movsb
sub
aaa
shlb
push
mov
fs
adc
xor
clc
inc
cwtl
out
fiaddl
test
push
jbe
lods
push
ror
mov
pop
and
mov
pop
dec
sbb
xchg
pop
das
sbb
add
jnp
xchg
cs
adc
push
dec
push
jg
outsb
sub
xchg
xchg
push
out
pop
lods
push
jmp
inc
in
dec
and
xlat
sahf
add
push
es
rcll
lahf
jmp
das
mov
xchg
ret
loope
fdivrl
mov
in
aam
push
pushf
push
cli
mov
divb
pop
inc
lods
pop
mov
ja
mov
ja
push
add
jb
sbb
adc
inc
push
ja
dec
add
loopne
test
loopne
xor
popf
push
jne
nop
test
or
mov
mov
sahf
lock
clc
pop
push
in
mov
mov
lcall
scas
outsb
mov
and
das
movl
bound
aad
sub
icebp
inc
xor
lods
mov
cld
inc
jae
inc
cld
sbb
sbb
sub
in
or
cmpsl
or
pop
mov
xchg
iret
add
push
xor
xchg
pop
loopne
adc
dec
add
jecxz
testb
cmpsb
pop
outsl
dec
int3
fidivs
inc
or
popa
mov
mov
push
shrl
dec
in
dec
mov
or
sub
sbb
out
or
jno
push
test
push
dec
shrl
mov
xor
or
and
vphadduwd
icebp
les
mov
jne
arpl
sti
dec
jae
push
cmp
cwtl
mov
dec
mov
movb
mov
pop
mov
cmp
mov
out
cmc
adc
dec
push
fildll
imulb
inc
push
cltd
xlat
stos
ficompl
sbb
addr16
cs
xor
xchg
in
outsl
test
fdivp
aaa
mov
pop
stc
outsl
fcoms
sarb
sti
shrb
cmpsb
and
mov
mov
outsb
popa
xor
enter
fildll
and
fisttpl
mov
sbb
and
or
inc
fucomi
mov
les
push
enter
push
push
inc
leave
stos
fistpl
pop
sbb
adc
in
mov
aas
sub
fnstsw
xor
out
pop
scas
dec
mov
pusha
cmp
or
inc
jg
sbb
add
lock
mov
lcall
mov
hlt
enter
mov
xchg
out
imul
out
inc
push
or
fs
xor
ljmp
lahf
pop
sti
lret
pop
adc
xchg
daa
ljmp
or
test
daa
xor
xchg
mov
in
rorl
sub
xchg
stos
add
fs
mov
jno
fbstp
cmp
dec
adc
outsb
cmpsl
pshufw
js
iret
xchg
test
and
pop
jge
scas
int3
fsubs
mov
inc
out
mov
sti
iret
adc
jmp
mov
jb
cld
xchg
enter
cwtl
inc
mov
cmp
add
push
cmp
je
sub
stos
xchg
lret
sti
xchg
or
adc
jmp
jne
push
test
roll
in
adcl
sbb
pop
pop
cwtl
mov
lcall
adc
icebp
mov
out
adc
sbb
jge
sbb
push
in
aas
adc
gs
sbb
outsl
pop
andb
std
shll
cmp
lea
push
or
outsb
jb
fstl
xor
int3
mov
jb
mov
cmp
lods
push
iret
cwtl
jb
xor
testl
int
add
push
faddp
xor
cmp
int
and
scas
dec
fnsave
jo
mov
in
fwait
jb
mov
mov
pushf
cmpl
mov
push
sbb
lahf
mov
jb
mov
cmp
push
ret
inc
or
cld
push
addr16
int3
in
es
mov
xchg
push
aad
adc
inc
popa
mov
jbe
aam
and
xchg
or
dec
sub
xchg
cmc
imul
imul
pop
je
pop
into
dec
icebp
in
pushf
pop
filds
in
lret
inc
ret
jne
test
subb
rorb
roll
mov
inc
push
subl
inc
sbb
notw
sub
out
adc
and
jne
xor
dec
pop
add
lea
push
and
mov
xchg
push
jns
jb
push
jnp
scas
cmpsb
out
jne
into
out
jecxz
fsubrp
and
scas
adc
push
sahf
int3
dec
mov
xor
imull
dec
pusha
jno
or
cmovo
out
add
xor
and
jmp
mov
mov
mov
popf
pop
js
shll
dec
inc
decb
in
aam
pop
inc
adc
sbb
pop
lahf
stos
jg
sbb
cmpsb
lret
lock
sti
push
mov
cmp
mov
add
leave
jnp
add
rolb
jge
daa
mov
or
or
mov
mov
pushf
lret
cwtl
insb
popa
repz
adc
sub
fwait
sbb
cmp
in
mov
sti
out
aam
xchg
push
pop
test
daa
inc
add
int3
sbb
lret
call
cmp
shlb
aas
mov
lods
movsb
es
mov
pop
inc
imull
mov
push
dec
repnz
in
fwait
orb
add
adc
movsb
dec
fmuls
loopne
outsl
out
jnp
add
outsb
roll
pop
inc
mov
fisubrs
sbb
cmp
cmp
lret
cmp
je
xor
outsl
lock
fimull
int3
in
outsb
loop
sbb
nop
xchg
fsubrl
mov
xlat
xchg
dec
inc
nop
fidivs
addl
hlt
inc
jo
sahf
and
out
cmp
mov
inc
popf
fmulp
leave
cs
not
jnp
pop
test
fisubrs
jp
dec
out
push
inc
das
test
jns
jmp
xor
jmp
add
mov
in
pop
xlat
jp
movsl
sbb
dec
mov
int3
iret
xchg
sbb
mov
test
add
xor
repz
icebp
mov
mov
pop
ljmp
outsl
xchg
aad
ljmp
int3
and
mov
int3
mov
sub
pop
and
push
xchg
fldenv
or
loope
fnstenv
xor
add
cmp
cmp
push
rorb
das
jo
sub
jle
jmp
ljmp
jmp
rolb
mov
or
push
adc
dec
mov
lock
in
in
or
push
adc
xchg
xor
push
mov
insb
cmpsl
lds
loopne
je
push
mov
stc
xchg
sbb
lds
mov
cwtl
cmp
iret
jmp
jno
pop
xchg
dec
dec
pop
xlat
cmp
and
sbb
fsubrl
xchg
ret
andb
or
dec
jecxz
sbb
xchg
mov
ja
xchg
scas
lret
dec
or
push
mov
or
pop
mov
int
clc
cmpb
aas
mov
jmp
data16
adc
outsl
and
sub
fwait
pop
pop
pusha
mov
decl
fucomi
xchg
mov
fucomp
mov
or
fstp
testl
insb
push
shrb
xchg
in
in
mov
jge
jae
and
and
or
test
mov
shll
cmp
push
dec
mov
jne
jne
push
jae
out
imul
adc
arpl
inc
sbb
pop
jmp
cmp
and
mov
pusha
test
imul
cltd
movsl
mov
dec
pusha
lcall
pop
rcr
jmp
ret
iret
insl
sti
gs
stos
ss
push
ja
stc
cmp
fbstp
fsubs
jnp
jbe
adc
and
mov
pop
or
jp
mov
sub
adc
fs
cmpsl
test
push
imul
mov
and
jne
jb
push
inc
adc
repz
notb
xchg
mov
or
fnstenv
lds
call
sub
test
imul
cmp
shll
or
pop
jnp
push
add
pop
jl
add
int
push
pop
gs
fsubs
xchg
mov
rclb
dec
sub
xlat
push
lds
xor
and
pop
popa
ljmp
pushf
in
pop
jns
imul
sub
dec
ja
mov
xchg
cwtl
popf
mov
lcall
lods
pop
popf
and
stos
adc
cltd
xor
mov
aam
sti
mov
mov
and
cmpsl
scas
idiv
adc
mov
addr16
test
popf
adc
fs
clc
xchg
es
add
movsb
dec
or
leave
cli
cmpsl
push
mov
inc
out
data16
xor
leave
ret
inc
ljmp
aam
or
adc
or
clc
nop
in
mov
mov
shl
mov
jmp
jge
lahf
out
mov
mov
xorl
cmp
xchg
dec
leave
and
stos
in
sub
sbb
loope
jns
mov
fucom
cwtl
inc
inc
mov
test
push
add
es
xchg
js
dec
or
sub
sbb
add
ss
sub
mov
mov
sahf
or
mov
outsl
sub
js
test
pop
add
icebp
push
and
sahf
stos
sbb
inc
pop
fwait
enter
push
mov
mov
jae
add
cmpl
push
xchg
cmpsb
daa
dec
dec
addr16
sub
mov
cwtl
xor
push
push
sbb
push
sub
mov
fsub
xchg
fldl
cli
loop
ficompl
sbb
xor
pop
xchg
arpl
xor
addl
stos
shrb
adc
inc
xor
push
fwait
cltd
dec
adc
mov
xorl
in
and
sti
push
imul
scas
inc
arpl
imul
cwtl
add
pop
insb
bound
mov
enter
je
icebp
xor
adc
mov
xlat
xlat
mov
lret
call
sbb
and
fldt
out
insb
xchg
pop
inc
les
ja
rcrb
mov
jb
lret
scas
cmc
sub
cmp
add
sbb
mov
or
aad
lcall
jg
dec
roll
mov
mov
mov
loope
sub
pop
inc
and
enter
scas
and
xchg
jecxz
int
fimull
jae
jbe
lret
xor
xchg
cmp
mov
lfs
xor
test
shrl
jge
lret
cmp
jp
test
push
lds
lods
fistl
or
int3
add
lret
pop
pop
out
movsb
cmpsl
sub
jnp
add
mov
pop
cmp
cmpsl
fists
jl
into
cmp
call
js
or
lock
cmp
inc
mov
jecxz
lods
inc
lahf
shrl
leave
ret
pop
aad
push
icebp
pmulhuw
aaa
sub
lret
cmp
or
daa
je
fldl
xchg
je
add
jl
out
sarb
movsl
pop
leave
mov
jae
pop
stos
insl
or
cwtl
subb
sbb
mov
sub
les
pop
sub
psubusb
or
cs
ss
adc
mov
mov
pop
test
into
aaa
mov
jle
push
clc
int3
out
loopne
pop
test
xlat
pop
fisttpll
ljmp
ja
jp
test
inc
xchg
cmp
mov
popa
aaa
sub
xchg
bound
mov
mov
xorl
test
push
mov
loop
cmp
cltd
xchg
in
insb
mov
cmp
mov
adc
movsl
lods
daa
push
clc
mov
aas
mov
sub
fnsave
inc
movzbl
movsb
or
dec
mov
pop
pop
pop
cmpsb
mov
shlb
or
das
xor
ljmp
lods
in
mov
or
iret
inc
movsl
jecxz
adc
and
xchg
dec
aaa
add
adc
shll
inc
push
dec
xchg
add
mov
imul
pop
mov
adc
push
jg
sarl
pop
fwait
xor
testl
xchg
xchg
notl
arpl
dec
nop
xor
in
lret
mov
or
add
add
mov
in
notl
or
sbb
rol
out
mov
js
inc
inc
xchg
in
mov
hlt
popa
sub
and
inc
dec
adc
xorb
cmp
and
rcrl
sbbl
add
mov
rcr
in
hlt
adc
add
jp
aas
inc
xchg
cmc
mov
addr16
xor
sub
out
je
lret
mov
daa
imul
pop
cmpsb
int
movsl
add
rorl
in
jl
xchg
jle
jns
jecxz
push
or
aaa
add
out
int3
and
imul
fdivs
insl
fmulp
ret
xchg
dec
fisttps
pop
pop
pop
mov
pop
jmp
xor
mov
cmpsb
loope
xor
adc
std
mov
jnp
jl
icebp
and
addl
xchg
adc
inc
cli
jl
into
push
add
xor
dec
sbb
cwtl
sub
icebp
aad
jae
xor
jg
stc
xchg
cltd
sbb
pop
sub
pop
std
lret
cmpsb
arpl
shll
iret
xchg
out
sub
lods
lods
mov
cmp
adc
sbb
sub
stos
mov
call
ljmp
xchg
mov
and
pop
sbb
xchg
popf
pop
xchg
gs
fisubrs
xchg
fcomi
mov
push
jmp
fisubrs
and
andl
mov
jmp
es
push
test
jno
jno
mov
xor
repz
pop
mov
adc
cmp
out
lods
sub
cmp
or
cmp
jns
mov
or
mov
sbbl
loop
pop
xlat
aam
or
sub
xchg
jecxz
mov
jo
xchg
insb
xor
inc
imul
jne
int
mov
jne
fcomps
xchg
nop
out
mov
mov
daa
xchg
push
pop
or
xchg
pop
push
lret
dec
stos
xchg
mov
mov
inc
and
jle
xchg
pushf
push
mov
leave
xchg
jmp
fwait
std
xor
mov
mov
loopne
jmp
ret
or
lret
adc
mov
sahf
sub
push
lahf
fs
fisttpl
mov
adc
adc
mov
or
mov
pusha
dec
outsb
push
pop
popa
shrb
push
enter
xchg
rcl
cmp
gs
jecxz
sub
loopne
mov
and
inc
daa
add
mov
int3
lods
out
lcall
mov
sahf
orb
jnp
fdivl
cmp
dec
inc
jg
leave
lea
ljmp
test
jge
inc
bound
sahf
push
add
scas
mull
mov
je
and
sub
mov
push
cmpl
lcall
imul
fsubrl
cltd
or
fimull
imul
mov
xchg
adc
adcl
xlat
mov
rolb
sahf
lahf
and
ret
sar
and
mov
pop
add
cmc
push
movsb
inc
push
adc
dec
inc
cwtl
shlb
cwtl
add
sbb
mov
xor
lahf
push
adc
fldenv
and
xchg
push
cmp
cli
aam
outsl
xchg
jne
xchg
mov
inc
lcall
shll
xchg
xchg
sbb
stc
pop
icebp
push
clc
jae
test
jmp
insb
je
cmp
jecxz
out
pop
xorb
jecxz
shr
ror
aaa
lret
mov
xchg
fisttpll
adc
cmp
mov
mov
mov
cs
dec
xchg
fninit
inc
pop
bound
mov
add
jecxz
inc
mov
adc
divl
adc
pop
lea
into
les
sahf
enter
pop
xchg
sub
scas
aad
out
or
sti
jp
xchg
lret
jb
sbb
mov
enter
rorb
add
popa
jmp
insl
cmp
mov
int
pop
cmpsl
rcl
les
enter
ds
cmpsl
ljmp
rcrl
stc
lods
jnp
std
mov
andl
xor
mov
repnz
mov
rorl
inc
push
aad
xchg
xchg
sarl
pop
aam
jbe
subl
hlt
mull
ret
jnp
adc
lcall
add
push
pop
in
sub
mov
sti
pop
mov
adc
dec
imul
clc
in
std
iret
xchg
or
or
into
mov
repnz
jbe
in
cmpsb
xchg
test
lret
add
mov
jg
cmp
push
imul
pop
add
cld
cmp
push
shll
jns
mov
sub
inc
adc
adcl
add
sbb
pop
pop
leave
daa
cmpb
test
jecxz
shll
scas
inc
inc
mov
mov
out
sahf
leave
add
sbbb
mov
test
ret
jmp
test
inc
xor
cwtl
inc
std
inc
std
push
mov
mov
or
jo
lret
cmp
aaa
jle
cmpsb
rclb
and
xchg
adc
xor
in
cmp
mov
lret
insb
notb
rcr
push
imull
pop
mov
jp
in
and
fadds
test
lock
roll
mov
gs
je,pt
xchg
inc
inc
adc
jbe
outsl
addr16
in
mov
and
adc
push
and
add
in
fldt
scas
popa
aam
and
stos
adc
addl
ja
fstpl
cmpsb
jle
cld
ja
add
das
sbb
sub
xchg
sbb
iret
ss
push
sarb
cmp
or
add
sub
mov
inc
mov
stos
sbb
cs
pop
fbld
test
imul
xlat
and
imul
ret
pusha
xorb
aad
or
in
sub
mov
mov
outsb
insl
repz
shr
into
imul
js
cmp
jmp
pop
pop
sub
or
xor
push
and
fmull
icebp
nop
mov
cmp
ljmp
pop
pop
cmp
sub
jle
jmp
shlb
cmpsl
pop
adcb
scas
and
inc
cli
in
loope
loop
dec
sub
mov
push
dec
jg
sub
or
adc
adc
jl
int3
sbb
jmp
mov
inc
dec
arpl
lods
pop
cmpsl
mov
push
jb
pop
xchg
std
inc
js
aad
mov
sub
or
inc
sub
mov
sub
mov
push
mov
pusha
out
mov
inc
pop
imul
out
icebp
ret
xchg
and
out
or
icebp
push
inc
xchg
push
sahf
cld
xchg
aad
pushf
add
dec
and
push
dec
dec
cwtl
or
add
xor
mov
mov
icebp
pushf
inc
cltd
jo
cwtl
add
es
gs
ja
sbb
jle
mov
cmp
pop
leave
clc
xchg
movsl
adc
or
cld
cmc
loop
jl
outsw
mov
jne
ja
lahf
xchg
das
mov
jno
lret
ljmp
inc
mov
jle
xchg
lea
pop
or
in
int3
and
xor
pop
ljmp
js
sarb
mov
mov
inc
jmp
icebp
inc
pop
pop
inc
adc
jnp
dec
sbb
xchg
in
movsl
ss
jle
pop
into
dec
push
or
sbb
enter
idivl
sub
mov
and
frstor
adc
mov
push
or
jne
iret
ss
shll
js
mov
mov
ret
scas
mov
xor
push
xchg
lahf
pop
xor
outsl
pushl
aas
orb
movsb
and
aas
mov
mov
out
outsb
jnp
mov
xor
jbe
dec
rcrl
aas
in
mov
scas
push
cmc
pop
xor
ljmp
pop
adc
icebp
cmp
dec
xor
loope
ret
pusha
aam
in
sub
in
cmp
aaa
xor
ret
or
mov
js
int3
ret
sub
int
mov
dec
sbb
mov
jb
mov
dec
mov
stos
jge
sub
fstl
fwait
sbb
push
imul
mov
xchg
sbb
push
dec
jle
sarl
jg
adc
push
into
and
aaa
dec
pop
jne
push
inc
clc
roll
fs
pop
jne
push
jns
push
outsl
test
pop
mov
mov
cmp
int
clc
insl
push
pusha
ds
xchg
nop
enter
and
push
adc
push
xchg
out
jp
mov
mov
in
xchg
adc
das
cmp
lret
sbb
popf
sub
jle
cmpsb
lea
push
inc
out
mov
and
sbb
mov
mov
sbb
clc
aam
ret
push
pop
movsb
pop
inc
test
js
adc
jle
movsb
xor
lcall
in
xchg
arpl
int3
push
cmc
mov
sub
mulb
or
xlat
mov
movsb
add
jge
mov
mov
insl
int
shll
je
ljmp
xorl
scas
and
push
jbe
subl
jns
clc
add
mov
outsl
mov
movsb
js
call
sub
ret
loop
lret
push
lahf
cmp
adc
xor
lahf
inc
mov
mov
pop
push
aaa
mov
cmp
xchg
in
push
sti
outsb
or
add
mov
cmp
enter
dec
sbb
cmp
in
fstpt
cmp
out
and
in
xor
mov
jge
outsb
xorl
std
mov
call
lods
mov
xchg
lods
pop
mov
and
mov
xchg
push
inc
cmpsb
cmp
aam
hlt
ror
sbb
inc
pop
pop
or
ja
dec
rol
mov
xor
shl
mov
mov
push
dec
aad
pop
dec
and
das
ret
dec
inc
out
mov
adc
js
mov
dec
insb
pop
lcall
aad
or
insl
push
pop
cmp
mov
lcall
les
mov
mov
mov
bound
pop
adc
jns
dec
imul
dec
test
sub
ficoms
test
mov
fdivrl
fisubl
test
rdpmc
cmp
xor
and
adc
int3
inc
ret
fsubrl
xchg
xor
jb
fstpl
xchg
sbb
int
pop
inc
aam
insb
addr16
call
out
and
sbb
xor
lods
mov
sahf
mov
sub
push
mov
pop
insb
insl
cltd
sub
shr
mov
sub
int3
mov
cmp
inc
or
int
imul
xor
mov
shl
call
cmpsl
jecxz
je
pop
jmp
push
test
outsb
adc
filds
sbb
mov
arpl
ret
sbb
pop
jae
cli
dec
stc
xorb
shll
rcr
mov
dec
and
xchg
sub
mov
pop
loopne
dec
js
dec
inc
fwait
jnp
adc
dec
jle
jge
push
andl
into
mov
loope
fnsave
ficompl
sbb
push
dec
testb
je
or
insl
es
xor
sbb
frstor
es
jge
cmpl
add
mov
push
stos
mov
mov
mov
std
cmp
pop
ss
pop
shlb
add
add
dec
inc
adc
push
mov
dec
sti
fidivrl
stos
push
movsb
insl
and
rolb
ret
mov
iret
mov
shrl
out
int3
inc
je
pop
ljmp
insl
loopne
push
inc
les
shlb
push
jp
pop
in
mov
xchg
in
movsb
sub
jge
jge
mov
fbstp
add
repnz
fwait
cld
sub
cmp
incl
push
xor
daa
test
loope
nop
les
add
or
jmp
cld
call
jnp
mov
test
sub
data16
outsl
into
or
sub
mov
outsb
mov
mov
insl
test
cmc
dec
inc
or
dec
pop
cs
aaa
ret
push
dec
jl
inc
imul
and
push
test
clc
and
sbb
in
sbbl
mov
add
dec
test
popf
push
push
gs
cmp
pop
fistps
icebp
rcr
hlt
loope
xchg
lcall
sbb
inc
sub
dec
push
mov
les
push
push
mov
ret
fdivrl
mov
sub
pminub
cmp
out
pop
mov
pop
mov
insb
cmp
xchg
xor
and
loop
mov
mov
loopne
shrl
ljmp
lock
xchg
loopne
pop
mov
mov
xlat
out
hlt
dec
or
nop
js
mov
sbb
inc
push
fimuls
jl
das
jmp
sbbl
call
mov
fsub
stos
cmova
jne
dec
es
call
jo
das
cmpsb
mov
ja
lahf
push
jmp
call
lret
outsl
xchg
xchg
faddl
jae
pushf
sbb
sbb
push
in
js
call
cltd
repz
xor
xchg
adc
outsl
js
out
add
mov
or
xchg
mov
aam
mov
movsb
push
inc
mov
xor
cltd
add
ret
mov
adc
enter
or
dec
lock
subb
mov
outsb
stos
sbb
xchg
cmp
loopne
sub
mov
ds
movsl
aas
lods
lret
enter
sahf
hlt
out
pop
sti
mov
mov
jb
cmc
jae
addr16
test
dec
xchg
xor
imul
and
outsb
add
mov
dec
adcb
sahf
sub
fwait
aad
icebp
xor
lods
adc
negl
push
cmp
and
outsb
add
adc
fdivrl
cmc
fstpt
jg
loopne
add
add
xchg
scas
mov
xchg
push
adc
mov
es
xlat
test
adc
mov
int
scas
cltd
lock
dec
leave
cmp
adc
and
push
mov
orb
fstpt
pop
mov
aaa
sahf
cmc
lahf
jp
and
inc
out
fiaddl
cld
outsb
aas
je
lret
das
not
sbb
paddq
mov
lods
cmp
mov
pop
inc
adc
jns
pop
dec
repz
adc
fidivrl
mov
adc
std
xlat
mov
jnp
xlat
mov
sbb
aaa
push
xchg
mov
push
mov
pop
or
pop
not
jo
jb
mov
cmp
pop
ds
sbb
out
fwait
aad
and
fadds
out
adc
ret
out
mov
push
stc
jmp
popa
xchg
jns
mov
cmpsl
jmp
mov
cmc
or
test
xchg
pop
das
call
mov
push
or
mov
pushf
mov
adc
xchg
pop
jg
xchg
push
les
jns
enter
push
mov
ds
mov
in
and
sbb
addb
mov
inc
mov
std
sub
popa
mov
push
loopne
or
pop
imul
push
loope
dec
xchg
jo
clc
testb
lcall
xchg
mov
jbe
int3
mov
or
xchg
sbb
pusha
mov
add
lods
jno
arpl
pop
xchg
or
leave
jle
dec
lret
aad
jnp
lret
or
sbb
jno
jns
pop
ficoms
push
in
cli
or
xchg
cmp
or
cltd
sub
jne
pushf
add
idivl
aam
adc
inc
in
jbe
push
jns
inc
jne
push
fisttpll
mov
jge
jno
aam
repz
sbb
je
subl
xchg
mov
mov
lods
push
push
pop
jp
pushf
lods
cwtl
jmp
call
ja
int3
sahf
pop
fmul
push
flds
lods
sbb
mov
ret
push
rcr
jmp
leave
or
inc
outsb
insl
adc
rcll
sbb
imul
lret
mov
test
mov
pop
sub
xchg
lret
xchg
cmp
fwait
lret
xchg
psubusw
stc
push
ljmp
and
filds
scas
sub
es
pusha
test
scas
stos
mov
jbe
loop
dec
add
fldcw
mov
mov
lods
dec
fs
test
push
insb
ljmp
jg
es
pusha
jo
in
mov
jnp
into
mov
sub
movsb
sbb
dec
out
hlt
aam
sbb
lock
add
mov
push
nop
or
sub
repz
aad
jb
scas
rorl
pop
xchg
gs
lret
pop
xor
repnz
shrl
mov
or
inc
push
pushf
sub
push
lock
mov
xchg
jmp
mov
testl
lret
xlat
pop
sub
jo
and
es
push
cmp
test
xlat
lcall
inc
imul
repz
lods
lods
mov
mov
sarb
jg
jne
cmp
jb
rcll
lret
pop
cltd
adc
jb
test
xor
sub
nop
loope
xlat
xchg
mov
inc
call
pop
pusha
imul
js
push
in
leave
insl
rcll
cwtl
scas
jp
cmp
pop
xlat
mov
or
add
xchg
or
jne
cs
mov
sbb
jno
mov
cmpsb
jo
cmp
add
test
lret
pop
jno
pop
jno
shll
dec
sbb
jmp
dec
sub
test
lret
sahf
mov
mov
mov
sbb
js
dec
mov
mov
mov
mov
icebp
sbb
hlt
dec
cmp
push
fstps
loop
dec
mov
and
cmp
or
sarl
icebp
out
in
repnz
push
loop
lock
dec
loop
mov
fnstsw
das
ror
mov
mov
mov
pop
sbb
cmpl
popa
add
lea
mov
es
lret
test
repnz
loop
sub
sti
cmp
pop
ss
adc
adc
out
jbe
out
inc
shl
sti
jnp
test
outsb
jg
lcall
fisttpl
mov
push
pushw
pusha
pushf
mov
push
sub
lods
dec
iret
jnp
or
pop
adc
stos
out
lea
es
jecxz
mov
xchg
dec
mov
cltd
js
iret
fcmovb
mov
adc
push
pop
movsl
shll
data16
mov
and
cld
leave
lock
mov
add
cmp
aas
push
mov
sbb
ficomps
fstpl
scas
sti
cmpsl
cmp
popf
lcall
cmp
shll
out
cs
loop
fcomps
pop
jae
add
and
nop
mov
iret
xchg
addr16
inc
xchg
and
out
push
adc
mov
out
push
into
scas
mov
mov
inc
lods
aad
add
adc
jno
and
mov
push
push
rol
pop
inc
pop
cmp
not
out
mov
stos
xor
pop
js
cmpsl
jo
sbb
sbb
mov
mull
sbb
cmp
mov
or
mov
movb
push
in
cmp
cmp
add
add
xchg
std
bound
popa
sub
inc
cld
sarb
aaa
cmp
mov
push
xchg
adc
pop
jecxz
lret
cmp
mov
and
xchg
mov
push
mov
jns
xchg
sahf
out
mov
sahf
dec
sub
jb
mov
pop
ljmp
mov
dec
jno
adc
leave
mov
fcmovne
imul
dec
jbe
in
cmpsb
stos
mov
lock
dec
or
dec
lock
add
test
imul
fdivs
cmpsl
push
arpl
testb
std
out
loop
add
ret
mov
jmp
fadd
je
repz
pop
cwtl
pop
lods
loopne
push
mov
outsb
mov
in
inc
orb
pop
iret
cs
imul
invd
xor
or
pop
es
xchg
test
cwtl
aam
sub
mov
mov
xor
dec
add
dec
loopne
cmp
inc
scas
xor
lret
insl
bound
ret
out
sub
mov
in
mov
mov
js
jp
sbb
fidivrs
or
sbb
inc
shll
lahf
fistl
xor
adc
push
insl
add
mov
push
lret
mov
mov
cwtl
loop
mov
pop
ficoms
out
clc
lahf
jmp
test
lods
and
push
mov
repnz
sbb
xor
in
mov
push
in
inc
inc
lahf
out
lret
fs
mov
xchg
nop
and
dec
jl
out
mov
jp
jmp
jns
xchg
cwtl
mov
cmpsb
cltd
mov
xor
pop
mov
scas
cmpl
pop
or
cld
shll
insl
mov
stos
push
outsb
shr
add
push
idiv
mov
sbb
adc
jno
sbb
cli
test
pop
xor
sub
xchg
test
xor
or
push
sahf
inc
repnz
je
es
test
mov
test
mov
or
lret
movsl
jns
dec
cltd
icebp
adc
adc
xchg
dec
jmp
inc
xchg
clc
fcomps
add
sti
enter
xchg
shl
and
pop
xor
aas
lahf
les
pop
jae
push
dec
fstps
inc
dec
in
rol
dec
inc
rcrb
xor
roll
dec
adc
out
or
cld
mov
lds
sub
mov
lods
jbe
and
jnp
sbb
sub
hlt
fiaddl
lods
cmpsb
mov
dec
xlat
subl
cmp
ss
popl
sub
lret
leave
sahf
scas
movsl
movsb
cmp
push
mov
jb
xchg
mov
mov
ljmp
mov
dec
out
daa
lret
xchg
fstl
sbb
mov
inc
mov
rorb
dec
pop
or
pop
das
dec
fnstcw
repnz
jae
stos
out
push
add
cmp
out
dec
pop
outsb
pop
loop
out
cmc
push
loop
aam
adc
add
mov
pushl
add
or
in
sahf
jg
xchg
fdivrl
add
inc
ljmp
dec
push
stc
mov
sub
mov
xchg
sbb
and
fisttps
nop
stos
sbb
pop
push
andb
cmp
mov
dec
adc
cmp
mov
and
imul
pop
arpl
jne
aam
movsl
and
leave
insl
jnp
imul
out
fcmove
std
adc
cmp
lret
push
dec
jae
cmpsl
fcoms
out
scas
lcall
sub
mov
std
es
popf
sbb
enter
jnp
add
jno
or
adc
out
hlt
or
rorl
sub
or
cmp
sub
orl
fmul
gs
sbb
fists
mov
test
leave
stc
movsb
mov
inc
hlt
push
xchg
leave
cmp
cmpsl
rcrb
jmp
cmp
dec
inc
mov
popf
xlat
xchg
dec
popf
jbe
pop
out
add
inc
repnz
lcall
fs
xrelease
scas
add
push
lret
rolb
sti
jle
push
sub
xlat
out
iret
pop
lcall
push
or
jae
jmp
mov
sub
repnz
in
sahf
inc
jl
fldenv
bound
and
stos
and
sahf
push
loop
insl
and
jl
daa
pop
lods
loop
lock
add
dec
mov
jns
aad
dec
ss
addr16
int3
push
test
cwtl
xlat
ret
stos
sbb
inc
inc
shll
enter
push
add
mov
sbb
stos
enter
jg
stos
fs
int3
add
add
adc
rcll
push
xchg
adc
or
fimull
addr16
push
sub
test
ja
xchg
push
cs
mov
push
adc
xchg
out
jg
dec
in
mov
push
je
repz
and
sbb
js
test
cmc
fsubs
and
call
sbb
inc
add
xor
pushf
inc
push
rolb
fidivrl
and
jmp
lcall
bound
fcompl
add
test
add
sub
fstpl
fs
sbb
mov
shrl
mov
dec
movsl
add
sub
cmpsb
dec
rolb
xor
inc
ffree
addr16
cld
push
cmpsb
mov
insb
fisubl
fdivr
ljmp
in
dec
pop
stos
adcl
sbb
not
push
leave
daa
sbb
or
mov
popf
push
leave
mov
add
cmpsl
out
adc
push
xor
mov
mov
adc
mov
sub
push
xlat
mov
xchg
push
cmpsl
xchg
cwtl
sub
pop
lods
jo
mull
out
pop
xor
mov
sub
mov
stos
xchg
fucomp
stos
xchg
jl
pop
cs
fcomp
rorl
mov
adc
fs
pop
adc
mov
cmp
das
leave
jne
stos
push
adc
in
test
jbe
xor
fldt
sbb
loop
pop
lcall
xchg
push
fsubr
cmp
xlat
or
fwait
mov
mov
inc
inc
outsb
roll
mov
jo
lahf
daa
and
ja
mov
cmp
movsl
repnz
cmp
fadds
divb
nop
icebp
dec
push
xor
lods
in
and
sti
jae
cld
imul
mov
movsl
push
outsb
lahf
push
xor
mul
push
xor
hlt
xor
out
cli
pop
nop
xchg
pop
and
out
test
mov
sub
jbe
fildll
push
jg
inc
mov
int3
mov
jge
cmpsl
and
daa
in
push
sub
int
out
push
xchg
pop
dec
cmpsl
loope
out
and
iret
rorl
test
mov
mov
and
dec
fisttpll
dec
pop
push
push
lret
imul
inc
sub
cwtl
ficoms
jmp
ds
add
pop
icebp
and
pop
mov
arpl
cmpsl
push
outsl
fsubrl
jns
pop
loop
push
movsb
rcrl
mov
dec
sbb
cmp
fidivs
mov
stos
xlat
ljmp
sub
jne
and
imul
imul
xlat
mov
stos
cwtl
jae
movsb
sub
sbb
inc
add
adc
add
dec
push
mov
out
movsl
dec
fldl
jae
dec
add
and
dec
callw
movsb
int3
add
or
fdivrs
cmp
xchg
adc
movsl
lods
mov
mov
aam
ds
mov
adc
adc
xchg
call
icebp
add
out
icebp
rclb
out
mov
cmp
pushf
jbe
faddl
cmp
scas
int
popa
in
arpl
and
test
xor
adc
add
pop
push
inc
mov
mov
xor
call
sbb
aaa
loop
jbe
aas
cmpsl
in
cld
lods
test
outsl
cs
pop
xchg
rorl
mov
lock
push
push
in
mov
cmp
mov
shlb
mov
pop
ret
cmovge
repnz
jecxz
fsts
or
loop
rcll
lahf
out
mov
int3
iret
jbe
inc
sub
sti
dec
sahf
aas
add
pushf
and
inc
ja
jg
xor
lss
hlt
push
loop
add
fwait
dec
cmc
mov
sti
into
addr16
cmp
popa
cmpb
jno
stc
shlb
shll
ret
jecxz
mov
sub
cmpsl
in
stos
cmpsl
je
jecxz
aaa
in
out
xchg
lret
lcall
popa
sub
movsl
outsl
jae
stos
sub
cmc
jne
xor
cmp
faddl
add
pop
sti
mov
fidivrl
je
jb
mov
stos
cmp
lds
rorl
cli
and
mov
loopne
xchg
mov
jecxz
pop
int
mov
lods
inc
sbb
pop
scas
mov
imul
pop
loope
fxch
or
xlat
lds
leave
ss
xor
into
push
outsb
in
add
cmp
push
subb
cli
xchg
and
xor
push
adc
test
imul
push
dec
jp
jae
inc
in
xchg
jne
pop
xor
jno
dec
xlat
adc
lods
xchg
mov
das
jb
xchg
or
icebp
inc
mov
jecxz
ss
je
jo
push
lcall
popa
xor
cmpsl
mov
adc
adcb
aaa
roll
mov
nop
popa
arpl
divl
push
test
and
add
dec
inc
xor
adc
pop
xchg
ret
sbb
mov
fcompl
imul
shl
inc
ja
push
je
and
mov
mov
test
mov
pusha
add
cmp
lods
pop
xchg
loopne
push
test
cmp
push
dec
sahf
nop
jno
inc
push
pop
and
mov
imul
bound
js
arpl
cmp
jmp
lcall
ja
jecxz
cmp
adc
xchg
faddl
mov
dec
subl
fisubrl
and
xor
and
xchg
xor
scas
jns
aam
and
in
mov
stos
cld
add
push
aaa
xchg
shlb
sbb
popf
test
sbbb
pop
push
fnstcw
mov
sub
push
add
fstpl
adc
add
enter
jbe
push
jecxz
pusha
in
add
shrl
mov
and
out
mov
loop
jne
lock
and
dec
data16
xchg
loop
xchg
adc
cmc
ret
sarb
ffreep
xchg
mov
push
xor
add
or
add
lock
out
movsb
movsb
xchg
pop
dec
es
ss
ret
ret
movb
and
iret
shr
lret
dec
ljmp
lea
lcall
pop
push
xor
adc
movsl
push
adc
adc
mov
int3
incb
cld
sbb
jg
cmp
xor
iret
int
mov
loope
xchg
push
mov
je
pop
loope
xchg
xor
aas
fstpt
movl
lret
pop
fs
fwait
jge
inc
mov
cmc
sbb
test
stc
dec
adc
imul
daa
push
scas
jnp
jmp
mov
push
mov
adc
dec
or
stos
fidivl
je
jns
pop
fcoms
daa
test
or
les
data16
mov
jmp
loope
shrb
loopne
idivl
pushl
jle
sahf
mov
jnp
cwtl
xor
mov
int
lods
lahf
clc
mov
aam
out
and
cld
and
insb
xor
icebp
lock
in
pop
xchg
cmp
lcall
loope
jl
stc
int3
ljmp
dec
repz
aaa
and
bound
mov
lea
push
loop
push
movsb
aas
jg
in
push
enter
ret
leave
sbb
sbb
movsl
aaa
jbe
jae
push
push
cli
je
lea
sbb
jp
cld
fs
shll
in
es
push
mov
cltd
notb
push
mulb
lods
xchg
and
aad
and
dec
scas
pushl
not
jne
jecxz
cld
sbb
mov
pop
mov
icebp
jmp
sbb
ljmp
push
test
cmp
pop
fbld
xor
popa
daa
inc
add
shll
or
xor
jns
mov
repnz
xchg
pop
out
mov
insb
test
xchg
jo
insl
dec
mov
jne
lahf
test
dec
dec
in
xor
mov
outsb
dec
mov
or
stos
xchg
enter
and
push
loopne
sub
inc
das
inc
jne
xchg
fcomps
bound
jl
jbe
jne
lock
or
cltd
push
inc
inc
adc
bound
aam
roll
or
mov
push
inc
jg
inc
ja
ficoms
cltd
inc
ret
xor
or
push
test
jnp
and
sbb
jo
pop
mov
hlt
js
dec
pop
insl
scas
cmp
cmp
lea
mov
popa
fcmovne
dec
ficomps
jmp
jl
mov
mov
scas
cmp
cmp
mov
push
fistps
add
and
add
sub
lds
mov
push
imul
insl
sub
mov
es
mov
clc
incb
mov
pop
sub
cli
test
iret
or
cmp
je
cmpsl
pop
imulb
cmpsb
or
subb
cmp
clc
popf
push
test
and
rcrl
mov
pop
rolb
xor
and
mulb
out
clc
mov
cli
sbb
adc
pop
pop
pop
jecxz
add
in
xchg
fidivl
fidivs
pop
pop
leave
sti
add
faddl
push
xor
mov
push
inc
testb
fs
roll
mov
dec
sbb
imul
inc
out
jno
jl
adc
dec
aas
xor
jne
inc
je
aam
frstor
mov
pop
inc
adc
sub
mov
cmp
adc
mull
enter
in
aaa
loop
jp
idivb
pop
add
stc
rcrl
int
jmp
lret
and
nop
inc
mov
cmc
push
addl
push
xor
std
fnstsw
or
xchg
ds
aaa
xor
jmp
mov
adc
mov
out
xchg
mov
nop
dec
lcall
in
sub
jno
lret
cmp
es
xchg
stos
addl
subb
xor
adc
jecxz
mov
imul
jl
add
mov
clc
mov
jecxz
nop
cmpsl
pushf
sbb
je
mov
adc
dec
test
fldcw
popf
addr16
add
mov
hlt
mov
aaa
repz
nop
jl
rol
es
inc
dec
popa
cld
jl
aad
sbb
push
in
jns
inc
sub
dec
incl
jne
sahf
frstor
ja
lcall
loope
dec
mov
stos
jno
jg
lahf
push
adc
aas
mov
sbb
pop
or
insb
pop
mov
cmp
out
pop
in
hlt
xor
add
rcll
xchg
popa
jmp
in
fcomps
and
push
test
inc
push
inc
dec
loope
sub
adc
or
sbb
pop
daa
outsl
daa
lret
out
jle
inc
mull
daa
loope
sahf
add
lods
fidivrl
fisubrs
data16
add
and
pop
fdivr
xor
test
pusha
jo
ja
rcr
push
pop
inc
mov
cld
cmc
mov
push
add
out
addr16
in
leave
push
xor
and
pop
inc
xor
addr16
dec
mov
in
andl
aad
mov
je
and
lret
dec
dec
lcall
add
mov
inc
or
sahf
movl
add
sub
ds
mov
xor
push
sub
dec
sar
push
shll
cmp
inc
bound
inc
xorb
outsb
scas
mov
mov
out
aad
xchg
aaa
test
mov
sbb
lock
outsl
cli
push
push
movsl
mov
mov
adc
cmpsl
jmp
mov
and
and
lcall
imul
mov
jge
jo
lock
push
xor
or
fistps
pop
xchg
sbb
dec
ret
cmp
enter
out
scas
cmc
xor
ja
movsb
call
add
and
mov
pop
aam
mov
clc
daa
sub
inc
xchg
pop
arpl
sbb
or
and
repz
push
pop
js
stos
inc
and
insb
iret
dec
sub
sub
es
mov
and
outsb
xor
adc
ljmp
cmp
or
jns
sahf
adc
cmp
mov
mov
imul
pop
add
in
scas
addr16
test
xchg
mov
xchg
jp
iret
cmp
mov
adc
fistl
mov
add
mov
sbb
add
mov
mov
aas
jb
jmp
arpl
js
movsl
insl
aad
test
lods
add
aaa
fcomps
outsl
pop
scas
push
mov
imul
nop
shlb
packsswb
sbb
cli
inc
and
pop
sub
das
sbbl
sbb
sbb
push
out
jg
pusha
and
or
out
mov
in
testl
and
xor
cmp
movsl
inc
or
lcall
adc
int3
push
shll
and
push
mov
ds
push
pushf
add
or
mov
pop
jno
and
int3
push
cmp
scas
out
lea
mov
jne,pt
mov
adc
movsb
push
adc
sub
mov
mov
xor
push
aaa
popf
outsl
xchg
sub
pusha
in
in
sub
jno
std
punpcklbw
rcll
pop
sbb
pushf
rcl
das
mov
sub
or
enter
mov
aaa
adc
jne
adc
adc
shrl
ret
adc
mov
cwtl
sbb
pmaxsw
xor
mov
cmp
dec
push
push
pop
sbb
cmp
jnp
fcoms
jge
xor
subb
xchg
aas
jl
movb
test
clc
inc
js
into
out
pop
pusha
idivl
sub
and
xchg
scas
shrb
cld
push
ffree
out
pushf
mov
xor
or
cmp
jne
sarb
xor
cmp
daa
push
ljmp
sub
jl
add
dec
xchg
orl
mov
shlb
jae
mov
sub
out
loope
jno
xor
fwait
mov
lock
xchg
fsubrl
cwtl
stos
sub
icebp
push
divl
scas
ja
inc
popa
jp
mov
push
and
movsb
mov
xchg
imul
or
aas
sarl
test
pop
xor
arpl
mov
and
pop
jne
in
jl
addr16
push
lahf
add
out
mov
mov
andb
sub
inc
loop
rorl
rcrl
out
ficomps
lret
mov
pop
dec
lcall
and
xlat
sbb
inc
les
or
addr16
sub
fstpt
fs
mov
sub
or
adc
cmpsb
mov
stos
sti
arpl
rorb
arpl
repz
adc
aas
shlb
sub
xorb
scas
inc
rol
push
xor
adc
cwtl
jno
push
rclb
out
daa
dec
insl
fdivl
outsb
cmp
mov
dec
mov
sub
addl
sbb
cmpsb
inc
ret
or
pushf
loopne
outsb
das
xchg
sbbl
lcall
into
adc
je
cmpsb
push
mov
sbb
loope
push
cmc
mov
xchg
sbb
xor
add
adc
add
sub
or
nop
mov
sbb
insb
imul
add
shrb
mov
cs
sbb
sbb
jle
add
cli
pusha
rcll
adc
pop
sbb
sbb
adc
push
xchg
sub
xor
pop
jo
adc
arpl
or
add
xor
mov
jmp
in
sub
pop
and
sarb
cld
cmp
into
adc
or
icebp
mov
or
push
pop
adc
xchg
jge
stos
and
xorb
adc
cmpsb
movsb
sub
lahf
sahf
aas
in
mov
cs
stos
jno
imul
and
bound
xor
test
xchg
mull
cmp
lret
adc
and
arpl
fnstsw
pop
jb
jne
adc
nop
dec
pop
adc
jno
arpl
push
mov
push
pushf
imul
cld
andb
lret
pop
xchg
sarb
xor
pop
jnp
lret
push
jnp
jae
push
xor
mov
push
lea
fisttpll
loope
jno
fs
pop
aad
inc
cmc
lock
sbb
jecxz
out
lcall
xor
and
add
xchg
xor
dec
hlt
cwtl
fidivrs
dec
pop
mov
sub
out
or
xorl
enter
inc
dec
repnz
sub
adc
loope
pushf
inc
into
and
scas
add
insl
mov
lods
pop
rcrl
es
jg
lahf
loope
shl
jo
stos
cmp
pop
mov
cmp
sub
lock
mov
push
mov
pop
mov
jl
ret
subl
movsl
lods
mov
cld
inc
scas
and
ss
lods
mov
movsb
sbb
cmp
in
add
push
mov
mov
xorl
enter
xor
test
sahf
int
cli
pop
roll
jle
pop
mov
inc
and
add
xchg
ja
jmp
pusha
inc
popa
ds
pusha
cmp
mov
sbb
insl
pop
push
dec
stc
aaa
fidivl
movsl
aam
mov
inc
jecxz
push
dec
imulb
jnp
pop
pop
mov
testl
cmpl
insl
out
sub
jo
pop
outsl
lahf
das
and
ja
and
clc
cmp
es
int
mov
movsl
sbb
jp
jb
mov
nop
cmp
cwtl
fldt
inc
inc
movl
addb
lds
push
out
or
test
test
mov
jbe
xorb
xor
xor
jecxz
ret
pop
sub
sub
mov
jne
adc
sbb
or
loop
xchg
fisubl
jecxz
sbb
sub
mov
inc
dec
mov
sbb
rclb
push
int3
aam
aas
in
cmpsb
mov
insb
fistpl
mov
movl
sub
adc
std
push
add
dec
mov
test
and
arpl
out
lds
jnp
xor
sbb
dec
es
loopne
pop
jmp
push
leave
add
pop
push
loopne
into
aaa
xor
scas
ljmp
icebp
and
mov
push
and
call
adc
stc
std
mov
push
push
mov
sbb
cmpsl
xchg
out
push
popf
in
shr
jnp
movsl
adc
sahf
jecxz
mov
je
ljmp
fimuls
and
jmp
lea
xor
andb
insb
or
cmp
pop
add
out
stc
leave
insb
fwait
and
sub
imull
sbb
add
pop
pop
mov
aam
sbb
xchg
iret
push
stc
loopne
inc
sbb
in
ds
cmp
scas
or
lock
es
bsr
outsl
in
js
jo
jno
pop
mov
nop
cmpsb
push
lret
mov
xchg
pop
out
pop
movsb
push
lds
adc
call
mov
adc
test
in
mov
and
in
mov
test
or
movsl
xchg
pop
xchg
jb
cmp
sbb
dec
pop
sbb
and
mov
xor
aaa
xor
les
arpl
ss
push
leave
cmpb
xchg
stc
xchg
xchg
dec
enter
pop
adc
movsb
dec
idivb
cmp
fiaddl
repz
movsl
jo
stc
outsb
mov
stos
and
icebp
rcr
iret
xchg
stc
inc
notb
out
rcr
xchg
int3
xchg
fwait
push
fcompl
ret
adc
cmp
lods
arpl
adc
adc
push
ljmp
pop
mov
or
lds
dec
xchg
xor
xchg
inc
rorb
aam
imul
test
dec
js
add
std
dec
cli
imul
xchg
testb
dec
decl
dec
dec
loope
and
je
xchg
lcall
int3
push
test
in
adc
mov
jg
sub
mov
mov
mov
add
mov
mov
out
and
add
xchg
xor
inc
push
imul
hlt
push
push
push
int3
pop
mov
push
repz
sub
jge
xor
pop
push
jne
xchg
shll
sub
push
jg
lock
or
inc
or
lods
adcl
inc
mov
xchg
mov
mov
out
push
shlb
jno
mov
mov
idivl
push
and
int
mov
mov
imul
popf
push
sbb
cmpsl
mov
pop
adc
xchg
mov
cwtl
popa
dec
cmp
test
iret
or
movsl
outsb
jmp
ja
lahf
jne
xor
mov
cwtl
verr
js
subl
popa
add
das
aaa
arpl
jecxz
test
xlat
jbe
jmp
push
mov
push
and
int
mov
hlt
clc
jg
hlt
pop
lcall
push
mov
lcall
xor
inc
xor
xor
add
es
aad
xchg
and
add
daa
hlt
popf
inc
pop
xchg
jl
jl
mov
das
test
mov
dec
adc
mov
in
lea
mov
test
mov
repnz
sti
mov
iret
sbb
out
dec
loopne
sbbl
stos
fstps
iret
dec
js
pop
out
fidivrl
stos
add
dec
fadd
outsl
mov
cmp
dec
mov
addr16
pushf
mov
shl
add
push
mov
in
int3
fbld
mov
add
mov
rcll
cwtl
sub
jmp
mov
imul
mov
ss
push
das
pop
and
fldenv
pop
jmp
std
clc
push
sbb
pop
mov
pop
jecxz
push
divl
pop
loope
sub
sub
pop
pand
out
dec
out
mov
out
das
in
mov
cmp
sub
xchg
fs
dec
jl
addr16
push
icebp
stos
daa
shl
insl
clc
add
xchg
loopne
mov
lahf
xchg
imul
arpl
mov
or
jle
xor
js
pop
aaa
inc
sub
push
push
lods
imul
push
jnp
cmp
jae
out
and
sti
test
ficoml
mov
sbb
sub
pop
idivl
stos
and
out
out
inc
lcallw
jae
std
gs
pop
pushf
cltd
mov
adc
dec
test
mov
mov
jecxz
mov
lret
push
mov
ljmp
mov
push
test
lods
addr16
adc
sub
ret
mov
fdiv
stos
aaa
fistl
dec
or
and
push
rcrl
push
xor
push
insb
in
adc
popa
das
jmp
push
cmpsl
add
clc
and
andb
ljmp
mov
pusha
hlt
xchg
pop
add
int
leave
out
and
and
mov
sub
les
bound
aam
fwait
cmpsl
push
lods
mov
out
mov
mov
aas
fstp
out
fs
mov
cmp
xchg
sbb
pop
and
arpl
jge
mov
cmp
leave
mov
push
pushf
mov
out
addb
pop
push
iret
mov
andl
xlat
clc
popf
das
inc
mov
jp
cltd
jae
lea
daa
jecxz
inc
inc
jo
mov
insl
mov
inc
out
cmp
xchg
and
ja
insl
loop
adc
and
ds
lret
imul
xor
in
push
mov
xchg
les
pop
or
in
int
pop
es
mov
imul
push
adc
aam
cmp
sub
jae
andl
sub
push
jnp
push
and
pusha
add
jb
jmp
dec
lret
jns
adc
cmp
push
addl
push
lea
push
pop
jbe
lcall
adc
lret
sub
xor
das
mov
fmull
pop
scas
adc
cmp
sub
inc
mov
sbb
mov
mov
mov
inc
dec
and
pop
scas
adcl
fisttpl
pop
dec
adc
lcall
add
repnz
lret
test
jg
push
rol
push
xchg
popf
sub
sbbl
test
add
lods
xchg
add
lds
mov
push
adc
out
cmp
mov
jne
sub
jp
out
pusha
mov
inc
pop
cli
lahf
fwait
mov
cmpsb
jecxz
xchg
or
mov
sbb
cmp
cmp
pushw
or
push
divb
bound
push
out
inc
es
lods
mov
es
fsubs
xlat
sbb
bound
cltd
cmpsl
sub
and
jnp
inc
xchg
push
adc
adc
push
jl
and
adc
pushf
jge
sahf
mov
inc
or
call
sbb
push
data16
pop
inc
mov
add
nop
jle
bound
inc
pop
mov
stos
jecxz
loope
inc
mov
xor
pushf
fwait
data16
adc
and
in
xchg
into
daa
push
cmc
scas
cmp
shl
test
pop
jb
sbb
cmp
xchg
sbbl
push
jg
pop
adc
cmpsb
dec
jle
cmpl
rcrl
push
add
daa
lret
mov
fisubrl
outsl
out
test
jg
sbb
dec
inc
stc
sub
repz
xchg
mov
mov
xchg
mov
dec
dec
inc
out
push
mov
popf
pop
pop
xor
xor
loop
sbb
into
lea
loop
dec
sub
gs
insl
push
loope
pop
or
sub
cmp
pushf
inc
jno
mov
ret
pop
xchg
jae
xchg
sbb
inc
cmp
push
fs
mov
loope
leave
loope
fmull
out
sub
pop
push
pop
adc
das
jb
add
ja
shll
jo
inc
stos
or
rorl
dec
aas
fnstcw
inc
shll
xorl
adc
ss
popa
fstp
jle
xchg
jns
nop
add
js
clc
pop
push
xchg
and
decl
and
dec
js
push
mov
repnz
mov
sbb
mov
jo
lods
js
push
in
inc
jae
dec
add
or
lods
dec
mov
add
frstor
insb
dec
push
jp
adc
push
int3
scas
fbstp
adc
lret
cmp
jg
mov
in
and
mov
mov
pushf
fiadds
jb
ja
and
int3
or
in
pop
cltd
dec
insl
das
stc
add
push
inc
icebp
push
loope
je
sbb
js
pop
xchg
add
sbb
mov
pusha
daa
xchg
mov
rcll
sbb
xlat
mov
fcmovbe
cmp
cmp
push
and
pop
rcl
sub
jne
jp
jae
leave
in
lahf
shlb
outsb
mov
jp
cmp
loope
bnd
repnz
leave
push
mov
jnp
addr16
cmp
leave
insb
xorl
xchg
clc
test
adc
push
or
dec
xor
jb
dec
outsb
sub
jbe
lods
arpl
in
mov
jbe
adc
ja
push
or
aam
das
and
xor
popl
aad
push
inc
cmpsl
scas
sub
mov
push
movsl
orl
enter
pop
xchg
adc
cli
dec
in
lret
push
dec
xchg
add
daa
xor
sbb
lods
scas
mov
idivl
cmpsb
popf
mov
addr16
popl
jle
mov
mov
mov
add
mov
pop
pop
dec
cmc
mov
push
adc
and
pop
mov
mov
into
jmp
or
data16
enter
jb
mov
push
hlt
enter
cmpsb
jl
sbb
je
in
loope
or
mov
jb
data16
dec
push
sbb
imul
sbb
sarb
inc
jl
cmpl
fists
dec
cmp
xchg
sahf
imul
sbb
or
push
in
dec
jnp
cmp
shlb
pop
pop
in
adc
mov
mov
ja
out
loop
dec
fldl
cs
daa
cmp
pushf
mov
or
out
and
outsl
inc
xor
pop
aam
cmpsl
movsb
fstps
inc
xor
cmc
mov
xchg
pop
dec
fs
jae
jge
add
or
insb
jge
xlat
and
mov
inc
mov
cmpsb
movsbl
cwtl
mov
test
push
testb
je
xchg
mov
mov
mov
fldenv
stos
inc
mov
outsb
xor
or
mov
push
mov
out
std
and
push
lock
js
mov
test
mov
xor
arpl
mov
fnstsw
xor
cmp
sbb
hlt
jb
cmp
test
ds
cld
fwait
adc
xchg
push
mov
cmp
jle
mov
jbe
mov
test
addb
shll
sub
cli
imul
jns
jnp
fistpll
pop
test
testb
sbb
mov
movsl
testl
inc
out
and
insb
sub
cmp
outsl
sahf
push
in
stc
pop
fbld
loope
mov
pop
mov
mov
nop
adc
push
sub
js
lds
aaa
in
or
jae
ror
jmp
mov
mov
daa
sub
mov
sbb
push
mov
push
leave
push
push
lret
jp
mov
rclb
sbb
addr16
jl
icebp
or
ss
mov
or
cmc
into
imul
mov
dec
repz
lcall
sbb
divb
mov
and
pop
or
jg
jns
cmpsb
mov
inc
push
push
outsb
fldl
hlt
adc
mov
inc
fcom
lcall
out
idivb
sub
cmp
and
push
shl
fsubrl
movsb
out
test
mov
and
mov
loopne
test
into
mov
mov
cmpsb
scas
insb
leave
xor
cwtl
and
shlb
cmpsl
and
cmp
inc
and
popa
inc
sbb
or
mul
call
pushf
pop
cmp
mov
lret
sbb
stos
pop
pop
xchg
outsb
ret
xor
push
outsl
nop
mov
add
mov
insl
loopne
ja
int
loopne
pop
pop
push
nop
xor
xor
fidivrs
adc
xchg
cltd
mov
inc
movsl
mov
mov
notl
shr
test
mov
fisttpll
aas
adc
testl
dec
cltd
std
mov
cltd
das
mov
cmp
call
popf
jbe
adcb
xchg
or
fstp
ja
sbb
cmpsl
mov
nop
xor
and
aad
jbe
ja
daa
loopne
pop
push
jb
addr16
out
mov
popf
leave
std
inc
mov
push
test
ja
lds
pop
jmp
movsb
addb
hlt
xor
dec
loop
xorl
aaa
shrb
pop
repz
out
xlat
or
arpl
sbb
shrl
ret
dec
sbbl
sti
mov
ds
sar
mov
rol
scas
ss
xor
lret
std
dec
lcall
gs
cmc
cmp
jb
fcmovbe
shrl
shlb
ret
add
mov
fimuls
outsl
fst
cmc
lock
xchg
jae
pop
add
ja
std
stos
or
push
test
hlt
cmp
or
faddp
jnp
sub
movsb
add
sti
mov
fcomip
pop
adc
adc
mov
loop
inc
cmp
in
push
jmp
push
dec
cmp
movsb
jno
xor
add
jl
cmp
lds
pop
jns
popl
push
cmp
insl
ds
das
fcomp
sub
ret
insb
pop
jo
fwait
adc
jb
mov
push
lods
or
ret
or
jmp
dec
fwait
jo
pop
push
stos
shrl
mov
mov
mov
pop
ret
rol
jbe
sbb
addr16
jb
cmp
push
gs
test
das
ja
jge
fstl
xor
push
cltd
sbb
xor
lret
out
inc
pop
push
js
aam
pop
adc
xchg
andb
lock
in
or
and
idivb
dec
or
aaa
dec
cwtl
hlt
or
movsl
lahf
sub
jo
mov
xor
sub
inc
out
aam
pushf
push
mov
out
xchg
sti
std
push
fisttpll
scas
outsl
int3
mov
inc
shrl
add
and
inc
lds
adc
push
cmp
es
cmp
popa
das
lds
scas
hlt
icebp
adc
sti
in
movsl
push
dec
adc
lahf
cs
push
mov
jecxz
xchg
add
xchg
mov
jo
icebp
or
lds
lcall
mov
inc
pop
js
fsubrs
movb
add
out
adc
pop
cli
push
mov
test
push
pusha
loopne
push
in
jns
das
js
jp
test
sbb
pop
sbb
xchg
repnz
mov
push
hlt
and
pushf
lahf
shrl
jns
and
and
imul
xor
dec
leave
mov
ficompl
mov
cli
jb
sbb
and
test
and
add
repz
fwait
inc
test
lea
in
jg
xor
imul
sbb
hlt
push
sub
outsl
adc
xchg
push
and
adc
lret
outsb
test
add
int
add
mov
and
adc
cmp
cwtl
dec
ret
mov
and
mov
arpl
add
in
pop
pop
sub
mov
or
xchg
xchg
and
cltd
xor
mov
out
es
adc
xlat
sbb
jbe
or
es
push
xor
xchg
or
das
iret
sub
sahf
xor
pop
xor
mov
imul
xor
test
sub
dec
mov
add
cmp
add
sbb
shll
inc
xor
xor
and
dec
add
dec
mov
mov
xchg
cmp
ja
mov
andl
enter
or
rorb
and
mov
pop
es
addb
mov
clc
repz
lods
sub
mov
dec
lcall
arpl
addr16
das
mov
js
sub
dec
fsubrs
outsl
outsl
je
addr16
jo
js
sbb
cmp
mov
out
inc
mov
jecxz
mov
out
popa
or
nop
loope
jp
xchg
decb
mov
test
icebp
jns
pop
addl
loop
int3
xor
jecxz
ret
pop
push
adc
popf
sbb
jecxz
xchg
mov
jp
jp
inc
xchg
rcrl
sub
lods
stos
ret
cmpsb
pop
mov
lds
fdivs
aam
dec
lock
loopne
hlt
mov
and
packuswb
cmpsl
ja
in
jno
daa
pop
add
repz
pop
xchg
rclb
inc
inc
mov
inc
rclb
add
sti
jne
test
mov
sub
mov
divb
jge
ja
sub
pop
push
rcll
inc
sbb
adcb
cmp
jb
sbb
adc
jo
push
xchg
sbb
jp
lahf
movsl
push
leave
xlat
xchg
enter
sub
in
jl
bound
push
push
xchg
aas
inc
test
cmp
inc
xchg
sbb
mov
inc
push
stc
mov
lods
inc
pop
xchg
dec
and
or
popa
outsb
cwtl
xchg
movsb
ss
mov
cmp
sub
lock
test
add
and
lcall
sbb
fbld
std
xchg
and
loopne
cwtl
inc
hlt
push
xabort
mov
xchg
shlb
sub
adc
nop
or
les
push
cmpsb
mov
push
icebp
add
adc
sbb
or
aam
mov
mov
sub
lods
mov
mov
arpl
and
enter
push
add
push
add
push
insl
push
or
push
bound
fiaddl
and
dec
jb
add
pop
sub
xlat
add
sub
add
mov
orl
fisttps
popf
mov
das
push
mov
pop
mov
xor
scas
icebp
and
jo
pop
sub
leave
sbb
jns
mov
inc
mov
aam
inc
ret
and
pop
push
pop
sti
imul
lcall
mov
ljmp
shl
adc
hlt
cli
call
mov
adc
mov
mov
push
aaa
jmp
mov
lds
sub
push
pop
or
scas
ret
push
inc
das
mov
add
dec
nop
cmp
outsb
orb
add
fldcw
adc
push
adc
gs
xchg
cmp
je
sub
popa
mov
fstl
xor
jge
pop
inc
pop
setne
popf
xchg
mov
imul
movl
mov
mov
test
ds
jns
cmp
add
xor
pop
stos
lcall
popf
jae
in
in
mov
and
adc
shrl
xchg
cmp
rclb
jl
subb
mov
int
push
daa
das
push
lahf
adc
jecxz
lods
pushf
js
or
std
jb
andl
pushf
lahf
jne
mov
lock
mov
stos
shlb
outsl
dec
sub
sub
push
and
sbb
lret
cmp
jg
fwait
dec
cmp
daa
jne
xchg
xor
fcoml
mov
in
sbb
enter
insb
cmp
lcall
add
mov
std
fwait
in
mov
jo
movsb
imul
lock
add
hlt
xchg
out
cmp
push
pop
mov
jbe
jo
movsl
jmp
loop
pop
lahf
clc
inc
push
fistl
and
aad
scas
mov
xor
insb
nop
push
and
js
jle
gs
dec
lahf
addl
fiadds
clc
xlat
mov
fisttpl
xchg
add
and
mov
sub
adc
pusha
sbb
mov
outsl
imul
jp
mov
imull
cmp
xor
test
sahf
into
inc
stos
mov
mov
and
sub
jg
inc
dec
lock
add
loope
pop
subb
das
cltd
sahf
jb
pushf
xor
out
mov
mov
in
push
int3
cmp
ret
cmp
cmp
push
into
pop
in
lods
inc
outsb
jo
adc
pop
cld
je
cmp
addr16
clc
and
pop
jno
sbb
xor
cs
mov
jno
in
jge
lret
int
outsb
loopne
jno
call
pop
or
inc
lods
xchg
xor
xchg
leave
xor
movsl
orb
xchg
xchg
xlat
pop
sti
aad
arpl
pop
adc
outsl
sbb
mov
inc
inc
inc
push
data16
and
jmp
jecxz
cmpsb
movsl
xchg
mov
imul
sbb
out
push
icebp
inc
leave
insl
sub
cld
push
hlt
mov
mov
push
pop
xor
jne
sti
add
push
shrb
or
scas
js
mov
int3
inc
pop
std
outsl
in
mov
push
sub
jno
rcrb
xchg
push
push
mov
in
hlt
push
or
sbb
jno
and
pop
xor
sub
std
sub
insb
pop
jmp
stos
inc
mov
xchg
mov
sub
subl
push
jle
popf
sub
inc
ljmp
cld
or
cmp
fistps
je
mov
ss
es
mov
dec
lods
es
js
ror
ffree
mov
fstpt
stc
addl
mov
xchg
jmp
and
cmpxchg
xchg
es
xchg
cmpl
loopne
mov
int
icebp
push
dec
scas
idivb
mov
inc
pop
bound
cmpsl
mov
jne
cs
pop
xchg
and
xchg
data16
adc
shlb
sub
mov
sbb
mov
icebp
icebp
inc
popa
push
rolb
or
mov
les
ret
mov
mov
ret
out
cli
fsts
mov
xchg
and
dec
test
sbb
xlat
jae
xchg
add
repz
insb
out
int3
ret
int
push
nop
popf
js
ds
pop
pop
pop
jg
and
cli
sub
mov
or
mov
ja
xchg
pop
push
aaa
jb
push
mov
pop
add
lret
ljmp
xchg
add
pop
push
repz
adc
loopne
lret
aam
loopne
add
mov
das
xor
dec
aaa
push
xchg
scas
loopne
xchg
jae
add
fisttps
insb
dec
icebp
sbb
aam
pushw
push
ror
push
int3
test
sti
leave
stos
push
insl
xor
nop
sub
ja
and
xchg
sbb
mov
loope
in
inc
xchg
iret
xor
cli
movq
jne
fsubrl
mov
jnp
sub
notl
jne
add
inc
enter
mov
test
aad
daa
sub
jo
xchg
lds
cmpsb
mov
iret
arpl
mov
ljmp
das
insb
xor
sahf
cmpsw
repz
fildll
iret
ljmp
push
and
mov
or
add
aad
push
mov
mov
sbb
sbb
add
push
cwtl
sub
sbb
mov
mov
jle
pop
pushf
in
or
fstpl
mov
xor
mov
rep
pop
push
int3
and
cmpsl
mov
mov
pusha
call
dec
fcomps
cltd
jbe
stc
and
push
sub
in
push
mov
push
sahf
mov
push
ffreep
pushf
push
mov
pop
lret
int3
sbb
rorb
fdivr
call
push
call
mov
loop
cmpsl
dec
hlt
lcall
inc
ficoml
push
rclb
mov
dec
pop
mov
sub
cld
andb
js
xchg
mov
les
push
imull
faddl
sub
popf
xchg
push
push
pop
pop
lds
push
loopne
lods
std
fistpl
dec
xchg
incl
mov
adc
int3
adc
aam
ds
sub
or
and
mov
or
cld
add
adc
pop
outsl
or
nop
cwtl
or
inc
and
bnd
xchg
mov
cld
sub
pop
pushf
push
shll
sbb
imul
lret
xor
or
ret
adc
in
xchg
jne
icebp
xor
fsubrs
mov
scas
fsubrs
adc
notb
stc
pushf
or
gs
jmp
nop
sbb
stos
fildll
adc
dec
imul
mov
mov
cbtw
cltd
pop
xor
mov
cs
jl
mov
fistpl
xchg
jecxz
push
repz
xchg
ret
sti
push
pop
cltd
sbb
adc
jmp
sti
push
mov
aas
test
push
sbb
inc
jg
jb
cld
aad
fwait
sbb
jo
and
fiaddl
mov
jb
repz
cmpl
enter
sub
and
xchg
movb
stos
pushf
add
pop
fs
adc
mov
bound
mov
pop
int3
popa
adc
clc
incl
mov
dec
jns
fmul
and
lret
sub
fstl
push
cltd
fists
inc
in
dec
sarb
inc
mov
addr16
xchg
mov
repz
out
fs
xlat
xlat
mov
push
ret
loop
and
rorl
imul
xchg
cli
iret
iret
movsl
mov
xchg
call
aad
xor
sub
pop
imul
repz
div
sub
das
cs
sbb
pop
jl
sti
dec
jno
pop
gs
repnz
xchg
jb
mov
pop
xchg
xor
cs
mov
adc
cld
sub
clc
pop
orb
mov
jl
jns
pushf
sub
push
mov
ret
cwtl
test
xchg
loop
lret
lahf
jae
call
fmull
pop
sarl
in
pop
jb
lcall
fdivrs
lcall
pop
adc
fbstp
and
or
jg
adc
imul
xor
call
mov
imul
push
push
lds
scas
test
add
jmp
insl
clc
mov
inc
test
jb
ss
dec
pop
jae
xchg
cltd
mov
push
and
cltd
jle
jg
adc
lret
icebp
sti
loope
sbb
out
mov
sbb
cmp
jnp
aaa
add
fs
cltd
sahf
testl
mov
jae
mov
lods
push
ret
and
outsl
push
popf
loop
mov
and
popf
or
push
lret
fwait
imul
push
insb
add
mov
paddusb
int3
insb
int3
int3
adc
jae
jae
xchg
push
dec
sbb
add
pop
xor
fistl
xor
jno,pn
les
sti
rorl
aaa
xchg
dec
xchg
mov
pop
cmpsb
or
push
cwtl
dec
xchg
pop
inc
mov
or
fdiv
sub
shl
jge
cld
dec
out
inc
sub
pop
jne
mov
dec
sub
mov
out
pop
imul
in
add
imul
xchg
and
out
scas
mov
adc
int
sbb
sbb
push
pop
roll
xchg
cmp
mov
repz
and
js
out
jl
pop
push
mov
sbb
xchg
xchg
push
jo
or
add
cmp
icebp
addb
push
cli
cld
jmp
popf
add
mov
fildl
push
cmp
push
or
pop
idivb
clc
lea
mov
sbb
stos
mov
or
loopne
test
adc
scas
mov
iret
cmp
add
das
fiadds
es
pop
push
test
pop
push
outsl
ss
mov
stc
cmp
xchg
enter
inc
insb
es
mov
ljmp
mov
int
iret
ljmp
scas
inc
jae
cs
mov
mov
sub
mov
mov
bound
and
cmp
pop
xor
xor
fisubrl
sbb
call
dec
inc
test
jae
cmc
inc
mov
and
stos
hlt
xchg
mov
imul
es
sbb
inc
popl
loop
addr16
adc
scas
sbb
outsb
lods
loop
scas
outsl
enter
mov
and
push
in
sbb
js
pop
and
jle
dec
push
aas
in
aaa
add
bound
inc
xchg
mov
popa
sub
arpl
ficompl
or
lock
ljmp
push
aam
push
inc
cmp
sahf
nop
xchg
dec
sub
xchg
mov
adc
fs
dec
sbb
rorb
mov
mov
fcomps
pop
loop
pop
ja
jmp
ret
icebp
out
and
mov
lahf
add
testb
lahf
sub
scas
adc
addb
mov
mov
loopne
shll
or
and
dec
out
add
adc
cltd
jb
or
add
jnp
xchg
jecxz
fwait
rorb
ficomps
scas
xlat
xchg
stos
mov
insb
lcall
fmuls
pop
adc
and
xor
xor
jecxz
or
xchg
cmp
call
push
cmc
sub
mov
xor
inc
enter
aas
hlt
orl
testl
ds
push
loope
pushf
cmp
cmp
jmp
wrmsr
fdivrp
or
jle
dec
and
shr
nop
pop
shlb
xor
stos
jno
mov
mov
stos
outsl
shr
lahf
cld
xchg
bnd
clc
mov
and
loope
sub
and
mov
sbb
xorb
out
mov
das
dec
enter
ficompl
jbe
or
jns
sbb
mov
jge
aas
lods
fiaddl
cli
dec
pusha
addr16
in
mov
rcrl
leave
lahf
push
pop
dec
or
movsl
or
ja
inc
lret
sub
call
data16
sub
mov
jge
xor
fnstcw
jne
inc
loopne
outsb
repnz
or
adc
mov
sub
lods
aam
jne
int
iret
add
push
hlt
setne
push
add
inc
push
mov
dec
inc
push
jg
mov
dec
stos
xchg
out
fwait
or
inc
dec
popf
dec
jo
dec
sbb
push
mov
cs
stos
rcrl
insl
stos
or
dec
pop
je
out
neg
stc
stc
adc
scas
std
mov
jle
test
cmp
shl
pop
ss
aam
inc
lcall
rorb
adc
loope
pop
jo
and
and
out
pop
dec
lret
mov
mov
xchg
xchg
jno
xchg
pop
lea
or
bound
add
mov
xchg
or
data16
je
in
xor
xchg
jns
je
or
addr16
pop
or
push
push
push
incb
pushf
mov
inc
pop
xorb
jae
sahf
xchg
aad
fwait
lea
jns
mov
mov
jge
aam
xchg
inc
iret
and
jp
ret
jle
jge
ja
mov
lea
iret
fbstp
fidivrl
aam
xlat
ss
and
test
clc
imul
jge
lret
mov
lret
pop
nop
iret
add
cld
frndint
or
inc
add
in
pop
cmp
jge
pop
clc
jnp
test
addb
or
sub
cld
icebp
aam
les
jb
jne
cmpsb
sub
and
fwait
jnp
int3
aam
fsubs
imull
iret
aad
in
fisttps
lds
scas
icebp
adc
jbe
fdivl
pop
jb
notl
sub
ud0
int3
popa
and
aad
pop
dec
mov
xchg
icebp
testl
std
dec
dec
jno
jbe
cli
sarl
imul
xor
dec
fucom
pop
jno
xchg
push
lock
mov
inc
orb
push
adc
push
rorb
pusha
xchg
mov
pusha
popf
ficomps
fstpt
mov
and
out
jnp
mov
pop
in
inc
sbb
push
sarl
inc
je
add
cmpsl
pop
or
out
inc
adcb
push
fstsw
inc
cld
pop
mov
pop
push
and
pop
adc
or
mov
cld
jmp
nop
out
pop
sahf
nop
mov
sbb
arpl
fidivs
xchg
cmp
rcrl
repz
and
and
mov
mov
and
mov
sub
cltd
pop
mov
mov
push
pop
enter
popa
mov
jge
push
push
lea
divb
dec
daa
dec
mov
popf
lock
jmp
inc
sub
dec
imul
jne
pop
std
add
or
js
xchg
xchg
mov
test
repz
add
in
cs
mov
adc
jecxz
ret
jno
jae
icebp
fs
outsl
sbb
and
sub
mov
push
dec
out
aaa
adc
xchg
movsb
add
out
sbb
jnp
dec
push
xor
or
jmp
loope
pop
cs
xchg
ret
in
scas
xor
iret
es
stos
lock
out
pop
in
pop
add
lcall
cmp
fimuls
mov
add
lcall
xor
push
call
cs
mov
dec
mov
in
into
inc
mov
enter
dec
xor
sbb
push
push
jle
mov
vscalefpd
fcmovbe
fsubl
cmpsb
push
insl
inc
xchg
jae
mov
in
and
pop
mov
pop
xor
or
pop
mov
mov
test
or
jo
out
int
clc
mov
jb
enter
push
out
mov
fldenv
ljmp
fs
in
xchg
push
insb
sbb
sub
sub
jecxz
out
lock
or
enter
mov
mov
sti
fnstsw
push
mov
cld
das
out
das
xchg
add
lahf
sub
pop
das
mov
sbb
lret
call
test
adc
mov
test
sub
aaa
repnz
sub
xor
arpl
bound
mov
outsl
mov
jl
xlat
sbb
mov
movsl
outsl
mov
pop
or
lds
inc
cld
jge
push
inc
mov
xchg
into
negl
xchg
ret
add
addl
cmp
nop
fimuls
sarb
arpl
mov
fsubs
movsl
ficompl
loope
mov
jmp
pop
push
pop
stos
push
fisubrs
mov
popa
inc
xchg
sbb
add
add
stos
inc
xchg
mov
inc
and
lock
xor
pop
sbbb
addb
inc
or
fdivrs
xor
mov
lds
out
subl
mov
push
xor
gs
clc
cwtl
cli
int
int3
add
pusha
and
das
mov
mov
sbb
cmp
sbb
adc
mov
jmp
dec
punpckhdq
inc
xorl
inc
cmpb
notl
in
mov
mov
cmc
iret
test
push
movsl
ja
jecxz
xlat
scas
test
repz
pop
test
dec
push
nop
jae
push
in
cwtl
outsb
xchg
cli
je
jb
dec
mov
rcr
aas
add
jle
jno
loop
cmp
bound
dec
mov
adcb
dec
or
inc
inc
add
mov
mov
pop
jbe
incb
in
push
dec
push
xchg
test
shrl
xchg
insb
fwait
mov
shrl
xor
push
xchg
mov
and
sbb
push
ret
sbb
mov
cmpsl
mov
roll
jnp
xor
call
data16
test
mov
rcrb
notl
inc
xor
xchg
dec
push
mov
and
and
cli
mov
jmp
leave
hlt
aaa
dec
adc
out
int
mov
and
pop
adc
jbe
xor
push
dec
sbb
in
add
and
mov
mov
mov
divl
dec
ror
shrl
push
jl
sub
jbe
jns
inc
in
sbb
hlt
xchg
and
add
xor
gs
xor
jp
push
dec
sbb
xor
in
test
mov
rcrb
push
cmc
push
adc
mov
shll
jle
sub
outsb
push
push
pop
inc
adc
sti
or
loop
cmp
adc
scas
shl
xchg
cmpsl
in
sbb
push
and
cld
mov
pop
cmpsl
aaa
pop
mov
lahf
sysexit
mov
push
inc
xchg
jle
ret
mov
mov
negb
loop
cld
shl
or
jp
adc
cs
jo
mov
out
xlat
mov
scas
add
sub
mov
fwait
dec
inc
mov
sahf
in
fsub
mov
test
popa
sub
or
and
inc
dec
inc
adc
insb
sarl
out
das
inc
ret
pop
sets
sub
in
xor
jmp
inc
inc
mov
xchg
lret
fdivrs
popf
jge
jp
mov
sub
sbb
jno
shrl
fstl
stos
pop
out
pop
movsl
mov
movsl
mov
cmp
add
cli
pop
in
or
out
ljmp
leave
rcl
mov
out
mov
mov
repz
ficomps
inc
fists
xchg
shll
dec
loop
jle
les
mov
movsb
movsl
push
lods
lcall
inc
cltd
xchg
jno
or
push
jne
dec
mov
pop
ja
xchg
xchg
jne
fs
ljmp
pop
pop
daa
adcl
adc
imul
cwtl
and
mov
xchg
adc
or
fisttpl
fcompl
je
shl
cmp
arpl
stos
add
and
xor
cmpsb
stos
loopne
pop
push
sbb
pop
adc
ljmp
pop
int
xor
sbb
and
inc
out
sub
pop
rcrl
adc
nop
mov
in
add
pop
add
pusha
pop
dec
ss
pusha
mov
sahf
test
into
or
adc
adc
fistps
push
inc
jp
and
pop
aaa
addr16
jg
add
push
out
or
lock
mov
cmp
test
imulb
jecxz
mov
scas
out
inc
xchg
fsubs
cwtl
test
adc
cmp
bound
add
push
push
and
cli
cld
rcll
in
sub
out
dec
in
add
cmp
mov
mov
fwait
in
iret
pop
inc
jne
xchg
and
mov
mov
mov
mov
cmp
iret
les
cli
mov
int
xchg
pop
add
push
adc
test
push
mov
or
bound
loopne
stc
cmc
xchg
jns
ret
xor
adcl
push
lahf
xchg
or
sub
loop
mov
cmp
ljmp
or
push
insl
mov
push
rcll
cmp
mov
xchg
cwtl
popf
aaa
inc
xor
mov
inc
mov
in
xlat
jle
sub
lahf
insb
or
pop
add
mov
sarb
insl
dec
negl
gs
jecxz
lock
jle
jb
leave
or
pushl
jle
inc
push
adc
in
sub
pop
cwtl
push
push
mov
pop
sbb
mov
mov
fisttpll
dec
cmp
push
jo
dec
sbbl
jns
cmp
adc
xchg
pusha
pop
sub
push
sbb
mov
jmp
and
jle
cmpsb
rolb
addl
cmc
cltd
add
fwait
std
pop
xor
mov
scas
and
in
ret
push
sub
jo
jl
fwait
ds
push
add
push
clc
sbb
or
add
lock
jecxz
or
popa
pop
adcb
cmc
clc
pop
fs
inc
cli
sahf
push
lret
xor
push
dec
xlat
cmpb
fucomp
and
lcall
jp
pop
lock
imul
aam
mov
outsl
push
jb
sti
mov
arpl
xor
xchg
cwtl
mov
fldl
cld
add
adc
jne
cmp
inc
clc
sbb
pop
push
add
xchg
lods
dec
fsubs
pop
inc
mov
cmc
push
pop
inc
cltd
jl
dec
adc
cs
adc
fcompl
add
cli
loope
mov
in
lods
mov
ja
inc
push
insl
add
xor
daa
or
loop
cmp
mov
mov
call
cmpsb
jg
push
inc
pop
scas
daa
shlb
sub
mov
sbb
pop
xchg
mov
stos
mov
ds
mov
xor
data16
jno
lods
shll
and
movsl
push
or
fsubrs
insl
repnz
enter
test
mov
into
insb
out
int3
loop
stos
ss
stc
mov
mov
lret
adc
iret
adc
xchg
pop
stos
scas
cmp
sbb
fdivrs
push
shrb
push
data16
mov
pop
dec
or
mov
cmp
jl
pop
inc
hlt
fcomps
adc
xchg
fs
dec
mov
jle
dec
insb
in
test
idivl
push
in
sti
pop
adc
negl
jb
and
jecxz
adc
mov
mov
in
aad
fs
das
stos
lods
push
popa
xchg
mov
inc
sbb
fmull
repz
and
stc
fs
or
movsb
mov
das
rcrl
jmp
out
pop
or
xchg
jmp
shll
mov
mov
push
je
xchg
mov
cs
sub
outsb
dec
hlt
pop
into
xorb
daa
push
cmp
jle
ljmp
inc
rcll
mov
lea
sti
je
pop
dec
shl
enter
xchg
repz
mov
aam
adc
sbb
and
ss
rorb
mov
rcll
pop
les
pop
pop
fwait
rcrb
int
dec
aam
xchg
cmp
mov
popa
into
mov
push
flds
jg
fwait
test
push
or
xchg
insb
movsb
xlat
daa
insb
jle
mov
cltd
cmp
aas
xchg
mov
daa
dec
repz
or
orl
cmp
and
cs
or
shll
popf
xlat
jb
jp
inc
loope
aam
adc
push
mov
ficoms
icebp
cmp
cmpsb
jns
mov
lret
pop
dec
xchg
inc
je
fstps
add
xorl
push
loop
daa
js
push
icebp
or
pop
aas
add
decl
les
hlt
fiaddl
xchg
inc
imul
push
out
mov
xor
outsl
mov
enter
jnp
lahf
mov
xchg
rolb
test
in
sahf
loop
mov
shrl
out
mov
mov
push
imul
adc
mov
in
xchg
fs
shl
jbe
repnz
ret
adc
cmp
out
popf
test
cld
cmpsb
pop
jno
push
scas
jp
lahf
fmull
adc
inc
incl
pop
mov
push
cwtl
in
call
xchg
adc
insl
outsb
aam
sbb
addl
and
jb
or
mov
adc
cmp
or
sbb
xchg
leave
stos
dec
fisttpl
dec
xor
imul
mov
sbb
xor
cmpsb
inc
rcr
leave
sbb
push
ret
es
testl
inc
stc
dec
dec
dec
dec
mov
aam
inc
adc
inc
hlt
stos
insb
push
cli
jne
call
or
iret
xchg
jbe
jae
sti
pop
int
mov
sahf
sbb
pushf
mov
lret
shll
xchg
or
lods
mov
cmpsb
mov
popf
stos
jb
stos
add
test
in
xchg
mov
jmp
or
sub
push
sbb
mov
jbe
imul
xchg
cmp
and
adc
orl
or
jle
js
mov
mov
sbb
pop
push
scas
mov
pop
test
pushf
orb
add
mov
stos
nop
mov
jmp
cmpsl
lds
pop
mov
or
mov
mov
loopne
sub
cmp
and
sbb
std
repz
or
push
int
movsb
subb
dec
dec
repz
adc
das
xor
mov
xor
rcr
sub
sbb
stos
repz
int3
xchg
inc
xor
out
cmp
inc
pop
or
pop
rorb
lods
mov
popa
xor
or
aas
sub
jmp
aas
push
xor
or
aaa
ljmp
outsb
add
loopne
insb
push
sbb
out
xor
aad
popf
or
mov
push
andl
pop
lock
push
sbb
fucomp
sbb
lar
clc
cmp
movb
jbe
scas
add
movsl
in
aad
cmc
pop
jns
outsb
mov
inc
jl
push
addr16
xor
or
lcall
faddl
sub
xor
xchg
flds
cmp
fstp
push
ds
pop
nop
loopne
lods
mov
fst
mov
push
mov
sbb
movsb
push
in
sbb
je
pop
ljmp
push
lea
mov
icebp
mov
or
inc
pop
mov
in
mov
test
lahf
jge
cmp
test
cltd
push
lcall
rorb
fimuls
or
pop
adc
scas
in
in
not
cmp
fisubl
and
popf
in
mov
cmpsl
dec
mov
dec
cli
jle
and
js
xorl
or
dec
popa
xchg
cld
add
lea
scas
roll
iret
sbbb
or
ljmp
aam
or
fstpt
and
push
lahf
test
scas
push
dec
mov
ja
jae
push
nop
ss
out
aaa
mov
push
cmp
lret
cltd
mov
adc
and
bound
repnz
out
push
cmp
pop
loop
mov
shl
jp
lds
cmpl
inc
xchg
mov
sub
add
xor
lds
test
ret
mov
mov
aam
lahf
xchg
sti
ficomps
jmp
cmpsb
push
movsl
stos
jno
mov
mov
stos
or
cmp
mov
adc
lret
mov
jo
mov
nop
lds
xor
fsqrt
cmpb
insb
mov
cmc
rolb
xor
int3
cmpb
xor
dec
test
lahf
and
dec
out
rorb
int3
and
test
outsb
shll
ljmp
dec
sub
push
out
ss
rcl
push
mov
aaa
jmp
leave
sbb
out
loope
loopne
xor
ss
jnp
mov
in
fsts
jnp
scas
xchg
and
mov
xchg
mov
ret
dec
test
imul
lods
mov
xchg
xchg
shll
jmp
sub
mov
and
mov
movsb
mov
sbb
mov
repz
mov
jl
pushf
outsb
ljmp
icebp
int3
xor
xchg
push
mov
shlb
or
mov
mov
lret
add
movsb
inc
rorb
repnz
mov
xor
hlt
sub
jecxz
subl
or
xor
lea
fisubrs
and
xor
xchg
or
lcall
leave
fildl
shll
fsubr
pop
enter
bound
call
out
pop
add
call
cmp
jl
rorl
cmp
xor
mov
pushf
cltd
mov
sahf
adc
push
mov
test
xchg
out
sarb
mov
jb
sub
sahf
addr16
arpl
jg
push
sub
iret
jo
in
push
mov
insl
out
js
in
mov
xchg
pop
test
daa
mov
jbe
insl
in
xchg
pop
and
test
inc
dec
sub
icebp
cmp
pop
std
lcall
sub
and
add
xchg
enter
and
xor
jecxz
insb
lahf
add
adc
push
rorl
jle
mov
lret
sbb
jl
lods
mov
mov
addb
push
or
test
xchg
and
and
mov
push
pop
roll
push
pop
and
movsb
dec
cli
lret
mov
lea
push
movsl
xchg
insb
push
pop
mov
xor
mov
cmp
cmpsl
pop
cwtl
out
mov
cmpsl
xchg
fsts
jbe
push
hlt
sbb
or
imul
call
gs
mov
popa
andl
xchg
mov
xor
mov
es
mov
and
push
cmpsl
mov
jmp
pusha
insl
mov
xlat
mov
adc
mov
xchg
adc
mov
pop
imulb
jo
mov
inc
xchg
lock
jnp
addr16
adc
test
sar
mov
cmpsb
jle
dec
stos
lret
mov
dec
pop
mov
stc
rolb
cmp
mov
xor
add
cmp
shll
pop
addb
sub
jmp
shlb
loop
pop
lcall
test
mov
ss
inc
pop
jns
adc
push
xor
pop
aad
lds
shlb
xchg
fistpll
jo
in
xchg
not
mov
jge
pop
iret
lock
insl
push
mov
pop
xchg
xchg
sbb
or
dec
lds
or
cmpsl
ja
popf
inc
cld
popa
mov
xchg
mov
insb
fsts
lds
add
xor
fwait
inc
inc
adc
in
daa
sarl
pop
mov
xchg
mov
jp
mov
iret
lret
test
lds
fldenv
daa
mov
inc
scas
aam
scas
pop
mov
sub
pop
mov
jp
push
int
std
or
sbb
jp
fs
lods
cwtl
add
add
mov
xor
cld
xchg
pop
jmp
xorl
repnz
rolb
pop
fstl
pop
xchg
jae
je
aaa
mov
cltd
inc
imul
mov
mov
in
mov
pshufw
xor
outsl
stc
cld
inc
repnz
xor
cmp
cld
inc
enter
clc
das
jp
clc
sub
ret
or
cmp
fistl
lea
dec
add
jecxz
sahf
mov
ret
adc
jne
mov
out
stos
mov
inc
fdivrl
imul
cmp
sbb
and
shl
jns
mov
mov
popf
push
lods
pusha
js
push
xchg
loop
fsubrl
cld
inc
lods
push
cmpl
fcompl
addb
cli
in
mov
leave
inc
insb
inc
sbb
inc
cltd
dec
addl
ljmp
dec
aaa
aam
push
mov
mov
mov
scas
mov
decl
push
dec
fdivl
nop
repz
in
cmp
addl
xor
jns
xor
mov
sub
and
cwtl
insb
add
lahf
aam
push
push
outsl
clc
leave
les
pop
int
das
sub
mov
or
test
pop
inc
mov
imull
add
xlat
pop
std
cmp
fdivrl
daa
iret
data16
cmpsb
mov
out
shll
mov
inc
push
loopne
test
sub
jg
cmpsb
pusha
mov
dec
and
outsl
insl
pop
clc
push
sahf
push
cmp
ss
jle
dec
mov
int
dec
clc
fwait
cmp
mov
into
rcrl
daa
mov
gs
add
mov
rol
rolb
inc
sbb
and
leave
push
in
es
imul
jle
aas
in
adc
imul
mov
mov
jge
lock
xchg
mov
jecxz
add
into
inc
pop
adc
insl
jle
pop
loopne
inc
loopne
ret
xorl
or
in
fstpt
test
loop
mov
test
sub
xor
pop
add
loope
outsl
push
dec
xchg
lods
lods
mov
cmpsb
lods
pop
stos
pop
lret
sbb
pop
ljmp
imul
aas
mov
shrl
inc
dec
sub
xchg
jecxz
add
add
jp
shll
xor
adc
arpl
xchg
fsubrs
jnp
jmp
pop
xchg
insb
mov
and
xchg
cmp
mov
add
sar
add
cmp
mov
or
add
push
push
jns
or
push
mov
out
lods
pop
orb
stos
dec
inc
mov
jbe
subl
leave
movsb
mov
and
cmpsl
ret
inc
test
cli
stos
push
pusha
clc
cmp
push
mov
cli
mov
aaa
or
jle
test
pop
xchg
cmpsl
ret
mov
adc
jns
cmc
mov
push
out
sbb
inc
mov
or
push
ljmp
jns
mov
add
adc
xor
movsl
sti
movsb
vminpd
pop
inc
bound
sub
ret
sub
jp
in
sbb
imul
fs
jnp
add
cmp
leave
add
push
imul
push
into
test
insb
bound
test
mov
pusha
mov
sbb
jp
xor
jo
mov
popa
subl
sbb
sub
jl
es
cwtl
aas
jmp
pop
inc
push
cltd
cmp
and
pop
mov
daa
dec
movsb
xor
and
xor
fcmovnb
push
addr16
in
pusha
inc
loope
pop
pop
scas
push
lea
rcrb
pop
add
ja
push
jg
sbb
dec
inc
mov
imul
xchg
xchg
insb
sub
pop
scas
out
mov
int
mov
imul
adc
int3
shlb
sbb
pop
pop
inc
or
pop
mov
xor
mov
inc
popf
sub
dec
push
icebp
testb
pop
add
shll
push
movsb
cmpsb
lcall
or
cs
cltd
jne
mov
aas
movsb
adc
aaa
stc
mov
movsl
lods
push
in
cmp
insb
mov
jo
xor
loope
addr16
aad
xor
subb
cmp
bound
mov
jno
xor
dec
sti
cwtl
mov
sbb
and
push
icebp
sbb
fcoml
jg
cmp
jns
aaa
push
pusha
rcrb
das
adc
cmp
sarl
and
lea
mov
fwait
push
stc
push
cltd
lret
in
lret
push
insl
mov
sahf
pushf
imul
stos
dec
adc
cmp
pop
rorl
stos
sub
loope
imul
add
add
rcrl
cmc
out
lcall
cmp
mov
fbld
ja
push
sbb
mov
repnz
xchg
lret
aad
test
push
cmp
mov
cmp
xlat
mov
jge
sub
mov
or
shll
fmull
cmp
out
or
jno
and
shrl
jg
shl
mov
inc
inc
in
jae
and
sub
xor
mov
shr
push
test
lods
inc
aam
sarl
aas
andb
adc
push
sub
xlat
jg
dec
es
ds
std
jmp
cmp
mov
clc
repnz
ss
xchg
stc
sub
sub
and
dec
mov
inc
jns
cmp
test
sbb
rcrl
cmc
movsb
in
hlt
push
xchg
mov
jmp
jmp
add
out
mov
jle
push
jnp
in
incl
fs
mov
inc
dec
subl
jo
mov
idivl
fistpll
js
jae
lods
push
xchg
adc
out
push
jb
xchg
lock
pop
lods
sahf
cmpsb
subb
lock
ret
sbb
inc
scas
jg
push
addr16
sbb
stc
int
inc
adc
fsts
rol
testb
repnz
xor
ret
mov
jb
and
jnp
sti
add
shlb
mov
out
into
jp
cld
adc
je
pop
xor
mov
cmp
jb
push
repnz
lret
dec
clc
cmp
jmp
adc
lock
fwait
sub
mov
push
xchg
pusha
sbb
scas
xor
adc
inc
ret
outsb
and
sbb
cmp
adc
xor
out
ljmp
gs
shr
mov
rcrb
popf
and
loop
inc
pop
xchg
addr16
or
mov
loop
mov
out
pop
sahf
dec
addr16
ljmpw
cmp
xor
dec
or
fs
idivl
shll
cmpsb
daa
push
and
mov
or
icebp
xchg
xchg
andb
aam
dec
mov
sbb
xchg
cli
sbb
mov
fld
xor
addl
pop
xchg
idivb
cmc
mov
pop
sahf
inc
adc
mov
in
shl
sbb
jecxz
jb
cmp
rolb
test
inc
mov
mov
movsb
cmp
inc
cmp
jb
jmp
pop
loop
jno
jp
adc
clc
cmpsb
nop
jmp
push
data16
xor
std
xchg
xchg
clc
out
fsubrl
jmp
dec
xchg
inc
pusha
repnz
ret
cltd
cmp
sysenter
cwtl
popa
mov
clc
iret
lret
les
ret
cmp
pop
mov
or
sub
mov
mov
pop
mov
sti
test
test
loop
fwait
inc
adc
fisubl
mov
and
xchg
je
insl
push
cmpsl
shl
adc
inc
dec
movsl
stos
nop
or
dec
in
push
push
sti
cmp
push
push
or
cmp
es
iret
fdivrl
pop
xor
pusha
xchg
push
icebp
dec
add
pop
stos
sbb
sub
xchg
arpl
int3
pushf
mov
jge
sbb
jo
sar
or
mov
inc
add
mov
in
add
or
in
int
fcoml
inc
sub
gs
sahf
inc
fistpll
dec
scas
and
sti
sub
fdivrl
cmp
or
jae
jp
mov
jmp
int
sbb
jne
lcall
les
mov
mov
sbb
out
sets
popa
xchg
push
xchg
pop
mov
sub
pop
xor
sar
xchg
xor
mov
adc
mov
daa
mov
cmp
mov
shlb
das
jp
ss
test
mov
xor
mov
cltd
push
sub
inc
movhps
sti
scas
arpl
jb
sbb
xchg
sbb
jp
insb
fildll
sbb
sbb
scas
push
rclb
aad
cmp
cmp
cmpb
lods
push
mov
pop
call
addr16
int3
lock
sub
mov
or
in
dec
nop
add
sub
add
outsb
push
mov
mov
in
inc
cmp
xor
jbe
mov
inc
cmp
fsubl
icebp
pop
mov
cld
push
pusha
data16
pop
and
scas
ja
sarl
pop
sub
movsl
mov
arpl
xor
in
stos
pusha
mov
ss
ja
push
scas
mov
jmp
jne
dec
xchg
cmc
in
mov
cmc
insb
icebp
mov
sub
sub
sbb
and
sub
imul
and
or
scas
mov
push
jnp
cli
in
pop
jae
lea
ss
jg
loop
sub
ljmp
sar
add
xor
es
das
sub
adc
sbb
sbbl
enter
loop
pop
dec
add
daa
lret
mov
repz
jnp
jle
dec
inc
test
cmpsb
pop
cmpsl
jecxz
dec
sbb
add
add
les
jle
imul
movsb
or
lods
imull
dec
enter
shrl
data16
push
jne
jne
mov
out
inc
mov
cld
mull
testb
mov
inc
outsb
cltd
loop
inc
mov
mov
mov
mov
or
pop
or
dec
leave
mov
sub
insl
jp
jmp
loopne
or
jl
mov
nop
cli
movsb
pop
push
idivl
aam
or
push
xor
nop
push
pop
push
sbb
imul
adc
add
sbb
sbb
xchg
negb
push
adc
cmp
adc
cmp
mov
ja
jno
fsubs
cli
pop
in
popf
test
addr16
pop
shll
popa
mov
xlat
add
jae
out
arpl
inc
daa
xchg
push
sub
sub
je
hlt
mov
push
inc
sub
jmp
mov
aas
cmp
mov
mov
clc
mov
inc
push
lret
in
iret
pop
sub
pop
repz
pop
stc
pop
enter
cmp
xor
fidivrl
pop
aaa
pusha
cmp
mov
xlat
mov
jge
xor
mov
sub
xor
mov
fdivrl
rcll
shl
mov
jo
imul
add
shl
sahf
pop
sbbl
aad
idivl
imul
clc
in
sub
repz
enter
dec
mov
std
cmpsb
adc
inc
mov
jnp
fisubl
push
sahf
fdivrs
jo
xchg
cld
mov
pop
xor
adc
pop
les
and
mov
mov
data16
ja
cmpsl
fbstp
mov
dec
mov
xor
xchg
mov
push
js
sbb
mov
or
les
inc
in
fs
push
mov
in
push
xorl
lret
push
js
icebp
jp
jecxz
out
stc
dec
es
iret
push
ja
inc
adc
data16
das
lret
or
out
in
or
push
mov
mov
ret
mov
push
movsb
lds
inc
mov
sbb
movsb
and
dec
mov
mov
cmc
and
mov
mov
jge
lods
pop
lods
add
fmull
lock
lcall
pop
fiadds
cmp
and
or
scas
insb
xor
adc
sbb
cwtl
mov
sbb
xor
stos
lods
and
stos
cmp
and
out
push
jae
lret
kunpckwd
imul
add
add
xchg
andl
sbb
subps
jmp
dec
sahf
hlt
pushf
adc
and
lcall
test
sub
mov
movsb
outsb
pop
jns
inc
adc
lds
sub
cld
cmp
push
scas
mov
insb
xor
aad
lock
xchg
xchg
xor
cmp
sub
mov
gs
cmc
jmp
cmp
clc
ret
inc
fsubrs
arpl
adc
ret
dec
shrl
add
and
jge
adc
xor
out
mov
push
mov
cmp
subl
lret
mov
mov
xorb
jmp
lods
iret
and
loopne
cld
clc
cmp
out
lret
cltd
jle
adc
xchg
mov
sbb
dec
in
mov
lds
sub
cld
jns
and
fldcw
cmovae
push
add
pop
mov
insl
movsl
mov
lods
cmp
fdivrp
add
aas
test
inc
negb
test
les
dec
sbb
imul
push
jecxz
hlt
push
in
jge
subb
std
ja
dec
movl
cmp
rcl
jnp
mov
incb
xchg
sti
out
insl
inc
lahf
lock
push
sbb
mov
xchg
or
out
xlat
dec
and
cwtl
xlat
adc
lret
xlat
insb
cmp
movsb
fmuls
repnz
adc
add
pop
jl
shll
and
shll
pushl
test
push
mov
xchg
cwtl
bound
je
jno
imul
jo
jmp
push
lret
sub
jne
dec
mov
mov
push
mov
mov
mov
das
dec
xchg
subl
rclb
shrd
mov
in
test
loope
push
jl
mov
leave
pop
ja
sahf
orl
xor
rorb
push
mov
scas
out
lods
add
ret
stc
adc
xchg
sbb
inc
dec
mov
cmp
xchg
push
dec
aas
push
mov
mov
xchg
lahf
imul
cmc
lds
es
jp
and
dec
and
cwtl
xor
and
mov
or
mov
scas
mov
mov
add
fiaddl
jle
pushl
xchg
cld
jmp
cmp
dec
mov
add
dec
fiaddl
fcoms
in
ds
aam
mulb
repz
xchg
push
sub
into
int3
sbb
mov
fisubrl
add
push
pop
aaa
int
lds
int3
fisubrl
and
sbb
inc
jecxz
pop
jbe
add
jmp
jns
and
int3
test
and
addl
je
dec
rdpmc
adc
adc
jae
cmpsb
movsl
xchg
vpcmpeqd
call
pop
inc
jle
jg
cmp
inc
xor
int
xor
xchg
icebp
dec
dec
aas
adc
icebp
aas
shr
repz
jno
fstpl
es
adcl
pop
or
xchg
and
xchg
and
daa
or
cmp
int3
shll
xchg
add
into
imul
aas
test
add
call
sub
shrb
jbe
adc
shl
jno
addr16
or
mov
dec
fstps
loope
and
push
pop
push
xchg
dec
push
pop
movsb
mov
sub
clc
xor
pop
dec
fisttpll
ret
rorb
or
xchg
jno
pop
fdivs
adc
xchg
push
aad
leave
xchg
aaa
xchg
fidivrl
leave
lods
jb
in
mov
das
xchg
jbe
inc
rcrb
xchg
inc
mov
mov
mov
xchg
inc
sarb
cmp
mov
mov
les
loopne
cmpsb
push
lcall
ret
push
and
shll
mov
shrl
mov
cmp
imul
cmp
stos
loop
push
inc
pop
and
pop
mov
aam
pop
stos
sbb
push
test
roll
sub
adcb
pop
mov
mov
push
les
cmp
lods
inc
lock
adc
cmc
jnp
mov
push
xor
je
jmp
scas
fs
notb
insl
mov
mov
pop
mov
dec
dec
xchg
iret
imul
inc
mov
dec
scas
daa
or
mov
and
shr
push
mov
rol
inc
dec
xchg
loopne
insb
stc
lea
fsub
inc
xchg
jge
mov
test
out
cld
lds
inc
fcomip
insl
jae
and
pop
popf
xchg
imull
mov
lock
in
pop
mov
pop
lods
pop
shlb
xchg
rcrl
push
int
add
jb
adc
out
sbb
les
jns
fisubrs
fwait
inc
or
and
call
loope
loope
daa
mov
insl
bound
pop
xchg
lahf
inc
rclb
out
pushf
mov
jl
in
sub
or
dec
xorl
xchg
test
sbb
sub
test
mov
push
sbb
jl
flds
xchg
dec
lret
inc
xor
push
test
push
fdivl
sbb
sbb
sub
lret
stc
xchg
out
xor
or
pop
adc
mov
aas
pop
or
lahf
out
mov
mov
jno
ljmp
pop
std
dec
das
mov
push
cwtl
call
loopne
iret
inc
outsb
or
push
jmp
mov
pop
lea
out
call
fstpl
pop
lea
push
iret
xchg
inc
sub
movsl
pop
inc
and
sub
push
cmp
ret
jp
sarl
pop
or
daa
lods
scas
ficoml
sub
aam
lds
es
adcl
fucomi
loop
pop
sahf
pop
andb
adc
sbb
mov
loope
shll
aaa
mov
bound
nop
inc
lahf
ffree
lret
lcall
lea
push
mov
sbb
inc
add
mov
cmp
cwtl
jg
dec
or
jmp
out
xchg
inc
and
ficoms
push
addr16
leave
xchg
jo
add
mov
lret
lock
lods
cmc
frstor
aad
dec
mov
loopne
ror
ret
mov
lds
std
das
cmpl
sarl
cld
inc
push
pop
in
stos
es
mov
mov
lea
pop
adc
lahf
xor
mov
push
jecxz
loop
daa
inc
sub
leave
adc
jp
aas
push
push
mov
push
out
adc
sbb
cli
rcll
lahf
sub
ret
icebp
int
xor
jle
and
add
xor
mov
inc
loopne
jb
xor
add
sub
mov
xchg
call
inc
and
fisttps
mov
testl
out
jb
rcl
jl
push
xchg
aas
sbb
inc
ror
xchg
fstpt
sub
xlat
push
outsl
cmpsl
mov
xor
lcall
mov
loopne
mov
in
mov
jg
cli
shll
iret
mov
mov
cmp
in
add
sub
dec
adc
pop
iret
lretw
cmp
cmp
lret
std
push
es
dec
lret
lods
in
xor
popa
movsl
cmp
popa
popf
inc
mov
sbb
add
fcomps
pop
repz
mov
mov
add
fdivs
mov
das
int
je
stos
jecxz
pop
cmp
cmp
ljmp
mov
dec
addl
inc
and
mov
out
cld
adc
insl
lahf
sbb
cmp
pop
dec
dec
cmp
jno
cli
icebp
fcoml
adc
std
add
jo
mov
jl
icebp
lock
and
mov
data16
repz
loop
aas
jbe
test
push
push
je
iret
fldenv
enter
sub
out
incl
cltd
aas
mov
sbb
and
gs
mov
jb
repz
jp
mov
jb
ficomps
xchg
and
push
push
movsb
arpl
aam
leave
fmul
xor
mov
out
popl
adc
dec
xor
hlt
inc
sbb
lret
sub
fiaddl
ja
gs
bound
stc
fsubl
sub
sahf
pop
xchg
cwtl
sub
dec
ror
or
arpl
push
cmpsl
and
xor
int
inc
push
pop
inc
adc
popa
cli
sti
inc
mov
ljmp
mov
xchg
push
std
repnz
stos
jb
aad
outsb
sahf
pop
aaa
cs
enter
rorl
dec
push
dec
mov
ds
pop
mov
out
pop
sbbl
in
popf
imul
pop
inc
cmp
sbb
ret
nopl
jecxz
insl
mov
xchg
dec
out
int
mov
clc
mov
lea
cltd
add
jle
popl
cmpsb
sbbb
push
jns
sub
and
lea
je
adc
mov
and
dec
pushf
addr16
pop
jne
cmp
scas
int
lock
loop
lds
jle
adc
pop
push
xor
mov
push
arpl
sgdtl
sub
orl
out
cmp
test
inc
cmc
in
or
fsubrl
push
popa
mov
pop
pushf
mov
inc
mov
test
and
addb
nop
xor
loop
jo
gs
fstps
aaa
mov
addr16
out
mov
bound
cmp
lds
dec
lods
dec
jno
adc
iret
push
sub
test
pop
insl
and
int
jmp
add
pop
add
xor
mov
or
hlt
fs
fbstp
pop
sarb
mov
ss
push
xor
lock
out
popa
movsb
imul
dec
insb
fildll
mov
inc
jb
jmp
rclb
ret
adc
sbb
jecxz
mov
mov
enter
dec
imul
jge
jp
cwtl
fistpl
mov
popf
push
push
loope
add
push
inc
mov
cmpsl
cmp
out
shl
lock
xor
xor
cmpsb
sti
lea
mov
loopne
ret
mov
fistps
lret
loop
inc
in
nop
les
shl
fildll
jecxz
push
inc
dec
or
push
push
xchg
js
adc
fnstcw
and
xchg
idivb
test
popf
mov
or
stos
sub
es
test
jmp
outsl
out
ret
rcrl
popf
cmpsl
adc
or
popf
cs
dec
or
inc
loope
lret
hlt
arpl
dec
mov
repz
loope
xlat
or
imul
stos
popf
movsl
pop
insb
sarb
movsb
js
cmp
aam
inc
sbb
and
faddl
aad
in
sub
sub
mov
push
xchg
adc
add
sbb
addr16
je
pushf
roll
std
xor
popf
adc
int
fmull
pop
out
inc
mov
out
out
mov
repz
das
int
mov
int3
outsb
pop
inc
xor
aam
leave
imul
pop
shrb
jecxz
sub
jg
jne
sbbb
add
fwait
push
xchg
dec
add
xor
pop
pop
lds
or
push
nop
inc
or
xchg
ds
iret
aam
inc
adc
or
aas
outsl
stos
mov
inc
and
das
adc
fistl
sbb
pop
ja
std
lds
sub
jb
dec
imul
leave
cld
push
in
movsl
and
aam
and
rcrb
adc
imul
sbb
mov
sub
mov
xor
std
lds
xlat
hlt
sbb
pop
cmc
decl
mov
inc
std
outsl
mov
in
jle
dec
push
out
mov
add
add
adcb
dec
pop
cmc
movsb
xor
push
aas
pop
ret
call
lea
daa
pop
lock
push
xchg
mov
aaa
aaa
cld
push
mov
adc
mov
xchg
inc
mov
in
xchg
lsl
pop
cmc
out
sub
lret
lahf
add
mov
xchg
lcall
fmull
mulb
cli
sbb
subl
cli
es
add
imul
cli
jb
sub
sbb
into
bound
out
mov
mov
pop
int
dec
sbb
test
and
pop
lret
sbb
mov
dec
movsb
pusha
out
pop
shll
or
inc
outsl
insb
cs
jg
cmp
jp
adc
rcll
mov
cmp
outsb
sbb
insb
cmc
imul
hlt
or
xor
inc
inc
jae
cmpsb
lods
mov
mov
mov
lar
jl
cmp
shlb
fcmovnbe
ss
test
jecxz
std
cmp
pusha
xor
jecxz
mov
popf
and
fs
cmpsl
in
enter
lcall
inc
arpl
push
fwait
cmp
jge
jno
pop
orl
iret
jge
cmp
xchg
jb
mov
mov
repz
out
jbe
jbe
inc
sbb
jge
jo
sbb
adc
push
fnstsw
call
or
pop
mov
sub
inc
adc
das
jg
push
loopne
test
lods
push
test
pop
jmp
xorl
push
shrb
bound
fstp
cwtl
cwtl
xchg
leave
aad
lahf
inc
das
xchg
jno
mov
push
fldl
adc
inc
xchg
mov
sub
js
xor
hlt
mov
insl
scas
cmp
cmpsb
out
sub
ljmp
mov
int
rcrb
cmp
into
aad
jmp
ja,pn
dec
sti
xchg
xchg
imul
gs
push
jae
rcr
in
inc
sub
subb
pop
add
aam
or
inc
lcall
mov
addr16
pop
cmp
sbb
jno
inc
ret
dec
or
jae
mov
mov
adc
lods
fs
cld
popa
sbb
stos
mov
jp
in
and
push
out
xchg
add
ss
push
dec
push
jb
jbe
push
inc
adc
out
call
push
xchg
call
mov
dec
ret
dec
xchg
ret
inc
cmp
mov
insb
sbb
loop
jecxz
cmpsl
aam
movsb
xor
outsl
sub
jmp
inc
hlt
cmp
inc
cli
rcll
mov
mov
xlat
add
mov
mov
bound
lcall
cli
inc
psrlw
lods
lea
in
mov
test
add
push
mov
add
pop
fldpi
push
fiadds
cmpsb
xlat
jle
fcmovb
xlat
nop
int
adc
shr
mov
push
and
jae
jp
push
ss
je
xor
outsl
loop
ss
mov
push
or
dec
sub
fwait
imul
cwtl
xor
fs
insl
or
outsl
stc
lcall
jle
and
add
sarl
insb
insb
popf
xor
xor
cmp
jle
mov
pop
adc
push
lcall
aad
adc
pop
inc
mov
push
mov
lods
cmp
mov
jns
test
and
push
dec
sub
xchg
sti
pop
es
mov
adc
adc
dec
outsb
stos
add
sbb
addr16
in
mov
inc
push
psubd
cmpsl
and
adc
cmp
sti
test
jg
hlt
xchg
repz
mov
clc
cmp
mov
inc
xor
push
and
lods
push
mov
dec
cmpsl
lock
out
in
lods
insb
push
ds
fnstenv
sub
add
push
adc
ja
fidivrl
mov
adcb
xor
lret
scas
push
cmpsb
mov
xor
dec
mov
and
clc
imul
mov
dec
push
mov
aad
insl
loop
cmp
mov
out
pop
fiadds
pop
push
mov
xorl
push
cmp
mov
mov
jecxz
icebp
cld
mov
popl
pusha
pop
or
mov
test
ljmp
nop
jmp
pop
sub
pop
mov
out
adc
stos
sahf
mov
sbb
mov
jg
nop
push
jecxz
pusha
fldt
add
cltd
inc
mov
xchg
lock
jmp
cltd
push
xchg
adc
in
or
iret
xchg
call
test
add
out
mov
dec
cmp
inc
or
dec
sti
arpl
shrl
cwtl
outsb
fsubr
out
push
push
xchg
ret
je
movsb
lea
xor
sbb
test
mov
xor
mov
in
adc
fistpll
push
gs
hlt
pop
mov
pop
adc
adc
call
pusha
enter
lret
sarl
xchg
mov
lock
popf
pushf
mov
iret
fstpl
inc
loope
aad
stc
jecxz
ljmp
sti
in
pop
mov
xchg
xchg
mov
clc
pop
in
mov
fisttps
push
aad
sub
sub
into
xor
notl
loopne
push
in
aad
xchg
outsl
stc
not
lret
push
ds
lock
loope
jge
xchg
push
aam
arpl
cmc
fs
dec
jo
dec
mov
fisubl
sbb
lea
incl
ljmp
xor
xchg
lea
aam
inc
xor
cli
mov
mov
pusha
aam
scas
lds
inc
mov
insl
aaa
rcl
out
andb
pop
bswap
push
lods
inc
and
add
test
out
cwtl
cmp
adc
std
dec
lds
stos
pop
cmpsl
popf
push
lea
aad
iret
jns
iret
mov
mov
daa
push
pop
mov
mov
or
xchg
shll
mov
enter
or
jbe
mov
jmp
testl
ret
das
mov
push
ja
pushf
or
cmp
sub
jo
push
or
sub
and
mov
ljmp
movsl
stos
add
xchg
mov
adc
xchg
pop
imul
lahf
xchg
inc
fnstcw
je
adc
mov
cmp
push
jnp
pusha
call
mov
xchg
pop
lea
adc
pop
cmp
jno
mov
jle
rcl
push
daa
addl
xor
das
push
mov
push
fldt
inc
daa
testb
arpl
mov
into
scas
mov
adc
mov
sub
ja
je
pop
cmc
mov
mov
jne
jbe
pop
nop
or
sbb
insb
dec
inc
pop
add
add
leave
movsb
andl
push
cmc
daa
jbe
icebp
ret
call
lods
adc
xchg
stc
in
jnp
sbb
in
or
pusha
icebp
adcl
ret
push
fiadds
cli
div
xor
and
lret
jno
dec
sbb
ljmp
test
mov
xchg
or
xchg
jns
out
outsb
pusha
subb
pop
inc
inc
mov
dec
nop
sti
jl
and
mov
or
insl
notb
inc
cmp
loopne
dec
lret
sub
sub
cld
in
dec
mov
mov
stos
mov
lea
rolb
sbb
aaa
cmpsl
insb
adc
or
aaa
out
subb
xor
out
lea
arpl
cmp
movsl
xor
ret
addr16
lock
lea
movl
notl
or
add
xchg
inc
push
xor
jne
mov
inc
inc
sub
push
xor
les
xor
jae
mov
sbb
stos
clc
jmp
mov
insl
repz
adc
jbe
xor
xchg
sti
xchg
mov
lea
fisubl
xor
add
jno
sbb
jnp
jns
lods
push
fcoml
push
mov
loope
packssdw
dec
dec
sub
int3
lcall
xorl
imul
or
test
mov
rorb
cmc
inc
inc
orl
ret
ror
xlat
or
cmpl
sbb
bound
loopne
movsb
stos
sub
mov
cmp
xchg
outsl
xor
sbb
sub
sahf
test
aad
clc
and
das
fcmovne
lods
or
mov
inc
xor
dec
push
ss
jle
sub
xlat
pop
fsubrp
mov
jl
adc
jp
ficoml
xor
add
mov
mov
outsl
dec
psubsb
dec
add
lcall
xor
mov
and
sub
xor
sub
mov
test
pop
imul
aas
loop
in
shll
sbb
movsl
je
mov
sub
add
push
loopne
or
ret
pop
mov
pop
cmc
jmp
outsl
aam
gs
ja
or
push
mov
aas
jp
mov
mov
add
imul
lods
hlt
cld
mov
out
xchg
sbb
mov
add
or
les
xor
bound
jno
xchg
int
and
mov
rclb
lahf
and
mov
and
pop
mov
pop
jno
pop
frstor
int3
clc
jb
loop
lds
and
mov
jmp
and
or
mov
aad
in
shrb
lock
ja
enter
aaa
cltd
pop
dec
mov
fnsave
repnz
push
jbe
xor
enter
test
xchg
jg
jo
push
adc
lcall
das
gs
je
call
xor
cmp
sarl
sti
mov
shrb
int
psubsb
or
cmp
outsb
xlat
push
int3
sbb
enter
mov
mov
add
sbb
push
ljmp
popf
xchg
mov
insl
sbb
sahf
cld
test
movsw
push
fnstsw
inc
push
mov
add
sub
test
jno
dec
pop
test
in
pop
pop
dec
mov
movsl
xchg
dec
pop
stos
shrb
and
hlt
movsb
mov
lods
sub
or
leave
xchg
xchg
repnz
ret
pusha
pop
fcomps
movsl
jns
xor
or
fcompl
daa
sbb
nop
nop
or
jae
shlb
jne
icebp
mov
dec
jno
adc
imul
addr16
int3
mov
inc
pop
fadds
mov
mov
int3
or
xor
mov
push
xor
sub
into
fisubl
test
sub
in
cltd
or
pop
mov
pop
mov
push
sub
fdivrl
or
jbe
jno
dec
push
movsl
rorl
add
cld
scas
shrb
and
pop
add
cmc
mov
add
jne
icebp
incl
data16
add
stos
sub
popa
subb
mov
cmpb
into
sbb
pushf
fsubs
push
es
jae
xchg
xlat
or
mov
test
jmp
outsb
sarl
les
add
cmp
push
aam
xchg
or
fwait
aad
testl
sbb
pusha
lea
iret
out
mov
inc
dec
std
cltd
add
jg
sub
mov
mov
rorb
and
notb
lods
adc
notl
xor
jns
mov
xlat
std
pop
adc
dec
xor
or
cmp
stos
in
dec
mov
in
mov
mov
xchg
out
jp
mov
lret
imul
stos
subb
or
scas
outsb
xor
xchg
loop
bound
jg
shrb
adc
dec
xlat
outsl
rcll
ret
jbe
scas
outsb
mov
fmuls
cwtl
push
sbb
shrl
fxch
bound
sub
xchg
call
inc
ljmp
aaa
lods
or
bound
jmp
jb
mov
in
ret
xchg
orb
cmp
pop
mov
fistpll
xor
mov
rorb
sbb
mov
aas
jb
mov
ror
outsb
pop
sbb
xchg
insl
clc
mov
or
mov
lock
xchg
fisttpl
ret
mov
xor
xor
mov
cmp
lcall
xchg
sbb
popa
mov
xchg
sahf
xchg
je
movsb
inc
cmp
lcall
rol
fstps
mov
pop
pop
leave
aam
dec
jae
mov
in
jp
rorl
into
pop
iret
stos
rcll
je
std
jns
adc
pop
shr
cwtl
add
mov
dec
xor
or
repnz
ljmp
jg
mov
or
movsl
inc
ja
cli
shr
inc
lret
fstps
call
inc
or
inc
mov
pop
clc
inc
pusha
or
cltd
fwait
out
mov
add
xor
cmc
out
mov
cltd
push
stc
adc
fisttps
adc
nop
leave
fs
cmp
sub
inc
mulb
pop
js
dec
div
cmp
out
xchg
shl
push
hlt
pop
cld
cmp
aaa
jp
mov
mov
mov
or
adc
pop
aad
imul
sbb
inc
leave
lods
pusha
and
shlb
pusha
cmp
incb
adc
xor
sbb
ret
mov
ds
adc
and
hlt
test
popf
cmc
daa
sub
loope
aaa
lods
fs
out
jb
lock
dec
cmpsl
sbb
fisttpll
lods
cmc
xchg
into
pop
es
into
push
fldcw
imull
ret
iret
mov
arpl
jb
mov
movsb
jecxz
sbb
mov
dec
rolb
mov
shl
test
stos
repz
pushf
add
ljmp
sarb
gs
fdivs
push
adc
mov
in
clc
loop
push
nop
std
xchg
stos
test
cmp
or
inc
inc
or
xchg
ror
push
cmp
cld
scas
push
clc
andb
pop
cs
jecxz
movsl
xor
jmp
xor
inc
ss
inc
xchg
scas
jp
out
inc
lcall
cmp
loop
sub
je
pushf
or
ljmp
scas
sbb
inc
add
enter
mov
pop
nop
sbb
dec
out
lcall
push
adcb
push
mov
sub
jb
pop
ljmp
jae
mov
jp
push
and
adc
testb
jmp
adc
sbb
pop
or
mov
shrb
cmpsb
xlat
dec
sbb
sarl
out
jns
sub
int3
or
and
xor
jmp
push
adc
add
pop
push
daa
in
pop
in
lahf
mov
sbb
pop
adc
mov
ffree
xor
adcl
and
js
adc
mov
jg
mov
imul
mov
cmp
incb
cmpsl
or
test
mov
pop
jnp
lret
loop
dec
outsb
ja
add
in
loope
ja
adc
xchg
jp
mov
mov
in
aad
insl
hlt
mov
sub
insl
lds
std
aaa
mov
loop
jnp
imul
dec
frstor
mov
sub
sbb
dec
cmp
lcall
push
pop
cmpsb
imull
or
mov
mov
rorl
cmp
add
stos
jmp
into
sub
pop
adc
stos
pusha
mov
cltd
out
das
cmp
lods
xchg
sbb
icebp
or
sti
mov
aam
std
pop
xchg
xchg
dec
adc
push
movsb
adc
cmp
push
mov
sub
test
mov
cmp
sub
ja
in
outsl
stc
pop
sbb
addb
fwait
fs
dec
in
and
call
fildl
clc
adc
xor
std
dec
push
in
xor
xor
jge
jae
xchg
shll
decb
jnp
stos
pop
mov
mov
push
push
fwait
or
adc
pop
repnz
sub
jnp
push
or
aaa
stos
daa
fcomi
shrb
cs
pop
popf
mulb
rorb
xchg
push
xlat
add
xchg
dec
int3
hlt
in
sbb
push
fbstp
push
or
hlt
loop
xchg
rcll
and
jmp
movups
decb
aas
xchg
jo
xchg
loope
cmp
shll
inc
jmp
pop
jg
test
mov
mov
out
gs
mov
adc
adc
in
cmpsl
rorb
fildll
aas
es
aad
adc
lods
push
outsb
and
movsb
cmp
push
ror
pop
mov
cmp
pop
adc
hlt
or
xchg
sbb
xchg
into
repnz
sbb
out
pop
jl
addr16
xor
push
push
aas
mov
js
and
fnstsw
iret
xor
repz
jge
loope
ljmp
xchg
sub
jg
and
gs
mov
push
jno
cmc
lods
add
cmpsb
pmaxsw
cmp
sbb
repz
fsubs
ret
int
dec
jl
push
popa
imul
cltd
sbbl
aad
mov
sub
dec
mov
leave
cmp
add
push
scas
jle
inc
aad
addr16
dec
xor
div
in
jmp
fsubrp
sti
and
mov
xorl
sub
ja
lret
mov
add
jp
cltd
or
push
xlat
xor
sbb
xchg
fwait
jns
cli
lcall
and
cmp
clc
dec
xor
xor
push
pop
push
pop
in
inc
add
cltd
xchg
xchg
and
inc
fs
loopne
mov
ja
paddsb
push
jp
push
popa
jne
je
test
cwtl
mov
xchg
mov
test
cmp
shlb
adc
insl
dec
ficomps
sub
or
cs
jb
pop
mov
es
rolb
xor
fdivrl
jb
scas
icebp
js
sahf
lods
iret
dec
in
sti
lahf
mov
leave
lahf
mov
jo
dec
mov
stos
je
and
test
push
sbb
int
jle
or
subb
addb
cmc
jle
dec
xchg
pop
fwait
jge
inc
test
xchg
xchg
mov
adc
push
loope
push
sub
ret
les
push
cmp
pop
and
mov
pop
jmp
dec
inc
ljmp
sbb
xor
sub
in
or
cmp
loopne
ja
imul
or
stos
arpl
push
push
xor
dec
or
roll
pop
into
push
add
das
call
stos
jae
dec
imul
xchg
inc
push
fs
xchg
in
dec
cwtl
and
aaa
jno
enter
in
add
sbb
scas
lods
lahf
jbe
push
daa
fst
jb
inc
mov
dec
mov
adc
sahf
enter
test
push
jg
insb
jb
push
sub
jg
xor
mov
out
andl
fldenv
adc
mov
cld
adc
lock
cltd
cmp
or
popa
out
mov
testl
nop
adc
lock
lahf
adc
int
mov
out
sbb
pop
sub
fldl
in
fldcw
push
pop
fiadds
pop
sub
cltd
xlat
frstor
clc
cmp
xor
clc
test
xor
addr16
xchg
add
lds
and
clc
or
push
mov
push
add
fmuls
sbb
jmp
or
jmp
aas
jns
sahf
stos
test
or
insb
mov
addr16
fidivrl
inc
push
dec
xchg
nop
lcall
fwait
loope
stos
and
adc
pop
pop
out
sub
adc
jp
sar
xor
insl
nop
jne
imul
jo
dec
cwtl
out
iret
mov
pop
push
mov
test
test
insl
lea
pushl
inc
fwait
add
es
mov
lahf
and
cmp
sbbb
into
dec
lea
mov
add
sbb
dec
push
add
mov
jmp
nop
sub
adc
addr16
adc
loop
inc
sbb
aam
jmp
inc
scas
mov
stc
int3
arpl
cld
cld
pop
jbe
inc
insb
add
xchg
sbb
adc
pop
push
jbe
lock
fstps
pop
adc
adc
pop
out
lods
mov
leave
mov
xorb
or
adc
out
and
jg
xchg
jne
sub
pop
sub
pushf
jmp
psubusb
lea
inc
mov
dec
popa
mov
outsl
into
jp
xchg
call
jno
dec
dec
out
rolb
xchg
inc
shll
dec
add
pop
pop
repz
cmpsl
push
jmp
sti
mov
adc
adc
ds
repz
mov
fimull
and
ja
or
pushf
lock
xchg
pop
out
inc
lods
jne
cmp
adcl
pusha
mov
inc
add
mov
cmpl
loopne
mov
mov
lds
fiadds
int
notl
push
test
dec
das
jo
mov
jnp
out
dec
cmp
int
jae
and
jbe
scas
rcl
cltd
mov
adc
sub
cmc
xlat
xchg
mov
add
dec
mov
dec
sub
push
mov
test
mov
sub
es
push
ficomps
in
xor
pop
push
lcall
mov
adc
push
leave
inc
test
push
xor
pushf
insb
mov
pop
xor
sbb
jg
mov
add
push
pop
cwtl
faddp
mov
ret
adc
aam
push
and
sbb
lahf
cmp
push
push
cmpb
sbb
add
pop
insl
imul
mov
mov
nop
lock
xor
xchg
jmp
mov
xchg
outsb
pusha
in
in
scas
int
sub
xor
scas
inc
fldpi
rorl
inc
es
lret
inc
xchg
fcoml
sub
daa
cmp
in
loop
inc
nop
hlt
pop
sbb
lock
dec
sahf
inc
jne
pop
xchg
and
mov
cmpsb
test
aas
mov
sti
idivl
sub
push
dec
inc
adc
push
adc
cld
xor
or
inc
outsb
cld
addr16
pop
fstpt
sbb
shlb
jecxz,pn
mov
imul
pop
orb
je
pop
push
imul
movsb
jnp
rolb
push
test
outsb
pop
jno
fmulp
cmpsl
xlat
and
fstps
xchg
icebp
push
jnp
cmp
int
out
fwait
stos
mov
mov
mov
mov
gs
adc
and
add
jp
mov
inc
mov
into
push
lods
daa
data16
fimull
cmc
cwtl
inc
into
in
dec
ja
mov
lahf
int3
cs
cmpsl
or
jne
pushf
inc
data16
lods
mov
es
xor
popf
sbb
lret
push
outsl
orb
mov
and
pop
jl
xor
ret
pop
add
in
enter
mov
lahf
sbb
out
xor
int3
and
inc
mov
sbb
stos
inc
dec
mov
xchg
aas
aam
adc
mov
sti
popf
mov
sub
add
cli
push
push
movsb
test
mov
cmc
jbe
push
mov
and
aas
pop
inc
add
inc
iret
ret
enter
cwtl
inc
out
xchg
push
mov
and
mov
imul
and
data16
out
fnstsw
push
xlat
sbb
sahf
sub
call
mov
xor
cmp
cmc
pop
mov
mov
popa
in
test
test
scas
inc
xchg
repnz
adc
xchg
push
les
mov
div
jnp
test
sbb
and
jo
rolb
gs
cmc
and
jge
and
add
and
fdivr
push
push
xor
stos
inc
xor
or
push
adc
lret
jp
bound
bnd
cwtl
lock
in
pop
mov
loop
dec
rcll
rcrb
and
movsl
cmp
and
into
pop
sbb
mov
out
xor
jp
inc
ds
mov
fwait
rcl
dec
jle
addr16
jo
add
insl
pop
or
adc
shlb
cld
pushf
fdivr
test
mov
out
xchg
push
into
inc
loop
jns
in
cwtl
pop
faddp
pushf
test
ret
adc
cli
sub
cmpl
incl
cmpsl
inc
pop
push
mov
jge
pop
bound
incb
or
jnp
ficompl
xor
fwait
adc
test
cwtl
jmp
cs
xlat
fcmove
add
cmp
mov
inc
dec
ja
test
pop
jp
pusha
fs
xchg
sub
pop
xor
lea
sbb
dec
jb
jb
or
fs
adc
push
push
push
mov
ret
push
adc
js
mov
or
sub
aaa
repz
sbbb
notl
mov
mov
and
fdivrs
or
push
lret
out
push
sub
loope
lods
sti
mov
out
mov
clc
xchg
sarl
pop
and
adc
or
insb
insl
scas
fbld
sub
fistl
mov
test
add
in
dec
mov
push
mov
and
xchg
pusha
sahf
shr
or
push
sub
and
push
cmpsl
pop
jmp
loope
mov
and
jmp
lods
sbb
push
mov
sbb
icebp
pop
jae
pushf
pop
rorb
add
xchg
cltd
loope
ret
cmp
pop
arpl
jne
ficoms
inc
or
stos
sbb
cmc
scas
dec
mov
pop
mov
lcall
aad
pop
pop
jl
mov
jns
ja
sub
inc
adc
mov
pop
push
xchg
push
loop
mov
cmc
mov
inc
mov
divl
ja
ja
pop
xchg
cmc
je
cmpsl
aad
xchg
rorb
fildll
dec
cmp
dec
and
out
sub
jo
dec
xchg
and
jne
xchg
ss
sub
pushf
fcompl
das
in
fdiv
cmp
dec
and
movsl
mov
push
sub
mov
mov
loope
orl
gs
fmul
inc
mov
pop
xchg
lahf
loop
cmp
lods
inc
repz
and
push
nop
xchg
xchg
cmp
cmp
fcoms
push
sbb
push
es
stc
shl
ja
lods
mov
xor
jp
ficoml
jecxz
sub
push
xchg
push
orb
push
mov
cmp
sti
sbb
test
mov
lret
test
xchg
fwait
pop
leave
fwait
and
dec
aam
ficomps
sub
shll
test
rolb
outsl
in
dec
das
mov
push
xchg
add
fcomps
push
sti
mov
test
stc
mov
xor
inc
aam
lea
xorl
scas
xlat
sbb
iret
repz
out
enter
inc
fcmovu
repnz
imul
in
aad
mov
sub
fistps
repz
cmpsl
push
dec
adcb
movsl
xchg
leave
xchg
sbb
in
daa
cli
cmpsl
and
inc
loope
in
sbb
stc
cmpsl
std
pop
pop
xchg
mov
in
jno
stc
dec
or
inc
sbb
rcll
cmp
mov
mov
push
adc
lds
jecxz
imul
fimull
in
xchg
xchg
lret
inc
clc
push
stos
popf
in
sbbl
insb
cmp
dec
imul
jge
test
push
cmc
fwait
mov
push
cld
iret
shll
cmp
imul
pusha
sbb
andb
xor
fisubrl
xor
popf
mov
sti
lods
jo
mov
dec
xchg
jmp
mov
mov
add
test
sbb
xchg
je
jne
jp
mov
jae
cmp
rcrl
out
gs
int
xor
aad
mov
leave
sub
sub
mov
or
push
lock
pop
mov
out
loope
rolb
xchg
cmp
sbb
sbb
mov
pop
dec
xchg
test
js
pop
lahf
push
loopne
pop
sbbb
jg
xor
fisttpll
push
loope
fsubrs
xor
push
cmpsl
inc
push
je
pop
mov
pop
fwait
lea
pop
arpl
mov
out
mov
push
es
imul
aam
mov
insb
fs
push
test
and
sub
out
pop
sbb
lcall
sbb
out
fdivrs
inc
inc
sbb
and
adc
iret
fstpl
scas
inc
xchg
aam
aaa
decl
aam
cmpsb
or
insb
insl
aaa
adc
add
add
xchg
clc
cmc
fwait
repnz
loop
ljmp
fwait
cli
insl
pop
sbb
inc
push
loop
pop
outsb
sti
and
movsb
xchg
mov
mov
insl
imul
test
xchg
mov
sbb
mov
jno
xor
xchg
bound
adc
test
ret
fsubrl
dec
inc
clc
fcomps
jo
sub
insb
shll
dec
xchg
data16
test
mov
adc
cmpsl
fsubrl
sarb
test
dec
push
mov
push
xlat
inc
aam
push
xchg
or
cltd
inc
out
sub
mov
loopne
mov
in
cs
ljmp
xchg
mov
dec
cwtl
or
pop
cmc
xor
ret
pcmpeqd
jle
push
cmp
cs
xchg
mov
fdiv
add
addr16
mov
jp
fstpl
out
adc
shrb
rcr
mov
out
or
lahf
in
add
and
xlat
scas
dec
imul
aam
es
or
out
jb
out
push
mov
mov
ds
sarl
in
lea
sub
iret
xor
or
inc
push
xor
fidivrl
mov
int
outsl
fs
add
dec
mov
adc
pop
adc
scas
lds
data16
leave
lea
pop
into
das
dec
icebp
mov
xchg
icebp
cwtl
xchg
stos
xchg
and
cmp
jo
fldenvs
dec
jne
in
fs
lret
mov
fisubl
das
dec
add
mov
add
xlat
xchg
and
and
xchg
or
vinserti64x2
fwait
inc
sbb
das
fwait
mov
push
data16
aam
mov
fs
xor
xor
roll
cmpsl
jbe
stos
sarb
rolb
mov
inc
cli
ljmp
dec
mov
test
es
jg
mov
and
in
mov
mov
out
and
jae
dec
push
cmp
test
sti
sub
out
inc
scas
add
ds
xor
and
pop
mov
rorl
outsl
fcoms
cs
mov
mov
lock
sub
mov
sub
jg
aaa
inc
fwait
mov
xchg
dec
fndisi(8087
xchg
int
lcall
fildl
push
filds
xchg
lods
out
pop
sub
adc
ret
pop
ret
fidivl
test
dec
jno
jecxz
sbb
popa
xchg
push
mov
in
pop
andl
pop
jno
and
mov
sub
xchg
pop
inc
mov
aas
sbb
mov
jmp
daa
fdivrs
add
xchg
cmp
mov
jnp
pop
push
ret
fwait
push
lahf
mov
mov
outsb
push
adc
sqrtps
push
sbb
cltd
pop
xchg
dec
sarl
daa
or
sub
adc
notb
lods
sub
popf
mov
cmp
fdivrl
inc
jb
or
push
sbb
inc
mov
adc
and
cmpsl
push
rcrb
xor
jbe
popa
jl
and
imul
sar
stos
cld
rolb
jmpw
aas
add
inc
iret
or
sbb
lret
inc
push
mov
sbbl
xor
mov
jbe
stc
addr16
or
loop
push
pop
or
jno
fs
jne
pop
sub
out
loopne
jg
lods
sbb
in
sbb
movsb
jne
dec
and
xchg
mov
add
jecxz
in
sbb
lea
stos
dec
test
adc
insb
call
es
sub
in
loop
outsb
dec
inc
xor
dec
mov
gs
jecxz
ror
pushf
call
xor
push
xchg
mov
lret
mov
ja
inc
xchg
mov
scas
mov
mov
mov
leave
fistpl
xor
jbe
and
test
enter
xchg
out
dec
and
sbb
in
add
dec
ret
je
mov
out
inc
gs
pop
bound
pop
mov
lret
xchg
mov
stos
sti
fnstsw
mov
movsl
fstpt
clc
rcrb
cmc
lret
dec
pop
sub
dec
add
cmp
xor
sub
mov
in
sbb
movsl
xor
loop
jg
outsb
dec
mov
lds
and
sub
cmp
push
push
mov
dec
pop
std
cmp
sbb
adc
sub
inc
mov
notl
pop
add
xchg
fldt
fs
arpl
or
jle
mov
push
icebp
cmp
xor
ja
jecxz
sbb
inc
xchg
mov
outsb
fs
clc
fimuls
or
sub
aad
out
test
popf
xorl
int3
and
in
xor
fcomip
cmp
pop
and
push
loop
adc
push
inc
sub
into
sbb
xchg
repnz
mov
mov
dec
ds
xor
pop
idivl
xchg
insl
mov
lret
push
jae
jns
mov
xchg
stos
xchg
pop
add
jmp
mov
mov
subb
inc
and
icebp
ds
aaa
int
divb
inc
xorl
rorb
adc
ficoml
addl
adcl
xor
jge
aaa
inc
add
repz
xor
jge
iret
into
shrl
rcrl
lret
or
ficoms
push
push
mov
scas
std
adc
xchg
mov
adc
inc
inc
add
pop
add
inc
stos
idivb
lea
dec
call
cli
stos
xlat
faddl
push
enter
enter
cld
cltd
jge
jle
xchg
xchg
mov
mov
mov
les
or
mov
and
cli
imul
loope
jae
cmp
es
jnp
les
mov
insb
inc
sbb
pop
inc
cmp
hlt
cmp
add
jns
pop
sarb
jbe
xor
jbe
outsb
cwtl
xchg
pop
addr16
cli
sub
fwait
decb
push
pop
and
or
sub
rorl
test
subl
fcmovnu
mov
pop
notb
xor
inc
mov
pushf
mov
cmp
movsb
inc
out
aaa
jp
and
repz
cmp
outsb
adc
outsl
dec
aam
subl
jae
fnstcw
test
sbb
inc
pop
outsl
lods
push
out
sbbl
pushf
aad
and
jl
xchg
jg
fstpl
xor
pop
push
cwtl
lods
cli
mov
out
add
sub
xchg
or
or
jge
sahf
pop
mov
pop
fldl
test
pop
imul
push
scas
daa
or
xchg
sbb
lcall
adc
ficoms
out
stos
popf
dec
pop
jns
cmp
mov
fdivs
jg
hlt
adc
lods
fidivs
jl
int3
lret
addb
sti
pushf
ja
orb
cwtl
mov
cmc
mov
push
test
movsl
mov
cmp
shr
test
mov
hlt
xchg
xor
divl
xchg
pop
mov
pop
push
int
inc
ds
cmpsl
xor
add
je
add
rorl
xor
test
call
lods
push
mov
add
xor
and
and
jns
dec
test
fwait
sub
pop
adc
movsl
sarb
mov
mov
pop
xor
addl
mov
push
cmpsb
cmp
je
lds
mov
jge
inc
jp
mov
mov
push
lds
dec
lods
lea
mov
imull
pcmpgtw
add
stos
mov
loop
outsl
push
popf
xor
outsl
push
jne
popa
sbb
sbb
outsb
or
cld
or
movsl
loop
fdivr
cmpsl
clc
jb
divl
ljmp
sbb
mov
mov
lcall
push
roll
or
out
mov
mov
sub
jecxz
lock
jecxz
cmp
out
jne
fnsave
inc
in
jmp
inc
sub
hlt
and
push
in
mov
push
imul
sub
das
dec
cmp
push
sub
rcll
pop
mov
push
jl
std
mov
dec
jmp
mov
movsl
nop
stc
int3
stc
mov
lret
add
or
popa
and
xchg
jecxz
mov
fwait
int
and
decb
xlat
mov
xchg
pop
mov
mov
push
or
mov
xchg
inc
outsl
popa
xchg
out
mov
pusha
push
pop
inc
jb
in
ret
jmp
mov
mov
mul
subb
aam
dec
outsl
enter
cmp
das
imul
cwtl
cmp
jo
lcall
pop
push
sahf
lds
loope
dec
push
jge
push
cld
mov
push
stos
mov
push
pop
andb
xchg
fdivl
fistpll
pop
pop
jl
mov
mov
lds
mov
push
test
add
pop
sub
out
push
mov
and
sbb
mov
jmp
shrb
push
int
iret
xchg
push
mov
or
fldt
and
push
dec
xcrypt-cfb
cmpsl
out
sbb
pop
ret
pop
push
and
add
push
call
sbb
sub
test
gs
jo
fimuls
es
adc
pop
mov
enter
lods
inc
push
and
cmp
lcall
jle
popl
inc
inc
xchg
call
jbe
data16
das
cwtl
pushl
sbb
and
sbb
repz
js
movsl
mov
repz
cmp
push
addb
mov
adc
sbb
mov
test
daa
mov
inc
ljmp
test
aam
push
jg
out
adc
movl
cs
cmp
mov
or
push
xchg
les
sub
popa
adc
adc
mov
cmp
or
nop
xchg
pop
or
mov
packuswb
mov
mov
pop
jae
enter
mov
cwtl
add
jge
mov
loopne
sbb
push
shrl
in
inc
dec
mov
pop
inc
lahf
pop
xchg
mov
sub
stos
inc
leave
xchg
push
lret
mov
movsb
into
sbb
iret
or
adc
daa
dec
pop
inc
pop
loopne
lcall
and
jnp
shrl
lds
mov
mov
jb
mov
inc
cli
push
push
out
xor
sub
push
xchg
xchg
fiadds
iret
cmp
fsubrs
les
lods
bound
xchg
iret
lret
mov
jge
jecxz
in
jl,pt
ss
jo
aaa
subl
enter
dec
imul
cmp
xor
pop
xor
ljmp
adc
pop
sarl
mov
cmp
sbb
xor
ret
cmp
xchg
clc
das
in
fistpl
jecxz
pushf
push
add
inc
or
in
sahf
roll
repz
clc
in
sarl
cmpsb
in
js
rolb
call
sbbl
mov
mov
test
sub
decb
inc
push
sub
rcll
clc
incl
shl
les
mov
inc
sub
mov
pop
add
fs
xchg
cmp
adc
inc
aaa
nop
out
int
and
mov
sbb
mov
push
adc
mov
ljmp
mov
xchg
stos
jg
cli
inc
fdivl
xor
in
scas
pop
jbe
enter
add
sbb
or
mov
insb
push
or
cld
cs
mov
ss
adc
arpl
leave
aad
ficompl
mov
ficoms
rcr
jp
leave
sub
leave
aas
jl
gs
and
fsts
fs
lock
pop
mov
jnp
daa
mov
fimull
sbb
jne
lods
mov
flds
or
ljmp
xor
movl
fwait
adcl
pop
jl
xor
xchg
inc
popf
add
data16
jmp
mov
or
dec
adc
test
jno
sbb
lcall
popa
mov
es
movsb
mov
mov
xchg
mov
and
sbb
cmp
sub
dec
sbb
aaa
icebp
aas
jns
iret
jg
mov
inc
cltd
std
xchg
in
inc
push
jbe
sarb
pop
pop
cmpsl
loop
sub
and
adc
addr16
cmp
mov
orl
adcb
mov
mov
mov
lds
lea
aad
in
and
xchg
lret
sbb
cltd
mov
add
cmp
cmpsb
lods
cmpl
mov
mov
sbb
pop
jae
jl
aaa
mov
test
add
outsl
sub
pop
and
mov
fisttpl
or
push
fidivrs
repz
test
lock
mov
add
enter
roll
andb
dec
sbb
add
lcall
inc
push
test
adc
pop
ss
test
ret
es
xor
adc
sub
mov
add
ffreep
imul
pop
dec
jmp
cmp
add
enter
xor
lock
dec
cmc
sarb
lahf
dec
inc
pop
pop
hlt
inc
bound
fidivrl
push
loop
ret
jle
movsb
and
rolb
sbb
pop
testb
frstpm(287
jne
xor
int
lods
std
dec
call
xor
jge
sub
jb
push
mov
scas
test
sbb
clc
cmp
js
sbb
insl
fimuls
mov
mov
sub
mov
movsb
sub
sbbb
mov
xchg
mov
cmpsl
stos
push
das
int
flds
sahf
pusha
add
adc
lret
jmp
mov
jno
pop
jmp
cwtl
sbb
rcrb
add
fsubrl
pop
sbb
push
mov
daa
bound
jle
enter
jle
sbb
pop
xchg
scas
xchg
push
out
cltd
sarb
dec
lods
sti
aaa
cmp
dec
adc
and
inc
mov
arpl
iret
lods
data16
and
sbb
imul
fstpl
lret
xchg
xchg
push
scas
lret
call
cmp
in
pop
adc
push
ret
push
xchg
sub
adc
inc
push
sbb
ss
data16
shlb
dec
pop
jmp
cmp
outsb
jg
sbb
add
add
test
pop
out
cltd
leave
push
pcmpgtb
ret
ficoms
popa
adc
sub
pop
test
inc
mov
or
repnz
mov
sbb
mov
imul
and
lahf
mov
dec
add
xchg
sahf
push
jnp
jae
int3
pop
movsl
push
in
insb
add
or
cmpb
mov
dec
ss
lds
xchg
dec
push
mov
sti
sub
mov
out
mov
push
cmp
pop
inc
dec
adc
shl
jns
dec
or
mov
sbb
dec
jo
pop
or
data16
xchg
jae
pop
arpl
mov
jge
cmp
fisubrl
xlat
cs
dec
insl
mov
cmp
sub
adc
push
adc
cs
scas
cmp
pop
adc
out
leave
sub
test
aaa
jbe
xchg
lds
loope
push
cmp
xchg
or
mov
dec
inc
dec
shrl
insb
or
into
lret
lahf
push
inc
add
stos
out
rcrl
pop
mov
mov
or
and
call
cld
faddl
or
mov
imul
xchg
sub
and
inc
cmc
cmp
xorl
fimuls
add
xchg
fiaddl
out
pop
jge
xchg
and
imul
test
aas
xor
je
sbb
sahf
and
sbb
push
jg
push
add
icebp
or
je
dec
xchg
test
xor
xor
test
out
pop
ja
movsl
popa
sarb
sbb
mov
push
pop
push
mov
into
insl
xchg
adc
add
inc
xchg
out
out
pop
jae
cmp
jo
pushaw
sahf
pusha
pop
dec
cmp
ja
arpl
aad
cmp
cli
and
cmp
gs
push
pop
xchg
call
and
popa
inc
mov
je
push
lods
cmp
shll
or
hlt
cmp
pop
addr16
dec
mov
repz
gs
push
push
add
inc
cmpsb
in
es
or
xchg
leave
repnz
jecxz,pn
int
cs
pop
mov
xor
mov
and
int
arpl
lea
adc
mov
daa
pop
cmp
mov
add
lcall
loop
movsb
sbb
mov
shl
cli
mov
inc
dec
cwtl
jecxz
adc
sbb
scas
dec
and
ds
mov
xchg
mov
pop
popf
jg
sub
sti
in
pop
sbb
jo
test
je
dec
cmp
xchg
pop
pop
lea
lea
jg
loop
cs
xor
push
scas
repnz
fidivl
pop
push
mov
sub
or
pusha
sbb
lock
pop
in
icebp
and
add
cld
lret
or
arpl
movsl
cli
cwtl
adc
test
xor
pusha
iret
jle
pop
les
and
hlt
scas
pop
sub
loop
fst
pusha
cli
add
popf
insl
and
lock
cmc
dec
pushf
xor
loopne
stos
dec
pop
mov
repnz
jecxz
stos
cld
cmp
inc
insl
mov
cwtl
cltd
arpl
filds
ja
outsb
cli
xchg
dec
outsb
mov
jnp
jb
lods
lds
sbb
mov
testb
and
mov
xor
jae
mov
xchg
pop
jnp
pop
loop
in
push
data16
pop
insl
je
dec
dec
sarb
inc
adc
aaa
mov
lret
fidivrl
inc
lret
imul
out
push
pop
push
xlat
fmuls
in
cmp
mov
or
fnstcw
jp
inc
test
adc
movsb
mov
dec
aaa
mov
aas
and
lds
lods
pop
aas
add
frstor
push
test
mov
xor
sti
mov
fmull
inc
sahf
sub
mov
mov
and
push
sbb
jmp
mov
jbe
test
ret
shl
mov
and
test
push
xchg
push
mov
pop
push
jns
and
fbstp
loop
sbb
jecxz
clc
or
cmp
arpl
push
inc
pop
cwtl
popf
ret
push
or
push
xchg
mov
in
inc
xchg
shrl
cmpl
lods
mov
in
out
test
mov
dec
sahf
dec
mov
imull
sub
lods
xor
or
mov
mov
sti
shrl
cmpsl
fcmovbe
jbe
push
testb
decl
push
sub
insb
test
int
or
inc
mov
es
outsb
lds
sub
jmp
jbe
lods
leave
sbb
add
in
jnp
pop
fs
pop
jnp
push
dec
sub
xchg
ficomps
mov
addr16
lods
scas
aaa
or
rclb
test
jns
cmp
sbb
cmpsl
cltd
jo
loop
or
jg
shrl
mov
mov
enter
jmp
cwtl
orb
aam
ficomps
iret
jne
mov
call
pusha
rclb
sub
cmp
pop
dec
push
lods
mov
lods
or
mov
add
shl
call
push
pop
inc
sbb
sbb
jo
or
movsl
mov
pop
cmp
lock
inc
out
je
jne
in
cmp
das
adcl
dec
add
jnp
xor
mov
jns
jmp
add
and
sbb
and
mov
jae
mov
sub
or
add
lahf
lock
lret
sub
adcl
int3
roll
shr
imul
out
mov
mov
xor
or
test
mov
je
dec
mov
mov
js
inc
stc
gs
and
lret
jecxz
fstp
in
sbb
xorb
mov
xchg
lods
call
fldenv
je
int3
fnstsw
and
jbe
or
iret
push
imul
test
mov
cwtl
loop
test
cmp
cmpsb
and
nop
je
add
lea
push
push
dec
mov
xchg
mov
inc
mov
xchg
pop
testl
sbb
fisttpl
ret
dec
sbb
push
ss
sub
cmp
mov
ret
outsl
les
adc
jbe
push
dec
stos
xlat
jnp
adc
sub
imul
cwtl
adc
cli
xlat
sahf
inc
sub
lods
push
das
cmp
inc
test
popa
cltd
mov
and
aas
insb
ficoms
add
push
nop
sub
stos
push
push
cmp
push
push
daa
je
cltd
das
lcall
jae
or
fnsave
sbb
scas
and
lahf
pop
repnz
sub
push
je
leave
ret
push
pop
cmp
or
test
pop
pusha
push
lea
dec
std
push
sub
shl
add
push
dec
cmp
and
or
lds
ja
or
push
mov
mov
push
and
mov
icebp
icebp
ror
xor
xchg
pushf
cmp
jle
divl
pop
ficompl
int3
xchg
sbb
into
inc
pop
xchg
outsb
sub
inc
aam
push
addr16
push
xchg
aad
push
sahf
mov
push
push
fldlg2
fisubrl
jp
popa
inc
xor
sarl
repnz
gs
subl
mov
cmp
arpl
out
jge
incl
scas
adc
push
stos
cmp
xchg
mov
pop
outsl
fisubs
sbb
arpl
pop
sahf
cld
xor
xchg
js
scas
sbb
sub
inc
pop
add
out
sbb
stos
push
push
nop
sbbl
or
stos
gs
in
pop
jae
cli
adc
sti
shl
adc
mov
outsb
jno
jns
shrb
mov
add
test
int3
bnd
add
and
cmp
mov
jnp
jmp
out
pusha
mov
fsts
mov
cmp
cmpsl
fistpl
popa
cmp
loope
jg
scas
inc
jl
mov
ds
pop
fwait
ret
inc
rolb
mov
mov
add
jno
into
jae
ret
jne
adc
push
clc
pop
cmpsl
dec
sbb
in
mov
xchg
pop
aam
or
in
mov
fsubrl
popf
add
push
inc
xchg
push
ljmp
js
sti
fdivl
inc
sbb
cmc
sbb
fsubrs
adc
and
movsl
push
xor
scas
punpcklwd
fiadds
aad
xchg
stc
or
outsl
mov
stos
and
jbe
xchg
inc
out
sbb
mov
mov
inc
in
xor
in
stos
or
mov
lea
cmp
or
jno
mov
sahf
fsts
pop
int3
push
out
shll
mov
popa
adcb
popf
sub
fstl
xchg
clc
cmp
jmp
in
and
test
andl
out
cli
outsl
mov
fdivrl
jg
ret
xchg
add
jle
shll
jb
jne
lods
cmp
shrl
mov
scas
dec
out
adc
arpl
sbb
mov
std
xchg
bound
fdivl
fcoms
scas
and
es
dec
adc
leave
fldcw
repz
lcall
mov
sub
std
popf
mov
ss
shlb
stos
addr16
or
add
jo
ret
dec
xchg
je
out
inc
jbe
pop
jno
fwait
cli
dec
xor
inc
test
inc
addr16
push
les
add
mov
jno
xchg
ljmp
test
xor
repz
xchg
fucomp
xorl
jno
dec
add
and
jno
add
sbb
or
out
jp
or
stos
fildll
jmp
call
xchg
fxch
mov
or
sahf
fidivs
in
jne
shl
dec
in
in
addr16
in
fs
sahf
or
outsl
ficoms
mov
testb
sub
aad
mov
adcb
pop
mov
mov
mov
push
inc
xlat
or
mov
jo
jle
xchg
fcmovne
and
xchg
out
add
ss
sbb
xor
dec
lcall
cs
push
push
xchg
adc
in
xchg
cmc
and
test
push
cld
rcll
xchg
cmp
jbe
pop
xor
jmp
movsl
xor
xchg
or
fidivrs
outsl
sbb
jmp
adc
aas
mov
fldenv
xchg
mov
dec
aam
push
pop
outsb
inc
push
lret
rorl
mov
inc
lret
shr
jo
adc
push
test
sub
push
stos
mov
lret
mov
gs
orl
and
xchg
sub
out
inc
pop
mov
js
jmp
lock
push
ss
or
adc
and
xor
mov
fidivrl
lahf
sbb
int
lods
push
repnz
adc
mov
pop
stos
push
xchg
sahf
sbb
inc
mov
mov
add
repnz
push
jns
mov
les
sbb
inc
loop
ljmp
test
sbb
je
loope
sbb
adc
out
or
fstpt
or
mov
cli
cmp
cmpsb
leave
cltd
and
inc
push
out
cli
inc
push
loop
fistl
push
sbb
push
mov
lahf
mov
out
mov
filds
sar
cmp
adc
lods
iret
jno
push
jp
or
ret
imul
nop
test
cmpsb
lea
sti
or
mov
cwtl
lcall
orl
mov
jns
ljmp
ljmp
cli
imul
lods
ret
iret
and
inc
int3
es
cmpsl
loop
mov
mov
jg
pusha
inc
mov
jbe
mov
fsubp
sbb
mov
and
and
pop
shrb
sub
addb
push
aam
daa
cmp
jge
pop
cltd
rcrl
xchg
push
imul
out
sub
mov
repnz
stos
lods
fstl
lock
addr16
and
mov
jp
ds
jnp
insl
sbb
sahf
lret
push
mov
fnsave
sbb
ret
dec
adc
icebp
mov
out
arpl
mov
es
lahf
scas
mov
hlt
or
cwtl
xor
cmp
add
pop
es
sbb
out
in
cwtl
enter
cmp
pop
stos
idivl
idivl
inc
xchg
callw
test
mov
dec
cmp
inc
lea
push
aam
fimuls
movsl
or
sti
rclb
out
push
int3
mov
test
movsl
idiv
sub
sti
in
mov
mov
mov
stos
jg
in
out
adc
stc
cli
jo
fcoms
sub
lods
ficomps
inc
dec
icebp
rcll
xchg
sti
or
xchg
adc
jge
arpl
decb
sub
mov
outsb
mov
mov
mov
mov
ret
push
sahf
js
lds
mov
enterw
fdivrp
loop
xchg
stos
test
push
mov
out
int
adc
stos
add
pop
hlt
int
loop
adc
xchg
dec
mov
cwtl
gs
mov
push
inc
mov
and
lods
mov
pop
loop
scas
subl
and
push
jne
out
enter
shr
sbbl
bnd
arpl
fwait
push
fucomp
cmp
cmp
test
cmpsb
xchg
inc
mov
jnp
sbb
adc
xor
pop
fiaddl
adc
enter
shlb
push
repnz
xor
loop
or
subb
js
cmpsl
in
lock
inc
fdivrl
or
fs
xor
ja
mov
mov
fcompp
and
test
lcall
cwtl
jo
sarb
fnstcw
movsl
popa
fidivrl
xor
jbe
out
jns
adc
fists
outsl
dec
cmc
cmp
loop
mov
sub
fcoml
roll
mov
cli
lcall
dec
add
add
push
or
sub
lea
sbb
jg
push
aaa
mov
mov
jge
lods
mov
testl
outsl
jmp
cmp
sbb
cmpsb
lahf
popa
pop
mov
jno
jle
adc
daa
daa
dec
loope
mov
orb
push
inc
stos
xchg
jno
cmpsl
mov
sbb
mov
add
lock
add
inc
pusha
into
mov
and
test
xor
out
mov
push
icebp
out
nop
popf
loopne
dec
mov
jle
in
ja
adc
leave
xchg
in
aaa
mov
out
lcall
int
inc
pop
leave
inc
xor
inc
adc
adc
insl
lods
adc
add
cmp
cmp
mov
xchg
xchg
clc
and
mov
sbb
lea
icebp
pop
jb
lea
xchg
mov
int
in
cld
icebp
scas
xor
push
or
push
pop
dec
leave
jmp
fsubs
xchg
fisttps
inc
out
cltd
out
bswap
dec
pop
xchg
repnz
adc
jo
jl
mov
push
pop
or
roll
in
dec
aad
adc
jg
int3
pop
rcl
fisubs
mov
or
fadd
jg
stc
push
inc
jmp
jle
pushl
push
pop
pop
or
pop
int
in
mulb
or
icebp
shll
sbb
stos
sbb
adc
lcall
sbb
addr16
shll
xchg
push
mov
repz
jns
jg
xlat
shll
or
les
xchg
push
nop
add
and
lret
fs
push
or
cltd
push
mov
or
enter
push
out
xchg
in
push
in
ds
inc
dec
shll
dec
dec
aam
das
ret
arpl
jmp
add
lock
scas
adc
movsb
xor
mov
xchg
xchg
mov
adc
imul
lret
stos
push
mov
mov
ss
xlat
pop
mov
pop
xor
test
xor
cmovno
pop
cs
jnp
jnp
lahf
popf
jo
faddl
out
dec
push
mov
xorb
cmp
push
sub
dec
xor
scas
jge
hlt
mov
inc
inc
out
mov
or
jl
stos
daa
jno
xor
inc
sub
add
nop
das
aas
ficoms
add
mov
adc
mov
mov
fstpl
enter
and
outsl
sub
push
dec
dec
imul
mov
icebp
add
and
mov
pop
in
dec
inc
sbb
arpl
fwait
xchg
stos
sub
add
and
repz
jl
mov
cmp
movsl
les
add
mov
mov
in
pusha
mov
punpcklwd
push
push
mov
cmp
xchg
add
shrb
mov
push
aad
lea
cmc
in
jle
and
xor
adcb
cli
pop
mov
jbe
cs
rclb
pop
hlt
pusha
testl
xor
aam
jnp
adc
int
ja
add
dec
push
jle
or
jl
mov
pushf
and
arpl
jmp
adc
repz
fwait
add
inc
xchg
ljmp
xchg
cmp
je
fdivl
ja
pop
push
mov
pop
cmp
and
nop
loope
js
repz
imul
push
negb
lahf
out
sbb
pop
fstpl
aas
mov
push
cli
xor
cmp
sbb
lock
and
jbe
pushf
jns
roll
mov
push
movsb
call
pop
daa
stos
out
dec
in
pop
roll
mov
mov
jnp
lcall
mov
mov
fdiv
xchg
lds
push
xor
das
sbb
adcl
aaa
push
mov
jl
or
jae
lods
inc
enter
and
imul
inc
mov
xor
cld
icebp
push
and
sahf
fwait
add
cmpsl
arpl
lret
cmp
jecxz
mov
repnz
incl
sahf
lods
fsts
and
push
out
repnz
push
stos
cltd
shrb
lods
cli
sbbl
sub
inc
std
xchg
in
inc
dec
mov
loopne
push
mov
adc
push
test
into
mov
jmp
pop
cmp
xchg
sub
sub
inc
shl
in
ds
push
cs
jl
sub
push
loop
rcr
and
inc
mov
les
repz
pusha
aad
inc
mov
fbstp
nop
pusha
sbb
sub
shlb
mov
sub
addl
mov
sbb
xchg
insb
mov
jle
sbb
js
pop
leave
mov
push
pop
xchg
addb
bound
addr16
adc
xchg
xchg
pop
mov
add
int3
xchg
inc
mov
je
aad
data16
fldt
pop
ret
adc
sbb
cmp
shll
lds
inc
loop
rcll
repnz
daa
cli
push
inc
inc
aad
aas
aam
jecxz
or
push
decl
jne
and
xlat
jne
dec
test
test
in
push
jle
jne
lcall
push
jmp
cwtl
rsqrtps
stc
loopne
lea
add
or
out
data16
ds
push
cmp
mov
fcmovnb
pop
fdivrs
adc
cmp
in
mov
aam
mov
scas
dec
nop
into
insl
lods
cmp
inc
orb
mov
mov
xorb
fistpl
inc
dec
push
bound
inc
loope
lahf
cmp
mov
outsl
insl
or
notl
mov
in
mov
or
ret
insb
fcompl
adc
mov
mov
sti
xchg
rep
or
sub
jne
adc
out
add
popf
cli
xchg
ja
push
mov
repz
add
cmp
loope
mov
pop
sahf
filds
and
mov
xchg
clc
adc
cmp
decl
mov
andl
inc
inc
add
mov
sbb
and
sub
sub
xchg
shrb
pop
sub
push
shrl
sbb
jg
aaa
sub
in
bound
mov
mov
aas
call
push
pop
push
inc
rcl
pop
test
lahf
jg
test
test
hlt
clc
add
dec
cmc
cs
ljmp
ret
fs
popf
xlat
shrl
jnp
out
icebp
rcr
out
dec
dec
jo
popf
sub
or
cmp
xor
hlt
xor
loop
test
lds
cli
xor
repnz
sbb
in
dec
mov
inc
cwtl
pop
sahf
ja
repnz
lds
xor
cmp
fcmovb
lret
test
imul
imul
lds
jns
loope
or
enter
data16
lds
adc
daa
adc
xor
pop
arpl
mov
in
jb
xor
aaa
jg
jbe
stc
loopne
rcrb
imul
add
fnop
add
pop
addr16
dec
pop
or
mov
dec
lock
cwtl
fcoml
sbb
movsb
repz
in
or
popf
mov
in
add
cmpsb
adc
mov
out
inc
inc
mov
cmpsb
mov
cmpsl
and
cmpsl
push
push
or
stc
push
rcl
pop
hlt
xor
mov
add
sub
clc
xchg
and
xchg
insb
cmp
jno
xchg
xor
dec
dec
cwtl
pop
out
rcrl
das
fsubl
cmpsb
lret
sub
xchg
notl
dec
mov
stos
loope
jnp
push
mull
and
mov
mov
push
cmc
dec
lcall
scas
das
cmp
add
pop
rcl
icebp
adc
cmp
ds
add
lea
es
sub
outsb
out
decl
fwait
lods
mov
outsb
iret
insl
inc
cmp
or
xchg
xor
scas
ja
mov
icebp
cmpsl
cmp
pop
addl
dec
xchg
fwait
jae
loope
adc
rcrl
clc
push
movb
dec
out
add
jecxz
xchg
lods
pushf
jmp
lods
adcl
fldl2t
insb
int3
and
sub
sahf
or
xchg
xchg
jle
jmp
bound
or
fstpt
cmpsb
sub
test
and
mov
adc
or
mov
adc
sahf
xchg
add
call
jnp
pop
xchg
pop
lret
mov
test
pusha
repz
cwtl
test
bound
or
sbbb
fldenv
insl
push
in
and
rep
repz
xchg
mov
dec
fistps
push
or
subb
or
les
sub
fidivrs
fadd
mov
mov
pop
mov
ljmp
ret
mov
test
and
loopne
cmc
pop
mov
rorb
mov
pusha
push
or
shrb
faddl
xchg
lea
sub
gs
mov
out
jg
xor
add
push
cs
cmp
rolb
ds
test
loop
jmp
inc
std
add
mov
add
mov
movsl
mov
outsl
mov
inc
cmp
cli
push
shlb
dec
xor
les
ret
in
popf
test
sbb
fcompl
mov
adc
or
test
mov
inc
jbe
fs
faddp
repz
movsl
sarb
ja
rcl
pop
inc
sub
xchg
les
sbb
sbbb
xchg
mov
xchg
dec
mov
mov
clc
insl
mov
jl
fistl
mov
rcrl
jmp
jnp
and
jle
add
mov
xchg
scas
mov
cmp
mov
ret
lock
jne
or
lret
xchg
inc
mov
pop
mov
jecxz
outsl
and
cmp
and
int
imul
xchg
les
cmp
std
fcoms
jo
ja
dec
jns
cld
and
sbb
mov
xchg
dec
adc
cmp
sub
out
lds
fldt
rcrl
cmp
movsb
div
push
fstps
mov
dec
jle
jp
cmpsb
xor
or
lods
or
sahf
and
mov
dec
aaa
mov
adc
cmp
dec
push
std
scas
je
add
push
in
lods
cmc
jo
lret
jge
mov
mov
ds
inc
fidivrl
mov
push
add
fdivl
dec
hlt
mov
and
dec
test
xchg
sub
mov
sub
mov
mov
mov
sbb
push
sub
fdivrl
xor
scas
pop
sbb
xchg
inc
fisubrs
mov
mov
ljmp
jmp
push
sbbl
mov
jmp
add
addr16
testb
cwtl
lret
gs
and
xor
cltd
adc
and
imul
and
mov
loopne
and
nop
popf
int3
jbe
add
sbb
in
dec
and
push
outsl
js
dec
into
mov
sub
or
fiadds
adc
sub
sbb
testl
inc
push
sbbl
dec
call
iret
mov
mov
lods
test
lods
lret
cmp
dec
popa
outsb
or
mov
testl
pusha
inc
test
lahf
dec
icebp
outsl
imul
mov
xor
and
loop
sbb
fisubrs
mov
pop
stos
sarb
in
jecxz
sbb
push
jns
daa
out
fstps
dec
sarl
sbb
push
outsb
cld
ds
lock
sub
cltd
mov
fs
movsb
or
add
pop
outsl
inc
lahf
hlt
mov
or
dec
xchg
add
cmp
enter
or
sbbl
loop
pop
mov
jl
mov
mov
adc
jp
xchg
adc
inc
clc
aas
inc
pusha
xchg
inc
sub
mov
add
shl
das
or
jge
lds
adc
adc
nop
cmp
jno
je
dec
sub
leave
stos
cwtl
and
cmp
jbe
lods
pop
dec
and
mov
mov
sub
inc
pop
fistl
push
popa
out
ja
stos
test
adc
xchg
cmpsb
push
ljmp
mov
and
inc
lock
push
inc
dec
jb
std
pop
dec
or
shrb
sbb
dec
sbb
stc
enter
outsl
mov
icebp
pop
rorl
add
imul
xchg
mov
push
pop
adc
mov
repz
clc
mov
mov
popf
lods
push
aam
stos
jnp
pop
rcll
iret
and
jno
mov
jne
sbb
pop
push
mov
mov
xchg
mov
sbb
add
ss
test
mov
inc
andl
gs
mov
sub
fsubrs
or
ljmp
lock
adc
loope
shr
sub
mov
rcr
sub
mov
ljmp
pop
sahf
shl
sbb
and
jne
cmp
push
inc
bound
jmp
fs
xchg
ficompl
rcrl
mov
mov
cld
in
imul
js
pusha
adc
sti
sbb
and
mov
into
and
push
and
popf
jmp
cmpsb
fcoml
testl
mov
push
dec
xor
sub
xchg
add
orl
xor
scas
data16
rcrb
loopne
leave
enter
xchg
in
mov
adc
jecxz
mov
jno
mov
add
shr
cmp
call
dec
xchg
sti
lcall
push
pop
mov
push
imul
fists
cwtl
ja
in
cmp
ja
adc
ret
add
movsb
jecxz
mov
push
cmpsb
add
iret
and
in
xchg
sub
mov
aad
and
syscall
imul
mov
adc
or
mov
or
ret
jmp
aaa
jb
dec
fdivrl
add
or
pop
jno
in
mov
nop
jo
inc
fsubrs
mov
add
adc
push
bsr
xchg
push
xchg
xlat
lea
mov
dec
imul
pop
dec
pop
jbe
and
adc
enter
arpl
inc
mov
inc
aas
aas
push
outsb
scas
mov
mov
enter
push
sti
inc
ljmp
sbb
lret
sbb
adc
dec
out
cwtl
jge
sub
jo
mov
jne
pop
push
sub
sbb
lcall
or
cwtl
ss
hlt
ja
in
sub
add
fistpll
aad
imul
orb
sbb
lods
sub
push
mov
mov
add
push
ds
push
shrl
pop
sub
sbb
sub
jb,pt
sub
fwait
lea
xchg
aas
notb
shrl
icebp
lods
cmc
mov
push
insb
call
mov
xchg
fwait
cmpsl
push
and
push
icebp
or
stos
mov
push
mulb
fcoms
pushf
mov
ret
into
cmc
adc
pop
jecxz
push
popf
repz
add
mov
decl
and
stos
inc
je
adc
decl
andl
lcall
mov
xchg
and
mov
lock
and
xor
movl
xchg
out
fs
fdiv
out
xor
lea
xchg
sub
sub
jecxz
sahf
pop
scas
imul
mov
icebp
inc
shr
xor
cld
insl
jno
jle
pop
xor
popa
fcomps
inc
sti
jbe
std
and
fs
aad
in
cltd
pop
pop
xor
popa
out
mov
xchg
mov
sub
mov
faddl
mov
push
scas
or
xchg
ficompl
fsubrl
pushf
imul
sub
xchg
mov
aam
outsl
data16
in
xor
adc
mov
ljmp
repz
sub
lds
into
sub
lahf
xchg
in
aas
mov
sahf
pop
out
pushf
sub
icebp
ja
test
sub
xchg
mov
js
shlb
mov
sbb
inc
scas
outsl
popa
inc
bound
dec
xchg
xor
adc
add
add
cli
sti
sub
dec
xchg
cmp
mov
mov
lock
lods
xor
mov
cmp
in
jbe
mov
les
lds
cli
adc
mov
test
mov
ja
mov
pop
testb
pop
pushf
aad
xchg
cmpsb
ds
icebp
mov
ss
rolb
idivl
and
repnz
push
inc
lods
mov
subb
lds
mov
call
cltd
and
je
jne
pop
in
fcmovne
sub
push
rcrl
xor
out
or
cmp
and
mov
shl
lock
xchg
dec
sub
rdmsr
jg
push
or
lods
add
daa
and
sub
pusha
mov
fwait
cmp
push
cmp
add
dec
sub
fidivl
loopne
mov
out
movsb
fstpl
push
fucom
daa
inc
xchg
imul
mov
xchg
and
xchg
add
rcrl
aaa
repnz
int
adc
cwtl
test
insb
rcll
ret
mov
sbb
push
sub
dec
vxorps
jno
pop
es
outsl
movsb
xchg
mov
mov
mov
sub
dec
shl
mov
aas
pop
xor
outsl
out
mov
subb
and
je
xor
dec
leave
pop
pop
cs
mov
pop
mov
jns
scas
cmove
in
lods
inc
test
sub
shlb
xor
cmpsl
pop
icebp
aad
out
ret
adc
xchg
movsb
dec
jne
dec
lock
idivl
lcall
sbb
loopne
inc
cmp
mov
repnz
inc
aad
ret
lret
hlt
sahf
stos
mov
push
xor
jge
daa
out
sub
movsl
mov
stos
pop
add
aad
ret
push
adc
cmp
loop
jno
hlt
sbb
les
dec
in
js
cltd
stos
inc
stc
jb
lcall
mov
repnz
jne
int3
cmc
mov
in
cmp
mov
jo
push
dec
adc
in
sahf
aam
xor
add
int
pop
insl
addr16
loop
and
ja
jns
jno
push
jge
jge
rcll
imul
dec
fwait
xlat
pop
adc
cld
jo
data16
mov
out
insl
shlb
mov
jnp
or
je
scas
xor
shlb
mov
popf
pusha
stc
icebp
arpl
mov
into
and
in
cmp
pushf
mov
stos
xor
jne
jnp
data16
pop
int3
out
pusha
jge
vpmadcsswd
aad
push
in
data16
loop
jno
mov
in
xchg
std
mov
dec
adc
addr16
ljmp
xorb
cltd
std
mov
mov
inc
mov
sub
xor
and
or
xchg
cmp
data16
in
mov
mov
mov
inc
data16
adcl
rclb
fistl
inc
sbb
push
je
movsb
mov
lods
sub
lcall
xchg
inc
cmp
and
pop
pop
fcmovnu
xchg
mov
aad
inc
jmp
cmp
push
lret
lods
adc
dec
add
scas
xlat
push
sarl
adcb
sbb
xor
stos
jne
out
inc
in
in
inc
in
sub
outsb
jns,pt
pop
jl
add
in
scas
sarl
js
shl
pop
dec
es
adc
xchg
rorb
add
dec
cmpb
shlb
aam
arpl
pop
dec
out
xor
fmulp
ficomps
jecxz
mov
test
adc
shl
xchg
xlat
add
shrl
andb
scas
mov
adc
popf
adc
add
filds
loopne
aam
sub
pop
test
add
push
lret
and
aas
or
xor
insb
xor
dec
loop
rclb
and
cltd
mov
and
lock
jmp
ss
es
ds
aam
and
sbb
sbb
dec
pop
dec
outsb
fwait
mov
in
mov
push
jno
cmpsl
dec
pop
and
cmp
std
adc
pop
push
fwait
xchg
cltd
sbb
dec
xchg
iret
or
pop
push
lds
popf
adc
jge
push
inc
jge
addb
in
std
push
cmp
jp
mov
movl
fldenv
pop
add
sub
xchg
inc
add
jae
out
mov
lret
data16
out
negb
pop
stc
mov
pop
mov
dec
push
mov
xchg
cwtl
mov
sub
sub
jnp
jb
ja
mov
and
je
fwait
pop
repnz
bnd
jnp
xchg
shr
cs
lock
cmp
loopne
push
jno
addr16
mov
mov
cmpsb
ds
or
xchg
mov
in
sahf
adc
cmp
adcl
sub
imul
xor
jo
push
lds
filds
lock
mov
mov
adc
leave
jno
es
mov
fisubrl
fsub
adc
outsb
int
out
dec
pop
fdivrs
ficompl
outsb
jmp
cwtl
arpl
jo
out
sbb
adc
filds
push
pop
int3
add
ret
cld
leave
push
or
cmp
xchg
mov
mov
fcmovnu
mov
out
andb
addr16
cmp
iret
sbb
jecxz
out
mov
pop
sti
out
xlat
pop
xchg
sarb
sub
mov
test
repnz
inc
add
add
cmp
loop
mov
dec
pushf
jg
insb
mov
pop
ret
int
pusha
stc
or
sub
pop
fiadds
int3
pop
cmp
jb
mov
cltd
mov
jge
iret
or
inc
push
mov
incb
sbb
or
xchg
sbb
dec
imul
mov
aam
inc
pop
push
jl
mov
ret
loopne
das
cmp
cwtl
push
mov
icebp
xchg
aaa
fimuls
adc
cmp
cmpl
jmp
out
shll
sbb
jge
adc
dec
sub
pop
pop
and
rclb
push
bound
pop
outsl
inc
cltd
xchg
mov
pop
xorb
inc
stc
sub
adc
or
repnz
icebp
sub
cwtl
fmulp
mov
inc
add
outsl
cmc
sarb
jmp
jg
repnz
mov
dec
xor
sbb
stc
dec
cli
aas
sbbl
sub
pop
and
xchg
adc
rcl
xlat
ljmp
out
add
mov
xlat
inc
out
cmp
cwtl
dec
xor
lret
sub
pop
clc
sahf
or
outsb
sarb
lods
mov
dec
jle
fs
into
in
ret
adc
lret
push
add
or
sbb
pop
pause
inc
out
mov
nop
push
pop
inc
xor
in
out
aas
dec
xchg
jbe
add
jnp
lcall
inc
add
add
fstpl
leave
adc
ret
shr
add
lret
int
leave
xchg
push
pop
and
insl
insb
cmp
in
data16
push
daa
das
cwtl
cli
movsb
aad
jbe
sub
leave
shll
in
mov
sbb
lcall
lahf
retw
xchg
hlt
xchg
out
test
jge
in
and
add
into
fwait
insl
das
inc
je
popf
int3
mov
push
iret
rclb
sbb
jno
pop
out
mov
sub
xor
mov
test
cmpsb
sar
popf
pop
gs
mov
outsb
mov
dec
in
dec
inc
rcrb
sbb
lods
out
cmp
xorb
mov
pop
sbb
jle
and
in
mov
push
mov
call
jns
mov
sub
add
jnp
adcb
les
lock
jge
pop
imul
jp
jg
or
sbb
or
mov
mov
cs
push
scas
mov
or
jns
mov
adc
mov
call
lock
rcrb
jae
lods
or
pop
nop
xlat
test
push
mov
lods
popa
push
movsb
inc
test
jae
sbb
mov
fnstenv
push
mov
push
dec
push
push
mov
movsl
pop
ret
paddusb
gs
inc
aam
sub
dec
cmpl
daa
sbb
fs
fcomp
repz
hlt
xchg
cmc
jp
mov
cmpsl
mov
pop
std
and
cmp
gs
lret
sahf
sbb
push
test
mov
jmp
pop
mov
sub
inc
clc
sub
cmpsl
mov
add
add
gs
cs
inc
shrb
int
leave
fcoml
insl
cli
mov
fsubs
add
icebp
xchg
idivb
mov
mov
mov
mov
or
dec
out
xor
cmpsl
les
xor
jg
scas
jnp
jg
fdiv
das
or
push
push
pop
xor
imul
iret
mov
inc
dec
push
lahf
adc
repz
divl
mov
daa
jns
test
adc
fucomip
push
out
pusha
ds
int3
pop
insb
enter
inc
mov
xlat
inc
inc
sbb
aam
push
dec
pop
sti
xor
cmp
add
jmp
ret
dec
cs
in
xchg
xor
jecxz,pn
in
hlt
push
push
inc
xchg
enter
cld
lods
test
or
cld
loope
or
adc
push
movsl
out
push
adc
mov
mov
sbb
cmp
js
bound
push
out
or
mov
xchg
scas
cmp
push
repz
jb
xchg
inc
sbb
inc
arpl
lret
pop
cltd
mov
in
sub
xchg
les
cmpsb
fs
mov
xor
jmp
dec
mov
inc
in
sub
scas
movsl
subb
sbb
mov
push
pop
lret
push
xchg
push
mov
fdivs
sub
fs
insl
mulb
mov
cltd
sub
pushf
ljmp
add
mov
cmc
pop
jg
jle
sub
das
andl
movsb
mov
xor
jbe
push
shlb
cli
jb
push
pop
adc
push
imul
adc
sub
sbb
cmp
xchg
clc
mov
in
adc
inc
pop
in
cmp
iret
cld
cwtl
pop
mov
cmp
hlt
idivb
pop
out
and
cmp
popf
or
cmpsl
es
push
mov
jp
xor
lock
sub
lret
stos
and
add
pop
out
aas
loop
mov
filds
xchg
gs
adc
cmp
xchg
xchg
jnp
add
scas
addr16
mull
jge
ljmp
lods
repz
sub
inc
rcll
fwait
inc
sti
adc
incb
and
cmc
shll
mov
scas
cmp
inc
fwait
xchg
jge
cmpsb
adc
mov
pop
jle
mov
lahf
sbb
out
ret
cwtl
push
sub
dec
xor
mov
insl
addl
stos
xchg
push
jno
push
push
pusha
sahf
scas
pop
aaa
lods
jp
mov
stc
mov
push
fistpl
imul
sar
rcrl
inc
js
aad
push
pop
sub
cli
faddl
jmp
sub
mov
or
insb
mov
sub
rolb
loopne
mov
icebp
xchg
jnp
mull
test
xchg
cmp
or
mov
stos
push
xchg
int
movsb
dec
lock
sarl
ret
insb
loope
jge
ss
popf
popa
enter
aaa
xor
jl
call
xchg
add
sbb
movsb
scas
xlat
fnstcw
cmp
stos
dec
push
stc
fnsetpm(287
stc
cmp
daa
mov
loope
cmp
sbb
dec
push
pop
jns
gs
ljmp
xchg
mov
inc
jne
test
fs
mov
gs
xchg
jnp
mov
popf
test
in
test
jne
imul
int3
mov
mov
sbb
adc
cmp
subb
sbb
pop
cli
fcmovu
test
sti
fsubrs
popa
daa
mov
xchg
ss
ret
scas
shll
roll
es
pop
popa
push
xchg
mov
xchg
mov
insb
mov
add
jecxz
sub
fidivrl
mov
xor
pop
gs
lods
lea
pop
cmp
inc
ss
cmp
mov
or
stc
jle
repz
xchg
mov
dec
movl
jo
push
ss
and
pop
mov
dec
jno
inc
repz
repz
nop
push
nop
das
pop
insb
mov
add
out
push
pop
outsl
inc
popl
xlat
pop
popf
mov
std
xchg
add
push
sbb
mov
cmp
lock
fildl
inc
fimuls
ja
fsubr
xchg
lea
insl
nop
jne
xchg
cmovne
and
dec
lret
test
imul
mov
pop
mov
xchg
add
cmp
push
pop
add
loop
xor
xlat
or
in
jne
add
push
adc
push
popa
outsb
push
jne
jmp
or
xchg
mov
jo
or
out
sub
pop
lcall
fwait
insb
into
pop
adc
movsl
cli
cs
shl
sarb
lods
push
rcll
mov
xchg
aaa
mov
call
mov
fsubr
mov
add
jmp
and
lret
cmpsb
jg
je
imull
and
cmp
sub
fnstsw
inc
sbb
mov
push
das
pop
jae
sub
fadd
dec
out
iret
call
bound
cld
es
xchg
xor
jae
cltd
xor
sub
insb
lret
lret
imul
in
jecxz
mov
aas
aam
push
sub
repz
cmpsl
aas
xchg
adc
mov
movsl
fucomi
pop
insl
adc
mov
leave
push
lea
adc
js
sbb
inc
mov
lret
and
xlat
fnstcw
lea
push
and
jge
pop
into
dec
lods
jo
pusha
aaa
or
mov
subb
ret
pop
mov
aas
xchg
pop
lods
insl
mov
adc
and
test
decl
nop
mov
loope
xor
sbb
enter
push
lret
and
lret
push
sub
pop
in
or
cwtl
sarb
mov
xor
in
das
xchg
loope
insb
xor
fmuls
cld
push
dec
mov
and
out
lret
mov
xchg
pop
xchg
bsr
xor
mov
add
rorl
dec
dec
jl
pop
sar
fdivl
inc
xchg
mov
xor
pop
and
inc
in
fsubrp
dec
mov
add
repnz
out
hlt
jle
xchg
xchg
ljmp
sub
add
mov
and
and
daa
ret
inc
mov
push
fldcw
loope
inc
stc
pop
dec
dec
inc
std
sbb
sbb
jns
fcoms
add
sahf
mov
xchg
jno
lods
and
stos
mov
mov
push
dec
int
adc
test
mov
cmp
adc
enter
leave
push
icebp
icebp
xor
mov
popa
in
out
add
int3
hlt
dec
adc
outsb
add
scas
lods
mov
fadd
repz
jg
jae
dec
insb
stos
fcomp
push
cmp
inc
adc
mov
pop
lods
push
fs
outsl
pop
inc
sarb
pop
dec
adc
loope
jb
test
inc
mov
outsl
xchg
or
scas
inc
mov
cmp
and
repnz
addr16
jns
fldz
out
add
arpl
jecxz
fs
jl
test
or
clc
loope
rcrb
ffreep
scas
rcrb
xchg
fidivrl
sub
xchg
inc
xlat
xabort
push
mov
push
rclb
xchg
jge
sarl
mov
loop
je
cwtl
movsb
test
jae
adc
hlt
aad
out
loopne
cmp
in
mov
inc
inc
loop
pop
mov
ret
sub
xchg
push
mov
adc
or
lods
das
jg
jle
imul
mov
cmp
je
push
inc
jle
push
pop
adc
jne
aaa
or
cmc
sbb
mov
push
xor
daa
jno
add
jns
xchg
mov
add
push
out
mov
mov
movsl
test
shrl
cmp
xor
and
push
or
pop
jo
jmp
cmp
mov
mov
mov
sbb
sarb
mov
sarb
test
sbb
movsb
add
repz
mov
scas
bound
cmpsl
stos
mov
stos
push
cltd
daa
push
jmp
in
pop
sbb
jl
inc
pusha
mov
notb
notb
lds
repz
cmp
icebp
movsl
cmpsl
or
shl
xor
shlb
sub
add
test
out
xor
sahf
mov
outsb
ja
and
lcall
dec
leave
cmp
lock
mov
xchg
jg
dec
pop
lret
inc
sub
mov
mov
or
pop
jb
cli
rorl
testb
or
mulb
adc
pop
clc
inc
aam
mov
xlat
in
jg
mov
lods
cld
mov
enter
push
lods
jmp
jae
cwtl
cmpsb
mov
xor
dec
inc
popa
push
sbb
xchg
or
icebp
push
pop
or
js
jbe
hlt
mov
mov
aas
lret
movl
rorb
mov
loopne
add
mov
inc
nop
outsb
push
iret
andl
pop
mov
or
movsl
test
mov
pop
sahf
cmp
out
cmpsl
sbb
xrelease
scas
mov
enter
int3
lods
push
pop
bound
xchg
sub
rcr
inc
sbb
cwtl
mov
inc
sub
cmp
mov
push
aas
sbbl
add
out
mov
loopne
decl
push
xor
dec
or
ljmp
sbb
pop
and
lcall
mov
jl
mov
push
push
or
sub
push
sub
xor
push
pop
data16
cmp
dec
jp
fldl
adcl
mov
cld
data16
icebp
inc
fsts
jge
fldl
lock
addr16
out
imul
cli
mov
aad
inc
xor
sahf
daa
xor
mov
out
xchg
jl
stos
xlat
inc
sbb
aam
mov
push
mov
mov
mov
pop
mov
gs
and
arpl
ss
icebp
imul
in
dec
inc
push
or
repnz
xor
cmc
cli
cmpsl
js
pushf
inc
xlat
stos
push
std
xchg
stos
pop
mov
popf
in
cmpsl
jl
xchg
pop
mov
hlt
sub
icebp
loope
adc
roll
bound
pop
clc
fcoms
mov
outsb
adc
lcall
in
pop
mov
loope
lea
pop
add
add
sub
xchg
fldl
xor
nop
mov
mov
add
das
lods
inc
rcll
je
loope
addr16
fdivp
xchg
sbb
jl
sub
inc
push
pop
fcomp
xor
sub
and
push
mov
push
jmp
pop
stos
ficoml
and
fsts
mov
sub
jbe
hlt
dec
dec
and
mov
repz
test
ret
out
cmp
pusha
into
out
andl
insl
push
add
lahf
pop
pop
repz
ljmp
fstl
stos
xchg
stos
fstpl
or
leave
push
mov
pop
movsl
shll
int
enter
pop
jb
inc
movsl
aam
pop
sbb
iret
sub
add
or
push
fnstcw
xchg
or
xlat
sti
push
push
add
dec
xor
cmp
and
cmp
ds
sub
pushf
shlb
scas
int
in
jae
add
sbbl
add
push
mov
shrl
dec
insl
pushl
xchg
adc
jl
push
je
jg
test
add
cmc
divl
push
inc
jae
inc
or
push
aad
jle
pop
jecxz
sub
insb
pop
cmp
mov
jno
mov
test
mov
lods
das
sub
push
jae
in
lahf
inc
xchg
jp
cld
inc
cmp
adc
aaa
adcl
std
popf
into
jge
cmp
pushf
sub
gs
push
xchg
rclb
mov
jl
enter
pop
ret
dec
push
sub
sub
mov
aas
sub
lea
pop
add
jge
sub
dec
pop
insl
ja
clc
add
cmp
pop
mov
pop
inc
cmpsb
mov
aaa
lea
jb
xchg
xchg
cmc
rcr
adcb
mov
mov
imul
inc
xor
test
adc
push
xor
in
sbb
and
push
add
nop
int
stc
push
in
push
cmpsb
fbstp
mov
fidivs
stos
loopne
sbb
mov
ljmp
mov
loope
dec
mov
dec
ss
push
shll
jmp
jecxz
ficoms
fs
lock
test
dec
pop
jns
arpl
cwtl
outsb
sbb
mov
imul
adc
adc
mov
xor
xlat
cmp
outsl
daa
mov
xchg
fsts
pop
cmp
ffree
jo
pop
push
inc
pop
jae
mov
cs
js
add
push
inc
bound
xor
cmp
inc
xor
pop
loope
pop
xchg
sbb
iret
push
sbb
gs
pop
fnstcw
rcll
into
outsl
xchg
xor
out
push
and
jbe
jnp
jle
enter
cli
cld
popa
cwtl
dec
into
sub
xor
scas
aas
mov
jle
pop
popf
xchg
jmp
mov
mov
daa
mov
cmc
dec
and
rorl
mov
jbe
pop
xchg
xor
pop
xor
jle
lahf
xor
imul
test
outsb
pop
js
mov
loop
push
repz
pop
jo
mov
pop
sahf
cli
add
mov
dec
sbb
sbb
add
cvtps2pi
pop
xchg
fists
sti
lret
daa
data16
push
mov
jns
or
pop
inc
fistps
xor
pop
test
outsb
pop
adc
stc
cmp
aaa
adc
pop
add
cmp
cmp
sub
je
test
push
add
mulb
ret
popf
mov
in
mov
ret
adc
mov
in
je
xor
test
loope
movsb
cwtl
push
andl
jle
mov
mov
xor
sbb
jb
mov
mov
les
lahf
xchg
sub
inc
js
fistpl
jne
sub
mov
loopne
out
inc
jle
into
aaa
in
ret
dec
dec
cltd
push
jb
push
std
jp
cmp
sbb
int
out
out
push
rcr
lock
inc
mov
mov
in
cmp
popa
test
xchg
movl
outsl
lret
or
mov
popa
and
lock
clc
pusha
loope
pop
sub
mov
cwtl
sub
insb
or
or
in
dec
xchg
rcrb
and
xor
fwait
popf
pop
sub
adc
mov
clc
scas
out
cmp
mov
sbb
lret
stos
xchg
pop
fstps
mov
add
pcmpgtw
xlat
shlb
ja
xchg
pop
repz
rcl
or
filds
outsb
loopne
aaa
iret
fidivl
xor
cmp
outsb
pop
frstor
nop
add
test
adc
fisubrs
jmp
pusha
inc
mov
mov
xchg
add
mov
xor
push
jl
xorb
jb
mov
push
nop
idiv
aad
adc
loop
outsb
sbb
fnstcw
ljmp
test
hlt
pop
dec
out
add
out
into
fucom
inc
jmp
insb
inc
inc
push
pop
xor
push
jge
ss
bound
xchg
out
cmp
lods
cmp
jnp
ljmp
push
addl
mov
ljmp
pop
add
and
push
pop
sbb
call
push
sbb
mov
fstpl
dec
dec
mov
rcl
push
pop
push
and
xor
push
mov
xchg
cld
enter
mov
pop
loop
jne
xchg
and
daa
mov
add
inc
push
push
and
daa
jg
in
jae
jb
test
add
pusha
inc
cld
xchg
fnsave
loop
sbb
repnz
sbb
repnz
shlb
push
sti
je
mov
and
jo
cmp
aaa
cmp
jle
jmp
bound
xchg
shl
sbb
mov
fsubs
pop
sbb
jg
cmpl
adc
xchg
fstl
loopne
ret
lahf
mov
loope
aad
pop
push
mov
push
popf
cvtdq2ps
mov
dec
or
mov
sub
jae
loope
mov
iret
dec
xor
shll
pop
mov
mov
lret
jecxz
jmp
lret
xchg
push
xchg
xor
nop
int3
imul
std
mov
mov
int
dec
sub
cmc
add
fsubs
scas
jg
into
ja
test
cmp
jp
mov
jecxz
and
mov
je
push
inc
dec
cmc
movsb
push
stos
cmpl
jne
out
cmp
sbb
mov
jecxz
and
je
and
imul
pop
adc
sub
mov
sub
dec
push
imul
sub
jbe
into
adc
sub
pushf
cs
in
cmp
lds
in
aaa
clc
fwait
xor
fs
neg
fucomp
int3
or
ret
xor
cmp
mov
sbb
xchg
sub
mov
les
les
cltd
push
lcall
int3
out
stc
cmc
xchg
pop
dec
out
test
pop
mov
push
mov
cli
cmp
and
movsl
enter
jmp
fdivs
jl
sbb
mov
popf
cmc
scas
fsubrl
jbe
inc
aad
loop
push
push
insb
insb
lret
pushf
aaa
sbb
sbb
ret
cmpsl
push
mov
adc
sub
nop
sub
pop
dec
dec
loope
add
add
outsl
dec
sahf
sub
mov
call
ds
jge
cmp
daa
mov
mov
cmp
push
push
lret
push
or
insb
nop
mov
cmp
lahf
mov
jns
addr16
pop
xlat
mov
mov
mov
mov
lea
daa
push
imulb
or
pop
lods
das
lds
notb
xchg
jg
nop
cmc
scas
aas
jecxz
into
and
cmp
inc
xchg
mov
ror
or
cmc
fcmovbe
push
shll
mov
inc
and
and
loop
clc
dec
mov
or
or
stos
ret
popf
cs
mov
xchg
xchg
xchg
aaa
call
in
and
inc
iret
fcmovbe
fistps
movsl
add
pop
xlat
cmp
inc
in
jbe
inc
cltd
xor
jg
cwtl
stc
xchg
cltd
adcl
out
scas
and
into
mov
cld
lods
cli
sbb
int3
xchg
clc
cmp
add
jo
ret
jmp
jno
ljmp
sub
leave
sarb
pop
xor
push
icebp
jl
adc
xchg
push
dec
inc
sahf
mov
xor
push
in
xchg
in
adc
icebp
call
jp
lea
xorl
dec
jp
sub
out
mov
lock
dec
hlt
dec
adc
sub
cmp
gs
mov
pop
outsl
cmp
pop
xchg
in
adc
insb
movnti
fisttpl
imul
jno
lods
icebp
scas
mov
das
pop
push
data16
shrl
pop
loope
adc
xor
addr16
test
dec
sbb
in
lods
xchg
xor
call
mov
fs
mov
cltd
mov
mov
adc
dec
insb
enter
mov
outsl
pusha
out
and
cmp
jne
int
push
xor
orl
mov
aad
jae
imul
sub
dec
enter
cwtl
push
sub
xchg
stc
cld
cmp
cmp
dec
cli
stos
mov
sbb
jg
jmp
ja
xchg
or
pop
xchg
pop
add
mov
jae
outsl
add
push
cmpsb
idivb
jne
or
stos
rorb
ror
and
xchg
fnsave
add
adcl
xor
das
dec
or
cltd
into
sti
and
add
imul
push
dec
imul
xchg
negb
pop
ret
imul
adc
int3
test
push
outsl
xchg
xchg
inc
aaa
shrb
nop
jmp
add
in
mov
dec
xchg
push
jb
cmp
jle
sub
lods
or
aas
pop
sub
xchg
loopne
dec
jno
in
cld
loop
jae
call
add
sbb
dec
repnz
sbb
test
push
xchg
daa
adc
mov
add
mov
add
mov
adc
jecxz
mov
es
mov
fxch
xchg
test
adc
gs
out
xchg
sbb
adc
lods
push
imul
push
inc
or
sub
pop
mov
sbb
push
cmp
cltd
dec
xchg
mov
jb
ret
ss
pop
stos
scas
jmp
mov
jae
cwtl
into
dec
push
outsb
insl
lret
dec
dec
cmc
jg
out
loope
push
push
test
movsb
ds
popa
and
xor
mov
xor
jns
in
lret
dec
hlt
add
ret
insb
mov
cmc
andb
mul
adc
jne
mov
mov
or
xchg
mov
hlt
jnp
mov
inc
sti
mov
pop
sahf
push
inc
jecxz
aam
das
jmp
mov
and
lret
call
sbbb
leave
jns
inc
inc
sbb
lods
add
and
std
mov
mov
fiadds
ja
mov
aaa
mov
out
das
ljmp
jmp
mov
gs
inc
cmc
push
aam
pop
adc
jl
inc
sbb
sub
dec
jo
cmpsl
or
ror
jge
andb
mov
mov
orb
adc
outsl
roll
jns
cmp
shll
dec
imul
push
jne
cmp
lea
dec
pop
push
sbb
pop
sbb
jno
push
inc
and
cmpsl
repnz
ret
inc
popa
repnz
dec
test
and
xor
std
or
loop
outsb
mov
cmp
into
mov
in
and
cld
icebp
mov
jb
pop
xchg
test
push
push
push
mov
push
jbe
sbb
imul
pop
xchg
jns
sbb
sbb
mov
mov
fs
jnp
xchg
sahf
mov
adc
ja
lds
or
push
ffreep
enter
mov
xchg
or
xorb
gs
mov
iret
add
push
jo
pop
cwtl
dec
ss
push
mov
mov
aad
xor
inc
shrb
adcb
and
icebp
xchg
push
pushf
fucomp
push
shl
and
jb
leave
sarl
mov
mov
pop
add
aas
adc
sub
pusha
inc
clc
xorb
push
inc
pusha
jp
sbb
xchg
adc
cwtl
scas
jo
cmp
fwait
aaa
lahf
insb
mov
lds
dec
out
and
rolb
inc
mov
xchg
div
jno
es
nop
sahf
daa
mulb
mov
test
jl
iret
lods
mov
mov
inc
cwtl
push
push
sub
push
es
lock
jno
add
xchg
clc
mov
aaa
pop
lahf
xlat
sbb
inc
in
jl
imul
xor
xor
ljmp
jmp
mov
jmp
pusha
add
xchg
sbb
adc
jl
fstps
pop
inc
outsl
js
jecxz
cltd
mov
cltd
push
ret
sub
mov
xchg
xchg
pusha
fwait
lahf
mov
aas
data16
mov
adc
nop
imulb
jae
cmp
scas
out
push
pop
jb
ret
sub
call
add
bound
push
jmp
mov
and
clc
mov
or
orb
pop
inc
adc
outsb
in
cmpb
pop
sub
lods
or
push
iret
xchg
ds
hlt
sub
stc
or
pop
dec
jno
push
in
jo
mov
pop
in
out
movsb
shlb
sbbl
push
fbld
push
adc
or
sub
scas
orl
cli
or
cmp
push
cwtl
arpl
or
in
ss
cmpsb
push
sub
hlt
das
push
daa
js
push
xor
xchg
repz
mov
xor
mov
and
xchg
clc
adc
fsubrs
lret
inc
and
pop
loop
dec
call
xchg
cld
movsb
jns
mov
or
jo
es
movsl
pop
nop
out
rorb
test
sbb
lcall
adc
stc
test
jge
sub
mov
enter
popl
in
or
iret
mov
out
jl
loopne
add
jl
jge
mov
mov
loope
cltd
or
jmp
adc
ret
popl
mov
xchg
cmc
lret
sti
mov
adcb
pop
push
aas
xor
lds
adc
lods
add
pushf
rcr
adc
push
and
ja
dec
xlat
shrl
or
loop,pn
lods
push
lea
mov
sub
incl
pop
test
and
push
adc
sbb
dec
cmp
inc
xchg
mulb
sub
mov
loope
mov
test
mov
add
push
imul
sub
cmp
popf
test
in
lods
js
or
push
mov
stos
std
adc
jbe
jp
test
fwait
les
int
idivb
mov
bound
sbb
faddp
inc
and
adc
cmp
xchg
mov
xchg
jbe
sub
mov
mov
or
or
mov
inc
out
jae
movsl
mov
fnsave
imul
push
mov
shrb
mov
call
jno
cltd
push
mov
push
aam
mov
mov
int3
ja
sbb
loope
mov
repnz
mov
mov
pushf
lcall
sarl
mov
ss
adc
push
out
push
push
movsl
sub
jne
cwtl
push
stc
adc
sbb
sub
jno
in
repnz
and
jo
leave
mulb
push
test
xlat
in
xor
decb
and
mov
clc
lret
mov
mov
rcrb
fdivrl
xchg
push
int
test
int3
dec
cltd
outsb
sar
leave
jecxz
add
cmp
shrl
push
jae
lds
jl
mov
lcall
xchg
mov
mov
xchg
jae
dec
jns
inc
aaa
stos
jge
scas
xchg
xor
test
cmp
testl
cmpsl
push
add
stc
lods
mov
lcall
add
add
inc
bound
mov
jnp
outsl
jno
dec
repnz
lock
idivb
pop
push
jnp
cmpsl
lds
sahf
xor
subb
dec
dec
cmc
sbb
cmp
popa
int3
jb
sbb
or
push
pusha
push
dec
mov
sub
or
and
cmp
leave
pop
inc
fmuls
sti
sahf
adc
pop
ret
aas
pop
std
insl
and
cmc
mov
fiaddl
add
addl
fs
outsl
loope
xorl
imul
sbb
in
inc
jns
int3
jg
std
or
rclb
in
adc
xchg
out
scas
loopne
sbb
data16
mull
ljmp
test
nop
test
sub
xchg
sub
mov
xchg
scas
loopne
ret
adc
mov
jge
movsl
sbb
movsl
cmpsl
mov
xchg
hlt
mov
mov
mov
add
cmpsl
popa
aam
mov
push
mov
add
int3
mov
and
mov
sti
rclb
imul
imul
push
cld
cmc
fwait
dec
add
daa
bound
mov
mov
mov
aad
idivl
add
subb
popf
shrl
cmp
clc
and
add
dec
push
sub
mov
xchg
adc
add
aas
mov
int
das
or
or
jle
in
data16
and
push
inc
xchg
sub
or
rcrl
out
into
icebp
add
jns
enter
mov
mov
push
push
pop
movsb
or
cmp
bound
push
and
inc
xchg
test
add
sbb
mov
iret
scas
and
mov
jecxz
mov
loope
int
insl
pop
leave
rorl
pop
xor
mov
sbb
popa
in
and
sbb
int
sbb
lcall
stos
jo
or
add
ficomps
cwtl
xchg
jae
gs
es
cld
pushf
mov
push
addr16
mov
pop
inc
mov
iret
push
pop
mov
rcr
and
dec
sub
out
loopne
jno
or
and
aad
mov
lahf
ljmp
sarl
cmp
adc
sub
sbb
mov
aaa
and
mov
cltd
mov
testb
sub
or
cmp
push
and
mov
dec
jle
push
movsb
enter
jge
out
in
loopne
icebp
imul
imul
lods
mov
icebp
xor
mov
pusha
cmp
add
mov
lods
pop
dec
pop
into
mov
jns
adc
popf
adc
cld
or
stos
adc
xchg
cmpsb
mul
es
sub
and
push
hlt
jecxz
adc
lods
fldt
and
xchg
jp
test
cs
xchg
hlt
dec
js
loope
xor
shrl
adc
and
in
addr16
cmp
out
mov
out
scas
leave
in
test
inc
xchg
cwtl
mov
dec
and
aam
or
dec
test
push
aam
pop
jl
inc
lds
daa
adc
xor
scas
inc
cwtl
inc
mov
shrl
xchg
xchg
js
dec
hlt
xchg
test
testl
aaa
bound
jmp
xchg
stc
loop
sahf
pop
dec
dec
fisubl
sbb
in
loop
mov
add
or
mov
jle
adc
xchg
dec
test
and
xlat
sub
lea
inc
cmp
inc
jae
sahf
imul
into
mov
cmp
addr16
xchg
pop
xchg
xchg
cmp
orb
xor
push
mov
shlb
mov
int
das
dec
dec
add
popa
inc
sti
jb
insl
lds
inc
lret
xchg
cltd
jne
mov
loope
data16
cli
xchg
mov
adc
xchg
mov
test
test
nop
pusha
les
or
dec
push
jbe
mov
push
pop
cli
add
mov
jle
jle
cwtl
jecxz
sub
mov
aad
out
cmp
enter
push
add
jmp
je
add
test
mov
or
dec
fwait
add
pop
mov
pop
fs
int3
cltd
cs
test
cmp
out
icebp
shll
ds
fwait
mov
pusha
adc
jns
and
mov
pushf
ficomps
outsl
inc
jo
data16
sbb
cli
mov
mov
ret
out
xor
or
lret
push
jge
ret
fmul
xor
inc
jo
inc
mov
sbb
js
ss
xor
subb
lock
or
add
xchg
cmc
mov
incb
mov
mov
push
mull
inc
jecxz
out
add
rclb
repz
lret
or
decb
or
pop
cmp
jbe
leave
lret
enter
out
int3
cli
loop
jmp
inc
scas
das
rcl
aad
addr16
out
lret
mov
xor
int
and
pop
loop
loope
xchg
lods
les
addr16
xchg
fiadds
jg
lret
mov
dec
ret
jns
mov
out
adc
jnp
in
mov
mov
mov
fcomps
sti
gs
inc
shll
dec
aas
sub
cmp
rcrb
xchg
mov
stc
js
pop
jp
stc
jns
xchg
xchg
push
adc
inc
add
mov
adc
jns
xor
adc
pop
push
shll
mov
push
rorl
cmp
outsl
mov
das
pop
or
fcomip
mov
xor
fcmovne
test
or
sbb
jnp
lret
sbb
or
bound
xchg
push
xchg
repz
inc
inc
xchg
lcall
mov
inc
loopne
mov
mov
pop
sbb
or
mov
je
mov
or
mov
pusha
or
xor
rcrb
imul
pusha
outsb
les
loopne
xlat
pop
sti
or
lock
add
jmp
leave
dec
mov
aam
mov
cmp
push
ret
stos
mov
adc
int
pop
mov
xchg
leave
and
add
or
clc
push
mov
xchg
jae
mov
lret
push
lds
adc
pop
inc
mov
xorb
int3
subl
push
pop
cmpsb
lods
xorb
mov
out
add
inc
fisubrl
repz
nop
dec
mov
and
mov
insb
sbb
cmp
push
jns
add
mov
out
je
ljmp
add
or
push
add
pop
lahf
inc
fsubl
mov
cmp
fidivrs
int3
xchg
arpl
pusha
sbb
xlat
scas
jae
icebp
mov
sbb
xchg
xchg
gs
xchg
hlt
jnp
mov
push
mov
sbb
xor
fistps
xchg
lock
pop
mov
sub
mov
rclb
mov
add
xor
imul
insb
sub
lock
mov
and
adc
mov
fnstsw
mov
fisubl
push
add
jmp
lret
push
sbb
lds
adc
cmp
pop
bound
shlb
jae,pn
jg
les
cmp
in
adc
stc
cmpsb
sahf
popa
rol
lea
fsubl
cmp
push
out
jns
pop
dec
pop
fistps
adc
dec
sbb
inc
icebp
imul
fs
cwtl
aaa
pop
movsb
cmp
daa
xchg
fwait
inc
ljmp
scas
sahf
dec
xor
in
xchg
xchg
aaa
mov
add
fs
or
pop
in
fnsave
jb
xlat
adc
and
int3
jo
adc
lret
shlb
pop
push
jnp
mov
subl
adc
aaa
inc
dec
lret
jnp
pusha
test
mov
cmp
push
aad
out
pop
xor
push
nop
pusha
fs
xchg
or
push
adc
jmp
adc
enter
jge
ret
cmp
sbb
out
rcll
fadd
inc
loopne
xlat
cmp
xchg
mov
add
pop
in
xchg
repnz
push
mov
adc
mov
dec
in
loope
mov
sti
and
dec
test
icebp
dec
ljmp
je
push
cmpsb
sub
rorb
cwtl
pop
ljmp
nop
or
push
or
cs
lret
nop
pusha
xchg
mov
add
jno
cwtl
push
and
add
ss
push
mov
lcall
aam
cmp
bound
mov
test
fisubl
rcrl
dec
xor
loop
xchg
cli
arpl
and
stc
lock
lods
mov
or
cmp
test
ret
out
pop
shll
testl
ds
inc
or
cmp
mov
outsb
jge
xor
inc
repnz
jns
mov
cmp
mov
das
mov
dec
cmpsl
pushf
lds
repz
and
movsl
cld
stos
cmp
mov
sub
cs
mov
out
mov
adc
and
cmp
and
push
lock
mov
cmp
neg
mov
iret
mov
sbb
std
scas
add
push
fprem1
jle
outsb
jmp
sub
xor
jns
jb
or
sbb
jmp
xor
loope
sbb
push
int3
jo
jbe
les
adc
shlb
int3
mov
sbb
mov
or
cmp
rcrl
mov
ds
jle
std
dec
sti
out
loopne
lahf
jg,pn
sbb
repnz
shr
xchg
int
inc
les
push
push
je
inc
cld
add
inc
lret
out
lahf
mov
fcmovnb
inc
je
les
in
sbb
mov
or
popf
pop
gs
or
arpl
mov
mov
loopne
xor
push
push
lea
xchg
xor
push
dec
pop
je
mov
adc
jne
jmp
or
push
pop
data16
and
fildll
cmpsb
mov
ds
cmp
cmp
mov
bound
and
and
sahf
pop
jo
in
push
adc
rolb
jecxz
test
sbb
cmp
rcrb
out
in
test
mov
or
shlb
push
pcmpgtd
in
mov
mov
popf
adc
divb
mov
lret
sub
mov
cmp
xor
add
in
mov
xchg
jns
push
cmpsl
xchg
lcall
jmp
cmp
inc
add
or
push
mov
imul
mov
rorl
mov
jge
xor
cmp
data16
jb
xor
jns
cmc
add
mov
mov
outsb
lods
mov
stos
pop
sub
bound
rorb
popa
and
loopne
xchg
fdivrs
fmuls
lret
inc
xchg
xchg
icebp
mov
and
add
imul
push
sub
loop
inc
xchg
pusha
add
in
std
in
pop
cwtl
int3
in
mov
ret
inc
pusha
jecxz
out
jb
loopne
inc
inc
bound
push
leave
subb
nop
aad
jmp
jp
inc
ficoml
addr16
aam
and
inc
xor
dec
stos
filds
pop
lahf
sbb
mov
cmp
mov
dec
rclb
sub
sahf
push
je
loop
mov
pushf
add
sahf
sahf
jne
addr16
pop
mov
jle
pop
js
call
jnp
mov
popa
push
mov
xlat
cltd
jmp
setae
cmpsl
aad
sub
loopne
scas
inc
aaa
leave
js
sub
lret
outsl
aas
or
cmp
addb
push
jbe
or
outsb
and
cmp
push
andb
pop
orl
lcall
xor
mov
cld
mov
mov
adc
push
ror
push
pop
cli
fdivrp
shll
pushf
loopne
mov
sbbb
and
xchg
cs
sub
test
push
xchg
popf
mov
into
enter
dec
popa
pop
call
pop
scas
popa
sbb
shll
fsubl
and
arpl
sub
std
and
imul
mov
xchg
or
mov
shr
cld
popf
mov
pusha
lcall
inc
adc
ficoms
cmp
jge
popa
ss
repnz
dec
scas
enter
mov
and
cmpsb
cmp
dec
nop
rdpmc
push
mov
clc
jg
call
cs
xchg
cmp
sub
out
inc
adc
adc
lods
mov
or
add
inc
cltd
fwait
pop
sbb
movb
mov
sbb
inc
xchg
aaa
adc
inc
xor
fs
icebp
call
shll
int3
data16
mov
das
dec
cld
inc
mov
dec
push
add
pushf
imul
xchg
dec
push
mov
sub
jp,pn
mov
pop
aas
lahf
std
in
roll
ss
cltd
gs
outsb
mov
push
adc
or
js
mov
adc
lret
jge
in
pop
jne
fwait
mov
out
xlat
mov
fucomip
push
sahf
xchg
sbb
mov
divl
ret
jb
pop
xchg
pop
or
shl
or
shr
pop
orl
adc
mov
xor
pop
adc
gs
mov
push
push
cmp
pop
sbb
jecxz
shrb
mov
mov
adc
dec
xchg
dec
sub
loop
sbb
rolb
lret
and
imul
rorb
and
int
pop
mov
int
adc
out
mov
sub
repnz
imul
and
stos
aam
fidivl
sbb
out
mov
push
xor
shlb
lds
mov
daa
sub
int3
dec
adc
into
push
mov
dec
push
insb
add
or
mov
jp
repnz
inc
mov
fld
aam
in
dec
into
dec
push
cmp
mov
mov
mov
out
pop
mov
mov
mov
cmpsb
jo
push
sbb
sbb
inc
push
or
data16
ss
addr16
iret
fcomps
out
loop
ja
pop
fsubp
in
mov
rolb
scas
mov
push
dec
out
ljmp
xchg
ficompl
inc
pusha
leave
pop
mov
out
pop
inc
test
mov
iret
pop
cmp
outsl
sti
or
mov
push
data16
sub
jmp
fwait
mov
xchg
xor
cs
sarb
lods
jecxz
cmp
cmpsb
mov
data16
mov
inc
shll
int
jo
stos
lret
movb
je
testb
adc
and
dec
loope
dec
icebp
jnp
testl
xor
loope
pop
add
cli
fnstsw
mov
repz
bound
icebp
mov
inc
xchg
sub
lret
sbb
pop
inc
mov
sbb
iret
or
add
mov
xor
test
imulb
in
pop
movb
mov
test
mov
in
fsubrs
mov
sti
sbb
dec
fidivl
sbb
adc
dec
fs
jg
jae
or
loope
pop
stos
scas
cld
das
xorl
movntps
jb
into
add
xchg
aam
xchg
imul
and
clc
sub
addr16
les
lea
fs
movsl
mov
mov
hlt
imul
jno
push
sub
jp,pn
mov
cmp
test
lea
and
sbb
dec
xchg
add
cmp
sub
ljmp
clc
push
adc
orb
pop
rcrl
popa
lcall
imul
jmp
out
xchg
rcrl
clc
dec
and
outsl
pop
jmp
push
lea
push
sbb
lcall
aas
cwtl
je
jle
add
jl
les
fmul
xor
adc
mov
sbb
dec
int
out
sarl
in
xchg
insb
and
rclb
scas
and
pop
pop
test
xor
sub
testl
mov
or
jae
xchg
cmp
xor
pop
push
mov
addl
mov
mov
insb
mov
xlat
dec
sub
push
sbb
adc
sbb
in
ds
dec
inc
das
sub
into
in
ljmp
mov
and
adc
and
test
sbbl
mov
jle
add
sbb
call
push
pop
xor
adc
push
mov
inc
pop
xchg
add
mov
lods
jmp
repz
pop
sbb
fmull
xchg
push
repz
adc
mov
mov
mov
std
xchg
mov
icebp
and
mov
xor
mov
out
popl
xor
sub
sahf
sbb
jp
dec
add
cs
mov
adc
popf
sti
sbb
xorl
aaa
push
dec
lcall
adc
cmpsb
pop
xchg
mov
das
jp
in
subb
aam
adc
hlt
vpshaw
ljmp
mov
mov
sub
pop
adc
cltd
mov
dec
js
mov
pop
shlb
mov
stos
xor
and
xchg
add
fadds
mov
inc
rolb
pop
and
nop
cltd
sbbb
and
fs
pop
pop
sbb
mov
idiv
inc
cmpsb
mov
mov
outsb
jp
loopne
xor
popa
sub
fdivrl
jae
xor
dec
mov
js
fs
cmpsb
mov
pop
cmp
push
les
sbb
ret
adc
int3
add
insl
les
daa
xchg
jg
inc
push
addr16
fildll
inc
jae
add
push
pop
push
and
out
out
xor
mov
arpl
movb
mov
fwait
mov
clc
shl
add
mov
sbb
fs
ficomps
mov
pop
mov
shlb
pusha
pusha
fwait
mov
cmp
jo
mov
xchg
mov
push
loop
enter
outsb
jp
aam
cmpsb
jno
jge
nop
outsb
sbb
or
mov
ja
adc
dec
mov
adc
mov
inc
mov
and
mov
sbb
mov
cmp
test
mov
inc
or
or
aad
fistpl
data16
or
dec
lea
xor
cmc
sti
dec
jbe
push
popf
stos
pop
xchg
mov
or
cmpsl
movntq
and
mov
pop
call
int3
dec
fstp
cmp
divb
lods
arpl
sbb
add
xchg
pop
imul
aad
push
mov
push
loope
cmp
cmc
mov
out
sti
push
dec
subb
les
pop
adc
fdivrs
enter
dec
xchg
aaa
jle
add
mull
sub
mov
aas
jo
out
jns
fcomps
gs
sub
int3
pusha
add
jno
popa
jle
addb
add
or
cmpsl
in
mov
test
inc
push
lret
mov
in
and
pop
mov
stos
push
jb
cmp
sbbb
hlt
loopne
jecxz
adc
sar
sbb
in
outsb
inc
cmp
pusha
imul
pop
dec
or
mov
sub
imul
in
test
ficompl
and
sub
les
sbb
js
imul
cwtl
ljmp
and
outsl
pushf
mov
mov
out
and
dec
pop
xlat
mov
call
cmpsl
movsb
je
or
adc
jb
cwtl
pop
rcll
xchg
jns
mov
ficompl
xchg
xor
popa
movsl
sbb
jp
fs
sub
mov
rcll
inc
mov
imul
add
and
lret
adc
cwtl
inc
lahf
dec
das
shlb
cmpsl
stos
lods
mov
fwait
mov
dec
je
mov
push
push
jnp
mov
xchg
add
insl
lret
loopne
iret
movsb
pop
add
pop
daa
in
rorb
lock
clc
push
lds
cmp
ja
lahf
and
inc
jae
hlt
mov
ja
imul
cli
pop
lret
push
xchg
jle
pusha
mov
xor
int3
cmp
in
xchg
gs
and
cmp
popf
insl
jbe
jecxz
jne
cmp
popf
mov
mov
mov
arpl
jecxz
lret
add
call
mov
jo
push
icebp
pop
add
sub
sbb
in
mov
pushf
push
cmp
cmp
pxor
test
sbbl
mov
adc
sub
repnz
fs
mov
sahf
inc
pop
movsl
imul
cld
jmp
repz
pop
in
loopne
push
mov
movsb
sahf
insb
cld
cmp
int3
cmp
in
adcl
mov
sub
sub
dec
mov
mov
xchg
sub
pop
push
scas
fs
test
sub
insb
or
out
idiv
fcomp
jl
repz
and
push
fistl
pop
ljmp
mov
mov
js
and
jmp
in
js
and
adc
scas
mov
mov
leave
dec
inc
jb
cmp
icebp
in
or
insb
lods
loop
jle
std
dec
dec
and
cmp
in
out
xchg
ret
aad
cwtl
xchg
mov
add
aaa
mov
add
nopl
mov
imul
aad
jg
mov
shl
add
xchg
arpl
mov
inc
pusha
rclb
mov
adc
into
sub
cmp
dec
out
sbb
push
repnz
mov
test
dec
push
and
mov
lock
add
out
and
and
popa
movsb
xor
and
popf
cli
movsb
insl
and
add
pusha
lock
mov
cmp
sub
pop
shll
dec
ficomps
or
dec
add
cmp
cmc
imul
push
outsl
pop
lss
mov
unpcklps
clc
fdivrl
pop
movsl
ja
iret
lods
lods
cmp
daa
push
pop
pop
lock
dec
jg
test
fsqrt
cwtl
lods
sbb
es
cmp
xor
dec
push
lds
out
loope
mov
mov
jle
data16
mov
ret
in
xchg
std
in
sub
jnp
jb
in
outsb
inc
mov
sub
stos
mov
and
ja
pop
push
ffree
sbb
pusha
mov
testl
stos
fwait
pop
xor
mov
xor
jno
push
mov
xchg
push
adc
cmpl
push
lcall
repz
inc
roll
cmp
hlt
adc
mov
dec
or
push
sbb
or
test
mov
je
lds
jmp
hlt
out
pop
pop
xchg
xchg
or
lahf
jno
fnstsw
pop
adc
mov
xchg
pop
out
jl
hlt
loop
inc
aaa
mov
sbb
shl
pop
mov
jge
jle
pop
dec
pop
hlt
movsb
ja
out
or
lahf
adc
bsf
repnz
or
outsb
mov
mov
iret
inc
movsb
addr16
incl
push
lahf
jns
lds
sub
xor
and
scas
mov
jne
daa
popa
shll
mov
cmpsb
jge
pop
push
addb
mov
je
fwait
cs
cltd
mov
adc
inc
sti
out
test
ja
pusha
fnstsw
popf
add
shll
rcrb
jp
nop
jp
rol
jp
sub
stos
cmpsl
or
shll
jg
pop
push
push
adc
dec
jno
imul
jb
mov
test
push
mov
call
cmp
test
adc
add
addr16
lock
movsb
add
xlat
jo
dec
iret
faddl
or
jl
sti
push
inc
sub
push
pushf
sbb
test
lcall
adcb
mov
sub
mov
pop
mov
test
idivl
sub
js
jl
mov
loop
daa
loopne
push
push
mov
jl
cs
in
mov
sbb
xchg
and
pop
push
mov
int3
jbe
movsl
mov
idivb
add
xchg
cwtl
push
aas
mov
add
pushf
inc
lods
mov
nop
push
adc
inc
push
fldt
scas
xor
sub
aas
aad
sbb
mov
aas
pop
add
rorl
push
insb
or
jbe
pop
popf
xchg
bound
rcrl
imul
js
cmp
addr16
fisttpll
fbstp
movsl
fadd
push
xchg
lcall
pop
mov
ja
sbb
mov
mov
orb
jbe
push
ja
lcall
outsl
movsb
pop
add
jbe
jno
int3
mov
stos
and
add
std
mov
adc
sbb
outsb
lock
fistpll
in
and
ja
test
sti
and
bound
loope
into
test
adc
pop
lea
lock
subl
mov
mov
pop
adc
les
add
sti
sti
fimuls
popa
in
out
inc
insb
js
popa
adc
or
mov
movsl
mov
jmp
or
sbb
lret
cmp
xchg
outsl
add
mov
inc
lds
movsb
xor
lahf
addr16
imul
std
mov
push
data16
mov
xor
jecxz
cli
sub
ss
aas
lods
in
mov
out
les
shl
pushf
add
pushf
mov
fs
push
lods
inc
dec
sub
out
fnsave
inc
cli
pop
shll
fnstsw
bnd
mov
sbb
pop
inc
or
mov
gs
clc
sti
ljmp
inc
push
fwait
mov
stc
push
pop
cmp
cltd
leave
rorl
jae
fsubrs
insb
test
pop
fs
aaa
das
cmp
push
lea
into
les
test
inc
jge
xchg
gs
int3
shlb
cmp
xchg
das
les
push
xor
out
mov
lds
jg
cmp
movsb
lds
and
stos
std
pop
sub
xor
xchg
adc
xchg
cld
and
push
nop
pop
neg
adc
xchg
push
or
cmp
data16
jbe
inc
mov
sbb
and
fidivrs
cmp
and
cltd
rol
dec
push
pop
fnstenv
lea
ret
aad
mov
daa
out
fwait
adc
cmp
fsubr
iret
pop
mov
test
jb
xchg
mov
insb
fnstcw
inc
imul
mov
jmp
jl
xor
cmp
addr16
pop
scas
sahf
mov
mov
movsb
stos
dec
test
mov
imulb
cmp
fdivl
hlt
adc
shll
sbb
push
pushf
out
sbb
stc
imul
xchg
mov
cs
sub
cmp
testb
mov
cmp
movsl
dec
nop
bswap
ljmp
sub
test
mov
lcall
xor
jo
fstpt
inc
fwait
sub
mov
xor
or
sbb
mov
and
mov
ret
insl
fisubs
ret
imul
sbb
pop
adc
or
mov
or
inc
or
movsl
or
mov
add
push
xor
setno
cs
prefetchwt1
pop
mov
mov
push
xchg
data16
jmp
scas
or
aas
xor
cmp
add
xor
ret
inc
lods
out
outsb
ss
sbb
xchg
cltd
loop
fwait
in
pop
scas
push
xchg
cmpl
test
push
push
sbb
and
repz
add
sub
pop
xchg
shl
cmc
inc
dec
in
stos
idiv
out
int
and
aas
dec
push
push
test
cmp
pushf
mov
jge
orb
in
sbb
divb
stos
cli
adc
fimull
movsb
test
repz
adc
aad
cmp
pop
ds
fdivr
jae
es
push
fwait
in
ljmp
mov
xor
int3
xor
gs
inc
mov
xlat
pop
push
aaa
les
mov
lret
enter
pop
arpl
insl
mov
and
jae
cmc
mov
mov
sbb
fisubs
aam
subl
lds
xor
enter
pop
jne
lret
jecxz
mov
or
mul
add
mov
sub
aaa
in
pop
adc
fucom
mov
insl
es
lahf
dec
jo
fsubr
fcoms
jno
addr16
push
repz
pop
push
fistpll
add
les
inc
sbb
jbe
adc
out
test
movsb
out
mov
mov
jg
cmpsb
mov
add
inc
or
es
sahf
mov
sahf
sub
js
xchg
fnstenv
mov
cld
out
iret
mov
je
dec
sub
outsb
pop
lahf
sub
andl
sub
mov
and
cwtl
movsl
and
xor
mov
xor
test
xor
int
out
in
scas
push
mov
lods
loop
aaa
add
mov
and
jmp
cmp
stos
or
ja
pop
pop
js
push
dec
fs
popf
add
fldenv
dec
lods
pop
imul
mov
jae
aas
cmpsl
out
cld
push
insb
or
mov
xchg
shl
dec
mov
cmp
out
lds
jae
cmc
add
imul
call
roll
test
push
xor
ret
enter
pcmpgtb
sbbl
cmp
jecxz
xor
in
flds
out
shl
or
jb
xchg
push
jl
sbbl
mov
and
cli
ds
ja
pop
out
leave
movsb
sbb
aam
or
lock
inc
popf
lods
or
jae
xchg
cmp
out
mov
sahf
add
popf
fcomps
sub
loop
daa
movsl
mull
enter
mull
lahf
inc
push
sub
adc
in
fs
and
mov
out
fstps
mov
push
adc
nop
test
and
cmp
xchg
js
xchg
loope
jns
cmp
cltd
out
subb
inc
sbb
js
gs
lret
scas
cltd
push
iret
mov
shlb
and
loopne
push
mov
ja
jns
pop
lahf
pop
movsb
nop
pop
adc
mov
push
popa
loope
fisubs
sbb
and
repz
out
lcall
push
mov
push
lods
call
mov
in
cmp
sub
outsl
mov
es
imul
inc
aaa
sti
and
mov
lcall
cs
sub
imul
push
test
pop
arpl
jns
mov
xchg
shrl
test
jne
mov
gs
lds
push
pop
mov
cwtl
iret
fadds
mov
pop
cmp
ret
dec
jecxz
push
loope
dec
fcmovnu
stc
jnp
or
lcall
inc
hlt
movsb
lods
cmp
xor
pop
pusha
lea
dec
out
xor
sbb
push
ss
push
cmp
lods
hlt
adcl
jl
and
hlt
pop
loop
mov
jecxz
inc
mov
pop
int3
into
xlat
repnz
inc
lock
sub
adc
pushw
add
jb
sub
call
xchg
push
mov
or
mov
leave
push
insl
pop
mov
test
xchg
cmp
popa
add
xor
scas
out
sub
cmpsl
pop
pop
stos
stos
cmp
data16
xchg
fcmovbe
loopne
dec
mov
push
mov
sub
pop
pop
pop
xor
sarl
mov
in
mov
dec
or
add
pop
mov
pop
or
dec
rorl
les
cmpsl
test
test
mov
inc
push
pop
popf
inc
scas
sub
inc
fisttpll
mov
mov
mov
sti
inc
cli
and
sahf
push
mov
jge
in
fs
popa
bound
js
repz
pop
fs
or
add
jg
adc
and
pushl
icebp
sub
loopne
xor
outsb
push
xor
pop
ja
push
scas
mov
sbb
push
aam
sbb
imul
inc
in
mov
cltd
inc
rcrb
pop
lcall
ljmp
mov
mov
jp
aam
jnp
shll
sbb
lds
lahf
mov
jp
mov
hlt
push
pop
ss
push
push
cmpsl
mov
mov
aad
sbb
push
mov
dec
xor
sub
in
std
xor
push
jp
xor
jb
imul
outsl
imul
dec
dec
add
fs
pusha
cmpsb
popa
lret
pop
push
push
lds
push
add
loopne
bound
xchg
stos
dec
lret
dec
jae
js
xchg
jp
sar
sub
sbb
jge
mov
iret
pop
ss
sub
cmpl
and
out
out
pop
int3
repz
subl
inc
or
jnp
dec
in
and
fs
sub
cmpsb
andl
mov
inc
inc
cmp
jp
mov
xchg
leave
push
xchg
gs
es
xchg
mov
mov
lret
lret
in
jns
das
mov
call
jecxz
leave
aas
push
inc
enter
rcrb
pop
and
push
fcomps
popf
mov
in
jbe
iret
es
or
mov
hlt
cmp
mov
push
rol
in
divb
xchg
cmc
dec
adc
add
mov
jecxz
pop
lock
dec
loopne
fsts
adc
shrl
jmp
push
or
and
das
push
add
and
es
sbb
jbe
mov
lcall
imul
cmc
mov
cmp
jg
test
dec
add
xor
mov
nop
push
out
mov
sti
sbbb
test
cmp
xchg
cmp
lods
out
inc
and
out
test
imul
pop
in
add
lock
test
and
clc
mov
inc
movsl
push
jl
idivl
add
stc
pop
fsubrl
les
mov
push
or
mov
jno
mov
dec
out
inc
lods
mov
mov
inc
xchg
mov
sbb
fistps
fldcw
pop
inc
scas
pop
sti
imull
nop
cwtl
ja
push
dec
cmpsb
dec
mov
xor
leave
leave
adc
mov
and
jno
fsubs
mov
test
jbe
mov
cltd
lret
xor
loope
enter
cmp
dec
in
mov
jne
add
xchg
mov
out
push
dec
loop
adc
int3
and
and
sahf
sub
mov
ss
sub
shlb
mov
pmaddwd
data16
mov
xor
inc
ss
adc
in
loopne
out
aad
neg
cmp
fsubrs
ja
adc
ret
data16
or
and
dec
cmp
mov
int3
call
mov
push
add
loopne
inc
lcall
scas
addb
int3
aad
mov
and
call
xor
std
test
pop
ret
xlat
and
repnz
inc
or
pop
pop
stos
ljmp
cld
imul
sbb
xor
icebp
inc
dec
xlat
lret
mov
mov
sti
insl
daa
inc
mov
mov
hlt
int
js
les
adc
pop
ja
sbb
and
xchg
or
and
outsl
push
icebp
rcrb
test
pop
jbe
mov
pop
enter
inc
mov
cmpsl
add
dec
lcall
xor
subb
mov
out
pop
cmpsl
ds
cmp
jne
cwtl
imul
pop
mov
gs
std
and
mov
test
and
mov
lcall
mov
das
push
aam
aam
outsl
insl
mov
sub
dec
dec
push
jnp
scas
gs
gs
and
gs
or
adc
mov
in
das
dec
sub
mov
sbb
xchg
lds
jnp
jmp
rep
cmp
out
or
push
or
adc
jmp
inc
jnp
add
movsb
dec
int
or
sub
lods
push
or
mov
addr16
push
push
jae
xor
sbb
ds
leave
out
mov
or
inc
pop
xchg
xchg
mov
jmp
xchg
jg
stos
inc
xor
lret
jg
out
js
int3
popf
push
xor
xor
mov
out
sbb
test
dec
mov
pusha
jecxz
jmp
mov
outsb
popa
sub
adc
inc
sarl
andb
add
sub
xchg
lock
dec
aam
mov
loope
push
mov
fdivrl
inc
xchg
xchg
test
imul
sarl
adc
sbb
jecxz
rcrb
test
jb
jge
andb
xchg
sbb
jle
insb
inc
push
out
sub
sbb
xchg
popf
enter
lret
movsl
popa
push
inc
sub
xchg
sbb
lcall
sub
aas
sbb
or
mov
xchg
xchg
add
xchg
lcall
sub
leave
leave
cmp
push
push
inc
add
jne
cmpsl
call
pop
and
jmp
pop
cltd
or
mov
mov
movsb
in
dec
mov
bound
jb
roll
sahf
mov
lds
jae
aas
repnz
sti
out
call
jnp
mov
in
dec
daa
jmp
xor
ja
outsl
mov
popf
pop
dec
lcall
mov
inc
or
push
push
clc
sahf
lahf
adc
out
mov
js
and
pop
mov
cltd
adc
test
rcl
int
cmc
scas
leave
sbb
movsl
dec
mov
mov
pop
fdivrs
pushl
xor
or
in
cli
xlat
jnp
lcall
push
mov
mov
mov
xlat
dec
sti
lret
xchg
inc
fwait
pop
fwait
dec
pop
ror
clc
jo
dec
sbb
clc
or
enter
push
mov
fisttps
ss
sahf
mov
push
int3
dec
mov
inc
std
mov
psrld
sbb
mov
mov
add
mov
shrb
or
add
lahf
pop
mov
push
sub
jnp
sub
imul
sbb
and
in
shrb
push
jle
iret
loope
jne
aas
mov
xor
mov
faddl
cmp
mov
pop
lret
push
mov
and
push
jne
sbb
mov
cmp
mov
pushf
push
cmp
sub
cld
inc
pop
in
scas
stos
push
xchg
push
mov
aaa
sub
mov
sbb
mov
and
xchg
xor
dec
ret
cltd
add
aas
cmc
jae
cmp
roll
sbb
repz
push
push
and
pop
mov
lods
xchg
hlt
inc
shlb
fimuls
subb
adc
daa
push
dec
lea
or
adc
pop
fisubs
ret
mov
sub
fisttps
out
test
mov
fiaddl
adc
mov
adc
adc
fsubrl
ss
movsl
or
adc
idivb
xor
jbe
pop
ficoms
pop
and
mov
test
or
push
and
mov
adc
sub
mov
or
movl
adc
cmp
popa
adc
mov
sti
fs
scas
and
imul
cli
push
popa
mov
fsubp
aad
adc
rcrw
popa
pop
adc
gs
fisubl
inc
cmp
stos
testl
orb
popf
mov
jmp
call
pop
push
or
cltd
pop
scas
mov
push
stos
rcrb
pop
lcall
cmp
fdivrl
inc
mov
addr16
outsl
jg
movsl
mov
push
pushf
pushl
sub
lcall
into
js
aas
push
shrb
js
mov
cmp
std
jne
daa
or
out
mov
clc
mov
icebp
mov
nop
fs
and
xchg
pop
xlat
inc
jno
loopne
push
pop
dec
lds
stc
cmpsb
cmc
lret
lahf
sahf
dec
movsl
pop
xor
add
cmc
mov
jb
inc
sub
cmp
test
es
mov
jnp
mov
pusha
rorb
scas
pop
sbb
ds
xchg
lcall
inc
dec
sbb
orb
jbe
mov
pop
gs
jo
adc
jl
mov
sub
je
movsl
or
push
lods
into
push
cmpl
loopne
push
add
jnp
mov
push
mov
fistl
inc
push
lret
nop
jbe
cltd
dec
push
sahf
cs
sub
ret
push
shrl
xchg
ret
outsb
lea
scas
fisttpll
xlat
sub
inc
loop
test
dec
stos
mov
dec
push
sbb
lds
mov
inc
enter
mov
out
test
xlat
dec
gs
sub
and
inc
mov
hlt
les
test
popfw
mov
outsb
movsl
mov
push
mov
and
scas
sub
stos
xchg
test
stos
lea
lret
dec
ja
es
call
mov
dec
je
mov
sbb
pop
jno
sub
pop
push
dec
mov
adc
lret
pop
das
idivb
or
add
cmp
push
lea
repnz
inc
and
stos
jnp
and
clc
mov
lcall
sbb
jecxz
mov
cmc
call
test
push
and
or
adc
arpl
jl
adc
lret
xlat
dec
adc
or
mov
add
inc
mov
push
movsb
inc
js
cmpsb
or
cmp
xchg
ret
sbb
jmp
push
sub
inc
mov
scas
loop
cmpsl
mov
or
mov
cmp
push
jae
adc
scas
inc
xchg
and
outsb
xchg
jne
ljmp
kmovb
sub
frstor
push
sbb
inc
cmp
rolb
aaa
lock
lods
xor
ja
insb
jae
loopne
dec
test
ljmp
dec
cmp
jbe
xor
pop
cmp
call
jl
mov
lods
jl
addr16
rep
adc
stos
dec
sbb
mov
arpl
insl
dec
mov
enter
ret
cmp
fsts
pop
mov
movsb
xchg
and
sarl
jnp
incb
pop
insb
cwtl
xchg
aam
and
fcoms
pop
pop
imul
push
xchg
cwtl
ljmp
mov
mov
aaa
push
xchg
push
mov
ret
dec
inc
cs
pop
outsb
les
inc
dec
dec
sub
sbb
sbb
xchg
lret
jecxz
stos
dec
add
insl
fs
out
pop
insl
cmp
icebp
xchg
xor
mov
push
stos
dec
jno
mov
ljmp
pop
xor
mov
sbb
cmpsb
fcomi
pop
cs
popf
leave
ja
aas
loope
idiv
adc
js
bound
mov
inc
jo
jnp
adcb
cmp
imul
push
push
or
jno
sbb
iret
push
sbb
rcrl
sub
push
es
inc
sbb
xchg
mov
aaa
mov
cld
cli
jnp
xchg
arpl
add
imul
inc
repz
ds
inc
sete
cltd
fsts
xchg
test
aaa
addr16
xor
push
or
jp
in
jne
cmp
pmaxsw
lock
jae
clc
daa
push
out
addr16
sbb
inc
popf
jecxz
mov
stos
movsb
adc
rcrb
xlat
or
cmp
fiaddl
fwait
insl
mov
xchg
cwtl
mov
xchg
adc
sub
pushf
loopne
inc
arpl
jge
jo
adc
stos
jle
xor
enter
push
mov
or
mov
fadds
sub
imul
outsl
mov
rcll
xor
adc
pop
mov
imull
inc
and
xor
imul
pop
push
or
push
mov
insb
leave
jmp
sbb
add
jmp
or
jle
cmpb
jl
push
dec
mov
add
and
xor
xchg
dec
std
dec
add
sub
sti
loope
pop
xchg
sub
ret
jae
lods
sub
mov
push
les
popf
arpl
enter
jae
sub
push
mov
sbb
jge
or
xchg
jmp
dec
in
sub
push
repnz
sarl
fldl
mov
rolb
cli
sahf
rclb
aas
push
sub
mov
ja
rorl
dec
lods
je
mov
pop
inc
mov
jbe
ja
xchg
push
jbe,pn
dec
xchg
mov
sahf
aam
or
int
inc
popf
lahf
mov
ljmp
andb
es
jmp
push
mov
lcall
and
jmp
fnop
xor
aaa
fs
push
wrmsr
fdivrp
push
inc
pop
pop
shll
icebp
stos
push
xlat
pop
xchg
adc
pop
lea
push
dec
or
rorb
dec
add
fcoms
sub
scas
out
cmp
rorl
mov
xor
out
inc
sahf
fadd
cmc
adc
dec
movl
xlat
es
jle
sbb
jb
je
testl
sbb
lods
jne
cmc
add
sbb
ret
lea
fdivl
repz
ret
inc
mov
in
je
lds
ret
and
rcrb
test
and
or
inc
dec
jbe
jge
lods
pop
adc
insb
xchg
lock
imulb
cmp
dec
arpl
out
insb
in
cmp
inc
push
loope
and
sbb
aam
mov
aas
dec
jne
xorb
fbld
jbe
aad
or
shr
add
ss
push
mov
add
in
sbb
ds
cli
sub
jp
lret
mov
cmp
cmp
adc
adc
loope
jo
push
pop
xor
dec
int3
mov
cmpsl
xchg
mov
das
dec
sbb
je
lea
orl
fimuls
movsl
ficoml
cmovnp
or
dec
pusha
or
and
mov
inc
jns
mov
mov
adc
push
jg
loopne
adc
sbbb
clc
xchg
in
pop
mov
cmp
jno
pop
or
xor
out
inc
into
push
fwait
and
dec
dec
out
push
shlb
sub
fcmovu
and
mov
push
fsts
sarb
insb
jae
test
ret
rcr
xor
das
mov
iret
pop
aad
repz
push
div
into
push
imulb
ret
xor
ss
xor
xchg
stc
sub
mov
xor
xchg
lea
jae
adc
mov
sahf
cld
mov
jle
pop
mov
pop
ret
adcl
popa
pusha
dec
inc
cmc
push
stos
int3
lock
inc
push
mov
aaa
dec
js
fcomip
lock
cs
sti
sbb
imul
in
pop
das
and
stc
xor
mov
xchg
jbe
gs
pop
addl
push
xchg
inc
adcb
dec
iret
call
lock
jmp
pop
push
aad
lcall
push
push
mov
or
jl
data16
leave
push
jae
add
jg
or
mov
js
and
js
loopne
pop
nop
push
fisttpl
pop
fldl
jns
xor
lods
sbb
sbb
rclb
mov
pop
out
xchg
popa
loope
sub
xor
xorb
xor
or
sbb
jp
pop
mov
rcll
push
shll
dec
xor
pop
test
push
test
mov
jnp
cs
mov
adc
xorb
push
jbe
pop
loope
inc
mull
into
pop
jbe
sbb
push
add
roll
xor
add
inc
or
mov
xchg
jno
inc
jbe
dec
decl
jne
sbb
pop
mov
xor
test
xchg
inc
call
mov
push
mov
inc
xchg
push
aaa
mov
push
out
jge
mov
lea
out
dec
incb
nop
jl
sub
pusha
jle
sub
xor
pop
stos
xchg
popw
jns
and
and
mov
xchg
jno
lahf
insl
inc
mov
and
aaa
mov
push
jmp
iret
pop
pop
pop
mov
mov
cmp
pop
xchg
repnz
xor
xlat
pop
fisttps
push
mov
mov
in
fsincos
pushf
cmc
mov
cltd
js
mov
add
push
in
and
and
lods
mov
rolb
jns
mov
divb
cmpsb
stos
ja
dec
xchg
faddl
cwtl
data16
iret
pusha
insl
xor
push
lods
pop
outsb
xor
push
out
es
xor
add
sbb
popa
push
lock
mov
lods
and
pop
mov
cwtl
movsl
add
pushl
mov
pop
gs
loope
popf
ja
pushf
and
sub
int
push
push
mov
in
and
mov
clc
xchg
fucomip
call
roll
jl
mov
xor
adc
scas
aaa
mov
inc
push
pop
mov
outsb
adc
jmp
push
mov
adc
test
pop
out
insb
mov
call
add
test
dec
pop
jge
pop
addr16
pusha
enter
aas
and
repnz
fwait
out
jnp
push
jns
adc
clc
jg
xor
jecxz
cmpsl
out
scas
jmp
sbb
mov
pop
cmp
push
jnp
mov
stos
xchg
mov
pop
inc
daa
outsl
inc
add
lret
jecxz
cli
fucom
stc
incb
into
testl
dec
loope
pop
scas
jl
inc
dec
and
mov
hlt
and
jg
and
scas
cmp
mov
inc
xor
dec
mov
filds
jle
push
add
mov
sahf
aas
jo
mov
pop
fs
or
pop
fcmovu
or
cmc
sbb
push
jle
mov
ret
in
cli
jmp
fiadds
inc
inc
out
in
add
popa
cmp
mov
pop
push
cmp
out
jl
inc
xchg
sar
mov
enter
fwait
xor
mov
fisubrs
xchg
or
mov
mov
loop
mov
in
fwait
mov
inc
dec
cmp
scas
lds
data16
jne
dec
mov
xchg
and
mov
aam
jae
mov
sub
lea
sbb
iret
cmpsl
lea
cmp
bnd
cltd
cmpsb
jecxz
jge
mov
stc
add
shll
jns
and
pop
out
dec
aaa
mov
daa
sbbb
je
pop
adc
adc
rorb
pusha
sbb
leave
mov
iret
into
sub
andb
mov
inc
js
ficoms
lahf
or
push
add
push
js
or
mov
mov
mov
mov
scas
jle
test
outsb
ss
mov
sbb
clc
rclb
push
out
pop
mov
jbe
xor
sarl
stc
lcall
cmp
xor
rcll
push
add
das
mov
leave
push
cs
inc
mov
shll
repz
aam
into
fsubrs
mov
pop
push
mov
jecxz
cmp
inc
sbb
ret
mov
fcom
and
and
pop
roll
xor
jnp
mov
xor
adc
hlt
sbb
hlt
lcall
shrb
dec
lock
adc
cmp
rorb
lds
jno
push
or
and
xchg
xchg
mov
mov
push
stos
jge
mov
xor
and
xor
pusha
in
loopne
aas
and
cltd
loope
mov
jns
es
xor
lret
in
xlat
adc
xor
jecxz
push
imul
jecxz
push
push
ljmp
imul
cmp
mov
or
imul
inc
cmp
pusha
mov
jle
cld
add
test
data16
mov
cld
xchg
sbb
and
ds
out
shll
xchg
mov
sbb
mov
leave
adc
push
repz
out
lods
fldenv
push
icebp
lahf
dec
das
es
leave
xchg
add
rorl
cmp
mov
fwait
jmp
add
mov
lahf
lds
mov
jbe
mov
out
sub
test
sbb
push
xchg
fs
ficomps
add
loop
stos
arpl
rclb
and
pop
in
and
fnsave
mov
xor
sub
cmp
xlat
enter
xchg
push
jo
inc
cmp
mov
mov
xchg
out
xchg
fs
fisubs
push
rclb
or
jle
fs
dec
pop
into
fcoml
push
mov
sub
lret
out
test
jle
aaa
push
add
fnstenv
and
lret
testb
mov
adc
xchg
jl
add
xor
xor
or
sub
mov
push
pop
imul
push
xchg
jl
pop
pop
sar
lret
pop
xor
pushf
orb
inc
pop
mov
push
inc
pop
call
int
fisubl
popa
mov
jae
mov
mov
cs
and
ret
std
push
dec
sbbl
cmc
cmp
mov
xchg
dec
fdivr
out
mov
mov
pop
xor
add
add
xor
pextrw
pop
repnz
mov
popa
std
movsl
lock
loop
mov
or
jb
and
loopne
jb
sub
roll
es
ror
outsl
push
or
lods
lods
cltd
idivl
lods
mov
xor
adc
jns
mov
cmpl
aam
fwait
sahf
mov
pop
outsb
pushf
insl
fstp
js
cmpsb
add
push
sub
mov
imul
xorl
insl
sbb
sub
sub
mov
jnp
mov
inc
pop
loope
mov
mov
mov
aam
add
mov
push
sarl
ss
cmp
adc
fisttps
fsubl
xchg
jge
sbb
js
inc
dec
fsubl
test
mov
xor
mov
cmp
imul
push
popa
inc
cs
sub
and
ret
push
pop
hlt
cmp
cmp
xchg
sbb
jns,pn
push
dec
shl
adc
fmul
lret
push
repz
mov
in
icebp
loope
out
rcrl
jge
scas
aas
fdivp
nop
add
scas
test
sbb
xchg
popl
sub
mov
push
adc
mov
je
or
add
adc
xchg
mov
out
and
xor
dec
jae
pop
out
cmp
or
cwtl
xchg
push
ja
adcb
jecxz
jbe
push
push
in
or
aas
shlb
rdpmc
sti
add
sub
fwait
lock
std
test
mov
cmpsl
fwait
std
cmp
push
flds
ss
sahf
rclb
into
inc
cmp
icebp
push
inc
jl
mov
in
push
push
je
es
out
push
addr16
popa
scas
dec
and
cmp
in
push
mov
dec
xor
sbb
lock
pop
sbb
pop
or
inc
sbb
cli
fists
dec
mov
push
out
inc
outsl
outsb
pop
and
pop
mov
cmp
addr16
jl
ret
sbb
in
push
xchg
lahf
movsb
or
in
pushf
addb
xchg
movsb
shlb
and
and
inc
rclb
adc
push
lahf
add
mov
ret
mov
or
lds
adc
push
adc
mov
mov
inc
ja
mov
xor
fwait
cmp
sub
add
out
dec
imul
mov
push
outsb
test
push
pusha
push
call
cmc
enter
int
dec
ds
popa
stc
loope
mov
jecxz
push
cmpl
pop
aam
hlt
push
call
cmp
dec
adc
lock
sbb
pushf
sbb
int
pop
push
cwtl
adc
push
pop
mov
pop
jg
jle
mov
std
xorb
sub
mov
mov
enter
xchg
ret
xor
leave
mov
subb
push
rcll
std
lea
mov
loop
stos
aas
stos
mov
mov
fmuls
sbb
add
mov
sbb
popf
into
addr16
lock
push
lock
or
inc
add
xchg
add
in
add
ss
add
lahf
hlt
mov
jmp
add
aas
mov
icebp
lret
push
xchg
xchg
add
lahf
mov
sti
imul
mov
xchg
pop
subb
xchg
sbb
mov
jae
shlb
dec
leave
stc
inc
out
std
mov
cwtl
cmp
out
stos
aad
mov
test
rolb
mov
dec
add
push
sub
or
mov
insl
outsb
aad
dec
shlb
repz
sub
hlt
cwtl
xor
jns
loop
push
xchg
mov
rcrb
out
cmc
push
decb
out
dec
int3
dec
sub
jecxz
mov
pop
cmovle
shlb
xchg
pop
loope
movzbl
cmp
sbb
dec
aas
movsb
inc
jb
jne
ja
rcll
mov
enter
fistpll
shrl
pusha
arpl
lods
pop
icebp
xchg
movsl
out
sbb
jnp
jno
cmpsl
and
inc
xchg
pop
int
jl
test
or
stc
in
test
cmc
pushf
xor
out
jecxz
enter
mov
insl
sub
out
push
std
xchg
test
mov
pushf
xchg
mov
jbe
outsl
jo
stos
jmp
insb
mov
xlat
add
inc
jecxz
mov
dec
imul
jne
fistpl
pushl
sub
out
and
inc
push
out
dec
sub
insl
cmp
fmuls
dec
int3
cmp
inc
push
add
xchg
ficoms
fstl
das
lods
into
jnp
and
adc
pushw
mov
xchg
mov
out
ret
sub
add
xchg
mov
ret
out
scas
xchg
mov
out
add
fisubl
cmpsl
popa
jne
in
pusha
cmpsb
daa
inc
inc
out
out
cli
jns
das
xor
aam
test
aas
push
pop
gs
mov
in
stc
sub
fiaddl
add
fistps
jmp
pop
push
push
jmp
push
test
lods
mov
xchg
cmp
jecxz
fwait
inc
cld
in
movsl
dec
std
xlat
insb
xor
ret
mov
push
ret
addr16
js
or
inc
and
xchg
add
pop
leave
or
xchg
ja
repnz
or
add
jmp
ret
es
repz
pop
cmpsb
pop
jp
mov
and
sti
mov
push
movsb
ret
sub
clc
cmp
lds
aam
daa
pushl
cmp
daa
mov
in
inc
mov
nop
ficompl
sbb
test
cmpsb
and
fiadds
dec
cmp
xor
sub
mov
fdivrs
mov
pop
in
push
fwait
addr16
std
andb
jns
jb
jo
xchg
std
xor
lea
out
xchg
sbb
cmp
xor
xchg
mov
jmp
jnp
mov
notb
std
mov
jne
inc
jge
leave
xchg
fs
sarl
test
cmp
addr16
lods
testb
jnp
add
xlat
imul
mov
nop
fisubl
movsl
mov
or
cmp
je
inc
push
lods
outsl
adc
push
in
lret
cltd
fwait
xchg
sbb
pop
and
stos
insb
or
pop
test
sub
sub
out
cmp
shll
push
fisubl
js
mov
movsb
inc
adc
mull
out
jle
jp
aaa
push
or
inc
mov
lret
pop
lahf
mov
push
inc
dec
sti
sbb
or
pop
fldcw
scas
mov
cmp
popf
cmp
inc
ss
clc
and
mov
adc
popa
adc
sub
jp
dec
adc
push
xchg
hlt
and
push
pop
push
aam
cmp
aaa
jno
sbb
aaa
fistl
jle
inc
int
push
test
rcrl
repz
and
mov
jle
sar
mov
cmp
movsl
test
inc
jp
add
stc
jecxz
int
or
inc
push
aam
fistl
sbb
lods
fdivl
in
or
insl
aaa
add
aam
lods
jo
cmp
lock
cmp
sbb
push
lahf
xchg
push
insb
shrl
xchg
jle
mov
mov
nop
dec
dec
test
cmpsb
add
imul
daa
jo
cmp
ret
cld
xorl
xor
lret
leave
sub
xchg
lret
icebp
xor
insb
lret
repnz
dec
shrb
movsl
mov
push
das
mov
dec
out
pusha
cmp
scas
lock
sub
sahf
push
leave
inc
add
pop
scas
mov
sahf
push
movsl
pop
test
sub
xor
mov
icebp
pop
test
or
sti
jg
sbb
add
in
push
test
xor
inc
push
inc
cmp
aam
and
insb
popf
test
gs
insl
sbb
inc
pop
push
lret
adc
dec
test
pushf
push
jecxz
adc
mov
ljmp
addb
pushf
es
sbb
cmp
jl
cmp
stos
mov
push
push
and
test
lcall
mov
sarb
mov
int3
sbb
flds
pop
sbb
in
jge,pn
mov
jns
jnp
cmpsl
cmpsb
xor
pop
dec
es
js
mov
inc
out
jecxz
and
and
addr16
cmpl
outsb
mov
and
xchg
add
stc
pop
imul
cwtl
in
jge
les
cli
ds
fistl
mov
push
inc
bound
sti
add
in
adc
ljmp
in
push
jns
cs
lcall
and
cld
stos
cmp
xchg
stc
in
mov
mov
jp
in
xor
popf
adc
mov
int3
cld
jp
or
subb
jmp
movsl
outsl
jo
mov
js
inc
xchg
mov
adc
aam
adc
pop
shlb
or
or
mov
imul
out
push
add
cmp
in
mov
jmp
hlt
or
mov
lods
aad
mov
pop
out
mov
cli
pop
mov
jb
or
push
xchg
xor
push
es
decl
mov
inc
push
sub
popf
fnstenv
clc
in
aas
in
and
sub
dec
stos
adc
and
dec
insl
insb
mov
mov
cmc
and
sahf
and
xor
call
clc
in
or
mov
push
push
cltd
rol
inc
dec
xor
loopne
sbb
pop
pop
in
data16
xor
je
cmp
repz
dec
xlat
stos
jg
push
jg
ljmp
stc
movsb
add
xchg
push
jecxz
pop
dec
imul
jno,pt
adc
xchg
xchg
mov
je
repnz
cli
std
or
movsb
adc
in
clc
scas
inc
or
mov
or
adc
and
imul
addr16
pop
imul
mov
das
or
jl
jnp
fucomp
rcll
add
divl
addr16
cmp
nop
lea
js
in
add
add
dec
popa
pop
leave
ja
adc
dec
mov
jne
jb
push
mov
inc
imul
rcll
lahf
movsb
cli
data16
push
stc
cld
jl
in
dec
push
movsl
jge
aam
adc
cmpsb
aam
fldl
mov
and
xchg
and
std
dec
sbb
lahf
cmp
lret
mov
lock
movsb
or
add
and
gs
xchg
push
rep
cld
mov
add
movsb
cmp
dec
adc
push
push
mov
es
testl
fisubrs
adc
bound
in
push
inc
mov
addr16
mov
mov
mov
loopne
pop
fdivrp
dec
pop
cs
cmp
int3
loopne
sbb
rcrl
inc
test
fnclex
inc
iret
xchg
jno
push
into
mov
cmp
out
push
push
mov
xlat
loope
clc
scas
jmp
fcmovb
in
ror
add
in
inc
int3
mov
pop
jb
cltd
mov
jbe
loopne
sbb
dec
dec
flds
out
and
inc
pusha
jge
aam
jge
sbb
push
dec
out
mov
ja
mov
inc
enter
adc
sbbl
outsl
pop
inc
pop
ret
adc
adc
sbb
mov
mov
sbb
push
into
push
mov
cmp
inc
cmpsb
fs
xor
pop
rorl
andb
push
outsl
sub
test
mov
js
popf
pop
lahf
cmp
fwait
mov
test
aaa
or
push
cmp
adcb
in
lahf
lahf
fistl
fsubs
iret
addr16
adc
hlt
or
dec
mov
jp
mov
es
push
cli
xchg
dec
leave
dec
push
sbb
dec
mov
pop
jo
mov
cmp
push
jle
lcall
xchg
jecxz
stos
test
rcrl
mov
adc
movsl
mov
adcb
out
movsl
dec
mov
add
imul
jo
arpl
dec
add
pushf
jg
pop
sub
mov
cmpsl
xor
pop
das
pop
and
ret
lods
cltd
sub
xor
icebp
cmp
filds
ror
add
scas
mov
nop
repz
das
pop
xchg
out
out
lret
lcall
fistpl
ret
rcll
sahf
xchg
dec
mov
fsubs
add
aam
xchg
mov
out
xchg
je
stc
and
jns
push
stos
adc
jae
inc
clc
push
cmp
dec
mov
adc
push
jb
pushf
or
imul
pop
loopne
mov
nop
xchg
and
sbb
dec
mov
mov
xchg
jb
int
stos
addr16
clc
xor
jbe
mov
cmp
fdivs
push
add
or
xor
addr16
inc
pop
mov
xchg
popf
mov
scas
mov
jns
data16
or
outsl
scas
push
mov
mov
lock
mov
or
dec
mov
add
push
pop
lods
ljmp
fiadds
arpl
fisubrs
nop
jne
jb
aaa
stc
sbbl
int
xlat
xor
or
mov
sbb
cmp
test
pusha
pop
and
adc
pop
loop
daa
fs
mov
mov
in
fldl
cli
or
gs
cmc
movsb
mulb
jae
insb
fwait
dec
xor
inc
mov
mov
pop
mov
mov
lcall
push
mov
mov
jmp
pop
aam
mov
adc
cmpsb
mov
mov
fists
lea
test
xchg
dec
in
and
xorl
popf
test
test
mov
clc
iret
inc
les
out
dec
xchg
pop
jecxz
ljmp
call
stos
orl
out
adc
pop
add
push
fnsave
cmp
inc
add
push
pushf
jne
into
jno
jg
movsl
xchg
sub
icebp
xchg
maxps
mov
cmpsl
dec
xchg
cmovs
sub
sub
mov
sub
sub
dec
and
push
cmp
adc
test
out
xchg
jno
test
xlat
sub
call
or
mov
lea
sub
dec
inc
rol
cmp
sbb
out
or
jmp
sbb
add
cmp
xchg
stos
xor
movl
pop
xchg
fsub
mov
cmp
mov
or
jns
inc
ret
ljmp
data16
loopne
push
dec
fneni(8087
mov
cmp
cmpsl
nop
mov
push
cld
fnstcw
sbb
enter
mov
scas
add
lret
sub
push
mov
jae
adc
and
pop
aas
add
or
push
xor
sbb
xchg
aas
gs
mov
push
mov
jne
rcll
repnz
and
rolb
jp
push
add
repz
idiv
outsl
outsb
dec
and
add
sub
mull
sub
mov
imul
mov
inc
and
cmp
mov
out
cmc
lcall
mov
imul
mov
sub
push
mov
push
inc
cmp
cli
mov
xor
shll
fnsave
test
mov
fcmovnbe
sbb
inc
mov
jmp
andb
insb
sbb
cmovge
jge
cmp
addl
stos
mov
lea
or
pushf
imul
cmc
int3
les
mov
xchg
fsts
adc
push
stos
outsb
pop
mov
sub
xchg
mov
jecxz
add
push
rcrb
push
std
pushf
xor
jp
mov
ljmp
inc
arpl
mov
cmp
sbb
xchg
shrl
test
cmp
xlat
cmp
cmp
std
sbbb
imull
scas
ret
adc
xchg
sub
pop
scas
dec
retw
fs
push
sub
mov
sub
push
add
push
pop
stc
fwait
xor
pushf
fs
sti
mov
inc
mov
mov
addr16
adc
aaa
jge
add
insl
sti
jl
jecxz
fmuls
nop
out
shrb
movsb
xchg
rcrl
and
dec
repz
imul
ret
pop
addb
enter
sub
push
jns
mov
jae
mov
stos
push
dec
pushf
xchg
add
or
or
and
and
dec
push
loope
test
addl
adc
aas
insb
xor
mov
mov
jae
inc
push
sbb
adc
jno
cmp
aas
jns
incl
imul
xchg
xchg
fs
clc
jl
push
loopne
lock
jae
adc
call
sbb
cltd
fwait
add
in
push
int
notb
and
fdivp
push
cwtl
jb
fwait
jne
and
test
inc
cmp
mov
addl
cmp
jo
fadds
pop
mov
pop
das
fnstsw
sbb
jne
inc
inc
fdivp
pop
out
push
call
adc
mov
das
add
inc
enter
rorl
in
bswap
in
adc
jg
xor
dec
sub
push
mov
aam
pop
mov
mov
mov
je
pop
adc
pusha
mov
inc
dec
sub
iret
xchg
mov
xor
stc
inc
adc
inc
jno
push
pushf
fidivrs
or
push
ljmp
pop
cs
cli
sbb
sbb
pusha
cmp
mov
test
fcmovnu
in
cmpsb
and
rcll
shrb
fwait
jmp
cmp
je
pop
ja
adc
scas
xor
mov
cmp
in
test
cmp
bound
inc
sbb
outsl
outsb
adc
loope
aaa
das
lret
xor
push
fdivrl
xchg
clc
mov
xor
je
xor
xor
cmp
lret
sub
scas
out
pop
icebp
xchg
and
or
inc
fstps
loope
popa
aad
jb
xchg
outsb
inc
movsb
push
andb
and
and
cs
dec
dec
int3
cmp
jae
push
les
jbe
or
adc
stos
jo
sub
and
cltd
sbb
out
loop
lock
daa
repnz
jl
jb
fwait
dec
out
jne
lock
fistps
mov
push
add
adc
mov
jg
aad
and
stos
lds
push
fimuls
jb
mov
loop
pop
inc
jne
xchg
clc
addl
and
xchg
fs
imul
scas
xor
or
mov
xor
push
adc
mov
pop
push
lds
cmc
ret
idivl
dec
fcomps
fwait
sahf
push
les
and
outsl
imulb
addr16
test
in
popf
iret
xor
mov
add
push
add
cmp
test
mov
shl
mov
mov
xor
or
mov
sbb
jae
cmp
stos
push
in
mov
ret
mov
movsl
lret
adc
idiv
xchg
lret
cwtl
add
push
clc
sbb
fcomps
push
mov
xchg
mov
movsl
inc
js
or
test
out
test
mov
add
mov
jo,pt
xor
push
sub
inc
adc
cli
xchg
jne
mov
lea
xchg
test
test
xchg
jecxz
nop
out
mov
inc
int3
mov
pop
lods
out
cmp
push
pop
push
js
je
nop
fbstp
sbbb
sbb
adc
adc
jno
lock
das
mov
cmp
test
jle
mov
lret
jge
sub
call
add
stc
inc
std
push
ret
fcomi
imul
mov
bnd
fimuls
mov
jecxz
jp
cmp
mov
cmp
pop
and
cli
stos
ja
insl
xchg
adc
adc
ficomps
mov
jmp
outsb
iret
xchg
mov
or
xor
jno
push
fistpl
dec
jae
xchg
pop
test
dec
sub
jns
and
sbb
mov
imul
mov
dec
or
push
imul
and
fwait
jp
int
popa
aam
movsl
les
les
enter
cmp
xchg
fisttps
cmpsl
pop
cld
dec
jns
loopne
xchg
cld
push
mov
jne
sub
cmp
push
xchg
inc
test
mov
nop
pop
fmuls
ficoml
adc
cli
test
mulb
ljmp
fcomps
shlb
js
and
call
ja
sub
lds
add
sbb
mov
out
add
xor
add
jg
lods
xor
push
add
mov
mov
jb
scas
push
inc
cmpsl
ljmp
enter
in
jp
addr16
adc
add
jp
mov
cmp
sti
leave
idivb
lea
and
dec
fdivl
mov
movsb
mov
notl
inc
lods
cmp
push
mov
sbb
and
xchg
and
xchg
sarl
lahf
inc
mov
adc
inc
loope
andl
test
test
mov
sbb
js
loopne
lea
sar
into
mov
mov
push
xor
or
aas
jmp
adc
loop
dec
loope
push
dec
pop
mov
sub
sbb
or
ds
bound
mov
rcrl
cmpsb
ljmp
jle
or
sbb
add
jbe
aad
and
aam
insl
push
add
mov
int3
in
repz
pop
inc
test
sub
lcall
cmp
add
or
das
xchg
xchg
jo
mov
inc
push
outsl
mov
fisubrs
aaa
mov
pop
xor
leave
cmp
insl
and
mov
jo
pop
jmp
push
icebp
mov
pop
mov
imul
and
jne
fs
xlat
sbbb
cmp
pop
mov
cmp
mov
mov
ror
adc
cmp
mov
xchg
inc
imul
outsl
scas
cmp
cmc
loop
adc
movsl
insb
push
gs
xor
ja
xor
jbe
inc
mov
mov
incl
mov
mull
inc
and
mov
scas
mov
jae
jae
jl
test
test
sbb
push
stc
out
jecxz
and
popf
xchg
push
jbe
cmp
inc
icebp
es
mov
mov
sub
je
out
test
in
sbb
int
mov
data16
bound
xor
inc
or
js
stc
jnp
fiadds
repnz
jg
into
inc
loopne
outsb
out
int3
lea
adc
or
imul
xchg
nop
aaa
decb
sub
push
daa
stos
sti
xor
nop
mov
mov
ja
int3
jnp
sbb
outsl
bound
aad
push
leave
out
push
xchg
aam
adc
repz
adc
cwtl
jge
ds
test
mov
aam
mov
dec
jle
mov
lcall
mov
testb
and
mov
out
jp
cmp
ds
add
pop
lcall
pop
test
das
xor
in
push
dec
push
mov
fnclex
push
fildll
out
filds
imul
scas
into
test
mov
jno
ja
out
add
sbb
nop
or
fwait
sahf
or
jmp
sub
pop
xchg
stos
outsb
mov
movsl
lods
pusha
lcall
add
mov
inc
jmp
xor
mov
ljmp
cmp
fnstcw
jmp
dec
and
xorl
cmp
out
mov
mov
and
fs
cmc
inc
sbb
mov
testl
xchg
loopne
mov
adc
xchg
mov
lock
push
dec
jne
loop
dec
mov
sub
push
js
add
lret
xchg
add
jl
iret
xchg
dec
or
sbb
jle
xchg
mov
inc
cmpb
xor
cmpsb
cwtl
dec
mov
lea
sub
out
pop
jmp
aaa
pop
xor
dec
jns
sub
jge
idivb
push
lahf
inc
outsl
mov
jg
mov
sbbl
push
fimull
stos
aad
or
xlat
dec
sti
push
repz
ja
lock
sub
negb
ljmp
jno
jae
sbb
arpl
lds
sbb
pop
sub
add
and
lea
sarl
nop
and
fldl
jp
pop
and
sub
sar
inc
push
insb
test
jl
insb
mov
cmpsl
ret
repnz
mov
lcall
ljmp
cmp
adc
mov
scas
sub
jbe
negb
repnz
mov
fcomp
xchg
mov
call
xor
mov
stos
aaa
jno
outsb
cmp
jg
mov
sahf
ds
in
mov
ds
fidivl
jg
sub
dec
jmp
xchg
lret
outsl
nop
leave
dec
sbb
lcall
dec
test
pop
inc
aas
add
pop
shll
das
std
shlb
adc
push
and
add
lds
jb
xchg
add
lds
push
jb
cmp
imul
notl
lods
jecxz
lods
lea
adc
sub
pusha
imul
push
aad
faddp
adc
test
mov
or
push
xchg
in
stos
sbb
jno
sbb
inc
jbe
cs
push
sbb
nop
or
out
push
xchg
fistpl
lahf
or
lods
cld
mov
repz
xchg
loope
jb
adc
aas
gs
repz
fisubl
ja
test
fisttpl
xchg
movb
flds
dec
cmp
or
repnz
xchg
cmp
sti
jle
repnz
lret
mov
mov
ja
lret
mov
xchg
loope
negb
xor
mov
mov
fwait
loop
mov
xchg
adc
sub
ficoms
fists
ffree
lret
imul
pop
mov
jo
jnp
dec
and
loope
in
jecxz
lret
push
fstpl
es
imul
lahf
xchg
xor
sub
mov
adc
test
in
push
lret
test
insl
call
repz
dec
aad
es
xchg
fldt
add
call
andl
or
hlt
push
mov
mov
and
cmc
in
push
mov
andb
int3
cltd
and
inc
nop
mov
sub
cmp
sub
xlat
push
shlb
inc
mov
add
rclb
mov
loopne
imul
xchg
in
and
pushf
jmp
jnp
lahf
jb
xchg
lret
dec
iret
cmp
cli
leave
add
sbb
mov
add
in
and
icebp
in
subb
mov
mov
push
mov
push
sbb
aam
mov
jecxz
add
mov
into
ss
lea
adc
movsl
popa
sbb
xlat
dec
je
inc
sahf
add
loopne
in
pop
pop
aad
or
adc
negb
loope
lcall
in
int3
pop
mov
in
xchg
sti
jmp
jbe
dec
pusha
lret
cmp
rclb
and
adcl
gs
stos
dec
iret
pop
push
cmpsl
sbb
xchg
mov
loopne
ja
mov
les
movsl
jmp
out
imul
mov
mov
xchg
sub
call
std
or
pop
jle
or
pop
scas
xchg
lods
in
push
shll
in
xor
xchg
pop
negw
popa
sbbl
es
pop
scas
stc
add
pop
add
iret
aas
aaa
xchg
jae
lcall
pop
inc
repz
ljmp
pop
test
sub
cmp
pusha
sti
push
iret
aaa
xor
dec
fucom
notl
push
test
call
loop
mov
pusha
mov
mov
adc
and
cmp
cmp
pop
lds
add
js
sbb
shl
mov
mov
in
push
pop
sbb
xchg
cmc
mov
inc
pop
rcrb
or
and
push
ss
xchg
rol
push
cmpsb
xchg
ljmp
jg
ds
into
xor
pop
push
pop
movsl
sarb
stc
xchg
push
call
mov
cmp
jg
and
fsubr
xchg
adc
lret
inc
mov
out
pop
add
aad
pop
push
xchg
dec
push
pop
lcall
or
and
sub
shlb
mov
movq
add
add
and
pop
cmp
jecxz
xchg
or
xor
cmp
fstps
jecxz
aam
pop
lods
dec
mov
jae
mov
mov
pop
sub
test
and
je
mov
stos
popf
test
mov
fs
and
dec
jb
jns
pop
jmp
je
and
lea
sbb
lret
inc
gs
sbbb
mov
lahf
adc
jae
push
push
and
dec
ret
mov
jle
push
mov
push
gs
pop
pop
popf
lock
xor
test
mov
sub
pop
xor
dec
push
aad
push
sbb
rol
jge
sbb
xorb
xchg
cltd
xlat
mov
xor
ljmp
cmp
aaa
xchg
xor
fnsave
es
roll
stos
pop
sub
dec
sub
je
and
cli
gs
mov
leave
in
ja
jg
mov
bound
in
sub
pop
movsb
sbb
sub
push
fs
dec
in
cs
adc
sbb
jmp
aad
dec
cmpsl
dec
out
xchg
test
lea
fdivl
jo
mov
nop
sti
fldl
add
jns
aad
fidivs
inc
push
mov
jl
push
add
scas
adc
mov
pop
xchg
mov
or
fisubl
popa
dec
mov
outsb
popf
lods
lock
mov
and
push
aas
add
mov
pop
xchg
and
push
sbb
mov
sbb
call
adc
mov
jge
je
outsl
sbb
jno
inc
clc
and
xchg
shlb
xor
adc
stos
add
mov
fcmovu
dec
std
add
out
add
std
mov
std
or
loop
iret
pushl
ljmp
cmp
frstor
outsl
cmpsl
mov
sub
mov
cs
inc
aam
data16
push
inc
and
dec
gs
hlt
inc
push
mov
fwait
je
loop
in
adc
dec
pop
aas
stos
popf
fildll
add
inc
js
lret
out
inc
sub
cmp
add
or
out
add
or
in
ljmp
mov
mov
mov
sub
pop
xchg
jecxz
or
inc
in
adc
ss
aaa
push
push
sub
jbe
stc
xor
xor
mov
sbb
lahf
mov
movl
les
movsl
stos
les
push
data16
repz
jge
or
movsb
rcrl
aas
test
push
push
mov
das
fcoms
jg
subl
push
adc
int3
push
and
sahf
lea
insb
adc
mov
adc
sbb
mov
mov
dec
in
div
inc
mov
movsb
sbb
lods
popl
adcl
pop
mov
insw
push
cmp
push
sbb
pop
ljmp
scas
adc
cmp
or
pop
jl
xor
ja
fisttps
pop
add
mov
das
mov
mov
call
bound
jo
sub
outsl
mov
mov
sbb
fnstenv
adc
xchg
fcoml
popa
js
shrl
xchg
cmpsb
xchg
repnz
lret
add
jmp
xlat
mov
js
pop
push
insb
sahf
pop
adc
xchg
into
adc
push
inc
bound
pop
inc
daa
push
pop
out
cmpsl
push
add
je
jl
fisubrl
xchg
in
mov
pop
sti
outsl
jge
in
pushf
xor
push
xchg
jne
mov
mov
lret
and
mov
mov
and
add
insl
movsb
push
add
fsubrs
adc
outsl
fcomi
xchg
sub
aad
adc
lahf
mov
push
mov
ds
popf
pop
fcmovnb
and
test
loop
pusha
shll
or
adc
mov
mov
je
mov
test
mov
dec
and
and
mov
repz
mov
adc
orb
inc
jle
movsl
sub
dec
mov
loop
inc
sahf
inc
pop
pop
adc
add
sbbb
mov
push
dec
fbld
mov
je
mov
dec
ljmp
scas
inc
sub
add
cld
enter
and
sub
jmp
addl
xor
dec
popa
or
xor
out
mov
negb
xor
cltd
jae
js
popa
movsl
scas
dec
andl
adc
xchg
jno
adc
and
xchg
pop
inc
inc
call
or
inc
xor
inc
data16
fadds
idivl
das
stos
mov
cltd
shl
xor
fisttps
popa
test
je
fisttps
cmpsl
jge
mov
shlb
fsubl
or
mov
inc
inc
mov
push
mov
mov
das
das
ret
inc
mov
test
add
sbb
mov
push
testb
or
jno
sub
xor
arpl
scas
rorl
enter
mov
int3
iret
xor
outsl
cmpb
xor
jg
test
inc
add
mov
jecxz
ljmp
push
les
push
adc
in
pop
repz
jge
inc
ljmp
sub
repz
jle
leave
jne
jg
mov
sbb
fbstp
add
pop
and
or
xchg
push
lea
imul
xchg
in
out
xlat
cmpsl
push
lods
jge
pop
or
mov
pop
scas
xchg
dec
into
push
out
inc
jno
lret
push
push
sti
icebp
mov
pop
test
and
jecxz
popf
push
sti
imul
repnz
mov
push
repnz
sbb
xchg
shlb
and
popa
rolb
in
sarl
fstps
xor
jecxz
mov
les
push
aad
inc
sbb
cwtl
lahf
mov
xchg
jp
in
or
pop
inc
and
arpl
adc
das
pop
xchg
sbb
mov
fld
sub
cmpsb
data16
mov
jle
mov
aas
add
in
inc
push
xchg
jg
push
mov
xchg
es
ja
movsl
jle
mov
out
push
or
mov
pop
mov
fstpt
jp
pop
xor
adc
mov
push
mov
stos
subb
sbb
imul
adc
push
nop
add
fcmovnu
jle
loopne
out
fnsave
push
pop
push
push
pop
loop
negb
mov
push
popf
mov
pop
jae
sub
add
les
es
ror
gs
lea
sub
push
mov
test
jecxz
adc
in
or
push
test
push
inc
pop
out
lea
mov
sbb
test
mov
adc
nop
inc
mov
incl
sti
adc
mov
fisttpl
sub
dec
dec
fadds
cmp
and
cmc
pop
jnp
mov
icebp
mov
mov
shlb
mov
ret
sub
into
xchg
and
or
inc
inc
adc
outsb
scas
and
or
and
aaa
jp
pop
stos
jp
outsb
cmp
inc
std
aaa
mov
cld
popa
sub
xchg
jo
mov
daa
add
cmp
sbb
and
sub
jo
mov
pop
nop
or
sub
insb
icebp
lcall
nop
fcmovbe
inc
jg
mov
into
lret
scas
loopne
stos
lds
xchg
and
pop
and
repnz
jns,pn
loop
neg
pop
jo
jae
pop
jge
mov
sub
add
gs
lock
sbbl
inc
inc
bound
add
or
hlt
cmpsb
je
es
xchg
nop
xchg
int
sbb
mov
sbb
pushf
dec
jl
cli
repz
mov
je
movsl
cwtl
ja
mov
add
jno
cmp
data16
mov
add
sub
add
xor
push
ja
xor
jno
fstpl
mov
lahf
in
xor
jb
and
dec
icebp
cs
scas
cmpb
sbb
pusha
shlb
std
pop
cmpsl
jl
mov
lcall
dec
ljmp
cs
adc
add
int
dec
lcall
or
dec
pop
sub
insb
pop
mov
jle
ret
push
pop
push
fwait
sbb
cmpsb
xchg
mov
mov
jmp
in
and
imul
rol
mov
out
or
sub
mov
fsub
push
lret
mov
rorb
dec
push
gs
inc
dec
lahf
scas
xlat
imul
repz
xchg
xchg
sarl
mov
enter
int
icebp
fdivrs
in
or
pop
pop
jmp
cmpb
xchg
hlt
cld
jecxz
cli
add
or
decl
icebp
decb
stc
and
add
leave
jmp
cwtl
sub
xor
das
push
sbb
mov
xor
add
aad
pushf
xchg
xchg
in
mov
arpl
sub
xchg
pop
push
or
stos
mov
ds
imul
movsl
xor
pushf
pop
sbb
cmpsl
mov
sbb
movsb
pushf
aas
sbb
into
icebp
sbb
ljmp
jp
xor
xlat
pop
das
stos
xchg
cmp
js
popf
es
mov
jg
fimull
repz
xor
pusha
mov
addr16
jno
pop
xor
inc
dec
cmpsl
lock
inc
ds
inc
imull
xchg
pushf
jmp
xchg
sar
jmp
int3
mov
mov
xchg
outsl
cld
int3
jb
addr16
add
pop
jl
sbb
cmc
and
cmpsb
sbb
cmp
jb
cmpsb
pop
out
pop
or
fnstsw
mov
outsb
sub
cmp
ds
mov
sbb
pop
dec
rorb
lods
nop
sub
and
sub
mov
mov
fs
inc
cmp
mov
cmpsb
cmp
les
xchg
sub
int
add
mov
adc
fistpl
or
sahf
adc
jnp
lds
xor
push
inc
loopne
push
test
pushf
xchg
stc
lds
scas
outsl
addr16
jne
ljmp
push
inc
push
sti
pop
and
xchg
inc
cmp
fimull
mov
decl
mov
cs
cmp
dec
stos
push
xchg
push
add
jg
inc
lcall
mov
add
and
push
push
insb
and
sahf
cmp
idivb
and
out
xchg
mov
std
mov
das
adc
inc
dec
imul
inc
or
jmp
xor
int
sub
sbb
out
mov
femms
xchg
pop
out
jle
fwait
dec
or
pop
je
jne
lods
into
xchg
cmpb
pop
iret
les
sbb
push
inc
mov
imul
iret
dec
int
test
inc
movsb
dec
dec
xchg
shl
mov
cmpsb
in
aad
mov
lds
or
jle
ja
sbb
fbstp
fisubrl
add
pop
xor
jbe
je
int
cmp
push
bound
mov
out
aam
in
frstor
mov
mov
add
mov
iret
out
push
shlb
jbe
cs
pushf
pop
dec
cmp
arpl
push
mov
dec
push
and
xor
data16
les
pop
and
add
aas
mov
cmp
test
sub
push
mov
out
int3
test
cmc
into
xchg
xor
stos
fcmovnu
loop
push
push
or
mov
jmp
mov
jmp
aam
pop
and
lds
fnstenv
frstor
inc
cmpsb
push
fsts
jae
mov
inc
mov
fistps
or
out
xor
sbb
jg
and
sahf
xchg
pop
mov
fsubrl
sbb
lock
cmpsl
jno
mov
ficoml
mov
pop
test
aam
sbb
lods
aam
cltd
dec
pop
cli
aad
pop
mov
stos
mov
cmpb
loop
and
scas
mov
test
jne
fsub
mov
mov
rorb
xchg
es
push
inc
loope
pop
inc
push
push
lret
dec
enter
not
jb
jl
cmp
imul
add
shl
dec
add
mov
test
and
repnz
mov
fidivrs
out
cli
stos
mov
inc
dec
iret
mov
jle
repz
sbb
outsl
fsubrl
cs
rcr
fcomps
cmp
mov
pushf
and
push
and
or
movsb
mov
outsl
daa
pop
push
cmp
cmp
push
lcall
pop
and
cwtl
jbe
sbb
mov
push
mov
daa
dec
push
flds
cmp
xchg
sub
adc
fs
add
jb
xor
adc
sbb
lds
or
and
in
add
test
or
adc
int
pushf
les
and
cmp
add
inc
dec
sbb
push
in
cmpsl
inc
cmp
in
mov
sub
inc
flds
movsl
push
lret
jns
sub
adc
int3
les
mov
jle
sbb
pop
je
or
dec
jle
orl
and
pmullw
add
popa
xchg
insb
test
ret
aaa
mov
stc
xchg
scas
rcll
popa
aaa
push
add
sub
frndint
push
sahf
das
fnstsw
dec
lahf
stos
hlt
out
popf
xchg
adcb
xchg
test
pop
jno
repnz
xchg
sbb
mov
jno
xchg
add
push
mov
lcall
mov
mov
aas
push
in
cwtl
nop
xchg
mov
mov
fmull
inc
xlat
das
pushf
xchg
mov
dec
in
rcr
or
sub
mov
test
je
sbb
sub
adc
cmp
adc
rorb
loope
int3
sub
shl
xchg
and
js
xchg
loop
mov
clc
bound
mov
sub
or
pop
or
sbb
dec
outsb
cmp
mov
dec
test
push
lock
and
push
dec
ss
push
xor
pushl
loopne
ja
and
loop
loop
idivb
jno
stos
jge
adc
clc
stos
sbb
fdivs
movsb
sbb
mov
sub
test
js
jns
out
imul
or
mov
sbb
pop
out
or
fwait
pop
movsl
xor
pushf
or
and
aas
dec
lock
jnp
dec
ret
decb
insl
sbb
and
sbb
sub
test
outsl
sub
aaa
xor
cld
inc
jbe
les
sub
aad
shr
daa
daa
mov
cmovo
fdivrl
sbb
test
inc
sub
jge
jmp
sub
jmp
lods
ljmp
sbb
testb
sub
jne
adcb
clc
push
inc
repz
cmp
outsl
jbe
jecxz
lods
psignd
int3
dec
pop
cmpsb
in
out
inc
push
sbb
push
gs
pop
mov
mov
sub
sbbb
lret
inc
mov
popf
jne
arpl
movsb
pop
mov
out
popf
inc
dec
aam
jns
mov
dec
jge
cmpsb
push
gs
cmp
mov
lret
fs
cmpsl
loope
pop
push
sti
or
push
mov
cmp
into
xor
repnz
loope
daa
xchg
pop
inc
repz
sti
iret
pop
cmp
lods
add
pop
loope
ficompl
mov
xor
loop
sbb
test
inc
nop
jge
scas
mov
sub
out
xor
jecxz
dec
fs
popf
ss
mov
cmp
aam
int
jbe
jmp
push
mov
and
in
xor
cli
aaa
lock
dec
push
and
insl
push
pop
jb
add
enter
or
add
pusha
pusha
cmp
test
movsl
sbb
mov
popf
xchg
hlt
xor
mov
outsl
les
out
jno
sub
push
add
push
addr16
xor
popf
xor
add
push
test
push
stos
dec
lcall
rcll
stos
xchg
call
fs
popa
mov
push
lcall
dec
popf
pop
sub
dec
ljmp
ret
mov
loope
or
fcmovu
or
test
out
mov
pop
and
popf
sbb
xor
push
ret
std
arpl
pop
inc
adc
inc
data16
push
cmp
fs
hlt
lret
or
pop
or
lcall
insb
lret
loopne
cmpsb
push
dec
shlb
in
stos
adc
add
mov
push
fldt
outsb
mov
mov
aam
ret
sub
andb
dec
int
xchg
icebp
fisubrs
dec
xlat
xchg
jge
push
mov
fsubrp
hlt
pop
enter
mov
sbb
mov
fldenv
push
jle
sti
mov
dec
or
test
or
outsl
jnp
inc
sbb
or
sbb
sbb
push
jo
mov
mov
sti
pop
lock
rcr
xor
mov
stos
imul
xor
stos
fnstsw
subl
dec
mov
shrl
call
mov
ret
repnz
xchg
in
bound
out
jle
sbb
mov
sti
std
shrl
push
ja
dec
mov
push
pop
lret
loopne
or
imul
aas
sub
or
and
xor
xor
inc
mov
sbb
mov
xchg
lods
jg
orl
iret
shl
arpl
test
aad
inc
aam
cmp
fs
push
lods
adcl
pusha
pusha
ss
mov
es
daa
fmuls
sbb
jmp
loop
insl
xor
pop
scas
and
cmp
lahf
lea
cmp
sub
or
dec
shlb
xchg
notb
lods
lcall
inc
sbb
xorl
imul
push
push
jnp
xor
xchg
inc
popf
andb
in
cmp
pop
jge
jp
adc
push
and
mov
incb
sub
loopne
out
cmp
adc
ja
push
stc
dec
cli
into
imul
dec
push
mov
jno
and
cmpsb
add
scas
inc
leave
addr16
dec
mov
jecxz
into
repz
push
lods
shl
adc
mov
jae
nop
fstpt
adc
test
sbb
dec
cmp
test
nop
es
dec
xchg
outsb
lds
dec
aaa
fld
mov
sarb
jmp
lret
jp
mov
and
fdiv
leave
sub
mov
pop
gs
insl
loop
or
loope
loopne
mov
inc
lods
inc
and
stos
fiadds
int3
sbbb
jb
test
xchg
xor
cmpsb
scas
scas
push
daa
and
dec
mov
xlat
scas
adc
sbb
cmp
dec
jge
and
push
call
pop
xchg
ja
in
push
mov
call
popa
aam
xor
pop
fsts
cld
insl
jecxz
enter
into
stos
mov
mov
movsb
cs
into
xchg
and
push
or
mov
mov
adc
inc
push
gs
jmp
xchg
int
sub
negl
les
dec
push
pop
mov
jmp
je
sbb
pop
jae
pop
cmp
das
sub
mov
outsl
dec
sbb
test
cli
and
cmp
cltd
imul
sub
push
pop
sub
jge
inc
in
jge
mov
or
adc
pop
icebp
fcmovnb
push
jne
jo
subl
inc
mov
daa
push
inc
fisubrs
sbb
icebp
ret
jbe
out
sub
ret
sbb
push
jle
jg
jg
sbb
inc
mov
push
cmp
mov
pop
cltd
sub
dec
adc
int3
xor
push
lods
mov
and
pop
movsl
jmp
add
adc
movsb
mov
mov
mov
dec
ret
xor
jecxz
jnp
mov
scas
insl
add
shlb
fstps
daa
fsubs
out
lcall
sub
jl
repnz
cmc
iret
push
ja
jmp
hlt
shll
and
test
scas
adc
in
enter
push
and
inc
sbb
faddl
jecxz
ds
bound
push
in
sbb
mov
cmc
stos
and
push
mov
loop
mov
in
add
push
rorb
cmp
and
pop
frstor
pushl
mov
dec
xchg
es
ja
pop
imul
les
insb
stc
rsm
fnstenv
rorb
pop
inc
jle
bound
aad
or
inc
xor
jns
inc
inc
loope
pop
inc
pusha
dec
lahf
arpl
and
shll
pop
sub
call
xchg
sub
mov
test
fisubl
test
out
pop
std
aas
pop
out
pop
cld
test
loope
out
mov
inc
out
fs
mov
nop
cs
dec
dec
js
xor
pop
cmpsb
cmp
pop
jl
mov
pop
filds
outsl
or
xchg
push
mov
sub
pop
xor
into
push
mov
dec
ds
mov
test
call
mov
lret
mov
popf
cld
outsb
add
and
or
or
imul
sbb
std
rorl
sbb
and
movsl
fmul
cmc
cmp
ret
xor
cmp
cmp
and
inc
test
rcl
add
add
mull
sahf
and
inc
xchg
push
loop
imul
and
dec
out
lds
and
mov
cli
repnz
cwtl
inc
stos
out
loop
mov
ss
inc
mov
jo
lods
dec
add
incl
ret
push
jnp
repz
xor
lea
xchg
pop
fdiv
mov
pop
xchg
lret
in
mov
and
into
nop
mov
lcall
pop
lret
cmp
mov
jbe
mov
adc
mov
int
jl,pt
mov
cs
in
icebp
sbb
add
push
in
icebp
mov
pop
imul
shufps
imul
or
hlt
jmp
pop
aad
xor
imul
leave
cmpb
outsb
mov
repnz
popa
outsl
stos
xor
ja
xchg
sub
popf
pop
pop
jle
cmp
mov
xor
push
scas
call
sti
movsb
jg
outsl
mov
xor
xor
xor
aas
mov
adc
cmc
cmp
push
cwtl
jbe
ja
jae
fadd
pop
test
xor
fisubs
pop
push
pop
out
mov
dec
repnz
dec
adc
mov
and
xor
mov
hlt
push
mov
jo
adc
sahf
push
lret
inc
in
mov
push
adc
psllq
insl
aas
gs
and
rdpmc
or
inc
or
insl
dec
fs
out
loopne
xchg
push
movsl
iret
out
xchg
out
nop
add
push
fstl
inc
imul
pop
mov
sub
insb
jmp
dec
out
or
adc
icebp
pop
cmpsl
cmpl
jmp
adc
insb
test
ret
or
rcrb
pop
jns
cltd
jecxz
xchg
jno
cltd
mov
pop
pusha
pop
jecxz
adc
dec
pop
mov
loop
bound
cmp
mov
je
inc
pop
test
ds
mov
sub
pop
sbb
sbb
into
sub
mov
and
test
mov
push
or
out
push
cmpsl
cwtl
xchg
mov
xor
imul
push
push
sahf
jo
data16
sarb
mov
mov
imul
cmp
xor
lds
cmpsb
out
xchg
mov
lahf
dec
aam
lds
mov
and
dec
xorb
and
mov
inc
fidivrl
jnp
cmp
xorb
nop
out
in
and
mov
cmp
mov
mov
dec
pop
test
cli
adc
out
pop
out
lods
int
or
in
or
pop
sbb
jns
subb
dec
loope
dec
xchg
iret
daa
inc
xchg
incl
mov
mov
and
inc
xor
nop
testb
imul
rcrb
and
jo
shrb
sarb
cs
lahf
pop
xor
or
out
ds
mov
and
test
popf
scas
jle
pop
jg
cmpsl
xor
dec
aad
lea
push
add
jge
inc
stos
xchg
cmpsb
out
mov
addr16
nop
mov
and
inc
push
insb
test
sbb
pop
pushfw
shlb
sbb
mov
dec
add
pop
and
imul
sahf
jecxz
mov
sub
std
pushf
inc
mov
and
inc
inc
imul
mov
mov
xlat
mov
xchg
and
es
or
lahf
cmp
sub
dec
jle
adc
outsl
stos
jns
int
pop
in
add
or
ja
imul
jge
fimuls
into
mov
pop
inc
add
sbbl
sub
push
push
xor
adc
jl
mov
and
push
stc
sub
cmp
lds
inc
or
outsl
push
std
and
fbld
leave
mov
rcl
mov
cld
jl
outsl
loop
pop
dec
bound
fs
lcall
fsubrp
xchg
out
loopne
jne
test
out
mov
insl
outsb
or
push
enter
in
push
mov
lods
mov
add
mov
and
outsl
or
hlt
add
in
pop
adc
mov
test
and
shlb
inc
xor
bound
jbe
out
gs
lds
test
mov
lea
mov
push
fsub
fwait
adc
pop
add
cld
adcb
enter
xor
leave
mov
add
inc
in
sbb
and
mov
cltd
lds
inc
aam
das
clc
jbe
cmp
mull
and
xchg
in
movntps
sub
xor
dec
push
adc
aas
pop
arpl
cld
mov
jge
cmp
in
pop
popf
jl
adc
sahf
lahf
push
rcr
setge
sub
rol
jno
ss
lds
mov
cmp
orb
iret
inc
and
xchg
jae
int
inc
fstl
push
xor
mov
daa
push
jg
pop
jno
clc
pushf
mov
jnp
mov
loopne
lods
dec
inc
mov
push
add
push
mov
or
pop
mov
mov
adc
xchg
shrb
mov
inc
jge
gs
aas
fbld
aas
mov
pop
mov
sbb
shl
lock
adc
or
addr16
rorb
pop
repnz
aas
sub
dec
sbb
sbb
lock
insl
jns
movsb
cmpl
cs
push
ret
cld
dec
jge
xor
imul
test
xchg
jl
data16
lret
inc
pop
test
sub
ret
jns
inc
xor
or
xchg
aad
inc
mov
xor
aaa
les
outsl
jns
inc
pop
cmp
pop
sbb
mov
loopne
or
sti
sbb
ret
xchg
xor
sbb
and
push
insl
lcall
inc
cmp
dec
push
ds
sub
cmp
xchg
xchg
int3
mov
loopne
sub
or
popa
mov
push
push
js
leave
xchg
inc
imul
cmp
push
pop
iret
mov
out
movsl
and
pop
daa
stc
add
jne
cmp
lfs
movsb
lods
add
xchg
xchg
dec
push
inc
sub
adc
inc
sub
sbb
pop
or
mov
loop,pt
lcall
xor
inc
cs
ret
aaa
dec
mov
add
lret
mov
mov
fldcw
cld
mov
iret
mov
and
outsb
xor
mov
cs
xor
ds
ljmp
xor
out
xor
jl
xor
adcb
inc
movsl
adc
mov
inc
dec
mov
push
rol
enter
mov
add
andl
pop
pop
push
jns
pop
shrb
inc
pushf
sbb
mov
mov
cmp
stc
fs
sarl
lock
xor
dec
arpl
mov
sbb
div
clts
adc
pop
pop
push
add
insl
shrb
mov
cmpsb
out
mov
out
push
push
jl
rcrb
mov
jmp
nop
jbe
stos
mov
mov
imul
aam
ficompl
gs
push
xlat
mov
sub
mov
repz
stos
and
add
xor
push
roll
int3
and
lock
xchg
mov
sbb
clc
popf
xchg
sbb
pop
mov
lods
xor
inc
clc
xor
aas
jns
jns
inc
scas
pop
xor
dec
ja
sub
shl
ja
in
lea
shlb
lds
inc
mov
pop
push
cmp
fcom
push
sahf
je
push
popa
fisubs
fdivrl
adc
out
fidivrl
test
inc
pop
cwtl
scas
add
push
xchg
out
test
and
les
inc
aaa
mov
adc
xchg
adc
data16
xchg
inc
push
fcos
xlat
nop
mov
adc
push
pop
cs
push
push
mov
fxch
pop
idiv
scas
push
scas
inc
out
fadds
je
sub
push
or
lahf
xor
out
ds
stc
mov
mov
xchg
call
outsl
push
js
lcall
mov
mov
xchg
push
gs
repz
mov
lock
inc
or
cmp
jb
jmp
and
cmp
add
pop
mov
jl
pop
mov
inc
out
and
or
js
xor
push
push
mov
mov
and
jmp
push
ret
mov
jno
mov
pop
mov
push
jle
xchg
jg
xchg
push
jo,pn
movb
push
sbb
lret
scas
sbb
lods
out
and
dec
sbb
jmp
push
inc
dec
and
flds
xchg
xchg
lret
sub
lods
popf
xor
adc
push
fs
mov
lods
cwtl
or
jmp
mov
fsubl
out
jno
loopne
dec
inc
repnz
adc
jp
sbb
out
or
dec
jns
insb
pop
jbe
adc
mov
and
pop
jl
lods
sbb
mov
out
sbb
leave
sbb
outsl
sbb
add
aaa
inc
in
and
cmpsl
cmc
rclb
sub
fbstp
js
lcall
call
or
inc
popa
jno
outsb
pop
jle
pop
aaa
popa
stos
daa
es
out
pop
cmp
jno
cmp
inc
mov
mov
leave
aaa
nop
insb
es
and
inc
popa
lcall
or
inc
lahf
adc
hlt
out
sbb
loope
pop
flds
insb
outsb
mov
pushf
cmp
fisttpll
in
push
out
pop
cmp
jo
hlt
imul
mov
fcoms
or
xor
dec
inc
dec
shll
jmp
push
add
and
and
and
sub
repnz
mov
inc
push
dec
mov
int
inc
or
stc
and
pop
pop
adc
pop
dec
inc
inc
popf
sbb
push
ret
cmpl
mov
sbb
xchg
push
pop
lahf
push
jb
ficoms
into
out
mov
flds
add
sbb
dec
fucom
bound
or
lods
insl
stc
cmp
mov
testl
mov
ss
popf
sub
inc
cltd
mov
cld
pop
scas
lgs
std
fwait
rolb
test
push
push
push
and
add
iret
inc
std
sbb
sbb
hlt
mov
jae
fiaddl
lahf
loope
idivb
mov
xchg
jbe
es
cmc
xchg
fistl
loopne
pop
push
adc
or
inc
sbb
sub
sbb
sbb
loop
sbb
test
in
inc
imul
pop
and
add
ja
or
pushf
mov
icebp
lods
push
pushl
push
lods
lret
adc
or
mov
orl
push
and
jnp
push
aaa
out
push
push
xchg
mov
add
int3
aad
les
push
aaa
push
jo
pop
int3
jb
pop
add
and
sub
sbb
pop
mov
testl
test
inc
clc
cli
leave
es
pop
inc
xchg
fsubr
inc
mul
push
jle
stos
pop
or
pop
jecxz
rolb
aad
jp
scas
mov
pusha
in
std
mov
test
lea
mov
add
jns
adc
add
pop
fiaddl
or
push
mov
xchg
aas
or
lods
adc
mov
sub
leave
call
push
xchg
test
outsb
dec
xlat
xorb
shll
cwtl
dec
dec
gs
outsl
ja
xchg
pop
fiaddl
fucomip
jg
sahf
push
fld
fimuls
pop
ja
jb
lret
push
mov
popa
adcl
pushf
mov
lret
lret
cmp
and
fiadds
stc
jnp
sti
pop
imul
fst
popf
popa
or
pushf
mov
aam
xchg
imulb
dec
rcll
xor
xchg
jge
add
mov
jae
popf
jae
pop
mov
in
mov
inc
jne
add
pop
shlb
loop
add
test
fimuls
cmc
stc
inc
add
mov
ds
mov
in
jb
push
icebp
push
xor
mov
push
je
data16
cmp
push
or
das
pushf
std
inc
jle
cmp
fcmove
fsubrl
dec
scas
es
xor
inc
nop
xor
ljmp
mov
in
popa
mov
xchg
mov
xchg
xor
clc
ret
pop
bound
jmp
mov
adc
pop
push
fdivs
mov
aad
mov
mov
sub
addr16
push
sbb
lods
leave
add
out
shl
jnp
add
fcmovnu
repz
mov
in
je
push
imul
insl
sub
jae
or
in
push
xchg
sbb
clc
repnz
lret
insb
ljmp
xor
hlt
mov
mov
and
jecxz
xchg
ficoml
repnz
out
sbb
mov
inc
rolb
out
push
adc
pop
cld
pop
xor
sub
scas
fimull
xor
xchg
dec
callw
or
lret
and
cwtl
sub
cmp
mov
sarl
jl
int3
imul
loop
in
lock
mov
imul
xchg
mov
sbb
inc
cld
adc
xchg
inc
xchg
pop
sbb
sub
add
popf
stc
mov
das
inc
xchg
xor
ljmp
mov
mov
cmpsl
nop
mov
clc
push
pop
outsb
jle
cmp
jns
pop
in
pop
pop
dec
std
ret
add
test
inc
cld
mov
cmp
insb
dec
sbb
cmpsl
mov
out
jno
data16
bound
bound
push
mov
cmpsl
mov
ss
je
and
aad
add
out
outsl
sub
in
jbe
divl
test
push
dec
and
das
movl
pop
mov
jne
sbb
std
ret
and
rorl
cwtl
add
stos
mov
shll
xorb
cmovp
jnp
or
out
pushf
imul
adc
lods
jo
push
outsb
jne
push
aam
mov
shlb
lret
std
adc
stos
out
sahf
mov
ficoml
xor
cmp
mov
dec
aas
xor
inc
mov
mov
inc
enter
daa
cmp
scas
jne
daa
push
sbb
jns
lock
cmp
lock
sbb
push
adc
inc
daa
or
orb
mov
pop
pop
mov
pop
scas
and
arpl
shlb
mov
out
cmp
aaa
movsl
outsb
sbb
sub
int
arpl
rclb
cwtl
pop
sti
jmp
movsb
push
mov
mov
rcrb
mov
jb
adc
into
fadds
pop
mov
jl
test
daa
add
or
and
dec
sub
lds
dec
xchg
jnp
push
pop
sub
jmp
adc
add
iret
mov
data16
mov
mov
fs
shrl
pop
inc
leave
add
push
sub
dec
lahf
dec
pop
scas
or
jae
shll
es
xchg
in
xchg
mov
push
fidivl
inc
pop
addr16
sbb
add
pop
xchg
xchg
pushf
shrl
nop
adc
xchg
in
xchg
mov
in
jnp
pop
inc
cmpsb
test
fs
xchg
jmp
outsb
inc
jno
jns
lret
fstl
sarl
adc
outsl
push
popf
push
ss
and
jmp
fs
xchg
cmp
xor
outsl
stos
dec
leavew
pop
jne
loopne
subb
shll
cltd
outsl
push
push
mov
pop
push
test
cmpsb
xorl
mov
xor
cmp
mov
pop
pop
in
orl
fbstp
mov
inc
jb
insl
cmpl
or
jmp
mov
pop
add
push
mov
fcmove
pusha
int3
movsl
ret
mov
ret
mov
pop
add
fwait
cwtl
movsl
das
call
jns
mov
mov
int3
bound
and
out
inc
inc
adc
daa
imul
mov
pop
mov
dec
fdecstp
out
adc
adc
push
pushf
sti
insb
add
sti
ret
je
mov
mov
jb
inc
in
in
out
sub
mov
mov
sbb
dec
aaa
mov
test
jbe
lcall
pop
mov
adc
adc
clc
fimull
xchg
push
ret
sbb
mov
movsb
dec
int
push
call
into
data16
nop
jl
aas
mov
jns
push
pop
cmp
cmc
cmp
and
mov
lock
lods
fsubrl
push
jge
xchg
aam
sahf
mov
enter
push
rclb
mov
cmp
add
decb
jae
mov
sub
ss
adc
adc
bound
ror
fmull
ljmp
daa
push
fstps
push
gs
loopne
add
mov
lods
push
scas
das
mov
or
dec
cmpsb
xor
sbb
cmpsb
rcrb
popa
adc
cmp
call
lds
sahf
sbb
cmc
sub
rclb
lahf
aaa
jp
mov
and
xchg
mov
jno
addl
popa
rcr
sbb
pop
hlt
adc
dec
sahf
dec
shr
mov
xor
or
fs
xor
xlat
dec
cmp
fnstcw
fistl
xchg
iret
stc
xor
jle
subb
mov
fildll
mov
add
dec
clc
or
mov
jae
lret
int
shlb
iret
es
add
outsb
rcrb
jb
mov
stc
push
ljmp
dec
cld
ss
pop
xor
cs
arpl
dec
inc
inc
xchg
inc
mov
lods
cld
sbb
cmp
out
inc
and
lock
iret
imul
sbb
jbe
ds
and
pushf
cmc
jecxz
jmp
pushf
out
push
imul
call
int3
mov
pusha
imul
iret
jl
fldl
ja
stos
push
popa
dec
fcomps
cwtl
out
mov
mov
aam
rorb
mov
and
fs
jmp
sub
jmp
stc
mov
movsl
lahf
cmpl
scas
fnstcw
cwtl
dec
fnstcw
pop
mov
mov
push
mov
mov
and
sbb
push
hlt
or
int
lods
cs
roll
mov
stos
sbb
push
dec
jge
lret
push
lds
adc
lods
shr
sbbl
mov
mov
mov
pop
leave
mov
jae
mov
mov
ss
call
scas
outsb
insl
add
lcall
push
and
push
mov
shr
movsl
jno
pop
sbb
jecxz
aam
xchg
in
xor
cmp
js
jge
pop
cli
aaa
adc
dec
ret
inc
xchg
push
test
lock
mov
incb
inc
mov
dec
lahf
int3
jb
repnz
arpl
out
imul
mov
mov
cli
or
inc
cmp
nop
ljmp
mov
insb
lret
pop
movsb
add
and
push
inc
jmp
push
push
leave
mov
and
xchg
xor
mov
lock
mov
testb
mov
sbb
scas
pop
adc
lcall
dec
cmp
repnz
dec
push
clc
sahf
add
push
jge
sbbl
outsl
call
mov
lea
cwtl
jmp
pop
iret
scas
sub
xchg
inc
cmp
nop
insl
mov
inc
xchg
lahf
mov
pop
fxtract
fsubrs
stos
lcall
xor
xchg
adc
inc
into
push
sbb
imul
cmp
shrb
inc
aam
es
rcr
mov
xor
repnz
lea
jb
push
pusha
sbb
out
jno
in
jb
mov
inc
sub
movsb
mov
pop
jg
arpl
loop
ss
bound
shl
stc
shrl
cwtl
pop
sbb
push
and
xchg
cmc
in
or
setae
pop
repz
fwait
inc
fidivl
adc
sarb
es
xchg
adc
and
push
sti
jo
mov
cmp
and
arpl
popf
and
call
mov
popl
test
push
sbb
fwait
daa
sbb
nop
mov
shrb
loop
xor
imul
outsb
xchg
add
dec
push
fdivl
cmp
and
xchg
cmpsl
add
mov
push
mov
ja
leave
jnp
mov
lret
pop
sahf
sub
jno
loop
std
es
and
testb
push
loopne
fsubs
mov
shrl
out
fcompl
mov
dec
mov
jp
in
or
xchg
aad
mov
xchg
mov
cmp
hlt
test
fcompl
repz
ljmp
xchg
pop
std
jp
mov
and
and
outsb
insl
or
jecxz
add
fsubrl
jmp
fidivs
mov
adc
xchg
pop
push
xchg
imull
aam
clc
test
mov
imul
mov
sbb
ret
pop
pusha
cmp
les
fnsave
xchg
pushf
dec
push
inc
imul
pop
jo
fisubrs
sub
cmpsl
pop
test
testl
stos
push
je
jmp
jmp
sbb
cmpsl
adc
imul
pop
push
push
sbb
add
sub
jae
call
and
mov
fmull
lret
dec
push
ret
push
pop
mov
pop
xor
add
sub
adc
xchg
pop
fwait
and
adc
pop
adc
xchg
shrb
mov
stos
leave
enter
test
xor
xor
jns
xlat
aam
cwtl
cmp
fisubrs
and
popl
sub
add
fldl
pop
push
adc
icebp
xchg
lock
inc
popa
jne
cmc
popf
shrl
mov
bound
enter
push
lods
movsl
stos
addr16
repz
mov
out
jge
repnz
mov
adcb
mov
dec
sub
cmp
lods
xor
cmp
push
scas
es
and
push
push
xchg
sub
sbb
lret
jmp
add
nop
or
xlat
jmp
das
pushf
outsb
inc
or
mov
inc
loope
sbb
les
in
movsb
xor
rcll
aad
sbb
mov
pushf
inc
sub
icebp
neg
mov
jp
sub
mov
fwait
push
aam
cmc
movsb
cmpsb
sub
aas
aad
inc
mov
es
inc
xor
daa
cmp
xchg
add
mov
pop
fildll
mov
push
pop
push
mov
test
adc
pop
pop
pop
push
icebp
imul
ret
out
test
jne
jmp
cmpsl
aaa
cmp
pop
add
and
mov
call
iret
sub
mov
loope
pop
mov
sub
out
add
mov
mov
xchg
and
out
shl
jmp
jbe
pop
in
pop
std
stos
scas
lcall
lods
std
cmp
xchg
getsec
mov
jge
push
daa
xor
cwtl
xchg
jb
xchg
sarl
mov
rorl
jb
adc
hlt
xchg
cmp
mov
mov
loope
cmp
fsubs
jmp
addl
or
test
mov
fdivs
out
mov
add
lret
pop
xchg
sti
movsl
inc
test
fdivrs
iret
aas
xchg
push
shrb
cwtl
inc
cmp
inc
negb
pushf
and
inc
sbb
add
sbb
lret
ja
cmp
dec
pop
test
mov
jne
xchg
jne
aam
in
mov
add
popf
es
cs
dec
hlt
mov
jecxz
in
pop
mov
aaa
add
inc
adcb
add
dec
outsl
xchg
mov
cmp
push
add
bnd
cli
xor
repnz
cmc
sbb
pop
outsl
out
rcll
dec
repnz
hlt
insl
mov
leave
aaa
xor
cltd
cmp
xchg
lcall
cmp
call
xlat
add
rorl
dec
pop
pop
lret
ret
and
pop
adc
adc
pop
push
inc
push
aas
mov
sbb
push
xbegin
lcall
int
std
mov
popf
lahf
adc
push
in
icebp
adc
cmp
les
or
pop
lcall
cmp
and
rcrl
add
ja
in
js
sti
push
stc
xor
adc
call
hlt
into
leave
in
test
stc
inc
mov
add
xchg
insl
stos
sub
jae
dec
nop
mov
cmp
pop
pop
jbe
xchg
xor
xchg
push
cmp
or
and
xchg
xchg
lods
shll
inc
xlat
inc
cmpsb
andl
rorb
cmp
cmp
jl
jbe
xchg
xchg
sub
jnp
or
lock
xchg
add
adc
nop
push
mov
imul
and
popa
and
subl
pusha
jns
pop
lock
sbb
movsb
push
enter
xchg
js
lret
std
and
lds
adc
inc
inc
push
int
stos
xchg
and
hlt
sahf
push
out
or
xor
add
add
aam
pop
mov
mov
in
adc
xchg
add
cmc
inc
es
cmpsl
loop
and
sub
xchg
lods
movsb
inc
loop
dec
xchg
mov
cs
adc
or
ret
sbb
jnp
inc
mov
sub
dec
mov
jp
gs
in
mov
xchg
inc
inc
mov
ds
mov
mov
ret
int3
mov
or
cmp
lret
and
dec
shrl
dec
sub
lcall
mov
in
jb
lds
das
add
imul
cld
xchg
je
test
jb
pop
inc
add
inc
call
testb
in
xlat
jg
add
mov
push
and
divl
and
and
xor
dec
std
int3
pop
sahf
cmp
add
cmp
jnp
xchg
mov
and
mov
fwait
push
lret
int3
movsl
cmp
rorl
mov
jmp
iret
sbb
and
enter
lcall
dec
mov
stc
int3
repnz
mov
fbld
pop
test
push
adc
faddl
dec
adc
push
mov
scas
fsubrl
leave
or
daa
sarl
push
cs
sbb
xchg
push
xor
ds
dec
push
push
in
rcr
out
scas
cmp
xchg
loopew
jnp
adc
cmp
gs
push
jl
int
adcb
mov
enter
cmp
sub
in
mov
in
adc
mov
push
out
jns,pt
and
lods
pop
and
out
mov
gs
push
mov
stos
mov
push
mov
adc
loope
mov
jbe
popa
and
adc
mov
mov
pop
or
add
pop
adc
fildl
jb
sub
fsubl
jecxz
repnz
fnstsw
cld
jp
outsb
lds
adc
add
push
out
mov
dec
js
ljmp
pop
and
lret
or
adc
into
insl
rcl
jmp
into
test
cmpb
stc
jae
add
shrb
arpl
in
inc
xor
mov
in
inc
rolb
and
dec
jbe
pop
ret
cmc
pop
rcll
popf
sbb
push
xchg
mov
jmp
mov
sub
push
insb
mov
mov
ljmp
adc
xorb
aaa
and
jle
adcl
es
fisubrs
outsb
imul
pop
icebp
pop
xor
lods
popf
mov
push
shrl
xchg
xor
cmp
inc
lods
mov
cmpsb
sbb
fsubl
test
adc
inc
clc
or
or
dec
mov
jns
outsb
popf
pushf
fwait
sahf
insl
addl
cmp
icebp
sub
mov
cmpsb
out
loop
and
out
movsb
xchg
incl
adc
pop
or
lret
ret
lock
inc
movsb
outsl
pop
pop
js
mov
scas
inc
push
dec
sbb
outsb
hlt
mov
test
iret
ficoms
pop
popf
out
mov
sbb
mov
mov
fcoms
ss
pop
inc
adc
jae
dec
int3
cmp
ds
sbb
cwtl
mov
xchg
jg
inc
mov
sub
cmp
mov
js
inc
inc
pop
xchg
pop
sbb
add
div
xor
icebp
ljmp
mov
dec
daa
sbb
cmp
rclb
sub
stos
adc
mov
pop
fcomip
push
test
push
call
push
mov
mov
inc
lahf
and
push
add
rcl
mov
dec
push
ficomps
cmp
xchg
jg
mov
xchg
mov
call
pop
cmp
mov
mov
lds
push
xchg
cltd
xchg
repnz
imul
push
mov
xchg
es
andl
add
jp
xlat
data16
pop
cli
mov
call
mov
sub
mov
mov
jne
jge
inc
imul
stc
mov
jno
cmpsb
xor
push
pushf
mov
cmpsb
cmc
push
dec
push
mov
gs
mov
jge
mov
mul
add
and
xchg
dec
cmpsl
cmpsb
mov
jbe
mov
shlb
incl
iret
lret
outsb
test
mov
push
std
pushf
mov
popa
xor
test
loope
jo
jne
or
aad
xor
mov
icebp
fdivrl
mov
mulb
popf
mov
sub
std
mov
lea
daa
xchg
dec
cmp
cmp
js
shl
inc
adc
je
and
loop
lahf
fsubl
xchg
scas
mov
ss
dec
shll
lret
pop
out
mov
or
push
add
fcoms
sbb
insb
sub
mov
arpl
loope
fistps
inc
adc
sti
fsubl
dec
icebp
mov
rorb
xor
mov
or
adcb
mov
in
cmp
outsl
adc
or
and
push
pop
int3
mov
add
pop
fcoms
xor
fstpt
sbb
xor
push
xor
movsl
push
pusha
pusha
sub
imul
pop
and
dec
add
fnstcw
xchg
orb
mov
inc
lds
insb
into
enter
outsl
push
je
icebp
cmp
adc
fildl
pop
lea
inc
xor
inc
out
or
cs
pushf
inc
js
or
imul
lret
pop
push
add
imul
clc
and
icebp
les
jmp
mov
mov
add
inc
movsl
lods
ds
push
addr16
negl
insb
adc
cli
sahf
and
dec
cmpsl
cmp
mov
xor
or
add
mov
push
fwait
insl
fmul
or
and
jae
sub
mov
cs
jne
xor
pop
clc
test
push
or
stos
test
icebp
mov
xor
adc
bound
inc
jno
sahf
aaa
les
add
mov
in
pop
jbe
int
cmpsl
and
xlat
ja
nop
cmp
test
add
mov
sbb
out
rcrl
push
dec
xchg
jg
ja
fs
movsl
rcll
dec
cmp
xor
add
sbb
dec
sbb
push
mov
pop
mov
popa
ret
mov
fwait
jle
lcall
jns
lock
xchg
out
push
pushf
jecxz
push
stc
cmc
daa
in
not
inc
or
sub
lret
ljmp
shlb
cld
inc
mov
pop
mov
loop
shll
leave
mov
psrlw
lods
jl
pop
or
lea
leave
sbb
mov
and
wrmsr
sbb
or
cmp
adc
jbe
fmul
sub
aaa
cmc
shll
lods
addb
jle
outsl
int
aam
movsb
push
jo
cmp
mov
and
outsb
lods
int3
push
in
pop
push
int
into
push
imul
cmpsb
xchg
out
jmp
movswl
xor
and
sbb
hlt
sti
out
cs
int3
fstl
popa
push
testl
xchg
in
xchg
aad
psubsw
ret
xchg
or
cmp
mov
daa
or
sub
stc
cmp
in
jmp
scas
mov
xchg
daa
xchg
dec
dec
lret
enter
fldenv
jns
fwait
add
push
jg,pn
ds
cmc
out
ss
icebp
pop
mov
add
mov
es
cmp
int
cmp
inc
jbe
js
out
pushf
and
negb
inc
cwtl
gs
es
fsubrs
outsb
stc
pop
dec
jne
lahf
or
jb
shl
inc
insb
icebp
popf
repz
add
es
mov
in
lods
enter
jnp
pusha
add
cmpsb
sbb
sbb
js
adc
dec
aas
cld
lret
sahf
jp
jo
cli
jno
dec
or
roll
fstps
push
mov
js
call
insl
cmp
adcb
subb
cmp
loope
call
push
jno
incb
test
mov
adc
xchg
xor
js
inc
scas
cs
xchg
pop
add
lret
jno
dec
xchg
pop
scas
mov
adc
nop
cltd
fwait
mov
fists
push
ret
int
test
jmp
popf
int
shrl
add
repnz
jo
test
mov
ss
fadd
xor
mov
lods
into
cmpl
adc
and
mov
xchg
sbb
dec
and
xchg
add
rclb
aaa
push
lret
jns
mov
push
inc
inc
cli
cs
dec
std
orl
ret
lock
addr16
mov
fmul
mov
enter
sti
hlt
sub
lea
add
mov
sbb
push
dec
xchg
pop
mov
dec
push
jge
pop
sbbb
push
adc
stc
jne
jp
push
inc
cmp
mov
cld
lea
rorb
aad
rorb
and
xchg
push
mov
in
ret
jge
pop
mov
pop
push
xor
jp
pop
jmp
add
int3
cmp
fldl
xor
adc
jg
loopne
rcr
cmp
jns
fld1
pushf
add
fucomp
cmc
mov
inc
push
adc
fs
pop
loope
mov
cld
sbb
jmp
push
mov
jecxz
mov
mov
or
test
movsl
push
xor
loop
inc
aam
shrl
and
pop
cmpsl
inc
ss
nop
rolb
fimull
inc
mov
or
icebp
and
jge
mov
adc
stos
mov
xchg
cmp
outsb
cmpsb
stc
jo
inc
out
or
push
mull
pop
aad
jae
add
dec
mov
inc
push
sti
dec
dec
add
push
jno
jbe
sarl
sub
out
in
dec
push
adc
push
or
mov
xor
out
dec
ljmp
dec
call
and
lcall
jl
add
jp
add
or
jmp
cmp
xchg
or
dec
mov
cs
arpl
jl
adc
and
sub
or
xchg
pop
dec
mov
pop
xorb
mov
outsl
mov
push
pop
mov
scas
sub
lret
pop
and
loopne
xchg
iret
xchg
pop
shr
sub
push
jmp
lahf
sub
icebp
repnz
sbb
testl
inc
lods
scas
cmp
jl
addr16
stc
pop
cs
dec
dec
cmp
hlt
push
jl
insl
mov
inc
fiaddl
mov
xlat
push
sub
mov
cmp
repz
mov
mov
xchg
iret
and
xchg
cli
adc
xchg
sbb
in
xchg
js
test
sbb
inc
fwait
std
adc
or
insl
add
dec
vpunpckhbw
lods
push
pop
insb
mov
jbe
xor
mov
pop
leave
pop
std
aaa
imul
imul
jb
or
push
sahf
xor
iret
pop
mov
movb
adc
jnp
adc
jecxz
out
dec
jae
stos
mov
jno
aam
mov
cmc
les
inc
imul
loop
aaa
dec
cld
xlat
js
and
cmpsl
rcrb
in
pop
add
sub
cwtl
mov
dec
jl
jb
out
inc
pop
dec
sbb
imul
imull
xchg
loopne
xor
jmp
pop
rorb
pushf
rorb
repnz
adc
lcall
es
inc
mov
dec
test
imul
and
dec
xlat
int3
iret
adc
and
cltd
pop
es
xor
push
cltd
cs
lcall
mov
xchg
jae
add
dec
mov
nop
xlat
cld
mov
int3
inc
fdivrs
dec
stos
fcoml
pop
mov
ja
out
andl
xchg
sbb
inc
xchg
out
push
sbb
pop
mov
lret
push
or
mov
xlat
jo
xchg
and
pop
add
test
sub
nop
cmp
inc
adc
lret
add
out
mov
ficomps
and
sub
sbb
xchg
imul
jb
fnstcw
insl
add
rorb
push
sbb
mov
cmp
aad
adc
aaa
testl
add
daa
in
das
pop
xchg
dec
mov
add
and
mov
inc
roll
je
ja
mov
out
lods
mov
popa
ret
sbbb
pop
je
lds
push
or
daa
pusha
or
sub
jno
movsl
popf
out
es
lods
inc
mov
adc
stc
mov
addr16
inc
in
lret
dec
fistps
and
ljmp
mov
and
pusha
jle
push
psllq
adc
mov
shrb
add
test
ss
insl
push
test
mov
sbb
adc
pop
mov
or
xor
push
or
cmpsb
inc
lea
inc
je
inc
push
ficoml
in
pop
xor
bound
push
popa
mov
mov
adc
fs
or
call
pusha
push
shlb
shrl
ds
mov
out
xor
xlat
icebp
sbb
dec
push
mov
or
pop
dec
scas
cmpl
daa
push
adc
cwtl
inc
sub
add
pop
lods
xor
pop
and
pop
sbb
sub
jmp
lahf
jge
in
pop
inc
test
test
fdivs
adc
xor
mov
mov
sahf
jecxz
in
fstl
lods
mov
call
mov
stc
add
addr16
sbb
les
cmp
mov
cmp
add
nop
ficomps
daa
cmp
cmp
xor
push
pop
mov
addl
adc
ja
stc
push
sbb
inc
aas
cmp
pusha
pop
jns
in
sbb
and
je
add
fidivrs
ja
and
fldcw
and
pop
insb
hlt
inc
mov
aas
out
pop
adc
fstpl
aas
imul
adc
ret
jo
mov
jnp
or
movsb
xchg
push
and
les
fidivrs
bnd
and
xorl
mov
jmp
fistl
xchg
or
inc
scas
icebp
sub
in
aam
negb
std
fs
mov
daa
lret
scas
dec
sbb
mov
jae
cmp
push
scas
jecxz
ret
in
gs
shlb
cmp
mov
inc
pop
fidivrs
inc
push
test
mov
fnsave
jle
addr16
sbb
lock
je
sub
fildll
repz
or
xchg
repz
out
push
cwtl
out
cmovo
daa
negb
jl
addb
bound
pop
push
pop
lret
or
movsb
pop
imul
mov
lods
aas
inc
test
inc
sub
frstor
insl
orb
jae
out
sub
movsb
xor
xor
xchg
pop
push
xchg
sub
cmc
sbb
popa
loopne
sbb
mov
cmp
sbbb
xchg
fidivl
clc
scas
int3
xchg
adc
xor
pushf
fdivrl
adc
shll
notl
xchg
addr16
jge
pop
push
xor
inc
daa
je
gs
rdtsc
mov
in
push
movsl
loope
push
nop
pop
fmuls
pop
orl
sub
mov
cmc
cmp
mov
lahf
sahf
in
pop
loopne
sub
dec
ret
lds
jmp
mov
mov
xorl
shrl
cmp
cmc
div
stos
xor
pop
shl
idiv
cmp
repnz
lods
xchg
stos
push
mov
test
test
in
push
push
cmp
sbb
add
iret
mov
sub
sti
add
call
scas
jge
bound
cmp
in
sub
cmpsl
cmpsl
call
dec
outsb
insl
jne
xchg
fwait
cmp
stos
ss
pop
divb
sbb
stc
loopne
inc
pop
gs
mov
es
mov
cmpsl
insl
inc
in
xlat
pop
loop
out
fiadds
cmp
inc
imul
lds
pop
lret
xor
rorl
scas
bound
sub
ja
outsl
add
dec
dec
pushf
lret
mov
or
mov
add
push
gs
inc
add
or
ret
fdivr
outsb
push
rolb
clts
xorl
cli
pop
and
sub
cmp
inc
insl
sbb
xchg
pushf
sbb
cltd
aam
xchg
jns
addr16
sub
xor
mov
xor
lods
imul
jno
or
mov
cmp
js
xchg
fwait
add
xor
lock
outsl
test
test
fs
pop
sub
push
test
aad
mov
shlb
sbb
push
cmp
sub
imul
aam
in
pop
ja
xchg
std
pop
jnp
jbe
xor
cs
lock
inc
sbbb
aas
scas
fsts
jbe
fdivs
adc
ss
sbbb
les
and
aad
inc
cmp
mov
cmpsl
xchg
add
jno
data16
int
ja
and
daa
xchg
pop
imul
shr
rclb
dec
hlt
hlt
sub
or
lret
xlat
jp
jl
pop
jae
loopne
mov
cli
pop
cwtl
fs
inc
fstl
push
lods
shlb
cmp
inc
xor
cmpsl
repnz
jnp
imul
andl
repz
xchg
sbb
mov
pop
stc
xchg
bound
orb
mov
fwait
dec
sub
jbe
and
push
xchg
dec
cmp
shlb
loope
xchg
pusha
lret
cld
sbb
push
int3
fs
out
jbe
add
xchg
add
jb
imul
and
jp
repz
xchg
mov
mov
mov
jne
nop
jo
dec
enter
imul
pop
jo
dec
sub
jno
jle
movsb
jle
sub
cmp
or
pop
jbe
or
sahf
adc
into
aas
sahf
mov
xchg
fidivl
addb
in
sahf
jns
loope
fdivrs
std
xchg
rcr
lcall
bound
movsl
lcall
and
pop
xorl
lods
xor
push
aad
in
cmp
mov
mov
stos
fmul
jmp
icebp
sbb
pop
rorb
mov
mov
xchg
arpl
nop
jmp
out
sub
or
dec
mov
jb
sub
mov
push
jae
dec
arpl
daa
aad
cmpl
mov
jns
dec
jg
jb
test
sarb
cmpl
mov
jle
fcom
jns
inc
xchg
ret
lods
sbb
lret
lret
mov
sub
sub
and
mov
add
mov
mov
subl
jne
mov
cld
mov
sti
pop
push
push
sub
dec
pop
sahf
add
repz
xchg
mov
xlat
ja
pop
mov
push
inc
std
xchg
push
mov
inc
cmp
testb
scas
cmpsb
add
mov
ret
imul
jno
ss
mov
xchg
arpl
lcall
cmp
push
imul
psubsw
dec
cmp
pop
sub
outsb
jns
xor
daa
leave
int3
push
stc
nop
mov
mov
pushl
in
jnp
mov
btc
sti
jno
xchg
push
movsl
inc
mov
sbb
test
fisubrs
jns
es
sbb
mov
movl
dec
mov
shr
xchg
xchg
addr16
mov
pushf
mov
insb
xchg
push
cmp
dec
pop
or
rcrb
xlat
lods
add
push
call
fbstp
push
pop
ja
cltd
mov
loope
add
icebp
mov
cmp
jo
out
mov
inc
ja
scas
xor
aas
incl
add
inc
scas
lahf
xor
insl
xor
icebp
xchg
dec
mov
cmp
sahf
lods
out
movsl
jae
test
pop
sarb
adc
cmc
mov
nop
mov
mov
rorb
add
inc
or
insb
or
ss
pusha
jbe
lods
push
in
sarl
sti
leave
out
cmpsb
push
lcall
mov
into
rcr
in
pop
arpl
xchg
jle
fildl
imul
inc
movl
jge
xchg
movsb
loop
loope
sbb
inc
sti
nop
mov
jp
dec
es
inc
fmul
pop
stos
int3
lcall
inc
orb
xchg
lahf
xlat
jecxz
repnz
adc
nop
add
xchg
or
mov
jmp
cmpsb
xchg
ljmp
ret
gs
add
test
sub
mov
fs
mov
pop
incb
sub
push
jmp
dec
xor
xchg
cwtl
shlb
jo
sahf
lds
add
out
jle
mov
ror
bound
mov
pause
dec
imul
aas
cmpb
lods
push
stos
ljmp
test
add
xchg
mov
mov
cli
jecxz
adc
les
or
sbb
jle
pop
or
popf
ret
pop
lock
mov
div
inc
lods
pushf
stc
or
lahf
gs
into
inc
mov
ja
inc
repz
movsl
test
pop
aas
arpl
jns
nop
lret
pushf
jecxz
xor
sbbl
je
ret
mov
xor
adcl
sahf
mov
loop
test
pop
cmp
sbb
mov
lcall
sarb
daa
popf
mov
lock
scas
in
push
scas
ds
outsb
into
mov
mov
mov
arpl
pop
shrl
mov
test
nop
call
push
push
push
push
mov
aas
loopne
daa
addl
cmp
push
fmuls
inc
mov
fidivrs
push
inc
push
push
mov
cmp
xchg
pop
add
adc
pop
das
add
test
push
imul
jp
in
add
inc
pusha
pop
in
mov
mov
or
cmp
jg
cltd
jle
addr16
xor
and
dec
movsl
cmp
jle
sbb
add
xchg
bound
cmpsb
or
sahf
cmpb
and
movl
jne
mov
fwait
dec
cmp
mov
lcall
ljmp
inc
movsl
mov
inc
movl
pusha
fldenv
jmp
jnp
js
cmp
mov
es
or
or
dec
out
ret
push
push
or
repnz
mov
lret
mov
add
movsb
xor
je
nop
aas
ss
ja
and
ret
jnp
jno
jne
iret
jnp
push
xchg
push
outsb
or
out
aad
std
lret
stos
jl
jmp
dec
out
stos
xchg
div
mov
push
adc
daa
fs
lods
cmp
or
sbb
cmp
orb
push
repz
fsubrs
sti
sbb
sub
xchg
test
js
pop
iret
mov
mov
inc
flds
mov
sbb
xor
xchg
je
lret
cmp
xchg
xor
and
sti
lds
lods
lods
inc
fisubs
or
nop
jmp
fmull
add
adc
orl
dec
sbb
cmpl
dec
rcrl
das
mov
test
add
inc
lahf
test
add
adc
push
mov
and
push
ljmp
add
cmpsl
aaa
push
cmp
incl
xchg
fwait
add
push
add
out
mov
cmc
sti
pop
mov
cmp
cwtl
rol
fadds
mov
push
mov
jns
sbb
repz
and
ja
pop
or
into
push
lea
mov
cmp
add
dec
mov
or
pop
xchg
sbbb
cmp
and
push
sub
and
lods
enter
mov
sbb
mov
cmp
adc
push
call
dec
jle
pop
inc
xor
sti
test
push
leave
cmpsb
cmp
ds
ljmp
xor
mov
add
jb
cmp
stos
movl
xor
jl
mov
and
lock
arpl
dec
adc
push
push
fwait
mov
adc
sbb
mov
xchg
cmpsl
lods
sub
sbbb
ljmp
mov
negb
sub
adc
mov
stos
rclb
add
mov
bound
es
insb
sub
mov
and
sub
push
stos
std
movl
movsl
push
push
fldenv
or
outsl
fimull
push
cmp
pop
shl
int
push
jae
mov
lret
es
sub
sarb
loopne
inc
sbb
push
cmp
repnz
sbb
ret
int3
ret
mov
jge
or
pop
repz
xchg
jcxz
pop
ds
mov
popa
jl
xor
imul
mov
fadds
loop
lods
mov
and
in
fs
sbb
into
or
xchg
aam
sarl
inc
dec
bound
mov
mov
xchg
inc
out
movsb
or
fimull
add
out
cmp
fildll
xchg
push
xor
push
repnz
pushf
bound
adc
adc
push
mov
xchg
dec
cmp
jae
andb
in
lods
dec
add
test
repnz
jecxz
xchg
shrl
aad
orb
pop
out
cmp
fcompl
andb
outsl
mov
pop
and
repnz
mov
test
cmpsb
mov
stc
mov
frstor
loopne
rcr
sub
inc
push
mov
stos
test
push
push
nop
imul
pushf
aam
or
addl
cmp
mov
jge
mov
mov
push
loop
push
fldenv
dec
jns
jb
jmp
mov
pop
mov
call
aaa
add
xorl
cld
and
sbb
ja
and
je
dec
pop
mov
out
cltd
and
sbb
stc
push
and
jne
icebp
or
outsb
lock
out
rcrb
mov
das
lret
clc
data16
mov
push
cmp
pop
adc
ja
stos
filds
sti
in
shl
clc
and
popa
adc
scas
cmp
or
cmp
inc
popa
mov
push
mov
xchg
out
or
push
mov
dec
cwtl
xchg
cli
inc
push
cmp
adc
arpl
jns
call
mov
push
das
sbb
mov
dec
fiaddl
xor
shll
add
lds
dec
pop
enter
aas
or
pop
jp
and
divl
jb
popa
mov
fnstsw
negb
mov
test
stc
rorl
mov
pop
inc
mov
je
mov
mov
mov
fmull
mov
pop
push
test
aam
sbb
out
mov
push
dec
lahf
xlat
ret
lock
adc
test
inc
cmpb
dec
jecxz
push
adcb
test
cltd
xchg
repnz
sti
stos
mov
dec
mov
addr16
fcompl
xchg
or
push
pop
inc
arpl
out
lret
sbb
shll
and
mov
mov
adc
cmp
in
outsb
cs
fs
xchg
scas
or
mov
cltd
cmpsl
xchg
test
test
jo
mov
add
ret
enter
cs
fisttpll
enter
or
pushf
xchg
jmp
cmp
or
inc
testl
js
mov
mov
push
mov
or
mov
xchg
lret
xchg
sub
pop
mull
mov
subb
xorb
jb
jae
int
lds
jle
xchg
mov
lahf
fiaddl
sub
pop
mov
mov
fwait
pop
fnstenv
leave
inc
mov
movsl
insb
pop
push
xchg
mov
jg
hlt
enter
jge
es
and
in
mov
ds
je
mov
pop
jmp
jns
cs
repnz
fnstenv
sub
mov
lcall
imul
pop
test
sbb
rorb
lcall
push
ret
sbb
scas
out
jns
or
mov
pop
jle
out
xor
push
in
fisttpll
scas
sub
cs
hlt
aas
and
cmpsl
fldenv
and
add
stos
ja
mov
aaa
mov
lds
insb
sub
or
jne
jnp
mov
fdivl
xor
fwait
xor
xadd
push
pop
sub
das
cmp
adc
movsb
sbb
addl
rcrl
jns
jbe
or
rcll
lret
fbld
mov
cmp
shll
out
pop
sbb
mov
cmp
sbb
pushf
loopne
std
shrl
mov
rcl
imul
push
jbe
push
dec
aaa
pop
pminsw
inc
pusha
lea
cmpsb
out
stc
cmp
je
ljmp
fcomps
lret
cli
push
push
sub
sbb
mov
mov
mov
jmp
xchg
es
rcr
mov
sarl
out
in
or
inc
in
es
xor
ss
mov
dec
mov
pop
sbb
ljmp
xor
adc
cmpsb
adc
lahf
mov
repnz
xchg
xor
insb
rorl
mov
cli
dec
dec
pop
jns
out
mov
ret
insl
ds
add
push
int3
jns
sbb
xchg
jo
cld
add
or
adc
es
add
or
insl
cmc
sbb
jne
inc
push
adc
repz
mov
hlt
jnp
or
pop
jmp
repz
mov
jo
pop
jae
out
add
xchg
iret
lock
ret
cmc
or
lock
stos
push
add
inc
pop
sbb
testl
fiadds
dec
add
stc
inc
pop
pushf
lods
out
dec
insb
into
mov
mov
pop
xor
ja
xchg
or
push
pusha
aam
loop
adc
xor
sbb
push
call
inc
or
inc
rcll
lock
repz
mov
inc
adc
cld
iret
push
pop
sub
or
mov
in
iret
pushf
mov
inc
in
sub
rolb
aad
lea
call
fadd
repz
sbb
push
jno
mov
js
ljmp
inc
imul
enter
inc
fdivr
pushf
mov
and
fs
movsb
adc
mov
mov
pop
xorb
add
dec
inc
cmc
xchg
dec
out
xlat
or
stc
and
in
push
test
cmp
inc
ljmp
mov
repz
lea
or
dec
xor
idivb
test
mov
repz
popf
loopne
mov
mov
inc
nop
cwtl
popf
aad
push
mov
push
adc
stos
cmp
adc
mov
sti
fs
lahf
sub
decl
cmpsb
push
add
jno
aad
shr
nop
mov
ret
and
and
mulb
cmp
pop
jmp
out
cmc
xchg
fcmovnu
xchg
insb
hlt
and
mov
dec
and
in
testb
jmp
sub
decb
pop
loop
xchg
dec
pop
cmpsl
lahf
cmp
es
int
add
std
mov
adc
outsb
jbe
cmpsb
adc
lret
sub
mov
pop
popa
or
andb
xchg
xor
ret
jae
je
mov
rorb
aam
push
mov
inc
js
jmp
mov
pop
ss
out
push
adc
test
dec
ja
push
cmp
cmp
xchg
les
clc
dec
xchg
lods
lcall
cmpsl
and
cwtl
cmp
call
stos
call
in
iret
mov
push
xor
fmul
dec
ds
sub
jmp
scas
sub
sarl
std
lods
inc
std
addr16
cmp
xchg
rclb
push
addr16
ficoms
and
pop
adc
inc
cmp
divl
mov
aaa
dec
add
test
aam
xor
jns
outsb
int3
or
or
fcmovnbe
hlt
arpl
mov
popf
lret
add
lret
mov
fnstenv
andl
sub
idiv
adc
pop
and
pop
jge
ret
adc
gs
outsb
ss
jmp
int3
adc
outsl
sub
ret
jmp
aaa
inc
daa
jns
sbb
xor
clc
mov
sbb
push
inc
push
mov
shrb
ja
and
fstps
and
add
xchg
aam
fcomps
adc
jl
or
pop
ret
sbb
lcall
cmp
dec
push
sbb
dec
scas
push
ret
and
outsl
lods
sarb
xchg
in
xchg
jnp
imul
jns
movsl
popa
ja
vshufps
jmp
cmp
ret
dec
add
add
mov
stos
lea
bound
pop
mov
rol
dec
les
inc
in
mov
gs
cmpsl
imul
inc
or
mov
jl
sub
or
repz
push
jg
bswap
popf
orb
xchg
shll
jge
sbb
shll
mov
xor
jns
repz
cs
das
cmp
call
pop
outsl
aam
mov
or
fs
mov
js
add
out
into
lods
and
lods
call
xchg
out
jns
and
jb
fwait
insb
and
adc
mov
mov
inc
lahf
aam
in
cmpsb
mov
fldl
loopne
cwtl
enter
pop
fwait
pop
out
push
fisttpll
sub
mov
pop
push
jp
in
loopne
rcll
mov
in
mov
popa
xchg
shll
sbb
imul
lcall
in
jle
xchg
jle
mov
and
jge
ret
mov
orl
xchg
cmc
cmpsl
pop
or
sub
pop
ss
ror
dec
jp
jp
lods
jp
adc
sub
push
inc
jp
mov
push
lret
fcmovb
pop
add
cmp
arpl
jno
jge
jo
adc
mov
jne
and
pop
pushf
or
mov
in
sub
dec
imul
scas
cltd
xchg
jne
dec
mov
insb
xor
mov
adcl
mov
iret
sub
jnp
cmp
and
jecxz
sbb
xor
mov
jns
push
int3
sbb
shll
lods
mov
std
jae
add
shl
fcompl
lods
push
repz
xchg
cli
push
and
cmp
rcr
nop
mov
lds
jecxz
repnz
mov
xor
aas
pop
stc
sub
ljmp
mov
daa
adc
lods
jbe
aam
xor
dec
inc
cmc
mov
inc
mov
dec
and
push
movsl
mov
movsl
xlat
or
mov
pushf
ljmp
mov
rcrb
mov
shl
xchg
and
or
aad
outsl
pop
mov
pop
push
imul
sbb
int
inc
test
ljmp
iret
and
sub
test
and
xor
ds
fwait
push
roll
mov
shll
pop
dec
lret
jno
mov
lret
or
sbb
enter
cltd
pop
jbe
jecxz
stos
push
push
push
sahf
jp
mov
out
mov
outsl
cmc
lods
mov
arpl
fidivrl
idivl
test
mov
push
lcall
xor
and
sbb
das
fs
adc
mov
cmp
movsl
daa
inc
sub
mov
lock
std
jae
hlt
dec
adc
addr16
in
dec
cmpsl
mov
lea
bndldx
push
sub
data16
lcall
fwait
lock
push
jecxz
cmp
or
test
test
xchg
int3
aaa
movsb
sbb
jg
push
sub
cmc
pusha
inc
jge
pop
or
ja
fnsave
lods
or
mov
adcb
es
ficoml
cmpsb
jle
rol
add
xchg
pop
cmp
shlb
std
movl
push
call
pop
mov
rcr
cmpsb
outsb
jecxz
and
popa
xlat
enter
orb
mov
sbb
push
push
mov
out
movsb
mov
mov
sbb
and
std
and
repnz
lods
sub
mov
incl
mov
cld
mov
adc
cmpsl
pop
adc
jecxz
fnstenv
pop
cmpsb
enter
sar
mov
fldt
jl
or
jae
add
push
dec
or
dec
mov
testb
sub
sub
out
add
cvttps2pi
popf
add
loope
loop
sbb
or
ja
xchg
mov
cmc
repnz
jbe
pop
jg
fnstenv
out
out
fcmovu
jno
cwtl
rcrl
push
sti
test
push
xor
and
fidivl
fsubrp
rcrb
pop
adc
es
xchg
in
push
xchg
testl
arpl
jo
xchg
lcall
push
fsubrs
addr16
enter
pop
sti
mov
das
cmpsl
or
xor
inc
js
inc
jmp
inc
rcrl
or
aad
mov
pushf
lcall
or
fcoml
add
jp
shlb
jo
sub
sbb
xchg
lods
leave
stos
sbb
add
outsb
lods
cmc
or
mov
mov
movsb
lock
movsl
push
jmp
dec
aam
mov
or
out
add
inc
push
mov
pop
aad
mov
push
ss
outsl
mov
xor
inc
fwait
push
and
cmpsb
cmpl
aam
push
data16
xchg
mov
pop
in
inc
cli
in
cmp
mov
sub
mov
stos
mov
ss
outsb
adc
xchg
js
or
dec
mov
jae
lock
and
sub
or
inc
cmpsl
and
cs
push
mov
out
es
outsl
in
sub
stos
pop
dec
fistpll
lahf
stc
sbb
movsb
in
inc
sbb
sub
jae
push
outsb
push
jmp
add
pop
movb
inc
pop
pop
jnp
cli
mov
aam
inc
add
pop
dec
cmp
sbb
stc
or
cmp
mov
cwtl
and
jg
mov
scas
jle
paddusb
inc
add
insl
xor
push
add
xor
cmp
sub
and
andb
shrl
mov
xor
dec
out
jmp
adc
adc
cmp
lcall
pop
out
mov
xor
loop
cld
dec
stos
mov
sub
lds
shrb
dec
repnz
cmp
inc
mov
cltd
shlb
in
push
add
mov
xchg
adc
pusha
dec
push
loopne
je
push
pop
pusha
outsl
adc
xchg
cs
test
or
push
mov
and
cli
xor
jbe
mov
cmp
jo
jae
js
cmp
sti
push
adc
xchg
dec
es
sub
incb
mov
cmp
adc
push
sahf
gs
scas
faddp
pushl
mov
mov
jmp
lret
out
out
jecxz
sub
mov
mov
sbb
inc
adc
xchg
push
ss
sub
push
mov
stos
inc
popa
and
cwtl
fptan
daa
mov
or
into
pop
xchg
cmp
dec
xor
jge
mov
jns,pn
mov
jp
mov
dec
jmp
bound
and
adc
mov
repz
rcrl
xchg
daa
sahf
mov
mull
pop
mov
xchg
jp
stos
dec
xchg
ss
jbe
push
cmpsl
pop
loopne
ss
sub
cmp
insl
mov
testb
faddl
loop
enter
faddl
or
int
repz
addb
xchg
lock
sub
push
xor
ficoml
or
xor
jne
cmpsb
ds
sbb
incb
xchg
xchg
mov
cmp
cmpl
sub
sbb
pop
fcmovnu
xor
sahf
sub
loop
cli
cli
inc
adc
mov
pop
dec
pop
add
dec
and
and
push
shll
negl
push
arpl
and
ss
adc
and
pop
and
xchg
xor
cmpsl
sbbl
repnz
pop
das
mov
jp
in
subb
imul
dec
test
push
push
rcll
mov
lods
mov
aam
enter
pop
xchg
cmp
cwtl
and
mov
sar
mov
mov
popa
lock
mov
hlt
add
jne
dec
iret
cmp
dec
add
and
into
cmp
repz
ret
sbb
adc
sbb
lahf
lods
and
pop
fdivp
inc
out
lock
push
inc
cmp
dec
dec
sbb
call
jnp
dec
lods
fstpl
sbbb
push
aas
stos
xorb
rorl
stos
int
or
xchg
hlt
mov
mov
leave
xchg
popf
pop
mov
cmp
mov
addb
mov
sbb
rorb
popf
sbb
into
cmp
loopne
adc
xchg
adc
push
fsubl
pop
push
imul
sub
pushf
int3
cs
mov
mov
lcall
mov
xchg
add
adc
jo
dec
mov
mov
cmp
aas
lahf
sbb
sbb
jmp
mov
insb
shrb
or
xor
mov
pop
xchg
fwait
sub
mov
lcall
dec
adc
add
pop
pushf
xor
js
fldl
inc
pop
leave
jns
xchg
aam
orb
pop
pop
push
sbb
jl
push
rcl
mov
sti
jnp
out
add
jb
mov
or
inc
cmp
out
out
cmpsb
xor
inc
xor
std
mov
repnz
sbb
inc
add
cmpsb
and
shlb
icebp
arpl
pop
pop
fwait
out
mov
pop
mov
push
xchg
cwtl
dec
cmpsw
scas
int3
mov
mov
or
shll
mov
fst
xchg
sbb
imul
push
sub
cmpsb
mov
mov
test
in
jno
or
aad
cmp
jb
mov
mov
dec
es
lcall
outsb
dec
loope
stc
repz
andb
dec
adc
push
mov
push
cwtl
xchg
jle
mov
pop
or
insb
dec
lds
scas
mov
add
ficomps
dec
fstpt
cmpsb
pop
xor
inc
les
pop
jnp
pop
ret
add
cmp
lds
test
std
loope
cmpsl
and
mov
mov
cmp
mov
push
mov
cs
add
push
js
jmp
mov
lods
xchg
bound
or
jg
stos
rcrl
sbb
mov
out
lods
fdivs
jmp
out
cld
xchg
scas
sahf
add
pop
popa
push
repnz
fmul
sti
lods
enter
hlt
push
xchg
das
stc
cli
nop
movl
fwait
ss
lret
mov
shlb
aaa
add
mov
fwait
cli
aaa
lcall
test
test
mov
aas
inc
loop
sub
push
fdivrs
mov
ja
jae
ret
dec
push
cltd
out
sti
add
cltd
xchg
mov
adc
xor
pop
shrb
jle
mov
addr16
add
sbb
je
mov
xchg
insb
mov
xchg
pop
inc
cmc
insb
dec
lods
add
jo
mov
pop
mov
cmp
out
nop
lock
loopne
popa
and
lret
and
push
rcrl
inc
aam
inc
movsb
test
sar
mov
jnp
xchg
hlt
adc
lods
in
ret
lds
add
xlat
lods
dec
xchg
imul
mov
mov
fwait
incl
sub
sub
pop
aas
jge
movsl
xor
sti
fucom
xchg
mov
mov
pop
add
mov
in
mov
dec
xchg
cmp
and
push
loopne
out
insb
push
cmp
lret
adc
orl
cltd
jb
xlat
xor
jg
pop
shlb
in
sbb
pop
jo
icebp
jp
xchg
movsb
lods
rorl
mov
sub
jl
pop
out
or
icebp
cmp
jle
add
dec
fwait
inc
mov
es
repnz
jmp
shl
sbb
stc
orl
cwtl
add
jbe
cmc
fistpl
push
xchg
xor
jg
loop
fs
int
adc
pmaxub
mov
outsb
jg
push
push
cwtl
sub
add
or
stos
inc
pop
test
sbb
sarl
sub
fidivl
cmp
sub
ret
ret
push
adc
cmp
cmp
shlb
imul
in
and
mov
or
sbbb
xor
scas
jecxz
sahf
fdivrp
loope
lahf
arpl
fcoml
cmp
mov
out
loopne
fwait
xchg
xchg
daa
outsl
mov
and
push
std
call
insb
jo
mov
mov
cmp
push
mov
stc
sar
test
hlt
pop
cmpsb
sub
insb
xchg
sbb
ret
mov
xchg
lock
arpl
pusha
dec
loopne
xchg
arpl
add
jno
and
jecxz
out
sahf
pop
sbb
daa
outsl
push
ret
jnp
inc
mov
add
bound
mov
mov
mov
push
shrb
shrl
aas
sub
push
pop
cltd
mov
popf
filds
pop
pop
dec
fwait
ja
push
xchg
push
mov
addr16
in
jb
and
sbbl
push
pusha
jnp
or
jno
mov
jle
loop
out
notb
stc
lods
mov
mov
ds
pop
jg
xor
dec
idivb
add
adc
bound
insl
and
push
adc
js
imul
sbb
pop
cld
xchg
push
jo
add
dec
fdivl
out
jecxz
movsb
xor
inc
cmp
mulps
and
stos
ret
cmp
data16
or
sbb
mov
popf
pop
fwait
mov
scas
in
in
mov
pusha
aaa
xorl
fmul
sub
pop
jmp
outsb
xchg
dec
xchg
pop
push
cmp
jbe
add
cmp
fdivrs
bound
push
jbe
mov
xchg
mov
movb
push
xchg
insb
push
or
mov
shll
pop
in
cmp
mov
cmp
lret
push
inc
pop
loope
repz
mov
mov
ror
enter
or
mov
stos
test
int
loope
xor
cmp
outsl
dec
xchg
test
xchg
inc
scas
pop
inc
sbb
sbb
aam
pop
sti
popf
or
fwait
lret
fadd
xchg
in
in
push
arpl
imul
or
adc
mov
or
cmpsb
mov
add
adc
push
pop
lret
mov
xor
inc
jge
in
lahf
push
and
jge
arpl
or
stos
pop
jo
sub
fstps
int3
orl
xchg
enter
push
dec
adc
imul
mov
call
add
inc
ds
andb
xor
adc
cld
sub
rcl
ss
pop
xchg
lock
loop
jbe
xchg
mov
dec
test
push
cs
test
into
mov
xchg
and
push
movsl
mov
data16
jmp
dec
push
jp
ja
ret
xchg
andb
xlat
add
in
lods
and
add
hlt
dec
shl
outsb
dec
jae
mov
hlt
xchg
mov
push
lods
inc
cmp
pop
xor
cltd
adc
sbb
cld
lret
cmp
mov
xor
bound
mov
aam
push
xchg
push
jl
and
mov
stc
xor
mov
xchg
in
mov
scas
push
ljmp
lods
sub
stc
sbb
aas
int
sbb
addr16
cmp
lea
inc
cmp
pop
stos
loope
mov
loopne
sahf
jae
pop
movsb
test
mov
lds
aas
mov
add
mov
inc
repnz
mov
mov
pop
lahf
jno
fcompl
xor
cmp
xchg
cmp
lret
push
jne
cmp
xor
shr
les
int
pop
sbb
fs
scas
xor
inc
int
add
movsl
lcall
cmp
sub
mov
les
and
cmp
jne
jnp
mov
les
arpl
in
sub
aaa
mov
test
push
mov
push
ljmp
mov
imul
int3
popa
scas
insb
lcall
mov
lcall
and
movsb
lods
mov
mov
shlb
movsb
imul
fldln2
loopne
data16
les
addl
lret
bound
pop
hlt
ret
sub
mov
add
inc
sub
mov
aas
and
add
sbb
add
ror
popf
and
aas
push
test
dec
add
cli
add
push
add
mov
test
pop
daa
rcrl
outsb
scas
insb
add
push
cs
fisubl
pop
popf
pop
mov
or
sti
pop
lods
add
mov
ja
inc
or
fmuls
mov
fsub
arpl
andb
jg
sbb
sbb
mov
and
cmp
js
sbb
in
pop
inc
test
mov
ffree
ja
sbb
lahf
inc
push
mov
out
setbe
pop
andl
inc
mov
jns
mov
add
shll
mov
rclb
insb
lock
test
fsub
cs
movsl
sub
shll
lahf
ljmp
mov
dec
insl
lcall
das
fsubl
jbe
dec
cmp
xlat
push
push
ret
push
stos
aaa
inc
sbb
dec
mov
test
cli
faddp
jp
cmp
sub
test
scas
sub
lcall
outsb
xchg
xchg
mov
dec
inc
mov
xlat
test
pop
and
ja
mov
andb
in
es
lahf
mov
out
cmc
xor
sub
mov
xchg
leave
jnp
popf
mov
add
cmp
xchg
out
mov
jmp
jp
add
sub
ljmp
cmp
je
les
inc
loop
jl
jne
pop
push
arpl
pop
xchg
into
or
lret
mov
sbb
mov
fsubrs
mov
into
pop
pop
dec
adc
icebp
mov
fisubs
std
xor
xor
call
les
stos
lret
inc
in
test
push
xchg
pop
out
and
jb
imul
out
lods
mov
flds
push
imul
dec
loop
sub
dec
xor
shl
in
jb
fs
cmp
into
scas
dec
sub
jo
cmpsb
popa
mov
pusha
xchg
jnp
dec
pop
nop
sti
mov
mov
inc
and
jno
adc
push
sub
adc
popf
les
orl
cmpl
test
imul
mov
stc
mov
fbld
xor
push
pop
cmp
dec
daa
mov
add
add
mov
adc
popf
js
mov
cmpsl
pop
lahf
cwtl
ds
mov
xlat
stos
fistpl
std
xor
and
sub
fcomps
mov
jge
cmp
push
fildl
cmp
jnp
sbb
mov
mov
mov
movsb
outsl
cs
sbb
jmp
mov
stc
fmul
mov
or
shlb
arpl
test
das
and
rorl
pop
scas
xchg
inc
pop
shll
sub
mov
sbb
and
jb
adc
and
sub
adc
ret
push
cmp
ja
and
xor
xor
add
inc
cltd
xor
sub
into
cwtl
jb
jbe
fistpl
sbb
push
loop
test
xchg
add
loopne
mov
movl
cmc
inc
icebp
loop
sarl
das
cmp
xor
jp
inc
mov
fcmove
mov
je
mov
and
xchg
dec
mov
shll
scas
ret
repnz
or
cli
aaa
push
pop
pop
cmp
sub
mov
mov
pop
leave
adc
jmp
sbb
mov
test
int3
fstps
cltd
pushf
sbb
sbb
vshufps
xchg
xchg
cld
xchg
mov
enter
loopne
sub
push
xor
inc
js
sub
es
sub
inc
arpl
sahf
sar
pop
fiadds
repnz
fwait
sahf
cmc
call
xor
or
or
add
jns
hlt
out
movsb
add
or
adc
inc
test
mov
xchg
in
xor
clc
pop
jae
enter
cmp
dec
sbb
push
jle
repnz
shlb
and
jnp
mov
jo
jg
call
out
divl
mov
imul
xor
fdivrs
mov
outsb
jmp
in
notl
outsb
out
in
adc
push
adc
insb
inc
sahf
or
jecxz
subb
jmp
sub
jo
add
fstpl
inc
dec
or
xchg
pop
lcall
loop
and
or
mov
adc
jge,pn
cmp
inc
push
rcrb
sub
pushf
push
or
cmp
shr
cltd
divb
dec
xor
mov
xchg
in
hlt
sbb
mov
mov
add
push
icebp
iret
pop
jb
popa
push
cmp
xchg
sub
mov
jle
nop
subb
push
cmp
ret
cwtl
push
ss
cld
popa
or
lea
ljmp
xlat
lods
ja
mov
repnz
subb
enter
hlt
nop
mov
mov
push
dec
leave
and
rcrl
or
jns
lahf
mov
adc
xchg
fidivs
inc
mov
pop
mov
scas
mov
jne
adc
adc
add
mov
pop
jnp
xor
arpl
lret
xlat
inc
out
outsl
and
push
imul
test
mov
lods
sbbl
ds
es
in
gs
loopne
pop
cwtl
fists
push
push
imul
aad
ret
mov
add
lcall
sahf
int
std
mov
negb
jno
xchg
mov
dec
push
loop
flds
fildl
outsl
fildll
popf
or
in
pop
xor
scas
mov
or
pop
xchg
jb
mov
sbbb
pop
cwtl
pop
sahf
popa
mull
lret
adc
jp
jno
jae
and
stc
sahf
mov
mov
xchg
fwait
xchg
pop
adc
push
popa
popf
bnd
test
stos
or
cld
sbb
rcrb
dec
mov
fmull
pushf
cltd
mov
jp
loope
data16
stc
push
fucompp
shl
enter
sar
sub
sub
cld
dec
cld
mov
aaa
mov
inc
xor
sarb
ss
pop
xchg
out
into
enter
fistps
in
call
inc
push
shll
inc
and
cmp
dec
push
inc
in
arpl
mov
repnz
leave
faddl
aad
das
pop
jbe
lock
push
mov
lock
hlt
les
sub
js,pt
sub
lea
fdivp
repz
mov
rorl
dec
dec
loop
mov
pop
fnsave
js
cmc
int3
cltd
ljmp
lcall
mov
cltd
loopne
mov
mov
mov
fwait
lcall
push
scas
push
mov
xchg
dec
adc
or
ret
das
ret
sub
or
cwtl
out
fidivs
gs
jbe
sbb
and
dec
mov
out
outsb
add
adc
sub
mov
into
adc
inc
test
jp
ret
or
fcompl
fs
scas
inc
in
or
and
push
pop
dec
or
pop
scas
add
movsb
movsl
leave
adc
inc
mov
sbbl
and
adc
xor
jno
insb
in
dec
icebp
inc
mov
add
xchg
cmpsl
test
or
stc
imul
out
ja
adc
pop
sahf
in
call
add
leave
pop
sbb
outsb
inc
lcall
cmpsb
push
xchg
push
xlat
inc
sbb
jl
ja
rolb
lcall
jno
out
dec
adc
call
cli
nop
scas
repnz
mov
cmp
cmp
xlat
or
or
or
fnstcw
push
jne
mov
popa
or
dec
sbb
and
into
sbb
jmp
push
jle
sbbl
mov
mov
fwait
mov
sbb
cs
xlat
pushf
fldt
scas
stos
iret
repnz
sarl
mov
add
cltd
adc
mov
push
xchg
movsb
out
or
cwtl
adc
int
mov
out
arpl
sub
ljmp
fs
cli
lret
cmpb
subl
push
xchg
test
jecxz
mov
push
cmp
pop
jo
cmp
pop
push
stos
inc
mov
cmp
push
arpl
mov
mov
sub
fcmovne
scas
cmp
jp
cwtl
xor
les
mov
xchg
pop
cld
and
jo
addr16
mov
lahf
pusha
mov
iret
xchg
mov
xor
int3
jecxz
mov
outsl
mov
leave
mov
xor
and
ret
push
popf
and
adc
mov
mov
xchg
adc
sbb
lods
mov
jb
dec
xchg
and
insb
or
cwtl
and
jle
cmp
jmp
jecxz
rclb
cwtl
mov
mov
mov
xchg
mov
or
test
pop
sbb
out
pop
mov
xchg
mov
fnstsw
jle
in
xor
jae
xor
cmp
loope
test
fcmovbe
pop
sub
int3
xor
addb
gs
out
fisubrs
mov
mov
mov
aad
add
push
adc
mov
and
dec
cmp
push
test
sar
xor
aas
xor
cmp
jb
and
xchg
sub
fs
test
push
repz
push
cmp
movsb
jge
adc
mov
int3
mov
pop
stc
jg
out
shlb
in
les
add
cmp
call
dec
dec
cmp
sbb
ret
movsb
lcall
shrb
mov
repnz
or
pop
mov
loopne
and
xchg
or
push
and
dec
xchg
jne
inc
push
aaa
pop
out
mov
inc
pop
gs
lods
lahf
jo
mov
jnp
sbb
in
mov
sbb
push
in
push
lods
mov
xor
cld
data16
jge
fbstp
xchg
sub
jle
xor
dec
pop
mov
mov
shrb
repnz
loopne
or
cld
pop
and
pusha
iret
xchg
ret
fists
scas
stos
pop
shr
in
jmp
imull
test
mov
sbb
dec
shl
jne
lahf
dec
xlat
add
cmpsl
xor
je
iret
add
adc
and
xlat
fidivrl
and
add
imul
and
xlat
jl
xor
xorb
dec
dec
popa
jmp
xchg
inc
xor
mov
insl
rcrl
inc
xchg
pop
push
mov
mov
das
test
xchg
and
cmc
push
jl
scas
insl
dec
adc
pop
or
add
stc
mov
sub
sub
mov
subb
outsb
jb
test
lock
or
xor
xor
aaa
movsb
in
fildl
xchg
lods
mov
rcl
popl
xchg
mov
jg
xchg
insb
in
pop
sbb
dec
scas
inc
jo
lods
adc
sbb
repnz
sub
and
push
sti
bound
lahf
lods
jae
outsb
outsl
mov
and
mov
cmp
push
pop
sub
cltd
adcb
mov
pop
iret
jmp
nop
rcrl
or
imul
sub
fisubrl
fsubs
dec
je
addr16
jl
mov
movsb
iret
ret
push
and
dec
jge
and
aad
or
ds
dec
std
push
es
or
dec
lods
arpl
sub
sbb
xchg
movsl
daa
jmp
lcall
jecxz
mov
cwtl
cmp
hlt
xorl
sbb
movl
pop
bound
ror
xchg
dec
sub
push
mov
sbb
add
repz
shld
sarb
push
mov
sbbl
xor
or
mov
sbb
jecxz
pushf
dec
dec
jg
add
shrb
pop
loop
fnstsw
stos
nop
rcl
mov
leave
push
shlb
mov
shl
adc
dec
sub
and
adc
jle
loopne
cmpsl
or
leave
sbb
mov
mov
shrl
jns
ds
in
push
cmp
faddl
jns
dec
lock
adc
mov
dec
xchg
in
jb
mov
js
data16
in
jg
sbb
out
dec
notl
mov
loopne
pop
addl
inc
inc
xchg
inc
sbb
pop
aam
jle
and
xchg
sbb
jmp
mov
mov
pushf
outsb
sub
mov
push
lods
add
pop
sbb
lods
jns
and
hlt
mov
test
jmp
inc
in
mov
mov
xchg
dec
inc
jns
mov
push
int
push
lods
sub
push
mov
roll
leave
loopne
mov
cli
insl
aas
outsl
test
jno
xor
insb
jno
mov
jne
mov
sarl
fidivrl
incb
sbb
popa
ss
jl
sbb
mov
or
adc
or
stos
sub
sbb
fisttpll
addr16
xor
sbb
xor
int3
mov
xchg
and
or
mov
and
jg
xlat
test
cmp
adc
imul
in
enter
cmp
rolb
cli
add
xchg
movsb
xchg
sbb
sbb
cmc
dec
int3
mov
inc
shlb
fcom
call
jl
mov
arpl
dec
mov
xchg
cmp
cmp
and
iret
or
ficomps
popa
jle
cld
cld
js
in
loopne
shl
lods
mov
push
fpatan
sub
mov
pop
in
into
rolb
inc
pusha
jge
add
scas
xor
pusha
dec
sahf
fmul
aaa
arpl
mov
or
push
jnp
fnstenv
xor
push
call
movsl
push
adc
rcrl
cmpsb
jmp
cmpb
testl
mov
xchg
sbb
ficoms
pop
jnp
cmp
mov
enter
cmc
sbb
pop
imul
jecxz
add
cwtl
dec
cli
notb
fcmovnu
movsb
mov
fldpi
and
insb
sbb
sub
dec
mulb
dec
das
fbld
test
loopne
callw
ljmp
int
sub
pop
sbbb
std
jg
mov
adc
jbe
pop
std
mov
mov
aas
dec
into
inc
xchg
xchg
cmpsl
xchg
hlt
push
mov
add
add
test
mov
or
adc
pop
popa
jmp
fxam
sub
dec
test
cmc
pop
loopne
mov
mov
xlat
sbb
mov
ljmp
sbb
fcoml
into
sarb
aad
sub
inc
and
push
push
ljmp
test
mov
fwait
adc
out
rcrl
test
xchg
mov
pop
jp
pushf
pushf
push
stos
dec
cmp
andb
push
pop
stc
leave
push
adc
sub
nop
insl
in
jmp
testb
sub
sub
es
and
push
test
out
mov
cmpsb
xlat
sub
fwait
mov
cmc
into
push
lcall
frstor
pop
push
ficoml
push
cs
sub
mov
cmc
mov
adc
dec
scas
xchg
in
cmc
jnp
push
push
fwait
outsb
adc
xchg
aad
cwtl
jp
es
ficoms
inc
dec
inc
aad
or
xor
jp
stc
mov
psubb
outsl
scas
xor
ss
push
fcmove
fbld
into
mov
ds
insb
xchg
xor
pop
addr16
leave
cmpl
int3
pop
popa
sbb
loopne
xchg
cmpsl
push
push
jl
nop
mov
cmp
xchg
fistpl
or
out
jb
cltd
imul
lret
shrb
mov
inc
push
xor
mov
sbb
mov
addl
shlb
arpl
lea
mov
mov
push
addb
mov
xor
mov
js
mov
pop
adc
mov
incl
test
lock
lret
mov
fincstp
dec
lods
aam
mov
sbb
dec
icebp
mov
push
bound
test
mov
mov
mov
jmp
push
mov
popf
sahf
cwtl
lcall
sarb
sub
pop
ja
cmp
sub
mov
iret
cld
mov
adc
pop
lds
idivl
fs
mov
jp
add
rolb
or
test
mov
pusha
hlt
stc
cmpsl
loop
pop
mov
add
jle
cmpb
xor
sbb
xchg
dec
iret
shll
add
sub
pop
mov
push
sbb
icebp
and
pop
loope
mov
dec
xor
js
push
inc
push
inc
dec
and
xchg
popa
inc
or
mov
nop
mov
subb
cli
stos
js
push
movsb
sarl
push
push
jb
xchg
hlt
cmp
divl
xchg
jno
and
es
xor
aas
in
adc
call
por
ds
sbb
loop
xchg
inc
jmp
pop
scas
cmp
xlat
jo
jbe
dec
cmp
cmpsb
sahf
rorb
jg
mov
loopw
mov
xchg
adc
cmpsl
out
nop
adc
repz
aad
and
mov
jl
push
aas
mov
inc
cmp
mov
jae
imul
ss
dec
push
jg
ret
call
ljmp
adc
aad
ret
push
add
jns
movl
xchg
dec
and
add
jle
mov
movl
aam
mov
and
mov
out
add
and
rcrb
jl
enter
xor
out
in
loopne
and
daa
adc
jae
shrl
push
sub
sbb
adc
mov
ja
inc
or
cmp
mov
daa
mov
pop
mov
or
jecxz
outsl
inc
push
adc
iret
ja
sub
lods
adc
gs
xchg
xor
scas
icebp
mov
lret
sub
and
sub
xchg
jecxz
stc
lods
std
icebp
push
dec
dec
arpl
aas
ljmp
jle
xchg
pop
mov
in
ficompl
inc
rorl
cmpxchg
lock
add
xor
nop
out
mov
sub
ret
popf
stos
mov
scas
xchg
ja
aam
subb
add
aas
jbe
mov
cltd
mov
lea
dec
ret
mov
insb
clc
frstor
or
jmp
shrb
mov
inc
sub
dec
fidivrs
movsb
call
mov
leave
xor
call
stc
gs
sub
cmp
jbe
fs
mull
jae
lock
push
imulb
aad
dec
and
add
and
in
cwtl
cmp
fcoms
push
loop
iret
popa
cltd
jmp
cli
mov
push
lods
sti
enter
cmp
adc
add
mov
sub
stos
sbb
cmp
shrb
sbb
sarb
push
mov
mov
std
insl
push
sub
sti
push
sub
in
mov
enter
and
jnp
cmpl
dec
mov
js
mov
imul
jnp
or
cmp
aam
fcmovu
popf
mov
sub
mov
push
cltd
adc
lods
loop
mov
movsl
les
popa
jnp
rcrb
add
xchg
cmc
stos
adc
adc
sti
in
sbb
outsb
jbe
mov
mull
insl
hlt
stos
jae
leave
pop
and
lret
xor
mov
push
mov
bound
pop
mov
lock
xor
jns
xchg
ds
mov
bound
jo
or
jp
sub
sub
pop
inc
jmp
sbb
pop
mov
add
xor
xchg
andl
push
repz
sub
jmp
add
jnp
dec
aas
adc
push
inc
lcall
mov
int
hlt
push
test
push
dec
movsb
mov
sbbl
sub
mov
nop
xchg
cmp
imul
mov
ja
not
pop
cmc
mov
jae
sbbb
mov
jbe
fs
movsl
push
xchg
jge
and
scas
test
inc
nop
or
fld
or
mov
cmp
and
jno
push
cmp
jmp
mov
neg
cld
pusha
and
out
lret
add
in
lds
mov
test
mov
cmpb
jne
cmp
ds
cltd
mov
mov
and
insb
sbb
loop
xlat
mov
mov
or
xor
mov
jns
mov
jne
and
hlt
inc
divb
xor
jmp
loop
out
sbb
jge
or
nop
fmull
jo
int
xor
mov
pop
mov
pop
jmp
cmp
jnp
cld
test
add
in
pop
inc
lock
stc
mov
push
test
in
mov
fnsave
add
call
inc
push
dec
cmp
and
xchg
adc
rol
push
lcall
xor
pmuludq
and
scas
lcall
jne
cli
push
cmpsl
mov
idivb
loopne
insl
icebp
and
sbb
fdiv
aaa
mov
lock
lds
push
mov
add
cmp
mov
adc
int
aad
mov
or
push
cwtl
cmp
into
push
mov
fsubrp
sub
stos
icebp
add
xor
push
scas
inc
xor
mov
sub
pop
pop
jmp
es
xor
rorb
push
js
push
xchg
lret
jecxz
sbbl
aad
mov
adc
stos
jo
sbb
lods
mov
push
fdivs
push
aas
popf
dec
shlb
shlb
add
cmp
xchg
lods
jle
sub
push
mov
mov
in
icebp
cli
mov
fistpl
lods
dec
mov
dec
pop
pop
popf
xchg
in
daa
add
xchg
cmpsb
and
push
jb
ret
std
dec
movsl
das
sbb
or
jnp
jns
mov
push
sbb
mov
cmp
inc
or
lret
test
subl
add
push
inc
adc
daa
mov
xor
int3
rcrl
addl
ljmp
sbb
mov
arpl
shlb
add
cmp
xchg
cmp
pop
aam
and
lods
pop
fistl
sbb
push
cmp
xchg
add
sub
inc
mov
cld
adc
mov
push
fcomi
mov
sub
imul
xchg
rcll
push
sub
scas
lret
dec
inc
aaa
cmpl
cmp
dec
sub
out
mov
cmpsb
pop
out
insb
sbb
and
xor
js
movsl
add
popa
scas
jns
sbb
rol
jge
ret
cmpsl
xor
mov
push
mov
aas
outsl
mov
mov
inc
add
mov
lods
mov
cmp
hlt
sub
call
pop
xor
jle
loope
adc
pop
add
push
inc
xlat
lret
push
arpl
adc
lahf
add
xorl
cmp
mov
jp
push
inc
add
pop
mov
add
test
xor
popa
pushf
adc
leave
push
rolb
jp
inc
push
mov
xor
fs
daa
mov
and
push
lods
out
mov
imul
sub
xor
jno
cmpsl
es
insl
adc
xor
in
push
inc
loop
sbb
inc
adc
cmpsl
dec
iret
pop
pop
lods
call
sub
jp
mov
cmp
sub
or
sub
sbb
rolb
inc
and
jp
xchg
xchg
jmp
out
pop
mov
and
sbb
pop
sbb
and
add
mov
jp
sub
dec
xor
stos
pop
les
sbb
hlt
test
in
inc
movsb
mov
lea
pop
sbb
loopne
jmp
sti
in
call
dec
std
into
mov
out
test
je
or
mov
pop
call
jbe
push
fprem
test
outsb
push
lock
fidivl
xchg
mov
fstpt
lds
or
divb
xorb
loopne
data16
cmc
cs
sti
notb
mov
lods
test
adc
das
das
inc
movsb
fistpll
dec
sub
and
ljmp
adc
pop
shl
cwtl
or
movb
xchg
xor
cli
xor
mov
in
inc
pusha
jb
mov
out
js
in
ljmp
sbb
ja
js
arpl
xor
xor
xchg
mov
xlat
or
sub
or
xor
imul
out
push
sub
inc
scas
fidivs
ret
xorl
jl
andl
imul
sub
stos
pusha
add
lret
ss
and
push
pop
clc
push
jg
fdiv
inc
xchg
andb
shr
lret
pop
push
mov
xchg
sahf
rclb
iret
cmpsl
dec
xchg
dec
test
push
bound
push
andb
popa
movsl
xorb
test
cmp
sub
mov
jo
jnp
test
in
out
ja
and
jns
jmp
cmpl
sahf
fbld
sbb
push
shrb
push
cmpsl
cmp
pop
cmc
fcomi
jg
mov
lahf
jo
repnz
adc
cmpsl
sub
fisubrl
or
cmc
mov
je
mov
lods
sub
std
xor
xchg
leave
test
mov
mov
xchg
aam
outsb
addr16
xlat
repnz
jg
loop
repz
fwait
pop
aam
cwtl
push
jae
pop
insl
add
push
sti
pop
cli
sub
mov
or
pop
daa
test
jmp
movsb
jmp
lods
mov
xchg
mov
dec
mov
sbb
mov
push
and
call
xchg
loop
or
mov
cmc
gs
sub
test
into
ja
daa
adc
ja
outsl
xor
mov
cs
js
ret
rcll
sub
int
xchg
pop
or
jg
mov
ret
mov
xchg
loopne
cmpsb
sbb
movsbl
scas
xchg
fsubp
std
movsb
cmc
jle
in
mov
sub
repnz
cwtl
fnclex
out
push
mov
inc
shll
xchg
jno
aas
jecxz
cmpsb
push
dec
sub
push
mov
push
in
mov
ret
test
and
aam
sbb
xlat
push
test
xor
sub
fiaddl
dec
in
jb
ljmp
out
fs
in
cmpsb
mov
into
xor
push
mov
xchg
add
sbb
jne
scas
out
mov
iret
icebp
arpl
mov
aaa
iret
mov
ds
inc
loopne
pop
mov
mov
mov
push
pop
ror
test
xchg
lret
lret
xlat
addr16
fnstcw
inc
inc
or
jp
in
movsl
jmp
icebp
jne
js
jmp
les
cmp
outsb
enter
and
mov
dec
fisubrs
decb
sti
fs
js
jae
addr16
mov
xchg
add
fucomp
xor
enter
inc
in
int3
and
xchg
sbb
lds
push
stc
xor
adc
gs
stc
dec
inc
jns
or
stc
loope
aam
or
loop
inc
outsl
push
stos
int3
or
mov
orb
pop
imul
pop
stc
data16
popf
xor
in
dec
andl
cs
mov
jecxz
sar
scas
pop
aaa
aas
mov
imul
or
lahf
in
pop
mov
les
leave
ja
mov
jg
and
loope
fisubrl
sub
repnz
mov
mov
push
push
mov
xchg
test
pushf
ret
xchg
push
inc
pop
in
in
xchg
adc
mov
loopne
jmp
cmpb
jne
lods
pop
push
sbb
aad
mov
push
pushf
dec
push
in
jnp
cmp
sub
out
fsubl
loopne
mov
movsl
inc
mov
sub
shlb
pop
sahf
xor
xchg
loope
int3
test
jns
lcallw
fdivl
sub
xchg
jne
cmc
out
fsubl
sahf
cli
stos
dec
sbb
lahf
int
js
shr
les
pop
xor
inc
fs
dec
ds
xchg
sbb
jns
in
mov
pop
mov
repnz
xor
xchg
dec
movsl
adc
mov
cmp
cmp
iret
cmc
cs
xor
pop
in
and
cmp
movsb
loop
and
sbb
push
mov
dec
out
int3
dec
arpl
leave
xor
xchg
xor
clc
call
stos
mov
enter
inc
inc
mov
clc
stos
mov
pusha
sub
or
subb
out
rep
dec
lods
push
push
cmc
out
insb
gs
xchg
push
mov
es
and
loop
repnz
push
dec
test
push
loopne
clc
fstpt
mov
mov
scas
nop
and
rcrw
xchg
add
pusha
jle
call
mov
jb
sbb
push
pop
push
dec
out
mov
jo
sbb
cmpsb
std
jnp
stos
int
xor
adc
cmp
xchg
lods
stos
xor
inc
push
adc
and
clc
js
inc
mov
mov
clc
popa
jae
jecxz
in
stos
push
fisubs
ret
pop
pop
cmp
in
or
dec
sbb
clc
scas
mov
sbb
std
cli
pop
adc
sarb
and
cmp
cmp
testl
mov
and
loop
stc
clc
loopne
jmp
movsl
add
mov
stos
cmp
out
and
xor
and
add
jl
enter
dec
ret
add
into
fldenv
xchg
jg
ss
lods
fcoml
std
fwait
or
data16
adc
imulb
pop
adc
fsubrl
imul
test
mov
testl
cmp
sahf
in
inc
push
push
or
not
mov
shrl
pop
push
jle
cltd
add
xchg
in
pop
xchg
inc
fistpll
mov
or
stos
dec
cmp
mov
mov
test
into
mov
mov
xor
xchg
xchg
iret
pop
jne
add
pusha
jl
mov
nop
ficoms
cmc
in
insl
jg
add
jb
hlt
inc
and
mov
xor
adc
adc
jnp
jne
and
int
fcmovu
je
xor
inc
add
mov
sahf
sbb
mov
shl
xchg
inc
mov
vmptrld
mov
pop
sti
and
sbb
add
add
nop
test
std
mov
mov
and
lds
aaa
xchg
lret
jo
or
in
and
adcl
lea
dec
out
je
lret
lahf
jo
roll
bnd
lahf
push
and
xchg
add
mov
adc
pop
mov
pop
mov
les
fsubs
lcall
lods
ret
daa
jmp
mov
ss
xchg
fmull
cmp
ficompl
imulb
movsl
out
icebp
xchg
jbe
cmp
mov
xchg
iret
cmp
pop
jb
sbb
fwait
iret
clc
stos
js
lods
shr
in
push
pop
shl
mov
xor
out
bound
or
push
gs
test
int
pop
movsl
test
fcompl
mov
daa
push
jecxz
adc
ss
and
and
mov
dec
cmp
out
pop
pusha
pop
push
bound
cmp
int
inc
or
inc
sub
or
out
jecxz
mov
je,pt
in
dec
outsl
roll
or
and
insl
jae
xor
push
das
dec
ret
fstenv
mov
cs
pop
add
dec
mov
dec
cmp
xlat
adc
outsb
fldcw
icebp
fwait
adc
or
xchg
jmp
inc
push
jne
dec
jmp
jecxz
cmpsb
movsl
pop
stos
aas
add
scas
stos
lret
gs
rcrl
shll
inc
mov
cltd
sbb
test
mov
inc
test
jnp
jno
movsb
jo
outsb
rcl
mov
xchg
or
hlt
aas
xchg
test
in
xchg
das
cmc
addr16
mov
lahf
add
ja
loope
xchg
sarl
out
jle
push
stos
jg
mov
aam
or
lods
mov
adc
jo,pt
in
int3
xchg
xchg
aas
add
inc
notb
jno
jnp
fisubrl
pop
dec
sub
sbb
xchg
adc
push
leave
out
mov
push
mov
jl
scas
mov
ss
mov
ja
addr16
push
in
addl
jmp
cmp
mov
aad
lods
sub
sub
push
cmp
test
mov
sub
inc
cltd
jne
mov
or
push
scas
and
out
xchg
mov
cs
push
add
dec
mov
scas
add
daa
mov
xchg
xchg
test
les
sbb
and
mov
xor
xchg
sub
or
mov
and
cmp
push
adc
test
out
xchg
je
or
push
cwtl
hlt
loope
mov
repnz
cltd
mov
cmpsb
aad
and
fcoms
call
loope
push
mov
push
xchg
sbb
leave
fstpt
inc
es
adc
add
and
fmuls
mov
out
jne
bound
hlt
push
adc
inc
jle
mov
js
sarl
jl
andb
or
scas
xchg
lahf
repnz
mov
mov
movsl
rcl
xlat
sub
stc
pop
and
ret
ffree
test
stc
stos
sbb
das
dec
dec
add
iret
shr
jecxz
pushl
fnsave
jecxz
inc
int
cmp
pop
mov
stos
call
fisubrs
xor
lods
cld
xchg
sbb
addb
pop
push
xlat
or
push
ljmp
out
enter
mov
xchg
aam
jp
mov
test
mov
or
into
inc
xor
shl
addl
das
inc
mov
ja
fs
inc
add
inc
outsl
adc
push
xor
scas
xchg
lock
divb
and
cmp
cmpsl
lret
add
pop
xchg
inc
mov
sub
repz
adc
andl
sub
montmul
cmpsb
inc
shlb
jno
stos
out
mov
loopne
mov
inc
fcmovne
cld
dec
in
lods
mov
adc
clc
adc
dec
movsl
fldcw
or
mov
fcompl
push
ja
insl
test
cmc
bound
mov
adc
cltd
movsb
push
loop
testl
jl
and
inc
in
imul
fs
mov
xor
sbb
mov
enter
int3
or
jae
inc
sbb
dec
rorl
jno
mov
fs
addb
fwait
enter
xchg
cmc
jb
xchg
cs
mov
dec
data16
outsl
stos
outsl
cmpsb
das
jns
aaa
add
hlt
in
jns
scas
or
ret
jb
pop
push
sbb
mov
jecxz
push
in
mov
mov
jne
and
pmulhuw
jl
call
mov
loop
in
xor
iret
fidivl
mov
aaa
sub
stos
mov
pop
dec
hlt
hlt
out
shl
into
out
pop
push
pop
jle
xor
pusha
pop
jecxz
aas
icebp
sub
fucomi
cmp
mov
scas
mov
inc
in
aas
push
mov
adc
sub
icebp
movsb
mov
jp
imul
bound
cs
out
xor
call
cmpsb
ss
call
setnp
pop
jge
hlt
dec
add
or
outsl
flds
mov
mov
mov
jns
dec
push
cmp
jp
fwait
aad
jecxz
sbb
je
loope
stc
xchg
sub
dec
daa
cmp
jo,pn
jne
xlat
aas
cmp
dec
stos
shlb
inc
sbb
lea
sbb
or
stos
addr16
fcoms
adc
sbb
pusha
xor
mov
roll
add
jns
lahf
stos
xchg
xchg
push
mov
cltd
jns
inc
cli
movsb
push
pop
out
rolb
dec
mov
adc
lcall
sub
cmpsl
es
xor
daa
rcrl
jecxz
iret
mov
nop
add
xchg
mov
lods
call
ret
movsl
push
int
inc
pusha
mov
leave
sub
aad
das
jmp
fmuls
fists
xchg
jl
mov
sbb
stos
mov
mov
cwtl
sub
scas
cltd
lea
mov
out
push
pop
fbstp
push
loope
addl
xlat
cmp
subl
mov
or
lods
xor
loopne
movsb
add
js
add
xor
lea
imul
andl
fcompl
popa
sub
push
xor
scas
sub
fs
rorl
cmc
and
mov
negb
mov
jb
outsl
movsb
add
dec
loope
sti
in
sbb
inc
rclb
push
pop
insl
jp
adc
rol
push
les
cmp
cmp
mov
pop
mov
dec
mov
add
pusha
sbb
cld
cmc
into
mov
nop
xchg
les
lret
jmp
loopne
xchg
mov
pop
jns
cmp
push
outsl
cmp
jg
mov
clc
sahf
fstpl
mov
popl
ret
repz
cld
ss
adc
mov
jae
orb
int
mov
and
out
repz
jl
xchg
push
lret
out
dec
push
mov
inc
push
sbb
lahf
push
movsl
adc
loope
mov
icebp
pop
cmp
les
ljmp
jae
arpl
rolb
push
outsl
je
mulb
adc
shr
fildll
inc
into
lcall
or
rorl
cwtl
dec
adc
jge
push
shll
sahf
mov
pop
pop
icebp
sti
insl
cmp
and
or
add
in
cmp
xchg
imul
dec
inc
movl
data16
lock
je
mov
movsl
stc
xchg
xor
sub
in
xchg
fnstenv
xlat
xlat
jp
in
cwtl
loope
jae
pop
cld
aad
cltd
lret
cs
adc
push
incb
loope
ret
cmp
or
test
push
into
sbb
cmpps
xchg
mov
iret
pop
test
ds
add
sbb
in
mov
inc
lahf
inc
pop
jns
xchg
orl
mov
xor
xchg
jo
pop
jp
xor
sub
push
lret
mov
push
jmp
push
sbb
nop
pop
pop
dec
imul
or
add
insl
loop
mov
dec
pop
lcall
subb
dec
in
fisubrl
dec
cltd
and
adc
in
div
cwtl
or
push
dec
dec
mov
mov
push
mov
push
push
jge
pop
in
subb
dec
jle
mov
lods
and
and
subl
and
aas
jl
out
fwait
outsl
stc
sub
and
clc
lock
dec
lock
inc
ficoml
repnz
mov
mov
jae
xchg
xorb
insb
insb
addr16
repnz
cltd
or
lret
jb
ja
out
dec
push
ret
stc
and
iret
inc
dec
scas
jmp
mov
popf
mov
push
fldcw
cmpsl
push
out
inc
adc
ret
mov
mov
das
xor
lret
mov
pop
mov
xchg
inc
cltd
mov
lcall
push
push
jp
int3
xor
jae
inc
mov
lods
cmp
push
addr16
xchg
ljmp
adc
pop
jae
mov
ret
fisubrs
addr16
xchg
inc
in
dec
leave
mov
add
mov
ja
jmp
mov
mov
insb
adc
sbb
xlat
push
sbb
sbb
out
cwtl
lock
jnp
sahf
fldcw
hlt
xchg
mov
out
jne
cs
fildl
push
push
or
int
pop
xor
out
ret
ficoml
sub
cmp
loop
sub
movsb
cwtl
cmp
clc
dec
mov
and
add
lds
les
cltd
scas
aam
mov
jmp
subl
push
or
shlb
shll
fstps
repz
jecxz,pt
push
out
pop
jo
int
pop
test
pusha
mov
mov
sub
mov
sbb
pop
push
xchg
push
push
cmpb
sar
ss
mov
out
pop
lret
test
aas
rcl
orps
and
jae
adc
ret
nop
addr16
xor
dec
ret
stos
les
push
cmc
cmpl
mov
std
mov
sub
cli
pop
clc
scas
sti
jle
dec
test
push
out
scas
adc
out
xor
pop
or
push
jp
addr16
sub
sti
adc
je
ret
mov
addb
bound
inc
push
mov
out
push
fists
mov
stc
fisttpl
stos
add
in
shlb
out
not
or
mov
inc
outsl
inc
test
dec
movsl
je
and
insb
call
xor
or
call
inc
sub
sub
fsub
sub
lock
ror
dec
jmp
jmp
jae
fwait
pop
scas
xchg
pop
jbe
popf
enter
mov
mov
and
lret
out
pop
or
mov
dec
ss
lods
inc
xchg
pop
cmp
push
pop
mov
mov
cmpsb
xchg
inc
test
cmp
jne
and
push
mov
insl
pushl
repz
enter
xchg
jb
add
mov
cmc
cmp
adc
out
adc
and
movsl
jb
popf
push
dec
pop
add
inc
mov
lahf
stc
ds
pushf
cs
sub
mov
push
fwait
cmc
daa
test
cmp
mov
pop
scas
and
jp
cmp
lahf
mov
sub
jbe
xchg
fstp
mov
subb
pop
jo
incl
pop
andb
es
mov
cmp
sub
fs
sahf
adc
and
pop
sub
jle
rep
fsubp
pop
dec
shll
push
and
ds
cmp
jge
pop
leave
xchg
test
frstor
fistpll
je
adc
dec
dec
ficomps
loopne
cwtl
push
sub
mov
xchg
outsl
adc
jl
jno
xor
insb
mov
aas
push
out
popa
mov
fld
dec
or
adc
jne
cs
and
inc
mov
xchg
jbe
push
out
cmp
mov
outsb
xor
repnz
test
sbb
cmpsl
fsubrp
enter
addr16
bound
ss
or
pop
mov
jb
addr16
mov
test
enter
xchg
xchg
mov
in
clc
fisubl
xor
lret
pop
cmc
adc
xor
mov
outsl
lret
lret
lea
mov
test
addr16
shll
xchg
fildl
insl
ja
fwait
cli
pop
jns
in
roll
movsl
xchg
repnz
and
scas
pusha
xchg
push
cli
adc
push
aad
push
out
pushf
adc
js
push
out
cmc
dec
inc
jnp
xchg
jb
cltd
sub
xchg
xchg
push
idiv
leave
dec
hlt
out
push
adc
adc
shll
push
ret
mov
outsb
mov
pop
ss
xchg
pop
das
add
pusha
xchg
jne
lcall
mov
cmp
mov
xchg
jne
pop
iret
sbb
mov
lcall
cmpsl
stc
sbb
pop
fisttpl
push
out
jmp
shlb
push
shrl
mov
jp
jb
clc
es
or
dec
sbb
stos
out
imul
xchg
leave
xor
sub
and
dec
je
inc
dec
xchg
cli
dec
stos
push
fistl
inc
pop
iret
push
shlb
push
xchg
mov
es
mov
dec
adc
pop
popf
or
hlt
xor
mov
repz
cwtl
inc
gs
lcall
dec
lock
jns
and
add
add
push
xchg
cmpl
fwait
pop
mov
aam
sbb
arpl
add
std
test
cltd
ret
push
pop
mov
push
xchg
and
jnp
push
imul
fstpl
nop
out
in
aaa
xchg
lahf
test
pop
push
int3
insl
jmp
fcmovnb
ret
xchg
rorl
cmp
or
jae
sbbl
shll
xor
add
aam
mov
pushf
enter
jge
cld
loope
or
scas
cld
test
and
js
jmp
xchg
bound
clc
clc
sub
fdivr
insl
enter
push
leave
mov
ret
mov
insl
lods
cmp
mov
inc
cmp
lock
add
outsl
popa
xchg
hlt
fsubrl
das
xor
xlat
sub
pushf
or
ret
repnz
clc
es
push
popa
cltd
inc
xorl
lock
or
sub
push
sub
mov
add
cmp
sbb
out
push
repz
mov
xor
sbb
mov
jo
inc
mov
lock
jb
add
in
dec
xchg
sbb
mov
rcll
hlt
dec
rcrl
popf
cld
scas
jno
imulb
test
pusha
xchg
jle
out
cmc
repnz
mov
inc
loop
mov
xchg
mov
adc
daa
sbb
insl
cwtl
lret
sub
mov
jg
aad
jno
shl
or
cmp
mov
stc
nop
clc
jp
pop
inc
hlt
lea
jmp
sar
xor
fisttpl
repnz
or
jecxz
fs
sbb
jb
vmulss
dec
repnz
ret
push
int
dec
icebp
and
lds
jbe
mov
loope
pop
es
out
pop
lcall
inc
xlat
lcall
shlb
enter
fstpl
dec
imul
ficoms
mov
lods
xlat
aas
inc
add
mov
mov
sahf
xchg
fmulp
incl
nop
lods
push
mov
into
add
and
leave
subl
outsb
and
pop
cld
inc
cld
push
adc
xchg
sbb
xchg
xchg
ficoms
jbe
mov
xchg
xchg
iret
push
dec
mov
jl
fiadds
xor
test
push
add
insb
mov
insb
sarl
aam
push
push
mov
mov
pop
mov
inc
int
xor
adc
icebp
loope
fisubs
push
aam
stos
stos
add
test
leave
into
jp
mov
lcall
add
add
mov
jg
lahf
cmp
xor
xchg
mov
popf
pop
inc
and
lds
in
mov
mov
add
or
test
mov
push
pop
scas
push
inc
sub
cld
lock
cmp
aas
sbb
cmp
mov
mov
push
jg
dec
int
sarb
ljmp
cmp
add
adc
test
mov
add
mov
jo
test
add
push
jg
lods
mov
mov
add
xchg
mov
mov
add
mov
sbb
add
adc
sub
scas
lods
adcl
dec
mov
jnp
inc
xchg
inc
js
mov
inc
cmp
dec
and
add
cmp
fisubl
cmp
push
std
daa
imul
inc
push
mov
cld
idivl
cmp
inc
xlat
xlat
xchg
roll
mov
roll
or
sub
cli
push
inc
das
cmpsl
jns
je
push
pop
fcmovnb
pushf
and
movsb
mov
aaa
clc
aas
movsl
arpl
and
in
mov
jl
inc
test
mov
mov
push
pop
fcoml
fcomps
test
shl
shlb
je
imul
cmc
ret
sahf
jno
hlt
bound
xor
cmp
jmp
and
mov
push
jbe
jmp
push
cwtl
idivl
ficompl
decl
mov
mov
scas
popf
xchg
sbbl
ds
loopne
jmp
aam
cmpsb
lahf
ret
mov
add
mov
pop
movsl
test
xchg
push
or
sti
out
mov
sub
out
push
lods
sbb
lret
mov
mov
sbb
sbb
enter
xor
lret
lcall
mov
lahf
pop
lcall
lahf
pop
in
or
test
push
sub
cmpl
scas
insb
xlat
push
jb
dec
adc
cld
adc
cmp
add
repnz
aas
xchg
filds
out
fcompl
or
xor
repz
js
mov
ljmp
lods
mov
sbb
ret
xchg
jl
addr16
mov
hlt
cmp
lock
adc
in
jno
pop
sub
cmc
push
mov
aaa
mov
xor
addr16
test
push
dec
xchg
and
mov
push
clc
jmp
in
rcrl
mov
mov
shlb
pop
mov
add
xchg
sub
pop
xchg
sub
add
std
push
push
xor
xlat
push
mov
mov
jo
lcall
adc
inc
add
cmp
mov
inc
in
iret
jnp
push
push
fmull
dec
push
push
push
out
ja
adc
inc
xor
cs
in
dec
adc
and
fsts
int
push
sub
test
les
addl
int
adc
jbe
xchg
cwtl
sbb
xor
aas
cltd
xlat
mov
lcall
xchg
or
add
lcall
push
and
push
clc
mov
xchg
in
js
fisubs
xchg
cmpsb
push
rcll
pushf
aad
pushl
in
lock
popa
jmp
xchg
dec
out
dec
pop
push
rclb
ret
pop
mov
mov
out
inc
dec
sar
jp
and
test
mov
jg
jbe
pushf
xor
dec
movsb
mov
jnp
push
or
xchg
xchg
mov
lds
xchg
add
scas
ja
ret
adc
lods
dec
add
rdpmc
pop
lock
arpl
dec
movsb
pop
add
movsl
popa
mov
sbb
jmp
xor
inc
fnsave
test
mov
mov
test
pop
movups
mov
popa
hlt
imul
sub
jnp
push
sbb
je
mov
push
dec
mov
xchg
out
imul
inc
insl
mov
jl
xchg
lcall
call
sub
cmc
xor
bound
push
out
push
sub
mov
repnz
es
testl
cli
stc
inc
jae
xchg
popf
xor
dec
xchg
cmp
lret
xorl
jge
mov
enter
cmpsb
push
mov
xor
push
jbe
mov
sbb
cmp
xchg
inc
lea
ss
cmp
and
adc
and
loope
or
scas
dec
inc
push
cmp
push
pop
jo
cmpsb
int
xor
dec
clc
test
push
and
es
jno
cmp
cltd
lcall
fcompl
jge
jno
jge
jg
loopne
and
mul
jno
xchg
jnp
ret
dec
xor
addr16
xchg
xchg
loopne
cmp
or
test
in
mov
jp
mov
mov
inc
inc
mov
mov
inc
pushf
xor
or
xlat
fcmovnb
add
in
cld
mov
mov
mov
imul
xor
out
scas
scas
and
push
dec
inc
sti
mov
lock
jbe
mov
sub
xor
inc
mov
xor
pop
arpl
in
jbe
inc
push
lahf
test
cli
mov
test
stos
sub
sub
mov
adc
push
in
push
dec
insl
sub
mov
negl
int
push
bnd
cltd
bound
divb
and
mov
adc
sbb
imul
mov
in
sbb
data16
push
dec
in
lret
cmp
jno
add
push
orb
push
adc
scas
dec
icebp
sub
iret
dec
jl
push
inc
xor
test
cli
or
jo
mov
sbb
movsb
out
jne
push
scas
js
sub
clc
or
jmp
dec
int3
sub
sub
pop
pusha
jge
push
pop
cmp
pmaddwd
dec
push
sub
sbb
cmova
jbe
push
subb
les
enter
movsb
push
imul
call
cltd
cli
mov
mov
pop
pop
push
pop
push
mov
xor
jp
push
add
orl
push
out
lret
lret
dec
stos
pop
inc
aad
out
ficompl
subl
arpl
enter
pushf
enter
movl
sbb
xor
push
test
inc
sti
sub
pop
pop
push
or
push
add
jl
inc
mov
xchg
je
ljmp
push
cmp
or
mov
mov
movsl
pop
mov
xor
and
cld
lret
mov
in
push
mov
mov
aas
test
add
fwait
lds
clc
or
dec
add
mov
data16
clc
inc
cmc
push
inc
loopne
jo
push
nop
inc
or
cld
cwtl
jb
sub
mov
jne
and
rcrl
xor
inc
or
jne
mov
add
xchg
sub
mov
dec
fnsave
fisubrs
pop
pushf
cltd
sbb
lea
fldt
sub
andl
dec
lods
mov
sbb
call
inc
push
outsl
lock
lret
lods
dec
sarb
jmp
scas
push
pop
push
cmpsb
ficomps
popa
sahf
mov
pop
sub
push
mov
or
aad
pop
add
mov
mov
jbe
cmc
fcompl
pop
add
fdivl
fdivs
mov
ret
mulb
fdiv
lds
xchg
push
mov
fs
daa
add
cmp
and
inc
fnstcw
nop
xlat
push
mov
pop
push
xchg
cli
jbe
push
insb
jecxz
ja
add
sti
jge
sti
repz
jbe
paddsw
test
pop
cwtl
in
nop
inc
cmp
jl
sub
lret
mov
lods
sub
ds
fildl
popa
imul
xchg
les
sarl
jl
nop
stc
mov
sbb
rorl
and
ud1
std
in
sarl
dec
xor
push
jae
push
adc
scas
xor
adc
cmpsl
or
es
add
out
jp
loope
sbb
cli
cmp
cltd
sbb
and
data16
inc
scas
xchg
sbb
lds
sub
cmpsb
int
repz
notl
rcll
xor
leave
add
push
adc
sbb
fcompl
int3
cmp
insb
in
ds
mov
adc
test
dec
sbb
lahf
divb
les
cmp
aaa
cwtl
pop
sbb
xlat
mov
cs
xchg
cmp
pop
adc
movsb
and
xor
iret
xchg
insb
inc
les
pop
jmp
test
mov
sbb
iret
dec
ficoml
lahf
dec
cmp
movsb
pusha
enter
inc
shlb
fildll
pop
cli
xorb
leave
adc
inc
lea
sub
xor
loope
sub
call
out
mov
push
fcos
jbe
push
cld
push
lcall
sbb
mov
sub
push
or
and
sub
push
push
or
xchg
dec
orb
jno
push
xor
xchg
fmul
ds
out
iret
push
cs
adc
adc
fabs
arpl
adc
and
jbe
mov
in
cmp
into
lret
or
and
and
pop
fdivrl
shlb
loopne
mov
gs
sbb
sahf
lods
movsl
dec
mov
jno
data16
xchg
mov
pop
xchg
aaa
icebp
dec
iret
stos
movsb
or
decb
xchg
sub
aas
scas
or
std
mov
dec
xchg
aad
pushf
notb
in
inc
mov
mov
aaa
xor
bound
call
ljmp
in
jmp
test
mov
fwait
xor
cmp
les
in
push
subb
lret
adc
call
rcr
pop
cmpsl
xor
or
lods
andl
test
xchg
dec
ficoms
mov
xchg
xor
mov
sub
cmc
adc
pop
and
sub
xchg
mov
inc
jnp
leave
or
adc
inc
and
inc
sbb
sbb
inc
addr16
and
adc
pop
and
xchg
ret
fwait
shlb
inc
fbld
imulb
cmpsl
gs
add
pop
cwtl
mov
mov
push
pop
lahf
es
push
sti
out
movsl
addr16
xchg
jae
add
pop
das
mov
inc
xchg
fdivrl
pushl
pop
pop
outsl
loopne
out
lock
adc
add
pop
aaa
in
lcall
aam
aas
mov
scas
fiadds
sahf
mov
dec
aam
sbb
jg
mov
xchg
mov
clc
push
stos
fdivl
pop
rorb
mov
into
loop
lea
sub
jbe
hlt
icebp
pop
xchg
dec
lock
sub
adc
insl
or
mov
sbb
cld
lea
or
sbb
push
ja
lcall
lods
dec
add
cld
push
out
pop
and
fldcw
or
mov
pop
test
dec
je
cld
sbb
sti
inc
sarb
das
das
mov
and
xchg
test
subl
rol
iret
mov
mov
repz
outsl
add
mov
stos
pushl
xacquire
push
sub
jmp
neg
xor
jo
mov
fsubp
gs
xor
mov
cmp
ds
dec
shlb
add
cli
sti
addr16
cmp
dec
ja
scas
aaa
aad
pop
xlat
das
sbb
xchg
push
push
daa
push
ds
pop
into
mov
mov
push
push
in
pop
push
fnstenv
je
pusha
jmp
sbb
inc
ds
pop
outsl
cmp
and
pop
and
andl
repnz
rcrl
add
bound
jp
mov
and
xchg
sub
out
mull
xlat
aas
in
mov
leave
and
xor
pop
mov
lock
lret
fadds
insb
push
loopne
lods
adc
fildll
xchg
and
clc
stos
addl
enter
and
sub
arpl
xor
out
dec
test
cmp
push
xor
out
push
ljmp
call
sbb
or
lret
sub
dec
insl
jns
sti
cld
les
fisttps
jbe
aas
xchg
pop
push
ja
insb
inc
adc
fcmovne
cwtl
aad
in
mov
xor
cmp
pushl
inc
inc
sub
sbbl
xchg
xchg
lods
call
jb
mov
lret
repz
cmp
pop
jge
sbb
dec
xchg
popa
int
test
pop
cld
jb
imul
fisttpl
push
jp
cmc
push
std
mov
shlb
dec
mov
inc
movsb
jbe
int3
jmp
sahf
das
testl
add
notb
dec
sbb
mov
cmpsb
xchg
sbb
addr16
adc
adc
inc
filds
pop
xor
sbb
xchg
ror
inc
push
roll
cwtl
orl
loope
sbb
lods
jp
xor
add
sahf
inc
imul
jb
sub
fdivl
jecxz
repz
icebp
std
inc
inc
ljmp
pop
sbb
roll
or
stc
js
cmovbe
mov
mov
repz
push
xor
jl
push
xchg
sub
fmul
sub
outsl
lret
adc
sbb
push
gs
jb
jl
orb
sub
jcxz
stos
inc
inc
xor
inc
mov
mov
mov
or
or
mov
xor
loope
add
xchg
xlat
adc
push
mov
cli
mov
bound
jg
or
mov
stc
adc
data16
or
movups
daa
out
jmp
sbb
mov
pop
xlat
jo
adc
mov
mov
sbb
pop
and
xchg
add
arpl
mov
mov
ja
sub
sti
dec
sbb
fndisi(8087
int3
push
stc
inc
leave
lock
push
push
cmpl
inc
dec
fwait
clc
sub
or
incb
cmc
and
jae
xor
xchg
jb
mov
sbb
add
stos
leave
push
adc
fsts
adc
mov
adc
and
cmp
scas
aaa
scas
into
and
and
jo
xchg
mull
ret
and
sub
in
shr
stos
pop
popa
inc
xchg
xchg
add
int
mov
std
add
cmpsb
push
fbstp
pop
and
inc
into
je
add
rcrl
add
aaa
push
or
test
aad
mov
lret
nop
dec
loop
rcrb
xchg
cli
add
out
mov
mov
repnz
sbb
shll
lods
or
or
ret
jbe
test
lret
xor
cmp
dec
sbb
repz
ret
mov
orb
not
sub
std
hlt
lods
shlb
lcall
sub
mov
dec
adc
repnz
mov
dec
addr16
test
and
cmp
fld
daa
sub
lock
hlt
jp
and
mov
add
les
in
cmp
loop
cmp
jns
out
insb
andl
ret
gs
bound
movswl
sub
out
aam
add
push
lcall
push
mov
ror
pop
fcmovne
and
mov
rolb
insl
mov
dec
jl
push
rcrl
popa
adc
movsl
in
lret
push
and
pop
nop
js
subb
sbb
adcb
int
jo
jg
cmp
inc
pop
pushf
jg
and
mov
adc
dec
mov
in
addr16
stos
cmpl
popf
sbb
aad
inc
clc
dec
mov
ljmp
xchg
pop
sub
hlt
cmp
daa
xor
push
cmp
xchg
xchg
enter
pop
test
ja
sub
inc
lahf
jo
mov
add
outsl
rolb
push
test
sahf
fstpt
push
repnz
jbe
sbb
arpl
fbstp
out
jp
jge
imul
mov
movsl
xor
xchg
sbb
fsubrs
adc
push
jmp
xchg
or
in
int3
mov
dec
ss
out
or
mov
and
xchg
mov
sbb
outsl
jno
cltd
xlat
aad
jnp
into
inc
aam
mov
mov
pop
sub
lods
pop
ret
jno
in
jmp
cmp
sbb
mov
mov
xchg
dec
sub
and
add
xor
andl
mov
cld
lds
xchg
es
sti
dec
outsb
dec
adc
mov
push
andb
ss
out
mov
sbb
push
dec
dec
push
das
and
out
fimuls
mov
xchg
mov
jbe
jecxz
jae
or
out
out
or
mov
sbb
out
sub
fisubs
idivl
xor
mov
fiadds
or
mov
mov
pop
jns
fstpl
adc
mov
sti
fsub
push
and
or
xchg
aas
js
cwtd
sbb
cmc
testl
icebp
xchg
xor
in
xor
or
ret
in
push
ljmp
xchg
js
sub
mov
jne
jno
ja
inc
mov
mov
or
cltd
cs
ds
addl
imul
add
xchg
xor
and
jae
dec
movsb
mov
les
jg
sub
xchg
cmp
imul
xchg
xchg
mov
cltd
and
mov
inc
mov
imul
lcall
insb
dec
pop
xor
push
push
fdiv
sbb
pop
ja
ds
dec
scas
jg
nop
addr16
jns
add
insl
inc
ret
pop
mov
push
outsb
xchg
mov
mov
dec
jne
add
cld
loope
lahf
leave
outsl
mov
dec
xor
mov
xchg
stos
push
push
mov
mov
cmp
rcrl
je
in
lea
lahf
andb
popa
enter
imul
inc
loope
cld
stc
scas
add
loopne
out
cmp
sbb
dec
repnz
out
push
in
pop
arpl
sbb
pop
or
or
data16
lods
idivb
sbb
cmpsl
out
fcoml
dec
cmp
iret
jno
test
jl
enter
dec
push
add
js
out
pop
sub
in
dec
xchg
test
jo
or
sbb
fsubs
cmc
cmpsl
clc
repnz
pop
pop
hlt
inc
jb
push
inc
push
sub
mov
sbb
cld
cwtl
ret
push
and
scas
lea
xor
mov
or
push
and
adc
push
sub
push
push
test
pop
in
negb
pop
cmpsb
outsb
lcall
mov
stc
jmp
mov
inc
enter
pop
cmpb
lods
pop
lock
int3
insb
nop
dec
cmp
adc
or
xchg
xchg
or
sbb
inc
pop
push
fiaddl
clc
das
or
sbb
popa
push
mov
in
sbb
mov
icebp
xchg
xlat
arpl
test
test
arpl
loop
aam
pusha
outsl
iret
jbe
clc
pop
stc
mov
pop
sbb
movsl
inc
inc
call
adc
stos
into
in
xchg
testl
push
loope
ret
in
out
pop
fnsave
xor
xchg
xchg
fdivp
incl
sub
dec
or
mov
ret
jo
das
icebp
add
cmp
and
push
push
push
cmp
int
insb
gs
adc
jecxz
es
sub
sub
movsl
inc
aam
dec
add
out
jae
add
add
or
sbb
xchg
adc
fnstsw
jnp
test
aas
mov
js
mov
out
pop
mov
push
mov
shlb
lods
add
sub
fsubrl
push
add
jg
stos
rorb
js
pop
es
addb
sub
mov
jmp
ret
mov
inc
xlat
pop
test
add
dec
sahf
scas
repz
sub
sub
enter
fdivl
fisubl
movsb
push
in
or
mov
dec
sbb
inc
jns
dec
xor
popa
jecxz
scas
cltd
ret
lods
mov
lcall
fdivl
rorb
push
xor
imul
addr16
clc
or
pop
ss
into
push
aas
sub
pop
pusha
cmp
loope
push
dec
xor
push
mov
stc
cltd
out
cwtl
leave
mov
jmp
pop
outsl
or
mov
xchg
or
test
cmp
call
fildll
repnz
mov
movsl
out
es
sbb
imul
adc
jnp
push
jl
pop
sbb
inc
adc
das
fimuls
or
mov
scas
pop
mov
das
sub
xchg
or
insl
xchg
mov
in
or
stos
repz
push
push
add
jne
cmp
jecxz
lods
or
mov
mov
nop
inc
mov
cmpsl
cmp
push
fsincos
mov
mov
pop
notl
mov
test
pop
adc
test
sbb
mov
mov
xor
rcll
sbb
fiaddl
imul
jg
out
fwait
ds
lods
xchg
cltd
pop
fcomp
xlat
mov
fisubrl
push
in
mov
clc
cwtl
or
jecxz
jle
cmpsl
stos
data16
jg
scas
mov
pusha
mov
add
fsubp
push
add
and
dec
xchg
push
lock
loop
iret
cltd
sbb
aad
cld
cmp
popa
xchg
outsl
stc
jbe
in
mov
das
enter
test
rorl
fidivrs
or
fdivrl
cli
sub
aas
sub
les
or
sub
lock
xor
jne
add
pusha
pop
int3
daa
pop
mov
rolb
nop
in
xor
adc
mov
jns
je
sbb
jne
ret
or
scas
pop
loope
jne
or
dec
outsl
xchg
bound
jb
mov
and
ja
cmpsl
add
xchg
rcll
shlb
cmp
and
cmpb
xchg
addb
inc
jmp
and
clc
std
test
gs
and
es
mov
mov
movsl
cmp
ret
mov
insb
add
mov
jp
sub
adcb
sbb
adc
iret
cmp
jge
mov
and
ljmp
xchg
push
hlt
mov
loope
popl
outsb
cltd
add
ds
dec
loop
adc
cmp
add
mov
shrl
xor
mov
and
ja
sahf
dec
stos
arpl
add
pop
lahf
call
dec
xchg
pop
in
inc
or
das
push
insb
sbb
push
js
pop
jno
inc
jne
mov
bound
in
sub
lea
shlb
ret
repz
dec
fstpt
add
out
add
jb
fwait
arpl
insl
rclb
adc
pop
stos
sub
fdivrs
mov
repz
outsb
mov
sahf
push
inc
jbe
or
pop
xor
lcall
xchg
push
xchg
mov
fwait
and
lds
das
adc
inc
outsl
mov
std
insl
mov
sbb
jg
repnz
in
ja
mov
mov
cmc
and
pop
jecxz
xor
mov
loop
or
cmpsb
bound
jp
jno
or
sbb
mov
sub
sbb
mov
into
scas
mov
ret
dec
adc
xchg
pusha
cld
mov
push
test
adc
xor
or
add
sub
cmpb
mulb
push
mov
shlb
push
inc
pusha
pop
pop
add
lahf
push
mov
xor
dec
aad
test
pop
xchg
stos
lock
push
push
mov
sbb
sti
fs
sahf
mov
lret
pop
or
out
jo
mov
cmp
les
mov
fdivrs
adc
sti
mov
and
mov
push
fcmovu
repnz
bndstx
cmc
adcl
pop
hlt
pop
ret
cmpsl
movsl
pop
cld
ror
fcompp
lret
push
ret
jecxz
pop
mov
lods
outsl
stc
and
movntq
or
ror
movsl
les
add
je
daa
lods
dec
jge,pt
les
and
fwait
out
push
leave
or
mov
ret
xchg
cmpsl
mov
ret
inc
in
push
pop
dec
stos
cld
dec
es
dec
arpl
or
les
mov
and
lcall
adc
dec
dec
pop
and
pop
shlb
and
push
jg
int3
add
out
xchg
in
fsubs
into
cmpsb
cmp
xor
rorb
sahf
jno
and
out
mov
mov
iret
das
dec
mov
jb
rorl
leave
outsl
jno
popl
and
scas
sub
movsb
into
dec
pop
test
in
jns
psadbw
in
pop
dec
add
cltd
test
leave
push
in
mov
shrb
sbb
push
orl
jns
pop
sbbb
jmp
xchg
add
nop
std
xor
jmp
test
xchg
fwait
add
movsl
xor
sub
pop
adc
cmp
cmc
and
push
inc
repnz
clc
or
test
xchg
jbe
int3
aam
dec
sub
ljmp
hlt
cmc
call
jns
scas
dec
mov
stos
push
in
aad
mov
mov
mov
mov
repnz
into
shlb
mov
cmp
add
insl
mov
imul
push
jbe
aad
pop
clc
popa
push
repnz
push
pop
xchg
mov
mov
inc
mov
or
lret
sub
iret
and
push
push
test
test
push
js
aad
out
pop
aaa
stc
cmc
xor
dec
lea
or
shr
int3
xchg
fldl
sbb
loopne
in
cmp
cmpsb
pop
arpl
xchg
out
imul
dec
lods
adc
mov
adc
test
pop
aad
stos
je
xor
jne
sarl
sbb
mov
cmp
jne
hlt
sub
push
xor
aaa
or
daa
stos
inc
aaa
fiaddl
jnp
mov
or
mov
cltd
jmp
cmp
imul
in
movsb
pop
enter
insb
and
jecxz
movb
jle
push
xchg
sbb
dec
push
cmp
push
push
xor
sbbl
pop
aad
test
adc
test
cld
loop
lock
daa
mov
pushf
or
test
hlt
mov
ljmp
sti
jo
nop
gs
fs
iret
dec
dec
mov
gs
mov
lock
sub
roll
pop
sbb
negb
shlb
fcomps
adc
rcrb
mov
and
cs
les
test
jnp
xchg
xor
xchg
cmp
xor
test
imul
mov
sub
aaa
jae
push
dec
xor
mov
lds
xchg
sub
pop
aaa
mov
mov
iret
or
stos
adc
dec
mov
jge
mov
adc
mov
adc
shlb
push
test
pusha
nop
sbbb
dec
ss
mov
cld
movb
mov
push
inc
sub
dec
mov
shll
loop
cmp
outsb
pusha
aaa
rcl
imul
and
decb
aaa
pop
adc
mov
lods
jnp
inc
daa
pop
sbb
xchg
fcomip
pop
xchg
call
fdivr
call
dec
addr16
insl
clc
in
pop
push
ss
push
negl
mov
cmpsl
cmp
mov
inc
mov
rorb
mov
ja
shrb
sbb
and
ja
aad
test
jns
adc
jmp
jmp
or
mov
jbe
xor
inc
mov
bound
pop
repnz
jp
cmp
cmp
mov
push
mov
xor
rcll
cmp
push
stos
scas
mov
push
sub
push
aas
inc
mov
pop
dec
inc
les
out
test
orl
rclb
fdivr
in
push
inc
dec
cmp
mov
pop
xor
and
pop
mov
push
in
pushf
repnz
inc
mov
daa
jge
ficomps
jne
aas
dec
cmp
out
jnp
in
push
mov
cmpsb
sbb
sbb
sub
push
inc
xchg
xor
xchg
add
incl
sbb
out
jno
clc
push
inc
sbb
mov
push
clc
imul
aaa
sbb
cltd
insb
stos
mov
mov
or
ret
jo
jmp
mov
push
fistpl
jge
jmp
jle
std
lret
add
test
std
or
cmpsl
cmpb
jb
test
movsl
pop
ret
jnp
and
incl
int3
mov
jo
fcomps
push
aas
xor
inc
xor
into
dec
out
dec
inc
outsl
aad
inc
shrd
or
dec
push
push
sbb
jae
aas
mov
bound
dec
orb
xlat
sbb
jle
or
iret
cmpl
pop
sub
cwtl
mov
mov
xchg
push
popa
out
inc
fsubrl
ds
int
dec
stc
jbe
push
popa
lods
popf
dec
xor
gs
stos
mov
xchg
mov
inc
in
scas
adc
jbe
mov
sbb
add
out
inc
std
adc
jl
mov
arpl
mov
std
adc
scas
ja
scas
add
add
jecxz
mov
jnp
test
nop
roll
push
mov
push
cmpsl
mov
in
leave
xchg
dec
mov
stos
mov
pop
fs
push
mov
jmp
addr16
aad
mov
into
jg
iret
or
out
and
popa
stos
xor
push
xchg
and
in
jg
mov
fbld
mov
outsl
jg
cmp
jecxz
les
cmpl
lock
xchg
cmp
inc
fwait
cmp
inc
scas
and
sbb
push
nop
xor
out
sub
sub
sti
or
mov
and
add
mov
and
xor
sub
jge
push
leave
insb
jle
jbe
iret
scas
and
cmpsb
outsb
mov
sub
addl
inc
xor
push
push
push
or
sbb
push
rcrb
dec
in
add
sub
popa
out
jo
push
inc
adc
loop
adc
mov
fistpl
loop
cld
pop
jge,pn
mov
pop
jl
daa
xchg
ljmp
imul
frstor
addr16
adc
in
mov
mov
cmp
inc
outsl
mov
sub
mov
xchg
inc
jecxz
arpl
lods
lods
in
int3
mov
pushf
fs
or
push
pushf
out
sbb
dec
ret
ror
bound
cld
push
fbld
pop
or
sub
fildll
pop
inc
jnp
mov
mov
rcll
push
inc
jge
test
clc
mov
add
nop
gs
iret
mov
jg,pn
fadd
out
sub
xor
stos
xchg
sarl
add
int3
ds
cmc
push
negb
or
mov
lods
or
sub
jmp
insb
insb
xchg
xchg
repz
ret
mov
insb
xlat
push
mov
shrd
out
loopne
scas
cmpsl
push
or
or
xchg
inc
fwait
and
or
sub
in
ljmp
mov
dec
mov
in
cli
mov
or
mov
cmpl
test
pop
adc
or
xor
mov
cmc
inc
cmpsb
xchg
in
fisttpl
repz
add
imul
leave
add
xor
loope
xor
xor
dec
mov
test
loopne
out
das
cmp
pop
adc
push
sub
mov
das
addr16
cmp
iret
cmp
popf
cmp
cmp
jne
cs
mov
out
sub
loop
jae
mov
roll
jo
scas
jbe
loop
jb
pop
and
int
and
ds
loop
mov
xchg
sbb
es
add
out
push
mov
jnp
lock
and
sti
lock
pop
sub
inc
and
aas
inc
push
mov
fs
cmp
xor
adc
or
test
es
mov
int
pop
mov
or
pop
mov
ficoms
rcrl
cmc
subb
inc
add
mov
loop
fimuls
xor
stos
mov
mov
inc
push
mov
jae
out
push
dec
jecxz
stc
lds
and
sbb
outsl
xchg
mov
or
dec
icebp
xchg
int
mov
push
cld
repnz
insl
mov
fimuls
xchg
mov
mov
inc
and
pop
adc
int3
jbe
neg
sahf
scas
daa
rcr
sbb
xorl
jge
xchg
and
xchg
and
xchg
push
xchg
leave
jp
jnp
or
loope
mov
imull
pop
insl
fldt
iret
add
fiaddl
test
xchg
subb
mov
lds
sbb
push
xor
stos
insl
iret
pop
mov
lods
adc
fdiv
or
mov
xchg
adc
mov
mov
lods
insb
lahf
pushf
mov
ljmp
and
or
ljmp
das
mov
jl
test
pop
sbb
push
repnz
iret
mov
sbb
pop
mov
mov
and
sub
loope
xor
arpl
cmp
decl
popa
or
hlt
inc
gs
lea
jne
insl
dec
xchg
movsl
xor
mov
jge
mov
inc
pop
jbe
pop
jmp
sbb
nop
adc
arpl
outsb
int3
and
imul
ret
mov
lock
lret
sarl
lock
pop
test
xchg
aaa
push
cmp
push
jbe
pop
inc
pop
cmp
cmp
popa
jb
fucomip
fadds
mov
adc
mov
jge
fists
push
movsb
pop
enter
jb
jle
pop
xchg
or
jmp
xor
and
push
mull
lret
test
data16
jle
sub
xorb
dec
xchg
xlat
cmp
movsl
mov
mov
outsl
jo
pop
jo
outsb
sub
mov
pop
sub
test
and
das
or
js
ret
cmp
push
jne
or
lods
dec
mov
pop
lret
mov
mov
add
dec
mov
sbb
jle
adc
mov
push
xchg
iret
dec
pop
xlat
fcomp
lods
xor
xchg
movl
mov
jp
push
dec
repnz
add
jo
sub
cmpsb
jmp
pop
jne
scas
sub
ret
lcall
ljmp
jmp
mov
leave
ss
xor
mov
push
adc
jae
scas
into
xchg
stc
lret
cltd
jle
or
lea
jo
push
mov
mov
push
test
push
sbb
adcl
stos
jbe
cmp
cmpsb
andl
dec
xchg
cmpsl
inc
lock
adc
aaa
shlb
mov
cmc
xchg
pop
jmp
shll
jo
pop
mov
mov
pop
fsubr
mov
movsl
daa
pushf
xorl
shrb
xchg
in
pop
and
and
dec
sub
dec
sarb
insb
cmpsb
mov
andb
xor
adc
fcmovbe
imul
inc
pop
pop
sbb
and
mov
or
in
mov
jl
xchg
push
fistps
pop
insb
pop
dec
push
and
cmp
add
mov
sbb
or
arpl
jno
insl
daa
fcmovnb
sbb
jns
adc
and
push
sbb
inc
add
jg
xchg
inc
out
mov
int
rorb
popl
fsub
testl
inc
push
je
rep
pushf
aam
sub
call
xor
insb
push
mov
pop
stc
adc
xchg
and
dec
or
fistps
sub
sub
push
sub
enter
fidivrl
dec
inc
pop
push
mov
xor
dec
adc
pop
push
ret
aad
cmp
ds
loopne
jne
fidivrs
xor
arpl
and
es
shr
xor
bound
mov
cmp
adc
out
mov
cli
pop
add
arpl
cs
iret
cmpsl
js
sub
lret
or
and
scas
xchg
daa
sarl
inc
nop
repz
sahf
sti
out
lahf
mov
lods
ret
outsl
hlt
rcll
mov
ja
paddw
aam
pop
xor
fisubs
cld
dec
mov
xchg
mov
lods
imul
stos
insb
xchg
xor
pop
int
shll
xchg
out
push
iret
fwait
jb
addr16
xchg
xor
sbb
dec
divl
mov
imul
movsb
xor
and
pop
int
cmpsl
ds
sbb
add
cmp
ja
mov
dec
pop
sbbb
stos
call
mov
jl
imul
fs
sbb
jns
adc
pop
mov
add
push
or
sbb
shr
jp
add
sti
insl
xor
push
pushl
inc
call
jno
dec
pop
dec
cmp
push
and
jne
sub
in
push
mov
rcll
movsl
add
mov
call
xor
sahf
mov
mov
mov
jne
jmp
mov
pop
xor
ficoml
jle
adc
mov
jb
pop
and
je
inc
cmpsb
ffreep
addl
cmp
or
xchg
pop
int
test
push
es
fmuls
cmp
sbb
stc
nop
xor
movsb
push
xchg
xchg
daa
lods
movsb
push
gs
cmp
xchg
mov
mov
loop
repnz
lds
in
adc
shlb
mov
adc
loope
popf
popa
push
fadds
add
outsl
ja
mov
inc
adc
dec
lret
jo
add
clc
cmp
pop
jnp
sarl
mov
bound
sub
sti
adc
cmp
sbb
mov
xchg
sti
sbb
fwait
rolb
stc
xor
xlat
out
cmpsl
push
push
cmpsl
ja
mov
cwtl
test
insl
fstl
outsb
adcl
xchg
lea
pusha
ret
imul
int
pushf
sti
adc
shl
nop
je
mov
lcall
xchg
fs
pop
pushf
repnz
mov
adc
lds
divl
sbb
int
aad
fisubrl
xor
jl
mov
aas
xchg
add
outsl
pushf
fstpt
dec
push
sahf
and
sarb
xchg
adc
stos
or
arpl
pushf
leave
fimull
and
aas
cmp
push
aaa
or
push
xor
scas
std
pop
out
jmp
jb
into
pop
sub
xchg
sarb
mov
insl
push
push
ja
fadds
add
jmp
int
mov
popa
jmp
cmp
sub
inc
add
dec
dec
data16
leave
loopne
es
out
xor
and
sbb
xor
test
pop
mov
repz
add
sub
mov
push
push
bound
mov
aad
inc
adcl
sbb
addr16
ret
addr16
sub
jnp
lock
aaa
popa
lods
dec
bound
daa
ja
cmp
add
jg
test
pop
pushf
mov
push
ret
pop
cli
mov
js
adc
imul
es
mov
cmp
xor
shrb
ss
lods
cld
inc
movsb
ss
mov
push
pop
cmpsl
jbe
insb
lock
ds
das
fcompl
jl
or
mov
ret
push
mov
jno
push
add
rol
add
jo
dec
adc
outsl
shl
and
push
xchg
and
mov
icebp
xor
pop
cmp
inc
insb
mov
dec
mov
inc
ds
mov
fcoms
in
decl
sub
and
ljmp
cmpsl
arpl
jmp
and
sbb
js
fwait
subb
rcl
jno
sbb
jecxz
push
movsl
pushl
push
inc
fsts
sub
cwtl
mov
das
xor
adc
mov
int3
adc
mov
ss
adc
call
es
ds
repz
mov
jmp
push
pop
push
xchg
fsubrs
in
addr16
inc
jp
xchg
and
cmp
xor
loope
int
mov
popa
lock
xchg
cmc
clc
hlt
pop
fdivl
push
mov
mov
jge
sub
xchg
int3
cmp
stos
movsb
push
ds
arpl
pop
mov
fdivl
jns
jp
and
mov
push
mov
dec
mov
xor
mov
pop
and
lods
mov
sar
sub
lock
outsl
xchg
imul
in
imul
cmp
loope
dec
jbe
pop
pop
clc
pop
push
adc
enter
int
dec
cltd
xor
xchg
or
xchg
cli
xchg
add
jo
xchg
cmp
jp
cltd
jns
pop
or
leave
jmp
add
repnz
enter
insl
xchg
adc
jmp
cli
xor
cmp
in
das
pop
stos
xchg
bound
add
das
mov
in
pop
into
xchg
xchg
pop
mov
push
mov
push
test
in
sub
add
stc
push
movsl
movsl
sub
inc
pop
iret
sbbb
xchg
xchg
cli
aam
sub
hlt
mov
inc
addl
jmp
push
sti
fistps
and
and
xchg
lea
pop
xor
mov
xchg
in
push
and
arpl
loope
lret
mov
push
xor
sbb
dec
adc
inc
lds
push
in
mov
insb
repz
dec
nop
nop
xchg
mov
bound
aaa
leave
sub
push
clc
cmp
jnp
push
dec
and
cltd
mov
mov
xchg
jge
mov
mov
push
pop
int
ret
and
pop
mov
jno
shrb
popf
subb
xchg
xchg
ret
xor
cmp
lahf
jmp
mov
mov
cs
push
mov
add
push
add
jecxz
xchg
sti
add
adcl
sbb
stos
popf
gs
push
lret
inc
xor
adc
ja
popa
xchg
mull
inc
mov
test
out
jno
cmp
fnsave
dec
fdiv
lods
js
jg
les
loop
sub
movsb
movsl
and
add
into
loop
inc
shll
mov
cltd
xchg
out
push
ja
das
push
das
fwait
dec
cmp
mov
js
in
add
ficomps
push
inc
push
xor
push
mov
push
mov
frstpm(287
call
cmpsb
xchg
sub
push
test
out
xorl
mov
or
subb
push
cld
inc
test
fidivl
pop
mov
movsl
or
and
push
xchg
jp
xchg
mov
fs
lods
gs
test
jae
ret
xchg
jl,pt
rorb
jp
add
rolb
lock
push
mov
mov
push
pop
inc
inc
jge
pop
add
gs
jae
adc
imul
add
xchg
push
pusha
sbb
mov
dec
mov
adc
insb
jl
push
iret
lret
ja
outsl
sbb
es
add
insb
stos
flds
scas
addr16
push
out
in
stos
sbb
gs
js
sub
adc
ja
fistpll
dec
enter
mov
shrl
pop
xchg
xchg
cmc
mov
sbb
mov
gs
add
stc
add
mov
in
repnz
repz
xor
fiadds
mov
cltd
sbb
inc
test
or
ficoms
cli
push
movsb
mov
sub
adc
sbb
mov
fists
add
daa
rcrb
or
push
mov
jp
cmp
mov
ss
repz
or
mov
mov
pushl
shrl
mov
sub
js
add
fildll
mov
cmpsl
add
into
pop
cmp
scas
xchg
mov
jnp
sbb
jmp
enter
cs
xchg
int3
add
mov
mov
fstpl
scas
cld
mov
or
mulb
mov
sbbl
ficoms
xlat
adc
add
mov
lock
shl
nop
or
movsl
loop
jle
mov
popa
mov
jmp
jmp
das
xor
jo
and
lods
lods
idivl
rcrl
push
mov
jge
das
dec
xchg
add
adcb
pop
movswl
dec
ret
sub
pusha
dec
jo
shll
scas
ficomps
scas
outsl
in
or
xchg
fdivl
push
rcrl
cmp
addr16
or
gs
aad
jae
out
xorl
mov
xchg
aam
gs
adc
pushf
popa
outsl
neg
es
outsl
xor
sarl
dec
xor
mov
out
push
lds
fwait
inc
adc
bound
jo
gs
shll
adcb
fs
push
inc
mov
push
pop
rclb
cmpsb
or
dec
fs
or
push
imul
popa
cmp
ljmp
sbbb
imull
fiadds
data16
fwait
test
fs
add
in
ja
loope
cmpsl
push
mov
or
jo
xor
mov
xchg
adc
pop
xchg
cltd
rcr
add
fcompp
sahf
sbb
sub
pop
fadds
push
dec
cmpsl
arpl
scas
shlb
mov
fwait
xchg
movb
scas
inc
dec
pop
iret
sbb
pop
ljmp
push
mov
loope
mov
add
push
popa
sub
cmp
je
outsl
nop
or
ljmp
div
push
test
jbe
test
into
pop
std
cwtl
jg
aam
pusha
or
out
in
cmp
loop
adc
out
dec
cmp
or
mov
scas
sbb
js
je
mov
mov
faddl
xor
test
jo
stc
mov
insl
testl
cs
lods
stos
push
cmp
pop
push
stos
xchg
in
dec
out
mov
pop
push
je
jae
push
aad
fiaddl
sbb
push
cld
sbb
mov
adc
jbe
decb
aam
in
push
mov
inc
int
cli
nop
out
jp
xchg
dec
or
lock
test
mov
call
pop
xchg
subb
ret
add
sbb
pop
and
sbb
lret
scas
pop
add
scas
jb
adc
cli
add
push
loop
adc
fidivrl
test
data16
cwtl
mov
leave
js
aaa
movsl
mov
rcrl
inc
das
gs
push
adc
int
test
adc
popl
xor
xchg
out
sub
rcl
pop
leave
mov
add
inc
or
cmpsb
pop
outsb
ljmp
movsl
faddl
xor
out
inc
test
js
mov
or
out
adc
push
xor
pushf
lret
popf
jg
pop
out
add
dec
mov
jecxz
ss
jbe
hlt
mov
in
les
mov
mov
into
sti
add
es
fwait
jg
movsl
dec
into
mov
pop
push
gs
aas
and
cmpsl
cmp
aaa
repnz
add
inc
mov
mov
jp
add
cld
dec
push
shlb
inc
fidivs
int
stos
push
fucomp
sub
xchg
mov
jae
enter
int3
popf
sub
lcall
insb
test
push
push
mov
shr
nop
inc
inc
fildll
jns
cmp
dec
call
or
sub
cmpsl
ret
inc
sub
pop
cs
and
sahf
es
inc
mov
lret
call
sbb
outsb
inc
imul
mov
cmp
divb
je
sbb
adc
mov
mov
pusha
daa
mov
xchg
sbb
loop
sar
sub
jge
dec
xchg
out
das
orb
out
aas
imul
dec
adc
push
fistpll
scas
in
cmp
inc
sarl
aas
pop
push
ljmp
sub
or
mov
test
pop
aaa
je
push
dec
int3
xchg
nop
jle
mov
test
aas
addr16
sub
stos
out
cmp
jnp
mov
push
push
sahf
mov
or
mov
shrl
push
sub
cmp
ret
cmp
repz
xor
je
mov
add
add
mov
dec
into
sahf
nop
xor
out
pop
sbb
inc
and
jno
sub
stc
and
sub
popf
dec
outsl
popa
outsl
rolb
jecxz
jns
movsb
push
js
ja
mov
shrl
pop
adc
inc
arpl
jo
xor
xor
std
xchg
fbld
cmp
xor
inc
loop
dec
jno
pop
add
push
dec
xchg
push
fidivs
jp
pop
loop
xor
xchg
fstp
jae
inc
repz
fmull
add
test
jbe
movlps
lods
xchg
xchg
clc
inc
jecxz
push
xor
fsts
push
sbb
movsb
xchg
mov
imul
add
sti
cmp
xor
insl
fs
stos
ljmp
inc
repz
das
pop
mov
add
sbb
dec
into
mov
or
jne
pop
cmpsb
arpl
std
cmp
pop
std
mov
sbb
inc
jne
dec
inc
mov
ja
adc
rcrl
add
in
mov
mov
inc
cmp
jp
xor
ljmp
mov
mov
insb
xchg
jnp
push
add
subl
je
and
add
in
mov
movsb
aad
cmp
jae
jns
popa
or
in
lea
pop
shll
or
dec
fyl2xp1
sub
subl
gs
mov
push
cwtl
repz
loopne
fadd
stos
rorl
cld
add
pop
cs
jne
adc
leave
adc
rolb
aad
pop
mov
inc
jne
mov
out
cwtl
arpl
or
push
into
jne
fsubrs
je
mov
push
mov
and
stos
sub
fildll
in
faddl
in
xchg
movsb
xchg
sbb
stos
and
push
gs
xchg
jne
mov
xchg
je
aas
std
pop
mov
inc
inc
push
add
out
pop
cmc
ja
sbb
repnz
fs
fiadds
aad
fildl
call
push
pushf
jl
mov
xchg
out
mov
stc
mov
sbb
lahf
dec
xchg
push
jl
std
ja
mov
lods
lret
lock
mov
bound
or
loop
mov
sbb
out
mov
cmc
pop
cmp
shlb
adc
lcall
and
out
xchg
insb
sub
mov
push
and
gs
lods
push
imul
out
or
in
pop
out
stc
or
push
jo
into
shlb
frstor
popa
dec
jl
cmp
popf
pop
fsubs
outsb
inc
rorb
adc
cmp
pop
mov
jp
xor
sub
test
in
movsb
fcoms
xor
push
push
or
jge
sbb
xchg
stc
cmp
pop
scas
mov
lahf
jo
ds
cmp
scas
int3
fsubs
mov
xlat
mov
jno
xor
jno
jae
xor
push
xor
stos
and
inc
decb
sub
jg
push
ret
aad
shr
or
data16
mov
pushf
les
pop
xchg
or
stos
xor
xor
loop
pop
xor
fists
lret
push
call
cmp
aad
sbb
orl
xchg
lcall
add
stos
xchg
and
xchg
push
fbstp
push
mov
inc
pop
je
orl
insb
sbb
mov
mov
lcall
xlat
pushf
adc
mov
fdiv
lock
ss
mov
jmp
xor
xlat
pop
cmpsb
loop
jmp
mov
cmp
add
sbb
mov
mov
and
arpl
adc
mov
sub
pop
dec
cmp
jnp
adc
fbld
repnz
jbe
incb
sbb
lret
sbb
xorl
stos
and
dec
cmc
pop
add
cltd
mov
jl
bound
dec
shrb
daa
xchg
cmp
mov
pop
add
int3
cmp
dec
jp
inc
movsl
cmovle
jg
hlt
sub
sbb
pop
sub
mov
dec
mov
sub
das
clc
mov
fwait
mov
enter
mov
cmp
movd
loop
in
fdivl
mov
push
mov
movsl
push
lods
and
push
rcrb
dec
addr16
mov
movsb
cmp
mov
jle
cmp
sub
pop
mov
sub
jne
pop
xchg
movsl
js
pop
aam
ss
and
in
test
xchg
test
xchg
pushf
je
call
pop
in
pop
std
lock
xchg
sti
fisubl
aas
cmpsl
pop
jp
xlat
out
jp
add
data16
insb
imul
std
outsl
mov
sbbl
inc
mov
std
inc
mov
pusha
xor
mov
jl
dec
xchg
stos
and
jmp
xor
xchg
sbb
stos
push
mov
pop
ficoms
addr16
mulb
in
dec
mov
int3
inc
cmp
sub
loopne
cmpsl
nop
dec
sbb
sub
cmpb
xchg
mov
and
sub
or
in
mov
xchg
adc
xchg
cmp
adc
iret
inc
imul
add
add
lds
stc
mov
sub
dec
repz
pop
mov
fmuls
stos
xchg
xchg
lds
and
mov
adc
mull
lret
ja
test
push
aad
sbb
enter
sbb
jl
sub
rol
and
jo
xchg
imul
pusha
test
xor
outsl
popa
dec
popf
pop
ret
jns
test
mov
cmp
add
mov
shrl
addb
mov
xchg
dec
cwtl
xor
setnp
sbb
cmc
popf
push
mov
stos
cmp
pop
lret
ret
pusha
sbb
or
push
cld
mov
lcall
sbb
lahf
cmp
and
cmp
movsb
mov
das
pop
fistps
or
es
or
gs
dec
not
cmp
jmp
dec
add
movsb
and
fsubrl
inc
mov
pusha
lock
xchg
cmp
push
pop
mov
and
subb
xchg
insb
stc
push
pop
cmpsl
mov
jns
inc
dec
scas
xchg
in
testb
mov
icebp
data16
imul
jno
mov
dec
cmpsb
mov
mov
xlat
out
testl
xchg
sub
jle
ret
iret
pop
repnz
jmp
clc
sub
adc
sub
into
stos
cmpsb
adc
xor
insl
sbb
rclb
cltd
sbb
clc
cmp
lret
mulb
sbb
dec
or
sahf
neg
js
jg
sahf
icebp
fmuls
xor
mov
xchg
rol
inc
int3
sub
and
xchg
andnps
jle
sub
cmp
push
xchg
cs
decl
outsl
fstpl
jnp
adc
lret
adc
cmpsb
pop
js
sbb
pop
mov
xor
cmp
mov
jnp
mov
xchg
mov
add
fwait
push
cltd
mov
xchg
adc
adc
pop
and
inc
dec
and
imul
mov
lods
cld
jbe
sub
push
jnp
stc
xchg
adc
sbb
movb
push
hlt
cli
rcrb
mov
inc
sub
and
mov
mov
mov
and
add
pop
lcall
cli
pop
daa
xor
adc
dec
lss
jns
addr16
pop
sahf
jne
loope
dec
repnz
fwait
jecxz
dec
jg
push
adc
rcr
push
call
leave
js
out
sti
nop
repnz
push
hlt
imul
or
jae
stc
cmp
mov
scas
mov
and
or
mov
je
sbb
aaa
cs
xorb
jns
sbb
ja
pushf
std
hlt
ds
dec
fs
and
add
add
jno
add
add
cltd
fisubs
sbb
mov
out
lock
xrelease
or
push
aas
jnp
aaa
jno
cmpsb
fdivs
in
repz
lahf
out
inc
dec
shlb
push
pop
pop
add
ficoml
scas
test
sub
mov
int3
lock
fsubrl
clc
scas
fbld
xchg
xor
mov
pop
xor
dec
or
inc
stos
pushf
sbb
lret
insl
lds
pop
std
mov
les
fwait
xchg
jbe
fisttps
dec
daa
mov
fsts
ljmp
push
movsl
push
mov
mov
mov
mov
push
gs
dec
and
les
test
das
fists
insb
and
jp
mov
pop
notl
pusha
push
adc
xor
cwtl
sub
inc
cwtl
adc
lea
or
loop
scas
jle
ds
inc
add
divb
sbb
out
cwtl
inc
ds
shll
dec
jb
mov
dec
aas
or
sbb
mov
adc
loop
sub
jge
jge
push
ret
lret
pop
mov
adc
mov
jb
dec
mov
stc
por
inc
mov
fcmove
aaa
cld
push
push
mov
jp
in
movsb
lret
push
imul
imul
pop
mov
rorl
xchg
and
inc
lods
push
mov
jne
mov
ficoml
divb
or
xchg
adc
negb
add
imul
mov
aam
outsb
in
push
insl
mov
dec
push
adc
lods
or
mov
es
pop
scas
leave
sarb
push
popf
ret
inc
or
sbb
out
leave
leave
loop
jo
cmc
arpl
inc
push
fwait
popa
iret
cwtl
and
mov
cwtl
mov
lret
mov
cld
inc
loop
call
aad
add
loop
shrb
xor
mov
add
xchg
loop
das
arpl
mov
add
out
mov
int
fistpl
aas
scas
and
aaa
xchg
scas
dec
inc
adc
lcall
xor
sbb
je
je
out
cmp
test
lret
xchg
fildl
jp
xchg
jo
sub
mov
loopne
sbb
adc
mov
mov
dec
sub
pop
mov
sub
loope
xchg
dec
mov
shrb
cmpsl
test
pushf
pop
xor
icebp
mov
aad
ds
inc
xor
pop
pop
out
mov
mov
stos
xchg
es
mov
test
pop
xchg
in
mov
adc
pop
scas
mov
xor
jae
leave
xchg
dec
cmp
and
movsl
add
sti
dec
sbb
or
inc
jmp
push
sbb
dec
dec
leave
or
jno
push
cmp
lea
insl
push
mov
cmp
test
sbb
inc
sub
and
fmull
and
mov
inc
sbb
lds
and
add
jp
mov
bound
fbstp
pop
in
out
js
rol
je
cmp
mul
sub
mov
xchg
pop
ljmp
std
jnp
sub
fisubs
mov
popa
nop
mov
jo
es
int
in
ljmp
test
lret
imul
mov
das
cmp
dec
fists
adc
int
sbb
sbb
cld
dec
fs
push
add
lahf
rcrb
xchg
mov
mov
fnstcw
pop
mov
je
test
or
mov
sahf
in
mov
fsubr
ss
sub
sbb
mov
jnp
mov
out
xchg
in
push
mov
fldl
and
xchg
or
lods
ret
or
push
jb
jnp
movsb
insl
inc
mov
cmp
sbb
outsb
push
pusha
sub
push
cwtl
roll
push
pop
push
lret
pop
je
pop
lds
ja
push
jge
push
mov
lds
add
push
pop
dec
dec
stos
jno
jle
sbb
stos
nop
negb
jmp
stos
in
jns
pushf
pop
stos
in
adcb
ffreep
jmp
rcll
shlb
enter
push
in
mov
cli
js
lock
push
pusha
xchg
push
jle
xlat
add
push
pushf
mov
stos
nop
inc
fcomip
out
jnp
data16
movsb
or
mov
push
lods
xor
sbb
and
loop
jg
mov
lahf
ja
out
mov
pop
fisubrs
or
inc
sbb
fs
or
lcall
jp
pop
push
mov
xor
icebp
popf
inc
jp
sub
out
adc
cmp
std
nop
cmpsb
call
pop
lcall
inc
cs
and
stos
mov
jbe
stos
shlb
sub
dec
cmp
iret
stos
test
arpl
pop
jne
pusha
rorb
cmp
into
std
or
mov
cli
jae
dec
movsb
mov
iret
dec
out
arpl
mov
lea
lret
lret
popa
filds
mov
out
psraw
push
sbb
icebp
jle
imul
lret
dec
add
ja
or
out
mov
nop
leave
xorb
mov
push
ljmp
leave
xor
mov
mov
jns
imull
pop
jb
es
bnd
pop
mov
jo
das
test
push
frstor
jnp
cmp
mov
int
mov
jb
cli
daa
fnstsw
lea
in
and
fld
loopne
xchg
mov
jno
test
ss
cmp
mov
in
testb
arpl
mov
outsl
mov
xchg
rolb
nop
pop
and
int3
es
mov
imul
push
mov
push
push
mov
mov
cli
out
inc
subl
xor
movsl
sbb
pop
out
icebp
jle
xlat
insl
pusha
sarl
sbb
mov
and
cltd
sbb
aam
mov
xchg
jmp
mov
lahf
dec
xchg
sar
inc
mov
mov
sbb
mov
mov
movsb
ret
push
pop
jo
js
push
std
faddl
mov
mov
pop
es
out
xchg
insl
lret
in
ret
subl
inc
enter
fsub
cli
xchg
mov
xchg
push
movsl
lods
enter
cmp
and
sbb
xor
adc
out
test
loope
insb
mov
nop
sub
test
add
fnsave
xchg
and
cmpsl
mov
inc
sub
stos
ss
pop
sahf
pop
adc
stc
ss
outsb
xchg
xchg
sub
xchg
adcb
nop
xor
dec
mov
hlt
dec
xchg
shl
lds
mov
sbb
rorl
adc
jb
orb
int3
ss
jno
inc
pop
add
cmp
jo
add
dec
inc
jmp
data16
daa
cs
loop
push
push
cmp
into
test
sahf
jp
pop
xchg
pop
mov
pop
xorb
cltd
ss
shrb
add
sbb
mov
fidivrl
mov
mov
push
add
sbb
xor
popf
push
jecxz
mov
cmpb
rolb
sbb
fldt
inc
adc
mov
xor
and
std
or
xor
test
cmpsb
mov
dec
sbb
jne,pn
dec
jb
ret
push
out
cmp
or
repz
mov
hlt
je
arpl
or
pop
push
iret
adc
push
jmp
mov
push
mov
je
imul
fldt
pusha
test
negl
lret
orl
setne
mov
testb
in
push
jbe
enter
lds
movsl
paddd
pop
ret
arpl
push
mov
loope
sbb
mov
dec
sub
mov
mov
push
insl
mov
jns
mov
pop
jg
pop
mov
rclb
sbbb
inc
and
inc
cmp
adc
lods
pop
insb
je
cltd
lcall
pop
ljmp
push
mov
pop
ret
pop
lods
jb
adcl
xor
lods
js
or
mov
iret
mov
add
out
dec
loop
stc
dec
sub
or
sbb
push
adcb
push
xchg
push
xlat
bts
inc
enter
in
test
or
das
push
loop
in
repnz
int
cld
push
fisubrs
cmc
outsl
cmp
fildl
sbb
sti
addb
mov
inc
test
in
rol
cmpsl
push
and
mov
jnp
and
xchg
cmp
pusha
out
mov
xor
pop
xchg
push
sub
shl
mov
dec
sub
ficompl
sub
add
ja
mov
in
inc
adc
cmpb
adcl
loopne
in
xchg
jo
dec
scas
add
aad
fs
cmp
xchg
pop
pop
scas
gs
enter
adc
adc
js
sub
fwait
arpl
mov
out
leave
call
and
lret
mov
shr
xor
xor
es
adc
maskmovq
divl
clc
inc
xchg
ds
jne
repz
mov
loopne
add
mov
pushf
mov
mov
decb
cli
mov
rorb
xchg
fidivrs
mov
mov
aam
arpl
enter
mov
cmp
adcb
xor
mov
and
loope
sbb
sub
mov
loope
add
cmp
xlat
cwtl
sahf
or
fdivrl
sbb
fwait
sbb
cmp
xor
inc
xor
daa
imul
xchg
lcall
mov
xor
imul
int3
movsb
pop
inc
adc
test
mov
jne
pop
push
mov
adc
sbb
pushf
xchg
scas
std
pop
adc
fstps
sub
jno
cltd
or
in
cmovge
mov
std
mov
jae
mov
iret
jno
or
sbb
xlat
ljmp
mov
push
push
das
test
icebp
leave
loopne
lahf
addr16
popa
add
sti
mov
mov
push
and
pop
inc
hlt
sub
cli
mov
xor
add
gs
xor
lods
jns
out
je
adc
xchg
lcall
push
mov
pop
cmp
push
xor
mov
sbb
jle
es
jo
or
sbb
dec
adc
pop
sub
insl
test
aaa
hlt
repz
xor
in
rep
scas
lcall
mov
test
cmp
push
mov
ds
call
movl
and
jg
cmp
and
jo
xor
movsl
aad
dec
xchg
dec
imul
xchg
or
je
xor
dec
mov
ss
fdivrl
push
out
cmp
mov
lods
shll
sub
in
fidivrs
pop
or
xor
mov
mov
inc
dec
pop
lret
movsl
push
mov
in
aad
shrb
jg
pop
test
cmpsb
jecxz
pop
fnstenv
cmp
sti
fdivs
out
pop
insb
mov
pop
mov
in
xor
imul
sbb
movsb
mov
stos
imul
cmpl
push
fnstsw
scas
ds
sahf
movb
mov
hlt
ret
dec
jb
pop
mov
sbb
cmpsb
mov
mov
lret
push
jmp
fwait
xchg
in
sbb
dec
pop
adc
sub
cmp
cltd
mov
mov
jns
jecxz
and
loope
jne
scas
xor
or
stos
lret
ljmp
pop
cs
xchg
fisubs
dec
cmpsl
pop
xlat
iret
pop
inc
mov
mov
pop
adc
adc
testb
lahf
jmp
xlat
clc
in
sbb
mov
sub
cld
addr16
xlat
nop
mov
sbb
int
imul
add
or
lods
adc
dec
jmp
cli
or
adc
sbb
je
fstp
icebp
add
mov
pop
xchg
push
jp
jno
aaa
jne
imul
cmp
jp
dec
mov
xor
loope
or
mov
shll
jmp
or
ja
or
out
or
pop
xchg
jg
add
jmp
mov
push
ss
cs
aaa
hlt
or
int
add
or
push
adc
out
push
adc
push
in
stc
pop
outsl
push
sti
jg
xchg
dec
jo
or
jge
call
cmpsl
add
jmp
and
fwait
imul
clc
mov
les
pop
pop
sbb
addr16
cltd
clc
leave
rcrl
jno
mov
push
data16
jecxz
fwait
cltd
jg
inc
cmp
test
lods
jp
add
ficoml
mov
push
pop
jge
addb
icebp
push
popl
push
and
mov
push
sub
test
test
out
lcall
jecxz
imul
add
push
pop
add
push
jle
and
addr16
in
add
rcr
sbb
mov
mov
adc
mov
lret
fmull
pop
fnstsw
scas
mov
inc
fidivrl
rolb
je
pop
loope
cld
fdiv
dec
xor
dec
jle
jg
jo
sahf
insl
insl
xorb
mov
sub
ret
sbbb
clc
fdivl
aad
loop
sub
imull
add
jo
pop
adc
add
add
enter
add
dec
arpl
mov
and
mull
std
mov
xchg
pop
adc
scas
idivl
xor
xchg
int3
int3
subl
xor
mov
dec
inc
dec
and
out
xchg
out
rcrb
xor
push
movsb
adc
cmp
cmp
adc
fldl
pop
pop
adc
sub
call
mov
scas
test
and
popf
pop
push
jno
out
adc
jge
pop
je
or
inc
push
cltd
push
cli
mov
std
sbb
sti
test
mov
adc
pop
mov
xchg
not
sub
shrl
jne
lds
mov
pop
lret
add
and
ret
jno
das
inc
and
into
mov
outsl
pusha
and
dec
adc
inc
lea
js
mov
inc
call
push
nop
cld
mov
int
fdivrl
lret
fistl
pop
aaa
mov
jg
clc
hlt
add
adc
test
imulb
ret
aaa
std
lret
sbb
adc
jmp
fisubrl
insb
lahf
jbe
xchg
in
popa
mov
sarl
xchg
sub
or
leave
gs
adc
xchg
inc
test
stos
jb
pop
lahf
out
mov
rolb
inc
adc
sub
mov
bound
aam
pop
jecxz
push
into
push
xor
add
jle
loope
sbb
fdivrp
fs
sub
cmp
mov
test
popf
xor
cmp
test
inc
pop
movsl
ret
mov
mov
jecxz
adc
jl
fistl
mov
pop
adc
add
xrelease
pop
add
mov
dec
test
jmp
xchg
dec
sbb
inc
loopne
jb
gs
lea
lock
int
xor
pop
cmpsl
sar
in
loopne
imul
sbb
stos
je
inc
mov
dec
test
iret
or
sbbb
jno
adc
xchg
insb
jmp
xchg
mov
cmovs
dec
mov
jmp
or
stc
mov
lret
add
and
lret
cmova
pop
scas
movsl
xor
push
int
xor
sub
adc
sbb
es
popf
outsb
dec
cmp
in
aam
aad
push
imul
mov
mov
sahf
jnp
gs
pushf
jnp
add
push
mov
sbb
addr16
jmp
das
jmp
and
mov
pop
and
cmpsl
mov
jg
inc
lods
scas
faddl
insb
jno,pt
add
les
daa
lea
mov
movl
loope
cmp
cmc
mov
sti
push
mov
add
ret
push
sbbb
lcall
int3
sbb
jnp
mov
stos
gs
mov
xchg
fimull
mov
test
push
addr16
fisubrl
lds
lods
js
jecxz
fnstsw
testl
and
lods
inc
in
jge
cld
stc
inc
push
mov
xor
inc
mov
int3
shll
xchg
mov
jne
cltd
xor
dec
loopne
leave
stos
test
adc
dec
jecxz
scas
jb
outsl
out
fcmovb
rorl
mov
mulb
inc
and
andb
adc
imul
fdiv
cli
nop
cmp
mov
push
add
xchg
dec
add
cmp
fstl
scas
sbbb
mov
mov
cmp
cmp
mov
and
out
adc
out
mov
dec
jmp
addr16
fistpll
xchg
sbb
push
and
xchg
push
and
fcompl
sbb
mov
inc
hlt
xchg
and
repnz
jbe
or
dec
ret
pop
out
fidivl
or
sbbl
push
fisttpll
jge
xor
lds
js
ja
mul
mov
in
xor
out
xlat
sbb
inc
sbb
cpuid
pop
jno
popa
cmp
or
cli
js
loop
nop
sub
adc
sub
cmp
test
aaa
jo
pop
add
add
push
lahf
xchg
sbb
lods
mov
adc
or
scas
or
push
std
fldt
inc
mov
js
adc
pop
jmp
shrl
shlb
mov
aas
cmc
push
push
out
movsl
jp
or
add
jae
pop
gs
adc
popa
ds
out
dec
into
xchg
mov
insl
popf
mov
cmp
hlt
xchg
andb
mov
mov
outsb
cwtl
pop
ret
mov
subb
cmp
lods
fdivl
and
pop
inc
cli
sub
arpl
mov
scas
shrl
test
and
cmp
xor
mov
mov
int
lret
js
aad
jns
in
outsb
jmp
test
pop
jle
inc
pop
mov
mov
xor
lods
dec
ss
mov
and
mov
or
cltd
jle
pop
mov
mov
in
mov
jno
movsb
dec
clc
add
jnp,pn
or
inc
in
xor
cmp
shlb
dec
xchg
movsb
lcall
jo
xor
mov
gs
or
jge
cmc
mov
lea
in
jmp
ret
jle
cli
sbb
lods
lcall
and
sbb
test
sarb
incl
sub
cmpsl
mov
out
or
push
shr
jle
adc
sbb
ficomps
shrb
jae
dec
loopne
sbb
jns
dec
imul
push
cmpsb
stos
aad
das
int
and
mov
cltd
adc
pop
pop
xlat
sub
ljmp
mov
subl
mov
push
daa
adc
jbe
mov
dec
arpl
xchg
aas
jnp
xor
mov
bound
push
push
mov
push
pop
je
ds
ds
dec
icebp
jnp
xor
dec
pusha
sub
data16
push
es
mov
arpl
cmp
push
fcomp
add
sbb
es
mov
mov
xor
aad
pop
jbe
mov
insb
and
clc
pop
movsb
pop
fldenv
daa
push
pop
int
lods
or
xchg
or
xchg
cs
add
out
cmp
inc
sbbl
cwtl
repz
xor
mov
jbe
addb
icebp
xlat
sbb
inc
add
gs
aas
jo
bound
stc
test
jae
out
pop
daa
pop
pop
push
fs
mov
call
dec
inc
cltd
std
xchg
pop
sub
push
dec
out
pop
scas
dec
in
or
and
xor
lahf
jecxz
cmpsb
xor
sub
jg
fisttps
mov
mov
mov
mov
pop
pop
test
pop
sbb
jg
pop
or
jns
pop
test
push
mov
adc
jge
dec
push
dec
cltd
pop
pusha
xchg
mov
js
sahf
mov
ds
adc
mov
and
adc
jl
dec
mov
aaa
add
js
jns
and
push
inc
mov
jp
xchg
lret
das
or
sub
sbb
push
sub
lods
test
fdivrs
jno
fldenv
orl
mov
push
xor
or
lods
xchg
jg
or
adc
mov
dec
adc
aam
sbb
and
cmp
mov
movsl
jae
add
in
push
adc
mov
es
adc
loope
or
inc
push
outsb
mov
add
sbb
loop
jl
or
subb
mov
lods
xchg
lahf
adc
mov
js
push
pop
adc
pushf
pop
es
fstpl
arpl
in
jecxz
adc
stc
push
movsb
dec
daa
sbb
and
push
adc
sti
push
xchg
cld
jbe
mov
data16
pusha
push
scas
mov
dec
pop
cltd
out
sar
outsl
add
dec
lock
jae
rcll
or
or
inc
cmp
insl
data16
inc
repnz
adc
xchg
and
testl
stos
inc
mov
adc
lea
daa
test
push
mov
dec
cmpsb
sbb
out
jl
xlat
add
ss
lret
dec
xchg
outsb
mov
cmp
inc
push
cmp
mov
add
mov
decb
ja
lea
cmp
arpl
addr16
push
sub
fwait
lret
int3
pusha
mov
sbb
dec
xor
or
mov
nop
or
lods
or
jge
xlat
xor
xor
arpl
xchg
les
jecxz
jno
jge
neg
adc
ja
nop
adcl
mov
jg
lods
lret
js
xor
and
jne
shll
pop
leave
cmpl
sub
and
mov
add
sbb
xchg
in
dec
xor
aad
aam
pusha
jmp
or
adc
inc
and
sbb
pusha
outsb
and
push
or
loopne
and
adc
push
or
test
jno
rcrb
xor
andb
stc
fdiv
orb
imul
hlt
in
cli
arpl
arpl
mov
pop
cmp
pushfw
icebp
das
inc
movsb
enter
add
dec
ja
mov
vmwrite
sbb
js
pop
shll
and
shll
jmp
mov
shlb
lods
xor
outsb
out
mov
lahf
loope
pop
in
rcll
lret
or
in
mov
es
xor
pop
ja
mov
push
in
push
mov
dec
sti
jle
gs
cmp
jl
or
inc
pusha
xor
jns
cs
cmpsb
push
jne
ficoms
aas
in
xchg
dec
pop
lcall
rcr
bound
mov
es
xor
and
xorb
push
cli
call
add
pushl
out
mov
lock
int3
call
mov
xchg
jne
sbb
cmp
iret
push
mov
sub
adc
loopne
pop
sbb
xchg
sbb
sub
jo
mov
adc
inc
cmpsl
jle
add
bnd
hlt
inc
bound
aam
ljmp
mov
xchg
fmull
jb
je
inc
xchg
mov
mov
clc
lods
pop
jmp
lods
mov
mov
adcb
clc
lcall
dec
push
ret
sub
imull
cltd
clc
and
aad
xchg
xchg
in
lods
movsb
movsl
movsb
pushf
fsts
mov
ds
pop
add
and
cmpsl
pop
in
shl
das
lcall
add
fcmovbe
test
cmovle
nop
sbb
pop
arpl
jbe
mov
pop
inc
out
in
cli
imul
inc
out
aas
add
mov
aam
inc
or
adc
xchg
pop
jg
jp
adc
in
push
inc
rclb
roll
into
sbb
dec
and
divb
inc
add
or
daa
rcrb
icebp
test
pushf
push
ret
insl
mov
push
cmp
jb
mov
cli
jb
popf
jg
popa
dec
fbld
mov
push
dec
push
repnz
hlt
sub
call
jbe
or
jb
pusha
sbbl
leave
aad
inc
add
pusha
sbb
jae
jns
dec
lcall
sbb
je
pinsrw
dec
cmpsb
dec
sub
xchg
iret
in
dec
test
jns
pop
hlt
or
mov
jne
lods
mov
sub
xchg
hlt
inc
jnp
cltd
sti
mov
cltd
lods
xchg
in
cmp
movsb
pop
xor
loopne
mov
fld
jp
jmp
int
pop
into
xchg
rcrb
xchg
test
stc
aam
pop
mov
divl
std
sub
lds
daa
jmp
or
dec
dec
cmp
ret
shrl
ret
or
ljmp
mov
or
cmp
adc
lods
outsb
jno
loope
sub
mov
push
sbb
movsl
sub
xchg
jle
rcrb
mov
repnz
mov
mov
dec
mov
xlat
inc
push
in
popl
test
mov
jae
and
loope
imull
ja
xor
cmp
test
fstpt
lret
sbb
ljmp
mov
and
jae
dec
test
ds
shrl
fisubl
xorl
or
fabs
or
inc
fisubrl
adc
ds
fistl
scas
test
xlat
leave
in
lds
movd
add
jbe
paddusb
dec
aas
adc
mov
aad
adc
xor
push
dec
pop
fsub
push
jns
bound
adc
jecxz
xchg
xchg
in
mov
push
pop
cmp
mov
mov
xchg
jmp
jmp
int3
mov
inc
xchg
cmp
xchg
bound
icebp
inc
sahf
mov
test
xchg
xorb
sarb
inc
xchg
mov
xor
loop
cltd
rcl
dec
jp
xchg
out
jnp
or
les
cmp
out
imul
xor
cmpsl
int3
test
cmp
cmp
in
mov
fistpl
pop
mov
push
and
xchg
vpcomb
aas
lea
xor
arpl
stos
sahf
xorl
jg
sti
mov
push
aaa
xor
sahf
fnsetpm(287
mov
repz
imull
xchg
sbb
popf
clc
int
mov
fcomps
add
and
sbb
js
push
or
out
xor
lret
dec
pop
jns
shl
mov
dec
insl
lock
inc
push
mov
dec
add
inc
mov
cmp
in
and
inc
ljmp
or
faddl
xor
mov
adcb
ret
xorl
je
mov
mov
shl
push
dec
pop
cmp
leave
jae
andb
aad
mov
xlat
lret
mov
pop
lds
mov
mov
mov
fdivrs
jecxz
ret
aaa
mov
jnp
out
cmc
mov
shrb
adc
aas
outsb
inc
sti
lcall
pop
test
xor
lret
es
and
sbb
out
int3
je
sub
push
cmpb
mov
add
xor
jnp
iret
add
sub
pop
loopne
pop
mov
adc
adc
test
negb
or
jmp
pushf
lcall
adc
rorl
mov
cs
subb
xor
sub
dec
nop
jmp
adc
sub
movsl
imul
jl
mov
push
adc
cltd
sbb
jno
add
add
mov
cld
push
cld
jb
mov
and
dec
mov
enter
aam
pop
pop
pop
in
and
sub
sti
ja
mov
sbb
out
das
add
sbb
insb
imul
pop
fsubs
out
out
lea
aas
jg
mov
push
pusha
data16
popl
pop
pop
popa
xchg
je
pop
push
cld
loop
stos
xor
or
push
jle
sahf
insl
push
mov
movsl
scas
jae
jb
jl
iret
lock
xor
hlt
cli
or
loopne
push
pop
push
adc
fistpll
or
add
insl
nop
ret
mov
jge
sbb
and
dec
pop
mov
out
fdivr
or
rcrb
sahf
loop
dec
lcall
in
mov
fstl
mov
bound
imul
leave
push
sbb
mov
nop
inc
push
xor
cmpsl
and
fs
push
aas
test
pop
adc
jl
cmp
sbbb
clc
inc
jecxz
pushf
mov
icebp
int
shl
push
lds
inc
or
push
stos
je
scas
dec
pop
lret
cwtl
repz
fwait
adc
icebp
add
cmp
dec
lock
xchg
add
mov
filds
in
xor
je
fbld
push
psubd
imul
pop
xchg
inc
movsl
scas
fistpll
aaa
cs
sbbl
fnstcw
mov
mov
lods
dec
or
jp
mov
lods
jge
push
into
out
push
dec
aas
ds
ret
sbb
or
sub
or
xor
fwait
aaa
pushf
sub
out
cmp
int
stc
xor
cmp
popf
jne
icebp
imul
mov
jno
mov
cltd
push
aaa
outsl
dec
sbb
mov
and
dec
inc
xchg
aam
lea
ss
pop
loope
inc
ja
inc
or
and
xor
clc
adc
clc
inc
cmp
shlb
mov
mov
in
sub
xchg
lds
push
mov
in
mov
push
dec
xchg
stos
scas
icebp
xlat
fwait
xchg
sbb
pop
inc
push
out
dec
mov
dec
mov
push
decl
loope
xor
sbb
mov
or
das
and
mov
loope
sbb
cmp
stos
push
mov
push
jge
sbb
cmc
xchg
xchg
clc
scas
js
and
cmpsl
mov
pop
ljmp
dec
fdivl
pop
add
mov
jb
aaa
adc
loope
in
outsb
out
jl
or
xor
mov
pusha
adc
mov
outsl
adc
xor
jp
adc
pop
movl
jbe
out
aad
sub
jns
adc
scas
jl
sub
movsl
cmp
aaa
lds
or
or
lret
mov
mov
lret
cmp
imul
iret
and
jne
ljmp
mov
scas
addr16
data16
sub
mov
cmp
in
pusha
into
cltd
jmp
push
sbb
imul
and
push
addl
cmpsb
loopne
push
popf
sbb
mov
imul
neg
fimull
xor
into
movb
mov
outsb
mov
je
popa
mov
cmp
cwtl
stos
pop
lods
iret
xor
movsl
outsl
dec
sar
cmp
in
aam
jp
push
mov
mov
or
pop
in
mov
pop
mov
jbe
imull
lods
mov
dec
data16
or
enter
mov
inc
mov
imul
pop
std
cmpb
out
jnp
xlat
add
mov
mov
mov
mov
or
iret
dec
push
inc
ret
shlb
scas
test
push
imul
negl
fisubs
cmp
and
mov
push
and
stos
pop
pop
loope
inc
mov
mov
xlat
pop
dec
or
dec
or
inc
in
cmp
lods
popa
cltd
dec
push
sbb
aam
cltd
adc
inc
cmp
cmp
js
cwtl
jb
jns
mov
cltd
pop
xor
sarl
dec
fyl2xp1
fisubrl
addl
xchg
inc
int
addl
repnz
out
outsl
jl
or
cmp
inc
movsl
rorb
adc
mov
xchg
clc
leave
iret
scas
mov
jp
dec
leave
rclb
xchg
mov
xlat
mov
mov
rcrl
jnp
int
xchg
push
sub
clc
xchg
sbb
mov
xor
aam
mov
push
addb
inc
sbb
xor
inc
mov
aam
ret
lock
inc
cs
sub
das
fwait
cwtl
xlat
aad
adc
lret
push
push
mov
imul
das
mov
addl
xor
cmpb
aad
sbb
mov
in
pop
pushf
pop
or
push
and
push
loope
arpl
inc
ja
xchg
mov
loopne
cmc
icebp
sub
push
repz
inc
das
pop
mov
pop
rclb
loopne
jae
mov
adc
dec
pusha
jnp
mov
and
push
sbb
aad
xchg
movsl
mov
mov
jb
es
aad
mov
clc
fsubrs
sub
rcrl
or
xor
mov
cmpsb
add
mov
jge
push
and
or
add
aam
pop
mov
test
icebp
and
push
lods
lcall
stos
clc
out
add
mov
mov
xor
fbld
cmp
test
pushf
popa
stos
fimull
inc
sbb
mov
sub
shlb
sbb
outsl
aad
mov
out
sbb
push
mov
inc
in
stc
sbbb
lods
and
scas
shll
fwait
jo
xchg
sbb
inc
sub
add
push
out
cmp
inc
push
arpl
mov
pop
popa
je
xor
inc
xlat
movsb
das
mov
dec
push
jae
cmp
inc
sahf
es
mov
jno
sti
aad
mov
lods
inc
sub
addb
stc
scas
das
xchg
test
mov
lahf
mov
jo
outsb
in
xor
std
testb
inc
jl
mov
xchg
frstor
repz
imul
stc
stos
pop
pop
inc
loopne
psubusw
xchg
xor
sar
in
jo
inc
jnp
pushf
dec
xor
adc
call
xor
movsl
push
sub
popf
outsl
mov
xchg
test
cmc
xlat
mov
sahf
ret
fwait
cltd
jg
loop
xchg
fistpll
adc
pop
add
ljmp
xor
enter
aaa
scas
rcr
cmpsb
mov
mov
xchg
mov
iret
push
jnp
xchg
add
test
outsb
xchg
push
push
imul
unpckhps
repz
imul
sub
or
repnz
test
popa
mov
push
clc
and
fdivl
ret
sub
and
scas
add
push
mov
das
scas
pushf
rcr
push
add
pushf
mov
addr16
cmpsb
bound
mov
or
mov
cld
lcall
sahf
dec
jo
or
int3
xchg
popf
jb
fs
fnstcw
jb
lods
iret
cld
inc
xchg
or
cmp
sub
mov
ret
and
mov
sar
adc
add
sbb
xor
add
or
sub
xor
push
sub
mov
pop
push
fildl
push
xchg
cmp
adc
leave
imulb
xchg
xchg
xor
push
rcrb
mov
push
inc
lods
cmp
in
daa
test
pop
jbe
loopne
mov
inc
cmp
jnp
jmp
popa
lock
repnz
mov
mov
mov
jp
xchg
mov
adc
and
cmpsl
out
nop
push
xor
jp
mov
pushf
pop
popf
movl
mov
jmp
into
sbb
mov
js
mov
jns
imul
push
jg
and
into
idiv
mov
cmpsb
mov
gs
push
push
pop
adc
sub
movsl
mov
mov
and
xor
sub
pop
ja
mov
pop
xchg
jmp
push
mov
cmp
mov
mov
ret
das
mov
mov
push
cmp
int3
popf
lret
out
push
test
ffree
mov
dec
adc
mov
insb
pop
repnz
pop
inc
popa
sub
mov
lcall
in
adc
loope
ret
rcrl
jmp
enter
pop
pop
mov
jae
sub
sbb
mov
xor
sbb
cmp
lahf
dec
dec
sahf
fiadds
fsubl
imul
mov
sbb
js
cmp
mov
adc
fmull
add
aas
aaa
dec
or
insl
sti
mov
mov
shl
loopne
inc
es
std
pop
add
gs
xor
push
cmp
pop
xor
gs
addl
aam
mov
add
popf
push
jb
addr16
out
and
mov
and
xor
jl
lods
fcmovu
xor
jno
adc
mov
xchg
mov
lods
xchg
arpl
and
xchg
cmp
sbb
xchg
sti
pcmpgtw
out
xchg
popa
jae
inc
sub
add
xchg
adc
stos
mov
shl
shrl
mov
in
arpl
sbb
lds
loop
mov
mov
or
xor
push
pop
insl
adc
shll
dec
ja
loop
push
pop
stos
out
movl
mov
sbb
pop
in
dec
lods
or
push
push
xor
xchg
sub
jns
mov
mov
push
dec
sbb
add
mov
movsb
sbb
xchg
arpl
jae
and
dec
nop
or
mov
fdivrs
dec
cpuid
movsl
push
xchg
outsl
leave
mov
leave
jno
pop
sbb
fiadds
cwtl
sbb
lds
in
ret
inc
xor
cwtl
rolb
test
or
ficomps
pop
pop
dec
adc
jns
dec
ljmp
jns
sub
in
push
jno
stos
cld
out
fs
sbb
jno
stc
sbb
pop
pop
fadds
cs
leave
hlt
int3
movsb
ficomps
fwait
ljmp
mov
cmp
aas
xor
dec
fcmovne
sub
add
lods
pop
aaa
mov
insl
xor
or
stos
ss
ja
push
lret
popa
xchg
sbb
fstpt
dec
data16
mov
mov
loopne
movsb
adc
mov
pop
adc
in
mov
sub
jbe
and
loopne
pop
pop
outsb
aaa
rolb
xor
sub
or
shl
cmpsb
mov
fcomp
and
test
cs
divb
xchg
in
addr16
cmp
std
adc
jle
lret
cmp
loopne
xchg
pusha
loopne
movsl
sahf
fildll
cli
rorb
in
jg
mov
sub
je
enter
loope
sub
push
mov
mov
test
js
or
pop
jecxz
btc
loopne
jmp
lods
addr16
hlt
and
and
xor
pop
fisubl
test
xchg
loope
or
leave
clc
in
jg
daa
int3
imul
xor
jnp
jnp
dec
cmp
jl
testl
push
mov
xor
cs
mov
mov
cld
sub
in
add
push
std
pop
sub
push
jge
mov
mov
ja
adc
jle
loopne
stos
jmp
sub
orb
and
jge
stos
sub
and
push
test
dec
adc
mov
mov
mov
call
mov
rcrl
mulb
in
xchg
test
ret
push
push
fs
and
xor
mov
lcall
mov
xchg
cli
std
or
test
cli
mov
sarl
and
jecxz
pusha
repz
icebp
lea
jne
ret
mov
pusha
fnstcw
lret
sub
cmp
jle
jmp
jb
in
shlb
fnsave
mov
sbbb
add
gs
push
mov
test
popa
rcr
arpl
in
mov
sbb
sub
mov
mov
jecxz
bound
push
mov
icebp
out
ljmp
movsb
data16
add
adc
in
inc
pop
fistpl
cs
pushf
xor
daa
cld
cmc
xchg
push
out
add
add
dec
adc
sub
mov
lea
ds
mov
enter
xor
popf
dec
fs
cmp
lea
lock
cmp
dec
add
das
and
in
and
add
fisubs
inc
lods
push
sub
jmp
push
push
inc
js
add
aas
xchg
mov
adc
test
jg
push
cmc
pushf
pop
lock
push
push
push
mov
sub
inc
inc
test
mov
fidivrl
cmp
addl
addr16
mov
inc
cltd
add
push
mov
std
add
and
rcrb
dec
lods
js
jae
xor
movsl
mov
xorb
or
push
rcl
fnsave
add
jb
icebp
push
mov
hlt
xor
push
addr16
inc
or
lds
push
ljmp
clc
je
pop
cld
cmp
repz
mov
mov
jno
push
cmp
cs
jmp
sahf
mov
adc
mov
xor
pop
ficompl
inc
sub
mov
ss
xchg
aas
or
jle
stc
jecxz
xor
add
out
ja
mov
push
mov
jp
int
jl
roll
jne
cwtl
aas
mov
sbb
sbb
dec
push
sub
pusha
and
in
je
testb
sbb
int3
inc
lds
push
cs
xchg
cmp
adc
sbb
inc
es
lods
sti
fscale
xlat
test
aas
push
arpl
jl
ljmp
push
push
adc
and
mov
lret
jo
inc
jns
and
adcl
out
push
bound
adc
inc
stos
ljmp
movsb
xor
leave
hlt
out
cmp
push
shll
ret
dec
pop
or
add
call
movsl
nop
out
outsl
xchg
sub
repnz
lret
adc
xchg
add
adc
inc
pmaxub
leave
divl
daa
jbe
inc
ljmp
push
lahf
mov
fwait
add
sbb
lret
add
clc
mov
fwait
adc
add
cwtl
aas
rcrl
sub
scas
adc
inc
in
stos
add
lds
ret
pop
xor
pop
xchg
in
loope
sub
sbb
movsl
push
or
ret
stos
in
ret
mov
mov
hlt
iret
cwtl
js
setp
lret
xchg
xchg
fisttps
or
mov
push
mov
in
faddp
mov
dec
sub
icebp
cld
push
fsubs
ret
push
cmp
mov
fdiv
fdivrs
add
jmp
test
sub
fists
jno
ficomps
and
aad
sub
cwtl
pusha
loop
push
mov
lea
adc
mov
outsb
cmp
shl
pop
mov
push
adc
adc
andl
outsb
adc
cmpsl
push
jnp
or
lret
adc
sub
mov
imul
inc
xor
sub
cwtl
jbe
push
and
mov
das
fnstsw
stc
and
sub
mov
sbb
in
orl
xchg
ja
push
inc
rcrb
pop
lret
subb
jns
adc
sub
test
fstps
inc
sub
call
mov
out
bound
push
adc
scas
cmp
in
ja
ss
es
inc
fucomp
cld
push
cmpsb
cmp
cmp
push
sbb
cmp
ljmp
sbb
inc
mov
nop
jno
call
xor
call
aas
xchg
sub
push
mov
pop
mov
or
xor
jle
lret
mov
pop
xor
cmp
push
jbe
or
adc
and
mov
xchg
dec
add
fucomp
fldl2t
and
sub
sbb
pop
xor
aas
lea
lea
xchg
fnstcw
popl
mov
popa
sbb
inc
test
sub
sub
ret
inc
fistps
sbb
call
in
add
ret
adc
icebp
sub
mov
xor
mov
cmc
arpl
in
lret
cmpsb
int3
cmc
xchg
dec
cmpsl
cmp
cmc
cltd
dec
dec
fsts
imul
enter
fisttpl
enter
add
mov
rcrb
xor
fwait
pop
lahf
bound
add
stos
jbe
jb
aaa
sub
pop
mov
sbb
popa
dec
and
xchg
cs
sbb
inc
dec
xchg
mov
andb
lods
pop
push
xor
dec
or
cld
mov
pop
ds
xchg
push
movsl
repz
dec
or
mov
xor
insb
pop
sbb
out
bnd
xchg
jbe
imul
inc
dec
or
dec
xchg
or
push
into
pusha
jno
lods
and
mov
aas
pop
mov
push
fstpt
push
pop
push
sub
xchg
mov
scas
jecxz
add
in
jb
sub
sub
sub
sti
inc
inc
lods
es
push
add
cmp
push
and
jno
or
fidivl
std
mov
push
sub
inc
sub
jmp
das
add
imul
sti
stc
cltd
inc
mov
das
mov
leave
push
mov
mov
and
xlat
and
push
call
cmp
hlt
mov
mov
xor
and
mov
lahf
in
in
push
cli
cld
mov
addr16
nop
divl
gs
fwait
std
or
repz
incl
les
push
jnp
int3
lea
adc
out
dec
out
sahf
push
addr16
dec
add
pop
inc
lds
jg
fucomip
jge
or
adc
stc
xor
cld
jo
test
jbe
out
dec
fs
xor
xor
lcall
inc
mov
insb
sbb
mov
cwtl
jle
ret
sbb
cwtl
lcall
movsb
dec
dec
jmp
icebp
or
inc
inc
into
ja
push
shl
dec
imul
mov
cmp
mov
icebp
pop
repz
push
lods
sub
adc
push
or
push
incl
mov
sbb
out
gs
fwait
sarl
jne
pop
in
xchg
push
mov
cmp
fistpl
or
outsl
repnz
push
push
ss
mov
inc
jmp
repnz
inc
scas
pop
sarb
push
ds
mov
jo
out
mov
pop
scas
lcall
mov
jg
xor
jo
pop
add
mov
insl
sub
movsb
pop
nop
int
inc
xchg
mov
mov
rcr
inc
adc
lret
jge
daa
jns
fxch
and
xchg
xlat
stos
out
jae
push
fsubrs
arpl
popa
sti
add
adc
mov
lds
xchg
ljmp
sbb
xchg
repnz
sub
sarb
dec
xor
out
sti
jb
inc
scas
cmpb
mov
arpl
jae
mov
stc
loop
stc
cld
pusha
mov
xor
insl
test
aaa
fnstsw
xor
mov
fisttpl
mov
dec
movsb
scas
test
lock
aad
sbb
nop
cmpl
lret
xchg
fdivs
pop
hlt
jnp
fisttps
jl
in
cltd
xor
or
jecxz
loopne
cmp
push
ja
lea
loope
hlt
push
or
sub
pop
cmp
int3
xor
and
int
and
cltd
ljmp
mov
imull
inc
xor
cmp
sbbl
stc
pop
lods
push
lahf
adc
xor
mov
loop
push
outsl
shl
push
mov
cmp
dec
movsl
xor
iret
or
pop
mov
mov
mov
sbb
fsubr
into
cmpb
mov
lock
imul
shl
roll
push
fdivs
ja
sbb
push
out
or
in
fimull
dec
push
push
jg
mov
cmp
imul
rcrb
cmp
mov
jnp
pop
or
sbb
and
mov
ret
sub
push
loope
add
push
dec
fistps
add
push
popa
sub
jecxz
pop
xor
addb
mov
fidivs
jae
mov
inc
and
adc
in
clc
pop
cltd
sub
addr16
sub
add
testb
mov
cmp
repz
push
mov
sub
pop
pop
loope
adc
pushf
sbb
aaa
jecxz
mov
scas
lahf
int3
enter
inc
add
pop
aam
push
pop
imul
stos
es
rcrl
stos
mov
and
imul
cmp
mov
cmp
fcmovnb
insb
iret
mov
and
aaa
xchg
incb
inc
and
jb
lret
inc
lcall
and
sub
scas
mov
sub
add
pop
in
daa
jp
sbb
loop
in
inc
loope
movsb
add
dec
mov
out
mov
push
es
les
mov
nop
lock
sub
scas
mov
inc
pop
hlt
imull
jne
push
jl
mov
sbb
fstl
std
jp
push
movsb
ret
aaa
cmp
mov
lock
fadds
sahf
and
cs
jno
lods
ret
or
add
sbb
mov
shrl
sub
inc
add
lcall
scas
or
addb
mov
mov
daa
icebp
fidivl
mov
jnp
pop
stos
dec
push
push
clc
icebp
iret
xchg
inc
sbb
sbb
pop
sar
pusha
inc
outsb
xchg
movsb
out
inc
ret
or
adc
xchg
icebp
ffree
mov
cmp
fldt
ss
inc
sub
jb
daa
mov
arpl
iret
pusha
xor
xlat
ljmp
xchg
es
fsubp
popf
cli
jge
mov
pop
pop
xchg
sub
mov
push
icebp
cmc
and
sbb
sbb
lcall
add
jmp
test
cmpsl
call
ds
and
cmpsl
addr16
movsb
frstor
pusha
add
orb
push
out
pop
xchg
xlat
pop
jl
clc
cs
negl
mov
movsl
xchg
xchg
pushf
std
cwtl
data16
mov
xchg
xchg
sbb
pop
jmp
pop
ljmp
pop
push
pop
pop
icebp
mov
addl
jb
pop
or
lock
mov
outsb
gs
in
in
xchg
mov
mov
xchg
push
jae
or
and
cmp
fs
push
icebp
insb
out
mov
cltd
mov
adc
outsb
mov
jg
jns
and
xor
sarl
nop
mov
outsb
and
sbb
and
insl
jp
cmc
push
imul
ret
and
xlat
cltd
mov
imul
jp
adc
fimull
push
dec
inc
mov
xchg
jge
outsb
js
jecxz
repnz
fdivl
xchg
lret
jp
mov
mov
ljmp
xchg
sub
jo
dec
dec
imul
sti
andl
cmp
adcl
pop
int
cmp
or
cld
imul
add
mov
mov
jp
mov
mov
addr16
fs
mov
jo
sub
pop
pop
push
inc
notb
mov
sbb
and
daa
aaa
jmp
out
push
mul
dec
cmp
filds
movsb
test
cmp
lcall
cmpsl
inc
pop
stos
mov
mov
and
fbstp
aad
test
faddl
ret
xor
sti
mov
fildl
ljmp
mov
lcall
insb
lahf
mov
push
xchg
mov
pop
aam
test
dec
inc
jae
lock
cmpb
decl
jbe
popf
js
mov
xor
pop
xchg
push
fadds
ljmp
xchg
aaa
jecxz
fs
cmp
mov
sti
out
xor
repnz
dec
adc
xor
mov
call
xchg
cmpsl
mov
mov
popf
add
mov
loop
pop
sub
jecxz
fucomip
sub
mov
jp
ret
aam
fwait
cmc
ret
in
outsl
mov
xchg
jecxz
jmp
jne
xchg
jne
out
or
push
xlat
push
sbb
lods
ficoml
ds
pop
test
outsl
xorl
fbstp
pop
mov
call
pop
add
sahf
mov
pop
xchg
data16
lcall
addl
test
pop
idiv
cwtl
iret
lods
push
ljmp
or
mov
xchg
adc
rcr
frstor
adc
xchg
dec
mov
xchg
in
js
pop
xchg
sbb
mov
aam
sub
fiaddl
mov
roll
adc
scas
xchg
mov
fwait
push
shll
push
xchg
test
idiv
rcrl
push
adc
fadd
test
loopne
jmp
shll
fwait
nop
addr16
roll
lea
int3
mov
pop
lcall
xor
scas
sbb
rcrb
xor
jle
jo
loope
outsl
das
les
inc
sbb
add
or
push
repz
push
sub
out
sub
rep
mov
jge
imul
hlt
aas
mov
sub
mov
dec
daa
scas
wrmsr
out
out
cli
fwait
sahf
into
mov
or
enter
push
lret
jbe
adc
or
in
pop
je
out
fidivrl
lret
sub
ljmp
test
xchg
pusha
inc
int
mov
in
in
adc
loop
loopne
mov
adc
mov
lods
jne
inc
out
sar
push
and
push
inc
lock
loopne
inc
fistpll
mov
mov
push
or
mov
push
in
mov
sbb
mov
xor
jecxz
mov
push
loopne
mov
repz
icebp
pusha
pop
inc
sbbl
jbe
insb
adc
ss
mov
std
nop
scas
xor
jge,pt
ljmp
add
push
sbb
adc
xor
xor
faddp
sbb
negb
arpl
and
testl
mov
stc
mov
clc
mov
gs
lock
movsb
popa
mov
test
lods
jbe
sub
push
bound
pop
mov
scas
and
mov
mov
push
nop
mov
test
ljmp
aaa
enter
cwtl
outsb
loop
xor
outsb
cltd
push
sti
stc
ljmp
jge
inc
inc
int
pop
jge
shr
and
and
push
inc
imul
adc
fnsave
mov
stos
mov
push
dec
pop
cmpsb
dec
rorb
out
mov
jmp
cmpsb
pop
stc
mov
sbb
cli
xor
push
nop
aas
dec
sbb
flds
cmp
or
popf
inc
push
cmc
rcll
cmpsb
mov
sub
fucom
hlt
in
sub
dec
sti
call
cltd
dec
push
adc
or
ljmp
push
insl
add
insb
xor
mov
adc
push
and
or
push
and
je
das
cmp
dec
dec
push
xor
ja
leave
xchg
hlt
pop
sub
xchg
mov
int3
xor
rorb
push
test
mov
sub
pop
test
cli
inc
inc
dec
xchg
add
leave
setg
push
sbbb
sbb
aaa
or
out
outsl
dec
push
gs
jae
adc
mov
lods
ljmp
pop
cmp
pop
lds
aam
pinsrw
xchg
xchg
cmp
mov
jne
cld
inc
mov
or
ss
movsb
out
popa
push
int3
lods
lods
xchg
push
inc
aaa
inc
repnz
jg
clc
scas
popf
iret
nop
mov
jnp
fwait
scas
mov
ja
jne
stos
sbb
adc
ret
jge
pop
jno
jnp
dec
icebp
add
sbbl
movsb
cmp
jle
fwait
lahf
scas
push
addr16
jnp
xor
mov
pop
hlt
pop
jge
aas
dec
shl
and
and
mov
lock
cwtl
sti
cmp
mov
mov
out
jmp
lret
mov
lret
adc
in
lahf
loop
pop
and
insl
pop
mov
stos
jo
fwait
mov
cmpb
out
imul
lcall
stc
fcomp
fildl
pop
push
loope
scas
insl
add
lret
ret
pop
lcall
sub
lock
jo
cmp
es
jecxz
test
movsl
std
lea
inc
rorl
into
mov
push
mov
dec
repnz
mov
jb
push
std
adc
ja
jl
lds
xchg
jno
lcall
std
ror
pop
cwtl
push
stos
xorb
std
and
mov
and
xchg
adc
push
mov
cmp
jmp
js
push
cmp
lods
cmc
add
loop
jmp
mov
sahf
adc
pop
outsb
loopne
ret
or
data16
adc
pop
inc
test
cld
jb
clc
dec
mov
push
xchg
sti
int
push
clc
xor
xor
mov
inc
and
movsb
pop
sub
pusha
xor
pop
mov
xchg
cld
mov
out
xor
bnd
mov
shlb
test
pop
out
jmp
mov
push
mov
rcr
les
pop
seta
mov
sti
aam
jmp
or
scas
into
je
mov
lods
push
jo
push
movsl
xor
adc
dec
mov
fs
xor
ret
jp
loope
mov
jb
pop
addr16
scas
lods
xchg
jmp
jmp
scas
jo
mov
push
cwtl
mov
aad
or
cli
push
test
aaa
out
jae
jge
jnp
sbb
popf
dec
adc
mov
add
stos
xor
mov
fcmove
xor
xor
pshufw
sub
test
and
pop
mov
int3
outsb
cld
inc
sub
lahf
imul
stc
subl
mov
int
pop
sub
aam
mov
daa
bswap
insb
sbb
inc
mov
stos
loope
in
pop
push
and
ss
and
and
imul
push
adcb
aam
or
or
ljmp
inc
sbbl
inc
aam
std
or
rcrl
push
or
sub
out
xor
aas
jnp
pop
lcall
mov
iret
dec
xchg
clc
cmp
mov
je
adc
aad
cli
popa
sahf
cmpsl
lret
sbb
mov
movsl
sub
imul
mov
int
inc
std
daa
mov
push
lss
fstps
arpl
stos
popa
fidivl
jle
fs
hlt
jg
push
jecxz
sub
loopne
pop
sub
movsl
js
das
jg
stos
pop
cmp
xor
mov
ja
out
ss
jmp
push
ficomps
ljmp
imulb
movsl
jg
and
invd
sbb
icebp
xor
sub
pushf
fisubl
loopne
in
insb
lret
push
mov
cli
sbb
jb
sub
in
mov
add
jno
mov
in
test
scas
adc
das
sti
jge
shlb
call
out
addb
mov
aas
aaa
shll
cmp
or
fldlg2
jae
movsl
dec
jle
xchg
push
imul
or
icebp
cs
mov
and
loopne
ljmp
clc
roll
cwtl
imul
mov
pop
adc
cmc
cld
int3
ljmp
xchg
or
or
mov
jmp
xchg
mov
or
and
sbb
add
out
cmp
xor
mov
es
push
loop
fwait
repz
les
dec
gs
iret
mov
push
nop
insl
or
xchg
fdiv
cs
divl
sbbb
mov
cs
adc
jo
xor
mov
cli
in
sub
pop
and
xchg
cmp
jmp
insb
insb
jno
add
or
scas
out
adc
loop
adc
fdivr
add
clc
fsqrt
jg
pushf
xlat
jb
into
ds
je
shll
roll
adc
gs
mov
mov
adc
fdivrl
or
out
pop
sbb
cmp
imul
add
out
push
pusha
dec
ficomps
mov
cld
insl
push
imul
or
enter
add
les
pop
cli
push
iret
xchg
lcall
pop
sub
mul
add
dec
adc
fldcw
pop
xor
test
cld
pop
mov
push
incl
mov
test
sbb
or
pop
bound
mov
push
mov
push
pop
pop
pop
int3
cmp
xchg
inc
lcall
mov
dec
ret
shl
sbb
jbe
and
or
int
loope
xor
jns
jp
mov
cmp
shll
pop
loopne
pop
clc
cmp
iret
sbb
mov
movsl
aas
stc
push
push
fsts
or
into
subl
int3
inc
cmp
push
into
xchg
and
dec
inc
ds
lock
pop
dec
push
cmp
mov
or
sub
rcll
inc
add
loop
xchg
and
xchg
xchg
or
decl
lods
push
repz
data16
xor
xchg
and
inc
add
loopne
cmp
jb
cs
imul
fnsave
fcompl
jecxz
mov
pop
pusha
add
cmp
jns
sarb
jecxz
dec
push
adcb
mov
roll
adc
data16
lcall
jb
xchg
mov
dec
jae
test
in
inc
pusha
ss
xor
pop
cmc
jo
or
xor
in
jae
cwtl
lcall
out
pop
fs
inc
fwait
mov
ret
fs
lahf
and
in
add
gs
pop
enter
loopne
fsubl
xor
xor
add
mov
inc
jo
test
in
sbb
into
pusha
das
fsub
add
xorl
mov
inc
add
leave
jmp
jle
add
out
mov
es
mov
ret
outsl
or
cmpsl
outsl
ljmp
add
mov
iret
xchg
mov
and
cwtl
mov
or
add
add
push
sbb
movsl
in
dec
je
pusha
std
sub
sub
inc
addr16
cmpsl
lcall
inc
fisttps
and
dec
mov
incb
ja
leave
sbb
out
arpl
inc
push
cltd
cmp
dec
outsb
call
cmp
cltd
or
xor
popa
sahf
cmpsb
cld
or
push
imul
enter
xchg
shlb
jnp
mov
imul
inc
in
xlat
fcompl
shr
xchg
ljmp
push
or
cli
dec
add
mov
leave
lea
gs
sub
jecxz
out
pop
es
lods
cmpsl
das
loope
lret
cmpsl
push
dec
jno
subb
and
repnz
add
cld
iret
push
faddp
sbb
cmp
inc
xorl
xor
shrl
mov
sub
xchg
pop
xchg
out
push
add
cwtl
mov
rep
popa
pop
icebp
in
cmp
cli
cmpsb
push
xchg
mov
inc
lods
add
loop
mov
ljmp
xchg
cmc
adc
xor
out
fdivrl
loope
lock
mov
fcomps
pop
in
push
mov
cmpl
xchg
je
or
punpckhwd
iret
shr
jo
fcmovnb
or
or
rcll
outsb
lock
cltd
insb
pushf
daa
in
cmp
out
dec
jne
popa
sbb
adc
loop
test
xchg
cli
cmc
and
rclb
sub
je
pop
in
inc
ds
pop
lods
inc
andl
and
mov
std
clc
or
pop
out
adc
fcoms
mov
push
mov
jo
jecxz
out
insb
out
in
cvtps2pi
clc
jg
subb
jnp
ret
sti
xchg
addr16
mov
add
fiaddl
xor
dec
push
cmpsl
and
into
ret
mov
js
sub
out
into
loope
push
xlat
jnp
out
out
push
mov
sbb
fs
mov
fsubl
inc
js
jns
push
rcrb
xor
jge
sbb
cmp
pop
push
ljmp
dec
arpl
xor
jnp
sub
cmp
ja
cmpsb
xor
loopne
add
nop
or
dec
loope
das
xchg
bnd
shll
mov
or
cmpl
adc
bound
ret
push
das
nop
mov
icebp
mov
add
inc
push
cmp
jg
mov
hlt
jle
daa
inc
gs
jp
adc
push
or
ljmp
fiadds
or
pop
jl
negb
add
pop
imul
push
push
mov
fiaddl
aas
cmpl
dec
andb
mov
iret
out
dec
cmc
jbe
add
int3
sti
jp
fwait
inc
and
inc
push
xor
popl
ja
cmp
vdivss
mov
in
dec
mov
lds
cmp
das
lea
mov
jmp
lds
repnz
sbb
sub
movsl
shrl
bound
popf
lahf
ja
jnp
pop
jbe
pop
inc
xchg
mov
jp
xor
iret
out
push
xor
push
call
pusha
out
je
push
call
xor
fwait
outsl
jg
std
sbb
mov
testl
pusha
xor
imul
loopne
rol
test
in
out
mov
jno
int3
out
cmpsl
outsb
into
jne
xor
jb
sbb
and
stc
and
in
dec
and
fimuls
inc
enter
jno
enter
cltd
jp
xchg
mov
mov
jg
call
in
push
ficoms
jno
jecxz
test
fs
imul
and
adc
movsb
test
adc
fcompl
mov
test
shr
icebp
sti
pop
mov
je
clc
ja
gs
test
loopne
iret
out
fnstcw
jo
mov
push
xchg
ds
aaa
outsb
scas
mov
mov
xlat
fsts
jle
mov
inc
jo
add
scas
add
inc
pushf
bswap
inc
dec
aaa
and
lahf
test
das
xchg
mov
cltd
pop
xchg
sbb
mov
cmp
lcall
cmp
push
mov
cmp
cmpsb
jecxz
clc
push
sbbb
sub
nopl
mov
dec
fadd
push
movsb
out
xchg
pop
pop
mov
nop
jo
sub
stc
adc
ljmp
mov
cs
std
ficoml
sub
cld
and
xchg
aas
iret
in
or
mov
sbb
in
xchg
test
rclb
mov
rolb
scas
sbb
test
movsl
pop
xchg
push
xchg
xchg
dec
ljmp
outsb
xor
mov
or
add
rolb
js
pop
rol
cmpsb
fstpl
cmp
inc
mov
ret
imul
pop
jno
fsubl
rcll
push
inc
pop
push
push
les
adc
jae
stc
sub
sub
sbb
nop
jl
dec
xchg
cli
mov
ljmp
pop
test
xchg
xor
xor
jno
or
es
jl
dec
out
mov
or
lea
lock
adc
mov
pop
cltd
stos
mov
adc
cmp
push
mov
inc
fisubl
xchg
xchg
stos
sub
ret
subb
in
outsl
pushf
cmp
jecxz
jp
jg
pop
das
fcomps
jns
sub
lods
scas
jge
xchg
fldt
gs
add
and
in
adc
pop
mov
outsl
dec
xchg
scas
jle,pn
hlt
mov
imul
loope
pop
sarl
xchg
push
lahf
scas
push
ja
add
pusha
dec
ss
lods
subl
push
jg
mov
lods
push
gs
mov
in
lret
aas
mov
scas
adc
mov
add
pop
fimuls
sbb
in
test
dec
xor
test
sbb
test
idivb
mov
pop
mov
jno
or
mov
ljmp
push
call
push
xchg
lods
fnop
lcall
xchg
notb
sysenter
ficompl
fidivrs
mov
clc
xor
cmp
ret
test
nop
sub
add
hlt
pop
xlat
imul
sub
push
jecxz
mov
aaa
sub
mov
inc
js
and
inc
push
bound
or
ret
iret
mov
cltd
cmp
push
sub
pusha
sub
je
shll
adc
movsl
push
adc
and
mov
fwait
sarl
mov
in
lret
sub
mov
adc
push
pop
and
push
mull
cvttps2pi
leave
je
push
cmp
subl
jbe
dec
xchg
mov
mov
and
cmpl
push
push
int
inc
rorl
lods
loopne
das
mov
shll
aam
mov
push
mov
xor
xchg
aad
rcrl
sbb
popl
test
faddl
mov
xor
rcr
push
jns
inc
sarl
inc
push
fcoml
and
or
push
xor
clc
mov
in
mov
dec
mov
addl
daa
or
sbb
rorb
or
ja
sbb
sub
cwtl
inc
cmpb
pop
inc
pushf
fs
call
int
ror
je
in
icebp
leave
xchg
fs
xchg
sub
sub
ret
loop
enter
lret
neg
insl
iret
clc
lods
xchg
cmp
adc
test
scas
and
lcall
pop
mov
and
movsb
cmp
or
cs
mov
mov
pop
scas
push
sub
cwtl
data16
jb
xchg
sub
push
add
cmp
push
adc
sbb
fs
push
pop
stos
push
stos
sbb
xor
push
lock
pop
stos
jmp
outsb
add
fimuls
jge
daa
and
dec
mov
rcll
loopne
insb
ljmp
and
inc
shl
add
cmpsl
jns
mov
cwtl
call
push
xchg
lret
dec
xor
sub
int
mov
ret
cmp
dec
push
insl
add
aas
or
push
xor
and
jns
andb
and
mov
mov
movsl
cmc
stos
sub
push
push
into
xchg
xchg
lret
movsl
lock
outsl
mov
out
add
es
out
pop
test
push
jae
cmp
int
push
test
push
sbbl
pmaxub
sbb
xchg
ficompl
icebp
mov
pop
in
add
and
shrb
ds
lcall
or
outsb
repz
pop
rorb
cmpb
xchg
je
dec
in
out
aas
sbb
jmp
adc
iret
fsubrs
push
hlt
outsb
loop
dec
stos
adc
mov
iret
pop
js
inc
enter
mov
in
jg
jae
adc
inc
movsb
aad
hlt
dec
scas
push
cwtl
push
mov
lods
loope
out
test
arpl
mov
pushf
leave
std
stos
lods
roll
mov
dec
push
mov
inc
test
inc
and
lds
xchg
mov
mov
fisttpl
jecxz
or
addb
cmp
sbb
jge
cmp
lods
dec
cmpsb
cmc
inc
push
cli
pushf
andl
pop
in
scas
jbe
fldcw
aas
fisubl
adc
xor
scas
loopne
mov
gs
jge
clc
adc
mov
cmpsb
inc
or
movsl
into
cmp
sbb
jns
mov
add
adc
xchg
mov
add
pop
mov
pop
mov
ds
cld
add
fsubp
pmuludq
enter
push
pop
outsb
fisttps
lcall
jbe
dec
inc
lds
clc
xchg
aad
push
inc
cmpb
ror
push
lret
dec
shll
xchg
jge
push
inc
add
mov
iret
adc
push
popa
fs
push
bound
enter
lahf
lock
fidivs
xor
inc
stos
insl
jge
add
xor
in
addr16
ljmp
cmpsb
adc
jns
push
imul
or
jge
leave
popf
or
cmp
cmp
outsl
cmpsb
dec
cmpb
mov
pop
popa
ljmp
mov
pop
cmp
xor
addr16
ja
push
mov
aaa
lea
sub
fcomps
push
fidivrl
push
jne
xor
dec
cmpsl
mov
icebp
aas
and
xchg
jle
sbb
test
test
sub
adc
int3
popf
inc
xor
aam
gs
dec
jnp
cs
inc
xor
test
test
ficomps
xor
lret
pop
cmpsl
add
je
mov
adc
gs
andl
stc
jno
and
roll
sti
stc
loopne
cmp
and
hlt
xchg
bound
add
lods
stc
mov
shrl
gs
bound
xor
inc
repnz
lods
int
inc
mov
jp
xor
or
xor
adc
add
mov
pushf
sbb
into
sahf
int3
mov
pop
dec
add
sbb
sbb
mov
mov
mov
dec
fildll
add
data16
or
add
imul
loope
pop
jmp
nop
ss
cmpsb
push
in
push
xor
aad
sub
sarl
std
xchg
ret
xor
enter
js,pt
mov
notl
cwtl
in
adcl
xchg
xor
mov
mov
adc
push
jg
push
or
push
cli
out
jmp
test
dec
rcll
fbstp
jno
or
mov
ret
adc
mov
in
push
mov
inc
push
clc
and
inc
jg
out
or
je
leave
orl
scas
mov
or
aaa
mov
icebp
into
daa
adc
push
subl
jg
dec
dec
dec
fucomip
insb
imul
popf
jbe
sbb
in
scas
push
dec
int
inc
mov
aaa
adc
stos
loope
sub
mov
or
lcall
nop
add
dec
punpcklbw
pushf
xor
movsb
push
fidivl
mov
or
adc
sti
sbb
leave
clc
pop
pop
jns
cli
cmp
pop
sub
push
jnp
das
movsl
push
cli
pop
enter
inc
inc
in
sub
loope
test
pop
repz
lcall
mov
insb
dec
addb
leave
mov
jb
add
mov
lret
int3
sub
xor
jns
js
mov
cmpsb
int
cmp
cmp
mov
pop
xor
inc
adc
adc
sub
arpl
shlb
fmuls
scas
pop
fcmovnbe
xchg
nop
mov
xchg
pop
xor
xor
sti
mov
dec
add
push
xchg
insb
dec
mov
mov
cltd
cld
loop
cmp
xor
jo
enter
aaa
push
sti
lahf
fcomp
mov
jp
ficoms
pop
in
pop
dec
jo
mov
test
jg
sub
cs
fdivrp
inc
test
ffree
mov
or
cltd
or
sar
dec
insb
xlat
xor
adc
mov
xchg
out
lock
push
xorb
mov
mov
push
insb
inc
stc
adc
jmp
or
xchg
fdivl
push
pushf
xchg
fs
push
inc
aam
jl
nop
outsl
push
jl
mov
push
outsb
mov
arpl
sbb
adc
sbb
mov
es
leave
jo
cmp
shr
enter
imul
lcall
jg
and
leave
into
xchg
into
call
inc
or
dec
mov
sbb
push
mov
in
inc
jae
insb
stos
mov
pusha
adc
mov
sub
sarb
shrb
xor
sahf
mov
jmp
js
movsl
pusha
adc
or
lds
movsl
push
push
or
cmc
insb
push
cmp
mov
in
mov
sub
xor
mov
mul
fwait
loop
jns
fsub
adc
ffree
adc
mov
or
cli
js
sbb
repnz
shrb
cmp
mov
cld
or
cmp
jne
sub
sti
pop
aam
push
jl
xor
mov
inc
fiaddl
scas
push
cs
ds
stos
aas
pop
mov
mov
sub
out
out
cmp
mov
lcall
popf
leave
xchg
jmp
cmp
je
dec
add
dec
testb
jecxz
outsl
cmpsb
outsl
outsl
dec
imul
inc
arpl
mov
aas
push
daa
ds
insb
es
fcomps
jle
xchg
push
add
enter
mov
xchg
fs
dec
inc
sbb
xor
outsb
pop
int3
pop
inc
movsl
push
mov
mov
int
mov
icebp
dec
dec
sub
mov
inc
sbb
out
and
mov
in
cmpsl
jns
pop
lock
loop
xchg
xchg
es
test
out
jb
jl
xor
mov
adc
jle
fwait
dec
cs
or
rorb
inc
xchg
sub
jl
jp
jmp
sub
xor
ficoms
adc
jmp
or
sub
testl
mov
mov
fistpll
xor
ss
inc
xchg
sbb
jle
mov
ljmp
roll
adc
mov
sbb
stos
lret
inc
lret
rcll
aas
push
addb
lahf
divl
adc
imul
int
loopne
movq
pop
clc
and
aaa
aam
pop
and
pop
pop
xchg
xchg
clc
pop
lcall
sub
fsubl
leave
sbb
out
in
push
ret
fsubs
out
cmp
shr
jmp
and
imul
xor
and
lret
jmp
pop
add
call
test
pusha
shll
repz
jg
mov
pop
jno
add
ds
xor
xor
mov
hlt
push
mov
mulb
pop
test
jbe
popa
mov
push
scas
pop
adc
mov
push
pop
sahf
enter
sub
mov
ret
cmp
push
mov
fstpl
cmp
and
mov
lds
rcrl
mov
inc
sbb
push
roll
cmpb
xchg
lock
scas
lret
mov
insb
push
shlb
dec
pop
sbb
sub
push
and
sub
add
and
cmp
xchg
xchg
dec
add
ds
ds
push
and
mov
lret
subb
pop
repnz
dec
hlt
push
lret
std
dec
lahf
adc
add
inc
aas
sbb
shlb
mov
daa
xchg
cmp
mov
les
inc
pop
mov
cmp
call
int
inc
stc
and
mov
ds
mov
cmp
mov
repnz
push
pop
jle
js
push
fists
inc
iret
nop
in
test
xor
dec
inc
jecxz
adc
mov
pop
fwait
mov
bound
fisubrl
push
shll
xor
mov
jmp
mov
orl
xor
lahf
mov
test
and
mov
insb
not
or
inc
mov
xchg
test
ror
push
movsl
jl
pop
sub
dec
cltd
adc
jl
jns
and
daa
jg
insb
imul
in
push
stc
sti
lcall
mov
out
call
sarb
in
or
sbb
mov
std
rorl
adc
dec
pop
mov
mov
and
pop
pop
pop
push
inc
add
ds
pop
loopne
rclb
leave
mov
insl
test
insl
scas
push
add
mov
lret
mov
test
roll
test
repnz
popa
mov
stos
jecxz
data16
and
shll
mov
mov
cmp
jecxz
movsb
jae
dec
mov
lcall
popf
xchg
xor
push
jnp
jnp
inc
ljmp
scas
push
fwait
inc
adc
lret
cmp
inc
jnp
addr16
popf
test
ljmp
out
jnp
jl
enter
cltd
dec
jge
lahf
rclb
outsl
and
sbb
pop
inc
popl
outsb
clc
sub
aad
mov
lcall
sbb
fdivl
sbb
std
inc
int
fiadds
xchg
mov
lods
push
je
aas
nop
cmpsb
inc
sub
fwait
xchg
lret
outsb
or
sbb
fsub
shl
out
jmp
imul
ds
nop
adc
inc
sbb
test
scas
mov
movsl
into
jecxz
push
fsubrs
push
std
fildll
adc
jno
jge
pop
and
lea
cmp
xor
bound
and
out
fs
int3
mov
xlat
push
pusha
jle
aaa
pushf
loope
adc
and
xor
adc
iret
das
adc
push
pop
or
jle
jb
sub
cmp
ret
pop
imul
mov
cmp
les
arpl
mov
shr
jecxz
sbb
stos
sub
mov
cli
lret
rcr
fwait
aam
stos
cmp
cs
xor
loope
popa
shrl
pop
xor
lods
push
cltd
ret
js
popa
movsl
dec
sbb
lods
xor
inc
pop
xchg
push
movsl
jmp
iret
push
cwtl
push
pop
mov
ret
sub
xlat
test
ss
call
cwtl
dec
push
shl
pop
dec
and
fwait
adc
stos
jo
nop
push
cmp
gs
repz
or
jge
aaa
push
dec
in
sbb
dec
insl
movsl
gs
mov
adc
jp
insb
inc
mov
ljmp
or
mov
push
xchg
or
call
mov
sbb
aad
xor
cmpsb
xor
jp
add
icebp
test
push
cli
aam
popa
xchg
and
cltd
dec
sub
push
mov
xor
outsb
cmp
aad
inc
rcll
fcmovnu
mov
lods
cmc
loope
mov
aad
mov
in
push
adc
push
inc
add
dec
mov
icebp
int3
int
mull
sub
adc
movsb
fstl
scas
add
sub
aaa
inc
js
cmpl
xor
sub
xor
out
fscale
sbb
add
cmp
imul
and
mov
daa
dec
xchg
add
mov
and
xlat
cmp
mov
inc
and
cmp
mov
ret
sbb
out
add
icebp
mov
hlt
dec
test
cmp
cltd
iret
icebp
daa
xchg
fisubl
pop
mov
push
popa
fdivl
test
sub
sbb
mov
and
lock
or
mov
pop
test
xor
mov
in
push
in
lcall
mov
push
sahf
lret
cwtl
lock
arpl
xchg
pop
adc
xchg
push
mov
mov
inc
push
sub
fsubrp
sbb
cli
push
les
dec
cmpsl
sbb
lock
mov
movsb
adc
popa
mov
inc
popf
xchg
xor
fwait
sub
int3
jp
and
inc
addb
fcmovu
dec
xor
lahf
fbstp
rorb
inc
shl
dec
inc
cmpsl
test
xchg
pop
push
push
inc
cmpsl
and
int
add
jge
mov
mov
mov
stos
ss
push
test
out
mov
stos
xor
mov
xor
dec
push
pop
xor
mov
repnz
dec
cli
int
cwtl
movsl
aas
cld
mov
sub
lds
popa
mov
inc
mov
sbb
fwait
xor
xchg
inc
sbbl
iret
jb
mov
roll
sub
sbbb
stos
jle
das
or
jecxz
xchg
test
int
sbb
jae
repnz
in
xor
dec
out
cmp
add
aam
dec
dec
int3
jnp
shrd
and
neg
jle
xor
jbe
das
aam
ja
mov
jae
aas
ds
or
fmull
mov
add
jne
jge
push
push
add
jl
inc
sbb
shr
cmp
movsb
ljmp
sbb
dec
mov
mov
sarl
jl
push
sub
scas
filds
lods
aad
and
cmp
push
mov
pop
xchg
cld
cmc
jne
rcll
iret
push
pop
aam
jbe
mov
cmp
popf
loopne
sbb
adc
sbb
and
xor
repz
movsl
enter
lods
xor
ficoms
pop
adc
fsts
mov
in
cmc
xor
sub
pop
push
les
jnp
dec
inc
cmp
stc
sbb
mull
xchg
jo
je
mov
push
rcr
adc
imul
inc
inc
xchg
and
daa
ficompl
xchg
popa
pop
mov
fidivrl
or
in
dec
adc
dec
add
call
or
lea
mov
clc
mov
adc
fcomps
dec
ret
jo
push
sub
pop
faddp
sbb
mov
pushf
rorb
out
insl
cmp
das
loope
mov
push
and
dec
fcmovbe
nop
cwtl
fldt
iret
fsts
lret
inc
mov
push
rcll
testb
fs
or
mov
imul
xor
mov
mov
sbb
cmp
inc
clc
repnz
mov
push
cmp
in
push
mov
dec
mov
jmp
push
mov
cli
cmp
adc
js
les
adc
mov
lock
int3
pusha
and
adc
jmp
or
xchg
mov
and
iret
in
cwtl
dec
sbb
adc
xchg
cltd
outsl
add
sbb
adc
imul
in
loop
fs
jp
popa
mov
dec
cwtl
cli
mov
dec
jmp
adc
les
cld
js
cs
das
and
sbb
adc
fists
mov
rorb
les
mov
jmp
popf
jb
push
xchg
es
adcl
jmp
fwait
addl
lcall
int
xchg
add
mov
add
adc
icebp
dec
lods
and
loop
push
push
fadd
inc
cmp
jb
push
cmpsb
push
shrb
test
int3
fs
shl
aas
mov
push
pop
inc
jg
jo
aaa
rcrl
je
inc
xchg
fsubs
stos
sbb
cmp
outsl
gs
gs
test
or
push
aas
insl
or
test
in
mov
jne
pop
lods
in
sub
movsb
dec
xor
xchg
push
in
pop
pop
fldcw
iret
adc
out
jae
adc
adc
popa
mov
jmp
ss
gs
into
aam
adcl
mov
imul
mov
data16
lcall
dec
jbe
push
fisttps
xchg
mov
inc
jg
insb
hlt
mov
cmp
inc
or
push
lcall
loope
add
pushf
jne
mov
insb
xlat
cmp
outsl
mov
mov
outsb
mov
pop
int
dec
pop
and
pusha
dec
aaa
mov
add
repz
insl
jle
jnp
or
push
nop
scas
pop
icebp
movsb
mov
or
sbb
inc
ja
fcoms
xchg
out
gs
dec
das
dec
lahf
adc
xchg
push
inc
lahf
cmp
mov
mov
and
or
xor
cmp
addr16
xchg
cmp
inc
mov
jb
hlt
jge
xor
repz
lods
xchg
loop
inc
and
aad
sarb
mov
xchg
aad
es
test
rcrl
dec
push
imul
pop
icebp
mov
jo
mov
xor
xchg
adc
fsubl
xchg
out
pop
mov
fdivrp
mov
jg
sysret
cld
into
scas
fadd
sub
or
xchg
xor
scas
insl
mov
jecxz
fsubrl
lods
and
cmp
sbb
icebp
jge
roll
pop
sub
xchg
test
or
pusha
mov
xor
fcoms
pop
popf
adc
fiaddl
cmpsl
mov
sbb
sub
sahf
sub
aad
xor
imul
xchg
push
push
out
mov
js
data16
fs
fistpl
int
mov
imul
outsb
fsubrp
enter
xor
arpl
out
jge
es
popf
inc
addr16
test
jne
test
mov
enter
push
inc
push
inc
jne
lods
mov
out
fs
push
je
adc
fs
pop
sahf
adc
aaa
xchg
mov
pop
imul
scas
call
lea
dec
fadds
arpl
push
outsb
mov
fistpl
mov
scas
push
movsl
sbb
movsl
mov
das
cld
sbb
dec
sti
pop
xchg
imul
adc
jb
xchg
jge
add
pushf
or
xor
pop
outsb
xor
out
in
hlt
xchg
js
pminsw
xor
test
mov
mov
cs
gs
or
aad
add
or
xor
lahf
xor
xchg
sub
sti
xchg
xchg
sahf
jl
notl
and
fdiv
xor
movsl
std
test
sbbl
mov
fwait
and
imul
xor
insb
mov
cmp
lret
movsb
out
mov
test
aaa
adc
outsb
or
sub
inc
in
mov
xor
or
xor
rcrb
sar
movsl
ljmp
cmc
xchg
inc
xchg
mov
std
cmp
pop
push
dec
stos
loop
push
out
and
loope
arpl
push
jp
push
mov
push
les
xchg
mov
add
dec
or
mov
cmpsb
stos
stos
jp
pushf
pop
mov
xchg
add
push
adc
xchg
frstor
cmc
jg
imulb
mov
out
sbb
or
mov
arpl
mov
loopne
test
mov
mov
gs
sbbb
inc
adc
or
adc
inc
lret
out
cmp
mov
sub
adc
xchg
imul
pusha
push
call
les
popf
cmpsl
mov
add
mov
push
lds
mov
daa
inc
adc
or
rcrb
xchg
xor
out
push
jno
push
dec
loop
rcrb
adc
icebp
out
mov
and
js
jno
push
inc
gs
cmp
out
mov
push
test
add
xlat
pop
ljmp
jecxz
iret
adc
jb
js
adc
push
shl
xchg
mov
andb
cmp
and
nop
loop
test
cmp
dec
bound
les
and
loopne
test
xchg
jno
jg
sbb
jle
dec
lock
rorl
movsb
cmpsl
inc
aam
adc
dec
stos
or
lcall
xor
xchg
outsb
push
aas
pop
xchg
data16
sbb
mov
xor
xchg
and
sub
xchg
mov
pop
mov
inc
xchg
out
into
scas
jnp
mov
mov
or
jge
lea
mov
jl
add
ficomps
pop
cmp
fmuls
mov
lret
mov
mov
scas
sbb
xor
dec
aam
mov
test
sub
jae
inc
adc
cmc
gs
jecxz
into
subl
mov
cmc
in
mov
cmc
push
nop
mov
pop
jo
xchg
jmp
lahf
scas
push
sbbb
pop
jmp
cmp
sahf
or
adc
fisubl
lods
jo
mov
adc
mov
push
call
fistpl
mov
dec
sub
jb
dec
lret
je
cld
xchg
or
sti
inc
fisttpl
inc
adc
fsts
daa
and
pop
insb
push
adc
ret
aad
lcall
xor
pop
pop
mov
inc
fs
stos
cmp
mov
cmp
ret
shl
jp
shrb
lock
adc
pop
xor
mov
mov
xor
jge
popw
add
lock
push
sbb
mov
cli
mov
mov
notb
leave
test
jecxz
aam
mov
shrb
inc
pop
push
jbe
inc
cmp
xchg
rcrl
push
orb
add
dec
push
cmp
dec
insl
jb
daa
xor
push
outsl
cmp
push
ret
icebp
sbb
mov
arpl
dec
shl
imul
test
cmp
jg
js
add
sub
cli
sub
inc
movsl
sub
dec
xchg
cmp
pop
xor
sbbb
and
xor
sarb
cmpsb
scas
lods
outsb
adcb
shl
pop
xchg
fsts
rol
sbb
orl
adc
call
fs
lods
fs
cld
mov
dec
pop
add
or
pop
clc
imul
iret
imul
aaa
pop
js
outsb
arpl
cmp
lcall
fwait
mov
or
mov
sub
xor
dec
in
outsb
jmp
mov
and
addr16
rcll
add
pusha
mov
lret
in
jle
stos
mov
gs
arpl
push
adc
fwait
xchg
add
fsts
and
nop
mov
cwtl
lret
outsl
push
movsb
stos
and
mov
mov
sbb
inc
inc
jmp
out
dec
aad
inc
cltd
shll
arpl
mov
adc
jmp
adc
pop
hlt
inc
data16
mov
mov
sbb
outsl
subl
and
test
test
push
cmp
and
loopne
in
shrl
cli
cmp
loope
and
imul
push
movsb
inc
push
mov
mov
mov
es
sbb
push
dec
push
push
and
out
mov
dec
fadds
sbbl
xor
stos
pushf
in
pop
mov
bound
das
out
outsb
mov
push
pop
lret
push
lret
shlb
divb
pop
adc
not
dec
jno
mov
sub
das
hlt
cld
sub
mov
sbb
pop
sub
push
fimuls
jbe
mov
fisttpll
aaa
add
gs
mov
cmp
fs
jmp
ljmp
push
jge
lods
mov
shrl
mov
cmp
loopne
mulb
cmp
fbstp
pop
and
dec
sub
dec
cltd
inc
sbb
jb
mov
in
or
inc
sbb
insl
push
aad
lcall
cld
ljmp
into
and
xor
aas
xchg
push
mov
fwait
or
inc
adc
mov
pop
ljmp
mov
fidivrl
jmp
push
sar
out
mov
insl
or
adc
lret
lret
cmpsl
iret
pop
ss
lcall
mov
clc
push
shll
sub
popa
ret
repnz
rorb
xor
lret
jb
notl
es
or
cmp
jo
and
xchg
in
dec
addb
pop
pop
and
pop
pop
or
fxtract
dec
out
xor
dec
xchg
int3
lcall
jne
pop
in
and
mov
jb
in
clc
movsl
jae
arpl
ja
jns
divl
lret
sbb
jmp
dec
inc
insl
out
mov
aam
sbb
xor
out
pop
jo
stos
jge
cmpsl
fistpll
pop
push
add
cmpsl
pop
jle
mov
out
sub
inc
movsl
jne
xchg
cld
cmpsl
pop
fcmove
stos
mov
pop
insl
mov
inc
or
and
fmulp
pop
inc
das
inc
repz
in
daa
and
imulb
idivl
out
cmp
jg
push
jmp
mov
xor
cmp
mov
sub
and
cli
lcall
lea
sbb
test
into
scas
shld
push
inc
loope
mov
ficomps
xor
xchg
cmc
sub
ljmp
and
mov
adc
in
jmp
mov
and
mov
lcall
pop
sbb
fisubrs
mov
bound
lret
pop
dec
movsb
inc
push
add
xchg
jnp
jns
mov
test
mov
jbe
outsl
arpl
incb
or
rcl
cmc
xor
mov
push
mov
fstpl
lret
add
cltd
sti
lcall
cmpsl
add
mov
cmp
ja
xchg
sub
hlt
jmp
repz
stos
dec
dec
mov
int
jge
jl
sti
xchg
dec
jecxz
in
es
mov
xor
mov
jne
and
sub
pusha
mov
jp
xlat
mov
cs
fisttps
jnp
mov
mov
fsub
or
xchg
push
test
jo
popf
mov
mov
dec
mov
loope
je
xchg
mov
in
xchg
xor
mov
das
xor
mov
lcall
cmp
inc
in
push
leave
mov
xchg
icebp
addl
push
stos
dec
roll
gs
not
mov
ds
test
inc
xchg
jae
popa
cmpsb
xchg
mov
cwtl
leave
jne
out
out
adc
sub
out
push
lds
pop
or
fimull
xor
out
es
jge
mov
or
pusha
stos
fmuls
mov
mov
std
sbb
push
mov
push
pushf
push
retw
jb
inc
mov
rorb
outsb
fldt
adc
scas
pop
mov
xlat
cwtl
imul
movsb
addr16
xchg
out
mov
popw
pop
flds
f2xm1
jne
insb
in
and
insl
mov
lret
xor
lcall
in
out
out
jne
xchg
clc
push
or
data16
ja
stos
jmp
cmp
inc
xchg
shlb
jg
in
mov
jns
ja
inc
jl
test
mov
cmp
xchg
lea
xchg
sarb
bound
and
mov
pushf
inc
outsl
cmp
loope
inc
mov
scas
into
xchg
inc
mov
js
in
mov
inc
mov
ret
mov
cmp
add
add
xchg
in
adc
das
mov
push
into
add
sub
dec
fucomi
repz
and
mov
in
div
inc
or
divb
cld
xchg
imul
into
or
ret
divb
lahf
lcall
lock
out
cmpsb
cwtl
add
repz
inc
cltd
mov
sbbb
ljmp
into
dec
adc
xchg
sbb
xchg
xor
xchg
mov
lea
pusha
int
push
inc
mov
inc
pop
mov
pop
test
push
es
insl
out
mov
les
repnz
movsl
adc
out
jmp
pop
add
dec
mov
jnp
int
mov
xchg
inc
fwait
rorb
outsl
mov
jg
in
and
sub
les
dec
push
daa
sarb
pusha
dec
dec
loopne
icebp
mov
insb
stos
adc
inc
jb
pop
add
aaa
loopne
loope
test
es
dec
adc
xor
and
ret
insl
pop
leave
pushf
xchg
dec
sbb
push
mov
clc
dec
mov
push
cmpsl
inc
fbld
push
testl
mov
cmc
jecxz
inc
mulb
adc
pop
rolb
lods
add
mov
jns
lods
xchg
cmp
mov
outsl
insb
mov
pop
ljmp
lods
mov
inc
jle
popa
or
push
aad
push
xchg
adc
ljmp
sub
daa
push
aas
sub
fdivs
icebp
or
sbbl
cmp
jg
je
pop
and
mov
aaa
add
out
xor
push
imul
sub
pop
into
jo
and
pop
sbbl
js
push
cltd
sbb
in
xlat
popf
jnp
int
pushf
pop
or
cmpsl
dec
cmp
xchg
test
mov
mov
sbb
mov
push
cmp
push
test
cmp
xchg
jle
xchg
fstpl
aam
lret
movsb
push
lret
sub
add
xor
adc
sub
jg
adc
jbe
sbb
jmp
sbb
xor
push
out
mov
dec
cmp
mov
in
dec
cmp
jg
dec
into
lds
in
or
scas
jecxz
adcb
push
jg
or
lea
push
inc
dec
cmp
sub
jbe
movsl
fiaddl
dec
fsubrs
fimull
pop
xchg
scas
mov
enter
lret
pop
ljmp
mov
push
jne
stc
sbb
pop
jnp
sbbb
aam
imul
push
dec
adc
nop
out
ss
adc
pop
push
mov
ja
add
cmp
inc
sbb
mov
lds
lahf
mov
in
insl
mov
xlat
cmpl
decb
adc
add
ljmp
mov
xchg
loope
bound
sahf
inc
inc
mov
insb
gs
xor
adc
lods
xor
mov
xlat
lds
adc
mov
lret
nop
push
mov
fisubs
push
cmp
lahf
lock
inc
call
loope
xor
jge
jno
push
dec
out
out
mov
mov
out
jns
imulb
jge
test
push
mov
insb
call
lea
sbb
jne
inc
mov
lock
test
dec
adc
push
pop
sub
insl
adc
popa
ret
sub
pop
inc
jbe
fcoms
mov
jne
icebp
pop
stos
test
and
sbb
ret
loope
sbb
scas
adc
xchg
frstor
pop
sbb
out
mov
cmp
outsb
mov
jno
push
dec
int3
in
mov
and
pop
and
xor
mov
bsr
adc
xchg
jbe
aam
push
lods
fwait
mov
bt
inc
adc
pop
es
in
jecxz
ljmp
sbb
cmc
js
cmp
fwait
sbb
outsl
sar
push
cwtl
xchg
xchg
jge
mov
in
sar
xchg
mov
xor
cwtl
adc
push
xchg
int3
mov
orl
cwtl
mov
ljmp
addr16
jbe
cmp
mov
cmp
add
inc
xchg
or
repnz
xchg
inc
xor
decl
dec
cmpsl
push
jl
jae
cmp
cmp
pop
int3
inc
lcall
aad
inc
shrl
adc
xor
cmp
out
in
shr
pushf
aad
inc
dec
sbb
inc
ret
dec
insl
enter
and
imul
or
mov
xor
aad
mov
in
cmp
push
ret
dec
enter
and
push
sbb
loop
stos
mov
mov
movsl
push
jl
stc
dec
push
push
iret
leavew
mov
pop
js
fwait
jg
cmc
inc
push
inc
sahf
lret
rcll
repnz
je
stos
into
sub
sahf
dec
lods
std
jecxz
xchg
xor
inc
mov
sub
mov
xor
pop
mov
shlb
or
add
push
mov
inc
repnz
subl
int3
adc
xor
mov
mov
dec
loope
jg
mov
pop
in
pop
leave
scas
je
ds
clc
jg
inc
jns
jge
xor
je
notl
movsl
pop
loopne
jl,pn
cmp
adc
push
fsubrl
xor
mov
or
xchg
cmp
add
test
xchg
bound
fwait
pmaxsw
mov
in
push
inc
push
jmp
dec
or
dec
outsl
pushl
fmull
xor
fpatan
sarb
cltd
clc
cwtl
mov
test
mov
jns
cmovle
lret
mov
xorl
jl
sarb
ljmp
or
sbb
mov
data16
rcr
push
cwtl
jnp
fdivl
loop
and
push
jmp
leave
jmp
jo
and
jg
loop
adc
dec
jno
je
aaa
cmpl
ds
or
daa
sbb
dec
push
lds
ja
fisubl
popl
scas
addl
sbb
sbb
mov
sub
cmpsl
inc
push
mov
mov
xchg
pop
push
pop
mov
mov
dec
andb
stc
xchg
insl
mov
add
mov
mov
stc
lcall
add
xchg
mov
orb
jnp
xchg
out
inc
cmp
sub
icebp
popf
or
dec
pop
and
mov
js
rolb
les
loopne
jae
add
cltd
pop
jne
daa
pop
dec
sbb
jb
and
lock
cmp
arpl
fcmovne
xchg
in
xchg
dec
insl
cs
mov
mov
mov
adcl
and
testl
mov
stos
and
out
movsl
xor
loopne
insl
mov
cwtl
loope
mov
inc
jp
sub
pushf
xor
cs
xchg
and
daa
jns
pop
repz
adc
cmp
jno
outsb
aaa
stos
mulb
pushf
inc
je
js
inc
lret
rorb
fidivs
mov
xchg
cmp
repnz
cmp
jg
add
in
test
mov
push
push
scas
sbb
or
xor
lds
mov
or
mov
or
xor
mov
gs
push
sub
mov
pop
add
and
cwtl
or
stos
es
call
xor
aad
sbb
mov
sbb
push
push
pop
xor
dec
inc
call
fdivl
push
sub
pop
push
inc
rcrl
mov
ljmp
push
or
dec
imull
outsl
ficoms
mov
adcb
pop
hlt
imul
out
cmp
in
push
iret
cld
adc
mov
dec
jmp
cmp
insb
xchg
or
popf
pop
sbb
push
test
insb
ja
adc
push
lods
adc
pop
in
cmp
xchg
popa
arpl
mov
daa
push
xchg
ds
addr16
cs
and
mov
test
and
pop
dec
insl
jno
jl
jne
push
and
push
adc
int3
cs
js
jns
in
cmp
sar
inc
jmp
insl
call
jmp
xchg
bound
scas
mov
or
cmpsl
cmp
push
rolb
pop
iret
or
js
push
push
cmp
xor
enter
aam
loop
mov
adc
dec
shll
cmp
jae
aas
cli
xor
fdivl
out
stos
stos
inc
pop
pop
movsl
xchg
dec
in
xlat
sub
xchg
add
or
jb
adc
shl
repnz
jl
fsubrs
sbb
mov
fcompl
shl
or
ljmp
xchg
xor
popf
pusha
mov
add
add
xor
sarb
or
jl
xor
pusha
das
leave
dec
mov
aam
dec
xor
dec
clc
sub
js
push
mov
ss
push
xchg
or
out
out
xchg
cmp
fcomp
mov
andb
xchg
mull
jg
mov
inc
and
sub
test
test
add
sub
dec
cmp
cld
pop
dec
sbb
in
call
dec
lods
adc
dec
push
mov
jmp
cli
clc
or
test
dec
mov
int
call
cmp
imul
rcrl
sbb
xlat
clc
xorl
out
push
jg
or
fstl
push
cmpsl
bnd
pop
cmpsb
mov
ret
push
pop
mov
pushf
pop
jne
sahf
mov
mov
dec
fwait
in
mov
xchg
add
repnz
sub
fimuls
out
mov
mov
ljmp
jg
or
test
jae
stos
shlb
pop
in
incb
pop
xor
cmp
pop
clc
clc
jecxz
fsubl
iret
push
mov
cs
mov
or
inc
popf
lds
xchg
es
mov
cmc
pop
mov
sub
dec
pop
out
inc
dec
ss
ret
or
jp
nop
jns
dec
sub
mov
mov
mov
inc
pop
xchg
popf
push
in
aas
adc
inc
outsl
mov
mov
jne
mov
or
xchg
jns
js
inc
inc
repz
mov
aaa
xor
xchg
jp
dec
mov
pop
dec
es
push
data16
add
arpl
leave
arpl
xorb
je
nop
add
push
ret
outsb
xor
rorb
cmp
pop
mov
push
pop
adc
insb
in
mov
sbb
hlt
out
xchg
jl
or
pop
xchg
add
ss
sbb
push
jg
jo
push
incl
push
mov
lock
dec
popa
pop
outsl
jmp
lret
in
pop
sti
push
cmc
pop
xchg
data16
sbb
cmp
pop
mov
sub
pop
in
push
pop
lahf
mov
scas
inc
mov
pop
outsb
add
pop
outsl
cltd
fwait
inc
int3
aad
int
scas
jecxz
fs
fsubr
outsb
mov
jbe
in
adc
mov
out
cmp
repz
in
andb
out
mov
mov
imul
xchg
or
in
adc
fldl
cwtl
daa
aam
push
adc
push
adc
xor
xlat
sub
lods
lretw
sahf
pop
push
movsb
pusha
enter
push
out
lds
adc
test
hlt
shlb
inc
sbb
push
adc
push
fldt
jg
mov
fistpll
dec
dec
inc
aaa
outsl
incb
mov
cmp
and
sbb
mov
mov
dec
mov
cli
mov
add
mov
jae
in
jl
or
or
sbb
mov
jns
add
add
sbb
scas
inc
push
pusha
pusha
aam
sti
mov
ret
sbb
adc
into
mov
in
out
adc
jae
out
push
xchg
or
mov
add
stos
enter
fucomp
je
aad
fprem
and
mull
push
pushf
out
loopne
jne
sbb
or
ljmp
dec
sahf
sub
subl
add
pop
mov
lahf
inc
iret
movsl
imul
repz
sbb
pusha
adc
cs
inc
adc
aas
dec
sub
stc
ss
jmp
out
testb
ficomps
dec
and
add
inc
mov
out
dec
pop
lret
scas
hlt
pop
rolb
rolb
fidivl
inc
cmp
out
test
dec
out
xchg
sbbl
push
push
testb
add
and
add
clc
aas
pushf
loop
dec
lcall
sub
inc
jnp
movsl
mov
cltd
jo
sub
add
fucomp
repnz
sti
out
fcomps
mov
stc
sub
add
push
pop
jmp
mov
sub
push
mov
sbb
data16
jge
push
mov
dec
mov
dec
jno
or
test
sub
test
inc
mov
or
loopne
push
mov
add
in
sub
mov
imul
pop
cmp
mov
fst
jmp
shll
and
mov
and
push
inc
mov
push
repz
and
sbb
lods
cltd
hlt
cwtl
mov
icebp
inc
cmp
enter
pop
mov
adc
and
dec
pop
fldl
insl
sti
xchg
cmp
mov
out
xchg
dec
push
or
push
rclb
xor
pop
rcll
scas
arpl
sbb
sub
jg
pushf
pop
leave
add
les
test
push
push
mov
or
rclb
mov
inc
std
push
movsl
and
jl
fndisi(8087
add
sbb
pop
cmp
shlb
mov
jno
fsubs
sub
xlat
xor
movl
jns
in
in
shrb
sub
pop
es
sarl
xchg
add
push
or
out
sti
jge
mov
xchg
mov
bound
mov
dec
pmuludq
pop
inc
cltd
push
fdivr
lret
cld
pop
mov
add
fsubrs
or
push
popa
mov
stos
or
repnz
idiv
xor
and
add
call
fdivrl
repz
fwait
jl
ljmp
fdivr
fisubl
inc
gs
pop
test
lcall
loop
repnz
sub
arpl
and
stc
xchg
call
aam
push
or
mov
or
aaa
mov
mov
ljmp
pushf
adc
outsl
sub
vsqrtsd
ja
shll
sub
loope
les
cld
inc
in
repnz
imul
rcrb
sbb
rcrb
mov
flds
les
stos
adc
inc
inc
cltd
iret
mov
fs
mov
loope
ds
inc
pop
rclb
xor
cmp
icebp
mov
ja
ss
lcall
data16
and
sub
shlb
movsb
and
gs
push
mov
mov
sub
inc
test
push
ret
push
add
arpl
stc
or
push
mov
int
xchg
inc
test
mov
push
inc
xchg
loope
std
sub
fstpt
push
mov
xchg
nop
pop
outsb
mov
int3
lahf
sub
in
dec
arpl
jmp
pop
in
mov
arpl
pop
lahf
addr16
ljmp
push
or
mov
xor
or
in
js
mov
in
mov
jecxz
add
arpl
ret
sbb
stc
aad
imul
mov
out
test
neg
addr16
mov
sbbl
das
jl
mov
dec
and
int
mov
aas
push
sbb
in
push
jns
sahf
adc
inc
dec
insl
mov
add
iret
mov
mov
ljmp
inc
push
fstpt
pop
add
in
mov
addr16
insl
cli
out
inc
fs
jb
sbb
lcall
sti
jp
dec
stc
out
adc
add
mov
outsb
mov
orb
imul
mov
add
movsl
dec
enter
dec
popf
lods
jp
mov
mov
cmpsl
add
les
jne
sbb
adc
xor
mov
xlat
stos
adc
mov
fcmovne
cli
jo
mov
or
mov
jmp
inc
stc
jo
push
xor
fiaddl
loop
dec
imul
std
jne
sbb
pop
push
inc
mov
int
inc
stc
daa
les
pop
push
mov
pop
outsb
push
xchg
movsl
dec
dec
xchg
xor
xor
jle
shrb
aam
cs
shrb
or
test
outsb
jp
cltd
das
loop
xor
xor
out
cmp
fcoml
lahf
lea
pop
pop
test
mov
jl
fisttpll
mov
push
pop
dec
add
mov
sbb
dec
movsb
xor
mov
mov
imul
clc
mov
enter
popa
sub
ds
mov
pusha
notb
leave
fnstcw
daa
fldenv
pop
or
xchg
add
fmulp
sbb
mov
scas
lcall
inc
cwtl
pop
ss
iret
xchg
pop
imul
mov
xor
push
lret
inc
mov
repnz
pop
dec
jle
xor
loopne
mov
or
pop
pop
aam
out
inc
pop
ret
in
pop
push
or
mov
dec
ss
mov
test
out
icebp
add
fsubrl
out
fdivl
xlat
or
es
cwtl
int3
cmp
jbe
dec
sub
jnp
jge
movsb
fistps
jb
test
dec
in
iret
pop
je
jecxz
lcall
cld
and
ljmp
lret
icebp
repz
or
test
sbb
stos
xchg
xchg
inc
pop
sbb
mov
or
daa
adc
int3
fstpl
dec
je
inc
out
or
sti
fildll
es
repz
jno
ljmp
dec
pop
rorl
or
les
add
outsb
icebp
test
sahf
cmp
scas
xorb
mov
mov
push
mov
movsl
cmp
insb
mov
xlat
cli
mov
mov
imul
inc
sbb
add
xor
adc
inc
push
or
adc
mov
sbb
jns
dec
adc
stos
cltd
push
inc
xchg
pop
dec
jb
repnz
and
repnz
pop
cli
add
mov
mov
xchg
push
fs
adc
pop
push
pop
loopne
or
pusha
push
btr
and
mov
sub
xchg
push
sbb
or
js
loop
mov
xchg
adc
jmp
pop
jp
push
sub
sub
xchg
test
jecxz
jo
repz
push
mov
jne
imul
jmp
rcl
jp
mov
pop
pop
int3
cmp
and
mov
loop
and
xchg
loop
in
outsl
mov
ds
stos
pop
and
mov
push
jg
dec
pop
mov
xchg
outsl
out
int3
pop
mov
hlt
or
pop
mov
call
repnz
imull
push
jb
stos
pop
pop
int3
es
and
rcrl
mov
shll
lods
out
sub
push
xchg
and
add
inc
into
popf
mov
fcmovnbe
fcoml
lods
push
sub
mov
icebp
dec
jecxz
scas
ljmp
scas
lahf
and
dec
dec
loop
fnstcw
imul
cli
in
rcl
enter
xadd
daa
fs
mov
aad
push
aam
addr16
mov
push
sbb
rorb
cmp
adc
cli
ja
adc
jae
rclb
in
lock
adc
pop
mov
js
jns
jp
int
movsl
icebp
cld
dec
icebp
pop
mov
fst
jae
or
inc
fs
and
mov
lahf
inc
xchg
push
xor
call
sub
sbb
push
xor
js
lret
call
add
lds
add
jne
adc
bound
push
clc
mov
add
sarb
subl
add
in
or
add
dec
or
hlt
xchg
mov
mov
pushf
xchg
mov
call
daa
xchg
inc
fbstp
into
popa
outsb
aas
lods
call
rorb
sbb
or
push
xor
cmpsl
jno
pop
enter
jo
or
adc
pop
ret
mov
hlt
andb
hlt
and
movl
cmp
outsb
lahf
imull
lds
mov
sbb
jae
add
adc
jmp
popf
mov
push
jb
or
imul
sbb
arpl
pop
jo
out
add
lock
loopne
inc
repnz
test
or
sub
hlt
sbb
cld
scas
cltd
xchg
pop
movsb
scas
pop
movsb
push
mov
sti
movsb
push
push
mov
sbb
mov
lcall
sahf
mov
jge
pop
inc
test
mov
iret
fadds
mov
test
lods
int3
iret
add
stc
xor
pushf
ficoms
push
inc
daa
cmc
push
test
xor
push
mov
popf
in
mov
xor
cmpsl
rcl
pop
xor
dec
or
and
movsl
ja
das
mov
jb
mov
lahf
mov
nop
in
pop
ja
popf
gs
nop
outsb
loope
in
sub
adc
gs
fidivrl
scas
push
movsl
fdiv
loop
mov
xor
and
popf
or
jb
sub
rorl
mov
pop
das
mov
rorb
mov
mov
test
inc
cmp
push
cmpsb
fsubs
popf
push
ljmp
sub
dec
sbb
ficompl
mov
mov
push
push
and
or
inc
fsubrs
imul
sbb
idivl
mov
idiv
lret
pop
dec
mov
adc
sub
sti
pop
dec
mov
jne
sbb
mov
and
fsubl
popf
xor
cmpsb
jmp
adc
or
or
or
mov
pop
mov
mov
les
xchg
gs
aad
add
int3
sbb
test
sub
jns
scas
sbb
mov
push
movsb
cmp
or
xor
in
clc
fsubl
add
sbb
cmpsb
pop
xlat
aam
pop
call
mov
in
fdiv
or
mov
pop
rcll
outsb
rcl
adc
arpl
xchg
je
fistpl
loopne
aas
std
clc
pop
rorl
mov
push
lahf
fidivs
divl
xchg
scas
cmp
pop
push
mov
xchg
lcall
sbb
nop
cmp
lcall
arpl
jb
hlt
imul
xchg
jl
add
sbb
popa
sbbl
xchg
sub
stc
or
divb
and
roll
and
xchg
mov
jle
add
jo
and
xchg
jmp
mov
jnp
mov
stos
bound
sub
out
mov
xchg
cmp
mov
push
jl
mov
pop
xchg
push
pop
popa
sbb
lret
sbb
xorl
in
adc
imul
aad
inc
xchg
xor
jecxz
daa
addr16
lods
leave
mov
in
stos
jp
dec
xchg
push
jl
or
hlt
data16
popf
fs
movsb
aad
mov
add
outsb
and
popa
inc
repz
push
movb
mov
insl
inc
cld
mov
cmpsl
fsubrl
imul
jnp
popf
jle
andnps
lret
out
fadds
mov
out
xor
adc
or
push
dec
push
sub
xchg
mov
pop
sbb
mov
cmp
test
js
sahf
pushf
dec
push
bound
jo
inc
jl
mov
mov
push
jl
xor
mov
pusha
outsb
adc
cmpsb
lods
cli
fisubl
enter
jae
mov
bound
jecxz
adc
mov
inc
pop
jns
scas
mov
mov
jbe
popa
push
testb
cmp
aaa
inc
and
xor
enter
movsl
inc
mov
das
cld
out
xor
xor
or
cmpsl
cmpsb
flds
push
and
bound
sahf
sbb
cmp
sahf
mov
aas
push
sbb
rorb
lea
aas
xchg
sbbb
popa
pop
sub
mov
xchg
push
vmread
jecxz
insl
and
jg
lret
jno
xchg
and
mov
pop
stos
dec
lods
cmp
int
add
call
movsb
iret
stos
or
mov
shll
inc
pop
inc
popf
sbb
mov
mov
add
test
xchg
pop
sbb
fildl
mov
dec
mov
xor
jg
into
jo
mov
jno
mov
mov
mov
xor
and
pop
pop
add
xor
notl
sub
out
adc
mov
test
push
test
daa
pop
and
aas
shrl
cli
outsb
add
lods
push
movsb
mov
adc
sti
ret
pop
xchg
mov
loope
gs
gs
insl
icebp
rcr
stos
dec
mov
cmp
jmp
lods
shl
mov
or
mov
sbb
nop
jne
lret
mov
aas
popa
cli
pop
xchg
test
adc
inc
pop
push
addr16
adc
pop
inc
cmpsb
mov
pop
mov
dec
out
repnz
sub
leave
inc
jbe
ljmp
cli
xchg
leave
lods
repnz
dec
test
lock
test
out
cltd
repz
jg
and
decl
repz
lret
test
inc
mov
xchg
adc
cli
out
inc
in
lock
inc
movsb
mov
lret
iret
push
mov
int
push
add
nop
lret
xor
sub
roll
and
lahf
sub
mov
add
in
add
clc
jmp
pop
push
mov
or
in
test
jbe
pop
cmp
stos
mov
ficomps
xchg
cmp
int3
jns
adcb
int
stos
out
mov
xchg
xor
pop
push
cmpsl
cmpsl
jmp
jmp
movsl
sbb
add
insl
and
pop
in
and
ret
add
inc
cs
mov
xor
mov
or
mov
push
adc
mov
int
xor
and
aaa
mov
dec
dec
add
or
xchg
add
lds
push
frstor
int
leave
je
subb
xchg
pop
adc
cltd
cmp
faddp
fwait
push
aas
add
cpuid
xor
jecxz
rcrl
mov
je
iret
rolb
pushf
jecxz
sbb
lret
aaa
jb
cmpsb
stos
inc
test
bound
lods
dec
mov
adc
lret
or
arpl
sub
push
pop
inc
mov
sbb
inc
fnstsw
and
push
mov
xor
inc
cmp
mov
xlat
push
mov
pop
or
je
fwait
push
clc
fnstsw
scas
mov
lods
rcll
add
inc
lret
xchg
xor
jmp
push
sub
insb
sub
dec
mov
cmpsb
lock
lahf
cmpsl
push
sub
out
sbb
out
fnsave
dec
inc
mov
adc
and
dec
xor
pushf
lds
iret
and
hlt
fcomp
cld
mov
dec
sub
cltd
mov
out
lds
cltd
in
mov
lock
stos
stc
push
loop
add
jo
xor
mov
imul
imul
sahf
push
mov
lods
push
xor
ret
movsb
adc
negl
or
aaa
sub
pushf
mov
mov
cmp
or
cmpl
ja
mov
cld
mov
or
out
inc
jecxz
cli
cmp
hlt
or
cld
cmp
push
loop
push
popa
push
jns
aaa
cmp
mov
mov
insl
jnp
nop
adc
adc
insl
mov
outsl
xchg
outsl
jmp
pop
loop
sub
jl
jae
mov
lahf
xor
pop
and
insb
imul
cmp
faddl
pop
xor
jo
pop
int
icebp
sbb
mov
out
mov
shrb
pop
repz
jno
lahf
mov
dec
mov
push
xchg
aad
xor
push
add
cmpsb
jg
mov
mov
mov
dec
jne
xlat
add
cwtl
xchg
cmpsb
shlb
push
shrb
lea
mov
js
les
sti
aam
fcmovb
int
ret
insb
push
std
test
scas
ljmp
fmull
jle
and
clc
jnp
adc
nop
pop
mov
aad
inc
push
enter
fcoml
or
out
push
rol
mov
jl
scas
ja
mov
mov
jo
jmp
das
lret
int3
in
ljmp
mov
xchg
enter
push
enter
inc
movsb
test
cmpsl
mov
sbb
dec
shlb
inc
sti
lods
add
loopne
mov
addr16
scas
mov
mulb
adc
int
aad
jb
cmp
out
inc
cmp
icebp
cmpsb
fcomp
movsb
mov
loop
es
sbb
inc
dec
test
jecxz
and
std
pop
sbb
mov
sub
inc
push
sub
orl
push
add
roll
testl
jmp
icebp
test
adc
mov
dec
mov
pop
int
enter
ret
pop
cmp
inc
iret
in
out
jbe
mov
fsts
outsl
dec
mov
cli
movsb
jo
shrb
into
or
dec
push
insb
jno
xor
or
and
mov
xchg
pusha
mov
mov
mov
xor
and
loopne
and
fs
popf
lods
std
jle
or
inc
test
xor
add
outsb
cmp
sahf
cmp
jmp
les
int
outsl
push
and
sub
jno
cmp
mov
movsl
jp
clc
rol
stos
push
and
outsl
and
push
mov
or
sub
scas
les
xor
or
or
xor
pusha
mov
sub
pop
in
sbb
leave
jle
mov
cmpl
scas
xchg
movsl
insb
cmp
add
inc
or
sbb
leave
sbb
shll
nop
andb
sbb
mov
jl
xor
jo
jg
rorb
shl
sbb
in
mov
mov
aaa
adc
add
les
jge
cmc
loop
lea
cmp
int
mov
test
and
lods
lahf
xchg
dec
sbb
dec
bound
xchg
repnz
mov
lret
sti
loop
flds
jb
lods
insl
lock
ret
mov
mov
mov
clc
out
cwtl
aam
enter
sub
xchg
mov
or
sbb
test
mov
fst
pop
call
xchg
scas
ret
mov
inc
loope
inc
insb
pop
inc
or
mov
pusha
dec
mov
inc
pop
aam
popa
testl
xorb
mov
daa
mov
cmc
shll
mov
in
or
pop
mov
dec
cltd
and
shrb
movsl
and
inc
popf
out
dec
xorl
ss
cli
sti
dec
and
pop
push
cs
jecxz
ret
mov
out
test
push
sti
rorl
and
test
into
cmp
pop
int3
and
test
nop
sti
inc
pop
jmp
adc
hlt
push
stc
xor
push
xchg
loope
int
pushf
cmpsl
cmpsb
ret
aam
or
stos
add
outsl
sbb
mov
push
or
pop
mov
clc
dec
lds
popf
mov
pop
shlb
mov
add
rolb
pop
add
mov
idivb
gs
cmp
push
inc
inc
mov
mov
in
stos
fstsw
dec
bound
pop
mov
add
into
mov
xor
mov
je,pt
xor
cmp
xor
sub
roll
sbb
insl
lods
add
sub
pop
push
lret
leave
jae
mov
cmp
or
and
mov
add
mov
mov
call
jb
and
adc
mov
lds
sarb
shr
insl
in
out
out
jp
popf
mov
fidivl
pop
mov
ljmp
je
jns
daa
shll
loopne
inc
dec
lock
jmp
mov
movsl
movl
imul
pop
push
pop
add
cli
cmp
les
scas
xor
or
mov
push
jbe
dec
vprotd
xchg
out
jne
in
filds
xchg
cmp
mov
outsb
mov
jnp
fisttps
lcall
clc
add
xchg
xor
or
add
mov
sub
adc
pushf
cwtl
mov
xchg
push
arpl
iret
push
sub
insb
int
mov
and
jg
jae
mov
push
insb
inc
jb
xchg
fidivl
jl
sub
add
mov
pop
iret
les
fisubrs
icebp
push
pop
ljmp
dec
mov
push
insb
clc
imul
fmuls
push
loopne
mov
jp
bound
mov
lahf
dec
xor
or
sub
and
out
popf
jae
lods
jle
push
ficomps
xchg
es
mov
xor
clc
hlt
sbb
mov
dec
cmc
loope
mov
push
push
cmpsb
xchg
push
ss
jo
mov
loopne
div
pusha
and
cmpsb
xchg
jp
xor
add
mov
cmp
pop
shll
lock
fimull
jge
cmp
jbe
lods
push
arpl
adc
int3
js
in
cld
xchg
ror
xor
push
out
into
jnp
pop
in
in
xor
cmp
shll
pop
jmp
xchg
sbb
mov
subb
bound
leave
imul
push
pop
jge
and
and
pop
jg
sarl
push
hlt
test
das
xor
xchg
xchg
out
jo
repnz
dec
into
sub
xchg
jecxz
pop
xor
pop
xor
movb
and
sti
or
push
negb
mov
hlt
rol
jle
aam
xor
mov
or
mov
movsl
cmpsl
jecxz
sbb
jnp
ret
inc
pop
fst
mov
ret
lret
dec
orl
mov
jge
cld
push
sub
xchg
bound
aad
mov
js
ret
jns
test
sbb
divl
imul
pop
sahf
push
movsl
mov
enter
out
ror
rcll
ds
mov
pop
lret
pop
inc
rcrl
jp
shl
jne
cmp
movsl
hlt
in
lds
jbe
sub
mov
sbb
or
inc
dec
out
pop
mov
ficoml
and
jne
movsl
xchg
and
mov
ja
es
shll
fwait
dec
divl
adcb
in
jecxz
cmc
mov
sub
adc
ljmp
pavgw
dec
mov
push
xchg
cmp
push
fistpl
inc
jns
inc
jno
jecxz
adc
sub
mov
pop
xchg
stc
xor
sub
imul
mov
sbb
push
popf
in
pop
inc
push
lahf
sbb
pop
rclb
je
pop
sti
jecxz
sti
mov
nop
inc
sbb
shlb
xchg
xchg
fiadds
pusha
xchg
jp
fwait
xor
xor
and
push
fildl
adc
and
xlat
cmc
mov
ja
je
xor
sbb
int3
and
lret
and
lcall
jno
pop
fimuls
scas
inc
shrl
mov
movsb
push
ret
fwait
in
jl
adc
mov
adc
imul
cmc
adc
lcall
cmc
jbe
push
dec
sahf
in
mov
push
jg
sti
jg
mov
test
stc
stos
mov
jmp
insb
adc
push
push
out
mov
loope
mov
std
fmull
mov
lods
aad
inc
sbb
stos
mov
lods
inc
xor
int
and
loope
xor
mov
loop
sar
jnp
inc
jns
ljmp
inc
out
mov
push
movsb
imul
lret
in
mov
out
fdivs
sahf
dec
lods
jo
mov
lea
ror
ds
ret
out
and
lea
sub
or
xchg
cmc
push
and
test
or
stos
push
or
sub
and
mov
adc
icebp
cld
mov
pop
sub
aam
mov
imul
mov
or
pop
mov
cld
fisttpl
cmp
pusha
out
inc
mov
stos
je
out
cmp
dec
dec
iret
inc
push
arpl
aaa
cld
inc
mov
aad
jbe
jp
sub
fisttpll
and
inc
sahf
inc
stos
mov
insb
push
mov
fists
jle
stc
sub
mov
and
ljmp
push
hlt
repnz
cmp
js
xlat
pop
push
shlb
test
dec
out
shl
ret
xor
sub
jae
or
sub
iret
mov
je
stc
cmp
ror
sub
mulb
pop
mov
pop
xchg
aas
mov
dec
inc
sbb
imul
out
int3
test
jmp
adc
mov
into
sub
sti
rcll
jg
clc
push
ss
adc
jnp
arpl
cmp
mov
stc
lods
rcrl
or
mov
in
jne
sbb
out
fcmovnbe
jmp
aad
xor
adc
pop
add
xor
ds
pop
sub
jl
dec
xor
loopne
lea
mov
push
iret
lods
lea
movsl
ret
fsubs
jecxz
or
cmp
rclb
adc
aaa
das
push
xchg
call
mov
inc
xor
fwait
std
or
in
or
jns
sub
mov
or
mov
sub
cmc
mov
iret
rsqrtps
adc
mov
aas
fistpl
or
int
fmul
sbb
mov
push
test
cmpl
inc
fs
inc
sti
jg
idivb
out
ror
inc
fcmovbe
inc
inc
call
or
cwtl
iret
clc
mov
imull
loop
mov
imul
out
pop
mov
aas
addr16
mov
jno
rolb
mov
int
dec
popa
jno
push
sahf
pusha
lret
push
mov
jp
rcrl
gs
push
cmp
pop
cmovae
inc
in
mov
jbe
pop
loope
out
add
xchg
imul
adc
loopne
fs
or
pop
out
fmulp
lcall
inc
lea
sbb
int
add
das
xorb
and
inc
loopne
mov
add
stos
sbb
push
mov
cwtl
pop
pop
cmpb
cmp
addr16
mov
loop
das
cwtl
int
leave
sub
popf
cmp
mov
mov
outsl
pushf
and
out
push
aaa
imul
addl
push
fs
and
rorl
adc
std
push
popa
sbb
jno
sub
mov
lahf
lods
fdivl
daa
aas
sub
jge
xchg
int
aas
and
or
sub
dec
mov
jp
dec
fs
mov
aad
stos
pop
dec
adc
push
inc
add
xchg
mov
jmp
mov
adc
fdivs
sbb
xchg
and
xor
cmp
mov
mov
inc
xor
cmpsl
and
push
cmp
jge
inc
xor
jg
and
ret
and
ljmp
out
cli
aad
pop
and
les
push
pop
mov
mov
adc
mov
stos
sub
sbb
repz
adc
loope
inc
lahf
flds
or
and
xchg
adc
jo
enter
push
mov
mov
mov
mov
out
aas
jne
mov
push
loope
outsl
mov
lahf
fs
jecxz
daa
cli
fsubrl
jp
push
roll
jg
xchg
sbb
fisubl
enter
push
cwtl
stos
and
in
scas
sub
incl
and
jp
and
mov
xchg
xchg
xchg
lods
cmp
pop
rcrl
mov
in
aaa
pusha
call
xor
test
call
bound
sub
inc
xchg
cmc
or
push
sbb
movsb
ds
es
hlt
shlb
or
pop
bound
popf
xor
lods
movl
sbb
xchg
in
arpl
aas
mov
popf
pop
jmp
pop
arpl
jge
dec
cmp
cli
pop
mov
xor
je
notl
cmpsb
mov
or
addr16
sbb
repnz
cli
jle
arpl
push
adc
push
cltd
popf
and
bnd
insb
xchg
int3
shrl
push
aas
sti
rcr
xor
mov
cmp
xor
movsl
adc
repnz
xchg
jl
ret
pop
and
cmpsl
and
xchg
mov
push
fsubr
and
xchg
aam
pop
stos
sbb
lods
xchg
or
push
mov
dec
adc
adc
or
add
jb
popa
push
in
lret
jecxz
adc
and
sub
mov
add
add
xor
stc
leave
mov
daa
pop
jo
ja
push
and
dec
push
arpl
fcmovnb
add
aaa
lds
data16
jg
mov
jmp
fcomps
inc
in
jg
test
jno
mov
int3
hlt
ss
add
push
xchg
push
sti
arpl
push
adc
mov
add
in
jbe
mov
push
push
pop
inc
popa
cmp
movsb
int3
out
jmp
in
mov
movsb
repz
int3
mov
add
sbb
enter
repz
movsb
in
xchg
push
jnp
ud0
test
imul
sbb
mov
inc
stc
insl
shl
test
fwait
or
call
inc
xchg
add
stos
inc
xor
and
dec
mov
sysenter
push
jp
sbb
mov
add
fcmovnu
addl
cli
test
aaa
mov
and
aas
lahf
repnz
and
popa
adc
add
fcmovu
repnz
lods
or
sub
cld
push
daa
add
mov
cmc
out
subb
movsl
rol
and
jbe
sub
in
arpl
sub
leave
into
pusha
or
xor
sarb
xchg
mov
inc
mov
cmc
or
popa
es
aad
inc
mov
mov
arpl
pop
out
fs
xchg
mov
push
or
adc
popa
cld
test
xchg
sbb
in
out
repnz
outsl
dec
cwtl
mov
mov
inc
jle
jmp
jp
xchg
cmpsl
mov
lock
inc
dec
out
repnz
sub
adc
pop
cmp
sbb
aas
xchg
mov
and
push
sahf
push
sbb
ret
xchg
call
pop
xchg
sbb
jnp
stc
lret
cltd
bound
mov
inc
push
xchg
xchg
popf
mov
adc
lock
movsl
ficoms
mov
clc
add
sarb
dec
xchg
in
add
jns
sbb
xlat
xor
ficoms
arpl
lds
out
mov
cmp
or
pop
inc
mov
mov
ror
pop
outsl
mov
xchg
fwait
nop
es
mov
push
mov
lods
sbb
pop
adc
push
cmc
fs
out
pop
or
adc
push
out
cmp
dec
movsb
mov
test
dec
fsts
enter
mov
and
je
iret
push
adc
test
popf
je
mov
jne
xor
popa
mov
mov
out
cmpsl
xchg
enter
push
loope
iret
or
imul
gs
adc
xchg
testb
call
mov
sbbl
dec
ds
inc
mov
xor
mov
arpl
mov
aad
xchg
call
adc
jno
or
jne
inc
cmc
cmc
add
stc
roll
mov
sbb
xchg
push
xor
sbb
push
xor
adc
jmp
xor
cltd
fcmovnb
out
dec
iret
inc
cld
rorb
and
inc
jecxz
in
lret
pop
lahf
lock
pop
mov
movsl
lea
cltd
jge
movsb
cmp
sub
dec
sbb
neg
into
sbb
ljmp
test
daa
int
jne
jge
jb
xchg
in
pushf
stc
cmp
dec
add
rol
int3
cltd
jnp
xchg
xchg
loope
jecxz
rcrb
cli
inc
add
inc
arpl
pushw
fwait
sbbl
adc
int3
pop
and
adc
enter
and
and
test
adc
repz
aas
or
cmp
dec
nop
aaa
nop
pop
int3
xchg
sbb
jns
or
jl
jle
lret
mov
jns
dec
mov
add
add
push
push
inc
fstps
pop
mov
in
and
push
addl
adc
pop
cmp
pop
outsl
enter
inc
sbbb
ret
push
and
stc
nop
aas
xlat
adc
sti
or
out
inc
add
icebp
lea
into
lods
and
mov
jp
mov
idivb
inc
daa
adc
dec
xchg
fwait
mov
inc
mov
bswap
or
call
je
xor
lret
push
out
rolb
sbb
xchg
pop
out
pop
call
fwait
imul
jns
leave
in
inc
repnz
movsl
pop
add
cmp
lea
jmp
ficomps
mov
sub
out
xor
mov
inc
dec
or
rcll
sbbb
out
mov
add
call
jb
loopne
rcrl
int3
jge
nop
repz
inc
xchg
sti
shrl
push
or
or
sahf
dec
bound
popf
xchg
inc
sub
iret
push
mov
dec
ja
sahf
dec
pop
xchg
mov
test
mov
mov
lret
xchg
mov
pop
fldcw
pop
insb
jmp
cs
jge
add
lds
xchg
mov
and
mov
arpl
jp
std
mov
pop
loopne,pt
and
sub
cmp
dec
loopne
data16
jg
aaa
outsl
sbb
push
mov
xchg
pop
pop
aas
adc
and
cltd
addr16
nop
stos
dec
sbb
add
sbb
mov
mov
ds
nop
nop
cmp
test
lds
fs
aaa
out
sahf
sbb
test
rolb
mov
call
or
into
dec
xchg
out
xlat
testl
and
inc
scas
dec
mov
stos
add
je
test
inc
loope
dec
fsubrs
dec
inc
insl
jecxz
jns
push
push
mov
sub
pusha
cwtl
test
cwtl
mov
mov
nop
jno
jo
lock
ret
into
pop
adc
adc
or
xadd
jle
aaa
or
scas
ljmp
incb
push
shr
outsb
loopne
dec
les
outsb
mov
sub
inc
and
sub
data16
push
lea
xchg
andl
decl
inc
mov
les
rol
xchg
add
xlat
and
cmp
je
lahf
adc
mov
lock
out
int
scas
dec
imul
arpl
arpl
or
or
jo
es
int3
mov
mov
mov
scas
sub
ss
frstor
inc
mov
in
roll
xchg
es
into
ja
js
xor
xchg
aaa
mov
rcrl
jbe
cwtl
scas
push
sbb
bound
gs
popl
mov
jge
push
mov
xor
inc
mov
test
and
push
in
dec
sub
adc
repz
es
mov
pop
and
jno
or
push
leave
loop
stc
rolb
arpl
adc
fs
pop
pop
clc
pushf
decb
enter
lods
dec
out
pop
xchg
shrl
cmp
jle
lret
xorb
xchg
inc
ret
jno
lcall
jae
cmp
in
inc
fstpl
xor
xor
scas
pop
fdivrl
test
je
cmc
mov
inc
jge
cmp
popa
push
push
lret
dec
add
pop
in
test
idivb
lret
jbe
aam
rcll
mov
hlt
cltd
inc
push
aam
rclb
jp
cwtl
jae
fcmovnbe
pop
lods
or
sbb
enter
pop
adc
push
out
sti
mov
in
bound
inc
pop
ror
cld
sub
lahf
clc
jp
cld
mov
loop
and
jmp
add
xchg
or
scas
xor
add
popa
pop
dec
es
fwait
scas
xchg
lods
adc
pop
mov
outsl
jnp
in
or
cmc
outsb
mov
sahf
xchg
xchg
sbb
mov
jo
scas
pop
cmpsl
cmp
lods
jno
loope
dec
cmpsl
xchg
out
pop
or
dec
mov
push
gs
push
dec
xor
mov
nop
test
js
dec
out
add
xlat
bound
push
lock
stc
xchg
push
rorl
in
sbb
outsb
rcrl
mov
mov
jl
sub
sti
sbbl
orl
mov
sub
add
movsl
push
std
jmp
sub
push
cmpsl
push
pop
and
std
push
sbb
shll
cmp
sti
fdiv
cli
jmp
mov
int3
loope,pt
pop
les
inc
rcrb
lock
pop
adc
fbld
aad
aaa
cmp
imul
pop
fwait
gs
movsb
inc
push
add
test
push
cld
ja
pop
shl
outsb
loope
lahf
sbb
je
push
out
addr16
incb
dec
insl
in
popa
add
pop
mov
or
pop
inc
loop
testl
stos
call
push
aas
int
jmp
movsl
add
inc
push
push
hlt
xchg
mov
popf
xchg
cltd
cmp
ljmp
sbbl
aas
imul
cmp
int
or
fcoml
ret
pop
fwait
inc
insb
mov
mov
stc
xchg
imul
nop
and
adc
aam
addr16
ret
bound
mov
mov
xchg
imulb
cwtl
das
incl
sbb
mov
into
push
pop
f2xm1
pop
js
ret
mov
or
mov
xchg
sarb
test
mov
js
mulb
test
xchg
pop
push
movsb
and
pop
and
shl
aas
adc
jb
popf
cld
push
imul
cmp
pop
fdivl
andb
jmp
sub
sbb
jecxz
fldt
outsl
lea
notb
xchg
push
mov
not
jo
insl
gs
lods
arpl
jg
jecxz
gs
xchg
sbb
fistps
push
loop
and
insb
push
push
scas
dec
xlat
pop
cmp
pop
insl
test
aas
lds
sti
les
jbe
mov
or
push
fcomip
enter
pop
jle
imulb
popf
push
jecxz
out
test
lahf
jle
movsl
xchg
sti
mov
add
lret
js
jle
inc
push
inc
lds
mov
stc
push
jae
mov
aas
jp
lahf
in
mov
push
imul
loop
test
lock
rclb
loopne
js
movsb
xor
pop
add
fdivrp
aam
pop
sub
ss
push
cwtl
push
pushf
inc
mov
sbb
lret
cmc
jns
sub
mov
inc
imul
pop
or
repz
xchg
jl
mov
aaa
rol
push
mov
mov
lods
dec
lds
cmp
int3
add
stos
add
sub
mov
test
dec
in
test
cmp
push
cmc
testb
xchg
sbb
idivb
dec
mov
sbb
adc
xlat
hlt
and
jmp
xor
push
dec
imul
ja
enter
pop
call
loopne
jbe
push
adc
xchg
aam
outsl
mov
ds
fdivrs
push
inc
adc
mov
mov
inc
sbb
rcr
adc
inc
mov
adc
xor
inc
lds
cmp
mov
mov
rcll
jmp
push
loop
popf
data16
push
xchg
xor
sub
es
dec
inc
sarb
mov
repz
sub
mov
inc
or
shrl
and
or
push
and
ljmp
pop
mov
inc
imul
and
push
cmp
and
js
rdpmc
pop
jg
lcall
lea
inc
mov
sub
imul
inc
and
std
out
or
out
jl
sbb
in
cli
xchg
or
dec
loopne
sahf
fsubrp
inc
and
or
inc
sahf
xchg
sbb
xlat
jecxz
rcrl
shl
xchg
mov
cld
clc
and
xchg
mov
sbb
sbb
sub
mov
cwtl
loop
push
cltd
xor
jns
outsl
repz
int3
mov
mov
push
cmp
adc
sbb
mov
push
mov
sbb
jmp
jmp
or
xor
sbb
xlat
enter
dec
and
inc
xlat
jo
xor
push
in
dec
push
push
lock
dec
insb
decl
stos
adc
xor
pop
cmp
out
stos
sbb
ljmp
push
mov
cmp
sbb
xor
je
lods
mov
xor
clc
lcall
ret
lcall
ljmp
or
inc
mov
push
testl
jbe
cmp
out
std
or
xor
mov
fidivrs
repnz
outsl
mov
or
and
sbb
decl
dec
int3
jae
pop
inc
pop
in
xchg
inc
sbb
mulb
das
ret
insb
mov
sbb
repnz
cli
pop
and
inc
lahf
imul
or
mov
push
xor
mov
sbb
sti
cmp
add
dec
cmpsb
dec
inc
mov
pushf
mov
ss
mov
call
rcrl
insb
push
adc
mov
ljmp
mov
jns
lods
cmp
movsb
je
xor
mov
jl
sbb
sbb
sbbl
xor
sub
xchg
sub
in
pop
or
add
outsl
fsub
lcall
add
mov
push
xchg
test
loope
cmp
ds
add
out
pop
adc
aam
push
inc
mov
lods
pop
aam
and
add
js
stc
mov
mov
jbe
and
ret
sbb
aas
add
xor
fwait
pop
jmp
fstps
lods
mov
pop
mov
sbb
pop
cmpsb
loope
jle
jmp
enter
jne
fwait
pushf
xor
fisttpl
pop
in
iret
stos
xlat
jmp
mov
jne
repz
xor
or
lods
fs
mov
cmp
je
adc
out
out
mov
jle
lret
xchg
add
xor
ret
fwait
cmp
cmp
int3
addr16
xor
push
jl
xchg
out
rcrl
inc
aad
rorb
int
cmp
inc
andb
mull
jmp
xchg
ss
adc
push
shlb
scas
xor
xor
or
inc
push
insl
pop
mov
pop
inc
cmpsl
and
gs
sub
push
test
aam
add
aam
sbb
and
fisttpll
sti
stc
cltd
dec
stos
outsb
xor
inc
pusha
call
test
push
mov
and
repnz
rorl
sbb
or
push
dec
jmp
cltd
stos
dec
mov
mov
dec
jmp
cmp
sub
xor
jg
dec
mov
mov
jo
lods
mov
mov
call
dec
xchg
repnz
pop
xor
gs
je
repz
push
dec
cmpsl
in
aaa
cmp
xchg
mov
fisubrl
xor
ficompl
in
repz
int
ja
adc
js
shl
or
or
sub
ret
fdivr
lcall
push
in
enter
pushf
sbb
aam
inc
call
in
dec
hlt
xchg
jg
aaa
shrb
dec
sub
mov
lods
leave
andb
dec
mov
pop
mov
daa
cli
mov
stc
cmp
or
mov
fistpll
xor
xor
push
push
es
aaa
mov
out
movsb
pop
sbb
rep
xchg
mov
mov
repnz
shl
or
xchg
enter
mov
mov
pop
cli
pop
xor
add
rcll
mov
sub
int
dec
imul
sub
ret
sti
movb
iret
add
mov
pop
jecxz
xor
cmp
sub
xchg
fldcw
xchg
push
fcomps
leave
aaa
and
repz
xchg
movsl
pop
inc
stos
xor
aas
push
test
icebp
pop
or
pushf
sub
mov
decl
cld
jmp
call
xor
sti
and
pop
aas
dec
loop
cmp
popf
bswap
xor
jo
pop
and
xor
fistps
cmp
std
xchg
mov
xbegin
cmp
sub
pop
push
mov
xor
sub
aad
dec
xchg
mov
push
aad
inc
sub
mov
fisubl
inc
lret
inc
xor
sub
mov
cwtl
lods
push
jmp
jb
stc
es
inc
and
inc
pop
xor
jmp
mov
jno
push
dec
bound
dec
mov
xchg
loopne
mov
mov
std
sub
push
js
mov
mov
out
push
in
jmp
mov
mov
testb
mov
mov
mov
sub
adc
mov
jg
mov
dec
lcall
xchg
dec
cwtl
mov
ret
idivl
and
push
dec
int3
shrb
je
dec
cmp
ljmp
lods
negb
lcall
popa
jb
ret
lahf
sub
dec
mov
pop
je
lcall
or
xchg
movsl
lret
popw
sarb
cmp
mov
fs
cmp
pop
mov
fwait
pop
jmp
mov
pusha
mov
pop
dec
or
adc
or
aas
and
mov
and
mov
in
das
aaa
mov
and
cmp
out
pop
test
mov
enter
xor
adc
pop
mov
ret
int
arpl
nop
jp
xor
stos
pop
push
fisttpl
xchg
push
movsl
jno
mov
repz
into
jge
int3
dec
sbb
insb
mov
mov
dec
test
int3
sub
idivb
iret
lea
mov
lods
xchg
xor
aaa
pop
pop
or
movsl
cmpsl
lret
ja
ret
push
leave
xlat
or
adc
shr
je
inc
cmpsl
filds
popa
push
cmp
mov
es
inc
in
inc
dec
mov
gs
inc
out
stc
sub
xor
cli
fiadds
push
addr16
jo
push
sub
mov
rcrb
sub
cli
and
in
mov
ja
out
out
pushf
out
test
das
std
sbb
and
jo
lret
outsb
test
jno
lcall
xlat
mov
add
into
or
test
cmp
pop
mov
sub
mov
dec
pushf
test
mov
sbb
lods
xor
push
test
pop
inc
jnp
xchg
adc
adc
jbe
sub
jb
or
or
inc
repnz
shll
jno
fs
cmp
stc
rcrl
jg
mov
sub
xor
sti
rorb
mov
fcomi
push
inc
dec
pop
and
sub
mov
es
xor
pop
pop
outsb
sub
add
cs
jbe
mov
outsb
pusha
push
dec
popa
imul
sub
xchg
dec
xor
sbb
pop
cmp
andl
repz
scas
bts
aad
mov
sbb
test
inc
mov
lds
sub
add
sub
sub
mov
xadd
cmp
jo
fiadds
fdivl
out
popl
into
sub
add
cs
inc
fld
pop
shl
xor
je
rcrl
jo
movsb
push
shl
cmc
push
xchg
pop
adcb
or
cmp
or
movsb
push
jl
pusha
xor
lahf
and
lods
xchg
dec
cmpsl
cmp
mov
out
push
jns
notb
roll
mov
nop
insl
adc
loopne
je
jnp
or
dec
fildl
leave
in
xor
mov
aaa
xchg
push
imul
xchg
add
inc
push
add
inc
out
pop
mov
xor
mov
pop
dec
pmullw
sub
jne,pt
insl
xor
dec
jge
inc
sbb
in
jno
in
sub
sbb
cmp
lock
retw
xchg
js
pop
xchg
mov
imul
sub
lods
pushf
fiaddl
xchg
jle
sub
mov
jae
sbb
pop
lret
or
pop
dec
cmp
gs
pop
cmp
in
push
es
nop
loopne
push
bound
outsb
dec
xchg
push
out
jge
movsb
ds
and
les
fcoml
mov
pushf
sbbb
dec
mov
nop
dec
sbb
daa
mov
flds
sub
or
negb
adc
or
iret
mov
pop
add
lods
push
ret
sbb
enter
out
sahf
dec
mov
aam
shl
dec
rclb
add
cmp
jecxz
xchg
in
loopne
xor
adc
sbb
dec
lds
je
shrb
xchg
add
xor
iret
stos
out
test
pop
lock
repz
jp
fistps
mov
pop
inc
shlb
imul
jge
fwait
dec
and
dec
inc
iret
ljmp
xor
inc
inc
mov
fcoms
movsb
mov
flds
cmpsl
inc
popw
mov
gs
test
ljmp
mov
icebp
sub
pusha
xchg
bnd
es
popf
inc
cs
sbb
mov
pop
in
shl
mov
scas
sbbl
scas
sbb
paddb
dec
add
enter
xchg
in
iret
loope
inc
add
jmp
imul
lcall
push
lock
mov
jb
add
adc
lods
dec
push
inc
sub
push
mov
ljmp
stos
cli
imul
mov
icebp
repz
push
fwait
mov
fdivl
sbb
sbb
jo
or
push
mov
push
ja
aaa
into
adc
pop
sbb
test
xor
adc
push
test
into
test
sbb
mov
push
std
push
es
aad
scas
cmp
dec
insl
jp
cmp
add
add
fs
cmpsl
fnstcw
jns
leave
push
sub
in
xchg
inc
lods
xor
sbb
stos
push
gs
and
cs
adc
mov
pop
testl
cmpsl
dec
xchg
mov
inc
xor
lret
adc
outsl
sbb
dec
insb
loopne
sarl
add
dec
dec
int3
out
lods
adc
mov
add
push
inc
xchg
js
test
lods
jae
cs
leave
adc
mov
in
lret
nop
add
hlt
scas
push
enter
scas
cmp
rcl
cmpsl
sbb
shrb
push
sub
mov
inc
aam
inc
inc
out
mov
lock
mov
icebp
jle
cmpsl
mov
inc
or
jmp
dec
rcrl
pop
pop
mov
pop
push
mov
icebp
ds
push
stos
and
jl
xchg
cmp
jo
xor
pushf
pop
jge
sub
xchg
pop
hlt
insl
ficompl
or
cmc
imul
fbld
push
dec
out
inc
shrd
rolb
leave
fwait
sbb
lcall
push
aam
xchg
sbb
fcmovnbe
add
sub
push
outsl
aam
and
data16
andl
sti
hlt
push
std
movsb
out
xor
lret
mov
lcall
movsb
in
mov
ds
mov
mov
pop
data16
add
mov
xchg
push
push
and
movsb
ret
dec
fidivl
test
dec
sbbl
sbb
xor
insl
call
xor
cmc
fwait
jg
mov
adc
outsl
xchg
aaa
into
ret
cmp
push
dec
scas
xchg
ret
or
push
inc
push
out
pop
jae
push
mov
mov
adc
lea
mov
fcomps
dec
repnz
mov
out
push
mov
cmpsb
cli
adc
imulb
icebp
arpl
pop
aad
jne
pop
cwtl
pop
mov
add
and
mov
adc
cmp
dec
cwtl
sub
outsb
xchg
cmp
sub
cmp
ss
scas
cmp
popa
cmp
sub
stc
push
dec
jae
js
xor
out
xlat
aas
xor
sbb
scas
mov
shll
sub
pop
test
cmp
fdivrl
jl
sub
sbb
adc
mov
popa
orl
mov
fimull
xlat
in
sub
je
or
dec
mov
ret
push
out
bound
test
fwait
jl
sbb
dec
xchg
mov
sub
loop
inc
jge
cwtl
lods
arpl
jg
xchg
cmpsb
movsl
adc
inc
ffreep
repnz
add
aas
mov
or
clc
rorl
aas
fcmovnb
popa
inc
lock
pop
cwtl
fst
lods
out
cmpsl
jns
cmpsl
pusha
mov
sbb
movsl
pop
dec
stos
sub
aad
dec
out
adc
sub
add
jle
imul
aas
lcall
xchg
stos
arpl
add
jmp
adc
xchg
pop
cmc
lcall
in
out
sub
pusha
and
adc
cmp
mov
in
cwtl
mov
cmpsl
mov
cmp
adc
adc
in
sahf
decl
call
mov
xchg
imul
cltd
movsb
cmp
lock
lcall
cltd
xlat
pop
dec
add
xor
dec
lock
mov
je
inc
inc
dec
jbe
inc
aam
scas
dec
inc
mov
shll
bound
adc
jge
fwait
dec
mov
add
pop
cmpsl
rcrb
test
insb
add
xor
cmp
jge
gs
scas
aas
and
xchg
mov
popf
loop
paddd
cmc
inc
test
xchg
leavew
sub
cltd
mov
and
popf
and
ds
movsb
jb
fs
push
pop
push
clc
out
aaa
or
mov
add
dec
rclb
dec
test
or
dec
pop
pushf
xor
sbb
fisttpll
or
cmp
dec
fcmovbe
pop
dec
fimuls
sub
add
sbb
inc
les
dec
mov
ss
mov
or
psubusw
and
dec
ret
iret
push
adc
enter
popa
jge
test
jno
mov
push
cmp
sbb
mov
ss
pop
orl
mov
push
dec
cmp
fbstp
mov
sub
movsl
dec
pusha
in
scas
movsb
out
mov
jns
in
ljmp
cltd
mov
sahf
ljmp
sub
or
int3
fucom
mov
lods
add
sahf
lret
pushf
rolb
jl
xor
pop
notl
fisttps
cmc
stos
xchg
jge
mov
push
vsqrtpd
sbb
ds
push
sbb
pop
aam
mov
xor
sub
ds
mov
stos
sub
inc
inc
test
rcrl
push
and
roll
js
insl
sbb
mov
jp
repnz
cmp
fbstp
and
sbb
sbb
je
inc
loopne
pop
dec
mov
mov
sub
icebp
lahf
jns
xor
xchg
jp
repz
xlat
inc
add
mov
insl
pop
or
shll
mov
mov
cli
sub
scas
scas
enter
jbe
lds
sarb
fdivrl
add
clc
test
jle,pn
in
lret
aad
cmp
lcall
push
stos
jns
ss
popa
xchg
cmp
bnd
call
jae
mov
pop
scas
add
add
aam
cmp
stos
test
daa
mov
das
mov
pushf
push
sbb
sbbl
outsb
and
mov
xor
cmp
cmp
mov
mov
jge
add
sub
cmp
lds
lret
pop
xchg
jl
adc
cmp
inc
sub
fdivs
and
push
mov
cmpsb
push
xor
and
sbb
xchg
cli
dec
mov
stos
sbb
sbb
sub
lret
lods
push
out
les
and
imul
fldenv
and
cmpsb
stos
scas
mov
mov
cmp
lods
je
in
dec
jecxz
out
jb
icebp
int
pop
sbb
pushf
std
aam
lahf
xchg
pop
jns
pusha
test
jl
mov
inc
sub
shll
pushf
push
dec
adc
icebp
adc
pop
add
loopw
lcall
inc
mov
and
ja
in
push
dec
pop
stc
add
aam
aas
fdivs
adc
sub
sbb
inc
in
and
dec
out
insl
mov
dec
xchg
inc
or
push
add
js
lea
cs
sarl
xlat
inc
mov
int3
xchg
jg
les
je
movsl
cmpsl
ljmp
imul
pop
push
lods
ds
data16
adc
push
add
cmpsb
or
jmp
and
daa
fcmovnb
xor
lea
outsl
lret
dec
xor
and
pop
fsubrl
xor
pop
cmpsl
sbb
mov
mov
and
xchg
loop
std
cmp
call
inc
loope
fsubs
jp
loopne
add
jge
in
in
fisubl
fbstp
fwait
cmp
sbbl
dec
enter
je
in
mov
jle
loope
mov
cmp
testb
imul
test
xor
test
mov
in
fmull
call
ret
pop
cs
mov
in
sub
or
mov
mov
mov
jmp
mov
cmp
adc
xchg
je
fildl
cwtl
jmp
loope
leave
test
stc
sbb
sub
inc
push
arpl
enter
or
xchg
jae
mov
dec
xchg
js
sub
inc
xchg
in
mov
es
add
xor
mov
pop
jl
shr
jno
xchg
ja
mov
mov
adc
out
adc
dec
jnp
repnz
dec
icebp
mov
mov
jp
push
inc
std
push
dec
xor
in
mov
push
mov
repz
mov
adc
arpl
nop
cmpsl
push
jae
data16
mov
add
stos
stos
xchg
test
lods
not
mov
jecxz
jmp
ds
add
jae
pop
mov
bswap
faddl
std
sbb
or
into
add
cld
push
xchg
push
lret
js
test
icebp
push
ret
or
jp
dec
fsub
pop
add
xchg
cmp
fabs
or
jmp
xchg
push
fwait
mov
sub
cmp
in
sub
int3
mov
ret
mov
outsb
or
out
jmp
xor
mov
push
jne
aad
add
push
cmc
daa
negb
xchg
dec
leave
in
adc
ss
pusha
cs
lret
mov
daa
movsb
mov
pusha
std
sti
mov
sbb
shlb
out
mov
lcall
pop
bound
nop
sti
sbb
shrb
inc
loope
gs
mov
loopne
clc
movsb
pop
xor
adc
sahf
xchg
adc
adc
jle
fists
mov
push
mov
cmpsl
movsb
xchg
pop
and
jno
xlat
lock
repz
std
add
mov
repz
push
bound
clc
sbb
arpl
mov
pop
sarl
or
fs
pop
pop
in
xor
jmp
xchg
andb
lret
ret
add
sub
cmpsb
jns
or
gs
loopne
sbb
push
pushf
dec
mov
pop
mov
add
xor
insl
lock
push
inc
push
xor
test
dec
inc
and
clc
test
dec
aas
fcomps
pop
sub
sub
loopne
clc
ret
ds
imul
push
xchg
idivb
mov
add
pusha
cmp
addl
cs
push
sub
imul
sub
pop
jo
adc
fisubl
mov
mov
addr16
push
cmp
fucom
or
test
jns
xlat
in
stos
sub
adc
inc
mov
xor
jb
test
cmpb
sbb
mov
fsubl
mov
pop
push
adc
aam
sbb
mov
lahf
shl
xor
in
aas
sub
fmull
sbb
icebp
mov
out
add
in
mov
mov
ljmp
cmp
mov
xchg
dec
add
dec
adc
aaa
iret
int3
addr16
adc
scas
push
sub
dec
push
movsl
clc
pop
lock
xor
aad
sbb
loop
lea
call
mov
mov
cmp
xor
icebp
cmp
mov
or
jge
inc
sub
lcall
cli
dec
enter
lds
das
and
add
pushl
adcb
add
test
dec
dec
lods
or
outsl
xor
cmp
mov
scas
outsb
in
pop
xor
push
xchg
leave
arpl
lahf
cmc
adc
or
inc
flds
xchg
mov
add
out
imul
ds
sub
into
push
cmp
add
popa
xor
js
inc
xorb
test
adc
outsb
arpl
mov
popf
mov
adc
mov
or
testb
call
and
sbbb
adc
movsb
popf
mov
lds
lods
sti
or
xorl
or
ret
xor
lods
xchg
shlb
xchg
pusha
cmc
pop
std
mov
add
mov
test
push
push
sub
xchg
subb
mov
out
jg
cltd
inc
imul
mov
pop
inc
insb
pop
fwait
cmp
sbb
in
jg
roll
mov
jne
cltd
inc
dec
outsb
into
or
ds
inc
sub
dec
jb
imul
bound
xchg
sbbb
sbb
pop
imul
lret
mov
es
hlt
arpl
inc
dec
dec
mov
xchg
int3
mov
inc
mov
cmpsb
adc
pop
inc
push
dec
mov
test
cmc
stc
imul
movsb
jge
stc
add
jo
ret
dec
jnp
and
fs
adc
inc
rcr
pop
cmp
xchg
scas
in
rcll
cmp
sarb
cmp
add
jae
fmul
pushf
in
dec
jne
mov
jns
jle
pop
xor
mov
ret
arpl
in
arpl
js
adc
cmp
shll
imulb
sub
jbe
push
xor
dec
sbb
fwait
clc
adc
test
jge
push
sti
mov
into
daa
jp
ret
inc
fimull
outsl
fadd
subl
mov
mov
mov
mov
fs
sbb
cmp
push
loop
mov
pop
mov
fwait
push
xchg
add
imul
jbe
out
dec
fs
dec
add
lcall
mov
or
mov
and
add
inc
jbe
insl
jle
mov
in
ret
into
stos
fs
mov
sahf
sbb
ds
push
push
pop
inc
push
pop
mov
data16
xor
loope
icebp
inc
sub
pop
pop
fsubrs
cmpsb
test
fsubl
aas
adc
add
loopne
adc
and
pop
adc
into
loopne
incl
and
cmpl
push
je
jl
pop
xor
or
mul
aam
inc
das
inc
rorl
mov
test
mov
pop
ret
clc
ret
movsl
mov
jecxz
mov
addb
nop
jp
loop
push
xor
sbb
push
mov
in
add
stos
int3
adc
imul
and
add
lret
sub
add
aaa
push
xor
and
sbb
inc
adc
inc
jnp
daa
mov
adc
jmp
orb
fists
sub
jbe
js
data16
sbb
cwtl
aad
test
mov
jge
cld
addr16
mov
popa
test
out
fcmovb
mov
pushf
push
sub
jbe
dec
sub
daa
jp
mov
jp
movsl
int
shlb
xchg
outsl
mov
out
lcall
pop
jo
negb
js
xor
add
push
jno
fs
sub
lmsw
pop
mov
pop
mov
jne
into
daa
mov
pop
cmp
nop
mov
adc
inc
adc
mov
cmp
stos
add
xchg
test
sub
mov
jnp
sub
fdivl
repz
pop
in
and
and
sbb
int3
pop
scas
add
xor
add
add
xlat
cwtl
fistl
mov
cmpsb
jns
sub
fwait
addb
mov
sub
in
popa
mov
decl
dec
mov
stos
inc
ja
xchg
mov
in
jne
dec
loope
push
xchg
mov
cmp
addl
xor
into
pop
mov
ret
and
in
je
lods
or
fiadds
lods
popf
mov
push
pop
mov
ret
aaa
scas
lds
insl
int
push
decl
les
xor
sub
mov
push
idivb
test
aaa
push
adc
mov
dec
stos
into
ja
js
mov
xchg
dec
pop
adc
fcompl
xorps
out
mov
mov
sti
dec
or
mov
lcall
jns
inc
sti
orl
loopne
mov
orb
inc
mov
push
pop
xchg
outsb
push
or
cwtl
jae
mov
int3
jb
or
fisttpll
test
int3
fisubrs
xchg
mov
xor
jmp
imul
xor
and
jns
or
push
mov
and
mov
inc
test
adcb
lcall
dec
arpl
pop
xlat
notb
add
sbb
movsl
push
gs
mov
adc
mov
or
int
fstps
ror
mov
fisubl
sbb
inc
fcomps
push
push
add
cmpsl
mov
mull
jae
shrl
mulb
cmp
shrl
fsubrl
pop
sub
sarl
orps
ja
in
mov
repnz
add
retw
cmpsl
nop
cli
cmpsl
icebp
and
jmp
jo
xchg
dec
sub
aaa
cli
bound
push
imul
in
inc
inc
jl
dec
xchg
xchg
lods
mov
mov
push
dec
and
scas
cmp
fwait
mov
sbb
mov
ret
mov
and
xchg
lea
inc
mov
mov
in
fnstenv
lds
call
sub
fimull
in
push
stos
pop
mov
arpl
daa
stc
orw
adc
mov
or
js
push
jbe
inc
inc
xchg
mov
pop
iret
jno
sbb
notl
fwait
sub
or
loop
cltd
dec
or
aas
push
add
pop
cmc
jp
test
vmovupd
sub
dec
mov
jl
sti
cmovp
aaa
fwait
pop
ret
sbbb
push
add
ja
push
ror
cmpl
mov
fs
in
mov
movsb
mov
popa
movsb
xchg
push
int3
xor
out
push
jg
cmpb
out
mov
std
sbb
jnp
xchg
xchg
pop
mov
xchg
jae
popa
xor
or
daa
mov
scas
je
xchg
fstps
adc
add
adc
aam
push
xchg
xor
adc
xor
jp
test
and
or
ljmp
rcll
sti
cmp
mov
aaa
push
jo
xchg
dec
push
dec
jle
pushw
or
aad
scas
leave
out
call
fisttpl
push
jmp
les
ret
pop
outsl
sub
mov
loop
push
jecxz
mov
xchg
cs
xor
sbb
inc
cli
lret
adc
push
add
inc
std
fimull
aas
outsb
mov
test
xlat
std
push
popa
xor
ret
add
inc
cmpsl
cmp
jne
xlat
mov
sahf
add
std
enter
ret
adc
or
mov
or
in
icebp
or
adc
ret
js
ret
ret
dec
cmp
loopne
jmp
mov
mov
push
mov
pop
sbb
adc
sub
push
xchg
movsb
or
test
push
and
faddp
fdivl
lock
mov
push
shl
cmp
std
rorl
jl
arpl
jg
mov
pop
nop
xchg
repnz
and
pop
scas
out
dec
or
rclb
iret
xchg
cwtl
jge
fwait
xchg
jl
lcall
xchg
or
daa
dec
pop
cmp
int3
cmp
fildl
xchg
out
iret
lahf
push
adc
pushl
jb
xchg
xchg
cld
mov
test
fwait
push
mov
and
jmp
sbb
cli
mov
adc
inc
repnz
xlat
adcl
inc
mov
fdivrl
xor
sub
add
mov
xor
add
je
mov
jecxz
dec
jmp
cmc
out
pop
movsl
mov
gs
mov
int3
cmp
gs
lret
out
or
mov
push
and
out
into
js
inc
js
jb
filds
dec
jnp
xor
mov
decb
mov
daa
test
int3
loopne
ret
adc
pop
jno
les
es
mov
mov
cmp
cli
in
sub
push
and
mov
cmp
sbb
inc
jecxz
iret
out
sbbl
sub
and
pop
in
mov
cwtl
lahf
xorl
outsl
ret
inc
xchg
mov
arpl
adc
jge
test
mov
fcmove
add
out
jecxz
cmp
mov
insb
jl
xor
dec
jecxz
adc
pop
roll
ret
and
test
pop
push
fdivl
bound
sahf
je
adc
ret
fsts
popl
cmp
daa
aas
test
aas
je
sbb
lret
ds
push
cwtl
dec
test
or
cmpsl
and
adc
test
loope
sbb
fdivs
sti
dec
scas
repz
or
pushf
xchg
fcoms
scas
or
mov
sahf
mov
mov
add
xchg
push
jns
inc
jne
inc
dec
mov
lret
and
sbb
stos
pop
cmp
mov
pop
cmp
sbb
and
les
dec
div
mov
lea
or
aas
popf
repz
cmpsl
js
jbe
and
and
dec
sbbl
test
sbb
test
push
adc
and
mov
fbld
bound
aad
rol
or
push
sahf
shlb
xor
mov
push
out
and
repnz
aaa
cwtl
mov
dec
shlb
ss
sub
andl
or
cli
insb
add
lds
hlt
les
cltd
hlt
jmp
fbld
addl
mov
daa
es
mov
mov
repz
cmp
sbbb
sbb
pop
xor
sahf
mov
push
or
jl
dec
xor
sub
push
pop
scas
in
enter
aas
sahf
fwait
adc
les
faddl
imul
mov
movsl
and
in
kmovb
inc
or
imul
push
sbb
stos
dec
data16
jo
sub
mov
andl
inc
faddl
stos
ret
and
xchg
std
push
std
push
pop
sbb
cli
xor
lahf
lods
test
dec
jns
jmp
cmp
cltd
jg
imul
push
outsl
adc
les
insb
lods
jge
ja
sbb
fcmovne
stos
int
push
imul
sbb
adc
xor
cld
push
adc
pop
enter
mov
js
nop
cmp
cmp
pop
or
shlb
push
sbb
cli
or
int
xchg
lret
dec
fbstp
inc
aaa
sbb
jns
sub
lea
adc
cmp
pop
hlt
insl
and
xchg
in
push
stos
fistpl
lahf
mov
aaa
pop
inc
rcrl
push
aas
shl
dec
fldcw
dec
in
out
ds
stos
test
cltd
packsswb
nop
stos
inc
shl
testb
out
inc
mov
mov
leave
movsb
inc
outsb
out
mov
je
dec
test
loopne
sbb
mov
data16
jp
aas
aam
inc
jno
movsb
xor
inc
arpl
lret
mov
adc
fwait
or
inc
inc
jnp,pt
push
aam
dec
fistpl
or
sti
add
insb
rclb
xchg
sbb
cld
ret
push
in
mov
scas
ja
movsl
int
outsl
mov
mov
mov
fs
aad
flds
cmp
nop
nop
xor
repnz
fwait
aas
or
jae
push
push
sub
outsb
pop
xor
dec
xchg
mov
jae
dec
jnp
hlt
jge
or
lock
sbb
clc
push
jno
das
xor
sub
sub
dec
popf
stc
fwait
cld
adcb
and
rcl
jmp
xchg
jnp
add
sbb
pop
dec
shrd
inc
movsl
repnz
adc
fwait
int3
sbb
sahf
ret
xorb
xor
push
xchg
orl
cmp
pushf
adc
sbb
mov
pusha
sub
dec
shl
mov
mov
pop
adc
jge
popa
ss
adcl
mov
or
push
add
push
sbb
adc
subl
or
roll
outsl
dec
jo
mov
rcrb
sti
cmp
popa
or
push
pop
ljmp
push
dec
ja
and
sub
push
sub
inc
xchg
sbb
or
push
xchg
lcall
sub
stos
aaa
xor
sbb
repnz
add
or
push
adc
arpl
push
pop
addr16
loope
mov
jg
add
pop
test
iret
loope
sbb
fwait
pop
cwtl
ss
pop
xchg
aad
sbb
in
and
sbb
xor
rep
inc
loopne
mov
ljmp
imul
mov
sub
inc
imul
das
repnz
andb
xchg
xchg
mov
lods
push
push
mov
scas
outsb
add
jecxz
int
insb
cmpsb
imul
cmpsl
pop
jecxz
repz
add
leave
sbb
movsl
push
xchg
mov
and
imull
enter
aaa
jmp
mov
sub
cmp
inc
iret
push
mov
lds
mov
popf
pop
mov
jno
pushf
insb
sub
data16
jns
data16
mov
mov
lods
test
jle
mov
and
insl
mov
push
test
ss
mov
mov
lods
fmuls
imul
mov
ljmp
dec
xlat
pop
rcl
mov
push
lcall
out
mov
xchg
rcrb
pop
pop
dec
in
fs
xor
mov
mov
jnp
call
add
cmp
cmp
mov
pushf
mov
ss
loope
push
fdivrl
loop
or
or
inc
lods
dec
cmpsb
sbb
rcl
cld
das
push
xchg
stos
or
or
leave
jp
mov
enter
dec
or
sbb
icebp
lds
loope
sbb
fstpl
out
add
sub
push
inc
lret
or
out
cltd
and
pop
es
or
mov
dec
mov
mov
mov
add
jmp
jle
jno
push
in
nop
adc
mov
sbb
lock
pop
in
or
push
insl
sar
pop
notb
shrl
xchg
jns
iret
pop
out
push
push
sub
fcmovnb
and
in
sub
xchg
ds
or
jl
call
movsb
sbb
jo
pop
aaa
pop
shrl
cmp
xchg
pop
inc
adc
sub
add
out
sbb
xor
fsubrs
dec
outsb
push
lcall
mov
aas
cmpsl
bound
lods
mov
lahf
adc
xor
xchg
xor
mov
adc
fidivl
incb
mov
and
mov
sbb
sbb
jbe
das
incl
jns
fisubl
xor
mov
jl
lcall
sti
fistpll
rcl
lds
sbb
inc
dec
add
jo
subb
inc
fwait
mov
sub
mov
sahf
popa
jb
loope
stos
xchg
aam
xchg
popa
inc
clc
and
jmp
out
dec
add
dec
pushf
repnz
lock
clc
and
mov
aas
dec
xor
test
insb
jp
pop
pop
out
jae
push
dec
mov
sbb
das
mov
push
iret
repz
push
sbb
mov
sbb
fsubrs
jae
and
in
inc
xchg
out
sar
pop
xor
adc
outsb
inc
or
sub
das
and
mov
mov
push
or
mov
lods
mov
aaa
aam
xor
scas
jo
mov
shlb
cmp
lods
and
xchg
sub
mov
mov
subl
jmp
inc
sub
fnsave
insl
jne
pop
xor
add
movsl
dec
and
jp
push
stos
cmp
lret
ss
fwait
sbb
aam
scas
add
sub
mov
cmpsl
pop
fadd
xchg
ret
sub
repz
pop
sub
jp
and
pop
add
cmpsl
sbb
push
data16
cmp
and
jae
or
cli
outsb
adc
bound
mov
mov
pop
jge
pushf
xchg
test
jl
cmpsl
test
push
repnz
in
sbb
clc
hlt
and
shrb
fcmovu
push
cltd
imul
nop
fadd
xor
or
xor
mov
out
mov
sub
add
xor
pop
xchg
fwait
cmovo
outsl
ss
int3
cmpsl
fldln2
jp
stc
mov
repz
lret
cmp
ficomps
adc
cld
pushf
xchg
xor
cmpl
xchg
mov
dec
out
lret
xchg
mov
jne
or
inc
call
pop
fldt
in
xchg
push
dec
cld
and
daa
jno
mov
sbb
loopne
xchg
lret
cltd
mov
and
adc
mov
mov
mov
or
mov
pushf
add
negb
or
popl
pop
and
mov
cmp
xchg
and
clc
dec
sbb
out
ffree
mov
mov
cli
mov
lods
jb
cmp
mov
gs
aas
icebp
jns
dec
fcomps
xchg
mov
xor
sub
data16
fwait
arpl
lods
fs
mov
nop
inc
cmovae
add
test
fnstsw
stos
jb
les
xchg
lret
sbb
sub
je
fdivr
stos
and
cmc
lods
adc
stc
push
sbb
insb
jge
inc
ljmp
test
popf
cmp
adc
xlat
imul
aam
jmp
iret
out
repnz
cwtl
enter
sbb
scas
in
mov
test
int
sbb
add
call
stos
mov
test
in
aad
ss
jl
xor
dec
cmpsl
mov
stos
sbb
inc
cmpsl
sbb
pop
scas
insb
jge
xchg
sub
loop
incb
shl
pop
xchg
addr16
incb
add
pop
loop
insl
mov
jne
test
cmp
inc
inc
add
xchg
shrl
mov
cmp
jo
add
pop
mov
or
mul
negb
adc
inc
dec
js
pop
dec
adc
xlat
nop
rorl
std
dec
iret
dec
icebp
test
shll
mov
inc
fimull
or
jnp
or
loopne
jae
lret
mov
test
or
sub
dec
enter
add
xor
push
mov
push
inc
push
pop
push
cld
ficoms
not
xor
out
mov
pop
aad
sub
sbb
pushf
mov
inc
popa
cmp
jo
jge
sbbb
xor
pop
mov
pop
lea
stc
pop
mov
pop
cmp
iret
xor
data16
leave
xchg
cwtl
cmp
insl
cmp
jb
mov
mov
repnz
jae
push
rorb
push
pop
fldenv
xchg
fistpl
inc
ja
cmp
sti
enter
add
orb
fcompl
in
out
sahf
popa
sub
pop
sbb
ds
xor
mov
mov
xor
test
in
mov
xchg
cmpsl
leave
mov
sarb
pop
mov
xlat
hlt
jbe
cwtl
popf
or
mov
jp
push
popa
fcompl
dec
iret
mov
jb
mov
mov
daa
cmp
sti
push
xchg
inc
loope
aaa
xorl
sbb
or
and
xchg
mov
mov
scas
ret
dec
xor
movsl
pop
add
popa
popa
dec
je
and
fsubs
push
and
sub
addr16
mov
xchg
insl
xlat
pop
dec
or
sub
call
rcrl
cwtl
jo
dec
popf
mov
je
dec
push
sub
lcall
icebp
scas
hlt
stos
leavew
jmp
imul
cmp
or
aad
notl
jo
in
jno
call
jle
cs
push
or
and
cmp
loope
mov
mov
inc
xor
jg
pop
out
testb
and
out
je
ja
bound
ficompl
call
sub
xor
popf
jecxz
daa
js
cmp
sbb
outsb
sarl
gs
out
jne
or
and
push
ljmp
xchg
add
or
rep
mov
and
push
xchg
cli
or
add
mov
shlb
pop
add
mov
mov
and
sarb
jp
repz
xchg
lahf
sub
shlb
jge
leave
jle
jecxz
insb
adc
cmp
dec
fucomp
leave
cmp
jp
pop
xchg
lock
push
mov
outsb
xor
jbe
nop
adc
mov
cli
jle
lcall
mov
lods
mov
fsubp
ljmp
loopne
inc
xchg
mov
jb
cmp
inc
push
outsb
adc
out
pop
adcl
test
sti
cmp
bound
add
ss
aaa
jbe
push
xor
cmp
les
out
xor
pop
add
test
jge,pn
xor
fs
push
imul
adc
jle
xchg
test
inc
push
out
inc
mov
loopne
jmp
out
mov
mov
popa
shrl
jecxz
jne
mov
insl
jp
fisubs
mov
adc
dec
stos
or
mov
cmpsb
dec
mov
stc
call
inc
or
mov
stc
stos
lcall
test
fsub
dec
mov
or
jns
and
pop
cmpsl
sbb
cmp
ret
pusha
sahf
call
pop
push
jne
xchg
mov
faddl
cmpsl
mov
dec
fnsetpm(287
movsl
ret
dec
inc
push
push
addr16
ret
adc
shll
add
fucomp
in
out
insl
enter
inc
sub
stc
push
inc
popf
and
inc
lgdtl
icebp
je
lret
stos
insb
add
dec
adc
mov
or
and
out
and
jp
mov
mov
xlat
loope
pop
roll
fsubl
dec
jecxz
mov
icebp
xlat
es
xchg
es
lret
lcall
sbbb
pop
adc
inc
push
lds
pop
adc
dec
adc
stc
push
xchg
sbb
mov
ja
xchg
fld
dec
dec
aaa
je
stos
dec
out
jae
aam
aam
mov
lcall
stos
insl
xchg
fsubs
cmpsb
push
sub
push
in
sbb
ret
or
jne
fiaddl
push
mov
and
nop
adc
lcall
and
mov
fistpll
scas
out
mov
xor
movsb
fwait
xor
push
ljmp
ret
das
or
fcomi
cmpsl
into
imul
xchg
cmp
loop
pop
roll
push
shl
and
or
hlt
imul
insb
nop
call
test
adc
in
cmp
xor
sub
lods
xchg
push
dec
push
xchg
lods
dec
mov
dec
xorps
stc
jg
aam
addr16
adcl
idivl
jno
sbb
and
jae
cs
adc
adc
or
orl
lea
into
cmp
popa
lods
and
movsl
mov
stc
xchg
cmp
or
ror
les
fiadds
lahf
nop
hlt
xchg
inc
cld
test
mov
mov
into
cmp
jns
cmp
popf
cltd
xorb
stc
fcmovnb
dec
jle
add
ds
inc
arpl
add
mov
adc
call
in
xchg
addr16
jecxz
pop
out
push
sarl
adc
rcl
jb
lods
xor
jne
int
add
and
or
aad
in
xor
rclb
pop
mov
mov
inc
jl
test
sub
pusha
les
lret
xorl
adc
cs
jp
insb
cmp
scas
cmpsl
mov
icebp
jbe
movsl
int3
and
xchg
insb
mov
repnz
aad
and
dec
pop
xor
xor
in
int3
call
xorl
jo
faddl
dec
dec
pop
sub
punpckldq
mov
aad
aaa
xchg
popf
and
loop
lock
mov
push
nop
ja
stos
in
mov
inc
and
pop
lret
push
mov
add
or
fs
lret
rclb
pop
dec
inc
orl
xor
cmp
jg
inc
mov
push
cmc
rclb
into
push
dec
jo
popf
scas
aam
jg
cmp
sahf
dec
push
mov
leave
jb
mov
dec
call
daa
lret
cltd
inc
es
pop
add
cmp
addb
xchg
out
scas
xchg
dec
jl
pop
enter
scas
hlt
sub
mov
ja
fbstp
mov
cmp
sarb
sbb
xor
cmpl
out
ljmp
in
pop
stos
pop
lea
call
dec
fldt
test
arpl
nop
xor
and
add
adc
scas
push
test
pop
push
gs
lods
inc
dec
add
mov
mov
arpl
sub
in
shr
f2xm1
fwait
jb
dec
lods
add
lret
mov
mov
aad
sub
adc
pop
shll
cli
add
sbb
push
out
mov
pop
pop
mov
xchg
icebp
mov
std
mov
xchg
cmpsl
sub
and
add
push
or
lcall
dec
mov
and
les
ret
mov
stos
cli
mov
sahf
xchg
adc
movsb
cmp
or
xor
mov
stc
push
dec
pop
sbb
in
int
mov
cmpl
fildl
mov
out
mov
lcall
cmovle
inc
out
lea
out
aas
ficomps
jecxz
add
fnsave
cmp
xchg
and
add
pop
outsb
testb
orl
pop
fmull
adc
jge
cmp
lcall
cmpsl
sub
inc
cs
xchg
xor
cmp
arpl
xchg
iret
loopne
and
stos
stos
mov
xchg
out
push
mov
sbb
lock
jge
js
out
scas
out
push
das
push
ds
imul
lcall
inc
inc
sbb
cmpsl
mov
dec
push
test
jbe
loop
mov
lcall
ljmp
pop
xor
stos
leave
push
cmc
sbb
jle
aas
jecxz
inc
ret
loop
xchg
push
dec
cmp
lds
adc
cmp
sbb
fwait
ja
lret
jp
xchg
out
hlt
cs
into
movsb
fidivrl
inc
dec
fucomp
adcb
leave
mov
dec
insl
je
test
gs
sbb
fwait
dec
cmc
mov
jmp
adc
arpl
cmpb
nop
lea
cmp
lods
xchg
add
cmp
popa
es
and
or
xlat
and
sub
jae
inc
into
loope
push
jge
int3
movb
xchg
sti
imul
dec
add
xchg
ljmp
inc
ret
jno
and
xchg
jno
ret
mov
jge
or
fdivs
jmp
into
imul
xor
dec
rcr
loopne
sub
xchg
leave
and
cli
inc
inc
mov
pop
add
sub
divl
ljmp
popa
xchg
fwait
data16
lahf
jg
dec
push
mov
loope
sarl
and
cwtl
inc
adc
cmp
jb
xor
test
sub
jns
pandn
xchg
incb
cmp
pushf
sub
jo
adc
and
div
pop
ret
and
daa
adc
push
testb
mov
push
add
mov
add
test
imul
out
lcall
lret
imul
sahf
fisubrs
add
lock
stc
lds
push
or
test
sbb
push
jo
inc
int3
dec
in
push
sub
in
add
adc
lret
es
popa
cmc
loop
or
cmp
es
lret
enter
pop
dec
inc
lcall
cmp
lock
loop
sar
shll
imul
add
xor
iret
dec
xor
nopl
repz
pop
push
jb
sar
mov
addl
pop
add
xchg
das
pop
insl
cli
outsl
inc
clc
push
lds
daa
cltd
xor
mov
jo
jecxz
movsl
test
lcall
loop
sub
shlb
push
cmp
jbe
cmpsl
adc
mov
mov
mov
fsts
and
push
sarb
imul
sbb
stos
push
in
mov
mov
mov
cwtl
nop
pop
pop
xchg
fidivrs
adc
orb
in
pop
cmp
or
popa
fwait
and
dec
dec
sub
sbb
xchg
xchg
mov
dec
or
data16
in
iret
aam
stc
xchg
int3
jae
pusha
mov
mov
xchg
jae
adcl
clc
sub
mov
inc
out
xor
loopne
stos
fcmovb
fists
rolb
loop
shr
clc
das
popa
cmp
xchg
push
pop
mov
mov
cli
jns
mov
movsb
adc
test
xor
cmp
and
decb
and
sti
sbb
in
inc
inc
xchg
aad
test
icebp
fsin
ss
or
sbb
mov
les
mov
sbb
jbe
stos
xchg
pop
inc
in
in
test
pop
sub
sbb
rcrl
push
imul
mov
jns
and
out
mov
or
mov
adc
sbb
movd
ja
dec
inc
or
fsubr
lret
cmpl
std
fisubrl
jp
nop
shrl
mov
sbb
and
ds
adc
imul
popa
jmp
sbb
mov
add
cmp
xchg
mov
stos
mov
faddl
test
add
mov
fstpl
dec
pop
sub
cmpsb
scas
test
push
pop
out
pop
xchg
mov
sahf
sbb
fldcw
sub
jle
pop
jbe
mov
adc
mov
mov
pop
xor
cmp
cmp
push
push
or
add
scas
sbb
adc
ja
inc
sub
getsec
add
scas
pop
jae
push
cmp
in
sbb
test
bound
stc
fldcw
pop
pop
xor
jns
cmp
repnz
addl
jg
push
ss
cli
enter
test
inc
sbb
test
or
sub
cmp
xor
jle
xor
inc
xchg
movsb
ffreep
and
inc
jl
push
mov
sar
or
sub
fistps
mov
cmp
sahf
pop
popa
out
aad
aam
js
incb
aas
xor
popl
push
add
mov
mov
push
jno
mov
scas
lret
xchg
push
dec
aam
test
cmp
lods
jecxz
mov
and
mov
inc
xchg
pop
shl
cwtl
pop
xor
nop
push
scas
cld
mov
adc
mov
xor
xlat
dec
xor
nop
inc
outsb
xchg
cmp
adc
xorl
xor
sti
dec
cmp
mov
rol
leave
in
pop
mov
in
cmp
adc
scas
test
push
and
iret
sbb
adc
sti
adc
xor
stos
inc
ret
fisttpll
iret
jae
add
xchg
out
std
or
lds
leave
notl
dec
and
mov
sahf
out
cli
lcall
inc
int
movsb
adc
stc
imul
fldl
and
dec
enter
xchg
test
or
mov
xchg
push
aam
cmp
fcoms
fbstp
out
cmp
sbb
xorl
mov
jg
loope
stos
inc
jecxz
push
xchg
xchg
fcomi
and
scas
lret
xlat
les
add
dec
aam
lcall
pop
adc
popf
pop
mov
mov
add
sbb
mov
mov
paddsw
push
movsl
push
js
pop
fstpl
sbb
pusha
fwait
jge
call
mov
or
pop
popf
jl
cmpsl
dec
imul
pop
lret
fists
add
int
mov
cmp
jo
outsb
sub
mov
add
lea
outsb
sbb
inc
cmp
and
inc
push
add
cmp
fwait
mov
push
jne
leave
rol
js
pop
scas
mov
outsb
cmp
loope
cld
mov
inc
lret
jbe
inc
sub
lods
xor
aaa
jnp
inc
mov
mov
cmp
push
testb
xchg
inc
dec
pop
out
pop
pop
mov
xor
cs
mov
aas
inc
loope
ljmp
and
or
es
push
sbb
and
fwait
sub
stos
mov
adc
push
repnz
enter
jmp
push
imul
or
inc
arpl
rclb
jbe
push
xchg
aaa
inc
enter
sub
dec
subl
xor
stos
mov
aaa
push
vandnps
dec
out
push
fisttpl
popf
cmp
and
push
add
mov
gs
xchg
das
adc
test
pop
xlat
xchg
movsb
ljmp
xor
mov
cltd
and
inc
mov
add
jae
inc
pop
leave
and
add
xchg
jbe
es
in
or
dec
push
mov
rcrl
cmp
sub
mov
cwtl
mov
or
mov
jecxz
fldt
sbb
int3
add
popf
jg
mov
sahf
inc
mov
lds
push
cld
fwait
mov
popa
iret
xchg
mov
sub
cmp
jb
xchg
fdivrp
push
pop
outsl
pop
pop
popf
in
push
cmpb
out
lret
in
dec
faddp
insb
dec
ret
jl
xchg
nop
arpl
or
sbb
sarl
jg
jnp
jge
pop
mov
and
add
arpl
popf
rolb
imul
xchg
push
sub
fcoml
hlt
ret
ja
mov
mov
sbb
mov
in
xor
iret
fiaddl
out
pop
jmp
fdivl
test
notl
push
aas
loop
sub
jle
dec
push
sbb
xor
xlat
cmpsl
inc
xor
std
sbb
out
lcall
push
or
lret
jb
add
popa
jle
mov
je
stos
lret
add
mov
push
cwtl
sub
in
sub
mov
jg
pop
cmp
jp
or
adc
push
in
sub
in
js
xchg
and
mov
fs
sahf
jb
insl
xor
sarb
mov
xchg
outsb
fwait
cmovp
jnp
loop
cmp
xchg
inc
xchg
dec
sbb
sub
mov
push
movsl
or
dec
rcrb
sub
mov
mov
cwtl
push
pop
sub
sbb
sbb
pushf
repnz
xor
adc
aad
jmp
aam
jp
jmp
push
jne
sbb
mov
stc
jp
fdivrs
repnz
into
mov
add
lock
cmp
cmpsb
xlat
mov
xchg
jne
jge
xchg
mov
mov
pop
out
jns
mov
dec
fcompl
repz
lret
mov
pop
fbstp
pop
call
daa
test
daa
cmp
sbb
test
and
pop
popf
inc
leave
or
std
outsb
aad
inc
dec
mul
clc
inc
mov
lret
and
cltd
mov
dec
ret
out
fisubs
insb
gs
fbstp
stos
mov
pop
pop
int3
sbb
mov
dec
out
lret
pop
imul
mov
ficoml
jo
mov
mov
sub
dec
mov
aam
imul
mov
pop
xchg
mov
inc
pop
inc
into
iret
xchg
cmp
xor
insb
push
or
push
sbb
push
movsl
aam
mov
repnz
xchg
add
sbb
imul
jae
mov
in
mov
cmc
mov
pop
mov
jno
movsl
mov
add
sbb
bound
test
xchg
add
add
jo
dec
jle
pop
aaa
pop
push
adc
or
clc
mov
dec
aaa
insb
jno
rol
loope
jo
fsubrl
pop
cmp
dec
sbb
subb
or
add
lret
arpl
ret
jg
lods
repnz
les
lods
rolb
mov
mov
in
sarl
or
pop
subb
movsb
lret
mov
jbe
dec
fs
cs
dec
push
rcrl
xchg
cmp
stos
in
out
sbb
arpl
ss
lcall
sbb
fwait
mov
adc
lods
jnp
sbb
mov
dec
jne
or
int
xor
add
addl
test
enter
shlb
adcl
push
xor
push
sub
inc
mov
sbb
jmp
inc
mov
pusha
int3
arpl
cmp
in
aaa
leave
mov
aaa
push
out
pop
or
sbb
hlt
aad
xchg
scas
ss
aad
xchg
pop
out
push
repnz
outsl
ljmp
out
rorb
imul
outsl
mov
lds
outsl
lretw
xchg
out
pop
and
sub
test
ficoml
sysexit
decb
testl
repz
and
pop
cmp
mov
or
push
mov
mov
push
and
and
shl
repnz
aas
stos
lahf
sahf
jp
repnz
adc
add
push
xchg
stos
mov
sub
xor
fs
or
cltd
ficompl
jae
decl
adcb
jnp
movsl
lcall
into
dec
and
repnz
pop
add
repnz
insl
jmp
fildl
xchg
repnz
push
mov
or
lahf
xchg
sub
inc
aam
push
test
into
xchg
or
out
mov
xchg
stos
popa
andl
pop
xor
mov
sbb
mov
xchg
pop
nop
fwait
andb
aam
pop
cmp
mov
mov
xor
mov
in
pushf
aad
iret
push
testb
pop
es
rolb
adc
sbb
sarb
lret
mov
out
push
or
into
and
mov
pop
pop
aam
push
pop
dec
dec
lods
call
into
int3
fstps
xor
daa
fdivl
das
add
xchg
xchg
push
mov
in
lods
adc
cmp
cwtl
xorb
add
js
ja
popf
nop
sbb
repz
add
mov
ss
cwtl
mov
cmp
mov
loope
jb
sub
or
pop
inc
mov
push
xorb
jns
xor
adc
in
pop
jne
ds
adc
les
fldl
pop
or
addr16
sbb
arpl
dec
xchg
leave
push
cmpsl
hlt
lods
dec
mov
jg
inc
inc
into
xor
sbb
out
cmp
sub
fiadds
jle
repnz
add
adc
or
cmpsb
mov
xor
clc
lock
lret
sub
mov
std
mov
push
xchg
lcall
push
adc
dec
jns
cmovle
inc
ljmp
arpl
stc
mov
js
sub
iret
mov
jb
push
or
dec
add
push
add
push
out
mov
fcoml
add
cmp
clc
xlat
jg
fmul
insb
gs
sub
fsubr
cmpsl
mov
pop
in
mov
inc
imul
repz
jl
pop
notb
stc
push
ljmp
adc
insb
out
lcall
pushl
cmp
and
js
iret
push
xor
stc
inc
sub
push
cs
mov
jb
jno
mov
scas
out
adc
sbb
add
cmp
or
xchg
jge
xchg
push
push
cmpsl
cmpsb
icebp
fmull
in
orl
pusha
push
cli
shrb
sbb
popl
orb
mov
fcmovne
xchg
ret
and
out
nop
mov
enter
mov
mov
add
cmpsb
dec
out
add
pop
lahf
call
lods
outsl
stos
jo
dec
lret
cmpsl
js
fs
sub
or
fwait
jmp
incl
aaa
adc
and
fsubrp
sub
cmpsb
lods
insl
sti
mov
movl
cltd
add
push
and
sbb
ja
mov
mov
fucom
cmpsl
jp
adc
lds
out
sti
and
inc
stos
aad
cmp
inc
lahf
and
ljmp
and
or
lcall
or
inc
test
scas
ja
sbb
out
sbb
push
xorb
xor
pop
in
sbb
or
lret
bound
sbb
test
stc
fcmovnu
pop
insl
das
jmp
pop
sbb
notb
xchg
cmp
mov
or
in
movsb
test
into
mov
cmp
shrl
xor
xchg
push
outsb
and
test
les
add
push
fists
inc
add
pop
push
push
pop
shlb
scas
mov
jl
cmpsl
aad
outsb
in
ds
push
jns
movb
insb
dec
dec
mov
push
rorb
pop
pop
out
je
jb
jp
xor
cld
mov
and
gs
or
mov
in
or
cs
mov
lret
dec
or
mov
push
lahf
imul
dec
aad
outsl
scas
or
xchg
mov
mov
shlb
cmpsb
scas
mov
ss
adc
pop
negl
out
push
xor
push
push
mov
lods
arpl
and
sbb
test
jle
and
jbe
push
int3
stos
fisubs
lahf
lcall
lods
push
xchg
cmp
pushf
mov
mov
mov
fcmovb
push
xor
loopne
xorb
sbb
loop
pop
pop
mov
mov
int3
push
icebp
shll
push
addr16
push
jl
fldt
add
pop
adc
and
int3
mov
int3
pop
cs
scas
adc
inc
mov
and
xor
push
subb
adcb
mov
sub
inc
push
ljmp
addl
negb
xor
insl
insl
mov
pop
push
jnp
dec
mov
xor
repnz
into
mov
or
iret
jg
or
rcrl
icebp
lahf
push
loopne
out
inc
dec
js
xor
sbb
mov
mov
and
into
add
cltd
sbb
dec
lea
stos
cmpsl
js
xchg
jl
jbe
test
mov
mov
andl
aas
mov
bound
cmp
mov
out
push
inc
addr16
pushl
ss
lret
push
dec
jae
push
pop
stc
pop
xchg
jbe
adc
jne
rorb
enter
ljmp
mov
imull
aaa
jle
push
and
sbb
sub
mov
mov
sbb
jns
mov
enter
scas
les
inc
sbb
push
sahf
test
mov
adc
mov
int3
lods
dec
bound
ret
and
repz
adc
in
loop
fxch
loopne
subb
fisttps
cmp
mov
sub
aad
jns
call
or
jg
arpl
sbbl
repnz
cmpl
xchg
outsb
mov
and
rol
sub
cli
cmp
aaa
dec
aaa
inc
add
sub
insl
mov
dec
repnz
inc
nop
adc
es
inc
mov
daa
sub
movsb
xchg
adc
xchg
and
mov
xchg
es
icebp
outsb
lahf
call
sbb
dec
fisubrs
lret
out
les
inc
movb
mov
mov
xor
xchg
sub
pop
pop
popf
xchg
das
add
jmp
cmp
cwtl
cs
push
es
push
cli
mov
lea
mov
mov
ss
xor
xchg
xchg
mov
fidivrs
outsb
and
pop
lods
faddl
int
cwtl
hlt
add
jmp
jo
int
aas
jno
arpl
jae
adc
repz
movsl
les
pop
xor
jmp
pop
out
aaa
jp
jg
or
cmp
fsubs
or
in
decl
or
xor
cmp
mov
fnstenv
xchg
sub
rcrl
cmp
jmp
cmp
std
loop
je
inc
or
xor
dec
xor
sahf
mov
cwtl
or
mov
xchg
pushf
arpl
in
idiv
cmpsb
mov
mov
mov
pop
jp
out
mov
xchg
out
sbb
imul
mov
hlt
mov
repnz
cmp
outsl
pop
pushf
out
lahf
jns
outsl
insl
stos
ja
and
mov
cmp
in
fwait
mov
out
pushf
gs
adc
ja
in
cmpl
inc
fistps
sarl
cli
or
mov
xchg
and
rorb
inc
sbb
sub
xor
push
aam
lods
repz
pusha
ds
sbbb
adc
shr
xchg
int3
mov
jge
push
ud0
jne
sti
aam
mov
inc
push
pushf
push
jns
or
or
jb
and
pop
les
es
and
int
out
xchg
jns
xchg
fidivl
testb
xchg
nop
outsb
out
add
xchg
shll
push
pop
mov
out
jb
iret
in
and
dec
js
jne
nop
std
and
sbb
dec
inc
xchg
or
fsubl
fstpt
ss
dec
sbb
aaa
jb
outsb
rcrb
xchg
and
inc
xor
aam
enter
xor
adc
inc
std
and
jae
flds
gs
and
fcompl
inc
aas
movsb
inc
scas
jg
adc
pop
roll
lods
jge
xor
pushf
fdivl
nop
es
stos
hlt
mov
fsub
mov
dec
aaa
xchg
dec
popa
xor
sbb
and
test
xchg
and
jb
dec
orl
jle
mov
insb
xor
xchg
in
pop
sbb
mov
xchg
and
inc
mov
enter
cmp
inc
fisttpl
notb
add
mov
imul
aam
dec
mov
addr16
int3
pop
push
jns
or
dec
sbb
sbb
fs
dec
sub
push
adc
sub
mov
leave
add
sarl
xor
testb
les
push
movsb
add
stc
insb
out
adc
loopne
stos
out
js
or
inc
dec
push
sbb
leave
cs
xor
jae
or
xor
cwtl
iret
cld
pop
scas
and
div
fwait
call
daa
ficomps
out
popa
mov
cmp
mov
push
mov
or
jo
rcr
test
jle
mov
scas
pop
lcall
sbbb
imul
out
aaa
pandn
in
inc
mov
push
push
mov
xchg
addr16
leave
jmp
pop
sahf
icebp
or
movsl
pop
repnz
xchg
or
jo
add
fcomps
out
andl
std
setge
mov
jbe
enter
cmp
arpl
dec
out
cli
or
nop
pop
mull
imul
ret
inc
push
push
push
das
lds
push
push
adc
fisttpl
mov
in
sahf
aas
sbb
jge
pop
and
hlt
jle
sbb
gs
fisttps
xor
jp
addr16
insl
dec
inc
jl
inc
mov
xchg
orl
cmpsb
push
arpl
aam
test
aad
or
fincstp
fsubr
movsl
jo
decb
cltd
testl
mov
fistps
pop
test
scas
cmpsb
sub
add
bound
shl
jb
jno
in
xchg
push
leave
pop
idivl
pop
iret
inc
in
pusha
fisttpll
mov
roll
jmp
mov
icebp
jns
jne
aaa
or
scas
test
mov
or
inc
mov
imul
movsb
dec
orb
test
mov
inc
in
jae
out
jbe
xchg
arpl
std
xorl
aaa
es
in
test
jmp
cmp
repz
cmp
xchg
insb
lds
subl
jmp
mov
andb
lret
inc
lret
stc
inc
mov
sarl
jp
or
pop
scas
sahf
fmuls
pop
mov
in
fldl
test
lret
or
int3
test
inc
rcrl
and
test
fisubl
inc
add
fcoml
pop
mov
dec
pop
test
fdivrl
int3
xorl
xchg
add
sbb
mov
ds
std
and
imul
or
adc
fsubr
stc
jb
aas
mov
repz
push
sbb
gs
sbb
pop
fsubrl
push
jb
mov
out
inc
bound
sbb
mov
cmp
pushf
jb
push
and
shl
lods
pop
cmpsl
mov
and
jle
sbb
xor
xor
adc
outsb
pop
dec
xor
cli
mov
test
mov
lahf
sarb
dec
jne
clc
sub
and
xor
test
jmp
lret
es
sub
popa
cmp
jge
out
lods
dec
adc
sbb
and
sbb
jb
shl
and
addb
test
lahf
jp
inc
fwait
imul
mov
sub
scas
sbb
cmove
stos
xorl
or
sahf
lret
push
add
cmc
or
xor
xchg
aad
jmp
cmpsb
jecxz
mov
push
cs
pop
add
cmpsb
mov
aas
xor
sub
xor
mov
xorb
cltd
shll
daa
dec
aad
mov
inc
lock
mov
aam
loopne
xchg
rcr
adc
mov
mov
fcmove
hlt
mov
lret
rcrl
push
cmc
jno
jmp
cs
xchg
rorl
mov
push
adc
cmp
dec
cwtl
vpsrlw
lret
adc
into
clc
push
adcl
xor
fwait
xor
lods
jge
add
xor
cmp
lea
jle
rcrl
sbb
sbb
cs
pop
jg
fsts
insb
adc
insb
fildl
mov
mov
out
stc
popa
repnz
xchg
scas
lea
cld
jp
les
mov
or
jge
test
paddw
leave
clc
dec
in
std
mov
jnp
xchg
mov
imul
and
cld
cmp
mov
xor
adc
push
stc
pop
pop
jge
imul
pop
and
xor
xchg
bound
outsl
lock
cmpsl
push
xlat
out
xchg
fildll
push
dec
popf
or
or
cmp
sub
jmp
loope
mov
xor
dec
test
push
xor
lds
dec
jae
les
inc
mov
nop
pusha
aaa
jo
push
add
cmpsb
fstpt
lock
notb
jbe
out
push
stos
and
mov
test
js
cli
fidivl
sbb
push
push
adc
sbb
and
cmp
les
lea
and
push
mov
insl
jl
and
scas
push
push
out
arpl
sub
mov
pop
pop
popa
adc
rcrb
xor
sub
outsl
inc
jecxz
and
mov
lds
xor
inc
nop
outsl
mov
test
pusha
jne
jnp
jge
jo
mov
cmp
sti
test
lea
dec
fsubr
lahf
xchg
ret
inc
andb
scas
jno
jl
cmpsb
mov
mov
aas
movsl
cmp
iret
leave
adcl
fstps
pop
cltd
jns
inc
imul
je
test
lock
or
mov
dec
or
in
or
in
and
jle
mov
cwtl
mov
popf
aad
inc
ret
mov
mov
mov
dec
adc
in
xchg
xor
bound
push
mov
les
or
scas
mov
mov
inc
es
inc
pop
push
mov
lcall
fstl
cmp
lods
cmc
dec
sbb
mov
xchg
xlat
pop
movsl
xor
mov
clc
cwtl
mov
inc
cli
imul
data16
imul
adc
mov
mov
sbb
insb
dec
aam
sub
adc
jns
mov
call
push
fs
in
push
pushw
pusha
movsl
jg
sbb
inc
test
add
xchg
test
sbb
rolb
add
ja
mov
sahf
or
rorb
mov
add
dec
iret
jp
push
daa
fisttpll
lret
nop
mov
pop
jp
out
adc
xchg
inc
divl
inc
imul
loop
lock
mov
inc
jb
mov
mov
jb
add
xor
mov
insb
cltd
mov
stos
push
cmp
mov
mov
inc
xchg
insb
inc
lcall
jno
out
ljmp
hlt
rcrb
in
pop
incl
push
icebp
outsb
rcrb
pop
push
xlat
in
jmp
lcall
dec
aad
xor
lds
aam
or
mov
add
outsl
mulb
inc
pushl
dec
fildll
out
repz
mov
stos
lds
test
push
outsb
mov
dec
push
jge
cmp
sti
cmp
or
jo
incl
pop
int3
jp
mov
pop
mov
sahf
xchg
xchg
sub
jl
xchg
ljmp
mov
push
out
pushf
aam
imul
shlb
ljmp
js
xchg
test
push
mov
jae
and
sti
sub
xchg
lret
cld
sub
cmp
stos
push
clc
pop
xchg
inc
imul
dec
mov
or
add
xor
popf
addr16
rorl
int3
psubq
xor
or
mov
xchg
leavew
adc
leave
imul
pushf
hlt
or
mov
adc
stos
cltd
or
daa
push
lods
aas
nop
fimuls
xchg
sub
jge
cmp
dec
stos
add
outsl
xor
sbb
icebp
xor
mov
in
cmpsb
mov
mov
arpl
sub
pop
adc
iret
cmp
or
adc
pushf
push
mov
add
xor
mov
mov
lock
in
lcall
andl
aad
cld
mov
scas
cmp
inc
ljmp
xchg
and
mov
out
in
sub
mov
jge
mov
ja
add
mov
fildl
jcxz
loop
mov
mov
and
lret
fistl
ja
fistpll
dec
add
mov
aad
mov
mov
mov
cmpsl
inc
aaa
aaa
dec
fisubs
aad
fsubr
cmp
lods
enter
popa
js
sbb
outsb
addl
std
lcall
add
pop
roll
jge
xchg
arpl
aad
xchg
dec
sbb
ja
ret
in
ds
sbb
xor
xor
mov
rorl
repnz
jge
pop
cwtl
nop
mov
or
jg
pusha
and
rcll
rcll
jg
cmp
in
icebp
sub
pop
stos
scas
lahf
fsubp
lock
add
add
mov
dec
cmp
jno
sbb
inc
loope
lcall
outsl
and
xlat
or
and
ret
adc
sbb
pop
decb
movsl
or
xor
pop
test
lock
js
pop
stos
mov
rorl
add
stc
ret
xor
enter
xor
dec
push
sbb
incl
and
dec
inc
or
mov
jns
inc
notb
cwtl
pushw
jns
les
jl
jbe
hlt
mov
loopne
xor
adc
shl
add
push
mov
pop
jmp
fnstcw
cs
sarb
add
mov
add
ss
mov
cmp
int3
sub
pop
negb
lret
bound
sbb
xchg
cmp
aas
and
push
sbb
cmpl
clc
into
movsl
fs
adc
aas
dec
add
push
xchg
loopne
cmc
out
sub
sbb
xchg
gs
aas
ss
sub
fists
xchg
imul
pop
std
mov
pop
rcrl
repz
cmp
subb
loope
in
lret
mov
leave
sbb
pop
dec
mov
push
adcl
ds
xchg
popf
arpl
push
addr16
fists
out
pop
pushf
stos
or
in
xchg
mov
addl
push
jbe
cwtl
enter
repnz
or
xchg
fcompl
add
jl
js
int3
in
hlt
int
pusha
mov
je
cmp
nop
jmp
stos
repz
push
mov
dec
xchg
sub
leave
ljmp
outsb
pop
xchg
xor
lods
mov
notl
jle
and
push
repnz
js
leave
adc
or
lret
bound
or
push
data16
dec
mov
jae
adc
push
cmpsb
sub
mov
shrb
mov
shlb
fcompl
arpl
add
scas
sub
add
mov
fidivl
cmp
arpl
or
sub
repnz
popf
cmp
in
inc
stos
fidivrl
fsubrs
mov
xchg
fs
aas
xchg
mov
movsb
dec
mov
inc
fcmovne
ret
cmc
test
mov
pcmpgtd
pop
fwait
arpl
pop
cmp
sub
lret
fcom
bound
xchg
lahf
fs
inc
sar
jns
mov
fsub
add
into
xorb
pusha
pop
jbe
adc
movsb
out
push
pop
add
jl
stos
icebp
pop
sti
sarb
daa
mov
mov
inc
cli
push
cmp
jp
loopne
mov
lods
mov
push
out
mov
mov
stc
push
out
scas
xchg
cmp
imul
xor
pop
jle
ret
cli
push
pop
dec
stos
sub
orb
dec
mov
repz
sub
mov
inc
test
insb
xchg
pop
sbb
nop
iret
scas
aaa
int
rcrb
lds
and
mov
sub
push
in
cwtl
cld
fisttps
jno
lahf
clc
xchg
and
std
mov
pop
aaa
xor
loope
stc
aaa
stos
or
cmp
mov
and
lcall
lock
xorb
clc
xorb
lahf
pop
pop
pop
fldt
pmaxub
jl
cmc
xchg
cld
sub
and
icebp
push
push
push
loop
inc
push
mov
aas
adc
inc
adc
push
adc
aad
stos
dec
movsb
test
sbb
or
mov
outsl
mov
shll
vmovdqu
push
add
adc
adc
xchg
mov
aad
divb
pop
dec
sub
xor
das
or
and
loop
mov
aas
jp
xchg
and
scas
push
xlat
jle
dec
jl
pop
iret
add
add
outsb
sub
pop
fsubl
adc
xor
mov
movsl
fs
loope
ret
mov
sti
addb
jecxz
mov
cmp
pop
pop
mov
xor
cmp
shrb
mull
sahf
mov
pop
or
rolb
or
xor
dec
inc
sbb
dec
cs
loopne
sub
adc
xchg
sub
pushf
mov
add
jecxz
clc
add
sub
xchg
in
idiv
add
arpl
sub
jno
in
sbb
pop
data16
dec
jle
ret
add
imul
mov
mov
lahf
sub
sub
sbb
pop
pop
gs
xchg
sti
jnp
ja
out
pop
inc
insl
lret
jg
cmp
int3
jne
pusha
push
dec
sub
push
sarb
mov
push
mov
dec
lcall
adc
mov
jmp
jle
movsl
sub
mov
sahf
mov
and
ret
mov
sbb
adc
mov
rolb
mov
xchg
xor
pop
stc
cmpl
test
cwtl
jb
cwtl
test
push
and
insb
dec
and
popa
mov
dec
and
clc
cmp
dec
fcompl
xchg
iret
or
cmp
mov
and
mov
negb
push
cmp
lods
inc
loop
out
or
shll
stc
stc
mov
mov
mov
test
jge
push
jbe
data16
dec
xchg
ja
mov
cmpsl
roll
insb
mov
mov
outsl
ret
sbb
add
gs
clc
loopne
ficomps
dec
scas
mov
ret
int
aaa
mov
xchg
or
mov
dec
movsl
push
fcmovu
stc
inc
mov
in
mov
mulb
cmovo
dec
push
mov
subb
out
mov
mov
sub
mov
cli
popa
sar
adc
mov
fistpl
jne
imul
cmpsl
sbb
std
push
stos
test
clc
push
insl
add
dec
hlt
dec
sbb
mov
mov
inc
xchg
nop
aas
xor
mov
cltd
stc
mov
xchg
adc
xor
push
mov
fidivrl
pushf
inc
push
pop
loop
icebp
cld
pop
ja
mov
in
nop
or
adc
or
mov
mov
pop
cs
test
jg
pop
in
push
out
pop
jmp
das
pop
mov
fcmove
ljmp
adcl
sub
ret
mov
pop
xchg
int
mov
stc
inc
into
stos
sbb
adc
sub
repnz
ret
jg
mov
sub
mov
mov
xchg
push
sahf
mov
inc
movsl
cmpsl
adc
lret
hlt
jg
pop
jp
dec
dec
xor
arpl
pop
or
subl
sahf
or
stos
or
gs
jno
popa
xlat
sub
call
pop
push
sub
stos
out
ret
mov
or
loopne
xor
add
cmp
jp
mov
adc
in
sbb
bound
popa
jl
repz
pop
loopne
nop
push
pop
xchg
sti
popa
out
sub
jns
cmpsb
xchg
xchg
in
rcrl
pop
cmp
movsl
dec
pop
mov
jg
hlt
rolb
dec
je
xor
cmp
incl
out
popf
mov
in
lcall
outsb
inc
fsubs
add
adcl
mov
imul
andb
pop
push
cs
push
cmp
cmpsb
pop
lcall
leave
sub
popa
xor
add
pop
mov
mov
loop
inc
pop
adc
imull
test
dec
mov
xchg
icebp
sub
mov
pushf
fsubl
shrb
inc
aaa
test
push
jo
cmp
repz
jmp
outsb
outsb
leave
adc
pop
stc
inc
and
mov
push
or
scas
cmpb
pop
cmp
lret
nop
mov
dec
je
outsb
in
cmp
mov
pop
sub
cmpsl
dec
dec
bnd
movsb
mov
push
loop
xchg
pop
call
fcomps
jno
jbe
mov
mov
mov
sbb
lock
xor
jmp
pop
jb
ret
sub
sub
mov
mov
movsb
shrb
fistpll
imul
jae
cli
and
aad
push
in
stc
mov
and
lea
dec
es
pop
xchg
add
out
aaa
daa
add
ficoml
add
mov
int
test
lock
xchg
mov
mov
aam
jno
inc
mov
call
sbbb
xchg
rcrl
pusha
dec
push
faddl
xchg
loope
cmp
xchg
inc
mov
inc
movsl
sub
add
cltd
pop
lea
mov
rolb
imul
sub
cmp
scas
test
dec
add
cmp
cmc
pop
shrl
fsubrl
adc
scas
push
fisttpl
xchg
iret
pushw
js
or
lock
or
test
add
cmpsb
nop
fldl
cmpsl
cld
jmp
xchg
or
inc
push
or
js
in
sub
push
fwait
xchg
clc
roll
xchg
rol
push
les
mov
jmp
aam
ljmp
cld
xor
ret
mov
dec
cmpsb
mov
add
dec
lds
out
mov
cltd
outsl
pop
push
in
test
xlat
cmc
es
mov
adc
or
fmull
xchg
fimull
or
rorl
pop
leave
das
in
and
sub
leave
sbb
scas
pusha
cmp
and
es
ret
lret
shrl
mov
bound
push
in
imull
loope
aad
pop
and
mov
outsb
xor
xchg
inc
lret
inc
ror
jg
sub
sti
jnp
adc
paddd
fdivr
sbb
mov
outsl
ds
jle
ds
mov
repz
or
jecxz
push
shlb
mov
cmpsl
xchg
ja
cmp
pop
rcr
imul
mov
lret
repz
xor
sbb
popf
cmp
imul
mov
and
lods
push
cltd
and
loope
loop
pop
jo
data16
rcrl
jle,pn
and
mov
stos
add
and
cmp
jg
ss
cmp
cwtl
loopne
andl
mov
jmp
rolb
adc
in
mov
inc
mov
sahf
xorl
fstpt
add
mov
push
sbb
jb
mov
sbb
fists
call
mov
mov
add
sbb
sar
ret
es
xor
das
cmc
sub
and
push
std
imul
mov
test
mov
sub
ds
sub
cmp
xor
xlat
fucom
enter
mov
sub
orb
mov
jb
fwait
sub
adc
in
or
push
jl
rolb
rcrl
out
aam
popa
dec
mov
inc
jne
imul
pop
push
stc
inc
push
sbbl
push
xchg
iret
push
push
add
stc
pop
sbb
es
test
cli
xchg
shl
push
stos
sub
dec
mov
mov
movsb
mov
rolb
mov
jnp
sti
adc
outsb
lods
out
enter
mov
lock
in
mov
scas
push
rcrl
adc
into
es
sub
sub
dec
mov
inc
xchg
xchg
cmp
fsubp
push
out
cmc
xchg
hlt
les
cmpsl
or
add
jle
mov
sub
enter
cmp
std
mov
jae
push
lcall
mov
pop
ret
hlt
sbb
popf
hlt
mov
gs
sbb
adc
push
into
pop
icebp
sbb
dec
movsl
sbb
or
xor
jae
jp
cmp
popf
cmpb
int
rolb
ljmp
push
jno
pop
adc
dec
sbb
outsb
xchg
stos
mov
push
mov
fwait
in
pop
and
xchg
pop
mov
pop
pop
adc
cmp
movsb
push
imul
cwtl
push
pop
ja
jmp
cmp
sub
add
outsb
sbb
mov
mov
sub
or
inc
pushf
or
jnp
adc
pushf
push
lds
inc
daa
dec
out
jp
jnp
js
int3
xchg
sbb
mov
mov
cmpl
lock
cmp
xchg
xor
pop
sti
addb
orl
jl
jno
fsts
xor
xor
cli
adc
rcl
lret
fisubrs
cmp
and
ret
ja
jnp
sti
shll
add
push
or
xor
add
out
outsb
add
roll
mov
jbe
mov
lahf
push
sbb
lahf
loope
mov
sub
jl
scas
jl
pop
test
flds
cmp
push
dec
imul
popa
jmp
ret
sahf
outsl
popf
in
dec
icebp
push
subb
addr16
test
push
inc
call
sub
xchg
rcll
mov
push
stc
ret
add
xchg
mov
mov
cli
pop
in
cltd
dec
jb
add
ljmp
test
cmp
jb
inc
mov
push
mov
sub
lret
adc
pop
insl
xor
xchg
mov
das
cs
nop
arpl
adc
sbb
add
imul
add
add
ret
mov
cmp
pop
popa
imul
or
mov
sbb
mov
cmp
pusha
es
mov
cmpl
call
rorb
sub
sbb
jo
cmc
cmp
ret
cmpsl
jno
stos
cli
mov
int
pop
aaa
aam
sub
pop
or
sbb
dec
ret
adc
pop
stos
movsb
adc
lea
cld
das
mov
int3
xchg
mov
mov
jmp
pop
jne
inc
notb
iret
fwait
mov
and
andps
imul
adc
jns
dec
mov
movsl
cmp
arpl
aad
lock
xchg
jbe
cld
jg
cmp
out
and
shll
jge
xchg
lret
jge
add
mov
aam
loope
add
mov
movsb
frstor
inc
xchg
or
fucom
pop
cld
test
xchg
insb
push
out
and
and
adc
xchg
xchg
test
cmpsb
push
stos
mov
lock
inc
lcall
into
sbb
mull
pop
mov
xchg
enter
lret
in
nop
jmp
mov
aas
fldt
inc
xor
lret
xor
pop
pop
cmp
or
mov
mov
sbb
dec
mov
pop
test
les
aas
repz
xchg
xchg
or
in
imul
std
mov
rcl
push
xor
dec
cmpsb
cs
cmpsb
fisubs
movl
addr16
fistl
cs
insb
jo
mov
mov
inc
rorl
cmpsl
test
xor
and
inc
out
imull
sub
call
aad
jne
dec
push
loope
mov
leave
out
lods
add
loope
cltd
pop
hlt
pop
mov
imul
daa
adc
mov
adc
xchg
push
repz
or
and
loope
out
pusha
jns
inc
sbb
aad
ror
sti
les
xchg
rcrl
les
mov
push
pop
inc
pop
lret
pop
testl
pushf
push
cmp
or
adc
lds
loop
cmc
repz
aad
hlt
in
cmp
cld
ficomps
xor
js
out
or
mov
adc
ds
pop
loope
lock
pop
gs
dec
inc
cmp
daa
aaa
mov
mov
test
cwtl
mov
lods
in
mov
mov
cmp
add
sbb
pop
adc
mov
inc
push
push
stc
mov
aas
add
jecxz
mov
add
pop
in
sbbb
inc
inc
jle
aam
leave
jmp
and
dec
mov
cmp
dec
sbb
fcom
cwtl
cmpsl
stc
nop
push
frstor
xlat
imul
add
jne
mov
jne
into
jp
test
rcrl
int
and
xchg
fsubrs
pop
dec
sub
leave
xor
and
cmpsl
lret
int3
mov
repnz
jb
ret
sub
ljmp
dec
push
or
and
xchg
dec
and
pop
shl
dec
hlt
inc
pop
lahf
mov
imul
jp
test
inc
movsb
mov
insl
sub
jbe
xchg
popf
dec
sub
pop
pop
frstor
lret
fwait
scas
call
xchg
int
push
fisttpll
jbe
fmuls
movsl
push
mov
lret
mov
push
jmp
xchg
hlt
push
jp
sub
rcrl
in
repnz
cmpsb
aas
pop
mov
or
loop
pop
shl
insl
xchg
iret
mov
dec
cltd
mov
or
jae
stos
int3
in
call
lcall
mov
pop
adc
fucomi
pop
and
cli
mov
icebp
jecxz
add
push
imul
and
out
lret
stc
mov
ljmp
std
xchg
mov
jg
xorl
adc
aad
movsl
cmp
cli
pop
dec
cmp
dec
and
jmp
ja
xchg
mov
mov
sarl
ja,pt
sbb
mov
idivb
pop
pop
inc
pop
add
cmp
pop
daa
sub
cmpsl
pop
push
mov
adc
mov
dec
adc
inc
pop
in
enter
jb
gs
repz
cs
pop
xchg
movsl
push
pop
or
xchg
inc
stos
test
pop
and
enter
jp
sub
test
aam
out
pusha
or
mov
adc
sbb
or
fildll
push
push
mov
xor
or
rcr
repnz
inc
or
xchg
test
pop
ljmp
push
or
fsubr
pop
andl
ljmp
dec
jmp
mov
ror
dec
xchg
out
cmp
mov
std
jg
sbb
adc
sub
dec
into
mov
pop
ror
jge
hlt
rcrb
or
repz
push
push
frstor
lock
outsb
jecxz
cmc
mov
addl
out
xchg
or
and
lcall
cmp
or
lret
and
int
jns
dec
mov
xchg
clc
lcall
outsb
insb
lock
xor
pop
out
sbb
and
rol
pushf
push
jno
and
or
iret
xor
pushf
lcall
jae
cmp
sub
fiaddl
or
dec
movsb
cmp
pop
mov
jmp
rcrb
in
scas
fwait
ss
cmpsb
shrb
popf
cld
xchg
cmp
or
mov
dec
jo
icebp
add
lcall
cmpsl
mov
dec
push
shlb
cmp
lahf
in
scas
ror
push
mov
jp
sbb
mov
scas
fsubrs
cltd
dec
mov
adc
mov
push
cmp
xchg
lods
nop
mov
xchg
jno
ss
inc
mov
gs
xchg
leave
add
jle
or
mov
sbb
sub
cld
out
add
fwait
out
xchg
inc
inc
pushf
fnstsw
inc
and
enter
insl
mov
dec
gs
adc
mov
cmp
jnp
mull
into
xchg
dec
jge
aaa
andl
pop
jb
mov
mov
adc
sub
inc
mov
inc
and
adc
jmp
mov
xlat
lock
inc
jo
repz
mov
call
stos
rolb
inc
xlat
cmp
stos
push
mov
push
lods
mov
test
outsl
jo
in
adc
pop
mov
push
and
enter
roll
xor
cmpsl
fs
test
scas
adc
pop
lock
lds
push
imul
jmp
iret
lret
sarb
lods
inc
sbb
test
lahf
fsubs
scas
mov
cmovae
repz
js
clc
idivl
adc
mov
jecxz
or
les
pop
xchg
xor
dec
loope
jle
mov
cmp
bound
inc
mov
aaa
mov
dec
sub
nop
aam
mov
mov
or
sub
xchg
lret
and
xchg
mov
ja
push
leave
adc
dec
push
inc
adc
cs
out
adc
xchg
cmpps
pushf
push
jno
sti
adc
adc
mull
adc
xchg
fnstcw
xor
cs
add
inc
into
sub
push
mov
lock
add
push
js
loope
jb
int3
aas
leave
mov
sbb
xchg
shll
scas
push
and
jb
cmp
jae
and
jp
mov
pop
popa
icebp
mov
mov
mov
movsl
inc
std
sbb
pop
adc
push
cld
cmpb
xchg
sbb
ljmp
xchg
dec
push
test
mov
ds
cmp
sbb
jmp
push
mov
ret
call
xor
out
addr16
out
inc
inc
push
in
sub
in
in
cli
inc
outsb
shll
sbb
bound
cmp
jge
rcrl
xor
fwait
mov
fldl
fmull
out
jmp
lea
lcall
out
jp
mov
pushf
add
shrb
mov
pusha
xchg
int3
pusha
inc
push
imul
jle
push
fstps
mov
mov
cmp
inc
pop
mov
and
push
inc
insl
test
xchg
fadds
or
push
das
adc
loopne
push
cmp
test
std
push
call
sub
cmp
leave
out
iret
cmc
mov
popa
fdivs
shrl
mov
sbb
adc
cltd
test
sbb
cmp
lock
pop
xchg
mov
xchg
pop
sbb
movsb
dec
fucomip
sbb
inc
jbe
mov
loope
insl
loope
adcl
cs
adc
addr16
mov
cmp
and
pop
mov
xlat
adc
xor
and
pushf
jl
ret
push
rorb
jl
xchg
and
push
xchg
orl
loopne
int
leave
mov
loopne
mov
lods
arpl
mov
pop
arpl
mov
push
movsl
inc
xchg
and
or
push
inc
fisttps
and
rol
movsb
js
adc
or
xchg
movsb
test
xor
jmp
test
cmp
jne
adc
shl
add
sti
imul
popa
daa
loopne
mov
mov
call
dec
sub
jecxz
les
aad
push
cmp
xor
loope
mov
push
mov
jmp
das
pop
icebp
mov
cli
mov
xor
out
into
repz
cmp
push
push
popa
jecxz
dec
rcll
mov
enter
fwait
cmp
icebp
mov
mov
pushf
sbb
pusha
leave
mov
cld
rcrl
nop
inc
aaa
jns
mov
fmull
leave
jecxz
and
lahf
out
sbb
pop
mov
in
scas
mov
outsb
push
mov
outsl
jo
push
pusha
xor
cmp
insl
sbb
xchg
sub
inc
int
and
fistps
lret
orb
pop
arpl
adc
mov
jge
aam
out
leave
in
repz
int3
cmp
loopne
jb
inc
ss
cmp
cmp
js
xchg
xor
cmp
push
add
test
gs
out
je
mov
jmp
jge
in
push
outsl
loopne
adc
push
mov
push
xchg
dec
mov
adc
xchg
les
sbbb
and
ds
sbb
or
pop
pop
dec
bound
cmpsb
mov
std
cmp
js
ds
mov
out
cli
scas
jns
xchg
enter
dec
ja
or
mov
push
push
cwtl
xchg
lock
std
mov
icebp
push
mov
pop
sbb
in
fcoml
jns
mov
das
fstpt
jle
fcoms
shlb
push
int
test
ja
jb
ror
daa
xorl
cmp
iret
test
sub
add
or
push
out
adc
pop
push
mov
dec
add
xchg
cld
mov
mov
mov
gs
inc
fabs
adc
sub
mov
inc
enter
push
imul
xchg
std
pop
in
fnstsw
jp
mov
jb
cld
add
in
js
nopl
ss
dec
push
pop
pop
mov
cltd
les
dec
inc
fisubrl
idivb
adc
aam
out
jle
cwtl
sbb
repz
out
sbb
jbe
out
jnp
test
mov
ror
pusha
push
movsl
jmp
bound
fidivl
stos
insl
pop
jg
add
xor
xor
lahf
adc
jge
lahf
lret
sarl
leave
adc
pop
or
and
out
xchg
or
bound
mov
inc
mov
pop
dec
xor
sub
int3
rolb
lret
xor
out
add
mov
sub
inc
pop
xor
or
pop
repnz
shll
pop
adc
mov
xchg
data16
out
mov
shlb
mov
xlat
and
lods
mov
das
cmpb
adc
outsl
mov
cltd
mov
mov
shrl
add
inc
and
es
mov
imull
fwait
jmp
mov
nop
call
lds
jl
dec
jl
cmpsl
cmp
icebp
jmp
inc
in
sbb
push
pop
adc
mov
lods
cs
xor
dec
inc
pop
jo
cmc
stos
pop
imul
arpl
ret
fcmove
bound
lds
roll
sub
pop
lahf
dec
sub
scas
or
xchg
repz
jmp
mov
subb
cli
fnstenv
sbb
js
sahf
push
aas
sti
int
xchg
jns
cld
cmpl
push
xor
or
not
sub
fisttps
push
inc
in
dec
pop
and
xor
cli
jge
or
cmp
jne
dec
insl
mov
shlb
adc
xchg
cs
aam
inc
inc
ret
cmpsb
fildl
repnz
icebp
and
sub
sub
lds
lock
inc
mov
loopne
inc
jl
pushf
sbb
jecxz
fdiv
push
jae
int3
jecxz
xchg
push
jp
pop
push
mov
mov
sbb
out
mov
mov
xlat
cmp
jnp
adcb
addb
mov
notb
and
xchg
aaa
jmp
repnz
movsb
leave
push
mov
andb
repz
jbe
sahf
mov
dec
cmpb
cli
push
inc
adc
lock
jne
nop
inc
jmp
push
xchg
and
mov
lcall
push
sub
loope
data16
imul
add
pop
ds
add
stos
gs
mov
fs
sbb
fimull
stos
mov
inc
imul
pop
cmp
ret
je
test
jecxz
cmpsb
lahf
push
lods
into
loopne
dec
push
pmulhuw
cli
cmp
sbbb
inc
pop
lds
inc
outsl
fwait
xor
lds
push
or
and
inc
lcall
nop
or
repnz
aam
dec
jg
inc
ret
push
fiadds
push
mov
int
rorb
jmp
mov
jnp
mov
mov
cmp
push
mov
fsubrs
mov
pop
push
xchg
inc
cs
or
mov
sahf
out
into
cltd
notl
insl
aaa
cmp
mov
nop
sbb
inc
dec
lods
pusha
shlb
idivb
icebp
cmp
adc
dec
xor
dec
cltd
in
push
add
ljmp
mov
fsubrs
pop
cld
jnp
loopne
aad
nop
sbb
jg
adc
ret
rorl
leave
cmp
jnp
add
push
test
aas
jle
mov
cmp
data16
and
clc
push
loope
inc
shrb
fadds
add
aas
push
sub
pop
fimuls
sub
inc
pushf
rorl
cmpsl
cmp
stc
outsl
jg
cld
adc
mov
hlt
pop
mov
mov
lcall
sub
psubsw
sub
xchg
test
push
fdivrp
ds
icebp
jge
xchg
cli
jb
out
or
dec
or
adc
dec
push
movsl
inc
jecxz
push
add
fisttps
xor
fiadds
repz
inc
lea
aad
add
add
loope
adc
sub
pop
jo
cli
xchg
int3
xchg
mov
adc
pusha
jg
testl
out
or
pushf
dec
push
das
out
sub
lods
enter
xchg
xchg
outsl
jb
add
mov
sbb
jae
movl
insb
add
lret
cmp
mov
mov
les
push
cmpsb
or
adc
test
push
dec
add
jg
lret
inc
into
jge
jl
dec
jo
movsb
xor
pop
addr16
pusha
mov
mov
xor
int
mov
add
dec
mov
adc
fcmovbe
lret
rcrb
add
xchg
mov
std
xchg
fdivl
cmp
sbb
mov
adc
lret
push
push
rolb
adc
imul
out
fwait
or
mov
lahf
xchg
fs
ret
fiadds
jge
inc
ret
xchg
xor
fprem1
int
add
call
pop
aam
dec
sbb
ficompl
fs
addr16
ss
ficompl
and
int3
lret
push
or
arpl
popf
mov
cmpsb
mov
cmp
mov
mov
das
cli
lcall
jbe
fidivrl
test
xchg
add
pop
mov
clc
mov
lret
dec
xchg
fcoms
xor
pop
rorl
xchg
cltd
lret
jae
jno
sub
push
mov
dec
jmp
pop
shrl
cmp
test
jle
push
imul
dec
ret
fisttpl
pop
lds
push
iret
push
inc
pop
js
shrb
out
pop
scas
xchg
xchg
mov
loope
sbb
lods
outsb
bound
sub
addb
popl
stos
jnp
imul
mov
sbb
jge
add
ss
popf
adc
push
cmp
mov
mov
repnz
leave
cmpsb
inc
mov
test
mov
jo
xchg
mov
lret
inc
mov
pop
xlat
inc
sub
push
jl
imul
inc
cmp
or
cmc
mov
movsb
cld
dec
pop
negb
adc
mov
or
ds
add
movsb
sub
ret
aaa
mov
mov
inc
xchg
fcoms
data16
sbb
xchg
push
in
cmpsl
insl
sub
xchg
mov
lcall
xor
std
mov
inc
dec
sbb
inc
fisubl
out
addr16
out
pop
jne
test
mov
call
mov
mov
push
mov
push
mov
jnp
and
lods
push
std
mov
call
inc
rcll
std
cli
pop
or
arpl
or
dec
nop
shll
xchg
adcb
sar
cmp
jg
sbb
clc
mov
into
loop
andl
sbb
hlt
push
adc
mov
xchg
fcoms
rolb
jnp
jl
mov
jno
ds
push
dec
mov
mov
test
mov
cltd
mov
xor
mov
sbb
in
sbb
mov
loopne
jnp
xchg
mov
push
pop
fildll
ficompl
pop
test
cmp
ret
fcomi
mov
xor
movsb
dec
adc
xor
adc
into
mov
mov
sub
push
stos
push
cwtl
xor
jl
push
or
lret
fisubrs
jmp
cmp
leave
insl
lret
aad
adc
flds
sbb
out
loope
mov
cmp
in
cmp
mov
dec
cmp
inc
jnp
xor
jb
addr16
ljmp
xlat
and
ret
cmp
orb
push
test
xor
gs
insb
sbb
adc
lods
cwtl
jns
xchg
add
roll
gs
fidivl
add
sahf
fdivrs
xlat
mov
lods
aam
pusha
sbb
jp
push
push
push
inc
dec
xor
or
mov
xchg
mov
pop
inc
es
xchg
mov
mov
icebp
add
stos
or
outsl
into
pop
int3
in
addr16
mov
mov
xor
jl
push
cmp
outsl
push
imul
pop
test
and
or
xchg
push
and
mov
pop
mov
jbe
sarb
sti
sar
outsb
and
fistpl
xchg
push
push
lods
in
sbb
scas
or
stos
push
rolb
jnp
pop
or
movsl
dec
js
in
sub
out
xchg
out
xchg
in
xor
sub
cwtl
dec
fimull
imul
dec
popf
clc
inc
ret
iret
and
adcb
jl
cltd
aas
pop
push
cmp
in
dec
dec
push
xor
jo
xchg
sbb
and
scas
cmp
ficomps
ret
mov
cmpb
push
idivl
enter
jb
pop
inc
mov
stos
scas
rcl
jne
ljmp
pop
pop
lods
mov
test
sbb
mov
neg
sahf
arpl
in
in
test
ja
mov
js
push
xchg
test
jae
sub
stos
mov
sbb
sbb
jns
loope
imul
adc
pop
adc
movsb
ss
mov
pop
outsb
shll
pop
jo
test
xor
add
out
pop
mov
movups
inc
fsubrp
xchg
into
sarb
pop
dec
int3
fsub
mov
jns
push
sbb
inc
stc
or
ficoms
push
loope
push
xchg
mov
push
repz
lret
xchg
fisubl
pushf
shrl
mov
ds
aaa
aas
pop
movsb
jle
dec
sbb
fmul
cld
cs
xor
lret
pop
jno
sbb
xor
inc
mov
mov
in
test
cli
push
push
or
andb
lea
sub
inc
ss
dec
jne
and
sbb
out
stc
iret
sub
adc
mov
ret
mov
insl
sub
cwtl
push
inc
pop
loopne
call
addr16
mov
xor
and
mov
jmp
jecxz
pop
sub
les
lahf
mov
and
pop
push
lret
dec
and
iret
outsb
outsb
xlat
mov
add
push
xor
mov
gs
add
adc
cmpsb
mov
jae
inc
xchg
jb
jge
mov
push
cmc
mov
inc
pop
pop
mov
push
mov
dec
stos
stos
xor
xor
test
mov
mov
and
mov
cld
js
loop
imul
inc
pop
sub
jge
sub
add
xor
cli
xchg
mov
push
or
loop
jno
cmp
fwait
sub
nop
sub
add
and
enter
inc
xor
pop
mov
lret
dec
js
push
mov
xor
push
push
cmp
mov
sub
ss
dec
xchg
shll
and
jp
pushf
push
or
movsb
xchg
in
mov
in
jle
scas
incb
mov
lcall
mov
mov
into
push
les
sbb
hlt
xor
cmp
xchg
sarb
xchg
dec
jmp
pop
nop
add
push
pop
in
mov
dec
das
pop
mov
push
sbb
jo
jecxz
gs
cmpsb
arpl
sarl
jmp
pop
and
fldenv
pop
mov
mov
dec
dec
xchg
xchg
cwtl
adc
dec
sbb
int
mov
push
or
pop
jl
test
hlt
iret
sbb
out
testb
fidivs
xchg
xchg
push
add
and
sub
ja
mov
jmp
aaa
shrb
mov
dec
fisttpl
add
sbb
mov
repz
fidivs
sub
pop
andb
rol
sbb
test
outsl
pop
jbe
out
xchg
jmp
les
dec
xor
jg
pop
jg
mov
negl
scas
cmp
cmp
cwtl
jmp
mov
cmp
scas
aas
dec
les
mov
imul
and
mulb
xchg
mov
add
inc
decb
pop
xor
jno
scas
adc
mov
xor
sub
push
xor
or
fsubr
imulb
and
mov
fsubrp
or
xchg
ret
int3
dec
in
jle
stos
mov
iret
inc
mov
bound
push
cmp
fimuls
repz
ret
leave
sbb
sub
adc
scas
lahf
test
fwait
jns
xorl
cmc
mov
sti
cmp
xchg
fisttps
out
in
int3
hlt
and
mov
shlb
ja
cmpb
sbb
sahf
into
aam
dec
mov
xchg
cwtl
std
pusha
push
ds
sub
es
sbb
dec
mov
add
push
cmp
fildl
aam
pop
mov
test
roll
out
enter
inc
cli
shlb
dec
and
aam
outsl
stos
adc
iret
mov
sahf
and
ret
sub
pop
fld
pusha
lret
jbe
mov
xor
add
lock
jbe
addr16
in
jnp
sbb
mov
mov
mov
repnz
inc
dec
int3
xor
and
das
push
ljmp
jp
ficompl
and
adc
sbb
popf
adc
add
dec
fucom
jge
je
mov
inc
clc
jp
loop
cmpl
dec
xor
pop
pusha
pushf
cs
mov
inc
cmp
jns
lods
add
repz
push
xchg
test
adcb
jge
inc
xchg
push
iret
xor
fmull
ja
js
cmp
jae
push
pop
mov
bound
sbb
push
jle
add
mov
shlb
insl
outsl
ds
dec
xchg
cltd
push
pop
insb
push
xchg
test
rcrl
mov
or
fld1
xchg
fnstenv
sub
push
mov
fildl
ljmp
mov
pop
push
pop
mov
push
xchg
push
rclb
mov
fcomip
scas
ret
fucomip
aam
xchg
adc
lods
stos
in
push
in
mov
mov
jo
mov
orl
bound
jne
xor
or
scas
mov
icebp
idivl
fsubp
jmp
out
fadd
push
iret
das
jae
fsubl
xchg
or
push
clc
cmp
jg
inc
fwait
adc
jae
loope
mov
jle
scas
inc
imul
sbb
fisubl
in
scas
es
cmp
pushf
mov
adc
std
adc
addl
add
mov
cltd
mov
sub
sub
sub
stos
les
jne
or
and
push
pop
mov
jns
add
pop
sub
outsb
test
push
filds
out
fstpt
ljmp
movsl
clc
scas
jno
imul
add
adc
repz
cmp
pushf
or
popa
lods
test
sbb
mov
dec
mov
dec
dec
std
xor
or
lock
jns
test
adc
mov
stos
xchg
xlat
push
dec
bound
xor
int
mov
icebp
inc
loop
lret
imul
stos
insl
mov
dec
jle
push
ja
push
loope
sub
inc
in
out
popa
out
mov
mulb
mov
pop
pop
dec
aam
cmp
jno
add
cli
and
js
dec
dec
jb
mov
jg
pop
dec
mov
sarl
icebp
mov
inc
push
les
inc
mov
incl
mov
xor
imul
inc
xchg
xchg
icebp
out
shll
aam
sub
scas
mov
xchg
hlt
adc
xchg
out
cbtw
bound
test
nop
adc
sbb
dec
push
mov
jecxz
mov
mov
je
sarl
in
lcall
sub
frstor
jge
fbld
enter
stos
daa
enter
ljmp
scas
adc
push
cltd
icebp
mov
xor
xchg
arpl
clc
jl
adc
xlat
icebp
in
and
int
pusha
fdivrl
mov
cwtl
movsl
iret
mov
pop
pop
add
pop
leave
xchg
inc
daa
mov
js
mov
push
xchg
pop
push
jbe
bound
call
mov
ss
out
dec
mov
inc
fnsave
pop
sub
in
inc
imul
mov
iret
jl
inc
insb
mov
shll
ja
push
jns
add
repnz
xchg
or
pop
rcrb
adc
lods
add
xor
cmp
mov
cmp
fwait
in
in
pop
or
sub
push
cmp
or
sub
sbb
and
lock
inc
cmp
inc
mov
ljmp
ljmp
test
std
enter
stos
shlb
xor
mov
test
mov
xor
ljmp
mov
mov
lds
sbb
inc
incl
jle
xor
clc
pop
sti
pop
xor
stos
fistpll
mov
dec
cltd
popa
pushf
fstps
mov
pop
imul
pop
enter
push
les
push
lods
mov
push
in
adc
ficoms
in
mov
dec
jle
mov
jle
add
push
clc
mov
ss
jp
cltd
or
sti
adc
sbb
add
ret
loopne
cmp
faddl
and
out
cmp
push
shll
adc
repz
lods
xchg
rcl
mov
iret
cmp
in
cmpsb
ret
imul
pusha
cmpsl
cmp
add
lods
lret
jne
ljmp
popa
or
movsb
lcall
xor
fwait
adc
aaa
mov
icebp
cmp
mov
mov
mov
stc
push
or
iret
inc
add
inc
popf
sahf
dec
adc
pushf
sbb
imul
rcr
adc
fs
sub
lods
add
xchg
dec
mov
push
cmp
lds
inc
mov
daa
mov
xlat
push
or
int3
imul
aas
mov
lcall
pop
insb
dec
sub
and
jae
mov
jg
mulb
jl
les
ss
pop
in
test
or
push
cmpsl
and
inc
push
mov
mov
lahf
ret
add
lea
sarb
ret
mov
dec
add
adc
adc
dec
jne
adc
ror
lock
es
into
inc
or
repnz
mov
test
lds
ljmp
pusha
fists
xor
cmp
mov
jb
or
repnz
xchg
cmp
xchg
cs
stos
mov
dec
test
cwtl
push
ss
lds
sub
xor
decl
xchg
mov
ja
mov
or
or
inc
hlt
dec
es
iret
in
mov
outsb
jae
icebp
mov
pop
out
push
or
in
into
dec
adc
in
stos
jae
lock
cltd
push
add
js
in
inc
test
lock
xor
xchg
mov
fucomip
jae
jns
outsb
test
fabs
mov
dec
cmpsb
aam
sti
sti
push
repz
ds
jbe
cmpsb
xchg
test
pop
xor
inc
rorl
sub
ja
jnp
mov
ds
mov
mov
and
sahf
jo
sbb
xchg
out
or
sub
insl
test
sub
data16
mov
insb
imul
enter
push
adcb
in
rcrb
outsb
int
jle
aas
arpl
xlat
arpl
jle
test
filds
icebp
aas
out
jl
das
cmp
push
mov
inc
stos
andl
das
mov
dec
push
cmp
inc
mov
outsl
xor
in
insb
lret
out
jno
stos
int3
or
adc
push
adcl
loope
pop
inc
xchg
xchg
jg
mov
jnp
push
insb
lahf
xor
out
pop
inc
int3
pop
repnz
rcr
iret
lret
lcall
dec
mov
push
xchg
pop
mov
pushf
mov
out
out
mov
jns
mov
jl
xchg
in
cs
lret
loopne
in
push
adc
out
mov
or
xchg
insl
push
lret
cmp
mov
popa
les
adc
lcall
or
xlat
xchg
xchg
lds
daa
jb
ffree
sbb
mov
lahf
push
aas
inc
sub
mov
enter
roll
adc
pop
pushf
fbld
mov
push
push
cmpsb
lods
mov
insb
cmpl
enter
inc
ret
pop
test
inc
jle
adcl
roll
xor
push
pop
add
sub
mov
seto
cmpsb
call
xchg
fwait
sub
lods
mov
push
aaa
lea
iret
mov
mov
add
adc
push
addb
or
mov
outsb
cmp
addl
in
cmp
push
in
push
mov
lea
xor
push
loopne
inc
mov
cmp
push
add
ficoms
sbb
jecxz
test
lods
push
jno
out
jb
aam
out
mov
cmp
in
test
sub
outsb
aas
cwtl
and
outsl
dec
jg
loope
xor
cmpsb
cmpsb
xchg
es
jns
stos
rep
arpl
inc
les
int
cli
jecxz
fsubp
mov
lods
in
clc
mov
jecxz
push
push
fidivs
or
ret
add
push
ljmp
pop
xchg
cwtl
cltd
push
test
clc
inc
ljmp
popf
cs
mov
lock
mov
pop
pop
fcomip
jp
cmp
xchg
pop
mov
testl
jbe
sbb
push
aas
inc
cmp
in
add
imul
call
xchg
aaa
pop
adc
mov
orl
dec
shlb
jg
andb
call
mov
arpl
scas
xor
rol
imul
loop
fisttpll
out
arpl
sub
dec
cmp
in
push
mov
aad
ds
dec
xor
inc
pop
hlt
inc
int3
push
pop
imul
es
aas
lods
sbb
scas
in
push
std
jnp
dec
mov
push
fsubl
dec
fdivs
fwait
out
push
aam
or
push
sahf
or
mov
pop
addr16
cmp
pop
test
and
sbbl
movsl
lods
sbb
and
ret
fwait
sti
mov
cmpsb
or
inc
pop
out
pop
fbld
sub
inc
and
es
repnz
idivl
insl
dec
and
imul
in
cli
lahf
call
mov
test
inc
pop
push
stos
pop
jne
fildl
ret
hlt
add
fisubs
inc
push
jmp
ja
xchg
aad
call
rcrb
lods
fdivr
subl
icebp
loop
bound
ja
loop
addr16
mov
adc
mov
lret
lods
das
cld
out
fnstsw
sub
pop
push
test
inc
jl
outsl
aad
fs
adc
lods
or
and
sbb
into
adc
lds
in
sbb
add
jbe
mov
mov
les
aaa
or
rcrb
mov
cwtl
testl
sti
icebp
xor
jg
insb
lea
std
inc
mov
add
sbb
leave
popa
push
add
cmp
push
popa
pop
dec
push
or
shrb
daa
dec
lods
imulb
fwait
in
ret
mov
movsl
xchg
in
repnz
mov
xor
and
aas
les
lods
test
xchg
cmp
jns
shr
je
xchg
mov
inc
adc
adcl
fistpll
push
cmp
fs
fsubrp
mov
out
pusha
out
xor
cmpl
aas
leave
mov
jns
pop
mov
repnz
pushf
and
mov
xor
or
xchg
divl
jp
daa
xchg
fwait
jae
lcall
outsb
lcall
std
repnz
sub
and
ret
adcw
shll
out
or
xchg
and
pop
pusha
aad
imul
inc
push
adc
inc
cs
adc
lcall
or
adc
pop
pop
pop
aas
hlt
mov
push
js
push
loope
mov
andl
jecxz
fdivl
mov
ss
mov
pusha
testl
shll
sbb
test
mov
push
cmp
push
xlat
xor
outsb
imul
pop
jmp
imul
pop
or
xchg
lahf
icebp
ljmp
push
jecxz
stc
lock
jnp
xchg
xlat
clc
pop
lret
push
jb
push
push
or
in
xchg
shll
pop
add
negl
cltd
push
test
pop
jnp
aas
lahf
test
sub
cmp
mov
pop
xchg
mov
icebp
std
dec
push
pop
add
sbbb
sbb
and
sbb
and
cmp
enter
lock
popf
stc
adc
push
adc
sub
inc
mov
js
lea
mov
dec
inc
adc
loop
mov
int3
pusha
loopne
mov
dec
aas
xchg
push
rclb
mov
cs
out
pop
xchg
pushf
insl
jbe
add
leave
rolb
inc
iret
push
xlat
mov
cmp
addb
das
loope
push
jge
mov
cld
mov
jns
int3
pop
dec
rcrb
jg
fiaddl
bound
cmp
fnstenv
jns
pop
xorl
pop
out
scas
clc
sahf
js
xlat
insl
fisttps
negl
or
push
xor
inc
test
mov
add
dec
jge
loop
or
jbe
push
push
sahf
or
lock
aas
sub
mov
sbb
js
cmp
rcll
loopne
push
nop
adc
cmp
std
std
xlat
sarl
xlat
ret
rcr
sbb
mov
sub
jbe
push
inc
push
push
cmpsb
dec
push
inc
clc
and
xchg
fwait
mov
dec
imul
shlb
cmp
add
pop
sahf
dec
insl
push
sub
loope
mov
pop
dec
sbb
scas
pop
lea
shll
cmp
imul
cmp
das
out
test
popa
xchg
cli
inc
sbb
sbb
loope
jb
cmc
cmp
sbb
in
sbb
jmp
movsl
lret
mov
xchg
lods
test
mov
hlt
insb
inc
jmp
or
notb
adc
imul
nop
cmp
add
arpl
push
bound
nop
in
mov
dec
stos
test
inc
mov
pop
jno
call
in
insl
pop
jb
xlat
jbe
lcall
dec
sub
mov
fcompl
pop
mov
jle
clc
in
sahf
cmp
outsl
sbb
and
lods
inc
cmpsl
mov
mov
xor
pop
int
and
cmpsb
jp
xor
lret
fsts
sahf
and
dec
push
inc
outsl
dec
je
adc
pushf
sub
pop
dec
cmovnp
jl
add
mov
fnclex
push
sti
and
sub
filds
dec
stc
cltd
call
mov
dec
cwtl
scas
push
stos
fstl
notl
pop
out
lahf
iret
imul
les
xchg
pop
jl
mov
xor
popf
loope
mov
xor
xorl
add
push
fistpl
jb
sbb
repz
xor
in
nop
leave
outsl
mov
shll
push
inc
dec
dec
mov
and
shlb
adc
or
fs
cli
dec
xor
sti
divb
inc
and
imul
adcb
push
addl
xor
popa
test
shlb
add
repnz
mov
aaa
popf
push
ficoml
sub
dec
add
sub
lock
fbstp
pop
rorl
dec
lahf
inc
xchg
mov
cmpl
dec
fstpl
mov
nop
pop
xor
fwait
push
jl
add
jp
inc
push
mov
or
pusha
lea
or
pop
je
out
loope
cs
push
adcb
inc
not
stos
jp
mov
adc
or
inc
jg
pop
enter
xor
rorb
outsb
jecxz
add
xor
sbb
mov
mov
xor
sbb
add
inc
fisubl
add
mov
ds
mov
fs
mov
lods
xchg
push
jb
fstpl
aas
mov
add
mov
scas
jb
orl
aaa
gs
xchg
sub
setbe
cltd
clc
rolb
repnz
fidivs
nop
xor
cmpsb
out
push
lahf
and
and
dec
ret
sahf
ja
push
clc
push
js
adc
testl
imul
fs
dec
mov
mov
lods
loope
adc
xor
lcall
ss
in
popf
scas
jp
clc
pop
pop
push
hlt
cltd
in
pop
mov
cmpsl
cmp
shll
mov
jbe
cmp
push
in
arpl
sbb
jg
cmc
fdivrp
out
inc
das
sub
enter
fnstsw
push
cmp
mov
data16
xor
sti
fldcw
mov
sbb
arpl
xchg
pop
mov
addr16
xchg
fcmove
or
sub
cmpsb
dec
xchg
cli
mov
and
push
inc
xor
dec
inc
cmp
dec
fsubrp
lret
inc
or
imul
jbe
inc
jmp
dec
dec
add
push
pop
xor
inc
dec
comiss
bound
daa
pop
pop
or
ror
stos
mov
pop
and
int
aas
jne
mov
js
sbb
pop
sbb
mov
push
push
xchg
push
outsl
ljmp
outsl
add
not
stos
leave
sbb
and
or
fs
push
into
outsb
cmpl
mov
enter
and
addr16
sbb
xchg
dec
mov
movsl
loop
fiaddl
gs
xchg
mov
mov
adc
inc
mov
das
cmp
cmpsb
js
lock
fstps
adc
nop
mov
in
scas
xor
or
popa
mov
pop
push
lcall
or
pop
xchg
movsb
adc
mov
outsb
movsl
inc
les
inc
inc
pushl
scas
repnz
adc
jmp
sub
push
in
inc
jno
int3
fiadds
add
adc
scas
repz
xchg
xor
movsl
hlt
mov
jmp
mov
mov
arpl
mov
stos
lea
push
mov
mov
mov
cmp
fisubs
and
pusha
or
mov
cwtl
enter
jne
adcb
adc
clc
test
icebp
push
sbb
daa
cmp
lds
test
jecxz
adc
enter
mov
lahf
cwtl
pop
or
xor
jecxz
lods
jno
in
out
mov
xchg
packsswb
mov
mov
xor
stc
mov
mov
mov
pop
push
shlb
cmp
mov
dec
mov
dec
imul
cmp
sbb
insb
pop
add
test
mov
lods
sbb
pop
jg
ds
stc
adc
sahf
shrl
cs
cltd
fcmovnb
mov
int
repnz
xor
outsl
pusha
jns
mov
gs
fucomp
pop
or
push
jge
lds
inc
inc
test
or
ds
inc
dec
jb
leave
and
rolb
aam
mov
jns
into
jge
dec
or
lahf
jae
testb
out
addl
xchg
dec
push
sbb
js
and
out
insb
jb
enter
push
fsubrl
add
aaa
jecxz
xchg
pop
push
popl
pop
insb
add
inc
aad
xor
out
jne
bound
cli
mov
mov
sub
gs
outsl
xorb
adc
sbb
inc
xchg
push
pusha
sbb
jnp
movsb
fs
pop
dec
mov
mov
ljmp
lret
jecxz
or
push
and
add
rorl
mov
nop
mov
xlat
rclb
hlt
call
pusha
movb
inc
jb
jp
cmpsb
pop
testl
fwait
in
sub
clc
int3
js
and
push
pop
push
lret
call
mov
inc
mov
mov
je
pop
sub
and
aas
jmp
lock
mull
xchg
fcmovu
out
out
pop
lcall
les
and
icebp
adc
and
ret
sbb
call
cmpsl
mov
hlt
bound
sbb
mov
cld
sub
mov
xchg
clc
sub
movsb
dec
das
and
sbb
lods
dec
out
sub
int3
mov
cwtl
jle
lret
cmpsl
push
inc
mov
repnz
popa
sahf
push
sub
call
or
xor
pop
or
cmp
pop
dec
pop
sbb
cmp
dec
or
cs
dec
adc
sub
bound
in
mov
cld
jecxz
add
sub
jmp
jp
ja
ficoms
dec
fstl
and
add
jl
sbb
push
mov
push
ds
enter
pop
sahf
or
push
mov
cmp
push
das
fisubs
hlt
sub
jno
int3
negl
and
pop
pop
test
rol
mov
out
mov
into
push
mov
push
xchg
cmp
and
mov
aam
dec
cmp
arpl
popf
outsb
ja
movsl
ds
outsl
lea
dec
mov
popa
xchg
mov
inc
jge
repz
inc
repz
mov
lahf
in
mov
jg
adc
mov
cmp
std
gs
xor
pop
sub
aas
aad
iret
sbb
ret
and
cmp
outsl
jnp
test
pusha
loope
sbb
adc
push
dec
push
mov
mov
pushf
xchg
sbb
xchg
ret
aad
sbb
xchg
mov
cmc
addl
lds
jp
or
sub
push
jbe
into
test
pop
xlat
xlat
sahf
mov
mov
mov
out
shlb
push
push
fnstsw
scas
insl
push
add
clc
cli
dec
pop
adc
add
in
mov
rolb
or
and
inc
repz
push
pop
jecxz
cmp
sub
mov
test
movsl
dec
lea
loope
fistps
cwtl
add
fldl
push
pop
sub
lcall
mov
mov
inc
fadd
cltd
push
cld
mov
xchg
xchg
fisubl
int
bound
mov
adc
adc
roll
stc
insb
out
cli
fwait
add
jg
fisttpll
cmp
xchg
sub
add
add
xlat
dec
imulb
xorl
loopne
subl
add
or
pushf
cmpsb
mov
inc
pop
or
mov
mov
jbe
cld
test
dec
xchg
ljmp
inc
sbb
push
into
sti
jg
shl
or
or
fists
mov
pop
dec
xor
jo
push
lds
inc
add
xchg
cmp
cmp
inc
imul
add
das
scas
ss
shrb
inc
or
jl
or
inc
aas
movsl
xor
rorl
or
pop
frstor
flds
xchg
ds
faddp
mov
push
mov
xlat
jg
lret
subb
sub
pusha
sbb
stc
and
cwtl
pusha
loopne
jbe
push
cltd
nop
mov
xchg
mov
mov
lcall
mov
ror
lods
shll
sub
inc
movsl
stos
xlat
paddd
out
fdivs
outsb
or
jmp
jne
sub
add
xchg
add
fs
or
rorl
xchg
nop
xchg
cs
mov
into
mov
mov
xor
add
mov
in
inc
push
xchg
mov
inc
fildl
jg
add
sub
rcr
fisubs
cltd
js
pop
add
add
hlt
xor
sub
stc
jmp
sub
in
push
mov
xchg
adc
mov
adc
lahf
fnstenv
cld
subl
pushl
pop
mov
jbe
out
xchg
add
sbb
jb
stos
fwait
call
sbb
shrl
imul
or
int3
mov
adc
push
inc
scas
or
pop
jle
add
dec
std
sbb
sub
inc
ss
mov
into
in
inc
std
hlt
sbb
xchg
int3
push
dec
jle
jo
lahf
cmp
loope
sbb
xor
jp
sar
int
bound
cwtl
adc
push
xchg
shr
or
xchg
sub
fistpl
cli
fsubs
jecxz
fsts
mov
add
push
int3
ret
jno
sub
scas
dec
xor
out
insl
test
test
lret
daa
mov
push
out
jae
mov
popf
push
pop
push
cmp
fsubs
fucom
bound
mov
dec
mov
in
loope
sbb
sar
dec
mov
outsb
imul
mov
push
cwtl
xchg
outsl
pusha
aad
clc
cmp
dec
xor
and
popf
test
jo
sbb
into
xchg
pop
aam
in
and
sub
out
sub
icebp
xor
mov
lahf
out
add
cmc
push
gs
inc
cmpsb
insb
mov
gs
popa
inc
mov
add
jp
pop
shlb
sub
jge
cmp
sub
leave
push
ret
mov
jo
inc
les
add
pop
pop
call
push
js
js
xchg
jne
cmc
adc
sbb
pushf
push
xor
es
mov
in
xchg
jmp
in
push
cs
or
imul
jns
sbb
push
aaa
inc
mov
add
mov
pop
push
mov
sarl
pop
cmpsb
in
mov
pop
fs
rcr
aad
inc
mov
cltd
and
pop
hlt
mov
sub
sbbb
ja
sub
mov
sub
ror
mov
inc
pop
arpl
seta
mov
add
leave
sbb
sbb
mov
mov
lds
pop
orb
fidivl
pop
and
shll
dec
cmpsb
loopne
push
sub
cld
cmp
mov
rcll
fdivrl
insl
mov
push
outsl
jle
jno
outsl
sub
mov
mov
pop
and
add
xor
scas
ret
dec
rsqrtps
ret
sub
pop
rcrb
add
lahf
sbb
pop
mov
lods
stos
cli
stos
pop
push
dec
jg
idivl
jbe
mov
inc
cld
add
xchg
sti
xchg
imul
mov
gs
hlt
xlat
fwait
setle
adc
pusha
ret
jns
call
ljmp
rcr
fwait
icebp
popf
fimull
ljmp
mov
mov
mov
sbb
sub
inc
fisttps
pop
loop
enter
push
mov
adcb
xchg
push
cmpsb
inc
adc
inc
stos
neg
stos
push
lock
aaa
cs
pop
sub
shlb
adc
pop
pop
or
cmc
dec
xchg
iret
fisttps
test
cmp
pop
lahf
dec
add
jae
adc
imul
punpckldq
les
bound
cmp
rcrl
idivl
call
fimuls
ficoml
pop
xchg
in
test
xchg
mov
xchg
add
push
inc
lret
clc
jnp
adc
or
mov
shr
loop
inc
pushf
push
pop
push
sub
xor
cltd
xchg
in
daa
shl
sahf
mov
subl
dec
xor
dec
inc
mov
xor
jmp
in
jge
inc
mov
out
pop
mov
mov
sub
mov
jle
sub
ljmp
lcall
cmp
into
stos
enter
stos
jbe
bound
lahf
cmp
sarl
insb
call
addr16
cmp
inc
aaa
je
lahf
outsb
test
in
leave
or
sbb
bound
pop
jl
add
mov
stos
jle
leave
es
test
inc
sbb
mov
adc
cmp
sbb
xchg
iret
mov
cmp
mov
push
mov
mov
mov
leave
sub
xchg
mov
std
aam
add
fidivrs
inc
lret
sub
scas
aaa
mov
cmpsb
enter
push
or
lret
mov
js
mov
rcrb
mov
repz
jne
imul
inc
cmp
ret
stc
fwait
mov
js
popf
and
repnz
or
sub
outsl
stos
idivl
jp
and
pop
add
sbb
mov
pop
push
jmp
pop
adc
sar
add
cmp
popf
xchg
mov
push
lahf
mov
jmp
sub
jmp
sub
mov
es
cmp
sti
mov
fwait
xchg
and
adc
add
dec
add
je
mov
sbb
sub
lret
and
mov
cli
ret
or
aam
test
sahf
sarl
mov
pop
lret
mov
mov
arpl
jle
jns
adc
add
arpl
xchg
mov
dec
enter
incb
sub
gs
or
jg
mov
jg
jbe
mov
imul
lcall
inc
push
lock
out
add
pusha
xchg
pop
sbb
add
cmovno
ficoml
inc
push
shll
aad
xor
mov
insb
stc
rcrl
push
xchg
add
idivb
arpl
jp
mov
cmp
fcoms
imul
inc
sbb
inc
fisttpl
lret
cld
inc
lock
jmp
rorb
pop
jno
mov
popa
pop
mov
xlat
xchg
xor
cwtl
xor
ret
in
adcb
push
jmp
and
dec
mov
add
scas
jmp
fnstenv
jecxz
xor
fdivl
dec
repz
jle
fistpll
loope
mov
aaa
gs
add
mov
dec
fistpl
les
jne
mov
std
xor
add
adc
aad
inc
mov
xchg
lcall
out
jae
bound
aad
mov
cli
fwait
xorl
xchg
or
je
stc
jmp
rolb
and
jae
inc
lahf
mov
jp
dec
sbb
pop
jne
icebp
cmc
cmp
mov
jmp
mov
push
frstor
adc
fadds
mov
pop
jge
bound
push
int
scas
sar
mov
shl
pusha
ja
jne
loop
inc
mov
adc
mov
mov
mov
mov
sbbl
sahf
pop
repnz
xchg
xchg
adc
mov
cmp
lds
fs
dec
imul
push
out
jno,pn
sub
shll
inc
dec
adc
subb
negl
out
pop
sub
push
mov
outsb
mov
mov
jp
mov
aas
mov
lahf
mov
mov
push
xor
fstpt
mov
in
mov
cmc
push
lock
ds
jge
cmp
mov
je
bound
jbe
pusha
xor
fcompl
scas
fxtract
push
adc
das
cmp
mov
adc
dec
push
xor
dec
pop
test
aam
fisubrl
loopne
mov
movsl
push
dec
nop
mov
daa
cmpsl
cmp
in
call
pop
aam
loope
pop
repz
mov
or
out
jnp
jmp
cltd
jle
pop
pop
mov
mov
inc
in
mov
add
cli
in
aaa
jp
add
outsl
push
xchg
sub
fwait
dec
lcall
mov
sub
mov
push
dec
notb
jb
sti
dec
stos
or
call
mov
enter
cmp
mov
jl
stc
mov
inc
mov
cli
imul
sbb
fnstenv
xchg
dec
mov
or
repz
pop
arpl
dec
pop
enter
dec
ja
rorl
popa
call
scas
int3
adc
mov
shrb
scas
dec
cwtl
loope
cmc
movsb
xchg
int
xor
test
add
and
mov
and
sub
jno
xor
jle
mov
fistpl
ss
out
jg
or
mov
pop
loopne
cmpsb
mov
sbb
jg
jge
sbb
subb
mov
sub
and
je
ret
mov
lock
adc
push
repz
shrb
sub
xor
loope
and
xchg
lock
dec
movsb
pop
loope
sbb
xchg
pop
xor
repz
mov
fisubs
test
xchg
xchg
mov
insb
sub
jbe
lds
in
cmp
inc
lcall
and
les
add
jl
movsb
in
add
repz
fmull
cmpsb
cmp
lcall
btr
in
mov
rdmsr
mov
mov
jge
pushf
push
iret
inc
fcmovnu
lods
shlb
xor
cmp
fiaddl
mov
fcoms
call
cmp
andps
adc
insl
mov
cmp
gs
inc
jns
loope
mov
cmpb
nop
cmp
stc
addb
cmp
cmp
jle
outsb
adc
add
shlb
cmpl
jbe
jecxz
hlt
test
frstor
cli
xchg
cli
in
loopne
ja
fldcw
outsb
xor
mov
pop
and
cltd
sbb
adc
out
cmp
lods
jno
sub
and
sahf
pop
mov
int
sub
or
jno
pop
fisubrl
push
scas
mov
imul
ljmp
jbe
stos
test
xchg
push
push
dec
movsl
sub
clc
pop
jo
lcall
pop
sbbb
mov
in
lods
push
popa
fcoms
xor
cmp
cltd
jp
mov
sub
ret
je
insb
mov
aam
fldt
xbegin
jns
test
inc
add
jns
and
sub
jb
pop
lret
das
jp
inc
cmp
fisttpl
or
sbb
mov
dec
stos
and
mov
sbb
mov
mov
inc
jle
loopne
or
outsl
sub
mov
ds
cmc
sub
decl
fildll
repz
add
mov
pop
aas
daa
mov
lahf
fimuls
icebp
push
es
xlat
push
add
lcall
test
and
xor
xor
int3
push
lods
adc
lods
loop
pushf
push
sahf
or
mov
mov
jmp
pop
cwtl
out
push
pushf
pop
mov
xlat
mov
test
std
jnp
mov
jnp
mov
orb
cmpl
ss
push
xor
mov
fmuls
movsl
sub
push
cmp
addr16
inc
cmp
aam
imulb
mov
adc
push
push
sbb
pop
shr
sbb
loopne
xchg
xor
jae
add
clc
pop
lods
fwait
jno
push
mov
or
inc
cmpl
jne
adc
push
mov
push
and
ficompl
jp
xchg
jnp
push
add
mov
imul
aad
push
cmp
out
int3
mov
ja
lods
lea
adc
add
inc
nop
pop
cs
push
jp
fbld
cs
lock
cmpsb
cwtl
stos
stos
stos
adc
mov
mov
or
leave
and
mov
mov
xchg
xchg
xchg
mov
xchg
rcll
aaa
push
sub
sub
das
lods
add
push
mov
out
inc
adc
inc
and
dec
clc
mov
loopne
pop
pop
jg
lcall
std
sbb
mov
into
dec
into
and
imul
sub
sahf
nop
popa
std
ja
mov
mov
pusha
aad
insl
rol
push
jnp
test
insl
test
pusha
int3
and
bound
jae
cmpl
out
das
or
inc
pop
dec
push
insl
pop
push
imul
cli
bound
mov
pop
pop
xor
ss
and
rolb
add
xchg
push
iret
cltd
ficompl
add
cmp
ret
sbb
add
sub
cs
xlat
mov
out
lcall
cmp
pop
cltd
out
jbe
notl
inc
lods
inc
adc
pop
jecxz
mov
imul
or
or
pop
loopne
sub
cmp
lret
xor
das
out
lahf
add
xchg
xor
testb
scas
int
mov
mov
or
adcl
pushf
jge
lods
pop
pop
add
stos
adc
cmc
lret
dec
adc
fwait
or
sbb
aaa
jo
jnp
jmp
test
mov
push
lahf
data16
mov
xchg
paddsb
adc
int
imul
ret
adc
imul
stc
aad
jbe
int
js
ss
repz
and
or
notl
or
jmp
mov
inc
xor
jbe
mov
jmp
dec
mov
inc
mov
mov
add
mov
cld
icebp
fisttpl
pop
xor
sbb
sbb
mov
loopne
js
imul
test
mov
pop
enter
xchg
or
dec
mov
push
in
mov
cwtl
mov
mov
and
inc
mov
jns
loop
setg
xchg
insb
dec
aam
sub
ljmp
mov
inc
shrl
jmp
scas
lcall
jb
testb
xchg
and
mov
and
das
repnz
add
mov
jne
adc
pop
add
arpl
icebp
xchg
inc
xchg
sbb
out
and
fmuls
call
popa
xor
les
adcb
test
insb
xor
dec
js
xchg
inc
or
push
mov
rol
dec
add
sub
loop
in
jle
iret
fwait
loop
mov
cmp
int3
je
ljmp
imul
or
xor
iret
xchg
cld
repnz
jp
jno
repnz
cmp
mov
sub
jle
scas
mov
mov
push
aam
movl
jp
dec
stos
repz
or
lahf
les
fidivl
mov
fldlg2
pop
ljmp
test
cwtl
mov
adc
out
inc
xchg
xorb
aam
in
mov
popa
in
enter
cmp
jmp
mov
aaa
int
adc
add
filds
sbb
test
jnp
xor
sub
pop
sub
outsb
addl
insb
cmp
jmp
xchg
fdivl
xchg
adc
cmp
dec
es
push
cmc
cmp
mov
lret
xor
mov
ljmp
push
test
shl
push
add
sbb
mov
gs
xchg
push
mov
adc
fdivr
or
dec
xor
push
push
pop
stc
adc
pop
pop
push
xchg
sarl
xorl
daa
das
push
jmp
and
addb
jmp
xor
mov
dec
inc
cmp
or
dec
fsubp
push
lcall
adc
ljmp
or
fdivrs
mov
mov
test
leave
pop
pop
pop
inc
dec
mov
gs
lahf
and
fldenv
and
jne
ficoml
daa
fsub
sbb
jo
popl
inc
stc
cwtl
jb
xor
add
sub
push
aad
dec
in
fwait
pop
xchg
adc
jg
dec
dec
data16
add
xchg
out
mov
inc
xchg
jne
xchg
fsts
sub
adc
dec
mov
adc
aas
movsl
xchg
stos
mov
je
mov
pop
lds
mov
pop
jo
sub
xchg
or
jp
or
mov
adcb
adc
xchg
push
icebp
xor
stos
inc
mov
mov
jbe
sub
sbb
shll
xchg
fdivrs
psubq
or
fcmovu
cmp
mov
lock
xor
dec
xchg
lret
and
test
je
pop
or
mov
inc
out
push
jb
pop
popf
orl
ret
sbb
enter
lahf
or
or
xchg
test
xchg
out
dec
movsb
cwtl
and
xchg
adc
nop
sub
loope
xor
or
in
roll
out
jle
jecxz
mov
push
stos
jmp
movsl
or
enter
pop
inc
aad
pop
loopne
mov
xchg
mov
mov
rcrb
mov
arpl
mov
outsb
jl
out
jo
addl
pop
aam
lds
cmp
xor
lahf
sub
data16
daa
dec
es
sub
loop
data16
test
push
inc
jp
popf
inc
dec
shll
mov
fwait
xchg
pop
sub
mov
ljmp
jo
add
sbb
xchg
inc
inc
arpl
movsl
adc
push
shr
pop
mov
push
dec
andl
fsubrl
hlt
or
das
aaa
pop
movl
bound
pop
pop
xchg
cmp
mov
cli
orb
xor
jle
outsl
mov
cmp
out
dec
fcomps
push
loopne
fptan
imul
idivb
idivl
leave
in
movsl
popa
dec
ss
test
js
dec
mov
push
hlt
leave
insl
cmp
and
jnp
std
popf
cmp
mov
xchg
addl
pushf
clc
sbb
mov
cltd
and
inc
mov
mov
lret
adc
lods
mov
test
lea
xor
arpl
cmp
outsb
pop
rep
aaa
and
push
imul
add
ror
sbb
xchg
pop
pop
mov
sbbl
xor
cmp
ss
adc
or
out
test
jne
pop
movsl
jno
outsl
out
in
lahf
data16
cmp
jns
xchg
test
imul
mov
cmp
jno
pop
sub
adc
jecxz
lret
sarl
and
jns
or
add
xor
jge
and
pop
xor
test
lock
adc
push
mov
mov
pop
push
pop
cmp
mov
in
or
hlt
pusha
xchg
add
stc
sbb
inc
test
test
xchg
into
mov
mov
pop
xor
ret
push
rcll
shrl
mov
xchg
popa
inc
outsl
push
mov
push
push
in
dec
aad
sub
fnsave
incl
mov
jg
shrl
aaa
std
mov
adc
mov
or
or
sub
inc
adc
mov
adcl
push
outsl
ja
ret
jmp
sahf
jg
push
test
jno
dec
sti
sub
jle
mov
idivl
mov
outsl
and
inc
pop
inc
sub
sub
fcomi
fisttpll
aam
stos
out
jns
cmp
test
jmp
int3
lods
xor
loope
iret
adc
stc
sahf
lock
xacquire
or
or
leave
int3
dec
cmpsl
scas
sbb
scas
dec
cli
daa
sahf
cmp
cmpsb
shrl
mov
jmp
xchg
repnz
adc
inc
dec
push
aad
dec
push
mov
mov
sub
hlt
jge
pop
scas
mov
sbb
mov
clc
fimuls
je
dec
inc
ljmp
lahf
ret
xchg
in
adc
cli
lods
mov
xchg
inc
sub
mov
test
jae
jno
adc
sub
sub
or
push
pop
sub
imul
mov
jnp
cmpsb
and
mov
adc
pop
mov
pop
repz
sbb
into
gs
jb
daa
mov
movsl
dec
lea
jl
std
iret
cmp
insb
pop
jb
cmpsb
lods
addl
and
divb
outsl
int3
mov
mov
ret
insb
ror
sub
add
stc
xor
fwait
out
xor
in
inc
pop
inc
stos
addr16
inc
jbe
pop
push
insb
sahf
mov
mov
clc
ficompl
aaa
mov
lock
xor
jns
and
jg
loop
out
inc
mov
aad
add
mov
bound
sti
mov
das
incl
int3
popf
ja
js
adc
bound
sub
cmp
loopne
loop
insl
mov
scas
adc
xchg
lea
hlt
ss
xchg
mov
subb
mov
movsb
popf
shld
fs
je
inc
daa
std
fistps
out
ja
out
mov
in
fucomi
fmuls
shll
imul
mov
js
mov
sub
fmuls
loope
iret
dec
js
ja
and
mov
movsb
sarl
cmp
or
inc
jb
pop
stos
aam
lock
lret
and
sbb
add
insl
mov
mov
insl
ja
mov
ja
popa
imul
sub
jnp
xchg
movsb
xchg
sub
cmp
decb
dec
cmp
sti
or
sarl
stos
mov
leave
mov
pop
ljmp
rorb
xchg
dec
pop
and
adc
hlt
sub
pop
and
mov
add
movlps
lds
imul
sub
insl
or
into
imul
cli
dec
and
ror
adc
ret
lret
je
out
setbe
call
rcll
movsb
shrb
stc
repz
cli
mov
arpl
sar
or
in
or
int
dec
mov
ja
mov
jae
ja
popf
enter
xor
xor
inc
adc
jle
dec
int
std
sbb
sbb
dec
fisubl
or
adc
xchg
dec
pop
pop
push
jl
or
test
popa
fdivl
inc
pop
lods
fwait
push
xor
adc
push
mov
iret
or
out
adc
addr16
pop
jge
int
ficoml
sub
mov
pop
fwait
pop
mov
inc
mov
scas
adc
jae
lods
pop
clc
mov
xor
out
push
mov
sbb
fwait
push
mov
or
ret
dec
ss
divb
shl
inc
sbb
sbb
repz
loopne
mov
jnp
adc
jmp
adc
xchg
je
sarl
mov
mov
add
pop
mov
mov
out
or
sub
inc
push
imul
imul
daa
adc
mov
pop
sub
sahf
jb
imul
clc
jne
es
je
cs
push
insl
fnstcw
mov
imul
loop
xchg
add
xchg
mov
fadds
xor
imul
xchg
adc
daa
fcmove
lcall
push
sub
dec
out
ss
scas
jmp
repnz
aad
mov
repz
adc
cld
fisubrl
test
adc
push
sub
add
pushf
jp
xchg
adc
insl
insb
xor
xchg
sbb
dec
pop
sbb
and
adc
in
jne
mov
je
lods
loopne
cmpsb
fs
jns
das
test
sbb
cmp
scas
sub
lcall
inc
mov
or
cmp
test
inc
mov
int
movsb
push
xchg
inc
xor
int3
xchg
mov
push
dec
lods
dec
fcoms
insl
arpl
xchg
subb
dec
popf
cmp
pop
mov
ss
pop
popf
sbb
dec
adc
jae
dec
mov
and
aam
xchg
orb
enter
mov
or
test
xchg
jne
cli
sub
and
mov
fwait
xchg
cmpsl
ret
in
je
push
arpl
sub
out
mov
dec
fstl
add
mov
loop
cwtl
test
notb
or
adc
lret
cmp
xchg
es
loop
push
push
inc
into
sahf
data16
cwtl
aam
ret
cmp
stos
jne
xchg
lea
jb
test
and
sar
loope
loope
enter
sub
inc
pop
sti
dec
jbe
jle
xor
inc
testl
in
insl
daa
int3
sbb
cli
or
inc
sti
fsubrl
mov
lcall
jo
test
inc
sub
adc
xor
mov
pop
cld
jp
test
mov
adc
mov
jnp
mov
push
xor
fdivrp
jmp
repnz
pop
bound
mov
popa
and
fbstp
adc
stos
push
mov
and
sti
adc
jl
fbld
icebp
lds
jmp
sarl
sbb
add
pop
pushf
fistpll
cs
in
sub
push
popa
fsts
les
inc
inc
sub
xchg
stos
ret
jecxz
mov
sbb
jnp
js
test
test
inc
push
mov
cs
daa
ljmp
mov
rorl
lret
sub
xor
jl
iret
pop
cmp
mov
inc
inc
inc
and
xor
and
arpl
lahf
add
gs
leave
out
std
cltd
mov
pop
pop
test
or
fisubrl
push
mov
xchg
pop
dec
loopne
fidivs
hlt
mov
and
mov
aad
fadds
jge
cmpsb
inc
jl
push
cs
inc
pop
icebp
mov
xchg
ret
iret
dec
call
cmp
jnp
add
push
pop
sub
lret
jmp
cld
push
mov
add
aad
pop
xchg
xor
or
sarb
dec
pop
jmp
add
adc
cmp
fsubrl
push
cli
cmp
cmp
cmp
jecxz,pn
pxor
sahf
mov
push
push
xor
sarl
xchg
xor
dec
inc
cmp
xchg
in
or
enter
mov
push
test
fs
sbb
pusha
mov
stos
sbb
pop
pop
daa
test
fwait
xchg
jb
or
dec
push
fdivrp
arpl
sub
imulb
add
push
fdivrp
push
jns
adc
mov
mov
cmp
insb
cmpsb
jecxz
sbb
out
adc
aam
adc
or
clc
inc
inc
xor
add
pop
addr16
jg
pop
sbb
pop
cmp
mov
enter
cmp
push
loopne
pusha
sub
out
outsb
jne
lret
clc
fcoml
rcrl
sti
xchg
outsl
popf
sbb
dec
dec
mov
adc
add
outsl
xor
repnz
cmpsb
mov
lahf
les
jno
pop
inc
loopne
cmp
sbb
jae
dec
std
jnp
inc
insl
inc
roll
iret
movsl
push
arpl
mov
dec
ret
or
std
inc
movsb
in
inc
outsl
mov
js
or
sahf
cmp
mov
sbb
jl
jbe
imul
mov
jle
jl
arpl
ljmp
cwtl
clc
rcrl
xor
sahf
ljmp
push
add
xlat
inc
filds
scas
es
push
mov
shll
mov
cld
not
ss
ds
pop
adc
sbb
mov
xor
lret
pusha
inc
mov
pop
push
adc
jp
xchg
test
xor
pop
lret
cltd
adc
lret
pop
in
inc
ret
mov
aas
jae
inc
out
nop
push
mov
and
sub
sub
stos
mov
sahf
push
jg
sub
int
pop
dec
xor
pop
push
and
push
push
push
push
addr16
mov
xor
adc
pop
push
xlat
mov
adc
xlat
in
xchg
in
mov
jo
jle
add
js
lock
and
push
jl
lret
sbb
cmc
test
jbe
jbe
test
inc
fildl
and
or
pushf
in
xlat
dec
test
test
aam
cmp
push
push
imul
and
pop
shr
es
fwait
dec
test
fidivrs
push
lahf
jnp
stos
test
arpl
scas
xorl
dec
xchg
ss
add
and
lods
in
idivl
xor
clc
out
push
mov
xchg
scas
fsubrs
adc
int3
and
cld
xchg
ljmp
push
mov
push
ss
xor
mov
cmc
lret
fimuls
aad
mov
ficomps
mov
bound
lods
mov
sar
sbb
xchg
pop
rclb
xchg
aas
mov
jnp
jge
mov
icebp
stos
mov
icebp
sub
je
lret
movsl
loop
out
add
icebp
jle
lock
inc
push
xchg
add
mov
ss
lcall
mov
cmp
out
cmc
icebp
fnstsw
ljmp
cmp
cmp
jae
call
sbb
hlt
ja
test
pusha
jno
xchg
inc
add
adc
mov
scas
dec
inc
push
jnp
mov
jle
mov
stos
scas
push
mov
mov
dec
jae
jmp
std
inc
jae
push
clc
leave
inc
sub
mov
lret
lcall
pop
repz
jo
and
pusha
and
mov
mov
repnz
mov
mov
hlt
pop
and
mov
out
cmpsl
repz
ja
testb
pop
into
adc
insl
push
jno
cmc
dec
or
pop
dec
test
loope
shll
sbbl
mov
cli
pop
addr16
hlt
insl
xchg
cmpl
cltd
adc
data16
and
jnp
xlat
movsl
and
cli
call
sti
and
popf
adc
mov
incl
daa
test
pop
scas
adc
cmp
mov
aaa
jne
jl
int
scas
and
lcall
add
push
cmpsl
das
and
and
inc
jg
pop
outsl
loopne,pn
shl
cli
sbb
sub
clc
jne
out
js
enter
dec
sahf
cmp
xchg
fdivr
out
dec
mov
pop
repz
mov
pop
push
rcll
dec
mov
outsl
mov
aaa
movb
shl
sbb
jo
in
adc
add
cmp
adc
add
or
dec
cmp
xchg
push
popf
inc
pop
shr
pop
or
mov
push
fdivrs
jecxz
cld
inc
xor
mov
daa
sbb
hlt
dec
sbb
xlat
or
ret
push
fistpl
sbb
lods
scas
xor
sub
sbb
lock
adc
movb
sbb
loope
cmc
insl
fsubrl
inc
push
les
inc
or
jg
jno
inc
dec
popa
inc
mov
loopne
xor
jp
sbb
push
lods
cmp
fcompl
ja
mov
push
mov
pop
aam
mov
dec
fwait
and
in
testb
jp
enter
vpsubsb
adc
std
mov
rol
sbb
popf
cmp
adc
mul
inc
movsl
cmpl
outsb
add
test
mov
dec
jne
push
jmp
sbb
mov
mov
or
mov
cmpsl
mov
or
sub
js
std
imulb
insl
sbb
pushf
and
sub
push
das
mov
fisttpl
mov
jge
xor
sbbb
xor
lock
hlt
xor
adc
fwait
push
lds
xchg
xchg
xchg
push
mov
pusha
insl
xchg
jg
scas
cmpsl
pop
xor
cmp
popf
orl
daa
out
jg
wbinvd
shll
cmpsb
xor
jge
xchg
xchg
int3
cltd
xchg
mov
jl
shll
inc
movsb
leave
shll
mov
shrb
in
sbb
xchg
pop
mov
out
push
mov
dec
xchg
dec
mov
imul
push
push
xor
les
in
in
inc
xor
xchg
push
jp
aaa
int
daa
add
or
or
fs
xor
bound
outsl
adcl
je
scas
pop
add
ret
ret
movsl
pop
fnstenv
add
mov
cwtl
sub
push
clc
sbb
js
jmp
lea
cld
xchg
sub
testl
sub
push
or
push
mov
xor
jne
pop
xor
pop
adc
out
adc
rorb
das
arpl
insl
dec
adc
jl
dec
in
adc
sub
mov
sbb
data16
mov
mov
divb
mov
mov
hlt
fmul
clc
iret
ret
shl
jbe
andb
ds
and
fs
fcoms
jae
xchg
xchg
or
xchg
in
jp
icebp
movsb
rclb
js
inc
cmpsb
jle
pop
and
aad
test
ss
and
lcall
sbb
push
out
pop
aas
pop
fwait
mov
cmp
xchg
mov
push
mov
dec
fwait
gs
xor
int
adc
in
in
cmc
add
add
leave
mov
int
in
mov
je
jg
aad
rol
prefetchnta
jle
movsb
mov
cmp
xor
and
sub
or
and
fdivp
cmp
or
lods
ja
int3
mov
lods
add
mov
hlt
arpl
xor
and
inc
cwtl
nop
orps
mov
add
je
mov
arpl
addr16
mov
test
shrl
in
mov
out
ja
hlt
xchg
lcall
loop
xor
ss
and
int
lock
sti
inc
cmp
es
cmpsb
pop
push
dec
mov
leave
clc
inc
add
in
xlat
or
lea
jo
repnz
outsb
add
push
nop
jl
jnp
add
lea
mov
push
cld
sub
arpl
test
lds
xor
cmp
test
lds
add
and
jae
sub
jl
and
stos
fadd
loopne
roll
inc
pop
jp
adc
sti
mov
mov
and
cli
add
notb
rep
mov
aad
pop
adc
add
mov
into
jge
sbb
push
inc
es
and
sub
mov
int
nop
loop
jecxz
pop
xlat
mov
push
rcll
rcrl
das
dec
data16
imul
imul
int
dec
fcmovnu
rdtsc
and
adc
xor
popa
aas
dec
mov
loope
push
scas
pop
repnz
inc
ret
faddp
mov
inc
inc
pop
inc
pop
mov
fisubl
xchg
mov
lret
jae
aam
in
add
sti
popa
or
push
mov
data16
sti
push
and
inc
xchg
push
into
push
imul
fwait
es
loopne
je
mov
jae
xchg
fsubr
out
stos
rolb
imul
sub
rcr
xorl
lds
in
inc
mov
int
lahf
jb
jb
pushf
jae
push
mov
lahf
lea
xchg
jb
and
fidivl
cmpsl
or
in
test
out
aas
push
inc
insl
movsb
arpl
sets
cmpsl
aad
xchg
out
pop
or
jbe
test
dec
mov
mov
pushl
and
adc
lods
repnz
cmp
arpl
movsl
int3
aad
test
adc
lock
xor
mov
jge
movsl
negb
orl
mov
dec
or
mov
pop
gs
lods
xor
dec
arpl
test
shl
pop
sbb
fistpl
hlt
mov
mov
cltd
sub
ret
xor
mov
jge
int
and
insb
std
int3
xor
and
andb
in
mov
cmc
ss
sub
repz
push
sti
mov
mov
sbb
ja
cltd
ja
cli
push
mov
cmp
or
into
lret
mov
mov
scas
loopne
inc
xchg
pusha
lods
repnz
push
leave
add
cli
hlt
jo
sub
fsubrl
faddp
stos
lods
add
mov
adc
add
lret
lea
pop
inc
cmp
fbstp
icebp
stos
or
cld
adc
mov
push
dec
jecxz
lods
data16
jae
push
mov
dec
int3
inc
cmp
and
or
scas
fsubrs
mov
sbb
ja
mov
push
inc
loopne
nop
sbb
xor
pop
aad
push
shrl
lahf
call
dec
repnz
mov
repnz
xchg
aam
fmul
jbe
inc
add
lods
xor
outsb
jb
xchg
push
mov
add
pop
sbb
insb
jns
pop
stos
cmpsl
mov
repnz
mov
loopne
pop
adc
in
sahf
lret
imul
loopne
add
aam
imul
push
cmp
sarl
pop
lret
outsl
push
ja
iret
adc
enter
loope
adc
push
sbb
sub
pop
js
ljmp
pop
in
cmp
gs
xchg
addr16
xchg
jae
repnz
in
lods
imul
icebp
into
scas
mov
mov
adc
movsb
xchg
xchg
loop
test
leave
sahf
mov
lret
adc
insb
mov
repnz
rorb
cld
in
and
cmp
dec
jns
dec
xchg
or
dec
addr16
nop
neg
jg
aas
and
ss
pop
in
sbbb
cmpl
mov
es
aaa
xorl
jecxz
rorl
movsl
sub
mov
fadd
pop
cmp
xchg
stos
out
hlt
inc
or
pop
cmp
bound
cs
cli
push
mov
sbbb
and
and
inc
mov
xor
repz
fisttps
cmp
dec
sub
out
add
test
or
sbb
inc
jnp
sub
stos
jmp
cmp
mov
fs
enter
mov
jle
pop
dec
push
jne,pt
mov
or
out
xchg
outsb
mov
push
mov
mov
jbe
sti
pop
fwait
arpl
pushf
sahf
sub
lock
inc
imul
xor
aaa
enter
call
mov
lods
imul
rcl
xor
pusha
xchg
pusha
sbb
pop
rolb
inc
arpl
ds
inc
jnp
mov
rcrl
leave
inc
and
pop
jb
shrl
jecxz
jbe
mov
ja
test
cmp
or
dec
js
jb
jno
lcall
adc
xor
xchg
cs
loope
shlb
xchg
movsl
sahf
outsb
pop
inc
bound
pushf
in
stc
mov
dec
aaa
sbb
test
or
cltd
imul
out
sbb
add
jp
push
and
lds
inc
cmpl
cmpl
pop
xor
dec
dec
xor
inc
orl
pushf
adc
or
dec
repz
imul
sub
mov
lcall
testl
mov
test
pushf
outsl
lods
sub
inc
dec
dec
cmp
das
inc
mov
es
sub
dec
stos
mov
pushf
cmp
sbb
icebp
outsl
mov
adc
lock
je
pop
mov
lahf
mov
mov
inc
and
fisttps
mov
mov
or
sub
das
adc
pusha
mov
clc
sub
inc
xchg
loope
inc
and
or
mov
lods
add
add
fildl
loope
movd
test
test
pop
mov
mov
adc
inc
orb
in
or
jmp
mov
pusha
movsb
mov
sti
fisttpl
popf
jecxz
push
fstl
xchg
aaa
outsb
push
repnz
sub
ja
xchg
jl
sti
jp
inc
sbb
cltd
ljmp
adc
movsb
icebp
push
xor
push
jne
daa
xchg
gs
jns
dec
mov
sti
int
ljmp
mov
mov
xor
cmp
sbb
fs
int3
mov
push
fistpll
xor
and
xor
mov
jmp
jecxz
and
lcall
outsl
scas
cwtl
or
inc
aas
push
out
lods
out
lahf
dec
add
mov
outsl
adc
test
cld
jmp
sti
jns
mov
adc
cmpsb
bound
xor
ds
jl
fimull
out
out
or
cld
push
mov
cs
test
mov
fnstenv
pop
jnp
je
adc
loop
mov
imul
mov
dec
adc
sbb
test
push
push
ficomps
dec
fisubrl
dec
jbe
push
nop
xlat
dec
mov
xchg
mov
std
sbb
push
jmp
xchg
pop
mov
aad
pop
dec
addb
push
xor
call
or
hlt
xor
sbbb
jmp
jne
inc
mov
incl
sbb
rcll
sub
fdiv
add
jnp
ds
sahf
scas
fmull
jl
pop
adcb
inc
lods
push
dec
sbb
daa
adc
mov
test
jle
movsl
inc
std
cwtl
adc
sub
or
inc
cmp
cld
pcmpgtd
push
pop
sbb
inc
sub
jb
sub
pop
and
stos
rclb
jg
nop
adc
lahf
int
ljmp
call
test
popa
jge,pn
push
jae
rolb
stos
outsl
sbb
pushf
xchg
movsb
and
sub
popa
insl
xchg
dec
jae
rorl
mov
xor
faddl
loope
mov
and
cmp
ret
ljmp
out
test
jge
jmp
xchg
push
lret
test
ljmp
cmp
bound
mov
subb
push
jnp
and
pop
subb
xchg
ret
jbe
sbb
mov
xor
pop
xor
adc
xor
pop
mov
sbb
into
out
xchg
xor
es
shrb
mov
sbb
cmpsb
pop
mov
mov
mov
lahf
add
add
fldt
or
push
dec
arpl
jmp
mov
add
sbb
in
sbb
inc
fs
incl
jmp
pop
push
sub
or
xchg
mov
push
repnz
push
fisttpll
sub
test
repnz
stos
push
clc
leave
bound
call
pop
sti
out
inc
dec
adc
mov
add
daa
enter
dec
push
inc
xor
xchg
push
sarl
ret
shl
cli
int3
addb
lock
lds
cltd
pop
or
rolb
dec
jg
and
fadds
cmp
mov
mov
aam
lahf
and
mov
push
jb
and
aaa
mov
cld
sarl
mov
sub
insl
aam
lock
loop
jb
ret
lret
mov
sub
rcrb
or
xchg
int3
add
sbb
and
int3
pop
push
push
push
dec
in
mov
or
pop
mov
ljmp
insb
push
sub
hlt
mov
pop
push
popa
inc
push
filds
dec
cmp
cli
jne
pushl
dec
repnz
call
pop
cmp
xchg
mov
rcl
mov
adc
xchg
mov
adc
int3
imull
jns
dec
add
xchg
enter
fcoml
dec
pop
pop
addr16
or
pop
sahf
clc
lock
cs
dec
mov
pop
and
cwtl
nop
in
cmp
xor
xorb
cltd
out
push
das
bound
inc
imul
mov
inc
andl
jle
xor
mov
cld
test
loope
push
das
push
cmp
frstor
in
rcrl
sub
insb
mov
aas
dec
int
push
in
insl
mov
dec
pop
out
xor
negb
cmp
movsl
inc
mov
mov
dec
inc
pop
stos
sbb
dec
add
lods
shlb
jnp
imul
cmp
sbb
outsl
inc
lds
orl
jl
sbb
cmp
mov
lea
ds
xchg
imul
dec
adc
xchg
call
jle,pt
inc
int3
and
xchg
dec
sub
iret
push
popa
paddw
mulb
mov
xor
push
jecxz
push
xor
add
pop
add
outsb
and
enter
xor
scas
dec
jbe
dec
xchg
ret
das
mov
lds
mov
mov
flds
movsb
out
dec
andb
loopne
xor
mov
inc
fisttpl
test
mov
push
jp
push
pop
xchg
jb,pn
scas
subb
or
push
inc
pop
push
lds
pop
mov
jb
and
push
sbb
jge
mov
scas
test
sub
js
pop
jge
js
pop
out
push
fcmovnb
insl
adc
test
mov
test
dec
ds
add
test
pop
ds
or
mov
aas
out
lea
cmp
sub
and
rorb
test
mov
insb
push
sub
cmp
out
rol
sub
sbb
ret
jae
add
xor
dec
mov
xor
pop
int3
xchg
cmp
sub
xor
rorb
ljmp
imull
cmp
adc
or
mov
mov
leave
push
mov
push
sub
cmp
out
mov
sarl
add
jo
fs
cmc
mov
dec
push
sbb
rcll
idivl
fidivrs
cmpsl
loope
outsl
test
fistps
fcmovnbe
jmp
dec
hlt
add
push
dec
cwtl
shll
aam
push
fucomp
shrb
fs
divl
mov
xchg
out
movsb
inc
hlt
inc
push
mov
cs
lods
sbb
xchg
iret
jmp
enter
loopne
rolb
and
xchg
and
add
xchg
aam
fst
jb
bound
incl
rcl
push
lea
push
data16
or
lret
lcall
xchg
pop
cmp
mov
test
sub
cld
addr16
stc
test
inc
jo
test
rcl
dec
in
add
mov
mov
out
stos
or
jno
insl
lret
mov
sti
pop
jl
addr16
jnp
hlt
sub
xchg
cmp
sub
dec
sub
popa
ja
repnz
mov
imul
xchg
fiaddl
out
xchg
addr16
jns
repnz
mov
and
add
je
xor
and
or
push
ret
adc
mov
jne
in
movsl
pop
adc
mov
jle
insb
dec
or
push
mov
cmpb
mov
and
xor
lcall
push
sbb
mov
outsl
insl
push
out
stos
test
inc
push
push
imul
push
dec
push
cmp
outsl
and
stc
mov
das
cmp
mov
cmpsb
sbb
mov
ja
mov
mov
lods
jo
nop
sub
fcomip
sbb
icebp
shll
add
cmpsb
jl
mov
or
sbb
jae
pop
cltd
adc
and
add
int
sbb
sti
lods
pop
jmp
mov
add
sbb
loop
hlt
cli
or
mov
jmp
fwait
bts
leave
mov
ja
fsubrp
fisttpl
enter
aam
lock
nopl
rcr
push
clc
lea
mov
dec
cmc
or
mov
int3
push
test
jecxz
cwtl
dec
bndldx
xor
mov
xadd
xor
or
lcall
pop
pop
xchg
jle
push
aas
nop
movsl
pop
dec
sbb
xor
fstpt
xchg
ss
imul
comiss
lock
call
imul
aaa
mov
repnz
sbb
movsl
lods
mov
loope
adc
sub
fisubl
xchg
sub
sub
popa
mov
aad
in
adc
dec
out
pushf
push
fwait
test
es
and
dec
pop
xor
or
cmpsl
mov
repnz
jnp
add
or
fwait
xor
and
pop
mov
mov
inc
push
pop
add
shll
lods
sti
lcall
sbb
mov
je
loopne
push
jg
inc
push
enter
andl
jno
fldenv
mov
cmpsb
xchg
or
or
cli
mov
in
sub
xor
loopne
shlb
shrb
leave
insb
sub
xchg
divl
cmc
rol
mov
xchg
adc
xchg
push
pop
add
pop
push
cs
ja
fimuls
and
push
jmp
mull
mov
cmp
pusha
repz
cmc
cmpsb
mov
les
pop
sub
repz
int3
cwtl
xor
jns
cmp
mov
adc
ret
pop
out
cmp
mov
xor
pop
test
aas
jne
xor
shll
notl
cltd
in
cmpsl
push
cmp
jbe
fistl
inc
push
jl
mov
sbb
int
rcll
les
std
rcl
mov
mov
xchg
mov
xor
pusha
push
sar
sub
insb
scas
jp
lret
outsb
int
and
jne
dec
addr16
cmpsb
ror
xor
inc
xor
xor
addl
gs
sti
leave
jns
dec
sbb
dec
cmp
xor
and
cmp
jbe
push
icebp
out
mov
jg
inc
mov
and
mov
test
daa
xchg
shrl
dec
stos
push
out
and
push
mov
cld
mov
call
sbb
xor
js
fisttpll
outsl
xor
in
mov
lret
adc
ljmp
repz
dec
cmpsl
dec
mov
add
or
pop
cmpsl
flds
jno
lea
jle
or
inc
or
pop
daa
push
jo
mov
xchg
xor
cmp
push
pusha
sti
jbe
jl
nop
adc
je
sub
out
insb
lods
cli
js
push
xchg
scas
fs
dec
movsb
ret
lea
test
or
movsb
aaa
push
xchg
daa
mov
pop
xchg
insb
mulb
xor
or
pusha
popa
mov
add
imul
jmp
push
loope
pop
jg
test
insb
inc
xor
mov
int3
mov
movsl
movb
movsl
pushf
mov
sub
vxorpd
inc
out
bound
cld
shrb
dec
test
lret
out
nop
sbb
mov
mov
fwait
add
sub
dec
pop
push
push
inc
xchg
dec
mov
mov
roll
push
sarl
call
mov
fucom
pop
mov
iret
and
cmc
jge
test
push
cmp
or
jnp
push
lret
ret
imul
xchg
inc
lods
inc
popf
mov
push
or
iret
sbb
orb
cmpsb
mov
dec
mov
sub
mov
sub
lret
ret
outsb
out
je
lock
out
and
jno
mov
lock
xchg
push
rcrl
sbb
mov
mov
dec
mov
cld
push
negb
or
shll
push
xor
dec
mov
push
dec
xchg
sahf
and
cmpsb
popf
adc
xchg
cmp
out
xchg
sub
mov
mov
out
cltd
ret
cmp
xor
pushf
shll
inc
mov
scas
add
mov
dec
bnd
mov
sub
sbb
dec
push
mov
add
into
lahf
push
loopne
pop
pop
xor
sbb
fdiv
loope
jnp
pop
out
sub
mov
mov
mov
shl
cmp
inc
gs
or
in
inc
xor
loop
sbb
inc
pop
inc
out
bound
xor
add
roll
mov
adc
addl
ret
ret
adc
xchg
cmp
cmp
pushf
mov
pop
xchg
jge
push
idivb
std
out
cmpsl
pop
jbe
dec
test
pushf
hlt
mov
out
aad
jns
out
or
cmp
mov
cmp
push
iret
jmp
jmp
push
mov
movsb
icebp
sbbl
add
sub
or
cmp
fs
dec
jns
js
mov
enter
aaa
or
std
mov
stc
xlat
cmp
test
and
stos
decl
jb
aad
in
mov
pushf
dec
inc
fwait
push
out
inc
sbb
fsubs
xor
push
xor
xchg
mov
adc
imul
stos
lret
cmp
lret
pop
lret
pop
mov
or
das
movsb
stos
jmp
or
mov
repz
adc
or
inc
xorb
rolb
cs
lret
mov
sbb
dec
inc
xor
adc
out
cmpb
mov
test
jb
pop
jg
xchg
hlt
repz
cmp
test
or
cmp
leave
subb
mulb
pop
mov
pop
cmpl
movb
jnp
cmp
sub
imul
push
imul
adc
dec
es
je
jbe
sbb
inc
icebp
inc
pop
out
mov
or
adc
jmp
jnp
adc
addb
pop
lds
jbe
xor
pop
aaa
and
push
mov
add
rcrb
ret
xchg
dec
gs
jns
sbb
adc
inc
and
cwtl
and
inc
mov
jo
filds
popa
push
mov
repnz
jmp
push
cwtl
cmp
rcr
adc
and
pop
fisubl
int3
mov
pop
cmc
dec
jmp
scas
lret
mov
fadd
sub
pop
fadds
pop
std
sbb
mov
adc
cmp
xor
movsl
out
or
jb
jbe
jbe
push
lock
sub
sti
shll
mov
xchg
sbb
rolb
inc
pop
data16
nop
data16
shlb
aaa
inc
jns
xlat
add
push
push
push
jle
sub
dec
jo
cmc
sub
lret
push
fmuls
dec
mov
stc
insb
jp
in
dec
mov
sub
pop
movsl
sarb
mov
sub
test
jo
or
push
inc
ja
push
ret
cmp
sub
push
aas
jae
pop
jmp
mov
or
sbb
in
stos
in
dec
mov
int
loop
dec
enter
dec
lahf
or
xchg
mov
ret
jecxz
jmp
lcall
test
jg
leave
pop
sahf
sbb
cmp
xchg
mov
fwait
lret
sti
lods
cmc
shll
cltd
sbb
cltd
dec
ljmp
cmp
cmpsl
or
jnp
out
pop
xchg
pop
sbb
xchg
nop
cmp
fildll
push
and
and
mov
xchg
xchg
sbb
hlt
sbb
fsub
cmc
cpuid
dec
pop
mov
sub
mov
popf
mov
jecxz
orl
leave
xchg
inc
xor
hlt
push
insb
cmp
mov
cs
xchg
xchg
bound
scas
stos
rcrb
sbb
xorl
add
mov
sub
cmp
cmp
push
and
push
aas
jp
mov
or
sub
xor
inc
pop
xorl
add
sbb
lcall
lds
int
repnz
add
loope
adcb
xor
in
or
shl
sub
sub
adc
push
mov
push
faddl
mov
mov
jge
add
in
stc
cmpsl
test
das
cld
mov
fisttps
cmp
or
inc
clc
jge
mov
aad
stos
bound
incl
pop
rcrb
imull
cld
fld
aad
popa
xchg
dec
into
push
pop
push
aam
out
cmpsb
loope
jmp
and
into
test
sbb
and
inc
lret
xor
test
jo
add
les
pop
pusha
sbb
shll
test
fistl
mov
jnp
into
aad
arpl
xor
roll
pop
jl
sub
lods
sub
jno
repz
xor
xor
or
sub
adc
neg
mov
add
mov
cld
sbb
daa
mov
jae
aaa
add
sub
and
dec
mov
mov
sub
xchg
lds
mov
int3
or
jl
mov
mov
les
jne
test
lock
push
add
pop
mov
out
mov
inc
jl
stc
ds
cmpsb
xor
mov
mov
repnz
sub
add
push
fwait
mov
popa
jbe
mov
scas
rcrb
in
push
xchg
movsl
rcll
fdivs
jecxz
pop
aaa
xorb
in
jnp
adc
jl
fildll
mov
aaa
or
jbe
clc
and
inc
out
push
sbb
sahf
mov
dec
outsl
clc
into
jecxz
or
mov
mov
fwait
lahf
cwtl
mov
gs
out
popa
add
mov
fcom
imul
gs
lock
iret
xchg
cmp
lock
pop
fnstenv
bswap
or
jbe
sbb
or
imul
shll
es
or
cld
and
stos
clc
or
mov
jno
mov
jecxz
sbb
adc
push
dec
and
nop
inc
push
das
leave
shr
outsl
imul
mov
mov
push
test
mov
movsl
push
dec
dec
mov
jg
push
out
xor
push
sub
sub
test
xor
cmpsl
rol
pushfw
mov
xor
aad
test
int
xor
dec
mov
sub
ds
inc
sub
outsb
pop
aaa
pop
fs
pop
or
pop
add
arpl
les
and
test
adc
inc
movb
jle
cmc
jl
dec
das
in
push
int
or
pop
ret
dec
cmp
push
cltd
sbb
or
push
lods
mov
fcom
in
pop
dec
loope
fdivr
or
xchg
and
mov
dec
jae
hlt
sahf
leave
add
push
or
data16
in
mov
stc
rorb
stc
imul
xor
mov
sbb
cmp
push
aam
sub
sahf
add
lds
sub
js
in
aas
aas
mov
rol
in
sbb
jns
icebp
ret
movsb
jne
or
cmp
pop
pop
mov
mov
nop
rsm
cmp
pop
mov
clc
lret
repnz
xchg
and
movb
lea
mov
aam
jle
enter
xor
xor
int3
mov
aam
xor
iret
fisubl
jno
sub
and
mov
adc
test
int
enter
or
mov
mov
mov
cld
inc
mov
inc
push
stos
mov
cs
mov
data16
mov
mov
popf
sub
jne
fs
sub
dec
pop
ucomiss
jo
push
jmp
in
mull
mov
bound
sbb
cmp
mov
pop
or
movsb
jo
lea
dec
ret
ds
arpl
outsl
adc
cmc
push
mov
cltd
bound
jg
mov
dec
or
bound
in
js
xchg
pop
out
cwtl
push
push
outsb
jg
js
jnp
xchg
mov
cmc
mov
add
les
loop
lock
pop
push
add
mov
aad
add
and
pop
cwtl
push
push
ret
iret
jns
jne
jne
and
cmp
cmp
dec
mov
mov
add
loopne
fildl
jle
xchg
pop
jno
and
cmp
js
inc
inc
sub
mov
cmp
repz
test
push
dec
sbb
dec
imul
add
jg
sub
add
xchg
mov
sub
loope
int3
push
dec
popa
iret
sbb
ret
out
lahf
rcrb
sub
xor
push
xchg
mov
pop
jbe
stos
daa
std
jp
cmp
cli
sbb
fwait
cs
lcall
loop
divl
xor
enter
xor
mov
push
lret
mov
cmp
pop
popf
mov
mov
pushl
inc
adc
inc
xchg
push
push
add
xchg
jle
add
push
js
data16
sahf
sub
jl
xchg
ljmp
inc
or
data16
popf
mov
stos
int
push
das
cmp
testb
das
nop
xchg
scas
aad
cmpl
decb
pop
fildll
cmp
adc
gs
fistpl
cltd
lock
sub
pop
stc
sbb
loope
sar
sub
out
or
fstps
dec
je
xchg
mov
fisubl
add
bound
rep
bound
xor
test
pop
repnz
lret
test
add
mov
adc
aas
hlt
add
test
mov
pushf
jmp
in
mov
mov
fwait
jo
or
jns
cmp
sbb
stc
pusha
scas
shlb
hlt
jnp
xchg
es
cltd
fucomi
xchg
aad
or
aad
or
rolb
fdiv
xor
sub
movb
es
test
clc
cwtl
pop
popa
jnp
adc
jb
sub
mov
loope
scas
dec
and
or
addr16
out
xor
das
pusha
pop
pop
fcmovne
sub
faddl
ds
popa
jnp
out
aam
add
insl
ds
clc
jge
dec
js
sub
mov
rcrl
sub
sahf
std
testb
sub
pusha
pop
mov
sahf
inc
mov
std
cmp
pushf
mov
es
out
das
mov
fwait
or
mov
push
loope
push
push
sbb
add
out
sahf
inc
xor
mov
xor
pop
pop
call
imul
dec
jb
idiv
xchg
adc
jle
insl
icebp
pop
lock
jb
fs
addb
mov
mov
mov
insb
sbb
push
or
test
inc
testb
pushf
popf
xor
in
ficoml
pop
mov
ffreep
pop
test
adc
mov
pop
jmp
adc
dec
addr16
lret
fistl
dec
arpl
jae
adc
std
pop
adc
sbb
push
movsl
insl
cmp
insl
cmpsl
sahf
dec
sbb
fsts
and
popf
jo
xor
fbstp
jbe
mov
cld
dec
add
jg
in
addr16
add
aad
adc
cmpsl
or
pushf
adc
mov
sbb
ret
xchg
inc
sub
pop
aas
popf
lock
push
adc
stos
xchg
mov
mov
loop
shll
jbe
jo
and
fdivp
jmp
add
mov
cs
xor
jecxz
fidivrl
xor
or
stos
or
andl
ss
jbe
pop
js
add
in
call
cmp
cmpsl
inc
clc
mov
out
fstl
insl
insl
xchg
adc
popf
mov
cwtl
or
mov
sbb
cwtl
stos
test
push
data16
ret
ljmp
in
mov
cmpsb
out
xchg
loope
loope
xchg
sub
leave
shrl
sahf
xor
mov
ja
lock
mov
cmp
cli
shrb
ja
shrl
adc
mov
in
push
fnsetpm(287
adc
adc
das
cwtl
aaa
jnp
xchg
lds
lahf
add
jmp
loopne
adc
dec
mov
mov
hlt
movsl
adc
mov
xchg
test
fsubrl
mov
dec
cs
and
or
gs
push
xchg
and
imul
push
xchg
jge
test
pop
cli
subb
int
sub
fsubl
daa
imul
add
sbb
mov
popw
xor
fdivr
mov
pushf
test
ret
fdivrs
lock
sbb
push
push
stc
lret
mov
loop
scas
dec
adc
cmp
frstor
rorl
popf
dec
repnz
jle
cltd
push
mov
movsb
ljmp
jmp
push
mov
repz
dec
mov
dec
scas
sbb
scas
cltd
sub
cmp
fnsetpm(287
repnz
pop
lds
xor
xor
fildll
lret
pop
mov
push
push
lock
jnp
mov
call
repz
mov
pop
std
popa
lret
mov
xor
lcall
cmp
and
push
sub
iret
push
iret
xchg
xchg
adc
outsl
or
movsl
jge
adc
inc
pop
push
data16
jb
jp
jge
das
xor
inc
roll
mov
repz
cmp
jge
rcrb
mov
cmp
cmp
pop
push
imul
mov
lret
lods
les
dec
push
xchg
cltd
out
sub
es
insb
cmc
in
jns
scas
pop
inc
or
push
and
xlat
mov
jmp
pushw
inc
pushf
ret
dec
daa
push
xor
cli
lret
outsb
cmpsb
out
pusha
mov
push
dec
jne
xor
and
jae
stos
sub
sub
adc
outsb
in
add
incl
lcall
mov
pop
inc
mov
call
xor
jmp
lods
loope
cmc
aam
sbb
adc
inc
and
pop
lock
in
jmp
fisubs
xchg
mov
movsb
or
sbb
sub
and
dec
fldl
and
push
in
subb
fidivs
pop
lods
cs
sub
outsl
jb
aad
cwtl
xlat
xor
insl
sahf
mov
push
push
repnz
mov
outsl
push
lds
dec
cwtl
cmp
ss
cwtl
mov
lcall
inc
dec
rorl
inc
mov
pop
or
jne
test
into
imull
cmp
iret
dec
movsb
cmp
sub
clc
in
add
ds
dec
add
mov
add
mov
bound
sbb
or
pop
iret
aad
aaa
hlt
out
adc
sbb
subb
sbb
jo
push
jp
xchg
ds
inc
xor
mov
cli
cmp
je
xor
repnz
mov
lods
mov
movsb
jl
lods
jecxz
std
inc
jle
clc
cltd
hlt
fsubrl
fs
push
cmc
jo
mov
outsb
push
ret
stc
cmp
in
sub
and
lcall
fwait
lahf
cmc
mov
jg
add
aad
and
sti
xchg
push
jmp
stc
sub
gs
in
jmp
es
xor
rcr
stc
lock
add
inc
sbb
outsl
adc
rolb
sub
mov
adc
dec
inc
lods
lods
mov
fmuls
mov
imul
cs
pop
xor
cmp
lods
xchg
in
jg
lock
xor
and
cs
aam
push
jg
mov
loope
fs
rcrl
jae
add
and
and
or
xor
lret
ret
adc
testl
jo
fwait
mov
mov
inc
mov
movsb
das
into
mov
sysexit
imulb
rolb
fimull
mov
xchg
test
mov
xor
push
adc
fimull
hlt
sub
pop
fadd
push
adc
sub
out
out
adc
rcrb
mov
out
inc
aas
outsl
or
test
fimuls
pop
add
inc
add
jno
mov
in
sahf
cmpb
es
inc
mov
jge
cld
insl
ds
push
xor
mov
lock
push
scas
dec
mov
pop
push
dec
int3
add
sti
and
icebp
add
sbb
sbb
cmp
push
cmp
or
add
or
fisubrl
jbe
lock
lods
pusha
cmp
hlt
xchg
test
xlat
jg
arpl
lea
mov
int3
xor
push
addb
mov
inc
and
dec
imul
mov
mov
or
xor
mov
sub
mov
fsubrs
icebp
mov
aad
cmpsl
lret
xor
add
jno
les
mov
pop
enter
outsb
xchg
das
bound
addl
cmp
jle
cli
mov
ret
or
jnp
push
push
lret
ret
dec
fcom
lea
pop
daa
and
cmpl
sub
mov
push
test
rolb
cmc
dec
int3
xor
arpl
lcall
pop
xor
push
out
or
xchg
int
push
mov
inc
xor
cltd
clc
pop
mov
ds
mov
cltd
cmpsb
xchg
pusha
mov
aaa
addr16
outsl
xchg
xchg
pop
xchg
std
lahf
lods
xor
loope
lock
rolb
mov
and
xchg
mov
loope
pop
insl
pop
imul
jo
dec
xor
adc
imul
repz
fsubs
insl
in
lods
fdivs
add
mov
sahf
stos
arpl
dec
cmp
imul
and
cmp
jp
adc
mov
fxtract
push
lret
jecxz
inc
xchg
leave
jmp
sbb
mov
pop
inc
jle
or
jo
dec
adc
fimull
mov
cmp
push
movb
push
leave
enter
ja
sub
dec
push
stos
sbb
or
movsb
or
xchg
mov
ja
in
adc
sarb
ret
cmp
notb
hlt
shrl
sbb
mov
addr16
lret
out
rcr
int3
jb
pop
and
lcall
scas
add
lock
inc
xchg
leave
xlat
mov
addr16
and
cmp
xchg
ret
push
or
xchg
lcall
adc
inc
fiadds
js
rcrl
sub
ja
mov
or
daa
outsl
icebp
xchg
fstl
jle
sbb
and
andl
jmp
in
sahf
add
lahf
ficompl
xor
or
adc
or
mov
dec
or
scas
sbb
sti
jb
mov
int
jle
rcrl
movsl
jmp
imul
orl
fists
lcall
mov
push
aad
mov
xor
adc
and
mov
out
cmp
xchg
inc
fdivr
jnp
mov
mov
mov
or
es
jmp
sbb
jb
adc
repnz
push
pop
enter
jecxz
lock
dec
sarb
add
dec
push
push
ret
jnp
clc
mov
rcrl
xlat
inc
adc
ljmp
lds
sbb
mov
push
inc
push
shlb
and
scas
mov
dec
loope
xchg
cmpsl
rsqrtps
imul
dec
aaa
outsb
ret
in
orb
mov
nop
insb
or
or
cli
cmpsl
bound
or
repnz
rol
popa
mov
jge
pop
test
cmpb
mov
je
jae
daa
lret
mov
xor
and
xchg
out
adc
insl
cwtl
lea
out
das
adc
mov
sub
sub
stos
jo
jns
cmpb
addr16
sub
fldcw
aam
jecxz
fists
lods
mov
imul
cmp
mov
mov
push
aad
jne
pop
mov
mov
mov
push
movsl
sbb
out
push
outsl
push
pop
popf
pop
cmp
inc
mov
dec
pop
insb
nop
lods
sub
test
push
pusha
dec
insl
nop
cmp
cmp
pop
lods
out
mov
adc
out
iret
lea
test
imul
stos
outsb
cli
loop
jbe
cmpsb
push
push
pop
lods
pop
out
fstpl
pop
test
inc
jg
or
repnz
cmp
popf
mov
add
enter
add
pop
popa
push
pusha
pop
inc
jns
scas
xor
inc
mov
stos
sti
pop
addl
or
cwtl
mov
aas
scas
data16
imul
lods
and
jmp
nop
cmpsb
sti
pop
dec
add
dec
pop
lds
jp
xor
pop
aas
subb
push
mov
or
data16
test
add
adc
mov
xor
int
pop
fnstsw
dec
xor
dec
test
aas
cmpl
xor
call
xor
addb
cmpsb
add
mov
sub
xchg
sub
and
in
dec
mov
jecxz
icebp
lcall
mov
mov
or
sbb
adc
lahf
add
mov
pop
push
nop
push
xor
call
adc
pop
lret
jb
sbb
add
stc
mov
sbb
lea
int3
pop
lds
or
push
negl
and
mov
stc
mov
or
push
cmp
sbb
sahf
pusha
call
add
sti
xchg
pusha
shll
cltd
imul
pop
in
add
cmp
test
lea
dec
jge
hlt
daa
mov
fldl
ret
dec
push
stos
pop
test
dec
cwtl
lret
bound
inc
enter
scas
push
cli
cmp
add
aad
inc
repz
outsb
lods
cltd
sbb
jae
out
jae
pxor
in
add
sub
mov
lret
repz
mov
mov
test
adcl
mov
jmp
jg
movsl
aaa
and
negl
adc
xor
fcmovbe
out
loop
sub
xor
cmpsb
bound
call
std
mov
rclb
pop
dec
jbe
add
loopne
gs
pop
adc
push
add
mov
stos
mov
call
dec
jmp
xor
mov
push
fimull
pop
pop
mov
js
data16
or
pop
nop
cli
leave
mov
cwtl
mov
adc
mov
cmpsl
shlb
push
push
in
or
lock
dec
aam
adc
aas
shrb
pop
mov
out
mov
rcr
mov
mov
test
mov
ret
ret
sub
imul
or
pop
sub
adc
frstor
inc
aam
pop
cmp
in
fidivrl
ret
cmp
into
add
pop
cmpsb
jp
add
xchg
out
mov
call
xor
fstpt
jge
or
mov
cmp
outsb
mov
out
test
test
xor
xor
push
gs
and
fimull
sbb
out
std
out
jo
sbb
iret
push
lds
adc
pop
subl
std
cli
and
ret
sbb
test
xchg
mov
loop
sbb
cmp
fwait
jo
ss
loope
mov
add
pusha
sahf
sahf
addr16
push
js
repz
pop
mov
jnp
clc
sub
iret
mov
xchg
lods
shlb
jecxz
fbstp
sub
or
inc
into
test
xor
pop
loope
xchg
in
pop
out
jg
xorb
aas
mov
stos
roll
ds
in
movsl
add
std
push
pop
je
xchg
popf
mov
fnstcw
jmp
in
icebp
mov
push
sub
xor
popa
sub
or
leave
enter
push
inc
inc
outsl
mov
jae
test
mov
inc
or
jb
sti
ret
lret
mov
sbb
sbbb
xor
sbb
in
hlt
sar
ret
xchg
push
or
mov
sub
insl
inc
jge
pop
int
pop
jns
xor
cmpsl
push
addl
xchg
fistpll
xor
jno
movsl
pop
mov
mov
in
add
push
add
push
out
stos
pusha
mov
cwtl
fsub
arpl
test
jae
in
adc
ljmp
push
mov
cs
sbb
mov
xchg
dec
rcrb
les
aas
mulb
bound
or
xlat
gs
dec
imul
inc
out
inc
lahf
mov
out
adc
sub
mov
rol
cmp
xchg
hlt
cmpb
xor
jle
dec
mov
cmp
mov
add
lcall
adc
loop
sbbb
mov
dec
mov
mov
adc
cmp
rclb
hlt
imul
push
lahf
push
inc
inc
repnz
stc
rol
sbb
mov
add
cmp
cmp
mov
iret
xchg
add
push
sub
jns
or
jne
jle
pusha
sbb
mov
mov
hlt
dec
lret
loopne
pop
repnz
outsb
dec
mov
mov
arpl
mov
push
lret
mov
imul
jp
shll
out
cmc
mov
or
call
dec
xchg
cli
cwtl
icebp
xor
dec
pop
outsb
pop
ret
fisubs
or
scas
ret
rorb
int3
fisubrl
xlat
and
dec
inc
clc
jae
stos
xchg
sbb
fs
and
xchg
loopne
popf
mov
push
cmpsb
lret
push
dec
sub
imul
mov
repnz
mov
jp
push
cmpsl
ds
mov
push
in
sub
pop
insl
pop
sbb
minps
daa
xchg
lea
or
test
flds
outsb
cmc
mov
pop
inc
sbb
push
fs
pusha
popa
clc
and
sbbl
out
clc
test
into
inc
push
xlat
es
fwait
sbbb
pop
int3
cs
pop
movsl
dec
iret
mov
dec
aas
gs
mov
js
rcll
push
test
xchg
repnz
sub
xchg
xchg
push
push
jmp
pop
out
jo
sbb
push
and
icebp
orl
mov
fimuls
inc
popa
jp
out
ds
xchg
sub
pop
fidivl
icebp
sub
mov
sub
push
notb
dec
adc
mov
xchg
xchg
cmpb
push
aad
jno
or
ss
xor
arpl
testl
sbbb
inc
push
clc
sbb
sbb
add
mov
and
fs
add
sub
mov
in
fwait
pop
mov
jno
push
xchg
lods
pop
inc
scas
sub
jbe
inc
dec
sbb
cmp
jbe
repz
pop
jae
or
outsb
sub
pop
movsb
inc
shl
aaa
int
in
cmpsl
cmpsl
mov
fidivl
imul
and
pop
jmp
pop
data16
and
xchg
xor
dec
lea
xchg
push
xchg
mov
inc
add
cmp
jbe
loop
shll
add
xchg
clflush
push
adc
sahf
pop
imull
repnz
pop
negl
and
fcmove
les
les
movsb
sub
cltd
pop
adc
push
jp
loop
stos
pop
mov
shl
je
xor
mov
mov
ja
dec
outsb
cld
repz
addr16
pop
test
adc
mov
push
cmp
adc
stc
push
rcr
mov
inc
add
icebp
mov
imul
nop
jge
in
jo
aas
push
std
push
sbb
dec
rorb
jmp
mov
dec
int
int3
sbb
mov
xchg
mov
out
dec
repz
jno
test
lcall
fldl
int
sbb
cmc
xor
cmp
mov
mov
cltd
in
adc
add
mov
ja
in
loopne
xchg
sbb
add
iret
xor
cli
ficoml
xchg
pop
fstpl
sti
lcall
sbb
jp
xchg
das
sti
dec
mov
xchg
or
int3
xchg
mov
loope
aas
push
gs
addr16
jne
test
xchg
sbb
inc
lock
mov
scas
mov
mov
std
dec
icebp
mov
pushf
inc
sub
arpl
dec
aad
cmp
adc
out
stc
je
loopne
jnp
jbe
ret
cld
testb
in
cmp
lret
lds
out
xorl
inc
fdivrs
xlat
shl
hlt
rorb
adc
cmp
xor
imul
stc
add
rcrl
dec
or
sub
scas
mov
lods
mov
dec
into
adc
dec
cltd
mov
fwait
movsl
jmp
sbb
mov
insl
xor
dec
cmpsb
and
ljmp
aad
and
jecxz
push
addl
xchg
roll
std
add
fdivs
cmpsb
jne
xchg
inc
ja
movsb
pop
pop
sub
push
lea
push
rorl
in
jle
mov
pusha
push
out
jge
mov
daa
fs
rcll
repz
pop
pop
rclb
pop
push
add
push
ss
jnp
jecxz
scas
das
sub
xchg
xor
stc
pop
insl
adcb
test
sub
ljmp
stos
dec
xchg
sbb
movsb
or
lret
shll
flds
ds
sub
das
xlat
xchg
enter
cld
stos
adc
hlt
test
loopne
std
add
mov
or
xchg
sahf
lret
xchg
dec
es
or
jle
fidivrl
hlt
fildll
fnstcw
cld
pop
leave
lret
stos
fadd
dec
mov
dec
out
or
xchg
imul
popa
or
xor
add
inc
pop
jl
jmp
and
cld
pop
pop
mov
dec
lods
pop
xchg
xchg
notl
adc
fsubl
push
jae
scas
add
sub
mov
data16
mov
jbe
xor
je
fucomp
xchg
push
sbb
ret
leave
les
sbb
loop
nop
pop
jb
daa
loopne
mov
push
test
push
adc
nop
cmp
xorl
rol
or
mov
adc
cmpsb
lahf
mov
insb
movsl
inc
call
dec
ss
loope
ljmp
movsb
fisubl
ficomps
stos
paddw
cltd
stos
js
and
popa
mov
push
jmp
cli
ss
cwtl
push
leave
leave
mov
jno
jle
mov
cs
movb
adc
jo
pop
jp
mov
mov
xlat
popf
pop
fsubs
and
cmp
xor
add
mov
and
movsl
dec
cmp
dec
movsl
out
adc
std
jne
test
cmp
ficomps
xor
ret
sub
mov
clc
inc
pop
mov
xchg
cmp
adc
xor
gs
or
inc
jae
adc
ds
adc
jb
sbb
and
mov
inc
sarb
jnp
adc
fsubrl
dec
nop
push
pop
imul
inc
rcrb
int
divb
popf
pop
dec
push
lcall
jo
lret
data16
dec
pop
jp
push
icebp
sub
in
push
mov
mov
leave
inc
push
mov
dec
mov
fadd
cmpsb
cmc
jb
cltd
lods
ljmp
mov
fs
loop
inc
dec
mov
add
mov
jnp
loopne
xchg
xor
lods
jo
inc
mov
inc
rclb
lods
xchg
jp
daa
and
jp
outsl
jae
mov
rcrb
xchg
sbb
scas
out
xchg
ss
lcall
jmp
arpl
cmp
add
xor
push
scas
mov
ljmp
mov
add
iret
lcall
lock
loop
lret
inc
enter
pop
and
aad
xlat
cmp
xor
mov
push
jge
cld
addl
ds
shrl
std
insl
js
cmpsl
or
divl
lock
out
push
sbb
inc
jb
jp
inc
inc
mov
lea
push
mov
cmp
push
mov
mov
sbb
movsl
mov
arpl
xchg
fstpl
cmp
pop
fs
popf
push
in
jecxz
test
mov
in
ja
xor
dec
pop
hlt
lahf
cltd
popf
arpl
cli
mov
adc
and
lahf
jp
gs
mov
fistpll
mov
mov
push
lret
out
data16
dec
imul
loopne
nop
test
dec
les
je
mov
aaa
xchg
sti
aad
push
aad
insl
cld
lcall
fs
cmc
into
hlt
test
sbb
mov
cmp
jo
popf
in
shlb
repz
push
lcall
gs
in
pop
mov
adc
adc
xor
cltd
adc
sub
add
lods
int
add
xor
mov
jnp
popa
xchg
and
inc
mov
mov
mov
xchg
ret
pop
hlt
xor
es
jno
clc
rcll
and
fwait
imul
stc
out
lods
pop
dec
sub
and
mov
xor
shl
xchg
jo
popa
fiadds
pop
push
outsb
sbb
call
dec
inc
lea
mov
sub
cmp
lret
insl
add
sti
and
cmp
in
sbb
push
test
jno
rclb
cmp
pushf
xchg
shl
sub
pop
mov
das
add
lret
dec
xchg
inc
adcb
fiaddl
icebp
shlb
ss
outsl
or
in
add
pop
lods
icebp
mov
xchg
xor
cld
icebp
cmp
and
lret
clc
cli
ret
sub
test
rorb
nop
lret
es
sbb
ficoms
dec
test
cmp
xor
clc
ljmp
stos
es
jmp
pop
xchg
fisubrs
lret
lcall
inc
add
xchg
stos
pop
fsincos
inc
adc
das
inc
popa
hlt
clc
mov
fadd
jge
inc
stos
and
xchg
icebp
xor
cmp
icebp
and
mov
pop
xchg
jbe
or
lods
fidivrs
loopne
js
lahf
xor
ret
mov
fisttps
adc
outsl
cmp
inc
or
xchg
inc
mov
mov
xchg
ja
lret
jmp
mov
out
mov
mov
or
jnp
andl
sahf
je
mov
mov
movswl
push
movsl
xchg
pop
mov
pop
pop
sbb
mov
call
jns
xor
int
xchg
cs
and
rcr
push
fwait
inc
or
imul
sbb
inc
pop
dec
and
and
icebp
xchg
mov
test
jl
xor
cs
pop
int
andl
xor
sbb
or
sbb
cmc
out
loopne
pop
lods
aam
mov
outsb
dec
fsubr
sbb
aad
loopne
ret
jno
cmpsb
mov
ja
jbe
add
mov
fwait
xor
mov
and
mov
test
push
hlt
pop
insl
nop
add
popa
dec
data16
ret
dec
add
mov
push
xchg
fldcw
mov
or
mov
inc
loop
sti
add
in
and
inc
xor
jl
out
fsubr
out
xchg
jae
daa
and
cltd
xchg
popf
cmpsb
and
push
jnp
shlb
lock
mov
push
jns
jne
les
out
pusha
or
enter
in
mov
fbld
aam
test
movsl
leave
imul
push
pop
pop
push
sbb
in
lock
inc
push
jne
mov
jno
ds
vmaxsd
not
or
xabort
xlat
xor
mov
jmp
fildl
xchg
pusha
adc
jb
push
xchg
push
inc
push
cld
push
loopne
fstpl
adc
add
loopne
imul
test
das
fcomps
xchg
std
jae
mov
adc
sbb
pop
sbb
or
cmp
fcmovnu
scas
pop
sub
xchg
jbe
adc
mov
mov
push
sti
stos
mov
mov
je
mov
repz
cwtl
lds
jo
push
adc
mov
jae
in
xor
dec
mov
popa
dec
stos
inc
mov
xor
cmpsw
sub
stos
fldenv
lds
jmp
mov
add
pop
sbb
lods
xchg
call
out
cwtl
in
notb
imul
scas
jo
ljmp
xchg
dec
push
adc
aas
mov
mov
bound
push
iret
lcall
test
mov
push
cwtl
cs
jge
cmpsl
inc
sbb
scas
fisttps
ret
ja
outsb
out
out
fnstcw
mov
imul
add
call
popa
push
push
lock
add
inc
jns
loope
push
cltd
push
outsl
and
mov
push
mov
ret
add
inc
lock
mov
in
aas
es
out
fadds
clc
mov
fstpl
mov
xor
lods
push
or
dec
mov
mov
inc
data16
xor
mov
and
aad
cmp
xchg
sub
mov
add
sbb
pop
lret
xor
leave
movsb
outsb
pop
stos
test
mov
lret
and
or
mov
scas
push
cwtl
or
push
out
repz
cli
adc
scas
ret
sbb
fwait
sub
fsts
clc
lds
fcoml
sbb
fcoms
aas
jae
inc
mov
aam
lock
enter
add
out
xchg
push
dec
movsb
push
xchg
or
mov
jmp
add
mov
outsl
dec
and
arpl
sbb
outsl
xchg
or
add
addr16
enter
or
mov
test
add
or
xchg
nop
xor
mov
fisubl
push
rcrl
add
xor
xor
push
pop
rorb
push
imul
in
sub
fimuls
jae
imul
std
mov
int
testb
dec
mov
popf
cmpsl
mov
lods
xchg
dec
pop
cld
lgs
dec
mov
pop
pop
sbb
arpl
pop
xchg
pop
sbb
out
and
clc
push
push
push
xchg
sbb
sahf
outsl
ja
mov
push
imul
nop
leave
mov
stos
insb
out
popf
fcmove
xor
pop
xchg
mov
lret
mov
inc
xchg
pop
inc
ret
or
mov
dec
push
aas
aaa
sub
xchg
sbb
repnz
fidivrs
insl
fldt
int3
mov
add
mov
mov
or
dec
push
mov
mov
lods
mov
inc
mov
inc
pop
fwait
test
adc
lock
test
mov
or
jb
insl
ljmp
loopne
imul
jbe,pt
pop
test
push
dec
or
xor
sbb
fists
push
push
arpl
cmpsb
and
sub
stos
mov
pop
sbb
push
xchg
lahf
cmp
imul
stos
pop
fcmovu
mov
jne
in
aad
pop
rcl
xchg
enter
sub
lahf
ror
jns
ret
push
mulb
xchg
sbb
and
mov
aas
jo,pn
xor
dec
and
cmpsl
enter
and
or
test
pop
into
push
pop
xor
sbbl
dec
add
stc
xchg
aas
mov
lcall
pusha
adc
or
jo
add
cld
fistps
fwait
repz
repnz
lea
loop
mov
pop
sbb
notl
push
sub
pop
loop
pop
lock
add
sbb
mov
adc
das
lret
clc
fsin
pop
cli
pushf
xor
test
arpl
out
shr
fstl
loopne
ljmp
adc
push
pop
or
sbb
cmp
cltd
int3
add
cld
add
xor
xchg
cwtl
xchg
dec
mov
out
sub
mov
mov
sub
pop
jl
jns,pt
mov
mov
enter
test
cmpsl
gs
inc
pop
sbbb
bound
adc
out
jge
addr16
inc
jno
stc
dec
pusha
test
sub
stc
pop
cmp
push
xchg
loop
shl
out
sahf
shlb
pop
jae
into
cmpsb
xchg
lahf
into
loopne
push
sbb
in
lcall
jnp
ss
pop
pop
out
arpl
jo
mov
std
in
dec
cmp
jge
mov
xchg
into
std
rcll
ja
cmp
jo
lods
dec
stos
insl
push
enter
icebp
sub
sbb
in
push
hlt
negl
into
mov
mov
fisubl
lret
pop
out
sbb
xor
inc
addl
sub
cmp
mov
adc
cmp
and
mov
and
jp
std
sub
rorl
push
inc
sub
cs
jns
lds
push
xor
js
stos
inc
jb
enter
xchg
imul
mov
fstl
dec
jle
repnz
inc
sbb
ss
aad
jle
jecxz
cmp
cli
mov
sti
out
xchg
js
pop
push
inc
xorl
sti
icebp
mov
nop
fs
out
push
pop
rcrl
jno
fistpll
push
xor
sub
dec
gs
mov
push
dec
push
lret
cmc
je
mov
lods
xor
jne
and
xchg
xchg
push
fbld
fimull
movsb
pop
push
inc
push
push
push
dec
std
add
sbb
cld
test
shl
adc
mov
negb
faddp
shlb
mov
inc
inc
mov
cmp
leave
lretw
mov
xor
loop
sbb
and
mov
jnp
adc
mov
xchg
and
sti
dec
mov
push
jle
mov
loope
pop
lock
imul
loopne
push
pop
push
add
adc
dec
mov
in
push
cld
and
mov
mov
mov
xchg
xor
pop
adc
dec
mov
mov
dec
adc
push
inc
aas
aas
mov
mov
jbe
jl
pop
rcl
pop
sbb
insl
dec
xlat
jnp
jo
add
jmp
push
mov
mov
inc
lods
pop
aaa
sarl
stos
inc
push
stos
push
fisttps
hlt
movsb
rol
dec
lods
dec
jmp
repnz
add
cmp
cmp
pinsrw
inc
lret
inc
and
in
in
mov
fsubrp
fdiv
push
mov
cld
bnd
in
adc
in
jecxz
sub
cmc
inc
push
inc
and
ja
scas
inc
xlat
imul
andl
pushf
xor
leave
or
movsl
push
xchg
inc
pop
imull
jge
jmp
pop
cld
mov
push
fidivs
cld
fisubl
or
js
sbb
mov
pop
in
dec
dec
jno
in
je
mov
shrb
lret
or
int
cmpsl
popa
mov
scas
adc
push
daa
pop
dec
jp
jo
jnp
fidivrs
je
xorl
sbb
loopne
sahf
mov
gs
jecxz
in
mov
and
push
add
xor
xchg
ficompl
data16
bound
jp
outsl
and
loope
mov
pop
shlb
clc
in
in
mov
lock
es
movsl
xchg
inc
ja
out
scas
ret
mov
pop
ds
mov
jae
repz
mov
mov
bound
mov
sbbb
push
clc
mov
popl
or
lds
and
inc
cmpsl
xchg
sub
pop
push
mov
add
and
and
movsl
mov
daa
add
and
enter
dec
cld
aaa
popa
inc
jle
repz
addr16
xorb
in
dec
or
push
push
dec
bound
jl
push
scas
cmp
pop
and
out
and
lock
pop
jae
fistl
jno
rorb
xchg
rol
je
jp
pop
push
data16
outsb
mov
jl
loope
sbb
les
cmp
jle
sti
ret
cld
mov
cmp
enter
dec
movsb
scas
xchg
movsb
arpl
cld
and
jns
mov
xor
mov
lea
push
inc
iret
call
inc
mov
sarb
in
popa
sub
push
out
out
movl
add
loopne
test
arpl
mov
or
testl
out
cmpsl
movsl
jo
mov
fldcw
enter
cmovl
into
sub
jbe
lea
daa
lcall
xchg
mov
jae
mov
cwtl
lds
mov
add
rolb
movsb
lcall
sahf
push
je
inc
sti
shll
cmc
gs
and
push
sbb
rolb
rclb
adc
pop
jne
loopne
adc
lock
ss
stos
and
pop
rcl
out
ss
rorl
mov
out
test
dec
stos
add
test
in
adc
mov
mov
and
jp
dec
xor
add
sti
or
and
lret
cmp
mov
mov
call
dec
ficompl
lock
fwait
xor
les
pop
aad
shlb
mov
mov
and
testb
jne
xchg
loop
xchg
or
push
jmp
or
mov
sub
inc
sub
test
outsb
test
rcll
insb
pop
xchg
or
xchg
sbb
out
inc
xorl
jb
into
cmp
es
fwait
aas
lahf
imul
gs
pop
dec
pop
push
aas
icebp
fidivs
cmp
leave
mov
test
or
or
push
pop
andl
push
sbb
xchg
orb
fbld
xorl
pop
xchg
and
daa
ret
popl
ljmp
mov
aas
stos
jp
mov
jmp
adc
mov
mov
sbb
movsb
sub
push
incb
xchg
mov
int
or
or
mov
xchg
and
aas
enter
dec
or
jns
fldcw
mov
cmc
lods
shlb
int
popf
arpl
out
repnz
in
fldt
rcrl
mov
xchg
dec
aad
call
mov
das
cs
mov
mov
xor
xchg
notl
pop
adc
inc
pop
sti
inc
add
mov
push
sbb
aad
sub
jge
call
xchg
fbstp
inc
xor
stos
out
aas
fimull
test
xchg
incb
and
and
mov
pusha
sarl
in
push
das
pop
xchg
or
push
cli
mov
dec
mov
adc
sub
xor
or
jg
xchg
or
jns
rcll
mov
scas
and
jp
xchg
arpl
pushf
cmpsb
insb
push
mov
pop
fmul
test
stc
test
outsb
pop
pop
mov
mov
inc
lods
and
push
sub
and
push
dec
pop
fcmovu
push
or
ret
and
jae
nop
bound
mov
inc
xor
lret
mov
inc
add
into
fimuls
fdivl
ljmp
inc
negb
push
out
xchg
cmpsl
mov
fisubrl
in
sub
jnp
negl
test
xchg
dec
mov
daa
sbb
cmp
push
fiadds
fldt
pop
mov
cld
xor
pop
push
aaa
dec
enter
inc
jbe
call
enter
push
shll
hlt
mov
xchg
and
daa
adc
cwtl
jbe
jmp
xchg
out
fwait
pop
jo
popf
jo
in
sahf
insb
pop
stc
sahf
fcompl
jecxz
pushf
mov
and
imul
icebp
push
test
stc
les
sbb
es
xchg
mov
mov
mov
aam
sub
mov
xchg
notl
dec
inc
inc
dec
cmpsb
fwait
mov
mov
scas
loopne
repz
ds
ret
cmpsl
and
push
lret
cltd
dec
and
jmp
xor
aas
adc
push
cmp
or
jl
ret
jmp
lds
rolb
push
xor
mov
mov
push
aaa
orb
cmp
mov
cmpsl
adc
popa
addr16
dec
fs
cltd
dec
sub
insb
sub
dec
ret
mov
mov
in
cmp
pop
hlt
mov
stc
daa
in
pop
inc
hlt
lret
push
mov
cld
popa
dec
adcl
fcomi
aaa
es
push
lock
or
xor
xor
fs
clc
loopne
xchg
mov
aad
sbb
popa
mov
lret
cltd
in
shl
movsl
and
fisttpl
aad
sti
cli
adc
adc
pop
and
sub
repnz
pop
arpl
dec
jne
es
sbb
lea
jb
adc
popf
mov
add
mov
cmp
pop
lods
cmpsl
movsb
icebp
xchg
insl
imul
sub
cmp
test
outsl
and
jle
enter
mov
mov
push
pop
fcmovnb
insl
push
mov
mov
lret
fs
aas
sarl
or
or
adc
push
adc
jns
or
inc
adc
add
cs
jmp
repnz
std
stc
test
int
fldt
mov
sahf
lods
mov
aaa
mov
addr16
aas
icebp
jo
ljmp
push
rcll
lret
loop
lods
jo
sub
push
inc
sbb
popf
xchg
outsl
jmp
stc
cmp
fdivrl
pushl
test
shrl
sub
or
dec
inc
cmp
xor
xchg
loop
stos
sub
aas
mov
nop
pop
jg
cmp
cmc
pop
movsb
cs
pusha
pop
pop
adc
inc
lds
inc
gs
sub
loope
shl
rcrb
jg
adc
xor
imul
mov
cmpsb
jge,pt
movl
mov
xor
sub
sub
and
bnd
pop
fwait
xor
pop
mov
mov
add
xchg
push
cld
rcrb
jae
jnp
cmpsl
xchg
xor
mov
mov
xchg
fimuls
mov
sbb
mov
adc
cltd
add
mov
sub
mov
nop
dec
mov
nop
add
loopne
xlat
or
push
cld
mov
je
mov
in
inc
mov
lcall
iret
out
add
mov
xchg
mov
pop
jl
lret
inc
loop
mov
sub
adcb
push
ret
arpl
mov
cmc
bswap
out
aas
popf
das
roll
cmpsb
cld
pushf
add
and
push
jmp
shlb
sub
pushf
jo
xor
or
lret
sbb
sti
push
sub
jge
pop
mov
stc
enter
jbe
cs
xor
rol
std
xchg
aad
test
addb
xchg
or
mov
loope
cmp
bound
outsl
addr16
jl
les
adc
mov
ss
dec
cmpsb
dec
mov
lods
mov
cmp
fstpl
xchg
test
ljmp
sbb
mov
add
cmp
add
push
sti
pop
in
neg
inc
out
sahf
xorb
popf
sub
xchg
xlat
and
mov
subb
push
mov
es
ret
rorl
inc
pop
lahf
lahf
sbb
into
add
movsl
repnz
cmpsl
jp
idivl
fcoms
jbe
out
pop
xorl
cmc
fcomps
imul
in
add
sub
ljmp
xor
ret
not
pop
mov
mov
mov
sub
jo
and
xchg
push
test
dec
stos
mov
mov
ljmp
jmp
call
cmpsb
test
nop
es
cmp
fnstenv
les
ja
shlb
scas
lret
cmp
or
dec
pusha
push
inc
je
xor
das
std
and
mov
push
in
and
inc
inc
into
jmp
inc
jecxz
lret
mov
xor
shrl
sbb
out
lret
cmpsb
leave
nop
ret
jns
xor
mov
mov
mov
sarl
lahf
push
popf
cmpsb
bound
sub
add
lcall
sub
jecxz
testl
repnz
fwait
jne
jecxz
clc
test
mov
aaa
sbb
cwtl
ss
and
push
dec
std
or
mov
jns
inc
dec
xchg
push
push
mov
sbb
aaa
sti
scas
sbb
xchg
jmp
jnp
nop
xchg
jge
shr
inc
in
pop
pop
adc
movsl
xlat
xlat
jo
in
mov
cmp
mov
inc
es
jne
lds
mov
es
lods
pop
or
xchg
mov
jg
adc
add
rorl
push
fs
xchg
pop
stc
mov
lcall
mov
xchg
out
pusha
inc
mov
test
aaa
mov
pushl
in
mov
cltd
inc
imul
sti
push
fstp
in
mov
fidivrl
movsl
cmp
push
jno
sbb
cmp
stc
test
popa
fldenv
push
lods
cs
mov
test
test
rorb
push
adc
sub
lds
mov
movsb
out
adc
xchg
sub
out
mov
inc
in
push
mov
outsl
mov
push
pusha
push
dec
add
cwtl
orb
idivb
adc
push
sub
pop
mov
mov
adc
pop
cltd
lahf
sbb
sub
faddl
icebp
and
outsb
jle
pop
cmp
sarb
pop
out
cwtl
addb
mov
push
mov
pop
cmp
jecxz
pop
sbb
jle
mov
pop
mov
mov
push
mov
daa
xchg
lret
insl
das
lea
or
movb
lret
cmpsl
cmp
aam
lahf
movsb
sahf
fnstenv
xchg
incl
es
addr16
sbb
mov
xorb
mov
xor
jb
inc
and
incl
fnstsw
mov
jp
frstpm(287
push
cmpsl
sarb
pop
frstor
inc
or
mov
negl
xchg
sbb
int
jecxz
sub
mov
cltd
xchg
pop
fsubrs
mov
das
sti
scas
pop
mov
insb
cwtl
pop
pop
jb
cltd
fistpll
aas
mov
lahf
lock
and
iret
imul
nop
pop
test
cmp
xor
add
inc
mov
add
shlb
scas
cmp
dec
jecxz
pop
out
mov
aad
mov
addr16
sarb
push
call
jns
sub
inc
jmp
ss
ficomps
jge
pop
repz
pusha
data16
dec
fcmove
test
add
imul
rclb
incb
cmpsb
jo
out
jmp
repz
rcll
xchg
sbb
mov
cmpsb
jg
mov
fiadds
stos
jns
add
and
ret
imull
lcall
movb
jnp
pop
out
jg
jmp
sub
aam
pop
sar
inc
int
sub
adc
adc
hlt
sub
push
in
cmpsb
dec
outsb
nop
jmp
insb
inc
dec
scas
mov
mov
inc
add
sahf
inc
lret
dec
stos
dec
mov
out
jecxz
sbb
jbe
call
sbb
push
fs
lret
pushf
ljmp
sub
sub
rorl
jle
inc
or
push
hlt
fsubs
aad
cs
mov
push
jne
mov
mov
or
pop
mov
rcrl
fldcw
xchg
mov
jne
aas
out
adcl
xor
hlt
test
pushf
fcmovnb
test
or
xchg
or
jae
movsb
cld
lcall
xchg
leave
pop
push
jecxz
in
add
cmc
inc
aaa
out
sbb
sbb
xchg
daa
xchg
aas
rcrb
lock
std
push
mov
stos
sti
pop
jge
xor
inc
or
pop
xlat
in
mov
mov
test
idivl
sbb
mov
sbb
xorl
rol
insl
cs
inc
sbb
jb
xchg
or
stos
cwtl
outsb
dec
push
cmp
mov
addr16
loop
movsb
add
xor
out
sbb
mov
mov
add
mov
and
pushf
mov
icebp
subl
mov
jb
insb
lods
jle
add
fucomp
lea
out
push
xchg
cld
and
ret
dec
aas
test
stos
mov
sub
jno
jo
xlat
lods
xchg
or
inc
jbe
mov
inc
cltd
push
lods
sbb
mov
int
pop
pop
aam
movsl
enter
shrl
fs
inc
dec
subps
inc
pop
mov
cmp
adcl
shrd
xchg
aad
fs
loop
andl
xor
jns
cmp
ret
push
inc
push
add
hlt
inc
or
cmp
aad
mov
cmc
div
out
jbe
mov
lock
mov
lcall
loopne
add
adc
sbb
inc
sub
dec
add
add
mov
testb
shlb
adc
push
jmp
es
fcmovnbe
push
je
adc
stos
outsl
arpl
stc
popf
mov
enter
cmp
or
push
mov
aad
jne
nop
les
addr16
fdiv
imul
xchg
cmp
ret
jnp
test
nop
mov
sarb
fistpll
mov
jmp
lret
jae
outsb
cmpsl
in
or
imul
mov
scas
mov
sbb
xchg
adc
fnstsw
mov
clc
cmp
jb
imul
dec
scas
aaa
mov
cmp
or
inc
xchg
mov
pop
int
out
xchg
mov
clc
push
push
cwtl
repz
adc
roll
sub
scas
out
pop
repz
mov
fincstp
mov
sub
aad
lret
or
pushf
outsl
movsl
pop
jbe
pop
fisttps
push
inc
cli
aad
jno
pop
mov
push
add
dec
jp
cmpsl
push
testl
in
arpl
mov
pop
out
jge
or
outsl
sbb
mov
js
push
jmp
mov
les
aam
push
jb
sbbl
pop
into
mov
ds
stos
in
fisttpll
adc
popa
clc
cwtl
mov
jecxz
push
xor
pop
mov
push
lret
data16
test
mov
cmp
aad
mov
in
xchg
adc
fisubl
pusha
mov
adc
jl
pushf
cmp
insb
and
dec
idiv
push
aam
add
pop
or
jp
mov
outsl
adc
push
in
cmp
shll
or
fistpl
in
push
filds
inc
and
test
icebp
xchg
pop
push
out
mov
aad
test
dec
mov
xchg
out
out
lcall
sub
nop
mov
jb
outsl
mov
adc
mov
cmp
mov
int3
xchg
dec
jne
ja
add
cwtl
std
sub
dec
or
and
in
lds
add
fildl
jbe
out
add
lcall
xchg
push
or
push
or
movsb
mov
or
pop
insb
enter
aad
mov
cwtl
rorb
fnsave
pop
jp
add
push
pop
ret
pop
pusha
and
mov
push
jmp
pusha
dec
xchg
sarb
in
pop
jg
pusha
sub
jmp
and
dec
or
pop
xor
es
mov
movsl
lahf
xlat
adc
repz
pop
into
inc
jne
shrl
or
xor
jnp
sbb
lret
inc
test
push
jne
xorb
test
and
daa
pushl
int3
stc
mov
cmp
test
push
inc
cmc
in
mov
xchg
rep
into
cmp
pop
outsl
divb
aam
cmpl
outsl
sti
stos
add
dec
lds
inc
jo
lds
push
pop
mov
lret
push
mov
es
push
add
cltd
sbb
push
xlat
adc
aad
test
enter
mov
ljmp
into
enter
hlt
sti
jo
rorl
lods
cmp
outsl
call
test
sbb
lock
cmpsl
mov
push
aas
sub
testb
cld
xor
in
cmp
mov
lods
or
iret
lods
repnz
cld
addl
mov
scas
subb
lods
pop
add
aaa
addb
dec
jnp
pop
sbb
inc
pop
popa
jbe
outsb
jno
jne
and
lock
out
mov
xchg
repz
es
mov
cld
ljmp
lods
jge
inc
push
push
sub
xorb
mov
hlt
adc
movsl
jg
popa
pop
pusha
sbbb
leave
mov
mov
inc
shrl
jne
or
mov
cwtl
orl
lret
mov
dec
pop
cmp
inc
mov
loope
mov
xchg
pop
adc
adc
mov
andl
mov
add
test
dec
xor
adc
jg
in
push
iret
jge
scas
jecxz
shll
jl
sbb
push
mov
movsb
sub
pop
mov
xchg
in
outsl
push
lods
mov
push
lock
idivl
sbb
adc
push
je
sbb
xor
shr
rcl
leave
xchg
outsl
jle
fldenv
sub
je
popa
add
jg
cwtl
mov
lcall
xor
dec
dec
and
jbe
add
push
imul
push
pusha
sub
sbb
stos
int3
test
inc
out
aaa
into
daa
mov
fstl
cld
dec
mov
jmp
push
fsubrl
movsl
sti
icebp
inc
pop
xor
repnz
inc
jb
popa
dec
je
xor
xor
inc
sbb
jp
and
sbb
popf
mov
pop
sarl
xchg
jl
lahf
xchg
int3
outsb
stos
sub
xorl
ss
test
mov
sub
jbe
movsl
hlt
inc
sbb
fstps
push
repnz
cmp
aas
out
xchg
out
into
xlat
repz
cli
cs
add
cltd
pop
jl
jo
popf
out
pop
or
out
shll
outsl
sarb
loopne
mov
fdivl
cmp
adc
test
xchg
xchg
xchg
pusha
addb
xchg
mov
add
add
jecxz
repnz
jns
cmp
lea
jl
adc
mov
lcall
in
ljmp
pop
add
xchg
adc
or
cwtl
push
fdivl
cltd
out
scas
lret
xlat
rorb
incb
js
push
xchg
ss
ja
fisubs
sub
stos
inc
out
push
pop
rcrb
push
mov
cmp
lret
jecxz
stos
push
jge
sbb
imul
insb
test
mov
aaa
dec
mov
inc
mov
sub
stc
cwtl
lods
sub
cs
mov
mov
pop
mov
xor
mov
dec
jnp
cld
cli
adc
xchg
mov
inc
and
iret
movsb
int
lret
jmp
inc
jno
ljmp
xchg
cwtl
in
or
fs
mov
pop
cmp
mov
inc
xor
out
xor
rclb
mov
or
mov
mov
adc
add
cld
les
lock
pop
dec
cwtl
jecxz,pt
jecxz
xlat
ja
lret
lahf
pop
ja
ds
pop
insb
cltd
stos
cmpsl
sub
in
in
es
xchg
jg
insl
sub
inc
incl
lods
or
adc
repz
cwtl
pop
pushf
xor
push
cmp
pushf
dec
outsl
jle
int
jl
int
xchg
xlat
ss
inc
fistl
cmp
je
out
addr16
ds
push
pop
test
pop
idivb
mov
and
add
sub
xor
add
addr16
jb
fnstenv
fisubrs
xor
loope
cmp
xchg
rolb
arpl
push
xor
loopne
sbb
xchg
outsb
cld
sub
pop
jnp
and
xor
loopne
outsb
xchg
fstl
test
sbb
test
xchg
dec
add
sub
ret
mov
and
sbb
xor
or
mov
jnp
jno
addl
shll
xor
jo
dec
repz
aam
jge
cmpsl
dec
cld
mov
fwait
outsl
xchg
jnp
sub
cli
test
iret
sub
cmp
clc
inc
sarl
add
fidivl
loop
lods
xor
stos
xchg
sub
jnp
popa
xlat
jmp
pusha
stos
in
adc
in
pop
aam
push
mov
iret
cmp
and
push
cmp
mov
ds
stos
dec
lret
clc
sarl
in
and
jns
sub
inc
push
sbb
sti
mov
xchg
jl
jmp
notl
jbe
add
mov
cmpsl
in
adcl
dec
insb
dec
loope
js
jmp
int
and
das
popa
dec
insb
and
shll
jbe
xchg
pop
fs
lods
data16
scas
mov
nop
sbb
in
js
pop
mov
push
xchg
aad
loope
into
sub
aad
or
rol
xchg
cs
iret
xor
add
daa
pop
mov
mul
inc
xchg
mov
dec
jno,pn
push
push
xchg
adc
push
sbb
mov
fistps
cli
aam
push
js
ja
sub
adc
lret
xchg
shlb
lret
jmp
insl
mov
sbb
loop
mov
sub
cwtl
xchg
sub
stos
gs
sub
lods
and
jge,pn
pop
pop
push
in
sub
out
sti
or
mov
fnsave
js
xor
dec
outsb
std
jns
sbb
aam
sarl
jg
mov
in
adc
adc
fdivr
push
stos
mov
lods
xlat
sub
sub
lods
pop
les
cmp
into
mov
clc
pop
push
xor
clc
add
hlt
pop
jmp
jae
or
sti
outsb
rclb
sub
rcrb
and
sbb
rcll
and
pop
cmpl
dec
repz
lock
inc
cltd
fidivl
movsl
sub
sub
out
cmpl
jle
or
int3
lock
leave
jns
out
cmpsl
leave
jae
pop
and
movsb
pop
and
ja
and
stc
in
lock
adc
mov
cmpsl
shrl
cmpl
pop
xor
icebp
xor
and
lret
cmp
sti
fwait
cmpsb
adc
mov
outsb
sbb
push
mov
sub
jnp
in
popf
mov
les
lods
sbb
pop
lods
aas
mov
out
cltd
adc
cltd
cmp
sbb
cmp
mov
sub
jecxz
adc
xchg
push
icebp
inc
dec
pushf
xchg
js
aad
xchg
in
push
jmp
lock
xor
cmp
test
lock
loopne
popa
pushf
insl
enter
repnz
mov
movsb
je
in
mov
adc
sub
test
mov
fsubrs
iret
mov
push
or
lds
stos
mov
adc
mov
pop
jo
push
incb
pop
jle
or
outsb
inc
xchg
pop
ds
push
pop
push
inc
push
add
aas
icebp
sbb
test
push
je
and
push
in
gs
adc
lret
xor
xchg
mov
rcr
out
push
lret
ud0
mov
out
inc
mov
nopl
shlb
mov
add
jnp
fbstp
adc
xor
or
pusha
sub
jecxz
or
sahf
xlat
xchg
sub
je
scas
pushf
jge
jecxz
adc
lahf
int3
pop
mov
mov
sub
jl
sbb
or
pop
sti
sbb
scas
push
ret
nop
call
sbb
adc
sub
loop
cld
call
pushf
std
daa
push
test
test
outsl
notb
nop
jae
inc
aaa
inc
fldcw
ret
ficoml
popf
pop
push
adc
mov
cmp
fld1
fnstcw
aaa
or
mov
mov
push
ret
adc
sub
cmp
pop
adc
mov
lret
sahf
sbb
mov
or
fucomi
pushf
and
test
sbb
rol
pop
sbb
push
mov
mov
stos
jg
popa
mov
sub
movsb
out
mov
sub
cmp
movsl
fmul
loop
nop
stc
cmp
pop
mov
ror
xor
jmp
sbb
nop
nop
popa
dec
xchg
dec
mov
ds
sub
pop
push
nop
call
addr16
lret
lcall
jns
dec
pop
push
jg
jle
mov
hlt
jecxz
cmovg
stos
or
outsb
mov
aaa
ret
and
test
cmp
xchg
inc
jno
push
sbb
inc
jle
xchg
aam
testl
jno
mov
call
cmp
in
push
imul
push
xor
stos
cmc
mov
push
loop
data16
mov
pop
jmp
ret
sbb
xchg
xchg
jecxz
pop
adc
and
outsb
cmpsl
enter
pop
mov
xchg
pop
adc
adc
xchg
push
and
and
and
dec
std
popa
aaa
gs
sbb
iret
push
mov
insb
push
fsubs
dec
out
jle
jbe
add
add
nop
sub
stc
ficoms
repnz
sbb
fadd
insl
loope
cmp
inc
loop
jge
in
mov
fists
xchg
mov
or
shlb
mov
pop
in
ret
mov
cmp
inc
aam
loopne
adc
in
jo
imul
arpl
and
jbe
push
loopne
ret
add
je
dec
imul
setae
mov
arpl
ret
mov
ret
in
jae
pop
sbb
mov
mov
sarb
rolb
xchg
loope
mov
pop
or
xor
cs
adc
outsl
in
cwtl
scas
rorl
add
sub
mov
pop
inc
roll
xchg
cli
jmp
outsl
cmpsl
and
cli
arpl
sub
pop
sbb
xchg
cmpsb
push
outsl
xchg
mov
inc
lret
mov
push
in
ja
aam
and
sub
adc
fistps
xchg
mov
cli
jb
sub
pop
jns
push
jb
push
filds
in
cmp
xchg
js
call
enterw
pop
pop
mov
pop
inc
xor
mov
xor
pop
arpl
scas
test
call
cld
or
pushf
movb
push
xor
pop
push
in
xchg
or
sub
sbb
pop
xchg
push
fs
xor
jg
je
in
in
lods
lsl
or
push
js
mov
iret
loopne
insb
movsl
shll
mov
fsubl
xlat
sub
or
bound
data16
in
lret
icebp
es
shll
adc
pop
movsb
movsl
cmp
mov
ds
push
stos
lods
shlb
loope
xchg
mov
sarl
push
fs
pop
leave
mov
sub
mov
lds
movsw
pop
xlat
mov
inc
xlat
jmp
scas
xor
out
xor
cli
inc
sbb
jl
scas
mov
sbbb
out
es
in
cmp
dec
sub
pop
inc
push
jae
rorb
push
je
inc
loopne
ljmp
sub
sbb
push
push
jp
sub
mov
xchg
cmp
movsl
sbbl
xor
xor
insb
or
rcl
or
cmp
inc
clc
push
mov
pop
pop
push
mov
mov
or
pop
cmp
push
fmulp
pop
xchg
cmovae
lods
ja
xchg
lea
sbb
xchg
sbb
or
push
mov
sbb
movsb
popf
xor
mov
mov
out
push
mov
xchg
mov
push
int3
icebp
cli
adc
lret
mov
fnstsw
cld
pop
pushf
and
data16
mov
pop
sbb
out
in
xchg
push
inc
shll
adc
and
jl
aam
data16
jecxz
xchg
ja
out
jae
jecxz
xor
data16
and
jg
into
scas
fisttpll
js
xlat
sahf
cmp
push
sbb
xchg
xor
rol
test
shr
and
insl
insl
in
xchg
arpl
rcr
and
xchg
ja
ljmp
push
jne
sub
rcr
push
into
pop
cmp
adc
into
xor
scas
cmp
aam
add
loopne
loope
xorb
xchg
adc
imul
repnz
daa
mov
or
cwtl
jmp
int3
cs
adc
jnp
bound
ljmp
dec
pop
pop
push
ds
add
add
popa
and
push
adcl
jbe
xor
inc
xchg
cmp
inc
fnstenv
xchg
cmp
std
sbb
movsb
testl
mov
mov
dec
mov
mov
addb
pop
inc
shlb
ja
and
or
out
jmp
stc
mov
iret
dec
xchg
call
pop
mov
fsubr
pusha
dec
add
push
xchg
dec
cli
push
cmpsb
jae
mov
pop
lret
xchg
fcoms
cmc
sub
into
test
mov
test
xchg
sahf
sbb
lea
shrl
lock
xor
mov
sar
mov
xchg
sbb
adc
aam
shlb
inc
cmpsb
xchg
mov
aaa
mov
out
push
mov
imul
rcr
rorb
fsubl
lcall
dec
mov
fcomps
into
pusha
imul
ret
mov
outsb
jbe
jecxz
movsb
das
lcall
push
in
mov
mov
popa
or
pop
fs
call
sbb
mov
jnp
repz
es
inc
into
call
fimuls
mov
lret
orb
shlb
subb
adc
sti
push
mov
in
mov
adc
popl
pop
inc
in
iret
xchg
in
pop
add
sahf
lock
add
push
aam
movsb
mov
jge
insl
mov
out
push
call
icebp
xorl
lcall
lcall
sarl
pop
cmp
stc
sbb
mov
xor
jle
loope
mov
aas
or
out
cmp
mov
loop
jecxz
push
sub
cmp
pop
push
add
pop
push
mov
mov
mov
jo
jbe
rcll
and
mov
movsl
cli
popa
pusha
and
fstps
dec
pop
push
rorb
mov
out
rcrb
cli
pop
scas
mov
fwait
xor
outsl
dec
push
sahf
or
or
xor
out
mov
sbb
inc
add
sub
fmull
fs
adc
aas
mov
cmovg
stos
ds
icebp
dec
sub
repnz
out
add
mov
xchg
add
fsubl
mov
sarl
pop
int
jg
dec
leave
lcall
adc
pop
mov
in
pop
xor
and
ljmp
shll
ja
xor
sub
leave
or
mov
cmp
push
mov
sub
mov
js
cltd
and
add
push
xor
in
ds
test
xchg
loopne
pop
mov
pop
enter
dec
repnz
ds
neg
scas
shlb
mov
std
mov
mov
fnstenv
cltd
pop
cmp
jecxz
xor
loop
xchg
rcrl
jmp
cmp
mov
jl
loopne
mov
and
pop
aam
ret
repz
push
shll
cld
inc
mov
mov
pusha
cwtl
popa
jae
and
fnsave
imul
mov
mov
ljmp
add
jns
testb
dec
dec
cltd
mov
xor
mov
and
jmp
aad
xor
push
push
mov
jns
or
mov
xchg
inc
cmc
or
add
mov
xchg
fs
cmp
and
sub
mov
sub
adc
mov
push
mov
add
cltd
in
jo
pop
outsl
jns
psadbw
mov
jb
xor
outsl
xor
or
cltd
sbb
data16
push
loop
and
lahf
out
xchg
scas
lea
clc
push
movsl
gs
push
cmp
adc
add
gs
gs
ret
or
imul
mov
and
push
out
insl
cltd
push
insl
imul
dec
xchg
xor
or
inc
mov
add
es
pop
xchg
ficomps
inc
das
out
std
pop
add
sbb
test
inc
mov
lahf
jb
call
pushf
mov
xchg
hlt
mov
aas
jge
mov
lds
xchg
insb
mov
in
adc
dec
pop
push
adc
out
sub
or
mov
push
aas
xor
jecxz
clc
cld
data16
push
inc
add
addr16
fcmovu
adc
mov
mov
push
xor
add
xor
push
adc
mov
rolb
xor
out
decl
leave
aas
lret
call
add
sub
mov
sbb
sub
xor
scas
xor
aam
clc
add
pop
sbb
jg
cmp
dec
jo
jns
inc
scas
or
shll
adc
ljmp
push
daa
pop
aaa
cmpsl
lds
nop
in
cmp
ret
add
test
xchg
scas
cmp
sbb
jnp
mov
sub
aas
mov
lret
adc
mov
call
inc
add
pop
iret
or
iret
mov
sub
daa
xchg
and
sbb
mov
cmp
ds
popa
pop
aam
es
aas
or
outsb
sti
xorb
or
js
dec
xchg
mov
mov
test
or
push
add
loope
pop
jbe
scas
push
or
adc
mov
push
ja
ret
xor
mov
test
adc
sub
das
shrl
loopne
daa
outsb
xchg
pop
inc
mov
adc
and
or
jg
jmp
pop
push
sti
push
pop
and
push
jge
scas
cmpsl
aam
out
and
mov
dec
cs
xor
nop
in
sub
jl
xor
sub
mov
inc
pop
test
adc
nop
loopne
xchg
mov
pop
mov
stos
xchg
fistpll
or
lock
std
fadds
out
push
xor
imul
mov
aad
push
imul
jae
xor
movsl
jmp
xchg
and
repz
in
cmp
stos
add
cmp
loop
mov
mov
imull
sub
xchg
adc
out
pop
shlb
rcll
test
push
push
outsl
push
and
lods
jns
dec
jge
gs
cltd
and
or
and
inc
out
jge
scas
mov
cmp
lock
out
ljmp
push
sub
test
add
data16
pop
sbb
dec
xor
xchg
xchg
ds
stos
cmc
scas
push
push
jg
pop
sub
clc
rcl
ss
inc
imul
or
dec
xor
ds
cmp
mov
xchg
add
cwtl
lock
ja
and
cmpl
dec
mov
mov
dec
mov
xor
inc
and
vmovdqa
or
adc
cmp
or
adc
push
call
jns
pop
iret
dec
scas
jecxz
mov
xchg
dec
jp
adc
rcrl
adc
lcall
in
repz
push
cmp
push
lods
mov
lds
adc
mov
sbbb
movsb
inc
push
mov
add
or
mov
pop
push
loop
cmp
and
inc
call
fxam
loop
cwtl
std
jecxz
xorb
lret
push
inc
loop
mov
inc
xchg
dec
cmc
mov
cmpxchg
bound
lea
mov
imul
aas
into
call
mov
pop
cmp
call
adc
push
cmp
or
out
cld
mov
mov
xor
mov
jle
mov
xor
push
inc
mov
or
lcall
lea
xorb
outsl
sub
in
xchg
pusha
push
sbb
push
lods
mov
ret
adc
xchg
rcll
gs
or
jl
movsb
int
push
jle
aaa
xor
roll
add
enter
scas
mov
lret
ret
enter
or
ret
ror
fs
out
cld
bound
sbb
fcompl
sbb
adc
sbbl
cmp
popa
adc
jne
mov
pushf
lea
js
orb
and
adc
outsl
xor
pop
cmp
mov
rolb
push
push
pop
push
push
aam
ret
sbb
or
popa
mov
leave
data16
shrb
cmpb
fdivl
push
cmp
xor
xor
aad
setge
lea
dec
mov
sbb
mov
jns
rcrl
jne
or
sbb
arpl
movsb
dec
dec
mov
jnp
lds
add
xor
mov
pop
mov
xchg
mov
lock
mov
lret
sub
mov
or
xlat
push
or
adc
adc
inc
mov
jge
test
fisubrl
das
ljmp
add
es
pop
jns
adc
sub
jp
cwtl
pushf
or
push
or
je
aas
into
bound
cmc
xor
and
cmp
mov
bound
bound
inc
aas
mov
lds
daa
mov
jge
and
icebp
lcall
ds
in
lock
xor
addr16
aaa
sbb
cs
aad
push
adc
mov
pop
or
push
jb
mov
add
inc
imul
rorl
loop
jb
mov
pop
nop
sbb
push
pusha
in
jmp
out
ret
xor
leave
xchg
push
and
jmp
fninit
adc
adc
cmp
mov
scas
xorb
outsl
add
fbld
into
dec
mov
pop
shl
jne
js
out
push
mov
repnz
pop
mov
jne
xor
add
pop
popa
lahf
data16
jno
xchg
push
add
iret
insb
jbe
mov
out
pop
sbb
mov
lods
dec
arpl
push
dec
lock
xor
call
arpl
scas
test
in
stos
sub
pop
dec
mov
mov
or
xor
sahf
add
pushl
adc
add
sub
jle
sahf
sub
push
lods
cld
icebp
sti
cmpsl
dec
sti
or
scas
inc
loopne
in
jle
inc
sbb
in
xor
inc
jae
xlat
and
mov
mov
and
js
ja
dec
pop
pop
pop
js
imul
outsl
inc
sahf
xlat
inc
sub
jecxz
mov
repz
mov
sbb
xchg
mov
ret
sub
ret
insl
xor
pushw
and
sbb
addr16
adc
lea
jle
jecxz
cmc
das
mov
pop
inc
testb
add
dec
ds
mov
test
jns
mov
iret
jno
scas
push
add
sarb
push
mov
add
and
adc
insb
mov
push
xchg
xchg
int3
push
mov
inc
jo
mov
pop
and
mov
rcrl
push
scas
sbb
popf
xorb
enter
and
roll
push
pop
shrl
xchg
xchg
pop
imul
js
cmc
incl
lds
fbstp
in
mov
push
in
sub
pop
xchg
pop
rcl
scas
sbb
jnp
lret
stc
cwtl
mov
jmp
push
repnz
data16
sarb
mov
icebp
loope
aam
sbb
xchg
ja
push
scas
cmpsb
enter
loop
mov
cmpsl
loopew
cmp
aad
out
daa
test
push
or
bound
and
push
cmp
xchg
mov
pusha
lods
or
mov
jns
mov
cmp
test
mov
shlb
mov
adc
jns
mov
mov
mov
push
push
add
cmpsl
mul
inc
test
add
cmp
loop
fnstcw
roll
and
xor
bound
pop
pop
aam
fwait
stc
adc
pop
rcll
mov
into
pop
ljmp
dec
adc
mov
xor
sahf
call
jo
push
inc
or
in
popf
dec
sti
xchg
outsl
add
loopne
insb
mov
dec
or
imul
mov
jge
in
lea
mov
lret
in
xchg
aaa
in
mov
test
clc
sbb
xor
push
ficoml
rorl
xor
xor
or
pushf
mov
push
mov
mov
sbb
hlt
movsb
cmp
jnp
imul
xchg
loop
popf
push
or
mov
js
sbb
ret
and
filds
mov
testl
adc
adc
inc
les
leave
adc
push
imul
xchg
out
out
mull
movsb
sbb
mov
xchg
dec
push
mov
jg
dec
inc
push
pop
cld
xchg
mov
xor
pop
adc
mov
clc
inc
addl
add
inc
outsl
jl
jmp
and
jns
xor
dec
sbb
out
xor
loop
pop
adc
pop
and
ficomps
fwait
push
or
jbe
fst
xor
popf
je
mov
mov
ja
bound
and
aam
out
sar
xor
push
lahf
mov
outsb
cwtl
jo
test
dec
pusha
add
and
sbb
and
mov
adc
xchg
or
insl
add
or
sbb
data16
in
mov
cmp
mov
scas
mov
iret
je
pop
mov
outsb
mov
mov
clc
mov
outsl
jl
pusha
test
jmp
outsb
repnz
dec
xchg
add
xchg
lock
inc
mov
in
and
nop
pusha
lock
shll
fldl
jg
mov
adcb
rorb
cld
mov
outsl
sub
sahf
out
mov
mov
shll
out
add
adc
leave
insb
loope
mov
out
mov
adc
push
sbb
dec
pop
sbb
xchg
xor
data16
in
dec
lret
ret
lret
push
data16
jle
lock
insl
mov
sbb
xor
mov
out
jge
aad
push
inc
cmpsl
in
mov
push
stos
pop
jns
es
movsl
dec
add
sub
push
repz
push
je
pop
or
test
in
adc
test
jo
inc
fistpll
pop
lahf
push
js,pt
inc
ret
lret
xchg
call
int3
fs
jmp
stos
ljmp
pop
jecxz
inc
lds
hlt
xor
movsb
cld
mov
mov
jmp
scas
xor
push
inc
pop
sbb
repnz
and
les
test
data16
jne
push
adc
cmc
mov
and
lahf
or
pop
xor
lods
das
jns
push
jb
xchg
add
idivb
push
lret
into
and
gs
mov
ljmp
lock
sbb
adcl
xchg
cmp
sbb
ds
cmp
addr16
cs
jno
sar
and
mov
repz
push
push
mov
adc
mov
pusha
hlt
add
lock
pop
testl
aad
mov
inc
negl
add
fdiv
push
insl
sub
or
loop
ss
movsl
mov
xchg
jmp
pop
mov
push
stc
lahf
and
pop
fcoms
iret
lock
mov
out
mov
lahf
addb
std
bound
or
daa
sub
ss
rclb
imul
cmp
mov
jge
or
pop
sti
adc
pusha
mov
mov
sbb
inc
adc
scas
pop
popf
jle
inc
or
outsl
dec
ficoml
push
je
lret
nop
jg,pt
cmpsb
mov
pop
sbb
inc
mov
push
add
xchg
shll
xchg
push
in
js
cmp
mov
das
xchg
jg
stos
lea
sbb
sbb
pusha
jo
frstor
pop
add
xchg
push
rolb
stc
sbb
lods
or
test
fistpl
adc
xchg
push
imul
insl
stc
outsl
sub
ret
mov
sahf
mov
data16
inc
jae
sar
pop
jae
xchg
and
add
add
sub
pusha
sbb
mov
popa
xchg
pop
fisubrs
mov
inc
shrb
mov
jmp
mov
imul
add
push
mov
into
addr16
hlt
leave
or
adc
stos
push
outsb
dec
mov
and
push
add
sbb
sbb
push
xchg
js
jo
cltd
aad
xchg
pushf
shrb
inc
je
pop
or
ret
adcl
pand
cltd
or
pusha
lcall
jg
mov
ret
orb
mov
xchg
test
xchg
lea
mov
lods
mov
cmc
jne,pn
pop
dec
jne
cmc
sti
out
mov
cmc
pop
out
sub
hlt
inc
jg
mov
and
repz
mov
leave
inc
push
in
xchg
aas
mov
mov
fwait
jbe
cmpsb
adc
jp
push
iret
adc
divb
mov
xor
cltd
inc
lcall
cmp
ja
lods
dec
push
pushf
aaa
inc
aam
cmp
add
xor
sbb
pusha
xchg
push
insb
sahf
mov
jmp
push
rol
and
xor
mov
sbb
cmp
and
cld
pop
lcall
mov
and
push
inc
mov
push
data16
sub
js
mov
push
jnp
fdivl
inc
add
dec
test
test
cmpsl
pop
xchg
inc
xlat
in
test
xchg
or
mov
xchg
fiadds
lock
fmull
out
pop
adc
mov
mov
mov
push
cmp
sub
cmp
xchg
mov
fstp
add
inc
movsb
aas
inc
sbb
int3
cwtl
enter
jmp
psrlq
mov
shrb
dec
sub
cmpsb
ds
xor
mov
lock
xchg
mov
pop
add
xor
out
xchg
outsl
dec
insl
cld
mov
clc
and
test
mov
adc
mov
gs
and
inc
jg
add
mov
adc
adc
push
lret
cmp
push
outsb
popa
sahf
nop
nop
inc
out
cmp
xchg
xchg
lahf
fwait
xchg
les
jne
stos
xor
pusha
test
sub
pop
mov
adc
lcall
pop
ljmp
push
icebp
lea
stc
gs
inc
or
gs
hlt
jb
mov
std
cwtl
or
test
inc
mov
or
fldl
mov
jle
loope
std
and
lret
mov
push
mov
pop
and
sti
data16
lret
sub
fldenv
jmp
mov
xor
mov
fucomi
std
bound
mov
daa
push
outsb
jp
sahf
sub
mov
sti
out
pushl
arpl
js
lods
mov
cmc
les
fimull
inc
push
test
mov
cmp
add
test
adc
jno
dec
into
subb
or
test
and
xor
pop
lods
stos
ds
push
mov
and
mov
pusha
cmp
mov
cmpsb
rolb
pop
fldt
mov
arpl
cmp
adc
mov
das
arpl
jo
cwtl
push
movsb
aas
ret
xchg
lods
inc
and
adc
imul
fnstenv
adc
dec
adc
inc
idivb
inc
aam
xchg
adc
les
cmpsl
in
and
cwtl
push
push
inc
shll
in
fsub
cmc
cwtl
push
arpl
mov
mov
push
hlt
in
inc
int3
pop
lods
add
push
xor
push
pop
outsl
addr16
ljmp
inc
push
idivb
xor
movsl
and
inc
out
rcrb
lods
and
inc
adc
cmpsb
push
xchg
jl
mov
cmpsl
add
adc
mov
adc
inc
sarb
adc
jnp
push
sti
outsb
lea
int3
add
into
xchg
aaa
pop
mov
jnp
inc
int3
ret
and
in
xchg
stos
mov
push
xchg
and
gs
into
jo
cmp
outsl
push
sub
test
ret
or
push
jbe
dec
mov
ds
sub
xor
lahf
adc
sbb
xchg
aaa
sub
pop
cli
mov
inc
test
xchg
and
push
iret
imul
dec
adc
or
test
cmp
sbb
mov
push
daa
dec
fldt
cmpsb
inc
cmc
mov
int
xor
inc
or
loop
les
sub
xor
pop
cmpsb
int
es
jbe
add
repz
pop
lret
xchg
fdivs
pusha
test
aam
adc
push
test
push
xchg
fwait
imul
jne
push
push
mov
sbb
jecxz
ss
mov
dec
xchg
inc
mov
xor
inc
inc
inc
pushf
fs
push
divl
mov
fs
jb
push
sub
testb
call
dec
push
xor
dec
add
inc
bound
stos
and
inc
dec
cmp
iret
push
sbb
push
xchg
stos
cmpsb
fiadds
das
pop
or
in
fsubrp
bound
sub
imul
adc
cli
ficoms
lahf
scas
push
mov
in
negl
pop
fs
mov
dec
xor
jo
mov
xor
inc
mov
add
push
cmp
jl
sbb
jns
enter
std
jo
cmp
mov
js
add
jne
jns
cltd
hlt
call
out
pop
std
enter
xor
mov
enter
jmp
add
cmc
cmp
adc
mov
in
je
test
add
cmp
data16
ret
mov
adc
and
ljmp
std
mov
imul
jnp
les
js
int3
xchg
shll
insl
out
add
mov
rorl
addr16
stc
jle
push
incl
dec
mov
push
pusha
test
mov
sti
mov
hlt
jo
jns
dec
push
jmp
inc
mov
out
gs
or
push
je
js
lcall
and
imul
cmp
daa
pop
jne
mulb
das
jbe
int
mov
ror
test
push
mov
ja
jns
jmp
jecxz
add
fsubrs
in
cmpsl
jno
xchg
xor
and
mov
das
pop
xchg
gs
push
enter
cmp
mov
xchg
and
and
mov
lock
cli
pusha
xchg
loopne
cmc
mov
fsub
insb
dec
inc
adc
fcmove
shlb
xchg
mov
dec
push
cwtl
push
adc
mov
pushf
cmp
fldt
lods
in
sbb
adc
in
push
or
dec
jl
jns
push
rorb
add
sub
jecxz
loope
mov
and
sbb
lret
adcb
inc
and
cli
cltd
fstps
stos
js
pop
sbb
sbb
dec
push
repz
mov
push
pop
imul
mov
push
sub
push
xlat
in
sarl
push
and
dec
aaa
and
stos
xor
mov
fildl
mov
aaa
fs
xor
inc
pop
pop
divl
mov
fcom
pop
call
shll
pop
shrl
jle
pop
les
mov
pop
sbb
cmp
push
or
scas
pop
sar
cmp
adc
cmp
fisubrs
jl
ret
jle
loopne
xchg
icebp
jns
mov
mov
jp
rol
ljmp
jmp
sbb
mov
jg
fsubp
fildll
push
sbb
mov
test
jae
xchg
mov
sub
call
cld
push
ficoml
pop
pop
sarb
clc
mov
add
dec
sub
neg
mov
push
scas
mov
mov
das
aaa
sub
mov
sub
xlat
mov
sub
sbb
imulb
dec
fistl
dec
or
dec
pop
cmpsb
shlb
cmp
pop
xchg
pushf
push
inc
pop
cli
sbb
cmp
jmp
mov
cmpsb
cltd
mov
or
and
pop
pop
das
mov
ljmp
fists
jle
adcl
bnd
lcall
lcall
cli
pop
pop
dec
fdivrl
test
push
cmpsb
mov
int3
pop
jecxz
cmp
addr16
sti
sbbb
add
xchg
cli
enter
filds
cli
push
int3
imul
mov
movsb
fldcw
adc
data16
aad
pop
lods
or
test
push
daa
int
lea
lret
fiadds
push
fs
fwait
mov
pop
idivb
jo
test
lds
adc
jp
push
cld
out
jle
jmp
loopne
xchg
imul
stos
pushl
mov
shl
je
rcl
or
jp
sub
xchg
dec
sarb
arpl
out
sub
fs
push
pop
sbb
pushf
movsb
xchg
lods
insl
scas
js
mov
and
ja
pop
xor
repnz
push
aam
sbb
mov
and
bswap
fsubr
mov
push
jae
or
pop
ficoml
push
add
outsb
addr16
aad
or
int
hlt
dec
fst
xor
xchg
jne
mov
sahf
aaa
popa
jo
sub
adc
je
lods
ret
sbbb
mov
mov
mov
mov
push
or
aad
vextracti32x4
add
xor
lods
add
mov
add
pop
xchg
cmp
fwait
outsb
jge
aas
rcrl
push
inc
lods
ljmp
orl
jno
adc
jo
in
cmc
test
in
fcmovnbe
pop
pop
int3
outsl
stc
sbb
xchg
jb
sub
cmp
lret
fwait
sahf
sub
mov
mov
int3
repnz
shlb
mov
mov
sub
movsl
cltd
mov
adc
xor
sbb
pushf
jb
mov
or
pop
in
test
push
ret
jns
xchg
fbstp
rcll
xchg
aam
push
cmp
xor
mov
pusha
sbb
cltd
cmp
clc
pop
sti
test
divb
fwait
cs
leave
xchg
sahf
call
jae
addr16
fcmovnb
fcomi
into
ljmp
jp
movsl
mov
xchg
sub
jl
mov
es
sbb
inc
shl
sbb
fiaddl
in
mov
or
out
mov
add
jl
sbb
dec
dec
test
ja
mov
sub
out
cmp
fdivl
dec
idivl
mov
xor
mov
xchg
mov
jbe
and
and
push
push
repnz
inc
mov
xor
inc
clc
cmp
push
rorb
test
dec
adc
cmpsl
aam
movsl
filds
mov
out
mov
mov
inc
leave
aaa
inc
and
xchg
ret
stc
jp
xorl
scas
fstpt
into
jle
pop
addr16
and
int3
movsb
outsl
les
fs
pop
or
push
fwait
cmpsb
jae
in
outsl
pop
dec
test
xchg
jl
fwait
pop
sub
lea
push
mov
mov
lret
dec
mov
or
aad
inc
scas
and
and
mov
stos
lds
fsubrs
fcmovnb
fnsave
mov
jno
fstpl
push
pop
mov
dec
xchg
cs
dec
stos
dec
xor
sub
dec
inc
pop
rcrl
rorb
mov
int
int
xchg
cltd
and
aad
xchg
das
scas
dec
and
fiadds
xor
shll
xor
sbb
push
xchg
cmpsb
cmp
sub
cmp
in
xor
in
push
pop
mov
in
test
jne
pop
mov
jno
push
test
and
inc
rcll
cmp
dec
push
movsl
je
popf
jmp
in
icebp
je
sbb
pop
push
sub
sbb
sub
push
aad
les
ds
sub
mov
mov
cwtl
aas
test
popf
jnp
xlat
insl
cmpb
mov
and
push
add
cmpsb
sbb
add
xlat
or
and
cmp
jg
fistpl
int3
mov
in
cmp
dec
cmc
mov
pop
and
dec
dec
add
mov
stc
push
pop
mov
push
cmc
fdivrl
pop
cmp
mov
or
jecxz
cmp
js
rorb
sbb
fldenv
mov
movsl
cmp
xchg
inc
mov
pop
mov
test
int3
aaa
push
adc
mov
addb
mov
stc
mov
pop
test
and
lret
enter
test
or
std
jb
jg
and
aam
test
sbb
shll
and
xor
xchg
in
xor
xor
xchg
lds
lods
mov
xchg
scas
lahf
mov
pop
and
xchg
ds
sbb
clc
or
std
sub
sub
test
mov
mov
lods
imul
test
push
test
aad
mov
mov
xchg
fldt
xchg
cli
xchg
sub
lea
rorl
adc
test
pop
push
test
xor
fwait
leave
dec
add
push
adc
xchg
fwait
aam
ss
push
js
inc
mov
adc
int3
lds
iret
adc
daa
ret
loopne
sbb
bound
fwait
lahf
into
outsb
cmp
out
cmp
out
pcmpeqw
add
lahf
mov
in
jl
js
adc
test
movsl
push
sbb
lods
shlb
in
xor
mov
popf
mov
xor
and
arpl
dec
int3
push
xchg
sbb
mov
lcall
insl
in
push
pop
jl
xchg
xchg
pop
jno
loop
mov
stos
adcb
loop
dec
out
test
inc
call
inc
mov
or
mov
mov
nop
test
lods
jecxz
or
push
xchg
rclb
stos
scas
sub
dec
cli
aaa
and
aaa
push
push
jbe
js
sbb
add
cmpsb
pop
dec
repz
pop
cmp
test
pause
mov
repnz
inc
sub
xchg
fs
shrl
stos
push
pop
test
ficoml
aaa
adc
jnp
sub
cmp
aad
xchg
arpl
mov
cmp
decl
insl
push
mov
cs
mov
out
jnp
loope
pushf
rcrb
cmp
out
inc
inc
inc
xor
mov
aaa
jnp
adc
movl
cmpb
mov
sbb
rcr
mov
jecxz
mov
sbb
mov
test
das
mov
cltd
es
sbb
xchg
cmpb
or
ds
inc
fimull
pop
and
clc
cwtl
cwtl
adcb
mov
test
or
mov
cmp
insl
jmp
cmpsb
dec
lock
and
cmp
push
jnp
subl
cmp
mov
lea
aad
xor
popa
lcall
fsub
fldenv
orl
mov
andb
sbb
sar
or
aaa
mov
mov
negb
and
mov
movsb
jno
xchg
sarl
scas
adc
loop
cmpsl
inc
push
or
xlat
mov
dec
fstps
mov
mov
insl
jbe
stc
or
mov
pop
fsub
jp
mov
adc
cmp
adc
dec
jbe
jo
add
arpl
dec
dec
jmp
rcrl
jns
fists
pusha
or
stos
leave
cmpsl
xlat
inc
xchg
push
pop
or
jns
enter
aad
out
or
fmulp
cmp
lock
cmp
clc
push
shrb
or
xchg
mov
sub
push
insb
stos
out
jmp
mov
leave
jge
jp
mov
insb
lahf
pop
or
in
daa
jo
leave
fndisi(8087
outsl
mov
pop
pop
cwtl
aam
xor
loopne
lahf
ret
sti
sbb
push
lods
outsl
jnp
sti
push
out
pop
cmp
ud2
sbb
je
dec
add
shll
mov
cmp
and
and
lcall
cli
imul
pop
dec
adc
and
test
jecxz
lods
es
cmp
inc
mov
dec
mov
mov
out
mov
enter
ja
scas
enter
xchg
jnp
out
pop
inc
int
pop
mov
push
cmp
pop
out
shll
rcll
cmp
dec
push
cmp
xchg
mov
bound
inc
out
or
cli
push
pop
fs
std
push
mov
jbe
or
jmp
jbe
dec
dec
popa
icebp
inc
inc
cli
jmp
subl
xchg
xlat
pusha
ret
je
enter
or
adc
pusha
add
mov
pushf
mov
data16
xchg
jae
mov
inc
es
jne
loopne
stos
leave
push
jge
shlb
movsb
call
data16
pop
push
mov
or
outsl
push
or
jl
inc
mov
push
adc
inc
mov
cmc
pop
xchg
mov
xchg
cld
pop
clc
sahf
mov
or
sub
inc
dec
or
xor
adc
addr16
insb
es
fdivrs
mov
ja
jb
add
inc
imul
adcb
scas
sub
cmpsb
mov
outsb
inc
jbe
es
out
mov
sbb
lret
sub
jb
aaa
fsubs
sti
lret
hlt
test
sub
lods
test
add
test
xchg
sti
in
jns
shlb
add
dec
push
push
ret
scas
inc
xchg
jmp
dec
sub
inc
rep
mov
aam
mov
mov
add
icebp
mov
jo
test
loop
insl
mov
cld
jo
mov
mov
outsl
mov
jnp
mov
std
cli
inc
pop
dec
jb
scas
mov
inc
xor
je
pusha
add
daa
xor
sbb
fdivp
fistpll
cld
mov
and
sbb
cmp
je
or
mov
adc
add
sbb
lret
les
cmpsb
rclb
cwtl
cmp
inc
pop
sbbl
insl
inc
cmp
jne
cli
rolb
mov
data16
stos
gs
pushf
out
out
cmp
jmp
and
stc
push
jae
in
cmp
lahf
repz
push
lods
push
mov
add
out
stc
jo
jb
notb
add
sub
icebp
mov
outsb
hlt
or
add
ret
mov
sbb
insb
push
xchg
mov
iret
fstps
shr
in
icebp
pop
cmp
fstl
stc
fstpt
dec
pop
lret
hlt
orb
mov
int3
pop
cmpsl
cmpsb
pmaxub
lods
adc
xor
mov
jg
int3
xorb
pop
push
icebp
push
xor
ds
xchg
cmc
repz
jnp
xor
out
cmpsb
arpl
sbb
mov
pop
adc
scas
push
mov
push
xchg
in
jo
lock
jae
je
sbb
pushf
sarl
movsl
cmp
jne
mov
flds
sub
mov
outsb
cmp
cmp
imul
xchg
or
mov
mov
movl
cmp
popa
push
and
push
push
nop
imul
in
test
and
in
fisubrl
dec
cmpb
dec
mov
imul
lds
ja
xchg
push
sar
adc
out
xor
or
cmp
lahf
imul
inc
sbb
repz
pop
sbb
mov
xor
imul
stos
insb
outsl
out
stos
mov
push
lds
sbb
xlat
cltd
ja
in
cwtl
roll
mov
pushf
cmpsl
test
ret
out
cmp
xchg
lret
aam
lret
xchg
dec
cmp
mov
arpl
push
fldcw
fwait
pusha
mov
test
mov
hlt
mov
sbb
nop
iret
ficomps
repz
pop
mov
leave
push
mov
pop
stos
loope
scas
pop
mov
mov
lcall
jb
mov
mov
sub
repz
cs
xchg
mov
popa
cmp
or
inc
lcall
call
setae
push
or
mov
jmp
cmp
xchg
jl
mov
xchg
scas
dec
aas
insl
cmp
je
arpl
cltd
dec
xor
mov
xchg
fidivs
movsb
std
xchg
out
pushf
das
data16
leave
mov
pop
loope
out
pop
shrl
pop
cwtl
stos
pop
es
sbb
and
add
icebp
aad
in
pop
iret
and
inc
loopne
pop
or
imul
dec
sub
out
jge
push
and
pop
fldl2e
jecxz
dec
pop
clc
pop
sub
add
add
addb
insb
xor
ljmp
movsb
mov
sarl
je
ret
jo
pop
xchg
sbbl
fldt
adc
mov
mov
repnz
push
push
mov
push
mov
cltd
arpl
push
dec
in
fadds
push
dec
mov
adc
popa
mov
xchg
xlat
scas
and
mov
lds
out
mov
inc
mov
les
dec
loopne
or
add
mov
cmp
jno
lret
dec
or
fdivp
add
test
enter
mov
addb
outsl
dec
repnz
mov
sti
fbld
and
xchg
decl
dec
repnz
insl
call
ljmp
sbb
mov
cmp
cs
and
mov
into
mov
xchg
sarb
jge
pop
and
mov
push
popa
xchg
cmc
gs
pop
push
jge
aam
lods
push
addps
inc
imull
jl
pop
mov
lods
mov
jns
ficomps
sub
sti
or
pop
inc
test
inc
adc
dec
cmc
and
jl
fwait
add
jle
jge
push
xor
js
dec
push
jmp
fstl
jmp
lret
or
jge
xor
dec
int
lock
fbld
cmp
aad
xorl
mov
xor
cmp
pop
rcrl
stos
add
mov
mov
es
cmp
cmpsb
sbb
gs
mov
xor
in
pop
outsl
sbb
test
pusha
into
movsl
jl
lock
inc
adc
je
mov
jp
mov
imul
js
pop
imul
in
daa
lcall
roll
mov
cwtl
jb
dec
inc
mov
cli
jl
and
es
fnstsw
and
addl
inc
lock
rcll
inc
fiaddl
jg
cmp
arpl
and
stc
lods
cmc
mov
add
divb
mov
cld
or
xor
dec
cmp
push
clc
aas
fisubrl
push
fisttpll
cmp
xchg
xchg
and
sub
add
movsb
jno
adcl
jne
push
mov
out
je
mov
mov
mov
int3
ret
inc
scas
fcompl
rcll
and
icebp
mov
sub
ljmp
leave
in
fcomip
push
popf
mov
hlt
xchg
addr16
sti
lret
lcall
test
mov
xchg
loop
lods
and
scas
cmpsl
mov
stos
mov
push
outsl
in
inc
leave
xor
sti
mov
xor
in
mov
push
sti
cld
pusha
sbb
fisubs
adc
movsb
loopne
ds
test
orb
mov
jmp
inc
or
mov
cmc
es
lods
loope
xor
lcall
shrb
arpl
adc
pop
xchg
aam
push
mov
ss
mov
add
sub
shrl
stc
inc
iret
pop
insl
adc
mov
mov
rorl
pop
mov
imul
loope
repnz
lods
or
das
icebp
sarl
mov
sti
push
adc
pop
sbb
adc
mov
movsl
jne
and
arpl
test
dec
popf
pop
pop
mov
mov
mov
xchg
add
xchg
pop
sbb
insb
gs
pop
add
dec
cltd
sbb
repz
adc
mov
mov
mov
stc
sbb
dec
sub
xor
mov
push
arpl
jae
mov
ja
jge
rcl
div
mov
aaa
mov
out
hlt
sbb
std
pop
fwait
and
cli
sub
or
ret
push
inc
jge
aas
cmpsl
or
loope
pop
push
mov
xor
mov
loopne
shll
cmp
jmp
ljmp
and
test
pop
int3
jno
xchg
inc
out
ss
in
inc
ret
ret
imul
fisttps
stc
cltd
push
daa
push
jle
sbb
in
pop
addl
imul
sub
int
stc
or
push
pop
sub
jle
popa
push
int3
inc
push
push
cli
ja
dec
insb
or
push
inc
les
sar
jl
dec
inc
add
mov
or
pop
pop
push
lods
icebp
in
shll
add
add
out
add
lret
sub
test
sub
mov
test
cmc
gs
fnstsw
mov
mov
int
xchg
and
mov
push
mov
fmuls
stos
cs
inc
jae
jae
sub
push
jecxz
adc
inc
xchg
dec
xchg
pop
dec
jmp
mov
shl
jne
call
jo
xorb
push
loop
pop
xchg
ja
and
lret
addr16
out
mov
lcall
sub
or
pop
push
pusha
xchg
cmp
int3
add
xor
scas
movsl
dec
inc
push
outsl
mov
sbb
xor
pop
and
js
adc
jle
test
sub
xor
fdivrs
ds
mov
and
dec
mov
adc
adc
or
dec
sbb
add
andb
in
les
push
cmp
js
les
hlt
sbb
lods
jo
cmp
les
mov
test
pop
inc
hlt
out
in
push
add
imul
mov
fwait
mul
test
mov
xlat
into
mov
push
pop
in
rcr
cmp
inc
dec
or
xchg
ljmp
aaa
mov
cs
cmp
jo
cld
push
mov
loop
mov
push
jnp
in
push
and
or
fidivs
lea
inc
inc
in
inc
mov
xchg
out
xor
lds
sbb
dec
scas
cltd
pop
add
ja
out
jmp
dec
push
ss
rorb
xor
inc
mov
dec
or
pusha
outsb
daa
jae
je
mov
sbb
mov
pop
jg
daa
mov
push
imul
lret
in
add
xchg
fwait
aad
xor
adc
sbb
mov
pop
dec
popf
mov
lds
paddusw
insb
lods
push
das
mov
std
push
stos
int
cmp
in
push
dec
insl
test
jo
sahf
shlb
or
push
mov
xor
jp
dec
mov
xor
or
adc
inc
out
imul
mov
lret
leave
inc
ret
movsl
push
js
es
cwtl
rcrl
loope
inc
cmpl
incb
mov
cmc
and
mov
test
add
scas
mov
inc
sub
xchg
dec
data16
jne,pn
icebp
jns
pusha
mov
dec
idivb
ljmp
mov
popl
sub
loope
daa
xchg
pop
xor
push
add
aad
mov
das
and
aad
loopne
pop
xchg
jl
fcmovb
push
xchg
test
test
hlt
or
lret
loopne
mov
mov
sbb
mov
ret
dec
mov
push
sub
shll
cmp
testl
int3
subb
inc
fistpl
mov
rcrb
or
aas
movsb
test
jbe
mov
jns
sahf
dec
or
roll
cmp
push
data16
into
int
icebp
cltd
and
jns
mov
mov
sub
mov
loopne
stos
jl
mov
aas
push
rclb
add
inc
pop
pop
add
or
xor
shr
movb
aaa
pusha
jbe
inc
ljmp
push
ret
dec
loop
mov
ret
dec
cmp
arpl
int
aad
adc
cmpl
jns
cld
push
icebp
xchg
clc
mov
push
adc
rcl
xchg
or
dec
fidivrl
add
sbb
scas
mov
mov
popa
mov
sub
jns
cld
mov
neg
xchg
cmpb
mov
and
adc
scas
mov
xor
test
mov
lds
orl
iret
cmp
cmp
pop
mov
cmp
outsl
jno
push
cwtl
ja
out
loope
mov
inc
push
int
mov
fs
in
and
add
cltd
scas
imul
lret
test
movsl
inc
loope
fwait
push
outsl
rcl
push
insl
push
iret
mov
loop
in
xchg
pop
pop
scas
inc
cmp
xchg
lds
jnp
cmpsl
push
das
add
sbb
cmp
xchg
push
push
popf
movsl
mov
addr16
and
xchg
insb
pop
mov
shll
clc
dec
popf
cmc
dec
js
dec
fildll
ljmp
test
jmp
and
es
sbb
stos
mov
or
add
mov
movsl
out
adc
fists
mov
or
xchg
lods
les
divl
dec
mov
pop
or
sub
cmc
mov
movsl
sbb
ja,pt
inc
mov
aam
imul
outsb
cmpsl
nop
ljmp
scas
xor
aas
mov
pop
lods
inc
nop
and
push
mov
pop
mov
popl
addr16
xor
mov
sbb
add
outsb
data16
shrl
cltd
pop
add
sbb
cmpsb
or
and
mov
lods
adc
pop
adc
clc
shr
inc
ret
lea
call
lock
addb
insl
imul
call
mov
mov
xchg
mov
xchg
sbbl
fwait
jecxz
rorb
fsubrl
inc
jmp
push
or
mov
dec
mov
bound
pop
jns
mov
xor
dec
scas
xorl
hlt
pop
mov
testb
test
setno
rcll
sbb
pushf
std
outsb
scas
ds
in
jno
and
ljmp
jmp
mov
push
bnd
insl
xor
push
sbb
ja
imul
cmp
dec
jge
cmpsb
sbb
bound
xor
popf
mov
mov
pusha
jl
add
hlt
addr16
sub
out
jne
ljmp
ds
in
out
insl
sbb
addr16
mov
mov
add
dec
mov
test
add
inc
inc
add
movsb
cli
mov
fwait
jle
jle
out
push
ljmp
jecxz
pop
stc
push
push
fwait
bound
mov
xlat
inc
xchg
mov
mov
mov
orb
test
lret
jecxz
jo
inc
inc
mov
mov
sub
xor
movsl
mov
xchg
push
shll
mov
pop
xchg
or
imul
dec
pop
or
pusha
sub
sub
insb
sbb
pop
adc
or
lods
fdivl
pop
stos
sbb
sub
push
cmp
push
test
pop
in
cltd
and
xor
cmpsl
and
imul
push
addr16
shll
jne
push
jle
sahf
xor
das
das
cltd
insl
jb
push
mov
imul
lret
pop
pop
icebp
inc
push
jp
sub
push
ret
cs
dec
adc
push
loop,pn
add
dec
xor
inc
loop
in
sbb
int3
push
push
mov
cmp
cltd
lea
or
ss
mov
xchg
sub
lods
adc
loope
loope
fisttps
clc
inc
add
movsl
mov
adc
xorl
cmp
repz
outsl
fcoml
sub
push
movsl
adc
enter
out
and
inc
xor
mov
push
into
data16
test
scas
xchg
mov
push
ds
into
add
and
cmp
xor
pop
js
sub
test
or
nop
icebp
addr16
jbe
inc
repnz
cmp
ja
jne
mov
jno
loop
or
push
or
lods
jbe
jae
lcall
lahf
or
imul
inc
and
cmp
movsb
push
pop
std
lcall
notb
dec
idivl
add
push
inc
nop
mov
fucomp
hlt
ret
xchg
pusha
loop
inc
popf
cmp
xor
clc
adc
add
lea
mov
mov
adc
les
jnp
in
sbb
sahf
ljmp
scas
ja
sub
and
dec
lahf
dec
adc
gs
or
sub
lea
shrb
fstpl
or
dec
sbb
in
fadd
adc
sub
ds
in
sti
adc
mov
jns
fisttpll
mov
mov
hlt
repnz
ret
push
aaa
gs
notl
adc
sbbl
pop
popa
sahf
clc
loopne
jge
lea
sbb
dec
cmp
xor
inc
push
and
cmp
enter
sarb
cmp
pop
push
cld
addl
mov
sbb
cmpsb
pop
mov
dec
aam
xor
mov
mov
mov
scas
iret
sub
push
inc
popa
call
dec
push
pop
ja
and
adc
std
jnp
daa
adc
mov
jae
shr
sub
loopne
mov
cs
adc
pop
push
push
mov
adc
adc
lea
xor
sbb
mov
sub
sub
mov
inc
mov
imul
lahf
mov
mov
xchg
sub
mov
aas
nop
int
push
mov
or
rolb
or
add
rorl
xor
cmp
mov
loop
cmp
xchg
sbb
jno
cmp
add
rcrb
sbb
xchg
pop
dec
repnz
jmp
sti
push
push
add
mov
cmp
jbe
std
inc
mov
or
mov
push
aaa
jecxz
push
or
push
xor
sbb
and
adc
xchg
jbe
xchg
hlt
pop
cmp
enter
rcrl
cltd
test
fnstenv
movsl
jne
mov
lds
adc
xchg
iret
sub
test
cwtl
adc
mov
pop
jbe
mov
sarb
inc
or
rcr
ds
ja
mov
pop
mov
xchg
mov
jg
mov
inc
sub
fwait
jbe
jge
adc
loopne
mov
push
icebp
push
scas
cmp
fisubs
aas
roll
mov
xchg
cmp
bound
daa
or
cltd
stos
popf
addr16
mov
mov
sub
movsl
mov
fwait
add
test
cli
add
inc
inc
add
mov
pop
mov
sub
mov
mov
fidivs
cmpsb
add
dec
push
xchg
jmp
sbb
xchg
gs
sahf
pop
push
ret
pop
mov
and
dec
ja
aas
mov
xchg
push
jmp
xlat
aam
mov
loopne
dec
les
mov
sub
mov
sub
mov
stos
sub
mov
mov
outsb
jo
call
je
aad
mov
or
or
push
push
or
popa
stos
jl
jle
je
push
lret
push
mov
mov
jne
gs
stos
sti
arpl
add
or
out
sbb
jno
scas
lods
fstp
mov
mov
outsl
xchg
adc
mov
data16
insl
ret
iret
xor
push
sub
add
mov
mov
out
lods
mov
jo
push
dec
cwtl
iret
sub
lret
stc
aam
fwait
jnp
push
lea
push
in
je
loope
dec
cmpsb
jmp
mov
lcall
mov
jge
sub
adc
ret
cli
cmpsl
jge
push
mov
mov
xchg
or
pop
into
push
mov
sbb
xor
xor
sbb
aam
into
and
jp
jno
jo
and
lods
jp
push
or
dec
adc
nop
leave
cmc
add
xchg
dec
cld
jg
mov
push
or
jle
pop
dec
je
movsl
sbb
inc
gs
sub
loopne
cmp
iret
ja
push
mov
imul
inc
sbb
mov
adc
dec
xchg
sahf
jge
mov
pop
repz
cmp
lret
sub
fdivrs
cmc
mov
es
mov
stos
dec
mov
scas
and
aaa
inc
or
xor
dec
jno
insb
iret
xor
mov
push
mov
imul
dec
add
mov
fcmovnb
jb
push
subb
les
mov
imul
jne
add
add
cld
andl
leave
jns
inc
add
push
das
filds
aas
and
mov
clc
fidivrl
xor
jmp
je
popa
adc
push
call
xor
testl
js
mov
es
xor
mov
cmp
inc
inc
nop
mov
xor
test
pop
pop
xlat
inc
xor
test
xchg
mov
inc
sub
mov
mov
cld
dec
push
pop
xor
sbb
test
adc
pop
fldcw
mov
movsb
push
sahf
addr16
fsubrp
cmc
cmpsl
xor
mov
int
clc
mov
mov
jb
aaa
gs
and
test
es
test
sub
mov
es
js
and
aas
or
inc
dec
xorb
push
mov
mov
mov
and
ljmp
out
mov
cltd
test
push
inc
sbbb
push
jno
sbb
pusha
jg
xor
movl
shr
cltd
lcall
mov
ret
cli
pusha
cmp
das
pop
imul
pop
cmpsl
lret
and
push
pusha
and
cltd
jmp
popa
lea
pop
ljmp
push
ss
cmp
mov
dec
pop
hlt
cmp
mov
jecxz
lret
pop
inc
xor
dec
adc
aaa
gs
sti
cltd
lods
pop
sub
les
push
adc
in
xchg
in
and
cltd
add
adc
sarb
and
cmpsb
fs
dec
sub
mov
imul
insl
jmp
stos
fwait
daa
cmp
ljmp
cmp
mov
mov
loope
pop
outsl
mov
cwtl
jp
pop
mov
add
rorb
inc
sub
gs
pop
xor
sub
in
nop
pop
rcrb
xchg
sbb
loop
jno
push
xchg
cltd
loopne
ds
xor
or
shrb
jle
mov
mov
sub
repnz
pushf
fwait
add
sbb
inc
ljmp
or
std
aas
jle
lea
xor
movsb
and
sbbb
and
inc
jmp
mov
push
ret
testl
sub
mov
movsl
xchg
pushf
push
rol
mov
call
inc
jb
pop
dec
dec
cmp
sub
cmpsb
insb
les
inc
inc
push
fwait
std
xchg
xor
cwtl
out
lods
addb
movsl
sub
jge
inc
add
sbb
test
loop
add
lds
jp
dec
push
mov
scas
sub
int3
add
in
aas
jmp
fucomp
mov
adc
push
notl
xor
sbb
test
dec
jge
stos
push
ja
pop
data16
dec
jle
orl
sub
insl
mov
inc
mov
test
inc
les
push
mov
testl
loop
outsl
cmp
add
or
imul
aad
or
jle
lcall
jno
dec
mov
lods
test
movsl
popf
mov
lahf
add
test
dec
and
cmc
shr
in
push
push
subb
out
sahf
or
test
in
lahf
mov
push
mov
out
in
fcomps
stos
jmp
insl
movsb
push
lods
out
jno
addr16
xchg
or
xchg
xchg
lods
add
out
dec
stos
clc
stc
jno
jns
xlat
mov
lahf
and
aad
mov
into
fwait
arpl
sti
inc
jl
dec
mov
jns
add
iret
inc
push
jns
repz
test
stos
or
sub
movsl
ja
ret
or
or
xchg
mov
and
pop
pop
imul
xchg
sbb
push
call
mov
adc
jge
push
sahf
call
fadds
xchg
push
incb
mov
pop
daa
xorl
dec
fs
add
and
out
sbb
movsb
ds
mov
iret
cs
lret
int3
add
int3
adc
iret
loopne
pop
sub
push
andl
push
jns
mov
jg
orb
add
xlat
pop
inc
pop
cmp
and
xchg
sbbl
fstl
test
pusha
mov
dec
push
jnp
inc
sbb
imul
roll
cmp
flds
adc
clc
pop
mov
inc
ret
jmp
push
pop
push
jecxz
out
sbb
cli
inc
arpl
and
cmp
gs
fs
popa
iret
xlat
ja
adc
jle
xchg
cli
jnp
ret
mov
push
mov
adc
fdiv
cmp
jbe
out
fwait
xchg
shrb
mov
rclb
pusha
inc
dec
jno
icebp
jecxz
xchg
mov
and
jno
nop
in
ret
repz
cmp
push
xor
loop
sarl
adc
adc
sbb
cmp
pop
mov
mov
test
call
test
mov
mov
jl
dec
mov
js
jbe
cmp
icebp
notl
fnstsw
cld
push
lea
dec
imul
in
and
scas
dec
push
sbb
dec
les
xchg
cwtl
mov
xchg
push
xchg
sarl
fisubrs
mov
add
add
gs
pop
and
adc
jecxz
lods
sub
div
repnz
addb
pop
ret
lahf
mov
add
push
jge
out
inc
int3
jle
and
fnstcw
ljmp
and
test
push
push
inc
popa
dec
pop
cs
out
jbe
xchg
lock
xchg
cmp
std
iret
sti
mov
data16
add
movsb
daa
mov
int3
cmp
mov
jo
sti
mov
repz
in
add
sbb
rcll
hlt
aad
loope
ljmp
jle
and
mov
inc
dec
lcall
js
and
cmpb
push
fists
fcomps
lcall
imul
popa
pushf
cmpsb
iret
push
mov
leave
fdivs
add
xlat
clc
stos
scas
adcb
sub
adc
ss
and
and
aas
xor
fldcw
lret
mov
push
and
sub
inc
xchg
std
xchg
fsubs
jle
sbb
xor
in
clc
mov
decb
dec
adc
inc
pushf
ret
sub
xchg
lock
pop
nop
mov
jmp
mov
mov
or
test
push
jp
imul
jnp
stos
mov
pushf
int3
loop
mov
pop
mov
dec
push
add
jl
out
hlt
mov
ret
sbb
lcall
out
hlt
push
mov
inc
and
fld
push
mov
int
js
pop
cmp
dec
inc
xchg
sbb
hlt
nop
adc
gs
adc
shlb
and
clc
sub
cmc
jecxz
loop
test
adc
enter
fisubrs
mov
out
sub
and
stc
jp
cmp
lods
push
inc
stos
cmovae
popf
jmp
les
jb
test
mov
decb
cli
mov
mov
xchg
add
fnsave
test
daa
push
out
mov
in
inc
es
fwait
cmp
movsl
int3
push
add
push
int
or
out
ret
stos
add
pushf
arpl
jle
rcll
mov
mov
push
shl
lea
shrb
cmp
mov
movsb
pop
mov
mov
ja
sub
xchg
jmp
and
cmpl
outsb
lock
ret
dec
jne
dec
data16
les
jmp
xchg
lcall
cmpsl
addr16
bound
lret
mov
and
stc
cmp
jl
mov
cmc
cwtl
mov
push
add
sbb
inc
mov
sub
int3
out
insl
mov
cwtl
fidivs
cli
sub
xchg
push
out
in
inc
xchg
fwait
dec
pop
inc
mov
push
sub
mov
addr16
or
add
fdivrs
jb
xchg
inc
cmp
movsb
pop
fs
sub
pop
jecxz
jge
ret
inc
inc
dec
jo
loopne
mov
ret
mov
dec
jge
fmuls
dec
fists
mov
and
sub
fstpl
adc
mov
add
adcb
mov
and
in
shrl
or
mov
lret
popa
notl
mov
movsb
repnz
mov
push
jb
mov
leave
ret
aas
repz
lret
sbb
cmpsl
mov
push
lret
in
jns
rolb
cli
jle
lods
movups
add
jp
jg
scas
daa
loope
jb
mov
push
xor
mov
lods
inc
sub
es
push
xor
cs
sub
sti
jns
adc
add
lcall
cwtl
pop
test
rorb
inc
dec
xchg
shr
loopne
ds
shrb
xchg
adc
in
icebp
mov
jbe
mull
mov
push
pop
cmpsb
jne
push
cmp
pop
add
jae
cmpsl
lcall
mov
fmull
pop
arpl
push
adc
inc
push
popa
sti
cmp
jl
mov
xchg
jge
imul
or
jne
and
call
scas
add
enter
rorl
cmc
aaa
test
out
mov
sbb
lods
fwait
test
repz
lret
imul
test
inc
aas
mov
out
std
adc
imul
imul
cld
sub
cmp
jmp
cli
nop
shl
out
mov
inc
loope
jae
cmp
lds
push
sub
push
je
sbb
xchg
lahf
or
out
sub
mov
stc
pop
mov
inc
xchg
adc
jb
test
pop
push
jae
and
adc
xor
add
sbb
sbb
mov
test
rcrl
jno
mov
pop
repz
stc
test
dec
int3
mov
cmp
or
shrl
cmp
pusha
mov
dec
clc
outsl
lcall
mov
les
and
sub
adc
jns
fwait
outsl
add
add
sti
cmp
imul
out
inc
cmp
inc
push
jno
push
out
push
adc
div
xorl
cld
icebp
mov
enter
jmp
push
rol
lret
in
out
stos
cmpb
enter
xor
xchg
ljmp
adc
stos
inc
lock
dec
in
das
and
lcall
or
lods
jnp
mov
sahf
inc
hlt
add
minps
std
pop
les
or
in
and
aaa
imul
pop
in
dec
lods
mov
mov
sbb
bound
dec
xchg
xchg
sub
or
jbe
sub
movb
subl
cmc
jle
test
arpl
xchg
je
xor
addb
test
test
rcrl
xor
fildll
push
inc
or
push
cld
fs
sarb
jbe
and
add
stos
pop
out
dec
mov
dec
fcomps
xchg
nop
xor
ret
mov
je
aas
scas
ret
sbb
insb
xor
stos
arpl
clc
dec
jle
loop
loop
add
cli
aaa
fldenv
pop
mov
loop
mov
rcl
imul
rcrb
fisttpll
pop
movsb
cmp
outsl
inc
flds
call
out
inc
pop
inc
jmp
cmp
sbb
aad
jg
das
jbe
int3
pushf
jno
or
ds
loop
outsb
xchg
call
dec
or
int
pop
dec
jmp
in
pop
jmp
mov
jbe
cmp
inc
sbb
pop
xchg
inc
ss
xor
xor
mov
mov
pop
aad
jge
or
fnstcw
sub
out
outsl
jns
push
shll
jle
xlat
adc
push
int3
fstpt
sub
shr
jp
dec
lahf
dec
mov
sub
fwait
scas
shl
in
xchg
ss
lods
test
jmp
movsb
repnz
jge
fwait
repz
push
sahf
movsb
idivl
xchg
fstp
repz
push
fildl
lret
jmp
movb
fldl
inc
push
pop
pop
mov
push
jp
push
inc
add
inc
aam
stc
sbb
jmp
push
or
xor
jl
jg
dec
adc
xchg
sbb
dec
add
sub
jne
addl
add
ret
sub
repz
mov
js
sbb
cmc
cmp
mov
inc
jbe
iret
mov
shrl
sub
sub
mov
ljmp
inc
fwait
pop
sbb
push
insl
jb
inc
movsl
pusha
mov
mov
cmp
mov
inc
inc
inc
stc
in
and
test
and
lret
out
insl
mov
int
inc
dec
mov
mov
cmp
aaa
mov
push
stos
jbe
fsubs
aaa
jle
push
fildl
xchg
mov
pop
dec
and
mov
mov
mov
jb
test
lock
jecxz
cli
scas
fs
push
stc
loope
mov
test
jecxz
pop
leave
or
enter
flds
ret
das
cli
pop
shrl
shrb
lret
mov
add
orl
repnz
lcall
gs
imul
addr16
idivl
fisttps
xlat
mov
xlat
mov
in
daa
push
mov
add
mov
movsl
pushf
inc
sbb
sbb
and
add
xor
call
xor
jb
bound
sub
sub
sub
cwtl
outsl
clc
jb
and
adc
mov
cwtl
jns
jecxz
or
inc
push
sbb
jns
lods
pop
dec
das
push
push
xor
loope
push
out
daa
leave
test
popa
xor
mov
inc
cmpsl
mov
adc
stos
pop
andl
push
cmp
sub
js
cmpsl
jp
add
pop
imul
pushf
adc
push
jp
push
cmpsb
xor
cmpsb
adc
movsb
or
mov
insl
xchg
inc
xchg
sbb
pop
dec
aas
imul
pop
adc
iret
sub
adc
js
hlt
test
rol
test
into
and
addr16
xorb
lret
das
and
jecxz
inc
cwtl
out
ja
imul
pushf
cmp
cmp
out
or
xchg
int3
or
mov
xadd
cmp
xor
xlat
push
lret
out
push
push
push
bound
mov
inc
and
add
mov
mov
xchg
fnstsw
add
adc
adc
mov
pop
xchg
xchg
popf
jne
hlt
push
jno
or
leave
or
fwait
in
clc
insb
xchg
scas
lods
add
and
cmp
outsl
ret
test
add
push
push
sub
sbb
cwtl
mov
mov
rorl
fldl
int3
into
or
stc
sbb
sbb
jne
decb
shrb
loope
icebp
pusha
pop
inc
cmp
xor
hlt
movsl
in
in
pop
cltd
xor
mov
aam
shl
jno
or
flds
dec
inc
adc
mov
loop
cli
inc
dec
in
jae
in
insb
jnp
fidivs
shlb
push
mov
push
clc
and
and
lods
out
arpl
lret
popf
jne
push
push
sbb
xchg
inc
xchg
lcall
stos
pop
adc
jbe
cmp
mov
pop
pop
pop
xlat
or
add
cmpl
aam
cli
fiadds
mov
test
in
xchg
int3
mov
fpatan
sub
sbb
scas
mov
or
aam
pop
stc
out
sub
mov
cltd
ja
or
dec
inc
jns
push
subl
call
xchg
enter
imul
ss
popa
lcall
ja
jno
and
leave
pop
test
out
jns
push
pop
shrl
xor
outsb
cmp
xorl
inc
jmp
outsl
push
xor
jle
mov
dec
xor
out
scas
lret
cmp
pop
scas
ljmp
mov
mov
in
jmp
arpl
ficoms
cld
and
ja
stc
test
mov
bound
hlt
lods
add
ja
ljmp
out
es
movsl
stos
scas
nop
repnz
or
and
and
ror
aam
and
cmc
rcl
ss
sub
cmpsl
fnsave
xor
shll
lret
jmp
ret
xor
shrb
xor
adcl
jmp
mov
adc
lds
mov
or
cmp
sahf
ja
xor
mov
and
mov
pop
sub
jbe
ret
out
gs
mov
jns
int3
subb
pop
adc
mov
pop
cmpsl
jo
xor
aad
add
dec
call
pushf
sbb
sbb
xor
test
add
fistps
mov
pop
dec
mov
rorl
mov
rcll
push
jb
mov
cmpl
mov
fists
fs
rcrb
jg
sti
int3
je
xchg
mov
mov
ds
stos
in
mov
add
daa
adc
mov
pusha
sbb
pop
mov
xchg
mov
test
iret
jbe
mov
pcmpgtw
adc
outsb
insl
popl
cmp
xor
jmp
dec
jp
fistpll
lods
pop
cmp
inc
or
inc
cmp
jo
scas
mov
jo
mov
std
inc
test
cmp
cmp
call
sahf
aam
push
xorl
arpl
and
cli
cmc
adc
or
fwait
mov
fildll
imul
and
xor
push
enter
jbe
lods
insb
lahf
les
pop
lods
push
lea
iret
stc
mov
mov
sbb
ret
xchg
mov
sarl
icebp
fdivrp
pop
cld
lds
and
nop
adc
mov
dec
ss
push
clc
repz
sub
jo
shll
test
cmp
inc
arpl
pop
mov
int3
xor
daa
frstor
mov
insl
movsl
dec
inc
ljmp
or
mov
add
lods
or
pop
mov
dec
xor
rclb
outsl
mov
filds
cmp
shll
imul
mov
xlat
sbb
leave
xor
hlt
imul
dec
test
mov
ror
lds
leave
xchg
jle
xchg
popf
jp
outsb
xchg
mov
sti
sti
jbe
pop
ror
bound
popf
inc
push
cs
sbb
orl
push
xchg
xor
jb
insl
subb
aam
dec
pop
icebp
test
mov
repnz
mov
and
pop
aas
jnp
arpl
jl
imul
inc
es
mov
xlat
or
xor
es
mov
lret
or
push
adc
jge
jb
ds
jbe
ret
sub
dec
jp
xor
loopne
call
jnp
pop
mov
pusha
into
fdivl
push
or
adc
aam
clc
repnz
cmp
daa
test
cwtl
sysenter
jo
inc
lcall
fadd
lods
inc
sub
adc
or
pop
into
and
xor
mov
pop
mov
bound
xchg
xor
mov
sub
mov
test
insb
xchg
adc
xor
xor
xor
jnp
inc
mov
mov
cmp
mov
fstl
adc
push
xchg
inc
jg
jno
cs
fcompl
out
and
in
adc
loop
mov
or
xor
in
dec
popa
sub
pop
jle
dec
cmpsl
and
cld
cmp
loopne
rcrl
in
add
mov
stc
mov
jno
ret
ret
add
scas
inc
hlt
test
insb
pop
mov
loop
out
xchg
inc
fwait
das
push
mov
dec
insb
not
shrb
ss
pusha
adc
inc
sbb
out
inc
mov
inc
rclb
mov
fs
bound
mull
iret
add
xor
shrd
lock
shll
inc
nop
xorl
sub
inc
xchg
arpl
adc
adc
inc
lea
repnz
sub
movsb
xor
or
adc
cli
inc
cwtl
sub
imull
jp
aad
ficoms
cmp
xchg
dec
ss
and
inc
sub
sub
xchg
in
push
push
pop
inc
jne
xor
pop
cs
in
push
mov
cmpsl
xchg
push
in
xchg
and
sub
mov
sbb
lea
xor
test
rorb
push
and
sub
aas
ss
nop
add
insb
addb
or
jno
pop
popa
ret
testl
pop
cmp
ret
mov
and
inc
inc
sarb
loope
mov
xchg
shlb
lea
jge
sub
dec
sub
or
inc
jmp
push
test
jno
or
je
pusha
mov
xchg
orb
lahf
sub
bound
xchg
dec
push
xchg
popf
mov
inc
jge
sub
push
adc
sbb
xchg
mov
xchg
and
js
mov
int3
sbb
xor
out
enter
xor
mov
and
cld
push
lods
push
scas
imul
int3
add
lds
rcrb
jnp
call
pop
rorl
bnd
sbb
jg
xchg
sbb
sbb
jmp
xchg
adc
adc
ret
dec
pushf
xchg
xchg
jle
adc
ja
iret
lds
pop
fdivrs
nop
pop
xor
pushf
jmp
sbb
add
inc
shll
push
mov
outsb
pop
pop
dec
out
xor
mov
jg
push
sub
push
int
loop
dec
stos
sub
xchg
in
add
fiaddl
jl
mov
insl
addb
jnp,pt
inc
xchg
inc
xchg
cwtd
xor
dec
cmp
rcl
cmpsb
push
jmp
movsb
mov
pop
and
fwait
push
mov
xor
cld
dec
stos
xchg
push
sub
add
mov
test
mov
jmp
shrl
lea
cmp
pusha
inc
fwait
scas
dec
push
dec
jmp
and
pop
lret
inc
les
pop
adc
dec
add
dec
fwait
in
sub
add
sbb
cs
out
jl
outsl
sarb
xor
movsb
std
scas
lea
push
cld
xor
js
ss
ja
rol
adc
push
icebp
les
mov
jmp
jle
addr16
loop
mov
pop
mov
xchg
xchg
repnz
movsl
mov
test
ret
push
add
scas
lret
jg
ret
mov
push
insl
dec
jb
lret
push
push
add
outsl
jno
mov
or
iret
pushf
sub
push
dec
xchg
inc
in
cmpl
add
fisubrl
inc
cli
iret
scas
std
or
adc
push
nop
cmpsl
imul
cmp
leave
mov
sub
int3
iret
inc
and
lock
lcall
std
inc
insl
cmc
jbe
movsl
repnz
flds
push
lahf
ss
das
insl
pcmpgtd
je
fnstcw
jmp
mov
mov
push
or
clc
mov
push
je
pop
xor
imul
or
cmp
pop
icebp
sahf
push
dec
popf
shl
into
pusha
push
pop
jmp
aas
roll
lahf
pop
gs
enter
cmp
sbb
aas
repz
jno
test
or
leave
add
or
int3
jb
mov
and
jno
nop
xor
mov
sbb
push
dec
das
movsb
ret
ds
or
push
push
adc
mov
pop
out
xchg
xlat
loope
lds
inc
pop
aad
inc
and
xor
add
pop
push
int3
and
mov
jp
sbb
cmp
jecxz
ret
push
jg
les
lret
pushl
popf
sub
es
sub
les
mov
jge
enter
stos
push
scas
sbb
mov
mov
jno
mov
jne
stos
fcoms
shll
lods
rcl
stos
mov
mov
mov
mov
mov
add
mov
out
cmp
icebp
sbb
out
gs
lea
loop
shl
test
scas
cmpsb
adcb
fimuls
add
mov
mov
or
sub
lods
test
cmp
js
cmp
inc
pop
xor
sarl
icebp
andl
je
popa
dec
clc
rolb
xor
in
fdiv
cs
in
into
jae
les
adc
dec
stos
jns
push
aam
mov
ret
movb
jno
in
int
add
imul
sbb
enter
cmpsb
imul
inc
rorl
enter
notl
test
xor
push
push
or
jns
aad
cmp
gs
loop
in
sub
cmpb
test
cld
stos
pop
mov
jge
mov
mov
pavgb
pushf
xchg
sbb
sub
flds
xor
inc
lock
pcmpeqw
mov
dec
hlt
fwait
sbb
jmp
add
shll
pop
in
push
cs
out
sub
pop
jnp
cmp
mov
xchg
cwtl
mov
in
inc
push
add
cmp
and
mov
cld
cmp
xlat
bound
xor
loope
xchg
add
dec
mov
cld
cmp
clc
arpl
sbb
mov
out
adc
mov
pop
mov
push
fnstcw
mov
fidivs
ret
xchg
pushf
bnd
adc
shll
dec
ret
xor
mov
add
insb
lret
xchg
clc
sti
movsb
push
jne
jnp
jb
add
or
jg
mov
push
cmp
mov
lds
cmpsl
imulb
aaa
xchg
test
mov
popf
fimuls
push
call
mov
sbb
inc
adc
jb
fld
pop
mov
cmp
les
push
faddl
stc
fs
sbb
imul
xchg
mov
pusha
daa
sbbl
add
sbb
stos
es
inc
jge
or
sub
loopne
lret
outsb
pop
add
icebp
push
sahf
push
jb
mov
sub
std
ja
jne
xor
or
repnz
clc
arpl
add
add
jno
jg
lods
cmp
mov
dec
add
pop
es
bound
mov
jl
insb
mov
int
ds
mov
inc
leave
das
lcall
test
mov
and
enter
test
dec
jne
in
imul
sbbl
jle
fdivr
test
jge
out
js
add
dec
insl
cmc
ljmp
mov
xchg
mov
xchg
xchg
pop
pop
shl
adc
ret
cld
push
sub
add
scas
pop
cmp
inc
jb
jnp
pusha
sbb
pop
xchg
clc
loop
push
inc
addb
mov
int
lret
or
cwtl
mov
popf
cs
cmpsl
pop
lock
rol
les
xor
lahf
pop
sbb
xchg
fcmovbe
jb
dec
movsl
lea
sub
mov
movsb
sahf
sub
ret
mov
test
xor
pop
or
xor
loopne
inc
cltd
cld
ret
xor
push
lods
rcll
push
loope
and
push
jns
aam
rcrl
lea
dec
mov
sahf
gs
orl
ja
stos
lcall
lock
std
sub
add
jbe
popf
cmp
in
sub
insb
inc
loopne
push
dec
test
dec
mov
out
cmp
jns
adc
shlb
push
jg
insl
lret
jae
push
inc
in
in
test
adc
into
cmp
icebp
cwtl
push
inc
dec
cwtl
iret
stos
inc
and
sti
push
and
pushf
call
push
sbb
data16
movsl
and
ret
add
movsb
push
dec
pop
sbb
pop
adc
call
jb
add
push
rol
fcmovb
and
xlat
dec
scas
sub
sub
mov
adc
adc
adc
or
out
mov
fstps
inc
cmp
out
nop
pop
mov
sbb
mov
test
mov
push
in
ret
adc
leave
scas
jg
imul
lcall
add
out
cmp
popf
jge
sbb
ret
popf
loop
stos
andnps
clc
sbb
aas
repz
sbb
shll
xchg
adc
mov
fcmovnb
dec
int
xchg
sbb
jle
inc
mov
in
in
jne
scas
mov
sbb
stos
fistps
stc
cmc
mov
dec
fsubr
xlat
push
cs
lea
cmc
shll
cmc
and
sbb
mov
rcl
cmpsl
nop
sub
and
and
leave
out
sti
icebp
rcrl
in
pop
dec
ss
shll
inc
or
push
xor
test
into
cmpsl
and
and
mov
lret
push
out
inc
mull
mov
in
dec
cli
inc
cmc
insl
shlb
arpl
cmc
je
jmp
fisubrl
pop
ficoms
popa
rorb
pop
cld
mov
hlt
fsubrs
pusha
mov
call
setg
and
cmp
sub
dec
dec
or
insl
xchg
loope
lds
push
aas
shll
sub
enter
push
lods
and
jne
mov
add
lret
xor
push
ss
pop
cmpsb
push
movsb
jno
fmuls
mov
mov
notl
jecxz
cmp
in
or
lret
mov
movsl
sbb
mov
out
xor
pop
dec
aad
loope
mov
insb
add
inc
jae
or
sub
inc
fimull
enter
xor
js
clc
shll
add
mov
into
xchg
xchg
mov
push
push
or
pop
test
ret
fmull
jmp
dec
adc
or
and
stos
xchg
cmp
push
mov
push
aaa
ljmp
nop
mov
sahf
out
out
pop
iret
mov
ffreep
loop
push
int
pop
leave
shlb
jnp
std
sub
xchg
test
movsb
mov
pop
cld
sub
or
stos
jecxz
imul
mov
cld
mov
repz
punpcklwd
push
and
push
mov
pop
insb
fdivrl
popf
insb
pop
jge
pop
flds
sub
ret
rorl
adc
push
push
mov
std
jbe
adc
addl
fwait
loop
roll
test
fsts
shlb
stc
jo
jle
xchg
mov
jl
mov
mov
add
push
aam
sbb
xor
outsb
fmul
push
sbb
mov
mov
js
repz
call
push
les
lds
aam
xlat
inc
push
ficompl
mov
add
mov
jmp
jle
cs
imul
mov
jl
pop
push
and
jecxz
mov
enter
mov
bound
pushf
xor
sub
jp
mov
scas
push
cmc
cli
jge,pt
cmpsb
jns
add
xchg
inc
ja
movsb
pop
xchg
sbb
in
out
jecxz
test
and
jle
cmpsl
sbb
push
push
xchg
adc
daa
and
xor
out
jbe
sbb
pop
cmp
dec
test
lret
jp
push
pop
loope
rclb
inc
jae
js
jne
mov
push
jmp
lahf
push
in
rorl
jb
add
fwait
and
add
test
flds
sub
mov
mov
or
or
loop
int3
sub
pop
cmp
mov
js
aam
das
in
push
cmpsl
flds
pop
dec
jbe
mov
incl
ds
fiaddl
jl
loop,pn
xchg
and
xchg
mov
add
sbb
cwtl
lcall
adc
sbb
mov
mov
imul
sbb
pop
gs
push
sbb
inc
mov
shrl
inc
dec
shll
inc
adc
dec
add
mov
sbb
lcall
cmc
enter
or
mov
mov
pushf
out
outsb
jmp
cmp
lock
ja
add
or
push
movb
repnz
icebp
test
imul
or
aad
bound
icebp
pop
push
adc
rcll
fistpll
jle
jge
sub
add
loopne
push
aam
nop
in
pop
pop
push
push
in
repnz
repnz
pop
test
adc
dec
jmp
pop
xor
hlt
jl
push
out
sbb
push
mov
out
pop
fdivrs
inc
add
scas
addr16
js
mov
cli
jno
dec
test
jle,pt
push
and
push
and
or
xchg
fcmovne
inc
sbb
push
fidivs
rclb
imull
repz
pop
cmp
cmp
out
aas
adc
mov
or
sti
fs
xor
add
push
hlt
pop
cwtl
or
xchg
fcomps
int3
pop
xchg
jo
test
shlb
fildl
mov
das
popa
xchg
decb
repz
lcall
repz
pop
mov
movsb
mov
xchg
dec
cs
mov
sbb
pop
insl
lods
jae
fstps
int
pop
enter
adc
push
jp
adc
lock
int3
cmc
sub
jmp
pop
addl
and
and
cs
mov
daa
mov
cmpsl
lods
cwtl
faddp
cmpsl
gs
adc
pop
ficoml
fdivr
bound
loopne
icebp
fdivr
mov
and
and
cwtl
lret
sub
shr
pop
mov
mov
mov
add
push
rcrb
leave
push
addl
dec
out
xchg
mov
cmp
incl
xsaves
push
jo
pop
adc
dec
subb
jge
outsl
in
mov
push
fcmovb
and
les
test
test
imul
mov
and
xchg
loop
aad
sub
mov
into
add
cld
clc
pop
out
xor
mov
mov
int
push
xchg
sbb
out
lods
sbb
shlb
movsl
rolb
inc
orl
mov
jge
lds
jb
leave
cmpsb
mov
add
nop
fsubl
nop
sub
cmpsb
dec
mov
clc
icebp
fs
lret
sub
jge
dec
js
test
icebp
cmp
dec
xchg
js
call
sub
mov
mov
lahf
or
cltd
add
orl
lret
xor
pop
nop
or
jl
push
ljmp
fstpl
shl
push
cmp
bound
cwtl
dec
andl
mov
adc
icebp
pushw
mov
mov
fldt
cmpl
jne
ja
sub
in
inc
mov
daa
int
insb
xor
je
aam
aas
or
hlt
add
pop
lcall
lds
jns
push
mov
loope
sbb
push
inc
into
stc
xchg
scas
pop
push
or
pop
fildl
popf
ja
je
jns
lods
or
jb
lahf
dec
repz
lcall
inc
inc
or
cmp
popf
data16
jle
in
aad
sub
lods
into
loop
add
mov
test
addr16
mov
add
ret
xor
mov
int3
sub
sbb
aam
int
xchg
leave
jl
mov
adc
mov
loope
leave
inc
mov
sbb
mov
add
movsb
mull
mov
mov
push
dec
add
mov
inc
dec
push
mov
pop
sub
jo
pusha
mov
xchg
jb
es
inc
mov
out
sbb
xchg
jne
cmpsb
out
jp
mov
pop
mov
aad
xor
cmp
xlat
add
mov
je
sbb
dec
cmc
sub
test
jp
adc
jl
sbb
xchg
aam
rorl
nop
push
push
mov
pop
mov
lcall
mov
xor
jg
cmp
movsb
sti
out
int
mov
jecxz
scas
or
hlt
jl
ljmp
lcall
cmpl
movsb
push
fcoml
cmp
ds
inc
and
push
jecxz
sbb
vpmaxsb
push
movsb
movsl
xchg
dec
subb
push
inc
mov
pop
sarl
in
jbe
test
icebp
xchg
mov
pusha
fistpl
dec
xor
push
push
jecxz
int3
dec
test
arpl
hlt
add
lods
mov
in
loopne
sbb
jno
lcall
dec
mov
push
ror
mov
test
lret
fbld
insl
es
adcl
sbb
in
sub
daa
test
jne
jl
pop
fcompl
sbb
or
add
out
pop
jb
mov
rorl
bnd
sub
jge
xor
rcrl
or
pop
fidivl
pushf
int3
pop
fwait
subl
fdivrs
lret
cmp
out
pop
cmp
adc
pop
mov
cwtl
dec
ficompl
test
repnz
aad
std
aam
fs
int
xor
adc
into
call
adc
xchg
and
lcall
pop
xchg
int3
stc
in
mov
mov
cwtl
xchg
push
fwait
fs
add
sub
xchg
xchg
xchg
push
fs
pop
xlat
mov
mov
cmpsl
push
push
cmp
jl
xchg
jge
or
mov
adc
push
lods
dec
das
and
dec
xor
leave
rolb
xor
mov
inc
loope
push
cld
shlb
cmp
jg
loopne
mov
aad
sbb
call
jns
add
xchg
aas
mov
cmp
add
sub
clc
movsl
sbb
idiv
pushl
xchg
cmp
or
jno
mov
ss
jno
dec
jg
sub
jns
mov
outsl
push
mov
cmp
mov
adc
add
je
cmc
jmp
or
lahf
mov
enter
xchg
add
scas
imul
js
jecxz
stos
ficomps
mov
lock
in
int3
push
nop
push
jg
or
push
fbld
pop
lock
enter
cmc
ss
es
shll
dec
push
ret
popa
jbe
enter
add
addr16
outsb
std
ret
js
pop
xor
inc
adc
dec
stos
push
xchg
cld
push
push
pop
fidivs
pop
mov
sbb
movsb
mov
or
dec
dec
mov
pusha
and
jbe
pop
pop
push
adc
sbb
jno
inc
faddl
sahf
in
outsb
addr16
lcall
ss
mov
mov
dec
pop
jne
leave
mov
and
xchg
sahf
lcall
and
xchg
add
out
inc
pop
js
mov
scas
test
ja
sbb
cmp
ret
jge
je
cmp
or
xor
jp
rclb
call
mov
mov
jns
mov
xchg
dec
mov
jne
push
xor
sub
in
test
or
mov
and
pop
mov
enter
mov
pop
les
arpl
or
stc
lods
test
pop
insb
xor
jns
imul
lret
pusha
sub
pop
aam
sti
cmpsl
pushf
cli
sti
push
mov
mov
inc
jmp
aam
out
jo
mov
popa
clc
ljmp
notl
out
scas
subl
cmp
mull
pop
jbe
sbb
outsl
rol
cmpsb
jne
inc
mov
mov
repz
loopne
or
lods
out
loop
mov
jns
fwait
test
and
fcmovbe
cmp
movsl
idivb
adc
jp
ret
push
hlt
or
push
test
push
adcb
insb
push
mov
jbe
sahf
daa
push
sbb
clc
inc
add
add
dec
dec
in
fs
jae
outsb
and
aam
add
in
add
arpl
or
mov
xlat
push
xchg
decl
cmp
mov
insl
int
loop
lods
push
jnp
jl
loopne
and
dec
add
aaa
xor
xor
std
jb
push
adc
pop
popf
cmp
jne
ret
sub
mov
pop
imul
mov
insb
in
mov
jnp
cmc
jg
xchg
call
scas
xorl
sub
repz
lea
mov
dec
or
icebp
pop
push
pop
aam
mov
push
and
pop
mov
push
sub
out
movsb
pop
cld
pop
xchg
jbe
xchg
xchg
xchg
pop
jp
ja
les
push
ss
push
adc
mov
sbb
loope
outsl
sbb
ds
cld
mov
mov
mov
shlb
dec
mov
dec
fs
xchg
int
repz
mov
loopne
dec
jnp
pop
xchg
decl
cmp
add
out
adc
push
mov
loop
jge
jecxz
pop
cmp
xchg
sahf
testb
iret
fldt
cmpsb
dec
sub
inc
xor
jne
mov
pop
sbb
mov
pusha
lods
icebp
cmp
stos
adc
and
pop
stos
xor
jae
xchg
sub
mov
pop
mov
aad
or
push
idivb
sub
repnz
cld
iret
test
outsl
lret
cmp
mov
inc
test
push
xchg
jnp
lea
inc
mov
shr
mov
jl
jmp
stos
int
or
pushl
dec
mov
add
or
mov
jge
pop
dec
xchg
cmc
mov
call
ss
pop
dec
inc
sbb
sbb
outsl
loopne
pop
jp
mov
jmp
scas
xchg
fnstsw
fdivrs
cmpsl
push
xor
mov
and
push
lods
xor
adc
push
mov
fstp
xor
dec
cmpsl
fwait
or
mov
mov
cmpb
push
pop
das
notl
jno
mov
fldenv
inc
mov
or
push
inc
cld
hlt
addl
stos
mov
jnp
loop
xor
push
adc
cmc
mov
inc
sub
pop
pusha
movsl
out
in
jb
dec
xchg
int
icebp
loop
mov
js
testl
mov
mov
test
mov
add
bt
pop
pop
inc
xor
cmpb
xchg
xorl
sbb
mov
add
xchg
mov
es
stc
outsb
insb
sbb
push
sub
test
leave
sub
xchg
push
cltd
andb
rcrb
sub
scas
jmp
inc
xorl
call
idiv
sub
push
js
jo
cld
stos
add
int3
and
in
xor
je
std
sbbl
pop
inc
xor
or
lods
xor
dec
adc
scas
dec
dec
jb
scas
lea
mov
mov
inc
pop
xchg
xor
or
xchg
and
sbb
dec
mov
aas
out
sbb
in
outsb
fnstenv
out
and
or
sbb
lret
in
xor
adc
xchg
and
fdiv
into
mov
psubsw
xchg
mov
cmp
pop
jb
mov
ret
movsb
add
xorb
sub
dec
push
test
mov
es
push
fwait
add
push
xlat
dec
inc
jnp
cmp
arpl
jae
push
push
les
mov
imul
dec
lock
mov
rcrl
fs
enter
mov
cli
lds
arpl
push
int3
cs
dec
push
out
sbb
pop
and
pop
aas
mov
movsl
ret
gs
insb
xor
jns
xorl
and
inc
push
cld
fdivrl
test
sarb
frstor
fmuls
bound
mov
call
dec
es
mov
daa
les
fcomi
stos
sbb
mov
or
xlat
xor
es
mov
adc
mov
mov
xchg
inc
popa
enter
push
cltd
cmp
fbld
fyl2x
push
sbb
push
adc
movsl
mov
xor
adc
jne
sti
and
xchg
aam
shll
ja
js
lea
add
jg
jge
inc
testb
int
pop
push
sbb
xlat
in
out
adc
ret
xchg
pop
or
mov
mov
mov
dec
jo
mov
stc
inc
xlat
jg
das
mov
adc
cld
push
push
or
jle
stos
push
js
loop
lock
fwait
data16
pop
jb
iret
mov
int
cmpsl
sbb
push
mov
mov
mov
inc
arpl
out
pusha
leave
ds
jne
push
aaa
repnz
lods
cmp
mov
xchg
lret
mov
rcl
cmp
mov
and
sub
adc
sbb
aad
inc
pop
mov
inc
int
negl
lods
fstps
mov
mov
in
lret
cmpsl
mov
jns
fisttpl
push
jg
in
mov
xchg
xor
and
movsb
mov
repz
cltd
mov
imul
mov
out
and
xor
iret
push
rclb
push
fisubrl
scas
inc
fs
sbb
cltd
in
push
or
pop
movsl
dec
clc
addb
and
pop
lods
xchg
xlat
sarb
int
nop
rep
mov
dec
sub
sub
ljmp
add
pop
nop
jmp
sbb
and
popa
repnz
pop
jg
or
inc
cmp
fwait
xorl
inc
mov
inc
sbb
sti
insb
xlat
popa
sub
jg
mov
fs
or
or
loopne
enter
mov
mov
push
fmuls
and
push
decl
mov
cmpsb
sub
inc
sahf
mov
pop
movsb
sub
das
scas
out
inc
les
bound
fisttpl
sub
mov
stc
shl
push
jno
or
cmp
and
xchg
sti
jo
rclb
fsubr
push
inc
or
aam
dec
lahf
cmp
and
loop
inc
out
insl
rcrb
cwtl
jle
or
pusha
shlb
xorb
or
jns
shll
adc
lret
and
imul
sarb
cs
mov
and
fisubrs
imul
mov
dec
xor
dec
roll
xor
mov
out
fadd
out
xor
test
cwtl
adc
testb
xor
dec
jns
divb
cld
test
imul
mov
sbb
xor
mov
outsl
gs
or
mov
popa
xchg
xor
mov
adc
mov
test
ret
sbb
mov
in
mov
test
scas
cltd
sbb
dec
outsl
adc
addr16
pop
aas
inc
enter
fcomps
out
xchg
lcall
clc
lods
and
jb
jne
cmpsb
inc
fisubrs
aad
mov
lods
aaa
call
loopne
xchg
add
lock
fwait
ja
add
jmp
sti
aam
or
push
mov
add
fbld
fiadds
lock
mov
into
pop
pushf
std
shrb
push
into
jns
repnz
push
fcoms
mov
cli
lcall
mov
cmp
mov
sbb
fcompl
popa
and
or
ss
shll
std
sbb
mov
repz
push
add
arpl
inc
pop
adc
adc
clc
add
xor
out
lret
hlt
or
cld
adc
push
rcr
xchg
into
mov
imul
xchg
add
xchg
addr16
lahf
mov
mov
pop
sbb
pop
lea
idiv
into
add
mov
pop
ds
xor
and
add
xchg
hlt
rcl
xchg
sub
nop
in
inc
stos
ret
test
outsb
sbb
ljmp
cmc
loopne
or
pop
push
addr16
cmpsb
ret
adc
xor
push
lods
jnp
sbb
lret
lret
out
ret
mov
fstpt
addr16
fildll
pop
mov
enter
dec
out
jo
leave
sub
jo
sbb
sarl
fwait
shr
aam
cmp
sbb
xlat
dec
pop
lahf
test
das
scas
pop
fwait
sub
fdiv
jno
mov
dec
adc
into
fs
hlt
ljmp
std
gs
mov
inc
lock
add
shlb
pop
jge
xchg
cmp
push
xor
mov
daa
mov
daa
insb
popa
fcomip
push
ss
xor
mov
test
mov
fcomi
jge
les
insb
jo
cmp
sub
adc
pushf
jns
jp
or
xchg
out
repnz
pushf
fldenv
fwait
repnz
xor
adc
xor
adc
insl
or
xchg
ljmp
sbbb
push
test
lret
mov
dec
push
out
add
dec
push
jmp
cmp
xchg
jb
ds
cltd
mov
sbbl
loop
cld
aam
sbb
in
int
repz
mov
stos
adc
lds
pop
rorb
aas
push
data16
xchg
push
cli
mov
outsb
pop
les
pop
push
push
testl
ljmp
inc
nop
pop
or
inc
xlat
xor
inc
mov
inc
add
sub
and
pop
cli
mov
fld
movsb
aas
lods
add
arpl
xor
mov
sti
inc
cmp
ret
test
push
mov
push
jbe
call
lods
push
test
xchg
pop
xor
pop
push
in
xchg
shl
aaa
pop
je
in
ret
loope
lods
push
sti
xchg
adc
bound
and
das
in
test
jmp
icebp
mov
xchg
ja
hlt
mov
test
sbb
ret
sbb
jae
jne
and
cmpsb
fildl
add
or
imul
push
fmul
mov
fwait
sbb
mov
cli
mov
cmp
mov
scas
pop
bound
test
mov
mov
or
sub
incb
stos
and
lea
sub
mov
inc
add
mov
add
in
xchg
aam
out
push
or
push
out
fisubs
cmp
mov
into
aam
leave
pop
mov
pop
pop
stos
js
sti
xchg
enter
mov
mov
cmpsl
nop
cmpsb
or
jae
mov
mov
imul
lods
stos
loope
add
and
jno
jge
dec
ljmp
scas
bound
dec
cs
ljmp
out
jmp
out
or
int3
fdivrl
cmp
data16
mov
movsb
adc
push
loope
jb
std
adc
cwtl
sbb
inc
popa
mov
cmpsb
pop
add
scas
cs
pop
scas
popa
jge
inc
fnsave
andl
pop
push
dec
enter
cs
push
xchg
sbb
pop
pop
pop
add
shl
sahf
xlat
xchg
xchg
lods
mov
and
cmc
jns
ss
mov
mov
lock
int3
stos
mov
push
mov
mov
pop
jne
push
pop
stos
dec
pop
das
sbb
nop
test
lea
cmpsb
or
mov
xchg
cmpsl
and
adc
arpl
sti
cli
inc
push
pop
xbegin
sub
mov
dec
jl
out
pop
mov
leave
dec
sub
dec
mov
cmc
pop
sahf
outsb
jg
xchg
cmpsl
lock
lret
add
std
in
es
push
in
xchg
jle
js
sub
push
push
dec
sbb
inc
adc
into
popa
cli
mov
sub
pusha
lds
inc
scas
pop
push
shlb
in
insb
lret
out
ret
add
aam
icebp
int
sub
jg
or
lds
sbb
mov
leave
lahf
shlb
dec
mov
sahf
sbb
xchg
aam
clc
push
xchg
enter
js
idivl
scas
dec
sub
test
or
loopne
add
das
test
das
push
xchg
scas
mov
rorl
dec
test
imul
scas
xchg
push
push
insl
jae
mov
cmpsb
push
pop
imul
xor
adc
or
pop
int3
mov
mov
mov
cwtl
xor
sahf
fldcw
adc
mov
lds
cmp
inc
test
sub
std
pusha
loopne
jge
xchg
in
mov
xor
aam
or
mov
push
xchg
inc
je
push
in
jle
mov
dec
sbb
inc
je
dec
mov
das
iret
inc
mov
cmp
xor
ret
out
push
stc
popa
or
fisttpl
inc
mov
pop
mov
mull
jbe
adc
test
shl
and
pusha
xchg
loop
jnp
dec
add
popf
fwait
mov
add
std
fidivs
es
mov
dec
sbb
ret
movsl
pop
cwtl
pusha
stc
call
sub
outsl
leave
adc
jle
adc
jnp
xchg
push
pop
lea
mov
add
mov
fisubs
cmp
cmp
mov
push
or
sbb
popa
cld
and
jmp
mov
out
arpl
cmp
inc
mov
jae
sub
mov
int
inc
aam
test
repz
sub
dec
cmpsb
inc
scas
lret
push
jo
xchg
xchg
lds
leave
pop
mov
or
inc
in
scas
sbb
add
mov
ret
cli
inc
cmc
out
and
mov
lods
fwait
aas
push
and
sti
loopne
push
arpl
mov
imul
out
sbb
adc
or
add
and
lock
xchg
mov
push
inc
pushf
sub
int3
and
out
jae
lret
sbb
cli
mov
int3
cmp
jae
mov
scas
mov
and
jmp
dec
fidivl
jle
or
inc
jbe
pop
hlt
pop
faddp
ret
cmp
iret
lds
pushf
test
sahf
insl
into
inc
fldenv
pop
notb
add
ret
inc
inc
pop
jb
fdivrs
jo
shll
mov
mov
sbb
repnz
bnd
orl
xlat
ret
test
mov
fists
sub
push
in
scas
jg
rolb
adc
mov
mov
ds
mov
adc
sbb
dec
sbb
cmp
test
aas
fildll
jge
icebp
lock
in
cvtps2pi
popf
cmp
pop
outsb
mov
fcoml
or
ret
mov
inc
repnz
jbe
rol
mov
and
rcrb
loope
mov
addr16
adc
lret
ret
in
daa
cmp
call
cmc
mov
adcl
sbb
mov
push
je
xchg
dec
inc
rcl
push
and
inc
rclb
jg
xor
dec
adc
push
stc
cs
enter
js
cld
add
cmc
adc
daa
and
arpl
lcall
mov
add
mov
mov
icebp
cmp
mov
and
sub
sti
add
dec
ja
inc
clc
sbb
gs
sub
in
testl
andb
push
inc
popf
stos
sbb
arpl
adc
xchg
pop
jmp
pop
adc
movsl
inc
xor
mov
push
js
xchg
or
dec
add
inc
push
insl
add
inc
dec
mov
mov
and
jne
ja
sub
decb
or
ss
mov
subb
pop
stos
addl
xchg
cld
cli
sahf
mov
jp
push
loope
xchg
ret
xor
mov
cli
xchg
mov
push
push
push
jle
add
mov
ret
jnp
loop
mov
jecxz
dec
mov
shl
mov
dec
mov
andps
scas
push
and
fbstp
add
movb
insb
lret
ds
xlat
cmp
incb
push
push
mov
jmp
imul
sub
dec
rol
xchg
xor
sub
add
xchg
int3
movsb
dec
push
js
sbb
cs
test
and
fwait
pop
rorl
xchg
xor
mov
jbe
xchg
loopne
xchg
jns
ret
cmpsb
dec
cwtl
adc
daa
cmpsb
sub
xchg
xor
sbb
pushf
push
test
loop
fndisi(8087
push
mov
shrl
mov
out
lret
enter
or
push
mov
pabsd
out
popf
mov
or
jnp
mov
lock
pop
ds
lret
rcr
popf
mov
call
daa
mov
pop
adc
xor
clts
inc
inc
movsb
inc
mov
rorl
adc
adc
out
cli
push
pushf
cmp
subl
mov
loop
dec
imul
or
jp
pop
inc
sbb
push
jbe
xor
outsb
sbb
ret
mov
xchg
mov
lock
mov
xchg
mov
pop
mov
loop
shll
jmp
cmp
shlb
movsb
aas
loope
popf
and
testl
inc
jmp
and
into
enter
and
mov
push
xor
inc
mov
mov
pop
mov
fbld
icebp
sahf
mov
pop
pop
mov
scas
adc
lock
outsl
fs
add
andl
mov
or
dec
jnp
xchg
and
shll
inc
adc
roll
sarb
dec
cmp
mov
lahf
loopne
sbb
jp
jge
push
add
xchg
cvttps2pi
call
jae
lods
dec
xchg
daa
mov
es
xchg
push
inc
sbb
push
xlat
lock
in
adc
xchg
or
pop
lret
loope
or
mov
test
dec
imul
dec
or
dec
mov
imul
dec
push
xchg
inc
xchg
xchg
mov
mov
in
aam
jl
js
sub
push
jge
ret
mov
lcall
dec
inc
mov
dec
ss
mull
dec
out
jno
shll
sbb
mov
mov
call
mov
test
lret
mov
enter
sub
fs
mov
jmp
push
adc
cmp
daa
add
mov
mov
movsb
lods
mov
mov
pop
inc
leave
inc
pop
xchg
inc
pop
popf
mov
and
inc
es
gs
sub
repz
cmp
push
or
cmp
mov
das
aas
jo
movsb
mov
and
mov
mov
sbb
mov
push
mov
imul
fs
lret
xor
sbb
bound
ret
mov
movsl
push
jbe
and
gs
xchg
dec
loopne
mov
mov
cmp
cmp
and
or
cs
inc
sahf
hlt
ss
in
or
outsb
cs
inc
sti
aad
cmpsb
lock
aad
clc
jecxz
std
movntq
out
in
sti
and
aad
xor
jg
and
and
pop
fwait
imul
stos
sar
sbb
dec
adc
or
in
add
inc
pop
jecxz
fcmovu
xchg
test
dec
in
enter
ficoml
mov
jg
adc
dec
sub
jbe
jbe
jmp
cmpsb
ret
mov
inc
mov
push
push
dec
icebp
jg
mov
aas
lods
loop
mov
jb
inc
mov
and
sbb
fidivl
lods
icebp
cs
and
mov
sub
hlt
or
imul
push
add
in
cmp
imulb
nop
push
cmpsl
sub
or
pop
mov
sbb
xchg
push
iret
or
rcrl
jnp
or
inc
jl
mov
sub
inc
jle
test
fldl
mov
pop
dec
sub
lret
sub
nop
jb
fs
xor
jecxz
cmpsl
and
into
cmpsb
aaa
mov
mov
pop
jbe
scas
mov
lock
movsl
fwait
mov
jle
mov
jns
gs
add
dec
mov
dec
inc
in
xchg
addr16
inc
out
les
jl
rcrb
popl
inc
lock
add
cmp
xor
xor
fcompl
jmp
mov
cmp
pop
pop
jbe
add
sub
mov
or
int
jns
or
cwtl
lea
lret
mov
push
inc
js
mov
flds
outsl
leave
cs
and
sbb
test
stos
xor
add
add
popa
negb
adc
lret
adc
sbb
adc
mov
test
ud1
shl
fldt
push
adc
dec
lcall
push
and
push
fmuls
mov
cmp
sti
push
incb
pop
mov
pusha
fidivrs
js
cmp
mov
cmovbe
dec
mov
push
shlb
ret
fistpl
cmp
xchg
fcompl
fdivl
mov
add
daa
outsl
insl
xchg
sub
pop
inc
stos
pop
mov
add
pop
test
jne
and
movsb
je
sbb
lods
movsl
scas
dec
adc
repz
sub
push
sahf
je
or
pop
mov
stos
mov
jecxz
rolb
xlat
mov
orb
sub
arpl
cmp
cmp
inc
hlt
sbb
dec
pop
pop
mov
rcll
adc
cld
mov
lcall
shr
and
shrb
xchg
test
ret
andl
and
dec
movsl
sub
repz
stc
fstpt
aaa
lcall
push
movsl
loopne
mov
xor
adc
jmp
jo
aad
daa
inc
xorb
cld
js
dec
or
mov
jp
cmp
stos
scas
es
gs
popl
loope
mov
pop
add
xchg
push
xchg
sub
orl
mov
in
lret
loop
dec
pop
nop
and
push
push
push
pop
sbb
push
push
loopne
out
or
push
imul
pushf
in
pop
fildl
push
out
sbbb
ss
filds
cmp
adc
cmpsb
mov
outsl
inc
in
jb
scas
mov
mov
lock
repz
sarl
cwtl
insl
pop
jmp
pop
sbb
adc
or
xchg
imul
insl
cmpsl
shrl
cmp
or
or
test
pop
inc
aaa
shll
movsb
in
jmp
call
fdiv
cmp
and
out
xchg
adc
ds
push
iret
mov
adc
mov
or
mov
popf
sbb
pop
subl
adcb
mov
jne
bound
sbb
xchg
pop
mov
sahf
and
addr16
cltd
cmpxchg
or
lret
and
scas
pusha
insb
es
jle
add
inc
jo
stos
les
mov
push
mov
cmp
cmp
arpl
push
dec
repnz
cmp
push
fcomp
data16
pushl
shrl
fsubl
out
fs
push
push
jl
jo
into
mov
negb
sub
movnti
dec
and
push
pop
lahf
popa
mov
mov
outsl
pusha
add
sbb
mov
jae
dec
sub
insb
xlat
repnz
mov
or
jb
mov
jle
or
fldt
dec
arpl
cmpsl
test
int3
repnz
out
std
test
rcll
push
jp
out
jge
xchg
jnp
and
mov
addb
fimull
push
lods
divl
xor
push
ljmp
in
sub
out
testl
xchg
xlat
leave
loop
andb
sbb
push
leave
ret
js
sub
sbb
fs
popa
sbb
push
lock
iret
jg
or
jno
push
outsb
cli
inc
push
orb
jo
add
sti
jnp
adc
repnz
jle
and
daa
mov
xchg
pop
sub
jne
in
mov
es
add
movsl
lds
mov
lahf
inc
aaa
mov
or
int
test
icebp
jmp
out
aam
imul
cmpsb
jl
jp
mov
jl
rcrl
cmp
lret
xchg
xor
dec
xchg
dec
loop
cmpsl
xchg
lcall
mov
mov
inc
mov
jge
cmpsb
jne
xor
pusha
and
jno
lea
cmp
pop
pusha
and
add
push
sub
std
jmp
fistps
lock
add
inc
addb
dec
jp
cltd
loope
pusha
xor
cmp
jno
cmp
mov
jle
std
imul
out
inc
lock
fnstsw
cwtl
mov
ljmp
push
push
sub
cli
push
xor
outsl
into
sbb
xchg
jg
xlat
scas
xor
inc
pop
mov
movsl
test
sbb
xchg
inc
sub
aaa
cmpl
mov
jle
outsb
cltd
dec
push
test
andb
lahf
sbb
jns
push
test
cmc
adc
cld
xor
repz
lock
push
test
nop
ss
lods
mov
cmpsl
sbb
add
lea
enter
nop
ret
mov
and
shll
mov
inc
jne
add
xor
pop
and
mov
and
inc
or
inc
jne
or
lea
xor
cmp
push
cwtl
push
xchg
inc
add
mov
fistps
or
adc
dec
fisubrs
mov
jecxz
xchg
pop
dec
mov
pop
lret
pushf
mov
mov
or
lcall
jecxz
cmp
adc
mov
xchg
pop
mov
pushf
mov
jb
daa
dec
lods
fists
jg
aas
cmp
fwait
jl
xchg
mov
mov
mov
sbb
lret
push
mov
leave
cmp
pop
adc
cwtl
push
mov
push
in
xor
xchg
jg
jp
mov
cltd
pop
pop
test
mov
and
inc
es
leave
inc
insb
mov
pop
bound
lock
lret
add
jbe
add
jne
or
xor
out
dec
aam
sub
dec
adcb
mov
mov
out
cmp
movsl
xchg
sub
xlat
mov
push
gs
rclb
xchg
sbb
not
popf
inc
push
sub
mov
mov
jnp
or
pop
add
dec
mov
add
mov
enter
inc
jmp
cmpsl
pop
lret
xor
dec
mov
push
xorb
neg
inc
or
mov
jle
push
andb
hlt
popa
aam
cmp
fcompl
popa
inc
jl
and
inc
jbe
orl
into
cmp
mov
mov
mov
repz
mov
sbb
mov
push
mov
jnp
pushf
add
xchg
xchg
test
scas
pop
dec
insb
icebp
add
xchg
out
lods
es
cltd
jl
subl
imul
mov
sbb
sbb
jb
fwait
xor
inc
aas
push
xchg
sbb
sub
jo
in
cltd
or
imul
jl
cs
out
jle
roll
xor
jge
stc
push
sahf
rcrl
mov
insl
sbb
je
and
push
mov
sbb
lods
into
pop
ljmp
dec
scas
adc
rolb
xor
movsb
cmpl
push
mov
das
in
push
sub
lods
add
repz
dec
mov
pop
or
adc
push
dec
subb
fidivrs
out
lock
mov
notb
pop
cli
shlb
jne
mov
rcr
push
mov
lea
stc
jo
cltd
mov
inc
inc
xor
cmc
add
es
dec
lcall
push
sti
add
jge
add
mov
pop
push
sub
loop
or
cmp
xor
mov
jmp
enter
aad
or
mov
mov
inc
cmp
fdivs
pop
xor
add
into
inc
outsl
repnz
push
fidivrs
push
lret
or
fsts
xor
mov
push
cmp
shll
xchg
push
and
or
adc
insl
push
cmp
cld
sub
mov
and
shl
notb
pop
sahf
jb
xor
notb
fldenv
xorl
jns
repnz
insb
negb
not
mov
cmp
mov
fnsave
xchg
lahf
push
dec
inc
clc
push
cmp
lock
dec
mov
aad
mov
adc
mov
into
and
lock
jb
pop
stos
rcrb
stc
sbb
xor
fldcw
fstps
rcr
sub
xchg
lods
fisubs
or
lea
imul
mov
add
out
mov
inc
dec
xchg
aaa
cmpl
push
fwait
xchg
jns
out
or
jnp
jnp
mov
mov
sub
imul
or
popf
jnp
sbb
sbb
popf
jbe
insl
push
movsb
cli
and
out
sub
sbb
or
mov
sbb
dec
push
sub
mov
xchg
out
sahf
sbb
out
jmp
shrb
and
andb
jp
mov
mov
inc
dec
mov
loopne
xor
xchg
xchg
inc
mov
sub
idiv
and
push
dec
stos
mov
daa
and
mov
mov
std
testl
mov
mov
fs
or
push
je
cmp
fildl
mov
adc
xchg
mov
mov
cmpsl
push
movsl
sbb
lods
push
mov
add
and
mov
call
shll
xchg
lret
fidivrs
out
in
pop
mov
shl
jo
xchg
outsb
xor
in
inc
adc
insb
push
addr16
pop
add
jno
bound
sub
out
mov
mov
out
pop
sbb
dec
and
xlat
es
stos
pop
xchg
icebp
divl
cmp
pushl
adc
data16
dec
out
aam
into
lods
mov
cli
loopne
fdivs
fwait
mull
leave
mov
test
mov
jl
mov
mov
shrl
lret
jl
jg
jp
mov
bound
shrb
mov
in
xchg
jl
dec
xor
mov
adc
jae
cmc
mov
or
sbb
xor
mov
jp
arpl
or
mov
stos
roll
dec
push
push
push
das
inc
test
mov
inc
sub
xchg
aas
jg
sbb
fiadds
stos
addr16
jmp
into
int
test
test
xor
test
sbb
je
xlat
and
xchg
jge
outsl
loop
fnstcw
lds
aas
push
jo
cmp
ss
mov
les
xchg
in
dec
loop
mov
fwait
xlat
es
jae
pop
shll
cmc
adcb
sub
push
repnz
jb
inc
add
call
iret
and
test
pop
or
std
data16
xorl
mov
rcll
mov
pop
xchg
adc
sbb
adc
pop
inc
fs
ss
jmp
movsb
lret
repnz
push
inc
je
sub
xadd
jo
dec
pop
adc
jns
xchg
xchg
mov
rcl
fstl
xor
xor
shl
into
fstl
insb
stc
jo
repz
cmp
fiaddl
outsl
sub
or
imul
daa
stos
sbb
ret
shl
int3
iret
fstpl
adc
lahf
call
sarl
add
mov
sbb
pop
pop
jmp
xor
or
adc
ja
aas
xor
mov
sbb
pop
lret
inc
insl
xor
in
adc
jg
inc
cmovo
pushf
cltd
punpckldq
mov
pop
lods
scas
int3
outsb
aas
mov
xor
imul
push
push
add
sub
out
add
mov
lock
xchg
sbb
loop
inc
mov
jo
xor
adc
sbb
xchg
adc
push
inc
jmp
out
xor
adc
sbb
roll
fidivrl
cli
ja
cltd
dec
cmc
out
rolb
cltd
inc
jo
jae
in
mov
lcall
xchg
jmp
out
sbb
fcoml
addb
sub
hlt
mov
jb
push
pushf
dec
jg
dec
es
cmpsl
xor
sbb
inc
mov
push
divb
int
mov
sbb
movsb
dec
shlb
in
inc
arpl
and
inc
jo
xrelease
imul
insb
add
inc
lds
or
aad
fistpll
fisttpll
push
cmp
dec
movsb
mov
add
adc
popa
or
pop
cmp
ret
xor
andb
pop
cli
out
add
inc
pop
inc
fs
mov
xchg
dec
sub
sahf
mull
movsl
lcall
movsb
add
rsm
daa
cmp
inc
adc
sbb
les
in
jle
loop
and
mov
or
push
daa
lock
add
insl
pusha
add
or
add
stc
mov
cmp
adc
sbb
in
icebp
push
dec
outsb
int
fcompl
xchg
and
mov
mov
call
stos
popf
inc
and
pushf
mov
andb
clc
mov
into
sbb
ret
and
jl
and
roll
repnz
or
xchg
test
adc
xchg
outsb
xor
mov
cmp
cmp
mov
repnz
cmc
inc
adc
jmp
sbb
jo
add
jns
cmpl
dec
int
lods
push
jno
inc
mov
inc
into
inc
in
movsb
negl
mov
test
pusha
pop
inc
add
in
sti
adc
mov
inc
repnz
xchg
in
push
or
in
int
ret
jge
pop
and
sbb
mov
inc
push
cmpsb
cmpsl
inc
call
pop
js
lret
mov
and
push
int3
xor
or
fsts
xchg
adc
fdivrl
lret
out
fxch
mov
mov
jb
cli
push
js
push
dec
or
repz
cmp
jmp
mov
das
xor
mov
arpl
fwait
push
push
and
test
sahf
mov
fst
movsb
sub
js
lahf
and
push
aam
pop
loop
mov
test
ret
scas
xor
lea
push
jae
ret
push
fxam
std
push
out
jo
cli
and
mov
mov
add
xor
loope
push
scas
jae
mov
push
jg
xchg
and
jo
cmp
scas
stos
adc
xor
dec
jbe
push
mov
xor
pop
xchg
xor
mov
push
mov
std
cld
test
add
stos
dec
push
inc
cs
dec
sarb
shlb
dec
popa
push
int3
cwtl
test
sub
test
sti
outsl
lea
jnp
xchg
mov
mov
or
mov
push
jge
mov
test
push
mov
div
fisubl
dec
mov
and
outsb
lahf
mull
andb
add
and
sub
std
mov
pop
sbb
mov
leave
std
jle
adcl
dec
notl
push
adc
ljmp
xchg
sub
xrelease
rorb
cmpl
imul
push
cmp
fstl
inc
popl
shlb
jo
into
add
cmp
shll
inc
mov
jns
xor
negb
jmp
mov
mov
cwtl
xlat
mov
and
popa
in
push
push
mov
enter
flds
and
fstpl
and
neg
fistl
shlb
mov
movsb
cmp
adc
pop
dec
mov
rorl
cs
mov
dec
adc
sbb
sti
sub
out
cmpsb
in
adc
jae
psrad
rcl
std
jp
mov
and
gs
inc
repz
xchg
clc
push
adc
xchg
lret
cmp
jl
ret
jl
adc
ret
loopne
pop
fsts
popf
pop
xchg
push
dec
jbe
lcall
movsl
inc
cmp
scas
dec
stos
repnz
int
mov
or
aaa
cmpsb
cmp
mov
and
aam
setb
rorb
xor
ss
adc
xchg
add
sbb
and
mov
lret
xchg
fsubrl
add
dec
mov
sub
sub
pop
imul
out
loop
inc
add
mov
jnp
test
cli
cmpsb
mov
into
popf
out
insl
dec
popa
daa
repz
fwait
xor
add
jno
inc
xor
mov
test
push
aad
pushf
mov
test
push
mov
pop
int3
mov
and
dec
mov
mov
dec
push
add
jbe
push
sub
or
sbb
ljmp
pop
inc
jg
cmp
pop
xor
xchg
push
out
scas
insl
add
mov
mov
mov
lret
cs
pop
jp
int
std
repz
push
add
jl
int3
shl
mov
or
xorb
call
jecxz
stos
out
cltd
rcrb
adc
jne
stc
xchg
pop
sbb
dec
aad
or
mov
out
push
sbb
std
sbb
repz
and
fcmovnb
je
fsub
lahf
xchg
test
sbb
push
scas
sub
mov
add
cmp
sahf
xchg
mov
fucom
lea
shlb
mov
pop
jl
push
add
mov
cmp
into
pusha
in
daa
mov
fwait
call
dec
dec
out
in
add
and
dec
mov
sbb
int
shr
scas
loope
mov
test
mov
and
mov
adc
xor
dec
xor
sbb
or
mov
into
mov
ljmp
mov
imul
inc
xchg
sbb
gs
test
cmp
ffreep
ficoms
aad
cmp
leave
xchg
add
clc
and
outsb
and
icebp
mov
jg
jge
aad
mov
cmp
lret
idivb
fsub
aam
sbb
fdivrl
andps
sahf
mulb
push
mov
jno
aam
lcall
mov
sub
cs
dec
cmp
stos
lds
cli
and
pop
inc
cmp
or
jle
dec
sub
iret
std
in
pop
sub
ret
insl
push
fidivrs
sub
orl
pusha
test
push
xor
subb
inc
push
push
daa
repnz
mov
pop
jp
cmp
scas
push
push
loopne
sbb
jge
fs
add
add
jbe
jp
setnp
je
pop
hlt
push
sbb
add
sbb
and
outsb
adc
fstl
syscall
lahf
out
aas
jmp
sub
cld
dec
xchg
and
mov
leave
cli
sbb
or
mov
dec
xorl
inc
mov
xchg
lock
jecxz
arpl
push
adc
jae
add
push
ret
inc
dec
fmul
popf
addr16
sub
mov
jne
push
mov
insl
or
xchg
jp
jns
xchg
dec
lea
mov
test
mov
scas
repz
ret
or
jmp
xor
sbb
inc
mov
dec
xchg
fcomps
repnz
cmc
and
int3
pop
imul
or
outsb
es
aas
xchg
ljmp
in
pop
adc
adc
test
loope
mov
and
andb
cli
cmpsl
inc
xchg
jo
sbb
nop
leave
aaa
mov
lret
pop
stos
ja
mov
xor
mov
jbe
test
jg
inc
les
lcall
clc
cmp
adc
pop
je
clc
imul
adc
adc
adcb
aad
or
mov
inc
in
pop
xchg
xchg
gs
xchg
add
stos
jmp
and
mov
xchg
out
pop
dec
fldz
lods
jne
mov
repz
xor
xchg
ffreep
les
es
inc
cmp
mov
sbb
push
aaa
mov
stc
pop
push
pushf
cld
push
pop
lds
cmc
cli
loop
leave
add
inc
ja
aam
shl
mov
jle
bound
lods
outsl
out
pop
or
mov
fstps
push
shrb
in
jecxz,pn
inc
inc
and
rcll
dec
movsb
push
pop
xchg
mov
imul
insb
push
jle
in
mov
adc
test
das
pop
xor
jp
sub
add
pop
or
xchg
jns
mov
ja
jge
movsb
enter
jge
jo
fs
pop
push
test
pop
std
fimull
or
dec
or
mov
out
dec
daa
out
lds
scas
mov
ja
out
je
int3
imul
insw
inc
mov
outsb
cmp
cs
jp
jnp
mov
mov
adc
cmp
xor
fistpl
or
dec
and
inc
pop
aad
sbb
pop
int3
jge
ret
xlat
test
mov
lods
shll
lods
lods
and
pop
icebp
ror
mov
push
test
lods
test
mov
ret
fdivs
jns
dec
cmc
adc
jle
fmull
sbb
iret
lea
into
aad
hlt
push
xor
push
inc
test
in
xor
dec
in
pop
xchg
mov
jne
leave
stc
sbb
adcb
rclb
mov
sbbl
loopne
cld
mov
pop
add
std
enter
ljmp
sub
lahf
fnsave
xor
push
mov
jge
loop
xchg
sahf
push
sub
fcmovb
scas
jnp
ja
adc
jge
andb
dec
adc
jbe
jb
mov
inc
jbe
call
outsb
rcl
fucompp
mov
fimull
sub
pop
and
test
les
cmp
jmp
lods
rclb
dec
and
sub
push
xchg
test
inc
add
mov
jno
pop
mov
repnz
jnp
push
imul
ficomps
fstpl
inc
push
and
inc
orl
add
fldcw
jmp
add
mov
stos
sbb
xchg
mov
fsubl
push
adc
xor
mov
sbb
rclb
aad
mov
push
jecxz
or
mov
in
aas
sti
mov
cmpsl
dec
pop
dec
push
jge
cmp
movsl
mov
into
fwait
or
cmpsl
pop
icebp
adc
cld
sahf
lods
mov
jl
mov
adc
pop
pop
inc
pop
mov
fadds
mov
push
movsl
cli
test
mov
mov
lods
push
fidivs
sbb
and
rorb
push
inc
xchg
cmp
jo
adc
or
dec
fdivrs
push
sbb
mov
xchg
mov
js
cmpsb
stos
loop
push
push
jp
pop
into
xor
int
int3
sar
movq
sub
call
dec
mov
inc
jecxz
add
cs
jno
std
mov
cmpsl
loopne
mov
ret
faddp
mov
or
ss
inc
rolb
sub
xchg
dec
lds
sub
lods
pop
rorl
jge
xlat
icebp
ja
imul
pop
movsl
popf
out
push
or
imul
ss
les
movsb
ret
mov
stos
inc
inc
shlb
push
push
jns
xchg
in
leave
pop
and
into
cltd
repz
mov
aam
sti
fadds
xor
add
repz
add
icebp
sti
push
fistps
inc
lock
mov
xchg
xor
xchg
int3
and
jo
fisubrl
test
mov
into
cmpsb
pop
or
jae
leave
or
stos
jmp
pop
sub
jae
je
cmp
lahf
fildl
xchg
lret
cltd
push
adc
cmp
xchg
sbbb
mov
repnz
inc
add
dec
pusha
mov
repnz
adc
aad
and
or
maxps
mov
inc
in
jp
lods
fwait
je
es
aaa
push
sub
or
dec
mov
jne
jge
frstor
dec
jmp
or
sbb
scas
lds
cmp
dec
xor
and
dec
sbb
add
pop
mov
test
adc
outsl
iret
ss
and
jb
pop
mov
cmp
inc
push
add
pusha
mov
jecxz
fsubrs
sbb
cld
icebp
jle
or
mov
mov
adc
outsl
push
les
and
mov
adc
mov
insl
roll
sub
pop
xor
mov
mov
adc
jae
les
scas
ss
pop
imul
decl
sti
scas
xchg
pop
stos
ja
test
cmc
repnz
xor
cs
pop
sub
xor
div
or
fistpl
lea
cmp
aad
adc
pop
or
jne
or
test
or
inc
testl
sbb
in
push
cwtl
imul
enter
inc
imul
cmp
dec
xor
jns
add
orl
mov
ret
and
lods
sbb
decb
in
push
cmp
call
in
sahf
cmp
cli
lcall
pusha
lock
shrl
mov
ljmp
push
and
and
cwtl
mov
insb
jbe
inc
movsb
mov
and
ficoml
or
in
mov
das
push
push
cld
dec
or
cltd
mov
ds
mov
push
and
into
and
xchg
adc
enter
popa
and
xchg
and
iret
in
jecxz
in
xor
imul
xchg
mov
cmp
icebp
das
or
loop
and
in
push
enter
cltd
popf
and
std
sub
push
xor
fisubrl
push
adc
pop
repnz
dec
push
sbb
push
fsubl
bound
popf
clc
repz
push
pop
cmp
or
add
jne
fbld
sub
xchg
int
sarl
cmp
nop
mov
pushf
push
add
add
push
pop
push
xor
push
ficoms
out
inc
jae
fxch
xchg
sub
cwtl
sbb
inc
int3
out
push
aas
in
hlt
insb
mov
insb
popa
movsl
dec
shrb
ljmp
mov
or
fdiv
data16
mov
je
push
scas
adc
es
stos
adc
xchg
pop
rol
add
mov
hlt
mov
cmp
mov
add
push
sahf
push
mov
push
shlb
cmp
xchg
push
iret
das
jns
lret
cmp
scas
and
or
pop
mov
adc
mov
pmulhuw
jp
adc
dec
mov
mov
sub
inc
adc
adcb
dec
fs
mov
jb
ja
in
fcoml
lret
lret
pushf
es
in
adc
out
pop
pop
pushl
mov
mov
xor
adc
je
fisubrl
repz
mov
mov
outsl
sahf
out
pop
hlt
xor
popa
nop
dec
insb
negb
pushf
sbb
pop
movsb
and
lods
mov
jg
mulb
mov
sbb
mov
out
push
test
jb
clc
pop
dec
cmp
aaa
ljmp
bound
rcll
arpl
mov
xchg
icebp
xchg
pushl
add
lret
scas
inc
adc
iret
imul
xchg
sar
sbb
mov
lds
pop
mov
xor
loope
loop
sahf
in
push
and
bound
fdivrs
jb
sarb
jo
push
xchg
inc
or
pushf
jmp
sbb
sub
pushf
jp
mov
jmp
and
and
sbb
xchg
xor
push
sbb
out
ret
pop
int3
lahf
push
into
cmc
lret
jbe
push
mov
sbbl
push
je
in
hlt
ds
stc
insb
adc
test
outsl
adc
adc
popa
add
add
xchg
rorl
xor
jp
lret
notb
je
mov
cltd
cmpsl
jbe
aam
mov
jo
gs
mov
stos
adc
inc
jp
push
sbb
xchg
cmp
xchg
push
mov
inc
mov
jp
fcomps
rorl
sub
ss
and
lahf
pop
enter
jae
movsb
idivb
jle
jle
mov
pop
jmp
xchg
cmp
pop
jne
std
jne
sbb
cmp
jle
push
and
push
push
dec
xchg
sub
jo
lds
mov
int3
in
pop
ret
mov
lock
dec
mov
int
stos
inc
sbb
dec
lods
int
cmp
movsb
adc
mov
cltd
and
dec
mov
daa
fistps
mov
xchg
push
ljmp
daa
cli
adc
inc
mov
dec
scas
xorl
movsl
push
leave
or
ficompl
mov
mov
pop
add
ret
pop
fiadds
in
rorl
into
addr16
data16
outsl
int3
fs
nop
inc
push
clc
je
mov
lds
outsb
jbe
rcll
lods
push
pop
sarl
int3
fcmovnbe
gs
push
xor
add
nopl
ret
jb
les
jb
inc
cmp
fcomp
cmp
pop
xchg
movsb
daa
pop
pop
mov
or
jb
daa
and
or
sub
pop
dec
mov
das
or
add
xchg
cmp
enter
mov
es
dec
cltd
mov
movsb
push
sahf
imul
fidivl
pusha
adc
sbb
add
ds
arpl
mov
push
lds
adc
lods
mov
add
rol
lahf
mov
mov
jl
arpl
mov
xor
inc
sbb
std
out
popf
cltd
stc
in
mov
push
inc
push
pop
push
pop
adc
rcll
xchg
lea
dec
adcl
jo
cmp
xchg
popf
ret
dec
test
inc
rcrb
loopne
lahf
popa
jns
mov
xchg
lock
ret
pop
ret
xchg
cltd
adc
jg
call
and
mov
fstl
xlat
into
orl
inc
repz
adc
xor
xor
mov
nop
ljmp
mov
xor
and
in
insl
sub
fdivrs
mov
xor
mov
mov
push
cltd
stos
push
loope,pn
js
lock
and
aad
enter
aaa
jnp
xlat
inc
mov
fnstsw
push
rorb
pop
jb
xor
add
sbb
xchg
nop
adc
add
push
xchg
negb
mov
cmpl
fdivrl
and
pop
leave
insl
gs
ljmp
push
add
les
sub
xlat
jnp
sub
pop
jp
inc
cld
cmpsb
push
pop
cld
ficoms
scas
iret
stc
fsubl
dec
or
push
je
jns
or
iret
sahf
jns
ljmp
lods
sbb
ljmp
sub
inc
cmp
ja
adc
sbb
mov
cmp
clc
out
lcall
int
addl
jl
pop
xchg
add
mov
popf
sti
ja
pop
dec
fnstcw
xchg
cltd
fwait
sbb
popf
outsl
pop
data16
movsl
adc
adc
mov
ja
pushf
pop
test
adc
loopne
push
out
mov
sub
addb
cmp
gs
add
pop
inc
xor
shr
cli
and
in
and
dec
pushf
loop
lret
sub
adc
push
mov
mov
lgs
or
lahf
int
xor
sub
and
add
pop
shll
push
jo
mov
pop
push
int
jno
push
test
push
sub
jbe
and
sysexit
loop
xchg
insb
pop
jl
cmpsb
icebp
xchg
cltd
push
mov
adc
popa
insb
lock
mov
fildll
arpl
pop
push
jo
xchg
fidivl
adc
in
cld
dec
mov
daa
mul
mov
jecxz
sbb
shl
or
mov
mov
sti
insb
call
and
mov
ja
popa
stc
mov
or
stos
in
roll
dec
xorb
xor
mov
idivl
pop
sbb
push
movhps
daa
adc
inc
call
repnz
test
outsb
fidivrl
cmp
push
mov
add
out
cmp
cld
mov
mov
dec
or
mov
repz
mov
stos
ja
xorb
shlb
adc
rorl
enter
push
push
add
test
xchg
int
imul
adc
pop
in
cmp
lea
push
add
jmp
sub
fisttpl
rcll
sbb
movsl
fsubrs
rol
mov
adc
daa
jbe
mov
cli
lret
pop
push
dec
dec
loope
out
mov
mov
adc
push
das
and
bound
cmp
es
mov
xchg
pop
sbb
nop
aas
rcrl
int
negl
and
xor
mov
mov
add
xchg
jp
cmp
clc
in
data16
daa
mov
cmp
cltd
in
imul
fnstcw
iret
mov
inc
and
cld
push
ds
out
je
inc
ret
or
loope
jns
or
push
imul
push
lahf
outsb
mov
and
sti
push
mov
dec
push
dec
scas
cmp
out
jne
shr
xchg
aam
jmp
outsl
push
rcrb
in
push
sub
gs
mov
mov
adc
pusha
xor
pushf
xchg
jg
scas
and
mov
test
inc
popa
xor
sbb
mov
xor
xlat
int
ja
lret
pop
push
enter
dec
iret
xor
mov
sub
jle
sahf
sbb
movsb
lods
push
gs
add
xchg
cld
push
out
test
test
pop
mov
xchg
add
movsl
push
mov
pop
stc
testb
xchg
dec
sub
or
mov
mov
ret
shll
mov
or
outsl
dec
lods
adc
gs
lock
test
add
sbb
cld
shll
imul
movsl
push
adc
in
and
insb
daa
mov
lret
jno
mov
mov
js
add
repz
sbb
xchg
mov
shll
ret
mov
mov
xchg
punpckhwd
outsb
divl
jo
jbe
inc
bound
leave
fwait
es
push
jne
in
lock
dec
lds
mov
jno
out
shrl
inc
loopne
mov
test
fists
insl
int3
adc
lcall
dec
in
push
mov
int3
jno
lods
push
sub
fs
popf
adc
ds
test
loopne
inc
pop
add
xor
push
test
call
jnp
jne
jo
jo
lret
test
sub
les
push
jns
pop
xchg
push
xor
dec
ja
push
xor
jge
pop
fimuls
and
mov
jp
fimuls
mov
lar
mov
push
dec
clc
addr16
cmp
out
sub
bound
lds
xchg
loop
mov
mov
dec
andl
xlat
dec
gs
mov
push
sti
push
shll
mov
sbb
repnz
sub
sub
and
sbb
imul
inc
or
or
lea
gs
mov
mov
int3
mov
and
mov
dec
fimuls
pop
loop
mov
push
pop
out
jo
cli
xchg
or
icebp
add
and
mov
jns
mov
mov
fisubl
shll
inc
jae
adc
icebp
bound
iret
xor
dec
sbb
and
push
scas
mov
clc
sub
mov
sarl
pop
or
jno
stc
movsl
and
sti
repz
cmp
jl
stos
popf
ret
mov
js
cli
arpl
xchg
adc
add
push
add
inc
pop
jp
dec
leave
jmp
outsb
jae
lcall
int
jmp
cmp
push
cli
lods
sti
add
and
jno
adc
xchg
sbb
mov
dec
mov
jo
and
rcrb
cld
and
push
adc
mov
jp
push
in
sbb
pop
fcomps
xor
pop
inc
movsl
dec
mov
push
add
dec
pop
loopne
hlt
or
adc
out
mov
inc
dec
icebp
cwtl
mov
mov
repnz
clc
inc
xchg
and
adc
cmpsl
dec
dec
out
sbb
cmp
lea
xor
std
sub
mov
subl
push
jecxz
push
cmp
pusha
jl
fcompl
repz
mov
pop
popf
rcr
stos
add
cld
aad
andb
sbb
loop
out
out
sbb
cltd
fldl
xchg
sub
shrl
cmpsb
sti
in
shrl
sti
mov
mov
push
in
out
aas
pushf
cmpsl
fidivrs
cwtl
outsl
xchg
cmp
insl
jp
pop
sub
sti
mov
std
movsb
popa
jmp
or
popf
aaa
and
inc
lahf
cwtl
gs
mov
mov
pop
aaa
pop
int
adc
outsb
sub
rorb
jbe
mov
loopne
es
pusha
daa
sub
pop
pop
adc
scas
loopne
ss
mov
cmp
mov
xor
insl
inc
in
loopne
sti
xchg
sbb
xor
data16
pop
jl
scas
aaa
mov
mov
roll
scas
cli
negl
inc
aam
ret
lret
into
out
sar
dec
dec
rcr
pop
sbbl
pop
dec
xlat
rcll
leave
mov
sahf
mov
mov
sub
jno
inc
jae
out
cli
in
addr16
sbb
mov
aam
das
fmull
je
jecxz
jmp
add
cltd
iret
xchg
mov
pop
push
mov
cmpsb
jae
or
outsb
clc
xchg
call
in
xchg
inc
jne
and
pop
mov
test
and
and
push
cld
jnp
fldt
push
xor
ds
test
jb
xchg
xor
pop
aaa
imul
sahf
push
cmpsb
push
lock
data16
loope
nop
outsl
jbe
outsb
cs
sti
pop
popf
push
test
lret
mov
sbb
insb
xchg
pop
orl
mov
mov
mov
lret
cs
fs
sub
out
sub
mov
add
dec
mov
rclb
out
mov
fildll
inc
repnz
mov
xchg
rep
add
mov
pop
fcomp
or
xchg
inc
adc
rol
or
xchg
or
mov
movsb
sahf
arpl
ror
loop
push
pop
inc
mov
push
call
pop
pop
and
cltd
iret
jecxz
and
xor
push
aam
mov
mov
push
or
sar
add
lret
adc
jo
sarl
inc
clc
rcl
xchg
push
movsb
mov
lea
cmc
out
scas
inc
and
call
sub
push
sti
dec
or
test
jns,pt
mov
dec
xchg
fstpt
inc
aam
sub
sub
adc
push
divl
mov
jae
and
bound
sbb
inc
add
dec
add
es
adc
ret
pusha
ret
mov
push
mov
arpl
mov
das
cmp
push
mov
icebp
cmp
sti
js
pop
outsl
cltd
out
dec
aad
xchg
pop
lea
stos
sbb
lods
mov
pop
arpl
into
xor
adcb
push
test
addr16
and
das
fwait
add
sbb
push
push
adc
out
and
xchg
xor
ret
test
in
inc
stos
fnstsw
xor
jne
push
movsl
xchg
popf
add
outsb
das
fwait
push
push
cmpsb
imul
ljmp
testb
lcall
in
mov
stc
les
or
cmp
int3
jl
rcrl
or
pop
xchg
gs
push
and
jnp
mov
adc
add
xchg
imul
inc
xor
inc
inc
xor
mov
flds
mov
add
cmpsl
cs
shll
or
movsb
mov
dec
jno
mov
cmc
fcmovnu
lret
fs
mov
cmp
xlat
sahf
cmp
push
inc
pop
xchg
lcall
das
mov
push
std
inc
arpl
arpl
shl
ret
mov
iret
inc
addr16
pop
test
pop
add
jmp
push
add
rcr
or
ja
dec
pop
mov
sub
je
imul
xchg
push
sub
push
push
incl
adc
fmulp
xlat
testb
xchg
mov
fmulp
cmp
cmp
jb
cmp
data16
popa
cmc
out
imul
jns
cmc
push
popf
sub
xchg
sub
out
adc
pop
xor
mov
xor
dec
hlt
jg
cmp
pop
lea
cltd
mov
jne
sub
mov
psrlq
mov
pusha
sbb
jbe
pop
inc
mov
add
sbb
push
inc
inc
adc
out
push
inc
adc
mov
dec
jl
mov
nop
jle
mov
setnp
add
pusha
test
shlb
adc
cmp
cmp
jecxz
or
or
pop
push
lea
or
fwait
inc
clc
inc
lock
add
pop
jb
outsb
cmp
sbb
call
aas
sbb
sbb
notl
pop
stc
lods
adc
adc
stos
push
repz
and
stos
cmpsl
xchg
sub
and
mov
inc
xor
aam
jo
push
xchg
mov
ds
mov
lock
push
adc
in
jne
aaa
fistps
sbb
insb
sbb
or
lock
test
dec
out
jg
sub
adc
ret
int3
sbb
fcmovnu
loopne
adc
mov
loope
jg
sub
arpl
call
int
rcll
adc
iretw
sbb
add
pop
orb
push
addr16
xchg
inc
sub
xchg
adc
jecxz
gs
mov
lds
scas
cmp
xchg
movsl
movl
mov
jns
cmovge
fldenv
inc
data16
sbb
jb
enter
xchg
mov
push
test
mov
out
mov
sbb
sub
mull
mov
pushf
jb
push
mov
dec
sub
mov
ljmp
addr16
mov
int
and
mov
fisubrs
sub
sahf
orl
pop
out
dec
add
insb
mov
sbb
fidivrl
std
mov
in
push
cmpsl
out
cltd
jle
idivl
loopne
adc
out
lea
loope
mov
adcl
imul
das
adcb
out
fiadds
xor
adc
xchg
xor
jge
or
mov
pop
or
aad
add
or
pop
adc
insl
jl
stc
in
fiaddl
mov
sub
test
push
shl
mov
inc
ss
cmp
dec
xchg
xor
int
and
jp
mov
movsb
dec
cmp
ja
fstl
call
out
scas
scas
ljmp
sbb
jg
pushf
stos
mov
arpl
stc
xlat
fmull
push
dec
pop
xorl
mov
mov
mov
out
push
mov
and
push
data16
adc
mov
scas
adc
std
pop
pop
dec
add
jle
mov
imul
dec
retw
lret
les
mov
sub
adc
into
cwtl
jle
add
cmpsb
sub
ljmp
shrb
cmp
and
std
push
imulb
sub
stc
sbb
or
mov
sbb
cli
notl
xor
inc
daa
jmp
and
scas
mov
pop
push
sbb
ljmp
push
bnd
movsb
and
loope
pop
xor
lock
cmpsb
jae
test
jo
call
mov
add
xlat
imul
push
gs
add
add
inc
lods
cmpsb
push
int3
sbb
sbb
mov
lret
xchg
les
out
ret
xchg
jl
bound
pop
popfw
bound
dec
ret
adc
popf
push
add
gs
or
shrb
xchg
cli
loop
adc
or
lcall
and
lock
lods
mov
pop
push
leave
mov
dec
inc
mov
push
push
sbb
jecxz
lret
fimull
out
gs
imul
mov
pusha
out
data16
jae
ss
js
lods
sahf
push
sbb
mov
or
xchg
lods
jmp
scas
cwtl
push
movsl
inc
jae
mov
shrb
mov
test
cld
out
pop
out
fs
jg
imul
aaa
gs
adc
sub
sbb
int
icebp
push
in
sbb
jae
pop
jp
lret
popf
pusha
shl
mov
cs
dec
adc
adcl
mov
test
bound
xchg
in
idivl
popa
xchg
test
mov
movsb
adc
popa
mov
push
cmp
sbb
lret
iret
mov
pop
leave
mov
push
mov
mov
cmp
xchg
fnstsw
and
pop
rcrb
and
test
sub
icebp
pop
mov
fsubl
stc
push
movsb
mov
lds
adc
arpl
cmp
fbstp
push
das
fnsave
cmp
out
push
test
shll
xor
sbbl
mov
and
dec
into
inc
sub
popa
out
stos
add
bound
sbb
push
mov
inc
mov
push
int3
popa
ss
js
ljmp
aad
fistpl
iret
orb
jecxz
xchg
gs
cmp
aad
iret
js
repz
fstps
ret
sbb
movnti
bound
mov
cmpsl
sbb
ljmp
mov
inc
movsb
in
dec
push
push
adc
pushf
jle
adc
sbbb
rcrl
cmp
jo
pop
sbb
push
shrl
adc
outsl
addr16
pushf
pop
pop
insl
inc
scas
pop
pop
add
cmpsb
in
rorl
dec
adc
mov
insb
je
mov
aas
xchg
xor
mov
cltd
mov
xchg
inc
fucomip
jl
pushf
mov
sbb
xor
in
inc
add
jns
mov
or
push
mov
mov
or
xchg
pop
inc
test
scas
push
mov
aam
mov
cmp
add
push
pop
shrl
mov
pop
sub
push
cmc
adc
push
mov
add
popa
cltd
fwait
mov
xchg
mov
negb
jp
pop
adc
inc
int3
rcl
ljmp
mov
push
imull
push
mov
ficompl
adc
jnp
adcl
jne
xor
jns
or
add
sbb
fisubrl
mov
lcall
sbb
fs
pop
inc
psllq
scas
jmp
test
jmp
jmp
mov
mov
push
lds
xchg
lahf
shl
sbb
scas
fs
jae
cmp
movb
mov
lds
push
sbb
iret
mov
push
and
cmp
mov
pop
repnz
mov
das
sahf
or
add
scas
add
pop
adc
push
sahf
out
inc
stos
lods
fs
mov
and
nop
xchg
sub
push
or
inc
cmc
dec
fcoml
stc
in
outsl
mov
enter
fdivr
jmp
pop
cli
add
push
push
test
clc
inc
aas
ja
push
cmp
jae
push
cmp
xor
jb
add
lret
xchg
dec
testl
push
mov
fldenv
insb
jnp
sub
mov
jns
mov
mov
xchg
loope
loop
sbb
adc
sub
in
sbb
add
aam
int3
mov
nop
inc
movsb
adc
or
mov
mov
jb
pop
out
push
mov
jno
sbb
mov
loope
mov
fs
outsl
jno
and
cs
orl
add
jle
mov
fdivs
and
out
add
cld
imul
pop
orb
mov
fwait
push
ja
pop
xchg
cmp
xor
mov
cltd
sbb
mov
cli
dec
shl
jle
xchg
push
cmp
lods
adc
adc
xor
test
xlat
push
pop
fistps
xorl
push
imul
repnz
bound
push
mov
jmp
mov
mov
push
sub
and
mov
cs
mov
fisubrl
nop
inc
adc
cmp
mov
jl
insb
cmp
out
mov
add
cmp
pop
sub
push
mov
outsb
out
add
call
xacquire
insl
push
cmp
dec
in
jmp
inc
dec
mov
jae
ljmp
dec
cmpsl
add
andb
mov
stos
mov
xchg
inc
xchg
cmp
adcb
mov
jno
inc
jb
inc
into
fcom
jne
das
push
mov
test
and
test
pop
dec
mov
dec
sbb
push
adc
paddb
jo
inc
dec
hlt
stos
adc
fidivl
insl
push
into
jnp
fldt
sub
mov
xchg
xchg
in
and
jge
mov
adc
inc
xor
pop
add
scas
in
sub
cmc
jmp
xor
mov
and
or
sbb
pop
push
ljmp
rorl
add
add
lock
mov
cli
shrb
rcrb
mov
mov
std
xchg
cmp
dec
push
cmp
mov
inc
push
and
sbb
jmp
push
hlt
ret
sbb
ret
xchg
shrl
inc
dec
cmpsl
mov
xor
sbb
in
or
hlt
inc
ret
jnp
mov
push
xor
dec
fwait
stos
push
enter
and
fnsave
cmp
dec
sub
sbb
mov
dec
dec
outsl
sub
inc
pop
dec
and
sub
jg
push
adc
lret
or
aad
mov
xor
addr16
ljmp
popa
mov
data16
mov
popf
je
dec
insb
add
repz
les
push
xor
mov
inc
mov
popf
cmpsb
aaa
mov
jbe
out
jnp
adc
lods
std
jecxz
or
movsl
jl
iret
sets
daa
pop
out
repz
dec
inc
add
int3
sti
push
mov
in
fbstp
test
repz
jno
out
inc
fidivs
pop
jle
mov
sub
and
dec
xor
mov
inc
xchg
jmp
xor
adc
or
push
push
pop
xchg
push
lock
cmpsb
mov
pop
xor
movsl
jl
lods
xor
dec
push
sbb
in
xchg
hlt
movsl
xchg
clc
int3
xor
es
enter
or
sub
push
insl
sub
xchg
jnp
insb
out
cmp
mov
adc
insb
in
mov
mov
mov
enter
test
mov
bound
sub
mov
push
jns
mov
jno
mov
movsb
cmp
fdivrl
sbb
sbb
and
jo
mov
mov
imul
dec
xchg
jne
outsb
in
dec
pop
cmp
inc
pop
lods
sub
sar
adc
cs
fsub
mov
xor
adcb
push
dec
sbb
add
push
pop
inc
mov
std
or
out
test
jb
ffreep
enter
test
and
and
jg
and
call
dec
fs
xchg
cli
je
pop
lods
arpl
push
sub
aam
mov
inc
jb
adc
cltd
repnz
xchg
pop
dec
jno
inc
out
and
outsb
fwait
arpl
or
push
pop
or
loope
add
repz
inc
or
pop
dec
and
adc
test
pop
and
insl
shlb
lods
mov
or
or
pop
outsl
dec
cli
in
cmp
rclb
in
pop
adc
xchg
mov
and
subl
fists
xor
push
dec
f2xm1
fdivs
jnp
pop
addl
adc
and
mov
rclb
mov
inc
test
cltd
jge
out
cmpb
pop
mov
movsbl
aas
cmpsb
rcrl
jmp
and
mov
rorl
or
movb
movsb
data16
xor
add
fildll
or
fwait
sti
push
popl
enter
cmp
mov
push
mov
push
sub
movsl
sarl
add
add
int
pop
cmp
xchg
popf
push
pop
fidivrs
inc
or
test
push
int
add
jne
push
adc
cld
scas
aaa
dec
xchg
lock
stc
inc
fcmovne
pop
jb
mov
lret
ficoml
jg
in
lret
aaa
push
push
fsubr
and
imulb
mov
xor
ror
pop
add
out
xchg
mov
vpminsw
call
xchg
mov
in
mov
or
mov
out
jbe
out
rcrb
pop
dec
mov
clc
ljmp
jnp
mov
scas
pushf
cmc
fimuls
and
push
push
jno
jne
mov
fwait
sbb
xchg
popf
xchg
dec
lods
insb
pop
rcrb
mov
xchg
cmp
popf
into
cmp
cmp
sbb
jns
insb
and
mov
add
divl
inc
inc
jnp
dec
sub
mov
frstor
pop
mov
mov
add
sub
jmp
cmpsl
gs
ret
dec
and
xchg
mov
pop
mov
sahf
xor
out
adc
dec
testl
mov
cmc
mov
sub
pop
outsb
pusha
sahf
pop
outsb
test
in
cli
sub
push
loope
cs
div
lret
pop
sbb
imul
lock
or
or
test
push
add
cmp
jmp
iret
xchg
push
mov
iret
jecxz
rolb
arpl
loopne
cmp
mov
jae
pushf
lds
sub
adcb
pop
pop
jb
fnsave
loope
inc
in
das
add
mov
aaa
nop
xlat
mov
inc
out
sbb
test
pop
adc
push
add
shll
outsl
push
mov
jp
cmc
sub
or
int3
in
sbb
xlat
mov
jnp
les
stos
addr16
mov
out
ret
pop
clc
movsb
fistps
jne
das
push
mov
mov
push
pop
lock
sub
dec
dec
enter
cld
jbe
loopne
xor
xchg
pop
inc
pushf
jl
sahf
adc
jns
xor
xchg
xchg
js
movsl
jno
fwait
sub
arpl
or
dec
mov
addr16
inc
fwait
push
add
jae
std
sub
mov
sbb
mov
mov
inc
or
loope
lods
aaa
mov
mov
clc
pop
adc
mov
lcall
cmpsl
inc
imul
mov
aam
mov
inc
inc
insb
pop
pop
jb
rorl
rolb
mov
and
jp
push
pop
and
xchg
add
sbb
subl
jnp
or
scas
inc
daa
add
xor
bound
dec
pop
mov
adcl
div
mov
xor
fcompl
rorl
cmp
xlat
in
adc
xlat
or
and
in
dec
cltd
cmc
xor
fucom
loop
in
xchg
add
insl
sub
mov
out
cmp
adc
mov
cltd
pop
and
jge
mov
clc
int
push
lods
dec
notl
dec
adc
imul
mov
dec
fsts
push
insb
fsubrp
mov
push
jp
pop
jp
js
xchg
fisubl
aaa
in
jp
in
nop
push
and
test
and
mov
sub
stc
hlt
pop
das
mov
dec
inc
mov
sbb
loope
ja
or
mov
xchg
rcll
mov
dec
lods
adc
out
dec
adc
pop
sbb
test
icebp
xchg
jb
outsl
fscale
dec
sbb
out
negb
jle
xchg
sub
test
fwait
mov
add
popa
pop
mov
data16
fsubs
xchg
cwtl
ret
add
in
pop
fwait
xchg
xor
add
mov
dec
xchg
enter
add
add
mov
loop
subb
lods
cmp
jne
xor
imul
fwait
sbb
adc
rcrl
jnp
repnz
imul
popa
sub
mov
movsl
pop
ljmp
fbld
mov
xor
stc
movb
cwtl
stc
mov
cmp
mov
jbe
sub
xor
jo
fdivr
arpl
mov
jae
jle
sbb
pop
add
pop
pop
je
adc
mov
xor
cs
mov
push
enter
sbb
cld
popa
add
pop
mov
je
xchg
pop
fidivrs
nop
ret
or
ss
pop
mov
icebp
fstps
and
xor
jb
sub
dec
mov
xchg
cli
pop
add
inc
mov
sub
movsl
push
mov
push
jp
cs
pop
je
scas
push
or
test
cmp
rcrl
inc
das
daa
push
pop
push
popf
dec
inc
neg
sahf
mov
and
and
scas
xchg
bound
pop
gs
fldenv
dec
cmp
ja
dec
or
cmp
aas
and
bound
xor
jae
xor
mov
imul
cmp
movsb
rcll
clc
xchg
mov
ljmp
inc
insb
lret
or
jnp
stos
xchg
fwait
cmpsb
pop
pop
repz
cli
jns
clc
or
icebp
xchg
mov
and
fimuls
inc
push
out
data16
fcomps
jne
lcall
add
and
xor
mov
es
shll
aam
mov
push
andb
xchg
push
jecxz
rorb
jmp
fstpl
stos
cmp
sub
xlat
mov
aam
jmp
std
push
test
movsb
add
add
stos
or
cmp
jl
lock
scas
add
pop
xchg
std
add
add
xchg
js
clc
pop
mov
inc
jb
sbb
stos
pop
jo
cltd
mov
sarb
add
int3
xchg
jl
sbb
lahf
sbb
les
xlat
aad
pop
and
out
inc
cs
stc
push
push
xor
xchg
inc
repz
icebp
sbb
fcom
hlt
jl
cmovge
push
xchg
std
push
test
dec
mov
in
xchg
movsl
adc
das
mov
nop
and
inc
int
fbld
and
out
in
repnz
or
dec
pop
cmp
movsl
sbbl
dec
lahf
dec
call
sbb
out
or
pop
xor
ja
jg
leave
mov
aas
pop
repnz
stos
imul
andb
mov
dec
cmpl
or
rcrb
test
pop
pop
or
call
mov
stos
dec
jp
fildl
adc
cmp
pop
mov
sbb
mov
outsb
or
aas
mov
push
test
push
clc
ret
xor
jecxz
lea
mov
addl
lret
mov
bound
adc
roll
fists
repnz
out
or
into
jge
aaa
jae
mov
sbb
add
shlb
or
add
and
fdivl
lods
push
mov
fwait
jb
icebp
sub
int3
xchg
and
cmc
movsl
leave
mov
nop
cmp
cmpb
fistps
jns
and
fsub
mov
mov
and
push
add
mov
push
out
aas
shll
or
sbb
int
pop
mov
jo
mov
adc
ficompl
xchg
push
mov
cltd
std
jp
xchg
cli
dec
xchg
mov
aad
les
ja
mov
xor
cs
les
pop
popf
fs
data16
sub
dec
xchg
push
dec
xchg
dec
jmp
pop
jg
lcall
pop
dec
jne
fistl
xchg
ret
dec
xor
inc
jmp
jl
jb
gs
jl
ss
sub
jbe
push
mov
aaa
cmpsb
jl
popf
mov
pushf
jg
sub
mov
ja
push
adc
addb
enter
mov
adc
jge
loop
rcr
movsb
fs
incl
in
and
mov
iret
push
xchg
mov
imul
scas
cld
lahf
push
sbb
daa
add
cli
sti
xor
mov
push
mov
les
addr16
or
roll
mov
addb
sbb
dec
out
sbb
outsb
mov
or
orl
test
pusha
add
xor
inc
xchg
mov
sbb
cmp
xlat
mov
enter
mov
aaa
outsb
xchg
popf
scas
lcall
mov
cltd
insb
flds
jge
call
stos
outsb
jg
stc
inc
popa
mov
xchg
mov
xchg
cmp
in
push
xchg
pop
xchg
sub
adc
push
and
xchg
fadd
pop
dec
rcll
pop
loope
jo
jp
xchg
fistpl
push
mov
cwtl
ret
lcall
xchg
xor
and
mov
xchg
dec
cld
lods
dec
testb
inc
dec
xchg
int3
add
inc
bound
push
mov
adc
rol
sahf
cmpsb
jb
xchg
or
andl
adc
mov
jo
push
aaa
mov
call
int3
and
and
pop
iret
xor
pusha
es
push
mov
and
jno
xchg
mov
dec
hlt
cmc
cld
jmp
stos
adc
jbe
pop
dec
jno
sbb
mov
cli
lea
out
xchg
sub
add
out
xchg
xchg
imul
xchg
pop
rcr
popf
inc
inc
add
cmp
out
out
sbb
arpl
je
jnp
inc
and
inc
mov
dec
or
subl
add
jae
mov
dec
in
lcall
xor
add
adc
in
in
push
mov
jmp
ret
add
lods
mov
cmovb
enter
push
fldl
jo
pop
es
push
push
mov
push
mov
and
push
out
movsb
mov
sbb
ja
mov
sbb
in
mov
insb
xchg
sbb
test
mov
jge
pop
dec
mov
pushf
and
push
pop
outsl
mov
popa
shrl
stc
stos
mov
pop
sbb
cmpsl
add
xor
adc
in
or
mov
shll
frstor
sbb
fsubrp
incl
imul
add
mov
jnp
ja
les
outsb
repz
jns
pushl
and
add
dec
in
int3
jle
and
push
pop
xlat
dec
pop
call
loopne
dec
ljmp
mov
jl
push
mov
mov
dec
add
xor
std
ljmp
ss
jns
push
or
lret
xchg
ror
pop
sbb
inc
dec
inc
mov
mov
icebp
sub
push
ret
push
loopne
mov
inc
sbb
pushf
imul
mov
mov
push
repz
movsl
xchg
lret
pop
adc
aam
aam
lea
xor
sar
cmpsl
in
rcl
cmp
inc
xchg
repnz
xchg
fldt
fdivr
push
cmp
pop
cmp
sub
fadds
mov
add
mov
fcmovu
inc
xlat
adcl
sbb
push
pop
fmulp
jnp
push
imul
fwait
pusha
xor
faddl
sub
sbbb
in
mov
xor
cmp
fiadds
jnp
jp
pop
stos
scas
mov
sbb
ss
adc
pop
mov
jnp
sub
sbbl
sbb
in
out
imul
dec
sub
jl
leave
fincstp
popa
sbb
xchg
cli
xor
mov
push
mov
out
shrl
in
test
add
xchg
xor
sbb
cmp
or
xchg
jae
mov
inc
dec
ja
aam
mov
push
movsb
mov
cmovge
add
sbb
test
xor
icebp
test
jno
jae
dec
adc
aaa
stos
lahf
fndisi(8087
xchg
xor
stos
lods
push
push
loope
scas
jecxz
sub
ret
adc
cmp
cmp
pop
repz
testb
sbb
iret
loopne
fdiv
sbb
imul
and
mov
sbb
xchg
pop
and
lret
sbb
sahf
ds
jge
ss
lret
repnz
jbe
jne
mov
and
jne
scas
push
dec
mov
divb
xor
loopne
clc
and
test
sbb
into
xor
fwait
sbb
mov
dec
dec
and
cld
push
add
dec
fcoms
cmpsl
cli
or
sahf
or
inc
mov
cwtl
mov
scas
cld
and
decl
in
dec
xchg
xchg
nop
jne
and
sbbl
pop
push
xor
fldt
sbb
arpl
mov
lcall
mov
xor
jle
or
mov
and
xor
addl
sarb
imul
nop
movsb
xchg
sub
inc
int3
jg
je
popf
test
jbe
pop
dec
dec
and
je
pop
lds
lret
push
lods
push
lea
and
pop
in
lds
xlat
dec
sbb
roll
xlat
xlat
cmp
out
add
mov
adc
cwtl
inc
jecxz
pop
fld
sub
dec
push
daa
pop
adc
pop
push
and
xor
stc
cli
xchg
mov
cmpsl
mov
fmulp
ss
xor
adc
out
and
push
sti
dec
cltd
cwtl
mov
popf
insl
mov
in
hlt
addr16
jge
jp
jge
sti
mov
mov
outsb
in
cld
or
lret
jge
push
lea
loop
fs
inc
int3
inc
stos
test
repz
div
jmp
cmpsl
sti
fs
outsb
or
pop
xor
mov
lods
dec
mov
das
cmovle
xor
mov
pushf
fldcw
jns
and
es
shrb
das
xor
scas
jecxz
jne
fsubl
add
cmp
fcmovu
or
hlt
lods
mov
pop
mov
out
jmp
dec
into
mov
lods
inc
and
push
dec
or
pushf
nop
outsl
mov
jle
ror
pop
sub
jmp
je
rorl
and
in
jns
pop
hlt
dec
jnp
mov
pop
pop
push
rolb
es
and
mov
lahf
fwait
loop
hlt
mov
inc
into
imul
jp
cmp
sti
or
cmp
pop
xchg
inc
inc
out
mov
jge
cmpsl
ret
ljmp
mov
mov
and
add
movl
xchg
lods
mov
gs
jo
out
jo
adc
popf
cmp
imul
test
xchg
les
adc
subb
hlt
aam
xchg
popa
stos
std
xchg
loop
cmp
push
ss
pop
ss
add
mov
push
fwait
js
hlt
jb
xchg
mov
into
pop
sub
js
cltd
sbb
lret
mov
nop
add
jge
or
test
push
or
into
enter
fstps
mulb
int3
mov
pop
pop
inc
sti
inc
xor
mov
xor
add
and
sub
or
orl
jbe
add
popa
push
test
fstpt
push
repnz
inc
pop
incl
jge
mov
cmp
ss
sbb
test
call
lock
sub
sub
add
test
mov
or
inc
xchg
cmp
pop
sbb
aam
test
push
mov
jmp
pop
mov
jbe
insb
adc
rcrl
jb
cmp
jb
jbe
int3
test
sahf
sbb
fs
jbe
mov
cmpsl
aaa
in
mov
mov
add
popf
into
dec
fcompl
pop
add
mov
in
call
scas
lret
movsl
subl
or
push
stc
and
cwtl
dec
jnp
cwtl
lea
popa
xor
lcall
loop
aaa
and
movsb
stos
pop
cmpsl
shrb
adc
mov
mov
xlat
sub
iret
das
pop
sub
mov
fs
add
mov
es
xchg
fcmovnb
fwait
push
xchg
test
mov
movsl
mov
jne
stos
sub
pop
add
lds
out
mov
or
addr16
sub
aad
jns
lock
fiadds
xor
repz
jnp
push
dec
sbb
mov
push
notl
lock
lods
cld
fidivrl
lods
push
lret
hlt
push
das
xchg
les
xchg
mov
movsl
or
je
xor
jbe
inc
movl
xchg
arpl
push
scas
in
outsb
add
sbb
test
pop
push
mov
and
into
pop
pop
sub
incb
fdivrs
orl
mov
push
ret
fistps
std
pop
mov
push
adc
inc
and
sti
cmp
inc
gs
in
das
fmul
inc
pop
fcmovb
fs
lods
pop
pusha
std
mov
movsl
sub
lock
sbb
pop
das
cmp
das
gs
lahf
cltd
jg
mov
dec
pop
dec
add
aam
pop
cmp
mov
push
sub
stos
subb
insb
sub
dec
lcall
int
xor
cmpsl
xchg
shll
mov
add
js
fs
cmpsl
sub
inc
es
xorl
ret
mov
mov
mov
imul
jg
cmp
mov
sti
stos
clc
insb
cld
je
out
jl
insb
stc
pop
sbb
and
and
xchg
jo
sub
jae
push
stc
push
xor
out
adc
daa
insl
jno
mov
inc
jecxz
mov
sub
iret
lea
pop
sahf
hlt
int3
insb
mov
cld
jbe
push
lods
cmc
inc
jp
clc
lcall
sti
jle
push
xorl
hlt
fucom
mov
js
enter
loope
mov
adc
sbb
sar
push
or
shll
in
pop
rcrl
jb
in
push
adc
std
gs
pusha
mov
jae
push
pop
xor
or
insl
mov
popf
adc
push
in
mov
xchg
addr16
jp
scas
add
mov
push
dec
mov
jge
icebp
popf
xchg
inc
cmpsb
xchg
das
push
push
xor
mov
test
push
cmpsl
dec
loope
iret
push
mov
adcl
add
sahf
test
and
inc
decb
repnz
and
mov
aad
mov
data16
mov
cmp
push
and
xor
fnstsw
out
xlat
cmp
inc
popl
jge
aam
xor
push
cmpsl
add
mov
xchg
dec
xchg
push
sbb
fstps
dec
pop
mov
sbb
pop
cmp
jae
shrl
mov
jecxz
sub
ljmp
repz
jno
pusha
mov
pop
bound
int3
push
jne
in
repz
cmp
push
cmc
sbb
sbb
xchg
adc
iret
icebp
sti
rcrl
icebp
faddl
sbb
xchg
sbb
ret
in
mov
xchg
xchg
daa
cmp
mov
fwait
daa
xchg
jb
push
inc
lcall
dec
test
mov
out
fs
jle
mov
iret
push
subb
dec
out
adc
scas
xorl
inc
adc
out
push
negb
sti
shlb
pop
sub
mov
out
push
jp
jns
cs
mov
dec
jb
adc
mov
sub
addb
addr16
popf
xor
out
pop
rcll
mov
das
dec
or
cmp
jmp
out
std
pextrw
mov
cwtl
pop
clc
movsb
loop
negb
or
xchg
sub
fisttps
outsb
jg
or
out
xchg
lahf
out
push
dec
xchg
jae
sbb
aas
sbb
daa
dec
or
pop
mov
roll
sub
cmp
ds
pop
push
mov
jl
lea
stos
repz
mov
mov
and
dec
popf
push
and
movsl
sbb
das
cmp
fmul
pushw
push
sti
mov
dec
loop
mov
cld
jg
movsb
push
loope
inc
mov
cmp
xchg
shlb
xchg
pop
aaa
pop
adc
mov
imul
mov
xchg
and
mov
or
popa
es
lods
jns
add
inc
fidivrl
cmp
bound
cmp
shr
outsb
sub
clc
addb
in
mov
repz
jl
movsl
in
mov
jae
jle
jp
fwait
aaa
push
add
push
fistpl
popa
inc
rcll
insl
mov
cmc
xor
sti
mov
adc
test
dec
sbb
xchg
sti
bnd
lods
and
mov
fst
jl
fcmovu
aad
or
sbbb
aam
cmp
filds
pop
in
inc
xor
insb
and
out
aas
dec
out
inc
xchg
popa
dec
lods
popf
xor
cmpsb
gs
lock
adc
aam
in
sbb
and
or
cmp
jmp
mov
mov
rcl
mov
jno
xchg
sub
mov
int3
movsl
ret
push
or
add
mov
push
mov
push
or
lock
jmp
dec
xchg
bound
cmpsl
jo
jae
fsubrl
xor
or
fmul
cmp
inc
push
jecxz
mov
daa
clc
mov
add
add
bound
dec
icebp
loope
shr
dec
or
xchg
xor
sub
rorb
lods
pop
xlat
mov
add
je
test
sub
pop
mov
lcall
push
jo
pop
mov
pushl
cmp
popf
out
dec
fidivrs
ljmp
jl
jae
push
add
mov
je
ss
inc
ss
sbb
jecxz
jp
mov
pusha
into
mov
fwait
adc
insl
sahf
push
gs
fildll
xchg
xor
ja
or
idivl
out
pusha
inc
and
ljmp
xlat
dec
jno
imul
cmp
inc
fst
nop
push
rcr
into
dec
das
movsb
ficoms
std
or
ret
adc
cmp
jle
sub
mov
dec
push
cwtl
das
or
jle
push
xchg
dec
gs
aam
inc
sahf
mov
lcall
cmp
jo
mov
pop
pop
and
pop
and
mov
cmp
cmp
imul
sbb
jae
sarl
je
xchg
cld
ss
xorl
push
ljmp
mov
call
jno
subl
jl
psubusb
lret
cli
add
jle
out
movsl
sahf
ss
inc
or
push
aad
iret
scas
ljmp
les
adc
les
fistl
push
jg
or
sbb
adc
out
addr16
cmp
loop
mov
jmp
decb
xor
xor
test
inc
cmp
in
fsts
std
dec
icebp
dec
mov
dec
insb
subb
mov
push
inc
cwtl
call
xchg
jbe
jge
xchg
outsb
mov
mov
mov
push
addr16
dec
lret
mov
stos
mov
cmp
adc
push
inc
sub
leave
clc
jle
lret
and
in
add
insb
sahf
cmp
mov
sub
rol
lock
lods
in
or
arpl
mov
mov
pop
fistps
sahf
dec
or
shr
and
mov
outsl
cmpsl
add
adcl
fistl
xchg
add
ljmp
les
mov
imulb
inc
xchg
jmp
push
dec
pushf
ss
sbb
dec
movsb
sub
xor
cs
mov
xor
repz
in
mov
call
aaa
mov
push
nop
inc
pop
in
sbb
clc
jae
icebp
xor
cmpsl
ret
outsb
test
push
subb
je
dec
and
xchg
cmpsb
mov
cltd
lock
sub
arpl
mov
or
inc
rorl
loop
iret
add
iret
sbb
lahf
sti
mov
pusha
dec
stos
and
adc
dec
mov
mov
imul
sbb
push
push
in
mov
xchg
push
add
filds
push
sbb
xor
add
cmpsl
push
out
xor
jns
test
sbb
mov
lods
push
movsl
mov
loop
pop
in
xchg
cld
or
add
fadds
mov
mov
pop
loopne
ss
adc
idivb
mov
xchg
cmp
adc
and
cli
ror
pop
jnp
jnp
rcr
mov
mov
mul
inc
inc
in
fdivr
cmp
out
in
loopne
adc
sub
rorb
xchg
cmp
mov
and
hlt
sti
test
cld
sahf
cmp
mov
fstps
hlt
lds
fcmovnu
es
test
and
sbb
lods
jp
pop
mov
ljmp
aaa
pop
shrb
aas
jbe
inc
push
fisubl
push
mov
adc
dec
dec
adc
xchg
mov
xchg
repz
lods
cmp
cmc
orl
and
xor
arpl
pop
or
xchg
lret
sbb
inc
adc
fistl
xchg
jne
jae
pand
scas
jmp
inc
in
dec
jg
mov
or
jae
pop
fldcw
cmp
aas
mov
adc
inc
loopne
shl
je
jge
pop
hlt
scas
decl
pop
inc
scas
repnz
adc
xor
ja
out
ja
jp
dec
arpl
ljmp
ret
xchg
dec
dec
cs
mov
out
push
and
dec
bound
sub
data16
inc
and
or
push
add
pop
cmp
fdivrl
cmp
pop
cltd
vmread
dec
rorb
mov
fisttps
push
test
aas
mov
prefetch
xchg
loope
rorl
cmp
insb
icebp
lods
or
xchg
xor
imul
stc
sub
jno
jae
or
sarl
sub
nop
xor
xchg
js
cld
or
fwait
ss
es
mov
test
pop
scas
mull
xlat
jo
rclb
jmp
pop
lret
test
pop
je
lods
xlat
popf
inc
into
lock
inc
pop
push
or
lock
aad
sub
push
mov
icebp
inc
mov
push
cmp
cwtl
insb
lret
mov
rcll
adc
movsl
push
fwait
enter
in
clc
cmp
sub
dec
mov
xor
cmp
sbb
in
iret
filds
mov
pop
daa
popf
pop
out
cltd
xchg
sub
jl
and
in
lcall
lea
leave
imul
jmp
insl
mov
negl
adc
sbb
mov
js
les
mov
mov
lock
jne
inc
mov
subb
xchg
cmpsb
and
rcl
sub
push
mov
pop
mov
lcall
push
mov
insb
jle
cmp
mov
add
es
and
and
addr16
cmp
or
sub
xchg
pop
and
fcoml
xchg
repnz
sbb
fnstenv
js
fdivrs
add
mov
fadds
or
scas
sub
pushf
cmpb
loopne
jmp
lock
sub
pop
loope
xchg
xor
into
pop
jl
xor
sbb
adc
inc
test
dec
jecxz
arpl
cmp
jns
mov
inc
mov
jae
push
arpl
cmp
lods
adc
stc
out
pusha
mov
stc
lahf
loop
int
push
xchg
adc
popa
stos
xlat
mov
in
aad
mov
push
jge
jno
mov
jmp
in
push
inc
jno
insb
lock
out
hlt
into
aad
fisubl
push
inc
xorl
mov
jle
lea
mov
sub
dec
push
push
lock
cs
insb
pushf
test
xchg
and
sub
lds
imul
scas
hlt
mov
fcmovb
aad
es
rolb
inc
mov
add
push
pop
sub
jo
mov
outsl
or
sub
lods
mov
add
ljmp
or
imul
out
dec
pop
mov
push
dec
pop
mov
mov
repz
rorb
pushf
cltd
scas
xor
fcomps
or
test
stc
jnp
loope
sub
xor
imull
cld
dec
inc
jg
xor
jle
xor
dec
push
in
outsb
cmc
ret
fistpll
in
pop
inc
push
dec
mov
pop
in
popa
and
roll
je
or
iret
in
int3
adc
or
adc
lea
cs
shl
xchg
stos
sahf
and
int3
aaa
clc
pushf
aas
stos
sbb
rcll
js
aad
fcmovnu
inc
jnp
mov
movsl
xchg
mov
push
jae
js
dec
mov
mov
mov
sub
call
clc
mov
cli
mov
sub
dec
sbb
pop
dec
cli
scas
and
inc
inc
jg
fidivrs
lock
adc
in
insb
test
iret
arpl
movsl
and
jae
lds
mov
das
adc
or
sahf
cld
sahf
int3
or
mov
and
dec
or
sbb
adc
jo
jne
bound
das
aaa
mov
jno
mov
popf
out
cmp
dec
cmp
push
mov
cmp
xor
xor
in
mov
fucomi
out
adc
inc
push
aad
fcoms
push
addl
cmp
sbb
mov
sub
fisubl
ret
popa
cmp
ds
inc
ja
das
jnp
fcmovnb
mov
and
pop
inc
outsb
cltd
jns
sub
int
push
xor
pop
call
push
test
push
sub
and
mov
cmp
cli
daa
inc
out
ss
sbb
jp
inc
icebp
cmp
dec
mov
pop
pop
and
and
xchg
lret
scas
sub
and
in
mov
in
pushf
sub
out
mov
aas
mov
out
test
push
aaa
xor
add
mov
into
mov
jg
aas
mov
subb
scas
cmpl
repnz
movsb
jno
sbb
jmp
mov
daa
pop
icebp
lods
jmp
lret
jp
adcb
int
pop
jbe
insl
fwait
sub
shlb
xor
testb
jmp
add
sub
scas
dec
xor
or
cli
jp
cmp
mov
xor
daa
or
jp
je
or
addr16
lds
and
ret
enter
lea
bound
jge
and
xor
and
xor
xchg
inc
cmp
scas
sbb
lods
pop
mov
lods
js
xchg
mull
andb
xor
mov
stos
scas
jecxz
push
ljmp
dec
filds
rcrl
inc
rolb
adc
lcall
adc
test
sub
push
arpl
inc
pop
mov
inc
fidivl
push
fsts
xchg
aaa
cs
or
xchg
xchg
dec
mov
enter
ret
cwtl
subl
mov
cmp
sub
das
iret
cmc
cli
lcall
es
sub
rcll
test
mov
fwait
mov
outsl
push
mov
mov
pushf
repnz
outsl
add
dec
or
bound
or
cltd
fwait
mov
dec
popf
pop
adc
add
test
adc
xchg
call
mov
int3
sahf
mov
popf
repnz
and
fdivrl
jp
jmp
clc
mov
sbb
test
xlat
ret
push
clc
clc
or
cld
pop
dec
push
mov
movsb
jno
das
enter
and
or
jae
xor
and
dec
popa
cmp
or
cmp
andl
sbb
out
mov
pandn
fldenv
js
in
les
xor
or
inc
pop
mov
and
sub
sbb
insb
mov
icebp
xor
add
cs
in
mov
push
imul
xchg
push
jno
sbb
pop
mov
lea
cmp
stos
int3
subb
cmpsl
push
push
mov
cmp
add
inc
dec
sbb
into
in
adc
cmp
int3
lcall
xchg
and
cmp
aaa
aam
mull
jo
adc
into
add
in
sub
in
mov
sbb
mov
adc
les
and
mov
rolb
fsubs
push
pop
jnp
iret
push
xor
fnstsw
jecxz
inc
add
or
pop
xor
sbb
add
ret
out
pop
fbstp
xor
aam
lods
adc
adc
and
cmp
mov
sub
pop
clc
mov
insb
imul
test
into
mov
sarl
xor
jg
mov
push
add
nop
mov
sub
sbb
les
and
aam
lret
adc
mov
or
pop
test
push
push
mov
loopne
stc
lock
xchg
movsl
lcall
test
daa
es
sbb
mov
pop
jmp
adcl
mov
shlb
mov
sbb
aad
xor
mov
clc
aad
push
cmpsl
mov
mov
shlb
shll
fists
or
push
mov
fldl
push
les
xor
sahf
dec
add
cmp
jno
dec
sti
mov
fdivr
unpcklps
es
mov
cli
stos
push
sub
jnp
es
dec
cwtl
jecxz
outsl
push
mov
shr
outsl
mov
mov
lds
aaa
jbe
mov
xor
pop
push
sti
push
mov
cwtl
popf
ljmp
cmp
and
lahf
lret
nop
inc
inc
mov
add
aam
add
xchg
xchg
inc
or
repnz
ret
inc
push
and
xor
ss
sub
imul
jl
fwait
insb
adc
lret
test
mov
jge
add
lret
or
setle
xchg
xchg
jb
or
pop
dec
ret
and
pop
insb
sbb
loopne
sub
add
xchg
xchg
mov
push
icebp
pop
mov
cltd
pop
lds
pop
mov
sarb
mov
ficomps
mov
stos
mov
or
sub
push
test
cmp
cmpsb
icebp
insl
inc
scas
jne
out
adc
pop
xchg
fsts
xor
and
aaa
fistpll
push
aaa
inc
loope
cmp
and
inc
xchg
jecxz
cli
sbb
cmc
or
mov
dec
lret
xlat
add
push
push
daa
xor
push
enter
adc
cmp
pusha
inc
cmp
push
mov
stos
loopne
and
xor
mov
cmp
arpl
lahf
jle
jnp
jo
shrb
jno
cmp
pop
push
daa
cmpsb
add
movsb
lods
push
cmp
push
addr16
push
dec
mov
push
sub
lods
stos
mov
or
jge
sub
imul
xlat
sti
je
mov
mov
inc
pushw
xor
dec
lds
out
and
lods
pop
test
push
int
add
mov
repnz
inc
bts
aam
pop
pop
loop
imull
jo
cmpsb
jecxz
popa
cmp
clc
xor
pop
sbb
fwait
add
js
mov
test
icebp
xchg
mov
pusha
or
cmp
fcoms
lret
adc
ja
pop
pop
ret
adc
and
nop
or
rcrl
vmulsd
movsl
js
pop
aaa
mov
mov
lods
inc
popl
out
mov
ljmp
cmpb
mov
in
cmpsb
sbb
addr16
xchg
enter
loop
mov
in
and
mov
daa
test
push
adc
arpl
push
cmp
rcr
inc
or
dec
clc
out
cwtl
inc
xchg
dec
lods
hlt
jne
mov
or
xlat
add
jae
sbb
movsb
sbb
ja
cld
das
mov
jno
jne
mov
daa
stc
ret
or
sbb
lock
jae
dec
divl
cmpsl
xchg
fwait
jno
pop
hlt
fisubrs
dec
sbb
in
sar
adc
or
outsl
xlat
lret
imul
pop
adc
lods
xor
cmp
stos
cld
push
scas
enter
dec
or
dec
in
ficoms
pop
xor
ror
mov
inc
inc
shr
and
cmpsl
call
stos
roll
dec
sub
loopne
pop
push
and
mov
outsl
jae
jae
pop
inc
and
mov
mov
int
imull
jp
sbb
out
test
xor
and
jns
jae
and
addr16
pop
lahf
xor
jge
fs
mov
mov
push
dec
mov
sbb
sub
or
les
adc
sti
dec
hlt
mov
cltd
sbb
sbb
jp
xor
mov
les
dec
mov
jb
and
sub
cltd
jmp
xchg
xchg
sub
int
cmp
loopne
aam
add
push
cmp
imul
jge
add
push
pop
mov
and
ret
test
cli
mov
xor
pop
inc
adc
das
inc
stos
push
xor
cmpb
fisubs
repz
dec
in
cwtl
shl
jecxz
push
adc
mov
clc
fadds
jae
adc
shlb
or
fidivl
sbb
inc
int3
sub
fnsave
xchg
pop
loope
inc
cld
inc
mov
sub
mov
fidivrs
inc
push
fwait
and
sub
test
dec
jb
sub
pop
jne
inc
enter
mov
sub
hlt
push
mov
xchg
sub
jp
xchg
repnz
sbb
or
jl
add
jo
and
lret
inc
or
pop
dec
mov
insl
jl
jae
daa
jo
add
sbb
mov
cwtl
je
mov
and
loop
fstpt
jp
push
stos
test
xor
mov
dec
stos
mov
cmpsl
shrl
xchg
je
pop
inc
into
xor
sbbb
xor
sbb
jnp
mov
adc
or
cmpsb
cmc
add
lds
pop
pop
xchg
gs
xorl
adc
ds
test
dec
mov
stos
mov
push
sbb
jo
subb
cmp
dec
pop
pop
lock
negb
xchg
out
aad
pusha
outsb
jge
cmp
jne
ja
sbb
std
icebp
xchg
ds
pusha
adc
test
inc
push
lcall
xchg
sub
mov
ja
in
xchg
jae
je
push
bound
inc
outsl
sub
pop
xchg
or
ds
call
pop
xor
or
mov
cmp
inc
stos
or
inc
addr16
mov
add
clc
aam
jno
int3
test
loope
add
sbb
add
cs
pop
stos
inc
roll
sub
in
sarl
push
stc
push
xchg
xchg
insl
imul
xchg
mov
xchg
dec
cld
push
adc
xchg
mov
ficompl
mov
test
inc
mov
adc
xchg
aas
ljmp
in
jnp
pop
mov
fcmovnu
xor
out
sti
in
imul
arpl
cs
mov
sbb
pushf
mov
mov
xchg
loopne
jb
inc
xchg
repz
enter
xchg
sbb
jnp
sub
mov
aad
mov
ljmp
hlt
mov
mov
sub
shr
push
fildl
mov
jb
jnp
fcoms
add
cltd
mov
fwait
mov
out
push
inc
outsb
pop
aad
sbb
mov
xor
pop
popf
not
out
sahf
stc
jecxz
mov
push
fs
mov
mov
arpl
cld
mov
incb
pop
lahf
pusha
mov
push
adc
outsb
js
and
pop
mov
in
and
out
pop
push
add
imul
out
dec
add
xor
aam
adc
hlt
gs
pop
push
shrb
xchg
out
jg
movsb
out
dec
dec
iret
xor
push
in
sub
inc
aas
gs
popa
flds
mov
mov
pop
lods
in
pop
into
mov
jnp
xlat
mov
xchg
leave
cmp
loop
fstps
sub
cmp
cltd
dec
dec
aad
pop
xchg
jnp
mov
sbb
stos
fistl
iret
push
inc
shl
lds
jl
sbb
cli
xchg
lods
lock
mov
or
sub
xor
mov
sub
gs
mov
fwait
aam
or
jbe
sub
cmpsl
mov
mov
xchg
pop
in
out
sbbl
or
and
or
cmp
in
cmpsl
pop
iret
sahf
daa
pop
out
shlb
nop
test
mov
or
ret
add
lret
jge
mov
pop
pusha
dec
and
arpl
jmp
or
jecxz
idivb
pop
adc
sbb
adc
repz
cmp
in
sub
cli
loopne
out
ret
jae
test
fnop
xchg
push
mov
push
cli
pop
adc
gs
cmp
test
jmp
mov
enter
pusha
pop
push
push
jno
sbb
xchg
xchg
fcmovbe
inc
dec
daa
adc
xchg
test
xchg
sub
push
js
gs
add
push
cmc
xor
lods
clc
mov
aam
jnp
xchg
cmp
jle
js,pn
hlt
pusha
dec
pop
mov
push
das
push
test
call
jge
xchg
pop
dec
scas
pop
add
jmp
inc
clc
push
jle
cmp
push
ljmp
loope
pusha
test
movsb
jmp
insb
or
insb
sub
fld
jmp
lds
sahf
sbb
push
add
xor
aaa
pop
es
test
cs
std
js
pop
cmpsb
xchg
clc
fs
inc
shll
leave
dec
cmp
dec
add
pop
sub
inc
adc
lods
pop
arpl
aad
or
shlb
or
fisttpl
hlt
sahf
pop
movsb
lahf
test
loope
iret
outsb
jmp
push
sub
jle
lret
sbb
call
xlat
jge
mov
hlt
xchg
pop
enter
icebp
pop
inc
icebp
fstps
scas
test
jle
lea
popf
pop
dec
mov
adc
lahf
pop
fnstenv
and
cmp
mov
xchg
xor
push
xchg
js
mov
addr16
pop
push
jne
pop
mov
jo
push
xchg
cmpsl
and
xchg
outsl
mov
jbe
mov
movsb
out
stc
int3
std
jo
int3
hlt
add
xor
sub
jb
icebp
fcoms
stos
mov
daa
popf
cmc
lret
std
sub
inc
imul
mov
adc
mov
pushf
xor
fcomps
sub
xor
sbb
fbld
out
imul
imul
mov
lods
aas
cwtl
xor
cwtl
xor
sub
in
fs
in
fcmovnb
xchg
into
lea
cmp
mov
sub
adc
sbb
push
mov
popf
movsl
repz
das
fidivl
gs
divl
cmp
mov
sub
cmpsb
pop
out
mov
xor
bound
inc
push
mov
imulb
push
jge
idivl
out
sub
cs
add
mov
cmc
arpl
xchg
cmp
fxtract
test
call
pop
sbb
js
insl
int
ja,pt
mov
jle
or
sub
adc
es
addr16
mov
les
sbb
cs
popl
fidivrs
outsl
data16
push
push
or
and
pop
icebp
adcb
add
sahf
dec
cmp
and
jae
js
or
xorl
pop
les
cltd
lahf
pop
dec
xor
jg
push
xchg
sub
pushw
in
das
ret
test
insb
iret
rcrb
pushf
sub
dec
loop
mov
adc
jnp
dec
imul
popa
cmp
push
push
ds
sbb
test
loopne
incl
inc
outsb
cld
in
clc
and
or
loopne
sbb
jecxz
cmp
sbb
aam
jg
inc
std
push
int
sbb
std
ss
push
mov
rcrl
xchg
loope
adc
cmp
out
jge
sbb
cmp
xchg
or
sub
adc
mov
pop
aam
movsl
test
ror
sub
ljmp
imul
popf
scas
mov
push
jl
inc
ss
mov
sbb
lods
scas
pop
idivb
push
call
or
jne
mov
sbb
leave
test
mov
cmp
cmpsb
push
out
punpckhbw
jb
mov
repz
push
pushf
adc
outsb
imul
outsb
shll
lret
out
mov
lods
add
adc
repz
ja
jg
clc
mov
push
mov
push
fiaddl
inc
mov
mov
inc
pop
pushf
cmp
mov
gs
call
lods
push
push
mov
add
sbb
in
xchg
lods
dec
das
rcr
sti
adc
ds
imul
push
and
out
lods
loope
sarl
mov
inc
std
adc
add
xor
icebp
jle
pop
push
and
pusha
ja
in
lret
pop
push
lahf
inc
or
fdivr
iret
popa
pop
xchg
adc
decb
vfmsub132pd
push
into
jle
inc
cmpl
push
es
arpl
mov
sbb
xchg
mov
into
into
ljmp
cmp
pushf
in
jns
dec
sub
mov
imul
dec
stos
in
sub
mov
std
push
outsl
mov
xchg
pop
call
enter
aaa
int3
out
shr
mov
cltd
and
aam
bound
aas
push
push
lock
push
inc
xchg
inc
pop
jne
imul
mov
loopne
and
pmaxub
mov
rclb
hlt
das
hlt
hlt
inc
xlat
shlb
jo
jp
inc
dec
cmp
sub
test
bound
pop
push
inc
pop
sub
gs
xor
in
adc
add
add
outsl
xor
int3
or
mov
mov
adc
fcomip
pop
add
ljmp
rorb
adc
inc
push
mov
pop
sti
inc
jne
stos
mov
xchg
xor
jg
inc
xchg
sbb
dec
pop
pop
or
stos
mov
or
dec
push
mov
push
fadds
sti
mov
push
add
mov
dec
push
push
pause
mov
pop
xchg
or
cmp
movsl
aas
and
das
clc
adc
or
mov
shl
mov
sub
or
dec
xor
call
dec
push
test
mov
sub
cltd
test
jne
sub
push
adc
stc
frstor
scas
add
adc
xor
shll
xor
sbb
outsl
sti
inc
ljmp
imul
loop
outsl
mov
jecxz
mov
hlt
sub
inc
testb
sub
push
xorb
ret
lds
lods
mov
inc
dec
add
xor
faddl
xor
jge
mov
lods
pop
xchg
pop
fmull
ret
xchg
mov
popf
stos
lods
mov
dec
cld
mov
movl
loop
or
mov
sti
pop
jbe
sti
scas
pop
add
inc
jne
and
dec
lret
lahf
sub
insl
mov
dec
mov
add
into
fidivrs
int3
jmp
rclb
dec
sbb
loopne
pop
je
stos
scas
ret
cwtl
cmp
notl
sbb
rcrb
out
popf
das
inc
imul
push
mov
or
cmp
fwait
push
sarl
cmp
push
stos
cs
lock
movsl
out
lods
push
lods
inc
mov
repz
xor
aas
in
dec
leave
mov
and
sbb
insl
stos
inc
push
insl
fcoml
adc
adcb
jno
inc
stos
jmp
and
out
icebp
loope
add
jb
sti
sub
sbb
pop
mov
xor
loope
pop
outsb
pusha
in
cli
aam
cmp
xchg
dec
xor
dec
out
daa
inc
adc
or
inc
mov
add
fildll
mov
mov
sbb
xchg
pop
dec
and
iret
or
xchg
mov
sbb
jl
outsb
inc
jbe
subb
repnz
lods
aaa
pop
jns
in
rcll
pop
outsl
inc
imul
dec
mov
testl
iret
in
cmc
adcb
xchg
sbb
and
sbb
adc
pop
sar
cwtl
popa
xchg
inc
mov
je
std
lock
sub
add
sub
mov
xchg
mov
test
fs
hlt
addr16
ss
adc
ds
push
mov
bound
and
jge
cwtl
mov
cmp
jmp
mov
aaa
mov
inc
xor
fs
add
xchg
push
jmp
dec
data16
xor
int
les
mov
lods
mov
mov
cmpsl
push
pop
and
out
sbbb
ret
mov
or
pop
jg
in
rcrb
add
and
fsts
adc
dec
cmp
mov
in
dec
or
jb
mov
or
mov
aaa
jb
hlt
jle
bound
push
lods
scas
and
lcall
or
mov
imul
cmpsl
mov
and
stc
inc
mov
dec
jbe
repz
mov
xlat
int3
mov
push
arpl
out
popa
stos
repnz
ss
mov
pop
int3
inc
cmp
bnd
fxch
push
mov
cmpsl
cld
sub
cmp
std
push
sbb
aas
dec
push
sbbb
fdiv
mov
or
cwtl
xlat
lcall
sub
xchg
jns
into
imul
jo
neg
pop
jge
icebp
cmpsl
push
aas
push
add
jmp
gs
mov
das
mov
sbb
int3
imul
lock
xor
push
insl
push
xchg
and
jns
shlb
loopne
and
mov
pop
mov
mov
mov
xchg
or
jle
add
les
xchg
jecxz
das
in
mov
jnp
in
push
sarl
insl
mov
filds
cltd
xor
dec
fwait
imul
cmp
sarb
in
fstl
in
inc
shlb
jno
xor
popa
cmpsb
push
adc
fwait
inc
adc
jbe
adc
bound
xor
ds
mov
lea
mov
cwtl
or
push
mov
add
mov
or
cmp
xchg
lahf
push
sbb
adc
xor
mov
adc
mov
lods
imul
dec
shr
inc
mov
stos
add
cmp
mov
pop
sub
cltd
nop
adc
out
push
mov
lock
jo
icebp
dec
mov
or
dec
and
sub
mov
push
sbb
dec
int
aam
or
mov
jge
xchg
mov
mov
inc
mov
filds
push
or
loop
jg
xchg
sbb
inc
push
mov
mov
pop
fdivrl
jno
dec
cmpsb
mov
or
fcmovbe
lcall
jmp
pop
std
xlat
fldcw
lea
push
mov
add
sub
pop
push
rol
xor
jge
repnz
rorb
mov
in
mov
or
in
and
sub
add
shlb
cld
data16
faddp
leave
dec
lahf
push
ret
mov
in
mov
test
mov
aad
bound
sbb
push
pop
leave
in
mov
loope
lret
pop
inc
jge
and
xchg
cmpsl
mov
jae
adc
lods
dec
into
inc
lcall
incl
jne
sub
and
lahf
xchg
jmp
pop
inc
jmp
sbbl
sub
rcr
and
or
jns
add
and
test
mov
outsb
jmp
insl
fisubs
sub
jmp
cld
ficoms
pop
ficoms
push
stos
push
fs
push
das
or
data16
jae
es
cmc
cmc
mov
mov
addr16
jmp
mov
aaa
clc
push
dec
popf
incl
clc
jae
addr16
aam
rolb
jno
addr16
push
mov
adc
jbe
je
mov
cld
add
push
aad
xlat
add
iret
xor
imul
ror
inc
divb
mov
mov
sti
stos
sbb
dec
add
jno
xchg
jbe
sbb
sub
mov
jge
cmp
jo
leave
mov
cmp
mov
mov
sbb
adc
test
ret
fisubs
push
pop
fdivr
sbb
xor
pop
adc
fwait
xchg
outsl
lea
jb
cmpsl
jge
data16
cmp
imul
pushf
sub
mov
rcl
and
fcomps
cltd
roll
mov
std
rcl
ret
pcmpeqb
or
sbb
iret
js
mov
xor
ror
fs
mov
sbb
fs
dec
movsl
sbb
push
dec
jecxz
test
mov
jne
add
sbb
mov
aam
push
jns
pop
xchg
dec
mov
mov
mov
ror
in
jo
inc
cmp
icebp
sarb
push
sahf
loop
and
dec
push
faddl
inc
mov
dec
testb
popf
jg
aad
in
and
inc
js
xchg
mov
xchg
out
inc
mov
fwait
enter
aas
xchg
lretw
push
jge
into
pop
scas
cmpl
loope
stc
cmp
decl
jle
iret
idivb
dec
cmpsl
test
xchg
popa
or
repz
cs
test
iret
push
lahf
and
xchg
push
test
ficoms
and
sbb
pop
adc
dec
jb
sbbb
fdivs
sbb
rorl
pop
aam
mov
sbb
popf
adc
xchg
cmp
mov
and
mov
xchg
sbb
xchg
movsb
xorb
adc
scas
icebp
cmc
mov
leave
dec
mov
scas
sbb
sbb
stos
jae
movsl
push
add
inc
xor
cmp
sbb
je
je
adc
lea
cs
add
add
sbb
movsl
pop
mov
cmp
enter
adc
cld
daa
and
out
pop
add
popa
stc
leave
or
stos
mov
lahf
in
shl
jp
hlt
scas
sub
adc
je
imul
lea
pop
or
imul
inc
adc
inc
stc
test
cltd
mov
add
fs
dec
jp
jbe
jp
std
into
adc
fistpl
stos
gs
cli
lret
mov
mov
daa
movsb
scas
adcl
mov
push
fisubl
scas
divb
inc
xchg
in
dec
and
push
push
into
and
cmp
push
cmp
outsl
add
into
lds
nop
jns
in
push
sub
sub
out
mov
cmc
into
jo
loopne
icebp
movsb
xor
call
jl
pop
cmp
repnz
jbe
push
sti
push
or
ja
fs
int3
xchg
test
cs
test
cmp
cmp
jne
je
push
lock
popf
mov
loope
movsb
xor
push
mov
mov
movsl
in
aas
sub
mov
mov
jmp
dec
addb
adcb
push
mov
lds
adc
test
push
cmpsl
dec
inc
pop
jmp
dec
fildll
mov
jle
xor
aas
lods
rcrl
in
push
jns
add
cld
clc
in
fadd
and
rcl
pop
and
cmp
fcomip
cmp
and
inc
jecxz
sbb
jmp
mov
push
inc
mov
mov
lret
nop
ljmp
lret
jns
cmp
push
in
ljmp
cld
pop
shlb
push
into
adc
lret
cmp
shlb
jl
dec
xchg
repz
xor
dec
mov
inc
fbld
cmpsl
adc
test
xor
or
lods
dec
dec
jge
lods
addr16
cmpsb
divl
inc
cmpsb
cwtl
cmp
jb
adc
lods
jns
ficompl
push
adc
push
cmpsb
mov
js
rcrb
movsb
aad
enter
inc
lock
mov
mov
push
lret
sbb
jmp
mov
mov
mov
subb
das
mov
or
clc
cli
aaa
sub
xchg
push
xor
fstpl
push
inc
outsl
cmp
jno
xchg
pop
sahf
ljmp
lods
jne
cmp
mov
andb
cld
jge
clc
enter
pop
mov
loopne
sbb
jb
adc
cmpsb
cmp
pushf
xchg
ffree
mov
int3
sbb
dec
sbb
sarl
loopne
sub
inc
jecxz
adc
mov
gs
add
mov
xor
push
push
out
xchg
or
sahf
cmp
imul
pop
push
jp
aad
jo
jns
mov
inc
in
or
and
xor
out
test
pop
cmc
sbb
fs
jmp
call
or
js
fdivr
jge
lea
in
pop
lods
mov
xchg
lcall
inc
mov
ja
in
lds
push
or
jae
mov
inc
xor
je
jns
sbb
pop
mov
in
outsl
pop
xlat
shlb
inc
jecxz
fs
lock
xor
int
adc
dec
xchg
lret
aad
mov
pop
dec
adc
int3
and
cwtl
addb
jge
sti
bound
xchg
and
mov
inc
pop
adc
clc
lods
dec
lock
sub
jo
mov
cmp
and
mov
out
pop
loopne
fdivp
add
sub
add
aam
pop
sub
push
jbe
inc
notw
lcall
push
mov
dec
mov
in
or
jmp
repnz
jle
xchg
mov
pop
jmp
out
pop
in
sahf
decb
addr16
mov
jb
arpl
jbe
and
ficoms
lods
xor
lret
mov
out
lahf
mov
xchg
push
les
sub
pushf
inc
and
pop
es
insl
cmpl
push
shlb
imul
shll
xorb
mov
cmc
push
std
lret
je
bound
repnz
xlat
and
fwait
mov
sbb
repnz
jns
adc
dec
or
mov
jl
and
in
cmpsw
rcl
xor
push
jns
out
xchg
jnp
jns
shrb
dec
mov
outsb
add
mov
mov
push
test
jp
mov
shll
loopne
push
fldt
pop
fidivrs
out
push
in
mov
mov
sub
pop
mov
and
pushf
pop
push
or
cmp
scas
mov
adc
mov
subl
sahf
mov
lods
or
jnp
and
sbbl
xor
mov
push
sti
cmpsb
insl
cmp
out
lock
lcall
orl
cmp
bound
lds
sub
aaa
sbb
inc
xchg
insb
test
mov
add
dec
sub
dec
inc
shlb
test
subl
loopne
dec
cmp
das
call
xchg
loopne
push
cmp
xor
push
adc
push
ds
fcomip
out
repnz
rorb
push
cmp
fstps
cmp
and
mov
cmpl
cmp
std
outsb
mov
cmp
stc
push
mov
jae
or
andb
xchg
mov
or
out
xor
leave
adc
fdivr
jecxz
jle
in
mov
cmp
xchg
xchg
add
call
jecxz
pop
push
mov
mov
fimuls
jle
mov
adc
inc
into
push
cmp
xor
nop
popf
sbb
sub
jnp
data16
mov
lahf
stos
out
lahf
repz
ljmp
pop
xchg
jbe
sub
scas
std
xor
fnstenv
mov
mov
mov
mov
ret
add
mov
fildl
out
out
scas
js
dec
outsl
sub
in
outsl
xchg
lcall
sahf
mov
push
lods
inc
adc
aam
gs
imul
pop
in
mov
clc
shr
dec
sbb
mov
lcall
lea
and
scas
mov
sbb
add
stos
mov
mov
fldl
out
mov
jnp
jg
add
nop
stos
jo
sub
jmp
outsl
sbb
dec
pop
dec
pop
add
xor
jge
push
addr16
insb
mov
out
push
lret
orl
call
mov
fwait
add
pop
pop
shrb
ror
add
mov
adc
jb
loope
ret
adc
jge
fcomps
dec
clc
mov
fcomi
xor
lds
daa
ja
jmp
add
xor
ret
or
cltd
call
stos
subb
pop
adc
dec
xor
or
cmc
inc
ficomps
xor
and
nop
or
out
and
sbb
out
mov
stos
xchg
mov
jg
push
aas
sti
rcr
cwtl
dec
or
cmc
inc
push
roll
fistpll
pop
rorl
stc
inc
mov
sub
mov
in
stos
jnp
xchg
mov
in
inc
jbe
or
imul
mov
cmpsl
sbb
xor
lcall
xchg
dec
ror
xlat
sub
mov
adc
sbb
leave
insb
cmp
adc
lods
popf
loope
fmuls
and
insl
mov
fidivs
outsb
inc
and
dec
adc
adc
movsl
daa
jmp
pop
dec
mov
cmp
jne
push
stc
xor
or
mov
cltd
xor
loopne
into
push
or
cmp
jecxz
jno
outsl
jge
out
xor
push
pop
inc
scas
repz
pop
test
cmpsl
jbe
loopne
mov
icebp
fwait
insl
push
in
int
icebp
loopne
xchg
inc
adcl
dec
pop
test
adc
mov
into
inc
pushf
in
mov
sub
out
adc
ja
push
mov
rcl
cmp
and
mov
pop
je
std
inc
in
sti
cmp
sbb
enter
jmp
in
aaa
rcr
pop
orb
xchg
nop
xor
push
jmp
pushl
dec
dec
cmp
test
es
lcall
unpckhps
ljmp
inc
xchg
cli
push
jge
adcl
push
jmp
inc
lahf
insb
mov
leave
clc
sub
nop
add
jecxz
bound
mov
ds
ret
aas
jmp
rorl
out
orb
call
cmpsl
idivb
inc
shlb
pop
fidivrs
jl
stos
clc
mov
psadbw
lcall
pop
fsubs
cmpsl
and
fdivl
and
push
or
aaa
jns
fistpll
lods
sub
pop
xchg
arpl
cmpsl
insl
dec
sub
outsb
jg
push
les
clc
mov
fldt
aad
and
sbb
out
test
out
fbld
les
push
mov
aam
jns
sti
mov
xor
sub
outsl
xchg
in
mov
pop
pop
sbb
cmp
adc
hlt
push
sbb
in
and
in
dec
sbb
pushf
clc
xchg
sarb
jae
arpl
add
or
mull
fstl
enter
jecxz
cli
popf
sbb
jnp
jns
jnp
mov
movsl
pop
int3
push
xchg
insb
int3
fs
jae
test
and
outsb
loopne
cli
outsb
or
mov
inc
mov
sub
outsb
in
iret
or
je
sbb
jp
or
sbb
movl
jb
iret
repz
xor
pushf
or
pop
mov
andb
sub
bound
and
mov
jae
push
and
sbb
aaa
jle
enter
mov
inc
dec
dec
notl
test
and
cs
dec
lahf
and
aam
push
and
mov
cmpsb
into
jne
nop
push
inc
data16
push
stos
repnz
into
mov
cwtl
cbtw
mov
jbe
mov
cmp
mov
test
in
aaa
xchg
lcall
adc
das
xchg
lods
push
inc
adc
cmpsl
dec
pop
mov
xchg
fnsave
sub
mov
in
mov
cs
hlt
mov
fstps
add
dec
fs
xchg
mov
scas
jo
js
fdivrl
shll
lods
sbbb
and
es
mov
xor
xchg
mov
stc
mov
sti
or
xchg
movsb
adc
push
mov
xchg
jecxz
dec
push
jnp
enter
and
mov
sub
mov
ja
outsb
xor
call
dec
sub
mov
pop
loopne
inc
movsb
lods
xchg
stos
gs
xchg
mov
stc
mov
mov
lea
je
ret
mov
in
xchg
ja
xor
add
leave
rcrb
adc
dec
cmp
pop
xchg
jge
inc
subb
cmp
push
mov
jl
popa
lret
test
jl,pt
mov
daa
andl
cli
mov
out
aam
popa
adc
mov
sub
jmp
ss
push
sahf
out
cmp
mov
test
and
jne
mov
and
xchg
dec
xchg
jl
repz
mov
shl
cmp
fs
push
push
and
out
loopne
idiv
push
mov
xor
loope
adcl
push
push
mov
test
dec
mov
or
jns
sub
xchg
inc
inc
xor
call
mov
xor
fcoml
enter
xchg
loope
push
mov
add
mov
adc
and
xchg
jae
dec
lcall
jecxz
imul
mov
mov
and
inc
fsubs
push
in
sbb
cmp
sbb
cli
sbbl
pop
push
cmp
cvtps2pi
das
gs
dec
sbb
int3
or
dec
js
and
fstp
popa
outsb
jp
stc
adc
pextrw
push
repz
xchg
sti
xor
lock
cmp
aam
test
and
lods
push
add
push
ja
aaa
mov
repz
jecxz
in
stos
cld
jge
jno
pop
adc
or
pop
js
jnp
dec
fnsave
sbb
arpl
cmp
outsl
adc
in
aad
mov
cmp
pushf
std
lcall
dec
mov
fwait
cmp
fdivrl
lea
repnz
call
test
jo
out
decl
and
adc
mov
fstp
je
inc
dec
xchg
inc
rcrl
adc
pop
daa
mov
jne
add
imul
and
sbb
aas
lcall
imul
push
xchg
xchg
cmp
add
cmp
mov
xchg
arpl
imul
adc
test
sub
adc
ret
or
pop
xor
jmp
jge
add
int
jnp
mov
mov
rcrb
sbb
sub
sbb
int
pusha
jle
imul
pop
xor
movsb
mov
fdivs
enter
dec
lahf
jbe
ds
fcoml
mov
test
mov
adc
dec
in
mov
lcall
push
fcmovnu
push
sti
ja
xor
xor
inc
adc
jmp
mov
lret
shll
mov
pushl
push
daa
les
push
scas
mov
push
jb
cmp
dec
jg
mov
xchg
sub
popa
mov
mov
mov
mov
dec
ret
mov
les
pop
jo
jmp
mov
jb
mov
movsl
outsl
cmp
xlat
xor
outsl
pop
aaa
leave
scas
gs
adc
fidivl
lret
xchg
gs
dec
mov
jmp
adc
jmp
mov
adc
xchg
ss
inc
inc
xlat
push
test
adc
fsubs
scas
push
pop
mov
push
push
inc
and
sub
push
add
sbbl
push
jnp
fs
je
push
repz
push
adc
icebp
std
repnz
xorb
cmp
jbe
aam
cmp
rorl
repz
or
dec
sub
in
dec
test
push
sub
xor
xor
add
pop
out
mov
stc
inc
popa
inc
inc
movsl
insl
dec
xchg
cmp
pushf
pushf
fstl
sub
gs
lahf
mov
fs
sti
sub
mov
sahf
push
cli
and
push
add
adc
jecxz
sbb
pusha
je
mov
xchg
dec
fidivs
or
jb
pop
dec
jg
xor
addr16
xor
xchg
cmpl
push
testl
or
lods
out
fisubs
shrl
xor
arpl
dec
movsb
mov
std
mov
gs
pop
fiaddl
dec
fwait
out
xchg
add
push
jg
mov
and
mov
or
cs
xchg
add
adc
sub
jb
adc
shr
mov
movsb
cmpsl
scas
and
lret
insl
in
dec
inc
push
sub
pop
out
orl
xor
out
leave
pop
pop
jb
adc
xor
mov
das
sbb
mov
pop
inc
fbstp
jb
adc
outsl
inc
orl
je
sub
jae
jns
fs
in
in
cld
repnz
lret
movsl
inc
cmp
jmp
andb
xchg
aas
rep
repz
les
int
sub
inc
outsb
jo
push
cmp
hlt
repz
mov
lods
cmpsl
pop
inc
scas
test
dec
adc
xchg
incl
lds
aas
ja
out
xchg
xchg
and
in
aas
adc
xor
pop
xor
stos
aad
movsb
inc
lret
jno
push
and
push
and
sbb
push
xor
loop
xlat
jae
and
cmc
aas
jle
lahf
push
pop
aas
out
or
pop
das
jmp
test
mov
popa
orl
daa
divb
pop
xchg
es
lea
push
pop
push
adc
mov
in
xor
jbe
inc
inc
lcall
dec
or
insb
pop
xchg
fsubs
mov
xchg
mov
stc
negb
mov
push
movb
or
loopne
cmp
xchg
pushf
es
lcall
jle
in
cmp
in
mov
push
in
idivb
pop
push
mov
dec
mov
jecxz
adcb
pop
dec
add
in
aas
pusha
out
pushf
int3
sub
ficoms
loopne
mov
xor
fdivs
pusha
dec
mov
loope
loopnew
mov
daa
or
mov
insb
in
mov
sahf
pop
sbb
inc
dec
sub
pop
scas
push
mov
sbb
xchg
mov
mov
loopne
out
pop
push
xor
mov
cmp
mov
jae
icebp
pusha
xchg
repnz
xor
incb
lea
outsb
mov
incb
out
les
rorb
js
notl
repnz
int
mov
xchg
jmp
bound
pop
inc
pop
xor
sbb
mov
mov
imul
pop
xchg
enter
push
inc
out
aam
mov
das
inc
jp
loope
xor
inc
stos
cltd
sbbb
test
xchg
add
push
nop
sbb
in
adc
push
xor
xchg
xor
mov
and
sub
lahf
and
jl
push
mov
mov
repz
lods
inc
test
stos
out
mov
mov
push
sbb
and
popa
push
fnstenv
cs
adc
movsb
jmp
mov
fwait
cmp
imul
and
push
push
adc
cmp
mov
inc
pop
outsb
js
adc
mov
imul
outsl
sub
dec
jl
mov
pop
pop
jmp
out
in
repz
or
adc
jp
jge
out
in
insl
or
fcomi
pop
mov
mov
jns
push
xchg
cli
cmp
mov
push
pop
jb
push
push
mov
aaa
adc
jb
hlt
insl
in
rcrl
fistpl
ret
mov
xor
lock
adc
dec
mov
push
pushf
test
andb
stos
jb
push
pop
sbb
dec
and
bound
add
shlb
jo
dec
add
or
dec
cmpsl
orl
mov
daa
push
cmpl
test
pop
jle
aas
jo
fidivl
xor
xchg
mov
popa
and
push
dec
shlb
std
outsl
nop
int
imul
lods
jp
incb
adc
jmp
outsb
shlb
sbb
popf
mov
insb
xchg
rcrl
rclb
add
in
inc
sub
pusha
mov
mov
mov
dec
mov
fisttps
and
and
or
sbb
rcrb
xor
or
mov
loop
mov
aaa
or
push
sub
test
mov
loope
dec
jp
jb
inc
lret
mov
stos
xor
adc
push
pusha
fcomp
cmp
outsl
push
mov
push
lds
fcmovne
jl
pop
or
mov
pusha
sub
faddl
mov
mov
std
repz
push
jnp
jp
dec
adc
jecxz
pop
cmp
pop
scas
dec
js
cld
xchg
adc
inc
mov
gs
pop
fnstenv
mov
fwait
cmc
mov
and
stos
adc
mov
in
inc
jecxz
sub
mov
dec
or
insl
mov
lret
shll
repz
test
push
push
push
pop
dec
sub
sub
enter
or
and
or
movsb
adc
mov
add
ret
fwait
jge
sub
enter
cmpsl
or
dec
inc
pop
div
inc
mov
repnz
pop
iret
rcrl
loopne
pop
xor
out
xchg
arpl
jb
cmp
mov
out
xchg
pusha
pop
mov
fdivr
lret
shlb
out
sbb
mov
push
sbb
mov
sbb
cli
cmp
mov
imul
mov
dec
adc
mov
adc
mov
lock
push
push
cltd
mov
shll
mov
adc
jg
mov
and
mov
mov
jge
xor
movsl
sbb
or
fdivp
call
inc
mov
adc
icebp
cmc
add
dec
jp
and
jne
negb
or
je
push
mov
insb
fsubl
or
and
dec
push
adc
push
pop
scas
dec
ret
into
sbb
lret
xchg
mov
sbb
imul
xchg
sbb
push
or
mov
lahf
add
sahf
pusha
lret
in
outsb
fwait
inc
shll
adc
fsubrl
mov
sahf
ds
mov
adc
std
fisttpll
fs
pop
cmpsw
jge
ja
jbe
into
adc
push
mov
pop
dec
xchg
jmp
popa
xor
and
mov
sbb
mov
xor
or
push
dec
inc
test
adc
add
push
stos
add
mov
sahf
jmp
push
add
test
xchg
flds
push
es
pop
hlt
repz
les
notl
aaa
popf
sub
sbb
lcall
xchg
push
addr16
pop
fs
xorb
xor
add
mov
add
mov
fisttps
decl
inc
jmp
in
loopne
and
inc
ret
and
adc
dec
sbb
cmp
mov
fistps
shl
sahf
icebp
or
call
icebp
mov
stos
int
add
orl
imul
adc
fwait
jb
daa
cs
push
and
fwait
adc
out
mov
outsb
and
sbb
mov
push
adc
rclb
mov
mov
mov
xchg
sbbb
inc
imul
int
pop
adc
cmp
cs
jmp
aaa
sbb
cmc
leave
mov
call
in
cmp
jno
mov
xlat
jbe
inc
insl
aas
push
ficoml
and
fwait
outsl
das
jbe
arpl
stos
inc
cmp
sbb
pop
test
sbb
jae
adc
sbb
jae
int
rorl
pop
push
xor
mov
pop
xchg
mov
sbb
fadds
leave
add
fcomps
and
pop
jns
jne
mov
sbb
cmp
call
fstl
adc
cmp
cmp
stos
mov
push
and
icebp
cmp
popa
lret
add
pop
out
mov
out
sbb
in
adc
loope
jo
pop
xor
shrb
jge
xchg
push
mov
push
pushf
cmp
pop
sbb
loope
scas
sbb
jecxz
pop
jl
fwait
adc
mov
inc
shlb
or
push
sti
cltd
push
ret
lods
clc
mov
cld
into
movsl
outsl
xchg
push
lds
testl
popa
stc
adc
fsubs
adc
and
jle
in
cmp
inc
dec
cld
orl
xlat
mov
mov
in
daa
push
push
adc
out
dec
lock
push
cld
in
pushf
out
mov
xchg
sbb
adc
sub
inc
cmpsb
push
arpl
movsl
pop
fdivrs
cmpsl
jle
fwait
mov
lahf
adc
ljmp
popa
push
and
add
aaa
xchg
pop
xchg
iret
sub
js
fisubrs
mov
into
xchg
and
push
loope
or
int3
inc
rolb
push
push
push
ror
push
into
in
xor
dec
pop
adc
lods
call
xlat
test
jae
pop
std
adc
mov
adc
and
or
fistl
xchg
push
fdivl
sub
xor
filds
aam
loope
push
pusha
stc
inc
jno
inc
imul
clc
jno
bound
hlt
data16
mov
mov
xor
outsl
pushf
sahf
ss
push
and
mulb
pop
inc
inc
enter
sub
xor
mov
or
adc
scas
jg
loope
test
lahf
lds
adc
fwait
js
sti
jae
pusha
popf
cld
lcall
rclb
scas
xchg
dec
mov
push
aam
mov
mov
insl
adc
jmp
ret
lock
add
or
rclb
movb
repnz
xor
and
dec
popa
std
cmp
pop
testb
shl
jg
lea
mov
xor
fsubs
lock
pusha
adc
jno
add
shl
outsl
ret
push
adc
add
sarl
push
gs
sbb
rclb
cmp
jnp
mov
imul
add
pavgb
in
mov
and
dec
xor
addb
jne
sub
push
mov
mov
insb
fidivl
movsl
cs
push
sbb
sbb
out
imul
in
stos
add
cli
arpl
fidivrs
lods
mov
or
adc
test
repz
nop
mov
icebp
out
shrb
insb
lods
pop
adc
mov
xchg
ret
movsl
cld
adc
sub
imul
stos
ss
pop
das
inc
jl
mov
jge
xchg
pop
push
cmp
cmp
bound
test
dec
dec
push
ret
adc
mov
jecxz
mov
pop
nop
fidivrs
sbb
ret
mov
adc
aam
dec
mov
push
cmp
call
popf
jle
popa
sahf
scas
sarl
jge
test
pop
or
test
fdivrp
mov
hlt
adc
xlat
nop
jb
dec
add
lods
ret
movsb
repnz
fsubl
mov
jae
sbb
mov
mov
in
jl
outsb
pop
enter
pop
addl
jecxz
daa
jns
insb
dec
adc
inc
push
push
pop
pop
fwait
adc
mov
mov
sbb
out
jp
dec
rcl
fdivrs
pop
pop
adc
xor
sbb
mov
jmp
mov
enter
or
sub
cmp
ja
push
cmp
push
or
sbb
jmp
xchg
lcall
pop
push
outsl
data16
inc
leave
dec
inc
xchg
xor
cmp
bound
imul
fcomip
test
jbe
pop
lahf
fwait
jle
imul
stos
mov
aad
rcrb
scas
pushf
sbbl
jecxz
insl
mov
scas
loopne
cmp
jle
jmp
jae
movsb
pushf
cmp
sub
xor
lock
push
xchg
ret
clc
pop
faddl
loopne
jae
andl
insb
nop
fwait
in
pushf
push
add
movsl
jno
sub
divl
mov
mov
pop
xchg
jnp
inc
and
montmul
cmpsb
add
sbb
mov
stc
mov
test
jmp
lds
pop
ret
cli
scas
xchg
push
pop
aam
test
loopne
and
repnz
sub
andb
sub
bound
and
jp
cmp
adc
fcom
sti
adc
dec
xor
cmp
adc
mov
jmp
mov
outsl
jl
dec
dec
ds
aas
xor
push
inc
sub
dec
in
xor
ret
ss
xchg
push
pop
pop
bound
mov
sbb
ss
xorb
outsl
nop
sub
ljmp
lahf
push
roll
addr16
mov
mov
push
notl
jo
xchg
pop
jmp
enter
and
push
andb
mov
mov
dec
and
mov
push
cwtl
cwtl
jno
pop
sub
jnp
daa
sti
lock
add
dec
adc
dec
add
cmp
popf
hlt
stc
mov
mov
sub
in
stos
rcr
jle
lock
repz
add
add
roll
aam
push
xchg
daa
push
fyl2x
mov
sbb
or
loopne
cmp
xchg
fstp
mov
stos
adc
mov
inc
jno
int3
sub
fstpl
jle
sub
jl
int3
cmpsl
lret
push
push
cmp
std
inc
jg
cmp
mov
lret
int3
mov
cmp
or
testb
jne
test
inc
mov
in
adc
push
sub
imul
xchg
subb
cmc
mov
out
dec
movsb
pop
int3
lahf
imul
lret
out
inc
fxch
dec
dec
push
push
sarb
push
pop
jae
adc
inc
fstpl
jb
or
nop
cmp
lret
sti
test
insl
push
inc
out
xchg
lods
or
mov
cmp
fistpl
imul
sub
shr
out
loop
pop
call
out
sbb
cmp
add
sbb
jecxz
cmp
cmp
mov
sub
jno
mov
and
add
dec
dec
add
adc
inc
push
mov
push
push
mov
xor
test
bound
and
or
aaa
dec
dec
mov
and
pop
or
xchg
pop
ljmp
cwtl
scas
movsb
xlat
pop
scas
sbb
sbb
aam
wbinvd
mulb
sbb
scas
mov
xor
jno
push
sub
push
mov
fdivrs
or
adc
lcall
cmp
aaa
mov
insl
add
les
inc
mov
jb
push
das
mov
sbb
outsb
dec
xchg
push
lods
lea
frstor
gs
push
je
std
push
fsincos
daa
enter
mov
inc
add
test
into
cmp
push
out
sbb
dec
in
and
rorb
xchg
cmpsl
aam
stc
mov
inc
or
push
adc
sub
clc
adc
sbb
jl
sub
push
dec
mov
fstpt
inc
outsb
daa
jge
mov
inc
lret
jnp
xor
shll
in
inc
icebp
fadd
add
cmp
or
test
jge
xchg
pusha
sub
aam
imulb
mov
insb
stc
mov
xchg
pushf
dec
xor
adc
lds
cmp
jns
mov
ds
rcrb
cmp
lahf
add
das
ror
insb
jae
rcr
mov
jb
loopne
lock
and
xlat
jbe
jo
jmp
pop
into
mov
sbb
pop
loope
jae
xor
xchg
outsl
mov
cmpsb
sub
mov
or
jno
leave
push
jmp
in
mov
cmpsb
loop
fs
push
ja
xor
les
nop
jle
jge
jno
enter
mov
pop
push
rcl
pop
cmc
cmpsb
push
stc
insb
lahf
cwtl
rclb
outsb
dec
les
bound
xor
repnz
cmpb
jmp
stc
mov
cmp
jecxz
fs
popf
movsb
pop
arpl
sbb
mov
pusha
cmp
sub
shll
push
jmp
sbb
xlat
push
jno
cwtl
lcall
push
cmp
mov
fwait
xchg
fcoml
insl
and
mov
jnp
daa
push
push
add
fwait
sub
or
mov
jne
sbbb
jnp
data16
negb
xor
xorl
mov
mov
sbbl
mov
insb
or
adc
push
les
jp
xchg
lret
adc
test
mov
cmp
dec
pop
mov
dec
outsb
test
lret
pop
sbb
jo
cli
xchg
mov
das
and
sbb
lds
or
xchg
loopne
jno
mov
ja
into
stos
xchg
shl
lcall
out
push
fnstsw
mov
rolb
sbb
mov
cmpsb
dec
inc
xor
xchg
cmp
fldcw
out
out
lods
or
rcrb
ljmp
sub
push
nop
inc
cltd
cmp
imul
xchg
mov
inc
mov
sarb
cmpsl
adc
xorb
inc
pop
sbb
imull
push
jl
xchg
in
in
mov
sub
pop
dec
sub
sub
ret
sbb
cmp
mov
int
jne
cwtl
nopl
dec
das
enter
or
ljmp
sub
xchg
cld
repnz
mov
add
xchg
ljmp
mov
pushf
popa
add
movb
add
push
adc
inc
or
push
jno
mov
inc
cmp
mov
and
add
lret
insb
xor
andl
sbb
or
in
fcom
bound
lahf
mov
fwait
loopne
xor
in
rclb
mov
out
and
shll
inc
xor
pop
in
mov
repnz
xlat
xor
cmp
mov
int
cmp
addr16
sbb
xchg
sahf
mov
in
pop
popl
pop
fnstsw
outsb
and
imul
rclb
jne
idivl
xor
flds
loop
jmp
mov
inc
rcrl
les
sbb
mov
sbb
out
or
xchg
aad
notl
and
sbbl
mov
fcompl
xlat
mov
or
and
shl
adc
or
and
mov
fistpll
dec
in
mov
pop
xchg
inc
jnp
cmp
xchg
aad
pop
mov
pop
cltd
add
data16
fidivl
stos
push
sub
xor
fs
inc
jge
cmc
aam
out
sbb
jae
les
jp
push
dec
mov
leave
imul
cli
bnd
cmpsb
pop
jle
lret
ljmp
and
cmp
lock
adc
xchg
ss
sbb
cmp
lret
cmp
imul
addb
mov
loop
je
push
sar
addl
add
shll
inc
xchg
xchg
and
mov
scas
and
shlb
push
repnz
repnz
mov
mov
jbe
and
je
insb
or
xor
adc
inc
mov
jmp
jg
leave
adc
imul
inc
mov
mov
out
and
pop
mov
and
scas
insb
clc
test
daa
gs
cltd
inc
dec
mov
test
dec
lret
xchg
sbb
gs
xor
cwtl
pop
sub
lahf
mov
add
imul
incb
mov
mov
int3
es
cmp
jno
mov
fdivr
xchg
lret
or
mov
xor
scas
cmp
add
shlb
mov
jge
loop
inc
addl
mov
inc
xchg
icebp
jp
jno
adc
pop
push
inc
in
sbb
xchg
inc
or
sub
rcll
mov
jg
dec
in
clc
stos
ds
sbb
jno
ret
and
jns
lcall
leave
mov
adc
repz
xlat
jg
and
push
call
xchg
jmp
pushf
push
pop
pop
sub
test
xchg
push
push
mov
sbb
stc
pop
shl
add
pop
xor
cmp
ja
cltd
or
mov
mov
out
fs
into
sub
es
ljmp
test
xchg
sbb
js,pn
sub
mov
push
xchg
push
mov
outsb
les
fwait
mov
push
std
and
and
pop
fimuls
and
or
inc
cwtl
fadd
in
jbe
push
divl
shll
push
loop
mov
adc
icebp
les
adc
xor
jge
push
fadds
or
mov
outsb
int
push
je
mov
adc
xor
jbe
mov
jecxz
cmpl
sbb
addr16
lods
dec
mov
test
lcall
ja
and
sub
push
subb
sbb
mov
repnz
dec
sarl
mov
imul
sbb
cmp
addl
and
outsl
sti
bound
adcl
sub
lock
adc
mov
dec
imul
test
mov
mov
scas
push
cmp
fs
pop
jge
mov
or
fiaddl
mov
sub
cmpsb
movsl
sub
and
test
pop
imul
push
push
cmp
loop
push
fs
call
cmp
fbld
xchg
ret
rorb
mov
insb
dec
cmp
iret
fsub
aad
test
xchg
xchg
add
lods
cmc
or
add
in
repz
adc
fnstcw
frstor
cmpb
sub
push
pop
pop
sti
jns
push
mov
xor
test
fistps
clc
sub
outsb
pop
push
sti
pop
fistps
sbb
cmpsl
sbb
outsb
sub
jbe
jno
into
sbb
and
mov
les
pop
and
jl
sbb
mov
fbstp
and
lods
jg
cmp
dec
data16
lret
inc
test
shlb
aaa
inc
xor
xchg
rcrl
shr
jp
jae
negb
mov
dec
ret
mov
push
xor
add
mov
stc
push
push
sub
ds
out
jns
cs
cmp
mov
mov
add
into
lcall
mov
mov
xchg
mov
cmpl
dec
loopne
cmpsb
inc
xchg
fs
and
mov
imul
push
xchg
movsb
xor
xor
dec
or
jecxz
inc
orl
mov
or
push
dec
loopne
dec
mov
fs
out
mov
flds
inc
stos
insb
mov
fnstcw
dec
or
pusha
test
aas
push
lcall
arpl
inc
out
lods
inc
lret
out
mov
add
or
push
push
mov
or
std
add
imul
mov
pop
push
sub
dec
arpl
push
sub
sub
push
pop
and
scas
sub
pop
xchg
dec
loope
pusha
xchg
hlt
pop
push
inc
fiadds
pop
sahf
bound
mov
movsl
jl
mov
jae
lcall
add
or
dec
inc
leave
clc
repz
loopne
adc
aaa
mov
sub
test
dec
push
insl
test
pop
fisubl
inc
xchg
jno
outsb
addr16
aas
push
cmp
xchg
pop
hlt
loopne
mov
and
cmpsb
subb
in
mov
js
pop
movsl
outsl
inc
repz
push
popf
lcall
out
add
push
mov
icebp
pop
ljmp
shl
sub
fidivrs
pusha
out
xchg
aad
imul
jge
and
lea
add
cli
or
mov
pop
jno
ret
repnz
es
xor
xlat
ljmp
inc
fisubs
fdivrs
pop
mov
pop
xor
push
test
mov
push
mov
rolb
xchg
add
int
push
in
ljmp
mov
mov
jb
sub
and
adc
scas
sahf
mov
adc
popa
adc
cli
fdivrl
das
mov
fisubl
sahf
dec
lods
popw
push
test
jo
gs
jg
imull
ljmp
lock
mull
fadds
adc
pop
test
sub
fdivrl
sub
insl
mov
movsl
mov
inc
fnstsw
add
adc
andb
jne
movb
icebp
inc
stos
mov
jle
cmpsl
dec
ss
dec
test
in
adc
sarb
or
jecxz
xchg
sub
arpl
sub
mov
inc
jmp
mov
rorb
ret
sub
inc
pusha
repnz
fisubs
mov
in
adc
push
clc
call
out
push
repz
rcll
pop
frstor
clc
adc
ficoml
ret
pop
xor
xor
sbb
xlat
jae
sti
ficoml
push
cltd
mov
mov
add
pushf
mov
add
int
adc
ja
lahf
test
jns
jns
xchg
sbb
pop
adcb
cmpsb
loope
cmc
outsb
fisubrl
dec
in
xor
sbb
or
sub
add
inc
call
mov
les
imul
mov
lods
adc
sub
jmp
mov
imull
lcall
mov
cmp
lods
int3
shr
dec
popa
xor
jo
inc
xchg
shll
hlt
sti
arpl
add
subl
insb
mov
cmp
mov
cmp
adc
xor
dec
and
and
loope
rol
inc
inc
shlb
mov
lods
std
and
lcall
call
dec
sbbb
sub
fisubl
outsl
pop
xor
jae
adc
lcall
jp
adc
lods
pop
jne
mov
jmp
mov
cmp
lods
clc
jmp
call
xchg
mov
hlt
mov
sbb
rcl
mov
push
lea
inc
rcl
and
scas
in
das
and
andl
lcall
cmpsb
sbb
mov
fistps
adc
scas
sti
mov
mov
push
pop
cli
fisubs
jo
mov
adc
scas
mov
addr16
lcall
leave
shll
sbb
adc
int
jnp
aad
push
sahf
call
popf
out
inc
rcl
in
mulb
test
adc
std
cmp
std
cld
stc
pushf
push
push
stos
push
out
push
std
je
fs
popa
and
into
outsb
std
roll
jnp
mov
cmc
xor
and
adc
mov
dec
and
jnp
dec
sbb
aaa
dec
mov
shlb
push
in
int3
and
repz
cmp
dec
test
movsb
dec
cs
mov
pop
and
loopne
jnp
xchg
pop
negb
movsb
out
std
pop
cmpsl
sub
movsl
adc
adc
jle
xchg
xchg
xor
stc
cmp
inc
push
subl
movsl
jecxz
cmp
ss
sbb
xchg
inc
and
daa
stos
aas
test
xor
sub
inc
jecxz
inc
leave
xchg
adc
or
popa
lds
mov
mov
test
cmp
daa
lcall
mov
sbb
pop
cld
insl
push
cmpsl
jb
rclb
adc
lds
daa
jmp
stos
lcall
insl
add
pop
movsb
popf
aam
pushf
lcall
in
faddl
push
mov
cltd
xchg
gs
sub
dec
push
xchg
adc
inc
adc
icebp
adc
ljmp
insl
xor
imul
push
lret
push
push
pop
mov
test
retw
daa
loop
dec
cmpsb
mov
arpl
mov
cld
and
xor
test
xorl
sub
negl
jo
outsl
mov
imul
jge
mov
imul
inc
or
xchg
push
pop
pop
aad
sub
mov
mov
filds
addr16
xor
mov
cmpsb
fadds
push
fists
xchg
pop
test
push
lcall
aam
lret
jecxz
pop
test
addl
cld
xor
popf
mov
loopne
insb
lea
ljmp
ret
imul
inc
in
add
ret
cmpsl
ss
adc
sbb
scas
divb
and
lock
in
shlb
xchg
adc
rorl
ja
insl
hlt
xor
pushf
fwait
das
sbb
adc
sub
mov
test
cmpsl
cmp
pop
rolb
mov
popa
xchg
fdivrs
into
std
ja
cltd
fistpl
jp
pop
mov
out
dec
lds
sarb
and
jae
jne
xchg
in
cltd
jns
je
push
inc
es
ret
pop
and
in
in
mov
mov
cmp
lcall
mov
sub
mov
inc
aam
jnp
sub
je
lds
aam
jae
popa
in
add
lahf
test
call
xchg
push
scas
pop
jmp
mov
pop
xor
sbb
push
mov
addb
and
inc
pop
cmpsb
scas
bound
js
jecxz
mov
imul
out
sub
push
stos
repz
add
sahf
sbb
clc
sbb
sahf
push
and
dec
mov
in
add
es
pminub
adc
xchg
dec
addb
out
icebp
loopne
mov
add
cld
jnp,pt
push
mov
sub
stos
xor
jge
fstl
js
addb
push
adc
inc
mov
mov
shrl
add
mov
fs
aam
cmc
jmp
inc
mov
push
cli
aas
add
xor
inc
leave
jg
gs
enter
mov
inc
sub
adc
aaa
mov
clc
mov
sub
fisubrl
test
aas
mov
xchg
outsl
push
int
imul
les
movsl
data16
pop
or
int3
subb
leave
outsl
inc
loop
outsl
in
les
loop
or
mov
mov
mov
jecxz
pop
in
data16
jge
jae
aaa
mov
xor
scas
and
sti
movsl
ret
mov
ret
in
mov
mov
add
xchg
jmp
xchg
xor
jns
roll
inc
pusha
aad
adc
dec
jae
pop
push
dec
xchg
sbbl
or
adc
lea
enter
jno
xor
push
push
cmc
je
xchg
enter
sbb
inc
out
xchg
enter
aam
scas
test
repz
stc
jmp
jo
ret
and
int3
mov
test
cmp
push
stos
fcmove
mov
inc
aas
sbb
repnz
hlt
mov
push
push
dec
stos
cmpsl
xor
cmp
orb
mov
lods
loopne
sub
push
xor
sbb
insl
mov
jecxz
mov
ret
cltd
mov
push
fdivs
push
notl
xchg
pop
lods
jbe
and
imul
jle
cwtl
jne
pop
cltd
fiaddl
jge
lods
push
orb
dec
aam
jmp
mov
or
mov
lds
sahf
sub
xchg
clc
fiadds
test
je
dec
cmp
mov
imul
add
imul
sub
test
cld
in
inc
cld
mov
pusha
xchg
sbb
mov
shll
or
popa
pop
jge
aam
ss
sbb
jb
cmp
inc
add
sub
xchg
je
push
lds
rcl
dec
sbb
les
dec
add
cs
enter
cmp
mov
push
xchg
cmp
mov
ljmp
repnz
lods
push
in
icebp
cmp
pop
cwtl
popf
imul
pop
int3
and
lds
inc
popa
test
in
clc
xchg
aam
aas
popf
or
stc
ja
jg
movsb
divl
out
aam
pop
imul
pop
jno
iret
sub
sbb
aas
bound
arpl
add
addr16
push
repnz
add
ds
mov
fwait
sub
xlat
and
inc
cmpsl
rolb
xchg
mov
fiaddl
lahf
nop
mov
or
ds
xor
pop
aad
addr16
lahf
shlb
inc
add
add
int3
std
xchg
lds
adc
dec
fiaddl
stos
push
push
xor
pop
sbbl
ror
sti
imul
xchg
adc
je
jl
popf
jge
jecxz
shll
push
popa
push
andl
mov
add
inc
push
mov
xchg
data16
mov
ret
int
dec
xchg
inc
mov
in
es
in
push
inc
cmp
cltd
arpl
nop
popf
shlb
add
sub
mov
xchg
rcr
mov
movsb
into
mov
push
sti
push
pop
rcll
aam
je
jo
lods
cmc
jns
ja
dec
dec
fisubrs
es
shr
and
or
inc
jnp
and
pop
outsb
xchg
hlt
stos
xchg
ja
cmp
int
pop
js
cmp
dec
lods
ja
mov
add
mov
repz
xor
jle
int3
jp
imul
cmpsb
sbb
xor
test
lret
sti
cmpsl
fadd
lods
sar
jle
xor
pusha
pop
loopne
mov
sbb
jno
ja
and
mov
push
imul
stos
hlt
jns
mov
push
cld
inc
daa
cmp
in
inc
loope,pn
mov
lods
mov
push
dec
xchg
pop
lahf
and
push
cmpsl
out
jle
adc
ja
out
fnstenv
sbb
mov
mov
add
fiadds
je
xchg
or
jne
mov
sbbb
or
popf
js
jns
push
insl
push
or
idivb
dec
mov
icebp
sbb
das
sub
mov
push
xchg
cli
dec
xchg
sub
sahf
aam
dec
scas
mov
cmp
shll
xor
outsb
aam
xor
movsb
adc
pop
add
mov
call
mov
mov
or
pop
and
repz
aam
sbb
sbb
pop
cmp
mov
push
fisttps
inc
dec
fldt
fsubs
rorl
lods
mov
add
cmp
shll
xchg
or
ret
xor
insl
mov
adc
sbbb
mov
lods
sub
inc
xchg
shlb
mov
jo
cmp
dec
adc
cld
mov
and
cmc
test
jbe
insb
mov
mov
or
sub
mov
cmc
jmp
mov
push
xchg
imul
xchg
mov
ret
mov
xor
orb
sahf
aaa
adc
cmp
int3
xchg
daa
nop
dec
dec
cmpsl
sub
jns
push
in
xchg
pop
loope
shll
mov
or
andb
std
or
shrl
sbb
out
out
xlat
push
adc
loop
lock
sub
aam
insl
mov
inc
mov
pop
adc
pop
int3
cmpl
loope
pop
dec
sub
cmpsb
lcall
into
adc
push
pop
stc
add
cmp
xor
shlb
push
dec
inc
clc
outsl
js
mov
xlat
daa
adcl
or
scas
mov
pop
popf
pushf
out
sbb
sub
js
enter
push
fists
jno
and
adc
pop
divb
cmp
mov
pop
int3
lods
mov
sbb
int3
subl
xor
cmp
mov
out
mov
mov
in
jecxz
jne
movsb
xchg
and
addl
lea
push
xchg
sub
sbb
icebp
mov
sarb
add
or
jb
gs
dec
xchg
add
pop
div
and
mov
insb
aaa
mov
fcomps
out
push
pop
lock
add
fmull
pop
dec
fcomps
sub
aam
jns
outsb
mov
jae
fdiv
lock
pop
outsb
mov
mov
cmpsl
add
fisttpl
imul
push
cmpsl
inc
lret
mov
jmp
mov
push
sub
pop
or
lea
jle
sub
mov
scas
in
repz
mov
enter
jae
repz
xchg
fiadds
cmp
adc
jbe
xchg
mov
and
popa
push
push
icebp
shl
in
push
mov
in
aas
xchg
mov
inc
outsl
scas
cmp
loope
icebp
dec
pop
loopne
push
jecxz
or
mov
sub
dec
and
mov
fcmovnbe
adcb
out
jl
cmc
fdivrs
mov
cs
inc
jl
adc
rorb
push
or
fs
pop
fisttps
cmpsb
sarl
clc
ss
test
into
push
rcll
push
jp
push
pusha
rcrb
pushf
leave
xchg
inc
mov
xchg
jbe
or
pop
mov
sbb
jns
jge
mov
rolb
jne
jle
addr16
cmpsl
icebp
sbb
lret
lock
cmp
mov
ljmp
fisubrl
and
add
lea
push
or
int3
inc
mov
imul
add
scas
push
les
faddp
jl
orl
out
pop
or
cmpsb
mov
cmp
neg
xchg
xor
addr16
or
dec
movsl
jb
cld
add
adc
fwait
sahf
adc
enter
insl
inc
mov
lods
and
shrb
cltd
inc
addl
xor
pop
sbb
jl
enter
cmpsl
cmp
push
movsb
int
sbb
xor
stos
xchg
sbb
addr16
mov
inc
repnz
lcall
adc
frstor
inc
ret
push
dec
jno
lea
andl
das
nop
xorl
sub
fistpl
call
je
jbe
iret
sub
shlb
sbb
cmp
call
inc
push
xor
mov
sub
lods
lret
mov
mov
aas
sub
mov
push
stc
cmp
xor
dec
ficomps
lret
jmp
or
xor
test
repnz
push
jno
push
jl
jl
test
in
inc
insb
add
test
nop
dec
mov
ja
leave
mov
test
jle
xor
fidivl
lret
dec
cltd
jne
xchg
pushf
fsubrs
push
or
cmp
outsb
jb
decb
sub
xor
add
fwait
adc
scas
cmpsl
ljmp
add
gs
push
negb
in
mov
icebp
ja
scas
out
test
lahf
maskmovq
testl
mov
rclb
push
cmp
inc
sbb
rcrb
je
fcoms
and
inc
and
ret
mov
jno
jbe
push
add
jb
pop
inc
xor
jno
xorl
loope
ljmp
cmc
gs
cmp
cs
inc
fsubr
or
nop
insb
in
push
xor
xchg
xor
push
dec
enter
cld
mov
xorl
movsl
push
fcmovnu
shlb
mov
rorb
cmp
aaa
lods
je
into
call
fmulp
in
xor
push
pop
aas
fdivl
mov
fdivrp
lds
fdivs
mov
shlb
sub
lcall
and
testb
xchg
int
xor
daa
cmp
sti
cmpsl
inc
rclb
movsl
and
int3
and
add
mov
lahf
lods
sbb
andb
imul
dec
scas
test
or
popf
sub
and
mov
jne
gs
jo
push
xchg
js
sbb
xor
mov
popf
mov
mov
inc
popa
outsb
rolb
inc
pushf
stos
lahf
inc
mov
fdivl
scas
fs
ss
push
lret
xchg
push
pop
out
push
cwtl
nop
jb
and
or
or
js
mov
mov
xchg
rcrl
push
cmp
outsb
adc
push
ficoms
inc
shl
push
dec
push
mov
mov
fcoml
cld
fdivr
xchg
mov
inc
dec
mov
sub
out
test
hlt
loopne
ret
cmp
or
mov
adc
sub
and
hlt
xchg
les
cld
and
movsl
pop
insb
mov
in
inc
ret
jo
in
add
xchg
dec
loope
loope
int3
cmpsl
stos
in
mov
fwait
sbb
test
cs
xchg
xchg
into
inc
test
push
push
ja
nop
rclb
call
mov
xchg
mov
cmp
xlat
cmp
or
movsl
out
mov
sbb
cli
sarb
decb
jb
iret
sbb
adc
mov
out
sub
shrb
or
sbb
lea
scas
mov
push
fdivs
dec
mov
and
mov
repz
ja
xchg
out
loopne
popf
gs
xlat
cmp
add
jle
lods
jmp
dec
movsl
jbe
dec
bound
mov
and
lds
outsb
dec
or
fsubs
ja
xchg
es
pop
add
and
cmovne
push
cli
and
or
jecxz
notl
mov
add
or
out
mov
pop
aas
test
xchg
pop
xorb
pusha
mov
push
mov
ds
test
mov
push
pop
and
cmp
sbb
out
jecxz
lahf
adc
mov
jb
negb
orl
loope
negl
jecxz
insb
push
cli
xor
rorb
insb
call
push
inc
mov
xchg
inc
outsl
mov
inc
sub
adc
xchg
call
popa
loopne
xor
cmp
or
add
loope
aam
mov
mov
push
insb
xor
xchg
pop
mov
daa
sbb
xchg
cli
mov
sar
add
mov
aaa
lret
inc
and
es
pushf
sbb
jo
or
pop
pop
lahf
dec
and
mov
xchg
fidivrs
and
daa
movsb
mov
jecxz
mov
ja
imul
loopne
mov
icebp
dec
sbb
mull
or
jg
in
roll
lret
popa
pop
insb
cmp
pop
nop
fcomi
shl
ret
jbe
loope
sub
cmpsl
pop
mov
cmc
ljmp
loopne
test
mov
sub
nopl
push
xlat
lea
lods
loopne
jmp
dec
cmp
xlat
int3
push
gs
adc
cmc
aam
mov
imul
jns
data16
adc
push
mov
rcl
pop
repnz
jnp
adc
inc
out
subl
jbe
sub
sahf
inc
into
mov
iret
adc
outsb
je
inc
jmp
lea
adc
test
sar
loop
sarl
and
test
cmp
ss
or
outsl
out
mov
ret
test
in
adc
and
sub
out
sub
jg
mov
dec
cltd
add
xor
mov
sbb
out
test
imul
movsl
or
or
ljmp
ss
mov
lock
je
icebp
stc
mov
sbb
jnp
add
out
jne
jne
repz
fwait
push
loope
xchg
decl
cltd
sbb
jno
push
jne
clc
add
dec
pop
les
in
je
shrl
push
or
jb
iret
xchg
jbe
addb
in
jno
dec
push
sub
fists
xchg
lret
or
and
or
mov
aas
dec
jno
or
into
lock
fisttpll
inc
cmp
jne
add
and
pushf
in
xor
push
aaa
mov
adc
jno
mov
ljmp
fcmovu
and
insb
sbb
pop
cmp
inc
or
in
mov
loop
pushf
mov
popa
jg
and
or
sbb
sbb
les
push
jae
add
mov
sbb
sbb
cmp
xor
pop
stos
push
mov
push
dec
hlt
fcoms
out
xchg
xchg
adc
pop
push
inc
or
or
sbb
test
pop
push
add
inc
stc
dec
leave
dec
sarl
es
pop
pop
cmp
add
xchg
cmp
pop
arpl
pop
in
sbbb
inc
inc
pusha
in
cmp
pop
aas
pop
mov
pop
push
push
in
push
and
pop
mov
arpl
addb
add
ja
mov
lahf
push
lea
pop
jno
mov
loopne
out
dec
xorl
ljmp
mov
test
js
mov
in
mov
repz
dec
mov
add
jl
sub
inc
pop
leave
pop
sub
cvttps2pi
xor
add
arpl
ret
inc
stos
lret
aas
sbb
push
leave
xchg
ss
flds
andb
inc
js
aam
adc
inc
lcall
jns
clc
outsl
cmpsl
or
sub
repnz
mov
or
pop
cwtl
or
movsb
cmpb
iret
test
out
push
stos
jecxz
adc
jmp
push
inc
movsb
adc
mov
mov
lock
ret
inc
loope
pop
cmp
mov
aad
repnz
jg
adc
push
shlb
negb
lret
outsl
jg
jecxz
push
push
add
sub
scas
call
jbe
icebp
dec
mov
jmp
xchg
out
sub
fmuls
push
dec
aaa
dec
jb
xchg
xchg
dec
jg
sbb
sub
ret
dec
add
test
lods
mov
dec
icebp
push
popf
fnstcw
test
cmp
or
pop
or
xlat
int
sbb
mov
out
jecxz
fnsave
in
scas
sub
jbe
xchg
addb
leave
jns
mov
mov
test
lret
sbb
jg
fiadds
xchg
pop
add
push
jl
hlt
pop
push
mov
ror
lods
cmpsl
rclb
adc
sbb
lds
int3
push
inc
sbb
inc
test
stos
imul
xorl
scas
xchg
sub
push
sbb
push
or
add
dec
cmp
inc
enter
xlat
in
mov
jo
cli
mov
mov
sbb
je
xor
loopne
test
mov
mov
jns
push
xchg
in
lahf
inc
ljmp
repz
fwait
scas
inc
scas
cmp
pop
and
jl
movsb
fildll
cmp
std
and
mov
cmpsb
lods
iret
xor
lret
pusha
into
mov
nop
enter
scas
enter
pop
mov
jae
xchg
dec
call
in
dec
cmpsb
pop
cld
xchg
into
aas
or
mov
sbb
mov
jns
loope
and
loopne
pushf
das
scas
cmpsb
mov
mov
mov
xor
sbb
sti
xor
adc
lods
in
mov
dec
xor
fistpll
or
icebp
sub
inc
fs
lock
mov
cmp
dec
add
xchg
outsb
mull
loop
push
outsb
movsl
iret
das
sub
std
cs
mov
xor
pop
in
iret
adc
add
and
aad
jmp
fsubrs
push
mov
sub
pop
pop
jmp
xchg
mov
mov
push
clc
dec
in
test
movb
int
sbb
out
hlt
neg
test
cwtl
mov
mov
jns
lds
mov
xchg
lret
mov
repnz
lret
js
gs
jnp
jo
cmp
mov
fs
hlt
and
popa
dec
and
jno
inc
lret
shl
push
lret
adc
sbb
stc
mov
xchg
adc
aas
sub
mov
mov
and
inc
fnsave
jb
in
inc
or
push
lret
and
adc
cmc
outsl
test
push
repz
cmp
or
push
aam
sbb
movl
leave
fs
push
pop
mov
test
dec
or
sbb
int3
push
frstor
and
andb
sub
and
cmp
sbb
dec
mov
jge
mov
mov
pop
call
movsb
jmp
std
jne
testl
sti
sbb
sbb
xor
movsb
sti
adc
test
clc
push
sbb
movsl
adc
addb
push
or
adc
cmc
pop
int3
adcb
arpl
loop
pop
push
pop
or
jnp
mov
dec
std
jge
ds
fcmovnu
ss
sub
push
scas
sub
outsb
inc
cltd
ret
cld
or
addr16
iret
arpl
into
jecxz
cli
add
or
and
or
or
outsl
stos
test
push
and
loope
dec
xchg
out
jmp
adc
jnp
notb
and
jg
add
inc
dec
cli
arpl
push
sti
push
push
iret
jmp
dec
xchg
xchg
rcll
xchg
nop
fcompl
lahf
jno
imul
aad
jge
aad
cmpsb
push
cmp
sub
adc
cmc
mov
and
test
push
in
mov
sbb
or
bound
adc
daa
test
inc
rcr
sbb
movsl
jp
movsl
lcall
nop
sbbb
popa
aad
fs
and
stc
mov
mov
dec
jae
orl
insl
xor
add
ljmp
fucomi
adc
add
jbe
cmpsl
pusha
cmpl
sbb
add
fstl
pop
pop
addr16
add
xlat
push
adc
dec
jne
inc
add
sub
lds
stos
jns
add
sti
into
pop
aad
arpl
incl
dec
xchg
xor
sbb
mov
shlb
scas
in
scas
cmp
js
int3
in
pop
dec
cmpsl
ror
pop
aas
into
inc
imul
mov
addr16
test
cmp
inc
icebp
xor
ljmp
rol
sbb
jmp
xchg
cmp
imul
pop
adc
jne
xchg
jno
vpaddsw
out
mov
xor
ficoms
dec
mov
leave
push
mov
inc
adc
insb
lock
jg
mov
or
push
mull
cs
divl
fs
orw
sahf
mov
xor
sub
dec
arpl
andl
push
mov
inc
repz
inc
adc
data16
out
inc
fidivrs
movsl
xor
adc
enter
mov
add
mov
imul
or
add
dec
adc
cmp
leave
push
f2xm1
add
xchg
pusha
mov
pop
lahf
loope
mov
push
push
dec
mov
pusha
push
fs
bound
pop
es
mov
sub
loopne
sub
pop
ja
ret
es
sub
dec
aas
aad
sbb
cmp
sub
rcr
fsincos
lea
push
clc
jns
repz
fcompl
sbb
negb
push
or
adc
cwtl
fs
mov
clc
xchg
vmovaps
inc
add
jb
pop
pop
test
adc
xchg
xchg
push
lahf
jo
xor
ja
push
xchg
pop
pop
scas
adc
int3
orb
fisubs
int
adc
jno
mov
pop
shrb
push
into
jge
ficompl
push
mov
imull
mov
outsb
xchg
fistpl
push
lea
cld
and
negl
in
fnsave
pop
es
jecxz
enter
cmp
push
imulb
dec
nop
mov
nop
pop
out
mov
add
and
lret
leave
or
dec
xor
dec
mov
cmp
cmp
or
lock
test
xor
dec
sbb
outsl
call
mov
dec
cwtl
xchg
sub
xchg
fistps
mov
xchg
fistpll
lret
js
popf
ret
and
dec
xor
xchg
lret
cs
mov
mov
iret
push
loope
test
mov
xor
jo
inc
mov
jp
jle
shrb
or
pop
sarb
push
mov
lahf
shrb
jno
mov
test
pop
fnsave
jae
arpl
push
in
xchg
mov
xchg
cmp
addl
fsubrs
idivl
subl
jnp
cld
outsl
loopne
mov
call
cmc
jmp
pop
cmp
cmp
push
cmpsb
jmp
imul
sbb
fiadds
aas
jle
mov
stos
jmp
mov
stc
inc
sub
fstl
bound
mov
cltd
pushf
daa
jne
ret
xor
popf
pop
lret
aam
or
lods
sti
out
call
cmp
sbb
shrb
jns
lods
xchg
imul
in
xor
add
add
dec
int
dec
mov
arpl
xchg
adc
push
add
leave
leave
in
iret
or
pop
imul
mov
mov
and
pop
fimuls
inc
mov
lods
add
cmp
dec
xchg
cmp
out
clc
dec
pop
jb
or
cwtl
test
sarb
push
pop
iret
fistpll
mov
mov
xchg
mov
xor
mov
push
fildl
push
stc
mov
dec
fsubs
imul
cs
mov
inc
dec
hlt
sbb
fimuls
adcl
imul
js
jae
sub
cmp
and
aaa
mov
sbb
mov
shrb
lret
push
mov
into
inc
mov
sub
outsl
xchg
repnz
js
sar
push
and
xchg
lods
into
or
out
xchg
js
jmp
lret
xchg
cmc
xchg
mov
push
xchg
out
pop
out
fwait
inc
mov
push
cmp
inc
mov
leave
inc
sbb
cmp
push
div
mov
jge
data16
inc
sub
sub
push
add
cmp
push
movsb
jne
mov
jo
scas
js
jo
out
int3
cmp
mov
push
xor
stos
ljmp
daa
push
cmp
cltd
repz
or
orb
xchg
mov
xor
pop
jge
cmp
repnz
cmp
sub
inc
pop
insb
mov
repz
ljmp
test
aas
adc
xlat
hlt
jmp
sbb
inc
leave
pop
orl
into
cli
push
fisttpl
cs
call
ret
cld
shrb
pop
pop
out
sub
shlb
and
divb
pop
out
loope
push
pop
mov
jo
fdivrs
sbb
pop
mov
vaddsubpd
xor
inc
push
lock
mov
push
inc
xor
out
sub
aas
mov
and
or
adc
xlat
xor
xor
or
mov
inc
xchg
scas
jle
mov
test
mov
lret
xchg
add
push
adc
pop
aad
sbb
outsl
cmp
daa
loopne
pushf
sbb
or
dec
in
gs
fists
in
cltd
repz
mov
mov
cmp
jae
out
repnz
adc
or
sub
mov
lock
mov
mov
jne
stos
leave
xchg
icebp
jle
jmp
mov
lods
inc
data16
leave
push
mov
repz
aad
xchg
xor
movl
xchg
int3
mov
jb
ds
jne
mov
outsl
add
inc
fstps
mov
fdivrl
fildll
rorl
dec
mov
and
add
inc
cwtl
insl
sub
inc
add
aaa
push
xchg
insb
and
jb
and
repz
shl
sbb
adc
stc
mov
mov
out
adc
xchg
cmp
jb
das
pushf
ret
mov
dec
js
cmp
fisubrs
inc
and
mov
xchg
or
popf
xor
push
es
and
cmpsb
mov
jne
dec
add
push
push
jns
cmp
push
and
dec
xlat
aad
inc
cmp
jbe
pop
movsl
and
cmp
xor
hlt
cmp
mov
lcall
loope
addb
cmp
push
sar
dec
cmp
in
je
fists
je
roll
lds
sub
mov
cli
pushf
je
push
jecxz
lds
mov
lds
arpl
notl
ret
movsb
mov
and
dec
dec
add
dec
adc
cld
push
sub
stc
push
sub
fsubrl
inc
add
insb
dec
daa
and
aam
roll
js
popa
xor
or
dec
dec
fwait
dec
push
cmp
jbe
insl
sub
sub
lcall
or
fs
sahf
and
fsubs
xchg
bound
lahf
movl
push
gs
push
mov
adc
xor
shlb
or
icebp
gs
jbe
adcl
int
pop
loopne
push
lcall
sub
or
fildl
pop
xchg
insb
in
mov
test
push
adc
dec
rcrl
push
std
fwait
or
rcrl
mov
aad
push
dec
mov
push
cs
sbb
shlb
push
std
sub
push
xchg
pop
insb
insb
jno
andb
mov
sbb
pop
sub
insl
mov
dec
mov
dec
lods
out
pop
cltd
outsl
ret
xchg
mov
lret
movsl
mov
stos
jmp
cli
mov
sub
mov
cmpsl
mov
push
mov
push
pop
adc
nop
ltr
in
movsl
scas
inc
je
push
hlt
mov
adc
repz
sbb
mov
pop
repnz
mov
rclb
pusha
sbb
dec
bound
jmp
xor
mov
add
mov
xor
ficomps
push
cwtl
dec
add
dec
jmp
mov
aam
cmp
test
in
fidivl
stos
dec
rclb
pop
outsb
sahf
pop
out
sbb
or
xor
and
inc
mov
js
push
cmp
pop
in
jle
xchg
addr16
test
stos
clc
test
enter
enter
jnp
push
gs
push
cld
shlb
jl
stos
pop
insl
xchg
pop
push
sub
mov
push
push
xchg
add
or
daa
cmp
cmp
cli
inc
cli
enter
aad
std
sbb
loope
lcall
push
push
sub
insl
ss
xchg
inc
xchg
ffree
das
pusha
adc
cmpsl
mov
push
sbbb
ljmp
sahf
cmp
sahf
popa
mov
fwait
out
jge
cwtl
jecxz
mov
es
or
or
jbe
mov
je
clc
lock
into
push
sub
test
sbb
out
inc
jnp
sbbb
aam
dec
sahf
std
out
js
pop
xchg
mov
pop
or
repz
aas
hlt
lds
out
sbb
mov
cmp
pop
inc
mov
jmp
fcoml
dec
push
add
and
adc
pop
pop
cmp
test
add
add
or
or
les
addr16
arpl
jb
or
imul
adc
pop
dec
push
xchg
cld
cmp
or
fiaddl
sbb
xor
jnp
ret
jns
in
jae
jns
xchg
daa
mov
xlat
jge
jmp
lahf
dec
dec
push
in
push
lahf
daa
repz
mov
insl
movsl
or
pop
jp
push
pop
inc
adc
push
inc
lret
add
vsubsd
pop
jne
or
mov
in
test
push
adc
fsubl
mov
add
leave
mov
mov
push
xchg
fistps
arpl
fdivs
lret
jo
push
push
fisttpll
sarb
adc
push
xchg
jae
pop
jmp
and
repz
aaa
mov
cmp
rorb
neg
lret
adc
add
std
push
movsb
pusha
loop
mov
das
insb
lods
in
xchg
bound
jnp
lret
cmpsb
imul
mov
adc
mov
cmp
aaa
adc
es
adc
fmul
lds
jge
in
icebp
push
jg
pop
fnsave
or
xchg
int
stos
jg
test
xchg
int
fldl
and
jmp
loop
push
and
or
scas
mov
pushf
mov
lret
hlt
addr16
lds
and
loope
jno
sbb
aaa
or
jo
sbb
lret
movsb
pop
jae
enter
test
cmc
mov
xchg
mov
xor
adc
xor
mov
inc
adc
adc
std
add
jl
xchg
mov
mov
jbe
mov
xor
xchg
pusha
mov
jmp
pop
xchg
cmp
lcall
shrl
movsl
test
xor
mov
inc
daa
fs
and
daa
push
cs
or
cmc
or
push
mov
or
fucomi
rolb
mov
jnp
movsl
mov
pop
push
mov
les
or
fldt
jno
mov
imul
std
fmul
jb
leave
dec
inc
xchg
out
je
push
mov
mov
ljmp
cs
ret
mov
sbb
ds
or
bndldx
mov
insb
fisttpl
adc
mulb
pop
add
mov
xchg
inc
or
pop
ret
jecxz
movsl
push
negl
xor
push
sub
ficompl
mov
adc
mov
xor
pop
lret
aad
push
push
and
add
mov
imul
lcall
pop
dec
cmpsb
mov
xchg
add
les
xor
push
pop
loope
push
subb
push
cmpsl
pop
dec
in
stc
push
mov
movl
js
pushf
shlb
jle
push
fnstcw
and
push
sub
push
enter
adc
cwtl
cltd
filds
lret
xchg
jmp
sahf
mov
in
cmp
xchg
sub
xchg
adc
in
pop
jo
dec
pop
orl
das
int3
ja
xchg
test
cmp
cmp
test
adc
cs
add
xchg
pop
dec
fdiv
lods
jg
out
movsl
out
sub
loope
test
fcomps
pop
cwtl
orb
add
bound
dec
mov
inc
xor
push
dec
mov
push
pop
push
neg
and
cld
sub
push
int
mov
mov
call
test
push
jg
cli
imul
xchg
cmp
jmp
mov
shrl
push
cmp
inc
lret
cmp
sbb
jo
lret
popa
sub
jl
ljmp
mov
pop
add
adc
testl
movsl
add
mov
jle
mov
mov
faddp
cmp
lock
jmp
rolb
and
jl
adc
xlat
mov
call
sti
fbld
pushf
loop
cmpb
sbb
js
add
movsb
lods
out
rclb
lret
add
dec
fstps
rorb
js
jg
nop
cwtl
sbb
lret
mov
pop
mov
mov
imul
sub
fs
jns
into
cltd
in
ror
pop
inc
cmp
fadds
lock
repnz
pop
stc
or
xchg
mov
sbb
int
rcl
pop
scas
sbb
xlat
mov
insl
jns
push
into
cmc
insb
xchg
mov
outsl
loope
push
arpl
inc
out
xlat
popf
inc
popf
pop
loope
sbb
out
pop
mov
inc
cwtl
ds
test
jmp
test
fidivs
mov
and
daa
mov
ret
cmpsb
dec
mov
xor
mov
inc
scas
xchg
pop
int3
xor
das
add
jns
pop
mov
mov
jo
ss
mov
faddl
cmpsl
mov
lret
push
inc
mov
sub
sub
mov
fstl
mov
shrb
fstps
das
movl
fwait
mov
cmp
adc
lret
or
cmp
add
fs
lret
aad
xchg
mov
insl
push
or
leave
dec
popa
leave
jb
insb
mov
mov
mov
jge
ret
mov
dec
ss
jbe
jo
push
imul
stc
xchg
aad
adc
jecxz
das
add
pushl
popa
loopne
es
pop
mov
xor
inc
enter
call
outsl
or
inc
inc
sbb
xchg
std
sub
mov
jle
adc
iret
adc
sub
inc
pop
push
sarb
loopne
jb
es
lcall
lcall
jge
in
cmpsl
inc
scas
push
popa
test
xchg
mov
pop
shrb
ja
loop
xlat
fwait
ret
inc
popa
hlt
pop
std
mov
mov
int3
mov
pop
xor
lock
pop
pop
aas
xchg
mov
fs
mov
adc
xor
dec
xchg
push
inc
cmp
dec
sbb
ret
xchg
xchg
in
cmp
pop
shr
jmp
dec
push
pcmpgtb
sub
fwait
repz
loop
jg
cmp
pop
clc
divl
movsb
ja
add
xchg
cwtl
xor
push
mov
xchg
mov
inc
sub
xor
jmp
pop
cld
mov
inc
inc
out
movsb
push
je
xor
pop
jne
pop
loop
mov
push
xor
add
pop
aam
jp
dec
cltd
push
mov
push
jae
and
int
movsb
xchg
jae
dec
bound
dec
enter
pop
xor
clc
loop
jle
aad
adc
mov
ljmp
pop
icebp
iret
pop
lds
mov
mov
stos
rclb
cmpsb
mov
stos
adc
pop
stc
stos
mov
mov
inc
insb
rcr
ret
addr16
lret
jo
pop
inc
das
imul
inc
ret
dec
mov
mov
or
jg
mov
xor
into
arpl
jge
push
mov
jge
and
mov
lea
addr16
gs
adcl
out
fsubl
aam
mov
push
cltd
sub
xchg
rclb
jb
cld
mov
stos
add
or
jl
push
enter
push
push
ljmp
pand
es
sti
in
jl
daa
pop
cwtl
bound
ret
es
loop
dec
rcrl
dec
daa
xlat
cs
inc
jnp
loope
sahf
push
sbb
stc
mov
jp
add
lret
icebp
imul
xorb
pop
cli
inc
jno
mov
lcall
jmp
mulb
pop
pextrw
sbb
int3
dec
dec
int
fimuls
shrb
lds
scas
int
test
outsb
cmp
xchg
shlb
fbld
stos
sub
jecxz
fldcw
mov
mov
inc
in
nop
pop
mov
sub
xchg
lcall
stc
loope
pop
sahf
inc
jp
mov
adcl
pop
ja
or
out
mov
push
mov
imul
imul
jmp
pop
inc
stos
adc
aas
repnz
out
sbb
mov
mov
xor
movsb
icebp
pusha
push
inc
inc
fs
or
inc
cwtl
sar
push
adc
mov
in
stc
pop
push
xchg
xor
jmp
xchg
jne
push
and
push
lods
jb
mov
ret
inc
jb
mov
lds
push
or
and
lret
lds
ss
test
xchg
out
popf
lock
addl
jns
fstpl
mov
mov
pop
xchg
shlb
or
add
out
add
jp
dec
ret
adc
inc
jne
and
mov
lea
gs
std
cwtl
stc
dec
dec
mov
xlat
push
xchg
inc
test
in
sbb
in
mov
inc
scas
aam
lea
fildll
scas
mov
push
cld
jecxz
test
xchg
mov
sub
bound
add
jns
out
xor
xor
lds
fisubrs
adc
inc
push
cmp
add
fwait
ja
jo
jp
out
cli
pop
inc
pop
adcl
xchg
repz
add
sbb
jecxz
stc
mov
test
pop
push
inc
adc
lods
dec
in
lods
mov
sbb
int
pop
xor
mov
into
enter
arpl
xor
mov
jb
inc
repnz
sub
xchg
inc
jne
adc
sub
inc
in
adc
mov
and
cmp
lret
clc
dec
and
sub
xchg
push
popf
leave
xlat
adc
jecxz
roll
outsl
movsb
dec
lock
fsave
push
mov
insb
add
and
dec
jg
and
or
leave
addr16
cld
xorb
insb
xlat
pushf
sub
ret
add
sahf
xlat
insl
dec
andb
les
pop
cmp
call
and
pop
inc
inc
mov
pop
sbb
adc
jbe
imul
lods
add
ss
cmp
jb
xchg
imul
jns
mov
clc
and
cmpsb
jle
movsl
sti
mov
add
and
aam
cld
insb
mov
fabs
cs
gs
sbb
mov
inc
xchg
lret
ret
rolb
in
jbe
mov
out
out
ficompl
out
adc
ja
cmp
addr16
mov
js
push
mov
cmp
inc
stc
cli
test
out
pusha
outsl
and
fldcw
mov
rorb
lcall
mov
push
adc
adc
into
insl
dec
pop
sbb
cli
not
subw
shlb
adc
jp
insl
test
inc
jo
push
push
sbb
pop
ljmp
mov
jae
cmp
sub
frstor
mov
movsb
pop
addl
ss
repz
jmp
ds
inc
mov
lock
inc
pop
out
sbb
popf
inc
xchg
sub
and
lahf
cs
cmp
outsl
inc
gs
movsb
mov
fimuls
fimull
out
mov
push
sub
xorb
loope
ljmp
adc
repnz
cmpl
sti
cmp
mov
outsl
inc
inc
sub
adc
jp
mov
dec
push
notl
inc
mov
sub
push
jge
les
and
push
in
xor
aaa
jo
inc
or
mov
mov
inc
bound
push
mov
sub
dec
orb
cmp
and
push
mov
sub
leave
xchg
cmp
cwtl
in
shlb
jmp
test
negl
dec
cmp
xor
cmc
mov
sti
ds
sbb
fiaddl
jno
shl
mov
push
adc
mov
xchg
aaa
adc
sahf
fildl
sbb
pop
mov
das
cld
xchg
cwtl
xor
and
jae
xchg
outsb
shll
aaa
mov
lahf
in
in
lea
sarb
push
cli
in
aas
cmpb
jne
repnz
lods
mov
addb
xchg
cs
and
leave
fnstenv
filds
daa
clc
mov
ss
inc
imul
push
jnp
inc
push
clc
rcrb
or
mov
xor
ja
js
and
stc
mov
loope
or
xor
movaps
add
incl
test
outsl
out
push
add
cmc
jmp
jg
in
push
scas
xchg
jecxz
test
or
mov
mov
mov
movsl
jbe
cmp
test
scas
ljmp
das
movsb
cmp
popa
xchg
cmp
jae
test
orl
mov
shll
sub
fadds
pop
mov
testb
mov
xlat
ret
lods
lcall
imul
cmp
pop
mov
sarl
stos
jle
cmpsb
mov
push
or
add
std
lret
cmc
popf
jno
shll
xchg
xchg
mov
push
dec
rorl
cld
mov
std
sbb
mov
mov
xchg
lret
rclb
cld
aad
test
in
jns
or
pop
mov
and
xchg
outsb
fstp
lods
xchg
push
pop
loop
lea
arpl
repnz
pop
ljmp
in
jae
push
cld
sub
lret
loopne
adc
mov
int3
stos
add
or
pop
xchg
adc
sub
les
pop
dec
cwtl
jmp
cld
gs
leave
cmc
jmp
call
or
js
in
jle
sub
cmpsb
hlt
xchg
sbb
xchg
mov
xchg
xor
movb
fwait
hlt
pushf
test
fcoml
lds
xchg
or
ret
fidivrl
push
and
push
xchg
mov
jns
movsb
in
xchg
psllq
out
out
adc
push
int3
xor
and
cmp
push
fs
fwait
loope
daa
fdivs
ud1
xor
mov
dec
inc
dec
dec
mov
mov
out
xor
adc
call
js
pop
mov
and
cmp
ljmp
cmp
push
dec
and
sbb
rorb
xchg
add
aad
lock
ret
out
and
arpl
jg
cmp
dec
push
dec
lcall
cs
aas
ljmp
cwtl
add
repnz
mov
xchg
mov
scas
xor
into
adc
or
adc
dec
or
cmp
pop
sub
cwtl
push
adc
repz
scas
icebp
in
pop
frstor
pop
ds
pushl
mov
cmp
bound
or
fsubrl
mov
mov
das
pushf
icebp
sub
std
popa
mov
xchg
and
aam
mov
daa
mov
fldl2e
js
cld
jae
ret
lcall
sbb
ret
filds
outsb
jns
aas
push
dec
inc
sub
inc
jg
movl
xchg
hlt
cmc
popf
in
int3
aas
leave
mov
dec
jb
mov
adc
and
ret
fldl
inc
fistps
push
mov
dec
pop
ja
or
dec
dec
jl
pop
xchg
movsl
dec
xchg
xor
cmc
ds
test
stos
jbe
xchg
adc
loopne
add
ret
jns
shll
dec
cs
mov
arpl
jne
ljmp
scas
out
movsl
inc
sbb
cmp
pop
cli
lcall
test
xchg
dec
mov
pop
cld
sub
iret
pop
test
sub
rol
inc
jmp
push
push
adc
ss
sub
clc
inc
fisubl
add
in
mov
add
mov
movsb
xchg
and
cmp
out
fisttps
lock
out
xchg
mov
xchg
shrb
in
fldcw
push
xor
js
mov
jge
inc
leave
rep
call
jo
push
push
insb
shrb
cwtl
popa
js
add
push
cli
insl
mov
jbe
xchg
mov
addb
mov
pop
push
cmp
jmp
gs
dec
sbb
lcall
mov
aad
scas
iret
mov
pusha
pop
push
scas
pop
cmp
sub
movl
stos
jno
stc
ljmp
leave
mov
push
push
movups
repnz
out
imul
mov
xor
jbe
je
addr16
and
aas
insl
sbb
add
fcomps
push
orl
pop
leave
ficoml
xor
jnp
lret
sbb
divb
pop
push
in
rcrl
add
xchg
adc
sbb
pop
push
andb
fdivr
jne
or
sub
cltd
mov
inc
or
cli
sbb
mov
add
pop
imul
ds
stos
cmp
mulb
lahf
loope
and
movsb
pop
mov
or
mov
es
cmpsl
mov
je
mov
mov
shl
in
movsl
xor
mov
ljmp
or
rcll
adc
or
out
ljmp
xor
arpl
xor
mov
and
inc
xor
ds
xchg
icebp
jg
rorb
fidivl
fwait
in
nop
imul
adc
push
jle
test
add
mov
jl
pop
pop
outsb
push
sbb
xor
pushf
jbe
inc
pop
repz
xor
mov
add
sub
rcrb
push
dec
repnz
or
dec
imul
push
inc
xor
cmp
mov
test
or
dec
pop
mov
adc
cmp
movsb
push
icebp
mov
cli
test
iret
stos
and
lea
mov
mov
fildll
sub
add
scas
mov
jae
rolb
xchg
xor
leave
mov
sbb
imul
cli
or
and
cltd
cs
xchg
mov
pop
or
mov
and
pop
lret
ret
jecxz
movsb
loop
int3
loop
into
xchg
lcall
or
mov
cwtl
aam
jo
mov
cld
jp
fcoms
loop
sub
mov
fdivl
adc
das
or
xchg
std
jl
lods
lea
xchg
inc
in
shlb
arpl
ds
adc
mov
icebp
lcall
rcl
dec
les
mov
lret
cmp
sbb
call
sti
nop
insb
popf
sub
and
data16
pop
push
and
pusha
sbb
adc
adc
enter
lds
data16
add
inc
popf
dec
fxch
adcl
in
jo
incl
xchg
jmp
testl
arpl
inc
cmp
out
push
scas
pop
dec
loop
cmc
ret
repnz
stos
sub
paddusw
insb
inc
inc
push
and
aam
nop
cs
pop
pusha
lret
pop
push
push
sbb
cli
pop
pop
xor
sub
popf
xor
cld
pop
lret
or
mov
xchg
cmc
xchg
dec
addr16
shll
mov
and
fs
rorl
cmpsb
jae
mov
jg
loopne
scas
aaa
call
jb
in
pushf
jbe
roll
mov
xlat
addb
jge
cmpsl
ds
fcoms
outsl
xor
pushf
and
sbb
lods
std
mov
pop
add
pushf
jl
addb
shr
or
or
cmpsl
sub
cmp
push
sub
jo
lcall
sarb
addr16
mov
int
addb
xor
imul
scas
fs
scas
sar
push
and
and
sbb
push
mul
ret
add
fadd
xchg
push
in
minps
mov
xchg
and
adc
std
cmp
mov
mov
pop
mov
scas
mov
test
mov
pop
mov
jge
bound
jl
sub
fld
inc
and
inc
jecxz
mov
mov
mov
cltd
inc
sub
push
sbbl
xchg
insl
xchg
or
fdivs
pop
hlt
jne
insl
sub
push
fistpll
sbb
nop
lods
loop
ds
fcmovbe
add
xchg
std
sbb
sti
imul
inc
gs
push
jl
jbe
popf
push
jns
jge
out
out
int
out
push
rorl
cmpsb
cmp
daa
adc
out
xor
sbb
bound
xor
push
inc
dec
xchg
inc
push
insb
or
ja
insb
movsl
push
std
incl
cli
cmp
hlt
push
jp
aad
dec
mov
data16
xchg
sbb
movsl
cmp
push
inc
cld
sbb
and
xchg
or
sarb
pop
pop
stos
cmp
imul
and
mov
pop
sbb
mov
shll
xchg
adc
daa
xlat
lret
cmp
outsb
jl
sbb
jle
dec
mov
enter
out
jecxz
and
fldcw
sbb
and
test
lods
xor
lods
jmp
adc
sbb
sbb
je
leavew
subl
cmp
loopne
lea
inc
leave
in
xchg
xor
jmp
adc
mov
mov
and
push
in
mov
push
xchg
test
mov
jg
push
adc
mov
repnz
pushf
incl
cmp
lods
loop
jge
test
dec
js
lock
and
sub
add
rcr
imul
mov
fstl
jle
or
inc
addr16
and
pop
fimull
and
cli
cltd
iret
sbbl
xor
lock
sbb
pusha
pusha
cmc
mov
cmp
insl
je
cmp
int
mov
loopne
aaa
pop
das
xchg
pop
cld
mov
jg
xor
jmp
inc
pop
cmp
loop
imul
inc
cmp
mov
mov
out
aaa
or
and
inc
jo
and
rorl
push
inc
pusha
push
sbb
lret
mov
lods
xchg
jo
cmpsl
je
dec
adc
aas
movsl
test
pusha
mov
fs
pop
mov
out
mov
cli
addr16
pop
and
xchg
imul
push
out
pop
mov
adc
hlt
lods
inc
popf
jl
test
mov
das
lret
adc
cmpsb
fs
sub
jo
pop
sti
shll
adc
cwtl
dec
scas
push
or
mov
std
mov
pop
ja
leave
lds
xor
push
xchg
xlat
sub
ljmp
cli
scas
int3
push
mov
mov
addl
in
lahf
jl
push
lods
jae
pop
aas
scas
mov
aam
pop
adc
jmp
xchg
jmp
iret
icebp
dec
mov
fwait
push
into
dec
imul
cli
push
enter
jo
xor
fldl
xlat
scas
inc
cmpsl
sub
jl
das
nop
fisubrs
mov
mov
mov
iret
jl
insb
add
out
cmp
or
mov
inc
ljmp
pop
xchg
es
push
mov
in
daa
jbe
mov
mov
ljmp
ret
mov
or
push
ss
loope
mov
jne
adc
dec
pop
jle
mul
mov
dec
dec
push
iret
mov
or
rcrb
jp
and
gs
jecxz
imul
adc
data16
sbb
lods
mov
scas
lahf
jp
push
clc
sahf
cltd
xchg
in
xchg
jp
icebp
mov
mov
push
cmp
aaa
sbb
sbb
movsb
mov
fwait
js
mov
or
scas
or
push
push
les
adc
lds
call
mov
mov
add
dec
decl
jo
loope
jae
sbb
fbstp
frstor
gs
cwtl
push
inc
push
shrb
test
cmpsl
add
lahf
loop
pop
jp
or
push
in
pop
lret
clc
sbb
push
sbb
shlb
push
sub
in
add
adc
out
mov
fbstp
xor
fildl
adc
mov
adc
add
outsb
test
loopne
sbb
xor
dec
push
jns
mov
xchg
sbb
mov
adc
shl
stos
cld
leave
test
push
inc
pop
out
stos
add
subl
hlt
inc
cmp
jne
aam
push
adc
ret
and
or
adc
das
loope
push
mov
mov
and
dec
roll
ss
std
push
and
stos
mov
in
fistpll
mov
outsb
stos
cld
or
sbb
xchg
xchg
pop
push
jbe
xchg
mov
int3
or
jmp
cld
mov
pushf
xchg
test
aam
xchg
dec
shrb
arpl
dec
pop
mov
das
mov
mov
out
lds
adc
je
fs
add
addr16
repz
clc
cs
or
sti
lahf
push
jb
inc
jp
and
repnz
jne
shl
jo
mov
cmc
adc
cwtl
xchg
mov
ja
mov
repz
lock
nop
cmp
adcb
jo
cmp
cwtl
stc
and
orb
test
jmp
lods
xchg
and
test
xchg
rorl
fwait
xchg
lcall
addr16
fstps
inc
sub
dec
jno
test
into
cmc
add
cmp
ss
stos
adc
cltd
or
mov
out
jnp
sbbl
or
addr16
inc
addb
xor
add
pop
loop
adc
mov
jae
or
lods
ljmp
adc
ljmp
jae
push
icebp
inc
je
sub
mov
icebp
mov
aad
push
push
sub
dec
fmuls
mov
lods
fldcw
test
divb
xor
inc
in
sub
and
jg
lret
cmpsb
loopne
xchg
dec
sarb
mov
push
in
cmp
add
jae
mov
or
add
inc
leave
js
xchg
popf
aas
dec
movsl
and
nop
mov
mov
fcompl
lds
jmp
xorl
dec
fs
cld
scas
cmc
and
push
cmp
mov
or
jg
cmp
loop
mov
sub
inc
dec
fisttpl
test
gs
test
dec
mov
and
sbb
pushf
sbb
jb
imul
and
subb
adc
cmpb
sar
xchg
sub
pop
xor
push
aam
pop
push
and
xor
subl
jge
rep
push
sahf
addb
sarl
dec
dec
and
stos
ja
cmp
pop
call
lret
inc
cmp
lea
fwait
shl
xor
lock
mov
imul
data16
sub
subb
enter
es
lret
fwait
cs
ds
jbe
adc
xchg
lret
in
jge
pop
repz
sbbb
stos
loop
mov
and
stos
pop
sahf
out
mov
or
push
leave
jb
inc
mov
fisttpll
imul
sti
jbe
mov
mov
cmpsl
or
or
mov
stos
sub
imul
mov
and
pop
mulb
or
sub
jle
pop
hlt
movsb
xchg
loopne
xchg
pushf
sub
pop
sub
fldt
loopne
or
or
sbb
stos
aas
or
cmpsl
test
ljmp
push
dec
sbb
jns
cmp
pop
mov
add
push
popf
adc
xor
stc
jmp
add
int3
add
mov
mov
xchg
adc
pop
add
push
and
add
or
lock
in
add
nop
add
mov
xchg
ljmp
lahf
and
and
stos
and
sub
jmp
packssdw
insl
and
sbb
mov
inc
cmp
mov
ja
add
inc
fs
sti
fwait
arpl
hlt
lds
pop
mov
push
test
lret
idivl
dec
test
push
sahf
jecxz
jno
mov
cmc
mov
into
daa
add
stos
xor
sbb
ljmp
dec
xchg
mov
lret
mov
popa
mov
arpl
push
add
out
push
adc
loop
add
add
fldt
out
sbb
push
pusha
xor
rcrb
or
imul
push
sarb
pop
cmpb
and
fld
addr16
jns
pop
lahf
clc
ret
lea
mov
int
pushf
stos
adc
fcompl
out
pushf
fcmovu
push
and
ret
addr16
adc
cli
inc
push
mov
mov
inc
icebp
js
jno
add
lahf
fists
dec
orl
push
dec
jnp
fstps
lret
insl
jle
loope
jae
jp
sbb
bswap
pop
xchg
lret
out
adc
pop
mov
fldln2
int
jb
sti
ja
cmp
shrl
jbe
add
and
jbe
and
mov
popf
cmp
cmpsl
mov
js
add
jnp
adc
test
jbe
or
push
aaa
lret
push
mov
out
mov
mov
mov
mov
sub
xchg
pop
insl
push
pop
sub
or
fstps
jns
sub
loopne
das
sub
or
inc
in
push
dec
test
enter
push
xor
stos
xchg
movsb
sbb
inc
movsl
mov
lret
jns
mov
adc
mov
push
imul
push
enter
in
das
xor
add
jg
test
ss
dec
jg
pop
popa
scas
xchg
push
popa
inc
xchg
add
in
push
push
add
push
sbb
pop
arpl
xor
lahf
sar
aas
and
and
jecxz
inc
outsb
inc
xchg
adc
fs
jns
aad
add
pop
fninit
dec
push
addb
dec
pop
popa
inc
push
jecxz
jb
push
or
add
lret
hlt
fstpl
push
sbb
xor
xchg
rolb
add
push
xor
dec
repnz
or
cmp
sbb
enter
push
jecxz
or
sbb
mov
or
mov
adc
js
pop
push
mov
leave
push
pop
incb
scas
movsl
jl
cmp
push
add
mov
xchg
cwtl
inc
inc
jp
std
push
mov
lods
add
pop
aaa
in
inc
mov
out
mov
dec
push
mov
add
push
aam
mov
adc
pop
aas
in
mov
lret
std
rorl
divl
divb
lahf
jne
les
jo
cmpsl
jl
jmp
pinsrw
push
mov
cmp
mov
cmpsb
xlat
gs
jmp
fildll
xchg
inc
ficoms
push
bound
sbb
rorl
mov
out
ret
jo
test
and
cmp
sub
loop
and
mov
mov
adc
cltd
pusha
fstpt
scas
mov
lret
mov
rol
out
pop
jne
fiaddl
mov
dec
enter
rcl
bound
mov
out
dec
fstpt
adc
xchg
xchg
lahf
mov
cmp
xlat
pop
loopne
aas
pop
mov
cmp
push
push
mov
cmp
aas
cmp
cmp
rcr
xchg
sbb
push
cli
sbb
lahf
icebp
addl
incb
jnp
or
jge
pop
imul
mov
inc
mov
popf
adc
fdiv
rclb
push
outsl
push
jns
fisubrl
inc
adc
xchg
push
insl
mov
mov
xor
push
dec
jl
sub
mov
dec
inc
movsb
xlat
mov
jbe
inc
loop
and
add
jecxz
loop
push
push
sub
test
insl
test
mov
xor
bound
or
push
es
lret
divl
xor
lahf
mov
daa
loope
push
and
mov
scas
sub
pop
mov
popf
mov
fwait
push
pop
and
jg
jmp
pop
bound
mov
movsb
int3
lds
xchg
outsb
mov
dec
push
js
daa
rorl
sti
sbb
mov
cmp
inc
stos
pop
xchg
aam
xor
mov
sbb
shrl
je
mov
addr16
and
and
movsb
mov
mov
inc
mov
into
jne
dec
cmp
mov
popf
or
xor
pop
mov
and
movsl
shll
scas
arpl
cmp
pop
lods
inc
mov
and
lcall
rcrl
xchg
xlat
rcr
imul
jl
sarb
mov
out
and
mov
mov
or
dec
out
fisubrl
cld
cld
les
dec
fmull
pop
jae
sub
shr
bound
test
ss
fwait
pop
ja
cld
shlb
pop
push
mov
in
or
js
sbb
mov
or
fisubrs
dec
sub
roll
xchg
int3
xchg
push
inc
pop
mov
xor
scas
mov
inc
jb
das
fists
push
out
pop
das
in
inc
xor
shl
ret
cmp
cmp
addb
insb
std
cmp
mov
pop
cltd
and
dec
cmp
jle
shl
loopne
or
repz
pop
push
push
into
or
xchg
dec
mov
jp
das
dec
sub
fcomi
lahf
jb
sub
sarb
movsb
mov
dec
iret
sbb
pop
pop
aas
lcall
jecxz
push
pop
push
xchg
mov
imul
jecxz
pop
sahf
arpl
cltd
aaa
nop
lret
mov
aam
add
push
in
jb
aas
shrb
repz
cs
insb
test
dec
and
scas
ljmp
pop
fstpt
fcomps
mov
sbb
add
lock
or
cltd
fnstenv
outsb
xor
movsl
push
and
repnz
push
cmpl
sub
push
in
adc
add
add
push
inc
sub
loope
sarb
insb
lahf
mov
mov
repz
jo
push
aam
lds
leave
push
fsubl
icebp
sub
mov
xor
aas
jo
cmp
je
or
sub
inc
sub
xor
jmp
mov
jecxz
aam
lds
xchg
inc
push
les
adc
lret
xchg
dec
int
mov
out
xchg
xor
test
leave
dec
or
insb
stos
cmp
push
frstor
xor
push
sub
adc
adc
push
lock
fisubl
or
ffreep
icebp
push
ret
rorl
inc
lcall
clc
jo
jge
loope
jge
mov
js
sub
pop
imul
mov
push
pop
std
xchg
imul
and
enter
lods
or
sbb
push
dec
sahf
push
and
sbb
or
push
lret
jg
sub
lcall
xchg
enter
xchg
es
les
cmp
xor
mov
in
jbe
ds
mov
pop
add
scas
lcall
adc
leave
xor
cmc
mov
jb
cmp
pop
sub
mov
pop
rolb
out
pop
and
sub
mov
mov
xorl
dec
jb
xor
mov
jo
ret
dec
inc
sbb
jns
cli
aas
stc
jno
mov
jb
mov
clc
jmp
sbb
aam
sahf
loop
and
test
lock
push
dec
mov
jp
ja
out
rolb
push
scas
jnp
addr16
pop
pushf
jp
je
push
add
push
icebp
sub
lds
sti
sar
jmp
mov
cmp
outsb
push
gs
dec
push
lahf
cli
gs
loop
xor
sub
sub
popa
movsl
or
jbe
mov
sub
std
mov
jl
jge
adc
repnz
jmp
sub
xlat
pop
pop
icebp
jge
or
sahf
push
daa
jbe
cs
fisubs
iret
jl
adc
and
xorl
decl
jle
adc
movsl
cmp
int3
fisttps
popa
push
mov
cmc
xchg
cmpsl
addr16
pop
enter
enter
ljmp
test
ds
fnstcw
ja
fcomps
or
add
inc
or
mov
cmpsb
sahf
xchg
mov
mull
rorb
push
push
xor
and
repnz
gs
loopne
push
jbe
in
fwait
movsl
pop
out
sbb
int3
test
xchg
xchg
pop
inc
test
scas
out
lock
mov
repz
mov
je
sub
push
shl
and
mov
jnp
shl
mov
dec
and
lret
pusha
sub
fwait
dec
adc
inc
cmpsl
add
loope
and
icebp
jge
sahf
aaa
xchg
mov
jle
dec
je
pop
imul
testl
jo
in
lcall
dec
push
pop
sbb
into
adc
repz
add
adc
or
mov
mov
pop
push
mov
mov
cmpsb
out
into
mov
out
dec
cmpl
push
clc
vpsubw
in
adc
xchg
popf
add
rolb
sub
or
jp
xor
imul
repnz
and
jecxz
mov
cmpb
aad
pushw
mov
shr
pop
out
xchg
sub
jecxz
push
shll
in
mov
adc
ficoms
or
leave
fisubrs
sarb
repnz
pop
push
cmc
or
sbb
out
ss
pusha
imul
and
ds
pop
sub
mov
aas
push
adc
loope
int
and
ret
mov
cmp
jmp
xor
or
sub
jmp
jmp
orl
in
cs
or
or
jmp
push
pop
inc
rcll
daa
xlat
cmp
lds
mov
or
and
cld
sbb
rclb
test
mov
or
out
mov
ja
and
data16
xor
xchg
or
dec
packsswb
fisubs
dec
adc
pushf
divl
lds
ds
js
push
jge
rcrb
lret
jnp
mov
cmp
pop
pop
xchg
xor
cmc
jmp
xorb
call
ret
test
dec
adc
mov
cltd
loop
lahf
xor
adc
adc
daa
jb
sub
data16
mov
lea
mov
mov
mov
cmpl
fwait
mov
je
jne
aaa
dec
fwait
sbb
or
lods
inc
addr16
add
ds
add
int3
jns
loopne
out
loop
push
adc
mov
xchg
ret
cltd
ret
mov
imul
push
dec
xchg
xor
mov
jmp
mov
push
cmp
les
push
mov
jo
xchg
sbb
mov
sbb
popa
xchg
rep
jno
push
aam
pop
std
xchg
mov
fisubl
cmc
out
jmp
xlat
stos
shrb
in
mov
repnz
push
mov
mov
sub
rolb
inc
sub
mov
lds
mov
fdiv
push
xchg
add
sub
stos
rcrl
icebp
popf
cmc
js
or
in
cltd
push
mov
out
or
adc
std
mov
popf
push
sbb
sub
inc
fs
xchg
arpl
pop
add
int
dec
out
jecxz
pop
subb
xor
insb
iret
push
push
lock
sub
sti
push
lahf
cmp
mov
outsl
xchg
mov
roll
outsb
cmpsl
test
cld
mov
lock
or
aas
jnp
cwtl
out
or
sbbl
push
sbb
icebp
and
sub
gs
enter
clc
clc
adc
sbb
out
sub
sbb
test
dec
dec
cmpsl
mov
push
ret
in
test
adc
mov
sbb
test
sub
adc
push
mov
mov
mov
icebp
mov
dec
clc
xlat
lods
imul
push
fcompl
or
outsl
movsb
int
sub
hlt
sar
gs
sub
lret
cltd
outsl
jb
mov
adc
es
pop
and
shr
pop
imul
add
jnp
loope
xchg
fdivrl
or
scas
lods
cmp
mov
scas
push
int3
xor
cmp
test
sub
or
sbbl
gs
dec
cmp
cmp
xchg
les
pop
and
stc
iret
int
fldcw
rcll
repnz
loop
cmp
add
imul
hlt
dec
jnp
or
push
aas
inc
xor
repz
out
fnsave
jo
scas
scas
mov
sbb
jge
ljmp
hlt
daa
xchg
jge
xor
push
sbb
and
mov
sub
jg
loope
add
inc
clc
mov
push
cmp
jno
inc
push
xchg
mov
jo
bound
sub
mov
adc
lods
dec
jb
inc
push
xchg
pusha
arpl
subb
popf
leave
cli
and
jae
out
popa
sahf
xchg
sbb
andl
jb
test
repnz
mov
push
push
arpl
cmc
push
pop
pusha
nop
loopne
jl
xchg
dec
fwait
sub
ret
sbb
mov
pop
lods
dec
cmovnp
xchg
leave
loopne
imul
or
ds
out
add
addr16
fidivrs
mov
in
cmp
dec
pop
mov
fnstenv
iret
das
sbb
xchg
xor
cld
and
lret
mov
je
jp
adc
movsl
pop
fistl
cmc
lods
iret
ret
shll
ljmp
js
or
into
xchg
jecxz
gs
aad
or
pop
daa
hlt
frstor
xchg
sbb
cmp
hlt
cs
scas
dec
push
jb
dec
mov
rcrl
sbb
cmp
sbb
jge
jecxz
rclb
sub
mov
stos
push
xlat
sbb
xor
lahf
pushf
mov
notb
mov
xor
js
pusha
mov
cmpsl
sub
sub
ret
sbb
fbld
adc
or
mov
lcall
mov
and
fisttpll
dec
cmc
inc
jae
inc
inc
outsb
hlt
xor
cmpb
sbbb
jge
cmpsl
mov
xor
lret
rsqrtps
jb
mov
imul
inc
fnstsw
fcoml
inc
imul
inc
mov
lcall
decb
jnp
adcl
cmp
jns
ljmp
push
adc
or
rcll
pop
ds
jle
test
aam
pop
stos
aaa
jno
mov
gs
xor
adc
into
push
dec
loope,pt
pop
daa
jmp
fistps
mov
test
bound
loope
and
rorb
loopne
out
pop
jecxz
xchg
leave
push
jp
xchg
test
nop
jge
adc
cmp
insl
sbb
pop
jp
addr16
pop
jecxz
push
inc
les
mov
mov
call
rolb
lds
sub
loopne
lods
sbb
lods
lcall
adc
push
push
inc
lret
fmuls
cltd
lock
xor
int3
mov
xlat
xor
lcall
leave
pop
lcall
ja
lds
push
push
aam
mov
out
and
cmc
mov
int
cwtl
push
sub
cmp
inc
xchg
out
je
in
add
ljmp
adcb
cmpsb
icebp
jnp
sub
adc
rolb
cmp
and
mov
imul
imul
cmp
mov
jo
outsl
or
pop
jmp
shr
lea
push
dec
xor
dec
test
jbe
mov
push
lods
push
mov
add
and
test
pushf
push
outsb
aam
adc
mov
mov
cmpsb
dec
stos
lock
jno
adc
subl
loopne
into
jb
jbe
add
pop
ljmp
and
jo
mov
call
loop
push
sbb
pusha
push
mov
ror
cmp
shlb
push
enter
push
popa
lret
lock
mov
xlat
ds
inc
xor
cmp
xor
jle
pop
das
xchg
js
lea
in
xchg
int3
xor
mov
adc
pop
inc
hlt
mov
cs
inc
bound
int3
xchg
or
jmp
out
jno,pn
sti
jbe
dec
int3
mov
push
push
pop
mov
pop
scas
push
cmp
xor
sub
test
jl
mov
jmp
icebp
nop
mov
aaa
jnp
jg
inc
sbb
repnz
leave
aaa
inc
inc
mov
jnp
and
pop
sub
sbb
paddusb
sub
mov
push
movsb
xchg
xlat
cmp
popl
dec
pop
jno
mov
out
cli
imul
fs
and
cmpsb
lock
inc
lahf
pushf
ret
xchg
push
sbb
outsb
push
js
jp
arpl
xor
cwtl
enter
jns
dec
ja
adc
mov
testl
test
hlt
inc
sbb
mov
sbb
add
daa
and
pusha
lahf
stc
ja
js
sbb
imul
cmpsl
popf
sahf
push
sub
sbb
stos
mov
adc
jnp
stc
mov
and
pavgb
popa
or
mov
jecxz
jl
loope
pop
loope
stos
loope
popa
mov
cltd
push
dec
enter
pop
loop
aam
fimuls
sub
jmp
insl
pop
add
test
add
data16
outsl
sub
leave
dec
push
ds
movsb
js
or
aam
xchg
mov
pop
or
es
pop
cli
notl
call
pop
cmpsb
cs
fwait
js
sub
std
jp
jp
std
jo
jbe
aas
mov
movsb
push
in
push
fstpl
adc
aad
and
rorb
jno
cmp
jge
scas
xor
mov
cmpsb
hlt
test
test
fcomps
add
mov
es
or
mov
add
dec
push
cmp
cmp
push
lock
scas
xor
mov
sbb
je
scas
sbbb
sub
pusha
or
mov
sbbb
jle
ljmp
jns
mov
mov
movsb
sbb
jne
lret
mov
and
popf
test
int
outsb
xchg
dec
adc
dec
sub
sbb
dec
mov
add
or
dec
arpl
adc
dec
in
es
or
ljmp
gs
out
mov
cwtl
sbb
sbb
or
in
add
out
dec
sub
es
clc
insl
push
push
daa
xchg
push
xchg
in
cmp
sbb
inc
leave
sub
mov
jge
out
mov
jnp
pop
mov
jnp
push
xchg
idiv
aaa
stos
jo
in
addl
popf
fwait
mov
out
push
and
push
mov
inc
adcb
in
or
aam
sbb
push
sar
lret
test
jns
in
cmpsb
sub
mov
jb
cmp
in
shr
in
outsl
insl
dec
inc
xor
mov
cltd
mov
push
pop
mov
add
dec
es
mov
jp
push
sbb
cs
xchg
lret
std
jbe
cld
xor
out
and
fnstenv
mov
mov
dec
sahf
inc
lods
loope
push
fnstcw
inc
lea
inc
sub
insb
roll
mov
jge
ljmp
sbb
sbb
out
adc
cmp
xor
push
pushf
ljmp
mov
data16
mov
cmp
dec
cwtl
mov
pop
and
adc
xor
scas
shl
lahf
sbb
in
or
jmp
loopne
scas
subl
push
negl
push
inc
xchg
sbb
fldt
mov
xor
inc
popf
fcomps
imul
cmc
and
fldt
test
fidivs
stos
rorb
adc
add
cltd
pop
lds
lock
pop
or
daa
jnp
jns
aas
mov
push
jo
daa
push
inc
xchg
out
fstl
mov
sahf
addr16
addr16
es
lahf
clc
cli
cld
pusha
js
test
xor
aas
push
hlt
mov
mov
dec
sbb
rclb
xchg
cmp
bound
cmp
rclb
xchg
sbb
mov
rcr
mov
cmpsl
and
fistl
cmp
push
enter
xor
jge
enter
inc
in
ja
test
dec
pop
xor
fstl
dec
sarb
and
outsb
or
xor
xor
xchg
lea
pushf
subb
inc
cmp
cmp
adc
cltd
filds
enter
es
xchg
jge
and
or
lret
rolb
xchg
nop
test
test
sbb
push
dec
negb
pusha
insb
sbbl
jno
pushf
xchg
fs
jmp
ret
lcall
sub
imulb
mov
xor
jne
add
cmpl
mov
addr16
idiv
jbe
xchg
or
testb
jb
add
dec
int3
mov
mov
push
stos
shrl
stos
adc
lcall
adc
jecxz
xchg
pop
inc
mov
aad
sbb
jbe
adc
sub
mov
and
gs
adc
dec
iret
shl
cmp
fldenv
daa
xchg
loop
mov
shlb
dec
fcoms
movsb
outsl
arpl
cmp
sbb
pop
jp
mov
es
sti
adc
mov
jle
add
pop
mov
jb
add
and
loope
fs
adc
mov
cmp
addr16
fistps
xchg
shll
jne
int3
int
es
je
sub
sbb
je
in
out
mov
jle
jecxz
or
xor
in
stc
daa
test
xor
push
call
fildll
sub
xchg
test
mov
nop
jae
mov
lret
push
popa
add
stos
dec
stos
rolb
sub
addr16
movsl
xchg
shl
cwtl
es
push
pop
data16
shll
insb
inc
shl
pusha
mov
aaa
cmovno
xchg
xor
xchg
dec
scas
aas
lods
or
movsl
movsb
jnp
pop
pop
push
mov
xchg
imul
push
jge
cli
adc
mov
cmp
aas
cmc
jmp
mov
inc
mov
sub
pop
cltd
ror
cmp
dec
scas
fwait
xor
ljmp
add
mov
test
xor
pop
jno
ja
in
lock
and
jp
xchg
xor
mov
pop
jle
sub
push
jecxz
and
pop
fmul
pop
fadds
xor
dec
lea
iret
jae
cltd
mov
adc
mov
lcall
fdiv
push
pop
mov
pop
cmp
cli
xchg
imul
xchg
mov
xchg
fsub
ror
pushf
mov
mov
cmc
es
rol
aam
repnz
cmp
pusha
and
aam
popa
clc
mov
and
push
add
push
sbb
dec
xchg
xchg
or
stc
push
arpl
repz
sub
repnz
adc
stos
mov
mov
add
sti
push
push
imul
pusha
pop
arpl
mov
jae
loope
orl
xor
jae
mov
je
xchg
fwait
lret
int3
inc
push
into
mov
xor
jge
dec
outsl
les
scas
les
data16
mov
xchg
and
int
ds
sarl
adc
jge
mov
sahf
mov
sbb
shll
in
adc
push
aam
inc
cld
xchg
mov
xchg
sub
fwait
cmpsb
daa
mov
in
and
or
mov
dec
sub
lret
lret
call
mov
sub
lret
jo
adc
addr16
cmpsl
inc
fstpl
fcomip
out
lods
and
dec
xchg
dec
xor
sub
xchg
and
data16
pushf
jmp
cmp
xor
sub
inc
aam
xchg
adc
cmpl
and
stos
mov
sbb
push
sub
ljmp
loopne
repz
jnp
dec
arpl
lods
and
in
les
dec
fcmovbe
shll
enter
inc
mov
sbb
jp,pt
xchg
jmp
test
stc
push
in
repnz
push
add
sub
jb
push
or
jnp
mov
cmp
inc
mov
mov
imul
push
mov
sti
enter
repnz
insl
jge
cwtl
adc
test
xchg
call
iret
or
or
pusha
dec
jmp
andb
mov
mov
cwtl
out
xchg
xchg
inc
jnp
insl
pusha
ret
sub
mov
xchg
pusha
in
xchg
jne
fwait
inc
loope
mov
ss
ss
mov
mov
fisttpl
fs
cld
fcmove
stos
stos
dec
movsl
test
jg
call
ficomps
inc
aas
jno
adc
and
cmpsb
lret
pop
clc
das
dec
push
cmp
cli
cmp
int3
push
sbb
dec
xchg
lods
sub
mov
jno
ds
and
inc
jge
fcompl
adc
sub
mov
mov
popaw
jle
cltd
inc
fidivs
lock
and
sub
sub
pop
aaa
push
push
pop
and
or
loopne
push
arpl
popf
mov
adc
mov
das
push
outsb
push
jnp
pushf
cmp
mov
dec
pop
inc
outsb
sbb
dec
lods
jge
imul
mov
or
xor
mov
std
sub
cmpb
les
scas
xchg
cmp
jg
sub
fucompp
sub
mov
ret
aam
xchg
xchg
shlb
outsl
cmp
leave
dec
push
mov
pop
xor
or
in
xchg
fisttpll
or
xchg
or
pop
movsl
inc
out
data16
xchg
and
shrb
outsb
dec
adc
jle
jnp
rorl
sbb
push
dec
out
lea
xor
scas
add
xchg
xor
addr16
sbb
pop
or
les
sbb
xor
cmp
and
jns
aas
repnz
dec
ret
lds
mov
cmp
pop
pushf
push
repnz
mov
aad
push
or
repz
dec
jo
pop
test
iret
xchg
pop
data16
insl
adc
push
jecxz
cli
fst
sbb
pushf
pop
mov
scas
mov
jnp
push
test
in
popf
gs
sub
mov
cmpsb
mov
mov
pop
fnsave
xchg
lea
mov
fs
outsl
arpl
xchg
jno
int
enter
and
std
add
movsl
mov
in
scas
xor
xchg
pop
sbb
push
mov
outsb
xchg
push
leave
into
jae
cs
rcrb
mov
inc
jo
mov
xchg
sahf
lahf
jo
xor
mov
jg
insl
jmp
popf
leave
and
call
xchg
jbe
outsl
insl
fstp
cmp
mov
movups
xor
cmpsb
jecxz
sbb
sub
cmp
bound
aaa
add
aas
add
pop
xchg
mov
pushl
lock
add
adc
jg
test
cmpl
push
sbb
jg
ret
mov
cmp
add
ficoms
sbbb
mov
push
movsl
add
push
fbstp
mov
cmp
mov
mov
loopne
jle
adc
in
pop
sbb
cmp
pop
in
jp
daa
adc
iret
inc
push
add
mov
dec
imul
and
sbb
or
cmp
add
mov
mov
bound
mov
add
mov
mov
jle
sub
mov
or
cmp
rcr
scas
jae
mov
loop
inc
pushf
xchg
in
cmp
mov
jno
addw
inc
dec
sti
cmp
jne
movsl
clc
or
dec
jp
lahf
mov
bound
in
sti
adc
inc
add
cli
dec
add
roll
xchg
repnz
mov
mov
mov
push
lods
jle
or
imul
adc
shlb
lcall
cltd
and
mov
ror
cmp
or
xor
insb
or
jle
aaa
dec
cmp
mov
adc
mov
cmp
xchg
mov
add
fs
push
jbe
arpl
insb
flds
pop
mov
pop
sahf
pop
sub
shrl
xchg
xchg
xchg
ja
je
xor
popl
sub
sbb
lds
jecxz
add
mov
sbb
repz
pop
cmp
sub
stos
xchg
inc
mov
cli
pusha
je
cs
mov
jle
cmpsb
shl
mov
jmp
call
or
fs
inc
push
xchg
jne
test
aad
adc
pusha
jns
sbbl
mov
xor
jne
pop
or
enter
pop
pop
in
push
dec
jecxz
mov
jp
mov
adc
shll
sub
pop
xchg
ss
ljmp
rcll
hlt
add
jo
int
dec
sahf
or
jg
stos
adc
rolb
push
outsb
scas
cwtl
mov
mov
mov
or
mov
into
inc
add
and
sub
insl
insb
add
shrb
and
sub
pop
lods
cmpsl
pop
sub
or
pop
clc
dec
icebp
adc
jo
dec
stc
mov
je
fisttps
cli
xor
and
add
testl
adc
out
inc
pop
stos
sub
sub
dec
loopne
sti
lahf
adc
jecxz
lock
in
clc
sarb
pop
hlt
xchg
clc
lods
mov
sbb
pop
fs
or
fildl
cmpsl
movsb
cld
adc
and
lea
out
add
roll
jmp
cwtl
jns
xlat
and
add
mov
movsb
lret
cmp
sahf
fwait
add
cmc
test
cmc
jp
in
push
stc
add
push
or
xor
sbb
xor
int3
cli
adc
sub
repnz
in
xor
jl
iret
aaa
ja
dec
lahf
hlt
adc
dec
add
xchg
or
fstl
out
push
mov
repz
mov
lock
pop
paddb
dec
pushf
xchg
jno
add
or
nop
aas
mov
in
fdiv
scas
pop
xor
loop
test
or
loope
cmpsb
repnz
insb
dec
mov
fistpll
or
cmp
push
sub
pop
je
ffreep
cmp
mov
push
and
mov
roll
mov
cmpsb
gs
out
push
mov
mov
outsl
xor
data16
test
sub
loopne
push
xlat
and
cld
mov
push
pop
pop
lock
lods
inc
mov
sub
add
pop
cmp
dec
int
out
lea
jge
cmp
and
out
dec
rol
mov
jbe
stos
and
mov
enter
push
and
enter
nop
sub
pop
cmp
int
shl
repnz
test
dec
out
mov
xor
push
pop
movsl
cmpsb
inc
sub
insl
jo
push
leave
and
sbb
ret
jge
xor
insb
push
std
jne
imul
jmp
xorl
aas
fwait
inc
test
pop
add
loope
and
ja
pop
popa
aad
ljmp
pop
push
nop
jp
inc
pop
add
cmp
xor
jae
mov
or
and
xchg
xor
test
mov
adc
daa
adc
dec
out
pop
loopne
xchg
inc
jecxz
aas
fwait
sbb
push
leave
mov
std
mov
inc
adc
addl
repnz
mov
test
es
push
pushf
repz
movsb
scas
jge
add
jmp
test
stos
enter
mov
and
sub
aaa
fistl
rcll
push
js
jp
push
xlat
ljmp
push
enter
sub
clc
push
shll
push
aad
xchg
into
fisubl
xor
in
mov
push
dec
fs
and
aas
sbb
loopne
jbe
pop
cmp
inc
jns
cmpsb
mov
adc
or
push
xlat
int3
movsl
lahf
stc
mov
lret
adc
push
data16
jbe
xchg
fwait
mov
mov
sub
cmp
xabort
andb
sub
or
add
inc
scas
inc
test
add
sbb
dec
push
pop
mov
sbb
lods
xchg
fbld
push
cmpl
and
mov
xor
jns
fdivrs
push
push
adc
dec
fildl
adc
jnp
or
jns
fdiv
cmpsl
test
dec
into
pop
dec
fistl
push
aaa
jl
mov
or
sbb
aad
leave
push
push
in
stos
clc
jne
rclb
xchg
int
pop
shrl
sbb
add
test
addr16
ffree
and
and
mov
ds
out
pop
pop
loope
xor
jmp
push
cld
pop
jns
cmp
loope
mov
rorb
add
mov
sub
mov
aaa
mov
loop
or
push
push
mov
ret
cltd
or
testb
dec
adc
mov
popf
cmc
mov
push
mov
dec
jo
repnz
mov
fwait
and
mov
mov
lret
cmp
jle
enter
loopne
pop
push
scas
jp
inc
jae
dec
jnp
or
imul
mov
push
push
scas
push
out
and
mov
fstpt
mov
sub
jl
and
les
in
or
ss
cmp
test
dec
fcompl
xchg
les
or
loop
xchg
sarl
lods
sub
jle
scas
add
out
mov
rep
ss
lcall
cltd
cmpsb
add
add
jecxz
imul
ja
iret
popf
jg
mov
add
pop
sub
push
in
cmp
mov
fisubrs
pop
push
mov
sbb
cmp
or
inc
ss
mov
cmp
pop
orb
xor
test
push
inc
or
divb
ja
cmpsb
cltd
enter
fwait
xchg
in
loope
mov
mov
imull
cmpsl
stos
sub
add
adc
pop
or
movsb
mov
ja
fdivs
cli
fldenv
add
repz
aad
push
sub
or
add
fidivrs
in
jmp
xor
jge
mov
jmp
pop
stos
jne
cwtl
gs
in
inc
push
cld
or
imull
test
inc
jnp
sbb
inc
lahf
and
sbb
fwait
loope
xchg
repnz
sbb
movsl
rcr
add
ljmp
xchg
xor
leave
call
xor
es
xlat
cmpsl
or
jl
imul
sbb
pop
xchg
add
cmp
pop
cmp
sbb
bound
lcall
int3
mov
cmp
aaa
syscall
mov
mov
push
inc
mov
sub
or
sbb
addr16
xchg
xorb
cmp
pop
jo
or
inc
adc
sbb
pop
ss
test
push
mov
addr16
pop
movsb
outsb
into
sub
and
push
xchg
or
dec
dec
or
push
or
iret
push
mov
loopne
cmp
scas
sbb
out
cmp
push
imul
loope
mov
mov
cmp
outsl
cmp
les
loope
inc
popf
inc
jo
sbb
aad
insl
adc
xor
push
aad
icebp
or
out
fdivl
vprotb
test
sub
sbb
lret
xor
out
push
pop
push
or
push
jle
imul
icebp
jo
inc
xor
popf
mov
add
loopne
dec
sub
pop
mov
in
lahf
mov
pop
sbb
xchg
push
loopne
jns
and
push
mov
shl
xchg
into
out
mov
aad
rorb
adc
lea
jo
aad
mov
sub
jmp
icebp
pushf
flds
in
ret
cli
lea
dec
pop
push
leave
mov
mov
sti
or
push
lret
mov
js
loope
mov
inc
pop
pop
mov
push
inc
sar
mov
in
adc
dec
cwtl
daa
lock
xchg
jno
xchg
mov
pusha
pop
jp
pop
leave
cmp
mov
xor
inc
cld
je
inc
lods
into
lods
jae
aam
fwait
imul
stc
das
sbb
inc
daa
jbe
and
sahf
mov
push
inc
lcall
ret
bsr
call
int
cmp
mov
sub
adc
jl
jnp
or
jl
js
ds
sub
inc
jnp
xchg
pop
addr16
fst
push
mov
mov
nop
shl
div
hlt
stos
inc
mov
int
jp
xchg
scas
push
aas
add
imul
int
dec
ljmp
jg
jmp
mov
and
cmpsl
push
aas
add
rcll
andb
lea
ja
pop
scas
leave
jae
faddp
sub
sub
out
dec
pusha
jno
ds
and
fs
pop
inc
test
xor
inc
pop
and
sub
jmp
fidivrl
cli
jbe
hlt
push
popa
mov
mov
mov
and
je
sbb
fwait
and
and
cmp
ret
movsb
mov
dec
ljmp
sbb
inc
mov
data16
incl
bound
mov
dec
test
pop
jp
adc
ror
gs
xchg
lds
pop
adc
push
enter
push
mov
pop
repnz
push
sbbb
sub
jmp
out
push
fistl
pusha
mov
lret
mov
mov
rcll
fs
int3
xchg
loop
xor
push
push
pop
mov
mov
js
jp
fsub
jge
mov
inc
test
jg
xchg
bound
imul
or
lcall
ja
popa
jmp
dec
bound
js
sub
pop
enter
mov
lret
xchg
leave
push
cli
xor
pop
testb
cmp
pusha
fwait
pop
shrb
mov
mov
enter
add
xor
or
push
repz
cs
push
ds
jg
xchg
xchg
cs
cmp
jne
aaa
dec
punpckhbw
pop
test
jns
lods
sub
ret
test
arpl
pop
ljmp
adc
sbb
mov
mov
cmc
les
fs
pop
jae
or
dec
dec
xchg
je
mov
mov
shll
pop
push
scas
fsts
push
xchg
or
pop
imul
inc
sub
lock
sbb
push
jmp
sti
mov
sub
xchg
or
jne
dec
xlat
sahf
sti
fs
into
pop
xor
mov
and
cmp
out
fcmovnu
pop
test
fnstcw
jl
fisubs
fsubl
es
cmpsl
sub
sbb
mov
jecxz
cmp
mov
sarb
test
dec
jecxz
insl
xchg
shrb
jbe
adc
clc
sbb
fldenv
pop
jg
leave
mov
xor
cs
int3
xor
dec
mov
inc
mov
fwait
mov
cmp
xchg
inc
jo
fcoms
and
cmp
in
mov
ss
adc
sbb
outsb
cmpsb
sbb
jo
mov
imul
lea
sbb
sub
pusha
dec
addr16
mov
fwait
aas
stc
cwtl
scas
mov
cmp
ljmp
insl
xor
addr16
jnp
inc
xlat
xor
cmp
imul
gs
jmp
mov
add
mov
add
cmpsb
xchg
rolb
jge
sbb
pop
bound
mov
xchg
push
hlt
popf
or
push
rolb
mov
aad
or
xchg
inc
rcrb
inc
or
aas
pop
lret
sub
inc
push
in
add
cmp
xor
mov
sub
out
jbe
sbb
jmp
pop
pop
push
dec
out
inc
pop
fwait
xchg
mov
ret
fs
inc
sub
test
je
js
nop
xor
or
cld
mov
dec
ja
dec
inc
fldl
mov
aam
mov
ret
loope
sub
shll
int
push
push
gs
cmp
mov
adc
test
nop
xchg
iret
cwtl
and
sub
dec
shlb
mov
or
iret
mov
inc
leave
loop
out
adc
lods
sub
cltd
stc
popf
rcr
scas
xor
and
insl
mov
rcll
inc
ljmp
addb
out
ret
mov
jne
fstps
add
mov
sbb
lods
testb
lock
or
inc
jle
mov
movsl
fcomps
int
push
mov
push
incb
adc
test
sbb
mov
sub
sbb
and
mov
xchg
fucomip
inc
dec
pop
lahf
jno
lahf
movsb
roll
inc
pop
popf
mov
lret
jle
sub
sub
je
add
sub
xchg
aad
ljmp
inc
test
add
ret
and
inc
mov
loop
jp
and
fdivrl
jns
mov
sbb
cmc
mov
push
pop
shr
push
icebp
lods
mov
adc
stos
push
mov
scas
iret
lret
dec
insl
out
pusha
test
bound
shlb
adc
mov
fimuls
ja
jmp
sub
inc
lahf
mov
loop
movsl
test
jne
movsb
aad
or
jg
sbb
or
fs
inc
pop
ja
pop
mov
test
imul
adcb
push
hlt
sub
fmuls
insl
in
iret
mov
mov
sub
movsl
aaa
mov
jle
fwait
pop
mov
rcr
ss
fisttps
jmp
or
or
scas
lret
inc
int3
add
push
mov
gs
in
test
dec
inc
in
int
mov
mov
jbe
add
sub
lods
lock
imul
notl
mov
sarl
mulb
test
sbb
mov
mov
out
add
sub
inc
add
cmp
cmp
push
sbb
rorl
xor
scas
mov
mov
cmp
movsb
mov
js
faddl
xlat
lea
out
push
sbb
ret
cs
jmp
xor
imul
in
mov
js
fsubrs
jo
mov
mov
mov
push
lods
cmpsl
jecxz
adc
lock
clc
xor
insb
add
or
sub
repz
lock
xlat
jns
movsb
cmpsl
aas
imul
push
xchg
fistps
mov
pop
mov
xchg
arpl
xor
jbe
sub
dec
imulb
xorb
fstpt
sub
dec
ja
es
popa
mov
ret
movsb
gs
stos
mov
dec
jg
xchg
inc
cmp
enter
cltd
and
inc
int
mov
jl
ret
lds
xchg
pushf
in
cmpsl
push
arpl
push
rol
int3
xchg
hlt
es
and
aaa
adc
pandn
fcmovnu
enter
xlat
xor
inc
outsl
es
fs
int
insl
fdivl
inc
xchg
insl
adc
xchg
mov
cmp
fsubrs
adc
sub
fcoml
pop
add
jb
shrb
inc
sub
inc
test
cmp
insb
popf
mov
testl
or
mov
push
xchg
int
add
xchg
jle
push
sub
stos
jns
je
xor
jp
fsub
bound
push
sub
push
jb
int
test
sbb
add
fimull
push
xor
pop
movsl
jns
repz
daa
adc
stos
mov
jg
and
jmp
inc
inc
sub
pop
adc
inc
fisubrl
dec
xchg
daa
jecxz
cwtl
mov
xchg
lods
jbe
movsl
loop
lock
fs
ljmp
clc
sbb
pop
push
fildll
sbb
dec
and
pop
or
and
push
add
std
push
push
pop
ficoml
cltd
jmp
sbb
enter
cmp
add
mov
test
xchg
out
or
hlt
mov
rcrl
or
testb
jo
pop
cs
loopne
cwtl
mov
iret
jp
lea
rcr
ds
sbb
cmp
rcrb
cmpsl
shll
popa
push
fstl
bound
and
into
mov
cmc
stos
push
hlt
imul
mov
add
push
mov
xchg
subl
ds
dec
add
mov
ret
sahf
insb
sbb
lods
pop
rorl
ror
rorb
jne
xor
xchg
pop
push
outsb
lds
mov
clc
jge
shll
cmp
jo
lds
jecxz
inc
mov
popf
es
lods
adc
adc
pop
outsl
mov
mov
jle
dec
xor
and
cmp
pop
mov
push
outsl
loopne
les
fcompl
mov
jnp
push
pushf
adc
cmpsb
lock
push
pop
and
and
pop
dec
mov
fs
fisubl
cmp
dec
mov
outsl
imul
test
pop
sbb
mov
xor
inc
adc
push
fwait
repz
mov
jmp
sti
xchg
pop
shlb
jp
mov
scas
addr16
lcall
and
dec
ror
pop
or
dec
inc
sub
push
push
ja
in
pop
dec
xor
add
fsubrp
lea
push
pop
sbb
jns
cmp
inc
pop
or
sbb
mov
inc
loope
cs
add
xchg
xchg
mov
rolb
lret
mov
outsb
fstps
mov
xor
aaa
push
cltd
andb
and
push
mov
rcrb
ficoml
cmp
push
ds
xor
fprem1
cmc
mov
push
push
hlt
jl
arpl
push
nop
lods
cmpsb
xchg
push
add
sub
bound
cmp
xchg
adc
mov
cs
aam
insl
pop
push
je
mov
push
loope
hlt
jo
daa
imul
mov
lods
dec
call
xchg
loop
ret
sub
xchg
mov
insl
or
cmp
mov
sti
mov
cmp
mov
push
gs
add
jae
push
call
cltd
aam
add
jg
push
sahf
mov
sahf
mov
pop
shll
mov
cmp
xchg
int3
sbb
movsb
mov
iret
cmp
in
jns
loop
inc
icebp
mov
faddl
adc
mov
fisttps
jnp
pop
mov
dec
or
lock
rol
test
outsb
or
jmp
xchg
pslld
fisubrl
pop
lea
xchg
stos
insl
and
ljmp
mov
nop
out
xchg
and
mov
mov
stc
stos
stos
adc
mov
fnstcw
or
enter
xchg
pop
leave
xchg
scas
and
jbe
roll
fadd
and
mov
adc
cmpsb
jno
pushf
jmp
fisubl
mov
jl
mov
fmull
xchg
cmpsl
add
aaa
addr16
in
mov
fwait
xor
js
or
dec
adc
mov
jle
sbb
jmp
dec
jge
inc
sub
movsb
mov
push
jnp
adc
rcrb
or
adc
aam
rolb
add
fisubrl
movaps
mov
mov
push
jp
test
xor
test
mov
ja
inc
insb
push
rol
iret
rcrl
jp
xor
push
or
into
jmp
add
divl
ds
dec
call
xchg
test
in
fnstenv
and
clc
pop
jns
test
sbb
ficoms
out
movsl
das
hlt
adc
mov
out
je
shlb
mov
mov
fwait
push
fdivl
test
movsl
adc
imul
xlat
and
dec
xchg
xor
pusha
dec
subl
lea
enter
add
insb
pop
flds
iret
inc
loop
mov
adc
loop
mov
mov
mov
dec
xchg
ror
into
fcoml
inc
mov
cmpsl
inc
imul
jmp
cmp
mov
xchg
movsb
jns
movsl
jnp
cli
jnp
repnz
test
out
out
inc
mov
cmpb
loope
pop
mov
xchg
mov
xchg
push
mov
ret
out
adc
or
es
fs
rcrb
icebp
add
rcrl
js
xchg
test
cli
in
imul
adc
xchg
in
lock
adc
pop
ret
push
decl
pop
out
add
or
arpl
mov
fcompl
mov
popf
ljmp
int3
shll
push
pop
sti
fwait
shlb
pop
jl
stc
sub
push
inc
xor
xchg
cs
jg
adc
lret
int
subl
xchg
mov
ss
xchg
loop
push
out
divl
mov
cmp
in
fs
jmp
bound
adc
and
into
mov
push
xchg
sub
jle
ret
and
mov
loope
push
xor
aam
push
movsl
in
jl
nop
cli
sub
leave
and
adc
imul
in
adc
mov
mov
std
bound
mov
out
or
push
mov
out
push
push
cmp
outsb
jne
ret
lret
mov
xchg
add
nop
push
mull
sbb
sub
and
ljmp
xlat
out
xchg
lcall
out
add
cltd
cmc
and
mov
and
popa
xchg
mov
jmp
test
loopne
inc
clc
aam
mov
cmp
cmp
roll
xchg
jecxz
xor
inc
mov
dec
mov
shlb
fucom
call
xor
ret
nop
sbb
je
sub
cmp
adc
adcl
push
loope
clc
mov
data16
pushf
movsb
sbb
xor
out
mov
xchg
pop
add
ficoms
dec
loopne
lea
sub
mov
lock
sub
divps
scas
and
xor
cld
int
clc
mov
roll
in
add
imul
jmp
jb
add
test
sub
push
add
adc
cmp
sbb
adc
popa
xlat
out
push
cmpsl
dec
dec
cmc
xor
ds
test
cmp
jp
inc
mov
pop
lret
jp
and
dec
pop
or
fadd
push
or
shlb
push
cwtl
sub
push
roll
popf
je
lds
and
std
dec
jmp
pushf
ret
inc
mov
jb
push
jp
xchg
cmp
push
aas
xor
mov
ja
pop
outsb
lods
sub
jmp
inc
xor
dec
cwtl
fwait
ret
ds
pop
ret
loope
data16
mov
sbb
aaa
push
es
jnp
js
and
in
adc
pop
shlb
sub
imulb
fwait
hlt
je
lea
xor
ja
out
push
nop
jmp
shlb
jne
mov
cmp
xchg
jne
dec
loope
jne
cmp
pop
jbe
das
lret
push
cmpsl
std
jmp
fsubs
jle
push
and
je
shlb
sub
lock
sbb
sub
sub
xlat
lock
out
js
data16
cli
sahf
leave
mov
fidivs
xorl
into
inc
mov
aam
add
sbb
ldmxcsr
jne
dec
jns
out
fsubl
testb
or
xchg
imul
adc
outsl
pop
mov
ret
int
add
dec
scas
ljmp
call
int
add
imul
subb
ret
int
fcomip
outsb
test
mov
cmp
ja
cmpsl
or
gs
out
test
cmp
cmc
dec
loop
shlb
jmp
xor
aaa
push
das
outsl
xchg
outsl
arpl
fwait
ja
cli
das
fadd
mov
out
test
cmp
les
add
frstor
lcall
dec
jl
adc
and
jno
dec
fidivrl
or
shrb
cmp
stos
movsb
insb
lea
lods
adc
add
inc
xchg
aam
xchg
fnstenv
add
mov
inc
fwait
out
inc
sub
fbld
mov
jbe
fdivr
cmpsb
adc
jp
mov
mov
popa
mov
inc
or
jg
in
iret
cmp
pushf
arpl
mov
stc
bound
push
andb
push
fildl
jmp
or
mov
or
dec
adc
inc
repnz
mov
sbb
dec
xchg
jo
in
mov
cld
mov
addl
cmp
sbb
push
lret
and
pop
jne
popa
adc
jle
push
js
push
sub
sbb
jge
sbb
and
cmp
dec
jle
pop
adc
push
add
fadd
out
and
orl
es
pop
adc
ret
ds
dec
jmp
add
xchg
xchg
movsb
pop
jecxz
inc
stos
loop
pop
cwtl
and
mov
popa
std
jae
pop
mov
mov
loopne
xchg
cwtl
jns
xor
or
ret
mov
out
cmpsl
iret
outsb
mov
dec
push
std
faddl
sbb
int
cwtl
je
jg
rorb
dec
dec
mov
pop
mov
mov
sbb
add
cmp
push
push
out
lods
int
push
cmp
insl
push
movsl
es
notl
call
dec
inc
jle
mov
pusha
mov
adc
inc
imul
jns
movsl
jp
stc
adc
pop
or
loope
in
mov
mov
push
iret
leave
test
jno
faddp
xchg
push
mov
psubw
cmpl
dec
push
gs
shlb
add
in
flds
test
addr16
jle
inc
dec
test
adc
adc
sub
movsb
loope
orb
sbb
dec
dec
mov
sbb
and
test
es
mov
sbb
imul
add
mov
popf
out
int
inc
add
mov
arpl
jbe
pushf
mov
ja
push
jbe
aaa
movsl
out
jns
int
lret
stos
sarb
add
imul
push
js
je
inc
loopne
lea
sub
sub
adc
mov
icebp
mov
pop
xor
dec
push
clc
rcl
rclb
nop
cmp
adc
pop
cmp
adc
or
dec
mov
mov
movsb
fs
stc
out
xchg
and
mov
inc
or
or
mov
add
jl
sbb
mov
or
lea
mov
mov
adc
cs
jecxz
pop
jmp
jge
lods
push
mov
cmp
aas
push
repnz
and
aas
sub
jecxz
shll
sbb
adc
scas
sbb
int3
mov
jmp
lods
out
mov
jns
lcall
mov
test
mov
push
enter
xchg
imul
mov
inc
clc
aas
mov
sub
mov
sbb
call
xor
lret
into
js
lea
mov
mov
xchg
or
push
lock
pop
dec
pop
push
dec
adc
adc
test
sti
mov
sti
and
sti
jne
enter
mov
repnz
cmp
or
leave
clc
or
mov
or
mov
xchg
add
nop
mov
aas
imul
insl
push
mov
cmpsl
jl
xchg
sbb
cmp
adc
pushfw
ds
inc
ss
push
mov
or
cltd
mov
pop
and
push
jo
inc
rclb
daa
push
dec
xchg
and
xor
imul
push
fsubr
xlat
mov
ljmp
add
push
adc
popf
ficompl
mov
mov
cwtl
ja
mov
jmp
sahf
pushf
sub
minps
orl
cmp
imul
jbe
cmp
cmpsb
pop
loop
popf
cmpsb
fs
fdivl
add
lahf
push
xchg
xor
pop
mov
mov
pop
push
jge
jbe
xchg
ret
int3
testl
cmp
add
sbb
orb
sbbl
xchg
xor
lret
xor
daa
push
aas
in
dec
pop
xlat
mov
loop
inc
fwait
xchg
cmpsb
sub
lock
xchg
push
add
inc
fcoms
add
sub
cltd
mov
cmpsl
lcall
lock
mov
mov
or
int3
xor
dec
lret
xor
push
jge
jg
add
sub
cmp
icebp
pop
mov
push
pextrw
xor
xchg
inc
cmpsb
sub
or
jbe
mov
insb
and
add
stos
mov
xchg
xchg
and
std
or
sbb
sbb
lea
pop
push
in
rcrb
outsl
sbb
outsb
ret
cmp
mov
jge
ja
fisubrl
test
pop
jg
pop
clc
lods
ficoml
arpl
jl
cmp
cwtl
xlat
dec
add
jo
addl
or
mov
xor
into
mov
imul
inc
jle
out
mov
insl
jmp
cld
lods
scas
push
cltd
jb
aad
inc
js
mov
pop
or
ficoml
cmp
pop
and
mov
int
daa
fbstp
dec
sub
out
es
or
and
inc
sbb
dec
out
cltd
push
dec
inc
cmp
fsubrs
dec
clc
push
sbb
leave
and
pop
dec
dec
adc
inc
mov
pop
cli
pop
xlat
xchg
stos
xor
jb
adc
xchg
xor
movsb
dec
jl
push
dec
aas
pushf
rcrb
call
stos
fcmovnb
test
jne
adc
outsl
and
daa
dec
mov
jg
adc
xchg
mov
add
fwait
sti
loope
or
dec
les
ljmp
call
testl
iret
jbe
mov
dec
movsl
lods
adc
std
xchg
cmp
aaa
xchg
mov
pushf
popa
jb
das
xor
aad
pop
imul
dec
dec
xor
jg
or
cmpsl
repz
fs
hlt
in
icebp
fstl
xchg
push
jne
push
xor
fdivs
xchg
fcmovnu
js
xchg
stos
ret
gs
jp
fisubl
push
inc
jp
in
push
push
inc
sub
in
sub
pop
hlt
push
cmp
push
sub
mov
sub
int
jmp
push
dec
push
add
sbb
lock
je
mov
fimuls
dec
and
lahf
xchg
outsb
imul
cmp
mov
mov
or
out
out
mov
and
mov
into
in
xor
fs
dec
mov
dec
cmp
push
out
inc
outsl
cli
test
jno
lea
into
jp
lds
dec
mov
std
push
inc
sbbb
pop
les
or
imul
rorb
hlt
and
movb
cmp
mov
fldt
outsb
in
pop
cmpsl
out
cmc
aam
testl
push
je
xor
data16
jo
push
ret
pop
inc
cs
xlat
fcomip
push
mov
mov
mov
mov
les
jecxz
enter
jo
or
push
or
and
sbb
xchg
dec
rcll
mov
mov
jg
mov
push
jg
jle
in
mov
sti
loop
daa
dec
and
fcoml
adc
pop
inc
arpl
sub
data16
sub
mov
shlb
jno
je
mov
inc
jo
inc
mov
fimull
cli
or
dec
cmp
sbb
dec
cmc
icebp
jne
adc
insl
jg
mov
adc
out
mov
mov
in
test
push
mov
push
inc
addl
push
aas
inc
adc
sbb
jnp
shrb
xor
scas
push
aam
mov
ss
cli
or
fldcw
cld
pop
mov
imul
add
jns
test
dec
enter
shll
imul
je
ja
push
mov
movsl
xchg
das
mov
mov
imul
jnp
lods
push
pop
pop
xchg
in
cltd
lea
mov
imul
add
pop
jo
pshufw
cs
jo
jae
sub
cmp
mov
jmp
push
movsl
jge
pusha
les
pushf
dec
stc
mov
stos
loop
sbb
arpl
movsb
jg
mov
push
pop
outsl
cmp
mov
test
xor
and
movsl
in
ja
jns
jnp
cmpsb
das
shr
and
lods
aad
xchg
mov
add
ret
dec
daa
clc
clc
aaa
roll
xchg
xchg
and
jl
add
lea
jns
mov
mov
cmp
sahf
outsb
fs
or
dec
mov
dec
or
aas
or
pop
loope,pn
in
jg
sbb
inc
push
sahf
loope
xchg
pop
outsb
loop
dec
repnz
pop
mul
lret
mov
xchg
notl
push
hlt
sub
mov
aaa
stc
outsb
fs
stc
sub
fldpi
jp
or
sbb
dec
sti
pop
xor
xorb
sbb
test
dec
ret
cs
jne
insl
inc
pop
in
push
mov
dec
clc
push
jg
dec
inc
outsl
bound
mov
adc
pop
mov
fsubrl
lret
dec
dec
iret
push
push
stos
rcll
mov
jo
outsl
sub
xor
inc
cmc
cld
movsb
idivl
xchg
shlb
rcll
sbb
aad
loop
push
cmpsl
aam
add
std
push
outsl
les
mov
or
push
mov
dec
mov
es
jl
xchg
insl
int3
stos
cmp
sub
dec
mov
test
xlat
xchg
adc
aam
and
push
orl
inc
adc
cmpsb
adc
jmp
cmp
jg
aas
cmp
scas
mov
movsl
sub
sbb
or
cld
repnz
in
jo
popf
mov
cmp
push
jb
adc
fdivrp
clc
rcl
xchg
jge
push
mov
sbb
bnd
fdivrl
inc
insl
cmp
mov
xchg
xor
pop
inc
loop
mov
push
xor
inc
xchg
sbb
inc
aas
fstps
pop
aaa
ss
add
cmp
fsubs
jb
jno
ror
into
mov
jge
add
jae
data16
repnz
xchg
rcll
idivb
sub
pop
inc
push
ret
sub
mov
scas
movhps
jae
and
inc
loop
ret
les
repz
pop
xor
push
loop
sub
arpl
outsb
or
je
mov
push
push
daa
xchg
pop
mov
push
mov
dec
mov
or
dec
cmp
push
sbb
aad
mov
ja
addr16
test
scas
aad
cmp
fstpt
inc
mov
out
lds
fisttpll
nop
add
stc
add
cmc
inc
call
push
jle
cmp
xor
mov
icebp
xchg
inc
jmp
mov
xor
ficompl
cmp
xchg
fistl
movsl
imulb
mov
and
scas
lcall
jae
push
mov
sbb
aad
and
aad
int
push
leave
pop
rcrl
push
loop
jmp
outsl
pop
xchg
fisubs
mov
ja
fdivp
sub
ret
mov
addr16
pop
test
adc
fimull
push
or
add
ffreep
cli
loop
or
xor
lock
sub
ror
daa
jg
xchg
cmc
sbb
gs
and
add
or
add
daa
mov
push
xlat
mov
lahf
inc
fbld
or
xorb
aam
xchg
hlt
ficoml
fstl
in
ljmp
sahf
lahf
loope,pt
xlat
jmp
xchg
xor
imul
ja
enter
and
repz
sub
inc
mov
cmp
popa
pop
mov
lahf
dec
ret
or
mov
negb
mov
test
jmp
ss
rcl
pushf
lds
ds
and
dec
mov
xchg
adc
insb
movsb
add
jp
mull
fidivs
shll
fisubs
push
in
sbb
add
sub
fadd
dec
and
scas
mov
mov
lods
or
fsub
pop
stc
pop
fmuls
inc
push
xchg
sub
dec
mov
adc
mov
in
dec
adc
cmc
fistpll
fwait
outsl
push
jmp
push
mov
mov
out
mov
sbb
je
mov
mov
cmp
jg,pn
sub
pop
xor
and
loopne
jno
xchg
or
or
std
sbb
cwtl
jecxz
xchg
daa
test
and
repz
adc
data16
test
or
push
and
cmp
pop
sub
adc
jmp
mov
mov
ds
test
lahf
cltd
cmp
inc
inc
jle
lods
testb
addr16
rorb
mov
push
cmpsb
jae
cld
outsb
sub
sub
mov
pop
in
xchg
pop
mov
movsl
push
mov
and
sarl
fbstp
in
xor
popl
lahf
xchg
dec
jnp
or
xchg
imul
sub
mov
insb
xor
ja
mov
or
mov
mov
repz
mov
test
pop
call
jne
js
pop
aad
mull
jp
add
lock
js
push
jae
xchg
int
jae
arpl
addb
dec
xor
int3
decl
jne
mull
sbb
fcomps
xor
xor
ficompl
adc
gs
xchg
add
aad
mov
adc
loope
push
fisubs
inc
fimull
cmpl
dec
adc
xor
mov
jno
shrb
test
aas
mov
push
pop
sahf
sbbl
and
push
test
jne
sti
xchg
lods
hlt
clc
pop
push
add
stos
add
ljmp
mov
das
fs
jge
fmull
mov
and
inc
adc
lret
icebp
push
pop
or
movups
pushf
jle
fmuls
fidivrl
jne
testb
cli
adc
dec
sahf
cmp
test
or
jno
mov
or
loope
mov
add
icebp
push
sub
cmp
xlat
mov
add
lret
pop
sub
int3
push
xchg
cmp
and
pop
mov
add
push
lcall
nop
pop
sbb
jge
popa
add
sub
sbb
fmuls
inc
incb
scas
mov
out
adc
xlat
fists
fisubrs
out
inc
fxch
xor
xchg
sbb
repz
arpl
inc
leave
pusha
dec
dec
shrl
xchg
pop
and
sahf
xor
test
in
sbb
in
iret
icebp
pusha
cld
pop
sbb
dec
movsb
loopne
mov
repnz
sti
adc
jp
mov
push
sub
cmpsb
cmp
add
add
xchg
push
or
fcoms
out
scas
rcrl
jb
cli
pop
mov
xchg
jbe
push
pop
test
pop
mov
int
pop
pop
xchg
mov
shll
push
ja
pop
mov
orb
jle
movsb
out
imul
cmc
push
jl
orps
adc
ficoml
and
imul
in
pop
sbb
ficompl
pop
std
mov
sahf
mov
icebp
adc
mov
add
sbb
fimuls
xchg
aaa
add
add
lret
rorb
mov
jmp
dec
dec
mov
push
sbb
dec
xor
push
inc
sar
sti
aad
mov
ret
subb
ds
fwait
stos
addr16
pop
sub
test
lds
enter
inc
add
mov
sbb
pop
inc
mov
pop
or
pop
loopne
add
sub
fistpll
add
xchg
repz
xchg
mov
mov
insl
mov
mov
imul
push
push
push
sub
and
jnp
addr16
pop
jg
mov
mov
ret
cmc
add
jnp
mov
sub
mov
das
filds
jg
mov
mov
dec
out
fnstcw
inc
mov
add
mov
fisubrs
cmp
push
push
mov
cmp
add
and
sub
or
cmp
test
sahf
jae
rorb
dec
mov
xchg
cmp
jl
aam
or
mov
jmp
fadds
and
aad
mov
adc
xor
cmp
call
mov
subb
iret
add
into
mov
mov
lock
in
xchg
mov
mov
adc
popa
gs
sbb
or
jnp
sbb
fmul
enter
inc
pusha
sub
loopne
mov
push
pop
or
inc
and
rclb
dec
js
es
out
fwait
xchg
sbb
or
mov
aaa
mov
aaa
loope
push
xchg
mov
cmc
mov
inc
movsl
mov
mov
pop
push
enter
cmpsl
testb
loop
lods
popl
cld
xchg
js
icebp
xlat
pop
pop
xorl
push
fs
dec
push
sti
les
stc
mov
cs
inc
jns
andb
mov
popa
jo
movsl
push
jge
std
cmp
insl
cmp
movsl
stos
push
testl
sbb
inc
sti
mov
or
adc
dec
cmp
in
arpl
push
lods
xor
fistpll
add
mov
jp
and
repnz
dec
push
movsl
cli
mov
outsb
push
sub
enter
pop
or
cmpsl
dec
mull
cs
xchg
fbstp
and
fisttpll
xchg
xor
dec
loope
push
mov
scas
sub
pop
or
mov
in
mov
repnz
pushf
adc
or
je
bnd
mov
xchg
rcll
fldenv
aad
pop
adc
rcll
mov
sahf
test
js
pop
adc
sub
in
scas
mov
scas
rclb
jle
cwtl
mov
push
push
jl
call
push
outsb
push
jmp
pop
jnp
jb
sub
scas
insl
nop
jl
lret
cmp
and
or
xor
mov
hlt
or
pop
xchg
mov
mov
dec
inc
push
cmp
sbb
xor
hlt
out
fdivrs
push
mov
fistl
jbe
cmp
push
loopne
push
sbb
mov
dec
pushf
icebp
cmp
test
out
std
mov
loope
cmpsb
bound
xchg
or
jg
jecxz
aaa
sub
mov
xchg
sub
aas
les
adc
pop
lds
adc
dec
lds
xchg
sbb
hlt
pop
lcall
shrl
je
jmp
dec
call
daa
fsub
sti
repz
adc
adc
or
inc
les
les
lds
stos
push
jge
cmpb
dec
bound
and
pop
out
mov
mov
ss
shlb
cmp
pop
cmp
daa
loopew
push
arpl
pop
jg
cmpsl
adc
mov
xor
subl
cmp
mov
orb
push
adc
imul
insl
push
rclb
fs
mov
mov
xchg
in
jmp
fnstcw
mov
clc
jno
adc
adc
imull
jle
xchg
xor
pop
xchg
dec
jecxz
pop
xor
lret
mov
push
pop
mov
pop
mov
repnz
out
imul
outsl
test
cmc
sbb
ds
out
int
cs
ss
xchg
dec
mov
dec
fcompl
sarb
dec
dec
inc
popa
aas
add
aaa
in
inc
aam
aad
push
mov
fwait
std
addr16
add
mov
mov
mov
rolb
cmpl
mov
sbb
in
out
stc
fcoml
push
xlat
shrb
jp
insl
sub
cmp
lds
push
mov
cmp
lods
xor
orb
dec
out
ror
add
ds
gs
frstor
xchg
dec
ljmp
or
push
imul
inc
lcall
mov
xor
add
dec
push
aas
or
mov
ljmp
aad
mov
xchg
xor
adcl
les
les
jno
test
sarb
pop
icebp
stos
dec
fisttps
xchg
ficoml
jnp
lret
add
pop
test
movsl
hlt
jns
mov
sbbl
jge
push
or
imul
fldcw
in
cwtl
inc
mov
xchg
fbld
jp
mov
loopne
push
std
lock
pop
adc
pusha
sub
mov
lock
fstl
bound
mov
dec
ljmpw
mov
scas
jno
outsl
push
mov
or
mov
xchg
jmp
xchg
push
popa
ss
lret
test
cmp
adc
and
call
inc
fcmove
pop
hlt
mov
dec
add
aaa
cmp
in
ffree
pop
pop
and
inc
mov
xchg
mov
mov
lock
jb
mov
dec
xor
push
push
lcall
inc
fbstp
ljmp
decl
ja
mov
and
lcall
inc
jl
fdivr
sub
fsts
mov
pop
dec
mov
rcrb
pop
inc
mov
adc
xchg
xchg
repnz
xchg
popa
scas
xchg
cmp
fisttpl
pushf
inc
or
lods
outsb
pop
mov
cmp
xor
ja
popf
shll
std
cltd
clc
dec
fadd
dec
push
in
inc
and
jae
test
jge
sbb
mov
push
movsl
repz
push
lock
sub
jo
mov
jle
stc
imul
hlt
in
in
cmp
fnsave
cmp
pop
outsl
adc
sub
ja
out
mov
fwait
inc
fmuls
mov
std
dec
sub
int
mov
add
lcall
cmp
sbb
stc
out
jns
pop
stos
xlat
iret
std
mov
cmpsl
int3
jb
ret
orb
outsb
fnstsw
mov
outsb
dec
test
dec
nop
sbb
sub
int
add
pop
test
faddl
lods
push
sbb
repnz
mov
push
jns
fistps
or
push
movl
xor
push
push
sub
push
inc
icebp
lret
jo
cmpsb
inc
xchg
xchg
repnz
sub
lret
bound
mov
sub
stc
loop
or
add
lret
push
pop
push
jge
pusha
pusha
mov
loope
adc
mov
imul
pop
inc
xchg
into
inc
data16
jns
iret
xor
iret
cmc
inc
xchg
jae
les
and
iret
into
push
fsubrs
xchg
rcll
aad
push
cmpsb
xchg
repnz
xchg
shld
daa
dec
cmp
or
orl
xchg
cmpsl
jb
repnz
outsb
adcl
mov
mov
js
negb
mov
pop
insb
sbb
lahf
ret
enter
push
inc
jb
sbb
pusha
dec
fidivl
imul
mov
mov
push
lock
outsb
xchg
pop
movsb
xor
arpl
nop
mov
adc
mov
shrl
outsl
or
sbb
inc
mov
stc
mov
xchg
mov
rorl
xor
sbb
push
cmpsb
insb
push
adc
sbb
stos
adc
imul
cli
lea
sbb
shlb
leave
les
inc
fnstsw
jo
scas
mov
fwait
add
xchg
lret
xor
mov
cmpsl
xor
fabs
push
dec
les
cltd
mov
mov
in
pop
sbb
or
outsb
dec
mov
leave
mov
jnp
bound
ret
fiadds
pop
not
push
mov
jmp
in
xor
repnz
adcl
cmp
push
jg
rcr
bound
jno
movsl
inc
mov
jae
cwtl
fwait
sub
out
xlat
push
cmp
push
ret
clc
mov
jg
and
stos
dec
hlt
in
hlt
fistl
int3
sbb
nop
iret
lahf
fisttpll
imul
icebp
cmp
int
pop
inc
fistpll
pop
cld
and
push
jae
xor
pushf
mov
or
pusha
and
pop
cmpsb
or
loop
popf
pop
addr16
rcr
iret
fnstcw
jle
ret
or
push
mov
repz
inc
adc
and
aam
js
and
xchg
or
aaa
xlat
lods
xor
xchg
fisubs
and
shl
cs
popa
cwtl
mov
pusha
movsl
xchg
add
sbb
loop
inc
andl
ss
pop
xchg
xor
mov
sub
add
cmp
movsb
arpl
or
subl
fwait
lret
jae
ljmp
and
scas
pop
pop
xchg
repz
dec
jns
xchg
stos
jmp
hlt
rcl
pop
and
mov
pop
lcall
jno
jecxz
sub
lods
mov
adc
das
test
push
sti
in
outsl
cmp
sub
das
push
mov
sti
add
cmpsl
loope
mov
cmc
adc
jnp
icebp
out
ficoml
aas
dec
lds
rcll
insl
cmp
clc
jne
jecxz
xor
add
or
xor
cmc
mov
in
push
pop
xchg
xor
lock
pop
fnstenv
push
aad
dec
popl
into
out
and
or
or
gs
push
xor
in
xchg
std
fcomi
ffree
fmull
int3
mov
xchg
shlb
add
test
push
in
inc
dec
cmp
or
es
enter
dec
adc
mov
loop
push
arpl
mov
adc
xchg
xor
cmpsl
mov
roll
ret
xchg
out
in
int
imul
xchg
fstps
adc
lahf
and
and
mov
mov
lea
dec
mov
dec
js
push
push
xorl
xor
mov
pop
clc
arpl
xor
int3
dec
push
shll
adc
popf
cmpsb
les
adc
ret
iret
pushf
enter
leave
sub
mov
push
and
jmp
das
pushf
fs
incl
mov
add
pushf
xor
or
mov
or
inc
shlb
std
pop
jmp
and
sbb
mov
outsl
imul
cwtl
cmp
icebp
or
pop
jns
xchg
pushf
fisubrs
aas
cmp
sarb
adc
stc
mov
gs
mov
mov
mov
stos
cmpsl
loope
adc
dec
out
fldt
insl
vmaxps
insl
mov
mov
test
insb
into
jbe
and
scas
push
mov
mov
jb
clc
cmp
popf
dec
inc
add
addr16
shrl
clc
push
jbe
cwtl
icebp
imul
cmp
xor
mov
test
xchg
hlt
xchg
fcmove
adc
movsl
mov
lahf
pop
cmpsb
in
mov
inc
mov
sub
xor
fs
mov
sub
pop
lods
lahf
loopne
imul
lods
cltd
cld
repz
mov
adc
in
int3
mov
xor
cmp
adc
gs
jl
pop
dec
testb
adc
xor
int
cmp
arpl
or
les
mov
mov
ret
aad
mov
xor
add
dec
and
push
jmp
cmpsb
fwait
test
cmp
add
addl
es
cltd
arpl
fimull
sub
lods
jb
add
dec
fcmove
daa
lahf
push
aaa
es
inc
sarb
pop
jb
add
mov
daa
call
negb
in
and
pop
pop
push
out
adc
mov
scas
gs
or
xchg
rorb
sahf
push
xor
mov
jg
stos
movsl
in
loopne
or
stos
adc
mov
in
out
add
loope
sbb
or
in
xor
stos
xchg
adc
mov
mov
mov
mov
jae
push
and
jg
sbb
icebp
iret
nop
sub
inc
dec
add
js
insl
enter
sbb
sbb
push
jne
jecxz
push
inc
in
stc
jne
pop
in
cmp
add
shrl
in
lret
jl
push
jle
or
inc
or
xor
rcr
rcr
pusha
lea
lcall
mov
ljmp
nop
pushf
loopne
addr16
sub
rol
dec
ret
cmp
mov
xor
sahf
sbb
daa
lret
mov
sub
loopne
mov
shrb
jns
imul
es
mov
push
mov
test
outsl
testb
jns
dec
in
pop
lods
push
aad
lcall
lret
inc
sarb
in
sub
mov
push
jp
inc
call
sti
mov
jo
inc
adcl
cmpsb
xchg
outsl
ss
mov
inc
adc
add
outsb
call
jne
lret
lahf
jl
addb
ljmp
dec
mov
ret
mov
addb
pushw
push
out
mov
xor
mov
insl
mov
jl
push
push
nop
out
out
es
fwait
inc
pushf
or
add
or
out
stos
mov
jle
mov
push
pop
sub
es
jne
imull
mov
xchg
aad
arpl
popa
mov
add
sub
hlt
add
repz
stos
mov
ret
into
iret
in
jns
jns
addr16
push
cmp
rol
fldenv
dec
add
xor
outsl
jb
scas
daa
sahf
movsb
fsub
pop
filds
stos
sbb
ds
mov
push
ss
lahf
cmp
mov
push
sbb
ret
sub
pop
mov
call
out
ss
int3
mov
cmp
test
inc
in
cmp
mov
lods
mov
or
mov
les
nop
stos
imul
dec
stos
shl
andl
mov
nop
sbb
nop
and
push
lea
dec
lahf
adc
int3
cmp
sub
insb
push
cltd
inc
add
jg
inc
xchg
xchg
fisttpl
and
pop
out
inc
pop
bswap
cmp
sahf
test
push
adc
and
int
sub
lock
pop
cmp
push
fcompl
test
inc
lds
dec
adc
cltd
add
dec
xlat
aaa
mov
sub
xchg
shl
sarb
adc
outsb
bound
cmpb
aaa
idivl
and
rcll
add
mov
test
cmpsb
xchg
and
fdivrs
test
lcall
outsl
int
inc
pop
cmp
push
mov
or
or
scas
dec
pop
ret
sub
inc
jno
inc
shlb
clc
sub
je
mov
repnz
jne
and
mov
cmpsl
testl
push
leave
push
outsl
scas
and
in
test
loop
jo
add
xor
shr
jo
pop
fwait
iret
and
mov
adc
and
mov
jb
fistpl
std
pop
mov
sarl
dec
lcall
and
cwtl
sar
call
or
adc
mov
sub
popf
dec
jp
bswap
shrb
adc
ja
dec
cmp
xor
int3
mov
aas
scas
popa
xchg
push
das
lock
sbb
dec
lret
push
test
imul
or
xlat
fidivrs
xor
mov
pop
insb
pop
fisttpll
je
out
inc
xchg
outsl
push
mov
je
negl
fs
xchg
loopne
fwait
dec
ret
and
xor
pop
jno
fisubrl
jne
insl
jb
aaa
int
push
aam
rolb
push
fcompl
mov
dec
sbb
cwtl
pop
jb
adc
push
sbb
addr16
jno
in
outsl
xchg
shl
clc
push
xorl
lods
pusha
movsl
mov
sbb
enter
lret
sub
outsl
addr16
adc
jg
arpl
jbe
adc
jnp
add
pop
mov
js
sbb
inc
jg
fmul
lea
cmp
cwtl
iret
adc
ja
dec
jo
sar
push
lea
lea
addr16
ficomps
jecxz
mov
lods
out
mov
inc
pop
mov
loop
pop
sbb
clc
mov
das
test
inc
sub
sub
pop
hlt
lahf
mov
dec
mov
lcall
sub
iret
loopne
dec
psubusb
rorl
test
orb
pop
jb
ficomps
sub
mov
jmp
mov
push
sbb
popf
mov
lcall
inc
rcrb
in
scas
adc
in
push
sti
int3
mov
mov
pushf
xorl
imul
imul
in
cltd
scas
push
mov
scas
repnz
xchg
popf
add
insb
rcrl
xor
jl
addr16
jle
xlat
xor
movnti
or
mov
jle
movsb
test
jg
push
test
xchg
cmc
jle
jle
lcall
test
lds
jb
xchg
inc
xlat
scas
xchg
inc
cld
sbb
inc
mov
out
out
pop
and
or
adc
sub
jl
xchg
ret
in
movsl
or
xchg
sub
stos
inc
push
jg
hlt
imul
imul
push
mov
xor
movsl
push
les
or
sub
inc
cmp
cltd
pop
mov
insl
out
mov
mov
push
cmp
imul
rclb
fnstcw
lock
and
cli
div
pusha
lret
jnp
mov
rclb
or
xor
add
inc
lret
fcmovbe
push
lods
mov
add
cmp
int3
mov
mov
or
stos
mov
mov
dec
pusha
ljmp
imul
xchg
cmp
repnz
aas
fnsave
push
in
mov
pop
xchg
fs
jno
dec
push
cmp
sarl
and
jb
sub
pop
lret
gs
push
leave
jle
push
addr16
mov
push
adc
call
fwait
rorl
inc
cmc
adc
push
jg
cmc
lahf
mov
test
adc
out
inc
popl
ficompl
jl
pop
jmp
mov
stc
fdivs
dec
dec
cmp
sbb
jle
adc
pushl
into
add
xchg
mov
or
sbb
mov
lods
mov
fistpll
ja
dec
std
jmp
dec
push
adc
shlb
lret
addb
jo
movsl
or
jle
lock
sub
test
adc
fdivrl
mov
add
bound
push
out
test
lcall
push
adcb
sbbl
and
xchg
das
shll
cmp
mov
mov
stos
jmp
aas
arpl
or
xchg
add
scas
int
jne
push
test
push
sub
fisubs
adc
cmc
dec
mov
dec
mov
hlt
jmp
cmp
mov
cltd
scas
cmpsb
push
mov
xchg
fdivr
lods
outsl
and
ljmp
or
ja
jae
mov
jle
bound
shrb
repnz
pop
ss
leave
pop
mov
pushf
bswap
dec
movsl
stc
jae
clc
or
ret
js
sarb
adc
test
sub
jnp
or
jno
les
dec
enter
js
add
rcrl
jmp
sub
div
pushf
xor
push
test
mov
or
jns
fiaddl
xor
jnp
lock
jg
adc
adc
xchg
repnz
pop
inc
ja
enter
mov
mov
dec
pushf
push
rorl
rcrb
out
filds
scas
and
popf
es
movsl
cld
mov
sub
jae
aam
xchg
mov
and
pop
lods
sub
xor
inc
outsb
scas
pop
mov
lret
sub
inc
mov
lock
cltd
xchg
test
gs
inc
sbb
sbb
adc
sbb
xor
jae
adc
or
lahf
xor
xchg
test
mov
pop
push
mov
and
test
add
jg
mov
push
pop
jl
icebp
int3
xor
xor
js
mov
iret
mov
sbbl
adc
sub
pop
mov
aaa
mov
lret
adc
jne
sbb
jb
shl
lods
sar
ljmp
stos
out
xorl
loop
fildll
cmpsl
cltd
pop
mov
lea
cli
pushf
out
inc
mov
into
loopne
add
inc
sub
lret
inc
jbe
xchg
cmc
xlat
int
mov
lea
popf
push
sub
cmp
jg
lcall
icebp
adc
lahf
push
icebp
fstpl
xchg
mov
dec
pusha
xchg
outsl
cmp
jmp
jmp
dec
cmpsb
inc
xchg
add
jge
test
notl
xchg
fs
addb
sbb
pop
sub
sbb
and
mov
xchg
in
mov
sbb
pop
mov
imul
xchg
or
leave
dec
test
xor
cmp
stos
jbe
movsb
inc
inc
mov
add
out
xchg
push
mov
pop
sub
fstpl
xchg
repnz
jbe
mov
jp
pop
xor
jp
or
out
shll
mov
pop
hlt
jno
adc
sub
adc
jbe
rcll
lcall
inc
push
jb
and
daa
inc
lcall
or
pushf
cmpsb
cmc
mov
push
ret
sbb
ljmp
int3
mov
jg
fdivp
xchg
pop
pop
xchg
repnz
jecxz
addr16
fwait
in
stc
jp
lods
xor
outsb
movsb
mov
repnz
addl
lcall
mov
js
fstps
imul
xlat
pop
mov
xchg
in
pushf
push
adc
arpl
imul
push
fldlg2
mov
sbb
push
shll
scas
outsb
adc
xlat
dec
sub
lock
js
jge
fcoms
std
shll
jne
xchg
fadd
jmp
sahf
das
push
js
mov
out
popl
xor
dec
adc
and
pcmpgtd
shl
and
fildl
mov
or
mov
cld
mull
lahf
jmp
cwtl
cwtl
lods
jmp
inc
xor
arpl
lea
add
inc
push
and
mov
jne
sar
mov
jle
push
pop
js
or
call
mov
adc
cmp
stc
vmwrite
add
stos
enter
mov
data16
jnp
jl
add
shlb
or
int
cmp
and
cmpsl
lret
push
jle
bound
pop
lods
adc
popf
out
lds
pop
ljmp
xchg
dec
movsb
popf
idivb
nop
push
jmp
out
or
lret
mov
xlat
mov
cmpsb
rolb
in
pop
inc
stc
movsb
sti
push
jmp
jge
gs
dec
pop
sbb
divb
push
dec
cmp
xor
jp
jge
lods
push
addr16
xchg
mov
add
repnz
jae
mov
sbb
stc
sub
xchg
mov
sbbb
scas
inc
stos
js
in
sub
xchg
das
dec
mov
xchg
xchg
add
aad
xor
clc
jne
shrl
test
jg
inc
sub
mov
adc
fwait
push
movsb
push
sahf
push
cmp
mov
mov
push
in
sbb
leave
xor
add
mov
js
es
xchg
xor
aam
lea
loopne
sbb
sbb
adc
mov
aas
pop
pop
xchg
push
je
mov
pop
push
jmp
ret
sbb
mov
xchg
jp
out
mov
xchg
dec
pop
outsb
repz
jecxz
inc
mov
fnstenv
dec
in
or
je
andl
xor
mov
aam
and
mov
std
ja
shr
daa
frstor
jg
inc
out
into
xchg
dec
in
cmp
rorb
outsl
in
push
test
mov
pop
nop
imul
push
jb
xlat
lods
stc
inc
add
mov
xor
push
mov
sbbb
dec
sub
jb
lds
pop
inc
fisubrs
dec
pusha
cmp
xlat
add
add
push
push
jbe
push
dec
push
sarb
call
mov
lahf
mov
fisttpl
mov
mov
andb
sub
and
cmpsl
rcl
push
int
scas
adc
popf
add
add
inc
inc
jmp
push
inc
out
pop
sahf
test
lret
cmp
jnp
adc
or
push
push
mov
jno
sub
fdivrs
xor
mov
leave
sbb
inc
mov
xchg
leave
pop
int3
cli
outsl
mov
xchg
mov
shlb
pop
sub
pop
adc
xchg
inc
push
push
std
fisubl
es
lods
fldl2t
jl
repnz
adc
and
aad
and
jge
lahf
mov
mov
cwtl
fs
mov
mov
mov
adc
addr16
shrl
cmp
in
mov
lahf
or
stos
sub
fadds
adc
lret
add
popa
popf
sub
mov
stos
sub
add
cwtl
mov
push
push
test
pop
out
cwtl
sbb
jbe
ljmp
inc
into
jb
xor
inc
push
pushf
fsts
xchg
mov
mov
cmp
mov
lret
cmpsb
in
jne
or
push
daa
repnz
andl
bound
or
mov
lea
xchg
dec
adc
jle
pop
mov
cmp
xchg
push
push
xor
mov
inc
jl
lock
pop
jno
mov
arpl
mov
mov
int
imul
push
cli
xchg
fimuls
xchg
int3
out
fists
movsl
out
add
jle
sub
mov
loopne
or
inc
cwtl
es
mov
stos
sbb
sarb
fsubrs
ds
mov
shrb
mov
rorb
sub
push
xchg
xor
loopne
xor
and
outsb
in
xlat
jae
insl
pop
movsl
ja
mov
inc
movsb
les
andl
mov
test
enter
pop
mov
or
push
test
repnz
bound
add
movsl
sub
lods
xchg
push
cli
scas
xlat
xor
xchg
inc
jb
jmp
in
cmp
mov
loope
and
enter
mov
std
das
insb
add
in
and
insb
dec
push
mov
ds
jo
or
test
inc
lods
mov
or
or
cmp
imul
ss
dec
adc
cmc
push
jo
iret
nop
pop
pop
cmp
xor
sub
std
adc
push
sub
cmp
mov
push
xchg
jb
jmp
cmp
mov
daa
rcrb
mov
inc
add
add
icebp
loopne
dec
stc
adc
mov
rorl
arpl
lods
lahf
push
mov
addr16
adc
adc
sub
cmpsl
cwtl
inc
push
xchg
inc
pop
add
jmp
cmp
jne
sub
fildl
lahf
xor
and
jns
and
es
dec
hlt
fadd
pop
cltd
je
ss
leave
in
ret
das
jne
jmp
sub
adc
cmp
xchg
int
inc
sbb
in
cli
xor
stos
imul
pop
xor
adc
or
xor
scas
clc
xchg
jo
mov
int
push
sub
add
push
insb
jle
mov
mov
call
loopne
pop
cld
sbb
test
out
pop
gs
push
cmp
push
icebp
add
xor
scas
daa
mov
xchg
stc
or
xchg
jmp
sbb
negl
and
out
xchg
mov
insb
xchg
mov
pusha
push
imul
ret
pushf
cmp
clc
xor
or
aam
pop
sarb
enter
repnz
in
cmp
pushf
loop
pop
sbb
call
dec
mov
cmp
sub
cmp
push
aad
fsub
pop
xchg
or
iret
out
adc
dec
inc
xchg
es
je
xchg
mov
xchg
aas
or
jns
push
lcall
sbb
mov
ljmp
sahf
ficomps
shl
ror
mov
push
daa
into
imul
cmp
repnz
out
pop
arpl
ret
dec
iret
sub
aaa
xor
sbb
popf
shl
aam
sahf
orl
cmp
jae
imul
aam
cmp
rcl
aad
push
mov
mov
and
xor
bound
dec
dec
adc
jo
rol
xchg
pop
sub
push
or
cmc
push
lea
test
mov
adc
popa
mov
test
pusha
mov
sarb
scas
popf
ret
pop
sbb
loope
inc
mov
adc
push
mov
or
jbe
dec
mov
xchg
lods
test
cltd
sub
cmp
pop
xor
inc
cmp
mov
lods
ficomps
and
sbb
or
sub
fcompl
adc
int3
pusha
cmp
stos
xor
push
call
sbb
add
and
add
add
add
or
cmc
pop
jns
lcall
jg
mov
aas
and
popf
mov
shl
mov
mov
iret
adc
and
add
xchg
scas
sbb
and
std
aad
dec
push
icebp
inc
arpl
inc
fwait
pop
xorb
dec
xor
loop
mov
imul
xor
pop
cmp
ljmp
mov
ja
ret
stos
andl
outsb
add
mov
pop
dec
adc
lahf
dec
mov
out
lret
fisubl
int3
in
int3
cmp
test
xor
sub
xchg
call
bound
in
icebp
fisubs
dec
jae
and
in
mov
ret
es
out
stos
cld
inc
fisubrl
push
lock
lcall
push
xor
mov
int3
lods
fcomps
push
pop
push
adc
les
sbbb
sub
sub
add
and
push
or
mov
loopne
mov
xlat
mov
push
jno
lock
xchg
aaa
dec
jl
ret
ret
cmpb
push
ret
hlt
and
xchg
jg
insl
sub
imul
and
add
rorl
sbb
cwtl
mov
mov
dec
fs
lock
cmp
mov
adc
push
jno
pop
imul
mov
xchg
jmp
xchg
fstpt
cmpsl
fs
movsl
push
push
jo
das
fiadds
stc
loope
popf
xor
mov
mov
out
call
aam
sbb
and
lods
and
cmp
cmpsl
xchg
shlb
xchg
loopne
jmp
lret
sub
scas
push
ret
movsl
in
scas
loope
jno
roll
movl
add
fstl
xchg
js
xchg
cmpsb
cli
xorb
out
nop
xchg
xchg
mov
movsb
pushf
out
lcall
add
pop
pop
push
insl
lret
and
fucomi
cmp
test
das
add
rorb
mov
test
mov
xlat
jecxz
xchg
out
test
push
int3
js
jbe
insb
daa
mov
dec
fwait
xlat
mov
pusha
xor
fyl2xp1
test
lahf
pushf
sub
inc
xchg
xchg
fidivrs
out
in
pop
inc
fldt
addl
xchg
mov
inc
out
xor
cmp
dec
cwtl
inc
fisttpll
insb
nop
aam
test
pop
jle
sub
std
xor
jno
das
jl
add
inc
mov
inc
mov
int3
lret
lret
cmp
sbb
jns
mov
mov
ficomps
jne
rorb
lods
and
dec
add
push
fisttps
sahf
xchg
stc
push
cmp
jg
jl
mov
addr16
ficomps
in
and
mov
aas
sahf
jge
dec
fldenv
mov
mov
scas
mov
adc
je
mov
inc
out
out
lahf
mov
test
pop
jp
daa
dec
and
sbb
test
inc
jnp
jle
xor
out
insb
sub
pop
insl
and
out
ds
cwtl
pop
xchg
cwtl
cwtl
out
or
cli
mov
dec
jbe
xchg
imul
mov
xlat
xchg
stc
and
push
mov
or
lds
push
sub
mov
shll
dec
fsubl
repnz
ja
cmp
xchg
insb
outsb
call
enter
mov
pop
jp
xchg
lods
cmp
push
loop
fsqrt
in
jge
and
sbb
test
cmp
aad
rcll
jne
sub
mov
xchg
stc
xchg
xlat
sbb
clc
xlat
out
dec
push
push
mov
leave
jno
add
imul
sbb
pop
scas
mov
minps
sub
jle
in
adc
out
push
dec
cmpsl
cmc
lret
decb
jbe
jmp
testl
pop
mov
aam
mov
pop
and
jmp
adc
fiadds
movsl
testl
jo
in
jbe
dec
cwtl
in
shll
ja
sarl
jne
inc
lcall
hlt
je
inc
inc
popf
cmp
mov
inc
leave
imul
push
sbb
orl
pop
xlat
sar
loope
ja
movsl
or
sub
sbb
inc
jle
jle
fdivs
shll
rcrb
fs
inc
sub
outsl
xor
loopne
aas
dec
adc
sub
mov
cmp
fbstp
arpl
or
sub
imul
mov
mov
adc
cmp
arpl
mov
mov
into
call
mov
jl
pop
or
lret
pop
fstpt
pop
ror
sub
pop
push
add
insl
push
outsl
xor
sbb
imul
mov
fcmovb
lcall
icebp
xor
stos
repz
jmp
xchg
xchg
idivb
or
jecxz
pushf
xlat
insb
call
or
scas
icebp
or
icebp
aas
into
lods
popa
int
and
xchg
pop
fs
lcall
negb
jg
sbb
xor
aad
xchg
fsubp
xchg
mov
inc
inc
and
ret
dec
fwait
mov
rolb
das
arpl
stos
and
sar
xchg
jge
xchg
or
mov
cwtl
jns
adc
test
lods
adcb
aaa
push
mov
aam
repz
outsb
rol
pop
lods
add
mov
add
leave
mov
jbe
imul
addl
fistps
mov
dec
into
scas
ss
jmp
loop
push
test
fnstsw
mov
in
loopne
lret
cmp
cmp
xor
mov
xlat
movq
pop
fidivrs
lea
popa
sub
js
ja
cmpsl
push
rcll
aas
adc
clc
cmp
mov
dec
movsb
sbb
pop
je
ds
fstp
leave
push
out
imul
nop
fldenv
nop
mov
push
movsb
outsl
mov
jg
arpl
jecxz
in
hlt
pop
mov
repz
enter
cmpsl
add
push
sahf
hlt
les
int
movsl
sub
or
std
arpl
jbe
lcall
mov
fwait
push
mov
xor
cmp
nop
mov
pop
outsb
fistps
jbe
int3
outsl
mov
sbb
or
ja
xor
wrmsr
add
jne
mov
mov
aam
inc
out
inc
jno
fs
int3
xor
clc
mov
in
mov
add
pop
sbb
adc
lret
mov
and
call
push
sub
mov
pop
ds
imul
push
hlt
sub
clc
pushf
push
cltd
cmc
call
sub
cltd
xchg
scas
jne
sbb
aam
enter
mov
enter
pop
js
jmp
into
sti
xor
dec
sarb
pop
outsl
jge
cmc
repz
or
inc
iret
xchg
insl
add
mov
cmp
sbb
inc
pop
xor
xchg
adc
push
addr16
mov
push
mov
or
cld
adc
fbld
mov
cmp
arpl
movsl
lcall
xchg
pop
enter
loopne
sub
leave
cmp
dec
push
sbb
fsts
fwait
jbe
cwtl
jecxz
into
push
pop
adc
or
lock
add
jae
dec
add
ja
jle
sbb
mov
dec
movsl
sbb
addr16
call
or
insl
ss
pop
into
into
inc
lret
shrl
sbb
pushf
lods
push
sbb
mov
or
je
xor
loope
push
and
xor
sub
inc
xor
repnz
pop
fcompl
out
inc
push
push
jl
dec
sbb
push
and
pop
push
push
ficompl
adc
stos
mov
or
lock
push
add
aas
test
or
jo
mov
cwtl
stc
and
push
sbbl
mov
addl
xchg
push
dec
push
push
jp
jmp
sbb
add
or
ret
mov
inc
shr
shll
sti
mov
inc
cltd
lods
cltd
shr
adc
stc
sub
xchg
and
and
aaa
pop
and
ss
push
dec
dec
jne
xor
out
jns
mov
cmp
test
adc
test
bound
int3
pusha
mov
rol
dec
sub
daa
jle
mov
aam
mov
pop
ret
mov
subl
mov
loope
inc
push
out
and
pop
hlt
arpl
push
mov
push
daa
cmp
mov
xchg
popl
jg
inc
rolb
or
bound
mov
lods
xchg
mov
ds
mov
jmp
sbb
mov
pop
test
and
loope
jbe
push
xchg
bound
xchg
in
xchg
adc
ja
push
mov
sbb
sbb
cmpsb
cltd
imul
or
and
jg
pop
addb
sbb
inc
ljmp
jbe
jg
popf
bound
test
aaa
loop
mov
xchg
sub
inc
adc
lds
mov
mov
jge
mov
std
push
xchg
lret
and
lcall
daa
jns
sbb
pop
arpl
aas
std
push
jmp
ljmp
insb
cld
arpl
aaa
inc
xchg
jg
mov
pop
inc
dec
xchg
jecxz
movsb
cmpl
xor
sbb
popa
sub
xchg
insb
mov
lret
mov
push
adc
adc
hlt
std
sbb
movsl
mov
sar
cmp
loope
in
rol
lods
les
mov
out
add
pop
int3
sbb
in
icebp
sbb
mov
faddl
cmp
pusha
in
inc
mov
push
hlt
stos
dec
pop
pop
std
sbb
sbb
xchg
or
insb
enter
mov
int3
rcrl
and
int3
adc
sbb
lret
dec
daa
int
or
sbb
loop
inc
iret
jecxz
push
in
lods
fbld
cld
xchg
mov
lret
jo
push
pop
pop
sbb
sbb
leave
iret
data16
aad
adcb
pusha
sahf
inc
xor
mov
cli
inc
cmpsl
inc
xor
lods
call
xor
adc
mov
xchg
std
lea
mov
in
mov
cmp
outsl
ss
pop
or
xorb
daa
and
mov
psubq
push
lods
xchg
mov
scas
mov
or
mov
mov
cltd
mov
std
mov
push
push
sub
sub
out
jecxz
and
into
fadds
adc
or
std
outsb
push
shlb
or
adc
jae
xor
push
push
xor
test
out
push
mov
xchg
movsb
push
mov
fisttpl
arpl
out
lcall
add
pop
mov
or
adcl
cli
jecxz
lods
mov
mov
popa
adc
jo
insb
sbb
cmpsb
fs
std
pop
or
sti
in
add
loop
and
js
sti
mov
push
add
test
es
std
mov
into
or
sub
or
pop
ret
add
lock
xor
and
repz
dec
cmp
clc
sbbb
mov
mov
push
xchg
aad
int3
xor
push
add
test
push
mov
fildll
dec
pusha
ret
cwtl
xchg
test
mov
loope
sbb
das
mov
popa
dec
sbb
sbb
arpl
xor
cmpsb
add
int3
insb
stc
addr16
pushf
bound
hlt
mov
addb
mov
push
leave
jb
in
shrb
inc
cmp
std
fdivr
lahf
mov
add
jecxz
js
xchg
sub
and
out
push
pop
xlat
nop
push
xor
jl
pop
in
and
mov
cltd
gs
jne
cmp
adc
lea
inc
add
jl
insl
dec
repnz
sub
leave
pop
repz
aam
mov
hlt
mov
das
add
scas
push
push
in
int3
das
push
fidivl
nop
scas
adc
cs
ja
in
jp
xor
daa
push
push
xor
xchg
out
aaa
int
data16
fstpt
pop
stos
incb
jnp
push
repz
shlb
pop
mov
or
inc
sbb
dec
mov
dec
sbb
daa
gs
fisttpll
ds
jne
xchg
stc
pop
add
mov
sahf
sbb
call
ljmp
add
leave
movsl
xchg
in
lcall
iret
rclb
popa
rorl
adc
insl
inc
popa
push
mov
jp
xchg
dec
inc
xchg
mov
inc
test
cmp
inc
cmp
sub
jnp
cmpb
mov
cld
mov
mov
fldcw
xchg
jmp
xchg
insl
add
sub
mov
cmc
std
fs
sub
cmpsb
xchg
add
pop
aad
pushf
jnp
es
data16
sbb
stos
fldt
mov
xchg
jns
int3
fmuls
xor
aam
dec
decb
mov
out
inc
lds
cwtl
fnstsw
mov
or
movsb
fstl
rcr
test
lret
inc
jae
inc
push
cmp
lods
nop
in
sbb
cmp
lahf
sbb
cmpsl
add
sbb
int
mov
loope
add
orl
xchg
loope
xorl
pusha
mov
jae
xchg
jle
add
dec
jle
pop
pop
sbb
add
and
xor
mov
adc
pop
ror
les
out
add
mov
testl
jnp
hlt
lret
lock
setl
adc
dec
lea
iret
pop
test
sbb
push
in
insb
xchg
cmp
sub
aad
shl
adcl
xchg
mov
xor
mov
and
sub
icebp
sbb
inc
cmp
cltd
je
fwait
sbb
inc
test
sti
cld
adc
outsl
mov
xchg
aam
cmpsl
sbb
and
jb
test
xor
incl
sub
shll
sbbb
pop
mov
push
and
pop
inc
sub
rcrl
inc
jle
push
pop
cmp
icebp
add
movsl
inc
test
pushf
test
out
mov
jmp
mov
jne
inc
jae
mov
sub
mov
and
lds
stc
xor
jle
lcall
or
pusha
push
rcrl
nop
sbb
es
shrl
sub
mov
jmp
leave
pop
fisubl
xor
in
sahf
sbb
xchg
lcall
lds
shl
sbb
xchg
lods
inc
push
pop
jae
ficoms
ss
in
movsb
jns
je
dec
mov
adc
push
push
sarb
cmp
int
mov
mov
jbe
xor
jmp
mov
lods
pushf
push
ss
sahf
iret
dec
loopne
pop
cld
cmp
add
test
pop
insl
dec
sub
xor
dec
inc
into
scas
push
dec
jb
push
cmpsb
lods
xchg
pop
inc
jae
adc
xchg
loope
and
cld
mov
stc
cwtl
add
nop
roll
push
pop
imul
adc
shll
or
into
inc
ds
lahf
fdivrp
sbb
mov
xchg
adc
push
and
pause
and
pop
imul
enter
jae
push
sbb
and
inc
out
stc
mov
xor
movsb
out
inc
mov
pop
mov
outsl
call
out
insb
fwait
add
sar
or
xchg
test
cmp
sub
daa
inc
xor
cmpsl
test
jg
cmp
subb
cli
push
lea
cmp
or
sbb
neg
scas
jle
adc
stos
mov
shlb
inc
movsb
sub
pop
and
lcall
inc
pop
js
jb
jp
mov
push
dec
mov
dec
fisubl
mov
cmp
and
scas
in
or
pop
lret
ljmp
mov
dec
push
cmp
mov
ja
test
or
ss
call
mov
pop
sbb
xor
aas
movsb
mov
mov
pop
lcall
cmpsl
popf
push
cwtl
push
pushf
ja
mov
icebp
arpl
xchg
sbb
js
xchg
cmp
jo
inc
mov
cltd
sub
or
mov
inc
pop
dec
sbb
fmul
dec
aaa
and
push
mov
mov
mov
mov
icebp
je
lods
push
cmp
out
ret
sub
cmc
jge
sbb
pop
lea
icebp
add
pop
dec
daa
jp
sbb
dec
or
jb
in
xchg
xor
pusha
mov
rorb
xor
mov
mov
lcall
ljmp
xor
enter
xor
lcall
cli
fstpt
xlat
fcmovnu
test
mov
pop
cmp
push
dec
mov
in
push
mov
enter
das
jmp
mov
ja
lods
push
and
jmp
cmc
int
stc
in
loopne
movsb
cmp
fdivrs
orl
jmp
test
imul
jmp
jo
add
mov
into
jnp
xor
mov
hlt
push
popf
xor
aad
mov
xchg
sahf
adc
inc
mov
iret
popa
fcmovnu
mov
xchg
adc
dec
insl
lret
and
or
pop
push
xlat
or
xor
adc
out
sbb
mov
mov
andb
inc
add
mov
sub
sub
jne
adc
dec
lret
mov
iret
scas
in
push
or
das
cltd
push
pop
rolb
loop
jae
push
aaa
mov
repz
gs
mov
pushf
outsl
cmp
cmp
push
sbbb
pop
sbb
xor
mov
out
dec
cwtl
test
stos
cmp
mov
adc
sbb
dec
jnp
jge
lds
fwait
xor
popa
ljmp
fldcw
leave
pop
and
pop
cld
xchg
int
xchg
rcrl
pusha
outsb
movsb
jge
daa
loop
or
gs
iret
mov
dec
jbe
add
ret
dec
mov
xor
mov
jl
int
xchg
add
xor
xorb
xor
imul
mov
dec
xor
mov
or
mov
adc
ret
adc
outsb
xor
mov
cmc
aas
fildll
repnz
or
jp
add
mov
mov
mov
push
jp
add
lret
sarb
mov
inc
cmp
lods
adc
pop
pop
cmp
imul
enter
or
push
dec
setle
insl
data16
xchg
in
add
jle
in
das
mov
mov
mov
cltd
bound
dec
fldcw
push
inc
add
rolb
push
dec
repz
sbb
dec
stc
imul
negb
mov
outsb
scas
adc
push
or
std
jecxz
sarl
repnz
lock
and
inc
or
adc
cmp
ljmp
ret
addr16
push
and
int
mov
aas
movsb
add
pop
stos
jo
sub
or
movsb
xchg
lret
jmp
cmp
dec
push
shll
std
sti
inc
mov
add
testl
xchg
jmp
xor
into
loop
inc
push
mov
add
lods
dec
sub
out
push
cs
pop
pop
je
mov
and
xor
push
shrl
and
shll
pop
aas
mov
in
es
add
mov
adc
pop
icebp
popf
add
into
sub
inc
pop
pop
mov
xlat
hlt
sbb
xchg
pop
add
test
int3
add
pop
iret
sub
mov
push
mov
test
roll
sbb
stc
and
mov
inc
mov
iret
test
sbb
push
push
sbb
xor
jge
jo
mov
loop
mov
xchg
clc
and
lcall
mov
int
cmp
mov
hlt
in
mov
dec
and
pop
clc
fimuls
sbb
lahf
scas
mov
das
xor
cmp
push
mov
xchg
movsb
addr16
jl
aas
test
jmp
popa
inc
rsqrtps
dec
cmp
in
cs
ja
adc
mov
push
mov
sub
faddp
ljmp
fistpl
mov
mov
scas
scas
fcmovb
stos
hlt
xchg
dec
notl
or
insl
jmp
test
pop
adc
sbb
ljmp
fsubl
lfs
gs
mov
scas
jno
insl
xor
repnz
jo
mov
aad
mov
pop
mov
out
xor
jno
xor
sub
and
sub
and
test
mov
fsubl
inc
clc
fdivp
lods
ljmp
rorb
cmc
das
cmp
fwait
and
push
lods
xchg
in
sbbb
pop
add
std
cmp
mov
xchg
ja
sub
add
es
rcll
mov
pop
mov
or
inc
cli
mov
shll
scas
cmp
xchg
sbb
jge
in
mov
repnz
adc
jl
imul
adc
outsl
popa
enter
and
pop
pop
mov
pushf
push
mov
insb
pop
fmuls
cmpsb
lea
andl
rcrl
test
jle
pop
lret
sarb
lods
out
push
xor
outsl
call
out
mov
das
add
mov
fisubrs
sbb
or
jns
mov
test
out
sbb
sub
gs
outsb
sahf
loop
dec
movsb
int
mov
neg
and
add
into
adc
in
mov
setb
shlb
xchg
xchg
inc
xor
ficomps
mov
daa
and
inc
push
out
mov
xor
push
or
mov
mov
xcrypt-cfb
cmpsl
cmpsb
push
mov
push
inc
mov
mov
sbb
jno
dec
adc
scas
in
shlb
mov
cwtl
repz
iret
adc
sub
and
popf
jbe
sti
stc
lds
adc
test
pop
inc
out
mov
jp
adc
cmp
push
sub
xchg
xchg
imul
jno
int
sub
push
jo
inc
repnz
shll
adc
sbb
pop
inc
lahf
mov
or
xchg
cmp
repz
jl
sbbl
jmp
mov
xor
stc
fsubs
test
les
shrb
pop
xchg
adc
call
or
pop
dec
mov
pop
mov
pop
into
jecxz
popa
imull
rcrl
pop
cli
cmc
in
imul
push
movsb
xchg
lods
jne
nop
mov
xchg
pop
ljmp
cmp
leave
push
pop
jns
dec
jns
inc
pop
pop
cli
mov
sub
std
shl
pop
rol
mov
stos
fstl
pop
lock
cltd
inc
int3
jge
inc
push
adc
pop
pop
pop
add
shll
lea
cmpsl
loope
mov
push
sbb
lahf
lea
pop
imul
push
scas
jle
loop
sbb
mov
les
cmpsl
adc
out
xchg
in
mov
cltd
shl
mov
call
jnp
xchg
mov
sbb
fdivr
pop
pop
mov
jae
xor
mov
sub
lret
aas
out
lock
test
push
push
push
das
out
nop
mov
push
inc
dec
es
pushf
test
int
insl
nop
insl
cmp
push
out
push
or
xchg
not
and
movsl
ret
jno
or
rcrb
adc
or
or
fisubl
jo
icebp
pusha
inc
jmp
out
mov
or
sahf
fnsave
sub
mulb
lock
mov
enter
fcmovne
mov
out
shlb
xchg
cmp
cmp
lock
push
sbb
scas
and
int
mov
fs
fstl
call
dec
sbb
mov
orb
add
xchg
inc
pop
inc
imul
or
call
out
mov
sti
jl
xor
imul
mov
dec
mov
ret
lret
shll
mov
rcr
pushf
or
inc
pushf
mov
sarb
push
sbb
mov
sbb
mov
and
jae
inc
sub
add
xchg
pop
inc
pop
or
pop
lods
arpl
mov
ljmp
shrl
hlt
pop
or
or
gs
sbb
mov
pop
jmp
jnp
inc
mov
mov
mov
add
gs
adc
mov
into
pop
dec
out
mov
icebp
dec
mov
xchg
mov
mov
iret
xchg
push
and
cli
je
add
mov
stc
add
pushf
push
mov
or
jmp
inc
mov
mov
mov
outsl
pop
bound
jp
test
cmp
sub
iret
clc
imul
pop
sub
lret
sbb
roll
movsb
int3
loop
insl
stc
xor
andl
clc
daa
ret
lods
cltd
push
and
xorb
jnp
hlt
mov
mov
or
lods
test
or
cmpsb
ret
rolb
xchg
aam
and
lea
call
xor
cmp
mov
mov
popf
xorb
pop
jns
int3
mov
aam
imul
push
mov
xchg
adc
fs
mov
sub
call
addl
jns
push
mov
cli
lcall
rol
push
inc
and
push
pop
and
mov
pop
push
mov
test
sub
cld
ja
jno
dec
test
int3
fisubrs
inc
leave
repnz
and
in
repz
and
mov
ljmp
mov
mov
addl
repnz
lret
mov
jp
sahf
bound
cmp
pop
mov
shr
xor
pusha
int
ss
xchg
mov
ja
inc
pop
sub
xchg
jecxz
pop
pop
sub
mov
xor
push
movsl
xchg
adc
and
or
fstl
lret
or
cmp
mov
push
sub
push
jp
popa
test
pop
mov
jle
cmp
std
lea
enter
inc
dec
sub
sub
mov
bound
andl
int
mov
pushf
shl
or
inc
std
lods
mov
or
push
ds
int
jecxz
mov
out
mov
fidivrl
clc
call
cli
adc
mov
add
in
mov
movsb
insb
adc
loopne
aad
ret
push
adc
pop
aad
popa
mov
mov
sahf
push
gs
mov
in
cmp
sbb
mov
lds
sub
std
mov
js
push
fmuls
adcb
test
cmc
mov
mov
cmpsl
movsb
leave
stos
mov
cwtl
jp
loop
iret
ljmp
and
adc
aas
or
stos
mov
rcll
leave
scas
push
rcr
add
cli
cmp
and
mov
je
pop
mov
jmp
stos
mov
rcl
pop
jmp
mov
scas
and
repz
adc
lcall
repz
stos
xchg
test
push
push
push
pushf
or
cmp
add
jg
mov
mov
outsb
repnz
cmpsb
dec
in
jge
xchg
fs
fdivl
inc
jmp
jge
outsl
inc
fsts
mov
xor
xchg
xor
sub
dec
jge
hlt
je
fmulp
mov
test
repz
iret
mov
scas
mov
mov
or
movsb
sub
add
fmul
or
shrl
inc
xor
aad
sbb
pop
fs
cmc
in
insl
mov
clc
cmp
push
lea
leave
cmpsb
std
cltd
push
int3
ljmp
sub
jae
adc
mov
movl
notb
in
pop
fidivs
and
fidivl
cmc
stos
addr16
push
mov
and
ds
jnp
sti
lret
jns
arpl
push
xchg
movsl
cmpl
out
add
testb
in
andb
mov
push
mov
inc
pop
addl
loopne
outsb
dec
cmc
jmp
jmp
xor
imul
in
cltd
sub
xor
loopne
mov
sbb
jnp
ljmp
xorb
mov
jbe
jecxz
mov
xchg
insl
pop
add
xchg
xlat
adc
add
sub
test
push
iret
mov
dec
shll
xor
outsb
push
aad
inc
adc
or
dec
cwtl
repnz
test
arpl
lahf
push
pop
or
cwtl
mov
cmp
mov
imul
dec
xor
sbb
sub
cmc
pshufw
int3
or
test
inc
mov
push
in
mov
xor
int3
imull
and
inc
jbe
adc
xchg
push
lret
loope
xchg
lahf
cwtl
dec
mov
and
pop
xor
ss
cmp
lcall
leave
push
enter
xchg
cld
dec
xor
shlb
pop
pop
movb
cld
push
push
jmp
add
push
xor
and
jae
mov
sbb
fiaddl
hlt
aas
add
orl
clc
shlb
push
mov
lret
inc
inc
push
mov
mov
mov
push
pop
inc
lahf
pop
dec
shrl
iret
sbb
int3
test
call
xchg
mov
push
xor
shll
xor
cmp
jne
mov
fs
les
test
inc
push
test
pop
jl
outsl
int3
sub
fcoml
push
scas
rcll
pop
push
and
in
cmp
lret
mov
pusha
int3
pop
and
mov
out
lds
mov
js
je
ret
pop
aad
aaa
xor
mov
mov
fcompl
and
push
popf
popa
dec
sbb
sub
sbb
rcrb
rclb
add
fwait
sub
push
stos
fnstsw
iret
shll
cmpsl
sbb
inc
push
push
enter
pop
es
inc
mov
popa
test
fidivrl
out
ja
cmp
sbb
js
icebp
adc
pushf
sti
js
sbb
jg
add
jge
mov
fidivrs
addr16
xor
xchg
adc
and
popf
push
fstpl
mov
fs
scas
aad
xchg
addl
hlt
mov
sahf
jge
mov
xor
rorb
not
ljmp
call
insl
push
pop
int
repz
jb
inc
push
xchg
cmp
inc
or
add
in
int
loop
or
stos
out
imul
dec
pop
inc
xchg
jnp
data16
out
dec
imul
sbb
cmp
aaa
dec
repz
adc
mov
cmpsl
in
in
ret
pop
pop
inc
cltd
imulb
imul
cmpsl
jp
cld
imul
jo
or
insl
iret
outsb
rcrl
in
inc
test
xor
ja
fwait
nop
cmp
pushf
aas
push
jno
imul
clc
cmp
int
clc
mov
inc
hlt
xchg
mov
out
arpl
push
xchg
add
jmp
aam
aad
ss
rorl
scas
jae
dec
mov
call
enter
push
jbe
push
xchg
imul
das
pushl
mov
mov
jo
sbb
push
scas
dec
adcl
mov
sbb
orb
jmp
fdivr
nop
mov
aam
xlat
mov
xchg
arpl
mov
icebp
ja
lods
cmpsb
cmp
sbb
mov
push
testb
mov
ljmp
mov
into
stc
pop
ret
mov
mov
adc
lret
shlb
adc
or
add
pop
jne
mov
cmp
sbb
scas
jecxz
ljmp
sbb
imul
dec
jecxz
icebp
pinsrw
test
sub
jg
xchg
xchg
jmp
cmp
and
fidivrs
xor
leave
popa
push
mov
lcall
loop
add
dec
test
mov
xlat
and
aad
enter
test
int
sti
mov
push
fsubrl
outsb
mov
rorb
in
dec
icebp
lahf
idivb
and
test
aas
daa
or
not
insl
fldl
cmpsb
mov
subl
push
pop
ret
jb
test
pop
icebp
js
in
outsb
icebp
lea
inc
sbb
mov
jo
adc
lds
mov
subl
mov
notl
sbb
ljmp
movsb
into
push
pop
jl
rcrl
pop
dec
jno
mov
pop
sub
xlat
adc
mov
push
and
push
dec
out
dec
jns
insl
jns
cmpsb
pop
nop
and
and
xchg
push
sbb
sbb
inc
and
fcmovbe
lock
fwait
sbb
repnz
add
push
add
jmp
add
es
jb
push
mov
scas
call
shll
or
in
mov
insb
js
add
jae
pop
jg
and
lea
inc
shll
stos
cli
lods
push
dec
in
sahf
xor
inc
loopne
jne
arpl
inc
ja
cld
les
ds
sub
leave
fcmovne
dec
loope
pop
call
aam
testb
lret
xchg
inc
shrl
push
mov
mov
fwait
pop
pop
jecxz
inc
fwait
xor
mov
in
add
or
icebp
add
out
scas
mov
sub
xor
sbb
incl
cmpps
dec
mov
inc
dec
imul
ljmp
insb
pop
xchg
rclb
sub
fcomi
push
negl
js
in
add
mov
fstl
cmp
jl
lret
rcrl
icebp
outsb
mov
shlb
les
and
xor
sti
push
push
inc
cmp
movsl
loopne
inc
mov
push
test
in
push
mov
cmp
mov
dec
jbe
pop
xor
loope
dec
je
movsb
aas
loope
mov
hlt
sbb
clc
mov
loopne
shlb
repz
mov
repz
mov
leave
sbb
mov
cmp
cltd
aas
cmpsb
lods
inc
inc
xchg
mov
aas
into
mov
lret
and
push
in
loop
jb
add
mov
movsl
jge
lret
les
repnz
sub
inc
call
pop
aaa
inc
rorl
cmc
ret
into
es
mov
shl
add
xor
sbb
add
jne
and
int
shl
mov
lret
rclb
and
sbb
push
adc
jns
push
push
cmc
jecxz
int3
adc
xchg
push
fnstcw
cmc
cwtl
mov
std
imul
pop
mov
fnsave
mov
cmc
mov
mov
mov
xchg
dec
call
insb
mov
ret
bound
imul
jl
jmp
lret
enter
cs
and
xchg
gs
and
dec
mov
imul
mov
js
neg
call
mov
and
adc
fcomp
nop
sbb
incl
mov
stc
push
jo
repz
jbe
mov
mov
adc
mov
arpl
cld
fdivl
inc
andl
push
cld
imul
in
jmp
or
inc
sbb
pop
addl
ret
mov
pop
inc
bound
sti
push
call
jno
sub
xchg
jbe
dec
xor
pop
push
cltd
lret
dec
sub
das
push
das
cwtl
mov
sbb
leave
add
dec
push
cmpsb
push
mov
movsl
cld
nop
loop
fst
popa
pop
ret
dec
jno
ljmp
test
outsl
cmp
push
or
inc
sub
int3
add
xor
mov
shl
jg
adc
loop
shlb
pop
push
pop
sub
and
jns
jns
dec
push
sub
xlat
dec
adc
out
rcrl
mov
xchg
cmp
loopne
push
cmp
stos
test
pop
jb
leave
mov
inc
inc
cs
lock
in
incl
jnp
xor
mov
or
mov
push
cmp
mov
cltd
pop
inc
jbe
movswl
push
mov
std
jmp
push
push
movsb
enter
sub
dec
jmp
pop
lret
js
sbb
mov
jp
push
adc
mov
jmp
add
dec
adc
add
popa
push
mov
inc
js
leave
adc
cmp
sub
or
out
jb
mov
pop
dec
cmp
and
das
jge
sub
scas
adc
iret
mov
dec
imul
and
in
pop
mov
push
and
xor
sub
inc
ret
dec
fwait
xor
adc
fstps
hlt
xlat
adc
in
lods
sub
jae
mov
fs
jb
dec
fidivs
rcr
xorps
cmc
dec
and
out
jbe
adc
mov
test
adc
inc
rcrb
mov
xor
xchg
xchg
out
hlt
mov
pop
or
or
inc
push
add
xor
add
ja
popa
jne
inc
push
pop
insb
xor
pop
push
loop
jge
mov
mov
test
xchg
repnz
mov
inc
sbb
das
sahf
push
jae
mov
test
cmp
xor
mov
mov
movb
loopne
mov
dec
mov
aas
int
out
jle
mov
jg
or
mov
lods
leave
cmp
add
jge
fldcw
nop
stc
sub
js
lret
dec
add
jb
stos
jge
aas
fisubs
jp
jg
in
pop
mov
idiv
sub
cmp
fldt
xor
repnz
into
icebp
cltd
pop
pusha
cmp
sub
repnz
cmp
repnz
and
movsb
inc
lret
ja
push
cld
adc
xchg
repz
out
mov
cld
mov
rcll
jmp
shrd
fisubl
or
outsb
xchg
cmp
shlb
mov
sub
jo
dec
fcompl
cmpsb
stc
insb
pop
mov
xor
nop
xor
sbb
aad
push
mov
dec
pop
ljmp
sub
mov
jp
pusha
int
adc
mov
xchg
pop
mov
xchg
clc
pop
inc
aas
dec
cmp
fwait
or
imul
push
xchg
mov
jp
lret
mov
add
jae
xchg
mov
push
jge
mov
in
or
and
mov
push
add
pushf
int3
mov
push
jge
cmp
sub
cmp
fs
mov
jnp
pop
ja
mov
out
pop
sbb
inc
mov
cmpsl
inc
mov
sbb
popa
pop
adc
dec
cld
add
ja
cmpsl
insl
out
outsb
xchg
leave
adc
int
adc
xchg
add
fcmove
mov
movsb
add
je
pop
and
pop
xor
in
movsb
inc
pusha
hlt
scas
jmp
xchg
xlat
ret
cmpsl
lret
pop
xchg
xchg
cmp
mov
cmp
ljmp
mov
adc
cmp
xor
mov
dec
sahf
adc
mov
out
jge
inc
sbbb
lea
cs
cmp
xor
out
bound
outsl
ret
adc
fldenv
bound
arpl
lea
rorl
decb
add
push
es
outsl
and
rclb
mov
inc
dec
popl
mov
mov
nop
ljmp
push
cmp
sub
cmpsl
mov
cs
daa
ds
or
shrb
or
jno
orb
fisubrl
mov
in
xchg
mov
imul
addb
push
lea
shl
and
stc
mov
pop
mov
fs
inc
sub
testb
pop
int3
push
sahf
sub
stos
fmull
cmpl
out
mov
or
mov
cmp
inc
loop
adc
scas
shr
mov
or
cmc
pop
into
xchg
mov
xor
cmpsb
push
mov
or
sub
repz
pop
fildl
js
xchg
stc
and
clc
js
es
sbb
enter
dec
and
scas
rorl
mov
int3
into
pop
popa
lahf
call
pop
or
imul
push
adc
ljmp
jo
push
frstor
inc
pop
lret
test
push
fprem1
scas
lcall
jns
les
push
js
cs
jg
fdivs
jnp
adc
mov
inc
add
rclb
inc
inc
inc
add
in
roll
mov
insb
push
int
pushf
mov
jle
adc
push
rclb
idivl
sbbb
mov
jmp
nop
jp
daa
cmc
nop
xchg
jns
pop
outsb
rcrl
mov
les
xchg
mov
fldenv
clc
xlat
ret
push
aam
ret
mov
test
cmpsb
cmp
xchg
push
pop
stc
push
add
xor
push
ljmp
push
cmp
insl
pop
negl
xchg
mov
hlt
arpl
and
jmp
mov
icebp
push
call
fdivs
and
adc
mov
adc
shrd
cmp
pop
je
sub
rol
std
push
xchg
cmp
dec
sbb
mov
cmpsb
aaa
outsb
mov
pop
insb
mov
adc
add
imul
inc
popa
mov
pop
scas
add
push
jnp
mov
outsl
fnstenv
cmp
push
and
cmpsl
mov
xchg
out
mov
add
mov
cmp
dec
or
enter
cld
in
or
push
adcl
gs
pop
xchg
fisttpll
in
leave
call
add
xorl
adc
xchg
fsubs
mov
mov
fistl
xlat
push
je
jge
aad
jo
imul
gs
sti
fcoml
dec
mov
lock
and
sbb
dec
daa
jbe
xor
jp
adc
ss
cmp
imulb
movsl
out
gs
add
sub
loopne
cld
rcrl
or
dec
movsb
fstpt
cmp
lock
int3
aad
and
dec
shlb
mov
popf
into
mov
out
push
ret
adc
xor
mov
aam
std
push
mov
or
jmp
pushf
push
pop
dec
mov
cmp
jo
jg
out
or
mov
icebp
or
sahf
sahf
lcall
int3
lret
pop
jle
cld
enter
cmp
popf
fildl
cltd
decl
arpl
or
xor
adcb
fnstenv
std
outsb
cmp
push
mov
iret
cltd
mov
mov
pop
add
or
mov
inc
jb
jp
insl
clc
push
out
ss
push
sub
fldcw
xchg
sbb
fincstp
xor
in
inc
xor
lcall
icebp
mov
mov
fsubs
xor
mov
xor
mov
lds
insl
adc
gs
pop
jle
sbb
ret
fildll
xchg
out
les
jle
or
inc
je
fcomip
sub
stc
adc
push
stos
adc
mov
lret
push
fiaddl
ds
cmp
js
fldt
pop
movsb
jb
jb
pop
leave
cltd
jae
popa
lea
or
fdivrl
arpl
dec
inc
cs
xchg
sbb
or
ljmp
lds
xorl
jmp
js
cwtl
dec
add
mov
test
int
pushf
lret
xor
cmp
pop
nop
hlt
shlb
jo
mov
stos
lea
outsb
or
push
dec
imul
repnz
les
in
lea
fnstsw
orb
pop
mov
idivb
jg
push
xchg
xor
jp
inc
xlat
jo
jg
sub
push
fdivrp
mov
sub
hlt
imul
jae
mov
outsl
xchg
loopne
aas
mov
jecxz
or
popf
je
xor
jbe
mov
mov
and
aaa
aad
les
pop
daa
js
popf
mov
jbe
rcl
add
jmp
pop
ja
std
out
clc
sub
xchg
out
imul
aad
shll
lock
mov
scas
mov
inc
jmp
xchg
out
xor
adc
add
mov
cmpsb
and
loopne
mov
ret
jae
pop
and
jb
clc
push
aad
inc
shrb
dec
imul
push
addr16
or
sub
mov
shll
stc
aam
xlat
mov
stc
addr16
sti
imull
xor
add
cmpl
xchg
push
mov
jns
sbb
or
pushf
mov
test
cmp
ret
pop
fwait
cmpsl
mov
hlt
jb
imul
jb
lods
arpl
pusha
add
mov
shrb
arpl
mov
mov
mov
mov
mov
push
push
dec
rorl
jno
dec
stos
enter
push
add
mov
dec
test
cwtl
leave
cmp
xchg
pop
aaa
inc
or
arpl
stos
adc
cwtl
je
std
test
repnz
sti
mov
or
ja
dec
dec
andb
arpl
sbb
jae
das
mov
push
insb
lods
mov
cmp
push
popf
add
jg
or
jb
in
and
cmp
jns
test
xlat
push
pop
movsb
xchg
cmp
xchg
mov
inc
std
roll
mov
cmpsb
fs
in
or
push
mov
cmp
notb
and
dec
insl
xorb
gs
cmp
stos
lds
mov
mov
iret
mov
flds
daa
test
sti
jne
jbe
lcall
xorl
js
lret
rcrb
mov
mov
cs
fdiv
shl
jecxz
aas
pushf
push
jae
outsb
or
xchg
jae
in
dec
jo
cmp
dec
insl
or
mov
loop
enter
ss
cmp
jp
notl
pcmpeqw
dec
rep
aas
xchg
dec
and
lret
stc
cmp
xorb
inc
imulb
icebp
fldcw
xchg
or
lret
mov
xchg
jne
sub
mov
add
inc
repz
int3
inc
insl
lret
repnz
mov
sahf
ljmp
push
mov
loope
mov
stc
adc
xchg
add
ss
mov
test
sarl
test
mov
sbb
adc
sub
inc
sub
hlt
xchg
in
aad
leave
mov
les
and
xor
xchg
ja
jnp
mov
push
nop
sub
mov
cmpsl
xchg
adc
cmpsb
and
std
push
movlps
add
ja
in
nop
or
and
mov
dec
dec
push
push
jge
add
inc
xchg
repnz
sub
aas
mov
jmp
xorb
or
pop
push
xchg
cmp
icebp
hlt
lret
add
ljmp
shl
shll
clc
dec
loope
and
shlb
or
adc
das
clc
sbb
int
cmp
adc
jne
lret
push
xlat
cli
add
sti
mov
sbb
nop
sar
scas
mov
lods
inc
mov
mov
xor
pushl
add
dec
inc
xor
lret
xchg
cmc
jg
subb
loop
repnz
jnp
dec
mov
xchg
mov
push
mov
ss
sti
iret
adc
scas
sbb
xchg
les
into
and
je
xor
mov
push
add
push
jecxz
inc
adc
add
ficomps
sbb
cld
pop
lret
aad
testb
sbb
push
inc
xchg
and
aam
dec
inc
notb
ss
inc
adc
or
add
sub
dec
sbb
mov
sub
inc
scas
mov
in
jecxz
push
dec
lcall
repz
cltd
out
in
push
add
add
mov
pop
mov
movsl
aad
call
xchg
cwtl
ret
addr16
xor
jle
sbb
xchg
in
enter
push
xchg
mov
ja
shlb
mov
and
push
cmp
jg
insl
mov
mov
mov
lea
xchg
rcrb
push
stos
aam
add
xchg
push
mov
adc
pop
dec
push
sbb
mov
mov
lods
pop
sub
mov
xchg
ret
lret
jbe
pushf
sbb
cmpsl
mov
mov
mov
fbld
adc
mov
sahf
push
inc
jnp
daa
mov
in
int
dec
xchg
inc
sub
popf
popa
xor
add
imul
test
adc
sbb
and
mov
jl
lcall
mov
inc
add
sub
rclb
add
pop
sbb
cmp
filds
je
pushf
cli
add
iret
mov
in
daa
lds
push
push
je
push
movb
mov
mov
popf
nop
into
mov
mov
lods
mov
sub
inc
sbb
pop
push
inc
mov
and
pop
push
adc
mulb
loop
fistpll
lock
ret
sarl
inc
stos
mov
push
std
cmc
ljmp
outsb
mov
pop
inc
pusha
or
shrb
repnz
mov
pshufw
sbb
mov
sub
dec
dec
pop
cmp
popf
mov
dec
in
sbb
cmp
shll
jnp
mov
mov
ljmp
jecxz
xchg
push
push
fisubrs
js
jecxz
cmp
cmp
add
dec
shrl
or
setnp
add
negb
or
insb
jp
out
and
sub
ja
fldl
xchg
push
ret
shll
aam
cmp
push
addr16
lret
fbstp
fsubrl
cmpsb
cli
pop
or
rorb
scas
adc
xchg
cli
sub
xchg
sub
fcomip
sbb
or
test
mov
mov
jecxz
pop
fstpl
test
push
sbb
cltd
into
popl
decl
lret
mov
rcl
cmp
or
or
push
ret
jecxz
jmp
xor
jl
fs
fwait
in
movsb
mov
daa
jae
int
sub
movsb
mov
mov
rol
cmc
int
icebp
in
and
mov
stos
sub
out
adc
jne
movsb
test
clc
adc
jbe
shlb
in
or
cmpl
arpl
divb
ljmp
dec
sti
ljmp
lea
pop
cmp
std
movntq
out
sub
fdivrp
add
add
xchg
pop
lcall
and
pop
mov
adc
push
lock
cmc
xor
frstor
push
pop
push
je
shlb
jp
in
push
or
cmp
daa
cwtl
xchg
dec
and
test
and
pop
orb
xor
cltd
cmp
pop
xchg
sarb
out
add
cmp
cmp
inc
mov
jnp
adc
mov
outsl
adc
push
pop
testl
lret
cmpsl
movsl
mov
fsts
pop
rol
test
or
loop
xchg
daa
cmp
push
push
test
mov
repz
jbe
push
cmp
cwtl
xchg
or
add
jo
mov
ja
jo
pop
or
mov
and
lock
loope
pop
pop
cmp
dec
test
xchg
cmpsb
cmp
cmpsl
sub
xchg
cmp
dec
or
push
inc
out
sarb
xor
jmp
sbb
jnp
and
adc
pop
add
mov
xchg
out
or
mov
add
jmp
cmp
mov
loope
and
cmp
sbb
mov
leave
push
insl
popa
dec
xchg
push
lahf
push
outsl
out
or
and
test
fbld
and
jp
scas
jne
or
cmpsl
int3
adc
and
dec
mov
mov
push
stos
or
ss
sub
xchg
jp
or
push
pop
ret
popf
in
roll
popa
jge
cs
stos
cld
cmp
aad
aam
or
out
lret
inc
pop
shl
pop
dec
icebp
and
mov
loopne
add
mov
in
add
push
mov
xchg
leave
cmp
add
or
ret
pop
inc
lret
lods
stc
out
pushf
push
cltd
fstp
repz
gs
xor
pushf
jg
lret
iret
xlat
xor
mov
insb
shll
ds
pop
movsb
aam
xor
push
int
adc
lret
pop
mov
aad
enter
adc
inc
jle
shll
les
sbb
pop
std
je
scas
xchg
fcompl
add
sbb
js
dec
gs
pop
cmc
out
loopne
outsl
mov
mov
rcrb
dec
pop
mov
aam
jno
stos
mov
loop
arpl
pop
int
or
out
lods
push
pop
xchg
arpl
in
sub
into
gs
fstpl
shlb
scas
inc
push
fstl
leave
loopne
mov
out
cmpsl
call
xor
cmp
jmp
loopne
test
push
push
mov
gs
pop
nop
test
lea
pop
inc
mov
or
sbb
xor
jge
push
xchg
imul
addr16
push
je
jg
or
adc
sbb
call
leave
std
dec
ficomps
adc
cmp
and
mov
das
outsl
adc
xchg
aad
jns
cmpsl
fimull
push
xchg
xor
daa
and
adc
es
jge
mov
popa
xchg
pop
test
mov
xchg
push
xor
cmp
dec
addr16
mov
cs
mov
imul
jnp
mov
jb
subl
cmpsl
mov
add
call
lods
xor
pushf
jbe
fs
adc
add
adc
pop
fwait
mov
ficomps
mov
popa
fbld
call
xor
pop
movsl
xor
jmp
popf
sub
xor
push
cmp
in
pop
mov
daa
add
dec
jbe
scas
rcrb
pushf
adcl
cli
add
mov
movsb
sbb
push
ret
xchg
sbb
mov
test
add
jge
mov
fucomip
test
pushf
sahf
dec
loope
cmpsl
sbb
mov
shlb
xchg
lods
add
mov
pop
push
outsl
in
mov
or
stos
mov
xor
jmp
fdivs
sbb
push
or
inc
jno
adc
add
add
adc
rol
pop
jmp
or
mov
add
jne
icebp
jae
xchg
mov
out
adc
adc
mov
add
repnz
jo
int
insl
sub
add
push
xchg
ds
sahf
enter
jo
sbb
and
imul
shlb
test
sub
pusha
sub
push
sti
pop
into
nop
scas
nop
lea
arpl
rol
jb
adc
loop
push
outsb
xor
xchg
and
adc
aad
inc
dec
int3
fsubrl
scas
mov
aam
popa
pop
jo
dec
xchg
bound
clc
dec
adc
xor
mov
cld
jecxz
loop
std
ja
xchg
cld
push
loope
outsb
xor
xor
inc
jg
adc
cmpsl
pop
nop
sti
flds
cwtl
cmpb
or
pop
sti
pusha
rcrl
sbb
xchg
mov
fildl
jno
mov
ljmp
inc
pop
mov
dec
jl
lods
push
popa
and
inc
xchg
lods
adc
leave
cmpsl
pop
cmc
dec
js
in
outsl
test
sbb
jnp
or
mov
cmp
icebp
je
cmp
sarb
cmp
insb
mov
add
xor
mov
iret
imul
loopne
test
lods
scas
imul
in
ss
xor
sarb
push
xchg
ficomps
repz
clc
shll
flds
outsl
cld
fstpt
pop
xchg
cli
int3
xor
dec
xor
cmp
inc
push
jno
sbb
push
push
clc
mov
sub
hlt
adc
mov
aas
mov
cltd
aad
ret
cmp
pusha
push
or
out
les
dec
stc
push
mov
stc
aaa
filds
and
jle
push
mov
mov
shlb
test
je
cmpsl
xor
mov
push
mov
inc
into
push
push
rclb
adc
and
scas
mov
adc
fwait
aad
jae
sub
add
lock
mov
fdiv
out
scas
insl
sahf
aam
pop
adc
push
add
popa
call
cmp
push
mov
pop
testb
push
js
in
dec
out
imul
xor
pop
imul
pop
mov
icebp
sub
stos
cli
mov
icebp
into
xor
movsl
mov
mov
lea
push
jg
jo
xor
push
mov
sbb
lods
fmuls
mov
and
popf
ret
lods
cli
add
or
cli
sbbb
pop
int
mov
jmp
mov
insb
mov
or
arpl
push
push
inc
data16
fistps
insl
mov
dec
stc
mov
push
adc
jle
jmp
lock
adc
mov
arpl
mov
mov
cmp
push
inc
mulb
int3
fcoms
js
xor
push
pop
sbb
or
stos
sub
cli
cmp
jbe
add
imul
sar
mov
ficomps
or
popa
fiadds
or
cmc
icebp
push
mov
pop
inc
popa
jg
sti
mov
cmp
aaa
mov
mov
dec
clc
and
cltd
and
out
push
out
and
push
jecxz
test
mov
xchg
in
adcl
jbe
mov
lea
jns
ja
mov
jnp
int3
aad
sub
push
gs
aad
das
cs
dec
outsl
inc
lods
mov
jae
cmp
or
test
jb
in
or
add
int
xchg
push
jo
jl
fidivrl
gs
jmp
cld
mov
add
and
je
ret
jle
adc
dec
adc
mov
and
mov
ret
rolb
xor
pop
inc
mov
xor
outsl
aam
out
into
push
dec
inc
lea
int3
in
scas
js
jns
fistps
push
jbe
in
pop
lcall
pop
js
dec
mov
jae
or
sub
push
out
test
pop
mov
shll
inc
pushf
sub
dec
adc
jno
movsb
fs
xor
sahf
fisubl
push
or
incb
push
sbb
sub
dec
ja
test
push
imul
lcall
mov
bound
nop
jne
xchg
loop
xchg
in
jmp
inc
loop
mov
sbb
dec
popa
xchg
cs
sbbb
push
scas
outsb
inc
int3
aam
lods
mov
and
inc
mov
loopne
outsb
inc
out
loop
mov
push
shll
mov
cmp
pushf
adc
inc
incb
dec
outsl
mov
test
push
repnz
stos
dec
xchg
inc
ja
test
or
push
xchg
xchg
or
jge
xchg
pusha
leave
in
pushl
rolb
mov
adc
lcall
lret
cmp
pop
notl
test
adc
cmp
sbb
out
xchg
cmp
dec
sbb
insl
dec
mov
add
adc
and
mov
jmp
xchg
movb
icebp
dec
push
in
mov
cltd
cli
ret
mov
adc
jle
sub
lds
nop
outsl
adc
test
jmp
outsl
push
fldcw
cld
and
test
sbb
push
daa
popa
je
clc
or
mov
adc
inc
repnz
or
dec
pop
jg
in
outsb
sub
cld
add
pop
insl
sbb
popa
mov
jmp
addr16
lret
out
xor
adc
adc
insb
jle
mov
sub
pop
stos
pop
mov
mov
mov
cwtl
test
in
sbb
out
jp
lcall
enter
pushf
scas
adc
xor
out
rcr
mov
xor
test
fistpl
mov
inc
mov
mov
add
ds
lret
pop
sti
push
shlb
mov
clc
lods
bound
aad
stos
adc
out
cwtl
pop
popf
mov
xor
shl
shr
pushf
mov
dec
sbb
mov
fimuls
es
mov
test
sbb
jno
cmpsb
xor
popa
incl
mov
sub
ror
jno
xchg
dec
popf
dec
sub
cs
bswap
xchg
clc
cmp
cltd
call
or
outsl
es
or
test
fs
adc
rcll
jmp
or
and
pop
andb
jge
pop
ret
mov
fs
push
inc
xor
push
dec
ret
dec
lahf
pop
jg
test
and
mov
mov
xor
cmc
pop
add
outsl
pop
jb
movsb
mov
ret
inc
rol
pop
sbbb
je
loope
cwtl
adc
push
mov
test
cmc
jno
xchg
mov
pop
popf
pop
jae
sti
mov
test
sub
stos
and
dec
dec
mov
lock
loop
adc
sub
rorb
sub
ficomps
or
lret
iret
or
xor
adc
das
jae
call
cmpsb
xor
inc
int
enter
inc
push
add
xor
mov
mov
pusha
inc
fldpi
mov
cmp
xor
daa
jg
or
push
fisttps
movsb
push
jg
add
daa
xchg
out
sbbb
inc
dec
out
push
stc
sbb
inc
lods
rcr
mov
loopne
inc
test
mov
jno
fimull
js
out
pop
in
mov
fnstsw
and
sbb
mov
ret
push
mov
mov
push
stc
pop
xchg
cmp
pop
xchg
sbb
stos
int
lock
popf
mov
push
loop
loopne
jg
jne
pushf
test
pop
xor
push
pminsw
rorl
mov
adc
mov
mov
dec
or
in
mov
popa
das
ficoms
js
xchg
int3
aam
test
rorl
test
ss
dec
dec
jge
stc
sbb
inc
mov
ljmp
mov
pop
testb
xor
and
mov
outsb
xor
jne
dec
insl
add
daa
fildll
fs
adc
or
jecxz
int3
mov
xor
fwait
sbb
sub
std
cld
lret
adc
pop
dec
test
negb
in
out
cmpsb
mov
inc
cmp
adc
cmp
pop
out
dec
push
jno
sbbb
push
pop
inc
add
add
shrb
jmp
in
xchg
les
push
mov
roll
call
mov
mov
inc
adc
xchg
stc
aas
sub
mov
lock
imul
aam
cmc
inc
push
lcall
addr16
repnz
lcall
sub
or
mov
sarl
push
daa
imul
sti
mov
push
shrb
subps
add
aad
add
jmp
test
push
lds
mov
fstpt
mov
lret
dec
pop
lock
xchg
xor
push
pop
mov
sbb
sub
sbb
jno
jg
or
cmp
icebp
pop
jge
insb
pop
in
orb
and
loop
push
adc
inc
sbb
pusha
rclb
je
lea
mov
mov
lcall
mov
dec
cld
push
sbb
fwait
add
cwtl
imul
mov
jne
aam
mov
jmp
loop
sbb
sub
stc
or
sub
lods
pusha
or
pop
push
fsts
dec
or
shll
daa
mov
inc
add
push
repnz
jp
mov
lmsw
xor
sbb
mov
sbb
mov
mov
lock
pop
std
test
cs
rcl
rcrl
andb
out
in
shrl
and
lods
mov
mov
popa
pop
imul
mov
divb
mov
imul
and
movb
cli
iret
push
push
xor
ja
pop
les
push
mov
inc
popf
aam
movsl
fsubrs
cwtl
js
and
in
push
scas
jbe
mov
int
push
pusha
xor
sbb
cmpsl
dec
add
lods
mov
add
fwait
enter
cmpsl
stos
rolb
test
testb
cmp
mov
mov
popa
jae
das
iret
fnstcw
or
scas
sub
daa
aam
mov
dec
bound
fs
add
and
lret
fsub
xchg
test
cltd
cmp
xlat
xor
scas
pop
push
loopne
jb
gs
shrb
rorb
daa
sbb
cli
fucomip
sbb
and
xchg
mov
mov
adc
push
insl
inc
imul
loope
jmp
pop
stc
add
in
ds
sahf
add
jle
mulb
add
or
icebp
out
lcall
fs
cmpsl
iret
dec
push
out
xchg
mov
cmp
pusha
adc
xor
dec
scas
xor
pop
daa
add
xor
push
mov
ret
lret
pop
repz
jbe
aaa
or
lods
sub
push
fiaddl
mov
xchg
or
in
sbb
xchg
cmp
add
xchg
dec
fiaddl
push
fdivrl
sbb
adc
aam
and
mov
sbb
or
addl
btl
or
notb
shll
cwtl
sub
lock
cmove
xchg
pusha
push
sub
mov
ja
and
cs
repz
add
pop
xor
shll
cmp
int
fstps
pop
dec
ljmp
xchg
and
aam
fcoms
pop
loope
stos
push
pop
ja
sbb
and
out
xlat
fisttps
xchg
hlt
and
lcall
ljmp
stos
sti
xor
std
inc
or
arpl
sub
pop
jmp
shrl
lea
loope
push
int
pop
cmpsl
test
pop
mov
lods
pop
stos
ss
aas
loopne
fdecstp
or
fnstsw
nop
cmc
cmp
cmpsl
and
mov
sub
pop
fwait
ja
mov
stos
mov
push
mov
mov
inc
mov
out
cs
xorb
sbb
enter
pop
and
aad
pop
hlt
rcl
jno
cs
lea
outsl
and
sahf
fdivl
xchg
adc
sahf
and
outsb
pop
movsb
js
jnp
dec
insl
or
push
loopne
or
flds
fisubrs
or
jae
repz
mov
lahf
mov
and
cmp
push
push
pop
jno
push
jge
adc
cli
inc
dec
shl
or
ficoml
js
mov
cmpsl
mov
push
mov
adcb
ss
mov
inc
icebp
popf
mov
inc
insl
or
mov
cld
out
cmc
sbb
and
inc
scas
les
and
cs
mov
mov
divl
jge
sbb
dec
fisubrl
sbb
adc
pushl
mov
in
movsb
jae
mov
xchg
xchg
adc
mov
add
push
and
aad
mov
negb
jl
mov
and
aaa
outsl
mov
nop
and
add
xchg
arpl
cmp
imul
ror
rolb
mov
lret
vmwrite
in
ror
pop
mov
and
sbb
addr16
leave
clc
xor
or
lcall
out
sub
repnz
jmp
inc
sbb
aad
sahf
or
push
pop
or
mov
push
popa
aad
xchg
inc
or
push
sub
cmp
in
or
stc
stos
mov
jb
mov
lret
rclb
pusha
pusha
jb
add
movsl
scas
sti
es
xor
outsl
arpl
dec
dec
arpl
and
sub
inc
mov
jmp
push
add
xor
add
dec
scas
enter
cmpsb
scas
loope
dec
int
mov
xchg
gs
aad
shlb
add
sbb
add
gs
das
dec
daa
mov
dec
pusha
xor
pop
or
dec
gs
cmp
icebp
lds
mov
lret
testl
je
call
mov
test
ja
pushl
add
xor
fs
rorl
sbb
fisttpll
and
sub
sub
ja
mov
mov
adc
jb
or
mov
shrb
pusha
cmc
sarl
pop
in
test
jmp
ss
cmp
jns
adc
arpl
les
sar
inc
sub
movsb
popa
jno
scas
ja
sti
push
pop
js
push
test
push
inc
and
and
icebp
jle
in
ss
push
jle
test
loopne
daa
and
jg
push
aas
pop
and
adc
das
mov
xchg
dec
fs
xor
add
mov
sub
in
mov
in
cmc
jmp
push
mov
divl
mov
stos
test
adc
cmp
punpckhdq
pop
pushf
xor
pop
out
inc
movsb
inc
cltd
pop
int3
mov
ss
inc
dec
add
lock
sahf
mov
jmp
jb
mov
mov
call
das
or
aam
cmpsl
pop
mov
daa
fsubs
xchg
fidivrs
xchg
movsb
pop
cld
in
dec
xor
mov
pop
in
push
mov
mov
pop
cmp
dec
lock
in
bswap
fwait
jb
dec
mov
dec
out
sub
fiaddl
adc
inc
popa
add
xor
data16
outsb
mov
jle
sub
or
pop
frstor
in
fisubrs
gs
xchg
xchg
add
mov
mov
lret
adc
inc
mov
lea
dec
or
arpl
hlt
and
popa
push
cs
test
std
xchg
ret
lret
pop
icebp
xchg
daa
jp
loop
mov
jmp
aaa
jb
int3
and
hlt
push
add
rol
out
mov
pushf
enter
push
xchg
roll
out
lds
lods
push
dec
pop
pop
sahf
mov
test
adc
xor
enter
stos
addr16
pop
fildl
add
mov
add
loop
jmp
lea
or
jle
jno
xchg
adc
xchg
test
jp
pop
mov
pop
pop
lods
loop
int3
mov
mull
shrb
fstp
xorb
mov
sahf
mov
enter
sub
pushf
fnsave
mov
or
test
inc
xor
insb
ljmp
mov
jp
xchg
jbe
lcall
stos
imul
sbb
popa
scas
in
flds
mov
ja
jnp
pop
fadds
xchg
lea
das
inc
push
add
lcall
es
or
shlb
mov
pop
bound
push
mov
jmp
mov
fimull
enter
xchg
in
push
mov
arpl
out
iret
int
push
out
out
cmp
pop
or
or
enter
inc
mov
xor
nop
outsl
movsb
ror
adc
rcll
int
pop
push
loopne,pt
shr
cltd
stos
cmpsl
adc
pushf
lcall
adc
popf
jnp
es
sbb
daa
cmc
sub
in
jge
ret
inc
out
push
cs
insb
pop
mov
or
mov
data16
or
push
inc
sbb
sub
mov
push
or
lcall
cs
dec
pusha
lahf
lcall
push
sub
neg
sub
cmpsb
int
xchg
sub
mov
inc
stos
dec
sub
repnz
stc
mov
ljmp
out
ljmp
leave
sub
xor
iret
lods
mov
outsb
mov
ja
fbld
add
pop
cli
rorb
sub
or
lret
mov
sub
and
inc
repz
jl
inc
jae
lahf
xchg
pop
testl
loope
sub
loope
xchg
xchg
cmc
mov
push
imul
fstl
out
adc
or
test
inc
clc
push
and
mov
aam
xchg
aam
push
sbb
stos
mov
in
ret
mov
xchg
ficoml
aad
leave
lea
das
inc
mov
push
jp
xchg
inc
jecxz
fcmovnbe
xchg
push
sub
scas
cmp
movsl
inc
xor
mov
cwtl
sbb
adcl
xlat
mov
das
into
cwtl
int3
xor
cld
inc
dec
scas
dec
or
dec
jns
cs
push
lods
pop
xchg
mov
pusha
mov
sbb
sbbl
cmp
inc
lods
mov
cmc
int3
and
inc
push
adc
test
aam
in
cli
enter
sbb
dec
aam
jmp
jnp
push
xchg
xor
adc
cs
jnp
sub
popf
lret
addr16
sbb
imul
test
cli
pop
mov
xchg
cmp
push
outsb
push
dec
pop
orl
inc
pop
cmpb
and
clc
out
sti
jle
inc
xor
ds
xor
call
jno
dec
movsb
xlat
cltd
jns
push
sti
ret
xchg
lods
jns
push
fwait
pushf
cli
mov
sbb
lods
mov
fs
les
adc
jle
xchg
and
nop
xchg
int
cmc
das
dec
insb
pcmpgtd
mov
imul
daa
in
jb
mov
xor
and
push
dec
mov
cmp
push
xor
jne
pop
aam
xor
test
das
jno
or
adc
out
bt
filds
jp
add
xchg
cmp
mov
loopne
adc
sub
loop
mov
xchg
rdmsr
int3
dec
jmp
lret
negl
sub
pop
push
adc
lds
aam
jns
outsb
jp
pop
adc
mov
scas
das
push
mov
add
int3
in
lods
dec
xor
mov
pushf
mov
adc
fcoms
adc
cli
sbbb
gs
fmuls
cmp
dec
jge
or
in
inc
sub
fsubrs
jg
cmp
or
push
into
xor
cltd
push
inc
xchg
mov
jne
aam
lret
movsl
shlb
jae
lds
pushl
lcall
mov
stos
stos
in
sub
sbb
mov
cmp
lret
pop
aam
fs
pop
imul
sub
add
idivl
xor
dec
inc
into
sti
out
fldl
movsb
jge
or
lock
shl
addr16
andl
mov
hlt
out
xchg
jbe
pushf
insb
adc
sahf
jmp
in
inc
adc
cli
jno
sbb
inc
sbb
mov
push
ret
filds
data16
std
fstpl
imul
ja
outsl
into
imulb
movb
lret
cld
into
fs
es
mov
and
mov
jg
adc
push
pop
hlt
jecxz
dec
fcoms
xor
dec
pop
aam
and
push
cmp
mov
jmp
push
jle
mov
stos
and
psubusb
cmp
scas
xor
add
push
nop
in
test
dec
adc
adcl
pop
movb
mov
xchg
add
cltd
jp
and
mov
xchg
ds
sbb
mov
and
jl
mov
push
xchg
int3
mov
fldcw
push
outsb
sbb
jnp
jnp
out
shl
dec
mov
clc
adcl
data16
mov
sbb
test
lret
xchg
push
jb
pop
enter
ljmp
subb
xchg
pop
lret
fsubs
xchg
loop
jbe
ds
stos
xchg
out
push
test
ljmp
mov
std
iret
adc
push
and
inc
xor
data16
js
adcl
pop
push
pop
subb
imul
dec
mov
and
cltd
popf
xor
imul
popa
mov
push
pop
or
or
mov
sarl
mov
sub
xchg
xchg
fwait
sub
bound
xor
push
sti
das
mov
sbb
movsl
or
sub
vmptrld
js
fcmovbe
xchg
cmp
ret
fistps
test
fdivl
mov
push
sub
add
dec
or
pop
ljmp
out
jnp
dec
insl
hlt
mov
fisttpll
mov
out
add
add
int3
jp
gs
loop
lods
mov
adc
fisubrs
sub
sub
iret
adc
inc
repz
les
push
mov
sti
lret
inc
outsb
enter
mov
outsl
xor
pop
inc
add
in
pushl
insl
push
iret
and
dec
sub
mov
lock
sbb
jmp
mov
mov
dec
or
repz
inc
movsb
fwait
pop
orb
push
lds
inc
subb
in
xchg
inc
and
mov
dec
sbb
mov
pop
jle
inc
mov
das
mov
add
mov
push
aad
mov
aas
shlb
cs
sbb
jl
lahf
stc
push
sub
dec
fisubl
je
pop
ret
arpl
push
cmp
rorb
scas
cli
mov
dec
into
pop
and
dec
cmp
cli
out
mov
and
loope
std
pop
aam
cwtl
mov
je
inc
jnp
pop
test
jp
pop
and
insl
push
out
adc
inc
xchg
fmull
data16
stc
je
ret
jno
lret
insb
jns
andb
mov
mov
std
mov
aas
loopne
data16
test
filds
mov
fs
push
mov
mov
mov
pop
scas
mov
int3
mov
daa
outsl
sarb
fwait
lods
cltd
push
gs
loop
loope
xchg
cmp
or
pop
mov
mov
sub
faddp
mov
divb
xchg
pop
inc
je
cmpsb
xchg
inc
je
jl
pushf
mov
xchg
mov
jmp
sbb
das
loopne
iret
loope
rclb
aas
dec
push
or
andb
imull
inc
adc
and
or
mov
subb
jbe
jle
mull
sub
sti
ljmp
imul
es
ljmp
dec
push
stc
sbb
inc
cs
xor
imul
shll
inc
xchg
aas
adc
pop
sbb
jne
cs
cli
xlat
iret
jb
clc
repz
or
ret
push
into
sub
cmpsb
push
fiaddl
das
and
insl
jmp
or
push
mov
jecxz
ss
and
inc
rcrl
dec
sub
es
mov
loopne
iret
inc
fstps
xchg
mov
and
stos
mov
mov
mov
pop
pop
cmpsl
ficompl
rorl
or
scas
ds
cmp
cld
jae
push
mov
or
sar
mov
enter
jne
jnp
add
pop
movsb
fsubr
shll
mov
out
jns
jnp
leave
pop
mov
xchg
jl
popa
jbe
sbb
pop
ret
leave
pushf
push
add
push
dec
in
scas
mov
shlb
add
jmp
xor
mov
icebp
lret
and
loop
mov
mov
negb
loopne
test
pop
adc
sbb
cmp
cmp
adc
imul
cmp
out
rorb
fildll
pop
pop
loop
mov
test
sti
neg
nop
add
and
int
bnd
dec
ret
adc
cmp
mov
test
inc
imul
mov
pop
sti
xchg
std
mov
mov
repnz
test
push
add
dec
dec
outsb
sbb
aam
js
sub
fidivs
push
cmp
mov
adc
mov
mov
xchg
test
pusha
pop
sti
xchg
or
ret
pushf
scas
push
pop
ss
xor
xor
cmp
aad
rcrb
sub
sub
mov
cwtl
jecxz
push
rcll
add
pushf
mov
pop
jg
imul
xchg
test
mov
out
mov
and
in
or
lret
roll
cltd
sub
pop
nop
mov
nop
cmp
adc
pop
sbb
or
sti
mov
mov
sbb
dec
test
outsb
divb
out
lret
xchg
scas
adc
je
jae
rolb
inc
fidivrl
int
xor
inc
int
jns
leave
shll
jle
dec
mov
loopne
jae
lds
pop
insl
jg
sahf
sub
xchg
xor
mov
push
mov
popa
sbb
push
and
pop
or
lret
lods
push
ret
adc
xor
push
ja
pop
sub
pop
das
fmulp
mov
inc
sub
add
shll
add
sub
clc
addr16
popa
rcrl
gs
mov
popf
aas
int
pop
pusha
fadds
pop
pop
sbb
xor
mov
in
enter
rcrl
jns
out
insb
stc
daa
fdivl
out
std
xchg
mov
push
mov
add
xchg
shll
mov
push
or
movsl
daa
xchg
inc
cld
xchg
in
jae
inc
in
jle
inc
call
cmp
repnz
lods
mov
jge
outsb
cmp
cld
push
jge,pt
jle
mov
dec
rcrl
mov
xchg
test
jecxz
sbb
adc
pushf
scas
jecxz
adc
xlat
dec
or
or
xor
xchg
jg
hlt
decl
out
ret
fidivl
mov
mov
stos
mov
cwtl
in
addl
xchg
nop
int3
outsl
cmp
ret
pop
cmp
lods
in
sbb
or
push
xor
pop
pop
jecxz
dec
insl
mov
dec
sarb
int
mov
sbb
loope
jmp
pushl
jo
lds
ret
mov
dec
pop
shlb
mov
insl
int3
xchg
fs
scas
in
and
sub
mov
sbb
inc
into
mov
cmp
jl,pn
cmp
add
dec
mov
adc
adc
jb
sub
rcrb
or
lods
xor
push
fdivr
xchg
fs
stos
jl
xor
cli
repnz
rolb
fldt
adc
or
lret
mov
fidivl
inc
push
cmovno
mov
fnstenv
add
cmp
xchg
ret
xlat
mov
imul
sbb
mov
mov
cmovg
or
push
mov
or
cmpb
fs
mov
lahf
insl
jae
inc
inc
jmp
negl
sub
xor
xchg
imul
shl
mov
inc
ljmp
mov
ror
mov
imul
gs
dec
mov
cmc
icebp
push
pop
or
mov
sbb
fiaddl
mov
sub
xor
js
push
mov
sub
icebp
add
adc
xchg
ja
push
iret
or
sub
es
mov
add
adc
scas
aaa
adc
jo
fdivrs
subl
add
fldenv
mov
or
mov
xor
cmp
jbe
les
xchg
dec
movsb
inc
jne
pop
jmp
lcall
sub
sbb
push
or
pop
jbe
test
mov
shrb
push
testb
loopne
xor
xlat
aas
sub
xchg
inc
cld
pop
pop
dec
into
aam
out
xchg
adc
ljmp
push
cmp
xor
stos
add
and
and
dec
cwtl
pop
push
mov
aas
pop
jge
sti
inc
mov
mov
sbb
and
dec
jae
ja
repnz
popa
add
mov
cli
je
push
adc
adc
cmc
into
push
loopne
and
add
das
ljmp
dec
pusha
fbstp
dec
mov
sub
pop
fildl
jle
daa
enter
mov
mov
xchg
jp
scas
scas
repz
mov
pop
out
xchg
enter
add
push
mov
insb
cld
inc
adc
lahf
cwtl
jns
lods
scas
add
cmpsl
leave
lods
das
cs
add
sbb
ja
sub
add
icebp
xor
sub
adc
and
imul
mov
sti
cmp
pop
cmpsb
mov
xchg
xchg
pop
push
pushf
add
mov
mov
mov
xlat
out
sbb
sub
sbb
into
jno
xchg
lds
sti
movsl
insl
testl
or
int3
out
test
jne
jbe
mov
push
out
push
imul
ja
mov
push
ret
mov
loop
mov
cmp
js
push
jbe
add
add
sbb
ss
jecxz
mov
daa
pop
loop
jo
sub
xchg
testl
enter
xor
pop
sub
pop
mov
jl
adc
sbb
and
test
test
int
jle
mov
in
mov
and
xchg
inc
mov
movsl
lret
ret
push
shll
dec
adc
int3
lock
dec
and
add
and
mov
xorb
inc
xor
stos
add
cmp
mov
cs
jne
pop
les
cltd
sti
add
stos
aas
ljmp
std
xchg
mov
xor
push
frstor
int3
dec
and
std
mov
xlat
mul
add
pushf
mov
fiadds
orl
sbb
stos
je
mov
test
push
call
insl
in
mov
mov
push
adc
add
insb
dec
sbb
cmp
jp
loopne
gs
jae
pop
in
sahf
mov
fadd
mov
and
test
sbb
and
shrb
mov
xorl
xchg
and
mov
push
mov
aad
ss
jae
popa
mov
cmc
xchg
lods
jg
rorl
mov
neg
les
xlat
aam
cmp
push
shr
pop
xchg
sub
ljmp
and
loope
popa
ret
push
fisttps
dec
leave
push
cmpsb
fidivl
std
addb
jecxz
or
out
xor
cmp
outsl
movsb
jle
push
cmp
jle
mov
jae
insl
and
mov
add
mov
sub
mov
cltd
cmpsl
jp
fistpl
adc
in
dec
and
mov
pop
lds
xor
fsub
sar
outsb
loopnew
out
jno
mov
dec
mov
mov
scas
push
out
je
and
in
in
mov
sarb
shll
mov
dec
xchg
sbb
es
sbb
cs
add
clc
es
or
xchg
scas
lods
repnz
pop
insb
jnp
adc
add
std
addr16
pop
mov
sti
addr16
jp
pop
scas
ss
or
repz
add
jg
scas
lahf
in
out
jo
add
mov
fsts
or
loope
rol
orl
dec
rolb
daa
jnp
adc
mov
ret
mov
dec
push
fwait
xchg
and
lcall
xorb
inc
jg
cmp
xchg
loope
add
mov
pop
ret
cld
mov
xchg
jns
decl
xor
cmpl
out
in
jae
adc
scas
xchg
rcrl
adc
adc
fisubs
js
xrelease
outsl
mov
mov
sbb
fcmovnb
pop
adc
push
mov
shrl
or
sbb
mov
jns
outsb
jne
or
cltd
add
or
adc
ljmp
sbb
add
das
xchg
fisttpll
jl
push
iret
lods
mov
lcall
cli
sbb
js
call
fcmovnu
push
mov
inc
nop
fcmovbe
mov
fs
xbegin
jne
jp
ljmp
dec
xchg
stc
nop
negb
sti
cmpsl
jl
dec
dec
mov
pop
lahf
jl
push
mov
jge
pop
int
jnp
sub
xor
jl
lret
cwtl
add
and
push
imul
jbe
adc
movsb
pop
mov
nop
fcoms
aas
adc
mov
in
dec
jns
dec
adc
inc
pushf
lcall
scas
jl
stos
and
pop
xchg
popf
cmp
add
pop
loope
mov
sti
mov
popf
cmp
in
mov
mov
push
rcrl
lods
dec
mov
in
arpl
cld
popa
cld
mov
lods
dec
jno
add
les
in
inc
or
mov
aaa
lret
cmp
or
inc
shll
dec
mov
test
pop
cs
pop
cmp
dec
leave
arpl
dec
packuswb
and
jmp
pushf
mov
adc
fcomip
hlt
insb
xor
or
in
add
push
mov
dec
mov
dec
dec
stos
mov
mov
or
cltd
ss
pop
push
mov
or
sar
iret
mov
add
bound
iret
dec
mov
pop
hlt
test
es
and
iret
and
sbb
notl
adc
mov
out
pop
mov
dec
hlt
sbb
cmpsb
mov
pop
mov
fcomip
cmp
mov
inc
int
add
icebp
add
movsl
cmp
dec
inc
cmp
fidivl
xor
inc
xchg
test
mov
sahf
fiadds
adc
mov
iret
dec
pushf
xor
mov
mov
fsubl
popa
dec
pop
notb
sub
mov
mov
enter
inc
mov
xchg
repz
test
lods
mov
nop
repnz
dec
sub
pop
mov
push
arpl
rcr
orb
clc
push
mov
or
fadds
mov
push
andb
jns
cs
sbb
push
cltd
out
in
mov
xchg
xchg
mov
sbb
pusha
mov
xor
or
inc
int3
xchg
ljmp
adc
cmc
dec
mov
xchg
out
sti
push
mov
push
hlt
insl
sbb
pop
push
sub
cld
cmpsb
aad
sbb
inc
adc
repz
add
call
mov
mov
lahf
cmp
xchg
cmp
popa
enter
les
loope
mov
fnstenv
sbb
or
out
jbe
mov
jno
cmp
mov
stc
ss
call
mov
inc
cld
sahf
add
ret
lahf
jle
pop
test
xlat
push
dec
and
xchg
cwtl
insl
and
jo
mov
inc
cmc
ljmp
mov
push
call
nop
mov
pop
xchg
xchg
aas
or
imul
pop
das
mov
jae
movsb
sbb
jae
mov
fmul
cmp
cs
adc
nop
lods
push
push
mov
sti
mov
test
test
scas
lods
and
push
jmp
in
pop
jecxz
sub
ss
jecxz
repnz
xchg
add
lods
dec
ljmp
mov
cltd
mov
jno
pushl
ret
mov
pop
inc
scas
dec
push
lds
cmc
lahf
lahf
pop
jne
fnstcw
ret
scas
add
push
push
jmp
js
inc
push
add
inc
push
pop
push
clc
cmp
push
dec
push
push
sub
fstpt
ret
fwait
imul
pop
out
imul
lret
sub
jmp
mov
or
xor
mov
cmp
aaa
inc
xor
insb
push
jl
xchg
ljmp
and
in
jmp
cs
adc
dec
test
xor
or
negb
mov
fsts
mov
out
mov
xor
push
xchg
jecxz
push
push
outsl
mov
add
mov
cmp
sub
outsl
mov
inc
iret
dec
fcmovu
push
stos
stc
out
movsb
adc
pop
cld
cmp
dec
xchg
xchg
test
add
jp
push
sub
push
sahf
test
test
idivl
sub
xorb
mov
lcall
mov
sub
push
mov
pushf
adc
movsl
je
dec
cld
arpl
lods
or
or
pop
mov
mov
pop
outsb
adc
pop
data16
xor
lcall
mov
push
ljmp
stos
xchg
xor
jnp
pop
xchg
cwtl
call
adc
pop
push
push
outsl
negb
and
mov
inc
sbb
outsl
adc
add
pop
dec
sbb
mov
or
out
push
mov
ret
dec
movl
lods
in
shr
cs
stc
jb
pushf
and
pop
jae
mov
lret
mov
mov
adc
or
push
mov
pop
shrb
xchg
and
icebp
dec
jle
pop
arpl
or
inc
iret
jmp
mov
fs
test
aas
test
and
adc
out
inc
mov
xor
ds
nop
inc
movsl
dec
push
adc
je
mov
jo
mov
dec
test
mov
mov
inc
mov
inc
xchg
in
inc
int
lea
lret
scas
clc
add
jle
loope
mov
inc
inc
js
adc
mov
ret
clc
pusha
xor
sub
aaa
dec
std
test
scas
jbe
pop
stos
mov
in
mov
xchg
sar
repz
ja
mov
call
or
mov
das
les
loop
and
mov
push
out
sub
shrb
scas
dec
scas
inc
mov
cmpsl
in
push
punpckhwd
fdivrp
sub
adc
clc
shrb
adc
or
sarl
pop
inc
pop
cmpsl
jb
cmpsb
mov
iret
test
mov
imul
shlb
mov
movb
arpl
int3
add
mov
lods
outsb
push
dec
and
loopne
loope
jp
andl
stos
jge
lods
out
ret
mov
nop
imull
in
xchg
xchg
xor
imul
das
mov
xchg
cmc
rorb
movsl
pop
push
stc
in
push
xchg
out
pop
inc
cmp
lds
mov
adc
inc
divb
sub
sub
lret
jnp
pop
sub
cs
dec
sbb
pop
movsl
test
push
cmpsb
cmp
pop
lcall
aas
rcrl
outsl
xchg
jne
push
sarb
or
adc
jb
pop
pop
bound
out
insb
lret
cmp
sbb
and
cmpsl
push
lahf
dec
jecxz
sbb
or
imul
jmp
jns
pop
fdivs
mov
dec
cli
jecxz
jae
xchg
mov
idivb
mov
fnstsw
adc
lea
in
imul
pushf
or
xchg
jbe
enter
mov
add
lods
ficoml
push
sub
dec
out
xorb
cmpsl
ret
inc
icebp
setns
jl
dec
mov
cltd
and
pop
pop
loope
xlat
or
int
int3
mov
sbb
dec
sub
sahf
xchg
sbb
mov
cmp
enter
addr16
cld
mov
ljmp
mov
lret
fsubs
sbb
popa
stos
xchg
adc
pop
lods
pop
ja
test
adc
mov
lahf
push
mov
imulb
subl
mov
mov
sbbl
xchg
fmuls
out
jmp
push
int3
xchg
insb
out
fwait
add
ds
inc
mov
mov
out
xorl
xchg
mov
ja
lret
push
cmpsb
ret
xchg
jns
jle
loopne
push
jmp
notb
sar
or
xlat
je
xor
inc
adc
in
add
mov
jnp
sbb
cmovae
data16
ss
jbe
int3
nop
or
adc
mov
mov
add
fdivrs
push
repnz
xchg
inc
jae
mov
insb
rorb
adc
adc
fisttps
mov
pop
mov
pop
jmp
sti
push
test
sahf
in
add
and
xor
pop
pop
mov
aad
jo
scas
sarb
dec
push
and
push
lcall
repnz
fimull
inc
dec
les
cmp
dec
and
imul
mov
xor
push
cmp
and
aam
lods
adc
flds
or
mov
repz
adc
scas
mov
add
fnsave
or
sub
sub
xchg
push
movl
mov
fs
out
test
push
incb
rorb
imull
jae
push
jge
loope
jle
ss
mov
fwait
inc
lea
adc
jmp
fimull
push
es
xchg
scas
inc
pop
ljmp
mov
dec
cmp
jge
mov
push
and
out
jp
and
adc
dec
in
add
mov
lret
in
cmp
sti
xor
imul
lea
dec
setl
repnz
and
call
out
repz
push
cmp
adc
out
lea
out
push
push
insl
pop
loopne
xchg
je
xor
mov
pop
in
adc
pop
test
mov
jp
hlt
movsb
int
addps
lock
mov
or
lea
loopne
xor
pop
dec
cld
mov
xor
aam
repnz
mov
adc
adc
stc
cmpsl
lret
jmp
jecxz
popa
roll
inc
js
cmp
mov
gs
int
js
adc
jne
sub
sub
cmc
std
sub
rcrb
push
fdiv
fwait
clc
lods
in
xor
mov
push
mov
pop
mov
adc
adc
popa
dec
cmc
push
jne
or
stc
adc
repz
mov
icebp
dec
loop
sbb
push
lret
mov
mov
stos
inc
mov
push
imul
push
and
dec
dec
jg
pop
out
hlt
push
repz
mov
xor
push
call
mov
in
test
addb
in
jbe
or
sub
fistps
lock
adc
popa
jne
xchg
bound
jl
mov
push
jb
mov
pop
cmp
push
sbb
into
shlw
and
jmp
xchg
xor
movsl
inc
and
inc
sbb
mov
dec
pop
and
lcall
xor
mov
pushf
sti
and
jp
lods
sbb
loopne
jb
pop
xor
xor
out
pop
inc
ficoms
call
pop
mov
rolb
push
push
ds
loop
push
fisubl
shlb
pop
xor
mov
sub
jbe
ljmp
notl
sub
pop
cmc
arpl
jmp
and
inc
enter
jae
xorl
or
pop
movsl
push
jb
fwait
push
lock
in
fstp
cwtl
jmp
je
fwait
pop
iret
mov
pop
pop
jne
mov
aaa
gs
xchg
gs
mov
jnp
jns
or
and
jo
sub
call
sub
icebp
sub
inc
lock
xor
add
sub
les
jae
inc
cld
xchg
push
push
in
inc
cmp
add
push
mov
aam
cmp
sbb
jbe
mov
rolb
aad
ss
cmp
les
mov
inc
pop
jmp
sahf
mov
add
divb
cmp
or
repz
xor
arpl
fistps
push
into
mov
mov
addr16
lock
xchg
cmp
dec
loope
push
loop
jecxz
lahf
mov
push
out
push
outsl
arpl
xor
xchg
jne
scas
jne
fsubl
out
add
lods
ja
mov
inc
jo
inc
mov
jne
mov
xor
and
jae
mov
test
popa
mov
xor
testl
loop
xchg
ss
jae
sbb
or
test
xchg
int3
xor
cmp
mov
fwait
repz
in
xorb
pop
in
and
cmpsl
mov
cmp
ret
jne
cwtl
jge
nop
icebp
rclb
dec
rorb
pop
inc
sub
dec
lods
push
mov
loope
cmpsb
out
xchg
int
mov
pushf
int
cmp
or
repnz
or
mov
stos
sub
ds
lods
pop
sub
jnp
mov
lods
ss
cmpsl
xchg
lahf
in
fisubs
adc
push
lods
adc
shlb
out
mov
insb
mov
inc
out
add
leave
mov
int3
sub
movsl
mov
bound
ret
xorl
std
test
sub
fcoml
in
jb
jnp
out
adc
or
iret
inc
jle
gs
pop
push
mov
dec
sub
test
jbe
xor
je
out
sbb
test
stos
mov
push
test
call
jge
ss
xor
ljmp
mov
mov
call
cltd
lea
push
cmpsb
dec
xchg
sub
jecxz
jp
add
or
cmpsl
mov
fildl
mov
clc
cmpsb
push
lahf
push
out
sbb
fistps
xor
xor
adc
loope
mov
ja
and
add
xchg
icebp
xlat
jbe
sbb
das
mov
fistl
in
movl
add
inc
int
cld
push
js
test
mov
sbb
sub
je
out
fimuls
loop
aas
std
xchg
cmc
fildll
dec
mov
in
inc
sbb
mov
nop
or
das
nop
rcrb
test
adc
push
orb
daa
xchg
lea
js
jne
mov
and
out
pushf
xor
bound
pop
sub
fldt
cmp
or
add
insl
imul
and
jge
dec
aaa
out
mov
or
aad
xchg
test
call
imul
xchg
std
and
sbb
cs
lahf
lods
les
ljmp
push
fdivrs
lcall
data16
imul
ljmp
movsl
jbe
push
mov
dec
jns
or
outsb
not
or
adc
aam
sub
dec
push
xlat
dec
sbb
out
sub
sub
js
mov
lcall
adc
fidivrs
enter
jae
sub
push
dec
lcall
outsb
flds
lahf
push
and
clc
test
fsubs
mov
adc
lods
xchg
mov
or
jo
rcll
mov
cmp
push
lock
sbb
aaa
pushf
je
jb
adc
inc
les
cmp
jmp
jl
cli
movsl
xor
cmpsb
mov
cmp
sub
cmpl
pop
mov
nop
pop
add
cmp
fsubr
bnd
ljmp
sub
nop
jae
test
data16
mov
dec
test
aaa
inc
jae
lods
das
ljmp
loopne
pop
pop
xchg
mov
push
lea
ds
cmp
pop
insl
push
sub
ja
mov
out
xorl
sub
lods
adc
adc
jo
push
outsb
xor
push
call
leave
outsl
jp
pop
repnz
sub
and
testb
mov
xlat
pop
or
mov
fsubp
inc
mov
xor
sbb
scas
fwait
lcall
aaa
dec
or
cmp
jae
dec
sub
sarl
xchg
in
pushf
test
cmp
jl
dec
emms
test
sbb
aam
sbb
inc
std
cmc
xchg
jnp
mov
fcmovnb
cmp
jae
mull
fisubrl
mov
cmpsb
inc
sub
rclb
nopl
jmp
pop
and
arpl
mov
inc
push
sahf
shl
mov
aaa
add
inc
pop
pop
fisubl
fcomps
jmp
shrl
sub
push
mov
mov
out
icebp
ljmp
mov
addb
das
cmpb
rcrb
dec
out
dec
push
pop
mov
cmc
hlt
imul
mov
test
cmc
imul
inc
jb
jno
push
jg
push
test
fs
jmp
repz
cli
mov
fisubrs
pop
out
add
mov
loope
in
and
leave
jp
loope
in
xchg
out
data16
adc
or
mov
lock
pop
insb
test
pop
sub
ds
dec
fsubrs
add
or
dec
clc
movsl
js
add
dec
repnz
pop
sub
add
sbb
cmc
mov
in
sahf
ficomps
xlat
cmc
pop
jb
jnp
lcall
mov
sbb
sub
xchg
mov
insl
cmp
daa
int3
adc
lods
sbb
inc
pop
push
ljmp
test
add
cmp
cs
into
mov
push
dec
sbb
push
dec
fwait
test
movsb
test
jns
aaa
scas
je
mov
push
cmp
mov
mov
cmp
pop
lock
inc
and
mov
xchg
and
or
cmp
loope
jge
hlt
inc
mov
icebp
xor
fiaddl
mov
bound
sub
es
sbb
push
adc
sbb
add
jle
pop
arpl
push
inc
movsl
pushf
jo
fsubp
sbb
jmp
adc
cmp
inc
jmp
lock
in
xchg
call
adc
stc
push
stos
lahf
add
sub
cltd
dec
ds
jle
pop
push
mov
sub
leave
dec
xchg
icebp
cmpb
mov
cmp
loope
and
sbb
iret
sahf
mov
mov
out
es
jae
mov
sbb
inc
sub
push
lods
loop
and
cli
aam
sub
ficomps
push
js
xor
mov
sbb
pusha
cmp
cmp
inc
sahf
mov
loopne
dec
cmp
mov
adc
jns
pop
int3
pusha
mov
mov
push
in
mov
jbe
or
mov
or
popf
xor
pop
sahf
std
int3
and
clc
sahf
cmp
fs
dec
or
jg
mov
ljmp
rclb
decl
jmp
mov
jecxz
and
int3
mov
ljmp
mov
ss
int
cmpsl
mov
ror
mov
dec
xor
in
cmpsb
xor
add
dec
shr
mov
popa
in
iret
insl
sahf
or
cmp
cmp
loopne
in
jb
jb
aam
push
add
xchg
ffree
fs
sahf
sbb
les
push
inc
cld
int
jne
ss
mov
shlb
sbb
mov
gs
mov
xor
add
aaa
xor
hlt
popf
call
sub
xchg
insl
and
out
inc
xor
xor
push
push
add
sbb
test
push
jnp
repz
jo
xorl
out
push
add
push
pop
push
lret
sub
mov
fptan
inc
insb
jno
lock
addr16
pop
xchg
enter
arpl
scas
addr16
mov
rcll
negl
pop
fwait
jb
and
fwait
das
or
xor
xor
icebp
and
inc
aaa
leave
fidivrs
mov
imul
mov
fadd
pop
popa
inc
fnsave
xchg
movsb
mov
add
movsl
push
mov
mov
andl
imul
cld
push
mov
stos
pop
adc
push
in
pop
aaa
mov
xlat
lret
lcall
pop
jno
inc
punpckhwd
sub
xor
dec
incl
daa
dec
mov
xchg
mov
sbb
rorb
out
dec
adc
add
shl
sub
rorb
aas
cmpsb
xchg
insl
lret
dec
mov
xchg
add
push
pop
jg
aam
cli
push
push
in
stos
test
or
outsl
lcall
sub
inc
inc
xorl
adc
das
and
daa
dec
and
push
pop
dec
pop
insl
pop
fdivs
jmp
loopne
xchg
int3
sbb
dec
cmp
and
mov
daa
pop
andb
stos
je
lea
imul
sarl
jl
push
aad
or
flds
and
push
mov
loop
jecxz
leave
aas
fdivp
and
dec
ja
or
dec
dec
jno
sbb
mov
sub
ret
loop
aaa
adc
mov
out
jp
pusha
fildll
clc
push
push
xchg
mov
xor
push
movl
cmp
push
adc
xor
push
in
sub
les
xchg
gs
inc
rcll
xchg
adc
outsl
ss
jns
sub
and
aad
add
stc
in
xor
cmp
pop
lcall
jl
bound
loopne
mov
mov
adc
mov
sbb
pop
pop
insl
dec
int3
test
es
in
roll
sbb
imul
aaa
int
pushf
notl
fisubl
jl
cltd
decl
loopne
and
enter
stc
pop
push
pop
mov
pop
xor
push
pop
stos
and
mov
pop
loopne
mov
adc
mov
rcrl
mov
out
ret
je
push
cmp
push
or
push
adc
popf
xor
scas
cwtl
sbb
add
lds
lea
sub
lea
stc
int3
pop
movb
and
lret
pop
adc
add
cmp
stos
adc
imulb
push
js
xor
xor
es
adcb
ss
or
scas
push
dec
aas
sarl
mov
jle
call
jae
mov
sbb
stos
aam
popf
lds
mov
xchg
cwtl
mov
cmpb
adc
mov
cli
mov
adc
in
mov
pop
mov
xor
pop
and
lods
xor
add
inc
mov
lcall
popf
aad
sbb
pop
pop
out
mov
fimuls
sub
xlat
es
push
enter
hlt
adc
stos
pushf
js
xorl
push
outsb
ret
or
into
push
jp
lock
dec
sbb
sub
cmp
adc
out
cli
int3
xchg
pushf
and
sahf
mov
cmp
sbb
outsb
mov
shrb
dec
pop
test
sub
in
push
dec
test
mov
sub
stos
into
into
xor
mov
or
mov
ret
in
shlb
push
push
mov
xor
or
push
pop
pop
and
sbb
jnp
movsb
mov
test
xchg
testb
pop
sarl
add
ljmp
add
scas
test
je
inc
stos
cmp
movsb
sub
adc
outsl
bound
sub
cmp
mov
jnp,pn
dec
int3
test
adc
dec
sbb
mov
mov
jno
xor
dec
dec
dec
in
popf
adc
cmp
jmp
call
or
dec
rcll
filds
outsl
push
jns
adc
adc
xor
mov
mov
int3
insb
sub
or
daa
dec
sbb
mov
testb
cmc
pop
subb
jbe,pt
pop
lcall
js
scas
xchg
into
sub
fs
or
xchg
xchg
mov
sbbl
jae
cmp
cld
and
insl
cmp
mov
mov
bound
cmp
mov
and
std
in
sbb
jno
xchg
shll
and
ret
cmp
jmp
lds
lret
aas
add
dec
xor
je
jle
inc
pop
aad
add
pusha
jnp
xchg
jmp
fisubl
xor
pop
adc
mov
ljmp
push
inc
shlb
out
lahf
lea
push
inc
stc
xor
loop
xor
mov
sub
arpl
inc
aaa
inc
pop
cmp
lds
movsl
call
ret
sbb
andb
push
loopne
push
aaa
mov
xor
mov
pushf
jl
add
add
pop
es
shlb
cwtl
and
dec
mov
cmp
add
int
mov
inc
push
outsb
fildl
sub
pop
loope
loope
adc
gs
sbb
and
repnz
testl
sub
dec
daa
push
icebp
popa
and
pop
call
ret
es
int3
scas
mov
in
inc
sub
pushf
mov
jne
out
cmp
lock
mov
scas
mov
push
daa
nop
jl
scas
mov
das
mov
insb
push
push
pusha
subb
fwait
jne
pushf
jecxz
dec
imul
fbld
aas
mov
inc
outsb
dec
sbb
mov
sti
jnp
xor
mov
xchg
mov
jle
sub
cld
orb
adc
arpl
dec
jo
and
push
pop
inc
lahf
out
push
cld
jp
mov
add
lods
and
fwait
dec
sbb
add
mov
adc
pop
mov
dec
sub
lds
test
jg
adc
aam
test
add
nop
sbb
ljmp
jne
fwait
inc
fldcw
je
imul
popf
fdivr
and
cwtl
ds
stc
and
movsl
out
rcrb
clc
inc
inc
adc
xchg
adc
jae
pop
adc
cmp
lods
imul
sub
dec
inc
pmulhuw
lret
fcmovnbe
pop
jmp
pop
and
xchg
push
dec
cmp
inc
into
sub
sbbb
jecxz
sub
inc
jo
jecxz
ds
or
pusha
fisttps
bound
mov
lds
push
jno
mov
cmp
stc
inc
inc
xlat
pop
push
fwait
mov
out
xchg
int
arpl
daa
lahf
subl
addr16
and
out
lds
popa
sub
dec
pop
loop
pop
inc
mov
sub
mov
out
adc
sti
pop
popa
mov
fnstenv
popf
out
cmp
pop
inc
fbld
cld
sti
mov
xor
in
faddl
and
pop
pop
ja
mov
cltd
mov
jno
mov
jg
bound
je
dec
shl
cmp
xor
test
cld
xor
xlat
adc
pop
add
scas
out
outsb
and
sub
mov
or
mov
jo
mov
jecxz
test
repnz
cs
mov
jns
jnp
ror
cmp
sarb
cltd
lahf
inc
rcrl
clc
aam
ficoml
mov
jno
dec
imul
ret
repnz
in
xor
daa
clc
cmpsb
imul
pop
jno
lock
loop
xchg
add
inc
out
in
mov
and
mov
jne
xor
lods
lcall
addr16
loopne
lea
xor
addb
push
mov
mov
dec
shrb
xor
dec
xor
out
loop
fmuls
mov
pop
and
out
push
bnd
lds
xor
outsb
mov
in
out
push
xor
push
iret
adc
loope
sub
sub
pop
sahf
ret
jecxz
outsb
rol
pop
or
sbb
insb
stos
ret
push
scas
stos
fidivs
pop
jb,pt
mov
sub
iret
mov
and
xchg
xchg
cld
xchg
mov
adc
push
hlt
mov
test
xor
into
xchg
popf
bound
cwtl
jo
outsl
jl
and
pop
int3
jmp
lahf
mov
repnz
repz
push
adc
sbb
pop
jg
pop
mov
in
jno
mov
push
sbb
add
mov
jno
jp
xor
icebp
enter
push
test
movsb
mov
pop
mov
dec
mov
lock
call
sbb
lahf
fwait
lret
xor
sub
push
mov
int3
int
pop
pop
mov
aaa
inc
inc
loopne
movsb
iret
incb
aaa
or
and
or
xchg
add
js
sbb
mov
lock
inc
jnp
or
sahf
das
sbb
cltd
jno
outsb
jo
push
sbb
xor
aad
test
cmp
xor
lret
add
mov
dec
negl
cmp
iret
cmp
or
mov
movsl
insl
cltd
pop
xor
pop
ja
sti
roll
pop
mov
push
cmp
push
xor
pop
stos
xchg
mulb
enter
in
sbb
or
jno
ficompl
pop
push
addl
int
xor
fistpll
xchg
mov
inc
sbb
ljmp
add
lret
fsubl
xchg
aas
js
hlt
push
xor
incb
shll
add
in
addb
jp
ret
pop
push
in
dec
sbb
nop
fistps
popa
cmpl
scas
mov
mov
xchg
cmc
push
push
push
jo
mov
adc
int3
int3
mov
cmp
cmp
pop
push
mov
cmp
fwait
xor
hlt
hlt
and
pop
and
jge
sbb
jg
cmp
dec
test
enter
cltd
push
mov
sarb
jl
iret
push
mov
ret
push
psubw
cmp
stc
lcall
xlat
mov
push
int
cmp
and
lret
mov
mov
testl
dec
test
sbb
pop
pop
xor
sub
cld
push
cmp
rcll
adc
add
aad
fmuls
lods
push
jecxz
lods
stc
mov
lret
repz
inc
icebp
fisubl
dec
test
pop
mov
jle
in
and
sarl
adc
pop
inc
push
bound
loopne
lret
mov
jae
pusha
leave
in
int
cmp
cltd
cmp
stos
or
jmp
push
jbe
rcrb
test
mov
dec
sti
sbb
jnp
outsb
lret
shll
push
mov
cmp
incl
pop
jnp
and
sbb
es
xchg
xchg
fsts
xor
xlat
sbb
mov
mov
out
inc
or
add
in
das
imul
add
sbb
fisttpl
jae
jno
xchg
or
outsl
scas
lods
fmull
test
aas
les
sbb
or
repz
mov
jnp
vaddsd
das
lahf
jp
enter
push
mov
cli
pushf
sub
leave
or
das
loope
aam
mov
lds
mov
fucomi
dec
xor
mov
sti
stc
inc
iret
roll
mov
inc
xchg
xchg
jp
mov
das
out
xchg
loopne
shll
fs
scas
xor
cmp
sub
loopne
nop
jbe
ret
and
repz
and
xchg
mov
mov
mov
lret
shl
insl
mul
cmp
jge
adc
or
movsb
iret
bound
cmc
lahf
out
add
xchg
dec
xlat
add
fwait
test
aad
mov
and
icebp
push
mov
jecxz
into
stos
mov
fidivrl
pushf
jle
dec
push
sti
aad
sub
xchg
pop
ss
int
cld
inc
hlt
test
sub
cmpsl
ret
jecxz
test
jne
xchg
mov
dec
or
mov
repnz
inc
enter
fadd
scas
mov
jb
push
push
addr16
xchg
lret
xor
xor
sbb
push
sub
xor
xchg
pop
cmc
cld
mov
mov
adc
mov
push
scas
jae
fnstcw
out
adc
jb
push
push
mov
mov
lods
cmpsl
ret
int
lea
inc
and
push
cmp
test
in
jl
adc
sbb
icebp
pusha
push
mov
icebp
mov
mov
stos
or
ret
test
or
inc
add
adc
xor
pusha
or
mov
mov
mov
sbb
push
adc
sbb
push
xor
xor
das
jp
adc
cmp
jns
mov
pop
add
stos
xchg
push
inc
cwtl
rcl
sbb
push
sub
xchg
pop
push
cmp
or
jp
test
sahf
dec
jle
sbb
dec
sub
jno
push
pop
js
pop
cwtl
and
push
xor
daa
loop
outsl
xor
mov
pop
repnz
or
mov
lret
cmp
les
and
jmp
add
fisttpll
imul
imul
jg
pushf
test
xchg
inc
mov
daa
inc
popa
ljmp
jecxz
call
scas
cmpsl
adc
test
mov
jge
sbb
stc
cmpsb
pop
pusha
mov
mov
pop
fwait
cli
out
nop
mov
ds
cs
push
add
sbb
shlb
in
adc
int3
adc
andl
daa
jge
and
push
outsb
lock
test
sahf
pop
shl
cs
inc
jno
dec
cmpsl
jmp
cmp
lar
je
jge
adc
sub
ss
movsb
xchg
subb
and
imul
sbb
mov
pop
test
ds
push
icebp
pop
inc
dec
arpl
sbb
rorl
sbb
pop
roll
pop
jno
jp
icebp
inc
in
xor
sbb
add
add
icebp
push
adc
or
push
mull
mov
fmuls
gs
cli
cld
aam
mov
and
xchg
in
push
pop
hlt
ss
call
mov
adc
push
hlt
fsubr
lods
imull
mov
mov
pop
xchg
mov
stc
mull
hlt
add
mov
jmp
loope
cmp
sbb
test
mov
ja
and
xor
mov
pop
add
call
push
fisubrl
push
sbb
push
scas
pop
dec
movsl
xchg
add
xchg
pop
cmp
out
lret
dec
mov
and
inc
cwtl
sbb
fimull
movsl
cli
mov
call
or
fs
jae
int3
mov
pop
nop
mov
pop
cmp
sub
test
mov
ljmp
pop
and
enter
mull
jb
into
shll
and
pop
inc
add
push
ljmp
test
aam
fimull
pusha
dec
adc
jecxz
cwtl
icebp
add
push
mov
lret
in
fst
sub
shll
stos
sub
notl
adc
dec
cmp
inc
jecxz
xorps
test
adc
jmp
je
xchg
iret
inc
push
arpl
out
mov
popf
inc
out
call
shll
imul
mov
mov
xchg
scas
popa
aam
inc
daa
pop
es
loop
xor
lods
nop
mov
sub
jmp
dec
xchg
je
rcrb
xchg
pop
loope
mov
in
sbb
add
push
push
int3
repz
xchg
sub
mov
pop
rol
adc
cmp
lds
mov
scas
push
mov
das
lods
pop
neg
fildll
push
cmpsb
push
ficoml
int3
imul
dec
in
mull
inc
nop
inc
cmp
and
inc
or
push
stos
fdiv
js
loopne
dec
adc
mov
jno
test
ss
fwait
jnp
orb
jg
sbb
jbe
adc
mov
jl
pop
dec
inc
jle
dec
mov
jg
or
push
dec
push
cmpsl
cmp
push
mov
repz
scas
or
mov
sti
pop
sbbl
lock
pop
stos
jecxz
enter
dec
jmp
stos
push
pop
test
xor
stc
dec
orl
mov
sub
mov
push
ret
xor
lcall
xlat
push
mov
neg
sub
add
outsb
sahf
mov
xor
call
push
and
push
and
pop
add
xchg
enter
inc
in
ja
leave
gs
and
call
andb
mov
test
js
and
mov
pop
jg
mov
pop
pop
mov
lods
add
adc
sti
pop
mov
mov
push
and
imul
scas
cs
add
nop
aam
ja
sub
mov
cmp
sub
fwait
in
pinsrw
sti
int
call
mov
mov
push
inc
popa
push
into
cmp
xchg
mov
pusha
fs
mov
push
xor
cmp
sbb
jns
cmp
sub
sub
mov
rcrl
cwtl
loopne
mov
adc
add
jb
test
arpl
int3
mov
mov
popa
neg
cmp
add
push
int
jno
movsb
outsb
mov
int
ret
or
pop
or
ret
pop
jp
jle
adc
fsubr
mov
and
mov
jecxz
pop
inc
hlt
mov
in
repz
addr16
cltd
sub
out
push
mov
lock
sahf
fdivs
adc
sbb
inc
cwtl
lret
popf
ret
aam
dec
out
enter
pop
sti
inc
sti
mov
nop
pop
pushf
or
sahf
test
bound
lret
xchg
popa
pop
lret
push
jns
test
add
stos
xchg
jno
cmpsb
mov
mov
xor
scas
sub
jae
pushl
pop
fimull
inc
in
mov
int3
std
and
mov
hlt
mov
cwtl
int
loope
aaa
int
loopne
es
in
mov
lods
scas
in
xor
sbb
pop
nop
adc
push
fmuls
mov
iret
loop
ljmp
je
scas
jl
nop
daa
sbb
rep
pop
fs
cld
pop
push
imul
das
cmpl
jge
pop
imul
test
and
sbbb
leave
ret
sbb
sbb
add
ja
push
aaa
jns
cmp
jmp
sub
jge
scas
mov
es
outsl
mov
cltd
sub
idivb
cld
outsl
loopne
lret
loope
into
push
push
mov
fidivrl
das
add
or
popw
pop
test
mov
dec
cltd
popa
clc
and
mov
ja
inc
jge
dec
jg
pop
mov
jge
out
jb
test
enter
pop
sub
lods
dec
iret
sub
cmc
fwait
mov
jmp
jne
add
bound
pop
nop
fdivl
cmpsb
jne
lcall
cmp
outsb
mov
scas
fidivs
test
push
adc
out
negl
jl
xchg
push
adc
int3
and
out
cmpsl
jmp
add
cmp
mov
rclb
dec
xor
out
dec
mov
enter
jp
xchg
xchg
cmp
popf
into
mov
pop
out
je
movsl
popf
xchg
fwait
in
ja
sti
dec
push
stc
jo
xchg
jne
mov
ret
adc
mov
sub
xor
mov
dec
lods
into
xchg
loopne
xchg
jns
int3
add
sbb
xor
out
mov
sahf
inc
mov
rcrl
in
pushf
pusha
adc
int
pop
cltd
insl
xchg
mov
out
andb
mov
bound
and
sbb
icebp
adc
mov
into
vunpcklps
xchg
js
fisubs
lret
mov
xorl
cmc
xor
scas
arpl
inc
aaa
push
push
lret
push
push
xor
rcr
cs
or
push
inc
dec
jno
hlt
pop
imul
pusha
out
sub
lahf
ror
mov
nop
arpl
inc
mov
pusha
popa
cmp
mov
enter
imul
xchg
bound
xorb
sbb
cmp
adc
das
push
push
adc
dec
pop
xor
lahf
rolb
leave
sbb
mov
add
leave
dec
mov
pop
cmp
inc
pop
and
mov
insb
hlt
popf
flds
dec
add
push
dec
lock
adc
adc
dec
lds
pop
mov
pop
scas
sbb
pop
ss
xor
lea
cmp
lods
sti
xor
daa
ljmp
mov
cmpsl
incl
cmpsb
push
mov
and
mov
lds
jp
xor
mov
or
cmp
mov
lea
arpl
daa
sar
add
mov
sub
mov
ret
rorl
mov
add
cmp
pushf
inc
cltd
cld
leave
lea
push
loope
ja
xor
stos
and
jl
imul
mov
mov
ror
or
sbb
out
mov
pop
int
out
mov
outsb
ljmp
ret
push
stos
cmpsb
jle
sub
stc
fmull
xor
mov
movsb
sub
ljmp
push
aad
xchg
cld
add
push
shlb
das
push
ret
stos
cmpsl
hlt
in
repnz
and
rcrb
cmp
fsts
pop
xor
inc
cmc
mov
into
mov
test
inc
stos
cld
mov
jno
std
xor
adc
in
inc
cmp
icebp
lds
iret
add
and
push
inc
mov
and
inc
and
sub
push
insl
pop
dec
jg
inc
popf
clc
fs
sbb
cmpsl
es
outsb
xor
idiv
sbb
push
inc
aad
stc
xor
andb
aaa
shr
inc
add
icebp
ss
insl
cmp
sub
mov
inc
cli
add
jns
mov
fwait
xor
pop
popa
jbe
in
push
pop
pop
jne
and
or
or
jle
jno
lea
dec
xchg
dec
shr
cmp
rolb
pop
inc
mov
adc
int
scas
mov
or
add
popa
sbb
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
dec
add
dec
add
add
add
add
add
add
add
