inc
xchg
mov
idivl
fcoml
or
lods
jns
lret
adc
jno
mov
inc
mov
xor
and
nop
xchg
imul
sbb
mov
insb
or
out
mov
aad
xchg
out
mov
pop
imull
icebp
cmp
std
stc
sbb
adc
fwait
aam
mov
jp
daa
and
addb
xor
inc
ret
mov
add
mov
and
sbb
sbb
mov
jp
mov
adc
out
iret
lahf
in
cmpsl
std
insl
and
adc
or
inc
mov
imul
mov
and
test
inc
insb
loop
out
jns
sbb
je
mov
aad
xchg
pop
sbb
call
mov
outsl
push
inc
mov
xchg
and
inc
mov
xchg
outsl
cmp
xchg
sbb
cmp
xchg
pushf
xor
pop
mov
adc
and
add
adc
icebp
shl
jl
hlt
dec
scas
je
mov
fst
lock
jg
lods
in
xchg
inc
in
cmp
aaa
push
iret
xchg
aam
scas
jae
and
js
dec
test
mov
cmp
sub
inc
mov
movsb
mov
inc
std
xor
daa
ds
out
mov
xchg
fisttps
adc
or
sbb
sarl
dec
xchg
sub
stos
jle
stos
pop
popa
inc
lods
sub
cmp
insb
repnz
inc
into
dec
ret
jnp
data16
pop
or
stos
mov
adc
mov
jecxz
xchg
fprem
xor
sbb
jg
das
aas
inc
in
fs
mov
call
xchg
int3
jp
xor
sub
or
rolb
imul
push
icebp
cmp
sbb
sub
sbb
inc
cmpsb
jmp
rcr
jno
sti
imulb
xor
lock
movsb
xchg
push
pop
in
pushf
sbb
mov
test
movsb
cmp
mov
cmp
pop
jnp
mov
fmull
lahf
mov
icebp
loopne
subb
bound
sub
push
cmp
xchg
cmp
mov
adc
inc
push
adc
sub
mov
insb
mov
fstpl
repz
push
mov
repnz
setns
fisttpl
iret
stos
adcb
loop
and
push
adc
jecxz
test
pop
and
cmpps
mulb
mov
loopne
leave
dec
loopne
mov
adc
mov
xlat
cmpsb
dec
fcomps
loope
push
cs
scas
out
sbb
mov
mov
insl
cwtl
jl
adc
cmpl
jns
inc
xchg
fcmovnb
mov
cwtl
mov
jo
sbb
jp
dec
int
int
lcall
mov
xlat
pop
pushf
aas
dec
inc
lods
dec
pop
jb
adc
cmp
mov
mov
push
inc
testb
or
add
fmull
pop
rcrb
pop
mov
shlb
sbb
mov
push
push
roll
jbe
push
ret
icebp
mov
fidivs
inc
or
mov
push
xchg
cltd
iret
daa
and
pop
mov
test
jne
ficoms
xor
ret
inc
cmp
sbb
or
mov
fisubl
dec
fnstcw
cmp
out
push
inc
test
outsl
ja
xchg
in
cmp
repnz
sbb
or
inc
cmp
xor
js
sub
scas
mov
jae
out
adc
push
int
daa
mov
mov
divl
and
dec
fistps
pop
insl
fmul
cli
xchg
nop
cmpsb
repnz
push
outsb
rorb
mov
mov
sub
jp
pop
frstor
loop
adc
xlat
push
push
dec
lods
xchg
pop
push
sbb
iret
sbb
imul
xlat
pop
das
mov
xor
mov
dec
fidivs
jbe
faddl
sbb
pop
sarb
mov
sbb
push
addr16
stos
mov
fistpll
fisttpll
stos
lock
cmp
inc
lret
dec
push
fcmovb
lret
data16
or
fistpll
divl
lret
es
imul
sbb
and
test
mov
mov
in
lcall
xor
add
fidivl
psrad
sti
and
daa
out
pop
jmp
pop
mov
mov
push
pop
jnp
dec
dec
into
repnz
idiv
test
jl
cmp
or
mov
test
mov
xor
pop
xchg
push
mov
mov
cmc
push
int
ret
int
shl
sbb
xchg
lods
fstl
ljmp
push
xchg
push
cmp
test
cmp
daa
mov
sub
push
dec
rolb
insb
jg
inc
cmp
pop
push
fimull
mov
pop
sub
and
lret
lcall
push
rorb
dec
call
jecxz
div
mov
scas
outsl
js
cmp
cld
mov
mov
scas
mov
sub
sub
cltd
fisubrs
into
aaa
or
sub
shrb
sub
clc
hlt
inc
aaa
int
mov
notl
std
fstp
jo
pop
mov
and
stos
cmp
gs
cmp
ljmp
xchg
inc
enter
pop
mov
and
mov
add
ror
arpl
mov
mov
cmp
mov
loop
shrl
dec
addr16
insb
mov
jp
jmp
inc
fsubrp
dec
mov
inc
mov
jbe
insl
inc
pop
ss
push
in
adc
push
fistps
loope
les
in
push
dec
or
and
push
ja
pop
dec
cs
dec
or
loope
clc
push
das
pop
sub
cmc
lcall
bound
push
cmp
rolb
mov
testb
or
jns
iret
gs
push
and
sahf
out
clc
nop
js
das
das
or
push
adc
jp
and
xchg
iret
push
out
pop
mov
dec
xchg
sub
inc
and
decl
add
push
orl
sub
mov
out
int
pop
pushf
mov
sti
adc
nop
or
lret
arpl
mov
sbb
call
sbb
adc
xchg
sub
xor
cmpsb
push
fsts
movsb
cld
jae
adc
inc
jnp
dec
and
adc
dec
push
cmc
xchg
ljmp
mov
and
dec
xor
sbb
push
push
ret
lret
test
enter
push
out
test
fstps
subb
jno
test
mov
and
add
mov
sahf
shrl
and
push
cmp
or
lret
cmpsb
cmp
popa
adc
pushf
cld
lds
mov
lahf
sub
js
in
pop
inc
ja
push
or
testl
mov
and
fdivl
imul
mov
adc
dec
dec
fwait
sub
cwtl
pushf
mov
es
and
pushf
outsb
int
push
mov
lock
push
test
stos
das
lcall
jns
push
cwtl
dec
mov
xor
popf
jb
ret
adc
std
in
xchg
loope
dec
test
cmp
rclb
pop
pushf
imul
mov
je
jge
sub
adc
es
sbb
fs
xor
test
jns
mov
push
stos
dec
icebp
in
inc
ret
xor
out
mov
jno
or
bound
in
inc
iret
mulb
or
fsubs
and
js
lahf
push
aaa
pop
lret
push
mov
mov
mov
fistps
test
cmp
sub
adc
popf
addr16
inc
push
pop
mov
mov
repz
xor
xor
jecxz
inc
pop
movsl
jg
aaa
push
adc
xchg
mov
insb
repz
sahf
mov
and
jb
push
ret
test
cwtl
pop
or
sahf
jecxz
add
jecxz
in
fcomps
cmp
cmp
mov
fdivrp
lods
cli
test
jg
lock
loop
clc
subps
jb
fistl
test
sti
fs
xor
sbb
push
xchg
sbb
imul
leave
jge
lea
xchg
stos
lds
xor
sub
ja
pop
mov
outsl
mov
jecxz
jmp
insb
repnz
andb
ret
cmp
bts
std
js
cltd
adc
lret
xchg
xor
inc
fdivrp
fwait
mov
nop
mov
jecxz
and
xchg
sub
cld
fld
mov
jo
add
rorb
mov
leave
loop
jne
mov
inc
insl
mov
add
mov
sub
fistpll
stc
lahf
movsl
iret
inc
nop
insb
jecxz
dec
jnp
ja
aad
ljmp
stc
sbb
jg
xor
insl
adc
mov
test
xor
sub
xor
mov
pushf
arpl
push
sbb
arpl
call
and
mov
int3
cld
std
pop
adc
sbb
sub
mov
mov
fisubl
xor
xor
subb
fistpll
fbstp
mov
inc
hlt
jb
pop
jns
test
test
jno
stos
and
cmp
mov
fisttps
pop
dec
nop
movsl
arpl
scas
jg
enter
insl
cli
stc
jnp
out
pop
inc
jno,pt
pop
pop
imul
jp
lods
mov
mov
cmp
in
push
xor
push
jp
fnstenv
pop
dec
push
pop
inc
sub
in
decb
mov
aaa
cs
clc
popa
and
insb
push
mov
sub
pop
mov
fildll
ficomps
imul
push
lds
or
bound
xchg
nop
push
jnp
push
push
xchg
mov
or
mov
inc
push
lret
mov
lods
inc
mov
mov
data16
add
push
sbb
mov
mov
jae
out
nop
push
stos
shl
pop
push
sub
insl
outsl
xchg
sbbl
push
and
add
add
inc
stc
lret
in
sub
out
jns
jecxz
mov
mov
fucomi
push
outsb
movd
xchg
jmp
aaa
sub
mov
lock
icebp
test
dec
mov
mov
out
fdivs
sub
scas
and
mov
ret
negb
aaa
xchg
sub
xchg
mov
mov
cwtl
pop
movsl
jg
lods
lahf
xlat
or
fwait
sub
xor
insl
jp
cmp
nop
cli
push
out
arpl
xor
leave
stos
js
iret
xorl
icebp
push
mov
stos
adc
pop
cmp
fmull
les
cld
jge
and
mov
in
imul
sarb
lahf
addb
das
aaa
xchg
data16
out
jmp
jbe
popa
and
sbb
mov
jno
mov
mov
mov
mov
pop
xchg
movsb
mov
daa
out
imul
push
rolb
cld
loop
shlb
or
mov
mov
add
sarb
mov
xor
out
arpl
adc
fisubrl
xlat
or
push
out
dec
cmp
or
ljmp
mov
push
xor
popaw
jbe
pop
fstps
sar
xchg
xchg
pop
push
daa
stos
aaa
sub
jae
int
cld
jbe
mov
and
negl
or
cmc
aaa
add
dec
rorl
xor
mov
outsl
mov
sbb
adc
sbb
adc
jno
sub
lods
xchg
es
pop
adc
push
push
fiadds
mov
push
sub
mov
cmp
mov
cltd
and
push
dec
and
mov
inc
sbb
inc
add
mov
push
jl
mov
push
outsl
in
push
mov
mov
sub
aas
sbbl
jecxz
xor
add
jle
into
mov
sbb
push
jecxz
pushf
int3
cmp
filds
push
rolb
push
sub
jb
jp
nop
inc
cltd
mov
sub
adc
mov
jnp
cmp
mov
stos
add
pop
ljmp
scas
xchg
jae
std
cmp
aad
pop
push
xor
addb
xorb
mov
xorb
inc
xchg
inc
cmp
test
ljmp
in
sti
jbe
jns
pop
pop
adc
nop
mov
and
push
mov
xchg
stc
cmp
push
cmp
xor
and
aas
xlat
inc
rcrl
push
cmp
mov
add
mov
sub
test
popf
lahf
pop
sub
fsubs
push
dec
jge
lods
lods
push
mov
je
lds
call
dec
scas
lods
in
aad
and
test
lods
xchg
and
sub
mov
mov
popa
cltd
push
out
push
stc
jne
imul
xor
notb
mov
in
out
xlat
cmp
or
pop
leave
aam
aam
pop
xchg
popa
jns
out
loopne
fstpl
lock
inc
dec
fld
sub
cmp
jns
mov
pop
or
bound
xchg
dec
out
gs
cmp
push
pop
ret
xlat
sbb
inc
call
dec
push
xchg
nop
jne
imul
xlat
lahf
fst
ss
lcall
jmp
push
adc
adc
cmp
dec
lret
mov
lret
insl
insl
ja
insb
add
jmp
cmpsb
aaa
inc
sahf
lea
popa
es
pop
mov
aaa
rcr
fists
and
xchg
fldenv
stos
pop
sub
jnp
and
add
in
adc
cmp
jb
call
adcl
xor
jl
push
or
mov
xchg
xchg
negb
jl
xchg
nop
fsts
data16
out
test
test
aam
mov
jb
push
sub
or
aad
sbb
push
sbb
enter
add
aaa
jae
mov
fwait
aas
cmc
js
lock
xchg
jb
imul
outsb
jecxz
inc
inc
ror
cmp
sub
stc
sbb
cmpl
gs
data16
aaa
add
and
arpl
pop
fwait
xchg
dec
leave
xor
ljmp
lods
subb
jnp
test
dec
les
outsb
pop
push
or
or
sbb
pushf
or
mov
je
call
mov
arpl
and
cmpxchg
lahf
inc
jno
mov
jl
add
sub
ljmp
sbb
enter
shl
hlt
xor
fldl
lods
sahf
push
paddsb
and
push
add
sub
cmp
jne
pop
ret
mov
rorb
mov
jmp
jl
shl
in
dec
push
adc
dec
mov
xchg
jle
lret
pop
add
sub
or
or
call
add
xor
push
xor
sbb
jbe
or
jnp
std
xor
pop
and
adc
mov
mov
imul
cmp
xor
daa
mov
xchg
test
mov
mov
jb
scas
sub
xchg
fs
je
outsb
clc
in
inc
push
movsb
pop
sbb
xchg
pop
sti
loop
sbb
push
push
incl
movsl
mov
mov
nop
or
andl
push
push
sub
xor
inc
xchg
hlt
ds
fstl
pop
ja
and
sbb
fcmove
add
sbb
or
mov
push
repz
sti
jno
bound
adc
sbbb
imul
jecxz
es
ljmp
sbb
xchg
push
jg
repnz
jl
adc
ficoml
hlt
fisubl
dec
sbb
bound
subl
test
stos
push
out
cld
addr16
dec
jl
aam
push
and
leave
pop
xchg
clc
aam
jno
pop
sahf
mov
and
fisubrl
sbb
gs
sub
xor
mov
loop
sub
int
loop
dec
outsl
sbb
xchg
and
push
and
mov
int3
shl
xchg
push
mov
adc
mov
cmp
repnz
adc
cltd
dec
xor
and
adc
push
insl
ret
dec
push
mov
inc
sbb
push
push
in
and
fisttps
cld
jno
and
fucomp
inc
xchg
nop
testl
jno
data16
add
ja
xchg
aas
jbe
and
je
adc
inc
or
popf
adc
adc
int
and
and
aas
imul
mov
and
lea
insl
leave
xchg
adc
cmp
stc
sub
movsb
xchg
lods
add
inc
out
dec
fildll
add
or
inc
cmp
arpl
out
fildl
cmp
mov
imul
movsbl
mov
adc
cwtl
jp
adc
mov
cld
mov
sbb
aas
pop
outsb
std
mov
pop
lods
lahf
jb
cmc
dec
cld
test
fmul
bound
fnstsw
idivb
das
shrl
scas
sub
arpl
mov
and
add
test
cli
jmp
popa
popa
push
jecxz
pop
mov
inc
sub
lods
in
add
inc
aas
out
pusha
jb
sub
or
pop
mov
or
loopne
sbb
je
es
in
cltd
mov
and
int
sub
scas
pushf
jno
xor
shr
mov
mov
or
xchg
xchg
lock
or
or
insl
pop
shlb
push
inc
pop
orb
mov
test
scas
shll
lahf
daa
repz
mov
rcrl
icebp
jmp
sbb
jecxz
sub
data16
stc
xchg
and
or
sbb
and
lret
jl
mov
inc
ds
sub
fimull
mov
das
mov
push
sbb
mov
loop
push
mov
out
mov
dec
sbb
adc
cwtl
pop
push
adc
dec
int3
aaa
jns
or
ss
adc
ss
ljmp
arpl
xor
adc
push
cmpsl
into
mov
push
dec
imull
mov
cmpb
xor
and
test
push
mov
std
ds
jmp
stos
rorb
push
push
orl
dec
pop
iret
movb
and
xorl
lahf
adc
mov
cmp
dec
add
cmove
test
int3
push
addr16
repnz
pop
jnp
sbb
decl
jp
pop
xchg
insl
add
scas
xchg
xchg
daa
xchg
ss
addr16
sahf
and
xor
xchg
pop
add
add
push
inc
in
mov
mov
add
fwait
mov
or
inc
loopne
rcr
push
xchg
shlb
rorb
sbb
mov
sbb
cmpsb
mov
jl
jnp
jns
outsb
jno
daa
jge
pop
or
xor
pop
aam
and
andb
negb
jno
test
mov
sbb
lret
jbe
out
jp
lods
cs
fs
stos
repz
and
jecxz
in
cmp
aam
add
aam
jnp
ss
flds
ret
jno
lret
loope
mov
mull
pop
adc
repnz
mov
xchg
fisubs
mov
pop
repnz
call
pushf
pop
loopne
decb
sub
push
ja
mov
push
lcall
pushf
clc
and
sti
sbb
sub
mov
or
mov
sbb
cmp
dec
gs
add
movsb
sub
pop
mov
call
and
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
cltd
leave
add
cltd
leave
add
cltd
leave
